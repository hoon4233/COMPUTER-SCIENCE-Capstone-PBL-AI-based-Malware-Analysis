push
pop
ret
nop
ret
lea
ret
lea
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
jmp
mov
jmp
mov
push
mov
xor
push
push
push
mov
inc
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
mov
sub
ret
add
call
pop
pop
xor
mov
and
pop
pop
or
fmul
call
loopne
adc
cdq
out
aad
pop
mov
inc
xchg
in
mov
jbe
xchg
sahf
cwde
(bad)
cmps
rcr
inc
arpl
add
inc
enter
ret
mov
add
jecxz
ret
mov
jne
jle
pusha
jbe
mov
sub
sub
lods
rcr
fldln2
hlt
add
mov
sub
stos
mov
jge
cmps
in
cwde
mov
lahf
inc
inc
aas
aaa
test
rcl
in
idiv
das
cmp
not
jmp
test
mov
cvtpi2ps
dec
inc
addr16
pop
es
add
in
bound
cmp
xor
retf
(bad)
inc
pop
js
mov
cdq
adc
and
popa
lds
aaa
cld
aam
ret
rol
fucomi
jno
mov
or
pop
mov
pusha
mov
es
sbb
and
xchg
dec
ins
leave
loope
jne
ds
jecxz
cwde
data16
lods
jg
sub
dec
xchg
repnz
xchg
(bad)
loopne
xchg
(bad)
jns
test
mov
add
retf
dec
jnp
hlt
sbb
out
retf
es
sub
mov
inc
push
pop
mov
sahf
mov
push
add
fwait
das
hlt
and
sub
fld
and
shl
mov
dec
fxam
ds
xchg
jg
mov
(bad)
lods
jo
sbb
cld
leave
mov
pushf
sahf
mul
loope
out
adc
mov
xor
pop
popa
xor
sub
push
jge
jge
cmp
fwait
xor
xchg
ret
sub
aad
mov
test
hlt
mov
ins
sub
fwait
cmp
push
xor
fs
sbb
mov
stos
jnp
aam
popa
or
jle
je
in
adc
jbe
xchg
imul
jl
push
jae
dec
and
lock
bound
and
mov
pop
and
(bad)
cmp
push
cmps
loope
add
ins
(bad)
lods
enter
sbb
mov
movs
mov
mov
(bad)
test
mov
out
jae
fldcw
adc
pop
pop
repz
jge
out
ret
test
stos
push
out
mov
jecxz
test
gs
(bad)
sti
dec
pop
inc
sub
mov
into
lahf
mov
push
mov
cmps
aad
adc
mov
sub
outs
adc
jge
fild
pop
aad
out
pushf
and
or
adc
jae
jo
mov
cmc
lea
out
dec
fsubr
jae
add
test
jle
pop
push
add
pop
push
sub
(bad)
out
or
movs
lea
aas
outs
push
jb
imul
dec
mov
sub
into
test
mov
cmp
mov
dec
aad
inc
push
(bad)
movs
adc
mov
adc
lock
push
test
xchg
rol
push
aaa
and
dec
push
or
xlat
mov
add
in
inc
stos
push
push
jle
mov
pop
ror
push
scas
xlat
mov
mov
and
mov
add
popa
leave
ss
stos
fs
mov
or
das
sub
or
jns
mov
pop
ins
and
pop
in
jge
xchg
dec
and
cmp
retf
mov
mov
cs
shl
xchg
loop
sti
push
fisubr
adc
ds
mov
aad
sti
sbb
jo
push
sbb
aaa
test
es
sahf
loopne
clc
mov
inc
sub
not
mov
lahf
adc
(bad)
adc
loopne
ins
add
out
cmps
sub
fcomp
mov
push
out
push
retf
jno
dec
push
(bad)
fwait
iret
pop
xor
pop
pop
fwait
cmps
cld
mov
loopne
xlat
clc
sbb
cmp
es
jmp
inc
loopne
and
loopne
jle
xchg
sysexit
mov
cmp
in
xchg
mov
out
fld
(bad)
push
fmul
scas
adc
ror
dec
leave
sub
jnp
mov
push
and
sbb
cmp
jg
xor
into
call
xchg
je
pop
push
shr
xor
jae
cwde
xchg
nop
daa
xchg
imul
in
adc
adc
(bad)
in
movs
jbe
sbb
scas
adc
daa
mov
add
out
test
cmovle
mov
sahf
dec
out
xchg
mov
sbb
outs
inc
add
pop
push
fiadd
fwait
adc
loop
pop
xchg
adc
xchg
pop
inc
sub
mov
push
sbb
pop
loop
lea
cli
sahf
imul
outs
int3
adc
(bad)
mov
push
dec
cmps
or
ror
cmp
test
jo
dec
fwait
cli
pop
adc
cli
mov
xor
paddw
pop
or
pop
sub
cmp
and
lock
inc
fld
cmps
lock
test
fwait
stc
mov
test
in
mov
mov
shl
mov
xchg
mov
xor
push
fisubr
popa
fnstcw
sbb
arpl
fwait
xor
push
inc
dec
pop
fcmovu
cmp
ins
add
dec
xor
mov
je
dec
loop
ins
mov
pop
xor
(bad)
in
inc
xor
imul
not
dec
fsubr
xor
add
fsub
sbb
stos
lea
out
(bad)
enter
sti
out
mov
mov
lock
adc
in
pop
cmp
cld
inc
push
les
lds
les
fstp
aad
cmps
add
sbb
sar
push
les
mov
or
xchg
sbb
repz
jg
sub
jnp
loopne
mov
mov
out
cld
pusha
jl
mov
test
into
je
xchg
cmp
shl
mov
and
or
jbe
dec
sub
stos
popf
pop
(bad)
xchg
les
inc
jge
test
je
add
or
jmp
test
mov
sbb
prefetch
or
lahf
fwait
shl
dec
or
jp
sbb
ret
sbb
retf
daa
pop
ret
in
sbb
sbb
test
and
jo
xchg
icebp
pop
add
xchg
es
imul
dec
mov
lea
mov
adc
or
sub
dec
sbb
fwait
pop
mov
sbb
jl
mov
div
mov
addr16
push
dec
ror
data16
add
jns
mov
jne
mov
outs
xchg
loope
adc
and
fldenv
mov
mov
(bad)
out
popa
adc
pop
adc
xchg
xor
xlat
test
or
movs
aad
scas
test
push
int
mov
mov
shl
mov
das
xchg
jne
sbb
call
(bad)
loop
mov
jbe
xor
adc
push
mov
or
(bad)
cld
mov
ins
pop
pusha
push
xchg
mov
rol
aaa
retf
mov
fdiv
fcmovb
(bad)
pop
test
aaa
sub
test
push
ja
imul
or
jae
imul
pusha
aam
sar
cmp
cs
nop
out
jp
pushf
inc
sbb
sbb
call
and
sbb
sbb
int
fsubr
push
pushf
mov
xchg
ror
icebp
aaa
outs
cmps
xor
aam
imul
cld
or
push
cmps
inc
inc
outs
push
xlat
dec
mov
mov
call
adc
xchg
mov
mov
jmp
xchg
scas
daa
add
(bad)
(bad)
mov
sar
in
dec
add
inc
inc
inc
push
jno
inc
shr
push
jg
dec
pop
adc
sub
dec
int
scas
lds
jnp
adc
jmp
adc
dec
sbb
pop
arpl
ins
mov
pop
shl
mov
xor
fbstp
leave
dec
(bad)
pop
mov
sub
push
fcom
nop
adc
or
inc
xchg
dec
in
(bad)
fisttp
lahf
test
xchg
xchg
outs
out
push
mov
sti
sub
adc
(bad)
movs
mov
mov
add
xchg
cmp
pushf
out
sub
bound
gs
sbb
fsub
sahf
out
xor
mov
and
inc
dec
and
jp
adc
icebp
cmp
rcr
xchg
fild
jne
or
in
aaa
or
arpl
and
xchg
clc
xchg
out
mov
aas
fisubr
mov
pop
pop
movs
jl
leave
iret
push
lock
addr16
inc
push
retf
addr16
cwde
adc
sahf
cli
dec
test
add
call
cmps
repnz
mov
dec
xchg
loopne
jbe
or
mov
sbb
inc
nop
(bad)
jno
pop
push
popf
call
pop
stos
cmc
inc
mov
and
dec
cwde
jecxz
jns
cvtps2pd
sbb
mov
dec
xchg
fisubr
je
or
jmp
or
inc
mov
and
mov
xor
pop
test
ds
pop
push
add
loope
ja
or
test
sbb
stos
add
or
stos
push
jg
adc
mov
and
sbb
dec
fwait
std
das
inc
lds
pop
lods
icebp
cmp
rcr
xchg
fistp
jne
or
mov
sbb
stc
inc
(bad)
fsub
pushf
out
jge
pop
pop
test
and
add
sub
movs
in
cmp
inc
xchg
(bad)
jae
sbb
xor
lods
out
(bad)
fsub
outs
mov
xor
adc
cmp
mov
dec
xchg
loopne
jbe
or
mov
sbb
inc
nop
(bad)
jo
lahf
push
popf
call
pop
stos
cmc
inc
mov
and
dec
cwde
jecxz
jns
cvtps2pd
sbb
mov
dec
xchg
fisubr
je
or
jmp
or
inc
mov
and
mov
xor
pop
test
ds
pop
push
add
loope
ja
or
ror
gs
jo
fsub
bound
xor
into
adc
mov
and
add
in
jp
jo
out
jge
rcr
xchg
fistp
ror
mov
sbb
stc
inc
(bad)
fisub
pushf
cmps
xor
push
or
aad
retf
dec
xchg
sub
out
add
rcr
data16
inc
xchg
(bad)
jae
or
xor
int
and
add
push
xor
adc
cmp
mov
dec
xchg
loopne
jbe
or
mov
jl
rcr
mov
xor
pop
call
and
dec
cwde
jecxz
jns
dec
pop
movs
mov
add
std
dec
xchg
fsubr
je
sbb
xor
int3
pop
lods
clc
inc
mov
and
mov
xor
pop
clc
repz
pop
push
add
loope
ja
or
mov
pop
gs
inc
xchg
fsub
jb
or
jmp
xor
and
add
in
jp
adc
icebp
cmp
rcr
xchg
fild
jne
or
in
aaa
or
arpl
and
pushf
out
jge
adc
hlt
aas
mov
and
add
sub
movs
out
cmp
cld
inc
xchg
(bad)
jae
or
xor
lods
test
add
call
cmps
repnz
mov
dec
xchg
loopne
jbe
or
mov
sbb
inc
nop
(bad)
jno
pop
push
popf
call
pop
stos
cmc
inc
mov
and
dec
cwde
jecxz
jns
cvtps2pd
sbb
mov
dec
xchg
fisubr
je
or
jmp
or
inc
mov
and
mov
xor
pop
test
ds
pop
push
add
loope
ja
or
test
sbb
add
cmp
jb
enter
les
retf
push
shl
jl
and
js
imul
movs
sub
rcl
fs
sub
add
jae
sbb
add
mov
iret
fisubr
ins
cmps
xor
or
jnp
add
mov
xchg
xchg
cmp
cmp
adc
inc
leave
or
xchg
push
call
fucomip
fnsave
movs
adc
sub
sbb
cmp
xchg
pop
sar
mov
pop
fst
loopne
lods
mov
mov
inc
and
mov
mov
mov
mov
aam
xor
push
cdq
xor
xchg
adc
ins
and
mov
repz
(bad)
push
bound
adc
ins
jb
push
xchg
add
push
int
aas
xor
je
shl
imul
(bad)
retf
mov
inc
sti
neg
test
arpl
or
and
test
jb
test
fwait
pop
mov
out
sbb
pop
icebp
lods
aaa
inc
inc
fsub
lea
fwait
and
sub
nop
or
push
pop
xor
retf
ds
ja
dec
push
and
hlt
scas
cmp
scas
pop
and
mov
pop
ds
xor
or
mov
adc
xchg
xchg
popa
stos
mov
jns
xchg
dec
jmp
inc
xchg
cmp
pop
pop
clc
sub
mov
idiv
into
push
push
bound
mov
mov
adc
cmc
xor
pop
imul
dec
dec
repnz
jns
pop
or
push
frstor
jae
ins
and
movs
loop
or
push
aaa
or
push
add
mov
je
jl
ins
jno
scas
add
aam
stos
retf
ror
ja
int
inc
mov
lea
ja
imul
and
sbb
ins
js
pop
in
fld
jmp
fbstp
push
sbb
adc
jne
jg
and
imul
repz
push
xor
popf
mov
ja
xor
and
push
iret
cmps
test
xchg
int
or
pop
cmp
and
or
adc
cmp
jmp
push
stos
or
mov
(bad)
adc
jnp
mov
sahf
push
mov
pop
jns
dec
jae
mov
fwait
sub
inc
in
lods
xor
imul
mov
sub
inc
dec
retf
ins
movs
dec
pop
lods
pop
adc
dec
adc
lea
mov
push
bound
sub
ficom
xor
mov
or
add
mov
push
jae
dec
pop
es
dec
xchg
retf
out
cld
fild
add
add
mov
stos
div
adc
sub
imul
xchg
mov
mov
push
test
or
leave
in
push
test
arpl
cmp
fmul
fsub
mov
fucomp
mov
fldcw
jmp
add
loopne
add
outs
bound
adc
inc
pop
repz
push
or
mov
adc
mov
add
in
jle
inc
sbb
std
test
xchg
movs
mov
mov
out
sub
xor
pop
imul
retf
pop
pop
out
mov
lds
repnz
mov
(bad)
adc
add
mov
push
in
pop
ficomp
push
retf
ret
sbb
ins
adc
mov
mov
cmps
dec
pop
sub
(bad)
loope
sbb
popf
push
and
fsubr
sahf
dec
xchg
sbb
and
xlat
scas
and
add
fcomp
std
cmp
rcl
icebp
lahf
sub
sbb
mov
sbb
out
add
jns
adc
push
mov
inc
push
push
jmp
and
out
mov
not
mov
in
xor
div
pop
adc
cmp
sahf
push
sahf
jge
leave
enter
lds
mov
fs
fidiv
cmps
repnz
test
dec
xchg
cmp
jle
dec
push
sub
pop
scas
cli
inc
js
(bad)
sub
mov
mov
jl
cmp
cs
pop
ror
in
icebp
int
adc
sub
lock
mov
mov
and
fwait
pop
xor
adc
adc
mov
pop
adc
xchg
or
or
adc
daa
pop
push
mov
mov
push
jecxz
fcom
dec
in
out
lods
inc
lds
xchg
xor
xchg
scas
or
push
and
aaa
imul
xchg
and
fisub
push
adc
dec
xchg
mov
(bad)
fbld
jg
xlat
xchg
dec
cmp
mov
inc
ins
mov
lds
push
jmp
fnsave
int3
inc
clc
iret
mov
call
(bad)
mov
add
dec
cmp
and
fcomp
xor
movs
lods
jecxz
(bad)
sub
inc
sar
cmp
dec
enter
sub
clc
or
mov
fld
cmp
cli
fmul
mov
scas
pop
imul
(bad)
cmp
repz
jno
or
js
sbb
sub
iret
mov
push
dec
xchg
arpl
popa
push
div
fild
pushf
je
cmp
and
sub
loopne
mov
cwde
mov
bnd
aad
les
jbe
inc
mov
push
leave
inc
jnp
cmp
icebp
jb
lods
in
outs
int
pop
jne
mov
test
fwait
sbb
pop
pop
cli
adc
nop
sbb
cmps
push
retf
mov
inc
fucomip
imul
in
sahf
push
sbb
rcr
mov
call
pop
or
imul
jb
dec
push
les
cmp
pop
sub
adc
pop
loop
mov
jnp
ja
stos
inc
xchg
arpl
ficom
sbb
(bad)
outs
sbb
hlt
das
dec
add
pop
push
push
mov
inc
mov
mov
popa
jno
sbb
popa
sub
adc
aam
push
shl
retf
cmps
pop
adc
sti
inc
xchg
xor
mov
mov
call
sub
ss
dec
cdq
in
inc
les
mov
jl
aad
aas
stos
push
icebp
lods
aaa
shl
out
mov
adc
fld
and
call
mov
test
in
jno
inc
ret
mov
xchg
daa
out
xor
fsubr
stos
inc
daa
fcom
movs
xor
jge
xor
dec
add
mov
pop
mov
sbb
data16
arpl
push
xor
pop
push
push
in
mov
and
mov
xchg
out
cmp
sar
add
pop
push
mov
loop
sub
jg
mov
(bad)
lahf
push
mov
out
push
adc
addr16
mov
sub
movs
jp
imul
addr16
or
mov
inc
xchg
sbb
mov
cmc
xor
hlt
mov
ins
add
ftst
mov
jp
rcr
pop
jae
and
(bad)
push
movs
hlt
lds
jge
fs
cmp
inc
hlt
mov
cmp
or
ss
mov
push
push
or
addr16
xor
jge
rcr
dec
mov
xor
sbb
add
movs
xor
or
loop
jl
adc
test
and
movs
push
fild
jl
ja
sbb
inc
aam
vphadddq
stos
lods
dec
daa
cmc
push
lock
add
pop
fcomp
fisub
push
stos
or
inc
movs
or
mov
nop
lahf
add
cmp
pop
pop
mov
add
dec
dec
lock
cmc
test
out
mov
xor
xchg
inc
mov
push
dec
clc
adc
stc
nop
jmp
retf
pop
test
dec
adc
pop
and
sbb
std
cwde
repz
push
and
test
sub
cmps
adc
test
icebp
cmp
ficomp
lods
cmp
and
scas
rcl
mov
mov
imul
(bad)
jp
mov
push
aad
ins
fsub
pop
mov
fldcw
pop
int
loopne
fwait
cld
mov
push
enter
pushf
and
mov
xchg
push
push
adc
dec
int3
add
xor
cmp
mov
inc
clc
or
int3
dec
push
inc
(bad)
mov
fidivr
popa
mov
sbb
repnz
mov
icebp
test
in
mov
sbb
loopne
push
fldl2t
retf
jecxz
jae
popa
pop
adc
xor
cmp
adc
cmp
enter
mov
mov
push
cmp
inc
xchg
test
or
(bad)
hlt
sub
enter
xchg
inc
cld
retf
pop
nop
push
jmp
push
ret
js
fstp
(bad)
xchg
jecxz
add
jecxz
xchg
and
ror
stc
jge
stos
adc
in
mov
xchg
sbb
je
and
or
xchg
mov
sbb
fisttp
xchg
mov
pushf
daa
push
jge
jb
repz
(bad)
sbb
ins
div
adc
xchg
out
ret
std
jp
jmp
inc
imul
mov
call
in
jl
test
das
mov
ss
int3
sub
cwde
mov
repnz
cs
cmp
mov
xor
or
sub
test
je
inc
add
jbe
or
int3
push
jle
call
cmp
push
mov
sub
jne
imul
or
cmc
xchg
ret
add
push
jb
jp
jnp
sbb
and
leave
cmp
movs
and
dec
popf
pop
fsub
js
or
mov
xor
es
stc
inc
pop
or
movs
dec
or
xchg
add
sbb
retf
int
das
je
test
call
and
sbb
sub
call
mov
push
or
inc
push
lock
in
or
inc
push
enter
dec
pop
push
addr16
push
mov
pushf
js
cmp
or
add
cmc
add
inc
xchg
inc
fdivr
mov
cmp
lods
repnz
mov
fst
cld
push
jae
retf
push
mov
cld
mov
dec
out
push
fndisi(8087
pcmpeqd
cmp
mov
in
ror
(bad)
adc
mov
push
add
(bad)
stc
retf
rcr
jge
dec
pop
xchg
in
xor
mul
jb
or
add
daa
sbb
and
test
cdq
in
jmp
out
pushf
sti
sbb
movs
push
cmp
loop
cmps
adc
add
mov
aad
ds
jle
rol
aam
ds
fwait
inc
add
mov
ins
pandn
pop
shl
call
and
enter
mov
or
push
jnp
ds
or
psrlw
jnp
pop
add
int
retf
mov
adc
xor
inc
adc
call
or
mov
sbb
jo
les
sub
xchg
dec
fisub
aas
loopne
inc
add
imul
mov
sub
mov
outs
sti
jne
ror
adc
cmp
mov
das
cli
lea
stos
arpl
cdq
dec
test
xor
out
adc
not
xor
sbb
movs
inc
int
push
add
ins
and
pop
lds
mov
std
mov
xor
mov
aaa
sti
mov
jo
jno
mov
pop
adc
dec
std
mov
sub
jge
lds
pop
fst
push
fistp
imul
inc
in
cmp
int
sub
aam
dec
mov
adc
xchg
dec
mov
ins
or
jmp
clc
test
add
imul
in
pop
hlt
cmps
ja
ror
mov
sbb
out
jg
lds
nop
dec
sbb
inc
xchg
mov
xor
fnsave
mov
push
shr
aam
pop
out
div
(bad)
in
xchg
aaa
out
inc
daa
out
dec
pop
(bad)
jge
xchg
push
or
sbb
movs
jg
loop
sbb
sahf
jne
mov
xor
lods
pop
and
data16
test
das
lahf
inc
sub
mov
or
xchg
ins
adc
mov
push
mov
and
lahf
aaa
in
push
iret
lea
test
xor
sbb
jo
(bad)
hlt
adc
mov
and
xchg
pop
sbb
cmp
mov
add
cdq
inc
icebp
mov
push
fistp
out
cwde
push
div
es
stos
inc
or
pushf
xor
mov
cmps
cdq
pop
sti
mov
xor
imul
mov
and
fisttp
adc
bound
mov
inc
adc
xor
mov
cs
mov
cmps
outs
sub
lock
or
fisub
ror
or
(bad)
cmc
aaa
lahf
mov
lods
xlat
push
fidiv
adc
adc
dec
jnp
mov
push
dec
ret
fisttp
(bad)
repz
dec
cmp
mov
retf
push
push
mov
adc
clc
inc
xchg
in
sub
enter
in
mov
adc
in
mov
adc
mov
pop
xchg
les
imul
push
scas
icebp
push
sahf
xchg
adc
xchg
movq
push
push
scas
stc
xor
xor
inc
adc
sahf
jbe
test
dec
fisubr
adc
mov
adc
mov
retf
test
repz
sbb
mov
sub
mov
and
dec
add
test
mov
lock
mov
push
imul
mov
dec
xor
stos
push
mov
push
push
mov
xor
adc
mov
and
add
loopne
js
or
mov
cmp
std
dec
xchg
xchg
and
jbe
(bad)
sub
(bad)
jg
scas
es
lea
das
adc
lods
sti
ds
adc
ror
mov
sub
stc
imul
inc
push
cmp
mov
or
outs
dec
jmp
mov
sbb
mov
jecxz
pop
cmps
sbb
dec
clc
cmp
push
and
sbb
lods
dec
inc
(bad)
daa
add
cmp
jg
hlt
ficom
scas
push
fisubr
push
enter
ds
retf
jmp
fs
inc
mov
adc
retf
push
mov
jl
das
sub
inc
clc
(bad)
cwde
sbb
pop
retf
dec
ret
push
inc
ds
jmp
movs
mov
xor
push
adc
and
inc
div
jo
icebp
xchg
xchg
pushf
xor
aas
aad
fdivp
es
outs
ret
add
outs
and
lds
xchg
cmp
sbb
jmp
lock
das
sbb
push
sbb
pop
repz
mov
call
dec
loope
call
cld
xchg
add
or
cmp
inc
sbb
stc
push
pop
fadd
loope
stos
xor
ds
cwde
push
outs
stos
loop
adc
inc
(bad)
sbb
pop
sbb
es
pop
fcomip
sbb
jge
sbb
lods
pop
call
hlt
aas
add
mov
enter
pop
mov
nop
adc
mov
xchg
mov
xchg
sahf
sub
and
fisttp
xor
mov
mov
gs
cmp
cmp
fcomp
ret
inc
cs
(bad)
shl
les
ins
mov
push
repnz
gs
sbb
mov
mov
mov
out
repnz
sti
shl
out
mov
rcl
mov
repnz
retf
xlat
cmps
call
jno
fist
ins
aam
add
sbb
sub
push
test
xchg
xchg
daa
sbb
jmp
mov
scas
int
(bad)
jno
ss
jbe
ret
cmp
hlt
inc
aaa
frstor
ins
mov
bound
fs
add
shl
mov
pop
sbb
test
retf
repz
jp
lds
xchg
ret
mov
pop
and
fcomp
loopne
imul
js
fs
into
out
push
test
adc
fimul
retf
(bad)
aas
div
int
jbe
push
xchg
mov
or
xor
dec
add
dec
or
ds
adc
and
sahf
in
stos
out
push
pop
push
popf
fcomi
repz
(bad)
and
rol
cmp
outs
sbb
mov
add
mov
fisubr
jmp
add
adc
outs
mov
jno
add
add
adc
push
jnp
dec
push
sub
out
cmc
add
rcr
lods
aaa
lods
adc
xchg
dec
cmp
xor
mov
dec
repz
jnp
adc
jno
outs
popa
call
push
mov
and
dec
pushf
aas
and
fisubr
in
adc
adc
add
mov
push
not
icebp
adc
(bad)
scas
adc
xlat
mov
pushf
mov
retf
(bad)
xlat
push
or
inc
lea
bound
cmps
xchg
pushf
sbb
mov
aas
dec
loop
pop
sbb
cmc
jae
or
out
push
push
ja
push
stc
lods
bound
dec
xchg
pop
stos
cmc
int
or
xchg
dec
mov
cmp
dec
push
pinsrw
in
iret
add
pop
mov
test
jmp
retf
and
sahf
cmp
cmp
aaa
test
loopne
in
mov
pop
sub
mov
aaa
in
mov
xor
mov
sbb
retf
sbb
mov
xchg
inc
add
nop
and
nop
call
jns
loop
jae
dec
cmps
pop
ror
fnsetpm(287
sbb
inc
pop
lahf
(bad)
jb
ja
(bad)
push
add
push
mov
movs
mov
cmp
repz
sbb
jno
jge
push
shl
pop
push
mov
cmp
mov
adc
push
ins
movs
adc
lea
adc
mov
mov
popf
scas
mov
dec
scas
iret
add
dec
fcomp
gs
out
jg
cmp
mov
cmp
jmp
jp
test
and
xchg
add
rol
mov
je
ror
or
mov
inc
pop
inc
in
outs
sar
jnp
aaa
inc
push
enter
xchg
call
lods
dec
pop
stc
mov
inc
repnz
cld
pop
out
outs
rcr
lahf
es
hlt
pop
sahf
data16
xchg
xor
xchg
ja
movs
pop
js
or
jecxz
push
fwait
aaa
jne
adc
(bad)
push
add
push
mov
sbb
(bad)
(bad)
in
leave
adc
mov
ficomp
inc
and
movs
xchg
fdivrp
clc
fs
rcr
xor
repz
adc
jl
gs
xlat
xchg
inc
(bad)
mov
mov
fbld
mov
popa
xor
jae
adc
aam
xor
inc
mov
adc
xchg
jne
mov
and
movs
inc
adc
xchg
pcmpeqw
mov
pop
fsub
mov
or
adc
ret
jne
push
jp
rcr
push
aaa
mov
in
fsubr
or
lahf
sbb
sub
retf
sbb
test
add
lods
push
imul
xchg
dec
cmp
add
pop
mov
jp
dec
aaa
(bad)
js
xchg
cwde
lock
inc
pop
sbb
iret
xor
test
mov
xchg
ror
add
ds
cwde
xchg
jl
(bad)
sbb
ret
nop
xchg
fdivr
jmp
pop
shl
mov
loope
gs
mov
pusha
adc
adc
push
loopne
mov
enter
pop
popa
hlt
aaa
add
ss
xchg
pop
aam
adc
inc
and
jbe
pop
std
jle
mov
cmp
mov
je
bound
(bad)
push
shl
xchg
or
leave
jns
das
cmps
cmp
dec
inc
test
lea
xchg
inc
pop
mov
mov
nop
adc
mov
add
jbe
(bad)
mov
adc
mov
fld
inc
fadd
call
pop
into
xchg
sbb
repnz
clc
imul
call
and
fisubr
push
jle
les
xchg
pop
ja
jb
dec
cmp
jae
rcl
call
stos
lods
out
pop
adc
mov
movs
pop
adc
inc
aam
addr16
inc
sbb
ds
xor
popf
inc
gs
rcl
in
jnp
call
xchg
test
test
mov
xchg
sahf
icebp
add
add
fwait
imul
imul
xor
push
pop
fs
ja
adc
movs
pop
jnp
xchg
adc
cli
add
int3
pop
popf
jge
mov
mov
xchg
jae
iret
cmp
movs
and
xlat
pop
movs
add
push
jno
and
or
mov
xchg
mov
push
std
stos
popa
push
mov
cmps
jne
test
pop
push
les
dec
push
jnp
jp
fwait
adc
retf
jp
test
push
sub
loopne
inc
cmc
sti
inc
lea
ins
bound
fst
push
jg
sub
out
jbe
dec
sbb
cmp
rol
adc
data16
les
fisttp
push
popa
lods
jl
test
cmc
mov
outs
call
xchg
or
loop
pop
adc
std
cmp
push
xor
and
outs
push
push
lock
test
ret
cmc
sbb
pushf
and
test
ficom
jecxz
mov
stos
clc
or
retf
push
cmp
call
into
or
shl
and
(bad)
adc
test
aas
mov
adc
mov
push
cwde
sub
test
inc
jge
push
jbe
jno
or
and
in
mov
retf
xchg
push
loope
pop
push
jns
push
pusha
xor
jne
add
hlt
adc
(bad)
sub
pop
pop
push
mov
sub
scas
arpl
xchg
mov
aas
loopne
dec
imul
xchg
loop
icebp
xchg
xor
in
hlt
adc
sbb
test
popa
jo
fwait
jmp
lea
adc
out
xor
in
sub
js
rcr
loop
pop
dec
rcl
xor
pop
add
data16
sahf
out
cdq
cld
inc
nop
pop
out
mov
jno
int3
in
repz
jle
jnp
fdivrp
lea
sub
mov
cmpxchg
and
lods
into
sbb
je
cmp
scas
retf
lods
cmp
mov
cmp
in
pop
mov
sub
cmp
cld
xchg
loope
out
cmp
retf
aam
iret
pop
inc
imul
pop
loopne
(bad)
xor
pop
jge
cvtps2pi
les
je
adc
mov
dec
xchg
push
ins
jnp
or
xor
push
push
std
xchg
and
arpl
mov
clc
cwde
sbb
das
loopne
daa
(bad)
nop
sar
sub
outs
mov
clc
arpl
test
push
(bad)
in
shl
mov
sbb
xor
adc
pop
popa
mov
mov
sahf
imul
ror
pop
(bad)
jl
ret
inc
inc
nop
fist
test
sbb
add
cmp
mov
cmps
fidivr
in
dec
mov
adc
cmp
ja
sub
sub
and
jecxz
inc
push
int3
dec
mov
iret
adc
sub
or
sbb
cmp
jl
daa
xor
and
daa
inc
loopne
pushw
retf
push
sub
mov
sbb
dec
loop
cli
cmp
sbb
and
mov
aaa
cmp
imul
iret
leave
aam
xor
pusha
mov
rcr
imul
xchg
enter
cmp
xchg
xlat
cs
in
mov
sub
outs
mov
xchg
inc
sti
mov
mov
xchg
cdq
in
pop
jns
add
cmps
push
scas
cmp
xchg
jle
je
movs
enter
cli
sti
or
xchg
arpl
add
daa
jo
jne
fiadd
loope
xchg
pop
mov
or
fwait
mov
inc
sbb
and
arpl
and
cdq
pop
in
mov
xor
setns
push
js
popa
or
xchg
dec
mov
ins
loopne
pop
push
icebp
leave
pop
out
(bad)
xor
bound
xchg
mov
(bad)
shl
mov
test
cdq
je
jmp
inc
cmp
xchg
dec
lods
pop
ret
push
pop
jge
mov
pop
inc
pop
fwait
(bad)
jb
adc
addr16
int3
sti
sti
jns
or
add
stos
cmp
sbb
pop
test
jge
das
in
int3
add
popf
pop
push
jb
or
ficom
mov
pop
pop
std
jne
fsub
cli
push
int3
loope
xor
pop
cmps
repnz
daa
sub
push
mov
push
in
shl
and
fwait
es
aaa
dec
clc
lods
int
xchg
jno
adc
dec
sbb
pop
std
mov
mov
xchg
cmp
ret
imul
in
jne
inc
jle
(bad)
inc
xchg
xchg
cmp
cld
inc
pop
pop
pop
jl
add
(bad)
sub
(bad)
cld
loopne
mov
repz
(bad)
std
adc
xchg
xchg
xor
addr16
mov
xchg
lods
sub
push
inc
(bad)
adc
cmps
adc
rol
add
mov
ret
mov
ja
enter
jmp
sbb
je
xlat
fcomp
hlt
or
or
dec
xor
or
sbb
fs
add
imul
(bad)
out
sahf
push
les
jae
lods
sahf
out
repnz
xchg
xor
jne
dec
xchg
and
lods
add
jl
pop
pushf
inc
std
test
mov
daa
fcmovne
dec
or
add
cmps
addr16
daa
lahf
test
pop
fdiv
stos
sbb
mov
out
pusha
icebp
imul
mov
das
sub
adc
or
hlt
mov
xchg
lods
inc
ds
mov
dec
cmc
fstp
adc
jnp
mov
loopne
ins
push
retf
hlt
sbb
jae
test
push
push
rol
sbb
sub
pop
jl
fmul
sub
lods
and
pushf
sub
xor
ins
inc
je
rol
xlat
popf
cmp
xchg
xor
cmp
imul
mov
out
mov
push
pop
ins
aam
mov
inc
(bad)
jmp
jmp
jl
(bad)
fistp
inc
mov
fiadd
cmp
stc
cs
cwde
dec
out
push
jno
sbb
adc
fild
int3
add
arpl
retf
cmp
aam
dec
out
retf
repz
xchg
pop
in
mov
je
cmp
jae
sahf
addr16
outs
mov
xor
repz
scas
push
push
add
pusha
xchg
shl
xor
cmps
and
xchg
mov
call
repnz
jmp
fst
mov
stos
pop
push
mov
mov
in
add
ror
dec
fsubr
or
and
shl
(bad)
jne
jp
fist
es
out
push
adc
push
or
pusha
ja
arpl
loope
outs
adc
and
xchg
dec
paddusw
lods
cs
pop
or
push
mov
sti
test
pop
repnz
loopne
(bad)
jnp
sbb
pop
push
clc
lods
int
pop
jg
adc
and
imul
pop
scas
or
loope
aaa
(bad)
mov
or
ret
sti
cs
lock
imul
inc
mov
add
inc
ins
jne
ret
inc
mov
sbb
jbe
fsubr
jno
dec
xchg
loope
sub
cmp
int3
fsub
jnp
nop
fcom
jnp
push
out
dec
jge
outs
sub
inc
cmp
add
push
fild
cmps
imul
add
outs
push
cs
jae
fst
loop
(bad)
jmp
inc
add
and
test
jge
sub
sbb
outs
enter
jl
loop
ja
xor
movs
out
ror
lods
sub
inc
imul
mov
iret
leave
cld
das
ds
dec
mov
sbb
pop
jb
lods
fistp
xor
dec
xchg
loopne
jns
pop
cmps
pop
adc
scas
(bad)
lds
push
mov
mov
rsqrtps
sbb
fsubp
dec
or
int3
pop
movs
lock
cmp
(bad)
cli
pop
adc
dec
jno
mov
xor
clc
sub
sbb
cmp
popf
fnstsw
push
inc
outs
xchg
cmp
call
adc
js
fdiv
fcom
ss
lods
xor
pop
push
sub
call
imul
cmp
jge
in
mov
sar
scas
stc
leave
sbb
jo
mov
and
mov
cmp
mov
aam
retf
sub
repz
dec
lods
retf
cmp
aam
ds
mov
xor
jb
cmps
scas
mov
or
adc
jecxz
cmp
cmp
mov
retf
and
pmaxub
out
inc
ficomp
into
and
mov
pusha
sub
adc
(bad)
ja
fld
daa
cwde
or
sahf
cmp
or
fdivr
inc
cmp
ds
mov
xor
ficomp
cmp
call
dec
xor
mov
shl
inc
js
push
es
enter
mov
sub
xchg
xor
adc
xor
pop
cmp
sub
in
das
xor
out
jmp
jno
rol
sub
(bad)
fld
stos
(bad)
jp
push
imul
hlt
add
sbb
mov
mov
and
(bad)
out
cld
shl
sub
cmps
scas
sub
mov
adc
mov
cmp
add
call
inc
sahf
popf
lea
xor
in
clc
les
jne
(bad)
call
loope
aas
daa
iret
dec
xchg
jns
test
push
and
out
clc
jbe
xor
stc
sti
mov
inc
in
aam
std
retf
pop
std
jno
cmp
inc
adc
mov
sbb
and
add
retf
call
pop
sete
inc
pop
call
imul
out
add
add
rol
push
(bad)
adc
or
scas
int
pop
jecxz
out
adc
bound
xchg
xchg
(bad)
stos
das
dec
mov
xchg
outs
outs
mov
sub
adc
out
ret
xchg
mov
hlt
fucom
in
ret
arpl
stos
jle
mov
cwde
adc
scas
arpl
or
loope
or
add
(bad)
rcr
jmp
fwait
icebp
sbb
lods
mov
sub
movs
pop
jne
ins
and
push
ja
pusha
adc
imul
lds
ds
jno
inc
mov
sub
xchg
jae
mov
mov
jbe
pop
scas
sub
mov
sbb
outs
push
(bad)
hlt
addr16
fisub
add
xchg
or
jmp
inc
retf
mov
(bad)
aad
dec
(bad)
ins
push
fld
pop
fsubp
jecxz
imul
mov
xor
sbb
outs
push
repz
inc
inc
pop
movs
aam
xchg
inc
inc
pop
xor
movs
shrd
sub
mov
add
xlat
stos
sub
adc
ins
stos
repz
jecxz
repnz
fild
jne
fdivr
and
gs
stc
vcvtsi2ss
call
xor
enter
dec
xor
jmp
repz
jecxz
fild
movs
cmp
dec
add
aad
ror
stos
lods
sub
test
aaa
in
call
mov
push
ins
mov
dec
xchg
or
xchg
ds
adc
and
add
add
mov
mov
add
xchg
mov
movs
pop
jnp
add
push
sbb
mov
sbb
dec
or
hlt
pushf
loop
pusha
cs
mov
(bad)
xchg
popf
xlat
jae
addr16
jnp
push
mov
cmp
cmp
add
into
aam
cmps
rcpps
es
(bad)
lahf
push
jge
dec
xchg
int
xor
jne
adc
jl
push
mov
sbb
adc
xchg
(bad)
adc
pop
push
fwait
sar
test
es
stc
(bad)
icebp
leave
and
data16
lock
int3
(bad)
and
lock
shr
add
mov
mov
sbb
(bad)
pop
mov
es
adc
pop
and
dec
pop
mov
lock
and
ret
ficomp
jb
ins
or
xchg
ds
adc
jo
sbb
lods
fnstenv
(bad)
cmp
xor
icebp
jns
fsubrp
ja
fcomp
or
pop
neg
adc
jecxz
bound
inc
and
mov
adc
inc
mov
mov
mov
retf
retf
push
xchg
imul
popf
cmp
jl
daa
adc
xor
andnps
pop
sbb
and
pop
xor
(bad)
jns
sub
dec
dec
pop
xchg
jp
and
mov
call
in
aaa
or
sub
inc
(bad)
fisubr
je
rol
ja
jle
das
out
mov
dec
xchg
push
daa
repz
mov
or
jp
pop
xchg
mov
sub
adc
popa
in
sub
bound
ds
and
in
mov
adc
mov
push
arpl
movs
fbstp
add
fwait
out
adc
outs
lea
jb
stc
mov
jl
popf
in
adc
out
cdq
ror
mov
mov
dec
stos
ins
and
lods
mov
mov
push
int3
inc
scas
ret
cmc
xor
out
out
fistp
push
sahf
mov
imul
repnz
sub
or
mov
mov
jb
pop
xchg
neg
xchg
fiadd
outs
test
in
inc
xor
imul
fs
jle
inc
add
leave
fimul
scas
ss
adc
in
aad
inc
inc
add
enter
mov
or
dec
add
xor
gs
sbb
fisttp
push
or
dec
lods
and
(bad)
loopne
fisttp
mov
sub
push
and
ja
popf
adc
(bad)
ds
arpl
enter
in
aaa
pop
or
adc
jb
push
scas
cmp
fdivrp
shl
and
mov
sub
in
adc
hlt
and
mov
fxtract
ret
aad
mov
and
ins
sub
inc
mov
test
fs
test
leave
test
or
dec
fistp
push
pushf
shl
shl
push
add
in
ins
popa
cmp
xchg
ins
es
clc
out
jecxz
xor
dec
popf
pusha
stos
test
daa
daa
in
add
mov
fcmovnu
lock
repz
cs
jle
xchg
inc
jae
mov
pop
adc
adc
mov
pop
cwde
sbb
sub
fucomip
retf
in
dec
loop
inc
pop
sub
push
pop
sahf
mov
add
inc
mov
adc
lods
jg
arpl
cmp
lock
xchg
ret
adc
and
jle
dec
mov
xor
adc
daa
jno
test
jne
cmp
jnp
pop
stos
mov
mov
movs
jo
xlat
xchg
push
mov
icebp
cmp
test
shr
std
ficom
add
dec
fimul
push
(bad)
sbb
inc
rcr
jbe
call
fst
arpl
repz
outs
and
mov
jmp
jnp
les
fst
sbb
and
(bad)
js
xchg
mov
and
popa
pop
xor
inc
xchg
push
addr16
pop
pop
and
std
mov
pop
fstp
mov
push
fist
int
cmp
cdq
shl
push
mov
add
inc
push
lods
mov
jno
jg
xchg
mov
xor
fidivr
sub
jns
or
(bad)
adc
ror
lahf
fdivr
movs
(bad)
into
inc
pop
in
xor
xchg
xchg
hlt
mov
call
mov
bound
adc
push
cmp
or
inc
push
movs
cmps
inc
cmc
stos
sub
popf
push
jge
cli
int3
test
imul
int
sub
push
or
mov
inc
push
outs
cmp
mov
stc
clc
loopne
std
adc
adc
mov
retf
cld
mov
mov
jp
push
scas
idiv
pop
mov
pop
inc
jne
or
xchg
push
(bad)
pushf
push
jo
lahf
push
idiv
std
sub
mov
cmp
inc
pop
xchg
or
mov
(bad)
retf
les
xlat
and
sti
icebp
add
scas
cmp
stos
test
fbstp
cdq
outs
ins
imul
cmps
xchg
lods
and
lahf
push
fadd
cli
xchg
into
xchg
movs
aas
push
push
mov
retf
inc
dec
push
and
cmp
inc
dec
enter
sub
mov
pop
dec
jae
(bad)
jnp
push
sub
arpl
stos
adc
mov
cmp
jecxz
jnp
adc
lea
test
out
and
(bad)
push
cwde
xchg
adc
lods
xor
mov
xchg
std
mov
or
push
out
sbb
je
sub
adc
or
mov
mov
and
addr16
jbe
out
scas
stc
inc
cli
xlat
jbe
inc
ins
push
retf
call
mul
and
push
pop
std
sbb
clc
ret
push
pop
dec
fnsetpm(287
jp
nop
mov
cmp
out
pop
mov
and
pop
xlat
in
aaa
test
pusha
xor
mov
or
mov
fadd
dec
xchg
pop
sti
sub
cli
(bad)
into
xchg
movs
cld
jno
adc
fiadd
mov
aad
jge
nop
cmc
or
repnz
ds
pop
in
jo
cmc
stos
lock
or
fstp
xor
mov
popf
cli
jg
or
or
push
fisttp
mov
dec
fst
addr16
inc
pop
xor
xor
cmp
lea
fmul
jbe
jmp
test
cmp
out
xchg
(bad)
mov
xchg
rcr
xchg
push
and
jmp
mov
dec
mov
out
lea
aaa
in
push
sub
xlat
fld
mov
imul
pop
adc
dec
push
jbe
cld
scas
stc
xor
mov
retf
push
popa
lods
jl
test
add
pop
xor
adc
loop
aad
sub
xchg
cmp
and
xlat
loop
push
jle
mov
or
xor
inc
push
scas
cmp
fimul
sub
dec
jo
dec
or
and
xchg
in
bound
mov
adc
les
xchg
daa
pop
std
sub
cli
fild
ins
test
and
xchg
fstp
sub
mov
aaa
jo
pop
adc
inc
mov
popa
push
retf
repnz
jmp
jae
test
sbb
gs
ins
cmc
mov
aas
hlt
mov
dec
fcom
mov
pop
addr16
pop
adc
xchg
aaa
in
mov
sub
jne
loopne
mov
test
inc
cmc
inc
in
pop
adc
pop
cmp
xor
mov
icebp
jae
fsubr
dec
jo
pop
and
and
daa
loop
dec
dec
jge
(bad)
mov
out
jmp
aaa
inc
dec
int
jbe
cdq
lahf
sbb
jno
repnz
sbb
dec
mov
cmp
inc
cmp
jbe
into
sbb
je
cmp
and
in
ins
imul
pop
inc
scas
iret
jbe
inc
aaa
ja
dec
sbb
fwait
mul
add
add
adc
(bad)
jmp
mov
mov
dec
fild
outs
outs
jle
imul
jae
imul
mov
lahf
stos
pop
adc
in
test
movs
mov
neg
sti
add
push
adc
sbb
mov
push
lds
nop
and
js
cmp
retf
dec
jmp
(bad)
sub
sbb
or
cs
mov
pop
pop
addr16
jno
xchg
and
xor
cdq
pop
xor
out
in
hlt
(bad)
es
xchg
(bad)
inc
(bad)
out
stos
sbb
out
or
fcomp
cs
mov
jns
xchg
and
into
call
addr16
adc
or
lds
mov
sahf
or
(bad)
in
sti
outs
add
inc
ins
mov
mov
mov
pop
lock
int
gs
xor
push
sahf
pusha
aaa
cld
or
mov
push
xchg
clc
dec
cmp
in
test
ins
xchg
repnz
xchg
fistp
mov
dec
jb
popa
jae
rcl
push
popa
push
stos
push
mov
mov
rol
add
out
and
shr
stos
push
dec
movs
out
push
test
push
ret
fwait
leave
shr
retf
push
or
popa
mov
mov
cmp
mov
mov
loop
xchg
pop
mov
sub
in
ror
sub
fwait
ins
ja
nop
dec
mov
jg
fnstenv
test
sub
int3
adc
sti
movs
stos
je
mov
add
jns
iret
xlat
mov
xor
in
add
loop
mov
mov
scas
cmp
mov
neg
popa
es
mov
mov
mov
mov
ja
repz
je
stc
lock
push
add
sti
int3
iret
xchg
pop
imul
cmc
lahf
push
cmps
sub
dec
jno
into
test
jp
sub
sub
dec
xchg
fild
sub
(bad)
pop
adc
sub
dec
jmp
aaa
xchg
push
repnz
push
aam
dec
(bad)
sbb
movs
mov
ret
fs
dec
add
jp
sahf
cmps
iret
out
retf
(bad)
mov
ins
int3
mov
mov
mov
cmp
mov
sbb
push
loopne
cmps
cwde
cmp
dec
jp
jmp
cmps
repz
add
scas
jo
(bad)
lods
aad
(bad)
sbb
xor
inc
mov
addr16
pop
xlat
sbb
push
les
and
(bad)
xchg
and
fcmovnb
ins
pop
cmc
stos
retf
and
fnstenv
scas
fs
push
or
pop
pop
out
out
inc
je
ror
pop
addr16
inc
pop
xchg
lock
dec
and
sti
clc
lock
adc
inc
inc
mov
dec
dec
push
rcl
dec
push
mov
sub
mov
stos
sbb
inc
enter
lods
inc
add
(bad)
ds
and
mov
mov
dec
call
aad
jae
cmps
pop
push
icebp
xlat
nop
movs
pop
fnstcw
inc
loope
inc
adc
popa
lods
jp
jns
fcom
xchg
out
cmp
dec
xchg
loop
sub
mov
pop
aam
mov
test
push
sub
cwde
sub
les
push
jmp
sub
pop
movs
cwde
dec
std
mov
mov
xchg
mov
xor
cwde
cmp
je
or
(bad)
ss
cmc
shl
push
clc
ror
in
loope
sbb
cmc
sub
outs
sbb
push
push
sbb
repz
lahf
dec
bt
mov
ins
pop
mov
mov
mov
mov
push
ins
lds
xor
js
popf
adc
inc
addr16
mov
enter
pushf
fninit
pop
add
sar
out
(bad)
ficomp
xor
shl
cmp
outs
jbe
jbe
movs
fwait
xchg
ins
jns
cdq
dec
iret
xchg
ror
xchg
jae
aam
adc
jnp
sub
dec
sar
popa
mov
mov
fnstenv
aam
adc
xor
test
out
sti
or
(bad)
pop
int3
adc
cld
loopne
push
int
rcl
or
pop
daa
add
iret
push
clc
sub
and
fs
rol
ret
stos
fstp
scas
imul
push
shl
mov
mov
mov
(bad)
xor
lea
push
xchg
popa
stos
test
cmp
pop
inc
call
mov
jmp
xchg
(bad)
and
je
ins
(bad)
sbb
jp
out
mov
popf
sti
shl
adc
sbb
lock
mov
retf
dec
push
mov
int3
sub
jmp
xor
fldenv
jae
inc
sti
pop
lock
jnp
ja
pop
or
xchg
dec
movs
mov
and
xchg
lea
inc
sbb
xchg
xor
lods
inc
clc
fld
mov
into
adc
inc
mov
je
cdq
ins
mov
dec
jo
xrelease
xchg
xor
lahf
fcmovnu
and
cld
dec
xchg
ficom
dec
sub
jle
sahf
and
and
or
scas
outs
jb
jg
pop
test
(bad)
push
or
xchg
cmp
popa
cs
ja
in
jg
(bad)
or
sti
inc
xchg
xor
scas
inc
neg
int
mov
stos
test
(bad)
xchg
inc
mov
jge
pop
cmps
icebp
aam
push
loop
cmp
int
or
add
pop
xor
call
lds
je
out
xor
or
ins
sub
add
pop
inc
sub
sbb
adc
dec
and
clc
in
pop
fstp
in
lea
mov
cmp
or
movs
sbb
sub
and
push
sbb
popa
jno
or
mov
out
outs
cld
jbe
push
xor
lods
xchg
xor
test
fisubr
cmp
in
or
dec
jle
mov
(bad)
xor
mov
pop
jmp
test
mov
lea
jmp
stc
nop
inc
ret
mov
jns
xor
iret
popf
push
das
jae
outs
call
cmc
test
out
fcomip
ins
add
outs
or
mov
ja
xchg
add
movs
xor
mov
ret
or
cli
mov
cld
setno
in
jae
or
pushf
and
xor
pop
lods
push
call
push
mov
call
mov
adc
mov
jne
dec
xchg
mov
dec
sbb
and
push
pop
movs
mov
ss
popa
xchg
ins
and
movs
call
jmp
xchg
inc
sti
dec
sbb
cmp
ss
mov
pop
push
push
mov
add
add
inc
fwait
jno
jmp
xor
push
lods
popf
dec
ret
retf
(bad)
loop
pop
leave
mov
or
and
or
lock
xchg
sbb
stos
mov
je
sbb
mov
fwait
jp
clc
pop
xchg
cdq
and
mov
jno
(bad)
adc
addr16
aam
loope
or
or
jnp
outs
add
sti
scas
sbb
fmul
jmp
lahf
inc
cdq
mov
dec
cld
mov
xor
mov
ret
outs
shr
dec
push
cmps
jno
aad
std
out
test
xor
mov
sbb
inc
stc
mov
and
push
or
adc
out
push
icebp
cmps
dec
(bad)
fistp
repz
rcl
mov
gs
scas
fcomp
fsub
outs
mov
xor
adc
cmp
mov
dec
xchg
loopne
jbe
or
mov
sbb
inc
nop
(bad)
jno
pop
push
popf
call
pop
stos
cmc
inc
mov
and
dec
cwde
jecxz
jns
cvtps2pd
sbb
mov
dec
xchg
fisubr
je
or
jmp
or
inc
mov
and
mov
xor
pop
test
ds
pop
push
add
loope
ja
or
test
sbb
sti
inc
xchg
fsub
jb
or
jmp
pusha
stos
test
and
add
in
jp
adc
icebp
cmp
rcr
xchg
fild
jne
or
in
aaa
or
arpl
and
pushf
out
jge
adc
hlt
aas
mov
and
add
sub
movs
out
cmp
cld
inc
xchg
(bad)
jae
or
xor
lods
test
add
call
cmps
repnz
mov
dec
xchg
loopne
jbe
or
mov
sbb
inc
nop
(bad)
jno
pop
push
popf
call
pop
stos
cmc
inc
mov
and
dec
cwde
jecxz
jns
cvtps2pd
sbb
mov
dec
xchg
fisubr
je
or
jmp
or
inc
mov
and
mov
xor
pop
test
ds
pop
push
add
loope
ja
or
test
sbb
sti
inc
xchg
fsub
jb
or
(bad)
hlt
jg
push
pusha
stos
test
and
pop
pop
ftst
pop
imul
push
(bad)
mov
and
dec
push
shr
cli
nop
pop
in
js
mov
jmp
and
sub
movs
out
cmp
cld
inc
xchg
(bad)
jae
or
jne
rol
and
jns
add
call
cmps
repnz
mov
dec
xchg
loopne
jbe
or
mov
sbb
inc
nop
(bad)
jno
pop
push
popf
call
pop
stos
cmc
inc
mov
and
dec
cwde
jecxz
jns
cvtps2pd
sbb
mov
dec
xchg
fisubr
je
or
jmp
or
inc
mov
and
mov
xor
pop
test
ds
pop
push
add
loope
ja
or
test
sbb
sti
inc
xchg
fsub
jb
or
jmp
pusha
stos
test
and
add
in
jp
adc
icebp
cmp
rcr
xchg
fild
jne
or
in
aaa
or
arpl
and
pushf
out
jge
adc
hlt
aas
mov
and
add
sub
movs
out
cmp
cld
inc
xchg
(bad)
jae
or
xor
lods
test
add
call
cmps
repnz
mov
dec
xchg
loopne
jbe
or
mov
sbb
inc
nop
(bad)
jno
pop
push
popf
call
pop
stos
cmc
inc
mov
and
dec
cwde
jecxz
jns
cvtps2pd
sbb
mov
dec
xchg
fisubr
je
or
jmp
or
inc
mov
and
mov
xor
pop
test
ds
pop
push
add
loope
ja
or
test
sbb
sti
inc
xchg
fsub
jb
or
jmp
pusha
rol
inc
mov
and
add
in
jp
adc
and
xchg
fild
jne
or
in
stos
jo
sbb
fisub
pushf
out
jge
mov
jnp
and
add
sub
movs
sub
test
pop
xchg
mov
inc
xchg
(bad)
jae
or
xor
lods
test
add
imul
sub
add
mov
mov
ror
in
cmp
or
adc
mov
leave
adc
stos
cmc
inc
and
cwde
fcmovnu
jns
inc
test
lock
sbb
inc
std
dec
out
sub
je
or
inc
les
clc
mov
mov
add
jl
loopne
test
int
aam
cdq
mov
push
gs
inc
xor
test
mov
fsub
ins
jmp
pusha
stos
test
shr
add
in
mov
adc
icebp
cmp
mov
push
(bad)
xchg
jp
icebp
dec
sbb
out
pop
push
fmul
sbb
arpl
clc
scas
push
jge
adc
mov
test
aad
aas
in
sub
lds
and
lahf
and
test
cmp
retf
push
popa
lods
movs
ss
dec
sbb
push
call
ret
jmp
outs
sbb
loopne
jbe
pusha
and
mov
jne
retf
nop
(bad)
bound
retf
mov
lods
adc
stos
mov
or
add
mov
or
cmp
sahf
sub
cwde
pop
adc
or
cmps
pop
loop
jnp
rcl
inc
and
cmp
pusha
cmp
mov
mov
pop
xadd
stc
or
inc
cmp
scas
jle
ror
push
shl
jmp
xor
xchg
xor
mov
cmp
mov
sub
nop
pop
jmp
sbb
(bad)
mov
and
test
arpl
push
adc
mov
lea
test
inc
or
jno
stc
test
sbb
and
nop
and
mov
xor
jmp
fwait
sub
rol
lods
pop
adc
inc
in
cmp
lea
loope
outs
adc
dec
in
mov
aaa
(bad)
mov
ss
test
jle
adc
retf
pushf
xor
mov
sub
xchg
scas
push
shl
cmp
lea
fidivr
lds
(bad)
mov
adc
popf
inc
mov
and
fbstp
in
sbb
adc
mov
shufps
or
or
hlt
mov
aad
inc
xchg
fsubr
fdivr
repnz
retf
in
xchg
xor
sti
ins
cmp
nop
das
jp
adc
test
mov
cmp
movs
dec
push
mov
dec
adc
call
jbe
pushf
out
cmp
dec
out
data16
fs
vprotq
movs
lods
dec
loopne
outs
add
xchg
xor
mov
push
loope
jae
lds
push
shr
frstpm(287
xor
push
cs
in
xchg
ja
sar
add
ins
and
test
out
ins
and
cwde
dec
push
iret
bound
cld
xchg
lods
adc
fst
or
outs
dec
cwde
jecxz
xor
test
mov
cmp
outs
cmp
jmp
or
and
fldenv
mov
xor
pop
test
ds
pop
push
add
loope
ja
or
test
sbb
sti
push
xchg
fcom
jae
or
jecxz
ins
cli
(bad)
mov
imul
rcl
jge
lahf
and
xchg
fwait
or
loop
pop
pop
into
js
test
add
(bad)
fld
sub
pushf
inc
jbe
call
fs
cmps
add
sti
xchg
ins
cmp
sahf
mov
les
ror
dec
aaa
cmp
and
push
mov
sbb
mov
mov
and
cwde
jbe
pop
in
mov
adc
add
repnz
(bad)
das
mov
movs
jg
aad
inc
push
or
push
iret
dec
cmps
into
adc
inc
fs
fs
xchg
and
loopne
pop
es
scas
inc
sbb
repnz
inc
(bad)
aaa
mov
sub
sar
jle
ret
cmp
push
sti
cmps
push
ins
iret
xchg
mov
lock
sub
push
mov
fucomip
jl
fidivr
aaa
scas
outs
adc
cli
xchg
pusha
add
and
mov
dec
arpl
mov
pop
or
bnd
lods
iret
dec
mov
sbb
and
inc
sti
sub
jmp
push
mov
jne
or
in
daa
or
lods
sahf
sbb
push
loopne
jo
ss
pushf
div
jge
stc
outs
mov
and
add
sub
xchg
das
cmovno
rcl
leave
xchg
cmps
or
jg
fnsave
lock
fsub
ds
xor
or
mov
mov
stc
rcr
mov
das
xchg
in
cmp
cli
inc
nop
(bad)
jno
pop
push
popf
call
pop
stos
cmc
inc
mov
and
dec
cwde
jecxz
jns
cvtps2pd
sbb
mov
dec
xchg
fisubr
je
or
jmp
or
inc
mov
and
mov
xor
pop
test
ds
pop
push
add
loope
ja
or
test
sbb
sti
inc
xchg
fcom
leave
xor
jg
adc
mov
and
add
in
(bad)
mov
pop
cmps
icebp
cmp
rcr
adc
sub
popf
push
mov
cwde
arpl
push
dec
mov
xor
pop
test
and
add
pop
inc
ret
push
pop
movs
out
cmp
aas
xchg
(bad)
ret
scas
or
xor
lods
test
add
call
cmps
repnz
mov
dec
(bad)
loopne
jbe
or
mov
pop
fs
cli
push
nop
call
call
adc
outs
push
jne
jp
adc
cmp
sbb
lahf
jae
xchg
nop
addr16
dec
xchg
fisubr
je
sub
rol
aam
es
fldenv
jmp
pop
jl
xchg
push
rol
push
dec
sbb
(bad)
jle
mov
sbb
sti
inc
xchg
fsub
jb
or
jmp
pusha
stos
test
and
add
in
jp
adc
icebp
cmp
rcr
xchg
fild
jne
or
in
aaa
or
arpl
and
pushf
out
jge
adc
hlt
aas
mov
and
add
sub
movs
out
cmp
cld
inc
xchg
(bad)
jae
or
xor
lods
test
add
call
cmps
repnz
mov
dec
xchg
loopne
jbe
or
mov
sbb
inc
nop
(bad)
jno
pop
push
popf
call
pop
stos
cmc
inc
mov
and
dec
cwde
jecxz
jns
cvtps2pd
sbb
mov
dec
xchg
fisubr
je
or
jmp
or
inc
mov
and
mov
xor
pop
test
ds
pop
push
add
loope
ja
or
test
sbb
mov
dec
ss
ja
or
stos
test
fnstsw
movs
mov
sahf
in
push
inc
movs
cmc
jmp
call
mov
movs
push
jmp
ins
inc
aas
jae
test
ins
(bad)
cwde
xor
das
aas
aam
mov
mov
adc
add
lock
inc
xor
dec
scas
push
jp
sub
dec
xor
cmps
push
repz
xor
sti
lahf
pop
and
pop
cmps
movs
ret
mov
mov
dec
lds
push
ret
sub
fs
push
and
push
lods
into
loopne
mov
hlt
xchg
scas
retf
out
jae
sub
loopne
push
xchg
test
cmp
push
fwait
ret
(bad)
es
cli
push
fcom
out
push
rol
iret
cmp
inc
dec
je
cmps
mov
aas
jecxz
scas
or
dec
xchg
(bad)
std
mov
(bad)
loop
sub
push
or
push
out
ror
mov
mov
sbb
test
push
add
pop
or
cwde
fdiv
cwde
xor
jecxz
arpl
pop
out
sub
inc
jg
pusha
mov
xlat
clc
ror
out
add
mov
dec
adc
push
rcl
xchg
or
pushf
push
jp
pop
int
sbb
mov
xlat
pop
cli
push
mov
ret
ret
lea
push
mov
xor
push
push
push
mov
xor
pop
pop
pop
mov
push
ret
jmp
jmp
pop
ret
add
add
clc
popa
inc
add
inc
add
inc
add
add
add
inc
add
add
add
popa
inc
add
in
add
mov
call
xor
pusha
inc
mov
mov
jecxz
jmp
cmp
je
popa
xor
add
pop
ret
push
push
push
call
mov
call
lea
mov
mov
call
pop
xor
cdq
dec
je
push
push
push
call
dec
xchg
lods
lea
xchg
cmp
jg
mov
xor
add
mov
lods
mov
inc
mov
call
ret
push
call
pop
pop
call
call
