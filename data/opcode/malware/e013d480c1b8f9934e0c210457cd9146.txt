xchg
mov
jb
push
mov
jb
jbe
jb
add
jb
ret
mov
jb
add
jb
shl
icebp
lahf
mov
jb
add
jb
add
jb
xchg
mov
jb
bound
jb
sbb
jb
sbb
jb
or
jb
sbb
jb
call
fild
jb
push
mov
jb
jne
jb
(bad)
mov
jb
call
mov
jb
add
jb
ins
mov
jb
std
mov
jb
xor
mov
jb
xchg
mov
jb
ret
in
out
mov
jb
frstor
jb
imul
add
add
push
add
add
add
adc
inc
add
push
inc
add
add
or
push
inc
add
or
xor
inc
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
inc
add
add
add
add
push
and
imul
jmp
xor
pop
add
add
add
add
dec
jne
jae
imul
add
add
add
add
add
add
sbb
add
add
add
sbb
pop
add
add
add
add
inc
add
add
add
sbb
add
add
inc
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
sbb
sbb
inc
add
add
inc
adc
inc
adc
in
stos
add
add
add
add
ror
test
aad
dec
mov
cld
or
cwde
ins
rol
add
add
add
fcomp
add
push
inc
xor
add
or
or
add
add
add
inc
add
push
inc
add
lock
add
(bad)
dec
add
add
add
add
add
add
add
add
inc
add
adc
pushf
adc
js
add
jg
add
test
add
xchg
add
inc
popa
outs
popa
ins
add
popa
ins
add
dec
jne
jae
imul
add
add
add
add
(bad)
inc
add
add
pusha
inc
add
add
add
stos
add
add
add
sbb
add
add
test
inc
add
add
add
add
add
add
mov
inc
add
add
add
adc
inc
add
add
add
sbb
add
sbb
dec
sbb
inc
add
add
add
pop
sbb
add
add
add
inc
add
and
add
add
add
pop
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
add
and
add
(bad)
(bad)
inc
push
inc
add
add
add
adc
add
inc
add
add
add
add
adc
add
adc
add
inc
add
add
add
add
inc
add
or
add
add
hlt
add
add
add
add
add
push
inc
add
or
add
pusha
inc
add
adc
add
add
adc
add
add
add
push
inc
add
(bad)
(bad)
inc
add
add
inc
add
pop
cmps
in
aam
dec
lods
mov
hlt
out
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
adc
add
(bad)
(bad)
inc
inc
add
sbb
add
add
clc
sbb
(bad)
inc
add
add
add
adc
(bad)
(bad)
(bad)
call
sbb
add
add
add
inc
add
add
add
inc
add
add
add
add
(bad)
inc
add
add
push
jae
popa
jns
add
dec
popa
ins
ins
popa
imul
dec
jne
jae
imul
cmp
inc
xor
outs
dec
mov
jo
imul
test
adc
(bad)
cmovnp
int
retf
or
frndint
or
cwde
ins
rol
lods
cs
xchg
mov
inc
pop
fimul
xor
or
stos
add
xchg
dec
outs
je
outs
outs
je
add
add
cs
push
add
xor
inc
cmp
outs
addr16
ins
and
ins
gs
sub
sub
arpl
jae
data16
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
je
inc
add
add
add
add
add
add
add
inc
add
add
add
add
add
test
cmp
xor
or
stos
add
xchg
inc
outs
jb
add
add
or
inc
add
add
inc
add
add
outs
add
add
jae
xor
add
add
add
add
pop
add
add
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
inc
jb
push
popa
jb
pop
pop
jbe
popa
inc
jb
inc
outs
jo
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
dec
outs
inc
jae
jb
add
add
add
add
gs
xor
add
add
add
ins
ins
push
imul
outs
arpl
mov
inc
add
sbb
add
add
test
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
imul
add
or
add
dec
imul
add
add
or
inc
add
sbb
add
add
nop
arpl
mov
or
je
jmp
push
mov
call
jmp
add
add
imul
cs
add
add
adc
add
inc
gs
jb
outs
je
jb
popa
je
push
add
add
inc
add
add
pushf
arpl
mov
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
add
add
sbb
add
inc
imul
gs
push
dec
outs
je
imul
outs
outs
add
sbb
add
add
test
inc
add
or
je
jmp
push
mov
call
jmp
add
add
push
add
add
add
add
std
add
push
cs
xchg
bound
add
add
add
add
add
add
add
cs
add
jg
add
add
cmp
add
dec
add
add
add
cmp
push
add
xor
and
push
add
xor
add
add
jo
inc
add
add
add
lods
xor
or
stos
add
xchg
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
jbe
popa
dec
xor
popa
jb
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
dec
bound
gs
fs
data16
add
inc
add
jbe
popa
inc
jo
ins
jo
jns
add
add
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
dec
outs
push
je
inc
add
jbe
popa
inc
jns
fs
pop
pop
jbe
popa
push
popa
jb
imul
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
gs
add
add
jbe
popa
push
je
inc
ins
jo
pop
pop
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
dec
bound
gs
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
push
dec
xor
add
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
int3
xor
add
int
retf
or
frndint
or
cwde
ins
shr
daa
outs
dec
mov
jo
cmp
xor
or
stos
add
xchg
cmp
add
jmp
push
jae
popa
jns
add
popa
jp
jo
jb
add
add
inc
add
push
sub
add
add
sub
add
push
sub
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
fsubr
add
inc
imul
dec
dec
dec
dec
dec
dec
dec
push
dec
dec
dec
dec
dec
dec
dec
push
dec
dec
dec
dec
dec
push
dec
push
dec
dec
dec
push
dec
dec
dec
dec
dec
dec
dec
push
dec
push
dec
push
dec
push
dec
push
dec
push
dec
dec
dec
dec
dec
push
dec
dec
dec
dec
dec
push
dec
dec
dec
push
dec
dec
dec
push
dec
push
dec
dec
dec
dec
dec
push
dec
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
dec
dec
dec
dec
push
dec
push
dec
push
dec
push
dec
dec
dec
push
dec
push
dec
push
dec
dec
dec
push
dec
push
dec
dec
dec
dec
dec
dec
dec
push
dec
push
dec
push
dec
dec
dec
dec
dec
push
dec
push
dec
push
dec
push
dec
dec
dec
push
dec
dec
dec
push
dec
dec
dec
push
dec
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
dec
dec
dec
dec
dec
dec
push
dec
push
dec
dec
dec
push
dec
push
dec
push
dec
push
dec
dec
dec
push
dec
push
dec
dec
dec
push
dec
dec
dec
push
dec
dec
dec
push
dec
push
dec
dec
dec
push
dec
push
dec
push
dec
dec
dec
push
dec
push
dec
push
dec
dec
dec
push
dec
dec
dec
push
dec
push
dec
dec
dec
push
dec
dec
dec
dec
dec
fimul
fstp
mov
addr16
scas
fsubr
imul
std
jmp
(bad)
xor
adc
mov
jo
jno
mov
and
mov
pushf
xor
retf
mov
cmps
popa
dec
mov
stos
in
dec
popf
sub
in
sbb
aad
xchg
and
rcl
cld
les
inc
dec
inc
adc
(bad)
scas
retf
(bad)
pop
sub
or
pop
pop
jns
sbb
sbb
std
mov
xlat
sub
sti
je
aas
pop
jb
shl
or
jle
and
cwde
mov
mov
dec
jle
nop
add
fmul
push
and
mov
fs
push
ins
mov
dec
lea
or
jge
dec
int3
dec
test
cmp
mov
scas
fadd
imul
std
jmp
icebp
xor
movs
mov
cs
and
jo
jno
mov
movs
mov
add
repz
xchg
fimul
out
pop
call
out
jecxz
pop
adc
test
add
mov
icebp
push
mov
arpl
sub
es
cmc
shl
mov
(bad)
pop
sub
push
or
scas
call
sbb
stc
cmp
mov
xlat
sub
sti
jnp
xor
jo
sar
jge
mov
cdq
mov
lods
push
jl
jne
add
inc
fcomp
push
and
xchg
pop
fs
ds
or
xchg
mov
cmc
dec
int3
dec
test
ret
iret
jne
mov
addr16
sub
fidivr
or
call
arpl
in
sbb
iret
cs
and
jo
jno
mov
movs
mov
add
repz
xchg
fimul
add
adc
push
sbb
adc
add
mov
push
cmc
push
out
(bad)
jnp
mov
push
jmp
or
sub
mov
call
xlat
jns
pop
clc
cmp
inc
sti
lea
icebp
and
xchg
sub
dec
push
jl
ja
push
sub
into
jbe
xchg
seta
mov
loop
or
les
adc
and
in
lock
cdq
into
lea
mov
dec
stc
lahf
data16
sub
call
mov
mov
fadd
sbb
jecxz
inc
retf
out
loop
movs
adc
ja
lods
mov
ret
sbb
loopne
sub
cld
repnz
dec
adc
lods
imul
fist
dec
or
call
xchg
add
das
ret
mov
pop
push
rcr
shl
jge
pop
or
jb
xchg
mov
out
mov
cld
xchg
std
push
cmp
aam
popa
imul
pop
mov
pop
pop
pop
cs
fcom
ins
aas
ja
jo
test
jecxz
js
repnz
xor
cmps
outs
or
push
sbb
and
ret
ror
in
(bad)
aam
popf
add
imul
cmp
mov
test
ret
pop
mov
mov
stc
or
sahf
movs
lds
mov
fadd
enter
jmp
adc
pop
out
jmp
ficom
pop
adc
or
mov
test
dec
(bad)
pushf
mov
js
dec
std
sub
outs
cs
ins
pop
nop
add
sar
mov
mov
push
mov
sar
retf
pop
mov
pop
pop
lods
pop
aas
mov
push
add
scas
sbb
xor
dec
add
pop
push
retf
mov
retf
add
pop
and
mov
mov
sub
(bad)
addr16
sub
pop
in
dec
(bad)
gs
xchg
rcl
sti
mov
add
xor
sar
es
(bad)
pop
and
inc
lahf
mov
push
jne
sahf
dec
mov
cmps
mov
add
inc
imul
fistp
and
mov
repz
or
cmp
les
mov
fwait
push
dec
loop
pop
mov
adc
mov
loope
mov
xor
ins
xchg
cmp
mov
mov
xor
and
ja
ds
ror
rol
aas
pop
rcr
push
inc
fild
sbb
add
sub
(bad)
mov
xor
xchg
cmp
inc
push
sbb
in
pop
neg
add
into
and
loope
push
xor
scas
and
ret
imul
add
sub
out
and
test
stc
adc
retf
out
xor
add
stos
dec
pop
dec
ja
(bad)
ds
les
rcl
push
mov
adc
adc
cmp
cmps
pop
repnz
cmp
jmp
ds
aaa
cmp
pop
syscall
xchg
push
xor
data16
mov
mov
xchg
cmps
inc
fbld
push
mov
add
std
jb
adc
je
jl
cmp
xchg
enter
pop
in
or
cli
std
fdivr
inc
xchg
fild
mov
cmps
(bad)
retf
jle
jns
inc
lea
jge
lods
xchg
addr16
hlt
cmp
test
inc
es
lods
dec
inc
cwde
cdq
sub
fcmovnbe
sahf
cmc
adc
imul
icebp
adc
adc
jo
add
call
sub
jl
jno
iret
mov
push
ins
pop
shr
jle
ret
xchg
ror
cwde
in
das
adc
pop
out
out
sbb
arpl
jecxz
dec
pop
in
sbb
jg
imul
adc
jl
(bad)
(bad)
cmp
ja
cmp
das
scas
pusha
pop
adc
pop
ret
add
adc
sub
sti
test
cs
mov
add
int3
sub
adc
add
add
sbb
push
scas
adc
dec
jmp
lock
imul
inc
mov
push
mov
cwde
adc
rol
pop
enter
lock
push
sahf
push
mov
sub
inc
lock
adc
inc
ret
mov
fnsave
jb
mov
(bad)
pop
shr
cli
(bad)
imul
loop
mov
sahf
inc
xchg
adc
pushf
ins
nop
in
adc
push
jg
movs
cmps
mov
std
stos
(bad)
lahf
mov
rcr
div
fdivp
fiadd
xchg
push
cmp
or
mov
sti
pop
cmp
int
and
dec
test
retf
fbstp
arpl
adc
xchg
lahf
jecxz
fdivr
jb
or
(bad)
fistp
mov
dec
jmp
xchg
sub
lea
imul
movs
in
push
daa
pusha
test
pop
jmp
pop
inc
sbb
adc
pop
sub
adc
jg
xor
test
test
stc
jne
call
sahf
cmp
retf
xchg
pop
sub
outs
loope
fist
cmp
push
sub
aad
pop
and
stos
cmp
fwait
add
into
daa
sbb
test
cmc
fdivr
js
xchg
sbb
dec
add
inc
cmps
xor
pop
out
adc
and
xor
lods
in
daa
mov
aas
fcomip
imul
(bad)
mov
inc
fcomp
in
jnp
es
or
mov
push
jmp
jg
jns
add
mov
dec
xor
xor
dec
sbb
cmps
lea
jne
iret
lea
sub
out
jmp
popf
pushf
mov
movs
sub
cmp
out
mov
cmp
pop
inc
(bad)
data16
dec
inc
xchg
dec
mov
ret
pop
call
test
add
nop
adc
xchg
stos
sub
xor
(bad)
call
and
fs
sub
es
push
aam
dec
and
cmp
dec
mov
cli
jmp
nop
mov
test
in
dec
xor
test
inc
push
cwde
ds
dec
push
cmp
daa
inc
xchg
mov
adc
pop
rcr
shr
dec
fcomp
sbb
and
dec
sub
dec
pusha
or
les
adc
and
rcr
push
cdq
inc
mov
cmps
imul
bound
mov
jg
ficomp
out
sub
or
imul
mov
mov
movs
loope
push
jp
fcmovnb
mov
jp
js
add
imul
sbb
cmp
mov
(bad)
adc
ret
pop
popf
pop
movs
inc
mov
sbb
sub
es
xor
(bad)
aad
ins
(bad)
sbb
xchg
xor
sbb
out
cmps
int
and
inc
sahf
movs
leave
dec
cli
je
jmp
inc
or
rcr
mov
add
ins
xchg
(bad)
mov
leave
push
ins
dec
jmp
jae
mov
sbb
mov
movs
(bad)
jne
stos
lea
adc
fsub
call
lahf
or
stos
loopne
and
or
sbb
(bad)
adc
inc
ret
xor
jl
jg
dec
stos
nop
(bad)
jno
test
test
pushf
pop
sbb
mov
daa
sbb
aad
adc
cmp
cmps
push
add
cli
dec
xchg
ret
loopne
test
fidiv
jmp
pop
xor
rol
sub
(bad)
sbb
pop
inc
repz
imul
sub
adc
add
jmp
icebp
movs
scas
or
push
mov
addr16
mov
pop
cmp
add
rol
or
dec
pop
and
fild
lahf
(bad)
add
xchg
cmc
lock
or
inc
jecxz
dec
jo
add
jne
movs
push
std
cmc
xchg
ret
xchg
adc
xchg
sti
(bad)
fsubr
js
jg
test
cwde
cmc
xor
fsubr
push
mov
jmp
outs
es
cmp
aam
stc
xchg
out
or
xor
add
xlat
imul
or
mov
das
lea
test
or
stos
aad
xor
fcomip
call
pop
jmp
xlat
sar
arpl
xor
adc
jmp
cmp
and
daa
mov
xor
or
jle
push
jl
add
jecxz
sub
int3
arpl
fs
iret
push
(bad)
cmc
jle
push
sahf
jge
cmp
mov
xchg
mov
push
call
aam
cdq
std
mov
dec
inc
mov
call
int
sbb
repz
cmp
dec
mov
sub
inc
(bad)
mov
out
je
ins
pop
dec
std
or
and
jno
retf
(bad)
ja
lods
jmp
sbb
mov
sbb
popf
jb
call
ins
push
push
inc
dec
pop
movs
dec
mov
push
faddp
or
rol
add
fs
imul
test
cmp
jp
pop
ja
push
les
add
xlat
out
fwait
xor
xchg
ins
or
movs
aas
popf
mov
outs
mov
and
xor
pop
fldcw
rol
in
mov
sbb
hlt
outs
xor
mov
mov
adc
pop
lea
jne
or
cwde
and
cmc
out
shl
sti
or
pop
fmul
cli
retf
pop
xor
test
pop
inc
(bad)
cmp
xchg
mov
mov
ret
jno
cmp
shl
or
push
xchg
in
gs
jb
jecxz
aad
jmp
enter
inc
pop
nop
fld
ins
mov
dec
cmp
push
out
std
icebp
shl
ror
ja
test
in
call
addr16
jnp
inc
push
cwde
jl
ret
cmp
das
dec
jp
mov
pop
mov
pop
nop
call
push
pop
call
sbb
dec
and
stos
sbb
jne
jle
push
adc
or
xor
movs
jno
xlat
mov
or
cdq
cdq
fdivr
shr
pop
(bad)
adc
stos
pop
mov
arpl
xlat
jae
nop
sbb
cmp
cmp
mov
dec
test
jp
inc
ja
ins
pop
das
cmp
sbb
jecxz
arpl
mov
jecxz
ret
cmp
out
cmc
in
adc
test
dec
sar
push
xchg
test
imul
xor
(bad)
pop
sub
es
sar
data16
sbb
stc
xlat
repnz
xchg
out
jnp
fist
mov
imul
add
add
or
dec
pop
mov
pop
jp
jg
fwait
ret
push
pop
loopne
adc
fistp
mov
mov
mov
imul
cmp
in
sub
bsr
shr
mov
sbb
pop
out
(bad)
retf
stos
mov
adc
adc
push
aam
adc
push
and
inc
pop
mov
or
pop
xchg
pop
and
or
push
into
or
lods
loop
push
pop
xchg
call
dec
pop
or
mov
int
xchg
add
das
ret
shr
jmp
ds
ret
(bad)
pop
sub
and
push
js
pop
push
clc
stc
ret
mov
mov
adc
call
cmps
(bad)
push
jne
sub
sub
cdq
mov
xor
ins
adc
int
or
add
lock
call
popa
pop
adc
rcpps
clc
mov
dec
jp
mov
and
fist
pop
addr16
movs
bound
icebp
jmp
xchg
mov
ja
es
jmp
cmp
iret
dec
mov
lock
out
xor
repz
sbb
inc
out
pop
call
adc
jg
ins
rol
mov
fsub
mov
sbb
movs
loop
cs
mov
mov
dec
xchg
cmps
inc
dec
push
js
push
xchg
mov
cmp
dec
mov
jae
rcl
push
jo
or
ret
adc
bound
call
ins
scas
or
js
mov
outs
push
cmp
ins
jmp
sub
jg
jns
add
aaa
pop
add
push
and
stc
pop
and
iretw
and
inc
xchg
push
std
and
aas
call
fistp
cli
cmp
sbb
fdiv
(bad)
cmp
pop
jbe
call
scas
mov
(bad)
shl
stos
push
mov
xchg
push
adc
add
inc
push
xchg
cmp
mov
push
pop
jae
data16
ror
aaa
jbe
repnz
(bad)
(bad)
out
dec
je
data16
test
xor
daa
or
pop
in
inc
jnp
xor
sub
jl
or
mov
icebp
and
rcl
pop
xchg
inc
xchg
nop
add
sbb
aam
out
mov
push
ins
jmp
mov
jae
in
jbe
cmp
int
data16
jbe
cmp
mov
inc
xchg
mul
add
add
xchg
shl
das
call
xchg
mov
loopne
sbb
retf
add
shl
jno
dec
xchg
add
mov
adc
xchg
mov
gs
jp
jecxz
ret
lds
sbb
imul
mov
ja
xchg
jp
dec
pop
mov
shl
xlat
inc
shr
ja
lds
adc
pop
jno
clc
cli
push
std
mov
ffreep
fwait
sbb
mov
push
mov
xchg
jbe
push
mov
cdq
enter
xor
mov
inc
fcom
fcomp
add
pop
push
leave
aas
push
or
sbb
lock
shl
mov
dec
dec
cmps
mov
daa
(bad)
lods
(bad)
test
pop
clc
cdq
je
push
pop
(bad)
sub
xor
jmp
mov
movs
mov
and
stc
dec
jp
push
mov
ins
pop
fild
jo
ret
xchg
and
imul
fcmovnb
and
outs
daa
and
xor
push
pusha
inc
jno
lds
pop
mov
mov
or
shl
cmp
(bad)
pop
sub
pusha
pop
ins
sti
cs
aad
cmp
js
push
pop
cmc
shl
mov
push
jo
push
int
jo
in
and
lea
mov
mov
(bad)
jae
or
pop
push
movs
call
pop
lods
mov
or
or
sbb
inc
jecxz
xor
jecxz
or
fcomp
xchg
cmc
out
ret
jne
add
pop
dec
push
int3
mov
pushf
and
mov
out
pop
cmps
lods
cmps
test
xor
loop
aad
mov
jne
aad
int
cld
inc
fimul
in
pusha
jl
push
jne
jns
les
adc
adc
(bad)
outs
test
test
int
push
stos
dec
(bad)
or
arpl
rol
je
scas
adc
jge
lahf
clc
sbb
stc
cmp
inc
inc
mov
out
test
stc
(bad)
sahf
add
idiv
test
lods
pop
aas
mov
ja
mov
test
jecxz
push
xchg
xor
dec
cmps
outs
or
sub
and
int
shl
jp
test
repnz
jne
cwde
cdq
ja
sbb
pop
(bad)
jb
call
adc
pop
lods
adc
adc
mov
cmp
pop
mov
xchg
inc
lahf
mov
push
bound
jb
mov
push
pop
scas
daa
sub
xchg
imul
cld
scas
gs
outs
xchg
pusha
push
aad
push
and
pop
je
add
add
sahf
pop
das
pop
jmp
stos
dec
loop
pop
push
iret
es
lahf
ror
cmp
call
sub
or
in
int
hlt
mov
inc
mov
rcr
stos
test
stc
(bad)
sahf
cmp
push
(bad)
jl
leave
sub
sbb
stos
cdq
cs
dec
fyl2xp1
xchg
cwde
outs
std
fdiv
xor
out
xchg
jb
(bad)
stos
fst
jb
fmul
clc
mov
out
mov
inc
push
add
dec
ret
cdq
xchg
int3
inc
daa
jmp
out
mov
push
push
adc
or
(bad)
mov
push
int
pop
inc
jp
(bad)
mov
and
pop
dec
cmp
sbb
cmp
jns
stos
stos
lods
xchg
pop
mov
in
sub
call
popa
lea
push
xor
loope
ins
xchg
test
stos
push
jae
add
(bad)
jg
cmc
ror
cmp
call
sub
lahf
mov
xchg
sti
in
mov
ret
add
push
addr16
ror
(bad)
sub
sbb
retf
mov
mov
jae
push
test
pop
fsub
aas
mov
add
sbb
jle
sar
imul
or
inc
push
mov
add
inc
retf
sahf
in
mov
cdq
jp
mov
stos
loopne
in
test
ja
cdq
repnz
cmp
(bad)
and
push
and
pop
inc
sti
or
movs
out
ds
call
in
pop
push
xchg
in
out
adc
imul
lds
adc
das
xor
cmp
imul
fcomp
ins
push
stos
cmp
mov
(bad)
push
loope
shl
retf
jle
xor
fs
shr
add
out
jo
inc
adc
rcl
mov
mov
add
inc
arpl
call
ja
jmp
jns
pop
pop
and
cmp
mov
pop
push
out
push
inc
jae
call
dec
aad
gs
mov
fcmovnbe
fcmovnbe
std
jmp
mov
push
or
and
nop
adc
imul
and
xor
(bad)
cmp
lods
pushf
xchg
movs
and
popf
sar
add
cmp
aaa
int
xchg
mov
push
push
xchg
adc
loopne
jb
cmc
add
int3
sbb
dec
xchg
cli
xchg
(bad)
nop
cmp
jne
in
cmc
pop
lock
or
shr
(bad)
adc
das
jbe
mov
xlat
les
test
pop
or
and
push
mov
cmp
adc
add
or
push
mov
dec
pop
xchg
pop
sbb
inc
int3
pop
fxch
push
cmps
fwait
mov
and
mov
mov
xchg
(bad)
jne
out
lea
data16
pop
pop
loope
jb
xchg
pop
xchg
ss
retf
inc
mov
and
dec
addr16
cld
cmp
mov
inc
leave
push
mov
ins
jae
add
retf
lahf
loop
(bad)
aam
fldcw
pop
call
out
jecxz
pop
nop
mov
push
ret
outs
jno
pop
pop
pop
ret
mov
jmp
cs
adc
cmp
mov
fisubr
pop
je
sbb
fcomi
cmc
mov
and
cs
jns
jge
mov
push
hlt
ret
imul
mov
sub
retf
mov
dec
lods
out
fnstenv
test
mov
and
cmps
test
clc
or
adc
adc
inc
mov
jno
mov
neg
sub
hlt
dec
push
sub
sub
or
icebp
xchg
call
cmp
dec
lock
push
in
test
push
js
loope
inc
ror
push
mov
mov
dec
xchg
push
or
pop
cmp
loopne
jg
loopne
adc
xor
les
push
outs
test
and
or
jbe
les
scas
xor
mul
popa
int
pop
bound
add
push
cmp
rcl
xchg
push
jl
add
sbb
dec
iret
ret
xor
retf
dec
add
arpl
jne
mov
adc
inc
or
or
or
pushf
and
es
out
jb
dec
mov
retf
scas
in
mov
add
pop
aas
lock
adc
adc
aaa
sbb
xor
push
retf
push
pop
mov
cmp
stos
or
movs
cmp
lock
aad
xchg
mov
jecxz
sub
aam
fbld
bound
loope
jg
(bad)
loop
push
inc
mov
popf
pop
das
dec
and
or
inc
sub
ss
sub
(bad)
leave
in
or
inc
outs
inc
ins
mov
iret
dec
push
ror
aas
cmc
or
ja
jmp
ins
(bad)
jl
shl
mov
sbb
mul
stos
fwait
sbb
mov
leave
xchg
mov
retf
(bad)
sub
out
mov
add
ror
pusha
mov
cmc
jle
inc
lea
int3
mov
and
cwde
into
popf
addr16
lea
std
sub
pop
(bad)
xchg
pop
xchg
push
push
sahf
mov
stos
add
or
xor
ja
and
ret
adc
mov
sbb
cli
fisubr
mov
lds
fldenv
repnz
ins
sbb
xor
sbb
lds
sbb
dec
clc
or
call
movs
push
das
dec
mov
sbb
adc
rcr
outs
sbb
xchg
call
cs
lahf
clc
sbb
add
push
cs
scas
call
xchg
add
rcl
sti
ins
pop
cmp
mov
cmp
mov
xor
sbb
jl
les
inc
pusha
mov
jg
jns
and
xor
jge
inc
xor
call
retf
xlat
and
xchg
adc
xchg
mov
adc
mov
in
test
pop
prefetch
or
popa
adc
cmp
add
rcl
cmp
pop
add
sti
cmp
shl
ins
xor
mov
iret
xchg
rcr
mul
les
xchg
jnp
xlat
aaa
xor
push
pop
(bad)
nop
movs
mov
idiv
hlt
pusha
pop
cwde
fsubrp
xor
ret
imul
xchg
dec
fnstcw
sub
out
pmaddwd
cmp
leave
or
movs
and
inc
gs
push
shr
push
icebp
cmp
mov
out
ins
int3
pop
fldcw
rol
mov
call
rcr
push
mov
fldenv
adc
pusha
pop
mov
std
jmp
mov
and
xor
adc
iret
inc
push
dec
scas
sub
inc
jmp
jle
xchg
jmp
fidivr
adc
popf
pop
enter
push
push
icebp
jecxz
jmp
dec
fwait
ins
adc
mov
xor
cmp
cmps
push
add
loop
scas
ret
mov
aas
cmc
mov
dec
iret
mov
cld
jecxz
sbb
sbb
push
mov
test
inc
out
jnp
xor
add
in
fisttp
mov
add
jbe
test
and
std
fmul
cmp
mov
inc
movs
aaa
and
jmp
pusha
pop
in
dec
aaa
xor
shl
outs
daa
jge
xor
pop
(bad)
out
sbb
push
dec
jmp
or
cwde
sbb
(bad)
xchg
jmp
scas
test
jge
dec
jmp
(bad)
pop
sahf
iret
imul
push
ins
ret
sbb
sub
xor
(bad)
pop
jns
cs
mov
add
add
popf
jno
arpl
cmps
push
mov
not
lea
(bad)
repz
pop
fdiv
aaa
cmp
imul
jmp
outs
fnstcw
xchg
and
mov
(bad)
bound
or
xor
rcl
nop
shr
inc
or
js
test
xor
inc
scas
cmps
sbb
jb
mov
pop
stos
hlt
and
sbb
cmps
mov
pop
push
push
out
sar
xor
jno
vmaxpd
jle
idiv
jo
inc
jno
push
cwde
pusha
sbb
dec
adc
fxch
push
xchg
fisttp
mov
pop
jmp
mov
cmp
in
popf
lock
imul
jno
ror
dec
fdiv
pop
push
rcr
rcl
or
leave
bnd
xchg
addr16
xrelease
cmp
mov
push
mov
sar
dec
or
mov
adc
movs
test
in
call
jns
inc
and
sbb
test
dec
popf
repnz
call
fdivr
dec
int
test
test
xor
dec
fld
lea
stc
lahf
ss
sub
fdivr
(bad)
out
in
xchg
mov
adc
fimul
jl
adc
cli
push
inc
ins
dec
iret
pop
or
retf
pop
inc
out
(bad)
mov
inc
jle
xlat
pop
loope
jbe
aad
xor
repnz
es
loope
sub
push
pop
xchg
test
rcr
jmp
out
inc
rcl
jo
and
mov
mov
stos
(bad)
mov
es
cmps
test
rcr
rcl
repz
cmps
out
in
ins
mov
adc
mov
cs
xchg
mov
das
ret
sub
in
rol
and
aas
imul
jbe
(bad)
sub
sub
cmps
cmp
push
sbb
dec
xchg
mov
scas
test
pop
cdq
push
pop
test
cmp
fst
imul
aas
call
and
ins
imul
xor
out
pop
sbb
inc
(bad)
mov
out
inc
xchg
scas
jno
xchg
fcmovnb
out
(bad)
xlat
fiadd
adc
xchg
mov
pop
adc
push
inc
add
mov
push
stos
jecxz
(bad)
sub
rcr
shl
mov
in
enter
outs
outs
or
or
scas
cmps
int
clc
sbb
xchg
xor
jo
sar
pop
lock
or
test
popa
das
pop
pop
nop
sbb
jg
in
add
push
ficom
push
(bad)
cmps
jno
push
sub
xor
cmp
xor
int3
dec
or
and
dec
inc
xchg
rcl
aad
sbb
out
xchg
and
adc
movs
pop
(bad)
f2xm1
sti
stos
xor
retf
test
cdq
ins
pop
inc
xchg
dec
mov
mov
adc
repz
xchg
pop
xchg
fs
jns
pusha
jle
out
or
loopne
jg
ror
push
inc
jmp
cmp
into
cmp
out
ret
movs
and
mov
in
adc
js
sbb
and
cs
cmps
call
loop
add
and
cdq
mov
dec
scas
cmp
xor
push
imul
cmp
test
popa
xchg
aaa
xchg
int3
xlat
mov
xlat
(bad)
ins
or
and
ds
mov
bound
sub
aas
dec
push
add
stos
mov
push
mov
dec
fsub
fwait
(bad)
sub
xor
mov
jbe
aad
sbb
mov
and
je
cmp
aam
test
xchg
test
out
js
pushf
psubq
mov
std
push
arpl
int3
ror
jp
adc
adc
jno
fpatan
(bad)
sub
aaa
fdiv
in
ja
test
test
dec
cmp
pop
in
inc
jecxz
sub
mov
fs
loope
out
nop
je
mov
or
jne
lock
retf
js
icebp
sti
pop
mov
xadd
mov
mov
lahf
inc
ficomp
push
push
mov
cmps
xor
(bad)
pop
popf
clc
jb
add
fst
push
xchg
or
sub
scas
mov
jmp
sbb
cmp
movs
out
sbb
out
cmp
xchg
fsub
sbb
and
adc
les
nop
inc
pop
repz
jnp
jl
lods
sub
xor
loopne
adc
int3
cs
push
in
adc
mov
mov
lods
fs
or
fwait
in
inc
dec
cs
jecxz
xchg
jns
scas
icebp
and
xchg
fisttp
lock
sar
inc
xchg
and
test
fidiv
dec
jnp
cli
lods
loope
sub
inc
xchg
in
inc
daa
imul
inc
mov
popf
bound
std
mov
mov
outs
sbb
mov
pop
dec
cmps
or
push
outs
mov
je
std
sub
xor
fwait
dec
cld
aam
(bad)
and
das
and
xchg
pop
mov
cmp
push
scas
pop
mov
inc
sub
xor
pushf
por
mov
hlt
push
jo
cwde
int3
ror
bound
pop
mov
ret
repz
sub
aaa
int3
mov
in
inc
cmp
pop
mov
jmp
sti
shr
ja
jg
cld
imul
loope
inc
mov
inc
or
jbe
repz
retf
js
jmp
inc
gs
loope
mov
mov
popf
inc
fcomp
push
push
cdq
scas
xchg
push
(bad)
pop
test
popa
imul
ficom
push
xchg
adc
sub
mov
inc
std
test
or
xchg
ret
cmp
mov
push
sbb
out
sub
xchg
fsub
sbb
cmp
adc
in
inc
stos
push
repz
jnp
jl
mov
sub
clc
mov
dec
in
sbb
cs
push
in
fwait
or
dec
xor
xchg
cmps
or
jns
lods
jle
cs
sbb
adc
pop
sub
mov
push
mov
xchg
mov
cmps
or
loop
xlat
pop
enter
movs
jmp
enter
dec
retf
sbb
test
mov
rcr
jbe
call
ficomp
push
jmp
sub
sbb
pop
jns
dec
cmp
inc
test
adc
sbb
sub
mov
inc
std
mov
call
mov
(bad)
adc
movs
pop
jge
stos
sub
(bad)
xchg
out
mov
xor
ss
fst
mov
in
push
loope
mov
int3
sub
cmp
retf
aam
retf
inc
int
test
out
xor
xor
bound
mov
mov
daa
popa
test
sbb
mov
mov
cwde
pop
push
stos
push
xchg
bound
cwde
pusha
retf
dec
lods
mov
xacquire
fwait
neg
cld
mov
inc
or
push
pop
inc
mov
pop
mov
pop
add
loope
or
mov
(bad)
jne
mov
icebp
aam
imul
push
stos
inc
inc
mov
or
add
dec
dec
cmp
and
xchg
fsub
imul
mov
nop
push
inc
(bad)
pop
mov
jge
adc
not
push
add
xor
cmc
inc
je
call
fcom
std
sahf
in
and
add
ins
mov
push
xchg
sbb
add
in
jnp
loop
cmp
jnp
push
or
jge
adc
pop
movs
inc
data16
dec
scas
or
adc
mov
fidiv
jo
outs
retf
dec
pusha
mov
cmp
call
xor
mov
lfs
mov
cwde
cdq
adc
movs
and
pop
mov
push
mov
les
xor
jne
cmp
dec
inc
stos
push
ins
ror
mov
add
ja
mov
or
int
or
push
push
popa
pop
and
sbb
sub
mov
push
jp
and
adc
stc
push
push
xor
pop
fadd
aam
(bad)
dec
mov
xchg
sbb
popf
lods
ds
mov
push
ret
add
push
lods
leave
in
push
jl
dec
inc
xchg
sub
retf
adc
xchg
cmp
inc
dec
lea
add
sbb
cmp
mov
cmp
fdivr
mov
jp
mov
pop
inc
mov
hlt
scas
inc
fisttp
rcr
jl
and
fwait
mov
hlt
in
movs
sub
jmp
mov
mov
inc
cld
lock
loope
adc
das
pop
or
push
lea
fimul
pusha
sbb
cmp
jmp
out
rol
ret
outs
and
int3
test
xchg
js
pop
mov
les
ja
js
jge
in
psllq
pop
xlat
add
and
xor
add
icebp
mov
jl
fs
sti
or
and
push
cmp
push
fmul
cdq
js
fdivr
ja
push
inc
adc
xor
mov
lock
std
push
cmp
test
mov
jb
xor
fadd
lods
lods
pop
and
push
inc
ins
add
and
aaa
sbb
cmp
ficom
mov
mov
sub
push
mov
test
dec
repz
fwait
repnz
sti
sbb
sub
loope
push
and
jecxz
mov
sar
cwde
stos
lock
or
sti
dec
push
sub
cmps
mov
add
xchg
jo
ret
cmps
in
gs
jns
pop
clc
cmp
scas
mov
mov
test
mov
adc
out
fnstcw
add
and
enter
cmp
stc
mov
fisubr
test
lods
push
movs
jge
dec
inc
jno
daa
inc
jmp
mov
sub
lods
cwde
loope
(bad)
ja
mov
mov
les
and
inc
int
pop
(bad)
int
cmp
mov
fldenv
pop
pushf
xchg
xor
jb
jle
dec
ja
inc
mov
add
sub
mov
das
jbe
inc
inc
out
cmc
adc
(bad)
xchg
and
std
stos
mov
pop
dec
ret
data16
pop
loop
ror
sub
rcr
icebp
mov
(bad)
hlt
inc
sbb
cmp
rcr
mov
enter
pop
ret
cmp
push
arpl
fdiv
mov
pop
mov
add
and
sbb
fisubr
or
add
shr
test
inc
jno
sbb
xchg
sbb
jbe
jecxz
mov
push
cwde
cdq
fsub
inc
data16
pop
retf
movs
add
das
adc
mov
rcl
sub
mov
add
je
xchg
and
imul
mov
or
ret
and
out
(bad)
fistp
imul
and
test
jmp
push
loope
pop
movs
mov
mov
fwait
add
(bad)
cmp
retf
(bad)
sbb
inc
or
sub
lahf
clc
clc
imul
mov
sub
jecxz
jnp
xor
mov
shr
arpl
jno
add
cwde
enter
and
push
inc
and
test
push
cmps
fwait
scas
xchg
sub
dec
push
inc
sbb
jbe
or
dec
icebp
arpl
pushf
ret
and
dec
mov
ins
in
and
jno
xchg
shl
push
gs
sub
add
test
push
inc
lahf
jge
aaa
jb
test
jns
bound
movs
mov
fcomp
jmp
ret
ret
push
loope
mov
out
jmp
mov
sbb
mov
das
ret
push
and
mov
jae
add
dec
sbb
push
adc
lock
jns
mov
in
gs
jns
pop
cli
cmp
call
mov
lods
inc
mov
pop
inc
movs
shr
aad
or
test
es
or
pop
jmp
pusha
sbb
or
ss
sbb
ins
sbb
pop
push
inc
cmp
call
add
pop
push
addr16
sbb
sar
sbb
out
dec
(bad)
out
and
cld
push
aam
cwde
xor
shl
mov
add
in
call
jmp
out
xlat
cmps
cmp
xor
out
xlat
arpl
stos
imul
pop
repnz
push
and
pop
sub
add
pop
xor
mov
adc
cwde
mov
stc
imul
sub
mov
mov
imul
mov
neg
jge
dec
dec
pop
aas
pop
mov
mov
out
sub
mov
addr16
adc
sbb
(bad)
or
pop
rcr
or
movs
pusha
xchg
ja
mov
inc
retf
lods
jge
push
pop
retf
pushf
in
movs
xchg
mov
cmps
pop
scas
cli
jnp
cmp
outs
data16
xor
sar
retf
(bad)
mov
leave
jle
jne
push
mov
or
sahf
xor
stos
mov
sbb
dec
pop
call
sub
pop
jns
cmp
popf
outs
cmc
pop
and
inc
or
pop
cld
sub
retf
lods
aas
into
sar
aam
jp
or
pop
(bad)
aas
or
sub
mov
xor
fist
jbe
push
repz
movs
cmp
mov
or
ret
and
out
mov
add
and
or
xchg
mov
cmc
dec
int3
mov
xchg
test
daa
mov
dec
inc
adc
jmp
push
or
add
loopne
retf
adc
jmp
pop
mov
lds
mov
repz
sbb
ds
inc
pop
adc
xchg
stos
call
in
gs
push
repz
imul
cmp
pusha
scas
mov
call
sbb
jo
aam
xchg
test
cmc
xlat
sub
add
mov
cmp
cmps
jmp
fs
mov
mov
xlat
into
ins
ins
repz
test
pusha
inc
rcl
in
adc
mov
test
inc
push
mov
jbe
lahf
cdq
push
fcom
sbb
xchg
pop
pop
stos
xlat
fcomp
push
jmp
lahf
and
mov
shl
cs
rcr
jmp
enter
stc
xchg
movs
mov
mov
ficom
jno
aaa
imul
push
or
sub
ins
outs
mov
std
imul
repnz
icebp
ds
add
cmps
aas
cmc
rcr
(bad)
inc
add
add
pop
fidivr
adc
std
pusha
ja
sub
sti
jnp
out
jle
jno
cmp
neg
(bad)
mov
mov
dec
fnstcw
(bad)
pop
nop
adc
inc
xor
les
test
leave
push
ins
sbb
int
push
xchg
and
or
gs
popf
jbe
addr16
pop
daa
sbb
cmc
add
call
retf
jmp
dec
inc
lds
daa
push
pop
test
sar
inc
xchg
sub
cmp
pop
scas
mov
ret
push
push
dec
sub
call
out
jecxz
xchg
push
cmp
gs
jl
push
jno
rol
push
pop
jmp
(bad)
pop
mov
or
iret
(bad)
cmp
clc
sbb
add
sbb
push
std
rol
ror
jnp
hlt
bound
lods
jmp
test
jle
push
sbb
sbb
fsub
xor
ja
ja
scas
sbb
sbb
inc
dec
(bad)
xchg
inc
ins
or
leave
stos
sbb
stc
ja
hlt
call
or
lock
pop
pop
stc
popa
in
mov
lods
test
jnp
xchg
mov
inc
sar
xor
icebp
adc
int
sbb
mov
pop
push
stos
jns
dec
call
cdq
mov
xchg
jecxz
in
pop
push
xchg
test
xor
dec
ins
sub
sbb
(bad)
jg
call
stos
pop
das
dec
cmp
push
es
std
sub
int
leave
xchg
lock
nop
mov
cmp
sub
test
bound
in
xchg
shl
or
lods
movs
enter
ror
add
add
and
mov
sbb
dec
sub
loopne
aas
test
or
pop
or
xor
aad
cmps
mov
out
jmp
aad
pop
xchg
mov
push
pop
lods
and
jl
add
dec
xor
fnstenv
movs
mov
aad
repz
(bad)
pop
ins
shl
sub
jno
cmp
retf
out
sbb
mov
ss
pop
push
repz
std
in
div
lds
ret
test
mov
aam
push
xor
cmps
(bad)
arpl
adc
(bad)
dec
test
cli
jmp
nop
mov
adc
sbb
ds
push
jmp
rsm
retf
arpl
fisttp
ja
jge
cmp
imul
scas
stos
mov
mov
fild
or
sbb
sub
leave
sub
add
aas
pushf
cmc
jle
inc
lea
or
mov
es
js
and
fcomp
xor
stos
test
or
pop
pop
mov
retf
icebp
pushf
sbb
xchg
retf
ins
mov
retf
stos
inc
push
data16
mov
(bad)
(bad)
jno
loope
fdivr
out
xor
or
popf
sbb
push
xchg
out
pop
mov
cmc
retf
cmp
xchg
cmp
gs
adc
xchg
cld
in
out
adc
dec
push
inc
or
xor
retf
xchg
pushf
lds
mov
cmp
mov
shr
mov
mov
std
ret
lock
add
leave
dec
jns
mov
rol
xor
and
jecxz
xchg
test
cmps
xor
jecxz
cmps
outs
or
ins
repz
jge
jecxz
pop
pop
jl
or
movs
sbb
sbb
adc
push
out
xchg
(bad)
push
daa
shl
movs
push
aas
adc
mul
dec
jl
jmp
adc
and
stos
jns
inc
sbb
les
xchg
pop
les
gs
stos
pop
xchg
dec
in
adc
gs
jecxz
push
jns
adc
aam
sbb
and
sub
pop
lods
push
inc
(bad)
cmp
sbb
push
sahf
ror
push
jge
(bad)
pop
mov
push
and
xchg
bound
inc
inc
mov
sub
hlt
(bad)
jg
push
jo
xchg
adc
out
sti
dec
push
push
mov
and
xchg
bound
mov
jl
loop
cld
fdivr
adc
cwde
and
add
lds
xchg
inc
lea
xor
adc
out
cmp
test
fcom
inc
sar
(bad)
out
sbb
rcl
cmp
add
pop
cs
jp
int
inc
dec
mov
pop
fdiv
out
jp
ins
pop
pop
cmp
cmps
add
adc
jmp
test
call
stos
out
jg
lea
stos
add
aam
stos
(bad)
fwait
mov
rcr
rol
je
xchg
jmp
jmp
ja
sub
pop
adc
in
xchg
sti
mov
out
sub
inc
push
cwde
xor
das
(bad)
imul
mul
mov
scas
xchg
xchg
mov
add
xchg
test
ins
cwde
dec
mov
xchg
ins
mov
push
fist
cmp
in
lods
mov
mov
lea
cdq
inc
adc
pop
cmps
xor
pop
(bad)
fsubr
jbe
mov
mov
cwde
add
pop
dec
repnz
mov
stc
dec
add
add
dec
ja
jp
or
sbb
addr16
push
sbb
mov
call
test
sbb
(bad)
imul
pop
xor
or
jge
leave
js
cmp
clc
in
mov
or
jb
jle
mov
icebp
gs
imul
add
xor
add
dec
into
pop
dec
jle
and
sbb
mov
and
or
pop
call
(bad)
xor
dec
jmp
clc
push
mov
push
into
daa
inc
ror
add
and
mov
enter
and
xchg
in
or
push
sub
sub
adc
repz
fsubr
pop
jo
xor
retf
test
das
pop
inc
sbb
out
daa
xchg
fsub
add
test
inc
sahf
push
sub
jecxz
fbld
ins
int
test
jmp
mov
inc
dec
push
jne
(bad)
adc
mov
pop
arpl
mov
xor
aas
mov
cs
lods
mov
sub
sti
and
outs
fbstp
(bad)
and
push
fwait
js
es
pop
push
rcr
or
aas
std
or
jae
arpl
outs
inc
mov
adc
in
ins
mov
dec
inc
leave
xchg
inc
ds
mov
int3
mov
fs
pop
mov
xor
jp
arpl
movs
jmp
inc
retf
adc
movs
add
call
and
retf
out
movs
adc
data16
test
repz
xor
repz
add
lods
jmp
test
jbe
xchg
stos
sub
xchg
xor
add
in
dec
enter
cmp
mov
or
outs
xlat
fidiv
or
xlat
pop
xor
ins
sahf
cmp
cmp
cmp
je
jno
and
js
fbstp
dec
scas
jmp
sbb
lods
hlt
loopne
mov
daa
lahf
mov
mov
mov
push
outs
popa
hlt
loope
adc
cmp
add
rcl
in
ja
clc
rol
adc
inc
retf
cmp
xor
push
mul
fdivr
aas
jecxz
out
adc
dec
scas
and
cs
in
test
mov
sub
mov
ins
sar
and
adc
ret
xchg
push
mov
repz
dec
adc
adc
in
call
(bad)
cmp
mov
fimul
out
leave
mov
or
add
jg
pop
add
adc
mov
inc
cmp
pop
icebp
xchg
out
xor
std
in
ret
sub
jl
push
mov
fdivp
jb
sub
je
enter
scas
adc
out
sub
ror
jnp
cmps
fwait
mov
mov
xor
sbb
test
ins
xchg
mov
pop
sbb
mov
scas
fdivr
lds
fild
shl
fsubrp
adc
lea
sbb
xor
test
mov
push
bound
movs
mov
cld
daa
jbe
cmp
mov
xor
adc
sub
and
mov
loopne
rcl
call
mov
mov
mov
mov
sub
call
push
adc
clc
in
xchg
imul
mov
rcr
add
mov
mov
and
imul
jge
dec
cmc
push
pop
dec
in
or
jecxz
xchg
jg
dec
mov
mov
aas
test
rcr
jl
sub
mov
movs
pop
mov
es
popa
pop
lea
fadd
jne
or
inc
call
pop
cmps
add
pop
jle
js
xchg
pop
retf
iret
shl
push
inc
pop
push
dec
inc
int3
dec
jno
dec
ss
sub
cld
ins
aad
cmp
enter
popa
outs
pushf
xchg
adc
xchg
stos
inc
retf
outs
inc
das
out
jg
xor
pop
movs
mov
ret
test
lods
add
jno
div
(bad)
neg
inc
sub
sub
and
pop
mov
mov
xlat
daa
daa
hlt
(bad)
sbb
jo
xchg
lds
pop
dec
sub
pop
cmps
add
sub
mov
es
les
and
add
in
adc
in
hlt
iret
jno
jb
mov
pop
sahf
mov
inc
pusha
adc
xlat
jmp
(bad)
push
imul
add
or
and
sub
dec
xor
cmps
dec
push
push
pop
jmp
mov
pusha
je
aad
int
xchg
adc
add
pop
jne
jns
sahf
inc
jb
sbb
pushf
lods
ins
sbb
imul
fcomp
pop
push
stos
pop
popf
or
aam
xlat
int3
sbb
je
jb
fmulp
bnd
pop
xchg
clc
in
xchg
mov
aaa
ret
add
pop
push
int
les
push
mov
add
mov
rcr
lock
add
xchg
cwde
mov
mov
ins
test
pop
int
leave
push
addr16
iret
fimul
or
jge
add
hlt
dec
or
jno
inc
fxch
pop
cmp
(bad)
addr16
fdivr
push
nop
push
mul
cmp
cmps
shr
adc
pop
std
jmp
mov
ret
js
xchg
(bad)
stos
inc
xchg
outs
(bad)
mov
lea
pop
push
inc
ja
ret
out
or
pop
pop
std
sbb
cmp
(bad)
mov
jecxz
stos
loopne
adc
inc
push
(bad)
add
mov
push
movq
call
fwait
out
pusha
out
dec
lods
sti
in
pop
adc
scas
iret
add
or
jmp
dec
jl
xor
loopne
pop
mov
scas
cmp
sbb
fs
test
mov
movs
xor
jle
push
cld
dec
sbb
jp
mov
outs
lea
fcom
push
lods
sbb
xchg
pop
fistp
fsubrp
adc
sbb
js
cmp
scas
pop
shr
pop
inc
cwde
pop
mov
dec
inc
ja
jp
or
jno
jbe
sub
popa
pop
clc
fs
jns
and
adc
call
mov
dec
mov
pop
mov
shl
or
retf
lods
push
(bad)
inc
add
clc
call
cmp
iret
dec
inc
ret
int3
sub
(bad)
mov
add
jo
fnsave
cli
jle
push
add
mov
pop
cmp
retf
push
mov
jne
mov
xor
xchg
fsubr
int3
or
in
adc
mov
xor
xchg
inc
scas
fdivr
push
(bad)
out
sbb
ins
outs
je
bound
cmc
jmp
(bad)
cmp
cs
jge
pop
jae
sub
out
xor
pop
or
pop
lahf
add
sbb
mov
mov
stos
aad
cmps
lea
push
mov
lock
ret
mov
dec
push
xlat
fs
(bad)
leave
in
sbb
adc
push
xchg
xchg
pop
lods
sti
inc
(bad)
movs
xor
lods
punpckhbw
adc
or
push
jno
data16
dec
dec
cdq
pop
dec
scas
xchg
ret
std
retf
call
jecxz
add
add
xor
push
xchg
test
add
or
retf
push
adc
jp
dec
xor
adc
pop
xlat
push
daa
std
and
gs
sbb
mov
dec
std
sub
in
jae
xor
nop
pop
in
std
test
mov
or
inc
pop
dec
fcom
pop
shr
or
cmp
xor
adc
sub
adc
adc
or
mov
push
call
or
pushf
lds
or
sbb
ret
je
mov
sub
in
mov
retf
lahf
xor
(bad)
jl
jl
push
mov
bound
mov
in
mov
jl
jp
ja
mov
test
xor
les
dec
cmc
bound
fsubr
test
xchg
jne
and
mov
or
xor
pop
jns
std
test
cs
scas
mov
sahf
shl
cmp
push
xlat
aad
add
mov
add
(bad)
es
pop
loopne
cs
retf
push
pop
jmp
mov
xchg
jmp
stc
and
test
mov
mov
mov
pop
dec
push
jns
imul
loopne
jmp
imul
mov
sub
jbe
sbb
jp
cmp
inc
ss
out
pusha
outs
je
inc
sbb
mov
sub
daa
(bad)
ins
jne
loop
adc
ret
xchg
add
lods
inc
sbb
mov
add
ja
mov
fsub
sub
xor
and
mov
cmc
popa
xchg
shl
pushf
or
cdq
je
xchg
inc
ins
cmps
push
ds
popf
loope
je
out
sbb
cmp
gs
ficom
(bad)
in
jae
bound
pop
and
movs
test
mov
sar
and
mov
test
loope
pop
jle
sti
adc
fbld
and
fisttp
jns
ror
push
and
adc
aam
dec
aas
popf
and
ja
loopne
scas
pusha
xchg
ins
aad
mov
push
inc
push
pop
int
sub
cmps
sub
nop
cmp
mov
add
push
sub
sbb
and
jmp
mov
adc
cwde
and
xor
push
mov
pushf
dec
int3
mov
xor
xor
inc
scas
movs
das
sub
push
stc
and
cs
xchg
pop
lods
fild
loopne
jmp
mov
(bad)
mov
cmps
push
aam
cwde
(bad)
dec
push
sar
fstp
sti
jmp
xchg
or
adc
mov
loope
scas
call
xchg
cmp
call
cld
and
mov
add
sub
jmp
gs
pusha
mov
shl
mov
sub
add
adc
(bad)
and
jo
movs
pop
cmp
push
in
xchg
cmc
aas
lods
leave
push
das
mov
mov
int
ja
(bad)
mov
and
out
cmp
lock
mov
loopne
mov
mov
psrad
pop
mov
push
mov
mov
das
out
ja
cwde
jmp
add
mov
adc
gs
cmp
dec
outs
gs
repz
repnz
adc
fs
dec
push
pushf
inc
stos
loop
inc
pop
shl
dec
mov
pop
push
mov
sub
push
cli
mov
mov
dec
in
adc
gs
inc
dec
push
jns
and
aam
sbb
div
adc
adc
lods
mov
add
rcl
sub
and
xchg
int3
xlat
pop
aas
pop
ja
cmps
mov
cli
pop
push
ret
jo
adc
xchg
push
inc
test
retf
(bad)
xor
sar
sbb
mov
pop
mov
push
or
outs
std
fsubr
mov
push
fnstenv
pop
(bad)
lahf
dec
lea
hlt
in
adc
xor
or
cmp
add
ss
fdivr
lods
jmp
xchg
sub
mov
push
pop
mov
retf
inc
sbb
in
into
sub
jp
rcr
sub
mov
movs
fisttp
mov
cmp
lahf
icebp
test
lods
imul
and
cli
ret
lds
sbb
loope
outs
test
cmp
jo
sar
mov
scas
scas
push
stos
mov
fwait
das
(bad)
leave
repnz
sahf
clc
in
xchg
push
stc
mov
and
sbb
xchg
push
pop
xor
(bad)
into
jl
rol
cli
jle
mov
gs
ficom
cli
sub
pop
and
and
mov
cmps
fwait
ss
add
ror
arpl
add
cmps
scas
ins
jecxz
lods
ror
data16
fcmove
jg
mov
out
pop
xchg
push
shr
adc
sbb
mov
adc
arpl
out
dec
movs
add
push
stos
jns
push
sbb
pop
inc
int
aad
lods
mov
ficom
push
xchg
pop
ja
push
jns
cmp
fnstsw
mov
jl
push
shr
xchg
mov
stc
mov
inc
test
cmc
mov
jmp
ficomp
cdq
ins
push
cmc
aas
mov
mov
add
(bad)
adc
aad
popa
or
mov
clc
stos
in
mov
adc
push
jl
cli
aad
jae
sub
test
push
adc
and
mov
jle
sbb
add
in
sbb
xor
jns
xor
xor
add
xor
inc
cwde
adc
sar
jmp
loope
mov
pop
cmp
mov
xor
mov
ds
test
jo
mov
(bad)
mov
cmp
xchg
imul
sub
(bad)
bound
cmp
push
and
mov
fnstenv
push
popf
add
jle
cmp
push
dec
add
ja
pop
sahf
clc
in
nop
mov
mov
out
push
mov
sti
jnp
mov
retf
jl
or
iret
repz
mul
iret
out
mov
ja
xchg
xchg
inc
fcom
fcomp
mov
dec
cmps
fwait
inc
pop
inc
loopne
pop
dec
or
dec
and
xor
into
cmps
(bad)
sbb
mov
das
xor
cmp
cwde
fcom
xabort
loope
gs
test
pop
push
add
adc
jo
rol
loop
test
aam
cwde
in
(bad)
stc
jne
sbb
ja
pop
call
cmp
repz
dec
pop
pop
call
adc
stos
lods
jle
call
les
cs
mov
stos
xchg
dec
push
jae
sbb
ja
mov
shl
sub
and
lahf
rcl
adc
cmps
int
ror
mov
sbb
add
mov
loopne
gs
adc
ins
jmp
push
aad
fnstenv
push
mov
mov
cmc
hlt
stc
loop
ret
xor
outs
jecxz
adc
jne
push
daa
std
jp
gs
add
cmp
aas
inc
inc
in
xor
mov
gs
inc
dec
adc
(bad)
mov
cli
(bad)
inc
rcr
pop
push
addr16
sub
and
push
in
in
outs
fadd
shl
mov
pushf
mov
aad
sub
add
jno
xchg
scas
xor
data16
int3
mov
jl
push
pop
add
xchg
sbb
add
mov
fcom
dec
adc
mov
cmovp
ja
scas
add
out
adc
bound
loopne
dec
jb
add
add
sbb
dec
xor
mov
pop
sbb
fdivr
addr16
push
and
call
cmp
push
dec
xchg
arpl
push
pop
add
adc
fcmovbe
in
dec
xor
jae
cmps
push
aam
cwde
dec
mov
jne
out
dec
std
or
sbb
jno
or
mov
push
add
add
mov
push
push
push
int
sbb
das
dec
adc
jl
ror
cmps
loop
mov
in
sbb
or
or
xchg
sbb
shr
into
aas
xchg
sub
push
lahf
fild
adc
lods
inc
push
push
jae
cdq
pop
aaa
pop
sub
scas
adc
nop
in
popf
pop
and
xor
mov
sbb
nop
pop
pop
xor
xchg
mov
add
mov
mov
daa
jge
xor
mov
fist
xchg
shl
popa
push
je
push
xchg
in
mov
adc
cli
es
out
vshufps
pop
sar
xchg
cld
out
mov
or
cmp
and
sbb
mov
push
jns
pop
push
repz
inc
adc
retf
xchg
mov
mov
fist
retf
ins
mov
or
aaa
cmp
fiadd
push
adc
mov
push
sar
aas
pop
sbb
xchg
ss
lahf
fistp
dec
jl
inc
or
mov
xlat
mov
sub
xchg
hlt
jmp
jnp
(bad)
dec
sub
dec
pusha
ret
enter
jmp
cmps
or
or
call
jp
fdivr
push
fist
xchg
nop
cs
jle
je
mov
mov
mov
inc
icebp
iret
shl
mul
test
psubb
cli
inc
jecxz
add
scas
mov
xchg
dec
in
adc
popa
pop
cmp
mov
clc
imul
outs
dec
push
adc
(bad)
daa
jmp
dec
sahf
dec
mov
cdq
test
(bad)
arpl
or
mov
mov
call
sub
sub
aaa
cmp
jmp
xchg
loop
jmp
test
inc
fsub
mov
add
mov
dec
sub
pop
fldenv
dec
sub
dec
pusha
and
dec
xchg
shl
movs
jge
dec
int3
dec
add
lods
rcr
pop
out
es
lods
cld
cdq
adc
jmp
pop
jbe
push
mov
mov
mov
adc
push
or
pop
inc
sbb
and
sub
div
mov
sub
inc
jno
retf
jle
lock
mov
sub
xlat
stos
inc
in
jecxz
lahf
out
cmc
in
(bad)
xchg
push
inc
imul
fist
push
aaa
sbb
scas
cmc
jnp
or
pop
jnp
add
fild
xor
hlt
mov
rcl
jmp
add
ret
xchg
dec
hlt
lods
inc
adc
fidivr
dec
mov
aas
pop
dec
and
jmp
jle
or
or
fs
or
or
movs
and
dec
push
adc
mov
mov
fcom
(bad)
pushf
inc
loope
gs
mov
xchg
stos
loopne
push
jae
or
add
addr16
clc
into
or
cmc
call
cdq
mov
mov
add
mov
sti
sti
sub
xor
adc
icebp
stos
adc
ret
and
adc
adc
imul
inc
ss
dec
(bad)
xor
pop
es
push
or
call
sar
jmp
nop
mov
mov
iret
dec
push
xchg
jbe
ins
out
mov
retf
jmp
mov
or
cwde
gs
fsub
dec
fnstcw
sbb
imul
and
adc
dec
adc
gs
hlt
in
pop
imul
add
test
mov
adc
pop
mov
fist
adc
into
pop
movs
sbb
sbb
pop
icebp
iret
(bad)
or
inc
pop
and
pop
repz
movs
mov
sub
fcmovne
or
xchg
fimul
imul
loope
and
adc
jmp
cmp
xchg
push
int
or
dec
mov
or
xchg
rcr
rol
jo
leave
repnz
(bad)
jno
mov
mov
std
sbb
sub
jmp
arpl
cwde
ret
lods
into
xchg
push
push
add
cld
pop
aas
imul
jl
bound
jg
inc
test
js
es
or
fnstenv
stos
xchg
add
inc
jl
add
mov
push
mov
jbe
adc
jmp
xchg
mov
jae
add
cmp
jo
or
xchg
iret
jnp
into
aas
bound
inc
(bad)
and
cli
sbb
leave
add
cdq
mov
fwait
or
out
xor
inc
jns
jecxz
push
jg
ins
push
push
inc
inc
bound
mov
lods
push
dec
shl
xchg
push
sub
fist
cmp
sub
jnp
pop
int
cmp
adc
xchg
imul
mov
fnsave
cli
jle
cmp
sub
push
sub
nop
std
push
dec
and
xor
es
mov
add
or
adc
clc
sub
xor
inc
fxch
mov
push
lea
mov
(bad)
fdivr
mov
in
sub
stos
enter
push
xchg
add
mov
add
outs
ds
out
pop
int3
jl
push
ret
jne
sbb
mul
and
fcomp
stos
push
and
sahf
adc
imul
out
jg
call
(bad)
pop
das
dec
mov
or
ret
ror
retf
xchg
pushf
lds
or
in
or
push
ret
je
mov
sub
mov
sub
sahf
mov
hlt
or
(bad)
out
in
add
push
jbe
pop
mov
ins
pusha
xchg
adc
out
ss
ins
fdivr
call
dec
mov
lea
popf
and
jle
(bad)
jge
fld
outs
iret
inc
push
daa
jmp
push
lods
leave
retf
xchg
in
fwait
addr16
out
dec
(bad)
out
and
mov
jge
sbb
imul
dec
in
sub
inc
and
mov
dec
out
cmc
in
fwait
xchg
push
inc
jmp
fst
test
lahf
add
inc
add
sti
aaa
cmp
inc
sub
std
fild
sti
in
xchg
outs
mov
mov
push
pop
sti
adc
adc
push
mov
jnp
jl
push
stos
push
fdivp
adc
mov
adc
pop
inc
bound
and
sbb
out
lea
out
jo
push
ins
mov
jecxz
jb
jl
adc
in
jmp
jp
leave
pop
cwde
cdq
iret
jb
daa
jmp
cmp
xchg
loop
retf
iret
mov
adc
xor
dec
cmps
mov
push
aam
cwde
pop
xchg
stc
jne
mov
xchg
ins
pop
clc
mov
sub
push
xchg
adc
jecxz
aad
pop
cmp
push
mul
enter
test
std
icebp
push
pop
sub
push
jg
rol
fcmove
leave
repnz
scas
(bad)
mov
pop
ins
mov
add
dec
inc
pop
aam
shr
cmp
popa
popf
pushf
sahf
movs
xor
mov
or
inc
cmc
sub
daa
outs
ja
scas
ja
out
xchg
sub
jae
fs
fiadd
or
inc
lea
xor
rcr
jecxz
sub
fcomp
jmp
popa
sahf
dec
mov
xchg
stos
loopne
push
jae
or
add
ins
int
clc
shl
test
hlt
clc
jo
lods
push
retf
inc
ins
xchg
cmc
rol
fild
or
push
scas
sbb
retf
sar
leave
adc
add
sub
jg
jb
push
mov
test
adc
(bad)
arpl
(bad)
out
fld
(bad)
adc
pop
ds
sub
lahf
out
sbb
sti
in
xchg
xchg
cmps
test
inc
(bad)
cwde
addr16
sub
into
aas
mov
push
cwde
retf
dec
test
fsubr
loopne
pop
mov
scas
adc
fdiv
cmp
lock
mov
xchg
dec
xchg
mov
add
mov
or
mov
xlat
jp
push
inc
cwde
cdq
dec
xor
sbb
xchg
iret
dec
mov
push
pop
add
in
test
sub
xor
cwde
cmp
sar
loopne
(bad)
imul
data16
add
pop
mov
mov
mov
mov
stos
jp
xchg
int
sub
call
sbb
test
dec
lds
and
sar
not
sbb
ss
ja
cmps
mov
test
ret
xor
dec
scas
repnz
adc
pop
pop
(bad)
adc
aad
or
inc
adc
fidivr
dec
ret
pop
fidiv
or
je
mov
jg
dec
cmps
adc
sub
jns
xor
(bad)
xor
fldenv
mov
daa
shr
jmp
xchg
sub
gs
idiv
pop
mov
retf
out
cwde
sbb
repz
iret
inc
pop
je
cmps
rcr
dec
sbb
inc
adc
cld
ins
and
mov
mov
cdq
out
xchg
call
inc
test
gs
adc
mov
inc
in
inc
push
aad
pop
aam
push
stos
jp
outs
(bad)
jle
retf
cs
mov
in
imul
push
test
jge
push
and
add
xchg
add
mov
push
fidivr
xchg
jecxz
mul
aaa
pop
aas
popf
mov
outs
retf
loope
fmul
test
inc
xchg
(bad)
cmp
cwde
cdq
stos
sbb
xchg
push
pushf
and
ret
enter
(bad)
xor
mov
and
jg
imul
jp
(bad)
adc
adc
adc
cli
into
sub
push
iret
cs
loop
mov
dec
sbb
ret
pop
les
fidivr
sbb
sbb
cmp
and
das
ficomp
sbb
div
rcr
sub
gs
mov
shr
mov
or
call
movs
stc
and
in
int
in
mov
repnz
sbb
adc
jmp
fcomp
cmp
mov
add
push
fdivp
lods
out
in
add
adc
jbe
add
rcr
(bad)
mov
scas
fwait
ss
pop
hlt
xlat
or
pop
or
add
mov
xor
mov
xchg
rcl
push
daa
and
dec
fist
sub
(bad)
mov
inc
xor
mov
add
cmp
test
pop
inc
fwait
pop
jp
inc
pop
xor
ins
in
pop
sbb
cmp
fimul
sbb
adc
cmp
fsubr
push
push
inc
add
and
shl
mov
rcr
mov
and
pop
ror
out
in
sti
in
call
adc
and
sbb
hlt
fmul
add
dec
imul
mov
sbb
dec
scas
or
js
xchg
mov
lea
xor
dec
cmps
fwait
jl
fwait
dec
pusha
mov
inc
dec
imul
or
ins
cs
call
fcomp
jmp
das
cmps
(bad)
lods
jne
push
pop
mov
retf
or
in
ror
ret
inc
cmp
lods
xchg
fcmovbe
cmps
ret
stos
inc
add
mov
mov
ror
xchg
mov
mov
sbb
mov
aad
call
test
push
inc
je
and
mov
dec
jg
inc
aam
stos
jp
sbb
and
rcl
inc
pop
cmp
and
push
ret
idiv
mov
or
mov
inc
(bad)
adc
aad
push
or
add
jecxz
pop
mov
pop
daa
add
data16
js
adc
add
or
ins
push
ins
jmp
imul
add
test
jne
bound
dec
mov
push
fcom
popf
pop
ins
pop
aas
lock
and
cmp
mov
out
dec
lahf
shl
fiadd
push
dec
daa
ror
or
xor
sti
mov
repz
(bad)
in
push
push
xchg
mov
das
popa
push
aad
mov
dec
lods
jg
in
pop
lahf
pop
inc
inc
and
arpl
sahf
(bad)
ror
ret
iret
add
sub
in
in
sti
jno
cli
jbe
mov
lds
rcr
into
aas
mov
push
cwde
out
ins
ret
stc
pop
(bad)
lods
inc
adc
dec
nop
iret
jecxz
pop
jne
inc
scas
add
xor
movs
xchg
test
fstp
sar
dec
xor
cmp
lahf
mov
cli
cld
outs
inc
pop
mov
xor
cmp
retf
das
mov
enter
push
ins
in
(bad)
gs
pop
loope
add
pop
aas
jb
inc
push
pop
je
inc
imul
out
mov
dec
aad
push
push
push
pop
mov
bound
push
cli
sub
sub
or
sahf
xor
pop
adc
xchg
pop
mov
push
jns
jecxz
ret
cmp
out
xor
push
int
xor
dec
mov
adc
mov
(bad)
adc
sub
call
cmp
mov
test
push
ret
mov
sub
push
pop
mov
retf
dec
cmp
mov
fdivp
popw
stos
push
aas
pop
pop
mov
or
jecxz
mov
js
es
fadd
fwait
and
cli
cld
outs
inc
pop
imul
xchg
ret
mov
mov
shl
sbb
mov
into
push
daa
jmp
push
neg
sti
(bad)
imul
out
push
in
pop
jo
retf
clc
jp
shr
sbb
xor
jae
stos
fs
dec
ja
out
and
xchg
ss
test
mov
or
aad
cmps
cmp
cmc
loopne
mov
loopne
add
inc
push
(bad)
ror
imul
cmc
shl
dec
mov
call
rol
pusha
ins
adc
add
sbb
mov
dec
mov
pop
bound
pop
pop
add
add
xchg
shl
ss
jns
hlt
push
mov
fsub
cli
jmp
cmp
(bad)
cmps
mov
jecxz
cmp
outs
int
(bad)
cmp
xchg
ds
xchg
ficomp
xchg
inc
dec
jae
or
stc
or
daa
inc
xor
pop
sti
shr
cdq
dec
sub
rol
add
cdq
push
xchg
mov
jmp
ins
imul
mov
and
arpl
(bad)
mov
xor
or
movs
pop
(bad)
mov
data16
imul
adc
imul
clc
rcl
out
pop
not
mov
test
sub
xchg
iret
add
pop
push
push
lahf
or
or
cwde
loop
push
ret
add
pop
test
fs
cmp
cs
ja
jge
jmp
nop
xchg
mul
(bad)
jns
pop
dec
inc
jl
ja
xchg
mov
jecxz
add
pop
(bad)
mov
scas
fwait
ss
pop
hlt
xlat
or
pop
or
add
mov
xor
es
fcmovne
fist
adc
imul
jns
and
(bad)
cld
sbb
cmp
mov
inc
pop
sbb
dec
(bad)
mov
jae
stos
jae
dec
ja
daa
ret
jno
mov
xor
pop
adc
xchg
pop
mov
jecxz
ret
cmp
out
xor
push
int
add
and
dec
mov
adc
and
(bad)
mov
sub
call
push
adc
outs
dec
sbb
inc
mov
and
fmulp
add
std
jp
rol
ret
xchg
sbb
jmp
stos
clc
je
dec
scas
leave
xchg
sub
adc
iret
outs
test
in
fwait
ss
fst
mov
loop
and
movs
add
mov
push
lea
fcom
jmp
cld
jne
gs
xchg
rcl
sti
bound
cmc
jmp
in
test
mov
sub
mov
ins
sar
and
sti
(bad)
jecxz
in
pop
push
xchg
es
sahf
loope
push
jp
out
and
loopne
lds
xor
xor
cmp
rcr
or
push
mov
sub
aas
xor
pop
out
jae
ja
scas
pusha
ins
adc
add
pop
clc
stc
mov
dec
adc
and
and
sbb
add
(bad)
jl
leave
es
cdq
retf
sub
retf
sub
fmul
or
popf
pushf
lea
mov
mov
ss
inc
push
pop
dec
pop
jl
adc
jp
mov
xor
enter
lahf
xlat
push
push
nop
inc
mul
add
mov
adc
adc
movs
pop
(bad)
fisub
cmps
dec
xor
push
retf
mov
mov
cld
ins
pop
lahf
mov
repz
repnz
sbb
mov
std
imul
jo
out
adc
add
rcl
mov
repz
shl
call
sub
push
inc
pop
cmp
fldenv
xor
and
pand
add
mov
jmp
inc
jo
pop
add
test
cli
adc
dec
jo
sub
lock
cmps
fwait
ss
sub
fimul
dec
mov
nop
outs
ja
sbb
jp
inc
lods
les
jle
cwde
lea
pop
(bad)
call
sub
pop
sbb
rcr
dec
int
pusha
dec
mov
(bad)
mov
stc
aas
cmps
gs
dec
pusha
stos
dec
aad
int
xchg
adc
push
imul
retf
push
cmp
xlat
add
test
add
sbb
icebp
and
adc
adc
rcr
aas
xor
sar
xchg
mov
push
ret
add
inc
push
int
rcl
jmp
inc
jo
dec
jl
push
xchg
add
mul
mov
pop
dec
add
add
cwde
mov
xor
mov
test
add
adc
mov
jb
jmp
inc
pop
jl
jne
cmc
bound
cmp
jbe
cwde
ror
fist
std
xor
sub
pop
add
adc
cmc
cmp
jp
mov
adc
mov
(bad)
arpl
outs
pop
dec
ja
outs
ret
mov
or
mov
test
imul
loopne
or
push
mov
mov
movs
cmps
adc
ret
jne
ror
mov
fwait
scas
ins
jle
or
pop
in
dec
inc
push
push
xchg
adc
dec
inc
mov
movs
mov
stc
into
sahf
movs
xor
imul
cld
data16
dec
dec
sbb
scas
or
js
xchg
mov
cmp
dec
movs
fwait
ss
sbb
test
pop
aas
inc
pop
dec
es
sbb
push
mov
xor
dec
popa
dec
retf
mov
add
add
pop
aas
repnz
lods
jmp
cmp
in
inc
aas
out
vshufps
pop
pusha
arpl
or
adc
shr
xor
dec
adc
call
xchg
xchg
pop
adc
add
ret
outs
push
int
cmp
das
dec
and
arpl
or
mov
mov
jmp
outs
adc
jnp
pop
pop
pop
ret
dec
inc
mov
ret
pop
xchg
xchg
stos
jne
and
movs
dec
idiv
imul
pop
mov
std
add
push
lock
lods
xchg
or
adc
mov
add
neg
mov
les
or
shl
add
inc
sbb
pop
mov
fcomp
pusha
jne
inc
sub
retf
mov
inc
ret
mov
scas
loopne
pop
pop
retf
push
pop
push
enter
popa
inc
aam
(bad)
ins
daa
cmc
dec
dec
cmp
and
outs
call
mov
loopne
fisub
xor
jmp
and
aad
aam
scas
jp
mov
jg
outs
dec
mov
xchg
mov
and
add
push
pop
inc
ffreep
xor
add
aam
popa
test
(bad)
lods
inc
repz
dec
pop
cmc
lods
cld
adc
or
and
popf
leave
jnp
pop
push
popa
clc
mov
fs
xchg
sub
lea
popa
xchg
sar
jmp
mov
cmp
jno
adc
adc
add
pop
aas
repnz
mov
loopne
lahf
das
add
add
fistp
fldcw
or
pop
pop
lods
ins
aad
(bad)
out
fwait
xlat
(bad)
pop
sbb
adc
xchg
inc
pop
pop
sbb
xchg
xchg
sbb
pusha
xor
mov
push
stos
dec
mov
into
addr16
sub
loopne
leave
mov
inc
adc
push
ret
enter
cmps
(bad)
lahf
sbb
jns
loope
sahf
pop
mov
pop
cmp
es
and
sub
mov
aas
pop
adc
nop
mov
arpl
add
adc
stos
pop
aas
sbb
push
mov
pop
(bad)
(bad)
icebp
pusha
adc
stc
fcmovnb
pop
mov
imul
fcom
xchg
movs
push
or
std
sahf
ins
hlt
ror
push
fmul
cs
dec
pminub
gs
dec
ja
call
and
cli
adc
sbb
mov
dec
jns
imul
loopne
mov
sub
xchg
dec
cmp
push
rol
or
xor
xor
call
sub
xlat
stos
in
xchg
scas
mov
push
ret
adc
int
fcom
add
adc
mov
dec
data16
lods
inc
or
out
add
mov
not
inc
mov
out
jb
in
jae
(bad)
cmp
icebp
lahf
mov
add
xchg
jl
or
mov
inc
ins
mov
jmp
in
fild
mov
pop
je
stc
jmp
xchg
mov
stos
loopne
push
dec
(bad)
in
jae
push
adc
es
pop
int3
mov
cmp
inc
rcl
pop
dec
sub
xchg
mov
out
shl
imul
movs
xchg
and
(bad)
jmp
sub
mul
clc
sub
dec
aas
lahf
rcr
ret
push
pop
xchg
clc
in
sub
outs
cmps
ins
mov
adc
cmp
pop
loop
jmp
xor
sbb
jl
jo
mov
push
jno
dec
das
(bad)
push
aaa
pop
dec
add
xchg
fwait
and
fmul
pop
in
out
xchg
test
jne
(bad)
cmp
mov
test
or
mov
jg
ret
mov
daa
inc
push
adc
loope
pop
xchg
mov
stos
or
pop
fmul
jo
test
pop
and
pop
push
inc
(bad)
mov
inc
ret
dec
mov
cld
ins
mov
cmp
pop
rcr
adc
cmp
and
pop
fst
sbb
sub
gs
sbb
popa
mov
leave
xor
dec
push
stos
dec
xchg
push
out
aam
test
je
das
sbb
(bad)
movs
mov
in
ins
push
sti
js
mov
pop
daa
xlat
sub
js
sbb
jmp
xor
lods
mov
jno
mov
cmp
dec
cmc
fdivr
lea
xor
or
cmp
and
iret
mov
in
sbb
xor
lea
ret
mov
inc
cwde
adc
rcr
jmp
xchg
mov
add
add
adc
cmp
xor
dec
xor
retf
push
pop
inc
lds
out
pop
xchg
stos
ins
aad
jae
add
imul
xchg
pop
mov
push
jns
rol
adc
mul
jg
(bad)
into
les
(bad)
fild
aam
stos
dec
push
fadd
or
sub
scas
xor
out
mov
das
inc
scas
cs
rcl
jmp
dec
cli
or
inc
or
mov
fnstcw
mov
mov
ins
xchg
xchg
fisttp
sub
mov
mov
add
pop
sbb
jl
or
mov
xor
ret
xor
adc
mov
sbb
and
gs
imul
jmp
add
jo
iret
clc
xchg
jle
test
push
inc
jno
iret
mov
pop
les
test
int3
adc
in
jmp
sbb
mov
dec
jns
pop
out
(bad)
adc
adc
jp
push
adc
xchg
cli
aad
pop
add
std
or
fdivr
or
add
xchg
scas
mov
js
sbb
mov
aas
stc
jb
jnp
hlt
arpl
retf
dec
jl
pop
add
fidivr
dec
mov
or
outs
imul
sbb
sub
int3
rcl
fwait
and
jg
jns
pop
jl
add
mov
dec
mov
data16
ins
rcl
lods
pop
add
(bad)
je
mov
mov
mov
adc
mov
pop
push
retf
mov
mov
mov
lock
cmps
outs
xchg
xchg
repnz
fdiv
pop
ret
mov
test
sbb
dec
out
cmc
in
popa
xchg
push
inc
jmp
fst
je
dec
push
dec
retf
neg
and
mov
mov
pusha
push
sti
jle
in
ret
mov
sub
test
add
cwde
xor
ret
mov
es
and
inc
in
pop
aas
xor
aam
mov
add
dec
xchg
jg
dec
mov
pusha
stos
xchg
fidivr
mov
test
dec
aad
lock
mov
sub
in
pop
mov
push
mov
je
stc
cmp
mov
push
pop
mov
fadd
je
call
iret
jnp
into
aas
bound
inc
pop
xor
fidivr
(bad)
sbb
add
lods
scas
stos
movs
call
adc
lds
jp
xchg
outs
ret
das
test
pop
xor
push
pop
aam
fcmovbe
cld
inc
test
mov
pop
cmp
sub
mov
test
fs
cwde
mov
stc
inc
(bad)
lods
inc
xchg
fimul
int
mov
push
or
addr16
fdivr
xlat
js
push
mov
mov
or
pop
jl
or
movs
int3
loopne
cdq
enter
ret
inc
loope
ds
daa
xlat
sbb
loop
(bad)
gs
(bad)
repnz
inc
pop
add
mov
(bad)
int
loopne
xor
test
or
out
jge
ins
into
mov
retfw
imul
cmp
xor
and
mov
push
aad
pop
and
out
jg
adc
xchg
mov
sbb
mov
fwait
xlat
add
jg
ss
sub
push
in
daa
adc
fld
add
dec
fsub
(bad)
sahf
cs
mov
lods
inc
retf
dec
(bad)
mul
aaa
lods
sub
scas
add
and
and
mov
scas
fwait
ss
sbb
hlt
outs
push
sbb
sbb
jp
hlt
cmp
mov
dec
adc
jbe
cwde
ror
fist
std
clc
cmps
gs
xchg
adc
mov
pop
add
adc
int
cmp
dec
jp
mov
lods
inc
add
mov
hlt
ins
aad
loopne
or
imul
sbb
sub
and
pop
inc
or
out
xchg
ret
jl
aad
pop
jo
push
stos
cmp
lahf
xchg
inc
ja
aas
popf
shl
mov
bound
fdivrp
jne
push
or
cmp
push
mov
std
inc
xor
rcr
add
add
arpl
call
push
out
cmc
inc
mov
pop
dec
lods
dec
add
das
scas
ror
push
pop
call
ins
mov
dec
dec
dec
jmp
clc
or
out
data16
pushf
cmp
jbe
aaa
cdq
push
rcl
jmp
imul
xchg
retf
jl
cdq
or
push
add
push
pop
pop
inc
and
cdq
xchg
and
hlt
ins
aad
mov
or
cld
fisub
mov
imul
and
fbld
pop
adc
out
or
jne
push
rol
add
stc
xchg
mov
and
mov
daa
(bad)
repz
or
call
dec
mul
pop
in
int
in
mov
push
cli
add
int
test
pop
push
sbb
mov
leave
inc
(bad)
lods
inc
sbb
mov
cmps
add
popf
sbb
fisttp
jne
mov
arpl
jp
hlt
adc
sbb
sbb
cmp
dec
(bad)
icebp
clc
gs
cwde
cdq
daa
pop
repnz
test
mul
imul
fs
push
xchg
cmc
add
sbb
scas
arpl
cmp
dec
mov
pop
push
pop
or
mov
call
outs
and
cmp
scas
add
adc
imul
out
jg
rcr
push
inc
(bad)
pop
jns
mov
mov
push
loope
pusha
pushf
add
ins
add
sub
call
sub
aad
in
sti
repz
push
ret
add
test
pop
int
push
inc
add
add
aad
sub
mov
imul
scas
mov
scas
add
and
jecxz
test
pushf
fsubr
loopne
fwait
ss
sbb
sbb
hlt
xor
out
sub
xor
xor
inc
out
and
inc
jbe
push
mov
in
mov
push
pop
add
test
(bad)
xor
vshufps
inc
(bad)
cmp
stos
loopne
pop
js
pop
xchg
jg
sub
aaa
das
popa
and
cmp
sub
dec
movs
out
jecxz
fistp
add
outs
std
stc
push
mov
push
push
mov
or
inc
cs
aas
lahf
sar
aas
xchg
call
lahf
jb
xchg
mov
jbe
std
mov
fisub
pop
mov
retf
inc
std
in
retf
sub
jl
inc
or
mov
scas
xor
mov
xchg
jp
inc
mov
add
fwait
jl
fwait
dec
pusha
mov
cli
cld
outs
inc
pop
imul
xchg
pop
test
mov
shl
pop
sar
int3
test
lods
jmp
imul
sub
and
sbb
out
dec
inc
imul
inc
inc
or
inc
mov
cld
ins
aad
cmp
mov
(bad)
fmul
out
mov
jns
(bad)
mov
sub
gs
mov
pop
mov
cmp
xchg
arpl
pop
xlat
sbb
add
add
jmp
inc
add
clc
fidivr
adc
lds
int
daa
daa
(bad)
xor
popa
adc
pop
add
push
lods
and
daa
retf
sub
lahf
mov
je
push
jle
mov
fwait
mov
mov
push
arpl
ds
or
dec
xor
mov
sub
scas
in
scas
lea
add
adc
inc
add
mul
cli
cmp
nop
dec
xor
cmp
inc
shl
mov
out
pop
in
ins
aad
mov
or
sahf
xor
adc
mov
or
adc
adc
mov
repnz
mov
ins
add
(bad)
cmp
ins
retf
mov
pusha
clc
data16
sti
clc
ins
push
ins
xchg
mov
sub
adc
xor
jmp
dec
out
out
dec
push
inc
or
mov
pop
mov
mov
or
sub
out
adc
jmp
fs
cmc
pop
stc
mov
or
les
es
lahf
pop
lea
fcomp
xor
(bad)
gs
add
mov
mov
mov
pop
out
mov
mov
ret
xchg
into
stos
ja
call
shl
addr16
xor
shr
sar
sbb
call
mov
fcomp
push
stos
fistp
mov
sbb
jo
cmp
inc
cli
push
leave
rol
inc
clc
data16
mul
loopne
scas
int
sub
adc
adc
ret
xchg
lahf
xchg
lods
inc
mov
and
and
add
xor
ins
push
fdiv
int3
jecxz
fs
ins
rcr
and
jno
loope
push
ins
mov
pcmpeqw
or
xor
int3
daa
test
mov
pop
cmp
xor
xchg
rcl
push
mov
aad
gs
dec
xlat
sar
call
and
(bad)
int3
push
into
xor
fld
and
cmc
mov
ror
ins
mov
cmp
icebp
lods
adc
imul
adc
push
push
and
mov
adc
(bad)
fld
sbb
aas
outs
cmp
mov
push
jecxz
dec
leave
push
std
mov
lea
add
adc
jmp
pop
cmp
jle
lahf
pusha
fs
add
add
adc
outs
test
push
add
add
push
or
mov
push
adc
or
les
cmps
je
dec
int3
sub
fcomp
(bad)
out
sbb
gs
pop
pop
add
pop
xlat
sbb
scas
lds
out
pop
mov
adc
inc
(bad)
mov
or
call
outs
ss
cmp
mov
pop
mov
pop
jns
imul
pop
adc
imul
adc
scas
or
jo
outs
sbb
xchg
inc
inc
ss
pop
push
js
in
call
iret
xor
ret
pop
xchg
xchg
movs
xor
idiv
rcr
lock
add
xchg
sub
cli
add
and
sub
lods
inc
dec
rcl
adc
dec
dec
xchg
cmp
sub
dec
dec
int3
dec
in
mov
cwde
into
and
sar
mov
cs
scas
test
xlat
ror
inc
inc
je
and
test
inc
push
and
rcl
dec
and
dec
sar
retf
(bad)
popa
dec
stos
imul
out
retf
and
shl
pusha
mov
cmp
dec
mov
stos
adc
jl
sbb
jnp
es
sbb
xchg
xchg
jns
js
cmp
ins
sbb
inc
push
add
add
(bad)
mov
retf
(bad)
push
(bad)
cs
cmp
jmp
cmp
mov
inc
adc
jbe
xchg
jg
dec
xor
and
mov
cmc
popa
lea
or
or
add
xor
jmp
push
aad
daa
jge
pop
fist
add
(bad)
repz
inc
adc
adc
(bad)
mov
jno
jmp
mov
int3
mov
jge
ins
sub
je
ins
pop
retf
cmp
jmp
outs
push
or
push
cwde
loope
sbb
push
sub
jecxz
fcom
adc
outs
ret
push
mov
add
or
shl
sub
(bad)
aaa
das
fsub
(bad)
push
jp
sbb
mov
jge
inc
xor
rcr
stos
lock
xchg
test
xchg
xor
sar
pop
stos
pushf
pop
pop
dec
cmp
retf
inc
and
test
aad
fst
cmps
fwait
inc
ror
or
loopne
sbb
add
xor
or
ret
shl
cdq
dec
sub
mov
add
cdq
push
xchg
mov
or
add
adc
in
stos
dec
jmp
cs
pop
inc
add
add
inc
cdq
mov
mov
hlt
ins
aad
inc
outs
add
imul
push
jns
imul
call
xchg
push
das
dec
dec
loopne
stos
sbb
daa
(bad)
fldcw
inc
imul
and
jns
add
in
xchg
sahf
xchg
ret
call
mov
fistp
add
xchg
inc
dec
xor
mov
or
mov
mov
mul
(bad)
jno
pop
dec
rol
fwait
sub
dec
pop
xchg
push
sar
dec
pop
imul
mov
leave
xor
cld
outs
inc
clc
mov
hlt
dec
int3
and
xor
xor
inc
cwde
ror
fist
jmp
xchg
mov
push
pop
mov
retf
push
out
adc
cmp
xor
dec
xor
retf
push
pop
inc
lds
out
pop
sub
ins
aad
jae
add
imul
pop
push
sub
push
sub
ja
call
xchg
dec
js
test
cli
add
lds
and
cmp
sti
aam
in
ins
dec
ror
inc
mov
rcr
dec
xchg
or
jmp
dec
jo
imul
mov
jno
pop
dec
mov
std
xchg
mov
jecxz
xchg
jnp
or
inc
push
or
test
cdq
xor
fdivr
mov
xor
add
or
dec
add
movs
add
adc
retf
jp
adc
es
leave
cmp
or
outs
mov
and
std
or
cmp
mov
and
lock
ret
and
outs
daa
xor
out
jg
gs
sbb
dec
rcl
cmp
xchg
arpl
cmps
stos
rol
or
pop
sub
fs
adc
ds
or
pop
pop
int
jl
stc
fiadd
retf
inc
sbb
ror
fild
mov
cmp
scas
or
mov
fdivr
das
or
pop
loopne
fistp
xlat
stos
sbb
hlt
sbb
add
in
sbb
movs
jmp
daa
inc
mov
cs
lea
adc
jmp
(bad)
cmp
(bad)
sti
(bad)
imul
out
mov
adc
(bad)
and
push
add
mov
cmp
movs
jbe
sti
xchg
sub
(bad)
dec
mov
imul
add
aaa
call
bound
call
not
or
shl
pop
and
sub
ja
ror
(bad)
fld
push
mov
repnz
add
add
and
sti
in
rcl
pop
inc
mov
rcr
adc
xor
dec
jo
fnsave
xchg
clc
outs
pop
mov
(bad)
jecxz
mov
xchg
mov
jecxz
push
and
add
xchg
ss
xchg
lds
outs
xor
adc
dec
cmp
int
lea
ja
push
daa
pushf
and
iret
push
in
ror
push
push
or
nop
loopne
mov
dec
repnz
leave
pop
sub
stc
aas
mov
pop
dec
ja
sahf
ret
jno
dec
adc
cli
adc
imul
adc
push
push
and
push
or
sbb
rol
or
cmp
jp
fmulp
repnz
xchg
mov
cmc
imul
adc
and
sbb
hlt
fmul
out
cs
mov
lods
into
jbe
cs
pop
mov
scas
or
addr16
fdivr
in
js
es
fadd
fwait
and
fdiv
hlt
and
(bad)
sbb
adc
retf
mov
mov
push
daa
mov
adc
ds
pop
pop
add
mov
sbb
scas
lds
out
pop
push
mov
fld
jne
inc
(bad)
movs
jecxz
jne
ins
adc
cld
ins
ret
jno
cmp
push
cli
adc
adc
xor
popa
push
aad
xchg
leave
loopne
mov
jl
push
inc
mov
xchg
pop
sub
stos
dec
rcr
ror
or
inc
pop
sub
iret
test
cli
jmp
nop
mov
out
mov
sub
outs
push
jo
in
dec
jl
jl
push
mov
inc
sbb
rol
in
retf
jmp
(bad)
mov
into
fwait
ss
scas
mov
pop
push
out
push
inc
scas
aam
jge
ins
xor
lea
mov
mov
mov
mov
add
cs
retf
or
(bad)
retf
inc
into
xor
js
data16
push
bound
pop
dec
loopne
into
imul
data16
imul
mov
pop
out
mov
out
jg
hlt
sbb
icebp
sahf
rol
mov
or
add
rcl
xchg
int
adc
jmp
inc
add
clc
dec
es
pop
xchg
lods
mov
cmp
xchg
repz
jnp
jmp
dec
cli
or
push
test
out
dec
scas
add
lods
std
push
mov
test
mov
movs
xor
and
fnstenv
push
add
div
add
jge
inc
sahf
movs
xchg
(bad)
mov
mov
cmp
ins
mov
call
push
dec
imul
add
cdq
adc
push
out
dec
xor
jb
shl
mov
dec
dec
xchg
icebp
cmp
jmp
fidivr
push
xchg
(bad)
sti
retf
xchg
fisubr
sahf
rcr
gs
movs
fnstenv
div
jp
sub
xlat
into
fwait
arpl
cld
stc
rcl
add
sti
jns
pop
out
aaa
cmp
imul
adc
mov
dec
push
leave
pop
inc
or
mov
pop
mov
fild
mov
inc
gs
sbb
je
push
push
or
adc
cmc
outs
sbb
retf
outs
into
cmp
(bad)
fimul
mov
cmp
jp
xor
int3
jl
and
xor
aad
inc
or
call
or
cmc
in
sbb
xchg
outs
push
fwait
mov
test
add
add
sahf
push
adc
and
dec
or
push
xor
dec
adc
xchg
call
push
cmps
call
sub
mov
xchg
sbb
mov
xchg
add
fst
into
mov
mov
int3
shl
je
or
stos
push
outs
or
mov
add
jg
xchg
ret
je
or
push
fdiv
fnstenv
inc
iret
rol
in
dec
inc
mov
lock
cli
xchg
in
cwde
or
fsqrt
dec
pusha
rcl
xchg
sar
shl
daa
test
xor
cmc
cmp
mov
mov
push
daa
ds
pop
dec
ss
mov
jo
arpl
sbb
adc
int
sbb
mov
fsubr
stc
add
ret
out
push
cmp
jecxz
repnz
jecxz
ret
gs
fidivr
cmc
in
sbb
mov
inc
mov
or
xlat
(bad)
aaa
ror
jge
xor
jmp
rcr
(bad)
sti
movs
xchg
in
clc
stc
imul
dec
inc
inc
mov
and
test
mov
sbb
stos
inc
push
pop
dec
scas
or
in
retf
call
seta
movs
fwait
ss
sbb
inc
outs
inc
pop
or
cmp
cld
rcr
hlt
mov
adc
xlat
fcmovne
jmp
xchg
mov
mov
mov
int
sbb
mov
mov
push
xchg
jne
pop
mov
add
(bad)
and
sbb
add
xchg
adc
sahf
inc
int
sbb
xchg
inc
nop
gs
movs
inc
je
cdq
ja
dec
mov
movs
inc
cmp
push
aaa
sbb
dec
inc
xor
pusha
push
cwde
xchg
xchg
mov
scas
ret
mov
ffreep
inc
imul
xor
neg
dec
xchg
xchg
and
cdq
sub
mov
shl
add
sbb
rcr
and
inc
gs
cmc
outs
inc
jae
add
dec
mov
cwde
into
mov
call
pop
mov
call
call
in
nop
in
sbb
mov
dec
pop
pop
int3
jl
push
xchg
jne
ins
ror
jbe
ret
jno
sub
jmp
xchg
xor
stos
sub
and
out
sub
inc
sub
push
addr16
inc
dec
xchg
icebp
push
rcl
outs
js
push
(bad)
add
inc
add
clc
nop
add
jp
add
dec
and
std
clc
add
dec
dec
jo
mov
push
fidivr
pop
aaa
test
add
xor
mov
int3
in
and
pop
jnp
jb
hlt
in
adc
or
(bad)
mov
jecxz
xor
std
mov
mov
gs
pop
pop
push
xlat
lock
mov
adc
jl
jo
mov
pop
push
lods
pop
scas
cmp
mov
stc
aad
pop
mov
pop
add
cmp
shl
cmp
xchg
data16
sti
das
xchg
and
lds
adc
and
int
add
or
xchg
arpl
(bad)
jbe
sbb
add
call
scas
push
pusha
jae
sti
jns
pop
loopne
mov
lods
mov
sub
sti
and
in
xchg
vpshufhw
loope
xor
popa
mov
rcr
ja
add
push
adc
jmp
jnp
stos
cmp
dec
xchg
lds
outs
ss
inc
and
or
(bad)
mov
cwde
adc
shl
in
xchg
push
push
sahf
je
mov
mov
mov
retf
clc
arpl
inc
test
cmps
std
or
pop
les
jae
cmp
lahf
cmc
mov
repnz
push
jns
jmp
sub
sub
dec
lods
mov
lock
ret
test
loop
pop
stos
rcr
shl
mov
or
(bad)
cmc
inc
jecxz
ins
mov
adc
mov
jnp
retf
arpl
push
mov
jo
lock
daa
mov
cdq
and
pop
(bad)
call
ja
scas
lods
xchg
out
test
mov
xchg
cmp
jle
push
(bad)
jns
cmp
sbb
sbb
add
and
std
fs
gs
loopne
xchg
jp
fild
call
sub
dec
xor
les
les
les
aas
push
vpackssdw
jbe
(bad)
jno
xor
jo
jmp
test
ficomp
or
movs
mul
in
sub
movs
inc
mov
pushf
mov
aas
sbb
(bad)
das
inc
cmps
leave
bnd
pop
lahf
jb
nop
test
mov
inc
xor
rcr
add
adc
arpl
mov
jo
sar
shr
fdivp
in
dec
stos
(bad)
push
pop
dec
scas
or
mov
jp
push
rcl
sysenter
scas
call
inc
enter
jae
addr16
ins
jae
xor
xlat
pop
enter
mov
mov
std
gs
ins
aad
cmp
out
add
add
jb
cmp
jo
cs
sub
test
dec
xor
aad
add
dec
cmp
jmp
loop
push
xchg
and
ficom
xchg
sub
sub
mul
ins
pushf
xchg
mov
cmp
repnz
pushf
mov
(bad)
xor
or
pop
push
inc
arpl
out
push
ret
xchg
test
cmps
mov
test
mov
dec
or
inc
retf
adc
jns
shr
aad
or
not
pushf
daa
(bad)
inc
pop
je
push
ins
(bad)
es
stc
js
ret
in
aaa
int3
dec
mov
cmp
jle
cdq
fsub
(bad)
aam
imul
cmp
in
and
sbb
out
dec
(bad)
out
and
mov
clc
xlat
ins
pop
pop
sub
scas
retf
push
imul
int
mov
mov
gs
mov
inc
call
mov
sbb
ds
jbe
call
xor
mov
push
aam
pop
sbb
mov
std
inc
xor
rcr
add
dec
retf
xor
pop
and
in
lods
into
jbe
push
mul
stos
sbb
dec
(bad)
mov
mov
test
mov
imul
pusha
mov
mov
outs
inc
adc
sahf
jge
mov
cmc
jnp
mov
pop
mov
in
retf
test
(bad)
pop
xchg
rcr
mov
and
jns
aam
cli
aaa
sub
mov
cs
movs
jmp
jne
sbb
or
ins
inc
in
mov
dec
adc
repz
sbb
adc
adc
add
hlt
sbb
dec
mov
(bad)
shl
arpl
cmps
mov
add
cmp
mov
pop
mov
loopne
xor
mov
arpl
movs
mov
dec
or
stc
push
std
dec
int
jecxz
dec
dec
xchg
mov
ja
add
fsubp
xchg
test
sbb
lods
test
dec
clc
fimul
jg
jns
ins
jl
add
mov
ss
sub
cmc
ja
cwde
ss
inc
repnz
adc
xchg
pop
sub
mov
imul
adc
dec
mov
pop
push
dec
cmp
mov
mov
sub
cld
daa
xchg
and
out
fimul
stos
mov
sub
or
data16
push
inc
jmp
jle
popf
icebp
add
jnp
mov
(bad)
sbb
mov
js
cmp
clc
in
nop
xor
(bad)
cmc
mov
adc
(bad)
sti
adc
retf
arpl
xor
cmp
es
mov
and
std
fsubr
xchg
sub
fld
xor
xchg
adc
fsub
push
int3
or
movs
push
fidiv
mov
cmps
xor
(bad)
xor
inc
adc
jmp
retf
xchg
iret
push
fwait
(bad)
retf
pushf
mov
mov
scas
or
xchg
push
stos
test
in
dec
and
dec
ss
ja
jp
push
cmp
ret
cld
fisub
mov
imul
adc
add
lea
push
inc
or
cmp
mov
jecxz
push
test
cmp
dec
mov
pushf
clc
data16
iret
aad
push
cmc
aas
mov
push
call
mov
dec
cmps
jo
mov
lods
sub
xchg
daa
mov
test
nop
add
add
jecxz
push
and
mov
fs
adc
std
hlt
outs
jmp
neg
xor
cmp
inc
mov
daa
pusha
mov
stos
adc
push
subps
add
adc
push
mov
out
xor
sub
mov
xor
jne
bound
ja
out
xor
pop
loope
add
adc
jmp
loop
inc
out
jecxz
mov
jge
push
int
add
das
dec
mov
sbb
ins
cmps
rcr
rol
je
cmp
leave
js
cmp
mov
test
push
aam
ss
lds
arpl
mov
add
mov
pop
dec
lods
dec
add
das
scas
jp
sbb
inc
push
pop
cmp
mov
mov
lahf
dec
dec
dec
jmp
clc
or
out
data16
pushf
cmp
jbe
aaa
cdq
push
rcl
jmp
imul
xchg
retf
jl
cdq
or
push
out
dec
lahf
movs
xchg
inc
and
cdq
aaa
sbb
hlt
ins
aad
and
addr16
adc
cdq
sbb
jle
mov
cld
ja
call
cdq
xchg
inc
dec
mov
xor
rol
jmp
addr16
jl
cmp
pop
movs
bnd
outs
adc
jnp
add
loope
jns
mov
lds
rcr
mov
inc
mov
mov
ret
psubd
xchg
loopne
pop
mov
or
or
je
xor
xchg
cmps
fwait
mov
mov
loop
sbb
push
xchg
add
mov
push
lea
push
and
jmp
(bad)
movs
cdq
push
xchg
mov
push
pop
mov
sbb
in
into
sub
iret
cs
loopne
cmps
cld
sub
mov
pop
les
cmp
mov
(bad)
fimul
mov
call
call
or
(bad)
pop
xor
loopne
mov
inc
ret
cmc
mov
call
cs
lahf
outs
adc
stc
cmp
inc
xor
rcr
xchg
cmp
sar
loope
inc
adc
lods
sub
cmp
xor
xor
ins
fs
or
fisttp
jno
pop
mov
sbb
fwait
outs
inc
test
mov
mov
add
sahf
mov
call
sub
(bad)
push
imul
mov
push
pop
adc
sub
adc
or
cmp
aam
push
aam
cwde
cmp
stc
jne
xlat
pop
fist
push
jno
cmp
stc
repnz
jecxz
loop
mov
jecxz
ret
cmp
out
cmc
adc
xchg
dec
sar
push
data16
aas
cmc
shl
mov
fdivrp
sti
shr
cld
sbb
cmp
jle
inc
enter
jo
inc
add
add
sahf
movs
xor
or
in
and
inc
movs
sub
mov
fdiv
aam
or
pop
loopne
mov
jns
ror
test
add
push
stos
or
mov
mov
or
xchg
(bad)
jge
in
(bad)
xchg
cmp
rol
push
sub
ins
adc
or
test
mov
inc
mov
movs
mov
add
mov
retf
xchg
pop
xor
sub
jmp
adc
mov
push
sub
nop
mov
addr16
pop
aam
push
mov
arpl
movs
retf
and
jmp
mov
cmp
sub
and
jmp
rol
popa
ror
movs
mov
jle
sbb
pushf
leave
lock
mov
movs
in
mov
ins
push
inc
mov
fisttp
shl
lds
mov
dec
dec
jmp
and
lods
ret
aas
in
jbe
cmp
in
scas
repz
pop
je
out
sbb
add
call
mov
outs
jmp
adc
out
dec
adc
inc
(bad)
daa
jno
iret
mov
pop
les
pop
test
ror
cdq
fsub
sub
fsubp
in
scas
lea
push
mov
adc
icebp
xchg
add
sbb
cmp
xchg
sub
jecxz
xchg
xchg
stos
repnz
sti
in
ins
pusha
inc
push
xchg
jp
cmc
xor
sub
jo
add
(bad)
adc
ret
and
or
jg
std
fidivr
pop
aaa
lods
aas
std
ror
cmp
test
int3
xchg
sbb
mov
push
fnstenv
pop
(bad)
ja
add
hlt
call
dec
xor
mov
bound
inc
inc
jle
data16
daa
pusha
mov
pop
in
xchg
pop
popa
sahf
dec
sahf
inc
cmp
ss
or
xor
retf
and
rcr
retf
test
dec
sbb
add
ins
and
leave
or
ret
sub
gs
rol
into
fistp
add
ret
das
mov
mov
adc
aam
jns
mov
jne
(bad)
xlat
es
mov
scas
lahf
jb
xchg
js
sar
mov
ret
inc
rol
(bad)
cli
jnp
mov
cmp
sbb
loope
sbb
imul
jl
repz
and
and
addr16
mov
cmp
xchg
mov
push
adc
pop
not
add
mov
mov
add
sub
lds
movs
pop
or
(bad)
jmp
stos
or
call
into
xor
and
sbb
adc
stos
inc
aam
mov
inc
mov
jle
jle
jmp
bound
sub
mov
mov
xchg
lds
inc
call
push
int
and
shl
fmul
and
sub
push
mov
sub
scas
iret
and
in
or
stc
cmp
mov
xchg
enter
in
jns
hlt
sbb
repz
fisttp
lods
into
xchg
mul
mov
jg
or
call
sub
int3
sbb
fwait
and
cmc
hlt
sbb
adc
cdq
xchg
hlt
cmp
into
clc
mov
loopne
cmp
leave
outs
mov
stos
push
daa
jmp
inc
ffree
gs
pop
pop
mov
retf
push
call
adc
cli
fidivr
fld
fcom
mov
mov
jne
jle
inc
or
cs
and
xchg
adc
pushw
xchg
or
sub
not
lods
mov
repz
mov
mov
mov
arpl
xor
loopne
push
or
fwait
addr16
mov
cmp
shl
or
mov
cmp
xchg
movaps
add
movs
into
pop
aas
jecxz
and
adc
mov
(bad)
js
shl
je
pop
lods
or
dec
jmp
add
mov
pushf
mov
push
inc
inc
mov
test
fs
xlat
(bad)
aad
jb
sti
pop
xchg
push
call
std
arpl
neg
inc
(bad)
mov
cs
jmp
push
pop
xor
sub
lock
push
inc
fcmovnb
fimul
inc
mov
mov
lods
and
jecxz
inc
add
xor
stos
add
inc
sahf
cmp
sbb
out
dec
cld
adc
pop
sub
or
sbb
adc
sub
inc
mov
lahf
xor
xchg
cld
xor
jo
out
cmp
or
xchg
jb
mul
pop
imul
pop
push
dec
bound
imul
fldcw
sar
ja
mov
push
test
dec
lock
dec
jo
mov
pop
push
loopne
mov
stos
loopne
inc
and
xchg
repz
cdq
int
jmp
test
jno
or
jp
les
and
xchg
(bad)
push
and
mov
add
sti
stos
sub
push
retf
xchg
std
pop
mul
std
jmp
pop
dec
push
mov
mov
arpl
in
imul
cmc
shl
dec
mov
pop
sub
or
pop
adc
pop
jecxz
stc
cmp
jge
push
cmps
xor
sub
mov
sahf
pop
js
jo
imul
test
push
pop
aaa
jno
adc
xor
sub
aad
mov
fisub
in
dec
or
cmp
adc
dec
(bad)
(bad)
icebp
jle
mov
xor
dec
in
sub
dec
out
fsubr
aad
jb
push
movs
push
(bad)
out
mov
fild
adc
in
dec
out
mov
xchg
retf
test
dec
imul
xchg
imul
call
pop
test
out
and
stc
stos
sub
out
fistp
inc
cdq
pop
jge
pusha
push
inc
pop
jno
or
sbb
push
(bad)
cmp
out
mov
push
lahf
clc
call
dec
leave
cmp
inc
out
xchg
inc
retf
arpl
imul
add
lods
into
jbe
xor
jl
rcr
imul
fdiv
fs
pusha
xchg
jl
es
les
dec
pusha
aas
inc
loop
adc
xchg
mov
jp
xor
es
cld
add
cmps
movs
xlat
push
xor
and
sbb
lods
sbb
cwde
mov
stos
arpl
lea
push
into
xor
and
mov
cdq
pop
mov
int3
shr
inc
xchg
aad
or
scas
xchg
fiadd
sub
stos
scas
stos
mov
loope
fld
out
nop
inc
loopne
jl
movs
cmp
fistp
or
dec
push
movs
ror
and
xchg
(bad)
leave
or
dec
repz
push
ret
mov
addr16
shl
add
jmp
dec
jo
mov
push
xor
mov
ret
popf
mov
cmp
nop
std
push
push
xor
xchg
xchg
test
push
and
ja
or
hlt
jp
nop
dec
stos
cmp
mov
pop
ins
push
(bad)
es
mov
aam
addr16
sub
pop
xlat
pop
(bad)
gs
sub
mov
adc
addr16
scas
adc
inc
pop
jmp
jno
pop
xlat
push
pop
dec
ja
nop
cmp
(bad)
mov
inc
adc
out
inc
mov
fstp
inc
out
jecxz
fbld
add
xor
das
cmp
mov
and
ret
or
cmc
fnstenv
dec
cs
sub
or
pop
popf
xchg
adc
repnz
jp
test
fistp
popa
cs
mov
add
in
xor
lods
ss
fcomip
data16
adc
cli
or
jecxz
fs
push
xor
dec
mov
aam
dec
jbe
mov
or
aam
popa
leave
or
push
cwde
into
jbe
in
jecxz
std
addr16
xchg
pushf
push
daa
jmp
stos
sub
repnz
mov
loopne
lahf
aaa
lahf
dec
arpl
in
xchg
dec
xor
pop
cmp
icebp
shl
sahf
mov
pop
pop
movs
ins
aad
adc
or
jg
or
mov
call
pop
mov
pop
adc
mov
inc
push
aad
pop
cmps
adc
stos
dec
and
add
shl
ret
push
or
bound
leave
js
adc
sti
cmc
cld
in
jp
mov
adc
sub
(bad)
adc
xor
mov
sub
lods
mov
jmp
js
mov
mov
cmp
leave
iret
inc
and
test
mov
add
xor
sub
jae
hlt
jns
xchg
and
pushf
fwait
xchg
or
cdq
hlt
ins
xor
mov
rcr
jb
sahf
sbb
ror
sti
push
xchg
jmp
sbb
scas
cmp
cmp
loopne
mov
fld
push
aam
(bad)
cmp
jne
call
and
sbb
adc
xchg
pop
loope
push
jns
add
sub
add
movs
adc
call
dec
xchg
push
loope
imul
retf
xchg
pushf
(bad)
test
jo
data16
outs
push
jp
rol
mov
and
jmp
xor
mov
fs
cdq
pop
aaa
mov
mov
mov
pop
jl
push
adc
xchg
jnp
dec
push
movs
mov
or
push
pop
sbb
jp
dec
xor
ret
add
adc
data16
loope
nop
push
out
xchg
sub
cmps
push
jo
sti
stos
or
mov
ret
adc
push
test
pop
int3
mov
cdq
fs
fstp
sti
or
adc
xchg
pop
stos
repz
pop
outs
test
imul
cdq
add
mov
bnd
rcr
int3
retf
in
call
inc
scas
call
cmps
pop
or
enter
stos
push
in
(bad)
cmps
xor
in
xchg
mov
jno
pop
(bad)
test
or
xchg
mov
movs
xchg
mov
outs
std
jae
or
adc
inc
test
(bad)
add
sbb
and
movs
dec
clc
in
in
test
xchg
jne
mov
mov
mov
cmps
xor
cdq
inc
adc
cmps
pop
add
gs
pop
shl
add
pop
sbb
in
(bad)
sub
xor
test
fild
mov
(bad)
bound
jbe
ret
jno
cmp
retf
out
sbb
mov
pop
jns
leave
arpl
jecxz
nop
xchg
cld
add
lea
mov
sbb
and
std
arpl
or
(bad)
out
mov
ja
outs
adc
inc
sub
outs
(bad)
ins
push
aaa
cmp
fidivr
add
sbb
ret
xchg
sub
jb
inc
cmp
mov
scas
add
and
xor
int3
cmps
fwait
mov
mov
xor
sbb
cmp
jb
mov
pop
mov
adc
xchg
mov
loope
shl
jmp
ja
mov
dec
mov
cmps
test
call
ja
add
inc
jno
cmp
and
adc
xchg
adc
fisttp
pop
sti
sbb
repz
cmc
loopne
mul
mov
movs
pop
mov
push
(bad)
cmp
retf
(bad)
call
scas
push
lahf
into
shr
aam
js
or
int
mov
adc
ins
(bad)
sahf
pop
js
dec
jns
push
adc
adc
mov
aas
pop
in
js
ja
jmp
sbb
pop
mov
pusha
lock
or
xor
leave
inc
dec
xchg
inc
lea
xor
cmps
inc
pop
jecxz
sub
dec
sub
xchg
stc
in
xchg
mov
push
pop
lods
add
outs
jae
mov
pop
call
lods
mov
ret
ins
pop
fisttp
into
cmp
pop
(bad)
jae
and
push
jns
push
fimul
xchg
movs
pop
adc
add
add
popa
dec
outs
(bad)
cmc
mov
jecxz
push
test
cmp
sub
push
leave
shr
sub
xchg
mov
in
out
adc
push
push
jo
out
test
inc
fsub
inc
lods
add
mov
js
jp
push
mov
fs
aad
lds
outs
ss
sbb
jecxz
inc
es
lods
clc
lds
fadd
in
sbb
popf
pop
xchg
mov
push
xchg
cmc
add
push
sbb
pop
jae
(bad)
jg
mov
push
and
mov
xchg
movs
mov
test
sub
scas
adc
mov
fndisi(8087
jns
shl
imul
mov
clc
jmp
add
call
sbb
mov
dec
std
mov
std
sub
cmps
rol
call
sub
xor
inc
push
add
mov
mov
inc
(bad)
sub
and
cli
icebp
movs
and
mov
jne
or
mov
push
adc
ss
add
inc
fcom
mov
pop
and
mov
and
push
xchg
ror
movs
jge
sbb
or
cdq
je
xchg
pop
fwait
cdq
fadd
mov
jno
movs
add
pop
fisttp
push
add
out
int
xchg
inc
xor
test
mov
stc
dec
(bad)
leave
ja
pop
call
das
pop
push
stc
adc
add
aaa
mov
repz
push
adc
pop
in
inc
jmp
mov
push
inc
mov
push
add
xchg
(bad)
jmp
(bad)
mov
inc
stos
xchg
inc
icebp
ins
leave
rol
xor
js
cs
mov
inc
cli
into
sub
(bad)
xor
mov
nop
cmp
or
mov
in
stos
stos
in
pop
dec
(bad)
mov
call
es
or
adc
stos
movs
jb
dec
fadd
jmp
mov
es
js
sbb
dec
pop
daa
daa
inc
dec
mov
push
and
push
fsub
je
mov
pop
jl
add
mov
shl
sub
or
cwde
pop
or
jne
xchg
int3
dec
call
cmps
iret
repz
sahf
inc
lods
jmp
ficom
scas
(bad)
cli
inc
out
jecxz
mov
cmp
int
xor
mov
aam
xlat
movs
movs
or
adc
arpl
push
inc
adc
jne
mov
mov
xchg
push
dec
jmp
scas
fist
mov
mov
repnz
push
sub
das
cmp
lock
in
push
sbb
not
or
push
mul
in
dec
pop
xor
data16
ja
imul
xchg
mov
jecxz
add
loope
push
ja
pop
stos
out
bnd
dec
xor
movs
mov
add
stos
and
dec
ja
int3
jecxz
ret
dec
jp
leave
adc
mov
repz
pop
adc
pop
in
or
lods
lds
test
cmp
ss
aaa
ja
test
(bad)
into
scas
xchg
shl
or
or
outs
or
push
xor
js
movs
aaa
mov
jge
jmp
sbb
sub
mov
jnp
mov
shl
inc
dec
ins
cwde
mul
add
add
push
outs
shl
ins
std
push
dec
xor
outs
xchg
test
add
out
mov
out
and
dec
out
hlt
in
adc
or
mov
cmps
xor
jecxz
sub
iret
pop
shl
jmp
test
shl
stos
loopne
push
dec
dec
sbb
inc
retf
clc
stc
outs
shr
pop
inc
add
stos
inc
ror
retf
fist
es
add
and
mov
pop
(bad)
test
jecxz
test
mov
xor
movs
cmc
dec
push
push
aaa
sbb
push
aad
ss
add
sub
sti
jns
outs
xor
ret
push
cs
inc
out
xchg
inc
pop
adc
rcl
out
cmp
xchg
mov
mul
inc
movs
das
push
fmul
sbb
inc
push
fsub
ins
pusha
xchg
test
es
les
jmp
lods
or
(bad)
xor
push
mov
clc
js
and
fcomp
daa
inc
mov
cs
mov
stos
mov
jmp
loopne
jo
mov
fcmove
inc
push
retf
test
(bad)
out
cmp
xchg
movs
js
setb
sub
sbb
(bad)
imul
call
gs
adc
stos
jmp
inc
fisttp
icebp
cmp
xchg
arpl
aam
ss
or
jge
fidivr
clc
data16
js
xchg
stc
cmc
aas
stos
inc
sti
sub
push
call
sub
add
fwait
jl
pop
inc
xor
mov
enter
in
and
ja
mov
pmullw
pop
fs
add
cmp
sbb
cmp
mov
cmp
push
movs
jb
dec
xchg
cmp
adc
pop
mov
xchg
out
sbb
xchg
or
gs
jmp
cli
shr
test
xor
adc
js
mov
das
pop
or
push
and
fnstcw
xchg
popa
outs
push
xchg
adc
jecxz
inc
out
sbb
pxor
shl
inc
sbb
jg
xchg
(bad)
pop
das
mov
xchg
icebp
fbld
outs
popf
add
movs
xor
jo
or
call
or
in
int
in
ins
push
outs
icebp
cmp
push
pop
int
sub
fdivp
inc
xor
(bad)
sahf
cs
mov
daa
mov
push
push
add
mov
inc
xor
outs
std
fdiv
aas
idiv
fisttp
stos
xchg
dec
pusha
sbb
clc
(bad)
outs
xchg
jne
xor
jp
push
push
fwait
jns
mov
shl
cdq
ja
scas
mov
pop
je
out
cmp
dec
add
add
and
div
in
int
add
cmp
pop
inc
and
popa
stc
aas
mov
push
sahf
mov
push
loop
adc
xchg
adc
gs
xchg
and
cmps
aad
jmp
not
jg
call
lea
movs
push
fdivr
fbld
outs
popf
add
movs
xor
inc
sub
je
cmp
imul
mov
xchg
mov
enter
inc
fcmovnb
sbb
dec
cli
jo
jl
push
cmp
fdivp
data16
push
pop
mov
dec
and
std
fmul
icebp
imul
mov
and
dec
pusha
aas
and
ret
mov
add
stos
xor
cld
lods
cwde
adc
shr
add
mov
pop
add
adc
jo
cmp
mov
inc
int3
test
jb
mov
pop
movs
dec
ja
ret
cmp
jecxz
xchg
mov
add
repz
and
mov
call
test
(bad)
out
mov
dec
dec
xchg
icebp
push
je
lahf
or
shl
aas
cmc
sar
ror
or
cmc
xor
jo
test
pop
int
rcl
jmp
dec
cli
fs
pop
push
cmp
inc
(bad)
mul
dec
and
jmp
fwait
addr16
fadd
cwde
pop
imul
dec
cmps
fs
mov
int3
or
sbb
test
sub
mov
mov
adc
inc
aad
stos
gs
xor
in
xor
dec
cmps
int3
aaa
arpl
(bad)
mov
out
xor
dec
or
mov
(bad)
mov
popa
outs
lods
xchg
adc
xchg
stos
and
xchg
mov
sub
outs
cmps
cmp
push
mov
push
stos
cmp
or
rcr
mov
and
repz
repnz
in
sub
xor
mov
aaa
fistp
add
add
or
and
ss
cmp
inc
inc
retf
jne
mul
idiv
pop
dec
scas
or
and
hlt
or
clc
test
mov
push
jb
pop
outs
push
adc
or
and
fimul
jbe
sbb
stc
cli
sti
push
neg
sti
(bad)
imul
out
sub
cdq
pop
addr16
adc
loopne
imul
mov
inc
sub
fs
rcl
retf
dec
imul
out
xor
aaa
test
cdq
and
rol
add
or
sbb
mov
movs
cmp
in
cmp
jb
nop
and
cld
ret
push
mov
add
sub
cld
xor
(bad)
adc
push
test
cmp
cs
xor
mov
icebp
mov
add
jbe
and
xchg
sub
je
les
mov
jg
inc
dec
xchg
push
cwde
hlt
sbb
adc
fld
cmc
and
mov
sub
in
imul
add
adc
mov
out
addr16
in
sbb
test
mov
cmps
sahf
jle
cdq
ret
addr16
jmpw
aaa
call
icebp
test
pop
sbb
push
add
adc
jne
repnz
mov
popf
jp
mov
(bad)
sub
stos
(bad)
inc
add
shr
clc
in
ins
mov
cmps
int
in
repz
retf
jmp
les
jmp
nop
mov
clc
stos
in
data16
test
cmp
ss
push
out
cmp
mov
movs
(bad)
(bad)
neg
test
or
xor
sar
mov
lahf
data16
ffreep
imul
std
sub
in
sbb
movups
inc
sub
sbb
clc
movs
dec
std
sti
ins
js
int
xchg
sahf
loop
xchg
mov
enter
mov
clc
pushf
mov
and
or
mov
cmp
sub
es
or
call
cs
lahf
clc
data16
in
jbe
xchg
stc
mov
scas
int
hlt
shld
xor
cld
jmp
icebp
lods
jmp
adc
out
push
jg
loop
bound
imul
es
ret
xor
out
je
sbb
aaa
scas
repz
clc
adc
les
fxch
jne
or
add
push
pusha
add
push
lods
pop
shl
rcr
mov
fdiv
in
imul
mov
pushf
cmps
cmp
push
test
jae
mov
(bad)
xlat
(bad)
fcmovnb
mov
add
and
stos
mov
mov
xchg
cmps
pop
adc
or
test
shl
shl
mov
out
sub
es
dec
gs
sub
xchg
das
inc
loop
adc
nop
imul
push
shr
pop
imul
push
cwde
and
ss
push
xor
dec
dec
mov
test
adc
add
nop
add
imul
inc
push
or
leave
fsubr
inc
iret
mov
adc
sar
ja
and
inc
stc
fmul
jne
test
adc
pop
inc
daa
pusha
dec
(bad)
in
sbb
mov
sub
lahf
iret
lahf
cmp
aad
inc
cmps
(bad)
and
ins
pop
dec
std
jmp
xor
or
mov
bound
pop
out
sub
jg
and
xchg
mov
jno
movs
mov
xchg
arpl
jmp
jbe
js
push
fnstenv
and
or
in
xor
jns
pop
out
xlat
out
pop
or
pop
add
hlt
fdiv
sahf
cs
ja
cmps
mul
inc
cmp
stos
int
pop
dec
scas
or
enter
and
xchg
jg
dec
xchg
cmps
int
cmp
jae
dec
cli
pop
(bad)
call
test
cdq
xor
es
mov
adc
call
ret
xchg
adc
adc
xor
ja
outs
cdq
adc
retf
sti
jmp
fld
add
scas
mov
rcr
inc
jb
mov
pop
loope
imul
push
mov
fld
stc
das
bound
test
mov
push
lahf
(bad)
addr16
shl
jmp
iret
pop
jmp
add
xadd
xor
icebp
inc
jo
loop
sub
je
add
push
test
cmp
inc
adc
fcom
iret
rol
cli
add
jge
int3
pop
fldcw
rol
out
mov
enter
dec
ret
mov
mov
add
stc
imul
aad
jb
xor
mov
lock
jl
sub
shr
mov
cmp
push
dec
jno
mov
ins
pop
cmp
(bad)
cli
sub
(bad)
mov
out
clc
and
add
jge
loope
(bad)
clc
push
aad
cmps
xor
mov
mov
xor
mov
mov
mov
repnz
test
cmp
pusha
daa
adc
lock
mov
pop
mov
dec
cmps
sti
test
sar
jl
sar
pusha
or
mov
push
(bad)
mov
das
mov
push
cli
pop
mov
out
pop
xchg
lds
xchg
inc
lea
mov
dec
int3
into
inc
push
lods
ficomp
jbe
mov
xchg
fs
cmc
cmp
inc
or
and
and
add
add
cli
and
test
stc
mov
loopne
ins
ror
jbe
aad
add
ret
jle
jl
adc
sub
aaa
call
adc
adc
nop
push
xor
mov
test
mov
into
stc
test
jge
leave
js
sub
mov
es
pop
pop
jp
dec
add
jmp
pop
xlat
rcl
jmp
mov
out
imul
dec
pop
repnz
pop
or
inc
and
repz
pop
loopne
push
loopne
push
ins
mov
aaa
pop
or
dec
lds
into
clc
js
and
fcmovbe
push
rcl
scas
test
and
call
scas
xor
icebp
in
dec
xor
aam
mov
mov
jmp
inc
and
jno
and
add
adc
sahf
inc
dec
xchg
loopne
pop
adc
mov
mov
adc
cmp
jg
xchg
aam
(bad)
sub
pop
shl
ja
sub
retf
adc
cwde
and
dec
repnz
pop
out
adc
imul
mov
push
hlt
jno
sub
pop
shr
fdiv
sub
cmc
add
call
stos
sbb
out
hlt
outs
into
adc
push
or
mov
xchg
lods
dec
xlat
cwde
cdq
fcomp
xor
sbb
sub
gs
fidiv
sbb
out
dec
xor
retf
push
pop
jo
inc
jno
add
cld
ins
cmps
sahf
cmp
or
call
pop
test
loope
rcl
scas
sti
loop
pop
xlat
lds
inc
sahf
mov
fwait
push
fst
shr
push
push
jl
cmp
inc
cmc
ja
push
mov
out
aad
mov
lahf
ins
out
push
lock
sahf
cs
cmp
movs
inc
cmp
mov
cmps
add
push
pop
call
cwde
and
add
xchg
ss
xchg
test
add
or
sub
pop
jl
clc
sbb
lods
xor
hlt
dec
arpl
outs
mov
(bad)
gs
and
inc
inc
pop
add
call
xor
push
and
pushf
mov
jle
dec
ja
daa
ret
jno
mov
xor
adc
jmp
jecxz
aad
rdmsr
loopne
push
push
or
cmp
push
stos
push
jg
add
add
add
push
aaa
sbb
cmp
cmp
or
in
xchg
mov
pop
ret
add
push
dec
test
hlt
xor
sti
lea
dec
in
fistp
lods
into
jbe
movs
outs
pop
retf
loopne
cmp
or
in
jecxz
xchg
(bad)
mov
aas
fwait
ss
scas
mov
pop
push
out
push
inc
scas
aam
jge
jge
cmp
mov
and
daa
mov
add
cs
retf
or
ja
and
mov
and
adc
push
jne
call
or
jno
sub
fst
aas
and
push
aad
dec
std
sbb
adc
jle
fnsave
das
call
mov
call
ins
xor
pop
out
jae
mov
scas
pusha
mov
xchg
pop
out
pop
cmp
lock
cli
jnp
xor
adc
lods
sub
dec
inc
xor
push
add
xlat
dec
dec
xor
dec
scas
inc
and
pop
cmp
mov
mov
mov
aas
(bad)
loope
adc
div
div
imul
stos
sti
add
xor
in
sub
int
ins
lahf
fistp
test
pusha
hlt
xchg
call
iret
pop
push
or
jnp
mov
fistp
add
mov
(bad)
shr
gs
pop
mov
dec
sbb
dec
pop
adc
or
stc
out
pop
sbb
push
stos
dec
loop
add
(bad)
sub
je
leave
push
dec
fsubr
mov
js
outs
push
ins
mov
add
mov
shr
(bad)
jno
jg
jne
mov
add
lods
into
jbe
out
pop
retf
loopne
add
scas
xor
mov
cmp
xchg
push
add
push
leave
add
or
outs
inc
lea
push
cs
retf
test
pop
inc
(bad)
hlt
out
and
mov
add
clc
ins
hlt
xchg
sub
retf
je
push
pop
mov
retf
cmp
sbb
inc
test
mov
pop
jmp
pop
push
imul
stc
jne
outs
dec
(bad)
call
(bad)
into
cmc
mov
xor
call
inc
shl
jl
sub
adc
mov
push
lods
pop
pusha
add
aam
arpl
cmp
out
sahf
dec
sti
jle
dec
test
push
in
sbb
ret
mov
(bad)
mov
cmp
add
cs
mov
lods
into
jbe
sub
loopne
popa
mov
jge
ja
pop
jmp
add
add
call
leave
push
ins
mov
cwde
jp
pop
nop
mov
ss
mov
test
push
es
inc
jecxz
(bad)
neg
xlat
push
xor
add
sub
cmc
add
adc
jae
mov
fcmove
inc
push
scas
sti
pop
stc
dec
fimul
inc
xchg
movs
xor
seto
cmp
jecxz
jecxz
in
mov
data16
repz
cld
stos
inc
jmp
and
push
inc
outs
add
and
stos
mov
xlat
cmp
or
add
mov
pop
in
xchg
repnz
xchg
stc
cmp
(bad)
dec
stos
rcl
sub
add
hlt
fdiv
adc
add
cmp
gs
dec
ds
dec
mov
sbb
seta
(bad)
mov
stos
stos
xchg
or
cli
mov
clc
dec
mov
mov
mov
call
cmp
fstp
imul
(bad)
fisttp
out
add
or
cmp
fld
fdiv
ins
mov
jmp
iret
sahf
scas
adc
scas
push
imul
iret
cld
stos
inc
jmp
and
push
inc
inc
add
and
xchg
imul
jmp
(bad)
mov
push
aad
in
sub
js
sbb
out
cmc
mov
xlat
lds
jnp
mov
jl
movs
aaa
push
(bad)
jl
or
mov
scas
dec
xlat
xchg
jecxz
and
dec
pushf
add
pop
fisubr
xchg
jnp
fsubr
jmp
jno
sbb
sbb
xor
xor
inc
cwde
adc
inc
lods
daa
pusha
push
(bad)
out
jmp
shl
inc
pop
cwde
adc
in
sbb
ins
mov
ins
sar
and
jl
jno
mov
ficomp
test
(bad)
adc
cs
pop
inc
enter
push
cmp
xchg
xor
gs
adc
xchg
mov
(bad)
fisttp
test
pop
rcr
ror
push
arpl
or
shr
add
pop
pop
cmp
mov
and
mov
std
aam
popa
pop
dec
mov
mov
mov
rcr
ja
mov
fdivr
jp
aad
scas
inc
mov
push
or
xor
dec
dec
xor
and
pop
add
mov
fcmovbe
sahf
cmc
sbb
sahf
imul
push
neg
sti
(bad)
imul
out
sub
ret
adc
add
mov
test
bnd
inc
out
call
mov
sahf
xor
adc
bound
sub
arpl
jecxz
dec
pop
call
dec
test
mov
xchg
jl
pop
(bad)
out
mov
std
cmp
jno
cmp
ins
fidivr
push
rcl
sub
mov
cld
imul
imul
je
leave
or
mov
sub
fs
in
pop
sbb
push
in
sub
and
adc
cmp
jb
add
add
mov
adc
sbb
sub
cmps
add
dec
imul
and
or
pushf
and
outs
dec
mov
clc
mov
sub
pop
dec
cmps
fdiv
in
jmp
(bad)
pop
pop
call
daa
xchg
scas
or
(bad)
fcomip
jns
jb
sub
fdivp
cmp
das
lods
sub
mov
in
imul
cmc
shl
push
mov
inc
movs
jae
fadd
xchg
jmp
mov
cmp
scas
call
adc
push
loope
fadd
dec
push
and
std
fsubr
inc
mov
popa
loopne
cmps
sub
mov
pop
outs
cmp
mov
xchg
or
lods
xor
xor
icebp
adc
lods
add
call
imul
stos
xchg
not
ja
in
ror
ret
out
std
fild
pop
test
std
or
(bad)
iret
mov
movs
dec
std
rep
pop
shr
cdq
test
imul
test
jns
sahf
inc
das
mov
cmp
gs
adc
mov
clc
in
dec
cmp
jg
mov
loope
add
test
sub
adc
or
push
ret
add
push
push
sar
aas
adc
add
pop
ror
or
dec
add
mov
rcr
or
lahf
and
jl
add
and
jne
jnp
jae
fs
sub
jg
outs
into
lock
mov
or
inc
fxch
jne
and
mov
or
inc
retf
adc
fld
shl
pop
imul
sbb
xlat
xchg
mov
pop
pop
(bad)
push
inc
popf
fisttp
mov
mov
jle
das
aam
sub
ret
xchg
icebp
repnz
test
cmp
(bad)
sahf
pop
test
sbb
pop
clc
movs
mov
jge
(bad)
jmp
arpl
pop
cmp
dec
std
cmp
and
clc
mov
rep
push
pop
cmp
xor
pop
inc
call
movs
xor
je
call
xchg
pop
aaa
push
sub
aad
adc
loope
fcomp
adc
push
sbb
jo
and
add
push
jl
jbe
inc
dec
pop
test
es
mov
out
jmp
adc
fcom
cli
stos
loopne
adc
in
nop
fcmovb
dec
adc
int3
imul
mov
cmp
stc
jne
xchg
pop
les
jns
cmp
xchg
sbb
lods
sbb
mov
not
les
call
sbb
mov
icebp
stos
mov
enter
(bad)
fild
inc
add
pop
mov
lahf
int
(bad)
jmp
mov
xchg
ja
(bad)
repz
cld
push
mov
mov
mov
sbb
sub
or
cmp
out
sbb
xor
sbb
popa
in
call
pop
imul
sti
(bad)
add
mov
pop
add
mov
scas
mov
and
pusha
dec
push
gs
dec
retf
test
fsubrp
add
adc
movs
repnz
fnstenv
fbld
sub
sbb
ror
ins
mov
pop
jle
push
adc
adc
pop
out
cld
add
clc
sbb
retf
out
cmc
xor
mul
int
xchg
and
das
ret
repz
dec
push
sub
xor
jecxz
or
sub
popa
pop
adc
rcr
push
pop
push
sar
aas
inc
xchg
add
xchg
xor
xor
dec
mov
push
mov
fsub
push
pusha
dec
movs
push
call
lahf
fnsave
mov
jp
sub
jae
adc
fs
pop
lods
lds
xchg
inc
retf
inc
pop
or
xor
mov
call
pop
stos
xchg
bound
call
out
adc
stos
std
jmp
cmp
ds
(bad)
test
and
cdq
les
ret
push
jle
xchg
mov
mov
jb
int3
fist
cmp
psubsw
ucomiss
mov
icebp
add
jnp
cmp
js
push
or
pop
ror
mov
movs
mov
rcr
dec
retf
shr
lds
into
mov
lahf
mov
mov
or
lods
sub
in
movs
sbb
push
test
js
push
sub
movs
aas
mov
aaa
add
add
xchg
retf
jg
cmp
jecxz
jle
dec
in
or
mov
pop
jb
mov
fcom
and
or
aam
test
in
sbb
xor
push
and
mov
mov
cwde
bound
fcmovnb
mov
inc
test
jmp
movs
jle
xchg
stos
sub
push
sub
mov
pop
shr
mov
xchg
loop
jg
das
push
dec
in
sbb
mov
scas
adc
fwait
pusha
xchg
mov
cmp
mov
cmps
xor
cmps
xchg
repz
or
and
mov
mov
mov
add
pushf
cmp
(bad)
nop
lahf
mov
rcl
mov
ja
add
shl
cmp
into
add
dec
pop
ret
push
cs
xchg
bound
call
pop
retf
arpl
and
loopne
xchg
into
xor
xchg
daa
into
cs
sbb
jg
cli
pop
mov
loope
fmul
retf
setae
jno
stos
lods
xchg
call
daa
outs
pop
mov
pop
cld
shl
jb
push
lea
ret
push
lods
dec
push
stos
jp
cmp
xchg
call
rcl
pop
sti
repnz
in
ins
mov
jb
xchg
push
shr
pop
imul
push
jo
pop
js
fist
mov
push
sar
and
das
pop
jno
pop
mov
fwait
ret
(bad)
sbb
mov
sub
and
imul
pushf
inc
xor
or
sub
xor
and
inc
out
call
push
mov
stos
arpl
and
sbb
shr
aam
cwde
jns
stc
jne
xlat
ins
dec
std
jmp
adc
sti
pop
sub
xchg
adc
jb
rcr
cli
inc
mov
test
out
cmc
and
and
test
or
sub
icebp
mov
jnp
inc
pop
mov
or
add
nop
popa
ss
outs
jns
inc
sbb
jmp
xchg
xor
push
dec
repz
mov
in
inc
or
mov
adc
pushf
jmp
xchg
sub
adc
mov
into
hlt
imul
cdq
xor
xor
xor
sbb
inc
cwde
adc
rol
jmp
push
mov
or
inc
arpl
imul
sbb
inc
imul
shl
add
bound
add
add
pop
dec
or
sub
inc
jge
ret
xchg
and
cdq
xchg
mov
ret
lds
sbb
loopne
outs
test
mov
test
pop
repnz
jl
dec
(bad)
or
aam
xlat
adc
je
mov
xor
scas
pusha
clc
data16
sar
aam
cld
inc
scas
lods
repnz
mov
js
fcomip
lock
add
jge
push
sbb
mov
aas
imul
jl
repnz
and
pop
in
xchg
dec
or
xor
jmp
fidiv
into
call
mov
xor
xor
or
das
xor
inc
cwde
cdq
loopne
cs
push
mov
bound
mov
mov
pop
add
adc
jo
xchg
mov
cs
mov
mov
mov
pop
in
ja
mov
out
add
test
adc
or
and
inc
aad
out
cmp
push
popa
jp
push
sub
mov
and
ror
xchg
push
(bad)
pop
rcl
ja
movs
mov
adc
jmp
scas
sub
jl
mov
add
sbb
je
jl
dec
mov
test
dec
adc
loopne
sbb
or
popa
hlt
push
in
ret
xor
pushf
xchg
dec
call
dec
mov
fmul
test
push
inc
mov
sub
pop
push
test
xchg
sub
jb
lods
push
pop
jle
and
jns
adc
cli
xor
ins
pop
iret
pop
push
or
imul
jne
call
and
cli
test
js
push
pushf
retf
push
mov
dec
out
cmc
in
ins
cmp
or
movs
xchg
test
push
stos
cmp
sbb
lds
or
out
adc
sbb
xchg
sar
xor
dec
scas
sub
jl
mov
add
cli
jp
je
mov
push
pusha
dec
movs
dec
lods
pop
add
jbe
and
frstor
or
out
sti
fwait
pop
imul
xchg
push
sbb
mov
and
dec
data16
in
es
movs
pop
in
mov
dec
push
cmp
std
dec
pop
cli
cmp
bound
mov
leave
imul
scas
ret
ja
sahf
aad
into
data16
xor
jecxz
cmp
mov
and
jp
mov
cdq
cdq
jge
movs
push
popa
cmp
call
ret
adc
ss
cmp
ficom
push
test
push
nop
mov
mov
adc
cmp
pop
les
in
fs
xchg
aas
cs
out
or
inc
or
mov
rol
fdivr
das
or
mov
add
or
ss
pusha
adc
lock
movs
dec
test
jl
lea
test
jge
push
and
jmp
aam
in
stc
retf
xchg
icebp
cmp
or
add
jo
cmp
mov
shr
gs
inc
add
aaa
call
fcmovnb
popa
dec
stos
inc
mov
test
xchg
mov
ret
adc
test
je
sbb
int3
stos
dec
push
jae
sbb
ja
(bad)
jge
leave
js
cmp
clc
in
icebp
inc
out
loope
jge
inc
xor
rcr
add
add
arpl
and
jo
ja
push
out
cmc
inc
mov
iret
repz
rcr
and
stos
add
je
or
xchg
cmps
fwait
ss
sbb
test
leave
les
es
sbb
push
mov
or
dec
popa
fidiv
cdq
fsub
fist
xchg
shl
aam
je
shl
inc
inc
ss
je
into
xor
retf
push
pop
mov
cmp
iret
mov
add
sub
sub
fwait
adc
fwait
or
call
ret
mov
add
jmp
pop
das
ret
repz
mov
(bad)
loop
or
bound
fidivr
(bad)
test
nop
mov
cmp
fwait
pop
inc
ffreep
cmp
test
mov
pop
test
imul
pop
mov
add
push
and
push
lock
lods
xchg
pop
mov
inc
push
mov
xchg
dec
push
(bad)
(bad)
retf
clc
jl
jne
arpl
mov
cdq
xor
xor
xor
inc
scas
movs
and
sti
push
stc
and
data16
iret
pop
mov
call
add
mov
mov
int
sbb
shr
pop
int3
js
aad
jne
pop
data16
push
sbb
pop
add
ret
cld
loop
cdq
jecxz
and
daa
(bad)
jns
scas
jecxz
push
push
push
int
xchg
add
cmp
sbb
push
popf
jno
arpl
stc
cmp
xlat
xor
sbb
inc
adc
xor
nop
outs
inc
mov
stos
adc
cmp
aaa
xor
adc
inc
(bad)
sahf
sbb
mov
sar
cli
dec
or
fwait
mov
add
test
adc
pop
push
pop
push
add
retf
in
scas
imul
add
sbb
mov
(bad)
icebp
xor
pushf
mov
sbb
leave
outs
mov
aad
lock
inc
gs
push
xchg
add
in
add
jo
cmp
inc
stos
outs
push
(bad)
pop
inc
xor
(bad)
mov
(bad)
(bad)
push
ret
jo
ins
pop
shr
push
and
mov
movs
jb
shl
push
sbb
pop
cmp
out
jg
retf
mov
pop
lea
mov
dec
enter
cs
sbb
dec
(bad)
leave
push
dec
cmps
mov
clc
ja
add
mov
mov
(bad)
adc
retf
jmp
dec
inc
mov
xchg
cs
into
enter
pop
rcr
and
std
stos
add
xchg
and
pop
sbb
lds
or
xor
dec
or
sub
sub
jge
push
and
jmp
jbe
dec
xchg
arpl
push
(bad)
push
(bad)
adc
fisubr
and
push
fdivrp
pop
inc
mov
mov
inc
cmp
(bad)
jecxz
in
mov
pop
in
mov
xchg
jne
jmp
push
xchg
mov
xchg
dec
ret
test
adc
xchg
jecxz
sub
push
push
shr
or
push
sti
out
fs
cdq
cmp
jmp
repz
cmp
fs
retf
jo
pop
push
pop
inc
adc
pop
aas
sbb
push
ja
mov
sub
xchg
ret
xor
out
je
leave
mov
inc
sar
ss
int3
daa
test
mov
mov
sbb
mov
scas
push
push
pop
(bad)
out
jmp
rcl
pop
push
xchg
add
sbb
outs
sbb
mov
mov
and
sbb
push
loopne
clc
movs
dec
std
jmp
or
push
aad
fs
imul
pop
jp
jecxz
or
out
test
je
mov
shl
in
scas
stos
(bad)
mov
rcr
mov
cmp
dec
mov
in
xchg
mov
sti
outs
scas
jp
jb
inc
mov
rcr
mov
pop
(bad)
sahf
(bad)
ret
mov
mov
loopne
repnz
scas
or
mov
packssdw
cmps
adc
mov
push
pop
call
test
cmps
inc
xor
jns
mov
xor
fdiv
mov
dec
pop
(bad)
xchg
rcr
fisttp
adc
das
pop
(bad)
pop
ret
adc
inc
bound
cmps
stc
pop
int3
js
test
jp
loop
cld
ins
pop
xlat
add
add
cmp
ror
cwde
ret
mov
mov
in
iret
push
aad
mov
add
mov
sbb
leave
push
fld
cmp
dec
repnz
loop
lds
jo
mov
mov
inc
ffreep
xchg
add
add
(bad)
adc
aad
jo
dec
arpl
or
mov
and
std
fmul
icebp
imul
fwait
ss
lods
les
xchg
jmp
cmp
test
jl
and
pop
xlat
push
xor
repz
fsubr
jbe
aas
push
mov
sbb
or
add
(bad)
cmp
cmc
xor
retf
scas
inc
or
mov
and
adc
ins
inc
(bad)
cmp
sti
sub
and
xchg
adc
xchg
or
mov
jecxz
out
dec
fwait
ins
outs
mov
imul
pop
mov
rcr
jle
push
leave
mov
dec
mov
pand
mov
mov
or
mov
lahf
fistp
dec
jl
inc
or
mov
cmp
or
jecxz
xchg
mov
data16
dec
sub
pop
dec
add
jns
xor
ror
mov
mov
call
aam
in
out
call
out
out
mov
push
ja
out
sub
movs
sub
loop
xchg
in
sbb
jmp
lock
out
and
xchg
pop
in
and
sbb
push
adc
adc
in
mov
pop
test
out
aam
fnsave
xor
xchg
pushf
mov
(bad)
fadd
sub
jb
ss
cmp
pop
pop
jp
push
inc
leave
jmp
pop
xlat
inc
je
cmp
pop
cmps
adc
retf
xor
or
sbb
ja
adc
cmc
inc
and
jp
bound
xchg
inc
adc
dec
or
or
or
xor
hlt
dec
adc
shr
adc
test
mov
xor
(bad)
cmp
mov
inc
pop
fcom
add
mov
cld
out
xor
ror
scas
jmp
call
push
pop
add
retf
dec
out
jg
adc
scas
jmp
and
lds
stos
dec
loop
pop
fnstsw
ror
or
inc
bnd
data16
neg
push
add
push
sar
aas
and
jmp
sbb
or
mov
out
idiv
jae
xchg
push
int3
std
fmul
add
adc
push
cmp
lds
outs
push
outs
rcr
or
xor
or
jmp
push
(bad)
jg
imul
sbb
xor
gs
out
sbb
xlat
jmp
cmp
inc
cmp
outs
push
jne
push
xchg
mov
and
dec
ja
push
pop
ret
repz
jns
gs
in
imul
pop
(bad)
xchg
loopne
jl
movs
cmp
fistp
test
mov
fld
stos
sbb
retf
xchg
pushf
lds
pusha
ins
push
xchg
mov
mov
add
add
imul
xor
enter
sub
imul
fwait
pop
dec
pop
mov
and
mov
pop
mov
jne
mov
mov
xchg
pop
pop
add
jnp
jl
or
bound
adc
test
cdq
adc
xchg
pop
cmp
aas
call
and
adc
out
pop
dec
popa
test
fsubr
(bad)
mov
(bad)
(bad)
data16
xchg
xlat
leave
add
ret
jno
xchg
(bad)
fimul
mov
mov
scas
sahf
inc
adc
sbb
test
push
inc
je
cdq
imul
xchg
ss
lods
loop
js
push
(bad)
sbb
dec
pop
ja
movs
mov
out
in
mov
inc
es
lahf
push
cmc
pop
inc
in
retf
arpl
sbb
jo
shl
into
xchg
add
or
gs
mov
std
fmul
icebp
imul
fsubr
xor
and
push
jb
adc
xchg
or
test
inc
fxch
cmc
aad
and
sbb
fist
xchg
rcl
sti
mov
add
xchg
js
pop
outs
push
dec
mov
jo
mov
stos
inc
ror
jmp
fs
jno
cmp
inc
adc
sbb
mov
ficom
es
pop
inc
or
out
xchg
ret
cs
fcomp
fimul
stos
cmp
lahf
xchg
sub
leave
sbb
or
test
in
outs
push
dec
cmc
push
mov
pop
int
out
jecxz
cs
xchg
mov
mov
dec
jl
push
fwait
out
mul
dec
pop
mov
pop
ins
aaa
or
adc
pop
xor
es
sbb
jo
and
add
arpl
mov
movs
push
je
dec
sbb
add
add
push
xchg
push
daa
sub
popf
in
enter
imul
sti
stos
jmp
sahf
and
pop
lahf
int
add
inc
test
aad
stc
or
sbb
or
xchg
cmp
mov
and
and
mov
jecxz
ret
cmp
out
cmc
hlt
call
lock
out
(bad)
jl
(bad)
jo
enter
retf
(bad)
arpl
xor
out
pusha
pop
or
fnstcw
imul
sti
mov
popa
shl
dec
stos
jmp
lods
dec
mov
aad
(bad)
adc
in
mov
push
stc
cli
mov
sub
cmp
out
pop
cmc
in
add
lahf
daa
xor
or
in
shr
call
(bad)
popa
mov
loopne
and
jae
mov
test
(bad)
push
and
jo
jno
jne
sub
je
call
mov
in
test
sahf
push
xchg
call
in
sbb
fs
xor
(bad)
jecxz
pop
mov
dec
push
add
pop
rcr
dec
stc
mov
ss
ss
clc
data16
adc
sti
mov
xor
sti
(bad)
retf
arpl
movs
lds
inc
mov
pop
jnp
xchg
jno
in
stos
stos
(bad)
call
cld
dec
jmp
ins
dec
mov
arpl
sbb
inc
outs
inc
jno
adc
mov
xchg
xor
mov
adc
cs
(bad)
gs
mov
mul
sub
add
(bad)
or
jl
test
mov
stos
(bad)
test
jmp
repz
pop
cmps
icebp
in
jmp
imul
fld
(bad)
adc
adc
add
ret
test
(bad)
cmc
ror
jg
daa
cmp
leave
js
mov
nop
(bad)
in
ins
jo
adc
inc
das
inc
sub
mov
dec
in
mov
add
or
out
iret
jl
ja
jg
inc
rcr
mov
ins
fs
ficomp
pop
adc
push
ret
jmp
mov
fucom
inc
(bad)
cmps
pop
add
mov
call
jbe
xchg
test
retf
jmp
movs
adc
or
test
inc
jle
xchg
jno
mov
loope
fsubr
inc
fld
sub
add
cli
inc
shl
or
pop
fs
adc
push
nop
frstor
pop
xchg
pop
movs
pop
mov
stc
mov
aam
(bad)
xlat
clc
out
mov
sti
rol
ja
push
adc
in
ins
mov
adc
mov
iret
scas
retf
jmp
mov
sar
(bad)
and
pop
aaa
lods
sub
repz
xor
ins
std
push
dec
xor
in
test
pop
xor
or
jb
test
clc
ins
pop
adc
aad
xor
es
push
neg
daa
pusha
test
cwde
pop
xchg
pop
mov
jo
arpl
push
je
jl
stos
in
cmp
mov
xor
fbld
sub
dec
icebp
cmp
out
inc
xchg
jge
sub
sbb
add
loope
xor
out
call
add
xlat
nop
push
mov
push
push
jp
cmp
icebp
and
jnp
push
aaa
sbb
das
or
bnd
outs
fprem
in
xchg
jmp
push
inc
xor
les
test
imul
shr
arpl
jno
movs
inc
and
aaa
mov
popf
mov
nop
or
dec
pop
sub
push
and
mov
mov
lahf
dec
out
popa
xchg
sar
jmp
pushf
rol
mov
xor
cld
inc
(bad)
jne
sub
jae
push
ror
sti
push
xchg
in
add
cmp
mov
rol
jo
push
pop
inc
stc
enter
mov
cld
pop
outs
das
xchg
out
movs
xlat
(bad)
pop
pop
pop
xchg
adc
fcom
data16
jg
gs
dec
daa
dec
mov
test
lahf
sub
xlat
add
jge
ja
ja
inc
xchg
clc
in
xchg
mov
mov
add
lds
int
mov
retf
inc
sbb
mov
mov
leave
pop
(bad)
lods
inc
sbb
mov
dec
inc
mov
test
add
mov
sub
push
adc
leave
sub
jp
push
fxch
jne
mov
addr16
xchg
les
jmp
xchg
mov
push
pop
xchg
jmp
cmp
xor
dec
xor
retf
push
pop
xor
popf
xchg
jne
das
jl
ja
xchg
and
ret
inc
lods
jmp
sub
or
imul
sbb
sbb
adc
sbb
sbb
icebp
and
adc
pop
(bad)
fnstcw
xor
pusha
(bad)
jmp
mov
push
sub
pop
int
cdq
add
add
arpl
add
js
mov
jo
sar
push
cmps
pop
fdivp
data16
dec
dec
(bad)
xchg
addr16
fdivr
ds
es
fadd
fwait
and
pslld
and
(bad)
sbb
rcr
pop
lea
fcomp
jmp
xchg
jmp
ins
je
inc
or
add
in
fisub
push
dec
xor
jecxz
dec
pop
push
dec
ins
aaa
mov
stc
aas
scas
gs
dec
ja
sahf
aad
into
xor
and
xchg
adc
imul
loopne
jg
cdq
push
call
loop
jns
nop
push
sbb
add
addr16
mov
sahf
mov
pusha
xchg
jecxz
clc
sbb
test
stc
iret
pop
push
xchg
mov
or
push
jo
(bad)
cli
repz
mov
push
push
cmp
push
lock
jmp
icebp
mov
xchg
out
mov
adc
test
(bad)
sbb
pusha
pop
add
add
in
ror
jp
dec
xor
sbb
pop
call
shr
and
jae
xchg
mov
(bad)
imul
out
push
in
pop
jo
retf
clc
mov
pop
rol
into
or
movs
dec
std
or
daa
cmp
jecxz
fwait
or
outs
mov
push
aad
(bad)
adc
xchg
mov
test
pushf
add
rcl
or
call
sar
jmp
nop
mov
stc
push
mov
xor
rcr
jb
add
cmp
or
std
nop
pop
inc
fsub
mov
jl
dec
mov
adc
sbb
sti
sbb
call
mov
arpl
mov
aad
dec
test
jl
test
mov
push
xchg
push
mov
movs
push
mov
loopne
in
add
aas
push
adc
iret
rol
cmc
out
sub
mov
or
mov
cld
mov
add
or
cld
inc
lods
jmp
cdq
in
out
in
in
xchg
stos
sub
xchg
pop
call
in
or
dec
xchg
sbb
xchg
arpl
or
push
jmp
(bad)
pop
and
add
nop
pop
or
push
push
adc
fimul
mov
cs
inc
jo
mov
push
dec
mov
jecxz
pop
mov
pop
js
jg
fwait
ret
push
xchg
pushf
int3
push
cmp
mov
sbb
pop
and
and
jo
int3
dec
test
add
sahf
mov
lea
gs
jb
add
scas
rcl
aam
pop
push
mov
add
call
(bad)
mov
cmps
pop
(bad)
cmp
fs
pop
mov
fsub
push
pop
xor
adc
ins
loop
clc
sub
daa
imul
bound
sub
adc
call
call
add
cmp
push
stos
(bad)
ja
mov
rcl
sbb
cmp
fdivp
int3
sub
lahf
jb
xchg
in
adc
inc
xor
data16
sti
test
cs
ins
dec
inc
cmps
cmp
pop
and
sbb
mov
scas
add
and
xor
cmp
les
std
pop
xchg
dec
rcl
setno
jae
gs
or
mov
pop
inc
add
std
addr16
pop
scas
fcomp
pusha
push
pop
mov
jp
mov
stos
loopne
scas
xlat
mov
in
jno
pop
ret
jp
movs
(bad)
mul
dec
xchg
push
les
add
mov
xor
jmp
add
adc
call
fwait
push
popa
loopne
cwde
push
inc
push
cmp
sbb
mov
pop
sbb
rcr
pop
(bad)
adc
sub
lahf
xor
inc
sbb
xor
pop
push
int
inc
out
xchg
fwait
jne
(bad)
aam
retf
add
xchg
inc
pop
retf
and
dec
scas
push
jg
arpl
inc
and
mov
pop
mov
dec
push
iret
gs
hlt
outs
sar
jmp
sbb
xchg
mov
jmp
fsub
(bad)
lock
pop
or
daa
pop
pop
add
in
repz
jp
out
cmp
mov
dec
dec
(bad)
mov
jb
sub
out
xor
into
or
imul
call
push
lahf
add
loopne
cmc
in
stc
das
push
inc
(bad)
fistp
loopne
mov
aam
ret
sub
dec
imul
xchg
clc
in
xchg
mov
mov
jb
int
rcl
jmp
inc
jo
pop
sub
inc
adc
dec
fisubr
fwait
addr16
fsubr
test
mov
(bad)
pop
pop
daa
ss
xchg
add
jecxz
stc
pop
jl
enter
mov
mov
xor
ja
cwde
cdq
push
aam
jmp
mov
movs
aas
aad
sbb
shl
mov
in
pop
jo
dec
push
dec
cmps
in
arpl
js
mov
jne
outs
pop
les
cmp
(bad)
xchg
pop
adc
xchg
or
xchg
stos
and
add
in
call
jno
adc
dec
pop
xor
push
es
aam
(bad)
jp
or
jmp
inc
icebp
ja
push
lahf
jb
nop
dec
dec
mov
or
mov
inc
jmp
mov
outs
inc
lahf
imul
stos
stos
push
(bad)
pop
dec
scas
or
in
retf
push
jecxz
out
(bad)
mov
push
mov
push
dec
pusha
aas
jno
sub
inc
pop
dec
es
sbb
push
mov
xor
or
push
sub
add
push
cdq
cmc
xchg
sub
jb
mov
pop
imul
sub
pushf
in
sbb
aas
clc
dec
mov
test
aam
(bad)
cmp
xor
aaa
das
sub
sub
mov
xchg
push
fild
push
jnp
pop
adc
sbb
cmps
pop
jmp
mov
test
js
ja
shl
or
adc
pop
cli
or
sar
push
xchg
ins
scas
cmps
cmp
pop
in
es
jle
or
mov
push
dec
neg
std
pusha
lods
retf
xchg
add
push
ja
lods
out
or
das
push
xlat
pushf
cld
mov
mov
cmc
inc
mov
pop
test
inc
and
jnp
mov
out
int
xor
add
in
icebp
xchg
mov
inc
sti
mov
adc
cmp
pop
iret
jo
loopne
cmps
cld
sub
cmp
jae
ins
pop
mov
shr
pop
dec
adc
add
mov
loope
fist
lods
pop
adc
adc
mov
cdq
jae
dec
mov
xor
call
push
cmc
mov
(bad)
fmul
bnd
jmp
mov
push
ret
add
arpl
cmp
mov
add
xchg
sub
add
jo
fisttp
push
push
rol
pusha
fsub
mov
or
and
mov
jg
dec
xchg
cmps
int
cmp
jae
dec
sar
outs
inc
jne
sbb
lock
test
test
data16
out
jmp
adc
sub
xchg
pop
aas
call
dec
ja
mov
aaa
out
xor
push
inc
pop
fcomp
sti
data16
add
out
mov
imul
xor
pop
bound
adc
adc
(bad)
xchg
cdq
pop
out
dec
mov
icebp
cmp
jmp
call
fwait
dec
or
mov
repnz
xchg
clc
in
adc
xor
mov
pop
pop
int
pop
out
adc
mov
cmp
mov
daa
add
add
aas
lods
fidivr
aas
popf
mov
outs
mov
in
pop
test
es
push
xchg
add
hlt
in
adc
mov
test
into
sbb
jbe
mov
lods
sbb
xchg
sub
mov
push
adc
adc
outs
cmps
arpl
cmp
mov
dec
aad
push
push
push
pop
mov
mov
jmp
adc
jno
xor
repnz
gs
jns
jp
aad
sbb
psubb
push
not
mov
push
fld
inc
add
bound
fsubp
mov
push
lahf
mov
(bad)
sti
in
out
aam
xchg
rcl
mov
retf
jmp
dec
jo
dec
mov
leave
aad
pop
mov
scas
adc
imul
cdq
out
dec
mov
stos
xchg
pop
and
hlt
and
(bad)
sbb
jp
mov
add
mov
into
addr16
daa
jmp
push
neg
sti
(bad)
imul
out
push
in
push
jo
retf
clc
or
shr
aam
sbb
inc
mov
add
cmp
mov
mov
test
call
adc
add
mov
outs
jno
pop
pop
retf
push
or
add
into
push
into
sub
jg
ss
mov
adc
dec
cmc
push
or
pop
int
pop
sbb
hlt
fadd
je
jl
cmp
data16
pop
pop
nop
pop
rcr
js
or
pop
fsub
xchg
pop
fldenv
hlt
mov
ja
mov
sar
jmp
int3
rol
adc
retf
adc
push
aam
sti
cmp
add
xchg
call
fadd
jo
add
int
fwait
pusha
inc
stos
mov
repz
lods
jle
push
dec
ja
add
and
in
stos
pop
mov
in
adc
mov
mov
jle
push
loopne
adc
imul
mov
lahf
mov
imul
add
pop
inc
ret
rcl
(bad)
xchg
in
call
and
and
sbb
and
jmp
(bad)
jl
mov
fidivr
dec
popf
in
pop
cmp
outs
push
pop
push
(bad)
dec
sub
dec
pusha
ret
or
cld
outs
inc
jne
xor
or
add
xor
in
lea
sub
pushf
and
add
xlat
scas
enter
fisttp
sbb
outs
in
mov
clc
inc
xor
push
push
out
test
add
bound
pop
dec
ja
(bad)
frstor
jno
sar
xor
adc
fadd
stos
gs
jns
xchg
(bad)
sbb
loopne
push
(bad)
das
dec
std
dec
push
stos
dec
push
fld
add
in
repnz
(bad)
sub
sub
lahf
jb
nop
and
ins
jp
sub
inc
test
inc
retf
arpl
fld
jo
add
movs
inc
adc
pop
mov
pop
jle
or
(bad)
out
xchg
test
ror
sub
fwait
ss
inc
pusha
mov
and
outs
inc
pop
ss
or
mov
pop
lea
fcomp
jmp
xchg
jmp
ins
je
inc
pop
(bad)
adc
sbb
jo
aaa
sub
shl
test
dec
push
dec
mov
stc
iret
mov
cld
ins
pop
daa
mov
iret
loopne
stc
loop
ficomp
in
(bad)
out
call
in
(bad)
xchg
push
int
add
enter
mov
mov
rcr
rol
pop
inc
xor
mov
in
cli
in
xchg
outs
mov
mov
push
pop
sti
adc
adc
push
mov
xor
pop
push
into
xchg
fdivp
adc
mov
adc
pop
inc
bound
and
sbb
out
sbb
xchg
out
push
ins
mov
jecxz
std
pop
jl
adc
in
sub
jp
xchg
fcomp
daa
jmp
pop
movs
jns
mov
adc
jmp
xor
mov
dec
mov
pop
push
(bad)
out
(bad)
jne
(bad)
jle
jne
imul
repnz
xchg
test
pushf
out
call
loopne
les
(bad)
xchg
jp
movs
scas
sbb
icebp
push
pop
sub
jno
outs
outs
or
call
sub
or
adc
mov
out
cmps
int
and
and
add
jmp
mov
lods
jb
test
shl
jecxz
jl
daa
outs
ja
scas
pop
sub
xchg
repz
adc
neg
fs
push
or
nop
push
lea
sbb
mov
add
hlt
call
sub
repz
imul
movs
cwde
push
pop
adc
push
in
pop
(bad)
ret
gs
mov
gs
pop
push
pop
inc
and
add
stc
ins
ror
jbe
ret
jno
pushf
enter
jmp
loop
ficomp
ror
mov
clc
(bad)
jge
in
add
mov
test
adc
xchg
jecxz
sub
push
inc
mov
xchg
or
or
push
sti
das
inc
in
ret
std
push
inc
bound
sub
add
hlt
fsub
jge
or
std
(bad)
xchg
and
in
xchg
add
scas
add
jcxz
xchg
test
push
xor
aaa
dec
cmps
cmp
pop
push
out
push
inc
xchg
or
dec
push
mov
retf
enter
das
shl
jmp
bound
bound
stc
jmp
fxch
mov
pop
adc
movs
out
(bad)
jns
pop
pop
(bad)
hlt
dec
std
(bad)
mov
add
lods
xchg
call
and
sbb
jecxz
cmc
add
cmp
mov
(bad)
cmp
push
jo
ss
mov
pop
bound
test
shr
outs
pop
pop
jp
pop
std
mov
aas
inc
adc
inc
sar
loopne
mov
pop
mov
sar
sub
sahf
js
xor
xor
cmps
fwait
inc
adc
jmp
scas
mov
sbb
cmp
pushf
call
xor
repnz
imul
popa
xchg
adc
jb
into
push
pop
add
add
mov
sub
and
inc
shl
mov
jmp
cld
enter
push
int
cdq
pop
dec
adc
add
pop
jne
jns
sahf
inc
cmp
sbb
loopne
jl
adc
fnsave
das
dec
cmp
push
jbe
in
xchg
or
dec
loopne
add
test
pushf
mov
ret
icebp
inc
xor
sub
lock
popa
rcl
out
fisttp
inc
or
sbb
inc
dec
push
fsub
ins
fs
push
xor
mov
in
popa
sar
add
mov
jecxz
addr16
push
and
lods
sbb
xchg
sub
mov
call
push
jnp
nop
in
loop
cmp
cmp
cmps
cmps
and
test
cmps
xchg
ror
ja
jbe
scas
data16
lahf
ret
mov
jb
aad
adc
outs
inc
sbb
cmp
aam
xor
popa
icebp
and
adc
movntps
push
cmc
rcr
xor
cmp
ja
push
adc
repz
mov
shl
aas
ja
add
add
(bad)
adc
ret
xchg
xchg
cmp
int
in
mov
out
add
add
dec
scas
or
jo
jecxz
xchg
movq
cmps
adc
mov
jg
jns
iret
jl
add
mov
pop
inc
mov
iret
popa
mov
adc
cmp
xchg
sti
jb
add
ins
mov
jmp
lock
cmp
test
mov
mov
arpl
jl
xchg
sub
lods
mov
sbb
cmp
mov
das
ficomp
sbb
dec
out
cmc
adc
not
jno
adc
dec
jle
xlat
push
jnp
add
das
push
cmp
xchg
push
pusha
or
rol
ja
and
repz
sti
dec
mov
mov
test
dec
jne
out
sahf
cs
in
in
mov
out
mov
loopne
add
sub
pop
or
addr16
fdivr
xchg
es
lock
cmps
fwait
and
dec
pusha
mov
repnz
inc
pop
jl
or
movs
dec
ins
test
sbb
jne
sub
dec
jnp
lods
sbb
xchg
sub
mov
inc
mov
lods
sbb
ds
dec
xor
dec
push
iret
call
jno
(bad)
imul
dec
ja
call
mov
inc
adc
gs
repz
movs
inc
scas
jecxz
sbb
pop
xchg
push
inc
(bad)
pop
lea
mov
dec
pop
mov
shl
or
retf
lods
inc
(bad)
inc
add
clc
call
cmp
iret
dec
inc
ret
out
sub
sbb
cwde
imul
dec
inc
mov
xchg
cs
iret
cmc
sub
je
(bad)
loopne
pop
mov
pop
fldcw
leave
aad
mov
pmulhw
sar
hlt
dec
(bad)
(bad)
icebp
jns
xor
ret
sub
dec
push
les
sbb
jb
into
push
pop
push
jmp
test
lock
xor
test
cmps
int3
retf
mov
cli
jne
call
test
dec
test
das
push
jmp
jecxz
jecxz
jmp
ja
sub
inc
(bad)
jecxz
pop
pop
repnz
lock
mov
es
jnp
push
ret
or
call
rcl
sti
sti
mov
add
mov
imul
mov
and
lods
into
add
pop
mov
call
mov
push
ins
pusha
xchg
dec
outs
fisttp
aas
sub
loop
outs
inc
pop
jl
or
push
mov
mov
mov
(bad)
jb
pop
pop
xchg
xlat
jp
jecxz
stos
cmovae
add
add
test
vshufps
inc
pop
push
aam
(bad)
cmp
xor
pop
js
pop
xchg
jg
sub
repnz
out
int
mov
nop
cmc
je
and
pop
popf
lds
push
push
mov
ja
adc
mov
mov
sub
call
xchg
push
lahf
or
or
xchg
sbb
int3
push
cmps
mov
pop
sbb
mov
cs
pop
jo
dec
loope
pop
dec
mov
mov
push
retf
and
sbb
arpl
cld
sbb
ins
in
or
and
jg
movs
movs
out
daa
inc
(bad)
es
and
bound
push
sub
adc
xor
(bad)
std
jmp
(bad)
xor
call
pop
fmul
adc
push
add
cs
cmp
push
dec
or
(bad)
sbb
xchg
mov
jge
adc
add
test
aam
fcomi
inc
out
mov
adc
popf
jne
repnz
inc
outs
adc
movs
mov
xchg
mov
rcl
jmp
dec
cli
pushf
dec
jl
push
movs
sbb
data16
mov
scas
es
inc
pushf
es
(bad)
fstp
es
lds
outs
inc
lea
or
mov
xor
mov
fdivr
xor
imul
mov
das
mov
in
add
jno
cmp
jb
add
push
repz
stc
add
(bad)
jno
xchg
(bad)
push
call
mul
jecxz
ret
cmp
clc
jecxz
call
cli
dec
mov
cmp
std
and
aam
sub
sub
call
rol
outs
ret
sbb
inc
xor
rcr
xchg
jnp
fld
mov
or
movs
leave
mov
mov
add
push
jb
jp
sub
(bad)
mov
xchg
jg
sbb
jmp
shl
mov
pop
inc
movs
jecxz
addr16
sbb
fsub
call
lock
retf
mov
adc
fisttp
out
pop
int3
js
jmp
ja
call
push
fimul
sub
imul
loopne
or
stc
add
add
xchg
mov
loopne
add
add
pop
fcmovb
sbb
pusha
in
call
xchg
test
test
xor
push
iret
sbb
imul
jge
popa
mov
dec
cmp
repz
lods
leave
(bad)
lods
pop
mov
add
ja
mov
sbb
test
push
xor
pop
dec
cmps
mov
fs
dec
cmc
dec
in
pusha
sar
hlt
and
dec
test
test
test
pcmpgtd
(bad)
adc
inc
xchg
shl
in
ret
je
inc
or
jl
ds
xor
test
mov
stc
add
scas
push
cwde
adc
div
jmp
push
inc
out
mov
je
add
push
and
jmp
push
pop
jae
jp
inc
cs
sub
mov
inc
(bad)
inc
add
clc
sti
(bad)
xor
mov
iret
dec
inc
pop
pop
sub
cmp
popa
popf
pushf
loopne
aad
jo
fisttp
mov
pop
retf
and
pop
dec
scas
icebp
cmp
and
adc
pop
fldcw
sar
ja
mov
or
xchg
jl
ja
jp
dec
cmps
dec
out
sub
movs
jne
out
adc
fcom
(bad)
daa
pusha
pop
(bad)
out
in
sbb
dec
(bad)
scas
or
jmp
(bad)
int
sbb
mov
test
sub
test
jp
test
sbb
sub
adc
fndisi(8087
jns
pop
aad
sbb
pop
clc
push
fcomp
not
mov
les
test
add
loope
leave
repnz
js
scas
mov
push
ret
xchg
cwde
or
cmps
pop
test
push
jo
mov
dec
or
push
lods
and
daa
retf
sub
mov
push
push
xor
inc
xchg
test
neg
dec
je
loopne
inc
pusha
mov
jg
jns
push
jl
add
mov
mov
div
mov
pop
sahf
mov
inc
(bad)
push
daa
push
pop
call
xchg
sub
jb
loope
loopne
pop
retf
add
cmp
jb
add
shl
sub
dec
neg
daa
cmp
sti
stos
jg
dec
in
adc
sub
or
jmp
idiv
in
or
jmp
fisttp
push
jmp
adc
ror
inc
das
pop
jno
bnd
push
lahf
jb
nop
dec
aaa
mov
mov
adc
jmp
je
sbb
jle
loope
sbb
inc
movs
shr
test
jg
nop
lds
add
and
sbb
xchg
dec
add
pop
jmp
sbb
inc
lea
or
movs
cs
test
sbb
inc
mov
inc
data16
sbb
test
sar
mov
add
inc
sbb
sahf
jg
cmp
fcmove
inc
add
cmps
push
adc
xchg
jp
xor
scas
aaa
xor
test
stos
lods
xchg
pop
lods
ins
push
jns
jecxz
ret
cmp
cdq
add
ret
pop
sbb
gs
stos
dec
push
adc
or
outs
cmp
call
sub
xor
adc
sbb
inc
mov
push
sbb
jns
loope
sahf
mov
hlt
or
mul
dec
dec
dec
fimul
cmc
cli
scas
addr16
fmul
pop
int3
out
xchg
test
ss
dec
inc
mov
sar
mov
test
bound
test
test
xlat
mov
jne
pop
xor
shl
jmp
xchg
sar
mov
dec
dec
ss
pop
jmp
int
out
vshufps
pop
and
xchg
cmp
lock
daa
fisubr
jno
mov
xor
ficom
loopne
popf
ins
push
jns
adc
fst
sbb
ja
in
lods
gs
pop
dec
(bad)
xchg
mov
fcomp
movs
push
stos
cmp
fisttp
aam
movs
sbb
or
xchg
out
ss
lock
xchg
push
adc
inc
mov
sub
sti
adc
xor
into
sahf
movs
sub
imul
mul
push
dec
leave
ret
or
addr16
fdivr
push
js
es
in
cmps
fwait
and
arpl
hlt
and
(bad)
sbb
jp
xor
fcom
nop
cdq
fcom
fcmovne
std
imul
out
xchg
adc
dec
jg
add
xor
cmp
jl
shr
or
dec
mov
pop
dec
cmp
cmp
jecxz
push
repnz
test
repz
jle
add
sbb
stos
test
adc
(bad)
xchg
mov
rcr
push
stos
dec
loop
add
sub
jmp
lahf
clc
sti
cmp
in
ins
dec
ror
inc
mov
rcr
dec
xchg
or
jmp
dec
jo
push
(bad)
lods
inc
xchg
mov
inc
aaa
pop
dec
mov
std
xchg
lahf
sub
out
ja
mov
scas
fwait
ss
jb
(bad)
inc
pop
imul
or
mov
pop
lea
fadd
dec
repz
xchg
mov
mov
add
movs
add
sbb
outs
jae
fadd
pop
mov
out
cs
mov
sbb
loopne
ins
sar
and
retf
(bad)
jecxz
lods
xchg
imul
fstp
(bad)
adc
push
call
sar
dec
mov
push
and
push
test
sbb
retf
xchg
pushf
lds
pusha
call
push
xchg
push
dec
icebp
inc
xor
rcr
xchg
jp
fld
mov
or
xchg
pop
aaa
test
xor
stos
add
je
push
dec
inc
mov
adc
dec
fprem1
hlt
stc
mov
cmp
lea
adc
push
and
iret
and
xchg
adc
xchg
sti
pop
loope
ret
(bad)
nop
stos
and
xchg
mov
clc
adc
shr
sub
mov
call
scas
cmp
jmp
adc
call
xor
jg
movs
idiv
std
std
xchg
add
das
ret
shr
mov
mov
ss
je
pop
jo
push
aaa
cmp
into
sub
add
hlt
fcom
ret
jae
shl
inc
repz
das
in
xor
push
retf
push
repz
arpl
clc
xor
cmp
mov
or
sbb
out
add
and
sub
stos
ins
data16
int
call
pop
(bad)
sub
in
outs
sbb
ds
xor
in
pop
cmp
mov
or
and
push
inc
adc
xchg
mov
fninit
add
call
lods
inc
addr16
mov
dec
jmp
or
fnstenv
retf
sub
rol
mov
outs
push
jp
outs
add
scas
cmps
(bad)
sub
sbb
rol
ret
xchg
lods
and
daa
retf
sub
ja
ja
scas
jae
out
adc
jle
and
fimul
jg
jns
stos
jl
add
test
das
ret
pop
lea
fcomp
xor
(bad)
gs
sbb
xchg
sub
jb
fst
sub
ja
outs
add
movs
xor
retf
push
pop
mov
cmp
iret
mov
jbe
ret
jno
cmp
(bad)
repnz
jecxz
dec
leave
mov
imul
loopne
jg
cdq
push
add
mov
push
in
out
(bad)
jl
(bad)
jno
cmps
add
stc
sub
sub
lahf
jb
xchg
mov
aam
add
mov
add
and
cs
mov
lods
mov
inc
fwait
and
mov
scas
add
sbb
rcr
fldcw
mov
mov
movs
dec
test
aad
push
mov
das
shl
jmp
xchg
mov
mov
add
inc
pop
sbb
ror
xor
test
cmps
int3
fdivp
int
retf
inc
pop
loope
fcom
retf
cmp
jmp
outs
div
adc
ins
sbb
add
mov
call
add
push
ret
mov
shr
mov
mov
outs
leave
inc
je
scas
in
inc
out
sub
xor
push
ret
idiv
mov
pop
add
add
(bad)
adc
aad
jno
dec
add
mul
sbb
dec
scas
mov
dec
xchg
ja
clc
xchg
jb
push
jae
les
mov
mov
add
in
test
mov
mov
es
adc
outs
mov
aad
gs
pop
pop
push
xlat
loopne
add
or
fmul
mov
xor
movs
mov
stos
cmp
inc
jge
dec
std
or
(bad)
cmp
add
test
sub
inc
sub
aad
cmps
cmp
cmc
cld
call
jno
adc
aaa
push
mov
mov
arpl
in
imul
repnz
loope
lods
pop
inc
mov
xchg
push
sahf
std
lock
mov
inc
mov
ds
jo
inc
adc
and
sbb
jl
push
ss
and
dec
scas
sub
lahf
sbb
cdq
call
(bad)
mov
scas
fwait
ss
sbb
ins
inc
pop
jl
lea
mov
movs
push
inc
mov
dec
loop
cld
inc
(bad)
jnp
sub
iret
call
je
out
sbb
adc
loopne
mov
ret
adc
mov
mov
push
mov
add
cdq
ret
cld
fiadd
push
ins
push
jns
imul
test
scas
fdivr
cwde
test
inc
pop
xor
aam
div
xor
inc
rcr
ja
push
adc
xor
dec
mov
fistp
add
mov
jmp
dec
jo
dec
mov
leave
and
adc
or
js
xor
aad
js
rcl
xor
add
add
test
mov
add
in
cmps
dec
es
hlt
lds
(bad)
js
xor
jge
into
mov
imul
adc
mov
fs
jmp
test
mov
mov
xlat
cmp
pusha
inc
mov
push
sbb
mov
mov
mov
cdq
lds
addr16
int
xor
dec
mov
gs
(bad)
(bad)
mov
rcr
mov
dec
cmps
je
(bad)
mov
(bad)
clc
pushaw
in
sahf
jge
push
ret
mov
test
or
(bad)
xlat
add
hlt
retf
arpl
fistp
dec
jo
rcr
sub
iret
loopne
mov
cs
fdivr
push
sub
int3
pop
xchg
cmps
fwait
ss
pop
scas
outs
jb
push
pop
jns
xor
jbe
mov
daa
jb
jbe
aaa
cdq
push
and
mov
jno
out
pop
(bad)
gs
push
xchg
icebp
adc
inc
in
pop
ret
jp
cmps
rcl
mov
(bad)
mov
ins
jne
out
fisttp
leave
mov
add
sub
adc
imul
sub
sub
jecxz
fcom
outs
test
add
mov
icebp
push
mov
ss
cmp
aas
js
push
js
cmp
mov
jnp
push
xor
mov
inc
xor
inc
out
push
in
inc
xor
ins
aad
jo
mov
(bad)
dec
jle
and
aas
call
ja
push
aaa
popf
sbb
in
jp
mov
push
fs
shr
dec
xchg
ss
sbb
mov
pop
push
jp
or
loop
aam
push
fst
sbb
push
mov
mov
es
outs
mov
inc
hlt
inc
xor
push
and
shl
cld
or
scas
pushf
sub
inc
dec
xchg
push
pop
jmp
out
mov
mov
xlat
stos
cmps
push
cmp
jmp
outs
test
rcr
and
mov
js
mov
inc
rol
mov
sub
mov
in
xchg
outs
dec
ins
dec
fmul
inc
mov
ror
adc
retf
arpl
sub
xchg
inc
imul
mul
aaa
mov
pop
push
mov
(bad)
fdivr
test
outs
sub
mov
cmps
fst
cmp
dec
test
jge
jae
or
inc
fxch
pop
std
repnz
fdivr
test
imul
inc
mov
sub
int
sbb
sub
add
add
fmul
data16
push
sbb
pop
add
ret
cld
test
cdq
jecxz
aas
iret
mov
imul
loopne
call
push
lea
xor
ins
scas
dec
push
es
aad
mov
and
aas
(bad)
leave
pop
fdivr
xchg
pop
pop
sar
ret
mov
sub
xor
test
pop
push
sbb
mov
lds
sar
mov
gs
aas
jecxz
and
pop
icebp
loopne
and
xor
xor
adc
fs
mov
cmc
jecxz
cdq
pop
jl
ds
or
or
call
inc
sub
push
mov
in
mov
push
pop
add
lods
sbb
xchg
iret
shl
sub
push
pop
inc
(bad)
cmp
ja
ja
pop
call
das
pop
push
stc
adc
add
aaa
lds
repz
xor
in
inc
jmp
mov
push
inc
mov
push
add
xchg
(bad)
jmp
(bad)
sub
cmc
rcr
inc
adc
(bad)
xor
js
cs
mov
inc
push
sub
(bad)
xor
push
adc
hlt
or
mov
in
stos
stos
adc
pop
dec
(bad)
mov
push
sbb
xor
add
jmp
pop
arpl
sar
dec
int3
and
cmps
push
dec
jecxz
sub
fcomp
(bad)
out
sbb
repnz
iret
push
ss
mov
adc
mov
clc
add
shl
je
ins
hlt
pop
fimul
xchg
sub
jb
mov
xor
repnz
mov
or
mov
loopne
adc
xchg
clc
in
cmp
pop
mov
mov
pop
xor
mov
mov
pop
pusha
sbb
mov
pop
adc
inc
adc
cmps
xor
xchg
(bad)
mov
mov
(bad)
dec
mov
push
retf
and
adc
lods
dec
mov
mov
(bad)
mov
push
mov
adc
enter
jae
addr16
imul
cmp
inc
mov
fcom
imul
mov
loopne
dec
adc
in
arpl
mov
pop
push
dec
add
jno
jl
ins
pop
dec
std
or
(bad)
cmp
pop
in
or
out
pop
call
out
jecxz
dec
inc
call
ror
jno
mov
ins
xchg
icebp
push
mov
push
not
cmp
mov
jns
adc
pushf
push
adc
lock
ins
int3
loopne
sti
inc
push
xchg
shl
out
jmp
icebp
(bad)
pop
add
cmc
call
int
js
mov
or
fcomp
sbb
fisubr
add
sub
cmc
ds
leave
mov
lea
int
es
cmp
jle
inc
cmps
stos
fcom
ins
es
pop
xor
mov
push
pop
jbe
fild
mov
call
xchg
je
js
test
inc
xor
je
sub
jecxz
in
js
dec
pop
mov
push
enter
rcr
sbb
mov
(bad)
or
dec
aas
and
mov
dec
push
cmp
inc
call
idiv
or
aaa
inc
push
ss
lea
push
cwde
xchg
push
nop
mov
xchg
inc
xor
ins
mov
jl
aam
mov
push
or
retf
pop
cs
jo
das
sub
jl
dec
test
or
inc
pop
fs
push
inc
imul
jno
hlt
in
adc
out
jge
leave
or
mov
xor
es
sub
int3
int3
inc
daa
ss
sbb
outs
out
sbb
or
mov
imul
sbb
jge
out
dec
xor
retf
test
cdq
push
xchg
mov
add
xor
ds
mov
imul
xchg
and
sub
sbb
jmp
dec
repnz
jne
test
sar
jmp
push
imul
dec
hlt
adc
je
iret
(bad)
mov
cmps
or
sub
mov
imul
and
cli
je
xchg
scas
inc
and
inc
sub
add
(bad)
fiadd
fsub
push
mov
inc
push
mov
dec
xchg
dec
pop
(bad)
or
xchg
mov
pushf
mov
iret
hlt
xor
fnstcw
sbb
add
add
mov
in
xor
xor
xchg
sub
and
addr16
xchg
jmp
mov
xor
adc
bound
push
push
inc
xchg
xchg
push
pop
out
xchg
out
jg
movs
imul
and
push
pop
movs
mov
in
push
xlat
add
or
bound
fnsave
cmps
cmps
mov
lahf
out
xlat
mov
cmps
dec
ror
rcr
lock
or
rol
mov
pop
xlat
inc
dec
nop
pop
rcr
ins
outs
std
sub
test
push
xor
or
outs
pop
stos
mov
add
and
pop
jl
mov
jp
dec
xor
pusha
ret
mov
out
outs
lods
push
popf
add
in
call
and
outs
das
inc
inc
lock
adc
inc
ret
push
sti
rcr
dec
mov
ins
pop
les
jno
cmp
sbb
adc
adc
xchg
or
das
xchg
into
loopne
mov
adc
xchg
mov
push
sbb
test
movs
retf
jmp
gs
repnz
in
xchg
pop
mov
stc
cmp
aaa
add
cmp
add
sbb
js
fist
ror
or
stos
iret
loopne
mov
mov
jg
inc
rcr
rcr
and
dec
pusha
leave
jne
add
sub
and
xchg
or
pushf
sub
mov
addr16
sub
popf
std
lock
out
std
ds
rcr
cmp
retf
retf
ja
rcl
addr16
in
dec
xor
mov
sbb
lds
cmp
cmp
add
cdq
add
mov
sub
or
mov
out
int
or
jmp
pop
aad
lock
test
mov
imul
and
jns
mov
sub
sar
aam
nop
mov
les
test
mov
(bad)
jecxz
nop
ss
out
cmc
inc
jl
rcr
movs
cmp
movs
sbb
mov
fstp
inc
fist
vpmaddwd
gs
xchg
mov
mov
xor
imul
mov
mov
jmp
jecxz
ret
adc
bound
out
and
or
push
fwait
bound
addr16
shl
mov
retf
or
jp
outs
push
les
daa
mov
sbb
stos
aad
pop
cmp
sbb
lods
gs
scas
mov
pop
jle
inc
jp
dec
loop
xchg
das
das
es
sbb
int3
xlat
pop
xchg
jge
clc
xchg
sti
outs
scas
jp
cmp
mov
mov
cld
pop
adc
jbe
or
push
mov
adc
mov
or
mov
(bad)
fdiv
sub
xor
xchg
xchg
and
push
lahf
inc
dec
jle
rol
mov
in
int3
dec
out
sub
movs
ja
mov
addr16
fld
std
sbb
loopne
push
dec
icebp
jecxz
fsub
jl
mov
adc
fidivr
icebp
inc
add
inc
xchg
cld
mov
add
add
nop
rcr
test
xchg
pop
xchg
cmps
inc
pusha
nop
test
clc
pop
call
int3
and
push
rcl
push
mov
push
aas
lahf
ror
(bad)
xor
(bad)
fstp
rcl
sti
outs
mov
movs
add
fistp
xor
add
mov
(bad)
cmp
cli
test
dec
inc
and
and
pop
xchg
cld
arpl
outs
sbb
outs
inc
mov
adc
(bad)
push
jle
or
cmp
sub
dec
test
push
mov
dec
stc
mov
sub
call
call
scas
xor
bound
push
dec
mov
(bad)
pop
mov
loope
or
sub
jl
or
call
push
sub
imul
icebp
pop
inc
and
xchg
push
mov
sbb
cwde
push
add
xchg
ins
push
(bad)
leave
repnz
xor
and
in
or
push
or
enter
xor
mov
(bad)
sub
mov
mov
into
adc
shl
inc
bound
jg
in
jmp
xchg
(bad)
movs
fs
mov
les
mov
hlt
pop
add
pop
or
gs
je
push
ret
push
mov
push
sub
out
mov
jmp
inc
xor
xor
cmps
mov
jno
sub
mov
or
xchg
and
imul
rcl
das
push
mov
pop
adc
cdq
sub
mov
(bad)
lock
daa
mov
arpl
pop
sub
sub
cdq
mov
rol
sub
test
pop
nop
push
xor
inc
xor
out
test
aad
mov
jl
popa
push
mov
call
xchg
cmp
retf
dec
add
pop
es
clc
fistp
mov
add
or
push
iret
bnd
test
aam
jp
jno
mov
mov
data16
jmp
in
xchg
push
push
call
push
jae
lock
push
into
xor
sar
mov
jo
jno
iret
sahf
xchg
movs
mov
cld
loope
push
sub
sahf
push
dec
or
sub
sahf
jp
sub
jecxz
pop
loopne
in
sub
mov
push
and
cmp
cs
idiv
(bad)
arpl
leave
js
pop
stos
and
push
js
pop
mov
add
stc
cmp
push
inc
imul
sti
test
call
mov
mov
rcl
mov
inc
and
jp
pop
fldenv
pop
xchg
lds
clc
mul
sbb
or
jmp
jnp
pop
popa
sub
mov
cmp
gs
stos
loopne
jmp
arpl
ret
push
cmps
call
mov
loopne
jp
mov
add
clc
cmp
call
xchg
adc
popf
push
cld
or
movs
mul
mov
shl
mov
arpl
push
cmp
rcl
retf
push
aad
or
shl
and
repz
mov
mov
mov
cwde
test
ret
jns
jnp
mov
jno
pop
pop
aas
add
dec
add
xor
out
xchg
test
mov
xchg
cmp
jne
or
xchg
or
dec
int3
cmc
test
fld
mov
mov
shufps
scas
and
ret
sbb
sti
stos
or
adc
sbb
jo
scas
jmp
(bad)
out
mov
clc
rol
movs
lds
xchg
dec
in
jmp
jns
jle
xlat
adc
cmps
xlat
in
in
xchg
jo
ror
xchg
xor
sub
lds
ss
shl
js
cmp
sti
in
clc
stc
aam
mov
(bad)
lods
cmps
sti
test
push
sbb
(bad)
mov
ja
(bad)
in
and
mov
pop
xchg
cmp
ds
daa
push
(bad)
popf
sbb
dec
push
pop
pop
(bad)
and
stos
dec
int3
pop
or
mov
int3
lea
inc
leave
pop
(bad)
jne
xchg
(bad)
cwde
inc
mov
out
fsubr
test
dec
(bad)
mov
jl
stos
and
(bad)
int
mov
mov
test
mov
inc
mov
add
outs
inc
iret
repz
bound
push
fstp
loope
(bad)
push
sub
sbb
fist
cmps
sub
add
dec
push
test
(bad)
arpl
push
cli
cmps
jle
sub
pop
(bad)
adc
or
clc
inc
sbb
mov
xchg
sub
ficom
inc
and
std
sar
jle
add
sbb
inc
pop
in
xor
jl
push
nop
and
cmp
cmp
lock
fwait
in
pop
in
icebp
lahf
mov
sbb
lock
mov
add
xor
out
fnstenv
push
and
xor
cdq
inc
out
sub
xor
inc
call
gs
retf
sub
std
movs
in
in
or
mov
or
jmp
or
stc
scas
or
in
ja
ret
(bad)
jno
xchg
pop
fwait
or
scas
pop
gs
ficomp
stos
aad
add
leave
add
cs
and
lock
dec
ins
stc
jo
mov
inc
(bad)
rcl
ja
retf
cmp
push
mov
mov
loopne
push
js
fist
mov
das
out
sub
ja
cmp
retf
xor
loopne
cmp
dec
push
inc
pop
xor
add
pop
xlat
not
add
bound
pop
push
add
ror
ins
dec
mov
outs
sahf
inc
add
int3
les
cld
or
jl
lea
cmp
bound
mov
in
mov
stos
sub
es
mov
retf
push
(bad)
xchg
dec
int
pop
call
dec
repnz
mov
xchg
call
retf
jmp
mov
jmp
imul
jmp
test
out
dec
aad
mov
jne
xchg
jb
repz
aaa
(bad)
div
dec
add
pop
sar
pop
xchg
stc
cmp
mov
mov
jecxz
inc
cld
ss
jo
fld
retf
push
mov
cdq
fisttp
shr
mov
mov
sub
popa
adc
outs
xchg
out
mov
fst
int
repnz
or
xchg
jns
sbb
aam
int3
xor
jne
cmps
jb
mov
addr16
and
ret
add
imul
std
jmp
mov
ret
adc
repnz
mov
js
dec
jno
or
movs
mov
jbe
mov
ret
pop
pop
adc
sub
xchg
xchg
sahf
stos
sub
push
unpcklps
lods
mov
shl
mov
popf
aas
mov
add
dec
iret
(bad)
xchg
test
or
cwde
stc
adc
pop
xchg
jo
in
inc
scas
out
push
xor
sti
jnp
xor
jo
push
sub
or
lods
icebp
sub
ret
mov
or
adc
daa
inc
fcom
pop
cdq
jecxz
lods
pop
fs
pop
ins
mov
ret
or
setno
hlt
dec
inc
dec
xchg
(bad)
sub
popa
lea
xor
jge
(bad)
es
mov
adc
pop
jmp
mov
(bad)
adc
cmp
dec
xor
cli
sub
in
add
or
xchg
sub
dec
por
xchg
add
fimul
push
mov
out
pop
adc
fist
rcr
jbe
mul
mov
pop
scas
mov
ds
sub
push
es
out
retf
(bad)
sahf
test
or
(bad)
add
(bad)
adc
cmp
mov
xlat
sub
jecxz
daa
retf
mov
mov
rcr
or
clc
mov
jl
test
mov
push
movs
adc
je
lahf
dec
jnp
or
mov
xchg
out
or
xchg
stc
iret
fsub
cmps
jb
cld
movs
in
out
sub
fcomp
in
out
sahf
mov
and
out
and
ins
hlt
pop
(bad)
xor
xor
xchg
jae
es
push
pop
daa
xor
mov
fcmovnb
mov
mov
xchg
rcr
jns
imul
cs
leave
popf
sbb
sub
jne
cmp
push
jle
arpl
mov
stos
mov
lods
out
push
shl
int3
adc
sub
and
jb
fnstcw
adc
xor
jo
pop
aaa
xor
xor
push
mov
mov
sahf
mov
jae
ja
mov
ins
sbb
cdq
mov
dec
dec
push
pop
adc
cld
and
jb
enter
xchg
jno
mov
out
loopne
sub
fcomp
imul
sti
stos
push
mov
jg
arpl
pop
(bad)
xor
rcr
retf
push
add
std
sbb
lods
retf
ret
dec
adc
or
jmp
loopne
inc
sahf
loope
push
adc
cdq
or
push
test
mov
cmp
push
(bad)
mov
jns
sub
aas
jl
out
(bad)
retf
(bad)
push
mov
scas
jmp
sbb
adc
cmp
mov
sub
outs
jmp
jb
adc
movs
and
or
push
xor
mov
or
in
mov
cmc
stc
addr16
add
int3
pop
add
push
in
(bad)
jo
mov
and
int
inc
loop
ins
inc
pop
or
(bad)
adc
pushf
(bad)
dec
mov
ins
icebp
movs
mov
in
test
xchg
push
daa
jmp
sub
gs
cmc
mov
mov
in
xchg
xchg
ss
adc
xor
jo
neg
mov
in
es
xchg
sub
dec
or
(bad)
xchg
fiadd
out
xlat
mov
push
and
ins
fstp
adc
mov
es
mov
sbb
cmps
mov
add
adc
xchg
fwait
push
stc
cmp
mov
xlat
sub
add
outs
jge
clc
xor
xor
jg
mov
jl
pop
jle
stos
mov
clc
mov
cmp
fcomp
sbb
and
mov
loop
push
ins
mov
ret
and
setno
hlt
dec
inc
retf
popf
bound
push
push
cmp
outs
inc
mov
fcom
ins
movs
push
mov
xchg
jmp
jae
in
popf
xchg
ss
adc
das
fdivr
mov
sti
retf
popa
add
mov
xchg
push
push
push
mov
out
lods
imul
mov
popa
inc
pop
adc
cmc
out
add
lods
mov
aam
dec
aad
cli
scas
xchg
arpl
mov
sar
rol
pop
sub
sub
mov
pop
cwde
cmp
pop
or
jb
fldcw
xlat
sub
mov
retf
adc
jbe
mov
jge
dec
cmps
mov
mov
sbb
xchg
je
dec
push
es
inc
fsubr
push
cli
xchg
push
add
inc
push
mov
dec
lea
fiadd
xchg
mov
adc
jbe
dec
push
mov
jmp
pop
(bad)
gs
sub
les
stos
mov
out
mov
ins
add
mov
movs
or
mov
jmp
dec
repz
add
or
xchg
sub
inc
jne
ret
xchg
fidivr
push
jmp
push
aad
sub
adc
dec
xchg
(bad)
xchg
sti
in
scas
ret
add
push
mov
jmp
div
adc
cmp
or
add
js
inc
add
icebp
cmp
jne
scas
sbb
shr
jbe
cmc
inc
psubq
sar
(bad)
cmc
xor
push
mov
test
movs
push
jl
cld
push
sbb
inc
fcom
lahf
push
sub
cmove
push
sbb
or
jge
or
jecxz
bound
inc
repz
cmp
daa
sub
sahf
jae
jo
jmp
xor
add
addr16
in
xchg
xchg
mov
adc
mov
push
dec
jno
or
jo
test
dec
(bad)
adc
js
gs
fld
jecxz
in
test
lock
ror
dec
xchg
adc
inc
out
bound
daa
movs
pop
cmp
cmp
aad
ins
push
pop
pop
xchg
clc
cmp
mov
xlat
sub
mov
adc
je
xchg
push
sub
adc
adc
div
mov
icebp
or
and
cmp
mov
adc
stos
cld
and
push
enter
sbb
or
cmp
add
add
bound
sub
mov
aad
adc
mov
xchg
jmp
imul
xchg
or
(bad)
adc
mov
mov
inc
sub
mov
add
xor
sahf
test
out
lods
imul
jmp
lds
fwait
push
hlt
popa
sub
cmp
push
movs
shl
jb
imul
xlat
arpl
or
pop
sub
pop
popa
pop
adc
popf
dec
xchg
stc
cmp
and
stos
cmps
xor
addr16
jnp
inc
push
repz
sub
inc
inc
icebp
pop
sbb
pop
jl
mov
sbb
sub
lahf
fbld
and
mov
push
mov
rcr
adc
xor
imul
or
adc
je
mov
jle
mov
sub
sub
xchg
xchg
cli
daa
ja
outs
push
mov
ret
rcl
cmps
fdivr
push
mov
adc
mov
add
mov
ret
pop
pop
sbb
imul
and
sti
xchg
xchg
fisubr
popf
jge
mul
pop
xor
mov
fldenv
xchg
or
sub
idiv
ror
xor
add
mov
cmp
std
rol
gs
pop
daa
cmp
mov
pusha
xor
cmp
push
mov
lock
(bad)
je
ja
or
sbb
and
mov
jmp
sbb
or
sbb
clc
jmp
jge
test
(bad)
jne
arpl
mov
jmp
add
pop
gs
aaa
sahf
mov
movs
push
in
in
ds
mov
call
and
(bad)
push
test
shl
mov
ret
pop
into
mov
lods
imul
fist
lds
fwait
push
call
jo
in
movs
shl
mov
adc
xor
shl
mov
iret
adc
add
mov
cmp
sub
xchg
sahf
cmp
mov
adc
int3
pop
jg
sbb
(bad)
jae
dec
push
mov
loopne
sbb
inc
cs
pusha
(bad)
stos
jae
les
cmp
push
jecxz
xchg
inc
rcl
pop
cmp
mov
int
mov
jne
mov
addr16
fcomp
ds
jmp
push
fwait
mov
test
cld
inc
pop
popa
pop
or
arpl
jp
push
enter
popf
pop
jbe
or
adc
xchg
sub
mov
enter
retf
jno
data16
add
mov
mov
adc
hlt
and
mov
loope
outs
cmp
and
add
jle
pop
loop
mov
push
push
xor
add
jno
pop
cmp
xor
sbb
mov
jle
sbb
xor
xchg
mov
lea
test
clc
or
cmp
lahf
jnp
mov
xchg
dec
mov
push
inc
das
test
xor
cmp
jg
popa
mov
mov
cs
pushf
cwde
and
mov
std
lahf
gs
outs
and
in
enter
fwait
or
push
sub
sbb
push
mov
fstp
jo
(bad)
sbb
loop
pushf
jae
test
xchg
popa
adc
or
pushf
sbb
sub
xchg
cdq
push
mov
in
das
cs
in
pop
jo
iret
(bad)
pop
adc
jnp
clc
push
mov
cmp
clc
cmp
mov
pop
adc
std
fdiv
push
jo
push
mov
jge
and
clc
je
imul
mov
test
clc
cmp
xchg
add
out
push
cmp
push
into
sbb
clc
add
inc
ja
call
sub
(bad)
dec
test
cld
push
and
ins
xchg
add
jbe
pop
xor
sub
cmc
add
out
xor
cmp
(bad)
mul
mov
sub
sub
jne
push
pop
adc
xor
push
movs
pushf
push
loop
pop
adc
push
inc
pusha
push
add
pop
xor
(bad)
loop
xchg
push
mov
xor
lds
pop
sub
or
or
shl
hlt
inc
das
sub
out
jnp
xor
std
cmp
push
or
mov
pop
out
movs
shr
push
(bad)
mov
inc
fsubr
jmp
and
jo
dec
xor
mov
or
sbb
jb
enter
iret
ror
jne
sub
inc
lea
fcom
jge
push
mov
fwait
jmp
jae
in
adc
jbe
or
mov
add
mov
call
mov
push
mov
(bad)
or
jmp
xor
mov
lods
sub
outs
pop
pop
adc
hlt
cmp
pushf
xchg
push
aam
sbb
add
add
sbb
jmp
pop
jl
sbb
ins
lods
xor
sti
pusha
xchg
aaa
js
in
mov
jg
movs
cmp
add
dec
into
ins
es
sub
sub
add
enter
cmp
icebp
or
and
call
mov
jns
add
cwde
push
dec
push
push
ret
lods
mov
mov
adc
sub
sbb
scas
jmp
enter
mov
mov
movs
adc
scas
icebp
cmp
(bad)
mov
pop
cmp
daa
stos
jge
dec
inc
js
jle
cli
adc
stos
loopne
xchg
xchg
sbb
lds
adc
stos
mov
arpl
ror
iret
sahf
loopne
sub
mov
add
sub
pop
cmp
js
fcom
(bad)
fstp
arpl
mov
popf
mov
jo
stc
sub
popa
test
mov
loope
inc
hlt
cmps
ret
scas
cwde
jmp
xchg
icebp
retf
jp
lods
inc
xchg
jl
lea
loopne
rol
inc
pop
or
dec
dec
fidivr
sub
mov
cmp
ins
xor
cmp
movs
mov
ins
je
and
mov
dec
ficomp
fsubr
bound
sub
sub
jae
sti
nop
sub
jmp
retf
mov
fs
scas
xchg
inc
retf
cmps
mov
dec
xlat
and
aam
pop
das
cmp
mov
fild
daa
fld
jbe
cmp
pop
jge
cmp
mov
push
sbb
stc
mov
retf
push
xchg
push
mov
push
jo
shr
add
pop
xchg
mov
sub
sub
add
mov
and
rsqrtps
(bad)
in
inc
and
call
mov
xchg
int3
dec
test
ror
sbb
fs
stos
push
ficomp
cs
fwait
adc
ds
adc
imul
sbb
mov
adc
inc
bound
out
sub
mov
(bad)
into
data16
sbb
repnz
(bad)
cmps
cs
pop
xchg
adc
inc
push
(bad)
mov
sub
dec
inc
imul
pop
add
sub
jbe
xchg
sbb
dec
xchg
add
movs
(bad)
mov
neg
ficomp
clc
ja
and
sub
jnp
mov
or
push
sub
push
(bad)
mov
jo
inc
bound
push
pop
bnd
dec
jbe
jg
and
sbb
xor
sti
sub
push
mov
hlt
xchg
popf
test
add
cdq
fisub
cmc
xor
je
out
hlt
iret
mov
xchg
dec
pop
cmp
mov
jmp
push
add
pop
test
adc
std
loope
sub
add
outs
fisttp
jg
in
push
pop
push
pop
inc
sti
or
add
mov
cmp
daa
mov
cmp
enter
mov
lahf
mov
ret
cmp
fwait
int3
enter
xor
jecxz
jb
pop
jg
ins
repz
aam
jae
jle
jg
out
jmp
fcmovnb
bnd
addr16
aaa
pop
das
rcr
aad
xor
dec
jecxz
cmps
sub
fdivr
and
inc
pop
je
jl
mov
and
sahf
pushf
imul
ja
dec
xchg
cmps
xchg
ss
fisttp
jge
loopne
test
jmp
ret
pop
jmp
ror
dec
push
sbb
into
jp
mov
cmp
lods
push
xlat
xchg
retf
add
push
mov
imul
daa
xchg
mov
clc
xlat
(bad)
int
xchg
jb
loop
mov
scas
push
and
cmp
into
push
jmp
inc
add
imul
pop
or
fs
cmp
fwait
pop
and
call
and
mov
xor
out
mov
cmp
pop
mov
or
xchg
jmp
aaa
push
aaa
aam
dec
mov
adc
stos
lock
ret
mov
jle
stos
push
mov
in
mov
or
cld
les
aaa
int3
cwde
cmp
aas
sub
aad
int3
repnz
cmps
fwait
pushf
push
out
push
push
test
pop
jl
xor
push
adc
inc
cmp
mov
into
inc
push
xlat
xchg
fcom
and
mov
mov
imul
scas
mul
dec
dec
xchg
xchg
push
pop
leave
mov
sti
or
mov
mov
mov
jbe
test
ret
xchg
scas
push
shr
test
bound
loop
stos
xchg
(bad)
std
pop
ins
sub
xchg
push
mov
hlt
(bad)
pop
les
pop
pop
nop
add
lds
mov
imul
mov
(bad)
jmp
sti
aad
in
ins
mov
scas
rcl
cmp
ins
scas
pop
in
mov
mov
addr16
inc
imul
or
call
ja
push
jo
push
shl
jbe
js
push
push
inc
fwait
out
ja
jg
hlt
stos
js
stos
outs
cmp
fs
mov
inc
mov
fst
xchg
cmps
push
pop
add
iret
popa
jg
and
cmp
mov
fs
inc
mov
cli
repz
mov
add
repz
xor
or
stos
(bad)
in
dec
inc
or
lea
les
shl
pop
stos
call
rol
pushf
mov
es
das
icebp
dec
aas
sbb
std
stos
mov
mov
add
outs
out
mov
mov
cmps
sbb
mov
xor
jle
jnp
cdq
stc
push
add
dec
add
push
or
shr
out
shl
int3
xchg
jmp
cwde
inc
mov
push
daa
sub
and
ds
int
jo
or
sbb
mov
or
xchg
inc
cmp
(bad)
mov
inc
pop
xchg
xor
gs
leave
fiadd
push
push
mov
xor
mov
or
push
xor
aad
push
mov
push
mov
jb
scas
jp
xchg
scas
pop
jns
sub
aas
sbb
xor
ss
out
scas
gs
adc
cwde
mov
mov
shr
arpl
scas
cmp
inc
jo
xchg
mov
sbb
addr16
sub
xor
out
stc
push
fnstsw
adc
fadd
add
das
leave
and
retfw
xor
jp
lds
jne
and
data16
sub
adc
inc
bound
lfs
inc
pop
add
push
inc
mov
nop
inc
mov
shr
sub
push
jne
sub
sub
(bad)
mov
mov
out
jmp
fisub
repnz
mov
adc
cmp
das
dec
mov
adc
add
loop
aaa
retf
cmps
jecxz
mov
cli
jmp
sti
addr16
iret
lods
inc
mov
or
jbe
add
sti
scas
cmp
pop
jo
ds
out
ret
lods
and
cdq
cdq
popf
(bad)
loope
das
push
jl
ja
test
inc
fcomp
cmp
dec
mov
leave
dec
retf
ins
mov
xchg
mov
jns
cmp
jl
jecxz
dec
int3
dec
or
mov
xor
scas
cwde
pushf
cs
in
dec
cmp
stc
jmp
dec
mov
sub
retf
mov
dec
jno
or
xchg
movs
mov
mov
ffreep
mov
xchg
or
jmp
call
repz
in
div
adc
mov
icebp
push
repz
in
jecxz
cs
ret
retf
dec
xchg
xor
or
add
xchg
stc
mov
cmps
inc
scas
cmps
mov
jnp
call
pop
pop
ds
jbe
sti
ins
push
add
add
adc
lds
movs
push
jl
pop
les
jae
push
xchg
or
jp
jne
add
or
ss
je
iret
dec
jg
int3
xor
fdivr
(bad)
popf
retfw
jno
mov
cmp
sub
imul
xor
mov
xchg
dec
ret
mov
ja
mov
mov
cmp
daa
(bad)
cs
add
or
retf
sbb
sbb
lds
inc
shl
cmps
das
lods
mov
pushf
xchg
push
jge
mov
pop
sub
aas
ss
cmp
or
in
rol
mov
stc
call
outs
stos
in
retf
sti
scas
add
push
dec
fisttp
adc
mov
retf
fisttp
dec
es
cs
xchg
mov
mov
mov
loop
or
add
loope
rol
pusha
mov
inc
add
cld
dec
ss
cli
xchg
test
inc
pop
push
sub
aas
ret
jmp
xlat
push
daa
adc
jmp
pop
pop
aas
pop
mov
xchg
sub
cmp
and
retf
das
push
sti
mov
ss
xor
repz
jp
stc
mov
pop
mov
repz
mov
shl
sbb
cmp
out
sub
adc
inc
cmp
test
or
repnz
jecxz
cs
repnz
(bad)
mov
sub
mov
sbb
xchg
sub
stc
mov
sar
sub
push
mov
rol
jo
ss
(bad)
mov
lods
into
lahf
aas
pop
dec
(bad)
outs
mov
jae
aad
sbb
fld
push
fs
fmul
or
ret
or
hlt
xchg
inc
fld
mov
cmp
scas
sbb
cmps
mov
pop
aas
pop
ins
icebp
mov
nop
jl
adc
dec
(bad)
sbb
sbb
hlt
cmp
icebp
stos
mov
mov
dec
mov
cmp
unpckhps
data16
hlt
fidivr
inc
cmp
inc
cld
adc
gs
test
add
xchg
jp
xor
hlt
sbb
repnz
add
fdivr
mov
adc
pop
inc
(bad)
jle
(bad)
stc
mov
ins
mov
mov
js
adc
xor
dec
iret
aas
lods
push
out
cmps
inc
cs
mov
loopne
ss
mov
into
(bad)
lahf
fsubr
pop
pop
ficomp
scas
mov
pop
add
pop
shr
(bad)
in
imul
xor
xor
jne
mov
addr16
sar
xor
mov
loopne
push
xlat
jmp
jle
je
mov
fwait
in
and
jecxz
test
push
clc
or
adc
pop
add
pop
stc
dec
push
call
push
nop
push
call
pop
imul
imul
xor
repz
aad
jmp
add
xchg
lahf
aas
int3
imul
js
fcmovbe
cwde
mov
and
stos
fbstp
xlat
cwde
jns
cmp
add
je
inc
xor
stos
or
dec
sub
cmp
daa
int3
fcom
shr
jl
sahf
or
or
jns
jo
movs
mul
les
into
and
xor
lods
ins
mov
mov
cmp
pop
cmp
int3
and
adc
jmp
into
jno
sub
aaa
jo
dec
test
or
xor
add
fs
ret
sub
aam
pusha
gs
cmp
data16
push
jae
data16
bound
pop
inc
leave
jbe
push
dec
xchg
push
and
std
jecxz
add
jo
adc
test
jns
jmp
leave
pop
sar
dec
push
dec
es
mov
dec
xchg
stos
mov
repnz
out
lods
shr
fnstenv
in
xchg
sbb
pop
cmps
shl
push
mov
in
cli
clc
or
mov
jns
inc
fld
ret
xor
arpl
and
mov
(bad)
pop
mov
dec
adc
popa
sbb
and
out
pop
pop
stc
jae
cdq
lds
cmps
nop
mov
mov
scas
test
nop
add
jle
sub
mov
jp
push
xor
imul
mov
and
adc
outs
mov
mov
out
push
imul
and
idiv
rcl
add
pop
call
cld
stc
mov
jns
xor
ins
iret
into
loopne
push
jo
push
cld
pop
mov
push
cmc
push
mov
jecxz
inc
sub
sub
std
cwde
mov
add
jp
sbb
cwde
leave
push
ins
mov
or
into
or
and
xor
inc
sahf
mov
enter
add
inc
lock
shl
sub
pop
push
retf
pushf
nop
mov
pop
aas
xchg
cmp
shl
xchg
jmp
cld
jae
ret
adc
mov
data16
xchg
cli
mov
scas
push
xchg
je
sub
aaa
jno
cmp
sub
adc
jbe
mov
ror
pusha
xor
jmp
add
jp
loop
sub
push
mov
retf
xor
dec
ret
stc
mul
and
jmp
sbb
bound
movs
aaa
cmp
mov
dec
xchg
mov
cmps
ins
ror
pusha
retf
ins
add
movs
popa
lods
div
sbb
mov
pop
lahf
cmp
jo
lods
or
dec
mov
sahf
mov
mov
cmps
jg
les
ins
mov
stc
outs
out
aaa
ja
sbb
cmp
arpl
fsqrt
inc
repnz
js
add
popa
mov
inc
hlt
inc
(bad)
mov
sbb
add
ins
and
sub
and
adc
jb
jge
imul
dec
cdq
gs
mov
aaa
jge
test
lds
sbb
pushf
xchg
mov
addr16
js
push
(bad)
xor
(bad)
leave
gs
cmps
out
pusha
mov
push
repz
push
ret
xchg
es
cmps
mov
mov
in
xchg
(bad)
dec
lods
loopne
inc
jl
xchg
mov
pop
inc
das
sub
int
test
rcl
mov
(bad)
dec
aad
cmp
gs
outs
inc
nop
pop
xchg
cmp
ror
xor
mov
and
jmp
call
mov
sahf
bound
mov
aas
out
dec
cmps
xor
arpl
cwde
sub
stc
jne
iret
pop
cmp
repz
dec
rol
stos
or
xchg
mov
and
ss
scas
jecxz
pop
loopne
add
jle
push
out
mov
mov
cmp
push
xlat
jne
xor
xlat
sub
je
pushf
sahf
lds
adc
jmp
sbb
stos
push
xor
mov
retf
inc
cwde
(bad)
cmp
adc
mov
pop
jae
dec
push
and
xor
es
cdq
mov
push
cmp
outs
ret
or
outs
inc
leave
push
cmovge
mov
pop
mov
ret
sar
cwde
cdq
lods
movs
shl
jmp
adc
add
out
dec
aad
(bad)
hlt
in
sbb
(bad)
push
push
mov
out
movs
sbb
jne
adc
leave
jbe
ins
sub
mov
adc
imul
pop
test
pop
adc
mov
or
and
xor
push
mov
xor
mov
fidivr
dec
cmp
(bad)
in
shr
sbb
xchg
adc
add
lahf
jne
push
xor
and
loop
sub
jno
inc
sub
and
add
add
ja
cdq
ins
xchg
test
pop
pop
dec
fwait
dec
and
jbe
outs
inc
idiv
inc
lock
cwde
mov
xchg
mov
mov
fs
and
imul
jne
push
pop
jle
pop
mov
xor
test
inc
cmps
fdivr
xor
int
stc
jne
jp
mov
add
je
dec
bound
mov
dec
cld
push
inc
into
xchg
(bad)
or
test
rol
ds
repz
out
outs
sbb
scas
or
or
clc
sbb
fisttp
jp
retf
add
xor
jae
(bad)
add
mov
jmp
mov
(bad)
lods
xchg
add
push
and
fsub
leave
lods
adc
cwde
pusha
dec
xchg
push
or
add
jge
pop
inc
pop
push
cmps
inc
pop
or
add
into
mov
sahf
cld
and
xchg
mov
stos
loopne
push
aas
add
and
mov
out
push
pop
and
call
in
jb
inc
sbb
cs
push
mov
(bad)
fwait
or
jmp
iret
push
jns
push
loopne
(bad)
xchg
clc
jmp
xchg
mov
pop
retf
(bad)
fld
js
push
fisttp
pop
jp
fidiv
push
or
sbb
aam
inc
mov
ins
out
ds
(bad)
pop
cwde
cs
pmuludq
(bad)
xchg
std
leave
imul
aas
adc
mov
push
inc
in
jecxz
outs
xlat
pushf
ror
and
pop
jecxz
inc
pop
jl
popa
or
xor
mov
pop
sbb
std
addr16
sar
or
gs
into
pop
and
mul
dec
dec
pop
cmps
mov
arpl
cwde
mov
stc
jne
push
shl
mov
or
mov
cwde
stos
lods
in
mov
or
imul
clc
add
call
xor
sbb
push
stos
xor
test
sbb
cdq
dec
mov
scas
xor
xchg
pop
xchg
stc
outs
stos
in
retf
repz
mov
sti
add
jmp
dec
jo
mov
dec
into
aas
lods
leave
loope
pop
mov
dec
or
ja
push
adc
mov
mov
fs
push
xchg
push
mov
inc
pop
mov
xchg
(bad)
(bad)
dec
cmp
mov
pop
lea
fsub
(bad)
xchg
scas
push
mov
mov
test
ins
in
fisttp
sub
ds
test
cdq
data16
ins
daa
adc
std
ins
aad
inc
mov
mov
pop
mov
adc
add
add
push
aad
or
loop
jg
cmp
out
in
bound
pop
push
sbb
mov
je
and
add
(bad)
lahf
ins
cmp
add
mov
xchg
push
out
adc
scas
push
in
push
pop
int
(bad)
push
popa
jbe
and
pusha
pop
cmp
or
mov
daa
gs
sub
add
push
adc
push
and
mov
fs
push
ins
mov
dec
lea
or
jge
dec
int3
dec
test
fxch
jne
mov
addr16
sub
call
call
and
in
sbb
iret
cs
and
jo
jno
mov
movs
mov
add
repz
xchg
fimul
out
pop
call
out
jecxz
pop
adc
test
add
mov
icebp
push
mov
arpl
sub
es
cmc
shl
mov
(bad)
pop
sub
or
pop
adc
sbb
stc
cmp
mov
xlat
sub
sti
jnp
xor
jo
sar
or
jle
and
cdq
mov
mov
jl
ja
add
inc
fcomp
push
and
mov
fs
push
ins
mov
dec
lea
or
jge
dec
int3
dec
test
fxch
jne
mov
addr16
sub
call
call
and
in
sbb
iret
cs
and
jo
jno
mov
movs
mov
add
repz
xchg
fimul
out
pop
call
out
jecxz
pop
adc
test
add
mov
icebp
push
mov
arpl
sub
es
cmc
shl
mov
(bad)
pop
sub
or
pop
adc
sbb
stc
cmp
mov
xlat
sub
sti
jnp
xor
jo
sar
or
jle
and
cdq
mov
mov
jl
ja
add
inc
fcomp
push
and
mov
fs
push
ins
mov
dec
lea
or
jge
dec
int3
dec
test
fxch
jne
mov
addr16
sub
call
call
and
call
stos
jb
mov
xchg
sbb
xor
vpmulhuw
or
repz
jns
cdq
mov
push
nop
mov
inc
mov
lds
push
xchg
sub
nop
jmp
push
fdiv
adc
add
xchg
mov
push
inc
pop
sub
jae
pop
push
jle
test
popa
mov
push
push
mov
fisub
fwait
push
fst
mov
lahf
call
dec
and
test
mov
ins
mov
dec
lea
or
jge
dec
int3
dec
test
fxch
jne
mov
addr16
sub
call
call
and
in
sbb
push
or
dec
jo
dec
shr
pop
imul
adc
and
nop
sbb
or
out
pop
call
out
jecxz
pop
adc
test
add
mov
icebp
push
mov
arpl
sub
es
cmc
shl
mov
(bad)
pop
sub
or
pop
adc
sbb
stc
cmp
mov
xlat
sub
sti
jnp
xor
jo
sar
or
jle
and
cdq
mov
mov
jl
ja
add
inc
fcomp
push
and
mov
fs
push
ins
mov
dec
lea
or
jge
dec
int3
dec
test
fxch
jne
mov
addr16
sub
call
call
and
in
sbb
iret
cs
and
jo
jno
mov
movs
mov
add
repz
xchg
fimul
out
pop
call
out
jecxz
pop
adc
test
add
mov
icebp
push
mov
push
int3
pop
sbb
aas
test
gs
ss
mov
punpcklwd
jmp
or
cmps
pop
mov
xchg
mov
push
and
mov
mov
stos
xchg
inc
leave
movs
pushf
fnstenv
addr16
xor
jo
push
pop
xchg
pop
add
cmp
mov
jnp
bound
xlat
xchg
or
test
xor
push
aaa
cld
iret
adc
dec
sbb
stos
and
push
xor
repnz
fsubp
int3
fcom
inc
dec
rcr
sbb
pop
mov
adc
xchg
mov
jno
loop
sti
xlat
lds
scas
out
cmps
xchg
mov
lahf
lahf
leave
sbb
ds
mov
scas
loop
pop
out
xchg
mov
jle
mov
icebp
outs
(bad)
or
rcl
daa
cli
test
sar
ud0
inc
pop
cdq
rcr
ss
loopne
push
xor
(bad)
jp
test
inc
mov
adc
rcr
sbb
enter
xlat
xor
mov
aad
jl
push
repz
and
add
loop
mov
add
and
jns
in
clc
in
push
lahf
xor
sub
(bad)
jb
call
inc
ret
aam
call
pop
rsm
mov
call
in
mov
shl
rol
mov
arpl
inc
repz
ftst
data16
mov
in
mov
jmp
fcom
repnz
mov
gs
int3
mov
push
sar
pop
lea
es
popf
mov
jbe
push
push
outs
jb
push
pop
xchg
shl
sbb
pop
js
pop
mov
mov
adc
jle
inc
test
mov
into
daa
sysret
ja
arpl
movs
sbb
or
cmc
aaa
mov
pop
leave
xor
sar
sub
or
aad
xchg
and
mov
add
sbb
mov
push
or
(bad)
js
jne
je
movs
sbb
push
cmc
sti
sub
pop
test
ins
jmp
es
aad
(bad)
into
xlat
jo
sbb
retf
les
idiv
jns
test
imul
pushf
xchg
lods
jno
jmp
add
sub
jecxz
xchg
dec
cs
dec
test
je
push
popa
in
scas
adc
sbb
sub
call
push
movs
dec
test
sbb
mov
mov
adc
jg
ret
adc
test
mov
dec
dec
inc
cmps
xor
sub
xchg
mov
sbb
hlt
xor
jg
xchg
fimul
sub
and
scas
jne
int
xor
push
pop
(bad)
mov
mov
mov
sbb
pushf
mov
jl
lea
pop
cmps
addr16
dec
cmp
(bad)
test
adc
mov
std
(bad)
aam
ja
dec
mov
jmp
cmps
in
ins
lahf
(bad)
pop
call
(bad)
sub
out
fwait
gs
ror
sbb
mov
es
push
shl
pop
xchg
dec
inc
es
call
dec
pop
popa
in
stos
scas
adc
sbb
outs
xchg
xchg
push
sahf
shl
pop
adc
or
adc
addr16
(bad)
jle
inc
arpl
(bad)
and
adc
pop
icebp
add
mov
jns
jp
aaa
mov
fs
cmp
xchg
or
mov
xor
push
inc
jmp
push
or
jmp
rcr
pop
cmc
in
stos
xchg
in
js
pop
mov
ret
aaa
dec
(bad)
enter
and
xlat
jmp
mov
nop
mov
test
in
xchg
pop
mov
hlt
loope
jmp
jecxz
sub
sbb
jae
add
mov
es
arpl
xchg
fwait
jmp
cli
mov
js
jne
sti
xchg
pop
std
mov
(bad)
push
mov
test
push
popa
mov
(bad)
or
ror
push
or
ret
xor
mov
(bad)
xor
push
add
jbe
sub
outs
push
fld
fdiv
or
cmp
ret
jecxz
ins
(bad)
aam
out
cmp
add
fldenv
ss
or
dec
sub
mov
aam
hlt
jne
movs
push
xor
loop
int3
loopne
mov
sbb
jne
iret
sbb
mov
cmp
icebp
iret
enter
dec
mov
out
lahf
ret
neg
jns
sahf
ret
das
call
out
and
jae
adc
movs
fbld
sti
mov
adc
cmc
mov
outs
sub
push
push
outs
jp
sti
xchg
cmp
(bad)
das
fadd
dec
mov
lea
popa
inc
add
dec
(bad)
sbb
or
popa
jmp
and
push
add
jo
ds
sbb
sbb
out
mov
gs
or
sub
arpl
enter
or
or
mov
sbb
in
ror
push
pop
iret
mov
lds
loopne
or
or
push
call
and
adc
push
scas
jl
mov
ret
(bad)
mov
jb
xor
movs
fsubr
jne
pop
mov
in
lods
clc
mov
imul
adc
pop
loope
test
jae
adc
mov
das
cli
xchg
push
xlat
repnz
fwait
mov
jle
inc
(bad)
sti
mov
dec
sub
stc
pop
mov
and
ret
sbb
add
push
aad
pop
fisub
mov
clc
int3
jo
rol
jmp
and
jmp
call
or
(bad)
ds
gs
ficom
sub
mov
or
les
es
add
daa
pop
iret
mov
fld
div
ror
xor
loope
fmul
adc
in
sub
add
inc
ffreep
shl
xor
inc
lock
repz
repz
ficomp
jmp
lock
or
mov
add
shl
xlat
repnz
xchg
movs
xchg
out
retf
add
add
sbb
mov
jg
add
ds
pop
(bad)
mov
mov
mov
add
mov
(bad)
pusha
aaa
mov
cmc
ret
inc
aad
mov
xor
jbe
sub
jecxz
scas
push
add
sub
aad
sub
mov
xchg
sub
es
adc
jb
out
aam
or
es
xor
es
pushf
pop
pop
aas
imul
xchg
int3
call
cwde
outs
dec
in
aas
aam
pop
aas
inc
fst
ffree
rcl
cs
ret
ret
sti
inc
mov
mov
popa
or
test
out
mov
test
retf
and
mov
cmp
fwait
repz
fdivr
mov
jl
outs
mov
xchg
pop
sbb
cmp
pop
adc
push
sbb
clc
cmp
cmps
xor
sub
mov
test
push
and
fidivr
fisttp
icebp
jbe
test
mul
jbe
and
fisttp
mov
outs
ret
movs
cmp
and
jns
lock
xchg
rcl
dec
ror
test
adc
in
mov
scas
fcom
or
divps
(bad)
fadd
adc
xor
and
push
sub
enter
(bad)
jns
mov
mov
mov
test
lea
loope
fcmovne
dec
push
and
out
cmp
fiadd
jmp
inc
inc
dec
xchg
mov
jae
pop
or
ja
cmp
cmp
mov
fbld
jns
sahf
or
rcl
jmp
lods
jb
(bad)
in
xor
scas
mov
adc
add
es
mov
test
cmp
sar
ds
xchg
jmp
loopne
sub
adc
fst
or
dec
gs
mov
lds
jns
aad
sbb
out
test
test
test
sub
mov
les
ret
int
retf
adc
cmp
shl
in
ja
pop
mov
xchg
cdq
jg
fsubr
sub
repz
lods
xchg
mov
push
neg
or
test
(bad)
sti
push
sahf
pop
dec
gs
fwait
cmps
xchg
repz
push
push
jbe
bound
adc
pushf
push
lods
enter
inc
movs
js
nop
push
xchg
xor
sbb
loopne
aam
aaa
not
retf
std
in
sub
mov
(bad)
push
cmp
add
ins
dec
and
cmc
xor
mov
add
cmp
(bad)
cli
cmp
pop
(bad)
cmc
out
xchg
rcl
push
in
add
fld
adc
fst
mov
aad
retf
rol
xor
out
lods
retf
(bad)
bound
add
push
push
xlat
rol
int
pop
sub
push
mov
loopne
sar
mov
repz
jge
mov
out
test
scas
ror
pop
mov
xchg
hlt
mov
shl
int
ret
daa
out
adc
pop
imul
xchg
xchg
stc
mov
ins
cld
mov
sub
or
imul
into
add
enter
xchg
xchg
or
mov
shl
cmp
les
(bad)
mov
push
add
jbe
or
sbb
hlt
aaa
test
cmp
aad
or
addr16
aad
in
nop
sub
test
stos
mov
imul
or
jnp
mov
lds
je
ror
pop
push
jmp
cwde
jmp
(bad)
xor
adc
mov
jo
jno
mov
movs
mov
add
repz
xchg
fimul
out
pop
call
out
jecxz
pop
adc
test
add
mov
icebp
push
mov
arpl
sub
es
cmc
shl
mov
(bad)
pop
sub
or
pop
adc
sbb
stc
cmp
mov
xlat
sub
sti
or
adc
jecxz
mov
sbb
sbb
addr16
(bad)
daa
xlat
nop
mov
cmp
and
push
pop
push
popf
dec
lock
stos
adc
aam
(bad)
out
sar
out
lea
sub
fpatan
cmp
or
mov
cmp
imul
retf
pop
nop
cmp
iret
cs
cmp
add
adc
inc
xchg
movs
mov
pop
xchg
sub
mov
nop
mov
fwait
call
loopne
fist
mov
out
jecxz
jle
call
test
and
mov
cwde
xor
xchg
(bad)
jmp
scas
add
cmc
sar
pop
dec
or
add
js
push
es
push
sahf
iret
sub
sub
sti
jnp
pop
push
jo
xchg
push
fnclex
adc
sub
retf
push
jmp
inc
movs
shr
jl
cmp
and
mov
hlt
pop
(bad)
xor
leave
push
das
fcomip
daa
loop
sub
aam
test
xchg
pop
loope
cmp
ror
or
imul
jmp
aaa
dec
jmp
cdq
and
in
sub
mov
rcr
ror
cmp
add
fisubr
add
repz
(bad)
mov
or
scas
loope
pop
mov
adc
or
in
add
les
and
in
xchg
pop
js
dec
xchg
outs
pop
pop
(bad)
cli
mov
cmp
jnp
push
push
cdq
fbstp
frstor
xchg
or
mov
in
dec
cwde
cmp
mov
and
cdq
mov
les
arpl
mov
push
adc
cmp
xor
cmp
data16
neg
clc
rol
sub
sub
lods
cmps
adc
sub
aad
add
scas
mov
jae
jo
sar
push
jmp
stos
(bad)
sbb
mov
push
push
xlat
rol
int
pop
sub
out
adc
xlat
(bad)
idiv
scas
clc
call
leave
and
test
sti
pop
adc
or
or
fld
cmp
mov
add
dec
sahf
pop
push
jb
sahf
mov
fstp
push
push
pop
sub
jp
fnstenv
adc
in
mov
pop
push
inc
mov
(bad)
ins
and
inc
lea
daa
mov
dec
in
mov
and
push
xor
popa
dec
and
out
cmp
in
inc
mov
ja
pop
add
aam
test
mov
push
sbb
pop
dec
cmp
or
int
jl
outs
mov
sub
les
push
mov
imul
jecxz
sar
ror
pop
and
jb
ss
repz
(bad)
int3
int
lods
loop
arpl
xor
mov
mov
lea
icebp
or
xchg
inc
or
push
sti
setle
or
aad
xchg
in
mov
pop
pop
outs
in
xchg
inc
dec
inc
xor
push
leave
pop
fucomp
sub
ret
pop
mov
aad
sbb
imul
fabs
or
addr16
xor
dec
outs
in
retf
mov
sbb
cmp
imul
lods
jo
and
lahf
jb
add
test
xor
xchg
fnsave
cld
jns
dec
fs
inc
sbb
jg
sahf
jmp
xchg
pop
push
sbb
iret
mov
ja
sbb
aad
push
and
iret
fistp
dec
sbb
sub
enter
test
mov
mov
jmp
int3
pop
cwde
xor
fidivr
(bad)
int
add
ror
fsub
pop
mov
jge
pop
and
aam
ret
adc
add
ja
sbb
test
fcmovbe
xor
inc
jae
daa
mov
xchg
ret
push
jno
in
lds
retf
mov
repnz
and
push
xor
dec
ja
push
lock
stos
inc
pop
idiv
push
xchg
push
or
arpl
aam
retf
lea
and
xor
and
(bad)
jb
out
adc
inc
pop
retf
test
jae
dec
cmp
sbb
pop
fsubp
call
or
xchg
inc
clc
mov
leave
iret
aad
adc
adc
int3
and
test
jmp
mov
mov
test
int
cmp
mov
scas
stc
fcom
movs
xchg
dec
pop
out
lahf
adc
sbb
add
and
test
sub
pop
xchg
mov
pop
push
jne
mov
adc
jp
ins
sbb
aad
jne
test
xchg
call
xchg
dec
mov
fadd
(bad)
sbb
xor
pop
adc
add
addr16
sbb
lock
xor
ret
loop
jg
fimul
and
sbb
into
push
push
out
or
dec
dec
retf
stos
adc
push
int3
push
cmp
fild
xor
inc
mov
or
test
pop
outs
in
xchg
mov
out
xchg
jge
cdq
enter
sahf
inc
mov
sbb
mov
cwde
ret
(bad)
outs
test
ret
movs
or
sbb
retf
and
mov
aas
hlt
xor
ror
nop
dec
dec
dec
ins
mov
cmps
into
xchg
test
push
dec
fadd
pop
imul
aad
int3
mov
mov
adc
in
sbb
cs
daa
jecxz
mov
add
scas
jne
push
sbb
add
or
and
leave
popf
fbld
and
and
jle
push
and
call
out
js
pop
retf
push
cmp
sti
stc
sti
clc
(bad)
fwait
sahf
push
push
push
xor
fcomp
jmp
stos
jne
hlt
ret
out
neg
scas
loope
mov
mov
sti
xchg
xchg
xor
loopne
(bad)
jmp
sub
in
hlt
cmp
mov
nop
mov
inc
push
ins
cli
sar
punpcklwd
imul
fsub
ret
xchg
jl
cmps
cmp
sbb
fimul
test
loopne
adc
adc
fwait
jo
or
jmp
call
and
test
lea
std
aam
add
add
or
xor
stos
xor
push
adc
pusha
inc
sar
cmp
ss
push
sbb
mov
cli
inc
cmps
push
in
or
mov
ror
push
push
pusha
(bad)
xor
inc
dec
scas
enter
jmp
sbb
ficomp
movs
popf
dec
adc
add
sbb
retf
aaa
int3
mov
and
test
mov
pop
push
pop
cdq
mov
arpl
ins
cld
mov
adc
xor
lea
(bad)
pusha
inc
inc
mov
popf
jb
sbb
mov
mov
das
fdivr
enter
jl
(bad)
adc
test
push
add
push
cmp
or
sbb
cmp
int
xchg
loop
adc
mov
sbb
clc
sbb
in
cmp
fidivr
jbe
xlat
inc
es
test
dec
add
sbb
enter
jle
iret
(bad)
sbb
sbb
enter
hlt
pop
lods
cmps
cld
xchg
lahf
shl
add
jmp
popf
xchg
aas
jmp
(bad)
fldenv
sub
xchg
mov
xchg
inc
jno
push
xchg
mov
jl
push
je
js
je
out
outs
cwde
xlat
das
fcmovb
adc
cdq
inc
pusha
adc
call
mov
aaa
leave
or
push
es
xor
sar
mov
sbb
or
or
sub
leave
push
or
jmp
dec
mov
int3
push
loopne
aaa
mov
pop
inc
vunpcklpd
pop
jnp
stos
arpl
jae
pop
push
(bad)
push
pop
jae
clc
(bad)
mov
push
lds
pop
sar
ffreep
retf
push
sbb
faddp
ret
ror
jmp
jecxz
mov
cwde
jmp
or
loopne
pop
iret
mov
imul
add
sbb
lds
xor
pusha
inc
dec
pushf
mov
jmp
test
ror
sub
(bad)
sub
rcr
push
xchg
sti
daa
mov
movs
ins
(bad)
loopne
shr
add
sbb
push
imul
mov
push
push
sbb
sub
loop
fwait
je
in
cmp
lods
pop
jns
aam
mov
sub
adc
adc
in
loopne
adc
retf
lods
inc
shr
ja
test
into
mov
sbb
movs
xor
fwait
jle
popa
ror
int3
iret
int
add
outs
in
ror
cld
je
pop
add
add
ret
scas
sahf
rol
mov
int3
or
lock
or
add
mov
cmps
(bad)
cmp
lods
push
(bad)
sti
setp
push
push
call
pop
push
jg
(bad)
in
adc
dec
sub
cld
adc
xchg
inc
adc
or
fisubr
int3
pop
fild
repnz
nop
call
and
jno
cs
pop
add
loop
mov
aam
and
cmp
imul
xchg
icebp
aad
fidiv
and
pop
dec
in
adc
dec
pop
(bad)
lods
jo
das
(bad)
jo
movs
and
dec
out
in
ror
cdq
mov
sbb
pop
in
je
mov
(bad)
fst
cmp
fidiv
loopne
fmulp
push
ret
test
test
mov
fstp
lea
fdiv
pop
fwait
sub
cmp
jne
adc
mov
sbb
test
jg
es
mov
out
movs
mov
dec
pop
pop
jmp
popa
sbb
nop
pop
xchg
stc
sub
les
jg
popf
jnp
adc
and
dec
adc
cs
outs
js
retf
sub
xor
or
push
inc
mov
sbb
xor
mov
push
ret
lahf
sbb
addr16
mov
and
stos
mov
inc
(bad)
adc
mov
je
cmc
or
iret
loopne
test
cmp
adc
mov
aam
std
cli
pop
sub
arpl
add
aam
fld
lods
cmps
cld
xchg
lahf
fbstp
fwait
add
xchg
jmp
pushf
jecxz
jo
hlt
fwait
add
or
(bad)
push
cmp
shl
not
aaa
scas
ja
dec
dec
nop
mov
arpl
arpl
mov
or
dec
or
inc
std
hlt
jp
pop
xchg
xchg
sbb
dec
test
repz
add
not
daa
xlat
sar
loop
jg
mov
add
xor
and
cmp
gs
leave
movs
aam
setg
mov
xchg
mov
imul
adc
fcom
jne
jle
(bad)
push
push
cld
dec
and
lods
(bad)
aad
jb
push
rol
ror
add
addr16
xor
retf
ret
in
add
dec
test
stc
pushf
mov
mov
lods
and
mov
ret
inc
out
mov
ins
and
ins
cmp
aam
mov
loope
pop
(bad)
push
rcl
dec
aas
test
cmps
arpl
cmps
mov
cs
jmp
pop
mov
add
add
rol
mov
mov
or
shl
jmp
lods
jb
call
xor
push
sbb
inc
sbb
loop
and
xor
ds
pop
std
iret
mov
mov
ds
adc
loopne
push
into
jb
iret
call
(bad)
fadd
jb
inc
add
pshufw
sti
clc
test
mov
jle
pop
mov
aaa
push
int
(bad)
rcr
jo
add
shl
lods
cmps
cld
xchg
lahf
aad
je
cdq
lock
leave
mov
mov
mov
cmp
push
fdiv
push
aad
loope
cmp
dec
pop
es
mov
jb
arpl
mov
js
jp
loope
push
(bad)
fiadd
enter
mov
sbb
add
js
call
or
jge
cld
shl
int3
scas
xchg
push
and
pavgb
add
fstp
stos
dec
jbe
sub
es
xchg
out
sub
jns
dec
pushf
mov
int3
outs
test
add
add
aad
pop
push
inc
inc
jmp
adc
or
jnp
loop
into
mov
jl
mov
push
mov
in
dec
and
(bad)
int3
mov
jno
xor
movs
out
fsub
pop
lods
test
mov
mov
call
popf
xchg
ss
or
iret
pusha
sbb
xchg
fld
out
cmp
ja
jb
mov
xchg
in
test
cld
mov
sbb
mov
fbstp
loopne
pop
mov
mov
add
mov
repz
jmp
ficom
not
movs
xchg
repz
xor
cmp
or
daa
xor
imul
mov
adc
mov
push
cmp
retf
push
adc
je
mov
ins
repz
shl
or
stos
mov
mov
sbb
pop
movs
fs
loop
std
icebp
cli
sbb
adc
(bad)
push
ror
in
jo
add
mov
mov
in
(bad)
fcomp
cmp
test
in
sub
out
adc
sbb
add
mov
daa
out
je
out
mov
jb
push
xchg
mov
arpl
arpl
mov
js
dec
aaa
repz
jmp
mov
mov
mov
lds
leave
sbb
jb
in
(bad)
sub
cmps
fwait
call
and
(bad)
je
sbb
jecxz
mov
add
adc
xlat
xchg
test
add
add
mov
and
retf
push
adc
sub
mov
popa
imul
sti
aad
cwde
cwde
jmp
jmp
mov
ret
cmps
pop
xor
iret
(bad)
enter
adc
cli
adc
dec
test
lds
cmp
stos
ror
mov
mov
hlt
lea
out
aas
leave
int3
imul
cld
adc
mov
pop
cmc
call
push
or
dec
jb
popa
sbb
fild
aad
mov
mov
add
sbb
or
fisttp
test
leave
sar
loop
jg
mov
cmps
push
stos
dec
imul
or
or
frstor
stc
dec
jg
xchg
xchg
in
lea
or
mul
or
enter
pop
retf
fadd
jb
inc
push
xlat
push
pop
push
out
(bad)
xchg
cwde
cwde
ins
push
adc
mov
fnstcw
aam
mov
push
fldcw
jno
jbe
test
mov
fimul
cmp
mov
mov
lds
xchg
and
push
(bad)
pop
sub
into
mov
cmp
in
lods
dec
pop
push
pop
xchg
push
jge
sub
push
pop
xor
pop
or
mov
(bad)
push
xlat
jo
mov
pop
jp
adc
mov
mov
fisub
(bad)
xor
or
pop
jecxz
or
fdivr
sbb
jno
dec
jo
sub
sti
fs
stos
in
or
sub
xor
and
retf
push
adc
sub
mov
js
ror
push
call
pushf
cdq
push
push
xor
pop
scas
xor
scas
pop
ds
(bad)
int3
rcr
pop
add
loope
aam
outs
into
inc
stos
mov
mov
lea
jmp
fstp
nop
jmp
jns
in
cmp
or
cli
dec
ds
mov
es
retf
and
lahf
movs
fmulp
xchg
pop
outs
bound
sub
ja
cmp
movs
push
into
push
mov
mov
inc
daa
cld
add
cmp
arpl
xchg
outs
xchg
icebp
test
inc
(bad)
xor
dec
daa
cmp
or
or
push
fnstenv
hlt
not
or
loopne
xor
inc
push
or
out
sub
inc
scas
sub
sub
shrd
popf
dec
add
sbb
sahf
cmps
inc
aas
and
iret
fcmovb
fild
xchg
loop
fcom
push
mov
lock
jge
lods
add
cmp
mov
jecxz
dec
js
or
add
int3
das
or
int
fnstcw
out
jp
sti
ud0
jne
mov
mov
pop
loopne
fild
fs
add
or
mov
call
push
mov
mov
cld
pop
pop
mul
jmp
ins
cld
jmp
shr
sub
addr16
push
mov
jge
adc
xor
or
jnp
dec
jle
rcr
sub
or
jmp
jns
sub
pop
push
pop
scas
mov
xor
push
sbb
prefetchwt1
(bad)
sti
stos
loopne
jmp
(bad)
xor
adc
mov
jo
jno
mov
movs
mov
jb
inc
scas
mov
mov
lahf
call
jmp
pushf
xchg
test
cmp
add
retf
fs
sar
ret
in
(bad)
aas
xchg
and
inc
jns
mov
adc
ins
int
push
xchg
iret
sub
pop
or
adc
adc
jl
aad
iret
dec
addr16
mov
(bad)
and
push
add
xor
sbb
jmp
lods
inc
xor
aaa
adc
cmp
es
outs
mov
push
xchg
dec
mov
mov
pop
xor
push
pop
ret
lds
lds
rcr
dec
jmp
xchg
fild
adc
mov
and
les
jmp
cld
sti
shl
ins
lock
(bad)
mov
ret
xchg
fimul
out
pop
call
out
jecxz
pop
adc
test
jno
push
(bad)
mov
cmp
pop
inc
inc
push
cdq
mov
ret
jb
push
jns
movs
retf
jb
ins
sbb
repz
add
pop
sbb
adc
(bad)
daa
and
adc
push
ins
cdq
shr
ret
fisub
push
or
in
push
cs
mov
lods
pop
je
sub
in
jns
jle
in
(bad)
test
cmps
push
and
popf
xor
xor
test
inc
iret
mov
mov
(bad)
jg
xlat
adc
dec
(bad)
out
scas
fadd
sbb
int3
jle
push
mov
sar
fcmovbe
(bad)
add
push
inc
fmul
jns
inc
mov
out
mov
pushf
fs
mov
push
xchg
pop
(bad)
lods
jmp
mov
mov
cli
xor
xlat
mov
sub
dec
xchg
dec
or
fcom
nop
(bad)
mov
gs
cmps
fistp
cmp
ins
outs
sub
mov
rcl
stc
sub
xchg
or
add
add
and
mov
shr
mov
test
sar
push
cld
outs
inc
sbb
jmp
mov
or
or
gs
mov
xchg
mov
mov
jb
(bad)
rcr
test
outs
cld
js
rcr
aas
leave
in
fist
xor
xchg
inc
mov
pop
data16
aam
in
(bad)
adc
(bad)
fsubp
push
mov
pop
test
cmc
iret
xlat
popf
(bad)
stos
mov
call
inc
adc
cld
lahf
adc
(bad)
arpl
mov
mov
push
repz
and
push
dec
xor
jb
ror
xchg
jno
ret
add
adc
ret
dec
rol
dec
push
nop
jns
mov
(bad)
and
dec
pop
jmp
and
movs
call
jno
xor
push
push
mov
pop
test
cli
cmp
call
sbb
pop
xor
(bad)
jb
int3
iret
adc
push
in
inc
into
inc
imul
in
ffreep
mov
xchg
mov
gs
jle
mov
vpinsrw
sub
vpsubq
fistp
(bad)
retf
rol
mov
sbb
fcmovnbe
cli
imul
cmps
push
mov
aad
mov
pop
adc
xchg
loope
or
stc
imul
adc
add
pop
sti
mov
scas
add
je
test
call
sti
out
(bad)
and
sbb
jge
not
daa
xlat
scas
(bad)
shl
pop
cld
ins
push
and
loop
mov
inc
fisubr
or
cmp
ins
outs
mov
jge
dec
mov
fabs
jne
mov
dec
inc
sub
fdiv
fs
icebp
mov
stos
cmp
and
jl
in
sbb
scas
cs
(bad)
jnp
aas
mov
mov
out
(bad)
mov
or
(bad)
pop
mov
out
movs
stos
pop
out
fcmovnb
xor
jecxz
push
sbb
add
xchg
rcl
dec
div
xor
sub
es
cmc
lahf
lahf
call
push
jns
test
push
dec
jge
jo
jne
lahf
dec
lea
mov
mov
xor
aas
fisub
adc
adc
mov
shl
movq
jbe
adc
outs
outs
or
js
fisubr
adc
push
add
js
hlt
leave
fsub
scas
sbb
or
cmps
add
pop
aaa
(bad)
fld
add
add
mov
outs
out
je
loope
sub
stc
call
add
mov
imul
stos
add
push
fcmovnbe
test
and
xor
(bad)
xchg
lods
addr16
rcl
mov
or
ds
xchg
stc
inc
fwait
xchg
pop
mov
sub
lock
sub
shl
scas
sub
dec
nop
mov
pop
jle
outs
test
into
adc
adc
jl
cld
fnstcw
into
and
xchg
sahf
pop
call
test
fidivr
and
cdq
add
cmps
out
cs
pop
mov
sub
ficomp
push
loopne
and
push
and
fadd
lea
(bad)
mov
stos
jge
and
fldenv
sub
leave
adc
stos
data16
outs
call
xor
mov
inc
sbb
mov
cmps
adc
mov
cmps
rcl
add
sub
sti
cmp
pushf
lods
icebp
mov
mov
les
xor
loope
cwde
(bad)
fadd
mov
or
push
push
add
shl
daa
repz
shl
push
mov
cwde
mov
out
mov
pusha
pop
jle
mov
or
push
adc
add
mov
shl
inc
test
jo
xchg
push
fneni(8087
sbb
or
jmp
cld
into
movs
mov
stc
xor
add
icebp
push
jge
pop
call
ret
aaa
add
paddw
xchg
out
repz
test
mov
lods
scas
adc
xor
fnstcw
idiv
call
call
dec
sbb
jg
push
ret
ds
mov
ret
test
sbb
in
cmc
movs
ret
xchg
jbe
stos
loope
mov
pushf
ret
cmp
test
fcmovnb
out
mov
sahf
add
pop
out
in
push
push
repz
icebp
dec
xlat
popf
xor
pop
cs
push
xor
cld
or
je
pop
jbe
pop
ficomp
retf
movs
pop
out
sbb
mov
rcr
or
xor
push
adc
add
push
inc
es
pop
add
std
cmp
add
cmp
and
or
inc
lahf
call
ror
push
inc
retf
mov
cld
outs
jmp
imul
xchg
iret
loopne
test
sub
scas
je
pop
cmps
jae
cmps
inc
cmp
rcl
aad
inc
or
adc
loope
mov
out
lahf
movs
sahf
and
push
repz
jecxz
repz
add
add
lea
and
cmp
jmp
cmp
or
out
adc
mov
adc
and
in
push
sub
dec
xor
jg
xchg
jo
xchg
add
outs
aad
dec
lds
or
ror
cmp
dec
lahf
and
sar
jecxz
mov
add
arpl
mov
sbb
loope
(bad)
jb
sub
ds
int3
sbb
and
lock
or
push
jnp
hlt
jne
rcl
aaa
out
or
sbb
aad
div
or
push
sub
jmp
std
les
and
mov
dec
frstor
neg
shr
push
jno
xor
rcl
sti
sub
fnstsw
scas
lock
pop
mov
rcl
dec
jae
test
dec
sub
not
cmp
clc
dec
mov
frstpm(287
stos
int
xchg
inc
dec
inc
jnp
mov
sub
xor
xchg
dec
std
cld
adc
xchg
sbb
cld
fs
adc
out
and
sbb
outs
imul
(bad)
(bad)
sbb
jg
(bad)
imul
jo
add
loop
lods
dec
jb
pop
xor
daa
sbb
jmp
popf
icebp
xchg
sbb
push
fxch
jne
lds
inc
jecxz
neg
cmps
outs
loop
mov
mov
adc
mov
ror
adc
retf
and
add
adc
fmulp
fucomip
jo
jle
call
lea
call
pushf
xchg
push
cmp
retf
and
mov
adc
in
mov
xchg
cmp
outs
jecxz
ficom
bound
addr16
hlt
nop
pop
std
xchg
retf
rol
inc
sbb
popf
pop
jae
inc
rcr
mov
sbb
pop
lods
jb
call
xor
add
inc
xor
or
pop
mov
dec
lds
in
cdq
out
cmp
pop
sub
into
and
out
add
inc
fsubr
sbb
loop
retf
xchg
push
adc
imul
xchg
ds
jle
leave
ffree
leave
adc
pop
sub
(bad)
loopne
xchg
mov
cmp
test
mov
jnp
repz
or
push
(bad)
outs
add
shl
push
cmc
ret
xor
dec
dec
push
dec
pushf
mov
jns
inc
jle
mov
pop
pusha
jle
out
push
pushf
into
sub
leave
adc
xchg
inc
jb
daa
test
jmp
mov
add
aad
(bad)
test
push
hlt
addr16
xor
call
lds
or
sbb
xchg
out
or
(bad)
push
and
mov
ss
or
or
mov
rep
cld
gs
les
cmp
retf
mov
mov
cmp
lods
dec
jecxz
pop
and
loop
aad
xor
add
(bad)
add
hlt
clc
out
std
sub
in
fs
lahf
adc
xor
fldcw
mov
push
jmp
int
push
(bad)
cmp
mov
fild
dec
dec
xchg
inc
gs
jle
std
retf
add
dec
xor
stos
dec
mov
sub
sti
jno
pop
mov
add
push
sar
or
jnp
out
les
mov
stos
fstp
ins
inc
sbb
test
or
scas
and
shr
das
rol
aam
into
test
aam
mov
mov
adc
sbb
rcl
pop
cmp
fild
cmp
push
cmp
iret
clc
sahf
fldcw
adc
(bad)
(bad)
iret
push
(bad)
push
std
sub
ror
and
scas
call
and
jge
mov
(bad)
fadd
xchg
or
inc
rcl
ins
push
xchg
in
push
movs
(bad)
cmp
sbb
or
cmc
and
cmp
in
es
push
dec
xor
cmp
aad
iret
loope
xchg
sbb
push
mov
shr
rcl
aam
int3
addr16
leave
mov
xlat
xor
or
in
jo
mov
sbb
xchg
and
mov
fs
jp
mov
add
fimul
sub
dec
mov
sub
add
(bad)
rcl
xchg
pop
loope
lds
(bad)
sbb
push
call
mov
ja
xor
arpl
mov
cmps
test
add
sub
push
dec
mov
std
ror
cmps
int
sbb
loopne
loope
pop
mov
adc
or
in
add
les
cmp
dec
inc
dec
aas
test
test
inc
push
jns
test
push
arpl
cmp
pause
push
std
jmp
mov
and
adc
fsub
aam
fiadd
inc
clc
retf
movs
xchg
xchg
and
push
add
mov
push
or
sbb
js
aam
adc
push
in
jle
aad
mov
mov
and
mov
cmp
daa
out
dec
cmovns
mov
jne
jo
shl
push
stc
in
clc
cdq
mov
movs
jne
xor
or
(bad)
rol
adc
movs
sub
int
fdiv
dec
test
imul
add
cmp
sub
clc
ficomp
mov
or
add
fldcw
jno
mov
es
retf
sub
pushf
lahf
xchg
loop
(bad)
push
inc
push
fs
retf
add
jbe
ja
or
call
dec
xlat
jl
mov
cdq
inc
pusha
adc
jmp
jnp
mov
cli
shr
adc
daa
icebp
jno
xor
jmp
add
cmp
gs
mov
mov
scas
and
or
shl
and
iret
adc
push
dec
scas
mov
jg
mov
cmp
jmp
pop
pop
add
std
scas
inc
cmp
loop
rol
xor
ret
(bad)
loopne
xchg
push
into
pop
leave
mov
scas
loope
pop
mov
mov
fnstenv
sub
out
xor
out
mov
jns
dec
sahf
mov
jle
push
outs
cld
mov
or
sub
enter
inc
mov
call
(bad)
pop
xchg
sub
mov
mov
test
jno
inc
(bad)
push
dec
cmp
cmp
xor
add
(bad)
jl
jecxz
test
mov
aam
mov
mov
aas
adc
pushf
xor
je
fs
imul
xchg
mov
sbb
xchg
inc
nop
call
int3
fdiv
aas
push
fisub
rol
data16
xchg
mov
mov
call
mov
mov
iret
pop
iret
lods
movs
jb
sub
dec
ds
lock
scas
or
dec
xor
sub
fsub
(bad)
xor
push
adc
test
fsub
mov
xchg
pop
ss
rcr
stc
jno
clc
retf
test
or
pop
cld
dec
imul
push
cmp
daa
sbb
sub
aam
mul
xor
or
xor
and
in
push
adc
jno
add
pop
sub
dec
push
pop
jmp
cdq
fsub
cmp
mov
cmp
push
mov
(bad)
mov
out
std
cmc
jmp
stos
adc
xlat
ret
loopne
jmp
(bad)
cli
pop
lea
(bad)
rol
fadd
xchg
jle
repz
or
add
or
add
shl
mov
jp
pop
movs
mov
clc
mov
inc
fadd
or
xor
popf
cmp
not
xchg
pop
xchg
mov
push
push
jo
mov
(bad)
ins
push
not
into
push
addr16
and
or
push
mov
repz
inc
outs
sar
add
and
mov
and
mov
aaa
in
loopne
cmove
stos
jp
jne
pop
movnti
cmp
fisttp
test
cmp
push
mov
jbe
(bad)
enter
adc
gs
sti
add
inc
mov
xrelease
mov
push
pushf
xor
xchg
fimul
mov
pop
aam
neg
daa
lds
or
dec
pop
mov
mov
(bad)
or
jbe
ret
fwait
shr
aam
call
jo
inc
sahf
dec
ret
fisub
repnz
inc
jp
(bad)
test
adc
jecxz
jo
mov
loop
xchg
dec
arpl
aaa
pop
cmps
xor
in
enter
fs
fmul
mov
mov
mov
(bad)
stos
pop
dec
retf
sbb
or
fldcw
bound
ret
pop
mov
test
mov
jl
mov
retf
shl
push
pusha
(bad)
xor
dec
sti
dec
test
loop
inc
sbb
rol
cmc
lds
xchg
in
jno
lea
out
test
je
sbb
leave
mov
sar
push
xchg
pop
pop
es
xchg
mov
jmp
jns
mov
sbb
adc
inc
(bad)
leave
push
mov
fadd
add
mov
xchg
call
or
push
or
xlat
ss
scas
xchg
jo
sbb
push
xor
jno
push
sbb
cmp
pop
mov
dec
in
outs
dec
xchg
test
hlt
jmp
or
pop
pusha
mov
sbb
cmp
xchg
pop
push
sbb
iret
mov
inc
dec
mov
out
adc
mov
je
inc
into
lock
ins
test
out
cmps
xchg
pushf
ins
lahf
lahf
clc
sbb
scas
out
inc
pushf
xchg
jmp
push
das
test
dec
sub
call
pop
xor
cmc
inc
scas
retf
retf
inc
dec
imul
outs
pop
push
js
inc
pop
xchg
jmp
iret
out
hlt
dec
cmps
sti
mov
push
xchg
cmp
sub
sti
jle
dec
dec
cdq
or
add
shl
adc
rol
add
pushf
sbb
sbb
xchg
and
dec
sbb
lahf
push
cmc
dec
or
or
mov
pop
xor
data16
mov
fnsave
inc
xor
out
fdiv
sub
in
into
movs
fimul
daa
mov
pop
(bad)
mov
mov
and
out
or
xchg
mov
sbb
shl
scas
pop
pop
pop
(bad)
(bad)
push
arpl
and
add
loopne
ret
mov
icebp
add
jmp
xchg
mul
repz
mov
push
pop
pop
mov
mov
scas
sahf
sti
xchg
sub
xor
cld
push
(bad)
popa
lock
scas
in
and
loop
ret
pop
test
rep
aas
ja
(bad)
mov
pop
push
fld
(bad)
pop
repnz
ins
movs
inc
or
mul
jge
scas
mov
test
fstp
jge
mov
leave
mov
cmp
push
mov
lods
sbb
jmp
adc
in
(bad)
jp
ret
fild
cs
and
jo
jno
mov
movs
mov
add
xchg
lods
loop
inc
lea
(bad)
addr16
iret
cmps
sub
and
pop
ret
dec
mov
je
mov
fisttp
pop
add
aad
neg
mov
jne
mov
adc
push
js
adc
hlt
ss
mov
nop
pop
fcom
jp
(bad)
mov
jb
sbb
add
mov
fst
add
adc
sub
js
in
fs
nop
xchg
push
ins
fs
fmul
cmps
inc
pop
mov
push
pusha
mov
dec
ret
xchg
das
(bad)
jge
movs
push
aas
call
and
in
sbb
iret
cs
and
jo
jno
mov
movs
mov
add
repz
xchg
fimul
out
pop
call
out
jecxz
pop
adc
test
add
mov
icebp
push
mov
arpl
sub
es
cmc
shl
mov
(bad)
pop
sub
or
pop
adc
sbb
stc
cmp
mov
xlat
sub
sti
jnp
xor
jo
sar
or
jle
and
cdq
mov
mov
jl
ja
add
inc
fcomp
push
and
mov
fs
push
ins
mov
dec
lea
or
jge
dec
int3
dec
test
fxch
jne
mov
addr16
sub
call
call
add
loopne
jmp
(bad)
xor
adc
mov
jo
jno
mov
movs
mov
add
repz
xchg
fimul
out
pop
call
out
jecxz
pop
adc
test
add
mov
icebp
push
mov
arpl
sub
es
cmc
shl
mov
(bad)
pop
sub
or
pop
adc
sbb
stc
cmp
mov
xlat
sub
sti
jnp
xor
jo
sar
or
jle
and
cdq
mov
mov
jl
ja
add
inc
fcomp
push
popa
addr16
test
pop
cmp
cmp
sbb
xor
sub
popaw
(bad)
jne
mov
data16
sub
fcom
imul
std
jmp
(bad)
xor
adc
mov
push
dec
jno
call
xchg
cs
mov
ret
xchg
fimul
jmp
imul
(bad)
lds
adc
test
add
mov
icebp
ins
cmp
push
(bad)
sti
xlat
xchg
fcmove
push
adc
stos
leave
mov
das
cmp
xlat
sbb
lods
dec
test
pop
cli
or
out
jbe
or
pop
inc
int
mov
push
mov
xchg
scas
dec
stos
sar
mov
popf
adc
push
fcomp
sbb
or
adc
push
mov
and
(bad)
lahf
(bad)
mov
pop
(bad)
pusha
in
bound
inc
adc
bound
fcom
imul
stc
jmp
jae
in
sbb
iret
cs
es
jno
jne
mov
movs
mov
add
repnz
xchg
fimul
out
pop
call
jmp
lds
adc
in
sub
add
movs
aam
dec
xchg
icebp
push
mov
arpl
sub
es
hlt
(bad)
test
or
js
sbb
stc
cmp
mov
shr
sti
jnp
xor
cmp
(bad)
jl
or
jg
and
movs
shr
push
jl
jae
add
inc
fcomp
pop
fldenv
mov
fs
lahf
dec
mov
or
jge
dec
enter
inc
fxch
je
cmps
jb
lea
scas
fst
movs
add
pop
cmp
std
out
and
in
sbb
retf
cs
and
lock
icebp
push
or
test
cwde
add
repz
xchg
cli
or
out
fnstsw
sub
outs
jecxz
seto
sub
rcl
add
xchg
icebp
je
xchg
jmp
ret
dec
(bad)
xchg
sub
or
xchg
clc
add
jg
jmp
xchg
(bad)
sub
sti
jnp
xor
jo
sar
or
(bad)
mov
ret
call
ja
xor
cld
sbb
call
add
mov
fs
inc
in
mov
pop
or
clc
xor
hlt
int3
int3
int
inc
fldz
cmc
sub
mov
scas
pop
adc
jmp
call
and
in
cmp
iret
scas
jbe
mov
jo
icebp
push
mov
movs
mov
adc
ret
xchg
fimul
iret
fisttp
stos
and
jecxz
pop
adc
test
add
mov
icebp
push
mov
popa
std
sub
and
std
(bad)
mov
iret
pop
sub
add
pop
adc
sbb
icebp
cmp
mov
fild
out
jnp
xor
js
sar
or
jle
and
cdq
mov
mov
je
jne
add
inc
fcom
push
xchg
add
ins
mov
inc
(bad)
mov
hlt
inc
int3
dec
xchg
fxch
jge
mov
addr16
sub
adc
bound
call
and
in
out
sbb
(bad)
cs
sub
jo
jno
mov
lods
mov
or
repz
sahf
ror
out
jecxz
imul
fist
lds
sbb
stos
mov
shl
mov
arpl
sub
es
cmc
sar
mov
lds
sub
lea
xchg
pop
add
fist
shr
sti
sti
cld
xor
cmp
mov
pop
sub
inc
and
call
ja
add
push
and
mov
fs
aad
mov
retf
or
jge
ins
int3
dec
add
jne
mov
out
daa
sub
fcom
imul
std
jmp
(bad)
mov
adc
cmps
sub
push
mov
movs
mov
and
sub
mov
inc
xchg
pop
or
out
pop
call
iret
jecxz
sahf
xor
test
and
jno
shl
mov
inc
jmp
das
es
retf
inc
aaa
test
scas
popa
daa
adc
cmp
stc
cmp
mov
push
sub
sti
jnp
mov
jo
sar
or
jle
and
fwait
mov
mov
ds
cwde
add
add
and
sbb
push
sub
mov
ins
mov
mov
or
jl
push
int3
dec
lea
fadd
jne
mov
addr16
sub
ficom
imul
mov
in
sbb
iret
das
push
bound
jo
xor
mov
movs
mov
add
repnz
xchg
fimul
out
pop
call
in
jecxz
pop
push
sub
sub
inc
push
test
mov
xchg
repz
mov
and
sub
fs
hlt
(bad)
mov
iret
push
sub
or
add
pop
xchg
icebp
jle
mov
xlat
outs
out
jae
xor
js
sar
add
mov
cwde
stos
inc
movs
shr
push
jge
aaa
nop
add
inc
fcomp
push
and
mov
sub
lahf
dec
lods
or
rcr
in
mov
add
fidiv
mov
addr16
adc
push
imul
std
stos
and
in
sbb
iret
cs
and
jo
xor
stos
inc
shl
retf
xchg
or
call
rol
mov
int3
jne
outs
test
inc
sub
nop
imul
icebp
push
xchg
xchg
and
or
es
cmc
ret
jmp
push
imul
pusha
pop
push
js
pop
pop
xchg
jmp
scas
out
xlat
ins
out
jnp
xor
pusha
and
cmp
sbb
sti
pop
lods
popa
dec
cdq
mov
hlt
adc
shl
and
sbb
push
and
mov
fs
push
ins
lock
xchg
sti
clc
xor
mov
fmul
into
jne
loop
mov
fadd
imul
stc
jmp
(bad)
xor
adc
scas
mov
push
mov
movs
mov
add
repz
xchg
fimul
iret
pop
cwde
jmp
sub
loope
aas
adc
mov
mov
cmc
push
mov
push
es
cmc
repnz
(bad)
pop
sub
or
add
jo
sbb
stc
cmp
mov
imul
sti
jnp
xor
push
popa
sar
or
jbe
and
cmps
ror
push
jl
ja
add
inc
fcomp
ins
jp
pop
frstor
xchg
pop
shl
xchg
dec
lea
add
jns
inc
int3
dec
xchg
(bad)
jge
cmps
jb
test
sub
call
call
and
(bad)
xchg
add
add
ret
adc
mov
jo
jno
mov
and
(bad)
mov
add
jns
dec
call
out
jecxz
pop
adc
clc
adc
mov
loope
mov
cs
cmc
xchg
test
dec
mov
mov
inc
or
stc
sub
mov
xchg
sub
jmp
in
xor
xor
cmp
or
jle
and
loop
movs
shr
movs
push
ins
aas
addr16
add
inc
fcomp
js
xchg
and
mov
pusha
fst
mov
or
cld
xchg
in
hlt
dec
mov
inc
leave
into
gs
jb
leave
mov
stos
enter
mov
imul
in
jmp
lahf
jb
adc
(bad)
cs
xor
pusha
dec
popa
inc
call
sar
(bad)
mov
(bad)
xchg
ficomp
out
pop
(bad)
xchg
(bad)
stos
cs
jecxz
pop
add
(bad)
mov
shl
ss
arpl
mov
test
or
pop
aas
stc
add
cmp
mov
xlat
sub
jge
cld
jl
jno
sbb
(bad)
jl
or
jle
and
pop
mov
mov
add
nop
add
inc
fcomp
push
movs
xor
lea
or
jge
int
dec
movs
out
fxch
jne
mov
mov
pop
adc
dec
sbb
imul
jne
and
(bad)
xor
adc
mov
jo
jno
mov
adc
retf
adc
or
iret
fistp
stos
adc
loop
push
xchg
sub
rol
mov
adc
loope
sub
mov
adc
shr
or
pop
xchg
jecxz
cld
mov
jmp
jg
push
adc
sar
(bad)
sar
cdq
or
movs
shr
push
jl
hlt
xchg
add
(bad)
fstp
jmp
xchg
fsub
dec
call
or
lods
aas
stc
sub
test
pop
iret
jne
es
and
data16
scas
fdiv
and
call
fwait
mov
cs
int3
cmps
jbe
fldcw
(bad)
jle
adc
mov
cmc
dec
jno
cmovae
push
scas
fcmovb
pop
jbe
xchg
xor
out
pop
sahf
addr16
xchg
stos
sub
inc
adc
mov
shr
into
xchg
icebp
cmp
das
add
add
add
dec
(bad)
pop
popf
mov
mov
sub
adc
sbb
cmp
scas
cmps
xor
sub
jl
cld
adc
mov
inc
xor
push
std
stc
lods
and
mov
mov
sti
jle
out
and
fwait
sbb
add
mov
dec
push
ins
add
dec
lea
add
jge
retf
int
test
fldenv
cmp
mov
mov
pop
adc
out
sbb
imul
cli
stos
hlt
jg
and
in
xor
xor
cs
mov
jo
repz
mov
adc
sub
(bad)
repz
fisttp
cmp
fwait
loope
pop
xchg
stos
shr
lds
xchg
sub
xchg
sub
push
mov
fnstenv
mov
loopne
sub
ds
push
jne
retf
push
xchg
sub
mov
test
js
cwde
pop
xchg
daa
mov
cmps
xor
scas
out
ja
xor
cmp
xor
movs
or
sahf
xor
in
repz
add
in
jnp
mov
fsub
pop
jmp
or
mov
stc
sbb
cmc
dec
or
sbb
cmp
cmp
mov
and
movs
push
mov
loope
jmp
(bad)
xor
adc
xchg
and
jno
or
xchg
clc
aaa
mov
(bad)
lods
fcmovb
bnd
xchg
push
mov
jmp
out
out
pop
cs
push
sub
out
jecxz
pop
adc
sbb
mov
icebp
jo
xchg
arpl
lods
das
add
test
(bad)
pop
jnp
or
shr
add
cmp
cmp
(bad)
sub
jl
cld
pushf
xchg
jno
popa
mov
or
stc
lods
and
push
mov
mov
sti
jle
outs
test
inc
fcomp
push
inc
popa
lds
icebp
lahf
or
mov
dec
out
dec
(bad)
or
stos
stos
cmp
in
mov
(bad)
lods
jo
push
imul
into
mov
xor
pop
fild
out
int
adc
(bad)
fimul
test
test
mov
pop
push
jmp
lds
(bad)
push
retf
rol
add
movs
mov
mov
cmp
jecxz
pushf
pop
push
addr16
cmc
shl
mov
jns
shr
jo
ss
pushf
jge
into
xor
lds
dec
xchg
mov
xor
jmp
fstp
leave
adc
dec
ins
not
adc
mov
fidiv
(bad)
ja
add
pop
jno
pop
aam
mov
add
add
(bad)
pop
daa
mov
or
data16
(bad)
mov
lea
xchg
or
or
mov
or
cli
push
or
jge
inc
into
ins
sti
popa
aas
int3
movaps
int
mov
out
mov
ret
push
and
cmps
out
(bad)
int
aas
push
gs
es
aam
jo
sub
leave
xchg
mov
mov
sbb
mov
aad
dec
mov
mov
test
rol
leave
shl
sub
ror
xchg
dec
outs
es
hlt
xchg
xchg
dec
arpl
sbb
fs
ja
scas
nop
scas
push
cdq
fild
mov
add
pop
mov
or
cmp
jge
fimul
int
movs
sar
cmp
or
fcomp
push
push
gs
or
jns
pop
gs
mov
mov
hlt
dec
jmp
mov
inc
add
into
adc
daa
sub
hlt
inc
sbb
or
dec
jmp
pop
fild
rcl
mov
adc
ret
retf
add
aaa
outs
out
shl
scas
mov
sahf
mov
fwait
or
cmp
rol
inc
mov
test
out
(bad)
xlat
jb
jno
shl
sub
loop
call
mov
retf
push
push
outs
push
jns
mov
adc
push
inc
arpl
xchg
sar
enter
xor
popa
movs
cmp
jmp
shr
int
add
sub
sbb
ins
push
xor
jne
or
pop
inc
mov
sub
adc
(bad)
iret
cmp
jl
in
test
mov
popf
and
mov
xor
mov
adc
jnp
inc
repz
push
xor
retf
lods
cld
lods
inc
add
test
inc
cmps
inc
ret
aas
dec
fcomi
int3
ret
and
dec
jmp
not
lock
fld
pushf
mov
lods
ins
cwde
mov
sbb
xchg
clc
fisubr
sbb
scas
adc
sbb
sbb
mov
cmp
sub
inc
push
dec
xchg
pop
and
inc
std
mov
or
dec
xor
nop
pop
cwde
stc
sub
aad
ins
cs
push
cdq
inc
push
inc
pusha
xchg
pop
ret
sar
cmp
dec
ins
xlat
ret
das
rol
xor
arpl
test
jno
sbb
add
and
cld
das
(bad)
jns
and
call
mov
add
loopne
or
dec
inc
fidivr
arpl
rol
or
loopne
popa
and
or
aad
inc
sbb
add
into
fist
and
mov
outs
std
dec
mov
sti
mov
mov
add
pop
xchg
loope
mov
fmul
xchg
mov
or
sti
outs
ds
mov
es
repnz
sub
jl
mov
jmp
ins
out
retf
loopne
dec
ja
fist
ret
mov
mov
adc
mov
(bad)
jns
rcl
fld
cdq
xlat
xor
mov
xchg
adc
nop
add
inc
mov
daa
or
xor
and
cli
sub
ret
mov
xchg
or
pushf
adc
push
sub
fldcw
pop
sub
inc
lds
popa
or
and
inc
fisttp
lea
or
mov
add
fxam
fcmovnb
fadd
cmp
add
cmc
jns
mov
xchg
scas
jecxz
dec
xchg
stos
lods
imul
mov
mov
stos
cmp
into
xchg
ret
xchg
cmp
ret
pop
cs
hlt
adc
pusha
ins
in
retf
or
jle
(bad)
mov
hlt
and
ret
sub
lahf
or
push
call
jecxz
mov
push
repnz
inc
jp
(bad)
ss
mov
cmp
or
inc
xchg
jb
or
addr16
cmp
lods
add
(bad)
dec
lea
call
xchg
out
push
nop
and
lods
mov
add
mov
fmul
push
imul
mov
cwde
imul
and
in
shl
cmp
or
cld
jno
jge
(bad)
std
fwait
scas
loope
jge
(bad)
sbb
out
mov
fidiv
xchg
add
sbb
xlat
jb
adc
mov
sbb
inc
dec
push
aas
cmc
cmc
imul
movs
test
mov
scas
add
or
xor
xchg
pop
mov
mov
cld
inc
jae
add
dec
mov
inc
mov
aaa
fmul
lods
and
shl
shl
lsl
dec
pop
cmp
out
lods
push
jo
pop
adc
js
outs
addr16
mov
xchg
sub
stos
mov
add
mov
ret
les
sbb
sbb
pop
repz
stos
xchg
mov
ret
pop
ret
adc
mov
jo
jno
mov
movs
mov
add
repz
xchg
fimul
out
pop
call
out
jecxz
pop
adc
test
add
mov
icebp
push
mov
arpl
sub
es
cmc
shl
mov
(bad)
pop
sub
or
pop
adc
sbb
stc
cmp
mov
xlat
sub
sti
jnp
xor
jo
sar
or
jle
and
cdq
mov
mov
jl
ja
add
inc
fcomp
push
and
mov
fs
push
ins
mov
dec
lea
or
jge
dec
int3
dec
test
fxch
jne
mov
addr16
sub
call
call
and
in
sbb
iret
cs
and
jo
jno
mov
movs
mov
add
repz
xchg
fimul
out
pop
call
out
jecxz
pop
adc
test
add
mov
icebp
push
mov
arpl
sub
es
cmc
shl
mov
(bad)
pop
sub
or
pop
adc
sbb
stc
cmp
mov
xlat
sub
sti
jnp
xor
jo
sar
or
jle
and
cdq
mov
mov
jl
ja
add
inc
fcomp
push
and
mov
fs
push
ins
mov
dec
lea
or
jge
dec
int3
dec
test
fxch
jne
mov
addr16
sub
call
call
and
in
sbb
iret
cs
and
jo
jno
mov
movs
mov
add
repz
xchg
fimul
out
pop
call
out
inc
imul
pop
jb
jl
inc
fxch
jne
mov
addr16
sub
call
call
and
in
sbb
iret
cs
and
jo
jno
mov
movs
mov
add
repz
xchg
fimul
out
pop
call
out
jecxz
pop
adc
test
add
mov
icebp
push
mov
arpl
sub
es
cmc
shl
mov
(bad)
pop
sub
or
pop
adc
sbb
stc
cmp
mov
xlat
sub
sti
jnp
xor
jo
sar
or
jle
and
cdq
mov
mov
jl
ja
add
inc
fcomp
push
and
mov
fs
push
ins
mov
dec
lea
or
jge
dec
int3
dec
test
push
jl
add
add
jns
mov
pand
psubb
pxor
push
psubusb
paddw
paddb
paddusw
pop
punpckhbw
pcmpeqd
jmp
mov
sbb
jmp
pxor
jmp
xchg
outs
and
shl
ret
ficomp
push
mov
ins
addr16
paddw
paddb
paddusw
push
punpckhbw
pcmpeqd
jmp
cmp
in
push
xor
psubusb
paddw
paddb
paddusw
pop
punpckhbw
pcmpeqd
jmp
in
xor
int3
or
imul
fcmovnb
xchg
jmp
mov
das
and
je
adc
ins
loopne
pop
popa
add
jae
cmp
ss
shl
psubusb
paddw
paddb
paddusw
sub
punpckhbw
pcmpeqd
jmp
ja
add
(bad)
aad
pusha
test
pxor
mov
paddd
paddw
packuswb
psubusb
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xor
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
paddsw
paddw
pcmpeqw
paddusb
or
pmulhw
punpckhwd
pcmpeqb
psubw
test
jne
psrlq
psllw
psllw
jmp
fcmovnbe
daa
cmp
cwde
jecxz
jo
and
or
push
jp
inc
mov
inc
sub
lds
bound
test
clc
les
dec
push
paddw
punpckhwd
psllw
psubusb
pop
paddsw
paddw
pcmpeqw
paddusb
pop
pmulhw
punpckhwd
pcmpeqb
psubw
add
psrlq
psllw
psllw
jmp
paddw
punpckhwd
psllw
psubusb
paddsw
paddw
pcmpeqw
paddusb
push
pmulhw
punpckhwd
pcmpeqb
psubw
pop
psrlq
psllw
psllw
call
paddw
punpckhwd
psllw
psubusb
push
paddsw
paddw
pcmpeqw
paddusb
pop
pmulhw
punpckhwd
pcmpeqb
psubw
psrlq
psllw
psllw
bswap
paddw
punpckhwd
psllw
psubusb
rdtsc
paddsw
paddw
pcmpeqw
paddusb
fld
pmulhw
punpckhwd
pcmpeqb
psubw
fnop
psrlq
psllw
psllw
loop
paddw
punpckhwd
psllw
psubusb
jmp
paddsw
paddw
pcmpeqw
paddusb
pop
pmulhw
punpckhwd
pcmpeqb
psubw
adc
psrlq
psllw
psllw
test
jne
paddw
punpckhwd
psllw
psubusb
paddsw
paddw
pcmpeqw
paddusb
inc
pmulhw
punpckhwd
pcmpeqb
psubw
push
psrlq
psllw
psllw
xor
paddw
punpckhwd
psllw
psubusb
pop
paddsw
paddw
pcmpeqw
paddusb
cmp
jne
pmulhw
punpckhwd
pcmpeqb
psubw
mov
pcmpgtd
psrad
punpcklbw
psubw
push
psubusb
pcmpeqd
paddw
packsswb
pop
packssdw
packssdw
pxor
psllw
xor
paddusb
jmp
xchg
loop
jne
or
loop
psubd
movq
dec
psubsb
pcmpeqb
packuswb
paddusb
dec
jmp
mov
sub
psubd
movq
psubsb
dec
pcmpeqb
packuswb
paddusb
jmp
or
test
pop
movs
dec
psubd
movq
psubsb
pcmpeqb
xor
packuswb
paddusb
jmp
das
pop
sub
mov
call
movq
psubsb
pcmpeqb
packuswb
push
paddusb
jmp
mov
(bad)
mov
psubd
movq
cmp
jne
mov
psubsb
pcmpeqb
packuswb
paddusb
add
jmp
mov
xchg
mov
psubd
movq
psubsb
mov
pcmpeqb
packuswb
paddusb
jmp
mov
outs
xchg
mov
adc
psubd
movq
psubsb
pcmpeqb
call
packuswb
paddusb
jmp
mov
push
cs
sub
loop
movd
psubsb
pcmpeqb
packuswb
push
paddusb
jmp
sub
mov
cli
call
mov
psubsb
pcmpeqb
packuswb
paddusb
sub
jmp
mov
lea
psubd
movq
psubsb
push
pcmpeqb
packuswb
paddusb
jmp
test
cli
and
(bad)
lock
psubd
movq
psubsb
pcmpeqb
push
packuswb
paddusb
jmp
imul
mov
call
movd
psubsb
pcmpeqb
packuswb
push
paddusb
jmp
jns
int3
neg
inc
outs
xchg
ret
in
psubd
movq
push
psubsb
pcmpeqb
packuswb
paddusb
push
jmp
movs
iret
neg
dec
jno
sub
psubd
movq
psubsb
push
pcmpeqb
packuswb
paddusb
jmp
call
jmp
ja
mov
psubb
psraw
jmp
xchg
jl
into
mul
jae
into
add
pmulhw
packsswb
psubsw
psllw
push
punpcklwd
pcmpgtw
punpckldq
sub
pcmpeqb
paddsb
por
paddsw
push
pcmpeqw
pslld
pand
punpckhdq
push
jmp
arpl
test
jmp
punpcklbw
pxor
call
paddusw
psllq
punpcklbw
pmullw
mov
psubw
psubusb
pmulhw
paddusb
mov
pmaddwd
pcmpeqd
psubd
psraw
add
psllw
pmullw
psrlw
punpckhwd
mov
paddd
paddb
psubusb
pand
add
punpckhdq
jmp
inc
imul
jmp
punpcklbw
call
pxor
paddusw
psllq
punpcklbw
push
pmullw
psubw
psubusb
pmulhw
push
paddusb
pmaddwd
pcmpeqd
psubd
call
psraw
psllw
pmullw
psrlw
punpckhwd
paddd
paddb
psubusb
pand
punpckhdq
jmp
pop
stos
test
jmp
punpcklbw
pxor
paddusw
psllq
punpcklbw
pmullw
psubw
psubusb
pmulhw
paddusb
pmaddwd
pcmpeqd
psubd
psraw
psllw
pmullw
mov
psrlw
punpckhwd
paddd
paddb
add
psubusb
pand
punpckhdq
jmp
mul
dec
je
int
sbb
mul
pusha
jmp
out
fisttp
fucom
add
psllq
punpcklbw
pmullw
psubw
call
psubusb
pmulhw
paddusb
psraw
jmp
psubusb
movq
psubb
pop
jmp
cld
and
jb
ret
jmp
cmc
shl
shr
psllw
pmaddwd
pxor
psraw
push
packuswb
packsswb
punpckldq
movq
push
psrad
jmp
cld
and
cwde
mov
psubusb
pmullw
call
paddsb
psubsb
psrlq
pslld
pop
psraw
punpcklbw
pmaddwd
cmp
jl
por
jmp
loopne
sub
out
push
cmp
jb
pushf
psrlq
mov
paddb
pcmpgtd
pcmpeqb
sub
punpckhwd
jmp
arpl
dec
jne
arpl
pmaddwd
mov
punpckhbw
psllw
pmaddwd
pxor
sub
psraw
packuswb
packsswb
punpckldq
call
movq
psrad
jmp
imul
jbe
enter
xor
pmullw
paddsb
psubsb
psrlq
xor
pslld
psraw
punpcklbw
add
pmaddwd
por
jmp
cmp
mov
(bad)
and
je
psrld
push
psrlq
paddb
pcmpgtd
mov
pcmpeqb
punpckhwd
jmp
ss
add
retf
or
arpl
push
pmaddwd
punpckhbw
psllw
pmaddwd
push
pxor
psraw
packuswb
packsswb
push
punpckldq
movq
psrad
jmp
mov
adc
loope
call
psubusb
pmullw
paddsb
psubsb
jmp
psrlq
pslld
psraw
punpcklbw
pop
pmaddwd
por
jmp
call
scas
aam
and
mov
jb
pushf
psrlq
paddb
push
pcmpgtd
pcmpeqb
punpckhwd
jmp
call
test
packsswb
pmaddwd
punpckhbw
psllw
call
pmaddwd
pxor
psraw
packuswb
cmp
jne
packsswb
punpckldq
movq
psrad
mov
pcmpgtd
psrad
psubusb
pand
jmp
pcmpgtb
paddb
psrld
pand
pop
adc
push
test
sub
push
sub
xchg
cmp
pop
sbb
mov
call
psubb
pcmpeqd
packssdw
pcmpgtd
mov
pcmpgtb
paddb
psrld
pand
mov
psubb
pcmpeqd
packssdw
pcmpgtd
inc
pcmpgtb
paddb
psrld
pand
mov
psubb
pcmpeqd
packssdw
pcmpgtd
mov
pcmpgtb
paddb
psrld
pand
ret
add
cwde
pop
push
xor
out
fcom
push
fcomp
push
and
adc
lods
arpl
stc
jge
clc
les
jbe
packssdw
pcmpgtd
mov
pcmpgtb
paddb
psrld
pand
push
psubb
pcmpeqd
packssdw
pcmpgtd
pop
pcmpgtb
paddb
psrld
pand
mov
psubb
pcmpeqd
packssdw
pcmpgtd
mov
pcmpgtb
paddb
psrld
pand
push
psubb
pcmpeqd
packssdw
pcmpgtd
mov
pcmpgtb
paddb
psrld
pand
mov
psubb
pcmpeqd
packssdw
pcmpgtd
pcmpgtb
paddb
psrld
pand
cmp
jne
psubb
pcmpeqd
packssdw
pcmpgtd
pcmpgtb
paddb
psrld
pand
cmp
jne
psubb
pcmpeqd
packssdw
pcmpgtd
pop
pcmpgtb
paddb
psrld
pand
mov
psubb
pcmpeqd
packssdw
pcmpgtd
mov
pcmpgtb
paddb
psrld
pand
mov
psubb
pcmpeqd
packssdw
pcmpgtd
add
pcmpgtb
paddb
psrld
pand
mov
psubb
pcmpeqd
packssdw
pcmpgtd
mov
pcmpgtb
paddb
psrld
pand
add
psubb
pcmpeqd
packssdw
pcmpgtd
mov
pcmpgtb
paddb
psrld
pand
add
psubb
pcmpeqd
packssdw
pcmpgtd
lods
pcmpgtb
paddb
psrld
pand
test
je
psubb
pcmpeqd
packssdw
pcmpgtd
add
pcmpgtb
paddb
psrld
pand
mov
psrlw
paddusw
paddsw
punpckhdq
cmp
jne
psubb
jmp
sub
mov
paddw
packssdw
mov
jmp
jb
imul
fmul
psubusb
packsswb
cmp
jne
psubusb
pmaddwd
paddw
psrlq
mov
pslld
pmullw
punpckldq
pand
xor
psubb
jmp
in
xor
mov
adc
test
popa
cld
psrlw
paddusw
paddsw
push
punpckhdq
psubb
jmp
sbb
outs
mov
paddw
push
packssdw
jmp
(bad)
push
push
call
retf
not
ret
psubusb
pmaddwd
paddw
push
psrlq
pslld
pmullw
punpckldq
push
pand
psubb
jmp
loop
imul
inc
psubusb
push
psrad
punpcklwd
psrlw
paddusw
push
paddsw
punpckhdq
psubb
jmp
stos
in
sub
mov
shl
std
repz
imul
or
adc
paddusb
add
psubusb
packsswb
psubusb
pmaddwd
ret
test
sbb
mov
int
stos
imul
sbb
mov
scas
mov
stos
and
cs
xor
jbe
push
mov
jb
and
mov
mov
mov
dec
xchg
outs
and
aaa
ret
ficomp
push
mov
ins
addr16
jmp
mov
das
and
je
adc
ins
(bad)
pop
popa
add
jae
cmp
ss
shl
fcmovnbe
daa
cmp
cwde
jecxz
jo
and
or
hlt
(bad)
inc
push
mov
jb
and
mov
mov
mov
push
jp
scas
add
add
and
in
scas
jl
rcr
fwait
shl
ficomp
add
(bad)
or
int3
push
push
scas
and
mov
pop
jmp
ret
xchg
cmp
mov
and
mov
fcom
adc
fadd
add
scas
push
ds
sbb
jmp
pusha
adc
add
aas
leave
push
jp
inc
mov
or
popf
dec
sbb
mov
push
jno
les
dec
inc
pop
adc
push
test
sub
push
sub
xor
pop
pop
sbb
mov
lea
stc
in
into
sub
mov
outs
mov
push
or
rcl
pop
mov
cmp
dec
(bad)
fadd
xchg
sbb
and
sbb
sbb
pushf
dec
inc
pop
ret
mov
cmp
aaa
icebp
push
test
and
fild
fld
pop
(bad)
sub
mov
repnz
cdq
push
cs
out
and
xchg
push
outs
shl
mov
adc
xor
(bad)
jno
mov
(bad)
adc
loopne
(bad)
(bad)
out
mov
mov
(bad)
aam
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
leave
ficom
mov
jecxz
pop
adc
pop
mov
popf
test
inc
mov
dec
dec
or
pop
dec
popf
test
inc
mov
dec
cmp
pop
dec
mov
dec
cmp
leave
dec
mov
dec
pushf
imul
dec
mov
dec
dec
add
mov
fidiv
(bad)
retf
adc
imul
sbb
ret
inc
push
pop
dec
(bad)
sub
mov
dec
lods
inc
mov
dec
cli
inc
push
dec
(bad)
dec
fisttp
inc
pop
ror
pop
adc
jbe
dec
(bad)
sub
pop
and
jle
inc
pop
leave
aas
inc
push
iret
and
pop
dec
cs
dec
mov
pushf
mov
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
dec
or
pop
dec
popf
test
dec
mov
dec
xchg
sub
dec
scas
inc
pop
dec
ret
sub
cmp
mov
or
add
pop
dec
sahf
leave
rol
inc
pop
mov
popf
test
dec
mov
dec
inc
lods
pop
dec
mov
dec
enter
mov
dec
cmp
leave
dec
mov
dec
mov
dec
mov
fs
cmp
dec
and
push
rcr
jg
pop
dec
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
inc
pop
rcr
cmp
les
inc
in
mov
mov
push
fisubr
enter
mov
dec
mov
adc
xor
dec
popf
test
dec
mov
dec
cs
dec
(bad)
sbb
ret
adc
push
out
inc
pop
adc
inc
mov
popf
test
dec
mov
dec
cs
jp
(bad)
sbb
ret
or
mov
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
jmp
pop
dec
popf
test
dec
mov
dec
xchg
(bad)
sbb
ret
cmp
ret
test
pop
mov
dec
(bad)
mov
imul
inc
pop
dec
dec
lds
mov
ins
mov
dec
dec
lds
mov
ins
mov
dec
dec
lds
mov
ins
mov
dec
dec
lds
mov
ins
mov
dec
dec
lds
mov
adc
psubq
fmul
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
lds
ret
inc
mov
mov
mov
mov
das
scas
dec
dec
(bad)
and
dec
(bad)
retf
and
mov
retf
ds
pop
dec
(bad)
xor
pop
dec
dec
add
pop
dec
lahf
adc
mov
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
(bad)
retf
sbb
inc
mov
dec
dec
(bad)
retf
sbb
xchg
sbb
das
mov
mov
mov
add
ins
mov
or
inc
inc
adc
(bad)
test
add
dec
(bad)
retf
sbb
inc
mov
pop
dec
(bad)
retf
sbb
xchg
sbb
das
sti
inc
dec
(bad)
retf
and
xchg
mov
dec
cmp
dec
dec
mov
retf
add
dec
(bad)
pop
fsub
nop
mov
pop
mov
lahf
rcr
mov
mov
or
sbb
mov
jmp
inc
pop
mov
xor
stos
mov
xor
stos
mov
xor
stos
mov
xor
stos
mov
xor
stos
mov
xor
stos
mov
xor
stos
mov
xor
stos
mov
xor
stos
mov
xor
stos
mov
xor
stos
mov
xor
stos
mov
xor
stos
mov
xchg
gs
mov
sub
fld
pop
retf
sub
mov
dec
mov
dec
(bad)
retf
and
xchg
mov
dec
(bad)
sub
(bad)
sub
mov
add
leave
add
dec
inc
xchg
(bad)
push
(bad)
pop
out
(bad)
pop
jecxz
dec
mov
fwait
dec
mov
or
movs
ret
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
or
(bad)
sub
xchg
add
setae
movs
dec
enter
cmp
or
add
cs
dec
(bad)
retf
sbb
rol
add
dec
xchg
inc
sub
mov
sub
jbe
je
dec
sbb
add
dec
inc
jns
pop
leave
fwait
leave
add
iret
pop
xor
dec
ret
fdiv
retf
mov
mov
fdiv
ret
lods
push
sbb
xor
push
sbb
pop
sbb
test
mov
inc
(bad)
or
retf
sbb
inc
dec
or
pop
test
(bad)
add
leave
adc
push
or
dec
(bad)
retf
and
mov
adc
sbb
mov
leave
adc
or
dec
mov
cmp
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
ss
pop
ret
test
pop
mov
cmp
cmps
mov
mov
mov
ret
aas
inc
mov
inc
dec
dec
mov
inc
lods
inc
aaa
dec
lods
inc
aaa
dec
lods
inc
aaa
dec
cmp
mov
dec
inc
mov
mov
push
mov
(bad)
pop
adc
add
jle
or
pop
dec
popf
test
mov
mov
mov
fild
ror
pop
adc
mov
popf
retf
adc
push
inc
dec
(bad)
sbb
sbb
cmp
(bad)
test
sbb
add
jb
add
sbb
add
jb
add
sbb
add
jb
add
sbb
add
jb
add
sbb
add
jb
add
sbb
add
jb
add
sbb
add
jb
add
sbb
add
jb
add
sbb
add
jb
add
sbb
add
ror
pop
adc
jb
mov
adc
mov
lahf
retf
pop
ret
inc
clc
pop
dec
mov
(bad)
pop
iret
test
pop
mov
cmp
pop
ror
aaa
or
retf
push
leave
push
adc
(bad)
leave
cmps
leave
add
push
rcl
imul
jo
pop
dec
sub
aam
inc
sub
mov
mov
mov
(bad)
add
push
in
pop
dec
(bad)
sub
dec
cmp
xor
inc
aaa
dec
lods
mov
pop
dec
dec
kaddb
inc
aaa
dec
dec
dec
mov
dec
cmp
std
dec
mov
inc
cmp
sbb
add
mov
inc
pop
dec
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
dec
leave
aam
(bad)
retf
push
mov
adc
aas
jecxz
sub
pop
push
mov
mov
pop
inc
inc
ret
(bad)
retf
sbb
inc
adc
(bad)
sub
mov
inc
cmp
sbb
enter
mov
dec
mov
inc
(bad)
pop
inc
and
out
inc
cmp
cdq
cmp
mov
dec
dec
call
adc
iret
mov
fidiv
int3
inc
pop
sub
es
inc
mov
adc
inc
pop
dec
mov
jg
pop
dec
(bad)
dec
(bad)
inc
pop
ror
pop
adc
push
cmps
mov
mov
push
mov
inc
mov
inc
inc
sahf
push
dec
(bad)
retf
sbb
sti
pop
dec
(bad)
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
cwde
pop
add
dec
mov
(bad)
adc
mov
rcl
fidiv
into
inc
pop
rcr
pop
dec
dec
mulps
rol
bound
(bad)
pop
iret
test
pop
mov
cmp
dec
rcl
(bad)
leave
aas
inc
push
iret
js
pop
dec
cs
pop
dec
(bad)
sub
dec
scas
inc
dec
dec
(bad)
sub
nop
dec
mov
dec
mov
dec
mov
inc
(bad)
or
adc
sti
ret
popf
bound
dec
add
inc
pop
ror
pop
adc
(bad)
movs
mov
sub
iret
leave
mov
add
pop
dec
(bad)
adc
dec
dec
pop
push
mov
mov
pop
dec
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
lods
inc
aaa
dec
dec
stos
fmul
xchg
retf
sar
inc
pop
retf
add
pop
dec
(bad)
adc
sbb
nop
pop
aaa
dec
lods
inc
(bad)
add
lea
(bad)
addr16
pop
dec
dec
stos
fmul
xchg
retf
sar
inc
pop
retf
add
pop
dec
(bad)
adc
sbb
nop
pop
aaa
dec
lods
dec
aam
inc
and
mov
dec
mov
pop
sbb
mov
mov
dec
dec
(bad)
sbb
xlat
ja
pop
dec
dec
sbb
sub
cmp
jmp
sbb
nop
pop
mov
aad
pop
adc
mov
pop
rcl
inc
mov
dec
or
pop
dec
popf
test
mov
inc
inc
pop
dec
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
es
mov
rol
adc
push
stos
mov
leave
fmul
mov
mov
leave
sbb
dec
or
pop
dec
popf
test
mov
rol
adc
mov
sub
add
pop
and
retf
adc
xchg
sub
(bad)
retf
add
jae
fild
pop
dec
inc
jmp
ds
retf
adc
or
(bad)
sbb
ret
and
adc
cmp
call
pop
dec
popf
test
mov
cmp
sub
inc
push
and
sub
mov
inc
cmp
fild
pop
dec
add
pop
inc
mov
pop
iret
test
pop
mov
test
(bad)
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
dec
lahf
sub
nop
dec
mov
leave
aas
inc
push
iret
xchg
inc
pop
dec
dec
or
pop
dec
popf
test
mov
dec
inc
pop
dec
dec
mov
pop
dec
xchg
retf
or
jb
call
pop
dec
mov
mov
jmp
inc
inc
xchg
pop
dec
(bad)
retf
adc
or
(bad)
sbb
sbb
retf
or
jb
call
pop
dec
popf
test
mov
mov
or
pop
dec
popf
test
mov
mov
pop
pop
dec
(bad)
push
pop
dec
dec
(bad)
fisttp
inc
(bad)
int
inc
pop
dec
jmp
into
mov
inc
pop
dec
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
jle
in
mov
mov
rcr
adc
dec
inc
dec
dec
mov
dec
(bad)
retf
fcmovbe
mov
cmp
mov
(bad)
les
inc
pusha
xchg
cmp
into
pop
dec
(bad)
jge
dec
mov
pop
dec
(bad)
dec
fnstenv
mov
add
dec
enter
mov
inc
inc
and
test
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
into
dec
inc
pop
dec
cli
gs
dec
pop
dec
fxch
mov
mov
inc
fnstsw
mov
dec
dec
mov
xor
stos
mov
pusha
dec
mov
dec
(bad)
jge
dec
mov
fnstcw
pop
ja
inc
pop
retf
push
dec
mov
dec
mov
mov
aam
dec
(bad)
sub
mov
pop
inc
pop
dec
cmp
leave
dec
mov
dec
add
and
mov
sahf
and
inc
pop
retf
lds
inc
mov
dec
cmp
and
inc
mov
fcomp
(bad)
stos
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
pop
dec
mov
std
pop
inc
pop
dec
cmp
leave
dec
mov
dec
cs
mov
dec
mov
pop
inc
pop
dec
cmp
leave
dec
mov
dec
cs
(bad)
mov
aas
push
push
into
cmp
pop
inc
inc
mov
mov
leave
cmps
retf
add
pop
dec
(bad)
adc
dec
scas
inc
dec
dec
(bad)
mov
push
mov
mov
pop
ret
cmp
sahf
mov
lods
add
dec
cmp
fisttp
inc
(bad)
adc
push
in
pop
dec
(bad)
sub
mov
pop
inc
pop
dec
cmp
leave
dec
mov
dec
jle
push
dec
(bad)
or
mov
xor
enter
pop
mov
mov
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
fmul
xchg
sub
les
mov
pop
rcr
icebp
dec
mov
and
retf
or
jb
pop
jmp
(bad)
psubq
movs
dec
enter
mov
dec
dec
add
xchg
or
test
mov
cdq
stc
push
dec
mov
push
iret
es
pop
leave
es
mov
adc
aaa
ret
popf
pop
test
jbe
inc
sub
dec
fmul
xor
(bad)
aaa
retf
rcr
cmp
dec
inc
xchg
mov
dec
(bad)
pop
mov
dec
dec
cmp
pop
dec
mov
jne
inc
pop
adc
cmps
pop
dec
(bad)
leave
xchg
adc
dec
push
adc
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
retf
rcr
mov
inc
pop
dec
xor
mov
aam
pop
adc
popf
dec
mov
ret
nop
test
adc
inc
mov
cmp
(bad)
push
enter
iret
es
mov
adc
aaa
clc
pop
dec
mov
mov
xor
ror
pop
adc
xor
inc
inc
sbb
inc
aaa
dec
xchg
sub
pop
test
movs
cmp
aaa
dec
lods
inc
aaa
dec
scas
inc
pop
dec
inc
adc
sar
dec
sbb
inc
pop
ret
or
mov
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
es
sub
mov
or
adc
or
inc
or
dec
mov
sbb
add
pop
dec
dec
sbb
pop
retf
and
ror
pop
shl
fs
inc
aam
test
inc
inc
daa
mov
adc
mov
dec
lods
inc
aaa
dec
lods
inc
xor
sbb
adc
movs
leave
pop
push
aaa
dec
xchg
mov
sbb
(bad)
adc
mov
or
mov
adc
dec
mov
xor
and
adc
mov
and
mov
dec
fsubr
inc
pop
ror
pop
adc
(bad)
mov
cmp
sbb
(bad)
mov
dec
mov
dec
mov
and
sub
adc
dec
lahf
adc
push
inc
mov
pop
dec
(bad)
test
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
jmp
outs
jae
dec
or
pop
dec
popf
test
mov
xchg
mov
sahf
dec
rol
pop
mov
ins
xor
(bad)
fild
inc
pop
dec
dec
inc
push
ret
sbb
jmp
dec
sub
inc
sbb
ret
dec
aas
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
pop
mov
dec
cmp
pop
dec
mov
retf
add
dec
(bad)
sub
(bad)
sub
(bad)
sub
mov
add
movs
dec
mov
adc
cdq
dec
mov
adc
pop
inc
mov
sbb
cmp
fwait
dec
lds
adc
leave
shl
inc
mov
fimul
add
or
add
or
add
mov
mov
dec
cs
pop
dec
(bad)
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
popf
adc
dec
aam
inc
xchg
dec
xchg
sub
dec
mov
std
aas
inc
pop
dec
cmp
pop
dec
(bad)
mov
push
dec
(bad)
sbb
jb
xor
mov
retf
inc
pop
adc
mov
mov
leave
mov
dec
(bad)
sub
cmp
pop
adc
ds
stos
push
cmp
fwait
dec
iret
inc
pop
sbb
scas
pop
dec
mov
dec
(bad)
push
aaa
dec
lods
inc
aaa
dec
lods
inc
aaa
dec
lods
inc
fsub
mov
pop
and
sub
mov
aad
xchg
fnsave
xor
ins
cwde
dec
pop
dec
ret
fwait
push
enter
inc
sbb
add
loopne
mov
enter
mov
adc
xlat
jmp
pop
dec
cs
pop
dec
(bad)
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
out
in
popa
test
push
rcr
shl
pop
and
sub
mov
dec
lods
inc
aaa
mov
aad
dec
mov
dec
dec
lds
mov
adc
aaa
retf
and
jp
inc
pop
rol
inc
inc
mov
fimul
mov
shl
aam
rol
pop
mov
xlat
inc
pop
ret
xchg
pop
ins
or
dec
pop
(bad)
pop
xchg
add
fisttp
mov
ret
cmps
dec
mov
fs
iret
inc
sub
inc
pop
dec
(bad)
leave
sbb
rcr
ret
pushf
dec
cmps
test
push
rcr
sar
pop
rcr
dec
(bad)
leave
shr
pop
sub
je
sub
cmc
ins
dec
mov
inc
mov
sbb
inc
sbb
out
inc
pop
dec
cmps
inc
shl
inc
pop
ret
pop
js
dec
(bad)
cli
pop
sub
inc
(bad)
xlat
inc
dec
(bad)
pop
push
inc
inc
dec
pop
dec
(bad)
retf
dec
pop
dec
or
inc
pop
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
std
jmp
pop
dec
dec
nop
out
mov
dec
(bad)
mov
leave
cmp
lds
mov
leave
pop
inc
aam
jecxz
pop
dec
dec
(bad)
mov
dec
(bad)
stos
pop
sub
movs
mov
dec
cmps
inc
pop
ret
xchg
pusha
aam
inc
sbb
inc
aam
jecxz
pop
dec
mov
dec
enter
jecxz
adc
mov
ret
aas
inc
pop
pop
mov
xchg
dec
lahf
mov
mov
and
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
test
xor
(bad)
mov
and
dec
xor
scas
pushf
sbb
ds
ret
je
inc
sbb
cmps
ret
ret
dec
fimul
mov
(bad)
push
jecxz
xlat
dec
sti
test
sbb
ret
dec
popa
repnz
sbb
ror
rol
fmul
xchg
sub
dec
xchg
sub
dec
(bad)
sbb
push
jecxz
fwait
dec
jg
aam
add
stos
mov
cs
xor
sub
sub
mov
sub
pop
dec
cmp
mov
dec
ret
dec
(bad)
retf
push
ret
or
adc
add
leave
adc
add
daa
retf
pop
outs
inc
test
mov
inc
das
mov
outs
dec
fcomp
(bad)
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
mov
xor
nop
xchg
xor
and
mov
mov
xor
stos
jae
dec
das
inc
mov
sbb
xor
aas
cmps
sub
das
stos
das
das
xor
test
xchg
cmp
cmp
mov
das
cmp
pushf
mov
or
adc
cmp
test
scas
cmp
xor
mov
xor
xor
aas
call
scas
and
or
test
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
push
mov
and
xor
cmps
xor
and
and
xor
movs
mov
push
mov
and
das
xchg
sub
das
cmps
and
mov
mov
cmp
sub
das
cmps
and
xor
test
scas
cmp
cmp
cmp
inc
mov
and
xor
test
cmp
mov
xor
xor
jo
pop
dec
push
ror
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
fist
int3
mov
mov
das
mov
xor
xchg
sub
das
cmps
and
mov
mov
das
mov
xor
and
das
das
cmps
and
mov
mov
das
mov
xor
and
das
das
cmps
and
mov
and
sub
and
mov
cmp
cmp
xchg
xor
sub
adc
xor
test
mov
mov
and
mov
and
in
xchg
cmp
sub
xchg
xor
sub
test
mov
movs
xor
or
cmp
xor
mov
icebp
pop
dec
(bad)
lock
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
in
cli
ja
mov
cs
sub
mov
or
cmp
mov
aas
cmps
sub
cmp
add
scas
mov
adc
or
pop
sbb
sbb
movs
xor
cmp
sub
cs
cs
test
sub
xor
and
xor
and
xchg
sub
es
pusha
sbb
mov
pop
mov
mov
cmp
mov
aas
cmp
test
xchg
cmp
sub
stos
add
es
sbb
(bad)
test
pop
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
les
dec
das
dec
mov
cmp
cmp
mov
xor
and
das
test
cmps
mov
sub
das
sub
xchg
sub
das
cmps
and
mov
and
or
xor
jbe
mov
sbb
xor
or
test
pushf
cmp
sub
mov
add
and
sub
aas
mov
daa
sbb
sub
pop
cmps
xor
or
sub
sbb
cmp
cmp
sub
dec
das
add
mov
adc
das
(bad)
test
movs
cmp
cmp
mov
sbb
mov
ds
and
mov
inc
pop
dec
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
sub
pop
sbb
add
or
adc
or
jge
mov
xchg
and
cs
mov
lods
mov
adc
sub
mov
and
mov
adc
cmp
scas
jae
dec
das
ror
sub
mov
pop
mov
mov
cmp
stos
jae
dec
das
push
scas
mov
adc
sub
sub
scas
and
mov
mov
cmp
mov
inc
mov
adc
xor
cmp
sub
test
xchg
cmp
xor
adc
scas
push
cmp
mov
cwde
mov
daa
scas
cs
mov
and
fst
mov
xor
mov
inc
mov
pop
mov
or
stos
xor
dec
das
lods
mov
adc
sub
test
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
test
mov
mov
mov
xchg
and
aaa
sbb
jge
or
(bad)
and
adc
or
and
and
dec
xor
lods
adc
sbb
cmp
sub
inc
mov
aaa
mov
jg
jmp
jg
jmp
jg
jmp
ins
dec
das
mov
pop
dec
(bad)
test
mov
mov
dec
mov
mov
inc
pop
dec
das
mov
pop
dec
(bad)
test
xchg
cmp
mov
mov
outs
cmp
mov
mov
aas
sub
sub
das
mov
mov
sub
xor
mov
and
mov
xor
(bad)
test
popf
cmp
pop
mov
mov
and
test
xchg
cmp
pop
mov
mov
mov
call
cmp
mov
xor
inc
pop
add
add
add
or
add
add
add
inc
add
pop
sub
add
add
add
add
pop
add
add
add
add
add
lds
add
jl
add
adc
add
add
add
xchg
add
ins
je
add
add
add
add
add
xor
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
inc
imul
dec
jp
add
mov
add
add
loop
xchg
stos
mov
add
add
add
add
add
aam
add
(bad)
inc
add
or
and
dec
gs
xor
adc
dec
add
les
add
add
push
push
push
push
push
xor
fadd
add
push
push
gs
inc
push
xor
add
add
add
add
data16
push
push
ja
push
pusha
add
jbe
push
push
int3
ja
push
lea
add
add
add
push
push
data16
mov
xor
add
js
mov
push
push
xchg
jo
add
add
add
add
push
ja
js
gs
push
gs
pusha
add
xchg
add
add
add
addr16
mov
in
ja
gs
add
add
add
ds
push
ja
mov
push
push
ja
push
add
add
add
add
push
push
ja
mov
push
push
ja
push
add
les
add
add
push
xchg
gs
push
push
push
xchg
pusha
pop
fdivr
mov
jbe
xchg
pusha
pop
addr16
mov
gs
push
xchg
jo
add
add
add
add
mov
gs
push
xor
add
add
add
jge
push
push
mov
push
push
push
push
xchg
jo
add
add
add
add
push
jne
sahf
push
push
js
xor
add
add
add
add
ja
mov
jbe
xchg
pusha
add
add
xchg
add
add
push
jbe
gs
push
push
in
push
add
add
add
add
push
mov
push
push
push
push
gs
mov
add
add
pop
push
ja
ja
dec
xor
xor
add
les
add
pop
js
mov
ja
jbe
adc
add
js
mov
ja
push
adc
add
add
add
add
add
mov
addr16
test
push
add
ja
push
inc
xor
stos
mov
add
add
jge
arpl
inc
xchg
cmps
test
cmps
pop
jne
add
add
sahf
add
add
push
fs
add
add
push
push
add
add
add
aam
add
add
add
data16
add
add
xchg
inc
add
push
push
add
add
add
fs
add
add
add
push
push
add
add
add
imul
add
add
or
add
cmps
addr16
add
pop
add
xor
add
add
push
or
push
add
add
add
data16
add
add
add
add
add
add
adc
add
add
or
add
or
ss
add
add
mov
push
add
inc
push
pop
add
add
mov
add
add
sahf
add
add
add
add
push
mov
add
inc
xchg
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
nop
or
adc
add
add
add
add
add
push
xor
inc
xor
xor
xor
adc
cmps
add
add
add
add
add
add
add
data16
xor
nop
push
or
inc
inc
nop
add
or
(bad)
(bad)
clc
add
inc
add
push
add
inc
add
inc
add
inc
add
cld
sahf
add
inc
add
lock
add
add
inc
xchg
add
inc
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
ud0
inc
add
clc
pop
(bad)
(bad)
inc
add
clc
aas
(bad)
(bad)
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
sahf
add
(bad)
clc
aas
cld
aas
inc
add
clc
aas
cld
aas
xchg
add
(bad)
clc
pop
clc
aas
dec
(bad)
clc
pop
lock
inc
add
clc
(bad)
aas
call
sub
cld
pop
loopne
inc
and
cld
add
aas
inc
add
inc
cmp
add
inc
add
add
(bad)
inc
add
inc
add
inc
add
jmp
pop
(bad)
inc
add
(bad)
clc
pop
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
inc
cmps
and
add
jp
jo
jb
add
std
or
add
adc
add
add
add
add
add
or
dec
outs
addr16
imul
dec
add
or
add
or
add
add
add
je
outs
outs
je
add
add
add
jo
jb
popa
outs
add
mov
add
inc
add
add
add
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
inc
add
add
sbb
pop
sbb
mov
sbb
in
sbb
mov
add
add
adc
add
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
inc
add
inc
add
add
add
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
push
mov
call
mov
mov
lea
call
mov
lea
call
push
call
push
fstp
call
mov
lea
call
push
push
push
call
push
lea
push
lea
lea
push
push
mov
mov
call
lea
push
push
call
mov
lea
lea
push
push
call
lea
call
fwait
push
jmp
lea
call
ret
mov
lea
call
lea
call
mov
lea
xor
push
push
call
lea
call
lea
push
push
call
ret
mov
pop
pop
xor
mov
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
xor
mov
call
mov
mov
lea
push
push
lea
push
lea
push
push
push
call
mov
mov
call
test
je
mov
xor
call
mov
mov
lea
push
push
lea
push
lea
push
push
push
call
mov
call
test
je
mov
xor
call
mov
mov
lea
push
push
lea
push
lea
push
push
push
call
mov
call
test
je
mov
xor
call
mov
mov
lea
push
push
lea
push
lea
push
push
push
call
mov
call
test
je
mov
xor
call
mov
mov
lea
push
push
lea
push
lea
push
push
push
call
mov
call
test
je
push
call
mov
call
mov
test
jne
push
call
mov
call
mov
test
jne
push
call
mov
call
mov
test
jne
push
call
mov
call
mov
test
jne
push
call
mov
call
mov
test
jne
mov
mov
lea
mov
mov
call
mov
mov
call
push
lea
push
call
mov
push
call
lea
call
push
call
mov
mov
mov
add
jo
mov
cmp
jne
mov
test
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
mov
call
jmp
mov
mov
push
push
call
mov
neg
sbb
inc
neg
lea
call
test
jne
mov
mov
push
lea
push
lea
push
call
mov
mov
call
mov
push
call
push
push
mov
push
mov
push
call
mov
mov
mov
test
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
mov
test
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
test
jge
push
push
push
push
call
push
mov
push
mov
push
push
call
mov
neg
sbb
neg
neg
lea
push
lea
push
push
call
add
lea
call
test
jne
mov
push
mov
push
fld
call
test
jle
mov
test
jne
push
push
call
mov
mov
test
jne
push
push
call
mov
mov
push
lea
push
call
push
push
call
fnclex
test
jge
push
push
push
push
call
lea
call
push
call
mov
mov
push
push
push
push
push
call
push
call
mov
call
mov
push
call
mov
mov
fwait
push
jmp
lea
push
lea
push
push
call
add
lea
call
lea
call
ret
ret
mov
mov
pop
pop
pop
mov
pop
ret
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
lods
pop
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
mov
add
mov
pop
add
ficomp
add
pop
add
dec
add
cmp
add
or
add
pop
add
sub
add
pop
add
push
pop
add
pop
add
je
add
mov
add
pop
add
mov
add
(bad)
pop
add
ficomp
add
pop
add
or
pop
add
add
add
sbb
add
add
xor
add
pop
add
push
pop
add
pop
pop
add
je
add
sbb
mov
add
pop
add
into
pop
add
fcomp
add
pop
add
int
add
or
add
xchg
add
cs
add
inc
pop
add
push
pop
add
pop
add
js
add
lods
add
and
xchg
xchg
pop
add
mov
pop
add
mov
pop
add
(bad)
pop
add
loopne
add
jmp
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
inc
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
push
popa
jb
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
push
popa
jb
imul
popa
fs
imul
xor
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
fs
imul
xor
add
pop
pop
jbe
popa
inc
jb
push
popa
jb
add
pop
pop
jbe
popa
inc
jb
inc
gs
jb
arpl
add
pop
pop
jbe
popa
dec
outs
inc
jb
outs
jb
add
add
jbe
popa
dec
bound
gs
add
pop
pop
jbe
popa
inc
jns
fs
add
pop
popa
fs
imul
imul
pop
jbe
popa
dec
bound
gs
fs
data16
add
fs
imul
xor
imul
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
jbe
popa
inc
jns
xor
add
pop
pop
jbe
popa
push
je
inc
ins
jo
add
pop
pop
jbe
popa
inc
jns
xor
add
inc
ins
ins
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
fs
data16
je
outs
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
pop
jbe
popa
push
dec
xor
add
add
pop
inc
dec
jae
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
jo
ins
jo
jns
add
add
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
inc
dec
ins
outs
add
add
pop
pop
jbe
popa
inc
jb
outs
jb
jbe
jb
ins
outs
ja
add
add
jbe
popa
dec
gs
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
pop
jbe
popa
dec
xor
popa
jb
add
add
jbe
popa
dec
outs
push
je
inc
add
add
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
inc
jb
inc
outs
jo
add
add
pop
popa
ins
ins
ins
jne
add
add
dec
je
outs
add
add
pop
inc
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
bound
add
add
jbe
popa
inc
jb
gs
je
add
