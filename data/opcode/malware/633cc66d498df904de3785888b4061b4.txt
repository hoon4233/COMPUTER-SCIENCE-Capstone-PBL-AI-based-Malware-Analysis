(bad)
(bad)
(bad)
call
jmp
mov
scas
or
outs
clc
pop
cmp
push
scas
std
outs
(bad)
dec
dec
sub
dec
(bad)
scas
pop
add
les
aaa
add
mov
daa
(bad)
(bad)
mov
mov
mov
xor
cmp
inc
fidiv
dec
add
nop
inc
(bad)
(bad)
cld
pop
mov
or
pop
or
push
sbb
clts
sbb
adc
adc
fs
inc
adc
push
mov
sbb
xor
pop
inc
mov
mov
std
retf
rcl
and
mov
cmp
pop
xchg
jae
les
(bad)
stos
jge
(bad)
jg
(bad)
icebp
cmps
call
lds
sti
jge
cmps
cld
int
mov
push
(bad)
(bad)
fild
cmps
mov
sub
mov
int3
lahf
mov
sbb
add
fild
fdivr
(bad)
dec
add
das
adc
outs
retf
in
mov
jbe
(bad)
add
jmp
mov
add
add
(bad)
shl
mov
(bad)
jmp
popa
dec
adc
xchg
mov
hlt
icebp
rcl
ds
pop
in
nop
call
call
push
add
das
les
inc
adc
shl
pop
sti
(bad)
fdivr
adc
lea
add
push
adc
(bad)
dec
jge
pop
pop
iret
mov
icebp
push
pop
aaa
popa
sub
retf
push
ja
(bad)
dec
rcr
test
fld
scas
sti
push
call
jo
movs
cmp
call
loope
adc
mov
(bad)
in
adc
add
add
add
inc
pop
push
push
add
mov
add
aaa
sub
add
inc
jnp
aas
scas
xchg
push
push
loope
mov
sbb
jg
jb
jns
(bad)
jmp
xchg
xor
xchg
add
sets
pop
cdq
pop
pop
pop
clc
jne
(bad)
fisttp
aaa
addr16
das
popf
mov
lea
pop
cmp
push
popa
daa
nop
fsubr
test
in
xchg
(bad)
lea
(bad)
call
jae
test
fs
mov
push
push
push
push
push
je
(bad)
(bad)
inc
push
jns
inc
inc
mov
push
cld
js
mov
loope
dec
push
sub
ret
sbb
(bad)
cld
jg
jp
or
ins
push
xor
mov
push
das
mov
sbb
lea
lods
dec
xchg
jmp
(bad)
(bad)
(bad)
call
jmp
push
in
loope
cmp
sbb
push
sub
outs
inc
mov
cwde
lock
(bad)
sti
push
fisttp
inc
mov
or
fdiv
data16
dec
cli
fimul
push
(bad)
(bad)
(bad)
fistp
add
add
sbb
mov
test
es
jmp
in
pop
mov
and
pop
popa
out
fnsave
(bad)
jne
sub
(bad)
(bad)
jg
jge
gs
shl
inc
repnz
xchg
sub
inc
mov
ret
and
stc
(bad)
aas
cld
(bad)
mov
jg
ffreep
xchg
fild
dec
cs
pop
jecxz
push
cdq
jg
xchg
(bad)
arpl
out
cmc
icebp
ret
sub
out
mov
das
(bad)
jmp
add
outs
icebp
leave
sbb
fs
iret
movs
iret
mov
shl
push
pop
inc
add
mov
mov
pop
movs
int
stc
adc
push
jmp
(bad)
(bad)
clc
sub
add
stos
out
in
leave
jne
mov
sub
jb
int
scas
das
(bad)
(bad)
inc
lea
cmp
dec
or
mov
jge
hlt
sbb
pop
call
pop
or
xor
or
or
xchg
xchg
push
xor
dec
jl
xchg
dec
daa
xchg
(bad)
std
(bad)
(bad)
inc
fcmovu
fwait
sbb
mov
and
mov
retf
scas
pop
jmp
xor
xor
dec
push
pop
dec
(bad)
mov
cdq
jmp
jb
test
ja
outs
aad
mov
mov
dec
je
mov
jg
ror
icebp
pop
ja
movs
xor
push
jmp
xor
mov
aad
mov
adc
or
or
push
(bad)
(bad)
(bad)
in
xchg
mov
adc
and
xchg
mov
or
push
push
jae
jne
and
mov
add
or
iret
call
jle
icebp
jmp
or
aaa
sti
sub
(bad)
inc
xchg
mov
mov
sbb
ret
adc
test
adc
jmp
xor
loop
test
xchg
iret
push
jge
mov
stc
(bad)
jmp
inc
dec
rol
in
pop
stos
xchg
cmps
idiv
data16
les
mov
(bad)
outs
jmp
push
cmp
aad
dec
scas
push
push
out
mov
outs
mov
div
cmp
(bad)
cli
outs
mov
sbb
sbb
dec
das
mov
push
or
cmp
or
aaa
dec
ds
xor
fnstenv
(bad)
loop
pop
xlat
inc
mov
dec
push
arpl
inc
bound
mov
arpl
xchg
adc
mov
push
(bad)
jmp
sub
mov
mov
inc
mov
iret
out
mov
cmps
or
jnp
jb
dec
jmp
xor
cmp
and
data16
sbb
xor
push
fimul
jnp
fnsave
and
inc
inc
mov
popf
or
cmp
or
lahf
sbb
xor
add
or
hlt
mov
retf
cdq
xor
xor
dec
xor
retf
push
lods
dec
out
dec
adc
jns
xor
mov
xchg
xor
dec
std
mov
jne
mov
xchg
std
xlat
jl
pusha
xor
dec
mov
mov
xor
add
jno
jg
call
jge
retf
outs
scas
dec
cmp
fwait
out
sub
int
inc
call
sbb
or
xchg
adc
dec
ret
and
or
pop
ins
mov
xchg
retf
dec
sub
into
pop
sbb
outs
clc
imul
cmc
or
mov
pop
iret
das
inc
push
or
in
or
dec
or
int3
adc
js
xor
pop
scas
mov
inc
inc
and
or
mov
mov
(bad)
dec
xlat
ins
mov
jae
iret
jno
push
not
jmp
das
je
lods
dec
out
sub
or
inc
inc
out
xchg
(bad)
repnz
data16
or
dec
push
cmp
fucom
clc
and
outs
dec
aaa
push
ret
xchg
push
xchg
sbb
imul
pop
out
or
out
ja
icebp
add
loopne
bound
dec
mov
cmp
push
cmp
jmp
data16
xchg
fld
lods
daa
ja
xor
inc
sti
std
int
jae
dec
sub
sbb
pop
push
add
xchg
mov
jmp
fwait
mov
imul
(bad)
mov
xchg
push
and
xlat
dec
xchg
push
ret
mov
inc
adc
inc
cmp
out
imul
jae
iret
fwait
mov
adc
cmp
dec
imul
push
mov
ss
xor
pop
and
das
jmp
out
int
jmp
inc
or
mov
inc
mov
mov
std
jg
mov
stc
mov
fstp
rcr
cmp
adc
retf
pop
(bad)
xlat
jle
lods
cmps
mov
aaa
aaa
xchg
mov
xchg
jnp
inc
cmps
cli
and
aad
lahf
icebp
stos
or
add
loopne
sub
dec
jae
data16
test
stos
fnsave
into
cmps
(bad)
adc
pop
js
pop
scas
dec
(bad)
jg
lods
outs
xchg
cmp
push
cmp
jmp
cmp
adc
add
test
(bad)
jg
outs
adc
add
mov
and
dec
jne
or
es
pusha
outs
push
or
mov
mov
cmp
rol
nop
cs
dec
add
addr16
mov
fst
jmp
cmp
jp
or
mov
dec
dec
(bad)
call
or
ret
dec
jae
jno
add
mov
scas
jg
std
add
movs
outs
adc
or
aas
in
outs
hlt
je
or
int
xchg
xor
jne
popf
std
and
dec
jbe
and
sub
jmp
(bad)
mov
mov
rol
jmp
jae
push
dec
iret
inc
inc
cli
ss
sbb
aaa
cmp
das
or
sub
pop
aad
mov
aad
mov
dec
mov
sbb
das
fld
inc
or
ja
fcmovnbe
call
jne
div
dec
dec
xor
mov
adc
cmp
inc
ins
fwait
jle
cmc
push
pop
call
mov
cli
scas
inc
sti
mov
gs
dec
outs
std
or
or
mov
int
(bad)
(bad)
(bad)
mov
xchg
xor
fbstp
push
bound
push
mov
adc
rep
add
add
dec
xchg
lea
lock
mov
add
in
fwait
sub
dec
xchg
push
fs
pusha
dec
xchg
(bad)
aas
inc
and
xor
div
rol
or
xor
ins
ins
sub
or
mov
dec
xlat
xchg
fistp
das
nop
adc
out
cmp
sar
dec
bnd
(bad)
scas
inc
pop
and
(bad)
pop
inc
jae
or
out
mov
sbb
cld
add
inc
stos
iret
das
jae
pop
jmp
shl
jle
xor
loop
dec
outs
or
outs
inc
nop
add
or
mov
jmp
loope
icebp
mov
jmp
or
pop
sub
jo
sbb
mov
dec
fild
and
mov
fist
push
cmp
jb
xor
inc
outs
jmp
int
mov
xchg
lahf
or
aam
ins
fld
lods
outs
push
jp
sbb
jecxz
inc
ss
retf
push
mov
(bad)
div
mov
call
xor
test
xor
arpl
jl
(bad)
jle
test
sub
ror
xlat
sub
lahf
pop
sub
dec
loope
lea
scas
inc
xchg
xchg
cli
xor
sbb
dec
mov
push
inc
mov
jo
retf
and
add
not
jae
fsub
adc
outs
fisttp
outs
mov
jae
sub
sti
scas
or
lahf
call
test
mov
cdq
inc
xor
mov
fnsave
pop
or
dec
ds
ja
or
int
int3
sbb
ficom
mov
fwait
int
(bad)
pop
jg
test
xchg
cli
sub
fmulp
jae
mov
adc
xor
iret
or
push
ret
aas
mov
sti
pop
sbb
fild
call
lds
shr
jo
push
sub
mov
push
loopne
fbld
jl
sub
sti
add
ror
or
cmp
(bad)
add
push
mov
xor
mov
add
or
push
dec
inc
or
jl
sbb
adc
push
fbstp
std
adc
out
mov
repz
push
call
std
movs
sbb
push
add
ror
dec
out
cwde
mov
pop
sbb
sub
mov
mov
call
mov
sbb
or
push
cmp
dec
hlt
sti
xchg
mov
xlat
xchg
sbb
and
lock
push
jl
(bad)
mov
mov
imul
jnp
mov
retf
stc
fmulp
adc
push
or
adc
jmp
xchg
jb
fdiv
xor
cld
aas
jbe
jmp
mov
bnd
mov
sar
mov
xor
sub
xor
inc
fstp
cld
outs
cmp
das
repnz
push
aaa
add
mov
daa
jmp
add
pop
or
test
xchg
adc
rcr
in
ins
cld
sub
push
mov
fwait
ja
jg
lock
sbb
stos
repz
das
imul
xchg
into
add
add
out
pusha
jecxz
es
addr16
cli
in
fld
repz
inc
jmp
out
add
dec
dec
dec
lahf
arpl
xor
mov
cmp
and
and
adc
js
mov
add
out
jmp
push
add
imul
into
lods
out
daa
out
mov
(bad)
ret
push
or
int
pop
sti
add
mov
mov
add
imul
xchg
fwait
icebp
cmp
je
xchg
cmps
xchg
jae
jg
cmp
daa
push
cmp
hlt
adc
xchg
aaa
cli
cmp
xor
push
cmp
mov
mov
xchg
in
dec
mov
ja
or
pusha
dec
icebp
rol
mov
inc
imul
ffreep
jae
xchg
or
xor
cmp
outs
adc
or
movntq
out
(bad)
test
xor
inc
jo
data16
ret
dec
inc
scas
push
(bad)
push
sti
shr
jecxz
mov
hlt
pusha
daa
adc
pop
cwde
into
pop
ret
(bad)
push
sub
mov
sbb
inc
mov
xchg
rcr
mov
sbb
pop
retf
jle
inc
(bad)
fild
not
adc
jo
and
jp
aaa
push
std
jmp
into
or
cmp
fidivr
aaa
xchg
les
inc
pop
repz
fucomip
mov
int3
dec
sub
and
aaa
fadd
add
mov
fwait
add
loopne
push
ret
adc
je
(bad)
scas
fisttp
clc
dec
xchg
gs
and
int3
jne
mov
daa
pop
xchg
ins
or
daa
int3
sbb
inc
jne
push
dec
fist
xor
mov
arpl
pop
mov
push
(bad)
mov
sub
dec
std
dec
cwde
push
(bad)
mov
cs
leave
ficomp
mov
xchg
aam
inc
js
icebp
pop
xor
dec
ja
test
hlt
ins
ret
mov
dec
dec
sbb
daa
pop
ins
xchg
(bad)
xchg
pop
push
movs
(bad)
jb
imul
into
xchg
int
fnstcw
ret
imul
fld
je
or
jb
adc
push
push
mov
xor
int
(bad)
and
movd
add
test
retf
mov
pop
fistp
add
sbb
repz
rol
xchg
add
push
pop
out
rol
aam
neg
adc
push
bound
xor
iret
loope
xor
pavgw
psrlq
(bad)
div
nop
pusha
jle
jecxz
inc
iret
xchg
test
mov
mov
out
bsr
ficom
dec
sub
xchg
icebp
adc
enter
xlat
pop
xlat
or
ins
pop
xor
and
cmps
adc
ss
or
push
sbb
adc
js
and
retf
lahf
daa
aas
mov
pop
mov
mov
mov
imul
std
and
cmps
repnz
jb
pop
pop
sbb
arpl
ja
mov
das
push
cmp
test
jae
pop
adc
push
mov
dec
pop
jg
aaa
jno
xor
push
ss
push
cmps
jmp
push
jecxz
xor
fmul
rcr
mov
jge
pop
mov
ror
gs
pop
xchg
cmp
xchg
lea
pop
cs
dec
out
mov
stos
inc
inc
mov
mov
adc
arpl
xor
lods
mov
pop
xchg
pop
seto
mov
ins
push
fiadd
rcl
mov
fwait
and
add
mov
xor
pop
mov
mov
mov
icebp
mov
cld
cmp
lds
call
fdivrp
ret
sbb
cli
outs
ds
jl
ins
mov
dec
xor
cmp
dec
pop
sub
adc
add
retf
cmps
mov
shr
or
push
pop
fisttp
mov
inc
jo
lea
cmp
div
test
and
inc
lea
call
xchg
mov
dec
mov
fwait
mov
dec
rol
pop
out
cli
das
mov
dec
sbb
xchg
add
sbb
xlat
dec
sbb
sbb
retf
pop
jb
mov
imul
ficomp
mov
or
push
mov
pop
out
ds
xchg
fbld
(bad)
rcl
pop
sti
and
or
popa
out
or
test
jno
push
pop
jb
jns
adc
icebp
test
and
xor
add
fisubr
mov
sti
enter
jg
mov
aas
outs
add
push
rcl
sub
cld
ror
mov
stos
sbb
in
dec
dec
pop
xchg
mov
ins
mov
call
out
ror
pop
cmp
push
test
retf
les
into
xchg
cdq
es
jmp
adc
pop
clc
(bad)
jmp
sub
mov
push
inc
jg
inc
cmp
mov
mov
test
or
xor
cli
mov
xchg
pop
arpl
mov
mov
or
xor
push
sbb
data16
jmp
add
and
add
addr16
mov
retf
lds
adc
mov
pop
sub
rcl
repnz
adc
std
mov
jne
bound
inc
js
adc
scas
lods
or
xlat
aaa
in
ss
pop
(bad)
mov
ror
jbe
scas
pop
(bad)
cld
pop
and
in
and
mov
out
inc
mov
and
cmps
xchg
pop
mov
bound
xchg
loop
sbb
pop
dec
pop
mov
call
mov
push
ret
ror
popa
ja
stos
ja
jmp
aam
cli
retf
push
cmp
(bad)
shl
cmp
dec
and
xor
daa
adc
adc
or
add
retf
ss
push
aam
xchg
aad
mov
add
push
std
stos
jmp
and
outs
cld
adc
shl
rol
fwait
and
push
cmp
add
xchg
cdq
xor
push
das
orps
inc
fbld
sbb
xlat
inc
nop
or
aaa
cmps
push
add
ss
add
(bad)
push
scas
push
xlat
jns
push
(bad)
jle
cmc
or
xor
ins
sar
gs
idiv
call
dec
xchg
pop
mov
rcl
aas
fwait
add
and
jae
adc
jg
ins
aas
ja
fild
nop
sbb
sar
fild
sbb
jg
iret
cmp
rcr
pop
das
or
aas
dec
dec
adc
scas
fsin
mov
fsubr
or
jo
xchg
cmps
push
(bad)
xor
mov
mov
rcr
jb
outs
mov
movs
int3
sbb
or
inc
test
mov
add
pop
fcmovu
xor
pop
clc
in
pop
cmp
mov
dec
fnstsw
mov
into
sar
mov
xchg
in
mov
mov
pop
lahf
cli
cs
div
ret
adc
cmp
sub
fistp
cmp
sar
outs
ins
call
cmp
aas
out
xchg
arpl
mov
mov
js
hlt
and
aam
push
mov
mov
ins
loope
test
fadd
mov
stos
hlt
out
mov
push
dec
xchg
bound
sbb
test
sub
or
clc
pop
push
mov
aaa
or
jnp
or
clc
pop
ins
cmp
push
jo
repnz
(bad)
in
aaa
jbe
or
not
inc
(bad)
push
int3
sti
retf
jmp
xor
jbe
sti
leave
mov
inc
cwde
ret
retf
jne
stos
pop
div
fwait
cmp
or
push
adc
scas
hlt
imul
rcr
(bad)
retf
xlat
inc
or
(bad)
outs
ins
xlat
(bad)
dec
inc
(bad)
jnp
test
outs
inc
mov
sbb
inc
add
dec
dec
cmps
lea
jg
das
pop
jle
aaa
dec
sub
mov
dec
xor
xchg
xchg
sbb
mov
(bad)
jmp
mov
repz
aad
mov
push
xchg
pop
call
das
arpl
sbb
fstp
mov
int3
mov
dec
sbb
movs
jge
xor
and
sar
mov
test
mov
icebp
in
xchg
movs
push
inc
inc
adc
xchg
push
mov
scas
aas
xor
or
sar
push
pop
enter
scas
inc
adc
fcmovnu
xchg
test
(bad)
dec
cmp
(bad)
xchg
sti
test
(bad)
ss
add
adc
xchg
jp
cwde
mov
inc
enter
jae
shr
popf
aas
dec
xchg
sub
dec
outs
cld
in
rol
push
daa
push
mov
outs
push
lds
jae
jae
jmp
or
(bad)
jle
or
add
mov
sbb
leave
dec
sbb
xchg
clc
pop
ret
push
pop
dec
adc
popf
cmc
jg
jne
push
mov
retf
arpl
aaa
outs
inc
xor
push
ror
add
mov
dec
and
mov
push
pop
xor
ja
cmp
xor
dec
psllq
repz
push
push
test
sbb
add
xchg
or
icebp
call
xchg
cmp
(bad)
adc
out
push
fdivr
jecxz
pop
neg
or
or
push
jb
xchg
jecxz
test
fsubr
push
jmp
lods
fwait
xchg
fcom
iret
(bad)
pop
xor
xchg
std
cmc
and
(bad)
rcr
and
or
push
jle
adc
fwait
push
push
jbe
mov
jmp
xor
inc
ret
jg
xchg
pop
push
jae
cmps
pop
mov
out
in
call
jae
imul
xchg
arpl
dec
sub
or
and
push
lea
pandn
xchg
daa
mov
aas
pop
cmp
mov
xlat
je
pop
jne
lahf
out
scas
sahf
retf
push
dec
pop
or
xor
in
xor
pop
push
add
push
and
stc
lods
mov
shl
mov
xor
mov
stos
or
mov
xor
aas
outs
pop
pop
mov
xor
clc
or
jge
lds
fstp
(bad)
adc
mov
mov
inc
scas
xchg
and
mov
mov
pop
pushf
mov
jae
push
or
jp
xor
xchg
push
pop
das
mov
or
nop
sbb
pop
mov
add
jge
mov
cmp
mov
push
push
sti
test
in
retf
mov
push
push
cmp
fld
jecxz
push
fwait
xor
sub
jmp
xchg
dec
dec
xchg
(bad)
adc
xor
dec
and
fldenv
retf
mov
or
fmul
ins
dec
lods
jbe
sub
or
pop
mov
cmps
mov
das
push
xchg
rcl
shr
sbb
mov
dec
cmps
das
add
jmp
push
ss
fnstsw
retf
cmps
imul
cmps
imul
lock
xor
stos
push
xor
jmp
push
sbb
jb
call
(bad)
push
add
add
add
fwait
std
and
cmps
mov
mov
or
out
add
pop
dec
pop
stos
das
mov
cld
and
aaa
sub
arpl
popa
ja
mov
mov
ins
lahf
adc
or
fbld
int3
mov
cmc
retf
jmp
push
push
push
add
add
rcl
xchg
lahf
xchg
cmp
gs
pop
loop
add
or
repnz
retf
xchg
gs
mov
mov
fisub
imul
xchg
xlat
inc
(bad)
sbb
outs
add
mov
retf
xchg
pop
mov
sub
push
loop
outs
(bad)
dec
sub
cmp
leave
cmp
aaa
mov
dec
push
pop
loop
xlat
shl
cli
das
stos
jl
aad
sti
mov
or
call
cmp
jmp
test
add
rol
pop
mov
sbb
call
xlat
jb
xchg
jne
mov
jne
sbb
jg
or
stc
or
outs
(bad)
xor
xchg
xchg
add
mov
pop
xchg
dec
ffreep
xchg
xchg
call
jmp
(bad)
cld
(bad)
pop
loopne
jge
ror
cmp
mov
add
xchg
(bad)
cmp
and
hlt
mov
dec
mov
pop
cmp
jecxz
stos
add
xlat
xor
xchg
push
inc
push
jmp
and
pop
iret
mov
ret
or
pop
std
pop
mov
shl
xchg
fistp
mov
(bad)
sbb
push
or
(bad)
fidivr
inc
xchg
ins
sti
mov
mov
jmp
das
(bad)
fidivr
fs
sbb
cmc
jmp
mov
mov
inc
inc
mov
iret
fild
retf
call
mov
jne
jmp
pop
add
leave
dec
fst
sub
sub
fwait
or
push
mov
mov
and
aad
mov
jg
mov
shl
sti
cwde
nop
xlat
(bad)
inc
inc
mov
cmp
xlat
xor
hlt
fild
ss
lahf
and
or
ret
fild
xchg
ficom
ss
pop
loop
xchg
dec
hlt
add
cmp
ret
xlat
mov
xchg
xchg
sub
iret
sbb
jecxz
les
jo
dec
sub
pop
mov
call
pop
xor
jnp
cwde
mov
jle
fist
stos
or
outs
or
xchg
jecxz
jle
push
and
jno
inc
dec
call
test
retf
or
push
and
(bad)
data16
das
push
dec
pop
push
bound
mov
dec
loopne
jnp
not
cmp
fdivrp
xchg
imul
adc
xor
xor
lock
xlat
or
mov
ror
cmp
or
mov
add
rcr
jnp
xor
ror
aas
xor
mov
out
(bad)
jge
cmp
pop
mov
mov
sbb
repnz
shl
repnz
cmc
dec
dec
fwait
arpl
dec
fwait
sub
pop
fidivr
fisttp
sbb
adc
fwait
add
xor
imul
ss
jge
cli
imul
addr16
sbb
stos
or
pop
sub
aas
rol
mov
je
push
cwde
fimul
jb
mov
pop
sub
pop
sbb
jno
outs
or
push
and
pop
retf
fwait
lods
scas
out
inc
daa
dec
jb
pop
mov
pop
aaa
jb
mov
sbb
xchg
dec
xchg
minps
jmp
jbe
dec
dec
scas
jnp
or
or
stos
dec
xlat
sbb
lock
es
call
(bad)
add
xor
inc
je
int
lods
(bad)
stos
jge
ficom
sub
sbb
push
xchg
cmps
push
xor
out
sbb
adc
fs
jb
push
imul
and
xchg
fist
jmp
lds
cmp
ret
xchg
stos
push
aaa
cmp
test
test
sbb
outs
hlt
mov
pcmpeqd
(bad)
jmp
jmp
mov
rcr
pop
sub
xchg
xchg
dec
add
add
push
mov
pop
nop
cmp
cmp
das
sbb
fs
scas
jnp
loopne
xchg
outs
dec
pop
stos
inc
push
jae
mov
push
fild
call
xchg
push
jae
cli
call
or
and
xchg
mov
sbb
inc
sub
rol
sbb
inc
or
jg
std
jg
test
fild
lds
dec
add
imul
sar
scas
add
cmp
mov
lock
sbb
aad
js
add
jmp
loope
ss
ficomp
adc
mov
icebp
push
push
loop
fimul
cmp
xchg
xor
out
cs
mov
cmp
movs
sub
call
std
or
popa
xor
jmp
push
pop
mov
jmp
push
jo
jmp
out
xor
bound
jg
pop
in
sbb
push
push
icebp
pop
cmp
xor
aas
cmps
scas
jno
les
iret
mov
inc
shl
aaa
fcom
das
shr
add
jae
xor
inc
dec
jge
fxch
out
scas
cmp
cmp
arpl
das
cmc
outs
scas
jb
xchg
mov
xor
mov
pop
sar
aaa
ja
sbb
das
ja
xor
jmp
lods
cld
inc
xlat
ja
hlt
dec
mov
dec
mov
(bad)
aas
pop
pop
and
(bad)
lea
adc
inc
call
jnp
mov
xor
dec
cmp
dec
into
xor
dec
xor
pop
and
nop
das
jecxz
inc
jae
add
pop
mov
jae
hlt
adc
mov
inc
cmp
inc
rcl
inc
fwait
aaa
jb
je
rcl
das
jb
mov
in
pusha
pop
or
mov
aas
jnp
fbstp
xchg
dec
aas
(bad)
mov
push
pop
repz
mov
dec
xchg
sti
sub
inc
jo
xlat
aas
lods
pop
xor
ret
dec
mov
dec
stos
mov
adc
es
cmp
push
iret
xchg
outs
mov
add
jne
inc
inc
push
cli
(bad)
mov
enter
mov
retf
xor
dec
cmp
dec
and
adc
inc
dec
jae
mov
cmps
(bad)
out
or
outs
mov
sub
mov
inc
add
sbb
cmc
les
mov
nop
add
les
mov
add
jnp
out
and
ins
and
inc
sub
xchg
xchg
(bad)
(bad)
aad
dec
xor
push
pop
xchg
xchg
inc
mov
inc
inc
aas
cmp
outs
aad
int
mov
mov
movs
mov
mov
call
lahf
cmps
imul
push
stos
jnp
xlat
dec
push
fdivp
sub
scas
add
rol
(bad)
aas
xchg
push
xchg
or
dec
int3
jge
pop
js
mov
mov
xchg
mov
stos
jg
outs
jnp
ror
lods
jecxz
ja
jmp
(bad)
lahf
jp
out
pop
dec
imul
das
inc
mov
scas
rol
jae
rcr
outs
mov
mov
pop
push
add
xlat
inc
dec
sahf
retf
sbb
pop
mov
add
and
inc
arpl
movs
stos
push
xchg
daa
mov
push
dec
stos
test
pop
popf
jecxz
cdq
sti
pop
cmp
ss
shl
test
retf
retf
mov
ret
ret
mov
call
ss
ja
pop
cdq
dec
mov
dec
fcomp
adc
push
mov
jae
adc
push
sbb
jb
pop
loop
loop
int
or
jbe
mov
mov
pop
xor
pop
jbe
fnstsw
adc
addr16
xor
cld
pop
mov
cmps
(bad)
iret
ret
xor
push
dec
fbld
push
xchg
les
aas
ins
sub
mov
aas
push
add
push
out
or
jmp
inc
adc
gs
adc
adc
or
test
add
add
adc
or
(bad)
lods
ds
jmp
addr16
addr16
pop
sbb
mov
xchg
arpl
ja
adc
test
fwait
popa
cmp
xchg
sbb
outs
adc
retf
sbb
pop
(bad)
push
mov
ja
jg
mov
mov
imul
cmp
push
xchg
fmul
and
mov
xchg
mov
out
or
jae
icebp
mov
push
pop
jmp
outs
outs
adc
ds
out
out
push
and
pop
stc
(bad)
scas
icebp
imul
lock
mov
sbb
ret
out
hlt
fst
mov
sbb
inc
cmp
movs
mov
push
fwait
xchg
shr
mov
dec
xchg
push
push
xchg
jmp
psrad
icebp
sbb
sti
pop
(bad)
cmc
int
mov
loop
adc
jae
icebp
xchg
jg
mov
xor
shr
fstp
xchg
out
das
mov
push
xor
sbb
dec
out
sbb
pushf
push
cwde
xchg
dec
(bad)
pop
retf
sbb
fisub
sub
scas
arpl
outs
and
adc
dec
xchg
and
adc
(bad)
or
mul
pop
jbe
ror
mov
movs
jle
sbb
jmp
idiv
out
add
sub
xor
add
sar
outs
cvtps2pd
push
push
add
clc
mov
ja
mov
jmp
adc
aaa
adc
(bad)
jo
push
add
dec
mov
cmc
ror
loopne
xor
(bad)
stos
xor
cmps
and
and
xor
stos
xchg
or
mov
mov
iret
sti
int
lea
jb
mov
add
inc
out
pop
or
fidivr
mov
mov
mov
or
sub
cmps
pushf
aaa
pop
rcl
adc
sar
pop
aaa
xchg
mov
inc
das
fwait
ret
ja
xchg
cmovp
lods
mov
adc
test
(bad)
mov
push
int3
jmp
pop
mov
xchg
test
test
lahf
in
pop
test
mov
jo
mov
adc
mov
lods
(bad)
pop
mov
dec
mov
or
test
push
jp
fs
sbb
das
icebp
shr
mov
add
stc
xchg
pop
rcr
dec
inc
inc
mov
movs
retf
rol
push
test
sub
imul
inc
add
(bad)
fcomip
iret
jl
mov
xlat
dec
mov
inc
(bad)
rol
mov
push
pop
pop
call
or
retf
mov
cmp
dec
add
int
pop
push
jae
jmp
or
sbb
sub
xchg
or
loopne
ret
ret
pop
dec
ret
push
cmp
mov
mov
rcr
ds
cmp
cmc
pop
sbb
xchg
fstp
add
sbb
aaa
cs
xchg
pop
jmp
enter
(bad)
cmps
bnd
dec
dec
jmp
and
or
add
pop
push
jae
arpl
imul
popf
sbb
outs
push
dec
dec
or
ror
(bad)
or
fdiv
(bad)
rcr
jbe
cld
mov
dec
and
sti
in
idiv
dec
mov
or
adc
add
neg
sub
sbb
xchg
das
stc
xlat
or
imul
cmp
or
or
outs
mov
xchg
xchg
add
push
pop
cld
jo
or
mov
jle
sbb
mov
xor
adc
pop
inc
arpl
jmp
sub
xchg
fst
bound
pop
xlat
dec
(bad)
daa
pop
jg
or
bswap
out
cmp
mov
out
adc
sbb
lea
cmps
adc
(bad)
push
sbb
lahf
sub
test
jp
or
outs
cmp
outs
xlat
mov
mov
xlat
dec
jg
and
or
cmp
pop
push
lahf
repz
xchg
ds
imul
pop
xchg
inc
push
das
xchg
xchg
push
das
or
clc
icebp
pop
mov
in
jmp
daa
mov
ins
(bad)
lods
jns
xchg
dec
outs
mov
pop
ss
neg
xchg
xlat
add
retf
(bad)
mov
cmp
ja
xchg
setnp
inc
ret
pop
sti
fild
fisttp
dec
or
jmp
push
dec
rol
icebp
pop
mov
jmp
cmp
cmp
call
cmp
sbb
das
mov
mov
daa
push
adc
push
popa
adc
das
adc
pop
int
scas
fdivr
or
fidivr
xor
ja
hlt
xor
test
sti
inc
jg
and
mov
jbe
push
push
aad
pop
test
sub
mov
clc
fld
or
aam
dec
xor
pop
shl
test
aaa
fiadd
les
cmp
sub
(bad)
mov
xor
mov
ror
scas
jle
adc
aaa
hlt
aaa
and
fcomp
or
inc
pop
int3
push
aaa
mov
test
or
test
pop
push
cmp
aad
xchg
sub
sbb
sbb
addr16
repnz
xchg
sbb
fld
mov
mov
cdq
push
pop
cld
aaa
(bad)
adc
sub
sar
adc
jmp
(bad)
and
outs
push
fwait
outs
cld
movs
cmps
sub
cmp
outs
aaa
mov
jns
mov
push
(bad)
push
or
outs
sti
push
jge
push
mov
push
mov
rcl
pop
xor
mov
jmp
cmps
das
cmp
inc
adc
cmp
cld
add
out
xchg
test
fwait
push
xchg
(bad)
movs
movs
arpl
push
std
iret
xchg
test
dec
cmc
xor
inc
out
(bad)
jmp
lods
sbb
xchg
fsubr
imul
pop
sub
or
cmp
inc
rcl
and
data16
jl
add
adc
cli
or
push
cwde
or
mov
fcmovne
shl
cmp
sub
(bad)
xchg
mov
jmp
or
push
xchg
lods
mov
fwait
push
daa
cmp
mov
push
(bad)
call
cld
adc
daa
lods
retf
mov
or
or
test
ss
(bad)
fisttp
sub
or
sub
dec
xchg
cmovle
jp
cmps
aaa
loop
sub
cmp
sub
dec
pop
test
in
cmp
aaa
xor
xor
xchg
xchg
add
mov
lock
or
or
push
jl
lahf
mov
(bad)
and
arpl
jmp
and
dec
inc
push
div
loopne
shl
mov
int
and
add
ins
jge
pusha
mov
pop
sar
dec
dec
scas
ds
xchg
pop
cmp
lahf
inc
fdivp
stos
xor
lahf
mov
xor
push
dec
jle
call
ins
xor
xchg
nop
push
and
xchg
or
fstp
push
xlat
push
les
outs
ins
aam
adc
sub
(bad)
inc
push
xor
std
cmp
jl
or
unpckhps
clc
cmc
sbb
push
jecxz
out
mov
push
fcomip
jp
jecxz
jle
mov
dec
jmp
jb
add
pusha
imul
pop
sti
jp
mov
ds
mov
das
xchg
jmp
stc
sbb
or
pop
jle
and
cmp
push
fwait
test
in
xchg
or
xchg
cli
std
xchg
cmp
inc
out
test
inc
mov
retf
out
add
pop
inc
mov
cmp
jns
adc
push
inc
stos
jle
or
dec
adc
js
(bad)
mov
inc
addr16
popf
jecxz
dec
lea
mov
mov
adc
mov
ret
adc
add
daa
ins
xchg
shr
outs
inc
mov
pop
sbb
push
cmp
fadd
int
mov
test
popf
call
or
pop
jmp
pop
and
add
retf
xchg
bswap
push
rol
pop
call
sysret
hlt
inc
mov
outs
fild
jmp
arpl
out
call
xchg
mov
dec
iret
(bad)
fstp
sub
fist
mov
adc
seta
test
loopne
jge
aaa
pop
pop
and
jno
mov
ja
mov
das
fcmovne
aaa
iret
fnstcw
outs
(bad)
mov
pop
inc
arpl
fadd
pop
jb
adc
jbe
or
dec
jmp
sbb
xor
dec
pop
or
and
push
or
push
mov
shr
pop
mov
add
pop
jb
mov
mov
fdivr
(bad)
(bad)
jecxz
mov
jg
pop
bound
sbb
sub
mov
clc
xor
jecxz
cmp
mov
std
adc
stc
jle
mov
jg
cmp
pop
push
mov
mov
mov
ja
pop
sub
fwait
jmp
push
mov
push
push
mov
into
sbb
or
outs
jle
lds
cmp
fdivr
cmp
xor
iret
iret
test
inc
fmul
aam
das
icebp
xor
dec
ror
xchg
xchg
xchg
js
lods
out
das
movups
fsub
xchg
in
jecxz
mov
inc
mov
jmp
mov
sbb
mov
mov
cmp
xchg
mov
aaa
cli
mov
xor
inc
pop
jae
xchg
push
inc
or
add
add
sbb
xor
popa
fbstp
add
add
fdivrp
ja
cmp
xchg
and
aam
mov
pop
and
into
mov
pop
mov
and
mov
pop
xor
cmc
hlt
sub
or
jo
jmp
ret
push
inc
das
inc
push
test
jge
rdpmc
mov
pop
lods
mov
sbb
xchg
(bad)
mov
push
imul
scas
daa
cmp
pop
cmp
jge
inc
dec
sub
in
push
mov
dec
sub
xchg
imul
push
mov
or
in
inc
inc
mov
out
ficom
movs
mov
dec
cmovno
call
idiv
icebp
mov
jb
pop
xor
arpl
lods
repnz
cmp
in
mov
pop
sub
mov
js
addr16
mov
xchg
mov
aaa
daa
test
pop
xchg
add
sbb
pop
xchg
es
xchg
and
(bad)
mov
and
sti
inc
xor
pop
shl
cmp
push
push
dec
pop
adc
aad
dec
inc
dec
dec
shl
cld
adc
mov
add
cmp
(bad)
call
cld
mov
addps
xchg
mov
(bad)
call
mov
inc
pop
adc
fbstp
lods
mov
shr
bound
loopne
mov
sub
and
mov
push
jmp
repz
test
out
cmp
inc
cmp
ds
add
sti
das
lds
(bad)
sbb
shl
dec
jb
or
fild
or
mov
or
mov
inc
and
add
das
dec
iret
(bad)
idiv
jg
ins
jae
dec
xor
hlt
and
aam
aaa
pop
nop
das
dec
add
mov
dec
add
adc
push
clc
iret
jge
add
sub
add
mov
dec
adc
dec
(bad)
mov
stc
(bad)
sti
sub
add
hlt
cmp
ja
or
cmp
lds
std
mov
push
add
retf
jle
ds
inc
jmp
sub
cmp
mov
adc
cmp
jae
addr16
mov
add
or
mov
sub
xchg
adc
cmps
inc
mov
xchg
jae
xchg
pop
cmps
xchg
cmp
pop
and
das
mov
dec
(bad)
mov
jb
mov
enter
cmp
movs
mov
not
dec
or
std
mov
ds
popa
outs
das
loopne
pop
xor
out
or
fsubr
xor
mov
outs
movs
jmp
pop
jb
fwait
lahf
push
movs
pop
add
icebp
dec
mov
xchg
(bad)
call
lea
or
sti
inc
sub
(bad)
stos
jmp
cdq
xlat
sbb
(bad)
rdpmc
mov
cmps
inc
xor
mov
jmp
jno
fistp
adc
push
out
outs
xchg
mov
adc
xor
mov
fstp
in
and
pop
add
dec
outs
xor
out
hlt
mov
out
xchg
outs
mov
jmp
push
add
mov
(bad)
ds
push
daa
or
jnp
daa
pop
rol
je
arpl
mov
inc
jmp
or
add
sub
fdivrp
jg
add
sbb
out
inc
jnp
dec
add
dec
pop
xchg
xor
cmp
cmp
add
mov
and
repz
std
ins
pop
pop
push
out
mov
std
mov
and
jnp
dec
popf
push
add
ins
fiadd
stc
mov
out
add
icebp
push
in
xchg
sub
dec
push
das
cmp
mov
mov
add
pop
std
jne
dec
and
pop
mov
hlt
sub
sub
or
scas
mov
mov
fwait
cmovb
dec
xor
mov
jno
mov
adc
xlat
sbb
test
inc
jg
jnp
pop
xchg
addr16
enter
pop
(bad)
ins
out
jg
adc
xchg
xor
push
das
imul
mov
mov
pop
xor
stos
xor
mov
mov
jmp
xchg
push
xor
jge
xchg
inc
test
das
xor
dec
hlt
jo
mov
push
cmc
retf
mov
inc
and
test
aad
jo
push
ja
das
lock
pop
(bad)
cmp
mov
xchg
xchg
inc
xchg
lods
test
mov
xchg
fdiv
xchg
cmp
push
jge
nop
add
ret
movs
popa
sbb
int3
xchg
cmc
xchg
call
inc
xchg
mov
sub
fild
mov
and
idiv
push
add
div
or
add
retf
mov
pop
cli
adc
repnz
sub
xor
lods
or
inc
pop
ins
(bad)
pop
mov
cmps
sbb
push
fwait
xchg
add
push
in
inc
or
mov
sbb
pop
fisttp
sar
in
jg
xchg
call
add
inc
lahf
scas
ja
shl
lods
outs
outs
(bad)
xlat
scas
push
cmp
pop
adc
outs
cmp
lahf
jb
xchg
jle
cmp
test
jp
retf
shl
cli
mov
aas
iret
add
jl
or
ins
mov
comiss
mov
push
fild
push
aaa
add
add
int3
popf
les
xor
push
add
ret
in
enter
xchg
xchg
cmp
not
or
xor
popa
lea
fild
or
fwait
sub
sbb
push
sub
mov
stos
fisttp
mov
jl
lods
dec
jae
jg
xor
push
inc
jo
inc
imul
cmps
sub
call
jae
add
fistp
add
outs
push
xchg
out
adc
call
icebp
stos
outs
add
xchg
dec
cmp
test
ds
jmp
idiv
mov
cdq
and
pop
xlat
imul
clc
jp
rcr
aad
das
jmp
xchg
(bad)
inc
push
push
ret
cld
loope
test
das
stos
push
or
mov
sbb
in
fstp
(bad)
lds
idiv
icebp
bound
dec
jp
(bad)
ret
add
mov
ror
(bad)
mov
mov
lock
ret
(bad)
addr16
inc
inc
pop
jb
pop
lock
mov
push
(bad)
push
(bad)
xchg
cmp
xchg
or
xchg
aaa
out
test
dec
fwait
jl
ins
loopne
add
push
mov
xor
dec
mov
cmp
out
in
fs
jecxz
ret
bound
cmp
loop
jecxz
imul
cmp
cmps
iret
mov
xor
pop
aas
or
mov
and
pop
out
movs
jecxz
(bad)
test
jae
add
scas
jmp
imul
imul
sti
std
xchg
cmp
mov
jae
imul
cmp
cmp
fwait
out
das
iret
pop
sbb
daa
aaa
fadd
js
push
gs
pop
(bad)
mov
aas
jmp
sub
xchg
xchg
ss
mov
cmp
jmp
add
add
inc
push
cmp
or
xchg
add
xor
jne
gs
jne
and
mov
leave
add
push
add
jmp
push
jb
add
mov
call
add
push
sbb
push
enter
std
jg
shl
add
sbb
mov
push
jne
pop
pop
dec
popa
add
mov
mov
cli
pop
hlt
add
adc
push
outs
or
xchg
and
mov
push
inc
jne
std
or
inc
xchg
xchg
jmp
stos
test
dec
shl
in
shl
shl
ret
mov
dec
jge
xor
test
mov
cmp
cmp
mov
mov
jmp
cmp
inc
in
and
retf
cmp
or
test
fcmovnu
outs
push
sbb
mov
push
sbb
arpl
or
stos
xchg
dec
fstp
out
icebp
pop
mov
mov
ss
cmps
pop
(bad)
cmp
popf
xchg
jp
xor
push
push
cmp
jle
arpl
shr
retf
pop
test
das
adc
call
mov
cmps
aas
mov
xchg
cmps
cli
jo
dec
test
cmps
add
pop
fdiv
cmp
jae
xchg
fwait
push
fstp
fistp
xchg
es
fcomp
inc
jnp
aas
or
(bad)
push
aas
das
inc
mov
mov
jb
leave
inc
call
fsubrp
pop
sub
mov
mov
lahf
aas
jle
(bad)
loopne
mov
adc
inc
dec
imul
xchg
mov
xchg
jo
pop
xor
push
push
or
mov
mov
addr16
xor
cmp
test
int3
mov
add
mov
aas
mov
aaa
mov
mov
xor
add
dec
scas
std
aam
test
(bad)
jmp
cld
and
adc
fwait
imul
in
stos
jle
lahf
xchg
push
cli
outs
pop
rol
sub
push
movq
pop
add
mov
popa
adc
dec
mov
add
mov
sbb
or
sbb
mov
pusha
(bad)
cld
cmc
test
leave
or
pop
or
(bad)
and
ficom
lods
dec
pushf
ret
push
sbb
and
not
add
ins
stc
jg
inc
xchg
out
inc
adc
xchg
(bad)
lock
ss
mov
xchg
pusha
imul
push
xchg
lahf
icebp
mov
push
dec
test
cmp
dec
jmp
iret
xchg
and
cwde
or
dec
cld
(bad)
cmp
fbstp
xchg
mov
inc
into
push
fs
cmp
in
mov
stc
xor
mov
fstp
lds
shl
or
mov
and
and
mov
test
add
push
xor
scas
add
sti
or
add
(bad)
daa
xchg
pop
lahf
mov
movs
retf
dec
jb
mov
lock
add
push
cmp
or
(bad)
push
fistp
hlt
data16
jno
out
mov
mov
call
call
loop
test
lock
test
and
xor
repnz
or
dec
mov
ret
dec
loope
or
iret
xchg
sar
inc
jmp
sbb
jo
aas
jle
sbb
mov
repnz
(bad)
shl
ins
addr16
dec
push
icebp
mov
jae
out
outs
and
in
or
es
rcr
in
cmp
mov
jnp
and
je
mov
aad
scas
or
mov
mov
jmp
xor
mov
sti
pop
out
push
jb
jno
daa
std
test
pop
mov
ficom
lods
fucomip
mov
adc
jo
add
(bad)
xor
mov
mov
mov
dec
iret
cmp
mov
add
ja
test
jb
cmps
and
hlt
iret
(bad)
and
sbb
(bad)
test
adc
push
pusha
adc
inc
add
cs
sbb
div
pop
loop
pop
sub
add
arpl
sub
rcr
ja
pop
pop
or
inc
jge
xchg
xchg
xchg
xchg
dec
sub
loopne
push
dec
and
cmps
pop
das
push
push
int3
dec
fsubr
daa
arpl
mov
pop
ficom
call
sbb
sti
mov
xchg
mov
fdiv
inc
sub
call
jg
loopne
sub
pop
cmp
xor
aaa
shr
dec
outs
inc
call
mov
fist
push
mov
cld
imul
into
loope
jle
mov
cmp
jno
dec
call
fwait
jp
cmc
data16
arpl
mov
nop
push
push
aaa
jno
jg
movs
stos
xor
push
retf
sub
int3
and
ins
pop
mov
and
push
inc
cs
mov
mov
fwait
(bad)
adc
(bad)
sbb
rcr
or
(bad)
pop
fcom
jg
scas
jle
std
and
pop
outs
and
dec
scas
xchg
fstp
fisttp
cmc
int
cmp
push
push
aaa
dec
push
sub
call
sub
lock
mov
fld
push
dec
loope
gs
clc
rcr
inc
sub
movs
(bad)
inc
outs
or
cli
xchg
test
int
inc
mov
loop
sub
xor
test
push
xchg
adc
jge
cmp
or
mov
mov
mov
push
pop
es
fstp
call
dec
push
pusha
inc
mov
pop
push
jge
dec
out
cmp
cmp
push
dec
jb
jmp
mov
(bad)
test
mov
and
stos
mov
mov
adc
dec
xor
pop
fsubr
mov
neg
mov
jo
repz
or
iret
mov
dec
in
pop
(bad)
pop
div
push
lahf
loop
int
ja
jae
jmp
arpl
fstp
in
addr16
sbb
mov
not
sub
add
enter
ret
pop
and
xor
xor
add
stos
add
dec
in
(bad)
fucomip
mov
xor
mov
pop
and
jne
ror
xor
jg
cld
dec
mov
push
in
pop
(bad)
cmp
mov
out
or
(bad)
add
mov
dec
mov
sbb
xor
int
xor
xlat
jae
push
push
inc
or
sub
xchg
mov
adc
xor
dec
mov
aaa
or
mov
push
push
loope
fild
xchg
cmp
cmps
(bad)
adc
sbb
pop
fsubrp
int3
mov
mov
adc
in
mov
push
dec
and
xchg
mov
das
sub
or
xlat
hlt
push
lods
cmc
stc
adc
icebp
daa
pop
ss
mov
(bad)
pop
pop
iret
repz
mov
xlat
dec
adc
xchg
scas
retf
cmp
push
test
add
or
pushf
pop
xchg
pop
test
ret
mov
pop
sub
or
cs
cmp
push
jae
ja
xchg
sub
call
(bad)
sar
push
mov
aad
mov
dec
mov
push
xor
scas
adc
(bad)
(bad)
(bad)
(bad)
cmp
xchg
ss
cmp
lock
sbb
sub
mov
dec
aas
xor
and
jg
mov
or
sbb
outs
mov
xor
addr16
mov
(bad)
sub
dec
add
gs
(bad)
aas
out
sub
sar
out
and
outs
mov
inc
addr16
and
mov
int3
fbld
out
aas
push
jmp
pop
mov
iret
repnz
push
cld
jmp
pop
mov
sub
aam
jg
scas
mov
mov
xor
add
or
iret
and
aam
mov
adc
mov
add
movs
dec
xchg
mov
cs
jle
adc
xchg
(bad)
hlt
idiv
push
push
call
pop
xchg
adc
xlat
call
jae
dec
call
ja
inc
adc
inc
mov
arpl
les
push
pop
mov
push
pop
mov
push
lock
fbstp
push
cmp
sbb
or
test
mov
aad
add
sbb
cmp
push
mov
test
mov
push
mov
xchg
mov
inc
imul
dec
xchg
add
or
js
inc
sbb
xor
stos
mul
(bad)
push
pop
push
aas
add
imul
imul
imul
cmps
imul
(bad)
(bad)
mov
daa
xor
dec
push
sti
fidivr
dec
dec
inc
cmp
ja
and
pop
and
call
push
arpl
call
jl
mov
mov
add
add
sbb
movs
sbb
not
out
jmp
shl
inc
popa
xor
add
xor
rol
or
pop
shl
pusha
jecxz
fxch
push
rol
push
cwde
nop
test
cmp
or
ins
aaa
enter
pop
cmp
jne
mov
imul
outs
jb
or
push
push
adc
add
fisttp
add
dec
inc
add
inc
adc
xor
cmp
sub
ins
in
(bad)
imul
jp
push
jg
aas
fbld
aaa
outs
outs
je
add
addr16
mov
(bad)
and
ins
outs
ja
cmp
cmp
pop
jbe
outs
aaa
ss
fs
div
nop
xor
jbe
jb
jne
sti
ins
lods
and
movs
arpl
and
ins
sub
xor
sub
pop
leave
pop
jnp
das
pop
push
fsub
pop
ja
pop
fdiv
cmp
outs
jo
pop
xor
(bad)
sbb
arpl
cmp
inc
mov
sbb
push
xchg
outs
and
ins
jne
lods
je
or
stc
mov
popa
das
ins
outs
arpl
out
rcl
mov
add
mov
ins
add
addr16
ins
pop
or
ss
xor
push
adc
test
sub
sub
iret
inc
clc
ds
jb
jne
jae
xor
data16
(bad)
sub
cmp
out
dec
sub
sub
imul
push
mov
dec
imul
sub
jo
push
and
push
aam
ret
pop
mov
add
fidiv
sub
ins
ja
sbb
je
popa
xor
loope
inc
add
push
scas
jne
adc
hlt
mov
fs
jae
addr16
outs
js
sbb
jmp
xor
sub
aas
dec
pop
inc
add
add
ins
jns
push
pop
xchg
add
adc
movs
movs
test
add
jo
jnp
(bad)
mov
sbb
push
and
jo
push
push
pop
iret
outs
mov
data16
aas
(bad)
mov
imul
jb
arpl
js
push
sbb
pop
sbb
aaa
jbe
jb
jb
pop
rcr
mov
bound
ins
stos
jb
sub
das
outs
mov
adc
sbb
(bad)
jmp
jb
jnp
pop
adc
ins
adc
ja
push
das
pusha
and
std
ffreep
mov
sbb
je
jo
outs
mov
(bad)
outs
mov
jnp
sbb
sbb
ins
xchg
push
scas
jb
outs
sti
int
sti
rcl
mov
push
sbb
ins
adc
or
outs
ja
sbb
pop
and
cmp
pop
ja
(bad)
fld
mov
adc
jo
xchg
je
sbb
das
test
pop
bound
cld
std
jmp
pop
jnp
jno
sub
out
and
and
jb
cld
jns
(bad)
ins
and
mov
sbb
mov
dec
aam
outs
sti
or
(bad)
jge
jge
addr16
scas
inc
jno
mov
mov
outs
mov
push
ja
and
jb
ret
jmp
or
lahf
daa
ins
pop
outs
inc
jb
jl
fdiv
push
inc
push
das
mov
(bad)
fiadd
mov
inc
sub
or
ja
std
mov
pop
xor
adc
imul
dec
fsub
ret
adc
popa
sbb
and
ins
adc
mov
sub
adc
jno
mov
outs
add
add
jg
(bad)
adc
arpl
cmp
popf
loope
or
arpl
rcl
jge
ins
sbb
lods
shr
mov
stos
sub
cs
xchg
jg
pop
dec
xchg
pop
ret
arpl
xor
js
push
and
pop
jle
imul
mov
ja
fwait
out
mov
adc
push
imul
dec
push
pop
pop
dec
sbb
shl
dec
jns
imul
ins
nop
inc
push
imul
mov
dec
inc
push
sbb
pop
popa
inc
call
inc
cmps
sbb
inc
fstp
sbb
jno
mov
adc
push
stc
or
cmps
sbb
nop
inc
push
sbb
rol
sbb
sub
mov
lea
fs
inc
icebp
lahf
gs
dec
ror
and
or
inc
loope
and
jne
or
rcl
and
dec
or
gs
inc
push
sbb
jnp
int
and
and
mov
in
adc
xor
and
popf
dec
xor
and
and
and
xchg
push
cmp
enter
push
pop
push
imul
inc
jg
aad
nop
inc
push
sbb
nop
inc
push
sbb
sbb
adc
sbb
daa
movs
ins
sbb
xchg
fs
rol
pop
ja
nop
rol
lds
pop
pop
xchg
jo
sbb
call
shl
cmp
mov
jp
xor
and
retf
push
xor
and
stos
or
enter
dec
jmp
enter
and
add
enter
xor
adc
xor
pop
push
pop
or
and
ds
and
shr
xor
and
and
or
repz
or
mov
or
jecxz
enter
ss
push
and
or
xchg
push
add
or
pop
sbb
and
or
jl
iret
and
scas
or
or
dec
out
or
fs
or
test
or
and
xor
or
enter
push
or
and
jmp
or
add
or
and
xor
adc
xor
sub
and
cmps
mov
ss
out
pop
cmp
setg
fs
pop
dec
dec
jmp
xchg
or
inc
mov
or
mov
and
loop
push
xor
push
into
scas
push
xor
inc
leave
fidivr
xchg
(bad)
mov
inc
leave
push
mul
out
inc
leave
push
leave
push
int3
lods
xor
inc
leave
push
fdivr
aam
leave
push
xor
and
leave
push
add
xchg
or
inc
mov
inc
leave
push
xor
push
and
sub
dec
mov
mov
sub
enter
lahf
dec
shl
pop
subps
fs
pop
sahf
cmps
jae
femms
bound
jmp
data16
or
popa
(bad)
je
dec
scas
cvtpi2ps
lahf
imul
fs
mov
leave
stos
jg
mov
push
sbb
bound
in
nop
xchg
push
push
or
dec
cmp
les
(bad)
(bad)
(bad)
aas
push
jbe
push
jge
push
adc
lods
push
adc
push
sbb
and
push
sub
(bad)
jmp
jnp
arpl
jl
pusha
and
adc
daa
mov
ss
dec
sbb
xor
sub
icebp
push
and
inc
and
jg
adc
and
mov
push
ret
adc
jb
jg
xor
mov
jge
arpl
xchg
(bad)
in
sbb
call
dec
shl
dec
dec
push
and
xor
pop
push
retf
mov
fild
inc
in
call
mov
push
lods
sbb
stos
sub
fistp
mov
push
adc
mov
lods
cwde
iret
imul
sub
jo
or
aas
mov
cdq
adc
xlat
jg
and
pusha
(bad)
fcomp
add
outs
adc
or
and
or
or
adc
or
call
addr16
xchg
dec
or
enter
or
mov
mov
dec
shl
adc
in
mov
imul
mov
inc
xor
and
and
dec
shl
fnstenvw
dec
adc
or
lahf
lods
jge
fcomp
sub
scas
sub
scas
stos
out
aaa
iret
mov
fisubr
stos
mov
in
fmul
pop
and
push
sub
dec
aas
dec
nop
and
dec
adc
jmp
pop
fsubr
loop
and
push
icebp
in
pop
scas
mov
scas
repz
pop
and
mov
jae
fdiv
sbb
xor
enter
ins
scas
inc
sbb
push
jnp
xchg
pop
add
ret
push
add
scas
lea
aaa
add
ins
jg
or
ins
aas
jg
add
sub
repnz
cmp
mov
or
nop
aaa
call
pusha
xchg
repz
dec
sbb
bts
or
(bad)
ins
pop
popf
sbb
pop
push
add
adc
dec
add
push
dec
js
and
fild
xor
cmp
jg
loopne
(bad)
(bad)
jmp
aaa
in
sbb
xor
ins
and
push
or
mov
sbb
test
(bad)
(bad)
push
dec
jno
outs
lods
or
ds
in
add
xor
dec
add
lea
loopne
(bad)
(bad)
(bad)
cmp
in
xor
cmp
mov
ret
mov
icebp
mov
mov
pop
ja
lods
std
in
mov
xor
pop
jl
out
mov
or
(bad)
(bad)
jmp
outs
jp
loope
jle
jecxz
xor
push
jnp
loopne
add
div
(bad)
(bad)
jmp
pop
xchg
or
inc
nop
inc
loopne
(bad)
xor
dec
jg
jecxz
jg
lock
jp
hlt
dec
jnp
cmc
cmp
(bad)
inc
inc
mov
fdiv
shl
sbb
push
push
mov
mov
xchg
add
(bad)
(bad)
call
adc
imul
js
daa
outs
dec
popa
and
ins
sbb
sub
(bad)
stc
(bad)
call
sub
scas
push
jb
jb
push
ror
mov
and
sahf
inc
cld
pop
cmps
mov
cmp
push
jns
add
stos
mov
mov
jg
jo
iret
daa
jns
inc
(bad)
retf
mov
iretw
xor
mov
fdivr
scas
aaa
mov
ja
cld
fistp
outs
(bad)
arpl
push
outs
(bad)
mov
scas
cmp
cs
jl
and
mov
jg
(bad)
jnp
jno
outs
mov
push
cmp
jnp
mov
mov
and
xor
cmp
lods
out
cmps
adc
(bad)
fisttp
scas
pop
aas
jo
inc
shl
mov
push
jb
lods
jae
jnp
fnstenv
pop
sub
pop
mov
and
ret
scas
imul
mov
bnd
and
push
adc
(bad)
mov
rol
sub
dec
shl
push
sub
inc
jl
and
fs
sub
add
iret
jge
outs
adc
push
pop
push
out
cmp
ins
cld
and
push
adc
shl
retf
scas
test
sti
pop
and
and
dec
sbb
inc
ins
pop
jae
in
sub
ins
push
adc
push
jnp
lock
pop
inc
jns
ja
mov
cld
ins
fild
xor
push
jnp
paddusw
jb
inc
push
loope
xchg
repz
or
aam
scas
dec
das
fnstsw
sbb
in
xchg
add
popa
mov
(bad)
inc
adc
scas
xlat
sub
ja
dec
and
cmp
cmp
es
std
dec
fnstsw
jo
cmp
adc
sub
adc
mov
adc
stos
outs
sbb
ret
inc
div
xor
jne
ins
sbb
(bad)
fucom
jo
mov
push
pop
add
outs
jmp
inc
push
lea
jecxz
mov
cmc
test
adc
ss
mov
dec
push
and
push
jnp
mov
jmp
aaa
outs
pushf
pop
pop
repnz
mov
fadd
dec
add
sbb
cdq
das
mov
mov
or
add
xor
shr
pop
jno
scas
pop
mov
ins
or
add
dec
cmp
or
fsub
aad
pop
(bad)
aas
adc
jge
shl
add
xchg
sub
sbb
jb
add
dec
jg
pop
mov
push
jle
cmp
cmp
pop
rcpps
pop
jnp
adc
(bad)
fcomp
or
add
inc
mov
push
out
jle
push
add
add
add
jp
aas
scas
iret
and
cmps
ins
and
outs
add
or
call
je
mov
test
push
push
fwait
les
adc
into
add
adc
adc
jbe
mov
inc
sbb
add
retf
gs
stos
push
and
fwait
and
frstor
and
add
mov
mov
sub
sti
sub
pushf
sub
xor
arpl
xor
jae
xor
in
add
xor
inc
cmp
popf
imul
jl
add
xchg
inc
sub
add
jae
lods
fild
xchg
inc
pop
inc
add
pop
dec
addr16
cdq
pop
mov
push
or
sbb
add
dec
mov
jbe
push
add
ins
pop
mov
add
pop
stos
pop
inc
popa
jnp
outs
mov
jbe
and
mov
(bad)
xor
ins
ins
add
outs
sbb
mov
pop
jbe
add
int
jmp
jns
jp
jge
jg
mov
jne
test
fild
imul
(bad)
pop
push
movs
test
jae
fwait
stos
xor
jmp
lods
stos
or
(bad)
in
pop
mov
mov
mov
add
mov
jmp
out
xchg
aaa
int
fcomp
rcr
loopne
out
jnp
in
imul
jmp
cmp
retf
in
jl
hlt
pop
test
call
clc
mov
cli
add
sti
xchg
std
add
jecxz
das
fwait
gs
pop
hlt
add
add
pop
push
shr
adc
add
pop
cs
or
fwait
adc
repz
cs
retf
retf
adc
adc
stos
int
loope
in
(bad)
icebp
mov
cs
jae
jne
xor
xor
xor
(bad)
retf
movs
jmp
cmp
pop
cmp
aas
xor
in
fcomp
dec
dec
sub
int
dec
dec
adc
aam
scas
jmp
pop
pop
aaa
pop
push
pusha
scas
outs
push
jae
fwait
lods
jmp
jbe
and
add
xchg
or
outs
xchg
or
arpl
pop
imul
pop
adc
dec
cdq
jecxz
cmp
pushf
lahf
xchg
pop
jae
mov
add
and
retf
data16
push
movs
in
test
xchg
cmps
add
call
push
xor
adc
mov
dec
cmp
jg
cmp
repz
stos
call
dec
mov
std
aad
cmps
push
inc
(bad)
jp
and
aam
push
pop
fs
and
sbb
sub
xor
pop
xor
pop
or
mov
or
mov
sub
mov
xlat
nop
xchg
push
push
fwait
out
or
dec
inc
or
push
rol
mov
adc
popa
xlat
sbb
pusha
xlat
push
sub
mov
xor
dec
icebp
push
push
mov
push
cmp
mov
push
jmp
mov
outs
mov
add
retf
dec
inc
fist
je
jg
in
(bad)
sti
lea
shl
inc
aad
jmp
mov
and
push
jae
adc
jae
stos
jmp
adc
idiv
(bad)
mov
push
int
mov
or
mov
or
aas
jb
mov
push
mov
dec
inc
fisub
jbe
jmp
add
fcomi
(bad)
xchg
dec
outs
jle
or
pop
cmp
pop
leave
cmp
ret
dec
jmp
push
fisubr
inc
jb
sbb
sahf
mov
jle
mov
arpl
dec
jae
cs
jno
add
inc
lock
test
rcr
ret
ret
mov
fdivr
(bad)
daa
dec
xor
mov
test
call
in
push
les
push
push
and
idiv
mov
ret
push
dec
fisttp
adc
xchg
xchg
cmps
out
pop
add
mov
xor
loopne
inc
pop
(bad)
loop
shl
inc
mov
fsubrp
fld
mov
add
shl
xlat
jg
jg
or
daa
inc
mov
or
mov
fwait
icebp
adc
jmp
retf
mov
pop
stos
dec
inc
mov
or
add
dec
pop
stos
pusha
fadd
les
pop
mov
adc
jg
daa
int
ror
or
aaa
push
lock
out
add
jmp
hlt
in
aad
xchg
fisttp
pop
xor
cmp
add
cmp
(bad)
icebp
out
jecxz
xchg
sbb
ds
adc
ret
sbb
inc
xor
mov
mov
add
mov
or
test
add
cmp
addr16
idiv
pop
adc
shr
jg
push
or
hlt
jmp
cmovb
and
popf
out
cmp
sub
pop
xor
dec
daa
arpl
dec
jbe
pop
out
add
push
dec
inc
aam
test
mov
mul
or
js
jnp
das
pop
cmp
test
jp
add
aaa
mov
mov
ret
lds
cmp
out
es
mov
inc
or
dec
data16
(bad)
stc
enter
mov
mov
lahf
sbb
daa
cmp
test
dec
xor
inc
mul
dec
mov
cmp
or
fcomip
pop
cs
pop
lods
ret
je
mov
fnsetpm(287
lods
sbb
nop
push
mov
(bad)
dec
out
rcr
int3
dec
pop
add
call
retf
pop
stos
dec
retf
fimul
or
pop
fwait
pusha
sub
out
add
std
repz
shl
repnz
or
xchg
jns
in
or
cmp
iret
push
cmp
mov
and
add
fsubr
scas
int
inc
pop
xchg
outs
sahf
sub
inc
sti
inc
jns
jb
inc
(bad)
retf
or
mov
in
icebp
out
retf
and
mov
out
js
icebp
jbe
fmul
data16
push
nop
dec
push
cmp
jmp
xchg
outs
fsub
sbb
jmp
add
xor
test
leave
jb
(bad)
cs
js
ret
cmp
es
add
mov
or
stos
xlat
jecxz
scas
fcmovnbe
clc
mov
cmp
xor
test
cmp
dec
(bad)
jnp
or
div
addr16
mov
inc
or
fsub
or
mov
push
push
sbb
jecxz
call
neg
add
dec
cmps
imul
xchg
cli
ret
sub
xor
out
data16
inc
or
idiv
add
stc
dec
pop
push
call
or
xchg
adc
or
idiv
jnp
inc
jb
pop
xchg
jae
adc
int
pop
in
aad
retf
jbe
out
pop
pusha
mov
inc
je
dec
jmp
not
lahf
or
scas
jnp
or
jno
xor
mov
ret
outs
xor
cmp
inc
xlat
add
ret
lahf
jae
push
cdq
pop
push
xor
cmp
arpl
iret
xor
fwait
or
jmp
popf
or
pop
cmps
daa
pop
in
retf
repz
mov
fistp
mov
pop
mov
dec
jo
ror
jae
imul
push
data16
adc
inc
icebp
and
cmp
mov
sbb
or
inc
mov
(bad)
ficom
pop
xor
pop
iret
push
dec
xchg
inc
push
jns
xchg
scas
sbb
outs
jp
adc
mov
bound
enter
cmp
pop
addr16
je
call
adc
or
mov
xchg
outs
mov
and
xor
cmp
clc
inc
iret
add
sbb
inc
sbb
arpl
mov
sar
xor
push
int
add
add
push
clc
sti
mov
xor
fistp
xchg
cmp
std
dec
dec
mov
sbb
cmp
aas
enter
mov
imul
mov
data16
mov
push
push
inc
jno
sbb
add
cmp
inc
sahf
cmc
js
cmp
mov
push
mov
daa
jno
adc
stc
enter
repz
(bad)
pushf
mov
cmps
inc
xchg
ret
jae
test
pop
fistp
outs
inc
addr16
sub
mov
(bad)
mov
mov
jmp
inc
aaa
adc
out
pmovmskb
daa
xor
loopne
push
jae
xchg
and
in
dec
aaa
ret
xor
outs
test
pop
and
mov
mov
popf
xor
(bad)
sbb
add
add
(bad)
std
dec
push
sbb
out
loope
jo
aad
xlat
xlat
arpl
jl
adc
add
pop
(bad)
xchg
cmp
pop
addr16
mov
and
fwait
adc
jo
ror
inc
pop
push
mov
dec
pop
adc
arpl
leave
cmp
inc
jae
jb
fcom
stos
aaa
xchg
sbb
rcr
scas
mov
aad
cmc
sub
addr16
pop
jb
xor
sbb
mov
inc
add
push
pop
das
xchg
outs
adc
inc
push
cmps
inc
in
pop
jecxz
nop
mov
ja
iret
sar
push
xchg
call
xchg
pushf
in
inc
scas
push
lock
xchg
aam
push
das
lds
dec
(bad)
jl
xor
xor
adc
addr16
xor
jne
fnsave
dec
mov
dec
test
test
out
pop
dec
xor
pusha
popa
adc
inc
and
(bad)
jno
mov
pop
sti
or
(bad)
arpl
inc
leave
div
adc
cmc
xor
not
scas
pop
sbb
dec
arpl
shl
je
push
cmp
repnz
ret
pop
out
das
mov
xor
xchg
mov
mov
fwait
add
ret
fild
cmp
dec
scas
adc
outs
sbb
dec
inc
scas
cli
and
mov
push
cmp
mov
mov
out
add
push
daa
sbb
cmp
pop
mov
mov
lods
iret
add
inc
dec
xchg
xor
daa
and
in
icebp
test
(bad)
aad
jae
call
ja
mov
ret
jecxz
and
mov
pop
scas
xchg
jns
mov
xlat
and
push
rcl
mov
test
dec
xchg
mov
push
and
pusha
cmp
jecxz
icebp
inc
cmp
gs
ja
jecxz
mov
test
in
out
add
inc
iret
add
or
ror
aas
add
lahf
or
sub
xor
push
adc
add
(bad)
mov
adc
test
or
mov
push
in
dec
pop
lahf
icebp
(bad)
in
(bad)
out
lods
or
es
fwait
ins
fwait
xchg
scas
fwait
add
push
push
add
jns
and
enter
retf
add
or
dec
xor
aad
xor
dec
cmp
dec
clc
jge
or
cmp
or
jg
cli
(bad)
push
jnp
inc
and
pop
lods
mov
aas
ret
ret
xor
jne
lahf
sti
and
push
fist
cmps
(bad)
into
(bad)
jo
mov
imul
or
out
aas
mov
outs
fwait
(bad)
scas
cmp
in
ins
cmp
fwait
jmp
xchg
and
ins
xor
push
daa
scas
sub
xchg
aaa
xchg
(bad)
cmp
inc
push
mov
pop
pusha
jge
cmps
aas
add
xchg
xor
rol
and
dec
xlat
fwait
jae
jmp
fucomp
sbb
mov
xor
cmp
pop
xor
mov
jg
jo
(bad)
popa
push
add
sbb
dec
adc
idiv
cmc
icebp
movs
and
rcr
sbb
push
inc
adc
inc
stos
cld
rcr
outs
aad
push
call
pop
xchg
xchg
xchg
out
push
xor
sar
pop
mov
in
jnp
rcl
jbe
push
das
sub
mov
xchg
inc
add
cld
cmp
hlt
icebp
jecxz
jne
sub
mov
pop
daa
pop
pop
ror
aaa
pop
cs
icebp
popf
dec
push
xchg
dec
and
fnsave
jno
pop
aas
push
or
add
mov
mov
xchg
and
fwait
pop
dec
aaa
and
das
pop
iret
scas
arpl
or
pop
call
sbb
(bad)
ret
and
xchg
sub
out
lods
xor
(bad)
inc
push
lock
popf
xchg
cwde
out
mov
icebp
cmps
ja
dec
stos
ds
sub
lahf
cmp
aas
push
or
mov
shl
pop
shl
or
pop
dec
out
je
cmc
das
ins
jno
cmps
iret
das
xor
xor
xor
sbb
xor
pop
mov
pop
enter
retf
scas
and
push
adc
sub
jbe
mov
stc
pop
inc
push
dec
cmp
xchg
aaa
icebp
imul
add
(bad)
ja
stos
push
add
xlat
adc
jnp
or
sub
push
or
push
dec
mov
adc
mul
jae
mov
ror
cmc
(bad)
repz
loopne
xor
dec
xor
sbb
xor
fwait
push
mov
add
sahf
mov
or
xor
jl
btc
jnp
cli
cmp
sub
dec
mov
dec
sub
movs
and
xor
fist
dec
imul
out
inc
and
and
ret
js
cmps
cmp
or
xchg
push
sti
int
loopne
sbb
call
in
sbb
iret
out
add
daa
xor
mov
setg
push
ret
pop
or
xchg
and
cmp
out
mov
add
int
scas
add
or
out
cmp
imul
es
or
bnd
adc
xchg
or
sbb
pushf
out
fild
mov
dec
pop
pop
sbb
leave
xor
add
push
sbb
fwait
lahf
pusha
cli
nop
daa
stos
int3
stc
xor
stos
cs
mov
inc
adc
sbb
adc
int3
xor
imul
packsswb
sbb
das
or
sti
mov
pop
push
addr16
sub
mov
retf
or
daa
scas
dec
xor
inc
sbb
cmp
repnz
xor
and
mov
dec
adc
and
fwait
test
xchg
mov
stos
pop
fcomip
fsub
lock
(bad)
outs
retf
fwait
(bad)
pusha
ja
outs
add
sar
out
mov
mov
inc
jnp
ja
mov
jae
jmp
adc
pusha
popf
inc
popf
mov
ja
retf
lods
pop
or
daa
and
retf
outs
shr
(bad)
pop
icebp
mov
(bad)
and
loope
aas
add
inc
adc
or
mul
xchg
xchg
and
pop
fwait
(bad)
xchg
ja
inc
ds
dec
scas
out
retf
jmp
or
sbb
leave
stos
aam
mov
aad
imul
xchg
out
inc
xchg
ret
xchg
retf
ja
je
aas
mov
cli
out
and
xor
and
aaa
adc
sbb
dec
pop
test
in
push
and
movs
(bad)
psubsw
and
push
push
ret
ins
dec
jnp
mov
adc
inc
mov
mov
mov
inc
lahf
xchg
lahf
repnz
test
repnz
jle
outs
xor
mov
jecxz
sbb
sub
mov
xor
icebp
mov
loopne
das
mov
fcomp
xor
out
xor
outs
add
out
push
clc
push
pop
retf
hlt
test
mov
pop
leave
cmp
es
retf
sbb
pop
pusha
dec
push
sti
shl
out
aas
in
push
mov
fwait
pop
mov
rcr
addr16
jle
ds
mov
adc
arpl
imul
mov
xor
mov
arpl
mov
mov
aad
xchg
pop
fnstsw
jmp
(bad)
mov
push
mov
push
cmp
ins
nop
and
paddd
dec
dec
push
cmp
aad
leavew
and
or
ja
dec
sub
jne
sbb
ja
mov
inc
jae
aad
jae
test
cmp
pop
xchg
daa
retf
(bad)
sbb
mov
cmps
out
daa
dec
leave
dec
inc
jecxz
sti
push
cmps
bound
ror
gs
scas
xchg
loopne
loopne
xchg
(bad)
cmp
xchg
jl
sahf
scas
daa
ja
out
xchg
fwait
dec
fild
xchg
adc
(bad)
pop
cmp
loop
fst
cmp
inc
jle
and
scas
shl
lea
pop
mov
and
inc
outs
sub
jbe
mov
in
hlt
or
ret
stc
xlat
ja
sar
pop
int
mov
outs
test
xchg
jbe
in
add
xor
movlps
frstor
(bad)
clc
arpl
enter
adc
sub
add
jb
jmp
mov
mov
leave
sbb
mov
mov
les
sub
test
sti
or
xchg
dec
mov
mov
arpl
xor
pop
jbe
sbb
or
addr16
arpl
dec
or
loopne
inc
mov
push
sbb
das
icebp
xor
or
xor
clc
pop
hlt
rcr
psubusb
stc
stc
call
cwde
mov
in
xor
test
inc
loopne
mov
mov
jecxz
or
mov
push
cmp
scas
repz
pop
sbb
push
sbb
add
lods
test
and
aas
clts
add
out
push
ret
bound
sbb
les
mov
cmp
mov
inc
xlat
les
rcr
call
pop
out
inc
mov
leave
and
dec
push
mov
adc
es
inc
mov
xchg
lock
sub
inc
sbb
aam
push
neg
rol
cmp
lock
pop
xchg
ja
cs
dec
pop
add
or
mov
call
and
pop
inc
pop
pop
fadd
adc
mov
push
pop
daa
repz
repnz
xlat
mov
pcmpgtb
adc
adc
nop
add
mov
push
push
or
adc
sbb
cmp
xor
dec
pop
add
leave
adc
add
xchg
add
and
mov
inc
push
out
fcomi
popf
call
add
fbstp
retf
and
sbb
dec
inc
cmp
stos
daa
inc
les
cmp
xchg
sbb
sbb
cli
or
out
xor
and
sbb
adc
add
or
and
bsf
ficomp
xlat
outs
xchg
aam
sbb
pop
mov
xor
test
mov
pop
jae
fstp
pop
ret
and
mov
xor
ror
push
or
dec
lock
mov
dec
pop
xchg
scas
xchg
popf
pop
and
and
push
or
mov
or
(bad)
push
push
iret
movs
std
mov
pop
mov
sahf
in
xchg
fs
cmps
mov
in
mul
ret
push
(bad)
out
(bad)
mov
jecxz
gs
aas
movsx
pop
pop
push
xchg
inc
sbb
sti
repnz
stc
cmp
arpl
add
jl
scas
mov
ins
pop
mov
cmp
jnp
fild
xlat
mov
dec
call
push
mov
add
fisttp
das
aas
sbb
dec
jb
mov
mov
or
pop
test
idiv
mov
jle
mov
or
push
mov
adc
jmp
das
ja
or
jo
das
mov
xchg
std
mov
cld
icebp
jb
xchg
cwde
cli
cmp
cmp
pop
cmp
sbb
jmp
fdiv
mov
cmp
leave
leave
test
shl
cmp
aad
jmp
bound
movs
jle
jg
adc
fbld
dec
jmp
jmp
test
and
xchg
pop
push
sbb
sbb
leave
pop
or
repnz
dec
xor
cmp
xlat
inc
out
fsub
inc
or
lahf
push
aas
sub
mov
dec
repnz
dec
sub
pop
loopne
pop
mov
push
sub
neg
icebp
dec
or
retf
sub
mov
test
dec
dec
xor
(bad)
out
pop
loope
les
(bad)
jg
out
xchg
xchg
loope
or
cmp
sub
mov
hlt
daa
inc
and
pop
pop
add
arpl
or
and
or
or
ret
add
lea
enter
pop
ret
cmps
jmp
or
ficomp
adc
xchg
xor
mov
ret
fdivrp
or
nop
mov
adc
mov
sar
add
sbb
add
inc
mov
xor
fwait
enter
push
(bad)
fist
ret
das
bound
clc
stos
mov
punpcklwd
aaa
push
rol
push
repnz
and
or
addr16
xor
mov
movs
inc
jl
and
sub
sub
sbb
push
fidiv
sbb
arpl
leave
fs
test
mov
fmul
stc
pop
sub
xchg
xchg
sbb
mov
xchg
cmp
out
ja
push
push
dec
stc
addr16
sub
or
daa
iret
jo
sub
mov
inc
inc
xor
setg
repz
inc
ds
lahf
adc
sub
xchg
mov
xor
(bad)
dec
pop
not
jmp
stos
fiadd
(bad)
in
fisttp
aaa
sti
out
adc
inc
inc
inc
mov
enter
mov
ja
dec
add
add
scas
aas
xchg
jl
xor
das
sar
out
mov
push
rcr
fsubrp
enter
fistp
mov
pop
xor
outs
idiv
pop
xchg
(bad)
(bad)
mov
das
mov
or
push
cmps
adc
mov
(bad)
fbstp
popa
mov
xchg
push
dec
jmp
jp
pop
xchg
outs
(bad)
out
out
(bad)
(bad)
mov
xchg
lock
icebp
(bad)
sbb
mov
daa
inc
in
das
mov
dec
mov
retf
ret
or
fwait
push
popa
hlt
inc
aad
inc
addr16
or
sub
in
rcl
aas
repz
enter
pop
pop
mov
add
retf
jp
adc
in
push
pop
fcomp
sub
das
ja
sbb
push
arpl
xor
pop
enter
rcr
or
mov
aam
or
fisttp
cmp
pop
(bad)
xlat
loope
add
or
mov
imul
scas
es
fld
(bad)
aas
inc
jmp
ss
sbb
stc
ror
jmp
out
in
scas
pop
sub
adc
rcl
inc
jnp
test
stos
jge
mov
mov
mov
add
hlt
lock
arpl
push
lds
push
push
push
in
mov
cmp
mov
lock
arpl
jae
mov
push
push
push
fbstp
xor
cld
xchg
shl
int
push
fmul
enter
push
or
xor
addr16
mov
pop
jnp
xchg
(bad)
jbe
pop
out
lds
sub
and
jecxz
xchg
xor
call
cmp
rol
addr16
or
push
femms
jnp
sti
into
stos
mov
cmps
or
mov
das
mov
and
outs
pusha
fbld
push
pop
int3
pop
loop
addr16
jle
ins
sub
sub
sub
in
push
das
paddusb
xchg
xchg
jl
(bad)
mov
xchg
or
or
and
add
add
loop
pop
mov
call
leave
call
leave
mov
mov
and
inc
mov
fcom
fild
xor
ss
xchg
and
add
pop
fistp
and
push
mov
pop
call
fsubp
test
imul
xchg
mov
xchg
dec
push
loope
push
gs
sbb
into
inc
jge
mov
scas
into
mov
inc
inc
dec
lds
out
sub
movs
int
mov
adc
xchg
push
sub
aas
pusha
les
cmp
cvtpi2ps
(bad)
sbb
(bad)
dec
sbb
jg
lods
clc
add
test
arpl
(bad)
gs
sub
sbb
inc
loop
out
test
pop
xor
rcr
dec
div
into
dec
daa
test
icebp
pop
std
pop
dec
scas
xchg
scas
mov
int
mov
jecxz
sub
push
jecxz
xchg
aas
jne
sbb
jno
add
inc
pmulhuw
jecxz
into
mov
cmp
(bad)
fistp
lods
jg
xor
mov
enter
add
push
loop
cli
jecxz
dec
cmps
or
push
mov
inc
and
inc
scas
loopne
stos
dec
out
inc
inc
ss
jmp
scas
daa
mov
and
shr
call
mov
xchg
jg
xchg
push
std
cmp
jae
cwde
xchg
sbb
add
lahf
dec
(bad)
shl
imul
pop
push
dec
push
cmp
stos
jge
ss
jno
push
popa
aaa
push
iret
push
xor
mov
in
mov
and
lahf
sbb
scas
mov
jp
inc
pop
mov
iret
nop
adc
sub
or
or
or
adc
cmc
popf
mov
pop
movs
sbb
mov
add
xchg
adc
dec
int
test
pop
dec
das
and
pop
dec
das
or
rol
adc
xlat
inc
mov
pop
mov
and
push
adc
jnp
push
push
scas
and
or
inc
mov
sbb
pop
pop
inc
enter
or
enter
jecxz
jnp
arpl
xlat
mov
pop
and
add
mov
aaa
cmp
mov
cmp
mov
xor
mov
cdq
scas
push
cmp
fisubr
pop
ja
(bad)
pop
pop
icebp
cmp
iret
mov
jne
cmp
push
gs
daa
retf
dec
daa
push
push
cmps
sub
mov
shl
jns
scas
xchg
cmp
dec
add
das
scas
xor
inc
outs
icebp
cmp
rcl
sub
in
pop
jne
or
jmp
xchg
mov
repnz
mov
(bad)
scas
or
stos
sbb
sahf
loope
neg
or
(bad)
addr16
addr16
dec
or
out
or
mov
jo
sbb
std
int
sbb
test
pop
xor
or
aam
out
push
xchg
jo
or
sub
adc
push
or
sbb
add
and
pop
adc
jnp
xor
test
or
(bad)
aaa
and
ins
adc
ss
cmp
pop
lock
test
imul
ins
xchg
int
and
dec
cmp
sub
data16
add
mov
or
imul
int3
in
pop
cs
rcl
add
pop
aad
xor
or
stos
nop
fsubp
add
or
adc
or
mov
add
mov
pusha
add
sbb
or
inc
fs
bound
add
dec
outs
addr16
rcr
outs
fcomi
outs
push
dec
popa
outs
fs
gs
jb
je
inc
imul
neg
outs
or
arpl
inc
push
gs
jo
imul
push
push
sub
or
std
gs
fsub
not
xor
outs
fs
cmovle
adc
je
outs
addr16
jns
cmovl
popa
jo
fistp
mov
or
inc
ins
mov
or
gs
mov
in
fist
jo
outs
outs
adc
ins
ins
mov
int
jmp
ret
push
or
imul
pop
push
inc
or
jns
mov
or
jb
add
(bad)
add
lods
sub
push
jno
push
sti
mov
xchg
jl
jb
outs
gs
outs
push
sbb
jo
xchg
fs
icebp
inc
cs
inc
test
inc
fdiv
and
ss
in
fs
dec
jb
outs
dec
inc
inc
jns
mov
imul
xor
ret
cmp
jne
leave
ret
sbb
sub
je
mov
ss
push
popa
or
pop
xchg
dec
or
adc
push
xchg
ins
lods
out
add
mov
ja
jo
in
cmp
je
inc
xlat
push
inc
dec
add
add
loopne
sidtd
add
adc
and
jo
inc
or
pop
add
add
add
add
xor
sbb
or
pop
push
add
sbb
cmp
lock
call
push
sbb
fsub
pop
mov
push
cs
js
in
push
nop
ins
sbb
pusha
cwde
or
cs
fcomp
call
or
gs
add
inc
cs
test
pop
add
rcr
out
add
pop
daa
push
mov
jb
adc
test
ja
outs
add
loopne
dec
ja
and
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
and
add
rol
add
add
add
add
dec
add
add
add
jo
add
cwde
add
add
add
add
add
pusha
add
add
add
test
add
add
add
mov
add
mov
add
test
add
add
add
mov
add
pop
xchg
add
push
add
add
add
add
add
add
add
lock
add
fwait
add
xor
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
add
add
add
add
add
adc
add
and
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
add
jne
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
cmc
add
jecxz
pop
jns
add
mov
add
add
add
add
dec
add
add
add
and
add
sbb
add
adc
add
pop
add
add
add
add
add
add
add
jmp
in
jmp
lods
(bad)
or
cdq
int3
inc
jnp
out
add
fiadd
aas
push
mov
adc
xchg
add
add
add
add
add
cmp
add
sub
add
sbb
add
add
add
add
add
add
add
add
add
add
add
jmp
sar
jmp
(bad)
jmp
cld
dec
out
jmp
mov
call
(bad)
inc
cdq
int3
inc
sub
add
int
sbb
add
add
add
add
pop
add
add
add
sub
add
pop
add
add
add
add
add
add
add
add
add
add
xchg
(bad)
(bad)
cs
fcos
cmps
out
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
repnz
cmp
fcos
pop
popf
iret
inc
xchg
ret
je
jmp
add
aaa
mov
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fcos
mov
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
call
inc
jmp
dec
mov
int3
inc
jnp
out
add
fiadd
xor
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
iret
(bad)
mov
(bad)
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jmp
stc
dec
in
push
mov
call
movs
(bad)
inc
cdq
int3
inc
sub
add
push
mov
daa
scas
add
add
add
add
add
pop
add
add
add
sbb
add
add
add
add
add
int3
inc
out
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
cld
call
out
(bad)
cmp
out
push
stos
fcos
add
mov
in
push
outs
rol
sub
mov
add
xchg
add
add
add
adc
add
add
add
add
xchg
retf
cdq
int3
inc
out
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
call
inc
jmp
inc
pushf
iret
inc
fs
add
add
add
push
add
add
add
add
add
int3
inc
lock
dec
jecxz
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
dec
repnz
jl
in
add
add
add
add
add
add
cdq
int3
inc
cdq
int3
jmp
jmp
(bad)
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
out
inc
mov
scas
repz
add
add
add
add
add
and
fcos
or
bnd
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
jmp
(bad)
inc
cdq
int3
inc
add
cdq
add
add
add
add
add
or
stos
fcos
es
fcos
fcomi
call
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
int3
(bad)
inc
cdq
int3
inc
adc
movs
add
add
add
or
mov
jmp
stos
fcos
sahf
(bad)
jmp
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
out
(bad)
dec
int3
(bad)
jmp
mov
inc
ss
mov
add
add
add
fcos
sub
jmp
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
jmp
(bad)
jmp
fcos
add
retf
add
add
adc
add
fdivr
xor
out
mov
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
jmp
(bad)
call
out
add
add
add
add
sbb
add
add
sub
push
mov
out
mov
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
jmp
(bad)
jmp
jmp
jecxz
add
jp
add
pop
add
add
add
add
add
out
push
mov
out
retf
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
call
sti
(bad)
jmp
(bad)
dec
jl
in
add
add
add
add
add
add
add
out
pop
mov
fdivr
int
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
call
mov
xchg
add
add
add
add
add
add
add
out
addr16
cmp
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
inc
cdq
int3
inc
add
call
add
add
add
add
out
(bad)
jg
repnz
cmp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
dec
(bad)
(bad)
dec
push
daa
lods
add
add
add
or
add
add
mov
(bad)
jle
repnz
cmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
call
(bad)
(bad)
push
ss
mov
add
add
add
add
add
repnz
lahf
iret
(bad)
jmp
cld
(bad)
(bad)
mov
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
int3
(bad)
(bad)
fcos
(bad)
call
(bad)
add
rol
add
arpl
add
push
add
add
add
add
add
bnd
sahf
iret
call
(bad)
iret
in
stc
(bad)
in
stc
(bad)
(bad)
in
stc
(bad)
jmp
sti
(bad)
(bad)
fdivrp
(bad)
call
cld
(bad)
dec
std
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
int3
(bad)
(bad)
fdivrp
(bad)
jmp
out
add
fadd
add
jo
add
sbb
add
add
add
add
xchg
(bad)
(bad)
test
cmc
jmp
(bad)
jmp
mov
inc
cdq
int3
dec
lahf
iret
(bad)
cmp
fcos
imul
jmp
jmp
hlt
cld
(bad)
out
cli
(bad)
(bad)
out
cli
(bad)
jmp
sti
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
dec
je
call
add
add
add
add
add
add
add
(bad)
call
repz
dec
repz
(bad)
jl
stc
jmp
repnz
out
sub
fdivr
sbb
int3
dec
lahf
iret
dec
fdivr
(bad)
jmp
(bad)
call
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
call
out
inc
jnp
out
add
add
add
add
add
add
add
(bad)
jmp
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
call
clc
(bad)
push
cmc
call
jmp
inc
jmp
(bad)
(bad)
fcos
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
(bad)
fdivr
(bad)
jmp
(bad)
(bad)
out
(bad)
(bad)
call
repnz
inc
xchg
ret
add
xchg
add
add
add
add
add
add
add
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
inc
loop
setg
(bad)
call
std
(bad)
push
(bad)
(bad)
(bad)
in
(bad)
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
inc
cdq
int3
inc
add
sahf
add
add
add
or
add
add
cdq
int3
jmp
cmc
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
mov
iret
(bad)
aas
mov
(bad)
jge
out
(bad)
shr
(bad)
mov
icebp
stc
(bad)
cli
(bad)
(bad)
(bad)
cli
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
(bad)
in
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
clc
(bad)
(bad)
(bad)
clc
(bad)
(bad)
call
lahf
iret
inc
ss
mov
add
add
add
add
add
(bad)
inc
sti
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
in
cmc
jmp
in
dec
out
xor
fcos
add
int3
jmp
lods
(bad)
(bad)
aas
mov
(bad)
jle
out
sahf
fsubr
(bad)
mov
clc
cld
(bad)
std
(bad)
(bad)
(bad)
std
(bad)
(bad)
call
repnz
(bad)
cld
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
aas
mov
inc
inc
pop
mov
add
add
add
in
jmp
stc
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
stc
(bad)
(bad)
in
stc
(bad)
(bad)
fdivr
(bad)
call
sti
(bad)
inc
cld
(bad)
(bad)
mov
(bad)
(bad)
call
stc
cld
push
bnd
in
dec
out
xor
fcos
add
int3
inc
fcos
push
mov
out
scas
fucomip
push
lods
(bad)
inc
imul
add
jmp
hlt
cld
inc
std
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
sti
(bad)
inc
call
fcos
dec
mov
(bad)
jns
out
mov
jmp
call
out
stc
push
cli
(bad)
push
cli
(bad)
(bad)
(bad)
(bad)
call
cld
(bad)
inc
std
(bad)
push
(bad)
(bad)
call
repnz
push
repnz
cdq
int3
inc
arpl
int
(bad)
mov
and
add
add
add
out
out
cld
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
std
(bad)
jmp
idiv
jmp
mov
inc
push
add
shl
mov
lds
xchg
(bad)
aad
movs
sar
cmp
(bad)
retf
out
test
out
(bad)
mov
cld
(bad)
(bad)
jmp
dec
lahf
iret
inc
add
pop
add
add
add
add
add
add
add
(bad)
jmp
(bad)
cli
std
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
(bad)
(bad)
cli
std
(bad)
dec
fdivr
add
lahf
add
add
add
add
add
add
add
add
add
add
xchg
(bad)
and
nop
rol
add
add
(bad)
cdq
int3
inc
cdq
int3
inc
mov
sbb
add
push
add
sar
inc
mov
jmp
(bad)
or
dec
out
dec
in
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
test
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
mov
cmps
add
aad
cdq
int3
inc
xchg
(bad)
in
push
outs
cmp
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
aas
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
ud0
add
clc
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
aas
add
clc
add
add
aas
add
clc
add
add
aas
add
lock
add
aas
add
lock
add
aas
add
lock
add
aas
add
lock
add
aas
add
lock
add
aas
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
lock
add
pop
add
clc
add
add
pop
add
clc
add
add
pop
add
cld
add
add
jg
add
add
add
add
inc
pop
inc
inc
add
add
(bad)
(bad)
inc
add
clc
pop
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
pop
add
add
add
add
add
sub
add
sbb
add
add
add
add
add
cmp
add
daa
add
add
add
adc
add
or
add
add
add
add
add
add
add
add
mov
call
test
inc
sub
add
int
sbb
add
add
add
add
pop
add
add
add
sub
add
pop
add
add
add
add
add
add
add
add
add
add
add
out
jle
(bad)
jmp
call
repnz
mov
jmp
lods
fdivr
pop
mov
add
rol
sub
mov
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
sbb
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
call
inc
in
jmp
mov
dec
mov
movs
out
add
fiadd
xor
mov
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
lea
xchg
jecxz
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
push
(bad)
jmp
stc
call
out
push
loop
pop
cmps
(bad)
inc
sub
add
push
mov
daa
scas
add
add
add
add
add
adc
add
add
add
add
mov
call
loopne
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
call
(bad)
ds
fcos
add
jns
add
add
add
add
add
add
add
add
fcos
mov
jecxz
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
(bad)
jge
(bad)
push
(bad)
inc
sub
add
add
add
add
add
add
add
(bad)
jmp
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
inc
jmp
(bad)
push
call
cmps
fcos
add
add
add
add
add
add
test
(bad)
or
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
in
(bad)
inc
fdivr
call
cmps
fcos
add
push
movs
add
add
add
or
add
add
test
enter
inc
repnz
dec
icebp
(bad)
dec
icebp
(bad)
dec
icebp
(bad)
dec
icebp
(bad)
dec
icebp
(bad)
dec
icebp
(bad)
dec
icebp
(bad)
dec
icebp
(bad)
dec
fdivrp
inc
inc
ss
mov
add
add
add
add
xor
fcos
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
cmc
(bad)
dec
loope
inc
out
add
les
add
pop
add
add
add
add
add
add
lods
fcos
sub
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
call
(bad)
push
repnz
pop
jp
add
add
add
sbb
add
add
add
add
(bad)
aaa
mov
jmp
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
jg
(bad)
(bad)
jl
repnz
ins
nop
jecxz
add
jp
add
pop
add
add
add
add
pop
shl
pop
shl
stos
loopne
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
out
push
jl
in
add
add
add
add
add
add
pusha
shl
pusha
shl
lods
loopne
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
mov
xchg
mov
xchg
add
add
add
add
add
sub
jmp
jmp
jmp
cli
(bad)
call
cld
(bad)
dec
std
(bad)
inc
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
out
(bad)
mov
mov
inc
add
call
add
add
out
(bad)
out
push
mov
(bad)
(bad)
cmp
out
xchg
aad
push
cli
(bad)
jmp
cld
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
repnz
inc
fdivr
add
daa
lods
add
add
add
or
mov
jmp
cmc
(bad)
dec
jmp
dec
enter
mov
(bad)
jmp
loop
in
cld
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
repnz
push
out
add
inc
mov
add
add
add
repnz
cld
(bad)
call
cld
(bad)
call
cld
(bad)
call
cld
(bad)
jmp
mov
out
repz
(bad)
(bad)
in
(bad)
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
repnz
dec
dec
arpl
add
add
add
adc
add
repnz
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
dec
mov
(bad)
(bad)
aas
mov
call
(bad)
jge
out
lods
fsubrp
(bad)
mov
(bad)
(bad)
(bad)
clc
(bad)
(bad)
push
(bad)
(bad)
inc
in
(bad)
(bad)
fdivp
(bad)
(bad)
mov
pusha
or
add
pop
add
add
add
dec
sti
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
sti
(bad)
call
sti
(bad)
inc
cld
(bad)
(bad)
mov
jmp
dec
int3
out
cmp
fcos
sbb
fcos
outs
(bad)
jg
out
(bad)
shr
inc
jg
rol
add
add
add
pop
lahf
int3
mov
movs
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
cld
(bad)
call
mov
rcr
jns
out
mov
jmp
inc
call
(bad)
call
cld
(bad)
inc
std
(bad)
push
(bad)
add
mov
add
inc
add
add
add
add
add
(bad)
in
std
(bad)
jmp
std
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
dec
jmp
add
add
add
add
add
inc
add
mov
lds
(bad)
aad
mov
fdivr
add
dec
add
add
add
rol
inc
mov
icebp
jo
loop
or
call
out
(bad)
cmp
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
mov
add
add
add
add
add
add
(bad)
(bad)
push
aas
(bad)
push
add
push
add
jmp
add
jmp
add
aas
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
lock
add
add
psubb
clc
aas
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
sub
add
adc
add
and
add
add
and
add
add
add
or
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
or
add
or
add
cmp
add
jle
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
and
mov
sbb
mov
adc
js
dec
jne
dec
movs
dec
jo
inc
ins
mov
inc
imul
add
add
and
(bad)
call
test
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
(bad)
cmp
(bad)
inc
cwd
inc
add
xchg
and
mov
jmp
mov
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
(bad)
jp
(bad)
inc
fdivr
cdq
(bad)
(bad)
inc
addr16
(bad)
sar
int3
(bad)
jmp
(bad)
(bad)
(bad)
inc
jmp
inc
jmp
inc
jmp
inc
jmp
dec
out
cdq
(bad)
(bad)
inc
imul
data16
(bad)
push
cwde
retf
call
idiv
call
idiv
call
idiv
call
idiv
call
mov
(bad)
inc
add
xchg
sub
(bad)
aam
push
cdq
int3
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
cdq
(bad)
(bad)
inc
ins
mov
xchg
cs
(bad)
(bad)
jp
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
dec
jo
inc
add
jne
xchg
leave
inc
out
jmp
vcvttsd2si
vcvttsd2si
vcvttsd2si
sar
mov
sbb
mov
sbb
add
xor
(bad)
dec
hlt
(bad)
dec
hlt
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
jne
add
and
add
add
cdq
int3
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
mov
call
test
call
xor
add
add
add
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
inc
add
cmp
add
or
add
add
add
add
add
add
add
add
add
add
add
add
cdq
int3
push
cwde
retf
push
xchg
leave
jmp
xchg
(bad)
inc
add
and
add
or
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
add
add
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
add
pop
pushf
add
xor
add
gs
add
push
pushf
add
jo
add
jle
add
mov
add
add
add
add
enter
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
ins
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
ins
ins
outs
arpl
add
jb
jne
ins
inc
jb
add
add
imul
jae
add
ja
jo
imul
add
add
add
add
cmp
mov
add
sub
int
retf
or
outs
test
or
mov
adc
adc
aad
and
and
aam
adc
add
ret
sbb
arpl
nop
jb
add
gs
mov
xchg
data16
cmp
dec
stos
pop
(bad)
rol
js
es
mov
shr
or
xor
pop
(bad)
pop
lods
ins
pop
mov
xor
inc
cmp
jge
pusha
lds
call
mov
call
add
icebp
das
pop
ror
mov
push
(bad)
xchg
in
mov
push
rdtsc
adc
cs
mov
dec
xor
jbe
ins
sbb
jp
int3
sbb
es
jmp
retf
cmps
mov
jmp
js
add
add
cmp
cmp
pop
loop
aam
(bad)
dec
gs
iret
pop
lahf
cs
ret
stc
shl
mov
xor
inc
push
or
sbb
lods
loop
adc
push
dec
pop
(bad)
jge
jg
nop
fcom
push
ss
jmp
aam
or
fimul
das
add
or
and
push
jns
rol
ds
into
int3
and
out
js
dec
push
pop
rcr
sbb
adc
sti
out
cmps
pop
in
lods
inc
sub
(bad)
mov
mov
scas
imul
fadd
cli
sub
push
or
pop
lods
fidiv
or
mov
jo
pop
ds
jl
xchg
fistp
jbe
fidivr
adc
mov
xor
push
inc
cmp
inc
cmp
test
cmp
aam
jnp
lds
xchg
or
push
aad
sub
inc
fsub
inc
fisttp
jmp
out
inc
shl
push
sub
pop
es
pop
icebp
sbb
xor
xlat
test
pop
imul
sub
adc
add
adc
mov
sbb
push
je
in
cmp
loop
cli
shr
mov
jmp
jbe
jo
dec
mov
add
sbb
xchg
push
retf
in
ficom
pop
daa
test
push
fdiv
(bad)
sub
and
out
mov
inc
adc
cli
das
jge
sub
or
(bad)
xor
(bad)
cs
mov
push
(bad)
mov
pop
repz
xchg
inc
or
retf
adc
sar
inc
add
sub
mov
and
lods
xchg
shr
dec
or
clc
xor
loopne
cld
cwde
mov
out
fsubr
xchg
std
cdq
fisubr
push
call
jp
mov
ds
mov
pusha
imul
cli
mov
test
mov
cmp
outs
(bad)
idiv
aad
push
xor
adc
cli
stos
or
fmulp
xchg
push
stc
or
enter
and
mov
inc
std
mov
adc
inc
sbb
icebp
int3
retf
pop
adc
and
xchg
leave
dec
ins
in
cdq
and
sub
push
enter
popf
ret
in
loop
xchg
mov
std
adc
call
ins
dec
mov
cmp
loopne
test
mov
push
mov
mov
addr16
cmps
mov
test
jb
mov
les
sub
fwait
neg
jno
inc
dec
daa
(bad)
push
cmp
mov
sbb
xchg
cmps
add
or
inc
pop
in
retf
jo
movs
sahf
sbb
loope
call
ins
or
adc
or
inc
lock
adc
jp
push
cdq
or
cmp
stos
add
in
bound
dec
push
xor
test
adc
mov
mov
shl
sbb
pusha
fdivr
shr
aaa
ss
jmp
sar
mul
out
call
pusha
or
jno
or
or
fnsave
cld
jnp
repz
and
js
popf
enter
loopne
jns
test
add
stos
dec
call
pushf
pop
test
(bad)
mov
test
xchg
xchg
scas
cld
popf
in
add
mov
clc
mov
pusha
js
mov
inc
jle
pop
call
ss
adc
sti
sub
fcomi
jp
ins
scas
xor
mov
(bad)
shl
inc
hlt
mov
sub
in
cmp
push
push
mov
movs
mov
out
xor
sub
pop
mov
dec
sub
ror
pop
sbb
ror
stos
pusha
test
ret
sbb
and
mov
dec
jg
js
xchg
aas
repz
psrad
xchg
xor
or
push
movs
loop
add
jmp
dec
test
pop
and
aam
lds
mov
popa
lea
pop
scas
inc
pop
mov
jmp
or
dec
mov
pop
dec
push
mov
idiv
fwait
test
mov
sub
push
jl
or
jno
xchg
adc
not
test
dec
lea
ja
add
out
pop
inc
inc
mov
call
call
sub
and
and
dec
xchg
(bad)
gs
daa
sbb
push
add
or
fdiv
cmp
xchg
(bad)
and
add
(bad)
pop
and
mov
cmp
cmp
mov
inc
sub
xor
pop
xchg
pop
adc
xchg
out
(bad)
and
inc
dec
test
mov
rcr
or
cmc
push
xchg
jno
ret
outs
shr
into
xchg
sbb
push
fisttp
add
sbb
dec
or
jbe
arpl
les
fdiv
and
cmc
(bad)
repz
push
cwde
add
inc
test
adc
ror
movs
repz
das
add
shr
in
jl
icebp
icebp
fwait
shl
xchg
xchg
sub
pop
push
inc
push
rol
inc
adc
mov
xchg
push
arpl
jl
adc
daa
mov
mov
repz
cmp
mov
sub
pop
sbb
sbb
push
lds
jns
push
pusha
mov
das
add
sub
ret
and
dec
push
sahf
int3
lock
jge
inc
icebp
imul
mov
dec
arpl
loopne
inc
push
in
mov
mov
daa
in
pop
xchg
fstp
inc
inc
cmps
scas
cli
cld
rcl
mov
dec
add
xchg
mov
dec
push
sub
(bad)
mov
adc
mov
mov
or
sbb
mov
dec
cmp
sub
inc
sub
adc
stos
test
adc
iret
rcr
xor
imul
(bad)
dec
pop
pop
dec
js
aad
xchg
div
ins
call
fsub
loope
lods
or
adc
mov
add
retf
sar
sub
fmulp
call
sub
adc
xchg
out
cld
fwait
mov
sbb
jg
shl
das
lahf
xchg
mov
cmp
push
sti
(bad)
mov
mov
aam
(bad)
out
pushf
test
jg
ror
je
sbb
xor
test
add
popf
(bad)
inc
int3
sahf
ror
int
inc
dec
cwde
fwait
(bad)
dec
mov
inc
lock
repnz
test
rcl
cmps
lods
and
dec
aas
rcr
jns
cmp
fbld
scas
adc
(bad)
push
imul
mov
lds
sub
or
sar
mov
into
stos
popa
rcl
xor
xor
push
mov
adc
pop
repnz
lods
pop
bound
mov
mov
or
inc
inc
add
scas
adc
imul
mov
sti
(bad)
push
shl
push
sti
add
and
jnp
(bad)
int3
and
push
jo
loop
jbe
gs
dec
cmps
xchg
add
add
scas
sbb
push
ja
inc
mov
inc
xchg
in
stos
fdiv
jo
or
mov
movs
call
clc
mov
stos
push
enter
mov
mov
push
jmp
inc
inc
mov
push
mov
ret
xlat
xor
pop
xchg
cmp
mov
out
test
and
ins
aad
mov
fwait
cmps
push
(bad)
hlt
sub
(bad)
mov
sti
mov
mov
adc
inc
fcmovne
aas
dec
mov
clc
cdq
mov
fisttp
push
inc
sub
push
ja
sbb
icebp
loop
xor
sbb
inc
cmp
sub
lds
es
push
jb
in
out
fst
sbb
mov
data16
mov
dec
sbb
rcl
loope
cld
cmp
adc
jmp
or
pop
aaa
outs
ds
les
or
xchg
outs
jno
mov
sub
jp
cld
add
(bad)
shr
mov
fstp
xor
jns
dec
push
add
test
and
daa
lock
test
ss
mov
ret
fs
mov
into
jmp
ins
mov
xchg
aad
and
call
jp
iret
adc
aas
jmp
mov
call
sahf
xor
cli
cdq
inc
aam
cmp
retf
(bad)
shl
fiadd
retf
outs
mov
mov
cwde
dec
fild
mov
ja
std
lods
and
les
or
adc
fdiv
bound
arpl
mov
pop
adc
mov
push
leave
mov
sti
out
fmul
jmp
das
std
es
retf
mov
cmc
lds
div
sbb
(bad)
inc
sub
mov
and
xor
sub
ror
fidiv
jne
push
mov
cmp
enter
add
inc
cmp
scas
call
add
cmp
bsf
push
les
add
sbb
sbb
inc
fstp
leave
mov
add
pop
inc
stos
(bad)
fcom
push
cld
ja
test
push
sbb
daa
fwait
fwait
sar
into
jp
or
add
(bad)
pop
pop
std
xchg
call
leave
stc
mov
enter
dec
fldcw
cmp
pop
cs
mov
loope
retf
fwait
lods
pop
ret
mov
rcl
fld
xchg
mov
mov
sbb
dec
shl
mov
cmp
repnz
sbb
lea
aam
mov
adc
pop
pop
sti
dec
adc
push
das
cld
dec
sbb
dec
dec
imul
sub
enter
inc
test
aaa
pop
retf
outs
hlt
pushf
adc
std
mov
fxch
mov
fst
mov
or
lods
sub
js
addr16
jbe
or
mov
adc
fdivp
mov
jmp
mov
or
loop
outs
in
adc
and
jmp
(bad)
test
xor
add
pop
add
sub
out
cdq
sbb
stos
jno
adc
xor
call
jg
cmp
jg
loopne
out
jle
cmp
movs
jmp
cli
mov
jecxz
sub
jbe
push
inc
fnstcw
int
sbb
fcom
pop
test
hlt
jle
dec
test
lea
pop
push
sub
pop
stos
cld
dec
retf
mov
inc
pop
add
cmp
dec
xor
xchg
pop
xor
pop
pop
pop
rcl
xor
retf
and
fucomp
addr16
inc
mov
cwde
xchg
add
int3
jecxz
and
xchg
std
xchg
push
sbb
fdiv
ret
push
test
js
lock
push
in
popf
outs
fistp
add
in
and
mov
jmp
jmp
(bad)
adc
pop
xor
out
popf
shr
dec
sti
rol
pop
arpl
sub
adc
test
mov
(bad)
fdiv
sti
dec
or
fs
lods
xchg
test
cmp
scas
push
int3
mov
dec
in
sbb
das
mov
test
js
cli
loope
mov
in
mov
mov
fwait
out
xor
out
jg
movs
ins
cli
inc
(bad)
div
call
out
(bad)
pop
lds
sbb
mov
xor
sbb
inc
enter
cmp
adc
pop
sub
mov
and
imul
sbb
adc
test
ficom
inc
(bad)
movs
into
inc
outs
add
test
pop
movs
cmp
mov
fdivr
sahf
pop
cmp
cdq
dec
mov
mov
add
add
cmp
pop
mov
xchg
xor
out
pop
mov
rol
inc
mov
stos
inc
add
pop
fld
and
(bad)
(bad)
imul
push
pop
mov
mov
fwait
aas
fidiv
enter
mov
inc
add
push
pop
add
addr16
pop
jb
loop
(bad)
mov
pop
push
jge
or
out
add
addr16
jl
dec
(bad)
cmp
xor
and
addr16
pop
idiv
addr16
xor
iret
lods
not
mov
inc
not
stos
jo
test
imul
fsub
mov
imul
lods
(bad)
sub
jbe
dec
mov
retf
fstp
aam
rcl
(bad)
or
fisubr
loopne
call
pop
pop
inc
(bad)
gs
adc
and
pop
(bad)
xchg
xchg
cmps
mov
mov
mov
jmp
imul
dec
jle
and
mov
xchg
pop
in
add
mov
cmovo
(bad)
jle
pop
pop
imul
push
cmp
ficomp
adc
pop
push
repz
dec
xchg
jo
xchg
mov
sbb
rcr
mov
xchg
(bad)
in
xchg
cmp
xchg
dec
mov
arpl
repnz
jnp
rcr
mov
pop
push
in
adc
test
call
inc
mov
xchg
add
or
or
ds
inc
mov
mov
arpl
imul
loop
inc
pusha
adc
sub
(bad)
xchg
pusha
jp
cld
lods
outs
inc
gs
sbb
inc
fist
push
dec
cmps
and
mov
ins
adc
nop
push
scas
mov
and
(bad)
in
test
jle
mov
repz
push
ret
mov
gs
mov
inc
call
xchg
cmp
or
mov
test
test
xor
pop
ins
in
outs
jno
lock
mov
rcl
stc
loop
mov
scas
mov
mov
push
inc
push
adc
add
enterw
inc
mov
call
inc
push
jge
pop
xchg
bound
pop
push
pusha
mov
(bad)
pop
outs
out
repz
loope
push
hlt
test
sub
lods
test
sti
cld
adc
adc
mov
and
xchg
cmp
leave
stos
xchg
aad
jno
shl
arpl
and
pop
jmp
sub
jg
mov
enter
out
cmps
imul
sbb
dec
(bad)
neg
dec
mov
dec
in
jb
sbb
repz
pop
loope
mov
mov
jl
mov
mov
or
pushfw
imul
test
in
js
aas
dec
pusha
or
or
(bad)
cmp
or
pop
xchg
cwde
cmc
inc
imul
and
test
int3
in
push
test
stos
pop
mov
mov
xchg
or
cmp
retf
adc
fs
jno
cmp
aas
addr16
xchg
ja
(bad)
jnp
loope
lock
test
dec
sbb
mov
or
into
stos
dec
jl
cmc
test
sub
mov
pop
mov
leave
pushf
shr
mov
pop
(bad)
ror
ins
fidiv
jl
dec
jo
aas
pop
hlt
ficom
arpl
inc
cld
fst
stc
(bad)
cld
leave
dec
and
add
sbb
hlt
mov
shl
in
outs
push
test
mov
sub
inc
mov
scas
cmps
cld
add
fadd
stos
scas
ds
mov
push
cmp
outs
sbb
mov
or
test
jg
mov
xor
cli
(bad)
scas
jae
ficomp
leave
jmp
test
bound
sub
movsx
or
push
add
push
imul
dec
fild
stc
mov
pop
pop
and
sub
inc
outs
jnp
jae
lea
dec
nop
xchg
out
rol
mov
adc
pop
imul
cmc
push
(bad)
and
jmp
pop
or
pushf
mov
mov
xor
daa
mov
push
mov
call
or
daa
mov
mov
pop
cli
mov
call
bound
push
lea
sar
cs
fsubr
push
mov
or
jecxz
mov
or
mov
ss
inc
or
push
jg
dec
xchg
in
add
ficom
js
xor
push
push
dec
inc
xchg
les
or
les
iret
sbb
mov
out
mov
mov
jnp
(bad)
enter
mov
call
mov
inc
(bad)
out
test
mov
in
adc
and
and
pop
or
xchg
jp
popf
dec
mov
xor
(bad)
sahf
push
dec
add
leave
test
cmp
pcmpeqb
test
lock
xor
mov
add
sub
adc
je
call
adc
inc
push
xchg
jo
fcmovne
cmps
jmp
push
push
cwde
cdq
mov
imul
gs
mov
mov
lock
outs
pop
sbb
popf
sub
fild
mov
neg
add
enter
xor
and
xor
retf
sub
pushf
call
xchg
push
stos
repnz
jno
jl
jp
and
aaa
(bad)
mov
popf
sahf
test
test
add
cmp
stc
subps
fsubr
dec
pop
xchg
call
retf
(bad)
shl
sbb
push
jle
mov
push
sub
in
mov
cmp
and
inc
mov
mov
xchg
mov
jnp
lds
jnp
fdivr
push
(bad)
xor
xchg
out
push
push
mov
clc
les
pushf
pop
mov
cld
retf
dec
mov
cmp
dec
mov
cs
shr
mov
dec
mov
mov
mov
pop
out
cmp
gs
outs
or
in
in
inc
push
sub
push
lea
xor
xlat
ja
scas
cmc
jle
sub
call
mov
push
jmp
in
add
inc
dec
add
out
hlt
lahf
pop
cmp
ja
lods
hlt
jnp
mov
dec
sbb
pushf
sti
mov
lea
data16
daa
push
add
adc
push
sub
loope
push
push
push
pop
xor
fwait
aas
mov
jl
xor
jbe
cmp
sub
pushf
in
jmp
push
xchg
push
cwde
sub
hlt
loop
or
xor
dec
lahf
call
dec
cmp
jmp
mov
ror
dec
mov
push
jle
push
pop
sti
ret
arpl
ficom
push
fist
mov
dec
loop
and
add
lods
cmp
jp
mov
or
sub
es
test
mov
xchg
push
lods
dec
loop
mov
inc
sub
sbb
push
push
pop
or
push
push
add
jno
cmp
fldl2t
jnp
rcl
pop
loopne
je
in
inc
jo
ss
adc
out
xchg
maxps
cmc
clc
dec
cli
adc
jae
add
jl
ret
or
hlt
jl
sahf
cs
cwde
rcl
pushf
aaa
xor
mov
mov
std
int3
or
dec
sbb
sbb
mov
pop
movs
mov
dec
idiv
retf
mov
mov
dec
jecxz
adc
cmp
add
neg
popf
stos
out
popf
ins
lahf
js
dec
adc
sub
ss
push
int
(bad)
jbe
hlt
mov
daa
mov
sub
pop
mov
lds
jle
outs
js
fidivr
sbb
imul
push
repnz
xor
jge
sub
leave
shl
scas
mov
and
inc
cdq
cmp
sub
sub
jno
ins
lea
push
lahf
faddp
sub
inc
leave
int
mov
mov
and
call
dec
xor
jo
cmp
mov
inc
out
loop
popa
mov
jl
push
sub
sbb
clc
pusha
dec
ja
icebp
add
push
dec
arpl
pusha
int
sbb
fcom
mov
add
sub
mov
xor
mov
jmp
call
hlt
xchg
cdq
mov
inc
jae
cmp
neg
ror
sub
enter
(bad)
mov
rol
sub
mov
ret
adc
xchg
add
add
outs
loope
aaa
and
inc
push
push
lea
in
push
cmp
loope
les
cdq
adc
jmp
imul
rcl
sub
dec
fnstsw
or
test
scas
or
fsubr
mov
cmp
test
mov
mov
out
fs
sbb
cmp
xchg
push
cmc
jns
loopne
ja
jge
fsub
(bad)
push
mov
add
or
bound
out
rol
hlt
push
push
fld
mov
popa
fs
sbb
repnz
scas
cmp
(bad)
jge
(bad)
loop
pop
xor
xchg
ins
(bad)
mov
(bad)
pop
or
inc
nop
mov
ret
push
jne
cmp
das
inc
fwait
cmp
(bad)
shl
mov
sysret
jmp
inc
cmp
addr16
mov
stc
aas
jb
ins
aaa
add
clc
pop
sahf
adc
pop
into
pop
jno
retf
(bad)
xor
aam
sub
ficom
inc
sub
sub
sbb
cmp
div
mov
loop
and
adc
adc
clc
pop
pop
xchg
sahf
test
idiv
sbb
ins
adc
cmc
es
sti
adc
out
sub
jbe
in
divps
fidiv
add
pop
sbb
xrelease
inc
movs
adc
inc
xchg
retf
jmp
clc
test
and
jb
cli
cmp
aas
(bad)
ds
inc
mov
test
pop
(bad)
neg
in
test
js
xor
(bad)
in
js
pop
sbb
pop
sub
mov
movs
mov
dec
pop
movs
icebp
(bad)
jmp
mov
rcr
aam
push
push
ins
adc
inc
push
scas
push
xchg
imul
cdq
inc
stos
jne
xchg
xchg
push
fs
mov
(bad)
fsubr
jb
imul
xor
ret
push
lock
outs
in
stos
adc
retf
out
cmc
icebp
push
add
fwait
shr
sbb
mov
pop
mov
mov
xor
add
iret
cld
sub
or
xchg
push
xchg
call
stos
in
inc
outs
cli
(bad)
aad
sub
dec
jmp
popf
mov
icebp
ret
mov
inc
call
jp
in
ror
cwde
xor
push
dec
div
stos
cmps
ss
fld
mov
outs
outs
mov
jecxz
sbb
loope
pop
inc
fwait
data16
movs
pop
inc
xchg
pop
dec
retf
mov
sbb
retf
push
mov
mov
mov
in
(bad)
imul
cmps
mov
add
sub
and
mov
dec
xchg
(bad)
jp
retf
les
jno
xchg
test
xor
sub
push
mov
xchg
mov
sbb
sub
dec
pusha
shl
sbb
loopne
bound
lods
jno
dec
shl
jnp
xor
mov
pop
inc
rcl
mov
ds
(bad)
fiadd
sub
add
(bad)
hlt
pop
fucomip
out
sbb
popf
cld
sbb
test
fwait
cld
jb
mov
(bad)
and
adc
not
push
mov
or
jge
mov
mov
lods
(bad)
adc
sar
sub
mov
aad
mov
cmp
(bad)
cli
push
and
push
mov
rol
retf
and
icebp
imul
fcmove
mov
mov
(bad)
scas
repz
sbb
cmps
and
ret
retf
jmp
repnz
call
in
js
mov
sbb
les
cmc
add
mov
sbb
lods
inc
cmp
mov
mov
dec
push
cmps
and
sub
arpl
les
out
scas
stc
popf
loopne
sbb
into
aas
push
repnz
cmp
or
sub
add
dec
sub
mov
adc
in
mov
(bad)
lock
pop
aas
mov
jne
dec
or
ss
fisttp
cmp
lock
imul
and
mov
inc
scas
mov
int
push
shl
shr
iret
jecxz
leave
pop
cli
cmps
ror
sbb
jae
xlat
add
mov
add
ja
jnp
sub
dec
dec
mov
dec
cmps
add
xor
or
lds
(bad)
jne
jno
std
jecxz
push
push
je
inc
idiv
faddp
gs
test
pop
push
sub
mov
shr
push
xor
jl
dec
test
outs
add
pop
ss
jl
xor
sahf
and
add
inc
dec
jne
popf
fstp
shl
jns
fist
cmps
xor
pop
neg
mov
hlt
xchg
jns
popa
sub
cmp
xor
sbb
ss
jl
div
out
push
lods
popa
les
or
sbb
inc
ror
sub
lock
mov
inc
inc
icebp
sub
pxor
popa
pop
addr16
mov
rcl
pop
push
dec
popf
cmp
mov
cmps
push
test
inc
or
ret
xrelease
adc
ins
xor
and
call
cld
arpl
sbb
and
fbstp
pop
leave
push
cmp
mov
ret
mov
and
pop
ins
xchg
mov
xchg
inc
and
rcl
push
mov
push
jmp
pop
pop
xor
push
scas
ror
dec
test
xchg
push
je
or
aas
push
pop
jl
mov
or
pusha
mov
mov
js
push
xchg
cwde
call
xchg
add
mov
test
ret
call
movs
out
(bad)
fst
xor
dec
movs
add
jne
mov
data16
push
sbb
sub
je
mov
adc
cld
movs
pop
retf
aad
sub
lods
inc
mov
call
in
stc
xchg
sbb
add
dec
(bad)
in
mov
xchg
std
test
dec
pop
jl
inc
cmp
inc
fwait
mov
add
cmp
mov
pop
xchg
jo
jle
call
mov
mov
cwde
inc
inc
xor
jne
sbb
xchg
cmp
mov
iret
mov
(bad)
lahf
and
add
imul
cld
rcl
out
arpl
scas
or
push
(bad)
fsub
fs
or
aad
stos
or
scas
aas
cmps
mov
sbb
fcmovnu
bound
call
xchg
xchg
jae
mov
push
dec
inc
inc
mov
adc
jl
test
call
cs
sbb
or
cld
xor
adc
sbb
sbb
dec
mov
adc
add
adc
dec
ficom
xchg
cmp
out
mov
test
aaa
cld
xor
adc
pushf
sbb
jnp
ss
loop
add
in
and
sub
pop
jecxz
xchg
mov
mov
pop
shl
sbb
lock
int
inc
cwde
cli
sbb
mov
push
les
inc
bound
cdq
in
scas
adc
lahf
mov
dec
ret
or
movs
imul
or
popa
