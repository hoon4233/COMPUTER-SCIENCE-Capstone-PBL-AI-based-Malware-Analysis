aas
ret
mov
cli
mov
mov
cmp
in
outs
dec
push
or
daa
fld
fist
nop
jle
xchg
aaa
push
sbb
jno
cmp
xchg
sbb
loopne
mov
xor
fwait
mov
call
in
jmp
test
popf
sub
push
out
out
stc
mov
out
fcom
push
sbb
fstp
and
or
xchg
cmp
(bad)
out
and
push
sbb
mov
int3
pop
push
int3
adc
ins
cs
(bad)
fiadd
pop
jge
or
mov
sbb
jnp
outs
pusha
fcmove
jns
push
adc
gs
pop
rcr
loop
sub
pop
and
ins
jecxz
mov
outs
and
in
sub
sub
sub
cld
jmp
jmp
cmp
jmp
neg
mov
push
jl
xor
popf
dec
mov
sbb
movs
cmp
ret
sub
or
sahf
sti
mov
daa
xchg
scas
inc
pusha
add
pop
stos
pop
test
push
mov
loopne
out
jecxz
push
aad
xor
dec
lahf
cmps
pop
lods
loope
cmp
mov
or
loopne
mov
stos
jp
pop
addr16
pop
adc
or
into
cmp
mov
dec
xchg
push
out
dec
cmp
fwait
adc
jbe
xchg
xor
xchg
and
addr16
xor
or
add
rcr
xchg
mov
push
test
jmp
ss
icebp
and
push
and
and
sub
movs
sbb
shl
push
xchg
sub
mov
xchg
shl
mov
cwde
scas
push
or
push
sbb
movs
imul
lock
loopne
pop
pop
outs
mov
test
inc
in
push
push
jb
dec
xchg
movs
dec
out
in
sub
push
hlt
or
push
popf
vphaddubq
push
and
push
fild
push
and
xchg
lods
(bad)
mov
ret
aaa
shr
mov
cmp
push
sub
gs
psllq
or
add
test
xchg
ins
mov
xchg
push
cmp
(bad)
not
mov
add
jnp
les
mov
pop
and
mov
fst
jno
psrad
ror
dec
mov
daa
cmp
push
test
jb
xchg
enter
mov
push
rcl
daa
cmp
aam
sub
scas
dec
xlat
cmps
(bad)
jne
jg
and
add
pop
jne
stos
mov
mov
(bad)
(bad)
repz
mov
repz
js
pop
ja
xchg
cmp
pop
aam
push
movs
jo
pop
std
pop
test
bnd
mov
jbe
cmp
push
xchg
scas
and
out
xor
fcmove
mov
arpl
in
push
mov
jns
in
out
dec
xchg
fdivr
xchg
mov
push
jg
clc
adc
sbb
sub
loope
(bad)
ins
xchg
ret
xchg
les
mov
imul
adc
out
gs
ins
xlat
call
mov
cmp
xchg
and
ja
pop
push
jg
inc
out
ret
mov
sbb
xor
(bad)
mov
dec
test
retf
push
cdq
sahf
dec
popf
jns
xor
dec
xchg
mov
fld
adc
(bad)
or
retf
mov
cmp
jle
dec
adc
jo
push
ret
fld
loope
xor
(bad)
fbld
push
pop
add
add
mov
dec
out
mov
imul
pusha
jecxz
inc
xor
fsub
sbb
mov
into
inc
std
and
out
mov
push
lock
pop
push
or
out
cmp
fadd
push
pop
add
sbb
push
fist
ja
not
stc
into
mov
enter
loopne
(bad)
or
ret
movs
jo
out
sub
fsub
pop
or
(bad)
or
imul
scas
sar
(bad)
dec
scas
xchg
aad
das
loop
mov
or
jb
xor
add
test
lahf
or
push
inc
iret
cmp
xchg
mov
sahf
mov
and
ins
test
jbe
hlt
push
mov
inc
mov
mov
xchg
cmp
mov
pusha
fmul
inc
mov
les
sbb
stos
loop
mov
xchg
ror
or
xchg
inc
sbb
popf
jmp
arpl
in
jmp
push
int
sar
adc
adc
shr
sub
inc
push
sub
mov
cmp
mov
test
dec
and
ja
push
or
mov
mov
xchg
jecxz
dec
add
pusha
imul
inc
mov
xchg
pop
or
out
loop
dec
out
sbb
aam
and
das
mov
xchg
data16
in
(bad)
mov
cmp
outs
repnz
mov
(bad)
(bad)
add
cld
push
dec
cmp
test
mov
out
jmp
lods
adc
cwde
push
test
data16
out
jbe
movs
mov
and
repz
pop
std
mov
dec
sbb
ds
or
and
xchg
arpl
and
jp
cs
sub
cmps
stc
adc
cmp
jmp
jmp
dec
mov
push
mov
jmp
ret
push
dec
je
xchg
stos
jmp
inc
mov
sahf
sahf
adc
jmp
(bad)
lock
and
push
add
push
push
jae
loope
xor
loope
cdq
jg
mov
and
into
aam
test
fcom
pop
fcomp
push
loop
mov
stos
call
data16
ret
(bad)
lds
cwde
mov
clc
aad
out
cmps
or
lods
jmp
fiadd
aas
loop
mov
mov
mov
sub
or
or
jmp
push
int
movs
push
mov
out
lahf
out
and
daa
add
sub
jns
shl
mov
or
cmp
clc
mov
sbb
cmps
sbb
xchg
jl
adc
dec
leave
bound
dec
int
fcomp
rcl
sub
xor
sub
loope
cld
cwde
sahf
mov
es
jnp
push
lods
mov
pop
out
dec
lods
push
fwait
jmp
das
in
enter
mov
xchg
mov
stos
outs
pop
out
es
cmp
sub
xchg
ret
cdq
sbb
mov
jle
in
mov
inc
and
nop
and
(bad)
out
das
jae
stos
push
or
or
push
loope
imul
nop
scas
call
push
dec
and
daa
int3
mov
add
clc
ficom
mov
adc
and
ja
mov
push
or
inc
pop
sbb
xor
jmp
push
xchg
aad
inc
retf
out
mov
push
movs
dec
jbe
sar
ins
push
or
ret
mov
inc
aaa
mov
sahf
mov
inc
test
xor
in
mov
ret
mov
je
pop
adc
pop
(bad)
or
aad
stos
out
(bad)
push
xor
dec
dec
adc
out
rcl
jp
out
mov
sub
call
(bad)
ficom
jmp
rcr
lds
jo
xchg
movs
pop
ret
and
or
call
jno
lods
lods
stc
dec
adc
mov
(bad)
cmp
dec
xchg
sbb
adc
arpl
sub
sub
pop
and
stos
inc
and
nop
jmp
ret
ds
mov
imul
push
je
xchg
pop
mov
sub
mov
clc
in
jle
into
nop
aad
mov
scas
out
pop
arpl
call
jmp
cmps
xchg
loope
cmps
xchg
mov
jl
iret
push
mov
sub
lock
or
mov
iret
or
xor
call
dec
hlt
iret
mov
es
xor
xor
xor
adc
sub
sub
jge
es
sbb
cmps
stc
xlat
call
xchg
inc
add
stos
scas
push
mov
adc
inc
int3
imul
shl
sub
imul
imul
shr
(bad)
lds
add
mov
mov
dec
xlat
enter
sbb
push
in
push
iret
push
sub
push
and
imul
adc
sub
call
sub
add
sub
cmp
aam
or
jns
fisubr
mov
sub
fmul
dec
repnz
and
jne
daa
sbb
pop
xchg
in
mov
pop
test
push
cmp
pop
hlt
out
addr16
pop
mov
sub
xchg
test
inc
pusha
sbb
mov
fstp
sub
push
mov
aas
mov
mul
ror
inc
and
dec
jb
jp
dec
inc
mov
adc
dec
cwde
add
inc
call
mov
dec
bound
push
xchg
popf
jg
fiadd
jb
inc
nop
mov
popa
mov
shl
imul
mov
outs
cs
dec
cmp
repnz
mov
mov
xor
xchg
hlt
pop
div
es
pop
xchg
ss
jbe
jne
data16
jg
ja
dec
and
fnsave
pop
pop
pushf
sbb
push
in
and
sbb
and
imul
leave
mov
out
in
mov
mov
adc
es
pusha
jae
popa
fcom
sbb
xchg
xchg
jp
pop
mov
cmp
dec
sbb
dec
sub
xchg
(bad)
cs
cmps
nop
mov
leave
scas
mov
xchg
out
pusha
div
inc
rep
xchg
pop
ins
enter
adc
iret
pop
in
jo
cmc
iret
in
push
dec
xchg
lea
daa
mov
pop
mov
mov
xlat
fsub
xchg
or
repz
stos
push
cmp
xchg
add
pop
in
leave
fiadd
ins
std
jno
retf
shl
aas
repz
cmps
push
push
add
out
ins
mov
in
mov
shl
(bad)
jnp
repnz
loope
push
fmul
dec
fs
movs
test
sub
mov
or
cdq
xchg
sar
jge
ret
add
cmp
(bad)
push
jmp
add
das
lock
das
inc
frstor
dec
leave
rcl
cld
shr
sub
cmp
(bad)
jno
or
pop
dec
aad
ja
pusha
ret
das
in
sbb
push
fwait
xchg
test
and
std
in
dec
cmp
popa
outs
hlt
and
sbb
in
repz
sub
mov
and
mov
add
push
les
push
jbe
xor
and
(bad)
pop
xor
(bad)
sti
call
jmp
loop
leave
ficom
(bad)
into
in
sub
cmp
and
jmp
popa
xchg
add
push
push
sar
xlat
leave
cmp
xor
and
jb
stos
cmps
xchg
sub
cmp
jns
and
pop
add
sub
cmps
adc
add
jb
adc
call
or
push
lock
sub
pop
dec
sbb
test
lds
xor
int
cmp
aam
call
and
dec
jb
(bad)
pushf
(bad)
ror
into
out
and
and
mov
mov
dec
scas
dec
add
out
lods
add
(bad)
pop
sbb
retf
inc
inc
adc
or
out
movs
pop
mov
push
cmp
es
inc
stos
test
sbb
xor
cmp
retf
in
mov
setno
mov
aaa
jl
mov
pop
push
popa
xor
mul
mov
shl
jae
push
into
iret
cwde
loop
mov
dec
je
scas
and
rol
jne
mov
imul
rcl
sbb
out
inc
cmp
bound
mov
or
fst
imul
fdivr
xchg
hlt
dec
mov
lods
mov
mov
ds
in
jnp
rcr
jecxz
test
and
mov
xor
add
(bad)
popa
jp
enter
inc
sar
fiadd
stc
cmps
aas
mov
jp
mov
sub
data16
xchg
imul
cwde
dec
imul
aad
sbb
xchg
inc
iret
call
dec
and
jecxz
jb
xlat
cmps
retf
rcl
gs
cld
adc
in
add
xchg
pop
lods
push
sahf
xchg
mov
jae
push
cmp
out
ret
xchg
in
jl
ret
iret
into
retf
inc
ins
pushf
adc
mov
adc
push
mov
shl
mov
fidivr
rcl
sub
out
lods
ins
fs
jge
xlat
or
mov
cmc
pop
sub
nop
cwde
shl
test
out
xchg
retf
push
data16
mov
dec
sub
rol
mov
mov
xchg
bound
xchg
dec
adc
fsubr
stos
push
fnsave
lods
bswap
xchg
cmp
jbe
mov
add
fisttp
iret
xchg
jbe
mov
cdq
add
(bad)
in
or
add
lods
dec
xor
out
test
cdq
imul
sbb
nop
xchg
push
(bad)
in
shr
mov
xchg
push
xchg
push
dec
xor
xor
mov
test
lahf
fisub
clc
mov
xchg
xor
mov
mov
and
out
and
movnti
(bad)
mov
push
(bad)
call
push
sbb
jnp
imul
and
pop
mov
(bad)
in
or
adc
std
call
push
cmp
fbstp
or
push
inc
and
jo
mov
mov
mov
xor
fdiv
mov
ss
je
jge
adc
push
jo
mov
xchg
inc
or
add
pop
cmps
pop
adc
std
test
inc
lahf
lods
pop
mul
cmp
popf
test
jg
stc
stos
aaa
cdq
adc
into
xor
adc
push
xor
std
nop
pop
xor
pop
mov
enter
push
das
cs
jno
xchg
cmp
pop
lods
call
mov
mov
jae
js
test
cmps
adc
rcr
xchg
inc
cmp
sbb
mov
xchg
xchg
xor
mov
das
inc
sub
mov
nop
sahf
adc
sub
jge
push
mov
jbe
xor
jmp
add
rcl
ret
push
jae
mov
mov
add
aaa
mov
out
inc
stos
mov
or
in
das
shl
rcl
pop
iret
aad
or
adc
aam
hlt
in
dec
or
enter
or
xchg
push
jp
or
xor
or
pusha
mov
push
jo
xadd
cdq
jbe
cmp
inc
or
sbb
(bad)
stos
jns
jmp
into
and
jmp
loopne
cmps
xlat
loope
dec
fwait
xor
push
imul
xchg
pop
or
add
aaa
call
push
xchg
jle
jge
out
test
jg
jle
sub
dec
mov
(bad)
icebp
jns
mov
jo
mov
adc
sbb
scas
and
not
test
mov
jb
adc
xchg
jae
jmp
adc
mov
cmp
pusha
xchg
mov
mov
push
pusha
pop
ins
loopne
jge
adc
jno
push
dec
dec
lods
pusha
cmp
push
push
popf
shl
jge
enter
mov
sub
sub
dec
mov
dec
test
iret
sbb
inc
xor
imul
pop
cld
xchg
xchg
scas
mov
retf
pop
cwde
and
and
std
lods
pop
mov
repz
in
sti
pop
dec
retf
ja
add
pop
cdq
ret
inc
mov
pop
mov
add
mov
adc
(bad)
push
shl
cmps
jg
jno
add
aad
scas
push
dec
bound
inc
adc
pop
popa
xor
sub
pop
ins
sbb
mov
cmp
sub
add
je
sub
mov
inc
pop
(bad)
in
push
in
iret
call
mov
mov
mov
jle
mov
call
fistp
daa
sub
mov
shl
lods
leave
addr16
mov
retf
mov
(bad)
int3
ret
mov
sahf
mov
mov
add
pusha
ret
push
test
cli
loop
mov
clc
and
lea
shr
retf
and
cmc
cmps
aam
mov
fnsave
adc
stos
mov
les
xchg
or
xchg
push
mov
cmps
mov
(bad)
sbb
mov
out
push
cmp
and
adc
push
jne
sub
pop
jle
add
cmp
loop
adc
add
(bad)
lock
scas
popa
pop
fistp
sub
dec
add
cwde
lock
bound
mov
xor
cmp
jge
cld
jl
dec
imul
div
fcmovnb
mov
loopne
in
in
inc
cmps
iret
mov
and
repz
fist
scas
ins
mov
jae
cmp
bound
lock
je
push
cli
sbb
fstp
jb
sub
pop
adc
fild
mov
cli
test
(bad)
fldenv
mov
test
mov
sbb
aas
and
adc
out
xchg
xchg
push
je
mov
xchg
mov
push
push
push
push
add
(bad)
pop
jae
pop
inc
std
mov
fwait
jb
mov
call
mov
sub
add
or
rcl
(bad)
xlat
fwait
lea
hlt
push
sbb
sub
jge
cmp
jmp
xlat
adc
mov
leave
jo
mov
outs
dec
jp
xor
sbb
push
(bad)
fsubr
pop
and
add
fs
mov
add
addr16
mov
test
ret
ss
ficomp
int
mov
(bad)
scas
(bad)
test
nop
fisub
ins
(bad)
out
ins
cmp
add
xor
cmp
sub
jmp
xchg
pop
xor
xchg
test
cmc
stos
pop
jmp
shl
(bad)
stc
stc
and
(bad)
mov
not
push
retf
pop
xchg
shl
mov
add
hlt
jp
loop
test
jl
xchg
leave
mov
dec
and
mov
adc
jmp
pop
outs
shl
sub
fwait
popa
fiadd
out
sar
xor
push
push
adc
je
sub
scas
push
mov
(bad)
dec
shl
lahf
daa
ds
push
imul
push
pop
leave
jns
movs
xchg
shl
aas
pop
jne
outs
test
shl
ins
mov
xor
nop
ret
test
popa
adc
out
xchg
xchg
adc
pop
cmp
ins
add
add
stos
mov
loop
scas
imul
repnz
add
push
mov
adc
out
add
xlat
jo
add
jo
scas
adc
std
xor
push
mov
ds
cdq
mov
loop
push
outs
push
in
xchg
jmp
sub
sub
mov
cmp
fisubr
outs
mov
add
push
imul
ins
imul
or
jle
jl
mov
dec
mov
jl
xor
out
cwde
pop
mov
ins
push
addr16
pop
or
(bad)
aaa
pop
jp
push
out
jmp
cmc
or
or
add
leave
mov
jbe
fwait
je
jns
adc
xchg
pop
xchg
cld
clc
inc
sub
cld
xchg
outs
add
(bad)
mov
(bad)
fwait
shrd
jp
xchg
pushf
and
shr
push
push
hlt
das
pop
mov
fstp
mov
sub
xor
sti
xor
mov
inc
mov
out
and
(bad)
jle
jg
lods
mov
cwde
xchg
sar
jnp
ins
lea
scas
cmp
in
not
dec
add
dec
nop
cmc
dec
repz
hlt
loop
push
sti
cmp
push
mov
dec
pop
jbe
aam
pushf
mov
jmp
sub
inc
outs
iret
movs
mov
sbb
loope
sub
adc
lods
xor
xchg
mov
or
mov
adc
sbb
push
mov
xchg
(bad)
test
jmp
addr16
jg
and
ror
add
sub
xchg
addr16
xchg
jmp
stc
mov
les
ins
xchg
xor
dec
mov
sbb
rcr
mov
adc
inc
lahf
mov
cmps
arpl
jl
dec
cmp
jb
inc
out
cmps
jmp
mov
imul
mul
jmp
cmp
jecxz
jns
xlat
pcmpeqw
and
and
mul
das
mov
imul
mov
push
and
movs
out
mov
dec
bound
inc
scas
jnp
outs
cmp
call
xchg
movs
retf
pop
sbb
stos
sub
aaa
fstp
and
in
jmp
sub
fisttp
(bad)
sub
and
mov
imul
(bad)
push
jno
int3
dec
in
and
jp
xchg
sbb
(bad)
je
pushf
mov
je
bound
push
(bad)
adc
aas
sbb
pop
iret
dec
mov
shr
(bad)
out
lods
jmp
test
dec
ds
sbb
mov
inc
mov
cmp
push
jae
gs
xchg
mov
loope
mov
(bad)
ficomp
push
sbb
mov
shl
jmp
dec
fs
xlat
jbe
aaa
inc
adc
pop
movs
popf
(bad)
cmpxchg
aad
sub
push
or
popa
pop
call
jecxz
out
gs
cli
push
xlat
fsubr
jl
pusha
test
imul
cmc
(bad)
retf
mov
and
push
pop
cmp
sbb
pushf
cmps
cmps
and
cmp
push
inc
rcr
mov
std
pop
call
pop
jno
test
mov
lods
aam
inc
push
das
jmp
mov
add
sar
jo
outs
pop
mov
retf
jle
jb
stos
pop
cli
stos
xchg
jecxz
jp
push
mov
loop
arpl
lock
jo
je
outs
xor
xchg
push
inc
icebp
xchg
push
and
inc
scas
add
enter
sbb
mov
jb
movs
or
ins
mov
mov
or
push
outs
sbb
(bad)
std
xor
dec
pop
dec
adc
out
cmp
call
bound
and
repz
test
xor
clc
ss
sub
stos
das
jne
push
or
in
fwait
pop
mov
mov
in
stos
cwde
sbb
or
cdq
mov
cmp
dec
jns
or
or
inc
dec
pop
and
sbb
xchg
sbb
mov
xor
(bad)
out
(bad)
dec
or
and
push
cmc
or
xchg
dec
shl
add
mov
movs
ins
cmp
cdq
out
and
push
addr16
pop
fstp
fisttp
loope
(bad)
jg
add
fiadd
pop
rcr
pop
inc
adc
fs
mov
add
mov
jg
jg
mov
jp
movups
sub
retf
add
xor
adc
and
retf
popa
sub
xor
xchg
xchg
dec
push
je
(bad)
ss
fld
cmp
dec
nop
jo
sbb
imul
mov
lds
bound
test
cmps
stos
pop
mov
adc
dec
movs
je
movs
pop
push
out
nop
push
push
(bad)
jl
rol
add
push
sbb
jp
push
jmp
xchg
loopne
xchg
xor
and
shr
loop
mov
stos
push
inc
mov
and
rol
or
add
in
test
int3
or
cs
sahf
jg
pop
jmp
ins
dec
add
and
add
mov
bound
std
pop
jecxz
inc
pop
loop
arpl
mov
push
cdq
in
iret
in
pop
int3
cdq
inc
mov
and
in
fsub
jl
mov
or
jmp
dec
mov
fmul
call
mov
jl
pushf
jnp
rcr
rcr
fsubr
jns
push
push
xchg
mov
(bad)
scas
in
xchg
push
dec
dec
mov
push
sub
mov
imul
xchg
in
push
inc
mov
iret
test
cmps
fdivr
pop
inc
das
in
dec
test
es
jle
push
sub
mov
in
bound
mov
addr16
leave
and
cmp
call
outs
int3
mov
outs
das
inc
cmp
push
jb
and
icebp
push
pop
jae
and
std
adc
nop
retf
or
pop
pushf
add
sub
stos
pop
pop
outs
enter
push
int
mov
pusha
inc
ins
js
fs
in
ror
js
xlat
inc
xor
sub
jmp
rcr
sub
pop
loop
or
sub
cmp
(bad)
xchg
jne
(bad)
cwde
cld
sbb
inc
and
call
loope
xchg
and
pushf
call
imul
add
enter
xchg
xlat
lods
ins
(bad)
hlt
cmps
data16
xchg
and
xchg
fnstenv
mov
fild
iret
or
fadd
adc
mov
in
jbe
adc
adc
data16
call
jmp
cmp
push
xchg
cmp
shl
mov
int
add
push
fs
ss
mul
fwait
stc
cmp
xor
fcom
mov
xor
shl
addr16
pop
mov
mov
sub
push
or
loopne
lahf
pop
cwde
push
pop
mov
ret
xchg
lods
push
jmp
adc
mov
int
iret
xor
mov
push
mov
aas
cwde
mov
add
orps
leave
out
or
mov
cmps
int
test
sbb
lea
retf
mov
mov
aam
add
js
adc
xor
or
dec
out
mov
mov
scas
push
es
pushf
jl
pop
dec
fild
jge
pop
stc
push
adc
mov
adc
scas
nop
pushf
dec
(bad)
lock
repz
sbb
loopne
clc
mov
shl
mov
lods
outs
cmp
ret
dec
jmp
xchg
and
mov
fadd
(bad)
dec
xor
daa
pop
jl
stc
xchg
pop
add
mov
je
mov
dec
sbb
shl
lock
cdq
lea
mov
test
sub
out
(bad)
fbld
aam
test
call
enter
jmp
cmp
out
rol
push
or
sub
mov
bound
in
int
cmp
and
push
mov
gs
sbb
(bad)
cmp
push
scas
fmul
or
bound
imul
dec
arpl
dec
mov
scas
push
mov
in
push
sahf
jns
jge
and
add
test
lock
inc
push
in
xchg
xor
outs
ret
loopne
mov
xor
add
imul
fist
test
fimul
sti
outs
push
sar
xchg
adc
fld
jge
cmps
xchg
ins
stos
jne
jecxz
scas
jecxz
push
test
jno
call
mov
fidivr
push
add
gs
aam
inc
dec
(bad)
iret
retf
mov
dec
sti
mov
in
ror
jle
lahf
jle
call
xchg
push
add
fimul
add
pop
shl
sbb
or
lds
les
jnp
scas
sbb
lahf
mov
test
div
push
imul
pushf
jno
and
push
loop
mov
js
add
add
adc
iret
mov
jae
mov
test
es
xlat
dec
std
inc
fwait
dec
pop
pop
dec
cmp
mov
jg
inc
cmc
shl
mov
sub
fs
int3
es
jo
loop
retf
bound
adc
sub
shr
inc
inc
pop
cmps
jno
cli
es
out
jp
push
clc
aaa
dec
mov
sahf
mov
cdq
inc
cmp
(bad)
pushf
fist
shl
out
or
push
dec
xor
mov
(bad)
cmps
outs
dec
std
jmp
mov
imul
ins
addr16
mul
push
and
stc
xchg
div
sbb
mov
xchg
mov
bound
fadd
movs
push
pop
fisub
mov
out
and
add
pop
test
popf
int
in
jae
jg
cmp
mov
xchg
xchg
sub
pop
xor
ror
mov
call
jns
or
es
cwde
jp
and
dec
scas
add
or
ins
les
push
imul
or
push
fdivrp
mov
mov
scas
xchg
call
lea
loope
scas
and
mov
cmp
adc
push
add
call
(bad)
dec
xor
mov
sbb
fmul
dec
retf
xchg
xor
vpcmpeqw
popf
(bad)
mov
loop
js
clc
aaa
arpl
pop
scas
pop
scas
sbb
test
mov
and
ret
mov
lds
and
mov
push
(bad)
push
jge
pop
xor
mov
int
sbb
or
jae
cli
xlat
inc
cwde
xchg
push
dec
adc
std
and
mov
mov
adc
and
pop
or
aad
fisttp
push
enter
sub
mov
ficom
fcmovnu
cmp
xor
pop
xor
leave
jo
xor
add
fs
lds
adc
adc
or
push
(bad)
es
mov
in
loope
pusha
and
(bad)
data16
ror
adc
leave
mov
lock
popf
cmc
rcl
imul
push
bnd
add
inc
loopne
push
jbe
std
(bad)
pushf
(bad)
into
dec
and
mov
fisub
push
dec
xchg
add
xor
les
mov
lock
pcmpgtw
pop
cmp
ss
std
mov
rol
shr
sahf
out
rcl
sbb
push
adc
pop
mov
pop
jno
push
ins
idiv
stos
inc
inc
(bad)
cmp
cmps
fs
call
ja
in
jb
scas
call
loopne
pusha
popa
repnz
leave
mov
mov
dec
sbb
ror
pop
adc
cmp
jmp
or
fidivr
xlat
push
dec
or
sub
ja
cmp
sub
les
scas
mov
xor
push
pop
dec
int
test
add
mov
icebp
movs
aad
dec
or
leave
push
xor
xchg
xchg
cmp
in
adc
inc
les
pop
aaa
mov
push
das
sub
pop
retf
ror
mov
jmp
add
dec
stc
and
int
mov
adc
push
sub
clc
push
test
or
cmps
xor
cld
sahf
mov
jle
push
xlat
pop
add
lea
fs
outs
push
aad
mov
call
inc
or
xchg
add
popa
aad
imul
and
cmp
int
sub
icebp
es
adc
jmp
mov
pop
xor
or
(bad)
push
movs
out
retw
stc
scas
fnstcw
pop
outs
jne
iret
add
mov
cmp
(bad)
mov
jno
push
and
fldenv
jnp
int
mov
mov
es
xchg
dec
add
adc
lahf
enter
test
icebp
xor
jecxz
or
cmp
mov
int
dec
sbb
xchg
jge
fs
shr
push
(bad)
in
icebp
cmc
das
jmp
lods
shl
jp
cwde
xor
add
bound
inc
fdivr
push
sub
repnz
rcl
push
cwde
in
jle
iret
xchg
inc
sub
mov
adc
xchg
xor
dec
ja
mov
out
push
xlat
mov
sub
rcr
inc
repz
jge
xor
scas
daa
jmp
ja
jno
push
push
jns
jmp
jbe
mov
lahf
dec
mov
jp
hlt
call
shl
mov
gs
enter
hlt
cdq
xchg
jge
loope
sub
jmp
add
cmp
mov
push
fsub
idiv
mov
lahf
push
(bad)
(bad)
dec
mov
icebp
xor
pop
nop
ds
or
xchg
sub
add
or
lods
test
sbb
push
xchg
sbb
and
dec
jg
jae
inc
cmp
xchg
mov
mov
cld
outs
and
mov
imul
add
leave
out
mov
xor
cli
shrd
xchg
mul
mul
push
popa
dec
lea
dec
(bad)
rcr
inc
cmp
das
push
mov
call
mov
xor
push
in
adc
pop
or
or
gs
mov
jo
(bad)
mov
call
fistp
jecxz
ret
stc
ds
ret
imul
inc
test
jb
out
cld
push
mov
mov
ins
bound
inc
(bad)
cmp
lods
imul
movs
hlt
test
repz
add
add
loopne
pop
dec
jnp
push
jb
or
mov
int3
add
add
push
repnz
xchg
fist
ror
sub
jge
fs
in
sub
mov
dec
push
cs
mov
xor
adc
or
std
push
movs
pop
fs
cmp
pop
mov
out
pop
out
cdq
adc
inc
ja
adc
bound
mov
cdq
outs
(bad)
aad
test
mov
push
scas
adc
repz
adc
sub
xor
or
sbb
xor
(bad)
leave
and
add
mov
ins
sbb
push
sbb
dec
cmp
push
jl
movs
jo
xor
movs
or
inc
adc
cs
or
mov
or
jns
cmps
mov
das
lahf
in
ror
enter
aas
cmp
mov
sbb
out
jo
cmps
pop
in
scas
jae
fcmovnb
push
lock
pop
hlt
jae
push
push
or
or
jecxz
push
mov
aas
arpl
leave
ret
stos
fst
test
mov
mov
push
jecxz
gs
pop
jle
test
shr
sub
scas
(bad)
cmp
(bad)
sub
cli
jo
adc
call
adc
sahf
stos
push
push
in
jne
stc
in
or
jo
popf
dec
mov
sahf
push
imul
inc
fcomp
test
pop
sbb
mov
lahf
pusha
xor
test
in
mov
cmp
test
pop
ret
dec
out
ret
add
outs
push
shl
push
pop
jnp
mov
sbb
inc
cmp
cmc
int
mov
jo
or
rcl
enter
inc
mov
fild
pop
ins
dec
mov
cdq
les
jecxz
jnp
ficom
inc
dec
inc
mov
pop
mov
xchg
mov
movs
js
mov
or
or
hlt
dec
mov
pop
mov
fisub
sub
and
test
and
and
xor
inc
cmps
popa
popa
mov
fldenv
ret
or
cmps
cdq
pushf
push
cdq
cmp
int3
push
add
popf
pop
push
dec
sbb
mov
cmp
rol
out
pop
fcomp
cmc
mov
push
xchg
fisub
repnz
pop
push
sbb
les
cwde
retf
pop
cs
jp
push
je
dec
ret
ja
pop
and
jo
dec
adc
pop
icebp
movs
(bad)
lock
movs
into
pusha
xchg
clc
rcr
xor
dec
sahf
test
hlt
mov
adc
repnz
ins
loopne
das
mov
fucomip
mov
aam
enter
pushf
cmp
rcr
nop
jge
sub
fwait
dec
mov
jp
mov
adc
jmp
jle
pop
sub
ret
dec
lea
push
cli
mov
sub
add
or
adc
inc
adc
jge
fs
mov
cmc
jle
div
and
retf
and
int
test
cmp
ins
loopne
jmp
mov
jp
pushf
outs
xor
sbb
(bad)
nop
scas
loop
icebp
das
and
sub
dec
outs
mov
xor
lods
das
sbb
adc
popa
dec
jae
push
gs
out
jns
(bad)
mov
movs
xlat
and
jp
jecxz
imul
cmp
ret
sub
leave
cmp
push
aaa
(bad)
aaa
dec
jge
push
mov
dec
fs
jl
push
mov
add
mov
das
data16
cwde
dec
sub
cwde
int3
stos
dec
bound
stc
cmp
or
(bad)
jmp
(bad)
call
sub
mov
xor
jns
sti
popa
lods
sub
movs
cmp
js
cmp
sub
repnz
(bad)
das
sub
jb
inc
push
std
loope
push
out
mov
repz
cmp
add
sahf
mov
mul
clc
bnd
sub
or
or
jp
push
cmps
mov
adc
pushf
icebp
xlat
xor
jns
jne
aad
or
dec
enter
inc
push
loop
push
xor
mov
push
repnz
call
fdivr
xchg
fmulp
mov
mov
cvtps2pi
sub
push
in
dec
pop
leave
fwait
outs
mov
add
inc
mov
fwait
ss
dec
imul
and
sbb
std
out
je
adc
mov
jecxz
ins
xor
mov
xor
add
push
ror
daa
and
pop
sbb
pop
add
add
mov
clc
jmp
mov
mov
dec
fldcw
mov
jb
jle
and
ror
imul
sub
test
cmps
in
cmp
jecxz
daa
sbb
jns
mov
imul
dec
add
adc
hlt
mov
add
inc
div
add
mov
or
stos
mov
mov
cdq
in
stos
xor
lahf
sar
push
push
in
call
mov
test
pop
xor
jns
jle
out
sti
(bad)
in
mov
mov
icebp
mov
in
adc
cwde
mov
das
jmp
pop
sub
xor
ret
call
mov
or
imul
mov
sbb
out
push
rcl
(bad)
mov
frstor
ror
pop
pop
shl
pusha
pop
int
jno
mov
pop
push
xor
jbe
cmp
sub
pop
jns
mov
inc
movs
das
push
test
cmc
sub
sbb
and
shl
popf
and
adc
push
rcl
dec
or
xor
mov
sub
push
adc
lods
sub
xor
in
cld
push
adc
mov
xchg
and
push
mov
aas
(bad)
neg
push
imul
pop
add
fs
ret
or
mov
lods
icebp
cmp
arpl
jle
add
sub
fwait
sbb
add
mov
xor
test
push
xor
repz
jle
jns
push
fidiv
addr16
iret
das
push
dec
(bad)
or
sub
xchg
xlat
add
xor
lds
mov
call
shl
pop
push
jmp
push
xor
clc
fcomp
pop
loope
jmp
push
leave
dec
scas
mov
dec
mov
ret
sti
sbb
stos
out
arpl
and
mov
add
jnp
lds
mov
xchg
jo
push
jmp
stos
xchg
aas
pop
loopne
sti
jle
push
pop
leave
xchg
jl
sbb
scas
mov
add
popf
push
fwait
cmp
cmps
or
push
or
sbb
sub
mov
push
jge
gs
faddp
in
mov
dec
cmp
loopne
sar
xor
and
jp
dec
mov
push
loop
inc
jbe
mov
or
(bad)
aam
fiadd
stc
loope
fimul
push
sub
mov
arpl
pop
or
clc
loopne
lods
dec
mov
fdiv
(bad)
stos
mov
inc
lahf
jecxz
lock
jae
adc
mov
in
xchg
xchg
dec
call
sbb
lods
rol
push
xchg
pushf
pop
(bad)
cld
sub
int3
mov
xchg
rol
inc
fmul
xchg
adc
repnz
xchg
push
sbb
cmp
ror
in
xor
jmp
ficomp
movs
xlat
pop
pop
retf
mov
ins
pminsw
push
or
mov
cmp
xor
adc
std
cmp
ins
ja
mov
jle
ficom
ss
ret
cmp
stos
mov
adc
sub
push
imul
ret
ret
push
or
jg
in
pop
xchg
test
mov
add
aam
pop
ja
add
mov
out
sar
std
add
jno
test
xchg
inc
ja
std
mov
lahf
gs
adc
cmps
mov
or
lods
nop
jb
cmp
shl
mov
dec
loop
das
jae
cmps
dec
lods
xchg
and
sub
xchg
sbb
ja
retf
push
(bad)
(bad)
sbb
xor
push
mov
xchg
mov
pop
push
xor
movs
and
lahf
push
es
in
dec
adc
inc
push
loop
and
scas
sub
out
ret
ficom
jns
xor
ret
jnp
or
mov
push
cmps
fmulp
pusha
jg
adc
or
adc
in
cmp
inc
mov
mov
sbb
push
aad
and
mov
rcl
push
xor
or
dec
mov
neg
test
je
jb
push
nop
inc
addr16
test
inc
popf
mov
xor
mov
shl
and
push
mov
adc
and
(bad)
mov
outs
mov
outs
call
call
pop
gs
jnp
lea
cmps
inc
mov
pop
cmps
ja
jae
and
loopne
pop
mov
call
mov
in
jp
cmp
std
movs
int3
fistp
pop
pop
cdq
dec
pop
lahf
hlt
or
sbb
les
cld
inc
retf
lds
cmps
sub
(bad)
movs
sub
jmp
rol
pop
js
sbb
out
sbb
pop
dec
lock
stos
push
pop
push
pop
sahf
pop
lock
mov
xchg
push
xchg
(bad)
jl
mov
dec
xlat
hlt
ror
and
lahf
sub
mov
jl
add
dec
jb
cmp
pop
movs
data16
add
jmp
jmp
inc
ret
sub
add
jmp
sub
inc
in
inc
iret
cmp
mov
test
sbb
cdq
lods
mov
cmp
xchg
in
mov
and
or
(bad)
pop
retf
shr
iret
jne
(bad)
rcr
mov
dec
shl
pushf
addr16
fist
xor
mov
sbb
cli
adc
ins
(bad)
mov
in
fadd
ss
inc
and
mov
stc
push
and
cmp
addr16
shr
fisttp
mov
cld
rol
sub
sub
inc
cmc
pop
add
enter
ret
push
not
out
movs
mov
push
cmp
adc
int
mov
scas
fs
jnp
xor
inc
xor
addr16
mov
dec
stos
xchg
mov
pop
jns
xor
xor
mov
jae
push
(bad)
out
fistp
pop
pop
push
imul
mov
xor
inc
push
leave
mov
sbb
xchg
fadd
sahf
and
pop
into
test
sbb
lds
adc
or
enter
sbb
mov
mov
pop
and
sub
(bad)
iret
add
loop
retf
jmp
sbb
xor
sub
jnp
adc
add
push
xor
sub
and
in
push
idiv
mov
push
adc
or
sbb
dec
dec
fild
mov
(bad)
sub
jl
jmp
out
push
mov
adc
data16
leave
clc
je
xor
inc
mov
mov
sar
mov
mov
sbb
fld
inc
pop
cmps
cwde
test
sub
xor
div
mov
and
and
ret
pop
sub
cmp
iret
imul
mov
cmp
and
mov
push
pop
lahf
sbb
push
es
int
cmp
into
in
ror
in
inc
adc
push
sbb
push
add
pop
mov
cmps
sub
mov
pushf
out
retf
jo
cld
aas
mov
xor
or
test
test
retf
mov
(bad)
loope
inc
sbb
pop
mov
fs
add
repz
dec
pop
leave
mov
inc
jmp
dec
in
mov
inc
out
lods
inc
fisub
cwde
fdivr
push
jae
rol
push
stos
outs
in
leave
cmps
icebp
push
out
pop
into
xor
sub
sub
iret
repz
mov
jne
cmp
jns
(bad)
test
cmps
je
dec
call
sbb
sub
ret
sbb
jl
into
mul
and
out
fwait
push
mov
push
cmp
jns
add
sbb
imul
pop
cwde
out
or
cmp
mov
cmp
(bad)
imul
cdq
rcr
les
ja
dec
sbb
(bad)
pop
mov
inc
mov
jo
jmp
mov
addr16
fadd
pop
jmp
popa
sbb
arpl
jnp
xor
xchg
xor
or
mov
or
add
or
pop
loop
adc
sahf
cli
pop
ds
ins
mov
mov
ret
es
mov
int3
and
cmp
jbe
add
dec
mov
(bad)
pop
loop
push
cli
mov
retf
loope
out
test
repnz
jo
pop
bound
movs
mov
dec
mov
mov
jns
mov
shr
dec
or
pop
iret
push
adc
and
js
cmc
test
es
sub
pusha
xor
push
and
lods
leave
mov
cmp
fldcw
sbb
sbb
jae
xchg
out
ds
jmp
inc
jl
push
retf
not
and
repnz
out
inc
ret
add
pusha
jo
push
or
int
or
dec
(bad)
sbb
shl
fst
add
outs
js
and
daa
dec
lea
in
inc
inc
ins
xor
movhps
into
xor
mov
scas
dec
into
xchg
xlat
lahf
daa
in
ins
daa
call
shl
sbb
or
sahf
and
mov
out
bound
cmps
push
inc
in
idiv
mov
mov
nop
(bad)
mov
ret
sub
jo
adc
shl
pushf
push
ins
fwait
jl
(bad)
pop
(bad)
cmp
cmp
loope
data16
mov
mov
or
dec
xchg
fsubr
into
(bad)
fadd
lahf
inc
pop
aas
or
es
std
jne
jo
push
xchg
fs
and
push
dec
in
shl
jp
push
cmps
loop
jno
popf
sbb
cs
push
fldenv
inc
dec
xor
fld
dec
sub
call
repnz
inc
cmp
ins
daa
enter
shl
mov
dec
lahf
or
xor
or
jg
out
cmc
stc
cs
out
retf
sbb
sub
popa
dec
cmps
xchg
jg
or
xchg
(bad)
mov
jp
mov
(bad)
fxsave
push
mov
cld
mov
repnz
test
out
(bad)
pop
test
cmp
or
inc
loope
stos
scas
or
int
in
int
movs
mov
cs
sub
cmp
in
push
les
sbb
cwde
(bad)
xor
dec
mov
push
call
mov
loop
cmp
inc
mov
loop
mov
xchg
xor
jge
sbb
xchg
fistp
lods
les
pop
sub
out
lock
loopne
movs
scas
pushf
or
dec
sub
loopne
jg
cmps
mov
jnp
cmp
gs
ret
xlat
push
xchg
mov
mov
rcr
xlat
mov
int
test
xchg
adc
mov
mov
sub
pop
std
mov
jle
test
jp
mov
mov
aad
sub
push
stc
pusha
push
neg
sti
jns
mov
shl
lods
xchg
xchg
lahf
mov
xchg
and
mov
cwde
lods
ins
in
fst
mov
jbe
mov
push
in
hlt
sub
das
mov
inc
xor
dec
dec
inc
std
call
cmp
mov
sar
test
stc
push
shl
jmp
outs
dec
cld
test
inc
cld
sub
adc
push
sahf
mov
ficom
mov
(bad)
inc
cmp
pop
jl
lock
and
mov
cmp
cmp
ror
xor
sbb
push
jb
(bad)
into
inc
jae
fcmovne
pop
sbb
sbb
and
(bad)
popf
xchg
cmp
test
add
xor
push
sbb
out
loop
test
fcomp
adc
jns
stc
fistp
aas
stos
ins
gs
cmp
sub
mov
cli
ins
adc
movs
push
mov
faddp
mov
out
and
repnz
push
adc
jns
jge
mov
scas
adc
shl
add
arpl
stos
arpl
sar
pop
mov
loope
ret
imul
retf
add
cs
mov
adc
push
aad
and
xchg
cdq
out
call
test
and
jl
pop
push
rcr
xchg
jo
dec
popa
bound
pop
daa
sub
mov
mov
add
clc
and
mov
xor
xchg
dec
ret
mov
in
shr
jg
and
addr16
fwait
hlt
sub
xchg
test
jg
cmps
daa
push
stc
jge
inc
mov
lahf
and
push
(bad)
and
ficom
es
dec
fnstsw
dec
pusha
inc
pusha
neg
popf
pop
jno
shl
test
and
popf
dec
jmp
mov
xchg
lods
icebp
fld
sub
in
(bad)
lds
mov
xchg
loopne
rcl
fist
outs
cmp
lds
inc
jl
add
pusha
nop
mov
xor
pop
pop
jns
enter
adc
or
inc
pushf
stc
je
inc
pop
mov
in
sbb
pcmpgtw
mov
aad
ja
cs
sbb
xchg
jecxz
stos
xchg
mov
jmp
shl
cdq
leave
cld
fs
push
xchg
and
pushf
ja
loop
js
pusha
jmp
xchg
mov
jnp
call
sbb
ret
aam
push
mov
pop
data16
and
jbe
clc
aad
inc
jle
xchg
push
dec
mov
and
mov
fadd
out
adc
sub
loop
add
and
push
sar
xchg
adc
movs
cmps
int
pop
(bad)
popf
jnp
and
jns
push
sub
fwait
jecxz
mov
sbb
inc
cmp
mov
out
push
mov
mov
xchg
aad
mov
mov
cmp
or
retf
or
cwde
adc
in
mov
adc
rcr
sbb
ret
sti
push
cld
inc
jmp
iret
fs
add
inc
cmp
xor
pop
add
mov
push
xchg
cmc
sbb
dec
dec
ret
cmps
lds
bound
add
mov
push
mov
add
or
push
lahf
cmp
sahf
fdiv
popa
mov
add
test
xor
fcom
cli
test
sbb
test
fsubrp
mov
sbb
cmp
cdq
xchg
ror
jp
xor
xor
mov
sbb
xchg
inc
jle
jno
sbb
outs
or
retf
(bad)
xchg
(bad)
fimul
pop
pop
mov
outs
push
shr
add
mov
jg
in
or
sub
test
mov
rcr
fst
aas
push
es
jmp
jg
add
(bad)
fmul
les
sbb
or
aaa
mov
or
jno
cmp
cmp
jnp
movs
mov
add
pop
pop
fwait
sub
movs
jmp
sbb
mov
xor
imul
pop
(bad)
pop
mov
push
push
inc
enter
mov
cwde
shl
scas
cmc
fidivr
push
out
sub
xchg
test
fldenv
aas
std
mov
or
adc
dec
cmp
inc
adc
test
xlat
and
call
pop
sti
push
jae
add
inc
test
popf
cdq
push
test
sbb
push
and
mov
sbb
icebp
push
int
inc
mov
push
retf
mov
clc
mov
add
fdivr
xchg
push
push
aas
test
fwait
cmp
rol
xor
pop
inc
popa
fst
out
xor
push
lds
push
int
mov
fsub
mov
mov
loopne
cdq
cmp
dec
pop
sbb
adc
push
xchg
(bad)
movs
xlat
inc
or
pop
mov
rcr
mov
sti
(bad)
int
je
xlat
mov
cmp
xor
dec
xchg
xor
popaw
mov
lock
frstor
sbb
mov
aaa
mov
ret
gs
fisttp
rol
sub
xchg
jns
mov
dec
sub
(bad)
das
mov
lods
or
cmc
das
xchg
inc
mov
int
or
pop
xchg
into
scas
jl
rcl
les
pop
sahf
mov
es
jp
cmc
mov
pop
into
mov
pop
jmp
std
rol
lahf
pop
out
mov
jmp
add
dec
xlat
mov
hlt
push
ins
popa
mov
mul
inc
mov
int3
mov
inc
sbb
cmps
mov
sbb
leave
pop
cli
sysexit
cmp
lods
add
or
pop
(bad)
(bad)
std
cld
jbe
les
adc
inc
push
and
inc
jns
jnp
mov
add
and
addr16
stos
test
in
fmul
sub
sub
call
mov
jecxz
pop
mov
xor
data16
mov
js
je
test
jnp
pop
xchg
call
push
fldenv
fcomp
push
dec
sbb
and
outs
gs
mov
xchg
and
mov
retf
sbb
mov
mov
outs
cmp
inc
cmp
push
mov
rcl
rol
pop
mov
mov
mov
jmp
pop
pop
pop
dec
sbb
arpl
dec
enter
repnz
push
scas
loopne
rcl
cmp
jle
int3
imul
sti
jmp
aaa
(bad)
xor
adc
dec
cmp
jne
mov
pop
(bad)
mov
add
xchg
sub
xchg
push
push
stc
inc
fs
fs
cld
(bad)
ss
adc
mov
adc
or
jmp
jb
(bad)
dec
sbb
imul
sub
pop
call
imul
adc
les
fsub
mov
fcom
ud2
aaa
das
mov
sbb
sbb
cmps
push
ins
and
ja
xor
(bad)
adc
push
loope
or
sti
xor
es
mov
xor
push
or
inc
ins
lea
movs
mov
pop
and
mov
mov
cs
jbe
test
das
enter
sub
sub
sbb
or
popf
fmul
and
ret
xor
iret
push
outs
out
test
mov
ja
out
std
retf
repz
push
pop
lahf
repnz
in
pop
sbb
out
jge
jne
fbstp
mov
cmp
cmc
adc
mov
inc
jmp
(bad)
out
loope
sbb
sub
imul
or
or
(bad)
jg
adc
and
mov
scas
fnstenv
fidiv
mov
fwait
sub
adc
(bad)
shl
enter
mov
adc
push
or
sbb
or
dec
lahf
mov
ret
xor
imul
test
or
push
pop
jo
jbe
sti
jb
retf
xor
dec
out
fldenv
push
mov
addr16
repz
pushf
cmps
push
xchg
sbb
cmp
mov
ret
fldcw
data16
jbe
test
ror
mov
jge
mov
mov
fcomp
retf
add
not
das
jo
scas
(bad)
or
mov
mov
daa
xchg
adc
cld
xlat
sub
push
jmp
(bad)
cwde
jecxz
cs
mov
rol
adc
out
push
retf
dec
repz
lods
outs
push
mov
xor
pop
sbb
sbb
mov
adc
(bad)
test
xor
pop
imul
adc
mov
outs
xchg
mov
jle
cmp
add
dec
test
iret
dec
sbb
pop
dec
jmp
popf
xor
es
and
ss
jns
scas
jbe
mov
jnp
popa
(bad)
inc
push
jno
pop
mov
cmp
push
pusha
ror
and
mov
out
(bad)
sbb
mov
maxps
aad
xor
xor
mov
daa
cdq
call
inc
sbb
xchg
call
jg
jae
js
ror
retf
xchg
aad
mov
lea
adc
jp
and
mov
jge
sub
and
popa
and
(bad)
in
out
ins
imul
jg
push
iret
repnz
or
push
rcl
mov
nop
(bad)
inc
adc
or
mov
jno
lea
lods
dec
xor
mov
retf
rol
iret
dec
sub
cmp
mov
stos
sti
movs
inc
jb
test
pop
loopne
test
stos
jo
mov
out
dec
inc
push
push
(bad)
push
aam
or
jp
fs
jb
inc
sbb
adc
push
and
push
pop
out
mov
sahf
stc
(bad)
int
xor
in
add
inc
imul
jge
loope
jae
(bad)
aaa
and
or
mov
push
inc
into
(bad)
mov
rol
mov
ret
aaa
adc
xor
loopne
dec
cmp
pop
add
nop
fstp
sbb
aad
add
or
push
push
mov
sahf
jb
or
test
loopne
iret
neg
jg
fld
fimul
test
jne
inc
nop
repnz
xchg
jnp
imul
mov
aas
call
andnps
pop
jge
xor
xor
into
cmp
push
push
ret
dec
rep
jmp
(bad)
pop
jbe
lock
repz
or
dec
sub
add
xchg
xchg
cmp
inc
add
xor
cmc
sub
sbb
sbb
lods
cdq
and
cmp
mov
mov
push
arpl
out
cmps
outs
inc
mov
pop
rol
data16
pop
iret
arpl
jae
mov
jg
pop
cmp
xchg
dec
inc
shr
addr16
sub
test
cmp
lods
lahf
add
inc
popw
arpl
loop
pop
shl
adc
outs
or
es
mov
fisttp
loopne
or
popf
adc
in
pop
mov
mov
popa
cmps
xchg
and
mov
sar
pushf
add
lea
ucomiss
rcl
jo
loop
sbb
xchg
push
pop
pusha
mov
loop
push
sbb
push
ja
cmp
das
pop
mov
inc
inc
pop
pop
dec
sub
dec
push
inc
das
pop
adc
into
cmp
lods
cmp
test
mov
mov
jecxz
ficom
sahf
movs
push
pop
test
inc
cmp
adc
aaa
or
(bad)
fist
addr16
jmp
cli
push
out
sub
mov
cmp
inc
xor
fcomp
nop
jbe
mov
call
bound
jno
js
dec
dec
js
sahf
and
and
sub
jle
shr
xor
enter
out
xor
div
and
std
xchg
repz
mov
pop
icebp
xor
cld
adc
sbb
retf
mov
out
lods
ds
cld
inc
and
mov
sub
xchg
mov
add
mov
(bad)
repnz
call
(bad)
out
fwait
pop
lods
dec
jnp
dec
push
shl
call
fld
sbb
sti
jl
push
mov
lds
add
pop
pop
cmp
push
and
int3
adc
xor
or
mov
pop
dec
push
enter
and
test
in
push
jae
mov
fisub
movs
ds
mov
dec
lods
ins
pop
(bad)
fdiv
sbb
jp
out
jnp
ss
out
push
adc
out
sub
add
cwde
dec
add
fist
push
call
mov
cmp
add
and
xchg
shl
jmp
pop
inc
jne
push
stos
and
xor
nop
xor
mov
shl
mov
push
mov
mov
add
lea
shr
aad
mov
mov
int
jnp
push
aas
xor
jne
xor
or
hlt
push
dec
sbb
ins
sub
adc
es
call
sub
fcmovnbe
imul
nop
mov
sbb
ss
and
popf
xor
mov
cmps
enter
and
jp
(bad)
das
cs
daa
jmp
add
iret
inc
test
iret
cmp
xchg
and
jo
repnz
gs
mov
push
add
adc
pop
aaa
pop
inc
leave
arpl
mov
lods
cmp
and
push
(bad)
jns
stos
pop
adc
xchg
aad
jnp
stos
fist
test
clc
pop
mov
test
nop
xchg
mov
imul
dec
push
pop
in
in
nop
inc
rcl
jnp
inc
mov
aam
pop
(bad)
or
pop
rol
aas
push
sbb
add
jecxz
aad
sub
xor
dec
and
stc
stos
jne
rcr
ss
daa
mov
xchg
dec
mov
mov
movs
scas
mov
test
xor
movs
inc
fst
fld
xchg
sub
aad
mov
mov
outs
fdiv
test
cdq
mov
pop
cmp
jge
dec
ins
or
pushf
sub
and
mov
inc
fsubr
push
xlat
or
or
cli
jle
das
sub
dec
mov
stos
mov
jnp
(bad)
out
mov
xor
and
pop
sub
popf
das
jmp
or
mov
cmp
pop
mov
jnp
jge
mov
sar
call
inc
sub
pop
jnp
lock
mov
pop
mov
lods
(bad)
mov
jne
sar
mov
push
jg
ins
into
je
sbb
mov
mov
iret
in
push
pusha
fimul
and
xchg
dec
mov
and
jmp
cs
outs
into
fdivr
sbb
inc
inc
mov
jecxz
imul
aad
add
dec
add
repz
sub
add
in
shl
dec
mov
cwde
jb
adc
outs
es
add
jge
out
movs
inc
fsubr
lods
or
push
xor
cmp
jp
push
cmp
xor
push
cdq
mov
cmp
cli
mov
fmul
int3
test
js
and
pop
push
cli
push
pop
cmp
or
retf
in
cmps
and
rcl
push
and
dec
cmp
fsub
daa
fs
sbb
cld
dec
pop
mov
add
in
ss
sbb
and
inc
movs
xor
int3
mov
shl
jg
sbb
sub
jmp
mov
sub
xor
mov
das
cmp
xor
sbb
nop
jb
fnstcw
push
stc
cmp
ret
sbb
push
xchg
push
sub
in
sahf
faddp
mov
adc
push
cmp
loop
hlt
lahf
popa
sti
push
pop
scas
in
pop
add
ja
dec
call
call
or
call
pusha
add
mov
push
dec
mov
pop
lods
jnp
xchg
paddd
push
cmp
and
jae
dec
loopne
sbb
inc
jl
scas
in
loop
adc
xor
push
and
add
fwait
in
xor
sub
ss
div
outs
mov
adc
xchg
sbb
cmp
loopne
lahf
mov
mov
or
jnp
sbb
push
pop
cmp
mov
(bad)
(bad)
cmp
push
test
sub
dec
or
iret
or
mov
iret
pusha
mov
mov
sbb
jne
mov
xchg
lods
cwde
in
loope
and
or
jne
adc
lods
push
pusha
inc
call
dec
in
mov
leave
dec
je
test
mov
cmp
xchg
cs
js
out
cmp
jg
dec
jl
jp
cmp
nop
jl
push
xor
sbb
pop
ret
xchg
mov
lods
or
ret
mov
pop
mov
dec
popf
push
mov
sahf
pop
sbb
xor
retf
and
jno
loop
and
loope
pop
shl
loop
into
out
repnz
dec
cmp
aad
inc
jl
cmps
mov
inc
popa
repnz
jmp
sbb
xor
adc
popf
cmp
in
imul
dec
bound
in
in
out
or
adc
and
jge
cmp
ficomp
(bad)
mov
jbe
pop
mov
xchg
retf
ss
ins
xor
test
xchg
or
aaa
push
cmps
cwde
mov
pushf
inc
inc
sub
dec
iret
push
jbe
(bad)
jnp
ret
sbb
mov
xor
leave
sahf
push
test
pop
add
test
shr
sub
pop
enter
cld
and
fmul
dec
xchg
repz
sbb
dec
out
sbb
push
(bad)
cmps
push
fisub
and
ret
cmp
pop
inc
inc
sub
xor
lock
jg
idiv
and
add
fsubr
sub
and
fwait
test
movq
dec
cld
ins
add
jno
jecxz
jg
int
dec
xchg
aad
fcomp
pop
ins
dec
shl
jl
inc
cdq
xchg
lods
movs
cli
jl
jl
cld
mov
push
mov
data16
sub
mov
pop
xchg
and
cmp
pop
sbb
leave
mov
iret
idiv
loope
inc
pop
enter
add
or
add
jne
xor
ins
jge
hlt
scas
stos
repz
stos
mov
sbb
shl
fdivr
pop
mov
mov
sbb
jge
pop
out
pop
and
std
xchg
jne
shl
and
lods
mov
out
mov
xor
adc
mov
inc
adc
lahf
out
cs
xchg
repz
aas
rol
jno
fxch
mov
out
pop
cmc
gs
fidivr
push
fwait
rcr
mov
xlat
cmc
ret
push
and
daa
nop
and
loopne
dec
std
out
and
dec
xchg
push
cld
in
dec
mov
or
xor
mov
ror
lds
push
in
xchg
test
in
mov
ret
push
pushf
jmp
lea
call
mov
retf
test
sbb
fnstsw
retf
mov
jg
repnz
xor
pushf
cmc
or
mov
and
cmc
mov
jmp
test
mov
sub
dec
cmp
dec
and
sub
lods
push
ins
xchg
repnz
xor
mov
(bad)
sub
sahf
std
mov
scas
inc
icebp
xchg
mov
imul
xchg
add
cwde
sti
sar
xchg
pop
inc
ins
jb
rcr
shl
aaa
mov
pop
and
push
inc
xchg
dec
fmul
pop
out
add
fsubrp
out
jns
xchg
xor
rol
shr
or
mov
pop
mov
stos
pop
inc
repz
xchg
daa
ins
mov
je
mov
xchg
jo
out
cmps
call
add
mov
pop
adc
xchg
mov
repnz
xchg
hlt
fcomp
test
sub
or
loopne
pop
(bad)
nop
out
sbb
adc
sub
test
fxch
dec
je
and
or
and
das
add
mov
das
cmp
ret
test
int3
xchg
sub
mov
jle
int
dec
or
mov
loop
xchg
add
leave
out
add
gs
sbb
iret
out
(bad)
mov
das
leave
in
stos
inc
sub
ret
test
mov
nop
enter
dec
xchg
in
mov
out
sbb
mov
adc
mov
xchg
xlat
jle
mov
inc
inc
mov
jle
xor
mov
nop
jge
das
and
out
jno
test
movs
and
add
cdq
dec
je
(bad)
bound
cmc
enter
(bad)
fwait
pop
rcr
in
mov
sbb
or
and
in
or
dec
pop
jmp
mov
adc
push
shl
sbb
inc
push
sbb
mov
out
out
and
xchg
mov
mov
sbb
call
enter
leave
pop
hlt
lahf
jmp
dec
movs
loopne
xor
dec
das
(bad)
(bad)
and
adc
jp
in
and
or
lahf
xor
ret
retf
fs
mov
outs
jbe
in
lods
fiadd
and
xchg
(bad)
jmp
cmc
sub
das
dec
jg
mov
inc
mov
hlt
cwde
inc
retf
ror
xchg
mov
aad
sbb
xor
fsubr
out
cmps
outs
pop
lock
jge
enter
mov
leave
popa
outs
lds
cld
fistp
push
popa
cmp
es
cmp
and
arpl
xchg
mov
sub
push
pop
out
add
sbb
adc
add
scas
cmp
repz
xchg
jecxz
loop
loop
pusha
popa
cwde
(bad)
sbb
push
inc
mov
inc
push
pop
sbb
pop
add
xchg
add
pop
rcl
push
(bad)
cdq
or
test
adc
stos
inc
fcom
je
daa
arpl
mov
jle
nop
test
mov
jb
adc
pop
jns
(bad)
fldenv
xor
out
jecxz
jnp
in
ret
mov
cmps
fcomp
in
int3
sbb
sub
xor
dec
inc
stos
lea
movs
sti
mov
not
inc
aaa
(bad)
outs
aaa
xchg
ja
mov
pop
arpl
fisubr
mov
inc
and
add
adc
div
imul
mov
mov
push
test
adc
movs
jl
inc
lahf
data16
adc
retf
ret
mov
in
(bad)
sar
pop
xchg
jb
pop
pop
xchg
xchg
gs
shr
pop
adc
push
cmps
mov
mov
mov
mov
mov
jne
mov
push
xor
popa
sar
xor
es
jp
(bad)
loopne
fiadd
mov
loope
mov
add
mul
xchg
dec
jp
dec
pop
js
call
push
xchg
push
dec
adc
lock
fsubr
mov
stos
or
adc
add
mov
test
fwait
xlat
test
jmp
mov
movs
pop
xchg
sub
adc
test
shl
sbb
sti
pusha
add
and
and
push
call
and
lea
or
cwde
add
add
mov
scas
mov
mov
cmp
jge
inc
add
cdq
sar
push
int
jb
lahf
sbb
sti
ss
cli
mov
(bad)
cmp
fsubrp
cmp
adc
jbe
fisub
xchg
push
jmp
scas
shl
loop
lds
loope
dec
out
daa
in
jbe
mov
push
mov
add
test
sub
out
cmp
sbb
cmps
jg
xor
loop
push
mov
push
sbb
xchg
dec
xor
mov
and
adc
ins
cli
ds
cld
jne
sub
mov
out
icebp
cmp
mov
lea
add
aad
pop
mov
scas
mov
cwde
or
in
in
movs
sbb
pop
test
or
test
gs
inc
fld
hlt
test
or
push
ins
jmp
xchg
inc
jbe
ret
enter
mov
cwde
mov
fnsave
pop
push
les
call
les
popa
addr16
ret
sub
repz
jbe
pop
cmp
je
pusha
fst
pop
pop
(bad)
xchg
adc
call
in
cmp
jmp
repz
ins
sbb
xchg
movs
sbb
push
mov
add
outs
mov
jbe
cli
cmp
imul
pop
(bad)
retw
fidiv
add
les
push
fistp
mov
mov
jmp
(bad)
push
mov
mov
push
lock
lea
mov
fsub
jno
cmc
loopne
mov
ss
movs
loope
sbb
fcomp
bnd
xchg
adc
mov
pop
sbb
pushf
adc
mov
mov
aam
aas
aam
clc
movs
adc
into
call
mov
or
ret
pushf
push
fsub
mov
pushf
out
es
std
in
ins
shr
push
ja
mov
shr
imul
rcl
test
mov
rcr
sub
icebp
inc
xchg
add
retf
pusha
sub
mov
pop
fidiv
push
imul
sub
jmp
rcl
mov
xchg
or
je
iret
into
js
mov
mov
test
jmp
adc
mov
or
dec
sahf
or
cmps
mov
arpl
int
xchg
cmp
outs
xchg
call
loope
add
dec
mov
fs
das
lds
pop
sar
sub
in
mov
imul
bound
push
in
mov
stos
nop
aad
add
xchg
stos
xchg
dec
(bad)
imul
sbb
ins
not
movs
and
aaa
pusha
out
adc
pop
jge
push
dec
out
pop
pop
mov
pop
or
(bad)
cmp
or
dec
cmps
push
cwde
pop
into
shl
(bad)
pmaddwd
(bad)
neg
in
and
add
aaa
cmc
aam
xchg
xor
into
add
dec
in
js
into
ss
jp
jmp
mov
mov
repz
mov
sahf
test
out
test
jl
adc
jo
rcr
add
shl
xchg
add
test
stc
mov
mov
mov
(bad)
aas
pop
pop
adc
inc
rcl
push
lea
sahf
sbb
out
in
push
shr
jmp
movs
mul
out
jnp
jg
pop
cs
dec
rol
inc
hlt
stc
jo
clc
sahf
or
xor
daa
push
ror
cwde
and
ret
shr
jns
das
lods
ror
push
outs
xchg
imul
pop
stos
fdivrp
out
daa
or
pop
pop
aas
(bad)
mov
aas
pusha
jmp
ins
fs
fmul
clc
in
loopne
fbld
pusha
jg
jp
adc
push
push
mov
sahf
xchg
sahf
out
fdiv
call
fwait
mov
cdq
xchg
rcr
jae
cdq
stc
mov
mov
outs
mov
cmp
cmps
jns
(bad)
jns
pop
lock
test
xchg
mov
lahf
mov
call
sbb
sbb
les
jmp
gs
loope
ja
ins
xor
mov
imul
movs
mov
pop
rcr
test
push
jno
rol
ret
loope
jmp
in
ror
sub
test
add
in
outs
loopne
jp
fs
or
imul
sub
or
imul
adc
jmp
or
fisttp
cmps
xchg
dec
jnp
adc
mov
dec
jmp
(bad)
xlat
sbb
or
mov
sub
sub
adc
aas
retf
(bad)
ins
(bad)
leave
sbb
mov
pop
cmp
fbld
(bad)
jnp
add
stc
inc
push
cmp
stc
xor
xor
adc
mov
and
movs
mov
inc
cmp
test
out
aas
inc
fimul
ret
fs
pushf
sbb
aas
test
add
jne
ret
push
inc
cmps
mov
mov
mov
mov
sbb
mov
inc
adc
jl
pop
xchg
lds
xor
push
pop
in
inc
(bad)
mov
ficom
push
stos
mov
retf
sub
test
shl
inc
ficomp
xor
jl
pop
sti
jnp
ret
shl
retf
dec
xchg
and
mov
ror
jnp
xchg
pop
or
mov
sbb
out
jl
dec
cmp
mov
push
mov
out
mov
loop
cdq
sbb
adc
dec
adc
ins
arpl
jns
add
mov
jne
rol
int
and
test
fcom
inc
jnp
in
cmp
arpl
ror
mov
or
out
ins
mov
(bad)
jb
mov
push
xor
and
mov
cs
add
repnz
loop
push
xchg
loop
lods
loope
sbb
mov
fidivr
xchg
jmp
jp
push
mov
mov
lods
aam
xor
js
jecxz
test
les
jnp
sub
pop
sbb
pop
xchg
mov
pop
dec
sbb
(bad)
ins
les
enter
inc
add
xchg
scas
mov
scas
dec
jae
mov
call
outs
adc
sub
pop
and
mov
les
js
test
fild
pop
pop
mov
pop
jne
cli
test
jo
xor
cmp
inc
xor
sub
retf
xchg
sar
inc
mov
pop
mov
inc
rol
push
cmp
call
ins
cmp
mov
cs
and
rcr
sbb
xchg
das
sub
xor
movs
jmp
push
xlat
cmp
jb
cmp
xchg
in
out
adc
inc
scas
inc
xor
stos
fucomip
call
stc
sub
xor
test
lahf
mov
xor
test
or
jle
ror
sti
ins
(bad)
addr16
inc
mov
or
sub
cdq
lea
psraw
push
pop
xchg
push
inc
mov
sub
xchg
aam
xor
jae
je
fdiv
test
pop
or
(bad)
or
sbb
js
and
aaa
mov
push
sub
iret
frstpm(287
push
in
mov
add
(bad)
jle
or
sbb
mov
xchg
mov
sbb
inc
loope
mov
icebp
scas
and
aaa
sbb
mov
cmp
call
cs
fcmove
data16
mov
(bad)
cli
push
outs
dec
pop
or
xchg
and
iret
sub
int
daa
adc
push
jge
sbb
into
or
pop
mov
vpxor
aaa
jae
call
test
mov
xor
xlat
xor
test
inc
test
push
xor
int3
sub
mov
mov
jbe
loop
pop
ds
jns
xchg
nop
mov
mov
rcl
or
test
test
inc
mov
push
ret
cmp
xchg
rol
xor
sub
push
push
fdivr
mov
cmp
or
or
mov
push
jmp
dec
push
cmc
shl
loopne
ja
cmps
jo
mov
aas
xor
loopne
add
pop
jmp
jge
dec
sahf
pop
bound
adc
jmp
xchg
push
fistp
ins
jne
inc
es
add
push
shl
or
or
mov
sbb
pop
test
enter
push
xor
aam
cdq
ret
xchg
pop
pop
pop
pop
sti
push
adc
mov
cmp
in
cli
(bad)
imul
je
scas
frstor
movs
adc
(bad)
std
loope
jl
sar
loop
lock
jnp
cmps
mov
sbb
adc
sbb
sbb
and
and
aas
not
bound
push
adc
ret
out
and
sti
pushf
xor
xor
add
int3
std
inc
xor
sub
cld
rcr
stos
mov
retf
cmp
adc
cmp
rcl
jnp
dec
test
dec
ja
repnz
loop
and
jecxz
mov
dec
dec
push
push
rcl
repz
xor
inc
cmp
scas
pop
lods
jae
shl
stos
and
pop
adc
(bad)
lds
mov
sub
gs
xor
add
jg
and
jns
or
test
es
hlt
(bad)
xor
sbb
inc
jle
mov
lock
gs
into
fneni(8087
ffree
stc
jmp
add
aad
aam
xor
aas
aad
push
loopne
shl
shl
mov
fidivr
sub
rcr
cmps
(bad)
sub
mov
(bad)
pusha
cdq
xor
lea
jecxz
pop
xor
jmp
add
in
sub
mov
push
movs
in
in
nop
or
outs
xchg
test
sti
xor
aaa
pop
mov
imul
add
xlat
push
shl
aaa
push
mov
dec
dec
and
cmp
push
cmp
dec
lods
dec
shl
adc
dec
retf
xor
pusha
sub
mov
mov
or
pop
outs
sub
add
aad
jle
jmp
aad
cld
dec
jmp
xlat
mov
dec
jecxz
dec
ret
sub
adc
fnsave
fdiv
add
lods
imul
leave
mov
pushf
add
mov
mov
xor
(bad)
repz
es
push
test
cmps
pop
adc
in
leave
and
cmp
mov
in
or
cdq
add
test
ror
(bad)
repnz
pop
stos
mov
add
or
fs
push
xor
clc
and
call
dec
popf
(bad)
aaa
call
mov
arpl
ret
inc
loope
xchg
mov
leave
dec
mov
lea
xchg
pop
push
fwait
aaa
addr16
push
outs
jno
daa
sub
jle
fsub
push
mov
sub
sbb
add
sub
mov
outs
push
mov
inc
mov
out
xor
(bad)
xchg
mov
or
aaa
add
add
cmc
out
mov
jo
xlat
or
xchg
jno
xor
mov
ins
mov
xchg
es
adc
jp
test
inc
fs
stc
outs
adc
in
cli
push
push
ins
loopne
or
jl
cmp
scas
int
mov
retf
sbb
inc
fs
mov
es
inc
mov
jne
inc
out
cmps
jbe
movs
adc
adc
and
jmp
data16
loop
or
adc
xchg
daa
(bad)
in
sar
dec
jns
shl
mov
nop
rol
xor
jl
je
xchg
sub
sbb
cmp
mov
retf
cmp
jb
cmp
cli
fbstp
and
sbb
fist
out
es
jmp
mov
jb
aaa
mov
shr
sbb
dec
vpaddd
das
mov
test
fisttp
imul
jle
adc
test
fisub
cmp
popa
rcr
jb
test
dec
rcr
mov
sub
xor
cmc
inc
in
mov
dec
xor
jmp
and
xchg
(bad)
jge
inc
jns
sub
cs
jne
push
jns
fimul
mov
mov
cmc
pop
dec
mov
inc
add
xchg
xchg
clc
shr
out
rol
outs
push
add
mov
mov
cmp
not
pop
inc
lahf
mov
xchg
add
enter
sub
xor
inc
mov
push
(bad)
mov
stos
retf
jae
data16
mov
js
mov
push
sbb
mov
les
xchg
cli
scas
je
inc
gs
push
sar
mov
dec
and
sti
jle
loopne
sub
jecxz
fcom
inc
(bad)
jo
xchg
sbb
lock
call
aaa
mov
addr16
movs
arpl
sbb
mov
shl
sbb
jg
jmp
mov
sbb
leave
and
cmc
sti
mov
pop
fstp
cld
lods
mov
sub
fild
aam
xchg
xchg
jne
xor
jnp
sub
cmc
inc
cmp
pop
xlat
sub
mov
jo
bound
(bad)
int
cmovb
movs
pop
jae
mov
mov
sbb
pop
jl
mov
je
pusha
or
adc
ja
ds
cli
xchg
hlt
enter
push
pop
mov
sbb
iret
cmc
mov
nop
sub
lds
push
cdq
jb
jo
sub
icebp
std
push
add
clc
nop
movs
call
ret
(bad)
dec
pop
adc
stc
xor
loope
dec
pop
adc
mov
loope
cmp
scas
or
pop
ja
daa
mov
das
syscall
and
xlat
movs
add
jmp
or
push
xlat
or
dec
sub
leave
shl
inc
jae
sbb
pop
and
std
xlat
movs
pop
xchg
pop
adc
jbe
(bad)
push
sub
sbb
mov
call
hlt
leave
sub
fadd
pop
push
pop
mov
mov
rcl
jg
xor
mov
pop
ja
xor
bound
lods
mov
pop
adc
loopne
mov
dec
sub
loop
and
mov
adc
inc
add
and
movs
pop
mov
lods
ins
mov
cmp
ret
mov
test
jo
ja
jmp
adc
inc
enter
xor
pop
jl
mov
mov
jecxz
(bad)
fidivr
enter
push
or
sbb
cmp
mov
in
mov
fist
sbb
xchg
xchg
lock
pop
xor
push
inc
inc
outs
mov
pop
lods
mov
cmp
inc
shr
mov
sbb
push
push
test
mov
adc
lods
int3
jae
fdiv
jo
xor
je
int3
add
dec
mov
fwait
std
jg
xchg
dec
in
sti
mov
je
lods
hlt
out
adc
loopne
mov
loop
inc
push
cmp
jmp
xor
stc
adc
ror
pop
xchg
fdiv
pusha
adc
add
xor
dec
xchg
js
mov
aam
jle
sar
mov
fild
dec
xlat
mov
and
dec
cwde
mov
jns
adc
outs
arpl
mov
lds
sbb
cmp
mov
jnp
ret
nop
jne
mov
(bad)
out
in
mov
mov
call
in
jle
jmp
add
ds
popf
movs
pop
in
scas
xor
pop
sub
jno
es
test
jbe
pop
push
aad
cmp
xchg
scas
sar
scas
mov
cmc
icebp
ss
pop
dec
xor
pop
dec
pop
and
add
out
sbb
push
push
push
jle
repz
xor
sub
outs
pop
inc
jne
int
cld
in
pushf
mov
mov
test
mov
cs
jp
sub
sbb
ret
cmc
xchg
dec
cmp
dec
loop
mov
test
daa
ja
mov
movs
push
sbb
and
or
push
and
sar
push
inc
in
mov
xchg
call
in
and
test
cld
movs
dec
cmp
cmc
xor
fmul
(bad)
jp
outs
outs
add
cmp
sti
dec
mov
or
and
push
cwde
cs
jns
das
mov
cmp
xor
push
gs
xchg
outs
fs
aaa
pop
xchg
mov
test
xchg
fcomp
es
pop
int
push
dec
outs
bound
imul
mov
xchg
call
jmp
stos
jp
pop
pop
sahf
mov
gs
movups
push
mov
not
sub
jo
and
shr
push
dec
jg
call
mov
sbb
cmp
cld
sbb
and
popa
rcr
cmp
mov
mov
cwde
add
arpl
mov
outs
lods
ret
enter
iret
mov
pop
dec
cmps
push
ror
push
push
jmp
les
fistp
xchg
dec
dec
fbstp
cmc
fcmove
cdq
mov
jle
out
ss
push
iret
mov
mov
sbb
hlt
fild
je
das
ins
imul
pop
pop
mov
cwde
dec
cwde
push
or
adc
mov
out
and
xchg
pop
ins
cwde
or
dec
mov
scas
sbb
leave
push
push
lea
popf
push
test
imul
std
out
or
mov
mov
les
cmp
out
xchg
call
cmps
add
outs
scas
mov
jae
nop
cmc
iret
sbb
mov
imul
ret
sub
outs
scas
vmulsd
pop
call
rcl
push
or
jmp
aas
aaa
in
cdq
or
xor
imul
or
add
mov
imul
or
into
sbb
xchg
(bad)
pop
das
dec
retf
adc
or
repnz
add
outs
inc
mov
xchg
mov
pop
xchg
lods
test
mov
add
(bad)
in
push
out
fsubp
pop
retf
mov
jo
jbe
std
pop
test
add
mov
data16
dec
scas
inc
loop
retf
pop
adc
cmp
bound
xor
sbb
push
mov
adc
xor
jmp
into
ret
fadd
sbb
fst
stc
(bad)
fabs
inc
in
movs
inc
dec
mov
pop
jo
loopne
add
mov
rol
sbb
and
or
pop
lds
xor
bound
setp
jp
mov
xor
fmul
sbb
inc
jb
jle
mov
mov
jns
add
(bad)
loopne
adc
sbb
imul
scas
pop
push
and
rol
add
push
mov
cmp
xchg
or
push
push
rcr
mov
jle
(bad)
push
sbb
pop
ret
in
call
repz
aas
xor
sbb
movs
test
scas
pop
inc
mov
sar
cmp
push
fiadd
fldenv
cmp
sbb
pop
int3
xchg
pop
push
sti
cmp
and
fnsave
movs
and
fimul
pop
cmps
sub
sbb
out
inc
mov
mov
jnp
push
adc
sbb
jne
std
loope
sbb
adc
xchg
push
mov
jl
pop
ret
mov
out
shl
sbb
test
xchg
pushf
add
jg
lock
int3
scas
fbld
or
cmps
imul
jb
mov
xor
xor
mov
ret
repnz
mov
adc
push
mov
mov
mov
retf
and
dec
out
out
mov
movs
shl
frstor
and
movs
mov
loope
lea
jecxz
adc
xchg
movs
jmp
(bad)
icebp
inc
loopne
call
lods
into
(bad)
loope
loop
out
mov
ins
adc
jmp
es
stos
scas
add
test
mov
xchg
inc
popf
dec
sub
fnsave
not
xchg
add
inc
mov
adc
push
inc
loop
sbb
adc
test
push
push
xlat
xor
pusha
das
mov
outs
adc
sub
adc
lahf
loopne
jne
mov
xchg
inc
mov
xlat
call
int
idiv
repz
popa
mov
call
push
nop
retf
jns
fwait
retf
fldcw
dec
scas
add
shl
adc
pop
sti
into
xchg
xor
je
mov
jno
or
cmps
pushf
fadd
test
add
sub
mov
movs
fcom
mov
pop
cvtps2pi
xor
data16
sti
dec
jmp
xchg
xchg
(bad)
jg
mov
sahf
and
jmp
jnp
xor
mov
mov
in
pop
fsub
mov
popf
pop
mov
(bad)
mov
enter
rcr
push
gs
stos
jge
out
js
sub
add
dec
mov
sbb
ds
adc
mov
inc
mov
pop
add
dec
mov
xor
aaa
xchg
call
push
mov
jp
pop
xor
adc
mul
imul
pop
daa
repnz
cmp
ds
fcom
sbb
inc
or
clc
and
into
inc
test
int
popa
mov
xchg
lods
loope
push
repnz
xor
or
cmp
jb
inc
push
popf
xchg
sbb
jmp
add
mov
punpckhwd
cli
arpl
jmp
shl
cwde
pusha
xchg
xchg
stos
pusha
dec
loopne
sbb
loope
xor
push
jmp
push
loope
mov
adc
popf
or
cmps
pushf
add
mov
lahf
mov
pop
sbb
test
mov
aas
mov
lods
scas
push
dec
mov
xchg
push
fistp
xor
movs
adc
out
loop
ss
pushf
mov
adc
cmps
mov
in
jmp
jo
jns
clc
jecxz
loop
mov
mov
fld
fild
and
(bad)
(bad)
outs
xor
fsubr
adc
aas
mov
es
ja
in
fisub
cmps
mov
mov
adc
rcr
das
jae
mov
stos
lods
adc
cli
jo
add
dec
shl
fadd
and
sbb
xor
sbb
xor
sub
and
pop
imul
fidiv
adc
test
jmp
dec
loop
inc
hlt
add
or
iret
cli
(bad)
adc
mov
mov
lock
xchg
shr
loop
push
and
adc
cmp
int3
and
dec
cwde
sub
dec
sbb
add
cmp
mov
bound
stos
stos
daa
(bad)
jge
mov
dec
shr
ror
(bad)
xor
push
and
and
xor
sub
push
out
retf
hlt
in
cmc
loope
aaa
xchg
repz
jmp
adc
fmul
xchg
retf
pop
jmp
cmp
in
and
sbb
aaa
inc
fprem
sbb
inc
lea
(bad)
movs
pusha
dec
fstp
push
retf
fcmovbe
aaa
sbb
mov
pop
out
fsub
jge
sbb
jp
rol
test
in
dec
add
call
stos
fsubr
xchg
or
mov
xchg
push
nop
outs
cmp
(bad)
(bad)
rcr
push
or
push
in
xchg
sbb
cmp
repz
scas
mov
sub
sub
push
cmp
xor
ins
inc
or
(bad)
test
aad
xor
pop
add
daa
repz
cwde
popf
std
push
out
dec
rcl
jmp
jne
mov
mov
adc
jne
pop
fucom
retf
bound
mov
xchg
mov
retf
popf
pop
pop
test
int
pop
imul
or
addr16
ds
or
xor
cmp
pop
inc
lea
popf
dec
jnp
sbb
xchg
dec
cmp
fstp
aad
jb
pop
push
push
pop
js
retf
imul
ins
dec
rcr
pusha
sbb
lods
stos
in
mov
xor
xor
clc
cmp
nop
rol
adc
aaa
xchg
shr
sbb
xchg
(bad)
call
mov
(bad)
int3
push
lds
lock
jns
cmc
mov
call
xor
mov
push
sbb
stos
ror
clc
lods
push
jmp
and
jae
(bad)
ins
mov
pop
pop
mov
gs
pop
fwait
and
jno
xor
mov
jp
in
inc
xchg
xor
fsubr
sbb
and
inc
stos
sub
xor
jnp
std
adc
mov
cmp
repz
das
inc
mov
sub
jge
and
cmps
adc
stos
and
scas
mov
popa
push
push
lahf
shl
hlt
mov
jp
ss
shl
mov
push
xchg
push
and
mov
pop
das
sub
jp
into
xchg
mov
xor
leave
mov
xor
inc
outs
jge
leave
mov
dec
out
ja
or
test
or
sbb
outs
add
and
jl
xchg
and
cmp
hlt
sub
xor
xchg
(bad)
fld
ret
mov
rol
mov
push
xor
inc
push
jno
xor
cs
adc
call
sub
xor
in
mov
test
ficom
loopne
scas
jb
pop
test
mov
sub
sub
adc
xchg
pop
lods
shr
pop
sub
sbb
add
ja
mov
pop
pop
mov
xor
or
jne
lahf
enter
js
xchg
xchg
loopne
cmc
aad
in
in
cmp
lods
xchg
lds
inc
fdivrp
sar
arpl
outs
push
pop
dec
push
(bad)
retf
mov
push
stos
dec
jecxz
mov
mov
sbb
or
sahf
xor
dec
mov
stc
into
mov
pusha
jg
sbb
mov
fisubr
add
cmp
pop
mov
jb
mov
daa
inc
ja
cmps
imul
cli
cmp
mov
dec
cmps
xchg
repz
cwde
neg
lock
sub
jb
inc
(bad)
and
pusha
dec
clc
(bad)
mov
bound
pop
out
xchg
push
dec
adc
imul
repnz
out
call
mov
dec
cmp
sbb
or
push
sbb
xchg
out
call
jmp
dec
pop
push
cmp
icebp
in
push
dec
rol
jnp
scas
pop
int
(bad)
dec
cmp
jmp
outs
fidiv
stos
mov
sbb
add
sub
push
mov
std
sbb
pop
rcr
jno
fsub
mov
mov
(bad)
fcmovu
sbb
fadd
sub
pop
aaa
cmc
in
jmp
xchg
dec
push
bound
push
pop
call
jge
cmc
gs
cli
inc
dec
imul
sbb
cld
mov
inc
lock
dec
sahf
clc
popa
mov
inc
out
inc
dec
pop
nop
jo
stc
test
imul
aad
ins
mov
push
in
sub
enter
aam
retf
adc
rol
add
scas
test
xor
jmp
fdivr
mov
cmps
test
repz
mov
sub
gs
lea
jmp
add
mov
loopne
and
add
mov
push
xchg
movs
rcr
push
mov
stc
dec
inc
jbe
inc
pop
cmp
sti
mov
ins
pop
inc
sbb
shr
pusha
cdq
sub
cli
mov
cmp
ins
rol
mov
rcl
mov
mov
mov
add
call
jge
pop
cmp
cmps
mov
mov
push
push
js
add
jg
fmul
xor
xchg
sub
pop
inc
sub
jnp
and
mov
mov
test
jle
mov
pop
jno
into
sbb
gs
ret
aam
xchg
xchg
hlt
sub
xchg
cmp
xchg
push
aaa
jmp
xchg
or
xlat
sub
fs
jmp
and
jp
cdq
daa
nop
es
mov
test
sub
jb
add
shl
(bad)
loope
and
cli
int3
mov
pop
sub
xor
cmp
iret
retf
call
inc
dec
mov
or
pop
push
jmp
mov
iret
pusha
cdq
jo
jl
sub
pop
fst
dec
push
lods
sahf
(bad)
test
cwde
cmps
xlat
mov
aad
imul
int
jl
xlat
cmps
sahf
nop
xchg
push
loopne
jmp
in
inc
cs
(bad)
loope
and
adc
in
jge
xchg
into
adc
sbb
mov
pushf
push
mov
mov
sub
or
mov
shl
jbe
outs
mov
sbb
sar
sbb
xchg
cmps
pop
leave
outs
xor
rcr
jmp
xor
mov
mov
rcr
mov
loope
cmp
add
pop
das
es
push
mov
cli
mov
mov
xchg
mov
lea
mov
fwait
jg
js
jmp
les
inc
add
movs
lods
sbb
xor
cmp
daa
and
adc
paddsb
dec
test
xchg
sub
inc
push
imul
enter
rcr
cmp
loop
ja
jns
pushf
pop
(bad)
in
ret
inc
fdiv
cli
rcl
mov
mov
jb
aam
test
push
mov
jne
mov
stos
xor
into
pop
fist
jge
aas
pusha
rcr
mov
invd
and
(bad)
clc
jp
fistp
mov
in
mov
sahf
fst
mov
frstor
iret
mov
sbb
movs
or
aam
test
out
out
mov
dec
in
mov
mov
dec
aas
mov
out
and
rol
xchg
mov
pop
mov
xchg
icebp
sub
(bad)
(bad)
jmp
sbb
pop
nop
pop
sub
test
(bad)
cmp
add
mov
shl
jle
in
dec
ret
cmp
pop
xor
enter
lds
inc
ret
jbe
push
push
mov
sbb
and
sub
in
pop
sar
ins
(bad)
add
jmp
jp
inc
loopne
pop
mov
out
pusha
test
push
mov
iret
or
sub
test
mov
(bad)
and
push
sub
sub
pusha
js
sub
hlt
ds
lock
adc
cmp
pushf
dec
jns
mov
or
sub
imul
aam
inc
loope
arpl
je
inc
out
mov
fstp
and
stos
movs
jle
push
in
or
pop
push
fs
xchg
(bad)
mov
neg
fistp
daa
mov
mov
ins
fs
cmp
adc
std
cmps
ja
dec
adc
(bad)
les
sub
sub
icebp
aaa
push
mov
in
movs
sub
sbb
push
ja
push
mov
out
(bad)
jne
cli
jns
adc
mov
enter
cmp
xchg
cdq
mov
mov
or
sub
inc
dec
mov
scas
or
adc
(bad)
sbb
int
jmp
sbb
inc
jbe
in
add
mov
fiadd
movs
sti
pop
push
mov
cmp
cwde
cmps
test
xor
loope
xor
add
mov
adc
cmp
jno
cld
cmps
retf
xchg
pushf
cwde
jg
pushf
pop
pop
icebp
rcr
jb
adc
ins
xchg
fsubrp
inc
loopne
dec
int3
mov
cmp
mul
jmp
mov
and
push
fs
sub
jmp
push
or
xchg
sub
repz
jl
stc
jb
mov
leave
mov
mov
xchg
pop
sbb
jns
xchg
es
inc
cmp
int
jb
jle
jmp
xchg
sub
or
add
cdq
mov
jno
push
jp
inc
jg
mov
ficomp
jno
sub
es
retf
pop
fcomp
pop
mov
xor
mov
imul
dec
outs
xor
inc
cmp
xchg
in
lahf
faddp
push
lods
mul
xchg
add
xor
stos
fsubr
pop
sub
(bad)
das
(bad)
fmul
fnsave
sub
mov
inc
jge
dec
cli
lods
push
in
scas
call
and
mov
mov
scas
sub
rcl
cmc
loopne
inc
mov
cmp
pushf
sub
fsubrp
daa
sub
outs
jmp
ss
repz
std
sbb
and
lea
mov
xchg
cmp
mov
jae
mul
popf
mov
push
imul
cld
mov
adc
mov
cmc
fisubr
pop
pop
xor
push
repnz
je
push
jb
xor
sbb
out
jns
adc
jge
mov
cld
mov
inc
fucomi
mov
xor
jmp
loope
push
mov
daa
xor
mov
cmp
cmc
pop
aaa
cmp
inc
ja
imul
or
das
push
and
and
aaa
test
pop
arpl
xchg
rcr
imul
mov
xchg
push
inc
mov
jmp
or
inc
gs
adc
add
and
inc
arpl
inc
out
stc
iret
nop
ss
out
neg
clc
sub
adc
mov
pop
sbb
outs
stos
lods
pop
cld
mov
sar
push
xor
sbb
sub
cmc
test
ret
hlt
in
and
cli
jb
mov
fcom
inc
cmpps
adc
xor
xchg
out
adc
out
push
hlt
cmc
das
mov
lods
adc
push
mov
adc
mov
push
push
sahf
adc
movs
push
mov
test
rol
jle
dec
mov
xor
xlat
or
outs
push
fldenv
or
cmp
cdq
dec
xchg
mov
test
mov
sub
or
das
std
dec
ins
mov
pop
ins
xchg
jl
add
fistp
and
rcl
jno
push
je
or
inc
or
int
mov
mov
or
hlt
into
mov
push
fstp
pushf
or
int3
ds
cmp
mov
adc
fwait
std
jg
jbe
fst
ror
fwait
out
sti
adc
pop
and
inc
movs
scas
dec
dec
pop
mov
pop
bound
push
(bad)
out
dec
mov
xchg
es
rcr
call
out
cmp
inc
cmp
xor
xchg
adc
loope
jns
int3
imul
(bad)
int
ret
loopne
and
inc
and
add
test
(bad)
or
or
ffree
arpl
add
lods
addr16
(bad)
rcl
loope
popa
dec
jne
or
daa
jb
adc
pop
xchg
sub
loop
jo
mov
lods
fiadd
loop
lock
dec
aas
jb
pop
push
sbb
aaa
data16
pop
ja
inc
je
xor
ins
dec
(bad)
mov
push
sub
imul
in
aad
out
aaa
mov
sbb
call
mov
and
push
std
and
dec
je
sub
(bad)
push
in
jno
pop
in
call
(bad)
sub
std
pop
mov
fdivp
jns
pushf
adc
adc
xor
shl
xor
in
mov
int
int3
and
xchg
pop
rol
pop
cmps
push
pop
lock
stos
les
push
les
lods
mov
adc
fcom
(bad)
jne
fst
jae
mov
xor
mov
push
(bad)
out
cmps
add
iret
add
outs
aad
sbb
in
rcr
inc
(bad)
loopne
mov
jb
into
rol
xchg
ds
add
pop
je
cdq
jl
xchg
std
inc
mov
mov
lahf
mov
mov
inc
jbe
popa
ss
xchg
cmp
in
jae
pop
ficom
cs
xchg
sub
das
cmps
sub
sub
pop
test
test
cmp
cli
fsub
xor
jbe
or
or
ins
imul
call
pop
bound
aam
dec
sbb
outs
stos
(bad)
fdiv
in
leave
mov
push
cmp
mov
sub
lahf
cmp
xchg
fs
in
retf
ja
hlt
test
fsub
nop
ins
xor
std
call
cmp
gs
dec
add
lods
adc
shl
and
push
fwait
and
les
adc
jns
imul
mov
shr
pop
mov
and
push
inc
loopne
jo
cs
push
outs
loopne
mov
lods
rcl
cmp
out
jns
jle
das
add
repz
std
imul
not
lahf
xor
mov
retf
ja
xor
adc
adc
dec
mov
aaa
loop
dec
mov
xchg
cmps
fld
sti
dec
xor
(bad)
pop
nop
movs
repz
ret
mov
push
stos
jb
adc
retf
push
or
mov
fidiv
scas
push
dec
cmp
xchg
movs
loop
push
cmp
inc
retf
and
jns
leave
sbb
ss
pop
in
sti
inc
mov
push
(bad)
outs
mov
sahf
jg
sbb
fdiv
retf
xchg
inc
xchg
dec
mov
dec
mov
xchg
mov
pushw
dec
sub
jmp
shl
bound
push
imul
ins
clc
mov
mov
aas
adc
mov
fs
xchg
sbb
mov
fld
inc
(bad)
sbb
mov
(bad)
jmp
iret
adc
fisubr
and
xor
push
inc
sbb
mov
dec
aaa
test
add
mov
add
mov
ret
fisttp
(bad)
cld
sbb
addr16
sub
inc
adc
push
sub
sahf
sub
mov
sub
xor
mov
push
gs
inc
cdq
pop
jmp
(bad)
mov
iret
inc
lea
xchg
rcl
fcomp
and
sbb
popf
jecxz
mov
popa
sub
adc
sbb
mov
and
or
or
call
or
adc
call
and
cmc
test
fs
mov
mov
nop
(bad)
aas
retf
push
push
pusha
je
cmp
addr16
and
call
pop
stc
lods
repnz
je
jae
scas
sti
enter
mov
adc
rcl
and
leave
cmp
test
pop
add
icebp
retf
jno
aad
mov
jbe
dec
rol
cmp
dec
xchg
or
lods
in
faddp
ins
gs
and
fidiv
pushf
jns
sub
mov
inc
(bad)
aaa
ss
push
rcr
lds
mov
retf
outs
pop
repz
fst
ja
test
retf
loopne
popf
pop
leave
and
stc
xchg
in
dec
ds
jmp
adc
into
inc
in
pusha
adc
inc
cs
xor
into
push
and
lods
xchg
sbb
leave
sar
add
cdq
mov
lds
call
loopne
xchg
ds
pop
fwait
cmps
sbb
scas
adc
dec
sbb
mov
jmp
mov
les
call
mov
lock
imul
pop
test
int3
xor
ja
cmp
xchg
mov
mov
mov
out
pop
push
fidiv
in
ret
and
mov
test
icebp
rol
clc
stos
movs
in
outs
xor
dec
jl
popa
mov
fisub
or
sbb
aam
xchg
out
idiv
pop
mov
pop
(bad)
lds
outs
ja
or
xor
mov
and
loopne
add
lock
xchg
cmp
jmp
in
mov
or
shl
add
mov
and
push
mov
mov
je
and
mov
stos
jecxz
pop
addr16
adc
inc
adc
mov
data16
xchg
out
mov
js
push
(bad)
sbb
lea
lahf
arpl
xchg
add
cmp
sub
fcomp
sub
pop
stc
xor
mov
pop
lock
pushf
push
mov
add
push
test
cmps
mov
shl
jmp
push
add
add
xchg
popa
dec
push
mov
and
sbb
inc
fimul
adc
push
scas
push
icebp
add
enter
mov
jo
je
lea
js
and
ret
lock
push
fild
(bad)
lods
push
das
adc
pop
cmp
mov
push
cmp
shl
xor
imul
fwait
xor
inc
cmp
lds
xchg
pushf
mov
xlat
mov
jecxz
call
adc
inc
outs
mov
cmps
adc
imul
loope
push
xchg
icebp
icebp
jg
pop
test
xor
inc
mov
sub
jecxz
ror
or
das
mov
push
adc
adc
push
test
xchg
test
loop
inc
add
std
cdq
lock
popf
mov
jp
stos
retf
fidivr
ss
inc
cmp
movs
or
out
and
sahf
sub
mov
(bad)
push
repnz
pop
pusha
bnd
enter
lods
mov
lock
jl
mov
mov
push
stos
xor
push
daa
push
cs
bnd
cmp
cs
mov
jecxz
lds
in
xor
fnsave
mov
outs
das
cmp
bound
sub
sub
sbb
sbb
popf
mov
into
call
mov
mov
jne
xchg
dec
aaa
shr
mov
call
out
jnp
in
pop
xchg
movs
lahf
dec
jl
sub
ret
ja
jmp
fldz
mov
sar
jg
fisttp
or
loope
fsub
scas
jne
ret
push
aaa
enter
imul
rcl
icebp
outs
push
adc
cmp
mov
dec
push
adc
mov
retf
adc
ret
mov
push
push
ja
in
sub
jp
ret
push
dec
sbb
jo
add
sbb
out
dec
rcl
xchg
ret
enter
fadd
fstp
sub
adc
pop
ins
lahf
xchg
xchg
iret
rep
jo
sbb
dec
sub
mov
lock
fucom
sbb
sbb
cmp
and
push
mov
xor
aam
std
cmps
mov
(bad)
mov
lods
mov
mov
sub
mov
dec
mov
js
push
push
cmps
(bad)
cmps
pop
mov
xor
mov
and
jns
xchg
fst
outs
cs
xor
retf
and
mov
dec
and
dec
rcr
add
pmaddwd
hlt
retf
cmp
pop
dec
and
test
js
rcl
rol
pop
cdq
aas
jo
lds
pop
xchg
ins
jge
clc
jge
mov
mov
mov
cmp
sbb
mov
mov
push
cld
push
test
and
fdivr
push
mov
hlt
mov
daa
push
je
jmp
push
mov
in
in
stos
mov
jl
fsubr
movs
movs
loopne
jno
and
xchg
pop
sub
jge
pushf
dec
cs
call
cli
push
fist
or
sub
aas
cmp
add
and
xchg
cmps
or
cmps
jb
mov
fld
dec
jg
adc
lea
cmp
(bad)
push
dec
sbb
xor
mov
or
pop
pop
gs
adc
cs
or
neg
pop
mov
dec
pop
rcr
fnstsw
pop
xor
pushf
pop
fidivr
sub
std
push
imul
stos
loopne
push
add
add
adc
push
je
cmp
mov
mov
mov
sbb
dec
cmp
ret
cld
cmps
aas
inc
retf
add
test
jo
sub
nop
sub
xor
sbb
inc
cli
scas
adc
adc
dec
movs
rcl
add
xchg
push
mov
mov
popa
mov
das
pop
std
pop
call
sbb
xchg
and
mov
cmp
ret
xor
dec
xor
nop
data16
test
ins
xor
cmp
sub
fstp
jb
lods
jae
dec
cli
(bad)
(bad)
cmc
sbb
xchg
adc
pop
push
inc
cmovno
xlat
scas
xchg
pusha
loope
loope
mov
out
cmps
ja
das
inc
fidiv
mov
xor
pop
inc
call
pop
inc
inc
jne
lds
xor
into
adc
dec
pop
mov
sub
into
cmp
and
shl
jge
mov
adc
cmp
enter
jecxz
inc
push
popa
dec
inc
push
fnstenv
fcom
jo
fs
mov
inc
(bad)
xor
inc
cmp
mov
jmp
mov
or
add
out
add
sbb
cld
pop
repnz
test
cld
mov
jbe
jne
add
cmp
ja
lods
mov
add
ds
mov
clc
sbb
movs
scas
push
fnstenv
fs
outs
mov
int3
test
movs
or
dec
xor
mov
jbe
xor
adc
jae
pop
push
sti
dec
inc
xchg
mov
jle
loope
scas
or
xchg
(bad)
add
aas
jecxz
push
adc
add
test
mov
sahf
imul
adc
ret
dec
shr
xor
sub
(bad)
jno
push
cwde
sbb
push
gs
and
imul
je
push
test
add
adc
sub
not
xor
jmp
mov
fstp
inc
clc
fistp
cmp
test
adc
leave
dec
dec
(bad)
cmp
scas
mov
lods
stos
jp
(bad)
icebp
mov
xor
add
xchg
test
mov
out
pop
add
out
jae
rcr
jae
adc
or
in
mov
and
imul
repnz
gs
sub
(bad)
pop
sub
jmp
test
sbb
jmp
and
and
jne
and
rcl
inc
or
bound
and
and
sub
repnz
fild
out
daa
mov
(bad)
or
sbb
push
nop
inc
mov
call
out
inc
or
pop
jae
retf
jbe
lods
test
sub
das
xor
out
mov
pusha
add
xchg
imul
lods
sbb
imul
xchg
cmps
test
ja
dec
pop
xchg
inc
aam
mov
(bad)
lock
xor
shr
movs
adc
scas
push
xchg
jb
hlt
xchg
xchg
pop
(bad)
and
cmp
dec
in
xlat
lea
xor
lock
shl
cld
stc
inc
xchg
bswap
cwde
sbb
sub
mov
arpl
outs
js
cmps
fucomp
inc
xchg
mov
shl
xchg
mov
out
(bad)
(bad)
jp
add
movs
pop
cdq
jno
jp
xchg
jge
das
jns
ja
movs
dec
or
movs
push
cmp
std
(bad)
mov
adc
and
xchg
lea
sub
pop
mov
rcr
mov
cs
mov
shl
mov
xor
ret
fdiv
lock
mov
lea
std
rol
mov
test
pop
or
or
lods
cmp
out
sub
mov
mov
rol
sbb
les
cmovp
in
loop
idiv
mov
ret
mov
fs
cmp
mov
or
xor
prefetch
mov
cmc
mov
imul
sub
adc
(bad)
clc
inc
sbb
adc
rcr
mov
mov
shl
xchg
mov
lock
dec
loop
lods
mov
lods
xor
jp
cmp
sub
jo
xchg
(bad)
movs
adc
xor
push
add
sbb
ds
adc
cmc
(bad)
movs
mov
std
je
aad
fst
cld
xchg
add
out
and
punpckhwd
xor
push
mov
push
aam
mov
cwde
jne
jp
jno
mov
and
mov
sub
add
add
sub
push
mov
out
push
out
(bad)
inc
mov
enter
int
in
aam
aaa
inc
mov
packssdw
test
out
and
jbe
mov
shr
fs
or
fnstenv
clc
jae
xor
adc
outs
jns
imul
dec
mov
retf
jmp
test
ret
sub
mov
jecxz
mov
leave
leave
push
test
in
cld
imul
fmul
div
outs
aam
repz
je
xchg
pop
les
xchg
mov
fcomp
imul
inc
mov
push
fisttp
cmps
mov
test
cmps
push
xor
dec
imul
jg
fstp
mov
mov
mov
adc
xchg
sbb
fisttp
shr
jae
cmp
sub
imul
or
inc
and
outs
xchg
fucomi
and
inc
nop
daa
adc
mov
sub
xchg
push
sti
je
sti
dec
sbb
je
jge
mov
mov
in
push
icebp
or
test
pop
jnp
cwde
mov
cld
nop
lds
test
icebp
pop
jecxz
add
dec
aam
sbb
jb
add
dec
mov
sti
xchg
inc
xchg
push
cmc
mov
add
jne
jo
dec
call
inc
mov
aaa
not
jge
std
int3
inc
aas
sbb
sahf
daa
xchg
sti
es
mov
jo
iret
dec
repz
popa
push
in
mov
fistp
adc
sub
cmps
adc
mov
test
cmp
jnp
cmps
and
repnz
and
sbb
shr
pop
aaa
push
mov
nop
pop
cmp
ins
(bad)
xchg
dec
test
jb
xchg
repnz
(bad)
retf
out
push
pop
inc
jbe
imul
in
xchg
xor
jne
div
and
and
sub
lock
push
mov
jbe
mov
das
add
je
popa
loop
jne
ins
xchg
loop
adc
jp
mov
and
push
mov
and
and
and
mov
sub
daa
bound
mov
jle
ss
scas
adc
scas
jo
pop
mov
ret
jle
repz
call
sub
xor
and
mov
jp
mov
ja
mov
sub
mov
sub
mov
sub
xor
sub
mov
push
mov
sub
(bad)
gs
into
mov
xchg
pop
lods
cmp
jge
rcl
cmp
fidiv
push
fdiv
fdiv
rcr
daa
outs
jmp
fcomp
xor
xor
jle
sub
leave
loopne
add
(bad)
outs
xchg
outs
stc
hlt
ss
push
push
(bad)
shl
xlat
cmp
sbb
imul
or
jnp
cmp
jge
lea
call
xchg
and
cmps
mov
pop
inc
pop
push
adc
mov
out
stc
adc
xor
and
mov
aaa
or
aaa
(bad)
nop
or
jae
pusha
or
repnz
sub
(bad)
(bad)
fwait
mov
stos
sub
adc
mov
jmp
popa
je
ds
dec
lds
adc
cmp
jae
loope
sahf
cli
retf
jle
in
int3
push
xchg
adc
xchg
pop
and
jnp
test
arpl
xchg
adc
pop
push
hlt
adc
xchg
jbe
mov
sbb
or
cmps
pop
clc
inc
es
(bad)
pop
aam
in
mov
and
pop
ficom
add
xchg
add
call
(bad)
xlat
pop
jnp
fistp
arpl
xchg
mov
xchg
repnz
aam
call
cwde
(bad)
pop
dec
ficomp
and
loope
add
gs
out
jg
in
std
fiadd
pop
cmp
mov
mov
lds
xor
leave
loopne
cld
imul
mov
cmc
sub
xchg
mov
sahf
mov
ret
call
rcr
push
xchg
pop
jge
xchg
sub
(bad)
(bad)
ja
loopne
jmp
call
sub
xor
(bad)
imul
sbb
repnz
fstp
cmps
icebp
jg
repz
retf
xchg
stc
test
jecxz
mov
fst
and
mov
xchg
xchg
cmc
shl
inc
xchg
cmp
or
ficom
dec
dec
test
mov
pop
bound
fwait
idiv
cs
jmp
pop
retf
ret
xchg
call
cld
push
int
or
xchg
loope
das
and
inc
mov
sbb
mov
arpl
cmc
cmp
mov
scas
mov
mov
cli
aas
stos
sub
mov
cmp
or
es
enter
sub
sub
pop
repz
push
in
and
push
sbb
add
loop
in
jecxz
xor
retf
movs
imul
xchg
lea
jne
add
jno
inc
(bad)
jmp
ss
loopne
xchg
xor
test
pusha
xor
lods
lea
cs
sub
enter
ja
das
jne
or
dec
jb
inc
int
(bad)
cld
jmp
or
arpl
sub
push
fistp
dec
aaa
(bad)
sbb
mov
fnstcw
and
fs
inc
dec
xchg
jbe
jmp
adc
mov
cld
xchg
ss
cmp
imul
aam
int3
pop
push
cmps
mov
dec
and
retf
nop
in
dec
test
push
xchg
inc
ror
pop
test
mov
cmps
sti
adc
int
mov
push
outs
push
call
fwait
bound
mov
adc
or
data16
rcl
inc
fcmovnbe
and
cmps
iret
rcr
inc
push
adc
out
fild
fsubr
stos
stos
cs
xchg
sbb
mov
jo
mov
mov
mov
and
mov
xchg
mov
int
pusha
dec
lods
xor
push
test
jg
mov
call
pushf
push
jne
test
xchg
bound
cmp
mov
mov
sub
dec
mov
cmp
data16
(bad)
out
dec
iret
test
cmp
pusha
pop
dec
inc
cmp
lods
inc
in
sub
imul
fidiv
test
(bad)
inc
into
push
mov
mov
xor
fnstsw
aaa
pop
add
jnp
ja
push
sar
les
out
mov
jmp
mov
cs
gs
dec
adc
or
push
xchg
loope
cmp
retf
cli
and
xor
int
mov
hlt
inc
fldenv
mov
dec
or
cmp
shr
scas
cmp
outs
cdq
jae
(bad)
jae
xchg
inc
push
mov
in
lods
adc
into
aas
jno
rcl
push
cmc
daa
sub
fst
jbe
jbe
loope
std
dec
rol
aas
cld
in
outs
iret
scas
test
loope
push
loope
inc
call
cs
addr16
hlt
jbe
push
mov
(bad)
mov
pop
pusha
fild
sub
outs
or
arpl
cmp
fwait
jne
nop
jno
push
iret
inc
sbb
add
dec
adc
mov
pop
xor
nop
mov
scas
xor
int3
pop
xchg
mov
inc
(bad)
dec
mov
and
repz
mov
jae
es
sub
xchg
xor
loopne
sub
into
cmp
mov
stos
cmp
rcr
ja
mov
inc
iret
pop
in
mov
sar
pusha
push
mov
or
les
in
dec
xchg
xchg
add
cwde
or
jns
mov
ins
ror
jmp
popa
or
push
pop
dec
and
stc
sbb
jne
jo
mov
inc
dec
add
lods
clc
dec
call
cmp
data16
adc
repnz
bound
mov
test
push
call
jmp
cmps
and
pop
and
cld
loope
std
jl
scas
and
js
mov
cmps
jge
cld
retf
mov
adc
clc
jg
push
xchg
jb
inc
daa
lock
cmps
fwait
movs
scas
or
adc
stos
xor
rcl
pop
or
dec
ins
call
mov
aaa
mov
dec
movs
sbb
shl
pop
fucompp
cmps
cwde
sar
sbb
fmul
fist
mov
jp
sub
inc
(bad)
mov
xor
stos
in
mov
sub
mov
add
(bad)
shl
das
sub
ror
(bad)
pushf
jecxz
and
loop
pop
mov
or
sub
test
dec
into
dec
stos
xchg
mov
xlat
aad
fmul
adc
push
mov
mov
lock
mov
fdivr
fdiv
repnz
xchg
(bad)
jmp
xor
inc
cmp
into
pop
lea
add
mov
hlt
push
sub
pop
ret
in
jecxz
mov
loopne
lock
mov
xor
retf
push
mov
push
data16
mov
aas
leave
in
mov
movs
loope
mov
ret
mov
xor
push
fdivr
cmp
rcr
dec
fdiv
cmps
xchg
add
jo
fidivr
mov
sbb
sbb
cmp
jp
arpl
iret
or
pop
pop
dec
mov
mov
dec
call
repz
inc
stos
mov
jle
int3
adc
jb
lods
sub
sbb
fild
xor
and
inc
dec
mov
push
(bad)
scas
dec
out
out
inc
mov
sbb
shr
xchg
ja
hlt
mov
sub
push
ja
cdq
es
mov
pop
cmc
ret
or
push
adc
in
mov
loop
in
adc
icebp
push
xor
lods
xor
xchg
mov
(bad)
push
push
es
sar
in
int
jbe
sub
sti
or
call
pop
ja
mov
jecxz
outs
bound
call
nop
les
push
jnp
mov
sahf
data16
out
sub
sbb
rol
adc
xor
iret
add
mov
inc
dec
inc
cmc
jb
add
mov
dec
test
rcl
out
pop
mov
rol
retf
retf
int3
outs
int3
cdq
add
dec
aas
jecxz
out
push
mov
cmp
jb
fidiv
popf
jno
rol
sub
jns
xchg
or
loopne
cmp
mov
xchg
adc
loop
mov
push
popf
adc
test
sbb
push
xchg
cld
addr16
adc
lods
test
nop
loop
sbb
mov
out
sbb
adc
pop
fwait
ja
enter
pop
inc
test
mov
shl
cmp
in
test
pop
(bad)
test
cmp
mov
inc
or
mov
sub
pop
inc
jp
leave
and
sti
xchg
pop
jg
data16
or
inc
jns
scas
outs
mov
and
mov
push
stos
jo
daa
mov
and
cmp
jge
das
jl
cmps
out
dec
pop
sub
sbb
les
mov
push
cdq
std
in
ds
sub
cmps
push
(bad)
in
mov
jmp
and
mov
pop
loopne
push
pop
cwde
mov
pop
hlt
sbb
aad
fwait
jbe
imul
pop
fsub
retf
push
div
mov
gs
iret
bound
out
pop
cli
aad
sub
loopne
in
push
and
mov
add
inc
hlt
dec
fiadd
xor
cli
dec
repnz
sub
aad
xchg
cwde
mov
jmp
(bad)
xor
hlt
and
add
cmp
mov
outs
adc
jbe
ins
int3
aas
sbb
adc
out
mov
mov
xor
shl
shl
mov
arpl
xor
push
xchg
xchg
mov
hlt
ja
xor
rcr
cmp
test
xchg
push
xchg
xor
pop
push
shl
outs
pop
repz
sbb
jbe
lds
inc
or
bound
imul
cwde
mov
ja
jp
pusha
cld
or
adc
les
loopne
xor
xor
mov
jo
push
jnp
cmp
arpl
cmp
xchg
std
(bad)
mov
pushf
xlat
or
fstp
mov
and
mov
sub
rcr
dec
pop
mov
pusha
adc
je
pop
es
xlat
sub
pop
add
adc
stc
fnstenv
test
fimul
outs
dec
les
xchg
jge
add
xor
scas
popf
int
jbe
jno
dec
inc
jge
jmp
push
daa
mov
inc
push
outs
sub
mov
push
pop
(bad)
mov
mov
in
lods
mov
sub
fild
dec
add
aad
add
jae
fnsave
mov
add
pop
pop
xor
gs
fstp
test
es
add
movs
jg
in
mov
add
push
xor
into
sbb
fidivr
mov
ror
xchg
mov
ds
fdiv
stos
hlt
out
jmp
push
cli
sbb
out
dec
inc
jmp
clc
sub
(bad)
jns
mov
out
pop
cdq
cmp
mov
outs
push
sub
pop
aam
pusha
(bad)
sub
mov
(bad)
pop
adc
sar
mul
inc
jo
and
sahf
or
mov
enter
jl
es
add
jnp
movs
pop
imul
add
jp
movs
sti
(bad)
enter
inc
xor
xor
popa
add
inc
add
int3
mov
add
cmps
or
or
cmp
cmp
xor
jns
sbb
ins
imul
pop
xchg
mov
add
jl
xchg
div
jecxz
pop
cmp
dec
jno
cmps
and
test
jo
cmp
inc
cmps
cmp
inc
mov
fsubr
dec
mov
mov
push
and
and
out
xchg
xchg
(bad)
mov
mov
(bad)
add
jns
push
sbb
aas
mov
pop
sbb
arpl
push
xchg
sub
mov
fstp
sub
or
mov
jg
sti
outs
pop
xlat
or
mov
cmp
je
(bad)
jns
pop
dec
jmp
data16
loope
jmp
stos
arpl
mov
adc
xchg
loop
pop
add
es
dec
cmp
int
xchg
inc
aad
stos
mov
into
loopne
fdivp
int3
shl
pop
ficom
fisub
inc
pushw
cmp
xchg
dec
jg
aad
fnstsw
shl
xor
ds
xchg
mov
add
cmp
cmp
pop
fnsave
je
mov
lahf
push
push
test
(bad)
cmp
mov
mov
(bad)
sahf
xchg
rcl
out
mov
loopne
xchg
xor
xor
aad
stos
xlat
int3
out
pop
rol
adc
sti
cmp
adc
push
mov
adc
xchg
movs
add
icebp
fisttp
push
les
dec
dec
sar
xor
test
mov
cmp
outs
test
rcr
out
mov
icebp
movs
ret
cmp
ins
pushf
adc
or
pushf
movs
ror
addr16
jne
and
mov
repz
call
mov
fwait
adc
cmc
arpl
add
add
push
push
mov
sbb
mov
nop
add
in
pop
sub
jbe
ins
cld
dec
mov
loop
cmp
jmp
ja
sub
xor
xor
test
into
call
in
inc
pop
and
xor
jo
cmp
jle
dec
lods
test
test
out
jecxz
dec
inc
out
retf
loop
mov
mov
ss
cs
movaps
popf
stos
sub
scas
jmp
js
sbb
add
repnz
dec
dec
rcl
(bad)
mov
mov
and
adc
mov
mov
cmp
cmp
lods
dec
cmc
sbb
retf
popf
mov
pusha
ja
xchg
mov
mov
loop
aam
cmp
call
fstp
pop
fisubr
mov
outs
pop
fsub
xlat
mov
sub
mov
mov
jbe
mov
(bad)
ret
cs
fdivr
mov
retf
or
jno
arpl
fs
jmp
mov
inc
inc
lea
push
or
adc
inc
hlt
mov
mov
sbb
stc
xchg
mov
xor
lods
lock
push
jns
outs
inc
aad
ret
push
int3
stos
loopne
mov
jecxz
jg
or
xchg
push
loope
pop
add
sbb
loope
test
cmp
sbb
arpl
or
xor
and
mov
in
sbb
mov
nop
lods
jb
adc
nop
push
out
sti
sahf
adc
rcr
dec
loope
add
sahf
imul
sub
sbb
xor
cmps
inc
xchg
mov
fwait
loop
clc
cmp
call
xchg
xor
aam
jg
sbb
scas
and
mov
jmp
dec
arpl
pop
fwait
pusha
push
(bad)
repnz
mov
inc
int3
sbb
frstor
imul
test
mov
dec
out
fs
pop
jns
and
cmps
in
pushf
and
push
or
div
adc
push
inc
add
fadd
jae
mov
adc
popa
mov
cmp
pop
dec
and
and
ds
imul
nop
outs
aaa
int3
mov
test
(bad)
loop
shl
mov
sbb
loop
pop
aaa
fild
scas
xor
cmp
(bad)
(bad)
lds
jge
das
mov
or
mov
cmp
fidiv
adc
inc
adc
(bad)
in
mov
jnp
and
jbe
inc
call
sar
ins
loopne
xor
jmp
out
push
scas
fld
jb
mov
inc
movs
pop
xor
(bad)
mov
data16
fdivr
jne
inc
dec
sub
inc
jae
xor
inc
test
xchg
pop
leave
sbb
mov
pop
jne
aad
je
push
arpl
dec
push
and
jmp
jns
add
fidiv
stc
mov
mov
in
and
imul
sub
test
push
mov
adc
sar
inc
jae
cmp
dec
bound
jmp
xor
retf
daa
or
out
aaa
ficomp
jns
ins
fwait
js
mov
jge
mov
xor
inc
js
jl
sahf
in
push
jmp
mov
ss
lea
lods
bound
test
js
xor
jne
jnp
call
adc
mov
cld
xchg
sub
pusha
xor
lahf
jo
ins
sbb
mov
adc
pop
arpl
ja
fcmove
mov
sub
pop
jecxz
shl
mov
rcl
pop
xchg
push
aad
pop
xchg
mov
sti
mov
movs
lock
test
ins
and
mov
in
mov
out
shl
sub
les
imul
dec
mov
outs
lods
pop
add
jne
xor
fiadd
cmp
xor
adc
push
test
mov
jl
fistp
push
sub
fisttp
push
xor
(bad)
addr16
pop
sub
repnz
and
mov
adc
mov
outs
jmp
push
pop
xchg
outs
mov
loope
repnz
int
xor
xchg
mov
dec
ror
xor
sahf
add
ja
cmp
leave
lods
lea
ja
fmul
fisttp
outs
inc
test
adc
mov
jbe
iret
lock
add
and
cdq
adc
push
and
aad
xlat
cmps
lods
std
(bad)
(bad)
imul
mov
stos
or
jbe
loope
xchg
call
cmp
outs
mov
aam
adc
shr
push
rcr
cmp
in
cld
sub
hlt
jbe
and
outs
out
ret
jbe
dec
(bad)
stc
mov
cmp
pop
mov
push
adc
mov
fbld
mov
push
push
jl
adc
mov
mul
sub
bound
mov
test
movs
xchg
loopne
jb
add
mov
push
xchg
jl
jns
lods
int
pop
(bad)
lahf
or
xchg
ret
pop
jns
add
outs
cmps
adc
test
dec
and
mov
and
xor
inc
inc
cwde
pop
and
div
mov
das
js
dec
repnz
mov
cmp
push
(bad)
cmp
mov
mov
icebp
pop
aas
jl
xchg
loop
scas
mov
inc
sti
cdq
and
je
mov
mov
ds
sbb
jg
imul
lods
outs
xchg
das
ins
stc
sbb
loop
mov
mov
iret
hlt
jge
enter
cmp
lahf
jb
faddp
mov
call
std
or
int
xchg
test
mov
xchg
rcl
cmp
cmp
movs
fcomp
popa
bound
inc
add
pop
sub
xchg
sbb
std
mov
loop
pop
mov
push
push
add
nop
jp
inc
add
lea
jne
mov
xor
sbb
call
rol
push
ja
xor
mov
movs
clc
(bad)
fadd
fbld
out
cdq
inc
icebp
pop
loopne
in
push
loopne
sbb
dec
in
jecxz
inc
mov
lds
jp
bound
call
jb
jle
daa
imul
ret
(bad)
stc
fistp
in
das
sti
scas
mov
or
shl
outs
sub
adc
or
aas
mov
adc
and
sub
aad
fwait
cwde
out
lahf
dec
mov
cmp
adc
sub
div
adc
push
rcl
and
or
lea
movs
mov
imul
movs
jne
cmc
mov
je
ficomp
cli
mov
sbb
in
int
outs
stos
add
imul
pop
je
movs
and
ret
aad
loopne
sub
imul
cs
mov
in
xor
adc
mov
mov
xor
out
mov
cmp
call
jno
cmp
mov
and
sbb
push
ret
pop
push
pusha
dec
mov
inc
add
repz
cmp
pop
cmps
je
push
shr
pop
in
fld
movs
imul
jnp
and
mov
sahf
sar
sbb
or
into
sub
sub
adc
ins
jmp
popf
jge
out
jo
xchg
push
push
mov
outs
out
pop
add
leave
xchg
mov
inc
jae
scas
scas
xor
aam
(bad)
push
or
fwait
sub
xor
jl
xchg
cmp
adc
pop
jecxz
cmps
ins
fcom
fcomp
push
fdecstp
sbb
sahf
xor
jmp
jo
jb
jg
ds
lds
les
xor
test
cmp
lock
lahf
movs
pop
pop
xchg
mov
xor
leave
cwde
jmp
test
fimul
jmp
inc
adc
lods
inc
jno
xor
mov
cmp
mov
inc
and
ret
fldenv
repz
(bad)
dec
cmp
iret
(bad)
or
scas
mov
jns
push
ficomp
adc
xchg
stos
xor
stos
fucomip
out
mov
xor
add
mov
push
cwde
mov
pop
push
shl
fs
cmps
out
push
loop
test
cdq
add
push
mov
gs
cwde
ret
ret
retf
pusha
push
lahf
pushf
frstor
aaa
pop
loopne
fcmovu
cmp
dec
cs
add
or
pop
sbb
jge
ret
push
icebp
mov
pop
xchg
les
cdq
lods
out
or
fsub
sub
cdq
xchg
jp
retf
cmp
push
jp
inc
dec
xlat
out
cmp
mov
aad
jl
xor
add
es
and
and
retf
js
pusha
xchg
loope
stos
pop
inc
sbb
or
xchg
repnz
(bad)
adc
jge
ss
loopne
mov
mov
cmp
xchg
xchg
(bad)
scas
jbe
jmp
or
push
call
pop
xchg
mov
mov
call
cwde
xor
daa
add
arpl
shl
sub
add
neg
stc
add
push
and
sub
mov
outs
and
call
inc
pop
leave
fwait
int3
cmp
push
and
cmps
mov
xor
xchg
push
loop
dec
xchg
shl
push
lds
push
cmp
sar
rcr
push
push
(bad)
sti
daa
add
inc
xchg
xlat
lds
jae
lahf
lds
aad
sbb
rcl
fwait
mov
out
xor
lahf
in
xlat
and
sbb
ja
inc
pusha
leave
mov
push
add
movs
fwait
push
pop
mov
jbe
scas
and
mov
cmp
xor
push
push
push
int
dec
cmp
jle
push
and
mov
xchg
xchg
jl
(bad)
(bad)
xchg
inc
jle
ret
imul
std
and
inc
(bad)
not
test
ins
outs
loopne
scas
test
add
shl
imul
xchg
call
scas
or
js
popf
dec
mov
shl
repz
add
sbb
out
icebp
and
mov
ret
cmp
xor
push
pop
mov
fidiv
ror
pop
dec
xor
cmp
and
in
test
mov
(bad)
fisttp
xlat
jno
push
jp
sub
sbb
ror
inc
cmp
cmps
sub
lock
out
push
cli
jmp
jl
mov
lahf
rcl
push
pop
cmp
stc
(bad)
inc
pop
gs
mov
jb
rcl
test
or
loope
xchg
mov
push
jnp
loopne
std
shl
push
mov
xor
push
dec
xchg
pusha
adc
in
push
mov
call
inc
sbb
and
push
mov
(bad)
lods
and
cwde
es
fcom
aam
(bad)
outs
xor
xlat
xor
fmul
popf
in
cmp
jle
mov
(bad)
push
or
fisub
jl
imul
xchg
out
sub
loopne
inc
lea
out
jg
inc
or
in
and
out
dec
cs
push
fadd
add
xchg
gs
push
mov
mov
dec
and
sbb
fild
shl
dec
dec
sar
nop
scas
dec
jmp
mov
inc
adc
xor
out
lock
mov
fild
xor
mov
ret
gs
pop
xchg
jmp
into
push
je
cmp
or
(bad)
sbb
je
lahf
js
adc
dec
jmp
mov
mov
inc
and
scas
or
lock
fwait
dec
inc
psadbw
fst
mul
and
inc
add
mov
sub
lahf
jne
ins
xor
push
cdq
xor
dec
retf
xor
gs
cmps
mov
or
pop
icebp
fidivr
jbe
pop
into
pop
call
and
adc
mov
sub
cmp
inc
outs
int3
adc
mov
jo
mov
leave
jo
inc
jl
mov
dec
icebp
jo
lods
cli
cwde
movhps
js
leave
outs
ret
(bad)
push
sbb
hlt
test
cmp
(bad)
(bad)
and
push
ss
push
inc
sahf
push
xchg
loopne
scas
sbb
mov
push
xchg
(bad)
add
mov
lods
cwde
mov
mov
std
add
(bad)
dec
loope
lahf
in
xchg
pop
test
div
push
pop
stos
jge
cli
aaa
mov
cwde
in
pop
test
inc
mov
leave
xchg
mov
lods
movs
lahf
inc
jbe
out
sub
mov
test
mov
or
adc
mov
vandps
jl
xor
test
sub
mov
cdq
and
sbb
cmc
xor
gs
aad
aaa
jbe
test
or
sbb
dec
jle
sub
jmp
mov
pop
jne
stos
jmp
sahf
cmp
mov
push
in
inc
and
lods
(bad)
(bad)
sbb
jle
add
imul
test
mov
add
out
mov
dec
mov
inc
and
fs
in
mov
fadd
(bad)
xor
xchg
jecxz
jae
mov
jb
mov
cmp
js
loope
jmp
mov
dec
jnp
dec
fmul
dec
test
jmp
jmp
mov
mov
or
sbb
fwait
push
je
std
jecxz
or
jge
mul
jno
fcmovnbe
scas
adc
fucomp
add
and
gs
add
lods
repz
cwde
pop
std
jle
in
adc
pop
loopne
adc
retf
enter
mov
out
xchg
mov
sub
daa
scas
pop
fisubr
dec
push
iret
adc
jp
aaa
jbe
fnstsw
loopne
sub
shl
dec
pop
dec
ins
sub
ror
xchg
daa
pop
sbb
push
test
fldz
mov
sub
inc
add
leave
inc
cdq
sahf
std
mov
cmp
pusha
cmp
push
cwde
jmp
pop
xor
sbb
test
addr16
cmc
mov
in
mov
call
push
repnz
cmps
je
icebp
cwde
push
cmps
xchg
fst
inc
repnz
stc
cmp
retf
bnd
(bad)
into
mov
(bad)
(bad)
mov
(bad)
icebp
loop
in
(bad)
jl
inc
fsub
xchg
into
mov
daa
out
cmps
ins
ss
adc
cmp
repnz
lods
in
jg
mov
mov
or
pop
push
cmp
pop
push
xchg
add
pop
pushf
fistp
test
xchg
je
push
mov
push
cmc
ror
jg
push
inc
sub
gs
adc
hlt
pushf
inc
cwde
pop
xlat
push
inc
std
adc
add
cmp
(bad)
cmp
push
gs
sub
bound
mov
test
outs
xor
std
movs
xchg
retf
(bad)
gs
addr16
or
es
fstp
in
ret
jo
hlt
push
lahf
pop
les
cmp
popf
popa
cmp
inc
mov
imul
xchg
fstp
repnz
test
test
sahf
sahf
jl
mov
push
pop
adc
add
push
mov
lea
addr16
sub
inc
xchg
mul
xchg
xchg
int3
jg
shr
mov
jno
jno
pop
jnp
aam
(bad)
pop
jle
or
mov
adc
add
add
jge
aad
mov
cld
lock
sbb
ja
loopne
sar
lahf
mov
frstor
mov
in
jl
sub
jecxz
xor
jne
sbb
int3
mov
cmp
sub
mov
pop
mov
cwde
cmp
dec
mov
out
xchg
ja
or
je
or
sidtd
xchg
ret
in
mov
in
dec
mov
loope
sbb
jmp
movs
xchg
pop
xchg
mov
pop
bound
mov
(bad)
mov
mov
scas
retf
int
sub
dec
dec
mov
sub
inc
(bad)
lods
pop
xor
in
xor
hlt
icebp
pop
cmp
cmp
mov
addr16
jbe
lahf
pop
jb
inc
daa
mov
xchg
mov
hlt
pop
mov
mov
adc
es
cmc
lods
pop
int
loop
sub
and
dec
xor
fisubr
popf
inc
sbb
mov
or
cmps
cmp
pop
mov
cwde
dec
pop
shr
adc
jmp
push
push
push
movs
push
out
call
int3
(bad)
lods
neg
sbb
pop
stos
push
hlt
loop
mov
ret
add
fidivr
jbe
xchg
popa
(bad)
mul
(bad)
fstp
add
mov
out
sub
(bad)
jmp
scas
(bad)
loop
ja
jno
mov
in
mov
ss
fsub
xor
(bad)
or
inc
scas
lds
inc
mov
adc
pop
aad
retf
pop
xchg
out
push
and
pop
and
or
jne
repnz
aam
sub
push
jmp
fmulp
pop
iret
into
sub
xchg
sbb
pop
je
imul
pop
shr
call
cmp
push
mov
js
or
iret
repz
test
mov
lods
pop
lea
mov
dec
mov
mov
xchg
outs
cmp
aas
and
out
push
sub
out
cmp
cdq
fisttp
out
fbld
xor
dec
mov
leave
pop
xor
sbb
(bad)
ss
add
in
in
add
(bad)
sub
pop
jne
mov
xor
or
sub
pop
xchg
adc
pop
(bad)
pop
sbb
pushf
lods
test
mov
je
mov
test
cmp
push
pushf
fwait
add
mov
mov
fiadd
mov
fist
and
inc
inc
xor
lock
jb
push
iret
add
(bad)
mov
iret
in
push
aad
cwde
mov
sar
fwait
addr16
out
es
pop
frstor
ja
fistp
ffreep
repz
xchg
out
popa
mov
scas
pop
popf
adc
std
cmps
hlt
cwde
adc
fisub
lock
shl
in
fmul
push
ins
in
inc
xor
dec
into
xlat
push
cmc
shl
jle
push
xor
(bad)
scas
mov
call
cmp
hlt
sahf
jb
cld
addr16
(bad)
and
loopne
pop
fwait
push
and
mov
ficomp
in
adc
push
and
mov
xchg
xor
bound
add
mov
ins
cwde
add
xor
ins
cwde
dec
retf
js
ins
clc
into
dec
loop
jmp
enter
jp
sub
imul
jne
(bad)
mov
pushf
mov
xchg
mov
pop
fisub
xchg
fldenv
jo
in
push
lock
pop
out
xchg
fadd
xchg
sub
test
xchg
cmps
gs
mov
into
mov
(bad)
fisttp
das
cmp
dec
pop
dec
and
pop
inc
xchg
jbe
sbb
dec
cli
ds
les
mov
mov
in
ja
inc
jne
ror
cdq
push
sbb
call
mov
es
sbb
jl
imul
push
cmc
daa
scas
(bad)
lock
inc
in
rcl
push
mov
not
(bad)
fwait
ja
xchg
adc
mov
mov
lock
pop
adc
add
cmp
adc
or
cmp
sub
adc
mov
ds
sar
sub
je
xlat
jmp
inc
ins
ret
jnp
jp
inc
out
test
dec
daa
fistp
and
xor
in
ins
scas
pop
(bad)
shl
xchg
aaa
rcl
sbb
retf
jnp
ds
nop
call
imul
xchg
and
mov
movs
xor
in
call
push
xchg
call
movs
pushf
sub
push
xchg
cmp
shr
ins
adc
xchg
shl
in
test
add
sbb
xor
jno
xchg
add
xchg
in
sbb
cmp
lahf
pop
(bad)
repnz
adc
lea
int
add
and
stos
inc
push
jno
fstp
mov
sub
call
sub
mov
push
or
sub
sub
out
stc
xchg
and
imul
addr16
fs
gs
les
int
push
xor
push
inc
push
adc
lds
enter
pop
xchg
jne
sti
pop
mov
xchg
leave
mov
push
inc
ds
mov
int
lahf
rol
shl
and
inc
lods
fs
push
in
dec
rcl
repz
add
cmps
push
pop
xchg
and
mov
xor
ret
in
mov
and
repz
sbb
pop
push
out
inc
shl
fidivr
call
pop
movs
call
into
sbb
stc
fdiv
loope
shl
pushf
cmp
leave
mov
sbb
out
clc
addr16
popa
mov
jae
fs
sub
dec
sbb
jo
sbb
into
mov
test
mov
cdq
pop
outs
into
xor
retf
xchg
pop
lods
es
add
in
bound
xchg
cmp
loope
jecxz
aad
call
(bad)
fdivr
adc
movs
jae
aam
and
inc
cli
sbb
dec
mov
xor
popf
xchg
vpsubsw
and
std
or
jmp
movs
call
ins
pop
mov
mov
push
inc
cmp
jp
jl
retf
sbb
dec
dec
adc
mov
jo
dec
mov
sbb
sbb
cmp
out
adc
scas
push
icebp
mov
adc
add
xchg
mov
jmp
xor
add
retf
adc
cdq
cmps
pop
mov
sahf
icebp
arpl
xor
int
dec
mov
int3
or
mov
or
and
xlat
or
leave
jmp
mov
call
add
pop
repz
out
xor
pop
sti
sub
add
mov
nop
sub
push
cmps
sar
sub
sbb
mov
cli
out
jns
inc
ret
(bad)
das
push
sub
push
push
fisub
add
jno
(bad)
pop
mov
cmp
cmc
inc
cmps
leave
cmc
or
fs
mov
dec
adc
inc
loop
inc
sub
pop
stc
jmp
(bad)
icebp
dec
xchg
(bad)
clc
ins
sub
jae
idiv
in
ja
iret
cmp
in
mov
test
sub
or
(bad)
imul
pop
and
stos
mov
and
cmps
push
xlat
mov
shl
cdq
pop
or
out
rcr
and
mov
inc
mov
call
call
xor
(bad)
and
dec
and
xor
retf
shr
lahf
push
or
and
daa
xor
lock
fdivrp
scas
int
daa
repz
inc
jge
out
mov
jle
aaa
and
ds
ret
push
sbb
idiv
sub
imul
sub
popa
dec
imul
add
cmp
jecxz
in
shr
mov
sbb
xchg
les
cmp
lods
push
sbb
iret
xchg
ss
sbb
popf
dec
push
xchg
das
out
iret
fwait
add
into
sahf
fnstcw
ins
fs
push
inc
popf
push
sahf
test
sub
add
mov
inc
mov
push
std
xor
fxch
sub
mov
fnstsw
rol
add
add
lea
aas
cwde
or
addr16
sbb
dec
int
dec
dec
imul
sub
in
(bad)
sahf
jl
mov
inc
pop
icebp
ins
xchg
cmp
cwde
mov
(bad)
add
mov
push
dec
(bad)
mov
or
jl
mov
ins
test
stos
jecxz
inc
sbb
or
and
jbe
inc
push
and
mov
add
dec
jge
add
pusha
fstp
aaa
push
mov
mov
call
das
mov
dec
push
outs
add
loope
and
fs
jb
xchg
lods
daa
pop
sbb
xor
pop
inc
xor
inc
jbe
pushf
aas
int3
push
(bad)
mov
xor
push
adc
fldcw
inc
enter
cwde
sub
out
loope
gs
inc
or
pop
pop
ret
jb
test
jmp
mov
inc
cmp
push
movs
adc
mov
pusha
addr16
inc
push
mov
rcr
dec
jmp
aad
mov
ret
in
data16
xor
out
and
ss
mov
dec
add
arpl
imul
inc
scas
mov
pushf
(bad)
push
jb
adc
outs
xlat
sbb
outs
ss
js
imul
add
jbe
adc
mov
jecxz
es
stos
and
xchg
repz
stos
mov
int
inc
sub
push
adc
cmp
fwait
mov
lods
push
lahf
jg
adc
shr
dec
fisttp
pop
mov
aam
in
js
in
push
scas
repz
sbb
ins
mov
dec
xor
xchg
mov
ins
mov
sar
das
rcl
dec
stos
test
out
test
and
dec
lds
xchg
out
imul
pop
jecxz
mov
adc
pop
ja
mov
sub
adc
jb
sbb
loope
dec
and
fucomip
int
sbb
adc
mov
ins
push
mov
or
adc
cs
xor
jge
push
jl
pop
pusha
aaa
std
xor
mov
xlat
jg
mul
mov
mov
xor
jnp
cmc
mov
call
cmp
std
jne
dec
push
data16
mov
or
out
sub
inc
or
out
adc
loop
mov
out
mov
retf
or
bound
xchg
mov
mov
dec
jmp
jmp
test
push
test
xchg
push
js
ja
inc
pusha
icebp
or
xchg
sbb
add
leave
inc
rcr
xchg
dec
and
push
outs
jae
aam
ja
iret
push
imul
ds
cmps
sbb
or
repz
in
cmp
icebp
cmp
cmps
fnstenv
jmp
cwde
lahf
dec
mov
push
sub
mov
cmp
push
(bad)
imul
aam
push
(bad)
into
jb
test
popa
dec
sbb
es
ja
push
mov
clc
sub
dec
xchg
ins
xor
jnp
dec
mov
push
xor
add
cwde
aaa
push
in
mov
ins
inc
inc
push
aaa
pop
jnp
in
mov
shr
and
pop
mov
jle
jmp
dec
pop
lock
ja
arpl
(bad)
lock
mov
push
test
jae
pusha
dec
jg
pop
imul
rol
inc
inc
mov
xor
mov
jo
and
lock
dec
sub
adc
rol
nop
add
mov
add
in
imul
loop
arpl
and
test
cmp
pushaw
fs
aam
hlt
push
out
xor
rcl
aaa
dec
inc
into
mov
repz
int3
icebp
or
repnz
(bad)
adc
adc
lods
sub
jne
xchg
mov
push
(bad)
push
add
sahf
ret
lock
imul
cwde
frstor
call
dec
mov
loope
retf
cs
push
loop
sbb
pop
push
daa
or
cdq
mov
cdq
popf
aas
mov
gs
sahf
or
mov
outs
fsub
out
jno
popa
dec
ins
dec
clc
in
aas
repnz
xchg
scas
test
push
push
mov
adc
fwait
xchg
jae
sub
cmp
fst
inc
sub
je
sbb
cmp
outs
hlt
add
xchg
stc
in
cmp
je
xor
out
pop
retf
test
retf
test
xor
nop
sar
fcmovnu
fiadd
fwait
or
jnp
push
xchg
add
out
mov
out
push
jae
ins
retf
lock
cmp
rol
or
repz
cmp
loope
mov
enter
ins
pop
or
dec
ret
mov
inc
or
pushf
dec
fs
add
adc
outs
mov
dec
mov
int
outs
mov
xchg
adc
push
pop
jmp
jp
fadd
mov
cmps
retf
repz
mov
sbb
jno
add
adc
jmp
lds
in
push
sub
jl
xor
add
pop
aam
test
sub
pop
idiv
add
push
or
adc
loope
int
push
hlt
jae
push
ss
out
xlat
add
or
mov
mov
inc
inc
ret
movs
adc
mov
stos
push
jmp
or
and
xchg
fisubr
mov
mov
std
imul
jp
mov
clc
fsubr
mov
movs
popf
jle
jae
pop
aam
adc
cmps
arpl
xchg
addr16
ds
mov
rcl
add
cwde
pop
adc
pop
sub
fmulp
test
add
or
cmp
jle
xchg
push
aas
scas
shl
cmp
inc
cs
sbb
pushf
mov
clc
test
imul
pop
xor
push
sub
dec
xor
mov
icebp
ret
lahf
xchg
iret
cmp
jno
nop
fmul
mov
and
pop
inc
into
or
inc
add
retf
(bad)
cwde
inc
repnz
mov
dec
push
xor
out
(bad)
dec
stos
out
aaa
das
mov
aaa
into
les
or
pop
sbb
add
gs
scas
lahf
sbb
aad
sbb
mov
adc
fisub
pop
fisub
cwde
push
mov
or
cmp
test
mov
adc
daa
ror
xchg
not
test
or
push
mov
fs
lahf
outs
xlat
sub
jmp
or
pop
shl
or
sbb
inc
xchg
xchg
xlat
out
add
xchg
test
mov
cmp
outs
test
cs
rcr
xacquire
mov
mov
jns
mov
sbb
and
mov
fbstp
inc
inc
mov
adc
pop
mov
sbb
mov
std
push
and
call
or
shl
ret
mov
pusha
stos
call
mov
int3
cs
stos
scas
pop
and
jnp
imul
xchg
add
ja
add
dec
xor
ror
fist
shl
xchg
icebp
and
arpl
cmp
test
adc
jge
sbb
popf
pop
adc
nop
xchg
aam
leave
ins
adc
rcr
mov
in
mov
or
in
mov
push
cmp
jae
ins
and
out
pop
inc
dec
lock
push
adc
ret
cmp
dec
outs
scas
add
xor
push
jl
or
ss
loop
stc
mov
add
jmp
or
xor
xor
mov
retf
je
cdq
enter
dec
push
rol
(bad)
sahf
mov
jno
ins
fadd
ror
pop
std
add
inc
stos
in
jne
mov
and
lock
ror
sahf
mov
pop
imul
mov
jnp
mov
pop
out
daa
jmp
popa
iret
jmp
aam
xor
and
push
fwait
(bad)
movs
out
mov
int
mov
ins
push
push
cmp
mov
sub
mov
push
cmp
or
inc
pop
dec
pop
inc
scas
lods
fimul
or
sub
cld
push
out
xor
out
xor
mov
pop
jmp
mov
dec
sbb
dec
sub
pop
pop
movs
mov
mov
dec
mov
mov
pop
xor
xor
or
leave
stc
pop
add
call
popf
adc
pop
frstor
aad
jl
jbe
pop
or
(bad)
sub
call
ror
mov
call
cmp
inc
dec
mov
neg
jl
xchg
idiv
test
movs
sahf
mov
(bad)
and
in
fmul
pop
push
push
cmp
push
aaa
es
aaa
inc
adc
or
stc
add
add
mov
lods
mov
mov
pushw
movs
cmps
jp
into
and
(bad)
mov
push
mov
sub
pop
je
loop
or
push
sub
sbb
lods
fnstenv
fwait
mov
mov
and
aam
sub
jae
sbb
xor
xor
and
(bad)
mov
jmp
inc
mov
jmp
enter
mov
imul
and
mov
dec
xor
dec
icebp
cli
fbld
sub
sub
sti
mov
iret
cld
retf
push
dec
pop
(bad)
mov
sar
(bad)
fisub
xchg
in
and
mov
mov
test
loop
sbb
scas
in
loop
nop
adc
and
cmc
add
mov
xchg
int3
ret
test
outs
pop
movs
ja
adc
xchg
sbb
int3
lods
pop
fs
sbb
sub
aas
jae
adc
cld
xchg
(bad)
(bad)
inc
test
aas
xchg
dec
sbb
or
mov
loopne
bound
rol
jecxz
pusha
jl
dec
retf
dec
cs
pop
mov
pop
inc
push
mov
icebp
jbe
push
xor
hlt
fld
iret
test
adc
jecxz
ror
xchg
test
jnp
scas
or
pushf
mov
cmp
sbb
inc
lods
jae
pushf
or
ret
test
movs
ja
push
jg
call
movs
sbb
les
inc
hlt
sbb
clc
mov
adc
pusha
sub
jl
or
das
gs
mov
clc
jmp
mov
and
shr
cmp
xchg
cmp
pop
jmp
call
sbb
movs
mov
cdq
dec
stc
repnz
retf
xor
or
rdtsc
(bad)
pop
pop
test
das
xor
jo
mov
arpl
(bad)
js
xchg
aad
mov
mov
aad
loope
sub
sahf
dec
int3
hlt
arpl
enter
mov
and
js
fld
jl
cmp
sbb
lahf
sub
mov
out
imul
ret
pop
fist
scas
mov
cdq
test
fisttp
stos
(bad)
je
xor
push
mov
out
cmps
aam
mov
cmp
adc
les
repnz
out
inc
push
inc
ins
add
or
jb
xchg
xor
jmp
xchg
jno
shl
cmp
(bad)
xchg
cmc
cdq
in
sub
scas
stos
mov
outs
push
les
push
addr16
test
sbb
and
mov
jecxz
sub
(bad)
pop
pop
mov
inc
sbb
int
or
dec
pop
leave
ret
enter
enter
add
lds
popa
jb
cmp
mov
addr16
and
clc
jge
loop
fwait
test
nop
call
stc
adc
mov
loope
xchg
sub
pop
icebp
out
stos
shl
pop
push
add
ins
and
cmp
popf
out
(bad)
nop
cs
or
rcl
adc
push
cmps
(bad)
imul
leave
mov
mov
ret
call
adc
dec
adc
fisub
jecxz
es
fstp
mov
aaa
ja
push
add
adc
outs
(bad)
and
mov
inc
leave
inc
ja
mov
movs
cli
dec
(bad)
mov
xchg
pop
inc
and
int3
ins
mov
sti
mov
shr
ret
push
aas
addr16
daa
mov
jl
fisub
push
(bad)
dec
jnp
xchg
cs
jge
or
in
inc
fcmovb
call
push
mov
mov
fs
xchg
ins
jge
mov
lahf
aas
or
add
xor
test
mov
jmp
imul
pusha
lods
xchg
xor
pop
add
cs
xor
call
xor
cmp
fld
mov
jp
inc
push
inc
(bad)
adc
jp
inc
out
icebp
sbb
mov
adc
push
aam
scas
jp
movs
es
or
fsubr
xchg
xchg
pop
mov
ins
das
retf
pop
add
retf
or
mov
call
mov
pop
ja
sub
pop
cmp
inc
out
sub
arpl
push
repz
push
adc
mov
cmp
xchg
sub
adc
pop
dec
push
dec
inc
sub
inc
cs
push
rcr
mov
retf
cli
(bad)
pop
mov
sub
cmp
retf
out
and
into
scas
xor
in
in
in
cmp
mov
in
fisubr
ret
push
iret
cld
lods
clc
test
add
mov
sub
pop
cmp
dec
push
aaa
fucompp
or
sahf
mov
into
dec
mov
je
cmp
mov
(bad)
or
shr
xchg
jle
sub
dec
retf
xor
je
xchg
or
fnsave
mov
jmp
lods
stos
daa
dec
mov
xchg
xchg
xchg
aam
outs
mov
xor
in
and
les
push
mov
dec
sub
pushf
ror
xchg
sub
nop
mov
xchg
pop
leave
lock
fwait
mov
es
nop
std
mov
xchg
loop
dec
sub
push
sti
push
dec
push
test
cld
shl
mov
cmp
in
ins
add
inc
lods
stos
(bad)
das
call
jno
lock
mov
mov
push
jp
call
(bad)
jp
mul
or
cmp
pushf
repnz
or
pop
(bad)
dec
fisub
pop
xchg
test
cmp
push
ss
lods
xchg
mov
or
neg
mul
add
adc
dec
fdivr
xlat
jnp
add
ins
push
cmp
push
sbb
stos
sub
repz
es
add
jb
and
stos
pop
jno
jno
pop
and
pop
add
shl
daa
add
mov
or
(bad)
mov
or
ds
mov
push
std
or
push
sub
cmp
rcl
(bad)
enter
xchg
pop
popa
das
mov
scas
jge
jmp
xchg
dec
mov
push
in
push
(bad)
ins
sti
sub
sub
mov
test
jns
mov
pop
and
in
ss
cmp
add
(bad)
or
(bad)
mov
shl
adc
lods
mov
ficomp
je
add
out
pushf
outs
xor
adc
pop
js
push
pop
sub
xchg
or
(bad)
out
dec
adc
push
push
xor
jle
mov
ret
out
fmul
mov
xchg
mov
ins
ja
scas
push
loopne
inc
mov
mov
shl
cmp
loope
push
pop
cmc
inc
repnz
xchg
aam
cmp
cwde
lahf
xor
xor
sbb
outs
mov
sbb
mov
xor
std
int
inc
jb
inc
mov
aas
add
push
sub
add
adc
dec
pop
xor
mov
mov
dec
loopne
ret
cmp
xor
xor
(bad)
es
mov
jge
or
inc
xchg
sbb
lods
scas
jae
shl
mov
fistp
dec
cmp
frstor
jns
xor
retf
dec
iret
enter
push
xor
mov
push
fxch
and
(bad)
iret
inc
jno
fwait
pop
push
stos
mov
pop
call
icebp
fisubr
aas
add
(bad)
in
sub
rcr
push
fld
retf
jo
adc
push
shr
(bad)
jb
xchg
jnp
ja
sbb
sub
pop
fbld
push
add
mov
jb
push
ror
xor
xor
sub
sbb
aam
cmp
sbb
xchg
mov
mov
fbstp
cmc
nop
cmp
and
xor
mov
dec
push
push
dec
std
enter
push
iret
stc
bound
pop
push
pop
lods
sub
call
and
push
rcr
ins
inc
cmp
inc
adc
in
daa
add
icebp
pop
mov
jne
daa
xlat
stc
xchg
dec
ret
mov
ins
rcr
push
sbb
lea
(bad)
dec
fcomi
imul
and
xchg
int
mov
push
or
shr
(bad)
jo
cld
out
pusha
mov
xchg
jp
mov
jno
pop
push
test
rcr
mov
add
mov
ins
lock
(bad)
(bad)
loope
xchg
mov
mov
sub
sti
test
add
hlt
sbb
test
ins
push
cmc
and
inc
pop
fbld
sbb
inc
adc
retf
sbb
pop
push
sub
movs
jae
scas
neg
dec
sub
int3
cmps
mov
push
popa
xchg
jb
sbb
imul
nop
dec
rol
std
repnz
mov
dec
(bad)
(bad)
dec
sahf
dec
xor
int
fiadd
addr16
xchg
cdq
cmp
xlat
ins
lea
add
(bad)
or
iret
rcl
jbe
call
in
pop
pop
xchg
sub
dec
sbb
out
mov
xchg
adc
retf
fistp
hlt
and
sbb
add
shl
jecxz
(bad)
cmp
sbb
adc
adc
cmp
ror
pop
div
xchg
inc
xor
in
fbstp
fcom
movs
adc
div
pop
sysret
mov
cmp
(bad)
cmp
mov
jp
push
dec
lods
xchg
fnstenv
js
movq
cmps
lahf
cwde
aas
ins
xor
cdq
das
imul
(bad)
call
(bad)
or
stos
out
xchg
dec
sbb
neg
out
in
repnz
sahf
cs
fstp
dec
or
je
mov
loop
mov
mov
nop
out
and
cmc
in
hlt
sti
mov
jae
cdq
jnp
jno
adc
in
xchg
mov
dec
dec
dec
sti
and
cmp
ins
pop
fs
mov
fisttp
sbb
fcom
mov
push
icebp
jg
aam
add
mov
add
ficom
inc
dec
pop
xor
cmps
fs
cmp
push
add
ins
xor
dec
or
add
jae
cmp
out
fst
stos
test
and
fucomip
fadd
mov
push
xor
shl
push
mov
pusha
add
xchg
movs
push
mov
retf
and
add
push
rcr
rcl
jg
push
or
add
adc
cwde
pop
push
cmp
in
jb
pop
push
mov
or
or
test
sbb
retf
hlt
add
add
mov
xchg
cmp
out
or
rcr
addr16
pop
clc
push
stos
hlt
jb
sti
fst
mov
pop
mov
ror
test
mov
and
cmps
mov
fld
loopne
ja
fs
pop
inc
push
es
out
retf
sub
test
or
cmps
adc
xlat
mov
mov
cmp
add
push
loope
in
dec
cmp
int
cmp
cwde
pop
mov
add
add
mov
inc
sar
popa
and
xor
mov
push
dec
inc
push
and
dec
cmp
call
jbe
gs
jne
js
mov
xchg
xor
dec
enter
loopne
add
loop
mov
push
push
scas
neg
int
pop
or
movs
popa
xor
xchg
adc
and
or
pop
bound
loop
lea
jns
ret
cmp
jo
add
push
mov
sub
xor
mov
in
jle
aad
daa
dec
sub
adc
push
dec
cld
addr16
jmp
nop
out
cld
stc
popa
and
add
addr16
mov
inc
inc
aam
pop
and
inc
jno
dec
sbb
in
xchg
jp
adc
mov
xlat
test
xor
lods
sub
dec
push
cld
std
sub
(bad)
pop
scas
sub
and
mov
mov
outs
xor
pop
xor
adc
das
int
mov
pop
xchg
std
fstp
jne
dec
mov
mov
xadd
out
movs
jae
loope
(bad)
outs
int3
xor
out
fidiv
invd
mov
inc
push
(bad)
mov
aad
fst
mov
jmp
and
xchg
addr16
cs
add
iret
adc
repnz
push
dec
jle
jg
fisubr
xor
add
div
push
dec
mov
sbb
jno
(bad)
cs
outs
test
outs
pop
sbb
(bad)
imul
add
jbe
(bad)
mov
inc
rol
cdq
cld
or
gs
es
mov
fcom
aas
cmps
gs
push
jecxz
xchg
mov
mov
or
lahf
dec
push
and
inc
nop
fisttp
xchg
xchg
leave
xor
jnp
nop
add
xchg
cwde
cmp
mov
sub
sbb
scas
mov
pop
inc
rcr
dec
pop
push
mov
xchg
fbld
jb
movs
mov
sub
pop
js
sub
bound
sub
jge
ins
or
xchg
mov
pusha
jmp
fst
ret
pop
fxch
adc
or
call
sbb
gs
xor
jmp
pusha
leave
movs
in
push
xor
mov
xor
push
push
pop
xchg
and
cmps
sbb
inc
jp
out
rol
sub
mov
movs
xor
shr
sub
xor
adc
pop
mov
fist
inc
xchg
retf
adc
adc
addr16
hlt
push
test
mov
das
loop
sbb
stos
sbb
jb
scas
sub
ins
aaa
inc
mov
adc
frstor
add
and
jl
test
mov
out
sbb
pop
outs
xor
mov
aaa
hlt
sub
cmc
lods
int3
dec
js
mov
sbb
push
sub
sbb
outs
cmc
repnz
lahf
inc
call
push
dec
ins
fdiv
and
ja
jae
and
add
mov
push
jnp
fisub
xor
sub
fistp
enter
fmul
ds
fucom
mov
xchg
movs
or
popa
push
or
adc
icebp
repnz
daa
fidivr
xor
add
loope
dec
cmps
fstp
ret
and
sbb
adc
mov
jae
mov
or
xlat
pop
push
or
pop
add
repnz
sub
pop
jl
outs
jmp
mov
xchg
jge
dec
xor
gs
fisubr
in
push
inc
int3
not
mov
push
cdq
inc
cmps
rcr
icebp
cmp
sub
sbb
in
daa
mov
ds
mov
mov
mov
(bad)
(bad)
outs
js
cmp
pop
inc
mov
in
repnz
sbb
cmp
out
ja
push
fwait
addr16
leave
(bad)
stos
sbb
adc
fwait
xor
push
dec
ins
ficomp
dec
cdq
std
ret
xor
arpl
xchg
mov
dec
stc
call
in
xchg
cs
push
or
ficomp
dec
xchg
mov
mov
pusha
daa
out
add
push
add
dec
cld
xor
int3
jno
inc
pop
mov
mov
pop
call
xchg
add
and
out
test
dec
out
mov
or
rol
or
xchg
pop
hlt
mov
push
popf
mov
and
das
dec
add
mov
fild
ror
add
repz
adc
retf
inc
scas
dec
push
retf
add
inc
push
fldenv
retf
dec
push
mov
xor
call
stos
ss
outs
shl
into
loopne
jecxz
(bad)
jge
test
aad
cld
and
hlt
(bad)
push
(bad)
mov
test
imul
sub
xchg
outs
aam
inc
xchg
outs
jno
(bad)
jns
pop
sti
ret
xor
cwde
xor
idiv
cmp
imul
inc
add
jb
fwait
les
sbb
mov
xchg
idiv
loopne
call
aad
jnp
cmp
mov
das
mov
cmc
fistp
stc
mov
cwde
fsub
repz
sbb
inc
sti
fld
(bad)
xlat
xor
fild
dec
cmps
cmp
xor
out
cli
rcr
inc
mov
repnz
cli
loopne
sbb
and
add
fwait
push
fstp
call
push
or
stos
xchg
jmp
sti
jecxz
je
cs
add
fist
fisubr
cld
mov
rcl
fstp
push
mov
idiv
dec
mov
fisttp
cmp
jo
imul
imul
cmp
mov
icebp
and
jmp
repnz
pop
lea
inc
ins
popa
(bad)
leave
push
data16
dec
call
jo
jl
jnp
mov
retf
xlat
or
sub
push
fild
pop
mov
nop
pop
out
mov
xchg
ds
push
jns
and
stos
cmp
jge
out
mov
add
scas
inc
int
or
aas
pop
sbb
mov
cwde
jns
cmp
pop
lea
fnstenv
mov
inc
in
or
(bad)
ins
jmp
inc
das
into
pop
fs
mov
add
cwde
imul
inc
pop
std
daa
ss
bound
inc
xlat
xchg
loop
push
xor
add
push
fnsave
jp
stos
cld
pop
mov
(bad)
daa
lock
sub
sahf
ret
jae
in
sub
inc
mov
sbb
shr
sbb
xchg
or
dec
inc
sbb
(bad)
or
lea
and
pop
and
add
mov
fs
jmp
sahf
cdq
popf
mov
or
icebp
xlat
pop
dec
or
dec
mov
jmp
cdq
jg
in
stos
add
xor
mov
pusha
add
or
dec
xor
jmp
mov
jo
outs
neg
jb
xchg
mov
mov
ja
cmp
outs
sar
in
pushf
pop
mov
lds
jmp
sub
repz
aam
test
aad
jg
xchg
(bad)
scas
adc
les
jno
push
mov
inc
and
sbb
and
call
loopne
sbb
pusha
mov
or
sbb
int
xchg
popf
xchg
ja
pop
clc
shl
sub
cmps
sub
not
movsx
fwait
xchg
inc
out
xchg
test
push
mov
cmps
mov
test
stos
adc
push
gs
pop
push
stos
fcmovnb
sub
jmp
pushf
inc
adc
popf
xchg
push
mov
pop
add
inc
push
jg
jecxz
push
push
arpl
(bad)
lock
adc
jecxz
fidiv
ror
lods
repnz
xchg
pop
mov
inc
jo
dec
ret
inc
mov
push
xchg
aam
push
mov
stos
mov
mov
inc
mov
and
mov
cmp
push
and
xchg
pop
add
cli
cmps
int
adc
icebp
and
cmps
cmp
jecxz
sahf
dec
lods
neg
inc
loope
scas
scas
cmps
inc
in
add
mov
pop
in
jno
adc
jl
push
inc
sbb
mov
sbb
fwait
mov
mov
bound
pop
xor
mov
add
in
or
mov
mov
int3
push
pop
scas
and
jbe
cmps
sub
xchg
add
test
aaa
out
cmp
in
xchg
jno
add
inc
fs
push
outs
push
mov
add
mov
sub
add
xchg
lds
test
(bad)
sbb
sub
sbb
repz
out
jg
cld
xor
jno
push
pushf
sbb
inc
jmp
in
(bad)
fbstp
movs
xlat
cwde
sub
xchg
mov
xor
(bad)
out
lods
xchg
into
ss
and
xchg
mov
pop
pop
int3
add
pop
sub
push
mov
mov
cmps
ja
dec
test
cdq
ja
mov
cmp
push
(bad)
mov
jecxz
fwait
sbb
sbb
mov
clc
or
mov
xlat
and
xor
das
push
call
ror
push
loopne
je
and
sysenter
cmc
or
data16
pop
dec
cmp
(bad)
fdiv
push
mov
xor
push
or
xchg
or
sti
pop
int3
mov
lds
out
dec
in
or
addr16
sbb
xchg
cmp
jne
fisttp
inc
cmc
or
mov
aaa
lods
mov
or
fdiv
push
cmp
jnp
cmp
out
mov
mov
stc
pop
cmp
mov
test
repz
sub
retf
adc
aaa
jecxz
out
mov
dec
dec
mov
jmp
cmc
shl
xchg
add
adc
ror
call
inc
ss
mov
jecxz
inc
pop
inc
lods
dec
push
daa
mov
mov
icebp
imul
pop
xchg
or
out
(bad)
aaa
xor
pusha
or
xchg
leave
stc
inc
jo
ds
xor
jl
es
test
outs
sbb
inc
xchg
mov
out
ficomp
enter
iret
xchg
sbb
cmc
neg
push
and
inc
ror
scas
mov
pushfw
lahf
xchg
(bad)
repz
mov
in
pop
push
adc
cmps
lds
icebp
aad
push
fisttp
mov
sbb
adc
add
jle
sub
adc
fstp
mov
and
push
out
mov
cmps
sahf
mov
aas
adc
pop
out
pusha
mov
lods
inc
xchg
fcmovb
mov
imul
test
sar
mov
and
leave
cmp
push
xor
psrad
cmp
add
fild
jo
retf
dec
aaa
fst
and
inc
pop
(bad)
sti
and
xor
adc
mov
out
pop
mov
mov
inc
sbb
jnp
adc
scas
addr16
pop
push
jmp
mov
loopne
je
push
das
imul
sbb
ins
leave
jp
push
xor
add
mov
sub
stos
ss
loop
sbb
stos
or
mov
ds
ins
(bad)
movs
adc
(bad)
jmp
mov
lock
mov
xor
sbb
test
mov
mov
ja
xor
stos
outs
xchg
(bad)
push
mov
mov
inc
nop
and
ins
je
pop
xchg
xor
gs
inc
cmp
in
call
mov
or
mov
lods
sbb
xlat
inc
xchg
stos
adc
in
pop
mov
jb
ret
out
dec
cmp
dec
dec
fwait
cmp
dec
out
jge
cli
xchg
inc
test
fadd
rcl
mov
out
push
aaa
loop
xor
scas
sub
daa
xor
or
arpl
push
adc
xchg
out
jnp
cwde
(bad)
enter
jge
shr
gs
nop
cld
lods
imul
inc
fild
das
gs
fimul
add
pop
adc
or
or
dec
popa
adc
cmp
mov
xchg
cmp
retf
pop
ret
cmps
mov
(bad)
xor
fimul
mov
push
mov
movs
ret
in
and
jge
lahf
inc
scas
dec
mov
push
mov
enter
rol
ss
enter
push
fcomp
inc
jle
push
cmp
addr16
or
add
xchg
inc
adc
test
je
addr16
sub
pop
lea
stc
cvtps2pd
test
cs
cmp
in
jg
ds
ret
xor
jmp
dec
mov
xlat
push
adc
neg
and
imul
cmp
dec
add
cmp
mov
fwait
mov
jbe
sbb
lods
cmps
push
adc
inc
addr16
push
aaa
and
adc
sbb
mov
xchg
cmp
lock
fs
sub
xchg
pop
fimul
dec
mov
xor
fsub
mov
mov
jle
cdq
jmp
shl
xchg
adc
loopne
xchg
jo
sub
mov
out
dec
cmp
push
ret
add
mov
sti
iret
sbb
pusha
(bad)
call
inc
inc
test
mov
leave
(bad)
xchg
pop
arpl
mov
fstp
(bad)
stc
add
inc
jge
add
inc
imul
xor
pop
ins
js
xor
push
push
xchg
xchg
add
adc
in
out
arpl
into
jle
stc
mov
inc
mov
mov
and
mov
retf
into
sub
(bad)
push
pop
das
inc
ins
pushf
jle
xor
les
and
mov
mov
add
mov
inc
push
pop
fnstsw
movs
add
cmp
inc
inc
neg
fcomp
addr16
jae
jno
sub
out
in
int
ins
imul
and
lahf
push
inc
inc
les
and
inc
sub
xchg
repnz
pop
cmps
sub
push
test
sub
fimul
mul
xchg
ss
imul
aam
ja
test
loop
sahf
(bad)
add
pusha
ins
adc
sub
icebp
inc
xor
sub
push
repnz
ds
adc
lods
bound
jne
jg
xchg
xchg
cwde
inc
sar
das
repz
xor
sub
fsub
stos
push
imul
pushf
cmp
mov
std
cmp
fistp
dec
add
(bad)
in
mov
xchg
inc
pop
shl
lahf
add
xor
addr16
cdq
or
scas
and
add
pusha
jl
pop
or
fcomp
popf
aas
adc
jnp
jo
inc
and
jns
fldenv
push
add
out
or
es
inc
in
test
jne
pop
push
jp
jne
add
jecxz
dec
out
push
fdivr
ret
pop
jecxz
scas
xor
fisub
jno
and
jno
push
mov
sbb
pop
jl
inc
push
sbb
call
sti
enter
push
test
js
or
sub
jl
in
add
jo
dec
jmp
jp
movs
ret
jmp
shr
ds
lods
inc
add
xchg
lods
not
lea
imul
mov
daa
out
cs
fbld
pop
clc
sar
mov
ror
xlat
pop
push
scas
in
shr
or
mov
xchg
sub
sub
adc
inc
outs
mov
ret
jno
das
ins
pop
(bad)
or
leave
dec
adc
data16
sbb
jo
pushf
fcom
ret
sub
pop
adc
push
sti
cmp
call
xchg
or
jno
pop
dec
fdivr
jae
jne
aas
icebp
mov
(bad)
aam
ja
pop
imul
push
mov
cmps
and
cmp
test
ds
xor
gs
cld
ins
scas
or
(bad)
ror
sub
pushf
gs
sbb
mov
and
loopne
inc
mov
test
pop
jbe
mov
fs
inc
into
ja
sub
mov
sti
in
in
push
pop
not
cmps
lods
nop
fbstp
push
jbe
jmp
mov
inc
mov
jmp
cmp
pop
(bad)
cmp
aaa
add
movs
lea
sub
iret
retf
jmp
adc
adc
lds
retf
dec
imul
jno
cmovno
add
scas
sar
rol
add
repz
or
jle
adc
out
in
jo
fwait
lods
mov
movs
(bad)
mov
std
and
inc
ins
dec
sub
retf
and
and
pop
(bad)
jmp
(bad)
int
clc
push
mov
push
sub
iret
ret
fnstcw
retf
sti
das
or
push
and
and
or
stos
cmp
mov
dec
out
adc
jecxz
inc
int
mov
or
dec
jle
ja
popa
loopne
sub
dec
cmc
mov
pop
jne
and
xchg
mov
push
out
bound
fisubr
popa
push
outs
mov
push
and
jl
js
loopne
sub
stos
call
dec
sub
stc
xchg
pop
mov
aam
mov
lea
push
(bad)
mov
push
mov
mov
xor
fcmovnbe
stc
sub
lds
movs
(bad)
jnp
mov
icebp
and
in
push
call
xchg
popa
adc
cmp
enter
xor
scas
(bad)
popa
cs
(bad)
cmp
and
ficom
or
rol
mov
push
add
and
cs
cmps
push
loopne
jno
dec
push
cs
fldenv
scas
cmp
retf
sub
jge
pop
lock
js
fwait
in
or
push
inc
mov
push
shl
or
rcr
movs
loop
jnp
scas
shl
mov
clc
in
sub
rcl
iret
jp
(bad)
pusha
xchg
les
nop
jno
mov
xchg
or
iret
cld
mov
xor
movs
inc
mov
cdq
ins
adc
stc
sbb
inc
and
sahf
loope
retf
xor
mov
cmc
jo
cmp
or
mov
cmovnp
sub
mov
pop
push
test
cmp
cmp
pop
or
adc
stc
out
sub
mov
mov
hlt
xor
or
xchg
add
jne
sub
xor
jbe
loop
dec
sbb
fucomip
xchg
inc
xchg
lods
lahf
mov
movs
mov
xchg
mov
int3
sub
xchg
jmp
sbb
sub
and
add
mov
retf
sub
scas
or
jne
mov
pop
pop
out
int
iret
cmp
outs
dec
push
cmp
test
aam
lock
repz
mov
fcom
icebp
or
(bad)
dec
cmp
cmc
mov
xchg
add
and
iret
call
pop
xchg
sti
shl
out
mov
push
repz
sbb
mov
or
cld
(bad)
or
repz
pop
sub
dec
and
and
xlat
aaa
cmps
div
inc
ja
mov
imul
and
gs
shl
outs
repz
or
pop
cs
fwait
or
gs
js
movs
loope
jno
adc
dec
adc
mov
add
(bad)
ror
sub
lds
clc
in
sti
mov
outs
fcmovu
add
sbb
adc
cmp
lods
call
push
je
inc
fwait
jg
cmp
std
mul
sbb
aam
mov
sub
push
pop
xchg
adc
inc
jne
jp
outs
jmp
nop
sub
inc
imul
mov
call
push
mov
xchg
ss
nop
out
jne
xor
sub
jns
mov
in
shl
es
jno
mov
sti
mov
sbb
sbb
xchg
fidivr
mov
adc
dec
add
xlat
gs
xchg
test
sbb
inc
aas
pushf
les
push
mov
call
ja
loopne
(bad)
sbb
mov
cmp
or
daa
cmp
jg
loop
sub
push
test
push
in
sahf
(bad)
inc
cmp
js
cld
lods
xor
cmp
mov
cmp
xchg
xlat
ret
push
cmps
fisub
in
sub
ret
adc
cmp
(bad)
dec
jne
and
push
cmp
pop
mov
mov
jae
ret
xchg
cdq
dec
mov
sbb
cmps
mov
imul
jnp
dec
arpl
stos
les
sub
mov
and
sub
fimul
pop
pushf
jge
cmps
cs
cmps
lahf
mov
mov
inc
xor
pop
(bad)
mov
mov
or
leave
add
push
dec
dec
and
dec
or
in
sbb
arpl
pop
mov
sbb
fdiv
scas
loop
(bad)
retf
adc
aaa
lea
pop
pop
push
xor
push
mov
and
mov
xor
push
scas
movs
add
jmp
push
mov
ret
sub
arpl
mov
push
push
inc
jg
dec
sbb
(bad)
mov
jae
sub
imul
stc
mov
mov
dec
push
(bad)
aad
jb
inc
jmp
jnp
shl
inc
bound
rcl
jbe
add
call
dec
cs
push
and
test
(bad)
adc
mov
neg
stos
pop
js
add
pop
pushf
movs
dec
mov
or
xchg
cmp
add
jbe
dec
push
scas
jnp
cmp
or
stc
int3
sbb
std
leave
lds
xchg
mov
rol
jl
push
adc
retf
add
(bad)
push
js
lock
mov
int
mov
jne
imul
inc
pop
loopne
push
aas
sbb
pop
cmp
push
call
push
dec
fnstcw
cld
arpl
push
cmp
xor
cli
adc
lahf
jno
mov
loop
(bad)
in
das
and
xor
or
shr
push
cs
fimul
ror
xor
jae
(bad)
mov
or
sbb
(bad)
fisttp
push
fbstp
dec
dec
call
nop
xchg
push
test
push
pop
int
jl
inc
cdq
gs
lods
xchg
sbb
jmp
push
xor
sbb
cli
loope
ja
xlat
sub
lds
retf
stos
movs
and
xchg
jb
xor
aam
stc
add
fs
push
in
ins
sbb
xor
ficom
adc
div
dec
jmp
retf
lea
jo
xor
lds
call
aad
repz
sub
and
mov
xchg
cs
xor
and
outs
push
xchg
inc
stos
mov
and
mov
and
cmp
push
lock
imul
mov
fisttp
xlat
and
loope
jno
jno
and
mov
jbe
cmps
or
sar
xlat
js
push
xor
cmps
dec
dec
cs
jmp
inc
adc
daa
adc
xor
outs
jno
pop
ret
xor
mov
mov
inc
pushf
xchg
in
(bad)
popf
or
daa
int
into
adc
jle
mov
mov
pop
dec
sub
std
popf
mov
(bad)
bound
retf
push
gs
sbb
pop
enter
adc
push
into
jnp
shr
mov
(bad)
push
sahf
jg
gs
(bad)
jle
pop
xchg
mov
mov
mov
clc
xor
outs
push
dec
xchg
jae
inc
adc
dec
push
or
push
je
dec
inc
jb
mov
adc
jnp
push
ret
int3
or
mov
xchg
frstor
pop
jecxz
push
stos
iret
jg
in
xor
pusha
cli
dec
call
xor
into
daa
cmp
push
inc
jno
iret
push
sub
xchg
std
and
dec
ins
pop
ja
jo
xchg
jnp
outs
ins
ret
rol
pop
aad
call
fld
bound
imul
lahf
mov
dec
adc
dec
lods
out
xchg
xchg
jmp
aad
mov
fld
test
std
mov
mov
aam
bnd
lods
addr16
jp
ds
sbb
test
xchg
(bad)
(bad)
scas
ds
test
stc
mov
popa
and
js
cmp
pop
data16
cmp
ds
(bad)
cmp
push
int3
pop
add
imul
aaa
std
repnz
mov
inc
xchg
call
arpl
xor
aad
jb
rcr
sbb
or
(bad)
mov
add
mov
jae
sbb
or
scas
sahf
mov
in
test
jmp
inc
loopne
ror
test
fucomip
adc
out
jo
push
add
daa
sub
mov
xchg
or
in
jg
aas
add
cwde
jae
mul
(bad)
and
adc
retf
mov
inc
jae
mov
push
push
(bad)
lock
xor
aas
js
aaa
dec
cmps
not
fisubr
repnz
push
push
pop
lock
and
xor
lea
idiv
xchg
push
int3
movs
mov
int
mov
cmps
pop
inc
pop
movs
(bad)
jns
jo
adc
iret
adc
hlt
xor
ins
pop
pop
repnz
push
repnz
jns
and
ins
push
cmp
and
and
push
and
push
and
and
out
adc
mov
ds
lahf
lods
or
and
rcr
ret
xor
dec
fdivrp
loope
cmps
mov
jle
pop
xor
cmp
adc
mov
jl
mov
ss
jmp
call
pop
sbb
mov
fidivr
sub
or
es
call
or
cli
dec
retf
mov
mov
scas
add
das
push
or
xchg
std
adc
or
jmp
loopne
mov
add
lahf
and
mov
sti
mov
push
aas
hlt
add
sbb
push
fistp
call
(bad)
das
xor
mov
mov
test
dec
out
cdq
lahf
mov
inc
sub
mov
imul
ins
xchg
pop
dec
aas
pop
ret
ret
jmp
je
and
fnsave
dec
pop
mov
out
addr16
xchg
mov
mov
loopne
sti
call
mov
cwde
stos
xchg
jl
add
xor
cli
lds
push
cs
or
hlt
(bad)
lods
xor
dec
mov
push
cs
pop
sar
mov
mov
shr
or
push
xor
ins
jbe
cwde
mov
mov
ret
mov
or
test
les
arpl
adc
sar
jno
lods
rcr
gs
cdq
jno
cmp
repz
repnz
adc
sbb
(bad)
cmp
fistp
mov
call
mov
xchg
test
mov
xchg
mov
mov
and
jecxz
jmp
int3
out
pop
dec
test
sub
jmp
in
push
outs
sbb
and
cmps
cmps
push
fisttp
sbb
cmp
out
xchg
call
jmp
cdq
imul
cmp
iret
add
and
leave
repnz
scas
hlt
test
xor
test
sub
bound
loopne
sbb
imul
scas
pop
rcl
aam
out
mov
std
aas
jmp
xchg
pusha
jnp
jno
enter
push
mov
push
mov
jno
idiv
pop
inc
and
xor
mov
scas
add
xchg
test
sbb
adc
out
pop
adc
xlat
adc
stc
dec
in
adc
xor
adc
push
push
push
add
xchg
mov
cmp
xchg
sbb
loopne
pop
add
mov
gs
mov
(bad)
push
mov
ret
repz
scas
xor
pusha
pop
sub
sbb
and
div
lds
or
sbb
ins
dec
dec
push
mov
aad
stos
fstp
jp
imul
or
push
loop
xchg
cmp
xor
and
jb
mov
ret
je
les
push
lods
push
rol
(bad)
xchg
loopne
stc
mov
jg
jecxz
adc
outs
pop
gs
not
mov
adc
push
lea
xchg
lds
sub
push
retf
scas
cmp
inc
jecxz
icebp
mov
(bad)
push
ret
inc
mov
jbe
pushf
cwde
or
dec
mov
pop
retf
int3
pusha
call
rol
std
(bad)
jmp
sbb
jmp
sub
ins
fldcw
loope
and
das
push
cs
mov
into
dec
mov
data16
ss
in
mov
jbe
mov
inc
or
pusha
cmc
dec
push
xor
loop
iret
cld
call
repnz
cld
lods
xchg
xlat
mov
jbe
ins
pop
xchg
cmp
xchg
jecxz
xor
xor
mov
movs
adc
xor
add
sbb
fadd
iret
fcmovne
lock
dec
adc
dec
mov
push
mov
mov
cmp
out
inc
push
pop
in
adc
jg
sbb
inc
xor
pusha
enter
add
inc
imul
(bad)
push
push
sbb
add
outs
xchg
jmp
mov
out
in
sbb
xor
sub
mov
and
push
push
pushf
sbb
das
(bad)
retf
iret
inc
jp
out
addr16
push
mov
(bad)
cmc
xor
cmp
xor
mov
jbe
cmp
(bad)
mov
push
jp
sub
movs
mov
inc
test
js
dec
and
movs
pop
nop
xor
test
loop
cwde
jno
aam
daa
jne
ins
repnz
ret
mov
push
fild
jg
or
inc
lods
sub
sahf
pop
jp
ret
add
xchg
addr16
popa
xchg
leave
sub
cmp
push
jmp
cmp
lods
shr
or
sub
sub
stc
call
mov
mov
das
aaa
mov
out
inc
data16
add
loopne
retf
and
loope
xor
es
mov
xlat
enter
sbb
inc
pop
imul
leave
jle
and
cmp
lock
sub
mov
sbb
leave
loopne
les
repnz
(bad)
aas
sbb
mov
loop
fnsave
fiadd
into
js
push
rol
jge
mov
and
sbb
adc
jns
lods
jnp
pop
(bad)
fiadd
in
ror
jge
pusha
sbb
sub
pusha
sbb
mov
xor
out
cwde
mov
xchg
gs
ror
dec
call
rol
hlt
int3
fsub
lods
adc
sub
pop
jns
add
adc
out
cli
jo
(bad)
arpl
mov
add
push
retf
out
pop
xor
or
mov
std
aad
xchg
or
(bad)
dec
addr16
sbb
push
pusha
pop
in
xor
cmps
aas
mov
shr
ret
dec
lods
xchg
adc
mov
in
or
mov
int
push
and
mov
aad
outs
loopne
mov
xchg
mov
(bad)
jb
cli
xor
xchg
jg
or
test
pop
pop
(bad)
and
fisttp
sub
pop
cwde
sub
pop
add
pushf
scas
dec
(bad)
jp
push
jne
inc
push
aad
cld
or
pop
dec
or
out
retf
mov
pop
cmc
stos
adc
out
mov
shl
inc
out
xchg
sub
sub
pop
outs
adc
sub
xchg
mov
pusha
sbb
dec
fdiv
data16
add
mov
enter
outs
aaa
scas
int
idiv
loopne
cdq
hlt
aaa
scas
shl
test
cmp
mov
cdq
inc
pop
cmps
pop
xchg
sub
or
popa
loopne
mov
les
xchg
int3
adc
mov
rol
or
ins
pop
cdq
test
out
cdq
pop
fwait
movs
loop
shr
retf
jg
mov
int3
ja
into
shr
mov
inc
icebp
dec
xchg
dec
rol
adc
cmp
mov
and
pop
popf
sar
fcompp
in
inc
push
xchg
stos
jb
sbb
les
push
sub
jge
in
dec
jns
pop
dec
dec
pop
rcl
test
cmp
adc
daa
jmp
mov
sbb
sbb
out
out
sbb
jmp
cdq
adc
call
mov
inc
xchg
sub
and
jno
jae
sub
div
jmp
repnz
sub
pop
lds
mov
aas
jmp
jb
dec
mov
cmp
leave
xchg
ds
retf
(bad)
shl
dec
mov
sub
scas
and
xor
pop
sbb
daa
sahf
pop
test
das
mov
jmp
stos
mov
jo
push
std
inc
dec
int
or
or
enter
cmc
pop
(bad)
in
imul
repz
mov
rcl
jae
xor
cmp
inc
fisttp
stos
cld
(bad)
fs
ds
xor
leave
mov
mov
leave
push
jbe
bound
jmp
or
mov
popa
pop
or
pop
fdivr
cwde
jns
cdq
rol
inc
add
and
xchg
pop
scas
fist
mov
adc
dec
das
sub
adc
stos
inc
jno
pop
push
clc
int
jbe
shr
movs
dec
and
sbb
mov
cmp
add
jnp
pop
or
pop
add
aas
adc
sbb
std
jae
xchg
or
lea
add
pop
jl
jecxz
dec
push
inc
ret
and
mov
loop
stos
repnz
dec
cmp
mov
int3
mov
inc
movs
pop
outs
jecxz
mov
push
xor
das
fisttp
stc
inc
jae
mov
jno
pop
or
push
push
lods
xlat
xchg
mov
fild
inc
int3
fmul
mov
movd
cwde
mov
sub
fbld
fwait
loope
jae
push
inc
inc
cwde
sbb
cmp
(bad)
(bad)
cs
xor
nop
or
ficom
cmp
and
or
fwait
jle
dec
(bad)
cmps
int
(bad)
enter
repnz
aaa
mov
xchg
add
pushf
pop
cmp
(bad)
dec
xlat
outs
xchg
mov
jb
div
out
rcr
dec
jg
dec
jne
inc
out
jmp
pop
sub
xchg
push
fdiv
dec
in
sub
addr16
xor
mov
repnz
cmp
frstor
xchg
out
out
dec
in
(bad)
push
push
sub
push
pop
pop
xor
mov
sbb
cmp
adc
pop
movs
push
or
les
cdq
adc
and
adc
dec
pusha
imul
aam
adc
ins
dec
mov
inc
jno
loop
js
mov
sub
inc
retf
xchg
or
mov
inc
push
push
inc
je
fstp
ins
sahf
into
les
xor
mov
or
pop
je
fld
div
out
sbb
ret
mov
push
jae
stos
mov
mov
aam
dec
fcom
nop
pop
cmp
aas
ins
dec
cmp
adc
ja
or
aam
scas
scas
push
mov
mov
push
dec
scas
(bad)
fsubr
loop
sub
mov
mov
retf
mov
mov
xor
mov
and
or
and
mov
jge
mov
jno
mov
xchg
pop
mov
pop
ret
(bad)
fimul
hlt
test
data16
adc
dec
and
or
scas
and
mov
in
mov
and
xchg
adc
fs
add
scas
mov
nop
pushf
daa
sub
adc
mov
dec
data16
xor
mov
in
shr
int
rol
or
jno
adc
loopne
mov
dec
push
test
in
xor
push
shl
ficom
outs
stc
jb
out
xchg
enter
inc
addr16
jo
ins
cmp
mov
loop
mov
movs
and
loop
aaa
dec
and
sbb
dec
jmp
push
scas
fmul
nop
inc
jp
mov
cmp
push
mov
sahf
pop
mov
push
mov
jg
xor
test
jbe
rcr
adc
cwde
mov
cmc
adc
dec
iret
mov
mov
push
cmovb
sbb
popa
call
jmp
cmps
mov
lea
adc
dec
loop
nop
out
nop
xchg
sbb
aas
mov
movs
sahf
mov
add
mov
xor
aaa
sbb
dec
outs
adc
inc
idiv
mov
adc
pop
inc
mov
xchg
sbb
adc
cmp
cmps
dec
mov
pop
ret
jnp
lods
test
dec
inc
fadd
mov
sub
inc
mov
mov
cli
or
dec
and
push
push
sahf
popa
dec
xchg
mov
xchg
call
push
inc
shl
dec
add
xchg
jmp
mov
push
push
sahf
jl
leave
fcomp
and
fwait
mov
nop
mov
mov
cwde
dec
retf
dec
dec
fisubr
sub
aam
iret
rcl
mov
mov
out
adc
pop
arpl
cs
mov
push
test
pop
add
dec
cmp
xor
mov
(bad)
xchg
enter
std
fwait
mov
popa
xlat
push
arpl
(bad)
mov
mov
cmps
dec
leave
dec
pop
add
xor
cmc
in
(bad)
adc
scas
mov
je
mov
cmc
pop
mov
ja
popf
(bad)
mov
test
add
stos
adc
jbe
mov
out
xchg
jo
into
aam
fs
repz
aaa
lock
mov
test
(bad)
cmp
fs
pusha
adc
cmc
call
xor
push
fild
sar
add
ret
scas
cli
movs
frstor
mov
xchg
mov
loop
mov
cmp
mov
repz
pop
iret
stos
dec
cmp
push
pop
loope
sub
fdiv
sar
cwde
pop
push
cmp
outs
sbb
mov
xor
xor
shl
inc
add
pop
inc
test
and
loopne
(bad)
rcr
mov
push
cmp
vcvtss2si
xor
mov
push
pop
and
bsr
sbb
xchg
sbb
fsub
jne
add
pop
popa
mov
push
dec
dec
pop
and
(bad)
push
sbb
adc
mov
adc
xor
add
and
lds
test
out
js
jmp
ret
popf
push
jmp
inc
dec
shr
scas
stos
and
sbb
shl
jnp
lea
test
mov
lods
sub
xchg
and
cmp
leave
push
mov
pop
sbb
cmc
out
aas
mov
adc
data16
jl
fcom
cmp
adc
ret
adc
clc
fisub
aaa
mov
cmp
jae
push
push
mov
ja
push
adc
pop
imul
cmp
mov
ret
jle
sti
outs
add
jmp
sahf
mov
leave
fistp
xchg
lds
nop
loopne
scas
cs
or
push
hlt
mov
cwde
addr16
cld
mov
aad
inc
(bad)
sub
pop
int
sub
mov
sbb
dec
cmp
scas
push
mov
and
shr
retf
std
xchg
xchg
and
outs
push
ss
and
inc
or
cmps
mov
push
int3
repnz
dec
jnp
inc
imul
in
sbb
sub
add
mov
mov
popf
mov
ins
inc
cmp
rcl
mul
mov
sahf
shl
add
out
fdivr
shr
test
pusha
das
push
push
out
int
mov
jecxz
(bad)
aam
xchg
retf
mov
(bad)
aam
sub
jae
jecxz
loopne
cmc
hlt
call
mov
je
retf
mov
std
outs
xor
lock
add
sub
push
pop
in
fisubr
push
(bad)
or
or
jmp
add
aas
imul
aaa
outs
xor
xor
inc
jmp
inc
mov
mov
add
cmp
(bad)
lods
mov
psrlq
shr
(bad)
aaa
push
cmp
sbb
push
cld
xor
scas
mov
cwde
das
lods
adc
sub
bound
xlat
sub
sub
adc
adc
push
imul
(bad)
ds
jb
add
adc
sub
es
add
add
out
int
sub
(bad)
in
jmp
ins
or
add
mov
adc
cmp
pop
cmc
add
sbb
mov
cmps
dec
fld
sub
int3
sbb
inc
push
push
sub
lock
mov
push
mov
and
jmp
ins
mov
sbb
imul
dec
adc
jns
and
es
sti
ror
les
ret
cdq
jge
stc
mov
jmp
test
sub
sbb
mov
pop
or
movs
ret
imul
loope
xchg
imul
mov
aam
lahf
popa
sub
fs
sbb
fild
cld
or
push
jb
iret
xchg
push
div
dec
sahf
push
in
cwde
outs
pop
push
push
or
inc
ror
dec
and
sub
das
push
sub
pop
aas
leave
dec
add
leave
sub
scas
push
ja
mov
pop
iret
in
sbb
mov
imul
cmps
inc
dec
ja
in
mov
adc
mov
ror
fcom
cmp
fsubr
test
and
(bad)
in
xor
in
std
mov
sti
mov
mov
cmp
imul
sbb
push
sub
stc
or
xchg
mov
xchg
and
pop
out
retf
cmp
fstp
dec
cli
mov
das
in
fbld
cs
(bad)
out
inc
inc
das
push
rcl
push
aaa
dec
jb
mov
test
mov
movs
call
inc
xchg
xor
or
lods
and
int
into
je
popa
mov
ret
test
ds
push
adc
mov
lods
cmps
mov
inc
adc
mov
mov
iret
(bad)
repz
xchg
xor
nop
dec
pop
out
mov
aam
or
je
call
push
movs
sti
pop
lock
cs
les
in
mov
push
repz
cld
(bad)
(bad)
ds
push
jge
clc
xchg
cmp
in
scas
adc
cmc
repnz
arpl
adc
add
and
sbb
sub
push
xchg
loope
xor
push
jp
jb
pop
sbb
xor
pushf
xor
and
pop
into
fisttp
push
and
jge
push
rcl
lods
(bad)
popf
jl
or
pop
sbb
lods
imul
nop
fwait
ins
rcl
inc
jmp
jno
jge
dec
sub
jle
adc
add
and
lock
sbb
inc
cmp
pop
lock
jmp
and
xchg
push
gs
adc
mov
jo
pop
push
lods
mov
inc
push
sub
int3
mov
xchg
sbb
mov
inc
out
lods
(bad)
aam
adc
ss
sub
mov
out
mov
ins
mov
mov
inc
iret
xor
(bad)
ins
cli
dec
lidtd
dec
adc
cmps
sbb
jmp
enter
mov
sbb
inc
test
push
cdq
inc
ret
jmp
js
fs
push
pop
push
mov
mov
test
inc
jecxz
ja
inc
clc
push
mov
adc
popf
adc
xchg
ror
pop
sub
pushf
inc
mov
loope
xchg
ds
in
out
xchg
mov
fisub
jg
mov
or
mov
sbb
les
push
and
jns
jge
mov
push
jnp
shl
fdivr
adc
(bad)
mov
fstp
loopne
or
aam
mov
cmp
pop
sbb
lock
cs
push
icebp
xchg
or
dec
pop
jle
daa
dec
retf
and
imul
xchg
fild
gs
jp
sbb
add
out
sub
xchg
mov
ss
mov
imul
adc
fcomp
xchg
btc
mov
xchg
cmp
pop
sub
add
pop
loop
jg
pop
inc
daa
jle
in
xor
xchg
into
jne
mov
push
mov
pusha
test
jno
dec
add
ja
pusha
xchg
push
mov
lahf
imul
retf
sbb
ret
ss
xchg
imul
aas
into
cmc
rcr
stc
loopne
push
sbb
mov
or
xchg
add
ret
ret
and
sbb
andnps
cmc
inc
mov
outs
sbb
pop
popf
xor
call
inc
popf
scas
popa
sub
aam
pusha
lods
mov
js
xlat
jmp
push
pop
xchg
out
xchg
dec
and
mov
xor
in
mov
cmp
aaa
pop
(bad)
cmp
or
mov
scas
xor
add
sub
(bad)
mov
or
dec
shl
pop
iret
shl
dec
push
and
add
push
sub
pushf
stc
sbb
div
clc
xchg
xor
or
inc
or
cmp
por
leave
ss
jo
mov
arpl
add
in
outs
enter
xchg
sbb
rol
icebp
sbb
in
loop
cmp
mov
xchg
sub
dec
(bad)
adc
sbb
lods
sub
add
aas
in
fisubr
aam
jp
jbe
js
adc
and
ins
ja
fimul
add
fstp
xlat
pop
jmp
stc
ss
pop
and
int
push
ins
sahf
es
fld
dec
mov
rol
add
imul
mov
push
ror
or
xor
sub
adc
adc
sahf
neg
aam
mov
xchg
mov
jmp
pop
mov
unpcklps
int3
cmp
aam
je
jl
movs
data16
fdiv
out
mov
lahf
mov
in
pop
and
fist
cli
dec
lods
push
imul
mov
pop
sbb
ds
je
rcl
outs
ret
std
pop
fistp
retf
xchg
out
fsub
xchg
mov
pop
outs
(bad)
cwde
call
push
push
sbb
dec
xchg
xor
mov
jae
gs
inc
dec
lods
mov
sbb
scas
loop
fsub
lods
dec
ds
add
fdiv
push
jne
or
iret
mov
mov
cmp
out
sub
cli
stos
and
mov
(bad)
out
int
arpl
rol
adc
les
sbb
adc
shl
rcr
mov
xor
out
dec
adc
inc
jmp
push
xchg
lds
adc
sbb
dec
and
sahf
mov
jmp
xchg
xlat
mov
xlat
inc
xor
mov
ficom
ins
mov
mov
(bad)
in
jg
(bad)
mov
sub
call
and
xor
in
jle
test
add
(bad)
in
sbb
dec
popf
xchg
push
mov
shl
jbe
pusha
outs
retf
mov
js
sbb
fst
xor
xchg
pop
shr
int
mov
fbld
mov
or
rcl
bound
add
popa
pushf
jmp
or
es
xchg
retf
jle
and
hlt
fdivp
ret
push
cmp
loopne
rol
lds
(bad)
mov
bound
in
push
mov
or
inc
pop
dec
lods
je
mov
pop
inc
scas
(bad)
enter
mov
ror
pop
test
popa
xchg
push
mov
lock
out
ret
mov
test
pop
sqrtps
sub
mov
jge
movs
jbe
cmp
mov
jmp
add
das
sti
pop
pop
inc
je
sbb
add
pushfw
sbb
ror
not
push
and
adc
cmps
xchg
cwde
lds
(bad)
rcr
mov
sub
(bad)
or
push
scas
daa
add
push
das
inc
movs
jmp
jmp
sahf
in
push
lahf
jb
sub
mov
mov
enter
jno
sbb
inc
add
or
loope
fld
lock
rcr
or
pop
and
mov
outs
fidivr
fwait
mov
ja
or
add
sbb
xor
call
jo
cdq
cmp
iret
ret
push
sub
dec
xlat
mul
xor
dec
in
aam
inc
jns
push
call
sub
dec
mov
sbb
sub
sbb
fcmovnu
stc
jnp
jo
and
or
inc
xchg
pusha
ror
cwde
inc
and
inc
retf
jo
xor
xchg
add
mov
and
mov
fisubr
mov
mov
ins
lds
cmps
das
icebp
test
mov
pop
sbb
loop
test
hlt
shr
in
int3
pop
(bad)
popf
mov
inc
jp
push
(bad)
retf
(bad)
or
je
jne
jl
fsubr
out
inc
outs
dec
ins
(bad)
scas
xor
pop
bound
pop
mov
sahf
setl
jnp
loop
dec
shl
jno
push
mov
cld
mov
jno
push
shr
js
xor
pop
mov
imul
dec
ins
push
pusha
imul
fist
cmp
stos
add
xchg
in
jmp
arpl
sub
outs
cmp
cmp
or
sbb
dec
(bad)
addr16
enter
int
and
cmp
mov
mov
xor
or
dec
mov
rcr
cmps
sti
mov
sbb
lods
xor
arpl
call
and
cwde
icebp
gs
and
sub
mov
aam
mov
push
jns
jnp
enter
pop
jl
and
call
mov
cmps
or
xchg
dec
pop
add
or
lods
(bad)
xchg
jl
movs
in
out
sub
enter
mov
mov
inc
mov
jb
leave
sahf
das
and
fidiv
in
call
aad
and
dec
sahf
cmp
mov
(bad)
push
fidivr
(bad)
dec
icebp
cmp
xor
push
sahf
popf
inc
inc
jbe
and
xchg
sahf
jae
add
mov
pop
in
in
adc
sub
call
dec
mov
mov
add
xlat
jns
pop
or
inc
je
fimul
add
add
xor
and
icebp
xor
mov
pop
fdivr
outs
sbb
push
sar
mov
imul
fs
mov
fist
in
test
outs
cmps
data16
mov
sbb
stos
push
int
and
push
pushf
adc
push
jge
cdq
cmp
or
or
in
sbb
popa
repz
pop
pop
pop
pop
imul
ins
mov
mov
iret
dec
cmps
jne
jnp
xchg
push
inc
pop
les
xchg
xchg
mov
jmp
and
mov
cmp
and
pop
in
dec
xor
aad
xor
mov
push
mov
sbb
mov
repz
jno
cmp
lea
mov
(bad)
jg
xor
lea
or
xchg
nop
inc
frstor
es
or
cmp
cmp
xor
bound
cmp
inc
pop
lods
jb
adc
inc
enter
pop
inc
imul
call
adc
inc
mov
ret
mov
add
add
ss
adc
mov
cmc
xor
push
cmps
fcomp
adc
aam
xor
mov
clc
nop
adc
cmp
mul
push
cld
inc
mov
sbb
out
jno
lods
xchg
in
adc
cmp
jecxz
(bad)
and
jge
or
sbb
dec
mov
scas
test
loope
js
inc
arpl
dec
fstp
retf
sbb
mov
fld
mov
sub
lea
inc
dec
cmp
sub
popa
adc
sub
call
sub
sahf
(bad)
jmp
out
cmp
out
adc
cbw
xor
fwait
pushf
pop
mov
iret
out
sub
dec
sbb
movs
call
fprem1
test
fcomp
rcr
sbb
cmp
fs
iret
mov
and
(bad)
ins
xchg
xchg
cmp
sbb
fst
push
sub
jl
bound
push
cmp
sahf
cmp
jle
movs
ins
clc
shr
lea
jnp
sbb
cmp
mov
sar
mov
jbe
push
add
sub
xor
in
push
xchg
push
sub
cmp
mov
inc
jns
dec
cmp
sub
sbb
sti
das
inc
aas
mov
sbb
movs
push
xchg
js
inc
aad
fild
add
out
dec
jle
xchg
pop
push
rol
test
mov
clc
ror
sbb
add
in
xchg
fst
clc
leave
mov
jo
push
pop
test
aaa
cmp
mov
push
xor
xor
cmp
jns
push
lds
jb
ss
cmps
xor
shl
push
call
cld
popa
push
mov
test
mov
fs
inc
add
(bad)
push
push
(bad)
ror
imul
sbb
dec
push
and
pop
or
shr
out
cmp
mov
mov
push
xchg
xor
dec
(bad)
mov
adc
mov
ret
retf
xchg
adc
mov
jbe
leave
mov
stos
ror
cmps
inc
leave
aam
data16
jmp
lea
cmps
sub
mov
dec
or
add
mov
loope
fs
cmp
cmps
pushf
out
dec
sahf
movs
xchg
push
pushf
sbb
ins
fcom
outs
push
ficom
dec
cmp
inc
pop
out
add
bound
jno
out
or
or
cmp
in
inc
pop
scas
dec
retf
fdivp
ins
dec
dec
pop
(bad)
in
jle
mov
push
pushf
inc
mov
add
mov
fcmovb
aam
jae
sub
dec
daa
ins
sub
fistp
mov
xlat
inc
mov
add
mov
push
sbb
mov
pop
mov
add
ss
add
adc
ret
dec
pop
stc
pop
in
or
scas
add
pushf
cmp
push
xchg
call
or
cmc
push
xchg
mov
pusha
stc
xchg
cmps
loope
push
data16
mov
out
cs
mov
dec
sub
fcmovnbe
and
push
and
xor
cmp
xor
ss
adc
clc
out
jge
and
jnp
ins
stos
dec
inc
pop
jge
test
(bad)
cld
jg
push
rcl
addr16
imul
push
imul
setge
clc
cmp
jp
sbb
fisubr
fnsave
sbb
adc
call
fadd
in
mov
nop
test
pop
lea
ins
repnz
inc
cli
sub
cli
jp
fld
mov
add
(bad)
hlt
lahf
or
or
jb
mul
mov
push
sub
pushf
push
jno
cmps
push
push
sbb
push
dec
das
pop
dec
inc
jg
push
xchg
ins
pop
outs
fsubr
int3
jmp
mov
pop
mov
movs
jmp
push
mov
adc
nop
xchg
in
cmp
popf
pop
push
nop
and
test
out
shr
dec
mov
sbb
or
ins
aad
cdq
sahf
out
fild
or
xchg
and
add
push
push
sbb
or
jp
add
fmul
iret
fst
out
adc
push
sbb
mov
aas
push
loop
imul
pop
mov
scas
das
cwde
xchg
shl
shr
test
jno
fld
outs
cdq
push
jg
mov
or
or
pusha
xchg
cmp
fxch
or
cli
fidivr
add
fsub
pop
push
or
fbstp
or
inc
xor
or
inc
ret
xchg
dec
pushf
lods
mov
stos
xchg
pop
or
push
popf
push
pop
lock
lahf
dec
add
je
das
jns
adc
scas
fsubp
fistp
mov
and
scas
div
(bad)
fimul
daa
cmp
push
js
cld
loope
lods
fisubr
movs
div
sbb
movs
fdiv
jl
repnz
int
mov
test
ja
inc
sub
repnz
sbb
pop
cs
inc
or
repz
dec
pop
add
pop
in
push
inc
xchg
and
pusha
aaa
jbe
std
rcl
adc
sub
aas
mov
retf
lods
repnz
jge
xchg
jnp
xor
ror
lods
inc
mov
add
and
maxps
icebp
aas
fucomip
test
inc
enter
mov
jl
mov
test
and
mov
add
mov
push
(bad)
jbe
outs
push
addr16
ret
imul
cdq
push
jecxz
inc
daa
pop
push
out
shr
fs
mov
inc
fs
cmc
or
in
xor
mov
sbb
adc
shr
sahf
stos
cmps
ins
pop
cmp
sub
lods
pop
xlat
cmps
inc
xor
sbb
lods
cmps
cmove
mov
loopne
add
inc
fs
int3
shr
ror
mov
(bad)
pop
test
imul
mov
push
jle
inc
push
ret
es
fimul
mov
out
test
in
(bad)
mov
ret
adc
and
imul
lds
sub
sbb
xor
in
add
pop
add
and
or
mov
mov
adc
mov
pop
inc
shr
mov
or
call
cmps
test
jecxz
ja
aaa
lods
xchg
test
inc
jp
sub
ss
lea
cmc
call
out
lock
or
ins
cmp
sub
jmp
push
fnstsw
adc
je
jg
inc
dec
movs
outs
popa
mov
mov
outs
jle
adc
push
push
push
pop
retf
mov
js
out
adc
fs
push
shl
jnp
xchg
int
cdq
lods
inc
or
std
in
cmp
rol
or
pop
xchg
push
leave
mov
ins
fdiv
pusha
iret
jne
mov
sbb
inc
repnz
ret
(bad)
jmp
cmps
sub
inc
xchg
popf
out
mov
cmp
inc
mov
and
push
outs
push
pushf
sahf
xchg
je
into
xor
retf
je
fdiv
fild
mov
ret
mov
inc
pusha
jnp
div
pushf
push
mov
fisub
adc
push
sbb
not
pop
test
repnz
pop
jae
mov
mov
push
mov
fist
lds
dec
dec
mov
add
ret
sub
sub
xor
movs
sub
mov
cmp
xor
sar
rcl
pop
fwait
cmp
sbb
and
xor
pop
in
mov
gs
mov
add
adc
in
add
scas
xchg
jg
out
das
pop
jno
sub
sbb
mov
out
nop
outs
push
pop
jp
and
mov
push
lods
sub
pop
and
aas
push
call
loopne
daa
inc
adc
mov
aaa
add
jmp
sbb
xchg
out
(bad)
cmp
pop
sub
push
ss
push
mov
sub
push
popa
(bad)
pop
int
xlat
outs
or
in
out
loope
icebp
adc
stc
xchg
xchg
cli
loopne
sbb
js
dec
clc
add
mov
aas
addr16
sahf
fisttp
sbb
jnp
inc
push
mov
sbb
push
iret
push
cld
dec
inc
or
xor
rcr
mov
mov
dec
arpl
inc
xor
jne
xchg
(bad)
dec
mov
xchg
lahf
dec
jnp
rcl
cs
cmp
xor
(bad)
mov
shr
push
and
repz
xor
jne
xor
add
xor
dec
inc
outs
cld
int
imul
shl
test
(bad)
mov
sub
lahf
xor
pusha
mov
inc
mov
inc
cmp
inc
xchg
mov
sub
mov
call
lahf
ja
int3
add
popf
push
xchg
pop
jge
dec
rol
inc
cmp
pop
mov
xchg
out
in
clc
mov
jl
bnd
cli
cwde
cli
pop
pop
jns
idiv
xor
sub
icebp
je
mov
shr
mov
pop
lahf
push
call
lds
aas
retf
cmp
ret
out
cmps
or
jl
lods
stc
retf
push
ins
dec
dec
jle
jg
jl
stc
xchg
push
mov
aas
mov
(bad)
xchg
inc
cmp
setbe
jo
cmps
dec
aaa
jle
and
dec
add
xchg
sub
fwait
jbe
rcl
mov
pop
ins
mov
outs
or
or
jnp
jg
popf
pop
aad
cdq
jle
mov
retf
(bad)
popa
aam
lds
ja
movs
dec
retf
cmp
cld
dec
jmp
sbb
cmp
test
arpl
and
cmp
aaa
inc
mov
bound
mov
jb
pop
imul
push
dec
nop
mov
aaa
mov
sbb
inc
jae
jle
sahf
or
std
mov
sub
jne
add
mov
(bad)
sahf
ds
push
fadd
loop
ret
cmp
sbb
push
fisttp
or
xchg
pop
dec
xor
imul
push
ret
das
cmc
loope
xor
fimul
push
lods
cmps
fcom
push
xor
cmp
sahf
stos
xor
lds
or
jne
fld
pop
push
fsub
call
test
ins
sar
cmp
jb
dec
xlat
dec
sub
std
std
stos
dec
push
fld
aaa
sbb
dec
jmp
call
cmp
ret
imul
sbb
mov
(bad)
mov
stos
fcmovb
xchg
add
iret
lods
push
mov
(bad)
mov
bound
in
lds
pop
jle
lods
push
cmp
jae
adc
jo
test
lods
in
sbb
cmp
rcr
inc
stos
popa
cs
dec
outs
rol
dec
push
mov
fs
ss
stc
dec
pop
xlat
cmc
dec
mov
mov
mov
mov
pop
rol
cs
out
mov
sbb
cmps
sub
mov
pop
(bad)
adc
jns
push
push
adc
jbe
and
and
pop
jmp
inc
stc
in
cmp
sbb
imul
mov
js
and
je
push
add
add
retf
inc
sub
sbb
cdq
or
out
mov
inc
imul
fcmovbe
ret
sub
nop
adc
sbb
or
dec
scas
fisubr
and
mov
fdiv
outs
push
imul
dec
add
sbb
or
dec
xchg
test
mov
xor
adc
add
cmps
cwde
xor
jo
xor
mov
popf
aas
shr
inc
jae
ds
in
adc
jle
ins
add
and
movs
aaa
inc
loope
mov
fistp
mov
dec
cwde
popf
cmp
lods
cmp
rcr
jge
and
cs
cmps
sbb
and
adc
(bad)
jmp
pop
stc
fiadd
or
push
pop
xor
sahf
pop
gs
mov
jae
shl
movs
sahf
mov
xchg
adc
pop
sub
sub
js
add
mov
jo
pop
mov
test
call
push
aaa
xor
xor
pusha
lods
sub
rcr
cmc
mov
pop
cld
repz
int3
sub
jnp
fwait
lahf
xchg
test
dec
add
fsub
cld
jae
outs
mov
(bad)
jecxz
stos
je
or
push
push
shl
ret
inc
sub
lahf
and
dec
cmp
(bad)
pop
ficom
push
(bad)
mov
push
jmp
cmp
mov
or
xor
push
repnz
mov
push
pusha
es
sahf
retf
ds
fisttp
mov
push
pop
call
jg
dec
call
aas
adc
ins
or
retf
pop
push
ret
cmp
out
and
movs
rcl
mov
inc
dec
(bad)
dec
sbb
loope
sub
hlt
dec
icebp
xor
and
(bad)
mov
add
xchg
dec
sub
jbe
and
or
(bad)
mov
mov
call
jno
and
sub
arpl
xor
cmp
ret
inc
push
jl
daa
xchg
je
push
test
jge
xor
mov
sub
jle
bound
dec
dec
jmp
pop
test
(bad)
ss
data16
ret
fst
jno
cmps
and
dec
ret
inc
pop
xor
loop
div
inc
lds
mov
lahf
inc
or
call
xor
adc
ds
cmps
lea
xchg
repnz
xchg
dec
xchg
cmp
xlat
add
outs
clc
mov
xor
cwde
fsub
adc
or
and
xchg
or
mov
adc
shl
ins
cmc
inc
inc
jne
mov
add
loope
pop
pop
or
sub
pusha
pop
aaa
cwde
mov
push
xchg
cmp
sbb
xchg
retf
dec
xchg
jmp
mov
rcr
(bad)
xchg
or
dec
or
loope
jne
inc
or
movs
and
mov
xor
adc
push
mov
or
fwait
push
or
ja
sub
ja
sub
mov
imul
or
cmp
stos
fsub
movs
jmp
or
sbb
push
dec
mov
shr
dec
jbe
pop
test
rol
push
dec
cli
repnz
pushf
sub
(bad)
cmp
popa
sahf
jae
sti
and
les
and
outs
pop
sub
cmps
std
xor
mov
add
clc
pop
out
jbe
hlt
mov
push
adc
pop
or
xchg
mov
xlat
imul
sub
arpl
mov
out
js
imul
sub
xor
loop
sahf
jge
jmp
xchg
(bad)
jle
sub
shl
inc
addr16
dec
cmc
repnz
popa
push
lods
in
div
sbb
cdq
xlat
add
push
mov
loopne
cld
test
and
ins
dec
jo
mov
push
mov
imul
(bad)
call
sbb
das
mov
dec
(bad)
xlat
mov
movs
cdq
stc
sub
scas
js
pop
mov
jle
pop
or
mov
bound
push
xor
inc
inc
sbb
ret
mov
or
leave
out
test
pusha
cli
jns
add
lds
repnz
dec
jp
mov
add
stos
pop
ret
jecxz
mov
imul
mov
xchg
xor
pop
shl
push
mov
mov
pop
sub
imul
imul
loop
push
gs
inc
xor
mov
jb
int
xor
fsub
fdiv
ja
xchg
xchg
or
test
cmps
dec
jle
inc
(bad)
rol
xchg
mov
mov
std
jecxz
retf
fsub
cmp
int3
or
jb
xor
aaa
lods
mov
jne
aad
shl
pop
scas
(bad)
mov
ins
aas
push
push
pop
ds
dec
dec
std
dec
inc
xchg
loope
and
movs
js
nop
inc
retf
iret
adc
lods
push
jbe
movs
jge
pop
outs
inc
push
(bad)
call
lods
lock
iret
mov
pop
jge
cmp
push
adc
push
dec
rcl
adc
adc
ds
cdq
adc
mov
xlat
and
rcl
das
dec
jmp
jmp
and
xor
xchg
popf
jb
mov
or
pop
cwde
push
push
sbb
mov
stos
(bad)
mov
xor
(bad)
dec
into
les
cmp
adc
xchg
lock
leave
in
jns
or
add
lods
outs
add
mov
jae
and
and
int
retf
xor
fdiv
mov
aaa
xchg
fwait
push
and
add
ret
jge
(bad)
shl
int
jle
push
ss
cmp
aaa
mov
arpl
icebp
pushf
push
pop
test
and
imul
sub
jbe
xor
sub
pop
or
mov
xchg
pop
jl
mov
xchg
sub
sbb
jl
test
(bad)
jbe
or
inc
sub
je
xchg
sub
sar
stos
aam
cmps
les
(bad)
iret
(bad)
cmp
imul
xchg
aaa
or
sub
mov
sub
jbe
sub
mov
push
jl
mov
add
and
aaa
int
adc
mov
into
ins
fistp
push
aaa
mov
dec
inc
in
adc
xchg
pop
lahf
fsub
test
sub
daa
outs
xlat
xchg
or
sahf
hlt
cmp
cwde
iret
add
cdq
mov
outs
cmps
sbb
sub
dec
bound
mov
movs
out
or
mov
es
pop
(bad)
js
fwait
cmc
lods
sub
pop
shl
repnz
pop
jmp
adc
jl
xor
test
lahf
push
gs
jb
test
mov
jae
dec
fdivr
pop
test
pop
or
mov
mov
push
mov
(bad)
sbb
push
and
mov
cs
cmp
test
or
clc
popa
ret
cmp
pop
mov
or
enter
(bad)
dec
in
je
cli
xchg
aad
mov
out
push
push
ins
(bad)
out
cmp
xchg
sbb
mov
xchg
rcl
and
movs
daa
add
outs
pop
daa
shr
cmp
inc
add
fist
nop
or
fs
jbe
dec
into
dec
jnp
xchg
in
mov
mov
push
sti
ret
clc
push
in
pop
jg
adc
add
sar
jae
mov
push
cmps
fs
test
lock
pop
ja
ret
aad
aaa
sahf
jmp
retf
cmp
lods
sub
mov
pushf
call
jmp
call
sub
pusha
jecxz
add
test
xor
xor
icebp
jnp
mov
ret
shl
dec
add
dec
mov
das
jno
repz
and
out
push
hlt
add
xlat
jb
cli
pop
sbb
xchg
shr
cmp
imul
ja
not
push
lds
bound
xchg
add
and
les
pop
fld
mov
retf
jne
jecxz
or
cmc
jle
ror
dec
cmc
popa
nop
jne
lock
mov
ficom
lods
adc
and
mov
mov
mov
data16
aas
rcr
xchg
mov
repnz
mov
dec
dec
imul
or
out
jp
std
mov
cmp
mov
cli
cwde
pop
cmp
mov
inc
daa
outs
mov
repnz
popf
and
jno
mov
sub
sbb
(bad)
stos
mov
add
hlt
lock
repnz
sub
cwde
mov
and
test
pop
ja
or
push
pop
ins
sub
or
(bad)
jns
or
push
hlt
lods
jo
(bad)
pop
lods
dec
pop
mov
inc
movs
(bad)
xlat
(bad)
xchg
xlat
cmp
cld
int
and
inc
jmp
mov
push
ss
xor
cmc
or
(bad)
in
lahf
retf
or
mov
popa
jbe
dec
cmps
push
pushf
dec
mov
pop
lahf
cmp
or
mov
dec
ins
call
pop
ins
test
dec
neg
lahf
pop
jmp
cmc
pushf
inc
ss
loope
xor
in
test
mov
aas
(bad)
push
in
sbb
imul
add
pop
ror
fidivr
sbb
arpl
imul
fwait
cmps
popa
(bad)
cwde
pop
or
in
out
cmp
fcmovnu
pop
fucomip
sub
sub
sub
fild
xlat
push
push
mov
imul
adc
loopne
out
adc
mov
xchg
and
in
rcr
popa
outs
loopne
adc
mov
mov
mov
mov
cmp
cmp
adc
xchg
pop
fimul
ins
xor
pushf
bound
test
outs
fisubr
js
push
mov
fisub
inc
daa
and
mov
dec
or
cmps
xor
inc
and
xchg
lods
aam
sub
scas
mov
scas
cdq
loopne
popa
push
xchg
mov
jmp
xor
xor
jb
adc
add
pop
xor
mov
push
ret
dec
xor
in
(bad)
pop
nop
dec
mov
sbb
test
movs
pop
das
cmp
add
hlt
mov
in
pop
pop
and
adc
sub
lds
sar
into
fisttp
mov
addr16
jmp
jbe
or
push
bound
in
push
aaa
mov
mov
shl
add
int
shr
cmc
mov
pop
xchg
out
imul
addr16
lock
push
xchg
xor
jmp
das
cs
outs
cld
adc
dec
mov
imul
rcl
xor
cmp
add
cmc
shl
rcr
or
aas
rol
gs
push
mov
leave
(bad)
mov
in
clc
ins
dec
adc
js
adc
xchg
bound
sbb
and
add
jmp
ja
jmp
retf
imul
retf
push
and
mov
mov
jmp
imul
bnd
xor
mov
mov
jb
dec
xchg
loope
jno
and
fild
das
xor
int3
in
jecxz
or
jne
adc
cmp
xor
xor
fbld
lock
cmps
jle
cmps
sahf
mov
mov
push
mov
popf
xchg
push
outs
jle
mov
sbb
mov
inc
dec
and
out
push
inc
mov
pop
scas
dec
jae
cmps
not
rol
xor
cmp
push
cmp
pushf
add
aaa
retf
retf
mov
push
mov
cdq
cmps
push
mov
movs
xchg
fisttp
popa
popa
mov
xchg
push
push
dec
ds
in
and
fcomi
js
jecxz
add
int3
sahf
push
aaa
out
adc
call
int3
movs
sbb
xchg
xchg
rcr
mov
btr
jl
dec
arpl
sar
lea
enter
inc
retf
and
cdq
dec
inc
adc
mov
mov
inc
jo
cdq
mov
or
xchg
xor
or
imul
call
ja
fwait
mov
adc
std
xor
sbb
cli
cmp
repz
mov
cmp
mov
push
mov
rol
xchg
or
mov
lock
movs
mov
inc
enter
pop
xchg
mov
mov
sbb
arpl
add
sub
loop
lahf
inc
add
in
retf
daa
xor
or
mov
repnz
jb
xor
fistp
les
add
push
mov
push
into
xchg
ror
jae
mov
or
ins
popf
sbb
bound
inc
icebp
lock
test
jne
repnz
in
pop
cmp
pop
fsubr
xor
nop
or
outs
cmp
inc
xchg
or
sub
cld
loope
pop
mov
dec
mov
(bad)
jp
jge
jle
inc
shl
test
adc
call
lds
mov
pop
lock
sub
test
push
or
push
and
stos
call
mov
js
xchg
out
dec
test
fist
shr
rcr
(bad)
stos
test
sbb
add
stos
sbb
cdq
or
mov
push
sub
and
rcl
xchg
retf
xor
into
mov
in
add
cmp
add
lods
retf
mov
mov
aad
mov
out
push
mov
js
rcl
loop
loop
adc
and
lock
(bad)
cs
ja
xchg
stos
pop
test
add
das
pop
stos
xchg
push
sub
imul
mov
pop
pusha
scas
sbb
mov
add
push
cmp
dec
les
imul
leave
int
push
and
js
inc
push
xor
cwde
add
adc
sar
not
scas
mov
or
xor
das
out
ins
jae
mov
pop
cmps
les
jbe
add
jae
inc
cld
mov
fwait
leave
lahf
mov
push
sbb
es
cmp
push
push
xor
mov
add
stos
xchg
mov
hlt
xchg
mov
cli
ficomp
cmp
pop
mov
push
popa
icebp
call
lahf
push
outs
imul
mov
adc
mov
mov
js
xchg
jae
xchg
cmp
ja
sub
(bad)
jmp
ds
fnstenv
lock
cmps
in
pop
cmp
fdiv
jecxz
and
mov
in
dec
mov
jmp
test
pushf
add
inc
mov
retf
data16
xor
add
test
and
jmp
mov
or
push
scas
mov
in
pop
int3
pop
aas
out
in
lods
mov
imul
movs
loope
sbb
jmp
clc
retf
shr
xchg
aaa
retf
fidiv
xchg
and
cli
xchg
sbb
bound
fstp
scas
pop
ffreep
cmps
pop
popa
scas
and
cmp
xor
pop
mov
jbe
stc
into
xchg
lods
test
jno
push
or
add
(bad)
or
cmp
or
pop
sub
stos
loop
sub
mov
xchg
test
jle
inc
repnz
and
sbb
xchg
sbb
retf
or
movs
mov
sbb
xor
xchg
cmp
out
mov
add
push
mov
popa
rcl
into
call
imul
dec
(bad)
repz
mov
adc
fucomip
fwait
mov
data16
pop
xlat
rol
jbe
jns
xchg
fisub
arpl
test
inc
je
xchg
mov
push
movs
cmp
hlt
sub
lods
retf
lock
mov
cmps
enter
mov
mov
loop
test
adc
(bad)
jae
(bad)
rep
aas
mov
dec
jmp
aas
jmp
dec
les
inc
daa
inc
scas
mov
aas
rol
pop
sbb
in
fistp
add
mov
out
push
sbb
ds
lds
pop
ds
sbb
out
ja
or
xor
mov
cli
in
push
fwait
aam
cli
mov
jg
push
cmp
cmp
push
sar
cmps
xchg
mov
ins
aaa
add
lahf
push
push
imul
mov
ret
xor
ror
pop
xchg
push
call
mov
jns
pop
jge
dec
xor
and
neg
(bad)
ror
xchg
pop
(bad)
(bad)
fsub
scas
cmp
dec
idiv
push
in
inc
mov
pop
je
mov
pop
pop
push
jns
int
sub
(bad)
fiadd
fidivr
js
mov
leave
in
test
pop
daa
jb
out
xchg
adc
add
push
pop
xrelease
adc
fs
out
sub
icebp
in
fs
push
adc
test
(bad)
out
out
xor
fs
pop
push
fmul
frstor
scas
ret
cs
adc
add
fdiv
sti
inc
push
jns
jbe
jmp
mov
js
das
sar
adc
sub
xchg
sub
stos
cmps
stos
rol
mov
int3
dec
sbb
push
pusha
push
push
sbb
fisubr
jle
std
inc
das
fnsave
xchg
in
dec
mov
adc
xor
outs
(bad)
add
inc
call
xor
cmp
pop
icebp
adc
outs
not
in
pop
popf
bound
popa
in
mov
aaa
sti
mov
mov
shl
xor
(bad)
xor
dec
retf
mov
scas
inc
cmps
xor
mov
int
jb
cmp
inc
jecxz
stos
xor
pop
jmp
pusha
fbstp
cmc
fisubr
leave
sbb
daa
and
jle
popf
mov
and
out
popf
pushf
sahf
loopne
stos
into
rol
lock
or
lods
mov
mul
out
pusha
add
mov
jno
rol
mov
sbb
dec
sub
mov
test
cmp
dec
daa
(bad)
dec
ins
mov
push
(bad)
mov
out
xchg
sbb
test
into
hlt
push
push
xchg
pop
jg
stos
mov
enter
mov
mov
sub
(bad)
pop
cmc
jge
add
push
mov
test
mov
jg
(bad)
(bad)
cmp
dec
sahf
or
out
jae
and
js
xchg
push
ror
add
mov
adc
jo
jl
iret
mov
pop
clc
mov
stos
jns
lods
xor
cmp
inc
mov
cmp
fwait
jo
pop
jmp
(bad)
fist
hlt
addr16
or
mov
(bad)
loope
inc
pop
aad
add
sbb
mov
add
clc
ins
pop
in
push
(bad)
cmp
mov
mov
jmp
int
inc
sti
mov
jae
jle
jle
sar
sahf
cli
out
ins
lea
int
inc
enter
sub
xor
inc
push
outs
push
push
std
pop
add
fwait
clc
popa
aas
jge
sub
inc
int3
clc
in
xchg
jnp
mov
jo
fdivr
mov
sub
cmp
mov
xor
cmc
and
fist
dec
xor
mov
cmp
scas
mov
je
push
or
je
xor
xchg
mov
lock
popa
or
sbb
ins
clc
stos
out
pop
adc
jmp
cwde
cmp
push
and
mov
sub
pop
jmp
aam
cmps
rol
fcmovb
mov
xchg
shl
xchg
and
das
adc
dec
leave
push
data16
es
xchg
test
movs
stos
(bad)
(bad)
xor
sub
pop
and
cmp
ja
outs
mov
push
cmp
mov
xlat
pusha
xchg
cmp
add
into
sar
out
out
cmovle
mov
aam
ret
cmp
sub
(bad)
lock
stc
mov
(bad)
fild
or
stos
or
adc
jbe
or
cmp
push
jp
cwde
gs
(bad)
out
(bad)
mov
jo
add
es
jmp
push
enter
sub
ror
adc
cdq
daa
leave
xchg
sbb
out
in
push
push
out
daa
push
ret
icebp
pop
pop
mov
arpl
xchg
add
pop
repnz
cld
rcl
xor
pop
or
cmp
or
pop
push
adc
mov
add
push
dec
or
fsubr
and
bnd
loopne
sbb
imul
rcr
popf
stos
fwait
or
jns
out
jae
cmp
mov
cmc
(bad)
xchg
inc
xchg
add
push
jbe
add
or
pop
push
nop
jecxz
ja
retf
leave
cmp
pop
scas
fiadd
mov
push
aaa
int
int
add
punpcklwd
and
mov
jo
pop
cmp
cmp
jge
ja
test
(bad)
aad
jle
inc
repz
or
es
cmp
inc
mov
lock
mov
xchg
cli
ds
retf
dec
push
(bad)
pop
fild
or
mov
inc
or
test
(bad)
push
fs
mov
pop
and
test
add
cs
sbb
shr
mov
xlat
daa
jno
cli
pop
or
jns
das
hlt
and
add
xor
pop
mov
arpl
into
xor
mov
test
fwait
sub
xor
fbld
add
mov
mov
pop
in
dec
inc
retf
xchg
mov
xchg
test
or
pushf
(bad)
pushf
mov
push
ins
std
xchg
std
lods
dec
out
in
dec
out
inc
sti
xlat
jbe
dec
push
mov
and
es
rcr
mov
scas
mov
out
movs
dec
mov
push
and
xor
or
pushf
mov
mov
fucompp
fstp
std
xor
jo
ret
lock
std
outs
pop
sbb
jbe
std
outs
add
test
xchg
mov
cmp
outs
push
loope
xchg
sbb
dec
mov
push
inc
arpl
out
xchg
clc
cmps
xor
enter
cdq
xchg
adc
mov
dec
dec
push
sub
out
mov
ret
inc
sub
(bad)
sub
adc
imul
push
cmps
jge
push
dec
add
push
add
and
je
sub
add
dec
lock
mov
clc
sbb
xor
pop
adc
dec
add
bnd
das
shl
fsincos
mov
aam
gs
pop
adc
mov
lods
cwde
dec
loopne
jbe
push
dec
jnp
cmp
imul
xchg
mov
pop
(bad)
outs
stc
retf
push
ror
pop
sbb
cmp
pop
jbe
ss
push
pop
lds
stos
gs
fsubr
loope
test
xabort
inc
dec
fld
pusha
mov
test
mov
jae
mov
and
pop
jmp
aam
xchg
or
inc
outs
mov
push
(bad)
fisub
not
imul
sbb
sub
out
fwait
ds
dec
or
sub
mov
test
ror
aas
and
mov
sahf
and
xor
and
stc
je
sub
sbb
jnp
xchg
and
pop
add
shr
mov
pop
or
aad
je
pop
or
enter
or
cli
add
test
jp
xchg
(bad)
inc
retf
retf
xchg
mov
clc
pop
xchg
dec
inc
mov
aaa
nop
rcr
loope
pop
pop
mov
xchg
lock
cmp
jg
pop
ret
ror
pop
mov
cs
das
int3
repnz
lods
div
pusha
cld
sbb
imul
or
add
pop
jb
pop
stos
or
inc
mov
jp
inc
aam
inc
xor
ret
cmp
jecxz
outs
cmp
out
jbe
sub
pop
jmp
fidiv
sub
xchg
fidiv
push
outs
mov
inc
pop
dec
lods
push
arpl
loop
retf
out
imul
push
xor
in
lods
in
retf
jne
stc
addr16
sar
bound
pusha
fsub
and
scas
js
lea
pop
fcom
and
pop
xchg
call
ret
data16
adc
add
(bad)
out
cmp
aad
push
mov
cmp
out
ins
sti
adc
out
xchg
fsubr
jmp
jge
and
out
sbb
ins
iret
out
dec
stc
sub
add
cwde
mov
dec
pushf
adc
jb
sbb
jl
(bad)
push
xchg
xchg
push
inc
mov
addr16
sbb
addr16
xor
imul
sbb
(bad)
movs
add
xlat
mov
hlt
mov
pop
dec
(bad)
stc
int3
mov
add
xchg
add
mov
mov
sub
out
push
loope
mov
lahf
sub
jbe
or
push
push
push
idiv
pop
cmp
add
push
icebp
bound
pop
push
xor
fist
(bad)
aam
test
push
pop
xor
int
pop
(bad)
mov
mov
jae
xchg
popa
inc
icebp
xchg
mov
cmp
out
pop
mov
cli
call
inc
outs
cmp
xor
je
add
dec
mov
xchg
clc
in
or
mov
cmp
outs
push
gs
movs
inc
stc
xchg
shl
pushf
popf
scas
lods
add
idiv
mov
test
popa
popa
scas
cmp
xchg
cld
jo
retf
popf
test
jbe
or
icebp
push
nop
adc
shl
ins
jae
xor
in
addr16
jbe
pop
(bad)
jl
inc
jge
hlt
cli
out
sub
cwde
retf
mov
cdq
adc
lea
pop
int3
repz
lods
cmp
cmp
add
cmp
or
lods
ja
inc
mov
mov
and
mov
aam
loop
push
repnz
popa
mov
in
data16
fwait
in
rol
push
push
mov
sub
das
cmps
and
jbe
sbb
out
pop
(bad)
adc
xor
test
stos
cmp
push
push
es
js
fldcw
push
shr
call
mov
xchg
add
sub
hlt
loopne
inc
retf
retf
jmp
hlt
sbb
add
jnp
sbb
xchg
xlat
cmp
(bad)
rol
mov
mov
ret
mov
outs
(bad)
xor
aaa
mov
and
pop
mov
inc
mov
(bad)
bound
pop
cld
cmp
xor
or
adc
call
cld
inc
clc
dec
scas
mov
xchg
fimul
adc
or
retf
sti
mov
sub
lea
add
arpl
xchg
adc
(bad)
pusha
xor
sbb
adc
loopne
pop
ds
inc
repnz
and
add
mov
dec
jae
imul
call
sub
push
push
push
push
scas
out
or
loopne
jo
mov
mov
sub
mov
ins
test
sahf
cmp
xchg
je
outs
pop
mov
out
sbb
jne
repz
shr
and
cmp
fldcw
mov
stc
inc
add
mov
jne
(bad)
xchg
push
rcr
pop
inc
call
retf
fnstsw
xchg
(bad)
jbe
jecxz
xor
out
xchg
clc
cmps
push
das
sub
jmp
ror
inc
xor
nop
loope
sbb
jg
pop
popf
xchg
jcxz
mov
sbb
push
aaa
jmp
push
jae
imul
std
call
adc
(bad)
mov
mov
mov
cmp
jp
sub
jns
mov
push
(bad)
in
xchg
and
aas
inc
jp
mov
adc
ja
enter
or
pop
xor
(bad)
cmp
push
out
mov
sbb
cdq
cmp
xor
adc
push
imul
jmp
int3
fdiv
mov
bound
cmc
and
xchg
pop
push
inc
add
mov
push
lock
out
pop
jns
mov
daa
sub
icebp
es
jbe
ss
inc
mov
xlat
push
jne
cmps
sub
dec
pop
sub
sub
push
int3
add
adc
xchg
and
retf
mov
and
inc
movs
push
lea
clc
hlt
lds
push
cld
sbb
xor
sub
jp
dec
adc
aam
popf
cmp
push
popf
test
push
inc
bound
add
es
push
cdq
and
sbb
(bad)
sub
dec
mov
rcr
jae
out
(bad)
repz
pop
or
mov
imul
pandn
pop
shl
mov
cmp
daa
loopne
mov
in
loope
mul
mov
xchg
dec
ss
sub
cmp
jnp
into
inc
mov
sub
adc
jge
pushf
inc
imul
fbld
scas
dec
ret
sub
add
jo
(bad)
lds
or
add
sbb
int3
fadd
div
ret
mov
push
or
xor
fwait
into
mov
jle
es
add
stos
adc
pop
sbb
int3
inc
dec
mov
test
imul
fisubr
or
push
aad
mov
or
js
scas
add
pusha
pop
ret
adc
rcr
je
inc
add
es
dec
in
jns
dec
cli
shl
fdiv
push
ds
pop
retf
adc
stos
pop
mov
mov
scas
fst
inc
out
and
cmp
add
leave
nop
(bad)
sbb
cld
xor
aaa
mov
xor
int
jb
dec
mov
mov
stos
loop
retf
mov
xchg
or
add
(bad)
cmps
inc
fnstsw
pusha
jl
jne
sar
shl
(bad)
gs
and
adc
push
xchg
xor
xchg
js
rol
sub
popf
dec
xor
push
das
and
loop
test
jp
outs
(bad)
mov
mov
hlt
push
push
fwait
xor
out
dec
cwde
(bad)
pop
sbb
jecxz
add
gs
out
jne
es
scas
mov
dec
pop
pop
fnstenv
pusha
in
fwait
arpl
rcr
pop
xchg
outs
inc
xchg
retf
add
aad
int3
rcr
std
push
inc
inc
and
out
sbb
inc
shl
mov
push
psrad
popf
lock
aam
js
retf
loop
out
jmp
jbe
jg
push
xchg
sbb
mov
xchg
sub
lock
cld
stos
das
jp
(bad)
sub
inc
jmp
inc
rcr
icebp
sub
cmp
lock
sbb
and
js
out
xchg
aas
test
cli
or
add
cmp
jp
jge
xor
add
lds
add
push
mov
cld
inc
sbb
mov
mov
mov
repnz
inc
push
and
and
fimul
inc
xor
pushf
xor
cmc
dec
dec
pop
shl
xchg
add
jnp
mov
fidivr
jmp
sbb
adc
ret
loope
add
xor
and
(bad)
cmc
aas
clc
ficomp
lods
lods
call
ins
in
cmp
xor
push
scas
push
jnp
inc
not
gs
retf
mov
and
ds
repnz
fwait
cdq
jo
mov
test
(bad)
mov
mov
enter
xchg
or
adc
stos
mov
sti
sub
mov
test
mov
fild
data16
push
out
cmp
xlat
xor
mov
fst
push
aaa
scas
xchg
movs
jmp
xchg
je
mov
aaa
xchg
mov
out
jl
arpl
inc
sbb
jl
daa
aas
xlat
push
(bad)
enter
sbb
adc
mov
push
push
inc
daa
mov
adc
mov
cmps
fstp
cmc
ins
and
hlt
dec
stos
out
out
xor
bound
dec
jmp
cmp
xchg
rcl
xlat
jnp
fs
cdq
mov
ss
shl
xchg
inc
test
jnp
sti
push
stc
jo
push
mov
in
call
ins
arpl
xor
or
ja
inc
jno
mov
imul
xor
bound
enter
mov
or
js
inc
cmp
jno
call
jge
rcr
jbe
out
fadd
cmp
repnz
mov
retf
push
je
jae
mov
pop
and
cmps
adc
in
jb
jmp
cmp
es
mov
lock
mov
sbb
je
pop
fsub
mov
adc
(bad)
and
pop
push
cmp
mov
(bad)
xchg
dec
out
loop
inc
pop
out
push
aaa
add
out
xor
jno
imul
cmp
ss
repnz
into
jecxz
adc
mov
sub
inc
xchg
rol
mov
leave
aaa
xor
push
std
jno
repz
fdivr
movs
ss
dec
arpl
inc
in
sar
fnstcw
daa
mul
sbb
pop
(bad)
lea
jns
or
dec
mov
je
cmp
(bad)
adc
or
outs
stos
(bad)
xchg
imul
iret
faddp
push
adc
cmp
loop
inc
push
mov
sbb
mov
sbb
adc
mov
cmps
jp
ror
repz
cmp
cld
push
ret
(bad)
shl
(bad)
nop
test
jno
test
sub
xor
push
push
test
test
push
retf
hlt
push
inc
leave
and
call
lock
pop
lock
adc
push
shr
in
inc
jge
mov
xchg
mov
repz
out
inc
in
adc
push
push
test
mov
dec
jb
push
aaa
ss
test
adc
sbb
cmp
div
rcl
sub
and
out
lods
not
repz
call
and
pusha
pop
push
ja
(bad)
fcomp
lds
data16
xchg
aaa
call
cli
mov
or
arpl
gs
not
xor
mov
arpl
and
sbb
push
push
add
mov
xchg
mov
jmp
and
aam
lods
push
mov
aaa
aam
and
xchg
mov
pop
xchg
fidivr
sub
and
or
adc
pop
jge
enter
dec
arpl
sub
rol
push
inc
das
mov
pop
mov
fsubr
or
xor
push
aas
call
call
pop
inc
cmps
jl
faddp
jge
or
popf
data16
or
ret
add
dec
sbb
call
xchg
or
arpl
mov
mov
xchg
lea
call
daa
pop
mov
or
lods
es
enterw
shr
jle
jmp
inc
sbb
hlt
inc
imul
retf
xchg
pop
push
xor
push
cmp
imul
icebp
int
mov
xchg
test
imul
and
cmp
sahf
ds
arpl
into
retf
or
cs
pop
push
repnz
or
push
pop
imul
xchg
mov
int
js
lahf
rcr
xchg
add
sub
inc
loope
fdivp
scas
xor
add
dec
add
scas
out
(bad)
popf
xchg
out
ror
push
cmp
imul
mov
sub
xor
pop
mov
mov
sbb
clc
inc
jecxz
fstp
pop
xor
movs
push
pop
(bad)
loope
(bad)
or
add
pop
sahf
pop
out
sub
jbe
lahf
in
pop
mov
outs
sbb
cli
rcl
sar
daa
cdq
adc
xchg
pop
mov
lahf
ss
jae
and
push
fs
or
sahf
les
pop
mov
ss
retf
mov
pop
scas
repnz
int
inc
push
adc
ja
retf
aad
in
cmps
popf
cmp
into
sti
jns
icebp
cmp
aas
mov
fs
mov
and
add
addr16
mov
scas
xchg
(bad)
les
sub
or
in
out
arpl
shl
mov
ffreep
clc
mov
fwait
push
lea
jbe
inc
inc
pop
inc
mov
outs
cmp
push
arpl
sub
int
cld
out
mov
sub
add
xchg
cli
push
sbb
icebp
pop
test
or
adc
fwait
popa
nop
push
pop
pop
inc
sub
int
push
push
(bad)
dec
popf
ror
in
sbb
stos
xchg
pusha
adc
jle
jmp
repnz
aad
jl
lds
imul
int
jl
jg
fs
xor
mov
xchg
xchg
or
adc
sahf
sahf
jns
mov
test
ss
cmc
pop
pop
je
bound
sbb
(bad)
mov
les
std
out
sub
adc
mov
out
push
repnz
mov
test
xchg
mov
aas
push
cmp
int3
or
mov
into
fisub
ins
and
xchg
adc
shr
iret
push
cmc
mov
mov
and
call
jle
popa
pop
mov
add
mov
test
pop
lea
xchg
div
sbb
cmp
icebp
mov
test
sbb
inc
inc
test
cld
push
or
imul
das
dec
mov
push
sub
loope
or
shl
jb
or
out
dec
fistp
std
inc
mov
cmps
jmp
in
xor
jae
pop
loop
out
push
push
pop
clc
(bad)
jle
test
iret
mov
jno
inc
jmp
nop
test
xchg
push
stos
mov
je
arpl
ret
aaa
(bad)
(bad)
sar
daa
in
xor
lock
jo
mov
jbe
(bad)
mov
fnstsw
and
ret
sub
jp
ins
xor
mov
inc
jmp
imul
(bad)
jbe
jecxz
jmp
xor
sub
iret
es
ins
loop
pusha
or
xchg
adc
test
adc
sbb
shl
adc
aaa
clc
in
pop
push
repz
inc
dec
xchg
aaa
fiadd
and
or
add
sbb
mov
jo
xchg
push
xchg
outs
xchg
mov
mov
mov
ret
in
loope
cmps
jge
lods
sub
sub
out
(bad)
pop
scas
and
pop
jno
fwait
pop
xchg
and
mov
mov
mov
enter
mov
pop
hlt
mov
mov
movs
lock
jmp
and
das
or
(bad)
and
xor
ret
outs
adc
lahf
sahf
or
push
mov
pop
pop
sbb
adc
pop
(bad)
div
enter
shl
mov
mov
movs
loop
in
cld
or
stos
sbb
sub
rol
mov
or
adc
mov
inc
repnz
mov
mov
dec
mov
cmc
lods
push
scas
push
pop
and
and
hlt
ja
xchg
mov
stos
icebp
xor
std
retf
loopne
test
mov
sahf
sahf
inc
jbe
lds
movs
mov
call
outs
clc
xchg
icebp
adc
lea
data16
aad
js
pop
int3
nop
test
xchg
add
pop
mov
jmp
adc
adc
loopne
popf
add
and
scas
stos
sub
outs
inc
mov
dec
(bad)
push
push
lods
sti
leave
adc
dec
adc
stc
mov
neg
retf
shr
inc
ins
(bad)
aam
jmp
jmp
pushf
ror
sub
js
mov
test
rcr
jae
leave
cmp
mov
mov
loope
fstp
iret
stc
xor
mov
pop
jo
xchg
out
out
mov
sub
imul
dec
push
nop
in
and
inc
clc
mov
mov
xlat
mov
sub
pop
ficom
mov
adc
aam
shl
and
stos
fiadd
add
mov
jg
arpl
push
push
mov
or
mov
dec
sar
ds
xchg
mov
shl
in
cmp
add
xor
out
shl
call
add
mov
mov
add
shl
adc
xor
aaa
stos
mov
cwde
test
mov
cmp
leave
clc
xor
mov
daa
dec
addr16
dec
xor
cdq
add
or
imul
xor
mov
in
sbb
aad
icebp
test
aam
mov
pop
adc
push
cmp
lds
idiv
jno
fwait
jle
movs
or
pop
data16
add
stos
dec
mov
sub
add
js
jae
sub
xchg
jbe
mov
sbb
pop
test
ins
dec
jmp
jge
mov
bound
pop
ror
push
gs
jmp
cs
jl
cmp
out
fnstsw
fcom
retf
gs
in
outs
rol
pop
or
jns
dec
mov
outs
(bad)
rep
retf
pusha
jmp
not
mov
loopne
(bad)
mov
jp
nop
dec
jmp
pop
push
loopne
mov
xor
xchg
loop
cmp
shl
or
sar
imul
ins
lea
das
jmp
jmp
loope
std
add
sahf
pop
mov
xchg
xor
pop
dec
ret
cmp
fs
add
push
pop
sbb
dec
ror
mov
inc
imul
jmp
jp
cli
(bad)
mov
mov
es
inc
into
in
movs
push
or
and
jge
pop
(bad)
jbe
mov
fsubr
dec
and
nop
jbe
push
inc
cmc
mov
pop
and
add
xchg
lea
inc
sub
pop
pop
shl
sti
cmp
jae
mov
gs
mov
fst
mov
inc
ins
popf
jecxz
leave
inc
out
xchg
xor
dec
mov
ds
inc
push
vcvtsd2ss
fmul
and
scas
call
xchg
scas
xchg
xor
or
mov
sub
dec
int
lahf
in
sub
shl
inc
mov
cmc
push
in
mov
in
popa
sbb
adc
sub
adc
mov
mov
pop
and
cld
dec
scas
adc
jmp
or
mov
ficom
push
fild
ret
mov
and
or
(bad)
in
jnp
xor
jle
pop
push
sbb
sbb
push
in
pusha
cmp
inc
mov
lock
push
repnz
mov
mov
sub
sbb
pop
lock
dec
pushf
pop
mov
and
jp
in
push
imul
outs
ror
scas
xchg
(bad)
or
pop
xor
cmc
pop
xlat
sbb
test
js
or
dec
pop
pop
sbb
sub
mov
jb
ret
jb
pop
in
fst
ins
xchg
inc
jecxz
pop
pop
xchg
add
shl
xlat
push
in
(bad)
call
add
pusha
sub
add
sub
retf
fwait
inc
or
inc
add
mov
jle
mov
jnp
cs
cmps
xchg
das
into
pop
pop
stos
push
popa
or
sti
fcomp
(bad)
or
lea
add
xchg
jmp
mov
jmp
xchg
and
xor
pop
xchg
call
mov
push
jge
lods
cmps
(bad)
inc
(bad)
into
nop
pop
add
int3
push
mov
xor
movs
ret
test
inc
iret
test
cdq
fwait
mov
mov
sub
aad
jnp
bound
stos
dec
ss
in
cmp
rcl
pop
and
mov
ret
mov
out
mov
and
adc
adc
mov
aam
and
retf
pop
xor
shl
mov
(bad)
aad
lods
xor
xor
aam
xchg
xchg
add
mov
cld
aaa
jnp
lahf
sub
bound
mov
mov
or
push
ret
mov
cdq
sbb
inc
mov
(bad)
push
pop
stos
lea
xchg
inc
test
cmps
sub
and
fcom
outs
in
and
mov
or
mov
and
scas
addr16
pop
sbb
pusha
add
jb
in
add
xchg
mov
and
xchg
and
sar
sbb
scas
lods
cmp
sbb
fwait
retf
les
sbb
pop
add
lea
arpl
mov
pop
sbb
add
or
popf
and
jmp
inc
or
xchg
pushw
pop
icebp
cmp
xor
loopne
push
xor
mov
outs
xor
sbb
mov
loopne
test
int
sbb
sub
push
mov
imul
xchg
cwde
jnp
arpl
xchg
bound
repz
fwait
cmp
xor
rcl
sub
jmp
pop
pop
daa
push
cmp
cld
jg
icebp
sbb
call
adc
ins
jg
lods
mov
mov
js
sub
mov
mov
mov
sub
ret
aaa
jmp
leave
fdiv
mov
dec
out
test
or
jecxz
lods
out
int3
xchg
add
ror
inc
je
fstp
clc
push
ds
imul
popa
addr16
cmp
test
(bad)
jp
test
fild
mov
add
jne
in
scas
ins
mov
inc
ins
mov
xchg
ss
push
xchg
adc
test
mov
xchg
fidiv
or
adc
or
and
outs
imul
cmp
ret
jmp
sub
add
push
int
ja
cmp
test
xchg
cmp
fcomp
mov
test
test
jmp
ja
rcl
sbb
inc
pop
and
mov
movs
lea
xor
or
in
mov
sar
fbstp
sub
or
mov
ret
rol
sbb
imul
cmps
fs
loop
lahf
(bad)
shl
xchg
mov
push
ds
movs
pop
pop
adc
out
shr
js
or
add
sub
pop
mov
pop
(bad)
std
or
push
push
add
bound
sbb
mov
popa
push
sbb
leave
and
or
mov
cmp
push
cdq
adc
pop
xor
sbb
push
cmp
sar
ss
dec
mov
mov
pop
outs
aaa
dec
dec
mov
adc
inc
(bad)
in
mov
lahf
fcom
jle
cmp
and
add
sub
into
cmps
and
xchg
dec
imul
push
jmp
cmp
mov
(bad)
inc
xlat
jg
loope
xor
xor
cmp
push
in
sti
pop
mov
pop
sahf
sbb
or
aaa
(bad)
imul
sti
push
push
add
jecxz
push
je
mov
icebp
sub
inc
or
adc
int3
enter
clc
cld
mov
adc
adc
in
aas
scas
add
inc
aas
fild
data16
pop
jae
pop
mov
jne
sbb
shl
cmps
or
or
pop
bound
add
nop
out
adc
hlt
cs
cmc
mov
add
ins
movs
xlat
jl
pop
(bad)
jmp
test
inc
fs
data16
call
sub
std
mov
push
adc
mov
mov
ret
xor
imul
stos
inc
ins
jl
xlat
pop
cmps
ins
cdq
inc
pop
ret
pop
out
xlat
es
add
icebp
(bad)
cmp
pop
call
sub
je
cli
call
and
pop
dec
or
jbe
sbb
push
inc
gs
leave
cmp
cmp
lock
icebp
mov
mov
test
and
mov
sahf
test
ret
(bad)
nop
pop
ret
jb
mov
addr16
int3
popa
iret
pop
mov
popa
xchg
mov
(bad)
adc
mov
xor
xchg
stos
in
pop
and
stos
ja
js
mov
lock
add
stos
pop
jns
in
inc
aam
mov
xor
int3
mov
(bad)
dec
sub
pop
(bad)
push
inc
lods
mov
add
(bad)
daa
mov
inc
or
iret
ds
or
inc
adc
jl
inc
ja
xor
cwde
inc
stc
fisubr
(bad)
call
and
pop
aas
out
dec
mov
sub
(bad)
icebp
push
daa
icebp
leave
shl
jg
repnz
stos
jbe
inc
loopne
xchg
sahf
addr16
xor
or
js
pop
adc
repz
jmp
lock
lods
or
xor
xchg
into
sbb
icebp
adc
pop
mov
ins
xor
fadd
pop
dec
mov
xor
mov
mov
test
shl
rcr
mul
dec
icebp
mov
push
fcom
mov
sbb
leave
cld
jmp
mov
add
into
(bad)
sub
hlt
xor
push
cld
data16
cli
push
sbb
mov
jle
(bad)
in
(bad)
mov
or
pop
push
pop
and
mov
sbb
into
inc
push
sar
and
in
dec
int3
fsub
(bad)
leave
popa
into
cdq
aam
adc
add
mov
xchg
cli
loop
lock
neg
std
nop
dec
mov
loopne
add
lods
mov
loop
adc
test
mov
add
push
jo
int3
imul
push
lods
(bad)
call
dec
push
loopne
lods
xchg
scas
cmp
(bad)
push
mov
sbb
or
pop
sbb
cmps
shr
scas
lds
ret
test
hlt
into
out
pop
mov
mov
(bad)
mov
ss
cmp
push
sbb
xlat
xchg
mov
ret
retf
mov
fst
fwait
inc
cmp
inc
or
pop
enter
and
(bad)
int
leave
bound
lea
and
or
movs
push
idiv
in
ficom
arpl
xor
add
imul
mov
dec
mov
add
clc
ror
xchg
fmul
push
jns
ss
repnz
gs
pop
push
fcomp
adc
xchg
iret
jns
mov
imul
lahf
out
scas
(bad)
jns
sub
jne
and
ds
iret
mov
sub
popa
jns
xchg
scas
xor
fsub
sbb
mov
test
shr
pop
jmp
push
pop
push
shr
push
fild
in
cmps
or
into
jmp
dec
xor
adc
pop
mov
jge
shr
mov
push
mov
push
add
popa
jecxz
jbe
ja
adc
sbb
scas
in
movs
js
mov
js
xor
stc
leave
in
rol
imul
push
jnp
jbe
push
sbb
and
test
ins
ins
mov
ds
mov
(bad)
pop
iret
lds
cmp
jecxz
jno
add
xor
in
in
ret
lods
mov
out
neg
xor
jge
lea
daa
lahf
out
pop
xchg
mov
and
fstp
mov
iret
lods
push
push
jo
in
scas
dec
mov
dec
aaa
mov
and
mov
pop
and
popf
cmp
cwde
xchg
out
push
cld
jae
pop
daa
pop
jb
cmc
gs
mov
push
adc
mov
cmps
nop
cmp
pop
cmovs
push
push
mov
mov
test
es
ficomp
mov
fst
(bad)
jbe
sbb
sub
ret
sbb
pushw
dec
ror
push
jg
fst
or
(bad)
jp
mov
mov
call
jp
mov
jge
dec
stos
push
sbb
push
push
lahf
test
or
jl
mov
jle
inc
mov
(bad)
ja
fstp
sbb
jb
retf
fwait
sbb
mov
popf
fcmovnb
mov
jmp
popa
mov
xor
mov
pop
fs
cli
enter
(bad)
rcl
sbb
pop
xchg
fiadd
adc
out
push
sbb
xor
prefetch
adc
(bad)
mov
sub
div
fcom
popf
mov
ss
ret
fsubr
inc
push
pop
push
and
xchg
test
popf
inc
addr16
dec
cmps
adc
ins
sbb
push
jle
or
xchg
pop
or
movs
ret
dec
scas
sahf
dec
inc
gs
jo
mov
out
jecxz
sub
std
daa
xchg
xor
mov
ds
xor
mov
fcmovne
mov
mov
mov
mov
repz
repnz
fnstenv
cdq
ja
or
xor
cmc
popa
shl
fisttp
lds
sti
push
pop
adc
add
xlat
pop
les
sub
adc
nop
xchg
mov
sub
lahf
out
shr
pop
cmps
mov
mov
fs
xor
ret
fwait
in
sub
pop
aad
xor
in
inc
out
jg
mov
daa
cmp
leave
and
mov
out
mov
movs
in
jmp
shl
jo
mov
and
sub
jbe
ret
xchg
jae
dec
clc
inc
and
add
leave
dec
push
pushf
dec
push
fldcw
mov
arpl
ror
cmc
add
jl
inc
jl
int3
scas
lods
cmps
dec
into
mov
mov
adc
out
dec
div
inc
iret
mov
in
aas
sbb
(bad)
pop
enter
dec
arpl
(bad)
jne
xchg
jg
std
mov
scas
rol
lods
ss
mov
mov
mov
stc
jnp
adc
jbe
es
dec
mov
mov
xchg
(bad)
dec
dec
jmp
sub
mov
sbb
loop
ins
mov
jmp
push
or
and
in
imul
dec
js
std
jle
aam
inc
pushf
pushf
dec
clc
jae
stos
stos
outs
push
je
xchg
mov
cs
push
stos
mov
add
jmp
ins
jg
fdivr
adc
push
pop
mov
arpl
shl
sub
or
popa
jl
hlt
push
cdq
fdivr
pop
rcr
adc
jge
and
retf
xchg
or
mov
xor
fsub
(bad)
mov
and
push
cmp
gs
inc
cmp
cmp
cmp
xor
test
int
sbb
(bad)
or
fstp
pop
push
mov
add
adc
push
cmps
sbb
cwde
jno
test
enter
int3
sti
leave
stos
lods
imul
xor
test
adc
ds
popa
cli
jmp
iret
ret
mov
xchg
fdivr
icebp
adc
lea
(bad)
jns
repnz
out
fs
cmc
push
fstp
mov
ins
sbb
aad
adc
pusha
cmp
test
inc
push
pop
pop
mov
sub
sub
adc
pushf
jbe
psadbw
push
xchg
add
and
or
stos
ds
stc
sbb
ds
xor
mov
(bad)
xchg
cmp
add
out
mov
out
mov
nop
nop
adc
xlat
(bad)
stos
mov
movs
sahf
push
mov
push
pop
and
(bad)
movs
retf
retf
push
daa
inc
mov
mov
mov
xchg
call
cs
jb
pushf
ret
bound
adc
jo
in
cmps
dec
lahf
dec
shl
icebp
clc
mov
xlat
mov
sub
aad
aas
xchg
fldln2
mov
in
mov
ds
or
pop
push
icebp
add
mov
loop
jmp
mov
xchg
lock
xor
xor
adc
popf
jnp
(bad)
pop
fwait
test
stos
push
into
je
cmp
imul
adc
test
mov
not
mov
loopne
mov
ins
adc
(bad)
add
fisubr
call
add
cwde
clc
out
mov
push
and
pop
dec
fist
jb
mov
(bad)
fdiv
leave
xor
js
mov
adc
xchg
push
mov
pop
sub
jmp
pusha
mov
mov
pop
jp
(bad)
mov
sahf
iret
fadd
jbe
xchg
or
mov
mov
inc
lahf
ins
stos
and
mov
or
adc
dec
add
bound
adc
mov
sub
jno
mov
push
ds
stos
and
loopne
push
dec
sbb
mov
or
jge
fldenv
xchg
sub
test
xchg
popf
add
xor
push
inc
rcl
test
adc
mov
dec
(bad)
xor
cmp
jno
push
(bad)
sub
je
mov
adc
popf
mov
xlat
js
imul
adc
and
shl
jmp
loope
inc
or
sar
cwde
sub
(bad)
xor
jle
fidivr
cmp
movs
popf
leave
mov
jns
push
ret
popa
bound
sub
dec
xor
outs
aam
daa
push
stc
fidiv
sub
pop
push
xor
je
into
xchg
inc
das
repz
mov
in
jno
gs
mov
stos
jl
test
je
xchg
sub
adc
jmp
push
and
ins
std
and
xor
pop
fdiv
arpl
dec
mov
adc
iret
dec
sub
sbb
in
lds
call
inc
mov
sbb
sub
daa
mov
mov
sub
cli
cmp
or
add
mov
mov
test
jle
adc
mov
repnz
jmp
xchg
popf
popf
mov
imul
lock
je
sub
sti
cdq
bound
out
fwait
push
mov
icebp
sbb
retf
sbb
dec
leave
sahf
jge
sar
and
add
mov
mov
xor
ins
push
jg
test
inc
jle
iret
daa
sbb
mov
mov
div
lea
add
ss
int3
pop
es
ins
xchg
aaa
mov
mov
jmp
or
pop
je
pop
sub
(bad)
sti
call
popa
scas
xchg
inc
pop
not
pusha
lods
retf
cmp
out
dec
sbb
retf
xchg
and
lea
ror
xchg
fnstcw
rcl
aas
loope
movs
or
loopne
shl
shl
retf
dec
adc
mov
leave
xor
sbb
mov
fiadd
adc
cmps
push
enter
scas
icebp
in
xor
sbb
and
dec
sbb
push
push
xchg
push
out
pop
pop
mov
mov
mov
inc
retf
inc
mov
test
adc
jne
ins
shr
pop
out
xlat
out
xchg
popa
js
fmul
adc
sbb
mov
mov
ret
push
dec
cmp
test
sbb
ror
xchg
mov
aas
sbb
dec
dec
iret
jb
out
int
out
add
cmp
test
mov
pop
push
jge
adc
jp
aaa
movs
inc
out
push
mov
(bad)
jno
test
leave
inc
rol
xor
aaa
aad
pop
pop
int
pop
xor
imul
adc
fucomp
fcomip
popa
mov
aaa
adc
cwde
ja
xor
std
call
ss
clc
inc
xor
imul
xchg
jno
mov
cmps
jmp
into
cmp
push
sub
or
cmp
dec
fwait
outs
push
jo
out
jp
popa
pop
fnstenv
jmp
pop
stos
mov
inc
mov
adc
adc
pop
repnz
js
mov
call
jns
push
push
sbb
pop
xchg
sbb
cld
jp
stc
xchg
sar
aaa
les
test
imul
stos
mov
dec
out
pop
xor
lahf
push
xor
mov
mov
jmp
pusha
mov
lock
jmp
add
call
cmp
cld
push
popa
test
into
cwde
or
(bad)
sbb
in
sbb
movs
inc
or
pop
fldenv
in
addr16
in
imul
xor
xlat
and
out
jae
add
mov
int
mov
scas
adc
pop
sbb
out
add
mov
jl
or
adc
sub
ins
sbb
scas
ja
pop
xchg
cmps
scas
jne
sar
mov
pop
dec
mov
int3
xchg
push
pop
jmp
inc
mov
jecxz
sub
nop
cld
sbb
or
rcl
jge
sub
or
je
or
push
out
mov
push
inc
hlt
inc
cld
xchg
add
add
es
es
hlt
inc
sbb
outs
jmp
add
call
adc
je
cmp
ins
inc
ror
xchg
test
push
xchg
not
cmp
(bad)
fnstcw
lock
shl
mov
dec
rcr
lods
test
ins
stos
lods
cli
mov
and
(bad)
pusha
and
sbb
mov
push
inc
xchg
dec
and
pop
or
push
sahf
sub
xchg
sbb
dec
push
es
in
adc
jge
(bad)
xor
sbb
out
into
xchg
xor
inc
and
push
js
loopne
inc
adc
push
dec
test
les
jle
out
jmp
outs
dec
(bad)
fnstcw
sahf
popa
mov
loop
pop
sbb
xchg
push
loopne
jmp
dec
fs
movs
test
cmps
xor
mov
fnstenv
inc
aas
aas
fimul
repnz
addr16
sahf
mov
pop
add
iret
add
pop
add
mov
xor
xchg
cmp
inc
(bad)
ja
inc
pushw
or
jb
dec
jae
push
out
jg
ror
cmp
lds
sbb
shl
or
mov
sti
xchg
or
(bad)
cmps
lea
sub
xchg
jmp
push
(bad)
fwait
outs
xor
add
adc
in
leave
cmp
imul
(bad)
mov
adc
movs
popf
loopne
gs
js
rcr
push
cmps
inc
add
pop
ins
add
cmp
jl
retf
jmp
scas
inc
mov
movs
add
fdivr
cmp
jns
test
pop
or
adc
push
pop
sbb
movs
mov
adc
lock
enter
xchg
in
out
cmp
test
fwait
jg
sbb
fist
jbe
inc
cs
stos
(bad)
mov
(bad)
mov
sub
retf
data16
cdq
neg
pusha
call
shr
imul
mov
mov
movs
fwait
sbb
ret
lods
or
imul
or
xchg
push
ds
movs
je
sbb
shl
repz
fcmovnbe
loop
inc
sbb
mov
jnp
loop
push
xor
push
fld
lds
mov
pop
mov
add
test
mov
lods
pop
adc
les
std
push
in
mov
mov
mul
fwait
sbb
add
xchg
fld
pop
or
xor
push
pop
out
scas
repz
jbe
popf
sub
in
xor
inc
mov
test
cdq
sub
(bad)
jecxz
sbb
int3
jmp
cmc
cdq
inc
cvtps2pi
pushf
imul
fcmovne
movs
stc
cmp
call
test
retf
ss
jne
fcomp
adc
adc
mov
popf
(bad)
dec
cmp
sbb
shl
lock
or
xor
(bad)
xlat
movs
jle
loope
xor
inc
jge
push
or
mov
xor
mov
out
rcl
push
stos
push
dec
out
or
sbb
ja
outs
lock
(bad)
(bad)
addr16
push
rcl
ret
(bad)
aas
sbb
sbb
je
(bad)
in
(bad)
lahf
mov
mov
and
mov
cwde
xchg
mov
or
inc
cmps
pop
xor
pop
pop
xchg
mov
(bad)
sub
mov
outs
lds
mov
sub
popa
pushf
(bad)
xlat
jmp
inc
mov
pop
and
push
mov
xor
mov
cs
and
and
push
iret
sar
mov
or
mov
test
adc
fisttp
or
jo
clc
fidiv
jno
and
adc
adc
(bad)
pop
iret
lock
xor
repnz
and
fdivr
jne
jmp
int
cli
mov
jg
add
test
xlat
sbb
or
cmc
jae
int
xor
jl
faddp
call
stos
jne
pop
clc
clc
inc
pushf
add
cs
repz
ds
lods
retf
cmp
lods
mov
adc
out
rcr
neg
and
imul
fisttp
nop
mov
out
push
or
out
adc
sub
pop
adc
mul
out
imul
div
and
mov
or
xor
inc
add
lods
addr16
jno
sub
xchg
add
mov
adc
popa
(bad)
adc
inc
fild
jg
das
pmulhw
fldl2t
jno
add
pushf
sbb
dec
inc
lea
int3
nop
push
pop
sub
iret
fcom
outs
in
jl
cmp
stos
seto
xchg
mov
jbe
icebp
movs
pop
and
lods
sbb
popf
test
pop
imul
test
mov
bound
repz
cmp
add
cld
push
std
nop
jae
jl
(bad)
les
pop
ss
lods
mov
or
jl
inc
push
imul
xchg
(bad)
xchg
mov
fld
das
or
or
sub
(bad)
movs
test
fistp
mov
inc
lahf
outs
jecxz
rol
mov
imul
pop
pop
push
mov
ss
rol
push
lods
xor
mov
out
(bad)
rcl
inc
data16
xchg
fstp
dec
and
jmp
rcr
cmc
sti
out
(bad)
clc
rcr
pop
in
mov
adc
cmps
adc
mov
iret
sub
jno
jmp
xor
pop
icebp
xchg
loop
and
add
in
push
sahf
iret
mov
mov
mov
adc
xor
push
shl
xor
pop
push
pop
push
sub
mov
pushf
cdq
inc
add
xchg
adc
div
aad
sub
push
push
and
into
(bad)
jg
scas
add
les
dec
cmp
sub
in
inc
jge
repnz
fsub
daa
imul
arpl
cmp
fnstsw
(bad)
out
cli
lds
cmp
daa
inc
add
ins
loop
hlt
fwait
ret
sbb
xor
nop
pop
mov
jp
mov
add
sub
fimul
mov
or
test
cmp
(bad)
cwde
inc
test
or
stc
(bad)
outs
push
not
ins
dec
pop
movs
jae
push
popf
out
jecxz
call
dec
dec
lods
xor
jp
cmp
sbb
hlt
or
push
cmc
xor
in
push
inc
sbb
add
movs
rol
xor
add
mov
add
mov
mov
retf
dec
adc
mov
push
sub
mov
std
inc
pop
push
shl
jecxz
adc
leave
(bad)
outs
retf
adc
mov
ror
xor
pop
inc
pop
inc
jp
mov
jmp
dec
and
inc
scas
cmp
inc
xor
jmp
into
adc
pop
pop
push
jno
rcr
pop
xchg
sub
ss
xchg
pop
retf
inc
repnz
jge
mov
lods
xlat
in
retf
aad
or
bswap
jb
rcr
and
jmp
jb
mov
sub
mov
mov
jmp
mov
loop
dec
out
xchg
mov
ror
cmp
hlt
repnz
ds
(bad)
aad
pop
pushf
(bad)
mov
and
div
repnz
inc
jns
out
fwait
xchg
inc
hlt
pusha
and
ins
add
sub
dec
les
aam
push
data16
lea
ret
jo
pop
sbb
pop
cmp
or
fistp
out
cwde
dec
jp
xor
add
mov
sbb
ss
fs
dec
mov
add
rol
jp
stos
jge
xchg
sub
int3
and
ficomp
aad
add
movs
iret
or
movs
mov
out
idiv
xor
aas
adc
push
xor
mov
repnz
sti
outs
imul
mov
push
adc
int3
xchg
test
mov
mov
ret
xor
mov
int3
cmp
popa
adc
fiadd
fwait
mov
xor
pushf
sub
xor
sub
sti
mov
les
lea
nop
dec
popa
fadd
data16
mov
sbb
(bad)
mov
mov
aas
div
jecxz
push
adc
mov
or
xor
into
popa
pop
xchg
outs
lds
inc
inc
push
cli
add
fistp
or
xor
outs
mov
aas
mov
inc
inc
int3
ficom
inc
int3
sbb
add
jmp
rol
cmps
sbb
in
xchg
repz
add
push
mov
or
sti
lds
and
xchg
mov
je
and
push
loope
xor
test
fist
push
cmc
lock
push
xchg
(bad)
pushf
scas
ficomp
ror
sub
push
mov
xchg
pop
jmp
xchg
leave
inc
jbe
sbb
mov
pop
stos
jmp
call
mov
mov
jmp
mov
div
push
call
add
mov
iret
mov
push
repnz
mov
inc
sti
bound
pop
(bad)
aam
adc
hlt
push
add
adc
adc
push
cmps
ins
rol
bound
retf
sbb
cmp
cs
mov
dec
fmul
xor
scas
push
cmp
jns
lock
ret
es
xchg
hlt
fisubr
lahf
inc
cmp
stos
jl
movs
(bad)
inc
scas
les
mov
into
jnp
mov
jl
xor
gs
mov
retf
outs
mov
jge
mov
or
and
shr
push
lock
pop
(bad)
mov
mov
and
mov
cli
mov
sbb
inc
jbe
mov
fcom
jnp
fwait
icebp
rcr
fs
or
in
pop
xor
cmp
xchg
sbb
mov
pop
jmp
retf
pop
add
pop
adc
mov
xor
jg
mov
fdivrp
cmc
sbb
jne
shr
mov
pop
ss
es
sbb
mov
inc
mov
cdq
outs
aaa
(bad)
mov
(bad)
std
jecxz
ficomp
dec
fnstenv
enter
enter
out
xchg
sub
mov
add
sbb
sbb
icebp
dec
mov
jg
dec
lods
pusha
cwde
mov
mov
or
rol
xor
mov
pop
daa
push
aad
sub
enter
scas
aad
or
sbb
cmp
ror
scas
pusha
jg
xor
pop
jne
iret
mov
push
jmp
mov
stos
or
mov
cwde
xchg
push
dec
out
in
call
xchg
mov
xor
adc
xlat
push
pop
popa
fs
in
push
sbb
and
out
jbe
cmp
outs
mov
mov
pop
sbb
and
into
xor
mov
call
add
sar
in
iret
pop
pop
pop
(bad)
cmp
fldcw
jbe
add
fs
test
pop
or
mov
ds
push
dec
inc
pop
adc
daa
aam
sub
scas
js
push
mov
out
xor
addr16
test
add
jg
into
popf
mov
lds
lods
push
fistp
int3
mov
out
push
sub
mov
cmp
test
xchg
xlat
jb
dec
or
ret
add
dec
retf
xchg
pop
jae
push
sub
jp
popf
mov
pop
dec
fiadd
ret
xchg
or
cli
inc
arpl
xchg
adc
lods
outs
repnz
jge
imul
xor
jae
popf
sbb
pop
aaa
call
or
sbb
dec
mov
adc
imul
push
fldenv
fdiv
lock
sub
jae
aas
mov
scas
call
retf
popf
pop
mov
jmp
cld
mov
mov
pusha
push
(bad)
xchg
mov
xchg
mov
or
push
loopne
adc
adc
xor
adc
shl
dec
nop
sub
inc
(bad)
out
pop
sbb
adc
or
adc
scas
mov
inc
pop
push
inc
es
ja
ror
jecxz
xchg
jmp
add
or
pop
xchg
movs
(bad)
mov
and
cmp
les
lock
push
cs
loope
and
mov
fld
jb
pop
out
xchg
push
xlat
iret
lds
nop
dec
mov
sar
inc
adc
addr16
sbb
xlat
pop
shr
mov
test
out
and
(bad)
adc
ins
adc
imul
add
pushf
cld
ret
aas
pusha
arpl
cli
sub
pop
sub
out
mov
pop
retf
dec
adc
into
pop
cmp
call
pop
out
mov
hlt
mov
jne
pop
(bad)
call
cmps
clc
je
stos
hlt
mov
data16
add
push
call
pop
xor
jmp
loope
or
sbb
(bad)
imul
xlat
mov
push
lods
add
jbe
ss
icebp
shl
jmp
mov
test
retf
jb
push
sub
push
xlat
out
ss
and
scas
movs
je
ds
pop
test
and
jmp
xchg
sbb
sub
icebp
adc
fs
enter
hlt
pop
in
rol
retf
ret
inc
jo
fidivr
mov
push
(bad)
pop
(bad)
data16
jl
add
add
jp
push
popa
pusha
popa
sbb
jle
mov
sbb
pushf
arpl
stos
(bad)
cli
xor
jg
push
dec
push
dec
xor
push
imul
rcr
adc
popa
cmp
cld
out
loope
add
jo
adc
sbb
sub
and
(bad)
out
rcr
addr16
or
fimul
int3
mov
cmp
ret
or
cmp
cli
sar
sbb
mov
pavgb
pop
(bad)
jmp
jb
call
mov
mov
rcr
xchg
retf
jmp
sti
in
lahf
xor
or
cli
stos
enter
loopne
out
push
add
mov
adc
in
mov
cvtps2pd
and
test
sar
sbb
retf
sub
xchg
sbb
sbb
in
test
dec
or
mov
outs
scas
push
xchg
push
in
cli
hlt
aas
jnp
cs
call
outs
inc
lahf
ficomp
fsub
shr
jp
cmp
mov
out
stos
mov
adc
cwde
scas
jle
inc
cdq
or
sbb
rcl
test
outs
mov
aam
daa
add
fisubr
add
sahf
fbstp
ja
clc
push
rcr
shl
cmp
mov
test
(bad)
jbe
ret
dec
mov
jne
sbb
rcr
in
xchg
in
and
(bad)
rol
add
jge
mov
push
je
cs
xlat
cmp
mov
lods
push
inc
mov
cmp
and
(bad)
mov
cdq
in
iret
iret
scas
dec
inc
pop
loopne
inc
dec
dec
mov
fnsave
retf
out
ins
jecxz
not
dec
sub
ins
(bad)
pop
call
pop
fcomp
sbb
mov
movs
movs
mov
in
jle
hlt
cmps
(bad)
hlt
outs
in
push
push
cvtdq2ps
xor
jmp
push
dec
cs
mov
pop
aam
xchg
xchg
das
xchg
scas
in
sar
push
(bad)
in
sbb
mov
jge
jge
mov
imul
mov
in
mov
(bad)
dec
cmp
push
dec
dec
xlat
mov
adc
(bad)
or
icebp
add
test
call
arpl
xor
push
pushf
outs
call
xor
ss
cmp
push
xor
jnp
pop
jg
imul
and
mov
or
imul
(bad)
adc
or
test
mov
stos
adc
add
hlt
and
and
fstp
sub
sub
adc
push
add
add
psrld
cli
rol
ret
xchg
loopne
xchg
test
pop
stos
dec
mov
in
aas
fcomp
jge
push
jno
xor
mov
aaa
mov
dec
xor
jge
int
mov
movs
push
dec
sahf
push
hlt
dec
iret
cwde
mov
and
jge
dec
scas
add
push
dec
mov
sub
sub
dec
out
pushf
adc
jmp
dec
or
outs
dec
pop
and
xchg
push
rcl
and
cld
mov
xor
pop
jp
cmp
aad
xchg
inc
inc
pop
pop
xchg
ja
lds
scas
iret
out
ds
mov
int3
nop
retf
sub
ret
mul
pop
add
and
cmp
add
xchg
xchg
sbb
in
or
sub
(bad)
std
mov
int3
xor
loopne
cmp
xlat
gs
dec
imul
jmp
push
jns
or
mov
outs
xchg
push
mov
mov
push
or
and
xor
cld
mov
mov
inc
mov
rcl
and
iret
adc
dec
sbb
shr
jnp
jae
sub
pop
test
mov
adc
pop
mov
test
stc
stos
xchg
jecxz
xor
mov
dec
into
inc
cmp
gs
cmp
push
or
add
ror
gs
push
xchg
mov
scas
pop
test
jmp
cdq
dec
adc
ds
les
inc
test
mov
shl
fisub
retf
adc
fbstp
xlat
movs
sub
and
cmps
pusha
repnz
test
cmc
fs
test
jl
repz
mov
out
pop
jno
mov
jae
and
jns
rcl
xchg
jl
sahf
or
push
fucomp
or
push
div
daa
dec
adc
adc
push
js
adc
cli
ret
cmp
(bad)
aad
idiv
bound
test
add
pop
xchg
and
cld
fbld
mov
mov
pop
iret
std
jl
and
jp
sbb
add
mov
pop
ret
jno
jg
pushf
xor
jns
lods
xor
icebp
mov
outs
adc
inc
mov
stos
in
and
mov
sbb
sti
sub
ins
scas
sahf
pusha
or
xor
jne
lea
jmp
mov
fwait
jbe
fsub
add
dec
mov
inc
outs
sbb
add
adc
cmp
or
mov
in
test
jo
push
xor
jae
in
jns
outs
cmps
add
pop
outs
mov
adc
or
mov
cmp
or
loop
fst
cmp
jecxz
jne
jne
sbb
cdq
pushf
mov
fwait
(bad)
daa
xchg
and
inc
mov
nop
mov
shld
ds
xchg
adc
out
popf
fsubr
loope
mov
mov
mov
pop
mov
pushf
call
call
mov
dec
push
cmp
call
cwde
cmps
lea
mov
mov
data16
or
jp
(bad)
loopne
fs
popf
out
xchg
adc
adc
or
pushf
jecxz
push
adc
or
mov
stc
nop
push
mov
pop
in
push
or
in
pop
and
sbb
outs
dec
jp
jb
inc
xchg
or
jl
pop
icebp
stos
leave
das
leave
mov
pop
and
jl
cmp
add
hlt
add
fistp
loopne
push
inc
retf
ror
xchg
cmps
in
data16
push
xlat
ret
ja
outs
ja
clc
adc
inc
sub
jnp
cdq
sub
les
sar
pushf
mov
fcmovnu
jno
call
into
xor
adc
ins
dec
dec
dec
test
push
or
add
mov
cmp
(bad)
push
inc
lock
out
pop
outs
fucom
adc
aaa
inc
(bad)
clc
dec
push
(bad)
fmul
pushf
fsub
shl
stc
pop
sub
xor
inc
and
sbb
jg
dec
mov
mov
lods
outs
jge
out
enter
dec
push
sbb
xlat
das
shl
push
fwait
int
mov
dec
mov
xor
out
jecxz
sub
mov
out
stc
pop
call
add
mov
or
es
mov
add
xor
ficomp
inc
jmp
nop
and
mov
cmp
aam
mov
call
and
xchg
bound
push
xor
ss
sbb
sub
ss
cmp
dec
jb
pushf
mov
sub
lock
imul
or
or
nop
mov
add
fmul
inc
sub
jne
lds
push
lea
push
aas
mov
mov
add
push
retf
ucomiss
add
cmc
lock
es
sub
cli
cmp
cmp
pop
adc
mov
mov
fst
fs
pop
in
lods
out
in
ins
push
(bad)
scas
or
outs
xchg
pushf
cli
xor
repnz
out
jbe
inc
adc
iret
clc
pop
xor
loop
adc
pop
adc
stos
mov
dec
pop
or
rcl
push
xor
clc
xor
mov
cmps
int
xchg
sar
es
xor
(bad)
cli
jecxz
and
enter
cwde
mov
sub
sbb
inc
inc
inc
sar
xchg
xchg
mov
cmp
push
add
test
mov
pop
loop
mov
rcr
pop
add
pop
cwde
repnz
cmps
popf
jmp
test
cmp
add
xlat
cmc
movs
ss
fadd
sub
jg
sbb
and
fdiv
add
pop
or
aam
sbb
mov
push
push
(bad)
mov
sbb
jmp
movs
push
(bad)
shl
je
mov
pop
shl
ret
cdq
inc
dec
outs
jg
and
mov
fwait
sub
inc
mov
out
cmp
dec
scas
dec
jle
je
clc
mov
sbb
inc
dec
loope
fisub
rcr
int
mov
retf
adc
jge
lds
xor
or
enter
retf
cdq
test
jmp
lock
aas
xchg
nop
icebp
bnd
test
adc
sbb
and
push
test
ret
mov
movs
(bad)
das
jg
pop
cs
add
fldln2
cwde
js
enter
mov
and
jl
push
jne
sbb
lds
test
ds
mov
cs
popf
mov
lds
dec
scas
inc
ins
dec
rcr
sbb
ja
call
cmp
jecxz
popa
ss
and
or
sahf
mov
jmp
arpl
jecxz
scas
sbb
and
pop
imul
jecxz
inc
icebp
xor
mov
sbb
sub
push
shr
repnz
div
jns
test
dec
iret
cmp
sub
fwait
out
fisttp
xchg
cld
and
inc
stos
and
clc
xchg
test
std
push
sub
mov
mov
lods
movs
aaa
icebp
call
sar
not
icebp
sbb
and
arpl
imul
or
lock
pusha
xchg
adc
lods
test
xor
xchg
sbb
je
xchg
pop
sub
cli
inc
lock
(bad)
cmp
add
jmp
jl
or
dec
loope
test
arpl
call
sbb
inc
popf
mov
scas
and
mov
mov
and
add
push
add
mov
mov
shl
(bad)
sahf
lock
out
leave
mov
and
mov
pop
mov
ins
or
sar
cmp
sti
push
dec
int3
scas
mov
jmp
push
in
xor
jbe
add
arpl
dec
pop
fist
pop
addr16
mov
xlat
daa
mov
add
jmp
jmp
cmp
data16
jmp
sub
retf
push
(bad)
xchg
popf
movs
add
movs
iret
stos
rcr
lock
sub
push
xchg
or
ins
mov
adc
out
pop
popf
cwde
push
fild
ror
xor
jb
xchg
leave
leave
and
dec
aas
cmp
and
in
jle
sbb
pushf
inc
out
leave
sbb
mov
loop
push
jl
xchg
pop
or
loop
dec
pusha
or
iret
sbb
jne
fld
pop
loope
jecxz
or
hlt
imul
scas
xchg
mov
loop
sbb
sbb
mov
and
and
arpl
or
sub
cmps
push
jmp
or
xchg
(bad)
push
loopne
call
jge
pop
loop
mov
sbb
stos
mov
sbb
jno
scas
es
outs
or
mov
mov
mov
jo
dec
push
enter
or
cdq
mov
xor
into
add
push
test
stos
stos
mov
into
add
call
pop
rcl
mov
xchg
pop
add
adc
movs
push
adc
cs
xchg
lea
xchg
scas
push
xchg
(bad)
popa
or
enter
int
lds
aad
call
(bad)
sbb
or
jno
mov
jns
call
xchg
fnstcw
jecxz
sub
std
neg
inc
jo
fnstenv
mov
in
in
jmp
lods
adc
scas
sbb
leave
mov
mov
mov
(bad)
adc
ins
(bad)
mov
loop
or
jmp
and
xchg
fisub
push
mov
inc
loop
(bad)
dec
mov
add
imul
dec
or
movs
test
lahf
mov
shl
xlat
xchg
ret
jne
cdq
mov
push
sub
mov
xor
mov
in
mov
push
inc
add
nop
mov
pop
or
add
out
jecxz
pop
rcr
inc
ror
push
push
into
xchg
icebp
clc
push
push
push
mov
ja
lods
fsubr
retf
or
stc
pop
xor
jo
add
and
std
bnd
fstp
and
out
ja
mov
jge
pop
jl
(bad)
cli
nop
adc
push
xor
xor
adc
gs
and
test
cli
iret
cmps
jb
loope
leave
sub
ins
inc
cmp
add
jb
popf
adc
xchg
mov
and
and
jae
dec
cmps
out
add
xchg
fisub
sub
inc
enter
test
push
(bad)
aas
cdq
inc
js
sahf
xchg
xchg
out
push
es
(bad)
jns
nop
(bad)
in
je
je
iret
jp
dec
(bad)
mov
jl
das
push
and
xor
cld
fs
xor
aas
xor
inc
movs
inc
xchg
mov
in
mov
cmps
pop
mov
pop
mov
shl
(bad)
rcr
out
jg
mov
adc
les
loop
les
push
cmp
or
in
fidivr
xchg
jne
ficom
jp
cli
mov
jmp
push
into
and
xchg
mov
adc
loopne
movs
cmp
clc
lds
gs
repz
retf
xchg
xor
jmp
inc
sub
hlt
jg
push
xor
std
or
ret
ret
repnz
xor
xchg
and
xor
les
lods
fdivr
xchg
mov
sub
in
and
xchg
(bad)
dec
inc
xlat
add
inc
fidiv
mov
and
mov
jae
pop
sti
and
lahf
dec
cld
(bad)
pop
jb
fsub
test
js
xor
inc
test
pop
das
xchg
cli
pop
xor
loope
xor
sbb
stc
ret
push
inc
mov
mov
jmp
cmps
(bad)
and
mov
daa
mov
gs
inc
js
outs
aam
loope
pop
mov
push
push
jl
push
xor
neg
jo
fwait
jne
inc
and
mov
mov
scas
nop
mov
push
fdiv
mov
aad
stos
mov
mov
cmp
and
cs
jns
jmp
xor
out
mov
sbb
mov
std
mov
pop
in
sub
out
add
pop
scas
out
or
push
stos
mov
(bad)
std
inc
pushf
fidivr
cmpxchg
xchg
or
mov
mov
fmul
add
sbb
shr
sub
inc
xchg
aaa
icebp
cmp
repz
test
cld
pop
out
and
ins
(bad)
mov
xchg
repnz
jmp
pop
mov
or
stos
fimul
pop
push
lahf
sahf
test
test
or
jnp
popf
nop
or
leave
cmp
sub
adc
pop
aad
and
(bad)
and
test
xor
loop
adc
shl
repz
imul
call
push
mov
arpl
mov
mov
lods
cmp
cmp
jne
or
fucomp
daa
xchg
inc
pop
jmp
ja
cmp
push
jne
ins
cmp
scas
sub
sbb
scas
sbb
test
retf
dec
fisub
xor
in
cs
add
out
adc
inc
xchg
adc
jns
add
daa
mov
clc
mov
inc
dec
dec
in
loopne
mov
jg
fsubr
(bad)
sbb
mov
test
rol
xor
add
loop
jecxz
ret
imul
fdiv
dec
cld
movsx
call
(bad)
icebp
jne
sahf
mov
sbb
retf
inc
lods
test
scas
sbb
loopne
jecxz
cld
jmp
dec
jb
add
xadd
test
int3
ds
arpl
sbb
sub
stc
rol
(bad)
jne
into
call
inc
test
xchg
xlat
inc
xchg
dec
sahf
dec
mov
enter
(bad)
mov
sub
cwde
dec
add
int
push
mov
fsubr
popa
ficomp
sub
mov
mov
adc
das
jns
mov
das
and
dec
adc
sub
inc
pusha
adc
sbb
lods
and
xlat
arpl
push
test
adc
add
cmc
add
push
std
lds
jg
adc
sub
retf
sahf
mov
sub
inc
xchg
mov
add
outs
push
inc
rol
push
(bad)
into
push
mov
pop
bound
stos
in
add
fist
dec
cmp
mov
mov
sub
xor
loope
(bad)
mov
push
call
rcr
das
sub
mov
inc
adc
sbb
xlat
dec
idiv
mov
jecxz
pop
inc
adc
movs
adc
mov
dec
or
push
shl
inc
addr16
imul
cmp
loop
sub
cmp
loope
mov
adc
and
sbb
xor
lea
mov
mov
icebp
adc
out
out
xchg
dec
push
cmp
and
(bad)
in
push
mov
push
jb
out
cmp
sbb
xor
rol
jg
push
inc
sub
xor
cmp
pop
sub
(bad)
mov
jl
inc
push
cmp
scas
push
ins
push
jnp
xor
clc
sahf
jb
mov
rcr
add
repnz
int3
and
inc
sub
loopne
fst
jle
lea
and
or
popa
shl
mov
jb
movs
dec
(bad)
xor
imul
arpl
jb
sbb
js
cmp
push
clc
jecxz
imul
jge
jne
rcr
in
and
xchg
cmp
nop
lock
rcl
pop
sbb
pushf
dec
ja
test
sti
repz
outs
cli
cmps
cmp
mov
je
jne
fnsave
retf
aam
or
adc
pop
fisttp
loopne
mov
(bad)
call
div
mov
xchg
inc
inc
pop
scas
scas
cmp
fcmovnb
mov
add
mov
inc
inc
xchg
xchg
aam
pushf
in
outs
mov
leave
outs
outs
jno
add
ins
mov
repnz
xchg
mov
fadd
hlt
jle
mov
xor
push
cld
arpl
xor
mov
and
repz
popa
imul
jb
cli
retf
mov
cmc
push
sub
xor
and
ffreep
pop
pop
das
mov
imul
cmc
cmp
pop
adc
clc
cmp
stos
fwait
xchg
call
fisttp
in
das
mov
clc
xor
pop
sbb
dec
out
or
push
test
(bad)
xchg
adc
cmp
add
test
pop
stos
(bad)
sbb
jns
inc
lods
jl
xor
cmp
int
ja
(bad)
out
sub
sub
ret
shl
add
jae
push
push
jmp
add
and
jp
(bad)
mov
sbb
cs
add
inc
test
jge
js
sub
xor
in
sub
push
mov
cmp
jne
lods
sub
sti
add
out
test
fcom
or
push
push
(bad)
test
sti
pop
fs
daa
dec
mov
add
sub
mov
push
xchg
stos
enter
mov
jecxz
ret
sbb
xchg
inc
or
adc
mov
repnz
add
push
shl
push
cmc
add
pop
jle
cmps
in
pop
xor
jb
xchg
pop
cmp
scas
outs
repnz
cmp
inc
jae
push
(bad)
jmp
rcl
xchg
add
jne
xchg
ret
dec
rcr
ins
sbb
mov
push
jge
sub
mov
cmp
stos
sbb
jmp
bound
int
arpl
out
int
mov
gs
pop
jp
call
in
bound
popa
or
mov
adc
adc
retf
cdq
imul
xchg
push
sub
jp
push
popa
or
cmp
xor
pop
xor
add
enter
xchg
rol
or
pop
xor
mov
dec
ds
rcr
fsub
icebp
cmp
mov
in
call
sahf
xor
retf
sbb
lods
push
mov
xchg
mov
inc
movs
pop
sbb
push
ja
shr
push
or
aaa
data16
sub
jmp
mov
sbb
(bad)
dec
in
cli
out
push
sbb
or
xchg
ret
xchg
jb
lods
cmp
pop
inc
cmp
stc
jge
dec
pop
popf
mov
sar
cmp
mov
dec
jp
lods
jl
repnz
sbb
pop
mov
sbb
sbb
fs
not
inc
sub
mov
add
mov
adc
in
cmps
lock
(bad)
imul
popa
sub
retf
cmp
arpl
daa
das
dec
push
push
xor
out
adc
retf
mov
mov
sbb
neg
mov
dec
ds
ret
jne
or
fiadd
xlat
fstp
add
inc
retf
int3
xor
xor
sti
lock
cmp
out
push
dec
adc
ja
(bad)
je
mov
pop
xor
mov
inc
outs
xor
push
arpl
xor
jae
stos
lods
xchg
dec
ror
test
iret
repnz
stc
aaa
fcomi
mov
fwait
hlt
pop
dec
lods
mov
push
xchg
fnstsw
out
ror
movs
xchg
dec
fcom
loope
out
stos
retf
in
movs
xor
pop
push
push
mov
enter
jmp
sbb
(bad)
fndisi(8087
jbe
jne
jle
pop
or
pop
repz
mov
daa
dec
xor
or
mov
add
int
jg
mov
cmp
aaa
(bad)
mov
jmp
shr
inc
mov
into
les
aad
lds
cmps
xchg
dec
dec
add
push
jg
jmp
aam
(bad)
pop
test
or
mov
jmp
xchg
add
arpl
jae
aam
inc
push
pop
cld
call
ret
push
loope
test
add
sub
dec
cwde
or
xor
lods
cmp
outs
out
mov
stos
push
fwait
adc
adc
pop
jge
inc
jp
imul
or
ds
bound
push
loopne
adc
cmp
pop
xchg
sbb
pmullw
retf
(bad)
mov
and
sahf
jbe
fsubr
(bad)
out
and
or
cmp
and
mov
pop
popf
sbb
jecxz
test
(bad)
xor
movs
arpl
test
jl
(bad)
cmp
dec
cmp
adc
and
cmp
arpl
outs
pushf
cmps
jecxz
and
pop
push
cmp
(bad)
jmp
hlt
mov
aam
cld
sbb
repz
jmp
pushf
mov
jae
or
mov
scas
or
fisubr
sub
test
adc
adc
mov
and
test
cmps
retf
iret
cs
repz
xchg
popa
or
push
ja
sar
push
ret
dec
jmp
sti
and
ss
imul
jo
lea
in
(bad)
fidiv
aad
push
aam
and
dec
cli
or
cmp
inc
push
(bad)
xchg
outs
ret
lahf
xor
iret
icebp
pusha
mov
push
mov
fisubr
or
sbb
in
sbb
loope
lds
jno
out
pop
repnz
jmp
adc
lahf
pop
ss
pop
arpl
retf
cmp
sbb
push
and
cmp
xchg
sbb
sub
stc
int
lock
fsub
ins
sar
xlat
cdq
inc
and
mov
cmp
and
xchg
and
pop
mov
dec
jae
in
dec
iret
mov
inc
mov
mov
mov
inc
xor
mov
outs
(bad)
xor
and
xchg
mov
dec
xchg
int
xchg
dec
adc
movs
stos
dec
addr16
fadd
inc
mov
inc
je
xchg
adc
mov
cmp
mov
shl
sub
mov
xor
test
push
add
sar
call
add
push
sub
sub
inc
adc
push
leave
cmps
mov
mov
(bad)
cmp
fcomi
call
jbe
stc
and
cmc
lods
pop
sub
sbb
leave
sub
std
dec
js
add
mov
outs
nop
jp
or
mov
or
sahf
pop
inc
mov
jb
and
mov
sub
popa
xor
jp
sbb
inc
ret
dec
or
sti
jge
leave
pop
inc
push
jmp
fwait
push
(bad)
xlat
ret
es
int
pop
lods
fwait
movs
mov
sbb
mov
jbe
adc
cmp
fadd
push
add
sub
dec
es
lods
movs
retf
repz
idiv
push
cmp
adc
mov
jo
mov
mov
out
adc
sbb
repnz
push
dec
sbb
call
xchg
mov
jb
pop
adc
fucompp
add
ds
cmps
xlat
xchg
cdq
cmc
push
fwait
push
push
sub
mov
scas
add
jp
mov
pusha
nop
outs
jne
fadd
cmps
pop
jge
(bad)
es
mov
fwait
(bad)
int3
mov
out
loope
clc
sti
(bad)
icebp
xlat
mov
cmp
xor
sbb
push
mov
(bad)
out
outs
mov
repnz
jge
or
push
lds
jne
out
push
dec
fwait
dec
mov
and
adc
xor
inc
add
sbb
aaa
sbb
dec
xor
nop
in
sbb
ins
imul
sti
pop
xlat
js
icebp
in
jb
stos
call
ror
pushw
xchg
int3
gs
inc
(bad)
sti
add
and
hlt
and
jmp
cmp
push
or
pop
aas
or
push
mov
mov
daa
(bad)
xchg
adc
adc
sbb
sub
lock
(bad)
dec
test
lods
push
and
mov
mov
out
sub
inc
test
push
test
push
sbb
or
push
or
adc
(bad)
(bad)
mov
mov
xchg
inc
in
addr16
mov
outs
and
add
test
data16
(bad)
xor
jle
lods
imul
call
movs
dec
(bad)
out
mov
shr
dec
jg
call
lock
xchg
aam
cmp
xchg
jle
add
lods
ins
push
mov
test
stos
add
dec
or
int3
inc
xchg
fdivr
ja
cmp
xchg
push
(bad)
cmp
(bad)
pushf
inc
in
mov
ins
inc
pop
cmp
pop
pop
pop
sbb
inc
push
les
les
adc
xchg
pop
pop
and
imul
jmp
mov
adc
push
pop
xchg
xor
xlat
sahf
lds
xor
lahf
dec
repz
outs
nop
or
jns
cmp
adc
dec
xchg
pusha
clc
dec
mov
sub
or
in
jmp
ins
mov
imul
mov
jmp
jb
enter
popf
push
and
aam
mov
stos
mov
mov
sub
fldcw
sbb
mov
aam
mov
les
push
mov
sbb
jecxz
mov
test
int3
xor
mov
xchg
or
jle
jecxz
sbb
xchg
inc
fild
inc
mov
sub
enter
dec
dec
adc
ror
pusha
nop
mov
mov
push
cmp
cmp
out
fiadd
pusha
mov
sbb
movs
mov
inc
fdiv
inc
mov
push
mov
inc
js
inc
cmp
xchg
and
lods
sbb
call
ret
(bad)
test
xchg
adc
clc
shl
cmp
push
push
ins
push
pop
lock
ins
inc
push
pop
mov
mov
xchg
nop
and
mov
es
sub
push
int3
fst
cmp
sub
push
xor
dec
retf
or
xor
and
ffreep
push
jo
cmp
jmp
cmp
outs
cmps
outs
dec
ja
or
fisub
repnz
and
ds
xor
pop
and
jbe
inc
fild
les
pop
test
clc
jae
xor
inc
inc
cmp
enter
ins
and
jmp
mov
pop
mov
icebp
sar
xchg
sti
sbb
clc
mov
rcl
xchg
leave
scas
mov
out
(bad)
scas
clc
paddq
cs
inc
movs
popa
mov
mov
push
cmc
push
cmp
inc
ret
mov
fiadd
sbb
(bad)
xchg
mov
hlt
ss
or
imul
push
clc
fwait
into
or
mov
dec
inc
inc
dec
dec
dec
call
cmp
mov
idiv
push
lds
inc
add
popa
push
fist
stc
in
push
mov
adc
xor
pop
mov
ror
jmp
push
mov
add
stc
sbb
les
sub
sbb
repz
loope
inc
xchg
xor
xor
jno
cmps
push
or
mov
xchg
call
mov
fwait
jo
xchg
(bad)
outs
jns
out
imul
inc
lods
pop
rol
cmp
out
ficomp
hlt
fstp
nop
rcl
hlt
aaa
mov
sbb
les
push
fucom
enter
data16
int3
sub
dec
lea
loopne
(bad)
int3
out
or
outs
gs
test
pusha
dec
fbstp
mov
or
inc
ja
pop
push
lahf
aaa
jbe
pop
sbb
outs
retf
pop
fdiv
mov
lods
movs
gs
and
rcr
mov
inc
cdq
sub
ins
xchg
mov
sbb
loope
(bad)
inc
ds
xor
mov
out
pop
jmp
jo
sbb
and
add
mov
es
dec
push
mov
iret
add
std
into
movs
mov
rcl
cli
lahf
adc
mov
daa
jle
mov
sbb
fldcw
iret
movs
xchg
dec
out
cld
mov
outs
adc
nop
cli
(bad)
mov
add
(bad)
and
in
adc
ret
jo
dec
or
sub
pop
inc
and
call
repz
or
inc
mov
fwait
movs
stc
enter
xor
in
data16
pop
or
stos
jmp
mov
ins
pop
mul
fsub
das
cmp
mov
push
add
mov
push
popa
jg
ins
js
xchg
jmp
je
or
and
(bad)
(bad)
mov
and
jecxz
aas
loope
sbb
std
xchg
scas
ficom
push
es
mov
cdq
lahf
into
stos
mov
xlat
aad
jb
sub
fbld
hlt
jl
(bad)
adc
push
test
sub
cmp
sbb
imul
jno
inc
jmp
jge
ja
xor
daa
sbb
adc
jl
sub
sbb
cmps
ror
pop
je
imul
cmp
cdq
mov
mov
pop
jl
out
cdq
xchg
js
movs
imul
(bad)
out
add
pop
mov
jmp
test
in
retf
jne
popa
aad
jae
mov
push
cmp
pop
cmp
popf
xchg
ins
iret
test
scas
scas
arpl
push
inc
(bad)
popa
mov
xor
inc
dec
iret
and
call
nop
push
cmps
pop
push
(bad)
out
cmps
or
movs
js
inc
xchg
pop
iret
xchg
mov
jne
retf
dec
nop
and
jge
jns
aam
pop
mov
inc
push
ficomp
inc
(bad)
jno
adc
or
add
xchg
jnp
lahf
push
cmp
ret
mov
sub
dec
lahf
ja
jecxz
test
push
jns
sub
or
stos
leave
mov
mov
(bad)
ins
into
sub
xchg
dec
xchg
or
mov
stos
push
jge
adc
mov
jle
bound
clc
cwde
ror
imul
mov
ss
aad
adc
dec
dec
xchg
pop
cwde
call
enter
xchg
mov
push
leave
dec
or
lods
call
push
pop
fst
mov
jg
xchg
(bad)
arpl
rcl
and
and
xchg
sub
in
popa
xor
xchg
cmp
mov
jno
bound
sbb
(bad)
jae
add
enter
lahf
das
and
push
add
jns
pop
bswap
or
out
je
fs
rcl
icebp
xchg
pop
test
add
loop
cld
xor
fld
xchg
out
aam
int3
adc
push
adc
xlat
adc
fisub
mov
int3
push
(bad)
mov
xchg
inc
mov
(bad)
pop
outs
fldenv
fcomip
xchg
mov
jl
mov
jle
(bad)
push
and
mov
mov
cld
pop
push
sub
sub
sub
scas
retf
push
mov
sub
or
inc
cmps
int3
lods
stc
pop
rcl
fst
jmp
mov
jge
dec
rcr
cmps
outs
loopne
or
test
dec
jno
adc
sahf
add
jne
js
adc
jle
xchg
outs
pop
and
in
popa
mov
pop
xchg
(bad)
les
mov
or
or
adc
and
sub
(bad)
push
ret
ins
dec
in
rcr
leave
and
inc
dec
fcmovne
pop
ror
cmp
call
int
movs
sar
pop
or
inc
push
xchg
call
sub
xchg
cwde
mov
dec
mov
loopne
jmp
sub
repnz
aaa
loopne
cmps
inc
je
push
or
sub
in
jp
mov
icebp
shr
scas
retf
push
mov
jl
stos
sbb
pop
inc
gs
mov
mov
add
mov
and
inc
mov
cmp
pop
push
nop
jecxz
cld
mov
sub
mov
jecxz
cdq
add
leave
jmp
cmp
fist
mov
scas
fist
xor
stos
and
cmp
sbb
xchg
or
(bad)
out
xor
fwait
xor
scas
pushf
pop
dec
lds
sahf
outs
repz
lods
iret
sbb
xor
ss
jno
sbb
adc
push
sub
cmp
retf
add
pop
jno
sahf
es
prefetch
in
pop
rcr
pop
sar
pop
or
nop
fs
adc
and
dec
pop
sbb
add
sbb
mov
movs
iret
pop
jmp
pop
aad
shr
(bad)
aaa
or
fs
mov
fs
xchg
das
(bad)
aam
fucom
leave
or
sbb
lahf
imul
gs
dec
adc
addr16
sar
cld
loopne
ja
movs
repnz
test
sahf
bound
test
dec
push
dec
ror
mov
daa
fcmovnbe
bound
rcr
mov
shl
int
aaa
dec
jbe
mov
xor
fld
push
pusha
and
fidiv
jne
adc
enter
fdivr
jno
test
push
aas
pop
(bad)
cmc
pop
imul
adc
les
lock
pushf
mov
cmps
mov
lock
jecxz
and
push
xchg
cdq
xchg
sbb
xor
fisttp
shl
or
mov
jl
pop
adc
cmps
inc
push
test
add
xor
push
xchg
pop
sub
fsub
pushf
mov
arpl
inc
loopne
jmp
out
sar
aam
or
sub
pop
movs
sar
cmps
out
sub
lds
mov
js
xchg
ss
popa
imul
mov
(bad)
xchg
test
test
jns
addr16
xlat
clc
xchg
xchg
or
mov
jnp
daa
push
xchg
nop
(bad)
test
adc
dec
jg
shr
test
bound
retf
cmc
and
jp
sbb
div
sbb
add
push
repnz
fild
or
cmp
jecxz
fiadd
test
adc
add
xor
imul
jmp
loopne
add
pop
jg
das
jg
add
ja
xchg
adc
ins
fdivr
or
retf
cs
ficomp
pop
out
xor
imul
mov
pop
jns
loop
in
adc
jmp
leave
aas
pop
sti
retf
enter
out
xchg
lods
out
mov
repnz
sub
sub
clc
popf
and
mov
sub
es
xor
je
dec
push
out
div
fsub
or
(bad)
mov
push
lock
adc
mov
pop
int
xlat
call
pop
fiadd
mov
aaa
jmp
xchg
and
test
(bad)
aaa
cmp
rol
loopne
inc
int
inc
cmps
pop
rcl
push
addr16
test
add
jle
rcl
dec
repnz
dec
jo
and
shl
repz
mov
mov
dec
fadd
clc
mov
push
inc
add
jno
adc
repz
gs
pop
(bad)
mov
lock
test
sbb
dec
test
std
push
jp
scas
cmps
fucompp
mov
(bad)
xchg
cwde
push
sub
fldcw
inc
add
pusha
test
and
mov
jnp
push
js
or
mov
test
and
push
jg
xor
mov
hlt
adc
dec
fs
in
jo
xor
mov
xlat
repz
outs
loop
lods
dec
fldcw
mov
sub
cdq
sahf
data16
ret
mov
aas
enter
loop
icebp
mov
fs
stos
ins
mov
dec
cmp
scas
mov
cmc
rol
ror
mov
pusha
dec
leave
fsubr
adc
cwde
sbb
push
test
push
xchg
pop
pop
jmp
fcomp
int3
jle
pusha
lds
sbb
mov
pop
jle
sub
icebp
fucomi
xchg
push
add
or
jo
push
inc
(bad)
sbb
ins
mov
(bad)
inc
jp
mov
mov
imul
lea
pop
mov
imul
sbb
out
(bad)
pop
ret
mov
and
mov
stos
js
lods
xchg
lds
and
js
or
and
mov
retf
jmp
xor
sbb
data16
(bad)
adc
xchg
(bad)
pushf
mov
(bad)
test
(bad)
lock
addr16
mov
je
xchg
lea
fcomp
inc
pop
mov
pop
and
jmp
fld
push
xchg
ret
add
daa
(bad)
push
xchg
lods
push
sub
in
inc
outs
test
mov
fnsave
iret
jae
sbb
imul
push
rol
mov
in
xlat
fs
jp
adc
sbb
pop
ret
lea
rcr
push
rcr
mov
cmp
jbe
repz
jne
lods
repz
inc
pop
mov
jg
dec
call
jp
mov
and
shr
mov
jmp
xchg
int
and
loop
neg
mov
ret
cmp
iret
jnp
call
dec
mov
fstp
mov
lahf
ins
std
out
lahf
es
pop
call
mov
ret
(bad)
mov
in
mov
sub
xchg
xor
and
mov
inc
jp
xchg
cld
mov
dec
movs
cwde
add
movs
or
and
adc
sar
(bad)
inc
jno
loope
movs
or
in
jno
nop
ja
adc
pop
push
push
or
imul
dec
push
(bad)
leave
bound
retf
or
lods
add
je
data16
iret
mov
inc
jg
pop
push
nop
pop
adc
fidivr
xor
loop
sbb
cli
xchg
mov
sbb
push
add
daa
daa
inc
fst
jg
mov
movs
mov
sub
adc
sbb
mov
mov
inc
mov
cmp
sbb
fcom
lea
(bad)
je
scas
xchg
repz
or
jecxz
cmp
push
imul
ja
cld
xchg
pop
sahf
call
push
(bad)
add
test
inc
imul
shr
xlat
sbb
ror
pushf
mov
adc
sub
fwait
dec
inc
xchg
push
pop
and
xchg
out
adc
push
into
int3
dec
and
push
cmps
into
mov
(bad)
in
mov
call
mov
xor
(bad)
arpl
xchg
push
movs
stos
mov
shl
out
lock
mov
into
mov
fnstcw
xchg
dec
sahf
inc
push
retf
mov
rcr
ja
retf
jg
fisttp
mov
(bad)
(bad)
lods
stc
add
enter
das
scas
pushf
push
movs
in
fwait
xchg
xlat
fstp
enter
imul
jmp
je
adc
xor
xlat
add
fsubp
push
fstp
add
fidiv
inc
xchg
stos
push
test
adc
pop
or
add
add
stc
dec
sbb
xchg
cmc
aas
(bad)
mov
mov
jmp
mov
push
enter
cwde
sub
or
mov
loope
or
das
aas
scas
in
and
mov
push
lock
inc
jle
jo
add
or
sub
arpl
fisubr
adc
daa
mov
push
mov
out
sbb
xchg
pop
(bad)
aas
ret
and
das
cmp
adc
test
and
hlt
inc
jne
jne
cs
and
adc
or
sub
(bad)
and
push
adc
mov
fdiv
cmp
retf
call
repnz
xchg
xlat
fstp
mov
xor
out
dec
and
cmp
lea
repnz
std
ror
sbb
pop
sbb
pop
loope
clc
mov
(bad)
add
in
mov
pop
cmc
mov
pop
out
xchg
ret
mov
lods
rcr
and
cdq
adc
outs
pop
(bad)
stos
es
mov
mov
sbb
adc
in
push
(bad)
pop
addr16
es
cmps
sar
jmp
out
mov
xor
jnp
outs
je
popf
mov
push
movhps
into
jns
jno
loopne
sbb
test
jmp
xchg
jle
cmc
mov
cli
(bad)
pusha
cmp
out
jp
push
in
retf
iret
ret
js
das
and
jl
(bad)
cmp
aas
shr
jle
sbb
adc
add
shr
xchg
cmps
cs
es
int
loopne
xor
sub
xchg
scas
out
lods
dec
pop
mov
and
add
push
(bad)
and
mov
inc
xor
cmp
push
jle
mov
loope
lock
push
daa
repz
dec
leave
pop
imul
les
add
stos
aad
pop
inc
ds
sub
(bad)
jmp
aam
jns
pushf
je
out
(bad)
cli
cmp
ret
sub
fyl2xp1
mov
lods
inc
push
or
pop
or
jb
mov
std
(bad)
out
sub
jmp
rcl
cwde
ret
mov
and
xor
repnz
in
shr
mov
jnp
cmp
cmp
cmp
add
xchg
sahf
add
mov
and
or
iret
lods
and
and
inc
xchg
arpl
nop
aaa
xchg
push
mov
gs
or
das
or
or
outs
pop
push
ds
mov
mov
js
test
or
fst
mov
popa
outs
mov
dec
add
loopne
push
sub
sbb
and
ins
sub
pop
sahf
cmp
add
rol
arpl
data16
lods
and
and
xchg
popf
add
cmps
repnz
pop
in
or
ds
jmp
scas
mov
leave
int3
xchg
xor
aaa
xchg
xchg
mov
sahf
jmp
sar
cmps
sub
test
adc
jne
shl
mov
pusha
pop
jno
sbb
xchg
sbb
jne
sub
pop
dec
test
(bad)
mov
ja
mov
movs
push
pop
push
sti
(bad)
(bad)
out
repnz
xchg
and
les
pand
or
js
xor
mov
mov
sahf
jmp
(bad)
sub
add
xchg
jns
stos
push
dec
ret
xchg
js
xor
out
xor
mov
add
ret
sti
cmps
dec
sub
adc
repz
mov
jns
jnp
icebp
movs
or
je
fsub
in
add
mov
dec
push
jecxz
adc
rcr
or
(bad)
fidiv
and
inc
or
gs
xchg
retf
cdq
jl
hlt
pop
pusha
stos
adc
test
and
lods
add
jno
(bad)
mov
jg
sahf
into
fmul
outs
test
mul
data16
sbb
imul
div
cdq
scas
loop
pop
push
dec
pop
movs
or
xlat
mov
ss
lea
addr16
inc
(bad)
xor
popa
mov
aaa
repz
mov
xchg
mov
or
ins
sbb
ss
adc
cmp
mov
div
sahf
sub
and
scas
jnp
xor
outs
aaa
and
sbb
mov
popa
cs
out
dec
pusha
mov
cmp
stc
mov
shl
not
jl
add
cmp
inc
in
push
pop
add
sub
xor
or
and
dec
fpatan
mov
clc
or
fistp
jp
fcmovnu
jns
test
ret
fdivr
and
ja
mov
imul
repnz
popf
mov
(bad)
cmp
icebp
das
shr
mov
rcl
xchg
fadd
scas
inc
push
sub
xchg
xchg
sbb
aas
in
out
mov
out
adc
call
fiadd
jmp
into
pop
xchg
test
repz
xor
pop
rcl
movs
mov
pop
int
xlat
popf
mov
mov
aad
inc
sub
add
test
inc
cwde
scas
fist
mov
(bad)
repnz
inc
jle
xchg
sbb
inc
xchg
add
mov
sbb
pop
sub
adc
jae
cmp
jmp
xor
lahf
and
(bad)
dec
cmp
adc
mov
(bad)
sub
mov
xor
test
pop
xchg
mov
push
cmps
out
cmps
in
mov
scas
add
push
ins
aaa
adc
add
pop
add
lds
dec
iret
lods
push
lock
rol
add
les
dec
push
cmp
pop
jp
call
repz
pop
aas
in
fisub
repnz
into
div
jmp
xchg
pop
or
add
sti
popa
pop
or
iret
pop
hlt
pop
cmps
ss
cmps
sbb
mov
jo
in
outs
nop
fs
jge
cmp
xor
fwait
imul
xchg
dec
or
add
jl
add
scas
xchg
call
xor
fwait
(bad)
sbb
mov
xorps
cdq
(bad)
aas
sti
icebp
sar
mov
retf
fst
call
sub
xchg
mov
inc
push
jo
cmp
call
aam
xchg
add
outs
movs
xchg
js
pop
xor
loopne
mov
cmp
inc
cs
leave
mov
mov
push
mov
rcl
and
xor
dec
movs
sub
idiv
mov
push
jmp
scas
movs
mov
test
rcl
pop
fs
loope
ss
pop
aam
call
ins
leave
inc
in
inc
mov
dec
inc
adc
add
jno
aas
xchg
sub
outs
cmp
inc
lods
in
sub
cs
push
add
dec
cmp
push
xor
mov
cli
push
cld
push
xchg
pop
call
mov
sub
or
or
jae
adc
sub
in
or
mov
test
adc
cdq
in
inc
mov
sti
stos
add
adc
xor
scas
cmp
rsqrtps
bound
mov
pusha
cs
jmp
icebp
out
add
arpl
das
fdiv
push
jge
rcl
push
in
mov
xor
adc
fcomip
adc
repnz
or
sahf
clc
scas
test
js
call
and
mov
mov
lds
movs
xor
(bad)
int
neg
xlat
cmc
add
lock
xchg
inc
push
loop
hlt
adc
xchg
dec
mov
je
xchg
mov
mov
mov
or
push
and
aaa
mov
pop
hlt
in
push
push
imul
cmp
jbe
inc
lds
xchg
jo
lods
out
daa
and
call
dec
pop
mov
(bad)
ror
lods
into
jne
adc
sub
loopne
jbe
push
xor
(bad)
sub
mov
jl
jne
push
jae
sahf
lock
pop
inc
xor
aad
mov
aaa
ficom
test
not
cmps
idiv
xchg
cmp
add
fmul
and
push
repnz
mov
mov
ret
jl
push
ss
ins
mov
imul
adc
pop
rol
fisub
ja
jp
or
icebp
stc
push
jmp
or
test
sbb
fisub
jb
fchs
jne
outs
leave
imul
inc
cmc
pop
mov
mov
movs
imul
in
in
xchg
jae
neg
adc
dec
push
fs
adc
icebp
cs
adc
mov
dec
imul
pusha
push
out
fild
daa
xor
pop
and
aad
cmp
cmp
sub
jecxz
jmp
push
cmp
fwait
mov
loop
aas
cld
lods
adc
in
shr
and
push
mov
cmp
jl
jo
push
nop
sub
mov
cwde
mov
push
mov
ret
dec
push
pop
xchg
ss
xchg
out
mov
xchg
in
sbb
sub
push
out
pop
cmp
nop
inc
add
test
retf
jnp
outs
int
mov
(bad)
les
pop
xor
jae
dec
or
aaa
inc
xchg
mov
sub
pop
push
hlt
xor
cmp
bound
jecxz
pop
pushf
call
pop
sar
or
fld
mov
jg
outs
push
clc
cmp
retf
leave
es
jmp
pop
fdivr
dec
xor
push
cmp
xor
rol
das
iret
inc
adc
adc
cli
aaa
mov
lds
(bad)
xchg
cld
xchg
movs
stos
gs
xchg
or
xor
or
cmp
test
fmul
adc
mov
cmp
test
xchg
inc
or
mov
imul
push
shl
psubb
push
out
pop
iret
stc
xchg
or
(bad)
sub
dec
int
cld
lahf
fwait
mov
cmp
or
dec
data16
icebp
pop
xor
repz
mov
sbb
test
imul
out
std
aam
jnp
mov
and
dec
pop
push
adc
sbb
inc
pop
(bad)
das
sub
clc
dec
rol
loope
sbb
pop
movs
push
scas
inc
adc
add
xchg
scas
add
hlt
lods
mov
jns
push
scas
imul
and
push
nop
arpl
or
fbld
jns
or
ins
std
jmp
ret
adc
jno
and
sub
jmp
push
inc
jnp
cs
or
xor
mov
call
iret
scas
add
(bad)
jp
ds
xchg
rcr
sbb
and
jno
cwde
rol
jl
pushf
outs
xor
ss
(bad)
(bad)
aad
add
and
pushf
outs
jle
jo
add
(bad)
outs
cmp
push
int
lahf
sti
push
mov
ret
xchg
lods
out
mov
jnp
add
xchg
or
ss
push
push
adc
int3
sbb
mov
mov
jecxz
mov
cdq
cmp
jns
int
jp
push
cli
inc
movs
xchg
sub
xor
xlat
cli
sub
jmp
je
je
rol
mov
inc
in
mov
push
cmp
jle
ins
loope
js
xchg
xchg
idiv
add
jge
je
int
inc
imul
hlt
push
xchg
jae
sbb
(bad)
daa
push
xor
pushf
and
ds
cmp
xor
xor
ret
call
dec
or
enter
leave
pop
inc
mov
jo
lods
lahf
repz
jns
push
push
mov
outs
out
xchg
(bad)
sbb
pop
leave
mov
inc
mov
fld
pop
lahf
mov
movs
mov
in
jge
xchg
or
add
cwde
and
jp
clc
shl
and
jg
in
nop
repnz
les
ret
lods
cld
(bad)
push
push
out
jbe
pop
in
fisttp
jl
jmp
or
stos
rcr
jnp
push
xchg
pop
xor
test
pusha
in
gs
ins
mov
daa
cmp
sbb
mov
mov
dec
sbb
stos
(bad)
adc
aad
sbb
dec
push
les
xchg
ficom
jmp
jae
movs
inc
sar
stc
shl
(bad)
cwde
adc
mov
jmp
jg
push
jmp
dec
push
inc
dec
dec
das
in
cmp
sub
rol
shl
cmps
pop
or
inc
stos
jae
(bad)
pop
loopne
dec
sbb
dec
in
(bad)
cmps
addr16
dec
shr
in
jbe
or
add
xor
scas
push
(bad)
inc
cmc
sub
push
cld
in
sar
ins
xor
mov
in
les
pop
(bad)
adc
mov
(bad)
adc
dec
fisub
in
mov
cmp
cmp
dec
xor
jns
and
sti
or
cli
(bad)
jl
inc
pop
mov
cmp
fadd
lea
push
dec
cmps
out
push
pop
jle
jno
and
repz
popa
ins
mov
and
das
sar
lea
or
cmp
inc
popa
sub
mov
bound
scas
push
dec
mov
and
dec
add
stos
dec
sbb
repnz
xor
fcom
out
mov
lods
out
cmp
fimul
xor
xchg
clc
inc
jae
push
imul
xchg
fwait
cld
scas
or
mov
or
cmc
jp
mov
test
addr16
and
ins
mov
mov
(bad)
int
ins
movs
jae
loope
sub
add
xor
mov
mov
sbb
aam
mov
jbe
and
jg
outs
dec
sub
aam
or
xchg
data16
(bad)
or
xor
and
popf
pop
lock
outs
mov
loope
stos
rcr
xchg
push
mov
mov
and
add
das
xchg
cmp
(bad)
je
ds
pusha
out
dec
icebp
fist
add
cmp
lods
sub
inc
in
push
aam
adc
dec
mov
adc
inc
enter
sub
pop
dec
xor
adc
in
pop
sbb
dec
stos
push
and
and
push
dec
stc
mov
jmp
jnp
xchg
push
retf
(bad)
imul
mov
pop
sub
loop
arpl
mov
mov
(bad)
push
adc
ret
into
in
jecxz
add
xchg
out
push
adc
xchg
daa
mov
stos
push
sub
(bad)
fstp
jb
retf
sub
cmp
jno
icebp
loope
jnp
pop
jo
ins
lahf
ficom
add
fisub
adc
mov
ins
call
mov
mov
xchg
mov
cmp
rcl
popf
sub
stos
cmc
aas
pop
hlt
shl
rol
pop
mov
(bad)
mov
sahf
push
pop
sub
push
cmp
repz
movs
adc
ret
nop
nop
es
shl
lock
mov
dec
mov
in
jbe
enter
data16
int
pop
jnp
mov
mov
ret
or
pop
scas
cmc
sub
push
test
imul
lds
aaa
call
icebp
sbb
ins
aas
xchg
mov
mov
daa
sbb
push
mov
xor
sbb
(bad)
xor
xchg
adc
jge
and
sub
imul
loop
add
loope
nop
int3
dec
add
push
fs
fldcw
push
retf
mov
es
rcr
cmp
call
frstor
out
cmc
jle
ja
and
adc
adc
aas
outs
loop
cwde
mov
out
and
cmps
test
mov
fcom
add
jmp
ins
hlt
xchg
pop
mov
arpl
xchg
pushf
mov
les
push
jl
arpl
cmps
shl
inc
mov
jo
xor
(bad)
(bad)
pop
ror
mov
or
push
push
(bad)
(bad)
push
(bad)
mov
mov
add
push
mov
adc
pop
ss
leave
sbb
jmp
std
imul
sbb
dec
add
stc
jp
inc
xor
fcomp
nop
loop
fisttp
shl
or
adc
jns
push
jl
xor
or
jbe
neg
movs
add
sbb
out
jp
jne
and
jle
jbe
rcl
xchg
xchg
push
das
or
push
retf
xchg
xlat
(bad)
xchg
out
pop
mov
das
sbb
sub
jp
mov
fsub
shl
(bad)
push
retf
mov
fucomi
and
push
push
scas
movs
pusha
fdiv
sbb
sub
and
cmp
js
xlat
sbb
int3
outs
ins
ret
sub
lahf
rcr
int3
movs
push
mov
push
xchg
in
int
cmp
fisubr
shr
jmp
dec
pop
sbb
push
mov
cwde
add
lods
cmp
xor
fcomi
and
stos
sub
mov
jnp
clts
add
sub
dec
das
pop
or
lods
jg
movs
outs
jno
and
mov
(bad)
push
in
arpl
dec
xor
push
jmp
xor
and
shr
sbb
ja
pop
and
lds
retf
xor
mov
pop
mov
and
pop
mov
xchg
ja
adc
inc
icebp
jmp
jg
add
add
(bad)
mul
xlat
pop
mov
sub
pop
xor
dec
fs
clc
cmp
pop
sub
sbb
ds
xchg
add
pop
inc
jg
test
push
dec
(bad)
mov
dec
fwait
inc
mov
push
mov
push
xor
aad
stc
xor
cmps
xor
xor
push
mov
fwait
outs
dec
je
pusha
push
fsubr
inc
jle
push
sub
and
dec
sbb
mov
shr
sahf
pop
push
pop
popa
bound
rcl
xchg
rcl
neg
jns
mov
push
dec
fs
out
aas
in
jb
sub
in
loopne
and
mov
dec
aad
cmp
enter
stos
sbb
dec
test
cld
rcr
cmp
fsub
inc
(bad)
(bad)
stos
faddp
inc
std
fdivr
out
mov
movs
xor
lds
adc
aam
inc
shl
and
mov
mov
ret
and
leave
imul
outs
(bad)
fsub
sub
dec
xor
jno
leave
std
adc
jle
ret
inc
xor
jmp
cdq
scas
addr16
imul
repz
sub
mov
lods
cmps
xor
lea
jb
sub
push
jb
cmp
bnd
shl
mov
mov
push
add
xchg
jnp
cmps
popa
std
xchg
pop
xor
out
rcr
mov
ret
ins
xor
cli
sar
push
dec
cs
xchg
or
cli
fnstcw
sbb
mov
sti
pushf
push
(bad)
xchg
push
mov
cmp
sbb
xor
retf
retf
xor
mov
mov
mov
xchg
clc
popa
ins
int
pop
test
neg
jb
clc
jb
xor
inc
push
add
test
pusha
retf
mov
fild
mov
cwde
je
mov
aad
imul
or
adc
jns
xor
sar
fdivrp
jo
rcr
jp
inc
xchg
stos
xchg
cdq
push
dec
pusha
dec
adc
inc
cdq
pop
mov
push
jp
mov
fiadd
rcr
mov
push
push
test
sub
push
sbb
and
pop
shl
sbb
imul
sbb
data16
and
adc
xchg
inc
lods
xchg
cmps
neg
or
sub
fsub
shl
stos
dec
jnp
pop
(bad)
call
cbw
jnp
adc
fcmovnb
lea
out
xchg
cs
fst
xchg
cmp
pusha
xor
adc
mov
xchg
fiadd
add
mov
cs
jne
hlt
sbb
mov
fstp
mov
(bad)
(bad)
xchg
lock
push
dec
fsub
lock
aam
movs
mov
xchg
mov
sub
rcr
das
xchg
cmp
xor
repnz
clc
std
ds
or
sub
in
xorps
clc
dec
arpl
aad
mov
adc
outs
sub
dec
jns
imul
and
xlat
add
dec
xchg
push
and
jo
dec
mov
retf
test
sbb
jmp
jecxz
cs
pop
push
repnz
shr
jg
mov
cmp
arpl
mov
cs
js
out
cwde
sub
mov
movs
jbe
bound
mov
in
ins
inc
out
stos
and
add
lods
push
mov
cmp
mov
push
xchg
daa
in
inc
bound
in
jp
mov
xor
cmps
ins
add
xlat
push
shr
sbb
mov
repz
jmp
retf
push
mov
repz
cld
enter
cmps
fst
ins
mov
and
lods
int
mov
cmp
es
jmp
jecxz
pop
push
dec
add
jno
jns
add
movs
out
aas
pop
jle
inc
in
call
pop
outs
cmp
xor
mov
not
dec
jae
mov
xor
xor
in
ret
inc
(bad)
push
mov
test
out
cli
mov
movs
dec
rcr
fwait
jmp
pop
dec
cmc
jg
or
jmp
and
push
ja
loopne
shr
lods
retf
sbb
or
ja
addr16
shl
cmc
(bad)
(bad)
adc
nop
repz
sar
mov
sub
sub
loop
retf
xchg
or
(bad)
loop
jle
mov
push
inc
jp
lahf
clc
and
or
sar
call
fcom
ins
retf
lds
int3
mov
leave
rcl
int
ja
retf
imul
iret
adc
std
dec
inc
mov
dec
jo
jns
or
cmps
(bad)
and
outs
mov
popf
icebp
inc
sub
cmpxchg
jne
xchg
ret
mov
cmp
jmp
pop
shl
mov
jne
cmp
call
stos
hlt
leave
push
addr16
mov
inc
out
shl
mov
xchg
push
loopne
xchg
pop
sub
or
pop
popa
add
mov
scas
rcl
inc
add
jmp
push
xor
fcomi
push
jns
or
push
(bad)
ins
sub
adc
xchg
ror
and
std
pop
ror
push
call
pop
mov
mov
push
test
popf
sar
test
dec
and
ret
or
jnp
aas
mov
add
or
push
and
mov
shr
ins
or
jle
lods
outs
(bad)
(bad)
popa
cmp
fwait
push
sar
test
xchg
mov
cmp
or
mov
cmps
jae
dec
pop
call
fcom
sahf
sbb
cs
arpl
xor
or
pop
sub
bound
ret
imul
pop
push
mov
ret
sub
scas
dec
mov
xchg
cmp
loop
iret
cdq
pop
mov
fcom
push
inc
test
aas
cld
aam
mov
cmp
(bad)
neg
jno
psrad
jbe
mov
mov
int3
push
push
xor
out
jmp
sub
jp
arpl
das
cmc
enter
sbb
mov
arpl
mov
sar
sbb
ds
fwait
scas
and
and
cmps
pop
test
inc
inc
or
out
test
or
mov
lea
pop
mov
retf
loopne
out
pusha
hlt
inc
xchg
imul
dec
adc
push
xchg
clc
sub
leave
retf
scas
scas
sub
mov
ret
adc
sub
cwde
inc
pop
mov
cmps
and
dec
in
and
mov
add
push
jno
xor
push
mov
push
or
imul
add
lea
cmps
mov
sub
cld
adc
(bad)
xlat
cs
push
scas
lock
push
push
mov
test
cmp
dec
jno
das
adc
les
xchg
mov
or
mov
jle
or
ja
dec
sub
mov
mov
lods
push
xchg
imul
fsub
dec
jno
dec
xor
fwait
xchg
sahf
adc
rol
dec
jmp
cmp
sub
jp
mov
pusha
sti
adc
aas
lock
inc
int
nop
mov
retf
pop
xchg
sub
and
and
mov
pushf
pop
xor
jne
adc
iret
(bad)
daa
cmp
cmp
mov
out
xchg
cmp
and
pop
mov
or
push
bound
ins
sbb
shr
ds
cmp
rol
sbb
fnstcw
mov
xchg
sub
ret
fidiv
mov
sbb
jl
add
and
cmps
pushf
mov
or
pushf
inc
mov
(bad)
push
ret
icebp
cmp
mov
inc
mov
xor
jbe
jmp
dec
or
dec
cmp
sub
(bad)
xor
dec
rcr
out
bound
js
mov
jmp
out
xor
pop
jge
movs
jl
add
dec
mov
retf
xchg
lea
dec
mov
jmp
xor
xchg
mov
pop
jbe
mov
jae
add
cmp
cmp
js
iret
aaa
push
ss
jae
je
adc
cmp
inc
ror
(bad)
jp
push
add
dec
inc
adc
inc
or
out
xor
cmp
xchg
and
icebp
ss
retf
test
mov
pop
jns
std
aas
(bad)
inc
mov
shl
jo
mov
or
add
sti
cmp
jmp
inc
dec
fs
xchg
adc
adc
in
sub
inc
jecxz
inc
mov
mul
icebp
push
cli
xchg
push
add
or
(bad)
and
push
popa
int
sub
mov
cdq
pop
jmp
sub
das
les
xor
fwait
xchg
xchg
cmps
mov
cmp
mov
cmp
push
je
mov
inc
and
movs
push
inc
shl
jae
sub
rcl
cmp
popa
xchg
jp
repnz
das
call
add
in
int3
(bad)
addr16
outs
lahf
and
(bad)
dec
fnstsw
and
cmp
xlat
cmp
in
inc
xchg
lods
xchg
js
or
lahf
sbb
cmps
sbb
push
mov
loope
mov
cwde
push
das
push
iret
es
and
sub
push
push
push
xchg
inc
in
sar
mov
bound
mov
dec
jbe
jns
into
pop
ficomp
ja
jg
xchg
lock
popa
pop
lea
shl
mov
inc
mov
in
stos
out
js
pop
scas
nop
xor
or
mov
dec
js
jge
xchg
lds
movs
dec
xor
hlt
or
xor
sub
add
jnp
cmps
psubsw
push
int
add
sar
in
push
add
adc
adc
loop
pop
jbe
loope
adc
rol
inc
outs
cli
pop
jnp
in
inc
adc
mov
or
(bad)
xchg
cmp
in
jnp
push
rcr
sbb
or
shr
repnz
mov
jmp
ja
int
jno
sti
jns
dec
lods
cmps
xchg
cwde
add
stos
or
jmp
mov
and
mov
ror
ss
sub
inc
cwde
std
hlt
sub
jnp
cmps
icebp
fadd
arpl
jmp
jecxz
and
bound
dec
imul
or
les
imul
dec
rcr
cmp
add
retf
jbe
sahf
dec
pop
test
xchg
test
retf
fild
sub
dec
call
and
jae
xchg
fdivr
cwde
jmp
cdq
jne
pop
sub
test
addr16
(bad)
loopne
adc
xchg
js
jmp
cmc
xchg
sbb
xchg
ja
push
cmps
repnz
xchg
push
jns
inc
lock
inc
xchg
nop
fisttp
pop
imul
aad
jnp
dec
pop
sbb
sub
sahf
sub
lds
retf
mov
lods
clc
mov
pop
lahf
fcomp
les
out
into
inc
xchg
rcl
fadd
and
xor
cmp
lds
jmp
in
jmp
imul
or
sbb
lock
inc
aad
sub
sbb
push
jns
mov
loopne
dec
int
mov
sbb
fmulp
test
pop
cdq
push
movs
or
cmp
ins
les
sbb
mov
in
(bad)
sbb
or
adc
lods
mov
cwde
cdq
mov
fnstcw
push
add
sbb
scas
sbb
retf
pop
sar
popf
xchg
adc
lock
and
mov
in
push
lea
cmp
test
sbb
aad
(bad)
or
mov
dec
add
cld
iret
push
jle
fidiv
fisub
dec
jge
jno
and
and
retw
sub
ret
push
adc
popa
ss
mov
push
(bad)
fmul
dec
sub
cs
jbe
rcl
or
je
and
aas
inc
add
lods
out
dec
sub
test
(bad)
stos
dec
push
inc
aaa
cmp
lahf
and
sub
or
xor
xchg
es
adc
stc
and
int3
arpl
jns
clc
xchg
dec
cmp
loopne
pop
push
push
jge
xor
ds
out
mov
lods
popa
das
push
or
leave
test
xchg
les
mov
xchg
retf
mov
xor
pop
inc
and
pop
push
sahf
and
cmp
nop
scas
and
hlt
outs
cmps
movs
xor
les
inc
cmps
imul
fiadd
out
dec
daa
test
scas
sbb
ret
cld
movs
sti
sub
pop
add
lock
and
ss
push
push
push
jge
push
(bad)
push
pop
fisttp
call
fisttp
enter
push
stos
jg
fwait
xor
rcr
ja
cld
inc
lods
push
dec
sbb
push
stos
add
xchg
call
out
pop
xor
inc
lods
mov
mov
loopne
out
ret
mov
jmp
mov
xchg
scas
cmp
or
(bad)
mov
jmp
mov
pushf
sbb
out
xor
sub
and
pop
data16
push
jb
adc
outs
mov
adc
push
or
inc
pop
cmp
push
and
sti
int3
dec
jne
mov
stos
dec
ret
cmp
cmps
imul
and
xchg
mov
out
test
jae
sbb
mov
fwait
js
jne
xchg
sahf
pop
jno
push
test
xchg
pop
test
addr16
fdiv
ss
cmps
or
pop
pop
repz
mov
pop
and
aam
jmp
dec
outs
xor
and
sub
aam
aam
sbb
mov
arpl
adc
adc
test
cmp
mov
push
mov
sar
es
jae
retf
rcr
movs
das
cmps
cld
aam
sub
cmp
in
sbb
pop
pop
fcom
inc
stos
std
and
push
inc
mov
add
pop
pop
ror
mov
cmp
add
fbld
pop
fisub
xchg
iret
lea
mov
inc
add
jb
mov
pop
lock
test
retf
jnp
push
cmps
addr16
adc
xchg
add
sahf
cli
xor
dec
imul
hlt
mov
in
inc
and
sub
mov
gs
cmps
jg
adc
pop
lahf
loope
cmp
xchg
push
fldcw
mov
enter
add
test
add
sub
push
inc
lds
mov
imul
cmp
mov
test
rcr
test
mov
btr
and
lock
shr
inc
add
sbb
and
jp
fadd
sbb
sbb
dec
cmp
test
pop
pop
icebp
jns
in
pop
adc
push
push
test
dec
sub
mov
adc
dec
out
xor
ret
add
inc
aad
pop
mov
clc
shl
cwde
mov
or
shl
dec
fwait
repnz
lahf
imul
sbb
fcomip
pop
adc
popf
push
hlt
mov
mov
sbb
pop
in
loop
push
xchg
(bad)
(bad)
adc
das
jno
loop
or
cli
jb
mov
jne
stos
fs
loopne
adc
jge
xor
inc
mov
push
div
or
les
test
test
ret
sub
or
cli
fbld
push
mov
inc
adc
dec
fild
std
sub
ja
dec
shl
movs
sahf
cwde
imul
jmp
fwait
mov
push
adc
cmp
xor
nop
popf
sti
mov
cmps
add
cmp
lahf
stos
xor
mov
mov
mov
xor
jno
cmc
fwait
cmp
out
pusha
mov
inc
adc
fst
adc
jl
std
mov
xor
inc
ret
ins
aas
push
jmp
repnz
xlat
sub
mov
jle
mov
or
and
clc
or
pop
loop
iret
fldenv
cli
fwait
xchg
es
test
jnp
gs
ret
jbe
(bad)
test
mov
mov
xchg
data16
mov
inc
stos
fdiv
repnz
out
fcom
(bad)
jmp
es
mov
jo
(bad)
pop
sysexit
jae
add
and
add
mov
mov
or
(bad)
cld
pushf
jb
jb
jbe
xchg
rdpmc
xor
xchg
pop
sub
test
in
aam
fistp
adc
push
inc
iret
cld
xchg
ret
push
(bad)
in
sub
mov
xchg
mov
or
mov
lea
and
mov
mov
dec
leave
daa
sub
mov
nop
jbe
mov
fistp
cwde
pop
pop
jae
ja
ins
icebp
mov
outs
jne
mov
jl
xchg
sar
mov
mov
or
adc
jno
add
or
jne
into
cmps
mov
dec
ins
mov
or
mov
ret
mov
test
cdq
aas
fstp
ret
loop
pop
imul
xor
jmp
inc
outs
sbb
and
mov
adc
scas
enter
(bad)
jmp
test
add
and
add
bound
mov
xlat
bound
sbb
xor
mov
push
lock
cmp
nop
cmp
je
(bad)
cld
sub
jle
icebp
icebp
js
(bad)
aaa
xchg
dec
shr
push
retf
mov
lock
or
xor
aaa
cmp
stos
or
adc
scas
inc
loopne
je
ret
lods
jo
fild
inc
and
add
out
test
push
pop
cmc
stos
add
imul
inc
pop
aam
out
xor
sti
cmp
push
int
sub
and
sub
xor
dec
dec
mov
mov
(bad)
pop
repnz
mov
xor
call
aaa
mov
xchg
inc
imul
xlat
ds
inc
sbb
mov
add
lea
adc
outs
int
pop
bound
xor
xor
imul
ins
aaa
push
movs
jecxz
clc
mov
dec
cmp
hlt
sub
jo
mov
mov
retf
or
shr
test
repz
out
scas
aad
daa
fldcw
inc
push
mov
mov
enter
ret
lods
cli
mov
loop
int3
mov
loope
jnp
test
or
add
bnd
test
push
xor
sbb
cmc
lock
lods
ret
mov
cli
sbb
sbb
mov
ror
adc
sar
jmp
xchg
aad
jns
pop
test
outs
scas
(bad)
push
aad
mov
jle
sar
cmc
jne
scas
dec
inc
mov
jo
xor
lods
fwait
int3
cwde
jmp
mov
dec
cmp
cmps
mov
retf
push
or
dec
jne
icebp
pushf
sub
sub
jb
mov
sub
idiv
scas
push
cli
mov
test
jbe
aam
mov
icebp
jecxz
cmp
mov
jmp
adc
add
lods
mov
scas
sbb
xchg
mov
ret
and
jns
(bad)
cmp
out
mov
xor
dec
movs
push
loopne
or
push
add
inc
loopne
rcl
push
xchg
add
jmp
in
je
fimul
mov
jnp
xor
addr16
sbb
pop
ins
aad
stos
xor
jno
pop
pop
mov
js
ficom
push
aas
mov
rol
push
test
fwait
adc
sbb
dec
pop
or
lods
ds
cmp
or
or
imul
ds
lods
enter
inc
cmc
and
dec
sti
xor
cmp
xor
test
xor
out
or
mov
int
pusha
fidiv
rcr
push
lds
mov
push
inc
xchg
ins
adc
leave
adc
jne
retf
sbb
inc
call
add
inc
pop
in
and
test
xor
(bad)
popf
dec
fidiv
ss
leave
scas
out
sub
push
sbb
stc
mov
clc
sbb
mov
ror
mov
and
test
sub
shr
cmp
mov
xchg
repnz
retf
jecxz
popf
adc
sbb
sbb
lods
push
imul
cmps
push
pop
sbb
cli
mov
mov
mov
int3
add
jp
mov
(bad)
jl
cmp
call
push
(bad)
cmp
cmp
or
jae
cmp
dec
in
in
cmp
sar
(bad)
enter
test
mov
jp
mov
dec
aaa
fstp
mov
and
sbb
xor
jl
in
ds
push
fnstsw
mov
shl
inc
inc
adc
jmp
inc
jmp
std
add
aaa
dec
jb
pop
test
sbb
popa
out
test
jmp
adc
mov
ss
push
jbe
jnp
mov
pop
fdivr
cmp
adc
popf
mov
shl
mov
sbb
push
js
adc
pop
push
scas
sbb
in
push
popf
mov
dec
fimul
jp
inc
xor
mov
ja
mov
(bad)
jp
mov
addr16
inc
call
daa
mov
repz
cmp
mov
push
fld
mov
repz
and
shr
jne
scas
push
push
push
jns
sbb
popa
daa
dec
lock
std
cmp
dec
popa
xor
jo
retf
or
jle
and
sbb
retf
xor
cwde
movs
push
pop
or
(bad)
rcl
adc
and
pop
jb
inc
test
outs
test
xchg
push
jnp
cmp
xchg
adc
adc
xor
sbb
pop
and
mov
cdq
jno
fcmovu
iret
fdivr
jnp
and
mov
repz
add
inc
lahf
mov
push
pop
es
adc
out
jmp
out
jae
pushf
add
mov
je
mov
cmps
and
(bad)
add
sub
(bad)
std
mov
sahf
popa
jecxz
inc
loope
(bad)
mov
shl
dec
daa
mov
or
xchg
test
out
cmp
out
mov
sbb
jge
pop
out
int
enter
repnz
aaa
pop
pop
xchg
xor
lock
cmps
xor
sub
sbb
ss
shr
or
sbb
xor
lods
sbb
dec
test
push
(bad)
xchg
jmp
gs
jmp
adc
xor
dec
sbb
sbb
leave
inc
jl
or
mov
jno
push
icebp
sub
loop
push
push
(bad)
rcl
addr16
or
cmp
xor
add
stc
add
push
cmp
fucomp
dec
lea
cmc
mov
cmp
js
daa
dec
mov
push
xor
aas
sub
not
cwde
dec
xor
xor
and
enter
aaa
xchg
or
sbb
mov
push
call
add
fsub
xor
popa
bound
jl
add
loopne
xlat
mov
cmps
pop
mov
dec
lea
mov
arpl
xor
sub
inc
or
adc
sbb
je
xchg
(bad)
iret
adc
xlat
or
push
outs
cmp
leave
jns
or
xor
in
das
popf
push
lock
and
dec
cmp
sub
enter
jb
sub
mov
(bad)
out
aam
enter
and
cdq
jmp
or
test
xchg
mov
rol
out
xchg
cmp
mov
aad
sar
arpl
neg
xchg
movs
mov
mov
add
(bad)
mov
jg
or
ror
dec
jb
(bad)
in
aaa
popa
inc
je
mov
sar
dec
call
add
adc
adc
cmps
sub
cmp
mov
jge
int3
sbb
fist
or
stc
cli
sbb
mov
mov
push
nop
int
out
aas
call
cmp
push
iret
mov
sub
je
jecxz
sbb
jl
lahf
cwde
jl
psllw
jl
sub
lock
rol
cmp
jo
in
in
or
add
out
fwait
jp
jnp
fwait
jp
add
ds
xchg
and
cmp
cdq
pop
cmp
push
add
fistp
cmp
sub
imul
imul
sub
fwait
xchg
mov
add
xchg
pusha
lea
push
push
out
into
enter
jb
xchg
or
ja
es
add
out
in
lods
or
je
ins
mov
pop
fsubrp
in
sub
aad
push
pop
mov
add
pop
xchg
xor
(bad)
retf
mov
out
cs
fmul
mov
cmp
pop
div
add
xchg
(bad)
ficomp
out
mul
ins
aaa
out
std
popf
mov
mov
in
jne
push
mov
pop
xor
jnp
stos
(bad)
pop
das
fcom
(bad)
into
in
popa
push
xor
fimul
ret
retf
xchg
jne
fs
mov
das
mov
inc
xor
nop
mov
fwait
dec
push
mov
pop
in
xor
dec
xor
ss
inc
test
mov
test
cmp
or
jbe
mov
inc
lods
push
pop
cmp
jp
outs
loope
push
push
jecxz
jae
(bad)
dec
mov
in
inc
xchg
jae
xchg
cmp
cwde
popf
stos
add
xchg
push
or
sbb
push
int3
push
lods
fcmovnb
xor
(bad)
lock
test
fs
lods
fs
sbb
pop
cmp
lods
jbe
pop
sub
jmp
mov
scas
pushf
mov
and
out
pop
(bad)
aam
test
js
icebp
loopne
jae
int
fdiv
mov
xchg
pop
adc
dec
fwait
pusha
adc
pop
aaa
sbb
fbld
pop
and
int
adc
sub
sub
add
push
mov
pop
call
ins
xchg
jnp
adc
mov
enter
mov
(bad)
int
ja
xor
repz
inc
dec
pop
push
xchg
mov
mov
(bad)
js
jl
xchg
test
out
repnz
fstp
dec
cdq
cdq
(bad)
into
jb
(bad)
jg
cmp
add
ja
add
adc
fucom
mov
cld
add
outs
push
imul
ins
xchg
fdiv
or
out
call
scas
ret
shl
mov
mov
hlt
dec
mov
cli
jae
popa
push
jne
or
stc
adc
pop
aad
jmp
cdq
add
pop
enter
sbb
cmp
and
hlt
bound
inc
xchg
sub
jmp
jb
das
sbb
int3
or
aas
shl
sub
xchg
aam
mov
ds
aas
dec
add
mov
mov
cli
out
xchg
sub
je
mov
inc
jle
icebp
mov
adc
outs
ja
inc
jb
add
mov
retf
add
repnz
ret
lock
cmp
jo
mov
push
adc
iret
fwait
mov
lahf
retf
or
mov
mov
cmp
popa
mov
add
jp
xor
ss
xchg
cmp
mov
or
stos
mov
mov
loope
and
push
or
mov
mov
movs
push
mov
sbb
sbb
dec
sub
test
xlat
cmp
les
lea
push
push
adc
ja
inc
test
sbb
cmc
in
aad
pop
push
mov
in
cmps
pop
and
loope
aaa
test
mov
pop
data16
shr
pop
loop
rcr
mov
and
jo
daa
dec
gs
cld
mov
or
inc
fcmovnu
and
das
pop
xor
nop
ds
jae
xor
(bad)
outs
aaa
xor
ss
pop
jmp
or
push
adc
mov
xor
push
loope
or
sbb
test
inc
lock
push
scas
mul
jmp
cmova
mov
mov
and
mov
jecxz
aam
pop
jp
push
outs
mov
jb
dec
retf
inc
ins
(bad)
stos
ret
out
xor
call
inc
aaa
and
jno
inc
aam
(bad)
cmp
clc
xor
ja
xor
add
sar
repnz
and
push
in
or
hlt
pop
mov
loope
aam
dec
retf
inc
jnp
(bad)
push
stos
xchg
mov
mov
fdiv
lods
xchg
cmc
add
in
xchg
out
sbb
jg
lock
rcl
jecxz
push
and
ret
(bad)
das
ss
pushf
dec
ret
sbb
and
adc
cmp
jle
push
xor
popf
jne
xchg
add
mov
mov
retf
xchg
lock
adc
sti
push
inc
call
idiv
stos
(bad)
adc
ret
pop
stos
cmp
xor
and
sti
mov
and
(bad)
mov
sahf
mov
xor
adc
loope
xchg
sti
push
xchg
test
or
xchg
dec
std
cs
(bad)
dec
jp
cs
cmp
sub
adc
ja
add
inc
xchg
and
push
out
daa
clc
inc
pop
cwde
xlat
or
jle
xor
dec
jmp
lds
pop
gs
fdiv
neg
adc
movs
retf
or
and
repnz
jmp
adc
shr
xor
mov
dec
adc
ror
cs
ret
call
fild
enterw
mov
xchg
sar
ds
lods
cmp
adc
push
jns
scas
dec
jl
pop
test
xchg
ss
adc
add
(bad)
(bad)
(bad)
test
push
cli
mov
ins
scas
mov
jo
push
sbb
fcomp
retf
es
xor
loope
sbb
push
mov
cdq
pop
mov
lock
ret
adc
inc
pop
fsubrp
retf
inc
ror
es
scas
jbe
and
repnz
jo
mov
pop
dec
leave
sbb
sti
aas
out
out
adc
arpl
adc
mov
jecxz
dec
xchg
jp
inc
sub
ins
dec
push
data16
in
lock
pop
shl
sbb
push
outs
cmps
cmps
test
xchg
push
mov
das
mov
add
cmp
rol
sbb
dec
lods
loope
sub
into
in
inc
scas
ss
das
cmp
push
pop
cmp
ror
in
loopne
mov
push
iret
mov
cmp
jmp
add
cmp
lds
dec
bound
(bad)
push
je
stos
lods
jmp
stos
imul
or
loop
les
xchg
rcr
add
or
aaa
cmp
mov
pop
mov
dec
mov
add
es
cmp
sub
outs
jns
(bad)
out
pop
cmp
imul
adc
rol
cmp
cmp
out
dec
inc
(bad)
shr
movs
mov
repz
in
push
cmps
inc
in
arpl
lods
retf
inc
imul
jl
dec
pop
xor
jle
cmp
pop
add
stc
cwde
add
movs
adc
in
(bad)
xor
mov
(bad)
xor
in
mov
aas
das
stos
xor
fbstp
jns
pop
sub
movs
fistp
cld
sub
fimul
xchg
aam
sub
inc
xchg
and
dec
inc
push
pop
pop
cmp
ins
(bad)
lods
call
test
push
out
sbb
ds
mov
push
rcr
xor
lahf
aam
call
retf
mov
and
adc
dec
int
mov
ret
sbb
and
popa
retf
stos
mov
sub
cwd
fwait
add
mov
sbb
loopne
dec
push
sub
pushf
mov
neg
push
add
lods
mov
add
cwde
jle
loopne
test
aam
and
add
dec
aad
push
sbb
push
pop
lock
outs
jg
xchg
sbb
inc
pop
push
dec
jl
sbb
xlat
aas
ins
ss
pop
mov
inc
std
jae
jmp
retf
mov
stos
xchg
pop
jbe
lea
cmp
push
xchg
test
cmps
mov
ror
aad
lock
xor
test
pop
lods
xor
mov
sub
push
adc
jae
mov
mov
sub
jae
inc
adc
jbe
inc
add
ds
nop
dec
inc
(bad)
retf
(bad)
mov
mov
mov
repz
cld
std
and
fdiv
mov
cmps
(bad)
popa
outs
test
mov
jmp
inc
test
in
sahf
cwde
pop
or
test
daa
sbb
jmp
jno
icebp
out
mov
aaa
jmp
dec
inc
clc
xchg
mov
sbb
lods
(bad)
outs
lea
sub
call
inc
lock
jne
add
mov
ins
sti
push
adc
mov
or
imul
sub
push
lahf
repz
(bad)
shr
repnz
mov
pop
lods
adc
sbb
lea
dec
push
xchg
aas
jmp
pusha
iret
mov
push
rcl
bound
jg
nop
and
adc
loopne
dec
jecxz
arpl
jle
dec
fistp
cmp
arpl
daa
inc
out
and
mov
sbb
sub
shl
mov
pop
out
(bad)
(bad)
lods
(bad)
hlt
in
cwde
test
pop
and
and
adc
inc
push
leave
or
lock
xor
bound
idiv
sbb
dec
and
jmp
mov
rol
jp
cli
or
push
inc
cmps
xchg
es
mov
push
imul
addr16
mov
pop
push
sbb
(bad)
lock
mov
jp
pop
daa
iret
mov
(bad)
ret
cmp
fisttp
xor
das
jbe
lock
data16
(bad)
ror
xchg
out
out
adc
push
pusha
mov
add
jo
out
mov
add
jb
xchg
sub
jns
test
loope
mov
sub
mov
mov
popf
mov
inc
or
rcl
adc
push
arpl
mov
cdq
mov
xor
out
dec
loop
sbb
add
call
or
cli
fadd
jmp
les
push
ds
dec
ss
mov
dec
cmp
cs
jbe
lock
pop
mov
lods
movs
push
mov
push
mov
mov
push
movs
imul
movs
xor
or
scas
push
mov
jp
outs
stos
or
ret
cmp
push
cmp
xchg
sub
(bad)
imul
(bad)
dec
sbb
pop
jl
shl
mov
out
and
daa
popa
int
int3
test
jmp
loop
cmp
xchg
dec
les
mov
mov
push
inc
pop
ins
sub
daa
jmp
sahf
rol
fst
xchg
rol
aad
xchg
add
out
pop
or
pusha
jmp
in
adc
lea
jge
repnz
(bad)
in
cmp
popa
sar
cmp
ror
das
loopne
add
pushf
mov
dec
fnstcw
inc
es
lock
xchg
or
out
outs
inc
mov
scas
adc
call
fucomip
jmp
cmp
and
push
add
dec
loope
mov
cli
jmp
in
jecxz
fwait
mov
lods
arpl
lea
push
xchg
push
ror
pop
xchg
and
xor
mov
adc
mov
adc
adc
out
adc
sti
call
xchg
push
and
or
jnp
pop
push
jbe
xchg
or
iret
mov
jmp
(bad)
cmp
pop
jge
or
xchg
cmp
mov
cmp
pop
pop
sub
(bad)
cmps
pop
add
out
jnp
out
and
ja
push
mov
push
test
stos
aam
(bad)
pop
push
data16
cmps
cmp
stos
inc
xchg
movs
bound
xchg
neg
xchg
dec
dec
test
pop
jmp
fadd
js
dec
hlt
jbe
add
jo
jmp
mov
das
ret
mov
push
mov
push
rcr
xchg
imul
sub
(bad)
repnz
add
add
jb
mov
inc
imul
push
movs
dec
pop
mov
sub
scas
inc
pop
and
jne
test
mov
sub
gs
test
sbb
adc
pop
mov
cmp
aas
cmps
or
fwait
dec
repz
xchg
adc
popa
js
mov
jo
push
and
adc
adc
rcr
jns
fst
rol
mov
loope
loopne
leave
(bad)
loope
or
fs
xchg
pop
xor
mov
test
out
lods
pushf
ret
jae
fist
fidiv
pop
int3
pop
popa
xor
adc
mov
inc
shld
clc
into
addr16
jp
fucomp
jns
fidivr
add
out
pop
sub
addr16
mov
mov
int3
sbb
lahf
dec
jmp
in
push
(bad)
fwait
cmc
cmp
lea
xchg
fist
xor
test
mov
test
lea
push
push
movs
sbb
mov
add
jb
xchg
int
cmc
lods
arpl
or
xchg
pusha
mov
adc
push
or
imul
test
je
nop
movs
enter
bound
cmc
mov
retf
xchg
mov
lods
frstor
add
push
pop
or
fisub
dec
xor
sub
(bad)
push
xchg
in
push
jnp
daa
clc
pop
daa
mov
arpl
aaa
leave
push
(bad)
ret
movs
jg
out
jl
jle
add
aam
shl
mul
mov
test
das
(bad)
ds
dec
rol
(bad)
ins
int3
xchg
cli
cmc
aam
pushf
(bad)
fcomp
xchg
imul
aas
fdivr
push
daa
sub
ret
inc
sahf
jns
paddq
imul
pushf
repz
in
lods
icebp
push
jns
cmp
mov
cmps
mov
adc
sbb
movs
push
icebp
sub
or
stc
mov
sbb
test
popf
dec
cdq
ficomp
scas
push
or
dec
mov
sbb
xor
pop
enter
pop
fs
jnp
jo
ja
les
fistp
jo
sahf
aam
ins
and
ret
or
test
daa
jo
mov
dec
and
icebp
xlat
in
inc
js
mov
and
push
sub
sbb
nop
mov
nop
xor
fnstcw
jns
jp
(bad)
lahf
fcomp
push
movs
gs
aaa
in
div
sub
arpl
repz
and
xor
jnp
cmp
push
out
xlat
repnz
stc
in
cmp
retf
mov
inc
and
std
xor
dec
jp
sbb
jmp
(bad)
outs
push
xlat
out
sbb
mov
mov
enter
pop
jnp
jbe
xchg
or
inc
xor
imul
retf
push
pop
mov
pop
test
push
cmp
pushf
xchg
retf
push
or
repnz
and
push
inc
cmp
ds
pop
pop
and
mov
lock
loopne
push
stos
popf
sbb
adc
inc
jp
cmp
dec
lock
rcr
sti
jg
jae
push
fmul
mov
loope
aaa
cdq
and
ret
push
sbb
sti
das
push
repnz
sbb
imul
and
repz
lock
jecxz
pop
js
jns
add
pop
jo
cdq
push
jl
fisttp
lock
cmc
in
imul
xor
loopne
mov
sub
or
stos
dec
nop
inc
clc
dec
sbb
push
lods
inc
(bad)
fmul
aad
test
retf
jb
mov
movs
dec
scas
enter
std
pop
(bad)
out
aas
add
fmul
jge
or
fwait
jp
inc
sbb
push
adc
pop
int
lods
gs
je
pop
inc
dec
in
pusha
mov
xor
add
mov
xchg
jecxz
inc
(bad)
loopne
mov
inc
xor
adc
xor
(bad)
stc
loop
pop
jb
(bad)
lock
ins
loop
add
nop
mov
adc
in
stos
aaa
fisttp
inc
jae
xchg
mov
call
adc
mov
jle
mov
pop
adc
idiv
fiadd
(bad)
cmp
push
sbb
fsubr
dec
add
cmc
addr16
int3
add
or
cwde
sub
inc
push
sbb
mov
add
or
inc
ins
mov
add
xor
xor
cmp
outs
mov
pop
(bad)
in
sti
cmp
pop
(bad)
jl
movs
call
dec
(bad)
js
xor
ror
mul
cmp
mov
aam
mov
popa
add
sbb
xor
jmp
mov
sti
aas
std
add
jmp
mov
lea
push
adc
mov
daa
lds
sub
pop
call
aam
push
jbe
sub
xchg
int3
add
mov
je
sbb
xor
mov
sbb
js
cmp
jmp
scas
lds
inc
sbb
das
pushf
sahf
cdq
mov
xlat
cld
out
adc
pop
push
jo
aam
pop
sbb
or
repnz
fiadd
lods
loop
sbb
jne
sub
pop
push
in
enter
test
dec
test
(bad)
in
adc
out
leave
sub
call
xchg
pop
lods
aad
jp
addr16
pop
cmp
or
mov
adc
adc
cmp
js
xchg
cld
ficom
mov
fisub
xor
int3
add
fcmovnbe
jg
or
repz
jmp
or
jno
mov
jne
ret
shl
dec
in
push
fs
movs
add
pop
add
sbb
or
stos
cwde
(bad)
inc
or
inc
pop
fstp
ds
add
js
retf
push
dec
push
and
dec
dec
inc
or
add
xor
pop
xor
es
jl
jmp
mov
xchg
or
nop
inc
(bad)
mov
outs
lds
xor
adc
lods
out
int
jge
cmp
jg
sbb
(bad)
pop
out
sub
ror
dec
test
xchg
lds
sub
retf
xchg
ror
(bad)
and
es
sub
ror
arpl
cs
push
jno
loopne
jns
inc
out
pop
jl
xchg
jmp
outs
les
nop
(bad)
fisub
xor
sub
mov
add
push
or
jnp
pop
xchg
sti
adc
pusha
inc
pop
retf
lock
jnp
retf
mov
fwait
or
jnp
sub
mov
popa
mov
jg
test
push
stos
sahf
ins
or
xor
in
pop
lea
movs
dec
jg
scas
scas
sahf
or
arpl
add
es
push
pop
push
aas
adc
loopne
mov
loope
dec
push
ins
jne
dec
das
retf
outs
daa
cmp
pushf
cmps
sub
icebp
adc
cmp
lods
or
ins
test
mov
aam
inc
jns
mov
pop
jns
arpl
ins
repnz
mov
xchg
addr16
(bad)
in
(bad)
daa
ins
mov
cmp
cli
and
add
push
rcl
pop
call
popf
add
pop
push
or
pop
xchg
pop
adc
dec
sub
mov
dec
inc
fiadd
sbb
retf
rcl
xor
cmc
mov
das
mov
(bad)
aaa
sbb
mov
pop
mov
fcom
(bad)
sahf
inc
into
push
ds
shl
hlt
mov
push
stos
iret
xchg
and
pop
call
in
cmp
(bad)
mov
push
and
scas
mov
call
push
std
cmc
mov
xchg
adc
popa
jmp
dec
push
adc
in
mov
jns
sub
enter
es
stos
stc
cmp
jne
adc
sbb
in
push
add
aad
inc
inc
mov
mov
out
fidivr
mov
lods
xor
sub
outs
out
push
xchg
test
sbb
xchg
ins
imul
xor
or
mul
out
inc
imul
mov
pop
mov
xchg
js
mov
mov
jo
rol
xlat
retf
pushf
xor
imul
mov
cli
lds
lds
mov
xchg
cmp
iret
inc
push
ins
jg
push
pop
enter
fisttp
pop
mov
dec
leave
icebp
(bad)
jmp
jnp
enter
shr
loopne
cmps
outs
aaa
xchg
fnstsw
mov
mov
jne
shl
test
mov
mov
jbe
cs
push
test
pop
movs
test
movs
pop
je
out
int
inc
sbb
cmp
fist
pop
add
clc
inc
sbb
push
add
pop
repz
or
fisub
dec
dec
aaa
aaa
dec
push
cmps
or
inc
or
aam
nop
lds
cmc
repz
xor
xchg
iret
adc
(bad)
(bad)
fwait
add
fstp
loop
mov
ret
xor
adc
push
stos
pop
stc
xor
push
inc
dec
out
(bad)
adc
test
sbb
inc
pusha
sub
and
repnz
dec
movs
or
xchg
push
mov
mov
into
cmp
mov
sub
ret
pxor
sbb
cmp
sub
ss
fidivr
sbb
sbb
(bad)
mov
and
cmc
pop
stos
sahf
pop
sbb
int
js
and
pop
stos
loopne
cmp
fsubr
jle
scas
call
xchg
out
ja
xchg
cmp
rcl
inc
cmp
push
test
or
dec
xchg
fwait
xchg
aam
push
(bad)
je
bound
cmp
sbb
push
push
jnp
xchg
scas
cmp
jecxz
mov
addr16
adc
sbb
and
clc
and
out
dec
je
(bad)
in
repz
cmps
icebp
stos
push
mov
shl
push
inc
or
mov
or
xchg
inc
imul
pop
ins
fiadd
sbb
jo
test
or
or
adc
or
std
imul
cs
jns
aad
mov
pop
jecxz
sub
int3
maskmovq
into
pop
push
pop
repnz
adc
scas
call
mov
test
sub
stos
push
xchg
rcl
es
xor
or
in
adc
mov
mov
jne
cmp
mov
fadd
mov
sub
test
pop
mov
push
retf
lahf
push
cmp
push
cld
aaa
inc
push
ins
inc
int3
and
icebp
lock
mov
push
add
xchg
mov
jmp
push
or
mov
adc
push
sbb
cmps
mov
pop
dec
hlt
mov
(bad)
mov
in
adc
mov
push
jbe
movq
ficomp
mov
adc
addr16
adc
cmp
sbb
dec
rol
mov
rcl
cwde
sbb
dec
arpl
sbb
mov
into
ss
shl
aad
push
dec
pop
add
jg
inc
jmp
jle
push
dec
mov
(bad)
fld
cmp
mov
and
nop
jle
ds
ins
pop
es
xchg
aas
inc
je
and
pop
loope
inc
out
sahf
fnstenv
sbb
and
clc
mov
idiv
fld
adc
dec
cmc
leave
cmp
xchg
cdq
push
ret
(bad)
int3
or
and
pop
jmp
dec
mov
push
scas
sahf
and
inc
outs
dec
xchg
mov
test
push
pop
jo
popa
stos
cmp
and
inc
mov
movs
cmp
jmp
clc
mov
dec
loope
adc
mov
cdq
jge
or
inc
xor
adc
adc
outs
pop
and
jns
(bad)
xlat
and
arpl
out
adc
xor
in
test
fcmovnbe
lock
inc
popa
clc
leave
jae
push
fld
icebp
push
fnstenv
sub
xor
int3
sbb
and
dec
test
jbe
jmp
sub
sub
sub
inc
js
xchg
es
mov
inc
pop
cmc
dec
loopne
bound
cmp
ret
xor
and
mov
dec
xchg
fdivr
mov
jmp
pop
imul
mov
sub
or
push
jmp
jecxz
or
mov
vpshab
xor
stos
mov
dec
pop
fld
imul
mov
movs
inc
int3
mov
movs
addr16
jnp
sbb
cmp
inc
xor
in
or
pop
icebp
imul
mov
imul
jge
icebp
inc
mov
push
xor
jbe
pop
sub
cdq
cmp
mov
push
(bad)
loope
jle
ret
push
imul
and
push
mov
js
imul
call
cdq
mov
jg
aaa
and
loop
mov
mov
pop
adc
mov
mov
mov
rcr
mov
int3
loopne
push
(bad)
(bad)
jbe
add
jbe
jg
mov
pop
inc
mov
push
pop
cmp
movs
les
ret
add
inc
je
out
dec
adc
cmc
ins
push
lock
or
xchg
sub
stos
mov
add
mov
mov
add
pop
cmps
xchg
scas
pusha
out
add
mov
fs
lock
sti
test
dec
arpl
mov
dec
sahf
add
jbe
sbb
pop
pop
jno
adc
or
dec
mov
xor
jmp
and
test
mov
or
xor
movs
push
out
jnp
mov
sahf
cmp
jbe
xor
ret
mov
lock
sub
jge
out
popf
dec
pop
cmps
adc
cld
sbb
mov
mov
mov
loopne
mov
mov
jl
mov
mov
retf
push
inc
xlat
imul
dec
jl
ret
push
or
and
mov
and
popf
lock
mov
cmp
cwde
dec
jne
iret
or
mov
daa
push
jae
loop
cli
jbe
(bad)
mov
inc
add
fnsave
cmps
test
lahf
lea
fild
mov
pusha
stos
xor
xchg
dec
xor
in
push
into
mov
dec
in
pop
or
push
xchg
mov
mov
gs
out
add
jp
push
mov
movs
stos
xchg
mov
xchg
lds
jecxz
cwde
(bad)
scas
adc
test
adc
xor
or
inc
mov
ds
imul
push
daa
jp
fbstp
inc
cmp
(bad)
adc
add
scas
adc
into
mov
inc
aaa
retf
cmc
jmp
into
inc
test
or
mov
jb
xchg
jne
inc
loopne
retf
nop
sbb
(bad)
das
or
std
mov
push
push
ret
(bad)
push
mov
loope
loopne
inc
hlt
rcr
ja
test
pop
cmp
sar
jmp
mov
mov
stos
mov
add
imul
mov
adc
rcr
fisttp
xor
movs
dec
mov
es
push
add
mov
add
cdq
xchg
rcr
push
inc
in
mov
cwde
inc
push
pop
iret
pop
jge
pushf
jno
mov
jl
mov
cmp
ins
sub
fs
jbe
lahf
lea
stc
cmp
mov
call
push
sbb
into
inc
sti
inc
sahf
movs
cli
or
popa
pushf
dec
sub
iret
ucomiss
pop
in
mov
cmp
and
in
test
popf
jnp
aas
(bad)
xchg
inc
inc
sub
mov
adc
out
inc
repz
retf
mov
rcl
mov
or
sbb
stc
out
sbb
test
aas
outs
leave
arpl
and
cmp
cmp
fxam
push
out
adc
mov
lock
mov
and
fidivr
push
(bad)
out
rcr
mov
int3
dec
xchg
and
mov
inc
lods
ficom
push
sbb
into
mov
ret
xchg
mov
in
cdq
aaa
push
je
fcmovnu
arpl
in
aad
sbb
test
mov
or
daa
inc
xchg
mov
rcl
jecxz
repz
rol
push
adc
(bad)
jbe
stos
add
int3
push
call
movs
cmp
push
push
fs
inc
pusha
gs
loop
cli
scas
mov
leave
push
bound
movs
dec
out
pop
pop
(bad)
adc
ins
arpl
mov
cmc
ffreep
les
pop
inc
mov
pop
fs
mov
stos
in
nop
ss
mov
pop
push
lock
aad
xor
inc
push
neg
sub
imul
aam
fistp
imul
cs
imul
or
icebp
xchg
pop
in
pop
or
mov
dec
sbb
mov
gs
popf
popa
mov
mov
cmp
adc
aad
stc
shr
cdq
or
add
imul
pushf
dec
push
pusha
jmp
sti
or
pop
pusha
cmps
outs
cli
in
inc
out
add
push
(bad)
mov
aad
ret
xchg
test
xchg
in
push
add
jnp
fisttp
cmps
inc
ret
inc
pop
adc
add
or
ret
push
cmp
in
lahf
and
fisub
shl
mov
adc
out
test
mov
pop
nop
call
stc
push
xchg
outs
sbb
(bad)
jmp
jle
and
mov
xor
popf
cmps
pop
fbstp
xchg
sbb
cs
pop
jne
cmp
jg
rcl
(bad)
adc
sub
jmp
and
test
out
std
sti
xchg
shl
adc
fiadd
push
rcl
mov
pop
es
push
pop
cmp
push
ins
shl
mov
mov
xchg
inc
xor
mov
cmps
jl
outs
loope
cmp
add
cmc
pop
scas
loope
sub
fs
mov
retf
sub
cwde
add
pop
adc
es
fst
inc
mov
loopne
sub
icebp
test
mov
xchg
add
scas
add
cld
mov
pusha
sub
popa
sbb
fadd
push
push
(bad)
daa
push
add
in
adc
shl
ins
aas
inc
inc
push
neg
or
and
push
hlt
cmp
ss
mov
mov
iret
cmove
or
xor
(bad)
pop
jge
push
and
mov
out
pop
and
jbe
jmp
fwait
outs
mov
adc
jp
add
mov
outs
aaa
push
mov
xchg
push
dec
repnz
les
jmp
fldenv
int3
or
pop
popf
out
dec
sar
pop
js
cmps
mov
or
xchg
hlt
mov
fcmovne
xchg
push
pop
mov
mov
cdq
sti
lahf
jmp
fld
js
xor
xor
popf
ftst
inc
gs
fs
lods
fs
cmp
push
cdq
pop
dec
sub
fcom
cmp
jnp
mov
sbb
ss
sub
ins
jp
jne
mov
and
retf
mov
dec
pop
stc
mov
imul
in
sti
jp
mov
sub
out
inc
inc
pmaxub
xor
das
cmp
mov
retf
mov
into
inc
jg
(bad)
fdivr
dec
ror
fld
jae
gs
and
test
sahf
add
mov
shl
push
mov
push
push
popf
mov
aaa
dec
repnz
push
xchg
cmp
dec
jne
xchg
add
adc
add
js
mov
xor
scas
xor
jecxz
fimul
push
stos
in
loop
int
cmps
arpl
stos
pop
sub
fisubr
add
(bad)
jae
lds
mov
jp
mov
popf
mov
out
sub
shl
test
mov
xlat
movs
loop
xlat
xor
jle
adc
shr
push
outs
loopne
ficom
loop
bound
adc
cdq
lods
pushf
inc
push
and
(bad)
jmp
fldenv
neg
cwde
test
and
cmps
xchg
int
dec
xchg
adc
mov
fldln2
xor
mov
stc
aam
int
jo
icebp
aam
popa
ja
sub
hlt
int3
and
cmc
sub
pop
cs
adc
mov
in
mov
jecxz
add
mov
xchg
cwde
bound
je
call
sbb
std
stc
push
pop
cld
sbb
inc
addr16
out
imul
adc
ficom
dec
scas
dec
mov
inc
aad
(bad)
push
pop
mov
jecxz
mov
adc
sti
xchg
mov
ss
fst
mov
xchg
loop
shl
jmp
pop
imul
jl
jecxz
sub
aaa
or
add
outs
or
nop
pop
fnsave
in
cmps
dec
jge
in
fisub
mov
test
sbb
call
xor
lock
(bad)
lock
mov
mov
data16
pop
repz
xor
cmps
pop
loope
jns
adc
nop
rcl
addr16
iret
lds
xor
ror
rcl
out
push
add
shr
lods
cmps
jecxz
(bad)
fisttp
pop
shl
xor
dec
stos
jno
pop
hlt
jge
call
shl
stos
xor
ins
add
ins
enter
pop
jne
pop
outs
out
es
pushf
mov
dec
add
jb
adc
mov
inc
repz
mov
dec
or
push
loopne
jns
sbb
pop
iret
cmc
inc
or
push
ror
test
mov
or
dec
movs
(bad)
pop
enter
and
sar
enter
mov
push
daa
jle
out
fsubr
into
movs
jecxz
xchg
ret
in
mov
cmp
cmps
inc
or
push
icebp
rcr
popa
outs
inc
dec
xor
shl
arpl
out
mov
out
mov
push
inc
test
sbb
and
test
push
pop
enter
out
sbb
push
jle
cmp
call
(bad)
mov
repz
mov
inc
push
xchg
outs
test
mov
xchg
sub
rol
jb
pop
push
mov
stos
xlat
leave
pop
iret
add
sar
aad
inc
repnz
or
push
push
jne
aaa
mov
sbb
gs
int
pop
pop
sub
int
pop
adc
pop
mov
pop
(bad)
cld
lock
xchg
ret
mov
out
inc
xchg
icebp
dec
(bad)
adc
pop
inc
(bad)
jmp
fcmovu
ret
inc
jge
xchg
sbb
mov
inc
test
push
inc
(bad)
imul
in
push
mov
push
retf
jo
scas
outs
enter
gs
test
sbb
jnp
push
pop
and
hlt
ror
mov
jae
jae
adc
mov
inc
js
fnsave
push
inc
enter
and
mov
and
shr
aad
sahf
cmp
loope
inc
leave
xor
add
in
xchg
push
jmp
fdivr
rcr
dec
jl
(bad)
mov
sub
arpl
add
mov
aas
push
(bad)
dec
hlt
jle
inc
push
stos
movs
in
xchg
(bad)
mov
(bad)
ins
out
addr16
xchg
push
rcl
pop
fisubr
(bad)
push
out
cli
pop
jl
bound
or
ret
pop
cld
mov
rcr
arpl
xchg
and
jo
xor
stos
xor
fucom
push
stos
xor
and
add
pop
pop
loopne
push
fisubr
fldcw
ret
or
mov
test
stc
cmp
sbb
fnstcw
cmp
push
lds
dec
xchg
mov
outs
aam
nop
push
cli
stos
jb
jg
add
(bad)
sti
jge
test
dec
lahf
add
hlt
and
and
stos
call
dec
push
out
xor
imul
data16
cdq
cmc
jno
inc
test
push
jmp
cs
fisubr
sub
in
in
inc
inc
or
or
jge
ins
test
outs
xchg
stc
pusha
stos
pop
int3
and
pop
inc
(bad)
sti
mov
jecxz
iret
repnz
push
mov
or
aas
movs
enter
xchg
int
in
call
sub
addr16
jmp
int
std
sbb
xchg
and
in
inc
cmp
xchg
ins
cmp
movs
xor
mov
test
dec
cwde
pop
outs
sti
add
sar
jno
int3
dec
popa
call
inc
imul
sub
jp
icebp
sbb
mov
push
cmp
mov
pusha
fidivr
inc
jle
sub
dec
xchg
jmp
and
(bad)
pop
pushf
xchg
pop
mov
adc
jmp
shl
(bad)
out
or
xchg
ja
dec
test
or
xchg
mov
rol
pop
aas
movs
mov
arpl
jmp
push
int3
mov
test
mov
fisub
popa
faddp
push
xchg
fmul
outs
mov
jne
les
pop
sub
and
push
push
fdivr
cmc
mov
push
pushf
cmp
push
mov
mov
rcl
adc
xchg
mov
ja
and
mov
rol
jle
push
xchg
inc
or
fxtract
arpl
push
sub
ror
cmp
pop
jp
mov
aam
stc
or
add
mov
jae
movs
cmc
xor
ss
mov
fstp
cwde
pop
dec
cld
loop
or
jbe
repz
cmp
movs
repnz
mov
or
add
retf
mov
ret
pop
jp
mov
outs
push
or
dec
popf
inc
aad
fistp
mov
call
call
out
stos
pop
sub
inc
enter
jmp
in
inc
int
push
and
inc
cmp
sbb
inc
xchg
sub
pop
xchg
mov
or
gs
adc
dec
ins
outs
dec
loope
fadd
jns
(bad)
xor
popa
xor
ret
cmp
fs
xor
cmp
fmul
cli
mov
daa
mov
xor
mov
into
fwait
pop
outs
iret
ret
call
sub
jl
xchg
cmp
pop
movs
mov
out
outs
ret
inc
test
loop
inc
jg
imul
xchg
pushf
dec
stc
test
xchg
inc
pop
ds
adc
xchg
jmp
daa
push
mov
in
mov
jae
popf
lods
mov
push
cmp
push
xor
mov
or
rcr
push
sub
outs
inc
or
mov
xor
push
xchg
(bad)
ror
imul
lods
int3
je
mov
add
das
clc
cdq
addr16
cmps
sub
push
mov
mov
mov
push
and
ins
mov
or
xchg
mov
repz
fnsave
gs
push
cmp
das
push
adc
adc
dec
cmc
xor
or
adc
sbb
push
or
or
or
dec
repz
cmp
xlat
psubsb
sub
push
cmp
sbb
sahf
mov
dec
xlat
not
jo
loope
sbb
into
nop
fdivr
test
xchg
xor
repz
pop
adc
fsubr
xchg
mov
dec
les
mov
cmp
pop
sbb
mov
add
shl
dec
outs
push
sub
xlat
out
les
icebp
jae
push
shl
std
jb
add
ins
xor
mov
cmp
leave
sub
and
adc
xchg
inc
out
sbb
lods
push
out
xchg
imul
and
jno
in
cmp
mov
cmps
mov
sub
inc
icebp
shl
push
cmp
pop
sub
jle
imul
pop
mov
fcmovnb
add
xor
ret
lea
mov
and
enter
in
cwde
jnp
out
push
call
jne
jne
sub
(bad)
adc
and
paddd
fcmovne
lahf
out
stos
mov
or
retf
(bad)
and
in
add
daa
rol
xor
in
pop
push
arpl
adc
lods
xor
arpl
cs
shr
arpl
jbe
mov
ss
fdivp
push
popf
loop
sub
(bad)
cmp
fnstsw
mov
jbe
into
fadd
mov
inc
cwde
loopne
mov
add
jb
bound
adc
out
jns
adc
dec
xchg
pop
outs
in
mov
int
clc
call
push
imul
adc
pop
not
aam
dec
(bad)
out
std
mov
xchg
retf
imul
push
jmp
mov
mov
or
lods
call
mov
out
sar
sbb
mov
or
out
ss
jb
lods
inc
cmp
sbb
cld
mov
test
jae
add
cmps
mov
jle
push
pop
(bad)
and
icebp
dec
pop
test
mov
fwait
or
in
xor
dec
loope
and
pop
pushf
and
jnp
pop
sub
xor
xchg
jo
out
mov
dec
jmp
les
or
scas
pop
pop
es
jecxz
leave
out
xlat
test
int3
cmp
(bad)
push
movs
fidivr
loop
psllw
int3
test
push
pop
retf
scas
idiv
test
cmp
test
scas
and
cmps
shr
cdq
lods
dec
adc
sbb
xchg
mov
push
btr
mov
sub
pop
in
adc
adc
mov
popa
pop
fild
mov
mov
mov
jg
stos
repz
popf
out
dec
push
fs
mov
mov
mov
mov
fmul
test
adc
xchg
xchg
hlt
adc
mov
pop
dec
push
aas
leave
mov
push
shl
bound
xor
sbb
ja
push
sti
or
mov
xchg
popa
repnz
aaa
mov
jae
and
in
push
movs
xor
lods
aad
mov
dec
xchg
test
add
aam
sbb
std
mov
test
sbb
sub
test
cli
add
jp
mov
xchg
xchg
(bad)
and
mov
movs
fbstp
fsub
(bad)
mov
mov
div
or
xchg
neg
lahf
and
xor
push
popa
loope
mov
ds
or
or
push
push
mov
dec
fisub
jne
ins
mov
shl
cdq
inc
in
and
xchg
cmps
add
out
pop
pop
mov
(bad)
das
dec
adc
cmps
mov
test
add
sar
push
and
das
cld
je
lods
icebp
(bad)
or
rcl
das
hlt
daa
pop
lods
cmp
mov
xor
and
sbb
jb
rep
push
(bad)
push
and
ret
inc
xchg
push
out
cwde
imul
push
push
fisttp
xor
je
cmp
fst
retf
hlt
mov
movs
sbb
mov
(bad)
out
aas
inc
cpuid
dec
jecxz
sub
(bad)
sbb
and
mov
push
cmp
(bad)
jo
mov
mov
pop
adc
jp
push
push
pop
mov
sbb
(bad)
pushf
push
push
or
inc
push
inc
mov
dec
and
stos
lock
xor
pusha
jns
test
pop
setle
xchg
pop
imul
shl
mov
and
adc
push
mov
ins
cmp
int3
dec
push
outs
jmp
mov
jo
test
inc
sahf
sub
pop
push
adc
mov
mov
bnd
jnp
jge
push
xchg
out
cmp
neg
xchg
fcmovne
sub
test
pop
or
or
lahf
adc
cmp
add
pop
cli
pop
femms
adc
inc
inc
sub
mov
int
in
jl
push
int3
jge
gs
test
xchg
mov
out
pop
mov
iret
pushf
fadd
fidivr
ds
inc
loopne
cmc
jp
in
jge
sub
mov
or
pop
in
mov
sti
xor
hlt
aas
ror
push
icebp
sbb
push
xor
fcomp
adc
adc
push
fwait
dec
out
jnp
bound
push
jecxz
(bad)
pushf
jne
sub
push
neg
fs
pop
test
push
sbb
lods
xor
add
cli
xor
xchg
inc
dec
movs
shl
jne
sub
inc
enter
pop
fsub
push
push
pop
movs
out
fstp
xor
or
mov
cmp
push
sub
add
cmp
push
xchg
jle
data16
ins
jmp
mov
sbb
call
(bad)
imul
xchg
push
dec
and
sahf
aad
mov
and
(bad)
mov
aad
mov
or
sub
adc
cmps
push
std
or
test
pop
sub
lds
jle
int
pop
es
sub
pop
cs
dec
xchg
pop
lods
mov
daa
push
jb
into
aaa
pop
pop
xor
push
add
mov
aas
not
aam
mov
fdivrp
jbe
mov
or
test
leave
mov
scas
xchg
daa
xor
je
ret
nop
mov
xchg
rol
mov
in
call
pop
out
ins
(bad)
dec
call
cld
lock
mov
cmps
pop
jle
sbb
shr
jns
out
test
inc
sub
jno
or
(bad)
push
dec
sbb
inc
dec
mov
cmp
mov
cmp
bound
ins
not
jp
aaa
mov
inc
mov
pop
and
stos
daa
cmps
jle
paddb
add
mov
push
jmp
cs
push
or
(bad)
fnstsw
es
jmp
repz
inc
int
xor
mov
cmc
out
or
sub
sub
dec
dec
adc
pop
iret
fisubr
push
retf
lds
jo
sbb
mov
mov
(bad)
mov
jle
cmp
xor
push
xchg
push
jae
cmp
in
jns
mov
bound
mov
movs
push
shr
pop
loope
pop
jb
mov
push
gs
pop
sub
cmp
mov
scas
adc
nop
je
xor
(bad)
jecxz
cmp
jp
loope
or
adc
inc
and
repnz
jge
jmp
outs
call
add
pop
mov
loopne
and
mov
jno
jnp
or
dec
mov
pop
inc
xchg
push
enter
aaa
push
retf
jo
fnstsw
sar
stos
call
fwait
sbb
inc
int
xchg
call
shr
hlt
jmp
loop
pop
jns
mov
jecxz
nop
push
aad
xchg
fistp
out
loope
cmp
cmc
ror
mov
push
sbb
dec
jnp
imul
mov
push
call
out
(bad)
outs
fimul
(bad)
std
push
pusha
jo
rcr
pusha
ins
xchg
loop
aaa
movs
mov
xor
daa
or
adc
adc
or
ret
jge
xor
fcmove
arpl
(bad)
in
sbb
push
aam
push
push
adc
xor
cdq
fbld
mov
movs
pop
or
call
fcom
in
jmp
sub
(bad)
push
int3
xchg
leave
aaa
ins
cmps
xchg
stos
and
pop
pop
cmps
pop
js
arpl
dec
add
in
push
out
stc
mov
mov
jp
mov
push
outs
aas
inc
(bad)
mov
push
sub
les
jne
and
inc
fmul
ins
lods
dec
sub
add
mov
mov
xor
stc
and
rcr
cmp
and
and
test
enter
jno
cmp
in
mov
out
jb
into
das
out
stc
mov
imul
jnp
jne
or
mul
mov
xor
pop
and
js
jp
movs
sti
pop
imul
jmp
ins
jo
test
sub
xor
inc
rcr
xchg
mov
mov
inc
pusha
jmp
sub
xor
adc
add
xchg
clc
shl
adc
fwait
adc
cli
fwait
lods
mov
neg
aaa
sbb
mov
or
adc
loop
dec
rcl
loop
push
xlat
into
mov
fiadd
mov
(bad)
ins
dec
fnsave
in
outs
adc
cmp
push
test
adc
jnp
in
xor
cmp
das
xor
adc
mov
stos
inc
dec
mov
ds
jl
xlat
or
jb
cld
pop
mov
cs
imul
pop
call
stos
cmp
repnz
and
sub
outs
ret
in
fs
daa
aaa
(bad)
arpl
xchg
mov
xchg
test
mov
or
dec
jno
and
dec
lods
sub
inc
test
fist
ret
sub
fpatan
mov
or
je
(bad)
adc
dec
(bad)
dec
inc
(bad)
cli
mov
das
pop
stos
call
sub
cwde
jb
inc
test
shr
lock
pop
add
neg
adc
mov
outs
push
jecxz
test
test
call
dec
and
jmp
add
and
fisttp
mov
fadd
mov
cmp
int
xor
dec
pop
dec
mov
push
and
inc
ret
stc
sbb
jp
mov
dec
cmps
xchg
cmps
addr16
pop
xor
sbb
popf
loopne
aas
test
and
mov
mov
or
adc
mov
mov
jmp
mov
pop
arpl
sub
fisttp
repnz
add
pmaxub
pop
xor
je
jg
xor
xlat
gs
rcr
jp
outs
movs
test
clc
cmp
xchg
loopne
int
and
pop
fisttp
imul
cmps
fistp
lock
jmp
fdivr
(bad)
(bad)
jo
dec
out
pop
sbb
scas
dec
test
stc
xchg
xchg
sbb
add
push
push
retf
jns
xor
inc
xchg
xlat
retf
inc
pop
les
fimul
std
dec
jne
aam
mov
in
sub
mov
int3
and
and
mov
mov
or
idiv
xor
fstp
xor
test
div
cmp
outs
adc
xchg
xchg
push
je
push
lods
fmul
xor
into
or
idiv
pusha
jno
(bad)
retf
lods
(bad)
sub
mov
jbe
icebp
jl
jnp
cmp
popf
push
xchg
mov
fmulp
je
bound
lahf
pushf
push
repz
add
test
stos
dec
in
mov
add
jmp
xchg
and
(bad)
gs
repz
ins
out
loopne
and
xchg
cdq
shr
clc
popf
mov
jg
iret
ret
cmp
and
xor
test
mov
adc
push
add
adc
pop
imul
mov
stc
adc
mov
cmp
stos
or
sub
int
push
adc
inc
repz
add
and
cmps
dec
mov
cmp
call
popa
(bad)
cmp
arpl
xchg
lahf
lods
stos
int3
push
in
or
shr
mov
mov
ja
dec
adc
pop
inc
dec
jo
jmp
jmp
lds
test
int3
cmp
int3
or
inc
mov
test
mov
cs
mov
mov
sub
in
enter
jae
sbb
jo
jmp
jg
data16
es
push
sub
dec
(bad)
and
popa
loopne
xlat
cmp
lahf
push
(bad)
stc
or
cmp
(bad)
cld
call
jmp
push
adc
add
and
xor
xor
out
sub
inc
adc
aad
and
inc
mov
and
cmc
(bad)
pop
fsubp
sbb
loope
js
push
jb
js
push
pop
hlt
or
mov
xor
popa
ss
pop
xor
test
bound
cmp
sub
sbb
jne
xchg
jno
stc
gs
push
xchg
inc
js
or
pop
sub
retf
cdq
jnp
mov
(bad)
dec
xor
push
sub
cli
mov
push
loope
sar
retf
arpl
cmp
mov
les
leave
or
fisttp
aaa
sbb
arpl
jnp
jno
stc
xor
movs
sub
xlat
adc
mov
cmc
stos
pop
rcl
jg
xor
or
dec
lods
cdq
jne
stc
scas
push
outs
imul
mov
mov
cli
out
test
pop
neg
test
add
xchg
js
shl
sar
jbe
movs
xchg
xchg
adc
data16
scas
repnz
sti
mov
adc
xchg
mov
xchg
xchg
sar
pop
ins
mov
pop
mov
cs
mov
imul
daa
not
mov
lods
aaa
int3
(bad)
(bad)
sub
ds
ins
mov
into
xchg
pop
xchg
mov
sar
test
loopne
lahf
pop
mov
int
inc
xchg
fcomi
out
aas
sbb
jae
sar
push
push
call
mov
shl
mov
repnz
scas
lock
popa
mov
mov
and
dec
data16
cmp
and
or
cwde
gs
pushf
push
xchg
mov
sar
test
pop
xor
cmp
jecxz
lock
xchg
arpl
or
jnp
and
jp
imul
or
or
xor
dec
add
cmps
jecxz
test
(bad)
ins
inc
das
icebp
xchg
push
push
jmp
outs
inc
sbb
or
mov
mov
pushf
add
cmp
loopne
loop
inc
push
jne
pop
mov
loopne
int
mov
(bad)
mov
popa
dec
sub
(bad)
push
repnz
div
sub
pop
loopne
add
or
int3
cmp
push
call
in
jno
int3
cmp
je
shl
mov
popf
js
push
or
mov
mov
sub
xor
xor
cmp
cmp
iret
inc
aaa
stc
inc
mov
cmp
xchg
repnz
stos
push
jmp
dec
(bad)
xchg
cmps
xor
scas
jb
imul
mov
adc
mov
repnz
aaa
inc
jecxz
aas
add
jecxz
test
push
fcmovne
pop
call
adc
(bad)
pop
mov
leave
adc
je
push
out
pop
and
retf
sub
xor
jmp
jns
push
mov
dec
inc
adc
sti
stos
cli
jae
xor
mov
xchg
ror
mov
rcl
lea
dec
and
cmps
mov
jno
jmp
xchg
imul
dec
sub
fcmovnb
ins
mov
aam
inc
dec
enter
hlt
test
xchg
test
call
xor
xchg
leave
(bad)
fisubr
xor
sar
cmp
out
addr16
mov
aad
pusha
outs
(bad)
push
scas
sub
cmp
(bad)
xor
jne
push
into
mov
mov
call
repz
retf
mov
js
add
push
and
jg
xchg
(bad)
pushf
pop
mov
mov
sub
adc
aas
sti
nop
sbb
lods
sub
rcl
imul
or
jg
inc
fwait
pop
call
imul
sbb
mov
ins
stc
sti
fbstp
aam
in
inc
cmp
xor
mul
cmp
adc
(bad)
ins
cdq
xchg
or
jne
cmp
sbb
stc
in
aaa
cli
iret
mov
jge
mov
pushf
push
adc
inc
das
jne
sbb
aam
push
push
xor
repz
rcl
jmp
pop
leave
jmp
or
xchg
xchg
mov
mov
test
gs
scas
xor
cmp
pop
ins
sbb
test
dec
mov
sub
jl
sub
dec
sub
js
xlat
inc
adc
addr16
push
lods
std
adc
test
cmp
stos
shl
(bad)
(bad)
jl
adc
or
out
push
inc
adc
daa
loope
push
or
jle
push
pusha
in
rol
(bad)
xor
ins
jmp
add
mov
ins
lods
xchg
adc
sar
(bad)
jns
(bad)
push
cdq
enter
or
jne
push
push
inc
jmp
pop
or
cmc
cmp
and
cmp
xor
pop
cwde
sbb
scas
fimul
xchg
lahf
aas
test
xchg
test
sbb
retf
mov
pop
mov
push
repnz
pop
mov
jmp
lods
add
ins
bound
pop
adc
adc
lods
mov
ins
push
div
xor
cmp
aam
fwait
imul
xchg
mov
adc
out
jbe
das
test
jo
ja
inc
push
xchg
and
adc
sub
inc
ja
jne
lock
sbb
mov
cmp
fwait
int
(bad)
jmp
ret
mov
jo
sbb
jp
stos
xchg
ins
neg
movs
jp
jnp
sbb
stos
fxam
push
jnp
dec
out
loope
cmc
retf
test
pop
outs
jmp
rcl
sbb
dec
cmps
push
sahf
mov
frstor
adc
rol
out
in
aam
mov
fimul
lea
pop
xor
(bad)
stos
addr16
inc
xchg
push
movs
lahf
adc
popa
int3
das
in
cmp
sbb
push
mov
std
(bad)
fisttp
loop
ins
sti
mov
in
fld
adc
aam
jo
lods
into
pop
jnp
xor
repz
cmp
inc
out
mov
push
push
jp
fdiv
or
icebp
dec
xchg
sbb
ret
lods
dec
adc
or
inc
xor
jne
add
jnp
xchg
mov
dec
stc
pop
out
sub
pop
push
(bad)
sbb
pop
push
cmps
mov
leave
add
mov
sahf
fild
jmp
adc
add
lea
mov
dec
aam
and
or
stos
mov
jne
sar
leave
cmp
ss
in
sar
cmc
movs
leave
and
adc
sub
add
push
mov
cmp
adc
cmps
(bad)
xor
fs
into
fisub
das
mov
inc
cmps
or
ins
(bad)
adc
push
cmp
xchg
stos
daa
mov
pop
pop
or
xor
push
pop
and
or
sbb
sbb
mov
xor
jno
mov
jmp
jbe
aam
adc
ja
inc
mov
jo
jmp
ins
push
jbe
cli
dec
hlt
adc
loope
cmp
repz
cli
lahf
movs
jg
sbb
cmp
xor
data16
repz
leave
jnp
lds
mov
mov
xchg
pop
push
lahf
pop
push
bt
(bad)
xor
repnz
in
shl
mov
fdiv
fst
cmp
scas
jg
aaa
fdivr
sub
sub
retf
imul
jno
mov
(bad)
div
int
jecxz
test
add
sbb
xlat
mov
mov
pop
inc
add
push
or
test
fxtract
jmp
cmc
fdivp
jnp
test
add
push
popf
stos
pop
mov
paddusb
jo
arpl
xchg
mov
xchg
adc
push
jae
in
xlat
or
fisttp
addr16
std
sub
mov
lock
fsub
jmp
mov
stos
ret
cmc
aas
call
out
es
inc
xchg
mov
jb
imul
lods
seto
cli
sbb
push
add
imul
shr
das
out
sahf
sti
jecxz
push
pop
retf
cld
push
mov
sub
loopne
ss
jo
cs
ins
stc
(bad)
gs
out
cld
shr
jmp
stos
mov
int
shr
repnz
nop
ds
cmp
push
jae
fnstenv
add
pop
dec
ins
push
push
and
jmp
jbe
fstp
sub
sbb
dec
push
enter
push
daa
or
cmp
in
or
nop
repz
mov
jne
iret
pop
or
jmp
inc
daa
push
sti
loop
cld
add
jmp
mov
and
jmp
in
inc
call
jnp
xchg
inc
pop
cld
(bad)
xor
or
xchg
pop
jecxz
push
xor
sbb
iret
push
pop
test
(bad)
push
pop
imul
push
pop
adc
std
std
add
xor
jl
stos
jge
and
ss
xchg
mov
adc
and
inc
adc
into
test
arpl
pop
int3
scas
inc
movs
out
jmp
dec
scas
sbb
mov
aam
out
fisttp
(bad)
aad
jecxz
mov
cmp
scas
retf
stos
dec
mov
stc
pop
xor
xchg
mov
stos
ins
mov
ja
mov
fcomp
call
fwait
pop
or
das
shl
sub
out
push
test
das
inc
xchg
into
cmp
pusha
in
cmp
fmul
loope
das
shl
rol
pusha
add
inc
sar
sub
inc
fdivr
cli
iret
test
loop
stos
push
sub
adc
dec
push
xor
inc
add
and
mov
mov
sub
movs
sbb
pop
sbb
outs
fs
test
call
pop
in
pop
stos
gs
nop
retf
sub
push
sbb
push
mov
sar
in
cs
cmp
ret
jp
sub
fsubr
fcomi
mov
dec
add
cli
pushf
pop
in
fsub
jbe
sbb
ss
pop
mov
retf
cs
inc
ds
imul
xor
aad
rcr
pop
sbb
mov
lods
push
mov
rol
ds
repz
sub
cmp
jge
or
pushf
jp
aas
or
xchg
es
enter
popa
hlt
imul
mov
xor
adc
mov
into
inc
imul
data16
frstor
aam
dec
stc
jnp
sub
test
aas
xchg
(bad)
in
(bad)
iret
mov
push
sub
jmp
adc
mov
repnz
lods
xchg
cmp
mov
xchg
jmp
ss
lds
push
or
iret
stos
out
jbe
int3
and
and
xchg
jnp
jg
xchg
cmp
fistp
and
mov
fs
rcr
call
and
xchg
retf
cwde
jge
sbb
inc
fisub
add
and
adc
mov
clc
inc
xor
repnz
ret
pop
lahf
jmp
stc
mov
pop
clc
mov
fnsave
xor
cmps
push
aaa
jl
push
scas
jge
clc
mov
adc
popf
jmp
jmp
dec
add
cdq
add
stos
xor
push
xor
mov
lods
mov
daa
popf
jno
xchg
imul
out
jg
imul
push
cmps
mov
pop
xor
into
add
ins
sbb
push
jp
in
clc
jnp
push
inc
clc
mov
int
jb
mov
lods
sub
mov
addr16
push
inc
adc
jmp
inc
inc
mov
sbb
xor
mov
xor
add
cmp
cmp
cmp
and
stc
sti
fldcw
jno
fstp
daa
xor
mov
imul
mov
mov
jp
push
adc
das
mov
paddb
(bad)
xchg
bound
jmp
sbb
leave
pop
retf
popa
repnz
dec
inc
call
retf
sub
xchg
xor
mov
pop
ins
jmp
into
pop
mov
(bad)
popa
test
inc
fucomp
fst
push
into
pushf
xor
sbb
pop
popa
sti
mov
mov
ins
ins
nop
clc
ret
sahf
sti
nop
mov
mov
sar
repz
dec
loop
dec
repnz
call
mov
and
stc
adc
dec
push
out
adc
sbb
out
ins
push
clc
jo
sub
ret
sbb
mov
pop
daa
mov
xor
int3
shr
gs
out
in
or
stos
int3
pusha
(bad)
or
std
pop
js
xor
imul
pop
xchg
div
ins
ss
loope
push
push
xor
adc
adc
xchg
out
push
retf
mov
syscall
gs
ret
add
add
adc
jo
das
mov
or
inc
and
and
push
std
popf
imul
hlt
jne
xlat
ret
cmp
mov
dec
inc
cmp
push
sub
inc
add
push
xchg
xchg
push
rcr
ins
aas
imul
adc
cli
test
movs
cmp
jl
xor
hlt
loopne
jno
retf
repz
sub
fisttp
ffreep
das
pop
dec
dec
movs
sub
add
test
stc
mov
and
fldenv
push
in
popf
icebp
or
cdq
in
shl
sbb
mov
mov
xor
mov
dec
sub
hlt
mov
stos
lahf
xchg
pop
sub
cld
and
xor
imul
ins
shl
xchg
pop
push
mov
cmps
popa
scas
loop
add
mov
lds
stos
mov
xchg
movs
push
sbb
mov
dec
cld
inc
sbb
mov
add
mov
pop
shl
jns
sub
imul
test
popa
mov
popf
jne
mov
dec
ja
push
and
js
sub
pop
dec
xor
pop
mov
movs
cmc
pushf
jne
cmp
repnz
dec
inc
xchg
add
mov
nop
jp
(bad)
out
push
inc
sub
jns
pop
call
inc
push
aad
and
pop
clc
xor
(bad)
mov
xchg
fldcw
(bad)
out
sahf
pcmpeqw
pop
int
inc
loope
jge
or
in
push
jl
mov
dec
or
add
aas
cmc
jl
xchg
pop
movs
hlt
mov
sar
dec
leave
pop
and
lds
(bad)
cmps
out
mov
or
in
xchg
movs
xor
aaa
dec
sbb
popa
mov
xor
cs
shr
xor
cld
push
shr
int
sbb
mov
pusha
lds
shl
sub
inc
and
push
nop
jae
pop
mov
cmp
or
jns
pop
inc
sbb
push
push
arpl
xchg
xchg
sbb
shl
or
xchg
push
pop
pop
adc
jl
aam
adc
movs
(bad)
sbb
mov
adc
retf
(bad)
xchg
sub
call
mov
xchg
mov
push
push
add
popf
test
sub
ficom
inc
cli
arpl
fsub
pop
xchg
mov
pop
add
pop
jle
xchg
ret
mov
xor
or
movs
lods
out
test
xor
ss
bts
or
pop
xor
add
icebp
sub
pop
repnz
mov
test
and
addr16
mov
mov
xchg
jae
dec
div
clc
jp
sub
imul
mov
mov
mov
cmps
shl
xor
sub
dec
inc
out
btr
add
dec
or
and
dec
shl
into
mov
mov
pop
stc
pop
push
dec
dec
push
or
mov
fisttp
jnp
jg
jne
daa
and
(bad)
daa
mov
mov
or
pop
in
imul
mov
sbb
sti
lods
sbb
sub
fbstp
call
mov
ins
adc
repnz
xor
sbb
test
mov
(bad)
jecxz
das
sti
fadd
retf
sahf
add
sbb
xchg
hlt
mov
scas
ja
cmp
aad
fimul
fisttp
adc
ficom
dec
jno
bound
shl
and
popa
pop
xchg
jbe
pop
push
cmp
outs
ficom
fcomp
sbb
fldcw
data16
cmp
pop
div
add
ror
mov
fsub
pop
sub
mov
mov
cli
xlat
(bad)
pop
mov
cmp
movs
sbb
ret
sub
in
daa
cs
ins
in
lea
push
push
ja
xor
call
mov
movs
push
hlt
add
adc
mov
scas
ins
xchg
rcl
dec
xor
and
dec
inc
arpl
adc
jmp
xchg
arpl
jbe
out
sub
or
xchg
fwait
nop
gs
lods
sbb
sbb
nop
xor
and
outs
(bad)
stc
shl
cwde
pusha
pushf
jge
fstp
adc
ja
add
stc
and
add
jbe
lds
dec
fimul
iret
imul
nop
test
fiadd
test
sub
aas
or
pop
or
call
test
in
adc
mov
stos
adc
into
lahf
mov
inc
in
pusha
cmp
dec
and
xchg
sbb
inc
sub
cmp
gs
or
pusha
sbb
xchg
jmp
(bad)
in
fcomp
push
jmp
lds
aaa
mov
outs
fild
mov
sub
jl
retf
xor
not
sbb
push
mov
adc
stos
adc
mov
cmp
pop
ret
out
adc
lahf
inc
pop
xchg
je
imul
sub
ds
add
jmp
mov
cmps
sar
(bad)
mov
jbe
mov
rcl
add
xchg
sub
mov
mov
push
xchg
dec
mov
mov
js
shr
lahf
pop
(bad)
popa
sbb
leave
in
add
outs
dec
mov
pop
pop
push
pop
push
adc
jae
lea
or
into
sbb
jns
pop
mov
popa
bound
addr16
sbb
mov
add
dec
sbb
ret
jl
cmp
cmps
jl
test
cs
shl
fisubr
and
shr
mov
push
dec
ja
sbb
mov
add
mov
and
mul
inc
push
sub
xor
push
loop
fistp
push
repnz
jp
scas
xchg
aas
inc
and
xchg
aas
mov
cld
or
retf
addr16
enter
out
(bad)
mov
stos
loopne
sbb
cs
jg
jle
push
push
or
adc
xchg
shl
xor
pop
xchg
jns
jle
in
mov
xlat
cmp
jp
(bad)
test
loopne
push
and
push
push
cmp
rcr
adc
in
out
pop
pushf
aam
loope
fst
add
xor
mov
push
jbe
mov
rcr
mov
popf
(bad)
push
scas
fmul
xor
pop
(bad)
lods
je
repnz
mov
ror
add
mul
add
or
bnd
sar
fsubr
std
outs
add
inc
cmp
xor
adc
jmp
inc
(bad)
xor
clc
mov
cwde
push
in
sub
test
in
cmps
adc
pop
(bad)
getsec
not
dec
(bad)
loope
je
add
retf
xchg
out
push
movs
ins
adc
jo
push
mov
clc
leave
stos
mov
dec
retf
mov
sbb
inc
das
mov
xor
inc
out
pop
test
ret
inc
and
mov
sbb
xchg
test
cmp
lds
loopne
mov
inc
mov
cmps
jnp
call
adc
aas
ror
jle
in
or
arpl
jecxz
mov
mov
dec
js
push
pop
pusha
dec
scas
add
dec
je
in
pop
push
mov
fstp
lods
xor
xlat
fnsave
mov
iret
int
inc
loop
jb
jo
retf
cmp
sub
lods
arpl
je
or
shl
stos
sub
jge
mov
jb
jle
xchg
pop
cmp
and
add
hlt
push
inc
in
shl
sbb
mov
cs
add
std
or
leave
add
pop
js
les
push
test
jle
add
jge
xchg
pop
inc
jbe
movs
clc
push
ja
add
cs
ins
xchg
retf
aas
jno
cmp
sbb
xchg
xchg
add
pop
mov
cmp
push
sbb
aas
mov
push
mov
jl
(bad)
aad
sbb
jne
call
or
push
xchg
sahf
lock
js
or
mov
fidiv
nop
arpl
xor
sub
pop
inc
outs
mov
test
idiv
dec
push
xchg
xchg
out
inc
push
or
add
push
adc
pop
adc
cmp
jmp
daa
mov
pop
adc
ss
dec
ins
loope
aam
cmp
inc
clc
imul
leave
call
aad
or
push
mov
cmp
add
push
xor
mov
push
dec
(bad)
cli
dec
push
jl
bnd
xor
(bad)
sub
pusha
or
mov
scas
es
add
jnp
outs
ror
faddp
xchg
xchg
sbb
mov
dec
pusha
pop
(bad)
mov
retf
das
ja
adc
xor
cmp
shl
xchg
push
out
inc
in
mov
xchg
xor
in
adc
cmc
lahf
dec
xchg
jle
retf
xor
mov
adc
popf
push
fstp
inc
lahf
inc
shr
aas
ins
shl
lods
movs
add
fwait
pop
or
sub
je
mov
loop
mov
test
leave
test
and
push
pop
(bad)
cmc
inc
push
je
dec
cmp
or
sub
rol
cwde
into
icebp
leave
sub
pop
jnp
loop
repnz
hlt
imul
cmp
jbe
out
call
loope
pop
push
mov
(bad)
test
xor
pop
sbb
popa
add
xor
xchg
sbb
add
sar
out
mov
ss
push
add
out
pop
mov
inc
imul
cmp
sbb
mov
xchg
fsub
pop
in
sbb
test
fidivr
jecxz
test
mov
cmps
and
push
(bad)
pop
jle
sub
ins
aas
inc
popa
ins
lock
push
(bad)
push
mov
jb
cmp
inc
xlat
cmp
pop
sub
arpl
dec
addr16
xchg
sbb
push
fldenv
jge
in
pop
dec
fbld
pop
scas
mov
pop
fist
cwde
jae
dec
gs
aaa
pop
cmp
in
sub
mov
cmp
sbb
cli
(bad)
arpl
out
xchg
pop
mov
push
imul
xchg
inc
arpl
push
fdivr
mov
and
ror
cmp
loope
jmp
sub
sub
(bad)
add
fistp
cmp
mov
adc
jp
jle
push
dec
(bad)
mov
fidivr
add
pop
(bad)
mov
imul
push
out
fld
mov
push
fmul
vmptrst
neg
cmp
pop
push
and
xor
sub
add
xor
es
(bad)
leave
(bad)
mov
lock
lahf
push
sbb
mov
xor
sahf
jmp
dec
out
inc
push
or
xor
adc
pop
sbb
add
cmp
jo
imul
(bad)
out
cdq
pop
mov
dec
jae
out
jne
cdq
(bad)
lea
js
add
or
xchg
push
loope
in
sub
cmp
xchg
mov
cmc
and
loopne
inc
cmp
dec
xor
push
sbb
mov
xor
xor
repnz
pusha
and
cmp
xchg
push
inc
enter
div
or
inc
hlt
jbe
shr
dec
push
pop
fidivr
cdq
popa
aam
adc
push
test
xchg
outs
daa
mov
add
xchg
mov
pushf
sbb
test
jbe
pop
jae
pushf
popa
xor
xchg
jecxz
cmp
mov
mov
xor
push
in
push
mov
mov
mov
xchg
scas
jge
xor
call
stos
pop
and
dec
sub
ret
rol
sub
(bad)
int3
xchg
mov
test
fwait
stos
dec
mov
repz
sbb
test
mov
(bad)
dec
cmp
mov
mov
dec
cmp
js
popa
aad
stc
mov
pop
inc
sub
shl
fwait
das
and
cld
adc
test
mov
and
bts
mov
mov
push
movs
dec
ficom
jmp
mov
or
daa
jb
mov
popa
(bad)
mov
adc
mov
add
push
add
mov
int
mov
adc
fwait
xchg
fwait
mov
es
jmp
push
sahf
pop
mov
jecxz
mov
in
les
popa
ins
popa
inc
push
jmp
(bad)
jecxz
xor
jge
out
shl
fmul
adc
jmp
ret
or
dec
bnd
dec
dec
pop
push
mov
inc
add
xchg
gs
repnz
sar
pop
dec
xchg
(bad)
jae
test
repnz
stos
mov
aad
mov
std
xor
xchg
mov
loopne
xor
push
fld
push
retf
pop
mov
(bad)
mov
clc
jnp
popf
aas
cmp
xchg
mov
xor
and
clc
(bad)
dec
lea
pop
xchg
inc
shr
jg
jle
xchg
retf
mov
fidiv
and
retf
jae
in
shl
cwde
inc
arpl
mov
sti
xchg
jmp
adc
and
mov
push
cmps
fcmove
pop
xor
push
dec
mov
jp
pop
inc
fadd
add
clc
pop
popa
add
pop
mov
pop
(bad)
sub
add
mov
int3
mov
scas
xchg
jne
scas
clc
sbb
(bad)
sbb
mov
push
enter
movs
and
jnp
or
inc
les
sti
mov
jmp
adc
cmc
(bad)
inc
or
mov
jecxz
inc
mov
push
mov
lods
mov
daa
adc
jp
cld
or
adc
pop
stos
call
inc
fwait
(bad)
lock
xchg
sbb
sahf
div
loopne
addr16
not
inc
mov
inc
outs
jo
aas
push
xor
push
retf
icebp
pushf
das
das
iret
lods
leave
lock
arpl
repnz
ror
sbb
int
sub
inc
int3
dec
mov
adc
scas
pop
jbe
jge
or
adc
jne
and
mov
sbb
outs
sbb
fiadd
add
xchg
jl
and
push
mov
xchg
(bad)
pop
addr16
aad
adc
add
jl
sub
sbb
or
cli
or
and
add
sbb
mov
pop
mov
and
mov
popf
dec
xor
push
aam
push
jbe
xor
(bad)
loope
loope
or
inc
das
mov
jnp
jne
pop
cdq
scas
inc
std
enter
das
daa
adc
(bad)
mov
pop
jle
mov
div
es
mov
pop
cmps
cli
mov
jo
sbb
jbe
pop
inc
pushf
jge
call
adc
fs
les
push
xor
cdq
add
lds
push
add
addr16
xchg
clc
mov
sub
or
into
scas
add
sbb
adc
stos
jno
add
push
loop
xchg
xchg
pop
test
mov
push
jmp
into
sysenter
xchg
cmc
loope
pusha
add
push
repz
aas
mov
adc
mov
mov
jmp
mov
bound
cwde
leave
(bad)
pop
pop
mov
mov
cmp
jbe
enter
loopne
xchg
imul
xor
jbe
(bad)
mov
cld
aad
fidivr
cld
in
ss
lds
push
sbb
xor
jbe
outs
popa
or
xchg
test
xchg
mov
jae
test
xor
mov
movs
cmps
je
shl
and
cli
or
popa
jno
hlt
popf
inc
test
xchg
retf
or
daa
aam
cli
pop
repnz
push
mov
std
aam
add
cmp
(bad)
repnz
push
repz
scas
(bad)
xor
repnz
aaa
add
in
inc
gs
jecxz
xchg
xor
cmps
cmp
sub
xchg
cmc
arpl
add
cmp
outs
xchg
sbb
fldcw
(bad)
xor
cmps
cmps
xlat
jl
jb
mov
or
inc
mov
inc
mov
outs
push
adc
mov
mov
js
jns
jns
hlt
(bad)
jns
in
and
push
jmp
mov
lock
cmp
xor
out
inc
xor
inc
jmp
repz
jns
pusha
xor
mov
leave
loop
mov
mov
repz
mov
pushf
aam
ins
pop
out
xchg
lods
sbb
mov
mov
cmp
pop
leave
daa
lock
pop
xchg
les
and
pusha
cmp
inc
popa
dec
lods
add
xor
imul
fwait
pusha
test
pop
mov
es
pop
lods
mov
adc
lea
inc
enter
mov
retf
or
call
imul
jmp
sub
push
arpl
mov
and
pop
(bad)
fidiv
aad
jl
movs
sbb
fwait
mov
pop
mov
sbb
sbb
jb
mov
push
xor
dec
retf
jecxz
jecxz
cmp
(bad)
repnz
test
nop
stc
rol
int3
xchg
mov
movs
repnz
xchg
sbb
jne
pop
fstp
sbb
mov
cmc
jmp
repz
sbb
lahf
jo
inc
(bad)
cmps
cmc
fwait
jmp
sub
sub
loop
sahf
jmp
mov
jnp
js
gs
ror
icebp
push
in
in
fwait
je
addr16
lds
sub
mov
aam
inc
out
adc
pop
push
add
jg
into
or
mov
fs
xor
push
out
mov
or
and
aaa
xor
dec
bound
mov
out
data16
repz
bound
and
sub
sbb
rcr
cmps
xor
add
sub
mov
inc
add
xchg
stos
mov
std
mov
cs
or
xchg
(bad)
les
lea
xchg
and
dec
outs
mov
cmp
jl
jb
ret
push
jge
imul
push
in
sub
jecxz
or
leave
push
mov
push
mov
rcl
es
in
jo
push
mov
call
leave
out
mov
jle
addr16
pop
xor
idiv
les
jmp
(bad)
adc
jns
test
mov
jmp
xor
(bad)
xchg
adc
cmp
cdq
push
add
pushf
mov
les
shl
stos
and
out
add
jae
int
mul
push
sub
sti
pop
fwait
jnp
rcr
das
jle
pop
not
inc
ja
(bad)
es
jle
mov
aaa
icebp
data16
mov
ror
lahf
jbe
stc
pop
lahf
ds
out
pop
sbb
push
sub
inc
in
and
in
repz
movs
pop
rol
jp
jmp
fnsave
pop
cmps
mov
xchg
or
cmps
jge
cmp
adc
test
shr
cmp
sbb
lahf
inc
(bad)
mov
sub
pushf
je
mov
clc
or
adc
xor
mov
push
lahf
jmp
(bad)
js
sbb
lea
out
bound
mov
lea
lods
outs
stos
dec
sub
sub
(bad)
out
cmp
mov
and
push
mov
aam
call
and
sub
xor
aaa
add
scas
pop
pop
outs
les
pop
xchg
xchg
push
fwait
xor
imul
pop
data16
outs
jno
push
nop
enter
fbstp
(bad)
sti
adc
das
adc
retf
adc
dec
jo
jecxz
sahf
or
jmp
aaa
test
fild
ss
or
out
int3
and
sub
not
std
icebp
and
shr
mov
or
jmp
(bad)
lea
dec
and
les
inc
popf
call
cmp
jbe
aad
cli
fcomp
add
push
add
rol
inc
jmp
sbb
stos
add
cmp
sahf
lea
push
daa
imul
mov
cmps
cmp
stos
dec
enter
cmp
out
xor
or
push
das
xor
mov
sbb
std
xor
and
xor
retf
cli
jg
test
call
xor
imul
int3
push
adc
loopne
adc
jle
xchg
sbb
pop
adc
sti
scas
pop
in
and
pop
pop
mov
(bad)
rcr
pop
(bad)
rol
sub
ss
fdivr
adc
push
scas
into
popf
pushf
push
aam
cs
fiadd
mov
xor
call
ret
cmp
or
fwait
out
loope
push
vpmacssdql
mov
add
inc
xchg
sub
lahf
pushf
pushf
call
lahf
imul
aad
pusha
xchg
add
mov
push
xlat
xor
pop
clc
adc
push
xor
(bad)
jns
int3
scas
retf
retf
daa
cmp
mov
cli
mov
pop
mov
repz
nop
es
pusha
lods
inc
dec
inc
and
jb
push
jmp
mul
cmps
mov
mov
(bad)
les
and
push
(bad)
pop
jbe
push
xchg
xchg
mov
test
jmp
xchg
inc
out
loop
or
mov
inc
imul
inc
pop
xchg
rcl
fst
mov
inc
jae
mov
mov
js
sub
popw
sbb
and
push
in
cmps
sbb
addr16
xchg
fcomp
dec
jae
js
dec
enter
int
mov
cmp
or
jns
popf
loope
ret
push
iret
push
mov
xchg
lds
sub
gs
pop
fstp
jl
imul
adc
dec
push
pop
mov
inc
adc
sub
dec
or
add
inc
scas
in
push
cmp
sahf
nop
mov
dec
cwde
push
retf
ss
rcl
arpl
cmc
push
mov
retf
sbb
sahf
push
cmps
mov
inc
fs
or
push
retf
not
and
jo
clc
mov
imul
aad
ds
test
sar
leave
movs
dec
addr16
aad
nop
jno
mov
test
and
pop
xchg
cli
xchg
out
jl
cli
scas
cmc
retf
mov
xor
jmp
fcomp
jae
js
or
es
mov
or
mov
mov
push
out
(bad)
sti
jo
scas
stos
fsub
mov
jnp
jg
adc
mov
xchg
mov
xchg
out
mov
int
cwde
sub
imul
pusha
data16
pop
xchg
sbb
ficomp
(bad)
inc
jp
sbb
movs
add
lock
mov
xchg
(bad)
push
jp
xor
in
mov
out
rcr
jmp
in
movs
jno
adc
cwde
ficom
test
adc
or
adc
push
mov
cli
clts
sbb
mov
fcomp
add
sbb
test
adc
test
sbb
xchg
inc
out
(bad)
shr
jbe
cmp
push
adc
lea
or
out
aam
repz
sbb
leave
mov
add
pop
scas
dec
dec
jno
xchg
jae
out
loope
add
cs
(bad)
cmps
enter
sbb
sub
out
fadd
mov
js
in
mov
movs
sbb
adc
jne
je
sub
lea
pop
(bad)
std
pop
xor
bound
cdq
jmp
cmc
enter
retf
xlat
out
xchg
nop
frstor
sbb
or
cmp
fdivr
or
pop
leave
nop
out
pop
out
jb
mov
test
loop
mov
into
or
jmp
add
fcom
jnp
in
mov
push
add
xchg
shr
xor
cmp
rol
(bad)
xor
or
push
mov
rol
(bad)
sub
shl
mov
lahf
lock
xor
pop
sub
jmp
es
loopne
test
or
pop
data16
or
das
xor
bound
pop
cdq
and
adc
mov
xor
test
xchg
js
jg
xor
mov
xchg
mov
sub
cmp
lock
neg
xor
cmps
fcomi
cmps
pop
mov
popf
inc
dec
fistp
push
adc
mov
cmp
cdq
sub
out
sub
jmp
mov
push
addr16
stc
cdq
mov
lea
jb
xor
pop
in
cmps
rol
test
mov
loopne
add
push
cdq
push
ins
pop
mov
scas
jb
dec
dec
dec
inc
and
aad
mov
add
repz
leave
xor
and
cmp
lods
mov
bound
mov
fs
popa
and
mov
jno
sub
test
repz
cmps
mov
je
jnp
and
push
inc
adc
pop
sbb
xor
lock
std
cmps
stos
(bad)
rcr
xor
jmp
mov
stc
cmp
sub
dec
lahf
mov
pusha
mov
jbe
inc
and
or
xor
mov
fsubp
sub
jecxz
push
mov
mov
stos
pop
sub
fwait
ins
into
mov
pop
dec
retf
outs
push
adc
les
dec
xchg
fimul
sti
push
xchg
jg
xor
sub
addr16
cmps
inc
or
fs
into
pusha
rcl
and
sbb
or
test
add
mov
or
icebp
test
fidiv
jae
dec
jl
dec
jle
dec
mov
dec
cmps
xchg
repnz
inc
mov
fisub
iret
pop
dec
mov
xor
stos
inc
int3
in
ret
imul
addr16
xor
or
xchg
test
fstp
test
push
out
out
jle
pop
call
push
mov
xchg
es
stos
test
icebp
sbb
or
push
jg
std
jne
push
xor
pop
fcomp
or
sar
dec
daa
inc
sar
lahf
dec
inc
es
scas
jp
in
cmp
jnp
jne
cmp
jns
(bad)
mov
aad
out
mov
retf
inc
loop
fdiv
ficomp
xchg
outs
fisttp
rcl
and
shl
cwde
cmp
adc
mov
mov
cmp
mov
in
in
ret
sub
aad
cmp
sub
lds
bound
or
js
adc
popf
(bad)
add
cwde
lock
ja
mov
out
inc
scas
dec
test
and
mov
test
add
add
fadd
pop
inc
push
push
cmp
xchg
or
inc
push
jb
push
dec
mov
pop
jge
das
mov
ds
push
sbb
pushf
or
pop
dec
pop
mov
xor
js
cwde
sar
stos
dec
xlat
retf
push
repnz
fcmovnu
cmp
xor
sub
dec
inc
jmp
push
mov
mov
push
movs
jle
out
dec
lods
mov
cmps
ret
mov
sbb
dec
add
push
iret
fs
or
dec
xchg
inc
pop
sub
push
hlt
sti
(bad)
fcmovnb
rol
dec
mov
in
pusha
ret
inc
retw
fs
sub
popf
pop
inc
push
retf
push
jo
xor
ficomp
outs
xchg
cs
addr16
sub
adc
adc
sbb
pop
fcom
mov
mov
call
ins
or
xor
mov
mov
mov
clc
xor
inc
adc
inc
inc
int
lds
sbb
and
dec
out
pavgb
out
adc
sbb
xchg
xchg
ja
mov
inc
push
fdivr
sbb
xor
outs
retf
jno
leave
inc
sub
pop
fsubr
push
cmp
pop
out
mov
sbb
sar
cmps
xlat
cmp
js
pop
cmp
sbb
mov
div
pop
shl
jae
mov
ss
fs
xor
out
clc
repz
or
call
cmps
cmps
pusha
jb
fcomip
iret
lea
neg
add
fild
(bad)
into
in
mov
dec
and
xor
cmp
cmp
cmc
inc
(bad)
fldenv
add
mov
mov
stos
int3
lea
loope
and
push
mov
cwde
shl
jg
dec
mov
cmp
xchg
cmc
aas
inc
and
out
sub
out
and
xabort
scas
scas
xchg
jne
sub
jp
rol
scas
push
or
scas
call
push
sub
xchg
test
mov
xor
ret
jno
es
mov
mov
sbb
xchg
repz
jge
jb
mov
push
outs
mov
fwait
in
cwde
idiv
dec
dec
jmp
jo
pop
pop
xchg
xlat
in
shr
jle
jp
xchg
arpl
mov
and
pop
add
pop
jle
rcl
mov
cmp
cs
cli
pop
push
add
call
push
mov
mov
dec
loope
mov
jnp
rol
and
inc
inc
imul
aam
xchg
(bad)
cmc
mov
add
js
xchg
cli
adc
pop
cmp
jecxz
dec
fcomp
add
and
add
test
cli
int
inc
xchg
cmp
mov
mov
or
aam
out
stos
outs
xchg
jecxz
lock
sbb
inc
test
iret
loopne
daa
repnz
adc
daa
movs
lods
retf
int3
push
fs
sub
das
jmp
jmp
push
outs
(bad)
fadd
jbe
int3
mov
push
movs
mov
pop
jno
adc
sub
jnp
loop
popf
sub
mov
xchg
sbb
and
mov
and
cmp
in
cmp
jnp
ror
fidivr
popf
cmc
pop
adc
movs
out
xor
and
mov
cli
mov
int
pop
jno
fsub
pop
push
xor
mov
test
mov
mov
ror
cmp
dec
int
addr16
mov
icebp
inc
xchg
mov
fwait
mov
call
jmp
xor
stos
jns
sub
inc
and
and
jb
jns
das
jecxz
cld
dec
test
sbb
fbld
xor
pop
adc
test
adc
jne
sub
xor
(bad)
mov
(bad)
sti
das
ds
mov
bound
ins
pop
xchg
pop
nop
jo
imul
push
mov
mov
stc
add
mov
mov
dec
push
xor
cmps
inc
mov
or
and
sub
scas
in
scas
enter
add
pusha
repz
cs
(bad)
xorps
cli
mov
push
nop
jecxz
pushf
mov
adc
es
xchg
scas
ds
cmp
or
inc
inc
xor
and
les
push
test
lock
dec
inc
xlat
das
add
jne
int3
sub
(bad)
sti
mul
iret
(bad)
pop
and
adc
je
lea
or
jo
cmp
mov
sbb
out
adc
sbb
mov
ret
mov
mov
xchg
leave
push
mov
lods
push
dec
xor
inc
inc
imul
repnz
cmp
pop
pop
call
mov
inc
arpl
sub
es
sub
dec
mov
jo
mov
inc
fisttp
pop
cwde
adc
fistp
adc
or
mov
add
mov
adc
in
sbb
mov
gs
in
popf
pop
jp
loope
dec
lods
je
fisttp
in
jmp
pop
scas
sub
jle
imul
cs
stc
sbb
aaa
jecxz
(bad)
daa
xor
icebp
cld
or
add
test
fstp
mov
out
movs
ds
repnz
es
mov
dec
push
jo
out
in
mov
sub
(bad)
mov
test
push
sar
xchg
rcl
mov
mov
mov
cmp
fcom
dec
iret
xor
mov
push
xor
lods
inc
mov
imul
shr
test
sbb
sub
fsubp
adc
nop
cmp
pop
inc
repnz
push
iret
sbb
addr16
dec
push
sub
push
sar
adc
jecxz
ins
pop
ja
sbb
in
pop
cmps
(bad)
loop
retf
lods
ds
jg
std
push
movs
rcl
cmp
push
cwde
cdq
daa
adc
aam
leave
pushf
int3
repz
lock
hlt
(bad)
sar
mov
adc
push
ja
or
shl
or
or
stos
jecxz
imul
jmp
add
jns
xor
arpl
scas
cmps
add
fs
icebp
or
pushf
push
dec
add
mov
mov
xchg
fadd
adc
test
pop
repnz
pushf
and
sti
leave
jecxz
cli
push
cmp
adc
adc
clc
jbe
xor
and
cwde
in
(bad)
push
popf
mov
jp
outs
dec
ret
out
pop
xchg
adc
fisubr
xchg
das
fcom
es
shl
pop
out
and
sbb
inc
loope
pop
clc
aas
inc
inc
sar
out
loope
push
add
enter
push
inc
add
mov
add
not
imul
cld
ins
scas
int
daa
adc
mov
das
mov
cmp
rol
xchg
popa
shl
data16
(bad)
je
scas
mov
daa
xchg
(bad)
test
dec
(bad)
std
pop
inc
retf
into
push
jge
div
jp
adc
enter
xor
cld
sbb
iret
push
dec
inc
mov
(bad)
jmp
cmp
jb
sti
int3
dec
sub
jg
and
jmp
addr16
mov
ret
mov
inc
cli
imul
movs
shl
or
call
test
popf
cmp
adc
shr
lods
rol
jmp
fwait
stos
mov
in
dec
shl
cs
nop
push
xor
sbb
xchg
je
iret
jnp
xlat
inc
sbb
dec
push
dec
iret
mov
cmp
hlt
add
push
lea
ins
xchg
xchg
push
jne
mov
lods
ds
cmp
sbb
push
stc
fadd
aas
sbb
mov
lea
mov
mov
cmp
imul
or
push
dec
rcr
mov
cmp
out
cmp
mov
jp
dec
jo
aaa
cmp
gs
cmps
inc
je
jmp
push
stos
fsub
icebp
mov
sub
mov
clc
sub
dec
ret
cmp
inc
jb
in
push
push
push
sahf
sbb
inc
inc
cmp
sbb
or
sbb
pop
sbb
mov
xchg
test
ss
and
push
sahf
repz
(bad)
cdq
shl
ins
sti
ficom
movs
nop
pop
fldenv
ja
(bad)
or
jge
add
xor
jbe
dec
pop
(bad)
mov
ret
mov
js
repnz
and
push
sbb
in
push
push
popaw
mov
xor
movs
pop
out
add
dec
fwait
or
std
mul
dec
ins
ret
in
mov
pushf
adc
adc
mov
cmp
scas
jnp
stc
das
xchg
(bad)
sub
mov
mov
int3
lahf
cmp
ret
cli
dec
and
retf
clc
sbb
sahf
or
xor
pop
test
cld
adc
jo
mov
repnz
add
jecxz
cmp
cmps
je
mov
int
dec
adc
push
adc
mov
mov
mov
sub
jns
pop
mov
inc
push
mov
outs
jo
push
inc
rol
inc
mov
xchg
ins
push
aas
imul
cmp
sub
loope
rcr
cld
pop
adc
mov
into
mov
mov
cmp
and
xchg
or
mov
dec
inc
pop
and
xor
fwait
mov
loop
aad
adc
in
mov
add
fisttp
pop
dec
and
inc
rcl
fs
mov
aam
bound
xor
stos
fcmovnbe
test
popf
xchg
test
mov
add
dec
or
aaa
or
lahf
imul
dec
adc
rol
sub
lock
jno
sub
lods
icebp
es
hlt
jp
shl
ror
mov
dec
mov
fst
dec
mov
push
sub
mov
xor
pop
mov
sub
(bad)
pushf
das
push
mov
mov
leave
aam
mul
xor
repnz
test
inc
cmp
sub
(bad)
out
rol
sub
bound
sub
xchg
gs
and
xor
rcl
push
sub
xchg
rol
add
les
xor
sahf
js
clc
arpl
fbstp
pop
sbb
push
pop
mov
jne
dec
aaa
aas
adc
push
xchg
push
mov
in
dec
sbb
adc
push
ret
cwde
pop
fisub
lock
pop
cmp
xchg
test
inc
mov
xchg
aaa
mov
mov
stos
jecxz
fimul
out
sub
in
retf
cmc
mov
inc
adc
dec
xlat
iret
out
int3
push
shl
push
and
jb
lahf
out
adc
jbe
mov
xchg
aam
nop
ret
pop
aad
adc
sti
dec
or
lea
bound
ret
test
lds
mov
push
sar
dec
push
neg
ss
(bad)
shr
mov
test
add
mov
(bad)
lock
xchg
test
fcomp
sar
inc
or
int3
inc
ins
into
test
aam
sbb
out
or
mov
jl
repnz
rol
(bad)
cli
xchg
lods
xor
loope
jno
pop
repnz
into
popa
pop
data16
gs
bound
push
mov
mov
mov
cmps
jnp
add
pop
ds
test
or
inc
sub
jmp
cs
aas
icebp
ds
aas
out
push
lds
clc
mov
pop
mov
je
add
adc
mov
loopne
or
mov
loopne
test
(bad)
mov
test
mov
stos
xor
aam
jl
push
cmp
repnz
sbb
std
sub
test
imul
gs
ret
mov
rcl
mov
sahf
or
movs
cmp
mov
dec
je
cmp
js
lods
jbe
shl
out
gs
dec
mov
adc
cmp
in
sub
daa
outs
shl
mov
rcl
cmp
mov
jle
xor
daa
push
jmp
fbld
les
out
popa
sub
xor
mov
and
push
push
fcmovnb
jbe
mov
(bad)
dec
lea
mov
mov
xchg
fild
bound
loop
cld
sub
in
lea
aam
std
push
sub
pop
inc
std
imul
xchg
enter
addr16
mov
sbb
inc
int3
dec
std
popf
call
dec
and
inc
(bad)
sbb
pop
mov
or
test
dec
inc
adc
int
push
mov
repnz
pop
xor
adc
ins
inc
adc
out
hlt
dec
or
je
clc
das
stc
cmp
and
xor
fild
cmps
mov
sbb
in
cmps
loopne
emms
cmp
push
push
sub
inc
ds
pop
and
jnp
nop
rcr
cmps
jmp
imul
sbb
sub
sbb
cmps
mov
adc
or
or
mov
popf
popf
add
pop
(bad)
cmp
push
xor
xor
ficom
xchg
inc
sub
pop
popa
sti
fisubr
popa
fld
add
mov
pop
test
push
ror
jmp
jne
xor
mov
and
and
push
cmp
mov
cmp
jl
or
dec
dec
lea
pop
pop
std
xchg
daa
cdq
sahf
jb
(bad)
clc
and
test
inc
cmps
iret
hlt
movs
sbb
in
inc
fsub
pop
push
adc
mov
jle
cmp
xchg
clc
sbb
ss
inc
dec
cli
pop
ins
or
mov
xchg
aaa
jb
push
lock
mov
inc
lea
retf
cmps
sahf
and
pop
push
or
rcpps
push
sub
xor
dec
aas
mov
scas
mov
adc
fdiv
cmc
test
sub
mov
mov
cwde
push
int
mov
in
or
jl
loope
ror
scas
mov
and
sub
fistp
mov
pop
lods
loop
rcr
loopne
in
push
sub
mov
dec
pop
(bad)
adc
xchg
adc
scas
add
fcmovnbe
imul
pop
xchg
out
mov
call
in
adc
jae
test
and
ins
popf
daa
add
mov
shl
cmc
mov
addr16
mov
push
add
gs
mov
dec
outs
cmc
jmp
sub
lahf
add
sub
jo
xchg
arpl
addr16
push
fbstp
and
inc
and
inc
pop
rol
and
mov
dec
adc
mov
add
icebp
pop
and
daa
aas
and
jnp
addr16
nop
hlt
fcom
adc
sbb
inc
aas
dec
fild
repz
test
fiadd
cmps
cmp
dec
arpl
add
cmp
adc
repnz
pop
ret
js
push
sahf
lods
mov
cli
mov
rol
int3
push
pop
mov
xlat
mov
stc
push
jl
dec
push
ror
dec
es
jno
dec
repz
cdq
push
cmps
lea
repnz
in
pop
sub
push
pop
cmp
out
les
jnp
xor
sbb
shl
mov
xchg
rcr
repz
add
or
lods
fiadd
fsub
adc
cli
jne
pop
mov
icebp
das
xchg
in
sub
add
xchg
imul
or
push
je
sub
jne
jns
into
jecxz
sub
dec
aam
add
mov
mov
mov
pop
cmp
mov
enter
int3
lods
jmp
pop
jl
loope
jmp
cmc
adc
outs
pop
fnstenv
test
call
retf
sbb
aas
push
pop
es
imul
enter
or
outs
jmp
cs
adc
sub
out
and
retf
add
psubw
xlat
mov
stc
inc
add
dec
jnp
fist
cmp
ret
es
pop
push
dec
(bad)
xchg
add
leave
dec
rcr
xchg
loopne
outs
dec
mov
shl
test
or
pop
mov
lods
sbb
rcl
pusha
ret
fbld
inc
add
call
push
and
adc
data16
hlt
(bad)
sti
popf
lds
pop
cmp
stos
aas
sbb
add
or
dec
pusha
hlt
add
ss
int3
mov
lods
sub
cmp
adc
jle
add
inc
stos
push
cmps
fild
push
dec
cli
call
mov
lock
inc
mov
in
cmp
or
mov
mov
fs
jnp
xchg
cmp
adc
cs
adc
pop
push
imul
mov
scas
pop
pop
sub
sub
inc
(bad)
fsub
or
xor
(bad)
not
fdivr
sbb
daa
pop
test
and
mov
lods
ficomp
js
mov
xchg
(bad)
ror
or
xchg
(bad)
enter
lods
addr16
aad
es
imul
or
(bad)
or
fs
ja
(bad)
out
adc
pop
pop
mov
push
pop
loopne
fistp
mov
jbe
dec
rol
inc
std
hlt
push
ret
add
nop
cs
rcl
in
add
rcl
add
push
xchg
leave
fistp
push
int
in
add
sbb
or
add
repz
or
in
and
adc
mov
mov
adc
sub
call
jge
mov
jo
in
cmp
ret
loop
mov
pop
add
mov
fcom
cmp
repnz
pop
in
out
popf
sahf
popa
dec
pop
mov
leave
sub
ins
mov
(bad)
leave
and
dec
mov
fcomp
lock
fsub
stos
std
push
cld
jne
imul
mov
call
les
jo
jg
in
xor
(bad)
out
push
out
pop
inc
sub
outs
add
or
and
dec
sahf
sub
inc
loop
das
mov
(bad)
mov
cmps
lahf
cdq
dec
and
dec
das
(bad)
imul
cdq
retf
dec
xor
xchg
push
fcomp
or
inc
stos
push
jo
sbb
push
cmp
pop
fist
and
popa
inc
mov
mov
out
or
jl
jbe
push
jo
pushf
cwde
adc
inc
jmp
lods
hlt
fistp
pop
inc
fs
rcl
pushf
push
mov
cmp
xor
mov
mov
ret
ss
sub
nop
sbb
aas
pop
ins
cmp
push
xor
loop
xchg
mov
bsf
jecxz
arpl
inc
dec
or
sbb
ja
daa
xchg
mov
lock
push
ret
movs
(bad)
adc
dec
fbstp
and
inc
push
nop
outs
push
out
icebp
das
sahf
(bad)
out
outs
xlat
call
cmp
add
cdq
xchg
mov
mov
mov
mov
lods
lods
mov
nop
out
add
lock
(bad)
push
or
mov
xchg
aaa
cld
cmp
enter
in
push
cmc
mov
add
inc
ins
add
ja
fist
leave
jbe
sti
mov
inc
dec
dec
push
sbb
repz
sbb
sbb
jnp
adc
int3
xchg
adc
ss
sbb
inc
ds
mov
out
js
cmp
std
pop
jmp
xlat
ret
mov
add
xchg
repz
out
fst
sahf
aam
pop
add
sti
push
ins
stos
outs
inc
addr16
sub
or
add
repz
mov
lods
jne
(bad)
cmp
jb
jge
dec
adc
inc
jae
loopne
or
movs
es
or
stos
cmp
in
or
add
pop
mov
out
fld
(bad)
sub
arpl
jno
xchg
mov
fistp
xlat
int3
or
shr
daa
dec
adc
sbb
add
cdq
cmp
add
ror
push
stos
aad
out
or
cmp
in
xchg
and
inc
in
test
mov
call
lahf
jmp
pop
mov
push
fistp
imul
pop
mov
push
push
fldenv
or
jne
jge
mov
nop
push
push
mov
jmp
mov
push
loop
push
mov
mov
scas
mov
and
pop
icebp
push
mov
pop
and
inc
push
ficomp
sub
xchg
cmp
add
fist
or
mov
add
dec
cmps
mov
lds
ins
aad
mov
xor
test
xchg
xacquire
adc
push
out
movs
mov
jbe
arpl
mov
mov
sub
jbe
adc
fild
loop
call
push
dec
dec
xor
sbb
sbb
adc
add
jp
sbb
jp
retf
dec
xchg
stc
add
pop
call
xchg
cmp
pop
xchg
sahf
mov
dec
pop
or
xor
loopne
ds
rcr
mov
inc
jg
push
push
je
or
mov
mov
xor
add
test
sbb
adc
mov
out
jmp
inc
sub
lods
push
test
xchg
sbb
aad
sbb
push
mov
dec
sbb
jnp
pop
sbb
aad
jle
ficomp
and
call
in
in
mov
(bad)
es
aaa
retf
mov
cmp
mov
add
std
sbb
mov
(bad)
pop
dec
dec
jmp
stc
jbe
jb
jge
jno
popa
enter
sub
pop
mov
pop
mov
(bad)
sbb
test
dec
pop
inc
dec
nop
mov
test
pop
mov
xlat
xor
or
pop
stc
cmps
inc
push
adc
rcl
jo
sub
or
xlat
call
out
cmp
jo
adc
cli
clc
aaa
test
ja
pop
movs
mov
inc
in
and
dec
mov
inc
sub
pop
lock
call
loop
mov
in
xor
pop
adc
jp
retf
mov
jg
jbe
sub
pop
int3
leave
fs
sahf
retf
xchg
cmps
mov
pushf
les
js
pop
dec
ins
(bad)
in
test
or
(bad)
xor
push
jnp
xor
sub
adc
addr16
dec
rcl
movzx
inc
pop
sub
pop
sahf
cld
sub
(bad)
(bad)
fcmovnb
je
jg
pop
arpl
mov
push
xchg
loope
cmp
popa
or
sbb
mov
bound
ss
loope
lahf
dec
or
add
stos
or
mov
sbb
sbb
rcl
lahf
push
mov
jle
add
fdivr
aam
addr16
dec
leave
scas
imul
mov
icebp
dec
mov
or
mov
sbb
in
push
(bad)
cmp
mov
popf
loope
dec
push
iret
push
mov
imul
fsubr
mov
shl
test
in
mov
pop
adc
push
test
push
retf
adc
in
(bad)
or
sub
jp
pusha
ins
iret
sub
in
and
jl
out
inc
imul
jmp
stos
rcr
xlat
(bad)
call
scas
mov
add
out
or
mov
pop
sbb
pop
inc
push
fwait
jle
cmc
lea
shl
aas
xchg
mov
xor
in
or
pop
and
inc
test
aad
inc
xchg
adc
mov
ins
push
js
stc
inc
and
test
sub
mov
or
ins
jnp
pop
test
sahf
mov
int
shr
stos
retf
neg
bnd
bnd
mul
lea
mov
add
sahf
add
dec
inc
xor
adc
int3
sbb
mov
mov
mov
push
cmp
cmp
push
cmp
in
imul
out
test
mov
stos
cs
xchg
jbe
popa
mov
xchg
cmp
cwde
mov
cmps
icebp
dec
push
inc
jae
mov
fwait
mov
add
xchg
scas
test
mov
pop
je
push
push
std
(bad)
js
daa
cmp
jb
xchg
outs
sub
js
and
add
rol
mov
xor
pop
ds
lock
cmc
ins
dec
dec
ins
jns
adc
cli
test
xchg
test
or
inc
inc
add
call
adc
xchg
bnd
ror
jns
xor
inc
lahf
data16
cmp
jns
in
fcomp
jnp
sub
imul
jnp
int3
xchg
inc
test
inc
xor
jnp
sbb
aas
pop
cmove
jbe
xchg
jo
movs
jb
nop
mov
xchg
cmp
inc
cli
and
xor
fidivr
test
mov
outs
cmp
les
fcmovbe
ret
test
out
xchg
in
cmp
push
ins
inc
push
mov
lahf
and
adc
pop
js
lods
mov
dec
imul
lea
adc
lds
cli
inc
and
push
mov
cwde
push
sub
sahf
dec
jmp
jmp
mov
add
es
aad
jno
xor
mov
cmp
xor
es
repz
shr
and
lods
nop
loopne
pushf
ins
jno
mov
mov
stos
data16
lods
jo
jmp
push
sub
(bad)
push
push
(bad)
mov
jb
push
movs
jb
in
dec
push
adc
mov
push
push
pop
cmp
and
or
pop
fild
push
lds
test
pop
(bad)
sbb
mov
jge
push
hlt
fcmove
add
lea
scas
xchg
add
jle
or
test
mov
test
sbb
popa
cmp
xchg
jb
jecxz
std
mov
es
adc
lods
or
add
aaa
or
rcr
jo
dec
ret
inc
lea
loope
push
mov
aam
dec
push
mov
sbb
cmp
xchg
xlat
push
sub
clc
lds
aam
addr16
push
cwde
and
jg
mov
ret
das
pop
jmp
int
stos
lock
call
outs
das
pop
ret
add
ins
or
jge
and
fisubr
enter
loopne
(bad)
push
in
pop
inc
loop
mov
test
adc
sbb
or
pop
mul
sti
bound
sub
xchg
mov
push
mov
mov
push
inc
test
inc
out
xor
pop
mov
push
movs
dec
movs
cmps
dec
jne
out
faddp
enter
popf
arpl
aam
cmp
inc
test
sub
scas
fwait
leave
retf
and
mov
jmp
dec
mov
ret
ins
mov
push
les
jmp
and
dec
and
ins
es
xor
add
xchg
aam
add
mov
fsub
icebp
dec
daa
push
movs
adc
leave
jns
xor
fcom
push
pop
xchg
inc
mov
dec
in
and
ret
std
loop
jne
mov
cmp
cmp
in
cmp
xor
jmp
adc
arpl
inc
mov
mov
loopne
mov
add
push
adc
jmp
iret
lods
stos
lods
rol
push
cmp
mov
ins
lds
aad
add
push
fdivr
shl
test
int
pushf
pop
aam
sub
scas
inc
movs
aam
jo
call
sub
mov
(bad)
dec
or
xor
sbb
xor
add
mov
dec
dec
in
add
jg
lahf
mov
pop
mov
push
clc
daa
icebp
daa
or
repz
pop
or
mov
sbb
in
call
add
shl
sub
mov
push
imul
movs
ss
popf
mov
shl
stc
push
test
dec
jns
jno
div
mov
pop
pop
psrlq
js
push
sbb
movs
add
ins
(bad)
xor
rcr
mov
push
pop
out
in
mov
jno
mov
popf
inc
jno
mov
mov
cli
inc
mov
push
sbb
fiadd
add
out
sbb
inc
test
fisttp
jecxz
sahf
jle
cmp
xor
jle
jno
das
enter
or
mov
jmp
neg
test
jo
mov
mov
jp
jecxz
mov
mov
pusha
call
cmp
push
lock
dec
scas
ror
ins
push
clc
stos
imul
cmp
cmp
pushf
jle
retf
cmp
test
rcl
inc
fmul
jmp
xchg
lock
mov
mov
pop
movs
mov
sub
jl
xor
add
pop
sub
les
gs
xchg
cwde
dec
mov
add
lods
or
push
dec
dec
aad
fmul
mov
pop
call
sub
push
sub
pop
out
outs
dec
out
cmc
inc
jecxz
stc
xor
push
mov
(bad)
shl
out
loope
jbe
sbb
shl
leave
and
cmps
push
mov
fucomip
out
mov
je
enter
inc
push
ret
cmp
nop
jecxz
or
add
xor
inc
gs
jge
int
cmp
sbb
xchg
and
lea
jmp
int3
mov
or
test
add
das
add
and
and
pop
(bad)
or
icebp
inc
mov
and
call
sub
sub
cmp
adc
(bad)
ss
mov
push
je
mov
add
mov
(bad)
js
mov
jnp
push
inc
out
dec
lahf
or
fild
aaa
cdq
pop
mov
cmps
enter
and
(bad)
mov
mov
mov
clc
push
push
inc
jge
mov
addr16
jmp
adc
mov
cld
cmps
mov
mov
pop
and
(bad)
jmp
xor
sbb
fistp
cmps
jno
mov
adc
xor
mov
fist
popa
adc
aad
cmp
call
mov
mov
add
push
retf
jae
pushf
pop
inc
dec
dec
cli
pop
adc
jecxz
push
repnz
fwait
pop
ja
push
mov
sub
hlt
sub
cmp
in
or
(bad)
outs
repz
cdq
mov
(bad)
dec
inc
out
in
cwde
push
lahf
cmp
pop
and
or
dec
imul
inc
stos
push
add
inc
and
test
rcr
add
cmp
dec
cmps
add
push
adc
psadbw
fsub
mov
add
std
adc
jne
pop
dec
retf
mov
add
bound
xchg
out
dec
mov
jb
sbb
add
(bad)
and
fsubr
in
mov
xor
mov
mov
add
pop
out
mov
inc
cmp
sub
(bad)
test
mov
jno
cmp
in
xchg
inc
pop
clc
xchg
aad
mov
jecxz
mov
jmp
lds
in
or
sbb
enter
pop
out
or
pop
stos
xor
mov
sbb
push
(bad)
pop
mov
in
xchg
aas
add
push
sbb
add
cmc
xchg
mov
(bad)
iret
into
sbb
jp
popa
inc
dec
sub
arpl
mov
pop
lea
sbb
(bad)
lock
cmps
mov
test
adc
sbb
popa
xchg
add
mov
es
setge
cs
sti
shl
popa
sti
pop
pop
jmp
repnz
es
pop
and
clc
sub
lods
cwde
shl
mov
icebp
or
jmp
pop
movs
mov
pop
outs
dec
loopne
lahf
pop
xchg
mov
adc
jecxz
add
jae
and
xchg
jecxz
into
or
push
dec
retf
sbb
or
test
push
outs
call
js
imul
push
fs
dec
inc
std
in
stos
pusha
fbld
fdivr
jp
into
aad
out
(bad)
jmp
loop
mov
iret
pusha
rcl
jle
dec
ins
and
xor
cmp
popa
sar
push
xchg
aam
movs
jo
xchg
pop
push
daa
mov
ds
mov
cmps
dec
mov
mov
aam
sub
inc
icebp
rcl
adc
(bad)
sbb
cmps
fisubr
cmpxchg8b
mov
scas
stos
mov
add
pop
dec
je
aad
and
pop
or
sub
mov
movs
sti
push
and
sbb
imul
test
rcl
cdq
xor
inc
xchg
scas
mov
outs
aaa
arpl
sbb
xor
std
dec
sar
cmp
data16
add
retf
adc
shl
or
jle
idiv
inc
dec
and
xchg
repnz
push
jecxz
addr16
fsub
out
and
and
das
in
push
and
arpl
icebp
xchg
push
loope
xor
aad
pop
xchg
inc
mov
int
pop
mov
jg
pusha
pop
push
test
sbb
dec
scas
das
jb
das
sbb
sbb
mov
sub
sbb
jmp
out
mov
repnz
pop
xchg
call
sbb
sub
pop
push
fnstcw
push
push
daa
or
sub
aaa
shl
sahf
sbb
test
arpl
call
ins
jecxz
leave
inc
out
cmp
xchg
popf
test
mov
in
test
xchg
ret
or
dec
mov
retf
scas
pop
xchg
xor
pop
outs
scas
gs
das
jmp
push
les
and
push
sub
leave
mov
ins
lds
push
and
pop
ds
in
inc
(bad)
out
movs
mov
add
push
adc
mov
inc
xchg
pushf
lahf
jbe
xchg
jne
push
fnstcw
mov
lahf
pop
add
out
xor
(bad)
je
jo
push
mov
aaa
mov
ret
lds
dec
xchg
adc
icebp
cmp
push
aaa
push
aad
movs
(bad)
repz
nop
sbb
test
xor
mov
mov
out
dec
mov
xor
xor
mov
sbb
and
xchg
push
jnp
mov
and
loope
jmp
adc
jge
adc
adc
jb
rcl
xchg
shr
mov
inc
push
or
push
mov
ret
mov
jae
shr
adc
or
ss
push
stos
out
jp
jl
mov
movs
push
adc
mov
shl
or
je
lea
jnp
push
ret
add
test
pop
push
test
outs
imul
xacquire
xor
pop
iret
pop
sbb
and
imul
test
xor
cmp
mov
inc
inc
jmp
mov
xchg
mov
in
sbb
daa
sbb
mov
pop
ds
inc
icebp
jns
mov
cmp
mov
stos
jmp
adc
fucomp
mov
ss
mov
repz
pop
cmp
mov
fsub
in
mov
pop
or
iret
dec
cmp
scas
jnp
into
push
sub
stos
jge
cmp
je
(bad)
(bad)
es
sidtd
lods
movs
add
mov
pushf
ret
push
ds
mov
(bad)
mov
fs
push
fidivr
lea
xor
(bad)
(bad)
cmp
ror
shl
test
xor
lahf
shl
xchg
loope
mov
jmp
add
je
pop
and
xchg
xchg
and
jecxz
xchg
imul
cmp
gs
inc
ins
inc
movs
mov
lahf
sub
jne
pushf
inc
data16
mov
cdq
dec
pop
mov
repz
inc
sub
pop
stos
inc
xor
and
jb
jae
and
(bad)
fst
in
rol
mov
pop
mov
pop
mov
imul
(bad)
cld
test
sar
jbe
cmps
xor
lods
add
retf
std
das
adc
dec
aas
(bad)
cwde
jmp
jg
push
and
adc
cmps
aad
cmp
xchg
pop
je
in
mov
out
retf
add
(bad)
sub
jle
add
popf
jmp
cmp
xor
rcl
mov
fnsave
and
lock
fisttp
aaa
ins
add
jb
jl
add
shl
xor
pushf
jno
dec
outs
lods
fwait
nop
into
inc
dec
mov
push
jl
shl
cli
mov
push
xor
pop
ret
ja
sub
ss
fistp
mul
(bad)
in
dec
mov
cli
xchg
jbe
push
jb
sti
and
sub
arpl
shl
mov
outs
pop
les
mov
ins
aas
xor
jecxz
daa
xlat
pushf
imul
clc
xor
aad
ret
jne
mov
push
je
imul
jbe
sub
(bad)
div
std
push
xchg
push
cli
push
add
sub
leave
outs
jne
ret
mov
fidiv
xor
inc
cmc
retf
sbb
retf
das
mov
sbb
cmc
inc
ins
dec
dec
test
mov
xchg
add
imul
mul
data16
hlt
sbb
movs
int
or
sub
jmp
add
test
jecxz
xchg
dec
stos
aaa
cmp
dec
mov
and
fwait
outs
push
mov
pushf
fisub
js
sub
les
inc
pop
into
cwde
push
add
popf
nop
xor
cmc
test
inc
jo
idiv
or
push
mov
xchg
pop
inc
test
pop
les
popa
dec
scas
jmp
repnz
sub
std
lds
pop
sbb
jle
popf
aam
test
fnsave
repz
fbstp
sbb
xor
lahf
sahf
jb
dec
inc
lock
mov
mov
mov
pop
push
lea
adc
inc
jp
or
inc
ret
xor
pusha
pop
(bad)
and
call
test
mov
jl
fisubr
or
dec
js
inc
mov
test
mov
jmp
shr
pop
pushf
jmp
inc
stos
(bad)
test
scas
std
xchg
(bad)
and
pop
je
mov
xchg
das
repnz
sub
dec
in
in
lods
pusha
jecxz
in
ins
xor
pop
xchg
test
cmps
mov
inc
cs
int3
and
sbb
xlat
shl
mov
adc
jb
fimul
mov
fcomip
and
fisub
(bad)
std
in
xor
(bad)
cwde
loope
jnp
leave
push
ja
lahf
in
push
push
cld
lock
xor
cmp
inc
jne
push
jmp
jmp
jmp
aam
ss
xor
addr16
test
mov
(bad)
mov
xchg
inc
and
lods
adc
pop
add
mov
(bad)
jns
jge
sbb
mov
ret
fbld
jnp
call
(bad)
repnz
(bad)
cwde
xor
jns
cmp
push
or
call
cli
(bad)
outs
loopne
popw
mov
cdq
in
gs
iret
sbb
mov
outs
xlat
jmp
ins
push
sub
mov
jp
(bad)
ss
test
pop
xchg
add
lods
jge
xchg
push
je
push
mov
mov
(bad)
fmul
adc
jno
sar
out
inc
mov
cdq
sub
mov
das
fidiv
in
mov
out
and
dec
imul
test
push
mov
dec
dec
stos
ss
and
dec
mov
pusha
cld
push
mov
xchg
jp
mov
movs
jmp
bound
imul
icebp
jmp
add
lea
inc
retf
push
fs
jl
jne
fs
(bad)
xlat
es
xchg
dec
test
lea
enter
aam
ffree
and
popa
popa
cmc
and
pop
inc
pushf
jle
stos
jg
cmp
push
addr16
dec
push
es
pusha
pop
sahf
ja
push
xor
mov
ror
pop
jb
mov
stc
(bad)
jae
pop
and
lods
les
mov
adc
repnz
pop
add
les
popa
movs
rcl
es
out
clc
mov
jl
or
aaa
bound
mov
dec
push
aaa
das
outs
sar
and
sbb
mov
call
xor
mov
mov
into
or
add
cmp
cli
call
sbb
mov
sbb
idiv
gs
push
xchg
mov
rcl
stos
lock
div
popf
outs
xlat
or
cs
pop
cmp
adc
inc
stc
in
inc
movs
retf
xchg
mov
cmp
or
pop
jne
jp
adc
bswap
shl
inc
or
cmp
ins
sbb
and
sbb
outs
sbb
mov
sbb
jg
pop
or
das
xor
sbb
fsubr
adc
mov
jno
retf
xchg
jg
ins
xor
cmp
ret
das
imul
xchg
cmp
fiadd
cs
mov
outs
js
pop
outs
(bad)
jmp
fimul
loop
jbe
in
pop
sbb
jnp
jl
clc
add
xchg
daa
outs
mov
popf
mov
and
out
push
jle
push
dec
pusha
mov
inc
push
xor
(bad)
jno
stc
push
or
das
or
sbb
into
rcl
inc
gs
test
icebp
pusha
xchg
jle
out
shl
in
mov
(bad)
cmp
pop
jnp
dec
inc
or
outs
in
add
push
mov
enter
(bad)
and
xchg
pop
xor
sbb
jns
and
retf
xchg
jmp
mov
jl
mov
xchg
(bad)
ficomp
pop
adc
jge
cwde
pop
mov
mov
inc
mov
dec
mov
or
pop
sti
push
ret
les
popa
outs
sub
inc
scas
shr
neg
mov
jg
in
fisub
add
aaa
int
leave
mov
in
mov
xor
arpl
mov
ficomp
and
cmps
pop
sti
jmp
or
push
xchg
hlt
aas
je
jmp
push
push
mov
mov
cmp
ret
sbb
mov
inc
lods
push
cdq
adc
ds
cmc
int
adc
xchg
enter
scas
hlt
lds
clc
rcr
xor
and
inc
pop
jmp
cwde
(bad)
into
in
mov
(bad)
or
movs
es
lods
aaa
pop
ds
pop
or
cmps
dec
mov
lsl
lahf
into
sbb
or
(bad)
add
pop
dec
sbb
push
dec
into
pop
xchg
sti
sar
mov
sar
cmp
(bad)
cmp
cmc
or
inc
fstp
(bad)
repnz
pop
retf
pusha
test
pop
lods
push
jg
inc
jmp
mov
(bad)
push
sbb
scas
add
lock
xor
cld
or
out
and
pop
movs
sbb
ins
add
ret
jge
mov
sti
mov
fisttp
dec
pop
loope
inc
xor
(bad)
jnp
xchg
popa
leave
int
adc
push
jp
xor
push
call
and
nop
out
or
adc
lea
in
mov
inc
xor
cli
pop
movs
cld
sar
sub
add
add
jmp
mov
ror
cmps
cmp
add
xchg
push
inc
jno
cmps
push
sahf
loope
cmp
in
dec
out
sbb
pop
imul
adc
jns
cmc
js
sti
test
mov
cwde
jmp
inc
mov
int3
inc
dec
pop
pop
sub
into
lods
lock
adc
imul
cmp
loop
xor
xchg
and
mov
cmps
push
add
dec
sub
(bad)
inc
loopne
jp
inc
cwde
loopne
xchg
lods
push
cmp
cmc
cmps
mov
pusha
dec
repnz
jne
iret
lea
dec
arpl
add
pop
das
int3
iret
ret
jb
shr
loop
cmp
or
sub
aaa
mov
sbb
dec
cmp
jb
and
pop
push
inc
and
movs
add
dec
adc
xor
mov
stc
fs
sub
jno
xor
ss
rcl
out
fimul
dec
cmp
out
mov
rcr
adc
shl
stc
inc
mov
pop
xor
mov
icebp
data16
or
cmps
(bad)
pop
scas
pop
jno
push
add
cmp
mov
pop
js
mov
or
les
(bad)
mov
dec
sub
or
in
setl
pop
call
stos
cmp
mov
add
popa
push
aas
pop
sub
jne
ja
enter
hlt
mov
popf
pop
mov
(bad)
push
imul
add
cmp
and
jg
aad
pusha
xor
jbe
scas
mov
aaa
push
pop
stc
jle
push
sub
xchg
je
fadd
and
das
stos
in
lock
(bad)
iret
pop
sbb
fwait
xor
xchg
jne
jne
jnp
jle
mov
push
(bad)
cmp
cs
ja
sub
mov
dec
mov
or
or
xchg
addr16
lds
cmp
out
push
mov
inc
(bad)
sbb
sbb
cmp
jmp
ror
(bad)
lea
lds
mov
mov
xor
dec
cmp
xchg
xchg
inc
lahf
out
and
push
sub
cmp
sbb
outs
lods
sub
xchg
push
je
arpl
jge
xor
imul
mov
scas
dec
movs
mov
pop
mov
pop
sti
add
fisubr
(bad)
cmp
out
push
movs
mov
mov
mov
push
sub
stc
jmp
aaa
push
mov
movs
mov
daa
jae
cmp
iret
adc
and
mov
out
dec
mov
into
xchg
or
mov
push
mov
and
adc
xchg
call
xchg
and
outs
and
inc
lea
xchg
push
sti
xlat
cmp
xor
loop
call
je
stc
mov
jmp
add
add
outs
aas
xor
push
sub
test
(bad)
adc
rol
xchg
and
cld
fwait
stos
stos
xchg
pop
in
inc
mov
xor
dec
and
popf
mov
daa
adc
(bad)
inc
mov
jb
icebp
nop
stos
mov
pop
and
shl
shl
pop
mov
mov
xchg
add
sub
push
jb
nop
arpl
adc
fs
mov
in
jnp
dec
fs
adc
xor
pop
jge
mov
cmp
movs
mov
fsubr
fdivr
push
cs
inc
sub
div
sub
lock
loop
out
push
imul
cmps
popf
mov
mov
inc
icebp
loop
pop
dec
pop
mov
iret
call
ret
jno
cmp
dec
push
in
jbe
repz
push
sub
(bad)
xchg
push
mov
stos
repz
into
xor
xlat
in
mov
mov
movs
pusha
aas
cmps
lea
repnz
ror
pusha
or
repnz
cmp
dec
xor
jae
push
cmps
dec
ins
clc
push
aad
pop
adc
add
dec
sti
dec
int
pop
xchg
call
mov
mov
fdiv
fidivr
cmp
xchg
ins
iret
out
push
mov
ja
push
jmp
stc
popa
je
in
test
popa
call
in
es
(bad)
add
add
cmp
mov
xchg
cmp
sbb
xchg
dec
in
movs
push
or
jecxz
lahf
rol
fist
or
ins
mov
int3
xchg
iret
pusha
out
xor
xchg
fst
outs
xor
adc
into
pop
test
retf
cmp
xchg
iret
fisttp
mov
wbinvd
mov
add
mul
mov
cld
or
call
jb
xchg
sbb
xchg
rol
lea
mov
pop
mov
test
retfw
xchg
dec
or
push
nop
pop
jno
add
pusha
cli
fstp
push
jmp
ror
iret
push
cwde
arpl
rol
and
mov
repnz
add
and
and
mov
inc
xor
sub
xor
popf
sbb
(bad)
pushf
adc
ror
cmc
(bad)
bound
mov
inc
in
mov
(bad)
mov
dec
jae
out
addr16
mov
mov
sub
jnp
pop
or
push
outs
and
mov
repnz
out
lds
inc
call
sub
xchg
mov
out
jmp
cmps
jne
int
push
cmp
fs
call
lock
mov
xchg
mov
push
pop
es
mov
inc
js
mov
push
and
jecxz
jns
out
dec
ss
aad
add
lock
pushf
and
call
dec
shr
in
imul
pusha
loopne
push
mov
rol
sub
pop
mov
mov
mov
mov
xor
sub
xor
jmp
sbb
sbb
mov
push
(bad)
sub
and
xor
lds
jns
xlat
push
mov
xchg
inc
icebp
push
int3
xlat
pop
movaps
cmps
push
sub
pop
push
hlt
jecxz
xor
cdq
cmp
hlt
pop
dec
xchg
or
shl
jl
icebp
sub
call
pop
cmp
add
xor
mov
addr16
sub
das
movs
les
fmul
push
xor
xchg
in
clc
and
mov
cmp
pop
mov
fiadd
xlat
bound
cmp
add
cmc
xorps
inc
repnz
icebp
(bad)
out
(bad)
and
inc
out
mov
pop
xchg
test
fst
(bad)
jae
shl
jo
fldenv
rol
mov
dec
fimul
icebp
push
iret
cmp
fcom
inc
jge
adc
pop
out
sub
fdivr
add
or
xlat
aad
xor
adc
hlt
cdq
sub
mov
std
stos
call
add
dec
sub
add
mov
lods
ret
scas
ret
(bad)
mov
outs
jb
or
xchg
add
int3
outs
pop
jmp
xor
add
hlt
pop
repz
std
mov
repz
or
ins
clc
loope
test
add
imul
lahf
stos
inc
xor
sub
call
cmp
inc
mov
jl
mov
sub
xchg
(bad)
loop
mov
pop
jg
pop
jnp
int
jb
fidivr
bound
jae
stc
lods
scas
add
call
inc
test
sbb
cmp
add
sub
lea
or
dec
cmp
xchg
clc
stos
(bad)
xor
sub
(bad)
out
sbb
mov
mov
test
pop
dec
not
bound
lods
push
xor
bound
hlt
mov
loop
cmp
test
in
cwde
movs
in
scas
xchg
fisub
daa
cmp
push
arpl
test
call
fs
ret
xchg
(bad)
xor
jp
mov
adc
cmps
bound
xchg
addr16
mov
dec
rol
pop
cmp
pop
(bad)
fidivr
ins
cmps
jnp
ret
mov
or
push
mov
movs
in
mov
dec
xlat
push
jae
mov
iret
fsub
add
adc
ret
pop
push
pop
outs
bswap
or
fidiv
(bad)
xchg
cli
xor
inc
mov
cli
cwde
and
jnp
jae
jp
mov
mov
mov
and
cmp
je
or
mov
loopne
sbb
jb
sub
lea
xchg
nop
inc
cli
loope
xor
iret
rcr
pusha
fldcw
sahf
and
mov
fsub
push
adc
or
adc
dec
or
cdq
inc
mov
push
pop
into
cmp
push
sbb
std
aad
test
jp
sub
add
dec
xchg
add
pop
xchg
fcmovu
jne
push
fdivp
pop
ss
out
mov
add
pop
and
in
movs
inc
inc
cld
ds
out
adc
fnsave
jmp
(bad)
iret
ins
add
sub
adc
(bad)
sub
aas
pop
and
sub
outs
pop
in
daa
mov
sar
inc
dec
push
xchg
dec
xchg
ss
out
lea
repnz
in
mov
(bad)
jmp
push
les
mov
test
ror
pusha
sbb
test
sbb
mov
ja
cmps
fcmovu
pop
push
jns
jmp
imul
cmp
sar
iret
sub
in
aad
pop
cld
fimul
jno
retf
not
dec
inc
les
es
pop
ja
push
push
mov
push
inc
jbe
jmp
imul
xchg
xor
cmp
push
jl
xor
daa
enter
out
int3
inc
sti
test
push
pop
xchg
in
jmp
push
mov
nop
fdivr
or
(bad)
call
inc
pop
xor
push
scas
ret
or
sub
xchg
lock
ins
xchg
or
pop
mov
inc
adc
fs
outs
mov
dec
mov
dec
fcom
dec
and
inc
stos
stos
scas
gs
push
xchg
imul
cld
loope
pop
loope
sbb
js
out
ficom
loopne
ins
dec
in
repnz
jno
mov
pusha
mov
lods
arpl
jmp
loop
mov
fisttp
xchg
in
jo
mov
sbb
arpl
test
nop
mov
pop
addr16
test
ins
mov
inc
mov
ret
or
pop
and
cmp
sbb
xlat
ret
fs
fadd
xor
push
or
es
ror
mov
hlt
pop
fcom
xor
inc
jno
sub
test
dec
lea
push
scas
sbb
sbb
xchg
and
(bad)
xor
adc
das
mov
enter
mov
sub
or
push
cmp
sbb
jle
push
call
test
pop
mov
sbb
mov
xlat
lahf
cwde
jne
data16
jmp
mov
mov
push
sub
xchg
push
leave
sbb
fnstsw
das
test
add
xor
cmp
sub
std
push
and
imul
cmp
xor
mov
addr16
jge
stc
jl
mov
movs
ror
push
pop
dec
inc
repnz
inc
pop
lock
pop
jmp
and
repnz
or
xchg
push
xor
or
jl
cld
in
jecxz
sbb
ins
nop
push
mov
arpl
jmp
xor
(bad)
sbb
imul
xchg
and
call
add
fmul
jo
jle
mov
imul
sbb
int3
xchg
iret
aam
imul
inc
fucomip
out
sub
add
mov
sar
cmp
cld
call
sub
out
push
test
pop
stos
imul
(bad)
popa
leave
cmp
dec
out
jp
dec
add
xchg
cmp
in
mov
outs
push
leave
or
pop
sar
adc
inc
mov
ret
stos
pusha
mov
jmp
repz
xor
sub
inc
adc
inc
or
sub
jmp
popf
push
lock
loope
inc
(bad)
jno
aas
hlt
aas
dec
add
pop
test
out
loop
aas
xchg
repnz
xor
retf
test
jns
lahf
pop
loop
imul
pop
jg
ss
movs
xchg
push
dec
cmc
ficomp
or
jne
(bad)
mov
cmp
cmps
std
pop
or
xor
mov
popf
out
mov
inc
sub
dec
inc
add
mov
and
call
xor
and
fadd
loopne
dec
xor
fidiv
cdq
xchg
jge
lods
pop
retf
pop
fidiv
lds
icebp
call
(bad)
pop
test
dec
mov
sbb
mov
out
popa
clc
aaa
jb
pop
jo
jmp
addr16
pop
into
xchg
ret
mov
push
loopne
test
in
(bad)
test
ja
inc
(bad)
mov
jmp
sub
adc
fcmovnbe
ret
push
push
jmp
cmp
rcr
mov
enter
dec
test
cli
dec
enter
test
jno
test
jl
mov
mov
fadd
lock
clc
xor
cmp
call
pop
pop
xchg
aas
mov
sahf
movs
iret
xchg
jbe
add
cdq
sar
jnp
or
sbb
sbb
retf
dec
movs
sub
(bad)
xchg
(bad)
aad
dec
test
int3
ffreep
enter
mov
or
in
cmp
mov
inc
mov
sbb
xor
inc
pop
add
aam
jg
popa
cmp
pop
mov
mov
adc
call
adc
fs
xchg
stc
das
cli
sbb
xchg
xor
cmp
dec
add
das
sbb
pop
add
cwde
mov
shl
dec
les
ret
call
test
push
add
shr
mov
in
pop
loope
test
cs
xchg
jne
aaa
or
in
xchg
stos
inc
push
in
(bad)
jo
adc
lds
cmp
shl
pop
push
ret
mov
pop
loop
shr
dec
out
push
iret
call
mov
inc
push
leave
ret
push
add
movs
pusha
dec
or
jge
push
lods
jb
sahf
inc
aam
push
pop
inc
fisttp
(bad)
push
sub
adc
mov
inc
pop
dec
xchg
(bad)
stos
lahf
outs
cwde
push
pop
jae
dec
push
gs
fdiv
stos
xor
sbb
or
adc
jnp
jnp
aad
sbb
cdq
inc
dec
push
xchg
(bad)
pop
je
mov
lock
ja
(bad)
cs
push
mov
(bad)
xor
cli
inc
loopne
nop
dec
bound
sbb
push
dec
sbb
sti
jge
pop
fs
lock
hlt
clc
xor
fnstenv
sub
fcmovnb
cmp
dec
cld
out
lock
movs
mov
lahf
sbb
stos
data16
sbb
or
imul
mov
stos
adc
popf
rcl
(bad)
pop
das
adc
mov
movs
sbb
xchg
aas
xchg
and
and
sub
and
jnp
out
add
dec
pop
and
inc
out
xor
or
pop
lods
and
and
mov
xor
mov
add
and
add
fsubr
adc
and
aam
and
rcl
xchg
(bad)
lock
cmps
sbb
call
pushf
cmps
add
leave
xor
ja
pop
pop
(bad)
sub
push
pop
dec
cmp
sbb
sbb
sub
out
mov
xchg
pop
(bad)
fld
mov
shr
repz
and
xchg
mov
dec
jmp
pop
and
mov
out
adc
in
dec
inc
fdiv
cmp
lods
test
adc
mov
mov
movs
jmp
into
or
test
cmp
shl
out
mov
jge
dec
lahf
sbb
jp
in
jg
push
stos
inc
loope
iret
sub
mov
retf
cmp
push
in
mov
in
int3
es
lods
inc
leave
push
adc
dec
in
es
xor
xchg
cwde
rcr
cmp
add
pusha
int3
and
push
lods
lock
out
fisttp
stos
xchg
sub
push
sbb
cmc
sar
sub
push
xchg
pop
pop
inc
jle
jl
repz
lds
in
jle
or
xchg
adc
aaa
in
inc
idiv
sub
jo
(bad)
xchg
sbb
lahf
fldcw
retf
(bad)
cmp
dec
mov
push
mov
xor
mov
js
sub
fwait
pop
repz
or
or
test
xchg
jae
jecxz
test
pop
push
xchg
test
inc
daa
pop
or
adc
sub
fwait
push
lds
sbb
mov
jb
xor
and
xor
(bad)
js
jl
addr16
xchg
pop
mov
retf
loopne
call
or
loop
xor
ins
dec
pop
loope
call
enter
loop
(bad)
dec
fwait
and
cmc
outs
cmp
fsubr
retf
xor
mov
adc
outs
xchg
add
mov
dec
mov
gs
pop
inc
push
cmp
retf
icebp
fs
into
mov
ds
inc
mov
and
mov
cmp
fidiv
div
aad
movs
imul
fidivr
pop
aam
push
pop
jne
or
sbb
minps
repnz
int
ins
pop
aam
mov
icebp
sbb
xchg
loope
dec
scas
out
outs
ret
jmp
arpl
aas
dec
retf
mov
outs
pop
loope
nop
mov
ret
std
pop
push
mov
int3
push
mov
rcl
gs
cs
jae
inc
and
fidiv
sar
mov
xchg
nop
lock
mov
dec
jp
mov
(bad)
imul
mul
jnp
mov
call
hlt
pop
or
jg
cmc
call
mov
pop
cld
pusha
adc
or
or
dec
cld
outs
mov
cmp
cmp
div
call
mov
or
in
out
jbe
inc
push
push
and
push
pop
jne
jg
xchg
sbb
or
pop
or
test
cmp
hlt
inc
test
loop
inc
mov
cmp
push
aas
scas
aad
pop
pop
cmovne
xchg
stc
shl
cmps
sub
in
cdq
cmp
sar
or
xchg
or
and
and
or
jmp
dec
push
movs
test
pop
ins
test
push
pusha
sbb
push
cmps
cmp
fild
repnz
not
sub
outs
jne
pop
jb
rol
ins
mov
sub
adc
push
dec
cld
add
shl
int
sbb
aas
mov
cld
or
or
xlat
in
mov
cmp
movs
jl
mov
(bad)
mov
push
xor
and
movs
cli
cmp
aaa
rcl
bound
mov
xchg
aaa
dec
repz
fisttp
xchg
push
mov
movs
pusha
(bad)
imul
jb
mov
sbb
jns
inc
mov
addr16
aas
xchg
out
aad
mov
sub
(bad)
cmp
in
retf
xor
les
or
mov
es
es
adc
push
cmp
pop
cmp
add
mov
(bad)
aas
sbb
xchg
cmps
push
pop
or
addr16
add
shl
loop
test
jnp
push
out
enter
cwde
mov
mov
ret
ds
jp
test
pop
mov
adc
ror
and
cmps
test
cmp
bound
bound
mov
aad
fwait
loopne
addr16
dec
out
cmp
movs
mov
cmp
addr16
in
push
out
mov
xor
pop
in
mov
loopne
cdq
push
cmc
sub
sbb
xchg
retf
or
pop
cmp
add
mov
cmp
daa
and
xchg
jmp
inc
xor
imul
sub
add
or
jmp
in
mov
sahf
rcl
adc
sbb
aaa
sbb
sub
adc
(bad)
sbb
mov
dec
mov
sahf
mov
pop
mov
xor
sbb
pop
fidiv
cmp
dec
out
xor
pop
rcl
aam
xor
mov
adc
lods
fild
inc
sahf
(bad)
mov
cmc
outs
jns
pop
add
jb
aad
jo
and
inc
test
test
mov
call
fidiv
rsm
xor
adc
push
jmp
fsubr
adc
push
jnp
jns
push
arpl
mov
xchg
or
mov
dec
mov
xor
jl
test
daa
xor
cmc
(bad)
fstp
mov
xchg
mov
rcr
adc
xchg
bound
dec
fcom
hlt
mov
das
add
mov
ins
mov
pop
jle
(bad)
sbb
sbb
neg
cmp
ret
rcr
clc
int
sub
mov
outs
add
std
test
push
rol
test
loop
jl
dec
mov
ds
out
fdiv
xor
push
scas
ja
jecxz
icebp
ret
add
stos
add
shl
jmp
add
data16
dec
mov
lahf
shr
or
mov
mov
jns
(bad)
sbb
loope
mov
idiv
loope
lods
das
cmp
jo
les
or
xchg
sub
sti
inc
inc
pop
push
push
loopne
push
icebp
ss
into
or
sub
adc
cmp
dec
or
(bad)
int3
cli
inc
movs
inc
add
cli
movs
mov
(bad)
ror
fdivrp
outs
sub
inc
popf
mov
inc
repz
sar
jl
call
mov
int
dec
or
mov
movs
sbb
ja
mov
rcl
outs
push
enter
repnz
out
inc
fdivrp
fisubr
sub
xor
test
or
pop
cmc
sbb
lods
jne
mov
adc
or
sahf
pop
nop
cmp
outs
dec
mov
push
aad
outs
shr
mov
(bad)
out
cmp
adc
jmp
cmp
jecxz
add
add
push
repnz
mov
mov
push
pop
inc
in
push
movs
mov
mov
repz
int3
push
add
pop
inc
jmp
jno
in
adc
sahf
lods
ret
inc
mov
and
out
cmp
sub
(bad)
nop
es
jmp
call
pusha
push
pop
xchg
or
inc
fs
popf
add
es
lods
xlat
int
add
mov
push
mov
pop
pop
xor
movs
mov
ds
xor
push
inc
pop
fidivr
push
cs
cmps
jge
push
and
fimul
jge
ret
jno
push
sub
xchg
fidiv
jg
cmp
xchg
pop
jo
push
xchg
xor
mov
hlt
jecxz
sbb
xor
mov
adc
mov
cmp
pushf
xor
test
add
stc
mov
stc
lea
xchg
pop
push
mov
lods
addr16
pop
sar
outs
or
xchg
retf
loopne
mov
add
mov
mov
or
sub
xchg
call
inc
and
and
push
and
fsubr
cli
call
cmp
and
psrlq
hlt
push
leave
jmp
call
jecxz
test
pop
and
call
inc
dec
jbe
add
in
add
lock
mov
fsubr
push
mov
adc
sub
pop
jg
push
ror
dec
not
(bad)
pop
gs
jmp
les
mov
(bad)
mov
sar
loope
pop
add
pop
int
push
mov
pusha
ret
add
mov
mov
jmp
push
cs
jno
outs
push
leave
pusha
jle
mov
imul
cmc
cli
jmp
ins
jge
cmp
fmul
rcl
aam
int
nop
movs
test
xchg
sar
fcmovu
mov
add
sub
popf
mov
sti
mov
push
test
fld
cmp
pop
dec
jb
cmp
push
movs
or
push
mov
mov
call
jns
mov
(bad)
(bad)
mov
cwde
inc
mov
dec
int3
scas
add
push
mov
pop
jns
test
cmovg
test
jmp
aad
mov
pop
gs
loope
nop
push
in
push
clc
out
test
push
cmp
cmp
es
dec
pop
pop
xchg
sub
and
stc
test
mov
mov
or
call
jmp
repnz
add
cmp
out
retf
popf
scas
xor
js
shl
sbb
pop
fdiv
cwde
jmp
lahf
enter
repz
out
xchg
jno
pop
adc
in
mov
movs
fldenv
adc
cmps
xor
and
cmp
sbb
rsqrtps
pop
mov
jg
lock
(bad)
imul
dec
push
retf
mov
int
pop
imul
fisubr
jl
xor
inc
loop
mov
(bad)
sbb
out
call
adc
int3
sbb
sbb
mov
jmp
sbb
add
mov
ss
jmp
cmp
call
push
(bad)
xor
mov
iret
fst
popf
int3
rol
(bad)
pop
push
sub
xchg
out
xchg
mov
mov
cs
repz
and
sub
pop
fnstenv
shr
fsubr
and
mov
xchg
push
or
test
pop
scas
xchg
scas
xchg
cmps
addr16
mov
(bad)
cld
hlt
pop
rol
jmp
push
dec
scas
cs
adc
mov
in
add
or
test
mov
setge
shl
push
and
loope
into
fst
jb
adc
aaa
pop
getsec
mov
jp
pop
fucom
loope
push
mov
jmp
lods
iretw
jo
in
rcr
push
addr16
and
push
fistp
lahf
jb
in
push
or
push
mov
push
mov
in
sub
out
pushf
ss
mov
pop
fisubr
pop
imul
ja
xor
shl
test
lods
stos
sub
in
mov
rol
xor
in
mov
nop
mov
jae
call
in
leave
cmc
xor
les
dec
call
in
jae
xchg
pushf
daa
jmp
xchg
imul
mov
pop
(bad)
mul
xchg
add
xchg
sbb
frndint
pop
leave
mov
adc
popa
enter
cmp
psrlq
call
adc
fist
arpl
cmp
sub
and
pop
and
out
lock
add
lods
shl
popa
loopne
ins
sub
jo
push
push
sbb
shr
pop
cmp
mov
xor
mov
adc
repnz
aam
je
push
icebp
push
out
(bad)
lea
mov
dec
rcl
loopne
cmp
rcr
cmps
mov
jns
fsub
ficom
(bad)
ins
mov
jg
and
dec
push
bnd
aaa
cwde
test
jnp
pusha
clc
fincstp
pop
ja
jb
xor
stos
mov
fst
fsubrp
es
sbb
xor
xchg
push
ins
jb
repz
push
cwde
mov
inc
test
push
es
in
xchg
scas
or
mov
loope
cli
stos
in
add
addr16
adc
xor
mov
rcl
rcr
jle
iret
sahf
sbb
jge
pop
mov
push
or
test
leave
jbe
xor
jmp
out
in
and
enter
and
cmp
shl
clc
das
add
fs
fmul
aas
push
inc
iret
sub
cmc
fcmovnbe
and
outs
push
sti
out
ins
fwait
xor
fidiv
dec
and
pop
jb
mov
jb
sbb
add
and
and
mov
cmp
cmp
dec
pand
sti
xchg
ss
jmp
and
les
adc
mov
push
sbb
jg
pop
mov
(bad)
ss
repnz
xchg
sub
into
push
je
call
cmps
mov
f2xm1
jb
jo
hlt
dec
push
retf
sbb
and
mov
cdq
lahf
push
mov
mov
test
jge
sub
inc
fld
sub
xchg
mov
jge
dec
fwait
ror
jne
aaa
push
sbb
cmp
(bad)
repz
or
xchg
pop
out
jg
inc
xor
(bad)
xor
sbb
sbb
ins
push
movs
fistp
add
out
pop
cmp
pusha
fdiv
nop
aaa
adc
cwde
popa
sub
scas
push
adc
nop
jecxz
adc
xor
int3
pop
pop
or
aaa
sbb
push
jg
jl
or
dec
mov
sbb
mov
int
xor
test
(bad)
popf
shr
fsubr
xor
sti
idiv
dec
mov
rcr
shr
cmp
mov
push
fwait
lahf
or
adc
mov
(bad)
mov
mov
pusha
jle
jb
loopne
mov
movs
sub
in
pop
and
add
not
or
scas
adc
mov
dec
(bad)
out
or
inc
inc
cmp
xchg
out
jp
xor
sahf
jg
out
push
inc
jno
icebp
addr16
adc
pop
clc
adc
scas
adc
enter
and
jge
imul
lods
cmp
sbb
loope
or
rol
jno
movs
outs
mov
cmp
or
sbb
ret
sbb
repz
dec
test
or
xchg
ds
mov
adc
stos
push
or
int
(bad)
mov
cmps
lea
les
je
lods
push
pop
mov
(bad)
or
movs
jg
test
movs
add
pop
inc
ins
jne
mov
dec
lods
mov
xchg
and
mov
lea
rcr
mov
into
dec
ucomiss
push
dec
aad
sub
data16
iret
lods
sbb
and
ficomp
push
push
das
int
cdq
ins
test
daa
scas
repz
jns
xor
inc
sub
stc
fcomp
cli
cld
sub
xor
movs
add
jmp
sub
ret
and
mov
je
cmp
dec
aam
mov
aaa
and
bound
test
sar
xor
add
popf
xor
lds
imul
or
mov
sbb
pop
jecxz
cmp
int3
imul
and
call
xchg
cmp
sub
sahf
mov
mov
call
int
inc
xor
cmp
cmc
pushf
retf
ret
jl
dec
sub
xchg
or
jbe
xchg
fs
adc
dec
out
adc
ror
jne
inc
rol
sti
je
mov
push
cwde
shl
cs
or
push
dec
test
out
push
pop
adc
cs
aad
cmp
imul
pop
and
out
jp
sub
lods
or
int3
test
cmps
lds
fcom
mov
cmps
data16
xchg
cmc
aaa
pop
xchg
cmc
test
cmp
in
or
push
test
cmp
pop
mov
mov
pop
inc
std
popa
icebp
cmc
mov
mov
or
in
cdq
jno
dec
fmul
cmps
adc
jb
mov
iret
js
call
mov
or
mov
(bad)
cwde
dec
inc
mov
ins
xor
push
fimul
push
stos
xlat
stc
push
jle
push
pop
sbb
jp
mov
int
shr
push
mov
or
cmc
movs
jbe
add
scas
pushf
ret
cld
aad
jmp
loopne
sub
and
pop
mov
popf
mov
cs
mov
(bad)
mov
jns
imul
or
push
arpl
push
or
cmps
jbe
(bad)
adc
mov
ins
repz
ret
push
leave
cmp
xchg
push
jl
in
push
outs
pop
sbb
mov
arpl
sbb
dec
out
pop
xchg
test
stos
or
sbb
pop
icebp
outs
repnz
xor
arpl
mov
mov
arpl
loopne
(bad)
fs
mov
adc
jo
jne
cmp
push
and
jne
sbb
dec
popf
repz
pop
inc
xor
loopne
xchg
push
dec
cmp
mov
dec
mov
xchg
lods
pop
mov
jle
enter
ss
and
int3
add
jmp
aaa
stc
mov
inc
(bad)
mov
pop
cmp
in
mov
xchg
pop
(bad)
xor
shl
fnsave
fistp
mov
lea
jmp
cs
pop
or
in
call
and
fld
push
and
aad
cmps
das
mov
stos
data16
aad
xchg
add
and
pop
shr
push
pop
std
mov
pop
pop
dec
jnp
or
mov
mov
shl
pop
sbb
repz
cli
out
sub
adc
or
popf
loopne
inc
jp
and
add
ffreep
daa
fild
xor
in
loope
inc
idiv
and
loopne
push
cmp
mov
xchg
cmc
(bad)
call
pop
aas
stos
xchg
je
ret
mov
test
pop
inc
inc
movs
xchg
adc
retf
pusha
(bad)
nop
hlt
std
addr16
out
xor
jmp
jecxz
mov
cmp
jp
add
xlat
popa
cs
cmp
xor
push
outs
imul
sub
bound
arpl
enter
addr16
add
mov
pop
xchg
rcr
rcl
daa
add
add
popa
fcmovnb
stc
inc
out
ror
ret
mov
xchg
loope
sbb
mov
in
add
jno
push
add
push
xchg
ins
inc
popf
loope
outs
cs
or
push
xor
int3
adc
adc
mov
cld
jg
call
inc
ds
nop
sub
retf
rcl
outs
je
rol
adc
mov
mov
leave
icebp
rcr
ret
mov
lods
xor
out
fist
pusha
test
push
js
mov
cmp
push
add
ins
fisttp
out
pop
sbb
cmps
mov
xor
sub
mov
fsub
push
jae
adc
popf
pushf
aam
in
pop
jmp
sbb
mov
inc
stos
mov
retf
cdq
fmul
in
mov
mov
div
and
xor
ror
ret
xchg
out
inc
dec
cli
lods
sub
je
popa
pop
push
adc
not
xchg
out
mov
shl
inc
sbb
lods
fsubr
or
movsx
add
jae
jb
inc
pushf
cmp
into
jb
sar
and
and
clc
lods
mov
sub
dec
fldcw
lods
xor
push
imul
add
push
sub
push
(bad)
cmps
mov
pop
aas
pop
push
xchg
mov
mul
ret
test
push
jbe
mov
mov
sahf
sub
popa
dec
adc
xchg
dec
pop
mov
icebp
inc
fst
hlt
adc
pop
jns
leave
inc
push
test
jnp
xor
scas
inc
sub
(bad)
ret
cmps
adc
push
sti
adc
fstp
imul
pop
cmp
mov
sub
cmp
cmp
and
xor
aas
xor
retf
and
hlt
in
jecxz
or
xor
lods
shl
repnz
call
rcr
jmp
rcr
mov
addr16
arpl
xor
push
int3
fstp
js
mov
lock
js
push
xchg
mov
adc
aaa
mov
nop
xchg
xor
test
int
inc
jbe
hlt
mov
mov
(bad)
leave
mov
pop
movs
rol
pop
(bad)
test
jmp
shl
sub
jb
(bad)
mov
int3
cmp
xchg
xchg
cmp
shr
push
dec
xor
jg
pusha
les
lahf
cmp
aaa
clc
sbb
xor
mov
add
in
aam
test
xchg
push
pop
dec
ret
outs
adc
cmp
xor
je
cmp
push
sub
mov
ins
inc
ret
adc
cmp
and
hlt
mov
xor
mov
(bad)
fsub
sub
sar
(bad)
adc
jno
in
cmp
push
push
xor
jae
push
jl
lods
retf
ja
pop
and
jmp
jae
or
push
xor
call
fyl2xp1
cmps
xlat
and
loope
adc
and
jmp
lds
mov
adc
inc
lahf
mov
xor
push
mov
repz
in
xor
cmp
das
pop
test
repnz
jge
in
xchg
std
push
xor
push
test
jp
(bad)
daa
xchg
xchg
mov
(bad)
mov
aaa
in
test
push
mov
or
mov
push
mov
dec
adc
popa
xchg
and
mov
or
mov
ret
cmp
jno
call
sbb
std
inc
push
xchg
seto
or
or
out
xor
xor
sbb
xor
cmp
fsub
stos
mov
aad
mov
xor
or
xchg
retf
jmp
pop
add
repz
loop
pop
mov
nop
and
loop
jmp
fs
or
stc
daa
mul
pop
push
cmc
mov
pop
lds
add
retf
bound
clc
leave
imul
sbb
out
sub
add
stos
cmp
push
fwait
in
fmul
push
xchg
repnz
mov
inc
xor
mov
and
jmp
push
fs
or
add
lds
sti
jmp
leave
push
xchg
iret
mov
pop
fimul
pop
inc
call
pop
or
stos
jle
aaa
mov
in
mov
mov
inc
xor
inc
test
aas
mov
in
inc
js
(bad)
fisttp
dec
lods
test
sbb
mov
sbb
or
jne
jns
in
xor
enter
dec
popf
or
cmc
sub
int3
call
stos
ds
inc
ss
inc
in
sbb
out
push
push
scas
xchg
adc
mov
or
sbb
aaa
arpl
mov
sbb
stc
imul
push
movs
push
xchg
arpl
lea
jnp
sub
dec
inc
and
mov
pop
repz
xchg
push
mov
inc
test
cwde
les
inc
cmps
ss
pop
or
push
lahf
fadd
cli
xor
outs
lock
jnp
add
ror
(bad)
and
jecxz
std
ret
stos
adc
movs
shl
inc
cmps
adc
jo
outs
sbb
mov
nop
shl
xor
cmp
jne
(bad)
push
(bad)
lea
scas
adc
cmp
or
imul
xchg
(bad)
fdiv
inc
mov
jnp
std
fist
out
ins
sahf
mov
loopne
fadd
inc
mov
dec
mov
sub
mov
pop
out
jns
jno
push
rol
mov
dec
adc
mov
daa
(bad)
or
call
push
hlt
mov
test
pop
jg
mov
(bad)
inc
fbld
xchg
and
pop
fwait
adc
push
rcl
push
div
pop
out
cmc
xchg
imul
movs
push
mov
or
or
mov
xchg
data16
enter
push
nop
sbb
mov
call
add
xchg
sbb
leave
cmp
mov
inc
sub
pop
jmp
xchg
push
(bad)
(bad)
fstp
test
jecxz
add
xlat
or
dec
(bad)
out
retf
test
sar
adc
and
call
cmp
sub
sti
xor
sub
sub
jo
dec
fdivr
sub
adc
sbb
int
push
mov
repz
sub
cmp
jl
mov
dec
js
and
cmp
fldenv
pushf
cdq
pop
repnz
mov
fld
and
test
or
jae
fwait
push
enter
aaa
adc
xchg
push
and
cmp
cmp
and
xchg
mov
mov
sbb
enter
test
mov
stos
pop
and
(bad)
mov
stc
or
aam
cli
iret
pop
inc
(bad)
mov
imul
xchg
fisttp
scas
(bad)
push
call
pop
mov
cli
test
movs
scas
mov
movs
xchg
(bad)
jge
retf
cmp
mov
lods
sahf
shr
call
int3
xor
je
mov
sbb
mov
imul
mov
push
inc
ror
mov
mov
hlt
dec
sub
in
sbb
push
test
test
sar
es
adc
inc
jno
lods
out
lods
and
inc
add
xchg
jl
mov
cmp
in
imul
lock
rol
in
and
sar
pop
ror
jmp
hlt
cmp
outs
dec
addr16
add
ss
(bad)
stos
sub
add
(bad)
or
xchg
mov
cli
mov
movs
movs
mov
fist
xlat
ret
nop
into
sbb
mov
inc
jb
cwde
cmps
pop
sub
pop
dec
in
mov
push
jge
push
ss
xchg
adc
ss
mov
loop
xor
js
fistp
xor
lods
repz
inc
ja
push
adc
xor
xchg
inc
sub
and
inc
cmp
clc
pop
cmp
ror
inc
add
and
lea
pop
or
test
jns
sbb
ret
mov
shl
movs
call
loopne
and
ds
mov
add
out
dec
movs
mov
push
outs
cld
stos
repz
fild
imul
push
ret
dec
mov
cmc
je
imul
push
mov
xchg
test
fwait
mov
xchg
dec
xor
sub
mov
int
fdivr
dec
pop
fs
jecxz
fdiv
sti
jae
jne
js
push
sub
adc
jnp
mov
aas
iret
mov
cli
push
stos
stos
push
or
enter
jmp
loope
(bad)
and
arpl
jns
and
ins
push
mov
fst
jae
jne
je
(bad)
mov
retf
xor
xchg
pusha
add
xor
sbb
mov
mov
loopne
inc
stc
mov
add
inc
lds
jnp
ret
and
sbb
xor
sti
ja
adc
ret
(bad)
or
mov
sbb
repnz
imul
pop
mov
mov
lds
xchg
mov
or
dec
mov
add
add
cmc
cmps
ja
aaa
es
call
sar
xchg
cmp
in
add
jle
ret
repz
ss
out
in
sub
xor
mov
or
and
jb
std
jecxz
xlat
call
xor
imul
sahf
push
adc
js
fist
cwde
test
mov
pop
sub
data16
ins
mov
or
fsubr
and
cmovle
loope
dec
lahf
in
into
fistp
ficomp
mov
sub
inc
ja
lock
cmps
and
mov
mov
and
or
cmc
push
xchg
leave
mov
push
xchg
inc
push
(bad)
shl
retf
scas
jns
mov
pop
loopne
adc
stos
mov
imul
jno
cmp
pop
test
shr
js
adc
(bad)
sub
cmp
nop
sahf
cmp
xor
sub
test
out
fst
dec
retf
mov
nop
lods
arpl
es
test
adc
jmp
push
bound
movs
jb
pop
rcr
mov
sub
shr
adc
push
add
enter
jecxz
fisttp
add
iret
dec
enter
loopne
dec
xchg
cmp
jmp
cmp
lods
(bad)
addr16
in
push
shl
js
mov
mov
xchg
xchg
xor
adc
xchg
std
push
mov
je
sbb
rol
fldcw
add
jbe
inc
(bad)
ficomp
fwait
mov
xchg
push
aaa
xor
daa
pusha
sbb
mov
clc
mov
out
sub
jp
cmp
xchg
sub
(bad)
fadd
scas
jo
push
jl
out
imul
cmp
pop
bswap
ror
aas
mov
call
mov
cmc
mov
arpl
aam
sub
lahf
scas
pushf
xchg
movs
pop
pushf
mov
or
sub
inc
cmps
popaw
(bad)
xchg
push
je
(bad)
push
js
es
adc
std
fimul
test
dec
das
js
mov
mov
mov
push
lods
lds
out
dec
jmp
out
xor
pusha
pop
out
outs
data16
adc
je
add
mov
nop
push
les
xchg
data16
dec
cmps
cmps
pop
aad
jmp
popa
push
xor
xor
xchg
test
dec
inc
sub
cli
aaa
ds
xlat
dec
outs
sbb
cmp
push
xor
and
retf
dec
sbb
loopne
push
sbb
jns
sbb
push
push
js
jle
pop
xor
mov
push
push
ficom
push
push
jnp
cwde
xchg
jae
mov
adc
mov
xchg
inc
and
scas
mov
popa
adc
or
cmp
inc
or
xchg
ss
movs
sub
ins
jl
fisub
sub
mov
jno
pop
pop
aas
mov
neg
mov
xlat
movs
jae
loop
or
jecxz
test
sub
ja
ret
aas
dec
push
gs
out
mov
cmps
cmp
je
in
mov
retf
out
data16
mov
rcr
pop
add
push
adc
adc
popa
popa
xor
aaa
pop
sub
push
xor
fdiv
mov
icebp
repz
pop
cmps
xor
pop
mov
jl
iret
sbb
and
mov
hlt
push
mov
or
sub
dec
mov
(bad)
cli
imul
sbb
push
lods
adc
aad
addr16
out
mov
fs
repnz
mov
fimul
jg
cmp
mov
pusha
mov
push
adc
dec
inc
fimul
push
(bad)
mov
push
sbb
and
jbe
xor
ss
xor
stos
cmp
mov
aaa
in
loope
call
sub
mov
xchg
pop
movs
in
bound
sti
mov
pop
dec
std
push
sub
sub
xchg
xchg
popf
(bad)
into
shr
mov
mov
(bad)
mov
pop
sub
sbb
das
lahf
push
movs
out
std
add
cmps
inc
jl
push
pushf
test
popf
popf
adc
retf
in
push
xchg
cmc
pop
pushf
rol
nop
dec
mov
jb
jmp
dec
mov
js
addr16
scas
pop
arpl
push
pop
mov
pop
ins
dec
push
dec
or
dec
(bad)
xlat
test
jnp
jge
scas
inc
aad
mov
dec
xchg
out
sbb
mov
lock
mov
jo
mov
cld
imul
mov
xor
rol
pop
jl
mov
mov
adc
cmps
xor
mov
mov
xor
add
jge
or
mov
xchg
iret
leave
mov
sti
daa
xchg
retf
mov
inc
pop
test
push
sub
(bad)
adc
popf
stos
ds
mov
pop
xchg
push
pop
bound
out
sub
adc
sbb
cmc
jge
adc
add
jno
imul
movs
call
mov
xchg
add
ret
ja
cmp
dec
jne
neg
add
mov
xchg
in
dec
cmps
add
push
fistp
int3
fild
jo
xchg
cmp
jnp
add
fsub
jmp
and
pop
dec
sub
xchg
xor
inc
fimul
and
mov
(bad)
pusha
push
push
ror
cld
sub
cdq
bound
sbb
lods
arpl
int
out
mov
jns
ficom
imul
mov
clc
add
cmps
sub
and
mov
pop
in
mov
mov
jne
cmp
and
jecxz
inc
ret
cdq
in
jae
push
jns
pushf
add
(bad)
repnz
bound
das
mov
ins
adc
aam
mov
mov
shr
jecxz
jmp
or
fist
push
call
or
adc
or
xchg
in
in
push
sbb
pop
cli
test
pop
mov
and
cld
or
je
in
dec
mov
int
mov
outs
outs
add
xchg
xchg
mov
inc
or
iret
outs
jp
lds
movq
pop
pop
or
cmp
ret
aaa
shl
dec
fcom
mov
sbb
dec
fstp
push
bswap
ret
out
xlat
add
in
inc
hlt
cmp
jg
or
mov
imul
xor
imul
or
hlt
mov
imul
in
shl
jns
mov
movs
test
xchg
ins
sub
push
mov
lea
sbb
mov
cmc
fadd
fdivr
sbb
sbb
fisub
test
cli
push
sub
mov
fmul
sti
cdq
es
mov
mov
in
jg
jecxz
xlat
cld
shl
(bad)
inc
out
pop
call
inc
push
retf
xor
mov
mov
call
popf
dec
jl
sahf
cs
fnstenv
dec
cmp
sti
sub
aaa
fadd
test
xchg
mov
push
dec
pop
jnp
inc
fnstcw
pusha
mov
cdq
repnz
dec
movs
xor
ficomp
lahf
ds
push
jb
mov
inc
cli
push
ins
xlat
sti
xor
add
adc
fdivr
js
mov
mov
sub
fist
sahf
arpl
xor
push
out
and
jns
mov
dec
call
inc
adc
dec
mov
lods
imul
jb
mov
xlat
add
mov
lods
(bad)
xor
icebp
or
pop
xor
jno
repnz
scas
push
push
add
mov
cmp
adc
outs
cmp
lock
lahf
test
in
pmuludq
(bad)
adc
mov
inc
cmp
fucomip
or
popf
out
lods
xor
ins
jg
clc
and
add
mov
mov
mov
jne
xchg
inc
inc
push
adc
inc
out
dec
add
dec
pop
in
fsubr
and
add
(bad)
mov
les
fimul
dec
push
aad
shl
push
and
div
fst
pop
je
or
in
mov
mov
fisubr
call
pop
test
mov
(bad)
imul
add
inc
push
iret
mov
mov
sti
xchg
sbb
icebp
inc
cmps
inc
cmc
movs
mov
adc
jae
push
mov
loop
(bad)
(bad)
sar
add
mov
das
push
int
inc
lea
in
add
mov
(bad)
adc
xchg
leave
pop
lods
push
mov
fsub
mov
or
imul
inc
jle
mov
xchg
jnp
push
jns
bound
js
mov
push
and
dec
jb
jecxz
dec
push
jp
cli
mov
sub
aad
popa
mov
jp
xchg
pop
out
not
(bad)
and
mov
or
mov
push
mov
mov
adc
cmp
jae
push
faddp
fsub
push
inc
(bad)
out
cmc
icebp
or
ins
es
stos
xor
fs
sub
dec
ret
lds
test
and
fxch
jbe
xchg
inc
push
adc
adc
dec
mov
popf
cmp
fxch
xor
push
and
fist
xor
adc
add
push
xchg
in
hlt
clc
push
cmps
xor
mov
xlat
fs
xor
sahf
cmp
pop
pushf
mov
cmp
dec
and
into
repz
fld
popa
scas
cld
outs
sar
retf
xor
and
fdivrp
test
(bad)
xchg
ins
add
and
jmp
sti
popa
inc
in
aad
shl
mov
jge
leave
and
sbb
outs
jmp
(bad)
adc
test
sub
(bad)
mov
out
xchg
pop
in
rcr
pop
add
(bad)
ret
xchg
dec
std
test
out
or
push
retf
iret
mov
xor
call
in
imul
mov
cmp
jmp
into
(bad)
sbb
pop
and
pop
test
mov
(bad)
cmp
dec
mov
data16
stc
(bad)
push
mov
clc
sbb
xor
inc
lds
dec
test
mov
sub
stos
jnp
mov
and
mov
dec
pop
sti
mov
stos
and
add
add
pusha
add
nop
imul
fadd
arpl
scas
fs
pop
dec
cwde
mov
jg
lds
cdq
loopne
cmp
adc
(bad)
outs
cwde
jae
lock
xchg
sbb
pop
xchg
out
mov
adc
dec
popa
mov
daa
adc
(bad)
mov
pop
call
inc
mov
rcr
fist
out
pop
aas
ds
inc
xor
mov
pop
inc
mov
cmc
pusha
cmp
add
push
push
fwait
ds
popf
pop
sub
ins
outs
xchg
into
mov
add
dec
test
jbe
dec
shl
rol
push
das
sbb
out
mov
lods
sub
cmps
or
dec
inc
mov
dec
adc
xchg
cs
push
nop
xlat
pop
pop
inc
das
in
shl
shr
sbb
sbb
add
popa
cmp
nop
cwde
and
inc
mov
inc
in
ds
ins
adc
loop
scas
jmp
sti
push
jne
xor
cmps
aaa
dec
xor
mov
and
movs
cld
loope
xor
out
pusha
test
enter
jge
out
mov
mov
add
mov
and
scas
popa
or
popf
xor
adc
bound
mov
leave
cmp
pop
adc
jmp
leave
leave
mov
dec
sbb
inc
out
aas
mov
pop
int3
gs
je
push
cmp
call
jnp
jbe
gs
out
xchg
rol
sbb
inc
jge
pop
push
cmp
rcr
or
push
cdq
xchg
fst
mov
or
xor
ss
outs
enter
bound
(bad)
pop
popf
repnz
adc
bound
sbb
push
stc
jmp
sbb
add
mov
sub
sbb
xor
push
pop
cdq
push
cmp
cli
adc
cwde
outs
add
inc
inc
sahf
mov
jbe
(bad)
je
movs
ja
push
mov
ss
jbe
mov
shl
sub
adc
aad
jae
dec
fwait
cmp
pop
jne
cs
sub
int3
loope
aas
xchg
and
jns
sahf
or
fs
test
movs
jnp
nop
pushf
xor
jecxz
add
push
iret
xor
pop
mov
xor
in
jae
cmp
call
dec
arpl
cwde
xor
mov
ss
xchg
int3
sahf
pushf
ret
dec
stos
fcom
xchg
test
fsincos
(bad)
jg
mul
or
add
scas
dec
ret
or
add
jbe
xor
push
jmp
sub
cld
adc
sbb
push
jbe
test
mov
sar
push
xchg
dec
xchg
stos
mov
div
fucomi
dec
sbb
xchg
jns
mov
pop
add
rcr
push
cmp
(bad)
adc
jbe
xchg
cwde
out
mov
sbb
mov
xchg
out
sbb
rcr
test
inc
pop
adc
dec
adc
xchg
std
lds
jg
in
adc
mov
cmp
inc
mov
fidiv
or
add
clc
sti
pop
sub
fwait
pop
in
pusha
cdq
test
sub
or
sub
cmp
ss
mov
mov
and
rcl
or
rcr
adc
jmp
test
shl
mov
push
mov
mov
sub
lods
pushf
ret
daa
popa
fisttp
mov
mov
test
xchg
(bad)
int
mov
or
pusha
cmp
add
in
push
ds
stos
and
mov
cmps
cmp
pop
popf
mov
xlat
cmc
hlt
adc
lods
dec
mov
cmps
mov
mov
adc
dec
mov
int3
shl
lock
add
mov
popa
mov
pop
or
jge
cli
clc
xchg
sahf
or
aas
add
mov
je
jge
add
or
xor
popa
sbb
out
xor
ins
(bad)
stos
aam
sub
dec
imul
icebp
push
fisttp
ss
int
sbb
sub
push
dec
add
sbb
or
repz
stc
mov
jecxz
shr
inc
mov
and
pop
fsubr
or
stc
jbe
jmp
sbb
mov
cmc
adc
inc
fist
cmp
sub
movs
cmovb
outs
mov
mov
push
mov
mov
inc
retf
imul
sahf
push
ins
call
mov
pop
ficom
push
fst
jp
mov
mov
div
es
fiadd
adc
out
jo
add
xor
aad
les
lock
dec
jo
mov
and
mov
mov
mov
and
ss
cmp
cmp
or
cld
aas
js
add
mov
xchg
sub
push
fsub
xlat
fist
loop
xchg
sti
dec
mov
xchg
ds
and
test
sub
(bad)
iret
push
and
ins
push
mov
xchg
ss
add
pop
or
and
xor
sbb
sub
jns
sbb
scas
addr16
inc
dec
out
jns
push
and
cmp
and
or
adc
add
stos
pop
clc
in
arpl
div
test
cli
aad
sub
les
pop
jne
fwait
(bad)
mov
sub
int
add
movs
ins
pop
jbe
dec
adc
test
xlat
mov
adc
add
add
xchg
push
ror
mov
mov
mov
(bad)
cmc
push
or
jp
popa
mov
(bad)
icebp
push
inc
sbb
pop
pusha
pushf
rep
loopne
adc
adc
cwde
push
dec
pop
stc
xchg
inc
xchg
mov
test
sub
cld
xchg
cmps
(bad)
ret
xlat
std
cdq
mov
outs
add
inc
js
mov
mov
test
push
shl
repnz
mov
fld
xchg
push
shl
les
mov
pop
add
call
cmps
fs
push
(bad)
mov
jnp
mov
call
sbb
idiv
dec
mov
test
cwde
es
push
ror
sbb
into
or
popa
lea
or
or
jnp
or
rcr
jl
dec
xor
test
sbb
movs
jp
repnz
test
sahf
das
push
in
jp
pop
leave
and
leave
dec
and
mov
jae
xchg
jp
lahf
div
dec
mov
or
add
imul
sahf
in
pushf
xchg
mov
xchg
ss
inc
fs
cmc
xor
aam
into
xchg
cli
loop
xchg
lahf
mov
dec
mov
push
inc
ins
mov
enter
xor
mov
sbb
push
xlat
sti
inc
clc
adc
outs
xchg
xchg
int3
push
sbb
je
inc
js
push
popa
xor
dec
loope
and
out
cmps
cld
ficomp
paddb
test
out
and
sbb
fsub
cmp
rcl
adc
pop
dec
aad
jns
pop
adc
popfw
scas
adc
push
mov
das
(bad)
jo
sbb
nop
int3
jmp
push
mov
dec
(bad)
mov
cld
sbb
push
sbb
lds
imul
or
stc
jmp
ret
pusha
repnz
sub
retf
adc
mov
ficomp
push
ror
fsub
xchg
or
into
or
enter
xor
int
out
cdq
xchg
jmp
(bad)
aad
mov
sbb
jmp
ss
and
ss
push
test
jp
dec
cmc
mov
cld
push
push
nop
xchg
mov
jp
push
or
(bad)
ror
cmp
mov
outs
dec
loop
in
icebp
(bad)
in
pushf
mov
cld
int
inc
into
ins
(bad)
test
xchg
and
sti
jl
cdq
jmp
pop
arpl
push
adc
xchg
das
std
daa
fist
ret
sbb
dec
(bad)
in
inc
mov
mov
sbb
pop
mov
stc
es
cmp
into
add
sub
jecxz
arpl
push
ins
popa
adc
pop
inc
nop
rcr
pop
(bad)
ja
and
call
jns
mov
stos
sub
mov
mov
out
add
jl
xchg
push
fcom
adc
mov
addr16
xor
ss
sub
jae
add
push
fisubr
outs
lds
cwde
lods
pop
out
push
inc
add
cmp
out
jp
xor
cs
dec
loopne
cli
or
mov
in
stc
mov
jmp
je
or
xor
shl
inc
ret
push
mov
and
xor
cli
fistp
adc
push
cmp
jmp
je
les
jecxz
or
stos
aad
pop
sbb
scas
jne
sub
sub
dec
(bad)
cld
test
cs
mov
ja
jmp
sub
jecxz
cmp
sub
xlat
scas
cmovbe
or
fwait
mov
push
pop
pop
lock
iret
outs
lods
outs
je
ins
adc
mov
fld
inc
adc
sahf
or
pop
jno
push
leave
cli
movs
jb
pop
adc
xchg
aaa
in
or
in
sub
mov
test
(bad)
jo
setno
mov
stos
mov
xchg
scas
mov
add
sbb
sbb
xchg
xlat
inc
push
mov
cmp
xlat
rol
cmp
dec
ins
or
jne
rcr
inc
push
xchg
push
jb
adc
imul
dec
cmp
lods
xchg
mov
das
cmp
scas
or
push
xor
dec
adc
aaa
inc
pop
mov
cmp
adc
in
push
imul
iret
mov
or
arpl
jmp
jns
imul
inc
aad
inc
dec
and
(bad)
sbb
call
pop
arpl
mov
push
out
das
es
pop
mov
xor
dec
inc
fstp
test
(bad)
imul
test
fiadd
pop
je
stos
fdiv
test
bound
push
loopne
xor
test
jbe
es
int3
hlt
mov
mov
xchg
ret
popa
pop
mov
dec
ret
xchg
(bad)
data16
inc
enter
jge
pop
aam
lods
push
lods
xlat
xor
push
push
jmp
lahf
stos
jae
mov
rol
sti
aaa
cmp
fs
scas
ss
xor
push
push
fild
cmc
mov
sub
sbb
out
ins
and
inc
rcl
dec
sar
popa
jnp
bound
dec
dec
jns
fcmove
xor
and
mov
call
mov
or
fistp
pop
movs
cmp
and
or
ret
push
xchg
out
fimul
pop
mov
sbb
aam
mov
(bad)
hlt
inc
lahf
dec
popa
in
ins
hlt
push
popa
push
retf
popa
imul
sbb
bound
mov
dec
fdiv
add
test
jmp
sub
xor
push
add
xlat
mov
mov
pop
jns
mov
cdq
jb
cmps
bound
ficom
cld
js
xor
stos
nop
(bad)
pop
cdq
adc
gs
add
fcmovb
and
inc
movs
inc
repz
mov
out
stos
out
jle
sub
outs
lock
int
aad
sbb
dec
mov
inc
add
mov
and
push
cmp
adc
mov
mov
sub
enter
push
and
shr
xchg
ret
or
imul
scas
mov
daa
sbb
xor
pop
call
push
mov
inc
xchg
lahf
int3
fdivr
inc
daa
inc
cmp
sbb
test
fild
loopne
retf
inc
jnp
mov
sub
pushf
test
inc
sub
das
mov
into
mov
pop
int3
mov
inc
pushf
daa
cmp
gs
xchg
pop
daa
adc
jle
sbb
mov
sbb
inc
les
mov
add
int
fistp
pop
mov
or
repz
repz
mov
pop
dec
pop
inc
jmp
test
loopne
jg
inc
cli
scas
call
stos
and
push
loopne
icebp
lock
call
std
(bad)
aaa
imul
pop
sbb
ret
in
pop
sbb
adc
inc
stc
jae
movs
push
jns
in
bt
jnp
mov
jmp
iret
dec
sar
inc
adc
xor
jle
stc
(bad)
fstp
adc
or
(bad)
push
dec
outs
pop
pop
pushf
imul
mov
movs
add
and
sub
fisub
and
jg
xchg
pop
fmulp
add
mov
sbb
int
mov
cld
or
adc
mov
xor
inc
pushf
cmp
xchg
adc
fdivr
jae
js
ins
int
cmps
stos
mov
and
jo
or
cmp
sub
xchg
xchg
nop
into
mov
push
xchg
pop
or
movs
test
push
pop
adc
push
xlat
cmp
adc
jne
lods
jae
xor
or
test
seta
dec
jmp
dec
cs
ss
nop
data16
fadd
mov
jb
add
and
and
addr16
mov
mov
adc
loop
push
dec
cld
cli
inc
add
fistp
mov
sub
cld
xchg
mov
cmp
mov
(bad)
fidiv
rcl
xor
pop
add
dec
fidiv
pop
mov
and
push
jge
arpl
imul
fild
cmp
pop
dec
pop
mov
pop
imul
sbb
rol
push
cmp
inc
adc
stos
xchg
iret
leave
lds
iret
jl
int3
jp
stos
(bad)
jmp
shr
sub
and
and
cwde
mov
ins
movs
fisttp
or
jg
mov
ins
adc
sbb
jle
adc
in
js
fsubr
daa
and
outs
push
mov
leave
jbe
icebp
retf
je
sbb
jecxz
hlt
jge
pop
fs
test
jbe
jbe
sbb
movs
aas
and
mov
push
fwait
out
bound
ret
mov
(bad)
in
ret
xchg
and
dec
xlat
push
mov
inc
xlat
and
pop
cmp
mov
xlat
xor
jbe
xor
jle
mov
inc
cs
popa
mov
xchg
sub
imul
hlt
rep
(bad)
jb
adc
sbb
retf
pop
or
fdivp
addr16
pop
jb
ficomp
stos
ror
ret
sub
push
push
mov
pop
add
iret
rcl
mov
sar
out
push
add
fimul
mul
aas
xlat
push
mov
mov
cmp
lds
or
dec
cmp
cmp
sar
mov
dec
ret
sub
scas
out
outs
popf
outs
jnp
imul
mov
jnp
ret
les
iret
push
and
int
and
lahf
sub
retf
(bad)
into
push
into
or
cli
xor
push
mov
mov
inc
test
mov
or
xchg
xor
in
cmp
jns
iret
mov
arpl
mov
or
cmp
test
sbb
mov
dec
pcmpeqb
mov
das
int3
xchg
pop
push
xor
daa
jmp
popf
inc
jbe
fs
or
mov
xchg
mov
ins
cmps
jnp
push
and
inc
dec
pop
inc
sti
or
cmps
sbb
mov
inc
sbb
xchg
jb
loope
scas
sub
xchg
int3
xchg
mov
cmp
pop
les
jecxz
sbb
push
mov
movs
test
pop
test
nop
adc
ret
stos
sbb
xlat
add
(bad)
mov
retf
mov
and
xchg
xchg
mov
aas
fs
lods
nop
out
xor
xor
mov
jne
cmp
repnz
sbb
fs
sbb
sbb
push
jmp
mov
jnp
pop
in
lock
mov
and
jmp
lahf
jns
clc
js
sbb
sbb
dec
dec
inc
add
mov
adc
push
jb
bound
sub
sbb
and
sbb
stos
mov
movs
pop
mov
icebp
shr
repnz
test
loopne
push
cmp
and
inc
cmc
xchg
cmp
jecxz
or
loop
mov
addr16
mov
ret
aaa
aas
dec
push
mov
xchg
or
or
jne
sti
(bad)
jmp
jecxz
or
sbb
mov
dec
lock
xor
adc
popa
jge
inc
xchg
rcl
add
scas
xor
bnd
fidivr
aad
imul
call
aaa
(bad)
int3
movs
mov
movnti
push
mov
add
inc
icebp
jecxz
nop
push
pusha
xchg
mov
cmp
jnp
mov
rcr
xchg
js
xchg
aam
rcr
mov
inc
mov
(bad)
pusha
push
loope
das
push
pop
or
cmp
pop
fs
stos
pusha
xchg
call
inc
fwait
inc
cmp
xchg
ret
mov
cmc
pop
stc
je
pop
or
add
ss
cmps
xor
sbb
daa
pop
add
fst
dec
cld
fidiv
adc
test
pop
push
mov
and
xchg
jp
js
push
lods
pop
es
cmps
out
repnz
inc
jae
enter
in
test
xchg
mov
fbld
pop
call
cmp
out
cmp
das
dec
adc
sbb
test
out
pop
out
xchg
mov
add
lods
addr16
call
cmp
shl
stos
fwait
mov
pop
xor
pop
fst
arpl
inc
xor
mov
mov
jge
popa
cs
xchg
xor
popa
cmp
ss
movs
push
movs
es
adc
movs
mov
push
xor
mov
mov
not
cmp
mov
and
adc
(bad)
jmp
ret
fcomp
rcr
call
jle
dec
push
popf
mov
cli
sub
dec
push
jmp
xor
cmp
mov
cdq
sub
pusha
(bad)
xor
fstp
cs
dec
xor
mov
cmps
aam
ret
and
sub
mov
xlat
xchg
inc
jnp
inc
jge
inc
push
push
lods
rcl
xchg
dec
aad
xor
repnz
(bad)
loope
arpl
daa
rcr
ins
retf
push
nop
ins
mov
inc
mov
sub
in
xchg
out
adc
sbb
adc
(bad)
pop
aaa
jns
cmp
loop
xchg
iret
pop
push
jl
sub
and
jge
adc
shl
in
mov
scas
cwde
fwait
mov
in
sub
fild
jne
(bad)
pop
mov
jle
les
and
pop
cmps
gs
push
idiv
and
pop
dec
inc
dec
mov
jecxz
and
pop
xor
adc
lods
mov
aas
nop
push
aas
lock
mov
retf
imul
mov
mov
mov
push
push
mov
retf
pop
rcr
loopne
adc
fst
mov
mov
push
and
mov
mov
pop
cdq
out
test
out
xchg
xor
mov
inc
sub
ds
nop
xor
xchg
pop
neg
sub
dec
mov
fs
xor
add
lods
jmp
sti
mov
call
dec
sar
and
pop
cmp
in
shl
(bad)
xor
lods
adc
or
enter
mov
mov
clc
test
or
add
mov
movs
out
(bad)
ror
cmp
push
adc
fldl2e
out
movs
mov
push
mov
imul
sti
xor
outs
fisub
test
inc
fisttp
jle
inc
je
dec
or
or
popa
jl
test
jnp
mov
and
cmps
add
jge
inc
mov
std
rol
in
jns
mov
jo
adc
leave
loopne
sar
xor
(bad)
fisttp
mov
jecxz
out
add
dec
es
inc
and
shl
sub
mov
ins
outs
ret
jl
pop
in
out
adc
push
cmp
and
ret
push
cmps
or
add
jle
fild
pusha
ret
add
fmul
gs
dec
dec
cmp
jl
fadd
dec
jge
js
xchg
js
arpl
repz
cmp
inc
push
dec
push
dec
cmps
clc
sbb
sbb
mov
mov
(bad)
lock
push
xchg
loope
mov
in
push
vmread
push
fwait
daa
lahf
pusha
in
popf
fadd
fwait
test
lahf
xchg
push
jmp
push
fdiv
dec
out
jb
jne
test
pop
mov
fisttp
sbb
adc
push
sahf
hlt
enter
mov
or
adc
cmp
pop
ds
stc
cli
sub
enter
or
cdq
mov
aas
xor
jno
sub
push
mov
pop
call
inc
cmp
jge
xor
sti
jmp
hlt
out
jge
pop
inc
pop
fnstenv
sbb
popf
xchg
iret
les
jne
loop
test
adc
ins
icebp
sub
loope
dec
jle
(bad)
repz
(bad)
loopne
fnstenv
fsub
adc
call
cli
add
jge
sti
loope
cwde
addr16
mov
inc
cdq
stc
jne
xchg
out
aad
imul
int3
in
adc
in
ja
repz
jmp
mov
test
jns
neg
or
test
sbb
and
mov
retf
jne
adc
mov
mov
or
xchg
push
ins
out
sub
stos
jae
bound
sbb
push
or
push
jne
pop
inc
push
cs
sbb
or
inc
in
sub
xlat
dec
pop
test
imul
push
(bad)
call
cmps
stos
lock
xchg
cmp
movs
cmp
sub
jle
and
jge
mov
(bad)
mov
sbb
pop
or
popa
ins
dec
xchg
aaa
enter
pop
aaa
cld
call
in
xchg
icebp
jl
xor
aam
add
nop
xchg
mov
repz
ja
sub
push
hlt
icebp
and
repz
inc
lea
rol
test
popa
shr
fs
(bad)
dec
adc
jno
cs
imul
mov
stos
inc
(bad)
sub
ficom
sub
(bad)
lahf
push
enter
int
cwde
test
enter
cs
push
xor
imul
xor
mov
mov
adc
push
div
xor
rol
clc
push
popf
(bad)
call
jns
cli
movs
mov
mov
cmps
in
(bad)
aam
and
shl
shl
ss
sar
rol
sbb
jmp
scas
push
push
and
jmp
(bad)
sahf
add
test
or
xchg
ins
and
ror
ret
cmp
js
cmp
mov
mov
mov
sbb
pop
cld
out
loope
jmp
add
inc
cld
inc
out
stc
movs
or
inc
mov
nop
test
jmp
aaa
les
fdiv
rep
icebp
mov
mov
popa
popa
les
and
imul
add
mov
cdq
das
mov
sbb
stc
and
jge
cmp
xor
and
je
rcl
and
aaa
mov
fnstcw
add
push
xchg
jg
dec
or
ja
js
sbb
or
pop
or
ror
cwde
mov
das
inc
scas
pop
clc
stos
cmps
out
push
int
pop
add
pop
dec
fxch
mov
and
iret
inc
dec
lods
aam
inc
(bad)
in
sub
ficom
inc
jne
inc
adc
mov
addr16
sbb
into
or
retf
arpl
aas
push
cmp
add
jge
icebp
push
xor
frstor
jns
pushw
xchg
push
push
jns
sub
cdq
pop
mov
mov
imul
jo
or
mov
xchg
int3
ss
rol
or
addr16
data16
push
test
loopne
jb
dec
sub
outs
fxch
xchg
les
jae
inc
mov
mov
lahf
stc
push
vpaddsb
imul
lods
jl
mov
sub
outs
dec
iret
out
xor
cmp
mov
pop
test
mov
outs
test
mov
call
ss
adc
push
pop
lods
cmp
shr
movs
add
sub
sar
cmps
sbb
dec
and
mov
dec
popf
mov
cmp
push
test
aas
div
xor
pop
mov
pop
xchg
adc
sti
mov
xor
mov
lahf
iret
int3
fsubr
and
fadd
dec
cli
push
push
or
inc
fmul
cmps
add
pop
xor
pop
dec
repz
pop
mov
push
push
int
icebp
es
or
jmp
lods
mov
(bad)
mov
jae
push
into
ins
push
pop
xchg
out
mov
dec
pop
jge
xor
inc
adc
in
jae
enter
aam
repnz
inc
shr
and
mov
movs
pop
push
push
lock
dec
mov
adc
cwde
jmp
invd
adc
add
ins
sti
(bad)
jmp
xchg
jecxz
das
(bad)
push
pop
inc
or
xchg
push
scas
cmp
ss
sbb
add
fist
pop
imul
imul
mov
aas
and
in
add
and
dec
repz
and
jl
jl
fistp
push
dec
inc
(bad)
rcr
fcomp
push
push
cmps
cmp
dec
xor
out
push
inc
cmp
repnz
or
cmp
pop
inc
icebp
outs
cmp
int3
test
add
xchg
dec
mov
jp
ja
mov
mov
sbb
push
fadd
or
(bad)
jmp
xchg
cmp
jns
js
and
aaa
sbb
sbb
xchg
cmp
cdq
fiadd
or
das
sub
mov
cmps
jo
inc
es
sbb
xchg
sub
sbb
sti
xchg
retf
inc
inc
pushf
mov
fnstsw
ins
aas
sbb
aas
ss
pop
cmps
sar
xchg
push
inc
xchg
jae
es
or
push
mov
add
push
pop
into
mov
mov
and
pop
scas
and
imul
xchg
neg
jmp
cmps
std
hlt
ja
in
imul
cld
pop
mov
sub
in
ins
jb
jnp
test
mov
sar
pushf
int3
ficom
sub
cmp
pop
sti
adc
(bad)
push
(bad)
jne
ja
cld
inc
mov
mov
xchg
mov
das
out
pop
das
add
pop
loop
std
out
push
addr16
shl
jmp
mov
add
sub
(bad)
xchg
in
mov
dec
and
xchg
fld
cmp
(bad)
stos
test
out
pop
fs
pop
inc
pop
shl
mov
add
xchg
mov
pop
push
add
push
mov
(bad)
mov
adc
icebp
movs
lock
push
test
outs
xchg
push
push
add
mov
(bad)
(bad)
inc
out
sbb
cwde
xchg
test
jp
imul
retf
ins
jg
push
xor
sub
sub
mov
push
xchg
xlat
pop
pop
adc
push
in
mov
inc
arpl
or
arpl
fst
leave
imul
sbb
ja
int
sbb
bound
hlt
jb
repnz
mov
dec
movs
xchg
mov
mov
ds
sub
cmc
mov
sub
pushf
push
es
lods
imul
rcr
lahf
push
test
gs
sbb
cli
shr
aam
cmp
push
mov
in
aas
mov
aas
and
mov
inc
aam
(bad)
pop
sahf
sbb
(bad)
outs
push
scas
aad
rol
fsub
fwait
jnp
xor
sbb
mov
sub
mov
test
aas
add
xchg
mov
sbb
add
mov
jl
movs
test
xor
push
cld
test
mov
(bad)
cli
jne
push
push
push
fdiv
push
clc
ins
das
mov
(bad)
jge
mov
sub
outs
cdq
stos
jmp
fs
popf
ret
cmp
jl
sbb
call
fldcw
div
aaa
push
xchg
sbb
jp
lods
aam
fidivr
add
push
(bad)
repz
xchg
and
cmp
loopne
retf
sub
push
test
jmp
mov
cld
and
pmaddwd
push
add
adc
sub
inc
repz
je
out
push
mov
adc
ins
fcom
neg
int3
stos
popf
cdq
jnp
inc
mov
es
mov
sbb
leave
popf
adc
outs
test
test
retf
xchg
sbb
shl
lods
popa
xor
or
add
icebp
or
cmpxchg
sub
test
jmp
add
retf
and
jb
scas
push
and
mov
ss
pop
in
test
cmps
stos
mov
fsub
jns
inc
inc
pop
and
jg
pop
push
xchg
pop
or
out
mov
gs
sub
bound
xor
mov
xor
enter
cmp
mov
and
stc
ins
adc
jmp
div
xchg
ds
arpl
inc
fs
mov
jecxz
enter
repnz
xchg
repnz
outs
movq
das
jl
sbb
pop
aas
pop
sbb
and
rcr
and
mov
mov
add
and
leave
cmp
int3
fmulp
addr16
sahf
xchg
test
retf
cmp
cwde
add
xor
mov
adc
xor
jle
and
les
push
adc
ins
mov
aas
popf
in
pusha
mov
enter
cs
cwde
test
jl
aad
dec
xor
mov
adc
mov
call
fcmove
lods
ss
add
jge
fidivr
adc
mov
ds
das
pushf
push
push
push
mov
jns
jne
call
mov
jge
xchg
jmp
cmp
test
lods
nop
movs
out
sahf
mov
adc
push
arpl
clc
dec
inc
call
mov
xlat
je
cld
mov
xchg
pop
into
ror
mov
repz
jl
ud0
imul
adc
bound
out
out
ret
jnp
addr16
dec
stos
test
inc
jns
dec
or
les
shl
pop
inc
loopne
aaa
jl
dec
jae
mov
ins
mov
repz
push
mov
xchg
xor
push
adc
arpl
push
add
xchg
das
ds
lds
mov
pop
lahf
mov
nop
inc
gs
(bad)
fsubr
dec
cwde
xor
xchg
(bad)
cmps
jne
jle
(bad)
mov
movs
add
jns
adc
or
xchg
std
cmp
or
dec
xor
call
cmp
or
shl
mov
cmp
add
clc
ss
arpl
push
popf
popa
aas
sub
enter
scas
js
inc
(bad)
jae
jo
xchg
dec
jno
addr16
xchg
cli
xor
or
rol
imul
into
add
bound
stc
mov
mov
dec
ret
sub
cmc
sub
add
(bad)
ficom
xchg
into
add
pop
cli
rol
and
add
not
test
or
sub
sbb
pushf
push
sub
enter
mov
xor
xchg
lock
(bad)
sbb
mov
mov
loope
test
jmp
xor
aam
or
mov
push
enter
sub
icebp
mov
in
adc
scas
inc
cmp
repz
push
(bad)
push
xor
(bad)
inc
std
sti
jp
pop
cmp
nop
std
or
push
dec
adc
cli
ins
jge
inc
iret
inc
mov
adc
dec
test
les
inc
adc
aas
pop
mov
jns
daa
and
mov
mov
push
cmp
adc
adc
push
push
sahf
push
cwde
ret
int3
in
mov
jmp
mov
jb
push
(bad)
pop
repnz
aam
mov
in
cmp
cmp
jle
cmp
xchg
pop
call
call
cmp
movs
xor
or
in
es
mov
jnp
cmp
mov
neg
lea
add
cmps
stos
push
in
(bad)
xor
dec
jne
xchg
rcr
pop
into
out
lods
ja
mov
add
mov
pop
xchg
inc
fsubr
popf
mov
call
mov
pop
sub
cs
sub
mov
sar
ds
push
loopne
xchg
push
sub
stos
ins
or
mov
stos
enter
(bad)
push
sbb
cmps
adc
jmp
cmc
(bad)
test
mov
inc
cs
push
push
stc
push
lds
push
pusha
outs
rol
mov
add
pop
mov
lds
inc
bound
in
jne
fwait
out
std
addr16
cmp
js
aas
cdq
mov
jns
repnz
or
lock
lahf
mov
adc
js
and
imul
fbstp
mov
cmp
lea
les
(bad)
aaa
stc
jg
jbe
sub
enter
ja
sbb
mov
test
sti
jmp
xchg
mov
sbb
mov
movs
add
loope
rol
inc
ret
sub
movs
retf
scas
push
mov
ror
(bad)
stos
or
clc
(bad)
clc
(bad)
(bad)
out
dec
imul
adc
dec
cmp
dec
cs
push
sbb
loope
xchg
or
pop
stos
sar
adc
mov
mov
xchg
jle
adc
test
call
jno
ja
dec
ret
popf
push
inc
pop
push
mov
mov
lods
loop
sbb
stc
mov
inc
icebp
rcl
adc
mov
scas
int
cmp
repz
mov
outs
aaa
cmp
and
and
mov
(bad)
jo
(bad)
sti
test
mov
(bad)
sar
adc
enter
gs
outs
retf
push
(bad)
(bad)
mov
mov
cmp
jle
fsubr
jmp
sti
cmp
inc
sub
inc
mov
xchg
mov
retf
push
xchg
adc
lds
call
adc
fsub
dec
sahf
cmp
push
adc
mov
cwde
call
xchg
or
or
mov
jmp
xchg
ror
mov
push
xchg
lea
mov
in
aas
stos
int3
rcl
push
inc
pop
pop
jge
sub
lods
rol
inc
jns
pop
call
test
leave
jp
(bad)
movs
add
popf
xchg
in
retf
and
xchg
cmps
fimul
adc
sbb
sbb
das
lock
bound
xchg
jle
enter
fcomp
inc
fist
(bad)
ins
pop
pop
xor
shl
or
out
(bad)
sbb
or
cwde
test
repz
sahf
cmp
push
push
sahf
jns
jg
jl
add
mov
jge
sbb
loope
or
ds
add
add
xor
mov
cs
cs
sahf
out
lock
mov
xchg
adc
cwde
mov
je
pushf
mov
mov
or
ds
mov
xchg
out
lods
push
sti
cmps
mov
mov
xchg
stos
and
add
xor
lds
pusha
loop
js
add
xor
out
cwde
or
test
fwait
xor
inc
imul
aad
cmp
inc
daa
popf
outs
sbb
jecxz
cs
xor
aam
xlat
add
lahf
push
cli
mov
icebp
jo
cmc
jns
sti
retf
fcom
mov
sahf
fsubr
fldenv
adc
mov
test
test
sti
jecxz
or
push
in
cmp
pop
xchg
(bad)
inc
repz
sbb
fnstenv
push
leave
push
cmps
hlt
mov
sub
imul
(bad)
inc
mov
dec
pop
or
dec
(bad)
sub
and
inc
jae
and
(bad)
or
push
jmp
pop
sahf
sub
iret
out
inc
sub
xor
retf
and
sbb
scas
int
xor
or
mov
or
pop
adc
dec
xor
ret
xchg
(bad)
sbb
iret
pop
sahf
mov
div
je
hlt
sub
dec
(bad)
xor
es
push
pop
cmp
out
mov
jbe
sub
imul
shr
mov
dec
(bad)
arpl
mov
cmc
adc
call
inc
fwait
adc
pop
cmp
inc
sbb
cmp
inc
dec
inc
mov
pop
jb
sar
call
ds
fs
jg
mov
xchg
es
scas
arpl
(bad)
jae
inc
xchg
inc
jne
idiv
loope
fwait
dec
xlat
aaa
ins
sub
movs
fnsave
pop
iret
mov
push
call
das
popf
mul
pop
push
xor
bound
pop
rcr
imul
jmp
retf
cwde
out
cwde
pop
mov
test
ins
push
call
mov
aas
fs
inc
mul
jb
mov
ss
call
pop
call
sub
jl
movs
in
loop
lahf
pusha
mul
cmp
adc
lahf
std
pop
mov
sub
sub
jb
(bad)
test
bnd
ja
fst
call
es
shl
jmp
daa
cmp
xor
dec
fcmovb
xor
and
jmp
fst
pop
aad
fcmovu
int3
mov
fstp
mov
sti
dec
mov
mov
pop
mov
clc
in
or
shr
jb
inc
js
into
push
mov
lods
xchg
lahf
movs
add
ja
jmp
sbb
data16
int
xlat
stc
aad
inc
mov
nop
das
shr
daa
ins
jl
inc
inc
adc
ret
mov
mov
fwait
cli
fnsave
js
inc
xorps
rcl
sbb
cmp
dec
shl
int3
push
in
jecxz
dec
adc
lods
mov
xchg
shl
xor
xchg
scas
push
out
xor
add
push
add
xchg
push
enter
mov
repnz
pop
xor
adc
scas
pop
into
jecxz
cmp
into
nop
pop
pop
mov
std
cli
push
cmp
pop
xlat
call
xor
sub
jb
fnsave
sub
or
stc
push
pop
add
aad
mov
adc
lods
push
add
cdq
xchg
cmps
fs
jae
mov
sbb
jb
xchg
xor
sbb
push
pop
lahf
add
out
adc
xor
jo
jg
mov
fisttp
mov
addr16
jg
sub
xchg
inc
mov
xor
add
jns
cmp
call
mov
xchg
retf
(bad)
pushf
mov
sahf
add
sub
push
(bad)
mov
cmp
scas
call
add
sbb
jne
and
and
mov
mov
ss
push
push
fistp
or
rcr
fs
cmp
ret
into
stos
leave
and
adc
jbe
add
jne
jbe
xchg
mov
or
call
jbe
sub
movs
push
xchg
hlt
je
adc
aaa
bound
pop
add
lds
sbb
or
daa
test
push
in
lea
mov
enter
and
fs
jecxz
addr16
jmp
es
push
ret
and
cmps
test
jmp
hlt
fdiv
or
int
cmp
daa
push
es
repz
call
retf
in
into
stos
and
or
dec
stos
aad
inc
lahf
outs
ret
sub
les
cmp
neg
and
das
jbe
jmp
mov
jns
outs
div
xor
pop
inc
mov
sbb
(bad)
push
arpl
inc
xchg
pop
sbb
mov
rol
fs
sub
icebp
xchg
mov
adc
jno
lock
mov
sub
push
leave
out
push
outs
movs
lss
mov
je
inc
cs
or
test
scas
lds
js
out
adc
cmp
mov
inc
in
xchg
ret
fwait
adc
clc
nop
mov
outs
cmps
into
adc
aaa
mov
and
movs
cmc
(bad)
test
neg
movs
imul
lods
inc
push
cmp
repz
stc
push
cdq
cmp
aad
pop
addr16
and
cwde
jecxz
test
sbb
out
jge
push
and
rcr
jb
ds
inc
push
inc
bound
cli
push
pop
in
xchg
sub
cdq
adc
cmp
or
lods
aaa
push
cmp
(bad)
into
mov
lock
or
leave
xor
push
test
push
pop
mov
push
loope
not
cdq
xchg
mov
hlt
loopne
scas
mov
test
mov
mov
daa
fucomi
or
call
xchg
mov
adc
imul
mov
sub
and
jge
pop
ds
push
loope
out
clc
push
leave
outs
pop
pop
mov
add
jge
push
fs
push
pop
mov
test
je
imul
add
and
(bad)
jae
scas
cld
popf
cs
scas
ins
movs
sub
pop
adc
pop
je
mov
jle
lahf
in
daa
mov
ret
mov
cmp
dec
jae
cmp
lea
aad
mov
cmp
sbb
shl
sar
retf
add
outs
mov
pop
jne
sub
and
je
mul
push
mov
in
shr
rcl
inc
jns
arpl
scas
scas
loope
cmp
rcl
push
ins
movs
sbb
gs
cmc
mov
stos
ins
xor
call
ja
xor
iret
jb
mov
inc
shl
(bad)
imul
jo
ss
lds
movs
scas
loop
icebp
jnp
icebp
mov
xchg
jnp
or
adc
xchg
loopne
pop
inc
jbe
test
shl
aas
lods
sbb
xor
pusha
inc
rcl
cmps
ror
jo
shr
adc
jecxz
jmp
enter
dec
mov
or
xchg
rcr
fs
(bad)
pop
fwait
or
movs
inc
cmp
pop
cs
in
test
les
xchg
in
std
sub
cmp
lods
push
fcomp
loope
or
jl
fdivr
sub
xor
inc
shr
cmp
sbb
loope
sbb
stos
jl
aad
pop
frstor
add
xchg
(bad)
stos
cli
arpl
add
inc
sbb
fwait
sahf
sub
dec
leave
fmul
stos
test
ins
adc
bound
jp
div
ins
sbb
sahf
push
cmps
popf
mov
movs
jp
cmp
xor
fcmovnu
(bad)
rcl
addr16
ins
mov
sub
inc
pop
dec
in
movs
and
mov
xor
add
ds
xchg
add
outs
ret
idiv
loopne
add
loopne
sub
imul
mov
inc
jmp
sbb
retf
imul
pop
and
rcr
je
push
xchg
jl
arpl
sub
push
scas
es
pusha
fcmovb
das
imul
nop
imul
mov
sub
fist
mov
mov
ds
mov
scas
sbb
call
dec
ja
rcr
loopne
cmps
and
(bad)
jle
xchg
mov
ficomp
fst
or
icebp
cmp
xor
retf
fdivr
pop
out
dec
idiv
je
mov
cmp
dec
aaa
hlt
adc
jmp
repz
xchg
int3
int3
mov
inc
xor
xchg
lahf
mov
cmp
sbb
ins
mov
fdiv
jle
xchg
jg
test
jle
fs
sub
add
dec
lods
ins
icebp
pop
push
sub
mov
imul
fdiv
shr
xchg
ins
mov
int3
push
mov
sbb
xchg
sub
sbb
xor
adc
pop
addr16
cmp
fwait
mov
stos
dec
xor
cwde
adc
push
dec
bound
(bad)
fnstcw
pop
cmp
dec
nop
and
pop
out
aaa
ror
in
cmp
or
push
xchg
std
fadd
pop
inc
out
inc
push
in
loop
pop
imul
or
ds
fidivr
inc
sbb
mov
cmp
mov
mov
jl
mov
cmp
ds
push
xor
jbe
dec
inc
retf
jo
ds
adc
outs
cld
mov
loope
push
sub
xchg
sbb
cli
xchg
data16
inc
out
inc
push
cli
cwde
adc
jmp
push
sbb
push
xchg
out
std
loopne
adc
push
test
dec
mov
loope
les
idiv
mov
push
lock
shr
repz
mov
dec
add
test
in
cld
loope
xor
repnz
pop
adc
push
cli
mov
push
loop
(bad)
repnz
ins
xchg
(bad)
lahf
push
or
aad
mov
movs
mov
jle
fwait
mov
jne
push
push
int
adc
push
bound
es
scas
cmp
xchg
dec
int
(bad)
fmul
movs
push
loopne
push
in
jmp
(bad)
push
add
ret
push
mov
mov
pop
xchg
mov
push
adc
cmps
and
mov
loope
mov
inc
mov
xchg
iret
and
cmovb
mov
fs
lock
push
or
and
xchg
sub
test
xchg
fucom
scas
mov
sub
popf
in
pop
dec
cwde
out
sbb
mov
jnp
xchg
movs
ins
aam
clc
daa
mov
fcmovu
pop
addr16
jp
test
scas
movs
inc
clc
adc
outs
fstp
push
rcl
xor
cmp
out
js
jmp
gs
mov
pop
mov
mov
rol
not
aaa
mov
mov
(bad)
jge
inc
xor
or
rcl
jb
mov
sbb
ret
adc
sbb
mov
xor
inc
pop
pop
cmp
sub
inc
(bad)
cs
or
or
xchg
sub
xor
inc
push
mov
mov
sub
xor
pop
shr
shr
sbb
mov
or
pop
pop
test
cmp
in
pop
mov
xchg
or
jbe
jg
and
shl
(bad)
mov
xchg
jo
fcos
das
mov
in
leave
das
jmp
mov
sbb
jle
cmps
pop
push
mov
pop
lods
and
xchg
fcomp
pushf
out
mov
mov
out
and
pop
push
retf
push
jbe
adc
inc
inc
(bad)
lock
jg
ret
sbb
lods
jle
fst
mov
and
jno
adc
mov
sti
mov
or
mov
dec
in
add
repz
bound
je
push
out
es
dec
cmp
jo
pusha
mov
mov
movs
dec
(bad)
repnz
dec
sar
pop
scas
mul
and
daa
sahf
sub
jg
jle
lods
call
vpshlb
mov
fistp
sbb
int
jne
es
dec
movs
sub
cmp
fwait
int
lahf
jecxz
pusha
cmp
cmp
(bad)
hlt
push
or
jbe
ror
ds
xor
std
jmp
add
jecxz
sub
dec
push
out
icebp
push
and
add
ret
or
pop
movs
jecxz
or
jb
inc
jnp
enter
bound
add
jmp
es
sbb
or
add
cmp
xchg
test
(bad)
push
jb
test
retf
and
cli
scas
sbb
ja
ss
dec
jo
fisttp
in
push
ror
cmp
or
aad
repnz
sbb
ret
or
xchg
mov
cld
mov
inc
mov
mov
cmp
adc
js
push
or
lds
test
aad
fcomp
sbb
add
shr
cmp
in
scas
pop
call
bound
fucomi
and
cli
(bad)
and
jb
push
dec
add
fwait
mov
jb
aas
cmp
pop
mov
push
add
mov
mov
fcom
fidivr
loopne
das
pop
(bad)
cli
xchg
ins
sub
mov
mov
(bad)
(bad)
je
jno
sti
cmp
outs
repnz
dec
shr
push
pop
mov
outs
mov
xchg
jecxz
lock
xchg
cs
xor
mov
mov
out
out
loopne
cmp
xor
ficomp
nop
dec
sbb
je
cmp
pop
add
je
ss
or
out
cli
mov
ins
fadd
adc
repnz
push
rcl
enter
lods
xor
jnp
dec
jnp
(bad)
ror
fisttp
mov
cmp
dec
push
pop
mov
lea
frstor
lods
jne
or
mov
(bad)
leave
nop
pop
add
pop
jae
imul
imul
push
sbb
mov
shl
pop
mov
add
cmp
push
push
jecxz
ins
push
dec
stc
adc
fdivr
outs
mov
ret
popf
add
inc
jp
and
cmp
mov
jmp
mov
xor
cli
fs
imul
adc
pop
test
and
test
sub
call
push
dec
shl
test
addr16
pop
and
adc
int3
pop
jecxz
scas
ret
adc
pop
xor
mov
xchg
push
repz
xchg
push
sub
std
or
out
out
movs
mov
xor
movs
jns
mov
push
ins
push
jmp
inc
jge
jl
out
dec
jge
fidiv
sub
aad
jle
cmc
ja
inc
enter
xor
dec
jp
mov
mov
mov
and
and
std
mov
rcr
xor
into
mov
add
sub
fidivr
push
rol
pushf
cmp
call
(bad)
add
test
cmp
std
repz
stc
inc
out
out
mov
sub
shl
sbb
out
cmps
jecxz
popf
mov
mov
mov
inc
shr
icebp
push
aaa
fnstenv
or
inc
hlt
dec
dec
add
sbb
js
jge
jbe
add
stos
ficom
aas
(bad)
in
mov
or
in
sbb
xor
call
das
xor
lock
lds
pop
adc
scas
leave
xor
arpl
rcl
lock
out
and
mov
ins
and
js
or
(bad)
push
push
stc
inc
cmp
jno
pop
mov
test
mov
hlt
sbb
pushf
mov
out
cld
cdq
cmp
jae
not
call
imul
(bad)
mov
xchg
stos
add
pop
push
cmp
adc
sub
cmp
movs
lock
clc
pop
(bad)
fcom
or
stc
call
(bad)
into
int
mov
sub
pushf
jne
repz
rcr
loop
cmp
int3
cmovno
inc
mov
ds
ret
scas
xor
push
push
pop
add
and
xor
push
mov
je
pop
mov
mov
test
cmp
in
mov
mov
out
sub
ret
stos
jmp
aad
mov
std
pop
pop
sbb
sbb
mov
lahf
push
mov
or
pushf
cmp
imul
cmp
repnz
cmp
xor
jl
loop
jo
push
pop
cdq
pop
or
sub
pushf
mul
dec
push
mul
xor
mov
je
xor
adc
stos
pop
xor
inc
fdivr
shr
stc
sbb
out
pop
dec
shl
not
jnp
cmps
push
sbb
mov
lahf
sar
add
cmp
imul
jo
test
cwde
ds
jecxz
mov
jecxz
xchg
push
push
or
mov
mov
dec
pop
test
gs
pop
outs
test
mov
ss
push
jb
fs
mov
xor
adc
jbe
jl
inc
sar
push
add
mov
ja
add
lock
jo
mov
sub
push
hlt
xor
push
push
es
add
cmc
dec
pushf
and
and
leave
cmp
dec
icebp
shl
hlt
jno
push
outs
int3
inc
call
sub
movs
push
pop
adc
test
add
or
test
jmp
hlt
mov
dec
xchg
pop
xor
cmp
fsubr
mov
xor
or
push
jge
sbb
jmp
movs
bswap
scas
xor
sub
xchg
imul
(bad)
ret
xchg
stos
dec
push
aad
iret
test
mov
aad
or
out
sti
aam
or
add
test
mov
xchg
out
xchg
ins
dec
dec
mov
repnz
xchg
loopne
inc
popf
mov
ret
retf
sub
imul
xor
adc
inc
mov
pusha
scas
popa
arpl
rcr
mov
add
dec
mov
aaa
(bad)
add
bound
sub
mov
or
shr
adc
pop
lahf
lahf
das
pushf
pop
dec
lods
mov
call
lock
mov
pop
leave
das
inc
fisub
mov
mov
stos
in
jl
in
push
push
mov
into
scas
imul
aam
bound
pop
cmp
xchg
in
cmc
ror
sar
call
mov
scas
ss
test
out
cmp
pop
popf
add
loope
adc
adc
inc
imul
fnstenv
xchg
out
fwait
inc
nop
push
jae
push
push
sbb
pop
fxch
in
mov
xchg
push
xor
je
popa
arpl
or
inc
mov
mov
outs
cmp
ja
push
dec
movs
dec
ret
retf
idiv
(bad)
fwait
mov
ret
adc
cmp
mov
mov
mov
leave
push
pop
std
xchg
dec
mov
rcl
fsubr
sub
popa
or
cmps
inc
mov
stos
sbb
cmp
jle
in
lock
pushf
mov
add
sub
pop
imul
out
scas
or
jmp
sbb
int
(bad)
imul
cld
jmp
inc
cld
test
or
(bad)
in
lahf
fimul
mov
lea
xlat
adc
jl
mov
mov
mov
inc
and
xchg
push
sub
movs
mov
pop
in
adc
pop
pop
pop
mov
movs
mov
and
stos
add
mov
sub
lea
out
jmp
mov
xchg
dec
xchg
push
jmp
pop
push
ret
xor
rcr
fld
or
js
(bad)
in
rcl
and
mov
xchg
xchg
ret
arpl
or
stc
pushf
add
rcl
sbb
daa
scas
imul
fisubr
and
jmp
(bad)
add
add
pop
es
add
imul
out
sub
mov
mov
in
(bad)
inc
xor
jae
push
push
or
or
(bad)
xor
in
xchg
aad
sbb
fst
xchg
psubw
fadd
fwait
pushf
sar
mov
push
loopne
dec
push
and
stos
dec
or
dec
nop
dec
dec
ret
jge
xor
dec
loopne
or
lods
cli
mov
adc
mov
mov
mov
adc
stos
push
push
xchg
jl
test
movs
outs
or
outs
xchg
or
push
inc
popf
fisttp
or
pushf
stc
mov
dec
out
test
out
mov
pop
fisubr
lods
(bad)
cmp
sub
or
test
dec
mov
dec
jno
lods
test
push
leave
xchg
jmp
movs
pop
aad
add
inc
call
cmp
mov
adc
cmp
jge
inc
mov
retf
push
enter
(bad)
pop
sbb
adc
xchg
pop
or
jmp
(bad)
mul
in
imul
push
mov
adc
clc
mov
shl
add
pop
dec
sahf
push
std
xchg
sub
xchg
lock
xor
add
inc
sbb
mov
aas
stos
pop
ror
pop
mov
jb
test
std
mov
std
shl
inc
and
scas
scas
clc
and
aas
pop
add
movs
jb
fs
fadd
push
test
pop
sub
jbe
sub
push
bound
or
in
bound
add
mov
in
jmp
push
xor
mov
daa
repnz
inc
or
ret
or
mov
clc
ficom
pop
icebp
sub
fnstsw
xchg
cmp
adc
xchg
jg
ins
push
lahf
sub
ret
movs
test
mov
adc
sbb
(bad)
leave
test
fisubr
rcr
mov
scas
stc
les
fcomp
addr16
jecxz
cmp
fstp
xor
gs
xchg
fistp
mov
pop
xchg
push
inc
xor
aaa
push
mov
mov
add
iret
hlt
push
pop
cmps
adc
sahf
bswap
fsubr
sbb
shl
or
ficom
outs
ret
cmps
cwde
or
call
shr
dec
xlat
mov
(bad)
lahf
mov
(bad)
test
or
or
dec
jp
mov
pop
sbb
xchg
lock
dec
hlt
or
pop
out
shl
mov
add
rcr
popa
sbb
leave
lds
fdiv
iret
int
inc
inc
inc
mov
mov
jbe
mov
jmp
push
stos
push
xchg
fwait
sub
jno
add
xchg
pop
cmps
jl
adc
call
mov
shl
les
ror
test
sub
jl
inc
mov
dec
and
lea
in
ins
daa
cld
in
push
ins
test
lods
aad
mov
xchg
test
sub
int3
arpl
(bad)
in
mov
and
call
retf
fmul
jp
mov
jne
mov
fs
scas
loop
xchg
iret
xchg
rcl
repnz
(bad)
sub
cmc
lods
mov
sbb
mov
cmps
loope
aam
ins
or
jecxz
or
xor
sub
inc
out
fninit
aam
ins
les
jle
lds
fidiv
mov
push
mov
(bad)
ins
mov
lods
ficomp
fist
out
add
test
pop
pop
(bad)
adc
sbb
repz
push
cs
je
cld
std
outs
jb
lahf
retf
jecxz
retf
jle
les
push
sub
dec
mov
repnz
es
ss
scas
loopne
iret
loope
sbb
mov
mov
push
sbb
data16
jno
add
dec
adc
ret
dec
pop
aas
mov
sub
shl
div
ss
adc
and
loope
mov
mov
retf
fisttp
inc
xchg
ret
xor
in
xlat
fiadd
sub
loope
(bad)
push
or
jmp
clc
cmp
repnz
adc
push
rol
mov
or
mul
push
fwait
mov
inc
adc
mov
hlt
sbb
cmps
test
mov
ror
daa
jne
cmp
jo
jnp
inc
repnz
mov
cdq
pop
idiv
movs
pop
adc
cmp
imul
ficom
adc
xor
adc
bnd
mov
cmp
push
(bad)
push
pop
cmps
retf
xor
ds
push
lods
add
sub
cmp
jl
sbb
std
or
push
xor
xor
scas
cld
dec
in
or
pusha
jb
jnp
adc
jo
jl
imul
movs
bound
call
inc
adc
inc
sbb
aam
and
mov
jp
cmp
ja
int
adc
jmp
and
add
fld
and
es
jb
outs
je
inc
icebp
push
cmp
mov
sub
lock
sahf
mov
sub
loopne
jg
movs
in
std
dec
sub
hlt
xchg
loope
or
add
inc
jo
jb
add
test
and
popf
aaa
cmp
cmp
fbld
dec
int
(bad)
and
sub
out
enter
jecxz
cmp
inc
scas
dec
loopne
and
retf
xchg
or
or
push
pushf
pop
inc
in
sbb
arpl
push
fsubr
xchg
mov
cs
call
pop
lea
add
lds
and
loop
aad
addr16
jecxz
ins
add
lods
mov
jmp
sahf
je
xchg
in
lahf
sar
mov
fwait
std
and
fbstp
jle
pop
dec
clc
nop
in
jecxz
cmp
es
test
push
sub
loopne
test
adc
punpckldq
fimul
sub
dec
aas
iret
and
sbb
ins
lds
fimul
sub
or
mov
mov
loopne
in
test
adc
or
inc
inc
dec
pusha
and
pop
inc
pop
icebp
lahf
pop
out
mov
cmp
outs
jg
mov
adc
cmp
imul
sub
add
loope
rcl
rcr
cdq
xchg
mov
icebp
popa
cmp
mov
and
sbb
cmps
xlat
pop
sub
push
(bad)
sbb
cmc
and
add
xchg
pop
(bad)
pop
push
addr16
add
(bad)
cmp
inc
lea
jmp
pop
or
test
dec
dec
xor
push
jae
(bad)
push
pop
ret
sbb
pop
or
cdq
pop
xor
xor
sti
(bad)
clc
mov
jl
retf
cmps
mov
cmp
mov
stos
setp
inc
aaa
in
sub
xor
xlat
aas
pushf
adc
int
pop
jbe
push
je
in
cwde
fld
inc
das
add
xor
pop
mov
clc
fwait
in
mov
mov
div
loope
xor
adc
dec
cmp
cdq
xchg
mov
fld
add
ins
dec
leave
lods
jnp
icebp
retf
jno
jle
rcr
sub
mov
dec
fisubr
sbb
or
mov
or
jg
in
jecxz
retf
push
(bad)
or
cmp
aad
xchg
aaa
jae
arpl
aas
mov
add
sbb
inc
mov
fcomp
push
and
pop
sti
xchg
and
leave
adc
rcr
cld
pop
xchg
out
or
pop
popf
push
iret
lds
adc
ret
jae
pop
jge
lds
mov
aam
or
jecxz
cmp
sub
lahf
fadd
ja
fs
adc
sub
not
mov
dec
jae
pop
repnz
inc
sub
into
xchg
mov
sbb
and
cdq
xchg
repnz
ins
cmp
pop
cmp
cmp
out
jns
rol
sbb
(bad)
adc
sub
push
cmp
inc
daa
iret
pushf
inc
or
adc
in
stos
stos
fcom
into
adc
jne
shl
pushf
push
lds
rol
test
cli
pop
dec
cld
aam
mov
sahf
mov
mov
cmp
retf
addr16
dec
arpl
mov
add
stos
mov
call
push
push
and
or
ror
push
push
out
leave
push
or
lahf
ds
cmc
popf
ja
ret
js
mov
mov
jecxz
cmp
sub
jnp
cmp
ins
or
mov
movs
test
sets
fs
ror
repz
mov
xchg
jno
add
fnstenv
xchg
movs
cli
int
mov
adc
mov
mov
jne
(bad)
or
and
fidivr
stc
jns
mov
pop
xchg
rcr
cs
jl
gs
lods
retf
les
inc
inc
pop
xchg
call
sbb
lods
in
adc
sub
nop
add
jp
and
push
cmps
pop
and
dec
cwde
loopne
inc
fwait
movs
cs
and
outs
outs
xlat
jno
mov
fistp
cmp
mov
mov
cli
inc
push
out
jae
and
aad
mov
iret
xor
pop
aaa
pop
add
popa
pop
xchg
add
mov
cmp
and
fwait
inc
cdq
push
lea
sbb
push
fldcw
clc
jmp
test
mov
adc
xchg
dec
sub
pop
push
push
cwde
push
leave
test
pusha
mov
xlat
dec
mov
jle
call
xchg
mov
(bad)
mov
xor
daa
stc
xchg
sbb
pop
and
jmp
outs
xchg
stos
or
sar
in
pop
mov
icebp
aas
in
push
inc
aam
mov
mov
enter
shl
sbb
xor
dec
lods
loop
scas
cld
inc
push
pop
sbb
mov
stc
stc
(bad)
int3
or
jae
cdq
fcmovb
and
mov
jg
mov
xchg
dec
add
or
js
add
stos
icebp
fiadd
mov
in
adc
mov
sub
pop
inc
xchg
fstp
or
mov
mov
push
push
retf
fwait
xor
and
int3
rol
clc
push
std
mov
or
(bad)
push
jp
adc
in
xor
xchg
test
in
mov
add
scas
aad
xor
xlat
cmps
test
and
dec
pop
mov
cld
rcl
leave
pop
adc
loop
shr
push
push
xchg
icebp
lock
mov
push
xchg
arpl
mov
sub
jbe
dec
movs
mov
xor
mov
jnp
daa
cmc
inc
cmps
call
fstp
or
cmc
mov
dec
push
lock
fistp
dec
xor
push
(bad)
mov
push
push
mov
add
mov
inc
mov
pop
pusha
or
inc
aad
add
fisub
mov
(bad)
fmul
mov
push
push
movs
iret
or
je
ds
ret
sub
jb
xor
scas
mov
call
pop
ins
push
add
cwde
xchg
and
fucomi
test
das
xchg
adc
add
push
pop
leave
lods
push
fst
sub
jge
or
lds
jge
es
out
xor
outs
sub
mov
aaa
pop
mov
adc
xor
inc
jne
adc
mov
or
ror
lds
or
gs
jbe
cmc
fxch
and
inc
adc
enter
pop
jb
mov
inc
(bad)
out
and
das
cmp
xchg
out
aas
les
shl
jle
cli
repnz
(bad)
adc
movs
cmps
xchg
out
sbb
xchg
and
aas
push
xlat
cld
and
cmp
rcr
push
test
stos
cmp
test
js
pusha
test
sbb
adc
adc
add
(bad)
div
ror
jo
addr16
mov
xchg
mov
push
jmp
and
shl
int3
dec
push
sbb
mov
dec
dec
adc
arpl
push
xchg
mov
ret
and
in
stos
sub
scas
cwde
loop
pop
pop
and
stos
daa
sbb
jmp
aad
push
push
cmps
cmps
jge
jo
cdq
xor
fbstp
ss
add
test
dec
cmp
xor
lods
loopne
lods
test
pop
xor
pop
jge
push
retf
(bad)
in
lods
jno
aas
mov
jae
clc
jle
hlt
push
test
sub
jmp
outs
sub
jae
(bad)
cmp
inc
iret
add
bound
call
outs
lahf
pop
adc
cmps
aas
mov
je
pop
test
cld
dec
lock
adc
add
in
das
hlt
daa
les
inc
inc
out
push
mov
cli
push
add
dec
repnz
bound
imul
pop
push
nop
(bad)
loope
hlt
cs
fdiv
add
sub
sub
aad
inc
add
sub
lods
out
sbb
add
in
out
je
test
dec
xor
je
inc
or
movs
lock
pop
and
jp
out
or
movs
fild
add
mov
cli
cdq
mov
mov
jmp
dec
jns
jle
out
fstp
scas
pop
jmp
xchg
mov
dec
in
sti
mov
cmp
mov
pop
xchg
and
xchg
add
sbb
movs
rcr
cwde
jns
sti
mov
movs
mov
adc
jns
push
sbb
add
sub
cdq
loopne
pop
sbb
out
lds
out
pop
icebp
les
jne
bound
outs
cmp
and
shr
push
out
cmps
push
test
(bad)
out
out
add
imul
call
push
xchg
mov
xor
jp
int3
pop
xor
push
sub
js
pop
loop
or
cwde
aaa
fadd
loop
loopne
inc
aam
add
retf
cmp
push
or
outs
mov
and
fistp
dec
mov
retf
out
popa
jb
push
pusha
call
and
ins
jmp
sbb
(bad)
int
pop
cdq
mov
cmp
xchg
in
jg
push
js
rcr
das
and
dec
iret
rcl
inc
cmp
pop
pop
dec
pop
sar
into
pop
xchg
or
dec
out
jne
ret
std
add
push
push
xchg
lods
arpl
loopne
cmp
ins
out
in
pop
and
fld
push
sar
or
or
push
inc
dec
scas
adc
ins
adc
dec
outs
cmps
mov
test
aas
mov
jmp
cmps
in
fwait
in
and
ja
shr
adc
ins
out
sbb
test
mov
mov
div
push
inc
mov
xchg
adc
inc
nop
out
add
mov
gs
add
push
xchg
mov
push
pushf
es
dec
call
add
ss
push
mov
lods
xor
push
cmc
clc
add
sbb
shl
mov
fidivr
repnz
sub
adc
jg
mov
je
mov
mov
pop
iret
ss
fcomp
(bad)
mov
loope
rcl
and
sti
xor
repnz
jle
mov
in
sbb
std
sub
xstore-rng
cmps
push
dec
loope
mov
jge
enter
pop
mov
out
retf
sar
sbb
lods
imul
sbb
pop
cli
call
mov
mov
mov
mov
inc
std
popf
pop
jnp
sahf
pop
mov
popf
push
aaa
sub
adc
mov
cmp
and
retf
dec
push
inc
clc
movs
test
and
daa
mov
jg
hlt
pusha
(bad)
(bad)
leave
mov
ret
add
test
clc
in
dec
stc
and
sbb
ins
outs
mov
mov
jne
cmp
(bad)
sub
adc
fwait
daa
pushf
pop
sub
bound
mov
aam
jo
aaa
inc
jnp
imul
xor
sti
add
test
mov
adc
popf
add
and
(bad)
call
cmp
dec
adc
fadd
mov
jo
dec
push
sbb
sbb
in
mov
mov
adc
imul
or
adc
lds
out
push
sbb
pop
adc
cmp
ins
out
arpl
push
add
inc
inc
dec
jbe
mov
xchg
fs
enter
mov
aaa
jp
loope
jns
inc
xor
push
stos
repnz
inc
stos
bound
mov
int
and
jnp
fadd
sub
push
fstp
push
pop
popf
push
ss
enter
rol
mov
dec
xor
mov
shl
push
adc
jle
push
fadd
cmp
xchg
movs
pop
pop
and
pop
jbe
bound
adc
dec
cmp
cmp
in
mov
retf
cmp
xchg
mov
loope
adc
aam
call
aas
sbb
adc
arpl
nop
scas
pusha
sbb
aaa
mov
ss
push
push
pushf
rcr
int
and
loop
xchg
(bad)
mov
mov
mov
adc
scas
jge
ret
fwait
cmps
ror
jmp
test
xchg
mov
ds
inc
addr16
inc
adc
shr
loope
or
push
shl
aad
mov
push
aam
loope
pop
sar
cmps
aaa
jmp
mov
dec
in
ins
lock
daa
or
xchg
arpl
mov
sub
daa
jp
and
cdq
sub
mov
std
int
in
mov
cmp
stos
xchg
cmp
shl
and
jno
add
inc
push
or
cmp
repz
fbld
mov
loopne
(bad)
test
dec
or
cld
inc
daa
das
scas
pop
(bad)
add
sub
hlt
inc
pop
psrld
mov
sahf
pop
mov
push
sub
dec
xchg
lahf
xor
or
cmp
sub
adc
sub
sbb
rcl
dec
mov
mov
stos
cmp
dec
cs
sahf
mov
inc
or
mov
sbb
dec
mov
xchg
inc
inc
xlat
repz
and
pop
aas
es
cmp
frstpm(287
sbb
(bad)
popa
ins
pop
xor
ss
fprem
xchg
cmp
fld
mov
jp
push
cmp
cmp
mov
pushf
retf
sub
lods
mov
mov
es
pop
or
test
shr
nop
xor
xchg
cmps
add
mov
or
pop
push
nop
pop
xchg
out
movs
sub
dec
xor
jmp
mov
div
int
jb
fnsave
pop
mov
(bad)
xchg
mov
mov
(bad)
repnz
lods
add
pop
movs
push
or
(bad)
(bad)
icebp
jbe
hlt
cmp
xor
inc
in
sbb
dec
mov
pusha
jmp
inc
pop
pop
add
sbb
jne
sbb
js
in
fwait
mov
repz
scas
lods
push
aaa
pushf
push
push
mov
xor
inc
pop
call
popa
addr16
scas
fild
cmp
jne
je
ins
sbb
jge
cmp
inc
movs
aam
les
ds
gs
mov
cs
or
adc
mov
neg
push
jne
cmps
fmul
sbb
mov
cmp
fdiv
add
jae
(bad)
sbb
mov
sbb
repz
retf
ret
je
and
js
in
jg
imul
xor
xor
call
dec
pop
ss
ja
call
mov
icebp
sub
sub
pop
stc
icebp
push
in
test
dec
xchg
mov
mov
jne
push
rol
sbb
clc
in
mov
nop
push
mov
jp
sbb
ret
inc
and
xchg
or
cmp
cmps
dec
push
jnp
(bad)
xor
ret
sub
ds
sahf
push
pop
addr16
aaa
push
bound
stos
mov
inc
shl
jns
jne
call
cmp
pop
mov
ds
sub
and
push
sahf
cmp
sbb
sub
out
jo
loope
mov
scas
pop
enter
fcmovne
mov
cmp
sub
loop
xchg
push
leave
pop
jb
mov
pop
sar
mov
ffree
xor
xchg
loop
sub
lds
add
loope
add
shl
ins
mov
inc
and
xchg
jmp
xchg
cmps
das
mov
leave
push
jnp
pop
je
jnp
std
dec
add
aas
movs
pushf
test
lea
sbb
jno
jl
retf
push
sbb
dec
xchg
shl
push
ss
inc
nop
and
pop
mov
sub
xchg
dec
or
mov
mov
sahf
fcomp
or
mov
pop
ja
cmp
add
imul
push
pop
rol
rcr
stc
sub
xchg
cmp
cli
mov
ins
das
cmc
jb
loop
pop
lock
das
sbb
mov
outs
outs
ins
xchg
popa
or
in
inc
jge
push
jno
mov
adc
sbb
iret
es
jg
jle
push
popa
mov
pop
sahf
mov
aam
xchg
jecxz
add
mov
das
push
les
sti
jmp
nop
loope
lock
dec
cmc
push
xchg
movs
push
jnp
dec
scas
imul
test
push
lods
pop
repz
(bad)
fmul
scas
xor
idiv
jp
adc
test
jns
imul
push
xchg
in
mov
mov
jecxz
ja
push
cs
or
sub
mov
nop
pop
fnstsw
lea
shl
popf
iret
pop
pop
jne
add
rcl
addr16
stc
mov
jge
jmp
push
sti
mov
pop
cwde
movs
xchg
add
xor
enter
cld
dec
push
or
lock
outs
pop
adc
out
das
(bad)
loop
sbb
out
(bad)
jo
pusha
cli
jne
retf
mov
stc
cmp
add
fcom
js
jle
stos
adc
clc
out
and
lock
push
lea
mov
add
pop
fsub
fild
aam
cmp
xor
enter
pop
sbb
sub
ins
leave
test
js
push
fstp
adc
inc
pusha
adc
popa
(bad)
shl
add
loope
pusha
mov
cld
mov
sbb
aam
out
jae
out
pop
mov
ins
mov
aam
inc
or
jp
repnz
bound
push
push
and
mov
fimul
test
ja
fcomp
jb
mov
push
push
cmp
xchg
fucompp
out
pop
sahf
dec
out
jp
popf
dec
mov
mov
mov
cwde
loop
(bad)
cmp
sub
outs
pop
add
inc
mov
pop
xchg
lods
hlt
mov
retf
sub
inc
ja
or
jnp
mul
pop
in
cmps
out
ins
push
dec
adc
sbb
sub
dec
dec
mov
sub
dec
repnz
mov
fisttp
pop
mov
push
jmp
in
lods
pusha
pushf
sbb
aaa
in
loopne
cmps
(bad)
xchg
test
fisttp
aas
cmovp
jg
jmp
jl
mov
mov
lds
pop
adc
adc
ins
out
mov
xor
pop
or
inc
sbb
lds
in
inc
dec
ss
xchg
shl
mov
test
stc
daa
scas
mov
pop
test
lods
repnz
jmp
pop
mov
jae
jg
cmp
sub
mov
popa
push
cs
inc
cs
sub
inc
pop
dec
out
jg
ins
mov
movs
inc
hlt
test
mov
sub
or
inc
cmp
mov
fadd
jno
and
mov
inc
jb
shl
sbb
movs
inc
cmp
retf
out
lock
mov
xchg
xor
mov
ja
in
popa
stos
retf
and
clc
mov
jns
xor
scas
js
clc
pop
iret
and
inc
lahf
mov
test
push
retf
mov
push
xchg
loope
xchg
or
out
xor
lock
adc
jl
lock
fcom
call
ss
mov
mov
dec
push
mov
fimul
(bad)
mov
xchg
cmp
jp
add
cmp
mov
jb
mov
inc
out
mov
test
jns
movs
outs
icebp
xlat
shl
ja
mov
jecxz
cmps
popf
fwait
repz
mov
inc
repnz
jb
sbb
(bad)
xchg
ss
fbstp
mov
jnp
xor
xchg
and
xor
fimul
push
dec
ficom
ja
push
pop
sahf
xor
mov
inc
push
mov
repz
push
jnp
adc
push
aad
retf
adc
ins
inc
ins
mov
or
jmp
jae
inc
pop
bound
dec
nop
cmp
(bad)
daa
cmp
sbb
jo
shl
int3
push
out
inc
out
sbb
aas
call
push
pop
adc
popa
ss
cmps
in
fstp
sbb
test
xor
dec
add
mov
pop
mov
repnz
inc
jmp
xchg
ss
lock
dec
repnz
cld
(bad)
cli
aas
fsubr
je
out
mov
jb
lds
and
loope
loop
sub
inc
inc
and
xlat
cmp
and
in
push
lds
ret
jnp
js
or
push
inc
fcmovb
enter
mov
pop
add
hlt
jecxz
rcr
out
or
dec
ret
pop
xchg
inc
cmp
clc
lahf
leave
gs
cwde
pop
jecxz
popa
sub
pushf
xor
ss
leave
mov
inc
sbb
or
pop
fsubr
popa
xchg
scas
xor
aam
pop
nop
outs
cmp
leave
fs
mov
xchg
mov
call
cmp
bswap
ja
push
jnp
ins
fchs
pusha
pop
push
lahf
shr
push
push
fwait
enter
mov
adc
rcr
div
inc
lahf
cmova
lahf
push
sar
adc
loope
scas
lahf
mov
iret
and
adc
push
mov
mov
out
sahf
sub
pop
jb
loope
or
inc
push
test
add
daa
mov
fimul
out
inc
cmc
xor
push
out
adc
jle
into
add
xchg
mov
neg
adc
xchg
mov
jno
cmp
sub
jns
shl
or
ror
test
test
mul
dec
es
ins
scas
inc
gs
in
inc
scas
ds
xchg
jae
pop
in
cmpps
jmp
xchg
pop
loope
stc
push
jne
rcl
dec
push
and
push
fdiv
movs
inc
xor
and
inc
cmp
fwait
cmps
push
imul
movs
push
xchg
sub
cmps
push
lea
repnz
ins
inc
adc
jmp
outs
(bad)
sbb
or
in
xchg
std
aaa
adc
xchg
out
mov
out
addr16
enter
mov
adc
call
push
pop
pop
popf
jl
xchg
adc
adc
jg
inc
addr16
sub
imul
push
add
jb
push
fiadd
lods
mov
xchg
sti
and
in
mov
(bad)
jl
cmps
aas
mov
mov
ret
scas
pop
(bad)
dec
shl
jmp
mov
xchg
enter
(bad)
and
sub
cmp
aam
jmp
cmp
jl
in
push
push
or
dec
(bad)
out
loop
int
cmp
addr16
or
outs
lahf
das
cmps
cmp
push
jp
int
imul
sbb
mov
shl
inc
push
ret
mov
pop
adc
and
mov
xchg
sahf
clc
(bad)
shr
cmp
aaa
push
xchg
push
xlat
adc
scas
cli
data16
push
cmp
sahf
sub
pop
xchg
pop
std
mov
cmp
jbe
cmp
jg
xor
xchg
add
push
(bad)
xor
(bad)
in
mov
pusha
xchg
inc
and
and
push
push
jg
cmp
sub
out
stos
xor
out
mov
outs
bound
adc
(bad)
mov
mov
and
out
fs
xor
(bad)
div
dec
out
jnp
lds
xlat
lock
or
loop
loop
je
jbe
shr
add
push
pop
mov
mov
mov
push
mov
sub
pushf
std
ss
sbb
cs
cmp
pop
or
cwde
in
mov
(bad)
pop
inc
push
xchg
dec
das
jno
push
jge
stos
add
jl
bound
inc
shl
xlat
test
adc
fsub
in
xor
int3
mov
ins
inc
mov
adc
hlt
fst
(bad)
mov
pop
mov
xor
jo
aam
ds
nop
jne
call
push
inc
dec
loopne
mov
xor
inc
dec
enter
add
pushf
enter
inc
lods
out
dec
sub
xchg
inc
clc
mov
add
push
mov
adc
call
in
clc
adc
not
inc
pop
jbe
lods
mov
in
retf
ss
cld
js
rcl
pusha
or
daa
add
mov
mov
xor
and
lock
ja
and
test
fwait
(bad)
jb
pop
jmp
shl
push
hlt
push
mov
xchg
mov
jle
pop
popa
retf
jns
jmp
and
xchg
cmp
inc
cmp
cld
ret
cs
cs
jecxz
xor
jo
clc
jl
sub
shl
dec
mov
ror
aas
out
adc
jo
and
push
not
pop
shl
and
retf
pop
pop
sti
push
adc
sub
mov
enter
mov
(bad)
mov
pop
mov
pop
sbb
aam
iret
dec
pop
es
inc
cs
popf
cs
mov
int3
sub
pop
data16
sbb
sbb
push
cli
ja
retf
push
data16
add
pop
shr
mov
aad
(bad)
add
(bad)
dec
imul
and
lods
movs
jnp
scas
lods
jle
mov
sbb
push
lahf
jg
mov
push
leave
fnop
mov
push
fdivr
jl
xor
push
js
push
jge
fld
bound
dec
jp
(bad)
sbb
dec
imul
arpl
ror
jae
dec
mov
iret
jp
push
loope
mov
(bad)
in
(bad)
xchg
mov
dec
mov
sar
test
push
int
cmp
xor
push
pop
pop
sub
test
mov
push
or
xor
es
xor
rcr
ror
cmp
ins
ffreep
or
add
sub
sub
sub
or
bound
lea
cmp
pop
pop
xor
or
sbb
ins
cli
jl
inc
xchg
mov
dec
mov
aad
int
retf
or
xor
pop
loop
sti
outs
adc
xor
(bad)
iret
cs
mov
ret
repz
sbb
push
ja
cmp
sub
jp
push
repz
ficom
jg
pop
aas
cmp
lods
cmp
mul
push
out
add
ss
lods
aad
mov
push
mov
test
repz
(bad)
mov
pop
lds
lea
xor
and
mov
fisubr
popa
add
jae
stos
jmp
ds
xor
sbb
cli
sbb
mov
push
retf
jmp
sub
sbb
out
push
(bad)
je
jge
pop
mov
push
lods
push
cli
and
enter
or
dec
xor
pop
dec
popa
out
add
jmp
jmp
dec
in
into
idiv
test
fdivr
sbb
push
push
mov
mov
xchg
movs
cmc
push
lods
aad
push
dec
and
call
push
xchg
ins
adc
jns
sbb
sahf
int
test
outs
call
lea
fs
sbb
cmp
inc
dec
test
in
js
pop
mov
push
pop
dec
sub
xor
push
jmp
inc
push
fstp
sub
in
pop
in
add
inc
push
pop
jns
xchg
cmp
cdq
push
cmovge
mov
jmp
inc
and
sbb
push
sbb
xor
mov
sub
push
mov
add
rol
arpl
dec
and
sar
imul
les
hlt
cld
cmp
and
mul
daa
fwait
dec
(bad)
retf
retf
fwait
cmp
movs
and
xchg
fs
dec
sbb
xchg
imul
cwde
repnz
jno
shl
pusha
dec
jbe
jmp
cdq
mov
data16
retf
scas
jmp
test
std
into
pop
sub
dec
or
retf
inc
or
cmp
jnp
loope
mov
mov
call
cmc
adc
imul
sub
sub
xchg
out
dec
dec
dec
add
in
and
dec
sub
ss
jnp
scas
outs
mov
jns
xlat
loopne
(bad)
iret
xchg
add
jo
sbb
fisubr
pop
retf
jg
rol
stos
add
mov
arpl
cmp
cmp
fistp
call
xchg
xor
js
pop
outs
add
and
sub
fcom
mov
loopne
sbb
leave
in
retf
cmp
cs
push
lea
add
hlt
mov
sbb
push
jmp
mov
leave
sbb
xor
jg
idiv
pop
fwait
mov
adc
mov
or
sbb
push
jmp
push
push
pop
add
dec
or
xor
or
pop
lds
or
sbb
fcmovb
cmp
mov
popa
loop
sub
loop
sar
fmul
rcl
push
(bad)
popf
xor
or
int3
sbb
adc
dec
shl
rcl
sbb
jo
test
aaa
xchg
xchg
in
inc
(bad)
daa
scas
push
jp
fcom
lods
test
movups
fldenv
in
pusha
push
sbb
adc
mov
pop
shl
mov
sub
sbb
pop
shl
mov
push
xchg
xchg
sahf
jb
cmp
iret
mov
cmc
cmp
xor
add
(bad)
frstor
push
inc
(bad)
dec
add
push
mov
push
xchg
rol
movs
add
push
add
es
jp
cmp
mov
(bad)
push
adc
aaa
mov
test
mov
inc
test
mov
(bad)
push
cmp
jl
dec
stos
test
int
inc
sbb
xor
mov
mov
sub
and
pop
lahf
or
inc
xor
(bad)
or
retf
hlt
push
xor
pop
mov
in
push
xor
mov
mov
mov
out
mov
shl
jo
dec
outs
or
adc
mov
ret
lock
and
into
or
cmp
jecxz
cmp
and
aad
xchg
dec
pop
pop
pop
mov
je
pop
int
lods
repz
out
cli
aas
cdq
cmps
outs
mov
adc
rcl
pop
jp
sar
ja
xlat
lods
shl
fidivr
dec
and
es
loope
lea
or
jb
or
sbb
and
pop
int3
jmp
shl
fcom
dec
push
mov
lea
cmp
or
mov
jno
or
sbb
jne
(bad)
aad
dec
inc
sbb
xchg
movs
mov
es
rcr
aam
jmp
or
shl
and
fcom
mov
test
imul
push
(bad)
loopne
aam
inc
add
je
int3
add
adc
jns
es
mov
fld
mov
call
(bad)
mov
(bad)
cmp
cld
adc
pop
adc
cli
add
push
int3
jmp
or
ret
lahf
xchg
push
jp
push
push
aam
xchg
mov
pop
popf
cmp
pushf
ss
mov
dec
fwait
in
or
pushf
pop
jmp
mov
lods
cld
add
push
(bad)
test
xchg
cmp
call
retf
movs
add
jge
or
jno
jne
in
sahf
add
adc
push
and
push
dec
jno
retf
push
or
push
(bad)
or
ja
dec
leave
jg
sar
cmp
push
pop
and
xchg
es
and
dec
leave
dec
push
fs
cmp
cmps
frstor
and
pop
inc
jl
jae
mov
popa
cmp
cwde
sub
shr
(bad)
jp
sbb
pop
push
imul
outs
dec
push
ret
cmps
test
fidiv
cmc
mov
fidivr
lods
imul
and
fcomp
pop
cmp
cmp
lock
bound
or
aas
daa
push
neg
push
or
fstp
sbb
add
and
xor
mov
xor
(bad)
xor
mov
iret
sbb
pusha
jnp
sub
inc
shr
and
xor
sub
sbb
sbb
or
cmp
ret
shl
mov
add
sbb
or
sub
mov
jmp
call
int3
cmc
inc
add
(bad)
xchg
mov
adc
pop
jp
retf
stos
fadd
cmps
loop
clc
leave
icebp
lock
sub
sub
lods
xor
pop
jnp
fwait
sbb
add
pop
or
sbb
cmpxchg
idiv
mov
xchg
xchg
jo
xor
sbb
imul
inc
push
cmp
mov
mov
adc
mov
clc
cmp
dec
xchg
stos
iret
retf
adc
pop
call
and
add
xor
and
mov
pop
leave
inc
imul
sbb
mov
jge
mov
iret
call
xchg
add
movs
inc
jo
mov
(bad)
mov
jmp
iret
push
mul
into
mov
ss
and
mov
jne
data16
not
out
lods
mov
cli
loope
jle
or
out
cmp
lods
cmp
jecxz
sub
and
test
xor
shl
bnd
sub
jecxz
sar
cmp
repnz
fstp
push
mov
pop
das
sub
enter
loopne
inc
mov
xchg
mov
pop
xchg
mov
or
shl
adc
out
icebp
out
adc
cmps
fs
adc
imul
adc
push
push
or
int
pop
(bad)
add
movs
push
jbe
das
xor
popa
xor
or
jecxz
cld
aam
ins
ret
push
data16
popf
cmp
xor
sub
sbb
jmp
or
ds
pop
out
out
sahf
push
sub
popf
popf
popa
mov
leave
repnz
and
das
aad
rcr
add
cmp
jmp
test
inc
jnp
cli
cmp
mov
fnsetpm(287
push
lahf
push
mov
jle
mov
call
jne
push
test
ret
les
xchg
out
push
das
sbb
add
add
pop
cmps
push
pop
icebp
or
mov
sbb
js
sbb
cmp
add
(bad)
jno
int3
push
or
scas
jle
xor
aam
iret
aaa
mov
dec
dec
leave
mov
shl
(bad)
bound
pop
sahf
cmp
mov
xor
gs
jnp
lds
retf
sbb
pushf
mov
or
imul
mov
adc
sti
(bad)
(bad)
jmp
test
repz
scas
dec
stc
jns
lock
mov
mov
aam
dec
sub
inc
lock
clc
mov
mov
test
aam
mov
xor
xchg
xor
xchg
sahf
sti
je
push
push
aad
(bad)
leave
enter
cmp
xchg
mov
jl
and
xor
mov
push
dec
jl
xlat
imul
sbb
adc
dec
and
ret
mov
sub
test
fwait
aaa
jae
lea
cld
pop
pop
sbb
stos
jnp
arpl
loope
inc
data16
test
je
mov
daa
int3
xor
aam
ds
jecxz
or
sbb
daa
div
(bad)
in
movs
outs
xor
lods
je
fcomp
xchg
push
sbb
cmp
test
lock
loop
mov
push
adc
jae
loope
dec
push
and
inc
retf
push
(bad)
ficom
jae
jnp
int
pop
and
lahf
(bad)
fcomp
pop
jge
cdq
into
inc
jno
sti
ret
fcom
pop
sub
cli
js
loopne
aam
in
pop
ins
fwait
add
das
cwde
lods
scas
pop
repnz
mov
imul
jb
test
in
jmp
std
mov
jle
mov
bound
ss
hlt
mov
inc
loop
hlt
mov
ret
imul
div
mov
inc
push
mov
std
or
sub
or
mov
pop
fimul
fidiv
jnp
call
shl
movs
xchg
inc
aas
iret
mov
retf
xchg
inc
fimul
add
mov
sbb
pop
mov
xchg
push
mov
aas
out
sub
dec
dec
lahf
leave
loop
mov
dec
mov
dec
and
popf
mov
adc
sub
fadd
ret
mov
inc
inc
ret
dec
mov
mov
rcr
leave
xor
out
pushf
call
and
add
mov
iret
sub
cld
pop
sbb
pop
aas
ret
scas
scas
dec
add
cmp
xchg
mov
pop
imul
inc
push
adc
dec
ins
call
xor
xor
jp
mov
push
fdiv
xor
aad
adc
fisubr
lea
sub
xchg
dec
loope
mov
je
std
aas
loope
cmp
mov
mov
gs
add
dec
test
(bad)
cmp
(bad)
mov
jnp
push
cmps
sbb
pusha
xor
or
mov
jnp
imul
push
xchg
loopne
mov
inc
push
stos
(bad)
sbb
adc
es
mov
sar
loop
mov
(bad)
adc
inc
rol
ins
mov
frndint
daa
and
xchg
pop
std
push
mov
sub
inc
and
jmp
xchg
repz
mov
xor
das
fisub
adc
add
in
push
jns
pop
js
add
jge
pop
in
sub
loope
dec
add
rcr
in
or
mov
pop
mov
mov
(bad)
jg
test
mov
idiv
pop
in
ficomp
sub
mov
xchg
dec
inc
jb
test
xchg
sbb
add
clc
xchg
and
fwait
add
pop
xchg
lods
mov
jb
imul
repnz
mov
daa
sti
pop
xor
aad
and
pop
and
push
push
pop
pinsrw
and
call
jbe
adc
pop
pop
dec
loopne
out
pop
call
je
dec
xchg
ficom
cmps
and
scas
pop
dec
pop
sar
mov
jb
(bad)
sbb
test
scas
mov
sahf
lds
inc
mov
test
push
icebp
add
inc
jp
inc
jle
clc
mov
xchg
dec
ins
sub
popa
leavew
test
shl
mov
in
mov
fst
adc
test
retf
or
inc
xchg
jecxz
jge
adc
std
jmp
std
ins
inc
(bad)
or
cdq
mov
jo
push
cdq
pop
sar
daa
lods
and
mov
push
ret
aad
push
in
and
cmp
pop
mov
xchg
movs
cwde
mov
call
and
jecxz
es
mov
dec
xchg
ds
fldenv
aas
sar
mov
cmc
xchg
xor
pop
push
mov
movs
add
mov
pop
pop
inc
int
cli
add
sahf
out
and
or
inc
sti
in
pushf
mov
cmp
enter
ds
in
push
add
and
push
adc
ins
and
nop
test
mov
nop
dec
sub
je
sahf
fdivr
into
fdiv
jle
sbb
jg
in
lock
pop
jnp
sub
ins
and
pop
sbb
xor
das
jo
inc
call
sub
shl
mov
jns
bound
jp
xchg
out
aad
jmp
xor
lods
gs
xchg
std
test
fisubr
rcl
dec
movs
jle
loop
loop
or
fisttp
int
inc
fstp
js
popa
inc
cmp
add
add
sub
sub
rol
jmp
cmp
pop
fild
fidivr
pop
push
(bad)
std
push
scas
div
fisub
popa
sub
or
cmp
jmp
push
dec
retf
mul
inc
xchg
lods
or
je
mov
ret
scas
rcl
imul
div
in
aam
push
aas
adc
mov
in
lock
and
(bad)
sahf
pop
dec
int
cmp
push
ss
xchg
push
or
in
xchg
xlat
jle
mov
jle
mov
cmp
jne
movs
push
add
mov
in
xchg
cmp
or
sar
mov
mov
(bad)
mov
inc
sub
sub
(bad)
cli
push
lods
cwde
enter
cmps
push
dec
inc
push
cmp
dec
sub
ret
sbb
je
shrd
add
jne
cmp
mov
test
cdq
mov
xor
out
mov
fisubr
pop
loop
les
adc
into
fstp
inc
jbe
je
test
js
cmp
js
sub
pop
adc
sbb
pop
inc
xchg
shr
nop
sbb
mov
xor
movs
movs
inc
xor
jp
out
jno
mov
mov
lods
push
dec
pop
jmp
cmp
pop
dec
adc
jmp
out
pusha
outs
xchg
out
adc
xlat
inc
pop
loope
inc
sbb
pop
mov
mov
inc
lock
sbb
sbb
xlat
fsincos
cmp
fisub
(bad)
adc
not
stc
xor
cld
xor
fcomp
clc
adc
leave
mov
stos
enter
jge
loopne
or
cdq
scas
call
push
leave
fisubr
sbb
dec
cmp
pushf
rcl
cmp
das
mov
xor
pusha
jmp
scas
pop
xlat
rol
adc
pop
jmp
mov
shl
inc
shl
cmps
push
mov
rol
xchg
popa
(bad)
cmp
mov
xchg
xchg
outs
aad
jmp
in
addr16
out
pusha
xor
mov
fsubr
jmp
adc
xor
cmp
call
or
xor
dec
dec
and
pop
gs
mov
loopne
push
jmp
xchg
push
mov
push
leave
mov
fcomp
jb
nop
pushf
test
adc
inc
pop
int
cs
cmp
xchg
rcr
gs
jne
cld
mov
sbb
test
mov
mov
cmps
mov
xlat
aam
pop
cld
arpl
lahf
jle
and
cmp
mov
jmp
les
ret
cmc
std
ret
(bad)
idiv
mov
push
mov
mov
xchg
(bad)
mov
mov
call
xchg
pop
mov
mov
cmp
add
push
xchg
(bad)
stc
pop
ss
dec
pop
cmp
popf
shl
cmp
sbb
jne
sub
iret
test
jmp
adc
cmp
jmp
cmp
push
es
jecxz
xchg
or
sti
ror
sbb
jae
pusha
imul
mov
gs
sbb
out
mov
dec
movs
lods
popa
inc
push
push
mov
cdq
cmp
dec
repnz
inc
mov
adc
add
dec
out
imul
leave
fisubr
data16
or
arpl
mov
push
xor
mov
imul
add
add
fsub
jmp
repz
xor
and
(bad)
inc
jmp
cmps
pushf
cmps
jl
jmp
push
or
mov
cld
xchg
scas
mov
xlat
(bad)
popa
outs
xor
pop
inc
test
dec
mov
inc
cmps
leave
dec
pop
jnp
jl
pusha
push
add
mov
outs
jecxz
push
outs
mov
jle
cmp
sub
mov
dec
mov
xor
rdpmc
bound
(bad)
retf
call
jo
jle
popf
imul
push
dec
pop
rcl
mov
sbb
shl
sub
adc
ret
data16
popa
ins
cwde
or
xchg
sub
sbb
sbb
fs
jae
jmp
aas
jbe
mov
lods
fadd
or
adc
out
(bad)
mov
cdq
cmps
cmp
fwait
stos
push
(bad)
(bad)
retf
stos
jae
or
out
pop
jnp
inc
and
or
lock
mov
loopne
mov
retf
xor
js
pop
cmp
and
ins
and
or
xchg
push
inc
mov
loopne
and
xor
pop
rcl
(bad)
mov
push
jmp
in
mov
mov
push
mov
mov
xor
sti
nop
inc
mov
push
mov
test
adc
imul
inc
jb
sbb
retf
xor
or
mov
inc
scas
pop
mov
push
stos
mov
jp
fadd
ret
int
daa
adc
rcr
into
rcl
jle
aam
mov
mov
mov
lods
xor
pop
jnp
sbb
push
mov
scas
cli
jge
fsubr
and
js
dec
fisub
xor
fnstcw
je
cmp
movs
fisttp
pusha
(bad)
data16
xor
mov
shl
bound
sub
dec
rcl
push
mov
cli
xchg
in
clc
pop
lea
add
mov
jne
fwait
and
dec
mov
test
es
jns
or
jecxz
jmp
mov
pop
dec
sub
(bad)
mov
retf
mov
sti
cmp
shl
adc
mov
mov
mov
xchg
jns
jbe
add
lds
call
call
int3
psrld
jae
xchg
mov
xchg
pop
sub
(bad)
lock
ret
std
ds
dec
xchg
xor
inc
push
inc
rol
sbb
test
xchg
scas
inc
cli
mov
xor
divps
fisttp
inc
pop
xor
jmp
(bad)
mov
cmps
(bad)
hlt
or
push
sbb
jg
pop
test
pop
fs
imul
cmp
not
pop
imul
int3
cmp
inc
das
call
leave
pusha
dec
stc
call
or
into
push
fimul
sahf
mov
cs
mov
hlt
loope
push
add
popa
(bad)
pop
push
mov
loope
inc
dec
inc
nop
aas
loopne
push
push
mov
xchg
jmp
fidiv
outs
mov
dec
inc
(bad)
fdiv
dec
mov
movs
stos
leave
sbb
loope
rol
scas
stos
pop
cld
fs
nop
(bad)
(bad)
test
add
xchg
adc
and
lods
ret
fcmovbe
dec
mov
push
sbb
ja
and
or
dec
scas
mov
loop
add
gs
inc
out
pop
loope
cmps
mov
cmps
push
int
daa
cmps
adc
fadd
or
pop
in
push
retf
pop
hlt
pop
int
sbb
popa
pushf
lea
das
test
sbb
nop
cwde
dec
inc
movs
sbb
lock
dec
test
xchg
aam
bound
loop
pop
div
inc
push
inc
test
pop
mov
(bad)
jo
inc
mov
test
movs
xor
inc
into
cwde
clc
xlat
jne
push
mov
in
mov
adc
jno
xor
sub
lock
jbe
sbb
aad
push
sub
idiv
cmp
sbb
outs
cmp
inc
sub
ucomiss
and
add
test
or
sbb
dec
dec
xchg
mov
or
cmps
hlt
jae
outs
jle
in
mov
sbb
int
scas
cmps
add
dec
mov
into
xlat
push
and
div
xchg
int3
sub
mov
xchg
or
or
aad
mov
adc
and
test
out
daa
push
lods
mov
scas
stos
ja
and
add
sub
mov
push
test
inc
repnz
push
dec
dec
and
repnz
adc
push
dec
test
ins
sbb
stos
cmp
mov
mov
div
je
sbb
test
or
loope
cmp
pop
ds
adc
loopne
mov
or
jmp
or
cdq
or
outs
cs
cwde
push
sub
jnp
mov
stos
mov
xor
aam
mov
and
adc
pop
clc
push
jge
or
inc
push
mov
xchg
js
add
adc
jns
adc
sub
mov
outs
sahf
nop
ret
repnz
push
or
and
jo
jmp
(bad)
cmp
and
xor
mov
or
xchg
int
xchg
shl
cld
(bad)
jge
xchg
add
xchg
mov
inc
or
fstp
out
adc
psubusw
dec
jne
(bad)
fsub
out
nop
loope
mov
sbb
push
out
jno
cmc
jmp
fdivr
adc
push
movs
dec
popf
lahf
sbb
arpl
sub
lods
inc
pop
sbb
loopne
loopne
ret
sbb
xchg
add
das
xor
hlt
sub
xchg
loopne
call
sbb
push
mov
and
mov
outs
cld
cmp
jecxz
fidiv
sbb
loope
or
xor
xor
(bad)
jecxz
lods
dec
stos
cmp
outs
xor
jns
sbb
pop
cld
dec
mov
ss
cdq
out
inc
js
mov
mov
mov
jle
or
push
fisub
mov
mov
movs
cwde
frstor
out
ins
mov
jecxz
dec
push
scas
jecxz
inc
mov
xchg
jbe
push
or
push
add
call
and
push
div
jb
inc
jnp
aam
adc
stos
inc
out
sub
jns
repnz
add
ds
ins
add
mov
jne
pop
mov
retf
fld
adc
mov
cmps
mov
jp
ds
mov
dec
cs
nop
mov
lods
dec
xrelease
and
das
and
jne
xlat
mov
xor
push
(bad)
hlt
pop
dec
enter
jmp
into
push
sub
dec
les
ja
ror
jl
(bad)
cld
mul
pop
icebp
adc
addr16
cld
inc
jecxz
clc
rcr
lods
in
or
fcmovne
jns
push
arpl
cmc
bound
xchg
rcl
push
test
xchg
dec
mov
scas
popa
jmp
and
cmp
push
mov
xlat
sub
mov
stos
shr
loope
(bad)
mov
loop
shl
inc
pop
and
xor
loope
data16
push
sbb
sub
aas
cmp
aas
es
mov
mov
inc
xor
in
mov
push
les
sbb
(bad)
(bad)
fwait
inc
aas
lock
sub
mov
mov
sbb
pop
mov
(bad)
jp
dec
jmp
(bad)
cmp
imul
xchg
clc
retf
dec
xor
jo
push
retf
adc
outs
add
sub
dec
aad
mov
xchg
mov
inc
(bad)
mov
jmp
sbb
dec
(bad)
loop
neg
cmps
(bad)
jae
cmp
or
xor
outs
mov
sub
(bad)
(bad)
mov
int
adc
or
movs
inc
dec
stc
xor
push
add
mov
xchg
loopne
xor
out
or
pop
jb
scas
call
adc
mov
lods
sbb
adc
or
ins
fs
das
or
push
lahf
mov
cli
push
in
or
mov
pop
jb
push
xchg
mov
jp
dec
adc
mov
cmp
aam
adc
pop
jae
aam
in
repnz
add
das
jb
and
mov
mov
push
sahf
call
outs
or
in
cs
mov
je
test
movs
cli
popf
mov
or
xor
or
es
fcmovnb
ficomp
loope
pop
add
dec
push
ret
xchg
jo
ret
push
(bad)
mov
push
cld
ja
addr16
cli
(bad)
out
add
or
mov
push
fcom
dec
jge
pop
addps
xor
inc
popa
aaa
in
jmp
jo
mov
rcl
and
inc
cdq
xchg
mov
mov
fst
and
movq
retf
dec
sbb
iret
xchg
dec
test
cmp
mov
xchg
xchg
mov
lahf
std
lds
idiv
lar
sub
cmp
test
and
xchg
add
lds
push
jns
push
nop
mov
loop
xchg
ret
mov
adc
dec
sbb
mov
mov
sbb
jo
aaa
int3
(bad)
push
xor
sbb
mov
test
pop
add
scas
iret
lahf
fbstp
out
pop
inc
adc
ds
inc
dec
mov
mov
inc
addr16
push
mov
test
adc
div
jb
pusha
popa
push
test
add
gs
sub
dec
push
sahf
out
dec
aam
popa
test
add
pop
mov
(bad)
dec
pop
mov
clc
nop
loop
push
push
and
and
xchg
aam
xlat
addr16
stc
pop
mov
retf
dec
add
adc
mov
push
loope
sub
xor
call
push
jns
inc
push
lods
sar
loope
pop
push
sahf
mov
xor
std
call
(bad)
lock
test
push
nop
dec
add
add
in
jmp
ret
or
ss
jne
pushf
mov
fmul
sub
stos
aas
mov
mov
retf
and
push
aas
leave
nop
jmp
cwde
(bad)
int
dec
cmp
mov
or
aas
dec
clc
icebp
fwait
sti
stos
ret
push
movs
bound
jl
mov
pop
cmps
jge
pop
mov
or
push
or
rol
in
mov
fnstsw
call
les
xor
dec
sbb
and
fisttp
cmp
xchg
int3
pop
pop
adc
(bad)
iret
daa
cld
jbe
fwait
dec
jmp
pop
xchg
pop
jne
cmp
inc
push
stos
jmp
adc
pop
mov
cli
xor
mov
mov
sub
je
jp
dec
push
movs
pop
mov
(bad)
(bad)
jmp
stc
jno
fcomp
and
retf
gs
cwde
(bad)
jmp
add
out
ror
dec
add
xlat
push
mov
add
lds
pushf
scas
popf
mov
jno
mov
mov
daa
test
outs
ins
dec
inc
ins
rol
repz
adc
in
pop
cld
clc
mov
add
push
retf
repz
(bad)
cmp
xchg
fist
mov
and
and
pop
or
mov
and
bswap
cmp
fwait
cmc
daa
fs
lahf
xchg
pop
frstor
mov
pushf
mov
or
jb
das
popf
cmps
dec
jmp
test
lds
adc
in
mov
mov
or
fidiv
and
xor
inc
jbe
movs
test
int
(bad)
push
mov
xor
test
not
pop
cmp
push
cmps
sbb
test
push
jne
xchg
cmp
mov
jb
call
popa
mov
int
pop
xchg
das
nop
jmp
cld
loop
mov
pop
sbb
std
out
pusha
inc
mov
int3
sar
lods
mov
lods
sbb
fisub
xchg
cmp
inc
inc
xchg
jns
in
icebp
add
mov
push
cmps
loop
and
inc
xchg
add
add
add
lds
sbb
sti
test
or
fwait
mov
js
mov
sbb
loop
jg
dec
cmp
pushf
cld
fcom
pusha
mov
movs
jae
mov
int
test
sub
mov
cmp
in
pushf
mov
in
dec
sbb
das
imul
jnp
dec
inc
xchg
scas
stc
jg
and
adc
stos
sub
stos
push
sbb
mov
pop
dec
push
(bad)
fwait
xor
xor
cmps
inc
nop
inc
pop
dec
cs
inc
mov
int
les
loope
xor
loop
jp
add
mov
scas
sbb
int3
inc
pop
xchg
and
pop
fwait
std
push
outs
mov
imul
mov
or
xor
sub
ja
cmp
iret
(bad)
lahf
nop
cmp
sub
adc
ja
inc
aad
cs
sbb
cwde
mov
jecxz
jg
sbb
push
adc
inc
xchg
inc
push
adc
test
call
or
xlat
hlt
(bad)
in
jp
xchg
dec
fild
xchg
jno
lock
mov
aaa
mov
sub
mov
xchg
mov
sbb
push
out
cdq
idiv
outs
ins
push
jae
push
fcom
dec
cmp
xchg
test
call
adc
lahf
lahf
inc
jmp
(bad)
hlt
mov
pop
dec
call
sub
pop
inc
addr16
xchg
in
cld
pop
adc
fmul
cmps
inc
bnd
(bad)
push
(bad)
jmp
mov
dec
push
cmp
mov
add
xor
test
adc
xchg
sub
push
mov
mov
call
mov
dec
dec
mov
stos
cmps
pusha
popa
and
cmp
push
jo
jge
add
call
or
mov
rol
sub
mov
sahf
int3
enter
bound
sub
mov
push
std
iret
push
js
add
add
or
je
mov
mov
cld
loop
pushf
out
shr
fprem1
(bad)
hlt
and
mov
dec
inc
mov
xchg
ror
mov
inc
and
icebp
jne
xor
test
std
jae
inc
cmp
fdiv
inc
mov
in
xchg
std
mov
xchg
aam
xchg
jge
pop
(bad)
fld
mov
test
xchg
mov
cs
mov
and
imul
in
jmp
push
(bad)
pushf
and
adc
sub
imul
fstp
in
pusha
xor
add
push
cmps
sub
out
cmp
adc
and
jecxz
push
aad
jle
scas
xchg
or
aam
test
mov
cmp
jp
and
aaa
mov
push
mov
lds
aam
mov
dec
fbstp
push
jbe
inc
bound
cdq
ret
(bad)
push
stos
pop
cmp
rol
dec
ror
inc
inc
xchg
pop
xlat
and
lods
dec
pushf
fdivr
inc
inc
sub
fs
jecxz
ficom
call
add
scas
push
das
(bad)
clc
rol
mov
lds
add
mov
(bad)
dec
push
in
ret
call
fsub
xchg
pop
pop
loop
mov
add
and
push
sbb
pop
dec
fisub
dec
or
mov
stos
into
inc
xor
pop
jo
aaa
(bad)
leave
sub
scas
cmp
rcr
repnz
add
retf
lahf
mov
jae
pop
ja
mov
hlt
lods
inc
in
fimul
pop
xlat
sub
(bad)
xor
inc
mov
ror
int3
dec
push
mov
sti
in
fmul
mov
call
je
inc
pop
sbb
sub
push
jle
jb
rol
inc
cmps
xchg
sub
call
daa
out
jp
or
add
into
imul
sub
mov
cs
or
loop
into
loope
push
mov
das
gs
add
data16
iret
shl
mov
push
cmps
adc
imul
sti
cmp
mov
push
or
sub
pop
call
cmp
mov
jae
mov
jae
jne
and
sub
ins
aas
inc
sbb
outs
mov
or
dec
adc
popf
jae
push
scas
rcr
jmp
mov
sar
dec
mov
imul
add
das
xor
ja
mov
dec
mov
push
dec
stos
mov
add
push
add
jbe
mov
jge
rcr
xor
pop
jmp
dec
mov
lea
xor
add
jl
lahf
repz
in
not
xor
jne
mov
into
jnp
js
imul
fadd
ins
jbe
packssdw
test
pop
shr
arpl
push
in
push
sbb
xor
inc
jmp
enter
or
cmp
xor
mov
push
add
dec
jle
adc
fadd
dec
retf
loope
out
or
jnp
call
jno
push
add
movs
shl
xchg
jmp
jae
adc
and
cmp
mov
adc
dec
scas
jle
fisub
xor
jne
hlt
push
retf
mov
mov
cmp
gs
gs
cmc
and
repnz
fisubr
ja
pop
movs
jge
xchg
jle
lods
xchg
xchg
test
stos
stos
mov
xchg
lds
push
mov
loop
(bad)
mov
pop
mov
scas
cld
cmp
fisttp
xchg
aad
mov
pop
pop
add
js
into
lds
sub
add
fldcw
push
adc
mov
mov
out
cmp
gs
mov
outs
ins
cdq
mov
cwde
push
inc
sti
mov
push
mov
movs
jg
scas
ins
ins
sub
out
push
sbb
std
inc
iret
lock
cmc
inc
sub
test
out
sub
in
sbb
and
jmp
cmp
dec
mov
pop
addr16
les
in
out
pop
je
push
ror
out
jo
fldcw
push
xchg
popf
mov
cli
icebp
mov
mov
iret
enter
sbb
mov
and
jno
les
mov
adc
jae
loopne
sahf
into
pop
in
sub
out
sub
shr
sub
ins
adc
push
pop
cdq
inc
adc
stos
pop
dec
xor
push
mov
push
stc
xchg
shl
or
mov
repz
leave
out
leave
cmp
or
call
jle
movs
or
push
adc
add
inc
jge
test
in
test
jmp
dec
sbb
xchg
in
ret
sub
cmc
repz
pushf
imul
call
ss
push
jmp
cmp
xchg
sub
push
ja
cli
addr16
adc
hlt
stos
fcmovb
fwait
in
mov
cdq
fsubr
xchg
retf
jmp
jbe
daa
adc
(bad)
jmp
daa
imul
xchg
(bad)
aas
xlat
iret
mov
sub
adc
inc
das
dec
repnz
aad
lods
dec
rcl
aas
adc
popa
inc
xor
cli
aam
jecxz
xchg
or
and
inc
data16
push
ret
int3
jl
add
adc
add
jge
mov
(bad)
outs
div
fsubr
adc
fcomi
or
repnz
jmp
add
mov
adc
sti
jp
leave
sub
jbe
fldenv
les
mov
push
sub
mov
enter
xchg
sub
push
popf
ret
mov
sbb
into
js
mov
dec
dec
test
popf
xor
xchg
mov
inc
add
mov
iret
cli
das
sar
cdq
js
push
pop
add
cli
loopne
aad
rcr
mov
das
push
fidiv
jmp
fst
je
or
xor
popf
pop
outs
push
stc
lea
mov
call
enter
xor
ja
dec
cmp
mov
mov
jb
sahf
push
push
push
push
sbb
add
push
cmp
mov
adc
and
sbb
aam
mov
sub
jae
cmp
jge
sbb
sub
les
mov
xchg
pop
into
pop
les
data16
sub
jae
pop
div
mul
pop
pop
out
outs
push
dec
jge
or
jnp
test
popf
mov
fcmovb
xchg
fwait
in
pusha
pop
imul
test
loop
mov
sbb
call
jecxz
movs
sub
retf
in
(bad)
iret
jne
icebp
or
xlat
in
in
dec
jmp
call
dec
add
pop
stc
pusha
in
dec
and
(bad)
fst
adc
xor
push
in
out
sbb
icebp
mov
adc
sub
scas
xor
xor
xchg
cmps
fsub
or
test
rcr
sub
sub
fldenv
test
mov
jmp
and
dec
test
xor
iret
sbb
jnp
push
and
and
and
sub
xchg
int
rcr
xor
scas
xor
and
rcl
jmp
jecxz
jmp
lea
movs
xor
xchg
jo
enter
mov
inc
mov
xor
cmp
jbe
enter
dec
mov
pop
cmp
and
jno
add
test
mov
mov
inc
cmps
adc
aam
pop
jb
mov
fcom
or
std
inc
mov
ja
xchg
aas
cld
fwait
sti
inc
or
fist
push
imul
mov
adc
js
arpl
pop
cwde
mov
enter
sar
int3
mov
cmp
retf
sub
mov
cmp
dec
aam
scas
push
jge
mov
adc
sbb
inc
inc
loope
dec
ins
and
ret
je
push
je
jp
test
popf
rcr
ds
repnz
int3
xchg
enter
xchg
lea
leave
push
clc
cmps
push
scas
dec
lea
mov
inc
cli
dec
jle
push
lods
push
add
mov
jno
out
stc
pop
jne
add
lods
gs
add
xor
push
imul
aad
xchg
outs
in
arpl
mov
xor
jb
imul
jg
sbb
xor
(bad)
mov
dec
test
xor
inc
cmc
xchg
and
and
push
shr
cmp
add
fadd
or
aam
xor
pop
mov
pop
xchg
rcr
lock
daa
(bad)
call
fnstenv
xchg
jge
loopne
int
out
xor
add
add
adc
add
leave
inc
div
cld
cmovg
mov
mov
jb
lods
sub
int
mov
pop
pop
pop
loop
dec
test
fisttp
icebp
imul
(bad)
test
pop
xchg
in
loop
jns
not
out
xor
cli
loope
sub
mov
adc
lock
sti
mov
jmp
mov
gs
sahf
cmp
adc
jp
push
mov
add
je
or
addr16
fs
inc
xor
push
xor
shr
(bad)
pop
push
in
lahf
inc
xchg
and
cmp
adc
xor
out
not
cmc
xchg
and
jns
dec
into
cmp
inc
mov
cmp
in
fcmove
add
dec
dec
and
ret
sbb
mov
cmps
cmp
into
aaa
retf
push
scas
aam
stc
mov
stos
retf
mov
test
es
aad
sub
(bad)
mov
mov
xchg
sbb
sbb
push
jmp
jecxz
xor
fwait
outs
(bad)
jb
inc
(bad)
sub
test
add
xlat
es
or
dec
(bad)
cmp
lods
xchg
fcomp
xor
sbb
(bad)
les
sbb
cli
and
mov
sbb
mov
inc
sbb
out
in
dec
inc
add
xchg
add
push
int
out
fcom
rol
rcr
and
fisub
js
adc
pop
mov
fmul
clc
push
and
into
sbb
push
mov
mov
repz
mov
das
in
push
cmp
pop
mov
mov
pop
push
cs
dec
cmp
aaa
loope
ja
rol
retf
cli
jb
pop
fild
bound
cmps
sbb
shr
add
ret
jmp
dec
(bad)
rcr
jge
sahf
ins
push
nop
hlt
mov
inc
ret
retf
or
mov
mov
mov
mov
inc
dec
mov
xchg
jo
fcom
xchg
(bad)
aaa
mov
xlat
inc
sbb
cmps
cwde
das
psrld
dec
sbb
fstp
movs
imul
xlat
push
cmp
mov
pop
mov
ins
inc
imul
adc
push
call
bound
add
and
mov
sti
pop
cmp
pop
mov
pop
mov
movs
pop
and
sub
lods
mov
dec
cmp
popw
mov
mov
xchg
(bad)
repz
jle
test
bound
adc
mov
fdiv
pop
ins
mov
xor
mov
in
loope
mov
dec
imul
jno
jmp
push
ja
cli
jge
loopne
clc
xchg
popa
into
or
xor
aaa
xor
sar
not
cmc
sub
test
jns
pop
xlat
sbb
and
pop
sbb
stc
inc
xchg
jno
adc
(bad)
xchg
or
bound
mov
push
xchg
imul
ret
push
jno
mov
addr16
and
imul
or
movs
add
mov
dec
aaa
mov
pop
addr16
test
pushf
push
out
inc
movs
loop
jnp
mov
xchg
imul
shl
mov
icebp
push
mov
push
push
rcr
pop
inc
adc
xchg
mov
lea
fisubr
jmp
daa
and
je
sahf
cwde
jnp
imul
sub
nop
adc
(bad)
fild
(bad)
push
dec
das
sub
js
cwde
scas
push
sbb
enter
shl
stos
repnz
fs
in
je
sub
push
pop
inc
pop
in
sbb
call
mov
test
addr16
sbb
adc
nop
int
pop
inc
scas
inc
inc
movs
inc
pop
ds
adc
call
mov
push
adc
call
into
stc
dec
inc
xchg
fisubr
daa
fsubrp
xor
scas
outs
adc
jae
fsub
cwde
jno
and
pop
sbb
pop
mov
push
div
jmp
push
fwait
in
pop
push
(bad)
call
inc
ret
inc
(bad)
ins
jg
pusha
xor
pop
xchg
push
lods
ret
(bad)
aaa
cmp
test
and
mov
fcom
pusha
aam
pop
xchg
ret
jmp
clc
les
icebp
pop
push
fidivr
jbe
sahf
je
ss
dec
sub
cmp
sbb
stos
pop
in
fild
js
or
loop
(bad)
mov
imul
adc
jne
cmp
fsub
aaa
test
out
mov
xchg
push
popa
dec
clc
addr16
mul
add
or
aad
inc
leave
divps
pop
sbb
ja
xchg
(bad)
and
adc
inc
je
inc
add
out
pop
stc
xchg
inc
movs
add
ss
movs
out
jg
nop
mul
imul
es
in
sbb
icebp
ret
dec
jno
shl
sub
mov
mov
cmp
jp
mov
gs
ins
or
push
out
push
loopne
imul
iret
retf
loope
ds
cmp
mov
arpl
fwait
ror
adc
push
fmul
jb
cwde
pop
jbe
mov
pop
jecxz
pop
addr16
pop
stc
mov
out
push
mov
xchg
sbb
add
and
das
jecxz
jo
mov
pusha
call
vpsrlq
movs
bound
stos
retf
push
mov
leave
jp
iret
out
int
or
mov
lahf
das
sub
ret
repz
sti
xor
popf
fwait
jmp
add
loopne
and
mov
pusha
sar
inc
xchg
pop
cmp
jle
xor
xchg
sbb
imul
hlt
cmp
int
mov
js
push
xchg
jns
adc
mov
jno
scas
and
and
stos
sub
push
dec
cs
xchg
mov
and
push
sbb
sub
jns
lea
add
mov
fisttp
jb
sbb
push
fcmovbe
cmp
lds
cmp
shl
push
adc
popa
cmps
(bad)
out
mov
pop
leave
mov
lods
retf
add
xchg
mov
imul
stc
inc
lock
retf
mov
repnz
pop
cmp
jo
retf
stc
pop
add
cmp
jne
adc
nop
or
call
and
jmp
les
or
and
lods
shr
xor
je
xchg
pop
popa
push
jmp
add
(bad)
pop
push
hlt
dec
lods
inc
sbb
icebp
div
add
mul
jae
adc
add
mov
pop
into
add
jecxz
mov
pop
fsub
and
pop
add
cdq
aad
mov
jne
fnstenv
retf
movs
fisttp
jne
jle
out
je
or
push
jmp
fisttp
imul
add
je
xchg
xlat
rcr
cs
shl
xchg
mov
aam
rcr
call
mov
xor
fisub
xchg
inc
adc
mov
sbb
and
ret
leave
sbb
test
popf
or
std
mov
out
adc
pop
inc
inc
inc
lock
in
jle
or
or
das
loop
outs
inc
not
sar
xchg
ret
shl
push
and
ss
add
push
mov
inc
inc
xchg
loope
dec
mov
inc
pop
pop
call
jo
xchg
push
int3
sbb
jge
outs
inc
outs
mov
imul
add
adc
inc
cmp
pop
sbb
or
bound
jg
mov
retf
sbb
imul
pusha
or
jno
jmp
cmp
or
enter
jne
repnz
push
or
jge
mul
enter
push
mov
lahf
movs
xchg
cmp
dec
cmp
pop
xchg
pop
loop
inc
iret
addr16
jo
das
or
jo
inc
cmp
daa
cmp
jno
cli
aaa
test
sub
jl
adc
inc
sub
imul
outs
push
push
or
sub
sbb
test
mov
fnstsw
and
mov
fidivr
inc
or
iret
pusha
xor
xor
pop
addr16
scas
push
and
sbb
xchg
add
or
and
stos
stos
inc
mov
sub
ficomp
jb
xchg
out
or
xor
js
inc
out
cmp
push
push
mov
add
mov
(bad)
fild
sbb
jg
lods
jmp
sub
jle
sbb
ja
sub
arpl
xor
mov
out
ds
or
fwait
icebp
adc
dec
loope
enter
push
gs
ins
sbb
lods
cmps
(bad)
repz
or
loop
cs
ins
mov
cmp
mov
xchg
push
cmp
retf
out
addr16
xchg
fcomp
sbb
add
mov
mov
adc
push
nop
push
pop
outs
inc
aam
sub
inc
ss
sar
lds
dec
(bad)
cli
adc
cmps
cdq
push
push
bound
cli
sub
push
retf
dec
dec
cwde
leave
push
push
jge
xor
add
ror
retf
push
bound
sahf
and
rol
add
pop
pop
xchg
sbb
mov
and
aam
mov
stos
nop
aas
test
je
retf
xchg
aam
sub
imul
sti
stos
mov
ret
ds
fisttp
xlat
cdq
and
mov
movs
or
leave
inc
and
nop
adc
aad
mov
jge
sub
or
sahf
xor
mov
sbb
adc
xor
pop
xchg
dec
jbe
imul
mov
push
pusha
gs
popf
sub
fdiv
hlt
nop
retf
xchg
pusha
adc
jge
mov
pop
sbb
xchg
xlat
fbstp
cwde
mov
shl
popa
fs
(bad)
cmp
xchg
xor
pusha
add
dec
xchg
adc
xchg
iret
mov
fcom
retf
icebp
jae
pop
adc
and
scas
add
pop
and
xchg
sub
push
xchg
push
icebp
rol
stos
mov
sbb
stos
mov
mov
rcl
lods
das
jl
nop
and
jle
and
pushf
sahf
std
lds
out
xchg
pop
xchg
inc
xchg
jbe
xchg
scas
and
sbb
pop
push
cwde
mov
aaa
ret
mov
inc
call
or
push
ret
jbe
dec
push
jae
adc
aas
push
cmc
call
fisttp
iret
jo
inc
cdq
or
and
xchg
sub
inc
pop
cli
add
mov
cli
inc
(bad)
repnz
dec
sub
push
push
movs
fs
cdq
jp
aas
ret
mov
je
test
retf
shl
adc
xchg
or
pop
loopne
xor
(bad)
sub
dec
and
and
xor
dec
cmp
cdq
inc
(bad)
cmps
pop
les
je
movs
stos
imul
js
xor
sub
icebp
pop
mov
mov
jmp
daa
inc
dec
mov
push
or
xor
out
test
inc
jp
ret
adc
xor
push
repnz
mov
sbb
pushf
mov
mov
xor
dec
or
xchg
popf
add
movs
mov
push
test
mov
push
gs
fs
fistp
xor
cmp
fsubr
sbb
or
xlat
(bad)
jne
jo
dec
fild
or
jecxz
mov
shr
xchg
sub
sbb
push
in
xchg
cmp
jb
lahf
iret
xchg
das
shl
mov
sub
fisttp
stos
bnd
test
jecxz
mov
shr
jb
mov
clc
jmp
sar
das
test
add
ror
(bad)
mov
inc
jmp
cmp
dec
sub
dec
fstp
jb
mov
lea
aam
dec
stos
sub
add
cld
loop
mov
mov
ret
dec
in
xor
aas
shr
lds
and
mov
mov
pop
xchg
jecxz
pop
std
cld
and
aam
mov
xchg
das
movzx
inc
jns
xchg
inc
shl
push
es
xchg
loop
xchg
pop
mov
idiv
push
mov
add
jmp
(bad)
push
pop
mov
out
out
das
ins
fldenv
sbb
jae
ins
nop
pop
ja
loopne
cmp
mov
mov
or
fldcw
add
clc
imul
adc
and
icebp
test
bound
cmp
mov
popf
cmp
or
pop
ds
push
ins
adc
and
xor
xlat
cmps
pop
pop
sbb
cmps
scas
xchg
sub
out
inc
cmp
lods
imul
fsub
aas
addr16
in
call
iret
repnz
sub
lahf
in
into
arpl
bound
test
dec
lds
bound
cli
adc
mov
mov
xlat
cmc
imul
(bad)
shl
in
mov
jecxz
adc
addr16
adc
mov
inc
je
ss
sub
cmp
inc
in
out
addr16
jno
or
cmp
jmp
push
dec
(bad)
retf
in
out
jl
xchg
test
ds
xchg
jb
cdq
fcomp
jae
fsub
mov
ret
jp
loopne
and
fist
js
repz
lahf
pop
icebp
jb
nop
pop
or
ror
jno
clc
loop
test
mov
pop
int3
push
push
add
dec
xor
cld
jp
ins
jp
rcr
xchg
xor
lock
scas
and
inc
rcl
cwde
enter
(bad)
xor
outs
sti
and
pop
sbb
push
(bad)
jmp
adc
enter
mov
sbb
das
xor
shl
dec
(bad)
mov
cli
int3
pop
or
xchg
push
imul
add
pop
retf
add
(bad)
cmp
xor
adc
fbstp
leave
and
pusha
or
ja
xchg
adc
jns
jecxz
in
call
xchg
shl
cmps
pop
adc
fisttp
aas
outs
sahf
scas
shl
faddp
jmp
mov
int3
std
push
pop
pop
mov
stos
in
dec
inc
add
cmp
cmp
js
leave
or
jnp
lea
retf
fwait
sub
mov
push
shr
div
stos
pop
mov
lds
mov
(bad)
mov
pop
(bad)
out
int
adc
(bad)
lds
mov
mov
or
dec
jmp
sub
repz
dec
push
int3
ror
push
mov
pop
lea
pop
(bad)
xchg
xlat
jmp
push
mov
pop
dec
test
repz
loope
aam
or
into
outs
mov
clc
sub
je
jp
mov
mov
cwde
jmp
cmps
push
xchg
pop
imul
aaa
cwde
cld
repnz
xchg
jno
ret
xchg
xor
push
pop
xchg
sbb
push
dec
add
movs
inc
ins
jbe
mov
xor
jg
ffreep
cmp
cmp
dec
xchg
and
add
ds
push
mov
lods
mov
cmp
sti
popa
jl
icebp
pop
push
lods
cmps
jmp
xor
outs
cmp
es
test
xor
jb
dec
mov
push
xchg
icebp
sbb
sbb
sub
(bad)
retf
nop
xor
arpl
imul
test
sub
ja
or
hlt
or
or
mov
cdq
les
in
xor
jl
or
mov
sub
shl
ror
inc
or
dec
sti
sbb
or
mov
mov
sub
lahf
mov
dec
adc
xor
lds
sub
das
cli
aad
out
push
xlat
addr16
xlat
mov
mov
xor
push
pop
xchg
(bad)
pop
adc
test
push
mov
mov
xchg
cmps
fisubr
call
addr16
mov
popa
adc
into
icebp
xor
xlat
test
jnp
xlat
inc
cs
das
not
scas
or
xchg
shr
xchg
ins
mov
outs
or
pop
cmp
or
cmp
cmps
sahf
cmp
inc
fwait
cli
arpl
out
imul
or
movs
popf
pop
xchg
jne
pop
nop
lods
(bad)
dec
jb
inc
ret
(bad)
mov
in
out
xchg
mov
push
shr
pop
cs
xchg
sub
pop
test
mov
fs
mov
addr16
test
retf
jmp
rcl
stc
test
daa
lock
dec
jns
mov
test
outs
hlt
dec
inc
sub
int3
pop
test
call
in
sbb
xor
in
xchg
jo
scas
cld
mov
sbb
push
aad
(bad)
repnz
sbb
ja
xor
call
push
mov
fdiv
adc
int
icebp
pop
int
retf
rep
fcmovne
pop
push
in
dec
mov
movs
(bad)
jp
mov
popa
sahf
sub
out
push
out
dec
loop
sub
adc
mov
push
int3
mov
inc
frstor
or
push
enter
ret
mov
jg
jecxz
aas
mov
cmps
cs
gs
loop
shl
cmp
adc
movs
mov
and
mov
sahf
fisubr
in
popa
es
push
lds
outs
mov
mov
mov
cwde
jns
dec
repnz
push
adc
ja
shl
mov
movs
bound
mov
rol
add
(bad)
hlt
push
mov
clc
cmp
popf
shl
inc
mov
outs
loop
xchg
or
pushf
pop
jb
scas
(bad)
inc
scas
ret
lds
mov
call
mov
add
mov
es
hlt
jp
push
mov
mov
pop
repz
inc
loop
xor
add
ret
pop
jp
(bad)
xlat
cs
add
cmp
pop
xlat
dec
jmp
mov
cmps
or
sar
mov
or
es
test
test
ds
lds
mov
sbb
popa
loope
mov
outs
jecxz
xor
daa
inc
lods
mov
jne
xor
xor
mov
out
fwait
mov
jl
xchg
or
sbb
sar
push
sbb
push
and
cli
push
jmp
push
test
loopne
pop
jmp
mov
addr16
ror
pop
hlt
mov
imul
ss
in
mov
sbb
pop
xchg
sahf
adc
sub
fwait
jnp
inc
movs
mov
inc
div
jns
in
lods
std
jmp
cdq
cs
push
shr
and
js
call
(bad)
jbe
out
dec
jcxz
fistp
repnz
retf
cmp
scas
sbb
and
inc
add
mov
(bad)
xor
inc
(bad)
or
mov
fistp
stc
pushf
retf
push
pop
lds
ja
add
into
les
dec
pop
mov
mov
out
xchg
addr16
rcl
inc
inc
retf
or
dec
and
add
xor
inc
jbe
cmp
push
push
in
xchg
or
jns
loope
xchg
adc
and
push
and
out
or
arpl
sahf
retf
adc
test
push
push
xchg
mov
fsubr
pushf
test
addr16
cli
adc
add
xchg
das
pushf
(bad)
mov
fbld
clc
adc
aas
adc
scas
jns
icebp
push
mov
shl
or
(bad)
imul
call
arpl
pop
push
push
out
nop
enter
mov
mov
addr16
add
fist
cmp
aam
jge
sub
sub
aas
cmp
outs
cmps
xchg
fnstsw
lods
mov
(bad)
in
cmps
enter
loope
invd
lea
dec
mul
xchg
jbe
adc
ss
sar
sub
or
or
sbb
test
mov
test
xor
retf
test
cmp
fcmove
mov
stos
in
dec
push
xchg
or
inc
in
rcl
stos
sbb
(bad)
mov
jno
add
ret
inc
push
mov
jne
sub
ror
std
xlat
sbb
out
mov
sub
pop
mov
jae
inc
enter
mov
retf
adc
inc
aaa
adc
cmp
clc
dec
(bad)
stos
bswap
pop
jbe
xchg
lea
xor
out
rcl
xchg
push
sub
xlat
xor
jae
xchg
pop
ficom
sbb
mov
jae
jbe
xchg
fistp
not
inc
shl
outs
jbe
sbb
sub
pop
and
pop
enter
xchg
mov
push
sti
pop
iret
or
dec
jp
scas
cmp
rol
dec
push
mov
xchg
jmp
sub
adc
xchg
jae
adc
xchg
push
pop
mov
iret
sub
lods
jmp
or
jne
fild
xlat
lods
rcl
pop
mul
enter
ret
std
call
or
dec
mov
neg
cwde
cdq
or
jle
stos
mov
enter
aad
jmp
push
sbb
push
loop
nop
xchg
nop
xchg
(bad)
out
repz
loopne
test
call
enter
int
loope
add
xchg
addr16
int
ins
nop
call
jmp
lahf
push
inc
dec
and
repnz
shr
fmul
rcr
dec
aaa
test
add
aaa
pusha
scas
fmul
fdiv
dec
sar
sti
jge
movs
jo
out
cli
imul
scas
jl
fsubr
inc
add
(bad)
fdivp
scas
test
adc
pop
lea
arpl
adc
stos
sbb
call
loope
push
inc
(bad)
dec
fstp
sub
test
sub
ja
lods
je
mov
jno
aam
mov
cmp
dec
push
cmp
ss
mov
mov
retf
outs
xchg
sub
mov
mov
add
pop
xchg
push
add
cmp
xlat
test
inc
inc
ret
sti
mov
gs
mov
test
xor
jnp
stos
cdq
arpl
dec
pop
jno
das
push
int
addr16
movs
pop
pop
aas
pop
test
in
push
dec
xor
xor
mov
les
inc
sbb
loop
add
dec
les
in
dec
loop
sar
ret
mov
lahf
arpl
aas
out
push
dec
mov
xor
inc
push
div
std
mov
cdq
dec
ins
icebp
mov
jns
pop
cli
push
dec
or
in
jae
int
pop
xchg
add
scas
pop
dec
cmp
aam
xchg
sbb
adc
mov
mov
jmp
fwait
ret
out
loop
loope
call
imul
mov
and
int
add
popf
or
xor
cmp
dec
jl
inc
cmp
push
fs
lods
mov
push
popa
fmul
push
xchg
bound
xlat
mov
mov
ss
jge
mov
into
(bad)
inc
dec
popa
push
fisttp
repnz
sbb
xor
mov
ins
push
dec
aad
rcl
loopne
push
(bad)
push
dec
(bad)
out
cmp
fbstp
movs
sub
in
jge
aam
inc
or
sub
loope
inc
mov
in
push
mov
enter
test
call
or
or
or
add
push
mov
lods
mov
cmp
cld
sahf
jecxz
sub
scas
cmps
pop
or
bnd
pop
bnd
inc
push
clc
dec
xchg
mov
dec
and
inc
cdq
adc
pop
add
sub
jo
jnp
es
test
xchg
ins
(bad)
in
mov
stos
popa
xchg
dec
push
xchg
test
in
and
push
rcr
ja
fnstenv
ins
add
or
pop
aaa
cld
movs
inc
(bad)
xor
inc
les
pop
sbb
sar
div
dec
fst
sbb
mov
pop
dec
xchg
mov
neg
repz
cmp
repz
add
fsubr
xchg
stos
das
push
xlat
not
pop
mov
mov
in
xlat
mov
daa
xchg
std
ds
push
sbb
adc
call
jmp
int3
cld
inc
cli
inc
cmps
jmp
jle
jp
and
jmp
nop
add
std
stos
mov
sub
mov
std
aad
std
sub
movs
dec
cmp
das
imul
into
rcl
sbb
mov
ret
jmp
retf
xchg
mov
and
nop
add
ins
fmul
or
in
push
pop
cmp
jbe
dec
fst
rol
ror
jecxz
bound
scas
movsx
popf
nop
add
fld
jb
xchg
pop
cwde
jno
dec
mov
bnd
adc
xlat
pop
pop
je
lods
cld
cwde
sar
dec
in
or
hlt
dec
xor
xchg
cmp
shl
nop
pop
jmp
jmp
jbe
hlt
mov
dec
dec
inc
aaa
ficom
xchg
fadd
pop
mov
xlat
neg
js
ss
ins
pop
das
jae
pop
jne
or
jecxz
add
dec
mov
xor
cmp
sub
pusha
stc
sbb
xchg
inc
aad
xor
and
nop
es
dec
cdq
fild
sbb
pop
or
xchg
out
pop
jo
xchg
push
sbb
push
add
mov
stc
xchg
int3
pop
icebp
inc
or
pop
je
(bad)
cmps
test
push
jb
pop
push
leave
(bad)
aas
ret
retf
cmp
mov
(bad)
arpl
das
out
pop
in
dec
icebp
mov
cld
xchg
in
inc
mov
xchg
mul
dec
sti
jg
loop
cmp
and
sti
jge
jmp
push
add
scas
in
movs
les
xchg
xor
in
nop
and
mov
cmp
add
daa
pop
rcr
pop
imul
stc
inc
adc
push
pop
pop
sub
mov
add
sahf
push
(bad)
mov
xchg
mov
adc
push
inc
or
(bad)
xor
mov
jmp
inc
pop
pop
add
fmul
retf
sub
dec
mov
pop
fbld
repz
mov
cli
fdivr
cmps
sbb
movs
mov
sbb
ins
xor
pop
(bad)
not
in
stc
and
cmp
dec
jp
push
jecxz
push
inc
jo
or
pop
pop
cmp
jne
adc
rcr
push
out
xor
mov
xlat
jns
jmp
add
mov
addr16
cmp
jmp
cs
(bad)
sub
mov
cwde
mov
mov
dec
xor
mov
(bad)
ficomp
add
cmp
add
int
sbb
sbb
pop
mov
sti
ret
sbb
xor
and
es
repnz
pop
adc
and
jns
sti
or
mov
shr
jb
dec
sbb
push
sub
fisttp
loop
sbb
xchg
fldenv
arpl
cld
sub
stc
loope
stos
mov
mov
mov
fnstsw
sbb
inc
daa
in
dec
push
fwait
jg
jg
dec
je
lods
dec
arpl
xchg
scas
push
sbb
scas
test
adc
iret
add
adc
arpl
retf
clc
imul
loope
test
ficom
mov
push
shl
pop
(bad)
ins
inc
aam
arpl
aam
arpl
out
pushf
in
(bad)
and
inc
lock
cmp
in
(bad)
adc
mov
loope
mov
enter
stc
or
rcr
sar
jecxz
addr16
inc
out
cmp
cwde
pusha
mov
xor
in
retf
data16
pop
mov
stos
leave
pop
cli
and
cmp
jnp
hlt
xchg
or
popa
cdq
mov
aas
mov
add
bound
out
xchg
xchg
stos
sar
sub
push
add
loope
push
inc
xchg
xchg
adc
or
pop
or
fistp
add
mov
jmp
int3
adc
and
pop
xchg
xlat
cdq
stos
fwait
mov
int3
outs
add
jle
cmp
aas
push
lods
rcr
adc
and
scas
or
retf
sub
cli
dec
push
leave
pop
pop
sub
ret
ds
fistp
inc
fdivr
movs
fmul
cs
push
or
dec
shl
inc
adc
outs
imul
mov
jp
adc
dec
xchg
dec
add
mov
cmps
in
xchg
or
cmp
ss
mov
mov
sub
add
adc
and
cmp
mov
or
jmp
mov
in
mov
and
fwait
ja
sbb
pop
pop
fnsave
loop
push
push
ss
out
loop
xor
adc
ret
mov
and
jb
or
jae
jg
mov
icebp
push
xchg
inc
and
loope
mov
and
mov
cmps
inc
ins
test
or
xor
call
or
ficomp
jmp
mov
je
outs
cmps
jg
mov
mov
ud1
nop
push
xlat
and
mov
fcom
stc
in
cmp
jl
sub
and
cmp
adc
(bad)
fs
dec
jns
rol
in
dec
add
xlat
scas
mov
outs
aad
jle
pop
ss
retf
shr
pushf
cwde
in
adc
stc
pop
stos
pop
inc
and
out
jl
jb
mov
inc
xor
inc
cmp
inc
jl
lock
and
scas
dec
std
mov
sub
int3
ja
out
mov
push
dec
push
fdiv
sbb
out
mov
mov
adc
xchg
mov
ins
(bad)
stc
and
mov
call
inc
(bad)
xor
inc
data16
fstp
retf
xor
mov
sahf
fmulp
xchg
add
xor
or
cs
inc
sub
mov
rol
mov
mov
arpl
and
jl
dec
inc
pop
and
mov
jb
mov
int3
loop
mov
out
adc
mov
dec
ret
js
mov
mov
sbb
mov
sbb
or
pop
cmc
inc
mov
jbe
scas
or
in
mov
inc
jmp
dec
aaa
aad
jae
push
sbb
push
push
fs
mov
fwait
inc
fucom
add
xchg
mov
or
imul
(bad)
jle
(bad)
test
push
mov
add
jmp
retf
fwait
test
jnp
cmps
rcl
sbb
mov
cmp
popf
(bad)
pop
lea
and
dec
xor
xchg
cs
push
fistp
movs
push
aas
dec
pop
arpl
mov
stos
(bad)
sti
jo
sub
retf
push
mov
adc
inc
retf
sbb
popf
cs
mov
dec
jbe
sbb
xchg
xchg
pop
mov
sbb
mov
movs
and
mov
jne
xchg
fisttp
(bad)
mov
mov
or
ins
ret
ins
push
stos
xor
pop
add
not
pop
inc
dec
sbb
xchg
iret
std
and
mov
cvtdq2ps
ins
adc
jne
daa
call
push
stc
cmc
add
out
js
(bad)
das
aas
cmp
stos
call
aam
push
xor
cmp
ss
(bad)
data16
nop
ja
imul
imul
jo
outs
shl
std
loope
jo
cmp
and
mov
aaa
mov
jnp
adc
xchg
je
mov
test
in
sub
cdq
add
jmp
repnz
mov
mov
lea
jae
retf
xor
pop
out
enter
ins
in
inc
pop
and
cmc
ss
aam
and
sbb
rcr
xor
clc
outs
(bad)
pop
pop
inc
neg
mov
pop
in
mov
or
add
lahf
adc
scas
inc
jle
dec
inc
imul
xchg
push
push
imul
daa
es
dec
add
(bad)
icebp
xor
fwait
mov
inc
jmp
mov
pop
in
push
sti
inc
(bad)
xchg
int
dec
icebp
inc
out
ss
cmc
mov
enter
jne
hlt
mov
aas
mov
out
pop
jmp
es
sbb
and
fmul
cmp
pop
jg
inc
adc
lock
out
or
mov
cli
(bad)
fwait
sub
xor
fnstsw
je
pop
loopne
jmp
or
daa
and
dec
pop
dec
pop
mov
pushf
jno
mov
jnp
fs
xchg
add
xor
push
dec
aaa
mov
outs
xchg
dec
mov
inc
fs
pop
(bad)
retf
(bad)
or
enter
sub
fild
dec
xchg
jmp
mov
xchg
pop
and
mov
dec
and
mov
pop
pop
adc
ficomp
mov
push
push
cmp
dec
mov
xchg
jae
and
fisub
push
cli
lods
retf
dec
adc
pop
out
lock
(bad)
das
and
xchg
pop
mov
leave
sbb
and
xchg
je
mov
repz
fsub
out
retf
dec
dec
jmp
and
fwait
xchg
mov
xchg
sbb
cmp
cmp
add
xchg
sbb
xchg
pop
(bad)
or
vmread
jns
(bad)
es
dec
adc
sub
cmp
pop
add
jp
xchg
(bad)
sti
inc
xlat
pop
push
inc
jmp
stos
jge
into
or
lahf
vcvtss2si
sbb
sbb
aam
jecxz
cmp
ins
jbe
mov
test
(bad)
cmp
dec
test
push
mov
lods
sub
xchg
or
mov
ins
shl
cmp
addr16
aam
in
in
push
imul
fstp
sahf
push
fdiv
scas
hlt
call
pop
sar
sub
dec
out
fwait
jnp
push
jne
sub
(bad)
scas
xor
nop
shl
sub
pop
imul
enter
mov
ds
popf
ja
jns
int3
jns
add
stos
outs
jge
dec
fsub
xor
into
cmp
out
mov
shl
add
pop
sbb
rol
sbb
ret
cmp
sbb
inc
nop
or
mov
inc
pop
push
pop
jne
scas
in
mov
dec
shl
loopne
inc
sahf
cwde
(bad)
fdivr
mov
leave
retf
js
xchg
movs
scas
and
dec
cli
push
mov
mov
add
jmp
js
sbb
in
jnp
jl
ins
repz
rcr
add
std
pop
shl
(bad)
pop
mov
retf
adc
mov
shr
push
cmc
inc
and
stos
fwait
sub
pop
dec
test
dec
xchg
jbe
or
call
and
sub
sar
stc
add
ja
sbb
ret
jmp
sbb
in
mov
fwait
mov
push
adc
mov
inc
lahf
mov
fstp
mov
xchg
pop
out
cmp
ret
inc
lods
adc
aaa
adc
add
pusha
retf
and
xchg
add
pop
aad
cmp
sub
into
push
stc
cmp
mov
adc
pop
hlt
dec
in
mov
bound
shr
sub
cmps
push
fwait
popf
gs
retf
pop
lods
sbb
das
ret
aad
iret
leave
fcom
dec
fnstcw
(bad)
lods
in
ret
test
xchg
pop
push
mov
mov
xchg
into
cdq
xor
add
in
dec
xchg
cmp
dec
in
test
std
(bad)
call
xchg
pop
and
sbb
pop
data16
lock
movs
mov
jbe
mov
pop
leave
hlt
adc
popf
scas
jb
(bad)
push
pop
jns
mov
xchg
mov
aas
mov
repz
cwde
pop
xchg
popf
fsubr
jmp
mov
add
stos
je
xchg
sub
xchg
es
fcom
cli
mov
xor
mov
ins
test
jmp
adc
cmp
jmp
(bad)
hlt
dec
pop
dec
ret
or
mov
xlat
pop
aas
cld
xor
sbb
(bad)
mov
pusha
xor
jp
(bad)
out
cmps
mov
aas
adc
xchg
neg
jle
mov
dec
test
arpl
imul
shl
bnd
jne
adc
inc
ror
in
ror
xor
push
inc
bound
dec
sub
jne
cmp
add
retf
cmp
mov
ins
xor
pop
xor
mov
cmp
fbstp
aaa
js
dec
dec
mov
int
(bad)
div
or
add
and
mov
cmp
adc
add
lea
push
push
sub
sub
push
and
mov
mov
loop
inc
add
lahf
movs
pop
or
or
movs
push
(bad)
lock
mov
or
mov
sub
dec
nop
(bad)
pop
adc
xor
sub
imul
xchg
daa
inc
sub
adc
out
mov
(bad)
addr16
in
mov
in
inc
jae
dec
xchg
mov
sbb
scas
and
lods
outs
dec
ror
mov
mov
and
neg
enter
inc
jo
mov
fdiv
jle
push
xchg
fsub
fucomip
ja
inc
mov
cmp
ins
and
lods
ror
cs
loop
out
test
fidiv
cmp
inc
push
fcom
call
test
call
in
sub
mov
fs
jle
loope
sub
and
xor
xor
jmp
xor
(bad)
jb
adc
mov
dec
cwde
sub
mul
pop
add
or
jecxz
jmp
push
cs
sub
sub
or
addr16
(bad)
jns
lods
jle
pop
sub
imul
push
jl
and
fld1
mov
gs
add
xchg
dec
cmp
dec
out
das
and
cdq
push
cwde
int3
or
cmp
jle
movs
fninit
cmp
fisttp
data16
leave
scas
dec
cmc
cmps
sbb
scas
mov
(bad)
stos
xor
(bad)
ja
(bad)
jmp
xchg
sahf
ror
dec
test
mov
mov
sbb
adc
mov
enter
xor
jmp
icebp
mov
fs
aas
imul
and
dec
xlat
jne
mov
adc
(bad)
retf
and
imul
add
push
xchg
scas
mov
inc
ins
cmc
pop
mov
mov
xor
repnz
push
mov
repz
pcmpgtd
in
xchg
xchg
call
or
or
dec
xchg
mov
jle
xor
ret
add
inc
mov
and
xlat
data16
jo
xor
xchg
sub
(bad)
loope
repnz
and
shl
pushf
out
mov
retf
sbb
pop
xlat
pop
lods
into
cmp
or
inc
loop
adc
dec
cmps
push
inc
xchg
push
ret
dec
sets
and
stos
out
and
sub
push
fild
mov
not
hlt
std
shl
call
dec
icebp
into
pop
clc
jb
inc
push
mov
add
rcr
inc
addr16
and
add
push
pop
jae
mov
mov
pop
dec
mov
xchg
inc
shl
push
sub
(bad)
into
rol
mov
and
data16
xor
or
cmp
out
repnz
mov
adc
fist
dec
int3
ss
sahf
inc
pop
push
pop
scas
aad
test
mov
mov
push
adc
mov
repnz
sbb
sahf
fmul
mov
daa
adc
mov
lods
inc
(bad)
xchg
aas
pop
push
mov
and
inc
push
and
out
cmps
jge
es
inc
mov
test
xor
loope
pushw
int3
aas
push
shrd
cmps
leave
pop
out
xchg
leave
lahf
add
(bad)
mov
test
in
int3
daa
in
sbb
jae
outs
adc
test
scas
sahf
lods
or
imul
call
xchg
fnsave
cmp
mov
pop
pop
sub
pop
xchg
jae
in
(bad)
xchg
jae
add
sbb
adc
cs
mov
gs
nop
loopne
cdq
stos
and
out
pop
das
scas
leave
mov
xor
loopne
mov
xor
arpl
jno
mov
leave
jo
cmp
mov
ficom
ins
mov
bound
enter
sub
pop
cli
sub
sub
and
hlt
shl
dec
mov
mov
fistp
mov
out
pop
xor
(bad)
pusha
jge
push
inc
mov
movs
xor
pop
adc
cli
sub
jae
mov
dec
mov
arpl
dec
in
xchg
das
lods
mov
scas
imul
out
bnd
xchg
inc
fwait
sbb
mov
retf
cmp
ds
dec
jo
test
pop
stc
jge
xor
shr
xchg
jl
fwait
mov
pop
(bad)
daa
rcl
push
dec
(bad)
or
imul
imul
int3
mov
inc
mov
xchg
test
out
out
sub
retf
xor
mov
ss
int
out
arpl
cmp
add
fistp
not
das
ror
sbb
cwde
test
cmp
jmp
je
cmps
pusha
xchg
or
arpl
jo
test
popa
lods
popa
ret
adc
mov
in
push
mov
cwde
ret
inc
adc
mov
(bad)
das
jno
or
aam
and
mov
xchg
xor
sbb
inc
stos
test
push
lods
mov
mov
cmps
or
push
xchg
xchg
packsswb
fs
cmp
cmps
std
inc
jnp
xor
pop
out
and
pop
std
out
mov
sub
cs
ss
jmp
and
cmps
dec
call
adc
les
mov
repz
jg
sar
add
mov
in
repz
or
jmp
(bad)
adc
cmps
cmp
inc
push
(bad)
mov
mov
frstor
sub
addr16
xchg
and
call
in
xchg
shl
cli
lods
loopne
ficom
dec
aad
add
mov
leave
int3
add
pop
mov
lahf
js
cmp
(bad)
mov
lds
and
mov
fld
push
fs
mov
popaw
adc
and
dec
shl
xor
adc
retf
aad
jecxz
inc
mov
pop
div
adc
mov
mov
les
mov
shr
cwde
je
lahf
push
pusha
sbb
popa
out
jmp
call
hlt
cmps
not
xchg
sbb
jg
aaa
leave
hlt
(bad)
jb
into
ret
ins
and
cwde
xchg
add
into
inc
mov
dec
pushf
outs
mov
and
lahf
das
jne
popf
or
dec
or
mov
scas
mov
jmp
or
add
mov
push
scas
add
inc
in
mov
mov
jge
out
xchg
pop
pop
mov
inc
push
ret
mov
cdq
cdq
mov
cmps
lahf
sub
xchg
xlat
lahf
popf
outs
mov
cmp
cmp
sbb
push
fist
or
stos
movs
aad
repz
add
add
lods
pop
rcl
daa
and
in
mov
inc
push
inc
push
or
ret
cs
int
pop
stc
jae
pavgw
scas
push
enter
loope
fstp
pop
push
or
pop
lea
xor
push
mov
js
adc
xor
js
aam
cmp
xor
mov
add
add
fwait
repnz
cld
call
inc
out
push
jns
loop
pop
cmp
and
inc
and
cmp
jg
sub
mov
out
xchg
adc
xlat
dec
cmp
pop
daa
jmp
fs
dec
dec
lods
add
jge
in
mov
and
mov
stos
out
in
cmp
xchg
xlat
lahf
cmp
or
inc
or
inc
rol
sbb
shl
fild
add
push
cmc
xchg
fsubr
lods
or
test
pop
and
inc
scas
push
pop
lea
adc
dec
dec
or
xor
and
add
pop
pop
lds
add
stos
mov
neg
imul
aas
mov
mov
leave
out
adc
in
int3
out
loop
jne
into
mov
sbb
test
pop
shl
adc
adc
xor
call
ss
fstp
pop
fadd
and
js
jge
rcr
or
mov
xchg
push
(bad)
mov
mov
cli
jp
sti
fadd
cmp
cmc
cmc
inc
(bad)
in
mov
push
nop
add
lods
pop
push
out
call
jmp
add
mov
push
or
test
imul
ins
sbb
jb
jle
mov
imul
sbb
sbb
nop
sahf
push
mov
movs
cmp
sbb
test
shl
cwde
fisub
push
cmp
cdq
push
mov
mov
or
sbb
inc
movs
and
in
jp
stos
mov
push
loopne
cmc
clc
cmp
sub
in
rcl
out
pop
sar
adc
cmc
fisttp
inc
adc
inc
movs
sub
jge
pop
in
data16
push
mov
dec
popf
outs
pop
fdivr
shl
jg
mov
push
xchg
ror
xor
jp
mov
xchg
add
add
jl
mov
fstp
data16
and
loope
cmp
lea
push
mov
in
test
or
bound
test
aas
outs
jge
xchg
shl
and
sar
mov
add
inc
into
iret
add
jmp
mov
pop
fst
mov
xlat
into
(bad)
popf
ficomp
inc
jae
cld
cwde
push
jp
out
gs
dec
sbb
test
sub
dec
xor
mov
lahf
stc
push
nop
imul
and
(bad)
scas
jb
mov
stc
mov
pushf
(bad)
push
cs
xchg
or
cmp
xor
repz
or
dec
and
loopne
fwait
push
rol
push
clc
popa
mov
sbb
das
je
adc
add
lods
lahf
(bad)
cdq
lds
add
dec
mov
rcl
mov
nop
xchg
dec
call
cmps
xor
mov
inc
pop
call
seto
mov
(bad)
loope
daa
sub
loopne
sbb
inc
fild
add
pop
test
mov
push
iret
fs
nop
jp
adc
xchg
frstor
pop
pop
adc
dec
test
aad
dec
aaa
pop
test
cmp
ins
mov
aas
nop/reserved
loop
mov
dec
add
cmps
mov
xlat
repz
jo
jno
xor
daa
pop
push
jo
ret
pusha
xchg
imul
mov
jae
sub
sbb
push
mov
sub
jnp
and
in
xchg
pop
adc
cmp
adc
mov
clc
xchg
add
ins
leave
sbb
cmp
ds
nop
daa
or
cdq
xchg
push
std
adc
or
pop
sub
dec
in
xchg
cmp
xchg
mov
ja
mov
int3
cmp
(bad)
mov
fiadd
or
push
and
jp
scas
and
xchg
daa
pop
int3
cs
adc
popf
mov
and
sbb
push
inc
adc
cmp
fisttp
fwait
cs
out
int
test
daa
cmp
push
xor
ja
jbe
ss
lds
in
jp
xchg
aad
lock
pop
mov
push
loope
mov
enter
push
daa
adc
retf
dec
cwde
mov
inc
cmc
popa
dec
sti
pop
lods
mov
push
mov
popf
das
pop
mov
jae
call
lods
fistp
retf
add
sbb
mov
and
or
call
test
sti
adc
pushf
scas
push
add
push
cmp
cwde
and
mov
jns
int3
fadd
cdq
leave
je
cmc
mov
stc
mov
xor
mov
cs
add
div
add
push
int
dec
call
sub
aaa
pop
adc
xchg
sbb
pop
jle
xchg
pop
ffreep
jae
sub
inc
push
dec
jmp
fisttp
and
loop
cmps
push
lahf
jge
outs
dec
mov
dec
pusha
and
or
cmc
rol
mov
or
and
cmp
mov
lock
xchg
mov
jmp
cmp
push
scas
or
pop
mov
cdq
repz
xchg
out
adc
lds
mov
xchg
adc
sar
sbb
dec
xchg
test
dec
cmp
retf
push
add
and
fs
and
jmp
jecxz
fdivr
pop
add
out
enter
cmp
adc
cmps
sahf
sub
cmp
ret
test
pmullw
lock
(bad)
mov
jns
xchg
xchg
xor
mov
and
neg
pop
jmp
cmp
mov
jge
add
inc
shl
push
jecxz
ss
stc
pop
sub
pop
pop
xchg
iret
sahf
sub
ds
mov
cmps
adc
aad
shl
xor
fst
test
bound
ror
dec
fmul
inc
shl
les
jo
imul
dec
pop
stos
(bad)
in
test
mov
mov
xchg
jo
loopne
lock
loope
jb
sub
or
dec
sbb
inc
cmp
add
sbb
imul
mov
cmp
jmp
mov
(bad)
push
xor
mov
in
mov
fild
cld
pop
add
mov
scas
mov
pop
cmps
jg
mov
push
mov
test
cmps
sub
mov
hlt
add
pop
rcl
jns
lods
ret
bound
fisttp
jp
ficom
mov
sti
push
icebp
hlt
std
and
lds
loopne
cmps
aam
movs
pop
(bad)
(bad)
dec
xor
pinsrw
mov
rol
pop
sub
or
std
and
inc
js
adc
mov
inc
xchg
cmp
call
shr
cmp
cli
test
pop
rcr
lock
xchg
jle
(bad)
mov
push
and
sti
adc
cmp
mov
lods
mov
jge
adc
adc
inc
(bad)
sahf
push
fld
push
dec
mov
movs
jge
sbb
cmps
jns
(bad)
pop
inc
sar
pop
cmp
ss
les
les
cmp
ja
sahf
ret
mov
fstp
nop
inc
sbb
and
inc
jp
leave
dec
popf
add
mov
xor
movs
std
cmp
pusha
mov
jle
adc
xchg
xchg
inc
xor
arpl
xor
add
adc
xor
mov
(bad)
mov
cmps
mov
ins
ret
jl
sub
mov
mov
inc
add
adc
popa
test
std
out
mov
add
repnz
jae
pop
xlat
sub
cs
vphaddudq
xor
mov
out
jg
xor
xchg
cmps
(bad)
mov
pop
fs
pushf
jecxz
aam
int3
and
fistp
push
inc
pop
sar
xchg
ss
shl
scas
inc
jbe
es
shl
push
fsub
pop
daa
ja
loopne
mov
out
loope
loop
imul
iret
mov
outs
inc
scas
push
ins
and
stos
movs
pop
nop
iret
outs
pushf
dec
sub
and
jmp
leave
sar
xchg
arpl
pop
dec
out
pop
add
rcl
jb
mov
sub
mov
or
movs
cmp
aam
mov
out
add
mov
icebp
scas
xchg
inc
mov
jmp
das
sbb
pop
sti
bound
or
and
push
mov
or
push
mov
jge
stos
jecxz
sti
gs
(bad)
jg
cmp
mov
popa
xor
test
scas
and
lods
lahf
pop
data16
loopne
sbb
or
ficom
pusha
inc
out
(bad)
mov
scas
sbb
mov
sbb
adc
push
sub
mov
xor
mov
cli
shl
and
lds
lods
or
inc
and
sbb
jle
mov
cli
fsub
aad
xchg
jmp
mov
jmp
jg
ficomp
dec
xchg
push
push
ja
dec
sub
retf
ds
cmps
pop
dec
ds
loope
push
sub
retf
jb
ja
fisubr
sub
cmp
pop
out
sub
sti
jle
outs
in
test
mov
mov
lods
enter
mov
ds
repnz
inc
std
inc
push
xor
mov
iret
push
mov
cmps
push
fwait
mov
sahf
icebp
call
jmp
mov
adc
icebp
test
fsub
cmc
test
mov
pop
test
sbb
jb
mov
pop
sbb
movs
icebp
(bad)
call
inc
fsubr
test
outs
je
pop
pop
into
pop
jmp
push
add
mov
mov
push
jnp
fimul
push
inc
adc
mov
push
jns
and
mov
mov
xchg
mov
jg
jle
(bad)
sahf
push
ret
iret
dec
push
arpl
dec
int
hlt
fldcw
and
pusha
cwde
sbb
inc
jg
aas
mov
cmp
aam
jle
jae
pop
jae
sbb
rcr
dec
dec
xchg
sub
cld
fwait
inc
mov
sbb
sub
xchg
rcl
dec
cmp
lock
cmp
add
popa
int3
hlt
loop
scas
(bad)
test
add
inc
(bad)
outs
jmp
jo
lods
lds
adc
or
sub
dec
in
loope
push
pop
mov
dec
adc
or
mov
and
push
adc
(bad)
rcl
outs
push
add
adc
xor
xchg
sbb
pusha
mov
das
pop
jns
movs
pop
loop
std
lods
push
add
and
ret
sub
rcl
dec
fwait
dec
loopne
jne
ins
scas
jno
push
movs
jbe
ins
add
xchg
(bad)
mov
pusha
(bad)
jb
dec
pop
mul
add
jp
mov
imul
in
daa
jno
cld
adc
mov
jbe
xor
daa
sub
push
clc
push
jl
leave
xor
xor
xchg
pushf
adc
mov
ja
bound
dec
mov
sbb
sbb
cmps
inc
and
cmp
sub
mov
jns
lds
in
push
lods
imul
cmp
push
sti
leave
sub
loopne
iret
xchg
fchs
sahf
xchg
jg
aam
sub
test
jno
adc
ins
lods
leave
in
mov
cli
pushf
leave
out
call
mov
and
dec
mov
rcr
adc
jg
xor
cmc
inc
xchg
and
rol
adc
fisub
push
xchg
lea
push
push
inc
(bad)
dec
(bad)
leave
jecxz
mov
or
shr
or
cwde
adc
jo
adc
xchg
ins
in
les
outs
lods
mov
jne
dec
mov
mov
adc
xchg
xor
outs
push
push
inc
inc
movs
mov
adc
jmp
jnp
adc
aad
shl
jae
push
enter
scas
ret
aam
push
sub
xor
xchg
into
adc
fwait
add
out
(bad)
dec
jo
sub
mov
xor
test
call
jae
cmp
xor
jle
and
inc
inc
or
xlat
cmp
cli
push
loope
jnp
neg
pop
dec
sub
stos
outs
inc
mov
xor
and
pop
cmps
push
lds
fwait
movs
sub
ja
mov
pop
dec
jo
add
dec
cmp
sub
loopne
(bad)
(bad)
adc
mov
(bad)
jge
dec
jns
rcr
into
ret
aas
movs
xor
ins
scas
icebp
movs
js
lods
lods
pop
cmps
inc
mov
hlt
adc
mov
and
loop
pop
out
movs
jb
dec
(bad)
or
push
aam
cld
sar
mov
in
fwait
aas
retf
call
xchg
sub
test
mov
mov
addr16
gs
imul
add
iret
sbb
sbb
and
mov
jb
cmp
lds
and
push
fwait
cmp
ja
ja
in
pusha
or
out
dec
out
cmps
jp
out
sbb
call
mov
adc
ins
jbe
fwait
mov
in
inc
adc
int3
fidivr
xor
add
test
iret
stos
dec
sbb
ret
adc
dec
test
xor
or
pop
cmp
cwde
arpl
scas
js
xchg
cmps
enter
jg
aam
mov
data16
ret
xchg
sub
popa
outs
cmp
dec
inc
(bad)
fst
or
pushf
loopne
ds
clc
je
pop
ror
jbe
pop
ds
fdivr
frstor
mov
jo
(bad)
imul
jbe
push
nop
mov
xchg
es
pop
jb
push
repnz
cld
stc
inc
dec
inc
imul
(bad)
in
or
popf
fucomip
mov
adc
ss
inc
test
xor
push
mov
adc
mov
loope
sbb
push
pop
or
je
mov
xor
fmul
xor
add
jmp
shl
call
and
popf
sub
data16
and
sub
xchg
push
jmp
nop
mov
(bad)
call
stos
sub
pusha
fldenv
and
pop
in
lods
jo
mov
jnp
lods
aam
and
xor
xor
sbb
fs
pop
sti
in
dec
xchg
and
rcr
dec
ja
add
iret
or
xlat
push
(bad)
xchg
js
rol
add
test
cmp
push
adc
sar
jno
(bad)
lock
cmc
rcr
cmp
xchg
shr
stos
pop
sbb
push
outs
(bad)
cli
push
sub
push
inc
data16
iret
ins
inc
sbb
mov
adc
imul
hlt
fcomp
sbb
push
mov
jno
call
pop
inc
aaa
ins
imul
(bad)
rol
ret
xlat
enter
movs
pop
push
lea
sbb
pop
push
int3
push
or
push
jmp
outs
loopne
cld
daa
sub
into
cmp
push
jle
test
movs
xchg
mov
inc
or
mov
in
cmp
loop
push
jno
iret
movs
int3
loope
in
add
xchg
fadd
ss
push
jo
in
xchg
es
push
xlat
mov
push
jmp
repnz
or
fimul
adc
popf
mov
adc
test
xchg
jne
inc
push
das
daa
or
es
fidiv
xor
rcr
outs
jmp
cmp
cmc
mov
dec
test
adc
xchg
daa
add
mov
and
jae
aaa
adc
xor
adc
leave
pop
loopne
rcr
cli
dec
xor
mov
push
pop
inc
mov
mov
dec
int
pop
int3
xchg
mov
mov
sbb
jbe
push
(bad)
(bad)
in
fld
jae
es
into
sbb
mov
call
stc
jbe
mov
xchg
in
dec
clc
xchg
mov
sbb
mov
aas
xor
pop
mov
mov
dec
sub
jae
dec
in
pop
xchg
and
mov
repz
rcr
jecxz
sbb
repnz
fsubr
sub
push
mov
aaa
int3
xchg
push
sub
scas
pushf
mov
pop
cmps
jmp
rcl
or
jae
xor
ret
pushf
mov
leave
jno
adc
pop
sbb
cmp
out
inc
lock
mov
mov
sub
out
cs
xchg
or
pop
sub
mov
mov
xchg
add
push
xchg
adc
pop
cmps
xchg
pop
dec
pop
sbb
jno
cli
push
(bad)
mov
mov
inc
mov
cmp
lods
into
push
cmp
inc
jno
popa
dec
push
(bad)
sbb
add
not
push
icebp
cli
mov
mov
add
adc
fcom
mov
(bad)
mov
push
bound
jg
(bad)
icebp
mov
push
add
push
cli
outs
and
ins
sub
sbb
stos
mov
sti
mov
sbb
test
inc
cmp
daa
pop
retf
pop
test
mov
(bad)
in
mov
add
(bad)
dec
ret
inc
lds
add
push
imul
nop
mov
retf
out
push
xchg
xchg
pop
mov
sub
shl
es
inc
dec
push
aad
or
mov
in
push
mov
push
imul
cmovs
mov
fcom
and
xor
test
mov
pop
add
ret
scas
jbe
xchg
mov
pop
inc
les
pop
mov
jns
lahf
fsub
pop
int3
pop
stos
lea
rcl
fnsave
jg
sbb
call
mov
xchg
movs
int3
data16
mov
scas
cmp
aas
int
retf
sub
push
xor
or
addr16
xchg
xor
jg
add
mov
mov
pop
(bad)
push
aam
ins
xor
fs
xchg
add
ud0
jo
inc
inc
hlt
fsub
sar
clc
mov
and
inc
xchg
repnz
sbb
cmps
pusha
push
call
js
xchg
(bad)
or
imul
pusha
sar
mov
add
in
fwait
sar
pushf
fst
dec
cmp
jmp
stos
and
add
dec
test
lahf
mov
cmc
mov
ins
push
cmps
cld
das
pop
mov
int3
js
in
imul
inc
push
jmp
add
jecxz
mov
sbb
sub
mov
cmps
enter
xor
shl
in
repnz
lock
sbb
dec
(bad)
fild
ins
test
jmp
pop
mov
into
bound
(bad)
lds
test
(bad)
stos
mov
cs
imul
pop
sti
jp
aaa
ret
das
cmc
lock
call
movs
adc
cmps
pusha
int
test
dec
bound
adc
iret
mov
es
mov
test
das
pop
jg
scas
jle
mov
mov
sub
dec
sti
test
mov
ret
pmaxsw
xor
sub
outs
leave
sti
mov
jns
sbb
sub
mov
out
fisttp
fcmovb
ficomp
div
stos
je
icebp
stos
inc
mov
fstp
dec
enter
push
icebp
aaa
jge
icebp
cmp
mov
dec
js
push
jmp
and
jno
(bad)
or
or
retf
sbb
push
mov
or
push
xor
adc
or
inc
clc
xchg
pop
and
cmovbe
xchg
loop
mov
cs
int3
cwde
push
fld
jl
popf
loope
int3
ins
mov
daa
inc
mov
or
inc
bound
int
cdq
dec
cmp
ins
adc
mov
in
adc
xor
sbb
je
mov
jne
loop
push
xchg
lds
pop
or
add
hlt
(bad)
rcr
inc
test
aaa
loopne
std
shr
add
(bad)
icebp
dec
inc
jge
in
push
int3
mov
sbb
jl
mov
stos
jmp
je
int
lahf
outs
xor
cmp
shr
call
fild
xchg
call
loopne
and
lock
cdq
sbb
movs
push
(bad)
sub
pop
add
out
or
sbb
add
add
cmc
xchg
out
xchg
jbe
ret
outs
pusha
pop
daa
ret
lods
fcom
pop
inc
lods
mov
jp
and
push
mov
test
pushf
mov
lock
or
xor
pop
pop
sbb
mov
add
lds
add
mov
adc
cli
jns
call
pop
outs
or
jbe
inc
and
call
xchg
dec
cmp
popf
stos
mov
push
out
fsubp
xchg
fsub
ins
mov
addr16
and
ficomp
out
cld
movs
jb
sub
in
pandn
stos
sti
inc
mov
imul
fdiv
retf
jle
push
sub
mov
clc
adc
jge
lods
cmp
repz
call
xor
adc
cld
push
xchg
fwait
rol
aam
clc
lock
inc
inc
inc
jb
in
inc
push
fdivr
adc
and
inc
rol
sbb
and
mov
mov
jmp
jne
pop
xor
wrmsr
pop
pop
xchg
inc
dec
stos
pop
add
xchg
and
call
xlat
push
call
sahf
add
push
aas
sub
test
push
pop
(bad)
loopne
pop
call
and
jp
mov
sbb
addr16
mov
cmp
test
cld
cmp
clc
test
push
movs
(bad)
movs
or
mov
mov
pop
jle
mov
and
imul
add
sahf
xor
in
nop
jnp
xor
in
jo
jmp
jg
push
sbb
push
pop
push
iret
cmp
into
cmp
inc
mov
fcom
cmp
sbb
dec
or
aas
scas
cmc
jb
retf
lods
ds
cli
cld
sbb
mov
mov
mov
or
mov
arpl
mov
out
pop
mov
add
cmp
fnstsw
mov
loopne
inc
add
pop
ds
adc
fsubp
(bad)
push
or
adc
dec
and
xchg
std
xor
xor
(bad)
jb
mov
inc
or
dec
lods
and
out
mov
stos
ror
xacquire
clc
daa
out
fld
sub
jnp
mov
push
xor
imul
cmp
test
pop
jo
dec
or
daa
xchg
mov
jle
inc
or
inc
and
pop
leave
inc
cmp
hlt
or
fdiv
pop
jae
jle
scas
popf
mov
outs
push
sbb
or
add
adc
cmp
cwde
add
into
or
dec
mov
add
sti
aas
cdq
and
cmp
push
in
push
(bad)
and
sar
mov
cmp
mov
jle
push
sti
push
jle
clc
addr16
mov
mov
jbe
loopne
dec
xor
movs
sbb
inc
jp
jb
leave
mov
mov
push
mov
ins
cmp
inc
fiadd
bound
aad
mov
jmp
sub
unpckhps
fldz
outs
cs
pop
add
jg
sub
test
push
nop
pop
mov
or
test
scas
loop
mov
push
mov
sub
(bad)
imul
scas
arpl
dec
jge
jge
dec
push
rcl
ins
xchg
int
ins
add
dec
push
and
fiadd
add
pop
and
and
push
cmp
push
inc
lea
inc
movs
lock
rcl
jb
(bad)
aaa
pushw
loope
push
adc
and
or
cmp
fist
ins
aam
gs
test
sub
out
push
push
lds
mov
mov
xchg
jecxz
(bad)
or
inc
cld
std
in
cli
bound
push
xor
fsqrt
frstor
inc
or
pop
ret
loope
fstp
jge
loop
sti
sub
xor
cdq
and
dec
retf
rol
push
cmps
adc
inc
cmc
push
adc
mov
add
adc
cli
cmps
std
add
sahf
inc
mov
fisttp
xor
inc
mov
in
rcl
imul
out
mov
jae
lods
mov
stc
out
fwait
cmp
fxam
sbb
dec
lea
xchg
popa
repz
(bad)
jg
fdiv
and
ins
in
fimul
(bad)
fs
mov
ins
mov
jo
scas
jo
repnz
leave
outs
sub
cmp
cli
sar
and
and
nop
cmp
out
sahf
(bad)
imul
push
sub
test
fidivr
outs
rep
sub
sub
jno
mov
push
add
push
loopne
dec
dec
mov
mov
loope
push
xchg
cmps
inc
mov
mov
loopne
mov
(bad)
sbb
shl
or
shl
mov
cmp
push
stc
jns
jg
cmp
and
push
popa
jns
retf
pop
(bad)
xchg
(bad)
mov
test
pop
sub
int3
dec
dec
and
add
aas
xchg
mov
ins
or
mov
add
xchg
fsubrp
in
dec
ja
xchg
xor
xor
and
cmps
iret
xor
xor
inc
sbb
cmp
xor
(bad)
pop
popf
jg
inc
jge
(bad)
fidiv
mov
gs
call
dec
test
out
into
mov
dec
cwde
add
mov
push
outs
mov
cs
loopne
daa
enter
aaa
jge
test
cmps
dec
pusha
pop
inc
mov
retf
inc
inc
cmp
shl
pop
push
call
(bad)
loopne
enter
pop
pop
sbb
in
mov
(bad)
adc
xchg
push
dec
cld
cmp
mov
repz
and
sub
pop
shl
nop
repz
shr
addr16
mul
shl
lods
jno
push
push
pop
jbe
icebp
and
ins
push
icebp
or
in
dec
movs
pop
or
xchg
mov
ja
stos
dec
enter
xor
jge
fisubr
push
push
(bad)
or
sub
int3
adc
repnz
ret
nop
enter
sahf
enter
enter
jle
ret
xchg
popf
xchg
jecxz
into
pop
xchg
mov
inc
add
je
sti
inc
(bad)
out
outs
daa
sbb
jbe
retf
xchg
sbb
pop
sub
fist
outs
dec
mov
or
fnsave
scas
xor
adc
jmp
scas
jle
mov
lds
push
mov
mov
and
mov
or
nop
cwde
lds
outs
daa
inc
outs
into
(bad)
cmps
push
in
sbb
into
inc
rcl
dec
or
js
jmp
xchg
not
lock
add
jmp
stc
(bad)
ins
xor
les
cld
lds
pop
push
ja
sar
push
movs
dec
sub
inc
fist
jl
enter
pop
cmp
jbe
fwait
jmp
jne
inc
adc
mov
pop
cmpxchg
mov
xor
aaa
scas
add
add
xchg
stc
mov
arpl
fild
ins
jecxz
sbb
aad
add
(bad)
dec
push
ins
sti
ja
add
push
mov
cdq
jmp
outs
popa
enter
mov
call
push
or
dec
adc
aas
push
or
xchg
sub
sbb
rcr
mov
jbe
add
jl
out
mov
ror
cmp
add
mov
mov
dec
mov
stos
sub
jns
sbb
inc
cld
mul
je
ss
sbb
retf
mov
xchg
sub
imul
xchg
iret
mov
and
add
push
leave
jmp
mov
jo
cmps
fdiv
xchg
stos
inc
mov
aam
jmp
ss
test
cmp
sub
in
jnp
add
es
or
sbb
ins
sbb
(bad)
lods
(bad)
mov
push
push
lock
dec
mov
inc
hlt
call
test
xchg
dec
adc
test
add
cwde
fcomp
pop
mov
sbb
call
cmp
outs
or
push
mov
cmp
jge
add
fimul
mov
inc
lods
(bad)
sbb
dec
jl
mov
jl
mov
pop
and
stos
mov
mov
pop
gs
xchg
pop
pop
in
mov
pop
pop
jne
(bad)
fsubr
lahf
xchg
adc
cld
icebp
xor
jbe
outs
mov
ds
aas
jo
sti
inc
push
mov
gs
sbb
call
mov
test
sbb
mov
add
push
push
fdivr
cld
xchg
push
data16
mov
std
pop
mov
cdq
test
cmp
adc
icebp
test
xchg
cmp
cwde
ror
cmp
or
mov
adc
pop
out
movs
fisttp
inc
(bad)
lods
ret
xor
cdq
imul
pop
inc
xchg
test
or
inc
pusha
ss
or
imul
dec
push
or
test
cwde
cs
ja
jae
inc
fisub
outs
inc
dec
xchg
mov
mov
mov
pop
jp
mov
mov
adc
xor
cmps
xor
loopne
scas
jo
fiadd
lods
dec
sub
xchg
pop
mov
add
push
es
out
mov
in
cs
dec
jns
cmp
cli
and
loope
jmp
lods
(bad)
sub
and
mov
ret
fwait
mov
and
push
and
jnp
add
sbb
retf
xor
mov
add
mov
push
pop
ins
xchg
stc
dec
(bad)
ror
sub
hlt
in
xchg
(bad)
scas
dec
fdiv
jb
jecxz
mov
mov
test
pop
push
stos
loopne
lock
pushf
add
and
mov
or
icebp
mov
adc
addr16
fld
inc
xor
or
ror
xor
push
imul
lods
dec
stos
push
xchg
cmp
call
gs
int3
ss
sti
mov
loope
xor
movs
sub
xor
add
mov
test
data16
stos
push
fisttp
out
jo
(bad)
mov
and
dec
pusha
mov
inc
mov
adc
fisubr
clc
(bad)
cwde
fmul
jle
into
dec
pop
or
mov
mov
xchg
call
into
hlt
mov
xchg
sbb
xchg
xor
ror
xchg
xor
aas
rol
scas
dec
jp
outs
cmp
call
add
mov
ds
adc
push
nop
sar
cwde
and
xor
adc
mov
pop
ja
mov
jo
enter
xor
stos
xor
loop
xor
push
mov
ins
stos
pop
arpl
repz
repnz
adc
adc
retf
iret
sbb
add
idiv
ins
sahf
cli
out
(bad)
stos
outs
jbe
inc
or
or
cmp
mov
lock
fild
adc
arpl
imul
sub
std
inc
aaa
outs
add
call
mov
xor
adc
stos
sbb
ret
jmp
cdq
jbe
mov
mov
stos
ret
fidiv
(bad)
dec
(bad)
leave
and
fwait
xor
sbb
fst
pop
ja
lods
mov
jno
sar
stc
adc
xchg
sub
jmp
ins
les
mul
mov
cli
retf
iret
aas
pop
or
es
sbb
push
pop
xchg
cwde
pop
es
inc
push
int
cli
pop
mov
inc
test
cmp
retf
std
sbb
fidivr
ins
std
dec
adc
sub
(bad)
and
in
fidiv
pop
int3
mov
call
jg
mov
stc
cmp
stos
hlt
jmp
shl
ja
sub
scas
mov
push
xor
fdivr
jns
pop
inc
add
stc
movs
mov
adc
outs
cmp
or
ret
in
(bad)
sar
cs
out
arpl
in
mov
sbb
xor
or
dec
(bad)
fdivr
jns
(bad)
cmp
pop
mov
int3
in
out
int
mov
dec
shl
imul
pop
or
cs
mov
(bad)
fdivp
mov
pop
scas
push
aas
imul
pop
clc
xchg
sub
jmp
xor
sbb
xlat
int
mov
cmp
loop
cmp
(bad)
stos
sti
out
jp
or
out
mov
push
sahf
lods
pop
div
or
in
dec
add
mov
inc
cmp
mov
add
push
add
mov
push
pop
cmp
(bad)
sub
jne
sbb
addr16
in
pop
push
(bad)
mov
jb
out
mov
pop
adc
out
scas
fldenv
mov
dec
sbb
cmc
mov
(bad)
div
mov
(bad)
(bad)
pop
adc
daa
(bad)
ins
cdq
inc
fucomip
push
mov
xor
push
jae
inc
mov
dec
push
hlt
fild
inc
arpl
outs
inc
mov
xchg
gs
inc
int3
sub
mov
aaa
imul
xor
outs
or
loopne
mov
cmps
fs
cmp
daa
ret
dec
mov
aas
js
push
lds
xchg
mov
sub
sub
sar
scas
lahf
aam
mov
jno
ret
movs
call
mov
outs
jae
cmps
pop
in
inc
mov
aas
xchg
nop
aaa
xchg
lods
stc
and
xchg
push
mov
cwde
test
and
pop
shl
jb
xor
add
inc
pop
xchg
scas
hlt
dec
(bad)
shr
lods
xchg
jnp
lahf
adc
mov
dec
xlat
(bad)
push
ins
sti
sahf
fistp
inc
ins
cmp
dec
and
mov
shl
cmp
jb
and
push
pop
lahf
adc
sub
mov
mov
xchg
adc
mov
adc
nop
cmps
mov
pop
adc
jp
(bad)
sar
xor
jmp
inc
rep
stos
das
bound
push
test
leave
fdiv
stc
jg
jbe
addr16
sub
inc
ins
pop
inc
and
adc
aas
sbb
xchg
dec
bound
stos
xor
std
sti
cwde
pop
retf
imul
mov
cld
push
(bad)
cmp
das
mov
pop
sbb
int3
(bad)
and
xchg
fiadd
jl
jb
scas
aas
cmp
aam
xlat
push
iret
call
sub
(bad)
dec
es
mov
ret
sbb
push
dec
mov
pop
clc
pop
sbb
and
loopne
mov
aaa
pop
push
or
sbb
dec
call
dec
mov
lock
int
shr
dec
loop
sbb
fcomp
int
fyl2x
pop
mov
(bad)
outs
xchg
and
mov
pop
sub
dec
mov
call
xchg
pop
jbe
mov
inc
icebp
sar
cmps
lahf
je
pop
out
aad
idiv
dec
push
inc
dec
push
xchg
mov
into
pop
aaa
mov
call
inc
mov
test
fisttp
cdq
mov
sub
and
test
retf
mov
daa
xor
cmps
mov
repnz
out
repnz
aad
retf
sbb
inc
jl
and
or
enter
push
arpl
dec
cmp
push
sub
mov
push
jle
scas
xor
xchg
jmp
dec
or
adc
sub
shl
add
push
cmps
dec
push
test
lahf
mov
repz
mov
push
lock
cld
lods
std
cmps
in
pop
lods
rcr
mov
adc
ror
out
pushf
and
retf
rcl
add
and
cmp
fwait
cmp
inc
cmp
ret
mov
xor
lods
push
jmp
mov
enter
mov
xchg
cs
iret
push
mov
stc
cmps
(bad)
(bad)
in
fcomp
sbb
nop
lods
jns
lods
mov
xor
add
ret
sub
enter
sub
mov
pop
pusha
loope
xor
sbb
fwait
pushf
jb
mov
leave
ins
imul
popf
stos
das
cwde
fwait
aas
imul
movs
adc
cmp
jb
fwait
lods
lea
xor
xchg
cs
mov
and
rcl
int3
stc
imul
loope
es
pop
or
shr
and
scas
cmp
adc
cld
inc
jne
retf
xor
nop
jge
xchg
sar
add
fisub
shl
pop
icebp
adc
fcom
inc
cli
in
sub
js
and
leave
xchg
xor
rcl
cs
mov
pop
inc
pop
adc
pop
push
pop
in
xchg
pop
(bad)
mov
cs
in
inc
add
adc
sub
add
mov
stc
add
retf
adc
add
cmp
xor
(bad)
cmp
les
inc
pop
call
push
aad
lods
cmp
and
call
je
mov
fwait
dec
fistp
jb
jecxz
loop
dec
fcom
lods
fisub
pop
inc
xchg
(bad)
bound
dec
retf
xchg
cwde
(bad)
ds
ins
jne
mov
adc
test
push
pop
cs
rcr
or
add
loop
pop
rcr
movs
inc
outs
ja
idiv
pop
mov
pop
lea
sti
cmp
and
mov
clc
in
cmp
out
inc
iret
cmp
xchg
add
adc
sub
test
fst
inc
fwait
sar
test
repnz
xchg
jb
mov
movs
mov
pop
stos
fild
scas
dec
int
push
pop
pop
push
jmp
leave
das
test
daa
push
adc
cdq
push
sar
repnz
test
hlt
jb
(bad)
test
or
mov
xchg
call
cmps
push
mov
jns
or
jecxz
cli
in
aaa
dec
or
rcl
imul
inc
sbb
fidivr
push
call
bound
ja
out
sub
dec
enter
retf
loop
adc
or
int3
(bad)
mov
add
in
popf
icebp
jno
ret
outs
rcr
or
xor
inc
lock
fimul
scas
(bad)
jnp
add
(bad)
dec
mov
push
test
add
or
mov
test
ja
rcr
mov
into
mov
adc
(bad)
(bad)
jno
div
jge
or
mov
jg
mov
mov
or
push
sub
ins
iret
lods
mov
adc
cmp
outs
adc
call
inc
sar
ss
push
cmp
xor
mov
ss
mov
gs
mov
mov
neg
mov
gs
push
xor
ror
xchg
ds
pop
or
retf
sub
mov
outs
xchg
scas
rcr
outs
aaa
ja
es
(bad)
push
cdq
or
and
scas
repnz
test
ror
xchg
or
cmove
js
jle
xor
add
mov
ret
dec
movs
retf
outs
repnz
out
cmp
add
inc
sub
push
pop
sub
or
push
add
and
fbstp
repnz
ins
adc
add
mov
cmp
movntq
mov
sbb
mov
dec
hlt
les
(bad)
sti
pop
and
cli
das
mov
xlat
shr
inc
and
outs
sbb
inc
add
dec
push
xor
and
aaa
mov
push
or
jmp
sahf
nop
sbb
adc
test
cdq
ja
xchg
inc
or
jne
xchg
fist
es
jmp
dec
es
jb
pop
dec
lods
xchg
adc
and
das
pop
jg
data16
aad
(bad)
push
ja
sub
push
fst
stos
push
jb
adc
sti
adc
mov
or
es
sbb
mov
loop
enter
sub
sub
mov
aad
das
mov
jge
fisttp
or
inc
adc
loopne
xchg
jg
and
cmc
xor
call
dec
jge
lock
push
adc
jns
and
jle
movs
popf
pop
pop
jle
push
sti
sbb
sub
int
loop
call
adc
imul
inc
mov
mov
mov
cmp
arpl
pop
mov
push
retf
adc
nop
test
inc
loopne
add
adc
pusha
push
jle
test
xchg
or
std
(bad)
cmc
inc
cs
in
mov
xor
cmp
pop
and
pop
jecxz
mov
lea
sti
sbb
and
xchg
arpl
fwait
int3
es
scas
inc
pop
imul
repnz
lahf
ins
aas
cmp
push
int
mov
mov
or
and
sti
addr16
jmp
inc
and
dec
sbb
cs
jo
mov
movs
sti
dec
jns
push
adc
pop
sbb
inc
leave
xor
xchg
ja
dec
dec
dec
(bad)
xchg
cmps
jb
out
and
aam
call
add
ret
cld
imul
adc
fstp
or
adc
ins
sub
lock
cmpxchg
daa
or
mov
and
and
add
mov
ins
into
cmp
pop
inc
cmp
mov
daa
cmp
and
dec
fbstp
imul
pop
sbb
jns
fcomip
xlat
xchg
dec
adc
sbb
inc
xor
not
jo
rol
fild
inc
mov
jmp
cmp
in
mov
repz
lock
ins
dec
dec
xlat
push
test
mov
add
jbe
jmp
stos
retf
push
in
sbb
jp
xchg
add
jecxz
outs
jno
pop
and
ret
pop
xor
loopne
sub
arpl
call
int3
xchg
adc
push
xlat
in
mov
inc
inc
xchg
jbe
ss
out
mov
out
push
add
mov
mov
mov
sub
fldenv
jge
mov
jns
pusha
push
pop
xchg
gs
icebp
jo
icebp
inc
pop
cdq
and
fnsave
int3
push
ror
and
sbb
int
sbb
jle
push
std
scas
and
mov
call
inc
jp
push
sbb
dec
pusha
inc
mov
mov
cmc
fisub
dec
ss
jns
adc
xor
or
xchg
sub
mov
and
push
vpshaw
push
icebp
add
add
cmp
test
cmc
sbb
jmp
pop
cmp
mov
not
aam
xor
mov
push
or
add
dec
push
pop
fstp
(bad)
adc
and
ja
jmp
ss
repz
and
push
out
rol
push
xlat
and
test
fisttp
clc
lods
cmp
out
movs
stos
mov
jne
cmp
ret
out
sti
fucomp
fist
mov
xchg
inc
mov
gs
imul
and
lock
cmp
loop
dec
(bad)
and
je
add
cmp
jp
popf
cmps
add
mov
push
push
das
shl
aam
or
adc
push
and
add
lods
out
adc
in
mov
or
fmul
popf
fcmovu
jp
xchg
test
cdq
aaa
int3
cld
xor
mov
sbb
nop
mov
push
cmps
jmp
fwait
test
imul
ins
scas
adc
pop
cmps
ds
inc
mov
lahf
mov
cmc
inc
loope
add
clts
pop
cmps
repz
inc
inc
mov
push
cmp
push
icebp
dec
test
cli
mov
jge
pop
pop
pop
adc
or
mov
adc
inc
into
cmp
mov
or
jl
movs
test
(bad)
dec
jle
sub
leave
push
movs
ret
inc
cld
or
mov
ds
ds
jbe
jmp
sbb
clc
and
ins
aaa
or
jle
out
(bad)
sti
pop
test
jnp
loope
(bad)
cli
dec
xor
adc
and
movs
push
mov
mov
enter
mul
mov
imul
repz
pop
pop
jmp
jb
xor
cmp
sbb
and
fs
push
out
sbb
jb
or
test
inc
adc
ret
or
mov
add
aaa
fidivr
mov
int3
(bad)
scas
shr
mov
fdivr
fldcw
rol
mov
mov
(bad)
sub
jl
cmp
pop
xchg
cmp
jge
es
call
scas
mov
sub
test
test
or
int3
pushf
retf
stos
retf
jmp
xor
or
and
jl
daa
mov
repz
xchg
push
add
out
jb
mov
mov
push
mov
(bad)
and
mov
mov
cmp
sub
jns
and
mov
stc
jnp
xchg
cmps
popa
pusha
sbb
xchg
sbb
xor
sbb
push
imul
and
fisttp
int3
pop
(bad)
mov
jns
push
mov
mov
adc
push
fdiv
or
pop
cmp
jo
pop
cmps
mov
ret
retf
pop
in
push
dec
inc
xor
mov
shl
jg
sub
mov
or
loop
pop
repz
pop
call
inc
pop
pop
mov
clc
sti
sub
jne
jb
out
xor
push
(bad)
retf
adc
xor
mov
cmp
hlt
or
xchg
mov
cwde
int3
leave
scas
lds
hlt
mov
repnz
xchg
dec
mov
jb
test
jmp
pop
into
aaa
xchg
xchg
and
push
loopne
push
(bad)
test
push
addr16
xchg
(bad)
cs
xor
xor
or
pop
mov
fsub
mov
xor
aam
sbb
in
mov
adc
mov
or
sbb
idiv
jns
outs
xor
pushf
loope
inc
scas
add
mov
sbb
out
mov
xor
jl
popf
outs
pop
fcomi
xor
shl
adc
cmp
bound
sbb
xlat
push
(bad)
sub
dec
adc
add
push
cs
add
out
jmp
cmps
lahf
jp
retf
cmp
dec
inc
movs
jne
int3
cli
mov
(bad)
clc
and
ret
pop
(bad)
in
and
cmp
arpl
test
out
or
sbb
in
ret
inc
push
mov
movs
jle
mov
mov
fimul
mov
aas
add
lods
test
push
je
aas
mov
iret
cmp
sahf
adc
stos
(bad)
add
pop
jo
and
push
cmps
mov
(bad)
ds
sbb
stos
cmp
test
add
push
sub
out
sub
stos
ds
bnd
pushf
push
call
mov
sbb
cmp
jns
clc
sub
sbb
jno
int
fsubr
xchg
lods
xchg
imul
popf
mov
jg
mov
lock
mov
push
mov
loope
mov
cmps
(bad)
inc
into
sbb
int3
or
cmp
sub
dec
imul
sar
mov
icebp
stos
test
cmp
cmc
(bad)
in
addr16
cwde
jb
out
inc
(bad)
xchg
imul
mov
push
jo
fimul
mov
call
es
test
aaa
ss
rcl
enter
sub
mov
dec
pop
adc
mov
inc
mov
mov
stos
mov
aam
test
popf
push
popa
inc
rol
dec
iret
pop
inc
fldenv
sub
mov
mov
xor
adc
pop
imul
lods
arpl
sbb
aad
sbb
mov
into
xchg
loop
je
adc
dec
adc
scas
(bad)
jns
fcmovb
adc
fistp
fistp
mov
add
hlt
add
sbb
call
(bad)
clc
push
das
add
mov
in
pop
push
xchg
js
fcom
fcom
dec
xor
adc
xchg
pop
mov
cld
retf
dec
xor
pop
mov
adc
xchg
fsubr
pop
xchg
pop
call
inc
lds
leave
int
int
add
cmp
outs
imul
sub
mov
xor
loopne
fsubr
sub
je
ja
mov
imul
add
mov
xchg
in
cdq
inc
rcr
mov
mov
pop
push
in
mov
fistp
int3
mov
je
idiv
cmp
(bad)
fcmove
mov
pop
push
movs
jmp
xlat
out
idiv
jge
enter
push
(bad)
mov
lock
cmps
adc
pop
mov
push
cmp
xchg
retf
push
repnz
sar
ds
dec
daa
loop
push
jno
je
dec
dec
jo
mov
test
repz
xor
(bad)
std
mov
pop
mov
lea
lds
add
jo
inc
movs
out
or
fsub
retf
sti
mov
push
lods
lock
jle
cmp
mov
lods
mov
hlt
and
outs
push
inc
mov
adc
adc
cli
lahf
xor
bound
stos
or
out
adc
cmp
add
sub
xchg
outs
rol
ins
js
xchg
mov
sbb
ret
xor
mov
sub
push
ror
lea
or
pop
pop
ss
imul
sub
xor
cdq
mov
dec
add
dec
cmp
sbb
js
sbb
clc
fbld
push
pop
xchg
add
pushf
xchg
test
int
into
push
out
pop
out
and
push
sti
ins
neg
stc
int3
pusha
mov
mov
dec
enter
jge
xor
je
xor
push
xor
mov
fs
fcom
(bad)
cmps
lea
aas
scas
es
cdq
mov
mov
mov
pop
push
hlt
push
mov
(bad)
cmp
pusha
xor
lahf
sub
iret
(bad)
icebp
inc
idiv
js
call
jmp
imul
push
push
inc
ss
cmp
xchg
jns
stos
jmp
sbb
data16
jae
daa
std
ins
stc
push
jle
mov
in
stos
call
xor
inc
js
movs
dec
pusha
int
jg
out
mov
(bad)
mov
jl
jg
nop
mov
ja
push
lock
mov
jmp
dec
mov
sbb
pop
jl
popa
mov
int
ins
lods
aas
fadd
pop
pushf
jge
jnp
bound
or
out
mov
ret
xlat
bnd
hlt
aam
jb
jge
and
dec
imul
push
or
arpl
xchg
push
add
jnp
out
neg
test
scas
mov
and
jae
sub
pop
sbb
mov
pop
fld
in
xor
sub
(bad)
mov
inc
xchg
loop
dec
mov
jmp
xchg
outs
mov
fnstcw
jmp
cs
jo
loop
pop
sub
cmp
mov
push
cmp
add
xor
ret
adc
nop
pop
sub
imul
shl
mov
ja
push
call
sub
push
cs
stos
jmp
xchg
mov
sub
adc
adc
mov
push
mul
mov
pop
int3
pop
xor
jmp
enter
xor
add
inc
cmps
jle
mov
inc
pop
into
fsub
test
sbb
xchg
jle
cmc
xchg
push
pop
xchg
test
cmps
sub
xchg
hlt
test
jb
or
xchg
jne
ins
cwde
mov
or
inc
mov
dec
xchg
stos
add
xchg
out
push
inc
ins
dec
jle
adc
call
mov
rcl
pop
addr16
movs
inc
sbb
loope
mov
mov
cli
xor
aad
dec
mov
inc
fmul
ror
enter
mov
and
out
fadd
mov
xor
lahf
xchg
pop
jl
lods
(bad)
pop
sti
cmp
cmps
push
dec
or
(bad)
daa
or
jae
push
in
pop
dec
das
or
jmp
mov
inc
jmp
into
enter
xchg
push
add
test
sub
pop
and
out
push
mov
pop
inc
and
pop
and
movs
mov
push
push
shl
out
sar
or
mov
push
(bad)
and
xor
sahf
daa
jmp
mov
adc
jmp
jecxz
jmp
pop
mov
mov
jno
mov
jno
mov
push
xchg
fcomp
nop
aad
dec
mov
add
movs
mov
pop
test
les
arpl
adc
cmc
jmp
aas
adc
adc
jno
loop
xchg
lea
push
jmp
enter
pop
cs
push
add
cmp
aaa
into
xchg
add
fwait
or
stos
push
mov
ins
jnp
push
cmp
add
xor
jmp
jg
mov
pop
sub
mov
dec
sub
add
jae
push
fimul
pop
pop
adc
sub
jnp
adc
sub
rcr
jo
add
in
shr
xchg
sti
out
and
aam
mov
pop
or
sbb
jo
lea
mov
popf
push
sbb
dec
popf
inc
in
(bad)
and
jne
cli
hlt
(bad)
daa
or
movs
sti
fbld
out
cs
inc
cmp
pop
add
or
xor
in
mov
mov
popa
inc
repnz
imul
lods
ja
sti
cli
retf
scas
aas
adc
and
mov
aad
outs
stos
sbb
mov
jg
aam
mov
sbb
lea
add
nop
or
int3
inc
mov
call
inc
jmp
push
movs
xor
jle
jge
mov
out
fbld
daa
push
fidivr
stos
inc
rcl
data16
test
mov
mov
leave
std
call
scas
cmp
inc
dec
pop
into
(bad)
xchg
sbb
bnd
scas
out
xchg
pop
push
imul
hlt
mov
cmp
rcl
ficom
stos
neg
idiv
cmps
xchg
repz
nop
xchg
mov
rcr
cmovle
sbb
retf
and
xor
(bad)
or
jp
mov
rcr
adc
sbb
jmp
xor
popa
sbb
into
sub
in
pusha
xchg
cwde
imul
pushf
push
std
sub
out
les
mov
mov
add
and
xchg
mov
ins
sbb
push
cmp
outs
add
fldenv
repz
(bad)
int3
icebp
sub
and
mov
jl
enter
push
and
in
jmp
iret
and
pop
mov
or
sbb
les
in
loopne
sbb
gs
ret
shr
xor
in
add
ds
outs
or
mov
cmp
out
jg
pop
(bad)
icebp
pop
(bad)
and
dec
jg
xchg
dec
sahf
ret
icebp
cld
daa
adc
adc
adc
xchg
pop
push
dec
cmp
mov
scas
sti
(bad)
retf
bound
mov
add
mov
loop
mov
mov
fidiv
xor
jl
push
ret
pop
and
inc
inc
in
add
dec
lahf
xchg
fnstsw
mov
xlat
pop
inc
test
mov
push
movs
ja
jecxz
push
jb
inc
rcr
pop
loop
lahf
mov
stc
mov
test
cmps
(bad)
in
popf
jne
sbb
jb
rcr
arpl
ins
and
cmp
adc
in
mov
mov
loope
push
push
jne
jmp
pop
mov
jmp
xor
xchg
pop
and
sar
loop
movs
push
fs
xchg
push
cmp
inc
movs
shl
mov
sbb
ja
adc
push
push
xor
pusha
js
and
jge
(bad)
iret
retf
mov
sar
mov
cli
hlt
dec
out
sub
xchg
(bad)
(bad)
aam
mov
retf
ja
arpl
xor
mov
sub
ficom
mov
call
cmp
dec
ins
hlt
bound
imul
aas
call
cmps
imul
jo
call
push
ds
movs
add
mov
movs
jo
cmp
fwait
add
ficom
test
mov
ret
mov
ror
pop
jb
fcmovb
push
mov
enter
aad
adc
in
out
sub
mov
inc
out
mov
stos
pushf
dec
cld
neg
pop
lahf
mov
xchg
pop
sbb
out
cmps
test
push
aaa
int
sub
inc
stos
shl
std
(bad)
adc
sub
mov
mov
sbb
jne
cmp
inc
ins
aad
ret
xchg
retf
je
in
sahf
add
shr
ret
sub
popf
ror
mov
adc
mov
jne
pop
cmp
outs
aam
out
aam
(bad)
mov
ins
js
fidivr
pop
jp
mov
xchg
dec
iret
gs
sbb
test
mov
push
mov
out
ror
sti
xchg
daa
test
xchg
xor
dec
add
fcomp
jne
(bad)
leave
int
jo
and
mov
push
hlt
push
ins
cmp
ins
adc
in
fidiv
cmps
mov
popa
or
sub
dec
in
add
rol
mov
jnp
push
sahf
fnstcw
and
cmc
inc
mov
jno
loope
ficom
push
cmp
in
xor
add
inc
fadd
rol
(bad)
jg
push
pop
stos
pop
mov
xor
xchg
cmp
dec
jecxz
sbb
mov
aad
addr16
mov
cmp
cmp
add
or
and
out
popf
in
ret
in
ror
sub
clc
shr
mov
and
stos
mov
push
or
int3
mov
sti
pop
sbb
out
cld
sar
xor
daa
cmp
das
push
xchg
clc
mov
mov
add
movs
pop
lock
ja
cmps
cmp
aad
sbb
cmp
gs
stos
retf
mov
and
jb
xchg
add
jne
in
repnz
test
je
jmp
sbb
arpl
xchg
sub
test
fs
push
aaa
scas
dec
dec
in
adc
push
imul
xchg
arpl
xor
ret
jnp
jmp
sub
aas
dec
jae
jbe
mov
repz
frstor
mov
aas
rcl
shl
stc
pop
loop
push
out
aaa
or
test
inc
ins
pop
retf
pop
mov
bound
call
jp
jg
add
(bad)
hlt
ret
add
(bad)
push
nop
test
call
lea
aas
mov
retf
push
cmc
xor
retf
add
leave
mov
pop
retf
xchg
and
mov
push
pop
movs
lea
mul
sbb
sbb
or
xchg
dec
dec
and
clc
jae
adc
xchg
ret
(bad)
mov
mov
xchg
push
fmul
sub
les
cmp
xor
mov
aam
(bad)
sbb
lahf
popa
adc
je
cmp
mov
dec
jmp
(bad)
jp
sub
jmp
mov
inc
rcl
int3
or
aas
sbb
aad
loope
aam
xor
lahf
xor
push
retf
arpl
retf
(bad)
mov
and
in
ret
sub
or
jmp
out
xchg
fiadd
aas
pop
int3
xchg
mov
fmul
jecxz
test
add
movs
push
cmps
int
(bad)
dec
stos
xlat
jns
and
in
shl
mov
mov
shr
aaa
into
or
out
cmovb
inc
cld
cmp
inc
mov
adc
fldcw
mov
jmp
xor
jae
push
movs
ds
shr
push
std
xor
xchg
enter
mov
hlt
lods
mov
stos
movs
mov
push
adc
mov
pop
inc
das
jmp
(bad)
jmp
bound
xchg
and
push
icebp
pop
mov
jnp
push
imul
jg
das
call
loopne
fld
out
sbb
cwde
sub
push
cmp
call
sub
add
push
inc
stos
(bad)
(bad)
jmp
cli
xor
addr16
sbb
mov
das
mov
push
xor
xchg
enter
mov
imul
int3
mov
lods
push
stos
es
fimul
jg
in
or
mov
pop
pop
js
jns
add
pop
adc
cmp
(bad)
pushf
imul
dec
lock
mov
dec
sub
adc
mov
mov
adc
pop
jle
pushf
pop
mov
aaa
cld
pop
mov
adc
jae
mov
fld
xchg
jb
sahf
adc
call
dec
fs
xor
test
push
xor
xor
rol
ret
adc
fiadd
jg
mov
xor
out
popf
les
sbb
fisub
jge
stc
fist
xor
(bad)
mov
aaa
or
(bad)
sbb
push
std
jmp
mov
xchg
call
mov
push
lods
stos
jae
sub
bound
or
xor
jbe
rol
adc
push
mov
das
in
fidiv
pop
stc
sbb
mul
adc
ror
xchg
pop
(bad)
in
cmps
pop
push
push
rol
daa
aad
xchg
mov
aas
mov
ins
dec
push
fs
daa
sbb
ja
imul
icebp
cld
fisttp
mov
xor
jbe
aad
push
aad
cmp
rol
popa
and
or
push
sbb
mov
loope
or
and
test
inc
or
enter
sub
ret
scas
fldcw
cwde
sub
or
pop
dec
jmp
pop
dec
mul
dec
sar
int3
adc
adc
and
jg
push
shl
(bad)
out
popa
fiadd
mov
mov
(bad)
retf
dec
mov
mov
push
sbb
mov
pop
cmp
movs
outs
lahf
pop
adc
cmp
mov
das
fcomp
push
and
xor
xchg
cdq
push
movs
push
jmp
div
pop
push
les
test
int
lods
icebp
mov
mov
popf
nop
inc
in
jnp
iret
adc
movs
(bad)
xlat
test
(bad)
test
pop
mov
retf
(bad)
stc
dec
in
inc
xor
jg
call
inc
shr
sbb
test
cli
push
outs
lahf
cwde
int
retf
ds
sar
shl
imul
inc
mov
push
test
inc
adc
inc
clc
movs
add
push
xor
shl
(bad)
retf
imul
ds
pop
mov
push
bound
popf
add
pop
xchg
rcr
add
fwait
sbb
sahf
lock
inc
fistp
adc
repnz
dec
in
jo
jne
cmp
adc
jmp
xchg
jns
mov
inc
aam
adc
and
or
cwde
inc
adc
add
and
push
mov
xchg
mov
mov
dec
mov
cmp
in
scas
cdq
fs
(bad)
loop
mov
int3
clc
aad
idiv
call
test
cmps
push
xor
arpl
or
outs
ret
jae
mov
add
scas
or
dec
push
je
pop
lods
xchg
stos
icebp
mov
or
pop
out
adc
jecxz
aad
cmp
lods
fisub
adc
fcomp
cmp
sub
mov
sub
ja
cmps
cmps
xor
cmp
push
mov
inc
adc
xor
popf
pop
mov
jnp
xor
not
mov
cdq
mov
test
xor
scas
(bad)
out
mov
mov
push
shr
push
inc
add
ret
mov
outs
fidivr
arpl
popf
jge
sar
inc
aaa
jno
and
addr16
in
aam
sbb
mov
inc
cld
push
outs
leave
xchg
push
dec
icebp
stc
or
fisubr
jmp
mov
inc
push
mov
push
adc
and
cwde
rol
scas
jp
mov
xchg
les
or
popa
sub
fs
(bad)
dec
sbb
sub
add
loop
movs
sub
sub
loop
cld
push
cmp
mov
or
mov
ffreep
inc
scas
or
sbb
inc
mov
add
int3
or
les
lds
mov
cmp
outs
sbb
push
mov
fdivp
(bad)
fs
ins
repnz
repz
mov
je
outs
add
stc
cmps
cmps
aam
jnp
adc
sahf
adc
xchg
pop
inc
stos
out
ret
pusha
mov
repz
jo
xchg
jmp
nop
inc
cs
(bad)
shl
es
xor
imul
cmp
sub
sar
push
xchg
nop
sub
dec
sbb
(bad)
std
shl
lock
inc
addr16
xchg
stos
repz
ffreep
in
mov
jo
mov
int3
pushf
adc
mov
cs
or
ds
loope
retf
jns
push
int3
cwde
add
xchg
js
lds
loope
cwde
inc
mov
je
jle
inc
sub
lods
cdq
jns
adc
loop
mov
xor
xchg
enter
es
jp
scas
jg
iret
loope
(bad)
shr
mov
push
mov
push
fs
add
xchg
jno
jae
sub
into
daa
pop
pushf
imul
xor
in
in
mov
xor
repz
pop
test
dec
or
out
(bad)
mov
jb
(bad)
pop
(bad)
cli
cld
mov
test
clc
cmp
lock
aam
mov
cmp
repnz
add
jmp
lods
cmps
sbb
cmps
(bad)
and
mov
sbb
jle
xor
pusha
aas
mov
cld
ins
emms
mov
outs
sub
mov
aas
cli
and
xchg
inc
arpl
out
imul
xchg
les
sub
std
mov
jmp
mov
xchg
in
dec
mov
sub
xchg
jmp
bound
pop
push
adc
xor
cmp
or
cs
push
movs
aas
jl
data16
mov
aad
repnz
test
push
xor
mov
std
add
mov
push
out
jno
ins
and
cmp
addr16
push
or
add
shl
pop
add
inc
cmp
fbld
push
jp
push
mov
push
rcl
aad
mov
shl
cmc
popa
xor
pushf
test
pop
cs
movs
mov
mov
in
mov
push
sbb
pop
inc
cmp
out
pop
add
add
cs
repnz
cmp
dec
mov
lods
pop
push
mov
xchg
aam
pop
pushf
in
xor
adc
aam
mov
mov
ds
je
fnstcw
cdq
and
retf
pop
cmp
pop
push
push
cli
aas
or
sub
mov
aaa
aam
dec
cmp
in
cmps
(bad)
stos
test
fstp
pushf
pop
inc
push
adc
dec
shr
les
out
js
push
adc
xchg
pusha
mov
cmps
stc
inc
push
jg
cdq
call
inc
aad
test
aad
jae
fiadd
movs
rcr
xor
repnz
sbb
popa
sbb
test
out
push
bound
xchg
dec
adc
outs
ins
add
mov
aad
xor
xchg
rol
call
je
aas
dec
inc
xor
xor
push
stos
adc
cmps
fldcw
lahf
xrelease
cwde
inc
aaa
fild
loope
je
adc
inc
push
sbb
fadd
shl
add
jmp
aam
add
data16
div
mov
jp
push
jl
mov
std
sub
or
sub
sbb
sbb
out
inc
sti
jle
ja
pusha
pop
push
(bad)
clc
sub
mov
enter
test
leave
aaa
jmp
sbb
les
push
lods
js
retf
aad
dec
in
mov
mov
ror
fidivr
add
outs
call
sbb
pushf
ror
jmp
dec
cmps
push
cmp
sbb
out
add
dec
mov
mov
sti
pop
adc
cli
jg
mov
push
sar
cmps
(bad)
pop
mov
pusha
clc
cmp
push
inc
or
das
push
pop
icebp
xchg
mov
cmps
cdq
mov
call
ss
in
inc
mov
mov
hlt
sub
jnp
xlat
fisubr
jnp
dec
pop
das
pop
sti
pop
stos
aas
aaa
push
leave
ja
test
out
test
push
push
scas
mov
pusha
les
cmp
les
popa
mov
in
xchg
jno
mov
pop
mov
leave
inc
imul
jae
cmp
hlt
fnstcw
loope
imul
gs
fcomp
xchg
cmp
outs
inc
sub
lahf
sbb
jmp
gs
fwait
dec
xchg
sub
xor
pop
xor
jne
fnsave
mov
add
xchg
jne
push
(bad)
in
idiv
movs
adc
push
scas
push
or
outs
cwde
mov
or
or
and
mov
cwde
movs
mov
pop
push
int3
pop
lds
sbb
dec
imul
loop
xor
adc
add
std
mov
in
sti
aad
shr
lock
pop
sbb
inc
(bad)
fstp
sar
mov
mov
mov
aaa
lods
lahf
pop
gs
dec
ins
xor
adc
or
in
ror
je
jo
aas
cdq
scas
test
std
push
sub
pop
shl
repz
jmp
enter
jmp
lea
test
mov
jle
mov
mov
fisttp
ins
mov
loop
pop
and
scas
jbe
sbb
fldcw
loop
test
lock
jmp
mov
xor
xor
add
jle
fdivr
ins
cmp
push
jecxz
getsec
ss
add
mov
lods
mov
lods
push
int
out
call
adc
stos
mov
popa
push
mov
sub
data16
dec
sbb
mov
push
mov
cdq
shl
(bad)
js
jge
cmps
aas
push
clc
adc
sbb
add
jp
stos
std
sar
and
adc
sahf
mov
jmp
sbb
(bad)
inc
nop
inc
lahf
data16
cmp
pop
test
dec
xchg
xor
cmp
ins
(bad)
cli
mov
out
scas
inc
loope
daa
ins
lahf
sbb
movs
sub
jg
hlt
mov
lea
int
xor
sbb
inc
add
push
sub
xchg
das
and
mov
pop
push
cdq
mov
xor
xor
in
pushf
or
in
mov
xor
push
inc
sbb
inc
repnz
call
fistp
xchg
mov
mov
and
push
pop
dec
dec
pop
fnstcw
adc
mov
mov
ss
cmp
jmp
xchg
call
xchg
icebp
xchg
jg
sbb
(bad)
jns
aas
add
test
into
test
loop
add
outs
clc
inc
xor
push
ja
movs
and
call
sbb
xor
enter
call
out
test
pop
mov
mov
and
cmps
mov
mov
xor
mov
cdq
and
dec
dec
add
ror
sbb
fcom
mov
ror
push
adc
pop
sub
hlt
push
outs
cmp
das
add
ds
aaa
repz
cmp
daa
xchg
rol
lock
popa
in
jmp
sub
ins
xlat
fisttp
jp
adc
jge
mov
jmp
iret
(bad)
out
stc
call
aas
test
mov
mov
test
pop
add
inc
xchg
fsubr
or
xchg
jl
dec
jns
das
jno
(bad)
into
in
pop
mov
les
(bad)
sti
scas
or
or
(bad)
pop
jmp
adc
or
pop
mov
sbb
inc
pushf
mov
inc
jge
pushf
es
repnz
imul
inc
dec
lock
mov
das
jl
sbb
jo
lods
repnz
dec
mov
or
aaa
arpl
sub
cmp
leave
aam
icebp
or
push
xor
loope
leave
call
mov
mov
(bad)
or
sub
adc
test
mul
aaa
pop
inc
call
(bad)
sbb
dec
jmp
mov
xchg
sub
stos
leave
cmp
dec
add
sti
and
pushf
cmp
sbb
cmp
add
retf
fnstcw
(bad)
(bad)
rcl
push
adc
lds
sbb
jmp
mov
pop
adc
dec
stos
stos
sbb
cmp
cmps
stos
inc
lods
mov
cmps
mov
push
leave
mov
rcr
lahf
repz
inc
jge
ficom
mov
mov
xlat
in
call
pop
jp
pop
mov
mov
push
mov
mov
outs
mov
add
mov
in
or
mov
sbb
lods
arpl
sub
mov
dec
pop
jns
aas
(bad)
fs
sbb
in
xor
adc
call
pop
fcom
ja
mov
pusha
add
sbb
adc
clc
xor
iret
jg
stos
inc
or
and
pop
pusha
mov
add
xchg
jmp
dec
mov
mov
sbb
xchg
and
xchg
mov
into
pusha
lds
(bad)
icebp
outs
(bad)
cli
push
retf
fld
shr
push
push
xor
nop
cmp
dec
adc
push
push
div
jno
pop
jnp
add
jmp
push
pop
push
adc
in
xchg
sti
loope
cmp
jmp
es
dec
(bad)
ret
sbb
cmova
cmps
push
rcr
mov
add
xor
sbb
outs
push
and
aam
or
fsub
ins
push
daa
je
jnp
jbe
inc
lock
push
and
xchg
(bad)
adc
or
stos
mov
add
dec
ss
ss
jle
push
mov
fidiv
jae
push
mov
xor
and
sbb
rcr
add
pop
fcomip
adc
add
dec
lahf
in
mov
je
pop
sti
sti
test
sbb
fsubrp
or
pop
jl
adc
or
pmaddwd
ret
push
cmc
out
js
movs
ucomiss
pushf
mov
arpl
cmp
and
jns
shr
pop
cld
mov
nop
xchg
mov
cli
int3
lds
out
jb
(bad)
fmulp
out
das
push
scas
push
jne
sub
fcomp
sub
jle
or
stos
push
repz
inc
call
pop
hlt
scas
test
cmps
pop
aad
mov
push
movs
or
and
mov
out
sbb
popa
mov
jb
cmps
inc
je
push
sbb
adc
ret
and
push
add
rcl
les
push
sub
dec
repnz
push
(bad)
out
sub
sbb
jge
hlt
jne
sub
sbb
js
cli
sbb
xchg
inc
(bad)
mov
cmp
xor
outs
scas
(bad)
enter
scas
mov
inc
jecxz
iret
xchg
pop
mov
pop
push
mov
(bad)
xor
push
cmp
jmp
mov
cwde
imul
cli
inc
and
push
arpl
fsubr
sahf
mov
popf
ret
loope
mov
cwde
ret
jmp
xchg
jl
sti
pushf
fcomp
lea
fwait
out
cmc
imul
lea
cmp
(bad)
pop
cmp
lahf
xor
hlt
stos
mov
hlt
loope
add
mov
pop
(bad)
mov
test
cmp
xchg
jmp
jmp
ins
imul
int3
mov
in
xor
inc
pushf
cmp
fcom
fs
rcl
ftst
add
push
push
fisubr
test
dec
add
dec
lea
adc
bsf
mul
jns
lods
push
repnz
sbb
mov
(bad)
rcr
(bad)
shr
xchg
mov
jg
loop
xchg
mov
fisubr
mov
ins
dec
in
loopne
add
adc
fmul
cmp
(bad)
jae
sbb
enter
lock
dec
xchg
xchg
sbb
pop
dec
sbb
xchg
or
adc
inc
inc
mov
pop
jle
add
jnp
mov
imul
jecxz
xor
lds
xor
arpl
push
or
jo
in
fwait
aad
xor
ret
add
fimul
push
sbb
cmc
movs
imul
xchg
push
mov
repnz
pmulhw
jmp
lods
push
call
dec
rol
mov
scas
ins
adc
loopne
adc
in
or
xchg
iret
inc
sub
es
jo
xchg
mov
sbb
push
iret
cmp
xchg
sub
dec
(bad)
out
sbb
iret
push
ins
mov
cld
stos
mov
popa
clc
mov
adc
mov
test
int
in
add
sub
outs
call
sahf
ret
fsubr
mov
pop
add
cmps
pop
xor
dec
or
mov
inc
mov
ret
add
std
mov
test
cmps
pop
aad
sub
push
inc
je
test
mov
inc
mov
xor
xchg
sbb
cmp
sbb
pusha
dec
mov
add
popf
inc
xor
lods
mov
cmp
xchg
inc
xchg
xchg
lods
push
xchg
dec
addr16
cmps
dec
arpl
mov
retf
cmp
sbb
xlat
lds
push
lods
in
adc
dec
int3
mul
std
loope
cmps
lods
sbb
jge
push
out
inc
mov
adc
es
jmp
sbb
jecxz
inc
call
ret
push
push
adc
inc
xchg
outs
(bad)
push
cmp
push
repnz
sbb
or
sbb
fisttp
mov
psrad
(bad)
jbe
push
call
add
popf
push
mov
hlt
int3
inc
frstor
fnsavew
(bad)
adc
jle
inc
aam
cmps
(bad)
in
mov
mov
and
jo
and
push
push
xchg
mov
loopne
shl
iret
sbb
add
out
dec
dec
stos
xchg
out
pop
out
adc
jle
xlat
push
adc
aaa
fs
shl
pop
and
loopne
iret
jle
add
add
mov
adc
mov
and
cli
jmp
rol
lock
push
bnd
repz
and
sbb
push
inc
cmp
xchg
fucomip
and
and
dec
or
shl
cmps
call
pop
xor
mul
sbb
loope
and
adc
jge
mov
jbe
jb
mov
add
(bad)
pop
xlat
movs
rcr
inc
or
dec
mov
inc
ficom
adc
sbb
in
imul
sub
(bad)
xchg
jo
lock
(bad)
fxch
and
(bad)
push
outs
jno
rcr
mov
test
nop
mov
outs
dec
call
xor
sbb
das
xchg
lds
mov
into
add
ss
inc
(bad)
pop
mov
cmps
jmp
js
mov
pop
jnp
cmc
test
pop
mov
jb
or
fidivr
adc
jg
mov
jge
mov
jbe
sub
cmp
sub
loopne
mov
push
dec
sbb
ins
(bad)
not
inc
push
push
or
pop
dec
jge
pop
cdq
inc
jo
jle
out
add
addr16
or
sbb
(bad)
mov
sahf
adc
or
cmp
inc
das
dec
lods
xor
lods
xor
cli
in
and
sub
lock
jnp
(bad)
xor
ins
jmp
sbb
inc
adc
push
ret
fdiv
dec
dec
xchg
lahf
(bad)
cwde
ds
in
fld
jmp
sub
clc
sub
sahf
shl
xor
retfw
xchg
stos
lods
dec
iret
not
(bad)
in
fwait
xchg
std
test
xor
xor
popf
jmp
outs
add
aam
in
icebp
and
fist
mov
aaa
adc
or
xchg
push
mov
cmc
cmp
jecxz
gs
repnz
xchg
sti
cmps
movs
jmp
xchg
std
imul
jle
add
push
push
add
aam
xchg
lds
cs
mov
enter
(bad)
repz
adc
fcom
add
add
scas
inc
pop
pop
pop
dec
xor
jno
out
push
cmc
sahf
add
call
je
stos
in
sub
adc
jecxz
dec
fs
add
lods
enter
cmp
pop
mov
stos
xor
into
addr16
add
mov
jp
adc
ret
pop
pop
mov
jmp
cli
xchg
int3
inc
jno
js
movs
test
sub
or
lods
mov
repnz
mov
in
inc
hlt
cmps
pushf
cdq
test
jbe
pop
mov
repz
add
fadd
stos
add
ret
jno
dec
xchg
icebp
mov
mov
jg
sbb
or
fwait
das
xchg
pop
sub
in
movs
aad
push
jle
outs
aaa
frstor
jne
ds
push
ret
cmp
push
xor
ds
sbb
xor
jae
jne
aam
fnstenv
push
xlat
cmps
xor
jno
cs
je
ret
loopne
xchg
sub
xor
(bad)
and
pop
adc
jbe
push
sbb
int
fld
lods
jmp
sbb
inc
cmp
xor
jnp
fld
xor
and
stos
stc
ss
or
(bad)
jge
loop
ins
and
lea
add
mov
jbe
dec
xchg
ja
add
inc
pop
call
shl
pop
inc
pushf
sub
and
xchg
fsub
(bad)
sar
test
mul
adc
int
mov
popa
test
jae
fnstsw
imul
xchg
mov
ret
stc
aam
fimul
(bad)
sbb
pop
cmp
lahf
push
pop
mov
or
bound
mov
adc
(bad)
mov
ret
sub
out
xlat
dec
cdq
sti
inc
bound
mov
push
and
jl
mov
daa
pop
in
jmp
and
retf
sub
jno
push
push
jnp
in
int3
imul
jmp
pushf
retf
out
cdq
in
dec
xchg
mov
pushf
fidiv
adc
adc
js
push
pop
outs
dec
cwde
or
ret
or
fimul
mov
dec
jle
jp
fbld
and
jo
mov
jl
push
push
int
fwait
push
int3
gs
cmp
adc
xor
in
mov
loop
and
sub
(bad)
daa
jb
adc
jns
test
push
arpl
ins
mov
lock
adc
pusha
mov
xor
sub
lea
call
in
sahf
jecxz
pusha
in
and
xchg
ja
push
mov
pop
data16
retf
repz
stos
xchg
or
sub
push
es
enter
das
push
mov
fs
lods
in
shr
cld
push
(bad)
aam
imul
(bad)
mov
xor
jle
sub
adc
xchg
and
pop
inc
or
arpl
sub
in
pop
jae
iret
pusha
(bad)
(bad)
mov
xchg
xchg
jo
cs
jg
arpl
mov
cli
lods
nop
dec
mov
imul
dec
mov
sbb
xchg
cmps
jmp
jl
or
add
iret
add
js
jle
add
or
in
iret
jl
movs
je
add
mov
push
movs
sub
pop
leave
mov
test
cmp
sub
or
adc
adc
jns
leave
lock
jbe
jb
add
adc
fsubr
lea
dec
fbstp
ss
sub
mov
call
sub
xlat
sar
xchg
push
xchg
push
aad
std
dec
sbb
pop
ds
ss
(bad)
adc
aaa
pop
add
push
fwait
mov
and
jp
sbb
inc
es
jp
lock
lea
bound
jnp
into
out
add
xchg
pop
xchg
test
mov
and
sti
ret
ror
jge
push
js
dec
adc
push
xor
(bad)
fucom
fisttp
lds
push
jmp
pop
push
jo
adc
sar
adc
adc
jnp
fstp
and
ficomp
outs
add
movs
loop
mov
sub
outs
mov
pushf
gs
and
and
clc
aad
mov
push
sbb
into
movs
inc
jmp
ins
and
retf
or
leave
add
nop
adc
push
lock
je
jno
sahf
mov
sbb
and
div
iret
popf
push
adc
xor
xor
xlat
jns
cmp
mov
mov
dec
cli
or
mov
jp
sbb
pop
fild
add
sbb
imul
dec
xchg
arpl
sar
cdq
and
stos
add
or
lods
mov
inc
loope
cli
dec
neg
adc
push
ds
inc
pop
(bad)
popf
retf
mov
jno
dec
ins
aaa
cmp
push
fcomp
mov
into
shl
sbb
mov
pop
hlt
jl
psubd
test
(bad)
cmps
jl
xchg
sbb
popa
in
rol
mov
mov
dec
cmp
imul
int3
test
mov
mov
pop
jg
add
es
dec
lea
sbb
pop
out
test
mov
mov
imul
loopne
mov
xchg
popa
adc
or
sti
lods
push
pop
loopne
xor
pop
sbb
dec
hlt
xchg
retf
push
mov
dec
pop
retf
or
call
lds
iret
jne
in
sub
aas
dec
in
fs
cmp
rol
out
fnsave
sahf
jmp
inc
jmp
and
repnz
inc
or
dec
xchg
test
cld
push
push
mov
daa
or
pop
dec
jle
xchg
rol
cwde
loope
adc
mov
(bad)
pop
ds
mov
sbb
jle
fwait
sub
sbb
loopne
inc
imul
or
mov
popa
enter
add
cmp
push
push
mov
push
add
cmps
aas
nop
push
sbb
cmp
mov
pop
inc
stos
ret
es
sub
or
mul
call
sbb
in
repz
adc
or
test
lds
adc
das
fcmovnbe
retf
push
fucomi
fistp
pop
in
movs
dec
jno
lahf
add
enter
lea
in
and
mov
lds
ja
jmp
add
aas
fiadd
sub
push
jg
mov
call
xchg
mov
mov
lods
inc
xchg
inc
adc
mov
xor
push
jp
(bad)
pusha
mov
pop
and
jl
lock
or
sub
mov
xchg
shl
ja
push
(bad)
inc
(bad)
sahf
mov
adc
pusha
sub
push
(bad)
jmp
(bad)
repnz
mov
imul
iret
(bad)
gs
repnz
cmp
nop
sahf
add
stos
shr
and
xchg
jp
cs
dec
and
shl
inc
mov
mov
cmp
sub
and
sti
out
cmp
es
cmps
cli
mov
push
jmp
adc
mov
sahf
xchg
dec
imul
pop
mov
inc
push
mov
dec
inc
mov
jge
daa
push
pusha
iret
addr16
jecxz
imul
add
pop
cld
(bad)
mul
mov
sub
mov
jmp
push
jb
mov
scas
loope
clc
shl
loope
sub
dec
gs
ja
add
fwait
(bad)
adc
in
xor
loope
and
or
mov
imul
loop
dec
xchg
xchg
inc
jp
inc
gs
call
dec
daa
mov
mov
mov
dec
ins
xchg
or
pop
and
mov
push
mov
fbstp
(bad)
xor
lea
sbb
push
or
pushf
mov
imul
test
outs
test
jmp
xchg
outs
mov
dec
adc
and
pop
(bad)
xchg
test
imul
sub
sbb
pop
mov
adc
sar
rep
and
xor
push
sahf
ficom
and
(bad)
aaa
shl
icebp
pop
test
mov
(bad)
xchg
adc
les
pop
je
stos
daa
sti
push
mov
cmps
in
mov
js
js
xchg
adc
xor
das
daa
xor
or
lds
retf
push
cs
push
mov
dec
mov
in
dec
stc
(bad)
fistp
sbb
aaa
pop
dec
xchg
xchg
inc
jns
stos
lods
and
lods
sbb
inc
or
or
push
xchg
jl
jmp
fisttp
push
popf
adc
mov
out
sbb
mov
inc
(bad)
cmp
cmp
sar
xchg
(bad)
fistp
les
call
mov
push
cli
add
push
or
mov
test
in
xchg
lea
call
std
or
cmp
mov
lods
dec
jp
les
jne
jne
jae
mov
adc
stos
pusha
inc
cmp
cs
pop
je
pop
js
out
fcmovnu
fsubr
ror
cmp
mov
push
das
dec
repnz
mov
cmp
mov
inc
mov
ins
pop
stos
adc
cmp
push
jmp
push
div
rcr
xchg
mov
and
and
xor
(bad)
sub
hlt
call
in
ds
adc
das
gs
arpl
shl
dec
mov
ins
sti
inc
xlat
xchg
aas
stos
inc
shl
cmp
ds
add
int3
outs
and
dec
les
mov
iret
push
dec
mov
in
sti
ret
push
pop
xchg
xchg
cld
cmps
cs
std
sub
mov
adc
push
xchg
je
outs
imul
mov
popa
mov
and
sbb
fisttp
cmp
jne
push
or
jle
ror
xchg
jns
enter
mov
or
jle
pushf
add
lods
jne
pop
dec
rol
leave
test
xchg
and
dec
cmp
enter
shl
jae
in
sub
mov
push
push
data16
fwait
mov
inc
imul
jmp
jbe
jae
adc
inc
les
cmp
inc
cmps
imul
xor
xor
adc
sbb
xchg
aam
sub
xchg
pop
push
adc
in
(bad)
sub
mov
aas
stc
ins
mov
xor
ror
or
mov
movs
out
jae
ja
jbe
and
in
rol
add
sbb
shr
mov
ja
and
mov
or
dec
sbb
mov
and
test
gs
push
js
mov
pop
clc
push
mov
in
in
jge
and
iret
push
adc
fcomp
scas
jb
div
sbb
in
jle
push
sbb
rcl
into
xlat
clc
loopne
sub
jge
dec
jno
addr16
jbe
in
mul
mov
mov
ss
mov
push
pop
mov
xor
push
cld
jmp
pop
cmp
inc
xor
mov
adc
call
mov
xor
jmp
xchg
(bad)
ins
mov
mov
push
fldcw
or
adc
pop
pop
xchg
xchg
jmp
pop
lahf
ret
cmc
pop
and
or
pop
pop
enter
out
jnp
mov
sub
pop
pop
loope
xchg
(bad)
jg
repnz
adc
ins
into
inc
mov
fidivr
cdq
arpl
int3
dec
inc
inc
jns
je
sub
js
mov
sub
imul
sub
mov
outs
fnstenv
pop
mov
in
popf
sti
fwait
push
sti
mov
sbb
adc
xchg
sahf
repnz
push
xchg
(bad)
jp
jb
mov
cmps
retf
jmp
inc
mov
out
dec
movs
dec
xor
das
pop
call
sbb
inc
mov
cdq
std
test
fwait
xor
mov
ins
push
xchg
call
pop
fnsave
cmc
xchg
xor
cdq
ret
loop
jecxz
cmp
out
rcr
daa
cmp
push
les
xor
inc
or
add
inc
sub
add
mov
iret
fdiv
lods
inc
(bad)
lods
push
test
in
push
jmp
fwait
les
iret
stc
xchg
push
push
add
fstp
inc
clc
rol
mov
sbb
mov
mov
int3
fcmovb
cmp
xor
cwde
sub
arpl
push
push
push
sub
cld
mov
dec
add
dec
gs
push
jecxz
xor
fisubr
mov
xor
icebp
test
push
dec
into
fsubr
(bad)
out
pop
shr
mov
mov
std
jp
into
fimul
loope
and
lods
shr
es
inc
fdivr
leave
lds
fadd
pop
fwait
jb
pop
test
pop
push
loope
or
inc
cmp
jo
xor
rcr
ret
xor
stos
xchg
ret
cld
nop
cmp
jl
inc
retf
sub
dec
ins
imul
cmp
jmp
mov
fnsave
in
cdq
out
ins
add
js
leave
fcomp
aas
andps
bound
xchg
mov
xchg
ins
and
lds
adc
xor
das
into
rcl
inc
ins
xchg
dec
sub
or
push
scas
gs
push
dec
and
ret
jmp
nop
ins
addr16
and
mov
adc
add
jmp
arpl
inc
int
lods
fs
pop
dec
(bad)
and
out
addr16
push
pop
stc
bound
daa
adc
push
and
pop
loopne
mov
cmp
ret
mov
outs
mov
repz
(bad)
add
jnp
jo
cmp
fwait
add
mov
iret
popf
into
sub
add
in
stos
and
retf
dec
cli
sbb
lds
xor
sub
ss
movs
lods
(bad)
in
pop
cmp
fbld
je
ja
test
movs
or
jmp
push
stos
mov
ret
idiv
enter
inc
call
ds
aam
push
call
or
sbb
xchg
xor
xor
stc
mov
ret
add
loope
ja
outs
pop
jnp
aad
dec
in
jne
mov
sub
add
imul
dec
sub
jne
repz
pop
fucomp
xchg
test
mov
sub
mov
jp
fisttp
fcom
mov
push
add
add
jno
lahf
retf
mov
mov
and
call
mov
leave
xor
jne
ins
push
ds
iret
push
popa
jl
mov
sub
add
cdq
adc
pop
or
mov
or
xor
rcr
stos
push
push
adc
pop
sbb
fadd
fmul
xor
lods
adc
dec
es
cli
std
stos
or
rcl
adc
jmp
stos
xlat
cmc
cwde
pusha
call
pop
sbb
fs
fdiv
(bad)
push
ins
jecxz
ss
or
sbb
into
scas
xchg
call
mov
test
dec
aas
lods
aas
jb
pop
je
mov
push
loopne
outs
pop
jmp
and
daa
sub
sbb
sub
imul
test
mov
je
sub
pop
ja
mov
mov
add
xchg
bound
sbb
jno
xchg
xchg
stos
in
pop
icebp
lods
retf
mov
cmps
out
lods
ficomp
or
ss
into
les
ins
in
pop
fmulp
mov
std
les
retf
or
sbb
iret
movs
jb
call
sub
mov
mov
jmp
push
sub
(bad)
je
and
mov
inc
and
jmp
or
pusha
(bad)
mov
dec
retf
shl
jno
jmp
and
clc
add
pop
fisubr
add
pop
aas
or
movs
popf
jle
lea
gs
adc
outs
inc
mov
dec
xor
jp
into
ins
jb
not
(bad)
jp
add
mov
cwde
shl
std
inc
mov
or
push
adc
pop
ins
mov
dec
pop
in
arpl
fistp
push
add
inc
dec
(bad)
lock
mov
addr16
add
mov
(bad)
cld
mov
call
jo
int3
add
sbb
xchg
adc
xlat
(bad)
jbe
jnp
es
dec
mov
in
dec
in
(bad)
inc
inc
scas
jge
jnp
popa
sbb
test
or
call
inc
dec
mov
sub
mov
mov
adc
pushf
fimul
retf
xor
jnp
fsubr
adc
mov
in
(bad)
in
push
inc
push
leave
mov
ins
pop
ins
add
mov
mov
or
sbb
popf
shl
dec
sub
mov
fst
add
push
pop
dec
cmp
retf
inc
cli
add
imul
lds
jge
in
repz
sbb
rol
sub
sub
fisttp
sub
push
jns
fs
push
js
test
es
pushf
mov
add
rcl
movs
xor
addr16
xlat
push
push
rcl
pop
pop
fistp
in
add
inc
xchg
(bad)
add
aam
mov
retf
inc
popf
jle
popf
pop
cmp
adc
cmp
ficom
or
mov
adc
and
and
(bad)
(bad)
jmp
shl
sub
pop
add
ss
xchg
scas
dec
fsub
xchg
mov
xor
loop
loop
xchg
cmps
fcom
dec
fimul
ficomp
mov
push
jnp
int3
arpl
sar
mov
div
call
add
leave
repnz
outs
push
mov
(bad)
add
les
in
inc
loop
dec
push
inc
mov
out
lahf
mov
outs
shl
xchg
pop
fbld
sbb
popf
or
mov
jle
(bad)
cmp
ds
and
push
outs
push
mov
test
mov
push
vmovdqu64
rcl
scas
dec
sub
dec
mov
mov
push
jns
outs
test
lock
inc
push
mov
in
jns
scas
dec
mov
push
pop
sub
jge
push
mov
loope
addr16
cmp
inc
outs
dec
push
pushf
mov
mov
mov
xchg
mov
pop
xor
ds
mov
cmps
std
sahf
(bad)
push
es
jne
xchg
pop
add
std
sub
hlt
in
and
movs
repz
(bad)
popf
jb
sahf
les
sub
and
dec
xchg
je
dec
scas
loopne
mov
std
inc
scas
sbb
out
pop
sub
or
push
sub
and
mov
ffree
jb
pop
pusha
mov
jne
retf
mov
fcomp
stos
adc
lahf
scas
cmps
pop
and
push
cld
inc
jecxz
fbstp
mov
pop
xlat
retf
in
jb
call
mov
dec
(bad)
sub
ins
jnp
fistp
mov
clc
shl
ss
(bad)
sbb
mov
jecxz
shl
js
popf
jmp
cmp
inc
or
cmc
lds
push
add
mov
out
push
sbb
rol
icebp
and
push
cmp
enter
leave
ja
sub
cmps
ret
lds
loop
and
mov
cmp
ss
fcom
stc
ret
les
loop
popf
mov
jns
sti
mov
dec
popf
push
fsubr
mov
push
xlat
fcomp
fild
test
dec
sbb
push
sub
inc
jns
int
leave
scas
push
jl
pop
cmp
sbb
arpl
sub
xlat
xchg
fstp
cdq
ja
xor
jne
js
sahf
or
xchg
ret
mov
and
jl
(bad)
clc
loop
ret
mov
and
push
mov
xchg
pop
ins
int3
push
lods
cmc
add
icebp
cmp
and
test
out
rol
cmps
xchg
call
inc
adc
xchg
scas
or
jae
cmps
push
gs
push
ja
cwde
loop
and
mov
or
xor
push
(bad)
cmp
movs
pushf
aam
mov
sbb
jmp
jne
sbb
je
imul
lods
push
mov
xchg
jmp
fsubr
mov
jg
stos
jmp
sub
pop
sbb
mov
and
movs
inc
sub
stos
inc
adc
(bad)
mov
xor
xor
mov
pop
mov
mov
push
mov
inc
push
aad
popf
sbb
add
sub
sbb
dec
sub
dec
lahf
xlat
stc
ret
js
adc
mov
dec
scas
(bad)
(bad)
xchg
xor
test
repnz
fsub
jge
mov
enter
mov
lods
dec
inc
lds
scas
mov
push
jp
and
pop
lock
pop
outs
popa
mov
or
out
add
std
sbb
fld
cmps
xchg
in
sub
jge
adc
jmp
frstor
adc
pop
rcr
cld
push
fmul
and
mov
add
jg
test
hlt
dec
mov
in
(bad)
enter
xor
push
mov
das
pushf
hlt
cs
xchg
adc
xor
xchg
mov
icebp
es
imul
cwde
sbb
or
es
pop
xor
and
adc
cld
and
daa
or
dec
inc
dec
xchg
(bad)
xor
push
lahf
leave
das
push
jp
fnstenv
or
or
js
cld
in
pop
icebp
pop
inc
cmp
push
sbb
and
leave
xchg
jns
mov
sar
sbb
xor
mov
or
in
rcr
mov
out
adc
sub
into
repnz
test
add
js
mov
fbstp
xlat
add
in
daa
jp
sub
mov
add
outs
test
pop
mov
jo
imul
out
jb
arpl
mov
ficom
or
lods
ror
jb
pop
xor
fabs
shl
pop
jmp
add
add
es
fcomp
fcmovu
jbe
dec
cmp
or
push
int
into
jns
shr
mov
mov
loope
sbb
mov
cmc
add
add
inc
call
popf
pop
(bad)
mov
(bad)
adc
repnz
pusha
push
mov
nop
xor
jnp
pusha
iret
and
mov
pop
test
xchg
xchg
(bad)
jmp
aaa
pop
sub
mov
call
dec
daa
mov
mov
call
jbe
mov
pop
xor
push
sbb
mov
stos
mov
mov
jmp
fnstcw
lods
stos
call
adc
add
imul
sub
dec
pop
mov
dec
xor
dec
dec
test
imul
popf
call
ss
push
rcr
cmp
(bad)
aaa
pop
and
or
in
xchg
pop
inc
ds
dec
dec
daa
add
and
xor
mov
iret
into
out
push
xor
repz
aaa
mov
test
loope
and
fadd
mov
lahf
mov
xor
sbb
pop
mov
lahf
scas
arpl
pop
cmps
cwde
or
xor
lock
sbb
or
xchg
jae
rol
dec
in
stos
push
sub
cmp
add
stc
adc
mov
fadd
xchg
xor
push
ror
call
mov
push
mov
aad
imul
out
or
jno
push
inc
cmp
or
bound
sti
scas
fs
mov
aad
sbb
sub
inc
jns
pop
inc
shl
and
xor
push
and
sub
xchg
jno
retf
ds
std
inc
cmp
pop
xchg
jns
icebp
test
pop
add
xchg
jl
push
inc
dec
int3
aaa
test
push
test
xchg
mov
jo
call
jnp
xchg
clc
or
jp
ror
jp
loop
push
fdivrp
rcl
push
es
mov
ret
push
push
cmps
fsubr
ins
sub
int3
pushf
pop
lea
into
and
jae
jns
mov
aas
xor
aam
mov
sar
test
add
popf
and
push
pop
or
xchg
stc
out
fdiv
pop
jge
test
jge
call
pop
xor
rcr
pop
fsubrp
sub
pcmpgtw
nop
sbb
out
scas
push
div
call
inc
xchg
mov
mov
lds
clc
pop
adc
xor
clc
popa
push
fcomp
sub
pop
test
and
xor
int3
mov
js
sub
dec
retf
repz
push
sub
xchg
sbb
xor
dec
(bad)
fldcw
loope
not
add
lods
xchg
test
test
jb
cmp
push
ret
pushf
test
jb
dec
test
jns
lds
sbb
inc
test
adc
mov
or
(bad)
int
adc
xchg
pusha
ficomp
out
adc
mov
call
mov
dec
add
cmp
xor
mov
jg
inc
mov
mov
adc
int3
mov
sub
xor
xlat
aas
mov
js
pop
and
push
outs
iret
and
cdq
cwde
shr
int3
ins
rsqrtps
div
inc
jbe
inc
sbb
push
je
add
push
jnp
xor
arpl
or
push
stos
test
add
mov
pushf
mov
xchg
pop
push
or
pop
loop
stc
cs
imul
stos
dec
repz
je
adc
mov
and
and
fisub
or
clc
fcmovnb
mov
mov
dec
mov
or
dec
cmp
mov
jecxz
fnstenv
mov
icebp
adc
or
ja
mov
arpl
jae
xchg
out
add
push
aas
retf
jp
lds
iret
pop
xchg
cmp
add
xor
cli
adc
(bad)
push
ds
mov
inc
dec
out
lods
rcr
cmp
mov
pop
mov
jns
pop
ins
daa
inc
push
call
sub
jp
jmp
mov
mov
sbb
sub
xor
test
inc
(bad)
pop
ins
xor
ss
xchg
sub
ins
ja
fwait
inc
add
lea
sub
dec
movs
mov
dec
pop
dec
lods
test
cmp
rol
adc
addr16
and
or
inc
stos
inc
outs
dec
xchg
cmp
add
jo
sub
push
test
inc
sub
add
or
loopne
push
out
jmp
xchg
pushf
jno
das
or
pop
popf
sub
sbb
(bad)
retf
rcr
clc
shl
in
cmp
cmps
fbstp
aaa
fs
pop
in
mov
mov
lods
int3
lods
xchg
ss
mov
shr
movs
iret
pop
jecxz
cmps
fidivr
add
stos
xchg
std
fild
mov
loop
rcr
adc
sbb
xchg
sbb
retf
sbb
test
inc
adc
sbb
mov
pop
mov
inc
rol
bnd
and
pmulhuw
add
fwait
pusha
pop
cmps
mov
cmp
adc
les
sub
adc
fld
es
lods
push
fimul
push
leave
cmps
lock
ins
inc
retf
(bad)
mov
pop
pop
jns
repz
sub
pop
sahf
popa
ds
cmp
adc
or
lock
adc
je
mov
pusha
stc
xchg
and
sub
jg
mov
aaa
sub
inc
jno
movs
int
or
mov
sar
push
push
cmp
rdtsc
mul
and
dec
icebp
mov
test
mov
inc
(bad)
aam
xchg
mov
jb
pop
push
push
ins
std
xor
sub
js
or
mov
mov
xchg
pop
xchg
adc
adc
sub
pop
ror
xchg
ds
adc
loopne
aaa
movaps
stos
sar
lods
adc
fwait
jl
in
popf
mov
into
fcomi
mov
adc
inc
mov
jnp
xchg
repz
xor
(bad)
repnz
pop
pop
ret
(bad)
mov
movs
daa
jl
sahf
scas
pop
jno
scas
cmps
jle
ficom
int3
aad
cdq
cmp
pop
pushf
out
ins
es
nop
loop
movs
push
mov
push
mov
ins
pop
xchg
fdivr
cmp
pop
mov
int3
mov
lods
adc
mov
test
stos
pop
es
imul
hlt
(bad)
inc
cmp
retf
popa
jo
push
xchg
inc
loopne
xchg
popf
sub
xchg
mov
sub
fimul
daa
xlat
int
sbb
cmp
inc
popf
and
js
jns
out
push
shl
mov
or
push
xchg
outs
inc
ins
add
mov
call
inc
outs
jae
cdq
dec
cs
cmps
retf
mov
dec
movs
pop
repnz
ror
outs
dec
jns
jmp
and
or
ror
lock
lds
cdq
push
out
push
lahf
xchg
adc
out
movs
push
imul
mov
push
add
add
stos
mov
inc
jne
dec
or
jecxz
sbb
fcomip
mov
cmp
ss
outs
cdq
xchg
movs
push
mov
mov
ror
inc
mov
iret
cmps
aas
pop
loope
adc
ins
movs
sti
inc
lds
fdiv
jge
cli
add
inc
rcl
cs
and
ja
(bad)
aad
sub
cmp
aas
xchg
stos
push
popf
pop
cmp
scas
lds
cmp
movs
mov
imul
pop
lods
fnstcw
out
xor
xchg
jnp
out
sub
mov
cmp
std
int3
out
jo
leave
add
xor
xchg
das
adc
adc
jns
and
cmp
pop
int
push
(bad)
fwait
xor
retf
popf
retf
pusha
test
and
cmp
mov
rol
test
pop
and
cmc
xchg
push
adc
and
scas
xor
and
xchg
imul
mov
cld
repz
repz
std
test
ror
aas
cmp
cmp
(bad)
xchg
mov
ins
or
push
cwde
das
push
outs
inc
retf
jmp
cmc
sar
in
arpl
jnp
pop
mov
jo
push
xchg
or
push
mov
fdivr
iret
or
cmp
mov
in
pop
in
(bad)
mov
jnp
lock
in
rcr
icebp
mov
nop
mov
fcom
mov
sub
rcr
push
mov
mov
neg
sub
xchg
gs
mov
adc
or
or
lds
jmp
jecxz
push
mov
aam
cmp
jle
mov
push
and
cld
xor
push
xchg
xchg
icebp
mov
mov
scas
xor
cmps
out
pop
out
dec
fwait
in
mov
jne
dec
jle
jno
or
mov
or
inc
paddb
es
mov
shl
push
enter
mov
aad
movs
xchg
clc
int
xor
lea
arpl
cmc
push
cmp
xchg
pop
(bad)
scas
imul
retf
sahf
fbld
movs
bound
dec
aas
scas
cmp
jno
iret
ja
adc
js
or
loopne
aaa
out
dec
and
mov
push
mov
inc
or
jmp
dec
fs
push
jno
push
add
int3
push
pop
out
dec
test
and
xchg
cmp
inc
mov
into
or
stos
or
pop
pop
push
pop
nop
dec
es
enter
mov
imul
sub
xchg
cmp
push
xchg
pushf
pop
add
xor
pushf
call
lahf
mov
ins
nop
mov
ds
(bad)
sar
xor
mov
repz
pop
mov
lods
inc
(bad)
imul
clc
imul
xchg
sbb
jmp
pop
mov
aad
popf
push
cmp
mov
push
call
mov
ror
jg
cmc
push
mov
cwde
js
mov
jns
js
aam
add
out
inc
jae
mov
enter
fs
inc
jnp
cdq
push
xlat
ds
in
xchg
je
pop
in
jns
or
bnd
aas
inc
fild
js
pusha
cmc
push
and
test
aam
in
cmc
fdiv
add
dec
or
outs
movs
mov
cmp
loop
lds
push
inc
push
dec
repnz
test
xchg
aaa
sbb
div
fwait
out
inc
outs
adc
mov
mov
(bad)
and
push
das
rcl
cmp
jle
or
or
sbb
in
or
inc
fldcw
loopne
rcl
fsub
dec
inc
xor
jne
test
fcom
test
imul
pushf
sub
xor
call
xor
shl
cmp
xchg
dec
push
dec
pop
test
ss
jno
pop
popf
pop
outs
repnz
adc
push
fcmovb
mov
scas
or
fwait
add
retf
in
mov
xor
xor
fadd
cmp
popa
and
cmp
mov
test
mov
pusha
mov
add
out
pop
sbb
pop
out
pop
loopne
outs
add
add
xchg
mov
inc
xchg
(bad)
dec
jp
push
xchg
or
cmp
cmp
or
stos
sbb
sub
loop
pop
adc
scas
adc
cs
cmp
or
cmp
inc
dec
xor
mov
das
inc
cmp
or
sar
ja
inc
push
dec
sbb
mov
dec
sbb
sti
popa
fidivr
lods
leave
arpl
cmps
mov
mov
adc
shl
call
fs
test
int3
sahf
cwde
xor
pop
xchg
xchg
call
rcl
(bad)
push
mov
and
cmp
test
mov
fwait
into
xor
retf
cmp
adc
imul
dec
cmp
test
iret
push
cmp
test
(bad)
sub
repz
div
xor
mov
xchg
dec
cmp
sbb
fsub
sub
pop
in
mov
mov
jnp
push
or
add
and
sub
mov
and
test
mov
repz
xor
push
loopne
xchg
jmp
repz
lods
lock
and
shl
or
push
addr16
addr16
call
(bad)
fcmovnu
test
cmps
inc
lahf
push
mov
gs
mov
pusha
scas
fldenv
mov
and
jle
and
cmp
popf
jp
sbb
xchg
repnz
scas
xor
inc
outs
jno
cmp
retf
and
and
mov
xor
bound
dec
xchg
mov
or
mov
cdq
call
adc
mov
loope
cmp
loope
pop
and
adc
(bad)
loop
sbb
pop
adc
adc
mov
ja
xlat
xchg
cmp
dec
in
inc
mov
shl
or
jg
pop
pop
in
in
out
push
mov
imul
rcl
test
push
out
jge
jno
mov
sbb
iret
adc
jecxz
adc
mov
pop
lods
dec
xchg
mov
adc
das
fcom
inc
push
jb
shl
or
fwait
ins
xor
push
and
cmp
adc
cmc
fiadd
jge
add
out
(bad)
xlat
into
outs
push
imul
sub
fs
loope
mov
sbb
sub
and
mov
adc
pop
sub
fs
inc
adc
into
leave
clc
xchg
sbb
mov
movs
sbb
fst
sbb
lock
pop
and
inc
push
cmps
pop
aaa
mov
sti
inc
mov
in
(bad)
jmp
loop
movs
sbb
js
lods
mov
mov
(bad)
neg
push
shl
lea
retf
sub
mov
jle
mov
iret
(bad)
xlat
fistp
and
into
in
sub
or
retf
sbb
sub
test
mov
ret
cdq
push
push
fwait
mov
xor
hlt
retf
cli
cwde
scas
pop
push
inc
sub
or
rcr
or
xchg
ret
lods
ficom
add
clc
out
sbb
pusha
sub
dec
fbstp
push
sub
pop
imul
les
mov
je
add
sbb
rcr
xor
cmc
lea
mov
mov
adc
add
leave
add
lahf
jns
lods
and
xor
jns
xor
iret
mov
jo
mov
inc
outs
(bad)
in
dec
outs
sbb
sti
stos
mov
les
cs
mov
mov
test
fstp
in
je
bound
enter
cwde
dec
adc
retf
cwde
and
push
cli
fadd
gs
shl
push
push
mov
pop
in
xchg
pusha
jmp
stc
mov
add
cmp
jnp
mov
hlt
jl
retf
arpl
pop
ret
sub
jmp
sbb
or
ret
mov
mov
dec
int3
dec
call
or
(bad)
aas
(bad)
pop
fsub
mov
daa
fs
fidivr
xchg
sti
mov
rol
fucomi
sub
and
jnp
test
(bad)
sub
fldenv
inc
cmps
add
es
dec
xor
pop
outs
mov
clc
pop
push
or
xchg
call
or
ret
loope
jns
enter
stc
inc
cmc
cld
dec
inc
mov
jmp
daa
aad
fdivr
inc
movs
jp
into
shr
lahf
cwde
repnz
jg
adc
adc
retf
pushf
pusha
sbb
in
jo
adc
mov
stos
mov
add
push
and
adc
outs
cmp
es
add
mov
ins
or
mov
mov
add
div
sbb
into
leave
ins
add
pop
pop
jmp
fisubr
mov
jecxz
in
outs
lods
mov
(bad)
outs
mov
retf
mov
aad
mov
call
sub
jbe
inc
cmp
imul
mov
inc
mov
inc
jnp
outs
jmp
ds
mov
add
jg
pop
jle
adc
lea
imul
pop
push
mov
dec
popf
sti
dec
(bad)
mov
cmp
call
(bad)
mov
add
lock
iret
sbb
cmp
ins
jle
sar
inc
sub
mov
jnp
ror
xor
cmp
fstp
dec
pop
daa
mov
mov
add
cmp
rol
xchg
and
(bad)
iret
cmp
cmp
add
pop
add
repz
mov
pop
jmp
mov
rol
xchg
imul
int
cmp
mov
push
push
mov
rol
mov
xchg
cwde
inc
shl
inc
es
mov
cs
add
dec
pop
mov
mov
xchg
repnz
mov
or
push
cmps
xor
or
pusha
sar
mov
test
and
ror
jmp
pop
loop
out
cmp
ja
rol
out
mov
sbb
xchg
cmp
out
cs
mov
in
in
pop
rcr
jmp
xor
add
inc
lods
push
cmp
adc
hlt
xchg
gs
rcr
lahf
xchg
arpl
arpl
leave
inc
adc
aad
dec
test
mov
push
xchg
sub
jp
daa
setl
and
lds
and
xchg
xor
bound
(bad)
ins
lods
sub
popa
(bad)
clc
cmp
into
and
mov
xchg
fbstp
xchg
and
addr16
ds
adc
jge
sub
mov
adc
rol
popa
push
sbb
add
xchg
and
(bad)
call
clc
or
dec
xlat
scas
loopne
cld
dec
into
call
mov
sar
ds
jne
(bad)
sub
xchg
sbb
clc
add
or
out
sbb
into
add
retf
push
sbb
retf
and
xor
dec
scas
sahf
add
and
push
popf
xor
inc
lock
fsubr
sbb
out
sub
sub
sti
stos
ret
mov
int3
sbb
mov
sbb
mov
inc
xchg
adc
sub
xor
sbb
fisub
(bad)
xchg
lods
in
lea
ficomp
fistp
lds
add
cmc
loopne
lds
push
sub
adc
bound
push
int3
daa
pop
dec
scas
xor
adc
stos
xor
test
cmp
sub
lods
or
jne
add
popf
cwde
repnz
or
inc
popf
xchg
or
inc
ret
loope
dec
push
xor
or
movs
adc
sbb
out
and
test
dec
or
gs
nop
mov
fwait
shl
shl
ror
xchg
adc
test
outs
and
lods
add
sbb
mov
stc
dec
pop
outs
popa
sar
cmps
lods
add
ins
inc
sbb
or
sti
push
cdq
icebp
in
dec
jg
mov
add
out
mov
push
push
pop
ss
and
pop
jl
rcr
in
out
sub
or
iret
ss
div
ja
adc
mov
adc
je
xor
push
push
jno
das
mov
push
sub
jl
xchg
dec
dec
in
and
xchg
rcr
stc
loopne
xchg
out
bound
loopne
fwait
(bad)
xor
inc
add
leave
mov
add
inc
out
push
inc
adc
movs
(bad)
sbb
js
push
js
addr16
nop
cmp
jnp
cs
push
lock
add
dec
sub
test
add
sti
xchg
xor
jl
rcr
sub
and
or
pop
mov
push
jne
jle
mov
inc
mov
jno
fsubr
mov
jmp
mov
je
cwde
cmp
ror
fild
push
mov
and
out
imul
loop
bnd
rol
out
push
fld
test
sbb
push
mov
pop
loop
cmc
outs
cmp
xchg
mov
or
retf
sbb
bnd
js
popf
lods
mov
and
lock
arpl
test
inc
sti
stc
dec
push
mov
ret
jo
sub
add
lea
mov
aam
(bad)
lods
int
push
pop
stc
shr
xor
rcr
pop
mov
add
mov
lahf
and
shl
push
gs
inc
int3
cmps
mov
iret
sbb
out
mov
sbb
fbld
add
arpl
jno
enter
mov
push
adc
call
mov
(bad)
rcr
dec
ret
add
jo
into
xlat
ret
mov
push
xchg
mov
push
push
shl
fsubrp
repnz
call
into
std
test
mov
push
sub
xor
es
jns
jmp
jbe
es
pop
jnp
mov
mov
add
mov
call
test
jae
xor
fwait
mov
pop
fbld
adc
stos
movs
pop
pop
mov
jne
add
or
add
push
and
stos
cmp
das
cmp
mov
jne
add
jmp
dec
inc
scas
cmc
sub
lock
mov
mov
daa
adc
jae
lahf
cmp
xchg
mov
jae
xchg
mov
mov
pusha
cli
test
mov
in
les
fdivrp
mov
push
sbb
xlat
fsubp
and
aad
js
(bad)
sub
cmp
movs
fldcw
repnz
jnp
inc
mov
outs
or
sub
cmp
popf
retf
je
test
cmc
push
rcl
adc
or
lods
popa
cwde
cmp
lods
and
aad
outs
jo
sbb
jno
inc
in
or
push
call
sahf
dec
jecxz
jl
loope
outs
sbb
retf
push
enter
mov
mov
and
pusha
out
sbb
retf
sub
add
adc
les
cmp
(bad)
and
mov
lahf
sub
xlat
pop
pusha
call
push
inc
inc
and
adc
scas
sbb
sar
and
stc
sahf
xor
stc
and
inc
inc
pop
faddp
addr16
out
(bad)
aad
in
imul
mov
mov
fdiv
jecxz
jnp
rcr
popf
inc
mov
not
ss
jmp
push
iret
dec
adc
push
repz
retf
dec
mov
nop
jecxz
jmp
test
iret
fcom
addr16
(bad)
jle
mov
sub
pop
es
dec
mov
and
ds
dec
sbb
jg
inc
or
mov
aas
jae
xor
pop
fild
xor
cli
push
ret
sub
adc
leave
add
xor
cs
ins
push
aaa
or
lahf
retf
sahf
repnz
push
jno
xor
jne
pop
pop
outs
mov
add
(bad)
div
pop
mov
mov
and
xchg
mov
inc
sub
test
scas
jns
and
cwde
jg
dec
jg
mov
or
adc
sbb
xchg
popa
add
or
push
(bad)
jp
pusha
xchg
xchg
out
dec
mov
(bad)
in
mov
in
xchg
aaa
mov
fnstsw
cs
cld
pop
sti
adc
or
adc
or
add
sar
fadd
out
mov
mov
gs
jno
outs
ret
mov
pop
xchg
mov
xor
dec
xor
jbe
ret
cmp
scas
xchg
jmp
scas
mov
stos
out
aaa
out
xchg
pop
dec
cmps
lock
or
and
pushw
sahf
xchg
mov
fnsave
in
and
out
xor
mov
imul
jge
cdq
and
scas
xor
dec
imul
push
(bad)
fwait
popf
gs
imul
or
and
js
loope
adc
out
std
out
addr16
dec
out
inc
and
mov
xadd
bound
adc
mov
(bad)
in
sub
loopne
out
jmp
addr16
sar
mov
inc
inc
cmp
jnp
sub
sbb
mov
mov
jle
stos
adc
and
xor
jo
push
adc
test
int
(bad)
retf
icebp
mov
loope
adc
xchg
test
mov
pushf
popa
lds
ins
or
cmp
cmp
mov
inc
sub
daa
lea
adc
fdivr
(bad)
jmp
popa
xchg
xchg
hlt
into
add
(bad)
jmp
xor
int3
stos
jecxz
enter
dec
inc
sbb
test
pop
fcmovu
bound
push
sbb
jp
repz
paddb
daa
pop
pop
lahf
inc
nop
jp
addr16
(bad)
fdiv
ins
dec
add
mov
adc
pop
fnsave
adc
call
xor
xlat
cmp
imul
mov
cmp
loope
in
add
xor
add
xchg
int
arpl
sbb
mov
fdiv
aad
or
push
and
sbb
mov
inc
xor
sub
arpl
jmp
push
lods
int3
in
adc
cmps
mov
pusha
xor
pusha
adc
fidivr
cmp
cmps
push
mov
fisttp
pop
dec
pop
dec
fs
ja
fnsetpm(287
dec
call
retf
adc
fild
pop
mov
test
sub
fs
cmps
lock
sub
push
sbb
dec
enter
add
hlt
push
jle
es
pop
xchg
out
lahf
push
je
push
lds
aas
jo
(bad)
gs
arpl
jno
outs
mov
xchg
xor
rol
mov
out
add
dec
xchg
adc
imul
fcmovne
scas
add
and
fld
sbb
or
test
jl
es
sub
rol
mov
push
ret
sub
pop
lds
out
fcomp
test
lea
ja
data16
(bad)
mov
out
aas
inc
cwde
test
mov
imul
mov
daa
jb
es
stc
xor
mov
lods
mov
pusha
xor
lods
sbb
test
push
aam
lock
js
mov
lods
sti
(bad)
push
xchg
shl
jbe
mov
jae
push
out
clc
mov
xor
icebp
cmc
sbb
es
loope
cwde
xor
repnz
cmp
daa
clc
add
mov
and
clc
sub
outs
sahf
dec
pushf
xor
jo
daa
adc
ins
shl
loop
aam
(bad)
in
pop
aam
popf
mov
nop
imul
and
in
sar
inc
test
inc
int3
xor
mov
push
mov
sar
(bad)
adc
ins
rcr
jno
sbb
call
shr
ss
and
arpl
dec
stos
dec
push
mov
jecxz
mov
mov
clc
jmp
in
dec
mov
stos
and
and
in
push
xchg
cld
mov
ins
jb
add
inc
sbb
cs
jbe
mov
in
js
(bad)
xchg
ds
popa
loope
imul
sbb
and
or
ret
xchg
sub
inc
dec
loop
cmp
lock
xchg
xchg
adc
cmp
enter
sub
movs
aam
hlt
mov
rol
jns
jmp
pop
sbb
mov
(bad)
cmps
cmc
repnz
inc
sub
mov
leave
scas
pusha
leave
cmp
aam
or
or
xor
and
mov
mov
inc
adc
inc
dec
push
push
int3
mov
fistp
cmp
push
mov
lds
(bad)
stos
cmp
std
es
xor
push
push
jnp
repnz
mov
shr
std
cwde
mov
inc
sub
add
xchg
jmp
dec
popa
cwde
dec
sub
sti
ret
lds
add
test
xor
inc
test
(bad)
jae
mov
inc
and
inc
mov
pop
int
jbe
movs
inc
dec
(bad)
(bad)
aam
jno
xchg
jle
es
xchg
jmp
into
pop
out
ds
cmp
popf
fdiv
stos
jae
inc
inc
psrad
dec
jbe
pop
rol
push
inc
std
shr
cdq
push
cmp
test
dec
mov
ins
xchg
and
loop
xchg
or
cmp
ins
pop
mov
enter
outs
add
cmp
arpl
cmp
inc
aad
cmp
or
fist
cvttps2pi
cmp
les
neg
add
and
mov
out
mov
sbb
dec
sbb
dec
xchg
call
aad
(bad)
aad
rol
neg
sub
mov
jo
or
or
lea
and
mov
mov
cmc
dec
fld
int
ja
cmp
(bad)
shl
gs
cmps
cmp
mov
sub
adc
stos
cmp
inc
repnz
xor
hlt
pop
pop
faddp
jge
xchg
in
adc
out
mov
loop
mov
mov
js
xor
jmp
or
pop
pop
cmps
sbb
xchg
inc
adc
(bad)
scas
adc
fcmovb
daa
push
das
push
xchg
adc
std
mov
cmp
pop
rcl
gs
xchg
add
xchg
(bad)
fcom
enter
dec
or
dec
inc
fisub
push
out
push
or
in
fcomp
mov
lock
je
mov
std
sbb
test
jbe
in
into
shr
(bad)
std
mov
jecxz
popf
rol
fs
ret
cs
pop
mov
dec
mov
push
pop
mov
mov
cmps
xchg
dec
nop
jecxz
adc
inc
rcl
in
(bad)
aam
inc
cdq
push
lea
fwait
out
add
loop
aam
inc
push
dec
mov
pushf
add
push
sar
xor
int3
mov
mov
loop
stc
push
jbe
jmp
or
push
and
jp
(bad)
sar
adc
aaa
xor
ja
movs
sti
mov
lea
iret
jle
adc
push
cmp
jg
pop
jns
jnp
mov
lods
cmp
and
xchg
jg
push
cdq
aaa
fcom
mov
lods
int
push
mov
cld
mov
pop
and
jo
stos
arpl
or
movs
push
and
lds
inc
ss
outs
ja
jmp
scas
cmp
test
movs
js
cmp
cmc
aas
iret
mov
push
pop
mov
add
test
arpl
inc
inc
jbe
add
sub
ins
jmp
int
push
lock
clc
xchg
sbb
inc
ins
pop
bound
push
sub
shr
cmc
pop
mov
inc
movs
jp
call
and
gs
mov
std
sub
sar
dec
xchg
dec
push
mov
fsub
adc
fimul
jnp
jno
into
ret
jns
mov
(bad)
psubsb
retf
mov
sti
jle
lea
dec
test
les
je
dec
idiv
aaa
stos
xchg
adc
fcomp
call
inc
push
test
mov
xchg
dec
dec
cmp
pop
inc
dec
std
sub
hlt
jns
or
or
or
jmp
jnp
in
push
xlat
push
repnz
adc
repnz
lahf
push
sbb
mov
xchg
and
call
jae
inc
iret
mov
fidiv
shl
jmp
aam
sbb
movs
and
popa
fadd
call
mov
nop
cdq
xlat
or
pop
inc
stc
xchg
jns
das
(bad)
mov
stos
shl
stos
xchg
hlt
push
cdq
push
inc
addr16
in
xchg
adc
adc
xlat
cmp
xlat
cli
jmp
mov
add
movs
rcr
and
push
stos
call
sbb
aaa
popf
adc
rcr
sbb
out
fwait
in
mov
fist
scas
loope
aas
jecxz
mov
pop
adc
push
pop
xchg
out
xor
lock
push
mov
(bad)
and
repz
xchg
xor
in
push
push
inc
jnp
pop
fbld
loopne
pop
test
push
xor
add
inc
adc
jg
repz
in
mov
aam
push
out
push
fwait
out
inc
movs
dec
aas
xchg
fisttp
mov
cmps
sub
leave
lods
add
shl
mov
mov
std
and
push
sti
std
push
push
cld
xchg
dec
in
pop
into
dec
add
ret
stc
jmp
add
sub
adc
inc
in
cmp
inc
lds
lock
push
popf
cs
mov
loop
adc
dec
fwait
jmp
loop
add
mov
mov
pop
mov
and
repz
sub
jb
pop
or
dec
inc
loopne
mov
inc
je
and
fsub
sbb
test
mov
mov
fdivr
loop
mov
clc
enter
jo
aaa
sti
call
(bad)
(bad)
push
gs
frstor
test
mov
cmps
outs
jns
aad
stos
jnp
add
movs
jb
sahf
or
cld
pop
mov
inc
ret
sar
xchg
lds
xchg
sar
mov
mov
sbb
adc
cmp
xchg
stos
push
mov
sbb
cmp
adc
cmp
add
xchg
mov
call
jns
sbb
jp
and
icebp
repnz
and
dec
(bad)
dec
lods
and
pop
icebp
and
mov
int
stc
inc
sbb
scas
mov
in
sti
pop
pop
mov
or
push
retf
jno
or
dec
in
cmp
mov
push
(bad)
lea
test
sbb
jo
gs
push
pop
in
ficom
mov
inc
das
lods
xor
xchg
push
shl
outs
xor
push
and
and
lea
test
sub
das
addr16
mov
call
retf
cmp
hlt
mov
dec
xchg
ss
out
stos
push
ret
and
stc
mov
mov
cmc
imul
mov
shl
jo
aaa
mov
add
mov
mov
xchg
push
cli
pop
mov
pop
mov
out
mov
sti
daa
pop
sar
aas
mov
xchg
mov
mov
in
jg
outs
adc
pusha
push
aam
sbb
test
mov
jge
popf
sar
push
cmp
cmc
scas
mov
dec
stc
xchg
mov
ret
loop
aam
lds
js
xor
sti
mov
and
sbb
mov
cmp
add
xor
cdq
js
mov
stos
add
jb
and
adc
mov
imul
test
pop
xor
jle
cs
jl
sbb
mov
scas
inc
mov
loope
add
sub
popa
push
inc
outs
xor
xor
sub
jecxz
inc
xchg
push
add
xor
rcr
sti
mov
sar
iret
mov
jo
test
mov
ins
mov
cmps
jecxz
mov
not
pop
cmps
xor
push
mov
pop
(bad)
neg
and
out
mov
popf
or
rcr
xor
(bad)
mov
bnd
xor
adc
imul
fnsave
xchg
jmp
cmp
or
movs
cmc
sub
mov
mov
in
sub
stc
fdiv
test
mov
mul
(bad)
fiadd
xor
xchg
arpl
addr16
idiv
cmps
mov
push
push
or
cmps
ins
int
(bad)
cmp
dec
fs
in
dec
adc
sbb
jns
mov
jno
adc
ja
mov
cmp
lea
push
add
ror
cmc
push
sti
in
lods
mov
add
fistp
mov
retf
loopne
dec
icebp
jnp
and
popa
xchg
movs
lahf
js
jge
pop
mov
clc
adc
or
into
scas
(bad)
outs
and
pushf
adc
icebp
dec
push
mov
pop
push
cmp
jne
mov
xchg
cli
in
mov
add
jae
xchg
imul
xor
mov
dec
inc
shr
int
daa
retf
shl
dec
div
xchg
push
xchg
das
fmul
add
jae
cmc
std
or
out
mov
push
sahf
mov
je
nop
cmp
je
xlat
cwde
sub
outs
xlat
xchg
xchg
pusha
lock
xor
imul
jbe
push
pop
xor
shr
(bad)
nop
retf
mov
(bad)
or
sar
jg
pop
inc
push
mov
mov
or
ja
(bad)
stos
fs
sub
enter
rcr
jno
cli
aad
mov
pop
fld
lods
shl
retf
out
xchg
cdq
cmc
iret
into
cwde
imul
jnp
push
or
xchg
outs
ds
mov
xchg
push
adc
cmp
and
stc
lahf
push
pop
and
(bad)
shl
stos
mov
pop
stos
or
daa
je
jp
lods
mov
sub
jmp
fidiv
cmc
mov
loopne
cmp
cmp
inc
fwait
shl
es
je
mov
in
add
mov
(bad)
mov
mov
shr
mov
sbb
js
pop
mov
and
mov
and
leave
mov
cmps
pop
inc
mov
jne
lds
arpl
cmp
mov
out
pop
mov
(bad)
fsub
and
rcl
add
or
in
push
xor
movs
jmp
stos
rcr
arpl
fdivr
adc
mov
push
es
dec
push
xchg
jns
sbb
cli
aam
arpl
mov
or
and
jae
lods
xlat
adc
mov
inc
push
ss
sbb
fnstcw
push
push
push
add
fistp
jbe
fs
scas
into
rcl
xlat
push
dec
ret
sub
jbe
lock
push
scas
xchg
arpl
int
inc
pop
cmp
cmps
adc
clc
and
into
rcr
mov
(bad)
addr16
xchg
add
(bad)
mov
push
mov
aam
jns
push
mov
sub
xchg
mov
addr16
inc
jns
icebp
add
inc
sbb
push
in
adc
imul
push
inc
sbb
popa
(bad)
jns
mov
out
push
cmp
sub
test
int3
test
pop
in
(bad)
mov
(bad)
lods
popa
cwde
push
aas
or
mov
sub
and
push
pop
jp
dec
xchg
cmp
int3
retf
pusha
(bad)
adc
or
and
push
loope
jl
push
cs
lods
rcl
dec
push
mov
lock
jnp
mov
in
leave
in
sar
outs
mov
ins
sar
jbe
pop
inc
mov
dec
xor
inc
push
xchg
rcl
jne
push
int3
popa
and
dec
jl
jno
jl
cwde
adc
fwait
and
fidiv
adc
lea
and
or
inc
stc
stos
int
jmp
stos
and
pop
aas
xchg
jae
fidiv
dec
cmps
fwait
sbb
and
out
mov
ror
push
cmc
test
out
xchg
data16
add
sti
test
fist
retf
imul
dec
or
push
push
cmp
lea
jb
ret
ds
mov
movs
movs
gs
jb
popaw
cmp
push
pop
out
xchg
inc
mov
scas
vminps
adc
adc
pop
fnstcw
fwait
cdq
jg
sbb
mov
jns
mov
pop
jo
mov
sub
jno
call
xor
dec
cmp
mov
pop
data16
sub
test
mov
mov
mov
(bad)
sub
inc
rol
xor
pop
push
xchg
sahf
shl
sub
je
xor
in
inc
cmp
inc
and
push
mul
xchg
clc
int
mov
sub
rcl
mov
sub
sbb
clc
mov
push
fldenv
cs
sbb
imul
ins
sub
mov
call
jbe
jmp
push
mov
leave
test
sbb
dec
and
retf
cmp
aaa
xor
test
dec
jne
stos
hlt
je
mov
das
xor
mov
lahf
mov
and
mov
jae
push
mov
jae
lods
popf
aam
dec
popf
pop
dec
fadd
xor
mov
mov
pop
cmp
xor
outs
stos
jmp
rol
push
mov
pop
jno
push
icebp
xor
rol
imul
call
loop
(bad)
jg
xchg
or
jno
sar
in
mov
mov
imul
jmp
xor
adc
mov
inc
jl
arpl
sbb
es
ds
pop
jp
sub
add
dec
add
loop
mov
mov
dec
or
loope
mov
clc
pop
in
(bad)
xor
(bad)
cmp
push
mov
cmps
or
add
dec
adc
adc
retf
jbe
fs
int3
xor
(bad)
sar
xlat
adc
pusha
adc
jae
rol
mov
ficomp
push
add
dec
test
ret
arpl
pop
dec
test
mov
paddb
mov
cli
call
jo
mov
(bad)
xor
loope
lods
dec
push
cmps
or
inc
mov
mov
cmps
sbb
dec
fwait
loopne
in
push
jg
pop
add
(bad)
in
mov
cmp
(bad)
je
lods
popf
ficomp
stos
mov
jae
cmp
scas
and
or
ja
in
(bad)
pop
dec
or
fld1
idiv
hlt
pop
pushf
out
mov
dec
add
stos
and
mov
ret
fdivr
aad
dec
(bad)
(bad)
xor
add
jae
add
xchg
fsub
cmp
repz
fild
mov
pop
out
es
popa
(bad)
iret
daa
mov
or
clc
fs
mov
lds
in
leave
lea
mov
mov
dec
push
jl
push
leave
and
sti
mov
fistp
js
fcom
cs
push
and
jne
and
lods
(bad)
(bad)
adc
mov
or
stos
push
xchg
adc
xor
xchg
and
push
pop
ror
and
push
push
jecxz
and
nop
mov
xor
and
mov
or
push
ds
cs
(bad)
adc
test
sub
dec
aad
lds
not
cmp
retf
in
loop
movs
xor
in
sub
repnz
xor
movs
and
jg
push
xchg
cmp
mov
xchg
xchg
xor
push
and
les
xor
imul
lods
xor
(bad)
inc
or
sbb
xor
and
push
adc
call
inc
cmps
dec
pop
es
lds
xor
in
les
mov
mov
inc
fwait
and
pop
fisttp
xlat
aam
fwait
lock
into
shr
or
aas
enter
and
fisttp
lods
xchg
push
push
cmp
or
jmp
adc
adc
push
or
add
mov
fadd
sub
(bad)
lahf
popa
int3
xchg
cmp
sbb
jnp
or
dec
inc
jmp
dec
adc
repz
nop
xchg
scas
aas
jbe
shl
or
test
lods
movs
push
cmp
adc
repz
(bad)
cmp
scas
stc
mov
fnstcw
mov
pop
dec
das
imul
sub
sbb
int
inc
jbe
div
push
push
inc
jo
movs
sbb
cld
cmc
cld
and
inc
enter
jne
xor
and
rol
push
cli
fidivr
add
repnz
mov
add
rcl
jo
fwait
add
scas
repnz
icebp
ret
aas
xor
cmp
hlt
mov
mov
pop
push
lahf
mov
cld
js
xor
fmul
xor
into
pop
repnz
js
shr
xchg
(bad)
sahf
lods
loope
ret
hlt
push
push
pop
xchg
sub
sbb
adc
xchg
leave
ins
adc
xchg
imul
dec
mov
into
sbb
push
adc
fcom
repz
xchg
ret
outs
repz
add
mov
cmp
xor
fst
ds
mov
sub
cld
add
mov
inc
mov
neg
sbb
jmp
pop
or
mov
push
fsubr
fidiv
jmp
or
dec
xchg
(bad)
jae
adc
loopne
data16
(bad)
xor
fld
xchg
pop
mov
adc
add
push
and
mov
cmp
pop
inc
push
jle
out
aaa
repz
rcl
ret
jecxz
test
scas
sbb
mov
(bad)
xchg
std
std
addr16
test
add
fsubr
cwde
adc
pop
in
inc
cld
and
icebp
and
mov
jl
(bad)
cmps
add
arpl
ins
outs
scas
scas
stos
mov
enter
sar
pop
clc
cmps
sub
push
jns
js
push
in
adc
and
fstp
loop
sub
sub
rol
popf
retf
cmp
xor
and
dec
jo
jl
jns
shl
sbb
cmp
dec
sbb
jno
lods
loopne
sub
cwde
dec
fsubp
xor
out
sub
arpl
(bad)
iret
fisubr
daa
test
repz
call
or
fsqrt
loopne
ret
cmp
lea
add
stos
push
stc
inc
lock
ret
adc
ja
mov
sbb
or
or
dec
and
pop
ins
sbb
xchg
repz
outs
mov
cmps
js
repnz
mov
jmp
pop
mov
jbe
sbb
ja
jmp
rcl
aad
adc
cdq
jbe
jle
sahf
jecxz
pop
cli
mov
add
out
rcpps
cmp
jmp
addr16
jne
pushf
cli
push
push
rcr
add
popa
jp
test
fwait
fwait
in
cdq
call
popf
rcr
sbb
bound
popf
mov
hlt
(bad)
sbb
and
jae
call
dec
inc
mov
fisttp
shrd
je
dec
xor
push
lea
stos
adc
jmp
je
dec
xor
frstor
sub
fcomp
sbb
cmps
mov
fbstp
rcr
gs
pop
dec
ins
je
and
push
mov
jg
hlt
jns
(bad)
push
test
push
lds
mov
mov
dec
pop
mov
enter
test
movs
sbb
dec
inc
push
popa
cmc
push
jmp
int
pop
xor
sbb
mov
xchg
cld
push
mov
add
sub
shl
push
pop
scas
push
mov
ficomp
mov
ror
mov
ins
je
push
rcr
pop
ja
xor
daa
push
pop
xchg
push
xchg
scas
stos
repz
or
imul
ret
ins
cmps
lea
fimul
out
jl
mov
xchg
mov
imul
push
retf
std
push
pop
loop
push
sbb
pop
push
leave
sar
shr
loopne
scas
pop
lahf
dec
clts
mov
icebp
sub
loop
test
push
push
xor
call
jmp
fadd
mov
retf
pop
add
mov
leave
(bad)
arpl
pop
pop
pushf
dec
cs
pop
pop
jne
iret
retf
clc
add
retf
inc
push
xchg
adc
repz
xor
mov
jmp
sub
scas
mov
jo
(bad)
rol
cmp
cmc
and
mov
retf
test
syscall
sbb
ds
clc
scas
fucom
add
cli
out
pop
dec
mov
mov
jp
mov
pop
push
inc
sbb
adc
or
sbb
jmp
mov
ret
adc
dec
xchg
sub
pop
add
(bad)
outs
dec
shr
cmp
(bad)
enter
or
mov
sub
sar
add
mov
mov
xchg
jp
stos
sbb
cmp
lock
jb
xor
out
and
xlat
add
hlt
push
iret
cmp
jno
jo
or
inc
arpl
fnstenv
dec
test
fidiv
mov
sbb
mov
shl
push
pop
scas
mov
or
das
ret
sar
adc
sar
pop
loop
arpl
or
sbb
sub
pop
fiadd
jmp
push
mov
sahf
push
mov
or
jle
retf
adc
repz
retf
cmp
lds
pop
add
push
cld
retf
lods
add
loopne
ja
sub
sub
pause
out
loop
dec
sub
lds
jg
mov
mov
push
rol
add
add
cwde
cmc
hlt
(bad)
xor
into
fist
(bad)
popa
cmp
cmp
int
pop
out
and
xor
lods
cmc
rol
nop
(bad)
lahf
mov
cmps
ds
push
sub
(bad)
cmps
pushf
push
add
dec
mov
and
cmps
mov
(bad)
fist
pop
cmps
xor
in
dec
shr
pop
xor
das
mov
mov
outs
xchg
fld
cmp
test
lods
mov
cmp
setae
jnp
loope
leave
sub
sbb
mov
or
dec
add
push
test
(bad)
(bad)
mov
(bad)
les
lea
in
lods
mov
jbe
add
jb
adc
push
sub
xchg
rol
rcl
mov
push
jge
cmps
push
rcl
jge
ins
rol
in
aaa
xlat
mov
popf
xor
cmp
push
sub
jge
sti
in
shl
addr16
and
jecxz
pop
cmc
pop
dec
popf
dec
adc
lock
sar
(bad)
cmp
loopne
loop
xchg
sub
push
ins
adc
dec
cmps
fistp
rol
cmp
inc
jmp
hlt
inc
add
or
loopne
push
mov
xchg
and
adc
call
mov
pop
jg
sbb
outs
in
inc
mov
out
mov
pop
fs
inc
adc
cli
loop
add
shl
std
pop
fst
xor
cmp
mov
(bad)
hlt
aas
jge
lea
xchg
dec
sub
mov
adc
retf
out
loop
or
(bad)
movs
(bad)
or
mov
movs
popa
xchg
aas
push
je
add
dec
inc
add
rcr
lods
sbb
(bad)
loope
repz
rcr
push
ds
jecxz
fnstenv
sub
rol
aaa
test
mov
out
loop
outs
jmp
sub
mov
dec
arpl
adc
cmp
lahf
xor
enter
clc
adc
cwde
outs
(bad)
imul
nop
das
mov
ins
in
lods
jmp
and
in
mov
mov
pop
inc
test
mov
mov
and
add
(bad)
aad
dec
fcomp
xlat
add
mov
dec
mov
xchg
cli
cdq
push
das
xor
xor
nop
and
push
enter
repnz
sub
hlt
ja
mov
in
adc
ins
or
and
push
cmps
(bad)
stc
(bad)
jo
xlat
mov
cli
ret
(bad)
icebp
jb
retf
fadd
sub
je
bswap
mov
or
sahf
cmc
out
and
fdiv
push
xor
enter
sbb
test
adc
mov
nop
jne
dec
mov
lea
rcl
push
mov
cld
and
inc
in
out
jnp
mov
(bad)
fcom
les
mov
or
mov
ss
ja
das
mov
push
aad
push
ins
push
sar
hlt
rcl
xor
mov
cmp
inc
push
call
dec
xor
sbb
test
test
xlat
xchg
loop
mov
mov
or
inc
xchg
sbb
out
add
mov
xchg
movs
je
sub
dec
icebp
push
cmps
mov
mov
cli
and
jp
es
adc
or
or
adc
mov
xor
jb
ret
aad
xor
jg
xor
shl
mov
test
mov
add
mov
mov
jb
xchg
sub
cmps
cwde
dec
movs
adc
adc
aad
cmp
call
sahf
sar
push
cmc
mov
xchg
jl
pop
stos
mov
mov
loopne
and
in
xchg
mov
out
push
pusha
daa
or
std
adc
xchg
adc
dec
(bad)
jecxz
mov
xchg
dec
jge
xchg
push
js
push
stos
jle
pop
call
in
adc
xor
repnz
sbb
xchg
inc
push
inc
ret
data16
test
rcr
cmp
and
xor
adc
std
and
ja
hlt
xchg
loop
mov
cmps
nop
sti
in
sub
shl
test
cmps
add
push
(bad)
mov
pop
iret
pop
xchg
xor
repz
fild
sbb
dec
sub
fidiv
xor
cmp
stos
outs
mov
mov
popa
mov
(bad)
icebp
retf
add
mov
xor
outs
pop
sub
cmp
stc
sbb
xchg
dec
fwait
ins
pop
pop
mov
mov
int3
cmps
or
xor
stos
mov
sbb
pop
cmps
fimul
and
sub
inc
cwde
movs
movs
pop
scas
in
std
sbb
xchg
ss
pop
sahf
or
dec
lds
adc
fist
fidivr
pop
sub
cmp
push
sub
jmp
xchg
pop
aam
sbb
push
push
mov
out
lahf
mov
and
fisubr
sti
or
shr
cmp
in
(bad)
rol
xchg
enter
jp
mov
xchg
mov
cld
xchg
cld
and
pop
push
mov
sbb
jle
and
xor
or
mov
into
dec
sbb
daa
mov
sbb
lock
mov
fcomp
sbb
push
(bad)
rol
bound
shr
sub
mov
add
test
mov
or
loopne
dec
repz
fwait
sbb
push
push
loope
aas
fnstsw
out
push
add
adc
loop
mov
leave
xor
je
outs
mov
arpl
psrld
iret
mov
div
mov
les
cmp
cdq
ret
xor
jge
std
mov
or
ins
cmp
add
out
dec
iret
push
jecxz
and
test
and
and
xchg
mov
int
dec
cmc
test
sub
and
inc
fld
dec
sub
mov
sbb
in
mov
push
loopne
popf
jmp
xchg
ret
or
push
std
out
jp
(bad)
cdq
and
mov
xor
xor
push
add
(bad)
(bad)
jp
ds
cmc
shl
iret
leave
pop
pop
inc
jbe
mov
push
jmp
sti
mov
adc
loop
lock
bound
cdq
mov
std
mov
jns
retf
and
mov
retf
imul
push
mov
aas
jb
sti
cmp
cld
rcr
jmp
inc
cmp
sub
sbb
pop
rol
in
jb
push
sub
imul
pop
inc
ror
loopne
lea
fstp
in
ins
xchg
jmp
pop
inc
mov
icebp
sahf
adc
int
mov
fstp
repz
lods
jmp
in
scas
cdq
jge
in
data16
cmps
out
retf
mov
push
test
mov
imul
sbb
adc
jb
popa
shl
jae
ja
xchg
inc
repz
adc
and
pusha
push
nop
sbb
adc
imul
js
add
bound
xchg
jg
inc
adc
or
mov
ds
lods
or
sbb
out
and
in
sti
mov
fs
scas
xor
cwde
bound
dec
jae
inc
xchg
lahf
repnz
aam
loopne
rcr
clc
std
xchg
sub
mov
outs
daa
(bad)
or
add
pop
nop
ret
push
sub
sub
or
scas
lods
les
or
ret
pop
call
outs
daa
pop
pop
and
cmps
mov
es
or
cmps
scas
xlat
fsub
clc
(bad)
jg
js
sar
push
je
mov
xchg
pop
sbb
cmp
mov
xor
aas
jne
jns
jmp
pop
arpl
push
jle
or
test
xlat
retf
fstp
cmp
jae
(bad)
das
dec
add
in
fadd
add
mov
mov
movs
jnp
cmps
mov
rcr
in
iret
push
rol
pop
push
repz
inc
mov
fwait
jle
cmp
callw
mov
test
lahf
clc
add
adc
jmp
fucomip
(bad)
retf
(bad)
mov
sbb
sbb
inc
cmp
out
mov
pop
gs
xor
lods
mov
push
lahf
cmp
or
mov
add
std
sbb
(bad)
cli
lods
ja
nop
in
jmp
movs
aaa
jno
call
inc
jmp
or
sub
out
sbb
pop
sar
mov
cmp
addr16
popa
sub
in
movs
dec
loop
cmp
adc
(bad)
pop
add
inc
cmp
push
outs
std
push
arpl
fstp
test
loopne
sbb
addr16
call
shl
stos
scas
dec
bound
sbb
out
mov
ror
lods
mov
inc
dec
adc
jecxz
mov
cmp
mov
jo
jne
lods
shl
mov
jbe
dec
retf
and
inc
mov
out
cmc
sbb
cs
sbb
mov
rol
mov
out
or
and
adc
loopne
cs
xor
aam
inc
psubw
loop
leave
push
mov
cmp
gs
ja
arpl
jne
jle
pusha
pop
ret
xor
das
ficom
leave
sahf
inc
stc
push
pop
shr
repz
jae
xchg
(bad)
mov
bound
daa
ret
or
xchg
add
push
dec
jmp
pop
sub
ret
and
repz
jg
inc
dec
mov
in
pushf
dec
movs
jbe
sub
fbld
jno
or
idiv
cmp
pop
sti
xor
in
rol
xchg
hlt
pop
call
jmp
(bad)
std
in
dec
retf
das
lea
add
push
stos
mov
xchg
push
out
mov
pushf
mov
nop
sahf
mov
sbb
cmps
sbb
adc
push
das
xchg
retf
sub
scas
pop
push
outs
mov
cmc
adc
push
push
cmps
xor
fsub
xchg
cmp
mov
call
jo
call
and
call
call
(bad)
clc
imul
imul
popa
cmp
push
xchg
loopne
and
int
jnp
push
sbb
cmc
inc
add
mov
les
add
mov
ror
mov
pop
jg
pop
pop
and
(bad)
jnp
loop
xlat
ins
and
add
test
jns
xor
clc
in
jg
cmp
std
cdq
xor
dec
movhps
leave
jg
adc
xor
xchg
test
cmps
ret
pop
xor
jns
jns
push
push
sahf
jg
push
mov
adc
ja
jp
imul
xor
push
js
fild
clc
xor
push
aam
clc
push
dec
inc
int
ins
xchg
je
imul
mov
mov
jmp
jecxz
mov
fs
mov
ror
adc
les
mov
mov
sub
arpl
mov
cld
and
std
icebp
sub
fisttp
dec
and
mov
gs
push
push
xchg
outs
lock
shl
sbb
push
pushf
js
or
push
and
jbe
in
dec
pop
push
add
add
call
jmp
in
aam
xor
js
add
or
mov
mov
int
outs
and
nop
js
xor
dec
dec
aad
loop
cmps
sahf
dec
push
cmps
pop
add
(bad)
push
out
sbb
sub
hlt
cmc
sub
fsub
ror
iret
arpl
mov
and
and
or
ins
cs
test
push
dec
mov
imul
(bad)
(bad)
fbstp
xchg
retf
cmp
ds
xor
shr
jmp
imul
xchg
pushf
cmp
in
cmc
jp
inc
mov
and
pushf
inc
cli
sahf
jmp
fwait
mov
(bad)
popa
mov
sbb
xchg
sbb
and
jmp
mov
jge
arpl
inc
int
cld
mov
das
xchg
fst
fsub
fidiv
xor
xchg
lea
retf
not
test
call
ja
repnz
idiv
ret
mov
(bad)
xchg
cmc
push
or
cmp
(bad)
adc
stos
inc
out
add
arpl
adc
je
(bad)
popf
aaa
int3
dec
jecxz
in
mov
mov
pop
jnp
adc
div
into
cmp
pusha
into
push
arpl
jp
jae
out
repz
rcl
imul
add
inc
xchg
lods
xchg
sbb
cmp
cld
push
scas
sub
(bad)
xchg
cli
in
lods
mov
out
out
inc
mov
adc
inc
aam
sbb
fld
xor
arpl
mov
arpl
ss
cmp
inc
mov
(bad)
fldpi
mov
ins
lds
push
std
loop
inc
fld
add
xchg
pop
pop
(bad)
cmp
rcl
jecxz
sub
mov
iret
inc
cmp
push
mov
je
add
adc
and
cmp
mov
add
data16
cmp
nop
and
jb
bound
dec
mov
mov
inc
data16
js
xor
inc
jmp
push
sti
or
sbb
mov
pop
mov
cmovne
neg
sub
or
cmp
cld
mov
cld
cmovg
sbb
cmp
addr16
jb
mov
iret
adc
jbe
shl
movs
out
mov
inc
jmp
out
outs
daa
fs
repz
(bad)
shl
lock
jno
cs
nop
syscall
aaa
jle
fadd
push
jns
add
sbb
add
push
add
jo
(bad)
bound
push
lods
mov
inc
call
scas
enter
push
ror
int3
repnz
jbe
jp
sub
cs
push
call
add
div
sub
out
inc
mov
add
or
mov
dec
fwait
pop
ins
lods
fist
jns
pop
jg
ret
inc
test
(bad)
mov
int3
out
dec
hlt
scas
or
xor
addr16
add
push
add
(bad)
dec
retf
in
(bad)
jmp
sub
aaa
inc
or
push
test
fwait
jecxz
retw
xlat
sub
xchg
loope
js
lds
out
pop
or
out
addr16
out
in
push
cmp
fs
sbb
sub
push
xchg
mov
dec
or
rcr
add
sub
xor
(bad)
aad
mov
jo
out
sub
jmp
lods
ins
fwait
mov
mov
sbb
fisttp
sbb
fldenv
lea
sbb
xor
xchg
or
fld
aad
cmp
and
stos
mov
and
movs
adc
mov
and
jae
out
(bad)
call
lods
retf
xchg
test
dec
(bad)
adc
jno
(bad)
mov
ror
pop
call
pop
cmp
mov
call
mov
jp
loop
movs
push
lods
pop
mov
pop
sbb
or
js
and
lea
adc
xor
mov
inc
outs
lods
aam
outs
inc
and
cmp
test
iret
jecxz
dec
inc
div
ja
and
stos
(bad)
adc
xor
mov
fbld
gs
shl
push
dec
push
adc
in
mov
jo
pop
xchg
jmp
dec
test
sbb
dec
(bad)
xor
cmp
outs
lds
dec
jmp
aad
mov
add
sub
les
adc
mov
cmp
push
int
xchg
packsswb
aaa
dec
mov
push
bound
mov
int
pop
mov
inc
xor
jbe
push
push
inc
mov
fstp
xchg
pop
push
jmp
hlt
int
cmp
xchg
jecxz
fcomip
fiadd
lds
cmp
or
fild
(bad)
sub
fist
xor
(bad)
cmps
add
dec
std
xor
inc
mov
xor
mov
xchg
les
jb
movs
jecxz
rep
add
inc
jge
mov
call
pop
sub
push
mov
sub
inc
mov
and
jmp
dec
adc
inc
out
xchg
sbb
or
shl
mov
add
(bad)
lock
xchg
push
or
sbb
add
jns
or
sbb
sub
or
test
aaa
add
les
iret
pop
push
push
or
mov
mov
cdq
sbb
sub
loope
inc
push
and
sbb
jl
sti
xchg
int3
adc
mov
jbe
leave
mov
dec
pusha
or
gs
mov
and
push
icebp
xchg
jno
mov
and
mov
mov
mov
leave
add
dec
int3
lea
push
mov
enter
repnz
xor
arpl
(bad)
mov
push
or
mov
je
loope
mov
pop
test
mov
nop
cmp
xor
push
jmp
cmp
sbb
outs
or
xchg
and
or
fst
ret
inc
test
adc
xchg
xchg
aad
neg
adc
jmp
mov
sbb
cld
cmc
push
ror
psrad
fidivr
shl
aaa
pop
mov
or
add
stos
js
mov
imul
lock
lds
or
mov
add
xchg
dec
div
inc
xchg
push
and
cmps
je
nop
xor
cmp
mov
xor
hlt
(bad)
jmp
imul
imul
jbe
jmp
pop
leave
cmp
jne
outs
sti
mov
frstor
movs
repnz
xor
ins
lods
int3
mov
imul
and
dec
dec
mov
add
jle
xor
repz
les
sahf
xor
rol
xchg
xchg
in
xor
and
ins
jbe
xor
idiv
repz
ror
push
in
fcmove
test
xchg
inc
ins
mov
movs
jns
imul
mov
outs
mov
or
ins
dec
sti
pop
dec
push
pop
jb
and
or
pop
repnz
cmp
loopne
adc
fs
es
and
xchg
fimul
sbb
or
sub
mov
or
push
add
jno
fmul
ds
hlt
pusha
rcl
and
add
in
(bad)
shl
into
xchg
adc
push
(bad)
outs
enter
std
jmp
sub
stc
gs
push
icebp
pop
outs
sub
xlat
pop
lahf
cmp
sbb
add
cwde
das
add
leave
lahf
imul
or
out
push
mov
sar
loope
xor
mov
sti
lahf
ds
sbb
xor
ja
popa
xchg
mov
mov
xor
cld
out
ficomp
pop
pusha
lea
call
test
(bad)
sti
and
xor
and
sub
add
repnz
or
pop
cmp
add
mov
pusha
adc
ret
into
aam
rcl
lds
xchg
cld
pop
jbe
sub
xchg
adc
add
pop
nop
jae
xchg
adc
lods
or
inc
sub
data16
ins
fwait
sbb
stos
cmp
jno
pusha
pop
jg
xchg
push
dec
test
in
outs
mov
jmp
and
and
out
in
addr16
mov
lock
push
cmps
sbb
and
rcr
out
xor
fwait
inc
test
push
xor
rol
jg
lods
mov
cmp
mov
not
dec
pusha
fstp
sub
movs
xor
fcom
aad
push
xor
and
rcr
jns
mov
mov
loope
mov
push
xor
loopne
dec
push
mov
jge
mov
push
mov
jmp
xor
push
cmp
cli
(bad)
fwait
pop
or
pop
jmp
inc
imul
pop
inc
movs
inc
xchg
je
mov
and
pop
push
pop
sub
jno
ins
xor
pusha
imul
sub
xor
test
mov
xchg
pop
push
cld
cmp
fst
inc
sbb
xchg
nop
je
pop
dec
jecxz
fimul
push
mov
sbb
push
push
or
mov
and
enter
adc
popa
mov
mov
and
xchg
test
and
xchg
cmp
and
adc
pop
adc
in
adc
aam
mov
and
push
dec
inc
cs
pop
xor
inc
stos
fistp
mov
xor
rcl
lea
fistp
rol
aas
lock
int3
sub
retf
mov
or
sbb
jp
cwde
pop
ins
std
clc
stos
test
(bad)
js
mov
jp
movs
and
ss
inc
or
push
cmp
les
push
es
ret
push
mov
push
xchg
push
popf
popf
ret
push
push
xor
scas
mov
test
jbe
pop
mov
pop
daa
lock
add
and
bswap
inc
enter
xor
ror
cld
call
xchg
mov
retf
push
inc
or
(bad)
int3
shl
jmp
xchg
ror
cmp
cwde
test
or
and
cdq
mov
or
dec
sbb
sub
ret
cmp
(bad)
jae
movs
or
(bad)
sub
in
mov
lods
test
dec
jecxz
nop
mov
aad
xor
cmc
jle
inc
hlt
mov
addr16
aas
test
xchg
fidivr
jmp
and
aam
sub
retf
jb
inc
jo
xchg
inc
outs
stc
ret
xor
loop
adc
mov
push
xor
fdiv
jnp
jmp
jmp
test
dec
sub
xor
or
pop
or
scas
mov
xor
xchg
inc
lods
test
test
push
ja
stos
mov
cmps
in
add
aam
or
icebp
xchg
out
jne
pop
xor
cmp
test
mov
adc
and
cmc
ins
js
bound
xchg
iret
push
sub
cmps
dec
xchg
push
shl
fcom
mov
repz
jbe
add
inc
sbb
movs
sbb
arpl
jno
jge
mov
mov
xor
daa
test
adc
mov
adc
rcl
inc
clc
jb
rol
addr16
ret
push
ret
pop
push
clc
push
mov
mov
pop
push
pop
jns
dec
add
mov
out
mov
mov
and
sbb
inc
xchg
adc
and
lea
mov
mov
jecxz
jecxz
dec
jno
fstp
mov
sub
cli
pop
ret
mov
dec
push
push
sti
push
pop
or
(bad)
mov
lock
xor
ret
movs
and
mov
mov
xlat
or
dec
mul
push
js
gs
xor
aaa
call
test
movs
cmp
sub
dec
jp
add
or
lds
shl
in
xchg
cmp
pop
int
mov
fucomi
jb
loope
pop
jbe
pushf
cwde
(bad)
retf
mov
mov
lahf
add
test
(bad)
(bad)
outs
lahf
pop
lock
bound
icebp
lea
cs
xchg
sbb
jle
ja
xlat
inc
jle
jb
in
pop
dec
icebp
std
mov
das
cli
cld
shl
push
or
sbb
(bad)
in
sbb
inc
cmps
test
sbb
das
xchg
test
popf
int
out
test
mov
bound
jne
add
dec
daa
call
rcl
movs
inc
sub
mov
out
rcl
stc
jle
sbb
mov
mov
mov
inc
out
mov
or
dec
inc
ja
and
add
test
jne
leave
lods
jae
cmp
outs
cmp
pop
sub
popaw
jnp
inc
popa
mov
or
dec
cdq
push
mov
push
(bad)
xor
dec
dec
mov
mov
(bad)
hlt
(bad)
ins
test
out
ret
sbb
test
in
ds
pop
add
mov
leave
sub
shl
add
or
bound
out
shr
xchg
icebp
repz
xchg
mov
cmps
aam
sbb
dec
(bad)
test
pop
push
xlat
pusha
pop
shl
into
ins
bound
cmp
ror
cli
and
push
sbb
xchg
(bad)
clc
(bad)
sub
fyl2x
sub
adc
scas
iret
xchg
push
sub
xchg
mov
(bad)
repnz
leave
xor
repnz
arpl
fild
dec
jg
in
les
stos
or
imul
cmp
movs
loope
dec
dec
aaa
cs
outs
mov
dec
inc
pop
icebp
pop
lods
sbb
addr16
out
adc
aad
into
popa
jmp
pop
adc
adc
xlat
aas
fisubr
xchg
inc
dec
sbb
mov
adc
ret
cmps
mov
dec
cmp
pop
jo
jo
in
pop
cdq
jnp
sbb
stc
add
clc
jmp
pop
sahf
mov
enter
out
std
mov
fist
fisubr
inc
push
repz
fdiv
(bad)
jg
pop
aas
in
sbb
fisttp
cmps
push
xlat
mov
push
mov
inc
sub
jecxz
xchg
mov
popf
adc
mov
hlt
add
test
mov
hlt
mov
(bad)
mov
or
add
dec
push
hlt
adc
in
xor
mov
add
pusha
push
std
(bad)
cli
(bad)
push
leave
cmp
mov
inc
mov
jmp
aad
out
xchg
or
pop
mov
movs
sti
pop
loope
aad
jns
dec
je
sub
sbb
(bad)
pop
aaa
lods
and
push
loop
mov
mov
dec
(bad)
ror
in
test
dec
push
aas
xor
mov
fidivr
ret
test
or
ficomp
or
or
or
adc
call
sar
mov
js
adc
adc
ins
xchg
push
sub
adc
out
jb
and
mov
rol
inc
(bad)
ins
loopne
fsubr
jg
scas
and
shr
fwait
mov
sbb
xlat
jne
cmp
cld
nop
dec
or
pop
push
aad
mov
jo
ins
mov
mov
or
cmp
(bad)
bound
adc
cmps
es
push
and
adc
xchg
in
enter
push
xchg
int
xchg
dec
sbb
fsub
or
fisubr
pop
imul
and
fwait
shl
dec
(bad)
jl
loopne
adc
mov
xor
pop
jae
jno
cs
ds
out
sets
mov
push
fist
dec
adc
retf
movs
stos
cmc
adc
cmp
sub
xor
sub
jmp
dec
mov
xor
push
mov
push
mov
xchg
mov
inc
pop
fadd
inc
mov
mov
mov
cmp
lds
repnz
sti
cli
fst
dec
push
bound
xchg
dec
push
ret
or
pop
and
cmp
scas
cmp
xchg
sbb
dec
or
aad
sub
adc
adc
xor
out
fdivr
push
cmp
aaa
jmp
xor
cmovl
xor
jle
cmova
mov
pop
push
inc
popf
mov
mov
mov
adc
popa
pop
(bad)
(bad)
and
pop
jmp
gs
pop
jmp
adc
add
stos
adc
imul
or
retf
sub
inc
mov
sub
popf
test
cmp
xchg
cmp
js
inc
or
fdiv
inc
mov
mov
sub
add
mov
dec
xchg
or
or
in
mov
data16
mov
mov
int
and
sub
aam
sbb
clc
out
mov
cmp
ror
add
add
nop
pop
lahf
cmp
dec
jg
jns
cs
mov
(bad)
pop
jle
mov
lods
(bad)
ror
xchg
faddp
outs
fs
fstp
jp
jo
test
add
pop
adc
push
loop
adc
ins
xchg
mov
sub
cmc
repnz
data16
inc
ficomp
xchg
scas
and
pop
imul
sbb
in
repnz
jmp
cdq
fstp
rcr
jae
pop
mov
jno
lods
bound
int3
das
into
mov
xchg
enter
pushf
pop
xor
or
gs
or
pop
fdiv
div
pop
lods
fwait
mov
pop
cmp
and
adc
loope
inc
scas
dec
das
shl
shr
cmps
pop
jmp
pop
jg
pop
sbb
xor
mov
fldenv
pop
pop
push
push
mov
mov
mov
retf
pop
jno
jl
sbb
stos
jp
mov
sub
xchg
xchg
das
rol
mov
or
sub
or
adc
mov
or
add
mov
call
or
jnp
addr16
jmp
and
out
xor
jo
mov
pop
lahf
test
adc
push
dec
scas
jae
out
cmps
xchg
repz
sub
repnz
push
mov
and
out
pop
(bad)
test
les
outs
or
dec
lea
mov
repz
jo
xor
and
pop
je
aad
mov
adc
ror
xchg
jbe
jge
sub
pop
xchg
push
dec
loop
scas
hlt
push
inc
mov
mov
or
pop
sub
into
add
add
sbb
adc
push
jnp
aad
pop
mov
iret
jno
cmp
dec
sahf
imul
push
lods
call
les
sbb
daa
pop
mov
xor
push
dec
data16
push
ud0
scas
scas
mov
es
test
inc
imul
cmp
cmc
fs
and
or
pop
cmp
mov
imul
jo
adc
push
mov
outs
mov
inc
call
adc
xchg
fdiv
pop
fcomp
push
push
mov
cmp
adc
call
cli
std
shl
dec
int3
mov
pop
(bad)
(bad)
mov
mov
pop
jnp
inc
mov
push
cmps
pop
inc
dec
and
mov
adc
loopne
fstp
sub
es
mov
cld
out
jge
out
inc
fcomip
and
dec
push
fdiv
cld
add
data16
movs
in
ret
nop
sbb
cs
(bad)
mov
sub
sbb
xor
add
push
bound
pop
dec
jnp
pop
pop
jecxz
(bad)
hlt
in
mov
adc
adc
(bad)
fldcw
bound
xor
xchg
ffree
pop
fmul
test
clc
gs
mov
push
cmp
dec
test
ins
cmc
jnp
ret
jmp
int3
jg
or
jge
repz
xchg
scas
ret
test
(bad)
add
aam
into
leave
mov
mov
gs
xchg
mov
loop
iret
call
jbe
and
dec
in
xchg
shl
mov
pusha
cli
call
(bad)
dec
xchg
add
pushf
jnp
push
xchg
cdq
mov
and
jecxz
fisubr
in
cmp
pop
sahf
cmp
fstp
icebp
leave
pop
lahf
(bad)
xchg
fnstenv
outs
pop
xchg
leave
fiadd
aaa
loope
xor
xchg
push
dec
ins
test
xor
inc
xlat
push
jge
cs
mov
inc
ficomp
push
lahf
inc
inc
xlat
adc
bound
out
push
jo
cs
loopne
pop
jle
cmp
(bad)
fdiv
and
sbb
xor
ret
mov
lods
into
mov
(bad)
lahf
mov
leave
inc
pop
push
and
jg
cmp
into
fwait
dec
push
sub
aas
pop
xor
xor
ins
cmps
xor
fist
dec
or
add
pop
jnp
(bad)
test
cs
repz
loop
xchg
ds
cwde
push
leave
ss
mov
mov
call
or
(bad)
aad
inc
sbb
test
test
push
clc
mov
xor
sub
sahf
arpl
ja
sbb
and
xchg
mov
retf
fcmovne
xor
pop
push
dec
fs
adc
or
push
mov
(bad)
data16
rol
fidiv
fcom
shl
xor
mov
mov
xor
(bad)
cmc
dec
dec
outs
in
test
mov
inc
mov
jp
(bad)
pop
outs
gs
gs
cmc
push
aaa
ret
pop
loopne
push
and
(bad)
jnp
and
dec
jae
retf
or
jmp
dec
ins
clc
les
cdq
shr
outs
cmp
sub
pop
call
mov
fwait
push
mov
nop
adc
mov
pop
mov
cmp
std
popf
sub
mov
in
popa
mul
add
or
sub
ins
sbb
jge
sub
pop
push
jno
cmp
mov
(bad)
in
push
and
pop
pop
push
xchg
ror
xor
retf
pop
and
xchg
(bad)
int
or
mov
cmc
xchg
cmp
push
jae
mov
shr
push
sub
adc
xor
movs
into
push
lock
xchg
loopne
adc
cmps
jmp
iret
dec
sbb
jno
not
repz
es
mov
ret
mov
clc
lods
and
jo
addr16
mov
cld
cld
cmp
pop
js
adc
imul
pop
pop
arpl
ret
cmps
pop
push
addr16
jl
call
jp
mov
imul
sub
(bad)
clc
shl
cmp
mov
push
xor
outs
std
jmp
iret
mov
adc
pop
fdiv
icebp
inc
jae
jb
popf
pop
stc
fistp
cmp
aam
push
in
stos
(bad)
push
pushf
loope
cmp
and
and
not
and
leave
movs
div
sbb
push
xor
fwait
data16
movs
iret
push
mov
in
xchg
cmp
adc
pop
movs
or
push
ret
push
out
rcl
sti
int
fisubr
cli
imul
jmp
out
cmc
push
xchg
dec
cmp
mov
popf
mov
jg
xor
std
sub
mov
mov
and
pop
dec
lock
mov
pop
nop
xor
pop
mov
or
nop
outs
inc
push
rcl
mov
push
mul
fwait
ret
jnp
aaa
stc
int
lea
std
loope
mov
inc
ja
sub
gs
iret
dec
cmp
sti
(bad)
adc
js
lock
ins
inc
scas
fadd
popa
in
mov
mov
jns
ret
stos
mov
jae
movs
je
out
inc
add
mov
neg
mov
jns
ja
mov
push
jnp
lock
ins
dec
push
jp
test
push
mov
lahf
xchg
rcl
xor
xor
and
test
lock
test
sub
test
cwde
pop
cmp
mov
mov
nop
(bad)
xor
push
push
jp
pop
xor
pusha
ss
xlat
and
mov
pusha
mov
cmp
fs
movs
into
mov
hlt
add
enter
pop
imul
loopne
xchg
test
sbb
je
pop
mov
cmp
arpl
ror
and
cmc
and
jns
sbb
rcr
fsubr
push
pop
fdivr
scas
pusha
xor
bound
pusha
mov
(bad)
and
fiadd
scas
add
sub
xor
in
fdiv
outs
or
shr
push
mov
add
cmp
adc
lds
call
push
adc
int3
lods
xlat
pop
or
adc
dec
sbb
pusha
cmps
jp
dec
mov
in
ror
dec
jno
add
fidiv
jnp
dec
pop
sub
lea
retf
int
cld
bound
mov
pop
or
adc
jmp
fisub
pop
lahf
fs
xlat
jbe
mov
out
mov
ins
rcr
pop
jp
(bad)
test
je
repnz
(bad)
push
mov
jmp
jbe
xor
je
lods
pop
ret
movsx
addr16
add
(bad)
sti
repz
dec
adc
add
sbb
inc
xor
bound
out
inc
mov
push
push
pop
mov
jno
mov
sbb
pushf
and
int3
mov
retf
rcl
test
lods
push
outs
push
fldlg2
movs
jae
in
xor
dec
jno
mov
inc
js
push
sub
lahf
mov
dec
(bad)
and
cmps
sbb
mov
pop
(bad)
data16
sub
mov
xchg
enter
sbb
cdq
int
and
ret
jp
stos
into
shl
push
cwde
icebp
es
inc
xchg
jb
rcr
scas
retf
mov
pop
xchg
inc
js
cmp
enterw
pop
mov
mov
cmc
not
hlt
add
std
jp
into
mov
dec
and
or
dec
pop
pop
aas
sbb
dec
inc
jp
aad
mov
nop
test
adc
sbb
dec
ss
test
adc
pop
cmp
fisub
mov
shl
cmc
stos
in
push
xchg
ins
ret
stos
add
ds
pop
jmp
mov
movs
in
push
je
and
std
and
repz
jecxz
push
dec
pop
pop
cli
js
mov
mov
sbb
and
lods
add
inc
or
inc
in
ja
pushf
test
aas
jb
das
dec
mov
cli
dec
push
lahf
scas
lods
pusha
jmp
or
aad
ret
(bad)
mov
mov
rcl
stos
xlat
loop
cs
mov
mov
hlt
out
and
xchg
(bad)
jno
jmp
jo
adc
mov
stos
or
stos
cmps
fsubr
sbb
stos
mov
out
push
fild
pop
std
hlt
push
sbb
jnp
repz
lods
std
ins
ret
or
push
fcomp
rol
enter
stos
xlat
retf
data16
lods
xchg
ins
outs
(bad)
js
cld
push
cli
inc
fist
cmps
pop
rcr
bound
cdq
cmp
sbb
mov
fmul
dec
addr16
fsubr
icebp
lock
xor
add
pop
dec
fidiv
in
add
jl
(bad)
shl
cmc
sar
or
xor
sub
pop
inc
fidiv
jmp
(bad)
adc
cmp
cmp
push
fwait
jmp
daa
repz
push
mov
sub
dec
(bad)
sub
inc
sub
mov
(bad)
fdiv
cmps
push
push
jmp
mov
outs
test
popa
fisub
sub
xor
imul
lahf
mov
mov
test
std
sub
pop
add
jl
nop
(bad)
mov
sbb
lods
mov
mov
push
std
icebp
xchg
push
ret
push
mov
fsubr
jbe
jp
sub
xchg
or
dec
shl
xchg
sub
fistp
pop
bnd
sbb
push
xor
ins
aam
and
jae
push
jo
jne
jle
dec
cwde
inc
jl
imul
ds
fcomp
dec
pop
gs
pushf
mov
jp
cmp
(bad)
shl
mov
mov
jle
out
inc
cmp
cmp
mov
pop
lods
cmc
call
mov
jle
lahf
and
dec
pushf
sub
inc
jmp
out
clc
pop
loop
mul
je
cmp
cmp
xchg
int3
push
in
jl
cmp
iret
into
mov
or
xor
movs
rcr
xchg
cs
xchg
lahf
mov
movs
imul
rol
or
add
es
movs
xchg
je
inc
jnp
push
lods
pop
adc
in
jge
push
pop
cli
fld
lahf
dec
ja
in
lahf
pop
int3
out
mov
push
ins
lahf
or
ins
sub
loope
clc
dec
cmp
leave
jbe
ins
add
ja
adc
add
mov
push
mov
cld
das
adc
add
out
mov
loopne
pusha
stos
stc
adc
or
push
sbb
pop
sbb
add
nop
retf
sahf
lahf
push
icebp
sbb
xchg
out
pop
ja
and
loope
cli
pop
mov
rcl
xchg
cmp
movs
out
jb
pop
inc
js
inc
mov
retf
(bad)
fild
mov
in
cmps
imul
sub
push
addr16
mov
inc
call
rcl
pop
dec
xchg
jp
dec
inc
mov
outs
xor
jbe
repnz
je
or
sahf
sbb
test
dec
inc
retf
xor
outs
inc
push
pop
arpl
cmp
xchg
jne
retf
les
fnstsw
les
sbb
das
cmps
fwait
retf
or
fwait
ds
aas
adc
push
sub
sbb
ds
or
nop
cmp
lods
test
push
ins
enter
mov
push
inc
cli
imul
lahf
movs
das
(bad)
cmps
adc
xchg
repnz
xor
jge
or
inc
jnp
cmp
inc
mov
lods
add
test
out
jno
sahf
test
cdq
sbb
scas
ret
and
push
jmp
adc
mov
adc
push
dec
int
scas
and
pop
int3
scas
push
or
ss
add
push
xchg
repnz
sub
sub
and
jb
mov
add
aad
(bad)
out
ret
stos
or
sbb
test
(bad)
call
inc
xchg
lods
sbb
(bad)
out
in
fdivr
mov
div
fisubr
inc
inc
cmps
and
pop
lock
fiadd
stos
in
fldcw
enter
dec
inc
mov
out
cmc
mov
jno
sub
pop
jp
push
cmp
adc
(bad)
rcl
imul
push
movs
sub
sub
xchg
sbb
movs
mul
jb
xchg
mov
jne
cmps
xor
(bad)
nop
sahf
(bad)
lock
arpl
push
lea
mov
add
jo
push
jo
push
ss
imul
retf
pushf
add
mov
fild
and
jmp
sub
fnstenv
mov
in
xor
sub
inc
inc
and
(bad)
push
loop
mov
ins
pop
inc
dec
pop
lgs
sbb
adc
jmp
mov
inc
mov
pop
cs
mov
xchg
lahf
pop
int3
call
popf
rcr
jmp
push
mov
cdq
fldenvw
dec
add
icebp
push
dec
push
or
dec
loop
jbe
mov
pusha
addr16
je
pop
or
xor
jmp
add
and
stc
les
pop
in
lds
retf
loope
mov
fild
mov
(bad)
and
mov
movs
iret
mul
mov
(bad)
int
or
clc
adc
and
pop
clc
xchg
nop
dec
xor
jmp
add
dec
fimul
shl
xchg
sbb
test
jnp
add
dec
(bad)
aaa
out
int3
mov
stos
loopne
push
push
mov
cld
mov
or
sub
dec
pop
mov
std
aad
rcl
xor
push
push
addr16
push
jbe
(bad)
imul
mov
(bad)
dec
mov
mov
xlat
mov
push
call
dec
inc
push
sbb
jge
div
adc
cmp
fisttp
xor
dec
push
xchg
xchg
push
stos
push
pop
std
aas
xor
cmp
fld
and
or
loope
loope
lods
fadd
test
retf
and
mov
cld
sbb
inc
mov
jnp
sbb
aaa
cmp
in
xor
or
lahf
mov
add
adc
add
sbb
sahf
mov
scas
xchg
stos
pop
xor
cmps
push
imul
cmps
dec
hlt
stos
repz
stos
(bad)
fsub
scas
nop
cmp
(bad)
lock
das
jmp
inc
ror
js
push
lahf
stc
(bad)
sub
sbb
mov
idiv
inc
retf
aaa
ins
cli
je
stos
or
mov
nop
adc
test
int
pop
data16
sar
mov
(bad)
cmp
adc
mov
mov
mov
test
lds
leave
ja
loopne
adc
pop
and
sub
add
sub
dec
dec
and
jo
dec
or
repnz
xchg
mov
cmps
sti
stos
jne
jmp
cli
loopne
adc
into
sbb
mov
sahf
xor
inc
out
ins
mov
adc
jo
cdq
cmp
sub
cmp
mov
mov
jns
or
xor
leave
xor
pusha
imul
xchg
mov
xchg
and
or
xor
jmp
dec
xor
inc
lods
into
xchg
jle
mov
popf
out
or
(bad)
xchg
pop
aaa
mov
fmul
inc
fdivr
sbb
pop
mov
loope
stc
jb
cs
outs
shl
push
jo
sbb
mov
cli
lods
push
inc
loopne
mov
ja
scas
xor
bound
push
pusha
(bad)
jl
xor
inc
sub
into
xor
aam
xchg
pop
dec
sar
cmp
mov
adc
xchg
pusha
sub
pop
movs
int3
bound
popf
movs
dec
in
das
repnz
adc
in
xchg
hlt
jb
out
inc
mov
mov
mov
call
(bad)
lods
and
and
push
dec
test
aaa
mov
xlat
mov
mov
add
fcom
cmp
sbb
and
lock
fs
mov
cmp
mov
xor
cwde
pop
ret
xchg
xlat
jle
jg
leave
push
jle
dec
hlt
jge
je
and
ficom
(bad)
(bad)
hlt
pop
push
movs
gs
cdq
call
bnd
xor
jae
push
pusha
mov
inc
ins
ins
pushf
push
xchg
dec
stc
cmp
mov
lods
stos
and
sbb
bound
xlat
pop
jmp
fwait
(bad)
jns
or
js
jl
retf
inc
pop
sub
fsub
nop
inc
jl
push
std
or
xchg
or
lahf
fiadd
adc
nop
push
mov
mov
xlat
adc
(bad)
leave
dec
aad
add
xlat
pop
xor
rcr
dec
xchg
adc
scas
stos
dec
push
jb
test
lds
push
cs
mov
neg
push
pop
mov
cli
movs
gs
test
in
mov
mov
push
popa
out
or
dec
or
mov
mov
push
ins
aad
shr
call
movs
pushf
aad
mov
inc
loop
call
xchg
pop
aam
push
sbb
dec
and
and
imul
loopne
xchg
lahf
mov
test
ret
mov
dec
inc
mov
mov
dec
inc
cdq
cmc
adc
ds
out
mov
dec
xchg
cli
test
shr
lock
add
mov
pop
sbb
and
daa
sti
inc
scas
pop
cmc
out
mov
lahf
jo
adc
push
push
mov
adc
jl
in
fdivr
jmp
ins
fs
push
adc
add
cs
pop
xchg
rcr
cmp
mov
sub
arpl
pop
jmp
lods
dec
mov
cmc
xor
daa
xchg
inc
adc
cli
push
push
sbb
(bad)
das
stos
xor
shl
pop
dec
addr16
push
sbb
inc
jmp
outs
rcr
or
jmp
inc
jns
loopne
jg
push
mov
rcl
dec
add
xor
(bad)
(bad)
sbb
(bad)
cs
lods
mov
les
in
sar
ds
loop
inc
xchg
adc
aas
cmp
adc
or
std
fsubr
aad
mov
daa
loopne
ret
mov
jbe
inc
sub
addr16
push
retf
(bad)
mov
add
jb
jno
inc
xor
out
bound
cdq
mov
nop
ins
push
push
sub
jge
pusha
sahf
mov
xchg
lods
pop
sub
int
cmp
ror
mov
xchg
or
imul
xchg
(bad)
ret
inc
xor
push
jmp
leave
jmp
jmp
gs
mov
xchg
dec
mov
push
sub
repz
out
push
mov
dec
inc
push
or
pop
add
or
xchg
stos
nop
push
gs
rcl
das
jne
pop
in
jo
dec
scas
pop
pop
(bad)
adc
sub
mov
pop
pop
in
jns
fwait
dec
pushf
inc
js
or
aad
call
xchg
jmp
sbb
inc
int
mov
inc
out
pop
stc
jae
cs
pop
sbb
cmp
xor
cli
jp
push
fnstcw
mov
push
jecxz
xchg
sbb
jg
imul
and
cmp
xchg
adc
mov
dec
movs
int
adc
mov
test
pop
add
sub
and
pop
aam
pop
add
mov
fwait
adc
setge
and
ret
jnp
sub
cmp
add
sbb
xor
scas
retf
xchg
mov
xchg
iret
not
leave
xlat
cwde
pop
push
or
ss
int3
cmp
push
jne
jne
loope
ror
inc
shl
out
push
retf
inc
call
jnp
mov
stc
mov
mov
fld
in
mov
xlat
out
dec
cmp
icebp
lea
cdq
sbb
mov
(bad)
rcl
push
ror
cs
cmps
call
cli
jl
sub
pop
sub
or
push
xor
pop
jo
add
int
and
fild
push
push
clc
in
jp
xlat
sar
or
add
pop
jge
es
cmps
retf
jns
cmp
lods
enter
iret
lock
adc
inc
add
mov
mov
ret
js
neg
ja
jmp
mov
pop
es
push
ret
jecxz
pop
int
adc
mov
jbe
sbb
inc
jmp
mov
cmp
sahf
or
retf
imul
nop
jle
xor
das
gs
and
adc
popa
mov
mov
jb
out
pop
int3
fs
rcl
shl
js
popa
jecxz
mov
jns
xchg
mov
nop
add
adc
mov
or
fdivr
pop
jp
mov
fwait
xchg
cs
mov
popf
idiv
add
or
sub
call
aaa
jecxz
xchg
int3
(bad)
fisubr
lods
jp
pop
call
dec
mov
in
leave
jb
cmc
jmp
xchg
xchg
dec
xor
ror
out
cmp
dec
dec
sub
inc
mov
pop
ins
pop
aas
or
call
push
dec
xchg
cmp
or
imul
aam
int
sbb
(bad)
and
xchg
dec
cmp
xchg
in
adc
xor
jnp
or
rcl
add
lods
or
lahf
pop
lock
int
mov
ins
inc
push
sbb
es
pop
aas
outs
(bad)
fnstcw
and
ds
adc
xchg
add
fstp
test
das
xor
pushf
neg
aas
hlt
das
cs
xor
add
adc
ss
test
add
cmp
mov
push
jne
aam
lahf
mov
into
xor
cmp
pop
push
sbb
fistp
mov
mov
cdq
das
jns
fstp
sub
test
sbb
fadd
mov
pop
xchg
loopne
add
into
or
aas
adc
sar
idiv
add
jno
push
cmp
sahf
loop
pop
push
jmp
fsub
push
sub
leave
or
cmp
push
pop
into
dec
sbb
sbb
and
(bad)
mov
aaa
xchg
gs
in
or
fimul
mov
adc
dec
inc
icebp
mov
mov
jle
mov
sub
fwait
mov
sub
in
jg
lock
ret
daa
fdivr
je
les
bound
clc
(bad)
mov
push
loop
and
fiadd
add
rcl
outs
stc
stc
iret
xor
inc
mov
pusha
dec
adc
(bad)
jecxz
inc
test
mov
mov
cmp
adc
(bad)
mov
pop
out
jo
adc
retf
mov
ins
inc
mov
pop
enter
add
loopne
les
adc
popf
leave
neg
ja
inc
xor
inc
or
push
adc
mov
addr16
or
and
repz
push
(bad)
scas
popa
loop
jo
clc
es
sub
cmps
stos
lds
push
sub
and
mov
jmp
jmp
in
std
and
sub
fdivp
rol
or
pop
call
scas
add
fist
push
add
lods
and
ror
aaa
or
and
xlat
das
xor
dec
scas
jmp
dec
out
cwde
sub
test
sub
lahf
add
sbb
sbb
pop
or
jns
push
jb
aam
repz
add
xchg
sub
and
mov
mov
retf
jo
or
and
arpl
sar
pusha
mov
push
pop
add
jge
ror
lahf
ins
ins
mov
cmps
mov
sti
rcl
add
mov
std
mov
test
(bad)
cld
pushf
imul
fistp
mov
adc
xor
(bad)
das
pop
mov
pushf
push
and
mov
(bad)
jmp
ret
fidivr
xlat
add
dec
jnp
pop
test
or
imul
push
mov
sahf
dec
in
les
ds
repnz
fs
or
adc
jle
cmp
xor
ins
push
jnp
or
pop
cmp
add
adc
cwde
mov
hlt
dec
sbb
push
test
movs
dec
push
scas
mov
cmp
and
in
ret
mov
je
popa
jmp
js
cwde
add
dec
push
arpl
mov
js
(bad)
ret
push
sub
arpl
es
mov
mov
aam
mov
ds
sahf
push
scas
mov
fdiv
pop
xchg
fmul
(bad)
aas
(bad)
fmul
pop
leave
xchg
outs
jmp
mov
sbb
out
sbb
sbb
sbb
or
or
mov
sbb
push
call
mov
xchg
ja
daa
pop
nop
mov
ja
jle
or
pop
mov
push
push
and
pop
pop
push
lea
push
and
(bad)
rcl
out
dec
out
loop
inc
hlt
mov
sbb
clc
xchg
retf
add
ja
ret
fidiv
and
mov
(bad)
jne
stos
pop
(bad)
adc
lods
mov
jno
pop
shr
xchg
mov
sahf
adc
loop
(bad)
(bad)
and
mov
inc
cmc
arpl
sub
dec
add
xor
mov
pop
stc
pop
jns
push
adc
or
cwde
scas
aaa
mov
test
addr16
sbb
adc
lods
add
jge
stos
scas
lds
mov
adc
mov
out
mov
cmp
aam
cmp
inc
in
(bad)
outs
clc
leave
ins
cmps
or
lea
mov
stc
inc
mov
or
jg
jmp
call
push
shl
inc
aaa
cmc
loop
(bad)
scas
int3
mov
sub
jg
aas
into
fwait
std
and
dec
xchg
mov
inc
inc
stos
not
retf
xor
imul
jns
dec
adc
arpl
popf
imul
mov
jg
jmp
imul
cmc
mov
retf
fs
dec
loopne
sub
pop
js
cli
cs
fisttp
sbb
mov
mov
test
mov
jbe
jns
adc
mov
or
inc
lea
fst
adc
je
adc
sar
jmp
fisub
cwde
mov
jg
cmc
repnz
add
js
(bad)
rcr
and
dec
push
pop
sub
xor
push
xchg
push
fs
inc
push
fisubr
or
mov
lods
ret
iret
out
add
dec
sub
mov
mov
push
dec
jecxz
jne
xchg
ss
clc
xchg
inc
data16
out
pop
(bad)
(bad)
or
call
inc
mov
and
push
jae
push
ret
std
movs
pop
jno
scas
into
push
cmps
mov
data16
and
dec
fcomp
mov
les
jne
push
cmp
loopne
es
xchg
movs
cmp
xchg
jp
in
push
cs
imul
(bad)
jo
or
jns
jmp
into
xor
push
out
into
or
std
enter
lahf
(bad)
stos
rcr
push
push
jno
int
xor
add
push
push
or
mov
fcom
lock
and
call
pop
nop
jo
sahf
dec
leave
pop
in
repnz
(bad)
fst
fsub
xor
and
std
mov
iret
scas
mov
scas
(bad)
sub
popf
(bad)
sub
xor
out
mov
daa
sub
lea
mov
leave
and
and
lahf
xor
rcr
add
cli
int3
movs
movs
mov
adc
fwait
mov
cld
push
shl
mul
adc
in
fst
out
clc
mov
fdiv
mov
in
pop
lea
and
mov
test
jl
lods
fs
push
inc
imul
sub
xchg
mov
inc
or
mov
into
cmp
dec
sbb
fnstsw
xchg
sub
pop
inc
sbb
pushf
test
cli
xor
in
and
clc
mov
(bad)
clc
push
sub
xchg
cmp
rcl
call
ins
imul
mov
cmp
dec
push
pop
or
add
push
std
iret
xchg
and
loop
mov
mov
(bad)
add
je
mov
std
mov
fcmove
imul
push
sbb
outs
enter
and
cmp
imul
fisub
sub
enter
les
pop
cdq
push
xlat
call
aaa
gs
and
adc
jle
fwait
pusha
loope
xor
mov
jge
rcl
dec
xlat
pop
clc
jp
shl
xchg
xor
jp
push
ficomp
jmp
movs
push
pop
(bad)
aam
and
mov
push
out
and
in
xor
nop
ins
popa
ror
jle
mov
xchg
mov
jbe
xor
(bad)
push
sti
mov
cmp
test
pop
push
sti
lock
ds
scas
stos
das
das
icebp
cld
daa
mov
dec
cld
and
imul
push
mov
jg
xchg
mov
lea
mov
(bad)
fmul
mov
leave
pop
pop
mov
loope
push
arpl
pop
mov
scas
aam
fmul
mov
fistp
mov
sub
jmp
in
adc
(bad)
sti
pop
xor
jno
iret
out
pop
(bad)
call
push
inc
(bad)
adc
int3
sbb
pop
sbb
imul
cmc
out
sub
rcr
data16
sub
add
scas
aas
sub
mov
mov
cmp
into
inc
fidivr
lock
scas
sbb
daa
xchg
xchg
inc
icebp
pop
int
fiadd
daa
or
(bad)
cmp
in
in
mov
mov
test
cmps
or
ja
outs
mov
mov
jecxz
mov
test
out
sti
sub
pop
rol
mov
pushf
cmp
out
int
or
iret
test
inc
pop
adc
mov
xor
dec
ins
(bad)
cmc
xchg
jns
outs
cmp
daa
jle
xchg
jle
push
push
pop
xchg
sub
add
repz
pop
call
aam
xor
jns
in
dec
(bad)
cs
std
cmp
dec
adc
inc
es
punpckldq
fistp
push
sub
sub
xchg
aam
mov
cmc
adc
and
imul
xchg
jae
in
jge
and
rcr
pop
mov
push
popf
dec
xor
mov
add
rcl
inc
push
(bad)
push
push
gs
xor
ret
xor
mov
or
icebp
adc
pop
pop
xchg
xor
push
and
fisubr
jb
xor
(bad)
hlt
test
sub
loope
inc
sub
jns
orps
pop
push
xchg
or
mov
ja
xchg
(bad)
rcr
xor
mov
fucom
dec
fwait
add
imul
mov
mov
fwait
xchg
stos
jl
or
test
cmp
call
sub
test
push
adc
push
push
js
pop
fadd
push
shl
shl
or
retf
push
sahf
and
daa
sbb
out
es
mov
je
or
(bad)
enter
mov
and
int
dec
pop
popf
js
pop
xor
das
hlt
std
mov
dec
test
inc
mov
mov
sub
popf
fs
inc
cli
fs
add
mov
jae
jg
ja
rol
push
inc
pop
push
fnstenv
xchg
test
retf
into
cmp
sub
out
ror
inc
(bad)
aam
xchg
pusha
pop
inc
pop
stc
arpl
push
shr
mov
push
push
ret
cmp
jp
imul
xchg
xor
push
mov
sbb
inc
int
daa
popf
and
add
inc
cmc
cld
scas
gs
(bad)
out
scas
mov
out
ins
sbb
ror
sbb
ret
mov
cwde
sbb
and
inc
push
and
jne
cmp
xchg
add
jecxz
test
es
cli
dec
jecxz
xchg
and
lods
aas
and
arpl
sahf
inc
fild
add
cmp
in
sbb
les
xor
stos
adc
push
mov
dec
jnp
jne
mov
jp
lods
in
ret
cmp
push
neg
pop
jmp
lea
mov
xchg
sbb
sub
sub
les
and
xchg
in
data16
cmp
push
fsubr
ret
cli
cmp
aaa
mov
popf
in
fwait
sahf
bound
aaa
call
cmps
hlt
(bad)
mov
jo
xchg
mov
cmps
mov
pop
mov
mov
jle
xchg
sub
ret
mov
adc
adc
xor
jo
fcomi
test
imul
add
sub
dec
call
mov
inc
dec
inc
mov
aas
push
leave
jg
jae
mov
fldenv
leave
inc
ja
cwde
adc
popa
cmovbe
hlt
xor
mov
xchg
xor
fstp
mov
ret
mov
loope
cmp
clc
mov
div
push
lea
test
mov
pushf
pop
inc
popf
addr16
pop
sub
scas
mov
test
xlat
mov
outs
inc
push
inc
pop
das
xchg
outs
push
mov
scas
or
inc
in
sti
cwde
adc
scas
xor
aam
sub
shr
add
repz
mov
ucomiss
hlt
inc
idiv
sbb
xor
inc
ins
adc
push
jecxz
sti
jnp
lods
push
inc
cli
in
cmps
cmp
jecxz
adc
mov
(bad)
jns
rol
mov
inc
mov
mov
sbb
ins
or
jo
push
cmp
add
xchg
nop
cmc
scas
sti
sub
mov
arpl
loop
sub
test
lds
mov
push
ret
les
test
je
ja
push
adc
or
sub
push
mov
or
fimul
dec
rol
int
and
pop
rol
adc
mov
jp
call
retf
adc
aad
mov
inc
mov
jle
ins
or
mov
test
call
retf
xor
sub
fcomp
popa
sub
imul
inc
cmp
idiv
jl
fstp
mov
sub
retf
inc
fwait
aas
mov
or
pop
repnz
mov
test
push
leave
push
cmps
out
cs
mov
shl
mov
pop
test
js
(bad)
out
div
cmp
jnp
cmps
(bad)
int
mov
pop
idiv
(bad)
aaa
je
icebp
aaa
dec
ret
xchg
inc
imul
adc
enter
mov
push
cmc
dec
xor
adc
ret
dec
push
aad
adc
cs
or
xchg
mov
jle
int
iret
loop
adc
sub
rcr
cli
add
(bad)
push
xchg
rol
es
rol
jne
mov
jns
cmp
inc
mov
shl
enter
pshufw
arpl
inc
int
in
in
jl
mov
pslld
retf
jge
pop
test
call
xchg
dec
aaa
sbb
jp
add
or
pop
xor
pop
dec
sub
xor
cmp
xor
or
ins
pop
push
test
(bad)
jmp
jmp
jae
mov
(bad)
in
jbe
add
xchg
sbb
(bad)
jg
sti
mov
hlt
xchg
rcl
les
push
jg
test
jecxz
scas
pop
sub
pop
sub
and
sub
jns
jae
add
lahf
jns
add
aas
mov
sbb
sub
test
and
inc
repz
rol
jmp
data16
gs
mov
adc
movs
xor
dec
outs
mov
mov
retf
loop
int
fwait
popf
and
pop
(bad)
jne
aad
addr16
inc
mov
sbb
and
push
mov
dec
dec
icebp
xchg
mov
mov
xchg
inc
fdiv
pop
test
ins
shl
pop
retf
mov
aas
or
pop
lods
int
pop
add
fstp
sub
jp
push
mov
pop
shl
push
jae
cmp
enter
cmp
sub
aad
inc
dec
pop
cmc
push
or
pop
cs
cwde
mov
add
(bad)
aam
and
dec
add
dec
pop
jle
sub
pop
sbb
push
inc
xor
mov
jmp
cmps
push
dec
lods
in
xor
mov
std
mov
mov
popf
and
ja
test
xor
aaa
dec
mov
in
(bad)
clc
xchg
inc
or
ds
pop
idiv
xchg
mov
out
aaa
les
xor
out
cld
aas
sbb
mov
jecxz
outs
or
popa
rcr
sahf
cmp
in
xchg
dec
leave
add
inc
mov
sbb
in
test
lods
add
cmp
push
pop
sbb
addr16
jle
(bad)
cdq
shl
cmps
mov
push
les
jg
out
rcr
sub
inc
fwait
mov
sbb
xor
cs
fnstcw
and
push
jns
vpmaxub
sub
popaw
rcr
adc
jnp
in
inc
add
sub
lods
pop
xchg
jmp
xor
mov
cmc
and
cmp
test
loop
mov
ins
repz
and
jmp
cs
jo
inc
mov
or
push
or
xchg
mov
and
or
jmp
aam
inc
mov
xor
loopne
jno
and
xchg
call
push
mov
jbe
pop
sbb
inc
std
xchg
mov
fbld
loope
and
inc
jnp
iret
stc
cwde
mov
or
div
xor
imul
mov
ins
lods
lahf
mov
repz
(bad)
sahf
inc
in
sbb
jp
jle
pusha
cmp
inc
xchg
add
sahf
fcomp
inc
pop
xchg
mov
xchg
outs
xor
neg
lock
mov
std
lahf
nop
out
dec
xchg
outs
mov
ret
cmp
dec
scas
sahf
nop
xchg
sub
stos
push
fdivr
push
addr16
(bad)
push
pop
ss
stos
xor
add
es
inc
(bad)
dec
cdq
enter
out
int3
xrelease
xor
cli
jp
push
sar
mov
movs
or
mov
adc
mov
mov
stos
scas
not
push
dec
sbb
mov
xchg
popa
leave
lock
sahf
(bad)
cdq
in
mov
lsl
xchg
or
ficom
leave
sub
mov
in
je
push
loop
ret
arpl
adc
cmp
xor
xchg
jmp
seto
rol
ror
mov
aas
out
xor
cmp
movs
jnp
loope
or
ins
jecxz
in
div
xor
out
mov
dec
push
adc
sub
push
inc
ss
pop
mov
pushf
iret
retf
mov
leave
sbb
pop
lds
vpxor
jmp
(bad)
jp
inc
add
jae
out
mov
add
fwait
ss
inc
mov
pop
leave
in
daa
mov
xor
jnp
(bad)
cmc
xchg
dec
repz
out
inc
sub
dec
or
jb
mov
or
or
or
je
into
dec
shl
movs
pusha
adc
rcl
xchg
es
jmp
fimul
ret
sti
mov
xchg
(bad)
(bad)
jnp
cmp
push
mov
lahf
lods
dec
mov
and
(bad)
adc
ficomp
dec
ret
fnstcw
ds
cmp
cmc
ret
popf
pusha
adc
hlt
pop
push
lahf
ret
ins
add
mov
shr
pop
dec
sbb
xchg
fs
sub
adc
dec
imul
cmps
push
adc
rcr
inc
sbb
pop
mov
push
cdq
mov
sub
push
rol
retf
fidivr
imul
mov
lods
push
mov
bound
mov
mov
clc
shr
and
popf
sbb
into
xor
dec
cmp
mov
and
stc
inc
pop
jg
shr
imul
jge
pop
or
mov
scas
adc
lods
test
add
rcl
pop
inc
pop
into
mov
stc
xchg
fsub
mov
or
sbb
idiv
sti
jae
clc
ins
call
ins
retf
sbb
sub
cmps
xchg
adc
mov
pop
ret
jne
push
push
or
jl
imul
adc
cmps
in
aad
add
mov
(bad)
fcom
mov
pop
or
mov
loop
push
inc
inc
push
cld
push
or
or
shl
push
(bad)
aad
js
lods
dec
je
in
mov
jmp
std
lea
dec
xor
mov
je
dec
out
jnp
pop
jno
cmp
shl
add
outs
iret
xchg
mov
adc
pop
jbe
sbb
icebp
cmps
hlt
jns
push
pop
sub
adc
xchg
ss
mov
cmc
outs
adc
scas
sub
xlat
fst
retf
sbb
mov
add
shl
pop
jnp
mov
leave
sub
dec
xor
js
sbb
jae
xchg
sub
or
iret
(bad)
and
inc
out
sbb
cmps
jo
mov
xchg
psubsb
xchg
ins
xchg
add
pushf
cmp
cli
cdq
adc
mov
retf
sbb
dec
mov
gs
fs
sbb
adc
hlt
add
dec
cmp
xor
sub
sub
popf
and
hlt
loop
ud1
or
inc
xchg
cmp
fmul
loopne
mov
adc
aam
xchg
in
push
xor
data16
xor
loop
fsincos
add
out
jb
mov
mov
jmp
jge
retf
adc
gs
push
call
add
dec
(bad)
nop
pop
mul
xor
add
sub
and
jns
sti
add
fsincos
add
or
test
or
sbb
movs
jecxz
nop
(bad)
fucomip
adc
xchg
fstp
pop
mov
rol
ins
xchg
pop
maskmovq
test
fistp
pop
call
arpl
sbb
enter
(bad)
xor
pop
jno
clc
and
lods
inc
fs
clc
adc
bound
jae
aad
push
movsx
loop
cmp
push
xor
icebp
pop
or
jp
ds
movs
aaa
ds
push
pushf
aaa
into
sar
jl
xchg
bound
adc
sub
loopne
adc
ins
mov
(bad)
stc
jo
xchg
cmp
adc
call
pop
add
push
cmp
jne
cmp
out
outs
adc
fsubr
xor
jo
mov
ret
and
sub
nop
fucomi
xor
fstp
pop
pop
hlt
cli
cwde
and
fmul
xchg
xchg
imul
xchg
loope
aaa
mov
mov
mov
xchg
es
addr16
mov
jge
in
sahf
(bad)
stos
enter
rcl
sbb
js
nop
dec
les
mov
xor
popf
push
cmc
xchg
outs
adc
ss
(bad)
push
cdq
les
mov
fsub
lea
mov
sbb
icebp
ret
sbb
and
jge
loope
fldenv
nop
ja
aam
pop
ror
lds
outs
not
push
lock
inc
daa
dec
add
push
jnp
outs
(bad)
mov
mov
pop
or
push
je
int
std
jb
shr
cmps
adc
push
inc
test
rcr
imul
inc
outs
inc
inc
popf
xor
in
mov
jno
jl
or
jae
outs
leave
lock
std
and
mov
inc
test
xchg
std
or
(bad)
mov
ret
outs
cmps
push
adc
mov
shl
out
add
lock
xor
mov
xor
push
xchg
int3
cmp
dec
mov
stos
or
inc
mov
test
jnp
aaa
push
lods
push
inc
out
jbe
rol
jl
jb
xchg
je
adc
stos
popf
adc
(bad)
dec
test
add
mov
jecxz
adc
pop
push
test
sar
pop
dec
xor
or
out
ror
js
out
les
push
cs
out
or
jb
cmps
add
cmp
or
(bad)
or
fbld
xchg
mov
adc
or
inc
cmp
jns
das
dec
les
mov
fnclex
push
mov
add
mov
and
lea
dec
xor
das
daa
inc
mov
in
cmp
(bad)
xor
in
and
fsubr
in
out
sub
out
and
in
fisubr
ds
adc
inc
xchg
fsub
jl
push
and
pop
cmp
popa
inc
xor
imul
or
in
mov
or
pop
add
xchg
mov
mov
sti
xor
push
lods
lds
ud0
in
jbe
call
jns
ja
movs
jmp
pusha
pop
or
repnz
sar
imul
loop
pop
sbb
mov
rcl
ror
and
repz
loop
(bad)
xchg
push
std
jl
movs
push
cmp
pop
mov
xor
(bad)
outs
adc
cs
lods
daa
push
push
movs
sti
jno
call
push
adc
add
das
dec
addr16
push
test
and
inc
jg
loope
mov
sbb
xchg
sub
dec
pop
fsub
into
sbb
hlt
mov
mov
mov
pop
sbb
push
cmp
push
popa
mov
stos
shl
and
pop
sub
(bad)
dec
pop
ins
push
dec
and
out
xchg
adc
or
mov
sbb
or
test
stos
and
ret
stos
push
inc
dec
iret
aam
or
mov
dec
mov
iret
xor
adc
adc
ret
test
mov
sub
push
fsub
sbb
lods
add
mov
pop
rol
mov
mov
cmp
xchg
cmp
cmp
jmp
add
jo
mov
xchg
xchg
adc
inc
dec
push
call
lahf
jl
fcmovu
add
cli
xor
pop
pusha
jge
pop
adc
cs
adc
adc
jmp
lods
outs
cmp
push
cli
sub
push
cdq
lds
out
cs
push
pop
xchg
and
clc
xor
or
fadd
inc
adc
fadd
mov
sar
push
jno
adc
ds
ret
sub
push
pop
je
xor
cmp
ret
jbe
in
pop
add
int3
push
jmp
nop
mov
stos
fstp
das
pop
pop
and
jle
sub
aaa
and
mov
pop
mov
push
push
xchg
(bad)
jp
(bad)
cmc
dec
xchg
pop
cmp
xchg
mov
pusha
je
fs
test
mov
in
xor
call
(bad)
mov
and
ds
cmp
xor
pop
mov
push
cmp
fimul
lods
xchg
mov
test
popf
mov
cmp
xor
pop
std
jno
out
mov
movs
popf
xor
add
add
call
ror
add
in
cwde
xor
sub
movs
scas
imul
pop
xchg
lea
sbb
mov
mov
jmp
mov
aam
push
into
out
mov
add
xchg
and
in
jg
push
adc
call
aad
sbb
daa
jnp
adc
retf
and
std
test
push
xchg
push
sbb
jo
ficom
ret
imul
mov
pop
cs
dec
jbe
jmp
lods
es
dec
mov
mov
sbb
aad
cmp
or
or
ins
aad
pop
jmp
push
repnz
add
cmp
test
and
stc
movs
mov
add
mov
int
or
sub
jnp
push
mov
mov
dec
(bad)
inc
mov
ja
mov
pop
xchg
stc
mov
jmp
retf
cmp
test
js
inc
inc
pushf
jne
cli
and
mov
xchg
dec
add
sub
pop
mov
xor
repz
adc
mov
lea
je
js
or
jg
mov
cmps
or
aad
jb
imul
sub
push
add
push
cmps
dec
mov
push
shr
mov
mov
mov
sbb
mov
pusha
add
das
xchg
dec
mov
ds
and
arpl
shl
in
inc
pop
xor
fnstenv
xchg
or
(bad)
adc
std
aam
fs
jae
jmp
push
push
fistp
cmps
jbe
or
push
jns
shl
outs
shr
pop
xchg
aas
repz
ret
add
adc
test
push
js
inc
cld
into
cmp
(bad)
test
not
sbb
xor
push
mov
pop
icebp
or
sbb
mov
dec
test
xor
sub
inc
outs
loop
ins
push
ins
mov
adc
mov
in
xor
or
imul
ret
pop
lods
add
hlt
cmp
or
nop
outs
adc
sti
xor
popf
idiv
test
inc
sbb
sbb
enter
xchg
mov
jbe
sub
xchg
loop
pop
into
mov
mov
push
cmp
in
adc
cmp
xchg
(bad)
into
ficom
std
inc
mov
leave
mov
mov
mov
addr16
test
ret
jb
rcl
mov
bound
pop
(bad)
mov
stos
shl
fild
test
test
lods
cld
xor
mov
call
movs
sub
mov
sbb
adc
jp
out
in
xor
lods
out
or
arpl
pop
push
sbb
push
scas
into
cmc
sahf
or
mov
mov
inc
call
mov
(bad)
cmps
lods
sbb
cmp
(bad)
ds
stc
rol
sub
int3
xor
dec
sbb
sbb
leave
aaa
nop
pop
xor
retf
pop
jns
ds
(bad)
xor
(bad)
icebp
daa
ins
xchg
loop
stc
xchg
sbb
fild
push
sbb
retf
or
mov
lahf
sub
xlat
js
cmp
xor
add
sub
sbb
sub
(bad)
ins
arpl
iret
repz
push
add
push
(bad)
lds
repz
clc
ret
add
push
adc
jmp
adc
sbb
aas
data16
call
fldenv
and
cmps
hlt
lods
(bad)
xchg
adc
das
pop
(bad)
sbb
cmps
call
arpl
aam
xchg
add
retf
add
aaa
mov
and
sub
mov
fs
pop
enter
dec
pop
mov
movs
(bad)
cmp
add
in
cmps
rol
test
cmp
bnd
cmp
xchg
jmp
cmp
jb
push
(bad)
cld
lods
into
scas
mov
clc
adc
jne
xchg
xchg
in
xchg
clc
adc
loope
pop
and
push
xor
xlat
hlt
idiv
rcr
add
test
pop
mov
inc
xchg
mov
cld
fcom
mov
lahf
xchg
sbb
repz
jb
popf
add
push
sbb
es
push
inc
ds
in
mov
cmp
or
icebp
push
mov
pop
cs
ins
loop
push
xor
adc
push
pop
mov
dec
pop
xchg
mov
loop
cmp
js
xor
in
int3
mov
or
(bad)
xor
out
out
scas
popa
and
or
ret
pop
mov
or
in
push
push
xchg
(bad)
out
and
xchg
ret
out
adc
xchg
iret
stc
xor
icebp
add
jne
sub
dec
inc
cmp
ins
pop
jg
push
add
push
jmp
mov
adc
push
aam
pop
fadd
scas
test
ret
test
and
sub
mov
retf
sti
push
mov
mov
mov
icebp
outs
mov
jmp
das
lods
je
or
mov
mov
int3
cmps
xor
imul
and
jo
in
ficom
ins
add
fstp
cdq
xor
or
dec
jae
adc
jg
push
pop
push
cmp
mov
repnz
dec
xchg
xchg
adc
cmp
pop
test
fstp
(bad)
das
imul
push
outs
aad
xchg
psubusw
jle
pusha
jnp
lods
fisubr
js
add
and
outs
dec
sub
icebp
push
data16
or
inc
xor
mov
adc
pusha
sub
xor
sahf
arpl
sub
sbb
addr16
push
add
cmc
callw
aad
gs
outs
or
cld
lahf
dec
and
and
les
iret
icebp
or
mov
dec
ret
ss
scas
mov
pusha
cmp
push
sub
add
loop
adc
or
mov
int3
fnstcw
or
push
pusha
fcom
jmp
pop
xor
mov
in
mov
(bad)
call
imul
mov
aad
pop
gs
out
(bad)
addr16
mov
aad
int3
scas
cmp
ds
xor
je
or
stos
in
jp
jg
mov
(bad)
loop
push
pushf
rcr
add
xchg
movs
ret
push
mov
or
test
pop
in
mov
popa
xchg
jno
dec
xchg
jge
or
xor
inc
push
xchg
test
xchg
xchg
add
adc
mov
idiv
shl
dec
mov
lds
xchg
xchg
xchg
jno
(bad)
adc
pusha
jns
out
test
mov
aaa
mov
cmp
fisttp
cwde
sub
cdq
mov
lods
stos
in
mov
mov
pushf
adc
jge
pop
mov
or
adc
leave
xor
rcl
jle
imul
enter
cs
test
fs
arpl
scas
leave
or
ss
fwait
(bad)
in
and
xchg
add
out
stos
fwait
xchg
cmp
and
inc
push
fadd
cmp
mov
call
mov
hlt
jb
shr
call
inc
xchg
xchg
jae
jge
or
xchg
lock
aaa
pop
pop
xor
lods
or
pop
fdivr
nop
icebp
clc
dec
cmc
aas
js
popa
jmp
push
xor
xor
cli
sar
leave
add
fiadd
(bad)
fstp
mov
mov
cld
pushf
inc
mov
jge
mov
push
scas
xchg
cmp
loope
dec
test
sti
adc
es
rcr
addr16
pop
fsubr
fwait
inc
add
test
mov
js
aad
aas
pop
out
xchg
xchg
outs
sub
mov
loop
xchg
jns
jnp
mov
mov
or
dec
dec
mov
jb
mov
push
or
sahf
jle
sub
test
dec
outs
pusha
fnstenv
iret
push
jae
imul
inc
jbe
jle
out
movs
out
lods
sbb
shr
sbb
mov
ret
pop
adc
cmps
rcl
test
clc
sub
retf
inc
push
(bad)
mov
dec
push
push
sub
xchg
test
ins
div
ror
jae
xor
dec
in
lds
inc
lods
and
int3
mov
inc
les
push
fiadd
js
dec
aad
aaa
adc
xchg
outs
mov
pop
fs
lock
loope
dec
xor
out
outs
lea
ja
push
xchg
data16
mov
mov
pop
xchg
bnd
sub
push
sbb
aam
xchg
test
mov
in
ficomp
pop
(bad)
frstor
dec
sti
rol
cmp
(bad)
push
js
push
jb
pop
rol
mov
mov
repz
and
jmp
jne
arpl
inc
pop
xor
outs
pushf
inc
lods
(bad)
push
sbb
into
out
fcomp
inc
mov
sbb
imul
mov
push
xor
ret
inc
push
(bad)
iret
cmp
popf
repnz
sub
dec
ret
sbb
or
xor
adc
add
push
mov
cmp
fiadd
loope
inc
sti
pushf
push
(bad)
idiv
cmp
mov
fdiv
cvttps2pi
adc
call
add
ret
popf
mov
inc
fidivr
mov
add
xchg
retf
fimul
adc
out
loop
pop
add
call
(bad)
pop
mov
xchg
(bad)
add
push
or
pop
push
sbb
shl
in
int
sub
out
dec
push
or
add
stc
push
retf
cmp
mov
inc
cmp
icebp
pop
test
shr
pop
mov
cmp
shr
or
mov
xor
lds
movs
sbb
enter
cdq
test
cmc
sub
push
push
fidivr
push
sub
ss
push
fist
dec
fldenv
adc
inc
out
icebp
mov
mov
adc
mov
lods
ret
push
in
(bad)
cli
iret
inc
mov
clc
mov
pop
mov
push
sbb
push
adc
out
mov
ins
sar
cli
lods
ret
push
cmp
call
std
dec
stos
and
int3
(bad)
mov
push
das
mov
sar
xchg
cmc
mov
adc
stos
xor
and
jle
xor
fstp
mov
data16
add
std
push
cmp
int3
jno
dec
jmp
sar
iret
lock
call
hlt
push
cmp
gs
inc
aam
push
mov
xor
jecxz
sbb
xchg
cmp
popa
xchg
xchg
js
sub
mov
mov
in
neg
nop
into
push
sub
mov
idiv
lea
inc
inc
(bad)
pop
cmp
sub
test
xlat
and
stos
aaa
push
fsub
fistp
add
scas
mov
adc
or
ds
sub
mov
or
inc
push
(bad)
fst
push
(bad)
call
xor
jbe
stos
mov
fwait
jno
cmc
test
daa
xor
mov
stos
std
sub
sub
repz
test
jb
stc
div
cmp
add
(bad)
inc
xor
mov
repnz
xor
add
pop
sti
rcr
lods
cmp
iret
adc
inc
icebp
mov
pusha
dec
sub
mov
inc
sahf
scas
add
mov
xchg
pop
jecxz
movs
adc
mov
inc
fmul
sub
loope
jp
xlat
push
arpl
enter
xor
mov
lds
fmul
push
cli
call
shl
lahf
je
ret
jle
popa
pop
mov
push
pop
pop
icebp
jg
stc
out
leave
fsubr
(bad)
pop
in
and
add
jns
aas
and
and
mov
(bad)
ja
mov
mov
mov
out
ds
jmp
das
fcmovnu
inc
xchg
jge
push
fistp
sbb
push
int3
and
imul
nop
into
inc
mov
test
mov
in
and
and
cwde
pop
cmp
aam
movs
or
dec
pop
loop
xor
movs
add
pop
lods
sahf
ds
adc
imul
push
lds
jae
stc
dec
inc
and
stos
sub
pop
and
xlat
add
adc
sahf
stos
mov
fldcw
push
lods
in
xor
and
pop
and
or
xchg
dec
mov
push
retf
in
(bad)
cld
xchg
push
xor
ins
pop
mov
jmp
sub
retf
in
jmp
add
cmp
out
add
adc
test
fcmove
daa
inc
fsub
outs
dec
sub
mov
mov
pushf
sbb
test
orps
dec
es
xchg
push
dec
adc
iret
shr
mov
les
xchg
mov
(bad)
repnz
imul
and
jmp
addr16
mov
rol
or
aaa
jnp
pop
shl
sub
sbb
leave
loope
jb
mov
xlat
(bad)
sub
pop
retf
jecxz
fnstcw
jg
daa
int
dec
jge
mov
enter
fadd
mov
sub
repnz
stos
mov
and
xchg
jae
jae
jg
js
push
call
jmp
outs
int3
int
imul
push
arpl
inc
sub
add
fild
cdq
sbb
jle
imul
stos
das
add
cld
hlt
shl
fbld
pop
test
sti
call
pop
sbb
jle
pop
jae
sub
dec
mov
add
das
push
and
pop
sub
icebp
scas
jl
retf
sti
xor
push
pop
add
mov
fst
push
(bad)
lods
jp
hlt
ret
pusha
idiv
mov
shl
ret
push
adc
lea
stos
mov
dec
bound
mov
pop
xor
in
mov
or
rcl
call
adc
gs
xchg
pop
or
arpl
mov
inc
mov
pop
outs
(bad)
cmp
inc
out
add
daa
in
push
push
add
test
jp
lea
in
hlt
das
lods
xor
sahf
add
fcmove
mov
sub
pusha
popf
imul
or
cmp
mov
sub
xchg
inc
sti
fiadd
fcomp
and
xlat
rol
(bad)
pop
mov
rcl
hlt
stos
in
ja
nop
xchg
adc
sub
mov
mov
mov
out
mov
or
inc
adc
mov
repnz
mov
loop
or
icebp
popf
mov
jnp
dec
xchg
cli
lahf
retf
jp
cmp
not
pop
dec
outs
dec
add
and
(bad)
lods
and
dec
aaa
and
je
sti
or
in
lods
xor
xor
mov
in
in
pusha
test
(bad)
inc
jp
mov
stos
mov
in
or
ss
fisub
pop
push
sbb
and
out
sbb
mov
outs
xchg
mov
dec
les
mov
sub
std
mov
retf
cmp
in
inc
aam
inc
loop
mov
add
popa
cdq
cmps
adc
mov
sbb
nop
push
outs
dec
rcl
and
dec
aad
sbb
mov
ja
pop
imul
xchg
xchg
aas
mov
lods
stos
pop
test
sub
fmul
aaa
aas
mov
sbb
imul
shl
call
cmp
cmp
jb
ins
mov
out
dec
test
stos
push
pushf
lahf
mov
push
jl
cmps
xchg
sub
xor
cmp
dec
mov
or
cmp
cld
loope
inc
sbb
jns
les
jl
and
addr16
popf
ffree
mov
scas
mov
xor
push
sub
inc
retf
dec
int3
adc
jecxz
jnp
imul
xor
loopne
mov
retf
sub
pop
test
cmp
jne
or
lea
pop
push
cdq
jne
mov
je
adc
int
push
retf
dec
mov
(bad)
fmul
data16
xchg
call
lock
movs
push
xor
push
fsub
stos
mov
cmp
repnz
dec
es
mov
test
dec
sbb
and
clc
sbb
sub
push
shl
clc
lods
mov
(bad)
leave
add
jne
cld
mov
inc
jns
outs
in
mov
mov
sbb
fadd
mov
mov
xchg
es
jle
lds
repz
mov
in
movs
mov
cli
fbstp
(bad)
retf
scas
mov
mov
fdiv
or
xchg
xor
mov
retf
sbb
adc
xchg
ret
push
movs
cmps
mov
into
repnz
jb
adc
in
jmp
out
xchg
dec
ret
lods
aam
adc
lds
adc
dec
aaa
or
mov
loop
or
icebp
(bad)
loopne
loope
fiadd
push
or
fs
in
sub
add
push
dec
lods
in
add
sub
jb
push
xor
neg
stos
pop
inc
enter
dec
shl
xchg
movs
xchg
pushf
push
mov
scas
xor
lds
jl
jmp
xchg
xchg
aas
xchg
cmp
ret
test
and
sub
add
jecxz
cmc
push
mov
cli
shl
xchg
inc
mov
inc
fistp
mov
aad
mov
sub
test
dec
fwait
int
addr16
(bad)
or
pop
movs
into
xor
(bad)
out
xor
push
cmps
into
(bad)
outs
cld
mov
test
lods
jno
inc
in
mov
adc
pushf
mov
test
inc
add
ins
in
mov
int3
dec
(bad)
sub
jl
es
xor
inc
pop
push
pop
ret
sbb
add
pop
sbb
mov
imul
mov
test
out
cli
pop
daa
sar
and
mov
push
neg
loop
push
sbb
push
pop
jne
xor
mov
repnz
in
test
loope
xlat
cdq
push
in
mov
xchg
shr
mov
xchg
mov
inc
pushf
cdq
cdq
xchg
cmp
mov
inc
loopne
jmp
fs
push
rol
adc
fnstsw
push
dec
sub
jecxz
jp
das
outs
cmp
mov
repnz
jae
je
mov
sbb
sbb
pusha
(bad)
jg
sub
in
movs
adc
js
movs
call
push
rol
mov
rol
mov
mov
jo
mov
das
imul
pop
inc
scas
gs
mov
pop
aam
(bad)
fist
mov
lock
push
jle
xor
mov
je
neg
(bad)
in
cld
mov
in
mov
push
call
mov
jmp
(bad)
cli
cmc
push
inc
dec
cmc
mov
mov
pop
lods
push
nop
or
or
in
mov
out
mov
loope
jle
sbb
add
or
iret
das
arpl
cmp
inc
dec
or
setp
in
pminsw
dec
shl
(bad)
push
cld
icebp
ins
dec
and
mov
pop
in
mov
pop
inc
stos
(bad)
out
ret
movs
or
sar
xchg
into
sbb
aam
js
inc
fdiv
fwait
adc
loopne
push
hlt
jmp
pop
fcomp
or
inc
scas
gs
hlt
mov
test
pop
cs
cmp
ja
fld
or
stc
pop
xor
mov
mov
out
(bad)
jmp
mov
sbb
add
std
push
jecxz
pop
ja
jmp
add
ror
push
aaa
adc
imul
jnp
mov
(bad)
xchg
cs
mov
imul
push
pop
cmp
pop
xor
popf
mov
sbb
push
push
mov
adc
mov
pop
mov
es
mov
push
inc
cmps
jnp
adc
cwde
and
xor
adc
pop
outs
arpl
popfw
outs
jecxz
mov
push
sub
cmps
aas
mov
inc
out
(bad)
(bad)
pusha
lods
jno
xchg
hlt
clc
pop
pop
pop
and
inc
xor
iret
pop
inc
mov
adc
aad
ins
lds
xchg
sub
cli
ds
loop
idiv
add
pop
cmp
das
pushf
iret
xor
mov
jecxz
sbb
xchg
mov
xchg
test
mov
push
add
retf
jo
loop
pop
or
mov
mov
jmp
add
icebp
add
repnz
inc
gs
adc
and
dec
gs
pop
push
movs
xor
outs
adc
mov
adc
enter
lods
ret
movs
daa
aas
pop
sbb
ret
std
xchg
stos
das
cli
in
sbb
cmp
ret
sbb
(bad)
cmp
sub
jo
pop
imul
xchg
ffreep
iret
xlat
daa
fstp
or
cs
and
icebp
cs
(bad)
adc
call
adc
ins
fmul
cs
popf
fadd
sub
xchg
iret
data16
and
and
and
fistp
mov
push
imul
and
bound
inc
inc
inc
cmc
leave
push
pop
jge
dec
push
sbb
(bad)
ret
cmp
sub
pushf
pop
xor
mov
mov
and
pop
sbb
movs
and
test
mov
and
and
js
cmp
push
fst
rcl
out
and
hlt
sub
mov
scas
clc
gs
or
imul
nop
inc
mov
outs
dec
jge
xor
ror
cmp
jo
es
call
xchg
adc
fldcw
clc
adc
clc
retf
add
scas
into
dec
ins
ins
jno
add
jbe
xor
and
xchg
dec
movs
(bad)
xlat
jmp
inc
inc
in
cdq
loopne
std
push
sar
enter
mov
sar
cmp
xchg
xor
or
leave
scas
repnz
clc
rcl
pop
sub
inc
xor
or
aaa
daa
mov
pop
shl
inc
cmps
mov
ficomp
push
mov
mov
outs
cs
call
icebp
out
fs
int3
ins
scas
xchg
adc
aaa
test
jg
xchg
(bad)
mov
test
jo
js
or
neg
and
test
mov
inc
aaa
push
loop
or
movs
inc
loop
aas
dec
mov
aas
ret
cmp
stos
jmp
stos
outs
jp
dec
cmps
pop
or
fldenv
dec
shl
xchg
ss
hlt
mov
cmps
xchg
jge
jbe
push
in
mov
and
loop
jecxz
jb
leave
pop
cmp
xchg
int3
jae
in
push
stos
sbb
mov
les
cwde
in
jp
mov
pop
loop
stc
push
int3
and
jne
jge
mov
sbb
jl
les
inc
(bad)
mov
mov
sbb
pop
inc
or
adc
(bad)
xchg
es
fisttp
sbb
inc
mov
int
mov
push
add
les
xor
mov
outs
mov
and
and
push
and
(bad)
xchg
cmp
movs
movs
enter
pushf
lahf
lods
and
lods
test
cli
mov
pop
inc
add
add
sub
sub
fidivr
ins
xor
jns
adc
mov
inc
sbb
addr16
push
sub
push
cmp
fwait
dec
nop
jmp
push
dec
into
out
stc
add
shr
das
sbb
adc
adc
imul
dec
xchg
sbb
xchg
ss
mov
test
in
popa
bound
movs
dec
cmp
daa
clc
fstp
fistp
ins
jp
leave
mov
in
mov
(bad)
dec
ret
mov
mov
sbb
add
mov
repz
cmp
mov
push
cld
jmp
stos
push
or
add
mov
cmp
push
xchg
in
push
adc
addr16
out
xchg
ins
jnp
sub
pusha
inc
xchg
dec
dec
movs
ds
out
rol
out
in
xchg
and
mov
(bad)
adc
add
js
mov
cmp
ss
mov
sbb
lods
in
pop
daa
je
push
jmp
pop
inc
jo
mov
lds
test
cmp
test
fiadd
and
pop
lods
xlat
mov
sbb
sbb
imul
push
xlat
adc
xchg
mov
sbb
pop
and
jmp
fs
mov
push
dec
aad
ins
ja
mov
jl
xchg
sub
xor
lds
adc
cmp
mov
mov
shl
sbb
push
add
(bad)
mov
into
push
sub
add
aas
test
scas
or
jg
or
ins
mov
out
mov
cmp
ds
add
sub
cdq
repz
xchg
sub
cmp
sbb
mov
popf
sbb
fnsave
sar
mov
ins
sub
std
movs
inc
inc
enter
jo
out
or
ins
(bad)
mov
ficom
push
pop
jb
mov
das
mov
xor
jb
(bad)
pop
or
outs
test
out
out
fnsave
dec
mov
shl
sub
sbb
sbb
scas
fs
and
mov
ja
ins
std
cmp
dec
mov
je
add
(bad)
test
and
gs
loop
push
test
mov
in
mov
add
push
or
dec
es
inc
repz
mov
fcomp
jl
xchg
mov
xchg
in
push
scas
jl
fisub
add
fistp
jo
int
fsub
pop
pusha
mov
popa
test
mov
sub
xor
add
and
cmp
lods
xchg
jns
mov
and
inc
jecxz
hlt
pop
sbb
mov
in
dec
repnz
mov
xlat
fadd
mov
int
imul
ds
xor
xor
push
xchg
mov
sub
push
sti
mov
pop
loop
push
push
xor
rcl
movs
iret
fsubrp
mov
dec
cmp
ror
mov
push
jae
xchg
sahf
addr16
and
outs
(bad)
xchg
out
push
xor
mov
jg
push
dec
push
iret
cmp
in
pop
adc
(bad)
out
cmp
xchg
inc
sbb
pop
sub
pop
jecxz
and
push
popf
call
sbb
xchg
jne
push
fwait
or
or
xor
xchg
adc
xor
xchg
mov
cmp
xor
and
(bad)
ins
xchg
cmp
sub
nop
outs
sub
inc
add
cwde
shr
cmc
aad
aas
enter
adc
shl
jmp
int
mov
data16
mov
stc
pop
xlat
cld
xchg
imul
aad
xchg
adc
mov
jo
lods
pop
jb
xor
je
and
gs
popa
add
mov
and
not
mov
test
cmp
xchg
mov
inc
movs
inc
cmc
xor
fcom
add
ins
adc
mov
sbb
pop
movs
mov
rcl
cs
es
movs
sub
pop
pushf
pop
mov
sti
adc
cmp
dec
(bad)
dec
inc
jbe
mov
pop
and
aaa
movs
xchg
and
inc
dec
or
pusha
mov
enter
and
popf
fninit
test
nop
cmps
cmpxchg
dec
and
dec
bound
popa
cmc
dec
mov
lods
popa
ss
pusha
push
jb
daa
sbb
leave
sbb
scas
or
adc
movq
adc
ins
(bad)
add
movs
push
mov
leave
call
(bad)
pop
push
cmp
sbb
xlat
mov
mov
fstp
add
cmp
in
push
push
push
mov
push
cmp
fwait
int3
in
add
(bad)
and
sbb
loope
shl
retf
jbe
xlat
pop
gs
push
xor
inc
pop
ret
and
mov
jmp
mov
jno
data16
retf
cwde
lock
rcr
(bad)
call
and
jecxz
inc
mov
and
jae
and
push
loope
shr
std
ror
lea
std
jg
mov
outs
pop
adc
jle
xchg
movs
std
je
push
mov
inc
sbb
mov
loopne
mov
inc
xchg
sub
shl
cvtps2pi
pop
jp
and
jl
outs
sbb
leave
js
pop
sbb
movs
mov
push
push
xchg
icebp
clc
cmp
xchg
stos
mov
xchg
push
jg
adc
stos
ss
add
in
jno
jb
mov
dec
mov
pextrw
pop
aam
pop
and
or
(bad)
xchg
sub
push
les
out
cmp
adc
xchg
fdiv
std
lods
dec
stc
(bad)
lods
cwde
push
(bad)
push
cmp
xchg
add
jmp
add
cmp
mov
add
push
fdivp
cmps
imul
push
push
mov
pop
jg
fistp
sbb
jge
pop
push
aas
ins
xor
add
dec
and
stos
add
push
push
dec
cmp
xchg
and
xor
and
je
pop
dec
push
mov
and
push
lea
leave
push
sub
adc
(bad)
hlt
sbb
cmps
jbe
xchg
stos
or
cmp
movlps
rcl
push
(bad)
xchg
in
repnz
adc
sbb
je
jmp
ins
stos
jae
ror
and
push
cs
stos
ins
daa
sahf
xlat
fsub
sbb
cmp
jb
mov
cdq
jmp
jnp
lock
fadd
add
repz
xchg
mov
in
push
pop
mov
xchg
cwde
jp
(bad)
mov
and
cmp
enter
je
mov
cmp
dec
sbb
adc
jge
jle
shl
cs
stos
lods
nop
fld
es
scas
jnp
je
aas
pop
gs
imul
popf
popa
dec
sbb
and
xchg
mov
mov
in
sbb
jnp
scas
out
and
in
inc
push
mul
mov
mov
mov
adc
and
pop
or
xor
movs
and
push
cwde
arpl
jns
sub
jl
jmp
in
xor
iret
mov
std
fsubr
mov
loopne
sbb
sbb
lds
aaa
sbb
leave
popa
jb
rol
push
push
push
mov
fucom
aas
jmp
push
mov
jo
jg
and
sub
cmps
jmp
cld
sub
mov
es
mov
dec
push
in
mov
cmp
or
pop
or
out
cmp
sbb
mov
popf
ss
jl
mov
rsqrtps
(bad)
xor
in
and
sub
mov
pop
dec
shl
add
sub
scas
imul
mov
pop
ja
js
jmp
mov
bound
scas
cmp
adc
add
aaa
pop
aas
in
mov
add
sub
cmps
sahf
cmp
mov
and
call
out
sub
stc
dec
cmp
lock
xor
add
mov
cmp
retf
rol
inc
push
aas
in
mov
mov
and
fld
ret
xchg
xor
in
in
inc
int
scas
cmp
loop
in
add
mov
out
lds
les
mov
stc
movaps
cs
push
sbb
lock
cmc
(bad)
clc
xchg
pop
or
out
aam
das
xchg
dec
hlt
add
mov
in
test
js
js
mov
inc
(bad)
retf
std
lahf
or
push
fiadd
(bad)
cmps
inc
jne
enter
ror
push
out
imul
or
ror
pop
mov
mov
and
xor
mov
or
inc
lods
mov
jb
cmc
mov
jmp
mov
xlat
sub
test
pop
std
je
xchg
mov
cli
in
iret
dec
daa
mov
enter
mov
lods
scas
push
mov
test
inc
push
or
nop
pop
or
jge
or
(bad)
out
mov
icebp
ins
scas
test
cmps
sub
sbb
mov
les
(bad)
mov
fxtract
(bad)
mov
fist
ds
push
dec
ror
cdq
push
sbb
sahf
mov
add
into
pop
je
or
ficom
adc
fidiv
xor
ffreep
add
out
xlat
mov
dec
pop
and
fiadd
movs
xchg
mov
mov
mov
(bad)
lahf
das
ret
int
sbb
sub
movs
add
push
inc
push
in
fistp
mov
dec
jmp
adc
icebp
jnp
das
idiv
dec
cld
mov
pop
push
adc
lods
mov
xor
sub
loopne
sbb
std
stc
mov
dec
mov
xchg
xlat
push
cwde
xor
cmc
ins
mov
mov
fcom
cld
out
cmp
fadd
and
cmps
push
jnp
je
or
adc
push
dec
sbb
and
push
sar
iret
push
test
not
pop
sbb
mov
sti
unpckhps
aas
jg
xchg
out
leave
repz
mov
pop
jns
cmp
inc
mov
or
cmp
mov
sub
aaa
and
pop
popf
push
sbb
adc
add
call
out
pop
lock
inc
xor
inc
fxch
add
sub
mov
in
push
jmp
mov
push
jae
pop
sahf
fcomp
in
hlt
aas
sbb
push
xor
sbb
ja
loope
pop
sub
out
sub
mov
mov
leave
push
dec
hlt
jp
leave
in
jecxz
adc
imul
in
mov
xor
xchg
cmps
pop
lahf
movups
jge
xchg
mov
sub
movs
out
dec
movs
pop
push
(bad)
iret
cmp
rcl
push
out
xor
not
fcomp
xchg
ret
out
mov
int
add
ror
int
mov
or
adc
js
ficom
xchg
test
ss
popa
(bad)
adc
push
popf
aam
cmp
repnz
rcl
mov
inc
or
call
pop
fidivr
ins
je
dec
les
push
sub
loop
or
popf
in
adc
or
in
xor
add
je
inc
mov
into
sbb
call
cli
jne
xchg
jecxz
sub
dec
cld
daa
mov
pop
jl
mov
data16
or
mov
loop
jp
pop
xlat
lock
sub
adc
mov
stos
inc
xchg
pop
retf
dec
enter
call
dec
or
dec
mov
adc
mov
jnp
add
clts
scas
mov
mov
xor
lods
xchg
pop
fwait
pop
mov
into
rcl
jge
pop
stos
push
push
sti
mov
jge
mov
sahf
sti
fwait
loopne
mov
test
sub
jb
rol
xor
lock
ret
mov
in
inc
or
popf
out
cdq
packuswb
retf
aas
adc
mov
inc
adc
inc
push
outs
outs
sbb
ficomp
fwait
dec
pusha
fiadd
jecxz
xlat
mov
mov
inc
push
ret
pop
xor
dec
jb
sub
inc
push
ja
test
in
mov
sbb
pushf
into
scas
ins
sbb
jle
loop
dec
inc
mov
imul
js
shl
movs
jb
lods
jl
mov
hlt
push
pusha
lods
fldcw
aam
push
test
inc
stos
stos
sbb
lar
adc
xchg
add
push
dec
adc
icebp
and
(bad)
out
loop
cmp
out
out
aaa
shl
sub
(bad)
pop
fcmovnu
jecxz
aas
adc
and
mov
rol
inc
sti
dec
pop
sub
cmp
das
lods
stos
data16
mov
inc
mov
test
popa
cmp
(bad)
loopne
xchg
jnp
(bad)
das
cmps
sbb
push
mov
or
mov
adc
and
jg
sar
cmps
push
lods
mov
lea
into
cmc
les
sub
jo
dec
push
repz
cmc
mov
lock
jecxz
js
cmp
out
mov
fcomp
push
inc
pop
shl
rcr
xchg
mov
(bad)
int
jbe
imul
xchg
repz
mov
dec
daa
lahf
ins
mov
lock
pop
jbe
pop
and
push
loope
xor
xchg
jle
sbb
or
ret
inc
and
in
aad
dec
pop
sahf
fnstsw
nop
scas
sub
mov
hlt
test
dec
rol
mov
adc
xlat
jmp
retf
xchg
jg
(bad)
cmps
push
test
sahf
mov
aam
es
or
sbb
aaa
aad
call
adc
fst
jg
adc
repz
ss
lds
shr
sub
push
cmp
pop
mov
mov
jp
data16
xor
sbb
lahf
and
adc
dec
or
push
cmp
(bad)
or
push
dec
data16
ficomp
iret
mov
aas
sbb
je
jns
mov
jo
fwait
dec
dec
fucomip
stos
inc
in
push
dec
add
dec
(bad)
test
jmp
jns
or
sti
mov
xchg
pop
dec
add
adc
xor
icebp
inc
das
mov
stos
sub
scas
ja
mov
or
pop
cmps
outs
fwait
sub
fst
cmps
cmp
movs
(bad)
rol
mov
jnp
fcomip
shl
(bad)
and
inc
xor
mov
adc
xor
or
sub
sar
int3
in
jmp
cmp
cmp
xor
sahf
mov
pop
mov
sub
(bad)
retf
mov
fdivr
mov
popf
cmps
or
out
rcr
sbb
ret
fdivr
cmp
(bad)
pop
and
popf
push
loope
dec
stos
rcl
stc
sub
test
pop
cmp
rcl
dec
gs
call
shr
call
in
aad
xor
push
jbe
adc
shr
shl
aad
jmp
cmps
jle
movs
xlat
and
int3
lock
into
and
repnz
int3
sar
je
inc
fwait
js
test
mov
fbld
dec
sub
xor
sbb
fidiv
add
loope
cmp
pop
xor
movs
cmp
push
stc
rol
sub
xor
sub
popa
xchg
imul
outs
and
jle
ins
jae
jl
iret
leave
fs
jle
or
clc
call
sub
mov
pop
xor
(bad)
mov
(bad)
xchg
dec
pushf
lea
pop
imul
sub
in
jle
push
mov
(bad)
mov
cmp
xchg
adc
push
movs
jg
cmp
jae
mov
imul
sub
ffreep
or
lea
cmps
dec
dec
jo
dec
or
fbld
sahf
cmp
adc
loop
outs
xor
test
scas
imul
or
clc
jl
cmp
ja
call
je
into
ss
lods
jle
xchg
or
and
pop
sub
out
enter
popf
lods
movs
dec
pop
pop
(bad)
lods
jnp
retf
aaa
sub
sub
inc
mov
push
add
movs
outs
test
sub
xchg
retf
test
mov
mov
adc
dec
mov
mov
jmp
jbe
or
fidivr
rol
imul
loop
retf
(bad)
out
mov
dec
daa
add
sbb
mov
jbe
adc
xor
lods
mov
push
inc
fisub
in
repz
push
push
mov
inc
sub
shl
rcr
mov
mov
adc
xor
inc
mov
fisttp
mov
adc
scas
jl
outs
xchg
es
fdiv
or
arpl
inc
cmp
pop
jnp
fild
ret
mov
adc
fs
xchg
mov
fs
mov
and
push
fcmovb
and
and
push
pop
bound
je
adc
mov
dec
aam
mov
cmp
ror
loop
mov
das
ds
pushf
std
mov
movs
sbb
sbb
xlat
popf
push
and
or
sub
repnz
aam
mov
mov
mov
xor
jle
sahf
xor
inc
xor
jp
mov
les
ins
push
and
jg
sbb
call
adc
add
push
mov
or
rol
test
push
inc
popa
dec
retf
out
lds
dec
and
and
mov
in
xor
xor
cs
div
adc
icebp
dec
jns
or
test
cwde
inc
push
xchg
sbb
out
cmp
hlt
scas
pop
sbb
rcr
outs
fs
scas
sbb
or
cmps
mov
sub
stos
add
or
loop
dec
mov
sar
pop
(bad)
ins
sbb
jle
ret
in
xor
push
std
mov
je
ret
jae
out
sbb
mov
aas
adc
test
xchg
pop
cmp
imul
pop
push
jns
dec
jg
push
push
scas
inc
add
loopne
(bad)
int3
inc
dec
ja
jp
sbb
mov
xor
adc
add
ds
mov
cmp
into
xchg
popa
mov
sub
xlat
sbb
scas
frstor
call
test
test
xchg
(bad)
inc
xor
(bad)
push
call
sub
dec
lea
fisub
xchg
inc
fadd
bound
xchg
popa
dec
nop
add
stos
lods
cld
out
push
rcr
(bad)
sub
pop
fiadd
add
inc
test
sbb
push
add
imul
mov
and
fistp
mov
test
fucomip
pop
inc
pop
inc
jmp
or
mov
xor
jnp
dec
pop
in
sub
sbb
mov
pop
push
and
cmp
jmp
nop
or
cmp
push
test
(bad)
cld
pop
sahf
mov
adc
int3
jl
cmp
es
leave
add
xor
int
push
leave
push
adc
add
cmps
ret
lods
repnz
lods
movs
retf
cdq
cmp
mov
les
and
cdq
and
rol
mov
adc
or
xchg
outs
out
mov
jg
dec
sbb
pop
sbb
test
fnstcw
mov
sub
xchg
sbb
data16
mov
fcomp
and
and
bound
xlat
and
and
inc
mov
dec
pop
test
mov
dec
add
cmps
call
mov
mov
adc
sahf
ret
scas
outs
dec
enter
jo
push
or
dec
mov
add
shr
adc
pusha
cmps
ss
sbb
stos
sub
mov
movs
test
loopne
loope
sub
stos
mov
add
stc
popw
out
cmp
dec
add
fwait
retf
enter
sub
xchg
(bad)
(bad)
retf
mov
pop
ficomp
jae
into
dec
retf
mov
sbb
pop
xchg
lds
xor
js
cmps
mov
pop
pop
or
cmps
sub
push
aad
xor
xor
push
(bad)
or
movs
aaa
add
outs
pop
pushf
cmp
daa
jl
and
inc
imul
int3
xchg
pop
add
nop
aas
movs
in
pop
add
xchg
mov
push
rol
call
into
jns
xlat
cmp
push
mov
and
push
jns
or
imul
xchg
into
mov
sar
rcr
push
fs
adc
xchg
rol
pop
jmp
fcmove
std
sbb
xchg
mov
add
add
xchg
push
adc
shl
ret
mov
es
dec
xchg
xchg
jnp
daa
inc
fcmovb
xchg
pop
push
inc
movs
shl
jns
cwde
add
leave
jo
mov
xchg
cmps
retf
push
push
les
sbb
push
mov
jns
ror
jp
outs
dec
adc
cmp
inc
inc
mov
daa
cmc
jmp
shl
ret
(bad)
sbb
js
ss
sbb
loope
push
sbb
mov
ins
sti
sub
inc
stos
ret
and
outs
mov
cwde
xchg
mov
jns
scas
out
pop
aam
pop
dec
movs
arpl
call
push
(bad)
out
and
mov
cmp
out
and
stos
addr16
adc
aaa
cmps
jmp
mov
push
in
outs
adc
bound
cs
stos
cs
xlat
(bad)
(bad)
fcmovne
mov
je
clc
daa
cmp
sub
cmp
pop
mov
cld
ret
out
and
stc
mov
jg
xchg
add
inc
cli
mov
rol
(bad)
test
inc
pop
int3
pop
xchg
mov
mov
icebp
sbb
and
mov
das
jg
(bad)
inc
mov
xor
rol
mov
dec
loopne
add
xor
fcmovu
xchg
add
jne
mov
xlat
pop
mov
clc
inc
jno
sub
dec
stos
or
xlat
push
ja
and
leave
ret
mov
adc
fsub
dec
or
popf
sti
and
push
sbb
mov
mov
test
push
dec
mov
es
mov
(bad)
or
mov
push
loopne
xor
ja
lahf
push
lock
imul
loop
mov
rcr
rcl
cmp
push
outs
mov
rcr
xlat
in
xchg
sub
js
out
pusha
inc
out
fwait
or
shl
mov
loop
sbb
mov
fmul
pop
popa
daa
mov
cwde
jg
mov
int
push
and
or
add
aam
(bad)
jg
ret
imul
lds
jno
mov
mov
imul
dec
add
or
jno
daa
pop
mov
xlat
push
sbb
pop
push
ja
add
(bad)
or
push
fdivr
adc
adc
int3
fnsave
push
dec
xor
sbb
fucom
adc
and
je
mov
jecxz
and
jmp
mov
loopne
ret
shl
dec
retf
retf
ficomp
aad
je
cmp
popf
sub
xchg
pop
ins
sbb
and
or
pop
cmp
repz
pop
mov
sbb
dec
fiadd
lods
sub
sahf
es
retf
mov
mov
mov
iret
mov
dec
data16
inc
or
sub
inc
inc
adc
hlt
push
ror
inc
mov
das
(bad)
repz
pop
dec
stc
test
loope
out
xor
or
rol
outs
jbe
(bad)
retf
popa
pop
xchg
fisttp
jle
and
pop
mov
mov
jne
jp
shl
add
call
xlat
gs
mov
sub
inc
fwait
sub
inc
ins
pop
mov
or
push
ss
pop
mov
mov
or
(bad)
js
popa
and
mov
or
mov
mov
cli
xor
(bad)
repnz
dec
and
popf
sub
xchg
fmul
xchg
(bad)
lods
adc
inc
fdivr
inc
mov
xchg
enter
icebp
daa
add
pop
imul
outs
sar
in
loop
dec
imul
mov
mov
cs
push
pop
(bad)
(bad)
jbe
add
mov
ror
(bad)
aad
mov
rcr
xchg
sub
and
and
fild
sub
and
(bad)
pop
ss
jne
xor
xor
lds
call
mov
sbb
add
sub
push
jo
ror
push
mov
and
dec
add
mov
mov
rcl
mov
inc
sub
push
stc
jle
xor
cmp
mov
out
rcr
jp
in
adc
(bad)
in
jge
sbb
in
mov
idiv
ret
out
out
mov
lods
fsub
mov
dec
cmp
add
and
ret
mov
jnp
add
mov
cmp
mov
mov
jg
fdivp
xor
imul
shl
rcl
adc
jae
sbb
stc
(bad)
jl
push
lds
pop
or
fnstsw
xchg
sub
push
call
sbb
sub
shl
lods
shr
mov
push
shl
lods
inc
popa
mov
lahf
ficom
test
pop
outs
(bad)
jb
dec
das
jmp
cli
mov
ja
sahf
in
mov
arpl
pop
(bad)
and
jns
sbb
dec
jmp
sahf
(bad)
xchg
(bad)
pusha
int3
cs
adc
dec
aas
int
stc
add
shl
call
or
arpl
popf
pop
aaa
popa
test
xor
push
pop
jp
fisub
mov
sub
xor
jle
sbb
add
adc
jle
mov
sbb
add
sbb
add
pop
cld
pop
jecxz
push
adc
ss
loop
mov
in
push
lea
xor
loop
nop
inc
loop
ins
xor
iret
daa
xchg
jne
scas
ins
test
jl
or
scas
inc
mov
dec
cdq
jnp
or
cmc
cmp
ret
or
push
mov
pop
jns
xchg
push
imul
push
inc
sub
cdq
movs
hlt
sti
(bad)
sbb
and
arpl
hlt
xor
pusha
pop
dec
mov
ins
and
into
mov
jns
sub
stos
adc
test
aas
cld
and
mov
sahf
ds
mov
mov
cdq
jne
and
push
mov
rcr
cmp
scas
jne
neg
test
add
mov
and
inc
pop
xchg
and
sub
imul
ins
rcr
movs
mov
rcl
ins
pop
mov
cmp
add
mov
dec
push
sbb
push
out
rol
add
mov
inc
or
and
mov
inc
out
jg
loop
hlt
cmp
mov
or
xor
inc
dec
out
je
xor
or
sar
or
xor
fisub
ror
inc
movs
or
div
mov
jns
cmp
test
adc
repnz
push
das
jb
fldenv
pop
in
push
addr16
xor
jge
nop
ret
push
sub
xchg
dec
pop
icebp
pusha
sti
das
rol
mov
js
xchg
jmp
sub
pop
test
jmp
sbb
sahf
setl
xchg
sbb
test
sbb
aad
es
xchg
aam
in
jo
fistp
fstp
sub
retf
dec
xchg
jmp
add
mov
mov
push
mov
jae
cmp
or
xor
inc
sti
bound
popa
xchg
add
add
addr16
js
fadd
or
imul
cmp
cwde
push
xor
repnz
aas
clc
test
mov
aam
lahf
mov
push
js
hlt
dec
ds
and
scas
push
in
cs
jb
es
outs
sub
fisub
out
aad
inc
not
mov
add
xor
bound
jmp
cld
push
shr
int3
(bad)
push
or
pop
mov
jg
sub
add
push
cmps
int3
(bad)
int
push
mov
in
arpl
inc
pop
pop
push
imul
cli
jo
inc
pop
xor
test
mov
ss
aam
dec
add
imul
mov
movs
bound
pop
clc
xchg
popf
rcr
sbb
mov
dec
ds
mov
fadd
cdq
mov
out
out
xchg
mov
sub
fisub
imul
cmp
dec
cmp
pop
add
mov
jle
xor
sub
adc
pop
ficomp
cmp
retf
int
cmp
call
mov
(bad)
pusha
and
pop
ss
jbe
lods
xchg
adc
das
jg
jnp
les
xchg
test
sahf
movs
mov
imul
pop
gs
jo
nop
mov
adc
sar
inc
adc
sub
mov
cs
add
xor
(bad)
xchg
dec
fld
pop
add
lea
movs
shl
cld
ja
xor
adc
dec
into
outs
not
xchg
and
daa
into
retf
gs
sbb
pushf
jns
stc
dec
in
jae
lahf
frstor
xor
jg
and
pop
and
sbb
inc
adc
push
mov
bound
mov
sbb
jne
mov
aad
mov
in
push
mov
xchg
xchg
xor
out
push
cmp
jno
cwde
xchg
icebp
ja
jecxz
mov
fdiv
cdq
xchg
ins
push
push
lea
pop
mov
jae
mov
cmps
sub
pop
cdq
cli
(bad)
mov
sbb
mov
push
jnp
scas
jne
js
cwde
test
jnp
inc
ret
mov
outs
xor
cmps
ins
jecxz
ja
call
test
sbb
adc
fcomp
retf
ins
dec
cmp
jmp
and
in
mov
sub
push
ret
adc
push
dec
push
mov
int
hlt
mov
jno
mov
inc
mov
inc
mov
test
push
mov
push
fdiv
dec
retf
sbb
repz
pop
test
test
inc
dec
push
xlat
push
mov
test
pop
jge
lea
sar
xor
xchg
scas
popf
rcr
dec
adc
mov
inc
sbb
rcr
sti
dec
inc
inc
les
ins
(bad)
repz
int
bound
jmp
adc
cs
pop
dec
rol
das
int
(bad)
movs
or
mov
out
imul
pop
not
jnp
rol
mov
pop
mov
push
jge
dec
mov
mov
jb
mov
mov
pop
cwde
les
arpl
(bad)
push
pop
div
cmp
loope
inc
push
aaa
cmp
xchg
popf
and
sub
mov
lahf
cmp
pop
cmp
jo
sbb
push
test
mov
mov
dec
(bad)
sbb
scas
xchg
retf
or
cmc
jl
or
retf
inc
jmp
mov
clc
jbe
push
add
push
xor
adc
adc
dec
fs
cwde
mov
or
jns
retf
mov
xchg
fistp
addr16
xchg
add
mov
xor
aaa
fadd
test
cdq
pop
loopne
xchg
shl
mov
inc
xchg
int3
data16
fwait
xor
mov
push
stc
into
push
or
stos
rcl
mov
push
and
push
neg
lock
fs
arpl
cmc
jns
sbb
pop
outs
add
jg
sar
inc
xor
ret
adc
stos
(bad)
(bad)
mov
das
std
push
push
lods
repnz
stos
lods
jp
cmp
addr16
dec
in
iret
dec
sub
cli
std
ins
sti
xor
cld
lea
out
jp
jb
mov
xchg
ins
and
cmp
mov
cmp
mov
mov
inc
test
arpl
push
fwait
cmp
add
push
xchg
jmp
cmp
fs
lds
mov
and
sti
mov
sahf
pop
mov
sbb
fld
jne
imul
repnz
sbb
lods
rcl
in
sub
mov
mov
mov
fcom
inc
ja
pushf
lock
cmp
jbe
jecxz
xchg
jge
cmps
jg
aas
or
into
idiv
sbb
cmps
cmp
(bad)
cmp
or
loopne
add
das
adc
sti
arpl
scas
add
adc
inc
add
mov
fild
inc
push
xor
imul
jg
and
jns
mov
and
sub
aad
mov
scas
repz
jno
mov
push
adc
adc
sub
stos
add
pop
js
(bad)
imul
call
cli
(bad)
cdq
inc
mov
inc
xor
hlt
push
pop
jno
rcr
and
push
out
ret
ret
add
les
int3
sar
cmp
(bad)
push
jo
mov
push
add
int
fdivr
stos
push
xchg
mov
(bad)
(bad)
mov
pushf
mov
sub
mov
ja
mov
jl
lea
punpcklbw
ins
(bad)
jnp
(bad)
outs
shl
(bad)
push
pop
mov
sbb
and
add
lea
inc
jmp
add
add
push
cmc
and
pop
jae
cmp
mov
mov
push
mov
push
aad
mov
dec
test
repnz
pop
jns
stos
and
or
stos
in
imul
test
nop
je
ror
jmp
dec
jg
loopne
cmp
test
jnp
sbb
push
and
dec
paddsw
sub
push
cmp
xchg
mov
pop
xchg
sbb
jmp
shl
ret
std
ret
cmp
into
mul
lods
mov
ins
cwde
push
sbb
jno
js
dec
jne
mov
jmp
scas
cmp
aad
les
jp
push
or
jg
add
mov
adc
mov
mov
pop
cmp
mov
ds
cmps
scas
xchg
jo
xor
jmp
cmp
cmp
mov
mov
inc
inc
sbb
not
xor
outs
pop
add
mov
mov
inc
push
and
mov
xor
xchg
pop
adc
push
lock
jns
dec
inc
lds
add
cdq
hlt
popf
iret
mov
pop
in
pop
or
data16
test
pop
sub
mov
lock
mov
lea
xor
and
and
sub
cwde
mov
mov
out
sub
dec
inc
lock
daa
xchg
cmp
lock
pusha
jmp
mov
cmp
xchg
retf
pop
bound
jg
mov
adc
adc
sub
or
stos
pop
icebp
fstp
mov
inc
in
aam
push
shl
xchg
repnz
call
loop
push
inc
mov
test
xchg
push
inc
rol
loop
xchg
jmp
dec
adc
xor
sub
(bad)
sbb
jno
(bad)
sbb
pop
push
xchg
mov
sbb
addr16
jno
xor
pop
mov
cld
push
adc
xchg
and
jle
jl
daa
sub
int3
xchg
out
mov
dec
and
adc
jb
pop
fiadd
(bad)
imul
inc
mov
js
inc
icebp
sub
xlat
mov
pop
sbb
dec
mov
xchg
aas
xor
sbb
shl
clc
sbb
cmp
sbb
mov
cdq
xchg
xor
mov
pop
mov
pushf
mov
jbe
int
loope
jbe
sub
jns
nop
popa
repnz
mov
js
int3
loopne
add
sub
pop
and
das
sar
stc
test
iret
movs
pop
fldenv
call
push
dec
js
lahf
and
inc
imul
int3
mov
mov
sub
add
fld
loope
(bad)
fs
mov
inc
and
inc
jp
mov
mov
pop
retf
mov
aam
xchg
icebp
rol
mov
(bad)
mov
sbb
xor
cmp
jo
sbb
call
pop
arpl
outs
rcr
not
dec
inc
jmp
add
xor
iret
jns
cmps
cmp
ret
inc
xchg
sbb
repnz
sbb
sti
push
cld
add
pop
stc
jae
and
pop
jl
stos
daa
jmp
pop
xlat
xor
fisttp
cwde
cdq
or
inc
mov
xchg
and
inc
cli
inc
pop
arpl
jbe
sub
pop
(bad)
ret
mov
fistp
and
mov
push
call
inc
pop
fisttp
adc
inc
dec
add
xchg
lods
(bad)
out
sbb
aam
or
add
and
xor
gs
retf
mov
fadd
call
popf
or
sbb
jmp
inc
cli
pop
rcr
(bad)
shl
mov
cmp
jno
add
test
adc
int
xchg
pop
aas
xchg
ror
mov
cmp
and
and
lods
jge
icebp
xor
mov
sub
aaa
push
in
and
aam
into
xor
call
lods
dec
and
(bad)
jl
psllq
push
dec
mov
xor
push
sub
dec
xchg
push
pop
psubsw
mov
(bad)
and
js
cmp
test
aaa
cmp
outs
(bad)
jno
push
add
jp
mov
jnp
pusha
push
jmp
push
adc
mov
scas
add
shr
add
test
aaa
cmp
ret
ins
and
push
sbb
inc
inc
or
out
dec
mov
adc
nop
sbb
mov
in
and
inc
jno
jns
int
movs
dec
pushf
stc
int
sub
jbe
mov
cmc
shr
fld
test
pop
mov
dec
or
xlat
or
and
cmp
clc
scas
stos
push
add
inc
bnd
arpl
popa
sahf
mov
cmc
jmp
repnz
xor
xchg
dec
daa
retf
sub
xchg
fsubr
jbe
daa
inc
adc
jl
ficomp
shr
dec
sahf
(bad)
rcr
stos
adc
mov
cwde
and
push
mov
jnp
or
stos
jne
inc
data16
mov
scas
add
inc
lds
cmp
sbb
rcl
lock
fadd
ins
xor
fstp
mov
ss
aad
ds
int
ret
sbb
std
dec
js
addr16
enter
adc
leave
jecxz
stos
pop
in
iret
ret
ret
xchg
clc
sbb
int3
xchg
retf
xchg
(bad)
mov
je
cld
(bad)
xor
mov
shl
nop
inc
pusha
sbb
fwait
sub
mov
adc
movs
jbe
jns
into
lea
aam
jnp
push
jne
xor
(bad)
mov
sti
jmp
add
pop
or
mov
ret
cmp
popf
inc
sub
push
pop
int3
push
and
xor
data16
push
ins
sbb
cli
stos
pop
push
stc
xchg
or
dec
adc
push
pfnacc
inc
retf
cmps
cli
mov
dec
ja
out
cmp
jns
xor
adc
mov
lods
jg
xor
sub
ins
and
in
push
push
rcr
loopne
test
retf
and
loopne
lds
mov
and
(bad)
iret
inc
js
pop
xor
mov
mov
inc
jb
jne
cmp
inc
sbb
xchg
cmp
ja
xchg
push
push
lds
push
cmp
mov
push
mov
arpl
push
xor
hlt
cmc
fnstenv
ret
sub
movs
jns
aaa
add
(bad)
test
loopne
ret
xchg
jns
ret
lea
neg
xor
sbb
jbe
add
out
xchg
mov
mov
or
mov
fdivr
xchg
lods
iret
test
mov
adc
cmc
loop
mov
xchg
and
popf
imul
mov
in
mov
jp
xor
mov
fimul
loope
shr
dec
sub
aaa
scas
fistp
ror
mov
test
lods
push
or
sar
frstor
inc
jmp
adc
movs
rol
mov
jg
mov
add
cmp
loopne
shl
push
push
sbb
in
ins
xor
xor
adc
xor
add
js
or
and
in
bound
xchg
jne
loop
xchg
cmp
in
sub
mov
inc
outs
mov
rol
rcr
sub
and
pop
cmp
mov
ja
shl
push
in
ins
ins
mov
fwait
enter
js
adc
sub
inc
rcr
retf
out
adc
xchg
dec
adc
and
jo
add
sahf
mov
imul
cmp
jne
xchg
jne
fsub
fcmovne
pop
push
or
pusha
cwde
adc
jns
and
xchg
mov
out
jno
inc
mov
in
repnz
xchg
in
inc
loopne
xchg
stos
mov
push
popa
mov
ds
fwait
(bad)
mov
jno
xchg
lods
arpl
mov
fistp
mov
int3
enter
add
icebp
popa
inc
cmp
fdivr
adc
inc
popf
pop
retf
fwait
pusha
ja
mov
cmp
inc
ret
rcl
bound
xchg
mov
popf
pop
xor
jo
push
stos
rol
mov
mov
out
stos
sbb
sub
fild
js
mov
in
outs
adc
dec
xchg
repz
adc
int3
fist
test
inc
pop
mov
je
add
sbb
sub
into
add
xchg
mov
sbb
test
sub
int3
int3
sub
mov
sbb
retf
stc
bound
sub
les
ins
fstp
call
arpl
mov
(bad)
lds
movs
mov
xchg
out
and
scas
or
sbb
cs
xchg
call
imul
lods
xchg
ret
add
inc
lea
daa
std
add
and
iret
ror
shr
or
scas
in
push
mov
jl
cmps
xchg
int3
out
iret
push
je
add
push
scas
and
adc
aaa
aaa
cli
aaa
leave
add
push
ret
pop
mov
(bad)
and
lods
jge
(bad)
jae
sbb
mov
jo
int
je
xlat
clc
mov
cmp
cs
int
xor
out
in
call
das
or
dec
inc
jle
loope
mov
fnstsw
aas
xlat
les
inc
dec
ds
ret
(bad)
out
outs
out
pop
sub
inc
mov
pusha
mov
out
sub
xor
push
mov
adc
loop
jbe
mov
call
popa
dec
movs
cmp
popa
adc
loope
lods
jmp
lea
sbb
adc
xor
cld
jmp
jle
adc
mov
push
cmp
dec
sbb
test
aam
push
cmp
push
test
mov
repnz
xchg
fs
add
pop
push
push
into
cld
sub
jl
xor
jbe
scas
dec
push
inc
xor
call
int3
mov
xor
int3
pop
inc
xchg
or
imul
gs
cmps
jle
clc
xchg
jno
dec
(bad)
into
push
into
push
out
jp
xchg
pop
and
or
sbb
inc
mov
(bad)
mov
adc
mov
or
pushf
add
aas
leave
nop
call
dec
enter
ss
sbb
adc
mov
xchg
in
jle
mov
and
xor
sbb
dec
cmp
fs
jl
imul
sbb
aad
fdiv
adc
hlt
mov
arpl
cli
mov
int3
dec
cmp
clc
test
pusha
retf
mov
test
or
mov
push
enter
cdq
xor
icebp
inc
out
mov
xchg
rol
out
vpshufhw
add
fwait
jns
mov
dec
and
pop
ret
mov
mov
pop
addr16
mov
mov
sbb
gs
mov
and
(bad)
in
mov
imul
sbb
and
jb
movlhps
das
mov
dec
dec
jmp
mov
pushf
add
clc
cs
and
test
mov
xchg
jge
add
pop
push
jg
or
push
or
test
push
xchg
mov
mov
adc
rcr
fild
dec
fsubr
je
cmps
lods
jge
int3
inc
std
hlt
pop
into
mov
pop
shl
jg
jbe
rcr
leave
adc
ret
dec
enter
add
cmp
push
or
add
rol
dec
ja
cmp
and
pusha
xchg
sub
enter
mov
adc
fist
retf
int
jmp
arpl
jl
mov
fwait
jecxz
cs
or
mov
lods
mov
xchg
loopne
sub
xchg
add
call
sbb
(bad)
dec
jecxz
dec
adc
lahf
cwde
push
test
mov
sbb
fldenv
ficomp
inc
repnz
pushf
cmps
jmp
xchg
mov
in
outs
cld
push
mov
test
int3
in
call
mov
pop
fdivp
stos
mov
pusha
mov
dec
mov
add
jae
les
out
adc
cwde
mov
inc
xor
leave
inc
jne
outs
(bad)
mov
ret
repz
sbb
(bad)
lock
lds
sub
mov
add
inc
cmps
cwde
inc
jo
inc
mov
fsubr
cmp
fcmovnu
out
adc
lahf
(bad)
call
shr
stos
add
cmp
pushf
(bad)
pop
or
stc
jmp
jp
mov
je
dec
fldcw
movs
into
adc
add
xor
inc
stos
sbb
inc
xchg
and
je
push
enter
dec
rcpps
or
dec
inc
outs
sti
iret
mov
sbb
sub
(bad)
not
dec
stos
push
scas
xor
std
jnp
or
xchg
sbb
sub
xchg
sahf
scas
cmp
adc
adc
push
enter
cdq
ds
leave
in
daa
jmp
stos
and
mov
dec
cmp
in
das
pop
cmp
cmp
sbb
push
movs
jle
div
sbb
jno
aad
push
les
mov
and
dec
sti
cdq
xor
jbe
jl
inc
ret
cs
dec
inc
push
call
daa
outs
or
cs
les
cdq
inc
inc
add
mov
fscale
cld
enter
pop
dec
mov
fild
sub
shl
pop
xchg
jmp
repz
js
add
adc
mov
mov
mov
sbb
add
jnp
jae
mov
in
(bad)
sahf
cli
data16
std
or
mov
xor
sbb
movs
dec
xor
xchg
popf
mov
test
fist
in
ret
jae
call
mov
xor
mov
push
and
rol
dec
or
sub
arpl
mov
push
lds
jbe
xchg
cmp
push
sahf
idiv
xor
cmps
(bad)
ror
(bad)
dec
mov
push
xchg
icebp
loop
or
mov
clc
sbb
sub
mov
sub
int3
jmp
cmpxchg
sub
lods
out
add
mov
xor
test
add
stc
xlat
sbb
push
mov
push
jb
add
xchg
cmp
mov
aad
jg
pop
imul
cmp
jo
mov
shr
cmp
rcr
jle
out
aad
dec
dec
(bad)
jns
stos
popf
psrad
cwde
mov
(bad)
icebp
jmp
das
push
xchg
in
sbb
adc
sahf
mov
mov
sti
sti
into
mov
jne
add
les
xchg
movs
adc
ss
cmps
xchg
ret
clc
nop
jb
jbe
cmp
std
jno
jno
mov
inc
inc
push
cli
in
or
push
aaa
out
jo
cmp
sahf
lds
nop
nop
nop
mov
push
sub
int3
sub
out
(bad)
sub
sub
dec
push
ror
dec
cmp
pop
paddusw
dec
mov
mov
test
sbb
mov
enter
mov
and
or
xlat
call
nop
and
cmp
or
dec
pop
add
jno
mov
std
sti
fiadd
out
jno
xchg
movs
sbb
pop
imul
xor
movs
icebp
mov
and
in
and
sbb
push
mov
(bad)
fldenv
xor
ja
sbb
dec
xchg
add
dec
adc
nop
retf
mov
cmps
push
outs
xor
aas
outs
xlat
loop
iret
and
jmp
adc
je
push
add
add
das
loope
ins
cwde
jne
add
std
xor
cmp
add
std
arpl
int
xor
push
in
in
xchg
sbb
sbb
push
out
pop
mov
out
fs
push
pop
push
mov
push
mov
div
pushf
push
dec
in
jne
mov
xchg
add
popf
iret
push
xchg
scas
sub
shl
loop
int
ins
sbb
jne
push
sub
mov
and
pop
pusha
shl
imul
leave
sti
repnz
das
ds
adc
imul
jge
cs
dec
fs
add
push
dec
inc
(bad)
ror
out
mov
imul
idiv
adc
arpl
dec
outs
sahf
iret
ror
sbb
pop
inc
cmp
retf
cmc
push
add
mov
(bad)
push
clc
ret
sbb
sbb
sub
addr16
in
mov
sub
dec
jp
cwde
ins
and
jecxz
mov
call
ret
repnz
ret
and
jb
adc
lods
mov
pushf
inc
lea
mov
sbb
pop
cmp
fbld
aaa
stos
adc
stos
fs
shl
cmp
or
xor
clc
js
loope
call
pushf
or
jno
or
retf
sbb
cmps
cmp
int3
mov
es
mov
cmps
and
jmp
push
mov
pusha
scas
js
cmp
out
mov
sbb
nop
cli
add
cmp
add
mov
mov
pop
(bad)
xchg
jns
lods
sbb
push
and
scas
scas
cmc
frstor
xlat
jo
sub
mov
ds
ret
rol
push
mov
mov
int3
ins
loop
fwait
cld
mov
lea
add
mov
jne
fyl2x
push
(bad)
and
add
xchg
aaa
outs
mov
inc
adc
pop
mov
mov
jmp
sub
or
imul
cdq
test
outs
mov
stos
in
mov
shl
shl
jg
leave
pop
into
stos
cmp
add
or
push
(bad)
mov
push
xor
and
mov
ins
ss
imul
in
push
sub
dec
lods
call
cmp
sub
or
cmp
rcr
fldenv
mov
out
cmps
movs
aaa
jnp
cmp
xor
mov
stos
mov
dec
retf
pop
cmps
adc
in
cmp
ror
xor
(bad)
adc
push
int
ins
ins
fimul
or
adc
inc
mov
and
mov
dec
cmp
sub
mov
sbb
mov
push
hlt
inc
dec
xchg
cmp
clc
je
pop
lahf
sbb
stos
sbb
mov
pop
push
ds
ss
push
(bad)
sbb
ror
push
mov
push
sub
jne
pusha
nop
or
cmp
or
les
fbld
pop
jmp
std
mov
cmp
cmps
cmc
bound
mov
cld
mov
leave
or
call
inc
cmp
sbb
mov
jne
call
cmp
cmp
fiadd
call
test
cli
mov
jae
cmp
addr16
test
xchg
sbb
retf
and
(bad)
fstp
jo
add
js
mov
dec
adc
in
call
adc
xor
fimul
dec
loope
pop
loop
fdivr
adc
jle
aam
bound
xchg
push
xor
leave
fnsave
pop
mov
in
xlat
xchg
out
dec
adc
call
mov
cmp
xor
jg
jl
les
cs
mov
jmp
scas
push
mov
out
loop
sub
sbb
lahf
dec
push
pop
jmp
xchg
ins
mov
mov
mov
test
popf
test
icebp
jecxz
cmps
loope
test
fild
inc
mov
js
cmp
add
mov
ret
ror
out
ficom
jl
sub
sub
jmp
pop
adc
out
test
jge
inc
sbb
daa
retf
mov
or
retf
mov
mov
les
sbb
or
cmp
mov
mov
prefetcht2
push
mov
push
pop
xchg
sahf
jmp
ja
gs
xor
imul
cmc
iret
dec
xchg
and
in
dec
mov
xchg
(bad)
mov
stos
imul
mov
shl
add
pushf
enter
push
sub
jmp
sub
stc
jb
ret
rol
pushf
cwde
adc
js
add
sub
add
adc
std
cmp
add
or
inc
(bad)
mov
mov
test
mov
int
add
lds
xchg
mov
inc
pop
jge
mov
call
xlat
xor
cs
xlat
jg
xor
lods
mov
mov
movs
ins
int
scas
sbb
ja
adc
xor
cmp
scas
inc
ja
repz
mov
mov
and
push
push
mov
dec
add
addr16
add
mov
add
das
inc
fmul
cmp
sub
mov
mov
mov
out
sbb
fisttp
movs
stc
xchg
add
mov
cmps
popa
call
or
inc
retf
dec
scas
jns
repnz
adc
cmp
fild
fs
inc
mov
xlat
add
fs
call
sbb
cli
cmp
sbb
ret
ins
(bad)
out
or
fdivp
mov
jmp
cwde
sbb
sbb
mov
xchg
pushf
and
sbb
lds
push
sar
ins
popa
scas
and
push
mov
(bad)
not
mov
fnstsw
ret
clc
adc
and
add
jno
cmp
jg
lods
div
sbb
jg
adc
cmp
test
fmul
repnz
imul
in
cdq
cmps
(bad)
ror
sbb
lea
mov
stos
cmc
push
fist
mov
fisubr
sub
mov
aam
adc
add
fcomp
xchg
sub
loope
pop
inc
sbb
idiv
sbb
lea
jnp
std
enter
pop
in
and
adc
mov
cmp
jno
inc
inc
out
mov
sub
adc
push
loopne
mov
ja
and
test
test
ret
and
jge
and
mov
adc
mov
dec
je
or
in
and
add
cld
mov
not
mov
and
ds
mov
jl
sub
repnz
(bad)
dec
cmp
and
out
push
sahf
aad
or
aas
call
sub
inc
mov
or
sbb
fst
ret
push
pop
sub
dec
mov
fwait
rcpps
add
(bad)
out
shl
test
jle
add
push
stos
jo
sbb
rcr
mov
sub
push
or
test
pop
mov
movs
std
call
add
rcr
dec
scas
or
addr16
in
pop
and
cmp
movups
xor
call
jno
pop
adc
sbb
xchg
cmp
and
jg
mov
sar
jne
adc
dec
add
mov
mov
and
pop
mov
test
adc
mov
lds
pop
test
and
jnp
inc
jmp
mov
ficomp
aas
xchg
sbb
pop
stos
inc
sub
xor
dec
adc
adc
or
outs
(bad)
outs
xor
sbb
pop
test
icebp
call
jl
mov
out
cs
and
mov
ret
in
lods
sub
dec
pop
jae
jp
lock
fistp
jae
sbb
inc
fisubr
leave
push
adc
retf
ds
jmp
adc
aaa
cdq
pop
add
pop
imul
(bad)
repz
mov
sbb
jne
xlat
aas
fdiv
cwde
sbb
sub
(bad)
xchg
inc
js
aas
xor
mov
bound
xor
inc
mov
fidiv
add
xchg
aas
dec
inc
scas
fmul
int
inc
jl
outs
in
mov
test
sti
xor
cmp
mov
push
xor
mov
sahf
push
scas
retf
movs
shl
test
xchg
adc
dec
fwait
mov
fdivr
mov
sub
adc
movs
jbe
(bad)
jle
adc
fbld
gs
jg
(bad)
jb
cli
loopne
xor
test
sub
inc
jmp
loop
dec
jne
xchg
push
ins
outs
inc
or
adc
ret
scas
push
sub
data16
xlat
push
mov
mov
mov
pop
les
fadd
rcl
das
push
movaps
std
cmp
sahf
cmps
pop
push
pop
dec
ficomp
jl
sub
jg
repz
inc
sub
or
int3
mov
adc
mov
xlat
mov
mov
imul
and
out
lea
outs
adc
sbb
or
add
xor
(bad)
(bad)
jmp
push
xchg
into
data16
xrelease
test
cld
mov
pop
adc
cwde
inc
test
jg
movs
rcl
add
repnz
inc
test
repz
dec
jmp
retf
stc
loope
add
dec
mov
add
mov
adc
sti
scas
arpl
jae
jge
loopne
pushf
fstp
inc
sbb
inc
mov
sub
ins
cmps
sti
sub
fiadd
retf
icebp
mov
imul
aaa
mov
dec
ret
imul
daa
int
push
xchg
xor
sub
xchg
mov
enter
pop
movs
dec
hlt
out
inc
arpl
sub
sti
jl
sbb
xchg
push
ret
dec
test
out
sub
bound
ja
call
dec
add
jb
mov
cmp
or
arpl
not
or
jle
gs
mov
xchg
cld
cdq
add
dec
adc
push
or
jmp
fld
pop
xchg
in
loope
repnz
mov
add
dec
cdq
sbb
hlt
into
mov
add
cmps
pop
xchg
adc
mov
rcl
pop
jae
outs
pop
sub
aaa
gs
push
sub
pop
mov
pop
sbb
xor
and
lea
imul
ins
and
fbld
shl
ins
test
xchg
ja
mov
(bad)
pop
or
dec
stc
in
pop
push
mov
(bad)
mov
or
movs
sbb
ror
or
mov
jb
cmp
ins
dec
pop
and
mov
and
jae
mov
mov
mov
cmp
or
lahf
sbb
and
sbb
jne
adc
cmc
sbb
inc
outs
xchg
aaa
cmc
xor
aad
test
jge
pop
out
hlt
jmp
add
xchg
mov
mov
push
popa
jns
push
int
stc
sbb
pop
or
pop
pop
cmp
les
cmp
(bad)
sbb
aaa
lea
cmp
pop
ficom
add
(bad)
xor
in
push
mov
les
cmp
sub
jb
fistp
dec
cmp
mov
mov
push
ins
(bad)
ins
aas
mov
test
mov
mov
pop
(bad)
xchg
out
xor
mov
cmp
sbb
arpl
xchg
imul
or
inc
iret
dec
and
in
mov
sub
cmp
xchg
out
adc
mov
cmp
(bad)
push
adc
jp
aam
jae
add
(bad)
adc
dec
popa
clc
sti
or
retf
(bad)
xor
xchg
push
or
mov
repnz
sti
mov
jmp
not
sub
in
ror
mov
repz
and
jecxz
test
loope
bound
aaa
stc
cs
sub
mul
dec
ror
ret
cmp
arpl
or
addr16
(bad)
into
movs
mov
jecxz
and
neg
mov
call
push
ss
shl
pop
loopne
push
pop
push
pop
sbb
cwde
dec
nop
adc
jae
jg
sbb
lods
clc
in
das
jmp
xchg
cmp
xlat
sub
in
scas
das
lahf
or
aaa
jmp
je
cmc
mov
ror
jo
icebp
les
xor
js
es
aam
aam
popa
xor
cwde
or
mov
pop
jmp
push
(bad)
das
rcl
mov
movs
movs
mov
iret
mov
sub
inc
aam
fadd
loop
aad
clc
adc
mov
xchg
dec
mov
xchg
jb
ins
or
cmp
sbb
dec
mov
jb
cmp
icebp
jmp
pop
dec
inc
test
movs
push
ja
call
add
(bad)
lock
inc
int3
jb
pop
data16
loop
nop
call
cmp
cwde
shl
mov
add
jnp
mov
clc
nop
out
mov
adc
fdivrp
das
mov
int
retf
lods
xchg
and
mov
jmp
call
stos
push
sahf
int3
cmc
dec
pop
lahf
jl
shl
push
xor
add
shl
in
push
and
push
outs
int3
fmul
sub
daa
les
repnz
stos
in
(bad)
jg
test
call
sar
arpl
pop
lea
add
mov
adc
je
mov
out
scas
xor
mov
jne
repnz
cmps
cmp
or
push
or
sub
ret
movs
ins
mov
(bad)
pop
fisttp
pop
jp
pop
xor
dec
mov
adc
jnp
cmps
int
jp
jp
dec
mov
xlat
cmp
clc
rol
test
shl
sti
xor
xor
ss
mov
push
push
pusha
aaa
adc
cmp
pushf
pushf
frstor
std
ja
shl
xor
cmp
xor
int
mov
out
dec
xchg
sbb
dec
stos
or
cmp
ficom
mov
dec
jno
arpl
push
aas
icebp
paddsw
daa
inc
das
dec
lea
mov
lahf
cmp
(bad)
cmp
cmp
sbb
hlt
pop
in
pop
inc
js
push
sbb
inc
dec
adc
cmps
scas
pop
add
pop
inc
outs
(bad)
addr16
fld
adc
in
mov
jle
mov
dec
lock
pop
sbb
mov
in
sub
and
test
inc
adc
stos
sub
test
inc
das
add
mov
xor
ror
mov
jno
shl
fimul
pop
cmps
dec
push
sub
xchg
fild
xchg
jne
ss
aam
jbe
shl
adc
leave
(bad)
addr16
add
push
or
bound
jnp
mov
jne
xor
ds
ja
ins
lods
aas
adc
cmp
cdq
enter
seto
push
xchg
jbe
pop
mov
movs
ror
aas
es
or
lock
xor
inc
sub
lahf
lock
sahf
jns
push
sub
xor
and
dec
sub
out
xor
in
add
retf
dec
mov
ret
mov
outs
stc
fisttp
dec
xchg
xor
addr16
adc
xchg
jno
sub
aaa
test
mov
mov
inc
push
cdq
popa
ror
sbb
stos
daa
jmp
or
mov
jo
jecxz
lods
push
retf
addr16
mov
repz
xor
jbe
add
movs
jno
push
not
jg
scas
les
mov
cmp
or
fisttp
jnp
add
loop
and
fcmovu
pop
dec
mov
mov
ss
test
xor
ins
fst
xor
nop
aaa
icebp
cmp
or
arpl
cmp
jae
call
xor
jb
repz
loope
ja
pop
jl
sbb
fstp
mov
mov
push
sbb
ss
rol
xchg
in
cmps
and
lods
mov
mov
out
dec
out
imul
pop
inc
popf
test
sbb
mov
jne
cmp
jl
fcomp
sub
xor
or
lahf
retf
dec
and
xchg
stos
aam
jns
nop
in
sub
sbb
scas
sub
in
add
and
cmp
xlat
mov
dec
lahf
ds
movs
cld
jbe
push
(bad)
(bad)
outs
sbb
stc
test
cmp
mov
movs
(bad)
xlat
fwait
cmp
inc
aad
push
fild
into
lock
add
fmul
ss
ss
pop
cmp
(bad)
imul
pop
cmp
or
aad
add
enter
es
sub
jp
iret
aaa
ja
ror
pop
push
jbe
daa
call
mov
repnz
push
retf
xor
adc
cli
ret
outs
das
sub
fisttp
je
scas
xchg
and
pop
inc
sub
mov
outs
aad
pop
mov
mov
rcr
xor
lock
rcr
inc
push
jl
xor
mov
cmp
jg
and
jbe
das
mov
sub
ja
(bad)
sub
or
and
fiadd
cs
js
add
cmps
xchg
or
pop
push
mov
ror
pop
pop
add
dec
(bad)
mov
test
std
fistp
popf
inc
push
or
pop
add
lock
pop
add
lea
xchg
and
mov
mov
pop
rol
mov
add
rcl
lods
(bad)
loop
retf
jb
lods
inc
push
mov
sub
stc
dec
mov
repz
loopne
jmp
inc
js
jg
test
cmps
loope
mov
and
inc
(bad)
cmp
inc
push
sbb
xchg
test
rcr
pop
pushf
or
push
int
(bad)
pop
adc
mov
retf
xor
sub
stos
lods
cmp
test
(bad)
out
jl
outs
ja
inc
jnp
stos
xor
inc
sbb
hlt
idiv
test
mov
ja
or
fistp
push
test
sbb
adc
pop
jle
ret
popa
xor
pop
xchg
inc
popa
shl
cs
xor
jae
lock
mov
xchg
xchg
mov
inc
scas
push
push
inc
xchg
jecxz
push
test
push
rcr
jle
cmp
jp
jbe
(bad)
jae
mov
adc
rcl
repz
push
call
es
ss
jmp
rep
adc
shl
or
mov
cmp
repz
shr
or
fist
push
jnp
sub
lock
and
jge
lods
jno
loopne
jge
ds
loopne
dec
pop
fsub
(bad)
mov
retf
retf
dec
in
rcr
and
sbb
and
xor
push
popa
dec
cmp
push
xor
add
jb
leave
loopne
or
dec
pop
idiv
inc
push
jne
or
ror
adc
aaa
fucomp
movs
xor
shl
mov
shl
popf
push
cmps
inc
xchg
js
inc
cmc
jmp
mov
sahf
lods
ret
fld
outs
xor
bound
push
call
scas
and
dec
cmps
adc
or
jge
cs
jmp
jne
adc
push
cmp
dec
cmp
inc
ret
mov
mov
mov
jo
outs
lock
push
mov
fcom
pop
add
cmp
jb
fbld
leave
jp
movs
movs
loopne
outs
cs
lds
sbb
push
or
arpl
idiv
mov
jge
fnstsw
out
xor
mov
sti
mov
and
lods
cld
fld
hlt
xchg
dec
ds
not
mov
(bad)
pop
movs
push
call
cmp
lods
xchg
retf
aaa
jmp
stos
outs
dec
out
ins
mov
push
out
jns
adc
je
mov
ja
pop
mov
stos
adc
adc
jg
das
xchg
retf
fdivr
stc
xchg
sub
retf
mul
mov
dec
mov
xor
repz
sub
dec
std
fstp
mov
ret
pop
inc
stc
pusha
mov
jnp
adc
jnp
push
das
push
fisubr
push
xor
or
iret
in
mov
ss
pop
dec
adc
xor
pop
aam
mov
call
repnz
jecxz
lahf
inc
cs
pop
aaa
loope
push
mov
stos
add
push
jl
add
xchg
out
shr
cmp
cmp
xor
ret
movs
pop
aad
add
mov
hlt
push
rcpps
dec
pop
jmp
lds
xchg
mov
mov
mov
cmps
ins
cli
xchg
out
int
cvtdq2ps
pop
xchg
hlt
mov
sub
xor
mov
jo
nop
push
pushf
out
mov
scas
icebp
xor
inc
mov
mov
dec
ret
sahf
int3
test
jae
outs
mov
or
cdq
test
push
push
stos
cmp
jae
or
rol
jbe
add
add
cmovl
jge
mov
xchg
xlat
sbb
push
xlat
or
dec
adc
out
sub
push
push
ret
cli
out
repnz
push
push
jmp
mov
nop
pop
push
test
shr
xchg
cmp
mov
and
jg
xchg
sbb
outs
popf
retf
fldenv
sbb
sar
shr
fadd
arpl
xchg
enter
pushf
fiadd
out
loopne
(bad)
cmp
daa
or
or
push
add
dec
dec
aam
call
ss
push
ins
dec
fistp
mov
inc
lods
addr16
cmp
sub
lds
inc
addr16
and
sbb
div
movs
leave
push
sbb
mov
mov
scas
test
adc
test
add
lods
dec
mov
fsubr
aam
pop
dec
mov
mov
rol
call
fsubp
add
inc
pop
scas
push
jo
loopne
or
in
fdecstp
ficom
push
in
call
mov
mov
xchg
addr16
xchg
xchg
jmp
xchg
pop
repnz
mov
pop
hlt
mov
mov
jns
mov
aad
dec
repnz
jmp
in
movs
es
loop
(bad)
pop
jns
push
xor
mov
mov
xor
xchg
xlat
cwde
pop
pop
icebp
inc
sbb
jae
mov
pusha
xchg
retf
sbb
dec
dec
push
fild
pop
popf
cmps
pop
dec
xchg
ss
jg
repz
xchg
jmp
cdq
outs
test
mov
dec
int
sub
(bad)
jae
dec
sbb
aaa
xor
pop
adc
in
pop
retf
mov
mov
sub
sbb
cmp
lahf
mov
(bad)
out
pushf
aam
xchg
data16
mov
paddsb
xchg
call
jecxz
dec
dec
or
gs
test
cld
jae
iret
jge
loop
or
jb
popa
stos
pop
mov
push
inc
xchg
and
(bad)
pop
div
dec
lock
loopne
aam
add
cmp
pop
movs
xlat
push
cli
adc
add
mov
or
fsubp
or
and
add
jne
lahf
setae
ficomp
out
sub
mov
and
mov
push
or
mov
inc
push
pop
retf
and
pop
dec
adc
add
clc
sub
push
push
jne
pop
dec
mov
jnp
xchg
push
iret
mov
xchg
rcr
add
and
test
fild
clc
es
aas
lds
in
sbb
mov
test
cmp
iret
les
test
outs
aam
or
cdq
out
mov
xor
aaa
and
into
pop
dec
inc
ss
adc
cmp
jmp
fdiv
shl
xor
int
or
std
xchg
xchg
mov
dec
jecxz
mov
mov
fisub
clc
aad
gs
std
jno
fwait
or
ret
and
imul
pop
jne
icebp
inc
scas
test
(bad)
ss
mov
leave
mul
ins
fsubr
sub
push
pop
pop
dec
xlat
(bad)
sbb
push
adc
adc
in
jge
(bad)
cmp
aad
push
inc
mov
movs
aad
iret
jmp
sbb
jb
inc
lea
cmp
icebp
aaa
out
jb
aaa
sbb
mov
push
xlat
push
inc
adc
cdq
loop
mov
inc
ja
mov
push
push
mov
ss
call
popf
sub
ja
fisttp
in
arpl
cld
sub
loopne
mov
add
cmp
retf
sbb
dec
lock
pusha
jg
cs
inc
and
test
les
daa
lock
into
(bad)
mov
lods
in
mov
gs
push
adc
shl
ror
sbb
mov
in
mov
xchg
shl
ds
push
or
mov
repz
mov
dec
in
das
push
fsub
inc
retf
pusha
inc
aam
xlat
pop
adc
nop
add
aam
out
cld
pop
gs
or
inc
jns
inc
repnz
dec
mov
in
xchg
mov
push
mov
jg
push
pop
adc
push
push
jo
or
out
lods
mov
mov
sub
cmps
loopne
std
xchg
ds
(bad)
mov
test
or
cmp
sar
out
mov
gs
rol
jbe
push
in
mov
xchg
cmps
mov
push
les
mov
cld
fsubr
test
ret
es
loopne
mov
ret
adc
sub
iret
outs
retf
or
pop
jno
and
(bad)
out
mov
(bad)
ficomp
pop
jg
shl
xor
sub
fcmovbe
cmps
sub
or
pop
cmp
mov
and
mov
cdq
or
mov
mov
in
repz
or
ds
dec
icebp
outs
jmp
pusha
pop
hlt
shl
in
xor
pushf
stc
sahf
cmp
retf
push
add
cmp
dec
in
dec
lods
jnp
jecxz
mov
or
jmp
mov
shr
iret
ins
shl
sub
mov
or
ds
addr16
cwde
adc
aas
ret
and
movs
shl
xor
or
call
pop
imul
or
dec
sub
push
and
and
ror
jmp
(bad)
jae
push
add
jl
ins
ins
out
jo
lock
fcmovnbe
jb
(bad)
jge
pop
inc
or
(bad)
inc
push
sbb
mov
fbstp
pop
imul
pop
inc
fisttp
ja
push
rcr
outs
adc
jb
pop
es
das
xlat
sub
add
push
pop
mov
into
(bad)
push
dec
jge
adc
xchg
test
sahf
retf
es
or
es
fild
sahf
or
jbe
pop
jno
sahf
div
xchg
cmp
pop
pop
mov
push
ds
test
call
stos
and
outs
movs
dec
in
dec
popf
add
cmp
cwde
xor
loopne
inc
lods
fcom
(bad)
ror
fcmovb
cmp
test
xchg
pop
mov
inc
push
xor
cmc
or
and
jae
out
and
xchg
xchg
add
sahf
nop
push
in
push
jb
cmp
push
mov
ss
pop
sub
cdq
mov
repz
lds
sub
stc
icebp
inc
push
fbstp
fsub
add
dec
pop
mov
pop
push
xchg
pop
mov
rol
jb
xor
cmp
fwait
jae
add
push
fstp
idiv
fwait
aam
pushf
push
push
stos
(bad)
inc
or
scas
cmps
jge
sub
daa
outs
jb
cwde
mov
jge
xor
loopne
mov
mov
stos
(bad)
cld
dec
xchg
fwait
lods
movs
clc
push
cs
push
test
xchg
dec
add
mov
popa
and
jns
scas
inc
lock
lock
adc
mov
jb
mov
es
dec
movs
loopne
cmp
push
jo
pop
push
shld
mov
pusha
dec
xchg
dec
mov
mov
mov
fbld
fimul
das
push
pop
test
es
(bad)
sub
pop
sbb
mov
sub
and
mov
push
xchg
dec
mov
leave
sbb
popf
cmp
mov
test
lock
cmp
xchg
out
push
xchg
adc
cmp
mov
test
hlt
lock
mov
cmp
movs
pop
pushf
jg
push
and
dec
test
mov
jge
sbb
sahf
ficom
pop
aas
xchg
pop
push
imul
dec
and
cli
movs
lods
inc
movs
sti
retf
retf
push
jg
cmp
or
cli
add
xor
mov
(bad)
cld
cs
inc
sub
mov
imul
aad
push
imul
dec
jne
nop
push
out
scas
je
add
(bad)
mov
jecxz
mov
jmp
cmp
(bad)
pusha
bound
xchg
mov
lahf
sti
lods
mov
sti
adc
and
sub
pop
xchg
inc
and
adc
js
inc
fsqrt
cmps
fwait
mov
retf
ins
jp
pop
sub
push
push
aas
or
adc
mov
jae
push
add
xchg
adc
xchg
daa
ins
push
xor
leave
mov
xor
hlt
jecxz
(bad)
jbe
mov
add
dec
cmps
or
mov
cmps
add
mov
ret
xchg
xchg
movs
xor
pop
cwde
jecxz
cmp
mov
div
mov
cmp
ins
dec
pop
mov
cmps
xchg
xor
mov
mov
mov
and
lds
xchg
and
pop
fnstcw
stos
and
sub
dec
sbb
push
and
jo
push
dec
sbb
xor
pushw
cmp
pop
cmp
push
test
je
(bad)
sbb
out
xchg
inc
pushf
sub
xchg
punpckhwd
(bad)
dec
cwde
fidivr
mov
les
(bad)
cdq
(bad)
(bad)
imul
outs
(bad)
ins
jle
into
cmps
cmp
add
add
idiv
jecxz
test
repz
in
xchg
or
and
sar
addr16
lods
hlt
(bad)
in
aaa
dec
mov
ds
add
bound
xchg
xchg
ret
jl
mov
movs
mov
stos
out
mov
loope
mov
test
sub
push
retf
jl
inc
or
out
dec
rol
xor
fptan
push
bound
or
push
xchg
adc
cmp
dec
inc
inc
test
enter
(bad)
in
mov
in
cmps
movs
notrack
mov
mov
or
adc
ins
adc
jmp
clc
mov
out
ins
dec
xchg
retf
mov
xor
dec
add
es
lods
adc
jmp
push
xchg
xchg
mov
fadd
push
shr
fimul
and
adc
pop
inc
int
push
arpl
(bad)
repnz
cmps
adc
daa
fimul
inc
add
fwait
inc
dec
inc
pusha
retf
xor
ret
popa
add
pushf
ret
xor
lds
mov
mov
in
(bad)
div
lods
rcr
fbstp
push
rcr
rol
push
fidivr
test
fwait
mov
push
mov
movs
hlt
sub
sub
pop
mov
scas
push
dec
es
out
dec
sbb
lahf
pop
sar
dec
into
les
int3
popf
pop
push
popa
lock
mov
lods
shl
jae
sbb
lahf
imul
push
pop
pop
add
sub
outs
jle
push
mov
jo
jno
int3
(bad)
call
jge
ror
stos
push
pop
ror
pop
pop
and
scas
jecxz
pop
jns
add
push
adc
shl
pushf
mov
jb
cmp
fsubr
pushf
lods
push
popa
les
icebp
fsubr
push
stos
sub
and
out
push
mov
call
mov
inc
fidivr
cmp
and
add
xchg
cwde
mov
xchg
(bad)
dec
adc
dec
mov
fstp
cmp
or
pop
movs
mov
retf
cld
enter
std
cmp
loope
in
rcr
mov
mov
adc
inc
out
add
mov
(bad)
mov
fsubr
ins
out
ret
or
loope
mov
inc
es
call
loope
cld
sar
add
shl
(bad)
sub
sbb
cmp
out
fnstsw
cli
inc
call
jp
das
call
xchg
scas
hlt
mov
sbb
sahf
cmp
xchg
push
outs
mov
sub
mov
pop
dec
inc
cmps
add
or
loop
and
cmps
xchg
mov
out
sar
div
outs
xor
stos
fild
add
mov
adc
mov
xchg
loope
xor
mov
jg
test
cmp
jg
cmc
mov
xchg
mov
dec
popa
and
mov
inc
dec
std
frstor
retf
xchg
daa
jne
mov
loope
push
and
retf
add
pop
aad
mov
push
out
xchg
or
cld
sbb
xsavec
lahf
cmp
leave
push
ins
cs
ins
cmp
cmc
(bad)
aas
mov
lahf
in
pop
lods
inc
sub
sahf
mov
lock
mov
fist
push
jmp
dec
jns
xlat
(bad)
fisttp
ficomp
inc
jnp
inc
pop
push
dec
loop
cdq
inc
sysret
mov
cld
pushf
jno
jae
jl
clc
repnz
stc
pop
stos
lods
jp
jo
push
pop
push
ins
fisttp
int3
dec
xchg
push
cmc
aad
mov
sub
cld
stc
xor
mov
pop
nop
outs
imul
outs
xor
ror
cwde
gs
add
jb
jg
enter
xchg
sub
iret
clc
ins
jne
or
push
mov
inc
fild
sbb
dec
sub
pop
push
clc
mov
repnz
out
test
add
push
adc
lahf
cli
lods
jae
push
dec
xor
pop
loop
test
inc
mov
retf
add
jmp
cld
and
cmp
mov
sub
call
xlat
sub
(bad)
mov
jns
lahf
(bad)
mov
add
ds
(bad)
cmp
mov
xchg
ss
test
movnti
aas
test
mov
inc
imul
pop
out
scas
jne
mov
ret
xchg
retf
xor
shl
cmp
in
or
test
ins
stc
jmp
push
pop
cwde
jecxz
loop
sbb
cmp
inc
mov
mov
icebp
push
mov
xchg
ror
jns
xchg
mov
xchg
addr16
mov
stos
call
mov
dec
xor
in
cwde
push
fist
cmps
xor
(bad)
out
jecxz
adc
shr
mov
scas
and
pop
push
(bad)
push
ficomp
jl
dec
popa
fwait
hlt
mov
and
lahf
cwde
jmp
inc
cmp
or
es
fiadd
fs
mov
loop
mov
stc
sbb
push
or
xor
(bad)
push
in
inc
cmp
cdq
jae
sub
pushf
mov
mov
inc
dec
out
add
jae
or
push
mov
push
cmp
test
ja
jg
ret
dec
cmp
mov
adc
pop
and
mov
fnsave
(bad)
push
mov
mov
popf
cmp
jle
(bad)
xor
and
inc
(bad)
cmc
mov
jb
fdivr
xor
or
movs
mov
lods
inc
or
neg
call
mov
retf
dec
iret
out
test
mov
inc
or
or
mov
xlat
push
aas
ins
ja
outs
out
vpshldvq
xchg
inc
daa
jp
mov
sub
mov
mov
int3
fisubr
mov
pop
and
add
mov
dec
std
jb
and
rep
inc
mov
int3
pop
cdq
sbb
rcr
and
das
jge
push
je
cmp
lds
enter
sbb
test
inc
scas
(bad)
les
mov
not
fdivr
in
je
out
adc
shr
stc
dec
popa
inc
push
and
xchg
push
mov
movs
retf
cli
retf
mov
sahf
jae
imul
in
dec
jmp
in
and
test
int3
and
aam
aam
pop
inc
dec
xchg
mov
pop
jnp
and
xchg
xchg
lds
pop
shl
mov
ja
push
xor
pop
xor
xchg
and
xchg
das
pushf
rcl
out
inc
inc
push
push
mov
jmp
pop
outs
xor
push
fbld
sqrtps
dec
jne
dec
loope
clc
enter
in
mov
mov
sar
pop
xchg
enter
retf
dec
in
cmp
(bad)
aam
push
mov
adc
sbb
ret
sub
inc
cmps
cld
cli
ins
xchg
les
ficom
out
in
jbe
mov
(bad)
aam
neg
enter
mov
push
adc
in
push
inc
mov
push
(bad)
fdivr
(bad)
loopne
icebp
mov
jge
pushf
and
test
out
shl
jbe
(bad)
jl
inc
jge
jmp
or
inc
(bad)
pop
push
shr
add
jbe
aas
ret
mov
(bad)
jns
cmp
inc
xor
dec
rcr
push
aam
push
lea
int
add
or
data16
mov
inc
cmp
cs
sbb
adc
dec
addr16
outs
inc
mov
arpl
mov
retf
dec
xlat
inc
mov
lds
add
mov
push
fldenv
push
cmp
mov
xor
repz
sbb
mov
xor
dec
in
pusha
rcl
inc
test
adc
mov
push
cmp
adc
adc
jo
pop
popa
mov
mov
xchg
imul
sbb
pop
add
push
mov
cmp
xchg
addr16
dec
cmp
xchg
pusha
fcmovu
dec
mov
loop
lods
and
mov
push
cmp
cmp
mov
not
jo
rcr
push
or
add
les
in
push
mov
jb
shl
shr
mov
sbb
inc
and
inc
jnp
push
repz
sbb
mov
xchg
xchg
jno
or
jb
rcr
jp
cwde
mov
cmp
add
daa
data16
add
and
sub
mov
add
in
xor
jb
test
mov
mov
jne
jnp
inc
xchg
mov
fmulp
fxtract
mov
rcl
pop
xor
test
sti
mov
mov
sbb
mov
out
jmp
or
enter
lahf
fistp
push
test
inc
loopne
shr
xchg
jecxz
cmp
mov
imul
retf
cmps
mov
retf
std
and
in
and
xchg
xor
jns
jne
mov
mov
cmps
jne
dec
xchg
popa
cwde
lods
cmps
and
push
call
push
ret
mov
in
stos
mov
fadd
push
rol
push
je
dec
inc
(bad)
loopne
and
imul
push
xchg
lods
int3
push
ds
add
xor
push
dec
pusha
test
test
les
mov
mov
ret
lea
xchg
inc
retf
and
pop
sbb
popf
fadd
mov
mov
push
es
or
xor
xor
xor
push
(bad)
fsubrp
loope
xlat
jp
fidiv
inc
xchg
idiv
add
call
mov
push
jns
xor
repnz
push
xor
shl
fisub
out
jge
stc
(bad)
andps
stos
mov
push
out
pop
mov
jecxz
dec
xchg
arpl
mov
data16
int3
or
arpl
out
push
icebp
mov
jnp
mov
daa
sub
sbb
nop
scas
xchg
inc
(bad)
aad
jl
cmps
mov
cs
fadd
sub
adc
xor
or
mov
adc
and
cld
mov
sbb
pop
into
mov
xor
cwde
mov
mov
push
bound
adc
test
addr16
xor
push
inc
jno
out
xchg
add
cmp
inc
into
or
sub
ror
ja
ror
int
(bad)
add
popf
mov
movs
xchg
mov
jae
popf
std
movs
mov
jne
pop
enter
rcl
mov
mov
arpl
jae
or
pop
push
lahf
and
push
add
push
mov
pop
es
scas
fucomip
sbb
mov
cmc
loope
sar
je
adc
push
jmp
(bad)
jg
jg
stc
iret
aaa
and
add
cli
or
and
lock
inc
dec
shl
push
pop
les
or
or
sbb
ret
push
loope
mov
adc
jle
popa
popf
pushf
retf
shl
inc
jle
xor
xor
(bad)
(bad)
and
sbb
add
or
cmps
fst
add
mov
repnz
je
add
cmp
je
add
test
xor
scas
or
push
js
mov
int
push
cwde
mov
inc
in
repnz
idiv
aad
dec
mov
pop
adc
jo
cmp
xor
mov
aaa
cmp
mov
in
add
push
call
iret
adc
ret
and
xchg
cdq
jo
add
jo
fild
inc
sahf
mov
mov
dec
and
push
lods
(bad)
(bad)
mov
loope
jmp
lock
aaa
inc
or
je
shr
xor
push
les
dec
xor
push
into
lock
out
repnz
or
or
add
das
lahf
cmps
add
fmul
enter
xchg
mov
scas
nop
mov
pop
shl
cmp
inc
cld
lods
mov
add
jg
jb
jge
rcr
or
sbb
in
popa
(bad)
retf
xchg
hlt
or
cwde
cmp
pop
cmps
in
das
popf
pop
and
(bad)
jbe
loop
test
mov
stos
gs
jnp
mov
mov
sar
lock
test
push
push
leave
sub
mov
jecxz
lea
mov
add
ss
push
sub
cmps
cs
mov
daa
mov
mov
lods
sbb
mov
test
out
mov
or
enter
(bad)
mov
xlat
sbb
popf
std
cmp
jl
in
(bad)
arpl
inc
sti
out
mov
cli
push
xor
xchg
jno
pop
ss
pusha
jno
iret
cs
dec
jo
pop
or
mov
mov
pusha
lds
mov
stc
push
xchg
(bad)
cmp
cmps
pop
xlat
mov
pop
push
call
jne
mov
fnstcw
xor
jne
adc
outs
cmovl
mov
cmp
lds
test
lods
mul
jae
ret
js
xchg
es
sbb
fisttp
pop
arpl
dec
call
jmp
jb
sbb
daa
mov
cmp
sub
dec
push
lods
jp
sbb
(bad)
mov
stos
cli
mov
adc
pxor
pop
add
mov
aaa
sub
not
mov
mov
inc
std
rcr
add
pop
dec
sbb
int3
add
cwde
or
mov
mov
lds
pop
arpl
xor
in
call
sbb
mov
out
mov
mov
mov
push
push
add
add
cmp
jge
cld
int
push
in
xchg
inc
in
mov
(bad)
xor
iret
mov
jle
pop
ret
or
repz
mov
sub
xor
call
out
xor
xor
cmp
pop
sbb
pop
inc
std
fcmovbe
inc
sbb
sahf
lock
aam
sbb
fadd
xor
dec
(bad)
sbb
mov
xchg
lahf
out
xchg
ret
ror
iret
out
fdivr
inc
or
shl
gs
dec
mov
adc
jmp
outs
pop
mov
mov
sbb
mov
adc
(bad)
jp
push
xchg
inc
jecxz
adc
inc
imul
fbld
scas
es
pop
add
dec
mov
daa
push
stos
xchg
xor
mov
std
lock
repnz
pop
es
jo
mov
mov
xor
psubw
inc
dec
icebp
sbb
ja
scas
xlat
iret
adc
rol
(bad)
push
popf
popa
(bad)
adc
out
jmp
test
xor
hlt
add
imul
in
stos
or
bound
stos
faddp
jnp
out
push
pop
cmp
retf
sahf
mov
leave
and
das
cmp
out
pop
add
mov
das
out
ins
sub
mov
push
or
pusha
pop
pop
pushf
fild
dec
jne
sub
aas
ins
push
push
cmp
mov
ds
pop
stc
fcom
addr16
(bad)
out
adc
aas
call
and
fwait
rcl
push
and
pop
xchg
cli
cdq
mov
scas
dec
lods
ins
xor
pop
repz
mov
lds
lock
(bad)
mov
fist
xlat
(bad)
not
jae
xor
cmp
(bad)
pop
jle
scas
cmp
and
mov
xchg
inc
cdq
leave
pop
add
jmp
dec
inc
jno
imul
mov
repnz
lods
mov
std
clc
jmp
adc
sub
data16
movs
leave
test
cld
push
mov
or
mov
cdq
cmps
test
into
pop
(bad)
mov
je
xor
adc
fcom
pop
les
or
sub
(bad)
shl
lahf
adc
into
iret
xor
imul
or
stos
cdq
cdq
jae
xchg
or
(bad)
mov
add
adc
cs
xchg
dec
add
or
xchg
jno
inc
ret
or
retf
cmc
xchg
pop
pushf
outs
movs
mov
mov
pop
out
xor
fld
xchg
(bad)
mov
push
ret
std
push
(bad)
movs
xchg
xchg
jmp
mov
jno
mov
fmul
mov
dec
jmp
fist
arpl
lds
mov
loopne
adc
push
aas
sbb
xchg
fimul
xchg
cmp
ret
mov
cmps
or
stos
and
jns
cmp
inc
cld
xchg
pop
xchg
inc
mov
aam
cs
pop
push
imul
test
dec
fidiv
ds
xchg
xchg
icebp
(bad)
xor
out
mov
call
pop
test
pop
xchg
das
add
imul
pop
dec
push
mov
sub
movs
cmps
sbb
mov
(bad)
and
aam
fiadd
jecxz
mov
call
jo
and
pop
cmps
cmps
scas
pop
lods
leave
cmp
jle
jle
and
les
bound
push
xor
inc
sub
sti
out
cmp
push
or
scas
stos
jo
loop
call
js
or
lods
inc
fidivr
sbb
mov
ins
pop
in
scas
xor
or
push
rol
(bad)
dec
addr16
dec
imul
movs
mov
cmp
ret
adc
fst
add
xlat
and
mov
cmps
(bad)
push
mov
dec
mov
fcmovu
outs
nop
lea
pusha
xchg
push
push
sub
add
aas
or
pop
jae
mov
jmp
mov
jge
movs
inc
push
xor
jmp
sbb
dec
cmc
jo
ror
bound
repz
imul
xor
clc
push
fsubp
mov
push
jb
dec
mov
and
movs
(bad)
in
xor
les
enter
(bad)
xor
mov
sub
(bad)
mov
mov
push
stos
xor
fcomp
fdivrp
sub
mov
imul
sub
push
cmp
popf
(bad)
push
cmp
jmp
shl
stc
jge
mov
push
pop
and
push
mov
jmp
fisub
xor
aad
mov
int
arpl
in
outs
add
dec
adc
mov
xchg
pop
jae
mov
mov
push
clc
pop
leave
mov
add
(bad)
fsub
cs
cmps
fbstp
xchg
pop
and
fwait
add
pop
jns
jns
fild
inc
pop
sbb
call
push
sbb
int
cmps
push
fiadd
add
mov
lock
fistp
aaa
pop
aam
mov
jl
sub
test
(bad)
xor
mov
push
out
pop
ja
adc
inc
inc
out
jmp
fisttp
ror
xchg
popfw
stos
arpl
out
rol
xor
mov
pop
xor
(bad)
stos
add
(bad)
shl
jnp
mov
addr16
jne
movs
in
fdiv
mov
dec
adc
hlt
(bad)
xlat
and
xor
out
std
push
call
jno
inc
loopne
inc
nop
or
mov
test
leave
lock
cmps
in
hlt
xchg
mov
in
clc
push
adc
inc
call
xor
inc
sbb
push
stc
in
scas
dec
gs
sahf
add
xlat
in
sub
mov
mov
sbb
mul
cmp
loope
mov
jo
adc
rcr
jg
shr
dec
or
mov
call
sub
xor
push
mov
cli
xchg
aad
mov
cmp
and
(bad)
fdivp
mov
jb
xchg
retf
stos
pop
push
or
dec
pop
repz
jnp
sbb
repnz
sub
push
cli
mov
fistp
mov
shl
dec
cmc
imul
movs
push
(bad)
mov
push
add
mov
dec
xchg
movs
sub
inc
test
les
cmps
xor
add
mov
imul
les
dec
(bad)
outs
mov
sub
dec
imul
jb
pop
xchg
xchg
sub
pushf
push
not
add
repnz
and
daa
pop
inc
jne
inc
xor
rcl
jle
sbb
push
pop
cmps
push
jmp
repnz
cmc
mov
mov
loop
mov
push
call
fisttp
mov
das
out
adc
and
sub
mov
or
or
ficom
test
mov
loop
or
and
jnp
out
(bad)
ss
push
jmp
cmp
loope
mov
rcr
sbb
mov
jne
jle
sar
pavgw
mov
repz
sar
mov
add
ins
rol
leave
sub
int3
lock
(bad)
xchg
out
fdiv
xchg
push
xlat
int
test
out
mov
pop
lds
jb
(bad)
jge
inc
arpl
push
pusha
adc
pop
jnp
mov
stc
pushf
push
test
mov
retf
adc
sahf
push
or
mov
jge
or
sbb
push
test
or
and
arpl
arpl
cli
les
cwde
xchg
scas
dec
fstp
push
xchg
add
push
in
scas
push
out
ds
mov
stos
pusha
(bad)
loope
and
push
pop
out
mov
and
out
xchg
and
inc
movs
inc
push
xor
(bad)
fisttp
xor
mov
mov
jne
ins
xchg
aad
sbb
adc
mov
rcl
arpl
sbb
mov
call
inc
hlt
dec
(bad)
js
out
loope
mov
fsubrp
mov
push
mov
in
sbb
add
call
movs
lods
or
cmp
mov
add
(bad)
sub
inc
mov
lods
mov
pop
je
xor
xchg
mov
cmps
inc
dec
outs
ins
mov
mov
bound
jge
scas
ret
les
push
jmp
mov
pop
xchg
lods
cmp
or
xchg
loop
jno
lea
xchg
sub
es
(bad)
push
inc
fld
test
icebp
(bad)
fcom
icebp
add
mov
aad
pop
in
ret
pusha
ret
add
call
mov
ins
pop
xchg
rol
mov
jmp
jmp
(bad)
push
cmp
cmp
call
dec
xchg
lock
sub
cli
mov
dec
gs
mov
pop
pop
pop
xchg
scas
xchg
test
cli
mov
jmp
jge
test
push
push
sub
ja
lods
mov
jns
sbb
jge
movs
jo
xor
dec
and
cmps
in
push
mov
add
push
adc
dec
push
ins
fs
sub
ror
mov
imul
cli
cmp
mov
cmps
cld
sbb
cmp
inc
jnp
fs
mov
jl
pop
jmp
sahf
repz
ja
inc
fnstcw
sbb
repz
mov
test
jns
xor
xchg
fs
xchg
pop
mov
stos
sub
cmp
push
lock
push
mov
jle
and
jmp
and
