fsubr
add
dec
add
add
add
add
push
add
add
add
or
das
add
mov
add
add
or
adc
push
add
add
add
add
add
cmp
add
add
or
add
sub
add
or
icebp
add
add
fadd
add
sub
add
push
cmp
jle
add
cmp
stc
push
sub
add
push
sub
add
or
fadd
arpl
sub
add
or
adc
add
pop
sub
add
outs
adc
add
outs
adc
add
adc
outs
adc
add
and
addr16
push
and
es
push
sub
add
push
sub
mov
add
or
dec
or
and
stc
push
sub
add
push
pop
outs
pop
add
or
call
mov
stc
push
sub
add
push
sub
add
or
add
push
or
push
(bad)
(bad)
call
add
sbb
add
and
mov
stc
push
sub
add
push
sub
add
or
add
and
(bad)
call
add
or
sbb
cmp
(bad)
(bad)
inc
adc
or
or
add
add
cmp
(bad)
(bad)
dec
and
out
inc
and
es
push
sub
add
push
adc
or
or
sbb
mov
outs
push
add
or
add
or
add
add
add
add
sub
push
sub
add
sub
add
or
push
sub
add
or
pop
sub
add
or
jmp
add
or
pop
sub
add
or
aad
pop
sub
add
sub
add
xor
add
add
adc
jge
mov
and
es
push
sub
add
push
sbb
and
add
and
add
or
jae
add
or
jae
add
or
push
or
add
or
pop
outs
sub
add
sub
or
or
add
or
pop
outs
sub
add
sub
pop
or
add
or
jae
add
or
mov
add
or
pop
outs
das
add
or
fimul
outs
xor
add
sub
outs
xor
add
sub
add
sub
add
cs
add
or
sub
xor
add
add
adc
or
pop
push
or
push
(bad)
mov
sub
add
bnd
add
add
adc
sub
add
add
enter
popa
or
add
add
pop
jle
add
add
outs
xor
adc
add
add
outs
add
or
adc
push
add
add
aaa
add
or
jb
add
jo
leave
repnz
sub
add
push
and
jecxz
add
adc
add
outs
cmp
add
or
add
aam
or
add
or
pop
push
or
add
or
cmp
add
outs
cmp
add
fimul
or
or
add
or
add
add
outs
cmp
add
or
add
adc
and
add
add
adc
adc
add
adc
adc
push
adc
popa
popa
adc
or
add
cmp
jle
adc
and
mov
or
or
adc
push
adc
adc
or
adc
or
or
pop
adc
xchg
pushf
adc
pop
pop
adc
adc
adc
or
jecxz
or
adc
jae
add
or
or
outs
inc
add
or
adc
sub
adc
adc
(bad)
or
add
and
add
or
push
xchg
popa
rol
adc
pop
pop
adc
adc
adc
xor
sub
add
adc
outs
inc
add
or
movd
add
add
add
add
add
add
adc
outs
inc
add
or
movlps
fimul
adc
sub
add
fcom
adc
sub
pop
push
data16
(bad)
inc
sub
addr16
add
repz
(bad)
add
cmc
sub
add
add
add
add
je
add
and
add
xchg
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
xor
add
add
add
add
add
add
or
sub
sbb
pop
add
add
add
add
adc
and
adc
mov
add
jo
pop
loopne
add
pop
add
push
and
add
push
fiadd
sub
add
add
add
add
add
adc
sub
add
add
pop
mov
push
add
add
pop
jle
add
add
outs
xor
adc
add
add
outs
add
or
adc
push
add
add
aaa
add
or
jb
add
jo
mov
pop
add
push
and
add
push
outs
cmp
add
or
add
aam
or
add
or
pop
push
or
add
or
cmp
add
outs
cmp
add
fimul
or
or
add
or
add
add
outs
cmp
add
or
add
adc
and
add
add
adc
adc
add
adc
adc
push
adc
popa
popa
adc
or
add
outs
adc
push
popa
adc
and
jae
js
adc
adc
lea
add
add
or
adc
adc
or
adc
or
or
pop
adc
xchg
pushf
adc
pop
pop
adc
adc
adc
or
jecxz
or
adc
jae
add
or
or
outs
inc
add
or
adc
sub
adc
adc
(bad)
or
add
and
add
or
push
xchg
popa
rol
adc
pop
pop
adc
adc
adc
xor
sub
add
adc
outs
inc
add
or
movd
add
add
or
add
or
jle
add
add
adc
outs
inc
add
or
movlps
fimul
adc
sub
add
fcom
adc
sub
fisub
push
add
or
(bad)
(bad)
inc
sub
add
in
pusha
fsubr
ficomp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
or
or
add
add
add
jae
add
or
sub
sbb
pop
add
add
adc
push
add
push
add
cli
add
cli
sub
push
fidivr
or
pop
pop
sub
data16
add
add
adc
sub
add
sub
es
add
mov
cmp
or
add
bound
add
jle
add
add
outs
xor
cmp
add
jle
add
add
outs
add
or
adc
jle
add
sub
add
or
or
add
or
add
jo
shr
add
sub
add
push
and
add
sub
add
push
outs
cmp
add
or
add
aam
or
add
or
pop
push
or
add
or
cmp
add
outs
cmp
add
fimul
or
or
add
or
add
add
outs
cmp
add
or
add
adc
and
add
add
adc
adc
add
adc
adc
push
adc
popa
popa
adc
or
add
lds
stc
push
and
dec
xor
adc
adc
lea
add
add
or
adc
adc
or
adc
or
or
pop
adc
xchg
pushf
adc
pop
pop
adc
adc
adc
or
jecxz
or
adc
jae
add
or
or
outs
inc
add
or
adc
sub
adc
adc
(bad)
or
add
and
add
or
push
xchg
popa
rol
adc
pop
pop
adc
sub
or
out
(bad)
(bad)
call
push
adc
xor
sub
int
aad
(bad)
(bad)
cmp
inc
add
or
or
add
or
movntps
cmp
xchg
(bad)
(bad)
(bad)
jle
add
add
or
add
or
jle
add
add
adc
outs
inc
add
or
push
or
fs
(bad)
call
movlps
fimul
adc
sub
add
fcom
adc
sub
add
add
inc
sub
data16
sub
pop
jb
add
jo
xchg
jmp
add
push
and
add
sub
add
push
fcmovnu
add
fisubr
sub
es
std
(bad)
jmp
push
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
or
sub
sbb
pop
add
add
add
add
adc
push
add
adc
sub
add
cli
es
add
add
fisubr
add
jmp
shl
add
jo
and
add
sub
add
push
and
lock
sub
add
push
jle
add
add
adc
sub
add
add
scas
int
push
popa
or
add
add
pop
jle
add
add
outs
xor
adc
add
add
outs
add
or
adc
push
add
add
aaa
add
or
jb
add
jo
dec
clc
add
sub
add
push
and
out
add
sub
add
push
outs
cmp
add
or
add
aam
or
add
or
pop
push
or
add
or
cmp
add
outs
cmp
add
fimul
or
or
add
or
add
add
outs
cmp
add
or
add
adc
and
add
add
adc
adc
add
adc
adc
push
adc
popa
popa
adc
or
add
loop
sub
popa
adc
and
ss
or
adc
push
adc
adc
or
adc
or
or
pop
adc
xchg
pushf
adc
pop
pop
adc
adc
adc
or
jecxz
or
adc
jae
add
or
or
outs
inc
add
or
adc
sub
adc
adc
(bad)
or
add
and
add
or
push
xchg
popa
rol
adc
pop
pop
adc
adc
adc
xor
sub
add
adc
outs
inc
add
or
movd
add
add
or
add
or
jle
add
add
adc
outs
inc
add
or
movlps
fimul
adc
sub
add
fcom
adc
sub
add
push
sbb
pop
sub
cmp
(bad)
(bad)
call
mov
sub
add
pop
cmp
(bad)
call
add
(bad)
add
add
add
add
add
call
add
add
add
add
add
add
add
add
jbe
add
mov
add
add
add
add
xor
add
add
add
add
sub
add
and
inc
aam
jae
add
or
dec
add
or
jae
add
or
inc
add
or
pop
cs
test
jae
add
or
dec
add
or
jae
add
or
dec
add
or
sub
or
add
push
sub
add
sub
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
and
inc
mov
pop
adc
push
and
jae
js
or
add
sub
add
or
add
or
push
and
ret
xchg
push
and
mov
xchg
js
or
add
outs
dec
add
or
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
inc
add
or
jecxz
js
ds
aam
jae
add
or
dec
add
or
jae
add
or
or
add
add
add
push
sub
add
sub
add
xor
add
add
add
add
add
add
jo
adc
add
sub
add
push
sub
xor
add
add
add
add
add
inc
add
or
fcmove
popa
test
jae
add
or
dec
add
or
jae
add
or
adc
add
or
add
add
xor
add
add
add
sub
sub
add
or
adc
sub
add
push
outs
cmp
add
or
sub
sub
jmp
lea
add
add
add
add
pop
sub
add
or
retf
jnp
add
add
add
add
add
imul
sub
xor
add
add
add
adc
outs
push
add
or
xor
add
pop
sub
add
or
pop
or
or
xchg
add
add
add
xchg
add
popa
rcr
loopne
pop
pop
and
sub
enter
add
or
push
add
or
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
inc
add
or
retf
sbb
or
add
or
dec
add
or
jae
add
or
or
add
add
push
sub
add
sub
add
xor
add
add
add
add
add
add
jo
add
add
or
sub
add
add
add
sub
add
and
inc
aam
jae
add
or
dec
add
or
jae
add
or
sbb
add
or
adc
push
add
add
add
sub
sub
add
or
adc
sub
add
push
outs
cmp
add
or
sub
sub
jmp
lea
add
add
add
add
pop
sub
add
or
retf
jnp
add
add
add
add
add
imul
sub
xor
add
add
add
adc
outs
push
add
or
xor
add
pop
sub
add
or
pop
or
or
xchg
add
add
add
xchg
add
popa
rcr
loopne
pop
pop
and
sub
enter
add
or
push
add
or
inc
xchg
jb
pop
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
xchg
pop
pop
jl
add
add
add
add
cmp
jg
xchg
xor
ins
add
je
jb
inc
push
imul
outs
add
dec
xor
sub
jne
imul
dec
push
pop
xor
je
add
add
and
pop
add
(bad)
cld
xor
mov
mov
test
adc
inc
ficomp
fs
inc
in
sub
ret
test
jle
lock
inc
stc
lods
outs
pop
add
jo
push
out
mov
xor
push
daa
repnz
(bad)
loopne
retf
add
retf
imul
dec
(bad)
xor
xchg
cmc
imul
fstp
rol
sub
push
jecxz
loopne
(bad)
push
mov
jg
popf
cwde
in
mov
dec
mov
dec
ja
dec
sbb
adc
and
xchg
push
popa
sbb
fst
sbb
pop
(bad)
or
mov
cmps
or
or
ins
stos
stc
cdq
ret
sub
dec
aad
out
ja
call
out
sbb
jns
pusha
mov
ret
stos
pop
sub
loop
dec
outs
outs
cmp
jecxz
add
ja
out
(bad)
fistp
dec
push
pop
pop
ds
cmp
outs
popa
aam
push
(bad)
cli
(bad)
fcmovb
push
ins
mov
dec
pop
shl
sub
jl
aad
(bad)
popf
add
mov
dec
rcl
jno
sar
adc
mov
in
mov
or
int
cmp
push
sub
xchg
in
pop
push
xor
test
repnz
adc
ds
pop
cmp
sub
(bad)
jb
push
push
jbe
test
fcomi
repnz
lock
dec
mov
jns
dec
aad
push
sub
shl
xchg
icebp
jnp
outs
or
(bad)
or
sub
(bad)
in
mov
jl
push
sar
xchg
ins
xor
les
pop
fisubr
pop
cmp
hlt
sub
jns
push
inc
pop
imul
cmp
and
jecxz
(bad)
mov
fwait
xchg
sti
sub
repz
pushf
fmul
lock
jno
aam
not
into
jecxz
jb
aad
mul
pusha
ror
pop
pop
into
mov
ins
pop
test
pop
lods
push
sahf
mov
sub
add
aad
xor
mov
aas
test
cmp
in
shr
fstp
mov
inc
pop
pop
shr
cmps
mov
test
fnstsw
pushf
test
dec
xchg
jl
enter
test
mov
sbb
or
(bad)
ja
add
mov
cmc
imul
jp
ret
cmc
xchg
pop
xor
push
dec
fs
add
js
xor
sbb
lock
sub
aaa
lods
cmc
jnp
or
cmp
fwait
test
imul
xchg
inc
push
inc
jmp
or
lea
inc
sub
je
jne
sbb
stos
inc
repz
rep
mov
outs
pop
clc
or
enter
jle
rcr
mov
pop
loop
icebp
daa
fisttp
gs
xchg
lods
std
push
(bad)
shl
pop
and
popa
leave
jmp
xchg
add
out
adc
in
inc
jecxz
mov
pusha
je
mov
outs
fwait
mov
out
jmp
push
lods
inc
sti
inc
inc
sbb
sub
jl
add
inc
jnp
int3
sti
mov
setnp
mov
pop
dec
sbb
cmp
cdq
(bad)
stc
fisub
mov
lock
movs
cmp
and
cmc
or
xchg
add
daa
hlt
mov
push
jle
bound
mov
mov
loopne
mov
mov
pop
out
shl
or
repz
arpl
cmps
cs
cs
ror
push
and
lds
into
fidiv
(bad)
adc
call
das
jbe
xor
out
inc
out
pusha
nop
pop
sub
add
ror
outs
and
in
enter
pop
mov
dec
data16
retf
fisub
ret
rol
in
sahf
inc
adc
pop
or
sbb
add
(bad)
add
pop
inc
pop
sbb
daa
test
push
jecxz
pop
lods
or
aas
add
arpl
loope
pop
xchg
sti
inc
rol
mov
inc
mov
pop
mov
daa
inc
test
rcl
cmp
stc
rcl
or
addr16
stos
pushf
mov
push
loop
xchg
xchg
jle
movs
sbb
and
mov
cmc
jae
fs
movs
cs
fdivr
cli
fisttp
outs
repnz
retf
les
repz
ficomp
mov
loop
imul
xchg
inc
cmps
loopne
inc
ja
push
sub
loop
movs
xchg
inc
mov
add
aad
cmps
mov
and
xor
in
pushf
mov
or
fisub
in
jle
push
cdq
dec
push
test
pop
cmc
sbb
mov
push
sar
dec
idiv
and
inc
xor
cdq
fistp
or
xchg
pop
xor
(bad)
loop
sbb
xchg
sahf
ss
push
push
inc
into
pushf
and
ror
xor
or
clc
jns
mov
push
adc
imul
jg
jmp
in
xor
xchg
ret
gs
rol
(bad)
pop
jge
cmp
call
in
loop
adc
aad
das
jns
mov
or
inc
pop
shl
jmp
shl
(bad)
aas
loope
(bad)
les
xchg
jmp
xor
cmp
in
mov
mov
imul
jge
jecxz
cmc
loope
push
pop
test
and
push
sub
int3
dec
push
sbb
adc
push
mov
jp
dec
mov
daa
xor
or
stc
jmp
and
xor
dec
scas
jne
push
stc
mov
fld
fiadd
ins
ror
jmp
stos
clc
hlt
mov
jg
push
mov
nop
dec
cmps
adc
ret
push
mov
sub
mov
pop
mov
(bad)
jb
xchg
or
and
push
test
pop
and
std
sbb
mov
mov
in
inc
mov
mov
nop
or
(bad)
xchg
mov
mov
pop
xchg
aad
pusha
push
mov
stos
cwde
sub
pop
in
in
adc
push
sbb
jno
sti
inc
ja
ds
dec
mov
clc
or
scas
int
mov
enter
inc
jmp
jp
push
rcr
push
movs
jl
stc
jg
dec
dec
neg
ret
mov
stc
call
push
cmc
lea
and
cmp
mov
mov
int3
push
fisttp
cli
or
(bad)
mov
cmp
in
lea
lock
cmp
bound
mov
push
clc
dec
mov
stc
xor
aas
loopne
mov
loope
mov
add
xor
(bad)
lock
dec
mov
rcl
not
jb
shl
push
in
retf
push
adc
mov
push
and
hlt
and
mov
std
(bad)
shr
mov
cmps
bound
jge
in
stos
pop
cmps
mov
daa
jmp
cmc
mov
mov
add
dec
lahf
cmp
or
mov
out
mov
jmp
xor
cmp
sbb
mov
add
fidivr
cmps
rcl
sub
in
xor
sub
arpl
aas
aaa
and
add
push
dec
cmps
cmp
jb
cmp
or
inc
fimul
pop
(bad)
clc
fxch
lds
out
fbstp
mov
mov
cmp
push
dec
addr16
jmp
imul
pop
add
mov
int3
xlat
jecxz
push
rcl
inc
push
or
push
sti
movs
cmp
stc
mov
scas
adc
sbb
div
and
xchg
pop
push
cmp
(bad)
xor
test
lds
in
out
out
out
lea
ja
sub
pop
adc
and
push
movs
ins
inc
(bad)
sbb
sar
std
mov
cdq
mov
and
test
test
xchg
ja
pushf
lods
xchg
sar
pop
imul
fdivr
icebp
jne
dec
pop
hlt
in
stos
das
dec
and
cmp
ss
test
mov
in
and
sti
scas
mov
or
ret
std
jmp
iret
cli
cli
lea
fst
in
mov
pop
adc
scas
sub
or
mov
or
stc
add
add
shl
adc
mov
cmp
mov
rcr
sbb
mov
aam
mov
push
push
(bad)
pop
scas
dec
dec
movs
shl
stos
sar
adc
out
rcr
sub
shl
cmps
push
jmp
xor
fst
and
dec
(bad)
xchg
cmp
xlat
jle
sub
in
adc
adc
and
iret
outs
ins
xchg
mov
lahf
retf
(bad)
aam
mov
pop
sbb
sbb
popa
test
sub
(bad)
cmps
les
(bad)
int
fwait
lods
fisttp
add
jbe
repz
mov
in
call
(bad)
outs
aam
inc
stos
push
adc
movs
push
retf
push
sbb
push
xchg
(bad)
push
and
mov
jb
dec
jae
stos
mov
scas
jecxz
sbb
dec
jmp
cmps
loope
push
ins
sub
js
jmp
sub
(bad)
data16
xor
adc
jns
jb
stc
ins
jo
std
sbb
jnp
ja
std
mov
xor
jns
fstp
retf
sub
retf
xlat
mov
adc
movs
dec
add
push
mov
pop
xchg
icebp
add
movs
sub
frstor
inc
outs
movs
retf
pop
jg
dec
data16
jb
jg
push
mov
adc
sbb
fld
jmp
lods
mov
test
xchg
inc
aaa
dec
mov
gs
sti
cmp
adc
(bad)
jmp
cmp
mov
or
scas
xor
lds
into
ins
ficomp
lock
xchg
shr
aas
dec
pop
and
add
lahf
cmp
loop
add
mov
mov
jmp
shl
fild
mov
jo
inc
or
mov
mov
loop
jmp
adc
and
imul
xchg
pop
jmp
pusha
add
lea
out
xor
fisttp
test
mov
les
call
or
add
add
aaa
mov
inc
add
push
int3
sahf
and
jbe
add
jne
push
push
sub
mov
mov
into
cmc
jnp
cmp
test
call
hlt
rcl
imul
push
std
daa
jnp
dec
push
jmp
leave
loope
xchg
mov
push
repz
sub
fst
mov
dec
mov
pop
hlt
cmp
or
das
mov
push
mov
out
mov
mov
shl
fpatan
xchg
adc
jp
mov
fwait
mov
js
mov
mov
sbb
jl
dec
push
idiv
les
fstp
pop
jge
pop
ret
mov
aas
lock
sbb
mov
push
or
repnz
pop
mov
jno
pop
lahf
movs
enter
sbb
inc
data16
xchg
movs
adc
or
pop
test
and
loop
popf
stc
push
ds
(bad)
xchg
push
inc
fistp
(bad)
shl
cwde
pop
inc
jae
cld
cmps
das
popa
jns
cmc
sbb
dec
inc
push
xor
inc
lods
in
or
cwde
dec
jmp
mov
or
or
dec
mov
sub
lock
dec
sbb
inc
(bad)
inc
push
je
adc
add
push
imul
stos
adc
xchg
jns
push
push
imul
jle
mov
adc
out
scas
out
mov
cmp
shl
push
aaa
rol
sub
xor
jbe
push
sub
enter
or
push
out
hlt
enter
sahf
fldcw
mov
mov
sbb
outs
mov
aaa
movs
pop
call
rcr
or
add
sti
or
enter
addr16
sar
shr
mov
test
mov
(bad)
and
imul
mov
bound
xor
fstp
jno
lods
adc
sub
int3
fadd
jg
ror
int
fbstp
jns
jle
call
cli
ins
cmps
inc
mov
retf
cld
pop
rcl
fcomip
xor
sbb
in
cmc
add
dec
rcr
loope
xchg
pmaxub
rcr
int3
dec
out
ins
xchg
iret
call
lods
fdivr
popf
loop
mov
call
mov
jg
movs
addps
aas
adc
cmp
fldcw
or
sbb
popf
ss
and
dec
scas
xor
xchg
int3
repz
lea
ins
mov
and
movs
jne
clc
jae
mov
jbe
sub
(bad)
or
push
int
scas
sbb
pop
arpl
popf
sbb
fsubr
(bad)
fidivr
xor
sub
repnz
enter
cmp
mov
push
mov
cmp
xor
and
leave
sbb
rol
mov
xor
xchg
or
ins
pop
xchg
imul
aas
push
mov
inc
xchg
dec
adc
loopne
xchg
and
push
or
push
jnp
imul
xor
aaa
dec
out
cmc
and
and
and
inc
mov
xchg
sar
addr16
arpl
and
sbb
dec
aas
sbb
pop
(bad)
std
cmp
clc
out
lahf
out
lods
int
xor
mov
inc
mov
repz
xor
enter
aad
dec
shl
clc
dec
lods
xchg
imul
cmovle
out
or
xor
jg
xor
push
outs
mov
jecxz
loopne
gs
je
jb
out
adc
fsub
and
dec
xchg
shl
(bad)
popa
aaa
fisttp
dec
lods
and
mov
and
sbb
icebp
adc
xchg
xchg
and
cld
data16
xchg
ja
inc
ins
xchg
mov
pop
cmc
mov
inc
dec
jo
adc
xchg
icebp
pusha
test
aad
xchg
dec
jge
dec
stos
lods
mov
and
xchg
xchg
xchg
fisubr
and
push
dec
cmp
inc
cld
movs
fcmovb
rcr
pop
test
(bad)
cmp
bnd
mov
fiadd
into
stos
mov
and
xor
cwde
add
dec
rcr
add
mov
fbstp
sub
sti
je
sti
icebp
push
call
push
scas
jno
sub
mov
imul
popf
stos
fmul
mov
imul
mov
jnp
out
nop
(bad)
call
jb
test
shl
ja
mov
xor
mov
and
sbb
dec
xchg
fdivr
mov
xchg
adc
shl
repz
or
je
sub
mov
mov
arpl
movs
retf
lods
dec
inc
sar
xor
repnz
pop
jo
enter
sub
movs
aaa
setno
sub
cmps
pop
and
dec
pop
stos
lahf
dec
sub
adc
pop
cdq
fistp
ret
xor
dec
cwde
in
and
or
add
sub
mov
and
retf
mov
or
jmp
pop
xchg
in
mov
or
inc
imul
pop
js
sbb
xor
jmp
sbb
ss
mov
enter
pusha
jae
and
iret
mov
pop
and
adc
shr
and
mov
or
pop
dec
in
mov
push
in
sub
lds
out
test
mov
leave
(bad)
sub
(bad)
push
mov
(bad)
pusha
mov
mov
push
cmps
mov
sbb
lods
nop
xchg
(bad)
push
or
jae
imul
push
adc
outs
int
lods
mov
cwde
shr
cmp
das
cmp
not
cdq
mov
repz
loopne
sub
lods
mov
inc
sub
ds
push
cld
adc
std
sbb
rcl
mov
lds
xor
push
stos
jbe
push
sbb
add
out
dec
and
rcr
test
lods
xchg
enter
inc
je
mov
or
in
pop
dec
adc
jmp
cs
je
add
mov
sbb
scas
popf
loope
sbb
xchg
inc
movs
mov
push
add
daa
adc
stos
mov
lods
mov
out
sbb
dec
lods
or
je
jecxz
pop
xchg
sub
lds
push
pop
xor
popf
push
call
pusha
int
mov
jge
(bad)
imul
pop
out
imul
and
jecxz
fst
pop
(bad)
jns
xchg
sub
bound
cli
in
add
test
mov
and
sub
shl
rol
stos
inc
or
inc
xor
dec
in
sbb
scas
shr
push
nop
mov
sbb
sti
mov
cmp
sbb
cmp
cmp
out
sub
xchg
lods
jae
ins
mov
xchg
push
cmp
cmp
lods
sbb
clc
push
daa
mov
test
pop
lods
das
mov
dec
and
test
in
inc
(bad)
(bad)
sbb
(bad)
dec
sub
lds
lods
cld
outs
sub
outs
pop
dec
div
pcmpeqw
neg
sbb
add
dec
popa
add
or
mov
lahf
jp
lea
js
retf
cmp
test
js
xchg
test
aam
adc
or
inc
push
pop
(bad)
mov
add
xchg
pop
mov
ins
jnp
bound
mov
dec
inc
jmp
sbb
cmp
jl
and
adc
shr
cmps
enter
xchg
xchg
mov
mov
jbe
gs
in
mov
mov
mov
mov
ins
test
rcr
sbb
clc
xchg
in
adc
fnstenv
pushf
ja
fs
push
inc
sti
add
repnz
(bad)
mov
pushf
aad
push
fidivr
test
movs
aad
adc
jo
xor
in
or
xchg
arpl
xchg
inc
xchg
ja
ret
in
das
aad
(bad)
outs
pop
dec
rcr
aaa
mov
adc
ins
push
data16
xchg
sub
outs
mov
aad
sbb
nop
sar
sub
inc
outs
out
pop
cdq
inc
adc
shl
fiadd
fwait
repnz
push
inc
push
scas
fld
arpl
(bad)
cmps
pop
daa
(bad)
mov
cmp
jge
inc
jg
xor
inc
dec
sub
cmps
(bad)
(bad)
js
jne
mov
sti
pop
push
rol
cmps
and
add
mov
adc
mov
adc
add
shl
mov
jns
and
leave
loope
and
retf
dec
mov
fstp
test
out
add
mov
sbb
sub
(bad)
sbb
test
js
rcr
ins
mov
ss
inc
shr
in
(bad)
push
pop
ins
xchg
push
xor
jns
int3
popa
fninit
aaa
push
mov
and
retf
xchg
jbe
mov
xor
jno
mov
cmp
call
fcom
mov
loopne
mov
add
loope
inc
inc
cmp
jo
push
ja
scas
push
jl
loopne
outs
xor
sahf
ss
and
add
mov
test
call
mov
ret
ret
aad
xor
ins
and
dec
mov
cli
push
icebp
and
xchg
inc
and
or
hlt
ja
sub
pop
cdq
sbb
dec
inc
stos
sub
out
dec
or
in
push
or
out
cmp
pop
in
(bad)
test
mov
movs
mov
cmp
adc
adc
jp
fild
mov
fwait
push
mov
icebp
adc
add
outs
out
ss
retf
jno
jnp
mov
test
mov
xor
add
rcl
imul
(bad)
jno
push
imul
xlat
mov
or
pop
and
test
jl
push
pop
test
imul
mov
iret
js
mov
rol
int
fisubr
stos
jmp
sti
fcom
sbb
add
test
pop
jle
fcom
dec
inc
and
loope
imul
movs
stos
fisttp
mov
push
jnp
pop
shr
jl
pop
mov
mov
mov
je
push
inc
sub
loopne
push
frstor
push
dec
js
rcl
iret
push
inc
mov
jle
mov
pop
ins
sti
imul
lods
in
shl
pop
xor
mov
pminub
xor
les
and
cmp
mov
adc
(bad)
scas
cdq
xor
pop
or
xor
cwde
stc
dec
inc
rol
xchg
sub
sbb
and
sbb
or
push
inc
cmps
(bad)
scas
bswap
push
in
cmp
mov
inc
jne
pop
pop
imul
fsub
out
test
mov
push
inc
call
cmp
mov
mov
mov
pop
enter
or
sbb
mov
loope
repz
punpckhdq
adc
sahf
or
jp
daa
loope
hlt
mov
mov
nop
div
jo
pop
dec
mov
mov
repnz
mov
cwde
call
dec
sub
jecxz
imul
es
or
int
pop
xchg
mov
ret
and
call
pop
mov
cmp
xlat
mov
test
cmc
shl
aam
jae
aaa
out
sbb
xlat
fwait
dec
mov
jge
and
and
push
cmp
lock
inc
retf
call
fisttp
or
sbb
mov
and
cdq
(bad)
retf
int
add
sub
add
dec
fild
jecxz
lods
cmp
out
loop
jle
mov
pop
pop
add
push
sbb
xor
repnz
cwde
sub
lods
das
push
js
sti
fild
mov
test
or
test
add
cmp
cld
mov
fistp
mov
or
ja
sub
push
sti
movs
cmp
xor
inc
xor
jecxz
push
bound
xor
jne
cmp
mov
pop
rol
adc
xor
mov
and
leave
add
xchg
add
push
mov
mov
mov
(bad)
xor
sub
xchg
mov
shl
scas
push
retf
add
stos
bound
sbb
mov
in
fst
clc
call
rcr
mov
push
(bad)
(bad)
outs
sub
popf
pusha
mov
add
jno
dec
cs
xchg
mov
ins
or
jno
fild
ja
cmp
mov
adc
sti
or
mov
iret
in
mov
mov
out
xchg
sub
pushf
adc
(bad)
sbb
aad
pushf
icebp
sbb
mov
aam
pop
or
push
cdq
ins
pop
mov
test
inc
into
popa
lea
mov
movs
and
retf
mov
sub
or
push
fdiv
push
add
out
fistp
in
sub
sub
dec
scas
repz
mov
add
lea
movs
arpl
in
sbb
mov
push
call
js
xchg
pop
dec
out
dec
pop
sub
cmps
cmp
pusha
cmp
test
setl
mov
cld
and
loopne
jg
push
data16
test
push
mov
js
das
mov
icebp
(bad)
jle
push
mov
mov
jbe
cs
jmp
out
push
cmp
xchg
mov
cmps
out
dec
enter
mov
and
dec
xchg
enter
cwde
mov
fnsave
cmp
int3
(bad)
pop
pop
pop
ins
and
mov
clc
data16
jp
movs
call
push
sahf
mov
lods
mov
add
daa
dec
rol
ins
sub
test
xor
out
punpckhbw
(bad)
xchg
jns
jno
hlt
mov
inc
jnp
xchg
mov
sub
movs
test
popw
cs
jl
xchg
lods
mov
bound
(bad)
clc
xor
outs
sbb
cld
mov
dec
outs
int
xchg
and
loopne
xchg
ins
pushf
aam
fdivr
cmp
call
dec
inc
add
or
movs
cmps
(bad)
stc
adc
or
mov
fnsave
fwait
jecxz
mov
movs
xchg
inc
sahf
repnz
inc
mov
ins
mov
and
stos
data16
test
xor
jns
xor
mov
and
fist
lods
pop
mov
js
into
jns
push
inc
repz
retf
lods
(bad)
std
jmp
je
sub
cmp
pop
push
dec
xor
cmp
scas
aaa
out
add
loop
xchg
pop
sub
fisub
fwait
jns
dec
xor
int3
jmp
cld
mov
mov
push
and
shufps
pop
cwde
int3
dec
cmp
pop
test
xchg
add
cmp
cmp
and
push
jne
add
add
adc
(bad)
mov
inc
adc
mov
in
jno
into
inc
push
fistp
popa
fs
xor
or
mov
lock
enter
fsubp
iret
movs
jl
mov
pop
xor
popa
inc
or
jg
inc
cli
in
mov
ins
pop
(bad)
hlt
mov
or
imul
push
push
jg
jp
cmp
sub
xor
fmul
out
sbb
leave
outs
dec
xchg
mov
sub
mov
retf
jbe
arpl
mov
mov
xchg
or
mov
fwait
dec
adc
clc
sbb
pop
inc
dec
test
fbstp
push
movs
lock
shr
sbb
popf
sub
gs
(bad)
retf
push
sbb
inc
pop
inc
cwde
push
loopne
clc
adc
sbb
daa
adc
xor
call
rcr
(bad)
aad
sub
dec
std
outs
add
data16
fimul
js
cli
stos
and
and
arpl
xchg
or
fld
loopne
cmps
cwde
mov
leave
mov
and
or
jmp
scas
mov
stos
push
inc
mov
aas
gs
neg
out
les
out
jbe
inc
test
mov
xchg
cmp
mov
cmp
out
ret
mov
add
pop
sub
xor
bound
inc
mov
loopne
mov
add
pop
xchg
dec
push
lods
fisubr
xchg
lock
call
bound
int3
push
wbinvd
ins
cmc
or
test
add
mov
sub
hlt
xchg
sub
enter
stos
jp
mov
mov
movs
inc
mov
jbe
test
add
cmps
and
mov
fs
mov
in
loop
add
add
pop
fldenv
push
adc
fs
push
mov
adc
lods
je
jb
sbb
xlat
(bad)
rcl
arpl
xchg
popf
or
push
and
in
std
dec
jp
mov
lods
mov
fiadd
rcr
fiadd
mov
inc
or
enter
xchg
push
jle
mov
mov
outs
cmp
adc
shr
fisttp
gs
add
xor
sub
or
xchg
movs
mov
imul
inc
cld
repnz
and
mov
test
es
and
aad
add
push
jo
aaa
inc
mov
jae
das
mov
push
dec
pop
cmp
ss
inc
dec
in
push
and
cs
or
test
and
jecxz
sbb
repnz
popf
sti
mov
aas
sub
sub
xor
dec
fsubrp
nop
mov
mov
jmp
and
and
or
rcr
cdq
xchg
and
(bad)
jmp
lock
xchg
jnp
push
or
into
xor
cmp
in
ja
addr16
jmp
jbe
mov
dec
push
test
inc
(bad)
fild
adc
or
into
pop
ret
add
pop
aaa
mov
aaa
sub
mov
stc
push
arpl
xor
and
dec
inc
pop
jp
xor
jge
scas
inc
leave
iret
or
or
pop
into
cmp
mov
cld
(bad)
nop
dec
in
je
xor
into
cmp
push
sbb
je
sbb
jo
fidivr
xchg
sbb
loope
cli
add
(bad)
sub
aad
or
out
ret
jae
mov
loope
stc
enter
jge
sbb
inc
add
jge
ins
xor
dec
(bad)
std
sbb
mov
js
add
or
or
mov
test
xchg
fdivr
lods
rcl
fiadd
mov
and
mov
ret
inc
jmp
es
out
es
inc
pop
push
mov
div
repnz
cmp
retf
js
mov
(bad)
xor
pop
and
outs
mov
sti
movs
imul
icebp
inc
in
imul
ins
xchg
ins
push
mov
sub
arpl
inc
int
enter
mov
push
hlt
sbb
add
aas
aad
test
int
dec
(bad)
inc
dec
mov
xchg
(bad)
mov
push
push
jge
and
aas
and
dec
dec
gs
jns
das
adc
imul
cmp
enter
or
aaa
mov
call
or
xor
sbb
sbb
repz
xchg
jno
dec
fwait
js
fldcw
push
mov
adc
cdq
cmp
mov
jle
nop
ret
arpl
sbb
stos
fs
mov
add
std
je
retf
iret
push
sbb
outs
push
jne
pushf
es
lods
xor
sti
jecxz
cmp
ss
dec
or
xchg
(bad)
dec
push
mov
and
adc
in
das
cs
stos
mov
cmp
jno
adc
and
push
fisubr
aad
mov
icebp
sbb
sahf
push
inc
xchg
xlat
rcl
(bad)
repz
jb
dec
stos
adc
popa
adc
stos
popf
mov
out
retf
fisttp
cmp
xor
ret
or
cmps
mov
xor
mov
mov
push
mov
ret
pop
dec
stos
leave
xor
idiv
cmp
and
loope
pop
out
pop
cdq
sahf
in
inc
js
push
ret
lods
mov
push
imul
cmp
cmps
arpl
mov
shl
scas
adc
fidivr
or
test
push
daa
cmp
sub
mov
push
mov
jl
fs
(bad)
sub
and
int3
xor
adc
scas
je
pop
inc
and
loopne
mul
in
sub
sub
jo
sub
push
in
xchg
sub
xchg
cmp
stos
dec
xchg
fisubr
and
std
dec
inc
pushf
nop
mov
(bad)
mov
push
fidivr
icebp
data16
cmp
fdivr
mov
jp
mov
mov
or
xor
loope
inc
and
xor
adc
int
cmp
int
repz
xor
and
jbe
arpl
push
aad
adc
or
dec
popa
adc
mov
xchg
xor
mov
mov
or
int
adc
jmp
mov
cmp
xchg
push
mov
jo
bound
test
push
push
in
popa
add
and
out
adc
ja
fnstcw
jge
mov
(bad)
aad
sar
push
and
movs
jb
xlat
jnp
xor
add
adc
fs
dec
pop
cmp
mov
cmp
arpl
sub
scas
xor
xchg
das
cli
pop
pop
cmp
in
jns
mov
addr16
outs
mov
adc
pop
pushf
xchg
push
inc
mov
push
in
shl
mov
daa
mov
sub
or
loop
jmp
jecxz
stc
sub
and
pop
aam
add
fst
ds
dec
inc
dec
mov
sub
mov
loope
lods
hlt
mov
outs
mov
and
cld
jne
movs
out
cs
retf
mov
mov
dec
jae
xor
pop
loop
les
mov
sub
iret
ja
dec
and
rol
iret
pop
jg
call
arpl
sub
into
cld
push
shl
or
dec
or
ficomp
push
stos
cmp
arpl
daa
mov
inc
pop
pushf
pusha
mov
cld
add
mov
mov
aad
cld
xor
add
xchg
sub
mov
(bad)
test
vpaddb
xchg
xor
aam
int3
dec
int3
cmc
cwde
lods
xor
sbb
xchg
lds
iret
fild
mov
jmp
mov
movs
dec
ret
mov
and
mov
es
and
adc
cmp
inc
mov
mov
adc
xchg
ret
aaa
aad
bound
sub
ficomp
mov
daa
add
xchg
or
xchg
or
push
xchg
icebp
aaa
movs
and
test
movs
xchg
test
adc
js
ror
xchg
aas
arpl
jae
outs
cmp
sbb
addr16
nop
inc
mov
xchg
mov
xchg
pusha
inc
sbb
sub
shr
pop
fld
cmps
(bad)
xor
lds
jp
int3
pop
mov
loop
lahf
inc
(bad)
cld
dec
aam
repz
das
scas
sub
push
inc
mov
push
daa
jae
cdq
mov
add
loop
iret
dec
mov
mov
pop
arpl
xor
dec
and
cdq
iret
or
mov
imul
mov
nop
cs
pop
daa
add
rol
sbb
jmp
adc
and
xor
push
push
js
rol
aam
and
mov
dec
shl
xor
xor
mov
sbb
into
stos
jg
add
add
add
and
lods
mov
(bad)
cmp
pop
pop
dec
xchg
out
repnz
xchg
out
(bad)
popa
in
jmp
adc
mov
xchg
int
addr16
ja
clc
lahf
or
loopne
xor
aas
sub
dec
xlat
inc
pop
test
inc
push
ja
mov
call
stos
xchg
jne
rep
sub
sbb
neg
dec
pop
repz
push
xchg
rcr
mov
jno
sub
stc
lock
cmp
xchg
(bad)
inc
xchg
out
jmp
mov
mov
sahf
jb
push
or
scas
mov
jg
adc
push
inc
xor
pop
shr
mov
dec
out
xchg
js
inc
std
and
sub
rol
push
movs
rol
sbb
(bad)
sub
cdq
retf
rcl
rcl
das
loop
pop
sahf
int3
push
lahf
and
mov
push
or
ds
cmps
aaa
inc
(bad)
scas
sub
fimul
pop
xor
xlat
xchg
xchg
jb
jae
imul
js
mov
and
(bad)
(bad)
aas
fucomip
pop
pop
retf
adc
data16
retf
in
(bad)
mov
ds
mov
sar
sub
mov
pop
loop
rcl
iret
jns
jp
loop
inc
mov
cwde
sbb
cmp
xor
dec
ja
push
in
movs
xchg
addr16
out
cmc
push
mov
nop
jle
ret
pusha
aam
mov
outs
mov
mov
xchg
in
aaa
sbb
cs
dec
popf
(bad)
sbb
out
jns
rcl
jmp
call
out
mov
cmp
lds
inc
or
mov
xor
into
pop
repz
aaa
mov
xchg
push
cmp
inc
std
inc
inc
fsub
add
push
pop
push
sub
nop
lods
xor
xchg
jo
push
aam
mov
sbb
outs
mov
mov
outs
xchg
lods
iret
in
xor
dec
jno
(bad)
aas
in
cmps
add
out
xor
out
call
fldenv
mov
xchg
aad
add
xor
dec
xchg
xchg
mov
pusha
xor
loopne
lods
mov
sub
aaa
aas
mov
nop
int3
sub
repnz
and
mov
xor
mov
xchg
shl
mov
mov
scas
and
out
mov
sar
hlt
push
aam
cmp
xor
cmp
sar
jecxz
xlat
and
pop
and
pushf
xor
cmc
jle
cmp
jnp
in
inc
in
push
dec
(bad)
mov
mov
in
adc
pushf
nop
push
mov
sar
inc
sub
icebp
xor
(bad)
into
sub
(bad)
xchg
push
test
sbb
ss
or
sti
sub
shl
sbb
fs
dec
outs
mov
sbb
ja
aaa
mov
sbb
adc
add
cli
add
cmc
push
push
lea
lock
cdq
add
dec
pop
icebp
mov
imul
ds
stc
ins
jl
push
sbb
and
xchg
push
dec
stc
xor
pop
shr
clc
cdq
(bad)
xor
leave
xchg
fstp
(bad)
ins
and
jae
push
xchg
fldl2t
mov
cmp
sbb
aaa
mov
(bad)
cmp
fstp
inc
jno
dec
pushf
leave
cmp
je
in
mov
mov
fist
mov
sub
adc
mov
xor
sbb
xor
pop
leave
mov
mov
push
inc
push
xor
retf
daa
pusha
inc
lods
mov
cli
mov
sahf
std
fcomi
adc
ret
or
popa
loop
sbb
loop
sub
jmp
xchg
and
push
mov
pusha
repz
cmps
mov
std
ja
jae
or
push
retf
jge
emms
das
movs
push
loopne
retf
sbb
nop
les
mov
push
push
adc
(bad)
mov
out
sub
or
sbb
cdq
dec
mov
pop
pop
cwde
xor
cwde
cmp
into
outs
jmp
mov
dec
scas
cwde
inc
sub
jo
push
je
mov
lods
stos
(bad)
xchg
and
or
jno
cmovbe
cli
mov
mov
clc
in
pop
test
pusha
dec
and
dec
aam
mov
(bad)
mov
ficom
sub
and
stc
inc
mov
dec
sub
clc
in
jmp
pop
jle
sub
push
xor
dec
movs
lea
in
(bad)
lahf
lock
jae
jecxz
stc
mov
lea
pop
xor
out
mov
xlat
test
inc
daa
call
mov
jae
mov
sbb
add
xor
xchg
cmp
out
test
mov
test
dec
mov
in
out
push
pop
push
aam
(bad)
out
cs
rcr
mov
or
jb
xchg
cmps
xchg
nop
pop
retf
into
leave
adc
xchg
inc
std
xlat
(bad)
imul
idiv
push
inc
push
mov
jmp
xchg
xchg
or
mov
xchg
push
stos
sahf
sahf
data16
jecxz
retf
dec
fld
pushf
jns
retf
and
push
mov
test
adc
pop
dec
scas
inc
and
pop
shl
mov
or
int
xchg
fs
sbb
lock
rol
ror
leave
xor
push
or
inc
mov
push
jmp
push
inc
or
jns
xor
push
push
mov
or
mov
into
bound
sar
push
cmp
inc
sub
outs
pop
nop
cmp
ficom
xor
fmul
scas
je
scas
sti
jp
xchg
or
xchg
pushf
test
cwde
cmp
or
jo
pop
test
and
lea
das
popf
pop
mov
call
popa
pop
fdiv
mov
je
test
or
xchg
mov
out
ja
daa
push
cdq
dec
sbb
(bad)
repz
xor
call
mov
gs
popa
pop
fld
lods
lods
ds
add
call
pop
pop
scas
sahf
repnz
dec
loopne
push
jno
xor
adc
sbb
mov
dec
mov
xchg
fwait
es
je
jo
arpl
and
jmp
mov
out
daa
dec
xchg
dec
dec
mov
xchg
les
data16
out
inc
fucomp
cmp
inc
dec
mov
test
dec
loopne
int
mov
pop
push
xor
jo
jmp
pop
shl
retf
push
je
sahf
imul
jbe
push
enter
mov
ins
jle
inc
enter
iret
jmp
int3
arpl
push
outs
dec
dec
pop
fadd
xor
movs
popf
je
nop
leave
sahf
push
inc
pop
push
sub
cmp
xchg
xchg
in
lahf
xor
test
aas
repnz
js
add
mov
xor
sbb
sub
es
adc
pop
dec
sbb
in
pop
stc
mov
and
lock
and
ret
push
aam
out
aam
adc
add
ja
daa
popf
cmps
in
ins
inc
jnp
dec
dec
(bad)
stc
loopne
mov
aam
sub
and
icebp
jnp
xchg
shl
repz
and
and
mov
(bad)
aad
out
loop
mov
out
jno
sbb
test
xchg
mov
push
adc
and
mov
jle
jge
stos
retf
test
movs
jbe
inc
mov
sub
inc
sub
cwde
out
inc
movs
data16
gs
je
mov
push
cmc
gs
push
jno
xor
jnp
neg
movs
js
push
out
mov
in
add
in
aam
sub
gs
cmc
ins
mov
sti
ss
and
(bad)
mov
repnz
mov
call
sub
sbb
xor
mov
sbb
jmp
dec
jnp
arpl
mov
jne
or
cmp
dec
or
xchg
aas
movs
ins
or
push
xchg
push
(bad)
jmp
out
add
in
in
ret
adc
sbb
test
adc
rcl
jle
xor
dec
ins
or
cld
push
loope
mov
and
pop
(bad)
or
ror
mov
outs
dec
fsubr
pop
add
scas
loop
dec
xchg
xchg
mov
cmc
fmul
jecxz
pop
cdq
ss
mov
jbe
test
mov
das
add
inc
mov
fs
fs
sbb
push
pop
xchg
pop
pop
les
call
and
(bad)
or
mov
push
std
sbb
jp
ret
lock
mov
(bad)
xchg
ror
and
mov
test
mov
int3
jmp
stos
pop
int
inc
mov
loopne
lock
int
out
add
add
stos
js
adc
scas
bound
xchg
sti
xchg
lods
test
cwde
loop
cmp
retf
mov
or
mov
cmps
enter
sti
pop
mov
or
cmp
movs
retf
xor
pop
sub
cli
aam
mov
sbb
loop
mov
xchg
mov
cmp
or
pop
push
je
mov
ficom
dec
ficom
test
fisttp
sti
inc
movs
mov
loop
mov
mov
daa
inc
into
scas
in
cld
xchg
mov
hlt
push
arpl
dec
inc
test
xchg
push
jge
lods
daa
loop
xchg
jl
inc
jl
pop
add
ror
shr
loop
imul
cs
mov
adc
stos
std
jmp
test
cld
jbe
sbb
ret
sbb
imul
pop
(bad)
push
(bad)
in
(bad)
mov
jo
fwait
inc
sbb
and
cmc
sbb
fild
push
mov
in
or
(bad)
sub
jmp
cwde
data16
jae
lods
rcl
movs
inc
and
cmps
rcl
push
lods
mov
pop
dec
push
sbb
adc
clc
mov
or
mov
xchg
inc
mov
mul
pop
hlt
out
mov
and
data16
jp
dec
push
push
rcl
aaa
dec
arpl
ficomp
mov
icebp
lods
jbe
jbe
pop
jb
mov
arpl
sub
dec
pop
push
out
outs
lock
shl
xchg
scas
fisub
dec
push
ficomp
add
ins
or
scas
sti
int3
je
add
adc
test
xchg
inc
in
loop
and
fmul
sbb
jecxz
fiadd
mov
out
(bad)
adc
mov
or
(bad)
sbb
mov
mov
pop
je
xchg
inc
adc
pop
repz
fstp
pop
(bad)
aas
cmps
jecxz
shl
mov
lods
pusha
xchg
xchg
add
mov
xor
sti
aam
jns
repnz
arpl
stc
jbe
dec
vpsadbw
add
adc
scas
sub
push
mov
mov
mov
pushf
lods
push
push
mov
xchg
lock
into
xor
test
adc
or
mov
or
data16
sub
mov
das
daa
cmp
fstp
adc
js
(bad)
lahf
xor
add
into
xlat
test
fs
fcomp
xchg
push
cld
test
fwait
rcl
popa
rol
cld
mov
in
xor
sbb
or
(bad)
jne
(bad)
push
and
pop
les
adc
out
test
jb
inc
ins
mov
mov
mov
jb
dec
jg
ffreep
sbb
jns
iret
test
ret
inc
inc
pop
test
pop
and
mov
jno
add
jecxz
mov
sbb
inc
sahf
cmp
call
add
dec
cmps
xchg
sar
in
jno
and
and
sti
enter
in
and
in
xchg
mov
into
xchg
push
sub
ja
ds
adc
call
push
mov
(bad)
adc
mov
cmc
add
adc
sub
push
mov
cmc
std
jmp
aas
push
out
shr
adc
stos
into
pop
es
push
jl
push
popa
mov
add
mov
sub
jno
aad
out
sbb
(bad)
push
jo
jnp
ror
fwait
in
imul
enter
add
cli
js
rcr
scas
in
mov
lds
dec
xor
inc
ins
push
cmp
mov
bound
xor
or
xchg
pop
mov
pop
leave
jl
inc
mov
mov
lahf
scas
and
pop
dec
hlt
(bad)
cld
ror
call
xor
and
mov
or
lods
adc
clc
fcomp
call
mov
mov
jg
xor
xchg
cdq
fst
fsub
lea
(bad)
mov
mov
and
scas
rcr
sbb
jge
sub
rdmsr
sar
mov
cmp
retf
or
sbb
push
fdiv
cli
and
and
pop
retf
arpl
dec
mov
pop
imul
jb
stc
adc
shl
(bad)
xchg
adc
lahf
xor
xchg
sub
call
adc
xor
jb
outs
ins
jge
test
iret
pop
xor
repnz
or
or
or
popa
lods
xchg
nop
jnp
mov
bound
int
jb
fmulp
mov
stos
pop
mov
jns
mov
sub
push
repnz
aam
sub
inc
pusha
daa
stos
push
ret
pop
aam
fwait
sbb
je
lds
fwait
and
push
jge
test
(bad)
jp
pop
(bad)
mov
add
popf
popa
jecxz
xchg
lods
inc
xchg
cld
mov
retf
and
retf
xchg
aam
mov
clc
pop
mov
mov
clc
ja
push
push
lock
dec
mov
out
ret
adc
mov
add
cmps
or
mov
out
and
jge
mov
cmp
gs
push
popf
jbe
pop
mov
aas
movs
pop
adc
jae
pop
dec
mov
sar
lock
loope
gs
sahf
sub
dec
pop
sub
aam
int
leave
in
mov
pop
scas
cmp
pop
imul
jmp
mov
or
jg
cmp
jno
out
fisubr
pop
adc
jle
push
pop
cmp
pop
and
inc
push
pop
leave
push
(bad)
adc
add
call
mov
push
fstp
mov
xchg
jae
inc
add
int3
clc
jb
mov
push
imul
adc
ins
pop
mov
or
push
inc
push
dec
mov
push
lock
repnz
ja
std
mov
movs
imul
dec
lods
mov
jmp
jno
adc
sar
xchg
retf
xchg
pop
lods
mov
sbb
icebp
sbb
mov
popf
push
mov
mov
jns
pop
xlat
jns
adc
fcomp
fsub
out
cmp
(bad)
fcmove
sti
cdq
pop
shl
leave
(bad)
adc
es
lock
adc
lods
mov
repz
repz
aas
sbb
jns
hlt
cmp
dec
bnd
jne
mov
adc
popa
addr16
adc
movs
cmp
test
movs
cmp
idiv
fiadd
leave
loope
mov
dec
xchg
xor
ret
dec
dec
int
mov
push
or
daa
out
sbb
dec
int3
inc
mov
sub
int3
mov
sub
pop
dec
test
push
xchg
popa
add
xor
repnz
add
sub
mov
add
sub
xor
push
adc
inc
ss
dec
and
sub
scas
ins
mov
cmps
sbb
pusha
loop
push
es
movs
mov
sub
shl
pop
jle
sbb
repz
nop
adc
xor
push
dec
cli
dec
or
stos
cmc
je
pop
mov
dec
(bad)
dec
popa
or
imul
and
adc
inc
adc
push
fisttp
mov
das
cmp
mov
adc
lahf
mov
rol
xchg
in
jp
(bad)
stc
xchg
xchg
jno
mov
mov
cmp
loop
int
sar
xor
outs
nop
clc
xchg
outs
jb
cmps
pop
in
push
ins
in
retf
mov
and
lahf
and
adc
add
or
ds
or
out
and
cmp
imul
mov
cmp
ror
clc
xchg
nop
sbb
jne
dec
sub
sbb
push
fdiv
or
xor
cmp
fwait
les
add
and
test
jae
lods
jge
mov
inc
cmp
add
in
icebp
dec
mov
mov
jmp
arpl
mov
jb
xchg
push
scas
mov
jg
fmul
push
xchg
ret
add
inc
mov
rol
xchg
shr
bound
dec
mov
dec
mov
mov
(bad)
test
out
adc
adc
pop
cmp
lods
sti
bound
out
nop
dec
iret
add
jle
test
mov
ja
jmp
xor
popa
mov
push
gs
iret
add
loop
and
push
xchg
cmc
movs
int3
ficom
enter
mov
add
pop
jle
push
dec
jae
cmp
movs
retf
lea
int3
out
xchg
push
aad
in
shl
sbb
ds
js
mov
shl
pushf
out
in
xchg
push
pop
aad
sub
ffreep
popf
inc
xor
mov
out
mov
shr
movs
cwde
cmp
movs
jb
pop
(bad)
imul
ret
xor
ds
mov
sub
das
cmp
lea
iret
push
xlat
xchg
xor
dec
ja
scas
mov
mov
dec
fild
ins
fwait
outs
push
test
mov
aam
test
sbb
xor
xor
mov
int
mov
in
in
jmp
(bad)
div
add
test
(bad)
aas
xchg
sbb
jno
aas
ins
inc
xor
ss
ret
dec
(bad)
sar
push
and
mov
das
scas
add
or
test
push
inc
dec
or
mov
icebp
or
ins
bound
movd
cmp
adc
inc
(bad)
popa
addr16
(bad)
dec
repz
not
jmp
dec
(bad)
cmps
jmp
popf
clc
fst
push
shl
loope
mov
(bad)
call
cmps
fisttp
or
lods
out
and
pushf
rcr
cmp
out
mov
sub
nop
inc
push
out
or
xor
outs
call
xor
loop
(bad)
mov
pop
mov
lds
lahf
sbb
mov
adc
(bad)
lods
pop
test
imul
inc
pushf
lds
mov
popa
cmc
fnstsw
cwde
scas
or
mov
(bad)
sub
nop
pop
imul
mov
mov
sbb
lds
and
stos
mov
scas
dec
cli
push
jo
sub
jecxz
jbe
jo
outs
mov
pop
mov
cmps
sub
inc
out
(bad)
sbb
ficomp
fist
mov
mov
ror
cmps
xchg
add
imul
fstp
cmp
adc
ss
(bad)
cmp
(bad)
sbb
mov
cmps
jge
ror
cmc
or
adc
inc
aas
pop
inc
into
nop
mov
ds
or
std
pop
cmp
je
add
out
xor
movs
add
lahf
and
shl
out
icebp
dec
in
out
add
outs
or
push
mov
mov
popf
fadd
mov
jl
xor
out
ss
cmp
dec
sbb
jle
stos
in
into
sbb
cld
ins
mov
inc
jmp
push
jp
scas
mov
inc
pop
test
cld
fdiv
cmc
aaa
add
sbb
retf
xchg
(bad)
bound
cmp
adc
cld
fcmovu
hlt
sub
aas
push
xlat
mov
jecxz
mov
push
retf
sbb
inc
push
inc
push
hlt
std
mov
pop
pop
mov
pop
inc
paddb
pop
pop
ret
setne
sbb
cmp
xchg
mov
scas
add
mov
add
sbb
mov
ds
pop
in
and
leave
push
sub
xor
leave
js
je
or
cmps
outs
ret
cdq
fidivr
jnp
pop
jb
inc
mov
inc
mov
xor
push
sbb
inc
jae
cmp
mov
mov
call
cmp
daa
arpl
aas
stc
pop
imul
stc
jp
pop
aas
pop
add
and
out
mov
jns
out
sar
or
dec
mov
mov
das
mov
bnd
into
dec
mov
inc
in
and
rcl
jo
adc
and
and
pop
les
out
gs
sbb
in
pushf
pop
jns
jmp
add
call
int
push
stc
sbb
fs
sbb
or
xchg
dec
test
stc
fld
pop
pop
xchg
mov
(bad)
push
imul
mov
(bad)
jo
mov
push
(bad)
pop
(bad)
xchg
nop
or
jmp
push
sub
stos
mov
cmps
adc
fdiv
sbb
add
out
xchg
repnz
mov
nop
arpl
and
jl
call
out
punpckhdq
sbb
popf
(bad)
shl
xchg
lods
xchg
(bad)
mov
mov
repz
outs
mov
xor
xchg
adc
mov
fdivr
clc
add
dec
daa
shl
out
sbb
xor
adc
iret
mov
aad
call
push
xchg
xor
test
mov
sub
test
mov
aad
dec
or
and
jae
imul
inc
in
cs
adc
xchg
stos
outs
or
cmc
pop
cs
movs
jp
ja
repz
into
rol
(bad)
cmp
scas
jne
xor
loop
pusha
repnz
sar
daa
xor
sti
add
sbb
pop
clc
cmp
bound
dec
test
cmps
ins
loope
(bad)
les
dec
mov
fidivr
dec
xchg
test
mov
sahf
sar
jb
fdivr
cmc
inc
add
dec
pop
movs
mov
aaa
pushf
and
shr
rcl
sahf
stc
ror
mov
mov
jno
lds
repz
jne
jge
xor
dec
loopne
sti
ret
inc
push
cld
hlt
(bad)
xor
cdq
or
mov
sub
ins
inc
daa
cs
mov
ins
cdq
mov
pop
jle
jnp
leave
inc
sub
stos
push
out
fs
add
mov
sbb
xchg
lds
mov
es
jmp
cwde
jge
mov
jge
mov
rol
mov
scas
imul
xchg
test
loop
imul
push
cli
mov
aaa
dec
fldl2t
ds
mov
jne
dec
jecxz
jnp
push
les
dec
push
push
sti
in
lock
pop
mov
or
int3
jbe
mov
cmp
jbe
jno
lock
orps
rol
cmp
adc
cli
sub
cdq
mov
imul
out
movs
sub
jns
cs
mov
pusha
mov
and
mov
push
data16
aam
pop
and
cld
inc
mov
ret
xor
mov
sub
jle
mov
movntq
out
cli
jns
mov
jae
cmps
stos
mov
sub
pop
jmp
(bad)
fadd
in
jno
std
icebp
jge
push
mov
imul
mov
xor
push
mov
mov
xor
pusha
jb
sbb
ret
dec
call
mov
jbe
das
dec
in
push
xchg
mov
imul
add
cmp
aas
cmp
xor
or
push
ds
ds
cmp
(bad)
hlt
imul
sbb
lahf
aad
add
retf
test
add
pop
jmp
(bad)
cdq
mov
push
sub
mov
rcr
inc
mov
push
std
inc
jns
les
ret
out
loope
loop
inc
pop
test
scas
fwait
dec
sbb
lds
mov
pop
(bad)
jae
mov
out
imul
out
add
push
adc
mov
rcl
enter
mul
popf
in
fstp
add
pop
dec
push
or
xchg
adc
inc
ins
mov
pop
test
stos
mov
mov
or
movs
mov
jg
jae
mov
pop
(bad)
sbb
adc
dec
clc
bound
les
in
sub
push
sahf
in
cdq
stos
pop
icebp
fnsave
loopne
push
(bad)
push
and
sbb
adc
mov
lods
pop
pusha
pop
cli
inc
mov
pop
or
jmp
push
mov
pop
test
shl
inc
or
sub
jne
cmp
mov
push
add
cmps
sbb
jno
mov
jb
mov
xor
pop
add
adc
xor
outs
mov
xchg
mov
scas
fadd
fcom
shl
inc
inc
sub
jae
jb
xchg
jecxz
and
fndisi(8087
mov
jne
add
outs
add
or
cld
push
inc
sub
fisub
fstp
xchg
cmp
(bad)
fisttp
shl
nop
mov
push
inc
dec
bound
and
fucomp
xchg
sub
fwait
leave
inc
xor
ins
xor
or
nop
outs
and
mov
fild
cmp
cmp
scas
cmc
and
rcr
inc
mov
cld
cwde
pop
stos
sub
sub
out
sti
pop
jb
sub
adc
pushf
jecxz
(bad)
sar
aad
and
call
aam
test
pop
xlat
ror
cmp
call
or
sahf
mov
sub
data16
(bad)
retf
jno
adc
inc
jae
ret
jl
mov
in
fld
jae
pop
push
mov
(bad)
push
jb
in
mov
sub
mov
pop
xor
fsubr
scas
sub
out
jecxz
frstor
out
clc
adc
dec
cld
sar
cld
and
sbb
(bad)
inc
sbb
mov
mov
jae
retf
inc
icebp
scas
dec
mov
mov
shl
shr
leave
aaa
jb
stos
out
pop
fsub
jnp
in
dec
dec
les
outs
xchg
push
ss
mov
or
js
or
xchg
sub
stos
push
repz
add
pop
cmps
stc
sbb
xchg
fs
call
mov
push
repz
push
ret
and
cmps
cmp
data16
int3
call
and
and
jae
ss
test
fwait
stos
mov
sub
xor
stc
adc
pusha
lods
(bad)
mov
cmc
cld
mov
das
cs
das
pop
fs
test
and
out
dec
pop
inc
pop
retf
xor
jb
in
and
ins
xchg
lahf
jmp
jns
in
pop
das
or
or
jle
or
and
ja
div
jbe
test
imul
or
retf
int
imul
and
cwde
dec
add
rep
mov
mov
int3
enter
imul
mov
mov
mov
test
std
(bad)
dec
dec
inc
xor
adc
retf
int
lods
add
imul
fwait
aad
xor
sub
jle
scas
sbb
shl
int3
sbb
(bad)
fnstcw
in
(bad)
cmps
mov
fcom
arpl
ins
arpl
push
js
jp
sahf
into
popa
daa
cdq
mov
xor
xchg
sti
enter
rcr
cmc
mov
xchg
jmp
xchg
jmp
jns
mov
arpl
and
sar
or
icebp
imul
repz
aam
in
inc
cmp
inc
fcom
push
mov
movs
sub
(bad)
sahf
jae
lods
cmp
inc
mov
pop
gs
sbb
xchg
jmp
or
aad
out
pushw
mov
jle
adc
(bad)
(bad)
neg
and
and
xadd
ins
dec
je
sbb
into
shr
or
xor
or
(bad)
fbstp
sahf
in
adc
jmp
pop
or
mov
int
and
cmp
adc
lods
adc
fs
pop
rcl
test
jmp
mov
pusha
xchg
inc
fdiv
(bad)
lods
pop
(bad)
movs
or
hlt
xor
fucomp
xor
adc
pop
pushf
test
or
or
sti
sbb
cdq
xchg
in
sti
pop
sbb
cmp
cmp
retf
mov
push
test
int3
retf
xchg
lea
xchg
or
jg
pop
xor
arpl
ret
sbb
pop
jg
push
mov
cmp
fld
fimul
sub
mov
hlt
ss
sar
bound
fstp
xlat
sbb
jbe
mov
push
fwait
ins
mov
jecxz
adc
(bad)
psrad
ds
dec
xor
fs
sub
hlt
sbb
xor
jmp
pop
nop
in
cld
or
cmps
lods
lods
lds
mov
or
or
test
push
mov
pushf
loope
lahf
inc
enter
call
jecxz
mov
dec
test
fwait
sti
push
inc
dec
jbe
pop
mov
fs
pop
(bad)
call
cmp
les
mov
sub
dec
ret
pushf
add
jmp
inc
loope
sub
jno
mov
aaa
mov
test
xchg
pop
dec
mov
dec
or
xor
mov
sbb
std
mulps
repz
clc
shl
das
ror
mov
jne
movs
je
pop
(bad)
mov
popa
jbe
lock
and
aaa
nop
outs
out
push
jmp
cmp
push
(bad)
sti
and
je
shr
mov
(bad)
rcr
aaa
xchg
ret
push
inc
mov
jne
jae
add
sbb
or
sbb
call
jmp
scas
jbe
cmp
jle
dec
inc
xchg
cmp
adc
pop
sbb
jbe
cmp
push
push
(bad)
dec
dec
ret
pop
ds
dec
outs
loop
xchg
int3
into
sbb
jb
into
sub
rcr
xchg
je
sbb
loopne
mov
aaa
mov
loop
push
xchg
out
movs
les
and
pop
aaa
lods
adc
adc
xchg
xchg
cdq
lahf
fst
(bad)
js
dec
xor
push
iret
mov
loop
and
cmp
dec
fsub
scas
scas
ror
int
movs
loope
sub
sbb
aad
pop
mov
pop
out
jo
cmp
and
sbb
mov
dec
ret
xchg
out
sbb
cmps
cs
les
push
iret
fs
mov
clc
or
aad
push
add
call
test
jns
test
mov
ror
jp
shl
or
cmc
push
adc
mov
in
mov
movhps
fcmovne
inc
cmp
add
and
push
test
push
call
mov
loopne
xor
ins
int3
cmps
rol
mov
inc
aad
shl
sbb
in
cdq
repnz
xchg
add
loop
jmp
or
add
es
cmps
sub
push
nop
mov
xlat
(bad)
imul
and
xchg
(bad)
push
mov
pop
sahf
mov
aad
out
hlt
cmp
inc
pop
fistp
mov
cwde
mov
xchg
mov
adc
out
inc
dec
jmp
shl
push
in
sbb
mov
cmp
lahf
mov
mov
pop
lods
adc
jnp
mov
jle
in
adc
out
mov
stos
xchg
pusha
mov
mov
out
pushf
or
inc
sbb
pop
scas
pushf
test
fisttp
pop
pop
or
outs
hlt
leave
or
xchg
loope
idiv
loop
shl
lods
je
mov
mov
imul
xchg
xchg
dec
enter
mov
sub
push
or
loop
inc
add
mul
out
sbb
in
std
mov
and
dec
retf
nop
ja
ret
adc
inc
push
sub
repz
jb
sbb
inc
retf
test
sbb
dec
clc
ficomp
push
inc
mov
sbb
dec
retf
sti
dec
add
cld
loope
jbe
repz
mov
dec
into
daa
xor
mov
sar
push
and
xor
neg
pop
jle
out
mov
cdq
jle
push
inc
push
ss
inc
xlat
leave
fwait
jecxz
or
aas
mov
inc
movs
sbb
xor
mov
cmc
xchg
mov
pop
push
js
cld
xchg
mov
leave
inc
pop
mov
dec
(bad)
std
dec
aaa
or
cmps
repz
inc
lods
dec
jnp
movs
and
rcl
inc
cmc
or
or
adc
jno
test
es
cwde
cmp
cmp
fldcw
(bad)
out
(bad)
mov
addr16
cmp
imul
ja
es
int3
fidiv
dec
int3
retf
dec
cmp
call
and
popf
sbb
mov
sbb
bound
push
ret
cli
movs
dec
jp
xor
(bad)
ror
popa
xor
ds
jnp
imul
sbb
jg
add
adc
nop
push
cmp
pop
test
aaa
sbb
or
dec
fild
call
loopne
jb
lock
jae
(bad)
lods
push
push
call
ror
(bad)
stos
adc
ja
cmp
loop
push
adc
loop
cmp
in
pop
and
daa
lds
dec
ds
mov
push
inc
loope
adc
xlat
out
js
scas
add
shl
cwde
cmp
xor
xchg
adc
call
add
ror
inc
xor
pop
out
das
jmp
mov
mov
jno
fsubr
push
push
ins
dec
mov
xlat
retf
imul
lahf
add
sub
cmc
jl
sahf
out
inc
add
pop
jmp
pop
sbb
sbb
jae
and
movs
cmp
jmp
mov
push
in
(bad)
mov
xor
xchg
cli
in
retf
(bad)
adc
jle
add
mov
cmp
xchg
xor
stos
iret
xchg
aas
xchg
nop
test
mov
mov
mov
sub
push
push
mov
and
repnz
sbb
fcomp
or
out
popf
inc
es
movs
retf
mov
neg
jno
loop
push
cmps
loop
add
jp
cs
xor
cmp
cmps
mov
sahf
mov
loope
xchg
and
inc
bound
jmp
fmul
mov
inc
add
pop
scas
scas
xchg
stos
lds
aaa
mov
mov
and
xchg
xchg
clc
jp
add
call
inc
pop
cmc
test
fadd
dec
stos
je
adc
pop
stos
sbb
and
addr16
pop
mov
call
ds
mov
ins
scas
dec
cmp
cdq
mov
cld
dec
adc
pop
out
pushf
retf
fwait
fwait
xchg
loop
jb
mov
jp
inc
fimul
retf
dec
in
popa
ins
faddp
dec
pop
mov
sub
hlt
mov
aad
mov
mov
sub
mov
loop
sub
push
inc
pusha
pusha
pusha
xchg
das
mov
mov
data16
mov
add
(bad)
mov
sub
mov
jne
(bad)
div
addr16
cmp
mov
cmp
mov
xchg
and
adc
pop
mov
add
jno
add
jmp
mov
cmovbe
mov
sub
iret
stos
inc
xchg
xchg
lods
jmp
int3
pop
not
movs
iret
and
mov
sbb
dec
cmp
lods
add
test
push
and
call
fwait
cmp
bound
jnp
push
(bad)
pop
jl
or
popa
lahf
mov
xchg
or
sar
mov
retf
mov
outs
dec
lahf
retf
int3
mov
mov
xlat
jle
out
sub
mov
mov
sub
mov
jne
xor
movs
cmc
mov
je
push
xchg
push
add
mov
jg
mov
add
(bad)
pop
test
stc
stos
xchg
retf
push
iret
fwait
ins
jg
push
out
jmp
aam
popf
clc
fiadd
jo
js
dec
das
push
out
cmp
fwait
add
dec
jae
mov
or
daa
data16
ss
jns
sub
xchg
add
std
stos
pushf
fcom
lods
or
out
ds
int3
fldenv
js
popf
pop
dec
jge
pop
xchg
or
jp
(bad)
pop
mov
sbb
mov
popf
repnz
ss
dec
add
fs
pop
in
cmp
fsubr
fcmovnbe
sbb
push
cli
mov
imul
(bad)
ss
popa
test
mov
xchg
mov
into
aam
rcr
push
dec
jo
inc
pop
sahf
adc
jge
jmp
xor
add
loopne
mov
inc
lods
pop
(bad)
clc
sub
add
and
lods
les
leave
push
dec
cs
rcl
xlat
fs
fincstp
adc
pop
jb
jp
and
jne
xlat
mov
aaa
jns
fld
ins
push
pop
nop
ds
mov
test
cs
cmp
jmp
test
les
add
repnz
add
cmp
xor
inc
push
xor
mov
es
int3
ins
push
push
xchg
scas
xchg
popf
fadd
movs
rcl
lods
cmp
pop
pop
push
add
mov
pushf
sub
dec
loope
add
xor
sbb
fst
aam
icebp
mov
jl
test
cli
xchg
outs
mov
push
xor
or
cmp
aam
mov
jmp
int3
pop
test
std
cld
cmc
imul
mov
dec
xchg
leave
pop
sub
outs
pushf
sbb
inc
(bad)
pop
dec
cmp
jb
(bad)
lea
(bad)
dec
into
lods
add
loope
icebp
dec
gs
xchg
pushf
ja
adc
xlat
xor
xor
sub
cmp
test
mov
mov
mov
mov
jge
add
xchg
adc
or
imul
cmps
out
adc
push
sub
cmp
pop
out
dec
jge
psubusw
pop
mov
pop
ret
fidiv
ffree
pop
mov
push
add
mov
dec
cwde
icebp
test
pop
out
(bad)
adc
dec
jge
mov
jmp
pop
cmp
stc
or
loope
push
dec
(bad)
stos
mov
xor
ds
loope
(bad)
xor
loope
push
mov
outs
sub
jmp
fwait
loope
clc
or
outs
inc
xchg
stos
mov
aam
nop
imul
cmc
punpckhwd
dec
dec
or
or
add
mov
mov
and
nop
loopne
mov
push
cmp
adc
imul
cdq
push
xor
mov
jle
jno
aam
repnz
mov
ret
pushf
and
sbb
movs
push
xchg
fisttp
fsub
mov
push
pop
rsqrtps
call
cmp
pop
aaa
cwde
es
lea
push
add
push
dec
xchg
loope
sub
mov
mov
stc
stc
pop
std
not
in
shl
adc
xchg
cmovne
dec
arpl
(bad)
(bad)
jo
or
loop
cmp
ffree
sar
jle
repz
jb
adc
out
inc
cld
fwait
mov
or
xchg
cmp
ret
fisttp
sbb
or
mov
fisttp
mul
scas
lock
dec
jmp
aam
inc
lahf
cmp
push
add
les
inc
ss
pushf
div
icebp
lahf
mov
jg
adc
(bad)
sub
xchg
adc
test
xchg
xlat
mov
push
jmp
sbb
xor
jb
push
push
pop
(bad)
cmp
je
mov
cmp
lods
mov
inc
sbb
rcr
jl
aad
cmp
add
rol
xor
adc
in
loope
aad
dec
xor
ins
adc
xor
jb
inc
pop
outs
das
ret
mov
mov
xchg
xor
inc
div
xor
inc
(bad)
jns
sahf
in
lea
pop
pop
mov
es
xchg
inc
mov
dec
dec
push
lods
cmc
(bad)
and
leave
ror
push
jge
inc
div
sbb
cmp
cli
and
std
jmp
cmp
pusha
in
not
icebp
clc
xor
dec
add
pop
(bad)
and
sahf
or
fisub
push
sbb
or
dec
jle
jae
outs
addr16
or
xor
mov
cwde
push
jl
mov
mov
jp
xor
lods
pop
fnstenv
sub
test
gs
nop
dec
mov
div
and
dec
aad
lock
sub
or
shr
loop
push
mov
jmp
fs
daa
mov
cdq
pusha
mov
sar
popa
fdivr
pop
nop
loopne
pop
dec
int3
cmps
or
(bad)
sar
mov
sbb
push
push
pop
mov
imul
xor
rol
add
inc
or
mov
push
xchg
inc
mov
cmp
jbe
dec
jne
push
mov
mov
add
cdq
mov
dec
cwde
dec
xchg
js
xchg
xchg
in
xchg
or
add
pop
mov
arpl
dec
in
and
fild
inc
dec
cmps
xor
push
into
mov
push
mov
in
push
repz
es
push
inc
mov
(bad)
(bad)
cmps
inc
push
xchg
sbb
les
adc
pop
dec
out
in
push
imul
pushf
xchg
ds
mov
aad
xlat
in
cmc
outs
dec
pop
push
adc
mov
das
jge
sbb
sahf
add
cdq
cld
and
sbb
mov
sahf
pop
test
and
out
popa
xor
(bad)
neg
(bad)
cli
pop
push
test
xor
call
and
sar
pusha
enter
pushf
push
sub
mov
cmp
clc
mov
xor
gs
lock
sub
(bad)
(bad)
rcl
sbb
xor
xchg
pushf
pop
xchg
sub
sub
loopne
xchg
mov
xor
jno
dec
jmp
ret
shr
test
adc
clc
add
shl
sbb
xor
push
push
jbe
std
xor
retf
cmp
xchg
jae
jecxz
dec
cdq
jmp
pop
add
scas
loop
jne
xor
loop
lds
rcr
dec
jbe
cmp
out
xchg
cmp
mov
jl
inc
cmp
mov
and
mov
xor
xlat
cld
pop
and
sbb
sti
ins
(bad)
and
(bad)
and
sbb
adc
(bad)
mul
dec
cli
test
or
push
movs
pop
pusha
xchg
(bad)
out
cmp
or
push
aad
js
mov
or
jmp
jmp
jno
fsub
mov
out
hlt
mov
fwait
movs
adc
inc
pop
popf
or
pop
mov
xor
ffree
leave
sbb
mov
mov
mov
icebp
cmc
inc
dec
pop
retf
jmp
(bad)
ss
cld
sahf
and
add
cmp
push
and
hlt
inc
inc
mov
push
jns
aaa
jle
cld
in
push
add
rcl
popf
fistp
lahf
repz
fild
xchg
mov
push
(bad)
in
mov
imul
lds
push
or
(bad)
push
inc
push
sbb
scas
pusha
daa
fiadd
push
mov
xor
lods
ret
div
pusha
mov
xchg
push
aam
mov
xchg
ret
jmp
sbb
inc
outs
cdq
stos
pop
inc
sub
je
jmp
ss
inc
loope
cmps
and
pop
(bad)
jg
xchg
add
mov
add
repz
mov
je
sbb
and
lock
mov
mov
out
es
ins
(bad)
xor
jmp
and
adc
jmp
movs
or
rol
xchg
xor
mov
dec
xchg
mov
fistp
lea
push
fld
cs
push
add
das
or
stc
ss
pusha
add
sub
in
cs
xchg
nop
gs
movs
fst
lock
inc
in
inc
mov
retf
sub
test
push
ret
imul
adc
iret
mov
xor
addr16
add
gs
and
cmp
outs
push
retf
rcr
jmp
cld
jecxz
or
push
mov
add
aaa
xchg
out
and
xchg
test
popa
jle
idiv
int3
outs
int
(bad)
fild
movs
cmp
daa
ror
jbe
xchg
add
sbb
stos
(bad)
in
rol
bound
jb
xlat
or
or
or
mov
pop
xor
and
cmp
inc
xchg
mov
aad
xchg
ror
(bad)
and
retf
into
adc
clc
dec
jnp
lods
sbb
or
and
ficomp
dec
movs
adc
dec
xchg
daa
mov
add
(bad)
cmp
mov
mov
jmp
jae
dec
pusha
push
push
fiadd
icebp
sbb
xchg
or
in
and
lea
cmps
or
xchg
cmps
test
sub
mov
dec
push
jae
mov
mov
push
xor
cs
idiv
scas
lods
fiadd
xchg
and
sbb
and
sbb
mov
xor
les
dec
pop
fisub
lods
cmp
dec
pop
sub
inc
xor
or
mov
inc
mov
enter
fsubr
icebp
(bad)
fadd
inc
add
inc
aaa
cmps
fnstcw
sahf
outs
xchg
cmp
jns
std
das
fwait
and
movs
jge
pusha
pop
mov
imul
pop
clc
ficomp
loope
inc
(bad)
out
sub
lods
sub
inc
in
fstp
not
adc
addr16
in
cmp
sub
lahf
sbb
cs
sub
jp
out
int
call
lds
pop
adc
scas
pop
cmp
jle
and
fwait
add
cmp
nop
jns
xor
ror
or
or
pop
sbb
jbe
mov
sbb
aam
sahf
mov
popa
int3
in
hlt
imul
loop
cmps
punpckhwd
jg
or
jbe
aas
sub
xor
jbe
xor
jmp
not
or
and
lahf
dec
pusha
repz
mov
in
xor
mov
inc
add
pop
mov
(bad)
pop
jl
cs
shr
(bad)
arpl
outs
mov
stos
bound
add
repnz
movs
std
push
jg
mov
cmp
pop
dec
xchg
jmp
xchg
daa
pop
call
fmul
xor
push
scas
cs
xor
mov
das
add
inc
adc
cmp
push
mov
xchg
fsubr
mov
pop
jno
jg
addr16
cmp
mov
jbe
mov
gs
mov
call
lds
shr
pop
cs
mov
leave
mov
jb
mov
mov
push
out
stos
push
mov
dec
push
popa
mov
and
sub
cmp
sub
mov
rcl
mov
jbe
test
lea
sbb
dec
les
fisub
xor
das
ret
popa
int3
adc
pop
fnstsw
mov
mov
popa
leave
icebp
adc
imul
xchg
cld
repnz
mov
lahf
test
xor
jp
sbb
(bad)
sbb
cs
jp
movs
sahf
inc
call
loop
stos
push
ds
mul
mov
call
jmp
mov
mov
ja
je
outs
int
add
pop
xor
addr16
(bad)
cmp
je
icebp
(bad)
in
xchg
xchg
pop
fnstcw
and
in
jle
popa
push
push
loope
(bad)
mov
ja
mov
shl
jge
std
mov
inc
call
adc
enter
jecxz
push
dec
jo
mov
das
jb
dec
movs
push
leave
neg
mov
xor
fidiv
adc
test
mov
sbb
rcl
sti
icebp
sub
imul
inc
stos
aas
lods
dec
ds
sbb
mov
jge
xlat
aaa
test
imul
pop
rcl
bound
adc
test
mov
test
out
sub
inc
mov
cmp
cmp
jmp
(bad)
retf
ss
pop
or
cmp
mov
xlat
sbb
inc
dec
push
rol
sub
cmp
cmp
jg
mov
pusha
dec
movs
sub
into
ins
fild
push
sbb
sbb
mov
and
stos
movs
stc
push
pop
jmp
stos
cmp
pop
fucomi
outs
fsubr
inc
pop
bound
inc
mov
clc
test
outs
imul
mov
imul
add
add
call
loop
push
lods
inc
cmps
int3
popa
add
ret
mov
add
jmp
jle
sub
rol
fnstsw
or
and
and
and
cmp
daa
(bad)
and
ins
pusha
and
jns
mov
jl
lock
mov
xor
inc
sar
cdq
pushf
mov
sbb
addr16
cmps
movs
add
add
xchg
out
cmps
test
jle
add
out
std
sbb
sbb
(bad)
sbb
cdq
icebp
inc
sti
add
int3
pop
scas
sub
mov
cmp
push
(bad)
adc
sti
push
inc
push
popa
and
gs
lods
jae
dec
cmps
in
pop
or
fild
or
pmulhw
jne
xor
jo
and
add
pusha
push
enter
dec
mov
icebp
pop
shl
dec
shl
jns
shl
ds
cmp
cld
popf
sbb
popa
xchg
ret
es
sbb
mov
push
icebp
sbb
jae
out
cmp
ror
inc
je
jecxz
ja
or
dec
pop
lods
jae
int3
pop
pop
mov
fsubp
mov
outs
jmp
int3
add
es
out
out
aad
aam
in
icebp
xlat
push
loopne
ss
aad
les
fbstp
sub
jge
fcmovne
mov
lahf
dec
jno
cdq
add
add
add
add
pop
imul
and
dec
fcmove
mov
adc
mov
fstp
ficomp
cmp
or
cmp
dec
push
push
and
dec
pop
loopne
in
dec
cs
xor
ret
jmp
mul
cmp
mov
sahf
jmp
mov
xlat
push
std
xchg
rcr
dec
test
test
cmp
pop
icebp
aad
bound
retf
in
lods
rcr
pop
cdq
popf
(bad)
xor
inc
jle
pop
jmp
sbb
std
xchg
leave
cmp
push
shl
mov
(bad)
or
pop
test
(bad)
jp
inc
gs
add
popf
aad
dec
jmp
in
pop
daa
cmp
call
ror
mov
cmc
cmc
movs
in
imul
repz
in
fs
xchg
stos
jo
lock
ins
mov
add
add
scas
adc
std
sahf
pop
popa
js
sbb
fisttp
push
arpl
pop
data16
or
pop
xchg
cmp
mov
mov
pushf
mov
sahf
xchg
retf
(bad)
xchg
das
push
xchg
sbb
inc
inc
cmc
loope
sub
sub
sbb
aaa
mov
cwde
pop
out
enter
idiv
lods
loope
mov
inc
arpl
aad
scas
int3
and
js
or
inc
dec
retf
mov
fmul
jbe
ror
mov
ret
pop
inc
sti
push
popa
mov
test
jb
xor
hlt
inc
mov
stos
inc
add
stos
test
push
out
adc
int
mov
and
sub
jg
sbb
or
pop
paddsw
retf
xchg
cmps
imul
mov
arpl
cmp
mov
push
inc
(bad)
lods
mov
or
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
jle
add
or
add
je
imul
add
add
add
add
inc
push
dec
inc
add
add
add
inc
ins
outs
bound
add
hlt
adc
add
add
add
push
push
add
add
add
add
add
mov
add
cli
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
pop
add
add
jg
push
add
add
xchg
add
push
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
add
add
push
add
add
push
add
add
inc
add
add
push
add
jg
dec
add
add
push
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
cmp
push
add
fs
js
call
add
sahf
add
movs
add
mov
add
add
fiadd
loope
jg
or
out
xor
or
repnz
cli
add
inc
clts
xor
add
add
pop
push
add
add
add
add
add
add
sub
add
adc
add
add
add
push
add
adc
add
add
add
add
jne
add
add
add
add
jne
add
add
add
add
jne
add
add
add
add
jne
pop
add
add
push
add
jne
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
or
adc
add
adc
lea
add
jne
or
add
add
add
jne
or
adc
lahf
push
daa
add
add
add
pop
sub
push
sub
adc
adc
sub
push
sub
adc
adc
sub
push
sub
adc
adc
sub
push
dec
add
add
pop
push
add
add
add
pop
push
add
add
add
xchg
cdq
push
sbb
add
pop
and
add
add
add
add
add
add
clc
and
add
add
add
add
add
add
add
xchg
add
add
xchg
sbb
pop
xor
and
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
sbb
pop
xor
sub
add
add
add
add
add
add
add
add
add
xchg
cdq
push
sbb
push
add
sub
add
add
add
add
add
add
xchg
cdq
push
sbb
push
add
xchg
add
add
sub
add
add
add
add
sub
add
add
add
add
sub
sbb
adc
je
add
add
xchg
lahf
push
push
add
add
sub
xchg
cdq
push
sbb
adc
loopne
add
add
xchg
add
add
add
add
xchg
or
pop
dec
add
xor
add
add
xchg
sbb
pop
xor
add
add
sbb
adc
enter
add
xchg
lahf
push
push
add
add
add
aad
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
add
add
lahf
push
loope
cdq
push
sbb
jno
cdq
push
sbb
add
cdq
push
add
add
add
add
add
add
add
add
add
add
add
add
pop
dec
add
add
add
and
sbb
dec
pop
sub
sbb
pop
pop
sub
pop
xor
dec
add
cmp
dec
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
pop
imul
outs
add
add
pop
imul
sbb
sub
or
jne
add
rol
cdq
push
xchg
add
add
add
add
or
or
or
or
stos
add
add
mov
fld
arpl
mov
pop
sbb
fld
push
mov
or
add
add
add
in
or
or
add
mov
test
inc
stc
add
add
or
add
iret
or
or
add
add
add
or
add
add
or
add
iret
or
add
add
add
or
or
add
add
sub
push
sbb
or
push
or
add
add
or
add
add
add
add
add
add
or
or
sbb
jae
push
add
cdq
push
popa
add
ja
push
or
jmp
add
add
add
add
or
add
add
add
add
add
out
add
add
iret
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
jne
jl
or
add
or
add
add
add
add
add
add
add
add
das
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
xor
add
add
add
add
add
inc
add
add
add
add
or
add
add
add
mov
add
adc
add
add
add
pop
add
add
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
das
add
add
or
push
add
push
gs
gs
imul
fs
push
gs
gs
imul
fs
gs
add
arpl
ins
imul
gs
cs
imul
inc
outs
jb
jae
push
jns
je
ins
cs
outs
jb
add
add
outs
popa
jne
jecxz
test
mov
jecxz
lods
popa
jecxz
mov
mov
add
ins
fdiv
jb
jae
jne
arpl
add
arpl
xor
xor
bound
cmp
cmp
bound
data16
popa
xor
bound
xor
ss
xor
fs
xor
xor
arpl
xor
popa
arpl
xor
bound
arpl
arpl
xor
arpl
xor
xor
xor
popa
xor
cmp
arpl
fs
xor
popa
cmp
xor
xor
xor
xor
xor
arpl
data16
xor
data16
aaa
xor
cmp
bound
aaa
xor
bound
aaa
add
aaa
popa
xor
popaw
xor
bound
ss
xor
popa
data16
add
imul
imul
je
push
imul
imul
jns
inc
jo
inc
outs
ins
popa
imul
gs
add
jb
jns
inc
je
jb
bound
add
je
imul
jb
gs
add
je
imul
popa
addr16
je
jb
bound
add
je
outs
outs
jbe
jb
gs
inc
outs
outs
ins
gs
outs
add
data16
inc
jns
add
popa
jb
inc
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
popa
jae
je
bound
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
outs
jbe
jb
add
gs
imul
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
inc
outs
jbe
jb
outs
ins
outs
je
push
jo
arpl
ins
inc
outs
ins
fs
inc
js
gs
imul
jae
outs
jae
bound
dec
outs
je
xor
dec
outs
je
xor
inc
imul
popa
fs
push
jns
je
ins
cs
dec
add
ins
add
ins
outs
jb
push
je
gs
ins
add
jb
popa
ins
add
push
arpl
popa
outs
outs
ins
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
popa
ins
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
gs
imul
imul
gs
outs
fs
popa
jae
add
je
outs
fs
outs
outs
add
data16
arpl
imul
imul
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
outs
je
ins
gs
gs
jo
jb
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
outs
je
ins
gs
imul
fs
add
jae
push
jns
je
ins
cs
arpl
imul
je
addr16
jo
jns
inc
gs
popa
outs
popa
gs
jns
je
push
je
gs
ins
add
jns
je
push
je
gs
ins
dec
outs
fs
imul
jae
inc
inc
push
inc
jb
jo
outs
push
gs
imul
imul
jns
je
push
jb
outs
jae
outs
jb
add
jae
ja
jb
inc
gs
jbe
inc
jns
gs
push
jns
ins
gs
imul
imul
push
push
inc
je
jb
bound
add
jb
outs
add
arpl
imul
je
ins
cs
gs
add
outs
imul
je
ins
cs
push
imul
gs
add
outs
je
add
imul
arpl
imul
je
outs
ins
add
jb
add
jb
inc
outs
jb
gs
je
ins
add
jb
push
imul
popa
je
add
gs
bound
inc
je
jb
bound
add
jecxz
xchg
gs
fdiv
jb
jecxz
test
jb
mov
mov
test
jecxz
popf
jecxz
cdq
push
jecxz
and
stos
jecxz
lahf
add
or
out
or
out
or
out
adc
out
adc
imul
outs
jb
out
add
fld
outs
jne
mov
mov
or
outs
jecxz
nop
outs
jns
adc
mov
imul
test
outs
jb
mov
mov
test
jecxz
popf
jecxz
cdq
push
jecxz
and
stos
jecxz
lahf
jecxz
mov
jb
add
cmp
add
add
outs
jb
dec
popa
imul
out
add
inc
js
arpl
popa
bound
popa
je
add
jb
add
gs
addr16
inc
jne
jb
outs
je
outs
ins
popa
imul
add
je
inc
outs
je
jns
outs
imul
outs
imul
jne
jb
outs
je
jae
jb
dec
jo
outs
push
jne
dec
gs
inc
gs
outs
ins
fs
popa
je
add
outs
arpl
add
imul
jo
add
je
popa
ins
jne
add
outs
jae
add
je
push
push
push
popa
jae
bound
add
jae
ins
gs
popa
jns
jne
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
je
push
imul
push
jne
jo
outs
fs
popa
jns
jne
add
je
push
imul
popa
je
add
imul
inc
jb
popa
jns
addr16
dec
gs
imul
inc
jns
gs
addr16
inc
ins
outs
arpl
imul
popa
je
inc
arpl
jo
outs
jb
push
jb
je
add
je
dec
push
add
je
dec
gs
push
outs
inc
jb
popa
jns
inc
outs
je
jb
inc
outs
outs
je
imul
addr16
dec
je
ins
add
je
js
arpl
imul
ins
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
dec
outs
addr16
add
outs
je
xor
push
gs
add
jo
jae
add
je
popa
ins
add
je
jne
ins
imul
imul
dec
gs
inc
jns
gs
addr16
push
outs
imul
gs
je
imul
add
imul
outs
ja
outs
jo
inc
jb
popa
je
jb
push
outs
popa
bound
imul
jns
gs
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
je
bound
arpl
outs
je
jb
add
push
jb
jns
jge
clc
test
mov
sbb
icebp
jns
jnp
or
xor
mov
push
push
push
xor
add
add
add
add
add
add
and
add
add
sbb
push
or
push
sbb
push
adc
push
add
add
push
add
push
or
or
add
push
push
or
add
push
add
adc
add
sbb
push
push
or
push
adc
add
add
add
or
push
pop
add
adc
popa
arpl
inc
outs
jb
outs
jb
je
outs
outs
add
add
add
push
adc
add
dec
popa
jbe
and
fs
je
add
and
add
dec
popa
jbe
sub
and
popa
je
outs
jb
and
and
outs
popa
jb
add
add
add
add
or
xor
xor
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
add
add
add
or
add
adc
jo
jb
addr16
and
xor
xor
add
pop
push
push
sbb
or
add
add
push
add
add
or
add
or
jge
add
sub
sbb
add
add
adc
push
and
adc
push
add
push
add
push
add
push
add
sbb
and
add
push
and
add
sbb
adc
adc
or
adc
add
add
adc
or
and
add
sbb
or
or
in
and
add
jno
and
sbb
and
add
and
add
sbb
or
jno
sbb
sbb
add
push
sbb
add
add
add
adc
push
push
and
adc
adc
add
add
jge
and
adc
add
add
add
add
or
and
or
and
adc
or
add
cmp
and
push
sbb
add
add
add
add
inc
add
add
or
add
add
inc
adc
add
add
push
add
add
adc
push
and
add
adc
and
sbb
add
push
push
push
pop
add
jge
jno
pop
add
or
sbb
add
inc
in
adc
in
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
adc
adc
adc
adc
or
pop
add
adc
pop
pop
add
pop
xor
xor
pop
popa
pop
gs
addr16
ss
pusha
pop
xor
xor
aaa
pop
xor
cmp
xor
bound
addr16
pusha
pop
popa
pop
addr16
xor
cmp
bound
pusha
pop
pusha
pop
xor
pop
gs
xor
inc
dec
sbb
sbb
sbb
dec
sbb
sbb
sbb
sbb
dec
sbb
sbb
sbb
sbb
sbb
dec
sbb
sbb
sbb
sbb
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
dec
sbb
pop
xor
push
sbb
sbb
sbb
adc
sbb
pop
sbb
adc
sbb
sbb
sbb
or
or
or
or
or
mov
or
or
or
clc
or
or
inc
out
push
in
push
out
push
mov
push
mov
push
jmp
mov
call
push
mov
push
jmp
mov
push
mov
push
jmp
push
mov
push
mov
inc
out
out
cmc
out
mov
cmc
jmp
mov
cmc
in
cmc
mov
cmc
jmp
cmc
mov
cmc
call
cmc
jmp
cmc
out
cmc
mov
cmc
mov
add
cmp
aaa
add
xor
add
cmp
data16
xor
xor
data16
bound
add
add
add
data16
add
xor
popa
add
cmp
arpl
cmp
add
add
les
add
add
add
out
add
add
add
fsubr
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
