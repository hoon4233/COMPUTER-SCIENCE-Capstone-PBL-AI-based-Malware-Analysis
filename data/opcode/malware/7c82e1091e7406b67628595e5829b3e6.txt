xchg
test
fucomp
dec
daa
mov
mov
sub
pop
sub
inc
sub
push
mov
ds
in
xor
retf
push
mov
and
pop
pop
and
push
and
jecxz
jb
jecxz
pop
sub
das
aad
xchg
push
jbe
sbb
jb
jb
(bad)
(bad)
jecxz
in
and
pop
sub
das
aad
(bad)
push
aad
fadd
adc
xchg
out
push
mov
fs
sti
stos
jbe
inc
cmp
cmc
add
cmp
add
and
push
stos
mov
sub
jne
cmc
jecxz
pop
sub
popa
push
sub
out
push
and
cmps
jmp
test
mov
data16
add
xchg
adc
in
scas
sub
(bad)
shl
test
(bad)
mov
jmp
fldenv
scas
cmp
sub
push
add
adc
jecxz
mov
adc
and
loop
sub
and
idiv
call
push
xchg
adc
jecxz
bound
sub
movs
add
sub
fistp
xor
cmp
push
std
ss
lods
popa
jecxz
mov
pop
fstp
pusha
jo
mov
daa
fcmovne
js
add
pop
jmp
pop
sub
out
adc
test
pop
pop
sub
out
xor
xchg
fsub
adc
add
cmp
cmp
ret
pop
xchg
(bad)
fs
push
ins
xor
loop
sub
push
pop
push
mov
test
ja
push
popa
push
test
and
pusha
retf
pop
(bad)
aad
pusha
sub
mov
jmp
test
xchg
js
adc
adc
mov
xchg
push
inc
adc
and
and
push
std
aaa
jge
sub
out
push
and
push
xchg
adc
add
test
mov
or
push
mov
lea
enter
mov
push
and
push
jne
sub
pop
xor
fs
push
mov
lods
daa
cmp
add
ds
popa
push
enter
mov
push
and
mov
sub
test
mov
sub
mov
and
stos
lock
mov
retf
and
push
(bad)
out
mov
and
call
cmp
pop
loop
aas
(bad)
loope
mov
adc
and
add
cmp
add
mov
dec
mov
mov
push
mov
mov
sbb
jp
mov
xchg
fadd
enter
mov
xchg
fadd
repz
mov
pop
and
sahf
dec
push
enter
mov
fcmovnu
test
mov
push
fsubr
xchg
test
mov
mov
jns
jecxz
fcmovnu
test
push
js
arpl
das
add
xlat
rcl
dec
bound
xchg
sub
sub
dec
imul
xchg
push
pop
pop
sbb
and
scas
mov
push
test
test
pop
pop
sbb
fsub
mov
js
and
sub
push
fistp
test
test
dec
and
fwait
push
mov
loope
mov
sub
jge
arpl
je
test
(bad)
jge
nop
or
pop
cmp
mov
xchg
push
pop
pop
sbb
and
scas
sub
dec
pop
fsub
mov
sbb
push
inc
pop
sbb
and
scas
fsub
pop
add
mov
ins
adc
loopne
and
push
mov
cmp
pop
add
lods
scas
data16
test
fcmovnu
in
stos
adc
cmps
sub
fcom
fsub
and
fist
push
adc
in
stos
adc
inc
mov
sub
fcom
fsub
xchg
xchg
enter
fist
jecxz
pop
scas
(bad)
daa
push
scas
(bad)
aaa
push
jecxz
rcl
push
imul
and
sub
push
push
sub
data16
loope
and
loope
aad
xchg
arpl
pushf
imul
and
xchg
data16
sub
jmp
loopne
pop
push
mov
xchg
sub
ficom
fcom
aaa
jge
imul
retf
outs
aad
and
lods
jecxz
inc
addr16
fild
adc
mov
test
pop
ins
push
loop
push
loop
push
imul
and
xchg
fcom
pop
stos
mov
mov
aaa
ins
sub
es
mov
mov
mov
pop
xchg
stos
xchg
mov
(bad)
data16
es
mov
in
and
xchg
jl
sti
mov
mov
add
xor
xchg
dec
in
cmp
scas
sub
stos
adc
data16
xchg
sahf
enter
pop
push
mov
mov
stos
xchg
push
and
cmps
test
stos
xchg
loope
aad
or
mov
mov
daa
dec
mov
sub
aam
dec
loope
mov
sub
jmp
js
add
jecxz
pop
addr16
and
in
stos
xchg
mov
aad
xchg
test
test
lock
js
fbld
leave
xchg
pop
outs
loop
mov
xor
fidiv
cmc
test
mov
ins
cmp
sub
stos
adc
scas
sub
jl
sti
mov
mov
add
sbb
in
pop
das
imul
data16
sub
fild
mov
jecxz
pop
scas
(bad)
daa
outs
sub
das
pop
push
jl
outs
jo
es
sub
dec
out
cld
sub
data16
sub
aam
pop
loope
cmps
sub
jge
imul
sub
dec
adc
xor
scas
js
mov
fsub
pop
sbb
popa
push
test
adc
pop
out
dec
or
and
dec
pop
fisubr
pop
das
je
dec
sbb
jb
ss
ds
std
fs
adc
clc
push
fistp
fcmovnu
addr16
push
pop
dec
sub
mov
add
ds
ja
push
repz
test
and
sbb
mov
push
fwait
and
loope
stos
sub
loopne
sub
test
test
pop
dec
cmps
dec
stos
scas
mov
mov
and
push
jo
sub
daa
test
pop
cmp
frstor
xchg
jo
sub
(bad)
addr16
mov
mov
mov
add
sbb
jne
sub
mov
push
mov
sbb
push
sub
js
adc
cmp
and
adc
pusha
loope
mov
test
mov
push
scas
adc
retf
aas
shr
fbld
jecxz
jnp
mov
pop
pusha
sbb
jecxz
lock
push
pop
pop
test
pop
jl
push
mov
loope
mov
sub
sub
pusha
loope
mov
test
push
xchg
test
mov
pop
xchg
fmul
and
adc
arpl
and
and
mov
rol
xchg
xor
and
push
pop
loop
push
push
push
and
loop
push
popa
push
cdq
sub
and
jecxz
pop
add
xchg
adc
shr
mov
in
sti
test
and
cmc
loop
and
mov
push
jne
and
mov
push
mov
push
and
in
ret
xchg
jae
aad
retf
not
push
shl
xchg
(bad)
pop
xchg
mov
test
and
cmc
loop
and
sbb
or
lahf
rcr
mov
loopne
in
jae
in
test
movs
cmp
(bad)
xchg
mov
rol
adc
cmp
push
mov
push
pop
xchg
and
dec
stos
mov
ins
pop
loop
push
sub
and
cmps
jmp
sub
and
adc
adc
loope
scas
and
dec
push
dec
imul
xor
xchg
(bad)
scas
data16
push
mov
xchg
adc
in
cmps
lock
mov
test
fild
daa
push
mov
adc
je
lahf
xchg
je
sub
sbb
popa
jecxz
sti
add
xchg
inc
sub
fucom
cwde
jae
cwde
xchg
aaa
imul
fistp
sbb
rcr
mov
loopne
and
cmp
push
sub
shl
push
sub
ss
movs
adc
adc
xchg
fcom
jecxz
pop
cdq
in
jmp
sub
mov
push
mov
retf
popa
push
lock
test
pop
jecxz
mov
and
test
add
and
mov
mov
stos
jl
sti
mov
mov
add
dec
adc
loope
push
pop
loope
addr16
loope
fistp
fcmovnu
addr16
stos
mov
push
adc
in
scas
push
mov
jns
adc
push
mov
repz
push
mov
inc
sti
push
and
pop
sub
push
pushf
pop
push
pop
pushf
pop
push
push
and
sub
in
and
enter
mov
push
int3
inc
fldcw
nop
movs
enter
push
fcomp
sbb
aad
xchg
and
pop
inc
fcmovnu
addr16
stos
mov
enter
or
adc
sub
mov
stos
mov
loope
addr16
loope
pop
jnp
daa
outs
push
sbb
pop
sub
cdq
pop
daa
push
adc
and
push
sbb
cs
test
pop
data16
xchg
(bad)
lds
and
pop
mov
cmp
nop
or
retf
push
retf
push
enter
loopne
and
loope
retf
arpl
push
dec
push
retf
push
lock
push
loop
push
imul
cmp
in
mov
test
push
scas
dec
sti
push
push
mov
pushf
jae
mov
push
pop
mov
push
and
sbb
and
ss
arpl
and
sbb
add
shl
jnp
dec
stos
mov
in
fisubr
inc
mov
dec
jecxz
push
mov
xchg
(bad)
and
cmp
rcr
fmul
test
pusha
and
mov
mov
stos
dec
push
dec
aas
push
push
mov
push
(bad)
mov
lods
fsubr
pop
xchg
(bad)
fs
push
mov
(bad)
push
mov
xchg
fadd
add
adc
test
pop
aas
imul
xchg
sub
jl
(bad)
loop
test
inc
xchg
(bad)
mov
and
push
loopne
out
and
cmps
or
push
fsubr
add
and
sub
add
loope
stos
sub
mov
sar
cmp
xchg
pop
xchg
fdivr
and
jmp
xchg
(bad)
pop
xchg
add
sub
xlat
arpl
push
mov
xchg
fadd
add
adc
test
pop
aas
pop
(bad)
xchg
sub
mov
(bad)
fsubr
cmp
push
and
fisubr
and
and
mov
mov
sub
xchg
jae
jns
fsubr
addr16
stos
jmp
xchg
(bad)
sub
vpshlq
in
xchg
fsubr
xchg
and
in
pop
push
mov
fcmovu
test
sub
and
cmp
add
and
and
test
movs
cmp
repz
(bad)
adc
and
in
in
mov
push
cmps
(bad)
pop
xchg
(bad)
arpl
and
jne
popa
push
enter
mov
xchg
mov
test
retf
cwde
inc
sub
fistp
aas
retf
fs
xchg
(bad)
fs
test
stos
scas
cmps
loop
xchg
fcom
push
loop
loop
dec
push
add
and
and
push
aam
dec
push
enter
mov
xchg
fadd
dec
cwde
(bad)
test
popf
xchg
fcom
sbb
xchg
and
imul
ds
cmp
mov
lods
push
fsubr
retf
out
inc
sub
fistp
aas
retf
clc
push
xchg
(bad)
fs
test
stos
scas
cmps
loop
xchg
fcom
push
pop
push
mov
mov
enter
mov
xchg
mov
test
retf
out
inc
sub
fistp
aas
retf
xor
(bad)
fs
test
stos
scas
cmps
loop
xchg
fcom
push
mov
loop
dec
push
add
and
and
push
aam
in
adc
(bad)
retf
aad
sub
ds
je
test
popf
xchg
fcom
sbb
xchg
and
imul
fmul
adc
adc
pop
xchg
mov
test
retf
out
inc
sub
fistp
aas
retf
mov
aad
fs
test
mov
mov
sub
xchg
je
sbb
lods
das
imul
push
aam
in
adc
(bad)
and
mov
test
movs
sbb
rcr
(bad)
pop
xchg
jp
mov
es
and
cmp
adc
retf
inc
loop
push
stos
xchg
in
fisubr
mov
push
sub
scas
sar
(bad)
pop
xchg
fadd
sub
add
loope
stos
test
ins
and
in
fwait
test
and
cmp
(bad)
xchg
stos
mov
adc
not
push
(bad)
js
loopne
add
push
(bad)
mov
jecxz
push
mov
xchg
(bad)
adc
and
in
mov
(bad)
cmp
test
div
mov
in
imul
xor
sub
xchg
aaa
imul
fistp
cmps
add
and
cmp
test
aaa
mov
data16
sub
mov
shl
in
retf
test
and
cmp
(bad)
xchg
sub
mov
sbb
pop
cmp
test
not
adc
jg
loope
aad
xchg
and
lea
push
mov
loope
loop
xchg
(bad)
arpl
cmps
mov
xchg
fadd
sub
retf
test
cwde
xchg
je
sub
cmps
and
or
push
push
mov
test
push
xchg
(bad)
pop
xchg
fdivr
lock
in
fisubr
int3
add
das
aad
test
test
push
and
add
xchg
mov
xchg
pop
(bad)
test
pop
xchg
(bad)
loop
scas
rcr
(bad)
mov
push
in
xor
test
dec
xchg
(bad)
pop
xchg
scas
rol
xchg
(bad)
pop
xchg
(bad)
dec
js
mov
ins
and
fwait
xchg
adc
jmp
inc
sub
and
pop
xchg
fadd
sub
add
(bad)
add
scas
in
mov
repz
cmps
(bad)
pop
xchg
fadd
enter
mov
xchg
fadd
sub
inc
popf
push
data16
and
sub
mov
xchg
(bad)
pop
xchg
fadd
sub
add
loope
stos
sbb
pop
push
mov
in
test
loope
aad
xchg
and
outs
and
jmp
cli
pop
xchg
fcom
and
mov
add
push
stc
loope
mov
pop
xchg
(bad)
arpl
in
rcl
test
or
(bad)
pop
xchg
scas
shl
(bad)
pop
xchg
(bad)
dec
js
mov
ins
and
fwait
xchg
adc
jmp
inc
sub
and
pop
xchg
fadd
sub
add
loope
stos
and
sub
mov
xchg
(bad)
pop
xchg
fadd
enter
mov
xchg
fadd
sub
inc
popf
push
data16
test
imul
test
and
and
in
ss
xchg
fadd
retf
jecxz
xchg
(bad)
pop
xchg
jae
cwde
xchg
je
sub
and
mov
test
pop
push
and
jmp
ss
xchg
fcomp
in
out
push
mov
xchg
(bad)
mov
xor
stos
pop
cmp
jecxz
xchg
(bad)
pop
jmp
pop
sub
fsubr
test
(bad)
sbb
push
and
in
shr
mov
fisttp
rcr
(bad)
loop
scas
rcr
(bad)
mov
loope
jg
loope
fld
jmp
test
mov
nop
fsubr
pop
xchg
(bad)
and
cmp
test
pop
xchg
fadd
dec
mov
out
retf
rcr
(bad)
loop
scas
rcr
(bad)
mov
loope
push
js
loopne
sbb
push
cmps
test
nop
xchg
jne
sbb
inc
push
mov
cmp
test
loope
test
pop
jecxz
repnz
xchg
fsubr
(bad)
fsubr
pop
xchg
(bad)
and
cmp
frstor
cmp
test
pop
jecxz
mov
xchg
fsubr
test
test
addr16
xchg
(bad)
sbb
push
fisubr
js
sti
fbld
cmps
mov
sub
add
xchg
fcom
fs
jo
(bad)
mul
pop
enter
inc
loope
cli
pop
xchg
(bad)
arpl
sahf
sbb
push
aam
test
je
(bad)
mul
sar
(bad)
mul
sar
test
mul
inc
mov
loope
(bad)
pop
xchg
(bad)
arpl
cmps
mov
xchg
fadd
sub
add
xchg
jl
sti
mov
dec
test
mov
push
and
or
jae
push
cmp
dec
scas
data16
inc
mov
sub
(bad)
(bad)
mov
mov
sub
and
in
fs
push
and
lods
daa
mov
and
loop
push
sbb
pop
pop
and
or
test
jl
pop
mov
sub
fdivr
mov
sub
retf
xchg
in
sbb
cmovl
push
mov
xchg
fsubr
sti
stc
test
push
or
push
mov
stos
daa
push
cmc
loope
pop
idiv
pushf
inc
mov
pop
pop
fcmovnu
add
push
dec
jns
sub
cmp
add
mov
sub
and
imul
mov
xchg
stos
xchg
push
jmp
je
add
xor
sub
sub
fcom
fsub
sub
arpl
shr
mov
sub
push
dec
aas
sub
push
and
leave
loope
and
test
push
mov
cmc
bound
push
neg
push
bound
push
fsub
push
mov
pop
sub
and
push
fcom
push
and
dec
cmps
(bad)
adc
and
lods
jo
pop
mov
push
xchg
adc
pop
jecxz
sahf
dec
sub
pusha
and
adc
outs
aas
sub
mov
and
leave
loope
arpl
cwde
push
push
push
ins
arpl
loope
and
lods
leave
iret
retf
loope
and
mul
dec
outs
fcom
mul
and
retf
push
mov
push
mov
fsub
push
ins
cmp
loope
xor
cmps
pop
jecxz
out
and
pop
sub
lahf
ret
cwde
stos
xchg
and
leave
loope
xor
loopne
bound
js
push
mov
xchg
aad
mov
sbb
addr16
xor
xchg
rcl
and
leave
loope
daa
mov
push
ins
cmp
loope
sub
cmps
pop
jecxz
push
push
push
and
leave
loope
sub
push
enter
push
and
push
ins
cmp
loope
and
cmps
pop
jecxz
pushw
push
and
leave
loope
and
popa
dec
cmp
scas
es
mov
xchg
fsubr
loope
and
cmps
pop
jecxz
cmp
push
sub
mov
push
mov
sub
push
mov
xchg
fsubr
loop
fcom
mul
sub
mov
push
loopne
sub
push
and
push
mov
push
push
jo
pop
mov
push
bound
test
push
movs
push
mov
push
mov
sub
push
movs
pusha
mov
mov
push
and
push
mov
push
mov
fsub
and
leave
loope
and
sbb
ret
test
leave
loope
and
xchg
test
mov
jo
pop
mov
push
mov
stos
cmps
out
and
lock
fisub
push
add
and
adc
aad
arpl
dec
cmps
(bad)
sbb
and
push
push
cdq
mov
xchg
pop
shl
popa
push
and
leave
loope
arpl
adc
and
loope
and
mul
dec
dec
fcom
mul
and
mov
push
loopne
cs
cmp
mov
push
loop
push
bound
cmps
xchg
mov
cs
adc
loope
mov
sub
adc
jecxz
mov
addr16
push
ror
popa
push
and
sub
in
push
xchg
mov
loope
push
mov
sbb
mov
mov
push
iret
fbld
xchg
adc
mov
pop
add
pop
mov
sub
aad
sub
pop
mov
adc
mov
adc
ins
sub
loopne
and
movs
sbb
mov
sahf
mov
cwde
fsub
push
mov
push
sub
and
sbb
mov
mov
clc
arpl
cmp
push
cs
lods
clc
arpl
push
mov
pop
xor
and
test
arpl
ins
das
(bad)
loopne
push
lea
cdq
pop
push
push
arpl
cmp
push
cs
lods
clc
arpl
push
adc
es
xor
and
cwde
mul
cdq
ins
das
(bad)
loopne
push
lea
push
loop
push
adc
and
sub
push
and
jge
imul
cmp
sub
mov
sub
popa
push
enter
mov
push
cdq
adc
aas
retf
xadd
cmc
cld
enter
inc
cdq
adc
aas
retf
pop
shr
mov
bound
push
jno
mov
nop
stos
nop
enter
mov
push
bound
and
dec
shr
nop
mul
enter
mov
push
popa
push
push
jmp
add
not
outs
pop
shr
mov
ins
push
loop
push
and
in
jae
mov
adc
mov
and
mov
mov
stos
mov
adc
loope
cmps
addr16
and
lds
xor
stos
mov
sub
aad
mov
and
mov
aad
mov
and
push
and
in
and
sub
(bad)
mov
push
aam
popa
push
addr16
and
arpl
cmp
scas
data16
push
fwait
push
sub
mov
and
lock
push
cmps
push
fadd
cmc
bound
stos
ret
push
push
dec
push
sub
push
dec
push
pop
sbb
and
sub
xchg
in
jae
mov
push
popa
push
retf
and
add
cmp
add
cmp
xchg
push
mov
aaa
inc
push
mov
push
retf
(bad)
(bad)
push
xchg
adc
in
mov
sub
jge
retf
loope
test
inc
and
mov
stos
jbe
inc
jmp
dec
addr16
add
in
stos
xchg
mov
pop
sub
stos
sbb
inc
mov
cmc
test
cmp
add
frstpm(287
nop
jae
in
jae
aad
dec
push
sub
xchg
fsub
test
ss
sub
fucom
pushf
enter
push
stos
sub
jmp
and
jmp
and
mov
xchg
fadd
mul
push
mov
add
sbb
fcom
fsub
xchg
xchg
sub
movs
push
push
test
xchg
addr16
adc
push
xchg
adc
push
xchg
adc
push
xchg
adc
push
and
jecxz
inc
sub
jl
fidiv
sub
in
sub
movs
ins
inc
jmp
sbb
push
xchg
inc
mov
loope
and
loope
aad
push
loopne
jle
xchg
aad
stos
lods
and
xor
fistp
retf
push
scas
fisub
push
popf
and
mov
sub
scas
push
movs
add
pop
std
push
fdivr
mov
lahf
adc
cmp
hlt
xor
fcmovnbe
push
in
inc
movs
imul
xchg
ins
stos
adc
inc
sub
nop
mov
mov
mov
addr16
adc
jecxz
and
sbb
and
addr16
imul
test
mov
sbb
mov
sbb
mov
sbb
retf
push
and
aad
stos
scas
and
and
imul
and
arpl
(bad)
pushf
outs
pop
and
js
add
jmp
push
sub
mov
push
and
vpand
and
aad
stos
scas
and
and
icebp
loope
aad
imul
sub
xchg
push
cmps
push
retf
push
mov
and
aad
xchg
test
mov
ja
movs
imul
xchg
loope
scas
sub
es
pop
jmp
push
sub
and
push
push
add
nop
imul
outs
and
jmp
push
push
imul
mov
sbb
retf
push
scas
fisub
push
pushf
push
push
pop
popf
xchg
and
sbb
imul
push
aad
retf
idiv
push
scas
add
and
movs
jge
push
mov
push
mov
or
xor
xchg
cmc
loope
aad
fs
not
and
aad
enter
enter
sbb
xlat
pop
and
mov
and
mov
sub
and
scas
push
mov
and
jmp
pop
pop
ins
push
loop
push
loop
mov
stc
arpl
mov
scas
mov
sahf
fsubr
adc
and
ins
cmp
dec
push
push
mov
sub
stos
mov
imul
jl
fidiv
daa
(bad)
loopne
sbb
pop
sbb
mov
sub
in
and
mov
call
mov
sub
and
cmc
pushf
stos
inc
mov
push
test
push
mov
xchg
xchg
and
loope
scas
data16
adc
sub
and
and
push
cmp
push
mov
loope
scas
outs
retf
push
and
push
jbe
popa
mov
test
loop
retf
and
aad
fs
sti
mov
fwait
or
xor
push
repz
pop
xchg
fsubr
pop
xchg
and
popf
push
and
and
imul
test
adc
and
aad
mov
and
mov
xchg
rcl
fsubr
sbb
and
jb
jmp
mov
test
push
in
sar
movs
or
push
dec
ss
xor
loope
(bad)
jle
fdivr
lods
push
lahf
adc
cmp
idiv
push
std
test
lock
bound
fidiv
cmp
lods
mov
adc
cmp
mov
loope
bnd
fsubr
loope
retf
mov
push
std
test
cmp
push
and
sar
push
in
sar
mov
shl
mov
xchg
fcom
pop
push
int3
test
and
xor
and
in
mov
loopne
fwait
int3
test
sub
cmp
and
xor
xchg
and
and
sbb
push
and
aaa
fisubr
jg
fsubr
mov
xchg
(bad)
jae
enter
xor
push
loopne
stos
rcl
test
enter
mov
push
aad
popa
mov
fist
xlat
arpl
push
mov
xchg
fsub
ja
cmps
sar
fadd
dec
aas
jp
mov
sub
aad
test
test
mov
xchg
and
(bad)
mov
js
fsubr
pop
jmp
pop
sub
inc
aad
call
test
and
adc
mov
cmp
mov
jmp
xchg
test
pop
push
(bad)
xlat
pop
xchg
and
sbb
js
and
push
fsubr
mov
xchg
and
pop
sbb
fsubr
dec
xchg
fcom
imul
test
mov
xchg
test
pop
xchg
fcom
fsub
pop
(bad)
mov
retf
addr16
push
and
fidiv
xchg
inc
push
inc
mov
mov
mov
xchg
(bad)
add
push
fsubr
jns
retf
mov
push
in
xchg
test
mov
scas
inc
dec
mov
test
pop
xchg
loop
mov
push
mov
imul
mov
cmps
mov
sbb
push
xchg
test
mov
xchg
fcom
xor
sbb
aas
and
in
or
jl
push
push
std
test
mov
mov
test
pop
xchg
test
cmp
aas
push
mov
xchg
(bad)
and
jecxz
ret
fcom
loope
(bad)
jle
(bad)
and
jecxz
cmp
fbld
add
(bad)
cmp
jecxz
mov
test
mov
xchg
fsubr
aam
test
and
loope
loop
xchg
fcom
mov
test
jg
fcom
stos
dec
push
mov
jecxz
loop
xchg
fcom
xor
test
cs
mov
mov
test
aam
popa
push
scas
fidiv
xchg
inc
push
fstp
test
pop
xchg
stos
pop
mov
mov
mov
xchg
test
mov
add
loopne
stos
ret
push
xchg
test
mov
push
cld
test
and
call
cmps
ins
mov
pushf
int3
test
popf
and
(bad)
frstor
pop
and
and
cmp
rcl
test
mov
xchg
scas
adc
mov
test
pop
xchg
and
or
ins
test
inc
mov
test
cwde
push
mov
push
aad
stos
cmps
and
push
inc
sub
sbb
bound
(bad)
cwde
push
out
test
mov
mov
test
adc
xchg
mov
test
popf
and
frstor
mov
data16
loope
mov
xchg
fdivr
scas
jecxz
mov
pop
inc
rcr
mov
xor
fwait
aad
mov
push
mov
pop
xchg
and
std
or
jecxz
inc
add
fsubr
pushf
push
and
push
pop
imul
cmp
push
mov
call
and
sbb
es
mov
das
enter
cmps
cmc
jle
fcomp
pop
xchg
frstor
and
fsubr
jg
fsubr
pop
adc
xchg
mov
mov
xchg
fcom
sub
test
dec
xchg
fcom
popa
and
sbb
inc
dec
mov
test
and
jmp
fcom
push
and
and
and
sar
push
in
sar
mov
shl
mov
xchg
fmul
(bad)
xor
xchg
cmc
loope
aad
sub
mul
jle
addr16
adc
mov
and
or
stos
adc
test
pop
mov
pop
push
jmp
push
and
sub
fcmovnu
fnsave
popa
push
sbb
push
mov
mov
popa
push
sbb
push
mov
orps
jecxz
scas
sub
fcmovnbe
in
and
mov
and
cmp
les
cmps
call
sub
in
and
fst
dec
scas
xchg
adc
push
sub
dec
int3
and
loop
pop
push
cmp
sti
pop
and
call
xchg
adc
mov
sub
push
mov
sub
sub
jecxz
push
xchg
mov
sub
and
pusha
push
sub
fst
bound
aad
sub
and
pusha
push
push
sub
xchg
aad
mov
push
aad
mov
loopne
imul
imul
and
ins
mov
adc
pop
push
mov
lahf
and
sbb
sbb
movs
call
stos
mov
addr16
xchg
fcom
mov
and
cmp
repnz
sub
in
and
fst
scas
sub
aam
push
sub
push
aad
push
test
xchg
adc
jge
imul
push
pop
pop
int
jle
sar
mov
sub
fcom
push
leave
add
push
fcom
and
aad
stos
xchg
dec
mov
push
data16
push
mov
xchg
and
dec
aaa
jge
imul
retf
pop
repnz
mov
or
mov
jg
(bad)
addr16
pop
not
and
mov
leave
and
lahf
(bad)
fbld
loope
(bad)
cmp
pop
mov
js
mov
sub
jbe
inc
cmp
inc
push
sbb
popa
push
mov
xchg
stos
xchg
retf
push
pop
sbb
push
add
cmp
xor
jecxz
pop
xlat
dec
ins
xor
add
and
push
retf
push
retf
push
mov
pusha
retf
cmps
repnz
(bad)
lods
push
das
aad
push
and
test
add
push
and
stos
mov
push
dec
repz
mov
push
pop
push
mov
pushf
stos
xchg
retf
sub
das
(bad)
cwde
enter
fcmovnu
in
fsub
push
cmp
and
iret
repnz
jb
mov
loope
fucom
xchg
jl
sti
mov
jb
repz
les
add
xchg
push
mov
call
daa
cmp
add
mov
sbb
and
scas
mov
addr16
add
out
push
mov
add
add
jno
mov
test
mov
scas
sub
fild
xchg
push
pop
test
push
sub
push
cmps
inc
sub
add
jno
mov
push
and
(bad)
jecxz
scas
sub
and
(bad)
xor
xchg
cmc
loope
pop
lock
sub
mov
push
push
and
add
cmp
add
mov
sbb
and
scas
stos
scas
mov
xchg
fsub
movs
pop
jecxz
xchg
add
cmp
add
add
jb
mov
xchg
jae
aad
fsub
lods
ds
inc
repnz
jae
mov
push
fcmovnu
addr16
jecxz
push
jmp
js
add
jecxz
pop
addr16
push
aad
ret
pop
mov
mov
push
scas
fisub
push
frstor
repz
push
pop
enter
mov
push
loope
(bad)
push
rcl
adc
mov
pop
clc
mov
mov
sub
mov
and
sub
fdivr
mov
push
or
sub
dec
jle
sub
mov
and
adc
data16
in
stos
adc
or
inc
jmp
inc
repz
std
pusha
test
lods
scas
data16
mov
sub
stos
adc
scas
sub
dec
ins
inc
sub
mov
stc
pop
fdivr
fwait
cmp
inc
sub
mov
and
mov
mov
push
xor
or
mov
mov
add
popa
sub
mov
push
(bad)
fbld
in
inc
imul
aad
and
lds
arpl
aad
push
sbb
push
mov
mov
pop
inc
mov
sub
pop
scas
fbld
sub
sti
mov
sub
sub
in
rcl
pusha
jbe
adc
test
int
and
int
and
fst
or
push
sti
fbld
pop
scas
fbld
sub
xchg
adc
xchg
adc
imul
aad
mov
mov
add
fst
mov
and
sub
xchg
push
sub
or
mov
mov
bound
mov
and
mov
outs
mov
mov
mov
stos
sbb
mov
addr16
push
cmps
jecxz
pop
scas
fbstp
mov
sub
bound
mov
sub
sub
cmc
pusha
sub
repnz
or
in
jl
sti
mov
mov
xor
and
push
arpl
shr
adc
clc
mov
xor
addr16
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
(bad)
xor
mov
jp
mov
xor
and
loop
mov
jo
popa
push
xor
adc
shl
mov
xor
(bad)
xor
mov
test
mov
xor
jecxz
xor
mov
js
mov
xor
mov
xor
mov
xor
retf
xchg
fcom
xor
inc
mov
clc
clc
mov
xor
es
popf
sub
(bad)
lea
push
push
mov
clc
mov
sub
daa
(bad)
xor
test
test
mov
xchg
jnp
(bad)
xor
mov
(bad)
cdq
mov
pop
mov
and
mov
(bad)
aad
mov
xor
inc
(bad)
xor
mov
mov
dec
fchs
push
and
loop
repz
push
loopne
xor
mov
xor
and
push
mov
xor
mov
xor
mov
pop
push
jno
xor
mov
int3
out
push
xor
cli
(bad)
xor
mov
popa
clc
mov
xor
(bad)
xor
mov
xor
mov
xor
jmp
xor
mov
push
clc
mov
xor
mov
xor
mov
xor
mov
xor
outs
pop
adc
clc
mov
xor
(bad)
xor
mov
push
clc
mov
xor
and
loop
mov
pop
push
jno
xor
mov
jo
popa
push
xor
cli
(bad)
xor
mov
popa
clc
mov
xor
(bad)
xor
mov
xor
mov
xor
jmp
xor
mov
push
clc
mov
xor
mov
xor
mov
xor
mov
xor
adc
addr16
clc
mov
xor
(bad)
xor
mov
push
clc
mov
xor
mov
xor
mov
dec
push
xor
sub
jne
sub
inc
(bad)
fs
pop
adc
aad
jmp
and
sahf
test
pop
loope
mov
lds
stos
(bad)
scas
data16
mov
push
rol
dec
daa
aam
pop
xor
fucom
xchg
stos
xchg
mov
call
and
mov
mov
rcr
sub
push
fcomp
pop
inc
repnz
push
xchg
stos
xchg
sub
stos
xchg
sub
pop
sar
xlat
js
mov
js
loopne
xchg
or
jbe
mov
push
sti
push
push
sub
mov
xchg
sbb
jmp
push
pop
loope
mov
sub
mov
mov
cmp
add
push
fadd
sub
data16
scas
fidiv
mov
daa
and
outs
scas
adc
stos
mov
daa
and
lods
pop
fucom
xchg
stos
xchg
xchg
stos
stos
add
push
(bad)
xchg
data16
scas
fbld
call
jp
test
imul
je
push
jae
pop
sub
(bad)
fbld
sub
pop
mov
test
loop
lods
test
stos
xchg
loope
fdivp
xchg
adc
in
popf
lods
sahf
adc
push
retf
push
jae
aad
retf
sub
(bad)
fs
stos
xchg
test
push
push
scas
ficomp
popa
(bad)
and
mov
(bad)
jmp
push
sahf
adc
loope
sbb
adc
pop
mov
xchg
push
mov
loop
stos
mov
push
and
sbb
(bad)
mov
dec
push
sub
popa
push
mov
sub
mov
mov
data16
dec
jg
mov
mov
xor
push
imul
stos
movs
leave
jmp
loop
and
aad
push
cdq
sub
imul
loop
stos
adc
xor
push
imul
push
in
test
jl
popa
push
xchg
js
adc
add
mov
adc
push
data16
shl
and
in
retf
mov
fnstsw
loope
pop
mov
hlt
fistp
cmp
mov
xor
mov
addr16
test
jb
rol
stos
imul
and
dec
push
enter
mov
test
adc
cmp
daa
in
push
sbb
pushf
enter
aam
sub
sti
push
in
test
jo
popa
push
xchg
js
adc
sahf
sbb
movs
sahf
adc
push
data16
sbb
cwde
enter
and
mov
mov
adc
pop
xor
in
daa
div
push
mov
push
cli
fistp
push
xchg
sbb
cmp
aaa
ret
inc
aad
push
sub
jmp
push
cld
push
popf
lods
sahf
adc
addr16
add
rcr
std
(bad)
jmp
push
popa
push
sub
push
lahf
(bad)
mov
int3
push
aad
mov
loope
xor
imul
sbb
adc
test
retf
push
retf
push
retf
push
mov
pusha
retf
fucomi
push
dec
push
sub
sbb
(bad)
mov
and
fsub
inc
cmp
in
and
push
xchg
test
or
xor
xchg
cmc
loope
xlat
dec
jl
push
mov
push
xor
jmp
and
movs
sbb
adc
ret
mov
sub
fist
rcr
data16
push
xor
sub
and
pop
ja
pushf
sub
in
sub
fsubr
dec
inc
retf
jnp
push
fsubr
jae
inc
inc
icebp
loope
mov
popa
xchg
cmp
push
repz
stos
mov
imul
test
sub
call
test
jmp
and
bound
in
movs
xchg
fsubr
pop
xchg
fsub
aam
sub
iret
stos
pop
xchg
stos
nop
sub
xchg
jae
xor
popa
push
enter
mov
xchg
fadd
dec
mov
and
add
cmp
add
mov
in
fsubr
enter
sub
xlat
stos
pop
xchg
stos
cmps
mov
sub
sub
sbb
sub
xchg
jae
mov
nop
sahf
adc
xchg
xchg
mov
pusha
and
push
pop
fst
stos
pop
xchg
retf
movntq
test
mov
sub
(bad)
cmp
add
push
rcr
in
lods
pop
xchg
fadd
enter
mov
xchg
fadd
enter
and
fcom
fsub
enter
mov
push
fsubr
mov
push
ret
add
loop
dec
push
mov
push
ja
push
xor
jge
imul
push
inc
pop
repnz
push
xchg
adc
jmp
and
lds
frstpm(287
xchg
jae
mov
push
dec
push
pop
sbb
retf
xchg
jmp
pop
fcmovnu
addr16
aad
xchg
arpl
pushf
imul
scas
pop
sbb
dec
push
pop
sbb
retf
fwait
jmp
xchg
retf
imul
push
loopne
sub
arpl
test
loope
stos
sub
lea
mov
xchg
push
inc
pop
sbb
fsub
test
adc
push
jmp
bnd
sub
and
add
frstpm(287
jl
test
lods
xchg
push
pop
dec
outs
and
jmp
dec
push
jb
not
rcr
mov
push
sub
sub
dec
push
mov
add
cmp
xchg
push
pop
pop
sbb
and
test
push
xchg
test
popa
pop
sbb
fsub
mov
js
and
pop
mov
fsub
pop
add
mov
jns
scas
mov
sbb
and
test
or
jbe
inc
jmp
inc
idiv
test
mov
dec
(bad)
loope
dec
pop
dec
and
stc
loope
push
pop
loope
nop
cmps
push
stos
xchg
sub
jno
push
mov
fsub
test
mov
xchg
aam
adc
mov
add
test
pop
sub
aam
fsub
pop
add
push
fsub
pop
cmp
push
enter
aam
sub
jge
arpl
jne
pop
add
enter
pop
loope
aad
xchg
hlt
adc
push
addr16
mov
push
mov
push
add
scas
aad
adc
mov
push
dec
push
enter
mov
push
and
addr16
push
mov
pop
jecxz
mov
push
stos
ja
and
sub
in
aad
and
(bad)
mov
test
mov
ins
scas
inc
ror
xchg
cmc
loope
pop
repz
aad
cwde
pop
cdq
jp
xlat
arpl
push
mov
push
mov
sub
das
fistp
loope
sub
push
inc
dec
outs
imul
out
sub
jbe
data16
and
nop
mov
fistp
sti
fbld
mov
xchg
and
mov
dec
sub
sub
mov
inc
pushw
js
rcr
xchg
stos
xchg
sub
stos
cmps
mov
and
mov
imul
and
fs
aad
retf
jae
push
rcr
xchg
stos
xchg
sub
cs
sub
js
rcr
xchg
stos
xchg
push
js
arpl
aaa
add
test
data16
cld
pop
inc
outs
and
and
mov
scas
repnz
scas
sub
retf
dec
in
and
in
test
push
loope
jg
loope
cmps
xchg
sahf
enter
daa
and
sub
ins
adc
push
sbb
and
(bad)
xor
fst
sub
adc
sbb
pop
sar
push
mov
loope
aad
or
pop
sar
push
mov
lods
ins
mov
sub
in
mul
pop
mov
loop
je
mov
and
lods
aaa
xor
fstp
sub
push
stc
sub
data16
sub
ror
(bad)
xor
xchg
cmc
loope
out
in
push
popa
push
mov
ret
mov
sti
push
js
loopne
add
push
fisubr
pop
xchg
fadd
pop
sbb
fsubr
jmpw
jmp
addr16
sbb
jmp
xchg
(bad)
dec
pop
pusha
push
mov
arpl
push
pop
sbb
and
in
sti
test
mov
nop
fsubr
pop
xchg
(bad)
sbb
add
fs
imul
call
push
dec
mov
push
mov
xchg
fsubr
jge
and
mov
test
test
daa
push
mov
push
and
mov
test
test
cmps
sahf
pop
xchg
(bad)
popa
jmp
test
mov
add
fnsave
imul
test
enter
mov
outs
gs
mov
es
xchg
xchg
stos
pop
xchg
fdivr
and
push
sbb
push
mov
xchg
sub
push
(bad)
mov
jecxz
push
mov
push
fst
dec
retf
das
in
and
ret
push
fiadd
aad
test
sahf
mov
test
sti
jg
loope
mov
sbb
push
mov
xchg
sub
push
(bad)
mov
pop
ret
xchg
xchg
stos
pop
xchg
fdivr
and
push
sbb
push
mov
xchg
sub
push
(bad)
mov
fwait
addr16
mov
push
fst
dec
retf
mov
push
and
lahf
fiadd
aad
test
sahf
mov
test
push
jb
jp
adc
jecxz
stos
pop
xchg
fadd
enter
mov
push
stos
mov
repz
mov
push
fst
jnp
cmps
inc
sub
test
pop
sbb
test
sub
pop
xchg
(bad)
mov
or
mov
push
fst
jnp
cmps
inc
sub
test
pop
and
test
and
pop
xchg
(bad)
mov
stos
and
jae
push
and
lahf
fcmovbe
pop
ins
pop
jne
jnp
push
mov
push
test
pop
xchg
(bad)
loop
je
mov
and
lods
xor
sbb
aam
repnz
mov
push
fisubr
mov
xchg
fisubr
sub
fild
jo
popa
push
lock
mov
adc
mov
xchg
mov
mov
sbb
and
icebp
aam
repnz
stos
pop
xchg
fadd
enter
mov
push
fwait
sbb
and
pop
xchg
(bad)
arpl
call
xchg
mov
ds
mov
pop
fstp
test
jecxz
and
fs
retf
pop
jecxz
and
stos
push
fcmovbe
pop
ins
pop
inc
enter
mov
xchg
fdivr
and
push
sbb
push
mov
xchg
sub
push
(bad)
mov
sbb
push
and
pop
xchg
(bad)
loop
jae
pop
sub
push
and
push
sbb
push
mov
xchg
sub
push
(bad)
mov
fbld
mov
push
fst
jnp
cmps
inc
sub
test
pop
xor
mov
xor
mov
xchg
mov
mov
sbb
and
icebp
aam
repnz
stos
pop
xchg
fadd
enter
mov
push
mov
rcl
imul
test
in
and
in
and
xchg
and
mov
mov
test
sbb
fisubr
and
imul
and
sbb
sbb
imul
push
push
sbb
push
mov
jmp
aaa
repnz
out
mov
daa
iret
xchg
out
lahf
rcl
xchg
fisubr
sar
jmp
push
jns
loop
scas
jmp
push
std
pop
mov
xchg
cmps
jmp
fsubr
mov
pushf
fsubr
sub
xchg
jae
and
cmp
inc
sub
push
dec
iret
bound
jmp
dec
and
retf
xlat
loope
and
stos
push
fcmovbe
pop
ins
pop
inc
enter
mov
xchg
fdivr
and
push
sbb
push
mov
xchg
sub
push
(bad)
mov
pop
bound
shr
push
mov
jmp
push
fnstsw
cmps
inc
sub
test
pop
xor
push
cmps
xchg
pop
xchg
(bad)
mov
pushf
fsubr
pop
xchg
fsubr
test
stos
pop
addr16
xchg
(bad)
and
jmp
and
sub
fsubr
mov
push
cmps
adc
push
jp
mov
push
cmps
scas
pop
xchg
fcomp
and
push
mov
xchg
(bad)
and
xchg
push
inc
enter
mov
xchg
fadd
dec
iret
arpl
jmp
pop
sub
xchg
mov
push
push
inc
fistp
loope
push
js
loopne
and
cmp
and
in
push
push
xchg
fisubr
mov
xchg
fisubr
pop
xchg
mov
cmps
pop
xchg
fsubr
pop
xchg
push
dec
pop
fst
test
pop
xchg
(bad)
loop
jae
xchg
sub
push
and
push
sbb
push
mov
xchg
sub
push
(bad)
mov
stos
add
mov
push
and
lahf
fcmovbe
pop
ins
pop
inc
enter
mov
xchg
fdivr
and
push
sbb
push
mov
xchg
sub
push
(bad)
mov
fst
test
pushf
push
fsubr
inc
loope
jmp
cmps
push
mov
fstp
test
test
fsubr
and
popa
jecxz
and
add
mov
push
(bad)
mov
add
push
and
stos
push
fcmovbe
pop
ins
pop
inc
enter
mov
xchg
fdivr
and
push
sbb
push
mov
xchg
sub
push
(bad)
mov
xchg
sbb
push
mov
jmp
push
fnstsw
cmps
inc
sub
test
pop
cmp
mov
add
mov
push
(bad)
mov
mov
mov
stos
retf
jmp
push
and
lahf
fcmovbe
pop
ins
pop
jne
ret
sbb
push
mov
cmp
test
loop
je
or
push
and
push
sbb
push
mov
xchg
sub
push
(bad)
mov
or
push
mov
jmp
push
fnstsw
popf
inc
sub
test
pop
and
test
sbb
pop
mov
xchg
mov
ds
mov
pop
fstp
test
sahf
push
mov
push
dec
jnp
push
mov
push
fst
dec
retf
push
sahf
push
and
lahf
fiadd
aad
test
sahf
mov
test
or
pop
xchg
(bad)
mov
mov
sub
push
fst
jnp
cmps
inc
sub
test
pop
or
mov
shr
mov
in
jecxz
pop
xchg
stos
xchg
enter
mov
xchg
fdivr
and
push
sbb
push
mov
xchg
sub
push
(bad)
mov
jb
adc
xchg
xchg
stos
pop
xchg
fdivr
and
push
push
mov
test
popf
push
and
lahf
fcmovbe
pop
ins
pop
inc
enter
mov
xchg
fdivr
and
stos
pop
cmp
test
loop
jae
mov
lods
xor
sbb
push
mov
xchg
sub
push
(bad)
mov
push
xchg
stos
pop
xchg
fdivr
and
push
mov
push
and
push
xchg
mov
ds
mov
pop
fstp
test
pushf
push
retf
iret
pushf
push
and
lahf
fcmovu
ja
in
xchg
add
aad
test
dec
mov
push
test
dec
push
push
and
push
xchg
mov
ds
mov
pop
fstp
test
pushf
push
fwait
pop
sahf
push
cmps
out
pop
xchg
(bad)
arpl
std
mov
push
(bad)
mov
dec
pop
push
mov
push
fst
jnp
cmps
inc
sub
test
pop
and
push
and
push
and
push
xchg
mov
mov
sbb
and
icebp
aam
repnz
stos
pop
xchg
fadd
enter
mov
push
dec
xchg
and
pop
sbb
mov
add
cmp
add
cmp
add
mov
sbb
and
in
retf
test
mov
fstp
test
cwde
push
sahf
mov
lock
xchg
stos
pop
xchg
fsubr
pop
xor
mov
xchg
fisubr
mov
xchg
fdivr
and
sbb
jecxz
mov
(bad)
xor
xchg
cmc
loope
xlat
dec
ins
and
aas
pushf
jns
jmp
fcmovnu
scas
test
sbb
pop
pop
fcmovnu
addr16
adc
dec
fnstsw
and
and
cmp
jnp
push
movs
mov
push
fsubr
mov
xchg
(bad)
fs
adc
test
and
add
ds
mov
push
enter
mov
call
fdivr
jbe
popa
push
enter
mov
push
mov
test
pop
pop
fcmovnu
addr16
jmp
hlt
and
cmp
pop
popa
dec
inc
mov
(bad)
pop
xchg
(bad)
addr16
retf
fcom
sub
sub
pusha
jmp
push
sub
mov
pop
xchg
test
test
daa
push
mov
in
scas
stos
pop
xchg
stos
scas
push
(bad)
xchg
fsubr
sub
in
test
add
sub
test
mov
xchg
fsubr
pop
xchg
retf
iret
xchg
push
test
aam
fsubr
sub
loope
into
pop
xchg
(bad)
pop
pop
fcmovnu
addr16
and
sbb
test
pop
xchg
fdivr
sub
dec
stos
pop
xchg
fsub
cmp
adc
mov
in
stos
pop
xchg
scas
add
xchg
fsubr
sub
loope
ficomp
(bad)
addr16
mov
push
and
and
jmp
and
add
(bad)
cmp
and
pop
and
adc
mov
(bad)
test
jle
and
adc
popa
push
enter
and
mov
and
push
inc
push
mov
or
push
dec
imul
pop
loope
addr16
loope
movs
imul
test
xchg
jae
and
cmp
lahf
xchg
push
fisubr
pop
xchg
fsubr
pop
xchg
xchg
ficomp
fsubr
pop
xchg
xchg
neg
fadd
sub
xchg
jae
mov
add
and
popa
jecxz
lods
ds
repz
push
rcl
push
and
and
cmp
inc
cdq
push
es
mov
xchg
fadd
sub
xchg
jae
pop
push
and
fmul
test
pop
xchg
(bad)
push
repnz
push
mov
in
out
pop
xchg
fadd
dec
pop
sbb
jmp
dec
and
in
sbb
and
in
(bad)
test
xchg
and
push
(bad)
sbb
push
cmps
mov
mov
loope
(bad)
cmp
call
xchg
and
cmp
retf
jbe
push
scas
rcr
test
clc
pop
and
test
rol
and
fisttp
dec
xchg
push
and
(bad)
xchg
fsubr
xor
fsubr
mov
push
fsubr
mov
scas
cmps
cmp
dec
inc
stos
scas
mov
fild
aad
popa
push
dec
adc
push
mov
sbb
and
stos
pop
push
mov
xchg
fcom
in
dec
stos
pop
xchg
pop
push
shl
dec
push
fsubr
mov
and
mov
pop
xchg
and
stos
add
cmps
mov
push
and
in
fild
dec
addr16
push
mov
mov
push
sub
xchg
jae
xor
lods
das
imul
push
aad
mov
test
add
push
and
outs
mov
test
pop
xchg
fadd
dec
rcl
push
mov
push
adc
add
test
pop
or
mov
xchg
fsubr
mov
xchg
fdivr
inc
loope
ds
xchg
(bad)
addr16
jge
imul
jo
mul
jle
pop
xor
fist
loope
test
xchg
push
stos
add
in
in
push
retf
jae
push
stos
add
inc
dec
jg
push
mov
cmp
pop
push
mov
cmp
fstp
cmp
xchg
add
repz
pop
cmp
or
retf
jae
push
lea
push
rcr
addr16
jecxz
fnsave
xor
stos
adc
cmp
in
dec
lock
push
lock
lods
xchg
push
pop
sub
retf
retf
xchg
push
xor
xchg
push
pop
scas
fbld
sub
cmp
rcl
js
loope
xchg
scas
adc
xchg
scas
adc
pop
and
addr16
adc
addr16
movs
addr16
add
pop
pop
cmp
and
dec
daa
adc
rcr
and
sub
data16
lock
add
and
push
mov
xor
push
jne
mov
sub
lods
addr16
scas
push
(bad)
loope
add
adc
jecxz
scas
push
js
arpl
cmp
mov
push
jle
pop
enter
loope
push
pop
loope
mov
inc
xchg
(bad)
scas
cmps
jmp
and
and
cmp
test
loop
retf
dec
nop
push
jecxz
and
and
jmp
and
pop
xchg
retf
mov
fs
sub
push
sbb
and
nop
or
loopne
inc
xchg
and
sub
mov
xchg
fadd
sub
xchg
jae
dec
cmps
or
mov
loope
addr16
loope
add
pop
xchg
retf
ret
xchg
push
sub
push
sbb
and
xchg
loopne
das
mov
cmps
loope
push
pop
loope
or
xor
xchg
cmc
loope
out
mov
or
cmp
sub
cmc
imul
push
stos
nop
repz
push
mov
push
jmp
loopne
pop
push
mov
add
fistp
fld
sets
sub
dec
add
and
mov
cwde
aam
sub
xlat
mov
test
push
mov
test
inc
sub
(bad)
cmp
sbb
retf
jnp
push
and
lahf
fcmovbe
pop
ins
pop
inc
enter
mov
xchg
fadd
dec
and
push
mov
outs
pop
push
mov
push
fst
inc
retf
mov
ret
push
fiadd
xchg
je
clc
mov
push
sub
xchg
je
dec
pop
and
lods
xor
sbb
push
mov
xchg
sub
scas
shl
or
mov
jmp
and
xchg
mov
sub
xchg
jae
jo
and
lods
sub
sbb
push
mov
xchg
sub
scas
shl
or
test
inc
mov
push
mov
mov
sbb
and
icebp
aam
repnz
push
inc
xchg
fadd
enter
mov
xchg
fadd
dec
and
push
mov
sbb
popa
push
sub
xchg
jae
or
jae
mov
push
and
fbld
and
push
and
push
xchg
mov
ds
mov
sub
xchg
jae
sbb
and
push
sub
xchg
jae
lods
pop
and
lods
sub
sbb
push
mov
xchg
sub
scas
shl
add
mov
add
mov
push
fsubr
mov
loope
push
push
loope
mov
sbb
push
mov
xchg
sub
push
and
push
xchg
jno
sbb
aas
dec
push
jle
and
sbb
aas
retf
cmp
js
jg
sub
(bad)
cmp
sub
pusha
retf
outs
xchg
push
and
lahf
fcmovbe
pop
ins
pop
inc
enter
mov
xchg
fadd
dec
aas
adc
jmp
pop
sbb
push
mov
cwde
cld
test
jmp
popa
push
sub
xchg
jae
xchg
pop
and
lods
sub
sbb
push
mov
xchg
sub
scas
shl
sub
test
cmp
mov
sbb
mov
jmp
and
sbb
push
mov
xchg
sub
scas
shl
sub
mov
xchg
push
pop
sub
xchg
jae
mov
and
sub
and
lods
xor
sbb
push
mov
xchg
sub
scas
shl
sub
test
and
mov
adc
push
adc
push
and
push
xchg
mov
ds
mov
sub
xchg
jae
lock
and
lods
sub
outs
imul
ror
test
nop
push
and
lahf
fcmovu
ja
in
xchg
add
xchg
je
mov
popa
push
sub
xchg
je
dec
pop
and
lods
xor
sbb
push
mov
xchg
sub
scas
shl
or
mov
add
mov
push
fsubr
mov
loope
mov
jg
(bad)
data16
mov
xchg
mov
ds
mov
sub
xchg
jae
add
and
lods
sub
sbb
push
mov
xchg
sub
push
and
push
xchg
jno
sbb
aas
dec
push
jle
and
sbb
aas
retf
adc
js
xchg
and
and
cmp
add
pusha
dec
push
retf
push
retf
push
enter
loopne
retf
xchg
cld
test
fisubr
(bad)
cmp
add
in
scas
jg
fadd
lock
push
inc
xchg
fadd
pop
fstp
mov
retf
jnp
push
cld
test
mov
and
mov
stos
jbe
inc
jmp
and
mov
jnp
push
mov
xchg
fcom
sahf
mov
push
sub
orps
cmp
push
sub
mov
pop
xchg
stos
scas
push
(bad)
xchg
fsubr
mov
push
dec
jmp
push
mov
xchg
fwait
iret
enter
inc
loope
(bad)
pop
xchg
(bad)
add
mov
push
and
and
loope
mov
pop
xchg
(bad)
add
cmp
in
repnz
xchg
fadd
dec
xchg
or
push
mov
xchg
fsubr
loop
dec
loop
sub
mov
sbb
out
test
push
push
enter
mov
xchg
fadd
sub
xchg
jae
aam
and
nop
adc
add
cmps
loop
xchg
fadd
dec
arpl
test
test
push
push
enter
mov
xchg
fadd
dec
mov
loop
xchg
fadd
sub
xchg
jae
jo
and
loopne
test
pop
xchg
(bad)
push
dec
adc
add
mov
xchg
fadd
dec
daa
or
dec
sbb
add
lahf
(bad)
fbld
loope
xchg
and
sub
push
mov
xchg
fcom
push
fisubr
(bad)
scas
cmps
mov
mov
push
push
lods
pop
xchg
stos
xchg
sub
xchg
jae
cmp
cmps
repnz
xchg
fadd
sub
xchg
jae
mov
add
cmp
add
(bad)
cmp
dec
dec
or
popa
jecxz
and
and
xchg
xchg
(bad)
pop
xchg
fdivr
sub
fsub
add
ret
add
loop
scas
rcr
test
mov
scas
cmps
and
fcom
pop
stos
scas
push
(bad)
xchg
fsubr
pop
xchg
fsubr
loop
retf
sbb
popa
jecxz
mov
push
and
and
imul
xchg
test
imul
push
mov
push
and
and
cmp
push
inc
and
xchg
add
add
adc
in
(bad)
pop
xchg
fadd
dec
sbb
pop
popf
xchg
fcom
cmps
and
fsubr
fstp
sub
cmps
jmp
push
xchg
ret
(bad)
and
cmp
daa
mov
(bad)
cmp
jecxz
xchg
fsubr
pop
loope
out
fstp
and
(bad)
xchg
fsubr
xor
fsubr
mov
push
and
enter
mov
push
sub
jle
and
sub
mov
mov
mov
cld
fisubr
pop
xchg
mov
frstor
jmp
gs
xor
fsubr
pop
jmp
pop
and
jne
add
addr16
mov
push
mov
nop
stos
xchg
sub
xchg
jae
jl
and
push
fsubr
mov
loope
and
(bad)
addr16
xchg
repnz
xchg
fdivr
sub
mov
or
mov
stos
mov
test
add
test
pop
and
adc
and
or
push
push
pop
dec
aaa
or
jecxz
scas
sub
add
xor
push
sub
stos
xchg
repz
arpl
push
or
xchg
push
pop
sub
add
mov
dec
and
nop
or
pop
cmp
test
or
push
retf
jae
push
fadd
dec
mov
xor
mov
sub
data16
lock
add
pop
add
mov
popa
stos
scas
push
(bad)
loope
or
xor
xchg
cmc
loope
out
mov
repz
jmp
sub
dec
push
pop
sbb
and
scas
sub
dec
sub
xchg
enter
mov
xchg
fadd
test
push
pop
sbb
shr
adc
push
test
movs
loope
mov
dec
ror
push
mov
aaa
jge
arpl
aaa
add
cdq
pop
stos
fabs
(bad)
sub
and
add
xchg
scas
fbld
lock
adc
retf
or
jae
mov
push
popa
push
dec
pop
or
addr16
adc
jecxz
lock
mov
push
retf
dec
jo
adc
dec
push
enter
mov
sub
mov
and
inc
test
in
mov
or
jbe
inc
cmp
not
fwait
push
retf
cmps
push
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
push
retf
push
retf
adc
add
add
pop
fsub
leave
popa
push
dec
retf
or
add
add
pop
fsub
cmc
bound
sti
or
loope
mov
sub
adc
mov
push
adc
mov
push
adc
mov
push
adc
mov
push
and
imul
sub
mov
retf
cmp
xchg
push
mov
and
retf
cmp
xchg
push
and
sub
mov
and
dec
push
test
mov
jno
push
adc
mov
push
adc
mov
push
adc
mov
push
je
push
sbb
js
nop
adc
pop
pop
retf
retf
loope
retf
or
std
arpl
and
mov
push
mov
outs
xchg
cmc
pushf
mul
enter
mov
call
or
stos
pop
pop
bswap
loope
retf
inc
xchg
cmc
test
bound
and
mov
push
stos
xchg
retf
arpl
add
(bad)
loopne
dec
mov
pop
xchg
push
dec
xor
dec
and
xchg
fsub
mul
dec
scas
add
mul
push
and
xchg
push
jle
sub
mov
retf
arpl
retf
add
iret
loopne
dec
mov
pop
xchg
push
jbe
sub
mov
retf
arpl
popa
push
dec
pop
add
leave
loope
dec
mov
pop
xchg
push
rol
sub
mov
jmp
iret
dec
idiv
pushf
in
(bad)
xor
fistp
fcmovnu
addr16
mov
push
test
enter
mov
xchg
(bad)
fs
pop
aas
sub
cmp
cmp
ret
xchg
xlat
push
repz
push
mov
ds
fild
xchg
push
bound
sub
cmp
ds
pop
inc
data16
mov
dec
push
enter
lock
mov
push
and
mov
xor
mul
push
pop
leave
loope
dec
push
lock
fucom
nop
or
push
jmp
xor
add
cmp
add
push
and
dec
xchg
jge
and
jp
popa
push
retf
jae
push
bound
xchg
and
pop
pop
leave
loope
dec
push
pop
pop
addr16
push
and
in
or
push
jmp
xor
add
mov
sub
cmp
inc
sub
ds
popa
push
retf
mov
push
popa
push
retf
push
retf
push
retf
push
retf
push
retf
jmp
and
add
mov
sub
adc
mov
push
pop
leave
loope
dec
push
pop
pop
addr16
push
and
add
mov
and
cmp
jge
and
jp
popa
push
retf
and
leave
popa
push
retf
arpl
fsub
enter
js
jne
push
or
mov
jo
adc
add
mov
push
push
push
mov
push
stos
adc
cmp
xchg
push
bound
sub
cmp
xchg
push
adc
sub
cmp
add
push
mov
push
and
cmp
jl
and
jp
popa
push
retf
stos
test
cmc
lods
mul
retf
arpl
fsub
enter
js
mov
push
dec
push
mov
mov
push
enter
mov
dec
and
jl
pop
mov
pop
mov
test
mov
add
inc
enter
lock
mov
push
and
sub
cmp
adc
add
loop
dec
push
enter
mov
push
popa
push
retf
adc
xchg
cmp
mov
pop
pop
leave
loope
dec
push
pop
pop
inc
mul
push
and
add
sub
imul
lock
mov
push
and
add
add
and
xchg
push
bound
sub
cmp
xchg
push
add
and
mov
push
retf
cld
mov
push
and
lock
mov
push
and
or
mov
sub
mov
retf
arpl
fsub
enter
js
ins
enter
mov
push
jae
retf
mov
push
enter
mov
dec
and
clc
adc
(bad)
sub
pop
leave
loope
dec
push
pop
pop
addr16
push
and
add
push
mov
push
and
enter
mov
push
add
retf
push
mul
push
pop
leave
loope
dec
push
pop
pop
addr16
push
dec
dec
mov
push
and
add
loop
dec
mov
and
or
cmp
and
xchg
push
bound
sub
cmp
xchg
push
adc
sub
cmp
add
push
mov
push
and
cmp
jl
and
jp
popa
push
retf
mov
push
cmc
bound
push
bound
push
bound
js
add
and
push
mov
push
jae
cmps
mov
push
enter
mov
dec
and
cld
adc
and
mov
or
mov
push
enter
mov
push
ret
add
mov
push
and
add
adc
and
mov
or
and
push
enter
mov
push
adc
push
and
add
mov
push
push
bound
sub
cmp
xchg
push
add
and
add
ds
and
jl
push
mov
mov
enter
mov
push
and
mov
bound
push
bound
push
popa
push
retf
xor
popf
and
add
mov
mov
adc
add
mov
push
and
add
pop
mov
pop
mov
test
mov
push
and
add
push
enter
mov
push
add
retf
mov
and
(bad)
pop
imul
scas
pop
xchg
jl
imul
pushf
jg
jmp
xlat
addr16
push
mov
push
popa
mov
enter
mov
xchg
(bad)
fs
pop
aas
sub
out
pushf
and
(bad)
loope
cmp
xchg
push
pop
aas
sub
mov
sub
cmp
mov
inc
and
push
bound
push
or
push
cmp
cmps
lock
cmp
add
push
and
dec
mov
and
inc
mov
push
enter
mov
push
and
xchg
push
bound
sub
cmp
cmp
sub
mov
inc
retf
push
mov
mov
push
enter
mov
dec
and
ins
mov
test
mov
sub
pop
mov
push
data16
and
dec
inc
enter
lock
mov
push
and
adc
push
and
add
cmp
add
cmp
add
cmp
add
cmp
add
push
retf
pop
retf
jecxz
push
in
mov
ds
pop
pop
daa
leave
loope
retf
pop
sub
mov
sub
cmp
xchg
push
add
and
add
mov
aaa
mov
mov
adc
add
push
dec
imul
mov
push
stos
xchg
enter
mov
imul
retf
loope
retf
jmp
push
popa
push
retf
adc
xchg
cmp
mov
retf
xchg
sbb
and
out
imul
retf
loope
retf
fistp
add
cmp
add
mov
cmc
bound
sbb
mov
pop
mov
test
mov
push
dec
sub
imul
lock
mov
push
and
add
push
and
pop
pop
fcmovnu
add
test
mov
or
push
mov
jl
clc
mov
push
ret
add
push
dec
dec
cmp
mov
push
fdivr
xchg
push
bound
sub
cmp
xchg
push
adc
sub
cmp
add
cmp
jl
push
mov
cmp
jl
and
jp
popa
push
retf
mov
aam
popa
push
and
dec
push
pop
pop
pop
leave
loope
dec
push
pop
pop
addr16
push
dec
shl
push
and
add
loop
dec
mov
and
or
cmp
and
xchg
push
bound
sub
cmp
xchg
push
adc
sub
cmp
add
push
mov
push
and
cmp
jl
and
jp
popa
push
retf
daa
mov
cmc
bound
push
bound
push
bound
js
add
shl
push
mov
push
jae
cmps
mov
push
enter
mov
jbe
push
add
adc
and
mov
sub
pop
mov
imul
push
mov
push
clc
adc
add
mov
push
ds
mov
push
stos
xchg
retf
arpl
fsub
enter
js
stos
mov
push
dec
push
mov
mov
push
enter
mov
jne
push
add
adc
and
mov
or
and
push
retf
inc
enter
lock
push
jl
and
mov
out
ds
mov
push
pop
leave
loope
dec
push
pop
pop
inc
mul
push
dec
adc
jl
push
mov
mov
enter
mov
push
and
mov
bound
lahf
sub
mov
pop
pop
leave
loope
dec
push
pop
pop
inc
mul
push
dec
or
jl
push
mov
mov
enter
mov
push
and
xor
push
retf
arpl
fsub
enter
jg
int
push
and
jbe
push
mov
mov
push
enter
mov
je
push
add
adc
jecxz
pop
xchg
retf
mov
xlat
addr16
push
mov
cmp
cmp
mov
inc
out
hlt
ins
and
(bad)
loope
cmp
add
push
retf
push
enter
and
cmp
loope
aad
xchg
sub
cmp
push
retf
mov
sub
and
and
mov
push
and
in
cmps
lock
mov
lock
push
inc
enter
mov
call
(bad)
fs
scas
push
(bad)
loope
outs
std
xchg
push
pop
retf
and
(bad)
loop
dec
add
and
test
pop
mov
xchg
mov
scas
sub
mov
dec
retf
push
sub
sbb
popa
push
enter
and
mov
or
inc
jmp
and
jbe
stos
cmps
xchg
cwde
stos
nop
and
dec
hlt
adc
and
and
cmp
aas
mov
jne
push
sbb
push
mov
mov
pop
test
sbb
in
and
loopne
and
adc
dec
mov
sub
(bad)
cmp
jg
push
pop
push
mov
sbb
popa
push
sub
xchg
jae
lods
jo
push
and
dec
inc
adc
and
and
cmp
mov
fst
adc
loop
scas
shl
cmp
mov
outs
push
inc
enter
mov
xchg
fadd
dec
scas
xor
mov
push
and
mov
inc
out
push
fsubr
mov
pusha
push
inc
enter
mov
xchg
fadd
dec
sti
xor
mov
sbb
popa
push
sub
xchg
jae
fdivr
push
and
dec
mov
sub
(bad)
cmp
xor
lahf
(bad)
xchg
(bad)
fst
and
loop
scas
shl
and
push
push
inc
enter
mov
xchg
fadd
dec
inc
xor
mov
sbb
popa
push
sub
xchg
jae
mov
and
adc
dec
add
sub
(bad)
cmp
stos
mov
and
add
ds
popa
push
enter
mov
xchg
fadd
enter
mov
xchg
dec
ins
jnp
and
push
fldenv
enter
mov
xchg
dec
xchg
xchg
mov
and
fbld
adc
imul
je
aad
pushf
sbb
in
out
mov
stos
adc
fist
retf
ret
mov
outs
and
repz
pop
xchg
mov
and
or
push
mov
stos
daa
push
cmc
loope
xlat
dec
inc
sub
cmp
push
cmp
stc
into
loope
jg
loope
fist
rcr
data16
loop
scas
ror
fsubr
mov
push
and
lahf
fcmovu
xor
call
fcom
jns
cli
adc
and
and
cmp
pop
mov
and
cld
push
stos
rol
test
push
nop
fsubr
data16
sub
xchg
jae
inc
jge
push
and
shr
mov
(bad)
in
push
fsubr
mov
nop
fsubr
mov
in
into
mov
adc
push
and
shr
mov
cmp
loop
scas
ror
fsubr
mov
mov
test
push
nop
fsubr
xchg
(bad)
sub
xchg
jae
sar
push
and
shr
mov
ins
in
push
fsubr
mov
nop
fsubr
int3
(bad)
sub
xchg
jae
pushf
jge
push
sub
jmp
and
shr
mov
test
loop
scas
ror
fsubr
mov
nop
fsubr
or
popa
push
sub
xchg
jae
pop
jl
push
and
shr
mov
jmp
lahf
fsubr
mov
nop
fsubr
dec
(bad)
sub
xchg
jae
push
scas
cmc
sub
push
nop
fsubr
mov
in
into
mov
or
and
shr
mov
add
loop
scas
ror
fsubr
mov
sub
(bad)
cmp
push
dec
xchg
(bad)
push
cmp
push
mov
push
and
and
test
pop
xchg
fsub
mov
test
mov
pop
rcr
jmpw
stos
push
and
ror
popa
push
dec
call
out
sub
iret
scas
pop
xchg
sub
mov
push
fild
or
push
and
fild
and
call
fsubr
aas
push
mov
xchg
fsubr
push
loope
(bad)
cmp
jnp
and
and
cmp
retf
mov
mov
test
cld
jo
push
sbb
stos
xchg
push
and
cmps
test
stos
xchg
loope
adc
xchg
sub
xchg
push
push
and
retf
loope
and
xchg
add
jl
sub
(bad)
cmp
addr16
ss
mov
push
and
and
cmp
inc
mov
jo
adc
mov
xchg
fadd
dec
push
aaa
push
mov
push
fld
jnp
and
and
cmp
mov
push
popa
push
sub
xchg
jae
push
jg
push
and
test
mov
and
and
jmp
push
lock
stos
pop
xchg
fadd
enter
mov
xchg
fadd
dec
div
mov
push
fsubr
mov
pushf
stc
adc
in
stos
pop
xchg
fadd
dec
lock
pop
test
imul
stos
pop
xchg
mov
push
mov
and
sub
fld
mov
aad
scas
pop
xchg
sub
inc
and
xchg
xchg
scas
pop
xchg
fdivr
xor
popa
push
enter
mov
xchg
fadd
dec
inc
xor
mov
out
adc
in
stos
pop
xchg
fadd
dec
aaa
xor
in
stos
pop
xchg
fadd
dec
aaa
aaa
push
mov
xchg
fdivr
push
xchg
(bad)
sbb
fild
mov
cmps
mov
fcom
pop
xchg
and
push
xchg
(bad)
sbb
imul
pushf
sub
nop
fsubr
pop
xchg
jae
jbe
popa
push
sub
xchg
jae
adc
push
and
test
mov
and
and
in
stos
pop
xchg
fadd
dec
mov
push
mov
xchg
(bad)
fsubr
add
sub
inc
mov
and
and
in
stos
pop
xchg
fadd
pop
fst
scas
pop
xchg
retf
sti
mov
and
and
cmp
sti
mov
and
sbb
aas
test
push
nop
fsubr
test
and
in
fld
mov
xchg
fdivr
adc
arpl
push
xor
cmp
push
mov
and
and
cmp
adc
and
lods
loope
pop
pusha
cmps
jle
xchg
fsubr
pop
sub
rol
and
sub
add
push
fsubr
bound
sub
and
repz
mov
aas
and
stos
mov
cld
xchg
adc
add
mov
and
push
mov
xchg
fcomp
sbb
push
dec
adc
push
mov
jge
push
stc
jecxz
pop
add
mov
push
xchg
mov
ins
jae
loope
mov
mov
sub
mov
enter
mov
push
and
lock
push
and
ins
and
in
out
xchg
fadd
pop
sbb
and
imul
and
cmp
cmp
push
test
and
jmp
and
and
dec
push
loop
push
popa
push
sbb
sbb
fbld
loope
mov
sbb
stos
xchg
push
and
cmps
test
stos
xchg
loope
aad
sub
mov
adc
adc
push
scas
ficomp
in
jae
inc
inc
icebp
loope
mov
popa
xchg
cmp
push
repz
scas
mov
fidiv
mov
test
dec
xchg
fsubr
push
jecxz
and
push
and
bound
in
or
cmps
cld
dec
xchg
fsub
and
add
mov
loop
dec
call
iret
test
mov
and
in
leave
dec
xchg
fadd
sub
xchg
jae
aam
and
in
mov
mov
sub
xchg
jae
shr
fistp
sti
fbld
and
and
cmp
jg
push
and
mov
test
dec
and
mov
push
and
data16
push
enter
mov
push
and
aad
mov
movs
mov
push
sbb
push
mov
fdivr
adc
add
nop
jp
and
ror
popa
push
dec
jecxz
push
mov
xchg
(bad)
xchg
cs
adc
sar
push
mov
loope
jg
loope
or
adc
in
loop
dec
jbe
sub
mov
sub
xchg
scas
arpl
mov
push
sbb
push
mov
retf
mov
push
and
mov
inc
xor
jmp
push
sub
xchg
scas
arpl
popa
push
sbb
push
mov
xchg
pop
push
mov
add
cmp
add
mov
push
lea
push
and
add
push
dec
stos
sub
mov
push
fcomp
push
scas
rcl
add
push
fsubr
and
aad
dec
push
sub
in
jecxz
xchg
fadd
pop
sbb
and
push
dec
push
enter
mov
mov
data16
pop
and
sub
xchg
mov
sub
push
sub
xchg
mov
push
push
scas
and
ds
sbb
aas
fsub
adc
mov
push
sub
push
cmps
inc
sub
test
scas
push
retf
ja
push
sti
fbld
es
sub
(bad)
mov
(bad)
movs
scas
push
jl
arpl
sub
and
push
and
in
fwait
lock
push
cmps
out
xchg
(bad)
and
loope
mov
push
and
in
in
jl
and
add
mov
sub
and
push
and
sub
and
mov
cmp
jmp
xchg
push
bound
sub
cmp
add
cmp
add
cmp
add
mov
mov
adc
add
mov
push
xor
retf
and
loope
dec
ret
and
add
mov
retf
xchg
adc
retf
fild
push
dec
ret
jp
and
enter
mov
push
into
test
mov
in
mov
or
retf
lahf
lods
push
fadd
or
fsubr
pop
xchg
daa
push
mov
push
and
in
fwait
mov
and
cmp
adc
and
fnstenv
xchg
adc
add
push
mov
xchg
(bad)
fs
xchg
aad
mov
push
mov
sub
push
mov
iret
fsubr
sub
fsubr
mov
push
retf
inc
scas
push
das
push
mov
xchg
fadd
retf
push
enter
mov
adc
mov
and
push
and
xchg
push
push
aas
sub
mov
dec
jo
adc
xchg
scas
push
sti
fbld
data16
sbb
retf
push
sub
xor
and
jge
imul
and
cmp
pop
in
dec
xchg
jmp
and
in
mov
int
push
fist
push
push
mov
push
and
in
push
push
mov
push
xor
push
and
push
and
cmps
(bad)
mov
pusha
and
push
dec
loop
push
and
add
mov
push
popa
push
dec
push
(bad)
test
pop
xchg
(bad)
pop
lahf
(bad)
fbld
loope
ds
mov
push
pop
(bad)
stos
pop
xchg
retf
dec
inc
xchg
(bad)
fs
ror
fsubr
pop
xchg
jae
adc
xor
mov
in
cmps
push
mov
xchg
fsubr
add
and
test
in
ret
stos
pop
xchg
or
js
fsubr
xor
inc
mov
pop
xchg
fsubr
sbb
fisubr
pop
xchg
(bad)
dec
ins
test
je
fsubr
pop
xchg
sbb
sub
(bad)
stos
pop
xchg
or
jl
fsubr
pop
xchg
fdivr
mov
test
retf
arpl
enter
ret
cs
mov
loope
aad
or
adc
push
and
or
adc
retf
dec
loop
push
stos
xchg
and
loop
push
xchg
adc
push
dec
loop
push
fmul
and
loop
push
and
mov
sub
mov
stc
or
xchg
nop
stos
xchg
add
pop
mov
in
ja
mov
imul
mov
push
and
pusha
push
pop
pop
sbb
and
nop
adc
cmps
push
stos
rcr
fsubr
mov
retf
popa
push
aam
sbb
leave
popa
push
aam
sbb
icebp
bound
pop
sbb
cmc
bound
inc
sbb
retf
popa
push
aam
sbb
leave
popa
push
aam
sbb
retf
popa
push
aam
sbb
mul
aam
sbb
mul
scas
in
repz
mov
sbb
and
in
fld
fmul
popa
push
aam
sbb
retf
popa
push
aam
sbb
icebp
bound
gs
out
js
test
lods
push
fcom
sbb
and
xchg
mov
xchg
fsubr
pop
xchg
fcom
in
ret
stos
pop
xchg
jae
cmp
and
in
iret
stos
pop
xchg
retf
push
fcmovnu
cmp
jne
and
xchg
and
in
push
pop
xchg
fadd
pop
pop
retf
retf
loope
retf
mov
sbb
push
dec
push
enter
mov
arpl
push
pop
pop
retf
retf
loope
retf
pop
stos
push
and
lahf
jmp
push
fsubr
pop
xchg
in
push
xchg
fsubr
adc
and
in
mov
mov
push
fsubr
and
popa
push
dec
out
push
mov
xchg
(bad)
push
imul
push
shl
push
enter
mov
xchg
fadd
pop
jmp
pop
popf
xchg
fcom
sbb
and
xchg
mov
push
retf
xchg
in
adc
pop
pop
mov
push
fcmovnu
addr16
push
pop
xchg
fadd
sub
xchg
jae
lea
(bad)
stos
pop
xchg
jae
xor
and
lods
xor
pop
push
and
xchg
je
push
mov
push
fsubr
mov
mov
push
retf
aas
stos
push
mov
mov
push
and
sub
jmp
test
mov
js
jbe
push
cli
adc
add
mov
pop
pop
aas
ret
loopne
retf
mov
push
and
in
and
popf
addr16
shl
in
es
pop
xchg
fsubr
adc
push
push
add
add
ds
mov
push
retf
mov
xchg
je
push
mov
push
and
and
imul
out
sub
scas
shl
in
mov
enter
mov
xchg
fadd
dec
iret
sub
jmp
inc
enter
mov
xchg
fadd
pop
pop
mov
inc
test
imul
jbe
push
cli
adc
add
mov
pop
pop
mov
jg
push
and
and
push
mov
test
test
and
cmp
test
loop
scas
rcl
fsubr
mov
add
push
mov
xchg
fsubr
aas
sub
mov
and
and
add
cmp
add
push
dec
arpl
push
mov
sub
mov
dec
mul
push
mov
xchg
fadd
sub
xchg
jae
add
(bad)
stos
pop
xchg
jae
je
and
lods
xor
pop
push
and
xchg
inc
mov
pop
mov
xchg
fsubr
mov
mov
push
retf
jmp
inc
mov
pop
mov
push
fsubr
loopne
pop
push
mov
imul
push
cli
adc
add
mov
pop
pop
or
loope
retf
ja
push
and
in
fsubr
popf
addr16
rcr
fsubr
pop
xchg
fsubr
adc
push
push
add
add
mov
retf
arpl
inc
mov
push
mov
push
(bad)
pop
xchg
fsubr
sub
scas
shl
in
mov
enter
mov
xchg
fadd
dec
(bad)
jmp
inc
enter
mov
xchg
fadd
pop
pop
add
loope
retf
pop
cmps
push
fsubr
retf
push
enter
mov
outs
and
pop
add
loope
retf
aas
cmps
push
and
in
(bad)
popf
addr16
rcr
fsubr
pop
xchg
fsubr
adc
push
push
add
add
ds
mov
push
retf
sub
dec
mov
push
mov
push
(bad)
mov
mov
and
xchg
sub
xor
push
loope
or
(bad)
pop
xchg
(bad)
and
loope
(bad)
cmp
test
loop
scas
rcl
fsubr
mov
loope
mov
pop
xchg
(bad)
and
loope
cmp
add
cmp
add
cmp
add
push
mov
sub
mov
sub
xlat
test
xchg
dec
push
retf
push
pop
fst
test
xchg
retf
jmp
sbb
adc
push
mov
scas
sub
shr
enter
mov
xchg
fdivr
retf
rcl
fsubr
push
mov
pop
fst
test
xchg
retf
xchg
movs
push
fisubr
loopne
pop
push
mov
in
cmps
pop
xchg
fadd
in
mov
pop
fst
test
xchg
retf
iret
movs
push
cmps
cmps
pop
xchg
fadd
retf
cmps
inc
sub
test
pop
sbb
push
stos
xchg
pop
fst
test
xchg
retf
inc
movs
push
adc
sbb
retf
push
retf
push
enter
loopne
add
loopne
retf
out
movs
push
(bad)
call
add
cmp
xchg
xchg
mov
pusha
ins
and
gs
loop
mov
push
push
dec
push
sub
xchg
jno
enter
mov
xchg
fdivr
retf
rcl
fsubr
dec
mov
push
pop
fst
test
xchg
retf
mov
push
(bad)
mov
fsub
mov
nop
and
retf
cmp
and
fnstenv
xchg
adc
add
push
mov
xchg
(bad)
fs
push
pop
pop
sub
loope
retf
mov
push
(bad)
fbld
loope
mov
pop
sbb
fsub
test
rcl
push
loope
mov
test
add
test
push
inc
adc
popf
stos
push
data16
sub
and
push
and
adc
loope
mov
leave
popa
push
aad
fsub
cmc
bound
iret
daa
push
mov
push
xlat
fbld
push
mov
stos
xchg
push
(bad)
add
and
fwait
pop
mov
pop
pop
pop
bswap
loope
retf
and
mov
test
mov
push
stos
xchg
fwait
pop
aas
ret
loopne
push
pop
pop
pop
or
loope
retf
pop
movs
push
mov
test
mov
push
bound
jl
imul
popa
push
mov
cmp
mov
nop
stos
xchg
fwait
pop
add
loope
push
inc
and
loop
push
push
rol
sub
mov
xchg
mov
arpl
bound
outs
test
cmp
push
sub
sbb
leave
popa
push
aad
test
pushf
mul
fwait
pop
bswap
loope
push
push
sub
leave
loope
sbb
std
arpl
outs
test
mov
pop
or
loope
push
push
sub
mul
push
and
pop
add
loope
push
push
sub
iret
loopne
sbb
leave
popa
push
aad
test
mov
mov
inc
pop
sbb
fsub
lods
ds
fsubr
dec
fs
cmc
xchg
push
data16
sti
mov
and
dec
sub
mov
dec
das
movs
loop
mov
mov
dec
xor
mov
dec
aaa
movs
loop
mov
mov
dec
add
mov
dec
shld
push
and
dec
adc
mov
dec
pop
movs
loop
mov
mov
loope
pop
test
add
add
fistp
jae
lock
and
lods
sub
in
sub
out
and
and
and
aas
adc
sbb
aad
dec
push
movs
dec
imul
ins
mov
cmp
and
mov
add
push
dec
(bad)
int3
test
stc
jmp
and
js
push
and
js
push
rol
pop
test
sub
pop
xchg
test
test
pop
call
sub
pop
ss
jb
fwait
xchg
daa
mov
loope
mov
dec
arpl
mov
dec
movs
loop
mov
mov
dec
imul
push
outs
movs
loop
mov
mov
dec
jae
loop
mov
mov
dec
ja
loop
mov
mov
dec
jnp
loop
mov
mov
dec
jg
loop
mov
mov
dec
inc
movs
loop
mov
mov
dec
inc
movs
loop
mov
mov
dec
dec
movs
loop
mov
mov
dec
dec
movs
loop
mov
mov
dec
push
movs
loop
mov
mov
dec
push
movs
loop
mov
mov
dec
pop
movs
loop
mov
mov
dec
pop
movs
loop
mov
mov
dec
mov
(bad)
mov
dec
cmps
movs
loop
mov
mov
dec
stos
movs
loop
mov
mov
dec
scas
movs
loop
mov
mov
dec
mov
loop
mov
mov
dec
mov
loop
mov
mov
dec
mov
(bad)
mov
dec
mov
(bad)
mov
dec
and
push
xchg
mov
dec
mov
mov
dec
(bad)
movs
loop
mov
mov
dec
xchg
movs
loop
mov
mov
dec
xchg
movs
loop
mov
mov
dec
fwait
movs
loop
mov
mov
dec
lahf
movs
loop
mov
mov
dec
jecxz
loop
mov
mov
dec
out
loop
mov
mov
dec
jmp
loop
mov
mov
dec
out
movs
loop
mov
mov
dec
rep
loop
mov
mov
dec
mul
mov
dec
sti
movs
loop
mov
mov
dec
jmp
mov
dec
ret
movs
loop
mov
mov
dec
(bad)
movs
loop
mov
mov
dec
retf
movs
loop
mov
mov
dec
iret
movs
loop
mov
mov
dec
(bad)
mov
dec
fbld
mov
dec
and
mov
dec
daa
mov
mov
dec
sub
mov
dec
das
mov
mov
dec
xor
mov
dec
aaa
mov
mov
dec
cmp
mov
dec
aas
mov
mov
dec
add
mov
dec
pop
mov
mov
dec
or
mov
dec
cpuid
loop
mov
mov
dec
adc
mov
dec
pop
mov
mov
dec
sbb
mov
dec
pop
mov
mov
dec
arpl
mov
dec
addr16
mov
mov
dec
imul
push
outs
mov
mov
dec
jae
loop
mov
mov
dec
ja
loop
mov
mov
dec
jnp
loop
mov
mov
dec
jg
loop
mov
mov
dec
inc
mov
mov
dec
inc
mov
mov
dec
push
mov
mov
dec
push
mov
mov
dec
pop
mov
mov
dec
pop
mov
mov
dec
mov
(bad)
mov
dec
scas
mov
mov
dec
mov
loop
mov
mov
dec
mov
loop
mov
mov
dec
mov
(bad)
mov
dec
mov
(bad)
mov
dec
and
push
xchg
mov
dec
mov
mov
dec
(bad)
mov
mov
dec
fwait
mov
mov
dec
lahf
mov
mov
dec
jecxz
loop
mov
mov
dec
out
loop
mov
mov
dec
jmp
loop
mov
mov
dec
out
mov
mov
dec
repz
mov
dec
mul
mov
dec
sti
mov
mov
dec
jmp
mov
dec
ret
mov
mov
dec
(bad)
mov
mov
dec
retf
mov
mov
dec
iret
mov
mov
dec
shl
mov
dec
xlat
mov
mov
dec
(bad)
mov
dec
fbld
.byte
.byte
.byte
push
