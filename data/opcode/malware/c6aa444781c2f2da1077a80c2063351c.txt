dec
jecxz
lods
xor
daa
pop
es
cs
addr16
bnd
ss
and
sub
lods
cmp
fnsave
imul
es
ds
pop
and
jns
push
add
add
repnz
push
movs
xchg
cs
inc
push
jle
or
test
xchg
repnz
jle
repnz
nop
pop
es
movs
jb
sub
es
pop
movs
mov
loopne
scas
pushf
jo
jno
dec
pop
dec
jns
enter
movs
push
jno
or
jns
pop
jns
js
retf
cmps
jae
(bad)
fxch
jno
or
sub
pop
sub
push
test
xchg
sbb
lock
and
es
fistp
cmp
shl
stos
pop
fcmovu
mov
fs
pop
fdivp
pusha
cmps
lods
or
rcr
mov
bnd
xlat
sub
mov
cs
das
jbe
dec
imul
jmp
and
adc
popa
pop
lods
cmp
stc
push
leave
popa
pop
jo
jb
xor
pop
stos
inc
pop
jmp
popa
pop
aad
scas
addr16
popa
pop
scas
inc
pop
jmp
ja
and
call
sub
into
push
fsub
stos
adc
or
xchg
loopne
fld
das
sub
jge
shl
fmul
test
hlt
das
sub
dec
lods
mov
xchg
movs
pop
mov
dec
dec
dec
xchg
mov
fsub
es
and
jns
xor
jns
sahf
cs
das
pop
adc
popf
and
sbb
jno
pop
adc
mov
add
pop
movs
mov
and
daa
jns
pop
int
mov
or
dec
xor
fs
push
loop
fsubr
leave
popa
pop
into
jne
pop
es
out
sahf
js
pop
es
add
lock
pop
in
push
jbe
cmp
pop
push
jle
pop
es
mov
fmul
jmp
jnp
daa
jns
pop
int
inc
sti
es
pop
jae
(bad)
xor
adc
jmp
and
inc
lock
pop
es
fxch
imul
jbe
pop
jle
clc
das
jle
jp
jbe
cli
out
dec
jns
pop
dec
push
xchg
sbb
adc
jmp
and
(bad)
fs
outs
add
popa
pop
(bad)
fs
jg
leave
popa
pop
into
and
cli
out
pop
mov
pop
fisubr
retf
push
in
sbb
and
sahf
imul
es
or
(bad)
test
mov
(bad)
retf
scas
mov
dec
pop
dec
jns
pop
dec
jns
pop
cmps
adc
retf
retf
mov
in
in
popa
jns
(bad)
xchg
pop
mov
scas
(bad)
retf
jbe
sub
daa
jns
(bad)
retf
jbe
retf
sbb
or
test
dec
aad
daa
adc
ficom
adc
(bad)
jne
movs
fnstcw
and
sbb
push
lods
xor
pop
movs
mov
nop
movs
(bad)
out
imul
jge
out
mov
iret
push
jo
pushf
stos
pusha
nop
sub
fidivr
shl
hlt
data16
jbe
and
sbb
pop
dec
jns
pop
dec
jns
das
sub
pop
pop
es
loope
add
jo
and
mov
xchg
(bad)
movs
push
gs
pop
(bad)
movs
push
test
pushf
pop
jns
shl
xchg
into
loope
pop
es
and
mov
cli
pop
mov
and
and
jne
mov
shl
in
out
jl
out
mov
jne
cdq
jno
xchg
lock
arpl
and
jns
das
sub
pop
pop
es
ror
adc
xor
fsubr
xchg
into
cmp
in
push
test
js
jns
push
ror
sub
cmp
pop
cmps
mov
jl
out
mov
iret
jle
das
je
push
jne
pop
fisubr
dec
jns
repnz
arpl
data16
cmp
movs
and
inc
scas
es
inc
cmps
es
dec
imul
data16
arpl
data16
or
fdiv
daa
sub
dec
sbb
das
daa
cmp
sbb
sbb
push
imul
dec
pop
cmp
das
and
data16
int
mov
pop
es
stos
movs
mov
sbb
sbb
push
retf
(bad)
push
scas
mov
mov
mov
movs
add
movs
fld
fsub
jge
loopne
scas
pushf
fwait
pop
es
mov
or
pop
jne
je
push
jne
pop
ss
(bad)
imul
(bad)
adc
pop
xchg
cs
cmp
shl
stos
fwait
movs
mov
sbb
sbb
push
jo
fbld
jns
movs
es
adc
rcr
push
rcl
jae
test
pop
daa
jns
movs
popa
inc
cld
es
repnz
cmps
fld
loope
mov
fsub
mov
fsub
es
add
jae
(bad)
fxch
gs
jno
jle
loope
fucomip
cmp
shl
stos
pop
fdivp
data16
rcr
shl
stos
pop
fimul
mov
xchg
push
daa
cs
lock
inc
imul
fdivr
mov
mul
stos
cwde
movs
mov
gs
add
in
ds
pop
(bad)
data16
cmp
lods
inc
xchg
stos
pop
ret
cmps
jns
js
in
stos
mov
jo
test
sub
ret
cmp
shl
push
loope
jae
adc
jns
rcr
cdq
mov
xor
scas
mov
and
fbld
nop
scas
test
loope
scas
ins
adc
pop
cmps
pop
mov
jl
out
fs
pop
cs
data16
scas
cmp
shl
aam
fdivp
data16
scas
cmp
add
jae
(bad)
fxch
imul
lods
and
popf
arpl
test
(bad)
loope
in
jbe
fnstcw
fs
lods
int
test
cs
pop
push
lock
repnz
push
sub
aaa
dec
pop
test
arpl
pop
cdq
test
(bad)
data16
inc
sub
add
mov
imul
push
cdq
xchg
pop
xor
in
jg
and
xchg
dec
daa
rcr
das
retf
sbb
xchg
shl
test
sub
je
js
popa
pop
jo
adc
pop
test
xchg
retf
xchg
xchg
in
stos
mov
lods
and
in
daa
mov
scas
and
das
cs
pusha
das
es
pushf
dec
jns
pop
dec
xchg
sub
push
jno
pop
dec
jns
mov
and
rcl
xchg
das
loop
dec
and
sahf
stos
pop
(bad)
in
js
jmp
das
je
push
jno
and
jle
rcr
push
fcmovnbe
loope
push
mov
add
cmp
or
repnz
(bad)
daa
sar
xchg
lods
jg
ins
lods
popa
fmul
lock
scas
mov
and
jae
(bad)
fxch
pop
jo
jno
push
push
cdq
cld
cmp
pop
fdivp
in
add
cmp
jns
pop
into
rcl
hlt
data16
jbe
xor
push
jns
shl
clc
int3
popf
add
and
jo
push
mov
jo
das
jg
dec
jmp
and
arpl
and
mov
sub
out
data16
mov
mov
cli
lds
and
and
aaa
dec
es
pop
scas
mov
stos
pop
ret
imul
clc
push
mov
jo
das
and
sbb
jbe
mov
xchg
movs
jg
int3
xor
jns
imul
jge
out
mov
adc
jns
pushf
push
jns
or
cwde
clc
push
dec
frstpm(287
jmp
pop
es
push
es
cmp
movs
fnstcw
cs
push
and
add
push
sub
jmp
ficomp
fs
adc
lods
(bad)
sbb
(bad)
in
push
mov
add
cmp
or
clc
shr
jns
fld
in
sbb
jns
mov
xor
pop
dec
xchg
pop
es
cmps
mov
(bad)
mov
or
pop
dec
js
test
mov
sub
jge
xchg
(bad)
jne
movs
fnstcw
das
sub
push
mov
and
shl
scas
cld
mul
stos
cmp
or
jge
rcr
xchg
cmp
fstp
and
pop
and
cli
pop
cmps
es
inc
daa
jns
fld
and
sbb
fcomp
or
sti
shl
xchg
es
cmp
shl
sbb
int
pop
push
jle
jg
int
pop
fcomp
fs
pop
fdivrp
enter
and
es
and
es
sar
push
sti
shl
pop
in
(bad)
jnp
shl
stos
pop
into
ficomp
fs
pop
(bad)
sub
dec
scas
sahf
call
repnz
push
lods
push
daa
or
push
lock
cmps
mov
arpl
jns
call
and
out
popa
pop
lods
cmp
or
jns
pop
lock
das
mov
aam
scas
cld
rep
fadd
jmp
mov
repnz
lock
das
mov
pop
out
fs
movs
es
pop
sub
xchg
xchg
cs
sti
jae
lock
sbb
sbb
jns
push
xchg
sbb
sub
movs
arpl
data16
fld
popa
pop
es
imul
loopne
js
jmp
jne
or
mov
xor
sub
mov
fidivr
pop
cs
pop
push
jbe
xlat
es
push
std
or
popf
arpl
stos
test
es
and
cli
fisttp
sbb
pop
daa
inc
pop
cs
push
cs
inc
cmps
es
stos
cmp
mov
fs
je
jns
(bad)
jno
mov
add
pop
loopne
cmp
jns
mov
mov
movs
das
mov
fistp
or
daa
fidivr
push
xchg
inc
out
fs
adc
jns
aas
fidivr
or
sub
pop
int
test
cs
push
inc
pop
pop
sbb
pop
movs
sbb
pop
cmps
mov
es
shl
mov
fist
xchg
movs
movs
sbb
pop
movs
add
pop
push
jbe
das
adc
ret
data16
mov
push
lock
lock
adc
xor
adc
xor
adc
pop
cmp
mov
or
pop
scas
cmp
xor
and
es
adc
and
arpl
fwait
movs
mov
sbb
sub
shr
jno
push
jno
das
ficom
dec
pop
stos
cmp
or
stos
les
and
push
jns
fcmovne
es
xchg
into
ins
dec
pop
es
out
mov
(bad)
pop
and
retf
fs
jns
or
cwde
mov
cmp
sar
dec
sti
shl
mov
fcomp
popf
rcr
xchg
test
es
(bad)
xchg
movs
stos
cld
out
fadd
fsub
mov
lock
jae
lock
es
je
es
int3
push
jns
shl
clc
enter
and
stos
cld
out
fadd
fsub
sbb
sbb
jns
xchg
cmps
mov
jns
ffreep
xchg
movs
jbe
mov
rcr
xchg
cmp
push
out
xchg
xlat
mov
sub
lds
and
mov
sub
pop
es
shl
mov
pop
das
mov
and
cld
jecxz
fadd
popa
pop
jbe
sbb
(bad)
sti
imul
loopne
pop
test
push
mov
adc
addr16
out
out
frstor
fsqrt
out
scas
mov
fsub
xchg
stc
jb
popa
pop
cmps
mov
scas
fistp
fdivr
rcr
xchg
cmp
push
out
cmps
mov
jns
cmp
les
push
mov
stc
sahf
cmps
fld
xchg
pop
es
pop
dec
daa
rcr
hlt
cmps
cmps
fld
aad
fsqrt
out
scas
mov
fsub
lock
neg
xchg
shl
jbe
fist
fcomp
jbe
data16
and
cld
xchg
movs
fadd
fisub
jbe
bound
dec
push
pop
es
out
sub
cmps
call
and
addr16
fld
jns
addr16
int
pop
es
pushf
daa
jns
loop
and
pop
rcr
frstor
dec
lods
rcr
adc
addr16
adc
loop
push
movs
fnstcw
add
and
call
(bad)
fisub
adc
fsub
fld
in
xchg
xchg
movs
daa
jns
pop
dec
js
fwait
les
and
jbe
bound
je
movs
fsqrt
out
sbb
add
daa
adc
out
xchg
movs
jno
shr
sub
es
push
loope
xchg
movs
fadd
dec
pop
dec
aam
sbb
adc
addr16
xchg
rol
push
movs
fnstcw
add
and
lahf
fwait
popa
pop
stos
(bad)
fisub
mov
fld
push
jae
fist
jns
pop
cmps
mov
daa
es
pop
dec
fcmovb
sbb
adc
addr16
(bad)
xchg
(bad)
jne
movs
fnstcw
add
and
lahf
fwait
popa
pop
stos
(bad)
fisub
inc
mov
movs
movs
mov
and
jae
fist
jns
pop
dec
js
into
les
and
jbe
bound
cmp
movs
fsqrt
out
sbb
sub
fnstcw
pop
adc
xor
sub
scas
fld
fsub
loope
xchg
movs
fadd
dec
pop
dec
add
sbb
adc
addr16
lods
rol
push
movs
fnstcw
bound
and
lahf
fwait
popa
pop
stos
(bad)
fisub
cld
(bad)
fsub
fld
dec
pop
dec
or
sbb
hlt
sahf
cmps
fld
xlat
movs
fsqrt
out
sbb
sub
fnstcw
pop
es
enter
and
fwait
int
movs
fnstcw
dec
loopne
push
out
fs
xlat
mov
sub
xchg
fadd
in
push
int
pop
daa
fdiv
fs
ds
cmp
sar
js
shl
mov
fcomp
push
es
es
imul
loopne
mov
sub
movs
jbe
sbb
fidiv
push
mov
hlt
cmps
loop
xchg
or
xchg
push
xchg
cmp
sar
push
sti
shl
cli
pop
cmps
es
mov
jns
fld
jns
adc
stos
cdq
movs
fdiv
movs
fadd
fsub
jns
pop
cmps
mov
popf
mov
outs
and
fnstcw
pop
es
cmps
ret
fmul
stos
cld
mov
mov
sub
frstpm(287
bound
es
cmps
mov
xchg
or
rcr
repnz
cli
fld
fmul
jns
pop
lock
das
mov
and
cld
rep
fadd
fsub
out
repz
es
pop
(bad)
sti
imul
loopne
pop
test
push
mov
hlt
cmps
mov
xchg
or
xchg
push
xchg
cmp
push
out
or
stos
cld
retf
movs
fadd
fsub
cs
arpl
stos
cdq
movs
add
pop
sub
(bad)
pop
es
adc
stos
fist
mov
frstor
fld
fmul
das
mov
and
and
es
shl
lock
or
out
fiadd
sbb
hlt
cmps
cmps
fld
dec
pop
es
out
movs
fmul
movs
fadd
and
jns
jl
jns
sar
dec
sti
shl
xchg
xlat
mov
sub
les
and
mov
sub
and
and
loop
inc
popf
mov
jnp
shl
lock
ret
(bad)
mov
sub
movs
movs
xchg
xor
rol
pop
es
jmp
xchg
jecxz
jns
pop
aad
test
into
xchg
movs
jno
sbb
jno
stos
pop
(bad)
loopne
jne
and
jbe
(bad)
and
adc
movs
fnstcw
fisttp
adc
fild
repnz
es
pop
(bad)
enter
and
jbe
sbb
and
mov
sub
movs
jbe
sbb
fcmovb
js
es
mov
fadd
fistp
cld
and
dec
nop
retf
pop
es
pop
into
push
dec
pop
and
fistp
frstor
mov
jnp
shl
lock
and
xchg
xlat
mov
sub
movs
movs
xchg
xor
rol
pop
es
jmp
xchg
jecxz
jns
pop
aad
test
mov
sbb
jno
stos
pop
(bad)
enter
and
jbe
sub
jns
fld
jns
fild
adc
fs
fbld
repnz
es
pop
fidiv
push
mov
cli
sahf
rcr
xchg
pop
sub
xor
jns
fild
frstor
xchg
(bad)
fsub
xchg
or
lock
sahf
call
rcl
and
movs
f2xm1
loopne
pop
test
push
mov
pop
mov
movs
cs
xchg
es
fstp
jns
fsubp
jns
pop
stos
cld
jp
fild
fsub
xchg
sbb
fild
and
les
fild
and
mov
fcomp
jns
xor
xchg
xlat
mov
sub
les
and
mov
sub
or
and
loop
stos
or
stos
cdq
stos
hlt
fisub
fnstcw
mov
mov
fadd
fisub
fild
fsub
xchg
movs
jbe
call
sahf
sub
daa
xlat
mov
sub
les
and
mov
sub
lods
dec
jns
(bad)
imul
movs
fadd
cmps
fcompp
xchg
or
sar
scas
cld
ja
fadd
(bad)
movs
fadd
frstor
fadd
fsub
fadd
jne
lods
cld
and
xchg
frndint
iret
movs
fadd
frstor
fadd
fsub
fadd
cmps
cmps
fld
and
into
xchg
movs
jbe
adc
test
shl
sub
loop
adc
pop
rcr
frstor
repnz
movs
es
fsub
das
sub
mov
sub
shl
sub
loop
and
call
scas
mov
frstor
jo
retf
xchg
add
jae
(bad)
xor
adc
shl
and
xchg
pop
sub
add
pop
es
iret
inc
jne
je
inc
xchg
in
ret
cmc
jg
pop
mov
scas
cmp
rcr
stos
daa
ret
cmps
es
pop
cmps
cmp
sbb
jle
and
gs
pop
es
out
into
adc
movs
fsqrt
push
ficom
cmps
enter
adc
mov
scas
cmp
rcr
stos
daa
ret
cmps
fld
in
cli
js
pop
es
repnz
mov
cmp
gs
mov
enter
fbld
js
mov
arpl
and
mov
pop
es
mov
xor
imul
dec
ficom
adc
xor
pop
arpl
jns
pop
into
or
in
into
xchg
inc
pop
shl
es
mov
loope
jge
in
stos
mov
jo
jle
lahf
and
lock
out
lock
and
std
fld
jge
sbb
jns
sar
jns
lods
(bad)
lock
scas
mov
bound
cli
push
bound
pop
sub
data16
popf
and
and
clc
loop
sub
popf
and
and
lock
jns
sbb
jl
ret
addr16
call
push
movs
es
push
test
xchg
fbstp
je
lds
arpl
fnstcw
fs
call
imul
jge
shl
and
out
pop
iret
xor
pop
es
cs
mov
jg
push
mov
(bad)
sbb
je
mov
cmp
pop
and
sbb
xchg
and
sbb
clc
retf
jns
mov
jnp
pop
fnstcw
addr16
pop
and
and
es
es
mov
jle
call
adc
es
mov
out
cs
mov
cmp
retf
retf
xchg
lods
and
sbb
jge
pop
pop
mov
and
out
pop
pop
es
cs
mov
jne
movs
(bad)
and
jle
call
cs
mov
mov
xchg
scas
mov
and
fldenvw
iret
cdq
frstor
mov
jle
call
cs
mov
mov
in
retf
pop
and
and
int
movs
(bad)
and
jle
call
jmp
out
lock
sub
sbb
jnp
pop
(bad)
loopne
pop
and
and
icebp
frstor
xchg
cmp
movs
and
sbb
lock
out
lock
sub
sbb
cmp
push
daa
jns
sti
retf
pop
daa
jl
lds
stos
xchg
daa
mov
fwait
cmps
je
lds
arpl
xchg
jecxz
daa
jl
lds
retf
jns
sti
(bad)
loopne
pop
daa
jl
retf
retf
jns
sti
retf
pop
daa
jl
lds
retf
jns
movs
and
bound
shl
pop
es
es
mov
out
bound
jmp
jecxz
stc
js
pop
cmps
je
lds
add
inc
jp
pop
rcr
loop
(bad)
aas
test
sbb
jbe
pop
jbe
popa
pop
das
mov
sub
mov
popa
pop
sbb
and
add
and
inc
fdivr
mov
cs
mov
dec
fcomp
int
pop
int
xor
inc
mov
movs
and
sbb
clc
loop
add
fisubr
popa
mov
push
pop
mov
and
out
push
jmp
out
es
cmp
lods
and
sbb
cmp
loope
and
mov
fist
fs
xchg
rcr
loop
nop
jl
sti
fs
call
sub
and
sbb
cli
ret
pop
scas
cmp
push
nop
cmp
addr16
and
std
stos
pop
es
daa
sar
push
pop
fnstcw
data16
push
pop
jns
lods
(bad)
lock
mov
push
fisub
jns
das
sub
jns
pop
cs
addr16
addr16
das
xor
pop
lods
es
ficomp
and
push
mov
and
inc
mov
jle
je
lds
mov
shl
lock
jns
mov
nop
jl
(bad)
addr16
mov
cmps
add
pop
push
je
daa
sar
pop
movs
jl
retf
daa
fld
jne
sbb
jns
inc
scas
mov
xor
sbb
repz
and
addr16
pop
sub
arpl
jno
sbb
inc
es
mov
and
std
clc
shl
add
sbb
jns
inc
scas
mov
xor
sbb
repz
and
fs
pop
sub
arpl
inc
mov
push
mov
and
std
xchg
cs
cmp
rcl
push
sti
stc
and
arpl
mov
loop
add
add
mov
imul
inc
ins
fbld
mov
lahf
stos
pop
(bad)
in
and
sub
fs
adc
jns
shl
adc
loopne
jns
mov
sbb
pop
test
or
fs
mov
sbb
pop
test
sbb
rcr
scas
cmp
shl
adc
loopne
jns
mov
sbb
pop
test
push
mov
sbb
pop
test
sbb
adc
fs
mov
sbb
pop
test
sbb
es
in
stos
mov
jo
cwde
push
ja
and
shl
xchg
cs
cmp
xor
cmp
or
ins
jg
fs
pop
into
popa
and
lock
pop
(bad)
lock
inc
xchg
and
arpl
stos
pop
(bad)
mov
and
sbb
pop
cmps
xchg
inc
dec
es
aas
fidivr
pop
push
int
pop
movs
sbb
pop
sahf
mov
rcl
loope
cdq
movs
sbb
pop
loope
sti
pop
es
popf
arpl
scas
pop
push
ret
popa
pop
scas
cmp
movs
and
jmp
cmps
mov
in
xchg
js
pop
es
inc
loop
hlt
pop
out
or
jecxz
jns
pop
aad
scas
pop
into
sub
es
xlat
arpl
mov
mov
arpl
jae
es
data16
jbe
and
adc
xor
xchg
into
stc
inc
pop
es
data16
jbe
push
(bad)
stos
cmp
or
fadd
movs
and
and
dec
jns
pop
dec
jg
das
ret
cmp
jns
mov
and
pop
(bad)
mov
daa
and
jl
out
fs
pop
into
sub
das
xchg
hlt
mov
ss
mov
popf
enter
jmp
add
mov
imul
cmps
push
sub
lods
cmp
shl
push
loope
jae
test
sub
data16
lods
xor
shr
mov
mov
xchg
dec
pop
dec
jns
pop
stos
cmp
or
or
xor
hlt
data16
jbe
fsub
push
out
pop
lods
cmp
mov
shl
(bad)
mov
fist
jno
push
lods
lahf
adc
pop
fnstcw
fs
das
cs
movs
xor
sbb
es
jae
(bad)
fxch
jne
or
repnz
push
lods
and
movs
and
fcom
jge
fnstcw
pop
push
dec
sub
bound
fnstcw
pop
push
push
sub
bound
fnstcw
pop
push
gs
bound
fnstcw
pop
push
imul
fnstcw
pop
sub
sub
jns
pop
ss
addr16
and
aaa
fs
ins
sbb
cmp
push
nop
jge
cmp
ins
sbb
int
jns
rcr
xor
xor
cwde
sub
stos
pop
es
mov
nop
ins
xor
rcr
cli
leave
pop
sub
aaa
dec
pop
mov
mov
pop
and
es
add
iret
movs
dec
mov
dec
out
jns
mov
and
pop
sub
jbe
dec
stos
aaa
xlat
xor
fs
or
sub
data16
jae
scas
push
xor
xchg
daa
jae
jp
mov
arpl
addr16
and
fxch
jge
psrld
aaa
pop
daa
jns
pop
int
sub
arpl
pop
pop
hlt
lds
es
and
fnstcw
fs
data16
push
scas
sub
ins
lock
into
jnp
data16
sbb
stc
pop
pop
and
rcr
cli
retf
pop
sub
daa
pop
sbb
push
dec
sbb
and
or
retf
pop
cmps
inc
and
and
es
jge
call
and
inc
sbb
mov
and
jg
fdivrp
retf
pop
cmps
inc
and
mov
sbb
das
pusha
lock
into
jge
in
and
mov
jns
and
es
jne
mov
shl
scas
push
xor
xchg
daa
jae
js
fxch
jge
pop
fdivp
dec
stos
cmp
mov
mov
es
ficomp
inc
and
je
fist
cmps
inc
and
mov
sbb
das
sbb
fcmovnu
into
jp
data16
imul
inc
push
sub
es
pop
sbb
cmp
lods
sub
xlat
jb
es
fdivr
leave
pop
scas
jge
pop
es
sbb
es
fcom
daa
js
in
stos
mov
jo
fcomp
int
pop
lods
or
mov
dec
fdiv
es
sbb
es
stos
cmps
xchg
pop
es
dec
pusha
repnz
or
in
(bad)
nop
retf
jns
pushf
sub
es
cmp
push
nop
sub
fwait
les
xor
sbb
dec
clc
rcr
js
or
std
aad
fldenv
fcomp
int
pop
sub
daa
inc
sbb
add
iret
jns
pop
push
pop
mov
push
scas
mov
aaa
pop
scas
ins
and
pop
mov
and
test
int
test
inc
stos
cmp
stos
pop
fdivp
rcr
push
repz
js
pop
div
data16
stos
cmp
xlat
shl
jp
pop
mov
and
fnstsw
movs
mov
rcl
js
jae
lock
js
fxch
jge
pop
fidivr
addr16
daa
bnd
scas
imul
pop
movs
mov
jae
hlt
ja
and
fxch
jge
pop
fidivr
push
pop
es
or
xchg
(bad)
mov
add
test
movs
movs
mov
jmp
pop
and
mov
jne
into
xchg
movs
fnstcw
fcomp
leave
jns
es
and
stc
push
pop
loopne
rol
mov
movs
fnstcw
pop
push
int
pop
and
sahf
mov
push
push
int3
movs
fyl2xp1
pop
pop
inc
lds
daa
or
cld
movs
fnstcw
dec
sub
cmps
test
sbb
fs
das
and
jge
nop
in
shl
mov
sub
sub
fs
mov
and
pop
lods
in
mov
sub
iret
aad
fsub
sub
fs
fwait
les
iret
and
or
and
pop
lods
in
xchg
pop
mov
es
cmps
test
sub
cmps
test
out
mov
sbb
jns
fild
fsub
fld
shl
and
pop
dec
push
call
cmps
shl
and
in
shl
and
aaa
dec
jbe
bound
in
test
cmps
(bad)
rol
out
and
xchg
jl
fld
fsub
fs
iret
repnz
fsub
xor
es
cmp
shl
dec
fdiv
es
mov
and
pop
scas
mov
lds
int
mov
cmps
mov
sbb
rcl
scas
fbld
xchg
je
es
pop
push
int
pop
movs
fmul
mov
xchg
mov
jns
pop
dec
xchg
pop
xchg
movs
xchg
mov
mov
sub
data16
das
mov
mov
sar
xchg
popa
imul
stc
fwait
int3
jnp
mov
lods
dec
cdq
fld
jge
out
fwait
or
sbb
es
xchg
jns
push
scas
mov
and
mov
xchg
ins
frstpm(287
jns
pop
es
fcomp
jns
sub
xchg
into
popa
fldenv
retf
movs
es
pop
lods
cld
scas
test
xchg
movs
fnstcw
arpl
jbe
pop
fld
xchg
sbb
xchg
mov
and
pop
iret
cmp
pop
es
iret
aad
fsub
xor
data16
iret
rcl
xlat
mov
xchg
shl
mov
loop
and
ret
xor
shr
push
cld
movs
fptan
mov
leave
xchg
fwait
les
and
and
fidivr
fisubr
(bad)
rcl
xlat
mov
xchg
pop
es
in
fnstcw
fs
out
cmps
fsub
js
popa
pop
into
fnstenv
lock
cli
clc
xchg
shl
jp
pop
sbb
pop
scas
in
mov
cwde
pop
jp
shl
repnz
cli
clc
xchg
shl
cli
loope
and
cmps
fsub
fld
fsub
mov
fsub
fld
fsub
fld
fwait
test
xchg
xchg
movs
cld
movs
fst
test
repnz
fsub
fld
out
fld
fsub
fld
fsub
es
jp
jns
iret
xchg
cmps
fsub
lods
in
fwait
test
xchg
mov
sub
es
movs
mov
cld
movs
fst
xchg
sbb
jbe
iret
aad
fsub
stos
movs
cld
movs
fst
mov
xchg
shr
ins
adc
data16
in
mov
int3
movs
fnstcw
ss
cmp
shl
adc
dec
es
mov
and
cld
xchg
test
xchg
call
mov
ficomp
and
cld
xlat
mov
xchg
es
retf
jns
push
cmps
add
pop
sub
pop
pop
es
inc
daa
jns
shl
repnz
pop
daa
jns
pop
movs
xchg
(bad)
bound
shl
mov
fcomp
aam
test
xchg
rcl
lock
cmps
inc
and
push
lock
into
jnp
bound
or
rcl
cli
retf
pop
cmps
inc
and
xor
rcr
into
jge
bound
or
rcl
cli
retf
pop
cmps
inc
and
das
aaa
enter
push
out
fs
in
mov
std
movs
fnstcw
ss
cld
xchg
fisub
js
in
and
es
dec
lods
jge
pop
es
fxch
xchg
ffreep
cmps
fsub
int
test
rcl
or
popa
inc
sahf
mov
iret
stc
mov
clc
xchg
pop
sub
mov
clc
xchg
fwait
les
out
(bad)
movs
fnstcw
push
pop
es
pop
push
push
mov
pop
es
inc
cmps
inc
push
pop
es
pop
push
ins
mov
pop
es
push
cmps
inc
push
pop
es
pop
push
jp
mov
jbe
fild
mov
sub
gs
mov
sub
out
cli
cmps
fsub
fld
(bad)
loop
mov
movs
es
int3
movs
fnstcw
iret
rcl
and
(bad)
mov
and
test
movs
f2xm1
daa
dec
frndint
xlat
mov
xchg
movs
es
pop
push
test
popa
pop
iret
push
fbld
leave
xchg
pop
sub
cmps
test
out
mov
sbb
jns
fisttp
sbb
jns
js
in
stos
mov
jo
test
cs
ins
push
ins
adc
mov
scas
cmp
shl
in
fnstcw
daa
shl
cs
cmp
jecxz
jns
pop
aad
test
fdivp
loope
in
jbe
stos
add
xlat
adc
sahf
sbb
shr
jns
(bad)
stos
add
xlat
adc
sahf
sbb
shl
jns
(bad)
cmps
inc
inc
das
sub
test
fdivp
loope
in
jbe
cmps
cmp
pop
loopne
fstp
outs
test
movs
sbb
ss
fnstcw
push
cmps
cmp
pop
cmps
add
dec
push
popf
mov
pop
es
xchg
jns
pop
sub
jbe
sbb
sub
mov
es
pop
fnstcw
in
gs
call
or
aas
fdivp
xchg
scas
cmp
push
nop
cmp
jg
jns
pop
movs
and
daa
jbe
sbb
lock
les
mov
fdivr
movs
and
daa
jbe
sbb
(bad)
pusha
pop
out
das
fld
jle
mov
arpl
and
jns
pop
sbb
and
or
fisub
daa
(bad)
or
jns
in
and
jns
push
sar
and
jge
pop
fnstcw
pop
fstp
daa
(bad)
fdiv
movs
loopne
fistp
outs
test
cmps
sbb
mov
mov
push
cmps
cmp
pop
cmps
add
pop
push
popf
test
fdivp
xchg
scas
cmp
lods
inc
mov
pop
out
data16
movs
jns
pop
push
jge
pop
fnstcw
in
arpl
loopne
scas
pushf
jb
jo
test
mov
js
and
scas
mov
and
jns
mov
jns
rcl
cli
jmp
data16
pop
pop
es
shl
xchg
sub
das
and
enter
fcomp
xchg
jl
jge
loopne
scas
pushf
fwait
push
push
jns
mov
sub
pop
jo
pushf
cmc
dec
jns
loop
and
sahf
stos
(bad)
cmps
fsub
sub
fsubr
cs
cmps
pop
mov
pop
rol
scas
cld
fild
stos
cld
and
sub
pop
movs
mov
(bad)
lock
js
loopne
scas
pushf
jb
cdq
call
inc
sbb
jns
mov
loope
and
xchg
dec
jns
sub
and
ret
cli
iret
dec
jne
je
mov
fistp
xchg
daa
dec
es
pop
dec
stc
and
adc
xor
adc
xor
jns
fcmovu
or
mov
sub
pop
scas
mov
xor
cs
push
movs
pop
and
rcr
outs
pop
es
jecxz
jo
and
movs
jb
es
out
jae
xchg
mov
pop
fcmovb
push
and
jns
mov
loope
and
pop
jne
cs
scas
cmp
mov
hlt
data16
push
mov
push
test
mov
xchg
cwde
or
jns
mov
lods
cmp
add
jae
(bad)
or
jne
cdq
sbb
int3
mov
jns
xor
adc
pop
dec
jns
pop
dec
jns
pop
out
push
push
into
xor
in
fadd
enter
lods
push
es
pop
dec
jns
pop
jo
jo
es
pop
sub
loop
out
xchg
sbb
das
fcomip
loopne
es
jbe
je
fsubr
sub
retf
les
xor
hlt
data16
jbe
and
(bad)
fwait
popa
pop
jo
test
es
mov
sub
pop
sahf
stos
sbb
shl
test
fdivp
in
daa
jns
pop
jns
js
in
stos
mov
cdq
cmc
dec
ret
aam
sbb
xor
adc
pop
dec
jns
pop
dec
jns
pop
out
push
push
into
leave
jb
es
fidivr
shl
cli
frstor
int
dec
pop
dec
jns
pop
jo
xchg
or
jns
pop
stos
cmp
or
or
movs
push
jne
mov
sub
pop
jo
mov
es
gs
jns
lods
shl
mov
data16
in
stos
mov
jo
test
cs
lea
cmps
or
mov
std
lock
mov
jbe
pop
sbb
sbb
shr
fsubr
sub
bound
jb
and
arpl
stos
pminub
sbb
jb
and
loop
adc
and
xor
fwait
popa
pop
into
gs
es
out
gs
jle
pop
xchg
adc
sbb
pop
loopne
sbb
push
pop
mov
push
fwait
popa
pop
into
lea
es
out
lods
cmp
shl
stos
pop
ror
rcl
arpl
loopne
scas
pushf
mov
or
push
jne
pop
fisub
jb
repnz
scas
cmp
shl
aam
fdivp
data16
scas
cmp
xor
shl
and
movs
int
sub
and
xor
fwait
popa
pop
into
in
jo
es
out
popa
inc
aam
iret
adc
fdiv
and
cmps
adc
dec
cs
add
jae
(bad)
fxch
dec
jo
jno
sub
popa
fwait
test
and
scas
mov
and
sbb
pop
movs
sbb
pop
movs
sbb
pop
stos
add
xlat
adc
sahf
sbb
shl
es
jmp
jns
daa
ss
pop
inc
mov
test
cs
sbb
movs
int
stos
adc
stos
pop
(bad)
lock
nop
cmp
push
nop
cmp
cmp
daa
fnstcw
pop
movs
adc
pop
cmps
adc
pop
cmps
add
pop
push
lods
fwait
jb
jns
lods
(bad)
sub
xchg
sbb
data16
int
sub
arpl
rcr
out
and
into
stc
pop
movs
and
daa
(bad)
and
dec
shl
stc
dec
movs
daa
stc
pop
movs
es
loop
push
and
call
arpl
in
es
sub
xor
adc
aaa
daa
jns
push
xchg
sub
push
mov
outs
mov
mov
pop
retf
pop
les
and
ret
gs
jns
shl
sub
data16
ucomiss
or
push
repz
xchg
sub
push
mov
push
sub
arpl
sub
push
xchg
sub
jae
js
mov
js
jmp
jmp
and
popf
adc
call
mov
push
je
jmp
mov
mov
arpl
mov
mov
jmpw
mov
arpl
mov
mov
jmpw
mov
sbb
push
mov
fwait
pop
xchg
cmp
retf
rcr
jmp
adc
mov
jmp
mov
pop
jno
retf
mov
retf
mov
mov
push
mov
jmp
mov
mov
inc
mov
push
mov
mov
mov
into
jns
pop
and
pop
mov
mov
jae
data16
sar
jmp
imul
mov
jbe
mov
mov
xor
mov
mov
in
mov
mov
call
es
retf
jecxz
mov
mov
push
jns
retf
jmp
mov
mov
mov
mov
mov
retf
test
pop
cmp
ss
int3
or
cmp
mov
cmp
ins
bound
cdq
inc
jmp
fwait
pop
cmp
retf
mov
mov
jl
mov
mov
movs
and
or
adc
stos
xor
mov
mov
adc
jbe
mov
mov
stos
xchg
mov
mov
ror
mov
mov
mov
jle
mov
mov
popf
pop
sub
or
pop
dec
mov
mov
and
les
fwait
pop
xchg
cmp
retf
and
mov
push
or
test
stos
xor
mov
mov
adc
jbe
mov
mov
stos
xchg
mov
mov
ror
mov
mov
mov
jle
mov
mov
popf
ins
bound
retf
mov
mov
and
les
inc
retf
mov
inc
nop
sbb
xchg
cdq
jae
(bad)
fxch
pop
jo
jno
jle
lods
cmp
cmp
cmp
popf
arpl
mov
pop
es
aad
arpl
data16
sbb
shl
stos
pop
ficomp
in
(bad)
jns
mov
jns
pop
scas
mov
ins
lods
fld
jbe
lods
cmp
shl
js
shl
mov
pop
loopne
fstp
push
retf
test
jns
shl
fwait
movs
pop
jns
in
jns
pop
sub
jbe
scas
or
mov
repnz
fcmovbe
in
jbe
lods
jge
push
or
pop
push
xor
(bad)
js
sbb
iret
xor
xor
jae
icebp
xor
jge
les
pop
push
imul
in
imul
int3
sbb
lods
inc
test
cmps
dec
jno
retf
and
arpl
and
iret
mov
(bad)
sub
paddusb
or
dec
ins
pop
adc
sar
js
or
pop
ins
pop
es
out
lods
cmp
shl
dec
loope
jae
mov
pop
(bad)
jbe
pop
sub
sbb
xchg
mov
imul
or
sub
shr
scas
mov
and
sub
call
jmp
mov
mul
stos
cwde
scas
sub
rcl
mov
shl
stos
pushf
movs
inc
out
fs
das
and
mov
jnp
pop
stos
cmp
or
or
mov
sbb
shl
jo
push
mov
jbe
daa
leave
mov
push
neg
inc
mov
fs
lea
pop
mov
jbe
daa
leave
mov
push
repnz
cmp
sar
jp
sahf
fwait
cmp
or
rcl
jns
mov
loopne
das
xor
lock
pop
and
data16
xchg
pusha
adc
jns
sahf
ds
out
jns
pop
ficom
data16
lods
ins
repz
jns
dec
scas
mov
stos
scas
mov
adc
mov
sbb
inc
data16
push
mov
and
arpl
and
and
movs
sahf
sbb
dec
xor
arpl
popa
pop
and
jns
pop
fimul
cli
mov
xor
pop
scas
cmp
mov
xor
pop
lods
add
push
xchg
xchg
fwait
les
lea
jns
sub
shl
retf
mov
and
pop
mov
in
f2xm1
loope
xchg
stos
loop
ss
rcr
movs
sahf
sbb
clc
int
cmp
xor
fwait
out
jns
and
jae
push
xor
pop
movs
mov
popa
pop
scas
cmp
mov
lock
scas
mov
xlat
shl
test
xor
arpl
popa
pop
and
jns
pop
ror
cmc
sti
repnz
scas
cmp
mov
lock
lock
(bad)
jp
stos
lods
ins
jmp
fs
dec
movs
cmp
pop
xchg
sbb
push
sub
popa
pop
sub
jbe
neg
sahf
sbb
repnz
inc
stos
test
jns
in
jae
repnz
fwait
cmp
shr
movs
sahf
sbb
lock
pusha
scas
mov
mov
loopne
pop
mov
or
(bad)
cmp
cmp
or
les
jbe
pop
cmps
fld
and
adc
xor
adc
xor
jns
sbb
or
mov
xor
pop
scas
cmp
xor
hlt
data16
xchg
jne
push
mov
es
int
inc
jns
movs
push
popf
retf
les
and
into
xor
jecxz
jns
js
in
stos
mov
es
or
(bad)
sbb
sub
pop
cmps
jl
out
fs
pop
es
inc
fstp
adc
push
and
cmc
xor
dec
ja
loop
int3
mov
cmp
in
lock
lock
mov
frstor
daa
xchg
or
pop
sub
pop
movs
pushf
stos
outs
cmp
sub
mov
btr
ftst
sbb
movs
fyl2xp1
movs
daa
rep
sbb
xchg
loopne
and
fld
and
mov
sub
movs
(bad)
fbld
xchg
movs
adc
shr
fild
cmps
movs
fadd
sbb
adc
mov
fld
adc
jns
pop
dec
jns
pop
dec
jns
pop
dec
jns
pop
data16
cmps
mov
into
adc
lock
scas
fild
rcl
loopne
push
push
sahf
icebp
out
sbb
sub
int3
ins
jns
xor
hlt
cmps
stos
fild
cmp
adc
out
jns
out
rol
pop
xchg
mov
and
jl
out
fs
xor
cwde
popa
pop
stos
cld
fsub
xor
pop
scas
mov
stos
scas
mov
fsub
fs
(bad)
xchg
movs
jbe
and
stc
retf
push
es
movs
and
loopne
fs
xchg
(bad)
cmp
xlat
mov
sub
es
mov
jns
pop
jne
dec
mov
(bad)
cmp
xor
and
into
ja
pop
es
out
cmps
(bad)
jle
es
add
mov
imul
das
xor
mov
mov
xor
pop
fnstcw
fs
popf
pop
aas
and
sbb
pop
stos
cmp
or
jns
gs
xor
adc
xor
xchg
(bad)
mov
xor
pop
scas
adc
stos
movs
mov
sbb
sub
jo
and
xchg
(bad)
mov
xor
pop
(bad)
mov
xor
pop
jns
jmp
(bad)
neg
addr16
mov
(bad)
in
push
ins
retf
hlt
popa
jns
xor
sub
das
xor
das
movs
push
jno
imul
and
loop
jl
in
stos
mov
inc
pop
mov
pop
dec
jge
pop
stos
cmp
or
or
movs
push
jne
das
cs
and
sahf
ds
jae
(bad)
or
pushf
mov
shl
je
es
data16
jbe
and
and
pop
dec
jns
pop
dec
jns
das
sub
push
es
and
mov
xchg
(bad)
movs
push
gs
pop
(bad)
movs
push
test
dec
outs
jns
push
out
das
movs
push
test
mov
out
xor
fidivr
shl
xchg
into
test
jecxz
jns
loopne
scas
pushf
mov
rcl
test
ds
stos
pop
mov
push
and
popf
loopne
and
fimul
shl
hlt
data16
jbe
cmp
jns
pop
(bad)
movs
push
jno
shr
push
out
daa
imul
sbb
arpl
or
jns
pop
(bad)
movs
push
test
shr
and
or
retf
cmp
jns
imul
xor
push
test
add
and
cmp
mov
lock
scas
mov
jbe
ret
sub
jno
dec
sbb
adc
popf
movs
inc
fisttp
add
jns
mov
and
cmp
fcmovnbe
xchg
jo
es
lea
pop
fimul
imul
enter
dec
popf
es
xor
adc
xor
adc
fs
pop
popa
jns
stc
fisubr
cmp
es
call
fsubr
scas
popa
pop
into
mov
lock
int
mov
pop
jns
jmp
clc
shl
and
and
bound
xlat
xor
ret
lock
in
stos
mov
lods
or
loope
inc
xor
cmps
mov
test
sub
cs
pop
repnz
scas
or
je
rcr
sub
das
ss
and
es
sahf
sub
(bad)
jne
(bad)
mov
fcmovnu
out
enter
or
sbb
das
in
pop
push
es
and
cmp
fist
cmps
inc
and
pop
ss
aam
scas
cmp
shl
repnz
xchg
popa
rcl
jp
push
jbe
push
popf
scas
mov
sub
and
or
mov
cmp
pop
scas
mov
(bad)
in
push
daa
or
push
scas
mov
(bad)
in
jge
out
mov
iret
dec
jne
je
jnp
in
(bad)
and
data16
xor
pop
jne
int3
push
es
pop
fdivp
in
sar
push
jno
arpl
scas
cmp
shl
stos
cwde
btc
mov
jbe
pop
adc
mov
daa
imul
adc
es
adc
into
pop
movs
sub
pop
popa
scas
sbb
mov
sbb
adc
fwait
loop
and
scas
mov
daa
shr
dec
add
cmp
or
es
out
inc
xchg
sub
data16
sbb
repnz
int
test
(bad)
lock
in
jbe
jns
js
in
stos
mov
es
sub
es
or
ret
xor
and
stos
cdq
movs
(bad)
movs
fadd
fsub
fiadd
push
push
into
sub
movs
fsqrt
out
scas
mov
and
(bad)
push
pop
pop
mov
and
fwait
sbb
push
jo
adc
es
call
push
dec
into
mov
cmps
sbb
fsub
aas
jns
pop
rcr
(bad)
repnz
movs
lods
(bad)
sti
movs
fild
fisub
fld
pop
es
xor
cld
sbb
jns
(bad)
xchg
movs
sahf
movs
jno
es
shl
lock
push
jno
pop
daa
jns
mov
cmp
pop
sahf
push
jb
es
shl
lock
arpl
fucomip
xchg
movs
scas
mov
mov
mov
lods
in
jmp
fild
lock
fld
jbe
fs
das
cs
and
es
sahf
adc
fs
out
fiadd
pop
es
out
into
leave
pop
shr
es
lods
(bad)
fstp
push
stos
les
and
fst
mov
pop
es
push
es
ret
rol
add
lahf
sbb
pop
es
mov
fld
ret
cs
sub
jns
(bad)
imul
pop
shr
es
lods
(bad)
fstp
push
stos
les
and
fst
mov
mov
fiadd
pop
es
out
into
popa
pop
shr
es
lods
(bad)
fstp
push
stos
les
and
fst
mov
push
es
push
es
ret
rol
add
lahf
sbb
pop
es
mov
fld
ret
cs
test
and
loop
fsubr
add
xor
fiadd
add
out
and
mov
sti
shl
xchg
mov
push
es
ret
rol
xor
(bad)
fwait
popa
pop
fxch
fbld
bound
(bad)
jno
push
(bad)
cmp
movs
xchg
test
movs
fst
mov
push
es
push
es
ret
rol
xor
(bad)
fwait
popa
pop
fxch
fbld
bound
(bad)
jno
pop
(bad)
cmp
movs
xchg
test
movs
fst
mov
pop
adc
mov
cmp
and
loopne
mov
add
jns
cmp
jns
ret
rol
fsub
cmp
or
es
out
into
mov
es
es
lods
fild
dec
cmps
(bad)
cmp
xlat
fwait
cmps
fsub
gs
xlat
mov
sub
das
repnz
cmps
fld
ret
sbb
sub
mov
and
loop
retf
call
sub
and
mov
(bad)
jl
jns
fldenv
rol
jns
lods
fild
test
fiadd
sbb
mov
cmp
pop
movs
mov
and
call
scas
mov
and
sub
and
mov
(bad)
jl
dec
dec
mov
sbb
xchg
mov
cmp
pop
movs
mov
and
jae
pop
es
mov
xor
jns
out
fiadd
pusha
pop
es
out
into
pop
pusha
pop
shr
es
lods
(bad)
fstp
push
stos
les
and
fst
mov
and
jns
xor
or
shl
sub
(bad)
cmp
or
test
es
out
into
movs
popa
pop
shr
es
lods
(bad)
fstp
push
xchg
(bad)
cmp
movs
xchg
test
movs
fst
mov
sbb
jns
push
es
ret
rol
xor
(bad)
fwait
popa
pop
fxch
fbld
fs
(bad)
jno
enter
jecxz
jns
pop
mov
jl
jns
stc
popa
pop
rol
jns
lods
fild
test
fiadd
sbb
mov
cmp
pop
movs
mov
and
or
xchg
iret
cmp
pop
es
fcomp
popa
push
pop
es
shl
lock
add
cmps
fnstcw
sub
xchg
fistp
cld
(bad)
lods
(bad)
xchg
out
xchg
movs
sub
pop
fs
sbb
cwde
inc
sub
pop
es
ins
mov
aaa
aam
out
and
mov
fsub
loope
je
fwait
jns
movs
fldcw
dec
add
cmp
xlat
fwait
jns
movs
fldcw
retf
test
and
loop
(bad)
call
movs
fild
push
fcompp
int3
xlat
movs
fadd
cmps
pop
es
or
xchg
inc
cdq
popa
pop
jbe
test
es
sahf
ds
shr
jns
mov
cmp
pop
lahf
jae
pop
es
mov
xor
jns
out
fiadd
bound
cli
out
into
and
sub
jns
lods
(bad)
fstp
push
xchg
(bad)
cmp
movs
xchg
test
movs
fst
mov
sbb
jns
push
es
ret
rol
xor
(bad)
fwait
popa
pop
fxch
fbld
addr16
(bad)
jno
(bad)
xchg
movs
cmps
jns
pop
frndint
xlat
movs
fadd
frstor
fild
fsub
fild
and
clc
and
repnz
scas
cld
(bad)
daa
jns
ficomp
jns
fisub
pop
cmps
mov
add
jns
pop
cmp
es
(bad)
xchg
movs
sub
outs
pop
es
(bad)
xchg
movs
scas
cld
iret
movs
fild
jp
fs
(bad)
xchg
movs
jbe
test
es
sahf
sub
scas
scas
fld
ficomp
js
das
fcomip
in
scas
(bad)
xchg
cdq
stos
cld
and
xchg
xchg
cld
loope
fild
fsub
sbb
(bad)
fsub
fiadd
stos
(bad)
xchg
movs
fxch
xlat
movs
fadd
xchg
stos
fld
movs
fldcw
dec
ds
cmp
or
dec
arpl
cli
out
into
ins
arpl
shr
es
lods
(bad)
fstp
push
pop
(bad)
cmp
movs
xchg
test
movs
fst
mov
jp
jns
mov
inc
and
jae
pop
es
mov
xor
jns
out
fiadd
arpl
cli
out
into
mov
sub
jns
lods
(bad)
fstp
push
stos
les
and
fst
mov
stos
fld
pop
frndint
xlat
movs
fadd
stos
fistp
mov
fsub
fld
aam
fsqrt
out
scas
cld
(bad)
sub
scas
movs
fld
and
fst
mov
sbb
mov
inc
and
jae
pop
es
mov
xor
jns
out
fiadd
sbb
es
out
into
pop
sbb
shr
es
lods
(bad)
fstp
push
xchg
(bad)
cmp
movs
xchg
test
movs
fst
mov
fs
push
es
ret
rol
xor
(bad)
fwait
popa
pop
fxch
fbld
sbb
(bad)
jno
push
xchg
test
movs
fst
mov
jae
lock
fwait
inc
and
jae
pop
es
mov
add
jns
cmp
jns
ret
rol
fsub
cmp
or
es
out
into
icebp
sbb
pop
es
lods
(bad)
fstp
push
pop
(bad)
cmp
movs
xchg
test
movs
fst
mov
fs
push
es
ret
rol
xor
in
cdq
popa
pop
fxch
fbld
sbb
(bad)
jno
sbb
jecxz
jns
pop
mov
jl
dec
dec
mov
sbb
xchg
mov
inc
and
mov
dec
pop
es
xor
call
and
daa
inc
and
sbb
pop
es
mov
fld
ret
cs
movs
sbb
(bad)
imul
xchg
test
movs
fst
mov
addr16
push
es
ret
rol
xor
(bad)
fwait
popa
pop
fxch
fbld
sbb
(bad)
jno
push
bound
lods
(bad)
call
aas
mov
fiadd
push
pop
es
out
into
std
push
pop
shr
es
lods
(bad)
fstp
push
stos
les
and
fst
mov
mov
fiadd
push
pop
es
out
sahf
ror
es
shl
lock
sbb
lahf
jae
pop
es
mov
xor
jns
out
fiadd
push
pop
es
out
stos
cld
std
movs
fild
fsub
cmp
or
gs
pop
es
out
into
test
pop
shr
es
lods
(bad)
fstp
push
stos
les
and
fst
mov
mov
fiadd
push
pop
es
out
cmps
mov
retf
in
jns
jecxz
jns
pop
mov
jl
dec
dec
mov
sbb
xchg
mov
inc
and
mov
and
xchg
and
loopne
mov
ss
and
repnz
cmps
fld
cld
sbb
cs
aam
jns
(bad)
imul
jecxz
jns
pop
mov
jl
dec
dec
mov
sbb
xchg
mov
inc
and
mov
and
call
scas
mov
and
fst
mov
data16
push
es
ret
rol
xor
(bad)
fwait
popa
pop
fxch
fbld
sbb
(bad)
jno
pop
sbb
jecxz
jns
pop
mov
jl
jns
mov
pop
rol
jns
lods
fild
test
fiadd
sbb
mov
inc
and
mov
popa
pop
fxch
fbld
sbb
jno
pop
dec
jns
pop
dec
jns
pop
dec
jns
pop
data16
into
add
pop
lock
mov
test
sar
js
shl
xchg
mov
inc
and
jns
out
xchg
movs
jno
fsubr
fiadd
retf
movs
fild
and
fst
fsubr
fiadd
sbb
cli
shl
xchg
sub
es
(bad)
xchg
movs
jns
js
in
stos
mov
es
in
pop
mov
mov
fnstcw
popa
scas
adc
in
arpl
popa
pop
stos
cld
fsub
inc
and
jns
fdivr
cmp
xlat
mov
sub
es
mov
mov
movs
movs
mov
and
arpl
dec
pop
dec
inc
cld
sbb
adc
fs
pop
es
mov
mov
movs
dec
scas
std
sbb
adc
test
mov
cmp
xor
sbb
movs
fsqrt
out
scas
adc
xchg
in
stos
mov
es
or
(bad)
sub
xor
mov
cmps
test
movs
scas
mov
fsub
cmps
inc
and
mov
cmps
retf
(bad)
arpl
pop
and
pop
lock
(bad)
fild
(bad)
shl
lock
std
repnz
scas
mov
retf
in
jns
shl
scas
push
and
popa
shl
das
retf
lock
shl
xchg
mov
dec
and
sub
shr
hlt
ja
and
ja
daa
cmp
movs
scas
adc
mov
dec
and
cld
push
cmps
fld
fsub
lock
fild
fisub
es
ucomiss
scas
sub
xchg
xlat
jb
shr
hlt
ja
daa
hlt
ja
daa
cmp
movs
cmps
mov
dec
pop
(bad)
cmp
mov
dec
and
cld
mov
fld
and
imul
fld
and
mov
pop
es
call
and
pop
stos
cld
xchg
cmps
fld
popa
pop
dec
int
sbb
adc
pop
es
retf
mov
loop
sub
aas
dec
and
mov
and
leave
mov
pop
es
and
sub
cmps
fadd
xchg
cmps
fld
and
int3
mov
fld
fsub
fld
fsub
fld
fsub
fild
shl
scas
cld
mov
call
and
mov
and
xchg
fbld
inc
and
xchg
ss
es
fist
hlt
cmps
cmps
fadd
sbb
xchg
xchg
mov
xchg
movs
cmps
mov
push
dec
jns
fistp
xchg
push
bound
jns
sahf
cmp
aam
and
popf
mov
cmp
cmps
mov
es
cmp
cld
retf
movs
fld
cmps
cmps
fld
in
into
xchg
movs
daa
jns
mov
stos
cld
fwait
movs
fld
fsub
fild
fwait
movs
fld
and
push
adc
xor
adc
xlat
mov
sub
into
and
pop
es
push
mov
xchg
mov
dec
and
xchg
sbb
mov
shl
lock
xchg
in
fisub
fs
daa
clc
cmp
xlat
mov
sub
pop
push
jns
(bad)
imul
movs
es
or
shl
hlt
cmps
cmps
fadd
std
sbb
xchg
pop
outs
es
cdq
das
mov
and
xchg
loopne
es
fisttp
fsub
fild
jmp
std
or
and
fst
pop
es
sahf
retf
fcomp
jae
pop
(bad)
jns
mov
dec
and
jge
pop
es
cmps
cmps
fadd
sub
es
pop
dec
adc
sbb
hlt
cmps
cmps
fadd
lahf
movs
fsqrt
out
sbb
cmp
and
movs
fnstcw
dec
movs
fdivr
fcmovne
ror
es
and
and
movs
fnstcw
fist
xchg
cwde
outs
es
popf
dec
sbb
pop
jo
hlt
imul
int3
xchg
adc
movs
xchg
fstp
movs
fst
test
mov
jne
mov
dec
test
movs
scas
mov
loope
es
mov
jo
test
xor
jle
xor
stos
mov
(bad)
mov
dec
and
mov
mov
pop
(bad)
mov
dec
and
mov
fsubr
ss
xor
es
cwde
inc
lock
jne
sub
jns
cwde
inc
lock
sub
data16
sub
jbe
daa
test
and
stos
cmp
and
scas
mov
and
scas
mov
aas
pop
sub
jecxz
arpl
scas
pop
sub
inc
adc
(bad)
jne
das
cs
out
jae
mov
xchg
pop
dec
es
das
sub
pop
fdiv
addr16
and
jae
mov
or
push
xchg
cmp
xlat
bound
push
xchg
sub
xlat
bound
or
adc
sub
arpl
sub
jae
and
stos
cmp
ins
imul
fwait
cmps
push
jns
lods
shl
mov
mov
dec
pop
jo
outs
push
data16
pop
dec
jns
or
adc
or
jns
pop
es
data16
pop
jns
rcr
mov
shl
stos
popf
jo
mov
jns
pop
fisub
jge
out
mov
imul
retf
mov
jns
or
test
mov
daa
sub
movs
scas
mov
fsub
stos
cld
lahf
mov
mov
sub
clc
cmp
mov
dec
and
mov
mov
es
lods
and
pop
jne
xchg
sahf
mov
pop
movs
mov
cmp
fld
adc
lock
lock
out
enter
lahf
mov
es
fistp
hlt
cmps
call
in
jne
jns
call
stos
popf
jne
xchg
sahf
mov
pop
movs
mov
cmp
fld
adc
clc
int3
std
sub
cmp
push
int
adc
daa
sub
mov
es
enter
jo
jno
jle
cwde
enter
clc
int
jne
and
(bad)
js
shl
sub
daa
jns
mov
dec
and
mov
mov
mov
scas
mov
inc
loope
xchg
pop
(bad)
lock
jae
popa
pop
jne
mov
es
sahf
lock
stc
xchg
shl
lock
push
cld
and
imul
movs
mov
and
jae
pop
es
mov
xor
sar
es
fsub
es
sahf
cs
and
es
push
es
ret
rol
or
lahf
sbb
pop
es
mov
mov
sbb
hlt
sahf
pop
mov
pop
es
out
into
mov
pop
shr
es
lods
(bad)
fstp
ins
dec
stos
les
and
mov
sub
mov
jns
(bad)
jno
mov
inc
and
dec
ret
hlt
cmps
pop
mov
pop
es
out
into
cmc
adc
shr
es
lods
(bad)
fstp
ins
dec
stos
les
and
mov
sub
lock
jno
cmp
jns
jecxz
jns
pop
mov
jl
jae
sub
inc
pop
es
lods
fild
scas
out
cdq
fsub
fs
out
cdq
fsub
es
sahf
xchg
dec
imul
es
cmps
pop
mov
sbb
hlt
cmps
pop
mov
pop
es
out
scas
mov
stos
scas
mov
and
sub
and
mov
(bad)
jl
dec
dec
mov
sbb
hlt
cmps
pop
mov
pop
es
out
dec
jae
sbb
hlt
cmps
pop
mov
pop
es
out
into
mov
pop
shr
es
lods
(bad)
fstp
ins
dec
stos
les
and
mov
sub
mov
loop
dec
pop
(bad)
cmp
xlat
mov
sub
mov
and
loop
stos
stos
daa
mov
pop
shr
es
lods
(bad)
fstp
push
retf
sub
jns
jecxz
jns
pop
mov
les
mov
jle
popa
pop
stos
les
mov
dec
dec
and
mov
popa
pop
stos
cld
and
pop
dec
and
mov
and
jae
pop
es
mov
xor
sar
es
fsub
es
sahf
shl
es
mov
fld
std
sbb
hlt
cmps
pop
mov
pop
es
out
into
mov
pop
shr
es
lods
(bad)
fstp
ins
dec
stos
les
and
mov
sub
push
adc
and
loop
dec
inc
(bad)
cmp
xlat
mov
sub
mov
loop
mov
pop
into
leave
adc
shr
es
lods
(bad)
fstp
ins
dec
stos
les
and
mov
sub
xchg
pop
jns
(bad)
jno
das
sub
cmps
pop
mov
sbb
hlt
cmps
pop
mov
pop
es
out
into
adc
sub
jns
lods
(bad)
fstp
ins
dec
stos
les
and
mov
sub
rcl
jns
(bad)
jno
pop
(bad)
cmp
xlat
mov
sub
sub
jns
(bad)
jno
push
sub
and
mov
(bad)
jl
dec
dec
mov
sbb
hlt
cmps
pop
mov
pop
es
out
sahf
mov
pop
es
shl
lock
fisttp
pop
lahf
xchg
and
loopne
mov
ss
and
hlt
sahf
pop
mov
sbb
hlt
sahf
pop
mov
pop
es
out
into
mov
pop
shr
es
lods
(bad)
fstp
ins
dec
stos
les
and
mov
sub
mov
jns
(bad)
jno
test
cmp
xlat
mov
sub
mov
jns
(bad)
jno
stos
rcr
fsub
push
jns
jecxz
jns
pop
mov
jl
dec
dec
mov
sbb
hlt
cmps
pop
mov
pop
es
out
into
sbb
pop
shr
es
lods
(bad)
fstp
push
retf
adc
jns
jecxz
jns
pop
mov
les
mov
jle
popa
pop
stos
les
mov
arpl
pop
movs
mov
popa
pop
stos
cld
and
jae
and
mov
and
and
and
adc
pop
cmp
not
pop
scas
cld
fild
and
and
cld
and
jae
and
jns
out
cmps
fsub
es
fsub
stc
xchg
mov
push
and
int3
fild
or
cmp
pop
cmps
(bad)
jns
add
mov
imul
pop
jne
je
scas
fs
jno
mov
mov
movs
es
aad
leave
(bad)
es
es
jne
int3
jbe
jns
ucomiss
ja
daa
lock
fild
(bad)
shl
lock
mov
xchg
mov
push
rol
and
sahf
stos
fbld
mov
and
scas
cld
and
sahf
stos
fistp
fsub
dec
jns
fild
xchg
fdiv
dec
pop
daa
jns
xlat
mov
sub
clc
cmp
xor
jnp
pop
cmps
xchg
push
mov
add
push
mov
adc
pop
es
(bad)
xchg
movs
jbe
cmps
out
fild
or
lock
lock
xchg
(bad)
movs
fldcw
scas
fist
xchg
sub
sub
push
mov
adc
(bad)
xchg
movs
jbe
shl
fist
hlt
cmps
cmps
fadd
or
mov
mov
mov
imul
jns
fistp
xchg
ins
je
jns
sahf
cmp
mov
mov
fld
fwait
movs
fld
in
ret
movs
daa
jns
pop
movs
les
add
in
into
xchg
movs
daa
jns
aas
das
jns
lods
shl
fld
cmps
loop
xchg
or
loop
movs
fldenv
scas
fild
hlt
cmps
loop
xchg
or
pop
dec
pop
dec
pop
dec
jns
pop
stos
cld
fbld
xchg
add
es
call
fsubr
mov
pop
lock
lock
xchg
(bad)
movs
fst
xor
clc
cmp
xlat
mov
sub
or
and
loop
in
push
sbb
es
pop
rcr
mov
shl
lock
mov
sub
clc
cmp
mov
push
and
mov
dec
mov
jns
mov
push
and
cld
push
mov
mov
inc
es
jo
push
mov
adc
stos
es
sub
and
and
pop
stos
cld
mov
fld
or
clc
int3
mov
and
daa
adc
fs
fbstp
xchg
push
call
sub
es
fdivp
jns
pop
stos
cld
scas
mov
into
add
movs
fsqrt
out
das
mov
and
jns
out
mov
fsub
fld
and
cld
mov
movs
xchg
in
fisub
fld
push
pop
es
shl
lock
xchg
in
fisub
es
push
clc
cmp
mov
push
and
adc
test
mov
push
and
mov
or
sub
popa
or
repnz
fxch
inc
jo
in
ror
fxch
mov
fld
(bad)
loop
enter
mov
mov
sub
xchg
in
fisub
fld
aam
imul
pop
es
fcomp
jns
rcr
dec
fcmovnbe
loope
cmps
out
fild
or
adc
movs
xchg
fstp
movs
fst
stos
mov
push
sbb
scas
mov
fsub
repnz
(bad)
fild
jmp
cli
iret
dec
jne
je
jnp
pushf
es
arpl
loope
xor
sub
xor
jns
shl
fsubr
sub
test
fdivp
ja
sub
into
jmp
in
ficom
shl
sub
adc
pop
jne
sbb
jns
das
sub
ja
daa
sub
js
jns
or
or
(bad)
lock
arpl
dec
adc
cmp
xor
adc
mov
push
and
mov
lock
jns
dec
sbb
lock
scas
mov
jne
jae
and
xchg
pop
jge
jns
pop
ficom
(bad)
shl
stos
popf
jns
js
in
stos
mov
es
mov
or
push
lock
lock
and
or
lock
ror
imul
pusha
rcr
dec
fcmovnbe
loope
fcom
jns
fbld
mov
movs
jbe
retf
mov
jns
xor
xchg
stos
cld
and
pusha
leave
fsub
fld
stos
stos
int
dec
pop
jo
cwde
jb
jns
pushf
int
jl
out
mov
iret
dec
jno
shl
add
pop
fdivp
in
loope
fstp
xchg
dec
rcr
dec
fcmovnbe
loope
xchg
pop
fsubr
dec
pop
clc
cmp
xlat
arpl
and
cmp
or
sbb
jns
movs
adc
sbb
xchg
adc
jns
in
arpl
dec
movs
sti
cmp
xlat
arpl
and
mov
jae
adc
es
outs
or
bound
jge
pop
es
aam
inc
jns
cmp
cmp
push
xchg
cmp
(bad)
je
aad
mov
imul
loop
adc
(bad)
mov
shl
stos
pushf
dec
jns
pop
dec
jns
pop
dec
jl
pop
dec
jns
pop
dec
jns
retf
and
adc
xor
adc
mov
push
and
mov
adc
es
xor
dec
pop
jno
adc
es
mov
es
stos
rcr
in
daa
cs
push
dec
mov
and
jns
xor
cs
push
dec
pextrw
addr16
xor
jns
xor
cs
push
dec
aas
iret
data16
add
jns
xor
cs
push
dec
or
addr16
adc
jns
fcmovne
or
and
push
out
pop
into
dec
or
adc
or
mov
popa
pop
into
pop
or
adc
or
push
fsub
into
ins
or
clc
int
adc
cs
push
dec
adc
addr16
movs
add
xor
cs
push
dec
rol
addr16
mov
jns
xor
cs
push
dec
mov
fs
test
jns
xor
cs
push
dec
mov
xchg
add
add
cdq
iret
push
or
fld
lock
fiadd
and
test
sbb
adc
frstor
dec
cmps
(bad)
addr16
or
jns
xor
xchg
fiadd
pop
and
inc
mov
frstor
dec
cmps
(bad)
fs
je
jns
xor
xchg
jbe
cmp
mov
pop
and
pop
mov
frstor
dec
cmps
(bad)
addr16
push
add
rcr
push
fcmovnbe
loope
fbld
es
enter
sbb
and
iret
(bad)
arpl
test
outs
cmp
arpl
cdq
add
movs
adc
sbb
xchg
in
es
and
(bad)
arpl
test
outs
push
out
pop
into
lds
movs
adc
sbb
xchg
cmp
jbe
cmp
xor
(bad)
arpl
test
outs
push
out
pop
into
loope
pop
es
movs
adc
sbb
xchg
pop
jl
jns
inc
mov
(bad)
arpl
test
outs
mov
or
loopne
scas
pushf
mov
in
pop
jns
scas
adc
scas
sti
cmp
movs
push
jno
cld
fiadd
iret
xchg
mov
test
movs
movs
mov
bound
jns
mov
pop
and
mov
pop
(bad)
sub
scas
pop
and
jns
outs
adc
bound
jns
shl
or
shr
test
ficom
stos
jbe
and
adc
pop
cmps
sub
(bad)
cmp
xor
movs
popa
pop
dec
jns
pop
es
js
es
push
xchg
and
xchg
outs
mov
sub
lods
cmp
jno
mov
dec
dec
ins
dec
pop
es
jae
loop
popa
pop
dec
mov
and
test
sbb
clc
int3
push
push
jns
xor
xchg
outs
mov
xchg
push
xchg
and
mov
and
cmp
jno
mov
or
push
es
jae
cli
cwde
popa
pop
dec
mov
and
test
sbb
adc
xor
and
adc
xor
adc
xor
adc
xor
jns
pop
dec
jno
dec
into
pop
add
xor
das
dec
push
dec
daa
lds
retf
fadd
jns
xor
xchg
outs
mov
xchg
push
xchg
and
adc
ds
push
dec
pop
es
xor
popa
pop
dec
mov
and
test
and
adc
movs
adc
xor
add
add
dec
jns
pop
jbe
cmp
sti
cmp
xor
xchg
sbb
es
cli
test
and
fimul
stos
popf
dec
jns
outs
adc
bound
jns
outs
(bad)
fldenv
dec
imul
xchg
pop
dec
push
dec
pop
es
xor
movs
popa
pop
dec
mov
and
test
sbb
adc
movs
adc
sbb
adc
movs
adc
xor
pop
js
pop
dec
(bad)
and
adc
xor
jns
or
call
es
xchg
pop
into
mov
aaa
lds
dec
pop
(bad)
addr16
pop
(bad)
fs
ds
sbb
and
xor
and
sub
(bad)
cmp
xor
jns
aam
jns
stc
into
in
pop
cmps
mov
dec
and
cmp
xor
adc
es
mov
pop
and
or
sbb
adc
xor
and
dec
retf
(bad)
addr16
ins
add
xor
xchg
outs
mov
xchg
cmp
js
pop
dec
dec
dec
lock
xor
pop
cmps
sub
(bad)
cmp
xor
jns
jl
jns
stc
cmps
fsub
dec
jns
outs
adc
bound
jns
outs
inc
fldenv
dec
push
and
adc
xor
and
adc
pop
cmps
sub
(bad)
cmp
xor
jns
mov
jns
stc
or
bound
inc
fldenv
adc
sbb
adc
movs
adc
xor
sbb
jns
xor
jns
xor
jns
or
call
es
xchg
pop
into
aad
pop
fidiv
mov
into
lock
xchg
outs
mov
xchg
push
xchg
and
adc
movs
es
xor
js
pop
dec
jns
pop
jbe
jo
fs
cmp
and
es
inc
jns
jns
xchg
and
xchg
outs
mov
xchg
push
xchg
and
adc
js
pop
dec
mov
and
sub
cli
cmp
xor
movs
popa
pop
dec
jns
je
jns
stc
push
loopne
pop
dec
jns
outs
adc
bound
jns
outs
(bad)
fldenv
dec
imul
pop
js
pop
dec
sbb
jae
xor
mov
and
test
and
adc
movs
adc
xor
jo
imul
jns
xor
jns
or
call
es
xchg
pop
into
lds
pop
fidiv
pop
(bad)
addr16
pop
(bad)
fs
inc
dec
push
and
adc
dec
dec
jns
fidiv
(bad)
mov
cli
cmp
xor
jnp
pop
into
stc
add
fisub
pop
(bad)
addr16
pop
(bad)
fs
inc
dec
sti
and
adc
pop
es
dec
dec
jns
fidiv
mov
fs
pop
cli
cmp
xor
jnp
pop
into
cmp
aas
iret
data16
lods
pop
ins
and
jns
outs
adc
bound
jns
outs
inc
fldenv
dec
popa
dec
jb
movs
and
adc
xor
jns
or
ret
adc
xchg
pop
and
and
test
sbb
adc
movs
adc
sbb
adc
movs
adc
sbb
adc
xor
(bad)
pop
es
dec
dec
jns
fidiv
(bad)
mov
cli
cmp
xor
jnp
pop
into
mov
pop
fiadd
lds
dec
pop
(bad)
addr16
pop
(bad)
addr16
dec
dec
loop
pop
adc
inc
dec
jns
fidiv
rol
cmp
xor
xchg
mov
es
ret
and
scas
and
retf
fadd
scas
pushf
mov
in
ss
cmps
mov
dec
scas
sti
cmp
movs
push
jno
sbb
xchg
shl
adc
xchg
mov
mov
movs
movs
mov
bound
inc
jne
es
shl
stos
popf
dec
jns
outs
cs
pop
into
pop
add
hlt
data16
jbe
retf
inc
push
jns
fcmovnbe
ror
adc
movs
adc
sbb
adc
or
cmp
jno
lea
arpl
dec
pop
dec
jns
pop
es
jae
cli
cwde
popa
pop
dec
cwde
(bad)
sbb
adc
pop
es
mov
(bad)
fldenv
dec
jns
outs
adc
bound
jns
xor
repnz
into
sbb
aaa
xor
jns
or
clc
sbb
adc
xchg
pop
into
leave
add
fisub
lds
dec
pop
(bad)
addr16
pop
(bad)
addr16
jbe
jns
shl
or
(bad)
cli
retf
ds
jb
xor
sub
sub
(bad)
cmp
xor
movs
popa
pop
dec
jns
sub
jns
stc
inc
fldenv
dec
jns
pop
dec
jns
pop
dec
jl
pop
dec
jns
pop
dec
jns
out
jns
xor
adc
xor
adc
mov
pop
and
mov
and
js
xor
xchg
pop
mov
pop
and
jns
outs
adc
bound
jns
outs
inc
fldenv
dec
sbb
dec
dec
dec
jp
fidiv
(bad)
mov
cli
cmp
xor
xchg
and
jns
mov
cmp
rcr
dec
fcmovnbe
loope
pop
xchg
pop
dec
cmp
pop
xchg
mov
cmp
mov
and
or
sbb
adc
xor
and
dec
retf
(bad)
addr16
cld
cmp
ficomp
jmp
push
dec
dec
jns
pop
dec
aaa
and
xchg
mov
cmp
mov
and
ins
dec
pop
dec
jns
adc
jns
movs
adc
push
inc
es
pop
(bad)
addr16
pop
(bad)
fs
jbe
jns
xor
aaa
xor
pop
cmps
sub
(bad)
cmp
xor
jns
cmp
jns
stc
cmps
fsub
scas
adc
pop
(bad)
addr16
pop
(bad)
fs
jbe
jns
xor
adc
xor
jp
fidiv
(bad)
mov
cli
cmp
xor
xchg
add
es
jbe
cmp
mov
mov
movs
dec
jns
outs
adc
bound
jns
outs
(bad)
fldenv
dec
imul
dec
adc
pop
es
pop
es
xor
popa
pop
dec
mov
and
test
aam
dec
jns
xor
xchg
outs
mov
xchg
push
xchg
and
adc
jns
pop
dec
mov
and
sub
cli
cmp
xor
movs
popa
pop
dec
jns
lock
stc
push
loopne
pop
dec
jns
outs
adc
bound
jns
outs
(bad)
fldenv
dec
imul
xchg
pop
dec
sbb
jae
xor
mov
and
test
and
adc
movs
adc
xor
jo
call
jns
xor
jns
or
call
es
xchg
pop
into
inc
cmp
stc
fs
pop
(bad)
addr16
pop
(bad)
addr16
dec
dec
popf
and
adc
pop
es
inc
dec
jns
pop
jbe
pop
and
xor
xchg
fadd
jns
xchg
and
fimul
shl
adc
movs
adc
sbb
adc
movs
adc
xor
fstp
pop
dec
xchg
pop
adc
or
clc
sbb
adc
xchg
pop
into
mov
cmp
jns
pop
(bad)
addr16
pop
(bad)
fs
inc
dec
sti
and
adc
xor
adc
pop
cmps
sub
test
and
daa
movs
popa
pop
dec
jns
pop
es
movs
inc
es
inc
mov
and
xchg
outs
mov
xchg
cmp
adc
xor
aaa
xor
jns
or
ret
adc
xchg
pop
and
and
test
sbb
clc
aam
ja
and
xchg
outs
mov
xchg
cmp
adc
jns
aaa
xor
jns
or
ret
adc
xchg
pop
and
and
test
sbb
adc
movs
adc
sbb
adc
movs
adc
xor
mov
cmp
pop
adc
or
clc
sbb
adc
and
pop
fidivr
call
fsub
es
add
mov
iret
inc
jne
je
imul
sahf
sub
(bad)
shl
stos
popf
dec
jns
fisub
jns
xor
adc
pop
es
fsubr
cs
mov
jns
pushf
movs
xchg
push
mov
adc
or
aad
pop
es
leave
into
gs
es
retf
cwde
aas
jns
fld
and
es
pop
(bad)
sub
pop
fisubr
fsubr
adc
out
fs
pop
es
mov
fcmovnu
movs
movs
mov
(bad)
shl
stos
popf
pop
and
sub
and
std
cmp
xor
popa
pop
(bad)
movs
push
jno
and
xchg
(bad)
popa
stos
pop
fdivp
fistp
lock
pop
and
xor
hlt
data16
dec
inc
xchg
sbb
adc
pop
es
retf
fld
popa
jl
jge
loopne
scas
pushf
mov
pop
jne
popf
sbb
scas
adc
(bad)
dec
rcl
loopne
in
dec
jns
xor
and
dec
popa
and
jge
pop
shr
jns
lods
fcomip
lock
mov
dec
dec
les
pop
fld
cmp
stc
pop
movs
and
xor
dec
popa
pop
stos
cld
and
punpcklwd
pop
cmps
xchg
dec
and
jns
daa
fnstcw
dec
dec
mov
pop
fld
cmp
stc
pop
movs
and
xor
enter
cld
and
shr
pop
cmps
add
pop
push
push
and
mov
sub
test
jns
ficomp
and
jmp
jns
fbld
xchg
movs
jbe
in
es
lods
aas
das
and
add
pop
push
push
and
mov
sub
lock
ficomp
sub
aaa
adc
fbld
xchg
movs
jbe
mov
es
daa
fnstenv
dec
dec
fist
pop
fld
xor
es
pop
movs
sub
xor
stc
enter
cld
and
inc
outs
and
mov
mov
fld
fcom
push
and
mov
sub
sbb
jns
ficomp
das
das
aaa
adc
call
es
movs
jbe
or
jns
daa
fnstenv
dec
inc
xchg
sbb
hlt
cmps
pop
fld
xor
es
pop
movs
sub
xor
popa
pop
stos
cld
and
fld
pop
dec
jns
pop
dec
cmp
sbb
adc
fs
fbld
xchg
movs
jbe
and
addr16
enter
xor
(bad)
xchg
sbb
adc
addr16
or
out
sub
jns
pop
es
out
scas
mov
stos
scas
mov
fadd
sub
mov
lods
or
in
ds
sub
mov
shl
stos
popf
scas
mov
mov
and
and
retf
pop
leave
xchg
(bad)
jno
call
inc
inc
es
add
mov
pop
es
mov
es
or
(bad)
jno
mov
stos
stos
jns
and
xchg
cmp
xlat
mov
sub
pusha
xor
mov
arpl
pop
lahf
jbe
pop
es
mov
fld
fsub
mov
popa
pop
stos
cld
into
lods
fld
and
and
(bad)
popf
aam
f2xm1
in
fwait
mov
movs
fnstcw
dec
dec
mov
cmps
mov
xchg
or
popf
ss
es
sahf
test
push
push
and
mov
sub
nop
xor
ficomp
jge
dec
dec
js
sbb
hlt
cmps
mov
xchg
or
leave
ss
es
sahf
test
push
push
and
mov
sub
int3
xor
rcl
mov
shl
lock
fwait
mov
movs
fnstcw
dec
dec
dec
nop
sbb
hlt
cmps
mov
xchg
or
or
pop
es
sahf
test
push
push
and
mov
sub
or
jns
ficomp
jno
dec
dec
adc
cmps
mov
xchg
or
inc
ss
lock
rol
sahf
test
push
push
and
mov
sub
dec
xor
ficomp
jae
dec
dec
rcl
mov
xchg
or
test
pop
es
sahf
test
push
push
and
mov
sub
mov
fwait
mov
movs
fnstenv
dec
dec
xchg
nop
sbb
hlt
cmps
mov
xchg
or
mov
pop
es
in
pop
jns
ficomp
je
dec
dec
jp
sbb
hlt
cmps
mov
xchg
or
shl
pop
es
sahf
test
push
push
and
mov
sub
aam
jns
xor
popa
pop
stos
cld
into
lods
fld
fsub
es
sub
retf
popa
pop
into
xchg
iret
movs
fsqrt
out
scas
cld
retf
lods
fld
fsub
fwait
xchg
aam
fnstcw
fidiv
mov
stos
scas
mov
and
mov
sbb
xchg
mov
sahf
lock
mov
xchg
push
out
cmps
out
jns
mov
jnp
pop
cmps
(bad)
fbld
mov
stc
sahf
cmps
fiadd
or
jns
out
test
movs
sbb
cmps
inc
daa
jns
pushf
mov
jns
stos
daa
mov
mov
adc
fbld
mov
mov
(bad)
into
and
loopne
cmp
mov
fdivr
mov
mul
stos
popf
popa
inc
sahf
mov
mov
cli
push
cmp
dec
dec
retf
and
or
popa
pop
stos
cld
fbld
popa
and
(bad)
jge
es
retf
and
cmp
fbld
xor
pop
movs
mov
and
jns
(bad)
sbb
dec
es
lods
scas
inc
and
cld
fbld
mov
fbld
outs
and
jp
sbb
hlt
cmps
cmps
fiadd
xor
es
out
stos
cld
fbld
ins
and
cld
fbld
and
scas
(bad)
sbb
and
fiadd
mov
sahf
adc
xlat
mov
sub
nop
xor
xor
adc
and
fiadd
mov
sahf
sub
push
mov
hlt
cmps
cmps
fiadd
jae
daa
outs
and
lock
mov
(bad)
js
shl
cli
sahf
mov
sub
or
out
fiadd
sbb
adc
and
fiadd
or
jns
sahf
adc
fiadd
jl
es
(bad)
xchg
movs
jbe
jl
es
(bad)
mov
movs
int
test
dec
cmps
fadd
test
dec
cmps
fadd
(bad)
dec
sti
lods
fld
aad
pop
jns
movs
xchg
sbb
cmps
fadd
stc
sbb
hlt
cmps
cmps
fadd
xor
dec
stos
cld
fbld
shr
pop
scas
cld
imul
fiadd
ror
test
repnz
movs
stos
add
arpl
scas
cld
xlat
mov
fiadd
xchg
scas
fiadd
and
cld
fbld
mov
pop
stos
(bad)
fbld
(bad)
(bad)
daa
cs
shl
jns
fcmovnbe
pushf
sbb
hlt
cmps
mov
dec
jns
out
rol
push
sbb
adc
xor
xchg
test
es
mov
imul
stos
cld
fbld
fxch
iret
mov
jmp
(bad)
loop
stos
cdq
das
mov
fsub
fld
and
enter
adc
cmp
jns
add
mov
movs
fldenv
jge
out
mov
(bad)
loop
push
pop
into
xchg
xor
sub
popf
push
sbb
clc
loopne
add
sar
push
sti
shl
adc
pop
dec
js
inc
es
push
fild
mov
pop
dec
es
pop
into
dec
ss
and
lds
fwait
inc
jle
and
retf
xchg
shl
mov
and
es
xor
bound
jmp
fcomp
jns
retf
and
into
sbb
retf
adc
jns
fcmovne
fs
pop
adc
pop
es
fist
xchg
into
test
pop
adc
xor
cld
xchg
mov
xchg
adc
fsub
fld
adc
jns
pop
push
int
pop
cs
cs
cmp
movs
and
xchg
fs
mov
fld
aaa
pop
es
lock
inc
imul
fdivr
mov
mul
stos
popf
movs
mov
mov
retf
xchg
pushf
mov
js
ins
into
loope
pop
es
out
xchg
fsub
sub
mov
btr
fchs
sbb
stc
retf
xchg
fisub
js
fist
jno
call
and
scas
mov
sub
movs
(bad)
fisttp
sti
pop
(bad)
lock
mov
sub
xchg
and
jmp
mov
xchg
pop
ins
and
jns
fistp
hlt
cmps
jmp
xchg
or
or
cmps
(bad)
fmul
into
mov
movs
fxtract
cmps
stc
retf
xchg
or
sbb
movs
fsqrt
out
scas
mov
dec
pop
stos
cld
mov
mov
push
or
mov
shl
lock
daa
xchg
push
out
cmp
xor
mov
arpl
addr16
in
jns
frstpm(287
add
es
sahf
cmp
xchg
xlat
adc
sbb
rol
es
cmp
adc
retf
and
loopne
popa
pop
dec
or
dec
es
out
xchg
fsub
fs
inc
es
test
pop
stos
cdq
dec
sar
sbb
adc
pushf
cld
cmp
xor
jmp
xor
hlt
sahf
mov
adc
sti
sbb
rol
es
cmp
adc
retf
and
loopne
popa
pop
dec
jns
sbb
xchg
or
jns
sahf
data16
sahf
in
xchg
xlat
adc
sub
jns
jmp
jns
pop
dec
jns
pop
dec
jns
pop
dec
jns
pop
adc
les
retf
hlt
sub
shl
dec
pop
dec
jns
pop
jbe
loopne
es
cdq
(bad)
pop
loope
fwait
movs
sub
xlat
arpl
jae
mov
sub
cmp
jns
xlat
stos
int3
int3
movs
fsqrt
jmp
data16
pop
pop
es
xor
hlt
push
loop
sub
movs
jno
push
out
into
xchg
sub
adc
xlat
arpl
jae
and
sar
xchg
xchg
hlt
push
es
pop
sahf
xchg
es
data16
hlt
cmps
out
leave
xchg
or
icebp
xor
hlt
scas
out
leave
xchg
fldz
xchg
sbb
das
fist
and
push
shl
les
movs
push
int
shr
and
es
data16
adc
xor
fwait
popa
pop
(bad)
mov
jbe
pop
(bad)
mov
ja
pop
scas
mov
scas
pop
(bad)
movs
popa
pop
scas
cmp
sti
adc
bound
cmp
xlat
and
call
adc
mov
jbe
pop
scas
cmp
loop
aaa
and
call
lods
cld
xchg
mov
xchg
pop
adc
mov
jbe
pop
scas
cmp
popf
arpl
dec
pop
into
shl
pop
es
lahf
pop
es
fcmovne
out
pop
es
and
cmp
pop
es
xlat
arpl
jae
(bad)
jbe
pop
dec
jns
outs
adc
bound
jns
pop
dec
jns
pop
dec
jns
pop
dec
jns
nop
es
xchg
mov
es
cmp
jns
pop
mov
leave
popa
pop
dec
jns
pop
into
and
mov
retf
fsub
scas
je
pop
sbb
pop
cmps
or
pop
into
dec
cs
adc
fs
mov
je
pop
scas
cld
(bad)
mov
xchg
lods
(bad)
repnz
xchg
shl
lock
out
jne
pop
dec
js
movs
mov
into
movs
fnstcw
fcomp
jns
fcmovne
cdq
push
pop
es
cmps
loop
xchg
or
xchg
dec
int
pop
dec
add
sbb
adc
fs
pop
es
mov
in
fsub
out
and
add
in
dec
int
pop
daa
jns
pop
into
loope
movs
f2xm1
sti
pop
(bad)
lock
mov
sub
dec
jns
nop
push
cmp
xor
adc
mov
ja
pop
jbe
lods
push
es
fisttp
adc
xor
adc
sub
dec
pop
dec
jns
lods
sub
or
or
pop
adc
xor
js
pop
dec
js
outs
es
pop
into
sbb
xlat
arpl
and
mov
scas
pop
ret
in
jns
xor
adc
xor
hlt
mov
js
es
call
loope
es
mov
es
or
(bad)
scas
sub
dec
mov
pop
lods
cmp
(bad)
imul
pop
ja
mov
daa
jns
mov
jno
pop
sbb
pop
es
sub
and
js
pop
push
bound
dec
daa
jns
push
stos
fsubr
pop
es
sbb
jns
fisub
in
sub
cli
push
xor
std
stc
pop
es
scas
sti
cmp
movs
adc
xchg
sbb
xchg
sbb
fld
fsub
scas
cld
out
fld
(bad)
sbb
xchg
mov
popf
fsub
mov
hlt
cmps
sbb
fmul
fxch
retf
cmps
fld
and
jbe
fbld
jns
xlat
mov
sub
outs
(bad)
fldenv
into
sub
cs
repnz
mov
mov
cli
retf
pop
lods
in
repz
fld
fsub
lods
cld
(bad)
cmps
fld
fsub
mov
fisub
fild
adc
daa
repnz
mov
mov
sub
movs
or
xchg
adc
movs
adc
mov
jns
mov
movs
inc
inc
out
fs
push
mov
fadd
fs
xor
js
shl
cli
push
ds
cmp
pop
cmps
inc
push
out
fs
das
sub
and
jg
push
sub
cld
pop
pop
es
outs
dec
int
pop
into
daa
lds
and
rcr
dec
fcmovnbe
loope
and
addr16
pop
cs
push
and
xor
xchg
and
jns
adc
jns
sti
es
pop
pop
cmp
das
xchg
into
imul
imul
in
or
cmp
shl
clc
aam
sub
popa
and
sbb
or
sbb
or
mov
popa
and
punpcklwd
in
sbb
or
sbb
or
sbb
or
mov
popa
and
sbb
jbe
mov
jns
xor
xchg
into
xchg
das
pop
repnz
mov
and
xor
fld
popa
and
sbb
or
xor
or
mov
jne
pop
dec
xchg
movs
xchg
into
(bad)
pop
es
int3
sbb
jns
fld
jns
inc
test
movs
es
cmps
mov
into
in
pop
lock
mov
xchg
mov
jg
pop
scas
and
add
jns
fndisi(8087
lods
sub
es
pop
es
fbld
xchg
movs
jbe
push
mov
cmp
mov
jae
pop
cmps
les
movs
fld
and
adc
fs
pop
into
sbb
pop
xchg
mov
cmp
mov
jb
pop
iret
mov
pop
es
aam
adc
shl
icebp
cmps
scas
fild
fisub
push
int
pop
daa
jbe
retf
es
xor
jns
pop
stos
cld
and
adc
sbb
xchg
lods
push
es
xlat
daa
xchg
movs
movs
mov
sbb
and
daa
adc
fs
(bad)
daa
xchg
movs
jne
and
fld
fsub
dec
jns
pop
dec
dec
stc
sbb
adc
mov
jae
pop
(bad)
fs
and
jns
mov
jl
pop
scas
adc
fbld
xchg
movs
jbe
cmps
scas
fild
stc
sbb
hlt
cmps
scas
fild
das
pop
es
out
dec
xchg
pop
es
cmps
pop
fld
aas
iret
data16
movs
das
jns
ficomp
jns
jp
jns
pop
dec
ja
sbb
adc
mov
jae
pop
(bad)
data16
dec
sub
and
stos
hlt
and
fnstcw
mov
mov
push
adc
xor
adc
and
into
dec
sub
xchg
inc
mov
and
iret
mov
cmps
pop
fld
sub
mov
repz
pop
daa
xchg
movs
sbb
pop
sbb
jp
jns
pop
dec
sahf
cli
sbb
adc
mov
jo
pop
(bad)
data16
clc
das
jns
mov
jge
pop
cmps
cld
and
mov
inc
xor
lahf
lock
lock
mov
sub
movs
jbe
push
and
rol
push
es
sahf
ss
pop
es
fbld
xchg
movs
jbe
push
fiadd
jo
pop
cmps
les
movs
fld
and
es
and
into
add
push
fiadd
jo
pop
iret
jbe
pop
shr
jns
mov
fld
and
mov
sub
cld
cmp
xlat
mov
sub
ins
sub
imul
mov
sub
outs
or
bound
fldcw
pop
es
sahf
pop
fld
dec
pop
dec
jns
repnz
cmp
xor
xchg
sub
jns
outs
or
bound
shr
es
mov
fbld
xchg
movs
jbe
cmps
scas
fild
cli
sbb
hlt
cmps
scas
fild
sub
cli
out
dec
xchg
pop
es
cmps
pop
fld
or
addr16
fs
ficomp
jns
jp
jns
pop
dec
adc
sbb
adc
mov
jno
pop
(bad)
addr16
or
jns
mov
jp
pop
stos
hlt
and
fnstcw
mov
mov
push
adc
xor
adc
and
into
or
push
jb
cmp
mov
jno
pop
iret
jle
pop
es
fcomp
inc
sub
mov
repz
pop
daa
xchg
movs
sbb
pop
sbb
jp
jns
pop
dec
push
cli
sbb
adc
mov
jno
pop
(bad)
addr16
mov
out
jnp
pop
cmps
cld
fsub
xchg
movs
fld
sub
lock
mov
sub
movs
jbe
push
and
rol
push
es
sahf
ss
pop
es
fbld
xchg
movs
jbe
push
jp
cmp
mov
jle
pop
cmps
les
movs
fld
and
adc
and
into
lds
xchg
jp
cmp
mov
jle
pop
iret
and
mov
fcomp
inc
sub
mov
repz
pop
daa
xchg
movs
sbb
pop
sbb
jp
jns
pop
dec
xchg
sti
sbb
adc
mov
jle
pop
(bad)
addr16
jo
jns
mov
jnp
pop
cmps
cld
frstor
js
movs
fsqrt
jmp
data16
pop
pop
es
push
nop
in
frstor
shr
(bad)
test
movs
lods
cld
retf
cmps
fld
and
mov
sub
cld
cmp
xlat
mov
sub
dec
das
jns
(bad)
imul
movs
lods
cld
(bad)
cmps
fld
dec
pop
dec
jge
pop
dec
jns
pop
es
xor
bound
in
pop
lock
scas
fadd
and
xchg
mov
jl
pop
cmps
inc
push
out
fs
das
popa
hlt
cs
cmp
fldz
xchg
sbb
das
fcomip
loopne
es
mov
fild
adc
data16
out
rol
es
adc
xlat
mov
sub
dec
mov
sbb
xchg
mov
jl
pop
stos
hlt
(bad)
cmps
fld
mov
mov
(bad)
test
movs
je
scas
(bad)
rol
scas
fadd
and
jns
(bad)
test
movs
jbe
and
(bad)
fwait
popa
pop
fxch
xlat
movs
fld
and
fidivr
shl
xchg
mov
jge
pop
(bad)
addr16
in
jns
xor
adc
xor
adc
xor
adc
pop
cmp
mov
and
scas
cld
xlat
movs
fld
and
jnp
pop
dec
jns
out
rol
daa
pop
es
cs
and
out
xchg
sbb
das
fcomip
loopne
es
mov
fild
mov
fs
out
rol
es
adc
xlat
mov
sub
dec
xchg
sti
sbb
xchg
mov
jge
pop
fxch
xlat
movs
fld
and
es
pop
lock
lock
and
daa
xor
popa
pop
dec
add
sbb
adc
fs
pop
es
mov
repnz
and
and
scas
adc
cmps
fld
fsubr
xor
das
movs
push
jno
test
jns
add
ss
rol
cli
iret
push
jne
je
push
jno
sub
retf
in
jb
pop
rcr
in
arpl
pop
daa
jns
push
mov
cli
pop
dec
das
jbe
cwde
es
popa
adc
sbb
or
movs
adc
test
jns
cld
push
jns
lods
shl
scas
scas
mov
bound
jb
outs
cmps
fsub
into
icebp
daa
pop
es
push
fiadd
xchg
jbe
cmp
mov
jge
pop
sbb
jns
push
(bad)
data16
cmp
jns
rcr
push
fcmovnbe
loope
push
inc
mov
and
sub
cmp
mov
jge
pop
sbb
jns
push
(bad)
addr16
ins
and
popa
adc
sbb
or
ficomp
or
push
(bad)
addr16
inc
and
rcr
push
fcmovnbe
loope
push
jp
cmp
das
xor
push
sub
jb
outs
mov
and
popa
adc
and
sbb
lock
lock
adc
sbb
or
sar
inc
mov
jbe
cmp
das
and
ds
cmp
popa
adc
sbb
or
sar
jns
sbb
inc
push
jb
cmp
das
and
and
jg
pop
es
push
jp
cmp
das
and
ds
cmp
popa
adc
sbb
or
sar
gs
cs
push
dec
(bad)
movs
push
jne
or
add
das
loop
dec
and
sahf
stos
pop
shl
in
js
jmp
xchg
push
aad
and
mov
and
xchg
push
aad
and
mov
and
xchg
dec
aad
and
mov
and
xchg
dec
aad
and
mov
and
xchg
jp
cmp
retf
and
xchg
jbe
cmp
retf
and
xchg
push
cmp
retf
and
xchg
outs
aad
and
mov
and
sub
mov
es
shl
stc
sbb
push
pop
dec
js
and
es
out
scas
cmp
push
out
or
loope
enter
sbb
push
or
popa
jbe
pop
das
mov
add
aad
and
out
es
pop
push
test
es
xor
cs
pop
jbe
sub
in
mov
pop
or
pop
es
daa
jle
jns
pop
es
jae
cld
daa
jle
cwde
and
bnd
cs
jecxz
fld
shl
shl
addr16
out
test
add
(bad)
mov
hlt
shl
daa
cwde
cs
pop
xchg
sbb
cmp
retf
and
xchg
push
aad
and
mov
and
xchg
adc
cmp
retf
and
xchg
push
aad
and
mov
and
xchg
or
cmp
retf
and
xchg
push
aad
and
mov
and
xchg
add
cmp
retf
and
xchg
push
aad
and
mov
and
xchg
cmp
cmp
retf
and
xchg
ds
and
mov
and
xchg
xor
cmp
retf
and
xchg
ss
and
mov
and
xchg
sub
cmp
retf
and
xchg
cs
and
mov
and
xchg
and
cmp
retf
and
xchg
es
and
mov
and
xchg
fcmovbe
cmp
retf
and
xchg
(bad)
cmp
retf
and
xchg
rcl
cmp
retf
and
xchg
(bad)
aad
and
mov
and
xchg
retf
and
mov
and
xchg
into
aad
and
mov
and
xchg
ret
and
mov
and
xchg
(bad)
aad
and
mov
and
xchg
cli
aad
and
mov
and
xchg
(bad)
aad
and
mov
and
xchg
repnz
and
mov
and
xchg
not
cmp
retf
and
xchg
jmp
and
xchg
out
aad
and
mov
and
xchg
loop
cmp
retf
and
xchg
out
cmp
retf
and
xchg
call
and
xchg
sahf
aad
and
mov
and
xchg
xchg
aad
and
mov
and
xchg
xchg
aad
and
mov
and
xchg
mov
cmp
retf
and
xchg
mov
cmp
retf
and
xchg
adc
and
mov
and
xchg
xchg
cmp
retf
and
xchg
mov
mov
and
xchg
mov
mov
and
xchg
mov
cmp
retf
and
xchg
mov
cmp
retf
and
xchg
mov
mov
and
xchg
cmps
aad
and
mov
and
xchg
pop
sar
and
mov
and
xchg
pop
sar
and
mov
and
xchg
push
sar
and
mov
and
xchg
push
sar
and
mov
and
xchg
dec
sar
and
mov
and
xchg
dec
sar
and
mov
and
xchg
inc
sar
and
mov
and
xchg
inc
sar
and
mov
and
xchg
jp
cmp
retf
and
xchg
jle
cmp
retf
and
xchg
jb
cmp
retf
and
xchg
jbe
cmp
retf
and
xchg
push
cmp
retf
and
xchg
outs
sar
and
mov
and
xchg
(bad)
cmp
retf
and
xchg
data16
and
mov
and
xchg
sbb
cmp
retf
and
xchg
push
sar
and
mov
and
xchg
adc
cmp
retf
and
xchg
push
sar
and
mov
and
xchg
or
cmp
retf
and
xchg
push
sar
and
mov
and
xchg
add
cmp
retf
and
xchg
push
sar
and
mov
and
xchg
cmp
cmp
retf
and
xchg
sar
and
mov
and
xchg
sub
cmp
retf
and
xchg
sar
and
mov
and
xchg
and
cmp
retf
and
xchg
sar
and
mov
and
xchg
fcmovbe
cmp
retf
and
xchg
(bad)
sar
and
mov
and
xchg
retf
and
mov
and
xchg
into
sar
and
mov
and
xchg
ret
and
mov
and
xchg
(bad)
sar
and
mov
and
xchg
cli
sar
and
mov
and
xchg
(bad)
sar
and
mov
and
xchg
repnz
and
mov
and
xchg
not
cmp
retf
and
xchg
loop
cmp
retf
and
xchg
out
cmp
retf
and
xchg
call
and
xchg
sahf
sar
and
mov
and
xchg
xchg
sar
and
mov
and
xchg
xchg
sar
and
mov
and
xchg
mov
cmp
retf
and
xchg
mov
cmp
retf
and
xchg
adc
and
mov
and
xchg
xchg
cmp
retf
and
xchg
mov
mov
and
xchg
mov
mov
and
xchg
mov
cmp
retf
and
xchg
mov
cmp
retf
and
xchg
stos
sar
and
mov
and
xchg
scas
sar
and
mov
and
xchg
mov
mov
and
xchg
cmps
sar
and
mov
and
