mov
pop
dec
xor
add
sbb
adc
jp
push
ds
inc
ds
jbe
push
sbb
les
or
nop
push
sbb
jg
sbb
push
jle
movs
push
sbb
popf
pop
push
mov
pushw
idiv
outs
push
mov
or
inc
neg
ds
pop
push
idiv
movs
push
jne
shl
xor
icebp
movs
in
pop
jne
push
sbb
inc
sbb
fcmovnbe
dec
cld
gs
dec
and
jl
pop
cmp
rcl
add
push
inc
sub
dec
xchg
cdq
fst
out
or
cdq
cdq
mov
and
popf
inc
jns
push
adc
or
pop
jne
or
xor
sbb
leave
adc
cld
(bad)
xor
xchg
lea
push
out
repz
mov
push
xchg
jns
xchg
data16
test
outs
or
inc
xchg
push
nop
popf
pop
cdq
or
xchg
jne
es
aaa
sbb
inc
xor
ret
dec
xor
xlat
inc
mov
clc
mov
popf
das
inc
xor
and
push
sbb
mov
dec
inc
sub
xchg
jno
dec
xchg
sub
cs
sti
push
dec
popf
stos
jmp
push
clc
jmp
dec
es
xchg
fidivr
sbb
cdq
xchg
ss
dec
cli
mov
ins
(bad)
mov
repz
jg
in
inc
std
imul
jge
pop
jg
repnz
jmp
jo
inc
adc
vmovshdup
jne
push
jo
push
xchg
fidivr
(bad)
outs
push
jmp
jne
push
sbb
push
repnz
cld
push
sbb
inc
push
adc
adc
sahf
cmps
xchg
loop
hlt
cmp
mov
inc
or
jmp
sbb
add
push
int
push
sbb
dec
inc
cs
inc
mov
sub
vmovshdup
add
push
icebp
popf
and
stos
aaa
cmp
dec
mov
sahf
push
jb
jne
push
sbb
or
jo
call
jle
rcl
adc
xor
jne
push
cdq
cdq
nop
inc
dec
and
jae
and
add
ds
iret
ss
add
push
pop
cmp
cmps
pop
jne
xor
vmovshdup
pusha
sti
push
sbb
sub
push
xor
mov
stos
aaa
sbb
popf
shl
add
add
push
mov
inc
push
adc
mov
mov
jne
push
fnstenv
lahf
dec
xchg
pop
sbb
imul
mov
add
lahf
loop
js
fstp
cmp
jl
pop
cmp
adc
popf
push
aad
mov
push
inc
inc
std
je
js
std
cld
add
lahf
fstp
sbb
and
sbb
and
adc
popf
fs
sbb
loopne
je
xchg
inc
js
in
sar
pop
je
push
cdq
mov
sub
mov
(bad)
pop
sahf
pushf
scas
xor
xchg
or
xchg
mov
ror
dec
xor
fld
inc
cs
aad
cld
gs
idiv
inc
movs
pop
nop
sub
pop
loop
inc
fwait
pop
(bad)
rcr
sbb
jmp
add
arpl
lahf
fdiv
ja
jo
sbb
add
outs
ins
jg
push
mov
or
jg
or
stc
push
sbb
inc
jmp
arpl
pop
in
add
lea
int
push
sbb
sbb
xor
inc
inc
push
inc
sub
dec
cld
gs
dec
and
push
push
adc
push
out
call
jl
mov
sbb
add
push
xchg
mov
loopne
jno
(bad)
icebp
inc
jg
add
pushf
jl
mov
push
in
jl
cmp
adc
mov
arpl
popf
test
jne
loopne
jno
(bad)
icebp
jle
(bad)
pop
sahf
xchg
(bad)
(bad)
fldenv
or
cdq
cdq
nop
inc
dec
and
arpl
into
adc
aam
or
sub
hlt
mov
out
jne
jae
jne
jg
adc
lods
test
adc
ret
mov
xchg
xor
loop
aad
adc
retf
xchg
sub
movs
cmc
adc
jmp
dec
jmp
sbb
jns
pop
mov
push
in
je
pop
gs
popf
pop
lea
xchg
lods
ja
xchg
xor
fnstenv
or
cdq
mov
adc
push
inc
push
xchg
mov
fsubp
xor
cmc
out
and
js
cdq
int
jmp
inc
mov
cmp
sbb
sub
adc
and
popf
outs
jns
dec
or
jg
sbb
mov
lahf
mov
in
inc
pop
fdivr
adc
jmp
sbb
lds
xchg
mov
fsubp
xor
cmc
out
and
adc
sub
ja
or
js
jmp
sahf
mov
push
in
(bad)
das
lds
push
lahf
mov
in
inc
aas
fdivr
adc
lahf
ret
rcr
mov
jmp
shl
rol
(bad)
fstp
movs
dec
loope
cld
(bad)
mov
loopne
push
push
popf
addr16
lds
nop
inc
xchg
mov
cld
fisttp
test
lahf
fdiv
inc
ja
popa
mov
and
mov
push
ins
or
dec
aad
cld
gs
dec
es
inc
xchg
sub
ret
push
inc
jne
loope
mov
push
loop
vmovntps
not
sbb
std
push
mov
and
xlat
in
lahf
inc
in
sbb
mov
inc
xchg
fcom
add
mov
ret
xor
popf
pop
mov
aam
mov
inc
out
fimul
mov
lahf
jmp
inc
dec
(bad)
cmc
push
xchg
sub
jecxz
add
xor
test
aaa
sbb
jge
test
dec
or
xor
add
dec
push
bound
inc
inc
push
icebp
fs
das
lds
pusha
popf
pop
mov
aam
mov
inc
out
inc
dec
inc
cs
aad
cld
gs
dec
and
arpl
retf
test
lea
shl
jo
mov
push
sbb
(bad)
(bad)
lahf
mov
xchg
xor
jns
inc
jb
popa
push
sbb
push
inc
xchg
or
and
in
jg
ficom
dec
shl
(bad)
inc
xchg
sub
xchg
lea
arpl
popf
call
shl
jmp
es
jmp
jo
push
lahf
loop
js
fnsave
jo
inc
cs
dec
cld
gs
dec
es
inc
xchg
add
and
and
mov
rcr
jne
bound
aam
mov
jne
popf
add
test
ins
jno
push
in
mov
in
xchg
or
cld
inc
popf
sbb
mov
add
icebp
push
sbb
fimul
mov
lahf
push
ins
ss
and
popf
outs
jge
sahf
push
mov
xchg
in
scas
leave
push
sbb
cmps
push
cdq
adc
push
sbb
xchg
ret
mov
push
sbb
inc
scas
or
adc
xchg
or
cld
inc
daa
fidivr
xchg
inc
arpl
cmps
sti
aaa
cmp
fwait
pop
test
(bad)
pushf
add
mov
adc
vmovlps
add
push
and
sbb
mov
xchg
mov
stc
push
dec
adc
mov
int
jmp
mov
outs
jo
(bad)
pop
sahf
pop
mov
in
add
ins
adc
mov
dec
inc
mov
cmp
sbb
cld
add
xlat
lods
ins
jle
cmp
mov
sub
ret
mov
xor
ret
aam
mov
push
jp
rcr
jne
popf
pop
jns
outs
scas
aaa
sbb
lods
jg
in
inc
xchg
daa
jmp
hlt
push
mov
and
mov
fdecstp
movs
mov
mov
sbb
add
inc
in
mov
rol
adc
je
in
aaa
sbb
and
jg
fidivr
jmp
push
mul
push
repz
pop
ret
xchg
(bad)
(bad)
inc
push
xchg
xor
jg
push
cld
(bad)
or
icebp
stos
pop
sbb
imul
(bad)
xchg
cmp
cdq
adc
fwait
dec
cld
mov
sbb
cmp
jne
adc
ret
xor
or
sbb
xchg
sbb
push
aaa
sbb
lods
or
jo
push
dec
xchg
lods
test
rcr
adc
xor
pop
popf
and
aaa
sbb
xchg
add
or
scas
push
jne
push
jmp
(bad)
call
dec
(bad)
mov
push
out
imul
add
jle
(bad)
ret
mov
push
sbb
(bad)
(bad)
mov
push
sbb
push
out
inc
arpl
jne
fwait
lahf
test
and
xchg
dec
jg
mov
push
xchg
xor
add
push
sbb
lds
and
pop
jmp
mov
and
mov
inc
xchg
daa
jmp
hlt
sbb
sbb
mov
pop
lea
push
out
dec
vunpckhps
scas
jmp
xchg
ret
cld
pop
loope
cld
add
lahf
fldcw
fimul
mov
lahf
push
ins
sbb
xlat
test
xchg
lea
loopne
xchg
out
xor
jl
xchg
xor
sbb
jl
arpl
mov
jmp
or
xor
or
xor
cmc
jne
xor
sub
add
xchg
jg
sbb
je
jle
xlat
ret
and
push
sbb
inc
push
fwait
or
mov
popf
pop
loope
mov
jae
jne
out
xor
jl
outs
and
inc
mov
rol
icebp
xor
out
in
xchg
or
cld
inc
xchg
jg
and
sahf
pushf
pop
rol
das
jmp
inc
push
nop
jno
sub
or
jg
sbb
xor
push
adc
mov
das
in
jg
jg
adc
mov
push
jb
sbb
popf
mov
jne
bound
mov
push
jo
jmp
jne
push
pop
sbb
push
lahf
pop
(bad)
jmp
popf
lock
jne
push
adc
inc
xchg
ror
and
inc
jl
clc
int
dec
daa
jg
adc
out
push
sbb
sbb
sbb
jg
loop
and
sbb
stc
add
push
in
js
and
adc
sub
(bad)
and
repz
popf
in
sbb
inc
dec
into
fild
sti
cmp
adc
lods
or
out
jle
sbb
push
lahf
lahf
cmp
in
jg
repnz
jnp
in
mov
adc
jne
into
sbb
push
(bad)
lods
sbb
jmp
xor
dec
jmp
fimul
sub
push
idiv
push
outs
mov
adc
lock
jmp
xchg
ret
(bad)
mov
push
out
inc
arpl
jne
fwait
lahf
test
call
popf
lahf
xchg
jg
in
or
in
mov
lahf
pop
mov
push
sbb
into
sbb
inc
jmp
xchg
ret
(bad)
mov
push
out
inc
sbb
sbb
jg
fimul
jp
in
inc
push
xchg
mov
lahf
cmps
lea
in
add
mov
aad
push
fwait
sahf
sbb
or
jmp
pop
jne
popf
and
jl
fidivr
stos
sbb
enter
mov
push
sbb
cmp
push
adc
jne
pop
jb
popa
push
sbb
add
inc
repnz
ja
in
inc
sbb
(bad)
jg
in
xchg
jg
jne
cmc
xchg
lock
in
or
adc
mov
in
adc
icebp
mov
sbb
mov
in
rcr
in
call
(bad)
push
add
mov
lods
lock
in
inc
adc
and
add
sbb
mov
push
adc
jne
into
sbb
call
jle
aad
push
repnz
jmp
daa
mov
sbb
cmps
jl
sbb
or
jmp
in
add
push
dec
jg
sbb
sbb
lock
in
adc
jb
pusha
push
sbb
push
xchg
fidivr
jmp
cmp
xchg
ret
enter
mov
(bad)
sub
mov
in
adc
jg
xchg
scas
mov
sbb
push
jo
call
jle
aad
push
bnd
jmp
daa
mov
sbb
cmps
jl
sbb
or
jmp
in
add
push
dec
jg
sbb
sbb
lock
in
adc
jb
pusha
push
sbb
push
xchg
fidivr
jmp
cmp
xchg
ret
enter
mov
(bad)
mov
jg
cdq
mov
sub
mov
xchg
scas
mov
sbb
push
jo
call
jle
aad
push
repnz
jne
in
inc
sbb
mov
sbb
mov
lahf
sar
je
push
sbb
adc
sbb
cmc
xchg
lock
in
or
jo
call
jle
aad
push
repnz
in
inc
sbb
mov
sbb
mov
lahf
sar
je
push
sbb
cmp
and
scas
jecxz
mov
rcl
dec
jg
sbb
push
jo
call
fwait
cmps
mov
in
push
xchg
fidivr
jmp
pop
pop
cmp
enter
mov
(bad)
out
cmp
in
adc
jg
xchg
scas
mov
sbb
push
cdq
enter
mov
data16
aaa
adc
lock
in
sar
fmul
xchg
rcr
add
and
aaa
xor
mov
sbb
xchg
out
jle
sbb
into
in
xchg
or
xchg
mov
xchg
ret
jmp
in
jg
xchg
dec
jg
inc
cld
vmovlps
adc
lock
in
rcr
in
or
in
mov
into
sbb
jl
adc
jne
mov
mov
sbb
pop
pop
ret
xchg
mov
jne
stos
mov
jp
mov
jne
xchg
icebp
pop
mov
sbb
inc
xchg
mov
jne
xchg
mov
jle
sbb
push
xchg
lock
in
rcr
in
or
dec
(bad)
mov
dec
imul
push
xchg
lock
jmp
mov
jmp
and
adc
xor
jp
sub
jne
fwait
lahf
movs
jg
in
or
dec
(bad)
mov
push
sbb
(bad)
mov
jg
jne
(bad)
adc
jne
xchg
repnz
dec
inc
inc
xchg
dec
jg
and
vmovlps
adc
clc
add
inc
xchg
lock
jmp
and
jl
ret
lahf
fdecstp
std
jmp
adc
clc
add
inc
xchg
lock
popf
and
jl
fidivr
jle
jne
xchg
icebp
xor
out
mov
in
js
in
call
fwait
lahf
mov
in
push
xchg
fidivr
mov
mov
sbb
push
repnz
push
sbb
push
sbb
jne
cmc
xchg
lock
in
or
in
ins
jmp
out
jle
dec
sbb
or
jmp
sbb
ror
adc
mov
or
xchg
lock
in
or
jmp
in
jg
mul
icebp
mov
xchg
call
xchg
xchg
cmp
sbb
in
(bad)
cmp
inc
xchg
dec
jg
ss
(bad)
lods
test
imul
(bad)
xchg
ins
ja
push
cdq
shr
in
sbb
and
sbb
and
mov
lahf
pop
mov
aad
jb
push
adc
adc
lock
in
rcr
in
or
in
in
lahf
pop
mov
into
sub
jl
adc
jne
mov
mov
sbb
push
repnz
push
sbb
std
pop
adc
in
jg
sbb
add
lahf
lahf
or
add
inc
xchg
shl
in
add
or
scas
push
jne
push
jmp
mov
cdq
cdq
nop
lahf
std
int3
test
sbb
mov
enter
mov
popf
and
xor
inc
pop
lahf
fdecstp
std
jmp
adc
jne
xchg
xchg
mov
dec
sbb
or
dec
(bad)
mov
push
sbb
push
out
inc
sbb
idiv
push
adc
jne
xchg
jp
jle
dec
pop
sub
cmp
in
jg
xchg
dec
jg
cmp
(bad)
lods
mov
xchg
mov
imul
(bad)
xchg
sti
jne
push
jl
cmp
push
adc
jne
stos
jb
jle
sbb
rcr
jne
fwait
lahf
adc
jmp
and
jle
repnz
in
inc
push
xchg
mov
lahf
cmps
sub
in
pop
loope
cld
add
lahf
fprem1
cmp
push
adc
jne
xchg
jmp
push
jo
jg
stos
mov
xchg
lock
in
sar
xchg
ret
lock
in
sar
cwde
pop
adc
mov
lahf
ret
lahf
fprem
or
xchg
ror
and
add
jmp
in
add
inc
xchg
lock
in
or
call
jae
adc
lock
in
sar
xchg
ret
lock
in
sar
cmp
adc
mov
lahf
ret
lahf
fdecstp
cmp
push
outs
jne
push
pop
jne
loope
cld
add
lahf
fsin
add
inc
xchg
inc
jg
adc
jg
lahf
fnstsw
in
add
sbb
inc
inc
xchg
inc
jg
adc
add
inc
xchg
inc
jg
adc
jae
push
jne
jmp
in
add
das
lahf
cdq
jg
in
add
out
jg
cmps
test
in
cmc
adc
lock
in
sbb
and
mov
in
hlt
sbb
mov
popf
sub
mov
lahf
lahf
lds
in
inc
xchg
cmps
mov
hlt
sbb
mov
popf
sub
pop
jmp
sub
pop
jmp
sub
rol
sbb
xchg
cli
mov
dec
(bad)
mov
dec
jge
daa
in
mov
inc
cs
aad
cld
gs
sbb
call
jb
jne
push
sbb
adc
imul
and
lahf
jg
inc
push
inc
add
std
repnz
mov
rcr
adc
jne
dec
sbb
(bad)
js
adc
mov
scas
push
dec
adc
adc
xchg
or
cld
std
repnz
mov
push
outs
mov
jl
in
jg
aas
mov
neg
jne
push
xchg
xor
xchg
adc
pop
test
add
cmp
push
sbb
jg
in
fisttp
in
push
jmp
xchg
mov
push
dec
retf
jo
or
xor
xor
sbb
cmp
xor
jmp
jne
lahf
frstor
push
dec
fldenv
or
cdq
cdq
cwde
inc
dec
(bad)
fstp
mov
int
ja
jne
not
mov
lahf
(bad)
mul
push
fwait
mov
pop
sbb
xor
jmp
test
push
cdq
push
mov
pop
cdq
sbb
push
sbb
dec
pop
sar
inc
rcr
xor
push
sbb
push
sbb
jo
nop
jne
push
xor
lods
jo
(bad)
pop
jne
(bad)
adc
jne
jmp
xchg
push
adc
mov
call
(bad)
jp
adc
jo
mov
call
xchg
cli
jno
lahf
pop
add
push
sbb
lea
test
push
in
jae
sbb
add
outs
js
cli
xchg
pop
pop
dec
pop
push
sbb
pop
push
sbb
dec
aas
sar
inc
call
ja
push
in
mov
jmp
jne
jmp
sbb
add
jb
(bad)
repz
adc
hlt
imul
pop
ins
pop
push
sbb
push
xor
or
rcl
inc
jg
in
test
test
adc
mov
repz
int
or
jne
not
cmc
lea
test
adc
jns
jmp
test
push
outs
jb
(bad)
repz
adc
hlt
inc
retf
adc
jge
push
xor
pop
aad
push
repz
jle
in
test
test
pop
outs
jb
(bad)
repz
cld
dec
aas
sar
inc
xchg
pop
ins
pop
push
sbb
imul
rcl
jne
push
repz
add
outs
jb
(bad)
repz
push
sbb
jno
cmp
adc
ja
adc
rcl
jne
push
repz
jle
in
test
aaa
sub
dec
pop
push
sbb
imul
pop
ins
pop
push
sbb
xor
jo
mov
or
sub
cwde
mov
sar
jne
push
mov
test
jo
mov
imul
pop
in
rcl
jo
xchg
imul
imul
rcl
jo
mov
imul
sbb
test
test
adc
jmp
sar
inc
xchg
pop
dec
pop
push
sbb
fwait
sbb
daa
ficomp
sbb
jmp
ds
lahf
jmp
push
sbb
adc
ret
mov
inc
cdq
lea
xchg
mov
ret
cmc
adc
or
sub
jne
push
gs
jg
lahf
mov
push
sbb
lea
test
push
icebp
dec
jg
outs
rol
icebp
inc
and
xchg
pop
pop
dec
pop
push
sbb
pop
push
sbb
inc
sub
ins
pop
push
sbb
imul
and
popf
or
in
hlt
mov
add
rcl
jp
xlat
sbb
lahf
jmp
push
sbb
dec
daa
sar
inc
sbb
movs
(bad)
sbb
sahf
pop
or
sbb
pusha
adc
xor
fidiv
push
adc
jne
imul
cmc
adc
jo
xchg
or
in
xchg
or
cld
inc
sbb
adc
jle
push
xor
pop
jge
push
sbb
mov
adc
pusha
add
jne
pop
call
adc
in
push
sbb
test
cmc
lea
test
xchg
xchg
mov
or
pop
inc
push
adc
xor
xchg
cli
jb
push
in
cmc
std
loopne
add
arpl
xor
mov
add
jo
xchg
pusha
mov
xchg
jno
xor
pop
jns
push
sbb
mov
push
in
push
push
popa
adc
push
mov
add
jo
xchg
pusha
mov
xchg
jno
mov
pop
jns
push
sbb
mov
adc
in
push
push
rol
xchg
test
push
sbb
icebp
jns
mov
sti
cld
(bad)
mov
dec
shl
(bad)
inc
movs
sub
cmp
pop
add
sbb
push
lahf
fcomp
(bad)
(bad)
fsubr
adc
sub
push
sbb
js
std
cld
(bad)
mov
mov
(bad)
push
sbb
nop
mov
call
inc
repnz
fist
sbb
je
pop
jne
pop
mov
cld
fist
sbb
mov
pop
jne
dec
mov
or
push
sbb
fdiv
sbb
dec
aad
cld
gs
neg
jne
or
aad
and
push
in
hlt
mov
mov
fst
jmp
sbb
adc
lods
test
jae
jne
push
mov
(bad)
xor
jne
xchg
jg
adc
mul
jmp
adc
lea
sbb
in
sbb
adc
xor
jne
fwait
pop
add
push
sbb
(bad)
jo
mov
stos
ja
push
sbb
pop
daa
ret
rcr
adc
mov
clc
cmc
(bad)
mov
xchg
jle
jne
push
xchg
xor
pusha
je
pop
jne
into
sub
sbb
jo
or
push
jo
jmp
popf
ins
ja
jne
push
mov
clc
lds
call
jo
mov
in
and
cmp
jmp
jnp
adc
mov
repnz
push
sbb
sbb
lds
add
call
fs
push
int
xor
jne
cmc
xchg
xor
lahf
fldcw
fimul
mov
lahf
push
ins
push
fnsave
jl
and
aam
mov
inc
out
lds
xchg
xor
push
or
mul
loop
inc
push
lahf
dec
cdq
or
pop
test
sbb
outs
(bad)
jmp
mov
adc
sbb
xor
pop
inc
lahf
dec
mov
dec
cld
gs
movs
push
sub
cld
js
loop
inc
jmp
sbb
jg
or
rcl
sub
xchg
nop
add
push
es
inc
xchg
add
adc
ret
mov
jmp
cs
push
sub
jne
arpl
jp
push
sub
jne
arpl
jp
push
sub
jne
arpl
jp
push
sub
jne
sbb
inc
push
xchg
xor
sahf
push
dec
inc
push
in
(bad)
mov
push
jo
stos
pop
jne
mov
adc
jne
in
push
jp
add
inc
sbb
cld
jp
lock
mov
outs
push
or
cdq
lahf
sbb
popa
xchg
das
fadd
out
lahf
loop
push
adc
popf
adc
add
sbb
or
push
sbb
sbb
and
enter
(bad)
cmp
sbb
sar
movs
sub
xchg
ror
aam
pop
je
xchg
lock
(bad)
sbb
js
bnd
push
out
inc
push
xchg
xor
(bad)
push
(bad)
aad
xchg
popa
test
sbb
std
cmp
push
in
inc
add
aaa
adc
jp
push
in
imul
pop
add
sbb
mov
lahf
loop
add
sbb
cmc
pop
xchg
lea
(bad)
sbb
mov
lahf
loop
push
adc
or
cdq
popf
test
lods
jno
sub
xchg
sub
or
cdq
popf
test
or
pop
adc
and
cld
push
test
jno
pop
sbb
xchg
es
and
js
call
out
cdq
popf
adc
cld
js
bnd
sub
cmc
push
xchg
lea
(bad)
push
jp
adc
push
adc
pushf
adc
add
inc
or
aam
pop
je
xchg
lock
(bad)
sbb
(bad)
xor
pop
loop
push
lahf
push
jo
push
sbb
sub
cmc
inc
xchg
(bad)
enter
and
ja
sub
cmc
sub
cmc
mov
lahf
loop
push
adc
dec
hlt
sbb
mov
sub
jne
push
outs
ins
push
popf
dec
gs
in
cdq
lahf
test
sbb
xchg
in
test
sbb
mov
inc
cs
aad
cld
gs
idiv
inc
dec
mov
popf
outs
jge
or
mov
call
xchg
in
adc
add
in
adc
push
xchg
push
xchg
xor
and
adc
test
jo
mov
dec
gs
hlt
sbb
mov
push
sub
sar
pop
test
aaa
sbb
jno
sub
jne
push
outs
push
mov
bound
mul
jmp
(bad)
popa
xchg
out
test
out
push
or
push
popf
sbb
(bad)
xchg
in
sbb
je
pop
imul
sbb
xchg
add
pop
pop
or
sbb
or
push
cld
(bad)
jno
call
and
or
adc
and
(bad)
push
cld
(bad)
jb
lahf
push
dec
adc
adc
xchg
sub
pusha
fsubr
out
jg
fidivr
dec
inc
mov
cmp
jne
(bad)
xor
adc
and
(bad)
sbb
jg
fdiv
arpl
in
cmp
das
adc
jne
push
call
jmp
jmp
test
call
arpl
jp
xchg
jmp
dec
test
aaa
adc
outs
add
sbb
xchg
sbb
add
pop
adc
cmc
adc
sub
jmp
les
or
push
sbb
sbb
(bad)
fstp
in
test
adc
mov
shr
sbb
stos
cmp
inc
hlt
sbb
adc
jmp
pop
jne
push
inc
jne
popf
(bad)
rcr
in
test
cmp
rcl
lock
in
sbb
in
jmp
add
mov
push
sbb
pop
in
jg
lahf
xchg
in
(bad)
mov
in
bound
dec
xchg
mov
sbb
sbb
mov
in
bound
popa
xchg
inc
xor
(bad)
mov
test
aaa
adc
jne
xchg
lea
repnz
jns
in
add
jmp
sbb
adc
lahf
leave
mov
add
xchg
xchg
lahf
ret
push
pop
jne
xchg
out
call
jb
nop
push
sbb
push
lahf
fdiv
jbe
fist
js
in
(bad)
xchg
fnstenv
push
sbb
loop
mov
int
add
inc
repnz
push
sbb
adc
jne
call
adc
shr
jg
ret
jmp
in
inc
sbb
add
xchg
mov
jne
mov
aaa
mov
xchg
scas
inc
cld
sbb
popf
cs
add
push
dec
xor
loop
jg
outs
jl
xchg
in
test
sbb
pop
xchg
in
adc
pop
(bad)
lahf
ret
push
sbb
xchg
call
aad
adc
mov
mov
add
add
push
sbb
lahf
stc
pop
jmp
sbb
xchg
neg
fucomp
in
jg
outs
rol
in
pop
leave
in
push
call
adc
ret
adc
xlat
clc
ja
add
push
adc
cld
adc
xchg
mov
jne
sub
jg
fist
imul
mov
sbb
cld
or
repnz
jg
xchg
loopne
stc
in
inc
hlt
sbb
pop
xlat
repz
neg
jbe
jmp
add
xchg
cmps
sub
sbb
aaa
jmp
sbb
cmp
push
outs
cs
(bad)
adc
adc
lock
in
or
sbb
sub
jne
lahf
(bad)
in
inc
outs
sbb
xchg
sub
enter
add
pushf
adc
les
pop
jmp
les
add
lahf
lahf
fstp
in
add
lahf
lahf
test
pushf
fwait
lahf
int
jmp
(bad)
stos
jg
repnz
push
sbb
add
das
lahf
leave
pop
jmp
lahf
mov
jmp
lds
pop
jmp
lds
call
jl
(bad)
adc
xlat
lock
popf
(bad)
int
jmp
dec
sbb
jg
mov
jg
icebp
out
jg
outs
rol
adc
mov
clc
ja
fwait
(bad)
stos
jg
xor
push
leave
in
or
cmovne
sub
jg
fist
mov
sub
jg
jb
nop
push
sbb
push
lahf
lahf
lds
in
inc
sbb
cmc
std
push
sbb
sub
jne
popf
lahf
sub
daa
pushf
adc
add
sbb
pushf
fwait
pop
sbb
xchg
out
call
sbb
xchg
lock
xchg
(bad)
stos
jg
fdiv
and
in
adc
jo
mov
xchg
test
xchg
and
ds
test
(bad)
sbb
mov
out
popf
adc
test
(bad)
push
cmc
mov
out
popf
test
push
sahf
dec
jmp
sbb
cmp
sbb
mov
xchg
mov
jp
adc
pushf
adc
add
push
sbb
(bad)
in
les
push
cld
add
std
cwde
cld
ja
adc
mov
loop
jo
or
enter
mov
call
mov
enter
hlt
sbb
cmp
mov
jb
xchg
es
adc
xor
mov
push
sbb
sahf
xchg
es
adc
jne
arpl
cmc
mov
push
sbb
mov
sbb
bound
xor
adc
mov
fimul
and
bound
jp
xchg
jmp
mov
jmp
in
imul
in
add
push
cmc
cmp
push
outs
aaa
add
sbb
adc
xlat
clc
ja
iret
fistp
pop
out
add
repnz
jg
xchg
jno
jmp
in
cmp
push
push
jne
fs
bound
mov
call
sbb
jmp
add
mov
push
sbb
cmp
mov
inc
cs
aad
cld
gs
test
dec
(bad)
fstp
fnsave
js
push
movs
cmps
xchg
outs
lea
push
in
or
bound
jne
push
jmp
ins
stos
push
sbb
std
ret
xchg
inc
add
sbb
jne
in
clc
std
fcom
jne
adc
jne
in
cmc
mov
xchg
pop
lea
sbb
push
in
inc
push
in
jne
add
cmp
call
push
in
je
imul
repnz
and
xchg
xor
pop
lea
in
jne
mov
jne
pushf
sbb
inc
in
dec
les
iret
jp
cdq
sbb
xchg
pop
mov
sub
jne
push
sbb
push
loop
inc
pop
fdivr
aad
adc
mov
push
sbb
js
outs
jno
push
in
(bad)
mov
cdq
xchg
xchg
cdq
pop
push
addr16
push
in
(bad)
mov
sbb
xchg
call
pop
aas
mov
push
sbb
push
sbb
adc
xor
fcomp
dec
lea
push
sbb
sbb
sub
in
add
je
imul
(bad)
xchg
dec
mov
fdiv
jne
icebp
arpl
adc
and
xchg
fsubr
add
je
sbb
xor
call
push
loop
inc
pop
fdivr
aad
adc
jne
push
outs
jno
push
in
(bad)
mov
inc
mov
rol
and
popf
outs
jge
int
fild
push
in
xchg
or
cld
inc
jle
jne
push
dec
pop
cmp
daa
adc
test
fsubp
xor
cmc
out
xchg
mov
sbb
jb
push
sub
cmp
jmp
ret
lahf
pop
lea
aad
sub
(bad)
and
repz
popf
clc
inc
sbb
inc
movs
adc
cmc
push
jne
scas
xor
adc
xchg
or
xchg
mov
arpl
and
adc
add
inc
repnz
push
sbb
add
inc
bnd
push
sbb
inc
push
sub
or
inc
sub
dec
cld
gs
movs
xchg
gs
ja
sbb
jl
pop
sub
jge
push
repnz
push
sbb
fst
dec
cld
gs
mul
inc
dec
retf
inc
add
sar
adc
jne
xchg
sbb
jl
pop
cmp
push
sbb
jg
adc
or
cdq
mov
add
std
sbb
add
sbb
jnp
js
std
cld
(bad)
mov
push
dec
popf
fadd
jne
aad
mov
inc
jo
push
lahf
pop
mov
jmp
jne
loope
cld
(bad)
mov
push
cdq
or
push
cld
(bad)
jae
push
loop
(bad)
add
in
jl
repnz
rcl
sbb
push
popf
pop
mov
fwait
call
inc
mov
add
push
es
inc
movs
hlt
call
daa
loop
inc
jl
sbb
jmp
jne
push
fimul
rcl
sbb
inc
xchg
in
cmc
adc
mov
jne
or
lahf
pop
lea
shl
jmp
and
push
xchg
xor
pop
cmc
mov
lahf
fstp
sbb
add
sbb
sbb
sbb
(bad)
(bad)
in
adc
popf
sbb
sbb
out
in
xchg
or
inc
loop
mov
pop
sbb
dec
inc
cs
aad
cld
gs
dec
and
test
xchg
lea
push
jb
adc
pop
test
cmp
adc
add
push
xchg
mov
call
ficomp
addr16
pop
lea
shl
jmp
and
push
jo
or
arpl
mov
sbb
inc
sbb
(bad)
cmp
sar
cld
js
loop
inc
dec
inc
mov
rol
and
arpl
mov
jmp
jl
sbb
daa
sar
std
sbb
je
push
and
mov
inc
jmp
jl
in
mov
xchg
ret
rcl
sbb
push
xchg
fisub
int
data16
mov
das
xchg
ret
loopne
push
sbb
inc
push
pop
dec
fstp
popfw
mov
icebp
jle
sub
mov
sbb
or
cld
inc
pop
fdivr
aad
dec
sbb
push
xchg
fidivr
dec
inc
mov
rol
and
dec
adc
cmc
sbb
xor
int3
test
pop
sbb
sub
sub
adc
inc
jg
or
adc
and
cmp
adc
mov
push
and
pusha
push
sbb
fstp
xor
fimul
mov
lahf
push
ins
xor
xlat
lods
xchg
push
ja
xchg
lods
test
rcr
adc
cdq
adc
cdq
adc
or
das
out
cmp
push
sbb
mov
lods
mov
xchg
mov
imul
cmc
adc
hlt
add
push
adc
push
sbb
vpsllw
movs
je
and
cld
(bad)
mov
mov
pop
jo
xchg
fisubr
push
div
std
jmp
ja
adc
cmc
in
jmp
sbb
dec
popf
pop
jns
mov
in
mov
push
sbb
push
in
ss
pop
test
(bad)
add
(bad)
or
outs
jno
jnp
ja
jnp
je
imul
cmc
rcl
or
jp
push
xchg
and
(bad)
jae
in
pop
sbb
mov
fdiv
xchg
cmp
rcr
cli
adc
xchg
or
je
repnz
xor
dec
jge
mov
adc
fiadd
pop
xchg
add
xchg
jnp
push
xchg
xor
dec
jge
mov
sbb
fs
pop
xchg
fisttp
mov
adc
pop
jne
lods
dec
sti
rcl
int3
mov
or
xchg
(bad)
adc
mov
adc
adc
adc
mov
adc
in
xchg
in
push
mov
adc
mov
adc
in
xchg
jne
lods
retf
push
mov
push
scas
inc
adc
mov
pushf
xchg
in
xchg
in
das
ret
xchg
in
ja
in
xchg
mov
jp
adc
sbb
push
inc
in
xchg
xor
mov
push
mov
adc
mov
or
in
xchg
data16
push
in
xchg
mov
cld
cli
mov
adc
mov
add
sbb
adc
mov
loope
mov
adc
out
add
jne
cwde
pop
jne
(bad)
out
and
jne
add
mov
adc
pop
jne
jl
in
xchg
in
xchg
loop
adc
mov
adc
mov
pop
xchg
in
xchg
in
inc
mov
adc
mov
adc
in
in
xchg
in
dec
mov
adc
out
adc
sub
adc
mov
adc
call
int
cmps
pop
jne
xchg
loop
adc
mov
adc
mov
pop
xchg
in
xchg
in
inc
mov
adc
mov
adc
in
in
xchg
in
dec
mov
adc
scas
inc
adc
sub
adc
mov
adc
call
adc
xchg
dec
xchg
jmp
mov
inc
xchg
nop
add
cs
inc
xchg
sub
lahf
pop
jns
push
out
not
inc
inc
jmp
ja
idiv
(bad)
xor
cld
(bad)
xor
xchg
or
cld
(bad)
mov
out
jne
repz
scas
movs
and
lahf
pop
mov
pop
pop
jmp
dec
xchg
mov
inc
loope
std
in
sbb
xchg
pop
pop
pop
sbb
push
retf
imul
jne
sbb
push
(bad)
in
mov
xlat
xchg
xor
in
mov
aam
and
push
imul
gs
sbb
(bad)
mov
xchg
gs
mov
sbb
arpl
cld
pop
pop
jmp
pop
loopne
dec
sahf
or
(bad)
mov
aam
and
sbb
or
icebp
push
jne
sbb
and
adc
movs
sar
fdivr
adc
jae
push
call
test
(bad)
test
adc
mov
scas
inc
push
adc
adc
mov
inc
adc
out
ret
push
dec
inc
sbb
sub
dec
shl
ins
es
and
test
push
enter
mov
xchg
mov
mov
lods
pop
jne
(bad)
dec
cld
inc
loope
je
xlat
loopne
inc
out
add
sub
aam
and
daa
mov
push
sbb
adc
mov
and
jne
fwait
pop
xchg
shr
outs
jge
(bad)
loop
jg
fidivr
aad
mov
xchg
pop
ja
push
adc
xchg
sbb
jne
add
fnstsw
pop
xchg
or
adc
xchg
sub
dec
sub
sbb
stos
pop
jne
(bad)
call
jns
push
xchg
lods
adc
enter
xor
repnz
int
sbb
inc
push
mov
cld
(bad)
bound
shl
adc
lods
adc
xchg
(bad)
cmps
aaa
and
test
push
aam
stos
pop
jne
adc
enter
xor
aam
stos
pop
jne
push
loop
xchg
lahf
ret
out
xchg
pusha
pop
stos
pop
jne
push
cdq
xor
mov
jbe
into
cmps
aaa
sub
(bad)
repnz
repnz
push
sbb
(bad)
aam
push
sbb
std
retf
jg
fdivr
(bad)
fist
mov
(bad)
pushf
cmp
(bad)
cmp
sbb
ret
clc
gs
xchg
dec
pop
stos
pop
jne
clc
mov
xor
sbb
aaa
add
int
sbb
inc
sbb
cld
(bad)
bound
ror
lods
adc
xchg
(bad)
cmps
aaa
and
test
push
aam
stos
pop
jne
adc
enter
xor
aam
stos
pop
jne
push
jmp
lahf
fdivr
pop
adc
(bad)
enter
add
jno
ret
adc
dec
(bad)
lods
or
sbb
stos
pop
jne
mov
xchg
popa
adc
popf
pop
movs
cmp
sub
stos
sub
enter
ret
aad
retf
xchg
or
(bad)
xchg
cmp
retf
sbb
je
adc
test
xchg
xor
jp
push
repnz
inc
stos
pop
jne
(bad)
xchg
mov
cdq
mov
jl
pop
cmp
jl
sbb
jg
adc
or
pop
sbb
xchg
shr
outs
xchg
push
lahf
jmp
shl
add
cmp
js
sbb
(bad)
pop
sub
dec
shl
ins
push
sbb
inc
dec
and
addr16
(bad)
lahf
jmp
jmp
pop
add
sbb
adc
clc
popf
jmp
mov
adc
xchg
or
xchg
mov
loope
jne
lods
leave
cmp
push
dec
cld
inc
loope
mov
adc
mov
dec
xchg
mov
rcr
jp
(bad)
in
jbe
and
mov
pop
sbb
mov
push
pop
nop
inc
xchg
mov
cld
fisttp
test
lahf
fdiv
inc
ja
loope
jmp
pop
mov
push
ins
mov
jg
sbb
or
in
mov
arpl
add
and
in
mov
lahf
mov
in
call
jle
stos
ret
lock
in
sar
je
adc
test
push
jo
jmp
jne
push
pop
clc
add
inc
bnd
push
sbb
add
lahf
jmp
push
mov
and
cmp
out
mov
jb
cwde
push
sbb
jg
out
mov
repnz
push
sbb
jg
in
xor
mov
(bad)
stos
ret
lock
in
sar
call
mov
pop
sbb
xchg
loope
jg
dec
sbb
or
jmp
sbb
push
jmp
sbb
call
fwait
lahf
mov
in
call
inc
jne
push
dec
sbb
call
jle
jne
xchg
bnd
push
sbb
inc
inc
inc
sub
(bad)
and
repz
and
cmc
add
cld
js
loop
inc
jmp
sbb
inc
sbb
adc
(bad)
rcr
sbb
jmp
add
push
jne
lahf
jmp
dec
jmp
sbb
jns
pop
lea
out
sbb
js
jo
jmp
mov
push
jne
jmp
push
jne
dec
inc
cs
aad
cld
gs
movs
inc
mov
addr16
js
loop
inc
jmp
pop
jne
jl
and
cmc
push
in
mov
outs
jge
daa
sbb
xchg
fisubr
dec
fldenv
or
dec
retf
mov
lea
shl
jmp
add
arpl
popf
xchg
sbb
rol
sub
aad
cld
gs
dec
and
cmc
aaa
clc
aad
frstor
(bad)
clc
(bad)
pop
cmp
adc
jne
push
jo
jg
push
mov
push
repnz
push
sbb
push
inc
inc
std
sub
add
in
nop
jmp
push
jne
pop
fiadd
mov
outs
mov
push
jne
daa
ficomp
int
sbb
enter
inc
push
inc
mov
add
push
and
popf
outs
popa
or
adc
push
add
ja
pusha
adc
adc
jo
push
sbb
or
fdiv
fwait
pop
mov
jle
jne
push
jo
jg
push
mov
push
repnz
enter
inc
bound
inc
inc
std
es
lds
dec
and
push
jo
jg
or
enter
inc
bound
mov
jmp
inc
std
add
lods
push
sbb
icebp
xchg
xor
mov
jmp
aaa
push
add
(bad)
fldenv
or
dec
and
mov
loop
inc
xchg
daa
mov
sbb
xor
sbb
sbb
aaa
sub
(bad)
cmc
cmp
mov
(bad)
pop
sahf
mov
push
sbb
push
jo
jmp
popf
and
jne
jmp
test
ficomp
js
fisttp
cmp
xor
dec
inc
mov
dec
or
xchg
mov
push
ds
add
ret
and
gs
dec
es
inc
xchg
add
push
out
std
lock
jmp
jl
lds
lea
cld
js
ret
out
lods
shr
outs
gs
xchg
fidivr
out
xor
test
hlt
(bad)
aas
adc
lea
(bad)
sbb
mov
int
pop
add
and
cmc
xor
(bad)
enter
mov
inc
push
fdiv
scas
aam
adc
adc
lea
push
out
pop
push
icebp
dec
or
sbb
adc
mov
jnp
cmp
push
sbb
pop
cld
jo
ret
arpl
popf
inc
push
sbb
push
out
inc
daa
fdivr
aad
xchg
lods
sub
icebp
jb
push
out
jmp
mov
lahf
push
ins
push
dec
and
popf
inc
jge
iret
je
mov
jmp
test
sbb
xchg
add
adc
jmp
cld
(bad)
fwait
repz
sbb
loopne
arpl
out
jl
bound
jp
adc
div
xchg
jno
push
and
js
call
inc
push
in
cmp
jp
imul
sub
cld
js
add
push
add
ja
cld
js
add
push
mov
and
jbe
inc
jmp
popf
addr16
push
dec
popf
cmp
sbb
ror
adc
in
aaa
push
in
(bad)
fimul
push
out
sub
dec
shl
int3
push
sbb
test
dec
and
ins
arpl
movs
xchg
in
shl
in
jg
cdq
shr
mov
lahf
fdivr
add
inc
in
mov
call
lahf
fnstcw
sbb
jle
push
cdq
enter
mov
icebp
pop
jne
daa
ficomp
arpl
popf
or
sbb
xchg
ret
jmp
sbb
jg
lahf
mov
cmp
jge
lods
jg
in
or
xchg
leave
mov
inc
jo
push
lahf
lahf
mov
in
jecxz
sbb
lock
lock
jmp
in
mov
je
push
repnz
rcl
cld
jo
jmp
xchg
(bad)
mov
xchg
mov
fsubp
xor
cmc
out
xchg
mov
push
xchg
loopne
jmp
dec
popf
(bad)
frstpm(287
mov
rcl
sbb
jg
adc
add
adc
jg
out
jle
repnz
lds
sbb
inc
push
repnz
push
sbb
mov
sbb
loope
idiv
addr16
aaa
sub
mov
in
or
sbb
rcl
popf
enter
cmp
jne
(bad)
in
mov
in
pop
or
push
mov
in
ja
dec
(bad)
cmp
inc
jb
pop
push
sbb
push
xchg
fisub
or
and
cld
add
lahf
fcomp
cmp
jne
(bad)
in
mov
in
pop
or
push
in
jl
in
push
xchg
fidivr
and
aaa
sub
mov
in
nop
push
sbb
rcl
popf
dec
push
sbb
sbb
jne
(bad)
in
mov
in
pop
or
push
in
jl
in
push
xchg
fidivr
out
xchg
or
xchg
mov
lea
sub
cmp
jo
xor
sbb
jecxz
sbb
loope
daa
or
dec
sbb
xlat
(bad)
pushf
xor
jmp
lds
sbb
and
add
les
sbb
inc
add
cmp
push
sbb
mov
sbb
loope
idiv
addr16
aaa
sub
mov
in
call
rcl
sbb
jg
out
jle
repnz
push
sbb
inc
push
xchg
test
sbb
adc
push
add
add
sbb
jg
xor
adc
mov
jle
stos
ret
sar
push
xchg
fidivr
lds
sub
cmp
jo
xor
sbb
jecxz
sbb
loope
daa
or
dec
sbb
xlat
(bad)
movs
adc
mov
xchg
in
push
sbb
jne
(bad)
sbb
(bad)
in
mov
jle
stos
ret
enter
mov
dec
pop
jmp
outs
or
dec
sbb
sar
pusha
adc
mov
inc
adc
jg
push
sbb
ja
cdq
pop
push
sbb
jne
jne
(bad)
in
mov
popf
cmps
mov
in
call
inc
repnz
push
sbb
inc
push
repnz
ret
push
sbb
mov
sbb
loope
idiv
addr16
aaa
sub
mov
in
les
jne
rcl
hlt
jbe
inc
jne
(bad)
loopne
adc
jg
push
sbb
ja
cdq
pop
enter
mov
repnz
ret
push
sbb
inc
push
repnz
mov
sbb
loope
idiv
addr16
aaa
sub
mov
in
je
sbb
rcl
sbb
jg
push
inc
inc
jb
pop
push
sbb
adc
jne
scas
adc
push
add
add
sbb
jg
test
adc
mov
scas
mov
xchg
or
xchg
mov
dec
pop
jne
scas
adc
push
add
add
sbb
jg
fs
adc
mov
(bad)
and
adc
jg
push
sbb
ja
cdq
pop
push
sbb
jne
jne
(bad)
in
mov
popf
cmps
mov
in
call
inc
repnz
ret
test
mov
pop
sbb
mov
mov
sbb
xchg
sbb
jmp
push
jne
xchg
mov
jne
pusha
xchg
lock
out
adc
lock
in
repz
enter
mov
jmp
xchg
lea
or
jne
(bad)
in
mov
aam
daa
or
mov
iret
iret
cli
fidivr
ja
fistp
jg
in
push
xchg
fst
fwait
cmps
jne
jmp
lds
sbb
and
pop
jne
xchg
fisub
out
test
shl
lock
out
add
call
jmp
out
mov
in
cwde
fwait
lahf
jne
jmp
out
jle
dec
sbb
sar
push
xor
push
cdq
mov
(bad)
xor
adc
jg
push
sbb
ja
cdq
pop
enter
mov
repnz
push
sbb
inc
push
xchg
test
adc
adc
push
add
add
sbb
jg
cmp
push
cdq
mov
inc
xor
adc
in
ja
cdq
pop
neg
jg
out
jle
repnz
push
sbb
inc
push
fwait
lock
out
add
sbb
xchg
out
mov
xchg
lock
in
mov
jmp
in
or
xchg
test
pushf
sbb
popf
pop
imul
jmp
sbb
cmp
push
adc
jne
out
test
rcl
mov
js
in
(bad)
xchg
dec
je
push
xchg
lock
in
or
in
xchg
jle
stos
ret
lock
out
sar
push
xor
mov
in
dec
jmp
sbb
jns
fst
or
fwait
mov
das
sbb
xchg
sbb
jmp
movs
mov
xchg
icebp
test
in
jg
repnz
push
sbb
add
inc
repnz
in
inc
adc
mov
out
mov
in
cwde
jmp
in
add
inc
jb
pop
push
sbb
adc
jne
loope
cld
add
popf
lahf
int
jmp
cld
inc
(bad)
mov
jg
push
sbb
ja
cdq
pop
enter
mov
repnz
push
sbb
inc
push
repnz
mov
push
sbb
loope
idiv
addr16
aaa
sub
mov
in
and
sbb
rcl
popf
fsubr
sbb
sbb
jne
(bad)
in
mov
in
pop
or
push
in
jl
in
push
xchg
fidivr
mov
repnz
mov
sub
sub
cmp
sbb
js
in
sar
sbb
mov
in
inc
sbb
sbb
jg
out
jle
repnz
mov
push
repnz
mov
push
sbb
loope
idiv
addr16
aaa
sub
mov
in
mov
sbb
rcl
popf
inc
sub
jne
sbb
jne
(bad)
in
mov
in
pop
or
push
in
jl
in
push
xchg
fidivr
out
test
shl
in
mov
push
sbb
loope
idiv
addr16
aaa
sub
mov
in
cmp
sbb
rcl
sbb
jg
out
jle
repnz
push
repnz
push
sbb
mov
sbb
loope
idiv
addr16
push
scas
jns
adc
cmp
enter
mov
jle
stos
ret
popf
int3
sub
jne
ror
popf
lods
sub
jne
sbb
jne
(bad)
in
mov
in
pop
or
push
in
jl
in
push
xchg
fidivr
clc
jle
adc
je
push
sbb
mov
sbb
loope
idiv
addr16
aaa
sub
mov
in
mov
rcl
popf
pop
sub
jne
sbb
jne
(bad)
in
mov
in
pop
or
push
in
jl
in
push
xchg
fidivr
mov
adc
push
add
xor
sbb
jecxz
sbb
loope
daa
or
dec
sbb
xlat
(bad)
mov
mov
jle
stos
ret
sar
push
xchg
fidivr
out
xchg
or
xchg
mov
jne
jne
scas
adc
push
add
add
sbb
jg
cwde
dec
adc
mov
jle
stos
ret
sar
push
xchg
fidivr
cmp
adc
push
add
add
sbb
jg
push
dec
adc
mov
jle
stos
ret
sar
push
xchg
fidivr
out
test
shl
cwde
mov
push
sbb
loope
idiv
addr16
aaa
sub
mov
in
mov
sbb
rcl
clc
add
inc
xchg
lock
in
sar
stos
ret
popf
dec
sub
jne
ror
popf
sub
sbb
sbb
jne
(bad)
in
mov
in
pop
or
push
in
jl
in
push
xchg
fidivr
out
test
shl
pop
push
sbb
jg
test
adc
mov
(bad)
je
adc
jg
push
sbb
ja
cdq
pop
neg
jg
out
jle
repnz
mov
push
repnz
push
sbb
push
loope
cld
push
xchg
frstor
push
sbb
or
dec
sbb
xlat
(bad)
and
adc
mov
inc
adc
jg
push
sbb
ja
cdq
pop
neg
jg
out
jle
repnz
mov
push
jb
pop
push
sbb
jg
xor
push
cdq
mov
lahf
jmp
sub
sbb
(bad)
in
mov
in
pop
or
push
in
jl
in
push
xchg
fidivr
lods
and
scas
adc
push
add
xor
sbb
jecxz
sbb
loope
daa
or
dec
sbb
xlat
(bad)
mov
mov
jle
test
push
in
jl
in
push
xchg
fidivr
push
jo
jmp
jne
push
pop
mov
push
repnz
mov
(bad)
in
jg
fcomp
adc
mov
(bad)
lods
dec
adc
jne
stos
out
mov
dec
and
jle
in
push
cdq
and
jmp
in
test
sbb
mov
repnz
mov
sbb
jo
cld
cld
add
lahf
fsub
push
popf
lahf
cdq
jg
in
fimul
mov
lahf
push
ins
adc
jne
inc
movs
sub
daa
loop
inc
rcr
cmp
hlt
inc
stos
arpl
sbb
pop
push
sbb
add
inc
repnz
push
sbb
cmp
ret
lock
in
sar
jne
xchg
repnz
jo
in
inc
or
xor
pop
pop
ds
sbb
call
jle
jne
xchg
repnz
jo
in
push
retf
call
jle
test
adc
popf
repnz
mov
sar
cld
js
loop
inc
dec
shl
ins
mov
jne
inc
dec
and
xchg
or
scas
pop
adc
xchg
or
xchg
mov
mov
mov
sbb
lds
call
neg
cld
add
popf
pop
jge
adc
je
push
sbb
add
lahf
loop
js
fld
pop
jge
rcr
add
push
sbb
aad
xchg
and
mov
mov
repnz
outs
out
jg
scas
aad
jmp
sbb
inc
adc
or
fwait
dec
jg
fwait
dec
ja
push
xchg
loopne
jmp
mov
out
xor
test
sbb
xchg
outs
mov
in
and
in
push
lahf
lahf
add
xor
(bad)
sbb
adc
and
jmp
pop
dec
fwait
dec
jg
fwait
dec
ja
push
xchg
loopne
jmp
mov
push
int3
aaa
cmp
inc
adc
lock
in
jmp
mov
dec
popf
mov
sbb
out
sub
mov
sbb
cmp
adc
lock
in
sar
test
pop
push
sbb
push
xchg
ficom
(bad)
outs
js
dec
inc
adc
mov
jl
jne
dec
mov
jb
adc
in
jg
xchg
lock
in
sar
xchg
inc
adc
rcl
mov
mov
or
in
jg
xchg
mov
in
sbb
in
jg
mov
clc
add
inc
repnz
jb
in
inc
ss
lock
in
mov
outs
js
(bad)
jo
adc
mov
adc
jne
jle
test
jl
in
sar
int3
dec
adc
lea
xchg
scas
mov
dec
clc
add
inc
repnz
popf
push
stc
in
or
fwait
mov
jno
jne
push
jo
or
jmp
sbb
rol
mov
scas
in
jg
sbb
scas
jne
adc
xchg
or
xchg
mov
xchg
dec
adc
mov
(bad)
in
jg
sbb
cmp
push
outs
imul
jmp
cmc
dec
call
scas
in
jg
repnz
outs
jmp
mov
clc
add
inc
jo
jmp
jne
push
xchg
lock
in
sar
xchg
and
jne
(bad)
adc
jne
mov
repnz
outs
pop
jne
jmp
in
xchg
leave
pop
jne
imul
sbb
and
adc
mov
sbb
js
(bad)
add
inc
jb
pop
push
sbb
or
adc
adc
popf
or
sbb
xchg
jno
jg
sbb
add
sub
pop
dec
pop
rol
jle
or
mov
sbb
cmp
push
outs
jg
push
jmp
push
mov
and
adc
in
inc
jle
je
push
xchg
lock
in
rol
mov
push
sbb
cmp
lock
in
sar
jae
jg
cdq
mov
sub
mov
mov
mov
sbb
js
loop
inc
std
or
and
push
fwait
call
cdq
rcr
in
sbb
and
adc
and
sub
jl
mov
inc
inc
adc
shl
mov
sub
popf
lahf
jmp
xchg
(bad)
fimul
mov
push
dec
cld
gs
mul
inc
dec
(bad)
fld
movs
push
xchg
add
js
std
cld
(bad)
mov
out
xchg
mov
arpl
popf
push
aam
cld
aad
in
mov
rol
xchg
mov
lahf
dec
mov
or
or
jl
aad
dec
popf
inc
and
jl
aad
fwait
call
pop
mov
(bad)
adc
movs
(bad)
mov
or
jl
popf
push
and
jne
shr
mov
imul
pop
xchg
jae
out
sub
or
out
and
adc
cld
jo
fidiv
dec
adc
add
pop
jae
push
dec
popf
shl
jne
arpl
jp
push
in
les
pop
jp
inc
out
les
sbb
sbb
es
mov
sbb
(bad)
mov
adc
xor
daa
sbb
push
loop
jmp
jne
push
jo
push
lahf
fdivr
js
loop
inc
jl
and
sub
fwait
pop
(bad)
rol
cmp
push
sbb
push
popf
pop
(bad)
fisttp
mov
cmp
jne
inc
and
popf
inc
jge
sti
adc
je
lahf
fnsave
jg
add
loop
push
sbb
add
inc
xchg
lock
mul
mov
jle
test
scas
push
sbb
inc
pop
fidivr
(bad)
sbb
lahf
loop
js
frstor
jg
ficom
mov
sbb
inc
push
adc
dec
mul
mov
push
popf
shl
sbb
cmps
inc
jne
loope
cld
add
lahf
fld
icebp
sub
cmps
xchg
jg
pop
push
push
xchg
lock
in
rcr
in
(bad)
(bad)
xchg
pop
adc
mov
sub
sbb
scas
mov
jmp
sbb
rcl
jl
arpl
mov
outs
jns
in
jne
lahf
loop
addr16
lahf
int
jmp
fidiv
mov
inc
sub
(bad)
and
repz
popf
sub
sbb
inc
dec
(bad)
fstp
movs
cmps
push
cmp
inc
pop
sbb
lock
lock
in
or
xor
test
sbb
jge
jne
lahf
ret
test
cmc
mov
lahf
fstp
mov
bnd
jmp
jb
pop
push
sbb
push
xchg
fidivr
push
jp
and
cld
add
popf
lahf
test
in
inc
lahf
jmp
leave
pop
jne
xchg
sbb
test
sbb
rcl
popf
fs
sbb
(bad)
in
mov
in
pop
or
xchg
lock
mov
(bad)
sbb
push
cdq
mov
xchg
fdivr
push
sbb
cmp
jne
(bad)
in
mov
in
pop
or
push
mov
in
ja
dec
clc
cmp
inc
jb
pop
push
sbb
cmp
inc
bnd
inc
push
repnz
push
sbb
loope
idiv
addr16
call
fwait
lahf
jne
jmp
sub
xchg
fidivr
and
aaa
sbb
and
adc
xchg
or
xchg
mov
and
jne
scas
adc
push
add
add
pusha
push
sbb
add
inc
repnz
push
repnz
sbb
mov
sbb
loope
idiv
addr16
push
scas
jns
adc
cmp
enter
mov
jle
test
xor
mov
(bad)
in
inc
adc
mov
jmp
lds
sbb
and
sbb
and
adc
jne
scas
adc
push
add
add
pusha
push
sbb
add
inc
repnz
mov
sbb
inc
push
jb
pop
push
sbb
add
inc
repnz
test
add
sub
scas
adc
push
add
add
pusha
push
sbb
add
inc
repnz
push
sbb
inc
push
jb
pop
push
sbb
add
inc
repnz
push
repnz
mov
sbb
mov
sbb
loope
idiv
addr16
push
scas
jns
adc
cmp
enter
mov
jle
test
xor
mov
inc
adc
mov
jle
stos
ret
lock
mov
(bad)
xor
adc
mov
(bad)
lock
adc
jg
push
sbb
ja
cdq
pop
neg
or
jmp
sbb
rcl
cld
jo
jmp
push
xchg
lock
mov
(bad)
hlt
inc
adc
mov
(bad)
mov
adc
jg
push
sbb
ja
cdq
pop
neg
or
jmp
sbb
rcl
sbb
or
jmp
sbb
rcl
popf
lock
sbb
sbb
jne
(bad)
in
mov
in
pop
or
xchg
lock
mov
(bad)
xchg
inc
adc
mov
xchg
hlt
pop
xchg
push
sbb
xor
mov
jle
test
xor
mov
(bad)
pop
inc
adc
mov
(bad)
cmp
adc
jg
push
sbb
ja
cdq
pop
neg
or
jmp
sbb
rcl
sbb
or
jmp
sbb
rcl
int
or
xchg
lock
shl
test
push
sbb
mov
sbb
loope
idiv
addr16
call
fwait
lahf
jne
jmp
sub
xchg
fidivr
mov
bnd
push
add
push
cmp
enter
mov
jle
test
xor
mov
(bad)
mov
mov
(bad)
pushf
inc
adc
jg
push
sbb
ja
cdq
pop
neg
or
jmp
sbb
rcl
sbb
or
jmp
sbb
rcl
hlt
jbe
and
cmp
inc
adc
jg
push
sbb
ja
cdq
pop
neg
or
jmp
sbb
rcl
popf
mov
sbb
jne
(bad)
in
mov
in
pop
or
push
mov
in
ja
dec
clc
cmp
inc
jb
pop
push
sbb
cmp
inc
bnd
push
sbb
inc
push
jb
pop
push
sbb
add
inc
repnz
mov
sbb
inc
push
jo
jmp
jne
push
sbb
inc
repnz
push
sbb
add
xchg
fdiv
cli
push
sbb
add
inc
repnz
lods
push
sbb
sbb
and
fwait
cmps
jne
jmp
out
jg
repnz
lods
push
sbb
jg
pushf
pop
adc
mov
std
push
cld
jo
cld
cld
add
lahf
fsubr
fimul
mov
lahf
push
ins
call
aas
pop
dec
jmp
(bad)
and
push
sub
adc
sub
push
sbb
aad
xchg
and
jmp
mov
dec
sbb
loope
cld
add
lahf
fstp
sar
and
push
repnz
je
in
add
jne
xchg
xor
lahf
lahf
aad
jmp
sbb
add
inc
repnz
test
sbb
xchg
scas
mov
dec
sbb
call
jle
jne
xchg
repnz
gs
adc
adc
jno
push
sbb
add
inc
xchg
lock
in
sar
pop
pop
adc
pop
rcl
sbb
jnp
in
inc
jmp
in
or
jmp
in
add
push
jl
sbb
sbb
or
jmp
sbb
xchg
scas
mov
dec
clc
add
inc
repnz
scas
push
sbb
or
xchg
lea
push
jo
or
jmp
sbb
rol
cld
js
loop
inc
rcr
xor
repnz
jg
sbb
xchg
cmps
in
jge
in
hlt
or
(bad)
in
jg
sbb
js
loop
inc
fwait
lahf
int
jmp
dec
and
in
rcr
in
jmp
jne
push
jo
or
jmp
sbb
push
adc
adc
shr
in
push
scas
jno
adc
xchg
or
xchg
mov
mov
jb
pop
push
sbb
or
jmp
sbb
ror
mov
imul
pop
add
pop
or
call
outs
test
stos
push
sbb
inc
pop
fiadd
fwait
jle
jbe
push
repnz
imul
lock
in
in
mov
loopne
icebp
(bad)
pop
sbb
push
jmp
push
jb
adc
out
jg
dec
popf
dec
cmp
jne
out
sub
call
fwait
lahf
in
jmp
test
jns
jmp
sahf
mov
add
inc
dec
popf
adc
in
add
adc
sahf
rol
scas
loope
jmp
loope
jg
repnz
push
sbb
add
inc
in
adc
in
push
lahf
fdiv
ja
xor
sub
loope
jmp
sbb
sbb
or
adc
sbb
(bad)
(bad)
call
mov
pop
fiadd
test
push
repnz
mov
mov
icebp
dec
rcr
in
adc
in
push
xchg
fidivr
xor
mov
(bad)
sub
jge
in
push
shl
add
push
cld
js
std
cld
add
lahf
frstor
push
rcr
je
push
sbb
add
inc
repnz
pop
sub
sar
in
mov
out
xor
and
in
push
popf
lahf
jmp
fimul
mov
push
dec
cld
gs
mul
inc
dec
(bad)
fstp
movs
push
mov
loope
cld
(bad)
mov
(bad)
push
pop
adc
xor
jns
push
xor
popf
dec
or
sbb
ror
push
scas
popf
sub
push
jmp
push
sbb
xchg
dec
popf
xor
jne
dec
adc
xor
jne
jle
sub
push
jo
jmp
cld
inc
lahf
loop
js
fstp
jg
repnz
jmp
add
cmps
push
sbb
(bad)
jae
out
xor
fcmovnu
fldenv
or
mov
popf
or
sbb
inc
movs
add
jne
icebp
xchg
lock
in
or
jo
jg
adc
or
xchg
lea
loopne
jno
(bad)
icebp
ss
fwait
lahf
je
jmp
enter
jo
jg
push
clc
add
inc
repnz
inc
sbb
mov
sbb
test
fld
ficom
sbb
add
test
sbb
inc
std
mov
(bad)
fldenv
or
cdq
cdq
mov
jo
pusha
aaa
hlt
ja
pop
jne
jo
xor
sbb
js
fnstsw
push
in
call
fwait
pop
adc
push
xchg
xor
jne
push
sbb
jmp
sbb
(bad)
mov
sbb
sbb
pop
adc
mov
fwait
pop
adc
pop
sbb
and
jmp
sbb
inc
unpckhps
jo
xor
lods
xor
loop
cld
cdq
inc
mov
inc
add
ins
or
xor
jmp
jo
pop
jo
jmp
jne
jl
pop
cmp
(bad)
xor
adc
mov
pop
dec
pop
mov
das
icebp
and
or
sbb
loope
sbb
push
jo
(bad)
jl
mov
(bad)
ins
pop
adc
je
jl
mov
(bad)
jl
adc
je
jl
mov
dec
push
jo
(bad)
jl
mov
(bad)
pop
pop
adc
lea
pop
dec
pop
mov
das
pop
pop
push
sbb
jmp
push
pop
push
sbb
jmp
in
push
sbb
jmp
add
push
sbb
or
xor
(bad)
jl
mov
(bad)
lock
adc
je
jl
mov
inc
push
adc
je
jl
mov
(bad)
rcl
push
jo
(bad)
jl
mov
(bad)
mov
lea
dec
fldenv
or
dec
and
lock
ficom
pop
mov
shl
jg
bnd
cmps
push
sbb
mov
enter
jl
mov
(bad)
sub
push
jo
jg
call
push
sbb
mov
enter
jl
mov
(bad)
adc
adc
lea
jmp
push
mov
jmp
sbb
jl
das
pop
pop
push
sbb
jmp
jne
fnstsw
rcl
stos
push
push
sbb
jl
das
imul
jmp
push
mov
aam
push
jb
push
push
sbb
jl
das
pop
pop
push
sbb
jmp
jne
xchg
cmp
xor
stos
push
push
sbb
jl
das
push
pop
push
sbb
or
sbb
jg
sahf
aam
push
repnz
push
sbb
pushf
mov
call
jl
mov
(bad)
push
push
adc
mov
add
push
and
test
fwait
mov
add
jne
jecxz
aaa
sub
jge
test
mov
fcomp
(bad)
(bad)
lahf
mov
cdq
mov
mov
jmp
sbb
push
dec
popf
call
push
jmp
push
xchg
lea
push
in
mov
pop
jne
push
dec
inc
jmp
js
pop
test
jl
pop
cmp
add
test
popa
int
jne
push
sbb
(bad)
xor
adc
xor
push
sbb
sub
inc
pop
push
sbb
add
or
pop
(bad)
popf
in
jo
jmp
sbb
call
jl
popf
js
sbb
adc
mov
jl
mov
jle
je
push
xchg
xor
pop
test
(bad)
jle
jmp
cmc
sar
stos
ret
scas
pop
push
sbb
cmp
push
adc
adc
cmp
jl
pop
test
cmp
jle
ja
push
jo
jmp
mov
xchg
fnstsw
add
jmp
sbb
sub
inc
pop
push
sbb
sub
xor
push
sbb
nop
jle
ja
push
jo
jmp
sbb
call
jl
popf
enter
and
aaa
cmp
and
mov
jl
sbb
jmp
jne
jle
scas
ret
scas
pop
push
sbb
cmp
push
adc
aad
push
sbb
sub
inc
pop
push
sbb
sub
xor
push
sbb
nop
jle
je
push
jb
adc
pop
test
sbb
inc
jb
pop
push
sbb
jmp
(bad)
mov
sub
push
jo
jg
cs
pop
aad
push
jo
call
jle
jne
push
jo
call
jle
scas
ret
scas
pop
push
sbb
cmp
push
adc
popa
pop
push
sbb
sub
inc
pop
push
sbb
sub
adc
in
jle
sub
sbb
add
adc
jne
xchg
shl
jl
popf
in
sbb
inc
scas
ret
jne
push
sbb
inc
repnz
movs
push
sbb
jmp
mov
dec
push
adc
jne
and
jmp
jp
ret
pop
adc
mov
adc
psubsb
(bad)
stos
ret
lock
push
sbb
cmp
push
adc
cmc
and
js
loop
inc
jl
mov
jl
mov
jle
je
push
jo
call
jle
jne
push
jb
adc
jne
xchg
shl
jl
popf
inc
xor
test
(bad)
das
(bad)
jg
jo
jg
cs
pop
aad
push
jo
jmp
sbb
call
jle
scas
ret
scas
pop
push
sbb
cmp
push
adc
in
push
sbb
ja
cmp
jl
mov
jl
mov
jl
sbb
call
jle
je
push
jb
adc
sbb
call
jl
popf
shl
aaa
cmp
and
mov
jl
pop
out
add
jb
adc
sbb
call
jle
scas
ret
jne
adc
jne
mov
in
rcl
jne
and
jmp
pop
aad
push
jo
call
jle
je
push
jo
call
jle
scas
ret
scas
pop
push
sbb
cmp
push
adc
test
pop
loop
inc
jl
mov
jl
mov
jl
pop
(bad)
jle
je
push
jb
adc
sbb
call
jle
scas
ret
jne
cdq
cmp
mov
(bad)
ret
jne
and
jmp
jp
ret
ins
call
jle
jne
push
jo
call
jle
stos
ret
je
push
sbb
push
mov
aam
push
jo
jg
cs
jp
ret
ins
call
jle
jne
push
jo
call
jle
xlat
ret
je
push
sbb
push
mov
loopne
push
xchg
lea
push
in
mov
pop
jne
push
in
loopne
pop
jne
push
jo
call
jl
sbb
call
jle
scas
ret
jne
push
sbb
and
test
jl
mov
jl
mov
jl
pop
in
out
jne
push
jo
call
jle
stos
ret
je
push
sbb
push
mov
jmp
cs
pop
aad
push
jo
call
jle
je
push
jo
call
jle
lods
ret
(bad)
pop
push
sbb
cmp
push
adc
in
and
jmp
xchg
cmp
and
cld
(bad)
mov
pusha
jecxz
jg
inc
mov
add
or
xlat
test
fwait
call
shl
jmp
in
mov
fcomp
(bad)
dec
cmp
mov
mov
jmp
xchg
mov
push
in
mov
cmp
fwait
pop
test
inc
repnz
lahf
push
sbb
outs
(bad)
dec
jne
jl
mov
jl
and
push
out
(bad)
inc
out
xor
jo
jo
jmp
sbb
call
jle
ja
push
repnz
mov
mov
jne
push
in
mov
pop
jne
push
dec
pop
mov
push
jmp
jl
sbb
call
jle
scas
ret
jne
xchg
cmp
mov
jmp
sbb
push
in
mov
pop
jne
push
in
les
sbb
popf
pop
lea
jb
pop
sar
mov
call
jle
scas
ret
jne
sub
jne
mov
aad
push
jo
jmp
jo
pop
jo
jmp
jne
jl
pop
cmp
(bad)
cwde
push
adc
mov
pop
dec
pop
mov
das
jno
push
sbb
jmp
jne
push
in
loopne
pop
jne
jb
adc
add
call
jle
stos
ret
lock
push
sbb
cmp
push
push
mov
cld
js
loop
inc
jle
scas
ret
jne
push
sbb
jmp
sbb
call
jl
sbb
jg
bnd
lahf
push
sbb
mov
and
jmp
jne
jmp
sbb
imul
jne
push
jb
adc
xchg
(bad)
pop
push
push
jo
jg
cs
jp
ret
pop
adc
push
pop
cli
jle
jne
inc
jb
pop
push
sbb
jmp
(bad)
add
or
jne
and
jmp
jp
ret
pop
adc
push
sbb
call
jle
stos
ret
lock
push
sbb
cmp
imul
sbb
jmp
jne
push
in
les
jb
adc
pop
out
jle
je
push
jb
adc
sbb
call
jl
popf
cmp
sbb
bound
inc
js
fstp
sub
inc
pop
push
sbb
sub
xor
push
sbb
nop
jl
sbb
call
jle
jne
inc
jb
pop
push
sbb
jmp
(bad)
mov
pop
jne
push
in
mov
pop
jne
push
in
les
jb
adc
sbb
jmp
sbb
call
jl
popf
les
sbb
out
xor
jl
mov
jl
mov
jl
pop
(bad)
jle
jne
push
jb
adc
sbb
call
jle
scas
ret
jne
sbb
mov
ret
jne
and
jmp
pop
aad
push
jo
call
jle
jne
push
jo
call
jle
lods
ret
scas
pop
push
sbb
cmp
push
and
sub
inc
pop
push
sbb
sub
xor
push
sbb
nop
jle
jne
push
jb
adc
pop
sahf
jle
jne
inc
jb
pop
push
sbb
jmp
(bad)
and
in
mov
pop
jne
push
in
loopne
pop
jne
push
jb
adc
pop
lods
jl
sbb
call
jle
scas
ret
jne
push
sbb
and
(bad)
xor
xchg
push
sbb
sub
inc
pop
push
sbb
sub
adc
cwde
jl
pop
(bad)
jl
sbb
call
jle
scas
ret
jne
push
sbb
and
test
jl
mov
jl
mov
jl
pop
in
inc
pop
xchg
jle
jne
inc
jb
pop
push
sbb
call
(bad)
hlt
imul
jmp
sbb
sub
xor
push
sbb
xchg
jle
jne
push
jb
adc
sbb
inc
jb
pop
push
sbb
jmp
(bad)
sbb
jmp
pop
js
fstp
fisttp
mov
lahf
push
ins
add
xlat
test
fwait
mov
sbb
jb
adc
pop
cmp
jle
jne
xchg
in
mov
xchg
outs
adc
mov
call
sbb
jl
and
add
lahf
frndint
js
loop
inc
inc
repnz
push
sbb
in
sbb
adc
xor
xchg
xor
xor
add
push
jb
adc
popf
loop
in
add
add
imul
jl
dec
lods
ret
and
sbb
mov
stos
xchg
jg
cdq
mov
lahf
pop
lea
adc
or
arpl
sbb
call
dec
mov
scas
cdq
adc
push
idiv
inc
dec
inc
cs
aad
cld
gs
idiv
push
sbb
(bad)
test
push
or
jne
mov
aaa
sbb
and
sbb
popf
push
sbb
jne
(bad)
in
mov
lds
mov
cmps
pop
jne
xchg
sbb
movs
push
sbb
imul
cmc
pop
jb
xor
add
inc
bnd
push
sbb
std
jmp
out
vmovshdup
mov
(bad)
in
bound
or
jne
imul
cmc
pop
jb
xor
add
inc
repnz
xchg
push
sbb
std
jmp
sub
ret
lock
mov
(bad)
fsub
push
call
pop
stos
aaa
sbb
and
adc
sbb
or
jmp
sbb
out
xchg
or
xchg
mov
imul
cmc
pop
jb
xor
add
inc
repnz
push
sbb
std
jmp
mov
lock
mov
inc
adc
or
outs
fs
fwait
lahf
jne
jmp
or
mov
movs
pop
jne
xchg
sbb
lods
add
jne
out
test
rcr
fs
fwait
lahf
jne
jmp
or
mov
movs
pop
jne
xchg
sbb
js
sbb
imul
cmc
pop
jb
xor
add
inc
repnz
xchg
push
sbb
cmp
iret
pop
jne
pop
ret
aaa
sbb
and
cmp
xchg
jg
jb
pop
push
sbb
call
(bad)
js
jg
jb
cmps
pop
sbb
add
xor
jo
cld
cld
add
lahf
fcomp
dec
shl
gs
dec
and
arpl
retf
mov
or
xchg
adc
pusha
ins
adc
sub
pop
cmc
mov
fidivr
(bad)
outs
jge
push
dec
popf
enter
fisttp
sub
sbb
or
fwait
cdq
mov
sbb
inc
dec
retf
sahf
push
add
or
sub
not
sbb
ja
in
inc
jle
mov
loope
mov
dec
adc
les
push
sbb
loope
std
adc
xchg
cmps
xchg
in
cmc
pop
jb
xor
add
inc
repnz
xchg
push
sbb
cmp
adc
fs
fwait
lahf
cwde
ja
in
push
lahf
jmp
in
mov
outs
fs
fwait
lahf
cwde
ja
in
push
xchg
cmps
xchg
in
cmc
pop
jb
xor
add
inc
repnz
push
sbb
cmp
adc
call
fwait
lahf
cwde
ja
in
push
xchg
hlt
adc
in
mov
outs
fs
fwait
lahf
cwde
ja
in
push
xchg
cmps
xchg
in
cmc
pop
jb
xor
add
inc
repnz
push
sbb
cmp
push
outs
fs
fwait
lahf
cwde
ja
in
push
lahf
jmp
in
mov
outs
fs
fwait
lahf
cwde
ja
in
push
xchg
cmps
xchg
in
cmc
pop
jb
xor
add
inc
repnz
xchg
push
sbb
cmp
sbb
test
cwde
ja
in
push
lahf
jmp
jmp
cmps
xchg
in
cmc
pop
jb
xor
add
inc
repnz
loop
jg
outs
fs
fwait
lahf
cwde
ja
in
push
xchg
cmps
xchg
in
cmc
pop
jb
xor
sbb
add
inc
repnz
push
sbb
or
jmp
in
or
in
xchg
or
xchg
mov
mov
jle
mov
jmp
xchg
lock
stos
jmp
add
jmp
cs
push
xchg
test
sar
adc
scas
jmp
popf
data16
mov
rcl
cld
add
pop
fidivr
enter
call
jbe
push
call
sbb
cmc
cmp
sub
lock
stos
in
jg
and
cmp
lahf
mov
jne
xchg
loop
jg
dec
sbb
or
jmp
sbb
rcl
int
xor
jne
lock
lock
loope
mov
rcr
mov
push
sbb
aad
outs
loop
xchg
mov
cld
fisttp
test
lahf
fnsave
mov
jmp
sbb
sub
rcl
add
push
jb
pop
push
sbb
add
inc
bnd
push
sbb
outs
pusha
push
jne
jle
aam
push
jb
pop
push
sbb
add
inc
repnz
push
icebp
cmp
push
push
jne
fwait
lahf
mov
in
push
lahf
jmp
jmp
lahf
mov
in
call
fwait
lahf
mov
in
push
jle
lods
ret
lock
in
sar
shl
push
cdq
mov
fwait
lahf
mov
in
push
fwait
lahf
mov
test
clc
add
inc
jb
pop
push
sbb
add
inc
repnz
push
jo
or
jmp
sbb
pop
jb
pop
push
sbb
add
inc
repnz
sbb
sbb
mov
xchg
jae
adc
lock
in
add
pop
and
or
js
in
cmp
cld
cld
add
lahf
fdiv
cmp
sbb
repz
sbb
mov
jb
and
gs
pop
jne
xchg
out
jg
dec
popf
js
sbb
ror
sbb
or
jmp
sbb
xchg
out
jg
dec
popf
lods
add
jne
xchg
ret
jmp
ret
jmp
in
jg
outs
or
fdiv
test
in
jg
icebp
jp
fwait
ret
jmp
in
and
inc
mov
scas
lea
in
add
inc
jb
pop
push
sbb
add
inc
repnz
push
xchg
lock
in
sar
fsub
push
xchg
lock
loope
mov
jmp
sbb
stos
retf
jmp
dec
pop
sar
adc
out
in
cmp
cld
cld
add
lahf
fdivr
add
inc
in
je
in
push
fwait
lahf
mov
in
push
fwait
cmps
mov
in
or
xchg
or
pop
sbb
xchg
loop
jg
dec
pop
sub
cmp
pop
jne
push
jo
push
inc
repnz
add
inc
dec
mov
(bad)
mov
mov
lahf
fnstcw
lahf
jb
jmp
loop
jg
dec
adc
inc
sbb
push
ins
outs
cmp
pusha
adc
pushf
cs
in
fisttp
mov
or
mov
popf
xor
sbb
inc
dec
into
mov
(bad)
pop
add
sbb
adc
loope
push
sbb
cmp
lahf
push
repnz
xchg
push
sbb
add
pop
fiadd
xchg
inc
repnz
(bad)
in
adc
cld
pop
aas
ret
popf
pop
jge
and
and
adc
hlt
jae
pusha
jne
jle
call
xchg
push
sbb
call
inc
adc
inc
xchg
push
sbb
sbb
sbb
or
jmp
repnz
cmp
lock
in
sar
pop
out
jg
cdq
mov
sub
mov
pop
sbb
adc
ret
movs
movs
bound
add
sbb
inc
dec
es
inc
int
or
xlat
in
lahf
inc
in
sbb
mov
inc
xchg
fnsave
in
xchg
loopne
sti
in
inc
xchg
lods
cwde
jg
sbb
adc
ret
cmp
lods
leave
cmp
push
dec
cld
inc
loope
mov
adc
mov
dec
xchg
mov
sar
jb
mov
sti
in
add
sbb
add
sub
add
icebp
aaa
mov
sbb
jg
repnz
xchg
push
sbb
inc
loopne
je
sbb
lock
rcr
inc
or
jmp
pop
jne
fcmovb
aaa
sbb
and
cmp
mov
mov
xchg
lock
in
sar
push
adc
lock
in
sar
or
jg
fwait
xchg
add
jne
xchg
mov
popf
add
in
add
add
sbb
and
sbb
pop
cmp
jb
pop
push
sbb
call
jle
jmp
sbb
pop
daa
ret
fwait
cmps
pop
outs
jmp
int3
aaa
sub
adc
push
jb
and
inc
into
pop
jne
mov
(bad)
jo
adc
enter
mov
push
mov
xchg
mov
ficomp
sbb
call
jle
in
push
repnz
xchg
push
sbb
pop
daa
ret
fwait
cmps
xchg
ins
jmp
int3
aaa
sub
adc
push
jb
and
inc
into
pop
jne
push
test
(bad)
adc
push
cdq
mov
fwait
cmps
retf
ins
jmp
int3
aaa
sub
ror
into
sub
jmp
jne
push
sbb
jle
jmp
push
repnz
(bad)
push
sbb
lds
jo
sar
mov
xor
jmp
pop
int
fwait
lahf
shr
and
sbb
test
cmc
mov
jl
clc
cmc
scas
dec
and
jg
dec
mov
mov
sbb
sbb
sbb
jg
scas
popf
cmp
sbb
push
mov
clc
lds
cmc
mov
repnz
mov
ror
and
sbb
enter
mov
jmp
adc
clc
lds
jmp
(bad)
jo
adc
mov
push
sbb
ins
jmp
test
lea
sbb
test
shl
lahf
pop
xchg
or
sbb
pop
push
sbb
(bad)
jo
imul
push
ficomp
jmp
cld
(bad)
lods
test
adc
sbb
or
mov
retf
adc
jne
xchg
or
lahf
pop
lods
cmp
stc
cld
add
popf
lahf
lds
in
inc
rcr
adc
jne
push
fidiv
push
sbb
adc
lods
or
cmps
and
cmp
and
pop
cmp
jl
pop
cmp
dec
push
jb
pop
push
sbb
jmp
(bad)
or
sbb
push
sbb
cmp
sbb
jne
push
repnz
xor
in
inc
adc
cmp
push
sbb
repnz
pop
push
sbb
call
inc
bnd
push
sbb
add
xchg
fld
repnz
sbb
jmp
mov
lahf
fldcw
in
adc
cld
pop
aas
ret
fwait
lahf
int
jmp
mov
jg
dec
sbb
call
jle
rol
jb
adc
popf
push
and
add
add
sbb
aaa
adc
jo
mov
sbb
xor
ins
ficom
sbb
add
inc
jo
jmp
pop
cmp
sbb
jne
(bad)
js
adc
lock
in
sar
cmp
rcl
jne
push
repnz
push
jl
sbb
jmp
jne
and
add
(bad)
popf
adc
sbb
into
xor
fs
repnz
push
sbb
cmp
fwait
pop
xchg
sar
xor
adc
mov
ret
inc
sub
(bad)
add
add
es
push
dec
and
test
mov
and
mov
rcl
gs
xchg
(bad)
je
push
gs
out
sbb
jl
jne
inc
adc
sbb
sub
je
push
outs
outs
mov
sbb
dec
mov
xchg
call
push
sbb
mov
push
adc
jne
jecxz
aaa
sub
sbb
lahf
repnz
or
xchg
lea
cli
shl
jmp
in
xor
mov
ror
cld
add
fwait
lahf
mov
jg
dec
mov
sbb
sahf
lock
clc
add
inc
in
les
push
jne
pop
fiadd
out
popf
lahf
test
add
xchg
bnd
adc
jg
xor
inc
jmp
mov
xchg
cli
mov
xor
pop
jmp
mov
(bad)
push
(bad)
adc
cmp
in
push
bound
pop
sbb
out
jg
xchg
lock
jmp
mov
jmp
sbb
cmp
js
push
xchg
lea
sub
ret
jp
test
rol
mov
cld
js
loop
inc
xchg
aas
adc
sbb
sub
ret
add
sbb
fst
sbb
inc
jb
push
in
call
dec
cld
mov
repz
js
loop
inc
mov
jmp
lahf
inc
xchg
sbb
cmp
jns
push
repz
xchg
sbb
or
add
cmc
push
jne
lahf
loop
addr16
lahf
popf
jge
in
inc
call
jb
push
xchg
xor
in
inc
push
xor
sub
sbb
les
sbb
mov
push
sbb
mov
pop
test
sub
sbb
movs
sub
sbb
pushf
sub
sbb
xchg
sub
sbb
mov
sbb
mov
sbb
mov
sbb
add
sub
sbb
nop
sub
sbb
mov
sbb
lea
gs
push
in
nop
(bad)
nop
jns
push
jb
jg
sbb
mov
sbb
inc
into
bound
xchg
mov
jne
mov
mov
sbb
add
inc
repnz
push
sbb
add
jmp
jae
push
xchg
lea
jmp
lahf
mov
in
jg
bnd
mov
sbb
cmp
push
outs
push
jmp
aaa
cmp
sbb
bnd
mov
sbb
xchg
out
jg
xchg
lock
in
inc
xchg
call
cmc
mov
pop
adc
jne
jmp
lahf
mov
in
jg
sahf
aam
push
repnz
jmp
mov
ror
and
js
push
sub
sbb
sbb
inc
repnz
jmp
daa
mov
sbb
mov
jle
lods
ret
jne
mov
das
icebp
and
fcomp
jne
inc
pop
jne
scas
popa
adc
xchg
or
xchg
mov
xchg
out
jg
dec
clc
add
inc
jb
pop
push
sbb
add
inc
repnz
push
sbb
inc
push
jb
adc
clc
add
inc
in
pushf
sbb
lds
jne
xchg
cmps
mov
in
cmc
ss
jmp
pop
cmp
jg
push
in
pushf
sbb
std
adc
(bad)
(bad)
jno
push
xchg
clc
jge
in
add
in
add
sbb
out
cdq
lea
jl
sbb
jmp
mov
(bad)
lods
jl
push
repz
in
jg
icebp
dec
(bad)
mov
in
add
out
jg
es
cld
adc
dec
(bad)
ss
jmp
pop
cmp
jl
push
in
pushf
sbb
popa
adc
jmp
adc
lock
in
sbb
hlt
ja
add
fwait
lahf
mov
in
or
jmp
pop
jne
xchg
jmp
jg
dec
popf
cld
sbb
or
or
jmp
mov
jge
push
call
arpl
pop
cmp
rcr
push
repnz
push
sbb
cmp
jge
push
repz
in
jg
xchg
lock
in
sar
lods
ret
lock
in
sar
add
push
cdq
mov
jle
jne
push
xchg
lock
in
shr
das
pop
pop
push
sbb
add
sbb
mov
jle
mov
push
jmp
sbb
imul
sbb
add
inc
xchg
lock
in
sar
mov
jno
in
sar
test
adc
mov
jle
jne
push
xchg
lock
in
shr
das
pop
pop
push
sbb
add
sbb
mov
jle
mov
push
jmp
sbb
imul
xchg
mov
in
dec
jmp
sbb
jns
loop
hlt
ss
jmp
pop
cmp
jge
push
in
test
pop
jne
jmp
loop
adc
lock
in
cmp
jp
xchg
loope
jg
nop
icebp
test
in
jg
sub
test
and
mov
jle
mov
push
jmp
sbb
imul
in
or
es
scas
fwait
mov
cmp
jne
xchg
out
jg
dec
clc
add
inc
jb
pop
push
sbb
add
inc
repnz
push
sbb
inc
push
jb
adc
clc
add
inc
in
mov
cmp
mov
in
cmc
ss
jmp
pop
cmp
jb
push
in
mov
push
sbb
ja
push
fdiv
jp
in
cmp
jp
xchg
loopne
jg
nop
icebp
test
in
jg
sub
test
and
mov
jle
mov
push
jmp
sbb
imul
lahf
(bad)
jle
in
or
jmp
call
mov
in
inc
fs
outs
data16
fwait
lahf
mov
in
or
jmp
pop
jne
xchg
jmp
jg
dec
popf
jl
sbb
ror
int
pop
sbb
icebp
xchg
lock
mov
xchg
dec
jmp
jne
push
jb
adc
sbb
push
lahf
lahf
test
in
cmp
jmp
in
adc
sbb
sub
ret
add
fwait
pop
inc
sbb
test
cmc
mov
lahf
fstp
sbb
daa
sar
in
rcl
shl
mov
pop
jne
jl
clc
add
inc
jo
call
jmp
in
sub
sbb
fwait
jmp
jg
cdq
mov
adc
xchg
loopne
jmp
mov
inc
xchg
call
shr
scas
test
in
add
sbb
push
xchg
lock
jmp
mov
jl
sbb
jg
jmp
push
sbb
jg
in
adc
inc
les
sbb
cmp
jl
pop
cmp
push
sbb
cmp
jno
push
xchg
lock
in
or
sub
jmp
mov
repnz
mov
mov
xchg
es
arpl
cld
inc
jl
clc
adc
inc
dec
sbb
jg
jmp
push
sbb
sbb
and
push
push
sbb
jg
enter
xchg
lea
mov
repnz
jp
aaa
adc
jne
jl
pop
test
rol
jb
pop
push
sbb
call
(bad)
mov
mov
jl
mov
(bad)
aam
adc
lea
pop
in
xchg
jmp
push
mov
push
repnz
test
sbb
fimul
mov
push
dec
cld
gs
idiv
inc
dec
(bad)
cmc
push
movs
mov
fimul
js
loop
inc
popf
pop
jns
push
sbb
sbb
idiv
push
adc
rcr
jne
sub
sbb
mov
das
popf
sbb
adc
jne
shl
xor
mov
cmc
sbb
pop
jne
xchg
push
jne
sub
sbb
mov
das
pop
pop
push
sbb
mov
push
outs
jle
and
loopne
push
repnz
push
sbb
or
mov
(bad)
push
jno
push
xchg
lea
xchg
xor
fisttp
test
arpl
mov
(bad)
sub
push
and
mov
cmc
add
jne
arpl
mov
dec
adc
inc
mov
xor
dec
lock
add
cmp
jbe
push
icebp
jns
mov
std
cld
(bad)
mov
int
inc
push
adc
jne
and
jae
or
jmp
xchg
mov
and
jmp
ds
pop
jne
adc
jne
and
jmp
(bad)
aam
push
and
mov
cmc
adc
jne
and
jae
or
jmp
in
xchg
jmp
push
and
(bad)
ins
jno
push
icebp
jae
out
xor
fcmovnu
fsub
push
sbb
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
lahf
jmp
(bad)
movs
jne
push
xchg
mov
sub
add
push
dec
popf
rcl
sbb
rcl
cld
vmovlps
(bad)
std
sbb
add
cmp
jp
push
xor
bound
idiv
outs
xchg
pop
jp
adc
mov
adc
pop
cmp
jne
push
jo
xlat
jl
and
jg
shl
nop
push
sbb
push
sbb
adc
dec
add
jne
std
xor
popa
push
sbb
inc
ds
(bad)
mov
bnd
mov
pop
fwait
push
mov
push
ds
popf
push
test
mov
xor
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
xchg
push
mov
adc
jne
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
ret
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
in
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
sbb
xor
add
push
.byte
.byte
