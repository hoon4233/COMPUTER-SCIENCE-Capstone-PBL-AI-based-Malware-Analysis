sbb
add
mov
push
stc
pop
xlat
pop
leave
lahf
cmps
mov
push
push
call
cld
bound
cs
cmc
inc
jmp
lods
add
pop
fwait
cmp
jecxz
in
xor
xchg
inc
mov
pop
jb
mov
jnp
xchg
push
jnp
test
and
sub
daa
sbb
mov
(bad)
lock
pop
shl
stos
or
icebp
cmp
push
jne
mov
adc
js
repnz
jno
fstp
add
pop
pop
out
mov
push
pop
aaa
scas
iret
mov
push
inc
push
adc
xchg
pop
mov
lods
jmp
retf
or
stc
sub
rsm
fs
pop
pop
mov
inc
pop
jg
mov
xor
cs
out
jge
jl
cwde
jns
out
jle
hlt
push
add
mov
mov
dec
jnp
jae
mov
por
xor
inc
xchg
xchg
add
xor
xlat
sbb
or
push
aaa
or
out
inc
(bad)
dec
js
xor
sbb
mov
arpl
sahf
inc
cmp
inc
adc
test
test
mov
dec
inc
into
retf
pop
adc
push
fs
pusha
leave
in
sub
(bad)
mov
pop
pop
aam
out
sbb
popf
lock
test
mov
ds
mov
mov
mov
maxps
stc
cmc
xchg
imul
add
popa
lahf
inc
cmc
pop
mov
dec
stos
popa
sbb
in
out
cmp
push
and
push
call
jns
push
add
or
dec
rcl
loop
adc
xchg
pop
repz
int
adc
inc
mov
movs
retf
in
add
sub
stc
je
mov
jp
cwde
leave
jmp
and
sar
add
test
ins
mov
cmps
vmread
shl
daa
jmp
jp
or
jg
push
ret
add
ja
inc
sahf
jo
xchg
movs
pop
inc
jbe
lock
mov
adc
cdq
sbb
mov
aad
dec
in
in
loopne
daa
aad
jbe
jg
inc
sbb
inc
dec
lock
xor
mov
into
xchg
cmc
inc
dec
pop
xchg
(bad)
mov
gs
sub
dec
mov
ret
out
dec
adc
loop
pop
inc
(bad)
sbb
icebp
push
adc
jg
(bad)
and
das
ret
clc
and
repnz
inc
mul
or
js
enter
lods
mov
push
dec
outs
arpl
pop
inc
push
dec
and
pop
xchg
mov
out
(bad)
aas
(bad)
je
jle
ror
xor
adc
jns
lods
dec
mov
inc
jecxz
dec
jno
shl
jge
adc
stos
push
xchg
xchg
aaa
inc
int
adc
aam
pop
ffree
(bad)
test
aad
or
lahf
pusha
xchg
jge
xchg
and
lods
pop
enter
dec
outs
xchg
jmp
hlt
jge
mov
fst
dec
scas
jle
aad
sub
lods
cmps
call
dec
or
mov
scas
push
cmc
sub
ja
or
retf
(bad)
loop
aad
clc
retf
or
imul
adc
std
cmps
xor
into
out
frstor
icebp
js
or
outs
push
enter
inc
out
sub
jecxz
ficom
nop
dec
cs
lods
cld
sub
push
sub
jmp
sbb
in
test
dec
test
xor
and
fld
add
(bad)
jmp
aad
sbb
stos
jbe
xchg
shl
ret
cdq
inc
adc
jnp
sbb
ret
push
dec
fsubp
out
sub
jae
cmp
xchg
jmp
mov
jbe
cmps
jle
mov
mov
mov
(bad)
and
mov
mov
fbld
and
hlt
shr
push
ret
xchg
aas
cmc
dec
or
movlps
cdq
jp
test
push
push
je
inc
rol
push
shl
mov
push
push
nop
pop
xchg
cmp
cmp
data16
call
mov
mov
mov
cmp
jb
pushf
fcmovnb
cmp
out
lahf
inc
and
test
les
imul
mov
aaa
retf
movs
cmp
mov
adc
fwait
push
test
ror
pushf
pop
data16
cmp
js
(bad)
(bad)
div
cmps
pop
push
inc
rcl
clc
push
out
mov
pop
in
ins
fisubr
clc
pushf
imul
pusha
xchg
dec
push
mov
(bad)
inc
into
fild
sub
cmps
jno
ds
int3
sahf
xlat
mov
call
push
add
push
je
adc
(bad)
dec
mov
out
inc
cmp
lds
sbb
repnz
jmp
iret
loope
xchg
dec
int3
pusha
je
sbb
test
xor
jge
jnp
mov
rcl
nop
inc
in
jbe
pop
pop
std
ins
shr
push
adc
xchg
pop
mov
js
sub
push
or
and
test
jno
add
cmp
mov
push
fs
sub
icebp
fiadd
les
add
mov
fwait
or
lahf
pop
lds
sbb
jae
push
in
push
add
or
imul
sbb
retf
enter
push
cmp
enter
inc
(bad)
nop
out
or
mov
mov
adc
and
in
or
push
outs
out
rol
or
jmp
push
(bad)
inc
jecxz
out
sub
push
xchg
add
aaa
mov
sbb
adc
mov
(bad)
mov
sbb
loopne
ret
sub
ret
mov
cmp
mov
pop
sub
(bad)
call
ror
pop
aam
jp
leave
add
adc
add
push
cli
or
stc
fstp
cmp
es
data16
lods
mov
arpl
scas
mov
mov
adc
adc
in
ds
addps
iret
aam
sbb
cwde
push
adc
dec
loop
gs
std
sbb
popf
rcl
push
cmp
in
jl
aas
(bad)
out
or
iret
or
jmp
aad
fcomp
mov
fbld
push
inc
add
lock
fbstp
jb
xor
xchg
dec
sub
fs
add
jmp
jbe
into
xchg
fsub
daa
cdq
into
dec
xchg
sbb
jae
xor
and
outs
add
test
iret
jno
rol
out
and
inc
out
push
loopne
xor
mov
lahf
push
xor
out
sar
fdiv
sbb
adc
dec
push
cmc
mov
pushf
jp
add
xor
dec
and
add
add
pop
loopne
sbb
or
push
fdivr
sbb
lock
push
stos
jnp
cwde
cmps
loop
outs
movs
cmp
out
and
mov
int3
js
dec
mov
dec
mov
test
and
stc
lock
(bad)
jmp
adc
push
mov
cmps
test
(bad)
mov
sub
sub
pop
pop
leave
lock
dec
mov
pop
sti
inc
pop
icebp
shl
cmps
pushf
mov
shl
pop
add
jns
std
pop
loope
fcmovnb
xchg
cld
jp
std
fiadd
mov
dec
ins
push
pusha
xchg
pop
in
add
add
stos
es
std
or
cmp
(bad)
mov
leave
fidivr
out
pop
mov
shl
movs
mov
js
ins
pop
or
push
and
push
arpl
popf
pop
test
mov
sbb
iret
add
dec
sahf
and
into
inc
sub
or
jl
rcl
mov
stos
(bad)
mov
in
cmp
jno
dec
les
jg
inc
mov
sbb
sbb
push
sbb
xchg
arpl
dec
das
xchg
pop
inc
dec
adc
rol
cmps
add
mov
jb
mov
fdiv
xor
xor
push
jne
cwde
inc
sub
xchg
add
xchg
inc
lea
mov
neg
mov
retf
xor
push
sbb
lods
lock
fistp
fucomi
shl
push
xchg
mov
out
test
in
xor
jmp
add
jne
ret
mov
loopne
retf
out
dec
cmp
mov
xchg
mov
sbb
adc
push
aas
gs
mov
test
push
dec
pop
daa
out
popa
pop
pop
mov
sahf
add
div
pop
stc
shl
pop
and
xor
sub
inc
ror
in
sti
cmp
pop
mov
ror
cmp
not
ret
cmps
ds
lock
test
push
sti
cld
inc
mov
adc
int
sti
sub
ja
push
adc
int3
adc
mov
shr
fsub
bnd
pop
mov
adc
test
push
push
push
dec
js
fld
movs
in
xchg
jge
data16
(bad)
repz
sbb
popf
shr
mov
outs
push
dec
pop
popf
out
dec
xchg
and
fs
jge
repnz
bound
lods
jp
pusha
test
xchg
cli
(bad)
sbb
in
jns
jle
pop
cmps
aas
jbe
rcl
ror
cwde
push
pop
add
stc
ja
daa
push
out
inc
in
pop
adc
adc
cmp
out
loop
ins
add
jns
cmps
ss
mov
cmc
jb
(bad)
loope
adc
jl
push
pop
mov
push
adc
pop
dec
mov
pop
xlat
and
stos
cmp
xor
js
popa
ss
xchg
pop
jmp
cmp
add
pushf
dec
mov
inc
push
mov
mov
outs
cmp
sub
xlat
mov
xchg
sub
inc
xchg
jno
mov
fwait
inc
iret
mov
call
in
shr
push
mov
dec
(bad)
in
outs
mov
jbe
daa
fiadd
cmp
inc
and
sub
cmp
jl
cld
imul
pop
fistp
(bad)
push
enter
call
ja
dec
cs
mov
xor
sbb
sub
fdivr
rol
mov
imul
fld
jecxz
pushf
push
out
or
xchg
mov
xchg
fidiv
mov
mov
push
xor
(bad)
cdq
mov
sbb
mov
addr16
ret
or
inc
push
sub
push
enter
xchg
jns
shr
jle
pop
cmp
call
jno
jb
sbb
and
sbb
or
stos
test
pop
cld
dec
xlat
mov
addr16
xchg
aam
dec
sbb
push
ja
cmc
add
mov
mov
dec
add
fcmove
les
dec
adc
sbb
pop
stos
push
lods
std
nop
cmp
push
retf
xor
clc
stc
fisub
mov
test
popf
std
fisubr
and
lods
xchg
xchg
mov
or
push
daa
sub
sub
sub
loop
sar
mov
xchg
ja
jb
inc
inc
mov
stos
pop
out
push
xor
fistp
int3
mov
loop
fisubr
inc
sbb
jg
sar
retf
jb
push
mul
arpl
cmp
mov
movs
cld
pop
(bad)
or
mov
add
(bad)
(bad)
gs
jge
push
js
pop
addr16
lock
test
out
sar
adc
inc
fild
mov
jl
fcomi
aad
or
mov
aam
and
mov
pop
xchg
aad
xchg
in
ins
adc
cmp
mov
sub
or
out
iret
fmul
popf
jmp
repz
or
push
inc
and
sbb
out
icebp
cmp
retf
test
mov
in
pop
not
iret
nop
lods
add
test
mov
and
and
mov
mov
mov
loopne
sbb
cmp
jne
inc
mov
scas
mov
push
aam
fisub
jae
mov
mov
jbe
dec
rcr
shl
xor
inc
bnd
movs
or
psubq
push
jns
mov
imul
adc
inc
and
xor
jge
xchg
clc
call
(bad)
jecxz
pop
push
ins
(bad)
(bad)
xchg
ret
pop
icebp
cld
sbb
push
xchg
sbb
int3
ret
xchg
jle
or
mov
xlat
sti
add
cmc
in
addr16
pop
lock
inc
inc
(bad)
in
je
push
jg
imul
dec
(bad)
outs
rcr
retf
mov
in
addps
jno
adc
shl
mov
int
adc
das
sub
pop
inc
test
or
mov
sbb
sub
mov
add
mov
inc
call
push
inc
xchg
fwait
mov
(bad)
cmp
push
je
in
cld
dec
sub
test
pop
cld
dec
jno
xchg
inc
jg
(bad)
imul
fadd
fs
movs
(bad)
xlat
mov
lods
or
lahf
(bad)
jmp
scas
mov
(bad)
sti
cmp
lahf
addr16
test
inc
add
cmp
pop
push
adc
mov
inc
adc
js
stc
ret
mov
mov
or
mov
ds
inc
popa
stos
int3
pop
ins
lock
push
sbb
retf
push
jno
xchg
syscall
push
in
xor
adc
mov
enter
daa
ret
iret
xchg
xor
xor
(bad)
scas
cmp
xchg
mov
mov
fsubr
ror
in
mov
xchg
popf
mul
add
xchg
lahf
loope
aas
adc
aad
jmp
xchg
outs
movs
push
xchg
test
(bad)
cmp
fidiv
jae
stos
retf
mov
mov
mov
xor
pcmpgtw
cmp
push
aam
and
dec
(bad)
cli
adc
clc
xchg
push
dec
push
jns
pop
jno
cmc
movs
mov
ins
mov
fst
add
aad
pop
int3
paddusb
aam
dec
or
xchg
jns
jo
xchg
adc
push
ret
sahf
adc
ins
ins
pop
adc
add
xlat
sub
and
or
out
stc
pop
push
sub
adc
das
test
fiadd
jmp
retf
or
pop
or
test
hlt
adc
mov
and
stos
xor
and
adc
popf
icebp
sub
fnstcw
lea
pop
ins
sbb
pop
xchg
push
mov
mov
int
inc
jo
xchg
fsub
mov
aaa
push
mov
aam
sub
cmp
icebp
cli
aam
or
jb
cs
and
arpl
fs
loopne
lds
fwait
adc
mov
dec
leave
out
adc
(bad)
sbb
xor
pop
mov
inc
leave
xchg
push
sbb
ss
xor
lea
push
(bad)
pop
out
xchg
stc
dec
jmp
ret
dec
enter
inc
cdq
fld
add
in
std
xor
jg
mov
jns
xor
xor
add
adc
in
popf
cmp
xchg
test
xor
sbb
ror
hlt
mov
stos
fucomp
push
sar
and
loopne
fcom
xchg
jle
cld
and
push
repnz
ja
dec
or
xor
sahf
inc
addr16
test
jg
retf
lahf
popf
test
(bad)
xor
mov
(bad)
and
stc
loop
push
lds
stos
mov
cmp
cli
sub
pop
lods
push
retf
mov
dec
cli
sub
scas
add
ficomp
cmps
repnz
cwde
mul
rcl
add
xchg
imul
sbb
push
mov
dec
mov
xor
pop
aam
mov
jns
outs
cmp
fsub
in
sbb
jg
mov
and
sbb
jle
movs
add
ret
retf
mov
xchg
daa
mov
mov
fcom
ins
and
xchg
push
daa
push
adc
in
dec
in
(bad)
(bad)
dec
test
loop
xor
aad
iret
inc
and
loopne
mov
test
cld
fdiv
cs
add
jbe
nop
ss
(bad)
or
xchg
arpl
pop
aaa
xchg
scas
push
les
inc
add
push
xor
mov
mov
xor
ins
daa
fadd
mov
jp
in
xor
repnz
push
mov
dec
(bad)
fisttp
sahf
sahf
mov
pop
cmp
add
pushf
sti
retf
mov
mov
out
test
call
test
loope
sbb
adc
xor
stc
call
sti
add
sbb
movs
loop
add
mov
sbb
outs
std
pop
fucomp
add
and
jecxz
jge
mov
xlat
lock
sub
mov
add
(bad)
jge
mov
push
(bad)
aam
cmc
jp
jmp
xor
ja
pop
psubusb
(bad)
cdq
stc
rol
and
out
inc
sbb
in
dec
mov
pop
sahf
xchg
imul
xor
data16
repz
std
mov
fs
xchg
fild
imul
push
mov
mov
add
idiv
jg
pushf
lea
sar
xchg
movs
lea
lods
icebp
dec
popa
jns
adc
mov
cmp
cli
inc
add
aad
jbe
inc
pop
loopne
das
mov
jb
lea
and
mov
dec
inc
les
mov
jle
xchg
jae
clc
jbe
in
mov
or
movs
mov
fs
mov
popa
out
sti
jbe
call
mov
rol
jp
mov
mov
lea
mov
aam
les
into
out
and
xchg
int
xchg
ins
adc
lods
inc
sahf
sahf
stos
sbb
movs
mov
(bad)
call
test
in
or
pop
nop
jbe
adc
sbb
stc
stos
cmp
fwait
pop
jns
or
add
xchg
mov
xlat
jno
sub
std
cmp
rcl
es
push
inc
jmp
cld
and
arpl
push
out
lods
in
jle
lds
movs
cmp
pop
cdq
fild
lods
sti
mov
lods
lock
(bad)
dec
pop
ret
(bad)
aaa
mov
icebp
cmps
push
mov
retf
daa
inc
xchg
pop
dec
out
or
push
push
pop
in
std
push
dec
cmp
or
xor
ret
test
les
mov
gs
mov
jae
loop
sub
add
mov
add
sub
(bad)
inc
jl
jae
or
jmp
add
(bad)
inc
scas
dec
adc
cmps
xor
popa
nop
or
cmp
inc
sbb
add
or
in
ret
sub
jg
cld
mov
lds
cmp
push
iret
jle
mov
aas
stos
adc
gs
mov
push
cmp
mov
dec
data16
mov
jmp
push
cs
in
mov
in
fnsave
adc
pop
ret
test
repnz
xor
dec
jle
sbb
adc
push
nop
int3
lods
sahf
sub
(bad)
sbb
sahf
jno
pop
mov
movs
fs
div
and
xchg
mov
jp
push
stos
adc
in
sub
aam
jp
xor
retf
jl
lods
jle
psrld
add
inc
cmc
test
scas
pop
cmp
fnstenv
push
adc
jb
fmul
popa
scas
dec
inc
cs
aad
and
mov
push
pop
mov
jb
sub
xor
fs
mov
inc
lods
jle
movs
jmp
inc
pop
push
push
dec
jp
and
and
je
sub
push
test
mov
popa
or
sbb
bound
mov
lods
lods
je
adc
pop
cmp
sub
scas
mov
push
ins
pop
pushf
mov
je
cmp
mov
xor
fisubr
ja
sahf
push
pop
stos
inc
stos
enter
mov
and
cmc
out
inc
adc
inc
ja
mov
or
mov
adc
sub
mov
inc
mov
aas
xchg
ret
push
or
inc
mov
push
jno
cdq
mov
add
aam
jp
jns
lods
dec
sub
adc
pop
push
dec
std
xor
cld
add
mov
mov
ret
in
cdq
cdq
lods
mov
cmpxchg
xchg
xor
push
sti
(bad)
push
loop
sbb
or
fs
shl
adc
mov
mov
dec
enter
loop
repnz
jnp
test
add
adc
es
xchg
mov
inc
mov
add
jno
mul
ret
xor
push
dec
sub
dec
je
xchg
in
pop
sbb
fbld
sar
fisttp
push
sub
or
lock
mov
xor
and
out
push
mov
es
inc
gs
gs
adc
adc
call
fldcw
fldcw
es
sbb
jg
movs
mov
sahf
add
mov
in
jb
or
jo
cdq
mov
not
sbb
gs
sbb
xchg
xchg
or
add
mov
ret
int
mov
inc
popa
sub
mov
sbb
fwait
shl
call
shl
dec
add
ss
xlat
xchg
or
(bad)
pop
outs
cmp
pop
scas
repnz
jmp
jge
xor
pop
adc
shl
push
and
movs
push
pop
mov
xchg
jb
mov
jmp
adc
fstp
lea
xor
and
xchg
movs
ja
inc
or
dec
ret
add
inc
sub
add
outs
ins
cli
test
mov
cmps
xor
push
lods
scas
mov
in
fisttp
add
jecxz
jmp
and
add
adc
out
into
mul
ror
dec
fsub
dec
mov
cmp
ror
shr
jge
adc
stos
sub
sahf
je
xchg
inc
jge
add
cmp
aam
(bad)
fidivr
mov
push
aad
jne
xchg
cmp
pusha
aaa
in
mov
and
imul
xlat
movs
in
cmp
das
shr
js
sub
mov
stc
dec
cmp
xchg
mov
ins
push
mov
test
in
cmp
mov
jno
mov
sbb
pushf
mov
jno
jmp
dec
cmp
(bad)
stc
sbb
jmp
pop
cmps
mov
push
leave
ret
lds
pop
xor
(bad)
sbb
movs
out
sbb
mov
out
cmc
push
test
rol
cmp
mul
popf
xlat
mov
and
sbb
in
mov
(bad)
cmc
dec
in
and
sbb
jp
dec
cs
nop
dec
cmp
mov
sbb
add
cmp
test
xchg
pop
xchg
inc
aas
cli
loopne
mov
dec
cmp
push
cmps
add
add
mov
imul
fist
pop
xchg
mov
mov
mov
mov
and
jecxz
pop
mov
pusha
sbb
iret
pop
mov
shl
loopne
or
mov
out
aam
sub
mov
cwde
cmp
add
lods
sub
inc
rol
add
aas
cli
mov
test
push
pop
je
scas
in
and
fidiv
mov
sahf
xchg
cmp
hlt
mov
fisub
ss
sbb
lahf
test
daa
pop
shl
mov
imul
xor
stc
add
mov
adc
stc
es
sti
add
mov
push
fistp
mov
test
jecxz
xor
mov
repnz
jge
sti
nop
ror
mov
ds
mov
xor
sub
outs
pcmpeqw
mov
leave
mov
or
and
fld
js
test
pop
sbb
pushf
xchg
lock
cmp
in
adc
std
mov
sbb
in
cwde
jmp
clc
push
push
ret
test
outs
push
imul
repz
cdq
rcl
shl
or
mov
or
add
mov
ror
cdq
movs
jmp
jmp
xor
jb
ret
cmps
mov
int3
inc
(bad)
fisub
movs
js
(bad)
mov
xchg
aaa
cmp
pop
icebp
mov
adc
mov
call
mov
mov
int
add
and
push
add
je
mov
mov
xor
adc
cs
out
(bad)
das
in
jns
sub
pop
pop
push
cmp
cwde
jb
cmp
stos
jno
arpl
inc
fdiv
aaa
push
lods
adc
inc
or
jnp
es
push
add
mov
push
movs
arpl
pop
jns
lods
pop
cli
test
push
sub
add
not
aad
mov
call
cmp
imul
test
test
add
mov
in
sub
lods
sti
ins
lock
inc
or
xlat
pop
and
ss
aas
mul
mov
cwde
lods
repnz
(bad)
sti
sbb
push
pop
pop
pusha
shl
cmps
sar
loopne
push
outs
jns
loop
rol
sbb
mov
(bad)
fs
jl
mov
jge
fidiv
int3
icebp
inc
out
inc
fs
pop
imul
ja
xor
xchg
adc
lods
add
dec
sub
inc
add
loope
bound
hlt
sahf
int3
gs
and
sti
mov
call
pop
push
sbb
mov
sbb
fidiv
add
(bad)
mov
js
sub
fisub
enter
adc
gs
adc
xor
or
iret
cmp
ss
sub
push
sub
sti
js
andnps
sti
mov
push
inc
ja
dec
dec
add
mov
mov
add
movs
test
push
pop
pop
mov
ss
jge
rcl
inc
call
cmp
mov
push
fld
add
fcom
push
mov
out
fwait
add
mov
ror
loopne
inc
mov
pop
mov
test
bound
xor
push
mov
in
pop
retf
sbb
add
outs
js
sub
push
or
test
dec
xor
cdq
pop
add
dec
push
pop
cmp
or
push
mov
(bad)
pop
sub
jmp
inc
les
dec
xchg
xor
pop
mov
hlt
pop
cli
mov
test
and
add
or
cmp
(bad)
push
xor
mov
fistp
pop
push
pop
in
cmps
ss
in
pop
add
xor
mov
mov
pop
lods
inc
xchg
je
mov
adc
imul
std
push
lock
fs
cdq
inc
(bad)
push
adc
pop
xchg
push
pop
inc
add
repnz
jg
and
test
xor
adc
test
pop
xchg
push
hlt
int3
scas
mov
arpl
xchg
mov
or
loopne
mov
add
mov
sub
push
into
fistp
xor
adc
mov
sbb
arpl
test
lahf
pop
dec
lea
xchg
jl
lahf
fild
inc
fiadd
cwde
sub
rcr
mov
es
mov
pop
adc
aaa
fwait
mov
pop
sub
inc
lea
adc
ja
pop
mov
sbb
inc
xor
push
inc
addr16
shr
lock
ja
pop
add
imul
pop
ins
add
ins
push
rol
mov
xor
push
(bad)
out
and
pop
mov
data16
in
xchg
repz
mov
sub
mov
ins
pop
add
push
addr16
test
je
dec
jns
push
push
pusha
dec
xor
jecxz
retf
addr16
pop
mov
test
sahf
sub
outs
fild
pusha
mov
xor
and
adc
push
xchg
pop
jno
in
shr
pop
jmp
inc
inc
mov
pop
or
add
fst
test
pusha
pop
es
sbb
test
jae
and
(bad)
xor
push
cld
aad
jne
lock
pop
mov
sub
out
lds
fwait
call
into
dec
lea
xlat
sbb
pop
sbb
mov
nop
jp
jb
fisttp
fisttp
and
popa
aas
enter
mul
push
sbb
dec
xor
sub
std
lahf
shl
int
cmp
je
mov
jge
pop
cli
cmp
shr
mov
pop
push
cmp
mov
js
fcomp
add
xchg
loopne
xor
cmp
mov
loop
gs
cmps
cwde
or
fsubp
ror
adc
mov
cli
mov
mov
enter
popa
dec
loope
adc
cs
jp
loop
adc
leave
push
jecxz
xor
sub
lods
add
in
stos
jbe
pushf
nop
dec
imul
jecxz
sub
fcom
xor
sbb
adc
pop
jmp
mov
push
call
iret
push
inc
sbb
adc
das
mov
sub
adc
pop
xchg
movs
fwait
scas
mov
inc
xchg
nop
dec
cmps
iret
pop
outs
pop
int3
cs
mov
icebp
ficom
(bad)
push
pushf
hlt
in
popa
scas
xor
push
pop
imul
dec
mov
jecxz
jb
push
pusha
sbb
stos
arpl
cmps
xchg
enter
dec
gs
push
retf
adc
loop
mov
xchg
sbb
in
ror
pop
fisub
and
mov
xor
stos
sbb
sub
pushf
xor
pop
or
lea
or
lods
into
sar
and
int
js
fidiv
call
dec
sub
repz
leave
mov
jne
or
xchg
jl
in
hlt
test
daa
mov
pusha
sub
sbb
dec
cmp
pushf
mov
xchg
(bad)
das
addr16
bswap
cmps
add
leave
movs
jge
cmc
mov
pop
push
xchg
(bad)
scas
push
jmp
lock
inc
push
inc
push
inc
jle
xor
(bad)
cwde
(bad)
sbb
pop
mov
sbb
sub
cmp
sbb
inc
jns
inc
mov
fdivr
mov
mov
clc
jns
inc
jmp
mov
(bad)
xchg
xchg
dec
dec
sub
jnp
push
call
inc
push
imul
test
inc
mov
inc
and
jmp
outs
ins
pop
(bad)
leave
cld
fwait
sbb
pop
cs
inc
cmp
adc
dec
push
retf
test
int3
sub
dec
into
inc
call
mov
call
cmps
and
sysenter
add
imul
pop
add
xchg
mov
jmp
mov
jno
call
sub
jp
and
xchg
mov
aas
sar
shr
test
inc
sub
leave
mov
mov
div
retf
scas
cmp
out
jno
sbb
inc
stos
bound
fsubr
adc
scas
cmp
sbb
or
fsub
push
sbb
jge
(bad)
inc
mov
or
rcr
inc
loopne
movs
inc
loopne
sub
aaa
mov
mul
in
outs
pop
xchg
(bad)
ss
addr16
adc
pushf
and
pop
push
jae
lock
(bad)
addr16
out
popa
sahf
daa
xor
add
ss
(bad)
(bad)
out
push
sti
mov
pushf
arpl
push
imul
or
and
pop
mov
pop
dec
sub
mov
lods
pop
jge
mov
jnp
jl
jmp
retf
es
aaa
test
rcl
stos
cmps
movs
jo
outs
push
fs
outs
dec
iret
mov
bound
dec
test
iret
(bad)
mov
jmp
xor
add
mov
ins
add
sbb
lea
movs
sbb
cmp
imul
pop
rcl
jg
and
lds
mov
cld
sub
stos
cli
lods
test
inc
lds
or
and
sbb
and
xchg
mov
(bad)
lods
push
sbb
dec
xor
cmp
mov
mov
mov
mov
push
mov
in
loop
out
and
push
lds
cmp
imul
xchg
mov
gs
ret
push
movs
push
(bad)
sbb
movs
mov
(bad)
mov
les
jecxz
pop
icebp
mov
cmps
pop
inc
dec
jp
dec
sbb
or
adc
pop
push
xor
loop
pop
xor
pop
ror
sti
imul
std
les
adc
xor
std
and
ret
adc
or
dec
adc
xor
mov
stos
fisttp
sbb
pop
dec
repnz
inc
cs
xor
test
arpl
(bad)
jae
inc
adc
out
mov
dec
cmp
in
fwait
push
enter
(bad)
mov
mov
cmc
sub
(bad)
mov
popf
pop
lods
xchg
sub
xor
pop
rcl
sbb
(bad)
jns
outs
xchg
sbb
cmp
add
dec
gs
(bad)
adc
lea
fadd
jp
push
add
clc
fcom
daa
sar
je
add
sbb
dec
and
cmps
cmp
sub
push
mov
dec
fisttp
pop
sbb
setle
dec
xchg
mov
call
sub
icebp
inc
push
push
and
lods
push
xchg
stos
mov
add
push
add
test
sbb
and
xchg
out
mov
jle
scas
pushf
es
mov
and
nop
rcr
xchg
into
sub
hlt
gs
pop
shr
in
xchg
das
dec
popa
outs
iret
pushf
iret
jmp
pop
xor
adc
dec
and
fs
xchg
lods
call
or
mov
cmp
xchg
fidivr
dec
sub
cmp
test
rol
out
sahf
or
mov
dec
imul
push
inc
stc
mov
or
mov
and
mov
repz
fdivr
popf
mov
inc
das
test
mov
or
aas
out
push
xor
push
push
out
dec
inc
mov
sar
enter
pop
jbe
inc
bound
daa
xchg
and
(bad)
cld
lds
outs
or
jecxz
repnz
add
push
test
mov
pop
pop
vunpcklpd
inc
adc
pop
pop
shl
sub
sbb
pusha
push
es
gs
shl
mov
or
mov
dec
push
and
test
imul
int
and
sub
sub
popa
fs
test
cdq
or
jnp
jg
es
mov
push
stc
sub
xor
aaa
or
scas
ror
out
(bad)
lods
mov
cmp
or
cmps
pop
xor
dec
sub
inc
mov
fdivr
inc
push
add
loop
add
jb
cdq
mov
ins
scas
mov
out
bnd
adc
nop
sbb
adc
and
fdivr
add
in
outs
jecxz
pop
lods
adc
sub
test
lds
call
xor
cld
push
(bad)
fisubr
pushf
fwait
ds
cld
test
sbb
and
jnp
ds
data16
out
mov
cmp
xor
and
enter
dec
mov
xor
xor
fcom
sar
cs
add
pop
jl
jg
sbb
mov
sbb
imul
sub
pop
mov
push
sbb
lods
pop
xor
stos
jecxz
mov
das
cmp
mov
imul
jmp
inc
and
shl
add
mov
aam
adc
std
push
shl
or
loopne
pop
nop
mov
cmp
test
xor
xlat
cmc
jge
dec
mov
cli
arpl
dec
sub
aaa
mov
and
jmp
imul
push
mov
(bad)
mov
add
xor
mov
cmc
push
or
xlat
lock
push
mov
in
inc
jo
push
daa
dec
(bad)
push
into
fsub
inc
stos
sub
mov
pop
xor
outs
xchg
xchg
cmp
cmp
clc
(bad)
mov
test
inc
xor
push
aad
xchg
mov
out
mov
aaa
pop
xor
sub
aaa
pop
push
bnd
outs
push
mov
lods
or
mov
bound
xchg
outs
jg
int3
in
in
jmp
vpsubw
jmp
cmc
dec
pop
shl
lods
pcmpeqw
js
xlat
or
mov
data16
add
fdivr
movs
pop
lods
and
inc
jg
imul
in
cwde
je
movs
daa
shr
mov
and
mov
mov
xchg
test
aam
jnp
pop
mov
xrelease
push
mov
in
dec
or
mov
xor
lds
aaa
dec
fs
xchg
rcl
dec
iret
mov
dec
jne
and
pop
test
(bad)
and
sbb
mov
sbb
mov
cmp
loopne
call
icebp
inc
push
les
inc
pusha
pop
xlat
sub
cdq
sbb
jb
mov
jle
sar
loop
icebp
add
out
fnstcw
lods
push
fld
movs
iret
add
mov
mov
nop
cdq
xchg
enter
rcr
cmp
movq
and
(bad)
lock
pop
into
outs
lahf
mov
pause
pop
(bad)
sbb
mov
cmp
fdivr
loopne
lods
mov
jg
pop
scas
cld
add
xor
ror
lods
ss
jmp
inc
lea
retf
icebp
jno
fwait
(bad)
es
and
not
jmp
add
out
inc
fidivr
inc
xlat
inc
ins
out
push
call
scas
ss
xor
mov
sub
or
mov
imul
mov
ss
loopne
xor
mov
mov
add
pop
cmc
ja
fdiv
cmp
rcl
jbe
push
inc
lock
push
(bad)
fldcw
call
pop
and
sbb
call
daa
add
lahf
adc
int3
test
push
es
(bad)
dec
inc
ds
clc
mov
stos
aad
aas
out
lods
ja
int3
jns
dec
push
jmp
sbb
out
ret
xlat
push
cmps
fist
cmp
jecxz
mov
daa
clc
ins
pop
scas
pop
outs
xchg
nop
mov
jae
dec
dec
and
mov
out
mov
stos
or
pusha
fdivr
ficom
scas
mov
std
mov
push
(bad)
mov
push
inc
aas
pop
mov
adc
hlt
dec
xchg
cmp
or
outs
(bad)
xchg
fnstsw
ds
int3
jmp
sub
jmp
test
cmp
cmc
aaa
pop
imul
lahf
int
call
xchg
data16
xor
fld
or
fisubr
in
outs
jge
int3
and
arpl
mov
pop
test
or
dec
push
xchg
xor
fbstp
fst
cmp
xor
inc
add
sub
mov
rcl
imul
inc
test
inc
xor
add
rol
stos
rcr
pop
xchg
cmp
cmp
lea
fld
lea
add
mov
rol
xchg
mov
sbb
xchg
jg
ins
add
repnz
jmp
sbb
jmp
mov
imul
(bad)
aas
bound
ret
sbb
mov
or
dec
mov
and
cvtdq2ps
les
adc
jle
xor
push
ja
in
sar
adc
call
fisttp
add
lods
adc
dec
ret
inc
mov
cmp
xor
and
dec
adc
loop
mov
nop
mov
aam
push
push
mov
repnz
sbb
(bad)
and
pusha
jb
cs
xor
jno
jae
xchg
in
aad
adc
stc
sahf
gs
jb
das
ins
jnp
je
pushf
fild
call
add
sub
jmp
pop
gs
xlat
adc
inc
loop
test
cmp
sar
push
mov
jmp
pushf
or
outs
clc
lahf
js
lahf
mov
(bad)
bound
pusha
fst
pusha
dec
ins
sbb
sbb
rcl
xchg
(bad)
push
shl
sbb
pop
retf
int3
cmc
(bad)
stc
nop
xchg
mov
les
push
jb
sar
sahf
sub
push
pop
out
jo
and
in
test
(bad)
cwde
mov
sub
adc
sahf
xor
mov
aaa
je
stos
dec
popa
icebp
cld
outs
xchg
iret
aad
push
ins
inc
or
sub
or
dec
adc
popa
(bad)
add
imul
outs
cmp
inc
dec
movs
dec
xlat
xor
adc
mov
(bad)
mov
test
outs
sub
neg
rcr
(bad)
in
popf
mov
fwait
inc
fsubr
in
jnp
jbe
je
pop
pop
movs
ss
out
fsub
pop
sub
adc
sub
push
(bad)
dec
out
cmp
mov
push
mov
dec
mov
xchg
mov
lods
mov
ret
sbb
outs
test
rol
jmp
xor
shl
es
add
mov
lahf
sbb
xchg
cmp
daa
mov
mov
dec
sbb
in
and
test
mov
mov
aas
pop
push
ss
xor
or
daa
pop
aad
out
fld
push
pop
pop
movs
push
push
mov
adc
daa
inc
retf
dec
hlt
je
ds
cs
outs
mov
jg
or
loop
les
enter
aaa
pop
push
xchg
jle
xor
retf
sub
test
mov
push
popa
rcl
mov
scas
ins
and
and
stos
xchg
and
fs
jbe
in
pushf
cmps
int3
mov
mov
pusha
arpl
ror
mov
call
cld
add
and
mov
sub
in
xor
movs
stos
mov
dec
jp
jl
out
jecxz
jecxz
aaa
xor
mov
push
adc
mov
cld
addr16
push
mov
jecxz
(bad)
(bad)
int3
call
mov
aad
lea
xor
and
stos
cmp
add
fs
icebp
shl
clc
or
add
ja
and
push
in
in
xor
cld
icebp
mov
jno
lahf
inc
lds
test
mov
js
loop
pop
mov
sub
cmp
sub
mov
pusha
stc
cmp
dec
stos
fdivr
mov
leave
popf
jge
in
clc
ja
push
jp
xchg
add
xor
mov
int3
nop
ret
pop
int3
jnp
(bad)
pushf
mov
cwde
push
xchg
stos
not
adc
leave
aas
sbb
pop
or
pop
adc
in
sub
sbb
cmp
mov
enter
push
push
adc
test
sub
out
scas
shl
sbb
xor
mov
pop
in
aaa
adc
(bad)
jno
movs
dec
sar
adc
bnd
pop
arpl
sub
inc
dec
imul
sbb
mov
mov
mov
in
xchg
xchg
xchg
mov
cs
adc
mov
mov
es
jp
pop
mov
or
(bad)
fnstsw
jno
(bad)
int
inc
push
jno
jg
inc
pop
jae
push
rcr
sbb
nop
jmp
or
cmp
xor
scas
stc
adc
and
mov
mov
and
sub
xchg
sbb
cmp
mov
push
in
xor
clc
or
div
xchg
jge
jmp
(bad)
lock
mov
pop
cmps
(bad)
jmp
fcomip
sahf
pusha
fst
push
icebp
dec
push
int
xlat
sbb
aas
or
mov
movs
mov
push
sub
iret
inc
ja
sti
movs
xchg
ja
adc
data16
cwde
or
clc
pop
mov
jb
adc
ret
mov
mov
adc
fcom
push
fimul
sbb
ret
test
xchg
jbe
out
jo
dec
inc
mov
mov
or
dec
pop
xchg
add
push
bnd
xchg
jne
dec
xor
lods
rcr
sub
sahf
pop
sub
xchg
cwde
sub
pop
sbb
adc
rol
mov
mov
dec
xor
cmps
test
inc
xchg
and
add
ds
mov
sub
scas
or
push
shl
and
dec
or
xchg
pop
ins
pusha
in
mov
push
adc
jl
xchg
outs
jge
aas
iret
sti
sub
jg
jmp
les
(bad)
inc
(bad)
xchg
stc
inc
push
push
add
lock
xor
fdivrp
fstp
cli
cmp
sbb
jno
pop
or
aaa
jl
mov
test
pop
sub
and
mov
xchg
lock
dec
popf
clc
int3
nop
loop
mov
pop
add
mov
sbb
xor
xlat
adc
call
out
sbb
(bad)
sub
pop
mov
jbe
cmp
cld
jl
push
movs
retf
or
jb
push
popa
jne
out
dec
dec
nop
aad
fwait
sub
sub
dec
mov
add
test
aad
arpl
mov
xchg
xchg
push
shl
or
arpl
mov
(bad)
fimul
add
add
push
cdq
sbb
jmp
mov
dec
popf
std
mov
add
into
rol
out
mov
cmp
mov
push
mov
add
pop
lock
push
(bad)
cmc
dec
out
cli
cmp
and
mov
and
xchg
pop
mov
mov
cmp
push
push
add
xchg
sbb
sbb
(bad)
call
data16
mov
sbb
dec
scas
and
dec
fbstp
les
mov
or
mov
mov
mov
pop
or
rcr
gs
mov
jecxz
jae
mov
push
fwait
cmp
jmp
mov
test
test
fwait
push
or
fld
in
jl
jp
cmps
adc
in
mov
pop
retf
mov
pusha
(bad)
cmp
dec
imul
cmp
(bad)
jle
in
fisttp
or
jl
stos
sti
ret
mov
ret
mov
repz
lods
stos
daa
lahf
add
sbb
cmp
mov
push
mov
cmp
cmp
sbb
xlat
dec
mov
(bad)
mov
mov
cmp
jmp
jbe
(bad)
pushf
inc
dec
dec
sub
mov
lock
cwde
adc
(bad)
aas
iret
add
mov
inc
stos
mov
sub
bound
mov
daa
scas
mov
adc
outs
mov
mov
sub
in
mov
jno
(bad)
scas
pusha
sti
arpl
bound
pop
cdq
mov
fwait
cmps
push
call
xchg
adc
xchg
xchg
jecxz
in
popf
iret
or
shl
call
loop
and
or
pop
ret
rcl
sar
ja
xor
xchg
sbb
cs
add
xor
loope
lahf
shl
sahf
xor
xchg
div
mov
cmp
jmp
push
test
cmp
jae
int3
adc
lahf
aad
add
cwde
gs
dec
lods
push
jb
scas
out
inc
and
mov
fidivr
int3
(bad)
jl
xchg
test
mov
add
pop
push
(bad)
fucomp
punpckhbw
in
push
fsubr
pop
test
mov
or
repz
push
inc
inc
int
call
stc
sahf
mov
sbb
push
adc
jbe
movs
jo
aad
cmps
retf
jo
xor
in
test
jbe
repz
adc
outs
fdivr
sar
fld
xchg
jge
test
mov
outs
jecxz
icebp
pop
push
mov
sbb
ss
shr
add
mov
ret
call
xchg
jg
movs
jae
mov
lods
mov
push
sbb
mov
adc
leave
mov
fstp
lahf
int
mov
pop
test
into
iret
mov
ret
lods
and
dec
cmp
(bad)
dec
(bad)
movs
dec
loop
add
fst
scas
xor
imul
ins
loop
mov
mov
xor
mov
pop
ret
aaa
add
aad
imul
sub
bound
push
mov
jmp
popa
jbe
movs
sub
cmp
jb
(bad)
repnz
cmp
adc
jmp
ror
pop
fisubr
out
inc
clc
push
ret
enter
dec
pop
pop
(bad)
cli
push
inc
mov
std
repnz
and
add
in
cld
pop
mov
popa
fs
sbb
add
cli
popf
imul
mov
or
cli
outs
hlt
cmp
pop
cwde
adc
comiss
cdq
sub
or
je
xchg
sub
push
addr16
loopne
push
into
mov
inc
mov
test
in
add
nop
pop
repz
sub
nop
pop
push
(bad)
int
test
pop
push
lds
sbb
xchg
sbb
je
jbe
jbe
mov
mov
mul
xor
(bad)
sbb
shr
sar
jnp
mov
fimul
test
inc
push
jp
shr
push
cs
jae
and
mov
pop
mov
mov
cld
push
aam
push
test
les
dec
call
mov
pushf
sub
(bad)
jp
in
dec
cld
mov
push
xchg
inc
xchg
mov
and
or
pop
add
les
xor
adc
into
not
test
jae
dec
inc
vpavgb
mov
cmp
repz
lahf
pop
inc
xchg
out
lock
mov
mov
cmp
push
adc
sub
loope
jne
jno
jnp
sub
(bad)
mov
or
xchg
pop
push
inc
pusha
ror
xchg
sti
push
cli
arpl
div
repnz
mov
and
xchg
loope
add
inc
jmp
out
jmp
mov
clc
push
jns
clc
or
rcl
cmp
mov
jl
retf
mov
loope
and
fwait
mov
push
icebp
js
inc
push
add
xor
or
in
(bad)
cmp
push
movs
je
mov
push
jp
mov
jmp
ds
and
cli
jmp
pop
xlat
lea
(bad)
push
push
jecxz
jns
mov
sbb
imul
ds
test
stc
dec
lods
mov
xchg
push
mov
mov
mov
loopne
cmp
dec
and
imul
xchg
pop
addr16
shl
xchg
mov
scas
mov
jmp
arpl
test
pusha
stos
icebp
mov
push
ret
push
(bad)
or
out
mov
in
mov
pop
mov
mov
jge
pop
loopne
clc
inc
movs
clc
add
out
scas
xor
(bad)
not
push
fsub
and
or
inc
pop
fcomp
shl
ds
add
hlt
imul
xchg
push
pop
adc
pop
add
add
das
dec
movs
mov
test
mov
fs
or
add
mov
inc
mov
jg
cmps
push
movs
push
addr16
xchg
mov
sub
or
cmp
mov
sub
loop
(bad)
cld
shl
push
push
cmp
ret
jecxz
retf
xchg
lods
ror
cmp
mov
mov
mov
loope
mov
adc
push
sar
fsub
xchg
inc
popf
in
jo
movs
cmp
sahf
xlat
ds
fbld
dec
(bad)
add
xor
jnp
ds
push
(bad)
push
int3
hlt
mov
or
jo
mov
test
jbe
push
mov
fist
jo
jmp
pop
push
cld
fdiv
imul
sbb
imul
sbb
and
fcmovnb
push
ror
push
jb
es
clc
xor
call
jle
add
jns
xchg
(bad)
rol
imul
sub
push
mov
retf
add
add
inc
imul
push
popa
sub
retf
pop
mov
fs
shr
dec
xor
xchg
(bad)
xlat
scas
push
rol
push
ds
test
test
js
repz
cmps
cli
dec
pop
pop
jo
and
xor
sbb
and
cli
ds
lea
pop
or
cmp
inc
mov
cmps
adc
pop
add
int3
mov
das
mov
xchg
jecxz
mov
inc
jge
jmp
cmps
jae
in
test
ss
out
and
inc
lods
test
(bad)
repnz
sbb
fwait
adc
push
mov
in
pop
xor
sub
sahf
cmp
jb
adc
imul
mov
scas
fdiv
or
fbstp
cmp
test
and
sbb
out
gs
push
xchg
jns
aam
push
es
das
movs
repnz
std
sub
imul
jmp
cmps
idiv
lock
outs
je
pop
and
out
push
dec
test
frstor
in
js
push
stos
cmp
int
lds
mov
cmp
fucom
jecxz
ss
push
fstp
and
imul
inc
popa
lods
in
xchg
mov
(bad)
jno
inc
sub
retf
xchg
pop
in
sbb
xlat
int
mov
movs
jno
add
es
adc
jns
loop
(bad)
aad
dec
stos
pushf
jl
and
loopne
bound
mov
ret
xor
cmp
mov
jl
jmp
sbb
dec
mov
aad
test
ins
jnp
pop
popa
and
outs
ins
loopne
in
cmp
sti
test
cmps
ret
push
test
xlat
xor
mov
or
jo
jecxz
ss
mov
mov
mul
mov
or
mov
rol
aaa
and
jmp
retf
in
test
gs
mov
loope
jmp
add
mov
inc
pop
or
jecxz
ret
leave
sti
pop
dec
pop
cmp
push
(bad)
ficomp
aaa
lock
and
loope
jbe
add
call
daa
daa
xchg
enter
mov
cld
loope
jae
(bad)
jo
cmps
je
daa
mov
sbb
xchg
das
jae
mov
inc
popa
mov
out
dec
dec
cwde
repz
jo
test
push
gs
or
jnp
or
pop
jo
rcl
pop
fistp
dec
in
movs
dec
adc
pop
jg
push
outs
fs
mov
or
cmp
sub
mov
ja
or
xchg
or
inc
out
les
mov
lods
ins
sub
sub
push
aad
sbb
jle
mov
out
mov
pushf
enter
push
push
ror
pushf
cmc
jg
pop
pop
cmp
push
lods
inc
pop
test
push
shl
pop
adc
cdq
out
jb
xchg
test
fisttp
sbb
push
dec
pop
retf
add
retf
mov
mov
pop
or
push
enter
shl
cmps
push
cmp
fucomp
inc
pop
iret
mov
xchg
(bad)
outs
in
js
cld
mov
mov
les
outs
mov
stos
mov
dec
movs
(bad)
push
pop
test
sbb
in
stos
movs
sub
cmp
je
cmc
xlat
call
push
pusha
sub
dec
add
xor
scas
pusha
mov
sbb
inc
or
pop
aas
mov
popa
xchg
push
jmp
dec
int
mov
adc
sub
fild
push
arpl
pop
leave
sti
jge
outs
iret
and
je
fs
mov
dec
je
out
inc
xor
scas
dec
or
test
ins
(bad)
pushf
xchg
pop
inc
rcl
cmps
mov
shl
inc
jb
inc
mov
jbe
cmps
pop
mov
jno
mov
mov
ins
cmps
lods
mov
int
in
inc
popf
fmul
ret
adc
nop
sahf
inc
pop
mov
xchg
aaa
sub
xchg
sar
pop
adc
outs
idiv
std
fcomp
push
call
sbb
movs
ss
stos
dec
movs
mov
or
stos
neg
fwait
mov
aad
loop
xor
scas
or
or
add
call
dec
repz
mov
mov
or
cmp
stc
xchg
gs
lock
test
pop
dec
pop
je
in
adc
push
mov
popf
addr16
aas
and
mov
cdq
retf
mov
push
cmp
outs
and
movs
clc
das
(bad)
cmps
mov
scas
push
sbb
cmc
fcomi
pop
scas
ror
xchg
pop
or
push
jne
sbb
in
pusha
jns
out
jmp
mov
mov
vmovaps
pop
mov
das
mov
push
ja
dec
jno
mov
pop
mov
outs
push
sub
push
pop
jns
repnz
and
fisubr
mov
(bad)
xchg
and
jecxz
mov
adc
and
hlt
jmp
in
mov
adc
scas
mov
fmul
aas
xchg
dec
sub
pop
fdiv
cmp
out
cmp
pusha
add
fnsave
dec
pusha
jb
nop
int
push
lds
mov
fucomip
out
jmp
inc
sub
ss
stos
fs
xor
mov
inc
push
adc
je
jge
dec
dec
add
repz
mov
enter
and
mov
pop
add
push
mov
cmp
(bad)
push
mov
leave
or
imul
jo
pop
dec
and
sbb
ins
js
mov
jbe
(bad)
cmp
mov
adc
add
js
sbb
cmovns
pushf
jne
sbb
idiv
(bad)
dec
xchg
movs
pop
push
mov
adc
or
sbb
adc
or
test
xchg
imul
mov
rcl
lahf
jg
outs
pop
outs
mov
pop
loopne
mov
jne
mov
and
jno
lods
pushf
fcmovnbe
mov
push
pop
mov
xchg
fild
fbld
adc
ja
jg
mov
out
cli
adc
pop
xor
jo
rcl
sbb
into
stos
pushf
pop
dec
jmp
cmp
and
cli
fucom
or
xchg
loope
add
clc
pop
or
xchg
add
jge
ror
cmps
ins
test
dec
adc
stc
mul
lahf
out
mov
pop
bound
jecxz
adc
inc
nop
iret
int3
sbb
mov
shr
sub
ja
adc
(bad)
rol
xchg
mov
push
cmp
or
test
adc
sbb
stos
cli
and
adc
pop
xor
sbb
xchg
sub
inc
(bad)
neg
dec
jns
jmp
fld
int3
movs
call
jmp
ret
or
nop
iret
dec
scas
call
cwde
fild
div
out
gs
cmp
pop
push
cmp
jp
lahf
cwde
xchg
cmp
loopne
or
out
xchg
lahf
xchg
jmp
mov
(bad)
sbb
cs
cmp
xchg
fwait
int3
and
aaa
xchg
and
add
rcl
gs
call
div
movs
jns
call
pop
jb
pop
ret
imul
movs
(bad)
rcr
in
jmp
push
nop
push
fst
jg
(bad)
bound
psubusw
arpl
test
out
jecxz
push
sbb
pop
retf
mov
push
mov
test
xor
dec
inc
push
in
xchg
fiadd
ds
mov
inc
cdq
lahf
and
xchg
movs
dec
push
int
fsub
fstp
leave
mov
pmulhw
pop
add
push
cmps
scas
dec
test
popf
adc
inc
sbb
xchg
clc
div
jmp
pop
xor
mov
adc
or
xchg
push
dec
je
enter
push
xchg
push
pushf
sbb
enter
imul
sbb
(bad)
mov
adc
push
pushf
push
push
lock
cmc
(bad)
xchg
dec
data16
test
clc
popf
sub
icebp
fisubr
lods
fchs
jnp
aad
or
call
pop
lods
retf
pop
aas
mov
inc
mov
sahf
call
fisttp
pop
les
fsubr
sbb
out
out
dec
sbb
cmps
inc
pop
in
inc
movs
mov
jae
push
and
or
jb
jns
leave
cmp
dec
xor
outs
push
loop
pop
fsub
cmps
and
int3
lock
or
int3
add
out
jg
fwait
stos
fnstcw
enter
in
iret
leave
(bad)
fnstsw
xor
mov
ins
(bad)
xchg
aas
fild
pop
and
test
cmps
xor
xchg
adc
and
adc
test
hlt
pop
xor
in
ret
sti
or
out
pop
popa
push
dec
imul
repz
dec
ret
adc
sub
sbb
out
sub
sub
mov
mov
ds
out
sbb
sbb
test
(bad)
cmp
mov
adc
xor
add
mov
pushf
mov
sahf
mov
pop
cs
sahf
ror
data16
mul
and
retf
mov
dec
inc
loopne
repnz
mov
jp
dec
sar
adc
cmp
or
push
mov
mov
sti
ja
inc
cwde
cmp
push
dec
ja
and
repnz
ret
ret
mov
or
aas
dec
jge
or
aam
rcr
stos
pop
test
loope
stc
mov
jmp
mov
test
in
xor
add
das
mov
xor
repz
mov
in
scas
push
adc
pop
jns
mov
pop
mov
mov
out
cld
in
pusha
push
std
mov
inc
cmp
sub
sub
jo
push
outs
xor
in
xor
fmul
push
xor
cmps
mov
xor
mov
cmps
jns
inc
and
scas
scas
mov
mov
iret
out
or
jg
jl
jbe
hlt
les
push
add
xor
shl
sub
pusha
xchg
fisub
adc
jo
out
enter
out
sub
ret
cmp
stc
(bad)
idiv
jnp
pop
xor
sbb
in
test
out
(bad)
fs
inc
push
jp
(bad)
push
xchg
aad
cli
push
xchg
xchg
mov
dec
(bad)
sbb
sub
cld
aad
inc
pushf
out
sti
out
movs
fstp
popf
mov
out
cdq
ja
or
jb
add
outs
pop
(bad)
mov
and
cli
mov
xchg
pop
icebp
sbb
das
cld
hlt
jne
movs
test
xchg
ja
xor
retf
pop
leave
cwde
not
int3
neg
mov
(bad)
xor
adc
rol
xchg
push
rol
fs
mov
mov
xchg
fistp
add
inc
dec
sub
pop
inc
out
sub
outs
xchg
push
xor
ja
sub
adc
leave
lea
cmp
or
cwde
scas
mov
add
jno
mov
into
cmps
loop
and
mov
ror
sbb
mov
scas
fucomi
xchg
test
xchg
fwait
dec
(bad)
cmp
mov
jbe
xchg
pushf
sbb
inc
and
ins
(bad)
mov
and
xchg
movs
mov
xor
xchg
imul
mov
mov
fstp
out
not
iret
in
icebp
lods
pop
into
fisttp
jge
and
and
ss
pop
lods
push
in
jns
mov
(bad)
fdivr
jl
mov
enter
or
in
sbb
adc
(bad)
pop
cs
mov
push
arpl
lods
xchg
cmp
mov
xor
inc
fld
fsubr
push
sbb
xlat
aam
enter
adc
lods
lahf
cmps
add
hlt
jno
cmp
jecxz
and
loop
(bad)
adc
pop
imul
int3
(bad)
out
push
retf
adc
loope
shl
dec
popa
dec
push
mov
cli
push
sub
and
push
pop
dec
out
daa
repnz
mov
add
stc
add
mov
jg
test
pop
rcl
test
mov
pop
push
dec
jbe
jns
pop
jmp
jo
in
jp
cmp
push
icebp
mov
mov
pop
dec
std
pop
mov
jmp
stos
inc
push
mov
lahf
or
retf
jno
(bad)
in
icebp
test
inc
outs
jge
ret
scas
xor
sub
pop
sub
mov
or
xchg
hlt
fisttp
push
jae
xor
push
aad
add
sub
xchg
je
and
dec
mov
ret
pushf
pop
jbe
js
pop
sub
out
sar
and
cmp
or
dec
sbb
mov
mov
push
out
ficom
fwait
inc
dec
jl
xor
repnz
retf
into
addr16
and
cld
sub
or
add
out
jmp
bound
out
push
push
scas
cmps
push
push
pop
xchg
sub
int
xchg
cmp
pusha
ds
aas
dec
rol
jae
ins
push
out
nop
sub
cmp
test
dec
aaa
push
inc
ja
stos
push
popf
xchg
mov
adc
xchg
dec
or
ret
fucomi
mov
xor
jbe
sar
ficomp
dec
adc
push
cmp
adc
in
xchg
fld
xlat
cmp
sbb
mov
dec
adc
call
shl
pop
mov
pop
mov
cmc
pop
cdq
pop
(bad)
push
add
xor
jo
xor
adc
(bad)
in
mov
jae
shr
mov
into
add
dec
in
jo
aam
dec
xchg
fimul
bound
sbb
adc
jo
je
adc
jecxz
neg
jmp
add
cld
inc
sbb
daa
movs
add
clc
push
into
cs
hlt
idiv
add
jnp
fidiv
jle
adc
dec
sbb
scas
mov
push
jae
and
(bad)
sbb
and
inc
out
ret
cmp
int3
out
imul
rcl
push
jle
inc
rol
push
mov
movs
in
pushf
dec
xchg
cwde
xor
loopne
jo
jp
std
xchg
ror
jmp
jne
xchg
lock
and
push
xchg
(bad)
fld
dec
jp
jle
aam
popa
loop
xchg
imul
into
pushf
pop
outs
xchg
(bad)
(bad)
in
test
jle
stos
sbb
sbb
mov
pop
xor
popf
js
jns
xor
popa
mov
or
dec
sub
inc
mov
and
(bad)
xchg
or
imul
mov
jmp
outs
iret
and
test
mov
ret
psrad
mov
xchg
ret
adc
jns
push
vrsqrtss
add
leave
icebp
fmul
xor
loope
cmp
in
sahf
jb
fwait
rcr
test
lods
pop
sub
jbe
mov
mov
inc
(bad)
adc
in
shr
xor
push
xlat
retf
(bad)
sub
xchg
mov
fs
fdiv
fadd
les
sub
add
pop
(bad)
iret
adc
lock
mov
outs
mov
lods
aam
add
js
mov
xchg
in
out
mov
(bad)
mov
sbb
std
mov
add
mov
(bad)
(bad)
push
adc
shl
stos
adc
xor
pop
mov
mov
cmp
mov
iret
arpl
push
lahf
pop
cli
sub
lods
xchg
aad
aaa
pop
imul
cmp
iret
test
add
pop
inc
jnp
push
pop
icebp
xor
mov
inc
fisttp
fadd
call
dec
adc
jnp
push
dec
jne
xchg
dec
out
gs
xchg
xor
mov
(bad)
sub
inc
xchg
mov
(bad)
pop
cld
sub
push
and
clc
sub
mov
loopne
cmp
xchg
jmp
xor
cwde
shl
arpl
jecxz
mov
mov
and
mov
mov
icebp
in
mov
icebp
jbe
clc
sub
mov
xor
mov
ss
cwde
repnz
call
or
push
fcomi
sub
push
scas
in
dec
mov
scas
push
xchg
fcmovb
cmp
and
push
jecxz
and
data16
(bad)
push
repnz
(bad)
mov
add
popa
adc
ss
sub
sbb
dec
dec
fwait
mov
lahf
push
(bad)
sahf
inc
in
lods
cwde
lds
push
scas
lods
inc
inc
mov
ret
xor
jno
loopne
push
cmp
inc
jmp
add
sbb
inc
lds
inc
jb
test
dec
xchg
sub
pop
jmp
jno
sbb
(bad)
(bad)
popf
out
jmp
xchg
pusha
cmp
dec
(bad)
mov
jl
sbb
stos
adc
xchg
and
cdq
lea
sbb
jmp
test
clc
sbb
xlat
xor
imul
stos
mov
sub
sti
xor
mov
jge
mov
mov
test
bound
rol
add
fistp
push
pop
not
(bad)
jmp
es
add
les
dec
sti
inc
sahf
sbb
mov
mov
sar
in
inc
or
push
mov
pop
and
jp
ins
sahf
add
(bad)
fucomi
lods
push
sbb
mov
test
leave
sub
enter
push
mov
or
aam
jge
sbb
fs
push
cs
xchg
mov
(bad)
add
cwde
pushf
cli
pop
call
add
(bad)
pop
mov
lds
shl
mov
sbb
xchg
and
mov
lds
test
mov
mov
mov
xor
mov
sub
mov
cmp
(bad)
mov
(bad)
jecxz
mov
cmp
loopne
sub
test
xchg
xchg
lock
inc
dec
retf
pop
or
ret
in
sahf
loop
retf
cmp
inc
inc
pop
or
aaa
jmp
dec
mov
sub
push
xor
jo
out
push
cmp
fs
xchg
and
pop
mov
xor
popf
and
enter
(bad)
(bad)
fild
(bad)
cmp
(bad)
icebp
xchg
and
cdq
and
jmp
push
out
icebp
loop
xor
fmul
or
or
push
addr16
(bad)
into
bound
sub
lock
mov
stc
stos
or
jmp
test
xor
pop
mov
push
mov
inc
test
and
sbb
addr16
inc
addr16
ret
inc
fistp
shr
inc
and
jae
test
js
call
pop
pop
cmp
test
mov
cmc
mov
sar
add
jae
inc
stos
mov
xchg
or
addr16
leave
lahf
pop
push
sub
lds
or
test
xlat
cmp
add
stos
rol
lods
fdiv
stc
lock
leave
(bad)
push
scas
nop
sar
jl
and
xchg
sbb
out
stos
les
mov
cli
add
mov
lods
iret
jl
(bad)
mov
push
xchg
std
outs
dec
aas
aas
clc
in
fwait
imul
scas
xor
mov
xor
lea
mov
jg
pop
sbb
enter
mov
sub
jle
hlt
retf
and
or
pop
sub
mov
leave
cmp
stos
push
ror
pop
mov
pop
push
and
popf
inc
and
or
pop
push
inc
xor
xchg
aad
out
loope
adc
mov
or
lea
cli
push
movs
pop
xor
or
gs
push
in
shr
fstp
xchg
dec
and
pop
xchg
adc
test
inc
mov
(bad)
jo
mov
or
imul
sub
mov
test
ja
xor
fstp
out
das
aas
add
nop
sub
cmp
sbb
xchg
mov
jbe
xor
test
mov
xchg
cmp
mov
mov
or
pop
sar
ror
cmc
fisubr
and
sbb
fadd
ret
xchg
sub
jb
xor
dec
cmp
mov
xchg
into
scas
jmp
outs
cs
aam
mov
fild
sbb
cmc
cs
dec
dec
std
sbb
jae
or
sbb
cwde
xor
push
push
adc
stos
leave
dec
and
xchg
push
(bad)
mov
(bad)
sbb
cli
loopne
je
in
dec
loop
mov
test
jp
adc
mov
ficom
xlat
jnp
mov
or
pop
sahf
add
xor
and
jp
outs
pop
popa
mov
push
leave
(bad)
out
int3
shr
(bad)
mov
jp
clc
test
cmp
fcmovbe
pop
add
movs
inc
stc
sub
fnop
mov
pop
add
inc
mov
adc
sub
cmps
inc
push
out
mov
mov
call
sbb
cmp
push
inc
sbb
mov
mov
dec
aas
test
xchg
cmp
lods
test
mov
les
sbb
in
mov
adc
cmp
loopne
fnsave
jns
loopne
loop
test
sbb
xchg
popf
dec
sbb
std
xchg
sar
mov
add
ins
add
sahf
dec
gs
push
jecxz
cld
mov
mov
jno
sar
push
mov
loop
add
dec
ins
cs
lahf
enter
mov
jb
outs
mov
push
cmp
(bad)
arpl
inc
movs
and
add
stc
cmp
mov
pop
mov
movs
or
retf
aad
jmp
(bad)
call
sub
and
sub
iret
push
pushf
leave
xor
rcl
xchg
(bad)
dec
(bad)
or
test
cmp
jmp
icebp
mov
dec
arpl
daa
jle
lea
cli
dec
(bad)
fcom
xchg
cld
sub
sti
pop
ja
fist
mov
mov
gs
ss
mov
das
xchg
ja
ds
mov
fwait
stos
cs
fmulp
jmp
pop
daa
push
test
xor
lods
or
sbb
inc
mov
les
mov
push
movs
pop
sub
adc
pop
arpl
mov
fnstsw
(bad)
mov
or
add
in
xchg
mov
cmc
adc
sahf
and
popf
jo
jle
rcl
aas
scas
push
xor
add
inc
xchg
pop
xor
dec
out
int3
xor
pop
ja
movs
dec
sub
pushf
std
mov
jp
cmp
xchg
xchg
xor
call
ss
push
dec
sub
push
sbb
scas
add
int
jns
aaa
mov
and
cld
loopne
mov
push
add
(bad)
pop
repnz
ror
stos
mov
lahf
es
mov
ins
daa
loope
fisub
retf
pusha
es
popf
movs
jecxz
xchg
push
gs
cdq
or
pusha
rcr
push
into
jns
movs
pop
pop
mov
stos
test
addr16
dec
xor
jmp
mov
js
sti
fst
lock
stc
stos
sti
daa
lock
pusha
fistp
pop
inc
xchg
out
fs
es
cmp
rcl
push
rol
jbe
mov
mov
sub
pop
mov
push
jp
xchg
loope
push
pop
mov
psubsb
iret
je
and
xchg
in
push
xor
movs
dec
cmc
mov
icebp
std
cmps
imul
push
add
mov
mov
fnstcw
xchg
(bad)
enter
stos
fmul
dec
lahf
out
push
mov
lds
mov
ja
neg
sub
sbb
adc
jb
mov
sahf
loopne
es
pop
ss
lods
ja
mov
loope
mov
ins
mov
adc
out
jge
lea
fsubr
adc
dec
mov
pop
movs
in
iret
sahf
mov
mov
xchg
inc
sti
xchg
mov
shl
adc
cmp
cld
fnstsw
sbb
inc
or
cmp
xchg
pop
add
or
inc
xchg
cmp
jge
pop
jg
xlat
hlt
xchg
sar
dec
sbb
mov
call
pop
mov
mov
push
jmp
test
push
sti
or
add
addr16
push
retf
jmp
jmp
out
out
cli
or
xor
(bad)
cs
and
jnp
stos
jl
jg
div
push
mov
inc
ds
adc
lock
cmp
sbb
adc
std
jg
into
aam
arpl
cmps
xchg
shl
ja
jmp
ret
push
imul
adc
and
and
xchg
lea
dec
xchg
nop
imul
fisttp
ret
pop
adc
ds
scas
ja
fs
pop
data16
mov
daa
push
mov
cmps
lock
rol
jne
push
imul
loope
clc
sar
add
xchg
jge
cmps
pop
add
pop
jp
test
rcl
gs
push
lds
lods
xlat
js
cmp
test
ror
jle
icebp
in
jmp
loopne
shl
xchg
js
xchg
mov
bound
inc
sbb
retf
ins
fmul
aam
sbb
inc
pop
xchg
cld
lods
scas
push
cmp
iret
xlat
rol
test
add
xchg
psubusb
and
ror
push
cmps
or
sbb
std
xchg
cmp
or
mov
rcr
(bad)
out
mov
add
scas
cwde
fdivr
jge
aad
mov
push
and
jecxz
jmp
cmp
mov
jb
in
sbb
test
xor
je
mov
cld
(bad)
pop
loop
mov
lods
test
in
or
test
test
jmp
jae
pusha
mov
cmp
fnstcw
mov
shr
lods
fist
xchg
inc
xlat
(bad)
in
(bad)
ds
pop
jne
adc
das
xchg
jb
in
or
sar
jmp
mov
mov
mov
outs
inc
push
dec
jge
cld
mov
stos
(bad)
sub
xchg
and
shl
sub
shl
mov
dec
popf
sub
daa
mov
xchg
(bad)
jno
(bad)
and
jmp
leave
adc
mov
jmp
cli
add
adc
(bad)
iret
cmp
inc
dec
mov
sbb
pop
aam
dec
mov
push
cmp
lods
jns
xchg
adc
mov
cmove
scas
dec
pop
out
nop
shr
fadd
cdq
add
mov
fnstcw
sbb
out
bnd
cs
sbb
xor
loopne
xchg
and
push
mov
mov
push
pop
repz
mov
push
add
lea
xchg
rcr
cld
test
inc
sbb
lods
mov
inc
(bad)
rol
jno
push
(bad)
fbstp
loop
lock
repnz
stos
add
aam
aam
lods
mov
retf
mov
jg
push
jno
lahf
inc
gs
push
stos
bound
out
dec
xor
add
inc
pop
inc
das
jle
out
sub
adc
cmp
ja
out
mov
retfw
fcom
jmp
ret
mov
xchg
dec
stos
add
cdq
ja
ds
xor
xchg
mov
inc
or
(bad)
mov
mov
stos
inc
xor
dec
bound
stos
aas
lods
aas
out
jg
mov
jg
arpl
sar
jl
push
leave
mov
and
ins
retf
(bad)
and
cmp
or
dec
inc
cmp
movs
rcl
cmp
ret
stos
xchg
movs
in
sub
xor
stos
sub
pop
stos
xor
mov
jae
jge
sbb
daa
movs
in
pop
dec
push
lods
neg
mov
mov
movs
je
pop
dec
inc
in
data16
pop
xor
cmps
xor
sbb
jge
sub
dec
push
shl
and
cdq
push
push
mov
xchg
pop
enter
retf
in
je
mov
sbb
aaa
popf
add
adc
in
test
clc
cwde
xor
and
jg
inc
iret
cmp
leave
loop
lods
mov
push
xchg
pop
push
xor
int
push
add
fsubr
je
and
scas
dec
pop
int3
xor
dec
lock
jmp
fwait
cmc
fisub
adc
or
xor
movs
cmp
push
mov
xchg
rol
sbb
or
jnp
and
jmp
ret
xor
in
dec
sbb
mov
imul
dec
ds
popf
sub
mov
stc
jb
pop
call
pop
retf
rcl
xchg
loope
cmp
cmp
movs
adc
jnp
je
stc
test
fsubr
loop
in
les
jmp
or
and
sahf
sub
retf
or
inc
int
test
leave
push
in
ds
mov
fdivrp
cmp
dec
add
sub
leave
test
in
scas
aas
sub
mov
out
std
cmp
imul
sub
das
lods
lods
mov
jmp
cmp
clc
popf
pop
push
lea
(bad)
cmp
xor
shr
push
ja
les
fisttp
(bad)
mov
arpl
adc
sub
popf
popa
ja
cdq
in
das
stos
out
cdq
or
dec
inc
pop
xchg
mov
in
clc
movs
add
pop
mov
adc
les
movs
lods
sti
movs
mov
cld
cmps
shl
push
retf
nop
mov
jmp
shr
inc
mov
call
aaa
pop
cs
gs
int3
dec
lea
dec
push
lods
push
es
dec
aaa
imul
xor
jmp
(bad)
cmp
sub
inc
mov
and
daa
mov
je
scas
adc
shl
je
(bad)
sar
push
push
rcr
shl
and
mov
movs
inc
mov
xor
arpl
pop
mov
scas
push
outs
sbb
(bad)
cld
repz
cmps
stos
ret
mov
inc
xor
cmp
sbb
mov
mov
clc
test
das
push
sbb
shl
jecxz
jmp
pop
shr
gs
xor
xchg
jns
push
scas
cwde
pop
xchg
push
push
push
pop
xor
repz
ja
clc
frstor
sub
aas
xchg
mov
ins
out
jbe
aam
popf
jecxz
daa
mov
pop
addr16
fstp
std
pop
(bad)
int3
inc
mov
sub
les
sub
(bad)
fld
lods
push
dec
(bad)
bnd
out
stc
sub
mov
in
icebp
push
or
adc
das
xchg
xchg
xor
movs
jl
imul
outs
push
cdq
adc
push
test
adc
test
jecxz
test
push
test
mov
cmovs
addr16
mov
mov
in
mov
adc
mov
pop
scas
mov
jnp
retf
and
sub
fnsave
inc
lods
mov
cdq
push
frstor
jno
cmp
xabort
xchg
and
inc
in
jecxz
dec
cmp
mov
fwait
lods
lds
loop
dec
rol
shl
jg
loop
test
das
and
cmp
jmp
(bad)
das
mov
sahf
test
scas
mov
(bad)
mov
xor
jmp
sti
fcomp
jo
inc
(bad)
nop
mov
test
inc
xchg
hlt
xchg
shl
jmp
icebp
movs
sbb
sbb
sub
fisttp
mov
lock
(bad)
mov
call
(bad)
adc
jns
or
sbb
sahf
jns
adc
mov
cmp
retf
outs
lds
xchg
movs
stos
loope
xchg
in
mov
jge
xchg
cmp
push
mov
ins
cmp
cmp
fdiv
xor
shl
ins
and
pop
pop
jnp
push
sub
mov
sbb
lods
jo
cmp
push
imul
jne
test
add
ds
xor
adc
inc
bound
push
(bad)
retf
push
xor
sub
mov
loope
inc
xchg
icebp
icebp
xor
adc
add
dec
push
(bad)
add
mov
mov
fwait
or
call
cmp
mov
(bad)
repz
xchg
cli
sar
sub
dec
push
(bad)
adc
call
adc
mov
pop
or
imul
ror
ds
popf
dec
loope
int
scas
jmp
jbe
push
mov
in
test
add
lock
fucomp
cs
or
xchg
sub
jbe
lods
jmp
lods
and
out
out
data16
int
retf
sub
cmp
pushf
fwait
ror
repnz
pop
or
adc
fmul
mov
pop
arpl
cmp
xor
mov
dec
aaa
pop
mov
adc
out
sbb
les
xor
dec
sub
(bad)
add
mov
push
add
cmps
xor
test
pop
xor
push
mov
pop
xor
sub
(bad)
mov
(bad)
ror
in
hlt
push
jg
sbb
mov
xchg
push
dec
dec
mov
push
xchg
sub
cwde
mov
cmp
outs
jge
fs
cmps
jo
adc
std
xchg
mov
mov
sti
dec
repnz
std
ror
outs
xchg
pop
xchg
jg
mov
jecxz
sub
shl
push
mov
or
loope
mov
dec
neg
test
ror
dec
xor
adc
scas
mov
and
jmp
add
or
cmp
loop
into
mov
cld
lods
dec
popa
sub
jge
adc
xchg
test
add
xchg
das
imul
jns
or
pop
and
(bad)
fucomip
(bad)
lock
and
pop
and
jb
jmp
ins
or
dec
add
inc
cmc
mov
dec
fist
into
cmp
iret
jo
pop
jbe
xor
hlt
pop
sbb
daa
ret
sub
xor
ret
push
aas
jg
xchg
and
add
lea
jns
mov
sub
retf
fnsave
and
cli
sbb
cdq
mov
cmp
pop
mov
cli
fsub
sub
call
dec
xor
pop
iret
push
adc
add
xchg
jae
mov
sbb
pop
add
mov
fild
ror
mov
(bad)
(bad)
in
stc
retf
mov
xor
cmp
sbb
fldenv
and
stos
das
and
sbb
push
cmp
test
cmp
mov
outs
shr
pop
jo
dec
pop
pop
rcr
and
xor
retf
pop
test
xchg
int
xchg
dec
mov
or
pop
shl
call
jmp
mov
cmp
mov
das
or
mov
addr16
out
cmp
cld
add
jns
or
data16
xor
mov
jnp
mov
pop
xchg
sar
sub
push
add
push
cmp
pop
cmps
jmp
mov
iret
jmp
in
or
mov
aaa
inc
add
test
stc
outs
data16
push
lods
mov
cmc
xchg
stc
in
mov
fiadd
stos
das
xchg
xor
test
cmp
rcr
xchg
dec
pusha
push
ret
lahf
(bad)
xchg
cmp
(bad)
and
cmp
adc
xchg
popf
pop
test
movs
pushf
leave
pusha
lahf
ins
nop
xor
sub
adc
aas
lea
imul
hlt
(bad)
jmp
es
ror
add
or
nop
(bad)
leave
xchg
loope
mov
loop
pop
stos
(bad)
inc
inc
xchg
xchg
pop
cwde
call
push
pushf
mov
sub
lds
add
outs
push
add
push
call
jle
add
loop
gs
mov
dec
add
mov
xchg
and
dec
adc
lea
in
cmp
push
xchg
sbb
inc
iret
(bad)
mov
push
(bad)
mov
ja
(bad)
lock
retf
fwait
mov
xchg
mov
sub
ins
loop
mov
neg
sub
pop
cmp
jmp
mov
xchg
or
ins
adc
jnp
(bad)
nop
sub
mov
pop
cdq
sub
xchg
sub
imul
jmp
test
mov
add
lea
adc
ret
mov
loope
loop
dec
out
es
retf
add
mov
cdq
add
fcmovne
sbb
sbb
mov
das
jbe
cmp
xchg
lods
mov
outs
sbb
mov
pop
fwait
cvttps2pi
inc
xor
stos
leave
ins
mov
jnp
ja
sbb
push
scas
cmp
push
or
mov
jmp
xor
inc
inc
jnp
in
jmp
dec
and
cwde
or
cwde
movs
adc
or
xchg
pop
sar
in
mov
push
ins
jno
push
adc
or
std
xchg
das
das
pushf
mov
push
pop
daa
sbb
loopne
sti
mov
mov
sub
cmp
ins
out
rcl
sar
xlat
jnp
lods
js
aam
mov
js
cmps
sbb
pop
add
mov
pusha
rcl
inc
daa
fwait
scas
inc
xchg
pop
jo
mov
test
ret
push
xor
sbb
dec
mov
push
mov
jmp
push
mov
push
loop
(bad)
cmp
pop
push
dec
push
jnp
sbb
leave
adc
add
cmp
sbb
cs
push
mov
cmps
nop
and
jno
ins
ss
shl
sub
in
ds
jl
cmps
rol
mov
push
dec
cvtps2pi
cld
mov
cwd
adc
(bad)
dec
(bad)
in
outs
adc
jecxz
or
pushf
and
in
cmp
push
jmp
int3
loop
xor
sub
ret
int3
ret
dec
outs
call
in
inc
in
nop
mov
dec
fst
mov
aas
push
jmp
aam
inc
stos
sbb
inc
out
ret
mov
ins
ins
xchg
sbb
push
ins
jae
cmps
lods
jge
inc
in
mov
idiv
add
mov
push
dec
mov
mov
inc
mov
out
retf
(bad)
nop
mov
sbb
mov
pop
int3
xlat
dec
inc
cmp
pop
adc
push
imul
(bad)
int
aad
xor
ins
ror
pop
int
jae
mov
(bad)
cmps
mov
xchg
cmps
adc
cmp
adc
scas
push
je
movs
lods
movs
iret
scas
call
push
pop
xor
push
icebp
cmc
jg
dec
xchg
retf
(bad)
xchg
sahf
dec
dec
dec
jo
stc
adc
sbb
dec
jg
adc
test
dec
orps
adc
sahf
mov
jmp
ffreep
mov
js
adc
inc
pop
mov
xchg
xchg
test
daa
jb
retf
xor
sub
lock
mov
in
adc
adc
sub
int
call
xchg
sbb
cmp
dec
xchg
icebp
pop
outs
pop
lahf
adc
mov
sbb
mov
data16
sti
loope
jbe
xor
sbb
nop
cld
add
adc
retf
jmp
push
cwde
pop
into
cmp
sub
xor
xor
movs
jp
movs
lods
stos
lods
inc
enter
push
out
(bad)
add
jb
retf
mov
into
pop
ds
add
test
cwde
imul
sub
scas
xor
xor
sbb
fwait
xchg
(bad)
mov
pop
sbb
(bad)
sti
fimul
jbe
ret
retf
js
not
xchg
fwait
and
mov
adc
js
push
loopne
dec
std
sub
and
pop
hlt
cmp
and
cmp
cmp
pop
pop
inc
jecxz
cmp
test
mov
sub
fcomp
add
xchg
sbb
aas
sbb
or
add
(bad)
daa
pop
adc
cwde
mov
push
jae
push
jecxz
mov
(bad)
arpl
in
ins
retf
icebp
pop
leave
frstor
pop
and
sbb
das
or
aas
pusha
add
mov
mov
or
push
cmp
jg
mov
push
sbb
push
push
sub
xor
mov
cmp
push
loope
loopne
mov
or
cli
pop
mov
(bad)
pop
or
bound
ror
inc
cmps
mov
jne
pop
lods
dec
ret
push
jle
dec
jns
xor
imul
fnstcw
aaa
jmp
imul
cmp
mov
daa
dec
xor
and
loop
popa
inc
jecxz
xchg
jl
enter
arpl
rcl
jp
xor
sar
lods
into
jmp
sub
popf
push
mov
xchg
push
aaa
movs
and
outs
sub
sbb
cmp
test
adc
xchg
dec
arpl
push
xor
jne
sub
push
pop
pop
xchg
and
pop
sbb
pop
mov
outs
sbb
push
sahf
dec
cmp
sti
sbb
xchg
adc
ret
push
xlat
shl
cmc
dec
or
icebp
mov
clc
loopne
cmps
jecxz
dec
stos
neg
(bad)
call
sbb
out
dec
push
imul
out
pop
popa
stos
mov
cs
add
cmp
mov
ds
and
aaa
sub
sub
push
add
test
popa
nop
movs
and
push
int
mov
imul
mov
adc
dec
or
cwde
int
mov
jbe
idiv
push
mov
sbb
into
inc
mov
and
fiadd
xor
cmp
cmps
pop
idiv
in
pop
fwait
mov
pop
pop
xchg
cld
mov
fs
xchg
bound
xlat
lock
pop
jo
cmc
or
mov
sbb
movs
jge
neg
mov
or
cmp
adc
stos
and
out
sub
fimul
repnz
pushf
sub
inc
dec
sub
sub
cmp
and
(bad)
loopne
inc
dec
ins
fwait
push
neg
xor
mov
cld
push
adc
push
test
call
leave
sub
dec
retf
shl
popa
and
jbe
ds
shl
mov
shld
jno
jnp
cmps
xor
sti
cmp
add
retf
ret
pop
inc
sub
enter
fidiv
fstp
push
lods
or
cmps
or
lahf
(bad)
jns
and
push
xchg
push
inc
or
add
outs
pushf
bound
(bad)
out
jge
rcl
movs
pop
inc
stos
xor
pushf
out
inc
pop
je
mov
mov
lods
adc
xchg
or
outs
or
push
dec
sub
fcmovnbe
mov
dec
lods
mov
push
jns
cmc
sbb
push
hlt
lods
pop
(bad)
pop
mov
shl
jl
pop
mov
out
mov
sub
das
cmp
imul
adc
pushaw
mov
lock
js
mov
nop
lea
jecxz
cmp
popf
jns
push
out
xor
mov
pop
shl
out
and
loop
xchg
mov
push
add
neg
scas
jp
dec
dec
mov
pop
retf
fwait
lods
push
adc
jbe
push
sbb
cdq
outs
pusha
lods
aaa
imul
fsubrp
mov
inc
das
push
ins
pop
jge
push
icebp
mov
adc
jge
movlhps
mov
push
enter
fld
ret
jo
leave
aam
dec
push
fbstp
mov
inc
push
mov
mov
mov
inc
pop
and
test
ret
sub
leave
jne
mov
retf
inc
inc
mov
and
mov
in
mov
add
mov
shl
pop
test
mov
mov
icebp
pop
rcr
cli
mov
not
lods
dec
mov
adc
mov
xchg
cld
mov
mov
mov
push
cdq
jl
addr16
mov
sub
mov
ficomp
or
adc
pop
xor
mov
push
test
int3
mov
add
jo
xchg
push
mov
sbb
dec
jmp
rcr
xchg
bound
push
pop
cmp
not
jnp
jns
int
sub
test
in
pop
or
or
xchg
mov
xor
imul
stos
mov
imul
nop/reserved
or
pop
xchg
cdq
mov
xor
push
mov
cmp
push
and
dec
push
cld
test
jmp
lock
cdq
call
jno
dec
stos
sbb
scas
stos
pop
xchg
sub
jae
dec
hlt
mov
mov
inc
test
push
add
add
fs
retf
fiadd
sbb
mov
fwait
sysret
push
xor
ins
pop
test
loope
imul
dec
mov
lock
out
call
out
push
mov
pop
nop
repz
push
dec
xchg
js
ret
inc
inc
jmp
sub
and
pop
mov
jae
call
mov
pop
imul
test
mov
cvtps2pi
dec
and
jmp
mov
push
lds
pop
test
(bad)
imul
pop
sub
mov
retf
mov
add
lods
jl
jne
(bad)
pop
mov
nop
pop
imul
cmp
scas
bound
aaa
test
call
scas
pop
idiv
nop
mov
sub
add
mov
pushf
int
sbb
jp
pushf
lods
sub
sub
cmps
pop
jg
push
ins
out
mov
cmp
in
jle
fmul
inc
mov
jmp
xor
lahf
not
repz
pop
inc
je
adc
jmp
sti
xchg
xchg
jge
fwait
(bad)
xchg
cmp
mov
push
sub
loopne
jmp
mov
add
dec
mov
mov
call
enter
ss
rep
xchg
xor
mov
jmp
dec
fild
cli
jnp
pop
sbb
bound
push
xchg
cwde
imul
sbb
sbb
ds
mov
mov
in
xchg
pop
dec
mov
aad
pop
pop
mov
jp
pop
push
mov
aad
cmp
cmp
mov
dec
imul
add
not
pop
xchg
cwde
(bad)
cmc
and
xchg
inc
icebp
fidivr
rol
cmp
ja
(bad)
jg
cld
(bad)
imul
cs
jne
jl
push
jmp
fild
dec
clc
cmp
popa
add
jbe
inc
and
lods
in
test
jno
jecxz
adc
jp
imul
dec
fst
push
outs
jg
mov
in
or
mov
pop
iret
add
out
test
push
push
jl
scas
mov
jmp
adc
push
pop
das
dec
in
xchg
scas
mov
sbb
out
mov
cs
and
les
inc
jp
rcr
test
or
repz
movs
lock
inc
add
dec
cmps
mov
jmp
sti
rcr
jbe
mov
ds
retf
(bad)
out
xchg
and
mov
rdtsc
xlat
hlt
sbb
jmp
push
cmp
jns
xchg
mov
nop
mov
sbb
rcl
dec
inc
add
xor
pop
and
pop
mov
pop
in
add
sub
or
loop
push
mov
xchg
xchg
pop
add
(bad)
test
add
dec
cwde
scas
pop
outs
jmp
dec
cmp
imul
pop
adc
jmp
arpl
stos
xor
out
cdq
test
in
adc
nop
mov
fwait
ds
loope
std
mov
xchg
push
pop
add
(bad)
out
push
jno
js
inc
daa
rcl
lea
xchg
add
enter
push
cmp
sub
lods
jge
je
mov
mov
mov
imul
pop
cwde
dec
das
outs
cmps
bound
test
mov
out
and
and
xor
jb
push
jmp
dec
add
pop
push
int3
jl
pop
in
mov
push
cmp
or
mov
inc
push
pcmpgtd
cmps
imul
lock
dec
add
adc
imul
icebp
lahf
sub
mov
lea
xchg
xchg
xor
jle
inc
leave
(bad)
dec
inc
or
pop
jbe
push
out
ss
test
sbb
dec
fsubr
adc
push
test
jne
cld
enter
xor
fild
sahf
pop
loop
lea
sbb
adc
pop
sub
or
mov
std
push
pop
in
inc
jmp
dec
mov
sub
push
test
mov
jecxz
xor
sbb
cmp
pop
retf
and
popa
loopne
push
repz
arpl
pop
cld
rcl
in
jns
push
jb
in
loopne
bound
adc
xchg
push
loop
lea
mov
or
aad
push
hlt
fs
das
inc
out
jmp
(bad)
inc
arpl
out
fcomp
jl
ins
mov
aaa
fnstenv
inc
and
pop
shl
inc
jbe
ret
jbe
data16
sbb
push
retf
ret
imul
mov
int3
cld
retf
jbe
xor
test
or
mov
es
and
daa
in
sar
pop
jno
hlt
sar
shl
les
dec
sbb
and
test
add
cli
xchg
daa
adc
cwde
test
xor
push
retf
xchg
xor
sub
mov
ret
or
aam
dec
fsincos
or
je
jbe
daa
xlat
(bad)
fisttp
or
xchg
push
pop
and
call
out
ss
stos
xor
and
sar
xchg
or
idiv
inc
stc
imul
pop
(bad)
clc
outs
pop
cmp
int3
inc
ins
mov
sub
pop
inc
out
(bad)
inc
xchg
popf
pop
movs
rol
ds
pop
cli
xlat
jg
adc
rcr
sbb
call
xchg
rcl
push
aaa
and
xchg
mov
xlat
push
ds
adc
test
mov
loop
adc
mov
mov
(bad)
in
das
mov
pop
mov
push
or
mov
and
rol
adc
loope
mov
sub
sbb
fisttp
fdiv
adc
xor
inc
arpl
dec
scas
(bad)
pushf
dec
mov
dec
in
scas
rol
scas
in
or
in
mov
sub
leave
adc
cs
pop
lods
adc
fsubr
popf
sbb
add
sub
(bad)
mov
mov
mov
in
es
int3
scas
cmp
xor
mov
add
cmc
xor
or
int3
daa
pop
pop
cmps
pop
adc
(bad)
and
mulps
pushf
or
pop
pop
dec
fnsave
jbe
xchg
jmp
jns
cmp
jmp
movs
lds
dec
(bad)
and
cmps
add
aad
pop
test
pop
xchg
cmp
ror
adc
jp
cmp
inc
ins
fisttp
imul
outs
mov
(bad)
adc
mov
imul
sub
mov
mov
xchg
adc
cmps
arpl
popa
mov
in
lahf
pop
push
dec
sahf
mov
loope
ret
xchg
push
sub
adc
xchg
xor
sti
mov
lea
ss
cmp
and
outs
push
fcomi
push
mov
cmp
aam
mov
je
and
mov
xor
loopne
rcl
movs
adc
sbb
repz
iret
test
shl
xchg
cmc
sbb
in
sub
or
(bad)
mov
sbb
daa
lea
lds
call
ins
fisttp
or
das
ret
call
bound
aad
xor
in
in
ficomp
sub
push
push
lds
mov
adc
sub
push
jb
(bad)
cli
jo
add
xor
aad
psadbw
cmps
retf
sub
loope
pop
add
inc
hlt
dec
pmuludq
imul
and
jb
push
or
aam
xor
cmp
xchg
pop
add
jo
and
ins
dec
mov
push
inc
popf
fwait
and
hlt
leave
pop
ror
and
pop
stos
imul
and
push
cmp
push
xchg
cmps
dec
push
adc
repnz
das
dec
rcl
xor
(bad)
imul
into
fnstsw
sub
lock
adc
sbb
push
fisub
into
scas
mov
out
iret
(bad)
xchg
and
or
fadd
loopne
and
add
mov
es
(bad)
test
add
jae
mov
or
call
fnstsw
clc
outs
and
adc
pop
pop
scas
ins
je
cli
sbb
dec
sub
mov
sub
cmps
mov
adc
call
push
fmul
(bad)
out
mov
inc
or
mov
mov
mov
push
ret
rcl
addr16
push
or
ret
sbb
adc
(bad)
std
jbe
sbb
mov
adc
pop
fidivr
aaa
cli
loop
out
dec
pop
call
das
pop
les
sub
mov
arpl
lds
out
push
xor
ss
add
out
in
pop
fs
cli
repz
stos
sbb
dec
fisubr
int
test
aad
cmp
or
call
adc
sub
xor
adc
cmp
mov
lods
push
pop
loope
dec
aad
push
jmp
mov
pushf
jle
fwait
mov
fdiv
out
push
(bad)
or
xor
dec
mov
call
iret
adc
les
inc
repnz
imul
mov
lods
out
inc
packssdw
xchg
push
mov
(bad)
mov
and
jne
aad
ret
or
test
mov
xchg
stos
inc
ins
fucom
xor
pop
inc
loope
pop
sbb
push
mov
sub
in
mov
xchg
pop
sahf
fstp
and
fisttp
mov
jp
cmps
xchg
xchg
mov
sub
rcl
or
dec
dec
out
cmp
rcr
sub
jmp
cmps
aas
jl
push
(bad)
fistp
sbb
outs
(bad)
movs
xchg
rcl
ins
push
mov
mov
and
lds
lods
inc
call
test
inc
xor
fcomp
jge
popa
cmp
dec
popf
sar
mov
ins
pushf
xchg
mov
jecxz
pusha
pop
mov
icebp
fsubr
and
sbb
dec
xor
dec
push
mul
pop
repnz
retf
jl
adc
dec
outs
mov
lea
add
sbb
dec
lea
inc
jns
xchg
or
xchg
adc
jne
mov
outs
mov
in
pop
add
shl
js
xlat
test
mov
lock
add
int3
cwde
cmp
add
lahf
fcom
jle
jg
or
and
add
in
and
neg
mov
jne
mov
mov
inc
xor
test
xchg
sahf
es
loope
add
or
or
ds
repnz
fst
and
ja
sar
jl
mov
mov
inc
or
jb
mov
adc
fwait
loope
imul
cmc
sar
out
mov
aam
sahf
lahf
retf
retf
pop
cmps
repz
xchg
mov
dec
xchg
(bad)
sbb
mov
ficomp
mov
out
fsubr
call
xor
mov
push
sub
jge
xchg
cmps
fsubr
arpl
inc
(bad)
cli
inc
mov
push
mov
ja
scas
in
and
iret
movs
dec
mov
mov
daa
and
pcmpgtw
xlat
(bad)
push
stc
or
pop
xor
ror
cs
mov
adc
movs
jmp
mov
mov
cmp
mov
ror
mov
cmc
scas
ins
inc
cdq
adc
push
call
rcr
cmps
sti
jmp
jne
push
pop
pushw
and
out
out
fst
sbb
xchg
jno
or
push
fwait
shr
mov
shl
and
into
fisub
retf
cmp
bound
retf
dec
retf
vandps
sar
in
sti
mov
sahf
or
pop
cmps
nop
in
inc
xchg
jge
gs
sbb
test
dec
adc
fwait
arpl
mov
dec
mov
int3
rcr
pop
mov
push
push
div
call
jge
cmp
push
add
popf
and
dec
retf
rol
add
ror
push
xchg
pop
push
fisttp
retf
hlt
or
mov
mov
call
shl
mov
pop
pusha
pop
mov
loopne
ds
ja
es
jmp
xor
jp
les
sub
mov
sbb
popf
fcom
xchg
rcl
gs
xor
mov
dec
mov
and
mov
out
mov
inc
mov
ja
mov
cmps
out
daa
in
movs
call
test
push
daa
add
imul
sbb
pop
push
shl
mov
(bad)
fdivr
movs
cld
fdivr
ss
ds
push
or
leave
cmps
mov
mov
xchg
movs
cdq
lods
shl
cmp
push
fneni(8087
jle
pop
jl
mov
dec
lods
mov
movs
mov
dec
push
int3
ins
out
sbb
dec
xor
pop
inc
cmc
(bad)
dec
(bad)
pop
stc
std
cwde
cmp
inc
call
push
cwde
in
bnd
mov
out
pop
rol
fimul
aaa
mov
or
dec
test
movs
es
jne
nop
aaa
retf
sbb
mov
out
out
(bad)
int
std
or
dec
jl
icebp
pop
xchg
adc
xor
in
cmp
bound
sub
dec
mov
xor
into
movs
cmps
rcl
pop
(bad)
and
in
dec
sbb
add
nop
jno
add
inc
cld
push
fcmovnb
call
lods
adc
repnz
ja
push
nop
js
adc
imul
lds
addr16
aam
sbb
add
stos
inc
mov
int
sub
in
push
mov
psubsw
retf
or
mov
push
outs
setae
push
jb
add
inc
cmp
xchg
ss
in
jbe
cmp
lods
inc
sub
mov
pop
les
and
adc
cmp
adc
das
fmul
mov
hlt
jne
(bad)
sbb
mov
push
add
push
scas
or
fisub
inc
push
adc
xchg
jo
mov
rcr
into
out
pop
mov
aad
and
repnz
aad
lock
mov
fwait
pop
xchg
xchg
pop
add
pop
jle
rol
mov
mov
and
add
push
lods
add
sbb
repz
fwait
(bad)
xor
mov
adc
ffreep
jge
jae
pushf
mov
loop
pop
jg
cli
sbb
clc
mov
fisubr
push
ins
pop
aad
mov
pushf
cmc
ds
push
gs
(bad)
inc
iret
shl
out
call
loopne
jecxz
mov
ret
mov
lock
clc
in
daa
inc
(bad)
in
stos
dec
inc
cld
mov
and
xor
test
std
std
inc
aas
es
mov
and
mov
aas
daa
loope
sub
inc
daa
ss
mov
dec
clc
iret
rcr
sbb
jne
popf
push
scas
xor
imul
cmp
dec
cmp
mov
pop
stos
and
cmps
bound
mov
jge
cmp
push
jp
pushf
push
sbb
add
xor
mov
pop
or
push
jmp
test
and
ror
or
cmp
xor
jae
mov
enter
or
add
sar
adc
mov
pusha
mov
div
sahf
dec
mov
div
cmp
and
(bad)
imul
(bad)
subps
int
lock
ffree
ror
and
je
jmp
add
xchg
sub
sub
lock
dec
ror
sub
call
jmp
shr
lods
and
inc
push
outs
iret
pop
cmc
cld
mov
mov
pop
and
movs
daa
jmp
push
out
ja
out
sbb
jo
and
sbb
ficom
mov
xorps
inc
mov
es
sbb
retf
aas
add
das
leave
jge
mov
ror
hlt
inc
pop
adc
inc
cmps
xchg
push
cmp
mov
sub
call
fmul
(bad)
xor
jg
aam
add
cmp
loop
mov
add
xchg
inc
mov
adc
stos
cmps
or
jno
xchg
pop
add
mov
or
mov
scas
loopne
pop
(bad)
in
cmp
sbb
xor
xor
inc
push
js
lock
loope
sbb
not
dec
or
jb
je
lds
repnz
out
xor
mov
xchg
mov
mov
xor
sub
push
cmp
pop
and
(bad)
mov
pop
mov
jns
mov
loope
test
fdivp
pop
sbb
out
mov
add
loop
push
mov
je
repz
mov
cmp
iret
into
(bad)
int
xor
mov
cmp
jmp
push
cmp
xor
mov
or
mov
sbb
adc
ins
xor
shr
mov
push
jbe
(bad)
mov
addr16
fadd
jg
dec
mov
sub
cmp
aam
cdq
shl
and
xor
mov
aad
mov
xor
scas
out
fistp
rcr
inc
fcomp
imul
out
enter
dec
outs
push
fcomp
push
adc
mov
ja
addr16
das
daa
push
add
dec
int
ret
imul
mov
lods
sub
out
and
loopne
int3
push
cmp
sbb
shl
clc
ror
shr
sti
ror
inc
push
icebp
hlt
sar
fs
push
fadd
movs
in
mov
iret
xchg
pop
pop
aam
or
sbb
sub
jb
cmps
test
add
clc
inc
mov
and
fiadd
sub
push
outs
outs
dec
xchg
sub
fwait
mov
int
gs
xor
and
mov
mov
dec
fnclex
inc
jge
push
call
icebp
cmp
mov
mov
icebp
sub
addr16
sub
call
xchg
pop
pop
push
fmulp
aas
xchg
imul
add
mov
pop
mov
add
add
jmp
jmp
mov
jne
in
pop
mov
mov
jmp
ret
inc
cld
(bad)
mov
and
add
dec
imul
or
cld
adc
ss
xor
cmps
leave
add
pushf
aam
pushw
shl
cmc
push
daa
add
cli
pop
ins
lea
sub
push
aaa
gs
xor
cli
xor
pop
mov
jg
pop
ss
adc
xchg
pusha
mov
cmp
cmp
int
xchg
inc
inc
ins
mov
and
mov
stc
cmp
and
sbb
mov
(bad)
cmp
fs
xchg
rcl
or
mov
jp
pop
jo
xor
and
mov
pop
out
(bad)
cmp
in
mov
cmp
sub
in
cmp
mov
adc
jl
dec
add
inc
mov
pop
lods
inc
adc
pop
add
xor
cli
cmp
cdq
xchg
lods
icebp
(bad)
clc
add
xchg
or
js
xor
mov
(bad)
xor
adc
push
pop
shr
lods
or
xor
stc
int
cmp
call
adc
and
das
sub
mov
or
inc
std
inc
xor
int3
xor
add
pop
rcr
xchg
xchg
pop
and
lods
out
inc
(bad)
add
push
shr
jno
aas
fisub
ret
push
xlat
add
imul
ror
sbb
leave
cld
inc
jle
or
pop
scas
leave
jo
sbb
or
fwait
mov
jg
and
push
push
(bad)
add
imul
cs
cmps
xor
sti
xor
out
outs
loope
mov
into
jns
hlt
shl
xor
sub
jb
cmp
(bad)
cmp
mov
cmp
push
jb
scas
cs
or
xor
sbb
mov
test
mov
sti
or
sub
nop
ja
stos
or
cmp
add
ret
jl
mov
fst
aas
sub
jp
dec
pop
push
outs
xor
repnz
jp
mov
cwde
neg
fild
or
jmp
mov
repnz
add
(bad)
ins
loopne
push
xchg
cmp
int3
int3
mov
fldz
and
add
cdq
sti
mov
rol
lods
push
jnp
and
out
mov
cmp
leave
les
cwde
addr16
or
mov
add
popf
mov
ud1
add
jl
jp
mov
in
and
fdivr
ins
jno
(bad)
std
push
mov
sub
outs
and
push
jecxz
rcr
(bad)
jge
cmp
popa
add
mov
dec
setle
mov
mov
jbe
jecxz
movs
fldenv
dec
and
scas
(bad)
loopne
lea
sub
cmp
and
mov
rcl
pop
aam
cmp
ins
or
jmp
pop
int
mov
and
jmp
fild
xchg
test
popa
lods
popa
and
adc
jno
mov
lds
cli
push
mov
mov
jb
add
aaa
dec
jmp
sbb
mov
and
mov
sub
data16
mov
mov
loope
push
push
cmp
adc
ficomp
mov
js
sub
rcr
pusha
xchg
outs
or
int
test
push
adc
test
out
enter
sahf
cs
cmp
and
inc
shl
(bad)
xchg
mov
add
pusha
pop
and
test
mov
out
pusha
mov
cmps
xor
lods
adc
(bad)
mov
js
cmp
or
(bad)
mov
cmp
(bad)
jle
loopne
adc
fmul
data16
call
test
bound
bound
mov
pop
jmp
in
push
add
add
ret
mov
mov
retf
mov
sub
pop
int3
push
sahf
out
xor
mov
xor
or
fwait
add
mov
xchg
fwait
retf
pop
mov
sub
jp
xchg
dec
xchg
cli
enter
add
xor
inc
pop
shl
push
int3
pcmpeqw
daa
sub
inc
cmps
retfw
mov
clc
push
inc
mov
stos
in
dec
addr16
adc
mov
aad
out
popf
int3
fisub
pushf
add
ja
pusha
ds
xchg
jge
aam
cdq
push
mov
sbb
jge
(bad)
cmp
jnp
xchg
ins
dec
adc
inc
jmp
mov
test
or
jl
lock
inc
sbb
jb
(bad)
adc
or
(bad)
cmps
js
mov
nop
xchg
loop
or
cmp
push
inc
cmps
mov
push
add
push
dec
jle
test
mov
jl
add
mov
add
mov
movs
inc
and
movs
sbb
scas
sahf
ror
xchg
pusha
lahf
(bad)
and
lea
std
outs
mov
inc
add
push
shl
jb
aaa
jne
inc
nop
adc
int3
cmps
jmp
sbb
inc
fmul
cld
leave
test
arpl
int3
add
test
outs
aad
ror
es
in
out
or
add
xchg
(bad)
mov
dec
and
ins
and
add
inc
dec
push
pop
jmp
aas
sahf
cwde
jmp
sub
jle
push
sub
out
add
cmp
push
xor
jns
cmp
sbb
fidiv
hlt
ja
and
mov
in
xchg
push
cmp
jnp
dec
dec
jp
fs
pop
das
pop
clc
xlat
movs
(bad)
out
add
scas
jb
jae
(bad)
lock
sbb
iret
cmc
stos
mov
inc
cld
and
push
(bad)
ret
jnp
pop
inc
jmp
fmul
xchg
iret
cmp
mov
pop
pop
jmp
aam
cs
leave
out
rcl
fbld
pop
es
xchg
add
mov
repnz
xor
xor
jae
(bad)
cmp
or
movs
sub
and
clc
pop
dec
push
xor
xor
addr16
mov
xchg
pop
ret
ds
jp
pop
add
in
xchg
add
call
add
lea
jo
inc
dec
jbe
ret
adc
fs
ja
repnz
es
pop
fwait
add
and
xor
movs
and
test
or
sbb
push
inc
(bad)
loopne
jmp
out
inc
inc
enter
mov
sbb
adc
jae
test
mov
xchg
xchg
sbb
daa
adc
stc
punpckhwd
mov
cmps
fsubr
cmp
mov
aam
xlat
mov
cmp
inc
pop
mov
pop
sti
add
xchg
push
inc
or
mov
test
imul
out
sub
je
sub
sub
mov
pop
shl
xchg
add
ficom
mov
cmp
ret
jb
jmp
or
mov
xor
mov
push
mov
mov
add
rcr
mov
and
movups
imul
adc
jne
inc
inc
repnz
sub
mov
and
or
stc
xchg
imul
add
ret
mov
sub
add
fistp
bound
int3
push
shl
popa
popf
mov
adc
mov
xor
xchg
das
push
jge
mov
imul
dec
xchg
retf
and
scas
out
push
leave
and
in
inc
loop
inc
sub
add
cmp
imul
(bad)
test
call
add
mov
cmp
cdq
inc
and
or
dec
push
sub
jae
ficomp
retf
into
jecxz
and
dec
push
stos
inc
frstor
in
mov
call
addr16
jge
cmp
iret
xor
cmp
loopne
dec
jb
sub
push
push
adc
dec
out
fwait
cmp
stos
lahf
add
aaa
shl
xchg
mov
(bad)
mov
add
push
aas
mov
hlt
cs
cmp
mov
mov
pushf
leave
jmp
fbstp
popf
(bad)
mov
sbb
mov
mov
repz
repz
pop
(bad)
hlt
sbb
imul
pop
xchg
mov
neg
test
and
dec
dec
sti
adc
jge
xchg
adc
jmp
dec
neg
mov
cmp
inc
adc
es
jmp
inc
dec
scas
mov
pusha
mov
std
imul
dec
in
lahf
ret
pushf
jb
fcom
sbb
sbb
sbb
push
add
aad
jl
loopne
lock
mov
mov
xchg
js
jl
push
les
out
and
lods
pop
mov
div
in
sahf
mov
ret
push
in
xlat
xor
sbb
ins
sbb
addr16
mov
mov
gs
sub
jecxz
jo
cwde
ret
(bad)
ficomp
ret
(bad)
out
mov
pop
and
mov
pop
lds
cmp
stos
hlt
sahf
gs
pop
or
mov
push
jns
add
ror
aam
inc
jnp
jns
and
arpl
jp
push
lods
add
sub
xor
push
sub
sbb
add
pop
call
out
cmp
push
jbe
or
xor
mov
push
push
sub
ja
mov
push
rol
es
aaa
mov
out
adc
out
inc
ret
mov
inc
loop
scas
inc
arpl
ins
(bad)
mov
cld
and
inc
enter
sahf
or
sub
inc
cmp
cmp
adc
cmp
js
out
cmp
jo
push
test
fistp
scas
outs
mov
sub
neg
mov
mov
mov
clc
in
clc
dec
lock
in
sbb
or
sti
mov
push
mov
or
repz
inc
mov
jbe
test
mov
mov
sbb
pop
add
sahf
je
and
mov
mov
dec
ds
mov
xchg
mov
(bad)
iret
pop
rol
push
in
add
mov
mov
add
int3
xchg
in
aam
and
pop
cdq
dec
(bad)
pop
cmps
inc
jge
xor
push
adc
jmp
add
in
mov
mov
inc
test
mov
mov
xchg
and
aas
push
xor
sub
cmp
stos
xor
cmp
cmp
in
xchg
neg
mov
pop
das
and
sbb
xchg
loope
gs
mov
int3
push
data16
or
and
pop
and
ret
sub
sub
mov
push
mov
lea
pop
test
or
icebp
sub
mov
cld
lods
sahf
enter
scas
in
aaa
pushf
fidiv
and
push
retf
inc
ret
(bad)
loop
dec
ins
imul
sahf
aam
(bad)
repnz
add
dec
xchg
and
jmp
sbb
xor
jg
cdq
pop
xlat
pop
push
and
jg
and
outs
and
and
movs
jb
inc
sub
fsubr
mov
ror
popf
mov
adc
push
fild
pop
cmp
pop
jae
(bad)
adc
and
out
cdq
add
lea
push
mov
stc
sbb
(bad)
and
cmp
push
test
xlat
push
adc
sbb
ror
cmp
icebp
and
pushf
mov
movs
jno
imul
xor
mov
xchg
lds
arpl
test
sbb
mov
pop
dec
add
cmp
mov
mov
and
pop
in
stos
mov
sbb
xchg
push
scas
sar
into
mov
xchg
pop
and
mov
cmps
xor
dec
and
ja
data16
ret
(bad)
jne
jne
xor
icebp
fdiv
je
ret
jbe
sbb
sbb
movs
in
pop
inc
sbb
inc
les
push
xchg
sbb
xchg
inc
xchg
dec
dec
cmps
sub
jecxz
mov
dec
addr16
int3
fidivr
shl
jp
mov
stos
dec
scas
sub
test
mov
outs
out
adc
jg
mov
out
xchg
mov
sbb
jmp
add
ja
or
scas
xchg
sbb
adc
gs
ss
dec
js
not
sub
pop
jns
popf
cld
sub
and
push
shl
inc
xor
das
addr16
cvtps2pd
outs
das
inc
and
xchg
inc
push
daa
ret
dec
pushf
mov
test
jo
stos
ja
mov
neg
xor
cs
xchg
jle
adc
add
retf
sub
dec
jg
(bad)
(bad)
cmp
test
mov
inc
adc
ds
addr16
sbb
aaa
jmp
les
pop
(bad)
mov
rcr
pop
leave
shr
mov
scas
fdivp
inc
sub
enter
jne
add
and
sub
mov
ret
add
adc
cli
mov
jno
pop
xor
sub
sbb
std
inc
or
jne
je
std
ror
ss
cmp
ret
jb
sbb
adc
rcl
pop
retf
jg
and
in
out
pusha
in
(bad)
in
aam
inc
add
lock
jge
jge
xchg
div
jb
xor
mov
jnp
test
ret
je
xchg
inc
in
sub
aas
jle
mov
xor
mov
std
dec
popf
dec
fmul
(bad)
mov
adc
mov
hlt
enter
sbb
jp
ins
stc
dec
mov
or
(bad)
aam
retf
and
inc
push
fisttp
xor
push
pop
push
jmp
pop
(bad)
nop
sbb
cmp
adc
outs
add
ret
xlat
xchg
mov
mov
repz
or
arpl
(bad)
retf
fs
pop
or
test
and
push
pushf
xchg
gs
mov
fpatan
repz
cdq
push
sub
pop
jle
mov
jecxz
push
ja
call
outs
add
sub
cmp
and
mov
add
lea
pop
stc
fisubr
inc
inc
and
mov
ins
xchg
stos
lds
or
out
jp
jne
imul
dec
or
sbb
xor
cs
fild
xor
fisttp
add
out
jbe
in
rcl
pushf
mov
sbb
repz
ret
mov
addr16
movs
out
stc
pop
xor
lods
mov
mov
(bad)
shl
pop
cdq
push
mov
arpl
fucomip
movs
nop
(bad)
push
or
add
test
cli
jno
sbb
mov
inc
jecxz
shr
rcr
mov
xchg
cmc
adc
call
lds
or
cli
in
jno
das
add
into
mov
js
enter
imul
dec
cli
cli
test
xchg
push
das
lods
jl
aam
push
ror
inc
leave
mov
mov
mov
push
addr16
jb
inc
cli
shl
mov
ins
test
add
add
rcr
xor
push
cmovae
(bad)
lock
jo
dec
mov
sbb
je
fwait
xchg
and
ins
leave
cmp
mov
push
inc
imul
inc
sti
add
cmc
mov
mov
cld
mov
adc
push
sub
inc
popa
cmp
test
sub
and
scas
mov
pop
and
sbb
fisub
cmp
(bad)
outs
mov
int
aad
or
jp
inc
mov
ja
mov
hlt
sub
mov
fmul
jecxz
xchg
push
pop
ficom
not
add
sbb
in
xchg
add
mov
jns
and
cmp
push
test
lods
dec
jb
out
sbb
jl
repnz
and
dec
inc
shl
ret
cmp
cld
add
ret
mov
fisub
and
icebp
popa
lock
in
cmp
mov
outs
mov
inc
pop
dec
push
adc
ret
pop
das
(bad)
not
sub
xor
mov
(bad)
sti
cmp
out
movs
fcomip
jmp
rol
or
out
arpl
aas
mov
add
imul
lahf
ds
or
jle
mov
repnz
jno
out
aas
test
mov
retf
loopne
inc
cmps
stos
xor
fisubr
jmp
sbb
mov
xchg
(bad)
iret
in
jmp
movs
dec
xchg
(bad)
imul
xchg
push
inc
imul
mov
push
push
outs
loop
pop
test
shr
xchg
popa
jae
dec
lods
push
(bad)
fild
pop
or
popf
(bad)
fsubr
or
mov
lods
ja
mov
mov
pop
mov
push
cwde
add
add
mov
mov
je
or
mov
lds
scas
ret
mov
mov
fisub
in
mov
sar
jmp
jecxz
inc
xchg
or
xlat
arpl
cmp
xor
pop
push
out
cmp
jae
push
jb
mov
std
mov
cli
lea
es
mov
in
dec
in
mov
daa
push
sbb
adc
pop
sbb
add
fbstp
mov
loope
xor
pop
fistp
test
push
cdq
mov
imul
pop
and
hlt
not
repnz
or
cmp
jmp
xchg
push
mov
ret
and
jns
adc
loop
push
mov
adc
retf
jmp
push
lods
mov
fldcw
jp
sahf
pop
outs
xchg
cmc
and
sbb
fldenv
lock
mov
fisttp
imul
mov
dec
jb
add
pop
fucomip
jbe
or
push
mov
mov
popf
test
xchg
iret
add
fld
lds
inc
xor
xchg
pop
nop
cmc
leave
nop
call
sti
push
xor
mov
push
xor
mov
dec
mov
rcr
sar
mov
mov
sbb
pop
not
cli
leave
mov
cmps
add
fstp
mov
jno
fst
pop
sahf
das
mov
sub
sub
popf
rol
fdivr
and
(bad)
callw
out
adc
dec
lds
fcom
call
fisubr
pop
cdq
in
das
std
not
xchg
jg
adc
inc
clc
and
mov
jmp
cmp
pop
scas
cmp
ds
mov
out
mov
mov
sub
sbb
sbb
dec
out
inc
pushf
push
mov
nop
lock
fucomip
cmp
pop
pop
hlt
mov
pop
adc
les
fsub
fwait
test
bound
sbb
push
cwde
mov
ret
xor
jae
pop
jecxz
in
jno
inc
mov
xor
adc
imul
leave
or
movs
mov
add
push
jmp
sub
xchg
addr16
iret
repz
in
cdq
push
add
jmp
es
xor
mov
mov
cmps
mov
sub
add
push
sub
push
je
xchg
and
dec
call
xchg
imul
xor
mov
stos
lods
inc
push
add
add
xchg
dec
fidiv
ds
mov
into
xor
sub
ins
add
in
and
mov
scas
int
sahf
xor
adc
ror
jmp
std
out
ins
into
(bad)
stos
inc
daa
jge
jl
mov
xor
mov
and
xor
sub
call
in
lahf
mov
rcr
sar
div
inc
add
enter
hlt
arpl
stos
pushf
sti
mov
rcl
inc
mov
push
adc
hlt
imul
lahf
mov
dec
shl
push
mov
scas
hlt
fsubr
mov
mov
pop
loop
xor
push
(bad)
jo
pop
leave
jmp
mov
push
adc
xchg
(bad)
fstp
mov
dec
pop
loopne
loop
mov
xor
(bad)
outs
xchg
cmp
loopne
movs
ja
jmp
(bad)
retf
sub
xor
xor
shl
fistp
cmp
ins
sbb
sbb
inc
jg
jbe
popf
mov
gs
cwde
sbb
inc
push
push
mov
mov
test
ja
and
stc
pavgw
loop
test
fdiv
out
add
jb
inc
sub
fs
je
jb
aas
(bad)
enter
lahf
(bad)
jl
(bad)
inc
fldenv
add
add
addr16
mov
adc
pusha
mov
aad
popa
iret
jnp
dec
into
mov
add
imul
fwait
loope
enter
loopne
pop
mov
adc
fld
push
fld
adc
and
loop
adc
(bad)
out
jmp
push
ins
cmps
retf
and
ret
imul
(bad)
pop
fs
inc
(bad)
push
hlt
jp
out
push
in
nop
das
push
mov
popa
push
bound
in
faddp
les
mov
push
in
fs
(bad)
retf
cs
idiv
imul
xchg
push
dec
fst
sbb
outs
out
add
push
inc
mov
aaa
pop
in
test
fadd
and
in
movs
(bad)
pusha
xor
neg
jo
mov
aaa
add
inc
push
pop
sub
jg
sahf
push
mov
sub
data16
jns
inc
cmp
test
push
mov
cmps
hlt
imul
aad
imul
sub
add
sbb
mov
shl
ins
push
dec
arpl
ss
inc
cs
mov
push
fidiv
jno
dec
idiv
ret
pop
xchg
nop
idiv
push
mov
imul
xlat
xchg
mov
pop
imul
pop
aam
adc
jbe
adc
cmpxchg
fwait
mov
movs
push
cmp
aad
into
xchg
mov
ja
scas
jmp
ins
fdivrp
std
aam
lock
sbb
add
mov
mov
xchg
stos
dec
outs
icebp
int3
fs
jmp
lods
xor
rol
enter
es
mov
aaa
mov
sub
sbb
mov
in
ja
jle
jne
xor
mov
push
dec
je
or
(bad)
dec
out
in
les
iret
jecxz
cmp
repnz
ins
jno
xchg
mov
jb
mov
leave
and
es
imul
(bad)
retfw
fild
xor
add
mov
mov
ins
cmc
daa
xor
inc
push
call
fpatan
ret
int3
repnz
fmul
inc
sysexit
sti
cmp
out
or
ds
and
popa
imul
imul
inc
mov
popf
xor
jp
test
sar
adc
movs
cli
push
jl
and
out
nop
sbb
sbb
enter
and
stc
out
dec
lods
or
jg
sbb
or
call
out
loop
vmovdqa
jnp
adc
popf
jns
aas
stc
pushf
xchg
arpl
cmp
xchg
ja
pop
idiv
cmp
int
test
and
outs
repz
dec
lahf
ret
ds
fimul
or
inc
fnstenv
push
test
add
shld
and
les
mov
xor
or
out
mov
out
jnp
xchg
sub
es
mov
jns
push
aam
cs
sbb
mov
sbb
dec
mov
mov
gs
enter
addr16
rcr
jno
(bad)
sti
push
loopne
jae
sub
mov
or
rcl
popf
or
neg
rol
mov
jle
aam
cmc
mov
inc
ror
aam
sbb
cli
inc
push
dec
mov
mov
or
dec
xchg
jnp
xor
xchg
ret
cmps
and
jns
inc
arpl
aas
lods
repz
iret
js
mov
mov
in
(bad)
xor
cmp
cwde
shr
mov
in
xchg
and
push
xor
loopne
out
jnp
lods
(bad)
je
dec
int
add
outs
fnsave
cmps
or
mov
inc
(bad)
std
cs
sub
(bad)
sti
sub
or
dec
push
call
jl
out
jg
cmp
inc
xchg
sti
int
cmp
jg
(bad)
repz
stos
sbb
jecxz
in
(bad)
jae
lods
sbb
cmp
dec
inc
loopne
outs
xor
test
push
and
leave
xchg
test
addr16
mov
adc
mov
cs
in
add
into
and
aaa
mov
pop
jbe
fucomi
inc
popf
lods
addr16
loop
add
sbb
mov
adc
out
repz
iret
test
jno
or
mov
aad
addr16
push
bswap
mov
mov
ins
mov
mov
jecxz
cli
mov
(bad)
mov
in
xchg
hlt
jb
outs
rol
mov
test
adc
neg
jg
mov
movs
(bad)
mov
add
add
mov
adc
mov
lea
dec
xor
mov
sub
sbb
cmp
dec
xchg
pop
fwait
shl
shl
inc
js
xchg
mov
cwde
xchg
push
in
xchg
movs
push
cmp
pop
pop
hlt
add
aaa
xchg
dec
movs
cmp
inc
dec
ss
jecxz
push
sbb
bound
inc
sbb
mov
xchg
neg
sub
ss
shl
loop
sbb
xchg
in
inc
cmp
jle
shl
(bad)
ret
cmp
leave
rcl
ja
dec
add
push
retf
inc
dec
jge
pop
imul
add
or
jb
jg
dec
cmp
ins
hlt
xchg
dec
ss
(bad)
mov
sbb
push
adc
mov
jno
mov
test
mov
sub
into
jo
enter
fmul
call
push
xchg
and
push
cmp
mov
popf
push
mov
mov
dec
add
add
dec
movs
pop
clc
enter
dec
cmp
mov
mov
sbb
and
sbb
push
push
jmp
mov
pop
jecxz
outs
bound
cld
sahf
push
enter
push
cmp
add
mov
or
mov
addr16
scas
pushf
leave
std
enter
dec
lods
sbb
push
xor
sti
pop
je
cwde
adc
xor
jmp
add
adc
shr
adc
imul
(bad)
push
xchg
mov
mov
cmc
mov
cwde
lods
or
test
cli
mov
punpckhwd
mov
sub
int3
int3
shl
jmp
test
aam
shl
hlt
or
loop
adc
jns
mov
clc
push
push
mov
inc
out
mov
cmp
pop
movs
iret
shl
jge
cwde
stos
sbb
dec
jle
mov
mov
push
jecxz
xchg
and
jne
pop
(bad)
mov
cwde
pop
outs
push
call
bound
mov
test
or
cmp
retf
push
xchg
adc
(bad)
adc
fiadd
mov
repnz
jnp
fisubr
scas
or
add
xchg
or
aaa
fwait
push
or
dec
in
(bad)
daa
icebp
call
sahf
xchg
adc
add
or
loope
dec
(bad)
inc
mov
xchg
fstp
and
pop
dec
sbb
adc
outs
aad
pop
retf
xor
add
mov
leave
in
call
movs
imul
imul
hlt
jle
(bad)
lods
jmp
cmc
sar
push
sub
mov
jl
clc
cs
sub
movs
sahf
or
mov
sbb
xor
(bad)
xchg
test
cmp
jge
and
popa
dec
retf
add
sub
sub
shl
pop
ins
clc
adc
and
daa
push
repz
fbld
pop
in
xchg
dec
stos
push
test
or
adc
popf
jg
sbb
jmp
cmp
mov
imul
stos
and
pop
and
dec
or
lea
dec
mov
inc
pop
pusha
dec
pusha
cmp
sub
mov
jno
ret
adc
div
cld
pop
xor
scas
(bad)
xor
cs
pushf
(bad)
aad
mov
and
cmp
dec
mov
les
push
and
pop
sub
adc
ret
xlat
sub
and
add
add
loopne
sbb
mov
lock
imul
adc
xchg
outs
dec
mov
pop
jo
sbb
out
add
xchg
rol
add
push
pcmpgtw
mov
popa
xchg
adc
xchg
call
pop
cwde
jnp
inc
addr16
data16
sti
ja
imul
out
stc
sti
sbb
vunpcklps
mov
xchg
movs
sbb
pushf
arpl
test
lock
call
mov
mov
sbb
sub
cmps
ficomp
jbe
(bad)
ret
mov
scas
jns
inc
push
sbb
js
sar
jecxz
jp
add
test
jecxz
pop
sbb
jmp
dec
jns
cmp
pop
xor
cwde
imul
mov
xlat
push
cmp
mov
(bad)
shl
dec
jno
cmc
aas
ja
xor
xor
or
popa
test
inc
repz
(bad)
xchg
movs
mov
in
dec
lods
sbb
add
push
jp
fcomp
fidivr
ds
scas
aas
pop
int
sub
daa
add
out
adc
adc
xchg
inc
xor
dec
mov
and
xchg
cmp
or
cdq
xchg
jl
(bad)
ins
ds
out
push
and
xchg
sbb
sub
inc
popa
and
inc
ror
cmp
adc
add
push
mov
add
clc
or
fdivr
aaa
(bad)
retf
or
xor
or
jp
mov
mov
mov
mov
pop
sbb
push
jnp
cmp
(bad)
xor
clc
fbld
mov
mov
fwait
push
fsub
shl
jl
sbb
loop
or
dec
jg
test
int
fcomi
mov
dec
jne
xchg
call
dec
sahf
sbb
push
in
(bad)
out
cmp
je
call
push
add
xchg
push
call
dec
jne
dec
sahf
mov
fwait
dec
add
xchg
cli
ins
and
jg
ds
mov
or
scas
sub
scas
cs
rcl
xchg
mov
fistp
dec
push
dec
mov
push
push
adc
lds
ds
test
jbe
in
xchg
inc
fnstenv
inc
pop
sub
js
xchg
and
dec
push
mov
sub
sbb
(bad)
pop
inc
ja
or
sbb
and
push
xor
sti
pop
xor
shl
outs
push
xor
or
add
imul
call
dec
inc
push
popa
mov
sbb
add
sbb
fidivr
fdiv
mov
push
inc
inc
dec
shr
adc
add
arpl
and
and
outs
out
ret
ret
inc
add
pop
nop
imul
out
frstor
das
xor
aam
mov
adc
int
ret
fimul
rol
pop
xchg
adc
adc
mov
lds
dec
aaa
xchg
scas
test
cmc
pop
xchg
repnz
pop
add
gs
jmp
dec
or
cdq
rol
out
or
pop
retf
int
mov
add
jle
gs
(bad)
inc
ins
fstp
cmp
int3
inc
adc
addr16
inc
das
dec
xchg
or
jnp
outs
call
scas
mov
adc
mov
xchg
sbb
add
xchg
dec
call
and
sub
lock
ret
xor
sti
ror
jns
fwait
(bad)
out
addr16
in
addr16
scas
iret
cmp
jmp
(bad)
mov
sub
cdq
push
enter
in
repz
adc
in
cmps
cld
xchg
sti
mul
retf
or
sbb
repnz
retf
fcom
push
xchg
jb
dec
ret
inc
xchg
and
pop
icebp
xchg
xlat
mov
std
ss
repz
xchg
mov
sub
sbb
(bad)
fld
sub
les
cmp
pop
mov
loop
sbb
fcmovne
push
jae
mov
jno
data16
mov
out
inc
call
jb
sti
pop
add
in
cmp
aad
fld
call
lds
or
pop
xchg
bsf
or
jmp
inc
sti
add
sbb
aas
sub
xor
stos
and
cmp
sbb
in
pop
scas
(bad)
out
pop
cmp
add
test
(bad)
mov
dec
cmc
out
or
mov
movs
add
mov
cld
lock
nop
out
mov
jl
(bad)
ret
sub
fst
fcom
lds
mov
push
xchg
sti
in
xchg
call
or
push
or
std
push
rol
or
sahf
mov
and
push
call
in
rcl
out
mov
imul
and
hlt
hlt
aad
scas
aam
pop
loop
fisttp
xchg
xchg
fwait
jbe
cmp
jo
pop
je
or
movs
out
pop
inc
das
jmp
out
cmp
dec
jp
and
push
mov
(bad)
jl
adc
inc
mov
imul
outs
dec
sub
pop
jns
in
push
push
inc
jmp
push
add
inc
rol
jno
adc
push
loope
femms
mov
movs
xchg
mov
adc
adc
push
cmps
cmp
(bad)
jne
adc
pop
ds
outs
mov
lahf
ds
add
xchg
lods
shr
test
jg
repz
jge
popf
loope
lods
or
aaa
cwde
addr16
xlat
pop
(bad)
nop
cmp
ficomp
push
push
push
inc
ret
(bad)
sbb
fsubr
ins
loopne
mov
aam
or
mov
mov
jg
dec
lea
mov
lahf
(bad)
cmps
ret
mov
test
in
in
aad
aaa
std
fucom
inc
and
xchg
jne
mov
mov
je
or
mov
(bad)
jp
inc
jb
adc
cmps
jmp
(bad)
jg
sub
jne
cmp
jge
lahf
sbb
cmc
in
add
mov
(bad)
and
push
ror
pop
dec
mov
lds
in
shr
push
and
dec
xlat
lods
jne
cmp
fmul
jb
or
call
fdivr
pop
adc
scas
movs
not
pop
push
lfs
(bad)
jle
or
je
jle
inc
hlt
mov
inc
xchg
repz
outs
in
stos
std
ret
xlat
xchg
sbb
std
shr
dec
mov
cld
out
ss
adc
clc
inc
push
adc
out
fnstcw
repnz
adc
sub
xor
xor
sub
inc
test
push
jns
or
shl
mov
jae
out
push
inc
(bad)
ror
dec
xor
add
pop
retf
adc
out
mov
xchg
mov
cmp
ficom
aam
out
in
sub
push
shl
add
pop
mov
inc
xchg
data16
stos
jne
cmps
xchg
into
xchg
out
std
mov
mov
std
xchg
mov
xor
or
movs
shr
adc
in
test
leave
out
movs
ins
fist
pop
std
mov
xchg
out
ss
dec
push
sahf
shr
sub
sub
sbb
stos
sbb
enter
inc
add
push
pop
cdq
dec
and
je
std
add
lahf
lods
adc
mov
aad
add
or
pop
adc
sub
into
adc
add
mov
mov
cmp
lds
add
call
in
and
pushf
mov
test
add
sub
or
jne
adc
retf
shr
inc
es
test
ds
sub
call
pop
add
sbb
xor
mov
fisubr
ja
mov
mov
mov
mov
xchg
and
jg
sbb
int3
xor
daa
sub
enter
inc
(bad)
and
mov
mov
add
psllq
xchg
jbe
sbb
out
push
jecxz
fsub
sti
ficomp
cmp
ds
out
mov
aas
or
pop
sbb
cmp
jnp
sub
gs
xchg
and
inc
call
ret
in
adc
(bad)
aas
cmp
xchg
addr16
ja
das
xor
adc
jnp
outs
bound
push
into
rcl
imul
add
fsubp
and
daa
mov
adc
adc
adc
out
mov
pop
jmp
push
add
mov
(bad)
cwde
ret
bound
push
sub
iret
mov
mov
add
pop
mov
xchg
and
stos
adc
mov
iret
push
xchg
or
adc
dec
and
or
or
test
adc
add
sub
aas
sbb
add
xor
jg
outs
sbb
inc
das
inc
loop
pop
mov
push
xchg
das
jmp
std
adc
xchg
xchg
push
rcr
sbb
mov
mov
jae
test
push
and
push
pop
inc
sbb
cmp
cmp
inc
inc
mov
jp
pop
imul
call
jmp
rcl
adc
repnz
xchg
dec
pop
fnstenv
cdq
ja
fadd
and
aas
inc
mov
(bad)
fld
cwde
cld
pop
dec
mov
icebp
add
bound
outs
loope
pop
je
mov
lock
les
cmp
dec
(bad)
aaa
fisttp
mov
jg
pusha
loop
lahf
out
test
ins
push
sub
into
int
jl
jmp
fst
or
(bad)
xor
xlat
cmp
push
(bad)
or
inc
pop
adc
add
xor
sbb
lods
cld
mov
jmp
adc
xchg
das
xchg
fistp
inc
pop
dec
xor
sbb
lds
mov
cmc
int3
push
adc
jle
in
rcr
jb
dec
cs
sti
icebp
sub
fistp
call
inc
int
pop
arpl
movs
pusha
add
mov
fisttp
nop
and
iret
cli
xchg
pop
neg
call
inc
cli
ret
adc
jo
xchg
xor
push
push
pusha
imul
xlat
ret
pop
mov
je
imul
or
jno
popa
pop
mul
int
jmp
mov
repz
dec
leave
rcl
cmp
enter
fdivr
fsubr
jno
push
xchg
push
pusha
push
repz
sahf
enter
imul
xor
sbb
or
mov
sbb
retf
pop
sti
xchg
das
add
mov
ffree
and
push
std
mov
icebp
out
adc
add
mov
fprem1
add
popf
mov
shr
dec
xchg
sub
call
ins
inc
xor
lds
fidiv
popa
add
inc
adc
imul
data16
loopne
adc
sbb
jae
movs
or
or
(bad)
loopne
sub
inc
enter
cmps
push
add
jle
repnz
push
scas
out
jnp
pushf
hlt
pusha
pop
or
cli
hlt
mov
fs
pop
outs
cmp
push
sbb
pop
sub
jnp
jnp
inc
ja
sub
sub
aas
jno
pop
shl
mov
ds
fist
sbb
stc
or
mov
push
std
mov
adc
pop
call
xchg
inc
shr
push
fisub
adc
pusha
test
jnp
test
stos
adc
sti
push
mov
dec
dec
pop
adc
mov
jmp
push
ja
mov
imul
and
mov
mov
dec
(bad)
jg
retf
lock
lds
xchg
arpl
push
(bad)
loop
push
xlat
cwde
and
and
je
std
sti
and
and
xchg
pop
inc
loopne
xchg
fcomp
lock
retf
(bad)
vpaddd
std
dec
loope
and
out
add
adc
cmp
mov
inc
shl
and
sub
inc
and
inc
add
push
jmp
add
fadd
adc
add
lahf
lock
mov
adc
inc
loop
mov
cmp
fs
push
adc
cmps
mov
or
in
dec
movs
pop
inc
enter
sub
jl
mov
pop
push
call
push
sbb
adc
adc
out
add
repz
icebp
dec
test
jmp
out
sbb
push
pop
mov
jbe
push
stos
loopne
inc
dec
ret
mov
xchg
out
popf
dec
xchg
(bad)
lea
xchg
mov
mov
sub
ins
pop
push
jne
add
inc
jge
jg
gs
pop
(bad)
dec
or
pop
dec
not
xchg
ror
in
retf
dec
fnstenv
das
ret
or
dec
les
je
xlat
mov
xor
xchg
xchg
call
push
sbb
cmp
shl
xchg
and
sahf
out
cmps
out
rol
call
adc
dec
adc
mov
out
mov
aas
sbb
xor
stos
icebp
jb
sbb
popf
inc
adc
or
(bad)
in
cmps
and
(bad)
cli
cmp
pop
or
call
nop
jmp
xchg
push
loopne
test
jmp
add
movs
jo
mov
fild
dec
jmp
cli
aas
jns
dec
(bad)
ja
outs
adc
cmp
mov
inc
imul
pop
clc
mov
and
das
int3
add
sbb
out
and
mov
jecxz
jl
xor
fistp
add
loope
ret
add
adc
inc
std
pop
in
xchg
sbb
addr16
outs
and
push
jge
fild
sti
add
in
pop
ret
test
pop
xchg
mov
dec
jge
pop
pop
xor
mov
popa
loope
add
xchg
add
dec
sar
xchg
add
jmp
pop
and
mov
sbb
mov
setns
jge
jno
sbb
or
sbb
cmp
add
dec
out
lahf
pop
inc
adc
jae
add
mov
dec
push
push
add
ret
xchg
sbb
dec
in
jae
cmp
mov
rol
jg
or
mov
repnz
aad
inc
ja
jl
popf
test
cmp
lahf
mov
ss
scas
adc
repnz
jl
pop
call
adc
lds
lods
mov
and
sbb
aas
jmp
ja
and
inc
sbb
jb
test
inc
(bad)
jns
xor
dec
adc
mov
sbb
mov
movs
out
inc
mov
adc
inc
push
mov
jle
jo
pusha
fcomp
mov
xlat
jne
in
sbb
inc
mov
stc
xchg
sbb
in
pop
xor
cwde
ret
out
xchg
lock
mov
enter
xor
iret
lods
dec
adc
inc
retf
mov
ret
movs
adc
mov
out
jecxz
pop
dec
outs
sar
and
or
jl
dec
dec
in
movs
fwait
or
mov
xor
cmp
push
push
cmp
(bad)
daa
add
cmp
lea
stos
jbe
dec
inc
xor
retf
pop
or
dec
test
push
mov
arpl
xor
mov
lea
pushf
inc
pop
sub
pop
movs
mov
mov
clc
sbb
push
sub
mov
ds
push
xor
push
call
shl
dec
add
jle
inc
sbb
cmp
and
repz
outs
test
rol
(bad)
sub
(bad)
mov
dec
outs
and
(bad)
pop
mov
jecxz
inc
inc
and
aam
and
repnz
inc
xchg
xchg
std
push
pop
call
inc
popf
push
jmp
sub
cmps
movs
ins
dec
icebp
mov
call
shl
into
mov
cwde
inc
movntq
out
inc
pop
mov
jecxz
cwde
pop
iret
mov
xchg
or
inc
mov
mov
push
das
fwait
pop
out
push
sahf
xor
fcmovb
sbb
xor
or
jl
ret
loope
and
loopne
std
cmps
ins
pusha
call
es
rcl
mov
xchg
or
jbe
xor
xchg
mov
jecxz
sub
test
dec
xchg
inc
enter
mov
pop
loopne
jae
not
jnp
cmc
sbb
pop
out
jp
fsubr
rcr
xchg
stos
scas
shl
cwde
xor
or
test
adc
pop
jge
arpl
cwde
mov
into
pop
movs
jle
(bad)
mov
fs
jns
xor
clc
adc
pushf
pop
add
jbe
mov
xor
xchg
ds
push
push
dec
dec
sub
test
retf
bound
rol
pop
cwde
fcomp
pop
xor
cs
adc
int
retw
adc
and
mov
mov
mov
mov
ins
je
pop
(bad)
cld
pushf
fwait
jecxz
mov
cwde
sar
test
fisubr
sub
ja
jbe
adc
xor
pop
sbb
sti
xor
mov
pop
cli
fisubr
pop
cmp
push
and
adc
clc
call
xchg
mov
in
xchg
mov
cli
cmp
xchg
and
sub
sub
scas
cwde
sbb
push
inc
push
shl
mov
neg
pop
jo
je
(bad)
(bad)
jns
in
mov
das
scas
mov
stos
push
mov
xchg
jb
or
sub
add
cld
cld
mov
les
jae
mov
sub
repnz
sbb
scas
stos
mov
jge
mov
in
mov
inc
fld
mov
dec
mov
mov
leave
cmps
cmp
shr
stc
add
cli
xor
xchg
movs
push
xor
jnp
ss
scas
pop
shr
cmps
outs
or
shl
mov
mov
call
out
mov
(bad)
bound
scas
rcl
cmp
pop
test
push
sbb
je
mov
inc
inc
push
xor
fisub
repz
xchg
arpl
neg
ins
inc
add
in
cs
and
xchg
shr
inc
out
lods
daa
pop
xor
ficomp
ss
bound
cmps
in
sub
mov
loop
add
cmc
(bad)
push
xchg
push
dec
cwde
ret
jmp
sub
cmp
(bad)
xor
mov
cld
inc
jnp
dec
dec
or
gs
sahf
loopne
sbb
(bad)
addr16
daa
cmp
mov
add
mov
not
icebp
pop
aam
aam
test
lods
jbe
shr
pop
(bad)
and
inc
es
sub
nop
mov
addr16
ss
pop
stc
ss
cmp
mov
popa
fs
inc
xor
fwait
mov
or
xor
push
xor
xchg
xchg
shl
icebp
pop
xchg
add
jecxz
(bad)
sbb
mov
(bad)
retf
shl
push
fadd
test
pinsrw
mov
mov
push
push
xor
repnz
loope
mov
jbe
mov
sar
nop
dec
repz
xchg
mov
pop
movs
pusha
enter
(bad)
fucomi
les
mov
ror
iret
fmul
aas
fild
jge
pushf
retf
femms
sbb
enter
mov
test
test
test
rol
mov
fst
scas
jl
jp
mov
xor
in
jmp
std
nop
xor
pusha
stos
xor
outs
pop
fs
popa
push
jmp
cmp
sub
outs
cmps
jmp
cmp
scas
daa
adc
sub
sub
ja
sbb
add
add
push
adc
push
xor
aas
jno
dec
and
pop
adc
adc
adc
aam
inc
or
out
add
sub
mov
in
aaa
add
stos
dec
fild
in
movs
(bad)
cdq
dec
cmp
cbw
push
cmps
inc
jmp
stos
push
cmp
mov
push
into
ss
push
fdivr
jmp
imul
pop
movs
rcr
mov
sbb
mov
xchg
mov
call
stos
idiv
js
or
push
pop
xchg
cdq
pop
out
retf
mov
fwait
mov
out
cmc
jle
(bad)
xchg
and
popf
xchg
in
mov
sub
scas
call
pop
cmp
or
std
data16
push
fimul
call
mov
leave
jp
in
repz
aad
jnp
xchg
or
jmp
xchg
or
fs
add
int
mov
mov
or
push
dec
mov
dec
(bad)
(bad)
lods
jb
xor
push
xchg
fwait
aam
rcl
ins
ss
ds
jmp
call
jmp
cld
xlat
mov
cdq
fstp
pop
stc
push
rol
(bad)
cmp
fadd
or
sbb
les
(bad)
push
repnz
pop
icebp
inc
int
add
out
gs
pop
fimul
retf
mov
or
mov
mov
out
dec
mov
outs
out
fiadd
mov
mov
jo
in
adc
cmp
repz
jne
jne
dec
stos
call
das
jbe
aam
dec
ret
mov
mov
jmp
dec
shl
mov
loop
mov
mov
pushf
retf
mov
pop
out
das
scas
stos
pop
push
sbb
xor
pop
arpl
push
pop
adc
lahf
mov
call
aaa
mov
pop
sub
push
adc
imul
mov
adc
jecxz
push
push
(bad)
sub
cwde
xchg
push
ret
jo
ja
stos
jg
sar
cmp
xchg
xchg
mov
inc
retf
push
das
sbb
lods
xchg
pop
xor
pop
scas
(bad)
fsubrp
xchg
call
or
and
mov
fmul
cwde
ins
inc
xor
dec
sbb
arpl
push
popa
xor
jo
(bad)
pop
(bad)
out
push
xchg
sbb
cmp
hlt
dec
fucom
xchg
int
imul
sub
in
int
call
or
cmp
or
or
lds
inc
jns
daa
iret
jmp
add
or
xor
dec
lahf
in
rcr
and
and
pop
fdivr
jbe
bound
and
jb
mov
fsubr
xor
lahf
pop
loopne
movs
jp
add
add
bound
neg
outs
not
push
(bad)
jo
imul
dec
mov
add
dec
dec
fndisi(8087
inc
leave
cmp
sbb
cmps
imul
sub
cs
cmc
scas
dec
(bad)
xor
jle
hlt
cmps
retf
popf
inc
popa
shr
aas
push
mov
push
out
lods
mov
je
outs
mov
icebp
(bad)
jb
dec
pop
mov
int3
sbb
push
xlat
popf
pop
cdq
lods
mov
stos
sub
scas
fdiv
and
pop
pop
call
retf
or
(bad)
bound
mov
test
les
jmp
inc
push
jmp
rol
xor
pushf
push
movs
jmp
pop
into
push
fisub
cmp
push
(bad)
movs
adc
hlt
dec
cld
sbb
pop
ins
cdq
mov
cmp
pusha
lock
pop
and
out
jb
push
mov
scas
stos
fwait
xchg
inc
enter
loop
in
imul
dec
or
pop
in
sbb
or
add
rcl
stc
add
scas
jnp
dec
pop
icebp
dec
out
mov
or
mov
xor
fdiv
frstor
sub
adc
iret
loop
mov
mov
xchg
cs
jmp
fwait
xchg
xchg
mov
clc
sbb
push
call
pop
dec
dec
xchg
xor
inc
xchg
sahf
aas
in
leave
dec
cmp
movs
mov
adc
data16
cmp
mov
inc
addr16
pop
lea
mov
push
inc
push
cmp
jb
stc
sahf
push
pop
lahf
mov
push
xlat
jns
fcom
lods
adc
mov
add
pop
mov
add
js
add
jle
js
test
jbe
out
inc
sbb
daa
xlat
scas
fidiv
movs
adc
add
jge
jl
pop
les
lods
mov
xchg
(bad)
mov
cmp
aas
fisub
xor
xchg
adc
int
inc
scas
xor
mov
mov
(bad)
fsubr
mov
das
adc
stc
in
sbb
std
mov
arpl
cmp
int3
add
pop
and
xchg
das
rcr
pop
nop
outs
popa
mov
cmps
lea
mov
rcl
push
cld
dec
push
inc
repnz
rcr
lock
inc
adc
ins
dec
test
loope
mov
outs
xor
test
out
jns
movs
pop
mov
xor
or
loope
ret
ds
iret
add
test
jg
pop
sbb
repnz
cmp
clc
cmc
inc
rol
or
sbb
lods
ret
jl
xor
mov
mov
imul
or
or
xor
jmp
test
add
pop
lods
sub
cs
add
pop
(bad)
dec
inc
cmovs
mov
js
or
sbb
std
mov
test
mov
in
push
jae
fsubrp
shl
fdiv
cmp
cdq
or
or
xlat
xor
xchg
out
cli
sub
fnstsw
lock
cdq
outs
mov
cmp
loope
sti
out
out
xchg
les
inc
popf
inc
arpl
mov
movs
cmp
xor
jns
inc
fldenv
xor
add
cmp
es
jmp
jl
dec
push
sub
ds
es
or
dec
ret
shl
dec
shl
ror
outs
rcl
mov
mov
inc
imul
push
push
mov
lods
xor
inc
je
sbb
or
imul
cwde
fsubr
adc
(bad)
in
push
in
int
mov
cmc
jb
inc
leave
or
inc
into
pop
cmc
push
xchg
sti
cmp
addr16
sub
xor
xchg
jae
xchg
rcl
clc
lahf
es
out
dec
mov
call
ins
jno
pop
iret
xor
xchg
mov
jmp
jle
scas
mov
leave
sti
adc
push
(bad)
cmps
mov
and
push
fucomi
sar
jl
or
shl
and
sbb
fbld
mov
inc
test
fld
xchg
push
pop
sub
add
mov
adc
mov
arpl
(bad)
lds
or
iret
shl
in
pusha
(bad)
fisubr
out
jne
and
push
cmc
out
test
add
shl
cmps
xchg
in
jp
xor
sub
jp
imul
and
cmp
xlat
dec
xlat
push
mov
adc
clc
stc
push
ja
popa
sti
sbb
pop
add
loop
mov
bound
add
mov
xor
sbb
jno
mov
mov
in
mov
xor
test
mov
sub
sar
adc
ins
in
sub
lds
aaa
enter
retf
sbb
push
xchg
js
and
shl
mov
push
fild
inc
out
and
mov
into
sub
mov
(bad)
jmp
out
pushf
adc
es
cmp
mov
daa
xchg
ins
lahf
and
and
mov
ins
fisttp
aas
(bad)
pop
mov
or
mov
mov
clc
add
sbb
lods
outs
push
push
adc
nop
add
shr
movs
mov
int3
or
inc
sbb
jno
cmp
push
mov
lods
fstp
sbb
pop
scas
xchg
pop
mov
pop
call
inc
test
jno
stc
test
inc
(bad)
lods
leave
test
cmp
adc
cmp
daa
mov
rol
out
cmp
repnz
outs
lods
push
ret
test
sbb
inc
jmp
xor
mov
xchg
and
mov
mov
inc
inc
or
push
nop
shl
scas
xor
push
es
mov
add
daa
int
mov
loope
rol
mov
mov
and
fst
test
bnd
sbb
sbb
and
stos
xchg
and
stos
pop
and
les
(bad)
in
sbb
mov
pop
neg
inc
pop
cli
mov
es
pop
mov
mov
sub
inc
jns
(bad)
jmp
inc
push
pop
sahf
xchg
jg
enter
nop
mov
mov
add
mov
ins
scas
cmp
mov
cmc
test
scas
lea
inc
std
pusha
mov
pop
dec
lds
and
clc
push
stos
in
mov
popf
pop
mov
repz
scas
test
gs
es
sbb
mov
add
or
mul
sar
mov
cmp
mov
inc
popa
jns
cwde
pop
mov
adc
push
pop
mov
call
sub
neg
xchg
fist
cmp
jg
push
pop
xchg
and
pushf
je
test
inc
cmp
outs
adc
pop
test
daa
int3
stc
cmp
jmp
loop
inc
pop
add
cmp
fcomip
aas
push
outs
(bad)
repnz
sbb
nop
or
and
xor
pop
(bad)
in
xchg
push
ins
(bad)
icebp
pop
or
iret
nop
ret
pop
pop
xchg
sbb
stc
(bad)
add
popa
outs
pop
imul
mov
ret
inc
sub
jbe
shl
add
sub
jp
cmp
mov
mov
mov
int3
jecxz
xchg
mov
in
lea
push
nop
inc
mov
out
es
xor
cwde
es
stc
and
mov
dec
inc
xor
jg
int3
jbe
ret
adc
in
test
icebp
mov
repnz
add
inc
retf
jg
mov
xchg
mov
dec
stc
imul
cmp
sbb
mov
and
out
shl
cmp
fst
or
and
adc
mov
stc
jl
pop
iret
jmp
push
adc
mov
(bad)
jb
dec
cli
sbb
mov
sbb
cwde
lods
mov
adc
sbb
sbb
sub
ds
(bad)
fild
push
inc
movs
sub
fs
imul
pop
retf
inc
sbb
and
xor
adc
mov
mov
dec
inc
mov
add
add
sbb
mov
out
hlt
pmaxsw
adc
cwde
mov
fisubr
jnp
dec
mov
ja
neg
pop
cmp
jae
fst
sti
push
adc
daa
cmp
cld
push
add
pop
xchg
inc
(bad)
push
mov
jae
inc
test
push
mov
pop
mov
sub
dec
nop
out
shl
arpl
pop
pop
sub
add
sub
add
cmps
and
ss
xlat
cmc
movs
retf
jno
(bad)
bound
jle
jp
enter
scas
ret
mulps
jp
or
pop
loop
or
mov
test
fld
adc
repnz
jns
shl
cld
pop
cli
inc
lods
cmps
shr
out
inc
loop
xor
pop
mov
xchg
mov
rol
cmc
xor
push
iret
retf
fdiv
push
pusha
imul
cmp
inc
xchg
jmp
sub
stos
mov
stos
cmp
jmp
ins
imul
sub
clc
xor
icebp
cmp
in
jnp
mov
adc
xor
in
mov
rol
sahf
cmc
push
lods
fwait
clc
stos
adc
lods
(bad)
jmp
movs
iret
jmp
xor
into
push
cmp
fbld
cmp
pop
push
pop
inc
jo
sbb
lea
inc
js
(bad)
dec
push
dec
in
ja
rol
shl
jg
sub
pop
scas
dec
xor
sub
add
ds
fwait
sbb
mov
or
arpl
pop
ins
test
lods
ficom
movntq
inc
leave
fnstsw
mov
or
inc
push
dec
and
fisttp
jmp
ss
cmp
js
pop
lods
cmc
mov
xor
sub
and
and
sub
mov
inc
mov
jns
dec
retf
maxps
inc
xchg
or
jp
pop
mov
mov
test
cmp
adc
sub
test
sbb
imul
adc
sti
lds
and
push
adc
and
les
or
mov
cli
inc
lock
pavgb
sbb
mov
daa
int
leave
out
inc
fld
push
push
mov
push
mov
data16
mov
in
pushf
xchg
mov
jmp
scas
push
jnp
(bad)
mov
mov
push
push
push
sbb
ins
std
fadd
mov
inc
sub
rcl
adc
push
jp
push
pop
scas
mov
jno
pop
and
and
leave
mov
aas
mov
xchg
pop
or
jbe
lods
and
push
push
std
xchg
jns
xor
pop
sbb
in
movs
pop
int
scas
xor
jnp
mov
enter
imul
jg
shl
push
push
loop
repz
jge
and
rcl
mov
or
mov
rcr
pop
inc
jno
loopne
cmp
or
pop
cmp
mov
arpl
sub
bound
push
push
pop
mov
mov
inc
sbb
jg
leave
rol
push
xchg
inc
sbb
sbb
aaa
lds
(bad)
cmp
mov
xchg
dec
(bad)
test
lahf
jbe
push
adc
aas
jnp
or
xchg
les
dec
stc
jge
cli
sar
sub
xchg
inc
out
aas
in
adc
mov
in
mov
rcl
mov
add
xchg
nop
cwde
arpl
pop
push
xchg
mov
dec
xchg
movs
xchg
shr
js
xchg
mov
cmp
mov
data16
gs
fwait
lods
stos
pop
push
pop
popa
test
inc
jmp
sub
mov
pushf
mov
fs
jbe
xchg
ret
pop
dec
or
jmp
adc
loope
cmp
(bad)
adc
retf
adc
call
push
or
das
sub
loop
push
loop
push
push
mov
repz
fcmovbe
(bad)
xlat
retf
add
ret
(bad)
fnstsw
pop
lds
push
js
arpl
out
(bad)
mov
ror
popa
out
mov
sub
in
out
adc
jmp
mov
xchg
stos
mov
mov
sub
fmul
adc
lea
mov
hlt
cmp
pop
cli
add
dec
add
jmp
addr16
aam
into
scas
push
scas
mov
test
in
(bad)
xor
sbb
adc
or
test
(bad)
(bad)
xor
sub
ins
sub
jge
push
inc
icebp
int
sahf
sub
mov
inc
das
push
dec
ins
pop
in
xchg
aaa
or
pop
jb
xor
lods
inc
pushf
ret
push
ss
cmps
lahf
ja
mov
pop
rol
cs
pop
or
retf
sub
or
add
iret
inc
pop
xchg
xor
scas
mov
jp
mov
xchg
jp
push
sbb
(bad)
outs
lahf
inc
aaa
test
xchg
fist
adc
push
mov
inc
add
add
sbb
fs
popa
pop
cdq
scas
fisub
add
add
aas
pop
jo
sub
mov
pop
mov
imul
lds
loope
into
push
(bad)
cli
jo
sbb
hlt
inc
rcl
dec
cmc
fiadd
mov
mov
jno
mov
jmp
into
xchg
lea
push
inc
int
call
retf
add
mov
aaa
mov
dec
loope
sbb
sub
xchg
out
(bad)
mov
jl
fistp
adc
es
mov
dec
inc
imul
sar
add
cs
call
mov
mov
les
push
mov
(bad)
pop
jmp
adc
imul
sti
ret
and
leave
stc
or
cmp
dec
sbb
xor
(bad)
fiadd
sar
fidiv
and
shr
sub
ins
and
mov
ror
jg
movs
fs
push
xchg
cmp
fstp
(bad)
push
xor
mov
std
cmp
mov
cmc
jl
jmp
adc
ins
hlt
push
out
mov
mov
jae
movs
int3
call
test
test
jp
or
cmps
cmps
xchg
inc
pop
imul
fdivr
pop
add
push
and
mov
loopne
fild
dec
vmovd
dec
out
jne
add
xor
mov
adc
mov
sub
inc
je
or
shl
and
shr
lds
push
fidivr
pop
cwde
jmp
lods
ret
xor
mov
imul
jecxz
sub
mov
icebp
pop
and
adc
sbb
ret
jl
xor
push
or
or
cdq
sub
jge
dec
push
sbb
xor
sbb
mov
sub
lock
cmp
pop
cmp
out
inc
test
(bad)
mov
sahf
call
cmp
into
test
xchg
mov
ins
push
inc
test
adc
dec
icebp
movs
jp
(bad)
ins
and
mov
loop
jbe
jle
and
add
ds
ja
idiv
or
icebp
das
xor
sub
iret
(bad)
mov
cmp
sub
arpl
jne
div
aas
mov
inc
add
aam
add
ficomp
adc
sub
bound
lods
inc
out
add
hlt
jecxz
inc
inc
pop
mov
push
mov
pushf
sbb
add
les
test
xor
cs
cmp
cmp
mov
mov
fs
call
cmc
mov
mov
sub
gs
xchg
or
fcomp
xor
push
push
inc
pop
in
gs
in
and
jo
(bad)
out
cld
in
jbe
in
xor
js
mov
fidiv
add
aas
not
retf
ins
or
dec
sbb
and
jp
add
pop
pusha
movs
imul
sub
or
call
jns
retf
aam
(bad)
js
pop
cwde
lods
cmps
mov
enter
in
mov
addr16
sub
loop
call
sub
pop
cmp
pop
jmp
cmp
pop
sar
sar
sbb
mov
adc
sbb
mov
ds
mov
jns
dec
out
inc
and
sub
sbb
in
jg
pop
ins
mov
fisubr
and
data16
fwait
pop
push
(bad)
hlt
xor
or
shl
dec
retf
fstp
arpl
push
test
(bad)
int
add
xor
cmp
sti
sti
xchg
adc
scas
ds
ror
movs
lahf
mov
fs
dec
mov
or
or
test
dec
pop
pushf
mov
add
mov
mov
xchg
dec
out
xchg
mov
lods
jbe
idiv
mov
push
cmc
popf
ins
dec
pop
sub
pop
fisub
jno
and
fldenv
into
pop
out
sub
call
sbb
out
repz
test
loop
jno
or
jo
dec
std
ror
pop
imul
ins
pop
mov
xor
nop
jg
adc
inc
jae
repz
jecxz
and
shr
pop
and
adc
or
dec
and
mov
mov
adc
pop
xor
jnp
loope
push
inc
mov
(bad)
ja
int3
jle
push
push
fs
push
adc
jmp
mov
inc
mov
or
js
or
scas
aas
rol
or
ret
sahf
add
mov
mov
inc
xchg
mov
ret
lods
pop
inc
in
pusha
inc
repz
adc
fidiv
sbb
shl
mov
(bad)
lea
call
gs
xor
xor
xor
loop
shl
(bad)
jb
fs
xor
pop
jno
(bad)
sbb
sub
nop
leave
cmps
ds
stc
mov
inc
xor
fcmovne
dec
mov
and
xchg
mov
mov
push
inc
xor
sbb
repz
adc
inc
mov
lods
pop
in
sub
pop
jl
and
and
sbb
cmc
and
or
xor
and
add
or
or
fld
test
add
fs
sub
jae
(bad)
sar
xchg
addr16
push
sub
jmp
das
push
push
push
xchg
and
ins
inc
xchg
outs
xor
ins
mov
(bad)
in
push
sbb
pop
or
dec
popf
mov
cmp
jle
bound
jmp
pop
mov
mov
(bad)
push
mov
leave
pop
test
dec
jmp
stc
ror
dec
push
cmp
scas
pop
imul
loopne
pusha
add
or
int
out
push
dec
push
jbe
and
push
or
add
ror
sbb
cs
push
test
sbb
(bad)
jne
pop
push
scas
cmps
inc
jno
xchg
lods
fdivr
scas
in
das
fmul
jne
mov
inc
sbb
mov
pop
loop
dec
loop
mov
add
pop
fsub
xor
xor
and
(bad)
cld
js
xchg
or
inc
fadd
pop
sub
xor
xchg
xchg
(bad)
ins
sbb
xchg
out
jg
sub
out
mov
adc
imul
cmp
stos
icebp
shl
xor
into
jl
lahf
cmp
nop
jmp
in
or
mov
push
xor
clc
jmp
sub
in
jl
popa
push
div
fiadd
mov
cmps
dec
inc
adc
sti
xlat
xchg
call
dec
sbb
outs
dec
out
jp
jecxz
mov
mov
scas
(bad)
hlt
sbb
or
pop
outs
adc
dec
scas
mov
pop
xchg
dec
adc
dec
popf
add
or
and
dec
in
call
(bad)
fdiv
out
div
jl
fcom
fs
adc
mov
add
shr
repz
dec
xor
mov
mov
aad
movs
lods
dec
adc
dec
popf
mov
mov
lock
add
les
or
mov
(bad)
cmc
jg
rcl
call
add
ja
es
popf
sub
sbb
hlt
jge
mov
iret
sub
jp
(bad)
pop
adc
jg
fsub
nop
test
je
(bad)
paddd
or
mov
test
mov
scas
out
stc
xchg
pop
push
jae
sub
push
push
jg
xchg
call
cmp
ret
stos
mov
mov
xor
test
enter
inc
mov
mov
push
sub
jge
add
ins
inc
out
in
or
mov
cmc
(bad)
and
jmp
repnz
mov
shr
test
scas
cmp
add
out
das
call
inc
and
mov
sahf
dec
xlat
sbb
movs
fsubp
(bad)
stc
repnz
xor
stos
cmp
mov
jne
and
dec
push
mov
ret
push
jb
xor
pop
fisttp
ins
cld
mov
adc
fld
push
cmp
mov
inc
gs
dec
(bad)
enter
aas
outs
sub
jl
adc
cdq
cli
fdiv
adc
cmc
push
sub
sub
(bad)
shl
xchg
call
xor
movs
push
add
adc
rcr
or
sar
pop
adc
out
xchg
sbb
mov
jbe
outs
mov
or
out
mov
fs
aaa
or
hlt
jo
pop
inc
xchg
mov
inc
xchg
lahf
xchg
sbb
rol
mov
pop
loope
and
xor
pop
imul
out
cmp
mov
inc
icebp
in
jmp
in
addr16
fisub
mov
imul
jle
jle
pop
mov
movs
inc
and
(bad)
push
add
cli
push
pop
cmp
test
sbb
xor
dec
ja
push
inc
out
xlat
mov
sbb
sbb
retf
popf
in
(bad)
mov
ret
dec
inc
(bad)
or
jecxz
in
jns
out
mov
push
or
mov
sar
mov
pop
bound
leave
test
sbb
cmps
dec
inc
xor
cmp
popf
jns
bound
cmp
stos
xchg
mov
(bad)
xor
pop
stc
add
or
dec
loopne
jb
pop
pop
scas
mov
rol
icebp
adc
xchg
jmp
and
fldenv
sbb
xor
inc
and
ins
imul
jecxz
es
sahf
mov
or
int
dec
dec
push
sbb
clc
push
out
lods
icebp
pop
pop
shr
push
mov
int3
sbb
cmp
inc
sub
sub
sahf
push
adc
iret
outs
push
not
dec
add
xor
jle
push
cmp
sbb
push
xchg
bound
repnz
push
nop
arpl
push
sbb
jg
stc
retf
(bad)
cmp
ret
sahf
mov
push
adc
jmp
xor
cmp
push
sbb
cmps
fcomp
out
aaa
scas
shl
add
mov
cmc
jl
mov
jb
mov
cli
mov
ror
cmc
hlt
cmp
sub
and
dec
imul
xchg
add
mov
jge
in
dec
test
sub
inc
lea
push
in
inc
mov
rol
dec
pop
(bad)
sbb
and
lods
jl
dec
mov
mov
cmp
fsubr
sub
mov
ds
mov
dec
in
push
test
fs
mov
xor
inc
push
ins
dec
xlat
sbb
mov
add
loop
sub
mov
mov
mov
aad
dec
pusha
adc
add
mov
push
hlt
repz
jg
jmp
xor
and
ins
adc
jo
or
inc
adc
js
xor
jmp
push
add
cmp
jbe
pop
dec
push
stos
daa
mov
jmp
xor
sub
fnsave
cwde
adc
scas
sbb
(bad)
xlat
xchg
ds
mov
idiv
or
or
movs
push
mov
popf
inc
pop
add
addr16
xchg
into
hlt
mov
rcr
jp
cmp
fs
xchg
movs
pop
div
inc
jmp
aad
or
or
(bad)
adc
xchg
mov
repnz
mov
push
(bad)
frstor
inc
loop
jmp
pop
jns
cmp
ror
adc
push
sbb
lea
punpckldq
test
out
int
push
jl
cs
loope
jp
(bad)
cld
lods
adc
push
push
inc
fcmovu
int3
sbb
and
inc
xor
sub
iret
xor
pop
retf
fistp
fisubr
inc
mov
push
in
dec
int3
or
cmp
in
ins
aad
rol
les
sub
xchg
out
sub
sub
rol
and
jmp
lods
fs
pop
push
push
jns
inc
imul
ds
push
xor
ins
sti
out
lods
scas
mov
pop
idiv
lods
pcmpeqb
mov
mov
cmp
in
inc
call
(bad)
pop
cmp
xchg
ins
scas
cld
push
je
fsubr
(bad)
mov
push
jle
out
std
sbb
int
out
pop
test
fst
pop
cli
jnp
lods
push
movs
cmp
xor
push
ret
dec
es
(bad)
fucomip
dec
push
mov
push
fwait
lods
jns
xchg
gs
sub
cmp
out
ret
out
retf
push
popa
add
dec
push
mov
test
sub
les
inc
jbe
add
sub
stos
inc
dec
sbb
aad
xor
push
hlt
(bad)
push
movs
fiadd
push
test
loopne
out
cmps
dec
or
pop
push
mov
fsubr
popf
push
dec
fdiv
mov
mov
bound
sub
movs
inc
cmp
(bad)
cmp
pop
lock
jb
adc
icebp
or
fidiv
cdq
mov
fisttp
cmp
jmp
shl
shl
int3
cmp
mov
std
fldenv
jmp
jno
xchg
fist
cs
and
div
jl
mov
retf
inc
xor
and
or
nop
cmp
repz
push
sahf
ins
gs
push
int
jo
popf
rcl
cmps
sub
bound
aad
enter
inc
cmps
not
ja
in
and
mov
shl
jns
and
sub
int
sub
outs
out
mov
cmp
es
ja
aas
lea
cmp
dec
xchg
jb
call
push
cmp
ret
stos
iret
movs
xchg
jno
xor
(bad)
pop
lods
sub
movs
push
in
cmps
fisubr
call
(bad)
loope
imul
pop
add
sbb
fidivr
mov
mov
call
inc
adc
cmps
hlt
cmp
sub
sti
jecxz
xchg
(bad)
sub
int
inc
push
mov
into
dec
int
sbb
sbb
imul
in
fistp
and
in
mov
out
push
mov
mov
lods
dec
or
cmp
test
jb
clc
in
adc
outs
and
in
pop
mov
lea
adc
pop
jno
push
jl
call
push
mov
cld
cmps
mov
retf
(bad)
daa
inc
sub
mov
ins
xor
loop
mov
out
or
sub
aas
push
jb
lahf
adc
ds
jmp
popf
out
push
stos
daa
xor
cmp
pop
adc
xchg
xchg
dec
in
ret
lea
shl
lock
mov
or
push
mov
inc
clc
jmp
(bad)
xor
hlt
test
cmp
and
cdq
add
js
or
sbb
lods
leave
call
push
mov
mov
push
repnz
xlat
xchg
scas
fs
add
dec
or
mov
pop
(bad)
cld
ror
es
push
loope
(bad)
sbb
mov
in
jns
shr
cmps
and
mov
and
jp
mov
sub
cli
cs
ret
hlt
inc
dec
faddp
dec
inc
jl
call
push
or
xlat
loopne
push
push
mov
aad
mov
mov
aam
inc
out
jmp
movs
push
aaa
xchg
out
iret
pop
sub
outs
mov
inc
(bad)
jne
add
sbb
and
outs
mov
jmp
enter
daa
push
sbb
ja
pop
gs
mov
jmp
icebp
lock
push
je
xchg
sar
js
cmp
sbb
xor
pop
add
push
cs
xor
xchg
enter
(bad)
imul
mov
movs
sub
outs
test
mul
dec
js
push
ss
push
sbb
test
out
jno
or
mov
pandn
loop
xchg
mov
adc
sbb
popf
xchg
sub
aaa
aam
sar
mov
cwde
not
xor
jl
adc
xchg
xchg
ss
jb
jbe
es
adc
and
nop
shr
mov
test
hlt
(bad)
aad
outs
push
sti
std
loopne
jae
fxch
jp
xchg
cmp
mov
outs
cmp
sar
(bad)
repz
cmp
mov
cmc
imul
push
fisubr
pop
fmul
adc
cmps
jmp
popf
mov
xchg
sbb
mov
and
pop
push
popf
(bad)
dec
sar
aas
sbb
inc
out
arpl
add
sahf
jnp
inc
aaa
outs
popa
sub
inc
sahf
not
and
ror
stos
mov
enter
xor
xlat
and
and
or
push
push
mov
pop
in
sahf
popa
cmp
imul
adc
jg
leave
scas
imul
sti
(bad)
inc
out
fcomp
mov
mov
inc
cmp
xchg
xor
sub
out
mov
pushw
jnp
cmovae
jne
frstor
test
loope
xchg
test
push
cmp
pop
adc
cmp
lods
sbb
cmp
or
outs
push
sub
jmp
iret
and
mov
mov
je
cmp
fsub
div
bnd
cmp
mov
jg
or
outs
popa
mov
dec
cdq
push
sub
fsub
jmp
in
sbb
ror
das
xchg
mov
mov
imul
shl
xchg
shr
jmp
inc
pop
pop
imul
sub
jmp
(bad)
scas
jge
shr
lock
lea
cwde
push
xchg
mov
ja
or
inc
in
bound
loope
push
jb
mov
and
cmp
and
jns
ds
outs
mov
xlat
mov
pop
mov
ins
int3
inc
cmp
ins
jb
sbb
and
cdq
leave
faddp
frstor
icebp
mov
xchg
je
mov
push
dec
scas
dec
rcl
ror
in
jge
(bad)
ss
popa
arpl
cli
fdivr
ins
int
add
nop
xor
neg
jmp
cmp
in
pop
stos
ret
cmp
test
fcmovne
push
shl
pop
and
xor
mov
mov
and
fild
mov
scas
jp
enter
xor
xchg
hlt
ins
fwait
sahf
inc
dec
popa
retw
je
arpl
cwde
push
outs
stos
dec
jbe
ja
inc
mov
and
xlat
(bad)
mov
and
jg
or
ror
mov
inc
sbb
pushf
pop
scas
sahf
xchg
mov
(bad)
cmps
shr
scas
add
mov
inc
aas
mov
jp
xlat
mov
push
int3
jmp
sbb
push
push
mov
in
(bad)
mov
(bad)
test
mov
xlat
(bad)
cmc
jl
add
(bad)
cmp
sbb
fild
dec
pop
js
sbb
fistp
push
xor
sub
xchg
push
ins
ja
rcr
test
mov
xor
jbe
outs
mov
add
ds
jae
les
mov
jmp
int
mov
leave
add
fsub
mov
sbb
sub
xchg
aad
shr
rcl
sub
lds
push
(bad)
scas
xor
test
ficom
pop
ins
xor
dec
sub
ss
in
loop
into
stos
sahf
mov
push
push
push
pop
ins
mov
ret
inc
lahf
jg
ins
dec
shl
jno
out
and
ror
push
or
pop
(bad)
out
add
mov
xchg
out
cld
push
mov
std
sbb
rcr
mov
sub
lods
inc
mov
into
mov
outs
sar
fnstenv
bound
pop
mov
daa
mov
fcmovnb
dec
sahf
addr16
js
dec
cwde
mov
mov
cmp
pop
rcl
push
fstp
jno
(bad)
imul
pop
push
sbb
mov
sub
addr16
stos
leave
ds
sbb
stc
and
dec
leave
ja
sub
pop
lock
movs
ja
sub
mov
mov
jge
xor
xor
inc
cld
pop
jl
sbb
mov
mov
cmp
pop
or
xchg
adc
and
cmc
adc
mov
dec
push
cmc
push
lea
xchg
push
push
fcomp
cmps
xor
xchg
and
(bad)
out
lods
rcl
jmp
lods
repnz
jl
mov
jge
push
push
xchg
dec
pop
sub
lods
sahf
ficomp
adc
mov
sbb
ins
stos
lea
clc
(bad)
sub
or
add
test
and
fcomp
lock
lds
dec
push
scas
dec
test
mov
mov
int
in
(bad)
repnz
fidivr
pop
loopne
ins
(bad)
cli
repnz
aam
popa
test
inc
cdq
mov
add
dec
pop
mov
data16
push
jmp
mov
fmul
mov
jno
push
xor
push
adc
inc
mov
and
popf
bound
push
cmps
fwait
mov
xchg
shl
add
or
addr16
push
push
ror
pop
xlat
sbb
call
inc
push
push
xchg
iret
pop
fmul
(bad)
pop
test
ss
jl
mov
aas
imul
fcomp
int3
and
xchg
fwait
lods
jp
mov
aam
das
movs
cdq
xchg
std
sbb
and
sbb
add
mov
hlt
in
and
aaa
jo
adc
push
and
add
iret
fs
mov
scas
push
mov
mov
es
xchg
and
addr16
and
js
fcmovne
jns
inc
jnp
dec
push
push
movs
sub
mov
xchg
fs
fadd
jo
aam
xor
in
pop
xor
xor
scas
pop
pop
lods
xlat
push
test
in
adc
outs
fs
inc
ss
loope
imul
fcmovnbe
pop
dec
push
movs
mov
and
dec
xor
adc
fidiv
push
sbb
retf
popa
(bad)
movs
cmp
enter
lods
cmp
and
ret
mov
pop
mov
pushf
jo
fnsave
lds
dec
dec
lods
fsubr
out
enter
dec
or
xor
jmp
into
or
jne
jb
cmp
sbb
jae
add
aad
adc
or
repnz
lods
out
inc
xlat
jae
test
jno
loopne
ss
push
pusha
jbe
inc
or
dec
ja
cmp
addr16
(bad)
fdiv
out
sub
cld
or
aad
repnz
and
out
test
not
aas
std
adc
pop
xor
rcr
shl
xchg
imul
dec
and
sub
mov
xchg
dec
push
cs
lahf
sbb
ss
adc
cmc
and
stos
das
js
and
ins
hlt
sbb
xchg
and
jno
loop
lea
rcl
(bad)
clc
out
mov
dec
adc
cdq
add
mov
pop
cmp
stos
push
push
jge
mov
jbe
and
jmp
nop
arpl
cld
(bad)
jnp
jmp
mov
sbb
std
jne
mov
inc
push
xor
pop
dec
dec
jp
jl
ret
push
call
sbb
shl
or
mov
dec
adc
(bad)
loope
push
and
cmp
(bad)
test
sub
adc
jmp
ret
push
movs
outs
or
add
bound
cmc
jno
fistp
cmp
mov
push
aad
aas
xchg
pop
rol
xchg
xchg
popf
lock
sub
cmp
fwait
repnz
test
and
inc
scas
mov
pushw
xlat
and
retf
xor
stos
popa
push
sti
xchg
pop
fsub
fucomi
and
out
dec
(bad)
fs
and
scas
sbb
inc
push
lds
or
(bad)
lods
cmp
shl
mov
sub
aad
ret
xchg
adc
push
pop
test
mov
sti
test
inc
mov
inc
jo
push
adc
sar
xchg
cmp
pop
pusha
lea
add
xchg
and
jg
add
les
mov
repnz
adc
xor
push
xchg
mov
mov
xchg
xchg
mov
cmp
cmps
pusha
or
sub
(bad)
push
movs
xor
in
rol
push
repnz
mov
mov
ss
(bad)
inc
mov
loop
fst
xchg
pop
in
das
jp
mov
jge
mov
lock
jno
push
sub
enter
push
jge
add
adc
push
add
leave
(bad)
mov
jb
sbb
mov
push
jl
xchg
jae
xchg
or
out
pop
jno
jge
and
cmp
jno
sti
imul
loopne
jmp
push
loope
jne
dec
mov
jo
adc
mov
xor
push
or
in
out
out
or
clc
pop
pop
nop
ds
cmp
cmp
fcmove
not
mov
addr16
jecxz
test
mov
cmp
or
jmp
inc
xchg
int
jns
pop
xchg
xlat
fcom
data16
xor
fsub
mov
jmp
mov
sub
mov
sti
scas
pop
pop
fadd
or
xor
loope
aad
ret
or
xor
dec
mov
movs
add
sub
retf
sub
nop
in
mov
sbb
test
xchg
mov
jo
test
in
jl
test
out
(bad)
jp
or
ins
loopne
or
repz
loope
adc
xor
into
lea
outs
mov
pop
mov
cmp
int
sahf
mov
inc
mov
jb
lock
enter
push
in
shl
sbb
jno
inc
imul
int3
shl
xlat
cmp
cld
test
popf
cli
sub
sbb
ret
nop
ficom
jbe
and
aaa
jle
or
scas
jns
jg
ret
test
gs
pop
and
xchg
stc
fnsave
loopne
cmc
mov
inc
jp
mov
neg
xchg
jl
out
jne
out
xchg
mov
ja
lock
sbb
retf
jge
mov
psrlq
sub
jg
shl
div
xor
jno
rcl
xor
dec
xor
in
repnz
loopne
jmp
das
idiv
out
jbe
test
sahf
mov
mov
pop
(bad)
push
push
push
mov
aaa
cmp
lods
je
xchg
fadd
mov
cwde
xor
push
mov
(bad)
bound
ds
jo
mov
enter
ss
ds
test
xchg
push
sbb
mov
movs
sbb
repz
lahf
jl
scas
sbb
(bad)
lahf
add
repz
adc
stc
inc
les
std
mov
movs
lea
jg
push
mov
jae
iret
jno
xchg
imul
stos
ret
cmp
push
adc
adc
jmp
mov
pop
sbb
add
add
sbb
cmp
das
cmp
retf
xor
mov
and
cmp
xchg
sahf
aam
xchg
lods
mov
sbb
push
or
mov
push
mov
pop
and
mov
in
retf
pop
push
or
pop
(bad)
mov
std
cmp
xor
adc
jg
enter
fsub
fdiv
outs
clc
push
mov
rcl
or
or
mov
or
xchg
cmp
push
inc
ficomp
lods
(bad)
jle
adc
cs
in
es
das
inc
xchg
jg
call
fld
ret
leave
(bad)
daa
sahf
loope
xor
rcr
jno
shl
ins
aam
cmp
mov
out
cld
mov
jecxz
and
mov
sbb
aad
jo
out
jno
(bad)
(bad)
jbe
jge
inc
pop
push
push
popa
push
movs
cmp
adc
fcomp
push
les
ret
out
pop
rol
cmp
cmp
cmp
idiv
loop
adc
sub
scas
xchg
imul
adc
jno
call
mov
out
sar
aam
aas
and
add
jb
fst
push
rcl
aas
(bad)
fdiv
das
lds
pop
xchg
loope
mov
or
push
push
jnp
adc
repnz
cmp
jmp
das
lea
push
mov
mov
jno
lock
scas
sbb
pop
inc
or
(bad)
push
data16
pop
xchg
xor
cmp
loop
sar
mov
mov
lods
fdiv
xlat
out
add
adc
push
inc
jg
fs
sub
cmp
pop
jne
les
cmp
sub
daa
ja
retf
push
xor
repnz
add
push
call
lahf
mov
idiv
in
out
add
fsubr
dec
cs
xor
adc
lock
mov
popf
enter
dec
cwde
dec
test
lds
ins
mov
xchg
loop
out
sbb
loop
fnstenv
stos
sti
icebp
sub
add
into
mov
ror
xchg
cmps
call
aam
cmp
mov
rol
jae
sbb
fadd
jecxz
cmc
cmp
(bad)
add
push
and
xor
imul
mov
in
jbe
xlat
fiadd
outs
movs
lods
call
push
mov
popa
fidivr
lods
outs
ja
xor
push
sub
pop
movs
dec
mov
popf
out
aaa
jae
jae
xchg
inc
test
sub
sub
clc
sbb
and
sub
mov
fnstsw
sbb
inc
cmps
dec
xor
pushf
cmp
and
dec
mov
adc
jns
cdq
inc
cmc
xor
inc
jno
or
mov
and
push
dec
adc
outs
pop
pop
add
jmp
sahf
jo
adc
imul
mov
test
mov
sub
nop
repz
xor
sbb
xchg
sbb
ror
jno
fstp
xchg
sub
int
fwait
in
cwde
pop
dec
mov
xor
push
shr
mov
mov
daa
pop
aam
jmp
mov
hlt
cmp
jb
loop
mov
scas
xor
ins
sbb
push
dec
call
rcr
cmp
movs
sbb
ret
lea
xchg
(bad)
mov
cwde
mov
in
cmp
popa
ins
ret
xor
jae
aaa
pop
xor
fmul
mov
nop
ret
add
and
push
jb
mov
cmps
pop
push
push
fstp
fidivr
js
cwde
in
int3
aas
cli
jp
data16
cmp
mov
jno
fstp
hlt
imul
in
push
jo
mov
mov
mov
ret
loopne
xchg
and
repz
jecxz
dec
adc
(bad)
cdq
je
clc
xor
jg
fisttp
in
test
push
sub
lea
leave
lds
test
xor
push
arpl
(bad)
cmp
and
mov
test
scas
test
adc
retf
test
jne
jg
test
test
nop
clc
or
mov
addr16
(bad)
idiv
adc
xor
call
mov
dec
pop
into
push
cmp
fisubr
sbb
sbb
cdq
call
cmp
or
mov
fdivr
and
sub
aas
neg
or
and
scas
xchg
xor
fdivr
(bad)
fs
test
outs
xchg
pop
fiadd
into
or
mov
xor
addr16
fstp
mov
mov
jmp
loop
lahf
mov
sub
repz
ins
sub
and
imul
clc
sbb
sub
shl
jl
movs
add
xor
cli
mov
cmps
lds
xchg
xor
addr16
test
inc
push
sub
int3
ins
dec
push
shr
loopne
or
test
mov
inc
pop
jmp
les
jmp
in
push
or
shr
mov
stos
shr
mov
jg
mov
xchg
lods
nop
mov
mov
out
pop
outs
loopne
fld
ins
mov
push
sar
and
cmp
cmp
add
mov
xchg
ror
mov
jp
fwait
pop
dec
cdq
mov
pop
aad
inc
cmps
mov
rcr
push
(bad)
int3
adc
inc
jge
jmp
xor
mov
stos
push
jne
xchg
push
jg
hlt
iret
or
sbb
fdiv
rcr
adc
imul
call
xchg
imul
mov
cdq
inc
push
and
and
or
jp
scas
imul
sub
shl
sub
add
aam
shl
push
sahf
mov
sbb
mov
cld
jp
fst
stos
push
in
xchg
push
adc
jbe
mov
jge
data16
sbb
xchg
inc
test
test
cmps
outs
(bad)
rcl
cmps
ss
lahf
xor
xchg
fist
aas
loopne
mov
mov
dec
(bad)
fmul
jns
imul
mov
rcl
js
jns
nop
add
push
xlat
frstor
pop
mov
cs
out
inc
sbb
sahf
jmp
ja
or
cmc
push
add
inc
xchg
scas
add
cdq
mov
sbb
adc
push
and
cmp
aam
jg
mov
inc
inc
mov
jg
cmps
add
mov
mov
rcl
xor
sub
imul
mov
dec
ds
loopne
mov
and
inc
test
and
nop
pop
data16
xor
xchg
je
scas
dec
mov
xchg
addr16
pop
and
adc
xor
sar
and
cld
outs
cmp
jmp
or
aas
push
hlt
je
jle
push
add
xor
aad
hlt
add
sbb
jg
xchg
cmc
xrelease
rcr
in
xor
movs
pushf
js
xor
pop
mov
inc
dec
out
in
or
jecxz
pop
es
bnd
mov
sub
test
pop
fcomp
aaa
push
rol
sub
stos
add
leave
test
jecxz
mov
nop
add
lods
fwait
pop
add
add
add
cmp
sbb
enter
aas
sahf
test
jb
inc
adc
mov
push
mov
pop
addr16
sahf
or
jp
jg
mov
(bad)
addr16
sahf
push
pop
enter
pop
cmp
je
pop
shl
push
js
popf
xchg
sbb
and
jmp
imul
mul
lds
sub
gs
test
les
test
ficomp
push
leave
mov
pop
jmp
sar
adc
mov
mov
dec
xor
ret
mov
push
leave
fwait
add
jns
cwde
popa
aad
jne
std
inc
cld
inc
or
scas
mov
xchg
adc
leave
mov
dec
fidivr
sbb
int3
jae
sti
fs
scas
push
retf
loopne
and
jbe
pop
out
mov
fidivr
(bad)
jge
movs
mov
call
sbb
xchg
xor
das
int3
push
mov
sub
mov
scas
loop
rol
inc
sbb
shld
mov
gs
sti
ins
or
lods
in
imul
mov
push
int3
popa
jp
push
pop
(bad)
xor
add
ror
mov
arpl
cmp
(bad)
pop
gs
out
pop
in
xor
dec
cli
xchg
scas
stc
mov
in
into
mov
dec
ret
push
lds
popf
cwde
in
out
adc
movs
jnp
xchg
sub
(bad)
jno
jmp
mov
in
(bad)
jg
out
out
mov
(bad)
xor
dec
sbb
movs
push
jg
xor
and
std
mov
jbe
fld
ret
les
jmp
mov
jl
(bad)
out
in
fidivr
clc
jge
lds
push
mov
push
ds
clc
jg
jmp
int
rcl
stc
bound
mov
ret
xchg
mov
inc
mov
aam
call
jo
push
jecxz
scas
sub
xchg
in
inc
ss
out
daa
jmp
loope
into
mov
dec
jp
dec
(bad)
int3
out
pop
and
cli
push
jb
cwde
mov
inc
jecxz
xchg
rcr
cld
push
rcl
cmp
mov
adc
aaa
icebp
movs
push
cmps
shr
fnstenv
sbb
shrd
dec
aad
adc
push
jg
daa
sbb
and
or
xchg
sub
mov
shl
cmc
inc
loopne
cld
jmp
adc
or
sahf
jno
push
ud1
nop
and
fcmove
arpl
or
xchg
retf
lods
mov
arpl
jmp
ins
dec
mov
daa
mov
jge
aad
cmp
xchg
lock
aas
mov
inc
jecxz
ret
mov
dec
mov
mov
push
movs
aam
cmp
inc
adc
xchg
(bad)
in
xchg
fwait
clts
sbb
call
js
pop
daa
xor
es
imul
enter
repz
daa
inc
and
pushf
imul
pop
sub
int
and
xchg
pushf
out
pop
jg
(bad)
xlat
arpl
adc
jne
sbb
mov
in
test
fsub
lea
xlat
xor
add
inc
aaa
cmp
mov
int3
push
mov
test
push
retf
sahf
add
xchg
retf
fcmovnbe
leave
loope
inc
xchg
cdq
leave
std
lods
stos
jmp
sbb
test
mov
mov
cs
mov
pop
inc
mov
stos
fisub
jmp
xor
pop
ins
shl
or
and
cmp
gs
outs
shl
ret
add
push
mov
adc
dec
test
dec
shl
add
cmp
push
and
xor
ds
in
jbe
fadd
stc
popf
in
push
out
inc
add
add
ficomp
mov
shl
mov
mov
imul
pop
shl
mov
cwde
sbb
mov
jle
lock
mov
or
push
fimul
mov
push
inc
mov
sbb
std
mov
sub
mov
mov
repnz
jle
xchg
hlt
hlt
lods
std
daa
push
aad
into
(bad)
cmp
ror
push
mov
outs
adc
sbb
inc
cmc
jecxz
mov
test
addr16
mov
out
cld
loopne
dec
ret
stc
loope
and
les
xchg
add
sbb
dec
dec
mov
push
cdq
neg
in
sbb
dec
and
mov
xchg
inc
jle
call
sbb
jg
ins
jae
add
and
(bad)
mov
ins
test
or
push
dec
xchg
xchg
aaa
jmp
shr
dec
lds
mov
in
jnp
pop
mov
cs
dec
add
jne
xchg
dec
xor
loop
mov
dec
je
stos
push
push
retf
ret
inc
std
aas
lock
add
outs
jno
pop
es
sub
icebp
xchg
daa
clc
mov
cmp
sub
mov
push
(bad)
outs
pop
ds
lahf
push
sbb
fimul
cmp
ret
pop
pusha
test
pop
jge
rcl
je
pop
mov
jnp
cld
dec
xchg
into
mov
aas
es
cld
push
inc
stos
or
jns
dec
jns
dec
(bad)
cdq
push
popa
loop
adc
les
xor
mov
adc
xchg
xlat
mov
das
out
add
adc
jno
or
das
mov
rcl
imul
cmp
pop
xor
pop
jl
xchg
dec
(bad)
scas
jge
pop
movs
or
sub
jg
cmc
add
in
stos
cli
enter
aad
mov
pop
pop
out
adc
add
and
sbb
dec
(bad)
test
xor
sar
adc
test
inc
jbe
dec
cs
adc
xor
(bad)
jmp
rcr
nop
data16
sub
pop
retf
jecxz
sahf
mov
jmp
rcl
mov
sub
aas
pushf
stos
jp
jge
add
mov
aas
test
fisubr
shl
push
jl
shr
jmp
xchg
ins
out
rcr
in
xor
mov
addr16
call
test
cmp
(bad)
jmp
bound
lods
jbe
jae
or
shl
(bad)
repz
pop
aaa
xor
xchg
mov
mov
inc
add
dec
adc
mov
loopne
in
ds
shl
xor
in
push
sub
xlat
jle
and
adc
or
dec
and
mov
les
mov
addr16
xchg
retf
lock
xchg
inc
and
adc
jae
call
push
fidivr
(bad)
je
cli
cmc
lods
ss
push
call
rol
mov
test
dec
jge
not
push
dec
out
mov
adc
jne
stos
push
inc
xchg
sub
push
inc
or
mov
fild
mov
mov
cld
loope
inc
jp
cmp
or
jl
ss
popa
loopne
and
add
pop
sub
cdq
lea
cmp
mov
cmp
aad
loope
xor
dec
mov
enter
mov
rcl
pop
jo
inc
pop
(bad)
cwde
xor
popa
test
add
nop
xlat
fcom
aaa
mov
cmc
fwait
mov
or
div
pop
(bad)
pop
cmp
jge
mul
jmp
fld
out
push
mov
pop
jmp
movs
pop
ja
repnz
xchg
xchg
enter
mov
and
and
hlt
mov
inc
dec
arpl
jmp
dec
and
(bad)
mov
test
sbb
sbb
cmp
cdq
cdq
icebp
lea
into
and
dec
xor
fnstenv
mov
sbb
lds
test
inc
cmp
movs
pop
add
and
loope
addr16
(bad)
call
imul
imul
int3
sahf
cmp
jnp
xchg
sbb
adc
lods
xor
mov
cmp
mov
aas
mov
mov
bound
mov
inc
cmp
adc
ins
les
mov
inc
pop
or
jge
mov
dec
aaa
and
sbb
nop
push
inc
scas
movs
fcom
js
ret
mov
fdivr
sub
sbb
push
cdq
aaa
cmp
push
stos
pop
je
ja
pop
mov
push
cmp
push
xchg
rol
adc
dec
mov
pop
sbb
lahf
cmp
push
xor
vpsrld
cli
adc
retf
mov
in
retf
pop
movs
in
and
cwde
and
mov
mov
(bad)
push
push
mov
pop
jge
push
std
push
addr16
mul
call
xor
xchg
iret
test
fsubr
cli
jecxz
pushf
loop
cmp
jbe
adc
dec
xchg
ror
xchg
je
inc
dec
xor
pop
push
cmp
fstp
jecxz
nop
add
mov
test
cmp
xchg
and
mul
in
retf
xor
jmp
test
out
nop
or
cmp
mov
mov
lahf
loope
xchg
push
fiadd
pop
aam
lea
fidiv
add
(bad)
icebp
outs
and
pop
test
(bad)
ss
cli
cmp
dec
mov
push
scas
int3
pop
retf
or
mov
ret
sbb
jecxz
xchg
sar
adc
rol
sbb
xchg
mov
es
imul
loop
ja
jne
int
fisub
cdq
sub
cmps
cdq
enter
mov
mov
push
cmp
aad
das
fdivr
or
stos
popa
mov
ror
outs
inc
in
xchg
stos
pop
ins
sub
add
popw
int
out
les
mov
sub
sub
rcr
sti
dec
sub
jg
cmp
and
jo
out
push
scas
pop
sub
call
aam
mov
inc
aam
sbb
or
inc
adc
add
jmp
jae
jbe
retf
or
jecxz
rol
mov
push
cld
test
or
adc
test
fisubr
sti
adc
jns
xchg
push
addr16
cmps
loope
arpl
jmp
mov
(bad)
shl
dec
push
xor
scas
push
pcmpeqw
shl
pop
loope
sbb
xchg
movs
or
mov
fsub
retf
lock
inc
in
outs
ins
enter
dec
stos
imul
lods
je
pushf
pop
jb
in
mov
(bad)
dec
stos
mov
comiss
stos
fs
fwait
pop
mov
add
dec
sub
adc
push
fild
pushf
bswap
sbb
inc
adc
mov
dec
mov
inc
push
xchg
adc
add
iret
loop
scas
dec
xchg
test
iret
mov
jo
repnz
in
stos
jmp
push
cwde
push
shr
mov
inc
stos
mov
fdiv
repz
xlat
pop
push
lods
dec
inc
xlat
inc
cmp
stos
std
inc
sti
push
push
xchg
add
add
mov
or
outs
xchg
and
ret
and
(bad)
jle
jbe
sahf
dec
addr16
push
xchg
sub
push
adc
sbb
bound
js
iret
mov
xchg
and
inc
cli
sbb
dec
adc
rol
clc
not
psubusw
ins
jg
lods
cmc
aam
pop
repnz
or
mov
cmps
sar
cmps
jecxz
rol
mov
int3
sbb
jne
xor
adc
bound
pop
add
das
shl
push
aaa
pop
test
xor
jbe
mov
cmps
in
daa
mov
fs
xchg
mov
ret
xchg
test
ins
push
and
lock
fild
or
pusha
test
lods
in
push
outs
mov
stos
stos
gs
and
mov
or
cmp
outs
xor
int3
arpl
in
mov
xor
and
push
into
lock
loop
adc
cwde
ins
push
popa
mov
arpl
stos
sbb
and
hlt
fist
adc
adc
sbb
stc
data16
or
mov
cmp
fild
call
inc
lds
(bad)
push
or
jp
or
xchg
xchg
mov
retf
fbstp
data16
xor
pusha
jp
ss
sub
mov
int3
fs
cli
(bad)
adc
cmps
and
int3
lds
(bad)
(bad)
lds
push
jmp
in
je
cmp
lea
call
sti
mov
(bad)
call
inc
div
xchg
movs
xor
in
pop
cs
xor
popa
repz
jp
mov
movs
rcr
xor
gs
mov
pusha
ret
push
xchg
sub
adc
js
cwde
jns
mov
push
movs
test
popf
into
push
mov
rcr
push
jnp
je
leave
test
pop
dec
rep
imul
inc
pushf
stos
cmps
movs
std
mov
shl
jno
and
or
mov
dec
test
pop
(bad)
mov
inc
daa
shl
adc
loop
or
xchg
jno
adc
jno
sub
les
and
ret
mov
xor
or
fwait
sbb
pop
sub
aaa
test
mov
int
mov
sbb
push
jmp
lahf
retf
jns
pop
xor
ss
les
push
inc
(bad)
add
ja
adc
mov
int
add
lods
repnz
mov
dec
jmp
mov
cmp
call
jle
dec
loop
jmp
stos
dec
xchg
mov
add
push
jg
in
and
fidiv
dec
adc
fdivr
pusha
cmps
fcom
addr16
loopne
imul
ins
jo
sub
push
ror
fs
mov
pushf
call
fdiv
repz
mov
xchg
mov
lea
inc
jge
and
outs
test
jp
out
jg
jle
aaa
(bad)
jle
cmp
cmp
jbe
push
push
push
push
inc
mov
lock
sub
xchg
add
leave
adc
jecxz
and
outs
mov
(bad)
imul
fst
(bad)
xchg
ja
scas
jle
popf
fcom
scas
xchg
(bad)
jno
mov
pop
sbb
add
(bad)
outs
ror
enter
mov
sbb
test
dec
data16
mov
bound
push
pop
(bad)
mov
hlt
pop
add
push
push
aad
icebp
push
xor
push
ret
adc
pop
mov
or
call
(bad)
jmp
loopne
pop
cmc
out
ret
jl
cmps
rcl
(bad)
ss
in
mov
mov
xor
sbb
call
mov
out
add
aas
inc
out
push
dec
push
out
mov
popf
inc
add
and
jns
cwde
dec
and
mov
rcl
movs
movs
shl
adc
fstp
test
daa
and
in
nop
mov
cmp
dec
dec
stos
add
xor
pop
rol
stc
test
mov
push
mov
scas
test
jne
jb
jnp
jecxz
lds
xchg
pusha
mov
inc
cmp
loope
aam
mov
pop
adc
xchg
mov
cmp
jl
sub
test
or
pop
jno
fcomp
sbb
fcmovne
repnz
fisttp
inc
jecxz
pop
loopne
jmp
xchg
ret
in
add
mov
pop
(bad)
hlt
push
and
out
(bad)
int
mov
xchg
pop
sub
in
xor
ret
inc
adc
mov
mov
pop
jl
add
lahf
xchg
cs
add
or
sti
dec
cmps
loope
test
push
jg
repnz
mov
xor
jbe
mov
lods
outs
or
sbb
movs
lahf
(bad)
xchg
ins
je
mov
sbb
inc
adc
lock
push
in
xor
not
outs
and
adc
fst
fwait
leave
rcl
neg
(bad)
rcr
mov
stos
mov
sbb
push
loopne
arpl
(bad)
jecxz
rol
fwait
cld
cmc
cmp
mov
sar
inc
adc
icebp
fs
mov
mov
add
push
sub
fisttp
mov
stc
push
push
sbb
or
aad
clc
call
sub
sub
cwde
add
cmp
data16
pop
test
fwait
jo
pop
and
sti
pusha
and
pushf
mov
add
sub
mov
xor
lock
hlt
dec
(bad)
pop
and
mov
jle
(bad)
leave
sub
xor
and
or
jge
mov
les
cli
(bad)
ret
xor
fucomi
ss
mov
xchg
xchg
cli
sahf
mov
jne
mov
outs
aad
or
into
sbb
ins
and
jb
jo
mov
nop
xor
mov
xchg
or
xchg
inc
or
and
fmul
xchg
sbb
push
cmp
out
imul
aas
inc
mov
xlat
inc
mov
inc
push
xor
mov
pop
sbb
jno
dec
and
mov
pop
sbb
cmp
(bad)
dec
push
mov
and
fdivrp
cs
pop
inc
cmp
jg
sub
lahf
(bad)
and
add
push
sub
rol
(bad)
jle
jno
push
xchg
sahf
nop
sbb
ror
or
adc
mov
aas
xchg
fcmovnb
xchg
loopne
leave
iret
push
popa
call
mul
push
xchg
out
out
sub
add
iret
out
and
arpl
popa
ja
mov
dec
and
imul
jmp
push
outs
mov
mov
sbb
jbe
in
sar
sti
inc
int3
rol
fsub
je
(bad)
ds
sahf
loope
adc
loope
pop
ss
lahf
test
fnstenv
sub
mov
sbb
jno
or
cmps
arpl
ds
inc
mov
imul
lock
dec
xchg
xchg
enter
cmp
add
in
and
sbb
sub
retf
push
xchg
call
xchg
mov
(bad)
test
inc
daa
mov
sub
dec
popf
cmp
ficom
add
(bad)
push
je
xor
dec
dec
fldenv
add
cwde
(bad)
xchg
cwde
add
xchg
test
addr16
push
jp
cdq
fstp
xor
mov
jmp
call
out
(bad)
loopne
fs
mov
mov
repnz
cmc
je
mov
and
push
hlt
mov
inc
jl
retf
pusha
test
lods
jmp
pusha
or
iret
in
mov
pop
cmp
cmps
mov
cmp
js
mov
aad
inc
pop
icebp
fild
and
aaa
pop
add
jg
scas
cmps
add
xchg
push
inc
pop
sahf
(bad)
int3
pop
cmp
sub
fbld
loopne
push
cld
cmp
xchg
add
sahf
loopne
push
ss
aaa
in
js
inc
xlat
fidiv
mov
add
push
ror
repz
push
test
pop
iret
jmp
jae
mov
in
or
sbb
mov
stos
enter
add
gs
cmc
ins
jle
call
mov
push
ja
mov
push
movs
test
xchg
hlt
and
inc
leave
xor
test
outs
cmc
imul
push
mov
dec
test
les
nop
sbb
jno
push
jne
mov
pop
cmp
pop
inc
or
jl
lahf
dec
mov
mov
mov
fidiv
jmp
cmp
addr16
pop
jmp
std
test
je
es
adc
lea
inc
jbe
push
sti
xor
movs
jmp
add
xchg
mov
pop
push
dec
in
jmp
dec
push
fnstenv
nop
stos
sbb
jns
idiv
pushf
and
daa
adc
out
add
(bad)
xchg
shl
push
enter
lods
mov
cmps
xchg
mov
in
jno
ins
jl
inc
pop
add
loop
clc
inc
prefetch
cs
adc
sbb
and
es
xchg
jnp
xchg
mov
jge
retf
pop
mov
inc
inc
dec
test
add
je
leave
add
xlat
stc
jmp
and
push
and
sub
aaa
retf
in
aaa
mov
dec
pop
dec
xor
jmp
mov
and
cmps
lock
push
mov
xchg
mov
jnp
add
pop
dec
std
aaa
fild
push
jecxz
xor
arpl
popf
in
fs
sbb
sbb
sbb
test
shr
lods
and
sbb
pop
sub
aam
or
xchg
mov
in
and
sub
scas
imul
dec
inc
dec
shl
(bad)
and
clc
addr16
pop
repnz
xlat
aad
dec
mov
push
loopne
mov
mov
push
inc
push
mov
and
mov
arpl
fcomp
pop
and
and
ja
neg
ins
hlt
sub
inc
loope
scas
xchg
sbb
lods
mov
aad
mov
loope
repnz
add
inc
or
add
mov
stc
int
clc
adc
sbb
xor
and
jns
cmps
xchg
pusha
scas
push
popf
cmp
loopne
repz
push
mov
jl
call
popa
push
xchg
je
sahf
enter
outs
mov
pop
sbb
fst
jno
jmp
jp
sub
xchg
push
push
jp
or
int
arpl
mov
inc
xchg
sub
nop
adc
call
pop
jno
in
xchg
mov
xor
adc
mov
mov
fdiv
outs
xchg
mov
cmp
add
cmc
mov
xor
(bad)
mov
mov
sahf
jle
fwait
and
mov
rcr
enter
jmp
retf
stc
mov
adc
test
jnp
push
jo
mov
mov
add
sub
inc
lock
ret
in
cmp
jb
cmp
cmp
imul
in
push
clc
mov
jo
imul
popa
aaa
out
dec
xlat
sub
sub
add
aaa
jg
cmc
fcmovnu
cmp
(bad)
fs
pop
or
or
scas
dec
test
ins
add
cmp
into
call
loope
sbb
es
xor
add
(bad)
mov
inc
xchg
xor
mov
sub
repz
movs
dec
mov
stos
mov
cmp
mov
mov
xor
pop
add
sub
pusha
mov
lods
and
add
mov
inc
sub
ja
xchg
pop
mov
sbb
fs
jo
or
jp
movs
inc
fisubr
push
mov
inc
outs
mov
ss
mov
or
lds
iret
(bad)
mov
mov
jmp
test
out
pushf
mov
jo
push
nop
lahf
test
dec
mov
mov
adc
loopne
es
and
les
push
mov
test
pop
push
(bad)
cwde
mov
push
mov
push
das
adc
pop
test
mov
mov
repnz
push
dec
scas
adc
cdq
dec
cmps
add
mov
sbb
mov
outs
jbe
sti
mov
add
int
cmp
dec
and
pcmpeqw
mov
icebp
fcom
push
test
clc
jbe
xor
sbb
mov
cmp
add
(bad)
jle
jno
idiv
pop
add
jg
dec
add
pop
dec
dec
(bad)
adc
xchg
or
pop
xchg
shl
bound
and
(bad)
xor
in
cmps
into
mov
or
lea
pushf
push
and
movs
push
inc
enter
ficom
cld
test
vmread
xchg
mov
addr16
popf
sub
int
stc
mov
mov
fs
int3
xchg
mov
loopne
add
lahf
pop
iret
pop
cmp
aas
push
push
out
aaa
mov
fwait
mov
shl
mov
ds
mov
popf
cdq
ror
icebp
into
mov
push
les
adc
test
add
aaa
mov
scas
mov
sub
jle
lock
iret
mov
stos
mov
xchg
inc
cmp
cmp
nop
xchg
push
adc
and
adc
push
dec
ja
adc
mov
in
mov
push
and
fdivr
mov
xor
and
xchg
js
jl
je
ja
(bad)
aas
inc
xor
jmp
mov
ss
inc
(bad)
pop
xchg
mov
loop
push
pop
retf
push
xchg
push
xor
cmc
mov
mov
cmps
push
loope
mov
xor
cmp
(bad)
clc
inc
mov
retf
aam
lods
daa
loopne
shl
xchg
movs
imul
lock
xor
adc
(bad)
cld
test
dec
retf
adc
inc
sub
cmp
lds
xchg
iret
jp
sub
clc
in
ja
sbb
pop
lds
dec
mov
test
push
fcmovu
data16
sub
inc
push
fcom
std
in
(bad)
repnz
or
in
icebp
pop
jecxz
cs
inc
pop
or
add
gs
cmp
aam
jo
sbb
aaa
fldl2e
into
and
rcl
lods
data16
jge
pop
inc
enter
ret
mov
out
and
popa
add
dec
pop
rol
push
inc
mov
(bad)
xor
lock
mov
aam
aaa
lods
sub
dec
fiadd
imul
data16
lahf
inc
xor
and
jne
add
pop
outs
inc
arpl
ss
and
cdq
mov
xchg
xchg
push
inc
clc
add
or
outs
push
dec
cmp
aam
mov
add
and
js
push
or
add
mov
mov
and
int3
sar
(bad)
outs
push
psubusb
mov
push
dec
pop
mov
sbb
lock
push
outs
pusha
cdq
inc
test
gs
push
cmp
cmp
cdq
in
mov
push
sub
jae
test
or
das
out
xchg
leave
hlt
mov
inc
inc
mov
in
scas
retw
dec
aaa
push
ins
cmp
pop
ja
leave
loope
aad
push
imul
mov
pop
adc
cmp
f2xm1
popf
pop
call
dec
mov
js
push
adc
pop
pop
add
xchg
arpl
sbb
jecxz
push
sbb
xor
cmp
pusha
mov
sbb
pop
es
inc
mov
cdq
xchg
lock
fwait
out
psubd
adc
scas
mov
outs
or
je
cmp
mov
outs
inc
lahf
(bad)
pop
repz
lds
add
push
mov
idiv
stc
inc
push
xlat
mov
sbb
xchg
dec
push
ficomp
sub
sub
setne
out
mov
push
sbb
ss
add
int
test
imul
adc
sub
cli
shl
test
lods
push
cmp
or
inc
or
sub
inc
sbb
pop
xchg
sub
pusha
pop
push
call
in
stos
test
ins
jmp
nop
repnz
gs
test
jns
pop
sub
pop
jmp
adc
pop
daa
imul
ja
pop
cmp
add
popf
sub
outs
ds
push
mov
pop
mov
sbb
sub
fdiv
je
adc
xchg
cmp
ret
mov
and
test
mov
leave
lea
out
loopne
rcr
or
loope
outs
jae
xchg
pop
mov
adc
mov
and
stos
and
push
push
cdq
xchg
call
xchg
push
into
loop
fs
mov
jno
and
jge
sub
popaw
xchg
pop
pop
repz
push
aaa
lea
cs
lods
gs
cld
mov
mov
call
cmove
or
cmp
xchg
jle
test
fmul
sahf
mov
shl
mov
push
bound
sbb
mov
test
mul
in
push
xchg
fnstsw
(bad)
push
out
mov
not
sbb
xchg
mov
xchg
ret
push
mov
mov
jle
push
lds
xchg
add
cmp
jge
or
cmp
nop
cmp
inc
push
cmp
call
les
ficom
pop
jp
repnz
clc
mov
sahf
(bad)
(bad)
adc
inc
push
push
pop
sbb
popf
add
fnstenv
std
add
inc
and
sbb
adc
icebp
loope
inc
loope
ds
and
cdq
pop
dec
add
jp
jns
cli
popf
mov
sbb
loop
xor
mov
mov
mov
sti
data16
mov
jmp
sahf
adc
xchg
retf
es
loopne
cmp
bound
inc
or
fnstsw
sbb
cmp
bound
push
out
ja
and
mov
cld
push
ins
lods
iret
push
in
repz
retf
mov
lahf
cmps
add
add
add
push
leave
add
sti
loope
xchg
sbb
lds
and
push
cs
and
out
mov
jno
push
push
or
pop
es
test
test
inc
stos
or
aad
cmc
in
loop
fldenv
adc
jge
pop
and
or
sub
rol
ret
mov
xor
xchg
and
es
xchg
jp
outs
add
test
push
(bad)
push
pop
or
sbb
inc
push
lods
sbb
ss
retf
mov
cli
adc
das
xchg
psrld
in
sub
loope
loop
jb
cmps
mov
inc
imul
icebp
imul
out
rol
xchg
mov
mov
shl
push
pop
out
adc
loop
stos
(bad)
ja
cmp
je
std
push
xor
mov
xchg
pusha
xor
xor
into
jge
das
sub
xchg
dec
fs
pop
and
sbb
and
test
mov
aam
test
mov
cs
ins
jne
fisub
pop
inc
jmp
call
sti
push
and
and
loopne
ins
into
popf
dec
out
movs
(bad)
fadd
cmp
shr
push
xor
mov
or
cdq
mov
ja
dec
(bad)
mov
jno
das
mov
mov
int3
mov
or
je
add
sub
(bad)
imul
cld
mov
fdivrp
icebp
sub
and
xor
or
int
mov
adc
or
pop
ja
les
es
clc
lods
mov
sahf
fdiv
inc
pop
loopne
mov
test
cs
(bad)
dec
sub
jecxz
pushf
icebp
repz
dec
inc
loopne
mov
mov
dec
jle
movs
idiv
inc
iret
out
out
push
cdq
mov
mov
mov
add
sti
mov
ja
inc
xor
popf
(bad)
adc
push
dec
bound
dec
icebp
iret
rcr
arpl
inc
out
xor
sti
sbb
cmc
sar
cmp
lock
addr16
in
or
sahf
jl
dec
out
icebp
gs
xor
test
jmp
push
fwait
mov
jmp
jno
push
stos
xor
fwait
cmc
imul
jge
fnstsw
retf
nop
or
mov
pusha
or
mov
push
mov
sub
xor
and
jecxz
jnp
cmp
loop
hlt
daa
clc
arpl
(bad)
cdq
sub
les
out
xchg
xor
fnstcw
sahf
mov
xchg
sub
sar
sub
js
repz
push
test
or
in
push
jp
sbb
les
js
into
xchg
ss
add
aam
or
mov
pop
add
cli
or
jne
inc
cmps
jo
movs
outs
retf
pop
repz
lsl
add
xchg
fdiv
dec
imul
mov
push
jnp
and
and
shl
ret
scas
jmp
inc
test
mov
add
xchg
sub
inc
fwait
scas
xchg
push
or
es
stos
scas
adc
sbb
pop
add
fs
cli
retf
inc
aad
mov
and
fstp
call
je
mov
stc
cld
movnti
es
ins
push
xchg
jb
add
inc
dec
out
push
adc
sahf
out
fstp
adc
mov
outs
jle
retf
jae
push
mov
dec
fcmove
out
mov
mov
icebp
mov
cmc
lahf
adc
or
nop
pushf
mov
pop
or
inc
popa
cmp
dec
cmps
scas
inc
pop
int
inc
(bad)
fstp
pop
icebp
jns
gs
sub
enter
arpl
cs
mov
pop
sbb
sbb
xor
jp
jo
cmp
cmps
movs
inc
(bad)
cmp
mov
(bad)
imul
mov
mov
dec
xchg
mov
mov
jo
inc
fwait
pop
sti
mov
and
or
mov
das
jmp
and
push
xchg
cmp
imul
xchg
ss
sub
jbe
lods
jns
xor
jge
cmp
mov
ret
shl
and
mov
nop
adc
std
fisubr
repz
mov
cmp
and
dec
out
mov
sub
and
das
jo
cld
inc
fidivr
inc
in
xchg
cmp
or
shl
jne
mov
ss
or
les
mov
jp
adc
ret
cmp
or
ins
ret
iret
jno
int
xor
pop
dec
lock
add
jb
and
mov
or
movs
ins
or
sar
pop
xor
xor
jecxz
inc
adc
mov
fisttp
(bad)
jp
call
std
gs
lods
jl
jmp
mov
inc
in
xchg
ja
call
pop
popa
test
add
movs
jns
scas
daa
and
lea
mov
jnp
int
sbb
fadd
fwait
dec
call
arpl
fmul
cli
xchg
(bad)
shl
les
or
cmp
push
lods
sub
ret
sahf
mov
xor
nop
adc
mov
push
aaa
call
arpl
(bad)
pop
ds
and
ret
adc
pushf
sbb
jnp
jb
std
mov
mov
mov
or
movd
jmp
neg
inc
neg
pop
adc
stos
push
data16
das
cmp
xor
inc
rcr
xor
mov
std
cmp
xlat
pop
das
div
pop
mov
mov
mov
dec
movs
test
cmp
mov
enter
sub
pop
cmps
data16
push
mov
mov
sbb
push
jo
sbb
sbb
push
pop
sub
into
mov
push
xchg
mov
xchg
lds
lods
test
add
push
jle
popa
jb
arpl
nop
mov
adc
(bad)
sahf
enter
jbe
mov
and
cs
call
(bad)
xor
and
aam
push
rcr
pop
test
dec
out
mov
mov
enter
fisubr
fcomp
mov
mov
imul
lahf
add
fwait
dec
cmp
aam
cmp
into
or
jnp
lahf
push
fbstp
inc
fwait
jbe
cmp
push
cmp
loopne
sbb
(bad)
mov
dec
sub
pop
pop
dec
mov
sti
rol
addr16
ret
dec
retf
jmp
pop
idiv
add
push
mov
push
dec
ficomp
xchg
(bad)
push
adc
cmp
adc
and
dec
mov
retf
sti
pop
and
xlat
cwde
inc
jmp
xchg
shl
sti
xor
xchg
aas
mov
sub
pusha
clc
push
or
push
cs
push
pop
pop
movs
mov
mov
call
pop
repz
mov
cmp
jae
sbb
jecxz
gs
test
push
aas
jae
xor
(bad)
sbb
fsub
jecxz
arpl
xchg
imul
and
pop
cmp
push
xchg
inc
mov
xor
jae
cmp
dec
xor
and
cmps
dec
stos
les
cmps
cli
bound
movs
test
lods
pop
or
ja
daa
push
pop
mov
sub
into
test
into
xor
mov
test
daa
xchg
aam
mov
movs
scas
pop
jle
inc
cmc
nop
push
dec
cmps
pop
sbb
add
out
cs
or
repnz
or
lea
push
out
push
xchg
adc
aam
mov
xchg
sub
or
add
mov
sti
ja
popa
pusha
cmp
dec
push
add
cmp
rcr
icebp
adc
rcl
sub
cmp
xchg
ret
std
xchg
cmp
and
in
mov
xchg
push
mov
mov
out
jmp
jmp
das
stos
cwde
xchg
cmps
cmp
dec
push
xor
mov
call
(bad)
ins
faddp
mov
in
or
push
sub
xchg
icebp
jp
add
dec
stos
cmps
lods
int
push
lods
xchg
jmp
into
shr
in
clc
adc
addr16
(bad)
fcmovne
and
lea
pop
in
mov
cmc
mov
iret
leave
out
sub
ja
xchg
lods
cmp
jae
xchg
stos
inc
in
mov
adc
cli
in
fcomp
adc
fs
movs
fdivr
in
test
push
dec
ror
or
mov
mov
inc
xchg
jg
pop
jl
push
inc
pushf
vprotw
mov
sar
cmps
imul
out
mov
pop
jp
fstp
popf
sub
dec
cmp
pop
popa
fiadd
push
push
dec
stos
add
or
jmp
xor
sub
cmp
in
movntq
push
push
jle
add
cmp
cdq
mov
jmp
xchg
xchg
test
inc
mov
xchg
add
(bad)
in
sbb
test
enter
dec
pop
fdiv
push
push
mov
icebp
adc
ss
push
jle
in
out
cmp
push
imul
mov
in
cmp
ins
fsubr
call
or
and
(bad)
lods
sbb
mov
lds
scas
sbb
stos
jg
xchg
setbe
std
fsubr
es
loop
push
add
and
lea
mov
nop
cmc
sub
cmps
fwait
xchg
pop
sti
jo
outs
ins
aad
les
inc
addr16
inc
dec
add
ds
nop
inc
pop
push
mov
xchg
mov
mov
cmp
push
repnz
sbb
inc
sbb
pop
or
daa
sbb
mov
mov
int
xchg
cs
mov
adc
fwait
xchg
inc
stc
pushf
jae
mov
ficom
cmp
push
jo
jge
xchg
(bad)
mov
jnp
push
push
push
leave
lds
xchg
jecxz
in
or
mov
pushf
retf
xor
xchg
pop
xlat
pop
aad
test
sar
mov
in
sub
aad
xchg
(bad)
repz
fbld
cmp
cmp
imul
add
adc
aas
jae
sahf
sub
mov
ret
test
inc
xor
lock
ins
data16
mov
cdq
scas
fstp
sbb
out
dec
daa
icebp
mov
jbe
int
sbb
test
and
and
stos
cmps
ins
lods
imul
repnz
out
mov
lock
sbb
clc
dec
rol
cmp
jmp
mov
jbe
(bad)
jmp
add
add
mov
jecxz
mov
inc
nop
inc
dec
pop
sbb
retf
xchg
mov
in
pop
rcl
sub
shl
mov
jp
adc
push
out
push
sub
jp
pop
or
imul
push
vcomiss
dec
or
adc
mov
jns
jmp
cmp
mov
gs
xchg
movs
push
ret
mov
add
xor
sbb
addr16
dec
movs
ja
jne
jnp
ja
pop
pop
stos
pop
pusha
add
adc
ficom
lods
sub
mov
out
call
adc
imul
gs
sub
dec
cmp
and
rcl
dec
and
in
sahf
sbb
cmp
sub
ss
ret
push
test
mov
sub
inc
dec
arpl
xor
les
shr
mov
arpl
mov
cs
inc
fwait
adc
rol
shl
pop
pop
lods
xchg
push
fistp
pop
sub
push
in
mov
pop
js
push
push
mov
(bad)
sbb
pop
jae
int3
test
out
lds
loop
arpl
jb
push
pop
cmps
jno
xchg
push
sbb
out
mov
sbb
push
(bad)
mov
dec
into
int
hlt
mov
sbb
and
and
scas
mov
clc
out
popa
dec
in
jo
mov
cli
xchg
xchg
xchg
ins
xchg
xchg
push
and
inc
inc
out
popf
arpl
test
scas
pusha
shl
xor
jo
popf
(bad)
mov
call
out
xor
jmp
lds
mov
xor
push
pop
fst
mov
xchg
inc
movs
fwait
cdq
hlt
fs
adc
movs
loopne
in
hlt
leave
stos
popf
and
cs
or
sbb
loope
retf
(bad)
ins
xchg
je
or
adc
jno
add
cmps
sub
fwait
pop
jge
call
xchg
inc
(bad)
mov
pcmpeqw
popa
loop
rcr
nop
rcr
lock
test
jecxz
xchg
repz
out
or
clc
inc
cmp
fidiv
retf
sub
das
jl
mov
in
sbb
leave
mov
xchg
pop
pop
mov
pop
xor
sub
jne
cld
push
jne
gs
in
cwde
icebp
or
mov
mov
xor
ret
inc
lods
mov
jae
sub
lss
or
cld
je
mov
inc
cmp
or
or
add
xchg
loopne
inc
xlat
pop
jmp
ficom
neg
je
jne
(bad)
and
out
pop
lahf
es
int3
mov
repnz
movzx
xchg
pop
lea
stc
and
(bad)
jmp
repnz
mov
(bad)
cmps
mov
adc
push
inc
dec
fld
mov
leave
clc
icebp
jbe
cli
pop
aaa
mov
fisubr
ja
ja
nop
pop
dec
out
sar
movs
arpl
pop
sub
xchg
or
std
lods
jmp
cs
cmp
xor
int3
jnp
adc
(bad)
and
loope
adc
int
jg
outs
add
bound
xlat
add
sbb
inc
rcr
shl
mov
(bad)
sbb
push
pop
and
ret
neg
mov
lds
mov
mov
xor
mov
pop
sahf
mov
adc
push
pop
das
xor
fcom
shr
cmp
in
mov
dec
xor
push
sbb
xor
dec
cwde
jge
inc
inc
inc
retf
xor
(bad)
cwde
leave
xor
xchg
xor
jmp
push
push
(bad)
(bad)
jae
xchg
xor
ins
xchg
jmp
lds
out
pushf
test
loopne
jb
sbb
pop
mov
xor
gs
mov
mov
call
or
lahf
scas
jl
xor
mov
xchg
jo
or
add
fisub
push
imul
sti
cmps
in
dec
jecxz
lock
rol
push
xlat
add
test
les
into
js
js
outs
and
cmp
int
sub
out
sub
or
jne
int3
pop
test
mov
(bad)
ds
lods
ret
push
adc
sahf
cmp
cmp
cmp
or
push
xchg
add
add
dec
cmp
nop
mov
and
sar
adc
mov
jns
pop
xchg
add
loope
inc
psubsw
out
cmps
dec
adc
mov
dec
adc
adc
ficom
mov
xor
mov
stos
stc
push
sub
not
xor
sbb
je
xchg
push
test
cmp
test
pop
pushf
push
or
adc
neg
xlat
push
out
xor
int3
adc
push
imul
mov
icebp
or
mov
mov
loop
xchg
(bad)
(bad)
mov
jbe
ins
sar
leave
cmp
(bad)
cmp
enter
dec
push
dec
and
inc
mov
cmp
in
dec
add
add
mov
push
mov
jg
xchg
dec
xchg
aas
mov
push
xlat
cmp
mov
cmp
(bad)
dec
pushf
push
test
adc
int
mov
pop
mov
sbb
mov
dec
dec
jl
retfw
cmp
in
pmuludq
dec
mov
mov
jns
in
fisttp
gs
call
ret
jnp
je
sti
push
das
add
cli
jge
sar
mov
push
xchg
(bad)
mov
lods
scas
fnsave
xor
jecxz
cmp
xor
nop
sub
fiadd
dec
out
mov
lods
adc
out
inc
shl
xor
push
addr16
icebp
cmps
jge
push
adc
inc
imul
and
dec
and
push
adc
and
mov
or
test
push
xor
mov
in
jo
das
jmp
mov
jb
nop
js
or
fdivr
aam
(bad)
jne
mov
lock
retf
push
movs
fistp
jmp
mov
out
jne
in
dec
movs
and
(bad)
push
retf
lods
cli
nop
pop
pop
push
aaa
cmps
and
mov
outs
push
cld
xor
lods
sbb
(bad)
mov
mov
and
aad
and
movs
mov
sbb
inc
sbb
jmp
push
dec
call
xchg
inc
sbb
or
inc
fidivr
jecxz
sbb
mov
rol
mov
imul
sbb
in
xor
les
mov
iret
jg
jmp
sub
xor
(bad)
jo
add
loop
(bad)
push
int
mov
mov
fs
and
test
cmp
sub
int3
inc
pop
or
adc
inc
xchg
dec
addr16
out
cmp
jbe
and
mov
aam
cmps
jne
sub
sti
or
jb
sub
adc
inc
xchg
inc
cmp
stos
out
vmovsd
or
in
mov
sub
and
jle
add
mov
pop
jl
cmps
pop
jbe
clc
xchg
mov
jno
and
stc
mov
sub
and
dec
(bad)
pop
ror
inc
push
shl
mov
dec
mov
out
dec
dec
ins
push
test
add
fstp
lahf
mul
les
inc
xchg
push
mov
adc
or
repnz
cmp
leave
nop
xor
cmp
rcl
stos
add
clc
movs
lock
les
push
xchg
push
pop
mov
ss
xchg
aad
push
dec
mov
es
jae
rcl
mov
or
or
inc
xor
push
mov
xchg
push
pop
pop
imul
in
mov
pusha
cld
sbb
pop
rcr
cmp
rol
pop
mov
movs
mov
fwait
pusha
outs
cmp
aaa
arpl
jmp
add
dec
and
sub
sub
in
mov
sbb
pop
call
mov
xchg
stos
mov
jae
xchg
pop
aad
outs
(bad)
xchg
rcr
aam
mov
pop
dec
fwait
aam
add
gs
popa
xor
imul
sbb
test
mov
sbb
jmp
sbb
jg
pop
dec
adc
in
adc
pop
pusha
outs
xchg
mov
jno
addr16
sahf
pcmpeqb
sar
add
ss
add
jnp
mov
sub
inc
adc
mov
mov
jae
out
loope
(bad)
sub
or
jl
pop
push
xchg
cmp
sub
cwde
xor
ret
sub
xor
imul
cmps
arpl
and
movs
fist
inc
inc
sub
pop
xchg
ja
icebp
stos
xchg
outs
pop
mov
enter
xchg
xchg
movs
cld
ins
pusha
adc
loopne
and
xlat
adc
mov
mov
push
xchg
int3
bound
popf
fwait
mov
or
jmp
outs
jbe
push
cld
jg
mov
xchg
mov
lods
push
mov
cld
xchg
mov
push
in
sub
pop
(bad)
test
pop
sar
fwait
(bad)
neg
ins
xchg
(bad)
mov
movs
ss
push
mov
pmovmskb
rcl
loopne
mov
outs
lsl
in
lahf
aad
loope
lods
int
es
adc
xchg
dec
ja
shl
call
dec
test
jge
scas
dec
dec
fwait
mov
aam
add
ds
icebp
mov
cmp
test
mov
jae
gs
lock
ds
scas
push
scas
jno
mov
inc
ins
inc
pop
jmp
in
xor
jbe
mov
dec
scas
and
pop
shl
mov
dec
xor
and
inc
bound
push
pop
lahf
lods
mov
cmc
retf
jns
test
pop
dec
add
pushf
outs
in
push
in
mov
cmp
push
xor
clc
imul
or
push
add
inc
ins
inc
mov
pop
test
adc
sub
popa
and
shl
adc
sbb
pop
mov
jmp
inc
adc
add
xor
push
call
ins
mov
push
inc
add
push
or
scas
cmp
fldenv
outs
shr
mov
cmps
ror
add
lahf
inc
mov
test
jmp
je
sub
jbe
hlt
jg
mov
add
xlat
sub
add
daa
aaa
outs
sub
sub
sbb
add
call
xchg
lds
movs
cmps
jmp
jmp
mov
mov
aad
shr
push
test
lods
mov
xchg
pop
fcom
and
cmp
or
std
in
push
in
ret
lahf
test
push
dec
push
inc
hlt
sbb
adc
mov
xchg
sahf
push
and
cli
fnstsw
test
ins
test
(bad)
call
mov
shl
push
pop
repnz
test
pop
(bad)
aad
cmp
xchg
out
test
stos
shl
outs
inc
sbb
sub
int
inc
sub
popf
das
xor
in
fisttp
(bad)
cwde
ss
clc
mov
jecxz
sbb
xchg
fiadd
test
or
pop
rcl
dec
in
xchg
push
and
and
imul
in
hlt
xor
repz
lods
push
push
shl
jb
scas
jbe
loop
push
aam
outs
aas
cli
mov
push
cld
test
cmp
mov
mov
into
sbb
(bad)
add
xor
cmp
idiv
lods
std
jle
into
xchg
dec
adc
(bad)
mov
loope
pop
lea
dec
out
test
mov
xchg
mov
add
call
imul
xchg
js
sub
mov
and
into
mov
lahf
cmp
imul
push
xor
mov
cld
cmp
shl
dec
and
dec
daa
mov
mov
scas
data16
test
cld
cwde
in
into
jo
and
outs
add
inc
mov
sbb
out
hlt
pop
test
push
jge
daa
xor
inc
in
addr16
scas
xlat
retf
push
cmp
jns
int3
dec
pushf
xchg
mov
dec
dec
jnp
xor
jno
sbb
or
int3
xor
in
in
mov
mov
mov
sub
sbb
cmp
adc
push
ret
dec
pop
in
inc
jge
clc
and
xchg
xchg
mov
pop
sbb
adc
xchg
jmp
mov
das
xchg
inc
add
mov
push
xchg
call
mov
fcomp
mov
jl
add
shl
sub
jmp
pop
dec
jge
dec
sub
mov
iret
or
test
cmp
adc
push
ins
mov
and
stos
or
jge
adc
xchg
inc
dec
ins
frstor
push
mov
arpl
aam
stos
pusha
sub
call
data16
push
dec
dec
jmp
and
dec
xor
cld
je
push
out
sub
sahf
xchg
cmps
inc
cmp
imul
sub
in
out
out
and
stos
dec
ret
aaa
adc
sbb
mov
repnz
push
aas
fsub
mov
scas
repz
pusha
retf
in
jg
jecxz
sbb
mov
int3
popa
sbb
pop
movs
in
mov
xchg
mov
jg
inc
fld
bound
cmp
or
sub
outs
lds
dec
lahf
shr
rcr
(bad)
rcr
pushf
(bad)
fisttp
xchg
test
inc
rcr
dec
jge
inc
mov
outs
sub
lea
mov
mov
addr16
cmp
add
mov
in
popa
fadd
fstp
sti
pop
das
daa
and
movs
dec
cmps
out
sub
jecxz
retf
faddp
or
repz
aam
jns
stos
adc
aas
(bad)
leave
or
test
cs
push
cmp
inc
jno
inc
add
mov
push
fstp
test
sbb
out
xor
xchg
jnp
or
ror
or
push
les
push
mov
out
xchg
ins
setp
mov
mov
stc
inc
mov
lock
or
std
mov
xchg
or
sti
adc
scas
retf
out
(bad)
dec
rcr
jns
push
aam
(bad)
imul
adc
adc
aad
lahf
arpl
rol
call
add
fs
pop
mov
ins
nop
mov
or
retf
and
jne
imul
jmp
mov
pushf
fadd
ja
jp
xor
or
in
fstp
retf
push
pop
pop
lods
dec
cmp
fsubr
fnstenv
(bad)
ret
out
adc
fisub
cdq
or
lods
ret
adc
adc
call
data16
push
scas
inc
ss
mov
(bad)
cmc
and
xchg
ins
sub
popa
js
popf
ret
dec
(bad)
(bad)
fisttp
ds
retf
cdq
fwait
leave
pop
mov
mov
jmp
jnp
dec
aas
lods
dec
das
shl
cmps
or
stc
xor
and
jecxz
xchg
mov
pop
sbb
aad
loop
add
or
sbb
pop
xor
loope
cli
outs
inc
pop
inc
imul
je
dec
ss
dec
adc
push
add
mov
fdivr
pop
xchg
push
pop
movs
sbb
mov
mov
jne
push
repz
mov
mov
mov
leave
in
movs
outs
xchg
cmp
cmp
not
pop
sub
add
adc
xchg
mov
and
nop
sub
or
pushf
and
jge
loopne
or
and
js
sbb
inc
and
iret
lods
(bad)
lods
mov
mov
out
fild
sbb
xor
stos
pusha
mov
xor
adc
or
addr16
mov
jae
iret
jnp
aad
push
fwait
push
ja
in
mov
cmp
test
xor
(bad)
jb
add
sbb
outs
sub
xor
mov
fild
mov
scas
mov
jne
dec
cmp
shl
xor
aad
adc
(bad)
sbb
out
cmp
mov
xchg
xlat
test
jle
in
pop
pop
(bad)
out
cmc
ror
rol
std
ins
and
push
inc
mov
and
jb
mov
xor
aaa
add
shr
scas
fnstsw
out
add
lods
loop
cmps
xchg
loop
fcom
jmp
jl
ret
adc
test
jne
rcl
pop
push
jle
jmp
cli
call
cmp
jnp
aas
adc
cwde
or
mov
pop
dec
in
out
inc
iret
ret
fxch
mov
outs
mov
sbb
aam
inc
(bad)
outs
dec
into
mov
pushf
sbb
jb
movs
movs
mov
push
jmp
fbld
imul
test
mov
cli
lfs
fnsave
cmp
mov
push
retf
sub
inc
test
jmp
je
mov
inc
jg
xor
clc
(bad)
push
(bad)
jge
stos
adc
sub
iret
push
mov
jecxz
mov
popf
ss
int3
or
neg
xor
cmp
xchg
or
ds
mov
jb
dec
adc
ror
jge
push
push
mov
cli
std
icebp
inc
cli
data16
adc
mov
sbb
jmp
ja
mov
int
mov
mov
inc
inc
or
ret
ins
cmps
(bad)
movs
mov
into
rcr
push
js
cmps
(bad)
inc
psraw
push
dec
scas
scas
jecxz
test
jb
scas
mov
xchg
icebp
and
lea
ret
fcomp
or
jg
dec
rol
movs
jg
ss
ret
dec
daa
pop
es
in
mov
sbb
push
out
pop
rcr
cdq
add
jmp
shl
jnp
cmps
mov
fld
popf
test
add
js
(bad)
xor
and
inc
dec
or
push
sbb
xor
data16
sub
sbb
or
fstp
cmp
iret
loop
cwde
leave
hlt
cmp
and
aaa
inc
or
push
dec
bnd
mov
pusha
cpuid
jbe
daa
enter
stc
mov
adc
adc
cld
test
add
sbb
add
data16
pusha
call
jmp
jmp
mov
sub
xchg
and
mov
sub
and
jg
fisubr
sti
add
lea
fdivr
pop
sbb
ss
repz
mov
arpl
aas
ja
sub
or
xchg
mov
ficom
cwde
loopne
dec
shl
pop
sbb
mov
push
sbb
mov
dec
test
shl
ror
ss
mov
mov
clc
das
adc
in
ins
stc
repz
cld
jb
add
hlt
ret
rcl
repz
aad
iret
dec
adc
psadbw
cmps
mov
inc
je
jg
mov
lock
xor
cdq
jbe
out
push
shl
jp
pop
dec
outs
push
add
pop
fwait
cmps
lea
xchg
movs
xchg
jp
inc
test
(bad)
inc
push
cmps
mov
mov
out
js
aaa
fnsave
setl
fisub
push
sub
push
or
in
push
stos
jb
outs
cs
inc
nop
pop
js
cwde
and
push
aaa
(bad)
jmp
repz
stc
mov
loop
sub
xchg
push
cmp
and
push
mov
push
cmp
sub
test
(bad)
scas
or
out
mov
in
sar
fidiv
aam
gs
and
fmul
fnstcw
inc
cmc
cwde
jmp
stos
adc
into
push
fs
pop
cmps
adc
movs
fidivr
data16
add
pop
push
dec
dec
js
shl
cmp
inc
sbb
pop
test
(bad)
ja
pop
mov
or
fbstp
xchg
pop
dec
push
icebp
sets
movs
jp
ror
mov
shl
movs
jo
add
or
xchg
jecxz
int
scas
cmp
ret
xchg
and
neg
test
lahf
pusha
cmp
xchg
cmp
out
mov
pop
mov
nop
push
into
push
cmps
jl
repz
mov
test
or
pop
popf
jbe
mov
adc
pushf
mov
fnstsw
push
mov
and
call
sub
int
sub
add
mov
bound
and
(bad)
mov
dec
(bad)
add
int
adc
sub
cdq
cmp
xor
lock
add
inc
test
inc
pop
in
inc
das
add
mov
aas
push
sub
sbb
xor
repz
mov
push
dec
out
jb
dec
inc
mov
jnp
dec
mov
xchg
shr
cdq
dec
or
in
call
xchg
cmp
cmp
mov
test
shl
sbb
rcr
mov
(bad)
stos
icebp
fisttp
mov
in
sub
inc
imul
adc
movhps
fmul
dec
dec
dec
mul
push
xchg
outs
test
test
xor
or
fyl2x
add
push
aam
mov
ret
lahf
out
dec
rcl
jo
adc
aaa
or
inc
test
sbb
ret
cmp
ret
mov
mov
bound
xchg
and
arpl
cmps
push
fwait
dec
add
push
mov
xchg
sub
lods
and
xchg
cmp
fdiv
push
ins
inc
pop
and
imul
push
jmp
xor
lods
(bad)
adc
lahf
je
add
lock
(bad)
aam
and
leave
push
cmp
push
pop
test
cmp
mov
in
xchg
push
div
mov
pop
idiv
pop
loope
push
sub
call
loopne
xchg
std
retf
xor
dec
cmps
adc
sahf
mov
jle
cmp
or
cmc
outs
repz
jmp
cmp
push
or
dec
adc
push
out
push
fadd
xchg
sub
pop
push
mov
mov
push
adc
bound
jb
es
sub
aad
ret
push
shr
cld
es
int
inc
loope
pop
or
movs
(bad)
lahf
and
cmc
lahf
call
lea
mov
fwait
sub
xchg
retf
push
cmps
adc
mov
and
or
add
les
stos
pop
retf
and
inc
test
scas
repnz
or
cmps
jno
jb
pusha
mov
fcmove
adc
mov
and
pop
pop
push
cdq
pop
mov
nop
loopne
add
and
cld
mov
add
jne
xor
mov
das
push
mov
sahf
mov
lahf
xchg
neg
cmps
(bad)
add
neg
mov
lods
in
push
mov
dec
test
inc
mov
mov
aad
repnz
xchg
clc
out
push
or
cmps
fsqrt
push
mov
pop
mov
sbb
inc
aad
aaa
sub
stos
inc
ds
adc
or
mov
push
inc
fcmove
ficomp
add
aam
icebp
ret
push
cmp
dec
mov
in
lea
mov
xchg
jp
adc
mov
sbb
popf
cmp
loop
lds
repnz
sar
add
pop
xlat
mov
mov
adc
xor
loope
sti
iret
loope
(bad)
loopne
pop
loope
add
ds
jle
call
jecxz
push
cmp
mov
xchg
adc
sbb
jne
enter
hlt
cmp
sub
aas
and
fnstsw
out
int
lods
dec
imul
popf
aad
je
jg
adc
jg
push
outs
pop
mov
mov
adc
or
clc
xor
mov
arpl
dec
push
push
fisttp
pop
sub
shl
mov
ror
mov
pop
rcr
mov
mov
fistp
sti
jno
addr16
and
addr16
loopne
inc
xchg
mov
mov
sub
daa
sub
icebp
shr
push
mov
std
mov
mov
popa
cmp
iret
and
out
sahf
(bad)
mov
fsubr
stc
mov
pop
addr16
in
js
add
test
mov
clc
fld
in
sar
popa
mov
dec
out
add
xor
ins
push
sbb
lds
call
bnd
in
sti
fstp
mov
pop
and
jmp
pop
es
lds
call
sub
add
lods
aaa
cmp
jb
inc
push
popa
hlt
xchg
loope
sub
inc
lds
or
jbe
popf
stos
dec
sar
and
or
mov
in
or
mov
push
aas
mov
adc
callw
mov
push
rcr
mov
xor
xor
repnz
fs
mov
push
jle
xchg
jl
test
shl
and
rcl
(bad)
xor
mov
push
mov
fcmovnbe
cmp
mov
and
mov
imul
cmp
cdq
inc
in
sahf
mov
push
pop
stc
and
jmp
cmps
jmp
in
into
sub
pop
test
sub
sbb
xor
xchg
(bad)
jl
adc
shl
or
xchg
dec
in
mov
cli
xor
cld
pop
push
sub
(bad)
mov
or
in
jbe
push
pavgb
jnp
and
or
xchg
sbb
lods
cmp
or
xor
test
mov
outs
imul
sub
cld
inc
out
iret
lods
je
push
mov
cmc
cli
jbe
loop
das
(bad)
inc
rcr
(bad)
cld
xchg
jp
xchg
cmp
inc
js
jle
into
mov
fist
dec
inc
das
cmps
xchg
push
cmp
push
mov
js
adc
lahf
test
ret
enter
mov
inc
sar
fld
cmps
jno
icebp
or
pop
fist
in
mov
adc
(bad)
mov
xchg
leave
jmp
gs
mov
sbb
jbe
add
xchg
sub
push
repnz
jl
pusha
sub
dec
sub
adc
or
and
mov
xchg
mov
fsubrp
xchg
mov
call
(bad)
cmc
icebp
push
cmp
enter
inc
xchg
xchg
and
mov
cmp
fstp
out
(bad)
(bad)
mov
mov
sahf
out
popa
out
push
mov
mov
xor
sbb
cmps
loop
repz
or
mov
inc
loopne
jl
inc
or
sbb
aam
adc
or
inc
fxch
ret
mov
xor
je
pop
cmp
test
cld
sub
and
add
push
pop
fs
pop
es
std
jne
cli
mov
add
iret
ds
push
dec
iret
aam
mov
or
inc
push
and
neg
cld
call
retf
ins
inc
xor
mov
or
jb
add
imul
jbe
and
outs
out
outs
push
and
pop
cmp
ret
cdq
js
sbb
mov
jae
neg
aaa
and
adc
xlat
mov
das
leave
call
and
pop
data16
dec
aaa
push
repz
jl
out
rcl
popf
mov
jecxz
scas
cmp
scas
cwde
sub
dec
and
popa
pop
stos
pusha
sub
popa
mov
out
mov
mov
ja
push
sub
(bad)
shl
jmp
int3
xor
in
push
cmp
pushf
scas
test
jp
and
lods
test
shr
xchg
push
loopne
in
inc
xchg
ja
dec
(bad)
fstp
fsubr
fisttp
(bad)
fadd
out
push
adc
in
cmp
rcl
xchg
sbb
push
jb
xchg
lods
pop
icebp
retf
pop
xor
inc
push
inc
cmp
mov
adc
xchg
sbb
and
push
jne
mov
push
addr16
out
or
inc
test
test
sbb
jle
dec
retf
cmps
test
cmp
movs
cmp
push
mov
add
repz
sbb
mov
pop
fdivr
push
nop
imul
data16
enter
xchg
mov
sbb
not
lods
push
bound
mov
in
add
cmp
stos
call
pop
dec
enter
shl
add
je
cmc
mov
mov
aaa
or
jne
imul
nop
pop
jge
(bad)
in
cmp
rol
mov
loope
mov
aad
or
add
jns
scas
jo
push
stos
cmp
mov
xchg
mov
movs
das
fs
icebp
cmp
inc
and
out
mov
or
test
sub
dec
mov
dec
(bad)
fld
fwait
cmp
lds
dec
mov
out
jle
std
clc
dec
ror
push
fst
out
xchg
sub
mov
cdq
cmp
data16
jmp
leave
mov
dec
fsub
sub
seto
dec
scas
iret
js
stos
jg
ins
fidivr
or
or
push
pop
push
cwde
repz
mov
pop
retf
push
out
es
or
gs
xlat
pop
leave
or
les
jb
fcmove
xor
test
test
punpckhwd
push
clc
adc
pop
sub
retf
dec
stos
jnp
xor
je
xor
xchg
sbb
pop
xlat
push
repz
xchg
test
adc
rcl
icebp
ja
push
sub
ins
inc
cmp
mov
out
scas
ret
lods
(bad)
lock
scas
jl
sbb
cmp
add
pop
out
jmp
jb
in
pop
inc
(bad)
and
xchg
gs
adc
lds
leave
shl
std
xor
xchg
mov
push
outs
mov
xchg
lea
xchg
jae
loop
outs
add
or
(bad)
aaa
cmp
pusha
inc
(bad)
in
in
in
mov
fs
imul
jg
cmp
data16
pop
aaa
shr
loopne
mov
jns
(bad)
loopne
int
sub
mov
cdq
push
mov
xlat
sbb
fwait
jne
je
inc
pop
add
adc
pop
cmp
fbstp
mov
xor
int
pusha
in
pop
jno
and
ret
ds
and
jmp
pop
mov
mov
ror
or
sub
mov
pop
mul
inc
je
sti
cmc
jmp
cmc
data16
dec
inc
add
inc
and
push
mov
test
sti
pop
retf
dec
dec
ss
inc
add
ret
jp
ja
dec
hlt
jne
push
rcr
mov
(bad)
jg
test
in
out
jae
sub
or
data16
cld
aad
mov
bound
and
popa
stos
adc
add
mov
mov
icebp
mov
mov
in
js
(bad)
mov
outs
push
loop
out
dec
cwde
es
shl
adc
push
into
adc
push
es
js
inc
mov
fdivr
iret
sbb
jg
pop
adc
ds
or
sub
push
adc
mov
push
(bad)
and
mov
cli
mov
ficomp
in
push
fisubr
and
mov
(bad)
icebp
or
cmp
scas
mov
int
gs
stos
cmps
add
jbe
sbb
in
and
fistp
nop
out
cmps
rcr
sbb
and
xchg
mov
cmp
mov
movs
xor
dec
(bad)
push
fmul
jecxz
sti
add
add
jae
xchg
les
in
mov
fsubp
int3
cmp
xchg
ins
jne
mov
loope
mov
xchg
jb
aad
sbb
ret
shl
ds
scas
or
and
adc
jo
push
mov
lock
ror
test
stos
clc
cwde
aas
push
loope
jg
mov
cdq
mov
adc
fldz
xor
rep
inc
cmp
pop
aam
dec
mov
test
mov
or
gs
pop
outs
xor
sbb
inc
test
sbb
std
gs
sbb
pop
fdivp
(bad)
mov
movs
shr
sbb
clc
inc
(bad)
shr
aam
push
adc
xor
push
iret
sbb
inc
pop
icebp
shl
repz
bound
add
xchg
xchg
call
mov
shr
aas
push
gs
in
mov
xchg
cmps
xor
inc
in
jns
mov
lods
jge
pop
cmc
add
std
push
mov
ret
stos
retf
cld
push
push
adc
sbb
ja
fs
jl
sbb
mov
outs
shl
imul
xor
rcr
mov
sahf
push
fld
dec
std
popf
pop
dec
dec
pop
pop
pop
inc
cmps
and
aaa
inc
jp
aad
fdivr
movs
mov
mov
jnp
pop
test
push
pop
dec
inc
sub
aam
lds
jne
inc
sub
div
or
mov
jb
adc
out
adc
in
sbb
and
test
sub
test
sub
outs
test
outs
imul
mov
pop
enter
push
fadd
mov
sbb
lea
fs
aaa
xchg
xchg
or
mov
jnp
repnz
aas
sbb
adc
mov
sub
cwde
retf
xor
fmul
sbb
adc
cmp
fnstcw
push
popf
jne
stos
les
cmps
mov
leave
jl
mov
adc
or
adc
rcl
ins
gs
stos
outs
imul
xchg
push
pop
enter
and
adc
into
mov
sahf
sub
sbb
clc
(bad)
gs
push
out
popf
outs
sub
shl
sub
lock
(bad)
pop
mov
loope
cmp
cmp
sar
cmps
sar
test
rol
xchg
push
push
xchg
jbe
in
adc
out
aam
cmp
movs
xchg
mov
xchg
pop
cmp
cmp
pop
fs
hlt
mov
shl
scas
or
push
movs
push
pop
mov
or
pop
sbb
push
dec
aaa
add
aam
mov
dec
xchg
imul
sbb
enter
push
mov
inc
jg
icebp
add
inc
cli
out
and
push
lds
stos
cmp
mov
xchg
jle
pop
out
(bad)
jmp
inc
loop
push
fcomp
push
pop
xor
dec
scas
lods
inc
mov
or
inc
push
pushf
cwde
aaa
and
popf
pop
aaa
cld
mov
inc
push
sahf
or
enter
fcmovbe
neg
mov
xor
mov
test
(bad)
hlt
sbb
sub
cmps
outs
jg
leave
fist
outs
mov
rol
shr
test
jb
adc
dec
jo
mov
pop
pop
cmp
jbe
inc
(bad)
retf
or
frstor
mov
cli
xor
scas
sbb
cli
mov
fistp
fsubr
mov
fidivr
or
pop
cmp
cli
push
ret
xor
inc
mov
pop
jo
mov
inc
ficomp
pop
dec
inc
fnsave
stc
fsubr
mov
movs
fist
xchg
pop
adc
sub
outs
lods
mov
loop
add
jno
hlt
sti
inc
pop
repz
and
xor
rcl
cmp
int
mov
cld
jge
and
adc
xor
or
sub
retf
jmp
cmp
neg
test
pop
cmp
jnp
jl
lea
les
push
xor
sbb
lods
mov
enter
sub
test
lock
pop
sub
and
imul
and
xor
call
lock
mov
std
cwde
movs
push
xchg
mov
xor
jp
in
enter
push
out
repz
inc
in
fadd
pop
fiadd
xchg
or
inc
inc
in
inc
(bad)
pushf
xlat
sbb
stos
(bad)
or
cmp
push
jmp
add
loopne
and
rcr
dec
xor
sbb
(bad)
jl
mov
push
mov
not
add
pop
push
inc
popa
(bad)
outs
test
sub
mov
aas
aam
daa
fxch
xchg
inc
pop
in
push
mov
repz
adc
outs
push
sbb
push
sbb
stos
in
pop
or
sbb
je
push
push
fmul
mov
jle
js
pop
cmp
cmp
sub
mov
fs
stc
mov
fdivr
and
jmp
jge
sub
pop
daa
cld
in
xchg
mov
(bad)
fwait
mov
imul
ins
cmp
aad
mov
xchg
mov
cs
ins
jo
push
pop
add
cmp
inc
iret
inc
das
mov
push
inc
cld
sbb
push
mov
mov
das
dec
mov
push
(bad)
lea
shl
mov
ret
ds
fcmovnbe
movs
ret
popa
mov
fmul
pop
arpl
fwait
rcl
sub
mov
pushf
cmp
or
add
das
jl
jge
cli
fldenv
dec
add
test
dec
ret
cmp
sub
in
dec
test
mov
(bad)
hlt
inc
lods
xchg
lods
loopne
ins
outs
adc
(bad)
mov
or
dec
(bad)
arpl
xchg
test
sbb
push
loopne
(bad)
(bad)
add
sysret
lea
movs
jp
into
in
sbb
mov
xchg
dec
ins
or
xor
aad
sbb
repz
push
popf
stos
add
lods
inc
scas
inc
mov
push
ret
and
pop
cmps
ror
pop
mul
inc
pop
inc
mov
add
je
addr16
into
adc
inc
sub
jg
stos
lock
adc
jge
fild
data16
push
das
xchg
xlat
xchg
xchg
mov
in
adc
xor
dec
mov
fstp
mov
outs
arpl
fstp
pop
push
jg
mov
imul
jb
(bad)
les
in
push
mov
xor
xor
add
es
dec
(bad)
outs
enter
shrd
push
stos
push
mov
popa
xlat
xor
pop
ja
test
inc
pop
push
imul
or
and
les
adc
icebp
sar
(bad)
sub
addr16
jg
cwde
nop
data16
adc
dec
mov
sub
ja
inc
xchg
jg
icebp
pop
imul
mov
jns
pop
cwde
xchg
xchg
iret
jmp
jne
sbb
jb
ins
mov
inc
pop
jp
retf
xchg
sbb
jge
dec
int3
xor
inc
jmp
jmp
ins
ds
fistp
dec
and
or
cdq
les
sub
mov
fnstenv
adc
push
in
adc
sub
add
std
jae
fimul
retf
xchg
pop
xchg
out
(bad)
dec
jmp
sbb
and
rcr
retf
dec
scas
or
dec
mov
mov
lods
hlt
jne
test
cmps
jbe
xor
inc
adc
add
push
lods
sbb
jnp
mov
sar
mov
adc
adc
lds
and
scas
lds
fs
test
mov
call
add
and
xor
fsqrt
mov
push
popa
sbb
test
or
mov
jecxz
jns
ja
pop
sub
jge
in
inc
sub
adc
lods
(bad)
push
stos
sbb
pop
mov
mov
aas
mov
jo
call
jns
mov
adc
dec
(bad)
stc
cs
(bad)
xor
jmp
pop
jge
fld
inc
imul
ins
addr16
popf
inc
lea
pop
clc
dec
mov
xchg
fisttp
inc
imul
push
lods
adc
ror
jecxz
(bad)
stc
and
xchg
sbb
int3
pop
push
pop
in
jne
and
jne
and
mov
dec
sub
pusha
aad
or
retf
out
dec
stc
adc
mov
adc
loop
mov
fs
dec
rol
ret
ins
sbb
sub
outs
ret
inc
cs
(bad)
shl
xchg
push
(bad)
fdivr
leave
push
shr
ja
xchg
jmp
popf
mov
mov
inc
sbb
xor
and
cdq
ret
mov
and
inc
mov
push
icebp
repnz
loope
(bad)
mov
(bad)
pop
ss
and
jnp
or
sti
xchg
pop
mov
out
sbb
(bad)
cmp
hlt
std
xchg
in
les
out
or
push
inc
mov
stos
clc
mov
xlat
sub
or
sub
iret
ror
inc
xchg
or
in
dec
inc
dec
push
jne
push
dec
movs
mov
add
and
dec
or
mov
addr16
test
xor
jmp
pop
push
loope
lock
les
push
and
neg
jmp
sbb
lods
shr
pop
je
scas
nop
inc
jae
aam
jmp
dec
(bad)
cmp
out
test
jns
mov
sbb
sar
adc
sbb
push
xor
jno
xchg
adc
mov
(bad)
sub
xor
add
cmpxchg
int
scas
fistp
out
aaa
jg
push
adc
cwde
retf
inc
mov
sahf
(bad)
loope
push
mov
test
sti
adc
fidiv
dec
hlt
imul
mov
and
xor
sbb
and
jle
jecxz
xchg
jg
mov
and
xchg
adc
pop
cmp
popa
fdivr
sub
push
in
arpl
jb
or
(bad)
xor
cmp
gs
dec
dec
fisub
sbb
leave
sub
ficomp
pop
cmc
xchg
pop
xor
adc
or
adc
jne
and
mov
ins
dec
popa
and
fcomp
loop
xor
xchg
mov
jecxz
lock
sub
stc
xchg
adc
inc
and
and
dec
mov
sub
push
mov
retf
jp
or
rcl
into
push
jmp
nop
sbb
fidiv
push
push
ds
clc
sub
pushf
test
ja
neg
je
xchg
out
xor
adc
inc
aad
hlt
jno
in
jns
scas
(bad)
mov
int3
cmp
cmp
ret
mov
xlat
xchg
(bad)
adc
mov
jg
aad
push
pop
xor
ins
mov
les
mov
jp
xor
aaa
add
push
gs
call
rcl
scas
dec
call
ret
push
xchg
fwait
scas
(bad)
jp
or
mov
dec
(bad)
fld
mov
loop
addr16
and
mov
pop
push
pusha
gs
mov
and
push
ins
shl
push
inc
fldenv
cmps
xor
je
ret
lods
popa
in
xchg
lods
dec
aaa
out
and
pusha
sbb
adc
dec
test
loop
out
int
push
xlat
int3
pop
movs
aas
xchg
hlt
pop
and
test
mov
inc
bound
stos
sub
push
lods
push
fisttp
data16
sbb
outs
int3
inc
push
ins
inc
sub
shl
cmp
fdiv
dec
mov
mov
psraw
push
dec
pop
push
fwait
int
(bad)
cmc
or
(bad)
mov
add
and
adc
dec
fisttp
sub
imul
push
movs
mov
cmc
in
ret
jb
ds
dec
shl
or
cld
jmp
inc
jae
out
lods
mov
inc
shr
and
push
loop
out
adc
enter
sub
std
adc
and
out
ret
jmp
mul
jmp
jno
ror
outs
cs
mov
out
push
mov
ror
and
into
dec
sbb
mov
xchg
push
adc
call
inc
imul
jae
scas
push
xchg
pushf
xchg
repz
out
rol
ss
inc
mov
pop
js
push
sbb
pusha
fdiv
repz
xlat
in
xchg
dec
sbb
loopne
aas
jmp
push
std
and
jae
mov
out
xchg
inc
or
mov
cmp
push
out
sub
int
fcmovnb
ins
out
inc
xchg
imul
push
loop
mov
fdiv
add
shr
push
out
push
cli
or
pop
jnp
dec
sbb
or
fdiv
pop
mov
loope
or
xchg
pop
mov
mov
add
pop
mov
xor
cwde
loopne
dec
push
js
inc
mov
pop
jle
inc
push
pop
adc
sbb
jbe
adc
cwde
iret
lahf
(bad)
retf
inc
in
pop
push
pop
mov
inc
add
popf
inc
popa
push
mov
jle
mov
mov
pop
(bad)
push
push
fldcw
mov
fsubp
sbb
dec
(bad)
pop
adc
or
dec
add
rcr
lock
lea
xor
and
movs
jbe
ret
test
(bad)
bound
mov
or
push
call
or
stos
inc
adc
in
xchg
add
inc
adc
push
aad
xchg
xor
cmps
inc
lea
mov
add
inc
and
lea
push
xchg
pop
push
pop
and
imul
xor
leave
push
push
aam
mov
sub
fsub
aaa
jns
fwait
scas
xchg
pop
fnstenv
sub
or
jge
adc
cwde
in
lods
add
rcr
sub
jne
(bad)
push
inc
sti
shr
mov
inc
out
cmp
mov
cld
inc
xor
fwait
adc
mov
les
and
xor
shr
xor
ds
jnp
push
imul
pop
inc
out
add
in
stos
sbb
and
jo
test
xlat
test
and
addr16
gs
outs
aad
(bad)
repnz
aad
lods
popa
push
sahf
loop
push
rcr
mov
xchg
cdq
repz
dec
in
xchg
add
std
pop
push
(bad)
push
stos
pop
mov
mov
in
loope
cmp
clc
fadd
pop
xchg
mov
clc
adc
clc
add
adc
ret
gs
cdq
scas
cmp
mov
or
or
cmp
lea
shr
fisubr
scas
pusha
iret
bound
add
dec
jne
mov
ror
sbb
mov
inc
neg
popf
(bad)
ret
imul
adc
inc
nop
jne
pop
cmp
imul
shl
sub
pop
mov
mov
retf
scas
xor
lahf
mov
xchg
jg
push
cmp
mov
mov
rcr
ret
dec
je
push
jbe
cmps
jae
jnp
and
add
loop
jnp
js
mov
mov
xchg
stc
push
jno
ja
inc
mul
jp
cmp
sub
xor
repnz
or
inc
mov
jae
sub
dec
xchg
lods
adc
mov
or
adc
bnd
fs
and
mov
mov
cmp
add
lea
out
dec
daa
mov
and
not
fisubr
xchg
pop
dec
and
mov
mov
call
dec
dec
repz
jecxz
mov
cmp
xor
xchg
gs
mov
jl
sub
stos
aaa
rcr
pop
sar
mov
xor
xchg
push
xor
jnp
pusha
xchg
push
jns
dec
sbb
adc
adc
fwait
cwde
aad
mov
xchg
adc
fldcw
sub
hlt
jb
in
xor
fcom
push
inc
push
rcl
test
lds
push
mov
js
aas
jle
stc
ret
xor
jle
mov
cdq
pusha
adc
aaa
sub
xchg
dec
add
dec
adc
jl
(bad)
loopne
test
xchg
movs
sub
mov
cmp
repnz
es
psllw
test
mov
dec
jnp
lods
cmp
or
fdivr
lods
cwde
or
std
lods
add
push
mul
icebp
pop
add
sbb
imul
cmp
dec
cmp
fcomp
push
repnz
or
fcmovu
ret
loope
push
inc
push
aas
rcl
ss
or
das
and
loope
(bad)
rcl
dec
in
adc
inc
int
leave
mov
mov
or
xor
jbe
retf
repnz
in
aaa
mov
mov
mov
daa
mov
rcl
std
mov
add
pop
sahf
add
aad
sar
pop
es
jecxz
xor
add
fucomi
adc
add
cmp
xchg
mov
or
cmp
daa
in
or
cwde
sub
push
sbb
movaps
sar
popa
out
xor
jno
mov
gs
cmc
inc
int
jo
outs
xchg
jg
adc
loopne
ret
pop
addr16
jb
sti
pop
and
ret
iret
inc
mov
push
and
das
push
inc
dec
mov
inc
movs
daa
stc
fsub
mov
push
repz
(bad)
lahf
sub
movs
(bad)
data16
cmp
cmp
ja
push
push
test
add
add
sbb
inc
gs
ret
bound
lahf
ins
shl
cmp
in
pop
stos
je
cli
leave
xor
jg
adc
imul
clc
je
jecxz
test
xchg
inc
sbb
xchg
or
pop
icebp
mov
push
add
and
in
jcxz
mov
add
jbe
xor
call
retf
sti
pop
xchg
ja
aas
xor
or
test
retf
xchg
leave
fwait
test
ins
jg
arpl
pop
and
pop
sbb
fldcw
sahf
jmp
and
cmc
mov
test
xor
jae
lods
call
clc
test
(bad)
mov
inc
test
mov
dec
neg
sbb
fcomi
sub
push
jns
hlt
xor
xor
xchg
push
in
(bad)
mov
inc
pop
xchg
stc
ror
or
and
sbb
fistp
xchg
inc
call
or
pop
into
(bad)
jae
int3
cld
and
mov
inc
das
aad
mov
jmp
sbb
dec
push
sub
imul
mov
cmp
call
fbld
add
daa
add
dec
ret
add
clc
outs
ficomp
mov
in
push
mov
push
retf
push
int
js
test
in
xor
add
mov
(bad)
ins
cmp
test
pop
ja
jmp
sbb
cmc
mov
xchg
sbb
test
mov
aam
dec
mov
xchg
adc
addr16
sbb
fcomp
xchg
cmp
test
lahf
and
das
and
(bad)
push
jnp
push
test
lds
dec
call
mov
(bad)
push
adc
into
sbb
xchg
sub
sub
mov
rol
and
es
dec
icebp
clc
int
scas
jge
jo
mov
clc
dec
push
sub
scas
(bad)
xchg
jno
sub
call
loope
xor
add
lds
push
hlt
lea
lods
mov
dec
mov
add
jno
arpl
in
stc
inc
sub
loop
fxch
fcomp
xor
sub
test
call
rol
adc
lods
push
hlt
push
stos
dec
pop
jl
xchg
jb
sahf
test
idiv
mov
daa
sub
test
jle
mov
sbb
mov
jno
pop
faddp
hlt
or
or
adc
mov
xchg
scas
fwait
out
inc
or
das
cdq
in
push
inc
inc
push
dec
adc
out
leave
ret
fs
and
sahf
clc
pushf
mov
jecxz
jg
xor
adc
xchg
jp
mov
sbb
mov
aaa
lods
push
pop
pmulhw
imul
ret
cs
enter
outs
push
movs
sahf
mov
es
pushf
mov
lds
sar
push
imul
sub
jp
fcmovnb
xor
pop
jo
push
out
sub
cdq
arpl
pusha
push
cmp
and
(bad)
idiv
xchg
clc
sub
pop
ds
xor
call
jle
xor
xchg
add
mov
push
xchg
push
jne
mov
pop
retf
sar
out
pop
mov
lahf
adc
nop
xchg
icebp
sub
inc
sbb
cmp
pop
xor
imul
dec
jb
push
mov
in
stc
xor
aam
xor
jne
cmps
call
sub
mov
mov
(bad)
(bad)
aas
js
lahf
mov
ins
mov
repnz
xor
mov
imul
test
add
je
ds
mov
cmp
lds
pushf
cld
mov
hlt
inc
cmp
idiv
dec
repz
dec
mov
and
(bad)
push
jnp
cmp
mov
retf
rol
xchg
pop
xchg
mov
in
icebp
ret
inc
ret
mov
movs
(bad)
les
xor
mov
aam
fnsave
int3
jne
aam
rcr
push
inc
test
push
add
popa
dec
aas
scas
pushf
mov
movs
mov
out
nop
inc
in
ret
mov
das
pushf
xor
jecxz
ss
xor
or
scas
repz
shr
mov
add
popa
and
mov
or
mov
add
push
adc
jg
into
xor
fsub
sub
inc
rcr
jb
outs
mov
mov
xor
out
retf
int
in
push
aam
into
adc
push
cmp
xor
xchg
retf
xchg
loope
inc
dec
sub
lock
cmp
push
dec
and
mov
dec
sbb
add
jp
push
cmovo
add
(bad)
fld
mov
cs
inc
mov
or
retf
inc
test
aad
mov
sbb
xchg
movs
push
adc
inc
mov
test
shl
mov
shr
sbb
and
sbb
bound
test
jg
test
jmp
add
lods
adc
retf
fst
mov
push
mov
xor
loope
cmp
aad
sbb
bound
inc
dec
adc
adc
sbb
(bad)
push
cmp
xchg
je
and
add
jge
jno
gs
out
mov
dec
(bad)
jg
in
call
je
clc
test
sbb
out
or
dec
test
push
sahf
pop
bound
xchg
lods
test
pop
fs
cs
jmp
call
scas
call
aaa
and
mov
or
(bad)
gs
or
(bad)
out
pop
fisub
sahf
fisubr
pop
jnp
jmp
pop
cs
out
loopne
inc
retf
xchg
xchg
jo
xchg
mov
daa
mov
cwde
cmp
pop
mov
jle
or
adc
cmp
ror
lahf
push
mov
or
test
mov
inc
mul
inc
add
cs
psubsb
out
lds
jge
jg
popf
and
shl
add
sub
int
bound
push
mov
loopne
dec
mov
not
(bad)
sti
push
mov
xchg
mov
pop
fist
fisttp
add
std
out
cmc
jns
fbstp
xchg
xlat
pop
jno
push
mov
sub
test
mov
in
cmp
push
jns
loop
mov
jmpw
or
movs
adc
retf
jmp
(bad)
mov
jmp
nop
rol
or
imul
lahf
add
sub
cmp
add
sti
sub
mov
fisub
pop
ja
push
and
cdq
das
neg
jp
mov
sti
or
dec
and
push
jecxz
mov
out
rcr
jg
mov
adc
test
jbe
fsub
mov
pusha
lock
sbb
call
cmp
or
and
pushf
mov
cmp
or
sub
nop
(bad)
enter
int
inc
into
fsub
and
dec
push
fwait
movs
xchg
test
cmp
pop
mov
xor
lahf
clc
gs
dec
retf
fimul
push
stos
in
imul
jne
pusha
ins
lds
push
fld
xor
imul
daa
retf
popa
bound
out
or
cmp
jg
jmp
movs
enter
lock
pop
hlt
retf
mov
in
sbb
xchg
cs
and
dec
stos
sbb
fnstsw
mov
add
inc
mov
scas
popa
mov
retf
or
xor
inc
add
sti
jmp
push
aad
cmp
pop
xchg
push
sbb
inc
sti
or
mov
and
cmp
xor
mov
xor
pop
popa
les
push
sbb
mov
neg
popf
ds
pop
xchg
push
retf
and
cmc
lock
(bad)
das
add
imul
push
mov
test
jae
mov
call
dec
dec
out
jnp
jl
aaa
aas
out
scas
add
int3
(bad)
rcl
(bad)
hlt
inc
push
cs
mov
leave
or
mov
popa
push
out
xchg
jmp
mov
lock
xchg
adc
mov
data16
test
dec
add
push
mov
fst
xchg
mov
add
xchg
sti
test
stos
sahf
push
hlt
or
adc
push
mov
leave
repz
(bad)
jp
pop
aas
jle
sahf
or
adc
pop
sub
jmp
in
lods
mov
(bad)
fucom
fdivr
stos
aam
fidivr
cmp
bound
aas
jne
fiadd
push
lea
rol
mov
mov
jae
or
movs
call
test
fld
push
jg
jbe
dec
dec
lods
pop
cmps
hlt
or
retf
xchg
mov
fwait
cmps
mov
and
clc
xor
into
fs
mov
fld
movs
sub
out
(bad)
and
mov
lahf
push
dec
cmp
std
inc
sub
repnz
mov
pop
ret
mov
nop
dec
inc
jmp
ja
daa
test
addr16
inc
hlt
dec
pop
inc
cwde
inc
dec
sbb
jecxz
mov
add
stos
imul
cwde
rcl
fmul
jo
ins
imul
sbb
je
jecxz
cmc
pminub
(bad)
pop
cmp
pop
xchg
xor
sbb
xchg
ffreep
pop
sub
sbb
add
stc
lods
mov
leave
fadd
sub
jecxz
push
and
outs
add
jecxz
mov
mov
mov
dec
pop
ins
fadd
inc
movs
mov
push
test
jae
mov
lods
cs
push
call
cmp
retf
jmp
jge
fwait
dec
inc
lods
jo
pop
lea
test
xor
into
jl
xor
fcmovnu
aad
test
xor
sub
repz
call
mov
jmp
repz
outs
shl
jnp
je
mov
mov
xchg
pop
shl
fbld
test
pop
adc
sbb
mov
mov
xchg
lea
addr16
mov
outs
add
lods
out
imul
dec
mov
fsubp
ja
adc
imul
push
rol
repnz
or
lea
retf
push
push
cmp
jns
ja
das
mov
inc
xor
mov
out
pop
out
xor
stos
ins
(bad)
mov
cmc
push
es
sub
mov
stos
rol
inc
mov
call
fisubr
fcom
ss
pop
repnz
ins
mov
add
mul
leave
jg
icebp
cli
lods
movs
bound
loope
mov
sbb
pop
xchg
aas
sbb
jmp
addr16
add
icebp
cmc
not
jb
int
clc
xlat
pusha
retf
sti
pushf
pop
imul
mov
mov
leave
cld
sbb
ss
out
test
jne
jae
inc
inc
mov
cmps
mov
jo
add
dec
scas
aad
push
je
pop
mov
rcr
scas
adc
push
adc
sub
jg
or
jbe
mov
cmc
sbb
jne
mov
sbb
das
movs
jae
add
call
fsubr
aaa
pushf
mov
and
imul
and
mov
cmp
(bad)
pop
pop
out
fistp
push
pushf
add
xlat
inc
rcr
das
xchg
rcr
and
into
std
or
inc
or
or
pop
int
push
sbb
sub
out
enter
dec
xchg
xchg
adc
hlt
mov
fwait
(bad)
sbb
cmps
enter
and
data16
or
jno
push
mov
mov
int
dec
pop
add
push
cwde
inc
dec
shr
nop
cs
and
test
cdq
or
or
mov
jle
mov
inc
xchg
dec
sub
cmp
or
nop
in
mov
stos
fisubr
xor
mov
xchg
push
cmp
xor
add
enter
dec
clc
cmp
aam
(bad)
inc
jge
call
jbe
movs
mov
pop
jmp
jg
retf
shl
mov
dec
mov
int
pushf
push
aad
mov
dec
bnd
into
sub
xor
or
sub
mov
pop
mov
dec
loopne
in
icebp
popa
xor
icebp
adc
jne
shl
leave
or
and
je
rcr
inc
mov
cwde
xor
mov
popa
lea
idiv
es
jge
pop
retf
daa
push
jns
and
aam
or
sub
mov
xchg
push
ret
enter
out
xlat
xchg
enter
mov
cld
pusha
push
fdiv
xchg
mov
std
sub
rcr
mov
pop
shl
sti
mov
cmps
daa
pop
fidiv
ja
clc
movs
and
scas
inc
cs
inc
cmps
xor
mov
mov
or
mov
add
sbb
pop
in
xor
enter
cmp
and
mov
lods
int
out
push
imul
jns
scas
xlat
xchg
enter
daa
xchg
ja
mov
sbb
push
jns
and
and
fidiv
mov
sbb
out
call
mov
sub
lahf
fcmovb
inc
add
xlat
fs
cmp
add
inc
sti
retf
jl
mov
jae
stos
aaa
xchg
or
(bad)
mul
xor
push
dec
mov
mov
outs
mov
fwait
ds
loope
test
add
push
rcl
cmp
cld
cmp
pop
ret
xlat
sbb
mov
xor
lea
lods
pop
loopne
pop
add
push
and
out
jmp
inc
and
dec
cmc
xchg
xchg
je
push
les
cdq
mov
jo
jg
xor
loopne
scas
inc
jmp
enter
add
add
outs
sbb
inc
jp
rcl
dec
aas
adc
jo
xlat
aas
lea
xor
(bad)
jb
adc
mov
scas
movs
imul
arpl
sti
fisubr
pop
loopne
xchg
cwde
cld
imul
pop
xchg
push
div
mov
pop
inc
retf
ins
push
js
mov
cmps
mov
sub
or
xchg
cwde
sub
std
std
cmp
jl
retf
push
out
add
sar
xor
stos
mov
std
xchg
arpl
mov
inc
lock
gs
xchg
std
jmp
mov
sub
and
loopne
xor
cmp
aas
cmps
dec
pop
mov
xchg
ret
and
stc
shl
or
test
push
dec
mov
cmps
sub
push
inc
fild
add
loop
or
dec
mov
and
sbb
cmp
inc
cmp
inc
dec
jne
mov
(bad)
iret
in
pop
and
ret
imul
cmp
lods
add
repz
imul
cwde
popf
adc
jae
fcmove
adc
push
cmp
inc
cmp
mov
push
loopne
and
hlt
or
pop
xchg
mov
mov
dec
(bad)
and
cwde
pop
xchg
adc
iret
cmps
int3
inc
dec
fild
jo
clc
aad
adc
xchg
pop
iret
jb
xor
dec
sar
push
mov
sbb
mov
fld
pop
inc
inc
ss
fnstcw
mov
fmul
popf
gs
or
jno
je
adc
ja
inc
gs
out
test
cdq
mov
or
out
jecxz
mov
sub
mov
shl
jne
dec
add
dec
mov
mov
repz
add
pop
data16
sbb
lahf
lods
push
ds
pop
nop
adc
jmp
sahf
dec
call
mov
out
cmp
lock
dec
dec
xlat
std
add
aad
jo
pop
sti
dec
lods
js
xchg
mov
add
frstor
fdiv
out
shr
xlat
mov
nop
retf
int3
xor
push
push
adc
shl
out
test
mov
addr16
bound
mov
mov
add
pop
inc
dec
mov
pop
js
mov
test
mov
pop
sub
xchg
rcr
(bad)
sub
and
dec
in
add
loop
cmp
dec
sar
(bad)
gs
ds
cmp
fadd
rcr
hlt
in
popf
mov
movs
nop
aas
xor
test
fst
inc
jp
sub
bound
and
mov
stos
fadd
xchg
inc
add
das
sbb
inc
fisttp
xor
in
ins
xor
ins
movs
and
test
jmp
std
out
xchg
sbb
fadd
cmp
dec
bound
outs
xor
xor
lahf
and
mov
inc
(bad)
inc
dec
(bad)
sahf
cmp
in
lods
das
mov
scas
mov
xchg
add
stos
pusha
adc
inc
push
mov
xchg
push
xchg
sbb
cs
cmp
ins
arpl
or
outs
shl
xor
aas
outs
stos
inc
repz
push
dec
sub
or
dec
enter
ret
jmp
push
sbb
mov
jb
sub
in
jnp
ins
int3
rcr
add
jp
jae
jmp
inc
mov
inc
mov
mov
or
add
test
popa
adc
mov
ja
adc
ja
addr16
or
cmp
mov
stos
mov
mov
movs
sub
or
add
clc
int
mov
push
scas
dec
fisttp
or
mov
pop
out
jmp
ja
sbb
jns
outs
js
fsubrp
pop
aaa
in
rol
fistp
outs
stos
or
outs
call
jbe
xchg
pop
add
pop
push
adc
mov
scas
mov
sub
dec
or
in
push
xchg
mov
mov
or
fs
sub
add
push
lods
xlat
add
pop
inc
rol
xlat
cmp
mov
je
inc
mov
jns
rol
adc
or
push
in
or
loopne
push
pop
inc
fwait
inc
pop
xor
inc
push
ds
xlat
js
push
cmp
xor
sub
jnp
inc
ss
popa
inc
gs
cwde
cmps
and
loope
mov
adc
mov
out
xchg
inc
das
pop
dec
jmp
(bad)
mov
jnp
cmc
xchg
and
push
popf
ds
xor
cld
adc
push
mov
jmp
xor
pop
cmp
xlat
scas
scas
inc
fs
cdq
fld
adc
pop
pop
stc
push
push
jle
jo
jae
fs
xchg
mov
aas
jle
in
cli
out
xor
inc
cmp
es
jo
jge
cld
in
sbb
in
mov
cmp
enter
js
ins
cmp
(bad)
sub
add
cmp
or
adc
push
stos
ins
mov
cld
mov
mov
shr
scas
cwde
js
push
sub
or
jl
add
call
sar
fst
js
xchg
fucomip
test
sub
add
stos
lods
fwait
stc
cmp
or
fcmovb
addr16
sub
jmp
mov
xor
sub
cmp
mul
mov
stc
jmp
add
mov
fisttp
call
pop
in
inc
in
push
add
adc
mov
outs
mov
cmps
imul
pop
ret
cwde
sub
imul
or
sub
mov
rcl
lods
(bad)
fcmovnu
dec
adc
mov
pop
mov
jge
cmp
and
(bad)
outs
jecxz
aam
nop
outs
ret
jmp
in
sahf
sbb
in
fcomp
adc
daa
mov
jmp
mov
or
xchg
in
popa
inc
int
mov
push
add
retf
imul
adc
stos
sub
pusha
ins
and
mov
lods
adc
push
jmp
clc
xchg
ds
inc
cs
cmp
loopne
xor
cmp
ja
pushf
cdq
lds
outs
xor
mov
mov
ins
xchg
sub
sub
lods
xor
pop
fdivr
repz
or
jg
mov
add
push
cli
cmp
jns
test
and
xor
or
inc
xchg
mov
jmp
sub
xor
mov
push
rcr
sub
jecxz
mov
lea
pop
xor
pop
mov
rcl
(bad)
out
mov
lahf
(bad)
pop
add
icebp
out
and
imul
retf
inc
dec
daa
mov
addr16
scas
mov
mov
xchg
fwait
push
adc
idiv
call
std
aam
sbb
mov
mov
aad
imul
adc
icebp
sbb
xchg
xor
lods
fs
jno
into
neg
clc
push
aaa
ror
test
mov
dec
aad
pushf
jle
and
(bad)
stc
loop
mov
push
jl
cdq
dec
xor
iret
fwait
bound
xor
aaa
jne
jecxz
enter
xor
or
xor
aaa
std
rcr
iret
adc
iret
add
xchg
in
dec
daa
popf
aam
sbb
cmp
push
mov
cld
xchg
movs
add
xchg
adc
inc
cmps
inc
in
jge
dec
jmp
mov
and
pop
jmp
pop
out
(bad)
(bad)
push
or
mov
inc
inc
add
mov
int3
(bad)
in
fs
sbb
mov
or
sub
adc
movs
scas
mov
adc
test
repnz
mov
adc
jge
sub
or
push
dec
pop
sbb
ror
icebp
aad
sti
push
add
inc
sbb
cmp
or
js
movs
cmps
out
jg
fstp
mov
push
call
sub
je
popa
out
ins
inc
lods
jbe
nop
test
or
(bad)
fstp
ins
xchg
push
imul
jne
sbb
add
out
stos
add
pop
pop
repnz
sbb
push
ins
sbb
and
jo
and
jl
adc
test
das
adc
retf
sub
jp
cs
push
leave
std
lds
mov
nop
dec
mov
jne
push
retf
push
xchg
and
ja
hlt
sbb
push
mov
in
push
mov
mov
xor
jmp
out
push
call
es
shr
loop
adc
std
xchg
jmp
xlat
loopne
add
and
jbe
shl
or
daa
mov
out
mov
call
mov
pop
call
call
call
inc
pop
dec
mov
xchg
ficom
cli
cmovb
mov
pop
and
hlt
inc
std
xchg
cmp
inc
movs
pushw
sbb
add
ds
shl
jl
div
jl
cdq
retf
mov
scas
cmp
jae
inc
fdivr
es
arpl
or
mov
das
mov
sub
cmp
cmp
mov
ins
das
aam
xlat
cmc
ins
lods
jnp
pop
inc
jmp
mov
lahf
loop
mov
iret
push
in
and
aam
add
cld
scas
ss
imul
or
jge
mov
add
dec
js
leave
ins
mov
mov
ds
cmc
or
frstor
sbb
or
mov
fidivr
sbb
add
xor
arpl
mov
mov
jne
mov
leave
xchg
(bad)
xor
mov
xor
iret
mov
push
sti
(bad)
retf
dec
bound
pop
ja
addr16
out
cmp
cld
lea
and
push
pushf
in
sub
push
mov
(bad)
xor
push
data16
retf
fisttp
and
mov
bnd
mov
mov
les
imul
push
leave
test
sub
mov
int
and
lahf
mov
push
je
push
cmp
out
mov
repz
mov
adc
fisttp
mov
stc
daa
or
xchg
shr
push
mov
push
dec
mov
cwde
daa
bound
push
mov
sub
dec
sahf
lea
lods
lock
mov
inc
sbb
cmp
and
icebp
out
adc
mov
push
jecxz
outs
jp
sbb
mov
aas
jnp
dec
push
cld
cmp
cdq
js
ror
jae
push
sbb
and
stc
xchg
lds
pop
sub
repnz
push
cmc
std
repnz
int3
pop
mov
imul
adc
mov
cmc
and
add
loop
xchg
jne
test
sbb
(bad)
loope
ret
jle
xchg
fst
sub
push
icebp
mov
aaa
ins
std
jne
test
cmp
add
jle
neg
push
and
push
loopne
xchg
pop
pushf
idiv
jle
adc
cwde
imul
sub
or
fmul
call
rol
aaa
pop
mov
mov
pushfw
loopne
loopne
and
jo
leave
ficomp
es
adc
mov
jecxz
arpl
add
enter
movs
add
test
pop
rsm
push
pop
dec
inc
pushf
xchg
test
lahf
add
bt
out
pushf
mov
js
js
pop
daa
imul
out
push
dec
inc
pop
rol
fmulp
fwait
sahf
shl
push
(bad)
or
jle
mov
rcr
outs
test
xor
push
mov
pop
push
movs
pop
pusha
push
mov
adc
xor
mov
out
sub
clc
test
gs
push
sbb
xchg
jae
test
pop
inc
pusha
je
addr16
jg
das
rcl
pop
xor
mov
pop
pusha
cld
cmps
ror
cld
push
cli
cdq
push
popa
mov
adc
cmp
mov
lock
mov
mov
aad
outs
sub
add
clc
rcl
clc
push
sahf
jmp
xor
xchg
retf
les
xor
mov
test
pop
movs
inc
xchg
push
xchg
inc
jnp
into
ror
ja
dec
push
outs
fldenv
push
or
ins
ins
(bad)
mov
xchg
outs
xchg
and
sub
js
add
scas
pop
mov
mov
cld
xchg
jne
call
call
cmp
xor
fiadd
scas
inc
sub
push
test
push
xchg
sbb
and
enter
lock
pop
mov
loope
(bad)
rcl
popa
add
push
mov
stos
(bad)
ins
ins
xor
xor
mov
fmul
outs
cwde
lahf
xor
mov
stos
jp
out
enter
das
leave
xchg
ins
push
dec
loope
test
push
fbld
test
jno
pop
and
iret
(bad)
cld
test
inc
xor
clc
cli
outs
cmp
pop
(bad)
leave
pop
push
mov
sbb
cmps
clc
jmp
das
in
push
in
cmp
pop
cmp
inc
nop
mov
mov
or
jge
mov
mov
mov
mov
inc
add
(bad)
push
into
lods
aas
loope
sbb
cmp
out
out
xchg
xchg
pushf
bound
out
xlat
stc
pop
push
cmp
mov
outs
inc
sbb
div
sub
(bad)
daa
fld
jnp
mov
dec
hlt
aam
pop
ret
mov
shrd
(bad)
pusha
imul
sbb
mov
adc
xchg
inc
and
push
loope
mov
pop
jge
and
cmps
ja
movs
jge
test
ja
and
adc
ss
inc
xchg
test
cmp
icebp
jmp
inc
movs
repz
scas
cmc
in
hlt
jl
sahf
pop
das
test
dec
stc
and
cmp
jl
jmp
sti
pop
jb
sbb
fs
jle
loopne
mov
jmp
shr
or
sar
xor
inc
call
fucomip
les
retf
lods
ror
(bad)
mov
add
pop
cmc
jge
nop
(bad)
push
sbb
neg
(bad)
dec
addr16
aaa
and
sbb
mov
sub
sti
or
jae
push
xor
jmp
(bad)
lock
push
cmp
nop
adc
mov
clc
ins
pop
je
sub
fdiv
movs
test
aaa
gs
retf
mov
lahf
or
add
adc
repnz
inc
push
outs
lock
cwde
lea
jbe
enter
ins
adc
pusha
loopne
arpl
aam
test
leave
add
inc
xchg
push
stos
pop
dec
add
push
das
or
jbe
loopne
pop
outs
adc
movs
sub
sbb
sub
and
mov
push
ja
in
push
gs
dec
movs
inc
push
ret
rcr
ror
lds
mov
les
pop
mov
adc
mov
loope
push
xchg
cmc
out
xor
sub
(bad)
and
inc
xchg
shl
call
mov
cdq
aas
pop
retf
daa
cs
mov
dec
pop
test
dec
call
and
test
popa
pop
and
jg
aad
imul
sub
sub
and
fild
jecxz
jbe
ret
scas
ja
pop
cmp
movs
lock
(bad)
imul
std
retf
and
xchg
loope
fimul
inc
pop
test
or
dec
and
icebp
mov
repnz
repnz
ja
fcomp
imul
pop
xchg
add
push
xchg
adc
js
cld
int
fsubr
mov
popa
xor
or
adc
cwde
fcmovne
cmc
dec
pushf
mov
out
rol
xor
pop
cdq
gs
gs
ins
das
dec
inc
lea
push
mov
stos
imul
loopne
and
pop
jno
stos
popf
xchg
shr
sub
ins
test
xor
enter
cvtpi2ps
sahf
dec
inc
fidivr
or
mov
ficomp
aad
sub
mov
mov
dec
push
mov
rcr
cmp
add
pop
lahf
sbb
int3
lock
sbb
sbb
add
push
aas
inc
add
gs
mov
jp
leave
xor
int3
cli
pop
mov
es
repnz
out
aad
repz
pop
cmp
cs
push
ins
mov
test
ins
lea
retf
call
dec
and
int3
lds
adc
std
ins
mov
sbb
das
push
sbb
mov
mov
cmp
and
jb
cs
cmp
mov
(bad)
cli
outs
and
repz
push
push
ror
pop
sub
xchg
sub
xor
test
inc
cdq
icebp
stos
xchg
push
outs
jl
fwait
xchg
pop
xchg
mov
leave
mov
cmc
cmps
pop
jns
xor
jae
out
mov
dec
fisub
cmps
ds
dec
ror
sub
mov
mov
lahf
in
in
xor
cwde
sbb
in
imul
rcl
mov
jmp
int3
mov
out
nop
test
sub
nop
loopne
sti
cwde
pop
add
add
pop
lods
sbb
mov
movs
pushf
mov
jmp
jg
stos
xchg
out
mov
push
mov
mov
mov
fcmovu
jg
mov
lds
shr
sbb
dec
mov
pop
retf
sub
dec
add
push
(bad)
and
cmp
xor
inc
mov
jns
mov
push
push
arpl
sbb
mov
pop
adc
add
clc
xor
pop
jmp
mov
jb
lods
ss
mov
xchg
clc
imul
scas
fs
pop
push
add
inc
in
mov
ins
retf
pop
je
imul
dec
(bad)
pushf
pop
sbb
cmp
push
(bad)
ins
repnz
dec
xor
das
cmp
(bad)
cmp
xchg
in
jb
mov
inc
mov
pop
outs
sti
arpl
cmp
stos
push
inc
push
clc
out
pop
xor
(bad)
ret
sub
mov
or
pusha
push
cwde
mov
aam
fdivr
jmp
sub
xchg
mov
adc
inc
mov
or
dec
sbb
mov
mov
mov
push
jns
aad
dec
and
ja
xor
dec
pop
jbe
and
sbb
fidivr
mov
ins
pop
movs
dec
test
add
xchg
push
and
inc
(bad)
ja
or
add
mov
das
jbe
and
vandnps
mov
ret
ret
sbb
pop
sbb
repnz
pusha
push
push
stos
cmc
fcmove
xchg
ds
jb
push
int3
shr
dec
loopne
mov
mov
cli
mov
call
pop
add
add
lods
cmps
iret
cs
test
call
add
jecxz
into
jecxz
out
aad
xchg
xor
stos
sub
adc
sub
dec
or
push
fs
cli
fstp
retf
mov
and
rcl
xchg
popf
in
sub
mov
jns
pop
and
pop
xchg
fwait
and
dec
in
xchg
fist
mov
ror
in
push
mov
pusha
mov
or
stos
or
not
or
mov
mov
jns
popa
nop
es
push
push
imul
sti
add
dec
add
ret
rol
mov
lahf
ret
stc
(bad)
in
je
(bad)
gs
aas
xor
sahf
cmp
(bad)
mov
xchg
inc
and
mov
adc
and
sar
jg
and
mov
sahf
or
(bad)
fsub
jb
add
add
jno
int3
cmp
push
xor
mov
lods
adc
mov
sbb
jg
mov
mov
dec
sti
clc
push
aas
inc
iret
sub
lods
test
test
push
xchg
out
cmc
sub
xchg
test
into
push
pop
jle
loope
fdiv
in
cmp
int3
(bad)
das
xchg
cmp
xchg
sbb
mov
push
popa
aad
mov
daa
icebp
test
ret
dec
sbb
jmp
mov
shl
add
in
repnz
sahf
ins
shl
jge
test
pushf
stc
push
cdq
iret
(bad)
loop
pop
movs
push
aam
dec
aam
jne
aas
adc
adc
push
and
fmul
cmp
push
out
into
cmp
pop
pop
loope
pop
cwde
sar
retf
repz
out
repz
jno
ins
out
cmp
adc
sbb
clc
stos
(bad)
in
or
mov
into
outs
xlat
imul
cmp
je
cmp
inc
pop
mov
cs
scas
les
xchg
mov
movs
dec
lock
xor
movs
xchg
iret
ins
sub
push
or
jp
or
jnp
cmp
jnp
pop
test
enter
mov
int3
pop
dec
push
add
mov
std
mov
add
cwde
push
push
xor
push
inc
dec
das
sub
dec
loop
inc
ja
addr16
sbb
pushf
scas
test
(bad)
imul
mov
mov
fwait
test
or
push
movs
jmp
inc
(bad)
mov
add
ds
inc
mov
mov
std
stos
in
lods
mov
add
ror
cmp
pop
add
fist
fdivr
inc
das
dec
adc
push
scas
lock
inc
ficomp
xchg
call
mov
jo
cs
xchg
gs
adc
out
cwde
inc
jecxz
mov
bswap
jp
cld
dec
loope
jmp
mov
or
aas
dec
xchg
test
add
repz
or
pusha
stos
and
fnsave
(bad)
mov
ficom
push
int3
and
sub
xchg
shl
inc
(bad)
shr
test
loop
push
adc
and
fidivr
mov
in
test
pop
mov
repz
add
jae
into
imul
inc
fcmovnb
jbe
xchg
cld
mov
jmp
sbb
pusha
mov
adc
push
mov
movups
in
inc
cmp
and
cmp
(bad)
mov
cmps
push
rol
jmp
jmp
imul
mov
js
adc
cmps
inc
movs
mov
jge
fsubr
pusha
sub
jl
movs
aas
gs
cmp
pop
loope
ins
ret
or
ins
jp
inc
jb
push
sub
mov
lods
dec
jecxz
push
dec
fwait
lahf
rcl
enter
call
and
jmp
mov
fidivr
inc
das
push
mov
mov
(bad)
and
pop
sbb
je
jecxz
lahf
lahf
inc
outs
or
sahf
inc
fisubr
mov
jmp
int3
pop
enter
sahf
push
icebp
icebp
in
pop
repz
scas
out
dec
cld
(bad)
or
out
ja
fdiv
pop
pop
push
pusha
mov
pop
ret
popf
mov
fisubr
out
sti
daa
(bad)
adc
fimul
out
loope
add
jo
sub
mov
lods
push
das
imul
into
test
or
mov
gs
and
test
aad
and
fldcw
fwait
xchg
dec
in
and
and
stos
and
push
lea
pop
push
inc
aaa
pop
and
cmp
ror
or
fisub
mov
xor
xchg
mov
cwde
xor
leave
ret
scas
push
(bad)
femms
sub
popf
mov
in
in
outs
push
or
stc
or
cmc
pusha
aas
in
or
cmps
fwait
jnp
leave
fs
inc
push
and
push
add
or
jae
stos
push
movs
ja
dec
jecxz
fsubr
xchg
jns
mov
repnz
dec
pop
xchg
mov
add
mov
xchg
add
pusha
in
xchg
mov
sar
xor
inc
ins
xor
lods
cmp
mov
cli
data16
mov
mov
and
into
aas
mov
jno
xor
push
xchg
mov
cwde
inc
std
loope
mov
rcr
sub
mov
cmp
loop
xlat
js
mov
imul
lahf
inc
add
inc
ja
leave
ret
je
pop
mov
push
fwait
mov
popf
lods
ins
cmp
nop
lds
ficomp
or
lds
add
mov
loope
add
fsub
pop
idiv
inc
into
test
or
dec
sbb
xor
out
jo
fwait
add
sbb
dec
jmp
popf
push
ss
cmp
and
sub
cdq
inc
adc
fimul
sbb
cmps
cwde
xor
mov
mov
(bad)
dec
xchg
stos
and
aaa
loopne
add
(bad)
int3
inc
push
leave
cli
cmps
out
jae
ds
ret
in
push
fucom
xor
ins
inc
loop
ret
add
add
call
inc
sub
pusha
(bad)
call
xor
pusha
fstp
pop
jl
mov
(bad)
stos
repnz
xor
inc
xor
add
imul
inc
ret
dec
outs
mov
sub
test
jnp
and
xor
xor
sbb
sahf
sub
rol
fild
push
int
test
cmp
dec
stos
jb
push
fisttp
push
cmp
dec
and
inc
clc
inc
xchg
mov
mov
xchg
mov
adc
cld
cdq
stc
jmp
cli
dec
bound
enter
cmp
push
in
mov
mov
dec
dec
sub
xchg
mov
test
jmp
sub
pop
xlat
cmp
jnp
sub
retf
lea
cwde
xchg
push
xlat
arpl
push
outs
leave
out
xor
pusha
cmp
jle
pop
jne
add
ret
clc
rcl
sahf
xor
into
daa
je
aam
cmp
aas
or
xchg
push
clc
and
inc
mov
(bad)
mov
out
std
cmps
or
mov
fisub
inc
xor
test
call
cmps
jecxz
sbb
lock
push
das
mov
das
push
gs
test
and
and
rcl
mov
cli
cs
pop
xor
jmp
mov
mov
xchg
adc
dec
(bad)
sti
sub
cmp
(bad)
fisub
gs
xchg
mov
jne
xor
adc
xor
les
or
jne
push
stos
div
jge
adc
gs
arpl
fs
aaa
xchg
movs
mov
cmp
arpl
scas
fcmovu
outs
mov
mov
pop
inc
lods
dec
(bad)
ss
jne
and
movs
mov
loopne
fwait
pop
fist
and
push
push
mov
out
push
sbb
xchg
xlat
cmp
push
in
mov
mov
lods
bound
test
adc
mov
dec
jge
mov
push
cmp
fs
rol
and
cmp
ror
cmc
push
xor
inc
lock
arpl
dec
int3
mov
push
stos
sub
icebp
popa
mov
jmp
shl
xchg
(bad)
(bad)
not
xor
sub
(bad)
jmp
ret
test
xor
test
mov
mov
fist
or
(bad)
bnd
pop
cmp
adc
fldcw
xor
mov
ss
and
mov
bound
pop
mov
js
jb
cdq
fsubr
test
(bad)
pop
pop
dec
mov
pop
ret
push
test
sub
mov
(bad)
loopne
mov
xlat
and
sbb
jmp
lahf
repnz
cld
sub
call
adc
xor
xchg
push
fs
das
dec
clc
scas
push
mov
push
pop
pop
push
pop
and
dec
mov
gs
ret
sbb
inc
mov
call
rol
dec
(bad)
mov
pop
fbstp
inc
push
cmc
sub
dec
mov
ins
rcr
or
repnz
pop
pop
leave
in
or
mov
cld
fwait
in
inc
call
or
and
xor
pop
inc
stos
xlat
jmp
loope
xor
dec
bound
cs
test
jo
ja
push
inc
add
mov
dec
xor
popa
xor
pop
data16
jg
loopne
cmp
mov
test
push
xchg
sbb
sbb
(bad)
repnz
enter
call
or
loope
cmp
sub
add
mov
int3
scas
or
dec
sub
push
pop
ficom
jge
inc
jnp
call
loop
adc
lahf
(bad)
push
test
push
xchg
fstp
xor
sbb
in
dec
movs
test
imul
test
out
ficom
push
cmp
inc
sahf
sub
sub
sbb
shl
fisub
ds
adc
jnp
cmps
aaa
test
test
les
(bad)
jle
sbb
xor
mov
cmp
(bad)
xor
push
sar
inc
stos
ret
mov
adc
aad
mov
mov
ins
or
add
scas
cmps
es
add
mov
aam
xor
xor
aam
iret
adc
imul
(bad)
cmp
mov
and
mov
popf
(bad)
fisttp
pushf
(bad)
imul
xor
pusha
sub
pop
(bad)
into
rcl
adc
ja
ror
mov
mov
mov
int3
ins
sti
addr16
mov
jmp
or
add
movs
cli
inc
fbld
push
ins
sub
jle
or
cmps
jbe
jo
cmp
imul
imul
(bad)
out
mov
pop
adc
call
repnz
out
mov
xchg
and
std
add
pusha
cmp
adc
in
mov
pop
addr16
int3
jno
call
loope
imul
xchg
dec
loopne
fimul
push
and
cli
or
lds
adc
dec
mov
cld
loop
cmps
out
jb
or
dec
jge
push
(bad)
(bad)
les
leave
data16
inc
in
cmc
jb
mov
dec
test
dec
in
(bad)
out
xor
cmps
pushf
dec
pop
pop
sbb
fsub
and
cli
inc
out
adc
and
fld
fsub
mov
xor
sub
add
fidivr
dec
jl
cmps
cmp
loopne
out
xrelease
pop
jne
xchg
aas
xchg
xchg
jae
lods
inc
mov
and
or
(bad)
loop
in
add
out
fmul
dec
sub
mov
dec
jp
int3
pop
cmps
int3
sub
scas
dec
xchg
fsubr
mov
xchg
out
xchg
push
sbb
lahf
dec
dec
add
inc
mov
int3
stc
jl
shl
add
push
ror
push
jmp
ret
or
push
icebp
jle
push
ret
mov
sbb
mov
and
mov
jns
das
test
add
cmp
and
cmc
mov
adc
mov
push
das
icebp
daa
jg
call
mov
push
cs
into
mov
gs
inc
cli
jnp
aas
jne
test
sbb
clc
xor
sbb
xor
stc
in
test
rol
push
fcomp
cmp
jb
mov
xchg
leave
lahf
out
(bad)
cmp
test
dec
jns
and
adc
jnp
or
pop
sub
pop
loop
jecxz
lahf
clc
jns
push
fwait
sub
add
test
adc
inc
mov
iret
jnp
movs
add
sahf
js
cmps
dec
in
or
ret
stc
test
in
push
cmps
out
(bad)
adc
push
and
mov
cmp
inc
imul
xchg
mov
std
rcr
and
add
loope
jns
pop
and
stos
ds
push
scas
mov
sbb
or
gs
jecxz
ret
(bad)
lock
mov
mov
sub
and
mov
faddp
xor
fdivp
scas
add
lds
xchg
lods
adc
outs
sbb
xor
mov
or
mov
push
movs
inc
and
and
add
mov
pop
mov
fisttp
inc
sar
xor
mov
xchg
imul
arpl
stos
test
fcomi
retf
fs
mov
push
mov
xchg
popa
mov
push
ins
fisttp
mov
(bad)
pusha
in
in
popa
push
and
inc
lods
fdiv
xlat
std
sub
shl
xor
cmp
repz
xor
lahf
mov
leave
cli
xchg
repz
mov
xchg
mov
lock
mov
xchg
retf
loop
jp
cwde
pop
jmp
push
or
xchg
or
xchg
mov
daa
xor
gs
aas
mov
aas
(bad)
pop
mov
mov
in
sbb
sub
mov
jge
aam
jmp
lock
rcl
mov
pusha
cmp
mov
push
cmp
jns
je
out
loopne
push
(bad)
cmp
ret
pop
push
pop
daa
jb
xor
(bad)
jmp
pop
xlat
lahf
call
cmp
stos
sub
cdq
push
popa
xchg
push
push
daa
mov
fwait
jmp
sub
rcr
cwde
sbb
fwait
idiv
movs
bound
mov
mov
nop
add
and
mov
mov
jecxz
lock
test
xor
div
adc
sub
adc
sub
add
xor
mov
cmp
mov
push
mov
stos
adc
aad
pop
mov
int
rol
cmp
enter
sub
mov
cmp
lock
popf
paddusw
ret
rcl
lds
sub
int3
retf
retf
in
sti
jae
outs
ja
aaa
mov
add
test
jmp
loope
addr16
add
mov
movd
js
cs
(bad)
jmp
imul
aas
aas
jg
pop
loopne
jmp
dec
inc
jnp
push
std
push
fsubr
xchg
add
or
xor
int3
stos
jne
daa
cdq
clc
cmp
pop
cmp
push
cmp
fidivr
mov
sub
xchg
out
cmps
adc
adc
sbb
daa
push
aam
add
xlat
mov
cmp
jp
push
ins
xor
sbb
pushf
xchg
mov
or
and
bound
xchg
cmc
ja
mov
fnstenv
mov
lea
pusha
push
cmc
sbb
aaa
out
rcr
or
dec
mov
lea
ret
es
sub
sahf
xchg
and
fild
add
pop
xchg
test
arpl
jb
inc
and
xchg
cmp
shl
ja
cmp
inc
pop
sub
sub
rcl
add
shl
and
out
lea
lfs
add
pusha
add
pop
jge
adc
and
inc
aaa
daa
mov
mov
mov
push
push
mov
xchg
fst
scas
push
mov
out
dec
aaa
mov
mov
mov
dec
mov
addr16
fsub
inc
stc
mov
fwait
outs
mov
push
ret
cmp
mov
not
push
call
enter
lds
cdq
push
mov
ret
test
jge
and
(bad)
icebp
pop
fs
(bad)
call
push
add
iret
test
inc
(bad)
out
and
nop
ins
idiv
inc
fld
mov
int3
out
test
inc
loopne
cwde
adc
into
adc
(bad)
in
pop
jmp
mov
mov
sbb
cmp
pop
adc
add
int3
lds
or
inc
push
jge
cmps
mov
movs
int
sub
(bad)
call
mov
retf
jo
arpl
xor
dec
retf
cld
jg
(bad)
icebp
loopne
rol
aad
mov
out
bound
icebp
xchg
sbb
mov
or
xchg
neg
cmp
push
or
or
fcmovnu
out
push
or
add
mov
int3
arpl
scas
icebp
mov
inc
push
aas
neg
sub
adc
loopne
out
jns
loope
ret
or
lahf
pop
test
push
faddp
dec
cmc
icebp
cmp
xchg
push
outs
ds
sbb
sub
pop
xchg
imul
popf
mov
inc
imul
cwde
mov
sbb
or
and
and
call
inc
aam
sub
inc
test
mov
out
rcl
popa
stos
(bad)
(bad)
mov
inc
xor
into
(bad)
lods
sub
pop
inc
outs
push
popf
mov
hlt
sbb
mov
sub
ss
xchg
fs
inc
imul
call
xor
lods
js
call
xchg
jb
out
jo
mov
dec
hlt
pop
popf
jecxz
movs
lds
in
pop
scas
das
fs
aam
mov
sbb
sub
xor
in
fcmovbe
cmps
fldcw
not
sbb
out
scas
sbb
ja
stos
pop
bound
ret
sub
pop
int
fnsave
xchg
push
mov
sbb
test
pop
vmwrite
adc
jb
xor
mov
stos
add
xchg
jmp
xchg
mov
adc
scas
movs
add
or
xor
inc
or
fcomip
nop
(bad)
pop
sub
add
push
cmp
pop
pop
int
test
mov
scas
out
jbe
mov
mov
imul
js
mov
xchg
int
cs
int
pop
add
sub
cmp
mov
mov
ss
push
fisub
mov
mov
movs
call
outs
leave
addr16
pop
push
push
add
cld
not
xor
ins
(bad)
(bad)
mov
pop
out
jno
dec
les
(bad)
mov
outs
xor
push
ss
addr16
dec
popf
ja
mov
add
or
sbb
push
cmp
cmp
imul
sbb
pop
std
fsubr
call
push
dec
stc
xor
mov
xchg
pop
je
jb
xchg
push
adc
mov
rcl
jae
push
call
sbb
mov
push
fisttp
jne
shl
outs
jl
ja
or
cmps
jae
lods
sub
jne
and
push
aad
or
scas
pop
and
mov
repnz
outs
push
repnz
push
pop
xchg
jb
ss
retf
and
imul
dec
in
or
data16
push
dec
jne
into
pop
mov
in
sub
mov
pop
aas
push
cli
xchg
ja
adc
aaa
out
in
rcr
imul
test
into
sar
push
xchg
or
test
lea
ret
pop
push
mov
ffree
movs
repnz
icebp
xchg
inc
xor
outs
inc
jno
(bad)
idiv
xor
dec
xor
in
scas
(bad)
and
shl
mov
(bad)
sahf
in
pop
pop
xor
mov
adc
jbe
push
push
xchg
imul
jle
inc
or
xor
mov
sbb
outs
sub
jmp
call
addr16
dec
xor
pop
pop
inc
add
and
xchg
stos
ja
loope
pop
popa
ds
call
mov
movs
adc
icebp
ja
in
icebp
pop
stos
adc
push
pop
pusha
cmp
in
test
daa
jge
cld
jmp
in
push
sub
adc
or
mov
add
xchg
inc
jmp
xor
jle
jbe
jo
hlt
push
cmps
loope
adc
dec
jecxz
les
mov
arpl
(bad)
or
mov
cmp
xchg
push
or
mov
fidiv
add
xchg
and
cmps
ret
mov
and
call
push
fidivr
dec
cmp
lock
jmp
scas
aaa
sti
adc
pop
(bad)
lahf
ror
push
inc
mov
and
loopne
stos
outs
call
(bad)
xor
sbb
imul
stos
adc
fcomp
sbb
adc
es
jmp
std
lea
pushf
and
sub
push
cmc
inc
jecxz
inc
lods
stos
sti
sbb
jg
inc
iret
and
cmps
sbb
adc
stos
jle
int3
ja
inc
movs
xchg
pop
sbb
jne
jns
or
mov
scas
int
push
mov
dec
inc
add
(bad)
stc
push
(bad)
or
adc
fs
or
lahf
sbb
and
sub
xor
leave
dec
call
pop
jge
add
std
test
nop
mov
retf
dec
sbb
add
push
sub
retf
js
sbb
cmp
fistp
cdq
sub
stos
or
call
movs
and
call
pushf
adc
xchg
clc
add
outs
sbb
pop
xchg
jbe
sbb
jge
sub
das
xor
sub
jmp
mov
outs
xor
fs
test
add
retf
out
movs
and
cmc
adc
aas
cs
jmp
leave
mov
outs
popa
mov
mov
daa
mov
es
mov
dec
fisub
es
or
(bad)
jge
popa
sbb
test
adc
mov
pop
cmp
and
mov
xor
cmps
dec
jle
dec
sub
cmp
mov
jns
sub
nop
jecxz
cld
add
gs
fsub
cmp
in
jbe
xchg
mov
enter
pusha
dec
sti
and
test
push
fmulp
add
outs
fld
cmp
imul
rcr
mov
ss
push
fst
push
mov
fs
pop
rcl
int
es
sub
dec
jnp
xor
push
fst
(bad)
outs
push
test
push
cmp
or
sub
pop
in
adc
clc
adc
in
cmp
ret
pop
inc
pop
leave
xor
lock
out
bound
mov
loopne
add
sbb
lods
cs
or
lds
sub
or
push
les
and
mov
xchg
or
add
pop
cwde
fxch
sub
stc
add
loop
mov
bnd
addr16
cmp
das
dec
adc
outs
in
shl
dec
or
jl
pushf
pop
pop
lea
xchg
cld
jle
xchg
scas
ret
lods
call
jmp
xor
push
stos
in
(bad)
aad
idiv
push
je
addr16
push
adc
pop
dec
xchg
leave
pop
or
mov
sub
xchg
cmp
int
and
ins
in
gs
movs
mov
pusha
fsubrp
jmp
inc
mov
pop
mov
inc
outs
push
mov
inc
jmp
aam
(bad)
movs
jle
jne
inc
retf
sub
pusha
pop
or
into
daa
add
in
dec
loop
push
js
push
lahf
cmp
js
xlat
(bad)
push
retf
out
mov
aas
pop
inc
aaa
inc
leave
ds
lds
rcr
rcl
mov
xchg
out
mov
fcomp
ror
and
lahf
icebp
jp
iret
add
shl
pop
ins
jno
(bad)
out
gs
inc
add
das
xchg
push
and
fcomi
test
inc
pop
fcmovnbe
adc
dec
fsubr
ret
xchg
div
and
fwait
pop
add
inc
icebp
imul
fidivr
out
inc
sub
jne
movs
shl
inc
call
lds
jp
pop
jg
shl
jecxz
cmp
xchg
fisttp
mov
pop
das
mov
fild
jl
aam
ja
push
int
imul
inc
jp
xchg
jbe
inc
out
fidiv
or
cmps
popf
cmps
add
mov
aam
mov
rcr
popa
pop
sbb
shl
xchg
sub
mov
push
shr
inc
push
jmp
sub
sub
dec
lock
int
xor
xlat
addr16
mov
popa
add
pop
mov
jo
in
cmp
sbb
cmp
inc
mov
cld
das
mov
jb
mov
jle
int3
aad
(bad)
aam
mov
hlt
add
push
jmp
add
push
push
and
ror
dec
adc
add
into
xchg
popa
rep
cld
lds
mov
fdivr
fwait
std
push
gs
jmp
aad
push
popf
int
xchg
cmps
inc
out
mov
xor
pop
push
fldcw
int3
loop
mov
ss
pop
fld
adc
nop
aaa
xchg
lahf
in
and
pop
fwait
(bad)
shr
les
mov
test
cdq
or
sbb
mov
sbb
jnp
cdq
mov
mov
fmul
inc
or
mov
fmul
fs
push
cmp
dec
ror
mov
cmp
test
cmp
fst
mov
fwait
scas
(bad)
pop
jl
mov
retf
mov
pushf
mov
loop
cli
cli
mov
xchg
enter
call
dec
(bad)
out
icebp
push
stos
stos
jge
pop
and
ds
sub
les
gs
xchg
test
pop
dec
mov
gs
mov
ror
test
push
pop
sar
dec
inc
or
std
stos
xchg
fidiv
mov
popa
cmp
jp
pop
in
cli
repnz
push
movs
call
and
pop
pop
push
mov
(bad)
iret
fwait
fs
xchg
retf
in
in
add
stos
dec
pop
xor
je
adc
imul
(bad)
sbb
jecxz
(bad)
push
rcr
push
xchg
sub
test
xor
imul
add
jmp
pop
dec
scas
adc
dec
adc
repnz
lds
aad
mov
inc
add
jne
cmp
dec
repnz
xlat
xchg
sahf
mov
cmp
aad
ss
jnp
frstor
ins
pop
iret
cmp
call
mov
(bad)
fcomp
sbb
stos
leave
not
dec
mov
cs
add
add
lds
xchg
jmp
sahf
mov
mul
jae
dec
movs
ja
xor
jbe
mov
pusha
mov
fiadd
cmp
cwde
xor
rcl
dec
mov
lahf
cwde
cmps
push
retf
test
rol
dec
push
nop
cs
arpl
pop
retf
test
inc
test
mov
add
and
xor
test
xlat
mov
mov
and
call
cmp
pop
add
icebp
mov
adc
mov
xchg
cmp
dec
push
adc
out
(bad)
(bad)
mov
sbb
and
or
and
sbb
mov
rol
test
mov
(bad)
cwde
(bad)
or
xor
jl
jge
pop
dec
adc
or
shl
add
clc
out
ss
pop
sbb
jo
daa
addr16
adc
xchg
pushf
jo
xchg
test
(bad)
cmp
sbb
out
ret
ss
jg
jae
mov
loop
adc
dec
test
mov
pop
loop
dec
call
and
(bad)
push
push
mov
and
mov
iret
int
pop
sub
cmp
addr16
push
mov
(bad)
xchg
inc
popf
loop
test
push
jg
loop
sbb
fistp
xlat
leave
and
jge
test
xchg
or
adc
in
std
push
ret
call
jmp
jo
push
push
psadbw
mov
xchg
das
es
cmovnp
mov
adc
jp
and
idiv
imul
sbb
and
pop
ror
sub
push
xor
jo
mov
pushf
push
arpl
movs
shl
add
stos
xor
rcl
push
mov
dec
jmp
or
ja
lea
inc
out
pop
xor
dec
push
pushf
mov
or
in
pop
xor
nop
xor
dec
push
add
push
adc
pushf
add
ins
adc
popf
mov
push
loopne
daa
sub
xor
call
lods
cmps
pop
add
enter
shr
dec
push
xchg
test
mov
and
pop
push
shr
into
push
mov
adc
retf
stc
ret
imul
xor
jb
lods
arpl
fcom
mov
inc
mov
sbb
pop
sub
pop
loop
in
cli
mov
xchg
shl
ret
adc
inc
mov
sbb
inc
call
xchg
xor
repnz
mov
dec
add
jge
imul
mov
ret
sti
jmp
(bad)
push
pop
pop
gs
lea
sub
inc
xor
imul
repz
dec
mov
jp
mov
lds
ret
call
push
mov
shl
mov
push
aam
mov
mov
lahf
mov
out
out
sub
fs
xor
dec
mov
mov
sti
nop
jmp
xchg
repz
test
aas
add
arpl
sub
xor
and
loopne
mov
ds
xlat
push
mov
or
inc
sbb
ins
scas
inc
nop
mov
mov
clc
mov
push
sbb
leave
jecxz
shl
sbb
xchg
push
test
mov
jae
push
in
adc
ret
jb
fcmovne
movs
push
ins
shl
xchg
icebp
xor
or
sbb
pop
push
sbb
jp
mov
jae
das
mov
jge
sub
mov
iret
repnz
aaa
xor
ss
(bad)
push
(bad)
jle
cmp
push
dec
out
rcr
cmp
loopne
jle
push
outs
popf
outs
test
jbe
pop
xor
mov
dec
loop
mov
sti
aaa
mov
add
add
cmp
test
push
and
xor
sbb
mov
inc
fs
sub
mov
push
inc
dec
mov
jno
les
jle
into
mov
bound
push
cmp
cmps
leave
and
pop
out
clc
xor
or
jl
jno
ds
jge
cmp
pop
retf
add
ret
xchg
inc
call
imul
data16
xchg
push
popa
adc
fidivr
push
mov
inc
repnz
std
fsub
jns
loopne
cmps
cmp
nop
push
sbb
mov
push
push
aaa
ss
aaa
adc
mov
inc
mov
add
popf
pop
push
fs
call
push
inc
aas
mov
jmp
ins
cmp
ja
sti
rcl
lock
and
xchg
mov
mov
push
(bad)
ja
or
sub
pop
ins
jle
fdivrp
adc
push
in
out
pop
pusha
inc
movs
mov
out
add
dec
sbb
cmp
jne
xchg
mov
mov
cmp
sub
fadd
dec
cmp
clc
in
cs
push
stos
dec
test
gs
retf
fs
jl
in
cmp
push
call
mov
fstp
jp
test
fwait
movs
sbb
push
mov
pop
sti
mov
mov
jmp
or
ins
dec
cwde
fsub
cmp
mov
inc
stc
xchg
cmp
push
mov
dec
xor
shl
sub
dec
lods
jmp
cmps
and
imul
inc
dec
lahf
xor
cmps
shr
push
mov
js
and
shl
cmc
fistp
lahf
fiadd
in
and
xchg
in
dec
test
test
xor
xchg
sub
cmp
mov
mov
movs
or
xchg
outs
push
push
mov
mov
cmp
pop
or
aam
les
dec
xchg
ds
or
pop
sbb
sbb
adc
xlat
(bad)
leave
push
arpl
jnp
fucomi
dec
sahf
add
jbe
imul
test
daa
dec
jno
cmp
mov
std
cwde
add
cwde
into
(bad)
push
xchg
jo
in
arpl
dec
mov
das
mov
ret
(bad)
cdq
je
or
in
gs
xlat
mov
int
xchg
jns
ret
adc
fnstsw
xor
inc
jb
inc
dec
and
sti
jl
mov
and
adc
lahf
inc
pusha
packssdw
loopne
jno
lods
stc
stos
push
repnz
xchg
or
ja
shl
imul
das
mov
addr16
sbb
stc
sbb
push
jo
push
inc
push
pop
mov
push
inc
cdq
ins
sub
inc
fiadd
(bad)
inc
pop
into
shr
lahf
xchg
adc
ins
mov
(bad)
xor
outs
data16
xchg
or
push
cdq
sub
movs
mov
jecxz
fldenv
pop
jge
xchg
cmp
sbb
mov
push
push
xchg
add
jl
fwait
(bad)
mov
mov
sbb
xor
(bad)
les
mov
std
mov
push
sti
fisub
(bad)
jmp
int
stos
sbb
and
jne
mov
retf
lock
inc
and
sub
jbe
bound
jno
jbe
fdiv
adc
das
fs
es
jle
loope
out
xchg
test
scas
dec
adc
jg
dec
and
jbe
ror
sti
aam
bound
cs
pop
(bad)
hlt
clc
xor
scas
in
dec
pop
cmp
dec
ror
mov
ds
jmp
ds
shr
ins
cmp
sti
jne
popa
das
mov
push
loop
mov
add
sbb
int3
xchg
popa
and
jmp
sar
cdq
ret
mov
frstor
cld
cmc
imul
push
ins
inc
jne
lar
add
pop
push
mov
xchg
fs
ficomp
pop
dec
jno
and
dec
xor
pop
scas
ficomp
int
ffree
je
and
jl
cmps
xlat
mov
mov
clc
xor
lods
mov
add
jbe
ss
out
inc
and
sub
jge
adc
(bad)
in
retfw
pop
test
(bad)
outs
and
push
xchg
jp
xchg
imul
jl
js
sbb
scas
sbb
dec
(bad)
jle
pop
dec
sub
or
push
loope
mov
hlt
aam
mov
add
es
fsubr
addr16
and
test
shr
sbb
jg
out
fyl2xp1
jg
ins
pop
icebp
into
pop
push
or
lock
ficom
xor
dec
mov
fstp
retf
pop
cwde
xor
push
lock
aaa
jae
ror
adc
inc
test
aaa
pop
mov
imul
jge
mov
mov
in
inc
add
jns
or
mov
fldenv
mov
cmp
sahf
or
fimul
jbe
inc
inc
retw
mov
sbb
sbb
sbb
push
popa
xchg
out
mov
cli
(bad)
hlt
std
lods
call
pop
in
sub
jle
xchg
stos
sub
pop
cmp
xchg
mov
mov
int3
and
mov
jge
mov
add
dec
xor
jns
xchg
mov
adc
xchg
aas
fdiv
jecxz
push
mov
fcos
sbb
inc
test
mov
mov
jge
inc
cli
movs
adc
inc
inc
rol
ret
adc
fstp
dec
ret
call
sbb
xchg
and
adc
int
mov
neg
adc
xchg
dec
adc
aad
adc
and
popa
dec
or
xor
gs
int3
inc
sbb
push
xor
xor
repz
push
mov
iret
xchg
adc
inc
sub
inc
lock
add
daa
lss
je
(bad)
sbb
sahf
sub
ror
fucomp
out
outs
out
ins
rol
mov
jne
fnstcw
shl
gs
cmp
jo
fst
sub
movs
mov
add
inc
(bad)
cli
(bad)
jmp
xchg
in
push
dec
lahf
outs
mov
mov
punpckhbw
iret
or
mov
mov
sbb
or
or
or
into
icebp
outs
enter
jle
jnp
popa
ja
push
mov
clc
sbb
fistp
popa
scas
push
fdivr
xchg
add
cwde
dec
jp
push
mov
adc
jnp
inc
and
addr16
addr16
mov
push
mov
ins
stc
and
(bad)
in
pop
mov
enter
jl
retf
xor
dec
popa
fbld
pop
leave
cmc
dec
mov
scas
mov
fs
pop
cmp
retf
inc
cs
adc
stos
cmp
xchg
je
mov
or
mov
rcl
dec
pop
repz
outs
or
mov
mov
popa
push
cdq
in
scas
mov
ds
or
lods
fdivp
out
cmc
pcmpeqd
push
xchg
shr
push
test
scas
(bad)
(bad)
inc
xchg
sti
iret
pop
es
mov
mov
push
ds
cli
int3
xor
shl
xor
mov
xor
cmp
jl
cmc
cmps
dec
mov
or
dec
sub
out
push
pop
ins
mov
lea
cmp
mov
cmp
xchg
pop
dec
shl
inc
push
mov
(bad)
sub
enter
loopne
test
scas
arpl
out
rcl
fs
cmc
lahf
test
and
(bad)
xor
mov
stc
jle
test
aad
ins
bnd
(bad)
sub
mov
ins
pop
xlat
jne
es
xchg
pop
aad
ret
outs
push
jl
ret
adc
push
lock
sub
mov
and
push
ret
mov
in
xor
or
(bad)
fdivr
jne
test
sti
lods
jae
pushf
push
xchg
mov
jno
adc
dec
out
adc
repz
cmp
dec
adc
inc
ja
pop
fstp
push
push
test
adc
in
cmp
jns
inc
jge
xchg
cmp
ret
push
out
add
xchg
loop
ficom
in
jg
jne
push
sbb
mov
fmul
sbb
shr
cmps
xor
sub
sub
test
push
out
xchg
ja
xchg
push
sub
int
mov
jnp
mov
test
mov
jbe
xchg
push
mov
cmp
in
idiv
jmp
cmp
stos
dec
jns
outs
pop
(bad)
adc
mov
pop
pop
cld
out
imul
sbb
es
(bad)
xchg
xor
jo
ds
inc
and
fisttp
pop
pop
xor
dec
jle
push
imul
stos
scas
ror
xchg
mov
xor
adc
cmp
sahf
push
pop
(bad)
(bad)
xor
dec
aas
push
fcmovu
jge
data16
aas
(bad)
inc
test
mov
data16
out
cmp
mov
add
scas
cld
jae
ret
ret
arpl
das
jle
mov
scas
and
clc
movs
repz
icebp
dec
xor
push
inc
test
cli
jge
sahf
cmp
sbb
ud2
fdiv
in
mov
xchg
popa
js
cmps
push
(bad)
cmp
leave
sbb
js
lods
or
and
xor
mov
xchg
xchg
and
add
xlat
cmps
sub
add
xchg
push
scas
icebp
sbb
dec
lahf
je
sti
add
test
iret
mov
jno
daa
sahf
jmp
iret
sub
mov
idiv
mov
fs
in
dec
out
ins
adc
xchg
mov
scas
cmp
aas
(bad)
and
push
pop
popa
int
push
dec
cli
sub
sti
mov
popf
mov
out
pop
mov
jo
outs
jp
xor
(bad)
jle
(bad)
idiv
xor
pop
xor
push
ins
call
aas
iret
add
mov
xor
pop
pushf
outs
enter
in
inc
xchg
aad
xchg
repnz
mov
into
arpl
repnz
push
leave
fisub
dec
rcl
movs
(bad)
(bad)
fisubr
(bad)
call
sub
jno
sub
imul
push
outs
pop
sbb
xor
fsub
sub
and
scas
adc
push
movs
push
out
push
mov
fild
dec
add
jmp
sub
xchg
movs
mov
pushf
inc
cmps
hlt
mov
aad
leave
or
sbb
push
push
jge
jge
adc
jns
inc
add
or
pop
dec
jo
jb
imul
ja
cdq
sti
xor
lock
fiadd
movs
sub
sar
mov
add
jecxz
test
popa
xchg
sub
pop
mov
sub
mov
cmp
pop
dec
ins
adc
in
rol
mov
test
sub
into
enter
imul
test
push
cmps
cmp
xor
ret
ins
lea
into
cmps
fsubr
ror
lock
inc
cdq
mov
addr16
dec
mov
ins
ret
pop
fnstsw
mov
aas
sub
adc
cmc
pop
outs
clc
lods
dec
mov
pop
and
imul
sbb
inc
(bad)
js
push
add
mov
(bad)
push
in
or
add
or
lds
cli
pusha
icebp
sbb
mov
add
cmp
sbb
jge
cmp
inc
mov
pop
fsubp
push
repz
cmps
inc
cmp
push
sbb
fsub
push
int
loop
aam
pop
or
jae
aam
cli
loope
mov
cdq
mov
cmps
push
push
inc
stos
ds
and
xlat
gs
xor
(bad)
retf
push
into
jmp
ins
jbe
jmp
inc
shl
sbb
add
pushf
out
adc
fs
movs
aam
and
mov
push
pop
sub
es
jge
push
jg
bound
xor
dec
sbb
dec
inc
bound
fstp
pop
(bad)
outs
nop
shl
push
mov
in
popa
jl
mov
aaa
scas
adc
out
mov
inc
aaa
sahf
pop
ds
(bad)
pusha
ffree
retf
fstp
fbld
les
pop
mov
add
pop
jge
movs
gs
or
jo
adc
cmp
aam
movs
sbb
sub
fs
pop
lock
mov
add
dec
dec
aaa
ds
jecxz
ss
test
loopne
adc
dec
ficom
cmp
add
std
cwde
jmp
add
in
mov
leave
jecxz
or
test
movs
jae
xchg
mov
sub
in
out
sar
jns
or
icebp
add
shl
jnp
pop
xchg
jecxz
and
out
(bad)
dec
adc
fwait
jl
addr16
fmul
mov
cmp
fnstenv
mov
jno
sbb
jmp
xor
jecxz
push
or
push
sbb
pop
out
lods
adc
cmp
test
push
inc
adc
mov
add
add
mov
jp
rcr
test
dec
jb
out
jmp
dec
add
hlt
jns
xchg
dec
jno
xchg
fisub
out
nop
fdivr
dec
sbb
into
cwde
repz
test
xchg
ja
and
pop
dec
mov
inc
not
sub
test
and
sti
int
cmp
push
addr16
xchg
fidivr
ins
scas
cmp
xchg
stc
xor
jmp
leave
jo
mov
mov
push
xchg
mov
add
sbb
pop
mov
popf
gs
mov
iret
rol
inc
pushf
cs
sbb
or
jge
les
dec
fisttp
out
push
add
xor
add
scas
or
ds
into
lock
mov
sub
or
mov
mov
ja
xor
and
jmp
(bad)
sbb
xor
test
int
rol
pop
test
xchg
sub
or
arpl
je
inc
cmp
pop
sbb
sub
ds
js
adc
sahf
xor
pop
push
adc
jne
test
cmp
xor
lods
xor
mov
into
(bad)
xor
mov
add
mov
fwait
pop
jo
icebp
in
scas
(bad)
cmp
in
outs
sub
loope
or
cld
pop
sbb
mov
cmps
(bad)
stos
add
pop
adc
xor
add
cmp
inc
pop
call
mov
leave
mov
jg
lods
mov
inc
inc
jns
gs
ss
test
enter
add
cmp
and
pop
fld
and
jns
inc
adc
ror
pop
mov
and
ss
jne
mov
or
aas
xor
call
mov
adc
leave
shr
mov
fdivr
out
icebp
sbb
ret
xchg
fld
sub
add
cmc
dec
arpl
push
ja
cmps
dec
jo
sub
aam
inc
push
fwait
outs
ret
mov
pop
aaa
jb
pusha
sbb
data16
lock
popa
cld
pushf
lods
push
dec
cmp
gs
jecxz
jecxz
adc
ficomp
int3
in
dec
xchg
hlt
sub
mov
adc
xchg
out
push
pop
in
out
data16
mov
push
daa
xchg
mov
and
imul
xor
xor
sub
enter
cvtps2pi
xchg
lods
fst
ret
mov
jb
and
push
add
add
fcmovb
push
cmp
xor
mov
push
lock
out
repnz
inc
sahf
xchg
scas
shr
jl
or
jl
sbb
ficomp
outs
add
xchg
neg
fisttp
dec
and
inc
shl
sbb
mov
ret
mov
dec
sub
cmp
std
aad
sub
(bad)
jnp
jno
mov
fwait
jns
or
imul
pop
cmp
mov
pushf
and
push
cdq
and
push
xchg
cld
cmp
inc
aad
cld
fild
je
pop
sahf
sub
dec
push
fld
pop
call
and
ret
cmp
add
punpckhwd
xchg
out
mov
shr
cmps
cdq
dec
inc
ins
xor
inc
mov
dec
pop
lock
cld
add
test
inc
shl
sub
jo
push
add
test
pop
fstp
fadd
je
inc
push
xor
call
xchg
dec
mov
outs
nop
sbb
outs
sbb
mov
fcomip
test
pop
bound
xchg
bound
cmp
or
adc
add
icebp
adc
in
jle
add
xchg
pop
(bad)
in
inc
add
pop
adc
popa
jmp
int
jns
mov
loop
or
lods
pop
adc
cdq
fidiv
call
je
cmp
push
add
out
aaa
cld
inc
cmp
ins
jg
rol
popa
std
push
neg
hlt
xchg
xchg
and
test
pop
mov
adc
jmp
sbb
cmp
mov
jo
(bad)
inc
out
and
movups
fimul
pop
xchg
sbb
aam
rcr
das
lahf
stc
(bad)
sub
pop
and
das
pop
push
getsec
and
ja
in
mov
cmp
dec
mov
(bad)
(bad)
jmp
adc
inc
cmp
popf
jp
mov
mov
cld
sbb
xlat
in
rcr
shl
nop
and
loop
xor
xor
mov
cli
xchg
sub
mov
cwde
dec
cli
add
pop
lods
mov
movsx
add
jnp
pop
add
mov
test
sbb
sbb
adc
hlt
lods
push
dec
mov
out
push
dec
test
scas
or
mov
ret
lock
outs
xchg
add
pop
loop
fcomi
or
jne
repnz
and
jg
mov
inc
mov
mov
inc
rcl
mov
and
sbb
sbb
sbb
push
jns
test
les
sahf
or
mov
fsub
mov
and
inc
cmp
pusha
adc
push
xor
lahf
test
js
jmp
iret
jne
cmps
stos
inc
or
inc
push
sahf
test
(bad)
bswap
stc
xchg
xor
imul
cmp
pop
jg
mov
push
xor
cli
dec
ins
sbb
push
repz
jp
pusha
xlat
adc
aaa
cmc
xchg
in
sbb
sbb
(bad)
fsub
inc
mov
ret
mov
nop
pusha
add
mov
xchg
jb
(bad)
and
neg
push
test
lods
inc
bnd
mov
dec
into
mov
pop
sub
mov
int3
add
xchg
imul
xchg
mov
adc
aam
add
(bad)
pop
add
cld
sub
addr16
in
push
xchg
div
mov
or
jne
das
std
dec
icebp
jmp
inc
repz
popf
or
lods
repz
ret
mov
fldenv
ds
sbb
test
data16
cli
jmp
fwait
add
sub
stc
popa
clc
test
jl
sahf
outs
(bad)
fdivr
scas
push
jne
mov
ins
adc
ds
and
pop
in
addr16
push
hlt
push
adc
fidiv
(bad)
mov
add
push
(bad)
std
jno
sub
push
dec
mov
int3
mov
int
mov
jle
jne
popa
mov
jmp
mov
jmp
mov
mov
loopne
popf
ins
or
jnp
sbb
jno
mov
js
or
mov
outs
adc
jecxz
mov
xchg
inc
mov
jmp
(bad)
xchg
scas
push
daa
inc
xchg
dec
jmp
pusha
lahf
fcmovnbe
jbe
push
leave
dec
pop
popa
pop
mov
out
cmc
and
push
outs
sub
out
or
icebp
add
mov
in
ja
aad
ret
movs
mov
imul
pop
sbb
into
xchg
jae
mov
sub
stos
sbb
inc
xor
sub
push
repnz
mov
fstp
sbb
push
xlat
adc
pop
inc
arpl
and
push
xchg
jne
cld
dec
or
test
mul
pop
xor
add
aas
lock
aas
jmp
lea
jl
xlat
out
js
ins
and
loopne
ja
imul
dec
jmp
or
xchg
add
arpl
test
mov
ror
in
inc
mov
mov
dec
mov
in
mov
out
xchg
sub
lods
mov
dec
(bad)
outs
cmp
lods
sub
or
xchg
and
mov
jmp
dec
es
sub
(bad)
sahf
ret
pop
inc
out
xlat
test
retf
cmp
xor
or
xchg
inc
push
push
fmul
lahf
lock
iret
repnz
pop
cld
add
jnp
dec
ss
adc
arpl
and
xor
pop
cmp
jae
repnz
sahf
dec
sub
ins
sbb
jg
xor
push
icebp
aaa
mov
mov
jnp
repz
sub
rcr
mov
cmp
inc
xor
cs
push
loop
add
or
frstor
div
rcl
inc
popa
cmps
std
stc
ds
jno
jecxz
or
ins
push
adc
cmc
dec
inc
bound
mov
push
xlat
mov
inc
pop
jnp
dec
ficom
mov
cmp
ds
mov
push
jle
(bad)
push
xor
aam
or
mov
out
jo
lods
ret
outs
cmp
xor
mov
xor
xchg
lahf
inc
lea
dec
add
popf
nop
mov
sbb
push
das
pop
shl
sbb
mov
xor
fdiv
jae
mov
popf
scas
shr
cmp
dec
mov
push
adc
mov
cmc
cld
imul
jbe
jge
push
push
pop
fmul
inc
and
icebp
jo
mov
mov
fs
jbe
sbb
ret
cmp
jo
fistp
inc
aam
out
jnp
xor
int3
loop
pop
cmps
xchg
loope
in
clc
push
rol
shl
mov
mov
inc
mov
imul
pushf
adc
sahf
cdq
sar
test
inc
in
gs
out
mov
jno
add
mov
mov
cdq
cmp
mov
xor
cmc
(bad)
in
shr
out
and
add
call
popa
jmp
or
sub
ror
pop
dec
sbb
cs
adc
(bad)
ss
xor
jmp
call
mov
ins
mov
pop
add
and
sbb
retf
adc
mov
mov
popf
push
lock
arpl
push
js
fwait
adc
add
dec
xchg
ins
int
clc
popf
fistp
data16
add
les
pop
adc
(bad)
xor
fcomp
push
fadd
mov
mov
cwde
(bad)
ret
outs
add
sub
push
neg
ins
cmp
mov
and
pop
dec
dec
xchg
(bad)
repnz
adc
(bad)
or
pushf
sbb
pop
mov
jae
aad
mov
enter
(bad)
cmp
pop
cld
lahf
jp
jmp
(bad)
mov
repz
repz
cmp
mov
or
stos
mov
jnp
cmove
xor
or
rol
sti
mov
inc
jmp
sbb
sti
jge
cmp
dec
fsubr
repz
in
sar
adc
or
aad
jle
xor
sbb
imul
ja
dec
mov
inc
or
or
shr
dec
xchg
(bad)
arpl
push
push
bound
clc
out
adc
mov
push
pop
mov
repz
mov
xor
push
xor
les
xchg
jle
mov
sub
sbb
in
xchg
in
lods
and
das
ror
adc
pop
add
inc
(bad)
push
fwait
mov
jg
or
xchg
mov
cmp
ss
(bad)
in
sbb
sub
cmp
cmp
add
out
jae
pop
fs
out
lods
repnz
xchg
imul
push
lea
loope
in
stos
mov
aad
xchg
inc
jmp
xchg
pop
mov
test
or
cli
sub
jo
pop
cs
cld
and
and
xchg
mov
iret
jne
stos
xor
cs
in
inc
fisttp
movs
data16
jg
pop
std
pop
in
xchg
pop
xchg
(bad)
mov
pop
dec
call
xor
sub
les
dec
sub
adc
pop
mov
mov
and
and
movs
add
add
cmps
dec
ins
xchg
dec
add
adc
cmc
mov
jmp
adc
rcr
aas
test
sub
(bad)
int3
imul
cmp
mov
pop
add
cmp
push
jbe
in
mov
pop
sub
mov
mov
test
jle
inc
pop
jns
scas
inc
mov
push
push
out
xchg
in
adc
sbb
jb
pop
das
mov
rcl
dec
pusha
add
xchg
cdq
cwde
mov
add
fidiv
es
add
int3
call
xchg
(bad)
retf
imul
xor
xor
mov
mov
(bad)
loope
mov
into
xchg
jle
sar
in
iret
ret
and
mov
sub
idiv
lahf
scas
add
jb
(bad)
push
mov
sar
fs
jne
inc
in
(bad)
(bad)
pop
sbb
mov
dec
pop
call
shr
jmp
cmps
push
cwde
cmp
mov
sub
fwait
mov
std
scas
mov
test
popf
xor
in
inc
jmp
rcl
adc
loop
mov
and
sbb
push
cs
jp
pop
into
iret
xchg
scas
jo
xor
jmp
xor
inc
xor
ss
inc
push
mov
test
push
bound
hlt
sub
lods
dec
gs
sub
and
and
es
fstp
into
das
dec
pop
gs
jp
fidivr
sub
imul
mov
in
push
shr
jb
sti
xchg
push
hlt
es
data16
hlt
pop
fcomp
shl
xchg
cmp
and
mov
mov
cmp
or
ret
dec
pop
mov
xor
push
cs
inc
ss
mov
xor
push
pop
call
sbb
sub
test
mov
dec
add
mov
mov
repz
mov
shl
popa
nop
int
push
hlt
cmp
cmps
mov
dec
popf
ja
adc
(bad)
sar
imul
cs
call
cmc
mov
sbb
inc
sbb
adc
jb
dec
push
out
loopne
(bad)
jnp
sbb
loopne
shl
sub
(bad)
or
(bad)
fbld
lods
cmp
cmp
iret
mov
sub
jmp
cmc
xor
rol
mov
test
test
leave
sub
rcl
mov
cmc
enter
sbb
sbb
sbb
iret
outs
jle
push
push
jns
imul
sbb
mov
retf
es
push
cld
imul
pop
aam
mov
pop
rcl
fsub
movs
mov
mov
pop
jb
mov
mov
add
push
stc
mov
mov
out
inc
aad
stos
ret
fimul
push
jle
cmp
mov
inc
sub
je
jle
out
int3
pop
repz
bound
(bad)
adc
popa
pusha
sub
(bad)
sar
dec
pop
mov
repz
dec
mov
pop
jp
fisttp
rcr
leave
lods
jbe
jl
rol
sbb
mov
jne
or
cli
mov
push
cwde
(bad)
enter
imul
xor
pop
adc
add
or
jnp
adc
adc
xchg
xchg
xor
arpl
mov
sbb
cmp
stos
dec
and
bound
add
lods
pop
or
jg
jge
je
jmp
out
xchg
dec
xchg
mov
or
aad
dec
dec
dec
je
push
jne
cmps
and
mov
in
cwde
std
inc
loop
pop
mov
nop
mov
jno
sub
jmp
lock
mov
setg
inc
shl
rcl
cmp
cmp
in
and
mov
fistp
mov
sub
loope
mov
mov
mov
xchg
aam
sub
retf
scas
shl
in
dec
mov
add
pop
push
sti
imul
mov
das
aam
push
xchg
mov
stos
ret
imul
enter
(bad)
daa
cmp
add
add
lods
cmp
mov
cmp
xor
std
movs
sar
jne
or
xchg
adc
mov
(bad)
aam
lock
scas
outs
mov
xchg
add
inc
in
shr
cli
pop
test
xchg
and
cmp
dec
neg
cmc
sar
jb
aam
retf
fmul
mov
stos
mov
fidivr
outs
daa
push
jno
mov
loop
mov
dec
inc
enter
iret
je
out
mov
sbb
mov
call
fisttp
cdq
rol
inc
shl
mov
js
and
ficomp
jns
dec
pop
lods
dec
das
push
test
pand
(bad)
js
jb
es
retf
xchg
call
popf
lock
addr16
xchg
scas
jae
sbb
mov
mov
in
jmp
loope
ror
fcomip
xor
stos
test
hlt
iret
cmps
mov
fisubr
adc
sbb
gs
stos
xchg
push
fidiv
lods
mov
inc
test
adc
xor
mov
popf
pop
popf
jle
jg
or
and
inc
int3
idiv
fistp
ror
push
out
or
fisubr
into
mov
cmp
and
pop
and
mov
add
cmp
(bad)
sbb
dec
push
push
mov
shl
mov
jo
mov
push
std
fisubr
cs
xor
int3
or
pop
sub
scas
jge
and
jl
adc
hlt
push
xchg
jl
sbb
jmp
cld
pop
sub
jo
lds
pop
pop
mov
cmps
stos
sub
pusha
cld
pop
imul
pop
sar
mov
std
aas
adc
xchg
jmp
jb
adc
mov
jns
sahf
pushf
mov
cmp
rol
sar
or
push
jo
jae
or
in
or
push
mov
ds
(bad)
mov
inc
aad
sbb
sbb
push
mov
sub
sub
ss
xchg
adc
inc
arpl
push
(bad)
out
xchg
pop
int
jno
stos
pop
movs
retf
stos
loope
mov
icebp
icebp
xchg
aas
fs
in
(bad)
clc
add
mov
xor
scas
retf
sahf
and
pop
push
enter
add
hlt
shl
adc
adc
(bad)
js
retfw
add
mov
pop
cs
fnsave
sbb
mov
dec
fmul
inc
movs
inc
scas
ds
and
sbb
test
inc
popf
inc
out
xor
dec
repnz
dec
mov
pop
push
in
test
test
cmc
push
and
xor
dec
xchg
adc
fdivr
cmp
xor
sub
mov
loope
aam
lahf
adc
jno
mov
imul
imul
in
mov
sti
sbb
(bad)
mov
aam
inc
add
inc
(bad)
jge
mov
jecxz
mov
sub
ret
fiadd
sar
xchg
cmp
push
sti
lods
mov
push
retf
popa
xchg
sahf
mov
mov
leave
xor
mov
jg
aas
mov
ss
jg
sub
add
push
push
xchg
pushf
inc
mov
jae
mov
mov
adc
out
aaa
js
xchg
mov
pop
int3
mov
pop
lock
repnz
aad
pop
and
pusha
popa
xchg
rol
cmp
jno
repz
dec
add
rcl
mov
pop
int3
mov
mov
dec
push
pop
push
and
lods
out
out
mul
push
sub
jmp
repz
(bad)
in
or
repnz
das
or
sub
cdq
pusha
push
pop
and
out
jecxz
xchg
fsub
mov
in
(bad)
jb
jnp
jmp
push
mov
push
call
push
or
mov
imul
addr16
or
js
(bad)
fwait
cmp
dec
sbb
out
jnp
out
mov
cmp
jae
(bad)
cdq
(bad)
sbb
cld
push
jmp
mov
add
out
ret
and
jo
adc
cmp
jp
mov
add
xlat
pop
pushf
mov
sub
es
adc
cld
sub
push
cmp
pushf
enter
mov
fistp
int
ins
ret
scas
or
clc
mov
int3
pushf
push
xor
mov
arpl
stos
repnz
mov
add
stos
in
retf
rcl
pop
push
jecxz
and
fisttp
pop
imul
pop
cs
scas
inc
mov
outs
add
push
mov
fwait
out
mov
dec
je
test
dec
jb
stos
mov
cdq
xchg
gs
es
in
sti
sub
(bad)
push
jp
retf
inc
xchg
(bad)
rcr
cmps
xchg
int3
cmp
sbb
mov
in
nop
add
xchg
cmps
jnp
stc
shl
shl
call
cmp
mov
jp
sub
scas
xchg
and
mov
sub
dec
jo
div
ins
inc
sub
jb
xor
xor
rol
xor
or
cmp
or
es
cmp
mov
mov
(bad)
lahf
inc
dec
mov
mov
xor
ret
aam
inc
pop
mov
daa
rol
es
ror
xchg
cmp
ffreep
test
mov
mov
into
adc
test
add
(bad)
push
dec
jg
hlt
movs
enter
adc
adc
sar
push
pop
and
js
jmp
into
adc
adc
dec
aad
retf
lods
push
pop
leave
inc
ror
test
sar
cs
add
mov
das
cs
les
aaa
pop
mov
mov
dec
aaa
pop
pop
(bad)
and
mov
aad
mov
clc
int
sahf
cli
cmp
push
cmps
retf
mov
in
push
pusha
in
lds
xor
pop
push
and
jmp
jns
push
repnz
or
or
out
fst
dec
sbb
or
repnz
ins
shl
and
loop
sub
clc
jns
call
xor
inc
xor
daa
sbb
xchg
adc
dec
sti
push
in
aas
mov
je
sbb
out
sub
in
fld
jl
icebp
aad
dec
fwait
enter
mov
jne
es
repz
(bad)
stos
lahf
jno
arpl
int
mov
aas
pop
out
fstp
mov
loopne
(bad)
(bad)
arpl
outs
jo
xchg
and
mov
mov
and
xchg
xor
lods
ds
and
sub
loope
pop
inc
test
jo
jge
aaa
fbstp
outs
cld
xchg
jno
das
push
cmp
pop
imul
outs
ja
pop
inc
out
imul
sub
sub
inc
lock
ret
int3
dec
sub
cmp
dec
ret
inc
or
jmp
ror
dec
push
sahf
repz
(bad)
(bad)
pop
shl
pop
aam
mov
and
pop
adc
mov
in
fst
cmp
jne
fbstp
dec
mov
fisubr
sub
lods
(bad)
shl
pop
test
ficomp
sub
xor
stc
mov
push
(bad)
adc
(bad)
pop
aas
sbb
(bad)
mov
aad
push
fdiv
vpunpckhwd
cdq
popf
fsub
sub
aas
leave
mul
or
jno
jecxz
dec
xlat
pusha
lock
call
movs
xchg
dec
lahf
or
arpl
fwait
jbe
mov
rcr
add
mov
mov
xor
pop
loopne
(bad)
inc
pop
pop
adc
popf
mov
pop
cmp
and
sbb
jmp
jle
adc
jnp
(bad)
push
ins
adc
push
pop
xchg
int
xchg
cs
aam
fild
adc
mov
lods
jo
adc
sub
mov
push
push
adc
and
xor
or
xor
xor
xchg
out
cwde
xchg
es
jmp
aad
mov
movs
enter
int3
mov
cmp
pusha
arpl
icebp
repz
(bad)
mov
popf
mov
out
sbb
aaa
cs
jne
std
fcomp
xor
cmp
inc
sub
xchg
cmp
pusha
sbb
inc
push
call
mov
sub
rcl
pusha
or
inc
add
fisubr
shr
into
out
test
jb
outs
aad
stos
retf
xchg
sbb
sbb
outs
dec
adc
or
cwde
fs
test
stos
shl
sbb
cld
lahf
loopne
ins
dec
mov
out
adc
cmps
shl
mov
cmp
call
mov
dec
inc
je
into
adc
jecxz
dec
mov
inc
jo
dec
jno
in
popf
leave
xor
pusha
jno
jmp
jl
dec
sub
and
jbe
fsubr
retf
(bad)
in
jnp
(bad)
push
pop
call
rep
nop
ins
mov
mov
pop
adc
cld
popf
call
or
mov
fdivp
sbb
xchg
jmp
je
gs
sbb
adc
xor
mov
arpl
jnp
or
push
stos
out
or
mov
adc
(bad)
xchg
push
jle
mov
loop
push
pop
adc
jg
and
jb
nop
movs
or
mov
and
lahf
aad
lock
nop
frstor
aam
icebp
les
scas
iret
mov
into
out
fstp
mov
fstp
out
cmp
das
jmp
jle
or
or
in
(bad)
hlt
push
adc
cmp
dec
mov
inc
jne
call
sub
popa
pop
cmp
jno
movs
mov
test
neg
int3
sbb
adc
mov
xchg
xchg
mov
jp
add
aaa
sar
fs
out
jbe
mov
push
mov
les
data16
nop
out
ins
jg
sti
(bad)
(bad)
push
sbb
int3
cs
scas
dec
xor
mov
stc
cmc
jmp
mov
in
pop
cmps
mov
mov
jge
sub
sub
push
sub
push
imul
mov
mov
mov
pop
jmp
pop
stos
out
sub
sti
and
jecxz
mov
fist
mov
fs
jb
push
xchg
test
jns
cmp
lods
lea
dec
movs
out
(bad)
imul
in
push
add
fild
mov
not
inc
das
xor
push
jne
pop
jb
mov
inc
sub
je
outs
jl
and
xchg
or
add
jge
cs
push
mov
retf
inc
push
mov
cmp
les
mov
add
jae
add
jnp
dec
ja
mov
mov
push
inc
xor
sub
jmp
cld
pop
sti
inc
inc
adc
xchg
aas
add
mov
bound
xchg
xchg
in
push
and
loope
cmp
in
add
pop
jnp
cwde
inc
dec
ror
mov
mov
test
pusha
js
jae
adc
adc
xor
pop
jp
icebp
or
inc
or
or
mov
xor
jmp
sub
pop
xlat
pop
out
clc
pop
add
pop
shl
lea
xchg
ds
retf
push
movs
sub
sub
call
in
adc
or
ror
sti
movs
enter
sbb
leave
mov
jmp
or
pusha
popf
sbb
in
int3
int3
push
inc
push
xchg
es
repnz
sub
jl
rsqrtps
mov
mov
cmp
stos
push
shr
inc
xchg
fwait
xchg
cmp
enter
mov
push
add
(bad)
addr16
gs
test
nop
dec
mov
xor
ja
mov
push
inc
push
add
jmp
sbb
test
jno
ret
test
fidiv
fistp
test
ds
sub
aam
cmps
das
in
cwde
out
mov
push
scas
adc
mov
stos
push
fs
sub
frstor
lods
or
fild
ds
sub
popf
ficomp
and
push
sbb
mov
sub
pop
push
sub
mov
and
ins
arpl
pop
(bad)
pop
iret
inc
fidiv
in
cwde
stc
leave
imul
out
or
push
std
imul
dec
or
push
cld
fdivr
addr16
std
scas
pop
fmul
jecxz
cmps
inc
cmps
(bad)
sbb
call
xchg
mov
mov
push
push
mov
sbb
std
sbb
cmps
imul
enter
lods
out
bound
lahf
inc
lds
pop
or
rcl
cmp
adc
in
leave
push
cmp
neg
inc
jmp
inc
popa
xor
jecxz
mov
pop
mov
test
add
fstp
mov
and
inc
out
fnstenv
mov
push
es
xor
jl
pop
fadd
push
xor
xor
in
add
adc
and
cmp
cli
mov
cmp
clc
dec
pop
(bad)
or
das
xor
cmc
xor
sub
test
jge
and
test
cmp
fnstsw
(bad)
jnp
inc
push
push
or
jae
sub
loopne
add
jae
cmp
lock
pop
cs
enter
scas
push
cmp
idiv
push
xchg
int
std
hlt
shr
and
xlat
inc
dec
mov
cs
lods
div
mov
add
adc
push
and
in
cwde
ins
in
(bad)
mov
imul
sub
pop
xchg
aad
jmp
mov
mov
les
lahf
cwde
ss
ret
pop
loope
loop
xchg
in
push
or
stos
es
mov
out
xchg
retf
and
jne
and
cmp
clc
movs
int3
jnp
xchg
(bad)
jmp
mov
shl
add
mov
and
xchg
jb
out
cmp
sbb
jecxz
dec
cmp
cmp
sub
mul
fucomi
xchg
cmps
cmp
and
xor
icebp
pop
mov
xor
fisttp
push
xor
sbb
adc
cmps
or
mov
movs
inc
pop
mov
mov
mov
xor
jo
popa
rcr
adc
push
outs
fistp
scas
movs
lods
addr16
and
push
mov
loopne
mul
pop
ins
aad
les
mov
xchg
sub
and
or
cli
shl
mov
xor
rol
add
test
popf
or
clc
loopne
or
push
xchg
jmp
in
call
mov
or
push
mov
icebp
lahf
jecxz
aad
jl
mov
ror
fs
hlt
test
mov
sbb
retf
fwait
mov
(bad)
xor
les
ror
mov
fcom
lds
xor
addr16
pop
mov
xor
push
std
js
(bad)
adc
mov
mov
pop
ret
fwait
call
out
mov
mov
(bad)
sbb
movs
mov
sbb
push
inc
fist
push
aam
retf
lods
out
mov
ja
adc
jne
test
push
xor
(bad)
cmp
lea
dec
dec
stos
pop
or
inc
aaa
add
cmp
jle
dec
inc
xchg
ins
adc
addr16
sar
cmps
add
in
xor
and
xchg
xchg
fsub
xor
jne
dec
cmp
nop
push
cdq
add
cld
add
add
outs
mov
jae
cli
mov
pop
mul
push
cs
cmp
das
sti
leave
out
iret
dec
or
or
pop
movs
cmps
sub
test
enter
push
cdq
or
addr16
popa
push
ror
jge
sub
lahf
fmul
test
popf
push
retf
outs
jo
mov
push
bound
xchg
inc
adc
mov
xor
inc
or
jnp
jge
jnp
lods
push
pop
or
out
pop
in
movzx
xlat
inc
cmc
nop
popa
std
cmps
adc
cmp
loope
mov
jnp
das
call
js
fmul
outs
mov
addr16
stos
mov
cmp
(bad)
fmul
sbb
movs
je
pop
outs
mov
push
push
push
pop
push
mov
daa
jl
mov
aas
ja
xchg
mov
shl
shl
aam
dec
sahf
mov
ret
add
outs
out
mov
and
mov
in
push
mov
push
xor
nop
int3
mov
aad
loope
cwde
out
jne
sub
les
xchg
iret
dec
adc
push
jae
in
jmp
and
bound
(bad)
xcrypt-ecb
cmps
(bad)
jnp
movs
mov
(bad)
lods
pop
pop
sbb
inc
jbe
jg
into
pop
mov
jecxz
lods
in
pop
mov
pop
jg
push
js
enter
fcmovnb
lahf
cmc
ja
mov
xchg
lods
jo
mov
xor
arpl
push
xchg
jge
push
push
dec
(bad)
aam
loopne
shl
lahf
(bad)
mov
push
fmulp
add
add
test
add
cmp
retf
sbb
scas
or
jmp
cmp
int3
and
and
inc
and
pop
push
xor
sub
ins
daa
mov
mov
das
sbb
ss
retf
inc
fs
sbb
or
outs
call
xor
xlat
push
test
push
xor
mov
add
jne
jns
movs
mov
jae
ins
mov
cwde
(bad)
cmp
mov
cmp
jne
inc
xor
push
out
xor
hlt
mov
dec
sub
adc
test
mov
push
jbe
xor
cmps
jnp
fsubr
mov
push
xor
ds
sub
mov
xchg
pop
pusha
retf
mov
adc
ss
and
push
ret
xor
enter
ins
mov
stos
test
jge
or
sbb
mov
jae
arpl
inc
retf
xchg
ins
mov
mov
jae
ror
movs
(bad)
mov
sub
add
inc
sub
aaa
ja
fmul
or
jmp
(bad)
cs
mov
adc
adc
or
addr16
cmp
(bad)
rep
cmp
outs
inc
inc
fnstenv
xor
movs
fwait
dec
pop
movs
cli
mov
cs
das
xchg
out
fstp
jle
aaa
pop
mov
mov
push
cmc
neg
inc
xchg
lods
hlt
call
fdivr
inc
mov
mov
mov
and
lds
gs
jmp
outs
fsubr
jae
mov
push
int3
lods
mov
adc
dec
call
dec
aad
pop
test
(bad)
jnp
mov
lods
out
aad
scas
mov
in
popf
icebp
ins
adc
jmp
and
push
aam
add
cmp
push
sub
fbld
cld
sbb
cmp
stos
xchg
popf
adc
xor
out
movs
das
mov
push
stos
gs
dec
sub
push
cmps
in
sbb
and
js
imul
lods
xchg
push
mov
repnz
push
enter
(bad)
sub
adc
inc
sbb
aaa
lahf
dec
mov
pop
shr
mov
(bad)
xlat
xchg
std
out
add
mov
sar
mov
daa
sub
mov
pop
hlt
xor
cmc
shl
inc
arpl
mov
pop
jl
mov
mov
dec
ret
das
mov
(bad)
jmp
std
sbb
mov
jae
add
ret
pop
loope
retf
adc
xchg
into
mov
and
(bad)
xlat
(bad)
lahf
in
sbb
add
enter
dec
xchg
mov
in
dec
mov
xor
es
push
sar
stos
sbb
jge
add
scas
push
(bad)
shl
add
or
push
(bad)
retf
or
loop
outs
loopne
mov
popf
hlt
popf
jns
mov
das
push
leave
mov
rol
div
xlat
cmp
adc
fyl2x
push
(bad)
int3
js
test
cmp
arpl
cmp
in
cmp
nop
cmp
fimul
in
(bad)
dec
std
out
das
in
xchg
dec
cmp
cld
or
ret
nop
mov
mov
std
inc
dec
pop
lds
inc
es
ds
arpl
pop
aaa
mov
loope
mov
add
icebp
adc
add
in
test
adc
lock
inc
test
dec
or
mov
mov
inc
in
clc
xchg
mov
pop
ficom
bound
adc
jae
pop
aam
es
jmp
addr16
inc
pop
loop
mov
out
push
out
adc
mov
cs
js
les
push
dec
mov
sub
int3
xlat
popf
mov
icebp
push
sub
or
ins
ds
fwait
stc
inc
in
mov
jo
sbb
mov
rcr
cmp
sbb
adc
or
xchg
and
xchg
test
inc
movs
xor
cmp
or
jno
xchg
pop
cmc
stos
push
ds
js
jo
jnp
push
inc
imul
mov
push
sbb
sub
xor
push
aas
out
fsubr
xchg
int
xchg
aad
dec
(bad)
cdq
jmp
xchg
imul
repz
mov
(bad)
outs
mov
dec
xchg
ja
(bad)
fwait
mov
(bad)
into
movs
in
daa
nop
std
ficomp
add
and
pop
or
gs
imul
jmp
ffreep
dec
lahf
loope
mov
add
or
call
inc
test
sub
pop
ins
xchg
popf
sahf
sbb
xchg
outs
ret
call
add
inc
es
push
push
fiadd
sar
lods
clc
mov
inc
in
ds
les
cmp
imul
fisttp
jmp
movs
jo
jmp
push
or
mov
ret
jp
(bad)
pushf
clc
push
fdiv
and
jo
jp
packuswb
mov
dec
xor
sbb
jno
add
pop
add
fmul
inc
push
adc
retf
push
push
and
dec
xchg
xor
fld
ficomp
mov
xchg
retf
jge
ss
in
daa
scas
xchg
adc
test
(bad)
into
ds
inc
mov
mov
(bad)
push
idiv
push
push
test
lods
aam
jns
jecxz
inc
push
hlt
xlat
push
sar
and
cmc
dec
test
and
daa
loope
sub
cmp
jp
into
ret
ja
out
push
jno
jae
dec
sub
out
pusha
je
xor
xor
movs
cmp
sub
cmp
inc
popf
mov
in
aad
lds
sub
jp
jmp
bound
xchg
add
neg
mov
jl
imul
adc
jl
cmp
shr
(bad)
jae
ret
push
neg
xchg
leave
or
pop
xchg
(bad)
stc
fisub
sub
sub
repz
(bad)
push
jbe
or
lds
adc
dec
int3
and
cmp
jge
and
ret
jns
loopne
pop
es
jmp
ret
xor
addr16
and
sub
addr16
ins
sbb
int
mov
pop
push
inc
fadd
jmp
scas
les
imul
dec
push
jo
or
xchg
loop
sub
cs
pop
dec
(bad)
sub
(bad)
shl
icebp
mov
mov
pop
cmp
loopne
pop
out
bound
sbb
pushf
cmp
jo
sub
sbb
int
aas
and
jge
mov
adc
test
fst
pop
bound
pop
int3
mov
sar
add
inc
sub
xor
pop
sbb
sbb
jnp
mov
cmc
pop
aam
out
sbb
jae
sbb
test
xchg
jge
cmp
push
movs
and
xchg
(bad)
lahf
jno
outs
inc
ss
cmp
cmp
add
jnp
adc
adc
lods
push
push
retf
pop
pop
rcr
or
daa
popf
mov
mov
inc
out
jnp
fdiv
test
popa
imul
lods
(bad)
xchg
ret
xchg
push
lds
inc
(bad)
pop
mov
test
aaa
xor
xor
inc
iret
movs
inc
(bad)
(bad)
fidiv
jp
add
ret
clc
ins
into
adc
pusha
xlat
inc
dec
dec
inc
pop
imul
mov
push
out
aad
in
jmp
aas
xor
mov
lods
test
sub
and
pop
fucom
ja
and
fdiv
cdq
mov
adc
dec
pop
popa
jo
cs
xchg
sub
adc
mov
std
das
(bad)
popf
cld
jle
fstp
push
ret
sbb
mov
ja
mov
adc
adc
add
sub
push
stc
into
fld
adc
dec
popf
(bad)
fucomp
xor
jbe
je
mov
(bad)
cmp
mov
inc
(bad)
stos
shl
sbb
iretw
push
das
std
push
cmps
test
call
loop
pop
cmp
stos
adc
repz
addr16
mov
mov
mov
fwait
sub
adc
sbb
lods
mov
inc
outs
xor
push
out
dec
jge
movs
sahf
shl
sub
fcmovu
stos
stos
pop
cmps
pushf
sbb
sub
sub
inc
ins
nop
fs
xchg
sub
mov
adc
pop
adc
loope
xor
out
fs
(bad)
shr
call
sbb
lea
out
cmp
cli
sbb
pop
mov
jle
aam
and
jmp
in
xor
dec
adc
test
jbe
aam
xchg
mov
lods
pop
gs
lahf
xchg
xor
mov
inc
mov
xor
xchg
sub
fs
inc
in
adc
out
shr
or
je
push
out
inc
or
fst
add
js
sub
add
call
adc
iret
pop
in
rol
jbe
push
stc
or
sbb
mov
pop
std
adc
arpl
xchg
imul
sar
cwde
mov
inc
inc
imul
push
push
(bad)
fidivr
adc
xor
scas
jne
popa
cli
inc
mov
xchg
add
or
or
cmps
(bad)
pop
xor
jo
xor
js
adc
sbb
ret
stos
pop
push
push
ret
lods
mov
sti
loopne
fadd
ja
xor
cmp
push
adc
fs
cwde
add
test
and
xchg
mov
enter
add
rcr
cld
sti
adc
sbb
adc
imul
pop
jl
jne
cmps
sbb
out
dec
mov
xchg
add
jbe
push
fst
adc
jl
test
movs
adc
mov
mov
out
fnstsw
hlt
aam
test
cmc
mov
mov
add
nop
int
jne
aaa
sub
fdivrp
jp
aaa
push
jbe
mov
in
loope
mov
and
pop
mov
cmps
repz
pop
imul
sbb
push
mov
dec
inc
cmp
xchg
mov
add
hlt
repnz
push
mov
mov
(bad)
popf
cs
(bad)
jl
fs
cwde
cdq
xchg
rcl
cdq
call
xor
pop
mov
jmp
aaa
ficomp
fadd
lods
adc
xchg
cmps
retf
lods
loop
mov
push
push
ret
push
and
js
add
clc
adc
or
lock
inc
cs
repz
push
sub
mov
or
and
push
cmp
call
push
inc
or
dec
aam
push
fwait
sbb
idiv
dec
dec
cmp
push
add
mov
mov
ins
leave
scas
ficom
data16
mov
inc
std
inc
(bad)
cmp
and
cmps
(bad)
jbe
jnp
mov
dec
dec
outs
adc
push
dec
(bad)
add
aad
call
out
gs
inc
in
loopne
mov
pop
xchg
push
push
sahf
rcl
xchg
pop
sbb
cmc
mov
and
mov
sbb
clc
push
pop
(bad)
mov
mov
add
and
mov
adc
push
(bad)
mov
push
dec
enter
inc
aas
les
repz
push
adc
sub
out
pop
retf
sbb
fsubrp
xor
test
cmp
aad
or
sub
ins
in
mov
mov
inc
iret
iret
mov
jo
jge
inc
pop
ret
dec
mov
clc
(bad)
jo
mov
mov
pop
das
inc
adc
adc
pop
adc
mov
mov
mov
stc
call
adc
into
cmps
fcomip
mov
pop
shl
shl
and
pop
add
aas
inc
push
leave
stos
add
adc
push
in
cld
leave
push
push
pop
dec
fcom
adc
pop
call
hlt
jmp
and
jle
cmp
xchg
in
rol
adc
push
cmp
push
out
mov
mov
outs
leave
arpl
movs
cli
int3
scas
cmp
fs
pop
mov
cld
mov
inc
mov
jecxz
fs
(bad)
push
xchg
es
xchg
sahf
dec
movs
mov
push
sub
inc
jle
sub
ins
mov
push
cmp
bound
mov
aas
aaa
inc
jnp
dec
retf
add
in
jle
or
fistp
les
xchg
hlt
idiv
mov
cmp
and
jno
push
shl
je
push
cmp
je
lods
loopne
xchg
add
push
xor
ds
inc
int3
cwde
gs
pop
shl
add
sbb
add
fnstcw
add
int
loop
push
dec
addr16
pusha
sub
imul
cmp
pop
test
pop
mov
mov
cmc
nop
sar
imul
sar
or
cli
popf
shl
repz
sbb
pop
lods
mov
adc
test
cmp
or
push
pushf
and
sbb
inc
jb
pop
div
cmps
frstor
jmp
sub
fild
dec
test
ror
test
xchg
xchg
xchg
jecxz
icebp
imul
scas
ins
xchg
inc
mov
xchg
mov
pop
xchg
mov
adc
int3
dec
int
push
fcom
call
loop
add
popf
or
scas
or
lahf
add
inc
xchg
enter
pop
dec
pop
mov
cld
aad
addr16
leave
js
stc
rol
cmps
or
mov
lahf
movs
xor
fdiv
sub
mov
loop
fimul
mov
aad
inc
clc
xchg
pushf
inc
jmp
cmp
and
das
test
mov
in
cmp
lahf
das
out
xlat
in
xor
mov
loope
ins
push
test
nop
jo
dec
loopne
jecxz
jmp
jne
mov
push
and
js
jno
jle
rcl
mov
popa
repz
jg
jl
mov
jecxz
add
adc
(bad)
rcr
fmulp
xlat
xor
out
sbb
frstpm(287
out
movs
ret
jns
ret
mov
push
pop
cmps
out
repz
xchg
pop
aad
call
xchg
push
lock
mov
jno
inc
shl
popf
(bad)
rol
add
imul
and
dec
adc
fidiv
xchg
clc
xor
fild
into
ret
or
jnp
push
xor
js
popa
jp
mov
mov
call
jp
pop
rcl
xor
popf
cmp
ror
and
inc
jo
cwde
dec
mov
jge
and
add
mov
push
fiadd
(bad)
mov
pop
push
dec
clc
adc
ror
pop
push
xchg
fdiv
jno
loop
scas
xor
mov
iret
and
sub
jg
fcomp
test
pop
rcr
psraw
pop
stos
pcmpgtb
sub
jo
jge
xor
sbb
push
sub
inc
jmp
arpl
popa
ss
jmp
mov
xchg
sbb
clc
mov
inc
dec
jae
adc
dec
lods
adc
dec
jp
mov
pop
inc
add
pop
in
jp
je
lahf
ja
dec
or
pop
push
out
test
fcomp
addr16
cmc
scas
jge
pop
out
in
jmp
and
mov
and
stos
jbe
inc
lods
sbb
or
das
lds
push
xchg
lock
add
shl
fidiv
add
into
cli
push
pop
mov
jl
iret
cdq
cmp
mov
pop
sub
sbb
dec
(bad)
jmp
bnd
adc
inc
(bad)
popf
out
mov
add
mov
test
and
call
les
adc
mov
adc
adc
lahf
call
fisub
stos
call
jg
cwde
icebp
xor
mov
popf
mov
loop
pop
or
pusha
push
addr16
fsubr
xor
inc
popa
jg
loope
or
sbb
pop
out
cmp
into
adc
out
mov
dec
dec
pop
push
sbb
mov
popf
out
adc
inc
push
push
or
fstp
mov
lods
push
movs
sahf
mov
mov
setne
stc
das
lock
push
retf
or
push
movs
icebp
dec
ret
sbb
aas
jp
not
jno
and
jae
cwde
inc
mov
xchg
jecxz
add
or
or
leave
fwait
cmp
lods
cmp
dec
fsub
aas
cs
je
or
sub
jns
ins
loopne
inc
add
xor
jns
daa
adc
leave
push
fidiv
inc
and
stos
fiadd
int
and
jne
test
cmc
rcl
jae
div
xor
mov
jmp
lods
and
les
dec
add
or
push
nop
out
fs
mov
fwait
das
mov
stc
push
ss
mov
sbb
inc
dec
mov
xchg
jnp
sbb
(bad)
std
xchg
fstp
mov
fiadd
cdq
jo
add
shl
pop
out
or
jl
mov
retf
fild
or
push
adc
jmp
imul
fs
pop
sub
loopne
hlt
push
cmps
push
inc
cmps
aad
sbb
adc
sbb
or
dec
add
and
pop
pop
push
mov
pop
in
(bad)
rol
sbb
ja
test
dec
cmp
out
push
mov
jmp
push
icebp
push
cli
nop
push
mov
xor
add
mov
dec
fldenv
xor
in
nop
xor
and
or
ins
mov
stos
test
and
int
sub
push
jo
mov
ret
cli
repnz
mov
fwait
out
sub
imul
hlt
dec
cmp
inc
pop
repnz
mov
push
or
push
dec
xor
sbb
(bad)
adc
pop
adc
outs
jmp
shr
rcl
js
xor
pop
repnz
pop
popf
cmps
sub
aam
(bad)
rcr
add
jno
mov
xor
sub
fcomi
mov
out
push
ret
adc
ret
sbb
mov
sub
loopne
mov
iret
cmp
dec
loope
push
mov
mov
add
test
dec
inc
ins
mov
jne
mov
push
sub
aam
cmp
repz
fisttp
repz
cmps
ins
stos
xchg
and
mov
pop
xchg
std
inc
jns
mov
inc
sub
fs
imul
clc
std
mov
inc
clc
in
adc
lahf
cmps
push
lahf
push
mov
dec
xor
fimul
cld
data16
inc
xchg
pop
sbb
es
fs
push
cmp
test
fwait
repnz
and
mov
adc
mov
(bad)
lods
pop
je
mov
add
retf
or
xchg
inc
xlat
cdq
sahf
or
test
add
pushf
cmp
dec
pop
xor
ds
std
call
cld
les
jp
jnp
repnz
es
inc
push
rol
dec
jnp
xchg
in
mov
jle
pop
daa
stos
sbb
or
arpl
repz
outs
int
std
inc
rcl
cmc
mov
inc
push
pop
in
adc
cmc
cwde
(bad)
jmp
dec
adc
pop
push
fadd
sbb
mov
(bad)
aaa
sti
xchg
stos
movs
mov
lods
pop
in
mov
pop
scas
dec
fs
xor
clc
dec
jle
push
(bad)
cli
jnp
add
sub
in
popa
pushf
or
fist
jmp
mov
pop
fsub
push
mov
scas
mov
jmp
xchg
dec
mov
sbb
sbb
(bad)
mov
mov
mov
leave
aaa
ds
into
out
jle
push
nop
and
pusha
pusha
mov
xchg
jb
jae
pop
or
and
fcmovbe
xor
mov
mov
call
stc
add
cmc
in
inc
mov
push
call
mov
stos
sbb
(bad)
out
ror
sub
cmp
(bad)
les
push
mov
test
repnz
clc
jge
xor
push
and
rcr
nop
jns
and
sbb
mov
and
add
push
mov
lock
xor
lods
js
jl
cmp
cmps
lock
lods
punpckhdq
cmp
ss
jae
adc
pop
mov
xchg
adc
addr16
xor
out
js
out
mov
mov
xor
out
and
daa
jb
add
fcmovbe
inc
mov
mov
ret
scas
fwait
sbb
mov
sti
inc
mov
mov
stos
or
xchg
jnp
test
aam
mov
and
xchg
hlt
or
xchg
in
pop
dec
cld
pop
dec
inc
fcomp
cmp
lods
xchg
movs
scas
pop
or
mov
cmps
mov
xchg
mov
dec
aaa
imul
lea
mov
hlt
mov
loop
add
movs
add
cdq
scas
scas
push
mov
dec
inc
js
mov
icebp
cwde
mov
push
mov
push
cmp
jmp
out
mov
xchg
retfw
daa
add
test
xor
adc
aad
pop
mov
dec
ret
out
(bad)
fisub
fwait
xchg
sub
mov
add
outs
mov
daa
imul
test
test
imul
mov
out
mov
sub
or
std
into
xchg
iret
and
cmc
inc
sub
es
cmps
jmp
cmps
mov
scas
in
xor
jo
xlat
jae
mov
enter
dec
sbb
shr
mov
mov
movs
cs
or
lds
int3
mov
icebp
dec
(bad)
jnp
adc
add
test
cld
imul
push
hlt
sahf
adc
stos
jge
test
adc
and
aas
mov
add
cli
loope
fcmove
rcr
sub
pop
mov
ins
leave
in
jb
push
cs
inc
aaa
add
stos
pop
fiadd
sbb
ror
mov
sbb
xchg
or
cs
sub
cmc
mov
jg
call
(bad)
adc
and
mov
shl
les
inc
arpl
xchg
shl
push
cwde
mov
xchg
and
pop
(bad)
and
jle
bound
push
add
ret
(bad)
lea
adc
mul
icebp
mov
scas
setbe
(bad)
xchg
mov
push
mov
or
and
aam
repz
or
xchg
push
mov
int
pop
je
daa
cmp
pop
xchg
adc
or
aas
xchg
dec
lds
imul
test
lods
test
xchg
retf
ja
or
xor
mov
(bad)
inc
mov
retf
sbb
mov
push
neg
iret
into
mov
and
dec
test
xchg
mov
jmp
call
pop
push
xchg
fsub
xor
push
fstp
push
or
jmp
rcr
pop
retf
test
dec
mov
and
loope
nop
mov
bound
ds
adc
or
ds
jp
adc
bound
aas
pop
mov
ret
mov
add
sbb
sbb
sub
push
retf
pop
push
mov
dec
rep
imul
pop
cmp
xchg
retf
test
call
cmp
or
xchg
mov
cdq
sbb
inc
in
rol
mov
loopne
xlat
dec
(bad)
dec
aad
and
or
ins
jno
dec
push
inc
mov
mov
inc
pop
pop
sbb
fyl2xp1
dec
scas
mov
std
mov
pop
test
mov
sub
ds
adc
fs
sub
cdq
mov
popa
shl
ds
xor
mov
addr16
repnz
leave
les
mov
xor
adc
loope
dec
jnp
aam
mul
pop
cli
(bad)
jl
sub
repnz
jnp
or
xchg
push
neg
xchg
ror
add
and
je
in
fs
loope
adc
lods
or
es
adc
in
cmps
push
add
xchg
popf
and
sub
push
ss
ja
jbe
xchg
pop
xchg
adc
sub
and
ins
test
cmp
mov
mov
xor
or
add
jne
mov
cmp
ret
fwait
and
xchg
test
jp
xor
jnp
sbb
cs
push
int3
xor
jecxz
gs
mov
repz
mov
sub
test
jp
arpl
mov
push
push
mov
std
mov
aas
(bad)
test
imul
(bad)
cmp
pop
dec
mov
dec
cvtps2pd
nop
adc
push
cmp
cmp
push
or
loope
add
stc
push
pop
jb
aaa
sbb
test
or
sbb
inc
jg
lods
ss
adc
out
and
pop
loopne
lahf
mov
adc
scas
mov
mov
test
outs
div
retf
mov
sbb
retf
adc
inc
enter
sbb
hlt
or
xor
lahf
out
ret
cmp
inc
repz
push
sbb
fdivr
je
xchg
cmp
iret
cmp
jmp
adc
shl
cs
je
in
fst
xchg
inc
jno
adc
fist
enter
nop
adc
out
push
xor
add
dec
lods
push
fcomip
push
jl
ins
fsub
or
test
jp
dec
sub
pusha
push
stos
push
jmp
or
sbb
sbb
outs
push
getsec
in
jns
popf
ror
sub
push
jo
js
mov
jne
dec
jle
fimul
leave
imul
xchg
retf
sbb
data16
daa
(bad)
popa
fisubr
pop
clc
lahf
loope
xchg
ja
dec
mov
std
add
js
iret
push
mov
add
mov
sub
adc
sub
sbb
imul
icebp
xchg
push
pop
or
jne
sbb
rcl
dec
sub
pop
rcl
inc
sbb
bnd
hlt
cmp
(bad)
clc
into
imul
xor
dec
jno
push
pop
mov
and
test
and
stos
xchg
jo
pop
loope
hlt
cld
pop
ds
loopne
dec
repnz
sbb
retf
mov
add
clc
push
jnp
int3
add
cmp
(bad)
test
arpl
mov
mov
jne
call
mov
es
xor
aaa
les
mov
fiadd
je
adc
sub
push
(bad)
inc
ja
push
(bad)
in
jo
cmps
xchg
cmp
lods
cmp
cmp
fst
not
retf
and
fiadd
retf
jg
xor
jne
outs
pop
adc
mov
cmps
cmp
push
adc
cmps
std
mov
or
pushf
sub
inc
out
repz
push
aad
ret
dec
inc
int3
enter
sub
xor
pop
mov
int
mov
mov
(bad)
cli
dec
push
xchg
cmp
out
push
loop
inc
cmp
lea
dec
pop
nop
in
mov
and
and
test
imul
sub
stos
mov
xchg
outs
or
push
sti
mov
(bad)
xchg
sbb
aam
xor
mov
jecxz
imul
stos
mov
push
dec
add
push
pop
stc
dec
dec
dec
mov
and
xor
dec
ins
pop
and
mov
test
xchg
cmp
cmp
(bad)
jmp
int
clc
or
rol
gs
cmps
pop
stc
not
cld
out
ins
(bad)
fwait
xor
cdq
cmp
call
sub
js
sar
and
rol
inc
stos
xchg
push
(bad)
jmp
push
jecxz
js
pop
mov
test
mov
xchg
xchg
xor
pop
iret
leave
adc
scas
out
mov
fwait
mov
out
jg
push
enter
(bad)
movsx
and
push
arpl
dec
(bad)
fldenv
pusha
shr
adc
push
dec
sbb
test
mov
jmp
mov
movs
push
fdivr
shr
aad
inc
sbb
(bad)
retf
(bad)
or
xchg
add
lds
jo
pop
dec
and
adc
cmp
push
(bad)
mov
dec
cwde
lahf
add
dec
cmc
(bad)
cmp
mov
aaa
xchg
test
(bad)
or
mov
jmp
push
popa
and
mov
mov
fnstenv
adc
dec
sbb
retf
stos
(bad)
push
dec
sbb
jmp
aas
mov
call
adc
or
aaa
jp
call
pop
sbb
add
xchg
or
xchg
enter
adc
(bad)
or
mov
(bad)
pop
mov
das
rol
aad
aaa
test
pop
add
pop
xor
sbb
pop
add
cmps
mov
jg
aaa
or
mov
and
mov
jno
(bad)
xchg
mov
jmp
pop
mov
cmp
inc
sbb
shr
jl
int3
sti
or
push
mov
dec
ret
inc
cmc
or
retf
and
or
sbb
jo
or
mov
pop
xor
sbb
shr
test
mov
int3
scas
xchg
jle
xchg
xchg
mov
les
sbb
lods
sbb
and
bound
or
add
pushf
dec
sub
lock
shl
pop
cmp
inc
xlat
and
mov
fwait
in
imul
lods
(bad)
cld
mov
adc
and
and
mov
int3
iret
mov
(bad)
pop
stos
sbb
test
daa
es
cdq
iret
pop
sbb
jmp
scas
pop
mov
mov
add
and
imul
in
ins
jmp
jg
sub
clc
add
call
xchg
sbb
xchg
je
jo
xor
cmps
push
adc
mov
jg
and
test
test
pop
dec
pop
jo
je
leave
adc
pusha
div
test
inc
lods
cli
xor
cdq
inc
xchg
mov
aam
lea
icebp
js
sub
or
dec
imul
jmp
gs
cmovg
push
pop
test
retf
fwait
and
mov
push
and
pop
lods
in
push
or
xor
in
xchg
test
mov
pop
pop
mov
arpl
sti
gs
mov
mov
lock
xor
lock
sar
sbb
push
js
into
es
dec
push
aam
adc
retf
jmp
sbb
int3
rcl
or
push
push
popa
ins
jae
div
stos
add
neg
mov
dec
push
sub
mov
leave
dec
fidiv
mov
imul
xchg
stos
out
jg
xor
leave
repz
push
call
sub
xchg
pusha
fdiv
fstp
mov
test
push
cld
dec
cli
sub
mov
push
loop
or
scas
xchg
fs
xchg
aad
mov
(bad)
rcl
sbb
inc
xchg
not
pop
les
test
int3
jmp
or
jp
cdq
loop
mov
cmc
pop
mov
mov
xchg
(bad)
fisubr
test
es
call
pop
xor
dec
cmp
shl
cs
xchg
fwait
push
mov
xchg
or
fimul
inc
jnp
dec
xlat
daa
xor
xor
add
data16
pop
mov
lahf
add
fs
es
add
xor
in
dec
cmp
or
cmps
cmp
push
stc
shl
jns
mov
mov
dec
jbe
mov
loope
ds
mov
and
in
in
push
(bad)
imul
cmps
ret
pop
out
jp
adc
jle
push
and
mov
mov
adc
jns
inc
add
push
imul
cmp
out
aas
shl
or
repnz
ficomp
mov
push
add
mov
dec
xchg
mov
aam
ss
jo
mov
int
xor
cwde
or
nop
xchg
out
mov
jnp
fisubr
push
gs
leave
jmp
jp
sbb
lods
lods
pop
and
stos
xchg
jb
mov
jge
aam
dec
xor
dec
in
mov
call
out
rcr
clc
sar
mov
jmp
outs
ins
push
add
jne
loop
dec
jmp
popf
pop
icebp
dec
mov
inc
adc
out
sub
enter
sbb
ss
xor
jmp
out
jmp
cmp
pop
shr
jae
adc
fsubr
sbb
mov
push
pusha
inc
mov
mov
xchg
call
xchg
inc
add
ds
(bad)
popf
pop
scas
mov
ret
cmp
sbb
cmps
and
add
dec
inc
cmp
and
sub
jge
inc
repz
scas
divps
je
mov
inc
pop
cwde
in
mov
pushaw
fistp
xor
jmp
jge
(bad)
sbb
mov
dec
and
jae
js
in
sar
push
push
pop
pop
scas
cmc
xlat
dec
fdiv
lock
aas
imul
loopne
bound
test
xor
dec
sub
test
push
out
adc
das
stos
push
cmp
iret
retf
fidivr
pop
cs
dec
inc
into
inc
je
mov
mov
imul
jge
adc
mov
jl
stos
pop
scas
xor
adc
icebp
icebp
jl
sbb
adc
fcom
mov
and
pushf
mov
xor
inc
and
sbb
add
xchg
popa
sbb
adc
inc
adc
test
fst
or
add
inc
scas
inc
xchg
xor
fs
scas
imul
lds
jns
cmp
fcom
call
leave
imul
dec
rcl
sub
push
inc
in
adc
aam
mov
push
imul
pop
sbb
(bad)
jo
xor
(bad)
jle
or
loop
stc
pop
shl
jl
pop
lock
pop
push
ret
inc
call
jne
(bad)
pop
sub
cmps
bound
inc
cld
stc
out
add
stos
stc
xor
bound
inc
sub
nop
mov
sar
dec
pop
mov
mov
iret
out
cs
xor
ds
cmps
dec
add
jnp
(bad)
pop
push
popa
mov
pushf
into
sbb
push
dec
es
daa
add
ja
retf
stos
mov
daa
push
daa
mov
mov
mov
mov
mov
or
xlat
push
xchg
aad
jbe
dec
cmc
xchg
test
lods
(bad)
iret
icebp
jge
and
ja
bound
cli
jmp
movs
fwait
cmc
int
outs
push
and
xor
std
fild
imul
xor
push
gs
mov
push
add
out
popf
jecxz
inc
jo
movs
inc
ss
cld
popa
mov
jo
popf
mov
dec
jbe
mov
jle
loopne
cmps
pusha
movs
xchg
jmp
jno
sub
adc
ss
pop
cmp
adc
bnd
sub
es
pop
aad
xor
push
jecxz
aas
inc
or
dec
push
jl
xor
lock
(bad)
into
je
cwde
stos
mov
repnz
test
add
dec
or
movs
mov
test
mov
and
or
mov
retf
mov
jmp
shr
scas
popa
jae
clc
fs
xor
iret
cmps
fistp
fnsave
imul
outs
call
jecxz
jno
mov
push
mov
repz
ss
jns
xchg
not
(bad)
sub
cld
xchg
jmp
or
add
in
inc
cmp
sar
and
push
dec
movs
loopne
or
daa
or
pushf
int
sbb
dec
jg
dec
add
scas
or
fadd
iret
sbb
jne
dec
(bad)
std
push
pop
xchg
lods
adc
stos
jo
or
dec
lahf
sahf
xchg
add
pop
retf
push
or
jb
rcr
fidiv
inc
add
imul
outs
pop
or
loope
bound
sub
dec
mov
mul
pop
add
fistp
inc
sbb
call
xchg
outs
ja
movs
push
fwait
(bad)
iret
mov
xor
mov
mov
js
mov
pop
push
cmc
cmps
push
inc
push
ret
mov
fs
or
and
jmp
inc
popa
add
inc
add
mov
rol
pop
adc
stc
nop
jno
push
in
adc
shl
or
mov
icebp
mov
sbb
xor
mov
xlat
mov
cmps
imul
jbe
xchg
out
sub
(bad)
mov
push
addr16
outs
mov
add
xor
jnp
cli
sbb
enter
mov
cmp
fwait
not
fistp
jge
sub
mov
cli
pop
mov
mov
hlt
ins
xchg
xor
push
cmps
xor
loop
xchg
add
dec
or
repnz
aad
cmp
mov
inc
cmp
test
or
mov
push
push
cmp
ltr
push
sub
add
lock
wbinvd
cmp
fistp
in
push
dec
inc
out
fimul
xor
push
out
add
mov
and
mov
add
test
pop
cli
or
add
jb
push
jle
sub
popf
pop
rcr
push
and
rol
int
sahf
pop
jge
push
xor
retf
mov
mov
xor
pop
add
movs
or
push
xchg
addr16
jecxz
pop
jae
pop
fxch
xlat
sub
stos
xchg
mov
push
cmps
add
mov
sub
cmp
fs
lea
sar
fs
mov
fld
popa
clc
ins
add
xor
dec
bound
sub
or
and
and
jmp
adc
into
or
or
cmp
mov
stos
mov
adc
mov
jge
ins
xor
cmp
pop
mov
mov
(bad)
int3
adc
outs
adc
and
mov
call
or
cmp
and
or
movs
out
inc
retf
dec
mov
jns
mov
xor
sub
push
popa
stc
ins
cmc
(bad)
fcomp
push
mov
faddp
inc
adc
push
inc
pusha
pop
gs
inc
mov
or
and
push
call
push
mov
pop
jo
push
and
loope
call
icebp
repz
pushf
inc
mov
ds
test
test
shr
in
adc
sub
fcmovne
(bad)
ins
cmp
sub
adc
adc
push
mov
icebp
in
(bad)
fdiv
(bad)
push
sbb
ds
push
fiadd
aas
inc
rol
xchg
and
out
mov
je
xor
in
cmps
sbb
repnz
(bad)
aad
sub
(bad)
jmp
sub
repz
fild
das
bound
dec
sbb
pavgb
in
addr16
leave
mov
fild
xor
xor
push
sti
add
dec
aas
sub
ret
scas
or
and
or
jo
test
xor
cmp
retf
shl
jecxz
mov
enter
cmp
ds
out
lds
pop
cmp
inc
(bad)
repnz
hlt
jno
cmp
mov
sbb
and
(bad)
cmp
mov
shr
pop
sub
or
cmp
(bad)
scas
push
int
mov
frstor
out
add
ins
xor
daa
pop
sti
imul
(bad)
mov
push
sub
inc
xchg
aam
fild
sahf
adc
fnsave
jno
mov
ret
mov
mov
dec
push
push
ficomp
aad
cmp
cmps
dec
dec
jnp
jl
jno
out
cmp
sub
popa
cmps
add
fcomp
push
mov
jp
jne
sub
or
cmp
mov
adc
pop
push
jnp
dec
inc
rcl
pop
dec
ins
dec
retf
inc
push
mov
xor
pop
arpl
add
inc
sub
push
leave
add
fcom
test
jg
cdq
inc
lods
cmc
test
jle
sub
fld
pop
ja
sub
lea
add
sub
sub
push
hlt
dec
add
push
mov
stos
ret
in
pop
push
push
mov
xor
data16
jg
inc
jl
inc
add
sbb
pop
cld
adc
out
mov
(bad)
out
mov
cwde
out
pop
repz
push
fsub
dec
lock
leave
fdiv
ins
rcr
fmul
dec
aaa
cmp
out
cli
mov
lds
xlat
and
sar
ds
xchg
push
jmp
mov
xchg
mov
stos
mov
or
cmp
or
sbb
fwait
enter
xchg
jecxz
and
(bad)
mul
pop
adc
outs
pop
or
add
das
imul
fs
mov
fldenv
lock
add
fcom
mov
pop
push
sub
xchg
test
add
test
mov
gs
hlt
sbb
(bad)
ins
je
and
dec
or
mov
and
pop
or
pop
xchg
outs
enter
sahf
and
std
cmp
(bad)
or
or
mov
mov
leave
sub
xor
jge
and
fisttp
fsincos
test
addr16
mov
add
mov
pop
(bad)
cmps
je
outs
test
push
sbb
push
xor
ret
fdivr
adc
sbb
dec
sbb
cmp
jmp
fimul
es
ret
sar
retf
xchg
emms
push
adc
jmp
sub
push
cmps
cmp
and
cli
and
(bad)
xor
xchg
inc
mov
loope
mov
arpl
mov
inc
inc
int3
sbb
sbb
adc
not
sbb
add
loope
sub
dec
mov
add
popf
xor
es
ins
ins
mov
xchg
dec
mov
inc
dec
and
push
cmps
popa
clc
add
cvtpi2ps
mov
shr
pop
pushf
shl
stos
and
inc
aas
das
xor
sbb
inc
daa
pop
xor
xchg
cmp
sar
xchg
loopne
add
iret
inc
adc
adc
btc
inc
mov
adc
and
and
cmp
imul
(bad)
cmp
jg
ins
cmp
popf
rcr
cdq
pushf
rol
cli
lods
std
pop
jmp
xlat
icebp
jmp
call
or
lahf
in
jae
adc
outs
ins
lea
xor
jbe
fcom
sub
add
and
jnp
inc
and
pop
sti
push
fadd
add
xchg
cmp
jge
sub
stos
fs
mov
test
sbb
loop
sub
jl
adc
and
sbb
mov
cli
cmp
inc
mov
mov
pop
test
lahf
clc
and
test
xchg
aad
(bad)
cmc
loope
test
das
in
sub
nop
push
ds
mov
adc
adc
pop
dec
mov
mov
xchg
outs
inc
and
add
rol
xchg
frstor
repz
imul
icebp
cmp
imul
fistp
addr16
jbe
cmp
clc
jl
and
test
or
cmp
xor
add
or
pushf
cli
add
pop
add
bound
inc
or
cwde
scas
mov
stos
jg
test
xor
out
mov
outs
cmc
imul
mov
mov
cdq
dec
mov
cs
dec
leave
cli
push
xor
enter
push
jmp
aad
pop
and
ficomp
cld
inc
sahf
imul
sub
pop
jb
mov
aaa
mov
mov
repnz
mov
in
aas
and
sub
in
(bad)
lea
clc
fisttp
(bad)
adc
push
cmp
push
pop
cmp
in
push
dec
dec
pop
shl
rol
les
daa
mov
jl
ja
push
dec
mov
add
cwde
outs
ins
add
clc
sbb
(bad)
jb
adc
push
lods
test
sbb
rcr
jle
shr
(bad)
jmp
fistp
(bad)
mov
sub
test
adc
ret
push
lock
mov
je
push
or
push
mov
sub
lock
scas
push
ins
sar
push
sub
mov
mov
push
dec
ins
mov
out
dec
cld
pop
mov
imul
dec
mov
(bad)
dec
xchg
sub
int
mov
and
sahf
fadd
add
retf
or
rcr
adc
mov
dec
scas
inc
and
mov
add
mov
push
jae
dec
mov
shl
loop
add
(bad)
push
sbb
mov
mov
mov
jl
xor
xor
lods
cmps
leave
sub
retf
dec
mov
in
sti
ss
retf
popf
in
mov
sub
inc
mov
sbb
adc
pop
ja
cmps
stos
mov
and
pop
sbb
push
mov
movs
cmp
fidiv
adc
outs
sar
pop
push
mul
adc
xchg
xchg
scas
ffreep
dec
clc
inc
jae
fstp
jecxz
loope
out
inc
addr16
aaa
test
test
adc
into
push
dec
cmps
push
adc
xchg
mov
ficomp
and
ins
repz
out
mov
add
retf
call
fs
mov
cmps
cmps
pusha
mov
fst
push
cwde
xchg
dec
or
mov
and
add
ins
clc
imul
pop
mov
jno
push
adc
(bad)
inc
fisttp
(bad)
ret
jnp
nop
nop
(bad)
sbb
xchg
lods
cmp
push
scas
fimul
adc
call
sbb
ret
xlat
xor
xor
sbb
cmp
je
mov
jmp
inc
cmp
(bad)
and
popa
sbb
adc
xchg
scas
and
sub
outs
cdq
mov
xchg
add
xchg
imul
or
mov
das
xor
pop
mov
loopne
push
cli
in
retf
cdq
or
mov
out
jle
fstp
test
rol
jae
scas
xor
lods
add
jmp
add
mov
mov
mov
ja
(bad)
fld
(bad)
ds
dec
and
imul
int3
xor
loope
test
stc
sub
repz
out
and
cmp
fst
cdq
cmp
xchg
cld
(bad)
cmp
mov
fcomp
popa
(bad)
aam
pop
cmp
lock
push
ret
jecxz
cmp
(bad)
scas
je
push
loop
pop
movs
push
and
sti
movs
ss
adc
cmp
xchg
mov
call
push
clc
je
cmps
aas
stos
pop
clc
push
fmul
ficom
ins
test
sar
sub
or
inc
mov
pusha
mov
mov
or
shr
je
out
add
je
movs
ds
push
call
mov
movs
xor
test
lock
es
int
aaa
sub
cwde
iret
lods
in
xchg
mov
movs
sar
or
rcr
stos
xor
cmp
in
inc
fs
push
sbb
dec
fs
or
push
mov
scas
ficomp
jge
mov
add
outs
pop
mov
mov
arpl
jnp
call
add
jns
sub
(bad)
popf
imul
sbb
test
push
xlat
dec
mov
pusha
lock
ja
cmps
mov
and
jbe
pop
cmp
std
jmp
jle
cmp
xchg
pusha
dec
pop
mov
push
sbb
lock
mov
jge
ja
xchg
out
repnz
aad
test
ins
mov
imul
cmp
and
div
adc
loopne
add
cmp
and
outs
cmc
(bad)
int
xor
jmp
outs
pop
out
and
ror
(bad)
inc
push
xchg
cmp
es
or
cmp
and
sbb
aaa
hlt
stos
pop
test
ins
das
and
adc
jbe
xchg
jb
retf
cmp
cmc
fstp
mov
pop
loop
imul
fadd
and
jg
lods
repz
in
jae
add
xor
mov
jns
sbb
arpl
rcr
daa
lods
adc
aas
loopne
aaa
cmp
sar
inc
and
mov
cmp
xchg
sbb
dec
jge
in
call
sahf
mov
mov
jno
jp
popa
mov
sbb
imul
movs
sub
pop
jne
xchg
cld
cmp
loop
cmps
cs
sbb
xor
push
xor
dec
jbe
or
hlt
cmps
mov
loopne
cmp
xor
and
mov
std
push
inc
bound
aam
loop
cmp
adc
jo
mov
loope
data16
lods
inc
loope
jb
adc
popa
adc
xchg
mov
add
imul
mov
or
int3
es
sub
clc
dec
jo
sub
mov
mov
xchg
push
into
das
push
call
inc
retf
leave
xor
mov
shl
movs
test
xor
add
push
xor
sub
pop
or
stos
xor
ror
pop
lods
loope
cmp
mov
xchg
std
jp
ficom
mov
add
xchg
int3
dec
sahf
das
or
or
jno
mov
in
ret
mov
call
sub
pusha
retf
fwait
in
pop
xor
fistp
push
mov
mov
fbstp
test
jmp
push
mov
stc
or
in
adc
xchg
dec
fiadd
mov
cmps
and
add
jmp
je
cmps
popa
jge
sbb
fisub
push
outs
xchg
ins
ror
rol
mov
loop
dec
mov
repnz
div
loopne
push
mov
and
jae
add
inc
mov
ret
push
prefetchwt1
or
mov
icebp
ins
mov
scas
push
pop
scas
jae
xchg
cmp
jmp
dec
sbb
fistp
out
(bad)
add
mov
mov
out
and
aas
or
sbb
push
add
ins
or
xchg
out
in
dec
pop
pop
imul
push
pop
push
sar
jle
int3
imul
add
pop
int
gs
shr
xor
fistp
movs
je
or
call
or
mov
test
(bad)
xor
and
xchg
cmp
xchg
ja
mov
pop
fistp
push
test
add
(bad)
xchg
lds
imul
dec
lods
fxam
mov
call
push
and
je
jmp
xchg
call
call
lods
jne
push
pop
mov
and
dec
sahf
data16
dec
stos
cmps
das
xchg
sar
cmp
sbb
or
scas
loope
jl
or
imul
lock
pop
inc
xor
lods
rcl
mov
mov
adc
out
pushf
out
sahf
inc
cmps
or
fnstenv
push
sbb
cmp
or
imul
test
add
xor
pusha
int
jg
loopne
imul
sub
ficom
push
int
sbb
aaa
add
(bad)
jmp
clc
pop
cwde
mov
nop
push
test
xchg
inc
xchg
push
jo
push
shr
pop
inc
jp
adc
stos
mov
push
jg
push
loopne
popa
mov
adc
leave
int
pop
loope
outs
imul
pop
mov
push
test
ins
ret
jg
dec
jno
mov
push
mov
dec
add
data16
add
xor
jbe
or
fcomip
xchg
stos
fmul
push
or
and
aad
pop
clc
fucomi
js
and
idiv
mov
sbb
or
sbb
rol
inc
lods
cmp
(bad)
ins
sub
jbe
sbb
retf
rcr
adc
test
and
(bad)
mov
add
arpl
shl
adc
mov
jb
mov
scas
inc
mov
hlt
pusha
cli
js
lahf
popf
and
pop
jg
scas
imul
mov
mov
addr16
cmp
ja
sub
es
imul
dec
mov
hlt
or
cdq
sub
jnp
jbe
adc
mov
push
inc
adc
mov
popf
div
cmp
mov
cwde
fs
push
sub
cs
sub
xchg
ss
mov
adc
jle
sbb
mov
nop
mov
lods
imul
mov
add
pop
jb
pop
cmp
inc
iret
(bad)
xlat
(bad)
out
lods
inc
push
(bad)
xor
addr16
push
test
popa
repz
ror
or
jmp
jbe
test
lods
sub
not
pop
jbe
rol
adc
gs
dec
dec
(bad)
jp
loope
in
fiadd
sub
push
jecxz
ja
inc
mov
jle
call
sub
and
mov
adc
imul
(bad)
stc
mov
je
pop
cmp
dec
add
into
mov
cs
clc
add
push
inc
pop
in
les
ss
popf
push
enter
mov
(bad)
cmps
cmp
test
enter
mov
loop
scas
cmp
dec
mov
data16
pop
jmp
adc
add
add
add
push
cmc
or
cld
inc
not
mov
jp
push
jnp
pushf
int3
jg
mov
shl
xchg
loop
adc
sub
and
xchg
pop
jecxz
cmp
pop
push
mov
push
mov
add
jbe
push
fdivrp
ja
mov
in
pop
xor
test
mov
push
push
inc
xor
(bad)
repz
pop
inc
inc
jmp
aas
push
test
sub
jmp
xchg
das
ss
push
movs
jns
cmp
xchg
pop
pop
xchg
adc
dec
mov
pop
inc
iret
or
test
dec
xor
sbb
xor
daa
test
add
in
xchg
cmps
dec
std
add
adc
sub
and
jns
sub
push
repnz
adc
in
mov
retf
mov
dec
cmp
pop
xchg
jge
fldcw
add
mov
add
pusha
call
test
pop
ja
es
xchg
xchg
outs
in
movs
inc
xchg
pop
das
popf
inc
aaa
or
pop
mov
push
(bad)
jp
pop
call
inc
jl
or
call
mov
mov
dec
pop
sub
dec
pop
cmp
jle
rcr
fbstp
fs
(bad)
cmp
sub
cmp
adc
je
std
push
adc
inc
or
and
push
sub
retf
pop
mov
pop
xchg
les
ja
push
ret
and
in
fidiv
pusha
sbb
hlt
xor
pop
(bad)
xchg
outs
dec
cmp
imul
dec
inc
stos
fld
cmp
outs
and
jl
pop
ja
cdq
fadd
mov
sar
adc
pop
or
cmp
jmp
popa
pop
lods
or
mov
add
out
inc
loope
sbb
cmp
xor
and
mov
(bad)
arpl
in
mov
push
fcomp
or
icebp
repz
xchg
ja
test
cmps
lds
push
mov
push
sub
dec
dec
lock
mov
and
jp
jge
lea
push
inc
popf
neg
jl
into
in
sbb
xchg
or
setno
mov
or
inc
leave
sti
retf
dec
xchg
shr
jns
repz
or
int3
xchg
ret
mov
sub
repnz
push
inc
ins
add
push
in
xchg
xor
in
fild
out
cmp
jg
add
inc
lods
mov
pop
push
mov
dec
xor
mov
push
in
aam
push
dec
scas
xchg
fdivr
xlat
jmp
cmc
arpl
push
fstp
add
stc
add
icebp
lea
shr
lods
inc
mov
mov
aaa
add
cmp
out
xchg
js
fwait
inc
cmc
pop
mov
test
retf
pop
or
iret
ror
lahf
jecxz
xchg
adc
jmp
shr
xchg
sub
fwait
inc
leave
mov
sub
mov
sbb
fdivr
cmp
xor
clc
pop
inc
push
int
cmp
mov
repz
mov
pop
cmp
inc
or
out
fst
mov
call
push
stos
loope
xrelease
inc
ds
mov
push
fidivr
imul
push
add
adc
call
jp
add
pop
mov
cs
dec
sar
sub
loopne
sbb
sub
add
jmp
stos
cld
pop
sbb
(bad)
adc
sbb
fimul
mov
pop
xchg
dec
rcl
push
nop
sbb
rol
jge
mov
pusha
in
in
mov
imul
(bad)
jmp
pop
pop
ss
jecxz
adc
dec
mov
mov
cmp
repz
arpl
pop
aas
cmp
lahf
xlat
xor
jb
stos
call
cmp
test
imul
ret
jmp
mov
(bad)
adc
in
call
inc
and
fs
cmp
inc
sbb
int
fwait
xchg
sbb
jnp
shr
xor
push
cmp
pop
das
push
sub
push
sbb
sbb
dec
js
and
jbe
add
punpckhdq
ja
sbb
sbb
ror
pop
in
clc
nop
lods
out
sub
mov
sub
scas
mov
out
jns
(bad)
loopne
ss
xchg
loop
(bad)
mov
sbb
sti
sub
retf
rcl
test
mov
push
mov
(bad)
nop
pop
int3
inc
lock
rol
and
pop
loop
xor
add
jecxz
sub
loopne
test
stos
ficom
and
out
add
das
and
adc
add
es
jmp
clc
and
fs
cmps
xchg
fld
out
(bad)
ret
scas
sbb
push
ss
dec
dec
pop
push
call
retf
inc
adc
adc
je
add
outs
add
xchg
sub
mov
outs
in
pop
neg
scas
xor
loope
mov
movs
cmp
aaa
xchg
scas
dec
les
inc
dec
xchg
movs
jbe
retf
test
mov
xchg
(bad)
sub
dec
cmp
out
shl
sbb
add
push
pusha
mov
daa
or
jo
and
frstor
fcmove
jnp
pop
cmp
sbb
sahf
mov
addr16
mov
mov
movs
(bad)
idiv
xchg
jnp
mov
mov
cwde
call
mov
into
movs
pop
pop
or
jns
iret
mov
lahf
das
scas
pop
ins
cmp
cmp
push
test
std
jp
in
cmp
xchg
stos
jmp
adc
sub
mov
mov
add
bound
retf
nop
push
in
popa
xchg
jg
mov
inc
fadd
sub
int
jmp
dec
in
stos
cmps
mov
jg
sub
packuswb
push
mov
lock
mov
adc
jmp
aaa
pop
inc
add
mov
jbe
mov
inc
call
jmp
shl
mov
retf
push
and
jl
add
fcomi
das
pop
popa
cwde
(bad)
dec
rcr
adc
push
and
mov
pop
cmps
call
(bad)
push
mov
repz
xor
js
jle
push
inc
and
cmps
jb
sub
push
lock
or
ret
push
sbb
rol
js
out
hlt
lods
(bad)
je
and
adc
cs
lea
xor
shr
shl
jbe
cmp
push
push
pop
jnp
loope
or
jl
mov
cmp
or
rol
lods
push
popa
push
jae
mov
cmps
ret
sahf
fild
add
mov
mov
mov
imul
jns
loopne
mov
or
leave
push
xor
test
mov
in
push
sbb
and
stos
or
mov
retf
mov
xor
(bad)
in
cmp
xchg
lods
cdq
popa
in
xchg
mov
out
stos
pop
or
push
nop
adc
fst
outs
jno
or
fcom
mov
ins
adc
add
in
mov
icebp
dec
xchg
xchg
or
xor
imul
mov
outs
cmps
ins
retf
mov
jnp
xchg
cmp
(bad)
retf
push
xor
xchg
jb
jge
xor
and
inc
ret
cli
push
add
shr
push
adc
xchg
enter
sbb
outs
mov
aam
pop
jle
cmp
pop
push
inc
sahf
fiadd
ror
in
push
mov
jb
jns
cli
cmp
mov
adc
xor
stc
je
rcr
pop
dec
jecxz
aas
cmp
out
daa
cld
movs
push
xchg
pop
mov
push
and
adc
push
mov
pop
(bad)
dec
loope
push
iret
dec
push
xchg
adc
push
push
add
js
add
and
aad
push
cmp
pop
movs
fild
push
out
push
xor
pop
imul
or
adc
out
cmp
fidiv
or
and
sbb
arpl
and
cdq
gs
iret
pop
mov
xor
test
add
jnp
iret
aas
pusha
fwait
stos
jg
adc
jge
bts
(bad)
jns
cdq
cmp
push
lods
dec
mov
sti
mov
outs
scas
sub
ficomp
ins
(bad)
cli
and
dec
jmp
clc
test
pop
push
dec
cmp
(bad)
sub
bound
jo
sub
aad
pop
loope
shl
jne
(bad)
cmps
ss
cmp
xor
xchg
ret
inc
inc
dec
or
push
cs
test
adc
test
outs
popf
sbb
cmp
cmp
mov
out
xchg
aaa
test
adc
mov
pop
call
gs
sub
push
jl
pcmpgtd
loop
jmp
loopne
and
adc
mov
xlat
daa
addr16
neg
cmps
test
cmps
jb
mov
xlat
push
aam
out
xchg
mov
mov
sbb
inc
rcr
out
sbb
xlat
xchg
pop
cmp
mov
ret
mov
in
retf
cmp
mov
test
int
retf
pop
jle
add
jnp
jno
inc
frstor
push
clc
mov
arpl
adc
or
lea
xchg
mov
lahf
movs
inc
mov
dec
(bad)
adc
jns
mov
inc
mov
icebp
faddp
pop
cmp
ins
sbb
addr16
sbb
jae
ins
xchg
aam
xlat
adc
pop
mov
mov
mov
mov
into
pushf
cdq
js
jbe
sbb
dec
push
jne
mov
test
xchg
mov
cmp
iret
jmp
clc
push
cmps
shl
pop
sbb
dec
pop
loopne
in
mov
jg
sbb
mov
dec
arpl
pushf
sub
rcl
sbb
mov
mov
xchg
stos
iret
rcl
cmp
das
into
jns
retf
add
les
mov
test
repz
jle
ret
mov
fucom
sahf
push
loop
ja
loopne
imul
arpl
push
cld
rcr
mov
jl
cmp
popf
call
mov
mov
inc
mov
sbb
out
int
or
cmp
aas
sbb
sbb
daa
daa
jnp
mov
addr16
in
push
cmps
cld
int
es
lea
retf
pop
std
add
cmps
lds
xlat
rcl
sbb
out
int
lods
fisub
sbb
ror
aaa
jl
push
lds
fwait
cld
jbe
ins
icebp
mov
rol
adc
cli
and
cmps
in
jo
lods
push
sbb
push
sbb
mov
adc
mov
mov
dec
add
jmp
shr
jg
out
clc
hlt
mov
outs
fbstp
cdq
lea
dec
add
into
out
mov
xchg
popf
cmp
sbb
mov
add
shl
movs
or
xor
pop
stc
mov
jae
jmp
sub
jmp
jl
fld
push
mov
leave
push
adc
push
stos
in
cmp
xor
jnp
xchg
xlat
lods
leave
mov
pop
lea
icebp
cmp
sub
leave
or
sbb
addr16
or
add
subps
and
cmp
xor
push
aad
ret
pop
cmps
mov
scas
shl
clc
sbb
mov
std
leave
sub
mov
mov
mov
enter
cmp
pop
std
inc
ins
lock
pop
in
mov
dec
mov
add
cmp
iret
mov
and
jmp
enter
pop
push
sub
int3
mov
sbb
movs
aaa
mov
or
pop
fldenv
in
stc
repz
jecxz
xor
retf
push
dec
ret
jle
pop
and
call
lods
outs
mov
push
pop
movs
div
pushf
and
not
mov
mov
adc
xor
sub
or
mov
test
call
(bad)
movs
push
nop
sbb
cmp
mov
lahf
addr16
pop
imul
jo
adc
mov
nop
lahf
stc
cmps
and
lods
mov
addr16
or
sahf
adc
and
xchg
in
dec
sub
call
jmp
fdiv
pop
in
jmp
pop
je
rcr
mov
inc
repz
in
jle
nop
mov
mov
push
jge
jle
pop
cmp
sbb
mov
dec
jp
push
jg
out
js
xchg
sub
test
imul
push
pop
js
jno
push
mov
test
add
fsubr
adc
xlat
mov
je
dec
pusha
xor
out
jl
das
cmp
or
cdq
test
mov
sub
xchg
or
test
xor
repnz
add
data16
xchg
in
jp
add
(bad)
retf
pop
sub
outs
cli
sar
sub
xor
test
inc
mov
out
ret
cwde
sub
lods
data16
pop
cmp
movs
xor
cmp
retf
sub
dec
test
mov
int3
cli
test
or
out
and
or
std
jl
sbb
sub
or
xor
imul
jg
out
(bad)
pop
sbb
in
sbb
retf
repnz
in
mov
mov
test
xchg
jbe
fisub
outs
int
mov
lds
and
mov
das
jnp
psrad
arpl
cli
inc
(bad)
cmp
mov
jae
lods
cld
rcl
xchg
mov
mov
xchg
xchg
inc
mov
or
mov
mov
xchg
stc
sbb
mov
mov
jp
je
xchg
jl
cmp
add
outs
jns
jge
sar
sahf
pusha
mov
mov
push
jnp
inc
or
fistp
fcmovnu
not
mov
cld
adc
lods
in
mov
imul
rcl
push
pop
mov
out
xor
sbb
data16
dec
lea
(bad)
cmp
and
fsub
icebp
cld
int3
(bad)
xchg
xchg
xchg
mov
je
cmp
adc
mov
daa
rol
mov
push
stos
ret
test
add
and
ja
movd
leave
cli
mov
add
aad
aas
arpl
push
xchg
cmps
push
jmp
xchg
xchg
jle
sub
pop
cmp
xchg
inc
(bad)
scas
scas
repnz
sub
fwait
dec
stos
xchg
outs
addr16
je
les
fsub
fisttp
maskmovq
idiv
mov
or
cmc
dec
mov
popa
or
pop
cli
or
loopne
push
cwde
cmc
bound
fcom
aad
loop
mov
xchg
outs
ret
mov
pop
ret
push
fsub
and
mul
and
xchg
js
dec
test
rcl
sbb
lock
sub
or
test
pop
xlat
inc
mov
cmp
rcl
jl
mov
retf
cmp
scas
(bad)
jecxz
test
imul
jmp
cmp
add
mov
or
pop
pop
(bad)
not
cdq
pop
clc
hlt
sahf
test
and
adc
add
bound
push
mov
dec
loopne
fst
xchg
movs
repnz
cmp
jno
lods
sbb
xchg
mov
dec
js
lods
aad
imul
inc
loop
xor
dec
xchg
inc
push
dec
ds
xor
movs
inc
ret
dec
xor
test
xor
jmp
add
mov
jmp
sbb
push
test
mov
mov
jb
int3
add
daa
mov
jae
add
cmp
cmp
cwde
pusha
pop
mov
sub
cmc
repz
mov
dec
dec
xchg
scas
adc
cmp
push
test
addr16
add
dec
and
scas
fadd
cmp
dec
push
bound
pushf
add
pop
xlat
xor
jno
in
popa
mov
sbb
pop
ret
dec
xor
jmp
in
cwde
xor
xor
mov
push
movs
mov
or
xchg
push
movs
and
repz
fsubr
push
je
and
mov
fistp
cdq
mov
mov
shl
and
leave
sub
in
dec
bound
add
test
sub
fstp
ja
and
mov
mov
cmp
jl
pop
test
or
ja
ins
jp
inc
mov
dec
std
ror
jle
bound
xchg
pop
jno
imul
push
ins
(bad)
adc
or
jge
fisttp
xchg
sub
aaa
(bad)
ss
and
add
jg
lods
mov
sub
in
xor
je
dec
sub
dec
add
push
stos
inc
scas
stos
std
dec
int
std
sbb
lods
aam
in
or
adc
cmp
jno
(bad)
mov
das
pushf
aaa
mov
or
push
cdq
cmp
add
pop
rol
daa
cmp
or
pop
mul
shr
jo
push
inc
cdq
sub
mov
jmp
or
out
mov
rcr
jne
ret
cmps
adc
leave
imul
addr16
fiadd
pop
jl
inc
jae
(bad)
fst
mov
sub
inc
aam
fsub
enter
or
outs
js
mov
(bad)
stos
mov
aad
dec
fsub
mov
xor
fstp
sti
xchg
dec
jb
mov
das
aaa
rol
pop
push
shl
pop
cmp
repnz
outs
adc
mov
sub
aas
sar
sahf
repz
xchg
or
test
pusha
sbb
outs
outs
call
pop
rol
adc
cmp
or
sub
xor
ror
cmp
dec
push
ret
mov
push
mov
fiadd
aam
cli
fwait
xor
(bad)
cmp
fcmovbe
retf
loopne
nop
jg
inc
fwait
pop
(bad)
lods
cwde
xlat
das
inc
xor
test
(bad)
repz
(bad)
cmc
test
inc
or
loopne
movs
push
(bad)
adc
clc
adc
repnz
jg
imul
jb
enter
cs
fnstcw
je
dec
sbb
xchg
addr16
inc
mov
cwde
push
cld
jmp
fcmovne
pop
ss
sbb
jl
or
or
cmp
(bad)
push
add
sbb
jno
jecxz
pop
mul
xor
iret
fdivr
inc
call
imul
jae
xchg
cs
outs
sub
imul
sbb
arpl
xchg
sub
icebp
out
xchg
aaa
jo
cmp
pusha
fcom
int3
add
cmc
cmc
pop
or
xchg
mov
jno
xchg
adc
or
mov
int
je
aaa
jb
pop
cmc
pop
outs
xor
fstp
jns
sub
retf
or
lds
mov
inc
push
xor
or
xchg
test
or
aaa
aad
pop
sub
push
and
mov
cli
fldenv
cmp
movs
inc
inc
mov
(bad)
pop
sbb
adc
jmp
outs
fild
out
sar
rol
pop
mov
pminsw
jmp
mov
jno
das
add
dec
or
fld
sub
push
push
fmulp
clc
clc
aas
sahf
mov
fsub
xchg
push
es
push
adc
mov
xor
add
jnp
leave
lea
mov
cld
mov
lock
ss
mov
and
xchg
out
(bad)
xor
jnp
mov
jmp
loope
pop
loop
je
cmp
cmp
jg
mov
ret
and
nop
pusha
sahf
out
ror
(bad)
and
mov
(bad)
and
jae
lea
stos
in
int3
lods
ret
sbb
push
shr
iret
dec
out
mov
hlt
pop
cmp
repnz
ins
mov
int3
and
mov
ret
sub
bound
jl
pop
mov
and
dec
adc
call
inc
fdiv
popf
adc
mov
in
ret
mov
push
pop
and
cdq
mov
cdq
scas
pop
(bad)
jns
pop
ins
test
mov
dec
dec
and
sub
add
add
xchg
stos
cmp
shl
xchg
jecxz
daa
es
or
iret
dec
jmp
jecxz
rcr
(bad)
mov
inc
jno
hlt
ret
not
lahf
scas
xchg
dec
push
call
and
ins
jl
fwait
xchg
or
sbb
pop
add
cmp
mov
lods
push
popa
pop
push
sub
cmp
or
cwde
(bad)
mov
neg
sub
xor
lock
push
pushf
lahf
and
pop
cmp
pop
push
xor
pop
sub
xchg
sub
lods
and
ret
jmp
loopne
pushf
shl
xor
aaa
mov
addr16
sti
mov
or
mov
push
xchg
xchg
ret
jbe
mov
add
inc
fwait
cmps
shl
jns
(bad)
fidivr
or
jg
xchg
jne
fnstenv
and
or
sti
mul
aad
adc
mov
dec
out
jmp
add
and
and
aam
pop
pop
sti
jmp
lahf
pop
jbe
or
jp
sbb
jo
mov
test
xchg
mov
xor
je
repnz
add
pop
xor
leave
adc
mov
mov
inc
imul
fimul
add
mov
test
imul
xchg
ss
jmp
pop
xor
lods
xlat
aam
fadd
cmp
mov
inc
pop
or
push
mov
push
mov
jmp
xor
push
add
jg
test
dec
scas
dec
test
test
not
rcl
jge
push
outs
adc
jbe
add
push
xor
js
(bad)
sahf
sbb
jg
dec
rol
mov
dec
int3
nop
inc
push
mov
adc
(bad)
ss
or
sub
adc
cli
inc
jg
push
dec
jmp
jle
mov
xor
push
std
(bad)
imul
xchg
mov
jno
sbb
pop
jp
icebp
and
sbb
cmp
sub
in
mov
das
xor
dec
mov
and
iret
xor
jmp
mov
jmp
adc
sub
jo
pop
imul
dec
ds
gs
mov
or
add
adc
sahf
enter
add
test
popa
adc
enter
pusha
jne
xor
cwde
xor
inc
icebp
fcmovu
mov
movs
mov
and
ficom
jge
add
mov
pop
dec
xchg
xor
mov
dec
loopne
test
fadd
cmps
test
sbb
add
xor
pop
repnz
(bad)
cli
sbb
ins
dec
hlt
dec
fs
cmp
xchg
pop
(bad)
(bad)
add
mov
and
aam
mov
std
out
pop
sbb
xchg
pop
xchg
adc
(bad)
pop
cmp
push
add
cmps
jb
ja
jns
jo
inc
push
js
pop
shl
pusha
xor
adc
pop
add
repnz
xchg
(bad)
mov
fidiv
jle
inc
xchg
movs
inc
xor
out
outs
xchg
sbb
mov
cmps
sbb
sbb
enter
imul
xor
mov
bound
test
push
adc
inc
imul
iret
neg
scas
mov
mov
jb
mov
inc
(bad)
call
dec
es
aad
add
push
mov
nop
mov
pop
test
sahf
fsub
inc
xor
popf
cli
bound
xor
cvttps2pi
xchg
stc
ret
push
in
test
mov
int
and
jb
imul
lods
out
mov
and
movs
jmp
(bad)
arpl
inc
pushf
test
enter
sbb
pop
pop
inc
sti
mov
push
mov
jmp
sub
sahf
or
popa
fst
lods
sbb
jmp
push
lods
test
xchg
adc
jns
stc
adc
sbb
pop
sub
xor
inc
sbb
(bad)
fisubr
lea
push
adc
push
or
jae
dec
push
retf
jbe
fidiv
push
inc
pop
call
inc
jae
jecxz
loope
pop
out
retf
ficomp
(bad)
xchg
dec
(bad)
call
and
and
aam
pop
sahf
shr
jge
fstp
mov
mov
jle
pop
sti
ja
xchg
xchg
adc
(bad)
cmc
clc
(bad)
leave
sahf
xchg
and
add
mov
lods
call
leave
aam
cli
add
nop
scas
mov
sbb
sbb
cmp
jns
leave
push
aad
adc
adc
into
mov
mov
fwait
push
adc
or
jecxz
sbb
push
fisubr
or
jecxz
cdq
xchg
fsubr
mov
out
int3
push
or
(bad)
jns
movs
mov
lock
jge
and
cmps
sub
ins
ins
sbb
mov
les
outs
shl
or
adc
cld
mov
ins
mov
xchg
adc
loope
xchg
or
xchg
adc
cmp
xor
add
jmp
jg
mov
add
adc
jp
pop
mov
adc
push
cld
adc
pop
ja
fdiv
mov
(bad)
jmp
ret
test
mov
and
mov
fisub
sar
jecxz
sub
popa
inc
push
test
xchg
cdq
mov
and
cs
mov
sub
cmps
jb
test
shr
mov
pcmpgtw
push
add
fisttp
or
test
cli
mov
sub
jg
xchg
add
call
and
retf
rol
in
mov
movs
out
jecxz
mov
adc
jl
jle
jnp
xor
retf
je
sub
fcom
cmp
ret
xchg
push
mov
mov
mov
and
or
push
test
pop
adc
jae
or
imul
lds
adc
cmp
js
push
imul
jg
test
mov
(bad)
xor
mov
in
lock
add
in
fidiv
ins
dec
gs
hlt
aam
cld
pop
or
in
sbb
movs
das
or
dec
jae
popf
leave
xor
inc
inc
xchg
or
leave
cli
xchg
fwait
xchg
sub
mov
fld
int
or
or
lock
mov
stos
jmp
add
xchg
shr
or
popa
(bad)
jle
pop
inc
mov
repnz
inc
in
jnp
mov
xor
ja
cmps
cdq
inc
jbe
adc
sub
dec
sbb
lods
push
pop
cmps
xor
push
repz
ja
idiv
xchg
mov
sahf
pop
sbb
pop
dec
xor
sub
imul
add
aad
call
adc
lds
fbld
in
sbb
or
mov
mov
add
(bad)
adc
mov
push
mov
jbe
add
xchg
and
addr16
jecxz
shl
call
mov
and
cdq
cmp
mov
cmp
out
hlt
xchg
add
mov
lea
push
js
arpl
pop
pop
push
cld
cs
sub
inc
inc
inc
add
sub
shr
cmp
imul
daa
push
pop
push
jmp
lods
inc
and
lds
data16
scas
jns
jo
repnz
ret
jae
cwde
not
stos
cmps
cwde
pop
jmp
stc
fucomip
cli
cwde
int3
mov
cld
in
ja
jecxz
bound
push
mov
push
retf
sbb
cmps
xchg
push
pop
sahf
pop
shl
push
loop
mov
outs
mov
pop
scas
sub
inc
mov
test
mov
sbb
retf
clc
mov
dec
push
jle
call
adc
pop
fs
or
sub
in
dec
mov
stos
sub
cdq
jo
ins
add
neg
enter
ins
movs
pop
pop
mov
dec
test
shl
xlat
dec
test
cs
scas
sbb
push
or
push
xor
std
jnp
sub
js
jbe
mov
mov
fidiv
mov
retf
fnsave
cld
icebp
imul
ins
pop
test
push
arpl
xchg
mov
fisub
test
pop
inc
mov
inc
xor
and
aaa
ins
mov
ja
mov
mov
mov
push
out
js
out
jmp
sbb
or
adc
fisub
rol
call
mov
fs
mov
mov
test
adc
jb
pop
dec
arpl
lods
inc
imul
adc
xchg
mov
mov
add
xor
jl
pop
pusha
rcr
push
mov
cli
gs
jae
(bad)
jmp
ds
cwde
aad
xchg
push
jmp
mov
pop
jp
mov
mov
loopne
sbb
dec
push
loope
mov
repnz
in
sub
sub
mov
maxps
iret
cmp
dec
adc
mov
repz
popa
jecxz
cmp
loop
popa
lidtd
out
inc
and
and
cmp
and
lock
mov
test
pop
daa
lods
jmp
imul
jl
aam
sub
add
and
in
in
fimul
test
sub
out
lods
movs
int3
push
fcomp
pop
inc
shl
test
cmp
sub
ret
sbb
mov
bound
inc
das
test
or
and
jmp
inc
cld
sbb
fdiv
pushf
lahf
push
popa
jl
scas
stc
stos
fs
leave
sbb
inc
cmps
call
cwde
sahf
lds
cmps
dec
pop
shr
movs
aad
pop
aaa
aam
ds
push
dec
cmp
retf
inc
jns
mov
xor
iret
mov
push
call
lods
add
jnp
push
or
sbb
and
jge
or
in
adc
adc
cmps
test
outs
cwde
sub
in
cmp
add
ss
dec
xchg
(bad)
aam
(bad)
dec
adc
fcomp
jmp
push
push
repz
xor
es
(bad)
xor
push
and
jno
adc
(bad)
cmp
in
jl
inc
mov
mov
out
les
or
xor
call
sti
je
sbb
cmps
ins
inc
mov
and
mov
inc
sbb
mov
scas
cmp
sbb
jg
ds
or
ins
xor
stc
or
addr16
pop
(bad)
pop
jmp
cmps
das
pop
pop
jmp
retf
pop
mov
enter
and
lods
retf
enter
xchg
mov
pop
je
in
xchg
mov
ins
xchg
xor
mov
xchg
test
dec
jnp
test
cmps
pop
pop
adc
push
in
retf
(bad)
loope
pop
icebp
mov
aas
pop
and
pop
(bad)
jb
pop
gs
stos
fisttp
div
(bad)
fmulp
fucomp
lods
sbb
add
test
mov
mov
adc
shl
pop
cld
mov
sub
push
adc
call
mov
xlat
add
mov
fild
movs
sbb
aam
add
or
add
xor
retf
popf
xchg
cmp
mov
cs
sub
retf
jmp
sbb
xor
jae
xchg
jmp
sub
imul
add
inc
push
and
aad
repnz
pop
add
repz
cld
and
sahf
ja
or
jl
cmp
inc
add
mov
retf
cmp
dec
lds
cli
dec
fldcw
pusha
cmp
jae
and
jge
lods
inc
cwde
jge
punpckhbw
push
cmp
lock
pop
out
and
sbb
pusha
pop
call
inc
and
and
enter
cmp
sbb
dec
ds
xor
sub
sahf
test
hlt
aas
nop
test
inc
cmc
or
add
jne
jp
stc
repz
cmp
fwait
pop
test
stos
add
lds
mov
push
mov
aas
push
retf
loop
dec
or
cmp
mov
rcl
(bad)
adc
inc
inc
cmp
addr16
mov
cwde
adc
jns
mov
xchg
sub
fiadd
popf
adc
mov
div
jae
mov
pop
ins
outs
add
lahf
pop
mov
dec
inc
jns
push
cmp
fs
xchg
icebp
fwait
and
js
addr16
or
adc
xchg
mov
jae
push
sar
pop
xchg
data16
call
dec
mov
out
and
adc
lahf
scas
add
and
aad
mov
adc
loope
push
push
test
cld
push
cwde
xchg
add
test
loop
push
lods
dec
fisubr
pop
imul
addr16
jg
add
mov
(bad)
jle
xchg
gs
movs
aam
movs
mov
loopne
adc
ret
xor
scas
pop
dec
sbb
jbe
pop
push
(bad)
jmp
cmp
mov
mov
pop
mov
inc
je
cmp
out
shl
push
lock
inc
je
xlat
aas
into
fild
lods
add
mov
push
or
icebp
mov
mul
cmp
cli
or
mov
imul
add
arpl
xor
mov
int
xchg
mov
das
mov
push
fwait
out
pop
xor
and
mov
sub
outs
sbb
push
adc
cmp
mov
lahf
and
add
adc
push
(bad)
repnz
add
ja
fdiv
xchg
loope
jmp
sti
ins
mov
int
lds
push
daa
xor
dec
jae
mov
cwde
xchg
sahf
mov
leave
clc
jle
mov
lahf
pop
clc
aam
inc
scas
add
push
in
rcr
dec
sub
leave
jno
test
xor
push
popa
dec
inc
sub
or
push
xchg
retf
sub
inc
mov
sub
ja
call
mov
mov
repz
push
add
sbb
add
mov
dec
jnp
cs
sbb
push
fisubr
inc
add
std
xor
adc
pop
xor
inc
es
inc
xor
ins
add
stc
xor
jp
adc
daa
cwde
or
stos
ja
and
add
jo
aaa
sbb
cmps
and
mov
aam
dec
jae
add
mov
movs
pop
imul
xor
pop
dec
adc
adc
imul
add
jmp
bound
cli
ret
push
mov
sar
test
push
jg
jae
cmp
fbld
nop
out
fisubr
aad
sub
out
stc
leave
outs
mov
inc
inc
stos
popf
ja
jne
shl
in
xor
cmp
dec
lods
xlat
es
xchg
inc
pop
pop
mov
movs
pop
or
ret
lahf
(bad)
jns
mov
xchg
imul
adc
xchg
(bad)
xor
ins
or
rcl
pushf
cmp
sahf
push
push
push
daa
into
mov
in
aas
or
(bad)
adc
int
scas
popf
jmp
inc
adc
mov
xor
inc
mul
clc
jae
fwait
dec
jle
or
rcl
sbb
aaa
push
stc
jmp
loopne
retf
push
scas
leave
aas
pop
mov
sub
mov
mov
push
sar
xchg
jmp
clc
std
data16
rcl
mov
sti
test
ins
lods
ret
ffreep
outs
lods
int
and
or
aas
aam
add
stos
inc
and
dec
outs
mov
jnp
hlt
repz
adc
mov
cld
push
fld
(bad)
adc
in
add
test
test
mov
and
dec
jmp
and
aad
pusha
add
inc
out
xchg
das
inc
pop
push
jns
in
cmp
xor
jae
or
sbb
cmc
pushf
das
mov
shl
xchg
pop
imul
or
inc
(bad)
imul
xchg
mov
ins
mov
int3
mov
xchg
cdq
jae
mul
xchg
jnp
and
retf
sub
clc
cwde
sbb
jge
inc
dec
xchg
fcmovnbe
ja
xor
push
in
cmp
in
movs
pusha
addr16
mov
out
fmul
jb
and
(bad)
adc
push
and
mov
fwait
jge
jmp
add
mov
jmp
cmp
icebp
in
push
imul
push
mov
push
adc
arpl
iret
inc
sar
push
cmc
fwait
mov
xchg
inc
mov
addr16
sbb
(bad)
mov
add
cwde
jnp
cmp
xlat
fimul
test
sbb
test
dec
hlt
mov
bnd
push
sub
add
sub
cmp
sahf
cmp
fisubr
xchg
popf
cmps
movs
je
mov
in
(bad)
nop
aas
push
jl
xchg
popf
push
mov
mov
or
(bad)
mul
and
ja
in
mov
test
cmp
in
xchg
loop
aaa
xchg
push
dec
cmc
stc
sub
pop
fs
div
sub
out
repz
and
stc
repnz
sbb
mov
dec
cli
ins
mov
inc
push
xlat
dec
mov
mov
xlat
int
ins
nop
nop
ins
add
cmp
sbb
fsubr
sub
jmp
inc
and
test
push
movs
movs
imul
cmp
jmp
into
(bad)
pop
cmp
jnp
into
mov
adc
jae
gs
fidiv
inc
daa
add
ins
ds
ins
cmp
pop
sti
in
or
popa
test
in
add
(bad)
pop
mov
dec
push
pop
les
sub
mov
call
fwait
pop
mov
sahf
jne
pop
jmp
mov
mov
fwait
jae
mov
mov
imul
sbb
pop
in
dec
xchg
push
add
cmc
dec
pop
xor
xor
mov
mov
lahf
mov
dec
imul
and
jecxz
push
inc
scas
loop
aas
test
mov
ds
out
push
pop
dec
cmp
xchg
hlt
dec
add
xor
cwde
dec
fcmovbe
retf
or
(bad)
(bad)
test
mov
jl
sbb
mov
ja
sar
dec
jns
mov
xchg
sbb
adc
sub
xchg
movs
cmp
pop
pop
pop
movs
mov
shl
sub
mov
iret
jmp
pop
fldenv
fist
fcomp
frndint
cmp
movs
fwait
arpl
cmp
cld
adc
ds
push
xchg
hlt
mov
mov
push
xchg
fcomp
inc
sbb
xchg
jle
les
dec
btc
dec
popf
push
mov
and
pop
push
out
push
jp
adc
sub
popf
imul
out
fisttp
jae
cmps
jae
adc
xchg
stos
mov
(bad)
and
pop
adc
scas
xchg
xchg
push
inc
push
retf
daa
gs
sbb
sub
mov
xor
or
ss
inc
stos
shl
cmp
cmp
lods
mov
and
(bad)
test
adc
dec
sar
enter
sub
and
loop
dec
call
add
jecxz
pop
dec
arpl
mov
mov
xchg
sbb
(bad)
rcl
xor
xor
push
add
fwait
outs
std
mov
push
(bad)
dec
fisubr
fsubr
in
rol
xor
enter
cwde
rol
mov
jg
loop
aaa
in
out
mov
clc
pop
xor
sub
and
sahf
aaa
mov
push
cwde
jbe
cmc
xchg
imul
cmp
push
jmp
dec
jmp
push
cwde
aaa
popa
jmp
and
inc
xchg
sub
mov
mov
aas
mov
popa
rol
pop
call
mov
pop
out
xlat
lock
cmp
jmp
inc
pop
fnstenv
sub
mov
mov
jno
rcr
es
ja
jns
push
mov
sub
test
dec
or
fild
add
mov
dec
gs
ins
adc
sbb
shr
enter
mov
fdiv
div
repnz
mov
and
pushf
mov
repnz
movs
and
sbb
pushf
(bad)
out
es
mov
sbb
aam
sub
xor
push
fild
mov
adc
ja
xchg
cs
test
mov
fimul
push
sar
inc
jl
adc
inc
cld
retf
out
mov
mov
fistp
xor
jmp
mov
push
in
fwait
push
and
ret
jmp
sub
cdq
jg
aam
or
mov
ds
pop
xchg
xlat
xchg
xchg
mov
arpl
retf
scas
lock
div
pop
pop
push
xchg
adc
imul
sbb
dec
pop
fst
dec
sbb
jecxz
sar
aas
aam
pop
shl
shl
sbb
test
mov
ja
dec
push
mov
in
test
and
lock
loop
in
sbb
(bad)
sub
lods
dec
hlt
(bad)
sub
jne
fstp
fadd
sbb
scas
ss
mov
(bad)
mov
iret
call
xchg
shl
and
ins
sbb
add
out
sub
and
iret
push
test
pusha
enter
fbld
inc
and
mov
add
jg
ffreep
mov
xchg
or
in
pop
push
js
out
cmc
and
jmp
push
adc
fdivr
xlat
push
lds
fcmovu
test
mov
(bad)
popa
add
cmp
add
outs
jmp
adc
mov
mov
jae
scas
icebp
ret
inc
ja
sub
inc
test
rcl
fbld
sub
ror
push
jbe
and
add
push
int
add
repnz
jno
dec
mov
jns
mov
xchg
xchg
popa
dec
jnp
fwait
or
ins
lock
and
push
sar
and
or
and
fsubr
mov
dec
loope
adc
push
jae
and
xchg
ss
jae
xor
and
and
ret
retf
sbb
loop
ss
sbb
(bad)
fild
inc
jp
push
xlat
dec
adc
adc
xor
cs
test
shl
mov
push
xchg
ret
bound
ins
xor
aad
inc
mov
fnstsw
push
pop
sbb
pop
leave
xchg
adc
jbe
(bad)
outs
mov
add
movs
or
add
stos
add
adc
jns
call
neg
dec
adc
sbb
(bad)
cld
pusha
dec
and
sub
sbb
(bad)
nop
out
outs
inc
fild
xchg
leave
in
jle
pop
xchg
sub
stc
inc
or
push
shr
add
inc
popf
pop
mov
call
sub
btc
test
or
aad
fadd
jbe
scas
fdivp
(bad)
xor
shl
shl
cmp
mov
es
push
mov
ficom
mov
pop
fstp
push
sub
mov
fs
ss
adc
mov
push
mov
fsub
aam
xor
pop
movs
jno
daa
push
pop
jmp
or
adc
clc
adc
pop
(bad)
jmp
movntps
mov
cwde
push
or
and
dec
and
jb
ins
in
int3
mov
xor
mov
fnsave
jae
(bad)
aad
es
popf
mov
or
retf
fisttp
cmps
push
sub
imul
jmp
jmp
pop
xchg
mov
push
mov
jg
nop
sahf
mov
adc
aad
adc
(bad)
ficom
xchg
dec
dec
rcl
ss
jo
(bad)
(bad)
push
dec
add
ret
xchg
pop
push
adc
adc
mov
mov
shl
mov
mov
mov
fwait
cmp
jmp
jo
cdq
cmp
cmp
ret
aaa
enter
shl
or
retf
add
lock
jb
aas
mov
adc
lea
test
(bad)
pusha
movs
fnsave
mov
or
in
int3
or
(bad)
loope
jge
push
pop
dec
(bad)
call
xchg
sub
aas
push
mov
stos
lahf
add
jl
(bad)
push
movs
sbb
clc
paddusw
jnp
imul
test
xchg
dec
imul
enter
rcr
stos
lahf
not
ror
mov
shl
sbb
iret
int
(bad)
push
mov
jmp
push
push
push
pop
nop
call
push
jb
mov
in
xlat
push
hlt
cmp
push
inc
hlt
leave
popf
inc
cmp
pop
lods
mov
cmp
mov
mov
fnsave
popf
dec
ror
mov
lahf
cli
pop
hlt
cmp
daa
cmp
cmp
cmp
mov
xchg
xchg
or
pop
in
mov
repz
aam
xor
(bad)
or
mov
out
xchg
pop
jno
sbb
jmp
retf
sub
sahf
mov
jo
cmp
in
out
sbb
pop
mov
lods
mov
push
stc
loop
pop
(bad)
adc
cmp
push
and
leave
jo
bound
or
fucomi
fdiv
pop
xchg
mov
or
or
(bad)
mov
xchg
xor
jg
nop
adc
mov
stos
dec
cmp
imul
(bad)
mov
and
daa
adc
add
and
adc
jg
adc
mov
jmp
inc
sbb
outs
sbb
mov
dec
leave
and
js
mov
pop
retf
bound
push
inc
pop
jne
ret
call
mov
add
cmps
jp
or
sahf
scas
mov
adc
popa
test
jp
inc
inc
and
xor
rcl
stc
(bad)
jo
mov
and
cmp
in
out
imul
mov
loope
adc
jnp
sbb
pop
(bad)
fnstsw
xor
ficomp
inc
daa
fst
push
jbe
sbb
popa
sub
ins
std
sub
aas
xor
rol
jbe
add
rcr
div
cmps
sub
(bad)
jnp
adc
and
mov
hlt
stos
xchg
int3
addr16
sar
push
ja
xchg
mov
mov
add
mov
pop
clc
div
mov
cmp
xor
aad
lock
in
dec
cmp
cmps
inc
lock
mov
gs
dec
ja
ret
and
xchg
xor
xchg
fdiv
pop
add
bnd
adc
mov
cmps
sbb
jg
adc
cmc
aam
outs
xor
pop
fnstsw
jl
pop
dec
test
loopne
out
mov
pop
adc
sub
and
push
jg
rcr
mov
mov
push
mov
repnz
xchg
adc
popf
(bad)
call
pushf
dec
inc
jecxz
dec
push
scas
fsub
cmp
jecxz
fld
mov
mov
jecxz
push
sbb
push
mov
cmp
sub
push
(bad)
fcomip
fstp
mov
loope
movs
fldcw
stos
mov
fninit
stos
sbb
mul
mov
call
push
and
inc
jmp
jne
or
lds
adc
fsubr
xor
inc
push
mov
push
sbb
jmp
and
pusha
sbb
xor
(bad)
bound
outs
loop
test
popf
sbb
mov
xchg
imul
out
out
push
and
imul
jae
cmps
add
loop
movs
adc
dec
ret
xor
popa
jb
adc
cmp
scas
scas
sbb
fcomi
sub
inc
movs
mov
push
push
leave
bound
dec
push
mov
jp
xlat
mov
mov
mov
adc
ss
jl
fdivr
add
xor
add
out
lods
push
dec
movs
inc
xor
adc
xchg
pop
push
fistp
test
idiv
nop
sbb
mov
out
mov
pop
sub
cs
or
jnp
(bad)
mov
repnz
aam
ficomp
cmp
adc
(bad)
fmul
sbb
sbb
jnp
inc
dec
mov
fidiv
xchg
out
(bad)
dec
cmc
pop
aaa
add
pop
push
sub
add
push
mov
test
leave
cdq
xchg
mov
xchg
push
sub
bound
push
xor
cmp
fnstenv
and
in
inc
or
dec
push
cmc
mov
cmp
pop
pop
lods
js
rcl
das
adc
nop
pop
lds
jns
mov
loop
cmp
rcl
mov
mov
dec
xchg
rcr
xchg
mov
inc
stos
sbb
ds
add
and
jbe
mov
push
in
or
les
fdiv
in
jge
lods
call
lock
push
add
add
in
mov
and
ins
sub
leave
sub
div
test
lock
inc
xor
dec
out
cdq
leave
mov
pusha
mov
cld
cmps
(bad)
mov
int
mov
xchg
add
and
ins
mov
mov
push
xor
arpl
repnz
cwde
aam
sahf
(bad)
je
mov
dec
fiadd
jg
scas
(bad)
out
inc
add
xor
cld
cmps
loope
seta
dec
mov
dec
cmc
xor
dec
jge
mov
jno
push
xchg
xchg
ret
mov
xor
les
xor
fstp
fmulp
data16
push
sbb
and
cmp
or
mov
push
sub
lds
xor
mov
sbb
sub
aaa
lods
scas
arpl
xchg
mov
clc
inc
(bad)
push
cli
xchg
cli
ror
sub
fprem1
mov
out
das
repz
xchg
jo
mov
add
mov
jle
retf
push
add
jmp
cmp
loop
aas
cmp
push
adc
lods
jg
push
push
adc
cli
outs
sbb
dec
(bad)
cld
sbb
pop
pop
dec
inc
into
cmps
mov
lods
int
lods
dec
pop
jbe
push
fst
mov
pop
icebp
cmp
pop
add
stos
mov
arpl
push
jbe
xchg
xlat
and
call
xchg
cli
xchg
div
xchg
(bad)
fstp
(bad)
test
cld
dec
sub
pop
pop
cmp
adc
mov
xchg
mov
aas
ror
and
lods
sti
or
push
fcom
cdq
xor
or
fidivr
lar
mov
or
popa
cli
jmp
and
call
in
dec
push
int3
push
jg
rol
and
cmp
loopne
cmps
xor
in
add
jo
bound
loopne
mov
mov
xor
mov
retf
dec
sti
or
or
inc
popa
pop
pop
(bad)
xchg
icebp
xor
stc
push
dec
push
add
call
test
das
aaa
cmp
cmp
sub
ins
daa
sbb
fisubr
outs
sub
out
call
sub
cmovl
pop
xchg
outs
xchg
arpl
jbe
xlat
cs
mov
in
xor
in
(bad)
test
pop
mov
dec
mov
leave
inc
cmp
mov
aad
sbb
add
mov
in
scas
mov
les
mov
ja
xlat
mov
fidiv
mov
cmp
xchg
mov
rcl
sbb
pop
fild
movs
retf
lds
aad
call
movs
in
mov
imul
push
sub
sti
xchg
or
cli
dec
inc
push
cmp
bound
push
mov
mov
ds
or
xchg
cmp
pop
int3
sbb
lea
inc
stos
enter
retf
mov
xor
mov
scas
aas
and
or
mov
push
adc
int3
cwde
mov
mov
pop
add
stos
sbb
mov
mov
adc
fnsave
int3
pop
jne
stc
add
call
cmp
push
jle
fld
inc
or
clc
pop
mov
add
pop
xor
and
cld
aam
into
xor
sub
sti
call
inc
fstp
(bad)
test
aas
mov
xlat
jmp
xchg
es
(bad)
inc
xchg
pop
sub
lock
inc
mov
dec
fidiv
or
mov
or
fbstp
xchg
mov
movd
test
dec
cwde
and
and
cwde
or
imul
adc
push
retf
retf
jbe
cmp
lea
inc
(bad)
fsub
aas
sub
cli
inc
jg
das
loope
jb
jne
in
mov
ror
inc
cmp
arpl
popa
call
rcl
pop
pop
pop
xchg
in
xchg
imul
mov
ret
nop
sub
push
push
aam
inc
sti
jne
cwde
jae
cmp
jb
pushf
adc
xchg
lahf
sbb
test
inc
mov
out
sbb
and
outs
lods
scas
call
add
scas
pop
xor
test
pop
dec
xor
int
lock
jb
call
sahf
jl
aad
je
cli
iret
fnstenv
push
jp
mov
xchg
adc
xchg
fisttp
jmp
int3
mov
sbb
lods
retf
xlat
push
push
data16
push
frstor
sub
and
pop
lds
stos
xor
shl
scas
div
nop
push
lock
mov
dec
ins
clc
(bad)
(bad)
mov
div
(bad)
pop
or
cmps
jl
jb
mov
popa
xchg
or
or
inc
ss
mov
sub
or
cmp
shr
pop
test
sub
sub
cmp
dec
stc
push
pop
rcl
inc
or
dec
rcl
xor
xor
mov
mov
enter
xchg
add
cmp
test
cwde
sub
bound
in
in
stc
jmp
out
data16
sti
inc
push
push
retf
into
sbb
push
ins
rcl
daa
add
outs
pop
xor
push
jne
in
and
fidivr
mov
imul
ror
fdiv
push
adc
pusha
dec
push
push
iret
jl
sbb
xor
aam
pop
les
xor
jecxz
ret
out
rol
and
leave
loopne
mov
mov
and
addr16
fsubp
sbb
jge
push
pop
mov
and
cmp
mov
sub
xchg
movs
hlt
pop
fldenv
mov
sti
into
in
adc
pusha
mov
icebp
cs
dec
mov
add
leave
adc
pop
xchg
inc
ins
jle
adc
pop
push
das
out
out
jae
inc
stc
lods
call
icebp
sub
mov
pusha
nop
in
rol
xchg
push
jge
cmp
sbb
add
pushf
in
cmp
mov
test
dec
mov
xchg
scas
aaa
aaa
aam
xchg
popf
jno
pop
in
inc
jge
pop
xchg
aad
push
push
scas
cmp
or
(bad)
aam
mov
(bad)
add
call
in
sbb
rol
rcr
jb
inc
pusha
jnp
adc
push
sub
and
imul
inc
scas
lahf
push
mov
aas
fisub
pop
(bad)
cmp
or
call
mov
push
inc
aas
retf
stos
stos
in
shl
std
sar
bound
movs
dec
xchg
je
inc
adc
mov
jmp
xor
ret
out
scas
hlt
loopne
jge
loopne
std
in
imul
aam
data16
push
test
(bad)
mov
pushf
in
adc
cmc
mov
or
sbb
into
jns
mov
(bad)
jl
cmp
in
adc
repz
dec
and
outs
sbb
or
xchg
jb
cmps
sbb
inc
mov
loop
popa
inc
(bad)
movs
mov
jmp
test
ins
add
mov
mov
(bad)
jne
push
shl
cld
xacquire
jae
lock
pushf
or
adc
dec
mov
push
pop
push
pop
sbb
and
jmp
cmp
(bad)
out
adc
aaa
inc
clc
stc
cmp
(bad)
jnp
int3
xor
mov
repz
into
or
mov
pop
jmp
inc
jae
sbb
mov
jnp
xor
fdivr
add
jo
pop
pop
ret
jno
jo
enter
retf
ja
bound
jno
or
push
and
push
sbb
push
ins
push
push
inc
rol
jnp
xchg
mov
jge
xchg
or
outs
(bad)
push
cmps
imul
sar
lds
fs
pop
pop
or
and
(bad)
fbstp
inc
out
rcl
addr16
sub
xchg
scas
push
adc
ret
add
clc
xchg
jle
jno
imul
cmp
daa
dec
push
imul
icebp
mov
mov
jne
jmp
mov
and
hlt
fidiv
add
mul
int3
xlat
pop
mov
pop
sti
mov
mov
add
mov
in
cmps
test
(bad)
stos
repz
cmp
(bad)
dec
mov
add
xchg
xor
jmp
ja
push
mov
inc
mov
push
xlat
dec
out
lock
aad
out
dec
cdq
cld
(bad)
iret
div
dec
sub
aaa
sub
fwait
mov
(bad)
in
(bad)
(bad)
jne
inc
lock
mov
jl
shl
jmp
not
(bad)
cld
adc
dec
adc
(bad)
outs
imul
cli
bound
xchg
dec
push
mov
jle
sbb
pop
and
and
add
je
xor
into
je
and
xor
inc
pop
cmp
enter
fcmovnb
and
loopne
outs
xchg
out
sbb
aad
sub
out
mov
mov
push
jno
sahf
mov
ss
and
movs
xchg
mov
(bad)
jmp
stc
(bad)
aad
or
mov
lods
xchg
xchg
jmp
test
pop
mov
ss
push
add
mov
fsubr
mov
pushf
std
mov
xor
and
in
retf
xchg
into
push
inc
dec
sbb
hlt
inc
popf
ins
call
mov
cdq
push
int3
mov
int
inc
push
sbb
retf
mov
xchg
lock
(bad)
pop
enter
pusha
test
sbb
cmp
sbb
xchg
inc
clc
cmc
jmp
icebp
cmp
adc
sbb
outs
push
outs
mov
xor
jns
leave
push
lar
mul
cmc
ret
xor
std
add
push
enter
mov
push
or
retf
stos
mov
dec
cmp
dec
sbb
gs
inc
repz
fisttp
mov
xchg
push
dec
sbb
mov
xor
xchg
add
push
stc
dec
jmp
gs
add
push
pop
stc
out
pop
mov
rcl
and
mov
ja
sti
in
rcl
or
aam
shr
inc
push
and
(bad)
fcmovb
(bad)
lock
js
(bad)
mov
jnp
lock
xchg
popf
shl
pop
aas
sbb
ds
or
sbb
jae
js
dec
jbe
inc
in
jbe
sar
cs
sbb
out
pop
sub
mov
add
xchg
scas
in
mov
fimul
adc
and
addr16
stc
hlt
(bad)
ds
push
lahf
fwait
pop
sbb
pop
addr16
(bad)
rol
and
and
push
lods
pop
test
pop
jle
cld
pop
push
in
or
cmps
inc
js
sbb
mov
repz
xrelease
push
and
push
or
cwd
ins
adc
xor
dec
jb
icebp
das
pop
sbb
xchg
inc
aam
jge
pop
cmp
adc
repz
cs
sbb
fild
aad
dec
pop
lahf
cwde
pop
jle
stos
test
mov
cmp
and
movs
push
xchg
rol
out
loop
xor
xor
pop
aaa
(bad)
lods
push
les
lahf
jl
push
dec
pop
ins
jbe
mov
stc
pop
dec
dec
add
ins
push
jbe
jg
outs
mov
ffreep
sub
sub
bound
jg
int3
inc
mov
test
fwait
push
cmp
push
in
sbb
(bad)
cmps
test
daa
test
and
add
imul
pusha
cmps
pop
jmp
inc
sub
jne
inc
xchg
or
mov
call
mov
enter
ins
mov
pop
mov
mov
outs
hlt
inc
in
push
xlat
mov
in
loopne
push
ins
js
jge
dec
xchg
ins
fcmovu
push
sbb
ins
jae
mov
dec
push
jb
adc
add
imul
or
bound
fnstsw
jle
outs
inc
out
pushf
lods
mov
stos
mov
jmp
xchg
cmp
inc
mov
das
outs
jl
loop
xor
sub
pushf
bound
jl
sub
push
fiadd
test
ds
fmulp
xor
(bad)
xlat
mov
mov
adc
xchg
das
jns
shl
cmp
add
jae
mov
stos
retf
sub
inc
out
mov
out
out
jnp
cmp
out
sub
imul
xchg
cli
sbb
inc
add
mov
cmp
inc
xor
jp
or
in
lock
mov
adc
fistp
cmp
sub
xor
mov
retf
mov
pop
fist
pmuludq
fs
aas
dec
sbb
or
std
mov
movs
pusha
js
jecxz
into
push
add
addr16
push
and
test
mov
xchg
stos
lock
jmp
xchg
cs
xor
jg
mov
push
stc
imul
clc
inc
pop
inc
ficom
sub
inc
pop
xor
adc
mov
fucom
mov
aas
push
sbb
xor
mov
inc
mov
icebp
pop
div
test
dec
inc
shl
cmps
loopne
and
hlt
in
inc
xchg
jl
xchg
(bad)
mul
or
inc
ds
scas
sbb
adc
inc
dec
sbb
adc
mov
jle
fsub
push
std
mov
inc
cmp
icebp
das
adc
stc
lahf
pop
and
mov
call
add
push
push
movs
loopne
lods
shl
dec
push
(bad)
inc
mov
inc
cli
jns
mov
not
mov
mov
mov
ins
ficom
fmul
repnz
stc
jnp
loopne
sub
es
(bad)
sbb
cmp
jge
sbb
(bad)
shl
and
pop
sub
mov
mov
xchg
or
into
jno
add
vmovaps
cmp
xchg
dec
out
push
dec
mov
(bad)
retf
push
push
inc
lahf
and
add
mov
mov
jle
adc
xchg
pop
sub
dec
std
sbb
push
mov
or
fidiv
add
adc
cld
add
lahf
push
pop
push
mov
jmp
jg
or
movhps
pusha
pushf
out
adc
jge
push
loopne
ins
aam
add
push
pop
or
mov
cbw
aam
adc
push
sbb
mov
sbb
cmp
imul
cli
(bad)
jg
push
mov
mov
dec
xor
(bad)
pop
mov
adc
call
adc
mov
jb
or
call
and
sub
push
nop
add
mov
mov
nop
cmps
arpl
adc
outs
repz
pop
jo
cs
pop
ins
mov
push
loope
dec
pop
(bad)
es
mov
pop
push
std
imul
xchg
jg
add
(bad)
xor
movs
xchg
es
cli
cmps
es
int3
xor
(bad)
pop
jne
or
push
lea
inc
test
push
sbb
jns
xchg
pop
pop
sub
in
xor
add
inc
xchg
dec
xor
(bad)
jmp
ficomp
pop
jbe
cdq
add
sub
ins
or
xchg
add
ins
or
xchg
test
mov
ins
cli
push
cwde
repz
cmp
aad
xchg
sub
xchg
cmp
mov
xchg
mov
ja
ds
xchg
and
jo
cs
ret
and
mov
sub
ds
nop
mov
push
(bad)
xlat
adc
xchg
mov
jne
test
mov
push
inc
(bad)
addr16
aas
and
leave
mov
push
inc
(bad)
int
mov
(bad)
push
push
mov
les
push
push
hlt
jb
push
mov
in
adc
rcl
sub
(bad)
sub
iret
dec
std
pop
and
and
jne
or
shr
push
bound
sub
rcl
cmp
add
aaa
jp
xor
sbb
jge
sbb
add
dec
mov
ret
fwait
jbe
mov
pushf
shl
xchg
pop
sahf
sar
(bad)
scas
push
test
movs
mov
push
inc
mov
cmp
das
divps
mov
std
int3
lock
lods
jo
ror
and
pop
xor
aaa
int
cmp
call
mov
jnp
fwait
shl
xor
pop
jle
jmp
out
dec
sti
repz
fucompp
cmp
push
retf
adc
jecxz
shl
pop
call
pop
cld
add
movs
(bad)
pop
cmps
rcl
packssdw
(bad)
or
aam
or
inc
jge
sub
lock
sbb
pop
mov
in
cmp
daa
leave
and
mov
in
xor
cmp
pushf
cmp
fsub
jecxz
aad
repz
mov
aam
out
enter
adc
mov
adc
sub
ror
inc
dec
cwde
fstp
(bad)
aam
call
xor
fld
fmul
cs
inc
sub
sbb
xchg
cmps
out
pusha
out
inc
mov
mov
clc
and
push
push
add
xchg
add
es
adc
es
(bad)
bound
or
call
je
sub
add
lea
cmp
mov
aas
icebp
adc
push
cmp
mov
mov
fild
sti
pushf
repz
dec
sbb
pop
dec
sbb
jle
call
cmp
pop
std
fiadd
aas
inc
add
xor
sbb
movs
mov
lea
mov
ret
cwde
mov
ins
fwait
mov
int3
test
in
inc
jp
push
cdq
rcl
cmp
inc
cwde
sub
fsubr
and
(bad)
xchg
xlat
jecxz
adc
xchg
hlt
xchg
ja
in
mov
mov
dec
ret
dec
inc
add
scas
mov
std
sub
aam
popf
sub
push
mov
jle
popa
lahf
sti
mov
and
pop
test
pusha
popa
out
loope
xchg
dec
xlat
mov
fs
ins
xchg
and
neg
sbb
inc
pop
xor
push
add
iret
or
xchg
(bad)
retf
cmp
addr16
and
dec
mov
mov
jbe
xor
imul
jnp
pop
dec
xor
fcmovnb
jecxz
cmp
add
dec
das
mov
in
inc
cmc
pop
push
push
(bad)
in
jp
xchg
push
(bad)
out
sbb
push
sbb
in
pop
pop
inc
sub
repz
repz
cmp
fs
mov
(bad)
cmp
push
cld
or
ja
out
sbb
pop
repnz
movs
enter
push
(bad)
call
dec
sub
mov
mov
je
jmp
and
mov
xchg
sbb
fild
xor
repnz
jo
dec
movs
call
add
sbb
arpl
sbb
inc
ins
xchg
mov
or
xor
and
pop
es
push
(bad)
inc
ins
sbb
push
push
aas
jnp
sub
jmp
or
mov
sbb
scas
push
aad
popa
mov
ret
cdq
cmc
or
retf
mov
or
out
mov
mov
adc
adc
fimul
mov
out
push
lods
push
jge
mov
and
pushw
mov
sbb
bound
popa
scas
iret
jae
push
bound
outs
and
add
iret
add
cdq
cmp
sbb
sub
cmc
cmp
push
into
jns
loopne
in
add
push
addr16
jns
xor
retf
scas
mov
and
adc
imul
mov
out
sbb
or
das
push
sbb
int3
dec
jae
or
daa
mov
jmp
cld
jne
aas
enter
jo
push
aad
sbb
sar
or
retf
fidiv
or
dec
cmps
jnp
push
popa
ss
adc
push
sbb
mov
mov
mov
add
sar
sub
add
das
cli
or
push
xchg
cmps
ins
cmp
outs
cdq
inc
gs
push
inc
push
imul
sub
shr
mov
lock
outs
sbb
fmul
ins
lods
push
daa
inc
retf
or
and
jmp
sbb
into
and
ja
push
jp
mov
out
jle
sbb
or
sbb
inc
xor
push
or
lea
mov
frstor
hlt
scas
sub
loopne
daa
loope
mov
xor
mov
lods
xor
fstp
bound
mov
loopne
sbb
cmp
fadd
movs
shl
xchg
adc
xchg
jbe
pusha
(bad)
jb
ds
cmps
xor
mov
test
jmp
and
fmul
adc
outs
aam
push
jl
mov
fist
mov
sub
fcom
adc
sti
dec
push
pop
icebp
add
jo
lea
not
mov
popa
in
stos
std
ficom
std
push
push
push
push
sbb
jle
outs
stos
push
mov
ins
or
pop
fld
(bad)
lock
jecxz
scas
icebp
fsubp
push
inc
mov
pop
aaa
pop
cli
(bad)
dec
dec
add
fidivr
lods
xor
ret
inc
or
sub
icebp
cld
out
push
dec
push
adc
ins
mov
sub
shl
(bad)
xchg
test
push
xor
pop
mov
(bad)
jno
jmp
out
jge
fistp
fiadd
push
and
add
mov
dec
aaa
add
inc
pushf
ror
sahf
and
mov
dec
out
cld
and
mov
scas
loope
jae
ins
mov
retf
fldcw
mov
popa
cld
add
out
fidiv
adc
inc
mov
sbb
lahf
bound
jno
aas
jno
jle
loop
mov
cmp
out
xor
dec
mov
aas
test
imul
pop
push
mov
in
pop
pop
push
pushf
xchg
xchg
fwait
mov
or
push
sub
fisub
dec
cli
xor
adc
repnz
test
push
sti
cmps
loopne
lds
and
call
ret
pusha
cmp
xchg
inc
mov
jns
inc
inc
lock
hlt
adc
ins
mov
sbb
xor
loope
jno
mov
daa
pop
mov
nop
fs
add
push
add
cdq
xchg
aaa
mov
shl
paddusw
test
push
neg
adc
scas
xlat
sub
xor
xor
dec
xor
jmp
int3
adc
fptan
jmp
cmp
and
cmp
cmp
sahf
enter
je
loopne
push
mov
pop
xchg
sub
pop
jge
loop
popf
xor
jp
movs
dec
out
and
sti
inc
push
ficom
fadd
dec
xchg
les
fbld
test
int
mov
sbb
sbb
and
fdivr
xor
mov
sub
loope
mov
xchg
pop
test
push
push
imul
jne
adc
cwde
retf
xchg
add
test
xor
jp
cmp
xchg
xor
retf
idiv
cmps
movs
call
je
out
imul
bound
js
loopne
test
cld
lock
das
das
repnz
push
mov
lahf
call
xor
call
cmp
adc
mov
scas
test
scas
repz
lea
sub
(bad)
push
xchg
jg
pop
fadd
test
dec
jb
fidiv
or
xchg
ja
mov
pop
jl
sbb
int
ins
js
mov
dec
push
neg
ins
pop
sbb
pop
xchg
sbb
(bad)
std
mov
clc
imul
and
jge
addr16
popa
daa
cmps
cmp
in
mov
cmp
or
addr16
mov
sbb
into
sar
aas
pop
sbb
retf
xor
push
push
adc
mov
jmp
fwait
mul
jp
data16
sbb
repnz
mov
sbb
add
arpl
adc
xor
into
scas
ja
dec
pop
inc
ins
outs
add
and
icebp
pop
pop
and
sbb
add
add
je
jmp
or
pusha
das
add
pextrw
cmp
in
mov
push
or
or
leave
pop
jle
jecxz
mov
xor
add
sub
ror
out
jmp
add
add
data16
sbb
add
cmps
sbb
jp
xchg
pusha
hlt
mov
clc
mov
or
sbb
ins
fst
mov
repz
inc
outs
daa
into
adc
inc
repz
cmp
and
inc
push
jno
jle
fnsave
out
adc
mov
pop
push
sbb
daa
sub
(bad)
xlat
xor
cmp
dec
pop
push
mov
jno
inc
pop
pop
add
aaa
pop
pop
jl
(bad)
mov
push
or
out
add
outs
ss
xchg
not
stos
inc
add
pop
inc
xlat
mov
add
jp
mov
repz
addr16
jo
mov
pop
jb
fmul
ficom
xchg
add
and
mov
out
lahf
sub
xlat
inc
mov
retf
mov
mov
xor
add
add
aaa
and
lds
or
imul
lods
cmps
std
inc
(bad)
(bad)
sbb
mov
push
push
sti
cld
dec
cmc
pop
fdivr
dec
test
mov
test
xchg
(bad)
xor
retf
test
mov
dec
fbld
fld
bswap
mov
data16
stc
pop
push
aad
mov
call
cmp
or
add
inc
xor
shl
in
or
add
lock
ret
cmps
and
jns
es
push
cmps
inc
mov
ret
cmp
jnp
rol
fistp
push
and
loop
push
mov
pop
fbstp
cmc
cmp
and
js
push
and
arpl
xchg
lods
pusha
or
cmps
jno
ret
out
cmps
pop
inc
sti
(bad)
lahf
in
or
jnp
mov
popf
sahf
mov
lahf
inc
cmc
and
xor
xchg
cmp
push
fbld
scas
adc
jg
pop
idiv
mov
mov
mov
and
std
es
cmp
repz
mov
sub
js
inc
popf
stos
fwait
iret
lods
add
aam
push
pop
ret
cmp
outs
sub
arpl
jnp
add
jno
xchg
xor
jg
das
in
sahf
loopne
jb
push
ret
mov
cmp
jbe
jmp
or
mov
jb
and
ret
pop
pop
stc
dec
and
addr16
xor
aaa
inc
aad
movs
ror
ret
add
mov
jl
dec
mov
mov
cmp
pop
mov
in
leave
repnz
loopne
adc
std
sbb
add
sahf
sbb
sar
aad
ins
sub
stos
jp
jg
fisub
(bad)
(bad)
push
cdq
test
xchg
inc
adc
pop
mov
cmc
out
adc
xchg
neg
call
je
ja
retf
ja
cs
mov
xor
and
sbb
and
lock
fmul
fcom
add
mov
mov
dec
mov
sub
hlt
cwde
or
mov
cmp
mov
pop
xchg
mov
mov
jge
cmp
xor
int
sub
scas
sub
pop
into
push
xchg
mov
cmc
test
test
shl
sbb
(bad)
call
push
xor
jmp
ins
push
pushf
add
movs
pop
dec
push
inc
mov
add
mov
aad
loope
inc
cmp
ret
and
pop
mov
adc
je
loop
jp
and
es
ss
(bad)
pop
or
call
mov
jmp
mov
push
adc
jae
xchg
test
into
scas
jns
sbb
mov
xchg
xchg
xchg
lods
rol
std
xchg
pushf
cld
mov
dec
or
sub
sbb
ins
pop
in
jae
cmp
jo
ins
adc
and
and
adc
je
pop
xlat
pushf
cdq
or
icebp
jg
into
fist
jb
add
xchg
aad
or
call
xchg
cs
push
jae
xchg
mov
push
mov
enter
mov
mov
xchg
xchg
or
mov
add
pusha
daa
adc
cld
push
jno
ja
and
mov
sub
repz
xor
sbb
(bad)
repz
mov
cdq
icebp
xor
mov
push
sub
pusha
sbb
jp
push
sub
xor
test
pushf
push
pop
push
movs
sbb
push
lods
sub
cli
sbb
jp
bound
call
mov
cmp
inc
or
in
or
je
and
adc
sub
xchg
or
lods
enter
jb
jecxz
and
js
dec
mov
pop
xor
fdivr
mov
push
das
and
sbb
(bad)
ins
ror
add
jecxz
inc
sbb
cli
lds
out
clc
push
loop
and
movs
jecxz
lods
js
mov
dec
xor
xor
ror
inc
adc
in
mov
sbb
lods
push
in
xor
stc
push
imul
aam
and
sbb
and
xchg
jmp
(bad)
(bad)
adc
mov
or
sub
mov
or
(bad)
outs
stc
in
test
fsub
push
add
fst
xchg
inc
mov
sahf
xchg
ins
pop
mov
push
shl
adc
sbb
and
sub
inc
ds
ins
sbb
daa
cmp
iret
daa
arpl
mov
lock
ins
dec
xor
mov
daa
iret
retf
frstor
fcmovb
mov
jno
add
pop
jnp
call
repz
movs
cs
jns
cmp
lea
sub
shr
jnp
mov
out
lods
jmp
sub
lods
push
(bad)
pusha
js
lods
cmps
cmp
loopne
inc
scas
ins
les
or
fmulp
xor
pop
sub
mov
jecxz
icebp
outs
pop
rol
ja
push
push
push
dec
xor
xchg
stos
jmp
xchg
rol
ins
mov
inc
sbb
sbb
ins
mov
scas
loop
lahf
push
cli
and
cmp
mov
movs
cmp
repz
jbe
dec
push
loope
dec
push
xchg
push
inc
call
mov
test
movs
jnp
outs
sub
mov
(bad)
iret
retf
pushf
lock
push
pop
cmps
pop
out
jmp
popa
mov
or
js
in
outs
daa
aad
ss
mov
pop
enter
or
cmc
lds
(bad)
fsub
mov
xchg
sbb
mov
cld
cli
dec
inc
xchg
sub
inc
aad
jmp
mov
hlt
imul
inc
fidivr
test
(bad)
mov
pcmpgtw
or
or
lods
and
dec
aaa
or
cmp
push
sbb
inc
mov
mov
mov
movs
hlt
das
jns
ret
add
dec
lods
aam
pop
loopne
inc
xchg
add
pop
sub
sbb
cli
shl
jns
adc
jge
sub
int
pop
xor
sub
cmp
cli
(bad)
rcl
and
repz
(bad)
jae
or
cwde
(bad)
mov
test
and
clc
inc
rol
stc
xor
ss
bound
test
mov
push
pushf
and
pop
jmp
ins
cdq
push
and
push
addr16
push
mov
fwait
test
aam
xor
mov
ror
adc
fmul
fst
jns
and
push
or
xor
nop
test
mov
clc
out
xor
xchg
hlt
mov
jbe
jb
and
pusha
out
les
or
popf
je
sub
stos
mov
dec
inc
gs
sub
jmp
in
push
xor
out
pop
push
add
or
pusha
hlt
push
pop
sub
sub
clc
sub
pop
mov
mov
mov
push
mov
ja
lock
mov
es
cmps
add
cmp
ja
sub
cmp
shl
pop
data16
ficomp
inc
pop
or
xchg
xor
mov
fisttp
test
push
clc
pop
jg
ss
xlat
sbb
jae
push
cld
popa
imul
mov
xchg
ins
xor
fdiv
adc
mov
cmps
std
or
fldenv
mov
adc
pusha
out
out
fisub
jg
inc
fsub
lahf
retf
in
aam
inc
je
loopne
xor
push
add
cli
xchg
(bad)
mov
or
xchg
mov
xor
mov
push
into
sahf
(bad)
ins
mov
push
clc
mov
fwait
into
xlat
cdq
add
xor
mov
adc
ins
xchg
mov
jge
int
jle
icebp
cmp
inc
in
push
cdq
ins
xor
push
jle
sbb
out
and
inc
(bad)
loopne
and
mov
je
push
mov
data16
test
cmp
push
ja
cmp
add
repnz
cmp
cld
out
mov
jmp
aas
int3
loope
aad
xor
push
mov
inc
sbb
mov
call
xchg
repnz
in
cmp
fiadd
xchg
jae
xchg
jne
push
pushf
lahf
ins
leave
or
push
leave
addr16
(bad)
and
add
mov
lea
cmc
ficomp
(bad)
adc
shl
in
mov
aad
jne
and
sbb
fucom
and
test
cmps
push
clc
dec
mov
scas
popf
out
frstor
adc
mov
call
and
push
(bad)
adc
outs
push
mov
mov
dec
cdq
push
(bad)
or
shr
sbb
and
outs
xchg
pop
clc
pop
pop
ds
stc
out
into
push
mul
repnz
inc
call
pop
dec
add
add
int
cld
stos
cmp
sub
adc
scas
cmps
pop
hlt
das
or
pop
adc
cmps
adc
pop
movs
or
int
mov
outs
jmp
xor
jg
adc
mov
jne
jg
cmp
mov
aaa
clc
dec
leave
rol
xchg
imul
or
lods
sbb
je
out
jg
cmp
loopne
sbb
sbb
push
aam
repnz
mov
xchg
cmps
dec
pop
(bad)
and
sub
xchg
push
push
cmp
and
jle
fnstcw
cmp
fsub
xlat
inc
cmp
and
dec
daa
mov
push
pushw
dec
pop
icebp
adc
mov
enter
hlt
mov
lds
cmp
mov
cmp
lods
or
scas
xchg
xchg
or
adc
xchg
inc
mov
mov
and
test
adc
hlt
mov
test
or
jnp
xchg
jne
mov
into
sbb
jmp
jmp
or
mov
or
xchg
loop
add
pushf
mov
add
and
popa
jecxz
inc
sub
dec
out
xchg
xchg
out
test
repz
es
sbb
aam
dec
push
push
xor
jno
in
push
push
in
push
mov
call
mov
call
dec
ficomp
test
or
pop
cdq
sub
iret
lahf
cmp
ret
sbb
dec
adc
icebp
cld
mov
cwde
mov
shr
stos
sub
pop
shl
test
repz
mov
push
(bad)
outs
push
and
into
cld
daa
inc
ja
loop
xlat
push
scas
aad
clc
lock
jne
in
mov
out
out
out
xor
shr
pop
push
outs
push
fcomp
scas
dec
test
faddp
and
rcr
or
xor
retf
inc
jmp
ret
addr16
in
sub
jne
cmc
cmp
loop
mov
mov
jae
jg
sbb
popf
leave
jae
or
repz
mov
stos
aam
jae
ss
push
or
and
sub
icebp
adc
lods
add
std
clc
addr16
outs
cmc
mov
adc
jnp
cs
fsub
in
adc
data16
mov
neg
cdq
mov
adc
enter
mov
and
data16
add
ss
dec
mov
pop
scas
nop
scas
mov
sar
and
shl
push
dec
addr16
ins
jle
push
ror
ret
retf
mov
ja
fld
aad
add
movs
ins
cmc
shr
repz
jl
sti
mov
lahf
mov
mov
fdivr
outs
push
gs
add
xchg
and
and
lods
lods
gs
and
icebp
push
loopne
repz
jae
ds
mov
dec
pop
xor
xchg
mov
adc
jo
scas
mov
or
push
scas
stos
test
jb
call
jmp
fwait
sub
int3
pop
in
mov
leave
sbb
mov
pop
lahf
call
pop
dec
mul
les
mov
arpl
je
mov
(bad)
lds
lea
jmp
xlat
pop
mov
fs
stos
push
dec
add
mov
ret
in
mov
(bad)
mov
adc
dec
or
neg
call
xchg
and
fisttp
pop
clc
sub
(bad)
scas
add
out
and
cdq
pop
aas
stc
pusha
aad
sub
ja
pop
dec
pop
adc
mov
mov
retf
ins
retf
mov
push
sbb
retf
or
fdivr
or
jle
xchg
mov
cmp
jns
dec
cs
jmp
xchg
sar
pop
sbb
xlat
cld
cmovg
cmps
and
clc
es
ins
xlat
(bad)
(bad)
test
jle
adc
pop
or
mov
movs
add
mov
xchg
jecxz
push
pop
loope
push
stos
mov
jb
or
(bad)
in
jo
and
add
jl
pop
dec
push
das
repz
repz
xchg
push
jmp
(bad)
sbb
into
mov
call
pop
inc
cs
cmps
jo
push
scas
pop
pop
fistp
in
lods
shl
mov
mov
loop
inc
icebp
or
loop
pop
mov
loop
push
sub
fcom
inc
pushf
(bad)
jae
ins
ficom
dec
mov
pop
add
je
xor
ds
shr
rol
push
movs
inc
and
jb
jmp
repnz
neg
inc
sbb
or
mov
xor
sbb
jmp
popf
test
jp
sahf
push
add
jmp
adc
jmp
xor
ss
je
shl
inc
pop
pop
cwde
les
push
adc
push
adc
xor
pop
loop
sbb
or
sbb
xor
cld
push
out
push
cmp
jb
in
sub
scas
xor
out
fs
test
lock
sub
mov
pusha
cs
jne
lods
sbb
call
loopne
retf
xchg
sahf
or
fistp
inc
jmp
iret
pop
rol
imul
fild
into
xlat
test
jle
out
loop
mov
pop
test
mov
sbb
aad
sbb
dec
dec
and
(bad)
fldenv
lods
mov
push
repnz
inc
xchg
mov
add
dec
into
xor
repz
(bad)
inc
bound
out
ins
xor
scas
adc
arpl
les
call
push
jno
pop
cs
pushf
test
daa
dec
dec
fcmovnb
inc
xchg
dec
jns
push
mov
sub
push
push
pushw
and
fistp
jne
pop
and
mov
jg
sbb
pop
mov
fidivr
aad
in
inc
adc
mov
stos
icebp
jl
stos
adc
sbb
mov
xchg
jmp
stc
push
jmp
cld
imul
add
mov
movs
xchg
mov
dec
mov
sub
xor
ins
les
and
and
js
mov
ror
add
xor
ret
aaa
jne
out
pop
cwde
jbe
stos
xchg
push
fdiv
or
cdq
ret
arpl
cmp
lahf
fisubr
sub
pop
scas
aam
xor
add
mov
dec
cld
arpl
mov
shl
push
and
pop
jno
mov
adc
lahf
js
push
das
adc
icebp
push
or
jae
add
push
fist
dec
adc
ret
out
call
xchg
mov
xchg
ins
popa
mov
das
jno
push
cs
cmps
fmul
shl
mov
jnp
cmp
jge
jo
xchg
pushf
repnz
sbb
fwait
je
inc
adc
dec
sti
sbb
inc
out
ss
xor
sbb
sbb
out
out
mov
push
into
pop
ficomp
int3
sub
in
xor
cmp
mov
je
cmp
mov
lods
dec
call
popa
pop
mov
mov
sbb
pushf
jmp
xor
les
mov
ficom
dec
int3
cmp
movs
push
fcom
ret
inc
sbb
enter
scas
js
aaa
movs
(bad)
fwait
loop
fs
out
dec
dec
mov
jge
popf
mov
fiadd
loop
mov
pop
ror
inc
cmp
sub
mov
(bad)
cmp
and
jbe
(bad)
iret
and
(bad)
ins
cmc
push
add
outs
sub
mov
in
adc
mov
cmp
jmp
xchg
outs
dec
push
mov
int3
aas
daa
jo
cdq
retf
js
sub
adc
inc
ja
jb
mov
xlat
dec
aad
adc
cmp
stos
out
adc
addr16
sub
sub
xchg
in
and
mov
retf
daa
icebp
cmp
(bad)
(bad)
push
test
sbb
(bad)
cmc
je
div
sar
loope
mov
ss
pushw
jae
cs
xor
jne
leave
arpl
leave
(bad)
xor
xchg
sbb
pusha
sbb
or
es
adc
inc
jns
mov
jge
mov
(bad)
sbb
jbe
mov
mov
into
jbe
outs
mov
lods
push
mov
xchg
leave
stos
jbe
pop
sti
cmps
push
add
and
adc
mov
(bad)
popa
pop
dec
adc
test
pusha
pop
ret
jp
xchg
cld
mov
sub
adc
adc
xabort
leave
xchg
(bad)
sbb
mov
xchg
ret
stos
js
out
inc
sbb
loope
add
adc
push
ror
mov
sti
jne
test
add
mov
(bad)
jecxz
jnp
sbb
sbb
jns
(bad)
xor
aas
fmul
push
push
inc
sub
jmp
push
idiv
mov
jne
jns
pop
out
xor
mov
push
cs
mov
daa
daa
clc
ret
neg
inc
sahf
clc
cli
cli
adc
retf
nop
and
jmp
(bad)
cwde
jge
or
pop
xchg
shr
add
std
inc
outs
inc
sar
scas
dec
xchg
pop
adc
xchg
test
sub
rol
cmps
mov
fistp
pop
inc
cli
fdivp
ins
adc
mov
out
cmp
std
inc
arpl
ret
mov
xor
jmp
inc
and
scas
sbb
adc
pop
mov
dec
xor
pop
data16
repz
xor
cmp
movs
ret
(bad)
in
cmp
cmps
fisttp
test
mov
mov
add
pop
jge
stos
stc
out
and
dec
sti
cmp
inc
push
sbb
ret
push
sar
sub
dec
mov
mov
mov
retf
dec
mov
cli
fild
data16
mov
outs
mov
jne
pop
popa
adc
pusha
xchg
stos
call
sub
and
cdq
inc
mov
push
xor
popa
dec
dec
popa
adc
push
lods
jecxz
gs
in
jb
in
movs
out
push
dec
or
mov
pushf
loop
enter
push
cmps
add
and
inc
jp
dec
repz
push
xor
les
dec
adc
cmps
or
sub
cli
xchg
jle
xchg
mov
call
icebp
lock
aam
mov
inc
jmp
imul
shr
or
adc
xlat
pop
and
in
mov
push
data16
xchg
imul
jl
mov
jae
ins
xchg
in
sbb
mov
cmps
adc
scas
cld
jmp
fdivr
xor
mov
rol
imul
inc
pop
out
gs
pop
add
mov
inc
int3
adc
sbb
and
ds
push
pop
loop
in
fld
push
test
add
lock
test
dec
popf
inc
dec
mov
mov
mov
push
mov
cli
inc
mov
and
stos
into
sbb
dec
dec
pop
push
cmp
dec
popa
jecxz
nop
adc
xchg
mov
int3
int3
outs
rcl
xchg
js
or
cwde
idiv
cli
repz
int3
out
pushf
sub
movs
and
pop
push
adc
jl
mov
jnp
mov
aaa
shl
test
std
jnp
movs
add
and
nop
cld
bound
aad
rcr
sub
aad
and
push
cmp
or
cwde
or
xchg
pop
jl
sbb
jbe
sbb
dec
fcomp
popf
aad
(bad)
ror
(bad)
jns
mov
xor
dec
cmp
idiv
cs
lds
pop
(bad)
enter
iret
dec
leave
xor
xor
pop
dec
(bad)
inc
add
and
imul
stc
stc
adc
adc
popf
pop
(bad)
popf
outs
addr16
test
cmp
cmc
sbb
push
and
or
xlat
arpl
and
adc
push
shr
gs
jmp
mov
mov
dec
(bad)
into
cmp
jnp
adc
dec
ret
sar
push
mov
dec
pop
or
cmp
mov
imul
push
imul
test
(bad)
jnp
test
mov
sub
outs
pop
mov
nop
mov
xchg
or
loop
repnz
clc
cmp
mov
pop
add
int
add
and
movs
push
test
pop
sub
mov
mov
pop
cwde
or
ss
mov
test
lds
jge
mov
inc
loopne
das
call
cmp
pop
pop
sub
loopne
jmp
outs
jg
jecxz
jmp
std
mov
in
dec
sub
fst
jno
sub
(bad)
iret
mov
cli
(bad)
scas
pop
stos
jmp
push
outs
scas
and
repnz
push
scas
shr
push
adc
hlt
pop
aas
in
mov
add
stos
pop
pop
not
inc
inc
popa
and
outs
outs
shl
dec
push
inc
popa
enter
lods
mov
out
or
jbe
pushf
push
inc
xor
aaa
popf
sbb
rol
push
repz
ss
pop
dec
fild
lahf
sub
adc
xor
xchg
mov
mov
adc
scas
jae
scas
xchg
inc
mov
cmps
mov
cs
imul
rcr
pop
sbb
inc
push
retf
xchg
sub
rol
mov
mov
popa
dec
mov
enter
sbb
fwait
hlt
loop
inc
push
shr
cs
ss
add
(bad)
stos
nop
mov
mov
xbegin
pop
or
push
or
add
sub
lahf
sahf
je
or
dec
and
dec
fcomp
(bad)
mov
adc
sub
in
sub
stos
(bad)
(bad)
aad
stos
mov
jl
sbb
and
shr
ret
add
lea
pushf
sub
sti
inc
loopne
sbb
xor
retf
add
adc
cmp
jecxz
mov
mov
test
pushf
in
adc
xchg
cli
jmp
dec
(bad)
and
cmp
push
call
mov
fnstcw
mov
inc
lods
push
in
pusha
push
lods
iret
xor
or
cmp
sbb
mov
push
mov
scas
sbb
repz
into
add
mov
lds
daa
out
sub
mov
inc
outs
adc
loop
jo
imul
xchg
fld
cld
std
into
dec
dec
clc
mov
jae
inc
pop
pop
out
lea
scas
add
add
sub
xchg
movs
shr
mov
jle
pop
gs
sbb
add
mov
mov
adc
fmul
add
xor
je
test
mov
and
ficomp
jae
ins
scas
cmp
hlt
push
(bad)
sub
fwait
add
mov
fdivrp
bswap
pop
inc
xchg
hlt
add
out
call
xchg
arpl
(bad)
push
fnsave
adc
push
scas
and
inc
in
and
push
std
fmul
adc
scas
in
push
inc
fcompp
xchg
add
dec
(bad)
fcmovb
inc
sbb
retf
sub
mov
dec
push
ss
sub
push
in
push
lock
ds
mov
jge
data16
add
jge
bound
(bad)
pop
sub
mov
xchg
test
das
mov
in
dec
inc
mov
mov
fisub
lods
jmp
inc
mov
cmp
xchg
cld
(bad)
retf
or
mov
loop
int
je
enter
xor
arpl
mov
dec
cmps
(bad)
push
lods
sti
jmp
in
sub
mov
std
xor
repnz
loope
stos
adc
movs
adc
mov
repz
sbb
push
adc
or
adc
jnp
pop
jb
cmp
into
les
out
in
mov
test
popa
nop
mov
iret
nop
dec
nop
xor
icebp
xchg
sub
mov
cdq
lds
push
std
lods
daa
mov
xchg
cli
push
data16
fld
cmps
(bad)
loop
pop
hlt
mov
ins
push
clc
inc
out
add
std
push
dec
inc
or
sbb
stos
pop
fld
pop
iret
xchg
pslld
int
mov
shl
fstp
int
stos
push
pop
mov
outs
shl
xor
inc
push
dec
std
adc
cmp
ror
push
fmul
fdiv
loopne
mov
das
push
or
iret
(bad)
cli
add
push
test
inc
jmp
or
(bad)
jecxz
loopne
lods
xor
pop
stos
lods
jecxz
cmps
mov
dec
iret
cwde
sbb
sbb
vmread
mov
jbe
ss
test
out
adc
les
fdivr
mov
mov
jbe
push
(bad)
out
or
push
or
arpl
mov
arpl
out
fidiv
lock
in
pop
cmp
xchg
rcr
mov
fistp
fstp
mov
jae
push
add
jge
sub
xchg
cmps
dec
mov
and
sbb
sub
mov
sub
and
jae
mov
shr
cdq
mov
xchg
inc
mov
jmp
sub
movs
add
jno
rol
rol
and
stos
xor
push
jns
aam
cwde
retf
jns
les
je
pop
inc
ss
jge
in
std
ficom
je
cmp
cmp
jp
push
pop
inc
loope
push
mov
xchg
retf
xchg
cmp
adc
cmp
add
mov
xor
xor
int3
test
leave
jb
add
inc
fcomp
xlat
fnstsw
jmp
mov
xlat
dec
dec
icebp
lods
test
(bad)
dec
adc
and
retf
fucom
inc
push
std
pop
or
(bad)
lea
sub
loope
in
push
dec
fimul
and
jmp
movs
cwde
mov
cld
adc
aad
dec
int3
push
fld
imul
in
mov
outs
xchg
into
int3
jp
push
dec
es
mov
rcr
mov
outs
sti
dec
fst
cmp
call
into
xchg
shr
ins
(bad)
push
shl
adc
and
cmp
xchg
xlat
cmc
xlat
pop
addr16
fwait
pop
or
outs
xchg
stos
mov
movs
leave
in
(bad)
and
ret
cmp
movs
dec
js
ret
mov
jmp
stos
pop
aam
cmp
cmp
and
leave
mov
arpl
mov
push
movs
jg
lock
movs
pop
mov
bound
mov
mov
mov
push
retf
ret
inc
mov
pop
jb
add
stos
and
hlt
out
fistp
xor
adc
rcl
add
push
pop
(bad)
int
stos
mov
jo
ret
das
(bad)
cs
xchg
sbb
lock
lahf
and
mov
push
xlat
or
std
test
iret
loopne
jg
xlat
mov
mov
dec
je
lods
sub
cld
(bad)
jge
jge
or
lds
mov
inc
(bad)
lock
ins
sub
inc
and
test
out
add
xor
ret
adc
mov
fs
cwde
cmc
shr
adc
pop
inc
stos
rcl
mov
aaa
(bad)
jmp
rcr
pop
movs
out
call
outs
mov
dec
mov
sar
push
push
call
fucomip
dec
outs
mov
inc
or
mov
mov
retf
mov
in
sti
aam
mov
push
adc
cmps
aam
in
fsub
xor
sub
xor
or
test
push
bound
mov
sub
sbb
inc
lock
lods
scas
sbb
or
sbb
scas
das
aas
or
cld
add
mov
xchg
add
cmps
push
into
inc
test
dec
repz
mov
jne
retf
push
(bad)
(bad)
aam
aad
call
adc
jmp
out
ds
jnp
shl
mov
shr
xchg
xor
adc
shl
in
shr
cmp
js
pop
(bad)
xchg
jo
xor
test
mov
iret
xlat
cmc
pop
ret
out
ss
out
hlt
push
mov
(bad)
not
sub
call
mov
into
push
pop
or
ror
mov
xlat
outs
leave
jo
mov
mov
sub
daa
and
push
mov
call
repz
add
lods
repz
mov
pop
std
pop
ss
out
pop
sbb
push
in
rcl
dec
daa
icebp
sub
dec
pop
jmp
ja
popa
shr
push
mov
push
aaa
sub
and
cs
ins
mov
ret
out
push
or
pusha
jae
push
sub
icebp
ds
or
pop
sar
add
jl
push
pop
(bad)
push
test
adc
repz
(bad)
das
int
xor
cwde
sub
test
pop
mov
adc
inc
rcr
fild
push
out
in
or
add
jb
std
jp
lock
psllw
scas
lea
push
jae
xchg
jg
fisttp
mov
popf
(bad)
push
scas
(bad)
setno
xlat
lods
js
fcmovu
mov
(bad)
xchg
cdq
adc
adc
scas
add
push
out
inc
in
xchg
sub
xchg
mov
mov
jbe
addr16
dec
ins
xchg
inc
cmp
stos
movs
dec
cmc
jle
test
inc
enter
sahf
or
mov
sub
inc
mov
or
mov
inc
sbb
push
add
mov
int3
popa
dec
jecxz
cmps
fisub
cmc
icebp
inc
(bad)
push
push
test
mov
je
or
jecxz
loop
mov
xor
jg
dec
xor
mov
xchg
xor
pop
in
(bad)
cmp
ror
in
out
and
aam
scas
inc
mov
je
ds
mov
inc
cmp
pop
ret
fidivr
pop
loop
clts
push
in
or
shl
outs
xor
push
jo
pop
adc
xor
test
mov
ins
sbb
mov
fnstenv
pusha
pop
or
arpl
loop
mov
iret
mov
sub
adc
push
sub
hlt
test
mov
arpl
clc
and
sbb
mov
adc
sub
mov
sbb
lea
mov
push
jmp
daa
je
push
shl
or
jecxz
xchg
push
sahf
stc
bound
push
aad
(bad)
mov
cmp
inc
jo
cmp
hlt
(bad)
jg
xor
cmp
or
ret
cmp
mov
lds
inc
ins
mov
das
add
and
loop
inc
push
mov
add
cmp
sti
sbb
in
mov
loopne
pop
push
sbb
adc
sub
cdq
pop
dec
rol
rcl
xor
pusha
mov
push
cli
in
stos
push
or
xchg
mov
repz
push
mov
cmp
sub
adc
gs
dec
cwde
lds
cmp
mov
leave
std
mov
add
loope
out
ret
sbb
mov
add
stos
push
mov
inc
mov
rcr
sub
arpl
in
pop
addr16
cmp
sub
(bad)
adc
ret
sub
stos
jg
mov
xor
xor
hlt
xor
cli
pop
jp
popf
inc
jae
mov
in
jnp
test
lock
mov
mov
and
aad
or
xchg
data16
cmp
(bad)
daa
add
out
scas
outs
test
mov
mov
hlt
push
mov
mov
xchg
int
sub
imul
adc
test
sub
xor
cmp
(bad)
or
pop
xor
cmp
movs
out
loope
dec
(bad)
in
loop
sub
test
imul
add
loop
out
mov
cmp
repz
in
pop
movs
fsub
jge
dec
xchg
jecxz
mov
sbb
push
ficomp
dec
pusha
ins
sub
sub
enter
jecxz
aas
inc
mov
mov
push
push
ret
test
jns
fdivr
or
pop
pcmpgtw
ror
or
arpl
test
sbb
lea
push
dec
or
retf
outs
xchg
sahf
fwait
add
loop
hlt
or
ins
cmps
or
clc
xchg
mov
sbb
xor
xchg
in
out
or
lds
dec
pop
jg
cwde
mov
(bad)
jge
out
popa
xchg
in
cwde
fst
cmp
push
xchg
mov
jmp
cmp
xchg
xor
and
or
push
test
jnp
pop
jge
pop
mov
and
dec
fdivp
lea
aam
shl
loopne
pushf
push
imul
imul
cld
pop
and
xchg
mov
or
and
mov
mov
es
das
xor
mul
imul
jns
jbe
sub
jbe
out
daa
icebp
out
or
dec
inc
mov
add
pop
fwait
daa
jle
es
not
or
sar
rcl
mov
xchg
ret
aas
lods
es
inc
daa
pop
push
ss
nop
out
pop
or
jecxz
sub
add
movs
dec
add
mov
int
dec
pop
popf
inc
or
sbb
and
sub
iret
aas
mov
dec
dec
ret
jno
xor
test
add
xor
in
inc
fdiv
and
in
daa
jns
arpl
test
aas
push
test
adc
fstp
test
div
add
push
(bad)
and
in
mov
aam
test
add
mov
icebp
outs
cmps
cmp
lods
mov
lock
mov
ror
aam
xor
arpl
stos
not
push
gs
test
pop
leave
adc
dec
lahf
into
xchg
or
jg
adc
jecxz
dec
and
adc
ins
call
sti
mov
aad
pop
les
xchg
mov
jl
jmp
sar
ficomp
add
add
repnz
imul
push
pop
jp
adc
ja
inc
jmp
shl
fisubr
jbe
xchg
retf
in
jp
sub
mov
in
mov
inc
and
cmps
dec
movs
icebp
dec
in
outs
imul
enter
add
cmps
lahf
xchg
jno
or
or
(bad)
mov
pop
sti
sub
jecxz
jno
mov
mov
mov
jge
rcl
(bad)
push
(bad)
jp
test
mov
mov
fdiv
mov
imul
lods
(bad)
mul
popfw
adc
dec
xor
or
call
inc
jnp
cmp
bound
jmp
dec
in
aam
fimul
xor
xchg
test
xchg
clc
idiv
pop
push
aad
jp
bound
and
ja
jb
and
jmp
or
cmp
dec
jae
mov
outs
fld
xor
sbb
and
push
add
popf
pop
sahf
je
sub
test
aam
pop
popf
mov
pop
add
xchg
cs
and
inc
imul
and
jmp
in
dec
les
in
dec
(bad)
lock
pop
sbb
mov
sti
jne
mov
and
push
sub
imul
push
cmp
mov
cli
out
and
add
and
popf
xor
cli
fcomp
or
test
adc
sti
dec
pop
rcr
dec
fldenv
test
adc
fsub
test
fimul
xor
mov
das
imul
ins
and
xchg
frstpm(287
and
xor
cmps
mov
sbb
xchg
mov
sbb
jle
xor
push
cmp
mov
mov
inc
adc
ins
fwait
mov
cmc
mov
sahf
sub
addr16
in
or
xchg
jl
dec
or
repnz
adc
mov
or
mov
(bad)
jp
xchg
in
clc
mov
mov
(bad)
pop
mov
imul
push
cmp
sub
mov
icebp
retf
push
jbe
and
mov
outs
inc
int3
adc
and
pop
ficom
dec
push
and
scas
mov
sub
repz
dec
lock
mov
mov
repz
int
in
pop
pop
jle
xor
loope
and
jmp
jecxz
rcl
cmc
cli
cmp
xchg
and
movs
mov
and
adc
div
addr16
mov
ret
ds
lea
out
jae
inc
ds
add
std
add
sbb
leave
lahf
adc
mov
inc
xchg
inc
(bad)
int3
sahf
es
jbe
sub
loop
pop
xor
sahf
pop
cdq
xchg
lods
cmp
retf
enter
push
jmp
stos
adc
jmp
scas
jmp
xor
or
jge
xlat
cmps
dec
cmp
push
aas
mov
out
clc
fcmovne
fadd
and
xchg
cmp
(bad)
aam
add
lea
cmps
fimul
adc
sub
popf
data16
sub
in
sbb
fst
mov
add
repz
rcr
push
mov
rol
xor
mov
cld
ret
xchg
push
dec
inc
out
mov
test
and
mov
and
jb
cdq
jb
ror
ret
movs
stos
outs
leave
jge
inc
addr16
bound
mov
out
cmp
jl
(bad)
jg
adc
push
(bad)
jmp
imul
or
lock
daa
adc
jae
sub
pop
sub
ins
push
sahf
std
leave
adc
dec
mov
fwait
push
bound
pop
je
cmp
jnp
dec
lods
popf
ja
sub
mov
xchg
mov
push
cld
xchg
fistp
push
pop
idiv
xor
xor
pop
mov
(bad)
pop
in
mov
cmc
fsubp
not
xchg
inc
push
lea
sub
out
xor
sar
inc
out
cmp
xor
cdq
in
mov
fld
jmp
push
(bad)
ficom
call
cli
daa
ja
stos
stc
jnp
clc
and
shr
ror
out
ret
mov
jae
sub
sbb
jmp
sub
adc
outs
aad
ins
not
lea
test
dec
ds
ins
mov
daa
out
mov
(bad)
pushf
rcr
dec
mov
xor
and
mov
and
sub
lods
loopne
movs
mov
out
fwait
xchg
cmp
jmp
adc
aas
xchg
mov
(bad)
hlt
or
jns
dec
cmp
and
cmp
jbe
fistp
mov
repz
js
inc
int3
sbb
lock
push
stc
into
test
jg
add
push
mov
mov
adc
inc
cmp
xchg
les
dec
xor
pop
fdivr
xor
jge
add
fisttp
push
out
sub
add
pop
xchg
pop
(bad)
out
cli
sub
push
les
mov
out
scas
xor
add
loope
or
inc
adc
sbb
dec
in
mov
es
(bad)
cld
ror
fwait
outs
retf
xor
out
aas
add
icebp
pop
mov
in
stos
(bad)
stc
mov
cmp
push
arpl
fsub
dec
and
stos
mov
call
mov
add
test
sbb
aam
arpl
gs
mov
xchg
push
fdivp
pushf
mov
sahf
xor
fiadd
inc
pop
xchg
cld
outs
call
test
mov
adc
and
(bad)
jmp
ficomp
lock
mov
adc
jmp
shr
sti
out
jmp
or
sbb
test
jl
adc
and
xchg
pop
hlt
push
(bad)
repnz
pop
xor
cmps
repnz
mov
stos
mov
scas
xchg
cmc
inc
sbb
iret
int3
cmp
jmp
sar
out
cld
jge
sbb
lods
mov
mov
es
fimul
(bad)
bound
cmp
rcr
add
fcmovu
(bad)
jmp
cld
data16
ret
inc
popf
and
lods
jg
ja
ja
jmp
test
mov
pushf
int
sbb
lds
aas
add
add
or
inc
xor
test
pop
inc
push
ds
mov
jne
dec
inc
cmp
lods
xchg
mov
loopne
and
push
dec
mov
fwait
test
xor
fbstp
cld
push
lods
stc
fnsave
sbb
pop
push
jmp
jne
fcmove
pusha
jp
stos
pop
enter
out
mov
in
imul
popa
push
ficomp
js
iret
add
cmp
mov
(bad)
push
outs
inc
sub
sub
mov
or
dec
out
in
xor
push
(bad)
mov
or
cmp
(bad)
xchg
cmp
in
push
ret
jbe
scas
inc
fwait
ja
ds
sub
pop
mov
lods
jl
adc
sbb
fisubr
adc
lods
in
setp
push
xlat
adc
int
push
lods
mov
pop
mov
fld
scas
cmps
push
enter
pop
int
sti
popf
popa
dec
mov
pop
int3
jne
aad
jmp
fst
or
lods
fwait
cld
inc
sbb
jl
mov
call
call
jo
sti
mov
push
pop
add
ins
clc
cli
jge
dec
cld
sbb
std
es
mov
mov
neg
adc
add
add
pop
lods
push
xchg
and
xchg
(bad)
xor
xchg
in
sub
push
rol
pop
jecxz
push
fsub
or
xchg
pop
jae
inc
enter
aas
push
ins
popa
mov
call
(bad)
xchg
cmp
push
fmul
iret
or
cmps
push
push
jmp
adc
pusha
hlt
xchg
lods
sbb
add
les
sbb
in
and
mov
mov
jp
movs
inc
adc
das
mov
repnz
cdq
sbb
stos
nop
jp
sub
sbb
rol
int3
test
pop
xchg
retf
pusha
jl
int3
mov
fidivr
xchg
daa
xor
lock
sbb
jmp
jno
and
in
dec
pop
inc
ds
in
call
adc
pop
xor
cmp
(bad)
in
and
dec
int3
and
pop
push
jmp
sub
(bad)
stc
mov
xor
push
dec
xor
ss
aas
popa
jo
cmp
or
hlt
daa
xor
cmp
pop
ja
and
popf
call
out
loop
inc
sub
outs
jp
(bad)
inc
loope
push
push
xor
push
or
mov
xor
test
mov
pop
mov
jl
popf
pushf
mov
outs
and
(bad)
ins
jle
cmp
setbe
cmp
dec
icebp
add
mov
push
(bad)
and
lods
add
and
and
aaa
dec
jmp
cmp
jl
repz
mov
jmp
ret
bound
push
inc
ss
test
sbb
mov
sbb
stc
(bad)
fidiv
mov
jecxz
push
adc
mov
sub
mov
pushf
add
mov
stos
cwde
or
inc
cmp
dec
repnz
pushw
add
stc
stc
mov
into
pop
mov
das
nop
and
sub
jmp
(bad)
cmp
sbb
pop
pushf
mov
iret
adc
push
or
mov
xor
push
je
das
inc
pop
and
pop
in
pop
jl
jmp
fdiv
mov
cmps
mov
jnp
imul
mov
das
mov
fisttp
retf
mov
push
lods
repnz
mov
repnz
(bad)
mov
inc
xchg
pop
mov
and
sub
inc
je
sbb
inc
or
cmp
mov
push
fldenv
sbb
push
push
mov
jge
mov
pop
es
out
fs
test
cmps
push
jno
int
and
das
mov
iret
fisttp
inc
fsub
pop
add
push
je
mov
scas
inc
popf
sub
push
inc
rol
mov
in
in
inc
cmc
(bad)
sub
mov
mov
mov
mov
jle
xor
paddb
push
ds
sub
dec
outs
aaa
(bad)
xchg
sar
sub
pop
cmp
outs
fdiv
sub
jb
clc
loope
xchg
mov
inc
fcomp
cmc
and
loop
pusha
fcom
and
out
out
(bad)
icebp
iret
xor
bound
stos
mov
test
pop
jo
inc
int
ret
leave
leave
xlat
arpl
and
push
mov
mov
ins
or
jbe
mov
mov
fstp
jle
push
popa
js
jno
hlt
repz
jecxz
push
(bad)
sbb
fstp
adc
and
mov
iret
dec
jmp
dec
mov
cmp
stos
sbb
stos
ins
mov
mov
and
(bad)
retf
sbb
push
clc
or
xor
inc
js
sub
mov
push
call
das
les
or
dec
in
mov
stc
aas
call
add
mov
fidivr
test
loope
movs
xor
gs
push
xchg
sbb
or
mov
inc
ins
and
mov
in
mov
mov
xchg
jecxz
or
aaa
sub
(bad)
std
enter
mov
jbe
shr
outs
aas
in
loop
adc
stos
div
pop
xor
sub
pop
mov
sbb
add
xor
pusha
es
pusha
(bad)
test
and
pop
sbb
push
pop
or
mov
loopne
and
mul
cmp
ins
xchg
cli
ss
cdq
cmp
aam
dec
pop
out
mov
les
jno
or
out
cmps
ja
int3
ret
pop
adc
jnp
cmps
add
jle
adc
fadd
xchg
stos
adc
aas
mov
sar
sub
dec
imul
vorps
(bad)
out
cmp
in
sahf
sub
pop
out
fcomp
inc
in
push
(bad)
enter
push
into
lea
icebp
mov
push
or
je
xchg
popf
sbb
adc
adc
aam
adc
mov
jmp
xchg
scas
xchg
xchg
daa
sti
iret
xchg
pop
int3
aaa
cmp
rcr
mov
dec
jp
and
fiadd
add
mov
cmp
inc
jmp
(bad)
push
pop
int
loope
sub
push
push
pop
(bad)
sahf
mov
sbb
or
shr
movs
dec
les
jne
mov
adc
das
in
jmp
(bad)
clc
std
jb
test
push
sbb
fadd
or
xchg
pop
into
mov
cmp
int
inc
enter
sub
shl
add
shl
lea
in
push
dec
xchg
popa
cs
mov
inc
mov
mov
sub
cdq
mov
ret
cmp
inc
clc
mov
jmp
add
out
fisttp
xchg
ret
mov
scas
retf
sub
popf
das
ss
mov
jae
popf
scas
aam
adc
stos
or
stos
out
rcl
sub
cmp
jg
xchg
xchg
retf
mov
mov
mov
sbb
es
sbb
js
jae
mov
adc
out
retf
mov
mov
mov
or
or
push
or
aam
test
sbb
cmp
jp
imul
mov
(bad)
jo
sub
cld
mov
xchg
fcmovu
in
out
xchg
xor
push
outs
pop
mov
shl
fwait
sbb
jecxz
cmps
xchg
in
das
mov
pushf
mov
xor
mov
scas
pop
int
sbb
mov
cmp
loop
pop
pop
inc
(bad)
icebp
xor
sub
ins
mov
xor
push
jmp
ror
scas
and
movs
stos
sbb
fs
xlat
lds
push
jmp
sbb
mov
push
push
mov
mov
clc
sti
sub
je
movs
scas
xchg
fisubr
mov
sbb
lahf
xor
add
out
dec
lods
push
sahf
lahf
ret
ror
xchg
adc
int
push
call
adc
pushf
xchg
mov
out
pop
jbe
stos
in
repz
fs
rol
add
inc
test
gs
sbb
push
adc
in
inc
(bad)
xchg
and
cli
pop
imul
mov
fmul
xchg
cmps
fsubr
aam
push
and
mov
es
pop
ins
loopne
cmp
xchg
popa
call
mov
mov
pop
(bad)
ds
sub
inc
lock
and
test
aad
add
jp
cmps
sub
iret
jno
sti
and
cmps
bound
test
imul
add
fucom
mov
jae
imul
sar
pusha
xor
xchg
sti
addr16
iret
sar
pop
fbld
stc
(bad)
ins
sub
repz
push
sbb
dec
add
mov
sub
sbb
sbb
test
dec
sub
adc
mov
mov
inc
jmp
lahf
outs
leave
and
(bad)
xor
movs
fld
repz
hlt
mov
cmps
bound
fwait
pop
std
jno
je
(bad)
sbb
and
push
rcl
icebp
or
je
out
pop
push
and
mov
cdq
lea
retf
jo
(bad)
out
(bad)
jge
dec
xchg
iret
push
mov
cmp
xchg
dec
jae
fiadd
jp
dec
mov
dec
stos
push
jmp
js
ficom
sbb
cmc
scas
je
jmp
into
xchg
mov
aam
fs
mov
dec
loopne
mov
ret
in
ret
mov
cld
sti
xor
push
shl
loope
movs
stc
mov
sahf
push
inc
adc
xor
adc
jno
adc
mov
sbb
pop
pusha
stc
jecxz
aaa
mov
cwde
mov
int3
mov
adc
xchg
add
jae
daa
pop
pop
loope
jmp
push
jl
mov
outs
and
icebp
movs
sub
adc
push
mov
mov
mov
dec
add
mov
icebp
scas
fucom
cmps
call
jmp
fcmovb
jno
inc
sbb
les
cmp
dec
cld
mov
add
test
cmp
mov
fs
adc
jg
loopne
lods
movs
xchg
inc
int3
adc
sub
push
loope
xor
fdiv
xor
lahf
pushf
add
inc
sub
shr
or
adc
pop
adc
ja
imul
mov
mov
sub
or
test
push
jb
push
arpl
sub
jne
push
clc
cmp
push
inc
and
or
scas
lahf
mov
add
mov
fnsave
xor
mov
jecxz
cmp
test
call
rcpps
push
mov
pop
jno
je
sbb
fwait
nop
sbb
test
push
(bad)
fdivr
mov
stc
(bad)
jno
int3
test
stc
mov
xchg
sbb
arpl
aaa
inc
popf
add
push
add
xor
ret
mov
cmps
sbb
ror
lods
in
xchg
inc
test
mov
mov
loope
pusha
adc
je
mov
das
jl
push
ins
sub
mov
mov
rcr
ret
or
or
inc
jbe
jg
lock
ds
xor
int
loopne
loope
xchg
lods
push
lea
out
fld
inc
iret
div
inc
inc
movs
jmp
sbb
sbb
ja
inc
mov
loop
jmp
and
dec
test
cmp
outs
clc
dec
lods
repnz
out
cdq
adc
xchg
add
retf
push
cli
cmps
mov
pop
and
adc
clc
or
cmps
out
jbe
jmp
mov
mov
sub
xchg
pop
mov
or
jp
adc
mov
pusha
sbb
mov
dec
cli
idiv
(bad)
call
xchg
test
mov
or
in
inc
cmp
jno
fs
imul
mov
pop
aad
push
mov
sahf
mov
inc
scas
ret
xor
jg
adc
loopne
fadd
add
xor
mov
sahf
mov
inc
mov
dec
pop
jbe
movs
xchg
add
sub
push
cli
cmps
test
jmp
std
out
sub
movs
loop
xchg
push
mov
sbb
xor
jge
or
cmp
mov
jae
clc
xchg
ins
aad
jp
lea
push
sbb
scas
adc
arpl
shl
rcr
dec
mov
inc
fimul
inc
jg
sbb
add
mov
adc
mov
outs
in
jae
inc
xor
push
xchg
lods
or
imul
rol
xchg
mov
shr
xor
jo
xlat
std
jne
mov
ins
outs
std
adc
xchg
jae
and
shr
jne
mov
mov
pusha
jl
les
inc
and
mov
jg
rcr
test
xor
lahf
add
sbb
repz
dec
call
in
ds
scas
cmps
xor
loopne
jmp
mov
adc
iret
cmc
inc
clc
popa
bound
aaa
pop
shl
dec
dec
dec
loopne
inc
dec
cmp
push
popa
popa
push
retf
in
mov
jb
pop
fcom
enter
add
dec
dec
or
pop
xchg
jge
mov
inc
jg
xchg
xor
inc
in
xchg
dec
ret
jge
inc
rol
out
mov
sbb
outs
in
sub
mov
cmc
mov
jns
jg
movs
cmp
mov
cmp
and
leave
aam
mov
sar
xchg
cld
xchg
mov
lahf
mov
daa
xchg
daa
sub
shr
bswap
adc
std
add
sbb
push
jbe
mov
ins
outs
popf
cwde
scas
adc
daa
inc
call
div
mov
jb
popa
bound
push
or
push
and
pop
push
aad
neg
imul
pop
ffreep
cmp
int
sbb
xchg
les
(bad)
popf
iret
jne
cmp
fisubr
imul
push
fs
push
inc
cld
enter
shl
idiv
mov
add
cmp
dec
shl
xchg
jmp
pushf
daa
(bad)
scas
jmp
adc
mov
sahf
xor
xchg
movs
add
int3
cmp
daa
mov
pop
daa
or
dec
xchg
jmp
lods
push
sar
dec
fadd
ficomp
imul
mov
pop
lods
pop
mov
ror
push
or
push
xchg
leave
mov
mov
outs
sbb
sbb
nop
add
pop
pop
cmp
or
push
leave
push
fcmovb
xchg
mov
or
inc
or
jecxz
xlat
add
jne
aam
fisub
jecxz
dec
cmps
jnp
int
stos
or
or
sub
pop
jecxz
pusha
add
out
cmp
ret
(bad)
in
fisubr
popa
imul
mov
jns
dec
or
mov
sub
mov
lods
popa
xor
or
fld
mov
les
emms
aas
inc
(bad)
int
push
fwait
test
aas
or
dec
das
cs
cmp
push
pop
and
out
pop
push
test
adc
push
fidiv
and
(bad)
enter
sti
push
fwait
movs
push
inc
(bad)
fistp
popf
cdq
loope
and
mov
sbb
out
fwait
sub
cmps
mov
jmp
add
movs
jmp
xchg
or
add
or
aad
leave
ficom
std
pop
ins
mov
xchg
inc
pop
jae
scas
mov
xor
popa
push
or
add
jl
adc
add
add
jle
xchg
push
jmp
ret
push
std
jne
sub
loope
cmp
test
xor
repnz
sbb
test
rcl
sbb
stos
xchg
arpl
push
shl
inc
mov
mov
int3
dec
fild
aad
pop
in
cmp
sub
int
push
stc
cli
out
cdq
gs
inc
aaa
cli
lds
push
sub
push
call
sar
rcr
adc
mov
pop
jle
or
pop
(bad)
or
dec
and
pop
pop
mov
das
jnp
(bad)
adc
xor
aad
xchg
xchg
das
mov
movs
pop
cs
retf
cmp
xor
push
(bad)
rcr
mov
jg
jnp
add
scas
or
jns
cmc
mov
int3
sbb
cli
sbb
rcr
sub
xchg
outs
sbb
sahf
out
cmp
adc
jnp
mov
inc
out
or
aaa
or
jb
scas
lods
dec
cmp
xchg
shl
loopne
ja
cmps
int3
out
mov
(bad)
repnz
inc
xchg
mov
or
hlt
fcmovbe
and
or
dec
test
push
out
dec
aaa
cmp
aam
xchg
sbb
in
pop
cmp
sub
push
add
sbb
dec
cmps
jl
pop
xchg
(bad)
and
movs
sub
popa
mov
mov
sbb
mov
pusha
jmp
enter
xor
fstp
in
sbb
dec
and
stos
pop
xchg
shl
adc
mov
jmp
ret
nop
(bad)
jno
arpl
xor
adc
ror
push
push
outs
test
push
icebp
sub
mov
jle
and
jne
in
cdq
adc
inc
(bad)
in
lods
shl
les
inc
inc
bound
mov
jp
leave
cmp
sbb
test
int
sub
add
call
or
test
jne
mov
ins
test
push
add
cwde
push
lods
loope
jmp
mov
test
pop
out
out
stc
stos
cmp
push
rep
imul
(bad)
in
mov
div
scas
mov
pop
ret
test
or
sbb
fist
call
push
sbb
in
sbb
icebp
inc
popa
outs
jnp
xor
stos
xchg
(bad)
sub
push
lock
mov
mov
mov
adc
inc
fcom
ds
in
dec
cli
mov
and
lods
mov
push
mov
test
mov
neg
adc
sub
sub
cmp
add
mov
push
mov
not
test
arpl
push
jge
lds
inc
xor
cmp
ins
push
jecxz
xchg
out
callw
cmp
fbld
stc
sbb
xlat
pusha
cmp
fdiv
nop
std
dec
hlt
sub
xlat
loope
pop
into
sub
and
xor
fwait
ret
test
pop
cs
(bad)
fnsave
push
jns
rcr
ins
push
call
ss
mov
pop
mov
mov
adc
cs
lods
jne
add
mov
sub
add
mov
mov
pop
in
xchg
repnz
xlat
mov
cmp
mov
jmp
loopne
push
pop
dec
inc
(bad)
jmp
and
lock
dec
(bad)
jecxz
add
call
adc
mov
movs
test
xchg
sbb
or
int3
adc
cmp
mov
cmp
retf
inc
js
mov
outs
or
rol
sub
sar
xlat
dec
jae
jecxz
ins
cwde
rcl
test
sbb
iret
mov
jno
push
test
pop
out
pop
and
data16
js
mov
xchg
in
xlat
pop
cmps
fxch
mov
xor
int
push
push
ret
ins
push
xor
cld
aas
shl
je
mov
mov
mov
ss
inc
adc
call
cdq
push
pop
sar
pop
je
jb
aad
inc
cld
and
dec
mov
dec
mov
pusha
jmp
dec
or
out
fs
test
fbld
nop
xor
in
mov
in
shr
imul
test
outs
(bad)
mul
push
sbb
hlt
cmps
dec
dec
mov
xchg
sub
int3
jl
icebp
add
ins
adc
xchg
fwait
imul
popa
stos
mov
enter
les
pop
popf
dec
outs
mov
ja
dec
push
mov
shl
xor
out
(bad)
xchg
sbb
(bad)
cdq
jmp
add
sub
push
add
xchg
mov
mov
je
mov
jecxz
mov
outs
pop
fbstp
fdiv
and
sti
mov
ss
mov
sub
sub
in
cmp
push
jo
inc
push
or
popf
sahf
mov
cmp
xchg
ja
and
push
cmps
inc
mov
xlat
mov
pop
cmp
jne
xor
stos
ins
xlat
sub
pop
test
add
pop
cmp
xor
(bad)
sub
sbb
jne
push
mov
pushf
sbb
daa
sbb
test
das
jne
xchg
es
add
pop
cli
push
scas
push
fmul
sbb
ror
mov
inc
mov
fcmovnbe
xchg
jae
push
sbb
out
cwde
leave
jno
aad
lahf
dec
mov
push
push
stos
gs
stc
into
sub
enter
stc
adc
jp
mov
jbe
and
test
and
jl
and
int3
add
mov
sbb
push
mov
shr
outs
ficom
stos
pop
jmp
inc
clc
imul
add
mov
cmp
retf
mov
push
pop
add
mov
mov
(bad)
fistp
mov
aas
inc
xchg
sub
in
mov
inc
jmp
sbb
shl
or
sub
in
dec
iret
fimul
stos
mov
pop
dec
sbb
pop
cld
xchg
ds
(bad)
in
jecxz
push
sbb
pop
xor
dec
into
cmp
mov
dec
in
jl
fnsave
or
fdiv
jnp
inc
mov
mov
out
add
in
and
cmp
clc
mov
jmp
mov
push
pop
test
loop
lods
xor
inc
mov
shl
push
cmps
jecxz
ja
xchg
push
mov
or
outs
aad
dec
(bad)
movs
lea
fsubp
daa
xchg
into
cmp
push
add
cmp
jo
movs
repz
add
xchg
inc
sbb
(bad)
bound
(bad)
cld
shl
cli
inc
push
sub
sub
test
test
dec
repz
add
push
jbe
mov
in
sub
push
fwait
cmp
sbb
lock
jmp
outs
jno
sti
into
fcmovnu
aam
pusha
jns
jle
int3
mov
mov
pushw
xchg
sahf
fidiv
mov
dec
sbb
ret
int3
mov
or
xchg
cdq
stos
call
test
test
pop
mov
out
and
jl
fs
mul
lahf
aas
mov
cmp
xchg
outs
fs
push
imul
add
jg
mov
nop
dec
xchg
adc
std
inc
mov
movs
and
inc
jo
ret
les
neg
sbb
mov
into
aam
mov
(bad)
(bad)
xor
fmul
test
pop
dec
or
add
mov
or
adc
lea
push
cmp
loopne
add
push
dec
shr
xchg
mov
mov
imul
adc
cmps
hlt
mov
and
mov
sub
push
mov
out
sbb
in
xchg
jo
push
adc
mov
stc
cld
shl
stos
inc
lar
push
test
pop
xchg
cmp
and
in
int3
(bad)
retf
call
mov
jp
das
fcomp
test
inc
nop
adc
leave
inc
mov
test
mov
xchg
(bad)
sbb
mov
push
xor
pop
mov
adc
add
call
in
mov
jne
pusha
add
fyl2xp1
or
mov
pusha
pop
cmp
int
dec
xchg
jo
pusha
and
sbb
sub
mov
js
aam
ficomp
mov
icebp
fs
dec
pop
mov
jo
adc
aam
inc
sahf
mov
leave
sahf
loopne
cmp
mov
in
or
mov
test
cmp
cmp
ds
lods
mov
pop
add
jo
mov
xchg
and
pop
stos
int3
je
test
push
push
sub
scas
loope
imul
mov
or
cmp
fwait
fs
cmp
sub
mov
inc
mov
cmp
cdq
pop
ret
mov
fsubr
ja
in
sbb
lock
push
or
cmp
xor
push
lahf
fadd
sub
mov
jo
and
movs
jns
cvttps2pi
inc
ret
add
jl
jecxz
or
xchg
js
sbb
icebp
fiadd
(bad)
scas
loope
adc
fmul
lock
mov
inc
test
add
fsubp
add
enter
sbb
fidiv
sbb
mov
sub
xchg
inc
mov
clc
retf
dec
and
cli
arpl
pop
sub
xchg
push
enter
addr16
(bad)
outs
push
mov
push
call
jg
pop
out
outs
nop
fwait
xchg
sar
add
add
pop
fwait
dec
xchg
jns
pop
mov
(bad)
sub
sbb
aad
test
aas
adc
inc
dec
sub
jecxz
test
pop
jns
les
mov
gs
test
into
daa
sti
adc
jns
sub
mov
les
mov
sbb
mov
mov
pop
int
push
jecxz
es
into
pop
cmps
loope
iret
mov
test
setp
movs
and
cdq
mov
pop
arpl
and
push
mov
pushf
call
loope
pop
aam
dec
xor
in
pushw
jne
sub
iret
push
mov
test
ret
mov
es
push
ins
sub
sbb
jg
sbb
hlt
ins
or
cmp
aas
imul
push
or
pop
cmps
push
stos
sbb
xor
cmp
sar
pop
jno
mov
sbb
mov
cmc
mov
int
aam
stos
inc
push
inc
sub
cmp
mov
push
fisubr
sti
pop
inc
mov
or
addr16
repnz
js
rol
sbb
adc
cmp
js
jne
call
das
push
(bad)
adc
xor
hlt
ss
and
sbb
aas
pop
std
fwait
int
cmp
lock
add
sbb
xchg
inc
pusha
test
jmp
ins
adc
mov
cmp
jno
gs
jo
jl
dec
js
fild
jno
and
aaa
imul
mov
add
sub
cwde
add
mov
dec
out
imul
loope
lods
shl
leave
outs
lea
xchg
pop
pop
jae
retf
sbb
nop
inc
xchg
dec
ds
cmc
cmp
ror
xlat
push
int
and
aad
sub
stc
es
daa
(bad)
cld
pop
data16
scas
mov
jg
mov
xchg
jecxz
mov
es
test
aad
fist
mov
cmc
movs
call
sbb
and
mov
pop
fstp
lods
xchg
aam
sub
ret
push
or
sbb
call
loope
es
cdq
sti
clc
test
add
lods
sbb
cmps
and
scas
push
call
cmove
cs
loope
xchg
fmul
xor
lahf
pusha
in
loop
push
fnstcw
mov
or
out
and
mov
pop
mov
pop
fiadd
inc
into
or
stos
xor
or
sbb
and
inc
loopne
xchg
lods
mov
shl
and
inc
leave
in
scas
ror
pop
lods
pop
sub
sar
xor
loopne
pusha
hlt
mov
inc
aaa
xchg
add
pop
stos
lods
fcom
mul
movs
int
mov
cmp
sub
mov
pushf
sar
add
inc
lods
jl
in
ins
movs
adc
fnstsw
fmul
mov
js
push
push
addr16
jmp
dec
sbb
sbb
push
xchg
xchg
inc
repnz
mov
mov
and
iret
adc
repz
inc
inc
inc
loope
xchg
ins
xor
fs
push
sub
adc
mov
or
jo
push
hlt
out
cs
rol
adc
mov
imul
arpl
stc
out
rep
pop
jmp
mov
xor
push
or
sub
xor
loop
pop
(bad)
fild
in
movs
mov
test
push
cmp
retf
dec
(bad)
dec
xlat
movs
mov
(bad)
pop
adc
jo
mov
mov
data16
sub
mov
add
lahf
int3
shr
psubd
imul
xor
std
or
iret
sbb
fnstenv
jmp
push
lock
int
mov
test
cwde
(bad)
and
cmp
push
dec
(bad)
loopne
push
sub
leave
js
mov
and
pop
sahf
(bad)
push
rcr
out
rcr
lahf
jmp
ins
shr
push
ins
fwait
jnp
pop
sub
retf
jns
clc
bound
js
aam
je
dec
jge
pop
mov
lahf
out
pop
sahf
inc
xchg
xchg
imul
add
imul
xchg
and
mov
and
nop
aas
dec
push
bound
push
ret
xchg
inc
dec
frstor
jecxz
imul
or
popf
sbb
(bad)
(bad)
push
cmps
dec
hlt
fdivr
bound
push
adc
sub
mov
retf
fmul
inc
in
sbb
les
pop
popa
mov
repnz
loop
add
mov
daa
test
cmp
dec
push
fisttp
sahf
retf
cmp
jge
jle
retf
jl
in
cld
(bad)
cdq
cmps
adc
sar
xchg
xor
ret
repnz
xor
daa
sub
pop
cmps
mov
inc
jns
mov
icebp
pop
dec
jnp
or
iret
fmul
xchg
mov
call
fcmovbe
pop
jmp
dec
mov
or
pop
jb
cmps
add
cmp
push
repz
retf
mov
aad
fldcw
and
push
mov
sub
repz
call
sub
retf
fdivr
rol
adc
movs
pop
dec
push
and
popf
pop
pop
lods
add
sub
adc
mov
or
leave
add
rol
and
sub
int
xor
(bad)
(bad)
xchg
(bad)
rcr
inc
popa
lds
(bad)
ins
shl
xchg
pop
int
sub
(bad)
push
mov
push
mov
ficomp
mov
inc
shrd
dec
out
xlat
pop
and
adc
cmp
cdq
les
lahf
repz
fdivr
xor
mov
inc
dec
les
es
or
push
aaa
daa
outs
sbb
gs
out
lods
(bad)
jo
and
jmp
push
stos
jge
(bad)
fnstenv
(bad)
in
jo
sub
ret
sbb
push
fnsave
imul
ror
in
xchg
mov
jl
inc
or
and
or
movs
dec
and
mov
stc
or
addr16
bswap
in
cmp
test
or
mov
inc
test
repnz
jbe
push
mov
xchg
sub
out
push
leave
jg
dec
loope
sbb
out
ins
pop
imul
cmp
mov
push
add
repz
lods
icebp
xor
adc
test
movs
sbb
jmp
cld
call
cld
sar
retf
call
dec
ret
out
mov
or
mov
mov
add
add
gs
pushf
jbe
dec
xor
xor
in
daa
ret
mov
add
adc
or
push
cmp
ret
sar
mov
inc
sub
mov
fwait
ins
add
adc
dec
imul
inc
mov
out
mov
iret
(bad)
retf
addr16
xor
fisttp
clc
dec
adc
addr16
dec
(bad)
out
or
pop
movs
add
push
sbb
inc
icebp
cmp
mov
adc
ins
(bad)
shl
sub
sub
mov
pop
cmp
and
xor
in
jns
aad
mov
adc
push
dec
mov
pop
jne
mov
push
dec
jecxz
aam
ficomp
test
fstp
aaa
xchg
pop
xchg
cdq
mov
loopne
cmps
stos
cs
jecxz
adc
mov
nop
gs
pop
scas
mov
popf
adc
sub
sub
push
pusha
psubb
and
mov
(bad)
outs
(bad)
adc
sub
lahf
mov
push
(bad)
pop
js
cli
ror
add
or
mov
mov
loope
in
sub
push
ret
test
outs
cmp
lock
cli
pop
movs
sar
add
sub
mov
cmps
mov
xchg
and
pop
mov
outs
in
cs
popf
call
test
cmc
sub
stos
or
push
iret
mov
clc
xor
xor
xor
rcr
push
pop
movs
cmp
scas
xchg
adc
jge
mov
cmp
xchg
popf
(bad)
pop
rep
xor
outs
data16
pop
jg
test
pop
popf
sahf
test
data16
jns
in
xchg
mov
(bad)
pop
lahf
cwde
mov
pop
and
cdq
dec
dec
in
cmc
cmp
mov
push
jle
sbb
aad
into
cmp
fdivrp
int
call
sahf
cmp
xor
int3
inc
inc
ins
cli
test
inc
xlat
push
rol
sti
lock
pop
mov
push
not
mov
gs
push
sub
adc
loopne
sti
xchg
dec
jns
ret
mov
fstp
and
in
test
xchg
int3
stos
pop
call
(bad)
adc
mov
pop
daa
into
cmp
jge
retf
movs
mov
sub
ret
push
xchg
mov
pushf
lods
mov
fwait
jl
js
lock
cmc
xor
cmc
xor
test
xor
aad
adc
adc
jnp
aad
test
and
sbb
out
jo
loopne
in
popa
data16
aam
pusha
xchg
sub
imul
ss
push
xor
pop
mov
out
xor
dec
mov
and
int3
mov
iret
add
call
inc
pusha
mov
lods
add
loop
sbb
retf
stos
ret
xor
add
or
mov
outs
repnz
mov
in
cmc
xchg
out
mov
outs
push
into
mov
add
fdiv
imul
pop
cmc
xlat
dec
dec
ret
sbb
mov
sub
and
or
xor
mov
or
popf
(bad)
sub
jo
cmp
add
xchg
dec
aad
inc
push
cmp
cwde
fnstcw
dec
cld
stc
jp
xor
jg
leave
pushf
push
movs
jge
pop
xchg
mov
sub
in
push
(bad)
mov
aaa
int
dec
sub
mov
jp
aam
add
std
inc
es
pop
jno
test
iret
mov
and
xchg
out
lods
jg
sti
(bad)
hlt
cld
fcomp
inc
mov
ins
xchg
lahf
popf
pop
leave
and
movs
or
sbb
ret
push
sbb
je
out
mov
mov
push
pusha
mov
jnp
int3
jmp
sbb
inc
dec
sub
push
mov
or
mov
pop
daa
idiv
xor
psllq
ror
out
mov
mov
loopne
scas
mov
shr
jmp
inc
xchg
mov
inc
jae
mov
sbb
cld
es
jl
adc
mov
xor
ror
aas
retf
jle
xchg
mov
mov
das
pop
daa
jne
int3
retf
mov
cmc
pcmpgtw
mov
mov
movs
xor
scas
pop
mov
xor
test
div
inc
dec
inc
adc
xlat
les
mov
xor
mov
push
xor
mov
pushf
xchg
sub
or
nop
xchg
addr16
jmp
lock
test
mov
adc
mov
fsub
mov
mov
mov
lock
mov
es
mov
mov
ins
push
mov
(bad)
sub
not
cmp
pop
add
nop
pop
cmp
and
push
adc
nop
sbb
loop
loope
std
add
ret
push
push
ficom
jns
jbe
or
pop
das
out
pop
xchg
add
cmp
loop
stos
sub
aad
mov
inc
mov
jno
in
aaa
outs
call
fild
xchg
sub
push
(bad)
sbb
pop
mov
mov
xor
pop
push
fnstcw
inc
repnz
fwait
or
push
rcl
retf
test
popa
xchg
sub
xchg
push
jp
fldenv
sahf
in
and
sub
in
nop
outs
xor
dec
fadd
jbe
imul
pop
ins
sar
xchg
dec
scas
in
ret
icebp
sub
xacquire
jg
sub
ins
out
mov
int3
or
(bad)
adc
jae
jno
mov
cmp
in
data16
mov
js
ss
out
loop
cmc
aam
ins
and
icebp
mov
repz
sbb
adc
mov
pop
jno
stos
push
mov
xor
mov
fs
push
retf
rcl
leave
fwait
out
inc
jmp
and
loope
pop
mov
stc
repz
sti
repz
or
cwde
call
cdq
adc
scas
or
mov
cmp
sub
xchg
enter
into
pop
mov
add
dec
lock
clc
mov
and
dec
int
inc
stos
cmps
add
inc
push
ss
shl
mov
sub
ins
mov
loopne
outs
gs
pop
xchg
mov
mov
retf
bound
xchg
jbe
inc
jae
aam
pop
out
outs
pop
lods
fwait
and
daa
leave
inc
fist
push
add
dec
inc
ror
ins
pop
neg
in
mov
xchg
xchg
mov
xchg
mov
dec
enter
test
xlat
pop
lea
shl
jmp
adc
loop
sub
int3
stos
repz
mov
inc
inc
jmp
sub
shl
mov
and
(bad)
sar
pushf
retf
cmp
sub
push
pushf
in
xchg
dec
push
jg
(bad)
adc
ss
jno
ss
mov
aas
scas
lahf
fs
push
push
test
bound
xlat
push
in
frstor
pop
addr16
clc
or
push
repz
push
mov
push
jns
sub
popf
int3
icebp
jg
push
iret
in
(bad)
xor
jnp
and
sub
jge
sub
data16
adc
outs
out
dec
cmp
adc
adc
sub
pop
hlt
mov
out
ds
ficomp
push
sub
mov
sub
pop
test
push
add
popa
inc
pop
fwait
push
xor
iret
ss
out
mov
xchg
jmp
les
mov
ins
and
or
dec
xor
or
xor
lods
jmp
test
xor
jle
mov
or
xchg
fstp
xor
(bad)
call
jno
add
mov
xchg
add
outs
dec
dec
cs
inc
adc
leave
movs
idiv
lea
push
out
(bad)
popa
pop
fnsave
arpl
pushf
shl
dec
cmp
(bad)
cmp
outs
bndldx
cmp
pop
or
(bad)
test
sub
ficomp
or
daa
es
xor
mov
mov
aad
mov
cmps
iret
hlt
mov
jnp
sbb
sbb
adc
mov
and
scas
fsubr
out
movs
call
jo
jne
push
pop
out
lock
shr
pop
cld
mov
fcmovnu
test
test
fs
jl
cmc
movs
pop
push
call
cmp
pop
add
cmp
mov
pop
mov
mov
pop
fdivr
loopne
fild
ret
dec
pop
les
sbb
lea
jns
dec
push
or
dec
rcr
(bad)
xlat
dec
je
and
xchg
ds
pop
add
or
popf
or
ja
xchg
fisttp
arpl
or
shl
xchg
bound
pop
out
xor
mov
push
ja
jl
sti
inc
xchg
and
xchg
lods
ret
test
stc
sub
addr16
and
mov
js
data16
inc
mov
in
or
dec
daa
mov
je
jno
xchg
ret
je
rcl
outs
and
cs
imul
mov
lods
(bad)
test
adc
or
ins
(bad)
xor
fstp
mov
xor
push
outs
and
xor
lods
mov
(bad)
push
dec
add
mov
clc
dec
mov
push
loop
lahf
(bad)
stos
mov
mov
inc
iret
in
push
inc
mov
std
jno
xor
xchg
popa
stos
pop
cmp
push
imul
sbb
jb
jne
into
push
aas
div
jge
cmp
xchg
push
mov
lock
(bad)
fisub
clc
xor
pop
imul
cmp
push
loopne
mov
push
in
repnz
nop
ret
and
leave
jns
(bad)
leave
sub
fs
in
cmps
jne
ret
bound
(bad)
cs
rcl
adc
push
xlat
cmp
mov
outs
shl
movs
xchg
les
or
ja
inc
imul
xor
push
retf
pop
xor
push
pop
mov
push
pop
mov
jnp
mov
sbb
sub
les
mov
cmps
sar
daa
retf
fild
push
pop
sub
vpminsw
push
jnp
cdq
fild
push
sbb
mov
mov
lds
arpl
mov
inc
adc
(bad)
mov
fmul
clc
mov
pop
dec
push
ret
dec
iret
leave
lods
sub
inc
xor
sbb
push
push
js
rol
dec
and
pop
cmc
(bad)
scas
mov
mov
cwde
cmp
mul
bound
jg
retf
cmp
(bad)
arpl
in
mov
ret
xchg
dec
dec
xchg
test
mov
sahf
pop
or
hlt
pop
xchg
xchg
push
xor
lods
inc
dec
dec
es
and
retf
mov
or
aam
mov
and
js
mov
mov
xchg
add
inc
cmp
sub
sbb
inc
int
sub
in
or
std
enter
int
push
movs
mov
pop
adc
(bad)
push
outs
or
fsub
call
pusha
int
jl
push
and
sbb
fsub
mov
push
aad
push
out
aam
mov
test
lea
fsubr
rcl
test
adc
inc
dec
sbb
jb
pop
mov
inc
jmp
push
jmp
mov
xchg
fs
hlt
pop
enter
jbe
aam
out
inc
dec
sbb
mov
call
push
ds
mov
mov
sbb
xor
adc
xor
sub
push
jns
scas
sar
ficom
adc
xlat
xor
out
jg
sub
mov
mov
cwde
sbb
into
dec
enter
int3
inc
pop
adc
mov
(bad)
xchg
and
stos
cmp
or
loope
cld
in
es
sbb
mov
push
out
mov
adc
ret
movs
clc
cmp
lods
xchg
shl
push
inc
popf
jnp
dec
adc
int3
aas
push
xchg
xchg
iret
je
cmps
push
test
add
push
js
sub
jecxz
pop
(bad)
push
out
aam
pop
cwde
jl
add
push
adc
mov
mov
in
retw
sub
jbe
xchg
jno
jno
icebp
xchg
cmps
push
mov
jp
imul
add
sbb
ret
pop
sahf
ror
push
aad
or
mov
in
loopne
mov
daa
adc
jb
adc
pop
ss
add
push
adc
clc
cwde
mov
jl
adc
rcr
pop
dec
xor
cdq
cmp
not
adc
jg
dec
in
mov
fsubr
das
mov
ss
jmp
iret
mov
and
adc
cwde
stos
mov
je
add
fwait
sbb
popf
mov
mov
push
(bad)
popf
in
mov
adc
inc
lods
ret
jg
and
outs
popa
(bad)
loope
test
les
repnz
icebp
xchg
jp
in
jnp
or
outs
xchg
sbb
adc
xor
push
adc
mov
mov
xchg
in
mov
aam
cmp
shl
sar
mov
sub
dec
xor
sahf
fiadd
mov
cs
out
ss
lods
cwde
add
mul
outs
ror
ins
jmp
je
ins
sbb
fmul
(bad)
js
add
icebp
and
pusha
retf
mov
mov
and
mov
sbb
mov
fistp
push
cmp
xchg
jbe
xor
iret
mov
les
hlt
pop
cld
out
hlt
iret
lea
dec
inc
or
pop
jmp
fidiv
cs
shl
mov
rcr
sub
retf
aad
(bad)
out
sub
pop
push
push
stos
mov
imul
stos
inc
imul
dec
and
call
mov
mov
sbb
pop
fiadd
xor
dec
push
push
mov
sbb
or
inc
addr16
jnp
or
pop
mov
jmp
add
idiv
hlt
sub
cwde
push
int
popf
xor
xchg
test
and
pop
cmps
fwait
mov
push
call
das
imul
out
pop
in
lds
movs
push
in
(bad)
and
mov
jb
mov
movs
repnz
call
frstor
pop
sub
into
aam
jnp
push
and
or
enter
jmp
sub
cmp
lock
dec
iret
cmc
mov
das
mov
lods
rcl
and
xor
pop
ret
mov
(bad)
or
loop
mov
cwde
jmp
push
fwait
sti
sbb
inc
cmc
stc
cmps
fwait
xlat
mov
pop
adc
and
(bad)
mov
add
jg
xor
adc
adc
xor
aaa
stos
repz
mov
test
lahf
xchg
mov
arpl
fdivr
adc
fimul
dec
sahf
jae
jbe
mov
push
(bad)
fidivr
adc
retf
sub
and
or
pshufw
ins
mov
sbb
les
arpl
iret
ins
dec
aas
fwait
das
stos
mov
jp
jmp
out
add
out
jmp
mov
push
sbb
(bad)
fist
dec
(bad)
sub
sbb
int
mov
es
out
pop
arpl
aas
xchg
sbb
movs
inc
nop
sbb
mov
cmps
mov
lods
retf
sahf
xor
jmp
test
mov
ror
mov
movs
iret
inc
xchg
clc
pop
push
leave
xor
pop
clc
stc
cmp
add
jecxz
dec
mov
rcr
xchg
(bad)
shl
cwde
mov
and
xor
idiv
loopne
popf
push
mov
iret
push
mov
adc
sar
pop
and
fisttp
mov
sbb
add
sbb
bound
cmp
mov
test
cwde
int
lods
popa
mov
gs
cli
cmp
or
popf
push
pop
ret
xor
inc
mov
xchg
lea
mov
fcomp
popa
jp
fcom
xor
sub
or
mov
clc
sbb
dec
inc
inc
or
iret
js
jne
(bad)
dec
sub
mov
cmp
std
jg
push
push
inc
in
ins
mov
or
dec
mov
sub
push
in
mov
ds
jne
jl
mov
sbb
mov
cmp
mov
mov
mov
and
ds
iret
sbb
loope
test
in
jno
or
or
shl
in
retf
scas
cmp
repz
xor
adc
add
gs
adc
add
dec
fstp
mov
mov
addr16
cmps
ins
(bad)
test
jnp
push
js
xor
aaa
push
add
inc
push
movs
push
data16
sub
(bad)
push
push
fld
adc
ret
pop
jge
mov
xor
or
sbb
movs
scas
push
adc
or
inc
and
lds
pop
dec
int
mov
(bad)
ret
fisttp
xor
adc
mov
jae
jb
mov
stc
stos
xchg
inc
sub
(bad)
in
int3
pop
push
xchg
adc
movs
call
mov
or
and
(bad)
ret
out
mov
or
gs
fnstsw
cli
imul
ficomp
sub
xor
fwait
mov
push
clc
sub
or
movs
fisub
adc
cmp
jno
call
mov
call
cmp
in
ficom
inc
cmp
cmp
and
cwde
add
icebp
sub
cmp
sub
push
push
loop
xchg
jge
cmp
mov
js
outs
dec
mov
(bad)
out
pop
jecxz
adc
movs
add
sbb
xchg
or
jge
cmps
(bad)
jmp
(bad)
retf
mov
in
sub
jle
leave
push
jb
push
rcl
dec
xor
fcom
mov
pop
into
lods
into
xchg
sar
les
or
xor
or
(bad)
xor
cs
inc
push
je
jmp
adc
inc
mov
cmp
jae
fimul
(bad)
(bad)
mov
cmps
sti
in
push
repz
cmps
outs
ja
cli
push
lods
fistp
fndisi(8087
adc
cmp
cmp
imul
and
ins
movs
shl
sbb
and
lds
ss
jnp
scas
pop
retf
cdq
ficom
lods
mov
xchg
fbstp
cmp
mov
in
add
pop
call
jnp
js
ret
pop
rcl
inc
ins
scas
cmp
shl
add
js
adc
retf
jae
repnz
sub
int
inc
cmp
or
jns
lahf
aaa
imul
loop
jbe
jl
loop
and
out
jmp
popf
in
out
cmp
add
jmp
xlat
inc
lea
pop
mov
loopne
push
and
inc
call
push
jmp
sbb
cmps
stc
in
add
lahf
pop
adc
mov
loop
scas
je
(bad)
imul
add
jle
inc
sbb
adc
sub
jl
pop
popa
sub
xchg
rol
lods
loopne
xchg
ss
imul
jnp
push
xor
fwait
pop
js
sahf
sbb
fcom
inc
fcomp
cmp
sbb
adc
sub
add
push
fild
rdpmc
out
xchg
jmp
test
imul
mov
pusha
or
and
push
push
and
mov
(bad)
jb
inc
adc
xchg
cmp
cmp
(bad)
mov
dec
mov
pop
dec
movs
ss
and
gs
jo
ins
cmc
push
into
jmp
lods
lods
cld
xchg
xchg
mov
test
jbe
xor
aam
xchg
lods
or
jmp
les
sbb
inc
in
push
push
xchg
push
push
jmp
test
shl
test
or
pusha
pop
rcr
xor
mov
in
sti
mov
les
mov
sub
xchg
mov
addr16
mov
jge
inc
add
rcl
jnp
dec
pop
push
xchg
(bad)
mov
lods
sahf
jns
xchg
int3
mov
mov
test
mov
jne
stc
inc
lahf
xor
xchg
cli
dec
push
out
dec
scas
sbb
fimul
dec
add
test
ror
pop
jnp
dec
xor
pop
enter
cmps
push
xchg
push
cwde
sbb
xlat
inc
dec
gs
adc
xor
(bad)
pop
(bad)
and
sub
ins
fs
pop
cmps
fdivr
mov
test
test
push
mov
popa
xor
mov
iret
aaa
fwait
mov
inc
in
mov
and
ins
sbb
xlat
xor
pop
pop
pop
jno
mov
out
pop
pop
pop
mov
inc
fmul
mov
inc
dec
das
mov
lahf
sti
dec
bound
rcr
lods
push
pushf
mov
xchg
xchg
jle
inc
outs
push
(bad)
jns
push
xlat
popf
xchg
sbb
pop
fsub
jnp
fmul
shl
push
sub
and
sti
outs
sbb
sub
into
call
lock
nop
js
sub
fisub
jne
test
cwde
dec
into
fld
mov
jl
popa
or
jo
jecxz
scas
cli
inc
sbb
sbb
loope
not
dec
sbb
fstp
pop
stc
cld
addr16
xor
bound
ds
test
repz
popa
cli
mov
rcr
ins
daa
pop
mov
xor
mov
and
or
sbb
pop
das
popa
call
out
sub
push
dec
in
mov
add
lods
ja
dec
add
push
inc
pop
cmps
add
out
cdq
lahf
pop
scas
xor
xchg
mov
dec
cmp
mov
sub
out
pop
rcr
aaa
fidivr
jno
fistp
test
cs
fcmovnb
hlt
sub
jb
mov
sub
xor
inc
mov
popf
pop
sub
pop
cdq
add
mov
lahf
popf
ds
pushf
pusha
cmc
pop
lahf
jl
dec
push
rcr
push
xor
push
in
sahf
sbb
test
sub
lea
sub
jbe
leave
call
cmp
gs
cwde
retf
ficom
pop
push
mov
xor
xchg
fisubr
dec
jecxz
mov
imul
lock
cmps
fst
into
xchg
fs
cmp
loop
jns
xchg
imul
xchg
clc
gs
adc
or
fxtract
inc
jns
popa
aaa
or
sbb
rcl
fst
add
inc
fisub
out
aas
mov
cwde
mov
cmp
and
int
push
add
in
and
pop
leave
hlt
clc
xchg
mov
sbb
and
pop
mov
sbb
imul
dec
xchg
in
mov
mov
pop
les
mov
mov
jmp
(bad)
mov
and
xchg
(bad)
mov
pop
aaa
mov
daa
and
mov
sub
cmp
inc
cmp
in
out
mov
pop
mov
hlt
xor
push
clc
je
loopne
mov
leave
add
push
stos
jmp
jg
adc
mov
(bad)
mov
movs
test
test
int
mov
clc
jp
push
test
or
mov
mov
dec
jnp
fs
lahf
ret
cwde
add
jp
mov
mov
ror
cwde
push
mov
outs
and
(bad)
mov
cmp
js
and
and
addr16
addr16
pop
into
dec
ds
dec
xor
popf
fmul
mov
and
jo
xor
out
pushf
dec
jns
stos
mov
mov
or
ja
or
movs
int
shr
adc
inc
add
adc
xor
add
ins
fstp
push
ret
xor
cs
repz
dec
jmp
cs
sub
je
push
xor
adc
test
jns
xor
push
loope
lods
cs
xchg
leave
ret
imul
out
sub
or
mov
cmc
and
add
popf
pop
fstp
jmp
adc
jns
mov
ins
setb
cmp
aad
adc
dec
stos
data16
jg
fcomip
test
data16
ds
mov
lock
xchg
xchg
jne
je
add
cdq
jg
stc
xchg
out
lock
mov
mov
xchg
fwait
cwde
shl
stos
and
scas
jl
pop
enter
dec
add
jae
aas
(bad)
call
stc
cmc
sti
sub
in
and
aas
movs
and
les
sti
inc
jno
pop
out
sbb
jp
or
jns
adc
fild
pcmpgtd
pop
stos
jne
xlat
add
iret
xchg
idiv
mov
out
fisttp
xchg
pop
call
ffree
jg
lahf
lock
imul
xchg
adc
ror
adc
outs
ds
xchg
pop
push
xchg
into
retf
add
leave
fcomp
inc
xlat
or
xor
adc
fist
idiv
adc
adc
adc
xor
dec
inc
mov
in
add
or
test
dec
sbb
cmp
outs
jmp
cs
cmc
jae
jnp
ins
ins
mov
call
mov
test
aad
cld
sub
and
push
mov
mov
cmp
rol
dec
mov
aas
cmp
mov
jns
xchg
jg
ret
ins
pop
jge
and
lds
xor
leave
mov
xor
xchg
dec
in
push
xlat
or
or
mov
cs
and
cmp
pop
push
repz
xor
xchg
jmp
daa
call
add
lods
inc
mov
clc
fcomp
in
ins
pop
push
cmp
push
popf
daa
repnz
outs
sub
ins
rcr
dec
stos
xchg
xor
push
or
cmp
stc
pop
pop
inc
inc
pop
jno
jns
add
xchg
mov
scas
sub
push
xchg
push
push
xor
jecxz
neg
adc
data16
in
pop
push
cmp
mov
mov
xchg
stos
stos
dec
mov
pop
scas
mov
pop
loopne
push
in
shr
and
dec
out
mov
inc
add
xor
inc
sub
jg
nop
ror
inc
sub
mov
(bad)
sbb
or
cmp
push
test
inc
push
mov
mov
inc
sbb
xchg
ins
inc
dec
xor
sbb
outs
ror
dec
outs
jmp
in
and
pop
inc
test
push
mov
xchg
fmul
dec
and
mov
or
ss
data16
adc
aaa
cwde
shl
jg
ret
(bad)
mov
ins
fldenv
dec
mov
push
arpl
pushf
int3
sbb
cmp
jecxz
aas
sar
lea
scas
inc
sbb
mov
inc
inc
push
mov
sbb
and
out
(bad)
pop
push
xchg
cs
retf
pop
mov
lods
mov
push
push
aas
jl
ret
out
stos
cdq
iret
mov
cld
jnp
or
lods
jae
xchg
or
retf
jns
rcr
in
xor
adc
movd
xor
inc
and
fcom
jle
cmp
icebp
mov
cmc
inc
pop
inc
xchg
(bad)
xchg
aam
push
push
leave
loopne
leave
or
loope
push
mov
sub
or
inc
dec
inc
hlt
sub
fnclex
mov
sub
les
(bad)
(bad)
adc
movs
xchg
aad
ror
push
adc
test
sbb
ins
sub
and
in
dec
adc
ror
push
jg
jg
inc
jne
test
cmp
ret
(bad)
xchg
arpl
xchg
cmp
mov
jno
cdq
mov
dec
fs
in
in
push
lea
adc
call
xchg
and
js
mov
les
out
pop
or
daa
mov
mov
test
inc
pop
loop
dec
inc
int
repz
jp
inc
fwait
sahf
sahf
outs
(bad)
mov
push
lods
mov
mov
in
aad
cmp
movs
add
leave
stos
(bad)
sbb
out
pop
ret
mov
out
bound
mov
xor
sub
repnz
cmp
or
shl
dec
test
and
cmp
ror
mov
mov
fwait
xor
mov
popf
in
jmp
lods
xchg
jmp
pop
loope
mov
push
aad
(bad)
aad
outs
jnp
popa
aas
arpl
inc
(bad)
call
cmps
sub
fwait
hlt
adc
jg
push
add
rcl
sti
movs
dec
ror
or
xchg
jmp
inc
aam
pop
jp
outs
dec
or
in
scas
das
test
out
mov
mov
fbstp
ret
cs
mov
ds
cmp
shl
mov
rcl
mov
adc
lods
sub
mov
rcl
mov
leave
sbb
sub
punpckldq
mov
(bad)
or
rcr
add
and
fcomp
stc
push
xor
cmps
pop
lea
xchg
adc
outs
adc
push
cmps
mov
jge
test
sbb
mov
or
dec
bound
xchg
pop
and
jp
sub
xchg
add
xchg
mov
sar
xchg
cmp
adc
arpl
sub
sbb
rol
pushf
add
inc
call
sub
inc
sub
ja
or
dec
jg
jae
sbb
pop
shrd
arpl
cwde
sub
mov
fistp
(bad)
mov
popf
cld
jge
and
inc
in
mov
sbb
sub
cmp
mov
fld
sbb
enter
int
out
rol
arpl
imul
mov
push
call
jmp
aam
adc
sub
and
inc
xchg
lods
push
pusha
dec
cmp
pushf
(bad)
pop
xor
mov
faddp
sub
adc
dec
jge
inc
add
xchg
jae
jo
popf
cmps
mov
push
stos
fwait
mov
(bad)
sbb
call
psraw
retf
jmp
cli
in
in
mov
mov
dec
dec
(bad)
aam
popf
or
xchg
fwait
int
nop
rcr
push
dec
cmp
inc
inc
int
dec
dec
xor
sub
xchg
pop
push
or
mov
jmp
out
jg
jbe
(bad)
rcr
sub
int3
gs
or
test
ret
and
bound
or
or
xchg
mov
mov
mov
jmp
gs
imul
add
dec
dec
int3
call
cdq
in
arpl
push
jp
push
(bad)
popf
imul
ins
push
jo
jno
jmp
inc
jecxz
xchg
xor
sub
jl
push
loope
jmp
or
aaa
dec
sar
pusha
cmp
adc
xchg
pcmpeqw
add
xor
jno
fdivr
mov
add
imul
cmp
xchg
aaa
jno
or
lock
cmp
ret
lods
add
frstor
sub
xor
sbb
mov
mov
mov
sbb
(bad)
aad
sub
in
das
test
jle
imul
dec
dec
dec
adc
gs
lods
aad
and
mov
or
pop
pop
sbb
xor
push
cmp
sub
ret
movs
push
sahf
cli
aam
mul
mov
mov
ja
popf
cmp
repz
jnp
mov
xor
mov
mov
test
dec
pushf
sbb
(bad)
mov
cld
nop
cld
mov
inc
jne
in
push
add
mov
adc
test
ret
mov
inc
mov
inc
push
xor
fstp
addr16
fdivr
cld
xchg
xchg
cld
mov
stc
pop
dec
xor
cmp
lods
cli
out
je
sbb
mov
push
pop
jno
ficom
repnz
lds
xchg
or
push
mov
pop
dec
scas
inc
pop
stos
bnd
jne
or
call
lock
test
out
push
mov
adc
push
mov
push
inc
rcl
dec
sub
int3
push
lds
sbb
jne
xchg
scas
jns
push
dec
pop
push
ror
int3
fwait
call
mov
retf
call
es
dec
or
into
das
daa
aaa
xchg
adc
ds
mov
mov
fimul
or
adc
aad
xor
push
(bad)
in
out
mov
xchg
inc
je
rcr
and
mov
pop
pop
clc
sbb
pusha
pop
xchg
iret
xchg
push
cmc
imul
outs
call
pop
int3
push
test
adc
mov
mov
add
add
call
mov
push
hlt
sar
jl
movs
xchg
jb
add
and
dec
movs
mov
cmp
adc
cld
inc
xchg
mov
mov
imul
jno
mov
sbb
jmp
ja
xchg
sub
push
xor
push
inc
push
pop
aam
jo
and
pop
and
ret
fidivr
in
ds
and
mov
retf
imul
fimul
xchg
or
add
ins
out
or
push
hlt
mov
sar
daa
rcl
adc
xchg
and
or
sub
mov
call
(bad)
movs
popf
mov
jecxz
add
stos
icebp
movs
fs
add
enter
fwait
pop
and
add
push
mov
jae
(bad)
loop
inc
jmp
dec
pop
dec
movs
cmp
adc
sub
pop
pop
js
loope
xchg
push
rcl
add
leave
adc
push
repnz
aam
loope
or
enter
ret
shl
sbb
iret
or
dec
jmp
pop
push
sbb
or
push
sahf
xchg
jg
aad
add
sbb
js
daa
clc
add
sar
xchg
int
add
cwde
leave
mov
cmps
mov
push
and
mov
ss
inc
push
or
sbb
mov
mov
fist
xchg
jle
push
inc
or
inc
cdq
cmc
jge
inc
jno
popf
sbb
jo
sar
sbb
in
xor
xchg
shl
frstor
test
adc
and
mov
xchg
ja
add
lds
jnp
mov
lahf
xlat
nop
jne
rcr
(bad)
jno
(bad)
iret
imul
dec
mov
pop
xor
add
outs
mov
inc
out
dec
push
fstp
cwde
sbb
inc
cs
rcr
mov
lock
fnstsw
dec
cld
sahf
xchg
adc
(bad)
call
inc
mov
outs
nop
pop
or
push
imul
int3
outs
adc
xchg
(bad)
aam
mov
imul
dec
dec
addr16
mov
mov
jnp
dec
ss
cmp
out
mov
jmp
cmp
add
xchg
mov
push
pop
(bad)
jmp
xor
xchg
push
inc
add
(bad)
js
mov
jno
iret
mov
je
(bad)
or
fadd
add
adc
fwait
jbe
pop
ins
lods
lahf
ins
mov
sbb
inc
mov
jbe
retf
mov
adc
cmps
loopne
adc
sar
xor
fild
nop
sbb
rol
enter
or
push
pop
jnp
(bad)
fsubrp
cmp
sahf
jmp
push
ja
mov
add
(bad)
in
mov
sub
ret
loope
adc
adc
add
call
xor
aad
call
sbb
in
xchg
pop
cld
nop
xchg
push
add
dec
inc
dec
adc
cmp
sub
xor
fsubr
push
out
xor
add
stc
fcmovnbe
and
inc
add
pop
cdq
and
xchg
push
ja
daa
mov
mov
fistp
js
cs
push
pop
cmp
pop
xchg
push
int
adc
popf
cmc
xchg
add
mov
test
fwait
mov
inc
sbb
lods
and
retf
mov
push
mov
push
setge
add
shl
adc
sahf
push
mov
inc
ja
out
push
jae
stc
imul
xchg
ja
ins
mov
xor
cmp
aad
adc
xor
inc
sub
test
and
mov
push
xchg
add
cmp
mov
icebp
mov
test
cs
lods
adc
jmp
push
popa
add
jecxz
dec
mov
jecxz
inc
push
in
jecxz
shl
push
daa
sahf
or
dec
and
addr16
mov
scas
mov
sub
stc
cmp
repnz
jb
xchg
(bad)
aas
fcom
es
push
cmp
adc
sbb
idiv
aas
gs
lds
or
inc
push
pusha
iret
jb
push
test
mov
jge
mov
(bad)
fsubr
adc
lea
cmp
cli
jmp
jge
stc
ins
fidivr
pusha
rcr
pop
cld
cmp
(bad)
ficom
(bad)
repz
int3
arpl
rcl
jmp
call
aas
add
mov
mov
pop
ficom
mov
and
in
cmp
imul
push
jmp
sti
shl
jle
daa
dec
mov
aam
dec
out
hlt
sub
fs
jecxz
dec
xor
pop
ins
add
dec
pop
cmp
in
std
adc
cwde
fistp
addr16
repnz
adc
cli
jb
cs
sbb
adc
add
je
inc
xor
add
sub
ffreep
pop
mov
setp
cmps
xchg
mov
cmpxchg
sti
xor
aaa
stos
jb
pop
and
jp
rcr
adc
loop
ds
pusha
das
cmp
and
add
add
sti
ficom
mov
xchg
mov
mov
jnp
loope
push
into
test
lods
push
pusha
sti
sbb
call
jmp
in
inc
sar
(bad)
neg
fbld
div
cmp
pop
dec
add
jmp
into
pop
in
lock
adc
mov
imul
cmp
les
shl
hlt
push
leave
out
mov
cwde
xchg
mov
aad
or
add
rcr
hlt
ins
mov
into
inc
xchg
inc
(bad)
scas
scas
cmc
jmp
push
push
enter
pop
xor
inc
ret
je
fistp
fsubp
iret
fs
pop
cmps
adc
mov
lahf
jmp
cmp
push
and
xchg
rcr
jo
aam
scas
dec
push
stc
cmp
sahf
je
pop
mov
adc
ret
adc
sub
cmp
and
add
sti
adc
push
dec
movs
sti
mov
pusha
shl
js
out
and
aam
jns
dec
pop
add
jp
jl
in
test
dec
ficomp
shl
pop
mov
add
mov
lahf
ins
jns
cmp
icebp
imul
push
fbld
mov
iret
sahf
jge
push
xchg
adc
shr
aam
mov
push
mov
pop
rcr
fisubr
and
setl
dec
in
in
fs
out
fxch
xchg
mov
jmp
scas
dec
loop
add
test
in
in
push
pusha
xchg
push
jecxz
leave
stos
stc
fstp
ja
mov
outs
jg
sar
lock
gs
and
mov
push
mov
outs
sub
scas
pop
push
sbb
or
retf
(bad)
cli
sub
push
push
adc
jmp
fcomp
jmp
and
jns
or
pop
dec
pop
stc
loope
add
cmps
sbb
ds
dec
mov
aad
ret
adc
add
fs
add
cmp
ror
push
push
or
ja
pop
loope
push
jno
cdq
mov
(bad)
push
jo
repz
jp
jge
or
mov
je
rol
xchg
stc
pop
je
outs
aad
mov
jbe
retf
push
cmp
inc
(bad)
aas
shl
nop
ds
(bad)
retf
popf
int3
sahf
lahf
lock
mov
test
cdq
(bad)
jo
fdiv
retf
adc
dec
mov
shl
out
xor
(bad)
xor
fcomp
enter
addr16
ret
addr16
inc
push
jno
mov
cmp
add
cmp
in
fisubr
movs
imul
jl
bound
test
mov
in
xchg
and
sbb
(bad)
sbb
fs
sub
sub
retf
add
dec
mov
mov
mov
xor
es
cmp
sub
add
fs
sub
jns
mov
aad
ins
iret
es
movs
or
lea
repz
imul
sub
pop
and
or
add
push
cmp
pop
pop
push
or
pop
mov
clc
mov
or
mov
push
inc
movs
xchg
push
lods
sub
rcr
shr
test
(bad)
test
repz
push
sub
cmc
xlat
mov
jo
outs
xchg
jnp
sbb
out
jge
push
mov
hlt
sub
and
mov
fisubr
cmp
lods
xor
sar
(bad)
dec
aad
mov
and
js
inc
and
sub
loope
inc
mov
dec
fs
les
(bad)
fidiv
mov
or
shl
dec
das
hlt
add
push
in
jae
cmps
adc
(bad)
mov
inc
stos
cmps
jnp
loopne
pop
lods
movs
mov
xchg
rol
test
xchg
aad
xchg
stc
jb
mov
movs
or
inc
pop
xor
add
xchg
movs
push
cmp
jle
cmp
xor
repz
push
leave
arpl
adc
into
inc
pop
je
xchg
es
icebp
cmp
shl
xchg
stos
fcmovbe
inc
test
or
nop
icebp
pop
int
cmp
cmps
xchg
imul
sbb
ret
fstp
lahf
sbb
test
loop
pushf
lahf
dec
div
add
aaa
fdiv
aad
movs
dec
retf
popa
cmps
fs
mov
pusha
xlat
push
pop
das
xchg
mov
repnz
loopne
mov
mov
inc
xchg
stc
movs
cmp
sub
add
jmp
adc
cmps
sahf
jno
inc
mov
int3
mov
mov
sub
sbb
push
pushf
int
in
addr16
xchg
push
mov
jecxz
(bad)
sbb
scas
cmps
je
fsubr
sahf
test
mov
mov
dec
pop
pushf
push
add
cmp
test
call
pop
mov
(bad)
test
retf
rcl
js
addr16
and
cld
aam
jns
int
mov
js
in
cmps
mov
sbb
scas
cmp
(bad)
mov
xor
sub
out
cmp
jo
les
scas
xchg
adc
push
push
and
push
inc
dec
bound
ins
push
out
imul
sub
mov
aas
or
call
popf
(bad)
push
or
in
ret
lahf
(bad)
fistp
jb
adc
idiv
pop
adc
repz
xlat
xchg
cmp
mov
addr16
xchg
icebp
push
scas
sar
loope
dec
arpl
fwait
jmp
jnp
or
inc
xchg
shl
repz
jmp
add
push
test
and
stc
jge
and
nop
push
mov
movs
add
sahf
cmps
inc
mov
push
pop
mov
sub
mov
push
cmp
inc
dec
or
ins
cwde
(bad)
sbb
push
dec
cli
pop
sub
pusha
stos
ins
inc
pop
sub
in
in
pop
call
sar
fistp
or
out
fisttp
int
push
repnz
(bad)
(bad)
xchg
push
stos
mov
xor
test
aad
jl
out
and
jno
std
add
fs
adc
cmps
mov
fsubr
and
sub
xor
(bad)
in
je
adc
add
test
imul
rep
test
xchg
fst
scas
ficomp
jg
push
or
sub
cmc
adc
dec
popf
xlat
xlat
mov
sub
inc
out
lock
clc
sub
cmp
ins
int
sub
ror
nop
mov
cmp
test
xor
xchg
mov
sahf
push
mov
cmps
es
mov
push
push
xchg
cdq
mov
add
xchg
sbb
xlat
(bad)
sub
push
test
cmp
fcom
sub
pushf
std
cmc
and
pop
inc
sti
xchg
dec
fwait
outs
sub
leave
push
mov
loopne
sbb
ret
aad
sar
jmp
push
adc
ret
dec
cmps
fstp
out
fmul
inc
jg
ret
add
into
aam
dec
mov
(bad)
fcomi
or
pop
cdq
dec
cmp
fs
stos
dec
dec
(bad)
and
sub
adc
shl
inc
or
sbb
test
mov
mov
xor
fistp
les
rcl
add
mov
xor
aas
xchg
call
sub
repz
dec
sbb
xchg
loopne
mov
sti
xor
push
js
cmps
cmp
jg
adc
jae
jecxz
dec
cmc
scas
cmp
jo
(bad)
push
bound
fmul
push
add
inc
test
dec
cmp
nop
pop
fld
xchg
or
jecxz
xor
pop
mov
dec
pop
xchg
mov
cwde
or
mov
lds
mov
push
inc
xor
in
adc
push
das
or
jmp
clc
js
and
retf
or
stc
and
mov
out
cmps
pop
arpl
dec
and
in
cmps
inc
mov
add
in
das
jg
ret
push
ret
mov
inc
adc
int
pop
movs
mov
ror
mov
sbb
aaa
les
xchg
xchg
retf
mov
inc
lds
jg
inc
mov
pushf
pop
xchg
rol
fiadd
adc
sar
cmp
ret
xchg
jns
jl
mov
add
inc
in
int3
adc
dec
test
cs
les
call
xchg
push
mov
dec
push
xchg
dec
mov
xor
inc
stc
syscall
push
mov
imul
xchg
and
inc
nop
mov
sub
dec
fwait
add
mov
in
and
aad
sbb
xchg
xchg
lahf
xchg
nop
cmc
add
inc
adc
cwde
sahf
inc
add
mov
lods
aas
and
and
adc
call
cmp
pop
jns
addr16
fld
sahf
lock
outs
mov
xchg
sbb
mov
inc
retf
adc
adc
inc
mov
jmp
ds
(bad)
jae
out
mov
shr
test
adc
lea
in
out
mov
fisttp
cmp
push
jbe
sbb
ficomp
je
pop
sbb
mov
lods
xchg
push
neg
dec
cmp
sbb
div
(bad)
fcomp
add
jbe
mov
int
cwde
icebp
inc
loope
xor
jge
mov
retf
inc
mov
iret
(bad)
adc
test
jnp
fstp
mov
pop
das
jae
cmp
push
xor
es
add
hlt
mov
jns
jnp
idiv
test
mov
inc
gs
sbb
push
xchg
push
enter
loope
sbb
retf
or
loopne
mov
pushf
mov
jb
ja
in
aas
xlat
aas
loope
pop
and
lea
repz
jge
pop
(bad)
ss
jne
(bad)
xchg
rcr
add
repz
int3
shr
jb
in
mov
fnstenv
sti
(bad)
or
fnsave
sbb
inc
call
sub
dec
sahf
mov
test
mov
clc
cmps
loop
sub
pop
scas
int3
add
and
in
int
retf
stos
or
scas
push
les
jne
push
(bad)
sub
mov
add
popa
mov
or
and
jbe
mov
lahf
hlt
push
and
mov
xchg
loope
repz
sti
imul
loop
in
cmps
aaa
mov
stc
or
iret
(bad)
pop
xchg
cdq
ja
ins
xor
fimul
scas
iret
(bad)
call
jne
cmp
std
lds
leave
sub
into
(bad)
imul
xor
out
pop
in
stc
rol
ins
push
fmul
js
add
pusha
sbb
ja
sbb
inc
cmp
out
jne
(bad)
out
lea
mov
aaa
aaa
adc
xchg
ds
jno
ret
and
aaa
loope
mov
sub
test
mov
xchg
iret
cmp
aas
adc
pushf
sti
jl
mov
enter
pop
add
aaa
std
sahf
loope
push
icebp
push
or
call
test
and
(bad)
dec
retf
add
mov
push
sub
rcr
movs
imul
mov
mov
xchg
jmp
sbb
xchg
gs
mov
and
lea
out
mov
jmp
icebp
movs
mov
cmp
icebp
sub
lods
and
jp
stos
jmp
and
out
mov
lods
ficom
shr
aad
xor
dec
call
cmp
jmp
cmp
jp
lods
add
xor
sub
push
inc
or
jle
(bad)
fstp
adc
cmp
and
cmp
inc
stos
pop
adc
or
ss
sub
out
lods
mov
dec
mov
cmp
retf
aam
div
mov
jb
mov
and
pop
push
fimul
push
pop
or
jb
test
xchg
jl
pop
loope
(bad)
sub
std
popf
sbb
movs
adc
xlat
inc
add
sbb
inc
das
loop
add
push
mov
xor
mov
scas
ins
jns
arpl
pop
fcomi
fisttp
mov
mov
in
aaa
pop
into
or
mov
fadd
test
daa
push
xlat
mov
icebp
dec
push
inc
xchg
inc
xchg
mov
call
jge
pop
adc
retf
dec
xlat
dec
aad
mov
sti
sbb
inc
cs
push
add
cmps
mov
ins
mov
jnp
cmp
jl
or
imul
stos
cmp
test
pop
sub
jbe
(bad)
mov
and
das
adc
push
adc
lods
loopne
mov
rcr
cmp
(bad)
mov
cmc
loopne
and
pop
or
push
stos
xchg
mov
xlat
adc
jmp
ror
jnp
loop
fcom
in
ror
or
cs
xor
cmp
popa
adc
aam
in
ss
dec
jp
inc
or
inc
ins
leave
les
jae
clc
pop
ror
lea
jae
xchg
dec
ds
dec
push
cmps
inc
cmp
add
cmp
xchg
loopne
jbe
je
daa
hlt
pop
xchg
punpcklbw
iret
enter
ret
push
inc
push
or
fs
loope
add
inc
gs
loop
(bad)
gs
cmp
mov
rcr
lods
icebp
inc
adc
push
or
xor
push
add
inc
loopne
cwde
bound
and
inc
push
xchg
fs
mov
or
xchg
sub
adc
jnp
push
sub
and
lods
hlt
lock
jb
mov
push
inc
std
in
mov
mov
mov
gs
sahf
popf
dec
push
cmp
and
cmp
mov
std
cld
inc
cmc
(bad)
cli
shl
inc
push
test
inc
mov
ret
fs
xchg
push
fnstsw
in
mov
xor
jle
clc
xlat
jae
cmp
(bad)
xchg
mov
bnd
or
pop
or
rcl
test
data16
jbe
jp
outs
push
into
jno
out
rcr
push
scas
or
pop
and
or
movs
in
popa
pop
or
mov
xchg
or
dec
sahf
inc
jmp
out
int3
sub
mov
sti
inc
dec
add
icebp
call
and
mov
mov
cmps
repnz
jecxz
aaa
jp
enter
fstp
add
and
dec
add
mov
adc
sbb
mov
mov
movs
cdq
outs
out
sahf
jno
or
(bad)
xchg
(bad)
mov
mov
repz
bound
xchg
jno
xchg
fwait
lock
mov
inc
pop
popf
pop
call
pop
jb
jg
inc
cwde
(bad)
cmp
stos
data16
bound
mov
adc
ins
adc
push
popa
push
inc
jb
addr16
pushf
add
sti
push
in
loop
cmp
iret
mov
clc
mov
(bad)
addr16
xchg
enter
ins
push
fcom
mov
test
lods
adc
mov
xchg
leave
(bad)
test
mov
or
mov
(bad)
popf
jl
push
xor
gs
jmp
xchg
pop
push
add
les
fucomip
jbe
mov
sbb
dec
push
rol
xchg
pop
retf
inc
sbb
mov
sbb
iret
pop
hlt
add
dec
cdq
xchg
or
jnp
mov
jnp
test
push
push
enter
(bad)
enter
cdq
idiv
out
xor
cmp
push
cwde
pushf
mov
lods
push
pop
push
ss
test
cmp
xchg
pop
push
int3
ret
mov
fs
adc
jb
inc
stos
call
jp
call
push
mov
shl
and
mov
(bad)
push
mov
pop
aaa
pop
shl
sub
push
add
mov
jb
in
push
add
mov
out
aas
and
cmps
imul
rcr
pop
test
jle
sub
popa
sbb
rol
test
mov
jo
test
jns
push
sbb
shl
sub
out
lods
and
xchg
jno
xor
push
mov
cmps
jg
mov
push
inc
pop
xor
pop
dec
ins
cmp
add
sti
cmp
hlt
jg
xchg
repnz
jne
lock
mov
loope
xchg
pushf
movs
test
jp
js
out
add
add
mov
shl
icebp
fiadd
dec
xchg
rcl
loop
imul
sbb
popf
aas
pop
ret
js
or
adc
jge
ret
lahf
jmp
mov
lahf
mov
out
stos
jno
sbb
lea
or
mov
idiv
ror
jmp
xor
xor
popf
cmp
in
int
ret
add
jo
lock
test
test
dec
mov
lods
push
fistp
cs
inc
call
jmp
xchg
inc
jp
cmc
loop
mov
ja
and
jp
retf
sub
cmp
les
adc
fimul
in
or
mov
push
pop
sbb
sub
and
pop
enter
cld
repnz
lds
pop
adc
mov
(bad)
fld
(bad)
retf
lods
bswap
fs
inc
mov
jo
cmp
xchg
mov
ins
jmp
aam
push
test
hlt
sub
cmp
mov
push
adc
pop
dec
sar
jmp
shr
and
aad
call
pop
sbb
sub
xlat
ret
call
repz
scas
aaa
(bad)
arpl
rol
gs
mov
sbb
jmp
push
jp
call
pop
jle
push
adc
int
xchg
add
pop
dec
scas
xor
leave
cli
(bad)
sub
jg
fst
enter
daa
inc
in
push
push
leave
adc
enter
das
cld
stos
aam
pop
dec
push
xchg
sbb
sbb
lahf
cld
pop
(bad)
sar
daa
cld
xor
xchg
push
ror
push
add
add
lods
push
pop
arpl
cs
adc
mov
pusha
sti
jmp
shr
mov
jns
xchg
add
inc
inc
das
nop
lods
xlat
mov
mov
mov
sub
add
jmp
push
push
ret
fidivr
and
cmp
xchg
sar
into
jns
cs
mov
or
mov
jo
jecxz
jge
jmp
mov
mov
push
retf
jmp
mov
jle
xchg
pusha
or
inc
jmp
push
and
xchg
aam
ret
push
adc
movs
add
pop
(bad)
inc
add
jno
les
pop
mov
xchg
dec
inc
ret
aas
push
mov
sub
and
cmc
pop
aaa
into
sub
add
and
fdivr
imul
inc
enter
outs
jge
push
ficomp
cmp
in
inc
popw
rcl
xor
push
jo
jns
fwait
iret
fidiv
pusha
pop
jl
and
daa
pop
add
jge
addr16
popf
scas
sti
jmp
mov
sub
or
adc
sub
iret
mov
jecxz
cmp
inc
retf
mov
test
test
jbe
dec
cmps
xchg
nop
stc
push
rol
push
pop
mov
mov
mov
aad
inc
jno
sti
sub
lds
mov
push
sbb
rol
xor
cmp
out
mov
clc
dec
cmp
aaa
cdq
popa
mov
call
out
pushf
loope
dec
push
dec
clc
scas
mov
ret
mov
pushf
mov
(bad)
scas
hlt
mov
into
inc
stos
jb
jbe
ror
jae
inc
imul
aas
mov
fisttp
mov
xor
pop
lds
jl
fcmovb
or
jmp
mov
scas
fwait
mov
js
fwait
inc
mov
(bad)
fiadd
inc
cmp
call
mov
movs
cmc
stc
mov
pop
sbb
out
or
mov
into
icebp
jge
jg
mov
mov
stos
or
pop
xchg
test
addr16
pop
dec
mov
popf
xchg
mov
adc
dec
daa
ins
adc
jl
ret
bound
and
push
enter
rsqrtps
mov
inc
inc
mov
adc
inc
je
push
repnz
inc
sub
lods
ja
adc
cmp
jecxz
dec
or
hlt
push
and
inc
into
push
adc
sub
mov
adc
jg
jne
cs
jnp
sub
xchg
jp
adc
imul
xor
fdivrp
inc
or
ss
cli
iret
push
and
adc
dec
and
mov
add
sbb
fst
pop
inc
dec
data16
mov
sbb
(bad)
stc
out
mov
mov
push
in
test
stos
test
pop
in
push
cmp
scas
mov
(bad)
rcr
mov
or
loop
fisubr
adc
push
aad
jecxz
jb
fld
test
jmp
jbe
fnstenv
in
mov
push
jmp
stos
cmps
pusha
sbb
xchg
call
fistp
ins
cmp
cmp
jnp
add
ins
or
xchg
inc
fild
ins
pop
les
xchg
xchg
xchg
mov
dec
jmp
sub
into
hlt
(bad)
loopne
xor
and
test
daa
jl
fistp
jbe
sbb
je
dec
inc
push
jmp
xchg
pop
call
push
inc
pop
or
in
out
cwde
ss
jle
retf
pop
and
pop
push
mov
cwde
xchg
mov
pop
icebp
arpl
push
gs
rol
cmp
or
imul
dec
in
sub
mov
mov
int
mul
shr
aas
mov
ror
mov
movhps
mov
mov
xor
pop
and
ja
jne
jmp
ja
imul
or
push
sub
and
jns
jb
adc
fild
fstp
xor
push
bound
and
push
pop
cmp
jno
sar
ss
mov
pop
mov
fnstenv
and
sahf
ins
gs
test
inc
pusha
call
pop
repz
add
sbb
xor
or
lods
int3
fsub
or
inc
dec
loopne
pop
nop
mov
adc
sub
or
dec
xchg
mov
xchg
and
ja
mov
xchg
xor
mov
push
mov
(bad)
push
popf
outs
jnp
xor
and
adc
fadd
sub
cmps
(bad)
xchg
or
mov
lock
leave
data16
popa
ret
fst
dec
imul
(bad)
ds
cmp
hlt
sbb
xchg
cmp
adc
(bad)
out
or
ds
jmp
and
in
adc
shl
xor
add
or
(bad)
sbb
push
pop
aam
gs
inc
mov
in
xor
and
sub
mov
ds
out
fdivp
mov
ds
imul
cdq
outs
fwait
xor
daa
sahf
clc
xchg
inc
jmp
and
dec
(bad)
call
push
int
hlt
ror
add
pop
mov
int
pop
gs
int
gs
ffreep
les
outs
and
add
and
(bad)
mul
fisubr
hlt
jl
mov
push
or
cmps
retf
popf
jecxz
int
mov
out
xor
mov
push
pop
rcl
xor
jae
cwde
xchg
fsub
loop
scas
jmp
and
and
jle
inc
shr
xor
aam
xchg
ja
ficomp
and
lods
sub
fistp
fs
leave
sub
je
pop
out
pop
jmp
xchg
(bad)
jl
imul
nop
in
jmp
inc
adc
mov
mov
pop
jmp
push
xchg
iret
sub
in
cdq
or
movs
aas
test
sbb
xchg
dec
jg
ins
push
rcr
clc
cwde
xor
pop
xchg
dec
push
pop
fs
iret
jmp
adc
arpl
popf
xchg
mov
fs
cld
push
call
repz
test
es
cmp
mov
(bad)
jo
inc
xchg
es
clc
cmp
fistp
inc
fdivr
call
cmps
pop
ins
sar
bound
out
lahf
(bad)
scas
aaa
add
int3
addr16
outs
inc
fimul
jo
stos
shl
enter
inc
jmp
sti
dec
dec
mov
rcl
(bad)
mov
xor
gs
sub
(bad)
fisubr
mov
cmps
pop
test
loop
inc
inc
dec
mov
shr
ret
cld
xchg
adc
fcmove
sub
push
mov
cli
fiadd
or
fwait
(bad)
mov
js
cmc
xchg
dec
icebp
xor
into
sbb
aas
mov
popf
mul
lock
jno
mov
push
xor
xchg
lahf
lods
dec
or
add
popa
push
dec
(bad)
(bad)
or
mov
aad
iret
xchg
out
xchg
mov
(bad)
rol
call
sub
test
in
in
imul
and
or
cmc
sbb
test
int
in
push
fistp
cli
sub
int
or
mov
sbb
lods
add
xchg
repz
cmp
mov
sub
and
jae
sub
pop
stos
cmp
mov
(bad)
ja
scas
add
dec
jp
imul
pusha
dec
and
xchg
js
iret
lahf
pop
push
icebp
movs
inc
jo
test
cwde
(bad)
movs
pop
int3
retf
jmp
jbe
enter
mov
lods
and
mov
dec
pop
push
fwait
jo
popa
push
mov
wbinvd
lock
or
mov
in
clc
rcr
xchg
(bad)
push
and
adc
lea
ss
pop
adc
test
and
(bad)
ficomp
aaa
mov
movs
add
out
les
(bad)
pop
or
jno
sbb
enter
pop
in
sti
retf
sbb
cdq
push
mov
mov
sub
mov
cmc
test
xor
movs
xchg
sti
inc
jmp
dec
pop
or
loop
mov
nop
inc
stos
scas
push
pop
in
push
push
dec
sub
xchg
push
loop
inc
fnstsw
shr
mov
mov
add
jbe
cmps
push
mov
mov
cmps
sti
adc
pop
xor
push
std
push
mov
xor
and
out
push
and
test
scas
mov
pop
sub
aaa
fsub
aam
daa
xchg
jg
cld
mov
and
xchg
mov
adc
jg
inc
jns
std
xor
push
fstp
shr
push
inc
pop
inc
push
loope
push
add
mov
rol
mov
mov
add
loop
imul
or
xchg
push
lods
mov
dec
daa
call
loope
leave
add
push
out
push
pop
push
push
(bad)
sub
pop
push
test
mov
mov
not
sbb
adc
pop
imul
or
and
cli
jno
xchg
std
adc
cmp
out
rol
push
add
fs
and
call
push
ins
lahf
jb
mov
outs
xor
scas
mov
popa
(bad)
iret
mov
es
jge
icebp
es
pushf
aad
cld
push
mov
int3
sbb
push
pop
bnd
xchg
xchg
sub
dec
or
jmp
fst
push
push
or
push
mov
mov
xchg
jae
xchg
scas
inc
lods
sbb
mov
outs
rcl
push
mov
sti
std
std
call
and
jb
push
push
test
sti
int3
or
jb
repnz
pushf
xchg
dec
hlt
add
loop
cmps
jbe
inc
aad
inc
(bad)
pop
xlat
and
sub
dec
or
imul
(bad)
fwait
xchg
int
adc
dec
ds
jmp
fdivr
push
ret
out
inc
adc
retw
mov
mov
sub
sbb
jecxz
xor
xchg
dec
adc
jno
mov
cmp
xor
and
je
dec
mov
cwde
cmp
ret
sub
je
push
je
xchg
cli
jl
mov
add
loopne
jg
fadd
call
pop
adc
aad
pushf
pop
inc
sub
shl
sub
fbld
aaa
mov
sar
sti
test
mul
cdq
(bad)
js
out
xchg
call
out
push
imul
in
push
and
leave
test
add
shr
stc
outs
cmp
leave
xor
rol
shl
dec
mov
mov
xchg
dec
cdq
inc
retf
or
xchg
xchg
and
test
out
loopne
scas
cmps
hlt
(bad)
aam
ins
bound
cdq
popf
mov
(bad)
pushf
inc
push
inc
add
loopne
fnstsw
push
push
or
sub
popa
xchg
repz
icebp
out
push
and
xchg
inc
adc
add
inc
sahf
mov
push
mov
test
imul
call
int3
mov
or
test
xchg
push
pop
ret
add
mov
cwde
mov
std
inc
mov
rcl
xchg
movs
outs
cmp
sbb
push
data16
bound
(bad)
shl
sub
mov
pop
and
jl
sbb
mov
dec
cmps
xor
mov
stos
push
mov
iret
cmp
jp
sbb
mov
lods
cld
xchg
(bad)
cld
mov
cmp
int3
jno
ret
inc
cmps
push
push
jge
fwait
jecxz
cdq
mov
push
dec
iret
lods
andnps
clc
xor
cdq
es
dec
ret
mov
pop
cs
or
scas
mov
xor
mov
push
adc
push
cld
jmp
test
ret
test
pop
aas
shr
xchg
mov
gs
les
add
jno
cmp
and
repz
jns
cmc
out
arpl
or
jb
cs
and
test
stos
stos
test
test
jecxz
and
fldcw
add
out
aaa
lods
mov
loopne
rcl
cld
mov
in
adc
repnz
cmp
pop
punpcklbw
cmps
popf
jl
sub
sub
adc
or
(bad)
call
shr
xor
sti
rol
or
jns
pop
jg
nop
retf
cwde
mov
jecxz
pop
hlt
mov
mov
arpl
ret
xchg
pop
cdq
(bad)
adc
xor
fdivr
sub
in
iret
inc
mov
mov
mov
pop
fsub
lahf
retf
scas
std
push
mov
mov
mov
outs
sbb
fs
int3
fcmovnu
stc
fs
sbb
cmp
ins
pushf
test
or
jmp
and
scas
sub
test
xchg
pop
inc
das
(bad)
xor
push
xor
sub
cmp
pushf
lea
test
sti
sub
push
(bad)
into
mov
pop
pop
sbb
jno
push
test
pop
repnz
shl
icebp
mov
adc
cmp
add
push
and
mov
mov
lahf
cdq
mov
(bad)
in
(bad)
jne
push
mov
or
push
inc
js
mov
and
pop
cmp
stos
or
cmp
cli
xor
test
sar
(bad)
adc
and
cmps
ja
mov
push
lds
loope
enter
mov
pop
and
push
push
fsubr
and
cmps
mov
push
gs
mov
dec
inc
dec
jae
xchg
pop
and
sbb
std
xor
add
and
cmp
cmp
(bad)
std
rcl
cmp
push
pop
mov
rcl
ret
dec
test
xor
cmp
inc
data16
jbe
mov
inc
mov
fdivr
or
leave
add
dec
outs
and
aam
add
and
stc
lea
les
push
sub
mov
dec
pop
add
out
arpl
sbb
push
(bad)
pop
jmp
leave
dec
ja
xor
fwait
adc
push
push
sub
in
push
or
xchg
pop
mov
shr
ss
enter
mov
leave
adc
add
sbb
mov
inc
jbe
ds
outs
and
out
test
jg
sub
ds
lock
dec
ret
cmp
in
xchg
out
test
hlt
jns
sbb
mov
retf
leave
je
das
pop
pop
sub
sub
cs
fadd
idiv
pop
mov
fistp
pop
(bad)
dec
fwait
xchg
mov
rcr
sbb
dec
xchg
mov
out
stos
mov
add
pop
sub
mov
lods
fstp
mov
(bad)
mov
popf
shl
mov
ret
hlt
pop
mov
cld
push
inc
lds
ins
scas
or
pop
imul
push
int3
call
and
push
fdivr
and
and
adc
mov
or
dec
push
arpl
sti
dec
outs
add
lahf
lock
in
test
inc
or
fs
std
mov
pusha
imul
ss
jp
add
or
rol
mov
xchg
adc
shr
push
scas
popa
aad
mov
xor
packuswb
mov
outs
push
cmps
adc
rcr
fwait
loope
xchg
ja
adc
add
jg
inc
(bad)
out
sub
lea
mov
in
mov
xor
mov
pop
ret
ins
inc
fldenv
daa
mov
in
lahf
sbb
shr
sbb
sar
xor
sub
sub
inc
dec
sbb
sbb
mov
mov
jne
fbstp
or
movs
aaa
loop
lods
inc
repnz
mov
std
gs
dec
fsub
in
push
and
push
pop
xor
stos
lods
jmp
in
jno
int
hlt
mov
mov
std
cwde
sub
xor
das
push
push
and
js
lds
jmp
pop
rcl
mov
push
jae
loope
push
jl
outs
mov
arpl
push
aaa
mov
lea
shr
lahf
mov
ds
xlat
push
or
adc
je
outs
or
pop
les
(bad)
jp
or
push
or
(bad)
popa
rcr
(bad)
xlat
pop
out
pop
and
or
and
cld
sahf
pop
movs
stos
push
xchg
adc
call
imul
push
shr
lods
pop
cmp
mov
mov
shl
sbb
and
add
std
ins
inc
ins
pop
push
cmp
mov
test
push
pop
dec
movs
push
jo
jl
sbb
dec
js
mov
push
cmp
push
ret
ret
icebp
xchg
rcr
xchg
mov
dec
dec
xor
adc
in
adc
push
and
hlt
imul
(bad)
push
(bad)
xlat
inc
popf
lds
imul
mov
cmp
(bad)
mov
pop
push
xchg
out
sar
and
add
adc
pop
in
lods
mov
mov
jb
fisttp
retf
lods
sub
mov
cmc
fs
clc
push
cmc
push
je
(bad)
inc
push
mov
in
xchg
test
xor
add
push
push
pop
sti
inc
jne
fbstp
addr16
push
dec
and
xor
call
mov
xor
inc
push
retf
sub
aad
inc
mov
pop
mov
outs
push
mov
daa
adc
xchg
ret
arpl
pop
xchg
mov
push
pop
jp
iret
retf
js
lods
pop
xchg
fmul
out
data16
sub
add
clc
pop
outs
pusha
shr
cmp
clc
movq
jmp
nop
aaa
mov
cld
rcl
or
retf
push
push
push
jp
push
xchg
sub
fsub
cdq
xchg
inc
cmp
inc
sbb
sbb
or
fistp
clc
jbe
jmp
sbb
retf
fmul
popa
sub
lea
add
inc
and
repz
repz
addr16
lahf
push
mov
mov
xor
and
sub
pop
out
or
stos
mov
adc
dec
lods
movs
imul
sub
jno
inc
sbb
mov
push
popf
fucomp
adc
stos
fidiv
adc
(bad)
jb
test
mov
sub
mov
outs
mov
cmp
mov
inc
xchg
shr
into
shl
fcmovnb
arpl
popa
pusha
pop
sahf
neg
pop
xchg
es
in
dec
call
push
mov
inc
sbb
inc
pop
jne
div
int
pop
pushf
loop
lahf
cmp
add
sbb
sbb
imul
shl
xchg
xor
dec
fs
(bad)
push
pop
das
or
stos
and
and
and
mov
inc
xor
retf
or
or
mov
mov
xor
outs
fcom
cmp
aas
ss
adc
xchg
aas
imul
mov
lods
test
lods
jle
pandn
and
inc
cmps
adc
mov
add
fld
xor
sub
pop
add
repz
dec
lods
outs
daa
out
cmp
ficomp
or
mov
sbb
jno
mov
ds
popf
push
gs
lods
dec
ins
xlat
(bad)
xchg
cld
jbe
jo
popf
cmps
sub
push
neg
pusha
xor
mov
les
cmps
mov
idiv
sub
adc
mov
pop
push
push
stos
(bad)
cdq
mov
clc
xchg
push
mov
mov
stos
pop
imul
xlat
fbstp
mov
mov
inc
xchg
fisttp
adc
adc
pop
fcomp
mov
or
pop
aad
mov
scas
jno
jne
mov
sahf
(bad)
std
inc
dec
iret
je
pop
je
in
dec
mov
repnz
jp
jge
dec
pop
aaa
inc
sbb
jmp
cmc
fstp
jl
frstpm(287
add
cmp
add
xor
sub
and
push
and
or
(bad)
sub
je
mov
fxch
push
popa
fisttp
jg
inc
imul
jecxz
pop
inc
cmp
push
sub
adc
in
inc
sub
fistp
push
push
repnz
mov
xchg
int3
push
(bad)
popf
push
adc
pop
loopne
and
xchg
ins
popf
icebp
shr
fcomp
ficom
dec
mov
cmp
lock
xchg
es
loopne
inc
stos
cli
pusha
iret
pusha
cli
test
retf
daa
movs
pop
(bad)
sub
fld
sar
mov
fwait
(bad)
pop
jb
aad
xchg
mov
inc
into
cs
mov
fstp
les
lods
push
dec
std
lock
push
or
adc
dec
and
push
loope
pop
loopne
pop
cld
pusha
pop
add
sbb
fisub
ret
xor
sahf
jne
ficom
jle
movs
outs
int3
inc
mov
das
mov
ror
in
data16
call
push
clc
xchg
adc
les
add
sbb
mov
inc
test
cmp
aad
pop
fst
in
push
enter
mov
cmps
retf
or
aam
call
fistp
xor
enter
cmps
imul
jp
mov
and
fild
jno
adc
sti
xor
xchg
clc
je
aas
pop
popa
lods
mov
cmps
(bad)
dec
inc
pop
(bad)
jl
cmps
jle
dec
inc
hlt
loop
ins
(bad)
sub
add
fisub
adc
das
mov
ret
sti
outs
xchg
mov
in
inc
or
pop
stc
mov
(bad)
nop
mov
cs
retf
push
jge
js
scas
in
cmp
jnp
shl
pop
loope
sbb
stos
movs
sar
pop
push
xchg
clc
(bad)
pusha
imul
addr16
pop
imul
push
cmps
ror
push
outs
xchg
ret
std
push
add
mov
sbb
(bad)
js
(bad)
ret
cmp
inc
repz
dec
jae
jge
call
push
(bad)
adc
mov
stc
xor
bound
cmp
scas
call
jo
sahf
fild
inc
cli
rcl
stos
xor
hlt
jecxz
adc
in
pop
cld
adc
pop
mov
xor
dec
fild
and
loopne
inc
retf
pop
inc
jnp
jge
(bad)
xchg
jo
xor
int
adc
push
jnp
add
mov
jp
xor
inc
inc
push
mov
cwde
adc
inc
jg
aad
inc
data16
stc
sbb
pop
push
mov
fcomp
test
in
xchg
adc
jg
xchg
dec
mov
fnsave
inc
jo
inc
call
shl
idiv
and
cmp
push
call
test
fist
sbb
mov
push
cmp
xor
push
xchg
cdq
sahf
push
push
xor
mov
mov
in
pop
cmps
pop
jae
cld
adc
push
jl
inc
frstor
cmps
mov
rol
pop
ja
xlat
mov
cmp
aaa
or
into
xchg
and
scas
and
dec
pushf
push
jmp
sbb
mov
pop
fiadd
rcl
fiadd
and
sbb
pop
jl
ss
fs
xor
addr16
jbe
add
add
loopne
addr16
fs
push
adc
loop
std
cmp
xchg
mov
mov
ret
add
adc
push
push
xchg
xor
sub
jnp
pop
xor
sbb
sbb
pop
mov
call
outs
inc
inc
jecxz
loope
sbb
mov
push
add
xor
fcomp
push
mov
push
jnp
xchg
cmp
hlt
push
(bad)
call
das
xchg
iret
mov
inc
and
out
cmps
pop
movs
outs
imul
sub
push
mov
int
push
call
add
hlt
daa
es
cmp
pop
retf
mov
add
add
mov
push
or
inc
pop
(bad)
addr16
aaa
fld
jb
jae
mov
stos
in
in
ret
jecxz
shl
pop
mov
imul
std
jle
cmc
aaa
push
xor
retf
ja
inc
dec
cli
outs
cvtdq2ps
push
inc
adc
jb
movs
fadd
push
mov
movs
(bad)
in
push
mov
loope
sub
clc
jg
adc
pop
in
xor
les
lds
retf
loopne
cmc
not
lock
add
out
mov
icebp
stos
(bad)
or
cli
add
fwait
push
stos
sub
cmovl
test
inc
daa
mov
xor
and
es
push
test
mov
lds
mov
jge
test
std
js
mov
popa
mov
clc
add
xchg
jecxz
mov
out
inc
or
push
xchg
mov
sub
(bad)
jle
jno
push
adc
int
sub
pop
movs
mov
mov
add
ret
outs
push
(bad)
mov
test
adc
dec
das
jl
jb
repz
aas
add
sub
inc
in
add
out
sbb
add
dec
popa
cmp
mov
retf
adc
and
jmp
aad
dec
outs
mov
test
popf
ret
xchg
sub
(bad)
ficom
sub
mov
repz
shl
stos
stc
cmp
mov
pop
push
inc
adc
mov
xor
sbb
pop
sbb
jb
xor
arpl
popa
xchg
dec
push
pop
(bad)
jmp
push
sbb
mov
pop
jno
enter
pop
leave
push
test
adc
(bad)
push
ret
xchg
mov
mov
lock
scas
pop
add
retf
jb
jbe
jg
iret
mov
jns
fist
pusha
push
loopne
xchg
dec
daa
inc
das
sub
sahf
mov
nop
(bad)
popf
call
adc
pop
xchg
das
mov
retf
jl
xchg
mov
adc
sbb
pop
xchg
arpl
(bad)
cmp
ins
fucompp
dec
xchg
stos
xchg
xchg
or
pop
cmp
mov
out
cmp
adc
push
lock
test
pop
push
(bad)
sbb
jmp
leave
mov
push
inc
pushf
mov
repz
adc
and
rol
sub
dec
mov
dec
int3
mov
jmp
cld
mov
loopne
call
sbb
push
dec
sub
ins
mov
(bad)
pop
xchg
test
inc
xor
xchg
push
jmp
push
or
in
ins
arpl
repnz
xchg
cmps
hlt
dec
sbb
scas
rcr
inc
push
or
movs
in
jg
lahf
push
dec
outs
push
push
sub
cdq
dec
(bad)
cmp
out
mov
cdq
movs
adc
mov
ins
jmp
or
mov
dec
fmulp
fild
iret
stos
scas
sub
fist
pop
sbb
fisubr
jecxz
pop
inc
out
iret
aas
js
sub
dec
gs
loope
bound
sub
push
push
cdq
ja
or
shl
sbb
arpl
iret
xor
dec
xchg
(bad)
cs
pop
je
inc
lea
(bad)
fucomi
int
ror
daa
mov
inc
clc
mov
fisttp
jmp
sub
fimul
(bad)
cmp
pop
jl
add
cmp
xor
push
xor
sahf
mov
adc
sub
test
int
arpl
jmp
mov
imul
adc
in
loop
and
adc
sub
fwait
sahf
xchg
cmp
cmc
pop
sub
dec
mov
xor
jg
lahf
and
sub
mov
jo
shr
jne
mov
jg
mov
mov
jmp
or
mov
rol
in
cli
lock
jb
xor
les
add
(bad)
xlat
(bad)
mov
jge
es
pop
sub
retf
loopne
popf
jae
scas
ins
call
les
cwde
(bad)
repz
rol
sbb
shl
adc
(bad)
and
nop
fnstcw
(bad)
call
push
jno
in
cmp
outs
dec
ret
ret
lock
adc
arpl
mov
push
and
fs
pop
adc
cmc
setno
jecxz
push
test
test
pop
xchg
jne
aas
ret
sar
and
xor
and
inc
ret
ins
jbe
lock
in
adc
sub
cmp
into
adc
popf
das
or
stc
das
lahf
mov
adc
add
imul
jo
rol
inc
cmps
dec
add
or
jne
jo
mov
nop
(bad)
retf
stos
dec
loop
popf
add
mov
mov
adc
addr16
inc
pop
push
addr16
mov
addr16
sbb
mov
sbb
(bad)
xchg
push
mov
mov
xor
sbb
pop
push
jo
push
adc
test
mov
fidivr
or
iret
daa
rcr
shl
xor
repz
dec
shl
jnp
mov
mov
and
aam
mov
and
or
add
ins
xlat
call
xor
std
cwde
add
(bad)
inc
les
cmc
sbb
cmc
add
push
in
push
mov
sub
push
js
aam
or
sar
add
inc
fsubr
jecxz
push
pusha
imul
rol
jl
icebp
in
dec
push
iret
cli
daa
in
out
adc
xchg
or
push
sbb
movs
loopne
jns
in
mov
(bad)
daa
fnstcw
icebp
dec
fldln2
sti
aas
add
inc
and
lahf
dec
inc
adc
fistp
iret
pop
out
into
mov
call
pushf
xor
sbb
mov
out
iret
iret
mov
inc
nop
xchg
mov
adc
mov
mov
jbe
cwde
(bad)
add
ja
lahf
fs
xchg
cmp
(bad)
in
idiv
adc
jecxz
in
shl
outs
mov
adc
in
aaa
dec
fs
inc
(bad)
sti
xor
fcomp
(bad)
pop
or
arpl
es
fnstenv
mov
ss
int
out
xor
pop
sahf
sub
pop
xor
inc
jae
xor
mov
pop
in
call
nop
adc
int3
xchg
mov
jl
daa
mov
stc
aas
mov
or
inc
push
test
xchg
fwait
pop
add
add
mov
leave
jb
lods
sub
sbb
les
(bad)
out
outs
pop
mov
sub
out
cdq
push
mov
dec
xchg
out
and
ja
aaa
hlt
push
sar
mov
cdq
fiadd
or
fwait
rol
dec
fdiv
mov
cdq
test
or
push
push
mov
clc
add
pop
push
add
fwait
inc
sbb
inc
fcmovnu
or
(bad)
cmp
sub
mov
mov
out
fs
cmc
cmp
dec
fs
fistp
in
cmps
xchg
arpl
and
fidiv
loopne
pushf
push
mov
cmp
jo
and
dec
ret
sahf
adc
sbb
aaa
and
in
jno
loop
movs
sbb
jns
jge
test
pop
add
adc
repz
sbb
inc
mov
pop
lock
cmps
movs
cmp
(bad)
mov
(bad)
xlat
dec
sahf
inc
out
ror
bound
sti
push
xchg
pop
mov
arpl
(bad)
leave
mov
sbb
into
or
mul
sub
scas
fcmovnbe
(bad)
xlat
jl
add
aad
mov
test
and
(bad)
rol
or
(bad)
in
rol
sbb
jnp
(bad)
(bad)
pop
daa
add
fbstp
jmp
mov
jo
push
pop
mov
xor
mov
mov
mov
imul
jl
inc
mov
movs
pop
push
jg
adc
pop
lock
xor
(bad)
sbb
test
adc
lock
les
sahf
pop
adc
xor
xor
rcr
daa
dec
dec
cmps
mov
jp
pop
(bad)
in
adc
inc
add
add
aas
mov
pop
add
out
or
pusha
lds
outs
xlat
xor
fmul
mov
cmps
out
add
sti
enter
shl
mov
sbb
xchg
sahf
cmc
std
or
pop
shl
in
jp
mov
xchg
popf
pop
sbb
jne
(bad)
jmp
cld
(bad)
mov
sub
aam
call
add
popf
jbe
in
mov
mov
xor
jmp
sar
sbb
mov
mov
jle
inc
xchg
outs
test
retf
or
cmp
imul
sub
adc
(bad)
push
xor
cs
cmc
jnp
mov
outs
data16
(bad)
scas
sbb
scas
(bad)
shl
sbb
fnstsw
and
dec
icebp
mov
div
dec
adc
jp
mov
mov
or
mov
adc
jmp
adc
push
repz
ja
pop
setno
mov
mov
push
xchg
xchg
xor
arpl
push
pop
xor
loop
inc
loopne
or
mov
jge
hlt
fimul
hlt
cmp
jge
aad
out
jmp
ds
inc
push
push
je
int3
dec
push
fstp
gs
gs
mov
hlt
add
mul
xlat
imul
push
and
inc
mov
call
xchg
cmp
jle
mov
lods
cmps
sti
pop
cmp
add
inc
mov
fidiv
push
pop
fcmovnu
xor
pop
cwde
push
xor
inc
paddsw
pop
imul
in
or
rol
xchg
call
into
ins
lock
jg
sbb
sbb
ins
xlat
adc
jnp
pop
(bad)
pop
cmp
popa
and
rcr
sub
jno
mov
cmps
(bad)
div
xchg
lds
sub
xchg
stos
(bad)
mov
dec
or
push
les
scas
test
push
stos
inc
mov
fs
in
ins
(bad)
mov
push
add
sub
cdq
ins
mov
pop
data16
fwait
test
(bad)
mov
dec
dec
enter
loopne
sub
shl
dec
pushf
popf
cmps
dec
push
xor
sub
inc
pop
(bad)
push
nop
movs
xor
jl
inc
add
cli
sub
les
add
jmp
jge
mov
pop
adc
xchg
xchg
xchg
retf
mov
mov
mov
pop
jno
xor
(bad)
sti
push
lds
pop
sbb
mov
fsubrp
jl
push
das
or
cmp
inc
or
push
dec
nop
fidivr
cmp
ja
mov
push
and
dec
push
sbb
out
pop
push
fcmovb
jo
ds
cli
jb
xchg
inc
cmp
(bad)
xchg
scas
jbe
sar
sub
aaa
push
inc
sbb
imul
test
push
xchg
(bad)
arpl
ffreep
cwde
cmp
dec
cmp
jbe
pop
dec
dec
mov
or
les
sub
sbb
dec
inc
adc
or
xchg
inc
jmp
jle
push
mov
mov
jno
int
push
popa
and
sar
or
mov
dec
mov
mov
stc
test
cmp
inc
arpl
and
(bad)
out
and
or
cli
push
xchg
std
cmps
repnz
pop
(bad)
aas
inc
adc
jae
sbb
cdq
jge
push
aad
rcl
cmp
movs
pop
add
sbb
sbb
out
inc
jo
stos
fsubr
int
mov
or
and
sub
cmp
ror
push
pushf
mov
rcl
popf
outs
sets
mov
(bad)
loopne
lahf
mov
out
in
movs
arpl
mov
xor
movs
sbb
daa
pop
cwde
mov
xor
icebp
daa
fldenv
dec
cmp
inc
loope
mov
lds
sbb
push
cmc
jo
addr16
out
or
jae
mov
cmps
and
(bad)
xor
nop
stos
in
jmp
mov
push
es
push
ss
repnz
dec
dec
mov
imul
retf
arpl
sar
daa
cmp
mov
(bad)
cdq
mov
jp
add
in
addr16
fcmovb
add
sbb
pop
sbb
into
push
mov
inc
pop
mov
das
mov
stc
adc
or
sti
add
xor
pusha
data16
add
mov
or
cmp
(bad)
push
movs
pushf
test
out
mov
popf
retf
scas
rcr
int
adc
mov
div
xor
cmps
cmp
lds
add
adc
scas
cmp
inc
ret
and
inc
out
sbb
xor
or
jns
fild
jle
jp
ror
and
sub
xor
cs
div
xchg
retf
jp
push
pushf
scas
int
sbb
adc
aad
sbb
jmp
bound
fucom
mov
stos
push
inc
pop
gs
ficom
test
dec
fcomp
enter
adc
ss
mov
inc
test
sbb
xor
lods
(bad)
leave
ja
out
adc
ja
lahf
dec
cmp
sub
ret
ins
xchg
mov
cdq
sbb
cmp
ror
mov
(bad)
mov
mov
jns
pop
push
push
outs
mov
into
mov
mov
xor
(bad)
pop
mov
fldenv
and
adc
cmps
leave
je
dec
cmps
xor
out
xor
jmp
icebp
jmp
loope
mov
mov
pop
fidiv
fild
pop
jbe
jmp
(bad)
iret
pop
std
dec
and
test
jecxz
xor
or
mov
inc
and
call
sbb
lea
jg
xchg
sbb
retf
nop
push
mov
cmps
repnz
dec
loop
jmp
inc
mov
aad
cli
xchg
out
out
cmc
add
sub
pop
cmp
mov
push
mov
mov
inc
cli
cmps
mov
and
mov
pop
dec
or
ins
in
addr16
adc
(bad)
nop
and
stos
sbb
mov
retf
fs
je
add
inc
ficom
cmp
cmp
cmps
mov
xor
inc
jmp
sub
out
xchg
cmc
adc
cmp
add
(bad)
or
scas
cmp
dec
mov
add
cs
mov
mov
scas
push
pop
inc
cmp
in
mov
div
ficom
sbb
adc
mov
fdivp
and
jle
dec
ret
test
or
add
ja
stos
fbstp
mov
xchg
fs
cmc
push
cmps
mov
xchg
in
(bad)
repnz
js
pop
mov
xlat
sub
mov
pop
aaa
cmps
mov
jbe
sbb
mov
inc
gs
inc
sub
outs
dec
push
stos
imul
sahf
xchg
jl
loope
push
repnz
daa
fnstenv
mov
scas
add
cmp
mov
or
xchg
aam
mov
outs
push
rcr
cli
add
int
pushf
push
xchg
pop
ja
cmps
push
push
enter
lods
and
adc
jle
jecxz
sar
cli
sbb
test
je
inc
pop
jo
iret
popa
fild
add
and
xchg
shr
xor
int
push
loopne
(bad)
dec
js
push
dec
xor
dec
or
(bad)
ror
xchg
inc
inc
and
fstp
inc
retf
jge
adc
dec
cwde
cmp
cmc
xor
(bad)
aam
(bad)
stos
mov
dec
or
mov
movs
or
cs
add
mov
mov
mov
inc
push
out
adc
data16
js
ret
scas
add
repz
ret
jne
out
ret
cmp
xor
xor
mov
outs
iret
push
(bad)
in
sub
xchg
mov
push
jp
test
jne
sbb
or
sar
or
retf
xchg
and
and
inc
mov
xor
loopne
imul
fadd
imul
dec
cmc
(bad)
bnd
arpl
lds
retf
sub
stos
jo
push
mov
aam
push
jle
pop
jle
mov
out
mov
jbe
or
outs
mov
cdq
js
push
fldcw
xor
repnz
(bad)
jae
mov
push
retf
adc
jbe
xchg
shl
mov
dec
(bad)
pop
mov
call
xchg
fistp
fwait
adc
stos
stos
movs
retf
mov
cs
lods
sar
adc
sub
sar
popa
jb
and
lock
or
in
out
loop
inc
xlat
ss
data16
jno
adc
jnp
mov
jge
xor
xchg
sub
dec
(bad)
fimul
inc
pop
pop
clc
xchg
in
mov
push
aad
mov
or
jecxz
aam
movs
sub
mov
lods
adc
push
enter
mov
out
push
mov
push
test
sub
nop
push
xor
jmp
dec
mov
arpl
test
jno
loopne
xlat
add
mov
pop
xchg
cmp
xlat
push
test
int3
adc
loop
fcom
int3
pop
fwait
enter
and
(bad)
fst
retf
jecxz
xchg
scas
(bad)
fxch
out
fdiv
and
loopne
enter
or
or
and
adc
sub
data16
mov
stc
das
pushf
add
cmp
push
(bad)
js
shr
push
cwde
rol
add
adc
shl
sbb
cmps
popa
daa
mov
in
jo
int
inc
data16
(bad)
mov
fcomp
pushf
adc
push
sub
dec
in
ret
push
cmp
inc
popa
push
pop
test
xchg
fst
test
lahf
sbb
ins
add
pop
xor
js
jmp
or
sub
xchg
mov
(bad)
xor
xchg
inc
enter
out
mov
xlat
jns
lahf
pop
push
mov
std
call
enter
push
outs
(bad)
outs
jg
loop
jecxz
mov
fucom
jmp
std
cmp
imul
mov
sub
call
jno
mov
test
xchg
or
xchg
fsubr
adc
dec
enter
mov
movs
mov
lods
add
iret
ror
repz
jge
pop
jge
movs
daa
mov
jnp
lea
sti
adc
(bad)
in
lds
rcl
and
push
xor
jae
add
push
jne
fst
lds
in
sbb
mov
aam
jmp
sbb
lds
pop
jo
repnz
lods
hlt
cmp
aad
repz
jmp
sub
call
or
xchg
inc
ret
xlat
fmul
rol
fisub
jbe
sub
stos
pop
and
fsub
push
lock
test
xchg
jbe
outs
adc
pop
pop
push
sub
xor
xchg
push
push
das
and
call
pop
push
pop
adc
sbb
cmp
pushf
loop
and
cs
lahf
push
push
outs
jle
cdq
sti
inc
mov
mov
pop
cld
add
jo
inc
xor
cld
pop
or
jg
adc
jle
xor
push
jnp
jbe
mov
xor
popa
mov
ret
enter
pop
lahf
jae
div
mov
inc
xchg
fisubr
adc
clc
div
dec
ins
or
jg
jbe
retfw
jge
data16
in
sbb
fwait
ror
fcomp
jmp
je
mov
xchg
xor
(bad)
mov
and
and
xor
in
fisubr
and
inc
adc
loope
or
sbb
sti
lods
test
jnp
rcr
in
sti
shr
inc
lds
xor
sub
add
mov
shl
push
xor
sahf
retf
xchg
adc
mul
rcl
enter
mov
inc
xchg
rcr
mov
cmps
dec
mov
dec
enter
movs
stos
lds
(bad)
add
dec
pop
mov
jne
mov
cs
xchg
and
nop
adc
or
sahf
pop
adc
das
popa
jg
retf
shr
push
jo
mov
arpl
dec
dec
push
mov
mov
stos
outs
mov
aas
jbe
dec
sub
std
imul
adc
inc
inc
loopne
mov
in
xchg
mov
add
mov
pop
xchg
or
popf
jne
xchg
hlt
fild
(bad)
sti
adc
(bad)
(bad)
pop
cmp
rcl
fild
push
mov
xchg
cli
mov
jge
repnz
retf
adc
bound
fdivr
cmp
bound
xchg
pop
xchg
inc
inc
movs
imul
les
mov
mov
fst
call
stos
fsubr
adc
popf
ss
adc
add
(bad)
or
inc
js
pop
jmp
ss
push
inc
ja
or
(bad)
cmp
and
pop
pand
std
data16
dec
and
mov
fs
aas
loope
push
xor
nop
rcr
iret
adc
std
movs
push
daa
pusha
rcl
je
sbb
adc
xchg
push
js
(bad)
fcmove
popf
int3
cmp
inc
mov
sbb
pushf
mov
out
xor
and
push
fist
jae
outs
clc
arpl
cli
imul
clc
ds
jns
shl
pop
inc
dec
pop
mov
call
mov
sub
inc
arpl
mov
dec
lock
mov
lahf
mov
mov
pushf
sub
retf
mov
jne
fnstcw
push
aas
sahf
test
cmp
jg
xchg
test
(bad)
pop
mov
ss
(bad)
mov
adc
pop
push
out
adc
(bad)
xor
lock
out
pusha
mov
xor
leave
out
push
aam
mov
jle
rol
repz
xor
adc
outs
outs
loop
xchg
and
cs
std
pop
sbb
(bad)
sbb
in
adc
int3
adc
cmp
ret
addr16
inc
stos
scas
stos
and
call
dec
mov
sar
movs
pop
cmp
sbb
dec
jmp
push
(bad)
fidivr
sbb
cld
hlt
gs
pop
mov
and
push
popa
and
rcr
out
jno
icebp
rcl
inc
mov
jecxz
jo
cli
fwait
(bad)
dec
inc
cdq
jae
cs
mov
pop
or
inc
clc
shr
and
xor
pop
mov
or
mov
lock
retf
dec
and
out
scas
mov
inc
aad
sub
fucomp
cmp
mov
loopne
ror
movs
movs
add
int
shr
leave
bound
sbb
retf
dec
popf
push
minps
sbb
cld
frstor
pop
iret
sbb
mov
fidiv
cmps
(bad)
mov
pushf
xor
aad
repz
ss
in
rol
sbb
or
dec
test
cmp
xchg
dec
inc
out
bnd
popa
xchg
jne
(bad)
push
mov
and
or
sbb
jecxz
cwde
and
xor
movs
xor
(bad)
stc
mov
out
mov
xor
and
rol
cmps
lds
lock
rcr
fsubp
aas
add
or
adc
mov
sub
xor
in
rol
xchg
sub
stc
call
push
adc
test
cmp
jp
push
jl
outs
test
or
push
fsubp
cli
sub
daa
popf
repnz
inc
xchg
mov
mov
add
jbe
pop
div
pop
xchg
nop
fucomi
inc
mov
fidivr
loope
sub
and
xchg
arpl
lahf
ret
les
xchg
loop
int3
mov
dec
add
(bad)
jle
push
adc
jne
(bad)
fidiv
or
scas
inc
dec
js
mov
mov
cdq
je
xor
ins
mov
sbb
jp
cmp
jnp
outs
ficom
test
cli
sub
scas
jg
adc
scas
and
xchg
movs
mov
scas
pop
mov
dec
adc
fld
stc
mov
or
xor
add
lock
mov
sbb
pop
add
adc
aad
xchg
and
cwde
xchg
inc
div
mov
setl
pop
mov
or
mov
pop
cmp
pop
cmps
icebp
xor
mov
(bad)
aad
pop
push
loopne
mov
inc
in
pop
retf
xlat
mov
adc
jecxz
mov
mov
ficom
sti
data16
cli
cmp
scas
retf
popf
pusha
push
add
push
sahf
or
fs
cmp
mov
and
jle
std
and
inc
adc
cmp
jmp
or
add
repnz
sti
pop
dec
push
hlt
ret
inc
cld
jae
push
push
and
lds
inc
sti
push
add
cmp
aaa
and
mov
xor
push
or
rol
test
adc
bound
es
ret
mov
xor
or
pop
shr
or
or
mov
clc
mov
sub
in
xchg
scas
jg
jge
jae
add
sbb
outs
out
adc
mov
xchg
pop
fs
push
arpl
add
(bad)
mov
pop
inc
dec
rcl
and
popf
cdq
sbb
push
xor
jnp
imul
add
cli
mov
stos
sbb
test
clc
push
cmps
push
das
push
les
cli
pop
in
and
test
popf
xchg
push
or
push
lds
pop
push
push
adc
jl
ss
das
imul
mov
pop
xchg
xchg
aaa
mov
or
movs
pop
sub
dec
scas
fcomip
addr16
pop
pop
inc
jmp
jns
and
inc
and
jg
test
popf
adc
pop
ins
ds
ret
and
cwde
nop
or
xchg
(bad)
pop
shl
cmp
loop
rol
stos
jb
imul
or
adc
hlt
jge
hlt
push
push
jne
repz
xor
adc
rcr
mov
or
inc
imul
js
push
jl
(bad)
xchg
or
mov
in
ja
pop
inc
scas
cld
pusha
data16
ss
aad
add
pop
in
and
dec
rcl
pop
ds
sub
int
push
or
repnz
cld
scas
xor
cwde
ds
adc
sbb
(bad)
fstp
jbe
mov
out
pop
sbb
ins
mov
pop
test
inc
sbb
out
mov
dec
stos
ret
loop
add
push
fld
mov
push
jno
sar
in
ins
cmp
mov
xor
ror
sub
push
gs
mov
imul
cmps
adc
sub
push
or
sub
jg
cmps
jp
js
xor
mov
mov
fisttp
and
xlat
lods
cmp
dec
cmp
mov
jne
lods
cmp
xlat
xor
arpl
test
sbb
nop
out
(bad)
sub
pusha
(bad)
cmc
sbb
fbld
push
xor
jae
jno
popf
and
ja
retf
enter
dec
inc
adc
popa
mov
ins
aam
push
arpl
cwde
mov
mov
mov
les
loopne
push
mov
mov
test
shl
mov
aad
enter
retf
paddq
cmc
adc
(bad)
popf
test
stos
mov
dec
popa
mov
ss
cmp
(bad)
test
sti
and
and
jns
inc
loop
loop
push
jnp
out
popa
pop
pop
cli
pop
dec
stc
test
dec
xor
add
pushf
inc
pop
loopne
and
or
iret
mov
cmp
xchg
test
xor
outs
adc
rcr
std
retf
or
and
shl
cmp
hlt
clc
test
(bad)
and
fstp
xchg
pop
movs
push
adc
shl
and
sub
sbb
pop
adc
daa
push
inc
std
stos
mov
cli
push
mov
pop
daa
pusha
push
adc
lods
jno
jge
dec
(bad)
ins
dec
xchg
lds
es
jb
(bad)
jge
xchg
cwde
mov
imul
pop
and
lods
and
adc
inc
pop
(bad)
cld
mov
ret
mov
mov
xor
retf
ja
ins
pop
in
push
xor
out
xchg
and
dec
mov
add
add
and
mov
je
xchg
cmp
pushf
fs
sub
pusha
ins
or
mov
das
jne
add
inc
and
stc
mov
mov
and
call
jp
lds
cmp
inc
mov
sbb
inc
js
or
push
shr
stos
test
add
fdivr
idiv
repz
push
sub
sbb
das
shr
jle
mov
jecxz
pop
push
push
inc
fsub
sbb
ficomp
mov
mov
lods
out
int3
(bad)
clc
adc
lods
fadd
dec
cmps
push
sub
popf
xchg
inc
leave
retf
cmp
xor
cmovb
mov
inc
rcl
movs
test
inc
pop
cmp
out
mov
outs
jae
mov
int
ror
shl
loope
bound
sti
loop
stc
mov
sub
and
mov
fisubr
xor
and
fcomp
in
test
ja
jp
jmp
aas
lea
jg
ds
sub
and
ja
cmp
ror
data16
mov
loop
lods
stos
js
ror
pop
xchg
ss
add
test
outs
das
ret
stc
jns
clc
bound
gs
aas
fstp
dec
ja
adc
sub
dec
daa
scas
pop
sub
pop
inc
xchg
mov
push
call
push
fisttp
fstp
in
dec
ret
pop
push
push
std
push
mov
or
mov
mov
out
mov
ja
gs
stc
in
inc
mov
cmp
ja
add
add
gs
nop
cmps
sbb
shr
in
and
pop
retf
(bad)
dec
ror
cld
lea
and
jge
xor
push
xor
inc
mov
sub
dec
and
fsub
and
cmp
test
mov
inc
xchg
jnp
push
xor
movs
repz
xor
push
adc
call
cmc
shr
lahf
add
xor
jg
fmul
sbb
mov
pop
bound
jae
in
push
frstor
jo
in
cwde
(bad)
mov
adc
(bad)
out
mov
cmp
out
pop
mov
sub
and
in
out
mov
sbb
scas
lods
fistp
jne
popa
stos
add
add
push
add
es
rol
arpl
add
lods
in
inc
sbb
int3
jb
jb
repz
and
sbb
xchg
mov
ficomp
ss
jl
pop
mov
stos
xchg
mov
mov
icebp
iret
and
xchg
mov
(bad)
imul
push
sub
jmp
or
frstor
mov
loop
stc
jno
mov
cmp
popf
dec
add
cwde
mov
pop
ret
(bad)
lods
cmp
int
jge
push
sbb
ins
fcomp
cs
loop
(bad)
cdq
fld
sti
scas
ds
xchg
popa
lods
loopne
jb
das
or
jp
inc
jp
mov
mov
ret
arpl
or
jmp
push
jl
or
stos
and
scas
(bad)
cli
cmp
jmp
test
adc
dec
push
pop
jg
(bad)
mov
bound
dec
clc
int
gs
mov
and
dec
cmp
add
call
add
mov
or
sbb
ds
mov
mov
(bad)
mov
mov
into
push
jb
cli
inc
sub
pop
repz
xchg
loop
cmps
mov
std
popf
mov
lds
sub
ss
adc
outs
sbb
xchg
push
xchg
push
add
inc
fsub
popf
jmp
adc
ret
mov
in
mov
call
jnp
or
ror
test
inc
mov
retf
xchg
je
adc
jbe
jecxz
sbb
xchg
cmp
push
ret
mov
add
ss
sbb
jmp
xchg
repnz
jle
repz
push
xchg
pminub
fucomp
push
inc
sar
jmp
add
adc
sub
cmp
hlt
xor
and
sub
(bad)
imul
shr
in
xor
mov
stos
adc
in
dec
lods
push
imul
dec
aaa
stc
push
test
loop
mov
call
or
jl
jmp
test
pop
mov
imul
sbb
rcl
pop
shl
cmp
outs
xchg
(bad)
sahf
hlt
push
test
inc
imul
cmp
aam
pop
adc
sbb
mov
int
cmc
movs
push
add
xchg
or
push
sbb
bound
mov
loope
leave
ret
bnd
adc
data16
leave
sbb
sbb
nop
mov
in
jno
xor
rcr
jecxz
sbb
dec
push
es
mov
(bad)
add
(bad)
cmc
dec
dec
icebp
xor
sbb
adc
test
pop
ja
data16
add
xchg
(bad)
adc
xor
dec
cmp
pop
outs
dec
pop
xor
mov
push
sbb
sbb
and
daa
ror
imul
adc
retf
push
xor
mov
sub
enter
fstp
sbb
into
cpuid
mov
xchg
or
pop
sub
call
leave
adc
mov
adc
sub
(bad)
sbb
sahf
in
ror
inc
push
add
sub
xor
dec
div
mov
jbe
scas
jge
in
mov
sub
scas
ins
pop
jns
ret
and
in
lea
jne
aaa
dec
jl
mov
adc
out
pop
sbb
cli
lahf
jle
popa
aaa
loop
or
xor
jl
shr
dec
or
add
je
jno
jp
push
mov
mov
xchg
(bad)
int3
add
xor
aas
ror
xor
leave
push
inc
shr
push
xlat
(bad)
lock
cmps
out
dec
mov
xchg
or
cmp
xchg
call
mov
pop
shl
push
push
mov
jne
push
cmp
cld
and
lods
fst
div
mov
push
or
cmp
push
into
sti
pushw
jle
clc
adc
dec
iret
rcr
push
add
(bad)
mov
sub
xchg
pop
stc
inc
fwait
out
lds
pop
aam
shl
loopne
dec
or
std
push
movs
cwde
or
sbb
adc
pop
push
jne
mov
call
data16
call
imul
xor
mov
xchg
popf
imul
adc
add
and
stos
sub
arpl
aam
sbb
adc
and
fdiv
mov
pop
xchg
push
adc
rcl
pop
retf
in
inc
sar
mov
orps
and
retf
(bad)
mov
cmc
and
mov
xchg
sbb
jecxz
xchg
jb
push
fwait
mov
std
ja
test
adc
jle
push
out
mov
pop
push
cmp
dec
or
add
push
sbb
scas
ss
inc
cmps
lock
aaa
mov
sti
jg
fcmovnb
jbe
dec
out
push
scas
cmps
test
fsub
pop
and
dec
sub
shr
mov
dec
mov
mov
imul
dec
xchg
test
sub
xor
repz
loop
add
arpl
test
repz
test
cwde
aam
fwait
test
jne
pop
push
mov
adc
xchg
xor
mov
aad
mov
xchg
sti
ins
or
jmp
and
icebp
sbb
stos
daa
ret
pusha
xchg
das
push
sub
call
aad
inc
xor
mov
inc
repnz
inc
push
aam
ror
inc
(bad)
fistp
rcr
(bad)
ret
sbb
shl
ja
retf
mov
push
addr16
shr
inc
mov
mov
addr16
and
aaa
cmps
jnp
adc
mov
fsubr
cdq
movs
lock
lahf
sub
and
or
scas
aad
dec
dec
test
mov
jge
inc
or
rcr
or
mov
js
fcom
sbb
fsubr
push
test
or
or
adc
mov
nop
or
test
retf
inc
das
dec
xlat
xchg
int3
(bad)
cmp
lock
or
icebp
mov
sub
(bad)
leave
mov
loop
xor
sar
and
pop
mov
cmp
bound
xchg
out
dec
into
sbb
mov
mov
mov
inc
repnz
add
sub
inc
enter
mov
dec
cmp
push
mov
ret
repz
retf
or
ficomp
xor
xlat
out
adc
je
inc
nop
push
js
scas
push
push
jle
int
cwde
retf
xchg
ret
push
test
repz
lea
cmp
add
out
stos
movs
jo
mov
mov
movs
pop
pop
movs
vunpcklpd
fbld
cmp
scas
ds
sbb
ja
imul
sbb
jle
icebp
pushf
mov
cs
inc
aaa
push
mov
add
cli
std
inc
xchg
xor
jmp
and
jp
retf
(bad)
mov
add
inc
ins
shr
inc
repz
add
bound
sub
test
mov
hlt
or
add
dec
cwde
mov
pop
xlat
xchg
test
mov
xchg
nop
xor
inc
adc
js
sub
sbb
push
into
in
je
xchg
int
mov
dec
es
mov
stc
and
or
pop
mov
popf
ja
jnp
dec
aam
(bad)
pop
or
shl
sahf
or
faddp
je
sahf
cmps
ja
jmp
adc
or
repz
bound
sub
popf
mov
push
sub
push
or
push
mov
shl
xor
xchg
sbb
push
cmp
cmps
std
lahf
into
outs
jp
cdq
sbb
jbe
mov
cmp
sbb
les
mov
cdq
sub
cmp
stos
or
fbld
ss
inc
jb
sahf
cmp
and
(bad)
mov
addr16
ret
stos
fstp
jns
jg
or
enter
(bad)
shl
dec
xor
fnstcw
test
cmp
mov
loope
inc
stos
mov
pop
inc
out
adc
out
hlt
dec
jg
cmp
xchg
out
mov
inc
push
and
loope
jl
cmp
xchg
sbb
inc
mov
in
imul
(bad)
cwde
cmp
sahf
xchg
movs
cmps
push
scas
loope
add
add
dec
bound
loop
scas
int3
test
sbb
jg
mov
cmp
pop
push
sub
fs
ret
xchg
loop
fcmovu
movs
adc
scas
cmp
sbb
lahf
xor
popa
test
jl
add
ins
fwait
int
call
nop
xchg
xchg
fstp
mov
jb
rol
pop
fcomp
lock
movs
es
push
popa
loop
mov
je
repz
sub
pop
mov
dec
mov
mov
push
push
sahf
mov
cmc
adc
sub
adc
push
sbb
cmovge
out
mov
adc
test
fld
push
add
daa
dec
icebp
and
fist
je
loop
test
add
mov
xchg
cld
repz
pop
movs
lock
(bad)
scas
cmp
hlt
dec
xor
xchg
in
jae
stc
leave
xchg
iret
std
mov
xlat
or
jecxz
jg
fst
or
pop
ds
div
pop
jle
xor
cwde
pop
inc
add
mov
mov
ins
loop
jp
iret
loop
aas
add
inc
nop
imul
cli
dec
sti
sar
retf
sub
mov
call
clc
ins
jo
dec
popa
xchg
leave
fs
loope
in
xor
(bad)
xchg
paddsb
aas
cmps
std
mov
test
test
jmp
mov
xchg
shl
inc
in
cmps
push
inc
gs
cdq
cmp
mov
mov
pusha
mov
or
jg
pop
pop
aam
in
dec
std
or
dec
push
popf
pop
sti
sub
mov
xor
adc
scas
iret
add
cmp
pushf
fbstp
in
(bad)
inc
add
lahf
rcl
jmp
call
inc
(bad)
sbb
jg
or
icebp
mov
or
scas
retf
sub
xchg
pop
mov
push
add
stos
int3
enter
dec
jb
test
les
std
mov
loopne
adc
into
gs
ins
sub
sub
ficom
cdq
clc
sub
jbe
jo
or
pop
dec
cld
xchg
mov
lock
xor
sahf
jmp
add
and
adc
loopne
xor
pop
mov
mov
clc
out
mov
repz
pop
sub
in
leave
(bad)
data16
or
lds
mov
add
out
lahf
mov
mov
or
jbe
dec
fnsave
jecxz
addr16
fbld
sub
xchg
cmc
or
ds
aaa
xchg
sub
(bad)
out
and
cmp
sbb
in
dec
lock
nop
cmps
mov
mov
repz
fiadd
fnstsw
push
aad
push
loope
test
push
xor
fwait
mov
sahf
rcl
add
lods
and
aas
cmp
into
frstor
fisttp
xchg
bound
loop
lahf
enter
not
fistp
cmc
cmps
dec
sub
sub
in
adc
pushf
shl
xor
into
push
nop
stos
push
inc
pushf
cmp
pop
mov
sub
cmps
cmps
sbb
imul
movs
cmp
cmp
cmp
and
mov
loope
daa
mov
hlt
cli
jb
shr
daa
scas
repnz
std
leave
push
adc
enter
push
movs
jp
mov
push
inc
out
pop
mov
imul
or
push
into
or
push
je
push
fadd
push
push
sub
sub
inc
and
ret
gs
dec
in
nop
leave
push
push
adc
loope
xchg
jge
xchg
and
pop
sub
jle
or
shr
fstp
lods
stos
dec
and
and
loopne
lds
xor
and
ins
cmc
or
clc
xchg
ja
push
mov
pusha
imul
retf
mov
repnz
scas
ret
(bad)
ins
push
cmp
loope
data16
inc
push
sub
mov
pop
out
adc
jmp
lahf
ret
std
icebp
xor
dec
pop
sub
mov
iret
mov
mov
mov
sbb
sbb
int3
and
ins
retf
lea
stos
dec
sub
jmp
shr
lahf
leave
jg
pop
cmp
loope
jae
in
fldcw
aaa
adc
mov
inc
push
leave
test
pop
js
outs
cli
mov
pop
mov
pop
inc
(bad)
rcr
xchg
pop
mov
cli
loope
ins
stos
stos
add
les
popf
xchg
repz
out
mov
xor
sbb
(bad)
stos
push
dec
fimul
jnp
div
jns
jae
add
inc
push
mov
xchg
shr
addr16
jns
test
mov
iret
shr
cmps
inc
ins
mov
and
inc
ins
cmc
repz
ret
mov
pushf
test
or
ja
mov
bound
inc
cli
push
pushf
push
inc
aad
(bad)
mov
ins
jns
fstp
cs
lds
cwde
rcr
or
scas
push
scas
scas
mul
retf
sub
fsub
in
mov
xor
movs
dec
dec
sahf
arpl
js
mov
scas
int
adc
xchg
or
sub
jle
(bad)
(bad)
cmp
es
xor
sbb
stos
push
inc
add
icebp
je
maskmovq
mul
(bad)
in
pop
and
push
addr16
jmp
jne
mov
adc
and
jb
ret
call
mov
repz
push
and
lods
sahf
pusha
pop
cmp
mov
adc
inc
je
lock
ss
dec
inc
jns
inc
pushf
fild
mov
into
cmp
shl
mov
(bad)
mov
stos
stos
jl
xlat
std
out
xor
shl
mov
xchg
ds
cmps
out
mov
fimul
(bad)
adc
sbb
lahf
pop
iret
xor
test
ss
xchg
jl
inc
leave
cld
push
jae
add
jecxz
out
jecxz
jne
jg
aas
out
mul
mov
and
test
retf
dec
push
adc
jne
jg
inc
add
mov
lds
mov
hlt
mov
movs
out
push
xor
jecxz
adc
hlt
test
adc
jns
dec
sbb
pop
mov
scas
sub
gs
loope
imul
adc
cmp
add
add
ins
sub
repz
clc
xchg
iret
jl
lahf
add
pop
jbe
repz
sbb
xchg
push
or
jbe
push
push
push
aam
xchg
mov
dec
push
aas
idiv
mov
imul
sahf
rcl
loopne
call
mov
cs
test
(bad)
push
call
push
mov
pop
dec
outs
cmp
test
or
fucomi
inc
lods
push
aaa
daa
iret
push
xchg
add
not
pmulhuw
xchg
sub
push
imul
test
or
std
fdivrp
std
inc
pop
jb
add
add
push
inc
or
add
fild
xor
dec
enter
test
jg
pop
in
inc
sub
mov
adc
sbb
and
inc
lea
pop
fimul
pop
pop
mov
sti
ja
push
nop
and
push
popa
push
imul
xor
call
(bad)
sub
int3
jmp
push
popa
xlat
inc
imul
cmc
in
adc
sahf
push
loop
rol
sub
mov
add
lock
jg
xor
sbb
pop
jnp
inc
dec
jmp
or
xor
or
popa
inc
pop
mov
mov
dec
pop
out
ins
js
js
mov
adc
test
int
in
jnp
mov
mov
cmp
out
fcom
sar
cli
sbb
push
xor
ds
jle
dec
add
pusha
cmps
and
pop
test
mov
pop
xor
int
(bad)
jmp
and
and
ja
inc
js
cmp
xchg
out
das
pop
lock
(bad)
int3
test
xor
and
xchg
iret
xchg
stos
fcom
jle
and
mov
dec
cmp
jmp
or
inc
mov
mov
loope
cmp
ins
push
ss
mov
xor
into
push
mov
xor
jl
cmps
sub
sbb
mov
pop
sub
mov
sbb
popf
mov
jg
cmps
mov
pop
shr
add
mov
fs
dec
dec
xor
jbe
fcomp
dec
in
and
add
jb
fisubr
popf
cmp
into
pop
fnsave
sub
push
mov
mov
dec
shl
sbb
into
in
arpl
aad
push
xor
mov
jns
pushf
(bad)
push
cmp
add
dec
cmp
scas
and
sbb
int3
and
fdiv
arpl
rol
sbb
pop
test
lahf
adc
sub
jg
hlt
in
mov
jp
jbe
cs
(bad)
mov
push
mov
jle
in
pop
aaa
(bad)
jge
sub
test
test
pop
movs
ret
(bad)
leave
dec
in
add
movs
mov
xchg
out
call
jbe
jp
std
dec
clc
iret
pop
out
xor
xor
div
sub
pop
scas
add
test
mov
xchg
and
inc
iret
sar
fs
es
in
das
fs
pop
push
jb
pop
sub
add
enter
movs
sahf
jbe
push
mov
cmp
imul
lock
xchg
mov
(bad)
xchg
or
movs
cmp
pop
(bad)
pop
(bad)
out
stc
rcr
lock
(bad)
adc
lahf
sub
pop
dec
xor
xor
shl
pop
and
aaa
cmp
cli
inc
stos
xchg
mov
mov
div
(bad)
cs
pop
cmp
jl
movs
push
loope
adc
mov
loop
dec
jl
add
movs
shr
mov
outs
cli
xchg
jle
adc
inc
mov
popf
mov
shr
xchg
jo
inc
jmp
or
shl
jo
iret
scas
add
popf
sub
cmp
and
xchg
xchg
pop
inc
(bad)
pop
loop
inc
inc
stos
cmps
cmp
xor
xchg
mov
cmp
fld
adc
shl
mov
lds
mov
inc
shl
inc
cmp
mov
imul
(bad)
scas
out
gs
jg
inc
jmp
ret
push
adc
mov
test
(bad)
(bad)
mov
fcomp
clc
push
adc
test
fmul
adc
frstor
or
pop
dec
shl
xor
jecxz
test
enter
loop
and
xchg
je
mov
sub
jbe
call
mov
pop
push
imul
mov
push
bound
rcl
mov
jns
loopne
cdq
and
daa
fdiv
mov
sbb
push
mov
mov
ja
stos
lods
xor
dec
ret
inc
and
xor
dec
ror
mov
retf
shr
sahf
jns
or
dec
ds
in
cmp
inc
or
test
test
adc
jno
inc
mov
sbb
outs
sub
cmp
sbb
and
test
mov
lods
xchg
(bad)
aas
fild
ja
daa
aaa
addr16
lahf
jle
and
jnp
mov
push
or
xor
pop
imul
sub
fucomi
gs
jbe
xchg
in
pop
inc
add
dec
sbb
jmp
pusha
xor
mul
or
out
cdq
sar
mov
out
ds
jae
fsubr
repz
bound
sbb
dec
cmp
es
add
mov
imul
push
pop
fisttp
pop
cmp
or
ror
gs
sbb
xchg
mov
xchg
lds
mov
ins
daa
lods
ret
and
fistp
lock
fsub
in
fild
stos
inc
sbb
mov
(bad)
retf
fxch
ins
and
leave
mov
xchg
mov
jbe
je
sahf
aam
sub
enter
or
fidiv
shl
gs
fstp
js
leave
add
leave
test
shl
nop
jecxz
add
inc
cmp
jbe
mov
lods
dec
test
mov
sbb
mov
cmc
mov
mov
pop
ss
into
scas
xchg
shr
or
popa
mov
jmp
mov
ins
imul
addr16
or
dec
pop
push
xor
push
imul
hlt
nop
push
sub
mov
or
mov
out
je
fcom
outs
stc
sbb
pop
xchg
dec
xchg
test
dec
jae
adc
xchg
cli
sbb
and
jmp
popf
repnz
dec
mov
js
pushf
xor
jmp
daa
cmp
mov
dec
cmp
xchg
shl
mov
mov
inc
rol
mov
movs
inc
xlat
add
dec
jae
sub
call
sahf
scas
ds
test
pop
mov
cli
clc
cmp
ret
jmp
outs
in
add
sbb
pusha
test
ins
add
pop
fldenv
add
aad
ret
retf
inc
loopne
retf
adc
jmp
aaa
fbstp
add
mov
aad
jno
repnz
icebp
inc
sub
and
nop
xor
enter
and
cmp
js
in
mov
fadd
xor
ja
inc
gs
push
push
xchg
mov
test
cmps
jle
mov
xchg
loopne
mov
shr
(bad)
ja
and
and
mov
xchg
pop
add
jle
mov
pop
popf
push
ret
lea
movs
jo
cmp
ss
push
movs
and
or
sub
lods
mov
mov
adc
cwde
cld
jnp
das
popf
xor
addr16
je
lods
cli
loopne
mov
(bad)
iret
adc
imul
adc
jae
cmc
mov
or
sub
call
cld
in
icebp
mov
jl
inc
fwait
rol
xchg
mov
mov
jp
xchg
cmp
and
mov
movs
sbb
mov
xchg
or
mul
add
pop
inc
arpl
rol
mov
sbb
push
(bad)
pushf
push
cld
lock
movs
call
cmp
scas
xor
imul
into
sub
cli
(bad)
nop
xor
fs
movs
inc
add
add
ins
adc
inc
xor
mov
ret
ror
pop
aam
pop
(bad)
es
cs
sbb
cmps
test
and
cmp
jbe
icebp
(bad)
sub
push
leave
add
sbb
cmp
push
xchg
loop
sub
je
outs
push
mov
dec
std
or
fdiv
sub
mov
pop
pop
add
stos
xchg
mov
movs
fbstp
adc
pop
inc
ja
adc
push
psubusw
jmp
in
call
push
stc
hlt
lods
icebp
ret
mov
out
dec
data16
lea
movs
mov
adc
test
xchg
mov
rcr
pop
out
sar
div
icebp
(bad)
ror
mov
and
pop
pop
shl
adc
dec
fcomi
retf
jno
push
jl
xor
in
lock
mov
mov
add
jp
inc
and
xchg
mov
xchg
xchg
push
xchg
mov
cmp
rol
adc
mov
retf
lods
in
dec
aas
in
fwait
scas
cdq
lods
inc
in
imul
inc
mov
inc
aad
pop
jle
les
sub
xchg
sub
mov
imul
test
call
inc
adc
repnz
or
ret
xchg
fiadd
inc
xor
mov
xchg
mov
push
adc
sbb
mov
ret
aas
test
jmp
mov
sub
ret
xlat
ja
xor
ins
retf
adc
push
dec
mov
mov
sbb
mov
cmp
hlt
jne
bound
fld
add
or
add
or
xchg
mov
rol
jo
std
loopne
inc
daa
aaa
sbb
cmp
mov
xor
sbb
out
push
xor
xchg
dec
adc
in
mov
add
mov
dec
pop
das
and
cli
mov
xor
hlt
jbe
xchg
jae
mov
cmps
and
or
sub
outs
popf
ja
mov
mov
jmp
xchg
test
push
in
(bad)
xchg
fwait
mov
sub
xlat
or
cs
push
fst
cmpxchg
lea
ds
repz
stos
adc
adc
ins
je
mov
out
mov
push
sub
pusha
and
add
jle
sub
jmp
ins
push
(bad)
sbb
mov
mov
xchg
or
mov
add
out
and
ja
inc
ficomp
dec
xchg
xor
xchg
mov
lods
mov
push
dec
popf
mov
lods
cdq
sbb
outs
mov
jae
mov
sub
jmp
cwde
(bad)
mov
arpl
xchg
test
pop
mov
xchg
jno
fucom
push
and
(bad)
outs
repnz
retf
and
aas
sbb
loope
push
call
cmp
ds
fsubrp
loopne
les
mov
das
ror
jecxz
add
dec
cli
test
mov
lods
out
addr16
aaa
rol
mov
cmps
jge
push
jmp
sbb
inc
sahf
jge
and
lahf
dec
push
pop
xor
std
pop
jg
sbb
daa
jmp
je
(bad)
iret
fwait
xlat
jmp
test
dec
fwait
sub
lds
dec
pop
sbb
mov
mov
sub
pop
mov
jp
and
inc
cdq
mov
jae
pop
ja
add
dec
test
inc
cmp
je
int3
jbe
or
stc
pop
adc
xchg
inc
push
scas
mov
cmp
shr
out
xchg
ror
mov
mov
jne
jle
test
(bad)
aas
add
and
xlat
mov
mov
jno
mov
cli
or
movs
and
cmp
out
ins
pop
or
test
mov
xchg
and
jbe
mov
dec
outs
ja
subps
dec
out
pop
dec
nop
shr
add
das
std
jns
repnz
test
dec
sbb
sbb
loop
adc
push
jnp
lahf
ins
popf
pop
pop
iret
outs
dec
or
sbb
stos
adc
adc
and
jl
cmps
xor
mov
call
in
nop
inc
and
cmc
hlt
cld
mov
and
retf
shl
retf
push
lods
jle
stos
sbb
add
adc
jp
cmp
or
addr16
jp
jmp
jp
aad
das
adc
stos
repz
stos
imul
cmp
pop
dec
push
icebp
(bad)
or
in
ds
lods
adc
xchg
cs
imul
mov
inc
jge
xor
pop
call
dec
pop
inc
xor
cmps
enter
push
enter
popf
fs
icebp
add
mov
and
repz
adc
gs
cmc
xchg
mov
push
or
sub
jnp
sub
sbb
leave
sub
push
enter
call
lods
loop
retf
and
dec
xor
sub
(bad)
jl
ja
xlat
mov
adc
ja
fisubr
fs
mov
cmc
enter
out
mov
mov
or
out
cmps
add
add
dec
xchg
jbe
call
cmc
push
mov
push
in
in
sub
sbb
cmp
test
sub
call
stos
lods
push
and
adc
std
sub
shr
mov
test
or
inc
and
sub
or
sbb
inc
xchg
cli
outs
dec
in
(bad)
(bad)
daa
movs
imul
cmps
ja
iret
mov
cmp
sbb
add
pop
cdq
xor
not
mov
jp
or
mov
das
lods
gs
mov
call
sub
ffreep
or
or
mov
jmp
mov
pop
in
xchg
ds
popa
addr16
xor
or
aas
jp
shl
je
test
cmp
retf
xor
out
mov
or
sbb
into
jg
push
ins
mov
leave
lds
pop
shl
or
data16
mov
jl
inc
xchg
dec
stos
jae
jmp
popf
stos
mov
xor
sub
jno
ret
cmp
adc
add
mul
icebp
fidiv
(bad)
mov
push
fwait
lods
fistp
jb
rcl
xor
and
jnp
mov
xor
pop
ds
inc
(bad)
sbb
or
mov
add
or
and
xchg
xor
sbb
inc
pop
daa
mov
or
pop
fld
pop
add
inc
cmps
loop
sbb
adc
and
call
xchg
ins
pop
repnz
mov
cmp
adc
xchg
shr
clc
add
jecxz
psrlq
pop
and
sub
ret
sbb
ror
xor
imul
lea
dec
movs
cmc
mov
test
sbb
push
xchg
and
add
mov
sbb
xchg
ins
aam
in
dec
dec
lahf
out
lds
or
stc
mov
stc
ret
and
test
addr16
mov
xor
lea
adc
in
sub
push
jle
push
mov
inc
out
xchg
inc
scas
test
cwde
jge
sbb
out
test
loopne
add
lea
enter
test
add
(bad)
lods
out
mov
dec
pop
stos
leave
dec
adc
fcom
and
sub
(bad)
jge
clc
imul
clc
inc
popf
jl
sbb
leave
lods
ds
jmp
out
retf
jae
imul
idiv
daa
cld
sbb
pop
arpl
dec
mov
test
ror
dec
mov
xor
scas
inc
jmp
cmps
adc
loope
js
dec
and
fsubr
hlt
repnz
iret
jno
push
and
pop
pusha
shl
ss
and
cmp
inc
(bad)
cmc
test
outs
fild
in
icebp
idiv
dec
imul
jmp
loope
add
xchg
aad
cmp
pop
cmp
ret
lods
push
std
cmp
lock
leave
or
dec
and
pop
fld
leave
and
mov
addr16
lods
xor
shl
xchg
lods
cmps
imul
push
out
and
outs
push
inc
ins
inc
add
test
daa
fdiv
xor
lock
mov
outs
add
nop
sbb
xchg
jg
ja
add
stc
je
popf
shr
repnz
xchg
xrelease
add
scas
mov
cmc
les
cmps
pop
ins
dec
mov
mov
mov
cmp
loope
jne
mov
xor
pop
ja
fsubr
xchg
xor
test
xor
jp
cwde
inc
cs
in
mov
and
sub
and
cmovb
cmp
sub
lock
pop
imul
dec
je
cmp
rol
mov
adc
repnz
jnp
stos
jge
addr16
ins
sbb
adc
push
jae
ret
iret
mov
xchg
jmp
mov
aam
inc
sbb
and
out
mov
ins
mov
push
ins
push
and
xlat
rcr
or
aas
cmp
dec
mov
sbb
mov
mov
lea
add
pop
cmps
jecxz
push
add
cmp
dec
pop
mov
mov
(bad)
xchg
push
retf
lods
iret
jg
sub
jl
movs
xchg
fs
daa
das
jae
mov
stos
push
cmp
je
inc
out
es
aas
scas
aad
lea
fldl2e
int
out
ds
push
xchg
shr
jg
stos
xchg
mov
ror
add
mov
sbb
mov
imul
add
cmp
jmp
lahf
and
cmp
mov
push
mov
shr
std
aad
(bad)
mov
jbe
not
hlt
in
mov
retf
dec
fisubr
sahf
rol
sbb
jo
sahf
add
inc
into
cmp
mov
adc
adc
or
fcmovu
adc
mov
lock
xor
add
(bad)
jae
sub
sbb
scas
imul
xchg
and
sbb
adc
sub
js
test
pop
mov
fild
cmps
mov
xchg
xchg
sar
or
mov
jmp
mov
stos
sar
outs
mov
sbb
pop
ss
(bad)
push
lock
cmps
aaa
inc
jp
in
dec
adc
push
mov
push
pop
or
js
push
repnz
cs
dec
pop
addr16
xor
pop
xor
jl
fstp
dec
or
add
(bad)
and
mov
sub
push
cmp
xchg
mov
inc
ror
jbe
test
mov
loop
mov
xor
inc
xchg
or
or
arpl
xor
dec
fmul
or
test
shl
sbb
repnz
hlt
or
sub
and
adc
shl
lea
call
addr16
aaa
stc
cs
repnz
jmp
push
pop
mov
ror
in
jbe
aaa
sbb
aad
lahf
test
lds
sar
jb
mov
ficom
or
pop
jge
fnstenv
dec
mov
adc
dec
outs
sub
push
jmp
adc
pushf
jmp
pop
sbb
pusha
or
push
mov
shl
pop
ror
jl
imul
xlat
fcomp
sub
test
push
fldln2
dec
mov
cld
mov
cmps
out
pop
adc
mov
push
int3
xchg
icebp
outs
sub
ds
push
jno
lahf
xor
outs
mov
sbb
fcmovnu
aam
sbb
popa
in
rcl
pop
pop
mov
or
or
jmp
mov
push
cmp
and
cwde
in
fstp
(bad)
hlt
fnsave
inc
inc
adc
pop
xchg
jle
or
iret
es
xchg
fsub
mov
ds
mov
call
or
jle
push
ss
xor
test
mov
xchg
in
xchg
jge
dec
lahf
fmul
mov
fld
fistp
fdivp
bound
or
push
xchg
popa
xchg
push
jl
push
cdq
sahf
sbb
add
jle
cmp
cld
mov
mov
shl
dec
push
mov
and
sub
aad
push
aad
xor
mov
cmp
inc
shl
out
cmp
pop
push
jbe
xchg
cdq
into
rcr
(bad)
mov
fdiv
push
add
mul
pop
movs
mov
scas
imul
shr
mov
add
adc
xor
or
jmp
loopne
nop
sbb
push
and
jo
cmp
mov
sub
rcl
mov
pop
enter
inc
jno
sbb
ins
ret
xor
in
(bad)
pushf
je
loopne
xchg
es
adc
mov
jns
jmp
mov
jmp
adc
or
shr
retf
scas
push
data16
xor
inc
add
xor
mov
in
lahf
mov
and
dec
xor
jb
lods
hlt
push
popf
sbb
cmps
gs
cwde
(bad)
aam
push
adc
mov
add
leave
sti
fnstsw
mov
xlat
adc
mov
xor
pop
jmp
mov
lahf
inc
hlt
mov
and
dec
call
dec
addr16
jle
test
enter
popa
pop
fwait
aad
loope
add
mov
pop
test
xor
sbb
pop
sbb
je
daa
dec
or
cmp
fmul
les
dec
add
outs
outs
cmp
adc
cwde
sub
jae
inc
mov
and
mov
rol
pop
in
fidiv
or
lea
sbb
loopne
retf
push
fadd
sbb
mov
xlat
jg
and
pop
std
jo
inc
pop
mov
xchg
mov
jbe
scas
cld
div
xor
stos
inc
push
jmp
push
repz
mov
add
dec
ret
mov
pop
fdivr
cmp
(bad)
inc
test
mov
push
outs
pop
test
sti
stc
xchg
push
mov
fld
in
xchg
repz
mov
xor
push
add
cmovne
xchg
mov
xor
xchg
and
rol
mov
xchg
push
or
movs
or
inc
jnp
in
pop
dec
push
dec
xor
jae
add
dec
shl
ret
xor
out
xchg
icebp
lods
fst
retf
add
cmc
adc
pusha
test
inc
or
int
rol
pop
adc
in
outs
or
inc
mov
push
fdiv
xchg
rcl
cmc
popf
jg
mov
mov
std
dec
push
out
pop
mov
stc
repnz
ret
jl
jmp
mov
add
dec
test
inc
jo
jle
clc
mov
aad
gs
and
mov
mov
xor
and
add
cmp
fcmovnbe
mov
std
push
xchg
mov
sbb
cdq
retf
xlat
add
mov
ret
pop
jns
sahf
mov
sti
push
xchg
mov
dec
loope
ja
mov
sbb
ins
stos
push
inc
xor
loope
mov
and
push
ror
pusha
add
mov
mov
or
popa
imul
inc
sbb
stos
retf
adc
imul
dec
dec
mov
test
add
sbb
pop
nop
ins
out
int
inc
mul
fisttp
mov
jmp
loopne
popa
stos
sbb
or
mov
xchg
pop
sub
fnstsw
ins
popa
mov
out
pop
cmp
or
pop
clc
(bad)
or
sbb
sub
into
sub
ss
in
mov
cmp
aad
push
cld
and
inc
cmp
dec
xor
and
int
aaa
lahf
dec
test
pop
je
repz
mov
into
cdq
dec
xchg
icebp
sbb
out
dec
inc
sub
sub
push
inc
hlt
jp
(bad)
jne
xor
jg
ins
ins
jne
jmp
push
retf
pop
jmp
adc
out
xlat
mov
mov
pop
push
ret
std
xor
test
and
add
scas
push
xlat
(bad)
sbb
inc
dec
test
mov
push
stos
jne
icebp
scas
mov
jae
arpl
xor
sub
sub
enter
addr16
xchg
push
stc
cmp
out
jmp
adc
repz
pop
xor
sub
cmps
xor
and
jmp
xor
cmp
add
push
jmp
(bad)
into
xchg
jecxz
cwde
mov
neg
call
mov
mov
(bad)
lods
mov
jge
cld
retf
pop
into
mov
mov
mov
mov
bound
ret
ficomp
mov
lock
push
mov
ror
fmul
imul
loopne
clc
cmps
pop
and
cwde
add
iret
adc
cwde
(bad)
jmp
dec
jo
je
adc
aaa
sbb
and
cmps
adc
shr
sbb
pop
icebp
enter
adc
inc
les
fld
inc
cmc
fisttp
enter
sbb
in
fiadd
and
fisttp
fld
xchg
mov
xchg
fisttp
les
sbb
jo
sbb
ret
sub
xor
lea
shr
inc
push
(bad)
aam
cmp
xor
test
scas
iret
es
push
push
push
sbb
ret
pop
push
aas
js
loop
sub
fdivr
xchg
sbb
movs
mov
inc
lods
or
std
jmp
or
push
and
pusha
(bad)
ins
repz
cwde
mov
fwait
out
cs
xchg
jne
test
outs
push
arpl
mov
xchg
mov
pop
pop
sbb
push
push
or
cld
in
and
inc
imul
push
cmp
jb
push
cwde
xchg
cdq
xchg
lea
outs
pop
and
cmp
out
test
and
enter
(bad)
fcomp
push
xor
sub
xchg
jmp
test
xchg
mov
(bad)
sub
mov
jno
push
mov
and
inc
push
push
mov
aaa
add
cmps
mov
les
adc
mov
arpl
movs
sub
jg
inc
cwde
sbb
mov
push
scas
mov
or
in
ja
xchg
sub
loope
add
fimul
call
inc
and
mov
adc
fdivr
into
ins
pop
mov
sbb
push
jae
adc
mov
lods
mov
pop
dec
ficomp
ins
inc
mov
loopne
ja
mov
aas
nop
jno
sub
mov
aam
xor
js
pop
rep
jae
lar
adc
push
imul
xchg
adc
dec
jo
test
sahf
out
fs
rol
int
cmp
add
pop
xchg
inc
inc
fcmovnbe
fstp
inc
sti
mov
sbb
sti
aas
xor
cwde
aam
jae
mov
std
inc
iret
add
arpl
adc
shr
and
in
retf
popa
leave
sub
add
sbb
and
test
mov
mov
mov
inc
jg
test
hlt
adc
jg
jecxz
mov
in
xor
dec
pop
jmp
stc
adc
mov
push
repz
or
ins
push
jg
test
sbb
xchg
adc
adc
(bad)
mov
outs
aas
xor
aas
pop
push
jg
add
ins
int3
mov
mov
int
inc
xchg
pusha
inc
sti
gs
inc
cld
out
movs
mov
cmc
sub
dec
sub
dec
je
pushf
push
add
or
int3
sub
mov
cmc
push
inc
popf
jne
or
push
jp
in
pop
adc
add
pop
dec
sub
test
sbb
ror
(bad)
push
mov
je
push
pop
xor
pop
gs
mov
and
idiv
test
js
mov
aad
lods
inc
push
or
cmp
ret
loop
pop
mov
mov
out
shl
pop
movs
mov
loope
and
scas
dec
fdiv
push
call
les
mov
lods
adc
fsubr
inc
jl
inc
pop
xchg
pop
in
xor
inc
ror
stos
pop
retf
addr16
cmp
dec
loop
lds
call
stos
dec
pop
adc
sbb
sbb
and
mov
aad
cs
ins
mov
int3
mov
cmps
retf
jne
sbb
mov
test
fucomi
leave
mov
push
movs
mov
dec
iret
xchg
jo
clc
mov
mov
fidivr
add
or
cmps
lahf
sar
add
imul
out
mov
test
iret
jmp
fs
inc
add
jecxz
fild
neg
and
add
and
add
dec
inc
push
dec
jp
xlat
mov
movs
fild
and
mov
test
div
popa
jmp
test
ins
jno
dec
and
shr
jecxz
mov
sbb
scas
and
cmp
jecxz
retf
enter
or
nop
jmp
jecxz
addr16
popa
cdq
xchg
ret
mov
push
mul
pop
inc
or
js
inc
nop
mov
mov
pop
(bad)
jno
mov
lods
jecxz
sub
test
cmp
loop
pop
stos
push
stos
cmp
mov
popf
inc
aad
adc
imul
(bad)
outs
or
enter
cli
in
mov
aaa
or
out
xchg
xchg
mov
mov
lea
outs
aad
int3
int
xchg
or
adc
dec
jmp
icebp
ficom
pop
sbb
gs
cmc
rcl
and
addr16
or
sbb
pop
(bad)
dec
adc
and
mov
hlt
loope
cmp
mov
cld
pop
fwait
push
js
popa
mov
stos
(bad)
(bad)
fisubr
mov
pop
mov
cmp
(bad)
jae
scas
shl
jge
xchg
xor
xor
cmps
and
mov
jmp
rcl
mov
jbe
loopne
or
out
xor
mov
cwde
adc
or
push
aaa
dec
fisubr
ror
and
adc
mov
test
add
sub
(bad)
out
cmp
lods
dec
pop
in
mov
movs
ds
jecxz
cmp
loop
fldl2e
ficomp
xchg
stos
movs
lea
xchg
pop
and
push
loopne
inc
fdivr
(bad)
fcmovnb
jmp
mov
sub
test
js
mov
cwde
test
hlt
mov
push
mov
aaa
push
sub
outs
(bad)
(bad)
(bad)
and
out
out
xor
adc
mov
mov
rcl
(bad)
and
lahf
and
(bad)
sbb
xor
fld
pop
sti
arpl
and
jg
push
into
lods
sbb
or
inc
mov
push
inc
mov
es
pop
xlat
outs
sbb
cs
dec
inc
cdq
in
cmp
mov
pop
sbb
cmc
cmps
cmp
pop
mov
pushf
(bad)
cs
test
pop
xor
adc
out
retf
sbb
je
xchg
sbb
jae
mov
(bad)
retf
out
adc
mov
aam
ret
adc
les
add
xchg
mov
push
adc
push
outs
ss
out
ins
fldcw
test
jle
jno
mov
xor
call
xor
cmc
popf
fcom
mov
xchg
pop
push
nop
call
push
(bad)
fwait
sbb
inc
cs
jae
pop
fbld
pop
ins
call
dec
aaa
sahf
popf
xlat
rcr
int3
mov
das
sar
js
sahf
and
xor
ret
mov
shl
sub
pop
jae
push
pop
cwde
mov
sahf
int3
js
out
dec
add
add
bound
pop
aad
ficom
adc
xchg
push
mov
fcmove
push
out
cmps
dec
xor
mov
mov
adc
push
cs
aas
dec
add
into
cmp
add
jg
sahf
aad
fadd
aaa
(bad)
push
ins
fcmovnu
movs
out
js
test
mov
jno
xchg
(bad)
cli
or
es
pusha
test
sbb
mov
and
cdq
pop
pushf
rcr
ds
inc
xor
jnp
hlt
jne
dec
es
imul
aad
lock
or
hlt
xchg
push
mov
jne
adc
cmp
(bad)
jnp
adc
xor
sub
mov
jo
mov
sbb
test
ror
cs
sahf
dec
mov
xchg
sub
movs
adc
jge
adc
mov
ror
fnstenv
jg
inc
adc
jno
and
fwait
icebp
sub
shl
xor
(bad)
xchg
cmps
loope
push
lock
or
sub
or
jnp
push
in
mov
repz
fstp
dec
sub
int3
aaa
lds
xchg
es
inc
dec
inc
std
dec
les
sub
(bad)
js
jns
mov
xchg
iret
dec
dec
and
scas
call
xchg
xchg
or
std
test
adc
pop
out
aaa
fst
leave
mov
test
or
cmp
inc
xchg
add
adc
sbb
fidiv
or
sahf
lock
(bad)
cmps
jb
pushf
jle
jbe
pop
das
cdq
or
dec
or
xor
mov
mov
jnp
scas
push
cmp
scas
fnstsw
ret
in
xchg
in
mov
lahf
retf
pop
cli
dec
xchg
rol
cmp
pop
aaa
sbb
jb
or
push
daa
mov
pop
addr16
add
(bad)
mov
add
jnp
xchg
or
inc
inc
pop
addr16
aas
pop
push
ret
adc
lock
cmp
es
fnstsw
gs
ss
xchg
(bad)
sbb
xor
mov
and
mov
cmp
(bad)
sbb
mov
fs
push
fs
lds
loope
pop
call
imul
sub
add
dec
movs
out
mov
fild
imul
add
lea
adc
sub
shl
sbb
and
push
jne
arpl
sbb
outs
mov
leave
imul
(bad)
dec
add
(bad)
int3
xchg
jb
mov
in
mov
mov
in
(bad)
stc
xor
mov
hlt
ins
add
xor
xchg
mov
mov
cmp
mov
cmp
jbe
ins
sar
sub
mov
rcr
test
ror
stc
jae
addr16
cmc
jmp
outs
mov
pop
mov
mov
int
inc
xchg
aad
mov
pop
lds
and
div
pop
mov
add
mov
pop
jp
gs
xchg
mov
jge
lea
push
sub
test
or
mov
loope
xchg
movs
outs
pusha
aaa
pop
jb
adc
or
fcomp
pop
ins
jb
out
fld
jnp
bound
lods
sbb
mov
or
les
sbb
sbb
ins
les
add
ds
xchg
inc
mov
test
jnp
into
div
push
jl
mov
test
nop
jmp
pop
popf
(bad)
pop
or
rcl
xchg
mov
retf
mov
out
mov
popa
fwait
and
xor
jmp
or
inc
lahf
mov
in
daa
aam
push
or
loopne
fidiv
cld
cmc
dec
push
pop
and
into
mov
dec
rcl
cmp
and
fcom
adc
sub
int
xor
sbb
ja
popf
mov
jl
fwait
adc
in
push
lods
xchg
fwait
or
loope
pusha
xor
jmp
mov
and
pop
jmp
xchg
mov
test
fidivr
xor
dec
mov
inc
fisttp
les
mov
sbb
mov
into
test
sbb
cmp
aaa
sbb
pusha
rcl
push
add
loopne
mov
push
arpl
mov
dec
loop
in
ficom
adc
movs
mov
fstp
aam
cmps
pusha
repnz
mov
add
pop
lock
sub
xor
sub
pop
cwde
inc
add
push
adc
neg
sbb
shl
push
iret
adc
popa
(bad)
call
hlt
sub
add
and
int3
add
sti
in
sub
fdivr
jo
pop
sbb
sub
cmps
push
popf
jge
std
ret
pusha
setno
mov
push
sahf
cmp
(bad)
loop
setae
loopne
dec
lods
jmp
dec
xchg
je
mov
lea
scas
gs
sbb
sub
jbe
and
dec
lea
jae
lock
hlt
push
ror
popa
mov
pop
pusha
dec
xchg
jge
pop
xchg
sbb
and
push
imul
dec
mov
test
mov
pusha
test
mov
stos
retf
popa
iret
jle
pop
in
sbb
sub
fucom
in
jg
in
sti
mov
les
aaa
sub
fs
and
jno
jmp
je
or
push
hlt
mov
push
push
inc
mov
pop
data16
lds
push
fcmovne
cli
dec
lds
je
xchg
add
and
std
lea
push
pushf
add
je
pusha
jnp
leave
add
rol
lds
out
(bad)
frstor
xor
dec
and
jbe
test
pusha
push
std
scas
loop
cmc
fwait
pusha
loope
mov
cmps
lods
retf
xor
adc
daa
rcr
cmps
cmp
xchg
ror
int3
cmp
out
sbb
dec
rcr
int3
push
(bad)
pop
into
jns
aaa
bound
inc
out
data16
clc
jo
cmp
mov
mov
sub
and
jecxz
js
mov
punpckhwd
jbe
pop
xor
and
or
into
adc
jbe
jl
xor
rcl
xchg
js
sub
fld
xchg
sub
sbb
inc
(bad)
iret
xchg
xchg
fdiv
dec
pop
stos
lds
pop
or
jb
dec
popf
ja
imul
mov
out
mov
dec
mov
jle
inc
and
sbb
mov
scas
nop
dec
scas
add
adc
sbb
jmp
fsubr
test
mov
out
and
push
stc
mov
cwde
cmp
in
pop
jmp
jge
ja
into
pusha
mov
fimul
or
sub
mov
mov
clc
sbb
jl
(bad)
inc
mov
loop
outs
fldz
inc
data16
or
inc
scas
sub
pop
stos
repz
adc
ja
xor
push
dec
rol
pop
call
dec
dec
mov
jl
repnz
add
rcr
mov
addr16
inc
mov
cmp
jmp
push
pop
inc
in
mov
jnp
mov
iret
std
inc
jmp
nop
inc
xchg
sbb
jl
dec
inc
cs
aas
dec
mov
jl
inc
pop
cmp
cmps
mov
les
popf
pop
mov
cwde
mov
mov
mov
cli
add
fsubr
sbb
and
scas
mov
mov
cmc
xlat
jno
stc
test
jb
and
ror
bound
fild
sar
sub
cmp
xor
sar
xor
inc
jo
mov
mov
scas
lea
fld
add
lds
jno
mov
push
cwde
jmp
addr16
call
xchg
mov
sub
add
in
xor
mov
push
lods
mov
ret
mov
das
(bad)
mov
and
dec
xchg
push
fimul
mov
leave
(bad)
xchg
lods
or
vmovntps
jbe
cmps
icebp
nop
fcomp
(bad)
cli
(bad)
clc
imul
pop
mov
sub
into
sub
mov
icebp
push
aam
pop
sti
sub
jl
mov
sub
jno
std
popa
(bad)
and
jns
sub
cmps
inc
je
mov
push
cmp
(bad)
jge
xchg
push
jo
cs
mov
or
and
jecxz
jg
jno
sub
ss
fsub
cmp
fist
ins
out
fidiv
fstp
xor
ins
mov
lock
adc
aam
mov
ins
jle
and
ins
or
and
(bad)
sbb
xor
cwde
stos
jl
pop
adc
mov
adc
sub
je
repnz
inc
dec
pop
ss
pop
inc
sti
mov
add
cld
call
xchg
cmp
push
hlt
jmp
fisub
dec
in
icebp
in
jno
fiadd
test
and
mov
lods
mov
jge
pusha
retf
mov
and
(bad)
mov
nop
mov
inc
das
mov
sbb
sbb
adc
ss
sub
jmp
sub
mov
aam
xlat
imul
mov
cwde
mov
sti
add
jmp
or
mov
cmp
(bad)
cmc
add
and
xchg
fidivr
sbb
nop
xchg
pop
(bad)
cs
dec
in
xor
sahf
jnp
xor
pop
pop
fild
and
dec
pop
mov
mov
jb
dec
aas
cmp
pop
and
mov
jmp
mov
sbb
and
std
cmp
in
vpsubb
or
leave
into
jne
ret
cs
and
jbe
jl
mov
stc
in
cli
out
jo
push
cmp
imul
lea
or
and
dec
shl
add
sbb
lock
out
sub
adc
les
call
pop
dec
arpl
fwait
sub
shr
sbb
stos
inc
pop
cmp
mov
repz
ret
dec
jne
jge
imul
inc
fwait
lds
bt
xchg
in
dec
xchg
inc
retf
ja
test
xchg
xor
out
or
stos
fcomp
pop
and
dec
xor
pop
(bad)
xor
(bad)
jle
sbb
(bad)
int3
adc
push
xchg
push
adc
adc
or
out
cld
or
loope
(bad)
idiv
adc
lods
call
sbb
cmp
cmps
and
inc
mov
inc
jne
add
cmp
jb
mov
mov
jmp
repz
push
js
int3
ss
mov
xchg
loopne
cs
es
lahf
xchg
imul
or
dec
lds
ror
sbb
dec
push
and
inc
or
cdq
mov
inc
rcr
xchg
push
adc
icebp
out
push
test
add
mov
std
add
mov
cmps
push
mov
add
add
mov
test
dec
out
pop
(bad)
xchg
add
addr16
movs
fisubr
(bad)
xor
adc
call
dec
add
mov
jle
xchg
jle
mov
je
jno
mov
pop
sub
xor
movs
dec
in
pop
in
ret
imul
xor
cmp
ffree
push
pushf
cmp
pop
jno
out
dec
jae
js
mov
adc
inc
inc
in
pushf
mov
mov
(bad)
xlat
xor
sbb
mov
dec
in
std
imul
retf
pop
sbb
sub
lea
jp
add
pop
or
sbb
dec
arpl
retf
pmulhw
jge
xor
(bad)
mov
pusha
sbb
add
mov
or
jnp
cmp
mov
hlt
xchg
hlt
call
jae
or
dec
or
cmps
scas
fs
out
scas
add
(bad)
cmp
mov
add
loope
and
mov
add
push
add
rcr
movs
pop
xor
pop
loope
or
sub
std
sbb
push
test
(bad)
xchg
fs
pop
fwait
shl
mov
loop
pop
mov
cdq
dec
(bad)
jecxz
xor
sbb
push
mov
jo
pop
cmp
dec
test
jle
adc
dec
dec
in
cld
ret
lea
xlat
dec
lahf
fadd
iret
mov
cmp
cmc
daa
dec
add
pop
fcom
pop
sbb
fwait
ds
pop
jecxz
out
mov
scas
pop
loopne
push
xchg
mov
jp
push
and
retf
(bad)
jmp
and
cmp
jo
out
jp
fwait
push
inc
mov
push
or
test
aam
xor
inc
mov
ins
aas
icebp
mov
inc
not
xor
or
xchg
pop
ret
mov
or
rcl
mov
retf
jns
xor
inc
neg
or
in
cmp
cdq
jle
jo
test
ins
mov
fstp
aas
and
dec
mov
lods
rol
dec
call
pop
movs
xchg
lds
clc
cmp
(bad)
jnp
push
out
ins
arpl
dec
out
repnz
mov
sbb
not
jns
cmp
inc
dec
mov
add
(bad)
leave
xor
jg
adc
cmc
jmp
stos
div
jmp
mov
je
std
dec
add
and
sahf
push
dec
scas
pusha
xchg
jb
xchg
add
je
adc
lods
fidiv
jle
ds
test
cmp
sbb
fdiv
out
test
movs
mov
hlt
xchg
(bad)
mov
inc
scas
or
pop
fimul
and
iret
mov
cmp
icebp
nop
xlat
push
loop
xchg
xchg
sti
jbe
or
call
bnd
sub
jnp
clc
lahf
mov
push
lock
inc
into
iret
psubsw
mov
loopne
test
repnz
adc
cld
ret
push
call
jae
pop
in
mov
jl
mov
jle
dec
xchg
pop
sbb
xchg
cmps
sub
inc
in
adc
mov
fisttp
ror
call
push
fs
cmps
push
sbb
pop
aas
lea
jmp
scas
lds
mov
pop
mov
dec
cli
rcl
pop
dec
inc
cmp
xor
aam
sbb
je
or
mov
fist
cmp
fmul
pop
cmp
push
adc
push
ret
cmp
ffreep
sbb
add
fdiv
mov
mov
xchg
arpl
sbb
jg
cmp
add
aaa
lea
mov
loop
mov
adc
ss
xchg
xchg
or
xor
test
xlat
nop
cli
fisttp
and
into
mov
jge
sahf
cld
xor
in
imul
popa
sub
add
jae
xor
cwde
push
add
jg
cmp
imul
stc
cmp
into
pop
push
jmp
mov
std
out
pop
sub
or
and
aad
or
sbb
mov
mov
(bad)
fucomp
xchg
iret
lds
fs
cwde
(bad)
and
test
xchg
int3
xlat
rol
push
pop
popa
jge
aaa
lods
or
mov
jb
scas
rol
sar
dec
jecxz
mov
push
jbe
dec
or
in
call
in
(bad)
rcr
frstor
and
shl
les
ins
or
rcl
sbb
sbb
xchg
inc
pop
mov
add
mov
mov
adc
jnp
adc
push
outs
enter
mov
fcmovb
xchg
adc
fnsave
jbe
mov
jecxz
ins
enter
sbb
or
es
lds
mov
jle
dec
add
fcmovb
or
hlt
adc
nop
dec
xchg
push
sub
ins
loopne
pop
mov
sub
mov
cs
test
popa
push
pushf
fistp
lods
jl
inc
mov
push
popf
add
push
out
dec
(bad)
xor
js
fwait
pop
xor
dec
lods
xchg
mov
rcl
outs
mov
movs
mov
pop
fsub
jecxz
fldlg2
aad
sbb
movs
dec
dec
dec
and
xchg
and
scas
rol
inc
shr
mov
test
and
adc
call
cmp
sbb
cmp
sbb
push
mov
push
mov
cmp
pop
mov
fdiv
mov
mov
(bad)
mov
stos
ror
cmp
inc
jg
mov
fist
jne
mov
mov
and
mov
pop
and
shr
adc
movs
mov
gs
int
jmp
jb
pop
xchg
fild
xor
frstor
sahf
jmp
scas
aad
jae
pushf
icebp
push
loope
std
call
movs
cmp
arpl
cmp
pusha
arpl
not
sub
ds
pop
xor
push
cmp
(bad)
std
sbb
and
loop
jge
movs
je
pop
out
jle
sbb
add
cmp
rcr
xor
cs
neg
pop
xchg
mov
test
xor
sbb
mov
pop
in
cld
sub
inc
fwait
mov
dec
js
sub
jae
sub
xor
lds
retf
cwde
sbb
inc
add
and
jmp
or
loopne
mov
les
and
mov
in
adc
inc
call
ror
jno
jl
jmp
ins
add
sbb
cmp
cdq
in
scas
movs
bound
jg
outs
cmps
aad
jge
or
popf
mov
gs
xor
lahf
addr16
test
sar
jae
jg
or
imul
and
ins
sub
dec
jmp
add
sub
outs
push
aad
retf
jno
in
cmps
mov
repz
sub
test
rcr
push
sub
push
xchg
adc
imul
xchg
sub
bound
cmc
sbb
mov
mov
push
push
xchg
(bad)
(bad)
fwait
push
ds
jno
imul
addr16
inc
mov
arpl
jbe
mov
fs
cmp
and
leave
in
stc
cmp
pop
fiadd
(bad)
jmp
inc
add
bound
outs
xor
adc
shr
push
dec
popa
loop
push
jecxz
sbb
cwde
icebp
jno
lock
cmp
rcr
pop
stc
repz
repz
dec
ins
xor
push
sub
mov
bound
adc
mov
xor
jbe
pusha
shl
jo
jge
pop
stos
cmp
and
pop
aaa
add
test
pop
and
retf
lods
nop
inc
(bad)
(bad)
push
or
jmp
push
push
sbb
cmp
cmp
mov
jp
clc
jmp
dec
(bad)
jb
jmp
out
sub
(bad)
pop
xchg
inc
xor
mov
jno
dec
cli
nop/reserved
mov
dec
add
dec
nop
adc
jne
push
mov
ror
sub
mov
fwait
js
adc
(bad)
xor
mov
sbb
(bad)
sbb
or
sbb
cmps
call
and
jle
cmp
ret
test
jg
add
mov
mov
call
inc
mov
out
sbb
mov
push
adc
lods
and
enter
lods
ds
test
pop
sar
jmp
icebp
es
ror
dec
out
stos
call
xor
push
mov
je
(bad)
ins
xor
jno
aad
pop
adc
and
jl
test
ins
xor
scas
mov
pop
sbb
movs
xor
xor
mov
das
mov
adc
call
(bad)
in
push
mov
aas
push
xchg
mov
mov
push
pop
jecxz
jmp
jg
les
clc
lock
sub
push
es
pusha
inc
xchg
lahf
dec
xor
pop
aas
push
mov
aam
fisub
pop
mov
xchg
cmps
jmp
js
xor
mov
or
imul
xchg
enter
or
mov
inc
cmps
shl
push
or
stos
xchg
stc
dec
sbb
(bad)
pop
inc
dec
dec
lahf
cmps
divps
mov
mov
and
out
cmp
daa
ret
push
cwde
cwde
xor
test
dec
cmp
lods
stc
addr16
mov
or
ret
adc
(bad)
icebp
mov
mov
push
push
popa
push
sbb
cli
sbb
mov
fstp
jmp
or
adc
mov
add
dec
movs
stc
imul
jo
cmp
sub
mov
bound
and
and
movs
dec
mov
out
push
into
cdq
loope
(bad)
cmc
dec
sub
neg
or
sahf
pop
push
cmp
call
xchg
retf
adc
retf
adc
ss
ret
fcmovnu
and
ss
push
dec
cmp
shr
or
xor
mov
stos
pop
popf
push
in
pop
or
and
repz
rcr
mov
and
jp
arpl
sub
fistp
shl
cmp
add
ins
mov
or
cmp
mov
cmc
cmp
xchg
push
(bad)
lock
stos
cmps
cmp
mov
add
mov
dec
push
cli
and
arpl
pop
dec
lahf
xlat
test
pop
in
xchg
imul
sub
and
ret
push
arpl
cmps
fsubr
cli
cld
and
and
cli
xchg
push
out
stc
push
mov
inc
out
add
fidivr
mov
test
xchg
dec
ret
dec
adc
es
and
jg
or
sub
inc
mov
add
scas
dec
mov
inc
outs
jmp
jmp
or
xlat
jb
or
mov
(bad)
loope
test
cmp
jne
jge
sub
xor
push
into
mov
mov
repnz
jo
mov
test
or
in
or
(bad)
xchg
dec
xor
mov
enter
daa
ficomp
cmp
gs
pop
xchg
sar
and
xor
mov
jp
jg
bound
loopne
out
aam
or
dec
fnstsw
mov
mov
or
arpl
outs
pop
inc
stc
dec
xor
adc
mov
xor
xor
jp
enter
gs
push
mov
cmp
sub
loop
icebp
fisub
pop
(bad)
ja
pop
lock
inc
mov
push
test
or
enter
(bad)
iret
mov
jmp
shl
stos
retf
dec
mov
mov
jnp
adc
mov
test
sbb
jmp
push
(bad)
loop
lock
in
xlat
or
cld
pushf
(bad)
mov
leave
cmp
inc
jae
fstp
nop
pop
mov
sbb
jo
imul
xchg
rcr
pop
outs
fist
das
(bad)
gs
sti
sti
rcl
(bad)
cmp
or
aad
inc
mov
or
mov
or
sti
movhps
push
(bad)
fwait
xchg
pusha
lods
call
sbb
pop
dec
int
xor
push
adc
pushf
push
or
cmc
mov
jecxz
mov
out
test
clc
jecxz
ror
mov
in
jae
hlt
or
je
jl
push
cmps
mov
out
and
hlt
pop
mov
loope
jecxz
popf
jb
mov
inc
cmp
adc
and
cmp
movs
cs
inc
test
mov
jno
xchg
cmp
push
push
fs
jo
xlat
and
add
dec
mov
add
mov
jns
xchg
pop
sbb
xlat
push
xchg
mov
stc
mov
add
cmp
fdivr
add
pop
(bad)
leave
mov
movs
nop
and
add
add
pop
inc
adc
xlat
loope
cld
dec
xchg
hlt
mul
and
idiv
mov
aaa
ret
addr16
cmps
cmp
inc
cmc
inc
scas
mov
push
sti
jns
push
aam
dec
hlt
and
sbb
cmps
sahf
ins
jbe
inc
jmp
sub
sub
dec
leave
add
pop
dec
mov
adc
inc
imul
(bad)
hlt
xchg
out
adc
lods
xchg
ds
ja
movs
int3
test
int3
aad
cmp
outs
fst
or
repnz
xlat
enter
pop
daa
in
mov
xchg
push
mov
xchg
rcr
xor
jmp
in
aas
movs
test
pushf
sar
or
call
in
mov
jbe
mov
scas
fucomp
sub
push
mov
std
int
push
in
jp
xchg
jl
stc
mov
popf
jb
enter
xor
lock
cli
retf
pop
mov
pusha
aam
rol
gs
loopne
(bad)
pop
jge
push
and
sahf
xchg
in
sti
xchg
pop
sub
sahf
scas
jo
and
in
fbstp
repnz
mov
movs
mov
shr
jno
fsubr
hlt
test
push
mov
jne
xor
stos
dec
in
mov
and
outs
dec
add
lds
mov
mov
adc
xchg
fcom
mov
adc
dec
jbe
push
stc
repnz
cmp
fdivr
jmp
lock
sbb
movs
sub
cmc
fwait
arpl
scas
and
mov
adc
clc
neg
mov
cdq
sar
ins
mov
dec
int
xor
and
(bad)
arpl
enter
jp
pop
inc
sbb
ins
nop
dec
pop
enter
push
test
jne
in
mov
add
mov
cs
jmp
sub
stc
and
pushf
fisub
outs
(bad)
cld
shr
mov
adc
push
fsub
ss
loop
rcl
cmps
std
sub
push
mov
inc
enter
jne
gs
inc
jne
in
loope
jnp
mov
mov
out
in
cmps
pop
xchg
test
je
stos
inc
xor
cmp
xchg
dec
cmps
pushf
xchg
or
mov
mov
xor
jb
imul
call
or
sub
imul
imul
stos
dec
scas
clc
inc
or
jo
mov
inc
mov
arpl
push
xchg
xor
mov
push
loop
sbb
inc
retf
push
loope
pop
movs
jnp
inc
dec
std
add
int3
fadd
mov
push
repz
call
pop
lods
dec
add
mov
cdq
and
cld
sub
xchg
sub
mov
sub
jl
xlat
sub
push
stos
jge
ins
or
test
js
js
push
xchg
dec
(bad)
or
mov
xor
pop
cli
jno
sbb
mov
pushf
push
inc
repz
or
out
cmp
mov
shl
ret
pop
lock
(bad)
mov
call
bound
das
lock
jno
adc
xlat
jge
aas
pop
xchg
xchg
mov
(bad)
pusha
dec
nop
jnp
repz
jg
add
dec
push
outs
std
lods
jnp
adc
(bad)
call
pushf
push
xor
mov
sbb
sbb
scas
dec
adc
jbe
repz
das
bts
daa
jmp
icebp
mov
stc
inc
mov
mov
arpl
frstor
ins
sub
repz
or
xchg
cwde
cmps
mov
cli
or
or
add
std
ins
mov
(bad)
mov
fcomp
mov
pop
scas
and
pop
(bad)
add
(bad)
push
scas
imul
sbb
add
shl
repz
inc
sbb
ins
xchg
sbb
in
and
sbb
mov
sbb
pop
pop
retf
int
dec
les
ins
xchg
jnp
bndstx
pop
sahf
mov
dec
ret
retf
fld
pusha
mov
data16
ret
and
push
movs
lods
pop
push
mov
jbe
pushf
cmps
mov
jno
add
pop
js
adc
xchg
sbb
dec
test
adc
and
leave
mov
adc
sub
or
adc
arpl
mov
xor
and
lds
mov
shl
push
xchg
cdq
js
sti
retf
and
or
mov
or
out
retf
ja
and
js
pop
adc
imul
jmp
retf
adc
mov
jno
jnp
inc
dec
or
sub
xchg
pop
(bad)
adc
hlt
push
(bad)
enter
fdiv
test
mov
das
dec
ins
sbb
inc
out
(bad)
aad
lds
std
or
adc
adc
lea
and
iret
dec
dec
sbb
cs
int3
push
and
aad
dec
push
ss
and
inc
in
inc
xor
sbb
cs
out
dec
push
and
retf
(bad)
fnsave
data16
hlt
rcr
push
stos
xlat
push
inc
or
ja
pop
mov
icebp
(bad)
adc
sbb
pop
jbe
out
test
mov
repnz
cmp
mov
mov
or
mov
lahf
xchg
and
popa
push
cmp
mov
mov
cmp
or
or
mov
cmps
add
inc
test
xchg
jecxz
ror
push
test
xchg
push
call
pushf
add
scas
test
(bad)
or
cld
mov
dec
retf
in
adc
xor
or
pop
int3
aas
inc
mov
pop
mov
jmp
cmps
push
movs
xor
mov
ds
sub
scas
dec
dec
and
das
cmc
int3
push
retf
test
jl
inc
mov
loop
mov
retf
push
xchg
es
cmp
or
jle
sbb
ins
repz
pop
jge
sub
sub
mov
std
inc
adc
or
mov
outs
rcl
xchg
push
mov
(bad)
sbb
sbb
sbb
cli
cmp
dec
scas
pop
inc
pop
cmps
jmp
jp
(bad)
push
(bad)
icebp
add
mov
mov
lock
adc
mov
jmp
cmp
add
mov
mov
pop
shr
mov
test
sub
cs
jp
out
cmp
adc
mov
dec
push
or
cmp
icebp
(bad)
(bad)
or
jae
call
jg
fisubr
or
pop
ja
addr16
cwde
stos
int3
inc
sbb
shl
and
int3
xor
(bad)
hlt
add
add
in
clc
jb
dec
ror
inc
ja
push
scas
aas
xchg
mov
(bad)
hlt
mov
clc
(bad)
repz
mov
out
in
std
xchg
fadd
and
cmps
sbb
call
mov
retf
inc
xor
out
psubsb
push
pop
out
pushf
mov
jmp
in
int
mov
jo
mov
cmp
or
(bad)
movaps
loop
punpckhwd
out
adc
aas
mov
lock
xlat
int3
popa
cmp
fs
sar
test
cmc
push
xchg
dec
aad
in
call
cmc
mov
mov
iret
popa
mov
aam
test
mov
ds
inc
mov
arpl
mov
sub
(bad)
(bad)
repz
fisub
call
jmp
es
push
stos
fild
xchg
scas
xchg
retf
rol
imul
imul
jns
jne
ja
ins
pop
repz
retf
mov
loop
xchg
dec
mov
into
(bad)
int
push
mov
xor
fstp
pop
call
and
aas
xor
arpl
dec
addr16
sub
add
mov
fisttp
ret
mov
dec
pop
sbb
add
retf
call
jne
loope
jg
loop
fsubr
rcl
or
or
add
pop
lods
mov
or
adc
adc
aaa
add
inc
loope
sbb
mov
jg
dec
adc
fld
test
fmul
push
fsub
adc
and
shl
pop
push
jl
mov
clc
lahf
xor
jle
outs
iret
jns
ja
stos
mov
and
cmp
xchg
ja
test
and
inc
fsub
stc
in
jp
iret
mov
xchg
mov
mov
mov
ret
popf
inc
retf
popf
cmc
sbb
jp
stc
push
xchg
mov
jle
xor
xchg
xchg
fs
gs
and
mov
xchg
sar
ficomp
dec
cs
pop
fnstenv
lds
xlat
mov
add
add
pop
mov
int
xchg
push
pop
cwde
add
cmp
adc
mov
icebp
dec
pop
inc
ds
xchg
ret
and
dec
or
cld
aam
lahf
ins
fmul
inc
sub
add
cmps
sbb
mov
imul
jno
push
or
repz
jae
retf
or
int3
in
das
pop
inc
shl
mov
test
or
adc
cli
xlat
pop
jmp
add
mov
dec
or
push
xchg
sbb
scas
inc
cwde
or
inc
push
xchg
sahf
(bad)
inc
sub
add
fild
adc
jne
push
xor
sbb
xor
pop
sbb
retf
aam
jp
xor
popa
rcr
loope
movs
mov
jecxz
bound
push
mov
shr
stc
into
adc
dec
repnz
mov
add
dec
imul
fxch
repz
cdq
jb
push
xchg
inc
add
sahf
scas
mov
ret
cmp
mov
scas
adc
jmp
sbb
cmp
xchg
jnp
enter
pop
mov
dec
int
icebp
pop
mov
or
mov
jmp
xlat
pushf
mov
psubb
pushf
mov
add
pop
test
pusha
jae
out
cmps
xchg
jbe
pop
jmp
movs
movs
xchg
fbstp
out
cmp
aad
and
popf
push
push
mov
(bad)
je
lds
cmp
stos
outs
cwde
loopne
loopne
sbb
cmp
jge
popa
push
or
mov
daa
ret
iret
mov
(bad)
fsubr
xchg
add
out
popf
movs
sub
fild
mov
or
mov
push
cmp
and
(bad)
or
lahf
mov
mov
mov
aas
pop
lock
sbb
loop
cmp
into
icebp
gs
(bad)
(bad)
push
inc
xchg
mov
add
retf
mov
repnz
inc
popa
pop
pop
pushf
aas
call
test
jmp
cmove
neg
mov
dec
scas
loopne
retf
lock
icebp
call
or
dec
sar
xor
sub
lds
aaa
dec
inc
leave
dec
into
sub
push
mov
jge
mov
jmp
test
popa
push
hlt
gs
mov
cmps
test
push
aas
cmp
and
jmp
das
push
test
movs
inc
xor
ins
adc
mov
aas
and
pop
scas
and
imul
pop
or
stos
xchg
sub
leave
ins
pop
je
sbb
into
retf
call
pop
jno
out
clc
(bad)
mov
push
xchg
das
push
or
xchg
scas
jmp
mov
mov
jbe
imul
cli
mov
cdq
(bad)
sar
add
daa
ins
ja
jg
hlt
jnp
dec
cmp
pop
nop
sar
lea
inc
cmp
in
retf
bnd
dec
neg
push
cmp
add
sub
sbb
pushf
dec
jno
jo
push
into
xor
inc
mov
xor
jg
pop
pop
ins
mov
adc
xchg
sub
and
mov
jb
and
xor
sbb
rol
pop
push
mov
fxtract
(bad)
fadd
mov
mov
xor
push
popf
in
push
mov
mov
dec
loope
push
pushf
jge
xor
sub
in
in
fimul
retf
dec
mov
cmp
xlat
and
hlt
mov
and
int
sbb
outs
cwde
pop
mov
pop
scas
dec
test
sahf
ins
hlt
jb
sar
jg
in
ret
cdq
retf
jne
and
push
aam
cs
lods
sbb
mov
mov
jle
adc
lods
(bad)
xor
sub
or
rcr
jecxz
mov
pop
test
pusha
movs
mov
pusha
jle
push
push
adc
xor
and
cmp
scas
dec
xor
mov
xchg
call
fwait
pop
pop
ss
stos
ret
ret
jl
test
push
(bad)
cmp
dec
mov
in
inc
nop
and
jl
xor
mov
mov
jno
mov
jmp
pusha
(bad)
rcr
or
and
xor
shr
pop
pop
sub
nop
std
fisub
mov
lea
arpl
retf
ja
xchg
inc
mov
mov
jnp
jne
jno
stos
dec
sti
jp
cmp
adc
jl
aam
mov
call
fcomp
loop
lods
mov
xchg
pop
imul
mov
loop
add
jecxz
pop
or
pop
shl
lock
std
and
lds
loope
mov
cs
pop
addr16
ror
fs
add
dec
push
add
jnp
xchg
lods
sbb
pop
outs
push
mov
or
adc
into
scas
cmp
retf
cmp
mov
pop
jo
das
fild
sbb
cmp
xchg
enter
pop
(bad)
sti
add
retf
fidivr
ror
push
mov
add
fbstp
inc
jmp
mov
dec
(bad)
int3
dec
mov
inc
jb
xchg
and
outs
jb
(bad)
mov
sti
shl
xor
ficom
jno
dec
sbb
cmc
xchg
daa
pop
imul
or
out
mov
stc
in
mov
and
pop
sub
pop
cmp
push
adc
and
xchg
(bad)
jl
and
aaa
dec
xor
mov
(bad)
adc
mov
retf
xchg
and
test
ror
retf
mov
push
inc
fisubr
adc
add
push
pop
cmps
push
stc
push
imul
shl
push
jbe
jg
xchg
and
push
movs
and
fwait
rol
sbb
pop
or
stos
jp
sbb
in
fild
cld
loopne
or
clc
mov
fs
pop
hlt
mov
ror
add
mov
hlt
adc
inc
add
sub
pushf
pusha
jbe
mov
test
sub
lods
and
cmp
stos
mov
jp
xchg
fsub
loop
mov
xchg
in
mov
push
icebp
mov
push
or
dec
neg
mov
shl
out
adc
cmp
or
push
xchg
imul
mov
in
cmp
ret
xor
sub
fxch
jecxz
data16
lea
sub
hlt
imul
nop
sar
js
cmp
fadd
rcl
(bad)
sub
cdq
sub
xchg
push
and
sbb
repnz
sub
pop
ins
sar
inc
or
inc
cmps
stc
nop
xchg
xchg
adc
push
pop
pop
jecxz
and
fstp
ret
out
sub
jnp
add
jb
rcr
call
ret
dec
aam
shr
adc
cdq
jp
pop
push
nop
mov
push
mov
inc
repz
xor
cmp
jns
fld
mov
arpl
mov
jg
stos
sbb
ins
xor
mov
mov
pushf
mov
data16
push
fcom
shl
push
xor
pop
or
repnz
xlat
sub
jp
jbe
repnz
clc
mov
mov
inc
dec
adc
repnz
inc
aam
or
cmp
(bad)
jp
outs
stos
sub
inc
aaa
push
ret
adc
sub
cdq
fld
xchg
mov
(bad)
jno
ret
pop
push
ret
jb
xchg
jb
dec
frstor
push
jg
mov
mov
sub
adc
adc
or
nop
cmp
jo
sub
fisttp
xchg
inc
out
pop
cmp
jne
mov
jmp
inc
cmp
stos
lds
add
fidivr
(bad)
outs
jo
cmp
pop
jmp
xchg
mov
scas
icebp
fst
sub
mov
pop
repz
mov
in
or
xlat
push
push
ror
lea
sbb
cmps
dec
pop
and
add
adc
dec
int
mov
cmp
ja
dec
push
pop
mov
inc
out
out
ja
and
xchg
fmul
repz
ja
pop
aam
dec
fst
sahf
popa
pop
ins
mov
inc
jl
icebp
mov
in
xchg
lea
or
add
xchg
push
lahf
jne
into
sbb
adc
ds
jle
sub
loop
stos
ins
or
xor
sbb
jne
dec
jno
push
in
jg
hlt
int
lock
sub
stos
outs
dec
mov
and
pop
pop
or
lock
sar
js
and
push
and
cmp
xlat
inc
sub
add
xor
pop
pop
xchg
rcl
xor
cmc
or
cmps
xlat
mov
adc
adc
fcmovb
test
in
ror
mov
pop
pop
and
test
mov
repz
fild
or
shl
in
imul
jnp
cwde
loop
xor
lods
xor
sbb
push
pop
mov
inc
inc
push
lds
nop
pushf
push
add
sbb
mov
fldcw
sbb
push
out
jno
mov
movs
jg
pop
inc
xor
dec
mov
fistp
out
dec
inc
fldcw
xchg
jns
out
sub
mov
jle
shr
pop
add
add
aad
test
int3
es
stos
neg
clc
jmp
push
fst
sbb
adc
dec
gs
mov
mov
sbb
jo
shl
mov
mov
scas
inc
mov
lds
in
fbstp
cwde
cs
jmp
ins
icebp
inc
test
sti
das
cmp
push
mov
test
adc
jmp
inc
cmps
loope
push
mov
mov
or
loopne
jbe
inc
mov
das
mov
dec
inc
mov
in
aam
mov
pop
jge
fdivr
cmp
stos
out
das
pop
mov
push
jmp
lock
push
into
sbb
or
daa
dec
je
mov
jno
paddb
imul
sahf
add
test
imul
or
push
cmp
hlt
in
leave
stos
fimul
fdivr
mov
sbb
adc
popa
mov
and
mov
jmp
cmp
mov
mov
cwde
xor
(bad)
repz
or
rcl
cmps
mov
xor
out
mov
idiv
fistp
mov
push
(bad)
add
xchg
mov
jo
inc
out
out
shr
mov
or
popf
xlat
out
pop
adc
or
pop
inc
(bad)
lock
popf
fdivp
lock
inc
stc
push
jbe
mov
mov
push
push
adc
lods
(bad)
stc
movs
mov
dec
pop
popf
and
mov
out
mov
fisttp
scas
mov
cmp
push
jno
mov
into
sub
sub
fst
sub
inc
loope
scas
mov
retf
cmp
fwait
cmp
scas
and
mov
mov
cmp
shl
xor
dec
xor
pop
in
in
fnstsw
das
sbb
out
mov
cmps
xchg
iret
and
inc
fidivr
out
into
ret
pop
push
into
lods
xchg
fisttp
ins
pop
xor
aad
rol
lods
jg
frstor
aaa
fisttp
push
retf
xchg
cdq
ds
loope
cmp
out
popa
pusha
stos
fld
mov
aaa
and
sub
adc
push
sbb
into
and
mov
jno
dec
leave
dec
jns
push
mov
adc
sahf
push
movs
outs
in
shl
sub
(bad)
cdq
xor
pop
rcr
pop
imul
test
xchg
(bad)
and
push
or
push
or
mov
dec
xor
sub
movs
gs
inc
fiadd
jp
outs
bound
mov
push
repz
mov
adc
mov
rcr
enter
adc
into
mov
enter
mov
mov
jl
jmp
(bad)
dec
push
cmp
adc
dec
inc
addr16
push
ins
lods
sbb
add
and
std
(bad)
push
outs
ins
jo
popa
mov
loop
in
call
fs
icebp
push
mov
fdivr
les
push
sbb
adc
shl
adc
ja
mov
push
mov
pop
inc
and
mov
lds
add
xchg
iret
inc
add
movs
iret
jo
cmp
and
adc
mov
mov
push
pop
add
mov
cmps
lods
xchg
xchg
mov
push
repnz
cmp
and
retf
(bad)
fldcw
push
xor
(bad)
out
out
test
mov
and
push
jmp
and
and
jp
sbb
mov
inc
sub
into
cs
icebp
dec
(bad)
scas
(bad)
retf
in
outs
test
fbld
inc
and
mov
call
enter
push
jnp
xchg
lea
imul
arpl
sub
lods
pop
je
fadd
jns
add
and
sub
mov
cmp
fcmovnu
push
(bad)
(bad)
iret
stos
out
lods
mov
lock
push
stos
add
test
(bad)
ror
push
icebp
xchg
ret
or
ret
push
jl
mov
mov
mov
in
in
or
dec
add
sbb
adc
dec
and
mov
mov
push
ds
ss
pause
in
push
iret
jle
lahf
lea
dec
jecxz
add
cmp
jl
xchg
and
and
sub
add
push
mov
les
jg
aam
mov
lds
mov
push
or
shl
mov
cdq
xchg
xchg
xchg
xchg
push
dec
add
fldenv
iret
mov
(bad)
ror
jmp
cwde
mov
add
test
or
and
dec
fwait
sub
add
scas
pusha
ror
mov
imul
daa
aas
push
test
es
jle
or
out
jns
jno
adc
sbb
push
test
inc
jp
inc
adc
xor
clc
jns
scas
mov
scas
xor
pop
stos
inc
in
fistp
xor
sbb
test
fisttp
cmp
and
pop
scas
dec
mov
inc
in
jno
push
(bad)
in
neg
and
aam
push
test
mov
pop
dec
test
fisub
shl
loope
fnstcw
loope
cdq
sbb
mulps
in
js
push
inc
aam
pop
mov
xchg
fst
dec
lods
dec
sar
call
test
das
ret
xchg
dec
mov
mov
iret
popa
rcl
std
xor
popf
mov
xor
jg
test
stos
xchg
lods
cmps
jge
jp
repnz
das
cmps
mov
inc
inc
cmp
fwait
mov
outs
push
jae
mov
popf
dec
cmps
sub
push
push
jl
mov
out
adc
mov
imul
iret
outs
pop
sub
cmp
(bad)
jmp
mov
jae
add
ds
jp
neg
xchg
xchg
mov
cwde
xor
stos
in
or
or
hlt
mov
ss
stc
mov
fwait
in
imul
arpl
pop
mov
std
xchg
dec
inc
and
les
mov
jg
mov
lea
das
cmc
inc
sub
push
test
lds
jmp
nop
cdq
pop
out
je
mov
pop
add
push
xchg
test
or
(bad)
jbe
or
sub
jecxz
jne
push
fs
sbb
les
xor
push
iret
dec
cmps
hlt
cs
(bad)
(bad)
ds
movs
rcl
mov
push
retf
sbb
jb
sbb
jo
sar
jmp
jmp
inc
(bad)
cdq
mov
xor
test
mov
xor
mov
imul
sub
dec
push
out
mov
sbb
arpl
(bad)
sti
(bad)
les
je
and
sub
cmp
retf
cmp
fnstenv
js
sbb
adc
add
xor
pop
push
mov
jge
inc
iret
jnp
sbb
call
addr16
add
mov
ret
dec
adc
idiv
and
scas
xchg
es
lods
and
cs
test
push
je
std
add
sahf
mov
pop
jno
lods
popf
(bad)
cmps
mov
mov
dec
repz
adc
mov
push
adc
and
mov
rcl
ss
sti
pop
and
inc
xchg
adc
test
mov
adc
mov
or
xor
mov
inc
push
and
pop
cmp
ret
cmp
push
or
jbe
push
jge
jbe
rcl
push
mov
and
(bad)
xchg
cmp
add
xchg
sbb
push
data16
add
dec
neg
jecxz
call
mov
fisttp
iret
ret
jae
jnp
mov
arpl
out
dec
daa
jb
cmp
setnp
jns
xor
ins
leave
cs
mov
je
sub
mov
jmp
pop
out
xor
outs
xchg
add
inc
sbb
(bad)
fnstcw
in
stc
repnz
imul
add
mov
adc
inc
inc
inc
fs
es
mov
fst
sbb
cwde
mov
adc
shl
out
fcom
fmul
mov
lahf
pop
dec
mov
cs
mov
mov
mul
stc
in
jnp
xor
mov
push
and
in
sbb
ftst
es
xor
sub
dec
xor
mov
and
and
mov
push
mov
arpl
shl
sahf
dec
push
jmp
pop
fidivr
int
lock
xchg
shl
xor
aam
out
cld
sbb
jmp
es
push
sub
adc
in
dec
hlt
leave
mov
popf
mov
dec
jl
mov
pop
out
sub
lock
adc
popa
cmp
inc
clc
mov
xor
or
push
aaa
ret
push
clc
and
repz
adc
xor
sbb
jle
nop
daa
xor
or
(bad)
xchg
in
cmp
ins
repz
push
jl
push
movs
add
pusha
mov
dec
scas
sub
jno
add
push
sub
nop
sahf
sti
and
fstp
and
xlat
(bad)
push
adc
sar
cmp
push
inc
jmp
out
cwde
dec
push
leave
adc
push
inc
mov
test
pop
movs
div
test
xor
fwait
dec
repnz
lock
dec
cli
sub
aad
shr
push
push
out
pop
dec
add
pushf
ins
ret
pop
xchg
mov
fld
pop
and
or
xor
add
cmp
xor
xchg
shl
icebp
les
div
into
push
or
jns
jge
mov
jmp
jle
mov
push
sbb
or
push
leave
xor
aaa
mov
lea
gs
pop
cld
xchg
mov
les
cmp
out
aaa
mov
loopne
push
movs
jl
call
les
adc
inc
xor
xor
push
scas
out
add
bound
rcl
pop
xor
fistp
gs
aas
and
inc
jl
mov
jns
out
dec
gs
mov
lods
and
mov
add
or
aam
sub
push
(bad)
fisub
pop
jmp
push
dec
js
in
push
(bad)
xor
sub
mov
(bad)
iret
cmp
repz
jno
loope
or
and
repnz
jle
repnz
repz
stos
mov
jae
sub
or
sbb
fs
cmp
test
clc
xor
das
paddsw
jae
push
add
jnp
sub
mov
xchg
stos
arpl
mov
lods
data16
stc
xchg
jmp
and
les
sub
cmp
mov
aad
jns
inc
out
push
push
adc
clc
and
xchg
iret
mov
pop
int
and
inc
push
ficomp
(bad)
cmp
movs
aam
sbb
inc
jecxz
xchg
aam
mov
adc
pop
ins
add
jno
addr16
dec
cmps
or
cmp
xchg
mov
clc
retf
outs
dec
and
in
dec
mov
shl
jne
addr16
mov
rol
jge
leave
fcom
jne
call
sub
fidiv
push
mov
outs
mov
mov
div
aaa
dec
cli
imul
ficomp
repz
push
jmp
or
inc
icebp
push
inc
sub
add
mov
sbb
ds
mov
gs
jge
pop
js
dec
xchg
in
jmp
clc
xchg
movs
arpl
push
lock
push
jne
popf
(bad)
aaa
loopne
xor
(bad)
ins
cmc
and
in
fistp
jo
es
add
jmp
ja
push
stos
or
dec
cmp
mov
mov
push
fs
push
mov
cmp
ss
mov
ins
ja
xchg
inc
cwde
or
xor
lods
lds
mov
mov
fwait
dec
inc
cmps
push
cmps
lahf
add
push
in
dec
adc
ins
sub
ret
push
stos
push
or
jg
test
stc
rol
adc
and
inc
xchg
and
mov
jmp
fnstcw
dec
jmp
mov
and
xor
shl
sar
adc
stos
ds
lds
mov
sub
iret
es
push
pushf
jae
lods
aaa
je
add
xor
test
retf
and
(bad)
mov
add
inc
into
add
adc
jno
add
jno
jb
adc
mov
clc
out
adc
cmp
(bad)
in
rcr
and
popa
retf
sahf
aas
call
xor
push
call
mov
pop
xchg
mov
lods
cwde
adc
ins
xor
mov
or
pop
sbb
(bad)
push
dec
xor
mov
adc
cmc
es
mov
outs
and
mov
cmp
pop
inc
clc
mov
in
mov
fst
or
ficomp
or
mov
mov
les
mov
stos
dec
test
mov
aam
mov
pop
out
ret
inc
ins
fldenv
pop
out
push
fs
xchg
mov
in
mov
adc
pop
sbb
sub
xchg
pop
jg
aad
imul
stc
xor
outs
div
(bad)
pop
int
add
shl
outs
mov
fadd
pop
pop
dec
nop
fs
jo
int3
call
scas
addr16
and
popa
loop
mov
jg
xor
fcom
inc
add
call
cs
mov
bound
jnp
sbb
adc
sub
aad
popf
add
pop
(bad)
jmp
mov
add
loopne
jp
mov
lock
add
addr16
imul
dec
fnstsw
stos
cmp
or
push
adc
mov
enter
mov
inc
dec
sbb
cld
mov
add
cmp
repz
jae
ret
inc
in
pushf
(bad)
adc
imul
(bad)
jne
xor
std
repz
(bad)
test
lods
stos
mov
cmp
xlat
rcr
adc
xor
aam
jbe
sub
test
(bad)
xor
xlat
mov
mov
stos
adc
xchg
iret
gs
push
xchg
fwait
lea
fs
xor
(bad)
pop
and
ja
sub
mov
(bad)
cld
in
int3
fldcw
dec
out
data16
out
daa
xchg
mov
fbld
ret
push
jbe
mov
push
imul
adc
xchg
loopne
xchg
xchg
adc
sar
ds
sbb
aaa
ds
ds
jmp
cwde
fcom
loop
gs
lea
jp
push
div
pop
mov
in
mov
push
(bad)
mov
scas
xchg
(bad)
aam
test
lods
jno
in
mov
or
cdq
imul
cmc
jmp
mov
mov
fsub
hlt
lds
into
mov
xchg
jbe
mov
xor
cmp
and
aaa
loopne
mov
outs
jle
mov
mul
(bad)
sar
jne
aaa
adc
es
popf
and
in
imul
lods
pusha
push
jno
add
jge
out
hlt
mov
(bad)
lock
or
pop
call
push
push
loop
fwait
stos
fadd
fild
xchg
shl
dec
and
lock
or
cld
cmps
adc
inc
jne
add
je
push
and
out
ret
xchg
sub
cmp
je
fbld
mov
xlat
mov
cs
cmps
cmc
aad
jns
fs
movsx
and
mov
lea
mov
cld
ins
xor
and
aas
add
rcr
sar
pop
add
daa
mov
out
mul
mov
or
repnz
adc
stos
add
mov
fmul
cmps
call
(bad)
or
or
iret
push
mov
imul
cmc
imul
push
fidiv
ds
jae
push
xor
cmc
aam
(bad)
adc
fnsave
mov
and
and
js
jge
sar
and
inc
xor
pop
sahf
mov
xlat
mov
sahf
cmc
xchg
inc
cdq
sbb
mov
inc
rcl
shr
lods
cld
cmps
outs
or
and
repnz
lods
adc
fisttp
jns
dec
cld
fucomp
sbb
xlat
clc
scas
leave
xor
aad
push
mov
jl
hlt
xor
icebp
mov
pushf
cmps
sub
pop
mov
xor
imul
loop
jecxz
pop
ss
cli
push
lahf
inc
and
jg
out
xchg
mov
inc
(bad)
sub
rcr
pusha
out
lea
loop
push
and
jo
sti
push
pusha
pop
dec
lds
pop
mov
fcomp
mov
push
movs
jae
inc
mov
cwde
mov
and
and
jns
cmc
dec
sub
mov
imul
adc
daa
cmp
push
pop
dec
xchg
jge
lea
inc
adc
popf
lahf
stc
or
sub
fld
dec
ret
ret
(bad)
mov
xor
and
push
dec
rol
adc
into
out
push
xchg
pop
inc
(bad)
lods
mov
mov
push
aas
or
cmc
mov
cld
sub
pusha
test
cdq
pop
push
cmp
sub
jmp
mov
call
bound
ins
mov
and
and
add
add
pop
in
int
loopne
mov
inc
cmps
outs
and
xor
jg
jns
fcom
es
pop
or
xor
xchg
xor
inc
push
fcomp
pop
outs
add
cmp
xlat
lods
adc
jg
call
and
repnz
sbb
or
or
fisttp
sbb
add
leave
stos
fsub
push
push
popa
int3
stos
test
add
into
iret
test
cmp
cs
mov
add
mov
adc
cmp
lahf
sahf
push
or
cmc
lock
scas
mov
cld
stc
jo
aas
inc
movs
pop
add
jmp
les
or
adc
push
stc
fmul
icebp
imul
add
pop
push
cmc
xchg
test
scas
aam
pop
aam
pop
mov
nop
push
mov
shl
lods
add
jl
mov
jle
aam
inc
sti
mov
out
mov
xor
xor
mov
ret
sbb
xchg
inc
gs
lods
test
adc
add
add
mov
dec
arpl
mov
mov
mov
xor
jmp
hlt
mov
jle
popa
out
pop
xor
loop
or
push
xor
mov
adc
(bad)
int3
add
fisub
shl
cmp
(bad)
mov
stos
jmp
pop
out
cmp
xchg
test
into
scas
inc
movs
and
test
repz
retf
mov
pop
jnp
aas
xor
fadd
(bad)
cli
aas
or
dec
xchg
pop
cmc
daa
mov
xlat
jno
in
push
jge
inc
movs
dec
std
js
sbb
test
cmp
jbe
shr
cmp
mov
enter
jnp
add
outs
cmp
outs
enter
mov
pop
and
out
mul
mov
(bad)
inc
outs
xor
clc
call
imul
rcl
pop
and
aas
out
xor
push
shl
mov
test
retf
mov
repz
jnp
cmp
into
adc
leave
pop
das
cs
int3
adc
push
push
ss
lahf
xchg
lods
xchg
stc
(bad)
hlt
sub
push
pop
sbb
sub
scas
fnstenv
ins
std
les
inc
int3
xchg
addr16
mov
call
pop
inc
push
cli
sub
mov
leave
int
jae
pop
add
daa
and
xchg
jle
xchg
and
rcl
jp
(bad)
test
(bad)
ret
cmc
pop
sbb
ret
jl
xchg
call
ss
mov
mov
mov
dec
add
inc
xor
pop
and
imul
sahf
sub
adc
ja
je
and
test
xor
out
outs
push
sbb
pop
or
add
dec
call
(bad)
and
sahf
leave
cmp
rcl
inc
mov
add
mov
jp
adc
enter
xor
add
pushf
mov
mov
in
js
fs
(bad)
push
aaa
(bad)
call
mov
add
push
mov
add
(bad)
jnp
mov
mov
inc
scas
mov
stos
push
ror
push
fist
lock
jp
daa
adc
mov
or
iret
sub
or
push
jl
add
adc
and
pop
cmp
or
rol
dec
xor
repz
hlt
or
imul
enter
cmp
cwde
mov
ficom
push
into
(bad)
fwait
add
adc
push
xchg
and
enter
and
cmp
xchg
push
loop
sti
push
and
sbb
(bad)
xchg
sub
cmps
push
jno
xlat
in
mov
cmp
arpl
adc
add
ds
dec
cmc
and
shl
rcl
(bad)
fsubr
stos
mov
jnp
pop
test
ret
cmp
dec
mov
mov
loope
jp
cmp
(bad)
fsubp
je
sbb
add
pushf
mov
rep
and
pop
and
xchg
stos
push
cmps
mov
cli
clc
mov
mov
scas
sahf
in
jp
dec
push
mov
ret
ins
push
pop
loope
pop
push
adc
test
ror
mov
in
inc
js
mov
inc
bound
fsubr
sub
(bad)
in
mov
pusha
jne
out
int3
cmps
dec
gs
int
popa
adc
cmp
adc
jmp
xchg
repz
dec
mov
push
jo
repnz
cmp
bound
iret
or
dec
jns
out
lock
ret
cmps
mov
xchg
shl
mov
adc
cmps
lods
jns
dec
xchg
mov
hlt
lea
inc
mov
sbb
push
cmc
lea
xor
movs
stos
cmps
cmps
pop
mov
retf
xchg
adc
pop
(bad)
sub
shl
xchg
lea
lods
addr16
sub
push
xchg
or
call
xchg
or
(bad)
pop
sub
push
cmp
sbb
xchg
mov
pop
fstp
scas
pop
outs
pop
pop
mov
data16
mov
mov
(bad)
(bad)
adc
sbb
retf
stc
push
jo
mov
adc
std
fs
adc
in
in
adc
add
or
mov
stc
stos
scas
or
(bad)
xchg
fcmovbe
sbb
scas
sub
push
mov
ja
sbb
xchg
ror
scas
out
das
cmp
int3
xchg
sbb
dec
stos
cmp
pop
inc
dec
mov
xchg
ds
ret
mov
sbb
aaa
rol
dec
inc
pop
xlat
inc
and
loope
fiadd
xor
je
or
cs
mov
(bad)
adc
ficomp
shr
daa
dec
adc
or
fs
sbb
mov
sub
dec
test
jbe
adc
xchg
mov
mov
mov
add
leave
fbld
jl
xor
pop
ficomp
div
or
in
bound
xchg
adc
pop
jae
xor
stos
mov
test
pop
and
pop
inc
in
adc
jne
dec
mov
fdivr
not
lods
adc
jmp
rol
jnp
movs
inc
inc
pop
jecxz
mov
lahf
test
adc
loope
pop
adc
imul
and
sub
push
pop
ss
stos
pop
lock
add
scas
lods
frndint
pop
xor
call
or
xor
cmp
sbb
es
add
out
shl
repnz
add
mov
ja
std
movs
pop
adc
mov
sbb
push
cwde
inc
adc
in
sub
jns
push
mov
cli
mov
xchg
or
aad
lahf
repnz
cmp
jge
out
in
loop
mov
dec
or
stos
sub
popf
test
addr16
dec
out
push
cmp
into
or
or
xchg
mov
sub
push
push
aam
mov
or
push
mov
test
enter
dec
or
inc
dec
and
xchg
cdq
aas
fcmovnu
sbb
int3
dec
clc
loope
push
sbb
adc
jg
xchg
lea
jo
inc
pop
mov
test
dec
push
xor
mov
std
xchg
cli
in
xor
mov
ret
call
fist
dec
test
or
test
lds
(bad)
int
test
jb
sub
in
lods
das
cmp
fmul
or
cdq
sar
fdivr
jg
jmp
jne
cwde
test
out
clc
adc
int
push
movs
xchg
loop
loopne
push
jnp
sbb
sbb
or
lds
test
and
adc
inc
fld
mov
push
xlat
xchg
and
in
sub
xchg
cmp
xor
cmps
into
push
adc
add
lods
sub
loop
int3
add
daa
sar
cli
and
xor
mov
les
xor
jmp
jne
and
mov
mov
push
push
push
jns
mov
pop
adc
fs
std
jnp
bound
or
fidivr
fisub
or
add
out
adc
sbb
jbe
out
dec
push
push
or
jge
out
mov
or
outs
loopne
or
jmp
xchg
xor
push
pop
mov
mov
repz
cs
lods
mov
add
mov
push
out
mov
mov
push
jge
pop
movs
push
and
and
cmc
sti
mov
xor
nop
fnstenv
jb
pop
int
mov
jno
fdivrp
add
iret
sub
lds
jmp
popa
lds
add
scas
jbe
call
xchg
or
outs
jp
dec
clc
mov
leave
cli
mov
inc
xor
mov
sti
dec
push
sbb
cmps
fistp
push
adc
and
pop
in
fwait
xchg
in
sub
xor
mov
scas
jg
outs
scas
xchg
call
or
lea
add
fcom
rol
xor
cmp
xchg
leave
sub
repz
cmps
inc
adc
pop
pusha
scas
mov
or
inc
add
cmp
jmp
mov
and
or
xchg
and
xchg
mov
xor
and
data16
cld
fcom
and
shr
test
mov
cli
mov
mov
pushf
mov
jp
mov
lods
fsubr
jmp
mov
jns
xchg
inc
adc
mov
cmp
arpl
lods
test
fist
add
mov
adc
fwait
sbb
dec
cmps
call
scas
mov
dec
add
xchg
mov
je
js
sbb
cwde
rcl
xor
sbb
or
or
fst
jmp
xchg
(bad)
repz
inc
and
dec
xlat
sub
test
mov
inc
and
and
pop
lock
jp
out
pop
mov
fwait
mov
inc
xor
inc
retf
leave
mov
inc
push
jmp
jmp
jmp
inc
in
das
adc
or
mov
jmp
je
imul
push
test
add
pushf
pushw
in
or
adc
scas
call
dec
in
(bad)
sbb
out
out
jne
cmp
jnp
ins
xor
mov
inc
sub
ja
xchg
dec
mov
test
movs
xor
gs
out
mov
rcl
pop
enter
dec
aad
mov
clc
fwait
jns
xor
dec
inc
jmp
mov
jb
out
(bad)
dec
sahf
stos
jl
inc
outs
or
pop
or
sub
scas
xor
push
imul
push
add
mov
jb
mov
jg
mov
dec
retf
lock
sahf
inc
adc
mov
mov
test
inc
cmp
cdq
and
adc
out
jl
mov
jge
imul
cmp
or
cmp
jmp
pop
adc
popa
ds
jns
push
add
and
imul
jo
dec
push
jecxz
bound
call
movs
test
pop
and
shr
repz
push
push
jno
adc
out
sar
sbb
xchg
xchg
int
sub
jle
add
xchg
pop
outs
push
fsubr
jmp
in
outs
icebp
mov
xor
jle
popa
pop
fdivr
div
fs
shl
ficomp
cmps
add
stc
scas
pop
inc
jl
daa
fcmovb
stos
add
shl
jmp
cmps
div
xor
sbb
mov
jb
push
push
mov
loopne
aaa
out
in
stc
aam
fs
xor
pop
xor
push
fistp
add
loopne
jg
mov
dec
adc
xor
mov
push
sub
mov
adc
ficomp
daa
jb
cwde
dec
jmp
mov
aas
pop
call
jmp
push
mov
out
pop
sbb
cmp
cmps
data16
pop
pop
lock
sub
and
(bad)
les
clc
add
out
push
dec
mov
xor
stos
stc
xchg
fdivr
fimul
adc
shl
push
fwait
ror
push
ret
aaa
push
fwait
and
bound
sbb
jbe
mov
scas
adc
das
xor
cwde
jp
jns
xor
mov
fstp
jle
fistp
inc
call
add
test
inc
and
test
cmp
stos
mov
out
pop
xchg
mov
loopne
bound
dec
pop
and
fiadd
inc
add
mov
jne
mov
ins
(bad)
cdq
jns
inc
and
cli
sub
xor
js
mov
mov
dec
fcmovb
movq
dec
mov
loopne
mov
lahf
pop
sub
shl
mov
inc
xchg
gs
repz
jg
mov
and
jmp
inc
push
ins
popa
sub
adc
sbb
cmp
cmp
cmp
mov
mov
arpl
call
sbb
mov
push
mov
jmp
mov
fild
mov
into
pop
inc
and
mov
mov
into
std
retf
hlt
jmp
fs
add
fwait
(bad)
int
xor
mov
stos
arpl
cmps
xchg
mov
inc
push
mov
and
in
cld
sub
das
sub
sub
mov
xor
sbb
fldenv
sbb
or
stos
nop
ds
aad
es
jl
or
or
add
pop
hlt
repnz
into
pop
std
sbb
cmc
jle
cmp
nop
into
or
cdq
xchg
mov
pushf
add
sub
(bad)
mov
out
add
fiadd
push
ret
mov
xlat
hlt
cmp
mov
rol
mov
push
cld
sbb
lock
xchg
aas
pushf
iret
and
mov
adc
mov
test
sub
sti
mov
(bad)
mov
jmp
jmp
fdiv
and
mov
jbe
mul
aad
sub
mov
xchg
mov
ret
mov
xchg
pop
mov
jle
push
mov
mov
fild
fs
mov
mov
std
es
or
out
bound
iret
inc
sbb
ins
mov
jnp
sti
sbb
lock
jl
retf
lea
dec
std
les
inc
test
(bad)
and
lea
xchg
inc
mov
(bad)
mov
mov
pop
in
push
retf
in
or
or
test
dec
enter
jmp
xchg
fstp
adc
push
es
aas
push
cli
push
push
ss
mov
xchg
xchg
rdtsc
jmp
cmp
jle
xor
ficom
jmp
ficom
mov
sbb
dec
push
jo
and
aam
adc
pminsw
sahf
mov
iret
xchg
push
aaa
xchg
sti
into
mov
lods
scas
cmp
inc
push
mov
mov
fnsave
idiv
rcl
ins
out
mov
add
rcr
inc
loopne
ds
rcr
imul
cld
xchg
ret
js
jo
retf
mov
xchg
mov
movs
xor
(bad)
movs
cmp
xchg
add
mov
push
xor
adc
sbb
sbb
das
cld
pop
push
test
sub
imul
mov
inc
cmc
inc
xor
cmp
cmc
add
retf
jno
or
shl
adc
rcr
jle
idiv
mov
jns
jbe
mov
loope
push
aam
xor
xchg
ror
mov
cmp
xlat
lock
out
out
jge
add
sub
mov
ror
xchg
sub
inc
sbb
pop
mov
mov
jbe
cmp
cmps
out
mov
cmp
mov
out
adc
movs
pop
sbb
sar
xor
daa
cmps
cmp
xchg
sub
in
jge
xor
pop
gs
mov
jmp
push
cmp
push
shl
call
jbe
in
lahf
mov
jmp
cmp
push
dec
ret
xchg
dec
hlt
dec
sub
jmp
mov
inc
push
jmp
xchg
pop
sub
cmp
xchg
xlat
inc
sbb
test
cmp
sub
shl
movs
sbb
rcr
mov
pusha
add
imul
(bad)
jle
push
mov
mov
jnp
cli
and
hlt
mov
rol
stos
ds
dec
test
pop
in
dec
push
outs
out
jle
xor
xchg
add
mov
lahf
pop
stos
dec
scas
stos
jp
ss
leave
sub
aaa
shr
sbb
repz
lea
or
xchg
mov
mov
jno
push
iret
dec
ret
fmul
mov
inc
scas
sub
mov
hlt
rol
call
or
stos
push
sbb
pop
pop
xor
imul
imul
mov
and
pop
out
(bad)
out
dec
pop
loope
(bad)
pop
mov
(bad)
movs
sub
cmp
mov
loopne
outs
in
jg
shr
fwait
in
es
gs
outs
inc
fisttp
lods
shl
pop
out
test
lds
or
pushw
scas
mov
cmc
inc
ffreep
xor
add
repnz
cmp
je
fimul
rcr
jns
push
sub
mov
push
add
comiss
imul
sti
daa
addr16
cli
inc
cs
lds
push
rcl
inc
inc
inc
push
mov
inc
mov
pop
sub
js
mov
gs
add
add
add
lahf
sbb
ins
cmp
inc
sub
imul
sar
xchg
popa
jno
push
les
adc
mov
xor
push
and
sbb
in
js
movs
jmp
je
mov
pop
cmps
and
fmul
xchg
mov
xchg
outs
dec
sub
xchg
pop
cmp
xor
into
xchg
ror
in
test
and
sysexit
ss
cmc
hlt
popa
hlt
rcl
fsubr
sub
or
jne
fimul
and
arpl
fs
mov
fnsave
xchg
das
rol
loopne
into
inc
push
jno
cld
add
fwait
xchg
int
mov
xor
mul
movs
push
mov
jl
ffree
dec
adc
or
in
imul
aaa
sub
jecxz
enter
lock
leave
push
jl
repz
sub
loopne
mul
or
jns
loopne
mov
rcr
fldcw
arpl
pop
scas
dec
or
cmp
cli
push
push
adc
ss
loope
into
dec
mov
adc
mov
jnp
stos
leave
mov
sub
jle
ficom
cmp
push
pop
jns
or
(bad)
retf
shl
cmp
xor
std
pop
mov
lock
jge
cmc
in
or
jae
cmc
push
es
cmp
jbe
ficomp
mov
inc
test
ret
fsub
and
and
mov
fsub
mov
mov
ficom
xchg
sti
mov
(bad)
pop
fidiv
jbe
aas
cld
lea
pop
mov
xchg
mov
jg
push
mov
jl
(bad)
imul
push
inc
cmps
mov
jmp
dec
loopne
xchg
cli
and
dec
(bad)
ficomp
outs
lock
mov
sbb
js
cmp
or
jno
mov
(bad)
xor
popf
push
movs
shl
mov
adc
(bad)
jns
hlt
es
mov
pop
mov
call
int
ret
mov
pop
js
mov
xor
lock
mov
mov
cdq
fsubr
je
call
and
repz
test
shl
add
jp
xchg
mov
push
aam
inc
pop
jns
and
loope
lea
cli
setp
xor
leave
xchg
adc
jae
jae
enter
push
mov
push
add
cld
xchg
mov
mov
std
sub
sub
aam
and
ins
mov
sbb
adc
mov
adc
xor
jo
out
mov
in
xchg
xchg
pop
test
icebp
jae
shl
test
mov
cwde
fcomip
fs
dec
jns
sbb
mov
enter
ret
jecxz
ret
ja
fwait
dec
push
sub
jo
push
dec
shl
add
repnz
inc
or
jge
mov
clc
movs
pop
pop
not
std
or
pusha
js
cmp
mov
jbe
nop
jbe
push
inc
mov
adc
and
sti
push
sbb
ins
mov
sub
push
in
mov
imul
xchg
dec
pop
jne
jle
mov
xchg
jge
out
leave
sub
fst
sub
push
pop
push
gs
pop
movs
call
add
sbb
mov
pop
imul
fwait
add
mov
cdq
js
sbb
and
dec
aad
pusha
popf
icebp
cmp
lds
mov
mov
inc
movs
mov
jl
sub
ins
xor
call
sbb
data16
pop
(bad)
dec
add
sbb
mov
shr
test
(bad)
add
mov
mov
mov
mov
clc
or
push
mov
xor
imul
dec
stc
sbb
(bad)
aas
adc
lods
sub
bound
retf
(bad)
jbe
push
(bad)
daa
mov
mov
jns
sub
pop
mov
inc
leave
pop
test
stos
cli
mov
shl
gs
mov
sbb
imul
sbb
dec
ret
ret
inc
dec
loopne
lods
lods
in
sbb
push
es
call
mov
movs
movs
mov
adc
or
mov
mov
add
push
mov
loop
mov
or
cwde
mov
ss
xchg
mov
or
je
les
add
test
jo
mov
add
push
bound
aad
pop
jnp
and
das
ret
std
pop
std
add
push
leave
or
xchg
arpl
mov
lock
test
mov
in
stos
imul
xchg
in
jg
jg
adc
sbb
inc
dec
lahf
xor
and
sbb
inc
sbb
xchg
mov
scas
sub
int3
dec
cmps
and
out
inc
daa
bound
por
jl
pushf
std
lea
data16
loope
js
fisubr
pop
cdq
adc
cli
jae
mov
les
mov
push
and
cli
jmp
push
mov
ins
mov
nop
repz
jae
ret
imul
call
jns
dec
sub
in
retf
cmp
popa
push
fbld
mov
jmp
cmp
sbb
lahf
jp
popa
cmp
jo
loope
push
and
addr16
push
sbb
fwait
cmovs
inc
ins
out
aas
mov
je
xlat
and
mov
popf
push
xchg
inc
cmps
jae
lods
icebp
mov
sbb
xor
jmp
pop
add
into
inc
and
pop
or
out
or
pop
sub
lea
dec
cmps
jecxz
call
outs
icebp
mov
jmp
sub
arpl
pop
add
dec
mov
sbb
and
in
lock
dec
sub
fcmovnu
mov
add
stos
or
(bad)
out
cmp
xor
push
aam
arpl
push
dec
add
rol
and
xlat
stos
movs
dec
cmps
sub
fsub
popf
dec
movs
mov
mov
stc
lds
out
sar
push
sub
mov
jmp
adc
adc
cmp
mov
loopne
mov
and
pop
mov
lods
mov
out
xchg
test
sahf
fwait
in
cwde
(bad)
scas
mov
test
and
jmp
jl
dec
mov
out
cmp
xor
xchg
test
jae
sbb
pop
sti
mov
inc
adc
gs
shl
cld
push
jecxz
xchg
inc
imul
ds
xchg
imul
add
adc
push
jg
add
adc
lea
mov
cmps
and
jb
in
or
stc
test
ficom
imul
retf
add
pop
lods
cmp
xchg
int3
sbb
not
loop
xchg
es
sub
xor
xchg
sub
pop
mov
pop
xchg
jnp
dec
and
ss
pop
and
das
in
dec
mov
pusha
pop
and
lds
mov
or
mov
in
sub
cli
xchg
add
out
mov
pop
movs
loop
inc
neg
push
lea
cmp
mov
cli
leave
or
bound
push
icebp
mov
cmps
ds
xchg
out
pop
jl
retf
out
inc
or
mov
test
stc
retf
mov
std
adc
xor
add
mov
dec
sub
cmp
stos
xchg
mov
pop
sub
scas
mov
mov
out
ja
mov
push
(bad)
inc
repnz
mov
movs
loope
xchg
fnstsw
add
ret
pushf
xor
add
cmc
add
inc
or
push
sub
jns
mov
aad
repz
mov
pop
gs
cmp
inc
inc
mov
push
sub
fistp
xlat
rcl
ins
push
jge
sub
std
pop
xor
daa
pop
sub
sbb
outs
fldcw
jge
and
imul
xchg
daa
dec
outs
inc
pop
js
jg
or
mov
adc
sahf
xchg
xchg
sahf
shr
xchg
pop
jno
sbb
pushf
jnp
stos
or
fidiv
xchg
mov
xchg
xchg
xchg
les
and
in
cmp
jno
dec
cmp
cld
inc
mov
lock
inc
out
dec
and
adc
aam
dec
add
js
call
mov
ror
ja
leave
js
add
jbe
lods
hlt
lds
inc
es
retf
in
or
dec
aam
loopne
or
aad
mov
dec
dec
add
aaa
and
shl
xchg
jo
jmp
or
mov
and
sbb
fild
cld
jg
mov
xor
sub
lods
idiv
push
jb
test
int
dec
sbb
out
and
xor
mov
add
aam
aas
push
jno
cmp
int
or
icebp
mov
in
jmp
ja
xlat
mov
lds
loop
jmp
mov
mov
sub
movs
outs
mov
in
das
cmp
ss
mov
mul
push
or
lods
cmp
sub
mov
mov
mov
cmp
pop
jle
dec
dec
aad
sti
mov
(bad)
cdq
push
cmp
mov
mov
mov
lahf
sbb
je
iret
ins
push
push
jae
sbb
and
iret
data16
dec
in
inc
int3
jmp
rcr
sub
add
jecxz
or
mov
sub
mov
or
or
or
les
mov
cmp
add
idiv
out
pop
and
cwd
mov
das
ret
add
or
xchg
std
(bad)
clc
daa
jmp
adc
mov
inc
imul
cmc
or
nop
jno
stc
cmp
div
jno
xchg
lods
ret
or
call
cmps
pop
clc
outs
call
jb
add
daa
sbb
dec
adc
inc
push
adc
fcmovnu
movs
sub
outs
lahf
xor
mov
adc
jg
daa
in
jnp
hlt
out
xchg
fisub
fwait
lahf
ja
int3
and
mov
pop
cdq
retf
test
es
add
out
mov
mov
pop
imul
(bad)
sbb
ins
mov
push
out
fisttp
inc
call
mov
and
pop
inc
popf
lahf
xchg
mov
stos
(bad)
out
and
cdq
out
cmp
inc
cmc
cmp
mov
mov
cmp
push
mov
dec
xor
add
rol
jbe
mov
push
push
stos
punpckhbw
arpl
or
fist
or
nop
loop
clc
jns
inc
xchg
into
movs
aas
pop
pop
ins
outs
jb
or
test
out
inc
push
sub
inc
pushf
xor
repnz
js
adc
daa
rcl
sbb
scas
cld
jmp
outs
push
sub
inc
bound
adc
push
or
sbb
mov
and
sub
xchg
mov
xchg
sbb
mov
add
xor
popf
xlat
pop
inc
push
mov
dec
sub
inc
xchg
je
sbb
xor
sub
xchg
mov
(bad)
sbb
push
mov
mov
mov
pop
cs
sub
and
int3
fcom
mov
add
xchg
xchg
movs
cli
rol
mov
jl
cli
push
or
inc
lds
inc
ror
mov
je
cmp
or
mov
mov
cmp
repz
or
jl
repnz
push
lahf
int3
hlt
push
sbb
fist
add
lods
xchg
pop
scas
rcr
mov
xor
sbb
gs
cdq
mov
es
xchg
or
mov
icebp
adc
movs
mov
je
popf
push
(bad)
cmp
xchg
xchg
sti
and
inc
cmc
push
cmp
(bad)
sbb
jbe
ror
cmp
movs
outs
push
xor
and
movs
mov
mov
or
or
cmp
loop
and
sbb
sub
mov
jbe
out
mov
push
mov
les
or
xor
inc
out
xor
mov
mov
rcr
aam
push
hlt
fisubr
sbb
adc
fild
sub
and
out
test
xor
out
je
ins
pop
cmp
sbb
in
data16
scas
movs
xchg
cwde
jge
mov
mov
sbb
fisttp
mov
aam
cdq
sub
idiv
dec
loop
test
dec
adc
inc
pop
or
and
and
jno
and
out
nop
jge
mov
xor
mov
mov
retf
in
scas
mov
xchg
pop
xchg
cmp
fdiv
cmp
or
mov
gs
(bad)
sub
pop
mov
stos
add
mov
mov
sub
cld
cld
ins
outs
push
das
pushf
sbb
push
mov
sbb
jno
shl
mov
pop
call
xor
or
or
movs
lea
xchg
(bad)
fst
aad
loope
mov
addr16
jns
cli
xchg
xchg
and
ins
push
and
in
aaa
outs
test
inc
sub
xchg
cmp
shr
js
pop
lds
mov
repz
(bad)
lahf
je
sbb
sbb
jl
or
xchg
cmc
cmp
add
mov
call
jnp
inc
inc
xor
xlat
test
fnsave
ret
imul
or
adc
cmc
jle
mov
mov
xor
adc
(bad)
push
movs
mov
or
mov
jmp
add
inc
int
in
pop
in
cmc
mov
in
add
jno
jb
pop
inc
into
pop
leave
and
clc
ror
xor
movs
ja
loope
xchg
push
call
xchg
loop
or
push
movs
nop
clc
(bad)
fmul
xchg
loopne
and
jl
repnz
repz
add
xchg
or
jnp
scas
shl
or
mov
(bad)
sahf
into
imul
jne
test
push
sbb
pushf
mov
add
dec
movs
pop
jne
(bad)
stos
push
ror
jne
pop
xor
ss
mov
xchg
clc
inc
scas
rol
and
daa
(bad)
or
enter
scas
das
inc
sbb
iret
loope
or
ds
mov
sub
and
and
retf
ret
dec
mov
outs
and
inc
and
jnp
push
xlat
(bad)
ss
mov
test
(bad)
in
pop
push
adc
cld
lods
jno
inc
xor
cmp
outs
cmps
call
ins
mov
iret
mov
adc
out
adc
fild
rol
xor
movs
retf
xor
idiv
pop
mov
cs
mov
xor
dec
call
xchg
cmp
retf
mov
enter
sub
(bad)
(bad)
pop
into
mov
dec
mov
test
imul
sub
std
mov
fsubr
mov
sub
mov
aad
aas
mov
(bad)
xchg
cmps
push
push
add
add
leave
rol
push
adc
adc
in
cmp
test
pop
ror
movs
sub
jl
add
pop
sub
std
test
scas
dec
arpl
add
add
enter
mov
adc
adc
lods
sbb
(bad)
push
in
xchg
in
mov
pop
lahf
jmp
inc
in
push
xor
mov
mov
test
fisttp
sub
xchg
add
jb
jecxz
out
jae
ss
mov
leave
push
(bad)
mov
mov
outs
pop
test
sbb
push
cmc
int
pop
jnp
and
iret
cmp
adc
add
lea
div
mov
xchg
bound
mov
rcr
test
ins
mov
movs
fs
jbe
test
mov
repz
jne
dec
leave
push
fadd
aas
mov
adc
div
adc
pushf
(bad)
dec
add
sub
pusha
pop
hlt
stos
push
in
imul
dec
mov
stos
inc
add
sbb
cmps
push
pop
jne
sub
iret
mov
nop
push
pop
dec
shl
aad
mov
aam
jns
cmp
movs
dec
xchg
jne
and
test
add
icebp
ja
loop
(bad)
hlt
dec
jge
sbb
imul
cmp
mov
int3
sub
inc
mov
mov
jmp
ficom
dec
ins
aam
(bad)
lods
ffreep
sbb
popf
pusha
add
aam
mov
jecxz
int3
nop
and
je
test
jecxz
icebp
adc
pushf
pop
jb
or
mov
lea
xchg
mov
pushf
cs
mov
(bad)
stos
cmps
sbb
fwait
sbb
pop
js
fisttp
retf
cmp
sar
mov
jbe
add
(bad)
loop
jle
lds
xor
(bad)
dec
inc
inc
(bad)
pusha
sbb
das
add
mov
jg
pop
dec
sahf
(bad)
and
push
adc
loopne
mov
pop
aas
pop
mov
jmp
add
lods
jmp
cmps
in
lods
xchg
mov
movs
out
and
int
mov
mov
pop
out
shl
xlat
adc
xor
fs
repnz
xchg
sbb
xor
enter
pop
arpl
xor
xor
push
push
or
dec
xor
xor
xchg
popa
loop
(bad)
hlt
adc
push
cmps
(bad)
xchg
mov
jge
(bad)
jmp
lea
xchg
rol
sbb
add
inc
mov
rcr
test
push
(bad)
retf
push
and
jg
mov
push
pop
addr16
outs
jl
and
call
xor
clc
or
sbb
cmp
lods
(bad)
(bad)
lods
cmc
xor
xor
sbb
inc
or
pop
dec
xor
int
repnz
pop
dec
lahf
push
mov
rol
pushf
loope
int
nop
inc
cmp
pop
adc
clc
inc
(bad)
or
nop
xchg
push
mov
(bad)
std
(bad)
jbe
cdq
shl
aad
enter
and
xlat
js
out
dec
push
pop
dec
dec
adc
nop
call
in
cmps
arpl
call
arpl
hlt
iret
int
inc
ins
sub
push
mov
xchg
test
mov
into
js
sub
mov
push
and
jl
neg
imul
add
lds
ror
xor
cmp
pop
cmc
mov
dec
comiss
mov
out
ret
mov
out
es
fidiv
xlat
repz
mov
pop
not
(bad)
sbb
dec
outs
pushf
add
jmp
loop
dec
or
sbb
aad
jno
or
xchg
xchg
push
mov
adc
mov
popf
or
repnz
jmp
loope
adc
push
xor
popa
and
push
xor
(bad)
nop
adc
stos
out
pop
xchg
je
sub
loopne
dec
test
test
idiv
sub
jns
icebp
test
mov
lods
mov
jo
and
test
in
mov
xchg
nop
out
retf
mov
pop
ret
add
fidivr
xchg
sbb
ret
xchg
mov
in
lods
push
ss
or
cs
push
pop
adc
adc
mov
repz
mov
pop
ret
jmp
mov
icebp
bound
mov
dec
mov
add
dec
mov
shl
fucomi
dec
push
test
pop
add
les
lahf
xor
fidiv
(bad)
jo
popa
jbe
push
inc
cdq
sbb
leave
mov
leave
jg
daa
daa
inc
push
and
pop
outs
retf
add
sub
dec
cmp
xor
jns
aas
jmp
dec
add
jl
outs
test
mov
mov
add
dec
ret
out
pop
mov
popf
push
and
pop
jbe
ror
vmwrite
sahf
xor
(bad)
sub
add
ret
xchg
fcomp
pop
inc
add
cmp
push
lahf
rcl
xlat
loop
mov
mov
jmp
mov
cmp
std
push
daa
and
inc
or
sub
jae
push
mov
push
repz
clc
es
scas
pop
jnp
cmps
outs
loope
scas
bnd
mov
ds
inc
fmulp
jae
test
popa
jns
push
enter
dec
xchg
mov
mov
ret
fsubp
or
xchg
xor
cmps
sub
mov
dec
pop
mov
ficom
add
not
jmp
mov
pop
popf
icebp
sbb
je
ss
mov
bound
and
lods
data16
jg
jns
arpl
mov
mov
outs
int
push
adc
test
or
push
cmp
push
pop
and
pop
add
mov
jl
outs
scas
sub
and
sbb
sbb
mov
(bad)
cmp
dec
or
adc
ret
jno
adc
out
rcr
inc
fbstp
push
(bad)
jmp
cdq
adc
lods
cmp
jae
add
xor
pop
sti
cmp
call
lock
mov
test
aam
jp
jo
inc
add
cmp
or
dec
pop
xor
mov
sbb
sub
push
inc
jmp
push
mov
xchg
(bad)
arpl
adc
add
and
sbb
sub
inc
cwde
xor
inc
bnd
pop
jne
inc
aad
std
pop
sbb
mov
test
add
xor
bound
or
test
out
mov
bound
imul
(bad)
mov
push
jnp
xlat
sbb
repnz
out
dec
push
inc
inc
mov
(bad)
dec
xchg
(bad)
and
fwait
pusha
fimul
sub
test
lock
mov
push
ins
fimul
xchg
iret
cmc
xor
cld
shr
imul
lock
jle
mov
or
hlt
ins
out
xchg
push
rdtsc
adc
cs
xor
cmp
xchg
mov
bound
test
mov
inc
sbb
in
xor
sbb
inc
inc
jnp
sbb
int3
nop
fadd
xor
mov
mov
shl
pop
add
sbb
jae
mov
ret
rcr
loop
sub
sti
loope
mov
sar
cmp
mov
int
dec
push
je
in
xor
outs
rcl
mov
(bad)
iret
jmp
inc
push
cmp
and
mov
mov
push
test
jae
pop
movs
mov
retf
iret
pop
xor
aam
jmp
cld
out
and
dec
inc
fcmovnu
dec
jns
test
cdq
jl
cmp
push
pushf
jae
bound
push
mov
(bad)
fsubp
cdq
xchg
sub
pop
loop
sub
sub
pop
add
or
sub
add
stc
fcmovnb
imul
dec
aaa
stos
pop
adc
repz
mov
cwde
mov
fidivr
push
inc
das
jp
test
or
xchg
and
shr
mov
std
test
mov
les
icebp
jl
add
xchg
xor
ins
sbb
mov
cs
jb
pop
jle
push
sbb
popf
ss
dec
imul
in
xchg
ret
adc
add
icebp
addr16
repz
inc
cs
mov
mov
jg
mov
xchg
jmp
ds
adc
cli
xor
push
stos
lock
push
fbstp
sub
mov
cmp
mov
add
fsub
lds
push
jle
fld
xor
xor
sahf
(bad)
cmps
int3
iret
fbld
inc
mov
out
push
xchg
je
xchg
adc
in
add
xchg
push
or
xchg
(bad)
(bad)
adc
jnp
pop
add
iret
jp
push
retf
(bad)
mov
or
fmul
sub
retf
xor
ret
mov
sar
push
add
adc
sub
out
adc
inc
push
mov
cmp
je
jge
add
inc
jns
add
sbb
ds
mov
dec
inc
ja
xor
sub
dec
xchg
mov
test
jmp
inc
gs
in
and
pop
mov
lock
push
test
pop
and
in
stc
movs
sub
jns
call
test
adc
cmps
pop
push
(bad)
nop
int
inc
push
(bad)
(bad)
fsub
and
imul
or
and
pop
add
stos
es
xchg
lock
cmps
sahf
imul
adc
pop
pop
xor
pop
stos
dec
fcom
xchg
and
fdivr
jo
sbb
jl
mov
or
add
movs
(bad)
sub
icebp
test
push
dec
cli
pop
ret
cdq
pushf
inc
pushf
and
xor
jae
stos
ror
xchg
das
mov
out
lods
stc
cmp
ins
(bad)
mov
data16
adc
dec
fdiv
sbb
adc
mov
add
inc
mov
inc
xchg
dec
sub
loope
in
sbb
sub
fadd
int
(bad)
test
push
icebp
js
pop
push
push
mov
clc
hlt
loopne
push
inc
inc
(bad)
xor
test
push
mov
pop
(bad)
push
jle
xchg
and
loop
shr
je
inc
add
push
je
mov
nop
ins
cli
push
cdq
mov
inc
in
jp
nop
sbb
cmc
xor
out
retf
or
(bad)
int
aas
cdq
pop
jb
lahf
fcomp
fnstcw
aad
hlt
loop
stos
ret
rol
sar
ret
pop
push
mov
rol
pop
call
out
call
lahf
sub
jle
sub
(bad)
jg
inc
xchg
out
pop
lock
iret
inc
js
sti
pop
jle
daa
lea
cmp
ret
loope
aas
jae
dec
xor
inc
mov
xor
mov
out
jne
sub
push
(bad)
dec
aad
test
scas
push
sub
and
fwait
out
fisub
inc
imul
inc
add
data16
sub
cdq
test
push
pop
and
sbb
inc
dec
rcr
jp
mov
cmp
inc
lods
(bad)
pop
mov
imul
(bad)
les
jnp
or
enter
mov
popa
fimul
mov
sahf
adc
xchg
mov
clc
cmp
and
dec
or
ja
mov
pop
inc
fstp
push
repnz
lods
ins
inc
lods
cmp
or
mov
ins
xchg
pop
mov
cs
(bad)
mov
add
dec
cmps
dec
xor
push
out
stos
cdq
pop
call
ret
mov
out
push
cmp
cmc
ficom
pusha
aad
aam
jl
outs
shl
jle
sub
xchg
cmp
outs
sahf
into
daa
inc
mov
xor
mov
or
daa
adc
pushf
retf
cld
dec
(bad)
push
call
mov
pop
fnstcw
mov
sub
out
mov
(bad)
movs
in
sub
movs
mov
ret
sbb
and
neg
dec
mov
xor
mov
pop
es
into
inc
mov
lahf
jae
push
mov
jae
fwait
lods
and
hlt
int
mov
test
out
into
inc
outs
adc
jecxz
jno
mov
shr
push
fstp
pop
lods
enter
jecxz
ror
outs
rcr
je
jecxz
xchg
mov
jmp
mov
lea
leave
or
pop
stos
push
mov
pop
out
shr
jno
and
retf
or
pop
add
scas
pop
xor
test
xor
push
mov
in
adc
loop
out
xchg
out
fnstcw
add
ror
cld
push
sar
mov
pop
test
lods
push
jmp
addr16
push
pop
pop
outs
call
mov
das
ret
neg
sbb
push
push
ja
test
xchg
call
mov
jns
mov
outs
pop
ja
popf
add
or
bound
jle
outs
sub
les
lahf
mov
or
mov
add
pushf
jb
daa
jae
inc
imul
mov
inc
iret
jmp
inc
and
in
inc
jg
jp
or
rol
mov
sbb
pushf
loopne
jmp
adc
cmp
push
sbb
pop
shl
or
dec
scas
addr16
inc
and
fwait
lods
cmp
js
in
jmp
(bad)
sbb
xchg
adc
push
jbe
add
aad
sub
std
cld
mov
mov
xor
xchg
sahf
rcl
adc
jns
mov
js
les
mov
test
jo
bound
sub
push
frstor
adc
mov
daa
(bad)
outs
xor
call
and
rol
dec
mov
cmp
xchg
(bad)
ss
iret
ds
push
and
lahf
ret
lods
and
sbb
xlat
cld
mov
mov
scas
fisttp
popa
pop
mov
sbb
outs
cmp
lock
test
in
mov
fcom
popa
jle
cmp
retf
cld
cld
in
mov
mov
call
add
pop
fstp
pop
fadd
sub
int3
or
shl
mov
clc
pop
stos
inc
mov
imul
sbb
or
or
fwait
mov
inc
ds
cmp
pop
fs
out
and
ret
outs
jle
and
or
mov
xor
push
cmp
out
fcomp
(bad)
aad
jge
call
loope
mov
cmp
enter
pop
cmp
ja
movs
push
sbb
jl
mov
into
inc
cmps
aad
mov
add
pop
push
or
cld
retf
std
inc
or
call
arpl
or
and
mov
push
aad
mov
inc
test
sbb
xor
push
mov
or
call
jo
add
or
stos
lods
pop
add
imul
sbb
es
in
loop
mov
lahf
or
add
rol
and
push
cmp
rol
dec
int3
cmp
fmul
xchg
cdq
or
call
(bad)
pop
pushf
ds
dec
inc
ja
cld
push
cmc
dec
jg
mov
mov
and
pop
mov
ins
cmp
mov
dec
xor
retf
jo
or
xchg
into
rcl
push
jbe
mov
ror
mov
sbb
cmps
gs
imul
inc
pop
(bad)
xchg
inc
dec
push
mov
aad
outs
push
mov
push
bound
mov
stc
jecxz
xchg
mov
dec
fwait
cmp
cli
sti
outs
pop
sti
mov
inc
mov
mov
jmp
pop
cdq
fmul
out
in
test
popa
(bad)
xchg
stos
cmp
mov
call
leave
pusha
in
in
dec
ds
dec
repz
test
fidivr
adc
pop
mov
mov
icebp
add
sbb
lahf
in
adc
sti
mov
jb
add
pop
test
aas
es
and
add
(bad)
out
movs
dec
dec
mov
and
leave
je
mov
shl
popf
iret
sub
scas
cdq
or
dec
xchg
pusha
sub
mov
xor
xchg
push
push
add
nop
dec
(bad)
adc
jne
mov
popf
aad
inc
je
xchg
mov
(bad)
aam
into
ret
rol
xor
mov
sbb
in
fwait
xchg
xchg
outs
xor
push
loop
cs
ja
fidivr
pop
push
sbb
push
adc
int3
test
(bad)
push
rol
ss
call
stos
jge
xchg
pop
enter
xor
dec
jo
call
popf
fiadd
jo
loopne
sbb
sbb
lock
jbe
push
imul
mov
xchg
idiv
addr16
mov
mov
push
add
nop
mov
(bad)
aad
call
repz
(bad)
jecxz
adc
ss
and
cmp
add
retf
pusha
mov
add
jecxz
sub
sysret
retf
jb
repz
dec
iret
aad
popf
jle
in
mov
sub
fst
sub
popf
sbb
add
test
mov
(bad)
lock
mov
aaa
mov
lahf
(bad)
retf
cmp
inc
leave
in
sub
jmp
retf
cmc
mov
imul
out
fcomp
stc
imul
jmp
rcl
pop
mov
ds
test
adc
jmp
hlt
pusha
popf
loop
out
shl
inc
cmp
cwde
aas
gs
jge
sti
push
test
(bad)
(bad)
pusha
mov
js
test
xor
fsubr
cmp
adc
enter
pop
fwait
cmps
add
ret
dec
adc
adc
push
loop
push
pop
pop
add
xor
aaa
mov
sbb
sub
scas
jmp
stos
mov
scas
hlt
das
or
jbe
mov
test
addr16
jo
xor
(bad)
hlt
mov
cmp
ins
fs
sbb
xor
es
mov
adc
mov
or
scas
ret
jmp
inc
nop
bound
mov
outs
scas
or
push
test
mov
fidiv
pop
das
ins
test
jbe
cld
mov
lds
in
mov
lock
cmp
(bad)
mov
ret
adc
or
add
pop
pop
aam
adc
les
popf
repz
fidivr
adc
icebp
sahf
out
xchg
push
arpl
sbb
pop
cmp
mov
pop
idiv
mov
push
imul
cmc
int3
inc
jecxz
dec
repz
pop
mov
pop
jo
pop
inc
addr16
imul
add
xchg
data16
dec
push
or
(bad)
cmp
stos
mov
in
jb
sbb
aam
(bad)
mov
sbb
jo
push
inc
aam
gs
gs
pop
inc
sub
mov
retf
ficom
imul
mov
stos
cmps
dec
movs
or
(bad)
adc
push
mov
jl
fild
retf
ja
inc
scas
les
fwait
push
out
adc
and
fistp
jmp
xchg
xor
test
popf
rcr
sbb
les
lahf
fwait
rcl
and
push
ret
mov
inc
xchg
pop
sub
mov
jge
pop
mov
or
mov
outs
jbe
rol
inc
xor
out
cmps
cmps
aas
jg
jnp
jae
je
mov
in
cmp
pop
in
and
mov
sbb
inc
mov
push
test
rcr
fnstsw
sbb
pop
ret
dec
cmp
push
xor
dec
ins
mov
mov
add
jmp
shl
clc
ror
inc
daa
inc
mov
jb
dec
loop
xor
mov
xor
popa
shr
adc
daa
inc
mov
lds
fld
out
daa
cmps
sbb
enter
push
mov
test
xor
or
mov
jnp
jnp
(bad)
data16
shr
adc
ja
out
pop
in
pusha
ret
ror
sbb
dec
dec
cdq
dec
and
aam
gs
mov
cwde
or
mov
shl
pop
loop
bound
out
mov
jge
clc
mov
mov
cmp
arpl
retf
outs
add
fisttp
gs
into
(bad)
fdiv
mov
aas
imul
jle
add
(bad)
pop
(bad)
aas
(bad)
fdivp
aad
and
or
nop
stos
jns
rol
je
(bad)
stc
pop
xchg
sbb
sub
aas
or
imul
push
sub
mov
add
jne
not
pop
cmc
jne
jmp
lods
or
sbb
sti
jle
pop
jno
mov
rcr
out
cmp
js
mov
jns
add
stos
xlat
adc
mov
(bad)
lds
shr
and
and
data16
push
int3
cmp
dec
fist
dec
test
or
test
maskmovq
div
shl
mov
jno
cld
data16
push
inc
mov
ret
ret
bound
mov
push
pop
shl
xchg
and
mov
lahf
pop
adc
mov
dec
and
fwait
pusha
pop
sub
mov
test
stc
jae
inc
inc
adc
rcr
movs
lods
mov
jecxz
mov
xlat
sbb
out
xor
call
add
or
jbe
push
cmc
adc
jge
sbb
push
es
xor
stc
adc
(bad)
mov
mov
add
jmp
mov
stos
push
loopne
nop
movs
cld
imul
in
addr16
xchg
imul
pop
cmp
pop
add
loopne
or
mov
inc
and
js
addr16
addr16
bound
xchg
sar
sub
shr
and
dec
mov
xor
aam
iret
mov
out
xor
push
push
or
pop
pop
ja
xor
mov
jne
mov
ror
inc
mov
(bad)
and
pop
icebp
js
or
jb
sub
sub
adc
jmp
xchg
hlt
outs
pop
xor
mov
mov
pushf
fdiv
sbb
iret
jae
fsubr
jo
ins
push
mov
jle
cmp
jp
mov
shr
mov
add
jge
dec
jno
add
sub
bound
push
fwait
dec
push
jmp
jns
xlat
and
and
and
jbe
adc
mov
lea
jp
mov
cmps
adc
sub
mov
sbb
mov
popa
int
jmp
loop
sahf
nop
retf
adc
popf
sbb
mov
rol
ret
retf
test
in
sbb
cwde
pushf
ret
jbe
jae
inc
nop
in
sbb
push
pop
movs
call
sub
(bad)
out
retf
push
mov
and
push
fadd
push
mov
push
movs
push
mov
sub
mov
pop
adc
mov
inc
outs
mov
callw
pusha
mov
movs
and
inc
push
movs
mov
adc
pop
pop
movs
dec
fcom
mov
popf
xchg
jmp
icebp
enter
sub
pop
sahf
mov
sbb
jnp
imul
dec
scas
jp
stos
stc
ret
mov
or
sub
(bad)
dec
imul
out
inc
outs
push
mov
sar
pop
or
popf
and
or
mov
mov
inc
fist
bound
xor
mov
ds
and
mov
mov
jg
shl
mov
shl
or
into
push
loope
repnz
cs
test
addr16
pop
sar
mov
inc
test
shl
inc
sbb
add
jg
call
dec
fisttp
jmp
into
push
sbb
ror
pop
mov
lods
retf
in
jbe
add
sub
mov
sbb
bound
lea
sbb
fist
adc
pop
sub
jo
adc
test
xchg
cmp
jnp
mov
pop
scas
in
mov
aas
mov
scas
mov
fs
xchg
and
mov
mov
or
push
sub
adc
or
or
icebp
lds
std
movs
lahf
cs
xchg
rcl
imul
add
jmp
jle
jns
mov
pop
outs
jns
sub
mov
sub
fisub
or
sub
and
pop
pop
shr
shr
inc
pop
push
loop
movs
inc
pop
push
mov
movs
fisubr
push
add
mov
xchg
push
cdq
ror
mov
ins
xchg
fdiv
xchg
bound
or
adc
or
cli
pop
dec
cmps
or
pop
test
push
jne
pop
jle
pop
mov
jp
outs
std
outs
pop
popa
js
ret
cmp
movs
(bad)
add
dec
hlt
in
xor
sub
jmp
jb
jmp
lahf
or
cmp
ja
jecxz
rcl
sbb
out
mov
adc
cmp
clc
sub
mov
mov
outs
lahf
push
jge
dec
scas
pushf
and
(bad)
dec
cmps
sub
je
mov
rcl
inc
fadd
aam
xchg
mov
dec
mul
pop
pushf
test
pop
sub
sub
lods
cmc
iret
dec
mov
aas
mov
jmp
jb
cmps
rol
lds
mov
mov
imul
adc
sub
in
jmp
stos
push
test
gs
dec
test
sbb
callw
out
enter
retf
data16
movs
int3
or
sbb
imul
fst
sub
ja
neg
js
test
jl
int
mov
outs
lea
cld
test
ins
xor
scas
sub
pop
shr
ja
or
push
ins
jns
push
sbb
and
in
cwde
xor
aaa
sahf
aas
jge
loop
test
lds
loopne
add
iret
aas
cli
sahf
add
push
cli
jno
test
mov
outs
pop
nop
fwait
repz
jo
cmp
gs
fld
mov
push
inc
or
sub
and
jp
push
jg
out
cmp
add
push
cmps
addr16
jns
popf
sbb
ja
inc
ret
xor
inc
mov
xor
push
xor
cwde
inc
sub
xor
and
or
push
pop
jl
(bad)
mov
mov
imul
mov
pop
cld
jp
and
int3
dec
mov
pop
mov
fwait
ja
or
cmc
out
int
cmp
retf
mov
xor
mov
dec
adc
cmp
fwait
jmp
mov
shl
test
jns
sti
jl
(bad)
mov
loop
ret
or
push
dec
pop
push
fist
add
push
adc
xor
push
mov
jb
pop
mov
xor
and
xor
mov
ret
fwait
sub
popf
add
int3
daa
and
cmp
rol
pop
loopne
add
js
sbb
xchg
or
sub
dec
test
iret
scas
in
les
mov
test
stos
sub
adc
(bad)
cmp
mov
outs
shr
clc
inc
stos
mov
xor
cs
jecxz
add
ret
mov
ins
jns
sub
jl
aad
scas
icebp
adc
pop
inc
mov
inc
clc
jge
jae
(bad)
and
nop
inc
scas
pop
or
inc
cld
mov
fs
(bad)
and
mov
push
popf
test
dec
mov
shl
push
scas
mov
retf
cmc
mov
or
aas
mov
push
or
stc
push
push
in
mov
push
jmp
xor
sub
or
xor
repnz
add
fidivr
jecxz
div
loopne
xor
xchg
iret
outs
push
pop
mov
mov
test
gs
sar
nop
xcrypt-cbc
cmps
xchg
push
or
xchg
inc
cli
xchg
lods
dec
out
xor
jo
pushf
inc
xchg
bound
mov
mov
sbb
add
je
repz
xor
xchg
shl
xchg
mov
test
out
fistp
sbb
mov
add
mov
mov
push
push
sub
or
jne
cld
xchg
or
ins
adc
add
xor
jp
jge
mov
push
(bad)
call
repnz
add
lock
push
push
movs
push
vpslld
imul
push
call
mov
xchg
pop
push
xchg
dec
lock
shl
or
cli
rcl
lods
sub
pusha
jle
test
adc
pop
xlat
push
in
mov
test
dec
loop
inc
mov
or
push
mov
(bad)
cli
mov
fs
mov
fcmovne
jp
scas
out
or
in
(bad)
jge
sub
adc
inc
test
jno
dec
xchg
cli
popa
fwait
mov
pop
push
mov
jecxz
sbb
xor
jb
shl
arpl
test
mov
inc
mov
sar
cmp
and
out
fdivrp
mov
jbe
mov
psubb
sub
jne
push
cli
adc
sub
push
pop
arpl
nop
fsubrp
not
cmp
lods
sar
rcr
xor
(bad)
xor
cmp
sbb
pushf
pop
xor
rol
push
ret
call
dec
iret
div
sti
xchg
lods
scas
daa
xor
lods
adc
fsubr
inc
lock
jecxz
mov
mov
and
adc
pop
or
xlat
retf
lds
shl
xchg
or
cdq
sbb
cmc
xlat
xor
xor
stc
push
mov
(bad)
loopne
add
pop
mov
shl
cdq
cwde
sar
sbb
and
push
stos
or
shl
mov
push
imul
sub
xchg
je
push
xor
in
imul
jns
ret
js
push
mov
and
xchg
mov
movs
xchg
fnsave
dec
and
in
lds
or
add
pusha
cmp
jecxz
fisub
inc
test
inc
sbb
pushf
mov
xor
add
ja
stos
push
and
push
cmp
inc
add
test
std
pop
mov
in
add
jl
jl
jmp
or
gs
push
mov
shl
outs
pop
mov
pop
sub
or
or
inc
fisubr
push
dec
mov
cs
jns
mov
stc
imul
add
push
cmps
icebp
xchg
ins
fbstp
sbb
icebp
xor
js
push
mov
add
mov
test
stos
je
mov
or
jecxz
push
mov
daa
jno
push
fidivr
dec
cmp
pop
dec
rcr
popa
and
ja
not
sub
push
jl
sbb
sahf
sahf
cmps
(bad)
push
(bad)
pop
and
pop
xchg
mov
xchg
ror
scas
cmc
xor
je
shl
das
jne
and
push
lock
pop
sbb
cmp
xor
xor
jns
mov
stos
push
sbb
xchg
(bad)
jmp
das
mov
xor
jecxz
les
outs
dec
(bad)
and
sub
imul
jmp
and
mov
mov
and
xor
pop
and
adc
inc
aad
call
aad
int
in
es
add
bound
std
rcr
mov
and
sbb
mov
mov
in
push
and
push
dec
ins
jo
fild
add
adc
lds
in
xchg
seto
lods
lea
adc
in
lahf
dec
movs
xchg
mov
and
scas
(bad)
mov
lea
push
test
push
dec
mov
loop
xor
push
push
and
and
cmc
add
mov
jo
ja
(bad)
pop
mov
or
repnz
inc
xchg
cdq
xchg
push
mov
jne
or
fs
ins
inc
scas
leave
sbb
mov
mov
mov
xchg
mov
imul
pop
aaa
cmp
pop
cmps
dec
imul
sub
test
ja
inc
jns
pop
or
mov
enter
lea
out
mov
push
pop
pop
outs
xchg
push
adc
adc
je
imul
ds
push
mov
mov
scas
lods
cli
inc
imul
ds
imul
xor
sbb
jecxz
je
mov
and
push
sahf
inc
int3
and
inc
loopne
jne
(bad)
inc
jecxz
mov
mov
mov
bound
inc
cmp
lods
lahf
sbb
movs
mov
pushf
or
mov
dec
xchg
fwait
dec
je
and
pop
pop
mov
dec
fcomi
push
ret
(bad)
pop
dec
push
fwait
dec
inc
cmp
jp
test
test
mov
or
sbb
adc
mov
shr
sbb
loopne
xlat
fdivr
mov
cmc
(bad)
jns
movs
xchg
pushf
sub
test
fwait
xor
or
rcl
cli
das
push
xchg
sub
mov
loop
adc
ss
add
add
sahf
and
sbb
mov
and
test
adc
mov
stos
(bad)
cmp
js
xchg
cmp
lock
jecxz
(bad)
xchg
sub
mov
sbb
jge
cs
and
loope
xor
cwde
(bad)
in
(bad)
pop
out
mov
xor
jmp
pop
xor
movd
pop
jmp
jmp
aas
mov
sbb
inc
fisub
rcr
push
push
int
in
sub
loopne
xor
push
cmc
call
add
test
iret
add
dec
je
test
out
add
add
dec
(bad)
fld
sub
adc
leave
mov
gs
cli
cmp
int3
xor
leave
push
push
sub
mov
xchg
(bad)
push
scas
dec
sbb
mov
mov
add
popf
cdq
and
aas
call
(bad)
movs
adc
movs
jb
movs
dec
call
das
in
popf
daa
jp
jmp
fst
add
pop
adc
cmp
and
push
fld
js
std
push
hlt
jge
fwait
pop
fnstcw
xor
mov
push
sub
mov
mov
mov
add
aam
adc
ins
ret
aaa
xchg
test
ja
pusha
xor
shl
xchg
pop
mov
hlt
aas
nop
fstp
mov
jae
(bad)
mov
sub
cmp
push
add
fwait
cmps
mov
xchg
adc
fucomi
push
dec
das
xchg
test
push
sahf
gs
inc
fist
push
stos
mov
shl
jmp
je
adc
mov
sub
shl
ds
or
pop
fimul
jmp
addr16
mov
inc
push
mov
pushf
lds
sbb
test
push
icebp
add
mov
push
inc
xor
ja
imul
mov
ins
retf
jecxz
outs
sar
cmp
adc
test
jmp
lock
pop
cld
push
dec
sub
xchg
inc
jmp
nop
jmp
call
(bad)
jns
cmp
dec
sti
and
pop
pop
dec
push
es
xchg
(bad)
sbb
popf
outs
sti
hlt
movs
pop
mov
jle
xchg
ja
imul
sub
out
cs
(bad)
out
adc
leave
lea
xor
or
cwde
pop
pop
popa
cdq
mov
pop
dec
cdq
(bad)
xor
sbb
add
icebp
(bad)
popf
push
sbb
xor
lods
jecxz
out
mov
shl
xchg
xor
push
inc
add
sti
jmp
dec
mov
xchg
bound
(bad)
std
xor
and
jmp
cmc
push
inc
mov
call
fadd
enter
sbb
cmp
mov
fstp
push
cdq
call
push
xchg
mov
dec
(bad)
enter
inc
cmps
mov
jp
int3
add
je
add
adc
ss
mul
push
adc
and
fs
sbb
mov
sti
int
push
icebp
(bad)
jmp
fs
push
or
daa
xchg
mov
xor
inc
sbb
jnp
push
lea
mov
in
popa
pop
jmp
inc
mov
lods
stos
mov
sar
or
add
sub
push
shl
repz
test
inc
fbld
push
xor
cmp
out
mov
xchg
dec
les
or
das
or
pop
xlat
cmp
cmp
ja
pop
dec
mov
fs
aam
sub
push
pop
fwait
pop
fs
inc
adc
in
push
rcl
into
pop
ds
ret
(bad)
in
dec
rcl
adc
mov
(bad)
sub
sti
dec
addr16
dec
mov
pop
jns
ret
outs
inc
xor
inc
imul
inc
jmp
ja
jo
push
pop
sbb
inc
enter
xchg
repnz
or
pop
cdq
daa
jg
retf
adc
xchg
jnp
mov
mov
xchg
bound
dec
jl
fcmovnu
or
sub
cmps
mov
push
xchg
push
lahf
push
outs
xor
loope
imul
jl
inc
or
jg
mov
inc
mov
inc
inc
pop
cmc
add
jmp
cld
movs
(bad)
iret
push
hlt
adc
xchg
mov
mov
lods
clc
(bad)
and
push
and
call
lods
pop
mov
push
xchg
mov
js
aas
imul
or
js
je
fistp
into
mov
xor
stos
inc
push
popf
pop
add
jne
dec
scas
daa
or
aaa
add
jle
arpl
and
mov
jae
aad
or
inc
sbb
adc
jmp
pushf
sbb
xor
inc
cmc
sub
jno
icebp
test
lahf
cmp
jb
adc
call
xor
mov
dec
pushf
dec
fisttp
call
add
in
mov
daa
sbb
fnstcw
or
xchg
call
sub
ins
in
add
mul
cwde
mov
ins
inc
mov
mov
mov
xchg
fnstsw
inc
sub
lea
lods
jns
xor
dec
mov
push
pop
adc
inc
(bad)
push
sub
adc
push
ss
icebp
dec
pop
rcr
jecxz
xchg
aaa
(bad)
and
(bad)
mov
or
xchg
fist
mov
push
add
push
adc
adc
jnp
push
(bad)
mov
sub
cdq
add
cmc
fld
into
cmp
pop
push
popa
dec
dec
fild
sbb
lahf
cmp
push
leave
nop
pop
std
and
popa
xor
repnz
jo
dec
xor
adc
stc
pushf
cwde
mov
xchg
push
in
adc
push
retf
aas
add
and
jl
or
setne
cli
inc
or
xchg
xchg
inc
mov
lds
mov
aas
cwde
mov
jae
add
daa
xor
lock
cdq
sbb
enter
adc
dec
out
dec
arpl
jge
and
popa
xchg
jns
gs
add
repnz
je
push
sar
icebp
addr16
sub
into
pop
cdq
mov
popf
(bad)
cmps
jmp
cmp
cmp
or
(bad)
and
mov
jae
sahf
rol
lahf
mov
push
or
jnp
xchg
imul
popa
xor
sub
push
cs
loopne
mov
mov
sub
int
imul
push
xlat
push
push
jns
hlt
bnd
popa
pop
scas
inc
(bad)
mov
pop
shr
jmp
into
rcl
pop
mov
pushf
jmp
stos
stos
push
dec
jno
mov
fadd
int
loope
xchg
dec
inc
adc
pop
aad
daa
pop
adc
out
aas
data16
(bad)
retf
bound
dec
jp
ror
jle
sbb
push
ds
iret
gs
push
cdq
mov
pop
sbb
sbb
mov
dec
jnp
sub
jb
js
jbe
cs
adc
mov
dec
mov
mov
mov
jnp
lea
jne
(bad)
out
mov
es
inc
dec
test
push
mov
pop
arpl
jle
retf
fstp
cmp
inc
fst
aaa
dec
xchg
repz
cmc
jo
and
aad
jl
lods
in
repz
inc
dec
mov
aas
shl
movs
movs
xacquire
fcom
mov
jg
loopne
xor
repz
lock
mov
cmp
jge
pop
sub
sbb
add
movs
movs
les
inc
pop
fnstcw
call
mov
int3
test
iret
inc
mov
fisttp
enter
xchg
lahf
cmp
pop
cli
jae
sbb
lea
cs
pop
das
out
repz
and
inc
sti
stos
mov
sbb
ret
cld
mov
sbb
in
loop
bound
(bad)
fisub
or
(bad)
enter
jne
or
push
or
push
and
enter
imul
rol
test
aaa
push
push
dec
stc
mov
aad
into
outs
dec
mov
jo
out
shl
cli
push
cmp
(bad)
mov
lds
sbb
push
sbb
std
hlt
jmp
push
mov
std
cmps
mov
or
mov
cmp
jle
mov
push
adc
add
adc
cdq
mov
mov
jnp
pop
inc
ja
push
sti
inc
retf
inc
mov
push
cmp
xlat
jecxz
mov
jp
and
pushf
aas
jbe
or
(bad)
out
fidiv
sbb
dec
sbb
out
pop
into
sbb
dec
cmp
mov
sti
xchg
mov
dec
and
cld
xor
retf
and
call
movs
jmp
movs
std
mov
je
int3
icebp
xchg
mov
lock
(bad)
stc
adc
xchg
xchg
mov
shl
pop
jge
test
pop
adc
(bad)
in
push
in
pop
and
lods
rol
push
not
cmp
into
ror
pop
inc
cmp
sub
cmp
cmp
outs
xor
out
test
pop
data16
lea
fldcw
leave
fsubr
int
jmp
inc
call
(bad)
mov
mov
jns
int
in
pop
add
xor
mov
xor
jae
push
sbb
loope
das
push
fisubr
(bad)
leave
test
sbb
je
adc
fwait
mov
hlt
adc
ins
(bad)
cmc
in
fiadd
xchg
fcomip
cli
dec
rcr
mov
cli
stc
and
test
imul
and
(bad)
fild
sub
loop
pop
gs
xor
mov
mov
fstp
pop
xor
xchg
jno
sbb
icebp
mov
stc
jns
and
ret
pop
repnz
fsub
inc
push
ret
fistp
and
cmps
cmp
fnsave
scas
and
fcmovne
or
aas
inc
sub
jae
cld
hlt
adc
xchg
(bad)
daa
fsubp
test
mov
fidiv
popa
into
xor
in
xlat
arpl
lods
mul
or
mov
cmp
push
and
imul
xor
pop
int3
cmp
dec
mov
push
lods
pop
mov
jg
rcl
loopne
mov
stos
cmps
shr
lahf
aam
xchg
mov
lock
out
mov
pop
push
push
cwde
ror
retf
jo
jg
dec
sub
fisub
push
push
out
cwde
lock
sbb
int
fsub
pop
lods
jb
pusha
xchg
push
aas
adc
int
cmp
dec
mov
xor
shl
xchg
and
nop
aam
sbb
mov
cmp
stc
in
sub
retf
js
repnz
retf
sub
fs
cmps
outs
cmps
xor
popa
frstor
push
and
jno
daa
jb
sbb
sahf
xchg
fimul
mov
xchg
add
pop
iret
and
(bad)
clc
and
cmps
jae
add
adc
sbb
cmp
fnsave
sub
aaa
rcl
mov
mov
or
push
add
cmp
stc
call
aaa
retf
in
out
icebp
das
mov
mov
shr
mov
nop
std
mov
cmps
jecxz
hlt
mov
mov
mov
sti
mov
sub
imul
cmp
and
out
mov
mov
cmc
ret
cmp
dec
dec
es
dec
xchg
xchg
sbb
out
xchg
mov
stc
mov
xchg
jmp
(bad)
sub
dec
sar
pop
addr16
sub
cmp
leave
cmp
enter
or
lds
xchg
xor
jbe
or
cmp
adc
or
jmp
adc
mov
mov
cmp
xchg
mov
retf
hlt
sbb
mov
xchg
add
aam
add
mov
lods
mov
jns
addr16
fcomp
and
pop
fcom
or
dec
mov
(bad)
xchg
(bad)
xlat
mov
fst
and
xchg
dec
retf
jae
and
xor
out
sbb
aam
dec
or
and
push
sar
pop
sub
shl
mov
jns
mov
mov
add
mov
stos
dec
dec
call
or
mov
pop
ds
cmp
test
xchg
enter
jmp
lods
pop
cs
and
xchg
mov
cld
out
popf
adc
test
out
cmps
out
test
mov
mov
rol
daa
test
imul
in
lahf
stos
xor
push
xor
popa
push
mov
stc
in
mov
mov
sti
cmps
sbb
fisttp
jb
dec
in
or
mov
ret
mov
loop
daa
pop
outs
aaa
jbe
mov
rcl
ins
xor
repnz
pusha
stos
cmovne
mov
inc
pop
adc
mov
fistp
dec
mov
arpl
sbb
jl
xchg
ss
lock
clc
outs
outs
inc
shl
jns
cmp
mov
lds
ffreep
add
pop
dec
cmp
pop
mov
bound
push
and
(bad)
repnz
cmp
fldenv
rcl
mov
or
out
fisttp
pusha
nop
movs
pop
std
repnz
xor
int
push
out
mov
lods
or
pop
add
fild
stos
or
and
stc
out
adc
mov
inc
sub
xor
push
pusha
cmp
adc
jbe
jmp
mov
out
repnz
and
sbb
add
push
lahf
or
aad
mov
scas
sub
ror
pusha
loopne
pop
mov
add
adc
and
std
not
xchg
cmps
retf
or
jbe
test
arpl
pusha
or
out
jmp
push
xor
pusha
ret
jo
mov
cmp
adc
ins
fwait
push
pusha
sti
adc
dec
das
out
rol
sbb
push
stos
test
inc
or
pop
scas
lahf
call
inc
sbb
fld
sti
mov
add
fisttp
sub
inc
out
out
iret
mov
cmp
fidivr
mov
outs
loopne
bound
sbb
sbb
call
xchg
adc
(bad)
jns
ror
adc
loop
ret
fsubp
pop
(bad)
arpl
call
aas
add
dec
gs
xor
cmp
rcr
test
push
das
mov
push
stc
inc
fs
push
and
bnd
mov
jmp
fimul
sub
mov
leave
mov
(bad)
fwait
jp
mov
inc
push
cmp
push
adc
pop
dec
ret
push
adc
mov
mov
inc
mov
das
pop
pop
jmp
dec
add
int
lods
ret
push
sbb
xchg
mov
(bad)
cli
cmp
jmp
jnp
test
js
or
add
jne
in
mov
jnp
sbb
push
mov
push
mov
jmp
push
dec
lods
push
add
inc
xor
sbb
mov
pop
movs
pushf
aam
dec
jl
aam
call
int3
or
aaa
loope
xchg
jns
das
xchg
dec
popf
(bad)
xor
sti
cli
mov
xchg
or
les
loope
xchg
pop
mov
fwait
or
mov
adc
rcl
gs
xchg
test
pop
jg
push
(bad)
fbstp
cmp
nop
inc
jnp
add
jle
sar
addr16
(bad)
jns
jb
mov
and
pop
inc
add
js
mov
sub
inc
adc
out
test
imul
test
(bad)
out
mov
adc
ds
shr
push
inc
dec
sub
jb
gs
pop
push
test
add
pop
mov
pop
pushf
(bad)
pop
add
xadd
mov
push
sti
push
inc
mov
cdq
rcr
dec
cmps
mov
xchg
adc
lods
pop
and
adc
call
and
mov
push
(bad)
movs
push
stc
enter
repz
movs
mov
movs
aaa
mov
xchg
xchg
ret
push
lahf
je
mov
dec
mov
mov
in
xchg
(bad)
je
sbb
sar
fiadd
mov
mov
adc
out
iret
dec
test
js
das
add
push
cmp
mov
mov
mov
dec
xchg
adc
in
xchg
lahf
add
sti
int
sbb
jmp
dec
test
mov
sbb
mov
in
pop
inc
lea
test
jnp
scas
and
(bad)
sub
iret
ror
push
test
mov
shr
xchg
jmp
in
ins
leave
adc
sbb
and
clc
lods
icebp
adc
call
mov
jnp
mov
das
inc
jo
int3
push
cwde
div
sahf
daa
xchg
push
add
jns
add
xchg
push
ficom
jno
shr
int3
push
inc
push
mov
push
mov
arpl
mov
(bad)
movs
sub
mov
push
adc
cdq
jg
test
and
and
fwait
pop
adc
stc
clc
in
dec
ror
jg
inc
jns
js
leave
push
cmc
jp
mov
es
(bad)
xor
jl
dec
push
and
mov
mov
jmp
push
loop
sub
mov
pop
fcom
mov
jnp
xor
fs
int3
mov
sub
inc
clc
popa
lods
in
jno
inc
stos
in
add
leave
loopne
add
xor
dec
dec
cli
cmp
cmp
pop
fimul
and
and
mov
xchg
jbe
xchg
repz
cmp
hlt
mov
jp
aas
push
xor
fnstcw
mov
xchg
push
mov
ds
mov
rcl
xchg
shr
jae
test
cmps
hlt
leave
xchg
jg
pop
inc
xchg
fisttp
push
sub
push
add
shr
sar
or
and
mov
add
xor
loope
xchg
stos
and
adc
(bad)
fmul
xor
xchg
sbb
sbb
cmps
inc
or
call
rcr
or
mov
sub
pushw
xor
in
(bad)
daa
jmp
mov
rcr
and
mov
add
jp
cs
test
cmp
dec
sbb
adc
push
mov
(bad)
pop
hlt
add
dec
add
out
ror
mov
(bad)
lahf
inc
ror
test
push
xchg
xchg
xchg
adc
test
adc
xor
adc
dec
cmps
cmp
loope
shufps
jmp
call
inc
xchg
dec
cs
pop
jo
inc
push
cwde
mov
arpl
and
jo
(bad)
loopne
and
in
mov
dec
imul
and
sub
inc
cmc
inc
and
jecxz
ins
mov
pusha
test
adc
mov
jne
shl
int
dec
pop
xchg
add
sub
jmp
mov
adc
ins
jg
retf
mov
sub
cdq
mov
mov
stos
push
add
pushw
mov
cli
push
mov
icebp
pop
mov
xlat
sbb
in
cs
mov
inc
cwde
iret
mov
add
mov
xchg
or
jne
pop
mov
sbb
inc
out
xchg
fistp
pop
clc
xchg
pop
imul
cld
(bad)
cmp
fisubr
cmp
cmp
call
adc
xchg
push
mov
fst
inc
jno
xor
cmp
js
sub
xchg
daa
pop
and
adc
inc
cdq
sbb
and
cmp
push
repz
inc
pop
xchg
xchg
in
call
into
jl
jecxz
shl
dec
enter
ffree
outs
mov
inc
mov
cld
aad
std
xor
mov
mov
daa
mov
xchg
adc
aaa
pusha
test
jle
(bad)
push
add
icebp
inc
or
mov
adc
xor
cmps
popf
or
enter
in
aam
jge
enter
fisttp
outs
retf
loope
sbb
out
mov
cmp
mov
jp
inc
xchg
rcr
push
push
or
and
rcr
or
mov
dec
cli
dec
int3
test
shr
movs
and
mov
jmp
mov
rol
retf
jns
repz
dec
jp
clc
and
div
inc
mov
and
mov
add
add
or
xor
jecxz
ja
lods
mov
jl
and
les
fmulp
stos
xor
cmps
add
in
aas
cmp
and
int3
cmc
(bad)
push
aam
in
mov
aam
les
jbe
xchg
push
push
sub
xlat
dec
cs
loopne
lods
push
push
ss
call
dec
sub
sub
mov
jmp
jl
sub
sti
mov
mov
les
or
pop
fisubr
adc
aaa
cdq
xchg
dec
sub
mov
aam
es
cmp
adc
into
shl
dec
out
xor
add
gs
xor
call
cmp
mov
sbb
jo
push
pushf
bndldx
ror
mov
cdq
ins
jmp
addr16
nop
or
pop
push
or
gs
add
call
fdiv
in
stos
dec
rcl
int3
stos
mov
adc
(bad)
js
(bad)
xor
pop
(bad)
pushf
mov
stos
pop
lds
std
popa
out
jnp
sti
ror
push
fdiv
inc
mov
pop
sub
push
push
stos
add
sbb
gs
jns
cmp
dec
aas
fadd
mov
jmp
and
leave
push
nop
lds
js
dec
pop
gs
add
clc
int3
pop
jb
cli
clc
cmp
sub
(bad)
out
call
popf
aas
lds
jecxz
bound
shl
mov
and
ret
xchg
sbb
data16
or
adc
dec
cs
popf
sub
ja
sbb
aam
mov
xchg
pusha
xor
es
sub
xlat
or
pop
ffreep
jl
push
mov
stos
mov
sub
inc
test
inc
jle
adc
test
(bad)
out
adc
ins
pop
popa
retf
lods
jge
push
push
(bad)
shrd
(bad)
scas
xlat
dec
fist
xchg
adc
and
ror
and
sbb
push
adc
out
sbb
push
loop
in
and
pop
cli
(bad)
pop
icebp
movs
mov
jae
data16
jmp
jle
push
mov
xor
(bad)
in
sbb
cmp
movs
jb
mov
jae
push
fcmovbe
stos
sub
sbb
push
(bad)
mov
or
outs
arpl
dec
mov
jg
cdq
fnsave
add
mov
push
add
imul
or
and
mov
popa
or
adc
mov
mov
mov
js
dec
mov
mov
loope
repnz
jmp
dec
cmc
das
adc
stc
mov
dec
ror
sbb
jno
outs
push
inc
mov
out
nop
arpl
mov
fwait
(bad)
les
xor
xchg
or
call
inc
outs
ja
fsubr
out
cmp
push
mov
cmp
in
push
daa
xchg
pop
arpl
lods
sbb
mov
cli
pop
movs
sbb
addr16
mov
add
adc
sub
sbb
or
lods
scas
fcmovne
dec
lahf
stos
push
loopne
mov
and
add
lahf
mov
sub
pop
jns
pop
push
out
xor
cwde
cmp
call
stos
fldcw
in
imul
dec
cmps
pop
outs
clc
push
xlat
adc
add
shl
inc
dec
xor
inc
adc
xchg
dec
das
repnz
rol
and
and
inc
js
mov
or
outs
stc
shl
or
mov
and
in
iret
mov
add
xchg
ins
movs
cmp
mov
enter
cmp
out
arpl
out
dec
cmp
jae
mov
imul
mov
push
cmp
les
in
into
sbb
adc
mov
fsub
mov
iret
sbb
xlat
hlt
xchg
idiv
je
movs
mov
adc
out
cmp
nop
sahf
sub
call
add
adc
rol
xor
pop
mov
mov
rcl
inc
int
mov
mov
xchg
es
push
mov
test
jnp
fld
loopne
push
lds
or
sahf
addr16
mov
sbb
stc
pop
ret
ins
iret
add
cmc
and
mul
in
popf
ja
pop
mov
jp
gs
xor
test
mov
jecxz
push
fwait
cmp
outs
mov
dec
xchg
pop
adc
pop
fadd
adc
adc
pop
or
add
mov
gs
xor
mov
xor
pop
rcl
ror
nop
imul
mov
pop
pop
mul
hlt
jb
adc
pop
pop
pushf
mov
ret
push
mov
popf
or
nop
xor
push
test
cmc
mov
aam
out
sbb
dec
pop
ja
or
mov
lods
cli
mov
(bad)
sbb
jnp
jmp
or
jge
jmp
xor
test
or
inc
cmp
sub
push
frstor
add
call
xchg
mov
scas
xchg
mov
mov
test
hlt
(bad)
ins
ins
stc
xchg
scas
mov
fidivr
mov
(bad)
sub
mov
dec
sub
fistp
pop
mov
mov
ret
or
out
cdq
jo
inc
add
test
(bad)
repnz
lods
aaa
sbb
or
xchg
(bad)
xor
cmp
(bad)
and
jne
daa
fidivr
mov
test
out
pushf
pop
xor
call
and
jl
xchg
jp
push
jmp
adc
(bad)
xchg
jnp
sbb
sub
cmp
std
cmp
dec
repnz
jns
push
mov
jno
and
call
push
jge
or
es
pop
test
les
(bad)
fist
inc
jb
sub
jo
jbe
add
repnz
mov
xor
mov
hlt
fwait
adc
stc
push
mov
cmp
(bad)
fs
xlat
into
call
inc
sti
jno
in
mov
xor
inc
or
add
jns
inc
pop
jmp
jnp
mov
loope
scas
xchg
(bad)
fdiv
mov
or
paddd
and
push
sbb
mov
mov
add
lods
xor
leave
enter
xor
loope
sub
test
inc
xor
sub
aas
imul
popa
pop
push
cmp
xor
xchg
fnsave
iret
cmc
mov
bound
sub
and
inc
lods
jae
dec
cmp
fdivr
out
xchg
nop
mov
cli
je
push
hlt
lods
rol
gs
cld
retf
mov
scas
mov
xchg
sbb
lock
mov
jge
jge
inc
into
or
sbb
call
xchg
lahf
xor
jb
jbe
test
mov
push
js
lahf
add
sub
inc
aad
(bad)
push
out
or
loope
pop
mov
or
cmps
popa
imul
pop
dec
in
xchg
dec
cmp
push
push
sbb
dec
cdq
fdivr
enter
arpl
(bad)
pop
test
xchg
das
scas
fcomp
xchg
mov
pop
xchg
popf
movs
jg
or
in
push
jl
nop
and
sbb
mov
mov
ins
adc
pop
in
cdq
ror
inc
cmps
adc
outs
dec
adc
cmp
test
scas
mov
movs
xor
imul
rcr
(bad)
add
ins
mov
cmps
hlt
or
imul
pop
or
std
sub
icebp
mov
mov
mov
or
sub
adc
cli
push
mov
dec
pop
and
ret
std
pop
fst
das
cmc
or
ffree
pusha
jbe
cmp
fwait
psadbw
sbb
test
gs
ds
sbb
push
dec
add
and
pop
mov
out
lahf
mov
cwde
mov
xchg
xchg
cwde
cmp
sub
add
das
jle
jecxz
add
popa
add
test
jge
pushf
mov
cdq
(bad)
sti
les
cmp
aaa
inc
cwde
ficom
dec
and
mov
mov
vcvtpd2ps
sbb
sub
sbb
inc
xchg
add
mov
xchg
xor
push
dec
and
popa
inc
aam
xchg
pop
sub
lahf
fadd
fild
(bad)
mov
dec
cld
repnz
ins
idiv
fnstenv
sbb
loop
daa
jne
xlat
mov
popa
mov
dec
call
adc
fucomi
or
inc
pop
push
jp
adc
xchg
mov
push
lods
dec
mov
mov
add
imul
inc
cmp
add
bound
adc
fs
jns
mov
daa
jo
sub
xor
outs
or
fist
and
mov
icebp
jl
pusha
test
mov
push
lods
cdq
adc
out
sub
stos
fnstsw
ds
call
sub
sub
jge
sti
and
cli
aad
cld
int
push
or
mov
aaa
cmp
popa
jl
dec
xchg
fldcw
and
jp
daa
pop
cwde
cmp
mov
xor
dec
adc
int3
retf
stos
test
call
hlt
xor
dec
ds
push
out
(bad)
dec
sti
int
cmp
mov
mov
ret
aaa
fucomi
pop
rcl
pop
push
out
jno
(bad)
sbb
(bad)
pop
je
push
sub
mul
js
popa
cmps
dec
push
lods
cmp
repz
in
in
sbb
ficomp
inc
xor
push
sahf
sub
sub
popf
jecxz
(bad)
in
fucomi
push
(bad)
and
add
mov
call
push
pop
push
inc
push
fmulp
(bad)
pop
push
sbb
cld
(bad)
out
cmc
les
leave
adc
out
arpl
and
inc
xchg
mov
sbb
test
bnd
daa
adc
repz
add
mov
jae
push
icebp
pop
repz
in
fmul
mov
fs
dec
test
das
and
das
pop
add
ffree
es
scas
iret
add
pushf
xor
sub
add
stos
cmc
dec
out
ja
mov
icebp
sbb
add
push
jl
stos
(bad)
adc
lock
popf
mov
fnstcw
cmp
popa
in
dec
and
ins
mov
std
outs
mov
push
ret
enter
aam
int
or
mov
(bad)
sub
xor
mov
xor
and
arpl
rcl
push
pop
push
mov
xor
repz
cwde
dec
mov
inc
push
(bad)
aas
xchg
aam
adc
out
and
in
loopne
and
jle
aas
jg
add
sbb
jge
xor
add
pop
clc
cmp
(bad)
jmp
xchg
js
pop
enter
jle
adc
cld
mov
pop
loop
xor
aas
xchg
mov
mov
mov
adc
push
sbb
cmps
inc
pop
aam
adc
push
ret
push
dec
fldl2e
rcr
repz
popf
jmp
fidivr
fld
or
sbb
fdiv
pusha
into
test
xor
or
popf
sub
add
push
cld
mov
lods
lods
cmps
sbb
movs
aam
std
mov
or
mov
cli
pop
(bad)
sbb
loop
xor
mul
fldenv
(bad)
movs
loope
stc
not
nop
sub
or
sbb
mov
mov
add
pop
push
and
or
daa
xchg
repnz
sahf
(bad)
pop
add
cmp
mov
int3
nop
sahf
dec
lahf
ja
imul
dec
xchg
loopne
lods
mov
nop
dec
shr
frstor
movs
fsubr
(bad)
xor
jne
mov
mov
or
popa
in
jae
pusha
shr
mov
leave
sbb
mov
scas
sub
nop
dec
cli
ins
xchg
sahf
nop
push
cmc
loopne
mov
outs
adc
jbe
and
int
arpl
and
ins
int3
jno
mov
jge
outs
call
xor
retf
mov
jne
std
idiv
xor
jmp
sub
test
cmp
aaa
add
mov
cmps
in
jg
xor
fild
pop
lea
push
leave
shl
push
xchg
aaa
jg
bound
sbb
das
jle
add
push
or
ret
lahf
adc
xor
in
and
xor
daa
repz
jmp
pop
jecxz
ficomp
mov
push
sar
js
mov
mov
out
mov
aaa
sub
icebp
jmp
or
nop
not
lods
push
iret
and
mov
sub
retf
enter
dec
adc
jnp
sub
cmc
imul
sar
add
push
xchg
test
(bad)
in
xor
xor
mov
sub
jmp
lds
cmc
fdivr
push
and
loop
cmps
mov
jno
int
and
xor
aam
pop
jno
lods
pop
fldcw
or
cwde
test
or
into
test
aam
pop
ret
dec
test
jbe
pop
push
mov
mov
fidiv
das
push
gs
adc
push
(bad)
lods
push
aaa
imul
stos
push
sub
sub
push
jg
add
bound
fiadd
mov
test
lods
pop
and
mov
cmp
cli
mov
mov
mov
enter
int
and
lods
imul
movs
hlt
sub
cmp
shl
mov
add
mov
push
ins
push
jb
scas
and
pop
cli
loope
sbb
cmp
add
mov
imul
jg
retf
and
cld
dec
push
pusha
mov
int3
int
sahf
call
scas
aas
rcr
sbb
movs
mov
push
xchg
mov
call
push
sub
mov
outs
push
shl
push
adc
rcr
lds
arpl
dec
sub
or
jg
call
scas
dec
jne
imul
xchg
fimul
cmp
loop
jg
pusha
jl
mov
xchg
cli
add
pop
mov
call
les
sbb
sub
xor
mov
xor
or
jmp
pusha
popf
mov
sub
scas
xor
scas
(bad)
dec
cmp
repnz
mov
(bad)
xchg
mov
adc
dec
divps
mov
add
out
sbb
pop
repnz
and
(bad)
pop
pop
retf
scas
daa
pop
test
xchg
fsubr
(bad)
in
push
scas
(bad)
rcr
loop
adc
pop
popa
(bad)
ror
cld
stc
in
stc
mov
js
mov
sbb
push
push
pop
push
pop
xor
shl
mov
sub
test
and
clc
mov
shl
sbb
push
mov
pop
sbb
hlt
retf
xor
inc
mov
in
or
jmp
sti
add
inc
mov
sbb
jle
in
and
js
test
adc
dec
sub
push
sub
test
das
hlt
jns
cmps
adc
ret
cmps
repz
iret
(bad)
nop
clc
or
and
xchg
xor
and
xchg
repz
mov
xchg
aas
mov
popf
fistp
pusha
std
push
aad
in
stc
lds
xchg
or
cmp
sub
mov
adc
mov
mov
cmp
repnz
mov
inc
bound
dec
push
imul
cmp
les
stos
pop
mov
mov
and
aad
ret
in
in
xor
(bad)
ja
and
xchg
push
sbb
fcom
inc
cmp
into
mov
dec
test
sahf
pop
xchg
pop
xor
retf
lea
scas
dec
push
sub
jp
pop
xor
shr
retf
sar
outs
mov
xor
test
push
pop
(bad)
sti
xor
test
jmp
cmps
inc
mov
xor
pop
adc
dec
push
jge
sub
fwait
mov
pop
add
in
daa
mov
push
movs
mov
aas
add
fnsave
stos
fld
fwait
or
outs
xchg
pop
sub
dec
stos
jnp
inc
dec
adc
(bad)
push
pop
shl
(bad)
push
les
das
mov
xor
cs
test
ja
cs
lock
mov
popf
idiv
inc
cld
inc
mov
push
sahf
xor
inc
push
push
sbb
add
test
inc
sahf
xor
and
scas
das
jae
jns
jge
lods
xchg
mov
jne
(bad)
and
sbb
repnz
or
in
hlt
xchg
std
ins
jno
loopne
pop
mov
mov
shr
(bad)
clc
pop
mov
mov
movs
inc
fdivr
jecxz
add
xchg
jg
ja
jmp
in
mov
xchg
je
rdtsc
lods
add
cmp
jno
daa
ja
dec
out
adc
pop
sub
or
add
push
or
test
outs
int3
add
push
or
pop
xchg
cmp
push
xchg
out
jb
push
sbb
js
dec
mov
and
cwde
pop
or
bound
add
and
mov
fwait
sub
mov
mov
imul
pop
add
(bad)
mov
inc
out
mov
rol
mov
pop
daa
ins
out
iret
xchg
fsub
cwde
out
sub
xor
fbld
call
gs
adc
test
pop
or
xor
and
loop
rcr
shl
and
jg
test
jno
xchg
pushf
push
(bad)
(bad)
mov
mov
push
lea
out
ins
aad
hlt
call
sub
pop
rcr
sub
rcl
or
mov
push
cmp
push
addr16
or
adc
repz
test
xchg
pop
or
idiv
and
outs
out
pop
dec
test
aaa
and
mov
inc
add
sbb
mov
mov
test
jge
ficom
(bad)
repz
test
shl
mov
jo
mov
arpl
or
add
push
stos
out
jb
inc
in
scas
inc
scas
cmp
sar
mov
xchg
gs
mov
movs
push
pop
icebp
add
jae
sub
daa
mov
mov
fstp
sahf
out
pop
jmp
cmp
fistp
and
mov
push
pop
sti
das
dec
xor
or
lahf
cmp
cwde
mov
call
sub
and
into
add
mov
sbb
fld
sahf
jecxz
or
pop
stc
das
das
dec
icebp
jb
push
lea
inc
into
pusha
push
leave
mov
pushf
mov
fst
and
cmps
cmp
xchg
inc
jmp
pop
dec
dec
(bad)
mov
or
pop
jbe
ss
mov
push
and
sub
lods
cmps
ss
enter
nop
int
adc
inc
push
lahf
and
stos
pop
lds
xor
rcl
mov
jo
jns
shl
cmps
jns
fsub
add
loop
movs
cmp
cmp
push
mov
push
adc
jo
fiadd
cld
bound
inc
push
iret
das
inc
mov
lds
in
pop
mov
dec
or
out
lock
sbb
inc
or
push
loopne
xchg
pop
ret
add
mov
push
rol
xchg
sub
jmp
add
jmp
scas
jns
adc
shl
mov
jo
(bad)
jns
jecxz
or
shl
scas
cdq
cmp
pop
push
fucomip
orps
es
sbb
push
add
ret
mov
and
mov
pop
(bad)
xchg
jge
mov
push
daa
shr
out
or
iret
pop
(bad)
out
xlat
jb
dec
sbb
and
pop
cli
mov
lahf
and
int3
mov
daa
lods
stc
pop
dec
jae
dec
or
and
cs
das
xchg
in
enter
out
jae
inc
pop
xchg
ins
in
and
inc
mov
into
xor
cmp
loop
(bad)
les
pminsw
int
test
sub
test
mov
fs
mov
dec
arpl
cld
shl
push
jmp
add
jmp
mov
mov
pop
leave
inc
clc
push
stc
xchg
push
cmp
imul
imul
push
dec
add
fiadd
les
test
ret
fsub
fld
and
mov
inc
jl
inc
jge
ret
sub
xor
xchg
rcl
gs
in
test
arpl
inc
jae
test
in
sbb
(bad)
mov
xchg
lea
inc
data16
pop
pop
sub
mov
nop
aad
fisub
shr
inc
imul
in
shl
sbb
sti
fisubr
jmp
mov
fwait
nop
cli
push
mov
add
adc
add
pop
push
jp
pop
jle
xchg
or
idiv
lahf
dec
xchg
xchg
and
or
out
push
add
xchg
cdq
fimul
sbb
sub
cmps
retf
xchg
adc
mov
jb
outs
mov
dec
sub
pop
adc
cmp
dec
cwde
fnstcw
(bad)
add
mov
push
adc
xchg
loopne
daa
je
shl
adc
mov
stos
adc
push
inc
sbb
xchg
js
push
dec
or
mov
addr16
and
out
rol
cmps
jp
add
ret
in
sub
push
(bad)
inc
test
mov
sub
inc
call
dec
sub
jge
(bad)
dec
stc
cmpxchg
mov
gs
cmp
pop
test
add
push
xor
enter
ficom
cmps
cs
mov
(bad)
cmp
(bad)
(bad)
cmp
push
jg
fidiv
add
sbb
push
or
lods
and
jge
imul
aas
pop
enter
dec
mov
mov
push
mov
movs
mov
test
movs
sahf
or
cmps
pushf
lods
pop
add
jge
mov
int
leave
js
out
fsub
cdq
sahf
inc
adc
ret
jmp
in
jo
push
(bad)
bnd
lods
jmp
dec
or
push
mov
(bad)
mov
push
or
out
nop
hlt
dec
clc
repz
pop
xchg
cld
xchg
(bad)
and
xor
mov
or
dec
mov
dec
jmp
xor
jae
imul
lds
mov
pop
and
sbb
add
sub
arpl
mov
into
retf
cdq
popf
mov
std
and
sub
test
or
push
daa
push
std
inc
sub
dec
pop
cmp
inc
pusha
vmovlps
dec
mov
imul
test
lahf
sbb
ja
or
icebp
sbb
mov
out
icebp
fcomp
movs
dec
dec
sbb
out
cmps
test
pop
lods
cmp
test
xchg
sbb
adc
ret
sbb
xchg
lds
dec
push
push
pop
retf
enter
mov
out
fs
and
inc
sbb
aas
jb
jno
dec
not
scas
jnp
mov
sub
mov
adc
cmps
test
data16
daa
lds
rcr
mov
retf
mov
fsub
add
in
xor
mov
xchg
mov
jmp
xchg
(bad)
(bad)
in
ret
rol
and
jns
ja
pop
adc
fld
mov
xchg
fwait
gs
int
cmp
mov
stos
popa
and
jnp
sub
and
adc
loopne
xor
push
imul
push
lahf
int3
cwde
cdq
fld
push
fsubp
ss
or
cld
test
jmp
ud1
xor
inc
adc
cs
loope
popa
fidiv
add
sub
xchg
lods
cmp
enter
xchg
cmp
pop
inc
jecxz
fadd
ja
stos
adc
fsub
mov
dec
sbb
fwait
or
(bad)
push
mov
stos
xchg
mov
rol
ins
enter
push
call
enter
mov
call
mov
mov
movs
push
(bad)
adc
ror
jge
xor
test
pop
in
inc
xchg
mov
cmps
pop
imul
and
hlt
mov
pop
jmp
mov
dec
mov
adc
lock
iret
stos
test
or
stos
inc
pop
and
adc
inc
imul
cli
movs
and
sbb
bound
and
sub
das
push
retf
pusha
mov
scas
mov
cld
sub
es
jns
jne
and
in
movs
push
ins
jge
mul
fiadd
scas
dec
push
cld
leave
outs
cmp
addr16
cld
call
ja
and
icebp
mov
call
or
fld
nop
lock
cwde
lods
xchg
mov
adc
or
jns
out
sbb
retf
ja
icebp
sub
div
rcr
xchg
out
jl
fst
pop
repnz
mov
rcl
int3
in
addr16
sbb
xlat
xchg
hlt
imul
push
xor
sbb
cdq
lods
pop
mov
and
cli
ss
leave
push
cli
dec
xchg
jbe
add
jns
adc
je
xor
mov
ficomp
and
and
stc
cwde
aas
cli
xor
inc
mov
mov
sub
fwait
aam
outs
ror
dec
and
and
dec
fdiv
out
pop
mov
inc
test
fisttp
and
fnstsw
and
in
adc
(bad)
dec
int
mov
je
lock
inc
sar
dec
mov
nop
test
add
and
gs
es
ins
sbb
cwde
cs
mov
cmps
dec
jno
mov
sub
and
jp
adc
pop
and
fistp
cmp
sti
or
mov
dec
ss
outs
adc
sbb
int
pusha
aas
jno
mov
loope
adc
(bad)
push
pop
dec
jge
mov
shr
adc
mov
pop
and
and
js
clc
cs
cmp
mov
(bad)
cmp
dec
ins
stos
add
and
jl
aas
sbb
sub
inc
adc
jg
sbb
out
rcl
test
or
xor
mov
sahf
das
lea
dec
cmp
jbe
and
je
repz
cli
rol
popf
jmp
pop
int3
xchg
in
lea
into
and
inc
mov
mov
mov
(bad)
pop
cmc
call
outs
dec
fimul
in
jmp
movs
inc
adc
fs
outs
xor
imul
sub
push
fwait
aaa
rol
jbe
mov
pop
ret
lea
xor
xor
cld
mov
sub
pop
pushf
movs
fiadd
cs
je
jae
push
fcom
pop
cld
fsubp
stos
pop
cld
add
lds
mov
push
imul
int
ins
imul
xor
int
test
dec
or
sub
jmp
add
sar
rcr
adc
popf
es
ret
jle
inc
or
xor
pop
or
jne
add
dec
test
mov
inc
std
jle
fwait
ds
in
dec
add
out
fdivr
push
and
mov
shld
movs
mov
aas
cmp
ret
cwde
jp
not
ror
push
aas
test
clc
imul
retf
ds
pop
mov
sahf
(bad)
push
scas
dec
cmp
pop
(bad)
sub
call
xchg
push
gs
mov
mov
or
mov
jmp
daa
lock
adc
stos
pop
(bad)
pop
xor
cmp
adc
and
sub
cmp
cwde
xchg
fcom
test
out
imul
mov
retf
call
int
jb
popf
jmp
xor
inc
xor
xchg
xor
(bad)
add
inc
mov
pop
ret
cs
imul
mov
mov
mov
in
fs
cli
fcmovnbe
(bad)
aaa
enter
push
movsx
div
int
int
xchg
arpl
sub
es
popa
repz
add
push
ret
inc
aas
(bad)
xchg
or
xor
loope
push
or
push
call
cmp
inc
jmp
jl
inc
jle
mov
mov
jle
(bad)
jecxz
push
sub
aam
jne
xchg
adc
out
dec
aaa
rol
push
jae
or
popa
and
sub
mov
bound
dec
in
fwait
mov
out
pop
mov
cmp
or
xor
mov
clc
jo
lahf
dec
sbb
mov
hlt
dec
leave
mov
sub
jns
fisub
call
or
xor
cli
push
scas
(bad)
call
sub
push
fiadd
je
adc
popf
psubb
pop
fnstsw
cmp
mov
inc
jns
rcr
hlt
inc
cmps
mov
jo
mov
adc
sti
mov
mov
ins
cld
loope
imul
mov
call
movs
test
mov
(bad)
in
mov
test
bound
xor
mov
pop
out
shl
jae
loope
adc
fs
retf
jno
xor
test
arpl
sub
clc
xchg
pusha
imul
cmp
lods
mov
sysexit
ret
and
mov
push
test
push
test
out
xchg
and
aam
push
and
xor
(bad)
xor
fld
pop
lea
or
mov
ja
addr16
mov
cmp
mov
jo
fisubr
xor
xchg
pushf
dec
cmp
lods
nop
out
xchg
and
inc
sbb
mov
sbb
inc
out
cmp
inc
or
or
xor
or
pop
cmps
cmp
inc
mov
or
leave
xchg
jnp
mov
mov
xor
popa
mov
rol
pop
add
sbb
jle
outs
pop
lods
ror
movs
in
jmp
lahf
or
int3
int3
or
xchg
mov
shr
loopne
and
addr16
pusha
adc
adc
push
and
std
or
movaps
push
outs
mov
jns
scas
sub
jmp
sbb
xor
xchg
bound
sbb
cmp
jo
(bad)
sti
aaa
idiv
and
xchg
popf
repnz
nop
sbb
ds
out
pop
push
retf
fabs
xor
xchg
push
and
jmp
add
gs
lds
(bad)
xchg
popf
mov
iret
push
popf
lds
mov
xchg
ret
xor
push
(bad)
fs
daa
mov
xchg
fimul
mov
mov
inc
nop
movs
jle
inc
int3
cmp
mov
pop
sub
xlat
sub
mov
adc
push
xchg
out
(bad)
jg
rcr
pop
stos
push
stos
add
jl
xor
cmps
xchg
cmp
addr16
adc
xchg
movs
jae
pop
cmp
lea
arpl
pusha
cmp
pop
mov
shl
popf
or
aas
push
xchg
push
sbb
retf
mov
clc
push
inc
or
adc
dec
inc
sub
jbe
(bad)
loopne
into
push
sub
inc
rcl
icebp
sub
or
outs
lods
fwait
pop
dec
ins
nop
or
cli
ret
push
mov
adc
push
dec
call
stos
out
cmp
inc
stc
sbb
xchg
mov
xor
das
inc
clc
mov
icebp
cmp
cmp
test
add
aad
movs
sbb
push
pushf
aam
push
dec
mov
push
mov
sbb
cmps
shl
push
jb
popf
xchg
jmp
setae
jae
inc
adc
inc
jbe
(bad)
jecxz
mov
jmp
pusha
cld
and
cwde
fist
sbb
nop
xor
jne
inc
icebp
(bad)
adc
push
cmps
iret
xor
xor
sub
jae
out
cwde
dec
push
jp
inc
jl
xlat
cmps
xchg
xchg
mov
jle
mov
sbb
vminss
pop
jbe
and
sub
push
cmp
int
arpl
repnz
aam
inc
cmps
fwait
cli
push
xlat
(bad)
xchg
and
pop
sbb
inc
pop
jbe
aam
sbb
xchg
inc
cmps
cmp
inc
shl
fsub
scas
and
cdq
das
icebp
mov
ds
outs
add
inc
fs
push
(bad)
imul
xchg
test
sbb
xchg
call
shl
jb
jmp
add
push
pop
ret
cmp
dec
mov
xchg
mov
(bad)
ins
mov
add
ret
mov
or
out
cmp
dec
in
add
les
outs
setnp
int
dec
mov
(bad)
cwde
xchg
cld
(bad)
ja
mov
adc
xchg
jmp
addr16
adc
retf
jg
(bad)
ror
jmp
mov
dec
das
jnp
mov
sub
add
int
jmp
retf
jle
sbb
pop
or
xchg
stos
outs
test
mov
adc
pop
pusha
dec
outs
cmp
wbinvd
out
push
in
lds
push
aam
cmps
std
mov
aas
ins
jae
mov
xor
jecxz
rcl
mov
in
aad
push
(bad)
mov
loop
and
xchg
lock
jg
add
(bad)
xlat
fcmovu
pushf
loop
stos
(bad)
movs
jmp
xchg
stos
addr16
cmp
jb
pop
and
rcr
shl
test
fwait
(bad)
mov
les
push
mov
mov
lea
push
sti
lods
cmp
rcl
add
aad
mov
pop
sub
xchg
xor
out
mov
xchg
add
movs
lea
sub
rol
(bad)
jl
jl
jg
jae
sub
movs
mov
movs
ins
addr16
mov
xor
inc
enter
jecxz
mov
mov
xchg
sbb
daa
or
test
mov
call
rcl
push
push
inc
retf
call
jg
or
dec
test
sub
adc
js
xchg
xlat
mov
fldenv
test
repz
push
les
ins
and
jg
lock
daa
sbb
jp
fidivr
xor
pop
shl
fxch
and
mov
adc
pop
xor
adc
fcos
fwait
push
cmc
ins
mov
inc
mov
sbb
adc
push
std
out
dec
or
je
call
push
sbb
and
push
dec
scas
imul
adc
push
mov
call
inc
inc
test
add
retf
repnz
jae
add
and
popa
and
mov
cs
mov
cli
mov
sbb
int3
ins
das
retf
scas
sbb
iret
mov
jno
dec
add
test
dec
inc
cmp
ins
sub
mov
xchg
and
clc
(bad)
mov
or
inc
cmps
call
fisttp
mov
retf
das
push
mov
aam
js
mov
jmp
arpl
dec
jno
cdq
xor
inc
xchg
mov
mov
sti
aad
inc
in
mov
xor
cwde
inc
jne
outs
out
repnz
jmp
loop
adc
test
sub
hlt
dec
jmp
inc
push
cmp
dec
adc
lea
and
in
cs
sahf
ret
and
dec
sbb
(bad)
bound
inc
pop
mov
adc
ja
push
push
mov
add
into
ss
cmps
dec
dec
inc
pop
lahf
popf
push
inc
mov
pusha
adc
loopne
leave
mov
mov
sti
inc
cmp
inc
cmp
inc
push
in
fucomp
cmp
xor
adc
and
imul
in
ror
les
js
mov
adc
xchg
or
cwde
jp
out
mov
ret
jge
cmps
dec
data16
adc
dec
dec
ss
ins
sbb
ds
jl
jl
or
xor
jbe
pop
and
shl
inc
sub
imul
icebp
push
in
jno
adc
pop
mov
mov
data16
imul
ja
sub
inc
sbb
xor
and
pop
fldenv
sub
push
and
cmp
test
out
(bad)
xchg
cwde
push
inc
inc
inc
sbb
mov
cmp
xchg
mov
adc
test
jno
std
addr16
pop
ss
ret
mov
stos
scas
test
in
pop
xchg
push
pop
enter
jno
in
std
stos
outs
sbb
dec
mov
mov
fwait
aad
outs
imul
push
pop
fnsave
es
outs
adc
mov
std
stos
lods
iret
push
cmp
sub
mov
fcom
pop
mov
in
jl
mov
arpl
jne
add
and
xchg
push
sub
loop
push
in
ins
inc
xchg
mov
pop
push
std
out
or
jmp
pop
adc
mov
mov
inc
push
out
mov
jg
push
fbld
xchg
push
sub
call
push
imul
mov
fdiv
sbb
jl
xor
outs
call
fwait
dec
mov
push
retf
sub
fistp
sub
cmp
mov
jno
xor
cmp
inc
sbb
push
xor
xor
sbb
xor
fs
dec
mov
fist
in
or
push
out
or
addr16
in
or
inc
stc
push
cwde
outs
cld
mov
jle
mov
std
fsubr
cmp
stos
mov
cwde
dec
xchg
mov
or
mov
or
in
cmp
mov
mov
mov
push
push
pop
inc
mov
and
sbb
pushf
outs
lahf
xchg
pop
xor
call
sub
frstor
sbb
(bad)
fdiv
scas
mov
cmps
mov
xchg
fiadd
mov
inc
jle
addr16
cli
jmp
push
add
dec
ret
mov
cmp
add
mov
sub
jge
movs
imul
add
dec
pop
sub
movs
and
lahf
stos
pop
outs
mov
inc
mov
jmp
mov
test
imul
xor
and
loopne
pop
ficomp
xchg
inc
cmp
jns
imul
xchg
cwde
sub
fdiv
and
aam
shl
add
dec
leave
jg
add
adc
xor
arpl
pop
pop
jmp
xlat
inc
cmp
in
adc
cs
ret
cs
call
shl
inc
into
int
aam
jmp
jo
mov
fdivr
(bad)
xor
fwait
(bad)
cdq
clc
cmps
repz
bnd
xlat
hlt
sub
outs
mov
(bad)
push
and
into
push
xchg
ja
jmp
stos
out
mov
mov
xchg
sbb
gs
mov
stos
inc
jge
cwde
and
not
push
cmp
cmp
fwait
mov
mov
add
pop
or
inc
data16
inc
add
fcomip
je
jnp
push
mov
mov
jl
icebp
sub
cld
or
sbb
jmp
or
ins
xor
push
pop
adc
mov
pop
mov
sahf
mov
dec
dec
adc
jp
cmps
in
pop
cmp
ficomp
jno
xor
js
jbe
dec
cli
popf
sub
test
mov
or
pop
arpl
leave
add
push
in
mov
mov
fsubrp
inc
aad
or
call
aas
pop
into
mov
adc
adc
xchg
hlt
out
xchg
gs
add
add
jl
dec
lea
shl
sub
retf
hlt
ins
and
aam
push
xor
fimul
fcom
(bad)
cmp
shl
dec
xor
jae
add
fmul
movs
dec
and
call
int3
rol
stos
jmp
call
push
test
cmp
sbb
mov
cmp
ds
jg
inc
cmc
fsubr
gs
fidiv
sbb
adc
int
cmp
sahf
xor
pop
adc
xchg
or
xchg
sbb
push
xchg
adc
out
mov
lahf
xor
std
in
shl
mov
cs
sub
xor
jle
or
or
in
ja
test
xor
dec
or
mov
(bad)
stc
and
sub
jmp
(bad)
data16
jne
xor
movs
add
inc
add
out
or
push
(bad)
sub
pop
sub
xor
outs
push
imul
enter
sbb
adc
(bad)
or
fidivr
push
xlat
inc
mov
cmp
cmps
loope
xchg
xchg
ret
aaa
mov
jge
addr16
enter
mov
sub
iret
lods
leave
add
sbb
mov
test
cmp
jb
xchg
outs
and
mov
adc
mov
inc
test
enter
push
lds
hlt
dec
xor
dec
and
push
mov
or
pop
adc
std
adc
les
fmul
xor
call
ret
das
pop
mul
mov
jne
dec
dec
test
scas
or
lahf
inc
ss
push
adc
lods
ret
cmp
nop
test
cdq
cdq
daa
es
outs
js
push
jne
neg
rcr
dec
mov
mov
dec
and
and
xchg
pop
pushf
inc
stc
jno
and
js
push
and
inc
mov
pushf
xlat
sub
cmp
imul
sbb
cdq
mov
out
push
add
jmp
jns
cdq
test
in
repnz
push
and
enter
mov
stc
add
mov
push
mov
pop
mov
ret
mov
aad
pusha
mov
cmps
cdq
and
cs
rol
cmp
mov
stos
mov
les
int3
sti
bound
stos
adc
mov
in
jns
out
ret
popa
sbb
push
and
in
mov
push
adc
mov
imul
cmp
repnz
xchg
push
jae
mov
pop
and
sub
jo
and
mov
jo
inc
cmp
jnp
loop
lods
addr16
cmc
add
lock
xchg
test
aas
pop
add
inc
jae
retf
popf
in
loope
dec
into
mov
push
pop
les
loopne
sbb
cmp
inc
mov
sub
and
imul
retf
inc
aas
lods
(bad)
in
je
ss
out
cmp
pop
gs
ins
int
push
repz
jmp
xchg
scas
and
fistp
adc
mov
push
inc
fstp
pop
(bad)
mov
mov
mov
mov
xchg
dec
ds
jecxz
cmp
or
inc
mov
and
push
enter
clc
xor
inc
pop
sbb
fnstenv
aaa
imul
sub
daa
pushf
fsub
adc
inc
(bad)
out
xlat
cmp
jl
push
inc
cdq
sbb
pop
pop
cmp
push
cmc
xchg
ret
dec
and
pushf
or
mov
pop
pop
pop
inc
std
push
cmovno
xchg
jnp
rol
scas
pop
push
mov
or
mov
push
adc
js
adc
fisub
push
xchg
dec
cmp
add
mov
xor
icebp
inc
jmp
dec
jbe
cwde
call
call
jg
shr
test
ror
sub
xchg
cli
data16
mov
daa
shr
(bad)
fistp
xchg
adc
adc
jbe
mov
mov
mov
ins
jo
mov
and
inc
gs
pop
fs
xchg
das
arpl
in
jmp
lahf
lods
enter
pop
and
ins
pop
out
(bad)
mov
sbb
mov
inc
pop
jne
fild
adc
jge
push
push
imul
iret
cmp
dec
xchg
sbb
in
loopne
test
push
std
dec
repnz
pop
scas
aas
vmwrite
test
xor
arpl
jbe
push
in
xchg
(bad)
push
add
es
xchg
fs
sbb
pop
dec
iret
lods
test
cmp
push
mov
ins
hlt
xchg
pop
or
or
(bad)
adc
je
ret
inc
cmp
ret
mov
cmp
fwait
push
sar
xor
lahf
ror
and
retf
sub
lods
stc
into
or
shr
fwait
int3
xor
jnp
cmp
sub
ret
xor
dec
test
dec
in
cmp
loope
cwde
loop
xor
mov
popa
dec
inc
lock
mov
ret
nop
xchg
sub
adc
sbb
xchg
pop
push
and
adc
lea
xor
popa
mov
(bad)
xchg
and
fisttp
mov
or
sbb
fisubr
sub
xor
scas
(bad)
scas
push
leave
imul
fisttp
jo
dec
mov
rcr
dec
xchg
cld
sub
adc
in
pop
sar
or
adc
lahf
mov
sub
ins
imul
or
dec
or
stos
or
mov
push
jnp
xchg
mov
out
loopne
adc
jo
pusha
loop
mov
hlt
(bad)
test
jmp
and
jmp
je
xor
sahf
cmp
retf
mov
fs
and
in
sbb
sub
sub
mov
enter
movs
mov
cmc
imul
(bad)
out
cmc
xchg
xchg
sub
mov
jo
push
adc
ret
and
push
mov
leave
mov
jmp
stc
or
stos
pushf
jnp
and
shl
icebp
sbb
dec
cmps
out
and
inc
pop
je
adc
repnz
ret
shr
push
call
hlt
test
xchg
dec
stos
mov
pop
dec
iret
dec
sub
mov
jmp
icebp
test
mov
aam
add
mov
push
xor
or
mov
fdiv
pop
mov
std
pop
inc
inc
xor
in
push
push
out
jmp
dec
ret
xchg
int3
sub
adc
and
fistp
(bad)
mov
mov
fs
nop
inc
jae
pop
cmp
int3
adc
push
mov
mov
push
int3
(bad)
fstp
add
out
shl
lods
mov
jp
jae
in
popa
mov
in
xchg
int
or
pop
jno
and
enter
out
pop
pop
mov
jecxz
jmp
push
seto
or
fild
popf
popf
push
retf
sahf
retf
or
shl
lea
mov
cmps
xchg
xchg
push
pop
(bad)
push
popa
or
data16
fild
gs
ins
mov
mov
js
push
xchg
mov
and
and
push
sbb
jmp
adc
cmp
mov
push
arpl
and
xor
in
dec
(bad)
call
int
mov
and
mov
leave
js
xlat
in
jae
pop
sbb
(bad)
jnp
movs
lock
sti
xlat
test
add
call
pop
add
je
gs
test
push
lahf
push
adc
div
push
adc
or
fdiv
in
adc
jno
out
pop
pop
fs
pop
push
and
in
cmp
cmps
(bad)
push
dec
mov
xchg
push
jmp
ja
xlat
fadd
cmp
loope
cmp
push
inc
(bad)
cmp
mov
mov
xchg
xchg
sbb
mov
jo
jae
or
popa
xchg
or
pop
outs
fimul
ret
int
ins
mov
sbb
cmp
loope
loop
(bad)
test
movs
pop
int3
jge
fild
jo
popf
pusha
push
push
call
mov
or
push
repnz
das
jmp
mov
pop
mov
add
and
scas
jge
dec
sar
adc
jns
mov
cmp
mov
dec
fs
and
fidiv
shr
stc
enter
xchg
mov
lahf
xlat
mov
out
add
push
pop
mov
fld
adc
data16
mov
jns
ror
(bad)
stos
ret
mov
imul
push
imul
and
sub
cmp
xor
mov
mov
cmp
jmp
inc
push
cmp
xor
ja
das
mov
push
sub
add
dec
cmps
enter
inc
daa
enter
int3
push
sysret
adc
rcr
xlat
arpl
lea
xor
adc
les
rol
mov
(bad)
xchg
sbb
cwde
inc
jb
jmp
push
adc
test
mov
cmps
dec
push
popa
fst
sub
or
pop
js
cmp
or
dec
jmp
jmp
add
rcl
mov
push
cld
pushf
pop
aam
xchg
or
pop
inc
push
fisttp
xor
ror
xchg
xor
mov
adc
xor
mov
and
lods
xchg
jne
les
sbb
aad
push
imul
mov
push
ins
stc
scas
lahf
loope
mov
xchg
sbb
sbb
fwait
in
std
mov
inc
sti
aaa
lock
sbb
and
add
ja
xor
jns
jecxz
out
xchg
mov
sub
dec
or
dec
sbb
scas
mov
cs
imul
push
xchg
adc
inc
enter
lds
mov
out
dec
ja
in
mov
mov
leave
ror
movs
in
icebp
mov
out
jne
aam
aad
xor
jnp
mov
popf
outs
mov
push
mov
popa
or
sahf
cmp
push
gs
mov
mov
fstp
test
hlt
xor
stos
jmp
or
mov
daa
jbe
sub
mov
ins
movs
fldlg2
dec
lock
stc
dec
imul
pop
(bad)
imul
cmp
icebp
arpl
adc
jbe
add
jbe
jecxz
sub
jne
repz
mov
xor
push
fisubr
in
fdiv
sub
dec
lods
push
sbb
fisub
ss
xor
ss
nop
retf
in
xchg
cmp
bound
cmps
psubq
(bad)
ror
(bad)
(bad)
mov
inc
test
mov
xchg
in
xchg
mov
clc
sti
(bad)
sub
mov
or
sub
mov
fs
enter
inc
fdiv
pop
call
push
scas
call
(bad)
out
or
mov
imul
pusha
cmp
or
mov
test
inc
inc
retf
fmul
lea
mov
mov
fsubr
jo
or
aas
mov
and
sub
sub
dec
bound
mov
repz
div
inc
fisub
xchg
mov
inc
aam
sbb
pop
ins
inc
mov
push
cmp
xchg
(bad)
cmc
popa
xchg
mov
inc
cmc
xlat
xchg
cmp
(bad)
jmp
lods
sub
and
pop
xor
inc
mov
movs
dec
stos
jno
std
jecxz
mov
xor
sbb
adc
or
adc
xchg
push
jge
shr
pop
inc
mov
ja
sbb
pop
pop
push
stc
loopne
sbb
(bad)
or
cmp
mov
push
(bad)
shr
and
push
iret
sub
cmp
loopne
dec
mov
icebp
inc
ds
imul
arpl
pop
clc
adc
les
xor
adc
test
fld
or
clc
cmp
xchg
xchg
mov
ret
nop
dec
out
clc
daa
sub
js
mov
add
movs
je
cmc
out
ins
or
test
and
aad
jns
outs
inc
mov
pop
sub
aas
leave
push
jno
out
cmp
cwde
sub
mov
and
jae
movs
retf
and
jle
test
cld
pop
push
mov
xor
mov
gs
fbstp
inc
fidivr
ret
jnp
sar
repnz
sbb
jns
jbe
fs
ret
in
mov
dec
dec
retf
cs
mov
ror
scas
test
push
sbb
call
cld
stos
jno
fsub
mov
pop
push
push
xor
push
push
rcl
in
add
and
add
xchg
inc
je
cld
test
mov
pop
cdq
and
nop
aaa
push
leave
xor
ins
push
inc
dec
repnz
mov
mov
ret
sti
jno
sbb
mov
sti
rcl
sbb
push
jno
and
dec
jecxz
arpl
jae
jmp
add
mov
add
push
push
arpl
ins
gs
push
cmp
mov
sti
push
mov
ins
loope
adc
jecxz
setg
inc
je
cmc
icebp
aaa
jns
nop
or
loope
nop
push
mov
cmp
add
sbb
cmps
stc
lea
fidivr
and
cmps
dec
sbb
xor
xchg
in
inc
jle
imul
adc
div
jo
adc
adc
sbb
pop
loop
jle
xchg
clc
or
pop
call
jg
(bad)
in
cmp
mov
mov
sub
scas
ds
lods
std
jle
sub
xlat
and
je
sub
cmp
add
jl
mov
das
es
(bad)
ret
jnp
xchg
std
das
push
jmp
daa
stc
xchg
aaa
inc
xchg
mov
(bad)
sti
stos
mov
mov
xor
mov
cli
cmp
cmp
cmp
jbe
mov
xchg
dec
jmp
dec
(bad)
jmp
add
mov
inc
and
data16
test
mov
adc
or
cli
add
dec
dec
jmp
dec
dec
xchg
(bad)
pop
jg
(bad)
adc
popf
popf
or
repz
dec
aas
pop
icebp
mov
xor
adc
cdq
pop
int
xor
ss
repz
adc
fmul
pusha
xchg
jmp
dec
jne
pop
jge
xor
loopne
jmp
out
xor
cmp
inc
push
mov
sub
and
rol
aaa
pop
test
pop
popa
stos
jp
and
rcl
bnd
mov
sub
jb
mov
sub
dec
and
rcr
into
jno
cli
ins
test
dec
retf
aad
mov
jmp
aas
mov
or
adc
pop
gs
cli
stc
rol
sbb
loopne
mov
and
loop
loope
dec
xor
cs
cmps
push
stos
aam
aad
sbb
aas
(bad)
pop
push
mov
mov
xor
shl
add
mov
push
std
imul
dec
ficom
sar
push
(bad)
add
scas
hlt
cwde
loope
sar
dec
(bad)
jecxz
(bad)
jg
or
shl
sar
pop
repz
xor
jns
dec
stc
add
and
mov
rcl
fild
mov
jmp
fisttp
mov
dec
int3
mov
into
push
push
mov
sti
int
dec
sbb
sub
mov
xor
aam
lods
mul
ins
lock
fwait
sub
push
xchg
rcr
pop
aad
mov
into
mov
sub
call
mov
push
dec
xchg
sti
aam
sub
cmps
(bad)
cwde
sahf
aaa
int
mov
jae
cmp
movs
idiv
adc
(bad)
in
jecxz
div
pusha
out
fimul
jle
and
jb
ins
adc
imul
fcom
fdivr
xor
jns
mov
or
test
stc
std
test
xchg
adc
mov
fadd
dec
cmp
or
inc
shr
mov
xchg
adc
and
mov
(bad)
sbb
(bad)
cmp
int
aaa
inc
in
and
inc
in
int3
push
xchg
psubusb
ds
and
nop
stos
icebp
mov
push
jb
cmc
int3
test
inc
loopne
pop
inc
mov
aaa
inc
stos
xlat
arpl
xchg
bound
mov
scas
mov
lahf
inc
test
das
inc
add
push
call
fild
inc
fucomp
inc
push
or
push
fcmove
ret
inc
addr16
test
mov
jo
cmp
add
sub
movs
lods
outs
xchg
mov
pop
div
bound
pop
mov
mov
repz
call
inc
push
dec
pop
dec
inc
push
pop
inc
cli
pop
pop
sbb
fwait
loope
ins
fsub
lock
pop
enter
cmp
cmp
adc
jecxz
and
sub
add
pop
sahf
sbb
(bad)
adc
es
inc
lods
mov
or
mov
jns
and
cmp
sbb
jmp
push
dec
fisub
daa
aaa
jle
movs
sub
xchg
adc
jmp
pop
fstp
pxor
jb
sub
ss
or
push
add
pop
in
push
clc
jmp
or
icebp
out
mov
pop
sub
pop
push
xor
gs
dec
and
cli
adc
int3
cli
mov
inc
lea
sbb
xchg
jp
shl
fidivr
cmp
(bad)
push
or
dec
sub
jge
daa
outs
sbb
sbb
fcom
aaa
sbb
js
fist
aaa
dec
lods
dec
test
fmul
jecxz
test
and
into
mov
xchg
popf
mov
xchg
retf
jo
dec
ja
add
or
cmp
je
push
push
test
mov
hlt
repz
jle
mov
lds
pop
fldenv
fldcw
xchg
test
add
mov
(bad)
mov
sub
ret
stos
(bad)
mov
push
std
mov
xchg
ret
xchg
sub
push
and
inc
sahf
movs
mov
and
jle
mov
push
inc
pop
rcl
sar
push
sbb
loopne
mov
mov
loope
sbb
dec
add
xchg
les
sbb
adc
cli
dec
outs
test
cmp
cli
sbb
hlt
stc
rol
jg
jle
daa
outs
xchg
imul
mov
jns
xchg
in
mov
mov
and
je
(bad)
pop
mov
or
push
mov
xchg
ret
inc
cdq
sar
fisubr
cmp
out
ins
outs
cmp
(bad)
xor
xchg
outs
pop
mov
ja
mov
and
jge
cmp
ss
jge
adc
pushf
mov
retf
xor
xchg
mov
add
inc
fsub
pop
in
mov
(bad)
cmp
and
mov
xchg
pop
enter
shl
sbb
adc
fld
stc
rol
adc
xor
push
(bad)
cmps
mov
aam
sub
repnz
xchg
inc
cmp
addr16
sbb
mov
dec
fnstsw
test
rcl
mov
rcl
sbb
rol
jecxz
popf
pop
xchg
sti
mov
mov
or
xor
mov
ins
mov
add
jnp
mov
fwait
mov
enter
aam
ins
or
call
push
fcomip
(bad)
lods
shl
mov
dec
out
xor
jns
lods
push
mov
in
and
test
jle
fldcw
loopne
shl
add
add
imul
or
stos
addr16
ret
mov
cmps
icebp
mov
and
push
call
movs
fst
mov
addr16
in
sub
cmp
xor
shr
push
inc
aaa
dec
movs
xchg
xchg
sub
outs
pushf
cwde
cdq
ins
mov
push
stc
outs
retf
or
mov
call
into
addr16
push
mov
or
jns
add
dec
and
push
inc
pop
bsf
call
mov
(bad)
sar
test
test
arpl
sbb
repz
inc
mov
out
push
xlat
inc
mov
ror
xchg
add
cmc
ins
stc
loopne
xor
xchg
mov
mov
int
pushf
mov
xchg
add
xor
dec
and
mov
(bad)
test
and
add
into
les
or
jl
adc
ins
ret
cmp
push
adc
mov
fldcw
les
cmps
fstp
xchg
xchg
imul
xchg
sbb
cmp
dec
xchg
je
lods
stc
mov
fcomp
pop
mov
mov
call
inc
pushf
cmp
(bad)
(bad)
retf
cli
mov
push
imul
sbb
cmc
adc
xor
hlt
and
push
retf
in
mov
retf
cmc
or
jecxz
(bad)
pushf
loope
aad
xchg
jnp
push
(bad)
in
ins
jmp
lock
mov
lds
inc
mov
dec
stos
sub
sbb
or
dec
js
arpl
cmp
sub
loop
add
xchg
fld
leave
test
cwde
mov
cmps
shr
xor
sbb
js
inc
fsub
rcl
stc
mov
sub
or
(bad)
xchg
jp
push
arpl
inc
mov
int
adc
lds
imul
test
arpl
arpl
iret
pop
outs
add
mov
and
push
cmovne
mov
pusha
imul
and
sub
sbb
sbb
ret
mov
push
ficomp
adc
cmp
or
les
dec
fldenv
add
adc
aaa
or
xchg
xor
aam
sub
mov
fsubr
mov
pop
arpl
fild
push
sbb
push
inc
rcl
hlt
dec
jbe
push
jmp
movs
push
ins
repz
mov
jecxz
pop
mov
aam
call
cdq
and
loope
dec
std
js
out
and
jp
ins
xor
dec
inc
sahf
aad
cs
leave
xchg
loopne
pop
add
rcr
pusha
ins
or
ror
or
jae
in
ret
mov
xlat
adc
in
fs
mov
mov
jbe
add
fwait
inc
out
int
fucomip
mov
sbb
xchg
jo
jle
mov
ja
add
or
push
mov
cs
inc
jle
popa
xchg
es
movs
movs
pop
jo
cmp
mov
imul
ins
sub
jle
aad
jmp
scas
xchg
dec
out
mov
enter
add
adc
gs
and
mov
mul
sbb
sub
adc
mov
int
push
xchg
sahf
(bad)
fsub
repnz
cmp
pop
retf
enter
ja
movs
shl
xor
jmp
xchg
mov
jle
inc
aam
sbb
pop
loop
push
fild
adc
mov
int3
test
cmps
neg
dec
out
out
rcr
sub
bound
xchg
jmp
adc
mov
xchg
mov
sub
add
in
sub
jb
adc
nop
inc
or
(bad)
push
adc
and
add
mov
outs
(bad)
repz
xchg
mov
(bad)
fisub
popa
(bad)
and
mov
mov
scas
popa
test
int
mov
(bad)
pop
mov
ins
and
out
(bad)
rcl
push
in
lds
movs
push
lock
ror
lahf
sub
mov
dec
or
cdq
inc
sbb
sbb
adc
mov
imul
pop
mov
mov
adc
sahf
adc
mov
push
das
ds
xchg
xor
lds
cmp
aad
ror
mov
mov
out
and
push
mov
ret
out
lods
ss
jbe
out
ja
and
call
repnz
movs
loop
push
rcr
or
sub
loopne
sbb
cwde
pop
dec
add
cmp
jbe
push
xchg
dec
xchg
cmp
push
imul
push
idiv
popa
inc
mov
(bad)
mov
mov
psubsw
(bad)
repnz
xchg
push
pop
int3
lods
xchg
and
mov
jo
mov
xchg
xchg
inc
addr16
gs
mov
sbb
sar
pop
mov
fnstenv
pop
icebp
push
cdq
fisub
fbstp
mov
mov
not
scas
pop
in
mov
inc
cwde
cmps
out
test
jbe
scas
xchg
fst
mov
mov
imul
and
adc
(bad)
xchg
mov
in
cmp
fstp
imul
sbb
ret
inc
mov
test
cmp
int3
int3
mov
out
ds
jb
jbe
test
pop
aam
cdq
xchg
jecxz
pop
or
and
dec
xor
jo
cmp
mov
jb
mov
retf
xchg
mov
shl
mov
inc
(bad)
test
mov
fldcw
dec
fs
jecxz
cmp
data16
inc
jb
imul
call
lds
pop
sbb
(bad)
mov
hlt
test
push
fcomp
mov
inc
push
cmp
fmul
pop
sbb
out
push
in
stos
leave
jb
or
adc
push
aas
xchg
arpl
test
enter
jae
xor
mov
mov
jmp
imul
(bad)
rol
adc
mov
inc
loop
std
cmp
lds
dec
repz
cdq
dec
dec
gs
les
fdivr
psrld
retf
dec
jae
sbb
iret
adc
dec
pop
push
ins
adc
sbb
lahf
jle
test
in
imul
in
mov
nop
nop
(bad)
or
xlat
es
or
sub
adc
mov
movs
mov
push
add
cs
ins
out
dec
add
arpl
rol
cld
sbb
or
mov
push
pop
sahf
sub
and
pop
mov
daa
(bad)
out
pop
xchg
lds
xor
pop
stos
les
mov
ss
cmps
jl
push
dec
push
cmp
mov
adc
rcr
movs
add
imul
push
inc
mov
pop
jo
ret
push
fs
dec
push
inc
sar
movs
js
aaa
cmp
mov
loope
and
sub
nop
jmp
out
mov
cmp
iret
pop
ds
loopne
ffree
push
jb
loopne
out
sbb
out
int3
mov
shl
(bad)
in
cmps
mov
sbb
xchg
fnsave
sbb
push
xor
outs
mov
lock
movs
cmp
ins
inc
fdiv
cmovl
dec
cmp
mov
xor
dec
jmp
test
gs
ss
push
push
test
out
push
das
sub
dec
mov
xor
ss
jecxz
scas
jecxz
(bad)
(bad)
sbb
pop
add
xchg
jl
pop
jno
xchg
jmp
mov
shl
mov
scas
and
(bad)
pop
sub
xchg
add
push
jmp
jp
xchg
aad
addr16
mov
(bad)
es
call
fnstcw
xchg
jmp
inc
mov
jb
inc
push
fiadd
sub
sub
out
stos
xchg
xchg
xchg
aaa
in
(bad)
mov
xchg
pushf
or
jo
mov
ins
arpl
and
push
push
and
mov
sub
dec
inc
sub
mov
int3
mov
pop
inc
add
mov
aaa
in
sub
daa
and
dec
xchg
and
out
les
imul
movs
into
or
pop
imul
sti
mov
inc
adc
out
jbe
addr16
fcmovb
adc
mov
adc
and
mov
xor
js
data16
jnp
fisubr
push
test
cs
js
mov
push
add
int3
dec
adc
dec
sahf
push
lock
pop
jg
in
mov
push
inc
ins
cmp
jge
aaa
pop
jle
adc
lods
loopne
pop
add
int3
cwde
cmp
(bad)
dec
jbe
fld
dec
jb
in
jae
jge
fiadd
dec
push
adc
out
mov
xor
xchg
popa
mov
call
jl
movs
in
add
add
call
mov
pop
pop
adc
jmp
push
retf
in
nop
in
pop
nop
mov
cmc
dec
inc
enter
mov
or
dec
xor
(bad)
leave
jmp
mov
movs
jecxz
(bad)
lods
xchg
or
imul
mov
sub
mov
shr
lock
or
adc
mov
push
rcr
fst
and
cmp
mov
xchg
xor
(bad)
fidivr
add
mov
xchg
jns
xchg
mov
rol
call
int
mov
push
jno
sub
mov
mov
fsubr
into
dec
jmp
dec
cmc
mov
mov
bound
mov
outs
rcl
dec
dec
inc
mov
push
hlt
call
push
ins
gs
fisttp
int3
jmp
mov
jg
dec
and
push
or
pop
xor
stc
inc
pop
fisttp
lock
and
mov
and
xchg
dec
in
add
pop
dec
nop
iret
inc
or
pop
cmc
xor
ins
pop
mov
inc
add
stos
push
adc
mov
cmps
xchg
loope
mov
mov
stc
and
push
cmp
adc
dec
jg
cmps
sub
adc
inc
fdivp
(bad)
inc
leave
lds
enter
mov
add
fs
dec
mov
in
in
and
repz
mov
fimul
and
cli
and
test
in
mov
sub
add
or
adc
stos
jnp
data16
push
mov
jl
push
mov
jmp
add
fimul
(bad)
dec
and
dec
lahf
pop
cmp
inc
jge
push
sbb
scas
sub
jg
xchg
out
jae
cmp
sahf
call
jl
outs
push
mov
ins
jl
mov
movs
dec
bound
adc
repz
outs
cmp
add
test
pop
lods
sbb
cwde
das
scas
int
mov
popa
fdiv
or
pop
or
push
rcr
pop
push
stos
repnz
or
das
mov
mov
inc
ss
lods
sbb
mov
cld
cmp
sbb
xlat
outs
dec
sub
xchg
lods
jmp
mov
push
mov
xchg
mov
xchg
sbb
pop
cmp
dec
rcr
jmp
nop
and
ds
xor
fcomp
pop
push
fwait
loop
xor
xchg
je
ds
(bad)
pop
cmp
out
icebp
icebp
mov
pushf
or
outs
lahf
les
or
in
dec
add
les
dec
cmp
cs
repz
fisttp
adc
adc
jno
(bad)
les
cmp
ret
sub
cmp
test
lods
or
aad
dec
or
jnp
sub
into
not
das
loop
fwait
in
cmp
sub
and
lods
out
xchg
inc
xor
pusha
mov
cmps
arpl
jno
mov
inc
test
(bad)
push
mov
scas
and
nop
sub
xchg
bound
hlt
dec
movs
xor
jb
sub
jae
cld
or
stos
and
fisub
and
dec
bound
xor
nop
jne
pop
add
jg
loope
push
mov
sub
hlt
(bad)
xchg
pop
je
nop
out
pop
push
test
or
and
sub
(bad)
loopne
out
imul
test
cmc
and
dec
jge
loop
jmp
mov
imul
xor
(bad)
add
inc
or
test
or
rol
fbstp
out
stc
add
sub
mov
pop
jp
mov
add
sbb
sub
jecxz
test
dec
mov
addr16
ror
aad
call
ja
cmp
sahf
ret
sub
ins
bound
jle
in
dec
xlat
fimul
xor
sub
and
xchg
stc
push
mov
cmp
mov
test
or
or
add
sub
inc
cmp
xor
movs
xor
sub
ins
stos
ins
cmp
cwde
sbb
mov
imul
sbb
adc
jecxz
(bad)
rcl
(bad)
jmp
xchg
and
lods
or
(bad)
loope
cmps
out
xchg
mov
and
(bad)
jmp
inc
dec
inc
pop
cdq
shl
push
cld
popf
imul
cmps
cli
aad
in
into
mov
jno
xor
loopne
arpl
mov
xchg
sti
clc
jmp
add
aad
fucomp
cmp
or
cwde
adc
jmp
cmp
jae
sbb
mov
pop
repnz
sub
mov
mov
push
pop
sub
arpl
(bad)
stc
popf
mov
retf
pop
sub
cmp
out
or
pop
add
in
xchg
xor
lock
mov
pop
cmps
popf
mov
stos
or
xchg
jns
add
mov
mov
pop
push
mov
out
or
icebp
outs
jmp
mov
sub
ret
and
inc
rol
inc
push
push
ins
xchg
mov
dec
xor
push
ret
sbb
sbb
add
ret
xchg
ins
das
jbe
or
(bad)
sar
mov
mov
xor
cmc
out
jbe
(bad)
ret
loop
adc
mov
pop
xchg
or
and
mov
shl
int3
fild
aaa
xor
add
es
shr
mov
mov
add
popa
pop
gs
aad
pop
jle
cmp
inc
xor
push
xor
jns
pop
lahf
mov
xlat
xor
out
pop
fstp
test
jo
pusha
and
(bad)
icebp
xor
fimul
arpl
mov
(bad)
jmp
outs
xchg
int
dec
in
(bad)
and
in
popf
cwde
scas
pop
and
sbb
sub
or
loope
and
pop
mov
add
jno
in
imul
retf
jmp
mov
xchg
cmc
mov
inc
sar
js
das
xor
(bad)
and
pop
add
xchg
add
std
fld
or
(bad)
xor
sbb
mov
inc
sbb
cld
jp
xor
neg
test
shl
jne
xchg
xlat
jp
cs
data16
outs
stos
shr
xor
mov
push
scas
or
sbb
(bad)
ja
pushf
inc
cmps
shl
aam
jne
ret
data16
adc
cmc
daa
out
mov
mov
and
es
pop
into
adc
test
inc
arpl
or
(bad)
or
xchg
jmp
fsubr
test
push
add
ret
shl
push
pop
push
shr
dec
fwait
push
inc
or
cmps
xor
push
jmp
cli
cli
cmp
sbb
push
rol
push
hlt
dec
ss
pop
mov
push
push
fwait
jne
or
lea
cmp
and
xchg
imul
cmp
or
jne
sbb
fmul
push
lods
push
adc
test
jg
mov
cs
cmc
xchg
mov
xchg
mov
outs
jne
rcl
and
fs
cmps
cdq
loopne
sbb
(bad)
dec
and
jbe
sub
daa
outs
loopne
adc
fld
lods
mov
jl
pop
xchg
inc
adc
mov
fisttp
stc
(bad)
in
aam
cmp
fcom
mov
test
mov
and
ja
leave
fsubr
repnz
test
xchg
in
dec
sbb
xchg
repnz
adc
sbb
xchg
pop
adc
jmp
dec
inc
in
sub
cmp
cwde
cmps
out
mov
mov
mov
or
mov
pop
repnz
jns
lock
or
and
push
ins
pop
dec
mov
cli
mov
(bad)
xchg
call
cmp
clc
mov
hlt
es
or
push
les
mov
retf
and
popa
ret
cdq
sahf
fimul
xor
sub
adc
loop
mov
mov
mov
jmp
push
data16
or
(bad)
js
ret
xchg
jle
js
adc
popf
jle
js
jge
and
sub
loopne
data16
xor
xchg
dec
inc
js
int3
add
in
aas
cmc
inc
nop
cwde
jmp
push
inc
add
mov
aas
in
loop
fstp
int
test
div
hlt
std
xchg
push
push
(bad)
jmp
fwait
lds
xor
cmp
ins
cdq
sbb
xor
mov
ins
pop
sbb
aaa
sbb
xchg
inc
js
mov
out
pop
push
imul
lahf
arpl
push
fisub
imul
push
lods
jae
add
jne
inc
mov
jge
mov
or
push
pop
sar
jb
mov
aad
xchg
sub
inc
pop
aam
(bad)
stc
ja
inc
adc
sbb
les
and
xchg
jmp
scas
loop
jae
add
inc
das
mov
mov
ins
in
sub
inc
mov
sti
push
pop
fcmovnu
daa
adc
or
jns
or
mov
ins
mov
lods
push
push
inc
mov
repz
iret
jae
lahf
sti
pop
test
test
push
dec
inc
sbb
ret
xchg
call
daa
fbstp
data16
sub
and
lahf
add
cmc
xor
das
push
inc
test
xlat
pop
out
push
loop
inc
jp
xor
pop
cmp
nop
cmp
daa
repnz
sti
outs
aam
and
arpl
mov
lahf
inc
fs
ins
cwde
or
pop
fwait
lahf
xor
cmp
dec
dec
hlt
sub
pop
call
lock
les
cmps
cld
xor
ret
jecxz
mov
push
cmp
mov
loopne
in
(bad)
xchg
sub
pop
adc
pop
pop
ja
int3
jecxz
loope
mov
xor
fwait
sub
mov
push
mov
cmc
jb
pop
jmp
or
inc
inc
push
adc
cdq
cmps
mov
into
ret
mov
mov
in
mov
ret
test
clc
push
out
push
pusha
(bad)
push
mov
push
imul
pop
rcl
(bad)
pop
mov
cli
enter
in
hlt
mov
push
add
inc
sub
popf
hlt
in
scas
add
mov
out
inc
fwait
dec
mov
fistp
inc
pop
test
fs
mov
lock
mov
push
mov
cli
std
es
gs
not
rcr
mov
shr
mov
out
mov
retf
rcr
jecxz
das
nop
mov
xchg
push
mov
in
lahf
jp
dec
mov
jnp
xchg
and
inc
out
or
call
jecxz
icebp
rcr
fnstenv
cmp
ss
hlt
fwait
cmps
shr
mov
clc
jnp
push
sbb
pop
cmps
(bad)
pop
jns
cs
xor
ficom
mov
mov
jbe
(bad)
fadd
in
sbb
aas
in
addr16
inc
movs
ror
adc
cmp
out
push
in
ret
enter
mov
popa
jb
mov
(bad)
push
push
stc
in
push
sbb
adc
cwde
mov
fwait
lahf
sub
int
cmps
xchg
cmps
scas
rol
jns
mov
fdiv
mov
push
cwde
inc
jns
mov
or
stos
cmps
stos
mov
fs
inc
mov
fsubr
pop
sbb
and
aad
push
shl
sub
pop
test
fcomip
mov
fsubr
outs
dec
mov
pushf
lock
mov
jbe
push
and
fcomp
jo
xchg
xlat
aas
push
mov
push
inc
into
xlat
push
mov
xchg
int
add
mov
jmp
lahf
push
adc
sbb
mov
or
loopne
jne
bound
rol
and
shr
ror
inc
xor
cmps
and
mov
mov
sub
jb
xchg
adc
jge
adc
out
pop
pop
shr
sub
push
nop
scas
dec
push
cwde
sub
cdq
push
and
adc
push
fistp
mov
std
sub
mov
ret
rcr
call
fmul
or
jb
lds
test
sbb
call
pop
cmp
call
jge
jbe
mov
imul
mov
jecxz
or
mov
gs
jmp
arpl
cld
sbb
leave
repz
test
or
xor
cmp
push
pop
inc
jmp
jns
fild
mov
outs
add
movs
jp
dec
iret
lods
cmc
test
test
xor
xchg
or
(bad)
pop
xor
inc
dec
mov
jae
push
jmp
and
mov
(bad)
adc
stos
daa
mov
hlt
adc
popa
xchg
pop
cmp
cmp
cmps
jmp
bound
rol
sub
aam
xchg
jb
mov
add
and
xchg
xchg
mov
adc
setle
mov
je
dec
xchg
repz
sub
inc
loop
out
cmp
and
mov
xor
push
cld
cdq
jp
ins
sahf
retf
jne
ret
int
cmp
xchg
inc
in
mov
xor
arpl
add
lahf
xor
xlat
mov
push
pop
repz
push
xchg
(bad)
cmc
and
push
xor
cwde
icebp
inc
or
hlt
sbb
mov
dec
test
iret
push
mov
mov
data16
sbb
outs
adc
push
jmp
std
loop
jg
adc
adc
dec
call
add
movs
loope
scas
mov
mov
jge
push
std
scas
and
jmp
outs
outs
xor
neg
mov
pop
add
pusha
outs
test
addr16
xchg
stos
arpl
aas
inc
into
sub
ror
and
push
xchg
sar
sub
mov
pop
mov
ret
mov
adc
push
sti
xchg
cmp
and
pop
dec
mov
nop
ret
ds
jne
loopne
dec
dec
push
out
mov
lock
rol
jecxz
xor
ins
sub
cwde
fst
stc
loopne
adc
add
push
sahf
inc
or
leave
repnz
mov
jns
mov
inc
imul
sbb
fwait
xor
pop
adc
xlat
shr
push
punpcklbw
mov
mov
sbb
mov
ins
sbb
jae
sbb
push
pop
lds
xchg
cs
pop
popf
cli
mov
outs
sub
sbb
stos
fldcw
or
jnp
sub
aad
cmps
dec
(bad)
add
rol
push
in
fcmovb
test
jl
or
mov
push
mov
xchg
jl
repz
mov
ror
in
aad
and
sti
jnp
and
pushf
jno
test
jge
retf
jmp
dec
in
xchg
mov
jl
or
dec
jg
lods
adc
sub
xlat
jns
ds
sbb
ret
or
fdiv
pop
mov
mov
aas
sbb
aaa
sbb
dec
add
js
xchg
inc
call
inc
add
mov
inc
jnp
fdivr
fisub
mov
jmp
std
aam
xchg
das
jp
sub
pop
pushf
sub
dec
dec
std
xchg
inc
push
push
cmp
sbb
lods
fisub
pop
arpl
(bad)
ins
lods
sub
mov
inc
sbb
les
xor
dec
xchg
mov
js
icebp
cs
pop
cld
mov
and
fsubr
shr
ins
mov
sbb
push
mov
push
mov
fnsave
jmp
loopne
push
add
hlt
gs
fwait
xlat
adc
inc
iret
xchg
sub
jmp
aaa
lds
inc
and
sbb
(bad)
arpl
dec
pop
jo
lock
cmp
icebp
mov
je
sub
jecxz
les
retf
stc
jae
adc
test
hlt
fcom
dec
lods
xchg
sub
cmc
mov
js
xchg
rcl
mov
movs
add
lahf
mov
clc
in
out
nop
imul
sbb
rcr
dec
jmp
mov
and
clc
into
mov
in
pop
stos
jae
jge
hlt
inc
adc
jge
mov
lea
push
test
mov
xor
ins
das
pop
mov
scas
or
or
inc
adc
mov
jle
adc
fcom
(bad)
jle
xor
bound
mov
lds
inc
inc
(bad)
cmp
imul
and
xchg
loopne
retf
fs
or
xchg
xor
mov
or
(bad)
fs
imul
dec
ret
(bad)
cmps
loope
adc
inc
out
outs
adc
fmul
call
and
out
cmp
mov
dec
sbb
outs
test
or
mov
jmp
movs
jae
enter
jmpw
pop
fadd
or
shl
jg
push
mov
pop
mov
jmp
xchg
xchg
push
xchg
sbb
xchg
sar
sub
pushf
adc
out
inc
mov
jns
dec
std
mov
test
(bad)
sub
sub
adc
shl
cld
je
or
gs
repz
pop
add
mov
retf
inc
(bad)
sub
cdq
sub
lea
scas
(bad)
iret
sbb
test
mov
popa
stc
gs
push
add
inc
mov
xchg
xchg
mov
iret
(bad)
and
sbb
ret
outs
cs
in
inc
bound
popa
xchg
add
xor
and
(bad)
push
gs
(bad)
dec
pushf
mov
sub
sub
cmc
psubusw
pop
pop
(bad)
movs
sbb
ror
dec
out
cmp
and
hlt
cli
out
or
xchg
mov
add
fimul
mov
cmp
mov
xor
xor
rcr
adc
push
(bad)
std
lods
in
jo
push
xchg
cmp
lods
cs
push
cmc
out
les
mov
add
inc
mov
les
jmp
mov
sbb
pop
cmp
push
rol
push
jle
into
fucom
loope
test
push
adc
xor
neg
inc
jg
lods
mov
outs
mov
jnp
and
and
(bad)
int
and
aad
or
mov
adc
mov
jmp
jno
std
sbb
out
add
mov
cmp
outs
inc
or
pop
push
clc
lods
retf
pushf
(bad)
pusha
add
sbb
adc
nop
cmp
xor
xor
jmp
add
(bad)
lods
popf
mov
push
nop
adc
fs
cmc
(bad)
out
dec
mov
lods
mov
clc
outs
adc
aas
pop
or
test
inc
mov
daa
(bad)
cmp
xor
fadd
cdq
pop
lods
retf
jns
out
push
add
adc
mov
xchg
dec
out
pop
inc
mov
pop
aam
sbb
xchg
nop
mov
lock
inc
fwait
sub
xchg
mov
aaa
xor
ds
sbb
repnz
ds
loopne
imul
cld
movs
cli
scas
mov
ja
das
out
sahf
inc
mov
jmp
sub
lahf
sar
cmc
stos
push
out
imul
fcomp
in
retf
push
or
(bad)
(bad)
repz
ss
ror
or
xchg
outs
mov
mov
sbb
nop
mov
loopne
test
sahf
pop
inc
inc
iret
mov
adc
sub
mov
nop
imul
imul
and
mov
aam
or
sbb
shl
jns
sahf
push
sub
pusha
pop
test
dec
mov
outs
and
xor
inc
dec
push
adc
sbb
push
mov
adc
std
sub
mov
fisub
or
cmp
mov
or
mov
pop
int
fs
pop
sub
ret
call
or
dec
sub
xchg
xchg
sub
dec
adc
jno
pop
mov
call
push
inc
mov
es
adc
shl
xchg
jle
and
stos
stos
inc
aas
pop
loop
cmc
iret
sbb
out
jle
dec
ins
add
pop
retf
sti
xchg
(bad)
in
mov
adc
cmp
mov
mov
mov
cmp
mov
loop
ret
sub
add
je
cmps
dec
add
ds
xchg
push
loopne
xchg
aad
out
mov
jbe
(bad)
loopne
into
je
cmp
and
cmc
ret
ret
mov
or
mov
js
mov
cli
fstp
pop
retf
or
pop
mov
in
and
push
inc
mov
pushf
fild
outs
fsubr
les
popf
aam
cmps
popf
test
sahf
mov
ja
movs
jne
rcr
push
inc
inc
outs
cmp
(bad)
sub
dec
mov
sub
jae
jno
sbb
jg
std
dec
mov
pop
pop
fwait
mov
test
cmps
iret
push
cmp
jae
out
ret
push
lds
(bad)
scas
call
fs
dec
out
and
push
mov
out
or
jp
lods
xchg
adc
sub
sbb
mov
mov
and
and
push
mov
lods
pop
ins
lahf
fcomi
(bad)
jle
dec
pusha
and
push
or
or
fdivp
std
cmp
and
ret
mov
aaa
outs
dec
push
pushf
call
movs
mov
pop
xor
add
dec
cdq
call
mov
xchg
(bad)
loopne
adc
adc
or
(bad)
ds
retf
mov
fst
es
inc
int3
pushf
aad
fidiv
xchg
arpl
shl
rcr
mov
fcomp
sar
stos
test
adc
(bad)
aad
push
fnstcw
push
and
fcmovnu
cmp
sbb
pop
adc
imul
xor
cmp
pop
pop
push
imul
dec
pop
mov
out
xchg
pop
sbb
mov
inc
outs
call
retf
inc
and
call
mov
fsubp
aam
test
int3
leave
push
outs
inc
ss
jge
pusha
xlat
ret
loope
pop
fmul
mov
(bad)
adc
jnp
xchg
xlat
js
mov
mov
mov
fild
ret
xor
xor
aaa
or
(bad)
and
adc
jo
xor
push
inc
nop
xchg
scas
mov
push
sub
dec
mov
stos
mov
add
jnp
xor
icebp
mov
and
jbe
xchg
mov
cmps
adc
or
mov
pop
cwde
(bad)
pop
inc
jno
cmp
scas
pop
fwait
or
in
xlat
fwait
xor
lods
iret
loop
inc
sbb
sbb
and
sbb
xchg
or
mov
pop
dec
test
popa
(bad)
(bad)
aam
sub
lahf
add
jne
xchg
mov
push
fsubr
pop
cld
jmp
push
xor
xchg
dec
fisttp
sbb
je
push
stc
xor
or
sub
daa
jg
retf
jno
shr
xchg
jnp
adc
mov
mov
push
xchg
data16
mov
retf
xchg
inc
sbb
es
fsub
inc
jl
inc
repnz
xchg
push
loope
fstp
repnz
xchg
sub
ins
push
mov
inc
cmp
movs
adc
leave
lods
in
shr
xchg
loope
stos
sar
and
fsub
icebp
push
fcmovbe
clc
loope
popf
imul
inc
imul
sub
(bad)
adc
or
into
movs
pop
mov
ror
xor
mov
in
cmp
lods
push
inc
mov
movs
sub
xor
xchg
test
and
sbb
inc
ss
cwde
les
mov
ss
les
hlt
retf
in
lahf
mov
cmc
and
inc
test
jae
inc
das
enter
jnp
stos
pop
jns
test
xor
enter
push
mov
lea
rol
add
shl
rcl
sub
xchg
jnp
js
out
xchg
gs
jg
fcom
fcmove
add
sbb
bswap
push
les
push
adc
xchg
std
xchg
mov
dec
or
scas
shr
in
test
sbb
or
jns
ror
or
xor
xor
and
adc
mov
pop
mov
test
sbb
stos
sub
xor
mov
ffree
add
out
lds
fdivr
mov
cmp
add
sub
call
xchg
cwde
movs
ret
sbb
jmp
mul
movs
pop
sbb
lds
mov
mov
leave
or
adc
mov
xor
ds
mov
jl
repnz
cmps
ja
or
or
neg
in
ins
and
loope
dec
pusha
sti
cmps
add
retf
(bad)
push
push
pop
jge
daa
out
xor
aas
(bad)
in
and
retf
inc
dec
xchg
xchg
js
sub
xchg
inc
adc
mov
add
test
inc
sub
movs
pop
mov
push
jb
push
or
xchg
(bad)
sbb
jmp
daa
ins
or
ins
out
or
sahf
in
dec
clc
mov
aas
or
aas
retf
jns
(bad)
popa
push
push
in
sub
leave
or
(bad)
stos
xchg
mov
stos
jns
stos
fbld
jns
call
(bad)
inc
mov
fnsave
dec
pop
inc
dec
sub
and
pop
les
jp
enter
(bad)
movs
lea
pop
jg
outs
dec
mov
cwde
lea
pop
gs
mov
push
push
(bad)
aaa
clc
leave
push
push
aad
(bad)
mov
popa
dec
lock
test
mov
cs
and
movs
shl
mov
and
push
std
jmp
pusha
adc
and
inc
mov
xchg
inc
rcr
fwait
ins
popa
mov
xchg
mov
push
inc
sbb
sub
test
and
lea
lea
pop
xchg
sub
push
cdq
in
mov
adc
mov
fwait
and
sbb
das
jg
std
aaa
mov
enter
fistp
or
dec
call
and
or
pop
inc
sbb
jl
jge
push
outs
aam
mov
into
jo
adc
out
sbb
aaa
lahf
mov
xchg
push
mov
cdq
jp
scas
test
sub
xlat
bound
aad
repnz
add
retf
aam
push
sahf
and
movs
and
jge
inc
sub
outs
jo
add
sbb
dec
adc
dec
xchg
or
mov
adc
jmp
repnz
sti
pop
pop
rcr
or
mov
repz
jl
sbb
xor
or
mov
sub
shr
xor
add
movs
push
enter
nop
mov
or
xchg
adc
adc
pop
pop
push
mul
out
test
jmp
cmp
pop
sbb
jae
mov
lods
jns
sub
sahf
dec
or
movs
rcr
sub
push
mov
sti
pop
bound
mov
popf
mov
popa
pop
jne
mov
nop
xlat
popf
data16
xchg
pop
rol
js
sbb
lea
jecxz
mov
rcr
xchg
loop
dec
mov
push
sbb
or
(bad)
jnp
mov
repz
dec
xchg
pop
dec
cmp
ror
in
scas
pop
jbe
in
popf
xor
cmp
cmp
inc
sbb
adc
pop
bound
xor
in
xor
pusha
push
inc
adc
bound
out
mov
repnz
dec
pop
pop
movs
ror
jns
(bad)
mov
ins
sti
sbb
and
out
rol
pop
add
shl
jl
div
push
mov
add
outs
mov
dec
enter
xlat
adc
aaa
pop
dec
test
test
add
and
aas
repz
dec
inc
or
jmp
int
scas
mov
and
cmp
mov
cwde
inc
mov
mov
sbb
lods
out
and
(bad)
dec
add
adc
mov
and
push
sub
shr
sub
fld
enter
and
test
push
lds
cmp
pop
push
cmp
frstor
mov
imul
push
mov
int3
dec
lock
dec
jmp
dec
call
mov
add
mov
mov
jmp
mov
mov
adc
into
aas
adc
mov
jb
or
retw
lods
stc
test
xor
lods
cmps
ins
inc
xor
popf
add
out
jae
ins
stc
rcl
dec
movs
pop
(bad)
ja
(bad)
xchg
push
stc
std
pop
adc
mov
(bad)
fcmovne
jb
jne
jecxz
add
cmps
xlat
call
mov
aas
cmp
or
jecxz
inc
rcl
jbe
push
cmp
and
je
pop
jb
mov
dec
jbe
cmps
mov
cmc
push
push
repnz
(bad)
movs
rol
out
cmps
inc
jle
fcmovne
mov
mov
xor
arpl
xchg
(bad)
inc
xchg
cmp
cdq
sbb
out
in
or
push
in
fnsetpm(287
rcr
lods
dec
jb
sub
mov
jns
jb
daa
mov
call
mov
pop
sbb
mov
cmc
push
out
mov
push
xor
loop
lods
push
jle
push
(bad)
xor
(bad)
into
mov
adc
lods
mov
and
or
lea
push
pusha
(bad)
adc
sub
cmps
or
in
jmp
call
pop
inc
inc
pop
scas
(bad)
das
out
mov
lods
sbb
mov
xlat
(bad)
ins
pushf
hlt
mov
lods
sbb
jmp
out
fsubrp
mov
sbb
xor
sbb
stos
push
or
stc
or
cli
or
mov
dec
mov
nop
and
fwait
xor
xchg
dec
arpl
scas
or
xor
mov
dec
repnz
and
pop
and
outs
sbb
hlt
mov
xchg
mov
inc
repz
shl
shr
xor
add
popf
add
out
rol
push
cld
shr
inc
sbb
mov
cmp
xchg
xor
mov
aaa
jns
mov
pop
sub
stos
cmc
mov
les
mov
jl
cmp
ret
xor
dec
push
inc
test
xor
loope
cdq
and
in
add
mov
dec
scas
test
sub
test
enter
jl
clc
jbe
mov
scas
mov
pop
mov
outs
dec
movs
ret
test
nop
cmp
sbb
pop
dec
(bad)
mov
loopne
mov
add
es
pop
hlt
or
inc
add
(bad)
sbb
cmp
xchg
sbb
pop
inc
lahf
popa
lock
sbb
fs
xor
push
mov
or
jle
jge
mov
fidivr
repnz
inc
clc
repz
jae
fnsave
das
jmp
packuswb
addr16
inc
out
push
sti
data16
rcr
int3
ss
fwait
pop
and
add
and
add
ds
stc
dec
or
mov
loop
ins
dec
retf
mov
sub
fs
push
cli
(bad)
or
js
shl
aaa
sub
xchg
and
ret
xchg
sbb
cwde
and
push
je
mov
fadd
sub
sbb
sbb
lahf
xor
stos
inc
push
pop
dec
and
or
xor
pop
loopne
and
stos
test
les
rol
ins
inc
cmp
add
shr
test
sbb
popf
cmc
gs
inc
es
or
mov
inc
and
push
add
lahf
clc
shl
jmp
imul
sbb
jne
and
aaa
pop
and
cmps
les
fcmovnu
aam
push
push
cmc
es
inc
imul
int3
mov
es
fbld
das
iret
mov
pop
xchg
add
cmp
repz
mov
arpl
pop
imul
test
push
mov
sbb
inc
xchg
xchg
cmps
dec
repnz
daa
mov
cmp
xlat
lea
(bad)
pushf
cmp
mov
cdq
dec
mov
jae
retf
sti
(bad)
loopne
jecxz
sbb
in
or
cli
add
adc
pop
loope
lods
lods
jl
iret
or
in
stos
xor
fsub
pop
push
out
mov
movs
jnp
xchg
mov
mov
imul
push
cs
xor
xchg
enter
mov
mov
add
lock
fistp
jns
idiv
popf
add
pop
push
add
es
sahf
inc
pusha
call
mov
sub
push
(bad)
das
mov
cmp
(bad)
fiadd
stos
adc
into
mov
enter
in
(bad)
fbld
xor
imul
sbb
or
mov
add
sbb
jg
mov
lds
ins
xchg
mov
dec
xor
ja
addr16
pop
aaa
fsubp
es
cld
xor
movs
out
ja
(bad)
push
mov
sbb
inc
mov
test
xlat
and
lea
mov
into
mov
sbb
and
adc
gs
sbb
gs
data16
clc
add
cmps
push
adc
je
mov
inc
cmc
in
adc
(bad)
mov
(bad)
popw
lahf
jne
lods
fs
mov
test
in
retf
into
arpl
or
pop
mov
and
pop
jb
adc
push
nop
inc
stos
les
add
mov
enter
mov
lods
fs
and
mov
xchg
xchg
mov
pop
je
dec
push
dec
push
in
xchg
movs
cdq
out
ret
and
and
mov
movs
rol
ins
dec
xchg
stc
ins
mov
pop
(bad)
sbb
cmp
sbb
out
cmp
jno
mov
mov
ds
push
mov
jns
mov
lahf
inc
movs
fsubr
xchg
add
and
pop
push
fbstp
push
inc
adc
mov
pop
jl
jmp
shr
xchg
and
test
or
test
call
sbb
inc
stos
mov
pop
inc
mov
ror
jno
add
jo
mov
in
pushw
xchg
in
push
mov
xor
cdq
lock
pushf
addr16
and
dec
sbb
retf
in
stc
add
or
add
jns
push
cmp
push
stos
xchg
lods
scas
out
cmp
imul
sub
aad
mov
clc
mov
add
pop
mov
mov
aam
(bad)
js
cmp
add
into
adc
add
ins
outs
mov
jg
ds
jmp
cmp
or
iret
and
cmp
and
add
xchg
pop
out
xor
jne
fcomp
hlt
mov
jo
(bad)
ficomp
mov
inc
or
push
inc
cld
into
lods
or
and
mov
mov
cli
leave
imul
jns
ret
sar
sub
test
push
stos
mov
add
aas
jecxz
jecxz
das
imul
in
iret
sahf
push
pop
mov
retf
pshufw
in
mov
inc
retf
std
cwde
and
stc
lods
push
add
sub
jg
cmp
mov
mov
sub
call
sti
(bad)
lods
jae
mov
xchg
outs
(bad)
lock
cmp
inc
inc
jmp
jmp
xchg
fcomp
ja
mov
stos
(bad)
and
jl
jnp
pop
xor
or
fstp
retf
push
sub
pop
mov
sub
pop
rol
pop
sbb
cmp
mov
push
scas
sbb
jecxz
xor
xor
add
in
cmp
inc
lsl
call
ror
ss
and
sahf
mov
sub
stos
loop
mov
and
cmp
pop
imul
pushf
outs
(bad)
jae
xor
das
(bad)
mov
test
fiadd
add
sti
push
stos
scas
dec
push
dec
int3
test
arpl
push
sar
mov
adc
inc
jl
push
push
retf
jge
or
test
xchg
(bad)
lock
fs
add
jmp
sbb
enter
sbb
jae
lds
push
stc
add
xchg
jbe
xor
mov
retf
shr
adc
mov
xchg
dec
sahf
rcr
inc
out
xchg
out
test
fisttp
aaa
pop
push
sbb
mov
sub
popf
mov
(bad)
retf
into
in
ja
fild
ins
adc
je
nop
(bad)
mov
sub
loop
ja
std
dec
ins
mov
jno
jl
inc
cmp
push
and
test
cmc
scas
or
or
(bad)
xchg
adc
push
cmp
hlt
xchg
call
jne
mov
add
mov
adc
push
lods
aad
ins
sub
retf
xlat
shl
outs
pop
and
lds
push
mov
shl
pop
and
adc
fnstcw
xlat
aad
ja
mov
push
out
(bad)
fst
mov
outs
outs
popf
push
jne
popf
loopne
xlat
cmp
in
repnz
cmps
retf
movs
pop
inc
test
xchg
outs
dec
xchg
jnp
test
pop
mov
or
loope
push
xchg
sub
fs
inc
xchg
jp
dec
divps
sbb
and
cli
or
cli
es
dec
arpl
stos
les
cmp
mov
xchg
fild
test
jo
push
pop
pop
mov
and
inc
sub
xlat
xchg
outs
push
pop
xchg
ins
or
xchg
xchg
test
inc
dec
xor
enter
outs
mov
ins
stc
push
shr
js
xchg
jg
jo
push
cmc
mov
fisub
je
pop
adc
xchg
sbb
and
push
dec
jb
xor
and
ins
adc
mov
aam
out
int
pop
mov
loop
clc
mov
add
call
xchg
cld
or
sbb
es
ds
inc
(bad)
pop
jmp
xlat
in
jns
pusha
xchg
cwde
mov
adc
adc
inc
rcr
ja
xor
dec
sbb
sbb
imul
sahf
cmp
(bad)
xchg
pop
popa
test
scas
mov
sti
aaa
imul
or
mov
jle
lods
aaa
jle
dec
dec
add
xchg
es
xor
push
inc
test
jp
add
cmps
mov
cs
loopne
sbb
fnstcw
push
mov
inc
xor
sbb
das
xchg
sbb
test
jne
sbb
fwait
scas
test
daa
neg
mov
retf
ins
cmps
jmp
jnp
cs
adc
adc
stos
xor
mov
movs
stos
pop
pop
cmp
sub
test
or
iret
mov
inc
loop
jns
add
xor
mov
xchg
movs
mov
sbb
lahf
ffreep
pushf
jbe
jg
push
xchg
cmp
mov
iret
in
xchg
cmp
stc
inc
js
add
push
push
fwait
inc
stos
pushf
xor
pop
sub
std
or
stc
je
and
mov
fiadd
fwait
pop
ret
in
out
jo
div
call
ror
in
fiadd
or
std
test
nop
cli
rcr
fmul
stos
jo
jl
mov
es
das
xor
push
nop
test
xchg
and
(bad)
fsubr
shl
inc
or
ja
adc
sbb
test
or
inc
loopne
iret
xlat
(bad)
sub
rcl
jmp
(bad)
push
or
dec
mov
scas
test
test
sbb
js
imul
enter
sbb
rol
cmp
out
fidiv
(bad)
jno
xor
pop
mov
inc
jbe
push
adc
jns
ds
push
pop
bound
cmp
sbb
or
xchg
inc
pop
adc
inc
outs
aam
inc
(bad)
outs
dec
in
pop
xchg
sub
adc
sub
mov
cmp
and
push
nop
outs
int
jnp
fnstcw
and
nop
jno
ds
dec
fdivr
jmp
aaa
test
rcl
test
dec
fucomip
adc
or
jmp
cs
lods
push
jmp
data16
cdq
or
sbb
into
pop
lea
inc
ins
iret
push
stos
push
adc
cwde
cmps
std
rcl
(bad)
pop
jnp
int3
jle
addr16
ret
stos
pop
and
jl
push
imul
bound
imul
jp
rcr
test
add
xor
push
das
mov
xor
(bad)
dec
sub
mov
pop
jl
ins
mov
dec
xor
pop
xor
mov
xchg
dec
cmps
or
cmp
pop
or
mov
addr16
inc
(bad)
xor
xchg
mov
call
pop
mov
js
xchg
sub
popf
push
pop
dec
add
fmul
adc
or
mov
sub
fwait
or
cdq
std
mov
fs
fiadd
add
ret
iret
mov
jmp
cmp
add
mov
and
sbb
sbb
cdq
cmp
add
inc
jge
js
xchg
dec
jo
push
mov
dec
dec
ja
sbb
jmp
ins
or
lea
mov
jmp
pushf
and
mov
mov
xor
sbb
xor
pop
push
neg
mov
cmp
inc
test
adc
cld
cld
add
aaa
xchg
jmp
jns
std
cmp
je
inc
dec
jecxz
push
retf
jp
cmps
(bad)
add
pop
lahf
les
aas
imul
stos
sbb
in
mov
es
ss
cmp
add
icebp
xchg
test
jle
push
push
mov
add
mov
lar
bound
jg
xor
loope
mov
cmps
arpl
mov
jg
mov
dec
dec
leave
or
add
icebp
pop
jne
cmp
jl
pop
jae
lods
mov
jo
pushf
or
stos
dec
inc
call
arpl
sub
inc
sub
retf
(bad)
mov
xlat
cmps
js
inc
and
adc
xchg
xor
fisubr
into
fcomp
push
(bad)
sub
push
push
jo
dec
lock
in
mov
pop
test
adc
aas
sub
inc
jge
cmc
sub
pop
les
push
lods
cwde
stos
cli
pushf
fdiv
js
adc
mov
xchg
mov
dec
scas
jb
outs
push
into
jne
xchg
mov
je
movs
and
inc
pushf
rcr
and
mov
sar
xchg
xor
outs
aas
lea
push
xlat
xor
shr
inc
popa
dec
fcomp
adc
(bad)
mov
fcomi
adc
in
out
and
fstp
xor
or
fsub
cmps
call
jnp
jo
pop
pop
adc
xchg
dec
sbb
cmps
dec
stos
cmp
push
js
push
add
adc
sti
push
mov
stos
or
mov
pop
pop
int
xchg
add
push
inc
outs
cmp
mov
std
push
and
fwait
es
mov
cwde
fs
ds
fcmove
rcl
das
push
fsub
and
mov
pusha
pop
xchg
lea
es
jle
mov
pushf
adc
mov
rol
add
sub
(bad)
add
cmps
inc
and
mov
pop
ins
pop
jmp
test
mov
loope
loopne
test
sub
jne
xchg
or
add
jecxz
enter
pop
cdq
test
lahf
int3
sub
lds
repnz
das
test
mov
dec
xchg
cmovo
push
aad
push
jmp
sub
pushf
out
jecxz
mov
and
lahf
adc
xchg
aas
loopne
jmp
std
(bad)
fidiv
mov
outs
mov
hlt
or
adc
mov
jmp
fwait
xchg
(bad)
or
jg
adc
inc
pop
inc
push
dec
aaa
add
scas
jbe
pop
adc
and
fistp
cld
in
std
retf
(bad)
xchg
fs
adc
sbb
jbe
shl
sub
xor
es
sub
cmp
es
pop
outs
xor
in
and
xor
repz
lock
shl
cmp
cmp
cmp
xor
mov
lea
jp
mov
mov
mov
loope
mov
outs
repnz
stos
inc
movs
cmp
jno
dec
sti
fidiv
jns
ret
fwait
jge
loop
dec
jl
pop
pmaxsw
cmp
fadd
cs
inc
les
in
inc
test
retf
adc
(bad)
sbb
mov
sub
mov
mov
mov
jbe
push
popa
add
idiv
add
cmovnp
and
xor
sub
and
xchg
(bad)
scas
pusha
stc
int3
and
xor
xor
lds
or
aas
or
addr16
add
xor
or
and
jecxz
or
mov
sbb
lods
std
push
nop
xchg
mov
out
mov
arpl
test
loope
and
cdq
std
mov
addr16
lods
data16
hlt
mov
lock
push
rol
int
ss
xchg
in
test
gs
aad
ror
lods
push
sbb
inc
loopne
pop
inc
or
adc
dec
cmp
and
jno
sub
retf
popa
aam
inc
push
popf
fs
mov
inc
sbb
mov
call
enter
in
push
aad
loop
mov
pop
outs
add
mov
sub
or
adc
sub
das
sub
(bad)
mov
out
iret
inc
mov
xchg
aas
jp
jbe
(bad)
cdq
fadd
dec
in
in
nop
mov
aaa
push
adc
mov
inc
dec
cs
sbb
sub
dec
fistp
inc
loop
sub
scas
(bad)
aas
mov
clc
mov
xchg
xchg
sar
call
jl
sti
xor
addr16
iret
aas
loopne
xchg
jae
dec
inc
sub
sbb
pop
mov
jg
mov
jecxz
stc
movs
dec
pop
cmps
xchg
or
gs
xchg
ret
fcom
lock
xchg
ret
sbb
sbb
mov
fwait
sbb
in
xchg
fiadd
xlat
or
or
fsub
ja
xor
imul
mov
test
ins
pop
jns
mov
ds
adc
mov
pusha
xchg
test
xchg
lock
and
mov
nop
in
or
sub
adc
cld
cld
lds
add
jg
add
inc
adc
sub
push
mov
mov
adc
fs
in
mov
cmp
popf
sub
ds
or
and
iret
test
repz
loop
movs
add
push
fistp
xchg
adc
and
jle
jmp
and
pop
pusha
jl
sbb
adc
jmp
rcr
dec
int
push
cs
popf
xor
pop
mov
and
fcom
push
xor
lea
xor
push
sub
sahf
test
cmps
cld
aas
ja
dec
nop
cmc
int
cld
inc
add
pop
push
out
and
mov
sbb
mov
in
aam
xchg
movs
add
adc
or
push
loopne
jl
jae
into
xor
jge
jno
aad
retf
mov
mov
repnz
xlat
lahf
push
sbb
jle
and
imul
push
outs
jl
or
pxor
mov
push
add
mov
in
aam
mov
mov
jle
xchg
xlat
xchg
shr
or
loop
test
cmp
jle
pop
aaa
or
or
mov
aas
test
shl
inc
stos
stos
cmp
pusha
clc
inc
sbb
in
fucom
cwde
push
out
rcl
jmp
hlt
mov
pop
cmp
mov
jmp
aaa
cld
outs
sub
lods
push
call
fld
inc
pop
popa
inc
mov
and
lods
hlt
mov
(bad)
adc
rcr
ret
xchg
pop
imul
push
sbb
int3
inc
movs
stc
or
or
ret
imul
xchg
cmp
std
mov
nop
rcr
mov
popa
mov
movs
test
inc
jecxz
popf
jg
jl
adc
push
stc
dec
pop
sti
mov
leave
dec
or
pop
jmp
test
xor
mov
xlat
rcl
setp
push
pop
cmp
mov
rol
bnd
xor
push
push
test
in
out
inc
sahf
loope
push
test
mov
dec
in
imul
mov
sub
pop
imul
in
out
iret
mov
es
fisttp
pop
ins
add
nop
cli
(bad)
fcomp
sub
pop
movs
sti
mov
mov
call
adc
aas
dec
ds
adc
test
inc
div
push
mov
push
jmp
add
imul
stos
loope
repnz
xor
repnz
fsubr
adc
test
mov
in
pop
(bad)
mov
xor
mov
ds
arpl
xchg
ficom
push
mov
mov
sbb
sub
jl
add
std
dec
sbb
(bad)
xor
iret
idiv
and
mov
mov
into
xor
fnstenv
in
jl
dec
lahf
dec
push
popf
mov
or
inc
std
lea
lds
leave
adc
add
sub
pushf
ja
stc
int
xchg
and
fldcw
(bad)
cmp
fadd
ficom
mov
ret
fld
cmp
es
loope
sbb
inc
test
and
pusha
cmp
fwait
popa
int
bound
loopne
rol
push
xchg
sbb
adc
jecxz
vmovaps
test
mov
ss
imul
cwde
sar
cmc
cmp
mov
xlat
jne
fwait
add
int
and
aaa
sub
and
push
test
push
fs
xchg
push
or
jo
jo
adc
pop
push
movs
mov
adc
push
jnp
mov
imul
push
cwde
ins
cwde
stos
and
dec
outs
pop
lods
repz
repz
adc
sbb
xchg
stos
mov
mov
mov
cli
in
mov
mov
sbb
add
js
mov
mov
(bad)
sahf
add
or
pop
cmp
pop
mov
pop
pop
xor
rcl
cmp
inc
ffree
in
fstp
call
fmul
pop
call
dec
pop
fistp
movs
es
leave
mov
in
test
retf
outs
scas
ror
mov
jmp
je
jo
es
shl
jbe
xchg
test
fs
bnd
inc
push
push
pop
mov
adc
shr
xchg
(bad)
adc
lock
sbb
in
cld
ins
sbb
stos
es
push
iret
dec
out
add
pop
add
lods
cmp
bound
cdq
outs
dec
hlt
dec
xchg
inc
pop
pop
arpl
jecxz
ficomp
retf
pop
lock
mov
std
aam
shl
sbb
retf
mov
cmps
das
adc
fwait
pop
les
and
sbb
dec
shl
sbb
jb
loopne
dec
(bad)
xchg
or
dec
(bad)
mov
or
xchg
pop
lock
call
popa
adc
iret
sub
mov
dec
mov
adc
das
mov
push
jae
out
inc
neg
xchg
(bad)
fcomip
mov
pop
mov
lea
lahf
sub
sub
cmp
pop
xor
mov
ins
fisttp
jl
add
(bad)
xchg
stos
inc
repz
dec
inc
call
retf
retf
inc
test
xor
ret
into
jo
(bad)
out
imul
mov
xchg
mov
fidiv
cmp
out
mov
sbb
cmp
lods
sar
les
(bad)
mov
std
add
in
lods
rcr
cmp
mov
rcr
js
inc
aaa
call
popa
dec
add
or
sbb
imul
out
adc
out
jbe
stos
dec
xor
push
mov
mov
cmp
loop
shl
mov
addr16
sar
cmp
mov
clc
out
push
addr16
fs
inc
add
(bad)
lock
call
movs
inc
jg
pop
pop
icebp
js
jl
out
out
sub
push
stc
cli
ja
sbb
xchg
dec
aaa
jmp
xchg
sbb
cmp
add
in
mov
sub
sbb
dec
mov
mov
cld
and
out
shr
into
out
aad
repnz
xor
ja
inc
or
ret
ds
enter
xor
mov
or
sbb
xor
dec
sub
(bad)
pop
dec
mov
pop
sub
fucomip
sub
repnz
mul
test
mov
popf
ins
enter
inc
aaa
inc
jle
sub
mov
mov
into
rol
push
cmp
stc
imul
mov
stc
hlt
mov
das
xchg
test
fwait
dec
in
xor
les
jb
aaa
adc
neg
inc
mov
pop
retf
pop
push
xlat
repnz
jl
jb
mov
cwde
leave
sahf
js
jl
ficom
test
pop
pushf
std
mov
stos
cmp
or
inc
movs
je
fwait
mov
cmps
(bad)
outs
xchg
adc
xchg
mov
cmp
sti
xchg
push
jnp
aam
sub
add
push
sub
add
xchg
lds
lods
cmc
or
or
adc
mov
adc
jl
and
sbb
or
xlat
sbb
adc
pop
repz
pop
or
int
je
lock
mov
sbb
fidiv
fmul
cmps
in
jns
inc
and
jecxz
mov
sub
and
cmps
pop
ss
test
adc
jge
dec
cmps
pop
add
or
test
scas
add
mov
(bad)
push
cs
hlt
lds
cmps
mov
enter
add
rol
dec
mov
out
(bad)
arpl
sbb
mov
add
mov
xchg
popa
rol
cmps
sbb
pop
mov
int3
xchg
ficomp
out
shr
inc
cmps
adc
fsub
and
(bad)
jmp
jnp
mov
mov
jns
sub
fwait
cmps
push
mov
call
ds
xchg
inc
jmp
xchg
jmp
inc
(bad)
scas
inc
sbb
mov
or
push
xor
mov
xor
arpl
pop
jns
clc
dec
jne
lock
mov
nop
inc
jns
xchg
and
(bad)
and
jmp
out
mov
mov
imul
inc
mov
xchg
test
scas
fidivr
mov
and
inc
xchg
adc
mov
int3
mov
pop
imul
lock
scas
add
cmp
pop
aaa
jno
stos
pop
(bad)
cwde
or
push
jnp
add
mov
dec
sub
rcr
ror
sbb
nop
mov
push
test
xor
fs
sbb
enter
lods
push
movs
fbstp
push
jmp
enter
mov
jnp
iret
fwait
push
pop
jl
fucom
push
adc
xor
push
pop
and
and
imul
cmps
xor
(bad)
fisub
shr
inc
xchg
push
gs
scas
popa
push
loopne
and
out
test
scas
inc
mov
test
ins
lods
(bad)
shl
jmp
inc
mov
pop
data16
jp
push
dec
call
test
add
out
jae
mov
rol
int
cmc
inc
or
enter
xchg
test
pop
inc
sub
sbb
sub
(bad)
mov
ficomp
xchg
inc
(bad)
xchg
in
imul
sub
mov
inc
shr
pushf
faddp
fdivr
add
push
loope
push
shl
xor
(bad)
aad
(bad)
mov
xchg
cmps
xor
or
pusha
lods
dec
dec
inc
dec
sub
test
jae
cmps
mov
ret
pop
or
pop
mov
adc
dec
lahf
outs
out
scas
fmul
repz
xlat
data16
pop
add
sub
aam
adc
cmp
add
pop
dec
mov
mov
cld
fsub
loop
shr
clc
ins
repz
push
add
mov
outs
in
out
cmps
(bad)
sbb
and
mov
outs
sub
call
push
movs
push
push
out
inc
sub
aaa
test
cmps
sbb
sbb
out
push
fdiv
int3
hlt
xor
pusha
mov
mov
dec
neg
int
(bad)
out
push
mov
in
sub
and
cli
push
jns
push
or
popf
cmp
cld
lock
and
xor
icebp
cmp
cmp
outs
imul
pusha
in
test
(bad)
sub
loop
pop
loop
pop
sbb
imul
dec
sub
xor
sbb
std
push
or
sti
push
jecxz
fs
stos
mov
adc
jmp
xor
sar
daa
add
test
imul
inc
jae
pop
mov
les
rcr
sti
push
pop
pop
inc
jo
cmp
adc
sti
xor
sub
inc
fisttp
mov
and
cmc
xor
pop
adc
pop
out
inc
aas
xchg
sti
add
inc
pop
daa
dec
or
inc
cwde
jmp
(bad)
aam
(bad)
cmp
inc
repnz
cmps
dec
adc
imul
imul
jl
fcom
inc
mov
pop
fucompp
stos
mov
stc
push
pop
cmp
push
movhlps
sub
dec
in
fsub
cdq
jg
push
in
xor
mov
push
and
outs
cmp
cs
or
cmp
int
inc
scas
fnsave
arpl
and
movs
mov
es
jp
outs
in
(bad)
mov
int3
adc
dec
cs
jmp
popf
xchg
push
jbe
pusha
mov
bound
or
jle
xchg
sbb
pop
retf
pop
push
add
cli
scas
xlat
(bad)
test
cli
clc
lea
ret
not
pop
cmp
mov
add
jno
dec
fcom
mov
inc
in
cli
xchg
leave
fdivrp
pop
aas
ret
cmp
arpl
push
cld
inc
movs
(bad)
xchg
push
sub
push
jb
sub
jbe
jbe
jl
mov
sub
cld
jae
mov
cmp
lea
sbb
cwde
cmps
mov
shl
(bad)
gs
sbb
das
push
inc
call
stc
lahf
clc
jge
jnp
xchg
push
outs
xor
and
push
dec
xchg
mov
into
sbb
push
jbe
cmp
or
scas
out
(bad)
xadd
dec
aas
adc
or
dec
adc
mov
aam
rcl
mov
gs
or
jl
call
repnz
call
call
mov
mov
pop
dec
push
dec
jl
and
repnz
inc
loop
inc
shl
ins
mov
inc
repz
dec
es
pop
jl
mov
int
lock
jne
mul
clc
fstp
cmp
sub
leave
mov
aaa
or
cmp
push
jb
repz
test
jmp
je
fsubr
call
jb
dec
adc
xor
bound
jo
jecxz
sub
das
iret
iret
fsubr
push
mov
add
jle
sub
push
xchg
mov
sub
xor
push
sbb
in
mov
arpl
outs
adc
add
sti
mov
push
push
cli
retf
addr16
arpl
pop
fst
fsubr
push
push
jno
(bad)
cli
jecxz
pop
sbb
mov
and
mov
dec
mov
fld
add
push
cmp
mov
popf
cmp
aad
xor
sbb
int
mov
(bad)
retf
mov
cmps
(bad)
test
(bad)
outs
fdivrp
shl
and
push
add
fdiv
pop
and
bound
ja
sahf
aas
add
xchg
dec
dec
pop
sbb
mov
cli
gs
mov
outs
or
push
mov
out
and
idiv
xchg
std
out
cmp
aam
jo
cmp
dec
movs
mov
cmc
fidivr
and
call
sbb
jnp
push
jb
adc
std
pushf
inc
xor
xchg
inc
xchg
add
test
test
shl
rcr
or
mul
and
push
mov
std
and
jge
into
mov
push
fcmovnbe
cmp
in
cmp
push
cli
stos
(bad)
(bad)
shl
jo
xchg
cmps
rol
dec
loope
ret
sub
mov
lds
or
jne
out
add
sbb
mov
xchg
repz
xor
push
pushf
enter
and
add
stc
daa
sahf
jg
sub
xor
aas
mov
cmps
mov
mov
arpl
push
mov
loop
inc
dec
xor
add
leave
pop
xor
sub
mov
icebp
add
jne
stc
int3
jnp
ficom
adc
and
jp
outs
pop
clc
push
(bad)
int3
add
mov
sub
imul
xchg
inc
fwait
js
ficom
sbb
add
(bad)
push
pop
aaa
sbb
movs
mov
jo
outs
rcr
jl
dec
cli
sub
nop
daa
or
mov
cmps
pushw
jge
stos
idiv
ins
or
sahf
popf
mov
push
xchg
inc
jle
push
jge
jle
jne
test
int
mov
(bad)
sub
gs
sub
stos
pusha
or
iret
aam
test
(bad)
cmp
mov
popf
call
pop
jae
inc
add
(bad)
xchg
pop
mov
sbb
push
xchg
mov
fadd
clc
mov
pushf
push
rcl
jb
dec
adc
aam
lods
dec
jmp
push
xlat
out
inc
pop
aaa
sahf
pushf
(bad)
je
sub
int
mov
mov
popf
mov
loopne
or
add
xor
push
cbw
xchg
call
and
fcomp
in
fld
shr
jno
inc
dec
xchg
pop
add
out
dec
xchg
imul
mov
adc
mov
dec
inc
or
fst
xor
sti
xor
popa
cmp
add
dec
lods
jmp
dec
push
dec
add
cmp
sbb
enter
test
inc
add
(bad)
(bad)
fldenv
mov
ret
lock
test
retf
xor
push
add
sbb
shr
daa
sbb
xor
cmp
xchg
dec
xor
ss
in
mov
shl
aas
xor
push
xor
xchg
push
mov
cmovne
je
mov
imul
outs
test
sbb
xor
and
dec
pop
xchg
pushf
or
icebp
fwait
lods
jb
fild
or
pop
pop
mov
iret
xchg
xchg
loope
lahf
adc
adc
jge
dec
push
inc
mov
icebp
push
adc
push
inc
jmp
repnz
pop
dec
dec
xchg
scas
mov
fistp
in
jmp
fcom
test
scas
test
cmp
xchg
(bad)
sbb
call
(bad)
call
(bad)
int
or
popa
dec
(bad)
xchg
rcr
in
out
cmp
pop
rcl
lea
mov
and
mov
jl
inc
jns
data16
iret
jl
or
mov
stc
or
fwait
cs
or
stc
jns
cs
dec
fcomp
stos
inc
data16
mov
dec
lods
fnstcw
xchg
ror
ret
mov
xchg
popa
mov
sbb
mov
mov
stos
clc
cmc
jmp
mov
aam
xchg
xchg
fadd
jge
sbb
xor
xchg
mov
and
(bad)
js
imul
mov
push
out
(bad)
cmps
xor
sub
pop
call
shl
into
(bad)
cmp
shl
pusha
xchg
fst
mov
popf
bound
cmps
lods
xor
adc
mov
mov
outs
mov
aam
add
add
or
imul
push
mov
inc
push
scas
into
mov
lds
pop
cmp
adc
fwait
sbb
aaa
mov
jg
jmp
fs
(bad)
pop
inc
into
cmp
xchg
inc
pusha
inc
bound
xlat
out
imul
sub
into
pop
ret
xchg
std
or
retf
mov
adc
lahf
mov
add
mov
sub
or
dec
popw
leave
jl
sub
jns
dec
push
in
ss
push
dec
mov
fcom
fdiv
sub
and
sbb
sub
lock
mov
mov
je
fmul
mov
mov
mov
xchg
fwait
xchg
sti
push
ret
call
repnz
loope
or
mov
ror
mov
popf
fucomi
pop
inc
(bad)
xchg
adc
stos
xor
mov
push
sub
pop
sub
xchg
rcr
fcomi
imul
cmp
add
inc
mov
es
into
sbb
fdiv
cmp
push
call
jbe
pop
mov
cmp
or
pop
pop
inc
adc
jae
add
and
sbb
sbb
in
pop
dec
push
dec
sbb
ret
mov
mov
adc
nop
test
jmp
aam
push
in
jbe
mov
fild
push
sbb
cli
nop
pop
scas
xor
aam
xor
call
cmp
jbe
imul
mov
(bad)
(bad)
stos
sbb
shl
jecxz
ret
stos
retf
mov
std
cmp
dec
xor
xlat
and
sub
pop
call
or
inc
lahf
mov
mov
xchg
std
adc
pop
shl
and
loope
adc
pop
and
jmp
xchg
std
cmp
out
cld
sub
fisub
mov
stos
add
adc
jge
sti
cwde
mov
(bad)
ret
inc
inc
(bad)
sub
dec
leave
pop
shl
or
xor
jg
bound
dec
pop
div
mov
or
push
stos
ins
bound
enter
in
jg
pop
fild
gs
xor
in
xor
rep
cmc
mov
mov
int
mov
mov
jnp
xor
int
push
adc
add
ins
out
mov
fcmovnb
shl
arpl
push
imul
test
or
lds
mov
mov
mov
and
dec
gs
pop
mov
mov
call
xlat
jecxz
jle
sbb
rol
repz
sub
fadd
(bad)
cs
rcr
jno
call
daa
and
js
jmp
cmp
popa
sar
test
cwde
and
ja
sub
shr
inc
les
and
cmps
in
mov
aad
jbe
pop
icebp
xor
add
jle
mov
adc
jge
mov
sahf
cmp
int
mov
push
push
icebp
xlat
neg
jo
push
xor
inc
movs
mov
cmp
in
retf
mov
mov
(bad)
sbb
xor
dec
(bad)
fild
sbb
jg
sbb
add
pop
xchg
shl
ins
(bad)
pop
mov
clc
fs
mov
fnstenv
add
dec
push
mov
fiadd
imul
xchg
ja
or
sbb
xchg
cs
popf
repnz
cmp
adc
fld
jnp
outs
fwait
cli
sbb
enter
fdivr
push
and
push
idiv
pop
out
aaa
mov
das
mov
dec
stos
and
and
rcr
movs
sbb
push
adc
in
add
xchg
mov
or
xor
call
xchg
push
ins
outs
add
xchg
dec
inc
add
cli
loop
adc
jle
icebp
sub
dec
addr16
jl
std
pop
push
das
push
nop
in
xchg
fwait
jbe
call
cs
in
dec
pop
mov
fs
mov
movs
cli
(bad)
scas
jo
popa
mov
xchg
and
enter
or
leave
bound
gs
mov
movs
retf
(bad)
ret
push
cmps
aas
lock
push
inc
sbb
lds
je
nop
or
fiadd
and
es
pop
mov
mov
je
push
pop
mov
movs
mov
sub
pusha
scas
dec
or
std
ss
add
aad
test
xor
ins
jmp
or
add
(bad)
into
fimul
and
mov
stos
lfs
sbb
ins
push
mov
retf
inc
push
ret
sbb
adc
ss
sub
mov
scas
iret
inc
fsubrp
or
xchg
outs
push
test
shl
pop
jmp
stos
add
inc
es
popa
sbb
cld
jle
in
inc
mov
popa
mov
and
mov
xchg
mov
outs
inc
push
and
xchg
ins
inc
cli
test
enter
shl
stc
not
in
jl
push
fimul
inc
loopne
stc
idiv
xchg
push
test
pop
mov
fcomp
mov
enter
jl
xchg
sub
dec
jp
jne
xchg
scas
jns
add
xchg
in
mov
fdiv
push
jne
out
in
cmp
add
stos
ds
sbb
mov
pop
retf
xchg
pop
(bad)
pop
in
jmp
push
mov
mov
pop
mov
loopne
cld
stc
jl
mov
test
(bad)
fwait
cmp
fnsave
aas
dec
(bad)
(bad)
pop
inc
push
mov
int
mov
cmp
test
mov
iret
or
dec
aad
mov
fwait
jle
mov
jae
mov
jnp
mov
ds
inc
mov
jo
add
xor
mov
iret
sub
dec
push
push
push
cmp
mov
xchg
dec
addr16
mov
aaa
imul
jno
inc
jnp
rcr
inc
sub
add
dec
mov
or
pop
inc
es
cmp
pop
cld
push
xchg
mov
addr16
ror
scas
cmps
adc
(bad)
les
cmp
mov
adc
push
call
test
aad
in
into
add
push
xor
mov
enter
ror
mov
sub
(bad)
jb
aas
add
rcl
xor
imul
fcom
cmps
mov
ret
or
cmps
(bad)
or
lods
ss
test
xchg
xchg
rcl
sahf
cmp
xor
jmp
xlat
out
out
stos
test
adc
jbe
xchg
jo
jmp
or
mov
ins
jne
lahf
pop
jno
out
cdq
sbb
shl
test
jmp
xlat
les
pop
jmp
and
int3
inc
inc
mov
(bad)
cli
or
adc
in
sbb
test
ins
adc
jb
mov
and
dec
dec
push
cmp
cmps
mov
es
movs
stos
out
xchg
inc
push
cmp
popf
cmp
(bad)
pop
sbb
mov
inc
imul
or
xlat
cmps
in
and
into
mov
ret
or
jp
xchg
imul
jecxz
and
and
and
enter
es
sbb
xchg
push
ret
fild
je
and
sbb
jne
ret
sti
test
int3
in
inc
in
push
mov
lock
add
jl
add
fild
mov
fstp
inc
pusha
add
(bad)
shl
xlat
aaa
dec
shr
xor
fisubr
jmp
cmp
stos
mov
jo
sbb
(bad)
jno
ss
mov
outs
aaa
addr16
pop
cld
sbb
int3
xchg
xchg
push
imul
cmps
(bad)
(bad)
stc
jmp
(bad)
in
xchg
cwde
dec
call
into
sar
(bad)
mov
or
shr
pop
mov
xchg
mov
or
das
add
jno
push
aaa
das
inc
add
mov
jle
xlat
int
xor
push
add
(bad)
ins
jp
mov
das
int
xchg
sti
cmp
(bad)
int
ds
sbb
call
sahf
sbb
push
mov
or
inc
lea
icebp
ror
mov
xor
mov
adc
iret
mov
aaa
fxch
or
xor
nop
(bad)
jl
(bad)
(bad)
call
xchg
or
mov
(bad)
scas
jne
jecxz
cmp
xchg
movd
das
mov
stos
push
test
ret
push
pushf
adc
sbb
pop
adc
adc
rol
adc
mov
or
cmp
ja
int
mov
push
dec
inc
or
dec
(bad)
fsubr
stc
(bad)
jne
push
fnstsw
pop
mov
dec
jb
cmp
cmp
xchg
add
dec
cmp
scas
adc
sub
(bad)
(bad)
mov
xchg
mov
je
test
xlat
imul
pop
cmps
mov
mov
stos
jae
jecxz
dec
repnz
lock
in
sub
mov
mov
call
cmp
fistp
in
mov
leave
stos
mov
clc
fsubr
lds
sub
push
cli
(bad)
or
imul
sahf
jne
int3
data16
push
iret
sub
dec
xchg
aas
push
stos
fs
adc
push
sbb
jo
xor
iret
jmp
xchg
or
sbb
mov
adc
mov
inc
or
aad
or
inc
cmp
fsub
push
sbb
mov
push
mov
ins
pop
pop
jge
into
cmp
xchg
shl
retf
retf
rol
loope
mov
aam
sbb
arpl
inc
sahf
sbb
sbb
cmp
inc
sbb
cld
test
test
mov
inc
fistp
mov
xor
jle
movs
lock
vmread
push
call
adc
cmps
aas
inc
jle
out
cld
outs
push
jo
loope
jmp
(bad)
data16
cmp
ins
or
stc
xchg
call
jmp
add
loop
push
test
fisub
push
retf
into
inc
xchg
repz
dec
mov
sub
movs
shl
push
scas
mov
add
adc
dec
mov
dec
jmp
push
and
leave
inc
xchg
popa
movs
sahf
inc
mov
js
neg
jb
push
pop
mov
adc
movhps
iret
loop
fcomp
mov
fstp
pop
pop
mov
sbb
xchg
in
push
ins
aam
mov
or
ins
aad
adc
aas
les
call
jg
pop
dec
(bad)
(bad)
pop
mov
ja
dec
pop
xor
or
mov
push
enter
mov
xor
hlt
pop
cdq
mov
stos
rol
mov
push
ins
lea
inc
add
sbb
fsubr
inc
cs
xlat
addr16
fiadd
mov
inc
clc
lea
arpl
cwde
nop
fwait
xor
movs
sti
inc
pop
popa
push
mov
dec
mov
dec
mov
clc
in
popa
ds
push
icebp
cmp
adc
iret
and
not
data16
retf
push
fsubp
std
xor
mov
(bad)
sti
pop
cmps
ret
adc
mov
pop
add
dec
aam
jb
adc
jecxz
mov
fucom
add
ror
dec
ret
inc
mov
movs
addr16
pop
int3
fldcw
lds
adc
jb
mov
repnz
dec
bound
cmp
or
movs
shr
cmps
(bad)
call
rcl
sbb
xor
(bad)
call
cmps
das
fild
cmp
test
mov
es
mov
in
jl
ror
sbb
in
adc
pop
lds
in
mov
int
(bad)
repz
fimul
push
sti
mov
or
in
add
pushf
sub
(bad)
cmps
dec
fsubr
add
push
jmp
push
xchg
inc
pop
mov
add
adc
or
inc
loope
push
push
inc
cdq
xchg
retf
mov
loopne
gs
outs
mov
vunpckhps
in
loop
push
jo
jmp
xchg
std
jb
jl
xor
nop
(bad)
jmp
pop
cmp
movs
mov
xchg
push
(bad)
jg
mov
dec
movs
or
mov
xor
push
ins
pop
movs
scas
mov
or
inc
loop
or
pop
int3
mov
retf
stc
outs
sub
jmp
cdq
(bad)
cmp
rcr
dec
push
mov
es
and
sub
cmp
fidiv
repz
dec
mov
arpl
xor
js
cmp
enter
mov
aad
outs
leave
jb
mov
push
fsub
and
icebp
sbb
repz
push
inc
adc
pop
jp
sbb
stos
stos
mov
push
jns
mov
dec
inc
adc
inc
in
or
sub
mov
pop
push
add
or
add
mov
inc
add
dec
mov
or
mov
scas
pop
lea
sub
cmp
jp
xchg
sbb
mov
jmp
arpl
repnz
ret
pop
and
retf
sbb
neg
xchg
test
test
mov
adc
addr16
rol
adc
shr
add
movs
loop
jge
pop
xchg
int
scas
fmul
mov
adc
or
mov
push
inc
sub
jmp
(bad)
jnp
pop
xlat
adc
lahf
mov
call
xlat
inc
loope
dec
ror
in
sub
rol
cld
fdiv
adc
xchg
add
or
mov
ins
mov
cmps
xlat
repnz
xor
dec
or
dec
adc
jae
pop
mov
cmp
mul
dec
jnp
sti
sbb
xchg
sti
xor
pop
int
(bad)
mov
(bad)
rcl
fsub
out
or
rcl
pusha
xchg
daa
(bad)
jo
push
(bad)
jo
jo
or
cmp
jnp
cmp
hlt
mov
mov
pop
dec
push
cmp
fld
jae
push
and
and
clc
pop
(bad)
sub
clc
fmul
xchg
mov
add
xchg
mov
imul
mov
movs
add
addr16
(bad)
jns
out
sbb
dec
bound
xor
icebp
jb
enter
imul
scas
sbb
shr
ins
nop
mov
lods
add
add
fcom
hlt
mov
dec
push
cdq
out
adc
push
loope
sub
bound
mov
sbb
data16
mov
xchg
test
push
xchg
xor
xchg
xor
sbb
fsub
or
icebp
and
push
(bad)
cli
inc
fcmovb
loopne
jg
lds
in
int3
or
and
pop
cli
or
adc
jmp
jge
loope
xchg
jb
adc
inc
ds
xor
mov
out
dec
ss
mov
fwait
aam
shr
xchg
leave
mov
lea
cmp
jmp
jnp
ret
repz
(bad)
fsubr
ret
add
xor
jmp
fcos
lock
ds
cmp
push
and
mov
int3
bound
(bad)
loope
daa
pop
xor
mov
ins
xchg
jle
jge
adc
std
into
cmps
mov
sbb
lock
cdq
xchg
stos
pusha
cli
add
add
mov
clc
cmp
daa
or
sbb
sub
push
and
nop
jne
mov
sbb
scas
sub
and
dec
dec
(bad)
add
out
ret
sub
pop
fimul
mov
pop
std
test
outs
push
push
into
loopne
scas
push
adc
mov
jmp
jg
shl
jne
loopne
mov
and
xor
or
and
pop
hlt
out
stos
push
cmp
xchg
dec
(bad)
jge
call
sub
pushf
call
xchg
lahf
lahf
ins
or
(bad)
xchg
jae
mov
add
mov
retf
push
aas
shr
out
retf
out
or
(bad)
fisubr
inc
call
push
movs
out
push
ret
cmp
mov
xchg
daa
inc
dec
in
mov
iret
adc
adc
xor
cmp
les
mov
stc
mov
cmp
xor
fmulp
gs
inc
fcmovb
pop
pop
stos
jmp
and
xchg
mov
stos
in
out
scas
aas
pop
inc
jg
push
pop
jo
loope
pop
push
push
popf
ror
div
xor
jle
jl
fistp
jmp
cli
and
test
cmps
push
jo
hlt
cmp
xor
daa
daa
test
daa
dec
xchg
cmc
retf
mov
dec
loopne
mov
mov
and
bnd
sti
mov
lods
(bad)
jmp
mov
outs
jae
inc
cmp
jp
jo
inc
inc
cmp
fldcw
arpl
adc
sub
test
into
sbb
sbb
js
sar
loop
aad
imul
mov
mov
ret
push
mov
sub
mov
xchg
adc
xor
(bad)
ja
stos
inc
jge
mov
sbb
inc
pop
das
call
fld
sbb
xchg
inc
sbb
mov
call
or
xchg
stc
mov
sbb
sub
jecxz
into
xor
js
pop
dec
pusha
retf
xor
push
mov
mov
aas
repz
ret
jb
xchg
cld
pop
nop
sub
dec
out
mov
in
popf
mov
aam
push
push
dec
dec
aas
dec
or
leave
lods
(bad)
xlat
mov
shl
and
mov
sub
pop
leave
mov
push
or
fwait
add
add
jno
push
aas
movs
xchg
fwait
(bad)
cmp
adc
cmp
mov
and
mov
xor
les
stos
movs
pop
xlat
jp
stc
test
shl
xchg
pusha
sub
lock
pop
adc
lock
ds
and
cmps
xchg
lock
add
inc
es
jg
fsub
xor
cmps
xor
xor
fistp
jno
inc
aam
test
sub
inc
retf
mov
or
sar
ret
sti
jo
xchg
ret
jmp
arpl
call
into
lahf
cmc
movs
push
inc
inc
adc
add
ins
cs
fwait
push
mov
out
cmps
call
and
movs
fld
shr
or
lahf
mov
adc
adc
jmp
push
hlt
ret
je
ins
loope
cli
mov
cli
jmp
ret
inc
ds
sub
mov
out
cmp
clc
inc
aam
les
adc
pop
xor
xchg
ss
fiadd
sbb
xlat
sar
mov
dec
nop
sbb
inc
cmp
pop
bsr
in
push
mov
xor
lds
js
push
add
loope
cdq
cs
push
call
loop
xlat
dec
and
and
pop
outs
sbb
(bad)
repz
and
xor
inc
mov
fimul
jo
or
int3
(bad)
cs
sbb
cmp
sbb
movs
mov
aad
std
cmp
std
aam
xchg
or
rcl
pop
mov
or
xchg
and
pop
fldenv
imul
imul
xchg
xchg
addr16
aaa
jae
fst
cmp
dec
pop
ins
mov
sbb
(bad)
cmp
data16
shr
clc
sub
inc
cmp
inc
pop
mov
stos
xor
movs
mov
push
jmp
mov
xor
test
mov
dec
sub
mov
(bad)
jl
pop
lock
add
cmp
adc
and
ja
popf
fldenv
pop
push
xlat
pop
sbb
mov
and
mov
sahf
mov
add
dec
and
and
inc
neg
mov
inc
fist
rol
cmc
jp
pop
loope
aad
push
repnz
jg
imul
mov
ss
mov
imul
movs
stos
adc
sbb
xor
jns
or
dec
nop
icebp
xchg
and
adc
sub
push
ret
xchg
ror
mov
ss
jb
push
fbstp
mov
sbb
sub
popf
mov
sahf
xor
sahf
fistp
in
addr16
stos
push
and
sbb
ror
adc
into
add
xchg
mov
lds
mov
pop
pop
aaa
lahf
cmp
loop
(bad)
hlt
out
or
jbe
out
lds
mov
xchg
in
adc
imul
shl
mov
push
mov
lea
les
mov
fsub
shl
cwde
mov
push
xchg
mov
jbe
inc
dec
enter
dec
push
cmps
repz
or
mov
push
in
loope
stc
sub
mov
xor
push
jmp
add
cmp
movs
outs
std
cmps
xor
pop
cmps
add
std
test
enter
lock
mov
out
inc
sub
sbb
out
inc
rcl
int
dec
mov
mov
cdq
push
es
pop
add
mov
out
adc
mov
addr16
(bad)
lods
(bad)
clc
pop
push
icebp
gs
and
pop
(bad)
mov
push
pop
inc
cmps
(bad)
ret
dec
push
sub
xor
mov
inc
fwait
loop
push
les
cmp
adc
cmp
sub
fnsave
jb
sub
pusha
fstp
pop
jl
retf
mov
xchg
jle
dec
pop
sub
inc
bound
or
loop
lods
mov
(bad)
pop
fcmovbe
pop
(bad)
aaa
retf
out
sub
pop
outs
mov
pop
pop
outs
cli
mov
adc
jb
outs
ja
cmp
pop
(bad)
push
into
popa
xchg
mov
jb
ins
xchg
sbb
mov
jecxz
gs
shl
mov
fldenv
jmp
sub
push
inc
call
mov
cwde
ror
cmp
repz
(bad)
(bad)
xlat
lods
fisubr
mov
jns
inc
je
shl
jbe
stos
sbb
enter
daa
push
mov
pop
sar
adc
js
ss
(bad)
pop
popa
test
pop
jp
fild
sbb
add
cmp
rcl
sbb
lods
js
into
mov
inc
sahf
fs
pop
bswap
mov
mov
xchg
push
cmp
dec
xchg
cwde
inc
jnp
leave
dec
push
iret
pushf
lods
xchg
rol
fidivr
sbb
gs
xchg
xor
out
pop
loop
jecxz
add
dec
popf
popa
xchg
ror
int3
cmp
xor
pop
cmp
add
int3
xchg
jno
test
mov
sub
push
inc
dec
xchg
ja
repz
xor
cwde
add
jnp
pop
add
jmp
add
and
mov
cmps
push
xor
jmp
test
fist
sbb
movs
scas
clc
or
mov
and
clc
and
cmp
add
push
imul
inc
push
mov
sbb
fwait
test
jge
(bad)
jg
adc
in
mov
xlat
adc
mov
pusha
pop
adc
(bad)
push
inc
out
jnp
enter
in
call
xor
std
or
sar
mov
pop
dec
or
cmp
repnz
call
arpl
xor
cmp
retf
mov
xlat
ds
(bad)
adc
inc
ja
jge
mov
inc
out
jae
inc
aam
pop
jmp
mov
int3
fidiv
mov
or
test
es
in
es
mov
xor
dec
mov
fld
outs
xchg
scas
mov
dec
push
fprem
push
(bad)
mov
(bad)
cli
enter
xor
cmp
(bad)
ins
lea
mov
aam
enter
mov
and
mov
push
mov
ret
into
stos
xor
in
ss
inc
ins
fcomi
mov
lods
inc
js
and
adc
daa
cli
sub
sbb
xlat
inc
in
mov
pop
das
dec
or
mov
add
test
sub
adc
leave
xchg
(bad)
call
jb
push
or
pop
ret
adc
in
sbb
test
xchg
mov
outs
mov
hlt
out
outs
test
(bad)
fmul
not
xor
xchg
inc
and
mov
sbb
push
push
clc
sbb
dec
pushf
adc
jl
fsub
push
pop
lods
cli
or
ins
sub
movs
aas
or
inc
jno
dec
cmp
test
mov
test
lods
sub
mov
cmps
rcl
fs
loop
cwde
and
bound
mov
mov
cmp
repnz
or
jae
mov
mov
rol
das
mov
enter
xchg
enter
hlt
jmp
or
sub
repz
cwde
pop
jbe
jnp
xchg
inc
add
loopne
cmp
call
cmps
xchg
(bad)
cs
sub
sbb
fmul
sbb
cmps
data16
adc
xchg
pop
in
and
sahf
pop
dec
(bad)
dec
outs
es
jb
ins
mov
mov
bound
and
sbb
adc
retf
lods
cmp
push
mov
pop
adc
mov
pop
nop
(bad)
test
inc
fistp
and
xchg
aad
ror
mov
cmp
repnz
imul
mov
xor
jno
push
or
lahf
pop
(bad)
mov
cmp
and
sbb
jo
mov
mov
jmp
inc
pop
add
and
push
lahf
xchg
jo
push
xchg
mov
cmp
sbb
mov
lahf
sbb
sahf
push
sbb
jbe
jno
sbb
sbb
and
push
pop
push
fmul
xchg
mov
xor
inc
loope
shl
and
das
std
fild
lods
inc
push
adc
mov
retf
jmp
sahf
sahf
loopne
mov
jbe
addr16
popf
sub
jns
fcomp
jo
pop
outs
pop
into
rol
ret
daa
add
jmp
lock
cld
call
push
ret
lea
pop
or
lock
add
adc
fdivr
out
adc
pop
rcr
xchg
cld
retf
(bad)
mov
test
out
nop
jl
jg
fbstp
pusha
jg
outs
and
popa
or
ror
push
js
inc
dec
mov
jo
add
inc
dec
in
mov
jecxz
fisubr
adc
loopne
popf
and
fld
jns
int
sbb
jmp
out
mov
jl
sub
mov
lahf
xchg
pop
aam
jmp
jl
cmp
mov
loop
add
inc
sub
pop
pusha
bound
aad
imul
xor
call
push
aaa
adc
adc
jmp
out
pop
in
push
aas
mov
lods
push
mov
inc
xchg
xor
es
pop
jae
imul
mov
or
push
shl
in
mov
pop
pop
adc
dec
jnp
push
or
inc
sbb
test
ret
popf
aas
or
inc
cs
push
es
loopne
pop
les
das
fadd
pop
ret
loope
and
dec
push
sub
ror
scas
jmp
aas
adc
or
pushf
imul
mov
xor
xchg
ins
or
or
push
push
sub
sub
(bad)
push
popa
bound
dec
nop
cs
std
pop
(bad)
mov
es
ret
inc
push
sbb
icebp
or
out
aad
cmps
loope
sbb
test
jne
inc
(bad)
cs
mov
imul
iret
cld
lahf
xchg
pop
sbb
hlt
mov
mov
ss
ins
repnz
cmp
loope
nop
adc
lods
lahf
call
fst
cli
add
mov
jmp
imul
sar
data16
and
loopne
iret
push
pop
stos
dec
push
nop
les
sub
mov
and
ds
das
ret
in
push
pusha
fist
std
shr
(bad)
aaa
mov
adc
test
call
jb
aas
jge
in
xchg
adc
ror
mov
and
xchg
xor
mov
test
pop
mov
test
sahf
pop
dec
aas
lea
or
(bad)
pop
out
into
pop
push
and
mov
cmp
adc
fcom
imul
and
xor
add
lahf
lea
cmp
jmp
lds
not
push
sub
aas
ins
pop
push
mov
jno
inc
ret
mov
fnstcw
dec
ds
and
adc
add
jo
adc
or
(bad)
sub
push
adc
adc
pop
mov
jmp
adc
stos
mov
jp
scas
clc
xor
repnz
out
pushf
shl
push
push
(bad)
push
int
aam
adc
jmp
xchg
dec
js
dec
pop
inc
out
int
(bad)
jmp
loopne
pop
dec
inc
int3
inc
cmp
data16
push
dec
add
xlat
aaa
adc
movs
xchg
cmps
xlat
sbb
or
and
movs
test
mov
mov
popa
loope
hlt
add
shl
(bad)
loope
pop
jp
push
je
sti
xor
repnz
and
mov
out
repz
push
jle
rcl
jg
jno
pop
test
xlat
inc
xlat
jp
add
jo
std
(bad)
mov
inc
pop
cwde
xor
aad
pop
mov
sub
inc
or
pop
pop
jle
cmc
mov
xor
je
push
cmp
inc
leave
shl
stos
dec
ffree
retf
sub
(bad)
les
int3
sub
imul
aad
mov
jno
adc
jno
adc
and
pop
xor
pusha
xor
or
adc
popa
sbb
cmp
stc
mov
cmp
sar
push
imul
gs
dec
pop
ret
push
cmps
mov
xchg
pusha
cmp
inc
jnp
jmp
jnp
mov
inc
push
in
adc
inc
pop
xor
jmp
xor
adc
das
jnp
cmps
adc
push
and
cmc
in
test
mov
loop
test
loop
sub
sbb
shl
mov
in
sar
push
(bad)
in
mov
mov
(bad)
in
ret
fld
repz
arpl
rcr
xor
mov
push
dec
stc
arpl
iret
(bad)
sti
dec
std
mov
or
jno
push
jp
cdq
mov
pop
xchg
iret
sbb
pop
or
repnz
jae
shl
mov
(bad)
sbb
out
ins
mov
push
aad
out
in
stc
call
or
jne
(bad)
pop
(bad)
fisttp
fisttp
and
push
dec
adc
(bad)
aam
hlt
mov
mov
mov
mov
pusha
pop
cmp
icebp
sub
mov
int3
fwait
mov
and
aam
cmps
mov
mov
test
add
push
aad
push
push
xchg
outs
mov
or
in
jl
retf
push
(bad)
cs
fs
push
sub
movs
cmp
mov
mov
call
pop
and
add
sbb
xchg
and
add
cmc
leave
jb
mov
mov
inc
push
jl
in
mov
lock
bound
jb
(bad)
or
nop
popa
sub
popa
mov
div
movs
mov
fisub
imul
or
adc
loopne
adc
adc
xchg
jmp
clc
mov
mov
outs
gs
jo
das
and
stc
mov
popf
adc
fwait
call
cs
mov
xchg
jo
add
push
dec
xlat
push
arpl
pop
pop
push
push
pop
push
hlt
add
neg
idiv
(bad)
mov
int3
out
mov
pop
les
xchg
push
imul
stc
popf
sub
clc
sahf
(bad)
jmp
push
cld
xchg
push
mov
add
and
push
mov
fstp
popa
int3
popf
jmp
(bad)
call
add
sbb
push
push
and
and
ret
mov
cs
dec
stos
ja
call
ror
retw
rol
add
popf
icebp
mov
pop
push
pop
call
adc
popa
push
outs
stos
lods
pop
sub
clc
pushw
jp
rcr
xchg
dec
jecxz
std
pop
mov
aaa
enter
ss
pop
push
jne
xchg
and
sbb
cmp
sub
lea
shr
loope
cmp
test
pusha
call
jb
sbb
dec
xchg
and
or
mov
outs
add
dec
mov
lahf
rcr
pop
stos
push
push
(bad)
and
mov
push
adc
mov
popa
jge
or
test
das
mov
sahf
lahf
(bad)
std
push
test
jp
(bad)
in
imul
sbb
ins
mov
ja
pop
(bad)
dec
and
xor
stc
pushf
xor
fldln2
xchg
shl
call
jmp
adc
out
jbe
inc
mov
mov
pop
frstor
cmps
dec
je
jp
sahf
mov
movs
mov
inc
push
ins
mov
mov
push
inc
mov
sbb
rol
push
movs
fmul
pop
cmp
leave
gs
loopne
test
repnz
fiadd
data16
fbld
es
mov
pusha
push
pop
dec
call
(bad)
das
mov
mov
fld
dec
enter
imul
in
pop
adc
nop
xor
repnz
ror
push
push
ret
cmp
mov
or
or
sub
fmul
and
mov
test
dec
pop
jg
cmp
jmp
push
sahf
fs
stos
mov
dec
enter
das
sahf
das
arpl
out
mov
lock
aam
mov
xor
sbb
outs
int
shr
adc
mov
mov
dec
sub
mov
nop
imul
enter
rol
nop
sub
xchg
push
and
gs
or
mov
cmp
out
cs
adc
lds
sbb
fist
fwait
mov
xchg
jns
leave
jle
sub
inc
pop
mov
sbb
mov
and
push
sti
les
xchg
(bad)
adc
pop
cmc
or
adc
cmps
fld
ficomp
xchg
or
ret
das
fnstsw
outs
add
aad
mov
imul
(bad)
pushf
and
dec
cdq
pop
lods
push
stos
jbe
add
xlat
ret
dec
pminsw
xchg
push
cmp
and
pop
aad
out
mov
xor
in
enter
dec
sub
add
jb
mov
push
jae
cs
jne
dec
in
sub
adc
fneni(8087
addr16
jg
sbb
ds
arpl
xor
dec
jae
sbb
mov
sub
jg
js
mov
add
jl
fld
jmp
shl
cmp
lods
ins
fs
or
in
xchg
test
and
mov
cdq
outs
push
push
test
mov
mov
sahf
mov
out
sub
push
cmp
fiadd
sub
stos
sbb
fst
sbb
cmps
rcr
(bad)
mov
mov
mov
paddsb
add
jnp
pop
retf
(bad)
cdq
xlat
pop
ss
xor
daa
fdiv
out
sub
inc
ffreep
(bad)
sbb
inc
mov
fwait
arpl
rcl
lods
pop
fs
push
mov
retf
and
mov
(bad)
movs
mov
adc
daa
aad
test
adc
xor
mov
dec
das
add
imul
mov
dec
aaa
or
pop
jmp
pusha
add
xchg
imul
imul
jl
jno
cmp
je
mov
cmp
ds
mov
lods
dec
dec
mov
xor
sbb
aam
dec
rcl
loopne
sbb
mov
jb
retf
test
stc
pop
sub
add
ret
push
adc
mov
repnz
mov
pop
cdq
dec
push
add
mov
or
mov
or
fist
xchg
inc
dec
ins
or
lods
movs
cmp
mov
mov
mov
mov
mov
jp
or
js
dec
mov
out
in
out
fwait
icebp
sbb
ja
jmp
mov
xchg
sub
jmp
outs
xchg
(bad)
das
jge
sti
sbb
cwde
jl
into
mov
cmp
mov
imul
mov
xchg
cmp
retf
std
xlat
push
mov
xor
pop
dec
fldcw
scas
lock
sub
mov
ret
adc
xchg
ret
or
xor
add
pop
(bad)
pop
or
sbb
movs
pop
(bad)
loopne
hlt
movs
pop
(bad)
clc
push
jbe
push
xor
ret
cmps
js
repnz
dec
pop
jle
xchg
dec
xor
sub
push
add
add
push
pop
fnsave
leave
(bad)
inc
dec
pop
int3
shl
je
jnp
ret
and
je
xor
icebp
lods
imul
scas
clc
pop
hlt
cs
pop
xchg
jp
adc
gs
mov
mov
push
inc
mov
or
push
inc
pop
or
mov
out
push
std
std
jmp
dec
dec
mov
adc
in
icebp
add
dec
movs
sub
jbe
mov
jecxz
addr16
popa
mov
enter
mov
sti
jne
sbb
sbb
mov
cmps
imul
loop
js
lock
gs
ja
vcvttss2si
and
cli
xor
pushf
retf
cmps
push
mov
loopne
adc
add
jecxz
jb
adc
rcr
fxch
fild
jne
mov
out
add
push
movs
sahf
mov
fisubr
iret
xchg
add
mov
jg
or
xor
mov
lahf
adc
sti
movs
mov
jo
rcl
fldenv
aas
mov
jmp
stc
test
xor
(bad)
lock
sub
ror
cmps
dec
mov
jmp
adc
(bad)
push
and
loopne
cmp
dec
popa
lds
addr16
add
outs
cmp
dec
out
dec
loopne
idiv
or
fs
lods
enter
jbe
cmp
test
inc
ror
clc
or
int
jb
inc
out
push
push
movs
sbb
push
popf
push
cmps
(bad)
xor
mov
in
repz
stos
lea
add
icebp
mov
push
ds
cdq
dec
jmp
jnp
xor
sbb
outs
imul
push
lahf
in
loopne
pop
sbb
(bad)
adc
jmp
mov
out
dec
lock
icebp
mov
(bad)
popf
sub
xchg
pusha
es
dec
push
sub
std
pop
adc
xchg
xchg
pop
(bad)
jecxz
mov
xor
inc
pop
ins
xor
push
sub
sub
mov
in
ins
push
les
out
loopne
pop
inc
or
aad
rcr
mov
ss
icebp
mov
out
das
cmps
cdq
jmp
idiv
adc
push
push
pusha
xchg
inc
or
cmp
sub
fistp
aam
push
xchg
leave
push
dec
repnz
cwde
fild
nop
sub
daa
fmul
mov
xor
xchg
dec
sbb
or
push
cwde
push
enter
push
cmp
sub
mov
xor
jo
addr16
mov
imul
push
(bad)
cmp
cmp
int
and
pusha
jne
jbe
mov
in
cwde
je
daa
xchg
rcr
dec
xchg
push
add
ds
push
(bad)
repnz
ins
jbe
adc
mov
pop
sbb
mov
lock
adc
hlt
cmps
xchg
or
lods
push
cmp
repz
push
fs
scas
mov
jns
inc
test
ret
rcr
jne
pop
pushf
in
imul
push
push
cmps
mov
sub
jb
shl
mov
add
pop
ins
mov
pusha
cmp
test
push
mov
aas
jns
cmp
and
movs
addr16
add
popf
out
in
mov
data16
ins
inc
xor
mov
adc
in
cmp
mov
jle
fcomp
cmps
inc
mov
add
lea
ret
test
pop
mov
pop
movs
xchg
shr
mov
jo
fprem
add
cwde
sar
mov
(bad)
js
in
mov
std
enter
push
jge
jne
out
into
mov
popa
(bad)
rcl
push
test
shl
neg
std
lahf
shl
cmp
imul
rol
mul
data16
in
adc
xchg
fist
es
bnd
mov
stos
mov
xchg
and
sbb
outs
push
inc
dec
mov
xchg
mov
and
adc
je
pop
jb
mov
cs
mov
fild
mov
dec
jecxz
push
and
mov
not
sub
push
add
loope
in
push
jno
jb
or
div
push
lea
test
cmp
int
sbb
cmps
add
hlt
mov
push
pushf
mov
jns
dec
sar
and
dec
arpl
sbb
gs
sub
test
inc
fimul
jne
mov
inc
sub
jmp
mov
xchg
cmp
(bad)
shl
fcomi
(bad)
or
add
cwde
inc
in
jne
mov
ins
jns
jle
xchg
add
call
jp
inc
dec
enter
xor
aaa
lock
clc
inc
mov
jns
xchg
mov
mov
or
test
ss
push
xchg
sbb
imul
adc
shr
(bad)
mov
adc
xlat
cmp
mov
(bad)
and
aam
jne
enter
mov
bound
inc
popf
iret
shl
imul
std
loope
xor
or
jle
sub
xchg
mov
xor
mov
or
adc
mov
popf
repz
mov
out
(bad)
jmp
mov
push
sbb
mov
inc
repnz
jo
dec
das
repnz
cmp
mov
cmp
xchg
mov
retf
xor
jmp
push
jmp
pop
aam
repnz
aaa
push
mov
xor
lods
jecxz
sbb
mov
aaa
sar
outs
pop
nop
cwde
mov
mov
mov
rol
xchg
mov
jmp
ss
xor
stos
fisttp
rcr
mov
mov
std
std
inc
aas
jl
rcr
or
pop
jmp
pop
pop
cmp
dec
mov
test
imul
sub
mov
xchg
mov
sahf
adc
(bad)
dec
dec
xor
inc
adc
cwde
sub
stos
push
adc
mov
test
in
push
mov
cmp
jmp
mov
ret
fnsave
fidiv
leave
fstp
fs
xchg
pop
xchg
mov
into
js
jbe
cli
push
test
(bad)
enter
sub
mov
adc
(bad)
pop
cmps
mov
xor
sbb
jnp
push
add
jle
aaa
dec
stc
jecxz
mov
and
add
pop
ror
adc
xchg
mul
push
or
fstp
cmp
mov
inc
sbb
in
popf
jb
mov
add
leave
cmp
(bad)
icebp
jge
out
call
mov
and
cmp
mov
dec
adc
pop
mov
js
mov
pusha
xor
shl
or
out
pop
mov
dec
fcomi
(bad)
in
aam
cdq
mov
jle
sbb
test
or
loopne
jbe
mov
add
stos
jo
int
std
in
dec
lock
cmps
jl
pushf
addr16
imul
xor
and
cmp
mov
test
aas
inc
vpaddsw
mov
mov
push
mov
jnp
in
or
(bad)
in
xor
xchg
imul
sbb
inc
push
sbb
inc
cmp
pop
out
xchg
jg
sbb
lahf
jae
mov
and
ins
adc
call
mov
or
popf
data16
dec
pop
dec
push
mov
pop
lods
scas
sahf
out
jecxz
enter
and
sbb
sbb
cld
ret
(bad)
push
xchg
imul
test
pop
fwait
and
(bad)
xor
mov
mov
jl
test
ss
xchg
in
mov
cmp
ds
pop
repnz
test
sub
adc
fistp
cmps
jae
das
sbb
adc
dec
mov
arpl
fsub
mov
inc
loope
aad
loop
and
xchg
je
dec
mov
clc
outs
nop
ret
mov
rol
sahf
(bad)
es
jle
mov
lock
dec
mov
movs
push
shl
in
dec
sub
pop
repz
(bad)
mov
ret
push
sub
mov
jmp
pop
inc
sti
popa
shl
mov
xor
and
xchg
xor
cmps
adc
mov
push
(bad)
pop
aam
or
mov
mov
and
push
mov
bound
push
xor
xor
jno
sub
sbb
cmp
jo
or
icebp
out
cld
sbb
mov
loope
pop
dec
cld
in
clc
lods
repz
sub
pushf
sbb
cmc
pop
sahf
xor
sbb
sar
loop
add
jno
and
inc
or
xor
test
jb
mov
push
(bad)
dec
sahf
mov
scas
xchg
push
inc
mov
jmp
(bad)
fiadd
mov
sub
xchg
rol
inc
aas
pop
in
inc
aam
add
cmp
push
dec
popf
push
aam
daa
out
ret
pop
or
test
push
push
ins
in
pop
dec
jmp
lds
or
repnz
in
push
jmp
or
(bad)
lock
shl
fwait
stos
jmp
cmp
and
movs
and
push
add
sub
les
not
dec
mov
aam
outs
(bad)
dec
aam
sbb
retf
dec
xchg
sub
push
mov
mov
(bad)
xor
das
call
out
mov
mov
fisub
push
into
mov
lea
scas
mov
sbb
addr16
in
push
xchg
test
pop
shr
rcr
into
popa
lods
(bad)
mov
dec
cmp
mov
dec
mov
(bad)
test
(bad)
into
daa
pop
lahf
push
xor
xor
fwait
and
sub
mov
arpl
fcmovnu
mov
inc
mov
int
icebp
push
add
in
mov
ss
lds
cmp
sbb
xlat
das
sbb
mov
jmp
in
iret
mov
scas
stc
mov
rcl
aas
call
add
out
adc
pop
mov
sti
sub
fst
sar
inc
dec
cmp
jno
xchg
and
movs
add
cwde
push
pop
dec
sbb
test
add
imul
sahf
sti
push
je
and
cmp
cmp
adc
mov
ins
out
pop
inc
call
jg
dec
je
sar
xchg
lahf
rcr
in
aad
leave
scas
icebp
clc
push
mov
(bad)
out
nop
call
fs
and
(bad)
xchg
addr16
or
fst
pop
out
(bad)
and
xor
sub
dec
cmps
in
popa
or
mov
pushf
jbe
xchg
retf
sbb
packsswb
ret
ror
xchg
mov
out
cwde
addr16
adc
cmp
push
push
scas
or
jno
cli
stos
inc
test
ret
add
data16
dec
add
pop
popf
shl
test
xchg
cmp
(bad)
fnstenv
fwait
aam
icebp
mov
out
popf
jbe
jns
rcr
iret
pop
faddp
add
sub
xchg
fmul
movs
clc
mov
int3
push
(bad)
lods
fild
retf
mov
push
sub
mov
mov
fistp
bound
inc
mov
test
lods
sbb
xchg
je
scas
jb
stos
int3
sbb
adc
inc
pop
ficomp
dec
or
sahf
std
or
add
cmp
cdq
pop
sbb
cmp
mov
pop
inc
repnz
ins
xor
push
ror
call
dec
cmp
fstp
push
test
xchg
push
lahf
test
test
stos
pop
sub
xchg
cwde
les
daa
(bad)
pop
loop
pop
sbb
mov
xchg
inc
mov
inc
ds
ins
fsub
cmc
and
loope
inc
mov
xchg
popa
adc
mov
cli
lahf
cmp
xor
pop
xor
or
jb
fdiv
push
das
mov
pop
mov
jge
nop
rcr
sbb
pop
jo
push
out
loop
cmp
push
pop
and
add
cmp
loopne
aam
je
mov
clc
sar
fld
and
sub
cmps
call
adc
pusha
cmp
inc
pop
ss
mov
icebp
push
test
cli
dec
sar
fsub
inc
inc
repz
addr16
ins
stos
mov
and
add
push
dec
sahf
push
pop
push
jmp
out
int3
(bad)
(bad)
mov
add
imul
arpl
sub
int3
sub
cmp
xlat
adc
pop
xchg
shr
adc
leave
sbb
pop
test
fstp
xchg
push
imul
aam
cmp
jno
pop
pop
pop
xchg
movs
int
mov
add
push
mov
sahf
jp
add
dec
es
xchg
call
ss
out
out
xchg
mov
cmp
xor
xor
push
add
lea
xadd
add
mov
jmp
pop
mov
enter
(bad)
xlat
addr16
rcr
iret
xor
mul
pop
(bad)
xchg
or
test
add
popf
repz
lea
sub
cmp
adc
aas
sbb
jp
int3
popa
push
mov
hlt
xor
adc
cmovle
fwait
lods
repz
fwait
lods
je
test
inc
inc
sbb
dec
mov
rcr
and
enter
add
lahf
retf
xchg
sbb
push
inc
out
ins
cmp
(bad)
mov
add
mov
and
push
(bad)
in
sti
fidiv
movs
arpl
mov
adc
ficom
mov
aaa
mov
add
push
jge
loope
jnp
xor
rol
xchg
ficomp
das
push
push
jno
cmp
or
jb
pop
add
sbb
add
push
mov
pop
xchg
aaa
ins
sbb
pop
mov
arpl
mov
xor
cmc
mov
jmp
jp
adc
push
cmc
xlat
lods
nop
pop
loop
mov
(bad)
hlt
icebp
call
(bad)
mov
adc
loope
imul
mov
(bad)
mov
in
ss
dec
or
call
jge
inc
sbb
scas
retf
cmp
dec
or
push
xchg
jo
sbb
or
lods
in
xchg
ins
mov
xchg
push
sbb
mov
sbb
cmps
add
xchg
imul
mov
(bad)
lahf
(bad)
mov
push
sbb
jne
mov
pop
mov
outs
mov
test
imul
imul
repz
sbb
dec
mov
sahf
mov
imul
jae
repnz
sahf
add
fisubr
mov
push
arpl
jne
jns
ret
add
jb
add
xor
dec
push
sub
push
jmp
test
js
repz
outs
in
out
sar
mov
add
pop
xchg
cmps
jp
mov
xchg
xchg
fld
inc
lods
test
jno
mov
out
dec
adc
pop
hlt
mov
int
pop
sub
outs
cdq
and
adc
in
cmp
movs
push
pop
mov
stc
lods
adc
icebp
pop
in
lea
dec
fdivr
add
(bad)
nop
push
xor
cmp
mov
xor
lock
in
loopne
mov
adc
pusha
outs
jp
jns
out
xchg
hlt
mov
xchg
aam
add
outs
aam
pop
push
mov
imul
mov
sbb
push
mov
aad
(bad)
out
rol
ins
jne
out
das
int
dec
sbb
scas
ins
fiadd
cmp
sub
dec
jae
sbb
xor
fld1
sub
(bad)
hlt
(bad)
xor
in
sub
clc
xor
cmp
gs
lods
sub
mov
or
fs
lods
dec
jecxz
lea
pop
xchg
lods
ror
adc
pop
push
adc
(bad)
xor
ss
pop
inc
cli
mov
jl
mov
cmp
pop
arpl
call
xchg
les
out
imul
push
xor
cmp
loop
not
mov
dec
jno
scas
sub
not
shr
xchg
retf
cwde
stos
xchg
retf
in
je
inc
(bad)
push
sti
imul
pop
pusha
imul
ja
out
pop
js
pop
in
xor
cmp
(bad)
ja
mov
pop
pmulhuw
cmps
movs
inc
mov
in
inc
bound
pop
outs
sbb
bound
sub
or
mov
(bad)
retf
imul
cmp
fadd
or
popa
xor
cld
cli
push
sbb
loope
loope
test
retf
pop
cmc
clc
push
inc
xlat
sub
pop
jg
and
cmp
data16
jmp
mov
loopne
push
xchg
ror
sub
dec
outs
and
or
inc
enter
aas
mov
add
arpl
mov
loopne
cwde
dec
cmc
call
into
arpl
mov
pop
in
nop
add
pop
add
mov
mov
push
or
and
pushf
(bad)
and
adc
mov
pop
pop
push
cld
dec
push
fidivr
jo
inc
outs
pop
jbe
xchg
lods
jle
sub
aad
mov
inc
mov
rol
sbb
out
push
push
test
jb
cdq
jle
add
fs
pusha
mov
es
loop
pop
out
ds
addr16
push
adc
mov
mov
adc
jne
fmul
add
icebp
shr
das
mov
ret
fs
(bad)
(bad)
pop
adc
inc
pusha
mov
call
pop
aas
movs
imul
pop
push
out
inc
imul
(bad)
js
adc
mov
jne
pop
in
(bad)
adc
and
les
xor
jl
pop
cmp
in
inc
sbb
(bad)
cmp
in
fcom
mov
or
sbb
jmp
addr16
test
inc
(bad)
loopne
inc
test
inc
sbb
das
mov
xchg
leave
lods
mov
and
inc
cmp
cs
popa
add
pop
fs
ds
inc
fdiv
cmp
ficomp
(bad)
cmp
jp
rcr
inc
in
shl
mov
into
xor
inc
in
adc
sar
push
dec
popa
pop
mov
inc
xchg
jmp
adc
add
mov
call
push
xor
rol
and
retf
call
call
cmps
dec
lea
icebp
xchg
test
inc
mov
dec
cmc
push
mov
jno
dec
(bad)
jl
jb
repnz
sbb
test
mov
(bad)
pop
pop
aaa
jns
adc
xor
xchg
jg
into
pop
mov
movs
popa
bound
mov
adc
outs
sub
cmp
xchg
pop
inc
repnz
inc
xchg
jns
xchg
xchg
jmp
mov
adc
loopne
and
pop
inc
fsub
aad
rol
and
mov
lods
call
rcl
scas
xor
lds
add
fidivr
fbstp
jmp
and
xchg
leave
cmp
xor
fwait
mov
inc
das
out
cmc
ds
push
mov
lods
enter
and
fld
pop
adc
inc
xchg
cli
jmp
xor
and
mov
jo
out
pop
sbb
xor
out
cmps
ins
mov
mov
mov
retf
push
cli
cli
enter
fwait
xor
inc
xor
pop
inc
inc
xchg
xchg
outs
mov
mov
loope
cli
dec
les
add
in
mov
mov
mov
mov
push
mov
pop
or
or
pushf
mov
jb
or
inc
enter
sbb
(bad)
stos
sub
inc
xchg
push
jne
xchg
mov
mov
outs
addr16
pop
inc
mov
je
ret
sub
mov
(bad)
cmc
xor
inc
cmp
adc
loop
out
mov
fwait
int3
je
dec
or
pusha
or
pop
(bad)
in
inc
les
add
gs
mov
push
push
sbb
dec
cmp
test
jns
jmp
inc
shr
mov
rcr
mov
jecxz
fdiv
push
xor
or
loopne
shl
and
pop
data16
mov
pop
or
pusha
jb
cmc
push
adc
jl
fdivr
arpl
push
test
push
cmp
test
(bad)
ficomp
inc
xor
xchg
sub
pop
ret
sbb
mov
pop
xor
mov
pop
sbb
lea
mov
gs
dec
outs
pop
xor
pop
push
push
pop
jnp
mov
cld
push
fdiv
nop
xchg
mov
mov
cmps
xor
inc
lea
fst
data16
lahf
lea
mov
dec
mov
cwde
cli
mov
jg
fbld
das
inc
or
xchg
cmp
cmp
outs
jns
int
stos
sti
fs
inc
hlt
scas
(bad)
jbe
sbb
inc
adc
popf
cmp
imul
cdq
aad
fst
jge
sbb
dec
cs
iret
outs
mov
test
sbb
fidiv
jmp
xchg
dec
adc
mov
xor
inc
movs
mov
jne
push
mov
sbb
(bad)
xor
sbb
xor
mov
mov
mov
daa
outs
aas
mov
mov
int
pop
push
sub
mov
leave
rol
lods
or
in
jo
pop
hlt
adc
push
sar
and
mov
push
ja
adc
sbb
add
sbb
imul
in
or
test
retf
ficom
stos
lods
retf
push
(bad)
ins
or
mov
(bad)
es
adc
(bad)
retf
sbb
movs
mov
mov
inc
bound
pop
fisttp
push
mov
fst
retf
adc
out
sbb
nop
pop
div
dec
popa
dec
(bad)
mov
mov
push
fiadd
push
mov
mov
and
add
loopne
mov
or
or
sbb
shl
xchg
mov
clc
aad
std
test
xchg
mov
add
ja
ror
xchg
cwde
cmp
in
out
outs
mov
test
push
pop
punpckldq
sbb
ins
mov
mov
mov
cmp
in
xchg
mov
mov
inc
int
into
ja
js
loope
out
pop
jmp
enter
dec
std
mov
in
std
add
mov
std
shl
xor
stos
sub
stc
loope
test
cld
mul
xchg
test
and
jns
mov
hlt
or
js
shl
ret
leave
outs
and
inc
or
add
jmp
dec
inc
xchg
ss
imul
cmp
imul
jbe
lods
js
enter
sub
adc
mov
inc
mov
dec
sub
js
rol
dec
pop
mov
jne
jge
push
add
xor
sub
test
push
fistp
cld
popa
cld
sub
addr16
(bad)
cli
xor
sbb
sbb
dec
xchg
outs
xor
or
out
and
fisttp
ret
leave
mov
add
or
mov
ss
xchg
xlat
cdq
add
es
inc
adc
xchg
lods
(bad)
(bad)
sti
push
mov
enter
aam
mov
mov
jno
jmp
scas
mov
ja
jae
pop
xor
jl
pop
lods
inc
cmp
es
inc
std
dec
idiv
and
fcmovu
popa
cdq
dec
mov
add
fcomi
popf
sub
or
rcr
pop
jmp
nop
pusha
(bad)
or
(bad)
addr16
mov
outs
pop
jg
add
xchg
leave
test
push
test
xchg
push
dec
aam
js
pop
outs
push
ja
sbb
je
cmp
push
fld
push
test
adc
call
fisubr
jb
jbe
icebp
out
xchg
xor
mov
loope
fsave
ficom
fmul
in
mov
push
add
int3
or
or
inc
pusha
jmp
cmove
lods
stc
jle
or
out
jmp
sbb
fisub
cwde
sbb
repz
cdq
in
in
fwait
into
sbb
xor
jecxz
add
ror
ins
and
fld
jmp
stos
hlt
cmp
push
int3
adc
sub
out
loope
sbb
call
lock
mov
cld
je
sbb
stc
sub
clc
mov
mov
popf
xchg
and
cwde
adc
adc
xor
inc
fs
shr
xchg
imul
div
rcr
xor
das
xchg
and
push
rcr
bound
aas
sahf
adc
ins
es
dec
lds
push
xor
stc
push
pusha
pop
jp
outs
jo
push
fsubr
les
xchg
jmp
in
popf
sub
cs
xor
xchg
fstp
ja
mov
add
shr
icebp
jno
std
fbstp
fbstp
in
xor
mov
fisttp
(bad)
stos
jmp
enter
mov
xchg
jmp
sub
outs
lahf
leave
xor
sbb
adc
das
mov
nop
outs
adc
jmp
test
mov
jmp
cmps
cmp
sbb
ins
stos
das
pop
icebp
cld
cmp
cs
mov
or
fs
xchg
jmp
mov
xchg
sub
aam
stc
arpl
jo
push
mov
fwait
repz
push
pop
stos
stc
pop
stos
sub
and
push
cmc
and
mov
gs
mov
push
or
pusha
xchg
jmp
mov
add
or
int
retf
mov
jg
mov
jl
cmc
sbb
jnp
jp
jg
push
adc
dec
cli
cli
xchg
mov
ins
clc
test
aas
pusha
imul
ret
div
jo
push
jecxz
sti
xor
stos
cmps
(bad)
or
jmp
xor
inc
test
add
mov
or
mov
icebp
jg
test
xchg
or
or
dec
mov
(bad)
fst
cld
sar
in
sub
cmp
scas
imul
jbe
and
adc
push
xchg
sahf
jmp
xchg
sbb
mov
sbb
xor
inc
je
into
jns
sti
mov
sub
scas
packuswb
sti
cmc
out
imul
fnstcw
mov
or
imul
lock
xor
mov
lds
repz
out
movs
mov
aas
sbb
stos
push
push
test
daa
push
mov
push
sti
mov
iret
push
push
pop
jge
push
add
xor
int
cmp
push
je
mov
add
pushf
sbb
cmps
sub
mov
push
or
fcomp
lods
cmp
in
retf
mov
dec
shl
cmp
dec
dec
cmp
(bad)
into
dec
dec
xchg
xchg
ja
xchg
iret
fild
sbb
pop
bound
(bad)
sar
fsubr
outs
xchg
lods
mov
sub
cmp
call
data16
imul
dec
scas
scas
js
xchg
fdiv
(bad)
(bad)
(bad)
or
es
cmps
inc
jge
call
sub
imul
inc
(bad)
adc
pop
add
clc
gs
(bad)
adc
hlt
ret
pushf
xor
dec
xchg
dec
fs
or
test
xor
shl
inc
pop
push
test
sbb
ins
fisub
loope
rcr
mov
call
scas
dec
jns
jbe
enter
es
retf
fmul
xor
das
es
loope
scas
fcomp
imul
inc
das
fs
(bad)
cdq
test
or
fistp
fdivr
cmps
fbstp
sti
(bad)
loopne
loop
stos
and
or
xchg
cwde
das
xchg
cmp
sub
mov
xor
xchg
jnp
ds
cmp
pop
add
xor
mov
mov
and
pop
std
iret
stc
cmp
cmp
jae
(bad)
mul
jl
rcl
jmp
jmp
test
shl
std
mov
ds
mov
stos
in
sub
aas
dec
add
mov
xlat
leave
xlat
leave
repnz
or
popa
in
das
mov
mov
retf
cwde
leave
ret
jge
jne
mov
ja
cmp
mov
push
gs
pushf
hlt
fadd
not
mov
cwde
cmp
pusha
cmp
lahf
add
jno
pop
int
in
fisttp
test
ja
or
test
add
neg
or
or
cmp
aas
aas
mov
ret
cmc
and
ins
pop
fsub
push
xchg
ins
jno
out
sub
sub
rcl
ja
popf
pop
imul
jnp
jp
daa
mov
and
pop
cld
xor
inc
or
popf
xor
stos
push
mov
xchg
jg
or
cmp
or
xor
retf
icebp
and
loope
mov
pop
sub
movq
push
push
inc
(bad)
loopne
push
(bad)
dec
pop
and
sub
push
frstor
adc
cmp
add
mov
sub
aaa
mov
(bad)
sbb
mov
sub
pop
inc
mov
je
outs
xchg
cld
mov
jo
jmp
sbb
scas
out
ins
pop
(bad)
stos
push
mov
mov
clc
and
jl
cmp
xlat
je
inc
test
lock
ret
push
rol
jbe
fimul
test
cmps
xchg
pop
stc
pop
mov
and
mov
movs
mov
add
pop
sub
popf
jnp
sub
and
shl
rcr
dec
mov
sub
(bad)
or
das
xchg
adc
(bad)
loope
movs
dec
(bad)
retf
and
movs
lds
xlat
add
js
daa
ds
arpl
aad
jne
stos
sbb
push
adc
push
movs
int
outs
sar
and
xor
outs
icebp
sbb
sbb
sahf
jl
lds
xchg
mov
mov
adc
(bad)
lods
arpl
and
sahf
xor
and
sub
aam
xchg
lods
xlat
test
or
mov
stos
test
adc
mov
aam
test
in
sbb
sbb
fidiv
xor
jno
mov
aas
repz
gs
pop
add
push
and
add
xor
dec
mov
push
pushf
arpl
mov
or
stos
adc
sbb
movs
xchg
push
in
cmps
(bad)
jecxz
xchg
jnp
xor
shl
cdq
loope
dec
push
jae
ins
sar
sub
rol
xor
lods
xchg
out
jb
das
pop
mov
fstp
or
pushf
scas
push
jo
dec
cmp
repz
cmp
lock
xlat
jmp
or
push
sub
mov
imul
aad
jecxz
fld
test
sbb
mov
add
ret
pop
das
jg
jge
cmps
mov
(bad)
popf
test
bnd
js
rol
arpl
adc
cmp
jp
and
fwait
push
inc
cmc
pop
xchg
loope
inc
xchg
mov
inc
out
adc
inc
add
aas
xchg
(bad)
fsqrt
mov
jmp
ins
(bad)
and
or
adc
and
inc
adc
out
sub
sub
jne
retf
pop
repnz
inc
cs
push
jl
test
adc
out
mov
sub
sub
aas
shl
mov
fbstp
inc
adc
mov
lods
call
test
adc
popa
out
lea
xor
out
leave
ins
dec
stos
jg
lods
mov
arpl
loopne
pop
and
push
push
pop
mov
gs
xchg
sub
ret
pop
xor
mov
shl
cmc
jns
mov
xchg
aam
jb
lods
iret
jmp
das
adc
ret
mov
jl
shl
inc
mov
jae
ficomp
(bad)
fstp
xor
add
pusha
fwait
sbb
jmp
test
inc
push
adc
stos
fistp
(bad)
ret
or
call
jmp
movs
push
jns
enter
jp
pop
mov
retf
push
mov
rcr
fdiv
dec
jmp
ds
cmc
dec
adc
movs
cs
xchg
imul
cmp
call
add
push
clc
add
(bad)
jmp
std
sub
je
push
and
js
push
aad
sbb
les
js
jmp
rcr
xchg
inc
xor
fdiv
add
jge
pop
das
push
mov
push
xchg
call
imul
add
push
stc
(bad)
ret
jg
add
mov
mov
jno
jg
test
or
and
test
(bad)
sbb
xchg
mov
mov
cmp
pop
test
lods
scas
(bad)
repnz
leave
fdiv
daa
xor
pop
xor
pusha
not
mov
call
rcl
jae
add
call
jns
sbb
nop
imul
das
mov
lock
std
cmp
add
enter
iret
sbb
hlt
idiv
repz
push
sub
mov
ja
mov
cmp
push
xchg
adc
outs
cdq
ficomp
pop
mov
mov
add
cdq
repnz
aas
xor
xor
mov
outs
mov
sbb
mov
(bad)
mov
and
addr16
cmps
fsubr
and
outs
push
dec
pop
mov
adc
jecxz
es
pop
movs
mov
retf
push
push
retf
jg
push
and
adc
mov
stos
test
add
fs
xchg
pop
(bad)
movs
sub
jmp
arpl
jne
mov
push
push
sub
std
mov
xor
cdq
data16
xor
fiadd
idiv
mov
cmc
ja
push
jne
popf
and
sub
inc
mov
aad
xchg
or
xchg
lods
pushf
jle
data16
adc
fld
xor
fbstp
(bad)
movs
mov
jmp
sbb
loopne
dec
mov
and
cli
cmp
mov
aad
ins
stc
and
adc
mov
mov
in
sbb
arpl
pop
inc
and
cmp
cmp
or
and
lods
pop
ret
(bad)
(bad)
iret
xchg
fdivr
cmp
jbe
adc
mov
aas
(bad)
pop
xor
add
inc
int3
xchg
ret
jg
xor
mov
mov
jno
mov
dec
jp
icebp
xchg
jp
add
test
aad
into
pop
ja
or
enter
retf
leave
outs
iret
(bad)
nop
xor
cmp
mov
sahf
cmps
(bad)
in
cmp
fld
jmp
jb
test
xor
mov
sti
adc
inc
or
shl
push
mov
mov
imul
aaa
add
inc
mov
jmp
je
dec
into
inc
jns
lock
ja
mov
jmp
jmp
jp
xchg
jne
shl
adc
xchg
cmps
dec
jecxz
push
test
fwait
cs
push
jmp
outs
or
or
fisubr
mov
fld
mov
call
sbb
scas
lea
xor
mov
or
ss
pop
adc
mov
mov
ja
leave
sbb
and
fmul
inc
lahf
sar
mov
fild
enter
mov
popf
jmp
jo
das
movhps
arpl
add
mov
mov
loope
std
mov
ss
sti
and
pop
mov
jle
xor
inc
clc
jne
sbb
les
xlat
in
loop
pop
das
test
mov
mov
xchg
leave
movs
sahf
adc
lock
into
iret
das
fldcw
and
lahf
jmp
sbb
cmp
lds
retf
int3
inc
mov
cli
jle
test
lods
fcomp
mov
imul
sbb
iret
(bad)
mov
shl
jne
cmp
inc
les
sbb
sub
clc
mov
das
ffreep
xor
hlt
xchg
int
xchg
out
int
jp
shl
xchg
arpl
push
pushf
sbb
cwde
retf
cwde
repnz
cs
fbstp
sub
mov
dec
adc
outs
adc
jg
sar
dec
sahf
inc
out
mov
or
push
push
aas
pop
call
xor
mov
or
outs
sbb
std
das
sahf
sbb
xchg
fist
stos
ins
sub
test
mov
jb
dec
fstp
imul
inc
fcomp
fnstenv
add
inc
clc
mov
out
and
and
mov
fcmovnb
test
xchg
ja
xor
inc
mov
int
xor
call
outs
outs
jno
nop
cld
shr
cmp
imul
lds
out
and
inc
xor
xchg
inc
scas
ret
stos
(bad)
retf
push
inc
fcmovne
mov
call
sbb
fild
lods
fbstp
jge
mov
in
in
cmp
jl
cmps
push
int
jo
lods
rcr
das
jo
outs
sbb
cwde
xor
xchg
mov
push
or
or
pop
into
jp
div
mov
xor
fistp
dec
pop
adc
imul
(bad)
cmp
loope
lock
jecxz
mov
push
pop
adc
xchg
mov
out
out
sub
retf
jb
sub
pop
sub
stos
pop
jo
push
int
test
mov
call
xor
pop
mov
shl
xor
push
jnp
je
or
and
pop
mov
hlt
stc
mov
stos
fs
pop
mov
mov
jno
add
add
movs
xchg
adc
daa
add
(bad)
(bad)
(bad)
loope
adc
test
pop
movs
sub
int
scas
mov
ds
mov
mov
adc
lods
into
loopne
lds
ss
xlat
adc
or
xchg
es
sti
sbb
lahf
xchg
pop
push
retf
and
mov
add
stos
and
cld
push
sbb
mov
push
or
jl
sbb
movs
mov
mov
dec
add
push
cld
mov
mov
add
or
dec
or
fiadd
lahf
pop
adc
ss
movs
sub
push
popa
fsub
dec
sub
jmp
inc
mov
call
addr16
sahf
in
retf
ds
es
xchg
sub
pop
cmc
test
aaa
retf
hlt
dec
add
test
add
sub
push
mov
(bad)
shr
xchg
mov
xlat
sar
xlat
sbb
hlt
jle
mov
add
(bad)
retf
(bad)
aas
and
ror
xchg
shr
and
ins
aad
sbb
cs
dec
cmc
stos
fimul
or
movs
fcmove
es
xor
cmp
push
jmp
mov
push
mov
cmp
and
xor
pop
clc
call
inc
fwait
rcl
push
add
ja
dec
push
ror
hlt
clc
and
adc
jae
dec
xchg
inc
daa
add
dec
jae
cmp
mov
push
inc
(bad)
xchg
mov
into
fild
movs
jmp
popf
mov
add
test
xor
add
push
inc
lods
push
outs
cmp
shl
shl
cmp
stos
or
shr
cmps
outs
mov
cld
mov
pop
xchg
cmp
inc
jge
scas
div
sti
int
mov
push
call
mov
bound
call
ds
rcr
ss
mov
das
xchg
cmps
lods
jbe
dec
inc
iret
fyl2xp1
push
add
mov
mov
fs
mov
adc
stc
add
push
add
in
pop
cmc
leave
into
jae
pop
push
out
js
and
jns
idiv
push
adc
pushf
(bad)
sbb
add
xchg
xchg
in
or
loope
jge
push
mov
sbb
cmp
push
jp
dec
adc
push
sub
mov
inc
push
fadd
jns
mov
cli
jns
fstp
mov
xor
loope
jae
cmps
inc
lock
mov
test
sahf
add
or
cdq
rcl
mov
jbe
sahf
sbb
mov
add
adc
or
shl
fistp
das
sbb
mov
jg
rcr
add
arpl
je
jnp
imul
arpl
sub
pop
cmps
out
lock
loopne
cmc
or
and
in
and
pushf
popa
mov
div
jg
(bad)
cmp
push
fld
call
nop
sahf
mov
mov
pop
sbb
push
popf
lds
mov
adc
adc
popf
inc
sti
dec
rcr
xchg
inc
hlt
push
ret
lock
mov
jle
ds
or
pop
xor
les
std
ror
arpl
ins
sub
jle
es
sbb
scas
or
icebp
test
stos
dec
cmp
jnp
push
div
test
test
test
pop
popa
xchg
mov
sbb
lea
lds
fadd
dec
test
iret
fst
movs
or
adc
xor
xor
cmps
inc
dec
test
into
mov
ret
clc
xor
adc
jb
xchg
sub
and
imul
data16
inc
pop
mov
jbe
jne
pop
jg
scas
jne
iret
inc
or
mov
cmp
cmc
sbb
mov
mov
mov
xor
cld
stc
in
xor
daa
daa
ret
xchg
pushf
mov
mov
dec
sbb
int
mov
and
xchg
mov
aad
push
or
enter
std
(bad)
into
imul
fmul
mov
sub
xchg
test
retf
mov
rol
scas
ffreep
sbb
adc
lods
pop
xlat
popa
add
cmovg
sti
pop
aas
ret
out
mov
mov
test
xchg
xchg
in
mov
or
je
jge
push
push
mov
xor
out
push
jae
lds
test
jb
into
(bad)
push
imul
into
inc
imul
cwde
and
inc
js
xchg
sbb
jecxz
or
pop
clc
nop
ins
push
(bad)
jp
push
mov
fwait
xor
sahf
fdivr
add
sub
mov
or
lods
jo
pop
inc
add
xchg
loopne
je
lahf
inc
or
popf
(bad)
ins
loope
jg
call
mov
fisttp
es
fdiv
sub
adc
lahf
jg
out
mov
in
add
inc
add
sub
(bad)
mov
sbb
call
pop
bound
or
push
dec
or
xchg
leave
into
adc
inc
and
dec
add
dec
leave
inc
cdq
push
cli
jl
sub
xchg
adc
fisttp
(bad)
clc
test
popa
movs
dec
xchg
dec
fsubr
or
cwde
daa
imul
or
(bad)
xor
xchg
scas
xchg
(bad)
outs
mov
out
jne
sub
pop
clc
int3
cmp
xor
add
nop
mul
das
push
pop
out
(bad)
retf
xor
enter
out
mov
pop
scas
std
push
test
push
scas
pop
in
stos
sbb
jl
pop
xchg
test
jge
mov
dec
adc
xchg
out
or
sub
and
or
push
jle
mov
push
ins
call
inc
dec
cmp
push
das
adc
cdq
mov
jne
xor
sbb
mov
ds
xlat
mov
icebp
dec
mov
shl
(bad)
push
xchg
leave
mov
ja
popa
add
outs
(bad)
gs
gs
out
sar
pop
push
sbb
popa
mov
dec
mov
mov
add
add
je
sahf
add
push
pop
popf
pop
mov
lds
xchg
inc
in
mov
adc
add
sbb
fild
or
hlt
(bad)
mov
rdmsr
jecxz
jo
es
retf
sbb
stc
dec
xor
and
mov
or
leave
mov
add
sbb
arpl
dec
push
cmps
fidivr
xchg
test
or
dec
xor
adc
les
jp
iret
mov
mov
xchg
cmps
sub
push
jbe
jnp
test
in
cdq
imul
jle
hlt
enter
adc
adc
mov
nop
add
ret
sti
in
ficomp
xchg
mov
mov
xor
movs
(bad)
shr
or
call
mov
outs
xchg
xchg
sbb
outs
cmps
fild
lods
mov
xlat
ror
mov
fisub
popa
sti
and
cmp
inc
fucomi
cld
shl
inc
jo
mov
and
mov
xchg
cmc
shl
enter
mov
push
push
add
xchg
add
push
pop
in
aas
cmp
and
(bad)
or
or
leave
(bad)
loopne
mov
in
xor
dec
cmc
daa
mov
rcl
(bad)
adc
stc
adc
fidiv
and
jmp
and
stc
movs
adc
pop
cli
cmp
lahf
add
out
mov
sbb
push
imul
sbb
mov
in
fdivr
add
sbb
pushf
xor
xchg
xor
sbb
ffree
push
rep
dec
mov
out
into
sub
adc
pusha
addr16
ror
and
call
and
inc
sti
cmp
mov
fsubr
dec
js
mov
js
in
push
(bad)
cmp
leave
mov
out
cmps
(bad)
je
jg
mov
cld
inc
dec
dec
add
jbe
call
and
jno
ror
push
(bad)
std
pop
xchg
int
mov
mov
rcl
clc
jbe
out
test
bound
lods
nop
pop
inc
sub
adc
lods
out
jg
call
inc
xchg
add
(bad)
mov
std
cwde
iret
popf
push
sbb
aaa
in
xchg
xchg
cmp
sar
adc
mov
push
dec
push
fdiv
loope
inc
sbb
es
pop
dec
mov
jmp
loopne
ins
fisubr
lods
addr16
mov
ret
pop
test
cmp
sub
mov
fs
lods
call
or
loope
ja
int3
mov
cmp
xchg
in
adc
sbb
cdq
rcl
mov
loop
out
call
or
jp
int
mov
or
call
arpl
adc
fs
pop
and
mov
aas
jns
mov
mov
mov
movs
enter
stc
or
mov
addr16
jmp
push
push
push
fst
nop
sub
pop
dec
lds
in
popf
mov
call
inc
add
stos
and
jno
mov
and
push
mov
repz
int
jnp
bound
xlat
or
adc
das
and
push
add
lahf
(bad)
push
cmps
sub
loop
ror
xlat
cmc
cmp
xchg
in
jb
cmp
popa
scas
mov
and
cmps
sbb
nop
popf
stc
jmp
test
ins
mov
pushf
das
xor
retf
inc
adc
imul
push
sar
add
mov
js
fcmovu
xor
or
lea
cld
shl
mov
cmps
in
scas
push
jae
sbb
(bad)
push
hlt
(bad)
fcmove
(bad)
out
fwait
adc
add
dec
sbb
in
(bad)
das
sar
push
dec
popf
dec
into
fistp
outs
sub
inc
rcl
mov
int3
pop
stos
icebp
test
nop
or
dec
aaa
and
push
and
imul
cmp
aam
sub
push
sar
inc
adc
sar
cmp
int
aam
lahf
call
mov
and
dec
mov
loopne
mov
stos
mov
das
jmp
push
sbb
ror
sar
jecxz
sar
jle
pop
int3
mov
test
cmp
std
mov
jg
inc
cmps
retf
jg
adc
add
ins
inc
adc
push
adc
dec
mov
loop
lods
inc
xchg
sbb
cmp
add
mov
dec
in
or
pop
jmp
mov
mov
(bad)
mov
xor
scas
loop
dec
sbb
es
pop
sbb
adc
fwait
inc
xor
gs
mov
(bad)
adc
retf
fwait
out
push
jo
adc
sbb
pop
push
hlt
ja
pop
push
sahf
jns
jecxz
sub
iret
pop
adc
push
push
in
out
inc
sar
test
int
test
test
cmp
mov
xor
mov
out
and
rcl
loop
add
les
in
sbb
adc
sbb
cmp
inc
sub
ss
mov
mov
and
fstp
sub
or
push
pop
aam
add
mov
mov
stc
stos
gs
sbb
cmps
or
shl
inc
cmc
sub
ins
push
and
loopne
test
rcl
push
pop
lods
jnp
xor
cwde
and
fxch
loop
fsubr
cmp
xor
dec
repz
mov
cmps
je
jl
shl
inc
imul
push
popf
inc
jmp
push
cmp
sbb
fcomp
cdq
cmp
inc
and
daa
pop
sti
inc
iret
mov
add
ins
dec
add
xchg
dec
addr16
jae
ins
jecxz
xor
rol
adc
fbld
xchg
pop
ins
aas
iret
pusha
div
cmp
add
imul
jge
std
push
sbb
add
mov
cmc
inc
jp
adc
pop
jno
mov
xor
jmp
loopne
loope
or
jns
cmps
cmp
and
add
enter
xchg
sbb
bound
stos
push
jae
dec
repnz
paddsw
bound
xchg
es
xchg
pushf
das
je
out
xchg
adc
jecxz
mov
jnp
cli
lahf
mov
push
jo
mov
sbb
dec
in
cli
fwait
sub
out
dec
and
(bad)
rcr
icebp
xchg
adc
lahf
adc
jg
mov
iret
mov
jbe
mov
das
and
mov
rol
test
sar
arpl
std
and
je
cmp
ins
push
pop
push
inc
add
retf
jle
jecxz
cdq
pop
inc
and
cmp
shl
inc
movs
retf
sbb
cld
test
int
xor
aaa
mov
mov
push
lock
rol
push
sbb
dec
ret
pop
sbb
fadd
adc
mov
ins
les
ror
out
in
daa
daa
xor
cmps
movs
test
(bad)
push
(bad)
sti
inc
into
ror
ror
je
loope
dec
fist
inc
pop
jns
adc
jae
in
mov
mov
ins
imul
mov
idiv
jno
dec
mov
mov
push
add
pop
mov
inc
sbb
movs
jp
xchg
movhps
inc
test
pop
push
inc
sbb
retf
pop
push
jnp
ss
rcr
mov
sbb
jnp
mov
stos
fiadd
fild
ss
mov
or
sbb
aaa
cmps
int3
push
test
cmps
xor
mov
inc
int3
aam
jle
test
jl
cmps
(bad)
call
adc
call
jnp
xor
sahf
cwde
inc
pushf
pushf
xchg
mov
aas
arpl
cmc
dec
(bad)
pop
mov
push
fs
sbb
cmp
xor
fcomi
sti
and
loopne
push
pop
cmp
mov
retf
or
aas
cmp
adc
cmp
adc
xlat
lahf
cmp
push
add
sar
and
dec
adc
shl
hlt
(bad)
mov
push
jne
dec
mov
dec
jle
add
in
cmp
sub
in
int
das
aad
adc
xchg
lods
movs
movs
pushf
lock
pop
cmp
adc
adc
mov
pop
xor
lds
cdq
gs
mov
out
loopne
movs
xchg
mov
stos
in
mov
scas
jmp
and
cwde
xlat
sub
dec
mov
fs
popf
sub
not
(bad)
aam
int
call
out
xlat
mov
aad
pop
pop
dec
sub
fidiv
clc
sbb
pop
add
adc
and
xor
retf
add
pop
fisub
ins
jnp
sbb
loope
dec
and
lds
dec
mov
imul
xchg
push
or
mov
pop
ja
xchg
out
or
push
nop
aaa
sti
xchg
mov
jmp
pusha
cli
and
xor
loopne
sub
pop
loope
movs
inc
ret
push
fld
xlat
mov
pusha
(bad)
fbstp
ins
mov
daa
push
and
pop
in
mov
ss
push
adc
xchg
cwde
mov
push
jmp
inc
mov
aas
and
cs
jbe
push
jo
xchg
xor
movs
pop
ret
and
loope
ror
outs
dec
adc
jb
sub
ret
push
cmp
fnstcw
or
clc
jg
jmp
(bad)
lahf
inc
dec
add
cmp
xchg
stc
mov
mov
iret
mov
in
std
inc
mov
adc
adc
xchg
jne
ds
mov
retf
cdq
popf
fisub
pop
mov
loop
inc
push
jmp
jl
pop
sub
jmp
ins
leave
sar
pop
pop
or
aam
mov
lds
fwait
adc
add
jb
mov
(bad)
xchg
jmp
jo
inc
add
retf
adc
mov
adc
sbb
lods
mov
jb
fwait
ins
xchg
fs
into
dec
or
jbe
cmps
dec
mov
mov
mov
das
repz
sub
push
mov
push
scas
add
or
inc
popa
sbb
(bad)
or
mov
and
push
in
cmc
jne
bound
and
fisubr
inc
mov
sub
and
std
retf
inc
sbb
inc
popa
ror
mov
or
adc
pop
popf
push
je
cmp
mov
fld
mov
dec
cld
dec
and
(bad)
fcomp
mov
mov
dec
pop
dec
(bad)
in
repnz
xor
push
mov
leave
test
add
xlat
mov
push
or
mov
cs
fcmovnb
ins
jb
repz
popa
jb
and
jge
xchg
cmp
gs
bound
or
inc
cmp
cli
pop
xchg
sbb
out
dec
add
pop
gs
test
xchg
ffreep
mov
outs
repz
scas
and
push
leave
add
jecxz
stc
or
or
scas
sbb
cs
jb
sub
out
sub
lods
pop
adc
fidivr
add
in
adc
mov
jb
arpl
xchg
or
fidiv
jmp
or
dec
xor
shl
ret
stc
mov
sbb
jle
(bad)
adc
adc
and
rep
pop
stos
fidiv
xor
arpl
outs
pop
adc
repz
mov
xor
lea
shl
or
mov
jge
es
xchg
mov
lock
push
push
xor
mov
sbb
pop
pop
lods
inc
jmp
addr16
popf
out
mov
sub
xor
dec
sbb
push
mov
stos
in
pop
cmp
sub
call
mov
sub
int3
in
(bad)
frstor
retf
mov
mov
dec
mov
mov
inc
aaa
adc
inc
cs
inc
mov
shl
test
add
jno
or
into
push
fbld
cwde
mov
je
xor
add
push
cwde
inc
and
mov
std
cmp
aad
popa
shr
aad
out
mov
stc
(bad)
add
loop
mov
test
popa
cmp
or
push
adc
push
pop
stc
nop
pop
mov
mov
in
mov
mov
retf
ins
cmp
cmp
cdq
jg
mov
adc
inc
sbb
dec
and
imul
mov
vprotb
ss
jle
imul
popf
arpl
mov
dec
lahf
clc
lea
pop
add
jecxz
xchg
push
sahf
push
pop
hlt
cmp
xor
sub
xchg
enter
stos
fistp
dec
xchg
(bad)
movs
jp
mov
mov
jecxz
or
dec
sub
jmp
jae
iret
push
pop
sbb
out
and
xchg
jne
mov
fs
jmp
mov
movs
sar
pop
cdq
and
aad
fnsave
mov
es
pop
adc
xor
(bad)
mov
or
jl
and
retf
jns
dec
hlt
dec
push
push
shl
fidivr
mov
jmp
pop
cld
xchg
dec
std
and
fst
cmps
shl
out
and
xor
call
cmovge
xchg
jo
fldcw
frstor
xor
jnp
xor
or
popa
or
inc
cmp
fdivr
dec
mov
outs
cmp
sbb
outs
and
loopne
imul
pop
mov
mov
rep
ret
std
jne
xchg
fidivr
aam
mov
fs
out
fst
pop
movs
xchg
iret
cld
mov
(bad)
mov
mov
dec
cld
cmp
cmp
cmp
test
outs
xchg
and
das
ds
push
shl
gs
cdq
pusha
repz
mov
(bad)
int
cmp
mov
mov
xchg
mov
(bad)
push
fistp
mov
mov
jecxz
movs
rol
stos
and
ror
mov
stos
test
lods
sbb
push
pop
fst
mov
rcr
retf
xchg
mov
sbb
loop
ins
and
mov
cmp
shr
push
jmp
movs
mov
repz
or
out
loop
es
push
inc
inc
fist
and
lds
ds
xchg
fmul
dec
mov
dec
mov
fldenv
sbb
add
out
sub
pop
ja
mov
xchg
xchg
sub
scas
sub
mov
aad
sbb
and
push
jmp
pop
cld
das
push
push
jecxz
inc
idiv
inc
adc
push
add
adc
add
sub
retf
cdq
retf
inc
xchg
pop
jbe
ret
pop
jge
pop
mov
xor
mov
stos
jmp
test
(bad)
mov
pop
shr
adc
aas
(bad)
(bad)
cmp
in
push
(bad)
mov
dec
push
mov
and
cli
les
mov
in
int3
movs
jmp
cmp
mov
or
neg
fist
inc
es
inc
loop
or
and
sbb
cmc
ret
xchg
pop
push
rol
xchg
mov
sar
adc
mov
pushw
mov
loopne
ins
add
push
pop
lea
clc
call
inc
ss
cmp
sub
enter
push
adc
sbb
je
mov
pop
mov
es
popa
add
dec
(bad)
aas
cmp
mov
sub
sti
mov
retf
xchg
adc
sahf
jo
sub
jmp
and
add
aad
xchg
sub
mov
inc
ss
xor
push
pop
and
repnz
rcr
pushf
mov
sbb
add
push
pushf
xor
loope
add
ins
push
test
sub
push
shl
lods
jp
ret
sti
test
sbb
xchg
enter
mov
xor
js
test
arpl
mov
or
mov
mov
imul
xchg
icebp
mov
leave
and
jg
mov
push
add
daa
outs
jne
aad
addr16
and
xor
mov
imul
jns
jns
test
call
cli
mov
jecxz
add
ja
mov
bound
mov
fwait
(bad)
sbb
lods
gs
sbb
jbe
adc
pop
jle
repz
aad
and
ins
xchg
in
jo
ins
mov
push
out
shl
arpl
aad
pushf
sbb
dec
cmp
dec
shl
inc
dec
push
mov
test
jle
jns
and
sbb
popf
mov
mov
test
ins
add
dec
test
jno
add
cmp
(bad)
xchg
pusha
fisttp
ss
in
and
ds
add
sub
daa
jo
lea
pop
or
mov
jo
clc
add
jl
dec
dec
pop
stos
add
in
mov
push
jmp
loopne
dec
fs
loope
imul
cld
or
in
es
lds
pushf
adc
ds
fld
add
add
psubsb
jmp
push
hlt
mov
cmp
es
sahf
fdivr
out
push
fwait
out
int
enter
add
mov
jp
enter
push
push
test
push
adc
(bad)
loopne
bound
std
jbe
out
mov
call
iret
sbb
mov
mov
jno
in
test
sub
loop
inc
ror
pop
cmps
nop
push
(bad)
rcl
sbb
push
iret
jp
stos
loope
pop
pushf
arpl
fs
not
or
dec
mov
out
cmp
xchg
add
xchg
out
shl
les
inc
into
mov
mov
ja
mov
pop
retf
cmp
xchg
fcmovbe
jle
inc
push
test
fwait
mov
stos
adc
xor
and
rol
adc
sahf
mov
out
xor
and
mov
std
cmp
retf
imul
mov
dec
jle
fild
call
fnstcw
mov
dec
pop
jmp
inc
jp
xchg
pusha
sub
inc
into
adc
aas
gs
push
mov
rcr
and
jbe
xlat
adc
xor
movs
mov
inc
cdq
out
mov
jp
ret
pop
(bad)
mov
cmps
(bad)
xor
or
int
sub
sbb
in
(bad)
pop
out
cmp
neg
arpl
out
cmp
test
adc
cmp
jl
retf
nop
repnz
fist
jp
pop
adc
(bad)
pushf
enter
lea
mov
jbe
jns
aam
xchg
pop
mov
push
std
popf
mov
and
mov
mov
push
pop
xchg
jne
sub
sub
lahf
in
dec
jl
stos
pop
and
sar
int
adc
repz
cmp
xchg
dec
add
rcl
xchg
fcmovne
push
repnz
cmp
push
inc
fsub
cdq
aaa
imul
in
call
pusha
cwde
and
cmps
scas
pop
jge
sbb
repz
or
push
add
cld
or
mov
jmp
xchg
push
sbb
(bad)
push
(bad)
and
js
jecxz
sub
mov
ds
pop
push
xchg
jg
push
scas
outs
addr16
clc
push
mov
xor
(bad)
loope
out
std
mov
jbe
mov
retf
mov
add
(bad)
jne
outs
cmp
pusha
std
push
fild
fwait
cld
stc
mul
fs
jo
push
std
cli
sar
xor
jae
jp
ss
popa
(bad)
std
loope
fcmovu
retf
or
and
inc
ins
inc
mov
and
scas
sbb
ja
fcmovnu
test
repz
idiv
jmp
loope
mov
or
push
(bad)
mov
ds
not
daa
addr16
add
rcl
mov
hlt
inc
in
mov
or
enter
call
iret
aam
stc
xor
xchg
sbb
add
inc
dec
loopne
dec
(bad)
rcl
les
mov
xor
inc
push
mov
in
mov
fsubr
inc
add
sbb
xchg
push
mov
lods
pop
pop
push
cmps
pop
scas
and
add
dec
cmp
je
ja
pop
pop
retf
add
xor
in
ss
jp
and
retf
repnz
dec
jns
mov
out
aas
lods
(bad)
fdivr
jg
and
in
aas
or
sar
movs
fdivr
cmp
popf
test
outs
cmp
jae
xchg
jmp
xor
clc
adc
int3
adc
pop
cmps
sbb
pop
(bad)
(bad)
aam
jb
push
ds
clc
add
daa
leave
outs
ins
inc
fldenv
or
test
push
pusha
push
xchg
sar
nop
idiv
shl
cmp
pushf
jecxz
mov
mov
sub
lahf
adc
xchg
cs
mov
and
sub
pop
xor
and
mov
aas
sahf
cmp
push
jmp
enter
outs
data16
push
daa
dec
pop
pop
mov
imul
cmp
push
mov
xchg
mov
dec
shl
rcl
mov
pop
add
in
cmp
sbb
popf
inc
test
xchg
inc
repz
push
mov
stos
leave
xor
mov
push
xchg
dec
xor
adc
mov
arpl
push
sbb
rcr
sahf
cmc
mov
stos
and
mov
or
ins
imul
sahf
mov
jbe
xchg
(bad)
shl
sbb
push
mov
movs
out
adc
jnp
sbb
add
addr16
dec
stos
enter
jbe
stos
sbb
inc
mov
xor
mov
add
cmp
and
sub
add
xchg
popf
dec
inc
sub
scas
fild
sbb
xchg
jle
cmps
paddd
mov
cwde
and
xchg
push
dec
adc
dec
pop
add
xor
outs
xor
add
idiv
fs
in
sub
pop
push
jbe
mov
(bad)
cmps
mov
test
and
cmps
mov
mov
frstor
cmp
pop
outs
pop
out
xchg
out
mov
jmp
inc
pcmpgtd
cmp
aas
ins
push
cmp
inc
mov
and
adc
sbb
std
ret
and
jge
push
test
adc
ss
repnz
sub
xor
aas
pusha
inc
into
jae
repnz
lods
xor
add
ss
lods
dec
test
ret
mov
dec
test
xor
push
push
addr16
rcr
fs
das
addr16
and
jo
in
std
or
xor
dec
adc
pop
hlt
jmp
xlat
adc
adc
push
out
push
mov
es
mov
popa
mov
mov
out
sub
lods
repz
push
frstor
pop
sbb
dec
ret
cmp
fcomp
lock
call
mov
shl
dec
adc
test
mov
not
mov
(bad)
aas
repz
xor
fisub
shl
mov
mov
ror
aam
rol
mov
mov
test
imul
pop
cs
nop
mov
hlt
aad
dec
inc
xor
push
pop
aam
retf
std
ss
(bad)
out
jmp
sub
xchg
mov
xchg
xor
mov
loopne
into
out
leave
pushw
clc
ins
mov
lock
or
jl
retf
xchg
lods
xor
adc
adc
out
fld
ret
xchg
jae
xchg
inc
je
std
ss
shl
sbb
cli
mov
jge
ja
out
xor
sub
dec
xor
lods
add
jbe
mov
das
dec
(bad)
sbb
sbb
xchg
cmps
popf
call
lahf
push
in
idiv
xchg
and
fwait
sub
test
stos
js
dec
sbb
jbe
dec
ret
lods
in
fisubr
inc
fcom
cmps
mov
leave
stos
mov
arpl
(bad)
outs
cli
mov
or
xor
hlt
mov
ja
mov
xchg
push
test
scas
sahf
or
aas
call
aad
lods
cli
cmp
push
call
xor
les
popa
xchg
icebp
je
or
pop
cmps
xchg
fist
fadd
dec
in
fwait
push
call
push
test
je
stc
pop
jmp
xor
mov
inc
push
cs
bound
and
inc
or
or
sub
iret
lds
dec
mov
(bad)
out
sbb
pop
pop
xor
jle
adc
(bad)
ret
into
pop
sar
push
xchg
(bad)
fwait
jne
inc
loop
daa
call
and
xor
sbb
xchg
mov
jg
test
jo
sti
mov
dec
js
and
repnz
iret
xchg
ja
xchg
cmp
repz
stc
test
sub
push
inc
(bad)
out
push
xchg
cwd
pop
out
pop
pop
arpl
cmp
mov
xchg
out
call
sub
idiv
inc
jecxz
jecxz
add
in
xchg
mov
push
add
cmp
gs
dec
outs
pop
mov
cld
sub
inc
jmp
out
outs
mov
movs
mov
jl
sub
fild
sahf
push
ss
call
cdq
mov
xchg
dec
int3
cmc
mov
push
or
sub
cmc
cwde
lds
sbb
dec
jb
pushf
sub
inc
push
inc
pop
cmp
mov
dec
cs
call
(bad)
mov
test
movs
pop
rol
mov
rol
pushf
in
mov
mov
cmp
pop
push
das
dec
jns
jg
push
inc
sahf
push
shr
pop
loop
inc
or
or
mov
pop
mov
mov
add
pop
pop
mov
ret
and
sbb
mov
mov
data16
mov
inc
xchg
jns
mov
ins
mov
push
test
or
adc
pop
(bad)
aam
retf
inc
adc
sub
call
enter
jmp
and
popa
mov
and
(bad)
(bad)
inc
mov
or
stos
pop
inc
adc
and
mov
cdq
mov
out
das
mov
cmc
cmp
ins
dec
and
sub
retf
js
xchg
loopne
test
outs
sar
out
fsub
dec
xor
pushf
stc
mov
lods
or
jg
lea
dec
dec
popf
jbe
popf
xchg
stos
xchg
inc
in
add
push
lods
and
push
sahf
mov
pop
adc
test
(bad)
pop
push
ss
fdiv
xor
je
sbb
mov
mov
or
sbb
ret
and
enter
mov
mov
xchg
jmp
std
pop
jns
out
outs
test
ja
or
out
xor
adc
jns
pop
sahf
push
push
les
sbb
xchg
out
inc
(bad)
and
imul
and
test
push
xor
das
and
jle
jo
mov
mov
jne
mov
xor
cmps
inc
mov
mov
sbb
fs
shr
ins
push
je
out
xchg
mov
nop
call
into
sub
rcl
jae
sbb
hlt
push
mov
mov
(bad)
out
mov
data16
mov
mov
mov
cmp
fstp
push
jmp
js
xor
inc
cmp
dec
inc
mov
or
mov
ins
mov
(bad)
cld
dec
shl
sbb
test
xchg
push
mov
fistp
pushf
adc
mov
dec
jg
mov
mov
loope
out
loopne
xchg
push
pop
(bad)
hlt
fld
cmp
or
jecxz
dec
mov
sbb
mov
sahf
xchg
out
jmp
mov
punpcklbw
or
push
pop
js
mov
mov
sbb
popf
enter
and
adc
mov
push
loopne
fmulp
add
jo
sub
imul
cmovno
cmp
pop
jp
mov
dec
stos
adc
scas
adc
data16
out
(bad)
fst
jnp
stos
mov
loope
daa
inc
sbb
xchg
ins
repnz
xchg
add
xor
push
jmp
and
ficomp
cld
fimul
xor
je
out
and
push
outs
cli
adc
mov
std
cmp
ja
aam
mov
adc
xchg
loopne
sub
into
out
vmovups
xchg
add
scas
call
into
scas
inc
rol
mul
pop
lods
mov
retf
cmc
in
xor
call
mov
daa
jae
retf
mov
mov
jecxz
clc
cmc
into
inc
out
lahf
mov
stos
(bad)
dec
cmc
mov
xor
shl
and
fmul
dec
lds
add
pop
enter
ret
xor
push
cs
(bad)
rcr
sar
mov
mov
sub
jne
mov
addr16
mov
dec
sub
sbb
outs
cs
iret
xchg
pusha
stos
add
jp
mov
sub
cld
icebp
out
mov
push
ret
test
cli
je
ficom
imul
iret
add
cmp
cmp
push
add
popa
ja
pop
cmovbe
push
xlat
adc
loope
pop
cmc
dec
mov
adc
mov
(bad)
(bad)
push
aas
adc
test
jge
cwde
data16
mov
mov
rcl
xor
es
sbb
add
sub
cs
cmp
mov
mov
push
mov
push
mov
add
sub
sub
lock
arpl
jecxz
sbb
mul
pop
inc
loopne
mov
das
in
dec
dec
pop
fdiv
mov
imul
add
stos
and
sbb
xchg
xor
mov
out
aad
jno
jmp
aas
jno
test
mov
sub
add
sbb
adc
or
mov
(bad)
lahf
xchg
jmp
mov
pop
xchg
vrangepd
xor
into
sbb
dec
mov
sub
scas
cmp
lods
aam
fsub
pushw
inc
nop
std
test
push
inc
fmul
add
sub
das
and
rol
(bad)
inc
pop
push
out
jmp
mov
inc
adc
fimul
mov
add
push
and
mov
dec
rcl
inc
push
lea
mov
jmp
stc
rcr
jmp
bound
lea
fcomp
xor
ret
cli
pop
xchg
sbb
cdq
ret
adc
arpl
or
adc
pop
stos
aam
push
inc
mov
dec
jo
aas
fild
call
outs
xor
(bad)
adc
xor
pop
adc
stc
int
mov
inc
mov
js
sub
mov
stc
cs
out
fcomip
push
icebp
mov
cmps
clc
jl
loopne
xchg
cld
mov
(bad)
inc
outs
sahf
jnp
adc
retf
fistp
out
jmp
lods
sub
xor
dec
dec
inc
and
sbb
(bad)
je
dec
xchg
ds
xchg
pop
add
dec
sahf
ss
xor
pop
dec
jnp
jbe
mov
xor
test
(bad)
push
out
jmp
jno
push
gs
sub
dec
lock
std
ret
lock
or
add
movs
sbb
pop
push
es
stos
aam
add
stc
rcl
pop
inc
cs
or
mov
jae
aaa
adc
cmps
sbb
jg
rcr
(bad)
push
scas
jge
add
and
pop
mov
push
jbe
and
test
not
sub
in
pop
rcl
jg
push
push
(bad)
mov
sbb
sbb
fsubr
xor
(bad)
sbb
inc
mov
sub
add
pop
mov
and
(bad)
cmp
xor
dec
fsubr
mov
xchg
repnz
sub
jp
and
jp
push
sbb
add
inc
movs
test
movs
int3
test
les
sbb
lahf
pop
outs
inc
jge
sbb
push
in
call
stos
xlat
pusha
push
daa
inc
mov
sar
ret
push
test
sbb
cmp
xchg
jl
daa
dec
or
add
push
push
xrelease
push
cmp
aaa
inc
mov
jae
leave
sti
mov
xchg
lahf
fisttp
dec
(bad)
fstp
jg
and
rcl
mov
pop
arpl
mov
sub
jle
shl
or
cmc
dec
sub
pop
sub
retf
push
out
dec
aad
sahf
mov
inc
ret
out
lods
cmp
add
push
cmc
scas
adc
dec
cwde
push
mov
out
imul
push
cmp
and
nop
xchg
das
jbe
(bad)
into
cs
dec
add
mov
mov
rol
fwait
add
in
aad
sbb
lds
icebp
int3
adc
pop
rcl
xchg
lods
xchg
fdiv
daa
cmps
push
xor
adc
or
(bad)
lahf
xor
or
mov
or
lds
pop
dec
sub
lahf
pop
aaa
dec
js
jecxz
sbb
cmp
ret
push
push
outs
sbb
pop
leave
cmps
test
jbe
nop
fist
push
push
dec
pop
(bad)
jmp
cmc
xor
es
mov
inc
xor
add
pop
cmp
mov
inc
outs
cmp
ret
(bad)
mov
cwde
jmp
cmp
cli
adc
cmp
sar
(bad)
mov
push
sti
mov
div
in
jae
adc
xor
xchg
int3
sti
mov
pusha
sti
push
stos
and
dec
mov
jmp
jp
nop
and
icebp
js
cwde
and
mov
icebp
push
fldlg2
enter
mov
xor
clc
fcmovb
mov
xor
and
aaa
sub
xlat
mov
cwde
and
fcmovu
ror
fisttp
popa
add
(bad)
sahf
jo
mov
cmc
mov
ficomp
int
cdq
cdq
(bad)
push
out
mov
push
pop
mov
test
shr
(bad)
aas
movs
mov
mov
(bad)
shl
push
dec
xor
scas
adc
mov
icebp
cmp
arpl
mov
mov
push
adc
(bad)
stos
or
cli
(bad)
push
push
jmp
(bad)
lock
sub
loop
push
pushf
push
pop
ror
(bad)
sub
ror
mov
lahf
pusha
sar
into
cdq
test
ss
leave
scas
sub
lock
stc
sbb
imul
js
push
mov
sbb
jo
out
sahf
mov
pop
out
(bad)
xchg
push
dec
enter
jl
aad
int3
cmp
call
outs
xchg
stc
mov
test
(bad)
repz
ret
and
add
inc
mov
push
dec
mov
cld
xchg
call
test
xchg
add
cwde
std
call
and
xor
and
call
xchg
dec
mov
out
mov
iret
xchg
js
out
sbb
mov
cmp
or
mov
(bad)
xor
inc
test
retf
sbb
push
scas
out
jo
popa
pop
adc
inc
or
sti
clc
inc
mov
jo
sbb
(bad)
es
scas
arpl
shl
mov
inc
dec
and
hlt
and
push
sub
and
lock
add
pop
push
stos
sub
pop
sub
loopne
sub
pop
push
sbb
jbe
mov
or
inc
jge
adc
inc
movs
mov
mov
popa
push
fisttp
in
dec
dec
cmps
mul
fbstp
(bad)
test
ror
xchg
push
js
sub
loopne
jnp
call
mov
leave
add
push
push
or
add
fidiv
pop
out
cmps
push
hlt
sbb
gs
nop
mov
fs
das
adc
xor
push
pusha
push
or
xor
ss
lock
dec
cmp
push
inc
pop
sub
ins
test
jl
movs
aam
pop
jb
push
and
ret
outs
sbb
and
stos
in
outs
adc
ss
cli
or
cmps
scas
xor
and
gs
adc
aad
repnz
sub
add
add
ins
adc
out
retf
xchg
das
lds
mov
dec
mov
test
(bad)
pop
adc
sub
scas
dec
inc
out
sub
int
ficomp
lods
fistp
mov
out
mov
in
sbb
pop
into
jns
cmp
fdiv
xor
sub
adc
pop
cmp
xor
test
push
xor
fmul
fimul
xlat
mov
adc
mov
adc
adc
jmp
pushf
movs
mov
stc
test
sub
dec
leave
jbe
push
(bad)
jle
lgs
push
or
xor
jne
in
mov
retf
push
inc
xor
sub
mov
jp
add
pop
jmp
outs
int
(bad)
jmp
jge
scas
arpl
test
movs
(bad)
jo
push
fbld
lods
mov
push
sbb
dec
out
ins
call
out
jmp
ss
push
sub
xor
and
xor
dec
or
cmp
pop
jns
adc
mov
outs
sub
jae
and
out
in
jnp
cmp
sahf
aaa
dec
icebp
xchg
imul
dec
adc
pop
fst
repnz
pop
xor
(bad)
fdiv
stos
push
lock
out
and
arpl
xchg
fldenv
push
xlat
push
adc
pop
mov
lods
mov
clc
sub
call
and
pop
push
pop
and
out
inc
adc
loope
push
mov
mov
pop
and
push
xchg
pusha
adc
mov
icebp
mov
enter
pop
inc
mov
xchg
rcr
aaa
aam
call
loopne
aad
aad
retf
sub
fcom
sbb
mul
pop
out
jle
sbb
jmp
js
test
pushf
retf
aad
imul
and
aad
add
xor
push
sar
sub
inc
pop
cs
sbb
and
sbb
mov
sbb
repnz
retf
loopne
adc
jmp
scas
fdivr
pop
pop
and
add
stc
btr
adc
cmp
fmul
dec
movs
nop
fisub
ss
adc
ja
mov
stos
mov
fidiv
shl
mov
loopne
add
mov
and
inc
nop
cld
jmp
ror
push
cwde
xor
pop
ja
iret
and
xor
cli
and
mov
(bad)
fs
cmp
mov
push
inc
xchg
and
ins
sbb
mov
cmp
out
fs
shr
inc
or
hlt
in
mov
pop
and
adc
int3
jmp
retf
push
sub
jmp
int3
or
dec
movs
loope
xlat
push
fmul
push
mov
dec
fisttp
fdivr
xchg
ins
loop
out
jecxz
pop
adc
imul
rcl
rol
xchg
xor
jbe
and
mov
test
fild
cmp
push
scas
add
sbb
mov
ds
cmp
sbb
lds
(bad)
push
adc
xor
shl
and
rol
call
adc
addr16
out
fidivr
mov
inc
aam
pop
cmp
xor
es
dec
inc
push
arpl
adc
add
out
mov
mov
mov
cmp
je
dec
adc
pop
dec
test
pop
add
mov
int
jne
push
and
adc
(bad)
stc
(bad)
pusha
pop
bswap
xchg
cmp
(bad)
dec
jg
stos
sub
mov
dec
mov
imul
sub
push
pop
loope
mov
mov
mov
movs
jns
sti
js
in
dec
jo
out
out
aam
jmp
mov
fwait
(bad)
lds
std
or
jp
mov
xor
pop
cli
imul
jle
push
xor
cmc
dec
test
hlt
sbb
lds
loopne
or
sbb
hlt
retf
stos
and
bt
xor
jb
xlat
loop
xchg
and
and
mov
cmp
jae
(bad)
jno
mov
adc
rol
xor
mov
sub
aaa
xchg
in
int3
in
jae
mov
inc
sbb
out
push
clc
sbb
inc
jb
push
movs
bound
aad
leave
mov
mov
jecxz
(bad)
jecxz
popf
hlt
cmp
lock
adc
cmps
push
xchg
movs
add
rcr
mov
xchg
jnp
push
dec
cmp
pop
dec
je
xor
add
sub
jae
mov
fldcw
cwde
in
in
nop
mov
data16
or
loopne
sahf
cmps
in
jge
je
(bad)
cmp
bound
aaa
sbb
in
jo
or
loopne
arpl
call
dec
aam
out
or
push
inc
push
xlat
pop
(bad)
out
xchg
push
rol
shl
xor
add
sbb
repnz
mov
in
sub
daa
in
jno
dec
ret
pop
cwde
dec
fnsave
mov
leave
or
mov
(bad)
xchg
call
pop
jmp
jmp
leave
xor
xchg
or
xchg
jmp
lea
cmps
aas
xor
int3
cmps
adc
inc
in
or
mov
aaa
cmp
xor
push
cmps
sub
out
sbb
je
xor
lods
in
mov
mov
push
pop
push
xchg
call
jns
add
rol
cmp
cmp
fistp
ficom
pop
dec
ret
mov
sub
mov
sub
pop
leave
les
cmp
jp
or
aam
sbb
mov
not
out
(bad)
push
add
int
aaa
ja
cmp
dec
movs
adc
add
clc
stos
sti
push
pusha
jns
jmp
mov
dec
sub
lods
mov
dec
loopne
jle
fnstsw
pop
adc
mov
xor
(bad)
mov
jg
jge
lahf
sub
aas
(bad)
mov
push
cmp
jbe
jmp
mov
cmp
cwde
ins
xor
inc
mov
xlat
inc
sub
xchg
cwde
adc
pop
lahf
xor
sti
gs
rol
xor
scas
xlat
or
jmp
jl
inc
cdq
cli
mov
or
jle
(bad)
jno
push
jp
sahf
or
xchg
ins
ins
movs
and
cmp
add
stos
add
out
shr
adc
cmp
pusha
inc
or
mov
inc
(bad)
pop
cld
cli
stos
mov
dec
retf
pop
dec
or
xor
in
jg
jb
(bad)
cld
stc
add
push
lahf
in
or
cmp
pushf
or
shr
dec
test
jge
ss
mov
and
ins
xchg
add
retf
pop
daa
(bad)
push
cwde
cmp
addr16
xor
jmp
adc
inc
mov
mov
mov
mov
ins
(bad)
test
shl
jne
sahf
inc
mov
stos
mov
pop
int
pop
stos
inc
lahf
inc
sbb
dec
arpl
add
es
sbb
lahf
addr16
test
retf
outs
(bad)
scas
mov
or
or
jbe
sbb
ret
mov
adc
adc
gs
inc
cmp
arpl
sub
das
pop
xor
cld
and
fisttp
sbb
jnp
sub
inc
rcl
add
int
jmp
sahf
pop
test
dec
aam
xchg
repnz
cmp
xchg
pop
ror
and
out
test
jns
jae
cmps
js
jb
shr
cmps
mov
or
xlat
adc
enter
stos
sub
out
mov
pop
adc
aas
mov
mov
into
xchg
into
cli
lods
and
fsubr
inc
icebp
imul
lods
in
sar
das
and
xchg
ins
(bad)
outs
xchg
push
lds
nop
mov
pop
clc
mov
and
pop
pop
movs
test
fdiv
stos
das
sub
(bad)
sub
mov
jecxz
cmp
outs
sub
mov
das
stc
mov
and
loopne
push
inc
xor
push
mov
fcmovnbe
hlt
(bad)
loope
imul
scas
mov
dec
fsubrp
cmc
inc
pop
pop
jae
pusha
pop
dec
je
rol
pop
mov
sub
daa
stc
in
mov
inc
adc
fstp
pusha
jg
mov
stos
imul
cmc
cs
xor
push
fcom
inc
(bad)
mov
inc
popa
push
ds
aaa
push
jnp
mov
fisubr
ss
(bad)
xchg
into
std
int
adc
enter
jno
inc
rcr
xor
mov
push
adc
cmp
cmp
retf
aaa
pop
jmp
xchg
test
leave
mov
fwait
push
sbb
xchg
jmp
or
out
pop
adc
fst
fst
jmp
mov
adc
dec
je
lds
loope
push
test
(bad)
nop
(bad)
push
sbb
std
movs
add
add
mov
mov
ss
shl
cmc
push
mov
fnsave
(bad)
mov
sbb
je
cli
div
ds
dec
(bad)
bound
mov
dec
lods
push
fisub
adc
cmp
sub
mov
rol
push
(bad)
xchg
into
and
(bad)
pop
fsub
dec
iret
addr16
mov
jae
fmul
or
pushf
push
mov
in
mov
test
int
mov
xchg
xor
and
int3
cli
jge
(bad)
cli
mov
imul
inc
in
cmps
push
lods
in
mov
cmp
adc
cmc
daa
loopne
fs
xchg
xchg
sti
sbb
inc
mov
mov
xchg
sub
sub
add
mov
(bad)
mov
or
inc
xchg
inc
or
es
out
push
data16
cmp
pop
xchg
sbb
push
xor
ds
stc
call
mov
lds
rcl
mov
neg
addr16
ins
cmp
add
cmp
jp
sahf
pop
rcl
add
xchg
push
jecxz
daa
add
inc
enter
cmp
cwde
cmp
dec
(bad)
pop
icebp
stos
inc
mov
pop
pop
retf
xchg
cmps
stos
cmp
jo
scas
jo
in
ins
inc
xor
rcl
stos
pop
mov
aad
(bad)
xchg
dec
outs
cmp
and
fwait
mov
xchg
pop
dec
mov
jns
mov
sub
mov
cmp
add
pop
dec
add
dec
push
add
stc
jmp
add
sub
lods
jae
imul
push
fwait
inc
jmp
test
xchg
xchg
inc
enter
ror
cmp
pop
jno
loope
pop
hlt
imul
sub
test
push
jge
xor
and
jb
into
push
arpl
cwde
dec
arpl
and
loope
inc
pop
call
shl
jb
lds
xor
inc
mov
jmp
aam
jmp
inc
imul
in
mov
fwait
cmp
aad
cmp
jns
mov
sbb
sub
adc
retf
lods
mov
packssdw
cdq
dec
adc
adc
in
xor
mov
push
sub
cmp
sub
jbe
cmp
repnz
gs
xor
pushf
jae
push
push
cmps
fs
lahf
or
cmp
lahf
jo
inc
add
xchg
or
movs
xchg
aad
mov
imul
je
push
mov
mov
pop
imul
cmp
mov
xor
jp
stos
sub
dec
pushf
push
push
pusha
nop
xor
data16
sbb
adc
shr
(bad)
(bad)
xor
in
aam
sbb
test
retf
push
sbb
jno
stos
aad
cmp
xor
int3
cmps
cmp
mov
sbb
pop
mov
xchg
cwde
ret
rcl
jns
jo
mov
mov
mov
repz
cmp
frstor
mov
neg
add
or
sub
out
mov
ins
out
pop
cdq
sbb
push
pop
rol
movs
mov
mov
jp
cmp
int3
retf
test
mov
pop
aam
stos
pusha
add
jne
sar
fist
xor
shl
(bad)
mov
sub
adc
cmps
mov
lods
or
mov
scas
jbe
pop
and
idiv
mov
mov
movs
sub
fdivr
sbb
mov
sub
ins
ror
jnp
xchg
in
push
jg
sar
xor
push
cwde
das
jno
movs
adc
push
sub
adc
cmp
and
out
cmp
push
call
mov
mov
aad
push
mov
les
xchg
pop
push
sar
call
std
inc
les
dec
and
loop
ret
frstor
ror
sti
and
mov
sbb
fist
outs
mov
out
cmps
xchg
in
retf
push
sahf
inc
lahf
sub
stc
rcl
mov
adc
leave
push
push
ins
enter
and
add
pop
ror
push
sub
sbb
test
pop
push
inc
push
push
das
and
mov
push
loop
test
xchg
out
jnp
aad
out
add
jecxz
lods
aas
ror
sub
aam
push
cmp
and
push
push
push
leave
pop
push
out
sub
ret
imul
mov
retf
lods
jp
icebp
int
or
and
dec
sub
arpl
jns
out
pop
fisubr
test
das
cmp
dec
and
lods
mov
dec
into
jne
mov
loop
popa
jb
gs
or
jno
cmps
and
pusha
mov
cmp
loope
fisttp
adc
fidiv
mov
mov
xchg
fiadd
rol
dec
rcr
out
rol
xchg
cld
mov
test
or
mov
popf
dec
mov
in
mov
mov
lods
xlat
outs
add
add
leave
cmp
dec
or
out
or
call
lock
mov
movs
aad
lds
jo
ins
dec
mov
pop
gs
jno
cmp
imul
mov
push
icebp
sbb
pusha
push
iret
push
in
jmp
jp
sahf
es
pop
cld
pusha
push
pop
shr
dec
sti
fistp
adc
jnp
lods
pop
in
mov
xchg
jns
shl
mov
leave
aas
xor
cmp
mov
loope
lahf
mov
fistp
dec
and
fsubp
mov
(bad)
loopne
in
xchg
sbb
mov
test
push
push
mov
movs
or
and
inc
int
pusha
hlt
test
push
in
push
test
loope
jmp
inc
sbb
lea
int
sub
outs
mov
and
sbb
dec
lods
iret
outs
nop
movs
mov
(bad)
jl
fidiv
test
test
call
mov
pop
adc
and
test
pop
inc
xchg
ss
cld
xchg
mov
int3
jb
fadd
inc
popf
push
mov
add
mov
inc
jg
mul
(bad)
mov
js
stos
mov
jae
mov
js
(bad)
dec
fcom
and
cmp
inc
adc
adc
push
pop
and
out
aaa
pop
mov
(bad)
nop
iret
pop
data16
test
loop
mov
outs
or
sub
mov
stc
push
sub
add
outs
pop
jmp
lods
sub
and
and
fcmove
jns
cmps
jp
xchg
pop
(bad)
xor
sbb
(bad)
fdivr
cld
call
inc
dec
sub
ror
inc
loopne
xor
mov
dec
je
dec
jp
mov
sub
sbb
stc
cmps
aas
sti
or
cdq
arpl
mov
and
lods
movs
mov
gs
gs
jne
mov
fisttp
lods
inc
out
xor
lock
pop
aas
cs
xchg
xor
retf
inc
test
push
test
or
aad
push
cmp
jmp
sbb
repz
xor
jmp
retf
in
push
ret
stc
jb
push
stc
xchg
adc
push
pop
cmp
fcom
mov
mov
test
mov
sub
pusha
add
mov
xchg
sbb
add
and
xor
rcr
test
jmp
lds
std
add
in
xchg
call
cmp
and
and
cmp
jbe
dec
out
mov
push
outs
ds
jecxz
sbb
inc
push
(bad)
int3
mov
xchg
stos
sbb
push
dec
sub
(bad)
lds
or
xlat
into
mov
push
cmp
xchg
lods
jns
aam
iret
sub
scas
scas
repnz
push
push
mov
jmp
adc
sub
stos
aaa
mov
div
fdiv
nop
add
jb
add
sbb
div
push
std
sub
(bad)
in
inc
imul
jnp
inc
jmp
mov
out
cli
mov
jge
(bad)
bound
jmp
push
jns
xor
inc
fisttp
cmc
mov
lahf
bound
or
sbb
mov
cmp
ret
fistp
faddp
mov
mov
fwait
lock
into
outs
aaa
xchg
adc
test
mov
mov
shl
and
pop
bound
repnz
aad
pop
jl
sti
stos
xor
push
xchg
in
test
es
pop
xor
ficom
mov
dec
movs
jecxz
ret
retf
data16
push
shr
mov
push
jmp
inc
inc
mov
outs
(bad)
cs
dec
xor
sti
prefetch
add
pop
pop
pop
mov
out
dec
mov
xor
cmps
mov
cmp
mov
mov
push
or
cmp
and
inc
mov
sahf
sub
mov
mov
push
sbb
and
or
call
retf
addr16
inc
(bad)
jo
cmps
push
repnz
xor
(bad)
sar
jl
xchg
jp
pop
iret
jge
dec
fadd
jmp
ret
jmp
aam
(bad)
in
jmp
push
dec
lock
mov
cdq
jl
in
loop
std
neg
mov
mov
ds
pop
stos
xlat
jns
add
push
fstp
movs
ret
adc
push
lds
call
pop
in
lock
jo
push
push
cmp
mov
xchg
pop
pop
dec
test
dec
or
fstp
movs
mov
pop
hlt
es
push
add
cmp
ins
fmul
xchg
pop
xchg
dec
mov
scas
mov
pop
aam
sbb
sahf
test
mov
shr
repnz
and
xlat
pushf
sub
or
gs
mov
pop
pop
out
mov
add
add
jbe
test
xor
shl
or
movs
jnp
and
or
dec
push
xchg
pop
inc
dec
mov
xchg
add
add
push
(bad)
pusha
std
xor
push
in
sbb
arpl
adc
aas
cld
cmc
inc
std
out
add
xor
cmps
das
scas
adc
pop
xchg
jl
cmp
pop
sahf
cmc
push
xchg
dec
xchg
lods
push
aam
or
or
cmp
jmp
gs
mul
jp
call
shr
lods
mov
sub
shld
shr
fbstp
loope
hlt
mov
add
ror
mov
dec
add
cmp
mov
jg
pop
mov
(bad)
imul
pop
dec
sbb
call
cmp
ret
test
stc
jp
or
outs
int3
push
test
mov
sub
ss
cld
sbb
cmp
adc
push
xor
jae
add
mov
push
lea
fcomi
xor
jbe
push
pop
test
retf
inc
push
push
fmul
pop
psrlw
cmp
ds
inc
jbe
loop
mov
pushf
scas
push
lock
cwde
movs
mov
push
mov
stc
jo
jge
inc
jns
jbe
and
(bad)
jnp
mov
jl
push
xchg
jbe
or
jg
gs
jns
dec
gs
data16
bnd
ret
ret
xor
int
(bad)
popf
stos
add
fwait
ret
out
jecxz
inc
(bad)
cmp
aam
cmps
jl
es
retf
call
aaa
jo
fisttp
popf
sbb
sbb
loop
mov
cli
xchg
lds
fisub
push
push
xchg
fucomi
sbb
mov
js
inc
and
repz
js
mov
inc
loope
stos
cli
jg
nop
out
je
inc
mov
scas
mov
ds
shl
mov
inc
mov
dec
dec
dec
(bad)
stc
out
iret
daa
jge
pop
mov
xchg
jge
sbb
out
int
adc
mov
mov
and
sahf
xchg
or
int3
mov
cmp
neg
mov
sahf
xchg
jbe
or
push
out
aad
inc
out
inc
adc
xor
or
loop
sub
fld
sub
xchg
mov
ins
setge
xchg
fdivr
mov
add
hlt
rcl
mov
dec
and
into
pop
pop
push
or
jb
or
retf
sbb
out
and
cdq
xor
scas
mov
stc
and
sti
mov
push
adc
and
dec
(bad)
cmp
es
mov
lock
das
les
adc
out
pop
mov
out
xor
push
sbb
xchg
test
cmp
std
scas
loope
mov
jb
xor
xchg
sbb
xchg
and
xor
mov
add
jmp
push
sub
pop
sub
(bad)
scas
ror
call
mov
pop
cmp
pop
leave
into
adc
pop
mov
push
inc
sbb
add
pop
call
loop
retf
nop
mov
pop
jl
and
or
in
jo
rcl
mov
les
push
arpl
sbb
and
push
jge
das
out
jmp
add
stc
out
or
adc
mov
inc
xor
fs
bound
jge
out
xor
dec
rol
sti
mov
rol
fcom
sti
add
push
adc
pop
and
sbb
imul
dec
lods
gs
mov
fadd
enter
and
into
inc
or
je
sbb
loopne
retf
jmp
dec
cs
std
bound
inc
cli
outs
int
mov
lock
das
mov
adc
mov
pushf
fistp
stos
jae
inc
mov
fld
mov
rcl
jns
clc
adc
sar
add
sar
sub
mov
inc
inc
dec
mov
mov
daa
pop
les
cli
(bad)
scas
lods
cli
(bad)
jecxz
adc
daa
icebp
call
dec
mov
idiv
mov
sbb
mov
add
pop
pop
and
mov
(bad)
mov
movs
cwde
pop
mov
jns
cmps
jmp
call
or
push
lods
add
mov
xor
lods
out
dec
rcr
(bad)
xchg
jne
xchg
loope
and
cli
pop
pop
and
cmp
scas
ss
xchg
jl
cwde
mov
xor
movs
mov
popa
adc
mov
fbld
in
ror
aas
and
cdq
xchg
adc
or
jns
pop
push
xchg
addr16
imul
rol
push
pop
push
and
lds
cmps
xor
pop
xor
clc
mov
rol
cld
aaa
mov
xchg
fidiv
push
adc
push
adc
lock
call
pop
push
cmp
bound
mov
shl
and
xor
mov
out
(bad)
pusha
imul
aad
outs
enter
mov
clc
mov
inc
mov
lds
sub
fisttp
add
jne
in
stc
xchg
xor
push
or
xchg
jle
ffreep
xchg
out
sub
cmps
dec
pop
addr16
add
cmp
mov
fcom
in
cmps
jae
out
shl
in
inc
add
popa
cmp
sub
pop
test
cmp
mov
inc
mov
cmp
test
jb
jbe
(bad)
(bad)
cmp
pop
aam
popa
pop
jns
dec
ins
sar
jb
inc
in
cwde
jmp
mov
pop
call
cmp
dec
push
sub
jmp
fwait
sbb
mov
popf
xor
retf
mov
test
out
daa
sbb
mov
js
scas
mov
scas
dec
ins
es
mov
jge
pop
dec
sbb
add
or
jge
pop
sub
(bad)
dec
jo
aad
add
mov
lds
or
movs
jecxz
hlt
mul
loopne
out
push
cmc
sbb
stos
push
adc
jecxz
vpmadcswd
into
lods
mov
mov
mov
inc
test
fcmovbe
nop
sub
pop
(bad)
fwait
int3
int3
pop
xor
pushf
movs
ja
sti
cwde
and
in
push
call
rol
ins
popf
mov
fnstenv
clc
cld
or
mov
mov
das
cmp
sub
pop
int
cmp
sub
lahf
and
jge
mov
and
mov
jbe
push
ret
or
hlt
and
jge
fs
jecxz
shl
jb
add
inc
or
inc
lods
in
sbb
stc
inc
jmp
cmc
cmps
push
imul
mov
sar
dec
cli
or
clc
test
xchg
sahf
dec
xlat
std
dec
xchg
lods
inc
inc
out
aaa
shl
push
dec
cmp
dec
mov
xor
cmp
xchg
or
jmp
xchg
sbb
hlt
outs
mov
push
dec
mov
jno
test
mov
fimul
push
in
mov
aaa
gs
enter
push
loope
dec
adc
mov
jmp
std
inc
sub
xor
(bad)
repz
(bad)
mov
neg
fisttp
scas
cmc
xor
call
or
or
mov
enter
mov
xchg
adc
daa
frstor
xchg
sbb
repnz
pop
inc
pop
shr
pop
mov
imul
sbb
in
push
or
sbb
nop
cwde
(bad)
fwait
jae
pop
jmp
and
mov
fistp
fimul
mov
rcl
mov
mov
sbb
ins
jno
mov
in
out
pop
int3
pop
lods
test
mov
call
bound
and
pusha
add
loop
mov
jmp
sub
out
or
dec
dec
mov
pushf
pushf
(bad)
jb
add
push
xor
mov
(bad)
cs
lods
push
mov
dec
mov
inc
pushf
cmp
mov
sti
pop
ror
imul
(bad)
pop
jg
fistp
mov
pop
mov
out
add
lods
cmp
sub
jae
dec
sahf
sub
lds
add
mov
add
mov
sti
cmp
aas
push
sbb
push
mov
push
xchg
rcr
lock
popf
cmp
test
push
xchg
mov
or
push
mov
pop
aam
bound
cld
test
mov
imul
(bad)
(bad)
sbb
shl
mov
pop
mov
xlat
hlt
cmp
in
into
add
(bad)
fistp
adc
shl
loopne
loope
pop
xchg
add
mov
mul
test
pop
je
push
leave
sub
jle
mov
out
xlat
push
ror
inc
xor
pop
jp
out
pop
xchg
mov
sub
pusha
or
fisubr
outs
data16
jmp
inc
mov
fstp
cs
cs
pushf
adc
sub
sbb
fisttp
xchg
addr16
cmp
or
adc
inc
out
pop
cmp
int
stos
pusha
sbb
psubsw
mov
fisttp
add
pop
inc
push
sbb
cdq
(bad)
in
jae
push
mov
rcl
sbb
stc
mov
fnstsw
xor
outs
fwait
int
sbb
mov
mov
jae
mov
aad
sbb
test
sbb
or
mov
out
outs
push
int3
push
popa
mov
jno
test
sbb
ja
scas
push
es
inc
and
cwde
out
sbb
cmps
jl
pusha
push
(bad)
test
and
lock
cmps
pop
lahf
push
mov
jnp
sbb
ins
push
sub
push
ds
adc
push
out
retf
rcl
inc
inc
sub
sub
sub
xchg
fcmovnb
adc
push
retf
push
aaa
xlat
pusha
adc
cmc
xchg
aas
rcl
sbb
and
adc
add
inc
nop
add
add
jns
ds
jae
scas
mov
fisub
cmps
sub
(bad)
mov
enter
xchg
or
mov
push
in
adc
or
pusha
inc
add
ins
in
call
cmp
test
pop
push
adc
xchg
stos
inc
pop
int3
push
cmc
adc
and
push
jae
xchg
mov
std
not
push
daa
sbb
mov
addr16
cmp
cmps
pushf
adc
pop
movs
not
leave
es
clc
cli
sub
and
mov
jno
cdq
pop
sbb
mov
adc
int
mov
cmp
hlt
lea
addr16
mov
std
les
xchg
pop
pop
pop
pop
cmp
jbe
pop
popf
and
sti
cs
and
sub
shr
sub
sub
imul
jns
lds
lock
or
inc
call
fwait
adc
(bad)
xor
adc
jbe
repnz
add
sbb
ret
call
sbb
pop
pop
js
es
pop
(bad)
mov
(bad)
push
(bad)
lds
(bad)
outs
or
data16
ja
sub
push
loopne
dec
xchg
test
mov
dec
push
adc
add
or
and
int3
pop
push
test
jg
cmp
mov
and
pushf
les
movs
test
xor
mov
and
in
ins
or
jmp
icebp
(bad)
(bad)
cld
pop
sbb
xor
(bad)
clc
cmc
arpl
dec
mov
movs
mov
inc
bound
add
xchg
fwait
cmp
ds
jno
jmp
daa
push
imul
mov
les
mov
shl
jge
push
push
movs
cmp
and
sbb
rcr
pop
pop
imul
ins
mov
ins
aas
or
jbe
scas
scas
out
mov
sbb
je
pop
mov
mov
shr
xchg
cmps
daa
xchg
push
push
mov
es
mov
aaa
pop
test
xor
nop
mov
ins
retf
push
fstp
mov
sar
jecxz
aad
scas
clc
movs
jnp
push
retf
jg
cmps
retf
(bad)
cdq
xor
clc
mov
xor
cmp
pop
in
push
std
test
es
loope
dec
(bad)
fldcw
dec
(bad)
std
sti
imul
push
pop
std
or
add
jne
ret
mov
pop
lock
push
adc
jne
mov
add
popa
dec
and
sar
repnz
xchg
adc
iret
dec
sbb
push
xchg
enter
rcl
mov
imul
sbb
xchg
bound
lods
jl
push
jo
add
adc
jecxz
mov
xchg
cdq
inc
and
lds
cmp
or
jecxz
pop
test
or
mov
lea
inc
sub
sbb
xchg
add
into
pusha
mov
into
sub
dec
cmp
adc
js
arpl
adc
and
scas
jecxz
pop
je
xchg
out
mov
xchg
call
push
xchg
inc
stos
mov
push
cdq
sbb
sbb
daa
or
adc
push
inc
jmp
cli
int3
pop
xor
int
cmps
sti
push
inc
push
out
jnp
das
das
mov
mov
imul
sub
cmp
push
inc
mov
mov
dec
add
push
out
fs
jmp
dec
pop
fld
sub
jmp
loopne
sbb
jbe
jmp
retf
push
add
fwait
mov
xor
push
pop
xchg
je
iret
cmps
popf
(bad)
bound
xor
mov
sbb
adc
lock
add
ins
xchg
cld
dec
jg
and
ds
xor
dec
adc
or
jmp
cwde
mov
vpmacssdql
pop
repz
and
fiadd
jns
(bad)
out
push
dec
cmp
ret
mov
xlat
(bad)
push
ja
jge
push
xchg
popa
aas
add
ror
mov
aad
fdivr
mov
in
mov
xchg
cmp
scas
push
add
dec
call
pusha
repnz
ficomp
dec
xchg
xchg
inc
scas
or
and
and
mov
outs
mov
mov
mov
mov
sbb
iret
jo
pop
and
adc
and
jae
xor
scas
mov
out
mov
mov
mov
ins
push
or
fist
in
or
fisttp
and
mov
xchg
and
dec
call
aaa
or
sub
aaa
sar
rcr
pcmpgtd
sar
cmps
shl
bound
dec
cmp
xchg
mov
inc
nop
inc
shl
rcl
rol
cmp
or
repz
jmp
push
test
jnp
adc
cmp
fnstsw
lea
ret
sbb
sbb
adc
xor
sub
and
cmp
shr
clc
sub
sbb
or
test
adc
in
mov
adc
push
cmp
test
inc
inc
mov
ret
in
aaa
xchg
add
add
ss
lods
sti
nop
inc
cwde
int
fs
inc
sub
fidivr
sub
inc
test
xchg
gs
retf
ins
lea
pop
adc
scas
cmp
clc
ret
sub
mov
leave
push
fst
mov
aam
jo
add
outs
loopne
mov
pushf
sub
mov
neg
js
xor
xor
rcl
push
xchg
je
cmp
test
scas
pop
(bad)
pushf
jo
jle
add
cmp
sbb
icebp
add
cmp
imul
cmp
dec
mov
pop
mov
das
nop
dec
not
and
mov
repnz
and
call
dec
add
and
adc
fldlg2
cdq
loope
add
and
mov
sbb
pop
lock
dec
jns
jno
inc
sbb
popf
push
and
movs
shl
pop
adc
add
and
cmc
cwde
lea
jne
push
imul
jmp
pop
lahf
lea
inc
xor
mov
cmp
rcl
cmp
xor
mov
pop
mov
add
inc
xor
imul
fcom
dec
mov
std
pop
aas
push
lods
pop
dec
sub
sar
loopne
inc
pop
je
out
push
out
cmp
mov
rcl
xor
lods
dec
push
push
shl
aam
cwde
loop
jp
or
xchg
push
adc
jne
call
es
retf
movs
(bad)
or
pop
stc
adc
call
xchg
xchg
mov
stc
cmp
mov
sbb
jae
adc
popf
dec
in
je
or
outs
out
fimul
stc
jno
jae
sub
sub
jl
add
leave
add
jns
icebp
call
cmp
pop
xchg
xchg
mov
test
ds
call
enter
gs
jmp
push
les
xchg
or
sbb
bound
mov
mov
adc
inc
sbb
inc
sahf
mov
or
sbb
stos
(bad)
retf
push
das
scas
sub
ja
sub
imul
push
movs
xchg
xchg
and
and
ret
pop
add
inc
aas
mov
icebp
cmps
xor
std
push
test
lea
mov
dec
popf
xchg
ins
push
outs
pop
in
mov
popf
xchg
jmp
hlt
retf
shl
jecxz
pusha
inc
xor
inc
sbb
sub
lea
xlat
stos
and
mov
cs
xlat
lahf
repz
dec
pop
or
call
call
sahf
iret
popa
xchg
sti
push
mov
cdq
icebp
imul
or
mov
inc
mov
jge
dec
sub
sti
xchg
mov
je
and
cld
mov
mov
inc
xchg
and
pop
pop
cs
shl
imul
repz
xchg
mov
fistp
add
bound
jecxz
pushf
ror
enter
xor
pop
add
cdq
mov
es
cmps
aaa
mov
xchg
xor
sub
aam
and
push
fsubr
pop
and
lds
push
lahf
or
dec
dec
outs
jp
pop
out
outs
(bad)
mov
push
fbstp
shl
pop
inc
jne
ret
test
bound
fadd
cmp
push
jmp
ja
fist
in
or
sub
sbb
cmp
lds
sbb
inc
iret
clc
movs
mov
pop
neg
jb
jo
adc
jo
sbb
fidivr
cdq
cmp
fld
xor
imul
and
lahf
icebp
(bad)
or
and
cld
or
in
inc
popf
outs
lods
push
daa
mov
ficomp
shl
xor
or
(bad)
mov
xor
popa
pusha
push
clc
dec
into
xor
push
ror
lahf
inc
mov
retf
lds
out
xchg
sbb
sbb
lock
fwait
call
sti
shl
je
sub
jo
aas
ror
in
lods
rcr
xchg
shl
shl
add
or
nop
pop
mov
in
mov
jle
mov
and
dec
xchg
xchg
lahf
mul
mov
adc
jno
int3
sbb
inc
outs
lahf
pop
pop
push
movs
cmp
imul
repz
jb
scas
push
mov
retf
or
mov
adc
jae
scas
dec
movs
popa
cmp
hlt
xchg
mov
aas
mov
add
cmp
or
adc
mov
repnz
cdq
inc
int3
dec
add
and
lock
or
adc
xchg
out
xchg
aas
adc
(bad)
(bad)
stos
push
sbb
push
pop
popa
or
mul
in
aaa
pusha
xchg
jb
dec
mov
dec
fbld
add
(bad)
movs
pop
clc
ret
inc
mov
fsub
scas
jmp
shl
xchg
xlat
and
aad
adc
pusha
pushf
inc
or
inc
and
dec
mov
xor
in
shl
or
out
mov
sub
pop
mov
mov
pop
sub
(bad)
cdq
and
inc
repnz
fwait
(bad)
bound
and
push
xor
inc
je
enter
pop
pop
mov
add
dec
movs
jmp
icebp
ja
inc
jp
fs
add
(bad)
stc
xor
das
pop
adc
sahf
sub
inc
sar
sub
std
xor
sar
ds
or
adc
sub
fdivr
(bad)
out
add
cmp
add
or
xor
push
push
push
mov
das
shr
or
in
add
mov
nop
xor
and
jns
out
mov
bound
leave
enter
inc
pop
cmp
dec
or
and
stos
inc
add
hlt
jecxz
aas
jl
xchg
push
mov
aas
cmp
lahf
mov
cwde
cmp
mov
rep
movs
mov
ret
xchg
mov
xor
inc
mov
jns
mov
test
mov
add
ss
out
push
sti
jmp
sub
xlat
mov
mov
lds
add
ficom
les
shl
xchg
(bad)
push
(bad)
pop
retf
movs
(bad)
(bad)
clc
xor
mov
jp
sar
out
lods
cmp
xchg
mov
jmp
pop
sub
movs
mov
mov
mov
lahf
jle
in
mov
push
inc
pushf
cmp
mov
inc
xor
adc
stc
push
sub
add
aam
inc
jl
loope
jo
jle
cmp
and
sti
dec
es
xor
sar
lock
jnp
stos
cdq
cmp
arpl
sub
push
jl
mov
shl
sub
(bad)
mov
hlt
push
icebp
mov
call
out
lock
jmp
jl
mov
add
inc
or
inc
jp
adc
sub
jne
inc
mov
and
fmul
mov
in
popf
call
push
call
cmp
or
push
and
sbb
dec
jmp
call
mov
loope
pusha
ds
sbb
shr
and
add
xchg
add
retf
jecxz
dec
imul
je
popa
fsubr
mov
mov
or
lahf
xchg
pushf
and
ret
scas
aad
mov
mov
(bad)
mul
pop
push
call
or
xchg
sbb
sub
pop
ret
or
push
sbb
push
mov
and
stos
stos
mov
cmps
aam
sbb
ret
(bad)
pop
push
repnz
adc
pop
loop
mov
cmp
mov
(bad)
mov
and
jmp
xchg
rcr
(bad)
fnstenv
push
and
pop
test
push
shl
sahf
push
or
and
aam
mov
dec
sbb
clc
sub
adc
test
cmp
inc
sub
clc
push
fmul
xor
fstp
cmp
push
fpatan
jl
jnp
in
(bad)
sub
add
cdq
loop
xchg
cld
cmp
sbb
cmp
nop
nop
mov
in
add
or
add
out
jl
stc
js
jnp
sbb
repnz
leave
(bad)
jno
or
fsubr
iret
sub
mov
mov
call
push
arpl
(bad)
jne
popf
fmul
xor
mov
lods
adc
nop
outs
pusha
dec
jmp
add
xor
cmp
idiv
clc
popf
call
xchg
and
loopne
mov
mov
out
xchg
jnp
es
cmps
lds
out
arpl
test
inc
aas
gs
jg
jg
cmps
inc
xlat
(bad)
pushf
jg
xchg
retf
aaa
or
pop
add
push
inc
(bad)
out
cdq
aad
lahf
(bad)
outs
mov
pop
xchg
(bad)
mov
iret
(bad)
cmp
scas
movs
mov
nop
pushf
push
mov
adc
and
fcomip
in
xor
frstor
mov
mov
xchg
mov
sbb
pop
jb
loop
push
xchg
push
pushf
dec
into
mov
cmps
push
jnp
cmp
repz
push
or
xchg
loope
test
sbb
pop
(bad)
sub
sbb
loopne
fwait
push
mov
(bad)
pop
cmp
(bad)
cmc
(bad)
aas
(bad)
push
pop
cmp
loope
pop
push
popf
jns
ds
icebp
cmp
mov
push
pop
test
test
stc
sbb
(bad)
cs
in
sti
add
cmp
mov
movs
movs
xchg
adc
ds
push
inc
cdq
imul
push
jo
das
jo
fs
push
push
sub
pushf
inc
inc
test
repz
test
in
xchg
xchg
in
js
pop
fistp
vmwrite
mov
add
mov
out
mov
ins
lahf
or
hlt
iret
xchg
fdiv
push
sahf
popf
pop
popf
ss
cmp
jne
sbb
adc
dec
ret
jns
mov
(bad)
fsub
and
iret
xor
test
out
jmp
mov
aad
dec
mov
mov
mov
cmp
cmp
imul
lods
mov
jle
lods
retf
mov
in
lock
(bad)
retf
test
lods
ja
dec
sti
je
(bad)
mov
lds
aad
mov
pop
mov
aas
sti
adc
jecxz
ins
lea
std
ja
sbb
in
ds
call
test
sbb
daa
and
cmp
loopne
jl
dec
or
pop
out
xchg
add
xchg
cmp
(bad)
push
nop
not
xchg
fsubr
sar
idiv
mov
push
dec
mov
mov
add
xchg
int
add
js
ror
push
cmps
push
mov
cmps
add
loope
test
cmc
fdiv
jns
push
xor
mov
cdq
and
aaa
pop
push
cmp
clc
add
out
inc
push
cmp
sbb
mov
xor
repz
mov
shr
gs
ja
cmc
dec
push
and
fucomp
adc
enter
int3
ins
enter
add
push
es
mov
lods
sub
lahf
or
and
push
fsub
dec
or
inc
and
sahf
icebp
add
in
test
xor
not
sbb
dec
jge
mov
inc
cmps
(bad)
jnp
popa
(bad)
lods
jae
retf
in
mov
pop
or
scas
mov
xrelease
sbb
add
aam
sub
aad
shl
dec
cmp
call
jb
jecxz
movs
int
jae
ja
cwde
xor
dec
into
pop
pop
lahf
dec
std
std
cmc
mov
loop
and
lock
cmps
aas
xchg
popf
xchg
mov
in
shr
dec
mov
inc
inc
cld
sub
pop
test
pusha
xor
retf
and
and
out
and
rdtsc
cmp
les
icebp
lods
js
je
sar
and
out
add
ja
sub
inc
mov
mov
repnz
loop
pusha
cmps
dec
pop
mov
pusha
mov
cli
imul
mov
mov
and
or
rcr
xlat
xchg
fidivr
sbb
xchg
inc
cmp
and
dec
ret
mov
pop
test
dec
dec
scas
xor
aad
pop
sti
cmp
fbld
movs
pop
xchg
cmp
inc
clc
mov
(bad)
aam
mov
ret
and
xchg
or
jecxz
mov
por
or
sub
addr16
adc
repz
stc
loopne
gs
iret
pushf
jae
outs
lds
lahf
in
pop
mulps
int
push
or
jge
jecxz
cs
mov
xchg
push
movs
push
jg
lods
es
out
int
es
push
int3
or
pop
cmp
pop
adc
fmul
fucomp
rol
arpl
leave
mov
jecxz
lods
sar
test
inc
sub
mov
sahf
and
loop
push
call
fcomp
mov
mov
js
pop
sbb
out
adc
iret
cld
mov
cmp
push
fstp
aas
push
push
or
mov
xchg
and
sbb
test
sbb
je
outs
cmp
add
push
xchg
pushf
dec
fimul
imul
mov
pop
mov
or
jnp
mov
sub
inc
xor
gs
arpl
fnsave
enter
xor
inc
add
pop
xchg
or
jno
xor
push
jp
or
inc
push
push
adc
rcl
gs
dec
mov
rcr
add
jge
jbe
loope
test
ror
cld
mov
or
pop
push
ja
cmp
inc
pop
push
mov
mov
jns
sbb
mov
fld
xor
xor
dec
enter
fldcw
sbb
sbb
or
fsub
fmul
sbb
cmp
aas
sbb
jmp
mov
fimul
xchg
leave
lea
movs
pop
xor
dec
in
pop
adc
(bad)
repnz
mov
jb
call
mov
(bad)
jle
adc
call
push
(bad)
std
mov
mov
(bad)
xor
outs
dec
push
add
cmc
xchg
(bad)
mov
fisttp
xchg
xchg
mov
bound
scas
in
jbe
add
cmp
fistp
imul
fiadd
cmps
ret
mov
in
(bad)
add
mov
outs
movs
pushf
rcr
lock
retf
jmp
arpl
aaa
add
int
xor
or
mov
xor
ja
xchg
jl
adc
jge
aad
fdivrp
fimul
adc
sbb
jmp
lods
mov
inc
(bad)
cwde
sar
and
jmp
les
movs
lods
fsub
and
(bad)
xchg
cmp
inc
cmp
das
jbe
or
or
call
outs
scas
into
in
mov
mov
loope
dec
test
jns
adc
sub
pop
loopne
xor
push
xchg
out
push
frstor
lods
lock
test
stc
fwait
jbe
jge
mov
cwde
dec
pusha
daa
pushf
mov
mov
pop
daa
pop
std
push
(bad)
lods
ror
push
retf
outs
in
mov
xchg
cld
sub
adc
cmps
dec
jbe
aas
inc
call
pushf
push
or
xchg
fiadd
je
jge
test
or
push
daa
pop
xchg
sub
mov
sub
push
fnstsw
fldenv
sar
out
loope
jno
cld
cmp
mov
popa
mov
movs
or
mov
push
mov
xchg
scas
mov
lock
out
push
icebp
push
xlat
sahf
inc
jbe
pop
jmp
lock
inc
mul
(bad)
xor
or
push
sub
ds
dec
jne
dec
sbb
pop
xlat
mov
xchg
call
push
xchg
(bad)
push
sub
rcl
cmp
push
dec
mov
ins
retf
mov
clc
jae
jmp
fwait
mov
jo
adc
aaa
jae
gs
xchg
sbb
das
pop
aad
lock
mov
test
or
popf
ins
stos
les
hlt
mov
stos
fmul
stos
cmp
and
test
lods
adc
xlat
nop
jge
inc
mov
mov
mov
shl
sbb
(bad)
shl
std
imul
je
mov
and
ror
data16
js
jecxz
xchg
xor
enter
push
pop
push
adc
jo
and
fwait
mov
call
pop
pop
scas
call
mov
jb
cmp
sbb
jp
and
xchg
leave
iret
sub
out
mov
sti
jns
mov
out
leave
jbe
nop
mov
mov
rol
nop
dec
dec
clc
lods
fbstp
sti
inc
xchg
mov
push
dec
in
add
(bad)
std
int3
sbb
out
out
je
inc
cmps
test
push
xchg
mov
movs
mov
xchg
fwait
(bad)
pop
test
stos
retf
aad
mov
push
push
popf
pop
out
out
xor
add
ret
sub
test
js
push
sbb
repnz
test
pop
mov
lahf
sbb
fimul
sub
cmp
inc
pop
adc
into
and
stc
sar
retf
jle
ds
rol
jo
repnz
xchg
test
cmp
pushf
popf
mov
cmp
or
sbb
fmul
pushf
ds
xchg
das
mul
(bad)
and
dec
xchg
and
loop
lahf
ds
xchg
sbb
adc
js
or
add
(bad)
cmp
xor
jb
adc
sbb
mov
inc
jbe
fld
cmp
mov
ins
fidivr
call
call
ret
inc
les
sbb
ins
jae
xchg
or
lods
jge
mov
test
cld
hlt
mov
mov
ins
aaa
dec
(bad)
imul
(bad)
mov
pusha
ds
cmc
and
das
mov
outs
and
sti
aaa
jnp
ins
cmps
or
sub
fwait
movs
jno
(bad)
sub
jno
mov
add
jnp
cmp
push
mov
das
sbb
(bad)
ds
fimul
mov
or
mov
jae
pop
jmp
mov
in
imul
(bad)
(bad)
mov
gs
mov
or
pop
mov
xor
mov
and
and
(bad)
mov
addr16
add
or
inc
xchg
inc
cwde
adc
inc
ins
xchg
imul
scas
mov
sub
aam
retf
cmps
mov
cmp
lds
mov
mov
pop
ffreep
cmps
xor
jo
jge
out
lar
sbb
sub
xchg
fcomp
mov
fwait
(bad)
(bad)
pop
or
call
adc
loopne
xchg
call
mov
repz
xor
mov
sbb
test
retf
icebp
jl
retf
in
jl
dec
out
nop
mov
sbb
ins
movs
adc
bound
or
mov
es
sbb
jne
ja
dec
movs
or
popa
mov
stos
jne
and
lods
inc
imul
fadd
ins
jno
iret
jp
inc
ret
dec
jne
int3
inc
inc
mov
mov
je
jle
fistp
jecxz
or
sub
data16
fwait
mov
cmp
adc
jmp
cmp
pop
icebp
lock
mov
jb
jl
push
fcmove
pushf
pop
(bad)
enter
dec
imul
mov
loope
lods
pusha
fld
dec
jge
icebp
mov
jns
inc
movs
xor
dec
cs
popa
daa
sbb
dec
rcl
or
pop
inc
out
and
adc
or
in
inc
mov
pop
js
test
pusha
sbb
pop
and
mov
scas
or
clc
jne
scas
test
push
orps
and
scas
sbb
mov
repz
imul
lods
test
das
ins
mov
(bad)
ja
jno
and
cmp
xchg
repnz
or
xchg
ins
scas
dec
or
test
ins
mov
mov
adc
retf
(bad)
cmp
mov
fdivr
ret
mov
dec
icebp
cmp
das
xchg
push
mov
arpl
test
ret
jbe
dec
mov
test
jl
pop
stos
in
(bad)
call
mov
mov
or
out
lods
adc
inc
(bad)
idiv
loopne
mul
out
stc
mov
(bad)
and
adc
and
in
sahf
push
out
lods
fldcw
sub
leave
jmp
push
mov
adc
cmp
mov
mul
sub
call
push
jb
add
xor
mov
stc
or
sbb
push
idiv
push
or
adc
cdq
ret
and
pop
in
dec
jne
xlat
mov
hlt
je
inc
fs
test
cli
lods
ja
mov
xor
mov
js
adc
stc
mov
cwde
movs
or
inc
in
mov
mov
enter
scas
mov
mov
(bad)
mov
div
push
js
push
cdq
not
and
pop
fcomi
icebp
sub
dec
into
ss
dec
push
xchg
test
add
push
imul
scas
test
or
loop
xlat
inc
mov
or
add
aaa
(bad)
xor
and
dec
into
xchg
ror
(bad)
cmc
call
mov
fmul
cwde
fcmovu
and
ret
fs
icebp
adc
sahf
lahf
ja
movs
dec
mov
and
sbb
hlt
out
mov
and
xor
dec
xor
or
sbb
out
pop
(bad)
mov
adc
dec
hlt
pop
(bad)
call
jl
je
sahf
dec
cmp
sbb
xor
aaa
(bad)
pop
mov
xor
test
imul
outs
jo
dec
jns
hlt
mov
out
fnstenv
add
or
cmc
and
dec
fsubp
cld
jae
inc
lds
test
pushf
sti
loopne
scas
repnz
stc
call
sbb
jnp
frstor
xchg
push
daa
mov
cli
mov
hlt
push
cdq
fsubp
clc
pop
(bad)
aas
mov
(bad)
lock
or
push
push
fbstp
pop
xbegin
push
sti
xor
mov
out
cmp
fst
popa
jg
ret
mov
push
push
adc
and
imul
stc
dec
fild
fwait
mov
imul
aaa
hlt
or
jg
test
cmps
mov
jecxz
js
daa
fwait
xor
cmp
es
mov
js
xchg
aas
or
cmp
ret
dec
mov
ins
or
xchg
cmps
shl
cmp
shr
addr16
and
lods
stos
inc
out
mov
mov
jnp
bnd
or
adc
jo
or
clc
push
repnz
aaa
pop
jnp
dec
adc
frstor
and
and
lods
enter
jg
xchg
lahf
outs
mov
pop
iret
(bad)
sbb
push
inc
inc
pop
mov
stos
enter
test
push
or
mov
xchg
mov
aas
and
scas
and
out
mov
gs
mov
dec
cmps
sub
(bad)
call
sar
xor
shl
(bad)
cmc
jnp
sub
and
sar
rol
dec
nop
inc
and
sbb
pop
pop
call
fwait
fs
and
cmc
add
out
addr16
inc
xchg
or
adc
cwde
add
push
mov
push
push
xchg
loope
dec
sbb
jmp
sub
imul
xor
cmps
fsub
jbe
test
push
add
(bad)
dec
add
mov
inc
jns
jb
sub
les
inc
ret
mov
inc
loopne
in
es
sub
push
test
xor
in
xchg
in
sub
scas
mov
jno
ret
push
test
retf
sub
sbb
mov
outs
dec
fistp
jnp
jbe
cs
jmp
mov
jge
popf
pushf
leave
and
cmc
mov
sahf
mov
rcr
(bad)
hlt
std
stc
cdq
or
cdq
mov
and
lds
mov
push
data16
hlt
and
inc
push
dec
fisttp
cmp
pusha
xchg
jne
mov
add
(bad)
sar
mov
dec
mov
je
enter
loop
cmp
mov
fs
push
loope
stos
test
test
hlt
cmc
xchg
push
ret
xchg
sub
dec
scas
ret
(bad)
push
xor
adc
mov
pop
mov
mov
nop
adc
jg
xchg
xchg
cmp
inc
sub
push
xchg
inc
loope
ret
pop
mov
xchg
cli
xchg
xchg
sbb
inc
aam
adc
sbb
bound
sub
sbb
push
pop
retf
rcl
rep
push
or
and
(bad)
xor
jns
sub
enter
test
and
(bad)
dec
ret
pop
cmp
rcl
and
jnp
add
je
arpl
add
mov
adc
fiadd
xlat
fldcw
ins
cmp
fnstcw
sub
mov
mov
ss
fs
dec
mov
loop
pop
pop
xor
int
cmp
cld
xchg
xor
pushfw
outs
xchg
mov
lods
pop
icebp
aaa
push
cmc
and
add
call
push
jns
mov
shl
push
popf
pop
enter
mov
imul
cmp
mov
arpl
addr16
push
push
cdq
sbb
imul
and
push
lock
arpl
mov
jmp
sbb
sbb
mov
xlat
sar
test
test
or
aad
inc
adc
mov
out
mov
shr
mov
out
add
xchg
pop
sbb
jmp
push
mov
or
mov
adc
mov
(bad)
add
mov
mov
sbb
jb
push
arpl
loop
sbb
jne
cs
daa
clc
out
jmp
xor
mov
les
sar
push
push
outs
cmp
adc
ins
and
add
or
int
(bad)
popf
hlt
sub
in
mov
or
lea
xchg
mov
sbb
sbb
pop
sahf
mov
in
ret
mov
icebp
jp
daa
sbb
mov
cmp
pop
rcl
fs
push
test
idiv
push
fwait
test
jno
xchg
iret
push
pop
and
inc
and
push
cmps
xor
jbe
xor
xchg
xor
xchg
or
iret
mov
imul
cld
mov
popf
jnp
js
mov
jmp
mov
pop
sbb
add
xchg
enter
or
dec
push
push
adc
es
jle
xor
mov
pop
mov
mov
sub
cmps
out
sub
push
and
dec
add
lock
fadd
clc
sbb
push
sbb
es
hlt
sbb
push
cmp
inc
xchg
inc
fsubr
mov
daa
sti
push
push
pop
push
sub
dec
xor
iret
adc
pop
pop
inc
cmp
in
fsub
(bad)
fstp
loop
fcomp
push
cli
fwait
test
mov
xor
aad
vmread
cmp
pop
aas
mov
aad
mov
and
and
xor
into
cli
pop
and
scas
lock
mov
loop
sbb
or
lahf
cmc
jl
pop
es
adc
inc
jnp
sbb
outs
push
movs
jno
seta
cmp
ret
push
jo
arpl
mov
pop
test
les
data16
xchg
pop
cs
inc
fldcw
push
inc
mov
and
in
jb
push
mov
push
rcr
test
les
sub
add
xchg
sub
je
sub
cdq
adc
mov
fcomp
loope
dec
inc
push
sbb
rol
push
jle
or
daa
mov
inc
jns
fld
sub
(bad)
push
push
jecxz
cmp
test
mov
movs
(bad)
out
sub
xor
std
mov
leave
scas
shl
mov
fild
rcl
in
int3
inc
or
cmp
sbb
mov
loope
xor
inc
mov
pop
into
cmp
aas
push
(bad)
aas
(bad)
jle
or
fild
outs
mov
bound
inc
int3
add
pop
mov
pop
in
mov
mov
mov
popf
jmp
ja
pusha
ret
out
sbb
jg
or
call
inc
add
add
push
mov
enter
jmp
stc
pop
ss
mov
pop
fiadd
sub
movs
jge
mov
inc
mov
aad
mov
out
jo
out
sub
dec
mov
push
push
lock
jns
fsub
fisubr
addr16
popf
push
jno
xchg
sub
les
loope
arpl
push
enter
mov
pusha
mov
mov
or
std
(bad)
loop
pop
add
sar
imul
stos
mov
pop
out
fs
mov
and
adc
sub
lds
sti
cmp
loop
and
(bad)
call
jl
jge
stos
jno
mov
adc
fs
fadd
push
pop
add
jno
or
jge
daa
jo
push
add
adc
test
add
test
cwde
mov
xlat
cdq
sbb
aam
test
(bad)
xor
sbb
inc
jo
jl
stos
cmps
(bad)
in
dec
loope
(bad)
mov
popf
into
in
stc
sar
add
int
cmp
daa
adc
es
add
stos
out
adc
mov
sbb
pop
push
mov
inc
pop
out
in
ja
arpl
sbb
mov
xor
push
push
inc
ret
shl
push
add
out
sbb
add
jno
sub
inc
in
mov
js
(bad)
cmp
popf
jge
sbb
in
neg
std
(bad)
aam
and
mov
sbb
pop
lods
out
and
jecxz
adc
daa
retf
adc
fadd
mov
call
fisttp
loopne
pop
lds
lods
or
push
hlt
out
xchg
xlat
mov
push
mov
mov
lahf
dec
adc
loope
test
pop
daa
lahf
sub
pop
bound
aaa
sbb
cmp
and
and
mov
call
inc
mov
loope
sbb
inc
and
inc
xchg
movs
cmc
aas
clc
dec
xchg
test
jo
jl
jmp
mov
or
int3
xchg
adc
mov
adc
jp
fiadd
aas
cmps
jne
mov
adc
out
call
js
jb
cmp
push
adc
out
jecxz
popa
pop
dec
inc
stos
push
aas
stos
cmp
adc
dec
xchg
jne
inc
sub
adc
and
mov
fisttp
popa
inc
dec
mov
out
pop
mov
push
rcr
call
int
pop
adc
sbb
dec
jmp
(bad)
call
rol
ja
fdivp
add
jne
cmp
xchg
xor
gs
pusha
or
adc
jg
push
mov
(bad)
in
cmps
add
loope
mov
or
mov
or
and
fstp
push
(bad)
adc
push
sub
sub
ss
out
mov
pushf
dec
inc
icebp
and
dec
rcl
daa
mov
out
ds
adc
pop
xor
sub
jge
fdiv
jnp
fmul
out
jne
jl
mov
bound
sbb
cs
inc
(bad)
lds
rcr
rcl
pop
mov
cmp
jbe
pop
jns
outs
cmp
fwait
or
ret
push
xchg
fld
sti
mov
xor
fsub
js
lock
mov
test
pop
lds
fwait
adc
jns
fwait
mov
scas
in
out
out
push
dec
pop
sbb
cmp
cwde
pop
sub
inc
lea
jo
and
out
retf
mov
inc
inc
popf
in
es
cmp
cmp
mov
aam
xor
shl
loop
rol
xchg
inc
mov
adc
pop
or
mov
test
dec
scas
add
lock
push
add
adc
mov
ret
into
and
mov
sub
ins
cmps
dec
rcl
sub
mov
test
mov
jmp
addr16
test
stos
cmp
dec
sub
scas
sub
and
mov
ja
jge
pop
ss
(bad)
push
sub
call
aas
retf
mov
lock
test
push
int
pop
aam
loopne
xchg
lods
jbe
mov
adc
aas
and
xchg
lea
mov
cli
jns
(bad)
jl
mov
loopne
aad
sub
mov
cld
call
cli
fadd
movs
es
ja
dec
hlt
fwait
repz
icebp
cmp
sub
leave
outs
push
in
mov
adc
pop
test
sbb
popa
js
push
fistp
xor
sub
retf
mov
jl
sub
xchg
sub
mov
fsubr
js
cmpxchg8b
xchg
cwde
aaa
das
push
dec
(bad)
fs
pop
sbb
ja
add
imul
test
fwait
xor
dec
mov
stc
or
popf
push
enter
call
(bad)
and
ror
into
test
and
loop
push
cmp
data16
arpl
mov
xor
pop
push
fmul
jecxz
les
out
cmc
or
dec
mov
mov
(bad)
pop
ds
push
sub
in
mov
cmc
inc
retf
repnz
test
cmps
jmp
dec
cmp
xor
ja
sbb
sbb
sub
nop
call
(bad)
cmps
lahf
adc
pop
lahf
mov
push
xor
setno
pushf
add
and
shl
jg
mov
fldenv
inc
add
psraw
sub
push
pop
pop
lock
xlat
jno
iret
fisubr
movs
mov
adc
pop
and
xchg
inc
xchg
pop
out
and
in
repz
ins
or
inc
movs
ins
(bad)
cwde
adc
sbb
jae
jp
lahf
fs
cmp
nop
ds
(bad)
imul
xchg
dec
adc
dec
sbb
sti
test
push
add
mov
and
fwait
xchg
jle
push
movs
sub
iret
adc
iret
sbb
adc
ins
lahf
(bad)
mov
addr16
movs
or
clc
loopne
popf
push
pushf
movs
repz
sbb
out
loop
sbb
scas
retf
cmps
ja
jl
dec
adc
out
mov
cmps
js
xchg
pop
add
fyl2x
add
dec
inc
mov
(bad)
call
pop
push
or
ins
cmp
mov
push
test
pusha
arpl
ss
sbb
inc
cmp
xor
mov
shr
xchg
das
xchg
mov
scas
adc
push
lock
or
add
mov
scas
pop
xchg
(bad)
(bad)
jmp
cli
xchg
jg
dec
popf
retf
test
xchg
pusha
test
cmp
shr
rol
xchg
jcxz
ret
mov
mov
lock
fimul
sbb
pop
xchg
jns
test
dec
scas
aad
lahf
(bad)
jmp
ins
(bad)
nop
sub
add
test
sti
aaa
pusha
mov
loop
ins
mov
aas
popf
inc
fld
xor
fst
dec
jmp
pop
or
iret
and
in
xchg
mov
ss
or
dec
retf
jnp
mov
mov
jne
mov
cwde
mov
(bad)
adc
(bad)
clc
pop
inc
xor
ss
sub
pop
inc
mov
addr16
mov
call
adc
add
sub
pop
xor
jecxz
dec
mov
xchg
ja
adc
mov
and
cwde
jb
push
dec
call
aaa
shl
or
or
sbb
test
xchg
pop
lods
fwait
mov
mov
xor
xchg
dec
pop
(bad)
push
mov
pop
push
push
sbb
loopne
imul
shl
sti
call
mov
dec
popa
outs
cmp
or
add
cmp
in
das
push
jmp
mov
es
push
outs
mov
out
jmp
sub
cmp
xlat
mov
mov
or
adc
xchg
or
adc
aas
iret
rep
fadd
mov
out
cmp
cmp
and
push
mov
fcom
mov
sbb
icebp
repz
scas
push
mov
xchg
dec
pop
inc
out
jns
jmp
add
hlt
push
lea
xchg
dec
div
call
mov
adc
aam
enter
cmp
mov
pop
neg
cmps
cmp
arpl
(bad)
mov
dec
mov
(bad)
loope
div
xchg
cli
rcr
push
pop
stos
mov
push
pop
(bad)
xor
stc
stc
scas
add
leave
or
cli
lahf
xchg
sub
loop
xor
push
lods
aad
jmp
mov
mov
fadd
xchg
mov
ret
icebp
stc
fucom
retf
inc
enter
mov
pop
iret
and
cmp
adc
mov
pop
in
cmp
mov
sbb
mov
addr16
fcomp
and
mov
push
out
dec
mov
pop
int
pop
cmps
fiadd
cmp
xlat
pusha
jne
add
mov
cmp
xor
pop
cmp
call
mov
fiadd
cmc
push
jnp
mov
xchg
xor
out
add
out
loope
mov
fidiv
repz
jp
jns
popf
and
sub
neg
sub
push
mov
leave
and
add
int3
mov
nop
push
jbe
iret
or
call
mov
jmp
mov
inc
inc
fst
mov
daa
loope
(bad)
add
jg
out
popa
dec
sbb
shr
pop
(bad)
ret
out
fistp
int
(bad)
xor
fnstenv
cs
sbb
bound
pop
mov
push
gs
push
out
pop
dec
jb
xchg
mov
push
bnd
loop
pop
pop
pop
pop
mov
test
int3
mov
push
cmp
push
or
xor
dec
xor
test
mul
lea
mov
loop
mov
cdq
lea
rcpps
nop
sub
loop
(bad)
and
daa
mov
push
adc
call
jmp
push
and
xor
push
nop
cmp
inc
sti
fcom
mov
inc
inc
inc
inc
mov
xchg
cmp
rol
(bad)
xchg
lods
mov
(bad)
pop
push
lea
mov
movups
and
stos
daa
and
enter
shl
test
sbb
arpl
add
dec
adc
pusha
int3
ins
push
push
inc
pop
sub
ror
mov
push
(bad)
mov
jp
ret
xchg
xchg
mov
retf
pop
mov
or
and
js
sub
mov
jo
es
mov
pop
dec
sbb
fsub
push
retf
jp
test
mov
adc
mov
sub
cmp
inc
or
xchg
fwait
cmp
das
cmps
cmps
cmps
sub
mov
and
ror
jge
and
into
ret
push
xchg
or
sar
and
shl
mov
bound
sbb
jae
xchg
lea
(bad)
sbb
addr16
mov
add
addr16
int3
pop
mov
out
(bad)
jmp
fdiv
aas
push
ss
xchg
inc
fimul
pop
enter
jge
add
mov
fst
mov
es
cmp
jg
js
add
inc
jbe
cmp
mov
call
lods
es
call
pop
out
les
pop
call
jno
mov
xor
lds
inc
mov
cs
add
data16
out
or
mov
clc
jnp
sbb
sti
jno
adc
es
pop
xlat
xlat
aaa
adc
push
test
ins
jnp
mov
ins
mov
adc
xor
test
mov
add
push
push
xchg
pop
mov
sti
cli
outs
rcl
sub
mov
mov
movs
mov
imul
mov
push
xor
push
mov
push
std
xchg
out
jno
inc
pop
clc
mov
cli
and
mov
in
jle
sub
test
mov
mov
push
sar
lea
dec
(bad)
sub
and
mulps
cmp
mov
sub
adc
pusha
call
pop
xchg
and
cmps
jbe
or
xor
fdivr
push
ds
sub
rcl
sbb
jmp
and
ins
popf
retf
rol
push
paddusb
cmc
push
popa
pusha
movs
cld
test
mov
dec
add
mov
test
mov
push
mov
(bad)
jns
fisttp
inc
add
out
jp
xor
xchg
pop
xchg
add
test
loope
adc
jecxz
jge
jmp
mov
sahf
inc
mov
or
push
and
and
mov
outs
call
or
sti
mov
pop
cmp
pop
mov
lahf
in
mov
fmul
sbb
add
sub
dec
in
jge
push
test
test
mov
sub
adc
xor
pop
mov
sbb
push
mov
hlt
xor
xchg
out
out
xor
push
dec
stos
cmp
scas
mov
pop
call
(bad)
mov
jno
pop
(bad)
icebp
mov
stos
xchg
in
push
push
dec
dec
sub
xor
pop
sbb
mov
mov
jae
sub
sti
and
mov
cmps
lahf
pop
dec
fadd
inc
adc
cdq
ret
mov
dec
out
pop
mov
jmp
mov
sbb
aaa
push
in
add
add
test
xor
in
loope
and
cmps
popf
push
and
je
fwait
adc
repz
xchg
ror
ja
inc
mov
adc
push
and
mov
adc
jbe
or
aaa
out
mov
(bad)
std
ss
push
hlt
push
(bad)
add
mov
cmp
mov
pusha
push
jp
out
pop
cmp
add
les
shl
push
pushf
xor
xchg
or
sbb
lods
inc
ror
cwde
mov
imul
jl
in
cmp
pop
or
cmps
sub
sahf
adc
jp
(bad)
test
pop
and
mov
(bad)
jge
sbb
and
pop
dec
mov
pop
mov
jle
pushf
mov
(bad)
retf
int3
test
push
mov
sub
mov
mov
push
cmps
mov
lds
(bad)
(bad)
jns
cs
ds
cwde
mov
sub
popa
mov
icebp
test
jecxz
or
and
pop
int
xchg
fisubr
xor
cs
iret
icebp
(bad)
cmps
xchg
jmp
jno
retf
jb
xchg
leave
(bad)
push
mov
nop
test
xchg
out
xchg
sar
(bad)
js
es
pop
cmps
pusha
mov
mov
pop
or
retf
es
add
mov
add
out
push
inc
sti
push
xor
jno
dec
iret
inc
int3
add
hlt
pusha
xchg
dec
jbe
call
xor
ror
push
popf
popa
je
gs
lods
dec
lea
add
mov
cmp
out
test
inc
ret
mov
add
push
int
sub
aad
inc
and
mov
stc
rcl
jl
cdq
xor
add
push
sbb
jge
shr
jmp
sbb
push
jo
adc
push
cmp
repnz
iret
mov
xchg
adc
movs
pop
es
xchg
xchg
mov
sar
push
lahf
add
repz
jns
cmp
pop
out
jl
loope
cmp
xchg
mov
or
push
push
les
and
lods
cmps
call
fs
adc
mov
jnp
movs
add
ja
fs
movs
mov
jg
pop
cmps
or
dec
aas
lock
jo
add
and
sar
add
mov
cmp
inc
mov
mov
lods
js
or
mov
scas
daa
xchg
test
dec
mov
mov
mov
dec
imul
ss
jbe
in
ss
cmp
pop
mov
mov
fstp
mov
rcr
cs
(bad)
fidiv
mov
inc
mov
cmc
sbb
fstp
or
pusha
xor
inc
pop
add
push
inc
inc
sub
cmp
lock
(bad)
mov
add
sahf
xchg
jb
push
in
and
sub
mov
mov
das
xor
lods
loopne
sbb
aad
push
cmps
xor
call
fwait
add
cdq
xor
and
mov
test
adc
mov
ins
aad
cs
jle
les
nop
dec
mov
pop
inc
in
mov
fs
loop
pop
push
mov
push
xchg
xor
sub
push
loop
(bad)
xchg
in
in
(bad)
push
jmp
cmp
(bad)
ret
jg
(bad)
sbb
adc
mov
push
iret
adc
pop
(bad)
repnz
pop
das
nop
mov
or
jo
xor
out
(bad)
sti
pop
xor
das
cwde
jle
fisub
ret
jle
mov
lods
out
cs
leave
movs
daa
ja
add
dec
sahf
lahf
in
push
iret
clc
pushfw
jae
jmp
add
iret
retf
sub
sar
jge
nop
cs
jne
sub
jb
mov
jns
stos
aam
jae
jl
lahf
cmps
out
push
test
adc
inc
loope
push
lods
mov
push
adc
and
inc
int
push
ss
xchg
aas
imul
push
sbb
mov
xchg
dec
sbb
fbstp
dec
leave
push
push
sets
sub
jno
cs
cld
dec
mov
inc
fmul
and
ds
and
sub
and
push
and
mov
push
cmp
lock
cmc
out
pop
push
out
jl
jle
in
mov
js
(bad)
xor
or
ins
push
out
jnp
jno
xchg
xchg
mov
fs
mov
enter
loope
cmp
xor
ja
aas
cs
jge
adc
inc
call
jae
das
push
xor
adc
in
sbb
in
mov
push
adc
inc
inc
cwde
cmp
adc
cmps
(bad)
sbb
inc
aaa
loope
fwait
cmps
cli
inc
jecxz
lahf
adc
xchg
jmp
sub
dec
arpl
and
fdivrp
cli
jne
jae
mov
pop
pop
adc
jg
int
daa
sub
mov
mov
cli
movs
ins
mov
call
mov
mov
and
xchg
fistp
rol
mov
pushf
xor
cmp
enter
imul
mov
jmp
hlt
add
test
and
ds
inc
lock
xchg
stos
mov
mov
rol
test
addr16
cmp
cmp
mov
loope
jle
mov
test
push
ins
jl
mov
dec
sbb
shl
cdq
jecxz
xchg
cdq
push
add
ins
pop
mov
jp
inc
les
inc
nop
ror
popa
cmp
jne
repz
out
cmp
std
jmp
cmp
ror
jbe
and
fcom
xchg
sbb
ret
adc
xchg
mov
mov
xor
je
in
mov
push
pop
pushf
rol
imul
sbb
xchg
fcomp
loop
clc
out
add
jp
jb
mov
addr16
call
pop
idiv
jge
mov
(bad)
and
stos
icebp
mov
lahf
jmp
add
mov
mov
pop
in
jne
xchg
mov
or
ds
ficomp
sub
adc
outs
dec
push
jmp
add
pop
cmps
mov
lods
jbe
shl
push
addr16
xor
movs
cld
out
jbe
mov
push
sbb
outs
ins
mov
ins
cmp
cli
test
dec
and
push
inc
mov
push
add
lods
dec
inc
(bad)
ror
clc
in
loop
pop
cdq
mov
icebp
push
inc
pop
lods
(bad)
xor
jp
xor
sbb
daa
ret
mov
or
in
into
cmp
inc
popa
(bad)
fmul
je
ins
ror
cmp
xor
xor
fmul
xlat
not
outs
mov
push
dec
fisub
rcl
mov
jge
retf
lea
ds
loop
jmp
mov
dec
nop
adc
jl
xchg
xor
fst
les
cwde
jb
pop
sti
in
mov
dec
sub
jbe
fs
in
inc
push
cmps
mov
loope
xor
push
mov
xor
retf
cld
push
aad
std
adc
add
push
movs
dec
scas
fistp
push
imul
pop
out
jnp
mov
vmovddup
pop
(bad)
(bad)
stc
mov
xor
sub
jo
jne
jp
cmp
pop
cmp
jmp
lahf
fstp
lods
sar
shl
push
ret
repz
lds
jmp
sub
xchg
or
out
adc
bound
les
xchg
movs
jecxz
cmp
xor
xor
xchg
mov
adc
jmp
sbb
out
clc
or
cmc
aam
(bad)
mov
es
xchg
and
push
imul
mov
ins
into
xchg
mov
fwait
stos
or
mov
mov
mov
gs
bound
std
lds
sub
sbb
cmc
fstp
dec
loope
ret
pusha
(bad)
sub
jle
mov
pop
mov
push
push
add
cmp
jecxz
les
(bad)
sub
xor
nop
inc
push
aaa
xchg
cmc
movs
faddp
psllq
inc
or
mov
std
out
pop
push
mov
xchg
dec
or
nop
fisubr
mov
pop
test
sbb
mov
pop
aas
stos
(bad)
aas
mov
(bad)
pop
adc
or
pusha
sahf
ret
mov
dec
shr
inc
pushf
sub
pop
or
addr16
cmp
mov
ss
sar
jg
push
pop
mov
rcr
js
scas
xor
cli
mov
outs
jecxz
push
push
(bad)
mov
mov
sti
fisttp
xor
test
xchg
lods
ud2
jb
push
test
iret
retf
adc
xlat
pop
aas
lock
pop
cli
call
lea
sub
adc
icebp
add
pop
scas
int
mov
adc
mov
pop
(bad)
ins
cmps
inc
sub
bound
sti
mov
addr16
in
das
add
pop
or
pop
push
mov
jecxz
shl
repz
mov
mov
push
es
ins
adc
add
jns
jbe
dec
mov
inc
int3
cdq
ficomp
xor
pop
mov
jge
mov
add
aas
xchg
rcr
jo
ret
jb
sbb
jae
add
ret
into
icebp
xor
inc
loop
sub
inc
mov
(bad)
ins
retf
cmp
pop
loopne
movs
cdq
pop
ins
(bad)
(bad)
bound
cmps
test
inc
sub
shl
sub
mov
mov
loope
leave
fdiv
xor
xlat
xchg
xchg
aad
nop
stos
cmp
ins
arpl
pop
bound
stos
mov
sbb
cmp
and
xchg
cmp
push
push
rcr
inc
xchg
cs
push
mov
sar
inc
adc
sub
enter
dec
xchg
push
pop
jge
adc
fldcw
mov
pop
lds
addr16
xor
adc
mov
push
or
imul
mov
jl
jno
imul
xor
aaa
scas
iret
jl
jg
js
std
retf
das
ss
fiadd
pop
in
mov
xchg
imul
pusha
and
mov
idiv
pop
and
repnz
jae
and
cmp
dec
and
pop
and
popf
xchg
and
imul
push
xlat
mov
push
mov
ins
add
ficom
push
jae
fistp
jecxz
mov
mov
int
pusha
gs
and
and
xchg
pop
jl
xchg
lods
lods
out
out
push
sti
inc
fcomi
sub
push
jecxz
ret
xchg
fs
pop
push
arpl
dec
outs
outs
ror
in
adc
and
cmp
push
add
xor
pop
jbe
fxch
lods
into
dec
cmps
xchg
sub
mov
and
adc
sub
cmps
xor
imul
fmul
inc
outs
jge
je
ins
bound
xor
les
xor
jecxz
or
dec
cmp
aaa
fldenv
pop
outs
pushf
sub
in
in
push
xchg
mov
xchg
(bad)
les
movs
sbb
pop
je
pop
inc
sti
rcr
sbb
lock
popf
inc
xchg
lods
pop
adc
cmps
bnd
xchg
pop
fisubr
int3
xchg
loopne
and
lock
mov
outs
lss
gs
fcmovb
sub
movs
out
arpl
cli
and
mov
mov
sub
fs
add
out
adc
inc
xchg
or
ret
loope
out
imul
dec
pop
in
fild
jg
xchg
sub
inc
sar
dec
rol
inc
xchg
fld
jnp
fcomip
push
push
mov
push
fidivr
test
adc
ror
mov
cmp
dec
int3
sbb
inc
dec
jb
in
jno
pop
jmp
inc
ja
dec
sbb
fld
adc
mov
fidiv
add
push
js
and
or
mov
or
mov
push
jb
adc
xchg
sub
(bad)
and
outs
scas
in
fs
pop
loopne
fnstcw
stc
ror
xor
add
cs
ss
inc
cmp
pushf
jle
int
ins
stos
ficom
(bad)
leave
jo
retf
lods
cmc
(bad)
ror
adc
jecxz
lds
sbb
mov
push
iret
push
xor
adc
jbe
mov
dec
pushf
sub
mov
adc
loopne
and
adc
shl
add
mov
push
cmp
xor
jae
in
xchg
dec
ins
fwait
mov
mov
cmp
mov
sbb
mov
adc
mov
push
xchg
push
inc
xor
xlat
popa
(bad)
rcr
and
cdq
cmp
mov
mov
adc
aam
adc
mul
adc
loop
dec
into
push
push
push
add
pop
pop
xor
mov
push
xchg
out
cdq
pusha
(bad)
aad
xchg
xor
sub
sub
pop
mov
nop
sti
adc
data16
ficom
push
sub
iret
jne
adc
sti
push
movs
jl
(bad)
lods
les
mov
pop
jmp
aaa
sub
jns
mov
mov
adc
add
rcl
out
inc
mov
jae
(bad)
int3
mov
adc
push
jno
ins
leave
jns
cmps
fs
lahf
add
add
add
dec
leave
nop
jnp
jecxz
ss
mov
fcom
xchg
dec
pop
inc
pop
mov
inc
sub
mov
lahf
ret
icebp
mov
imul
icebp
sar
pop
outs
das
cmc
or
push
sub
inc
(bad)
xor
sti
int3
add
xlat
js
sbb
sti
jg
std
popf
jmp
push
es
push
shr
pop
sar
inc
idiv
xor
rcr
(bad)
int3
es
(bad)
xchg
jg
cmc
xchg
(bad)
xor
hlt
cmp
pop
sbb
in
dec
in
sti
xor
outs
rcl
cmps
xchg
out
mov
xchg
xor
and
or
push
jno
mov
mov
adc
xor
sbb
xor
and
cmps
inc
pop
push
push
test
pop
inc
fiadd
jbe
cli
enter
in
je
mov
jl
mov
into
xor
pop
push
pop
xor
inc
out
mov
adc
adc
and
ficom
adc
ss
fidivr
sbb
(bad)
fidivr
dec
outs
fst
push
ins
add
push
data16
inc
retf
dec
push
(bad)
cwde
cmps
or
sbb
jmp
imul
neg
std
rol
mov
out
push
loopne
fs
adc
repz
arpl
imul
push
cmp
or
jae
and
movs
xor
xlat
scas
pusha
mov
in
movs
cmp
test
scas
jge
sub
les
(bad)
stos
jo
add
fimul
jmp
std
lock
shr
xor
sbb
retf
sub
mov
js
pop
mov
iret
jns
aaa
cmps
xchg
sti
mul
(bad)
(bad)
ss
in
imul
mov
and
scas
jecxz
out
sub
cdq
call
test
jb
lods
pop
test
mov
inc
(bad)
xchg
div
adc
add
mov
pop
es
or
xchg
pushf
xchg
pop
mov
sub
push
jge
out
mov
aas
cmps
dec
adc
inc
lahf
in
add
add
mov
jge
add
jbe
hlt
jge
(bad)
xchg
iret
pop
ins
add
nop
dec
cmp
adc
mov
jbe
cld
xchg
outs
gs
cmp
imul
pop
add
out
inc
jae
ins
dec
adc
push
aas
stos
cld
dec
sub
cmp
mov
shl
inc
mov
out
push
in
xor
or
cli
jge
aad
xchg
sub
or
adc
mov
jp
push
mov
xor
ret
(bad)
sbb
cmp
jmp
outs
jo
iret
inc
sub
lods
dec
or
dec
pop
jbe
mov
xor
repz
mov
in
imul
push
fist
stos
mov
cmps
dec
loope
in
sbb
pop
test
cwde
push
retf
ins
dec
out
cs
fmul
cmc
enter
adc
data16
jp
xlat
pop
jg
ror
lea
or
out
pop
jae
repnz
inc
mov
and
inc
sub
fisttp
jge
jle
clc
jae
addr16
shrd
push
(bad)
icebp
or
add
lods
xor
(bad)
fsub
pop
xor
js
jp
je
pushf
mov
nop
sbb
jmp
das
daa
push
push
mov
add
fst
xchg
jg
test
ret
cmp
cmp
(bad)
sbb
mov
adc
in
dec
sbb
enter
pushf
aaa
sbb
dec
test
cmc
retf
mov
aas
push
and
jmp
hlt
and
sbb
xor
mov
jle
sbb
add
cmp
scas
inc
pop
sahf
jmp
push
inc
loop
and
cwde
adc
pop
dec
xchg
adc
cmp
or
sub
and
fcom
cwde
dec
dec
cmp
pop
push
mov
cs
or
fist
repnz
ins
sbb
mov
sbb
jg
icebp
inc
push
cld
dec
add
fwait
cs
jle
aaa
sbb
cmps
sub
out
xchg
mov
add
ss
stc
push
pop
jno
cmp
fnsave
jnp
jno
mov
popa
es
add
stos
or
repz
pop
ss
imul
mov
jmp
pop
(bad)
xor
out
das
jmp
add
xchg
add
push
dec
imul
pop
mov
inc
packsswb
jae
jbe
or
addr16
push
cmp
dec
fidiv
cs
js
cmp
sub
inc
jmp
(bad)
xor
idiv
xor
retf
sbb
mov
aam
(bad)
mov
ret
jle
sbb
xor
jo
cli
xchg
sub
cmc
push
inc
and
push
ficomp
cld
sub
mov
cmp
adc
xchg
pop
and
mov
cmp
ftst
imul
pop
dec
scas
mov
mov
sti
dec
ds
rol
dec
mov
fnstcw
or
enter
stos
jmp
mov
mov
pop
ret
mov
addr16
inc
into
nop
xchg
sbb
xor
lock
and
lods
cmps
jns
sbb
ins
inc
mov
fxtract
jl
adc
and
jmp
repnz
xchg
jno
add
xchg
scas
mov
push
inc
jnp
mov
and
repz
ss
aam
adc
cmp
mov
sbb
mov
dec
and
iret
push
add
jb
arpl
mov
addr16
add
addr16
push
adc
cmps
shr
aam
shr
jl
jmp
aam
add
inc
fwait
(bad)
dec
jecxz
mov
jp
jp
cmps
in
test
out
rcr
or
push
xor
out
mov
xlat
jl
xchg
adc
xchg
loopne
cmc
inc
add
das
stc
iret
add
aam
push
pushf
inc
into
stos
push
jne
loope
mov
(bad)
and
movs
jbe
movs
lds
repz
sub
cmp
ins
fsubr
sahf
lahf
pop
sbb
and
cli
cli
es
push
and
je
test
jb
mov
dec
mov
xchg
test
push
loopne
aad
lods
xchg
call
sbb
call
mov
xchg
in
adc
ret
mov
lahf
fimul
shl
pop
and
mov
test
movs
xchg
fld
je
sub
leave
jecxz
in
push
cmc
cmp
mov
cwde
sub
test
aam
int
cmps
movs
jno
xchg
(bad)
out
fiadd
inc
fidiv
sub
adc
lahf
jp
sub
xor
and
imul
push
inc
sti
sti
scas
and
into
ins
xchg
inc
in
scas
inc
mov
fmul
or
pop
push
and
rcl
sbb
or
fisub
add
gs
sbb
pop
mul
jnp
xchg
ja
clc
jmp
out
aaa
dec
ins
scas
sbb
rcr
sub
addr16
daa
je
or
or
jecxz
nop
mov
sti
mov
pop
push
rcl
rol
retf
sbb
loop
dec
loope
sub
push
push
adc
repz
jge
popf
cmps
aaa
pop
mov
or
mov
ja
jns
pop
pop
and
inc
aaa
xor
adc
add
sbb
push
mov
fist
cmp
popa
push
fwait
stc
xchg
xchg
scas
out
xchg
push
adc
jne
adc
jle
outs
mov
lock
mov
sub
pop
scas
and
cmp
mov
sub
jmp
and
sbb
or
mov
jns
fiadd
pop
lea
movs
fnstenv
nop
int3
push
int3
ja
mov
shr
sar
js
jbe
inc
pop
adc
lods
push
test
and
xchg
mov
ret
dec
int3
and
push
and
lock
test
lods
adc
pop
jg
cli
mov
inc
out
sub
pop
mov
fwait
sbb
mov
mov
in
dec
jnp
pop
mov
outs
mov
sub
(bad)
xor
lock
(bad)
jbe
(bad)
dec
cli
xchg
mov
cmps
pop
xchg
or
mov
xlat
or
mov
and
pop
dec
inc
add
std
push
into
inc
lock
pop
and
sbb
repnz
test
(bad)
mov
or
fs
push
mov
lahf
cli
or
xor
dec
and
(bad)
out
sbb
xor
nop
call
mov
sub
sti
fcmovnu
(bad)
mov
outs
or
mov
(bad)
imul
bound
add
inc
jo
fs
inc
mov
out
dec
jecxz
lahf
dec
lock
jae
pushf
mov
call
adc
xor
in
add
inc
cmps
retf
std
inc
xor
shr
jb
dec
and
ds
scas
xor
xchg
lods
imul
int3
mov
(bad)
repz
pop
jge
addr16
fdiv
out
jecxz
dec
push
jle
sub
jno
(bad)
fld
(bad)
xor
cwde
fld
sub
das
push
daa
cmp
mov
(bad)
mov
lock
pop
jp
test
mov
and
jbe
jmp
movs
das
mov
xchg
fcomip
add
xchg
cwde
or
xor
adc
jne
inc
lods
mov
(bad)
ss
cmp
outs
call
(bad)
shl
mov
lahf
dec
(bad)
aaa
call
adc
test
mov
out
sub
iret
adc
mov
or
push
cmp
or
and
xlat
test
xor
push
xchg
jmp
je
pop
sub
pop
fwait
xchg
pop
sub
pop
ffreep
mov
xchg
jns
sbb
sar
inc
outs
inc
pop
popa
adc
scas
mov
mov
fstp
xchg
and
mov
hlt
daa
pop
inc
aad
push
and
inc
mov
aas
xchg
pop
mov
inc
pop
push
leave
ret
fmulp
fistp
data16
(bad)
lods
mul
xchg
daa
add
fmul
push
and
xchg
mov
int
call
ss
arpl
or
inc
push
adc
loopne
data16
das
es
aam
mov
stos
mov
jmp
pushf
pop
xchg
je
mov
adc
inc
pop
out
dec
icebp
cmp
inc
shl
xor
push
add
fild
cmc
dec
xor
shl
sti
pop
jno
int
cmp
call
lahf
mov
test
sbb
sub
dec
jne
inc
dec
mov
jg
ret
test
fcmovnbe
dec
cmps
mov
jne
adc
repnz
pop
retf
nop
into
inc
idiv
mov
pop
or
iret
xchg
shr
mov
cdq
push
mov
jo
dec
jmp
pop
mov
xchg
sbb
mov
and
imul
mov
int3
jl
daa
mov
pushf
fmul
pop
push
adc
dec
add
adc
aas
pop
and
jp
or
pop
pop
mov
push
push
jae
cwde
mov
popf
xor
lds
add
dec
arpl
add
pop
xchg
add
pop
test
neg
repz
jb
iret
retf
out
test
js
mov
fmul
add
add
rol
dec
shl
push
add
mov
sar
dec
xchg
xchg
xchg
pop
or
cmc
dec
fstp
mov
xor
mov
arpl
jno
jge
mov
xchg
push
ss
mul
push
fidiv
or
or
xchg
mov
ja
cmp
add
xchg
mov
cmps
sbb
js
dec
mov
add
adc
sub
mov
mov
mov
aad
dec
(bad)
in
outs
inc
push
stos
push
enter
mov
push
mov
jae
ds
aam
aad
rcr
sub
push
call
inc
mov
jno
pop
push
inc
dec
nop
(bad)
call
in
std
push
jl
push
(bad)
and
add
push
add
pusha
retf
fwait
cmp
jle
mov
call
push
popa
test
sub
push
or
cld
mov
jb
lods
fcom
and
xchg
inc
add
daa
into
jae
inc
mov
xchg
in
test
or
jo
jg
arpl
or
push
sub
mov
jl
jmp
add
clc
sbb
(bad)
jge
test
cmp
sahf
mov
ret
xchg
xchg
nop
mov
imul
mov
sbb
xchg
jne
jne
in
test
fisubr
mov
cmp
mov
dec
jns
push
inc
(bad)
sbb
xchg
(bad)
imul
cmp
call
aas
mov
jmp
cli
cmp
cdq
xchg
call
jbe
jl
sub
xchg
push
out
xor
(bad)
in
outs
or
add
ret
repz
mov
jne
xchg
(bad)
mov
xchg
inc
push
adc
xchg
(bad)
les
or
mov
ins
xor
sub
stc
fwait
xchg
cmp
jmp
les
les
iret
adc
push
cmp
popf
jnp
mov
xor
arpl
jmp
out
daa
cmovl
adc
pop
inc
test
ror
icebp
(bad)
mov
fbld
into
clc
dec
loopne
xchg
pop
mov
cmps
push
iret
push
jns
dec
aas
jne
mov
imul
shr
fadd
xlat
xor
mov
pop
rcl
xlat
int3
mov
mov
iret
addr16
and
iret
mov
pop
data16
mov
mov
clc
cmc
push
xchg
adc
push
paddw
in
stos
dec
gs
imul
and
pop
sub
cmp
add
add
hlt
out
(bad)
xchg
adc
rol
lock
fcmovu
xor
in
outs
jns
cmp
jl
mov
leave
push
add
mov
je
sub
or
add
scas
imul
out
outs
rcr
adc
adc
addr16
cmp
cmp
jg
adc
pushf
cmps
mov
movs
mov
and
(bad)
cwde
cmp
or
in
mov
mov
out
mov
fistp
jae
movhps
sahf
jp
mov
inc
into
cmc
fcmovu
add
sub
in
push
jg
pop
mov
pop
add
push
bound
jns
fldenv
xor
test
daa
daa
jmp
cmp
jle
dec
or
fcomp
fadd
add
icebp
sbb
js
hlt
and
lock
mov
pop
popf
mov
fs
fwait
pop
mov
nop
outs
push
push
add
loope
push
(bad)
adc
cmc
out
xchg
adc
xor
or
gs
nop
mov
jns
in
push
rcr
les
repz
cs
js
push
cs
adc
inc
call
addr16
hlt
cmps
fidivr
scas
imul
imul
sbb
jno
mov
add
fcomp
pop
ins
adc
adc
(bad)
dec
sub
call
mov
pop
into
xor
mov
jb
mov
xchg
mov
sub
or
cli
mov
mov
rcl
xchg
imul
es
adc
jecxz
pop
adc
iret
fstp
rol
ret
call
mov
sbb
out
and
mov
sbb
or
lods
pop
adc
sbb
mov
sub
push
jle
push
cmps
mov
mov
ins
inc
push
inc
xlat
test
nop
in
jg
shr
push
mov
dec
pop
sub
mov
js
or
jmp
lods
sbb
aas
push
jno
push
cmps
stos
imul
cmp
cwde
clc
xor
mov
jmp
cmp
imul
jb
out
xchg
aam
lds
fcomi
pushf
cld
and
inc
out
jecxz
mov
jge
xchg
lds
lods
dec
cmp
fmul
(bad)
push
inc
cmps
ror
and
xchg
inc
(bad)
loopne
and
inc
std
mov
and
pop
sbb
fs
stos
out
ret
mov
fcomp
jge
jecxz
inc
inc
lods
aaa
jmp
xchg
push
cmps
retf
test
test
pushf
pop
es
lods
jne
call
fucomip
(bad)
in
xchg
std
nop
mov
or
adc
outs
sub
mov
mov
in
dec
pop
(bad)
in
fwait
sbb
xchg
leave
push
imul
out
or
cli
imul
or
xchg
adc
leave
cwde
ja
xor
ss
call
fucom
inc
mov
(bad)
push
pop
jge
repnz
rcr
stc
cs
mov
pushf
dec
in
adc
ins
cmc
mov
cmp
in
inc
sbb
sbb
test
or
push
in
shr
pop
in
inc
pop
dec
sbb
fs
inc
mov
cmp
pop
cmps
fimul
imul
cmps
or
rcl
scas
push
mov
inc
xor
xchg
add
inc
xlat
enter
leave
rcl
xor
xchg
xchg
sbb
shr
call
stos
ror
jno
xchg
cmps
dec
ret
adc
cmps
inc
jno
xchg
xor
sbb
mov
adc
jmp
div
inc
pushf
clc
add
or
rcr
push
rol
lahf
stos
mov
and
retf
push
mov
jnp
xor
pop
or
jns
add
int3
mov
das
jae
into
inc
xor
or
dec
inc
xchg
xor
in
push
mov
mov
push
cmc
(bad)
cmp
jo
cli
fstp
dec
xor
or
ja
ret
mov
fstp
pop
push
gs
xchg
inc
(bad)
pop
dec
add
xchg
cmp
addr16
jns
or
jnp
div
jbe
xchg
cmp
mov
mov
pushf
pop
or
push
scas
popf
mov
pop
shl
pusha
adc
dec
adc
ret
xchg
popa
out
xchg
dec
cmps
jecxz
and
add
call
in
push
xchg
jno
fadd
mov
cmp
movs
test
shl
pop
or
sbb
sbb
adc
adc
jmp
out
stos
clc
(bad)
iret
and
mov
xlat
pop
jl
xchg
mov
das
push
push
std
push
jg
mov
test
icebp
push
aas
or
mov
imul
inc
hlt
out
adc
xchg
pop
(bad)
in
test
xchg
or
imul
shl
loope
sbb
and
jae
sahf
adc
push
inc
je
sti
pop
and
mov
daa
loope
pop
adc
imul
fwait
clc
push
xor
fiadd
add
clc
retf
mov
shr
mov
xchg
jae
ffreep
jecxz
add
lahf
mov
aam
mov
mov
xchg
jae
xlat
add
in
aam
or
movs
lods
xlat
mov
xchg
mov
cmp
clc
dec
adc
lods
stos
out
imul
mov
test
dec
loop
mov
cmp
aam
dec
sub
sti
mov
data16
cs
movs
mul
sub
inc
sub
daa
sbb
jmp
leave
ret
out
pop
mov
sub
(bad)
(bad)
mov
xchg
inc
iret
bound
and
add
cmp
xchg
mov
xor
sti
fdivr
jb
sahf
fwait
jns
test
inc
scas
sahf
cmp
or
cmp
neg
fwait
add
ds
jp
repz
xor
push
xchg
ss
cmps
jp
inc
or
jecxz
mov
test
jp
jnp
imul
mov
mov
xor
rcl
fcmovne
mov
mov
rcr
and
jns
icebp
cmps
cmp
or
push
popa
mov
pushf
jle
pop
hlt
add
mov
mov
pop
sub
dec
add
dec
aad
xor
into
mov
ins
lods
cmp
sub
xchg
mov
ror
mov
repnz
or
mov
mov
dec
mov
stos
push
div
loop
and
inc
rcr
cmp
jp
sar
mov
sbb
imul
cmps
shl
in
mov
cld
jl
cmc
ds
cwde
push
mov
or
test
test
pop
aas
in
mov
(bad)
xor
push
xor
cmp
(bad)
fcmovbe
jmp
pop
jnp
sbb
shl
mov
bswap
imul
mov
adc
inc
call
push
mov
pop
aam
(bad)
popf
jp
mov
sbb
popa
sub
ins
(bad)
ds
pop
mov
rcl
int
adc
push
pusha
(bad)
outs
mov
stos
mov
pop
leave
sbb
push
cmc
add
gs
addr16
push
std
in
sub
popa
shr
xchg
and
sbb
test
xor
mov
popf
dec
out
mov
mov
mov
loope
cmps
jae
(bad)
std
mov
dec
or
jl
daa
aas
stc
repnz
mov
sbb
xor
movs
cmp
(bad)
jmp
jecxz
jp
test
test
sti
les
dec
pusha
mov
xor
inc
adc
and
std
pop
cmp
mov
jle
fist
popa
arpl
jb
mov
add
mov
xlat
cwde
sahf
mov
jns
in
dec
adc
out
adc
mov
sub
out
adc
push
lds
dec
into
pop
lahf
mov
in
pop
mov
inc
mov
ret
xchg
aam
cmp
ds
shl
or
adc
in
ds
sub
cmc
sub
jb
fidivr
clc
(bad)
sub
(bad)
ret
inc
leave
jge
js
iret
add
lahf
rcr
cmp
movs
jmp
stos
xor
call
cdq
sub
std
aad
pusha
or
adc
out
imul
call
or
(bad)
sbb
inc
and
or
and
gs
je
test
fidivr
repz
push
scas
pop
rol
aam
sbb
test
jne
xor
stos
adc
mov
pop
div
aaa
fmul
ret
je
mov
retf
sar
stos
jp
std
ss
push
in
and
sub
daa
ffree
aad
(bad)
mov
and
jae
cli
mov
pop
or
call
stos
fsub
fild
sub
or
fucomp
jle
pop
daa
xchg
call
jp
fwait
je
or
in
in
repz
pop
(bad)
retf
cwde
cli
ret
or
push
stos
mov
add
std
pop
push
xor
out
call
add
fcmovnb
mov
xor
stos
ss
mov
stos
into
and
mov
push
xchg
out
push
js
daa
(bad)
aam
movs
rcl
retf
jnp
bound
lods
add
push
or
push
addr16
cli
outs
or
rcl
(bad)
hlt
clc
popa
gs
ret
out
mov
cmp
outs
sub
(bad)
stc
and
push
inc
push
test
and
pop
test
mov
adc
mov
xor
or
lds
das
xor
cli
dec
mov
sub
mov
cli
in
cmp
mov
xchg
jnp
push
js
imul
inc
rcl
dec
fs
(bad)
mov
scas
mov
xchg
mov
xchg
inc
cmps
xchg
mov
jns
hlt
xor
es
cld
add
imul
stc
xchg
add
out
push
jo
xor
loopne
repz
xor
dec
cs
movs
pop
push
inc
jo
cmp
jp
rcr
sbb
fwait
mov
jecxz
cwde
loope
xchg
fsubr
pop
cli
sbb
jmp
adc
xor
inc
jg
add
imul
aas
mov
or
lea
sar
cmp
(bad)
cmps
sahf
mov
push
cmc
and
jnp
bound
mov
into
fs
cld
in
jne
test
push
mov
and
call
jp
and
xor
loop
jno
cdq
lds
jbe
and
jb
mov
inc
mov
cwde
movs
xor
cmc
or
inc
jbe
dec
(bad)
stc
push
imul
push
ss
ffreep
pop
inc
mov
pushf
push
xor
mov
xchg
ret
push
xchg
mov
and
add
or
cmp
add
iret
cmp
pop
div
repnz
aad
addr16
and
fist
sbb
push
cmps
mov
mov
cmps
jns
mov
push
scas
mul
inc
in
ss
push
out
cwde
push
xlat
leave
mov
cmc
inc
or
pop
push
jg
xchg
push
jmp
(bad)
adc
aam
and
lea
dec
adc
repz
xchg
xchg
sub
pop
mov
adc
sbb
mov
and
dec
(bad)
lahf
enter
fistp
mov
or
in
mov
sbb
mov
(bad)
lods
je
xor
icebp
cmc
ins
mov
xlat
and
imul
xchg
data16
dec
call
xchg
adc
cmps
xchg
pop
repz
mov
or
(bad)
xchg
fsub
dec
les
rcr
add
lods
jae
cmp
(bad)
frstor
and
and
and
inc
pop
pop
adc
push
sti
add
out
add
jecxz
outs
aaa
ins
mov
and
push
inc
repnz
mov
cli
(bad)
call
jbe
xchg
lahf
cmp
invd
push
xchg
mov
(bad)
mov
inc
jmp
jnp
jmp
int3
aam
jecxz
push
call
clc
data16
inc
movs
mov
dec
sbb
int
inc
(bad)
cwde
aad
or
xchg
aad
dec
outs
jo
adc
cmps
xchg
mov
(bad)
sbb
loop
dec
rcr
jl
int
fisub
pop
icebp
test
out
jecxz
movs
sbb
shl
cld
and
out
pop
mov
(bad)
rcl
dec
jns
ins
dec
sub
jge
daa
shr
inc
outs
les
test
jmp
pusha
add
sbb
xchg
adc
cmp
stc
add
fdivr
push
enter
xchg
add
mov
pop
mov
cs
int
xor
mov
adc
cli
push
xchg
sti
jae
xor
pop
out
and
(bad)
lock
mov
push
sbb
shl
jmp
enter
movs
imul
adc
xchg
mov
pushf
mov
xlat
jge
inc
sbb
jbe
test
pusha
ror
fadd
adc
iret
inc
mov
cmp
mov
push
repz
push
mov
hlt
adc
sbb
adc
mov
mov
sub
and
mov
ins
push
test
cmp
xchg
in
mov
ret
aad
jae
stc
jg
and
repz
movs
inc
data16
sbb
jno
mov
pusha
leave
cmp
sbb
in
push
enter
out
mov
pavgb
stos
push
xchg
or
xchg
inc
lods
outs
retf
sub
sbb
sub
push
call
add
stos
xchg
xchg
mov
cmp
je
jle
and
out
test
or
stos
retf
cmp
loopne
rcl
xchg
std
xchg
or
inc
mov
push
push
sti
inc
lahf
in
addr16
jne
outs
mov
fdiv
push
jmp
ret
cmp
jmp
dec
cmp
sub
cmp
jl
rol
out
dec
daa
lea
xchg
scas
jecxz
test
mov
cmp
ds
sahf
mov
popf
pop
(bad)
jnp
mov
ss
aad
adc
jl
xchg
cmp
pop
push
out
adc
adc
stos
pop
and
inc
mov
fistp
or
addr16
jmp
hlt
rol
mov
push
pop
xor
mov
xchg
inc
adc
in
lods
push
imul
mov
inc
jbe
xchg
push
gs
cmp
sbb
jmp
jns
es
retf
aas
xchg
inc
das
or
cld
xor
push
jge
pop
cmp
test
scas
pop
cmp
rcr
sti
adc
repnz
push
inc
pop
pop
stos
inc
xor
cwde
adc
mov
lea
fiadd
dec
nop
add
xchg
addr16
sub
movs
adc
sbb
loop
xor
aaa
cmp
and
(bad)
repz
inc
or
mov
test
mov
pop
fldenv
bsr
lea
addr16
lea
(bad)
fldcw
aas
repnz
sbb
xor
aam
(bad)
data16
daa
mov
or
scas
jb
call
je
fidivr
jle
jmp
xchg
popf
add
xor
pop
xor
push
loope
adc
loopne
push
adc
jmp
add
mov
imul
leave
daa
shr
in
outs
fnstsw
punpckhdq
test
int
fmul
popf
rcr
push
cmp
sub
push
ja
inc
add
adc
mov
cmp
jmp
sbb
ss
inc
xor
(bad)
jbe
test
xchg
push
lahf
popa
mov
not
mov
xlat
sub
xchg
fld
mov
int3
or
lahf
jl
int3
sbb
cwde
sti
mov
in
aaa
sub
scas
cwde
test
inc
jbe
xchg
fsub
xlat
mov
cwde
cmp
and
and
xor
push
add
push
mov
sar
jb
push
mov
jo
push
dec
xchg
pop
push
aad
cmp
fmulp
and
jg
arpl
pusha
nop
or
idiv
cmp
loope
dec
idiv
dec
in
dec
aaa
jg
out
or
mov
or
sub
jmp
mov
movs
xor
ds
cmp
xlat
cli
test
scas
adc
inc
adc
loope
repz
xchg
adc
(bad)
sub
loope
rcl
scas
ror
sbb
enter
push
(bad)
out
xchg
fstp
lea
push
sbb
loope
or
xchg
mov
in
push
inc
pop
shl
shl
push
push
adc
das
stos
adc
add
test
push
pop
push
inc
xor
pop
and
lock
bound
pop
mov
and
pusha
and
xchg
cli
(bad)
jns
bswap
call
and
pusha
adc
ret
enter
xor
mov
je
repnz
push
pop
push
mov
les
inc
aas
or
cmp
es
mov
mov
test
cmp
mov
ins
push
inc
fs
(bad)
pushf
gs
icebp
pop
xor
dec
fsubr
icebp
sbb
(bad)
popf
loopne
in
xor
out
push
into
and
jmp
mov
mov
mov
mov
scas
inc
adc
std
fadd
add
mov
bound
push
fsub
cmp
int
pop
ror
pop
fs
and
mov
xor
pop
mov
adc
sub
idiv
lss
adc
rol
(bad)
mov
shl
add
sub
pop
mov
call
mov
pop
xor
call
sahf
jle
mov
xor
sbb
fldenv
frstpm(287
(bad)
pop
inc
cmp
into
cmp
test
fs
arpl
faddp
repz
inc
leave
neg
mov
jg
xchg
cmc
xchg
jb
mov
sbb
and
or
aad
cmps
movs
rol
adc
and
mov
sub
jp
mov
test
jae
aam
mov
jl
in
ror
lahf
mov
lock
sbb
adc
ds
xor
in
jns
or
cmp
dec
xchg
sub
xchg
retf
pusha
mov
add
fimul
pop
or
sbb
fwait
sbb
lods
lods
jmp
bound
inc
xchg
push
jns
xchg
mov
das
dec
pop
cs
popa
jae
cld
mov
cmps
inc
mov
stos
out
jge
rcl
and
and
into
(bad)
mov
dec
xor
xor
call
cmp
int
xchg
adc
(bad)
push
movs
dec
dec
cli
je
jle
test
das
lds
add
repz
je
mov
inc
xor
jp
sar
or
xchg
mov
xor
or
pop
scas
test
mov
adc
shr
imul
mov
dec
pop
mov
or
xor
loopne
jl
loope
hlt
gs
sub
dec
lock
sbb
ja
mov
std
sbb
jno
stc
mov
mov
into
xchg
mov
mov
addr16
sub
jmp
cld
cmp
cmps
and
in
add
inc
push
imul
mov
fmul
mov
std
sbb
mov
lds
adc
pop
test
popf
or
sub
dec
in
mov
fnstsw
push
loopne
sub
pop
test
into
sub
add
mov
push
and
add
inc
shl
pushf
daa
inc
bound
dec
or
xchg
mov
(bad)
lods
jl
js
in
bound
cmp
lock
int
loop
(bad)
mov
sub
cli
xor
push
mov
push
aaa
in
cmp
xchg
pop
mov
dec
push
mov
dec
lea
inc
rcl
dec
pop
out
sub
pop
inc
cmps
repz
jnp
scas
mov
gs
dec
dec
and
and
(bad)
in
mov
lock
hlt
pusha
cmps
sbb
mov
pop
inc
xor
hlt
pusha
mov
stc
pop
movs
mov
fsub
cs
sbb
cmp
xor
dec
pusha
jle
push
retf
cwde
leave
pop
sbb
mov
sub
loope
push
adc
rol
mov
in
lock
cmp
out
mov
pop
ds
sub
or
jp
sbb
inc
in
sbb
adc
inc
stos
cmp
sub
push
popa
pop
jg
adc
inc
(bad)
(bad)
hlt
xchg
mov
and
aam
sub
adc
cmp
jmp
invd
dec
jle
cmp
sub
js
xchg
jno
push
pop
test
inc
stos
cdq
fisub
inc
loope
ja
hlt
cs
dec
jbe
push
int
addr16
imul
clc
add
xor
sub
sbb
lods
sub
mov
pop
mov
cli
mov
stos
enter
aaa
fwait
xor
push
cmp
mov
inc
fist
and
lock
lods
dec
mov
sub
fwait
call
push
mov
loopne
ins
and
or
mov
jns
push
ss
aam
popf
add
xor
ret
jb
push
lods
and
lahf
out
fmul
add
sbb
push
call
add
ret
aad
push
cs
inc
into
mov
loopne
lods
add
inc
jae
call
add
fdivr
pushf
call
xlat
pop
jmp
jns
jno
retf
(bad)
call
shr
aaa
push
add
sub
xor
popa
mov
xchg
aas
sbb
ja
outs
jae
jo
(bad)
add
push
xor
iret
test
cli
gs
aas
pop
push
pop
mov
xchg
push
int
call
outs
loope
and
test
pop
add
inc
shr
pop
out
sbb
shr
popa
inc
aas
push
mov
jmp
loopne
aam
clc
mov
xchg
into
rcl
mov
sub
fsub
adc
mov
outs
mul
jnp
ss
mov
sbb
out
jnp
int3
repz
out
push
push
aas
pop
cmp
cmp
mov
jg
add
jne
test
push
xor
fdivrp
adc
adc
cmp
and
add
sbb
cs
arpl
jbe
and
inc
mov
sbb
mov
jge
cdq
retf
frndint
jo
lds
mov
xor
into
mov
xchg
(bad)
retf
add
push
push
mov
or
pop
mov
sbb
test
(bad)
(bad)
jns
icebp
popa
mov
xchg
cwde
pop
lods
pop
mov
xor
push
mov
sub
jno
jae
aaa
xchg
rol
retf
push
movs
adc
jp
outs
hlt
mov
add
jb
data16
repnz
sub
leave
xchg
inc
mov
nop
sbb
cmps
dec
das
pop
pusha
(bad)
add
pop
push
inc
or
mov
cmp
inc
sub
push
ror
adc
cli
or
pop
push
movs
mov
mov
mov
das
mov
sti
mov
lods
and
hlt
mov
jp
bound
adc
push
or
ret
call
sbb
adc
cmp
push
daa
cmp
inc
dec
adc
scas
sahf
popa
cdq
add
pop
mov
(bad)
int3
add
xchg
sub
lahf
(bad)
xor
pop
jns
cmp
pop
xlat
add
mov
sbb
mov
sahf
push
push
cmp
stos
jne
out
popa
sbb
or
mov
pusha
cmp
push
mov
pop
repnz
jge
stc
es
sbb
mov
lahf
(bad)
hlt
add
pop
mov
mov
sub
mov
pop
out
cs
jp
xor
(bad)
mov
push
(bad)
mov
(bad)
stc
ins
push
jmp
xchg
cmps
and
ja
(bad)
(bad)
popa
daa
mov
ins
push
xor
mov
outs
sahf
dec
mov
sub
int
arpl
jg
pop
je
fld
xor
push
div
ret
aam
test
test
test
(bad)
xchg
jmp
mov
dec
addr16
mov
adc
leave
(bad)
into
xchg
and
pop
nop
aaa
jecxz
aas
loope
loop
jmp
xor
cs
fwait
or
es
lea
sar
in
retf
int
mov
mov
in
(bad)
out
fisubr
test
sbb
aas
call
mov
inc
dec
cmp
(bad)
pop
call
dec
jae
fucomip
pop
into
jge
jo
add
call
and
push
movs
push
mov
stc
ins
fsub
clc
xor
cmp
xchg
cmp
mov
test
sbb
(bad)
adc
int3
popf
pop
mov
enter
in
mov
inc
or
jg
mov
outs
shl
sar
jecxz
xor
dec
aad
enter
mov
outs
es
jmp
pop
ror
pop
adc
pop
jbe
aas
mov
jp
cs
mov
(bad)
push
push
inc
jbe
mov
jmp
adc
cli
std
cdq
jmp
cdq
xchg
push
pop
add
fisttp
sub
outs
jmp
ret
fistp
mov
and
and
jmp
sbb
stos
mov
inc
inc
(bad)
call
jge
mov
mov
test
outs
pop
pop
jl
or
mov
cmp
dec
sub
mov
push
jns
push
inc
iret
movs
dec
sbb
xor
les
xchg
push
push
ss
fwait
loop
push
dec
mov
push
(bad)
inc
add
hlt
cmp
jecxz
in
sub
shl
ret
scas
xor
imul
pop
dec
dec
mov
outs
mov
xchg
pusha
push
(bad)
push
aad
jg
xchg
jecxz
pop
add
cs
bound
shl
mov
mov
call
cmps
test
dec
mov
mov
dec
sbb
mov
dec
pop
das
sti
or
or
xchg
mov
inc
inc
pop
jmp
scas
stc
loopne
(bad)
ret
out
push
(bad)
rol
test
in
retf
loope
pop
dec
out
push
pop
inc
or
sbb
test
mov
popa
cmp
mov
sbb
push
stos
fwait
cmp
imul
ficomp
xchg
inc
dec
repz
dec
mov
(bad)
sub
sbb
push
fmul
iret
jecxz
jo
pop
jae
jle
ja
(bad)
in
dec
(bad)
rcl
add
xor
push
ja
mov
mov
imul
add
inc
in
xchg
mov
retf
mov
sub
mov
and
sbb
ret
mov
ss
out
rol
mov
jbe
(bad)
call
inc
push
jb
movs
push
xchg
pop
das
mov
neg
retf
inc
clc
ds
dec
inc
fwait
xchg
sub
fild
rcr
sbb
pop
or
scas
xchg
test
mov
mov
mov
ins
adc
je
js
push
dec
adc
aas
jae
xchg
jns
adc
bound
es
das
jb
xor
call
pop
aad
and
jecxz
outs
retf
pop
das
or
add
inc
or
fdivr
rcl
xchg
mov
mov
into
cmps
jb
call
jb
mov
fs
(bad)
mov
aas
jmp
add
xchg
fst
xor
sbb
mov
mov
das
or
stos
fidivr
stos
cs
add
jecxz
pop
stos
sti
add
lods
inc
sub
cld
dec
cmp
cmps
xor
push
pushf
rcr
mov
es
jl
mov
jg
add
in
call
out
(bad)
pusha
stc
xchg
shl
inc
rol
int3
and
shr
cdq
inc
xchg
add
repz
pop
lods
push
gs
fidivr
dec
ja
pushf
jg
scas
cmp
push
inc
and
fs
stc
mov
sbb
fist
out
retf
push
fld
in
push
shl
sub
mov
ret
sub
fld
xchg
sbb
out
pop
xor
mov
add
sbb
and
pop
jae
aad
outs
push
adc
cmp
(bad)
stos
cmp
sub
or
pop
push
test
test
mov
fsubr
stos
lds
mov
add
nop
in
mov
inc
xor
xchg
jae
(bad)
jnp
xchg
sahf
or
gs
jmp
mov
mov
call
mov
fisttp
mov
out
out
xchg
and
dec
inc
dec
mov
push
cwde
cs
pop
pop
jbe
xchg
mov
ins
retf
or
cmp
or
mov
mov
fld
xchg
add
push
imul
push
lods
es
sub
sub
rcl
add
inc
test
xor
xor
xchg
xchg
add
out
outs
dec
out
mov
or
push
xchg
mov
jg
(bad)
jge
imul
js
pop
and
xor
xor
outs
test
fisttp
adc
xchg
dec
int3
shl
or
xlat
icebp
int
retf
in
inc
scas
fiadd
das
xchg
adc
out
xchg
lea
push
sti
mov
and
mov
in
add
sub
nop
xchg
push
jno
mov
mov
popa
sub
addr16
inc
stos
sbb
inc
movs
enter
xchg
dec
ret
clc
mov
gs
pushf
fistp
pusha
sahf
arpl
aad
sahf
ret
(bad)
cmp
mov
push
aad
pop
add
stc
inc
dec
iret
sbb
ss
xor
sbb
dec
or
das
out
cli
xchg
pop
ins
retf
ds
retf
fcomp
adc
add
xchg
xor
mov
out
call
adc
or
das
and
jo
loop
mov
imul
inc
and
mov
mov
push
scas
mov
mov
out
sbb
jp
fdivr
fs
(bad)
stc
mov
xchg
aad
ret
jb
or
mov
cmp
dec
mov
imul
push
inc
imul
fmul
mov
(bad)
or
push
icebp
push
jg
mov
aas
mov
mov
xor
scas
mov
jae
stos
sbb
outs
push
adc
push
push
test
mul
xchg
ins
loop
cdq
inc
mov
outs
cmp
out
aas
jg
lock
les
inc
and
xor
push
loop
and
sar
repnz
jmp
mov
ins
fld
(bad)
retf
les
jp
out
cwde
leave
mov
scas
js
xor
jle
push
and
mov
push
jmp
loope
out
mov
sbb
(bad)
mov
sub
mov
jne
jo
jnp
(bad)
or
inc
jnp
stc
mov
pop
test
mov
jno
test
adc
pop
or
dec
out
ja
xchg
and
add
cmps
in
mov
cwde
or
xchg
rcr
icebp
(bad)
cmp
iret
outs
ds
jp
mov
outs
out
out
scas
es
cmp
add
test
inc
js
mov
pop
mov
repnz
sahf
test
mov
sbb
pop
sub
adc
xchg
push
stc
xor
sti
stos
inc
pop
adc
mov
out
pop
dec
(bad)
fsubr
dec
adc
mov
and
and
test
aam
ins
push
cmp
scas
cmp
inc
jecxz
outs
into
(bad)
fdivr
cdq
out
ins
pop
pslld
outs
xchg
rcl
adc
jmp
jecxz
inc
leave
jge
push
ret
mov
or
and
les
(bad)
pop
push
push
cli
icebp
mov
push
shr
fistp
dec
xor
pop
ror
mov
shl
jo
adc
push
ss
loop
popf
sub
dec
lahf
dec
jl
or
jmp
inc
pop
adc
xchg
fisttp
imul
xor
cmp
or
jae
test
retf
outs
inc
popf
aam
test
test
pusha
inc
stos
mov
jnp
int3
jae
jecxz
imul
mov
movs
push
test
xchg
retf
jbe
mov
mov
sbb
mov
int3
adc
loope
xchg
and
xchg
scas
mov
jne
pop
rcl
enter
cmp
add
push
ret
or
movs
sub
xchg
cmp
repnz
inc
call
outs
pop
cmp
push
daa
stc
mov
push
jmp
and
push
pusha
out
adc
dec
iret
std
aas
push
sub
loope
int
lods
push
and
scas
fldcw
add
mov
sbb
cmp
gs
xchg
inc
outs
hlt
popf
add
xor
les
cdq
or
mov
xchg
mov
data16
pop
sbb
cmp
jae
rcl
jo
sbb
adc
inc
xchg
pop
mov
jge
ret
sub
mov
sbb
inc
mov
or
pop
out
lock
xlat
fwait
push
xchg
popa
not
imul
pop
sub
das
out
call
cmc
jno
and
inc
es
shl
xchg
arpl
and
sbb
dec
jbe
jnp
jle
inc
sub
ret
and
push
mov
and
cli
(bad)
cwde
repz
push
jmp
xchg
cmp
dec
sbb
outs
aas
loop
jne
jae
cmp
movs
and
inc
aad
ret
mov
jae
test
and
movs
dec
push
cmovo
mul
pop
imul
and
dec
imul
mov
pop
(bad)
repz
pop
rol
mov
mov
lea
xchg
cmps
xchg
ret
mov
das
jge
(bad)
repnz
shl
sbb
mov
fwait
inc
aas
pusha
push
adc
cmc
nop
xchg
add
dec
or
xor
mov
push
sub
mov
sbb
mov
and
(bad)
dec
fsub
ins
sub
pusha
mov
dec
push
and
xchg
adc
js
fwait
imul
mov
jmp
mov
xor
jecxz
gs
outs
(bad)
(bad)
xor
adc
test
lds
push
mov
xchg
or
and
shl
push
inc
inc
shr
mov
push
ret
pop
in
movs
cmp
mov
xor
mov
push
push
jp
add
ja
or
ins
sub
pop
out
packuswb
out
(bad)
cld
or
add
retf
(bad)
cmp
aas
adc
push
wbinvd
adc
aaa
xor
adc
jbe
cmps
lods
xor
ror
ja
mov
fnstcw
pop
gs
push
ja
jg
mov
cmp
pop
shl
lea
ins
(bad)
cmp
mov
movs
mov
retf
sub
inc
cmp
cmp
mov
jae
sbb
scas
xor
sub
dec
jb
bound
fimul
push
je
xor
xchg
xor
repnz
push
push
mov
fsub
(bad)
pop
test
je
sbb
jnp
pushaw
adc
fmul
lods
and
and
fs
out
mov
inc
jne
ds
inc
dec
test
cwde
mov
jle
fbld
dec
pop
ret
jnp
mov
inc
cld
mov
push
jge
cmp
hlt
aad
pop
mov
jne
mov
loopne
push
xor
out
xchg
cwde
sub
out
xor
test
add
dec
dec
push
mov
inc
pusha
je
sbb
push
cwde
sub
mov
pop
movs
cmp
scas
xor
cld
jo
test
mov
add
add
xor
(bad)
fmul
xchg
in
loop
ret
out
shl
push
test
mov
sbb
inc
adc
sbb
retf
push
push
sbb
ror
nop
push
mov
nop
lea
xor
call
(bad)
jl
adc
aad
add
das
mov
inc
mov
aas
sbb
jbe
cmc
in
inc
mov
into
or
pop
cdq
pushf
rcl
push
jbe
xlat
cmps
fdiv
mov
cs
(bad)
xor
push
neg
cld
test
(bad)
cmp
mov
mov
inc
mov
jmp
ins
int
jbe
inc
ja
cli
(bad)
mov
mov
aam
clc
outs
dec
stos
stos
cmp
and
call
lods
inc
mov
in
inc
mov
test
call
xor
sbb
inc
cmp
mov
daa
mov
push
ds
leave
ret
(bad)
pop
repnz
int3
(bad)
ins
outs
sub
or
int
inc
ret
sub
fidiv
add
clc
movs
and
and
mov
shl
cmp
and
call
xor
cli
pop
dec
fs
arpl
and
jb
cmps
pmaddwd
js
sar
dec
jnp
loope
push
jmp
push
pop
daa
es
dec
jns
jno
inc
push
xchg
mov
shl
inc
rcl
movs
sbb
movs
push
shr
(bad)
call
xchg
pop
xchg
xlat
lds
and
das
mov
adc
pop
mov
xchg
or
mov
scas
xchg
or
mov
sub
xchg
or
outs
xchg
(bad)
loopne
stos
pop
dec
int3
lahf
mov
mov
xor
bound
add
or
jmp
ds
adc
jbe
vmovntps
out
es
pop
mov
lods
daa
inc
xchg
ret
jg
lods
movs
test
pop
adc
jecxz
jno
(bad)
nop
push
arpl
movs
push
pop
sahf
gs
fisub
hlt
push
xchg
shl
inc
sub
cmp
mov
sub
add
test
sti
call
mov
frstor
sbb
ins
inc
jns
ins
inc
pop
sbb
pop
test
pop
cld
imul
push
popa
jno
jl
dec
fist
(bad)
or
xor
jns
pop
mov
mov
cmp
adc
pop
out
cmc
int3
mov
loope
adc
mov
mov
aam
sbb
inc
(bad)
pop
xor
lods
shl
push
repnz
shr
mov
or
or
dec
mov
add
or
aam
or
ds
adc
adc
fs
(bad)
pop
movs
push
ret
or
lea
dec
mov
les
setbe
cmp
adc
jl
call
mov
adc
jp
ss
push
sti
je
lods
push
pop
cmps
or
adc
repnz
jge
fs
pop
pop
jmp
arpl
call
stc
push
pop
mov
enter
or
cmp
jg
dec
in
cmp
daa
push
or
loope
push
stc
(bad)
gs
in
push
repz
cwde
cmp
mov
sub
inc
xchg
xor
cld
popf
xor
psrld
mov
and
sub
push
nop
push
out
ja
pushf
icebp
sbb
and
jnp
and
adc
ja
jge
mov
pushf
lods
mov
shr
cmp
pop
test
lds
mov
cmp
jge
push
pop
es
mov
fidivr
sub
retf
fdivrp
jo
xor
mov
stos
scas
lahf
cmp
add
cmp
cmps
mov
jge
mov
dec
mul
mov
xchg
or
sub
icebp
test
dec
pop
lods
cmps
dec
gs
adc
arpl
sbb
mov
and
daa
sbb
and
dec
test
push
jecxz
adc
or
add
nop
cld
inc
add
or
in
(bad)
dec
jb
and
dec
stos
outs
test
je
out
add
pop
(bad)
jmp
jmp
(bad)
jmp
xor
dec
jae
sub
inc
inc
add
xchg
mov
div
xchg
xchg
int3
xchg
popa
jp
mov
jnp
fild
(bad)
mul
jo
sub
xchg
fsubr
pop
pop
das
mov
inc
das
cdq
test
push
inc
pop
fnstcw
push
fsubr
out
cli
jne
popf
movs
xchg
in
xchg
xor
stc
das
and
in
pop
mov
addr16
inc
test
dec
adc
stos
(bad)
push
rep
lock
xchg
movs
int
imul
pop
popa
jmp
shl
mov
retf
loop
cmp
xor
pusha
aam
push
pop
cli
dec
mov
out
add
and
push
pop
fldcw
stos
jmp
lea
cmps
sub
inc
enter
(bad)
xchg
or
pop
xchg
mov
rcr
int3
aaa
jbe
mov
inc
mov
daa
ds
outs
int
mov
dec
test
inc
mov
pcmpeqb
test
inc
pop
adc
pop
enter
fucom
sub
mov
in
in
xor
shr
xor
sbb
cmp
or
xor
sub
test
stos
pushw
push
jb
xor
shl
inc
mov
mov
cmc
inc
mov
sub
push
sbb
cld
lock
test
adc
enter
imul
sahf
adc
lea
inc
jmp
xchg
mov
jns
hlt
fisub
retf
add
mov
and
pushf
xchg
dec
add
pop
leave
jle
fdiv
jmp
popf
aam
sahf
cmps
ret
stos
mov
lods
ds
dec
mov
sub
js
cmp
or
movs
rol
mov
jle
pop
push
ror
loope
push
push
cwde
into
mov
icebp
jg
jae
push
mov
push
mov
mov
cmovno
add
icebp
mov
stos
sbb
int3
cdq
inc
out
xchg
clc
xchg
xchg
sbb
ss
(bad)
push
dec
movaps
inc
jae
movs
test
in
fwait
aaa
and
push
push
jmp
fiadd
xchg
pop
jl
popa
jp
jmp
push
xor
adc
inc
loope
ret
sar
inc
sti
lock
or
adc
mov
cwde
jb
push
or
and
jns
mov
mov
adc
or
(bad)
xchg
cli
repz
(bad)
mov
pop
bound
sbb
add
arpl
mov
repz
cmc
addr16
rcl
cmp
mov
iret
loopne
int
fild
adc
jb
popf
sub
repz
mov
leave
(bad)
call
sbb
ret
inc
out
pop
ret
fimul
ffreep
adc
mov
xor
push
pop
jp
je
mov
lahf
push
mul
mov
into
sahf
scas
pop
push
fwait
outs
cmp
or
mov
lods
std
jle
mov
or
icebp
(bad)
mov
call
mov
add
dec
(bad)
and
cmps
test
les
enter
sbb
jae
pop
sbb
fs
in
scas
fxch
mov
sub
call
sbb
psubw
ins
dec
dec
add
mov
mov
sbb
xor
inc
xchg
add
rep
jns
push
jge
inc
add
icebp
cld
pop
sub
aad
int
jp
(bad)
mov
xor
sbb
jbe
fild
pop
add
ror
movs
jmp
fsubr
call
pushf
inc
(bad)
fcomp
add
into
sub
imul
dec
xor
add
lock
xchg
xchg
jmp
or
aam
ror
(bad)
and
cmp
cmp
push
mov
mov
dec
mov
in
repz
retf
adc
cwde
cli
sahf
lock
dec
jb
mov
push
or
cmp
cld
and
dec
xchg
lock
cld
push
mov
mov
xor
sub
add
push
sub
les
(bad)
fldcw
pop
out
lods
stc
test
loop
or
call
bsr
arpl
shl
dec
scas
xor
pop
inc
xor
sbb
mov
dec
mov
aaa
inc
jp
movs
test
rcl
pop
and
mov
repnz
mul
jnp
std
nop
or
push
dec
mov
rcl
(bad)
out
fidiv
clc
mov
in
dec
adc
and
pop
and
pop
sbb
pop
dec
jno
(bad)
xchg
jbe
or
jmp
xor
daa
and
xchg
jmp
fisubr
ja
pop
adc
mov
xor
ret
cs
jp
movs
loopne
rcr
sub
pop
dec
outs
and
push
or
dec
rcl
ins
aad
dec
test
clc
sub
pop
aad
sub
out
xor
ror
or
adc
js
sub
adc
fsubr
dec
inc
pop
mov
push
sar
mov
pop
(bad)
or
mov
cld
lea
loop
mov
mov
mov
sub
in
or
fcmovb
scas
test
fld
mov
or
cwde
out
sbb
sbb
sub
nop
or
mov
add
aad
imul
mov
dec
aad
or
jmp
icebp
add
xor
push
dec
in
fldcw
mov
push
pusha
fs
mov
shl
scas
xchg
loop
enter
push
sbb
push
nop
mov
fsubr
out
pop
add
inc
inc
jl
xchg
push
stos
sub
sub
outs
mov
jo
arpl
adc
imul
icebp
(bad)
movs
add
inc
mov
cmp
imul
cmc
cmpps
lock
and
lods
clc
sar
cdq
sbb
push
sbb
dec
adc
xor
enter
ss
addr16
scas
jne
add
rol
dec
(bad)
cmps
fcomp
adc
xor
and
sub
push
push
jno
xlat
cmps
retf
cld
inc
scas
int
pop
mov
jp
push
outs
or
in
jg
sbb
out
sbb
dec
movs
hlt
arpl
out
arpl
ror
ret
jge
fstp
test
jecxz
mov
xor
sub
mov
aam
xchg
inc
push
mov
add
mov
hlt
nop
sub
test
xor
iret
(bad)
cmp
sub
mov
sbb
sub
stc
ins
lea
dec
in
mov
dec
retf
dec
lock
pop
mov
je
mov
mov
inc
mov
div
(bad)
and
push
pop
jmp
mov
adc
inc
mov
mov
xchg
nop
(bad)
jecxz
mov
movs
pop
adc
jle
sub
jno
mov
or
sti
cmp
outs
jnp
mov
outs
test
inc
pop
pop
ss
and
retf
xchg
jno
xchg
pop
(bad)
mov
sti
mov
iret
add
aaa
push
repz
push
sar
add
pop
out
sub
mov
ficom
movs
stos
adc
stos
das
jp
fcom
mov
js
mov
xchg
sub
cwde
dec
jp
rol
push
in
mov
xor
outs
scas
loop
xchg
or
(bad)
loopne
push
mov
into
mov
mov
in
rcr
loopne
stos
jo
mov
stos
pop
sub
cmps
movs
dec
clc
push
out
mov
sbb
popf
cli
loop
xchg
enter
ins
loop
mov
sahf
call
ficom
es
test
sbb
or
popa
mov
pop
xchg
ret
adc
(bad)
jo
aad
bound
(bad)
dec
add
pushf
and
mov
cli
mov
lahf
add
in
sbb
lods
popa
or
mov
inc
jae
daa
xchg
ror
sbb
shl
test
inc
mov
dec
and
and
inc
imul
inc
lods
lods
leave
aaa
jno
xor
cmp
pop
das
daa
sub
push
stc
pop
ret
or
or
cmp
ror
inc
ret
jo
sbb
in
shl
addr16
ss
(bad)
jp
push
mov
out
cmp
xor
mov
inc
push
nop
xchg
lahf
call
(bad)
dec
mov
mul
repnz
das
jge
lods
out
push
mov
jp
sbb
movs
repz
hlt
gs
cmp
in
pop
mov
sub
xchg
repz
je
pop
retf
ins
jmp
jp
mov
fadd
sti
or
cld
std
add
fdiv
inc
sbb
or
push
inc
jno
mov
or
cmps
(bad)
lds
cli
dec
mov
out
and
ds
sbb
jg
fstp
inc
or
adc
mov
movs
mov
js
arpl
xchg
adc
into
jmp
sbb
jmp
hlt
xchg
or
out
add
dec
pop
mov
dec
cmp
ds
xchg
icebp
fimul
jge
cmps
mov
sbb
sti
push
and
lea
fwait
pop
sbb
jno
shl
or
sbb
or
shr
imul
mov
jge
jb
fnsave
icebp
movsx
add
call
pop
xchg
dec
mov
test
mov
push
jns
cs
out
lahf
push
pop
cmp
(bad)
iret
cld
push
cmc
pushf
or
(bad)
sar
jne
stos
cmp
and
pop
clc
pop
add
ret
jns
gs
lock
mov
ins
fwait
test
popa
stc
inc
mov
cmp
push
aaa
sbb
mov
test
lods
mov
stc
xchg
mov
pop
cwde
mov
out
repnz
sub
pop
inc
mov
ins
lock
xor
jne
mov
xor
daa
push
fldenv
sbb
inc
pop
rcr
pop
add
sub
push
out
adc
mov
ss
es
inc
loope
pop
loope
jmp
in
and
jo
inc
add
imul
xor
push
jle
aad
pushf
addr16
pop
push
cmp
sar
test
idiv
js
xchg
push
(bad)
bound
xchg
inc
pop
jbe
js
adc
leave
int3
dec
lods
inc
je
lock
jb
(bad)
adc
mov
fldenv
sti
fadd
inc
mov
dec
and
adc
cli
xor
addr16
je
xor
mov
(bad)
jno
pop
clc
stos
out
jnp
xchg
pop
mov
adc
test
xor
inc
stos
inc
and
push
scas
pop
and
cmps
xor
movs
xor
mov
adc
stc
movs
add
test
dec
lahf
popf
jbe
arpl
outs
pop
ret
das
outs
imul
out
cdq
stos
fs
mov
xor
mov
pop
jmp
js
adc
mov
mov
sbb
stos
imul
jp
call
dec
jnp
jmp
sub
sbb
cmp
cld
mov
cmp
mov
lock
jb
into
cs
lock
mov
xor
add
or
cmp
inc
dec
jne
pop
sub
cmp
neg
aaa
jns
jno
out
repnz
jmp
ins
jl
out
ins
leave
stos
div
inc
jmp
add
adc
pop
pop
dec
mov
xchg
jmp
in
pop
pop
movs
outs
sub
test
pop
cwde
ins
or
int
jns
push
jg
fwait
inc
icebp
aas
leave
or
xlat
add
mov
mov
pop
push
lock
push
ins
out
dec
push
cs
push
jns
cmps
or
(bad)
push
rcl
lea
in
cmp
iret
push
cmp
push
jmp
sub
adc
or
aaa
clc
js
mov
test
popa
call
jle
in
cmp
jo
adc
lahf
mov
ret
lea
jmp
pop
out
inc
scas
fwait
jo
xchg
cmp
jp
dec
(bad)
repz
cdq
sub
leave
mov
jae
ins
mov
jns
aaa
dec
push
div
push
cmp
iret
popa
lahf
xlat
xchg
push
mov
out
jbe
sti
loop
test
call
jg
stos
pop
loope
cmp
adc
and
js
mov
rol
xchg
xchg
repnz
nop
mov
lods
mov
mov
test
fcomp
mov
pop
dec
scas
out
adc
inc
popf
and
mov
fcmovnb
cli
imul
imul
inc
clc
fiadd
out
test
fstp
in
sub
or
mov
rol
jns
lods
addr16
in
stos
jb
jg
push
jp
ret
(bad)
fcom
in
adc
mov
jnp
mov
dec
fs
clc
into
cmp
retf
mov
(bad)
fs
sbb
leave
arpl
and
js
jmp
push
shl
in
add
xlat
inc
fdiv
shl
call
push
jns
xor
ds
cmp
test
test
sub
lock
xchg
xor
loopne
xor
sub
sahf
mov
and
adc
call
push
sub
jle
scas
adc
mov
cmp
push
and
sub
pusha
(bad)
fwait
push
add
pop
repz
lods
pop
(bad)
movs
fucomi
and
adc
shl
push
sub
aad
mov
scas
iret
imul
jmp
and
adc
xchg
mov
arpl
idiv
shl
dec
add
sbb
cmp
stos
out
js
mov
or
out
ja
sbb
xchg
jo
fucomip
jno
rol
adc
cmp
daa
mov
jmp
mov
dec
inc
adc
xor
fidiv
sahf
leave
out
les
jmp
xor
outs
je
xor
jmp
mov
xor
add
fisttp
cmp
aas
aam
sbb
xchg
popa
pop
xchg
push
or
test
sar
rol
ror
push
cld
and
sahf
mov
mov
cld
xor
stos
rcl
(bad)
repnz
push
out
sub
pop
inc
inc
out
xor
cwde
dec
push
arpl
std
call
cmp
push
mov
(bad)
in
sbb
mov
stos
inc
push
mov
or
fwait
sbb
or
and
arpl
mov
or
ss
(bad)
outs
daa
pop
cld
inc
test
int3
and
cld
and
daa
int
shl
ins
aam
leave
pop
sub
sbb
pushf
lea
and
mov
mov
jle
dec
inc
pop
or
inc
mov
mov
and
repz
mov
cdq
shl
and
ficom
rol
data16
jge
mov
ins
adc
aas
ficom
xor
cmc
add
dec
pop
sti
xchg
mov
fs
leave
dec
dec
pop
xchg
mov
adc
ror
test
lea
inc
stos
imul
loopne
mov
inc
xor
jns
sbb
lahf
pop
dec
mov
daa
stos
popa
mov
mov
and
jae
mov
outs
dec
or
jbe
data16
mov
out
aad
add
loopne
cs
jae
xor
loope
shl
outs
out
bound
lea
push
cs
push
lods
push
xchg
icebp
xchg
sti
dec
scas
ja
jg
and
cmp
dec
lock
out
adc
pop
pop
repnz
sbb
xchg
(bad)
out
xchg
aam
sub
pop
fmul
movs
jae
xor
jl
adc
xor
or
inc
iret
push
xchg
adc
or
ds
mov
pop
out
in
not
mov
or
sub
test
pushf
mov
mov
retf
(bad)
cmp
add
jnp
dec
xchg
sar
int3
push
add
inc
call
xor
mov
inc
or
mov
pop
sbb
out
and
and
sub
stc
rcl
scas
jae
sub
cs
and
leave
cmp
dec
mov
push
sub
cmps
out
outs
jae
mov
add
loop
xchg
test
lods
mov
js
mov
jae
fist
out
nop
pop
hlt
addr16
inc
cmp
shl
mov
pusha
push
shr
push
mov
dec
clc
adc
(bad)
retf
lds
jmp
mov
push
sbb
leave
fstp
jg
sub
leave
xchg
call
pop
sar
sbb
fadd
inc
pcmpgtb
mov
or
(bad)
stos
mov
cmp
inc
mov
shl
push
xchg
mov
aad
(bad)
in
push
or
add
jno
cmc
or
mov
or
sub
sahf
repz
fwait
jne
fld
icebp
dec
mov
mov
out
rcl
dec
in
sbb
add
outs
dec
in
cld
push
retf
icebp
std
mov
or
out
psrlq
popa
jmp
movs
xlat
sbb
aas
jecxz
popf
call
fcomp
inc
sbb
enter
add
push
bound
mov
imul
test
mov
pop
xchg
push
out
inc
in
(bad)
xchg
jae
out
xor
or
pusha
adc
jmp
fwait
ror
push
dec
cmps
scas
pop
xor
push
xor
pop
in
test
mov
outs
xor
das
cs
rol
rcr
fild
fstp
fist
sub
adc
jp
jmp
pop
mov
or
mov
xchg
(bad)
sub
mov
(bad)
xor
imul
and
fadd
xor
mov
aaa
inc
mov
and
les
cdq
sub
sbb
les
cwde
and
or
loopne
mov
push
test
xor
adc
in
mov
adc
gs
dec
jmp
fs
jb
sub
adc
sub
inc
lods
jmp
outs
dec
cmp
adc
js
xor
dec
retf
sub
mov
jl
aas
call
jae
out
and
outs
int
clc
xor
jae
push
je
push
pop
jge
(bad)
mov
imul
jns
xor
add
test
push
cmp
(bad)
mov
add
dec
mov
stc
mov
dec
mov
push
pusha
adc
sbb
mov
in
xor
inc
ins
add
shl
mov
cdq
ror
sti
ret
pop
repnz
ss
cwde
shl
jne
adc
lea
push
aas
push
push
(bad)
fsubr
and
xor
pop
neg
fisttp
xchg
cmp
jp
mul
stos
adc
xor
retf
cmc
push
adc
mov
nop
cs
pop
add
push
neg
jmp
cld
push
mov
test
add
mov
xchg
es
or
das
and
gs
stos
jb
or
scas
mov
xchg
leave
add
jb
iret
mov
push
sbb
or
sub
sub
js
push
ror
cmc
pop
aaa
shl
fiadd
push
inc
(bad)
movs
cmc
jp
inc
(bad)
pop
cdq
lea
or
mov
ins
mov
arpl
mov
mov
test
repz
dec
dec
cmp
mov
js
out
not
call
shl
xchg
mov
scas
or
mov
dec
push
inc
imul
dec
adc
xchg
xor
test
mov
mov
iret
jmp
adc
mov
movs
fxch
int3
mov
fst
dec
leave
jo
dec
xchg
dec
(bad)
fistp
inc
ss
iret
repnz
test
scas
fcom
imul
cmp
scas
daa
(bad)
sub
cmp
frstor
in
sub
add
leave
adc
adc
xor
std
rcl
iret
push
rcr
pop
pop
fisttp
pop
push
jmp
add
push
xchg
jge
pushf
popa
cdq
sub
adc
into
pop
cmps
mov
sbb
dec
jge
aaa
rcr
and
dec
jb
ins
cs
stc
fisubr
xchg
pop
arpl
(bad)
sub
ror
call
fsubr
sub
iret
add
js
xchg
sbb
(bad)
repz
in
push
ins
test
leave
sbb
arpl
adc
push
clc
push
ret
addr16
cmp
(bad)
dec
jae
pop
(bad)
test
popf
adc
test
mov
sub
jbe
ud1
ficom
pop
xchg
sti
push
xchg
and
mov
or
xor
mov
sub
push
hlt
cs
sub
rdmsr
(bad)
mov
repz
(bad)
std
and
das
adc
pop
jns
and
sub
cmc
push
mov
lds
int
dec
and
push
sub
pop
fistp
mov
xor
cmp
add
mov
fdiv
sub
sti
pop
scas
sbb
mov
push
shl
inc
test
and
mov
out
sbb
jge
aad
stos
or
iret
mov
in
lahf
cmp
(bad)
xchg
inc
inc
xor
in
scas
imul
jmp
cs
stos
fdiv
inc
fs
mov
mov
or
fstp
jno
iret
jo
inc
ficomp
ins
dec
or
and
loope
xchg
xor
jp
sub
sub
in
(bad)
stc
mov
fidiv
xchg
in
ins
sub
daa
pop
xor
in
pop
loopne
jecxz
std
jbe
push
jg
clc
sub
pop
xor
(bad)
xor
or
mov
repz
mov
xchg
mul
in
add
cmp
bound
inc
pcmpeqd
jmp
inc
add
and
inc
movs
(bad)
adc
ja
add
std
mov
mov
(bad)
repnz
test
sbb
sub
int
jmp
sbb
dec
aam
sbb
in
sub
jb
movs
adc
imul
mov
push
dec
loopne
push
lea
fimul
leave
jne
push
xchg
mov
stc
test
add
jle
scas
adc
mov
jbe
and
mov
pushf
jle
test
test
mov
pushf
aad
jl
mov
(bad)
mov
mov
push
push
xchg
lock
dec
cmp
xchg
retf
xor
add
and
push
(bad)
mov
lahf
call
dec
or
lds
adc
fs
repz
(bad)
lds
and
pop
movs
fistp
mov
jnp
mov
or
jo
mov
stc
and
pop
je
test
cli
jns
jmp
inc
mov
aad
pop
jle
and
and
jnp
sbb
dec
test
dec
ret
cdq
mov
sub
push
(bad)
popf
jle
mov
out
mov
adc
mov
arpl
ins
add
push
push
jge
fwait
shr
push
imul
ins
sbb
mov
repnz
in
or
cdq
popf
pop
push
ds
inc
lock
scas
in
(bad)
fcomip
ins
mov
jns
shl
jae
or
push
adc
push
add
cs
repnz
adc
shl
dec
pop
cmp
cmp
add
add
movs
sub
push
jne
jle
adc
push
mov
(bad)
and
jnp
mov
imul
xor
repnz
mov
out
fs
inc
add
inc
jnp
int3
jmp
jne
pop
jae
jl
cmp
std
std
pop
dec
aam
stos
out
leave
call
(bad)
jmp
imul
mov
add
dec
cmp
add
cdq
gs
jecxz
push
xor
mov
(bad)
xor
ret
jo
lahf
sub
xor
jae
sbb
add
jno
sub
loop
(bad)
imul
jle
pavgw
jl
mov
and
mov
aas
mov
cdq
scas
scas
sbb
outs
adc
hlt
mov
sub
adc
inc
mov
add
adc
push
xor
cmc
sbb
call
mov
mov
and
mov
fdivp
mov
sub
pop
loopne
add
sub
or
das
out
in
sub
mov
xchg
idiv
jecxz
or
js
mov
xchg
cmp
sbb
xchg
push
dec
sbb
inc
movs
iret
mov
inc
popf
xor
cmc
stc
outs
aad
jnp
(bad)
int3
mov
icebp
loope
fs
sbb
push
or
dec
cmps
mov
add
jae
mov
mov
enter
call
mov
add
test
and
in
jecxz
xor
(bad)
(bad)
push
jae
in
lods
loop
add
cmp
sbb
repz
or
(bad)
js
out
enter
shr
mov
mov
push
inc
xchg
mov
xchg
cdq
lock
fs
jne
sub
and
cmps
mov
sar
jnp
scas
out
jae
mov
test
mov
mov
or
inc
cmp
jns
mov
fsubr
jb
(bad)
mov
pop
clc
cs
mov
adc
pop
pop
ins
xchg
and
ror
stos
sub
sahf
dec
mov
sbb
nop
(bad)
shl
(bad)
fisttp
aaa
xor
pop
cmp
add
lods
xchg
pusha
cdq
mov
lea
jno
cmp
gs
jno
push
pushf
cwde
sbb
or
(bad)
aaa
and
sar
sbb
ja
mov
(bad)
add
test
inc
aaa
mov
jo
test
fninit
push
mov
pop
pop
mov
inc
data16
inc
das
repz
add
out
int3
mov
adc
mov
lods
add
scas
pop
call
je
nop
add
cdq
shl
jo
aas
sbb
ds
addr16
push
mov
sbb
adc
sbb
mov
in
call
lods
sub
sub
mov
in
jne
nop
(bad)
push
iret
lds
sub
or
aad
outs
jae
gs
push
xchg
sbb
xor
add
out
pop
adc
mov
push
nop
adc
leave
push
mov
pop
jp
or
stc
push
hlt
adc
das
int3
ror
fisubr
jnp
xlat
pushf
repnz
add
icebp
(bad)
inc
xchg
cmp
leave
(bad)
jnp
fnstcw
js
cli
clc
mov
test
test
jl
jle
outs
pusha
sbb
inc
in
int3
jmp
js
mov
stc
and
sub
mov
xchg
xor
pop
dec
jp
ins
sti
pop
repnz
xchg
or
inc
out
cmps
jmp
fstp
sbb
lds
ja
imul
shl
push
sub
sbb
mov
push
jge
adc
ds
sub
fs
pop
mov
fwait
mov
cmp
stos
daa
xor
cwde
mov
(bad)
out
mov
and
inc
sbb
sahf
cld
adc
mov
pop
outs
xor
add
push
mov
ret
sub
mov
add
xchg
add
sub
jle
cmps
and
stc
and
pop
pop
jns
aaa
call
out
mov
push
and
mov
and
dec
leave
or
out
push
push
int
xor
mov
sub
and
pop
out
dec
in
cld
xchg
clc
adc
pusha
cmp
push
loope
jge
push
pushf
(bad)
jmp
stc
pop
mov
aad
pop
fsubp
pop
stc
inc
int
mov
test
jnp
sub
sub
js
(bad)
movs
in
call
rcr
shl
add
add
mov
int
or
sbb
ds
repz
cmp
inc
mov
push
pop
mov
push
jmp
retf
xor
clc
add
pop
jmp
dec
sar
sbb
lahf
fs
ins
not
(bad)
popf
cmp
lock
retf
push
and
fadd
inc
retf
and
mov
mov
(bad)
in
push
pop
test
repz
sub
mov
xchg
call
dec
mov
xchg
(bad)
js
sbb
mov
mov
scas
mov
mov
dec
jns
outs
addr16
ror
cmp
loopne
and
mov
xchg
(bad)
out
or
mov
dec
aas
in
cmps
(bad)
dec
enter
cmp
cmp
pop
mov
xchg
in
shr
int3
ins
aam
enter
push
add
push
dec
sub
mov
cli
sbb
stos
retf
xchg
dec
cmps
jns
add
call
xchg
mov
push
aas
imul
cmps
push
je
pop
and
sti
jmp
inc
das
cdq
xchg
or
sti
fisubr
loope
push
test
adc
and
inc
lods
lea
add
push
in
js
ret
ret
imul
(bad)
sbb
sahf
sbb
jno
push
xchg
es
jp
jo
dec
pop
jl
pop
movs
mov
addr16
lahf
mov
dec
push
xor
mov
pop
ret
enter
add
mov
mov
and
lods
add
jp
inc
xchg
ja
pop
test
sub
jg
loop
iret
add
enter
iret
push
addr16
sub
mov
xor
pop
mov
mov
test
out
leave
xor
mov
sbb
xor
fmul
lods
inc
in
rcl
dec
cmp
jp
xor
dec
enter
push
jp
(bad)
dec
or
aas
jno
rcl
or
imul
push
inc
adc
cmp
xor
xor
es
dec
jge
pop
ret
fidiv
jo
rcl
mov
aas
adc
test
jp
xchg
mov
mov
jns
lea
loopne
adc
mov
cmp
mov
not
sti
into
int3
sbb
push
call
retf
push
mov
cmps
lea
cmp
pop
inc
movs
fistp
pop
mov
sbb
repz
ficomp
pop
jge
inc
inc
clc
xor
adc
(bad)
and
lods
adc
scas
test
fbld
out
sbb
out
aam
int3
mov
(bad)
fist
mov
pop
adc
xchg
adc
sbb
std
mov
xchg
rol
popf
nop
xor
jb
fstp
div
(bad)
jae
mov
sbb
aas
cld
xor
retf
repz
cli
jge
dec
jo
mov
ds
pop
test
push
daa
daa
push
cmp
shr
test
gs
push
std
inc
xor
xchg
dec
dec
sub
inc
test
or
sahf
xchg
or
js
xchg
fcom
adc
mov
jb
and
sbb
add
(bad)
mov
mov
mov
jge
sub
push
ret
mov
test
mov
push
or
push
std
inc
inc
jo
fidivr
push
popf
pop
sub
push
loope
push
push
leave
cmp
jae
mov
xchg
data16
rcr
jp
jmp
push
and
and
push
dec
push
inc
pushf
arpl
pop
ror
bound
lods
repnz
(bad)
(bad)
loop
fisttp
push
jb
nop
sub
mov
mov
push
sub
xchg
push
iret
aam
jmp
pop
out
int3
shl
call
daa
(bad)
jmp
test
hlt
shl
push
mov
fs
ret
scas
sbb
dec
jne
pop
xlat
fldenv
push
lock
enter
add
xchg
gs
pop
ss
mov
clc
es
loopne
hlt
(bad)
cmp
push
adc
mov
jnp
aad
add
and
inc
ret
adc
js
pop
fucomip
push
xchg
mov
jbe
push
pop
add
test
test
les
stos
jo
dec
xchg
jp
hlt
jae
popa
pop
sbb
sbb
inc
mov
adc
call
les
nop
adc
sbb
xchg
dec
fdiv
rcl
aas
mov
not
pop
jg
lods
or
rcr
int3
push
and
in
xchg
pop
push
inc
(bad)
shl
sub
lods
retf
aaa
cmp
pop
int
sets
ds
pop
stos
into
push
add
std
fld
xchg
xchg
in
adc
sbb
aad
mov
fcom
and
jl
je
jg
sub
pop
inc
shl
mov
mov
iret
jo
jbe
xchg
jmp
pop
sbb
and
xchg
inc
sub
jmp
pop
hlt
and
sar
(bad)
fistp
inc
or
push
xor
ins
add
sar
push
movs
lahf
or
mov
mov
dec
rol
sub
sub
popa
mov
aas
(bad)
ss
es
test
jb
push
jecxz
and
les
mov
dec
je
adc
mov
je
scas
das
iret
xor
scas
add
push
int
hlt
mov
ror
push
mov
cmps
out
push
sub
and
xor
push
sbb
fsubr
dec
and
rol
cmp
push
add
pop
mov
sub
ds
pop
jo
dec
or
aas
mov
adc
outs
pop
dec
aaa
sbb
out
mov
popa
mov
xchg
imul
mov
int
data16
(bad)
neg
lods
ret
xor
sub
fwait
push
adc
fcomp
push
inc
lds
mov
cmp
and
xor
xor
imul
xchg
add
xor
xor
ins
adc
push
mov
imul
sti
in
mov
into
xor
dec
sbb
cmp
or
xor
sbb
push
inc
xchg
xchg
push
fisub
xor
xlat
inc
outs
bound
cli
int
sbb
leave
out
ss
jmp
ret
(bad)
sbb
or
adc
aas
aaa
xor
push
mov
and
xchg
pop
leave
outs
mov
inc
jno
cmps
sub
cdq
or
dec
movs
add
int
das
jge
push
xchg
or
cli
cmovno
and
jle
ins
dec
push
int3
fistp
push
jno
mov
bound
xchg
pusha
jnp
xchg
cmp
pop
mov
sub
jmp
cmp
pop
sub
cs
es
jg
inc
jb
or
dec
rol
out
xchg
imul
xchg
inc
jns
imul
xor
enter
cld
adc
xlat
fiadd
repnz
jns
mov
iret
jnp
xchg
or
aad
iret
mov
jg
je
pop
and
movs
mov
or
ret
lods
(bad)
aaa
and
push
das
out
in
(bad)
ja
loope
dec
movs
sub
jg
fidivr
retf
pushf
mov
(bad)
sbb
daa
scas
ins
mov
or
dec
sub
fmul
inc
pop
cdq
and
ret
push
jge
jle
jl
xchg
popa
leave
add
sbb
fadd
sub
mov
cld
mov
xchg
(bad)
add
ja
ds
retf
retf
(bad)
jmp
(bad)
dec
sub
jmp
xchg
cmp
dec
lds
gs
sub
leave
and
adc
(bad)
imul
imul
loope
das
stos
les
out
call
xchg
xchg
xor
psubusw
call
push
xor
cli
div
xor
or
fisttp
(bad)
(bad)
mov
pop
mov
sbb
xchg
cmps
outs
fcomp
push
cmp
(bad)
fldcw
dec
stc
mov
pusha
fst
push
xchg
aaa
div
cmp
push
push
xor
ja
sahf
mov
shr
sbb
movzx
cwde
add
cdq
inc
dec
cmp
shl
adc
mov
mov
sar
nop
loopne
leave
inc
jnp
jns
pop
cli
pushf
rcl
jno
push
test
and
cmp
jb
rol
jno
cmp
push
push
xlat
addr16
test
and
nop
repnz
fcomp
sub
es
inc
mov
jmp
pop
movs
push
adc
mov
sub
test
js
adc
add
pop
pusha
out
loop
popa
add
push
(bad)
dec
aaa
mov
xchg
bound
lea
call
mov
cmp
les
repz
js
push
imul
pop
test
pop
pop
add
(bad)
(bad)
mov
das
adc
or
lock
rol
popa
aad
push
cmp
lea
mov
mov
and
ds
dec
mov
lock
jle
rcl
fbld
push
dec
and
jmp
mov
pop
and
xor
ins
sti
xor
arpl
fist
jae
dec
enter
mov
mov
out
in
sbb
adc
pop
shl
mov
cwde
test
cdq
push
in
ins
mov
(bad)
in
sub
adc
cmp
mov
and
dec
xchg
test
rcr
ja
and
dec
into
rol
test
loopne
mov
mov
repz
adc
fcmovu
or
lahf
cmp
push
adc
sti
nop
sub
addr16
push
push
mov
xchg
adc
arpl
pop
into
jmp
dec
mov
test
popf
int
shl
inc
ret
pop
das
dec
push
jg
push
fst
jbe
in
mov
jae
out
pop
xchg
pop
mov
stos
(bad)
cmp
add
test
lock
xchg
mov
or
pushf
pop
sti
(bad)
push
cld
sahf
mov
call
in
cmp
stos
ja
jnp
sahf
fs
push
mov
(bad)
scas
mov
xchg
shl
popa
push
sub
mov
and
sub
bound
ins
jecxz
push
(bad)
mov
stc
xchg
mov
in
inc
push
in
movs
jnp
je
int3
jbe
scas
push
pop
ficomp
cli
push
adc
xor
inc
jns
arpl
jge
mov
(bad)
pop
bound
sub
popf
mov
push
cmps
dec
mov
push
mov
add
sahf
pushf
movs
jb
sti
mov
jno
mov
pop
jo
int
shr
pop
mov
adc
and
inc
test
inc
or
pop
scas
dec
mov
lea
pop
shr
xchg
mov
das
push
arpl
cmp
mov
call
scas
scas
xchg
xchg
mov
fmul
mov
jle
lock
pop
jne
stc
cmp
clc
or
imul
fisubr
inc
and
lock
xor
mov
mov
jmp
fisub
xor
pop
ss
enter
adc
fwait
dec
movs
in
sbb
mov
sahf
jae
xor
daa
dec
enter
or
cli
addr16
push
mov
xchg
mov
jns
(bad)
cmp
stc
(bad)
lods
mov
sbb
rdtsc
xor
mov
mov
xchg
adc
movs
dec
mov
jl
ficomp
mov
jb
rcl
neg
add
xchg
pop
cmp
and
scas
loop
inc
lahf
data16
push
mov
repnz
mov
push
js
jno
inc
mov
xor
mov
out
or
data16
ret
call
aaa
movs
mov
xchg
push
(bad)
jecxz
xchg
movs
jno
pop
stos
sub
inc
add
imul
jmp
mov
in
jp
test
icebp
dec
ror
dec
and
sub
rcr
jl
clc
rol
adc
dec
push
and
mov
cmc
mov
adc
jecxz
jae
push
or
mov
sbb
es
leave
mov
add
mov
repz
jg
add
adc
or
les
mov
dec
addr16
shl
pushf
retf
retf
xsave
sbb
push
ror
outs
mov
enter
pop
or
or
add
adc
jnp
and
pop
iret
jle
jge
jp
dec
cmc
outs
int
mov
(bad)
xor
je
sub
call
lock
push
test
test
pop
xchg
pop
pusha
adc
add
mov
fs
aaa
lods
sub
push
stos
mov
call
retf
mov
fcom
test
sbb
in
(bad)
mov
pop
arpl
std
sub
stos
sbb
(bad)
gs
fnstsw
out
jp
stos
jmp
mov
push
sub
movs
sti
test
adc
add
das
stos
sahf
inc
jmp
rcr
dec
in
xchg
cmps
fcomp
xchg
rcl
inc
rol
push
dec
pop
mov
xchg
inc
push
in
stos
jecxz
xchg
call
adc
push
jl
cs
scas
xchg
add
push
and
cld
and
in
jno
loopne
xlat
aam
adc
push
xchg
ins
ss
scas
ror
jmp
lock
xor
or
pop
xor
inc
sar
mov
fcom
sub
mov
or
pop
push
pop
jle
pop
imul
sahf
aas
xlat
adc
adc
(bad)
lahf
in
enter
add
sub
sub
pop
je
mov
loope
or
add
push
mov
xchg
nop
mov
outs
ins
fiadd
add
xchg
xchg
imul
movs
push
inc
dec
jmp
out
jns
pop
jp
mov
call
loopne
fcom
leave
jnp
or
ss
hlt
jo
sub
cmp
cmps
sub
int3
xor
pop
pop
mul
in
nop
sbb
test
(bad)
pushf
mov
push
push
bound
cmp
lock
push
mov
jno
leave
mov
jge
sub
sbb
mov
mov
sub
mov
(bad)
sbb
aad
in
sub
mov
xor
mov
nop
loope
push
enter
in
jl
je
inc
mov
arpl
test
rcr
movs
popf
add
xor
mov
popa
or
scas
popa
fsubr
hlt
xlat
pop
push
cmp
xlat
mov
adc
inc
ret
xchg
pop
jge
pusha
lahf
fimul
adc
cli
or
mov
in
xor
in
mov
xlat
push
fs
aam
add
xchg
popa
test
pop
inc
jmp
arpl
fcmovbe
pop
daa
das
sbb
jae
push
leave
imul
push
pop
jle
cwde
inc
call
sbb
mov
mov
outs
(bad)
jmp
mov
push
ss
addr16
ins
scas
neg
std
adc
xor
push
mov
loopne
out
xchg
xchg
mov
dec
inc
cwde
mov
sbb
mov
or
jge
mov
or
dec
test
or
ja
jno
(bad)
push
scas
lea
test
and
scas
arpl
and
daa
xlat
xchg
mov
mov
xor
(bad)
cmc
ins
retf
jmp
movs
cmp
(bad)
hlt
push
movs
xchg
cmp
and
mov
cdq
popa
pop
inc
sbb
out
loopne
pop
sub
mov
mov
pop
add
xchg
mov
mov
sbb
fwait
xchg
mov
push
loopne
xchg
inc
pop
cwde
jmp
or
cmp
inc
xchg
test
outs
sar
or
call
fmul
sahf
xor
sub
xchg
loope
add
fdiv
pushf
gs
sub
in
sbb
pop
mov
(bad)
je
mov
jp
dec
mov
push
add
or
cmp
popf
dec
push
xor
xchg
imul
stc
push
pop
mov
mov
in
mov
cmps
dec
mov
jns
ret
push
ret
or
(bad)
xchg
cmp
jmp
cli
fwait
in
pop
fstp
pop
and
daa
xor
retf
push
sub
fdivr
scas
pop
pop
or
cmps
inc
std
les
sub
dec
mov
(bad)
dec
nop
push
jge
dec
sub
xor
add
rol
jns
sbb
jbe
mov
(bad)
cmp
jg
cdq
jns
fdivr
repz
pop
enter
sub
aam
es
cs
imul
mov
sbb
or
in
(bad)
lock
fist
sbb
sbb
push
sub
sbb
in
iret
ss
adc
xlat
repnz
jb
fdivr
push
xor
xchg
(bad)
xchg
das
pop
add
in
test
or
dec
jle
loop
sbb
push
push
dec
adc
std
xchg
or
lahf
in
repnz
inc
sub
xchg
jo
movs
sbb
cwde
push
sbb
loop
pop
fstp
fcomp
pop
scas
mov
and
cmc
mov
push
fld
mov
bound
stos
mov
out
pushf
jle
cli
jnp
xor
shr
adc
daa
mov
jle
mov
sub
repnz
add
loop
mov
clc
inc
cmp
(bad)
outs
js
bound
out
xchg
dec
bound
test
and
hlt
scas
pop
addr16
push
dec
mov
jo
leave
ror
pop
xchg
xchg
ins
ficomp
xor
loope
xchg
jb
pop
and
sub
ja
pusha
sar
or
aas
sub
retf
test
push
xlat
int3
or
shr
js
xchg
mov
cmp
mov
xchg
mov
dec
dec
mov
data16
das
xor
std
call
mov
cli
rol
xchg
mov
test
rol
push
call
dec
jno
pop
enter
mov
imul
ret
bound
mov
stos
loop
push
mov
push
jns
add
aad
mov
push
js
fwait
out
xor
jno
sahf
std
loopne
div
add
fcmovne
sbb
push
push
jge
dec
xchg
inc
dec
pop
xchg
mov
cdq
lahf
pop
mov
dec
(bad)
mov
sub
push
xor
imul
sti
xor
mov
(bad)
jle
imul
xor
test
pop
push
ins
add
sbb
cmp
add
jns
stos
cmp
or
jnp
push
xor
aam
test
add
(bad)
daa
or
test
out
das
jmp
cmp
repnz
shl
inc
lods
xchg
cmc
and
loopne
xor
push
mov
mov
pop
add
sub
cmp
push
loop
pop
cmp
inc
cmp
jno
mov
sub
mov
cdq
and
out
mov
jbe
repnz
jo
or
fcmovnbe
fdivp
sbb
in
mov
jo
dec
cmps
test
add
push
shl
mov
pop
push
fdivr
jp
sbb
mov
add
stos
cmp
sub
cwde
jle
in
mov
xchg
inc
cmp
dec
shl
sbb
scas
fcomp
cmp
retf
movs
inc
jmp
int3
sub
or
(bad)
cmp
cdq
and
fs
addr16
adc
mov
clc
arpl
or
mov
jnp
lahf
inc
shl
shr
pop
mov
jmp
cdq
stos
call
movs
and
and
test
icebp
test
sub
mov
jnp
sub
cli
fadd
mov
shl
xchg
icebp
stos
into
aaa
mov
(bad)
int
jg
dec
xlat
add
mov
(bad)
add
mov
aas
ja
xor
inc
les
xchg
mov
shr
lods
cmps
xchg
aad
xor
sbb
dec
out
add
inc
cmps
pop
retf
sbb
jl
mov
je
popf
inc
int3
sbb
aam
(bad)
outs
xchg
cdq
aaa
xchg
pop
mov
xor
(bad)
xchg
sub
xchg
lea
or
retf
mov
or
(bad)
push
push
call
stos
mov
inc
stos
fwait
push
in
pop
push
push
mov
xchg
je
mov
dec
je
cmp
cmp
push
cmc
ds
mov
es
(bad)
push
cwde
jecxz
xchg
jmp
xor
ds
cmp
add
xchg
cmp
(bad)
push
fiadd
jnp
and
cmp
jecxz
addr16
(bad)
dec
lock
and
and
sbb
hlt
xlat
pop
imul
push
sub
push
out
adc
and
pop
test
(bad)
pusha
jmp
dec
pop
faddp
fisttp
fild
arpl
xchg
fs
stos
mov
sub
idiv
cwde
xchg
add
dec
or
or
cmp
xor
cmps
pop
bound
call
add
dec
lock
mov
icebp
retf
jne
(bad)
mov
in
push
outs
fwait
xchg
dec
clc
enter
std
dec
ins
jg
aas
xchg
ficomp
inc
mov
pop
int3
cmp
pop
jge
clts
ds
jbe
pop
mov
push
push
ret
or
loop
es
cdq
stc
mov
jns
push
repnz
xchg
xchg
aas
push
pop
sub
inc
aas
(bad)
or
jmp
add
and
out
imul
push
popa
cdq
stos
jnp
shl
push
scas
push
movs
(bad)
xor
rol
addr16
xor
mov
dec
dec
push
adc
jl
adc
sub
dec
pop
jb
add
sbb
in
mov
in
inc
sub
or
add
mov
inc
xor
sbb
loope
ror
jo
dec
and
xor
ins
mov
jmp
inc
mov
sub
or
dec
call
sub
xlat
push
into
popa
or
adc
or
mov
jmp
inc
retf
enter
jno
push
pusha
xor
xchg
xlat
cmp
and
push
aad
jnp
adc
lods
jae
xor
or
jp
xchg
enter
sub
sbb
nop
test
push
sbb
lods
dec
pop
xchg
add
mov
pop
jb
sub
push
scas
pop
nop
sbb
popa
jnp
xchg
add
mov
xchg
(bad)
dec
loope
inc
mov
sub
adc
xlat
scas
call
pop
int
mov
push
fimul
mov
(bad)
mov
and
xchg
imul
sub
dec
f2xm1
retf
or
pop
sub
xchg
pop
pop
and
mov
mov
xor
push
xor
sbb
ficomp
xchg
pop
sbb
xchg
scas
outs
movs
xchg
push
inc
cmp
mov
cli
pop
stos
aad
mov
mov
bound
out
fist
lods
inc
int
lock
pop
loope
shr
xor
adc
in
pop
(bad)
or
adc
push
test
cmp
pop
cmp
push
vmovddup
hlt
jmp
loop
pop
sub
call
xchg
lea
out
cmp
cmps
shl
iret
cmp
mov
adc
jg
iret
inc
push
retf
je
jmp
arpl
push
scas
popf
sbb
push
jno
mov
jne
xchg
or
push
ret
cwde
aas
imul
sbb
mov
es
aam
cli
frstor
(bad)
xchg
dec
call
push
mov
push
cmp
or
dec
imul
push
aaa
ja
jmp
adc
enter
stos
dec
dec
out
arpl
daa
test
push
leave
jg
ret
mov
xchg
mov
cwde
cmp
pop
into
mov
shl
mov
mov
adc
add
jo
es
cmc
add
xchg
pop
inc
sahf
add
xor
sahf
inc
fild
or
push
fst
jecxz
cdq
je
mov
mov
cmps
mov
(bad)
hlt
jg
fwait
(bad)
mov
dec
adc
adc
mov
movs
xor
out
push
xor
mov
sbb
mov
movs
into
test
and
test
imul
dec
cmp
mov
cmovp
pop
cld
pop
div
adc
xor
push
popf
out
adc
xor
mov
jmp
sbb
or
inc
mov
repz
jnp
nop
push
jmp
mov
lods
fisttp
mov
(bad)
jmp
movs
jno
dec
int3
jnp
mov
ret
jge
outs
ficom
push
dec
int3
pop
cs
int3
mov
dec
lahf
and
vmwrite
pop
adc
mov
dec
shr
xor
fisub
imul
sub
inc
retf
mov
call
cmp
scas
jno
mov
cli
adc
jo
loopne
push
mov
adc
jo
(bad)
lock
imul
xchg
movs
std
xchg
pop
push
dec
call
push
arpl
mov
jg
shl
mov
or
int3
(bad)
push
(bad)
cmp
or
lods
popf
mov
mov
popf
mov
data16
sub
test
mov
seto
mov
in
xchg
xchg
adc
sbb
sahf
and
mov
push
stos
mov
dec
ins
jbe
mov
jg
shl
daa
lods
sbb
cld
push
lods
xchg
fadd
jae
inc
test
xchg
push
xchg
data16
add
loop
cwde
jle
aaa
sub
mov
jecxz
push
xchg
sbb
add
movs
aad
lods
(bad)
int3
push
sbb
ret
jg
(bad)
(bad)
call
xor
clc
push
jno
pop
popf
mov
cmp
xor
and
inc
sbb
ret
pop
fs
pop
pop
push
pusha
push
mov
gs
in
ret
aam
or
lea
fmulp
in
out
add
sti
pop
mov
fmul
mov
mov
pop
lea
jmp
inc
xor
in
mul
inc
mov
adc
(bad)
pop
inc
mov
jne
jmp
jle
rcl
adc
mov
mov
in
fisubr
add
mov
pop
movs
in
dec
in
or
call
push
rcr
retf
popf
adc
or
fistp
dec
(bad)
mov
dec
fcom
inc
iret
out
inc
jl
adc
jae
or
movs
ficomp
sub
sbb
clc
jmp
loopne
or
out
jp
cld
leave
(bad)
xchg
std
das
add
cli
repz
ds
jp
xchg
push
lods
lods
inc
sbb
int3
shl
adc
cmc
stc
out
or
iret
adc
out
mov
sub
mov
mov
and
cmp
es
repz
iret
jno
xor
xor
jmp
adc
pop
in
(bad)
mov
mov
retf
adc
imul
add
repnz
jae
jne
xchg
add
outs
cmp
fistp
stos
jmp
test
jo
jnp
push
in
test
(bad)
mov
mov
cli
or
jae
xchg
(bad)
in
lea
cmp
loope
xlat
in
repz
dec
rcl
mov
cmp
mov
xchg
push
jns
pop
aaa
or
push
out
js
in
lahf
fistp
ins
and
in
sub
jp
mov
xlat
pusha
add
cmp
shr
push
pop
dec
xchg
jnp
or
das
jmp
dec
scas
pop
jb
pop
out
inc
shr
pusha
out
outs
scas
in
and
lock
popa
movs
dec
daa
inc
or
mov
call
out
jl
dec
cmp
je
pushf
or
cmp
cdq
cwde
and
xlat
adc
retf
int3
call
je
mov
mov
jge
(bad)
rol
sub
ins
mov
cmovnp
cmp
mov
dec
adc
clc
push
call
mov
fist
mov
shl
adc
out
clc
(bad)
mov
adc
jo
mov
and
pop
gs
dec
fst
in
out
ret
stos
pop
je
in
(bad)
aaa
push
sbb
adc
mov
pop
pusha
movs
sub
xor
scas
mov
aas
loopne
leave
jb
outs
movs
mov
mov
std
clc
mov
add
push
mov
push
out
mov
movs
in
sbb
mov
pop
(bad)
and
jmp
xor
iret
and
stos
dec
int
or
movs
pop
movs
xchg
sbb
jmp
xchg
xchg
cmc
popa
in
jno
mov
mov
adc
xchg
xchg
dec
arpl
jmp
xchg
jo
jmp
inc
mov
and
leave
pop
scas
xor
cmp
mov
xor
mov
icebp
mov
daa
adc
or
jne
jbe
xchg
add
iret
dec
sahf
pop
xchg
aam
movs
cmps
pop
inc
and
xor
fimul
int3
add
sub
pop
dec
gs
out
push
xchg
mov
push
cwde
adc
sti
adc
shl
mov
push
mov
push
adc
div
movs
adc
mov
mov
jp
jmp
xchg
sbb
int3
test
dec
fisubr
imul
inc
or
out
stos
sbb
cwde
pop
ret
lea
add
adc
outs
lock
mov
fs
push
or
imul
sub
repnz
sub
imul
imul
mov
jb
adc
and
mov
leave
adc
out
sub
dec
(bad)
xchg
rcr
xor
sbb
push
mov
xchg
ins
push
pop
repnz
sbb
leave
sbb
push
(bad)
push
xchg
sar
push
sar
adc
clc
dec
sti
loopne
cmp
retf
sbb
xchg
push
xchg
inc
add
cmp
mov
inc
and
mov
nop
mov
daa
lods
(bad)
fstp
sub
pop
xchg
or
add
jmp
xchg
or
xor
sub
jbe
jns
ret
xor
imul
call
test
(bad)
in
test
dec
fisub
movs
scas
das
dec
adc
xchg
data16
and
xchg
sub
aam
movs
fld
sti
inc
pushf
shl
icebp
fdiv
push
stos
fwait
shr
ja
lods
push
jb
inc
adc
mov
lock
shr
movs
outs
popf
out
das
push
sbb
mov
test
out
or
cmp
jp
clc
ins
mov
out
xchg
mov
push
mov
jle
call
sbb
push
xchg
pop
cmc
adc
aad
sbb
lods
add
mov
and
jmp
cmc
mov
lds
lahf
daa
mov
es
out
mov
pop
aaa
and
sub
push
push
retf
xchg
sbb
test
icebp
sub
pop
adc
or
imul
or
add
mov
lods
aaa
out
jne
in
pop
jnp
jge
mov
leave
jg
or
mov
adc
daa
jne
dec
and
cli
dec
les
retf
push
jne
fwait
mov
mov
loope
xchg
mov
pop
add
xchg
sub
xchg
push
test
js
and
mov
dec
adc
xchg
inc
push
aas
mov
jmp
pop
test
(bad)
ret
loopne
aad
idiv
and
mov
mov
(bad)
into
jmp
mov
mov
jmp
cmp
mov
addr16
xor
inc
cld
popa
xor
mov
ror
cmp
cmc
jne
xor
ror
pop
cmp
xor
jae
loopne
and
lods
fbld
or
sub
or
daa
mov
dec
sub
xchg
xor
pop
loopne
stos
add
ja
out
and
dec
ins
int
enterw
and
mov
out
mov
jno
call
mov
out
cmp
cld
inc
jns
sub
call
mov
pop
or
in
push
or
dec
ja
dec
(bad)
fst
out
and
in
adc
(bad)
jnp
mov
test
js
jmp
call
in
inc
jl
or
xor
push
call
cmps
outs
and
and
mov
cli
xchg
test
xchg
fwait
and
lea
push
push
adc
std
ja
loop
mov
jecxz
mov
cmp
mov
add
inc
fistp
inc
sbb
jecxz
hlt
lods
jb
lods
stos
inc
clc
pop
nop
jbe
and
inc
dec
sbb
jno
or
cmp
out
xchg
mul
ins
pop
push
les
mov
loope
mov
cmp
or
scas
mov
jb
add
iret
inc
xchg
shr
sub
fld
sbb
or
and
adc
or
mov
pushf
das
addr16
add
jecxz
pop
fidivr
add
cli
das
mov
pop
push
into
dec
hlt
test
imul
xor
xlat
push
fadd
or
icebp
dec
cmp
inc
pop
fdivp
cmps
inc
cmp
nop
ficomp
mov
and
adc
fbstp
push
dec
sub
adc
retf
push
es
pop
xor
inc
push
jl
jo
cmc
jp
sbb
bound
rcl
xor
pop
jle
inc
jg
push
mov
sti
sbb
adc
hlt
pop
call
jecxz
clc
cmc
jno
ins
lds
sbb
sbb
jmp
std
sbb
cli
inc
pushf
cmp
retf
add
jno
jecxz
jmp
out
leave
push
mov
arpl
push
add
sahf
mov
popa
cmps
das
mov
pop
inc
jmp
rol
movs
cld
and
mov
retf
sub
xor
in
cmp
data16
fwait
xchg
shl
mov
das
cmp
jno
sub
ds
pop
pop
cli
and
mov
dec
scas
adc
inc
mov
std
dec
cld
ds
sti
(bad)
(bad)
mov
fmul
outs
loope
rol
shl
or
leave
push
lea
es
or
xchg
idiv
dec
or
mov
mov
rol
jns
mov
dec
mov
jmp
push
mov
pop
loope
cmps
test
fs
push
adc
and
inc
(bad)
jmp
jo
add
sbb
aas
cs
repnz
cs
mov
bound
daa
xor
push
dec
jmp
in
mov
cli
jl
icebp
mov
das
rol
push
(bad)
push
std
ds
push
lds
add
add
out
sar
imul
xor
outs
lfs
pop
push
jb
mov
out
adc
mov
push
adc
loope
(bad)
hlt
inc
mov
pop
outs
add
repz
mov
mov
mov
or
xchg
jg
mov
mov
out
retf
push
jl
dec
mov
jle
dec
push
cwde
nop
std
dec
mov
push
sbb
pop
scas
test
add
sub
loopne
ins
dec
sahf
inc
cmp
nop
add
bound
lock
cmp
(bad)
repz
out
stos
or
es
retf
cmps
xchg
add
mov
inc
iret
ror
inc
in
cmps
push
mov
mov
xchg
fild
retf
movs
mov
xchg
pop
test
mov
pusha
repz
cmp
xor
int3
adc
pushf
fs
mov
aas
lock
fdiv
(bad)
loopne
loop
xchg
enter
pop
push
xlat
ret
xchg
rol
(bad)
imul
xor
hlt
rcl
lods
xor
pop
in
fcmovnb
aam
jecxz
out
out
and
mov
shl
loop
gs
daa
cwde
xchg
xlat
inc
je
add
mov
xor
xor
mov
add
fbstp
lds
leave
push
add
sar
xadd
or
hlt
fcom
cli
xlat
push
or
jo
add
or
sbb
jno
xor
lock
jecxz
nop
jecxz
pop
push
in
jb
neg
repz
into
ror
repz
xor
fisttp
enter
(bad)
xchg
call
repz
and
mov
jbe
pxor
test
or
popf
les
or
push
dec
cmp
sub
pop
sahf
or
xor
int
fsub
repz
or
push
sub
not
cmp
push
mov
push
jnp
iret
or
test
cmp
xor
jno
xchg
add
cmp
pop
sub
push
sahf
inc
ret
xchg
aaa
(bad)
enter
adc
(bad)
rep
ja
sub
fld
call
pop
ja
adc
sbb
loopne
mov
xor
sahf
es
mov
ins
mov
mov
fidiv
in
jle
and
loopne
retf
fmul
out
sub
int
call
dec
inc
dec
lea
arpl
lahf
cmps
cmc
jp
sar
cmp
mov
out
movs
or
nop
ja
cmp
pusha
lock
(bad)
loopne
scas
pop
(bad)
and
fbld
in
sbb
dec
lock
(bad)
fldcw
add
adc
xor
fldenv
sub
jnp
mov
jl
jnp
cwde
ret
sbb
dec
enter
mov
pop
mov
and
popa
outs
sub
dec
imul
mov
mov
inc
call
(bad)
jb
push
adc
push
pop
pop
pop
rol
neg
leave
xor
inc
pop
mov
mov
pop
retf
mov
push
add
jno
outs
cmp
adc
lds
js
bound
sub
cli
or
out
inc
jb
mov
scas
out
mov
or
daa
inc
cmc
movs
xchg
icebp
jmp
call
jb
gs
or
and
test
(bad)
and
call
into
and
call
add
and
mov
sbb
dec
mov
out
hlt
shr
xchg
movs
pop
addr16
xchg
mov
retf
or
in
xchg
dec
xor
pop
mov
jnp
sub
xor
or
jle
mov
repz
push
rcr
mov
adc
mov
daa
sbb
mov
(bad)
in
das
std
in
frstor
fldcw
add
inc
js
add
loope
in
push
add
in
retf
stos
sbb
scas
fild
cs
push
scas
iret
ror
mov
jge
and
cs
mov
cdq
scas
cmp
test
iret
jge
or
test
add
neg
inc
inc
adc
enter
mov
mov
mov
ret
stc
sar
jmp
js
sub
iret
add
dec
nop
sbb
out
jmp
leave
cwde
ret
xor
ins
jg
js
imul
retf
push
adc
xchg
lods
or
test
loopne
out
test
fbld
mov
and
int
jle
xor
jl
adc
mov
fwait
call
test
xor
pop
ret
call
cmp
push
sub
ror
in
jmp
mov
shr
xchg
cld
pop
aam
or
push
loop
push
or
(bad)
bound
jnp
imul
pop
fadd
std
push
fwait
sbb
fidivr
lods
adc
mov
push
dec
pop
mov
pop
scas
loopne
cmp
or
test
cmps
and
sub
cs
(bad)
mov
out
pusha
mov
inc
imul
scas
inc
pop
enter
adc
add
retf
adc
pop
js
jmp
jg
mov
ror
fild
mov
mov
xchg
jp
inc
shl
pop
bound
js
movs
push
lahf
call
aad
outs
aad
popf
lahf
nop
push
test
and
cmp
stos
sbb
jnp
or
jmp
cmp
xlat
mov
and
bnd
ins
mov
in
pusha
test
xor
inc
xchg
xchg
jno
repz
jle
push
push
jns
jns
stos
mov
push
pop
mov
adc
mov
stos
push
mov
fst
or
cmc
ss
mov
mov
cmp
retf
jne
pop
and
lock
and
addr16
jnp
mov
jg
ret
push
sub
shr
lods
lea
adc
(bad)
cli
cmc
pop
or
push
loope
fimul
inc
(bad)
data16
scas
xchg
or
ret
(bad)
cmc
push
fstp
inc
fisttp
cmps
add
jge
in
inc
bound
cmp
call
dec
cli
sbb
loop
cmp
sub
mov
fdiv
sub
mov
loop
jno
test
cs
loopne
mov
fld
nop
sahf
jmp
test
dec
push
(bad)
jo
mov
das
out
add
mov
inc
add
sub
sti
xor
sbb
jecxz
out
bnd
cwde
adc
repnz
mov
arpl
in
sbb
pop
fimul
clc
les
sbb
xor
lahf
fsubr
(bad)
sahf
and
aam
nop
xchg
jno
stc
stos
mov
es
jecxz
pusha
mov
sahf
test
pushf
bound
jne
mov
cmp
imul
mov
push
sar
xchg
adc
jae
int3
xor
xchg
sar
out
out
mov
ror
sub
pop
mov
ror
nop
sub
mov
icebp
lds
xor
dec
mov
sbb
(bad)
addr16
jge
dec
and
mov
fnstsw
inc
rcl
nop
cmp
imul
xchg
mov
adc
ds
adc
sub
sub
cmp
add
lds
inc
sub
lds
aaa
and
sbb
mov
ins
retf
and
not
mov
ss
ret
mov
loope
sbb
lods
cmp
movs
dec
aas
mov
test
ror
cmp
test
adc
es
js
test
ror
pop
pop
add
scas
dec
loop
inc
and
dec
stos
in
rol
es
gs
pop
mov
and
call
xor
outs
jp
in
popf
mov
sahf
push
imul
jmp
mov
push
or
retf
xchg
xchg
add
sub
mov
push
jge
mov
ror
int3
aaa
and
push
fadd
xchg
push
mov
fstp
xlat
and
mov
and
jno
mov
jmp
ds
xor
inc
lea
xchg
pusha
push
and
out
or
add
and
jbe
jle
sbb
mov
repnz
pop
(bad)
jp
jge
xor
rol
sbb
jnp
mov
(bad)
hlt
sub
or
jp
addr16
test
mov
cmp
ds
inc
xchg
cmp
nop
jmp
ss
adc
hlt
(bad)
xchg
pop
pop
lods
jp
int
sub
pop
xchg
movs
add
loop
mov
xchg
loop
xor
ins
mov
leave
iret
cmps
test
rcl
pop
ins
mov
test
fld
pop
lahf
inc
dec
std
jmp
xor
shl
loop
fs
test
int3
popf
sbb
mov
clc
mov
pop
cmp
cmp
jns
cwde
repnz
shl
mov
aaa
int3
mov
fidivr
mov
xchg
push
int3
sub
xchg
push
inc
icebp
retf
add
fwait
mov
hlt
ins
loope
jge
call
pop
test
adc
sbb
fs
sub
ins
jno
or
mov
cmc
sub
xor
push
clc
mov
std
rep
add
sahf
add
sbb
cmp
xor
out
jne
fstp
cmp
in
lods
adc
aad
cdq
cs
pop
pop
loopne
and
in
mov
shl
add
aad
xor
in
pop
rcr
clc
(bad)
sbb
fidiv
(bad)
mov
or
mov
sub
xchg
out
dec
cmp
jp
pop
daa
push
or
fwait
lods
inc
dec
sub
jmp
jns
retf
in
cdq
lods
push
in
sahf
inc
ss
adc
ret
mov
push
gs
fimul
xchg
das
test
adc
add
data16
ins
stos
mov
fist
push
fisubr
cmp
mov
(bad)
movs
inc
addr16
add
cmp
add
adc
retf
sub
push
push
(bad)
or
retf
pop
push
jmp
jmp
mov
pop
cmp
push
mov
sbb
and
pusha
mov
jmp
dec
dec
hlt
push
mov
jo
dec
scas
std
add
pop
das
mov
(bad)
iret
cdq
mov
mov
adc
xor
iret
xor
(bad)
gs
jns
popf
push
jnp
or
loopne
push
aam
and
jmp
rcl
inc
fild
cmc
xchg
ins
adc
add
xor
or
pop
xchg
ins
mov
retf
sbb
or
mov
pop
ins
jmp
fst
ja
sahf
mov
dec
jmp
fild
mov
mov
sub
cmps
sub
or
mov
jno
xor
cmp
aaa
xchg
jmp
xor
shr
movs
call
jmp
cld
mov
js
sbb
cli
push
dec
or
scas
or
mov
dec
mov
push
inc
int3
lahf
(bad)
sbb
jnp
retf
xchg
sti
lods
ins
mov
sahf
xchg
je
lea
jge
or
call
and
xor
lahf
dec
(bad)
sbb
loopne
je
dec
and
mov
push
fsubr
inc
jmp
adc
or
mov
das
out
and
es
inc
out
push
in
arpl
aam
adc
popf
rcl
fistp
jo
aam
cmp
test
jmp
mov
ins
pop
popw
mov
mov
retf
int3
(bad)
xor
ror
xchg
xchg
lock
jl
pop
inc
data16
imul
lods
pop
adc
lods
mov
mov
lods
push
icebp
pop
sahf
(bad)
comiss
jb
cmp
(bad)
mov
arpl
pop
push
or
jmp
push
sbb
aad
xchg
hlt
js
push
push
pop
jg
add
inc
cli
sub
and
ret
ins
cld
les
inc
or
icebp
inc
xchg
ja
loope
or
xor
pop
push
ins
repnz
je
sub
mov
inc
and
add
push
pop
inc
mov
aad
inc
sar
ins
xchg
pop
ins
arpl
lock
xor
jne
adc
sbb
mov
push
neg
mov
pop
fwait
aam
in
adc
ins
(bad)
jne
fcmovnbe
xchg
sub
movs
mov
jae
inc
mov
out
out
fistp
daa
mov
inc
mov
push
and
add
xchg
out
std
mov
ret
push
mov
sub
ror
jp
cmp
xchg
sbb
scas
rcr
mov
pusha
aas
pop
jle
adc
sbb
daa
aam
push
pushf
inc
push
pop
sbb
lods
mov
dec
int
xchg
ret
push
mov
in
lds
jle
repnz
cmps
xchg
pop
mov
xchg
dec
pop
jnp
or
cli
ja
jecxz
sbb
test
gs
cmp
fwait
call
into
imul
jle
outs
repz
pop
xchg
dec
xor
xor
and
push
adc
xor
ds
xor
mov
fiadd
es
inc
fwait
or
or
fmul
in
cmp
push
xor
dec
(bad)
out
fld
fcom
icebp
add
movs
sbb
push
pushf
popa
push
jo
xor
into
(bad)
adc
rcr
inc
pop
inc
mov
stos
shrd
xor
(bad)
cmp
(bad)
or
lock
out
ja
call
icebp
in
test
loope
pop
aas
adc
pop
ror
jp
shl
popf
in
mul
sti
icebp
scas
arpl
and
push
xlat
cmp
outs
popf
rcl
dec
xchg
inc
fbstp
pusha
mul
dec
pop
push
hlt
inc
jne
sar
dec
lds
shl
movs
add
sbb
and
sti
icebp
mov
cmps
ret
mov
ret
les
xchg
adc
cmps
push
rcr
xchg
sti
imul
dec
mov
mov
into
dec
mov
inc
frstor
jl
rcl
ins
pop
imul
(bad)
push
lahf
xor
stos
mov
mov
lods
jge
push
pushf
sub
jb
mov
mov
sbb
mov
and
mov
test
mov
and
and
and
out
pop
out
fistp
cwde
sbb
rcl
sbb
sti
cmp
sub
xor
aad
mov
call
out
mov
iret
fisubr
xor
and
addr16
lock
rcl
mov
jno
scas
dec
in
sar
jo
retf
scas
(bad)
xor
xchg
dec
jo
fdivr
popf
stos
fst
std
lods
jp
popa
xchg
sbb
or
mul
or
cmps
(bad)
sub
mov
in
pop
into
(bad)
retf
imul
outs
popa
xor
cmp
les
push
cdq
mov
jmp
jp
push
js
lea
std
cmps
mov
and
xchg
xchg
scas
lods
xchg
xor
es
in
cld
loop
add
sti
pushf
push
push
sbb
jle
bound
mov
jmp
(bad)
call
imul
mov
shr
fstp
push
jbe
add
mov
movs
add
rcl
pop
movs
pop
mov
xchg
xchg
leave
jnp
(bad)
int3
call
jns
xchg
dec
xchg
jl
mov
inc
jb
and
pop
dec
lock
xor
or
sub
xor
push
jg
mov
das
(bad)
sbb
jmp
aam
retf
sub
pop
addr16
sbb
test
add
lock
sub
in
and
jmp
mov
int
xchg
ja
(bad)
loope
mov
mov
aad
jnp
data16
(bad)
jge
cmp
out
xor
mov
xchg
daa
jne
xor
cmp
addr16
(bad)
aas
pop
or
jg
rcl
cld
fwait
mov
mov
xchg
sar
ror
(bad)
or
rcr
js
mov
retf
movs
jmp
sbb
ins
fisub
mov
mov
(bad)
fcom
xchg
adc
aam
dec
pop
std
int3
sbb
popf
cmp
lods
les
shr
out
or
scas
or
jns
shl
mov
mov
jg
stc
cli
jge
je
daa
iret
inc
into
xchg
hlt
jmpw
adc
add
out
xchg
push
push
mov
push
fsubr
dec
es
out
sub
jl
add
rol
enter
xchg
or
test
pop
lods
mov
xchg
fisubr
imul
or
jnp
mov
sbb
push
(bad)
repz
pop
jnp
into
aad
mov
mov
pop
mov
lods
xchg
mov
push
add
popa
xor
jl
idiv
mov
push
dec
ret
(bad)
push
or
pop
js
mov
dec
jmp
pop
imul
jmp
jge
and
std
mov
icebp
xchg
inc
adc
popf
cmp
movs
dec
adc
(bad)
jmp
add
sub
lods
push
movs
iret
gs
or
sub
lea
jnp
and
and
sbb
inc
enter
cdq
push
mov
pop
scas
aad
pop
jno
jae
cmps
es
in
ds
pop
push
scas
outs
imul
xchg
sub
cmp
xchg
or
sub
xchg
inc
hlt
jne
cwde
push
retf
mov
jp
and
push
pop
xor
lahf
(bad)
xchg
push
dec
iret
sahf
pushf
dec
pop
pusha
pop
imul
sub
je
sti
repnz
pop
sub
ret
inc
ins
add
inc
pop
into
fs
adc
cwde
int3
xor
adc
mov
push
mov
nop
and
and
mov
adc
add
in
fs
push
ins
xchg
adc
add
into
test
pop
and
lea
cdq
mov
push
push
leave
mov
std
inc
in
pop
and
pop
ins
jl
inc
aas
fcom
repz
and
je
fcmovne
cmp
fsub
ret
cmp
cli
xchg
or
je
cmp
xor
ret
pop
xor
test
das
movs
jbe
dec
repz
loope
inc
jle
adc
adc
and
sub
xor
mov
in
ss
jmp
in
popa
aad
pop
stos
aam
jge
popf
(bad)
ficom
jns
imul
push
sub
pop
add
sub
iret
mov
mov
mov
mov
(bad)
lods
push
jb
cmp
je
int
inc
push
xor
fisub
add
pop
push
fiadd
rcl
or
or
cmp
xlat
loopne
fisub
push
and
cld
div
leave
leave
add
or
pop
mov
sbb
aam
loopne
mov
xchg
or
mov
dec
int3
xor
fist
mov
jecxz
repnz
out
scas
xor
or
xor
outs
imul
fdiv
pop
inc
jbe
sub
sub
xchg
jae
or
(bad)
sti
mov
or
ret
stc
jno
push
mov
xchg
mov
sbb
add
push
sbb
sub
pop
fsin
xchg
sbb
aam
adc
call
ret
inc
dec
inc
leave
and
mul
repz
or
jmp
les
hlt
aam
iret
and
cs
jnp
push
mov
(bad)
sbb
not
fdiv
xor
add
retf
dec
retf
mov
icebp
jno
sahf
cmp
popf
sub
mov
cmps
adc
enter
push
bound
sub
into
xchg
sbb
mov
sub
cmp
(bad)
jmp
jns
inc
in
cld
rcl
and
adc
jb
xor
push
daa
xchg
xchg
sub
jmp
or
cmp
daa
push
es
adc
fnstcw
jae
push
xor
repnz
fstp
lea
jnp
out
fcmovne
(bad)
jecxz
scas
xor
xchg
xor
xlat
aad
mov
arpl
sar
add
clc
mov
out
mov
hlt
cmp
out
int
popa
fwait
das
sub
sbb
or
or
adc
out
jno
mov
or
hlt
js
aad
xchg
dec
inc
aad
lock
sbb
jbe
pushf
pop
imul
daa
fstp
dec
daa
jl
stos
fadd
sub
(bad)
sbb
stc
nop
(bad)
adc
test
and
push
ss
cmp
fmul
jl
xchg
rol
lahf
pop
sbb
stc
movs
sbb
push
jmp
or
dec
and
xchg
ss
mov
aas
ds
push
cmp
push
push
sub
popf
inc
jne
mov
adc
xlat
std
idiv
push
clc
pop
cli
mov
enter
push
push
mov
jmp
mov
in
mov
xor
or
mov
dec
int
dec
jecxz
push
cli
inc
xor
xchg
enter
sub
ror
repnz
loopne
push
cmp
fcom
test
inc
mov
lods
in
aad
outs
lods
mov
mov
push
shr
xor
and
push
jae
jecxz
pusha
xor
scas
cmp
and
scas
pop
test
movs
cmp
jg
scas
stos
cmp
pop
jp
leave
fcomip
xchg
movs
and
aaa
fisub
mov
fcomp
jb
add
push
jl
popf
in
cmps
std
retf
daa
xchg
xchg
xchg
xor
out
adc
adc
cmp
mov
aas
es
mov
lock
mov
sbb
xor
xor
pop
fsub
and
mov
cmp
nop
aad
sar
fsubp
ret
outs
idiv
push
dec
mov
push
aas
and
sub
mov
hlt
add
fisubr
add
popa
sbb
aas
add
push
sbb
xchg
xor
adc
lock
inc
jbe
in
jge
out
aad
push
inc
mov
add
bound
dec
rol
movs
sub
sbb
inc
mov
aam
xlat
popf
add
imul
cmp
mov
mov
pusha
(bad)
int3
cli
hlt
nop
push
and
mov
retf
push
nop
dec
push
in
cmps
dec
mov
jae
push
outs
dec
movs
sbb
jp
(bad)
cli
inc
inc
je
sub
pop
mov
movs
cmc
push
cmp
fld
int3
or
loop
mov
call
test
cmps
and
xor
cdq
mov
dec
gs
sub
xor
sti
call
push
cli
sbb
pop
cwde
xchg
fxch
fdiv
cmc
adc
jae
nop
je
sbb
shl
mov
outs
jg
jge
mov
mov
dec
push
mov
cmps
pop
outs
fstp
sbb
clc
(bad)
fnsave
nop
sti
in
and
js
mov
push
cmp
lds
(bad)
jl
fdivr
dec
mov
dec
adc
mov
cld
and
jmp
out
and
aad
icebp
imul
mov
pop
dec
mov
sub
jle
mov
nop
fild
mov
push
fdivr
sub
std
ja
ins
and
adc
mov
stos
int
fidivr
and
pop
es
jne
mov
rol
arpl
(bad)
scas
ss
int3
and
xor
mov
mov
add
xchg
mov
loope
dec
imul
div
pop
push
fsubp
out
or
not
cmps
mov
into
jg
popf
xchg
fmul
dec
ins
(bad)
jae
stos
jbe
ins
movs
jmp
cmp
(bad)
iret
add
jns
icebp
mov
jo
sbb
scas
jp
inc
jno
ins
or
and
mov
mov
(bad)
jb
dec
ds
pusha
push
add
fs
push
mov
das
xchg
test
sahf
sbb
pop
add
inc
dec
push
push
jno
jnp
mov
mov
push
inc
stos
dec
mov
popa
ds
repz
cmps
push
bound
outs
mov
add
cmp
sbb
fild
in
ja
inc
or
add
and
mov
jl
sub
(bad)
test
dec
mov
mov
mov
dec
inc
mov
push
cmp
push
mov
xor
stos
rol
fistp
pop
std
pusha
xor
xchg
mov
retf
mov
mov
fnstsw
imul
mov
call
imul
sbb
out
call
mov
imul
in
retf
(bad)
jmp
sahf
in
xchg
test
cmp
dec
add
out
mov
es
dec
and
outs
into
mov
sti
dec
movs
inc
out
xchg
nop
and
retf
inc
scas
popa
jnp
daa
adc
cwde
sub
push
fcomi
std
pop
jb
cli
out
(bad)
xor
pop
nop
dec
test
ret
retf
outs
sti
xchg
fdiv
in
adc
popa
mov
lods
jno
aaa
inc
mov
jle
jp
movs
dec
iret
daa
call
ror
push
leave
jge
sub
xlat
mov
mov
daa
xor
xor
adc
rcl
ds
mov
je
mov
aad
jp
mov
push
loopne
inc
jbe
outs
mov
or
in
pop
mov
enter
cmp
fist
loopne
mov
inc
mov
les
push
mov
sbb
sub
mov
push
sub
out
in
scas
mov
xchg
mov
cmp
inc
mov
cdq
xor
movs
xchg
data16
and
and
shl
(bad)
test
leave
cs
cmps
jmp
mov
pop
push
or
push
sub
mov
push
push
sbb
inc
dec
push
arpl
cmp
repnz
jecxz
inc
stc
xchg
retf
cmc
cmp
jl
push
jge
stos
gs
xlat
movs
rcl
xor
(bad)
pop
dec
cli
loope
adc
fsub
adc
jo
xchg
jl
or
shr
repnz
(bad)
cmp
iret
push
dec
xchg
test
mov
push
sbb
sbb
mov
pop
cwde
add
aam
test
pop
pop
jmp
mov
lds
int3
xchg
pop
xchg
call
jg
call
jmp
adc
dec
fist
or
sbb
add
xor
fwait
xchg
xchg
mov
out
sahf
pop
loop
jl
jmp
aaa
loope
mov
pop
ficom
outs
ror
rcr
(bad)
push
std
clc
xor
(bad)
mov
jge
mov
jg
push
add
xor
ins
pop
movs
cdq
out
loope
lahf
ret
pop
pop
enter
sub
cli
push
ins
xor
cmps
sub
xor
imul
sub
pusha
aaa
test
repz
shr
in
push
inc
xchg
in
and
jbe
mov
mov
jb
or
out
and
movs
in
inc
cwde
jns
scas
mov
mov
leave
mov
adc
sub
sbb
add
movs
lds
sub
test
adc
push
mov
lods
sbb
sub
aaa
sbb
scas
mov
lods
push
pop
cmps
cmp
rol
mov
je
dec
jb
dec
enter
sbb
cmps
movs
in
sub
test
or
adc
pop
fisub
shl
loop
inc
mov
in
jp
xchg
jno
cmc
jg
gs
xchg
cmp
push
mov
mov
dec
xor
mov
aas
loop
sbb
push
dec
pushf
ret
mov
or
aam
ins
test
xchg
jmp
jmp
or
add
scas
adc
ins
popf
push
pop
inc
and
mov
jo
lock
inc
in
cdq
ja
xor
sbb
les
lods
xchg
fwait
loope
push
into
mov
movs
pop
gs
cdq
mov
lea
ret
mov
xchg
(bad)
dec
fcomp
pop
dec
(bad)
push
jmp
fwait
or
cmp
cmp
and
mov
mov
rcr
inc
stc
xor
xor
mov
data16
jge
scas
xchg
(bad)
adc
aaa
jl
pop
inc
and
arpl
inc
pop
or
mov
xchg
jb
in
das
movs
xor
sub
mov
and
fwait
out
pop
test
adc
dec
out
repnz
push
scas
inc
jbe
sar
push
add
jl
jne
jp
cld
(bad)
cs
dec
and
in
lods
mov
cmp
xor
sub
xlat
cmp
mov
xor
xor
fs
mov
sub
movs
loope
repz
repz
out
mov
pushf
mov
aam
push
jg
lock
jg
cli
add
call
mov
(bad)
pop
(bad)
lds
(bad)
mov
push
cld
(bad)
mov
add
xor
das
add
shl
push
mov
add
aam
fcomp
fucomp
repz
push
es
or
fisttp
fldcw
cs
pushf
push
fld
ficom
or
pop
xlat
jmp
out
out
mov
jno
rcr
cmp
retf
dec
xor
fcomp
push
fnstenv
rol
cli
and
out
sti
test
cmp
push
add
sub
pop
test
sar
sub
repnz
cmp
mov
xchg
xor
adc
arpl
cmp
adc
jg
cwde
fs
cli
loope
jge
and
sub
cmp
jnp
jmp
addr16
pop
adc
jbe
adc
xchg
mov
dec
in
mov
or
jmp
inc
test
sbb
rcr
pop
xor
cmp
sbb
fmul
imul
sbb
pop
push
outs
lods
and
sahf
stc
clc
mulps
jns
outs
jno
or
mov
mov
push
movs
arpl
and
(bad)
fcomp
xor
int
out
adc
sbb
ror
mov
jnp
mov
fwait
std
popa
pop
ja
retf
pop
pop
mov
cwde
imul
xchg
mov
ss
xchg
je
cs
fdiv
push
and
je
call
push
(bad)
pop
add
jle
dec
and
(bad)
mov
fsub
ret
sub
or
push
jbe
test
adc
ror
and
xor
dec
cmps
cmp
inc
cmps
mov
mov
push
adc
lods
add
retf
rol
mov
xlat
bound
je
and
sub
push
xor
inc
mov
mov
pop
lds
adc
movs
xchg
outs
fadd
dec
xchg
xlat
mov
leave
jb
iret
pop
lods
push
sbb
arpl
inc
popa
inc
inc
dec
mov
bswap
mov
push
and
ins
pushf
sub
inc
mov
ss
cmc
aaa
add
push
(bad)
loop
pop
and
hlt
inc
daa
fwait
aam
mov
fist
adc
jb
aas
scas
xor
cmp
inc
mov
or
xor
lgs
jae
adc
pushf
and
and
das
aam
mov
jmp
sub
das
mov
pop
iret
mov
fs
mov
pop
std
xor
jecxz
dec
call
jae
es
sti
out
in
push
inc
pop
fiadd
test
mov
mov
adc
in
cwde
pop
pop
push
stos
fist
sbb
xchg
inc
sbb
test
adc
fnstenv
fisubr
lods
push
push
inc
jl
pop
int
cmp
retf
cwde
aam
iret
jge
pop
or
cmp
pop
add
aam
retf
in
loop
mov
clc
fldcw
add
or
dec
and
bnd
xchg
imul
(bad)
jmp
mov
clc
dec
jns
stc
(bad)
jo
cmp
dec
dec
or
dec
fwait
mov
cmp
cmp
imul
lods
xchg
call
lahf
popf
xchg
daa
dec
mov
sub
hlt
push
xchg
imul
sahf
push
mov
sub
bound
std
lahf
xchg
pop
sar
fist
vmovaps
imul
and
inc
push
mov
mov
(bad)
mov
add
xchg
not
fsubr
or
jg
ret
jnp
out
cli
jb
xchg
sub
mov
mov
loop
ss
dec
je
jge
adc
pusha
dec
icebp
ret
stos
sbb
rol
sub
xor
mov
test
sbb
jge
and
sbb
rol
dec
out
jle
ror
xchg
xchg
add
cdq
(bad)
lods
into
xor
xor
ret
call
das
push
xlat
scas
add
sbb
jne
push
xor
stos
sub
fdivr
xlat
mov
xor
pop
pop
inc
jne
std
dec
sub
inc
xchg
mov
in
js
mov
or
test
add
inc
imul
call
cmp
pop
inc
xchg
std
mov
ins
xor
aaa
and
sar
call
(bad)
dec
loop
jp
ins
cld
rcr
cmp
test
loope
push
sbb
pop
mov
mov
(bad)
scas
fs
and
push
push
inc
jmp
add
mov
dec
arpl
push
pushf
pop
enter
je
push
ret
stos
jb
sbb
ja
movs
pusha
xor
mov
pop
sub
xchg
xchg
and
cwde
sar
loope
dec
in
sub
daa
dec
jae
js
lods
nop
pushf
test
es
js
dec
mov
jb
pop
sub
(bad)
(bad)
and
xor
test
mov
add
mov
lods
pop
pusha
in
xchg
ss
push
xchg
aad
out
inc
jb
retf
mov
mov
cld
pop
lods
ret
adc
sub
xor
loop
pop
fistp
adc
shr
std
and
enter
stos
add
add
xchg
and
les
push
cmp
push
push
lds
inc
loope
cmp
pop
nop
aam
sti
xor
mov
inc
jecxz
les
mov
xchg
es
mov
mov
(bad)
fimul
popf
push
jns
enter
pop
push
enter
and
(bad)
shl
xor
dec
in
xchg
mov
xchg
add
mov
imul
push
ror
pop
jge
in
or
out
ret
and
cmp
dec
mov
inc
fnstenv
mov
out
lods
xor
loopne
jne
pop
aas
pop
aad
jge
push
pop
push
push
fsubr
xchg
sub
ins
lock
shr
(bad)
shl
enter
(bad)
mov
sbb
pop
and
cld
aaa
js
xchg
fadd
push
ret
data16
mov
adc
mul
test
icebp
sbb
repnz
or
sub
cmp
iret
ins
jno
mov
mov
dec
or
push
movs
enter
xchg
ret
mov
cmp
mov
inc
stos
ja
not
fidiv
imul
cmp
xor
test
cmc
loope
movs
enter
neg
jbe
mov
iret
xchg
int
mov
sbb
pslld
sahf
movs
jnp
fwait
pop
inc
call
and
jge
test
popa
sahf
mov
adc
xor
inc
mov
bound
es
jmp
push
xlat
mov
mov
lds
adc
test
pop
cmp
ds
cwde
inc
pop
jp
add
stos
loop
retf
mov
sbb
adc
cmc
(bad)
repz
xchg
jo
or
jbe
pop
mov
fst
into
ss
add
or
ja
js
std
jo
loope
pushf
(bad)
arpl
popa
push
bound
dec
mov
in
hlt
outs
fcomi
(bad)
pop
dec
out
(bad)
xchg
xor
pop
add
jnp
push
rcr
cwde
push
mov
aam
or
jmp
ret
mov
stos
sbb
pop
add
sbb
imul
dec
call
sbb
jecxz
jmp
sub
push
in
push
mov
movs
push
ret
adc
pusha
push
and
jp
cmp
pop
and
je
(bad)
idiv
loope
pushf
cmp
xlat
outs
cdq
xor
(bad)
fs
xchg
loop
mov
repz
cwde
bnd
and
imul
xchg
into
in
loop
out
jae
mov
add
jae
scas
neg
xlat
jp
call
out
xor
mov
and
mov
xor
ret
js
xor
jg
jne
fiadd
inc
ret
push
or
mov
jnp
je
test
shl
adc
push
jge
ja
fsub
mov
imul
ficomp
push
cmps
lea
sbb
cmc
pushf
mov
xor
adc
in
and
pop
mov
push
pushw
xchg
jne
loopne
test
adc
scas
add
(bad)
int
dec
jae
in
and
movs
pop
ja
push
mov
cmps
mov
mov
arpl
fcomp
ins
cmps
in
out
jg
mov
sti
fs
cmp
mov
and
add
fisub
ret
lods
sbb
in
fld
xchg
jno
repnz
test
sbb
daa
mov
jb
and
add
sbb
or
lds
inc
in
mov
loop
repz
and
leave
mov
je
repz
xchg
fild
push
movs
es
test
or
popa
mov
icebp
leave
xchg
movs
xor
dec
pop
(bad)
push
xchg
mov
adc
add
sub
fcom
cli
or
cmp
adc
lahf
mov
jmp
push
or
push
js
scas
rcr
dec
test
out
xchg
fcmovne
jmp
adc
(bad)
sti
add
adc
add
jmp
mov
add
in
mov
test
mov
cs
jne
xor
inc
mov
out
jg
rcr
retf
pop
sbb
xchg
repnz
sub
data16
or
cs
inc
arpl
dec
mov
popf
sbb
jmp
or
mov
push
aaa
test
mov
xor
xlat
rcl
sub
mov
jns
mov
(bad)
adc
mov
or
pop
xor
sub
leave
or
lds
cmovo
(bad)
ins
shl
add
add
in
jb
or
push
movs
dec
jns
cdq
mov
mov
push
dec
cmp
xchg
mov
repnz
iret
jo
xchg
sub
repnz
stos
fistp
sbb
jb
and
xor
pop
ds
push
stos
addr16
sub
jmp
es
ins
sub
das
or
adc
movs
dec
in
add
xor
xchg
stos
fwait
jmp
pop
aam
pop
into
idiv
cli
sub
std
fsubp
out
jne
push
nop
adc
xchg
out
push
xor
data16
cmp
leave
jle
into
ret
mov
add
clc
mov
dec
sar
ds
sar
int3
scas
dec
sti
loopne
sbb
jo
xor
cmps
js
xchg
jo
mov
push
jbe
jl
inc
gs
cli
adc
adc
mov
push
daa
clc
fsubr
sti
inc
fnstsw
movs
add
lds
int
and
sbb
hlt
inc
or
clc
stc
mov
mov
test
outs
cmp
sbb
mov
and
cmc
or
xlat
fstp
jb
stos
xlat
mov
jge
aam
sar
jp
xchg
pop
inc
cmp
mov
icebp
stos
fs
imul
(bad)
xchg
pop
mov
adc
loope
movs
cld
mov
pop
jp
mov
push
(bad)
push
pop
and
inc
pop
daa
dec
mov
mov
(bad)
js
or
mov
repnz
daa
add
imul
inc
pushf
xchg
or
les
pop
ds
outs
xchg
es
mov
pop
or
jne
jle
fwait
mov
jmp
mov
jmp
mov
call
popf
bound
scas
jl
jmp
sub
mov
pop
addr16
les
repz
xchg
jmp
jl
shl
inc
retf
ror
add
mov
jge
xor
test
mov
fimul
xor
pop
pushf
push
stc
mov
fwait
adc
mov
and
stos
test
inc
sbb
in
cmp
xor
mov
pop
mov
dec
ins
add
pop
leave
mov
inc
test
xor
sahf
cmp
ret
ret
es
cmps
and
pop
mov
xchg
fnstcw
xchg
(bad)
iret
mov
xor
(bad)
arpl
rcr
push
xchg
shr
rcl
ret
cwde
(bad)
cmc
cmp
rcr
stos
adc
fnstcw
out
(bad)
jl
aas
popf
jo
push
es
mov
push
mov
pop
sar
(bad)
and
sub
movs
sbb
jge
mov
push
int
mov
lahf
call
div
mov
popa
mov
icebp
adc
(bad)
call
or
shl
sbb
inc
cmp
inc
ja
mov
pop
div
js
mov
(bad)
gs
sbb
or
xchg
retf
outs
outs
ins
xchg
jb
xor
fdivr
arpl
sub
mov
xlat
mov
test
test
loopne
ret
jl
jl
or
je
inc
retf
adc
rcr
sbb
push
or
fadd
mov
mov
xchg
inc
xor
pminsw
mov
mov
and
mov
scas
ret
hlt
lock
repnz
push
add
inc
push
mov
jle
aam
mov
pusha
jl
rol
test
dec
movs
jae
data16
popf
add
pop
mov
movs
and
pop
mov
xchg
mov
cmp
mov
bound
jb
xchg
adc
mov
sbb
sub
push
jns
out
cmp
(bad)
(bad)
mov
fs
jl
lock
jmp
cmp
test
inc
sub
enter
imul
fs
mov
xor
or
in
cmp
cwde
loop
mov
test
pusha
inc
inc
mov
pop
mov
mov
out
mov
(bad)
xor
or
(bad)
out
sbb
sahf
jae
inc
iret
aaa
lds
test
fsub
add
pop
pushf
nop
jecxz
outs
push
enter
stos
(bad)
(bad)
dec
adc
pop
psllq
jg
shl
jge
inc
nop
pop
in
push
pop
xor
sub
add
sbb
fisubr
or
cmc
xor
sahf
mov
cwde
js
in
or
inc
ss
shl
retf
ja
pop
ret
out
imul
sub
loope
xor
xor
test
pop
(bad)
retf
or
pop
xor
(bad)
or
retf
or
sub
adc
les
xchg
or
clc
std
aam
push
js
cmps
addr16
push
std
add
loope
or
sbb
inc
or
push
out
mov
jle
dec
xor
neg
cld
inc
mov
mov
sar
mov
cmp
in
arpl
aaa
int
pusha
jo
jg
gs
(bad)
pop
sbb
fwait
outs
scas
nop
nop
inc
icebp
les
and
pop
mov
(bad)
xor
push
mov
repz
arpl
popf
or
pop
lahf
mov
dec
fprem
(bad)
or
inc
jne
nop
cwde
add
addr16
xor
je
ret
jae
jp
adc
or
pop
cwde
jl
imul
jae
ins
mov
or
loopne
mov
add
mov
jle
ds
sahf
rcr
clc
in
in
imul
inc
outs
int3
scas
pop
inc
sahf
xchg
inc
mov
push
out
add
dec
cmc
inc
cmp
xchg
ret
xor
xchg
and
lahf
stc
mov
shr
jno
jns
outs
and
repnz
push
or
jge
pop
movs
mov
xor
adc
lods
or
pop
ss
xchg
dec
pusha
out
scas
ret
mov
push
mov
iret
scas
push
push
fsub
mov
data16
push
rol
leave
arpl
daa
loopne
jmp
cmps
dec
movs
imul
jge
imul
sub
push
mov
js
xor
movs
retf
inc
jne
enter
pop
jge
ss
mov
pop
rcr
pushw
dec
(bad)
fldenv
pop
mov
xchg
imul
xchg
or
out
pop
les
mov
mov
pop
sub
mov
cmp
repz
xchg
mov
sbb
dec
pop
out
loop
cmps
pop
push
int
cmp
or
dec
mov
sub
pop
cmp
dec
mov
mov
out
cmps
add
aad
loopne
xlat
nop
mov
ret
adc
movs
loopne
cmp
call
pop
daa
leave
mov
repz
lock
cld
in
ret
(bad)
xchg
inc
mov
out
add
inc
mov
stc
loop
into
pop
movs
test
int
and
xchg
mov
movs
ins
rcl
push
push
sahf
jno
add
sub
xchg
rcr
inc
or
push
and
out
sub
xor
(bad)
jecxz
push
data16
int
stos
stos
pop
sahf
in
sar
xchg
mov
ins
scas
and
push
loop
fcomi
mov
mov
aaa
rcr
in
popa
movlps
(bad)
mov
fiadd
cmps
mov
mov
in
mov
xchg
stos
into
push
(bad)
(bad)
and
aam
push
rol
fiadd
test
cmps
stc
fistp
jecxz
or
mov
sub
dec
pop
sar
rol
pop
cmp
rcl
pop
adc
xor
bound
or
add
out
ret
fstp
sub
out
pop
push
lea
sar
adc
sub
ss
sbb
sub
mov
rcl
jnp
xlat
das
mov
mov
mov
xchg
xchg
outs
imul
xchg
movs
inc
fidiv
push
shl
or
aas
pop
out
inc
lea
jne
dec
xor
mov
int3
sbb
mov
pop
xchg
adc
shld
and
aad
push
mov
sbb
xchg
std
popa
sti
fsub
xor
mov
jb
xor
vpshufhw
fdiv
movs
jmp
mov
(bad)
ins
das
stos
mov
js
int
push
cmps
push
jne
outs
loope
mov
mov
push
jg
test
mov
inc
test
out
push
push
xchg
rol
jp
in
lods
xor
xchg
call
popf
sbb
loopne
add
repz
xchg
xchg
pop
sub
sub
or
pop
das
add
loope
inc
pop
and
rol
mov
and
(bad)
(bad)
cs
mov
jl
imul
mov
ja
ins
test
add
push
mov
cmp
cwde
jg
add
ffree
sbb
mov
(bad)
std
cmps
arpl
cmps
push
mov
in
jo
push
pop
sub
adc
cmp
call
xor
and
push
jb
popa
xor
das
sub
ins
mov
or
ja
mov
shl
jno
sbb
mov
sbb
xor
sub
pop
jae
and
les
loopne
not
sub
stos
ret
xor
push
arpl
xlat
iret
leave
js
cmp
push
retf
mov
push
loopne
push
ror
outs
mov
cmps
or
gs
fidiv
aam
cmp
mov
xchg
adc
je
sbb
add
push
cmp
(bad)
data16
lea
push
neg
lods
push
pop
mov
xchg
aad
lods
iret
ficom
jns
jmp
inc
xor
pop
pop
into
cld
mov
cli
and
cmp
call
pusha
mov
add
jns
mov
fwait
(bad)
es
outs
pushf
xchg
cmp
add
sbb
sahf
mov
sbb
stos
push
push
aam
jno
push
mov
mov
xchg
test
mov
inc
jl
cmp
pushf
test
imul
dec
lods
fldcw
hlt
push
fdiv
aas
mov
cmp
pop
inc
mov
sbb
sub
and
sbb
inc
cmp
jns
add
std
pop
xchg
and
mov
mov
sbb
sub
xchg
mov
sbb
or
push
call
bound
fcmovbe
mov
xor
maxps
jp
js
rcr
fisub
push
mov
cmp
les
xchg
sbb
in
int3
ins
add
jecxz
leave
xlat
xchg
pushf
push
mov
sbb
mov
push
push
sar
(bad)
or
jle
jno
mov
push
xor
xor
jb
test
cs
ds
test
dec
and
adc
pop
daa
dec
lahf
sbb
and
cmc
out
ins
mov
ffreep
mov
push
jmp
add
sbb
int3
dec
or
dec
stc
mov
pop
hlt
pusha
mov
adc
adc
xchg
or
jl
sbb
mov
popw
or
dec
sub
movs
jg
(bad)
jecxz
sub
jmp
scas
pop
out
stos
jnp
out
mov
lock
pop
std
gs
fidivr
jnp
push
xor
shl
retf
aad
stos
pop
inc
in
(bad)
sbb
retf
aam
ins
test
out
xchg
jae
pop
movs
push
mov
ret
pop
shl
add
stos
das
push
pop
inc
cli
sub
and
mov
or
xor
xor
push
sti
or
xor
into
shl
out
jmp
out
sub
loopne
add
mov
or
std
inc
jle
xor
outs
scas
imul
sub
jne
push
les
clc
push
jl
cmp
mov
adc
inc
jne
cmp
stc
push
add
inc
xchg
sub
and
sahf
fldcw
inc
fcomp
xor
sbb
rcr
mov
(bad)
cmp
xchg
enter
push
retf
sbb
push
stos
ret
(bad)
sbb
fisub
xor
inc
bnd
loope
push
pop
mov
jmp
cwde
les
mov
in
cmp
call
add
fdiv
add
dec
xchg
or
mov
pop
sub
inc
xchg
rol
dec
aas
mul
jno
mov
mov
scas
adc
pop
xor
int3
adc
imul
mov
lea
fadd
fisttp
push
cwde
sub
(bad)
stos
xchg
xor
fsubr
cmp
enter
xchg
cmp
add
cld
push
out
test
add
inc
in
pop
popa
cwde
pop
mov
out
rep
adc
mov
int
sub
jbe
cmp
sub
or
mov
mov
cli
es
in
xchg
cs
pushf
ja
movs
das
sbb
inc
mov
xchg
out
mov
ins
push
pusha
(bad)
js
nop
arpl
sub
inc
cmc
sbb
cmp
lods
leave
rcr
sbb
enter
imul
dec
fs
mov
out
les
cmp
mov
jmp
mov
push
in
call
jno
mov
mov
mov
je
ja
lahf
mov
mov
fidivr
sbb
mov
cmp
das
mov
iret
pop
jno
pushf
pop
ins
mov
loopne
out
and
aad
cli
cs
ret
mov
inc
adc
jge
push
inc
lods
das
push
lahf
(bad)
push
xor
jl
jmp
ror
dec
mov
in
mov
neg
inc
add
add
fwait
lahf
gs
mov
fist
mov
cdq
inc
jae
in
jnp
dec
es
xor
rol
jae
loopne
dec
jnp
sub
pop
dec
pop
jne
(bad)
sbb
pop
dec
mov
adc
add
mov
mov
cmp
mov
mov
mov
and
xor
enter
cmp
pop
aad
mul
sti
stos
adc
or
push
retf
or
mov
push
push
or
test
and
add
jns
cdq
pop
adc
sbb
xchg
test
or
pop
or
(bad)
and
loop
iret
add
shl
icebp
movs
in
retf
adc
xchg
jnp
cmc
ja
cmps
cmp
sti
mov
shl
pushf
add
sbb
jo
jne
xor
dec
xor
add
test
cdq
inc
push
inc
mov
xchg
push
pusha
jge
mov
stos
xchg
rcl
imul
cmp
fnstsw
and
das
(bad)
stos
xor
gs
call
sbb
sub
fbld
xor
mov
cmp
sti
push
in
cmp
movs
xchg
mov
adc
fdivr
loopne
(bad)
sub
in
push
inc
xor
inc
test
sbb
pop
mov
push
sbb
out
sahf
xor
push
jmp
inc
ss
xchg
mov
je
mov
in
aas
push
push
retf
loopne
fisub
sbb
outs
aas
push
pop
adc
(bad)
xchg
xchg
and
inc
xchg
pop
cmc
jecxz
and
xchg
nop
and
push
pop
fistp
imul
xchg
fistp
or
mov
hlt
adc
ret
cmps
or
fistp
fiadd
and
mov
mov
imul
xor
cmp
icebp
dec
xlat
pop
cmp
das
pop
pop
xchg
outs
xor
arpl
xchg
jb
std
shl
enter
fdiv
mov
aas
jne
push
sub
mov
xchg
cmc
in
add
js
mov
xchg
sub
jg
or
cmp
dec
mov
sub
aas
push
shl
fcomp
mov
not
aas
adc
enter
ins
pop
fsub
inc
sti
scas
fisubr
adc
movs
and
mov
test
push
sub
push
(bad)
ret
mov
dec
mov
xor
jmp
lock
hlt
or
cmps
leave
fucomip
mov
mov
pop
shr
test
push
sti
pop
ds
cmp
sbb
dec
and
xor
inc
out
jno
dec
cmps
cdq
sbb
sbb
mov
push
imul
mov
mov
xchg
aam
pop
pop
and
fwait
in
(bad)
int
js
cmp
push
and
(bad)
jmp
fwait
aad
push
adc
shl
jmp
or
push
mov
xsaves
jae
jne
cmps
call
cmp
pop
cmp
mov
ins
loope
pop
add
xchg
inc
in
sbb
or
push
sahf
push
fild
adc
out
pop
mov
jno
push
sub
ja
std
xor
cmp
ins
repnz
jmp
xchg
shl
cmps
in
add
adc
mov
inc
das
xlat
outs
sub
push
cmp
mov
pop
aaa
cmp
jmp
mov
jecxz
nop
shl
inc
ret
sub
mov
movs
ror
add
pop
in
pushf
mov
sti
jno
mov
add
fwait
leave
sub
iret
dec
test
add
pop
aas
push
ror
imul
out
mov
repz
aam
ins
loopne
gs
sbb
lss
imul
test
js
pop
dec
or
sub
cmp
ja
loopne
stc
mov
cwde
cmps
out
cmp
dec
sbb
(bad)
adc
mov
scas
adc
or
push
mov
mov
mov
ret
add
icebp
mov
dec
dec
mov
sbb
lahf
and
sub
pushf
and
push
shl
add
imul
ins
pop
cmp
inc
shl
ds
sbb
or
add
mov
dec
cmp
dec
mov
push
neg
cld
xor
xchg
adc
(bad)
sar
bound
sub
mov
pop
loopne
fcom
jbe
sub
(bad)
push
or
jg
push
std
popf
inc
sub
and
out
lahf
push
push
out
push
loopne
sub
push
lock
cmp
push
mov
int
div
rcl
hlt
mov
call
(bad)
jmp
xor
xchg
dec
adc
sub
daa
mov
aam
leave
adc
mov
cwde
lods
sub
mov
lods
inc
in
push
sub
sub
int
iret
sti
sti
stc
repz
cmp
nop
adc
sub
xchg
mov
sti
cmp
(bad)
daa
pop
out
xchg
or
mov
cwde
sbb
adc
mov
xor
mov
outs
adc
inc
cwde
add
jne
les
xor
pop
xchg
mov
neg
add
into
push
les
push
jae
inc
fidiv
add
sbb
sbb
jne
mov
inc
leave
jns
fs
inc
pop
jp
sub
inc
sub
out
fucomp
dec
dec
mov
cmps
es
int3
sbb
and
mov
loope
sbb
push
test
xchg
sbb
gs
sub
jg
nop
(bad)
and
jno
pop
dec
xor
cmp
xchg
enter
fs
(bad)
pusha
imul
push
lods
xchg
push
inc
rol
push
mov
std
and
inc
rol
les
leave
push
aaa
std
xchg
mov
mov
pop
or
push
pop
sbb
test
push
jg
xlat
xor
jmp
push
in
popa
int3
inc
fstp
clc
cdq
stc
push
xor
mov
xor
sub
mov
inc
test
jmp
sub
ss
jns
cwde
je
inc
jl
mov
clc
sub
xchg
xor
adc
sbb
(bad)
popf
xchg
xchg
mov
in
adc
and
aam
xchg
pop
(bad)
mov
and
cmps
pop
cmps
jle
fidiv
cmps
je
lods
dec
or
das
(bad)
mov
mov
push
cmp
stos
fwait
add
hlt
xlat
icebp
push
test
pop
(bad)
pop
fs
cmp
mov
mov
pusha
mov
pop
cmp
stc
bound
sbb
adc
jmp
mov
(bad)
(bad)
in
call
movs
fstp
cmp
jmp
ds
sub
mov
sub
nop
lea
rcr
stos
pop
les
sub
pop
(bad)
sub
xchg
bound
cmp
js
ficomp
ror
jl
pop
jge
push
xor
sbb
test
mov
retf
jecxz
sbb
stos
into
push
sbb
test
inc
xchg
jns
pop
stc
jmp
xchg
(bad)
cmps
aad
in
pop
test
sbb
jb
(bad)
lock
sahf
adc
jnp
or
out
dec
xlat
int
push
add
lahf
scas
and
sbb
jo
loope
test
dec
xchg
xchg
mov
inc
gs
movs
sbb
xor
mov
mov
sbb
out
cmc
retf
stos
fisubr
mov
jnp
xor
ficomp
xchg
add
cmp
and
rol
cmp
test
mul
adc
mov
pop
dec
sub
add
sbb
ret
push
fwait
call
fucomp
sbb
mov
pop
je
sbb
xor
hlt
inc
jmp
adc
or
or
inc
into
sbb
aas
cmps
sub
movs
mov
inc
fcmovb
dec
dec
xchg
lea
shr
popf
repnz
fsub
cdq
ror
pop
or
sub
mov
jp
scas
mov
inc
rcl
jo
xchg
push
push
fwait
fs
icebp
inc
dec
sar
sbb
pop
pusha
(bad)
mov
data16
xchg
sub
jb
(bad)
popa
lock
xor
mov
inc
xor
push
(bad)
in
sbb
inc
(bad)
call
mov
das
in
dec
retf
movs
fiadd
cmps
push
mov
adc
inc
mov
push
out
mov
cs
lock
or
cwde
push
mov
mov
jl
(bad)
rol
push
dec
mov
jecxz
cmp
add
xor
ficomp
and
lods
mov
jae
fcomp
cwde
neg
inc
push
retf
rol
fs
jg
pop
add
nop
jmp
and
sbb
inc
dec
fdivr
mov
xchg
les
xchg
mov
repz
sti
test
fstp
addr16
(bad)
xor
daa
call
push
bound
jp
inc
push
xor
and
inc
(bad)
das
mov
pop
or
rcr
sub
pop
aas
sub
aas
xchg
and
mov
mov
xor
(bad)
out
push
(bad)
movs
dec
and
test
out
loope
pop
inc
push
(bad)
mov
sub
or
in
into
mov
les
xor
ret
mov
xor
out
(bad)
mov
push
cmp
dec
shr
sub
mov
(bad)
push
adc
adc
test
sub
call
dec
repz
xor
mov
test
dec
adc
pop
or
das
pop
xchg
xchg
mov
scas
out
cmp
push
mov
shr
pop
sbb
push
sub
jecxz
outs
cli
cmc
and
xor
test
imul
xchg
or
call
dec
jle
fidiv
jbe
push
cdq
mov
dec
cmp
push
stos
xchg
out
dec
repz
movs
push
xchg
popf
stos
adc
mov
fdiv
mov
pop
sti
pop
dec
in
dec
mov
std
rcl
xchg
js
xor
loop
jmp
aaa
push
xlat
into
les
push
into
cmp
pop
mov
push
sub
cmps
mov
cmp
adc
jge
fnsave
les
pop
pop
rcr
xchg
dec
test
mov
jo
mov
or
ds
jb
test
repnz
mov
jnp
add
fwait
xor
jge
ins
push
xchg
mov
aam
leave
rcr
(bad)
and
fs
sbb
fsub
cmps
test
lods
sar
jmp
cmp
jl
push
add
loope
shl
xor
(bad)
fdiv
add
dec
push
aaa
jo
xor
jo
stos
mov
add
test
adc
sbb
jo
dec
cmp
push
lahf
dec
sub
(bad)
lods
cmps
in
popf
jmp
mov
pop
inc
repnz
(bad)
popa
lea
aas
cmp
cdq
add
nop
fstp
mov
mov
(bad)
pop
xor
push
push
lea
xor
pop
xchg
pop
sbb
aas
xor
imul
jl
or
rol
div
cwde
xchg
ins
adc
or
gs
xchg
jb
in
mov
in
imul
shl
retf
or
(bad)
aam
xchg
jecxz
adc
ins
ins
repz
jb
mov
mov
xchg
adc
push
add
push
inc
and
div
cli
popf
inc
pop
mov
pop
loop
in
push
xor
lods
retf
cld
adc
jge
cmps
push
jns
xchg
jg
and
test
add
add
push
ins
push
add
mov
or
push
in
fnstsw
pop
push
(bad)
mov
test
btr
dec
test
mov
mov
inc
pushf
mov
push
push
movs
bound
push
std
xchg
jmp
adc
adc
add
pop
add
mov
cmp
in
dec
test
mov
arpl
aas
cmp
mov
jmp
add
idiv
mov
jae
cmps
out
hlt
(bad)
jp
xchg
mov
loop
imul
call
jge
mov
mov
xor
add
mov
mov
out
out
cs
sti
mov
cli
fst
(bad)
in
stos
leave
pop
inc
dec
sub
out
mov
inc
cmps
ror
int
pop
cmp
or
dec
fdivr
push
or
jmp
mov
outs
in
mov
jmp
sub
outs
and
test
xchg
hlt
push
inc
cdq
call
in
mov
xchg
sbb
xchg
rcr
adc
clc
push
mov
jb
add
pop
dec
es
hlt
aam
ss
xchg
push
leave
cli
ret
ins
jnp
dec
scas
cmp
or
sub
inc
mov
aaa
mov
mov
sub
inc
je
pop
xor
inc
mov
push
and
xchg
dec
adc
jge
and
mov
cmp
sub
mov
inc
inc
push
mov
adc
add
int3
clc
dec
je
mov
push
push
jg
movs
jecxz
mov
test
mov
and
aad
and
or
bnd
or
push
mov
or
test
sbb
jle
or
pop
lds
mov
iret
dec
or
dec
inc
and
mov
xchg
outs
sub
cmps
in
(bad)
push
cmps
pusha
loope
(bad)
or
mov
or
add
add
std
pop
lds
and
cmp
cld
xor
int
fsubr
push
jmp
cli
and
loopne
push
push
lea
dec
mov
(bad)
shl
sbb
mov
jo
dec
(bad)
std
les
mov
xchg
mov
mov
xor
fldenv
retf
lahf
les
xchg
aaa
sub
icebp
and
test
pop
adc
fcmovu
into
jg
pop
mul
adc
and
cmp
jg
add
cli
mov
daa
add
neg
dec
cdq
adc
mov
mov
cs
pop
aas
ret
sub
xchg
dec
movs
cmp
jge
inc
call
and
push
lods
in
mov
leave
dec
stc
retf
pushf
imul
jmp
sar
in
add
or
inc
pop
aam
(bad)
mov
mov
imul
out
and
movs
cs
pop
mov
(bad)
dec
cli
popa
and
fidivr
mov
sub
sub
push
xor
jmp
or
dec
ret
in
cmp
xchg
aam
pusha
sbb
xchg
xor
mov
mov
loop
dec
xlat
test
mov
push
stos
retf
stc
faddp
push
lahf
shl
or
mov
jae
push
mov
xor
sbb
adc
cmp
outs
sub
mov
cdq
mov
pop
and
lods
inc
loopne
iret
in
fstp
loop
gs
cld
sahf
add
xor
jo
mov
loop
sbb
jae
jl
cmp
inc
mov
mov
push
(bad)
mov
push
fxtract
(bad)
je
and
mov
sub
stos
ins
jmp
dec
cld
sbb
mov
xchg
xor
lahf
add
and
outs
cli
xchg
les
cmps
xchg
pop
pushf
out
les
dec
inc
and
mov
mov
adc
mov
push
fcmovb
pusha
pop
dec
dec
jno
imul
cmp
shl
loope
(bad)
fcmovbe
sar
jo
or
push
cmp
call
lahf
adc
enter
mov
xchg
(bad)
in
jmp
inc
or
bound
sbb
cmp
sub
scas
adc
in
mov
test
in
arpl
pop
mov
jne
jbe
jae
out
xchg
dec
inc
fld
cwde
ja
(bad)
lds
fwait
ret
and
push
jle
mov
setb
pushf
iret
lahf
pusha
ds
sub
inc
pusha
neg
inc
inc
sub
sub
test
in
jge
lods
add
dec
ficomp
loope
mov
pusha
pop
rcr
sbb
jge
push
lock
mov
and
dec
call
cmp
retf
inc
xchg
fsub
jmp
xchg
in
movs
sbb
es
cld
imul
dec
(bad)
jecxz
push
nop
xor
icebp
cmp
add
mov
pusha
inc
popf
sti
nop
shl
ret
out
mov
(bad)
fiadd
dec
mov
retf
rcr
cmp
and
jge
and
jmp
stos
enter
sbb
neg
push
repnz
push
push
or
or
mov
add
sub
cwde
sub
xor
js
repz
dec
movs
pop
mov
loope
(bad)
xor
mov
xor
sbb
ror
xchg
popa
adc
add
push
lods
mov
inc
adc
xchg
(bad)
ror
push
cmps
jmp
inc
and
and
push
or
not
pop
hlt
dec
std
pushf
cmp
sbb
add
scas
mul
adc
cmp
std
push
and
jb
pop
cmps
shl
mov
fcomip
test
dec
mov
xchg
mov
sbb
lds
inc
inc
cmp
pop
xor
adc
stos
popf
mov
repnz
push
mov
xchg
jb
mov
or
mov
lods
lods
mov
lock
call
jp
dec
push
jbe
das
jmp
xor
sbb
lods
mov
or
popa
xchg
data16
add
adc
(bad)
mov
in
shr
(bad)
and
xchg
cmp
lods
fbld
fs
sbb
test
mov
ja
call
int
push
inc
jmp
sbb
int
in
out
push
pop
inc
push
and
dec
loope
sub
add
xchg
ja
adc
test
test
and
(bad)
lahf
inc
ret
pushf
or
inc
cmp
ja
ficomp
pop
mov
pushf
mov
or
xchg
jae
or
sbb
jge
xor
out
cmps
or
call
and
push
cli
lds
dec
clc
push
or
popa
xchg
into
popf
in
loopne
pop
mov
pop
aam
bound
scas
movs
out
lock
sbb
stos
inc
mov
je
dec
adc
mov
out
sbb
sbb
hlt
imul
push
pop
adc
mov
xchg
jbe
iret
sbb
rol
add
stc
fs
mov
cmp
clc
movs
(bad)
xchg
or
inc
shl
jnp
enter
mov
ds
xchg
pop
inc
stc
xchg
adc
mov
out
adc
push
sahf
iret
fstp
xor
push
repz
and
pop
jbe
mov
cmp
jle
jnp
jecxz
out
test
pop
mov
loope
and
mov
jle
xor
ins
sub
shl
ret
sbb
(bad)
xchg
cmp
jne
dec
ds
mov
dec
inc
mov
fisubr
pop
ja
push
push
jns
in
enter
(bad)
jb
ds
mov
cs
sar
fcomp
cmp
call
dec
fdivr
jle
call
or
mov
loope
pop
scas
sahf
adc
pusha
icebp
sbb
out
aad
xor
shl
out
or
sbb
scas
repz
push
in
loopne
push
cmp
mov
cmp
fsub
call
(bad)
aad
ss
inc
inc
jl
or
out
jg
mov
inc
(bad)
ins
js
sub
sbb
out
call
mov
mov
lea
in
hlt
(bad)
lods
or
cmc
dec
enter
fild
xchg
fs
push
push
pop
mov
mov
test
outs
sbb
cmc
jmp
pop
lea
dec
mov
in
dec
sbb
je
clc
and
sbb
mov
imul
aam
adc
or
pop
cmp
ins
and
scas
sahf
je
add
int
ror
aam
mov
jo
sbb
and
mov
pop
pusha
add
fnstcw
pushf
cmp
push
not
mov
pop
les
fiadd
int3
bound
jg
in
push
iret
pop
std
ficom
cmp
xchg
das
dec
cld
cmp
mov
ficomp
addr16
shl
and
mov
sbb
sub
lods
int3
and
mov
lahf
cmps
add
adc
push
(bad)
adc
loope
jb
or
mov
sub
in
mul
fmul
das
das
xchg
or
jnp
scas
jg
cmc
mov
leave
rol
xchg
xchg
push
mov
xchg
xchg
es
movs
xor
mov
rcr
mov
jmp
and
cdq
jae
cli
cmp
mov
into
adc
pop
push
in
jle
pop
push
stos
out
jle
je
lods
dec
ret
not
sbb
fiadd
loope
dec
pop
pop
mov
mov
adc
mov
xor
or
call
lidtd
push
xor
jle
dec
mov
or
lods
cwde
lea
xor
(bad)
pop
icebp
add
mov
mov
out
fidiv
mov
jne
and
out
retf
sub
fidiv
cmp
stos
in
pop
add
(bad)
std
sbb
pop
nop
jae
retf
nop
inc
aad
add
jo
mov
in
(bad)
sti
shr
xchg
and
push
sub
pop
or
xchg
mov
add
pop
mov
aaa
xor
or
mov
aad
cmp
in
sbb
cmp
push
outs
jb
loop
outs
scas
out
cld
xchg
mov
or
push
cmps
push
jae
sub
dec
mov
add
inc
test
fcmovu
push
in
jle
jmp
lahf
int3
pushf
mov
popf
mov
scas
in
aaa
or
pop
(bad)
push
leavew
es
adc
stc
icebp
rcl
xchg
push
adc
or
in
pop
aam
movs
mov
call
test
and
push
popf
jecxz
(bad)
adc
cmp
mov
enter
ds
pop
mov
adc
loopne
addr16
xor
add
retf
rcl
cmps
daa
adc
xchg
idiv
leave
mov
adc
add
pop
jae
stos
rcr
aaa
xchg
pop
push
mov
jmp
stc
push
enter
jbe
and
sub
cmp
sub
jge
mov
pop
loope
movs
jne
mov
pop
push
stos
popa
mov
mov
lahf
sub
mov
in
int
imul
aad
push
jl
inc
idiv
mov
or
pop
ins
(bad)
xchg
push
ror
inc
push
mov
into
ret
mov
sbb
jo
inc
and
pop
mov
xchg
cmp
std
neg
xor
sbb
jp
movs
fidiv
sbb
cmps
into
or
aam
call
movs
movs
jmp
inc
mov
cli
push
pop
mov
mov
test
retf
sub
js
pop
dec
pop
mov
addr16
cld
sbb
cmc
popf
test
xchg
cmps
movs
ss
push
sub
scas
jae
pop
int
rol
cmp
pushf
sub
or
xor
fistp
jae
into
push
push
adc
jl
or
ret
sbb
in
es
aaa
imul
repz
aas
ss
aas
test
jo
ins
test
fcom
adc
adc
and
sti
xor
push
and
xchg
sbb
mov
push
and
mov
or
movs
test
sbb
pop
iret
std
push
test
sbb
cmp
cmp
cmp
mov
xor
adc
pop
cmp
test
xor
pop
loop
scas
lds
test
mov
dec
mov
xchg
or
mov
lds
(bad)
ret
mov
test
jbe
inc
cdq
imul
pop
or
(bad)
or
mov
dec
push
ins
mov
ds
mov
jmp
cwde
add
bound
jg
pop
xor
stos
sub
pop
push
add
cmps
cmps
stc
xlat
or
or
xor
ja
sti
les
dec
movs
mov
adc
cmps
pusha
or
mov
stos
ss
sbb
orps
or
dec
dec
rol
loop
sahf
push
xchg
(bad)
repnz
fwait
and
ins
adc
ds
fcom
mov
add
pusha
jle
xor
arpl
lds
pop
lea
push
pop
add
mov
push
std
fstp
xchg
lock
shl
inc
mov
rcl
or
fs
cmp
pop
pop
add
and
push
dec
outs
in
repz
fidiv
xchg
loop
iret
pop
add
popa
inc
push
and
cmps
xchg
test
sub
ja
sub
sub
pop
cmp
push
mov
int3
push
mov
mov
es
sar
sub
cwde
xor
pushf
adc
daa
rol
inc
mov
out
cdq
(bad)
fidiv
jecxz
inc
and
xchg
inc
dec
sub
shl
test
sti
gs
jg
xchg
inc
out
sbb
cmp
xor
imul
or
stc
adc
lds
ja
call
and
scas
pop
(bad)
cs
mov
cmp
repnz
outs
jno
xchg
xchg
shr
inc
xchg
scas
call
cmp
daa
inc
xor
ret
lock
sti
test
mov
(bad)
mov
std
out
adc
in
stos
or
movs
neg
test
jg
stos
cmp
adc
jnp
add
xchg
add
mov
repz
push
sub
add
jge
xor
in
shr
das
daa
xchg
bound
dec
(bad)
(bad)
or
retf
(bad)
push
mov
stos
dec
add
add
pop
xor
or
add
jae
popa
adc
xor
push
iret
mov
add
push
cmps
aaa
adc
xor
pop
cmc
xchg
push
in
xchg
xchg
inc
clc
clc
movs
lods
inc
fisubr
into
(bad)
adc
ror
out
mov
cli
ins
movs
std
mov
dec
pop
and
mov
mov
icebp
mov
adc
jo
adc
cmp
fdiv
test
mov
je
neg
repz
push
and
jmp
sub
push
cmps
cmps
lea
cwde
mov
adc
add
fldenv
xchg
stc
jge
cmp
xchg
mov
and
jnp
cld
inc
xor
out
out
retf
or
push
dec
ficomp
dec
or
stos
jecxz
add
or
(bad)
xlat
fsubr
addr16
inc
xchg
int
repnz
pop
test
iret
rcl
stc
idiv
enter
push
scas
add
dec
sub
mov
pop
xor
cs
adc
push
mov
leave
fstp
int
xchg
add
ins
cmps
lahf
test
lods
lock
adc
iret
inc
or
sbb
daa
dec
aaa
rol
scas
adc
shr
dec
call
pop
cmp
aas
xor
(bad)
into
adc
fsub
or
loopne
jne
xchg
jb
mov
iret
sbb
fidiv
cdq
mov
fs
mov
pop
rcl
mov
cld
mov
rcr
xor
fwait
lds
enter
inc
push
std
out
adc
les
sbb
icebp
xor
in
mov
aad
jno
in
ret
outs
aas
es
jp
lahf
jmp
jbe
xchg
sbb
sbb
fisub
repnz
sub
shr
inc
jno
ret
(bad)
and
test
movs
cmp
test
test
inc
and
push
aad
sbb
in
jp
imul
and
jg
sub
inc
sub
inc
cmp
xchg
clc
ja
out
or
mov
nop
dec
jle
pop
in
pop
add
in
pushf
das
mov
sub
xchg
ss
mov
cmps
ins
push
imul
mov
pop
daa
pop
or
clc
clc
aas
push
outs
test
pop
ins
shl
lods
mov
pop
mov
movs
ins
dec
sub
cmp
fld
push
mov
jge
dec
push
movs
push
adc
pop
adc
jmp
retf
mov
mov
stos
cmp
mov
cmp
jl
into
mov
outs
fiadd
mov
mov
sub
pop
cwde
std
scas
popa
push
inc
in
cmps
push
(bad)
div
and
inc
xchg
cld
lds
add
pop
repz
test
sbb
in
es
out
retf
nop
in
mov
popa
(bad)
pop
mov
mov
lock
adc
gs
mov
in
or
adc
fbstp
xchg
lods
sub
push
mov
jb
out
jg
jmp
jl
mov
jmp
stc
out
xchg
inc
mov
ret
jg
pop
adc
mov
dec
in
repnz
cmps
fldcw
and
aad
jg
sub
lods
cli
call
fdiv
pop
arpl
ror
fsub
pop
adc
mov
cmp
mov
push
mov
inc
outs
ins
rcr
inc
mov
inc
or
stos
inc
jmp
dec
cmp
loope
inc
mov
inc
imul
xchg
jmp
arpl
mov
mov
mov
std
(bad)
pop
and
mov
dec
cmp
fmul
pop
es
in
retf
fiadd
aas
sbb
cdq
cmp
test
pop
fiadd
add
not
out
mov
push
jb
test
pop
inc
mov
add
add
cmp
aad
mov
push
shl
ss
ins
jle
mov
setbe
outs
jp
and
adc
adc
adc
hlt
pop
out
arpl
aad
imul
push
push
(bad)
inc
mov
xchg
xchg
neg
das
add
push
adc
mov
fdivp
jg
les
mov
aaa
cs
inc
pop
mov
xchg
(bad)
dec
ficomp
mov
nop
sub
jmp
je
ds
out
in
clc
jb
std
popa
int
clc
in
or
mul
dec
xor
lods
xchg
dec
inc
cmp
inc
cld
pop
cmp
icebp
sbb
fisubr
mov
retf
bound
adc
mov
pushf
mov
xor
fs
cmp
cdq
cmp
cmp
jle
cmc
inc
repz
jg
test
daa
jns
xchg
jo
scas
or
mov
sub
push
xor
out
sbb
or
test
(bad)
aam
xor
cmc
out
test
or
mov
adc
mov
jge
das
dec
ss
movs
xchg
or
scas
mov
pop
inc
aad
xchg
mov
cs
(bad)
sbb
(bad)
mov
cld
pop
cmc
jns
mov
jg
enter
push
stos
scas
inc
mov
pop
jbe
push
ret
test
cdq
inc
retf
int3
adc
pop
inc
les
inc
call
std
das
imul
xchg
sub
scas
xor
sahf
mov
xchg
fldz
or
jno
push
xchg
mov
je
gs
mov
fimul
mov
bound
cmp
mov
mov
jp
outs
(bad)
fdiv
pop
xchg
push
sub
add
push
sbb
and
stos
fisubr
inc
xchg
retf
cmp
or
das
jle
loop
jmp
test
jmp
(bad)
push
mov
stos
scas
sahf
sahf
adc
pop
in
sbb
retf
dec
fidiv
cmc
xor
jge
dec
(bad)
hlt
cmc
mov
daa
dec
loop
in
into
in
es
push
xlat
dec
fisttp
pop
add
ja
xchg
jb
pushf
test
mov
stos
inc
fmul
and
dec
retf
pop
shl
cmp
cmp
cli
xchg
jne
stos
adc
addr16
les
and
xor
xor
fstp
int3
ret
inc
or
sub
repz
repz
jge
mov
scas
sbb
xchg
inc
cmp
sub
sbb
and
push
outs
popf
or
sbb
dec
push
fisubr
mov
add
sbb
xor
inc
dec
iret
jmp
out
shl
mov
sar
cmps
aam
push
sub
(bad)
mov
xor
pop
sub
loop
sbb
mov
dec
jl
ins
add
add
inc
fisubr
ins
imul
pop
jp
mov
fstp
jg
push
pop
out
sub
loopne
dec
test
fcom
std
test
mov
mov
xor
shl
into
outs
cdq
push
jb
loop
sub
xor
add
xor
icebp
sbb
imul
and
jl
jge
retf
fiadd
(bad)
push
jmp
outs
jmp
(bad)
cli
cmps
jmp
sbb
scas
sbb
pop
xchg
sbb
jb
push
frstor
dec
and
hlt
push
adc
lods
data16
inc
jmp
jg
lock
je
xchg
jecxz
mov
xchg
pop
jo
call
jns
or
fnstcw
sar
adc
add
sub
jae
arpl
or
je
jnp
mov
xchg
outs
mov
movs
jmp
xchg
scas
stc
or
inc
cmp
(bad)
sub
mov
cmp
mov
aad
add
(bad)
rcl
(bad)
(bad)
sbb
pop
fcmovu
cmps
pop
sbb
inc
pop
or
cmp
push
mov
or
cmp
out
sar
aas
sub
xchg
ret
int
paddd
pop
(bad)
imul
inc
in
sbb
sbb
cs
sub
(bad)
shl
loope
test
push
push
iret
icebp
nop
pop
mov
jle
cmc
hlt
cmps
call
pop
jnp
out
test
dec
dec
lds
dec
jecxz
xchg
inc
and
aas
mul
mov
cmp
test
aas
adc
shr
mov
(bad)
fsub
or
mov
xor
ins
jmp
dec
(bad)
xor
pop
je
inc
popf
xor
pop
fiadd
aas
adc
test
push
cmp
dec
scas
push
cmps
fnsave
inc
push
mov
mov
int
sub
inc
sbb
jno
jne
and
adc
and
xchg
adc
sti
pop
jo
jne
mov
stos
push
jb
loop
mov
xchg
(bad)
popa
cmps
jo
std
mov
add
scas
xchg
ror
mov
std
and
push
or
std
add
xchg
aam
cmp
inc
pop
sbb
inc
add
aam
scas
add
inc
inc
adc
adc
leave
inc
fadd
push
lahf
addr16
dec
int3
sbb
hlt
imul
shl
push
sub
ja
in
repz
add
mov
(bad)
mov
test
and
movs
movs
shl
xor
mov
js
jp
add
imul
mov
imul
stos
int
(bad)
mov
add
loop
inc
sub
cmps
push
loope
mov
adc
xchg
fisttp
dec
ror
sbb
mov
enter
jmp
xor
ret
push
sub
dec
std
cmp
cmps
and
(bad)
push
jmp
lahf
add
pushf
stos
lods
fiadd
dec
fnstsw
in
dec
icebp
cmp
push
and
ds
inc
lock
cli
outs
popa
mov
jno
pop
clc
dec
shl
fld
pushf
in
(bad)
xchg
sub
fwait
xchg
push
or
add
mov
jmp
xchg
cmps
icebp
push
mov
ret
aam
jb
movs
cmps
adc
sbb
in
pop
inc
push
pop
cmps
jb
out
arpl
retf
dec
sbb
ins
xchg
(bad)
lods
hlt
or
bound
pop
imul
movs
loope
test
popf
pop
cmp
popf
mov
ss
or
imul
dec
jmp
scas
rol
mov
adc
and
outs
aad
mov
pop
outs
cmp
inc
loope
mov
jnp
or
sub
ins
cwde
mul
mov
fcomp
jno
inc
iret
aas
adc
shl
dec
out
add
scas
cmp
loope
rol
lods
and
out
std
xor
scas
cli
xor
stos
fld
das
jae
lods
retf
and
lods
or
mov
in
sub
sub
retf
test
retf
jge
or
jb
sar
add
mov
push
push
inc
jmp
adc
xchg
test
add
sub
cmp
xchg
mov
push
cmps
arpl
xchg
mov
sahf
or
mov
push
sub
test
cmp
enter
jp
outs
pop
push
lea
cmp
clts
xor
ja
ja
stos
test
mov
jmp
mov
or
jne
xchg
aaa
inc
rol
lods
aas
xor
into
(bad)
arpl
lods
inc
xor
shl
fisttp
inc
test
and
add
test
sub
repnz
pop
les
outs
or
idiv
lock
scas
popf
(bad)
lods
sub
outs
mov
push
rcl
or
add
and
iret
mov
sub
xchg
dec
mov
shl
fldcw
mov
movs
(bad)
push
imul
jae
mov
sub
jg
xchg
jbe
sub
fsub
mov
(bad)
in
cmp
add
push
xacquire
adc
fs
mov
push
adc
jmp
outs
mov
inc
int3
jp
pop
jecxz
mov
cmp
fisttp
pop
pop
in
dec
fdiv
loop
xchg
jbe
sub
aad
inc
ds
pop
in
lea
dec
sub
dec
cmp
out
jne
bound
int
stc
pusha
add
ds
retf
cmp
fidiv
daa
and
jb
(bad)
cmp
pushf
into
repz
(bad)
xlat
xor
mov
jle
mov
mov
add
pop
sub
mov
cmps
int
push
jno
lods
fsubr
pop
mov
add
fld
mov
xchg
jecxz
pop
pusha
mov
stos
je
jno
and
pusha
fs
mov
out
retf
adc
std
leave
xlat
add
fwait
mov
stos
mov
shr
pop
cmps
call
jl
jnp
bound
sub
das
push
not
add
cmp
cmp
xor
mov
lds
mov
add
mov
or
dec
mov
out
leave
push
shl
out
cmp
inc
jns
add
cwde
mov
add
in
daa
mov
jne
mov
mov
pop
dec
mov
mov
ret
test
jmp
in
std
or
push
ror
lods
imul
mov
jmp
mov
sub
jmp
lock
mov
jge
stc
inc
and
push
daa
xor
push
test
xor
cli
gs
jo
push
cmp
cmp
or
test
ja
cdq
ror
jae
das
out
dec
cmps
movlps
fimul
push
into
je
mov
xchg
xchg
sub
movs
cmp
int3
repz
lock
jp
push
mov
fs
imul
and
fnstsw
mov
pop
les
sub
lds
sub
jns
imul
aam
int3
lea
cmp
pop
jecxz
fldenv
inc
pop
fcomp
out
sahf
pop
mov
shr
lods
pop
mov
out
pop
fwait
cmp
arpl
add
jecxz
aad
fimul
hlt
ror
aaa
test
pop
xor
sub
cmc
adc
ss
dec
ret
mov
jecxz
fistp
dec
push
in
in
mov
cld
test
mov
jl
jg
mov
test
arpl
loope
cmp
loope
fmul
or
cwde
mov
ror
dec
xlat
mov
pop
jecxz
lahf
inc
cmp
ret
dec
into
xchg
loope
push
push
jmp
inc
out
jnp
and
mov
xchg
xchg
sbb
mov
add
jg
loopne
mov
out
outs
aaa
in
fild
es
(bad)
sbb
push
pushf
out
cmp
jmp
fnstsw
sbb
inc
fild
push
cmp
add
xlat
aaa
xchg
jle
sub
inc
fwait
out
push
lods
aad
mov
sub
dec
cdq
ins
pop
cmps
jae
push
sbb
lds
ror
adc
cs
xchg
ret
xor
jmp
(bad)
mov
jo
fistp
xlat
adc
scas
sbb
add
jne
fnstsw
mov
push
push
(bad)
mov
out
leave
sub
xor
iret
fdivp
mov
pop
jg
cmp
and
mov
mov
sti
je
add
add
(bad)
cmp
loopne
ja
or
sub
out
mov
popa
dec
add
xchg
add
mov
jmp
or
(bad)
shl
popf
and
fs
mov
cmps
sub
push
je
dec
aas
xchg
push
int
sbb
mov
sub
test
jg
sub
jmp
xor
in
int3
cmp
push
add
xchg
cmp
ja
test
jae
je
ins
dec
jle
inc
test
inc
pop
test
adc
test
outs
push
lock
push
xlat
add
nop
sub
mov
sbb
pop
mov
cmp
hlt
adc
loop
pop
in
sbb
lods
popf
cmp
push
adc
mov
cmps
jl
cli
add
imul
add
call
jae
adc
fnsave
hlt
jnp
and
fnstsw
jo
pusha
jns
inc
or
inc
jmp
(bad)
imul
imul
icebp
jbe
enter
xor
pop
xchg
push
mov
xor
mov
xchg
xchg
hlt
jle
enter
xchg
stos
pop
lods
and
(bad)
push
xor
aas
pusha
(bad)
inc
sti
jle
xchg
in
jle
adc
adc
cmp
sub
jae
(bad)
in
push
mov
std
xchg
cmp
loopne
mov
or
lea
mov
cmp
pop
(bad)
repz
push
mov
fwait
(bad)
int
mov
xchg
daa
fst
xchg
scas
mov
stos
std
popa
xor
outs
retf
fld
mov
jae
into
fisttp
shl
inc
or
test
push
xchg
hlt
push
xor
ret
mov
jl
ins
mov
test
nop
xchg
std
jmp
or
xchg
xor
aas
test
inc
sub
jp
mov
jbe
out
mov
lods
jb
xchg
and
mov
jmp
jne
mov
in
ja
(bad)
retf
cmps
xchg
sub
imul
nop
cwde
mov
retf
pop
aas
jae
rol
test
fnstsw
sub
out
inc
test
jo
fdiv
xchg
aas
mov
stc
xchg
in
imul
shl
imul
mov
mov
ds
scas
in
pop
mov
(bad)
jb
pop
pusha
out
out
ins
gs
cwde
out
xchg
es
dec
call
cdq
jae
mov
inc
add
ins
test
(bad)
mov
pushf
xlat
and
push
add
retf
cmp
cmp
out
dec
adc
retf
xchg
xchg
jp
dec
fisttp
adc
xchg
je
pop
test
les
mov
or
pop
or
fs
xchg
ret
test
and
inc
mov
fimul
cli
jmp
lahf
movs
out
imul
inc
and
test
add
lods
jnp
dec
in
(bad)
lock
inc
or
fcom
pop
test
sbb
adc
mov
cmp
mov
lea
in
and
mov
pop
test
test
pop
xchg
add
cmp
cmps
ins
pop
adc
mov
fstp
jg
int
shl
mov
jnp
jo
ret
cmps
cs
sbb
jne
and
pop
mov
push
int
scas
into
inc
dec
jmp
clc
jmp
out
ror
test
repz
loope
lds
cdq
cmp
gs
jg
fs
cld
les
enter
push
mov
inc
mov
cmps
add
es
aaa
or
push
add
cmps
sti
je
ins
(bad)
mov
xor
add
jbe
retf
bnd
fistp
in
jae
pop
xchg
or
rcl
jb
jmp
retf
sbb
push
jae
jg
add
repz
dec
ret
add
mov
retf
mov
or
mov
pop
mov
fmul
add
popa
dec
arpl
paddb
xlat
xor
push
ds
loopne
sbb
cmp
loop
movs
and
cmp
dec
xlat
xor
inc
fdiv
mov
sbb
ins
cmp
xchg
(bad)
loop
fdivrp
inc
ror
loope
arpl
push
sbb
pop
cld
mov
fidivr
test
push
lea
je
or
and
call
hlt
cmp
ins
add
adc
mov
test
dec
mov
cmps
outs
dec
jecxz
outs
mov
rcr
mov
pop
ins
aam
add
stos
imul
ja
jmp
call
aad
push
xor
pop
cmp
cwde
jmp
mov
push
sbb
xchg
mov
or
add
add
mov
pop
or
jg
scas
sub
test
mov
or
push
mov
outs
sub
and
xchg
pop
xor
mov
xabort
sbb
xchg
(bad)
stos
sbb
gs
je
mov
popf
pop
pop
mov
sti
arpl
mov
xchg
jmp
jnp
jae
test
pop
or
dec
and
mov
or
test
adc
sbb
sbb
fidiv
add
cmp
cmp
jbe
sub
adc
fimul
pop
out
hlt
adc
aaa
sub
nop
les
bound
out
jmp
stos
sub
sbb
retf
into
les
mov
and
ss
fisubr
mov
pop
inc
in
cmp
sar
jbe
leave
inc
sub
popf
jo
mov
lock
mov
adc
clc
cmps
nop
adc
dec
outs
lods
sahf
xchg
daa
fistp
lods
sahf
std
pusha
or
(bad)
daa
sti
xor
fiadd
adc
leave
pop
or
(bad)
out
push
shl
jg
pop
retf
pop
cs
dec
aaa
int3
and
mov
(bad)
or
loope
push
adc
jmp
xor
mov
and
add
dec
mov
pop
bound
pop
das
cmps
adc
mov
daa
cwde
loopne
cs
xchg
leave
rcl
repnz
sbb
mov
sbb
or
out
pop
jp
imul
xor
push
or
sbb
xor
sbb
mov
scas
sub
pushf
bt
sub
pop
push
jl
sub
or
call
pop
mov
push
sbb
fnsave
test
jbe
int
lods
mov
cmp
fsubr
cwde
dec
xor
repz
xchg
loopne
(bad)
mov
add
loopne
sbb
sbb
dec
mov
add
mov
dec
adc
(bad)
cwde
sbb
add
call
jo
and
pop
or
mov
test
js
add
ret
cs
push
mov
call
mov
daa
cmps
hlt
(bad)
scas
and
shr
inc
pusha
xchg
push
lods
jg
call
out
cmp
repz
push
pop
mov
inc
imul
sub
jle
or
in
sbb
mov
retf
sti
inc
adc
jmp
mov
push
call
pushf
mov
inc
xchg
mov
arpl
neg
jo
inc
xchg
push
imul
in
fdivr
xchg
stos
fadd
cmps
loope
es
leave
xchg
xchg
into
mov
cmp
jp
leave
sbb
xlat
inc
mov
jae
jp
aad
xor
sub
lods
outs
popf
and
add
dec
scas
or
test
sub
add
adc
pop
jmp
test
aad
jnp
xchg
fsub
push
cmp
outs
fwait
loope
cmp
cli
push
aaa
fs
in
pop
int
xchg
push
jnp
bound
sub
test
aaa
xlat
xor
xor
sbb
pop
add
mov
pusha
add
sbb
xor
outs
mov
int
icebp
addr16
test
adc
cmp
and
aaa
out
ret
out
jb
es
sti
push
cmp
xor
xor
mov
dec
mov
inc
jmp
int3
mov
leave
pop
and
inc
push
(bad)
jo
fadd
lock
repnz
xchg
rcr
jne
or
adc
pop
push
cmp
cmp
ja
jns
pop
lea
cli
jmp
xchg
out
mov
test
pop
push
(bad)
in
mov
mov
int
adc
cmp
adc
imul
pop
imul
push
movs
bound
add
sbb
je
ds
sub
ror
jnp
addr16
mov
xor
mov
xchg
aam
daa
xor
jecxz
cmc
test
jno
add
stc
jno
and
stos
cmps
mul
inc
jne
sub
cld
std
add
mov
jnp
mov
dec
cmp
jecxz
or
jecxz
or
sti
outs
sbb
mov
fwait
add
data16
adc
xlat
fwait
xchg
loop
pop
daa
aad
pop
and
test
mov
or
mov
or
adc
pop
jp
or
inc
lods
stc
mov
fstp
retf
xchg
out
or
jp
inc
jmp
add
das
fdiv
aas
std
bound
aas
outs
cmc
mov
cmps
dec
dec
and
sar
shl
mov
xor
cmp
inc
retf
gs
mov
sar
adc
stc
mov
push
cmp
add
sub
or
xor
cmp
or
inc
jmp
gs
call
sar
out
and
dec
xchg
push
stc
dec
idiv
xor
sbb
xchg
jns
mov
in
daa
xchg
cmp
jecxz
jl
xor
(bad)
sbb
fs
adc
leave
sbb
stos
pushf
shr
mov
sbb
push
out
sbb
mov
test
add
lods
add
jne
repnz
or
dec
sub
test
cmp
fiadd
(bad)
and
frstor
aad
sub
push
jmp
push
cmp
cmp
push
(bad)
push
or
sub
mov
shr
or
pop
push
into
iret
or
add
fadd
inc
punpcklbw
and
xor
das
and
aad
jns
jg
cs
(bad)
ss
popa
add
dec
enter
adc
pop
mov
pop
sub
(bad)
cmp
popa
sub
es
mov
fstp
sub
int3
cmp
add
stos
mul
aad
sbb
stos
jmp
(bad)
or
cmps
test
add
mov
mov
nop
sub
shr
fcom
adc
inc
xor
xchg
xchg
mov
fsubrp
mov
fbld
push
mov
dec
fst
lods
in
ret
cmp
aad
cmps
fdivr
cvtps2pi
cwde
jmp
jnp
pop
sbb
movs
and
dec
pusha
jne
cld
jnp
daa
jmp
loop
mov
fiadd
rcr
push
clc
call
mov
inc
aam
test
push
loope
mov
test
push
inc
pop
pop
dec
jns
dec
rol
ret
cwde
imul
xchg
lahf
lahf
cmc
btc
mov
scas
sub
into
push
and
xor
cmps
fmul
call
sub
inc
mov
or
in
mov
sub
shr
mov
imul
mov
aam
xchg
ins
push
add
mov
bound
hlt
das
or
stc
out
add
cmp
out
pop
adc
ret
mov
mov
inc
mov
aam
xor
gs
jge
mov
push
mov
mov
ret
enter
sub
jg
xchg
mov
(bad)
in
xchg
and
cwde
lea
sbb
xchg
jnp
dec
pop
add
ins
jecxz
mov
xor
movs
ror
popa
jmp
cmp
(bad)
mov
add
jnp
cdq
jg
retf
les
lds
in
loopne
in
test
sub
sbb
jmp
dec
jno
std
lds
dec
sub
sbb
aad
cmps
xchg
repz
arpl
imul
mov
loop
(bad)
cmp
jae
nop
dec
mov
and
mov
je
movs
xchg
adc
loopne
out
and
adc
int3
mov
cmp
or
sub
pop
repz
jbe
ins
jg
mov
xor
ss
sbb
in
mov
mov
cmp
push
or
jns
loope
xchg
imul
dec
jne
jle
add
pop
arpl
jmp
dec
scas
sbb
pop
into
addr16
xchg
daa
rcl
add
in
cmc
cmc
jl
ins
lock
sbb
pushf
dec
bound
fidiv
mov
(bad)
xchg
retf
popa
mov
ins
retf
fsubrp
fcom
mov
stos
mov
mov
pop
sub
sub
pusha
jnp
retf
sbb
sbb
dec
add
xor
daa
popf
push
ds
stos
or
lea
add
imul
(bad)
cwde
push
and
and
cs
inc
add
cmp
daa
xor
jae
dec
sbb
cs
adc
sbb
adc
in
aaa
lock
ja
dec
inc
inc
loope
addr16
jl
jnp
push
dec
(bad)
cmp
iret
mov
push
adc
pop
sub
movs
jp
dec
out
(bad)
mov
cld
cmp
aad
daa
out
mov
data16
sbb
in
scas
mov
std
push
mov
fst
dec
(bad)
fnsave
lods
inc
mov
mov
in
repz
int3
js
mov
and
ret
aad
ja
imul
dec
ss
or
retf
loopne
xor
pop
outs
js
jno
pop
sbb
adc
add
add
ja
xchg
ss
shl
ja
scas
mov
mul
into
dec
(bad)
leave
mov
sub
and
fs
nop
dec
jbe
cmp
dec
pop
cmp
mov
or
mov
push
xchg
ja
push
in
or
int
pop
push
dec
push
gs
mov
stos
pop
mov
in
popa
imul
das
in
(bad)
out
pop
jp
or
sti
xor
xchg
mov
fldcw
sub
push
ret
inc
ja
adc
mov
mov
fcmovne
shl
push
mov
(bad)
or
xchg
and
push
mov
cmp
add
out
jmp
sbb
push
adc
sbb
xor
add
mov
dec
idiv
xchg
cmc
(bad)
icebp
xor
pop
js
mov
in
aaa
(bad)
lea
mov
push
rcr
sbb
pushf
fnstsw
imul
sbb
test
cmc
mov
dec
rcr
aas
mov
push
repz
ss
push
cmps
fwait
icebp
jb
xchg
and
xchg
fdivr
sbb
(bad)
cmp
shr
or
jae
rcr
cmps
sub
gs
xchg
add
bound
jmp
addr16
mov
scas
pop
add
jnp
and
sahf
mov
and
and
and
fsubr
sub
gs
stos
push
popf
cmp
js
mov
test
add
jno
sbb
ret
jae
inc
add
and
out
adc
xor
imul
push
mov
adc
rol
jbe
xchg
cmps
xchg
or
xor
or
xchg
js
inc
ins
pop
repz
inc
out
add
mov
push
cs
mov
mov
mov
add
pop
dec
xchg
dec
xor
sbb
leave
inc
inc
not
pop
jge
ror
inc
(bad)
lea
pop
and
pop
inc
arpl
leave
cmp
jne
popf
stc
xchg
and
sub
xlat
mov
outs
and
and
movs
rcr
sbb
ins
(bad)
push
or
mov
mov
pop
inc
outs
or
xor
icebp
jae
add
adc
inc
and
iret
fild
(bad)
int
inc
dec
retf
and
aad
dec
cdq
jg
cmp
adc
mov
sbb
push
loop
daa
adc
test
push
sub
stos
sbb
add
scas
cmp
sub
(bad)
imul
inc
mov
pop
ficomp
(bad)
scas
jmp
pusha
cmps
jl
fs
pop
pop
xchg
or
ss
sub
push
jnp
jg
mov
xor
aam
lock
inc
jb
push
sbb
mov
sub
cmp
xchg
push
xor
movs
inc
outs
addr16
cld
mov
test
xchg
jl
sbb
out
js
shr
mov
mov
scas
or
push
je
imul
leave
inc
xchg
ror
push
lds
jne
lods
lock
xor
fs
inc
cs
cld
sub
xor
adc
sahf
test
shl
add
fistp
cld
mov
push
xor
cld
cmp
fs
or
dec
es
push
test
sbb
lahf
lods
push
cmc
or
jno
out
jp
pop
cmps
or
loopne
ret
(bad)
clc
xchg
fisub
adc
add
push
rol
cmc
jb
repnz
jg
shr
(bad)
(bad)
ins
xor
mov
sar
ja
ror
pop
jmp
iret
stc
cli
xchg
cdq
shl
push
test
mov
inc
mov
fidiv
es
fdivrp
pop
jl
mov
dec
xchg
clc
dec
inc
in
imul
push
icebp
lods
scas
(bad)
pop
pop
shl
mov
int
cmp
jae
pop
jg
push
(bad)
mov
popa
retf
mov
mov
pop
xchg
out
imul
pop
pop
std
(bad)
jno
movs
add
test
push
(bad)
and
sar
(bad)
jg
and
sbb
fiadd
psubsb
adc
cmp
sub
or
cmps
dec
mov
int
inc
movs
icebp
inc
inc
imul
mov
push
push
or
cld
out
lds
inc
xor
sbb
or
lahf
(bad)
mov
mov
inc
adc
and
stos
daa
sbb
adc
mov
push
mov
mov
out
mov
mov
inc
sbb
inc
stos
in
data16
adc
xchg
es
mov
sub
adc
mov
pushf
mov
cld
(bad)
fimul
pop
xor
fs
and
jne
sbb
dec
fmul
inc
js
jle
dec
test
mov
pusha
(bad)
push
push
jbe
pop
jmp
adc
xchg
lock
js
repz
dec
test
dec
bound
loopne
inc
pop
xchg
call
imul
xor
and
loopne
sbb
lahf
jmp
cmps
retf
movs
test
jbe
and
xchg
popf
or
push
or
mov
loop
pop
out
add
retf
repz
cmps
xchg
out
add
adc
loope
in
in
sbb
movs
pop
cld
fld
push
push
inc
mov
stos
(bad)
jle
jne
aas
into
push
mov
movs
iret
mov
pop
fstp
mov
or
loope
movs
push
pusha
sbb
cs
push
nop
fucomp
int
and
jmp
dec
arpl
xchg
push
cmp
bound
inc
inc
fcom
add
sub
test
jne
inc
pop
sub
push
adc
aam
pop
stc
or
fs
jge
imul
mov
aam
xlat
ret
inc
pusha
in
mov
gs
inc
test
jmp
push
arpl
mov
mov
aaa
push
(bad)
retf
inc
push
ins
pop
in
div
pop
ss
mov
out
hlt
lds
lea
mov
je
xchg
add
nop
scas
sbb
jae
imul
jns
xchg
add
in
retf
inc
sti
loope
popf
push
xchg
pop
xor
in
mov
xor
outs
dec
ins
mov
sub
or
fadd
(bad)
cs
gs
jmp
sahf
test
imul
add
add
mov
int
sub
cmps
and
sub
mov
dec
cmps
das
rcl
fcomp
xchg
and
adc
sbb
(bad)
repz
xor
movs
rol
pop
into
lods
ficom
mov
bound
test
jecxz
add
cmps
sbb
jmp
dec
stos
pop
mov
mov
fs
pop
call
rcr
push
jo
pop
arpl
sbb
mov
scas
in
xchg
pop
js
mov
sub
or
mov
pop
and
pop
stc
or
cs
aad
adc
das
mov
jne
push
xor
shr
aaa
stos
push
pop
add
sub
jmp
hlt
inc
imul
adc
fsubr
jo
and
iret
mov
mov
ss
pushf
jo
mov
sub
adc
(bad)
jmp
and
push
in
sti
xchg
add
mov
push
int3
clc
out
xchg
jbe
repnz
addr16
xor
js
xor
sbb
pop
push
pushf
mov
popf
xchg
add
xchg
jmp
inc
sub
aas
mov
test
nop
fst
lods
push
scas
imul
sbb
push
xchg
push
and
mov
adc
pop
cmps
sbb
repnz
ins
jb
outs
mov
movs
cmp
mov
sub
aad
movs
sbb
das
(bad)
jns
rcl
jmp
and
(bad)
in
ss
cmp
adc
cmp
test
xchg
mov
ds
push
mov
sub
pop
les
xchg
push
cmps
and
fcomp
aam
push
cmp
xchg
cli
mov
fisub
cdq
imul
std
rcr
pop
cdq
lea
loopne
pushf
sbb
mov
adc
mov
(bad)
mov
pop
cmp
int3
retf
dec
mov
mov
sti
mov
sub
adc
mov
lods
mov
ret
sbb
ins
push
push
adc
mov
stos
inc
std
inc
mov
and
in
sahf
out
ror
call
mov
cs
test
cmps
sbb
test
jmp
lock
xchg
mov
xchg
sahf
(bad)
and
xchg
push
cmc
inc
jb
imul
call
loope
rcl
not
xchg
les
stos
or
inc
inc
add
aam
imul
test
xor
out
dec
pusha
outs
int
lahf
ins
cdq
repnz
jbe
and
sub
sbb
lods
outs
pop
xchg
cmp
inc
pop
ret
jb
in
jmp
outs
cmps
icebp
loopne
mov
pop
pop
into
pop
arpl
inc
inc
sbb
scas
popf
js
test
pop
test
xchg
stos
inc
loop
in
aas
fisub
sub
mov
inc
scas
mul
xchg
inc
adc
push
pop
inc
sbb
mov
inc
je
push
movs
in
push
xor
push
cmp
ja
int3
dec
and
cli
push
mov
movs
stos
xor
add
pushf
xchg
inc
gs
stos
call
call
sub
mov
sti
push
or
cmps
sub
cmp
and
(bad)
(bad)
in
pop
xchg
fst
or
pop
fs
adc
lock
sti
pushf
addr16
inc
push
adc
mov
aaa
(bad)
inc
fild
adc
cmp
sti
mov
push
push
call
sbb
pop
jecxz
stos
in
imul
cmp
dec
mov
push
cmps
sar
inc
and
xchg
stc
cmps
xchg
cs
sar
and
push
lahf
ins
leave
push
add
sbb
add
cmp
adc
push
sub
fdivr
mov
aas
retf
push
movs
mov
mov
mov
fucompp
mov
in
mov
je
xor
retf
test
imul
sbb
repz
mov
out
clc
pop
dec
aas
pop
sub
mov
std
outs
call
push
in
ds
push
jo
repnz
push
inc
mov
push
mov
test
adc
ins
or
fistp
dec
(bad)
xor
sub
dec
cmps
ror
pop
out
mov
fwait
sub
or
mov
mov
mov
aam
mov
test
inc
sbb
dec
sub
sbb
xor
dec
inc
mov
popf
fcmovnu
inc
test
icebp
xchg
jecxz
fwait
fwait
push
scas
xchg
sbb
or
jmp
icebp
or
pusha
cld
pop
out
sub
or
loop
rcl
push
popa
(bad)
jbe
or
pusha
xor
(bad)
sbb
lahf
repz
xchg
jnp
ss
data16
inc
inc
mov
jbe
mov
xor
aam
sub
inc
jg
(bad)
cmc
sbb
popf
adc
inc
loopne
outs
daa
sbb
std
test
hlt
jp
cmovbe
lods
in
jle
mov
stos
hlt
mov
dec
mov
in
loop
(bad)
js
cli
jbe
fidiv
push
cmc
aas
enter
adc
lock
mov
push
out
mov
cmp
daa
push
mov
adc
mov
cmp
test
mov
retf
jae
ret
xor
sahf
lea
pop
(bad)
pop
movs
cmp
jns
pop
inc
fistp
mov
retf
test
mov
sub
(bad)
dec
fldcw
mul
xor
pop
ja
cmp
cmp
inc
retf
add
loop
jo
add
imul
xchg
lea
movs
jp
(bad)
out
sub
mov
nop
add
inc
mov
int3
pop
jo
das
mov
sbb
leave
push
neg
and
fs
in
sub
pop
imul
sahf
cmps
cmp
and
jg
in
mov
mov
inc
xor
push
or
add
gs
fs
push
and
jnp
jmp
(bad)
sahf
ja
or
int
dec
mov
daa
sti
stos
mov
js
jmp
adc
add
mov
das
add
inc
scas
mov
lds
cmovno
mov
mov
add
xor
enter
outs
(bad)
jle
xchg
dec
loopne
dec
call
push
jl
inc
pushf
xor
mov
xor
cli
and
push
retf
mov
out
ins
inc
sbb
xchg
jns
fs
inc
call
push
add
rcr
xchg
popa
mov
sub
std
inc
sub
mov
outs
cli
popf
inc
loopne
mov
mov
idiv
xor
push
adc
mov
loope
in
fwait
rcr
sbb
mov
shr
addr16
jge
int
xchg
jl
pop
cwde
outs
and
jne
push
out
dec
lds
and
sub
mov
test
pop
and
jbe
adc
push
scas
or
dec
sti
cli
inc
xchg
jae
imul
cdq
and
pop
inc
fld
inc
xor
popf
fmul
cmc
imul
and
outs
mov
scas
inc
pop
mov
movs
loopne
lahf
pop
jae
pop
int3
or
pop
ins
pop
popf
push
out
aas
pop
xor
fild
call
mov
in
push
loopne
cdq
loopne
aam
cmp
inc
sbb
pop
pop
pop
mov
repz
sbb
mov
mov
pop
xchg
add
movs
mov
xchg
dec
pop
les
dec
test
out
daa
outs
call
add
clc
and
cmp
sub
fist
out
jno
add
cmp
dec
es
mov
jecxz
mov
jecxz
pop
pop
(bad)
add
out
into
jl
call
xchg
jmp
ret
cmps
or
test
sub
jae
nop
sbb
pop
std
push
xchg
sub
push
shr
pop
(bad)
icebp
xor
cmp
jmp
jnp
stos
test
cs
cmps
mov
ret
cmp
ins
rol
addr16
or
in
dec
jmp
out
mov
inc
mov
(bad)
sbb
sub
xlat
ret
movs
xchg
mov
cwde
sub
imul
movs
adc
mov
sub
test
push
xchg
(bad)
xchg
jle
dec
scas
movs
jae
dec
jo
cmp
jbe
xchg
test
and
pusha
cdq
xchg
or
pop
test
jle
adc
lea
nop
fidivr
mov
pop
cmp
mov
test
sbb
push
cmp
out
push
dec
fldcw
xchg
mov
dec
popf
(bad)
in
and
nop
aas
cmps
sbb
push
ss
pop
push
inc
icebp
cdq
and
fld
ret
xchg
(bad)
fnstcw
stc
fwait
in
xchg
dec
movs
fmul
ror
jb
push
pop
xchg
fdiv
cmp
loopne
mov
out
push
test
test
jmp
adc
mov
(bad)
test
inc
in
sbb
xchg
mov
adc
enter
sahf
sti
mov
and
jl
mov
repz
pop
dec
mov
in
js
sub
adc
out
xchg
sbb
popa
dec
mov
push
std
xchg
aam
(bad)
bound
jle
cmp
and
pop
sub
popf
push
fild
sbb
ss
iret
sbb
or
das
imul
not
ja
inc
out
in
inc
sbb
jbe
and
add
jne
mov
adc
(bad)
clc
jmp
std
jp
and
mov
jge
imul
and
fadd
and
pop
cmp
std
push
sub
loope
test
lods
outs
push
cmps
rcr
xchg
hlt
pop
xchg
test
fld
pop
xchg
or
fwait
das
add
mov
loope
dec
(bad)
enter
fstp
lods
jp
mov
test
inc
and
push
mov
pop
loop
mov
shr
dec
shr
dec
(bad)
cmc
mov
call
push
mov
push
out
cmps
cmp
int
scas
mov
sbb
sub
sub
jmp
rcr
inc
mov
es
xor
or
jns
outs
dec
xor
push
jmp
test
or
cmc
(bad)
mov
cmps
push
mov
adc
pop
pop
(bad)
(bad)
adc
mov
out
mov
lahf
dec
cmps
xor
outs
movs
and
retf
push
data16
push
test
int3
aam
push
jmp
pusha
cmp
pop
sahf
inc
in
mov
and
shl
lds
(bad)
fistp
pushf
retf
and
cmp
rcl
out
in
mov
fild
jg
mov
out
das
in
fcomp
int
pop
(bad)
sub
dec
mov
pop
add
add
cmp
jb
mov
jae
jb
add
scas
sub
cmp
ins
in
cld
cmp
adc
inc
mov
jecxz
mov
sub
les
xor
mov
sbb
cmp
ds
cwde
sub
dec
xor
dec
xchg
mov
push
mov
(bad)
jo
adc
lahf
inc
pop
adc
xchg
mov
idiv
ror
out
mov
sbb
pop
ret
lods
sbb
pop
nop
jne
and
xchg
in
ror
pop
adc
add
cs
sub
xor
pop
in
pop
and
push
ja
ds
and
xchg
movs
retf
pop
repz
and
ret
sbb
and
adc
outs
scas
lea
push
clc
rol
mov
and
imul
in
sti
call
test
out
xor
out
inc
clc
mov
xor
add
pop
lock
cmp
int
cwde
aas
push
pop
mov
mov
nop
(bad)
fcom
retf
aas
add
in
jecxz
cmp
clc
mov
jo
dec
inc
dec
jl
loopne
retf
ja
clc
mov
clc
dec
adc
pop
xor
mov
call
or
adc
lahf
ss
ja
mov
test
and
cld
mov
mov
fs
aam
jmp
lahf
mov
add
cs
xchg
push
test
xchg
mov
in
test
mov
add
enter
or
call
add
inc
jae
mov
sub
ror
gs
inc
(bad)
ret
dec
jo
and
inc
xor
ss
mov
mov
es
cli
loope
out
cli
into
stos
or
imul
jae
stc
sub
js
or
mov
push
ss
(bad)
xchg
mov
sub
lods
push
(bad)
xchg
mov
jl
jno
ret
out
mov
add
sti
jg
ja
cmp
mov
pop
inc
test
leave
xchg
and
jmp
fnsave
sbb
and
(bad)
repnz
test
sar
sbb
hlt
add
xor
cli
inc
enter
imul
inc
xchg
push
cmp
mov
push
fmul
enter
xor
pop
shl
pop
pop
stos
(bad)
mov
fldcw
add
(bad)
and
pop
push
inc
cmps
les
aam
imul
lahf
js
or
cmp
mov
inc
and
cmps
retf
sub
lock
jmp
dec
push
loop
xor
push
(bad)
push
in
xor
push
dec
leave
sti
sub
pop
popa
out
pop
neg
daa
xor
jg
sub
inc
(bad)
repz
xchg
mov
inc
sbb
ret
test
mov
aaa
out
fadd
shl
push
push
les
nop
enter
outs
adc
mov
(bad)
xchg
jne
mov
xor
xor
test
xor
dec
lahf
fisttp
xacquire
mov
xchg
adc
xchg
mov
mov
sub
dec
sub
dec
push
lea
cwde
push
mov
test
mov
mov
jbe
enter
movs
and
test
add
cmp
xor
mov
fdiv
xchg
sbb
sub
lock
nop
xchg
mov
push
loop
aad
jno
push
hlt
add
push
dec
aad
fwait
fwait
or
sbb
loopne
mov
push
loopne
add
inc
cmp
sar
jle
xchg
into
call
pop
mov
jo
imul
jmp
sbb
pop
mov
aaa
mov
outs
sar
frstor
je
dec
xchg
push
mov
push
mov
bound
popa
(bad)
cmp
jl
cmp
mov
cmps
dec
sbb
sbb
adc
and
inc
ret
cmp
test
adc
push
mov
jno
lahf
and
in
pushf
jmp
or
mov
xchg
dec
xor
mov
adc
mov
cmp
dec
in
enter
and
adc
sbb
add
sbb
sbb
bound
leave
mov
cli
push
shl
lods
loope
fcomp
aas
cmp
xor
and
mov
out
dec
sub
xchg
out
dec
aaa
cmp
cmp
shl
and
out
sbb
stc
bound
fcom
clc
rcr
lea
jg
mov
fild
nop
and
sbb
push
mov
push
inc
fcomp
mov
cwde
mov
jle
mov
ja
repz
xchg
inc
sar
or
jno
pop
pop
sub
jmp
retf
loop
mov
stc
fabs
inc
xchg
mov
cmp
mov
push
push
inc
xchg
les
ret
pop
in
jle
outs
add
ret
movs
xlat
mov
(bad)
mov
imul
cmp
shr
mov
out
xchg
push
test
xchg
sbb
mov
loop
pop
mov
sub
retf
sbb
repz
pusha
loopne
add
test
addr16
jle
jmp
mov
adc
pop
in
xor
test
out
xchg
push
jge
adc
cs
es
sub
cld
loope
js
add
scas
mov
arpl
popa
ins
test
lahf
(bad)
lahf
push
mov
ret
lods
mov
pop
add
cld
mov
jns
dec
or
retf
pop
jecxz
jno
sti
in
adc
arpl
mov
lock
rcl
aad
pop
push
or
jp
sub
sbb
xor
xchg
sub
jmp
or
dec
sar
cmp
dec
pop
or
inc
sub
xor
mov
outs
push
sar
mov
sar
jl
inc
outs
or
fcomi
leave
sub
xor
mov
mov
mov
adc
ror
pop
shl
add
inc
arpl
outs
xchg
adc
dec
mov
xchg
xor
(bad)
in
cld
mov
lock
mov
arpl
adc
pop
jecxz
int
mov
(bad)
mov
push
fwait
dec
hlt
daa
dec
in
sbb
enter
jmp
ret
sbb
mov
movs
xor
dec
icebp
cld
aam
outs
sub
cmp
pop
aad
cmps
add
mov
(bad)
mov
mov
sahf
sahf
adc
and
xchg
and
clc
mov
mov
stc
retf
mov
mov
sub
pop
into
int3
adc
jle
cmps
xchg
dec
(bad)
(bad)
mov
fcomi
jmp
jo
mov
and
add
lods
loope
push
outs
(bad)
stc
leave
fsub
and
cmp
shl
mov
sub
inc
cmp
sbb
cmp
pop
in
cdq
out
pop
mov
jne
je
adc
and
fwait
aaa
js
sbb
jae
loope
or
mov
aaa
mov
mov
fldenv
push
nop
arpl
hlt
pop
cmps
(bad)
cmp
sbb
aaa
aad
ss
xchg
int3
mov
jbe
mov
sti
or
les
jmp
mov
imul
push
loop
or
sbb
pop
inc
out
pop
or
xchg
and
iret
(bad)
scas
rcr
sbb
ins
int3
jmp
mov
out
dec
fnstcw
jo
outs
add
std
test
or
xchg
lahf
ss
adc
or
cld
loop
test
jmp
fistp
and
mov
sub
jns
adc
pop
add
fild
es
jno
retf
test
ins
mov
nop
pop
out
retf
sbb
xor
mov
hlt
ror
scas
mov
stc
mov
add
test
dec
push
xor
movs
test
jg
add
and
push
inc
dec
mov
sti
ss
sub
mov
je
call
fxch
add
mov
xor
es
popf
imul
jbe
sar
cmps
dec
addr16
jge
add
shr
jmp
repnz
clc
pop
movs
push
retf
mov
je
test
jns
je
cwde
iret
mul
fcmovbe
movs
sub
inc
lahf
cmp
in
int
aam
inc
std
push
test
cmp
pop
ss
lods
rcl
cmp
sbb
fstp
pop
iret
mov
(bad)
xor
mov
pop
inc
sub
jo
(bad)
xchg
or
pop
pop
push
sbb
fimul
jno
test
aaa
jecxz
(bad)
sbb
js
mov
jl
stos
dec
mov
mov
addr16
inc
arpl
xor
mov
ins
cmps
mov
daa
fisubr
icebp
movs
jecxz
sub
addr16
dec
push
jbe
jmp
jns
pcmpeqd
int
loopne
cli
lock
sub
push
pusha
mov
cmp
or
push
push
xor
inc
jecxz
rcr
adc
pop
scas
xchg
gs
sbb
cmp
mov
xchg
jle
xchg
fild
mov
hlt
dec
cmps
push
jnp
sbb
nop
and
stos
ss
cmp
push
xor
mov
mov
jns
pop
loop
mov
mov
in
lahf
pop
pop
out
sub
or
jmp
cs
and
sbb
nop
enter
mov
add
fwait
mov
bnd
das
sbb
test
dec
xchg
xchg
not
lods
dec
lock
je
push
mov
rcr
mov
shl
bound
icebp
cmp
call
loope
outs
or
in
jmp
xlat
push
popf
out
and
pop
sar
sar
xchg
xchg
outs
cmp
pop
mov
and
xlat
les
or
mov
sbb
stc
sub
addr16
loope
xor
xchg
mov
popf
xor
sbb
stos
popa
push
lock
out
and
cmp
cmp
gs
jmp
jp
mov
mov
fs
mov
mov
sbb
mov
adc
mov
repz
dec
cdq
xchg
cmp
fcom
sub
sub
mov
jns
sbb
adc
jl
das
sub
and
and
dec
je
outs
(bad)
out
jle
dec
jp
je
repnz
aad
cwde
rcl
bswap
test
daa
test
ss
mov
mov
jl
push
sub
jmp
outs
gs
rcl
pop
int
mov
push
cmp
les
call
xchg
jmp
in
jns
icebp
ficom
loope
xor
gs
mov
jbe
jns
ds
std
push
jle
pushf
mov
cmp
pop
cmps
jo
imul
arpl
mov
aas
mov
shl
mov
(bad)
add
mov
popfw
in
xor
popa
cmp
sub
cld
xchg
pop
mov
and
mov
outs
int3
stos
pop
adc
mov
les
and
test
cmc
jp
mov
fs
pushf
adc
xchg
push
adc
icebp
and
fld
inc
dec
jae
add
adc
add
stos
addr16
stos
in
sbb
adc
mov
inc
shl
dec
sbb
call
xor
cmp
push
dec
pop
cmp
mov
icebp
push
jl
pop
retf
adc
jnp
sahf
jp
(bad)
pop
enter
push
pop
sahf
fild
shr
movs
add
in
(bad)
push
mov
inc
mov
rol
scas
in
rcr
dec
xchg
or
jmp
aaa
dec
dec
cld
mov
and
mov
mov
or
mov
and
sbb
pop
mov
lahf
or
mov
scas
inc
cmc
pop
or
pop
mov
adc
push
inc
push
inc
ins
dec
xor
call
daa
push
loop
(bad)
in
sbb
cdq
jecxz
dec
adc
shl
scas
shr
sub
mov
adc
dec
aam
test
inc
stos
jmp
jne
(bad)
dec
sub
scas
sub
int3
ucomiss
outs
cmp
test
inc
(bad)
arpl
cwde
push
mov
(bad)
and
out
push
addr16
rcr
ss
fstp
jne
lods
mov
dec
dec
jbe
cmp
push
shl
xchg
repz
fisubr
jg
mov
sbb
jo
cwde
sub
dec
scas
lds
ficom
pop
loope
xor
std
push
pop
dec
mov
int
in
lea
stos
adc
adc
outs
loop
test
sub
cwde
jge
sub
sub
stos
(bad)
jg
add
lds
stos
pop
clc
addr16
cmp
inc
sub
jbe
cmps
mov
movs
xchg
call
pop
sbb
rcl
int3
push
outs
shl
xlat
icebp
jbe
push
es
fwait
fwait
mov
pop
sahf
add
mov
fs
jge
scas
jle
inc
mov
repz
inc
jp
out
sti
ret
or
xchg
test
xor
cmp
mov
dec
mov
sahf
lods
rcl
addr16
nop
mov
jg
mov
sbb
(bad)
(bad)
mov
jl
push
jnp
aaa
sub
sbb
rol
and
push
push
mov
not
movs
cmps
inc
aad
loopne
sub
jnp
inc
and
add
pop
add
cmp
mov
mov
inc
cwde
not
xchg
lods
push
(bad)
movs
cmp
pop
mov
mov
aaa
add
in
mov
scas
pop
jbe
dec
adc
xchg
xchg
imul
addr16
or
sub
jge
lds
sbb
push
lock
mov
pop
sub
xor
inc
lds
imul
test
pop
bnd
das
jmp
into
mov
inc
sub
mov
into
fst
jb
pop
cmp
call
mov
jne
fisttp
imul
adc
dec
jne
loop
mov
pop
into
aad
cmp
out
or
add
pop
je
leave
sbb
pushf
xchg
push
and
aaa
in
push
jmp
xor
pop
dec
mov
in
data16
gs
outs
mov
cmp
jge
lahf
sbb
push
inc
xchg
int
sub
aad
pop
adc
add
int3
pop
jo
test
inc
jg
pop
cmp
fwait
adc
xor
sahf
lahf
add
xchg
inc
cmp
push
jb
and
lock
inc
or
int
es
je
adc
adc
add
(bad)
dec
(bad)
(bad)
and
fadd
aam
cld
adc
push
aaa
out
fnstenv
add
ret
fsub
mov
pusha
jmp
call
aaa
add
xchg
push
jle
xchg
mov
sub
mov
rcl
lss
ret
lock
sub
and
jmp
jnp
adc
shr
cld
or
dec
sti
dec
jmp
mov
(bad)
cmp
dec
enter
jns
adc
(bad)
fist
jle
icebp
mov
cld
mov
and
mov
pop
div
mov
dec
fld
les
ret
cmp
pop
sbb
adc
retf
cwde
hlt
ret
or
into
addr16
pop
loopne
aad
pusha
cmp
cmps
mov
pushf
dec
dec
mov
xlat
xor
mov
addr16
(bad)
in
or
leave
mov
lods
dec
test
test
dec
cdq
jae
mov
in
mov
jno
lods
pop
mov
ins
cld
xor
into
aad
ret
ds
(bad)
cmp
dec
sbb
xchg
xchg
add
jl
(bad)
fimul
sub
or
hlt
std
lods
jg
jo
ret
jbe
out
ds
in
mov
xchg
test
sbb
push
fiadd
cli
into
lods
rcl
sti
jge
ret
adc
or
jl
in
jno
test
test
es
jno
leave
(bad)
sbb
lds
shr
test
xor
fadd
cmps
aaa
cli
mov
or
cmp
int
retf
mov
mov
loop
mov
pop
pop
dec
mov
xlat
enter
in
bound
pop
cmc
or
test
aas
cmps
and
outs
sub
sub
or
rol
sbb
push
xor
xor
bound
(bad)
adc
(bad)
lods
aaa
gs
jne
sar
push
xor
out
xor
sub
daa
stos
inc
jb
dec
in
lds
gs
mov
cli
shr
gs
xchg
cmp
mov
xor
dec
pop
cmps
mov
imul
dec
neg
mov
jl
cmp
inc
adc
cdq
xor
mov
mov
femms
cmps
jno
lds
push
inc
jae
add
sti
cmp
push
xchg
cmp
retf
adc
jns
out
push
push
outs
loop
or
mov
mov
add
dec
or
pusha
mov
push
ja
jl
and
add
cmps
imul
fsubr
and
mov
add
leave
cs
add
cmps
mov
lahf
lea
mov
dec
lods
lods
push
push
fisub
pop
push
cli
popf
pop
lock
loope
ror
cmp
ss
js
push
addr16
xchg
cmp
cwde
jg
cmc
pop
rcr
push
rcr
(bad)
pop
xlat
xchg
cmps
fwait
or
sbb
aam
add
sub
ins
mov
aaa
push
mov
(bad)
shl
add
test
pop
loop
pop
gs
out
mov
sar
out
enter
add
and
inc
ret
outs
inc
mov
in
lods
sbb
push
pop
sahf
mov
repz
push
lock
inc
cld
rcr
inc
mov
imul
test
pusha
mov
mov
mov
mov
push
jo
sub
mov
ins
in
outs
mov
xchg
jns
mov
shl
aas
mul
and
sbb
push
mov
cld
fstp
lods
inc
lds
js
adc
inc
into
and
fmul
test
loop
loopne
adc
out
sub
retf
fdiv
clc
scas
sar
push
xchg
je
pop
stos
(bad)
jp
or
cmp
xor
es
retf
ja
jecxz
pop
jp
pop
arpl
fldenv
push
jnp
or
(bad)
dec
pop
mov
pop
adc
inc
xor
pop
pop
sub
jecxz
outs
movs
loopne
mov
jecxz
loope
inc
bnd
mov
or
dec
jge
bound
inc
lods
retf
nop
xlat
mov
sub
jnp
add
in
daa
out
jbe
repz
(bad)
dec
(bad)
test
push
mov
ror
jecxz
test
cmps
sub
pop
dec
pop
or
scas
add
in
dec
arpl
xor
loope
(bad)
inc
inc
xlat
xor
clc
xchg
fst
inc
dec
out
sub
push
adc
and
out
aas
into
mov
pop
retf
or
imul
cmp
adc
sahf
fwait
and
xor
jo
and
xor
stos
cli
cmp
mov
mov
pop
add
out
add
pop
(bad)
repnz
pop
js
iret
xlat
call
fdiv
xchg
pop
push
movs
loop
mov
test
ficomp
aam
xor
fist
data16
push
loope
sbb
sbb
(bad)
fiadd
sbb
fcmovne
ficom
or
das
test
cmp
fwait
cld
or
repnz
jns
test
mov
stc
jecxz
dec
inc
add
jbe
outs
movs
mov
gs
aaa
jmp
imul
jg
std
scas
mov
cmp
lds
outs
inc
icebp
jae
fadd
hlt
mov
adc
inc
mov
jge
stos
lock
mov
and
ret
push
ds
cli
sbb
scas
cmp
ins
in
xchg
into
sbb
jmp
sub
outs
and
rcr
stos
mov
leave
int3
xchg
out
shr
lahf
sub
mov
adc
or
fnstcw
sub
jmp
test
add
cmp
sbb
pop
les
scas
pop
inc
inc
aad
jecxz
mov
jbe
mov
or
movs
iret
xchg
cmp
cmp
rcl
cmc
not
and
sbb
int3
loopne
int3
xchg
sub
xor
jmp
xchg
mov
test
or
ss
jmp
mov
test
xor
sub
imul
jmp
pop
xor
adc
sbb
sub
std
xor
gs
or
cmp
repnz
nop
(bad)
fbld
in
imul
jo
and
test
int3
jne
sbb
into
and
inc
mov
ins
xor
sti
xchg
lea
sub
test
out
inc
(bad)
shr
ja
fnstenv
fsubr
cmp
dec
jmp
daa
jg
and
cmp
xchg
bound
fistp
pop
cmp
inc
(bad)
push
in
shl
mov
xchg
clc
es
shl
push
popf
int3
push
cwde
cmp
js
repz
movs
sub
adc
das
push
lods
mov
jle
push
in
and
lods
test
icebp
dec
sti
jns
sub
inc
iret
mov
movs
dec
ss
rcr
add
mov
out
loop
div
imul
adc
push
fidivr
in
pop
push
hlt
xchg
add
ret
mov
cdq
rcl
nop
sbb
sar
fwait
arpl
push
pop
xor
aas
mov
mov
call
push
test
test
pop
and
adc
loopne
retf
and
xchg
add
push
mov
sbb
pop
jmp
xor
xor
cmps
jecxz
push
cmp
dec
jl
(bad)
call
sbb
ret
xchg
ss
mov
imul
cwde
popf
pop
xor
pop
sti
adc
sub
stos
xchg
or
mov
cwde
lds
mov
jg
aas
pop
sti
jmp
cmps
in
jg
sub
jmp
dec
jle
call
pop
add
push
retf
pop
mov
pusha
push
xchg
movs
fadd
loopne
fwait
lahf
dec
fisubr
cwde
push
cmp
cmp
or
xor
sti
sbb
xor
pop
test
dec
mov
inc
hlt
sti
xchg
dec
fsub
jmp
daa
out
push
cmp
xchg
outs
push
pusha
test
or
lahf
out
sbb
cmp
xchg
push
lods
dec
and
icebp
repz
(bad)
sub
dec
xor
xchg
gs
pop
and
sbb
add
fidivr
push
test
fbstp
out
jg
out
imul
fild
and
push
mov
jmp
sti
xchg
cmp
push
push
mul
mov
cld
sub
rcl
pop
retf
ins
lea
mov
push
push
sub
movs
xor
loope
leave
cdq
gs
or
dec
push
sbb
sbb
xchg
cdq
dec
mov
add
lahf
add
test
or
sbb
mov
pop
cmp
cmp
cmp
sti
sub
repnz
stos
sbb
xor
sub
sbb
fcmovne
push
(bad)
sub
push
push
ficomp
inc
mov
xchg
xchg
jns
dec
addr16
fcmove
out
(bad)
pop
or
rcl
(bad)
fcomp
fs
out
comiss
mov
loop
not
push
jecxz
ss
pop
xchg
shl
mov
push
jmp
sub
mov
mov
repnz
mov
add
or
mov
out
popa
ja
pushf
movs
and
jle
jecxz
lods
into
test
mov
jecxz
xchg
sbb
(bad)
fldenv
pop
loope
push
outs
inc
mov
aas
mov
jl
movs
push
ss
fidiv
jmp
cmp
movs
xchg
push
out
pop
in
cmps
mov
adc
mov
aas
aad
mov
dec
add
pop
loop
inc
repnz
pop
jne
in
inc
cmp
mov
out
push
pop
pop
(bad)
pop
in
call
pop
inc
pop
addr16
inc
dec
push
add
and
mov
pop
inc
pop
mov
add
sub
sbb
stc
outs
bound
mov
scas
dec
test
ret
es
leave
xchg
sbb
cmp
sbb
sub
push
and
loope
add
cmp
pop
out
sbb
mov
push
pop
push
sbb
ret
cs
mov
push
jb
xor
or
lods
push
lfs
fadd
inc
sbb
mov
add
in
in
imul
push
cmp
stc
sahf
push
mov
jne
cwde
mov
ror
xor
(bad)
jno
ret
mov
pop
ret
int3
inc
xchg
arpl
rcl
inc
ds
bound
xchg
test
ins
adc
loop
in
and
mov
in
dec
sahf
cdq
cdq
fidiv
cmp
pop
dec
mov
sahf
xlat
out
je
or
mov
daa
mov
push
and
push
ins
jae
xchg
push
dec
pop
mov
sbb
fisttp
into
jg
push
out
inc
bswap
repnz
or
nop
pop
lahf
adc
xchg
push
cdq
push
sti
xchg
push
retf
loopne
inc
add
test
sub
das
jmp
add
in
hlt
sti
push
out
push
fcmovu
lock
fstp
lds
fstp
mov
arpl
xchg
fsub
scas
jmp
shr
ret
xchg
jge
fisttp
cmc
jp
push
adc
into
cmps
jp
xor
xor
add
jmp
inc
and
fst
adc
inc
clc
push
dec
daa
les
jo
sar
into
in
lods
fcom
jmp
outs
enter
cmp
mov
inc
and
jp
popa
fnstsw
fs
mov
iret
lea
dec
addr16
popf
inc
jmp
in
push
xchg
test
sbb
in
push
outs
ins
cld
fisttp
push
pushf
inc
imul
add
dec
rcl
das
pop
rcr
test
mov
mov
outs
pop
in
lahf
pop
and
int
neg
dec
ja
call
fst
(bad)
fisub
or
(bad)
push
enter
xchg
(bad)
in
or
int3
mov
dec
cmp
jge
xchg
sub
jns
mov
mov
sub
add
sbb
cmp
scas
ror
shl
ins
adc
(bad)
jge
jo
push
mov
jg
cli
or
xlat
std
cmp
or
addr16
(bad)
aad
js
sub
daa
adc
aas
xlat
push
(bad)
xor
dec
or
jne
mov
sbb
push
(bad)
lea
push
loop
int3
cmp
scas
mov
call
enter
pop
fdiv
jle
push
call
xchg
xor
(bad)
cwde
dec
clc
sti
mov
adc
aas
(bad)
push
jecxz
or
loop
ret
enter
repnz
inc
lea
jae
or
clc
daa
mov
js
or
or
int3
and
rol
(bad)
jecxz
cmc
xor
xchg
push
dec
xchg
jp
xchg
cmp
mov
lock
movs
fild
mov
and
or
xlat
mov
mov
jns
mov
add
cmp
stos
loopne
xor
mov
jne
iretw
jp
pushf
sub
cmps
mov
je
movs
pop
mov
xchg
cmp
push
dec
xor
jmp
test
repnz
int
pop
xor
push
xchg
fcomp
xchg
lea
push
or
lahf
aad
(bad)
clc
jg
in
push
sub
mov
movs
xchg
(bad)
lahf
mov
(bad)
mov
test
pop
inc
popf
sbb
ror
add
imul
jmp
ss
push
fst
retf
dec
and
lock
cwde
fwait
mov
add
lea
and
gs
ja
xlat
loope
popf
mov
or
movs
repnz
lahf
gs
push
cdq
sbb
ror
das
xor
mov
inc
inc
cmps
sbb
outs
adc
ins
arpl
das
pop
sti
jp
fisttp
push
repnz
cmp
sti
jns
in
or
xchg
loope
inc
and
bound
jae
fwait
jmp
imul
stos
repz
jae
imul
fidivr
sahf
pop
loop
and
je
mov
mov
clc
je
mov
mov
cdq
push
pop
outs
dec
adc
scas
and
or
cmp
and
aaa
push
scas
dec
movs
mov
mov
sbb
aam
mov
mov
cli
or
scas
xor
pop
add
cwde
imul
loope
mov
sub
call
mov
pop
ret
aas
es
fist
jnp
sub
cmp
leave
daa
mov
sahf
pop
pop
jae
cs
and
and
call
mov
jb
dec
scas
loop
push
mov
dec
pop
mov
call
stos
daa
rol
push
mov
push
(bad)
in
test
push
add
mov
jge
and
lea
repnz
pop
push
shl
inc
sbb
test
dec
lods
rcr
push
sub
(bad)
xchg
cmp
enter
cmp
je
adc
jl
jmp
xchg
sbb
loope
jle
dec
mov
jp
inc
fld
fstp
fnstenv
popa
push
sbb
mov
rcl
rol
inc
and
arpl
test
add
inc
xchg
(bad)
and
sbb
xor
retf
push
inc
and
pusha
es
xchg
cmps
mov
lea
jg
imul
pop
mov
clc
jmp
mov
(bad)
lock
ret
add
and
lds
inc
cmc
inc
fimul
inc
ss
xchg
fwait
enter
push
addr16
jl
and
(bad)
dec
xor
inc
mov
inc
jle
adc
push
enter
ror
jne
das
fwait
aaa
cmp
push
mov
mov
adc
fnstsw
and
aas
push
push
mov
xchg
sbb
cld
and
or
cld
or
ds
push
cmps
push
cmp
call
mov
jae
pop
int
arpl
sub
aam
dec
sbb
sub
dec
sub
out
mov
into
aam
rcr
(bad)
xor
mov
jl
call
xchg
out
dec
bswap
(bad)
xlat
dec
mov
stos
nop
cmp
xchg
test
stos
push
bound
ins
fdivrp
imul
test
inc
pop
out
inc
cli
rcr
fs
call
push
mov
sub
into
ja
bound
and
(bad)
adc
dec
jmp
imul
test
icebp
iret
sbb
mov
dec
pusha
xchg
inc
mov
loope
imul
fstp
aam
xlat
inc
push
push
test
sbb
fsubr
sbb
lock
fadd
mov
in
xor
dec
ficom
in
in
adc
aad
daa
(bad)
out
daa
cmp
or
retf
(bad)
push
xor
adc
push
into
cmp
add
sub
fxch
sub
inc
cmp
jmp
jns
mov
mov
inc
xchg
add
mov
xlat
addr16
cmps
xor
lea
mov
lahf
cwde
mov
xchg
sbb
or
repnz
aam
sub
sbb
jae
adc
retf
(bad)
sub
ds
leave
adc
mov
sahf
(bad)
xchg
adc
movs
jmp
push
sub
mov
fucomi
out
jne
scas
loop
scas
sub
xchg
int3
push
cmps
test
cld
clc
xor
mov
lods
add
and
not
iret
jb
in
cli
jg
pop
pop
mov
test
gs
xlat
in
shl
test
test
pop
(bad)
fsubp
inc
mov
lds
rcl
xchg
adc
retf
inc
xchg
pop
cmp
int3
aam
mov
xchg
shl
scas
cmp
push
cmp
cli
pop
pop
mov
repnz
mov
xchg
xlat
popa
dec
in
(bad)
cmc
pop
mov
dec
aas
jmp
setg
mov
mov
lods
dec
adc
sub
(bad)
int
div
scas
icebp
pushf
daa
xchg
mov
js
mov
jmp
lock
lahf
fisttp
cmp
jb
sbb
mov
dec
lods
or
nop
adc
jne
add
add
cmps
aam
inc
and
(bad)
mov
mov
jae
lods
inc
push
popf
rcr
je
push
sub
lea
xchg
clc
movs
cld
bound
xor
mov
popa
xchg
pushf
pusha
jnp
(bad)
sbb
sbb
inc
or
dec
jo
cmp
imul
nop
inc
cli
lahf
sar
xchg
loop
sbb
jle
fs
outs
xor
mov
inc
pop
mov
jecxz
sbb
cmp
add
int3
(bad)
mov
xor
lods
fild
push
fcom
in
sub
scas
jecxz
out
add
adc
inc
fmulp
es
repz
into
movs
(bad)
outs
lods
inc
pop
neg
out
fdiv
xlat
stc
and
sub
push
push
and
ss
and
dec
pushw
mov
sub
(bad)
rcr
add
mov
jp
scas
cmp
xchg
loopne
cmp
inc
out
fadd
mov
shl
and
shr
add
xor
loope
pop
mov
and
cmp
loopne
mov
imul
movs
dec
inc
pop
rep
push
cs
push
xchg
leave
clc
rcr
mov
mov
mov
inc
xor
js
cmps
neg
jnp
movs
pop
mov
cwde
lea
fdiv
or
(bad)
ins
(bad)
cld
iret
jge
push
jl
cmp
mov
dec
add
pusha
xchg
fisub
fs
mov
dec
xchg
rcl
out
fisub
cmp
out
in
mov
fwait
(bad)
adc
cmp
lods
dec
mov
leave
ret
pop
in
int3
cli
and
lock
pop
pop
dec
int
aas
cmps
retf
inc
stos
xchg
adc
int3
xchg
jae
ins
push
dec
inc
jno
jno
ins
not
shr
jg
(bad)
dec
jmp
in
sub
shr
mov
sahf
add
mov
bswap
jns
movs
fwait
inc
stc
mov
out
hlt
fwait
cmps
lods
shr
loope
test
outs
mov
mov
add
sub
mov
popf
jae
std
(bad)
stos
arpl
pop
or
mov
mov
(bad)
xor
sbb
adc
stc
hlt
jno
ret
mov
fcom
mov
xor
push
xlat
push
mov
cdq
scas
and
adc
lds
cwde
mov
xchg
cmp
xchg
mov
(bad)
mov
mov
imul
(bad)
int
std
xor
add
fs
add
into
lahf
push
mov
shr
js
and
jl
sbb
or
adc
fwait
dec
or
imul
cmps
pop
aas
sbb
movs
push
add
arpl
shl
mov
test
jbe
jnp
loop
push
jmp
fwait
xor
pusha
(bad)
lock
xlat
(bad)
sub
mulps
in
mov
cmp
fld
or
xlat
pushf
ror
mov
mul
sbb
adc
add
mov
pop
(bad)
retf
imul
xchg
ror
in
mov
mov
mov
pop
aas
fcomp
jns
push
xchg
pop
les
sub
jae
jmp
loope
jg
pop
leave
cwde
adc
es
jp
mov
bound
inc
add
(bad)
nop
bound
mov
and
and
and
test
pop
in
(bad)
neg
aas
out
shl
push
ror
or
cmps
jp
fwait
aam
cmp
stos
pop
je
xor
ret
add
ja
dec
dec
je
xor
jo
int
mov
inc
xchg
push
mov
fmul
daa
mov
inc
jae
in
sub
xchg
lahf
icebp
adc
std
inc
sti
xor
loop
outs
lea
mov
and
daa
adc
xchg
inc
fiadd
jno
sbb
inc
inc
iret
hlt
out
sbb
cmp
iret
xchg
mov
mov
jbe
mov
xor
mov
xchg
mov
push
xchg
jg
int3
jmp
push
sub
jge
jle
mov
retf
mov
mov
sahf
and
outs
daa
cmp
(bad)
and
sbb
ds
mov
outs
ss
lds
repz
dec
std
add
cmp
xor
and
adc
fcomp
jl
popf
jle
sub
jl
xchg
cwde
mov
ror
mov
inc
mov
out
push
fwait
mov
mov
xchg
xchg
push
les
cld
xor
into
fs
inc
xor
rol
pushf
push
jno
push
js
ret
cmps
or
test
sar
sbb
pop
into
or
add
cmp
je
test
inc
adc
mov
xchg
inc
lds
in
cld
pop
sbb
add
adc
xor
scas
jo
pop
or
xchg
fistp
and
cmc
inc
mov
mov
xor
mov
add
sahf
jge
jp
push
int3
and
pop
mov
jl
xchg
ds
pop
ficom
sub
or
pop
mov
xor
cmps
stos
jb
call
aad
xor
out
inc
cli
(bad)
in
pushf
data16
inc
int3
mov
iret
and
leave
fld
inc
xchg
lods
add
add
push
stos
cdq
xor
xor
in
fsub
inc
in
stos
lds
xor
dec
cmp
inc
outs
inc
pop
sub
icebp
(bad)
addr16
ss
gs
fdivp
iret
mov
popf
neg
sub
lods
clc
push
jno
pop
fistp
xchg
and
mov
scas
mov
jbe
inc
mov
adc
daa
ret
inc
loopne
mov
push
cmp
ret
out
push
adc
out
cmp
dec
inc
dec
dec
or
pop
sub
ret
adc
cwde
ret
and
add
(bad)
fist
mov
jmp
cmps
popf
sbb
sub
sets
and
movs
and
mov
bnd
push
push
sbb
jl
push
ret
cmc
(bad)
out
popa
mov
xchg
mov
pop
je
dec
sub
sub
add
pop
adc
mov
popf
push
push
pop
mov
jns
and
in
cli
gs
js
mov
sbb
mov
sbb
popa
jp
fs
jns
xor
icebp
xchg
daa
jmp
ds
jns
stc
jo
(bad)
inc
mov
inc
xor
ins
(bad)
lock
outs
mov
cs
fs
out
hlt
gs
xchg
dec
inc
and
mov
and
stos
repz
cli
imul
(bad)
in
dec
push
pushf
lock
inc
pop
loopne
aaa
mov
mov
inc
sbb
sahf
jbe
xor
fnstcw
enter
pushf
sub
and
(bad)
rcr
lods
fstp
stos
int3
xor
dec
push
pop
pop
retf
out
mov
ficomp
mov
mov
xor
sbb
dec
in
pop
(bad)
mov
and
lods
and
jge
sub
mov
push
scas
test
loope
or
adc
sub
loop
pop
aam
test
stc
adc
repnz
scas
adc
stos
imul
fldcw
call
or
cmp
aaa
or
fst
out
out
mov
sbb
sub
cmp
imul
sbb
mov
test
xor
ffreep
rcl
leave
mov
push
inc
pop
pop
push
rol
xchg
nop
mov
test
dec
push
leave
adc
test
or
jno
cmc
ja
not
push
pop
cmp
push
dec
(bad)
sar
sahf
rcr
adc
add
mov
or
cmp
xlat
inc
sbb
xchg
mul
sub
ss
stc
and
daa
mov
enter
mov
lds
ds
adc
and
xor
les
test
mov
cmp
xor
inc
(bad)
mov
data16
jne
and
lock
iret
mul
mov
inc
ins
xor
jno
lods
adc
cmp
sub
aaa
jg
and
inc
pop
mov
add
xor
iret
or
movs
lock
mov
sub
lea
xor
(bad)
out
lds
jb
push
lds
movs
inc
cmp
lods
mov
sub
push
leave
fsub
iret
outs
js
push
xchg
cs
push
mov
jl
dec
(bad)
mov
pushf
push
push
sub
repz
fimul
shl
push
pop
adc
or
jp
iret
and
cmp
xchg
fdivp
dec
add
mov
xor
scas
in
jbe
aas
retf
push
out
or
or
cmp
mov
dec
mov
hlt
push
call
clc
push
fisub
push
bound
add
not
sub
mov
inc
leave
jns
arpl
clc
xchg
mov
js
dec
sub
jns
aad
sub
or
scas
sub
in
and
xchg
adc
mov
adc
cmps
mov
fwait
xchg
ss
nop
and
int3
les
xchg
arpl
enter
and
cdq
ja
xor
aas
mov
cli
mov
xor
bound
xchg
(bad)
mov
adc
(bad)
retf
(bad)
pushf
xor
pusha
lahf
(bad)
jo
xor
dec
test
push
sbb
shl
dec
imul
aam
mov
adc
inc
sbb
push
and
mov
sub
loopne
adc
push
inc
and
call
jo
mov
mov
mov
or
addr16
ror
rcr
ror
cmpxchg
or
push
push
cmp
push
mov
jns
repz
hlt
mov
mov
fdecstp
xor
ss
inc
dec
retf
jns
xor
push
sbb
retf
or
mov
sub
xor
(bad)
dec
xchg
xor
pop
pop
in
mov
xchg
pop
(bad)
nop
leave
add
mov
cwde
les
and
push
(bad)
div
stos
popa
mov
gs
xchg
in
inc
jl
add
mov
in
jmp
ins
lock
daa
mov
xor
sub
jne
out
sahf
movs
(bad)
adc
loopne
jb
mov
fnstenv
jl
fcos
cmp
mov
or
xor
stos
dec
sahf
mul
stc
mov
mov
jne
inc
dec
repnz
mov
int3
cmp
inc
in
enter
inc
retf
outs
js
jge
fwait
jb
jnp
lods
mov
mov
jne
push
call
scas
sahf
imul
lods
addr16
je
mov
cmp
mov
lods
sar
sbb
iret
jecxz
cli
mov
push
mov
ins
outs
sahf
hlt
add
int3
ror
mov
shl
test
les
cmp
pop
inc
ins
aam
neg
out
mov
lods
cli
push
mov
sar
mov
jmp
movs
lea
les
xchg
aad
xchg
outs
retf
retf
imul
cmc
pop
mov
repnz
lea
out
add
enter
push
call
push
adc
mov
mov
or
lock
das
sbb
test
dec
ja
push
and
inc
popf
ret
push
dec
push
jbe
add
out
in
xchg
jmp
pop
mov
je
mov
push
pop
fld
pop
push
aaa
fcomp
sbb
inc
(bad)
setle
loope
bnd
scas
xchg
(bad)
mov
lods
das
sbb
cmps
jbe
stc
inc
scas
and
sub
jb
bound
mov
cmp
add
fwait
xchg
loopne
stos
pushf
outs
xor
shr
cs
sbb
sbb
(bad)
pop
(bad)
cld
sbb
aam
or
xchg
xchg
mov
jl
jmp
inc
fist
cmc
out
mov
cmp
test
or
cmp
add
mov
pop
mov
test
push
ins
imul
rol
enter
lods
sbb
xchg
mov
out
sub
call
enter
inc
ins
xchg
popf
and
jmp
and
hlt
leave
stc
sahf
movs
out
xchg
gs
pop
pop
mov
out
cmp
imul
mov
xchg
add
inc
push
xchg
cmp
cld
stc
pop
cmp
mov
cdq
cmps
mov
pusha
jmp
mov
inc
pop
fcomp
cmps
mov
(bad)
int3
push
jo
dec
pop
(bad)
into
loope
es
sub
fs
inc
pop
stc
sub
data16
dec
jecxz
inc
jb
call
push
in
popf
loopne
dec
lahf
mov
pop
jns
adc
add
fwait
pop
dec
push
sbb
scas
dec
pushf
mov
mov
mov
(bad)
pand
cli
jmp
mov
mov
xchg
loop
add
fidivr
mov
mov
in
ss
imul
sbb
cmps
jecxz
push
sbb
lea
imul
mov
das
inc
test
fs
cdq
jno
or
fistp
jno
lods
add
adc
xlat
mov
jge
data16
or
repnz
ins
jo
pop
cwde
push
ror
daa
jo
xchg
push
test
mov
mov
jmp
nop
mov
xchg
sub
sahf
mov
jmp
dec
gs
xchg
pop
or
movs
mov
loop
sahf
mov
ja
add
dec
push
or
xchg
dec
lock
cvtdq2ps
div
xchg
movs
dec
clc
movs
hlt
mov
imul
xlat
mov
outs
add
or
cmove
pop
cld
sbb
shr
inc
jmp
push
in
cmp
repz
jae
loope
(bad)
fldcw
imul
add
int3
inc
dec
mov
push
(bad)
out
test
cdq
xor
rol
xchg
dec
add
cmp
or
pop
xchg
ret
mov
ins
out
aaa
or
in
push
xchg
gs
and
mov
sbb
sub
xor
adc
sti
adc
ret
leave
push
subps
rcl
xor
sub
rcr
dec
icebp
push
add
loop
sub
pop
or
adc
pop
mov
mov
(bad)
push
jmp
pop
ret
in
xchg
jle
push
mov
popf
sub
cs
dec
cmps
inc
es
sbb
xchg
fbld
push
xor
clc
pop
pop
shl
inc
push
push
ret
neg
sbb
jnp
jne
jmp
pop
test
mov
cmps
jbe
out
add
sub
mov
je
dec
repnz
sbb
or
dec
movs
mov
test
sub
pop
inc
inc
sbb
adc
es
sbb
lds
jecxz
sbb
mov
syscall
and
cld
lods
xchg
or
sbb
cli
or
dec
pushf
sbb
fwait
push
xchg
dec
cli
push
outs
xchg
push
(bad)
shl
cmps
cmps
or
cs
ror
leave
cmp
sbb
pop
dec
lock
jecxz
jae
xchg
in
stos
push
jne
icebp
cmp
xchg
add
and
and
mov
xor
je
push
mov
imul
and
sbb
nop
xor
cli
neg
xor
arpl
hlt
or
(bad)
aas
ds
pop
jbe
xchg
test
push
pop
inc
add
sbb
(bad)
and
iret
rol
jbe
mov
inc
sub
mov
pop
jp
shr
add
mov
std
fwait
pop
xchg
jle
mov
js
xchg
(bad)
shr
data16
imul
iret
push
mov
jne
jg
xor
and
dec
mov
mov
hlt
jns
pusha
add
push
pop
cmp
(bad)
pusha
jne
and
pop
push
adc
adc
ja
push
and
enter
mov
popa
aaa
cld
pop
dec
inc
cmps
out
ins
push
and
mov
xor
clc
mov
fstp
lods
retf
mov
mov
inc
xchg
addr16
je
sub
lods
and
push
scas
(bad)
(bad)
pop
jo
inc
arpl
push
or
jmp
out
or
stos
daa
pop
and
mov
sbb
sahf
stos
lods
sub
push
adc
outs
lods
stos
jmp
pushf
or
rol
ds
stos
cmc
sgdtd
stos
mov
das
pop
jne
dec
push
mov
ins
inc
cmp
pop
inc
sub
cmp
rol
movs
jbe
xchg
test
popf
or
sti
jno
bound
add
mov
fdiv
and
push
cmps
iret
inc
pop
push
sbb
mov
cmp
das
sbb
or
or
sbb
ret
jg
cs
scas
les
es
inc
add
and
sub
(bad)
push
pop
xchg
or
mov
in
cmp
pop
inc
and
push
lods
sub
adc
movs
cli
arpl
cmp
dec
imul
ja
dec
fild
or
or
add
mov
ins
jmp
jecxz
jo
push
out
mov
xor
jmp
repz
mov
sbb
retf
jecxz
nop
ror
mov
inc
and
out
push
iret
mov
(bad)
movs
xchg
lahf
pop
mov
jle
mov
imul
mov
out
adc
pop
mov
scas
in
popa
rcr
das
ins
fs
(bad)
pop
pop
popf
(bad)
psubusb
mov
ins
sbb
(bad)
daa
lahf
das
test
xchg
dec
nop
push
or
arpl
dec
pop
stos
xor
test
xor
dec
or
xor
xor
push
dec
lods
mov
call
div
ds
out
and
addr16
adc
pop
nop
jl
stos
outs
stos
jecxz
mov
adc
loopne
movs
div
dec
retf
push
sbb
cmp
test
mov
push
xor
inc
(bad)
xchg
push
sub
pushf
pop
mov
mov
sbb
push
push
mov
adc
pop
sub
adc
xchg
shl
test
call
dec
jb
nop
fisubr
mov
fs
ret
adc
pop
loop
rcl
rol
mov
ds
or
(bad)
je
mov
push
bound
pop
lahf
push
mov
dec
sub
dec
jmp
xchg
xor
js
pop
les
cmp
stc
aad
rol
xlat
and
loop
(bad)
fisub
mov
pusha
(bad)
push
sub
inc
cmp
in
je
add
adc
or
test
sub
leave
addps
push
and
dec
in
loop
jl
add
repz
cdq
jne
or
out
jmp
movs
xchg
loop
out
cmp
adc
enter
lods
fcmovnu
lds
ret
inc
dec
sub
push
(bad)
imul
ja
xchg
dec
jge
push
dec
inc
mov
lock
jecxz
mov
stos
ins
or
jae
xchg
aam
lods
or
(bad)
stc
scas
inc
xor
adc
xor
cmp
jmp
fdiv
adc
(bad)
popf
xor
nop
push
iret
xchg
mov
retf
sbb
inc
ss
xor
add
add
inc
stc
cld
cdq
xchg
dec
enter
call
jb
xchg
test
add
add
test
xor
mov
retf
xor
or
mov
outs
in
and
and
and
cld
(bad)
(bad)
cmp
test
mov
cdq
dec
dec
mov
test
xchg
test
arpl
cmps
pop
jb
mov
jl
mov
jmp
mov
in
fistp
mov
push
cmp
ins
xor
jl
cmps
(bad)
in
push
cmp
xlat
mov
addr16
shl
push
dec
jnp
aaa
nop
gs
ins
cmp
push
push
dec
test
add
pop
mov
push
test
pop
loopne
(bad)
mov
push
mov
sub
pusha
sub
(bad)
xchg
add
loop
ret
in
pop
or
xor
and
jg
es
mov
mov
std
cli
xchg
faddp
popf
aad
push
movs
pop
call
retf
and
idiv
sub
cmps
and
push
mov
jmp
and
add
test
push
jle
jmp
push
mov
mov
aad
mov
fistp
mov
mov
mul
inc
cmp
loope
jge
popf
fimul
mov
dec
or
retf
mov
(bad)
std
mov
push
xchg
sbb
mov
enter
mov
add
push
fxch
imul
cmps
xor
lods
aas
repnz
xor
add
sar
(bad)
mov
push
or
lahf
push
mov
push
and
fisubr
in
xlat
rsm
cmp
xchg
dec
and
out
add
mov
sbb
fs
push
mov
das
dec
push
push
mov
cwde
mov
int3
mov
(bad)
xor
lahf
add
sbb
mov
fs
sbb
stos
aaa
js
std
mov
cmp
mov
dec
cmp
sub
scas
add
pop
xor
dec
in
mov
lods
cmp
push
test
and
(bad)
pusha
mov
out
and
sbb
cmp
pop
mov
cmc
fchs
mov
adc
jmp
push
aam
stc
test
jb
cdq
int
fnstenv
shr
mov
(bad)
test
cld
sti
push
bound
fadd
int
(bad)
lea
add
cmps
jecxz
scas
jg
push
fsubr
dec
jle
or
jne
rcr
loope
in
sti
sbb
dec
cmp
ds
xor
fwait
std
in
push
dec
mov
ins
in
xchg
aam
inc
pop
xor
sbb
sbb
dec
pop
sub
les
inc
shr
into
(bad)
not
jge
imul
mov
mov
shl
cmps
mov
ret
or
fist
lea
(bad)
cli
xor
and
lds
mov
xchg
cmp
add
neg
add
push
xor
xor
sbb
xor
dec
aaa
sub
pop
out
daa
add
mov
sbb
inc
out
xor
lds
or
pop
push
push
aam
mov
or
inc
or
popa
cwde
scas
sub
in
pop
iret
inc
xchg
call
inc
ins
(bad)
mov
aad
dec
mov
(bad)
push
adc
mov
adc
jmp
pop
stos
jno
out
sbb
cmp
stos
daa
xchg
inc
and
or
loopne
aaa
xchg
test
or
int
mov
cmc
mov
push
xor
outs
sbb
(bad)
(bad)
lds
in
xor
mov
and
pushf
inc
mov
pop
fcomi
jp
add
jnp
sub
sub
call
repz
mov
mov
jne
(bad)
loop
cmp
lods
imul
repz
dec
mov
dec
retf
aaa
test
push
shl
in
rol
mov
sub
mov
out
dec
push
out
call
out
push
push
inc
cmc
out
out
and
pop
std
add
lods
xchg
pop
enter
and
test
pop
ret
std
sub
sbb
xchg
mov
fwait
add
push
xchg
call
dec
adc
xchg
dec
mov
mov
pop
inc
outs
pop
mov
ret
mov
sti
xchg
or
pushf
fmul
rol
mov
push
jle
jbe
xchg
(bad)
jo
push
xor
ins
les
pop
pop
pushf
add
pop
jp
ret
dec
fdivrp
add
jo
frstor
out
jns
jle
icebp
pop
ds
xchg
test
enter
mov
aas
mov
lea
and
enter
mov
dec
(bad)
pop
scas
out
push
test
jb
xlat
mov
or
cdq
int3
shl
sbb
ret
aas
fadd
push
add
in
ins
mov
jl
mov
scas
out
sbb
push
shl
inc
fild
leave
cdq
mov
fsubr
ret
js
xor
call
jns
and
outs
jp
ins
call
cdq
lods
das
dec
bound
cmp
jb
mov
xor
and
cmp
xchg
addr16
mov
push
add
and
hlt
js
xchg
push
jl
clc
retf
mov
int3
mov
(bad)
cmp
retf
jl
inc
pop
lea
cmc
lahf
leave
(bad)
hlt
les
leave
shl
sbb
xor
call
iret
das
add
xchg
(bad)
dec
scas
and
cmp
push
sbb
jmp
mov
mov
imul
adc
jecxz
push
sub
sbb
push
xchg
mov
movs
inc
or
ret
sub
leave
jmp
push
(bad)
(bad)
mov
and
or
pop
movs
popa
stos
xor
mov
data16
int
or
rol
movs
mov
ret
xchg
arpl
push
sbb
lock
mov
jle
clc
in
sub
pop
and
das
inc
push
dec
out
call
push
(bad)
sahf
scas
test
cld
fistp
(bad)
mov
or
inc
aaa
movs
mov
cmp
mov
add
inc
push
xchg
(bad)
in
bound
sbb
adc
out
and
jno
mov
pop
push
cmp
and
or
int
mov
push
mov
sar
push
pop
add
push
jns
xchg
ins
inc
movs
call
lods
(bad)
fsubr
xor
bound
jns
push
int
retf
test
add
(bad)
cmps
out
mov
stc
mov
mov
cmps
ins
inc
aas
push
clc
mov
push
or
in
jl
(bad)
and
add
lock
pop
mov
xor
loop
jbe
jp
mov
dec
or
inc
jmp
mov
xchg
sub
imul
xor
and
mov
popa
pop
mov
cli
mov
popf
sahf
pop
in
dec
retf
cmp
fld
out
shl
xor
lods
pop
fidivr
pop
scas
retf
jle
sti
mov
and
sub
shr
jp
stos
ds
inc
test
(bad)
sbb
rcr
inc
mov
inc
aaa
mov
fist
adc
ss
mov
or
(bad)
stc
arpl
add
out
cdq
popa
std
rcr
adc
mov
fist
or
mov
mov
jne
test
jg
pop
xchg
pop
jno
icebp
int3
push
jns
sub
push
(bad)
fwait
sub
xor
stc
xchg
ret
sub
fist
pop
fdivr
cmp
cdq
in
sbb
movs
xchg
adc
push
cli
pop
inc
sar
mov
scas
xor
jp
mov
pop
pop
daa
pop
stos
imul
sbb
inc
sti
and
nop
popa
push
dec
mov
xchg
ins
mov
or
scas
xor
push
push
retf
loope
pop
ret
and
xchg
dec
in
xor
out
sub
int3
inc
dec
add
push
jmp
int
dec
sub
dec
icebp
fmul
mov
inc
jecxz
mov
not
or
test
mov
sub
fisttp
mov
push
call
(bad)
sub
add
dec
push
push
push
adc
jmp
push
icebp
pop
ins
or
mov
xor
jg
pop
sub
mov
mov
sub
xor
arpl
sti
mov
daa
adc
sub
sub
xor
push
div
cdq
and
inc
jae
aaa
fst
lods
fstp
daa
push
jle
nop
stos
cwde
retf
loopne
fnstcw
inc
xchg
cld
push
mov
push
inc
iret
mov
imul
shr
jmp
lea
adc
ret
push
sti
mov
xchg
out
movs
shl
enter
jo
push
shl
sub
jb
pushf
call
pop
cmp
mov
clc
mov
bnd
test
out
movs
inc
loopne
nop
outs
clc
inc
popf
sbb
mov
inc
cmp
pop
mov
cdq
or
push
int3
and
outs
cmp
div
nop
idiv
sbb
mov
mov
bound
arpl
aam
push
dec
xor
int
in
pushf
or
adc
push
pushf
xor
bound
ins
fs
add
out
or
sti
call
ret
push
fsub
add
pop
fistp
retf
pop
mov
sub
pop
ret
mov
adc
mov
xor
jmp
(bad)
out
or
lods
sub
xchg
dec
int
cmp
test
ins
lock
xchg
fldenv
daa
(bad)
cmp
aas
out
cwde
stos
jge
xor
sub
movs
pop
outs
mov
jne
int
push
push
in
mov
mov
dec
aam
pop
inc
fs
xchg
pop
out
xor
pop
stos
pop
and
out
add
pop
mov
inc
mov
cwde
ss
adc
cmps
shr
test
retf
repz
mov
dec
push
in
imul
lds
jl
xlat
adc
(bad)
lods
(bad)
mov
pop
int
retf
sbb
fidiv
mov
call
pusha
jl
test
fsubr
jmp
sbb
and
in
rcl
das
mov
push
and
jp
add
add
push
popf
into
stos
and
sub
and
mov
and
dec
mov
inc
add
xlat
adc
jae
or
mov
sub
retf
pop
(bad)
sbb
imul
sub
adc
pop
mov
outs
pop
test
xlat
sub
lods
xchg
(bad)
mov
push
pop
cmp
push
lahf
cmp
dec
jmp
frstor
(bad)
sar
sar
imul
pop
sub
leave
mov
div
shl
dec
jae
call
pop
pop
sbb
mov
and
stos
inc
pop
add
mov
pop
mov
aam
or
mov
xchg
jmp
popf
dec
mov
lods
lods
mov
push
int3
aam
mov
pop
fmul
(bad)
ss
pop
es
adc
push
jle
cmps
fwait
mov
scas
push
push
aas
int
out
iret
(bad)
sub
pop
inc
mov
pop
jecxz
dec
pusha
mov
or
pop
mov
xchg
add
mov
sub
sub
cs
outs
mov
sbb
pop
cmp
jne
pop
xchg
(bad)
sub
lahf
add
xchg
pushf
sbb
loop
mov
fs
cmc
or
push
fs
push
jp
xor
sti
jbe
in
xchg
push
pop
mov
pop
add
mov
sub
jo
pushf
mov
popa
in
arpl
shr
xchg
mov
out
rol
jle
lods
add
and
xchg
(bad)
out
mov
push
sub
pusha
push
sub
push
sbb
pop
sahf
jns
out
sub
dec
idiv
movs
mov
or
ror
hlt
cmp
sbb
(bad)
xchg
xor
xchg
pusha
mov
cmps
push
mov
mov
dec
dec
sub
mov
sbb
fnstsw
movs
cmps
arpl
cmp
cmp
dec
(bad)
repz
leave
mov
in
retf
mov
out
xor
mov
xlat
out
sbb
dec
pop
jbe
dec
lahf
cdq
fild
stos
cs
inc
out
mov
inc
mov
sub
jnp
adc
cmp
sbb
xchg
adc
inc
sub
dec
rcl
in
bound
mov
stc
lods
dec
xchg
cmp
fwait
sar
stc
sbb
sub
jns
adc
xor
pop
and
inc
xchg
outs
xchg
daa
or
push
jl
inc
xchg
xor
or
aam
mov
or
std
xor
jnp
shl
adc
cmp
push
aaa
or
jb
jmp
push
iret
push
cs
sbb
cmp
clc
adc
(bad)
repz
ins
mov
jle
sub
pop
push
stc
push
sub
mov
rcr
sub
mov
les
push
push
(bad)
mul
inc
mov
ja
xor
jmp
xor
sahf
fmul
loope
test
mov
in
add
int3
dec
xchg
pop
xor
sahf
jno
add
dec
mov
test
sub
lea
(bad)
(bad)
jb
dec
leave
mov
es
pop
ja
pop
xor
iret
fisttp
cmp
adc
mov
inc
xchg
cs
jle
add
sbb
mov
add
xor
mov
fst
and
or
bound
pop
jne
std
js
inc
push
(bad)
scas
ror
add
inc
nop
sub
mov
js
shr
iret
push
cmp
pop
jnp
pop
(bad)
idiv
jl
push
xor
push
push
jp
inc
ror
repz
mov
int
nop
dec
outs
pop
sub
(bad)
ja
iret
ins
test
dec
retf
outs
rcl
mov
cmc
dec
retf
add
jl
mov
adc
inc
xchg
adc
adc
or
in
mov
mov
arpl
mov
loope
sbb
test
test
or
pop
(bad)
fstp
inc
repnz
cmc
dec
mov
jb
sub
pop
data16
mov
fidivr
ds
push
cmc
cmc
inc
add
loop
xchg
xlat
xchg
dec
fmulp
xchg
test
push
mov
aad
repz
es
mov
retf
mov
mov
stos
push
out
cmp
cmc
mul
ret
adc
mov
or
cmc
or
push
retf
jo
out
nop
loopne
xor
pop
rol
or
movs
sbb
retf
ds
add
cli
push
dec
inc
add
data16
cs
dec
fisttp
pcmpeqd
or
jae
push
ficomp
adc
movs
jnp
repz
test
sub
xor
inc
xchg
and
sti
jb
push
xchg
mov
and
jno
and
cli
push
xor
mov
icebp
pop
pop
popa
scas
jecxz
xchg
dec
lock
call
ds
imul
ffree
fnstcw
fdiv
jmp
cli
addr16
dec
sub
sub
cmps
cdq
aaa
invd
dec
daa
mov
jmp
mov
cdq
imul
xchg
nop
dec
add
test
jge
cwde
inc
rcr
cs
xchg
ins
(bad)
mov
psubq
cmp
cmp
(bad)
jge
push
ja
inc
aad
push
mov
pop
xchg
mov
fstp
int3
pop
jmp
pop
div
xor
out
faddp
jb
cwde
cwde
mov
pop
scas
nop
or
shl
arpl
loop
outs
push
sub
sahf
not
xor
fstp
fwait
mov
les
aas
pop
(bad)
mov
add
lods
shl
mov
hlt
xor
push
sub
stc
adc
ror
xor
je
es
or
lea
fs
sbb
pop
add
mov
xchg
fs
mov
imul
mov
xchg
pusha
mov
jo
(bad)
cmp
sbb
mov
iret
xadd
and
mov
mov
xchg
push
shr
imul
adc
ret
addr16
cmp
xor
xor
sahf
hlt
mov
mov
mov
dec
test
add
jae
cld
or
sti
fsub
dec
jnp
jns
gs
jnp
test
inc
shl
jle
(bad)
mov
inc
cmps
fsubr
mov
sbb
sub
hlt
call
stos
ss
xchg
inc
xchg
clc
cmps
push
mov
cwde
sub
or
scas
fs
imul
fs
jge
dec
mov
and
jp
repnz
xchg
fcom
repz
xchg
scas
scas
mov
sbb
add
je
dec
repz
ss
mov
fdiv
je
rol
jno
pusha
(bad)
stos
sahf
add
inc
sub
mov
lods
adc
push
test
or
push
out
adc
enter
jae
jns
xor
dec
adc
out
dec
mov
gs
scas
inc
shl
pushf
aad
pop
repnz
jbe
xor
and
jmp
pop
cmp
inc
aad
adc
mov
outs
mov
loopne
jmp
sbb
mov
or
xor
mov
xchg
or
add
out
pop
jmp
lea
sbb
sbb
pop
imul
ins
push
test
and
cld
jecxz
outs
outs
xchg
inc
cmp
stos
or
jecxz
movs
push
stc
pop
(bad)
out
mov
lds
mov
sbb
(bad)
loopne
loopne
jl
dec
pop
test
push
test
pop
and
push
mov
nop
aam
add
aaa
loope
aas
pop
fistp
cdq
xchg
xchg
jns
mov
add
mov
jmp
shl
xchg
mov
cmp
sbb
enter
jmp
(bad)
fistp
cs
je
jp
in
test
mov
rcl
icebp
dec
test
and
xchg
push
dec
aaa
(bad)
mov
aad
cmp
xlat
outs
add
jle
stos
pop
mov
scas
mov
push
in
sub
push
ds
inc
sar
xchg
mov
hlt
fiadd
sbb
imul
fpatan
inc
adc
sub
aas
loope
dec
mov
retf
mov
mov
cmp
enter
scas
fs
add
xor
mov
std
fwait
lahf
sub
std
dec
inc
xchg
xor
cs
push
mov
popa
cmp
mov
test
fdivr
leave
mov
inc
dec
bnd
loope
in
pop
sub
adc
popa
sbb
sub
ja
leave
push
aam
mov
and
ds
and
sbb
xor
and
lock
and
fs
aad
xlat
mov
xor
(bad)
inc
jmp
xchg
jg
jmp
adc
sbb
xchg
sub
mov
push
sub
aad
mov
ret
clc
push
push
cmp
std
sub
cmp
and
nop
xchg
xor
std
js
in
(bad)
in
aaa
icebp
fs
gs
mov
xchg
inc
push
jo
test
jns
fwait
lock
xor
inc
cmp
dec
pop
(bad)
pushf
sub
lds
out
sbb
sbb
clc
sbb
stc
ja
push
dec
pop
icebp
repnz
cmp
jle
jg
xlat
ins
sub
sub
jl
push
out
sti
xchg
fstp
add
mov
push
mov
jmp
or
push
mov
xchg
inc
jns
mov
ret
fwait
mov
js
repnz
aas
jmp
out
mov
sub
shl
mov
clc
cmp
xchg
sbb
dec
(bad)
or
mov
xchg
fisttp
dec
jno
adc
stc
jl
push
ins
sbb
fucom
(bad)
mov
sub
aad
cli
pop
push
fimul
adc
inc
fdiv
rcr
dec
or
mov
mov
fild
retf
(bad)
sti
out
xchg
xchg
xchg
sub
mov
call
pop
pop
mov
inc
ret
sbb
xlat
push
fild
mov
mov
mov
pop
ret
stos
sar
fdivr
je
enter
xor
inc
mov
shl
cdq
cmps
or
lds
inc
sub
fbstp
or
jb
dec
fucomip
popa
add
loop
lds
cs
mov
(bad)
pusha
adc
mov
sub
addr16
fdivr
cli
jecxz
pop
(bad)
aam
sbb
(bad)
ss
outs
jmp
mov
lds
or
aad
mov
xchg
mov
sub
(bad)
bound
fdiv
and
cmps
pop
js
or
xchg
xor
pop
mov
and
cdq
rcr
inc
add
sar
mov
jnp
mov
mov
xchg
leave
sub
xchg
icebp
ins
dec
je
sub
fist
fidivr
dec
xor
aad
rcr
stos
mov
mov
cmp
pop
sbb
ja
add
and
fidiv
dec
xchg
ins
jp
dec
(bad)
xor
(bad)
pusha
fs
or
jo
cmps
loop
mov
jecxz
clc
mov
mov
lock
xchg
iret
popa
mov
sub
in
test
fcomip
cmp
push
test
fwait
jmp
sub
and
in
xchg
xchg
push
loop
sti
mov
aas
inc
cmps
mov
jmp
lock
cmp
add
call
cld
mov
in
fcmovne
push
dec
daa
(bad)
repnz
and
jp
out
sub
imul
xchg
mov
popf
mov
xchg
call
scas
outs
stc
sub
or
cmp
adc
adc
imul
pop
mov
push
(bad)
adc
mov
and
mov
or
sbb
jne
jg
(bad)
jl
mov
mov
cmp
push
xchg
mov
inc
xor
js
fistp
mov
mov
in
movs
test
cmp
sub
in
imul
sub
jle
sahf
push
mov
and
cmp
mov
mov
ss
sbb
stc
pop
dec
xor
mov
loopne
dec
enter
sbb
test
mov
call
and
mov
add
aaa
xor
mov
mov
retf
ja
shl
into
mov
pop
inc
rcr
mov
xor
sub
call
int3
and
mov
jo
stc
pushf
mov
push
dec
cmp
push
stos
sbb
adc
jbe
cmp
repnz
test
mov
ds
mov
dec
test
jl
mov
out
sbb
lods
push
retf
popa
push
xchg
mov
rol
mov
test
add
ror
rcr
scas
ja
jnp
jno
stos
into
pop
in
xchg
adc
pop
xchg
push
push
(bad)
aam
jl
fsub
popa
div
jmp
fs
nop
cmp
cmp
push
inc
cmps
mov
add
popa
xor
fisubr
in
jp
popf
aas
pop
aad
in
sub
shl
xchg
jne
(bad)
dec
push
mov
int
sub
xchg
dec
push
add
cmps
and
subps
repnz
sub
mov
int3
mov
cmp
lea
mov
dec
xor
push
bound
sub
ins
inc
(bad)
fisub
dec
dec
mov
out
pop
pop
pop
call
cdq
ret
adc
ins
dec
jmp
push
das
(bad)
lods
push
in
add
jl
(bad)
sbb
adc
scas
push
adc
mov
cmp
in
pop
dec
call
xchg
mov
mov
bound
inc
xor
(bad)
sbb
pop
leave
repz
jl
fbld
hlt
pushf
retf
lds
shr
mov
popf
adc
mov
popf
addr16
push
mov
push
jne
cwde
(bad)
pusha
jne
outs
enter
call
jbe
sbb
xchg
xlat
aas
stos
cmps
adc
mov
shl
xchg
cld
push
pop
in
cmp
repz
dec
mov
xchg
xchg
cld
dec
jp
mov
cdq
inc
sbb
pop
jb
arpl
ja
dec
dec
sbb
(bad)
jecxz
push
mov
adc
and
div
outs
cmp
pop
push
adc
outs
or
xchg
je
test
(bad)
mov
not
push
inc
adc
pop
pop
jnp
push
mov
sub
sub
mov
shr
and
mov
ret
mov
jb
jbe
retf
xlat
add
sbb
imul
inc
and
pop
fisub
adc
loop
fisub
rcl
aam
dec
ins
mov
add
jge
das
aas
mov
and
mov
adc
ins
push
scas
sbb
cmp
dec
mov
mov
dec
enter
mov
fadd
rol
int3
int
sub
add
mov
push
push
inc
xchg
outs
push
jns
(bad)
jmp
fs
mov
cmp
cmp
retf
cmc
sbb
arpl
mov
(bad)
fcomip
mov
mov
fidivr
retf
pop
int
jg
imul
dec
cmp
(bad)
lods
push
sbb
mov
popa
rcr
in
fiadd
pop
shl
imul
mov
push
sub
pushf
pop
xchg
leave
retf
jle
dec
inc
dec
stos
sbb
iret
dec
pop
adc
sar
push
inc
imul
test
push
dec
(bad)
outs
adc
inc
aaa
mov
fs
add
xchg
or
jbe
inc
mov
cmp
into
or
bnd
leave
or
scas
je
pop
pop
mov
js
pop
pushf
xchg
scas
xor
cmp
outs
add
and
pop
mov
jp
outs
dec
out
fnstsw
xor
push
into
sub
add
sub
popf
aaa
aaa
int3
adc
xor
scas
ins
mov
test
or
sbb
repz
sub
sbb
add
and
mov
dec
jmp
pop
push
xor
dec
mov
int
jecxz
dec
cld
test
xor
jmp
scas
retf
dec
fiadd
loope
push
cmp
xchg
loope
xchg
popf
das
test
repz
adc
adc
mov
mov
(bad)
shr
movs
mov
inc
shl
out
add
sub
imul
ins
fadd
jno
pop
dec
rol
sub
in
cdq
shr
push
mov
cmps
dec
add
xor
or
fsubrp
ja
sti
adc
ficom
push
inc
xchg
in
cld
repnz
mov
je
adc
xchg
ins
jle
xor
jne
and
hlt
mov
dec
call
das
cwde
(bad)
and
mov
jb
xor
xchg
repnz
fldenv
mov
sub
stc
iret
sub
xchg
stc
(bad)
push
popf
push
sub
jmp
push
icebp
dec
shl
and
fsub
lods
std
call
adc
push
enter
scas
aam
in
mov
rcr
jmp
push
cld
xchg
les
push
stc
xor
(bad)
jne
mov
in
or
adc
pop
dec
jge
in
and
pusha
mov
(bad)
loope
push
mov
addr16
jno
bound
stc
push
ds
aas
adc
hlt
xchg
adc
jo
pop
push
dec
jbe
dec
push
call
sbb
xor
mov
mov
stos
push
pop
lea
dec
repz
pop
mov
aad
push
jnp
push
call
les
inc
dec
int3
pusha
jmp
mov
lahf
mov
sub
xor
and
imul
nop
mov
mov
push
pusha
or
js
jge
loop
pop
std
dec
xchg
add
mov
ret
jae
xor
sbb
call
cmp
mov
into
mov
sahf
mov
iret
std
in
sub
stos
mov
add
pop
sbb
cmp
int3
adc
and
rcr
pusha
xchg
fadd
nop
inc
jmp
mov
or
inc
lods
clc
mov
icebp
dec
xchg
test
or
lock
fsubr
daa
fild
mov
mov
add
push
jnp
mov
test
xchg
enter
movs
rcr
test
in
in
(bad)
xchg
cs
(bad)
mov
jle
std
scas
sbb
pop
push
or
jns
into
fnstsw
adc
outs
lea
xchg
push
push
push
stc
mov
and
mov
fdivr
dec
(bad)
pop
popa
jne
hlt
xchg
add
test
(bad)
push
cli
fimul
retf
xchg
repnz
fs
pusha
xchg
or
in
inc
xchg
jge
pop
xchg
mov
call
sbb
outs
inc
(bad)
arpl
xor
bound
mov
push
and
inc
(bad)
push
or
sub
call
jmp
in
push
add
sub
jle
lock
push
(bad)
jl
and
data16
fwait
clc
pop
(bad)
lds
inc
cmc
hlt
in
xchg
aam
retf
push
inc
cdq
leave
test
aaa
jecxz
cmp
mov
cdq
rcr
call
jge
xchg
aaa
inc
cmp
adc
aaa
scas
loope
ja
fnstcw
push
jmp
in
jb
xlat
fxch
add
or
cld
mov
repnz
jg
aas
mov
pop
(bad)
mov
sti
jb
jmp
loope
movs
lods
aas
and
hlt
in
sub
clc
mov
test
mov
lods
sub
bound
and
inc
aad
adc
aas
jp
shl
stos
ds
cmp
jp
mov
aad
xchg
(bad)
fadd
mov
sub
add
push
(bad)
fistp
mov
xchg
stc
jecxz
test
ficomp
adc
xchg
cmps
mov
add
test
test
push
rcr
lock
xor
pop
in
out
dec
cdq
aam
stos
(bad)
stos
test
add
adc
adc
jns
stos
inc
xor
xchg
xor
out
icebp
cmp
cmp
hlt
sub
add
aam
clc
xchg
pusha
push
sbb
(bad)
sbb
cmc
pop
je
loop
xchg
sti
cmp
push
pop
rcl
pop
fadd
xor
call
fimul
and
mov
xchg
inc
retf
lea
stc
mov
push
(bad)
xor
dec
pop
jb
lahf
sub
(bad)
xchg
mov
cmp
jne
(bad)
ss
jp
fwait
leave
in
call
cmp
mov
inc
pop
push
scas
and
cmp
add
cdq
jp
nop
loopne
call
mov
push
mov
ret
add
cmp
cmp
(bad)
mov
in
fild
ret
test
popf
jns
rcl
(bad)
out
retf
and
sti
jmp
shr
(bad)
out
add
retf
xor
adc
pop
aaa
leave
xor
pop
or
std
sar
cmps
int
xchg
out
and
xlat
ficom
shl
out
push
cld
inc
leave
(bad)
mov
sti
pushf
sbb
stc
pop
jno
sbb
nop
inc
call
xchg
pop
gs
cdq
mov
xchg
xor
pushf
in
ins
and
cmps
jne
test
mov
inc
jg
mov
ror
jns
sbb
les
xchg
das
jl
jmp
data16
dec
push
mul
xchg
out
lahf
dec
mov
sbb
xor
into
jne
sub
es
xchg
in
mov
dec
icebp
jmp
and
stos
scas
xor
shl
push
aad
in
mov
popf
scas
push
adc
outs
add
dec
test
sti
jo
stos
sbb
ret
inc
test
test
mov
arpl
or
rol
dec
jno
jecxz
test
mov
sbb
or
jp
inc
and
add
mov
sbb
or
mov
and
and
fcmovu
das
clc
mov
jmp
adc
stos
xor
sub
sbb
lods
arpl
in
ins
cs
pop
cmps
stos
and
inc
fisttp
call
mov
and
mov
and
xor
xor
mov
scas
xor
scas
pop
rcr
cmp
rol
xor
adc
xchg
pop
inc
sbb
mov
cdq
loope
movs
mov
aad
out
ror
fnstsw
dec
cmp
xor
add
mov
cmc
xor
cmps
dec
jp
xchg
outs
in
out
std
aad
add
mov
add
popa
js
mov
add
test
and
data16
mov
jge
xchg
cmp
or
add
push
add
xchg
push
shl
pop
xchg
jp
jo
loop
xchg
mov
adc
call
dec
mov
dec
ror
jbe
loope
push
bound
sub
inc
lods
fldcw
(bad)
popa
sub
outs
adc
push
test
imul
not
popf
sub
daa
mov
dec
hlt
jl
das
test
xor
pop
add
inc
and
ret
gs
mov
(bad)
bound
fs
inc
sub
cwde
cmc
push
sbb
popf
push
push
sbb
sbb
jge
sub
push
add
sub
aaa
stc
shl
push
xchg
call
jbe
in
aam
mov
clc
leave
rcl
das
std
retf
push
call
neg
test
mov
inc
push
loopne
ja
mov
cmp
sub
xchg
xor
fist
hlt
inc
sbb
es
fdiv
sub
mov
in
in
cmp
fistp
pop
mov
ror
shl
shl
mov
inc
sub
cmp
adc
jmp
in
arpl
push
pop
sub
out
rcr
mov
repz
repz
ret
jne
ins
mov
cmp
jns
clc
in
pop
mov
into
push
stos
mov
in
sti
ret
mov
push
popf
loop
and
(bad)
pop
xchg
fcmovnu
scas
add
sar
jae
adc
xor
add
sub
sti
mov
and
adc
nop
dec
ja
jbe
jbe
inc
jle
(bad)
int
jnp
sahf
lods
and
fnstsw
mov
lds
fisubr
es
outs
jecxz
arpl
sub
je
leave
sub
mov
into
add
push
fld
dec
std
xor
fild
cmp
xchg
sar
inc
lods
repnz
jb
pop
or
repnz
sbb
jmp
lahf
enter
cdq
mov
push
sbb
or
(bad)
movs
(bad)
fild
pop
je
out
fld
(bad)
adc
bound
push
xchg
ds
es
mov
push
pop
mov
and
jo
jb
inc
out
fisubr
cmp
pop
test
mov
stos
(bad)
ja
in
test
enterw
jno
mov
dec
rol
sbb
rol
test
xchg
iret
push
mov
inc
repnz
in
mov
dec
cmp
fild
and
xchg
ss
jb
(bad)
mov
test
jl
inc
cmp
enter
push
add
call
aam
es
scas
(bad)
aas
test
scas
cmp
or
outs
imul
or
and
(bad)
int
dec
icebp
and
test
jb
mov
add
jl
mov
dec
sub
jg
ret
mov
sub
lea
inc
ds
xlat
adc
pop
pop
ds
mov
loop
repnz
dec
push
cs
xchg
and
push
out
sub
lods
jp
inc
jle
loop
add
push
imul
jmp
mov
or
pusha
out
lock
(bad)
repz
cmp
lock
rcr
rcl
outs
and
lods
xchg
fs
int
pusha
movlps
mov
enter
ins
push
xchg
call
cmp
repz
mov
push
cmp
push
ja
std
xchg
cdq
fnstenv
mov
stos
push
sbb
add
mov
cmp
mov
inc
dec
or
in
xchg
cdq
nop
dec
jne
inc
mov
aas
dec
fwait
pop
popa
fnstsw
fstp
xchg
(bad)
cmp
mov
or
mov
jbe
int3
xchg
xchg
jge
and
adc
jb
scas
ja
clc
pop
sbb
ss
inc
dec
jp
xchg
and
pop
xchg
and
xor
xchg
sbb
cwde
mov
xchg
inc
dec
stos
mov
out
loope
xchg
mov
in
and
inc
mov
sub
pop
stc
out
sti
or
je
enter
int3
add
nop
imul
push
cmp
push
cmp
sbb
in
sbb
test
dec
hlt
mov
mov
mov
test
addr16
ror
les
mov
shl
mov
inc
push
out
repz
mov
outs
cmps
aaa
dec
push
dec
imul
fs
dec
test
mov
mov
mov
mov
mov
shr
lods
call
inc
jge
lea
(bad)
in
mov
js
jge
sbb
inc
out
mov
(bad)
dec
xor
cld
test
dec
push
in
inc
push
clc
rcr
mov
aaa
jnp
jnp
and
xor
stc
inc
in
xchg
mov
mov
test
lds
mov
xchg
out
cwde
fmul
movs
sbb
jnp
xor
pop
sub
mov
ffree
popa
jmp
add
mov
dec
outs
push
out
fild
je
fld
std
not
jns
sub
mov
xlat
repz
leave
(bad)
mov
into
push
(bad)
push
jns
mov
repnz
int
cmps
call
rol
repz
fiadd
retf
xor
addr16
stc
mov
sub
mov
jg
push
xor
aas
xchg
pop
cwde
retf
jno
dec
nop
mov
shr
cmp
mov
pop
sub
xor
call
ret
(bad)
cmp
jg
push
sbb
mov
into
xor
dec
jmp
mov
sub
and
mov
cli
xor
test
pop
pop
xchg
addr16
arpl
popa
jmp
clc
ja
outs
mov
push
xchg
xor
call
mov
adc
pop
pop
bound
into
retf
xor
dec
or
mov
mov
stos
cwde
rcr
fcmovnu
inc
aad
or
arpl
and
pop
ins
pop
pop
in
dec
mov
jb
shr
jno
fisubr
add
loop
pop
push
cli
js
clc
sbb
mov
aad
les
in
xor
popf
ins
mov
cmps
sub
cwde
mov
in
jbe
jbe
fild
lds
call
mov
sahf
daa
pop
arpl
cld
ss
(bad)
cmps
fwait
pop
mov
jmp
jmp
enter
sbb
jecxz
and
imul
sbb
xor
adc
mov
mov
test
sbb
dec
xchg
(bad)
mov
push
add
mov
ror
mov
daa
cli
xor
in
adc
push
js
dec
daa
mov
and
inc
push
pushf
or
call
or
ins
pop
sbb
or
fwait
mov
mov
aas
loope
jge
adc
sbb
cmp
or
cli
sub
push
cli
push
pop
inc
ret
jmp
inc
outs
fistp
pop
cs
jb
cmp
mov
je
setne
push
mov
aaa
out
xchg
stos
sbb
sti
dec
mov
cmc
mov
inc
and
add
std
pop
out
push
bound
pop
imul
pop
cdq
xchg
or
cmp
dec
push
push
fmul
aaa
call
jne
mov
mov
jge
pop
cmp
sub
aas
lahf
(bad)
push
out
jmp
xor
or
xlat
out
into
ins
lds
in
ss
pop
xchg
ds
lods
pop
xchg
mov
pop
xor
push
push
jge
mov
nop
(bad)
pop
outs
ror
adc
mov
adc
(bad)
mov
xor
shr
pop
iret
add
sub
lods
loope
iret
push
in
pusha
xchg
cmp
popa
aad
ret
dec
xchg
enter
lock
test
shl
not
mov
popf
push
adc
std
idiv
sti
mov
lahf
mov
dec
mov
adc
movs
dec
ret
mov
data16
sub
call
cld
dec
pop
in
jae
cli
jns
inc
leave
adc
mov
ins
pop
pop
cdq
xchg
push
adc
int3
jle
sub
popf
push
xor
jb
jmp
pusha
ror
pop
leave
outs
jecxz
fisttp
adc
outs
es
aas
pop
xchg
ins
xchg
push
call
lds
dec
outs
daa
je
pop
mov
rcr
push
int3
mov
aad
or
adc
hlt
(bad)
mov
jl
and
ins
cld
add
fwait
aaa
add
cmc
popa
stc
jge
call
cmc
outs
sti
cmp
aad
pop
sub
xchg
clc
dec
jp
(bad)
push
xchg
mov
jae
mov
(bad)
adc
mov
sti
sbb
es
cmps
aam
jbe
fwait
pop
add
out
lea
aam
push
xor
test
test
jg
xchg
(bad)
mov
and
xor
dec
cmp
loopne
rol
mov
mov
popa
pop
mov
int
jecxz
dec
test
pop
in
xchg
fistp
add
or
retf
icebp
fisubr
cmp
out
push
mov
xchg
mov
lea
hlt
and
sbb
cmps
test
and
scas
push
aad
sub
xor
sti
push
sbb
sub
and
int3
jns
cmp
jge
adc
add
ss
sub
xchg
movs
je
in
sbb
mov
inc
xor
mov
pop
cmp
iret
mov
call
movs
fnstenv
add
in
call
jns
retf
lahf
mov
push
test
xchg
and
cmp
cmc
dec
mov
ins
jb
into
fld
ja
imul
inc
add
ja
sbb
inc
add
in
add
inc
xor
pusha
cwde
div
into
retfw
sahf
test
icebp
pop
mov
imul
xor
sbb
shl
outs
pop
imul
mov
shl
iret
add
push
add
lea
push
mov
scas
xor
add
movs
dec
in
imul
div
arpl
xor
push
push
ficomp
mov
inc
retf
sbb
gs
xor
idiv
mov
call
loopne
push
xchg
stos
and
fcmovbe
sbb
push
ja
ins
nop
xchg
hlt
mov
xchg
dec
mov
pop
sbb
sub
repnz
sub
adc
fidiv
ja
scas
cdq
nop
test
pop
ror
sbb
xchg
mov
xor
clc
aad
stos
hlt
pop
jle
adc
adc
push
pop
(bad)
sub
int
fwait
xchg
fdivrp
int
call
pop
vpunpckhdq
call
sub
sbb
sub
sbb
adc
jbe
stos
xchg
leave
xor
inc
inc
pop
push
pushf
sar
inc
mov
mov
add
ins
push
sbb
mov
mov
mov
(bad)
cs
rcl
fimul
popf
out
adc
pop
cwde
push
cmp
jmp
lods
je
and
sete
jmp
cmp
scas
outs
(bad)
push
pop
fmul
(bad)
mov
stos
mov
add
pop
adc
adc
or
push
stos
xchg
dec
xor
pop
cmps
dec
lock
jne
push
stc
fwait
xchg
mov
fisttp
rol
ja
sbb
pushf
xchg
xlat
shl
sub
fwait
fs
test
adc
jle
mov
call
inc
cmps
xchg
das
leave
and
jmp
test
daa
fwait
rep
mov
aas
push
out
inc
shr
loopne
mov
push
aad
mov
mov
nop
sahf
mov
xor
xor
pop
pop
inc
div
sahf
out
sub
fs
pop
sub
ins
repnz
xchg
add
lahf
mov
add
stc
dec
adc
cmp
mov
sbb
push
inc
and
cld
or
push
xor
lods
dec
fld
icebp
test
into
or
movs
cdq
dec
jmp
xchg
jge
adc
xor
dec
popa
cmp
jbe
jns
or
sbb
cld
loope
xchg
iret
imul
cmp
sub
(bad)
or
or
cmp
jecxz
cmp
test
inc
mov
mov
push
dec
mov
cmc
int
dec
out
movs
lods
inc
jecxz
(bad)
xchg
fnstsw
push
scas
mov
mov
out
inc
push
idiv
dec
and
stc
dec
xchg
out
jnp
xor
loopne
cmp
cli
(bad)
aas
std
lea
jns
adc
push
pop
dec
mov
jmp
das
mov
push
and
cmp
cmp
inc
daa
jne
pop
icebp
fidiv
scas
fistp
mov
mov
xchg
lea
fdiv
xor
sbb
sbb
repz
mov
xor
aad
add
fadd
adc
and
push
out
dec
dec
mov
repz
push
cs
dec
clc
repnz
cwde
call
repnz
ds
enter
dec
(bad)
std
fisttp
in
xor
pop
inc
fdiv
sar
fadd
call
xchg
mov
xor
or
imul
inc
sbb
cmp
aaa
mov
cdq
sub
inc
out
xabort
cmp
daa
xchg
inc
aad
xor
xlat
sbb
in
call
mov
gs
and
arpl
sub
in
add
xor
aaa
mov
icebp
pop
shl
call
data16
cmp
in
mov
mov
push
stos
out
push
sub
data16
dec
add
rcl
add
stc
sahf
push
out
shrd
cmps
push
sbb
ds
push
xchg
fdivp
stc
add
jnp
pop
pop
mov
out
addr16
mov
cmc
retf
xor
rcl
mov
arpl
int3
or
mov
pusha
mov
mov
fdiv
push
adc
xor
icebp
dec
sbb
dec
(bad)
push
sti
ins
cmp
jecxz
pop
add
inc
icebp
push
scas
inc
xchg
jg
wbinvd
xlat
arpl
cmp
(bad)
dec
mov
lahf
(bad)
dec
xchg
jmp
push
and
push
mov
movs
push
sbb
xor
cmps
jne
ins
out
test
push
add
ss
rcl
mov
cmp
out
(bad)
fneni(8087
out
adc
dec
mov
shr
mov
lods
sbb
ficomp
dec
mov
fwait
mov
pextrw
out
cmp
jae
cmp
xlat
int
mov
sahf
out
pushf
adc
dec
mov
jecxz
movs
test
mov
fsub
pop
dec
repnz
push
pop
xchg
inc
dec
jb
sbb
pop
pop
dec
cmps
lds
ins
ret
mov
sar
shl
mov
add
mov
enter
fsub
das
inc
dec
jp
fwait
push
push
imul
test
and
sbb
popf
mov
inc
enter
mov
mov
dec
aam
pop
jl
fcomp
out
mov
test
inc
in
sub
xchg
mov
xchg
std
xchg
inc
sbb
hlt
jl
lods
loop
stc
(bad)
ja
sub
push
sar
add
test
mov
add
outs
rol
mov
jo
pop
sub
mov
add
dec
outs
mov
push
out
mov
movs
repnz
jb
ja
ins
loope
call
jmp
sub
and
sub
push
sub
cmovo
push
fiadd
pop
push
dec
mov
arpl
movs
stos
add
cmps
xchg
inc
movs
fadd
enter
sub
int3
repnz
in
inc
clc
xor
fst
mov
movs
inc
retf
fs
gs
inc
inc
and
xor
cmps
shl
adc
in
movs
rcl
icebp
xor
xor
std
or
pop
jecxz
cmp
arpl
cmps
lea
gs
sub
mov
jne
push
cmps
xchg
sti
std
sub
mov
push
sbb
shl
lods
out
inc
stos
cmp
push
cmp
jge
loope
sub
aad
push
pop
mov
xor
xchg
aad
jno
(bad)
rol
sub
aas
lahf
(bad)
jbe
or
mov
cmp
lods
call
jmp
xor
popf
stos
mov
push
pop
test
rol
neg
aad
sub
push
mov
pop
pop
daa
inc
cmp
dec
jmp
mov
fcom
jecxz
dec
push
retf
(bad)
dec
sbb
dec
shl
(bad)
out
out
lahf
outs
xchg
jo
dec
fucomi
xchg
(bad)
fwait
add
imul
jg
cmc
repnz
and
push
jg
jb
pop
sbb
fcom
out
fistp
aad
sbb
cmps
and
test
pop
and
stos
(bad)
dec
xchg
xchg
pop
call
mov
leave
in
mov
pop
movs
scas
ret
aas
dec
jns
scas
add
(bad)
hlt
inc
xchg
lods
rol
adc
push
add
jp
nop
mov
pop
fmul
xchg
ds
ds
hlt
ja
or
mov
add
pop
popf
(bad)
sub
push
test
inc
fmul
sub
and
lds
mov
test
outs
and
sub
dec
dec
push
mov
xchg
sbb
inc
xor
xor
cmp
pop
lock
jnp
imul
mov
mov
rcl
cli
(bad)
ins
add
shl
inc
jo
(bad)
sbb
gs
mov
mul
sub
add
pushf
pop
push
shl
into
mov
sbb
(bad)
retf
mov
nop
jne
test
outs
mov
ss
test
or
or
cmp
int3
test
push
xchg
sub
inc
add
sbb
cli
retf
mov
pushf
jg
outs
arpl
call
mov
test
dec
xchg
xchg
cmp
or
dec
xor
sub
xor
gs
mov
and
or
jg
jne
je
cmp
cmp
jp
push
pop
popf
pop
pop
pop
jae
les
aam
stos
jae
(bad)
mov
inc
popw
inc
mov
sbb
stos
jl
and
popa
inc
out
dec
dec
xor
in
xchg
rcl
stos
cmp
mov
and
mov
(bad)
in
mov
sub
mov
cmps
mov
movs
xor
lods
jmp
leave
mov
mov
data16
xor
(bad)
jns
mov
popa
test
les
lods
retf
inc
cmp
in
lock
mov
gs
sbb
loope
sbb
dec
sar
jbe
adc
retf
call
jo
movs
and
(bad)
hlt
add
cmp
int3
cli
icebp
repz
outs
jmp
push
cmp
xor
mov
mov
mov
ja
(bad)
fsubr
fadd
push
push
pop
xchg
mov
pop
push
sub
mov
mul
int
das
jne
adc
jnp
mov
fisub
push
push
sbb
(bad)
sbb
pop
stc
sub
outs
mov
addr16
out
and
cs
mov
inc
push
inc
imul
mov
jne
movs
push
sbb
jns
xor
aam
sbb
xchg
iret
dec
inc
loope
in
cdq
mov
fcmovnbe
ja
xchg
adc
cmp
mov
in
push
rcr
adc
leave
inc
or
mov
(bad)
loopne
jg
push
bound
lds
push
in
xchg
aas
inc
mov
jmp
jae
mov
mov
xchg
sbb
shl
push
daa
in
push
sbb
cmp
mov
jb
pop
scas
ins
int3
push
mov
push
inc
push
sbb
shr
mov
enter
outs
mov
xor
movs
inc
xor
imul
sub
push
pushf
dec
xchg
push
test
scas
push
cmps
cmc
mov
idiv
xor
jmp
add
into
mov
in
push
rcl
xchg
cdq
out
xchg
or
ds
int3
popf
aas
lods
push
sbb
mov
push
jmp
jl
cmp
fcmovnbe
and
jae
inc
cmp
and
sub
cmp
pop
out
dec
sub
in
inc
mov
xor
sub
push
mov
mov
push
adc
fist
loop
shr
jno
or
push
add
ja
xchg
cdq
test
xor
or
scas
icebp
jmp
push
(bad)
in
inc
mov
pop
dec
jno
and
nop
imul
push
mov
jns
xchg
loope
mul
imul
inc
out
push
(bad)
lock
loop
xchg
test
bound
int
adc
xor
dec
inc
cmp
sbb
cmp
outs
mov
pop
imul
cmp
mov
or
rcl
outs
mov
inc
push
sbb
add
fadd
push
mov
inc
or
jg
ja
cmp
inc
inc
loopne
inc
lds
inc
frstor
jo
inc
cmp
inc
pop
mov
xchg
rcl
stos
stos
jle
sbb
push
or
xchg
retf
inc
mov
adc
dec
pushw
and
stos
rcl
fistp
sbb
out
lock
out
adc
ja
dec
imul
mov
cmps
ret
out
jnp
xchg
adc
push
fld
mov
mov
mov
mov
out
push
cld
jp
daa
sbb
sub
pop
fdivr
jae
ja
adc
xchg
int3
xor
xchg
test
sub
mov
jmp
out
loopne
mov
fidiv
imul
shr
mov
xchg
imul
pop
mov
mov
cld
mov
jo
adc
push
mov
inc
hlt
sbb
aad
daa
and
jmp
sbb
xchg
scas
xchg
adc
int3
jle
fisubr
cwde
mov
loop
xor
mov
cld
xor
bound
jns
aas
cmp
movs
fild
(bad)
inc
int
fld
inc
cmp
xcrypt-ofb
cmps
lods
(bad)
cmp
xor
ror
pop
bound
addr16
fist
and
xchg
shl
sbb
sbb
or
xor
inc
jae
cmp
sbb
test
clc
xlat
cwde
bound
mov
mov
mov
ret
sbb
mov
shr
fisttp
test
jo
pop
push
jne
mov
dec
es
fcom
xor
jnp
jg
push
or
shl
movzx
out
loop
push
enter
movs
inc
mov
mov
dec
pop
jp
imul
xchg
ins
jg
js
icebp
lds
cs
out
repz
jg
daa
scas
and
mov
bound
lahf
retf
mov
or
in
sub
and
mov
pusha
inc
sub
fstp
shl
test
jns
dec
das
enter
adc
out
pop
jnp
fisubr
aaa
(bad)
mov
scas
shl
adc
lea
std
cmp
mov
jecxz
fbstp
(bad)
ss
lock
(bad)
jnp
(bad)
iret
sbb
int3
rcr
test
(bad)
push
mov
push
iret
push
aaa
jo
stos
adc
mov
mov
push
mov
mov
std
popa
test
lods
mov
mov
inc
pop
or
lods
cwde
(bad)
repnz
(bad)
pop
out
or
xor
retf
nop
add
inc
mov
xchg
or
xor
dec
aaa
jle
cwde
es
stc
dec
je
sbb
call
mov
(bad)
push
fldenv
icebp
sbb
add
cmps
leave
mov
adc
loop
xchg
sub
push
mov
arpl
call
pop
fdiv
sti
call
sub
sbb
push
sti
pop
push
push
(bad)
in
jecxz
out
inc
xchg
ins
in
mov
mov
pusha
ins
adc
repz
idiv
stc
gs
sub
dec
lods
sbb
inc
dec
sar
add
or
fsub
cmps
arpl
push
xor
popa
fwait
rcl
out
dec
ret
jbe
rcr
push
imul
leave
add
shr
(bad)
enter
xchg
mov
mov
push
dec
mov
enter
add
fadd
push
push
ja
rol
ins
jb
in
push
ret
cmps
std
push
out
push
xor
or
int
int
sub
inc
iret
push
into
fwait
xor
shl
jmp
stos
mov
lds
push
cmp
shl
adc
pushf
int3
cmp
cli
fwait
jecxz
pop
pusha
cmp
aad
mov
sub
cmps
call
and
and
retf
inc
fadd
inc
pushf
mov
pop
and
aaa
cmp
scas
push
or
sub
mov
xlat
push
loop
hlt
cld
in
fwait
adc
ret
mov
add
dec
ds
push
pop
aaa
aaa
inc
add
dec
and
cwde
lods
and
or
add
push
sub
mov
pop
dec
addr16
adc
pop
and
imul
mov
out
inc
dec
ror
inc
sub
ja
jnp
mov
jno
mov
gs
inc
in
add
jbe
cmc
sti
int3
mov
loop
sub
call
sub
cdq
in
cmp
pushw
js
test
sub
sbb
call
mov
jmp
mov
aam
or
in
test
cmp
xchg
test
xchg
jg
jns
shl
or
push
and
out
sbb
call
inc
gs
mov
add
ror
mov
push
ret
push
and
fiadd
ds
bound
popa
and
std
xor
ja
mov
jg
rcl
inc
ret
push
call
hlt
sbb
inc
jae
add
aam
out
ins
xor
sub
dec
push
cli
stos
pop
jge
push
push
and
xlat
push
pusha
adc
pop
ss
inc
or
add
imul
clc
push
hlt
xchg
enter
jge
inc
adc
sar
xchg
sub
dec
mov
aam
sbb
mov
scas
cmp
mov
enter
mov
or
jne
cmp
std
cmc
push
cmc
inc
mov
fiadd
add
adc
out
jo
pop
gs
push
or
sub
out
inc
sti
jb
pop
xlat
ds
sbb
imul
push
imul
scas
cmp
dec
xchg
idiv
mov
mov
adc
adc
scas
and
shr
xor
paddusb
push
push
cld
nop
dec
pop
dec
mov
out
stc
mov
add
lock
outs
leave
dec
and
dec
inc
clc
sbb
fnstcw
mov
fs
pop
(bad)
push
fcomp
mov
into
int3
jns
mov
mov
sub
add
xchg
and
sbb
pushf
sar
sbb
pusha
popa
adc
xor
lods
rol
or
ds
push
pop
iret
inc
push
add
(bad)
mov
and
add
retf
sbb
icebp
jbe
dec
movs
shl
mov
and
out
daa
add
(bad)
pop
lods
call
test
jge
inc
fisub
and
mov
and
push
mov
cmps
add
xchg
mov
sub
cdq
push
xor
(bad)
sti
out
lea
push
adc
inc
je
add
mov
or
shl
dec
(bad)
fs
nop
clc
xchg
sbb
add
dec
inc
lods
jg
mov
iret
fadd
or
cmp
xlat
test
xor
cmp
pop
aas
hlt
pusha
out
xchg
push
push
inc
or
int
icebp
pusha
jb
xor
retf
cmps
sub
scas
pop
sbb
mov
jbe
push
or
dec
pop
test
cmp
xchg
mov
xchg
push
push
xor
mov
call
(bad)
out
xchg
push
shl
or
(bad)
ins
mov
pop
daa
stos
push
push
pop
ret
mov
xchg
aaa
lods
push
or
dec
clc
popa
mov
mov
inc
mov
and
imul
push
mov
inc
ror
cmp
and
pop
and
xor
out
fmul
ret
mov
rcl
inc
or
ins
test
adc
(bad)
cli
mov
add
pop
(bad)
in
pusha
arpl
add
(bad)
push
bound
xchg
mov
mov
add
jg
mov
in
cs
add
pusha
cli
out
adc
mov
retf
retf
adc
mov
cli
std
ret
fisttp
cwde
outs
push
xor
dec
mov
cmp
cwde
add
mov
add
sub
test
popf
popa
(bad)
cli
pop
cmp
pop
jle
mov
jno
push
lods
out
mov
and
mov
xor
mov
mov
jo
fst
pop
(bad)
not
mov
xchg
cmp
jb
pop
fdiv
aad
xor
stos
dec
or
fcmovu
(bad)
out
(bad)
dec
dec
inc
cmp
mov
std
call
popa
mov
out
jl
sub
dec
push
inc
retf
jmp
mov
cmp
ins
mov
stc
jb
mov
test
mov
jl
fdivrp
push
sar
mov
pusha
clc
xchg
es
mov
std
pop
mov
in
mov
out
adc
icebp
sub
js
loopne
shr
jmp
out
icebp
rcr
inc
cli
or
inc
mov
lahf
dec
pop
cmps
jnp
cmp
inc
push
cmp
jmp
retf
fsubr
inc
xchg
push
aad
dec
aaa
xchg
aam
adc
nop
or
push
add
push
add
xor
mov
push
add
pop
mov
out
out
or
inc
out
(bad)
cmc
mov
push
cmp
(bad)
adc
cmp
jne
fild
(bad)
mov
xorps
push
mov
ds
inc
in
inc
mov
dec
pop
in
add
push
repnz
xchg
test
mov
sub
inc
cmps
into
mov
and
aam
ficom
add
neg
arpl
ja
mov
xor
cld
sub
shl
xor
aam
cdq
or
loope
sbb
test
ins
dec
movs
popa
js
sbb
ret
dec
scas
shl
into
xchg
sub
sbb
call
ins
(bad)
xor
sub
jg
cmps
into
cdq
fistp
push
movs
xchg
add
mul
and
movs
daa
aas
test
mov
test
icebp
rcr
push
mov
gs
push
fdivr
adc
cmp
popa
div
popa
and
clc
out
jno
jnp
jl
in
sti
sbb
pushf
(bad)
mov
icebp
inc
or
push
call
fwait
jnp
jmp
jb
scas
mov
pop
or
mov
data16
lods
mov
dec
arpl
in
retf
dec
cld
pop
fs
fmul
mov
stc
popf
in
and
and
cmc
aas
imul
or
cwde
bound
stos
mov
das
pop
jns
test
ins
push
outs
push
out
es
mov
in
cmp
mov
adc
lds
xor
adc
xchg
inc
jnp
js
scas
mov
scas
ffreep
mov
out
pusha
lea
pop
cmc
ins
sbb
cs
ins
xchg
int3
jns
leave
sub
jle
sub
pop
in
lahf
gs
push
repnz
fldlg2
popf
shl
retf
dec
shr
fnstsw
ja
ja
out
push
pop
jno
mov
cmp
jne
dec
pop
jecxz
push
rcr
stos
(bad)
push
mov
xchg
loope
scas
arpl
stos
sbb
ret
lods
inc
retf
push
(bad)
das
jge
jg
sub
inc
lock
enter
loope
loopne
and
push
cmp
out
gs
sub
cdq
pop
sub
xchg
call
add
xor
push
inc
lock
scas
jnp
jge
xchg
mov
in
dec
or
adc
ss
clc
les
jae
icebp
sub
in
in
cmp
in
(bad)
pusha
movs
push
and
pop
and
push
xlat
add
mov
mov
push
pop
mov
mov
mov
pusha
jne
cmp
pop
stc
add
mov
jno
bnd
out
push
enter
arpl
(bad)
jbe
adc
jno
ds
(bad)
jns
jnp
imul
loopne
jne
mov
dec
pop
push
mov
loopne
retf
and
pop
sbb
adc
rcr
jnp
test
jnp
pop
imul
add
jnp
and
or
dec
call
fnstsw
aad
pushf
(bad)
(bad)
icebp
(bad)
jmp
cld
jl
mov
xor
and
sbb
cmp
popf
(bad)
mov
scas
movlps
scas
int
xchg
mov
neg
mov
xor
sbb
adc
out
xor
xor
and
sub
xchg
inc
fst
push
lds
lods
cmp
mov
mov
sub
aad
enter
mov
mov
repz
add
jbe
mov
test
mov
cld
icebp
fstp
out
cwde
movs
ret
cmp
mov
fnstcw
hlt
out
push
movs
mov
popf
arpl
mov
stos
jnp
scas
aaa
xchg
pop
cmp
test
jae
xor
in
(bad)
(bad)
je
(bad)
push
mov
and
jae
(bad)
mov
mov
mov
push
mov
(bad)
mov
icebp
inc
jg
jns
std
jbe
mov
cmps
nop
mov
mov
mov
xchg
call
ss
add
adc
jmp
sbb
push
hlt
popa
sahf
out
add
and
test
ror
aaa
int
ja
enter
idiv
lea
lock
add
cmps
dec
out
repnz
or
jmp
pop
pushf
mov
imul
add
stos
cmp
mov
push
ret
popf
out
mov
push
jmp
pop
mov
les
lock
call
stc
dec
and
sub
test
adc
aaa
mov
dec
cmps
nop
movs
or
aad
div
fimul
mov
movs
add
mov
call
mov
jecxz
rol
pop
xchg
push
dec
inc
fsub
mov
movs
push
call
into
xchg
cmps
inc
push
sahf
std
jno
adc
sub
mov
fdivr
and
lea
out
pop
aam
js
sbb
into
xchg
mov
aas
fnstsw
fiadd
xchg
jl
xchg
sbb
fbld
ret
scas
push
mov
inc
mov
add
push
(bad)
stc
jbe
push
mov
mov
sbb
clc
jbe
cmp
into
iret
inc
jmp
cmp
xchg
push
loope
cs
mov
xor
sbb
or
in
arpl
xchg
scas
scas
je
sub
mov
mov
outs
sub
fmul
mov
icebp
js
inc
(bad)
mov
ror
ins
adc
cdq
ins
xchg
das
add
test
push
dec
out
shl
test
or
leave
xor
ss
repz
jbe
pmulhuw
outs
hlt
mov
jno
pop
fistp
push
jmp
xor
ins
ins
sub
scas
pop
jno
call
add
clc
xor
in
das
(bad)
sub
outs
add
cdq
inc
sti
shr
out
jg
pop
dec
add
cmp
inc
mov
sbb
(bad)
cs
push
dec
xchg
mov
(bad)
into
add
sbb
push
pop
fs
mov
jmp
out
mov
(bad)
in
mov
adc
cdq
out
lahf
mov
in
ja
or
ret
cmps
in
not
lea
add
enter
dec
push
add
sub
mov
mov
xchg
jl
adc
inc
gs
dec
fsubr
mov
ja
jo
push
mov
pop
pop
movs
push
in
push
sbb
inc
lds
add
imul
or
sbb
js
push
pop
retf
push
dec
and
sub
jmp
add
outs
mov
popa
push
dec
(bad)
sbb
jecxz
and
retf
stos
xor
push
int3
or
inc
pop
cmp
es
push
inc
xchg
mov
popa
iret
mov
push
sub
pop
add
or
lahf
push
mov
adc
sbb
lahf
int
outs
(bad)
or
mov
lds
mov
jnp
and
push
shr
mov
add
ss
dec
shl
pop
push
sbb
mov
aas
jbe
or
dec
sbb
ins
cli
jns
mov
dec
mov
retf
mov
loopne
(bad)
jmp
jae
aaa
dec
xor
rcl
adc
fld
adc
jp
pusha
popf
cmps
mov
xor
and
outs
mov
call
rol
mov
pop
mov
cli
cmp
xor
mov
xchg
mov
xlat
sbb
cmc
push
iret
sbb
add
gs
mov
movs
jge
ins
or
sbb
xor
mov
les
jbe
xchg
mov
sub
pop
jmp
fcom
es
into
dec
push
and
xor
dec
inc
mov
test
jnp
cld
mov
xchg
cli
pop
mov
dec
sbb
icebp
ins
pop
dec
cmps
jmp
or
inc
fnsave
cld
shr
movs
(bad)
stos
je
cwde
ins
and
fisttp
out
or
fimul
clc
inc
shr
cmp
sbb
pop
popf
cmp
inc
(bad)
arpl
ins
jae
xadd
or
es
ds
xchg
jno
mov
ins
cdq
push
adc
sbb
cmps
xchg
inc
mov
pop
dec
icebp
dec
mov
clc
cmps
(bad)
xchg
hlt
jb
mov
lahf
in
mov
cmc
mov
lea
dec
push
fild
in
mov
push
repnz
add
icebp
retf
and
adc
fwait
push
test
lahf
push
(bad)
(bad)
in
loope
cmc
and
push
lea
mov
adc
lahf
(bad)
std
mov
ss
adc
test
dec
lds
call
mov
mov
sub
sub
imul
rcr
rcl
in
cmc
jnp
retf
or
push
ret
jmp
or
daa
shr
cs
out
aam
xor
dec
xchg
add
push
adc
adc
pop
popa
imul
jns
cmp
ficomp
mov
xor
inc
inc
stc
mov
xchg
dec
(bad)
push
push
push
cmps
sub
out
sub
add
loope
fdiv
div
call
add
fsub
dec
test
mov
test
mov
push
test
inc
mov
dec
scas
dec
sbb
xchg
dec
jbe
push
jmp
sti
in
inc
out
fistp
sub
repnz
aad
inc
mov
test
cs
(bad)
iret
inc
push
mov
iret
fcomp
inc
hlt
sub
jae
jnp
cld
mov
gs
mov
or
mov
loope
inc
imul
inc
adc
or
adc
out
bound
mov
in
icebp
outs
retf
mov
mov
cmp
push
sub
push
push
push
out
sub
imul
cmps
jb
icebp
and
push
rcr
jle
std
arpl
xor
sub
adc
lea
popa
test
sar
push
jmp
adc
pop
scas
pushf
mov
xchg
dec
ds
cli
or
push
daa
jo
retf
xchg
add
in
loope
add
jnp
inc
ins
outs
xchg
imul
ds
add
or
dec
cmp
or
mov
lods
neg
mov
ror
xchg
shl
inc
push
adc
dec
add
inc
inc
jmp
dec
scas
sub
mov
test
ss
shl
jne
pushf
out
retf
es
fisttp
or
xchg
cmp
sub
dec
cld
or
(bad)
(bad)
jmp
clc
sahf
pop
retf
push
fxch
movs
std
movs
add
add
ret
movs
add
xchg
repz
clc
mov
std
jnp
fucomi
cwde
stos
hlt
or
test
pop
dec
loopne
or
adc
jl
cmp
and
mov
pop
xchg
aad
leave
outs
in
pop
out
ss
xchg
mov
and
jns
jae
dec
or
pop
and
inc
cmps
dec
std
push
stos
xchg
test
in
idiv
xor
iret
dec
vfnmadd231ps
mov
xchg
sbb
mov
pop
cmp
add
adc
test
adc
pop
ret
jns
inc
sbb
jmp
mov
loop
mov
jmp
xchg
mov
daa
push
inc
sbb
pop
outs
dec
nop
ja
push
fisub
mov
dec
xchg
mov
out
pop
mov
popa
push
mov
test
push
les
mov
cmps
push
aam
sbb
rcl
mov
scas
adc
push
adc
or
(bad)
xchg
mov
mov
movs
mov
fist
in
xchg
repnz
cmp
jecxz
xchg
imul
(bad)
jge
das
aas
or
pushf
cmp
jne
movs
dec
out
mov
loopne
xor
sub
dec
mov
scas
push
pop
xor
daa
mov
pop
outs
adc
sbb
push
add
ins
or
or
sbb
xchg
push
cli
daa
test
imul
mov
inc
xchg
xchg
lods
jle
inc
and
mov
movs
dec
cmps
out
pop
lods
and
loope
adc
inc
test
sub
mov
dec
mov
cmp
xor
or
mov
leave
leave
fadd
mov
sub
mov
mov
sbb
imul
ins
pop
rcr
xor
loopne
sbb
aad
mov
inc
repz
mov
mov
mov
(bad)
pop
jp
pusha
pop
or
and
frstor
rol
movs
fwait
add
add
sub
mov
add
push
sub
mov
mov
add
push
mov
cmps
sub
dec
shl
scas
cmp
adc
outs
stos
xchg
dec
out
mov
add
into
les
ficom
cdq
xchg
mov
lea
fldenv
pop
stos
jg
fdivr
out
and
pop
pop
enter
outs
(bad)
sub
js
or
sar
sub
inc
sub
(bad)
mov
mov
cmc
cmp
test
jge
clc
lahf
mov
jg
gs
push
enter
lds
(bad)
sti
rcl
mov
push
out
pop
xchg
ds
add
dec
in
dec
stos
mov
or
cmp
test
fsub
adc
mov
adc
mov
mov
jno
test
mov
adc
enter
idiv
adc
inc
mov
add
aam
inc
pop
cs
popf
mov
aad
adc
push
mov
popa
nop
or
mov
aaa
call
mov
cld
push
cdq
or
(bad)
xchg
sbb
in
fisubr
dec
into
mov
and
pop
jmp
push
dec
pushf
push
mov
fld
into
mov
lods
dec
pop
test
call
leave
shl
inc
lea
arpl
les
xor
je
xchg
stos
pop
mov
pop
dec
add
shl
sub
stos
std
scas
push
pushf
jne
test
lea
or
pop
push
stos
mov
movs
push
mov
adc
dec
mov
add
cwde
add
xor
or
into
add
aam
jmp
and
mov
rol
and
and
jecxz
lock
adc
lds
ficom
sar
or
cwde
out
mov
rol
mov
hlt
loopne
cmp
mov
dec
add
add
in
rcl
add
cmc
in
bound
addr16
sbb
int3
jg
xor
inc
ror
fild
fwait
pop
jo
in
fisubr
ror
cmp
pusha
jne
adc
inc
pusha
mov
adc
scas
cs
adc
pop
mov
cli
pusha
fidiv
and
pop
xchg
popf
(bad)
sub
(bad)
dec
clc
cmp
(bad)
xchg
cmc
retf
test
fcom
pop
dec
iret
and
gs
add
jns
aad
pushw
movs
sbb
cli
sbb
(bad)
mov
sbb
pushf
mov
(bad)
call
mov
jge
mov
ja
std
inc
pop
push
mov
mov
dec
ja
mov
adc
cmp
test
(bad)
mov
xchg
mov
popa
sbb
mov
cld
fs
inc
dec
or
pop
data16
jecxz
push
(bad)
rcr
mov
mov
xor
push
sub
enter
pop
or
and
int3
(bad)
stos
push
rcr
xchg
mov
lods
nop
sbb
mov
aam
mul
in
pushf
and
sahf
mov
adc
imul
mov
test
mov
dec
out
imul
inc
cmc
adc
ficomp
cmps
loope
sbb
push
dec
outs
fld
add
sub
sub
in
int
into
lods
dec
sti
out
sbb
or
in
iret
sahf
popf
cmp
sbb
jae
cmps
pop
int
(bad)
add
push
dec
xor
adc
push
sar
mov
add
out
fwait
add
inc
and
rcl
stc
jmp
jae
nop
(bad)
(bad)
pop
loopne
sahf
mov
(bad)
jbe
es
adc
call
or
or
push
scas
cwde
lock
call
into
sahf
retf
rol
fsub
fbld
xchg
lahf
dec
mov
push
call
fdiv
(bad)
cmp
dec
inc
push
mov
mov
adc
shl
add
(bad)
jmp
xchg
nop
jno
xor
xchg
jge
and
adc
xor
mov
or
xchg
or
fld
inc
add
jno
jns
into
jo
adc
aad
lods
fisubr
das
dec
fisttp
push
xchg
xor
push
clc
add
inc
outs
and
cmp
mov
mov
cld
idiv
cmps
and
fwait
jb
push
jmp
clc
cmps
jns
int
jae
cli
add
in
jmp
sub
push
fsubrp
leave
imul
xchg
lea
movs
into
loope
popa
add
(bad)
leave
push
fdivr
cmp
shl
push
jae
int
push
xchg
scas
mov
jns
fwait
pop
add
ds
icebp
sbb
xchg
mov
jmp
jne
(bad)
jo
or
push
mov
popa
pop
mov
in
mov
paddw
push
xchg
xchg
es
aas
xlat
push
ffreep
push
pop
adc
ret
(bad)
fld
outs
jns
or
push
loop
retf
push
in
adc
mov
out
and
out
adc
mov
push
add
imul
loopne
or
js
(bad)
jb
jb
retf
add
sbb
bound
dec
push
aam
adc
jecxz
mov
dec
(bad)
xchg
adc
pop
imul
sub
loope
add
arpl
and
sbb
sbb
sbb
pop
shl
pop
pushf
mov
sbb
in
iret
ja
and
cmp
adc
idiv
mov
push
adc
xchg
aas
inc
not
icebp
not
clc
sub
or
fmul
pop
dec
sbb
stos
popa
mov
stc
sbb
out
jae
xchg
mov
cdq
xor
inc
jb
xor
dec
add
jl
div
iret
cmp
dec
shl
cmp
push
mov
outs
gs
fsub
rcr
or
(bad)
xchg
shl
gs
jbe
jmp
adc
xchg
xchg
adc
ss
mov
retf
inc
pop
ror
hlt
lods
xor
cs
sub
stc
ja
pop
inc
mul
ins
mul
adc
(bad)
repz
test
popa
mov
mov
jnp
inc
sahf
cmps
push
sbb
and
into
mov
fdivr
inc
xchg
jecxz
jp
ss
shufps
fisub
xor
cmp
and
jmp
push
inc
xor
pop
retf
sub
aam
sar
xor
mov
jl
sub
mov
ins
loopne
retf
sub
lahf
add
test
mov
pushf
sub
jae
into
test
ret
(bad)
push
pusha
je
adc
sub
dec
sahf
xor
ins
lods
sub
clc
inc
bound
arpl
or
nop
pop
mov
fs
jno
and
scas
imul
repnz
cmps
inc
mov
sbb
mov
jle
ret
(bad)
fimul
inc
push
jmp
sub
pop
xor
(bad)
in
push
jle
out
xchg
fdiv
cmp
jo
sbb
ins
rcl
xor
dec
(bad)
xchg
or
aad
xor
lock
adc
xchg
add
shl
(bad)
imul
jle
mov
jae
mov
xchg
rol
test
adc
loop
loopne
ret
arpl
mov
pop
or
das
ss
loopne
adc
fmulp
push
sub
fidivr
adc
lds
cs
inc
aaa
jns
lds
jmp
mov
sbb
out
jle
pop
in
jl
dec
cdq
and
add
inc
mov
dec
ds
pop
scas
scas
jge
gs
sbb
outs
or
(bad)
shl
movs
retf
fnstsw
pop
add
cmp
xchg
xchg
mov
jnp
adc
outs
inc
push
cld
cmp
mov
lods
ja
xchg
cmp
shl
out
jo
hlt
imul
xor
xor
jle
fxtract
pop
push
(bad)
and
ins
xchg
push
mov
mov
movs
fmul
(bad)
ins
jns
jge
mov
(bad)
xchg
int
add
mov
fadd
aas
out
xchg
loop
mov
int3
mov
mov
sbb
lock
retf
lods
outs
sub
or
sbb
mov
jl
sbb
jno
mov
scas
fistp
push
(bad)
mov
push
lds
inc
push
shl
sub
sti
jae
xor
sub
and
jno
inc
fyl2x
sbb
shl
(bad)
mul
fsubr
inc
lods
xchg
xlat
ret
sub
pop
mov
lock
int3
(bad)
cmp
enter
push
ss
je
ss
ss
mov
push
(bad)
(bad)
pusha
jo
ret
aaa
(bad)
cdq
das
mov
push
(bad)
mov
repnz
pop
sar
call
pop
push
sbb
repz
jg
inc
inc
mov
cld
loop
and
add
jg
mov
inc
js
sbb
(bad)
cld
jbe
les
pop
push
or
mov
cli
cld
test
in
jns
sub
jge
jno
xlat
add
pop
cmp
leave
(bad)
in
inc
loope
nop
aas
mov
pushf
sti
adc
jmp
jns
test
addr16
inc
pop
sub
stos
push
aam
cs
push
xor
int
xor
add
lods
xor
or
(bad)
push
jmp
sub
mov
dec
popf
mov
sub
test
mov
push
sbb
pop
fst
and
cwde
bound
dec
sub
retf
xchg
add
gs
out
xchg
rcl
mov
pop
mov
out
mov
sbb
xchg
(bad)
frstor
neg
inc
iret
add
fs
jmp
jnp
sahf
jnp
adc
aas
outs
mov
xchg
sbb
and
retf
xchg
fcom
test
xchg
xchg
add
or
inc
les
add
movups
ret
and
jo
movs
inc
mov
int3
out
pop
cmp
jge
retf
push
ja
mov
jo
xor
or
ficom
call
pop
xor
sti
shl
adc
or
ds
int3
leave
jle
jbe
cld
enter
loop
mov
mov
push
arpl
(bad)
popf
pop
ret
pop
cmp
popa
ds
xchg
imul
dec
in
jae
lods
rcl
pop
int3
add
jb
pop
mov
(bad)
shr
and
xor
mov
mov
mov
arpl
fwait
sahf
push
les
in
mov
out
jge
pop
sub
out
inc
xchg
(bad)
mov
mov
iret
jnp
rol
loope
cmp
mov
scas
ret
adc
mov
arpl
and
inc
adc
fidivr
xchg
daa
and
pop
add
es
mov
xchg
repz
mov
add
stos
push
add
cmp
gs
push
cmp
add
inc
jle
fwait
test
ins
sbb
lods
jg
mov
pop
test
add
les
jmp
mov
mov
cmps
mov
imul
ins
lods
inc
lahf
jb
dec
iret
push
inc
push
fidiv
push
pop
jp
mov
jne
lds
push
cli
and
shl
das
mov
xor
jl
fisubr
or
lahf
or
(bad)
fld
shl
jp
mov
iret
icebp
jae
pop
ret
hlt
jo
lds
or
aad
and
or
scas
or
(bad)
cli
mov
fnclex
mov
mov
sub
cmp
cmp
int3
(bad)
ins
mov
jne
dec
pop
mov
rcr
popf
pop
xor
les
jo
xor
and
retf
mov
or
jne
js
shl
xchg
pop
out
jp
arpl
mov
jbe
inc
ss
in
push
nop
sbb
and
pushf
fldl2e
mov
dec
out
mov
xchg
scas
stos
(bad)
repnz
or
clc
(bad)
jmp
cmp
push
pop
retf
inc
pop
cmps
xchg
sub
ss
fcmovu
pusha
data16
shr
dec
sub
call
dec
dec
imul
mov
pop
add
jg
mov
stos
mov
ror
aaa
mov
fcomp
mov
lock
push
adc
jae
gs
push
nop
dec
add
push
adc
push
popf
iret
out
jb
(bad)
xchg
jb
js
inc
movs
mov
xlat
and
cmps
dec
push
pop
push
(bad)
xchg
cmps
adc
daa
fist
pop
adc
sti
les
scas
push
out
inc
jmp
test
ret
data16
push
mov
jmp
dec
pushf
adc
das
pushf
je
scas
dec
fs
je
iret
and
dec
push
pop
rol
jg
cmp
ins
and
xor
xchg
or
sub
imul
xchg
or
mov
xchg
cdq
jge
repnz
cmps
xor
mov
js
mov
inc
sbb
cbw
(bad)
cs
mov
push
in
lods
xchg
dec
xchg
add
int
adc
pusha
sahf
ja
stos
cmp
adc
daa
repz
push
jmp
dec
dec
jl
xchg
cdq
ds
pop
xchg
jb
(bad)
nop
cmp
sbb
out
scas
jg
xchg
cdq
loope
imul
pop
dec
out
push
loop
xor
mov
jmp
rol
stos
cmp
imul
push
leave
mov
mov
sub
cdq
dec
rcr
int3
or
sbb
or
sti
push
out
aam
clc
aad
inc
push
out
call
clc
cwde
test
and
xchg
cmps
call
ins
push
fbstp
jl
push
add
jg
nop
lods
loope
gs
icebp
cmc
test
aam
es
fisub
fstp
aad
or
inc
aam
arpl
inc
clc
mov
fdiv
(bad)
xchg
xchg
jbe
sub
push
xor
pop
xchg
jb
xor
push
mov
ins
pusha
jae
(bad)
pop
jecxz
jle
(bad)
mov
cs
dec
mov
outs
add
pop
push
idiv
jb
jo
push
sbb
push
jb
pop
iret
add
dec
lahf
xor
sub
sub
push
pop
lds
bound
add
fidiv
xor
mov
cmp
aam
jne
xchg
aad
cld
cmp
or
fnop
sbb
mov
ds
sbb
rcr
mul
push
loopne
xchg
cmp
in
je
and
test
icebp
mov
ss
cwde
add
test
shl
rol
sub
pop
int3
xor
push
push
xchg
xor
fisubr
inc
test
and
cmp
xor
push
push
rcl
xchg
add
jae
jecxz
imul
test
cmp
mov
pop
outs
ins
aam
or
jecxz
jle
shl
inc
in
lods
icebp
mov
es
in
in
mov
bswap
dec
jmp
mov
adc
pop
jmp
xchg
push
inc
or
xor
aam
inc
test
aad
or
std
js
xor
shr
dec
jg
das
push
inc
push
xchg
(bad)
mov
dec
fs
push
(bad)
mov
cdq
popf
movs
pop
bound
cmps
cmc
jge
jae
int
mov
push
(bad)
adc
nop
les
fcom
icebp
xlat
and
or
shl
xchg
arpl
lahf
cli
sbb
leave
outs
jle
mov
retf
cdq
loop
jb
pop
ins
push
arpl
sbb
push
into
scas
retf
loop
test
sbb
sti
pop
jo
jnp
jb
mov
inc
inc
sub
test
ffree
inc
push
inc
rol
xchg
or
sti
shl
sub
xor
adc
popa
sbb
mov
sbb
cmp
in
cmp
scas
dec
call
es
push
(bad)
call
in
jmp
jmp
jmp
jg
jmp
ficomp
xor
ds
fcmovne
xchg
addr16
cli
pop
and
(bad)
scas
or
xchg
pop
xor
pop
mov
add
lods
xor
add
sub
int
fld
aad
fwait
loope
mov
push
movs
jmp
xor
and
mov
pop
pop
(bad)
mov
xchg
cmp
and
inc
mov
leave
xchg
adc
or
push
mov
scas
sbb
cdq
in
jne
sti
ja
pushf
into
xchg
cmp
pop
cmps
or
lds
mov
(bad)
cli
ss
ror
inc
add
das
inc
(bad)
dec
clc
push
pop
xchg
std
push
adc
stos
mov
(bad)
dec
stc
dec
pop
xchg
stos
out
lea
dec
lock
lods
push
cwde
pop
xchg
dec
adc
mov
cwde
aaa
xchg
and
cmp
mov
jg
and
dec
jbe
mov
enter
pop
pop
imul
xor
cmp
pop
push
test
dec
ret
(bad)
mov
mov
aas
icebp
imul
int
sbb
sub
inc
bound
nop
jnp
arpl
(bad)
mov
push
xor
sahf
mov
repnz
jb
pop
dec
xchg
outs
push
int3
cmp
call
mov
fild
push
push
aad
ins
dec
dec
loopne
dec
adc
ja
or
push
out
mov
or
inc
inc
push
jne
mov
jmp
xor
les
(bad)
clc
in
fnstcw
fs
mov
mov
mov
repz
sbb
in
and
mov
call
push
push
jecxz
xchg
dec
movs
dec
cmps
or
or
jae
nop
mov
mov
jo
push
xor
lods
mov
dec
sub
test
mov
xchg
xor
scas
add
repz
in
push
sbb
mov
pop
(bad)
imul
cmp
pop
xor
jge
lock
adc
mov
fbstp
lds
out
adc
mov
imul
jb
jnp
cmc
(bad)
mov
fnsave
or
sub
inc
mov
nop
sub
dec
cli
test
mov
loopne
add
mov
mov
fist
sti
std
pop
cmps
aam
jl
add
bswap
mov
cmp
jmp
imul
jbe
and
or
gs
jne
enter
loopne
mov
jp
inc
sar
imul
out
arpl
mov
xchg
aas
sub
stc
jle
test
dec
loopne
test
cmp
mov
mov
mov
iret
in
lock
aam
fwait
popf
test
sub
test
gs
push
cmps
fwait
sti
jns
push
shl
push
imul
sub
cmp
adc
popa
rol
rcr
aad
inc
loope
not
imul
fidivr
test
ror
ss
adc
imul
dec
sbb
fist
sbb
cs
fst
or
ins
ds
mov
cmp
mov
sub
data16
sbb
push
xor
jmp
scas
dec
std
rcl
lock
push
setne
cs
pop
pop
sahf
sbb
int3
xchg
pusha
repnz
add
cmp
ficom
call
xchg
cmc
test
cmps
pop
jecxz
in
inc
mov
into
lock
adc
(bad)
aad
pop
div
adc
mov
dec
leave
mov
mov
push
mov
xchg
int3
xchg
popa
int3
iret
dec
xlat
adc
pop
cwde
es
push
mov
lods
and
cmp
xor
int
mov
add
out
xchg
scas
push
sahf
ret
mov
pop
mov
or
rol
out
aad
aad
inc
add
adc
xchg
es
in
cmp
jo
int
into
lea
repz
(bad)
dec
jns
xor
mov
ja
mov
push
popa
fiadd
xchg
jle
cld
dec
or
aad
or
xchg
xor
pusha
fnstsw
mov
inc
clc
pop
xchg
jbe
mov
mov
out
in
cmp
in
push
xchg
jge
ins
ret
repnz
loope
pop
and
dec
mov
push
dec
lock
xor
pop
stc
(bad)
push
and
stc
dec
cmps
mov
fcmovbe
fisubr
and
not
fstp
out
lock
inc
pcmpeqd
(bad)
dec
sub
sbb
jecxz
mov
sbb
daa
or
push
fs
jnp
mov
popf
ret
jmp
or
add
cwde
imul
xchg
xchg
mov
mov
rcr
push
js
cs
or
outs
mov
out
stos
and
mov
add
pop
in
frstor
cmp
imul
mov
test
or
lock
sbb
bound
mov
or
or
cli
adc
push
retf
lea
cmp
jge
in
cmp
mov
mov
xor
xor
nop
shl
lea
imul
adc
mov
or
sbb
loope
pop
stos
out
lods
lds
mov
mov
xor
push
(bad)
jnp
enter
add
and
push
(bad)
pop
ins
cmp
push
jmp
bound
push
test
jb
push
outs
psllq
aaa
sub
adc
pop
cmps
mov
call
mov
add
out
sbb
data16
or
inc
dec
push
mov
mov
je
push
add
xchg
jecxz
pop
(bad)
inc
inc
push
push
jo
add
push
xor
into
mov
call
push
inc
iret
sub
jbe
into
out
hlt
call
xor
mov
mov
xchg
enter
adc
adc
das
leave
dec
inc
aad
add
xchg
out
in
sbb
jnp
stos
add
mov
div
push
out
nop
cs
repz
cmp
cs
mov
fnstsw
sbb
std
mov
jecxz
loope
mov
sbb
pop
addr16
mov
je
je
and
dec
aam
aaa
outs
call
das
mov
imul
and
stos
mov
loope
sub
mov
pop
push
mov
xor
call
std
push
rol
adc
ja
rcl
dec
scas
fucomip
repnz
xor
push
adc
dec
movs
stos
sub
hlt
sti
out
and
loope
add
movs
sub
and
sub
(bad)
rcl
jo
leave
int3
adc
jae
retf
cdq
fnstcw
mov
(bad)
pop
scas
jg
or
xchg
cmp
pop
fistp
fld
jne
xchg
pop
(bad)
mov
leave
xchg
mov
in
xchg
jmp
(bad)
imul
lods
sbb
int
or
shr
jg
popa
imul
adc
adc
jg
add
aad
jecxz
ja
test
push
rol
ret
cmp
mov
adc
xchg
loop
add
and
lea
dec
and
cmp
outs
or
ins
(bad)
loopne
imul
mov
aas
movs
or
stc
cmp
loopne
pcmpgtd
lods
push
pop
xchg
mov
inc
ins
stos
jnp
(bad)
pop
retf
call
push
mov
sbb
mov
cmp
inc
push
pop
jmp
shr
lods
lods
cmps
cmp
movs
mov
jg
fnstsw
add
dec
mov
cmp
mov
addr16
mov
in
(bad)
ficomp
pop
xor
sti
aas
pusha
fiadd
push
sub
xchg
jmp
ss
inc
add
add
and
leave
mov
cmps
inc
ja
mov
movs
stos
mov
jmp
popa
mov
sub
mov
nop
mov
pop
cwde
out
bound
ror
inc
lahf
pop
xor
xchg
ret
shl
pop
adc
lds
stc
outs
gs
dec
imul
(bad)
data16
xlat
ins
dec
push
inc
sub
sub
(bad)
fidivr
popf
jecxz
adc
add
fisubr
sub
dec
jge
addr16
lds
xor
sub
inc
int
cmp
xchg
repz
mov
pop
sbb
adc
xor
push
dec
pop
loopne
call
push
imul
push
retf
fmul
pop
lock
in
shr
repz
mov
push
(bad)
popf
leave
les
data16
push
repz
and
sar
loope
dec
fist
cld
dec
(bad)
push
push
les
test
xchg
and
lock
mov
ret
sbb
add
xor
aad
sub
sbb
(bad)
pop
inc
mov
mov
ret
neg
cmp
pop
pop
xchg
inc
inc
push
loop
and
pop
nop
lahf
(bad)
(bad)
push
int3
test
in
bound
or
mov
movs
cmp
sub
mov
movs
and
imul
push
sub
imul
int3
dec
xchg
(bad)
xlat
push
inc
lods
push
lea
icebp
sahf
mov
outs
pop
out
cmps
jecxz
call
sbb
cmp
shl
mov
jg
cld
js
push
mov
push
ret
dec
jns
ror
xchg
sbb
fisttp
jl
inc
clc
fisttp
jae
lods
icebp
out
neg
ror
clc
pop
dec
int
cmp
sub
inc
dec
mov
pop
adc
repnz
(bad)
enter
push
xor
dec
mul
sahf
clc
and
enter
inc
cmps
adc
pop
hlt
scas
push
xchg
cmp
jb
pop
movs
dec
mov
scas
xchg
mov
ffree
and
inc
sub
fstp
jnp
loopne
pop
cwde
push
sbb
ja
xchg
dec
(bad)
stos
in
push
cmp
xor
pusha
pop
in
dec
mov
lock
and
jo
in
(bad)
or
jo
push
scas
aam
sahf
cdq
and
push
adc
repnz
cli
xor
sub
xor
push
and
(bad)
adc
into
add
inc
aad
mov
jecxz
add
dec
icebp
sub
cmp
fstp
mov
aad
mov
add
test
fcmovnb
mov
outs
js
mov
outs
and
mov
leave
repz
(bad)
mov
(bad)
repnz
cmp
int3
scas
push
lods
je
adc
xchg
xor
jle
popf
dec
lds
and
mov
clc
(bad)
mov
pop
add
or
cmc
fsub
popf
call
fisub
sub
stos
psubq
pop
in
xchg
(bad)
jecxz
sbb
inc
pop
dec
imul
cmp
jno
sub
(bad)
mov
dec
sahf
jmp
adc
sub
push
out
inc
not
and
leave
jo
and
jmp
out
out
dec
add
jle
fisub
xor
pop
dec
mov
sbb
lahf
leave
jno
mov
adc
out
popf
out
rol
xchg
stos
lods
fbstp
imul
(bad)
add
pop
jp
movs
stc
bound
fist
aad
std
cwde
fnstenv
shr
es
adc
xor
movs
fbstp
in
dec
mov
xchg
retf
daa
adc
mov
jno
xor
daa
hlt
mov
sub
sub
jo
add
xchg
fisttp
pop
call
pusha
test
(bad)
pop
sbb
hlt
push
mov
test
mov
imul
or
cmp
hlt
inc
mov
aam
push
mov
dec
xchg
xor
cdq
mov
cld
ffreep
pusha
adc
or
adc
es
inc
push
pop
xchg
add
(bad)
adc
jmp
dec
mov
shl
mov
outs
sub
bound
adc
cmp
pop
in
jno
movs
xor
ins
repz
xchg
iret
or
cmp
jl
cs
aas
fmul
mov
outs
sti
(bad)
ds
add
rcl
or
mov
inc
(bad)
pop
fiadd
or
arpl
hlt
cld
enter
jne
das
inc
or
movs
xchg
mov
add
test
aaa
jge
add
adc
push
and
fiadd
xchg
jno
dec
int
fsubr
cld
xchg
add
js
in
out
ret
mov
test
retf
or
push
pop
sbb
test
inc
js
or
cdq
jne
fcmovnu
inc
mov
or
cmp
outs
add
pusha
movs
dec
sahf
adc
or
push
(bad)
in
dec
pop
xchg
add
loopne
loopne
or
dec
xchg
add
mov
mov
jns
sub
lock
or
xor
sub
pop
or
minps
push
cmps
movs
mov
pop
and
mov
fild
and
not
test
test
xchg
cmp
or
scas
leave
push
jbe
retf
fiadd
test
dec
sar
bound
inc
in
push
iret
jp
adc
jg
enter
ss
or
loopne
imul
iret
(bad)
sbb
jp
mov
scas
xor
push
dec
(bad)
pop
push
cmp
push
mov
push
(bad)
cmp
pusha
ret
ins
mov
in
aam
mov
retf
dec
mov
std
mov
lock
push
jae
jg
lahf
mov
mov
mov
inc
xchg
sub
jb
mov
sti
or
push
mov
pop
sbb
mov
js
jmp
lea
cmp
test
sub
dec
mov
mov
int
pushf
bound
push
mov
mov
cmc
lock
(bad)
shl
dec
mov
lds
popf
or
adc
call
mov
jecxz
mov
sub
mov
lea
test
or
xchg
popa
or
idiv
out
scas
sub
inc
add
mov
dec
jp
fs
rol
das
out
aas
fidivr
test
ret
mov
cmc
mov
mov
add
pop
mov
faddp
mov
sbb
mov
les
and
scas
sbb
loopne
cld
fwait
or
push
cmp
jg
xor
ret
repz
adc
in
dec
inc
fiadd
dec
(bad)
mov
or
sbb
out
shl
loop
scas
vpunpcklqdq
loope
jno
mov
mov
inc
mov
dec
or
ficomp
push
mov
cmp
adc
dec
(bad)
inc
push
(bad)
aad
scas
aam
sti
adc
jge
dec
xchg
adc
repnz
bound
cmp
and
xor
push
int
(bad)
dec
cmp
retf
mov
pop
push
cld
mov
inc
jge
mov
adc
xor
in
or
push
inc
and
push
outs
or
mov
jecxz
and
aaa
dec
mov
out
add
jmp
cmc
push
jl
fs
and
or
xor
ret
pop
not
mov
mov
sbb
pushf
(bad)
xlat
rol
dec
push
(bad)
adc
iret
inc
shl
inc
cld
cmps
adc
iret
adc
pop
loope
ja
test
out
out
adc
imul
ret
jbe
mov
sub
sbb
aad
and
xchg
scas
mov
jmp
maxps
xchg
bound
repz
jno
add
jbe
fisttp
outs
fdivr
ins
jp
dec
daa
cli
movs
out
mov
push
aad
xchg
pop
mov
or
cwde
jmp
mov
sub
data16
jns
sar
or
fs
stc
cs
mov
data16
dec
(bad)
sti
push
pop
inc
mov
adc
mov
push
inc
cs
jnp
nop
and
mov
xchg
pop
mov
dec
ins
lea
sbb
cmp
fbld
dec
rcl
cmp
das
push
mov
outs
clc
cwde
jle
cmp
ds
pusha
ror
mov
mov
mov
neg
iret
sub
push
mov
lahf
call
pop
jbe
jns
rcr
mov
and
bnd
dec
ss
loope
sti
sbb
cdq
jmp
aas
jb
adc
outs
int3
jno
sbb
xor
(bad)
push
inc
js
inc
pop
addr16
cmp
mov
mov
lock
inc
mov
mov
call
movs
add
int
pop
ror
fmul
jl
ins
stc
or
push
fdiv
(bad)
or
mov
(bad)
cs
movs
enter
jmp
bound
push
fs
into
retfw
and
cmp
(bad)
ss
and
imul
shr
(bad)
xor
sbb
jmp
mov
adc
into
ins
fs
jno
jp
in
lods
xor
in
inc
push
and
addr16
pop
or
mov
je
aas
mov
fisttp
mov
push
jp
enter
xor
xchg
(bad)
test
sar
push
repnz
cwde
xchg
add
inc
outs
retf
pop
dec
and
jo
adc
stos
xchg
or
lock
mov
bound
test
sbb
cdq
(bad)
call
jle
mov
push
push
lea
cli
stos
inc
inc
dec
mov
jno
cmp
(bad)
gs
mov
xor
shl
mov
repz
ins
psllw
out
es
xor
js
test
xchg
lods
jae
loop
sub
test
inc
add
xchg
sub
cld
nop
in
jmp
stos
mov
add
cmps
fldenv
and
adc
es
lods
retf
adc
je
js
inc
mov
ret
cmc
mov
addr16
jno
mov
aam
or
outs
jne
mov
(bad)
adc
cmps
sub
ret
out
arpl
fsub
aaa
outs
mov
or
xchg
in
(bad)
or
pushf
imul
dec
add
xor
arpl
mov
sbb
pushf
dec
cs
pop
repnz
not
adc
xchg
mov
add
pop
(bad)
aaa
sbb
jmp
push
mov
or
cld
jne
aaa
and
xor
fmulp
jmp
pop
or
or
into
sahf
int3
int
mov
sub
mov
pop
add
jo
mov
xor
push
jp
and
sub
xchg
lea
out
cmps
pop
jae
pop
arpl
dec
and
dec
shl
out
add
jns
jmp
mov
movs
mov
cmp
jnp
mov
mov
rcl
cmp
adc
js
out
(bad)
mov
ins
scas
inc
mov
pop
leave
xor
mov
pop
add
(bad)
es
scas
and
mov
adc
adc
loopne
iret
sbb
jbe
inc
push
jae
cmps
inc
es
mov
inc
sub
test
test
push
push
cli
fnstcw
(bad)
call
outs
rol
cmp
dec
hlt
repnz
aas
loopne
and
or
xchg
test
cmps
add
sbb
mov
mov
call
dec
(bad)
cmps
xchg
or
scas
inc
stc
xchg
cmps
jne
loopne
xchg
(bad)
out
mov
jmp
cld
sbb
es
hlt
fsub
in
mov
adc
push
jmp
pop
mov
sbb
daa
(bad)
gs
jb
call
rol
xor
popf
mov
inc
mov
adc
jp
in
dec
push
repz
cmp
dec
jb
retf
inc
scas
mov
mul
je
mov
pop
popa
loop
lds
dec
fld
ret
cmps
xchg
adc
jl
retf
sbb
adc
fistp
shl
ja
adc
(bad)
pop
or
aas
inc
rol
loope
cmc
jns
xchg
add
cmps
mov
pop
aaa
pmaxsw
pop
repz
in
push
pop
xor
mov
xor
inc
jecxz
movs
pop
addr16
push
mov
ss
sub
call
leave
call
sub
ins
mov
out
mov
xchg
pusha
call
lods
pop
ins
and
gs
out
and
and
pop
xchg
sar
jmp
out
lahf
test
mov
ficom
sar
mov
pop
test
adc
dec
mov
add
add
dec
ja
loopne
call
(bad)
neg
mov
sbb
(bad)
mov
movs
lea
jbe
ret
lods
loope
ja
popf
mov
call
out
popf
add
cmp
cmp
mov
ret
popa
(bad)
call
(bad)
adc
mov
jbe
stos
dec
sub
cld
shl
jne
fistp
xlat
adc
pop
jecxz
test
sbb
std
mov
inc
mov
pop
outs
lock
lock
inc
scas
pop
jmp
stos
jnp
ds
fldcw
cmp
lods
mov
ja
jae
aad
loope
dec
sub
movs
dec
cmp
(bad)
pop
push
sub
arpl
cmps
sub
push
jg
mov
add
jle
loop
jecxz
rcl
in
call
inc
std
xor
inc
xchg
fs
inc
out
inc
and
loop
mov
test
and
jo
movs
mov
das
imul
movs
pop
neg
cmc
pop
adc
mov
jae
dec
adc
rcl
test
push
ror
scas
or
mov
fs
shl
or
pop
cli
jbe
mov
pop
jno
inc
and
loop
adc
jno
push
mov
(bad)
xchg
(bad)
out
test
aaa
cwde
mov
cmp
inc
pop
or
cwde
xchg
fstp
and
sbb
mov
(bad)
fst
jnp
ss
stos
mov
rol
sub
cwde
out
xchg
sub
lds
xchg
ss
mov
ret
lds
or
dec
mov
sbb
pop
adc
rcl
xor
out
in
neg
dec
test
fidivr
add
mov
in
int3
xchg
mov
imul
inc
mov
je
adc
add
lock
inc
loop
jle
out
adc
jno
imul
(bad)
fcomi
jae
cmp
pop
das
imul
add
movs
in
push
fchs
jbe
out
sub
fwait
push
xor
ror
add
pop
add
std
mov
das
or
sti
sbb
pop
out
mul
jns
push
jl
test
adc
cli
shl
push
push
sub
(bad)
pop
mov
push
sbb
mov
cwde
retf
mov
dec
ds
pop
and
sbb
cs
mov
mov
retf
mov
mov
call
inc
call
mov
cmp
and
test
mov
inc
adc
sub
ret
sub
shl
loop
mov
xlat
xchg
movs
stos
adc
int3
adc
push
movs
push
cmp
pop
or
outs
and
add
mov
mov
movs
call
or
test
mov
push
pop
pop
or
mov
xlat
nop
data16
in
jmp
sub
inc
fst
and
sbb
and
sbb
sbb
adc
or
test
and
(bad)
enter
cmps
mul
mov
mov
inc
mov
xchg
jns
inc
enter
inc
push
sub
dec
fimul
ja
sbb
add
dec
push
xchg
add
jge
enter
dec
jle
lods
jl
mov
daa
adc
and
mov
fdivr
lods
add
xor
fidivr
loope
and
push
mov
sahf
xor
test
neg
(bad)
mov
add
cmp
movs
dec
adc
xchg
lds
inc
and
(bad)
pop
xchg
ret
xor
into
call
pop
std
aaa
out
and
jmp
xor
ret
and
in
sbb
loope
std
retf
sbb
or
test
mov
sub
(bad)
jno
inc
into
sub
sahf
mov
and
pop
into
arpl
ins
je
xor
cdq
push
lods
jbe
ror
xlat
mov
ja
jbe
loop
mov
add
pop
fwait
or
neg
lods
lahf
jmp
mov
pop
mov
jg
shr
rcr
sub
sbb
pop
jg
mov
cs
test
(bad)
imul
inc
push
rcl
les
sbb
pushf
std
and
sti
outs
leave
jmp
dec
pop
dec
int
mov
and
inc
mov
fist
xlat
jmp
ja
icebp
lods
hlt
aas
dec
mov
repz
cmp
push
pop
or
pop
into
loop
inc
sub
sbb
(bad)
mov
out
jno
pop
shl
mov
xor
mov
add
rcl
(bad)
xchg
mov
mov
bound
cmp
jae
sub
mov
mov
out
clc
loop
sbb
es
in
les
push
mov
dec
lahf
hlt
inc
jne
dec
stos
lods
xchg
or
push
les
xor
ja
pop
inc
and
sar
mov
and
call
(bad)
popf
inc
dec
xor
ret
ins
mov
loope
fisub
sub
mov
xor
push
sub
xor
or
pop
sub
cmp
xchg
add
pop
cld
clc
xchg
(bad)
sub
mov
(bad)
cmp
nop
repz
push
dec
cld
push
out
lods
arpl
and
icebp
lds
stos
push
push
or
sub
fisttp
mov
into
fdivr
idiv
and
adc
adc
ret
jbe
nop
rcl
push
pop
pop
fnstsw
(bad)
mov
lock
sti
cs
sub
outs
retf
hlt
sbb
fptan
pop
loop
sahf
cmp
popf
in
xchg
arpl
mov
jle
push
(bad)
mov
fs
sbb
ret
fwait
or
adc
mov
dec
dec
mov
push
pop
mov
call
fist
pop
pushf
xor
jmp
repz
push
fwait
mov
xlat
xchg
data16
pop
cmp
cmp
sub
scas
mov
push
pop
scas
clc
sahf
add
dec
(bad)
test
ins
dec
xchg
mov
iret
loope
ficomp
pusha
lods
fcom
sub
ss
in
loopne
sub
inc
neg
(bad)
mov
scas
jg
in
mov
ins
inc
push
jg
push
or
popa
sbb
inc
mov
mov
stos
add
push
and
fwait
test
xchg
js
dec
les
(bad)
pop
or
dec
mov
adc
dec
loope
dec
push
mov
xchg
dec
push
out
loope
dec
sbb
out
aaa
sub
sar
mov
push
push
jno
arpl
dec
outs
push
jo
loop
push
int3
loope
xchg
or
rcr
push
inc
dec
dec
jmp
in
inc
je
mov
int3
mov
jnp
les
inc
mov
in
js
sti
aaa
mov
pop
xor
outs
inc
mov
xor
rcl
je
(bad)
sbb
out
stos
ror
cld
and
into
push
push
clc
aad
xchg
mov
nop
adc
shl
xchg
out
push
sub
ins
or
cmps
push
lock
and
cmps
mov
sti
adc
ja
mov
mov
dec
and
cmc
ret
cdq
mov
pop
mov
retf
sub
or
sbb
out
ja
sub
icebp
ins
int
stos
loop
mov
addr16
xor
imul
jo
xchg
mov
into
gs
shl
mov
fnop
sub
iret
loope
xchg
inc
into
push
dec
or
dec
jecxz
mov
inc
dec
mov
shl
cmp
and
sar
pop
or
fistp
xor
shl
stos
cmps
inc
jb
ja
loop
or
pop
test
mov
ror
dec
int
mov
psllq
movs
push
sbb
sbb
cdq
clc
lods
scas
push
cmp
(bad)
sub
pop
jae
or
jg
iret
test
mov
fucomp
ret
sub
cmp
cmp
sar
push
mov
fwait
pop
test
xor
fimul
adc
gs
or
fild
sub
add
sub
jo
lods
push
sub
mov
gs
cmp
add
fwait
pop
outs
lahf
pop
adc
fcom
(bad)
fdiv
xchg
ror
cmp
cmp
jbe
jo
cld
push
popa
inc
pop
das
adc
and
fsub
js
add
fcmove
jno
jnp
add
pop
mov
lea
sub
xor
or
inc
popa
pushf
popf
ja
push
xchg
in
push
repz
dec
pop
mov
ficom
push
mov
adc
cli
pop
mov
cdq
push
pop
mov
jno
xchg
mov
inc
je
fld
rol
leave
xor
jb
fdivr
dec
outs
ss
inc
bound
out
add
rcr
bound
lods
mov
jge
xchg
add
out
mov
pop
int
add
pop
fcmovnb
in
mov
mov
and
ret
mov
sti
int
dec
jno
mov
pop
inc
add
not
or
ins
movs
push
pusha
push
stos
cmp
mov
cmp
push
test
adc
aas
ret
or
sar
or
push
xor
shl
scas
xor
jb
jae
sbb
data16
and
jno
pop
xchg
pop
(bad)
lock
or
dec
sbb
jae
repz
sar
adc
in
add
data16
push
call
pop
and
xchg
cmc
xadd
dec
xor
jae
and
sbb
(bad)
add
test
lea
(bad)
fist
mov
inc
add
mov
cld
popa
jp
jmp
int
(bad)
cmps
popf
mov
mov
dec
push
or
pop
std
push
cmp
mov
ss
aad
fstp
repz
add
ror
or
test
jmp
sub
fs
add
and
ja
mov
xor
cmp
in
mov
push
cmps
pop
out
pop
adc
jecxz
mov
ins
sub
jl
and
aam
pop
jg
movs
cmp
jmp
mov
xlat
(bad)
sub
movs
dec
repz
mov
jge
mov
pop
mov
js
cmp
xor
cmp
sbb
test
mov
icebp
inc
push
addr16
sub
out
ret
pushf
sar
cmp
cmove
inc
and
or
pop
pop
cmp
jbe
inc
dec
or
jns
or
ds
in
dec
retf
int
push
cmps
mov
inc
leave
loop
mov
mov
mov
loope
repnz
rcr
in
jmp
sub
fwait
cwde
aaa
cmp
or
les
mov
sub
test
sti
mov
add
xor
adc
loop
rcl
movs
inc
enter
cmp
out
cmp
cmps
loope
push
popa
mov
imul
in
rcr
sub
sub
clc
hlt
leave
cli
stc
dec
mov
loop
adc
push
popf
ins
movs
or
jge
lds
enter
jns
or
xchg
push
xor
stos
scas
sbb
push
inc
jecxz
jg
in
aas
sbb
xchg
jmp
jmp
sub
cmp
aad
aam
lock
outs
sub
sub
pop
mov
xchg
pop
pop
push
imul
mov
mov
mov
adc
cmps
je
(bad)
push
movs
sti
sti
cmp
or
inc
mov
pop
icebp
mov
and
aaa
lock
dec
or
xchg
xchg
into
pop
jne
leave
adc
arpl
shl
sub
push
pop
sbb
outs
mov
aad
shl
inc
sub
repnz
inc
pop
inc
or
stos
xchg
xlat
ds
sti
jb
movs
inc
mov
cs
xchg
out
push
and
ss
aad
test
mov
and
sti
sbb
scas
jnp
cmp
or
fild
leave
pop
or
fbld
(bad)
mov
std
sub
mov
in
add
ficomp
enter
ins
fidiv
enter
inc
dec
mov
cwde
xchg
inc
enter
adc
int
pop
inc
test
(bad)
scas
arpl
jecxz
fcmove
pop
sub
ror
cwde
jo
mov
mov
sub
in
sub
stc
push
xor
mov
iret
or
cmps
sub
add
leave
jge
bound
add
nop
sub
cmp
pop
adc
xchg
adc
and
xor
mov
mov
add
inc
inc
sbb
loope
jge
or
pop
cmp
outs
cmp
daa
jmp
push
jne
sahf
(bad)
shl
cld
xor
mov
loopne
test
retf
jle
push
ss
movs
and
sar
jbe
cmp
test
pop
cmp
fdiv
aaa
ins
adc
hlt
sbb
xlat
xchg
je
test
aad
outs
test
sub
push
add
addr16
fld
pop
fstp
ja
hlt
fs
mov
(bad)
fld
repz
mov
repnz
sahf
test
cmp
add
inc
imul
pusha
inc
adc
(bad)
mov
cmp
rol
fs
cdq
(bad)
mov
je
test
pushf
cmc
das
push
adc
cmps
gs
data16
push
fiadd
dec
sub
inc
js
push
pop
inc
cdq
jmp
outs
push
add
adc
js
pop
es
jbe
retf
dec
ss
in
dec
cmp
out
xchg
lods
dec
repz
inc
xor
lods
push
xor
jno
into
add
cmp
mov
and
outs
aam
push
mov
js
test
mov
add
jg
cs
pop
sahf
loop
cmp
dec
shl
jns
pop
push
jmp
retf
jae
dec
outs
in
out
rol
pop
jnp
repz
lahf
jbe
outs
(bad)
movs
data16
imul
xchg
xor
jo
int3
adc
add
mov
movs
and
shl
(bad)
repnz
loop
jmp
or
leave
cmp
xchg
das
mov
ds
and
rcl
fstp
adc
sbb
adc
push
xor
fmul
and
mov
lock
push
loope
shl
(bad)
and
xor
or
rcl
dec
inc
retf
pop
pop
rol
fnsave
inc
push
ret
xchg
xchg
shl
push
mov
mov
sub
loop
dec
aad
or
cmp
jbe
xchg
js
push
jge
out
pop
pop
outs
enter
std
push
pop
xchg
sub
xchg
test
in
(bad)
fisttp
mov
pop
retf
and
pop
push
xor
pop
mov
inc
cmp
imul
cmp
cs
inc
xor
cmps
(bad)
sbb
add
xchg
xlat
arpl
mov
shr
not
cdq
jecxz
or
sub
sbb
or
mov
sbb
cmp
jnp
(bad)
in
pop
mov
mov
mov
mov
ret
aaa
jg
pop
(bad)
and
(bad)
push
daa
inc
jnp
out
gs
das
push
jge
cmp
gs
loopne
sub
inc
pop
enter
bnd
mov
les
and
dec
xor
xchg
imul
sub
dec
sub
dec
aam
add
in
aas
scas
out
mov
aaa
inc
jnp
fsubr
call
addr16
les
xchg
push
hlt
and
gs
fdivr
stos
adc
js
loop
xchg
push
dec
rol
rol
xchg
ret
inc
in
mov
inc
jmp
mov
in
cmp
enter
fmul
jl
rcr
sbb
mov
fisttp
sti
mov
sti
or
jg
or
lods
mov
xchg
ja
push
loop
sbb
sub
jl
dec
lahf
jg
shr
ins
iret
arpl
jne
mov
adc
popf
dec
pop
push
inc
mov
dec
sub
retf
jbe
(bad)
scas
push
pop
jmp
or
into
retf
dec
mov
mov
out
or
mov
fdivr
pop
jb
and
sti
icebp
cs
imul
pop
leave
neg
sahf
es
jp
(bad)
cmc
xor
dec
sub
mov
pushf
pop
mov
stc
cld
in
pop
or
imul
outs
jne
dec
loopne
ja
push
into
pop
sbb
and
stos
xor
out
movs
dec
aaa
pop
inc
pop
mov
pop
inc
pop
dec
jb
leave
pop
add
mov
popa
add
iret
mov
int3
xchg
mov
xabort
fs
loope
sub
aas
imul
sbb
dec
repz
pop
lea
cld
jbe
addr16
jmp
lods
idiv
fcomp
sbb
inc
add
sbb
(bad)
movs
js
dec
sbb
xlat
enter
test
scas
add
int3
imul
ret
xchg
lods
scas
adc
ins
pop
pop
inc
repnz
and
sub
jne
or
adc
sub
push
jmp
shl
(bad)
repnz
ja
call
in
jae
in
fimul
and
into
bndstx
call
jbe
jnp
std
push
and
stos
in
jno
dec
push
cmp
in
pop
jmp
adc
push
cmps
mov
mov
xchg
(bad)
pop
jmp
inc
jge
mov
mov
jmp
push
dec
xor
and
sbb
pop
jns
retf
es
mov
dec
mov
dec
or
loope
mov
cwde
and
inc
jne
pop
mov
jo
iret
pop
mov
mov
in
pop
mov
inc
xchg
iret
push
sub
adc
imul
sbb
enter
aaa
sub
jmp
aaa
push
mov
cld
cmps
js
xor
mov
cmp
shl
ins
jb
dec
or
and
(bad)
push
call
lock
out
mov
or
xchg
(bad)
xor
jmp
repnz
sub
mov
mov
xchg
es
mov
mov
mov
jbe
mov
ins
mov
mov
mov
pop
retf
lds
cmp
js
popf
mov
cmp
push
pop
cmp
arpl
ss
cmp
jle
mov
cmp
loope
leave
pop
pop
cld
repnz
xchg
sahf
js
pop
mov
rcr
mov
xor
ins
loope
cmp
das
xchg
mov
fidivr
fiadd
jnp
ret
aad
in
jo
jne
je
mov
dec
repz
out
ret
or
dec
cs
pop
and
(bad)
into
out
sub
adc
lock
add
lds
nop
sub
add
fsubr
stc
xchg
inc
ins
outs
outs
sub
sub
std
mov
pop
sti
cmp
iret
call
int
(bad)
in
cli
mov
push
cmps
push
ins
imul
ficom
ficom
fld
mov
jo
movups
stos
adc
or
test
inc
add
xchg
fst
push
sbb
in
xchg
sub
or
in
int3
mov
push
call
in
or
(bad)
xchg
push
and
inc
in
and
mov
repnz
data16
add
xor
inc
fst
sub
sbb
std
jecxz
mov
inc
into
adc
pop
xchg
rcl
xor
xchg
dec
push
outs
sbb
and
inc
shl
sub
ja
xor
and
pusha
adc
outs
int
rcr
mov
mov
into
es
aas
data16
xor
movs
cld
inc
data16
inc
xchg
loope
mov
outs
(bad)
sbb
dec
fisub
xchg
push
fsubr
fsubrp
imul
in
fisttp
into
cmp
mov
std
out
hlt
pop
mov
pop
cmp
gs
je
inc
and
xor
stos
push
sub
ins
and
cs
xchg
mov
sbb
scas
jmp
pusha
xor
push
cmp
rcr
jb
jo
dec
ds
ret
dec
dec
push
sbb
sub
dec
mov
cmp
iret
test
(bad)
sbb
mov
fld
scas
test
imul
cmp
imul
pop
test
cmp
imul
dec
dec
and
xor
test
jne
movs
cmp
addr16
mov
pop
aaa
inc
add
test
push
leave
std
adc
clc
movs
ds
daa
ja
cld
inc
cmps
add
fld
adc
fs
dec
xchg
fadd
dec
or
mov
pop
mov
xor
sbb
xchg
repz
lock
pop
sti
mov
cmp
cmp
test
push
mov
gs
arpl
mov
dec
jmp
imul
jg
and
xor
ins
jnp
mov
jne
leave
pop
mov
push
fucom
ret
ret
(bad)
movs
in
pop
inc
sbb
or
mov
loopne
cmp
inc
out
sbb
and
mov
cmp
pop
sub
jno
out
arpl
shl
(bad)
mov
lods
aad
dec
cwde
js
sbb
ret
out
lods
dec
sti
ret
ret
iret
push
sbb
adc
xor
mov
int3
mul
jl
mov
pop
aad
(bad)
jno
mov
cmp
adc
sbb
xor
clc
or
aad
addr16
dec
push
shl
mov
xor
mov
or
jnp
jmp
jecxz
ret
test
test
or
sub
mov
xchg
mov
add
or
lea
js
dec
cmovge
stos
sti
pushf
push
mov
jmp
mov
mov
nop
aad
movs
lods
dec
push
inc
mov
cmp
inc
pop
or
fidivr
sbb
ds
inc
in
dec
sbb
cmp
dec
and
mov
push
push
push
inc
movs
cwde
sbb
mov
mov
mov
sub
xchg
jno
movs
jp
rcl
sub
leave
push
rcr
dec
repz
fisubr
test
adc
push
out
xor
cmp
inc
in
xor
repnz
addr16
xchg
shl
mov
pop
lods
aaa
call
scas
neg
retf
cld
mov
test
mov
les
jl
rol
call
mov
xor
movs
fistp
movs
fisub
imul
neg
xor
add
imul
shr
outs
sti
sbb
push
push
aas
jg
in
inc
cdq
xchg
stc
fild
jno
leave
pushf
push
push
retf
cmps
dec
daa
daa
xchg
test
test
arpl
pusha
mov
xor
and
fs
adc
xor
repnz
aaa
shl
sub
retf
pop
xchg
xor
out
xor
fcomp
push
in
inc
sub
lahf
and
or
mov
cmp
arpl
cmc
jp
push
add
push
xchg
or
jns
das
test
inc
out
aad
push
pop
add
clc
xchg
xor
fidiv
dec
sahf
sbb
mov
inc
add
out
aam
push
fimul
iret
fwait
icebp
sbb
mov
inc
sub
nop
(bad)
out
cmps
mov
fcom
aad
sub
pushf
punpckldq
or
mov
pop
scas
pop
and
cld
sbb
cmps
arpl
push
bound
addr16
or
out
data16
jecxz
(bad)
(bad)
fstp
(bad)
popa
aas
out
push
stc
test
and
xchg
mov
hlt
add
bound
xor
pop
int
out
dec
retf
push
cmp
ds
out
std
aad
xor
sub
xor
(bad)
and
dec
cmp
popa
cmp
pushf
lds
mov
dec
jb
xor
in
and
mov
sub
iret
pop
or
setnp
loope
hlt
push
imul
and
push
mov
fild
shl
push
das
ins
js
mov
pop
xor
jnp
or
pop
cmp
lahf
cmp
sahf
inc
mov
ds
fcmovu
outs
cwde
jmp
inc
shl
jno
mov
jle
or
fdiv
sbb
mov
sbb
shl
cld
neg
jecxz
popf
repnz
es
dec
jge
pop
pop
mov
sub
add
mov
mov
ss
xchg
test
sub
cli
(bad)
and
pop
aad
inc
imul
fmul
pusha
call
push
repz
push
add
stos
ja
jp
outs
fwait
push
mov
sbb
xchg
mov
inc
cmps
mov
mov
push
push
jns
add
xchg
inc
or
fld
mov
jne
ds
mov
jmp
pop
mov
inc
or
(bad)
mov
inc
clc
test
dec
mov
push
or
push
cmp
es
repnz
fucomp
jb
hlt
or
pop
or
and
cmp
call
mov
retf
call
and
scas
je
cdq
rol
or
xor
dec
xchg
js
je
aas
pushf
pop
test
and
ffree
sbb
enter
mov
and
int3
lods
xchg
xor
data16
mov
mov
sbb
add
out
hlt
inc
jmp
pusha
and
inc
inc
out
shl
outs
jecxz
jl
repnz
sbb
sub
fild
or
sub
pop
or
adc
pusha
jp
xchg
loope
loope
ficomp
mov
dec
xlat
stos
pop
icebp
cmps
mov
add
fisttp
cli
sbb
cmp
in
daa
mov
ss
mov
pop
fwait
in
sahf
pop
sub
or
fistp
imul
call
nop
test
dec
push
xchg
sbb
pushf
std
test
call
pop
dec
dec
(bad)
fistp
jge
ins
or
ret
fcomp
les
sub
jns
fdivr
scas
cmps
pop
jb
push
(bad)
sbb
push
push
test
mov
add
outs
adc
movs
mov
mov
adc
sti
adc
or
fstp
mov
dec
nop
xchg
push
inc
pushf
add
sub
xchg
out
int3
xor
sbb
add
outs
in
mov
enter
add
jb
adc
repnz
mov
sbb
mov
call
retf
call
ins
ret
movs
mov
icebp
dec
dec
stos
pop
jg
inc
ret
fs
jmp
adc
in
jb
mov
ja
into
xor
aas
test
movs
js
sbb
jmp
cmps
sbb
pushf
pop
jmp
and
fdivr
adc
jl
cmp
adc
or
mov
mov
add
mov
daa
jne
mov
add
add
inc
jp
loop
or
sbb
ja
inc
cmps
movs
sbb
or
mov
test
dec
jae
jno
(bad)
push
sub
sbb
pop
add
cwde
and
add
lods
push
jp
pushf
not
xchg
xor
push
bound
or
inc
aam
add
or
pop
(bad)
sbb
in
pop
ins
mov
nop
pop
mov
cmp
dec
lock
scas
arpl
call
push
pop
lods
(bad)
mov
jle
repz
xchg
or
push
ja
ret
xor
sbb
jmp
mov
or
cmps
dec
outs
push
mov
test
jne
xor
xlat
pop
(bad)
jmp
and
sbb
jl
sub
fst
push
push
jle
jno
xor
je
xor
lock
push
xor
xchg
and
pushf
add
inc
mov
adc
aas
xchg
and
mov
dec
int3
movs
test
pop
ins
jbe
mov
cmps
cli
sub
sub
jo
pop
and
jns
jbe
push
sub
push
ret
aas
jmp
adc
(bad)
fadd
cmc
in
cmps
aas
sbb
cmps
arpl
test
lock
xchg
test
fnstcw
cmps
nop
add
jmp
rcr
ja
add
mov
pop
pop
push
jge
or
movs
iret
cmps
pusha
in
mov
mov
dec
inc
stos
and
or
push
das
cmp
cmp
add
dec
mov
cmp
rep
cli
hlt
push
adc
mov
xlat
outs
cmc
push
data16
inc
mov
cmps
adc
sbb
fld
mov
daa
daa
dec
push
xor
push
inc
push
cli
cmps
repnz
jno
pop
mov
arpl
(bad)
and
daa
and
ret
popa
std
jg
jb
les
mov
lea
sub
mov
arpl
lock
enter
out
das
fcom
arpl
(bad)
jecxz
xchg
adc
mov
sbb
xchg
inc
ins
push
mov
scas
imul
bound
mov
iret
test
arpl
(bad)
or
ret
es
pop
fwait
push
xor
pop
inc
xchg
movs
cmp
(bad)
sbb
fild
les
imul
sub
mov
imul
mov
cs
sub
nop
int3
lea
loop
ds
arpl
jle
(bad)
out
bound
jle
enter
cmp
push
out
sub
into
pop
out
jbe
xor
inc
jb
popf
out
(bad)
mov
pushf
sbb
dec
adc
out
out
(bad)
pop
sbb
(bad)
sbb
jmp
add
inc
in
fs
jecxz
not
out
fmul
mov
jl
inc
data16
mov
dec
leave
push
aas
sub
and
jmp
add
loop
adc
shl
mov
idiv
addr16
dec
in
arpl
gs
out
mov
rep
or
fcmovu
das
xchg
scas
or
enter
pop
push
adc
in
xchg
pop
jbe
xor
lods
ja
fcmovbe
pop
push
scas
mov
push
push
gs
cmp
mov
sbb
mov
gs
sar
bound
pop
mov
stos
leave
mov
pushf
das
adc
test
jg
fwait
adc
hlt
fs
lods
jb
sbb
out
test
mov
bound
xchg
pop
ds
jbe
add
out
and
inc
pop
inc
xchg
mov
and
movs
jne
in
scas
mov
es
fsubrp
push
test
add
cmp
adc
js
xor
xchg
pop
pop
or
cmp
pop
aas
mov
mov
scas
or
jmp
jnp
add
sub
dec
cdq
popa
mov
mov
inc
sub
sub
cs
mov
jo
neg
fistp
sbb
xchg
shr
cmp
jae
ins
pushf
xor
mov
mov
xchg
jg
pop
sar
cmps
pop
cld
js
movs
bound
popf
xchg
xlat
lods
push
mov
cdq
fsubp
push
arpl
inc
out
sbb
fsubr
mov
xor
push
xor
into
fmul
mov
xor
adc
(bad)
mov
or
(bad)
mov
jl
rcl
pop
jbe
jbe
cmps
or
or
inc
stos
std
sub
ret
xor
imul
outs
fbld
push
push
lds
lea
dec
dec
cwde
mov
jns
inc
jne
clc
jmp
daa
xchg
jns
adc
jns
(bad)
fstp
lds
daa
ja
cmc
xor
adc
dec
mov
xchg
push
test
pop
daa
out
ret
int3
and
das
lahf
jmp
cs
push
or
mov
outs
(bad)
in
adc
push
adc
xlat
xchg
inc
mov
lock
loope
inc
loope
pop
and
mov
mov
pop
jge
sub
xlat
ds
or
shr
imul
fist
inc
sbb
cmp
push
das
int3
(bad)
pop
dec
retf
add
sub
pop
rcl
dec
add
loop
cmps
call
sub
jo
fidiv
in
push
pop
(bad)
mov
(bad)
lahf
call
xlat
cmps
xor
jne
pop
pop
inc
push
add
scas
retf
stc
pop
and
mov
adc
xor
and
jg
(bad)
jae
cmps
add
add
sbb
aad
jo
jns
push
(bad)
arpl
ss
pop
call
sub
test
cli
(bad)
and
sub
(bad)
cmp
call
repnz
mov
lds
ficomp
sub
shl
jmp
jbe
mov
out
popa
push
dec
pop
push
ins
bound
mov
es
jae
xor
les
mov
sti
jo
sbb
add
or
in
nop
call
gs
pop
jae
int3
shl
dec
nop
dec
test
or
or
ficomp
sti
cmps
inc
nop
mov
pop
dec
or
(bad)
xchg
dec
loop
or
rol
mov
pop
les
cmc
push
aad
mov
rcr
sub
pop
frstor
(bad)
fimul
inc
(bad)
lds
xchg
xor
adc
adc
daa
clc
data16
and
dec
aaa
xchg
cmp
mov
inc
jb
or
pop
mov
mov
mov
(bad)
mov
call
and
test
adc
sub
mov
retf
jae
mov
push
push
paddsw
(bad)
jnp
cwde
pop
pop
inc
xchg
adc
xchg
lock
imul
lea
(bad)
xor
pop
pop
popa
mov
cmp
xchg
mov
test
mov
add
ja
mov
ss
push
ret
repnz
pop
dec
dec
cmp
xor
or
dec
or
mov
outs
jne
push
dec
xchg
pushf
aad
xor
loope
xor
push
add
dec
adc
lods
sahf
jno
nop
mov
push
add
jp
je
mov
call
in
jnp
sahf
call
hlt
xchg
pop
gs
sar
or
sub
or
add
xchg
xor
fsub
xchg
mov
leave
mov
call
stos
arpl
adc
mov
add
repnz
pop
(bad)
sub
sbb
lods
shr
sbb
cwde
into
cmp
cmp
jmp
in
test
aas
sbb
mov
push
rcr
mov
movs
dec
stos
fiadd
cmc
in
pop
jp
xchg
ror
mov
jecxz
cs
fimul
cs
int3
(bad)
popf
pushf
inc
mov
push
jns
and
mov
pop
mov
(bad)
jno
mov
lods
data16
int
cwde
add
jecxz
or
mov
lahf
pop
popa
ror
mov
xchg
xor
popa
iret
pop
push
push
dec
bound
sbb
lock
(bad)
mov
inc
call
jmp
outs
test
in
and
test
int3
cmps
repnz
cdq
(bad)
xor
adc
fsubr
add
sub
add
push
fsubr
out
dec
mov
add
shr
pop
dec
aam
daa
push
cmp
xor
mov
outs
sbb
adc
mov
pushf
fucom
mov
test
inc
dec
fnstcw
cmc
cs
inc
rep
out
mov
lock
jmp
cmp
jl
ficom
pusha
adc
je
jno
call
in
icebp
cli
or
sub
enter
lods
stos
sbb
loop
dec
movs
cmp
xchg
pop
cmp
sbb
arpl
sti
test
cmps
xor
loope
(bad)
movhps
jbe
jno
jle
lds
outs
repz
stos
cld
inc
lock
cld
sbb
mov
in
stos
add
sti
sub
push
test
inc
inc
add
in
xor
lock
xor
in
cmc
out
cwde
xchg
push
cmp
xchg
and
fnstenv
outs
jne
int3
loopne
mov
popa
inc
dec
cmp
setne
out
push
inc
push
pop
add
stc
fs
mov
jmp
pop
pop
nop
push
test
xchg
mov
sub
sti
push
mov
(bad)
push
pop
dec
sub
mov
(bad)
sub
call
xlat
jg
adc
les
(bad)
in
fwait
add
pop
sahf
cmc
push
pop
ins
out
push
mov
into
mov
sub
mov
mov
std
sub
loopne
movs
loopne
dec
push
aaa
fdiv
inc
cs
xlat
mov
aaa
(bad)
sub
push
or
xlat
repnz
stos
dec
xchg
jle
or
mov
xor
mov
mov
xor
dec
and
xchg
push
daa
mov
idiv
mov
mov
dec
in
and
dec
clc
adc
movs
rcr
mov
xchg
and
cmp
sahf
sbb
jo
sub
sub
test
inc
dec
cmc
and
or
push
fbld
mov
dec
lods
xchg
popa
repnz
push
push
mov
add
xor
inc
repz
pop
ror
mov
mov
cmp
lea
shr
mov
jae
push
inc
sub
popf
bound
adc
dec
imul
adc
bound
mov
cmp
in
dec
ret
ins
push
or
retf
pushf
(bad)
sti
lea
jmp
and
mov
cmp
inc
(bad)
xchg
(bad)
mov
and
jp
icebp
add
push
fwait
mov
sbb
jle
lods
lods
call
cmovge
adc
packuswb
sub
or
cli
movs
jl
sub
cmp
lods
cmp
(bad)
fmul
adc
sbb
ins
sbb
or
dec
imul
data16
fsub
in
retf
addr16
stos
and
or
sub
mov
icebp
mov
jle
and
mov
cmp
dec
loope
or
hlt
out
adc
lea
jmp
jge
sub
mov
addr16
push
repnz
popf
pop
sub
push
jg
xor
shl
cwde
and
pop
push
pop
mov
push
inc
stos
(bad)
scas
and
or
ror
sar
push
ins
repnz
bound
icebp
or
add
rol
rcr
jle
mov
out
xor
(bad)
jmp
call
mov
das
push
mov
mov
(bad)
sbb
mov
mov
push
imul
arpl
sbb
pop
out
(bad)
scas
dec
sbb
push
mov
push
lahf
sub
sbb
in
or
cmp
mov
dec
mov
dec
mov
cdq
pop
bound
lock
iret
ja
hlt
inc
sbb
cmps
push
outs
xor
inc
or
sbb
mov
fwait
cdq
jg
aam
sub
sbb
retf
mov
bound
bound
xor
cmps
jb
and
jnp
pop
and
(bad)
xor
mov
adc
dec
add
jnp
test
fs
retf
jne
adc
(bad)
scas
jae
mov
add
cs
call
add
xor
adc
mov
js
bound
push
pop
mov
jmp
cdq
into
(bad)
mov
ficomp
repz
pop
arpl
test
and
(bad)
pushf
and
push
ins
test
test
mov
in
adc
ins
cmp
mov
adc
scas
les
or
or
push
cmc
test
aas
dec
mov
mov
pusha
inc
and
xor
sbb
dec
pop
dec
push
inc
into
xchg
adc
jl
pop
sti
outs
fdiv
cmp
pop
test
xor
shl
lds
addr16
out
rcl
call
shl
in
mov
pusha
aam
inc
bound
or
aas
(bad)
in
add
sbb
popf
mov
out
xor
mov
and
push
in
mov
call
call
jle
ds
pop
push
out
stc
mov
xchg
xlat
pushf
scas
iret
repnz
mov
ins
aaa
xchg
mov
xchg
iret
xor
xor
outs
add
adc
inc
or
sbb
cwde
(bad)
adc
dec
cmp
adc
(bad)
aaa
xor
repz
sbb
and
daa
(bad)
jge
push
push
inc
cmp
xchg
sbb
ja
add
dec
call
xlat
jge
jge
retf
sub
imul
std
cmp
mov
add
test
(bad)
inc
std
clc
out
ret
sub
sbb
mov
outs
lahf
out
xor
outs
or
ins
adc
xchg
sbb
movs
add
mov
and
dec
adc
je
or
imul
cli
mov
pop
bound
pop
clc
sub
pop
fist
cmp
mov
repnz
scas
sbb
add
sub
jg
sbb
mov
adc
xchg
dec
ffreep
bound
adc
xchg
mov
sbb
js
call
mov
mov
inc
test
and
and
stos
test
mov
test
jbe
xchg
movs
jmp
fst
jmp
mov
sbb
pop
jecxz
inc
add
add
pop
pop
stos
movs
pop
pushw
daa
or
sbb
sbb
xchg
xor
sub
jno
sub
ffreep
stos
test
pop
shl
(bad)
mov
clc
xchg
nop
ss
adc
and
mov
dec
xchg
int
inc
aam
add
scas
jne
outs
mov
fsubr
in
sub
sub
jle
mov
iret
and
mov
add
mov
popf
cmp
sub
xchg
adc
into
adc
mov
fs
xchg
mov
jle
dec
xchg
pop
and
xor
repz
cli
xchg
ror
jmp
jp
dec
push
push
das
enter
or
push
mov
ss
jp
jmp
inc
or
shr
xor
std
add
icebp
adc
mov
cwde
int3
enter
jmp
sub
jmp
fs
sbb
jmp
loope
add
or
retf
call
dec
loopne
xchg
stos
lea
push
(bad)
xchg
addr16
clc
mov
sub
cs
push
push
cmp
nop
repz
xchg
mov
fidivr
sbb
fnstsw
call
cwde
arpl
pop
cli
jle
ins
and
cdq
scas
rcr
sbb
xchg
cmc
sub
vmovupd
push
movs
or
pop
inc
adc
loop
ficomp
das
cmp
sub
repz
sub
fist
sbb
cmp
sahf
test
push
pop
jmp
jo
das
test
nop
in
fadd
rol
sahf
test
xlat
xor
mov
pop
stos
push
neg
ds
movs
xchg
mov
inc
lea
mov
mov
in
push
push
push
mov
mov
fs
shr
jae
push
jnp
xchg
call
mov
ja
or
cdq
into
mov
out
jl
xchg
hlt
pop
mov
in
xchg
inc
pop
jle
mov
scas
cwde
scas
xchg
loope
aaa
movd
or
jp
sti
pop
xor
add
cwde
je
pop
inc
or
mov
jl
pop
loop
mov
xchg
(bad)
cmps
mov
arpl
cmp
and
rcr
mov
lods
aaa
pop
mov
dec
loope
ret
sti
xchg
movs
adc
cwde
adc
push
fidiv
or
push
(bad)
fld
pushf
and
jge
into
mov
inc
dec
call
and
rol
or
jne
lods
mov
jmp
call
adc
scas
mov
push
sti
leave
test
call
or
mov
inc
sub
mov
mov
rcr
loop
xor
push
xor
sbb
cli
jecxz
in
lods
mov
jle
popa
imul
movs
add
mov
ss
(bad)
outs
stos
mov
jle
(bad)
sbb
rcl
ja
je
fdiv
data16
xchg
cmp
mov
(bad)
hlt
lods
repz
mov
cs
cmc
xchg
sub
add
ret
xchg
mul
movs
repz
pop
bnd
aad
mov
push
jo
pop
inc
mov
dec
push
std
pop
imul
std
fsub
xchg
xchg
inc
sbb
stos
mov
push
out
loop
or
cmp
mov
fiadd
outs
mov
stc
dec
in
mov
pop
jae
je
ins
mov
call
ret
out
cmp
push
lods
mov
mov
out
cmp
or
push
mov
sahf
fdiv
outs
sbb
imul
aad
int3
push
or
adc
and
movs
cli
cmp
sti
or
xchg
ins
pop
adc
jns
cdq
sbb
scas
int
call
jg
in
or
xor
dec
jbe
stos
mov
fstp
mov
push
jb
lods
sbb
fldln2
ins
cmp
loopne
mov
lock
repz
dec
mov
mov
or
inc
lods
ret
dec
in
xor
pop
(bad)
in
clc
aaa
pop
sar
loopne
jns
sub
jno
inc
xchg
ins
xchg
xor
xchg
dec
pop
fs
xchg
pop
enter
push
out
icebp
(bad)
inc
rol
mov
push
sti
push
mov
stos
jno
repz
das
xchg
pop
ss
mov
fs
cmp
cmc
in
popf
scas
mov
inc
js
jmp
mov
cmp
out
or
out
clc
inc
and
cwde
pop
out
and
mov
xor
jbe
inc
ss
mov
adc
push
mov
xor
xor
imul
fidiv
sub
pop
into
lahf
arpl
xor
xchg
aas
aas
jp
es
add
jge
int
pop
jmp
test
push
gs
push
fsubr
fadd
fisub
cmps
mov
das
adc
ja
push
xchg
and
jle
loope
lahf
data16
test
cmc
pusha
xor
stc
dec
das
hlt
jmp
mov
and
jmp
pop
aam
xchg
loopne
dec
stos
imul
outs
push
aas
adc
jmp
fnstcw
push
mov
mov
dec
bts
mov
popf
(bad)
shl
cs
add
jecxz
std
int
out
pop
mov
out
cs
jns
push
aaa
mov
jae
pushf
repz
fdiv
out
dec
ret
mov
mov
pop
or
add
pop
xchg
fnsave
js
push
loopne
mov
imul
fsubr
cdq
mov
jl
add
jbe
test
mov
add
inc
jne
dec
mov
push
leave
les
inc
dec
push
inc
dec
inc
xchg
fwait
sub
frstor
dec
cmp
jmp
pusha
das
into
jmp
lahf
dec
popf
aaa
sar
int
test
mov
ret
fld
jbe
pop
xchg
jge
ins
and
xchg
and
push
mov
xchg
push
retf
mov
idiv
adc
out
push
sub
popf
cld
jmp
add
cmp
mov
inc
pop
bound
daa
or
dec
jns
mov
data16
and
stos
or
sub
(bad)
in
pop
mov
or
inc
cld
adc
xchg
mov
mov
add
repnz
les
in
enter
je
adc
sbb
fidiv
movs
call
mov
pop
sub
jne
fs
or
andnps
sahf
adc
push
xor
fistp
jno
test
test
dec
xor
add
retf
cmps
mov
es
mov
add
inc
lds
inc
adc
cmp
push
dec
mov
cmp
fistp
stos
(bad)
(bad)
outs
int
(bad)
jmp
aaa
adc
arpl
dec
dec
xchg
add
pop
mov
jl
sub
out
dec
xchg
mov
sbb
arpl
push
outs
mov
mov
pop
mov
and
loop
fsubrp
or
retf
push
push
or
adc
mov
leave
and
xlat
aaa
fisub
adc
add
dec
adc
js
and
dec
and
sbb
adc
xor
aam
dec
jo
sub
dec
sbb
aad
std
loopne
push
sub
aaa
sub
pop
loope
or
inc
pop
test
pop
dec
pusha
push
repnz
mov
daa
pop
aaa
inc
mov
rol
pop
sub
xor
arpl
call
mov
je
loop
rcl
mov
and
stos
jle
or
cmp
xchg
stos
and
inc
bound
fucomi
adc
nop
mov
jge
push
xor
and
into
in
les
fldln2
dec
mov
push
je
outs
and
imul
std
adc
and
lahf
or
out
sub
adc
js
das
inc
mov
xor
jmp
xor
mov
les
mov
mov
in
(bad)
jne
arpl
sub
das
and
imul
mov
mov
repz
jl
mov
aam
jb
cmps
stc
dec
lods
enter
popa
nop
mov
fcom
xchg
les
mov
stos
movs
push
xor
push
outs
pop
push
rep
ins
call
push
test
aaa
call
xor
adc
into
adc
sub
or
(bad)
push
push
mov
mov
movs
jae
xchg
fbld
xchg
cmp
lock
mov
lods
add
pushf
xor
jmp
outs
fadd
push
cmps
(bad)
jmp
cwde
dec
mov
cmps
pusha
imul
(bad)
in
xor
cwde
out
xchg
imul
inc
cwde
loop
iret
cli
cmps
scas
or
mov
dec
lds
addr16
movs
push
iret
inc
adc
or
js
or
nop
and
aas
pop
mov
jb
(bad)
pop
pop
xchg
repz
cs
mov
sub
fidivr
sbb
inc
jns
adc
add
jbe
cwde
sahf
mov
jo
aaa
lahf
leave
mov
(bad)
mov
jl
push
cmp
fstp
sti
lods
jb
data16
call
ret
pushf
test
mov
pop
adc
aaa
pushf
test
jge
ret
ffreep
mov
jmp
adc
jae
cld
adc
pop
push
jp
dec
fidiv
jg
sbb
and
lds
out
hlt
das
add
add
push
xor
xchg
cs
jbe
push
or
call
aad
dec
cmp
push
movs
pop
jp
sbb
xlat
add
or
out
repz
jge
dec
fucomi
xchg
rol
lods
std
add
mov
mov
jno
test
jle
cmp
dec
push
mov
xor
ret
xchg
shr
in
arpl
pusha
cs
idiv
(bad)
pop
popa
rcl
loopne
inc
push
inc
ins
jp
(bad)
jne
or
ins
rcr
mov
and
shl
paddsw
or
sar
sbb
cmp
mov
fdivr
pop
cmp
cmp
push
es
aad
(bad)
fwait
xchg
jge
ja
and
shr
push
imul
add
fwait
add
and
loopne
push
js
mov
pop
loopne
pop
inc
lods
arpl
test
out
into
adc
add
les
dec
fidivr
leave
stos
and
pop
add
jns
inc
jno
ret
cdq
push
cs
or
cld
in
lahf
xlat
cdq
test
xlat
imul
ror
cmp
mov
imul
dec
in
loop
shr
xor
pop
call
les
add
ror
out
rcl
inc
arpl
mov
or
xor
lods
leave
mov
(bad)
gs
xchg
sub
bound
pop
pop
xchg
out
outs
stos
mov
inc
push
xor
enter
push
stc
xor
popf
push
xchg
xchg
movs
sub
int
mov
dec
mov
sbb
fs
hlt
(bad)
and
sub
scas
jnp
mov
cmp
dec
sub
mov
jl
outs
sbb
push
test
xchg
jbe
lods
pop
in
sub
mov
lahf
std
ror
inc
test
mov
xor
loop
sbb
mov
bound
mov
sbb
jbe
jnp
popa
jle
(bad)
sbb
daa
jmp
sbb
dec
sub
push
jns
imul
dec
dec
imul
in
pop
push
xchg
dec
ret
call
xchg
clc
push
int3
inc
dec
cdq
adc
cmp
sub
xchg
retf
push
jge
movs
pop
daa
adc
sub
popa
pop
push
jns
ror
movs
add
dec
sub
lds
pop
xchg
xor
cld
jne
test
into
xchg
test
mov
jg
stos
xchg
rep
jecxz
pop
cli
cwde
aad
cmp
push
sbb
pop
or
mov
jg
aam
enter
(bad)
loopne
xchg
sahf
addr16
js
pop
lods
lock
jecxz
dec
xchg
js
(bad)
pop
ja
jno
pop
ins
mov
imul
adc
dec
jmp
inc
daa
push
jmp
iret
enter
dec
dec
inc
jbe
(bad)
mov
xchg
sbb
rcl
push
imul
pop
and
pop
rcr
sahf
cdq
adc
xchg
call
adc
cmps
aam
test
cdq
push
shl
ds
adc
scas
and
loop
out
sbb
retf
sub
test
mov
inc
call
or
inc
test
xchg
push
dec
or
(bad)
cmp
out
mov
or
or
mov
jae
lods
add
add
mov
imul
jmp
aas
mov
jne
lods
mov
rol
xchg
push
call
inc
pop
xlat
and
or
and
sub
or
inc
xchg
loopne
or
repz
xchg
push
dec
pushf
push
push
sub
or
ss
and
jg
dec
fstp
div
retf
(bad)
jmp
mov
addr16
jl
ds
push
inc
or
fucomip
mov
call
mov
jns
mov
lds
xchg
jbe
je
pop
mov
push
popa
inc
pop
(bad)
in
and
loope
in
aad
cwde
mov
data16
push
scas
xor
jmp
or
das
cmp
pop
rol
jl
sub
sbb
fcom
loope
xchg
add
ret
cmp
inc
mov
cmp
test
jno
lock
imul
jne
out
(bad)
dec
lods
fst
shr
sbb
sar
nop
ins
fild
pop
arpl
fild
pop
mov
cdq
pop
lds
hlt
fcom
dec
cld
mov
mov
sub
call
call
nop
sbb
mov
add
inc
ins
outs
(bad)
jmp
pop
aam
push
stos
aaa
mov
lock
inc
enter
rol
pop
mov
jmp
add
cdq
in
data16
inc
retf
mov
ins
test
loope
hlt
lea
lea
in
lea
aas
adc
jb
dec
pop
fidiv
movs
mov
fist
xchg
cmp
push
xor
dec
mov
(bad)
fmul
imul
neg
aaa
dec
mov
sbb
push
pop
adc
popf
fnstenv
inc
mov
call
xor
int3
cmp
cs
xchg
pop
rcl
add
aad
mov
loopne
add
aad
push
cmp
out
sti
stos
loopne
adc
or
call
jns
mov
adc
int
mov
inc
aas
fwait
js
cdq
or
add
sbb
movs
pushf
cs
dec
retf
xor
adc
sbb
pop
imul
jne
pop
mov
sub
adc
mov
jne
sbb
cmc
icebp
ror
ret
jo
sub
adc
dec
outs
lods
jecxz
fisttp
rol
jp
sbb
or
das
lock
inc
or
jle
adc
mov
sbb
(bad)
xor
rol
adc
rcl
inc
or
repz
je
sbb
iret
xchg
stc
in
int
xchg
loop
inc
jo
pop
stc
xlat
jmp
mov
movs
sahf
(bad)
push
jne
mov
and
push
add
cmps
imul
xchg
sub
pop
out
or
lea
(bad)
icebp
mov
push
dec
jmp
leave
xchg
mov
xchg
clc
adc
cmp
jle
pop
das
xchg
lods
pop
xor
sub
ds
inc
in
iret
ins
sub
jp
pop
in
cli
das
sub
jb
mov
adc
clc
clc
jo
ret
push
mov
inc
cmc
or
test
xor
lahf
ins
pop
xchg
adc
pop
jmp
test
call
ficom
rcr
loope
dec
(bad)
or
inc
pop
in
outs
es
ret
jg
in
popf
ss
push
jne
cmps
imul
stc
xor
lea
mov
inc
sahf
je
add
inc
xchg
aam
retf
fs
repz
ins
mov
ins
ficomp
xchg
addr16
js
xor
(bad)
add
ror
cmp
adc
dec
fstp
pop
push
stos
lea
inc
xor
call
pusha
sbb
xor
xchg
or
sbb
lds
jp
sub
and
push
jmp
jp
stos
test
cmp
xchg
jns
inc
shl
popa
sub
fsub
std
xchg
lods
jle
ret
inc
sbb
pop
dec
rol
fld
fdiv
xlat
ret
or
cmp
xchg
daa
pusha
in
jecxz
pop
inc
inc
inc
ret
xchg
sbb
mov
xor
(bad)
(bad)
sbb
mov
stos
lea
xchg
or
mov
mov
sbb
ds
pop
test
outs
jno
pusha
add
aas
jp
add
push
mov
and
adc
adc
popa
adc
jmp
mov
pop
into
sar
fisub
jmp
push
pop
pop
inc
jl
dec
sbb
fadd
sbb
xchg
adc
pop
xor
mov
aad
inc
xchg
mov
in
iret
(bad)
or
jae
fiadd
div
dec
sbb
aas
jle
push
mov
cmps
cmp
inc
jmp
in
loope
push
arpl
mov
and
jmp
pop
jne
inc
inc
adc
(bad)
stos
pusha
inc
mov
rcl
cmp
jecxz
jnp
pop
rcr
adc
xor
fistp
repnz
mov
jae
cmp
fsubr
xor
pop
jmp
cmp
cwde
add
xor
bound
mov
fistp
push
inc
sbb
add
(bad)
pop
or
push
pop
std
bound
adc
inc
fdivr
jle
pushf
sbb
sbb
jns
adc
jbe
sbb
ror
pusha
stos
(bad)
scas
dec
out
inc
pop
inc
aas
out
adc
fidivr
push
fnstcw
leave
imul
rol
dec
inc
popf
stos
loope
mov
sbb
lods
loop
std
fisttp
idiv
xor
ret
adc
aaa
iret
aam
dec
push
sbb
push
dec
cld
jmp
pop
loope
movs
mov
loopne
aad
movs
cmp
int
fild
mov
pop
xlat
retf
test
or
cmps
retf
mov
push
scas
or
popf
xchg
add
sub
popf
jmp
lea
xor
push
(bad)
in
out
sbb
sti
repz
and
(bad)
pop
in
bound
out
add
add
loop
or
dec
mov
xchg
add
movs
fsubr
scas
mov
and
ds
cli
cmp
push
mov
les
repz
pop
and
fwait
push
xor
lock
(bad)
cmc
test
sub
add
xchg
outs
push
fnstsw
pop
rcl
xchg
pop
popf
dec
sub
fwait
mov
cmp
mov
out
retf
sub
pop
rcr
adc
idiv
and
enter
popa
or
and
mov
cli
loopne
and
psubb
int3
addr16
pop
popa
adc
movs
leave
inc
fisub
dec
fwait
iret
mov
ficom
lds
sbb
dec
adc
mov
add
inc
push
es
xor
aam
lods
push
retfw
inc
mov
aam
stos
outs
pop
xor
lods
cli
repnz
cmc
add
xchg
mov
ja
lods
(bad)
stc
xchg
mov
frstor
add
push
pop
pop
sub
inc
jge
std
pop
sub
jg
or
lods
jl
retf
enter
or
sbb
pop
sbb
sub
movs
pop
in
xchg
std
cmp
sbb
and
jns
jp
adc
je
mov
pop
stc
out
xchg
adc
cmp
(bad)
mov
arpl
ret
fcmovu
popa
jo
inc
lods
das
inc
add
dec
clc
arpl
fcomp
mov
push
mov
in
mov
inc
or
bound
push
pop
outs
add
push
or
add
sub
push
xor
push
cmp
mov
(bad)
aaa
stos
lods
mov
mov
sub
in
jno
push
shl
(bad)
sub
daa
cwde
jae
rcl
xchg
clc
sti
adc
call
cmp
pop
(bad)
fstp
sub
adc
add
jno
adc
inc
dec
rcr
push
fdivr
imul
adc
leave
cmp
retf
jge
in
sub
sbb
mov
jne
or
scas
xchg
popa
xchg
loopne
fidiv
xor
xchg
mov
mov
jp
aaa
hlt
mov
push
rcr
aam
inc
fcomp
gs
push
pop
cmp
shl
mov
pusha
jnp
gs
jmp
sbb
cdq
inc
xchg
je
fs
mov
xor
in
(bad)
jno
jmp
dec
fwait
mov
jnp
or
outs
push
cmp
fwait
std
das
pop
mov
inc
gs
repz
add
or
jo
test
leave
mov
lds
jl
jbe
or
mov
clc
sar
ret
mov
out
inc
xor
sbb
icebp
out
int3
and
jno
test
cmp
and
sbb
loopne
fadd
mov
mov
outs
lgs
mov
or
call
dec
or
pop
xor
push
pop
fld
cmps
and
and
stos
(bad)
and
stc
ror
loopne
pop
xchg
add
jne
les
(bad)
and
jb
out
adc
(bad)
stc
or
fwait
rcl
test
inc
sub
cmp
repz
in
inc
fwait
sub
arpl
push
int
and
shr
gs
addr16
nop
pop
xlat
cdq
(bad)
movs
rol
js
and
test
scas
and
dec
ja
shr
adc
push
mov
cmps
cmps
add
dec
xor
and
ret
popf
test
stos
mov
js
inc
or
mov
std
xlat
aaa
push
iret
mov
fbld
nop
cmp
gs
mov
push
add
sub
add
repnz
popa
(bad)
stos
jbe
and
mov
rol
jmp
push
sub
shl
rcr
sbb
repz
stos
jo
inc
test
out
jae
dec
or
in
mov
out
and
jmp
mov
into
fldcw
xchg
jp
mov
std
js
dec
dec
xor
or
das
mov
lea
mov
xchg
fs
mov
inc
daa
pop
fdivp
lods
sub
adc
mov
into
scas
cs
test
(bad)
pop
ins
cwde
inc
mov
push
in
and
jmp
sub
mov
jmp
adc
and
sub
das
inc
pop
in
pop
loope
(bad)
retf
sbb
mov
adc
clc
(bad)
jg
sbb
inc
(bad)
emms
xor
leave
scas
(bad)
mov
enter
out
xchg
scas
ror
movs
pop
add
ret
cmc
jne
(bad)
xchg
shr
sbb
mov
push
sbb
cmp
int
mov
scas
shr
push
out
pop
mov
push
int3
in
ins
and
nop
push
inc
imul
out
or
mov
dec
sub
retf
cmp
mov
jle
adc
jnp
sar
sub
jb
xor
jmp
and
rol
push
pop
sbb
pop
add
adc
into
add
test
test
cdq
adc
cmp
jmp
push
xchg
cmp
push
aam
xchg
movs
fst
out
mov
mov
repz
dec
fnstenv
das
ficomp
jno
mov
jmp
pop
clc
loopne
add
push
ins
cmps
enter
jno
mov
test
rcr
push
cmp
leave
pop
mov
inc
mov
mov
mov
test
daa
pop
xchg
jg
into
out
cmp
add
out
mov
daa
ja
bound
cdq
jb
pop
pop
scas
adc
test
ds
mov
mov
out
xor
neg
or
push
in
(bad)
fidivr
aad
or
out
mov
jb
arpl
sub
(bad)
addr16
mov
add
pop
stc
cli
dec
cli
ret
jmp
mov
(bad)
mov
mov
jns
stc
mov
out
int3
scas
test
and
jmp
jmp
push
(bad)
cmp
out
bound
jge
repz
dec
iret
(bad)
fmul
out
ss
fidivr
fisttp
jmp
(bad)
es
sub
sbb
in
xchg
rcr
(bad)
rcr
push
xchg
xor
ins
dec
adc
mov
and
je
xchg
int
xor
push
add
leave
jmp
mov
mov
gs
lods
int3
cmps
sbb
push
int
shr
adc
xchg
shr
adc
mov
dec
ins
sub
or
mov
pop
inc
inc
and
pop
adc
xor
jne
push
mov
leave
jae
and
inc
push
cmp
or
outs
pop
push
xor
test
jo
mov
lahf
jns
ins
cmp
and
mov
(bad)
leave
add
cmp
lock
cmp
retf
leave
test
or
ror
pop
jmp
sahf
cwde
cmps
nop
jmp
ins
xor
pop
aam
pop
lea
pop
sbb
pop
imul
pop
pop
bound
ret
mov
push
cmps
jae
mov
mov
data16
pusha
or
and
push
popf
les
xlat
out
and
push
lods
repnz
mov
enter
cmp
or
dec
push
mov
cdq
inc
inc
lds
push
add
cmp
fistp
push
adc
push
test
jp
fucom
enter
push
aad
mov
sub
mov
mov
addr16
pop
enter
(bad)
ror
aaa
jp
add
jp
add
fdiv
or
cdq
mov
ins
inc
jl
out
bound
fadd
test
mov
nop
mov
cld
fild
xchg
bnd
cli
push
daa
dec
ss
clc
ficom
add
sub
mov
int3
mov
dec
cmc
cmc
outs
out
push
push
jmp
add
mov
xor
mov
dec
imul
jb
adc
sub
ficom
jl
loop
imul
add
inc
and
(bad)
ins
adc
mov
xchg
push
mov
pop
popf
pop
out
pusha
xor
cwde
jns
add
cmc
mov
push
push
mov
or
mov
sub
cmp
rcr
pop
xchg
sub
call
mov
pop
or
aas
sbb
mov
fdivr
sub
aam
cld
push
push
jg
push
push
pop
xor
xchg
in
jmp
push
(bad)
scas
sti
cli
or
dec
pop
out
mov
leave
jmp
sub
in
sti
inc
(bad)
xor
out
(bad)
in
inc
out
or
pop
or
mov
push
push
or
mov
pushf
mov
cli
outs
jbe
jne
and
repz
sti
jecxz
mov
test
xor
lods
dec
dec
lds
test
pop
adc
cmp
loope
xor
jle
inc
cs
dec
aaa
mov
mov
cmps
xchg
fmul
adc
ret
lock
fwait
add
stos
mov
sbb
pop
mov
imul
repnz
(bad)
add
cdq
lahf
sbb
test
jb
cli
pushf
cmc
cmovae
mov
fild
adc
adc
cwde
push
inc
sub
pop
mov
pop
cmp
fmul
mov
loop
mov
out
dec
cld
stos
(bad)
push
xor
mov
add
lock
xor
(bad)
ror
xor
or
icebp
div
cmps
stos
xchg
int3
mov
inc
mov
xor
sub
inc
dec
mov
mov
jge
fwait
mov
sub
mov
jp
xor
sub
cmp
out
push
xchg
add
xchg
sbb
push
add
jno
mov
call
icebp
pushf
in
out
and
dec
sar
neg
xor
cs
call
push
nop
xchg
and
call
lods
stc
loopne
dec
xchg
or
call
mov
jmp
pop
stc
adc
loopne
(bad)
aad
(bad)
sbb
pop
(bad)
rol
aas
movs
mov
pop
leave
mov
adc
lahf
js
paddsb
sbb
fwait
inc
mov
fs
mov
mov
pop
loopne
mov
inc
and
fidiv
test
in
imul
jge
scas
sahf
test
sub
sbb
lock
mov
jo
push
frstor
inc
dec
and
add
inc
out
pusha
aam
rcl
push
out
enter
dec
add
jl
add
mov
fdiv
das
jg
mov
xchg
xlat
adc
cmp
fidiv
loopne
lahf
dec
jp
icebp
popf
dec
out
add
or
in
add
loope
inc
and
or
outs
xchg
pushf
or
jge
frstor
ds
jmp
jp
mov
outs
adc
mov
mov
int3
add
jmp
inc
jl
clc
sar
fldcw
(bad)
sar
jmp
pusha
xchg
sub
push
or
and
mov
shl
scas
aam
mov
jle
(bad)
(bad)
test
out
bound
pop
xchg
aam
dec
movd
outs
or
mov
pusha
jmp
js
sbb
vphadddq
call
shl
jl
mov
inc
sbb
jmp
cmp
fdiv
in
xchg
gs
scas
sbb
mov
outs
mov
jae
push
cld
and
in
cdq
aad
and
adc
mov
ficomp
sti
inc
mov
les
mov
jne
xchg
push
mov
sysenter
xor
inc
enter
jae
xor
cld
add
movs
jecxz
daa
in
ins
sbb
ret
test
aaa
cmps
retf
inc
retf
(bad)
lahf
arpl
fwait
push
clc
dec
cmp
jbe
inc
ins
push
out
(bad)
jnp
mov
sub
or
jmp
js
jl
je
cmovp
imul
imul
inc
or
adc
shr
mov
xchg
pusha
loop
fiadd
sub
pop
mov
sub
jmp
lock
adc
cmc
push
aad
retf
not
mov
xchg
jecxz
(bad)
lahf
iret
sbb
pushf
dec
jne
cdq
cmp
sub
repnz
clc
cmp
cwde
sub
cmp
aad
shr
pop
aam
call
shl
in
xchg
cmps
int3
retf
mov
jno
iret
push
xchg
xor
cmps
les
cmps
jmp
pop
pop
or
sbb
mov
pop
or
clc
mov
loope
or
imul
lds
mov
jno
sub
xchg
mov
mov
ret
dec
sar
out
int
fld
cmp
push
mov
and
pop
sbb
push
inc
shr
add
jecxz
cs
inc
in
xchg
jmp
xlat
(bad)
stc
test
sub
stc
(bad)
call
and
mov
test
(bad)
jmp
shl
jge
pop
xchg
sub
das
in
cmps
adc
pop
sbb
pop
pop
stc
(bad)
lea
and
test
outs
neg
stos
ja
and
pop
out
pop
inc
shl
jbe
fwait
add
pushf
mov
pop
(bad)
xor
mov
dec
repnz
xchg
pop
jmp
pop
call
(bad)
fstp
cmp
enter
in
add
movs
and
lea
ret
popf
and
push
(bad)
out
mov
lods
aas
lods
out
xor
add
xchg
icebp
pop
sub
lods
xor
jae
call
outs
rcl
xor
inc
leave
mov
mov
iret
imul
ja
repnz
inc
dec
sbb
mov
arpl
adc
or
les
or
(bad)
das
adc
mov
fsub
lods
pushf
mov
xor
mov
adc
popf
inc
sbb
and
sub
push
lock
or
std
push
ins
xchg
xor
fwait
data16
scas
pop
hlt
pop
aad
stos
lahf
mul
xchg
aad
cwde
loope
dec
pop
scas
mov
outs
mov
dec
xchg
jmp
or
jnp
push
push
adc
in
hlt
cmp
jo
push
fwait
add
jmp
or
(bad)
sub
jne
clc
rol
jo
call
dec
ror
mov
js
xadd
add
imul
push
das
jle
mov
leave
pushf
jmp
pushf
in
adc
dec
outs
daa
xor
cmc
(bad)
mov
mov
pop
movs
jbe
cmps
jbe
imul
fidivr
into
and
addr16
shl
(bad)
dec
cwde
inc
mov
outs
fs
ror
scas
push
test
or
mov
or
lea
or
or
mov
dec
add
(bad)
faddp
sbb
mov
cmps
nop
push
inc
mov
adc
xchg
sub
adc
ja
push
das
jno
shr
add
call
add
ja
jb
pop
stc
mov
mov
adc
or
(bad)
call
sbb
aad
int3
cs
push
adc
into
dec
xor
jo
push
push
push
push
and
mov
jl
outs
loop
test
retf
in
icebp
nop
rcr
sub
or
jno
icebp
sub
popa
inc
push
scas
les
je
sub
das
jmp
pop
repnz
aad
cmp
adc
jno
mov
(bad)
cmps
clc
or
bound
pop
jo
and
aad
adc
in
pop
push
call
cmp
stos
sahf
xchg
test
mov
jge
ds
push
inc
mov
xor
repz
stc
or
imul
push
mov
loop
add
jp
repnz
clc
pop
pop
out
(bad)
cmc
shr
jns
and
or
cli
inc
aaa
outs
ja
mov
popa
das
test
xor
cmp
pop
xor
xchg
inc
xchg
mov
daa
push
xor
inc
test
push
out
lods
add
rcl
inc
mov
xchg
call
jns
cmp
call
or
jle
xchg
push
mov
ficomp
hlt
inc
popf
sbb
mov
aas
stos
jns
jg
mov
push
lds
mov
push
imul
int3
add
test
pop
sbb
inc
cmp
push
mov
repz
jmp
pop
and
pop
lahf
mov
outs
scas
sub
in
mov
scas
es
dec
xchg
and
aaa
xor
stc
mov
jb
data16
sahf
cmovle
shl
mov
out
int
xchg
sub
mov
mov
jno
xlat
retf
cmps
dec
adc
(bad)
cld
add
(bad)
cmp
xchg
lods
sub
dec
es
(bad)
addr16
lds
movs
ret
or
jp
jp
xchg
js
add
test
sti
push
stos
ins
mov
xchg
push
push
repnz
xor
lods
adc
call
dec
pop
mov
adc
mov
or
stos
jmp
cmp
scas
dec
pcmpeqw
sbb
ss
outs
sbb
mov
dec
mov
mov
pop
add
int
jecxz
xor
add
mov
shl
in
jge
cmp
and
(bad)
int
dec
jp
cdq
add
add
mov
leave
stc
mov
loop
jnp
push
jl
pop
out
add
push
frstor
or
mov
imul
fs
sub
sbb
cmps
cwde
jns
sysexit
lahf
mov
mov
cmp
pop
jle
(bad)
push
jecxz
adc
shl
pop
sbb
mov
in
or
out
and
fistp
mov
sub
fcom
xlat
js
cmp
cwde
lea
or
add
out
push
das
and
inc
stos
int
jns
push
sbb
mov
repz
cld
ss
pop
xchg
adc
lds
add
mov
jmp
sub
xor
in
shl
push
jnp
inc
cmp
or
mov
aad
fcom
xor
ret
out
in
in
push
jns
fst
jno
mov
sti
test
prefetcht2
xchg
add
inc
aaa
or
aas
dec
icebp
adc
xor
ja
pop
in
inc
lea
cmp
push
aam
sbb
xchg
imul
mov
push
lahf
fsub
push
adc
daa
or
jmp
sub
jp
call
adc
add
pop
xor
popf
xchg
inc
pop
cmp
pop
nop
cmps
iret
jl
inc
mov
and
jl
(bad)
inc
movs
pop
dec
xchg
cmp
jmp
aad
loopne
sbb
push
cmc
and
movs
imul
retf
popa
test
sbb
in
adc
lods
arpl
dec
int3
bnd
mov
or
cmp
sub
fcmovbe
ret
xchg
mov
jo
rol
aad
fwait
xor
(bad)
div
ins
shl
add
sbb
pop
jmp
xchg
sbb
shl
inc
inc
cmp
mov
sbb
fnsave
inc
mov
xor
je
sbb
adc
es
xor
mov
push
test
movs
dec
pop
sbb
scas
or
xchg
imul
outs
dec
and
in
sub
jge
arpl
sub
not
adc
pop
jge
sbb
ins
cmc
jp
xlat
or
cs
ror
popf
dec
dec
fst
movs
out
lds
mov
pusha
and
mov
mov
inc
cmp
fldcw
mov
cli
dec
mov
nop
fs
outs
mov
xor
mov
fcmovnb
mov
(bad)
shr
lock
sub
ja
or
ss
xchg
scas
nop
mov
nop
fimul
lahf
(bad)
cmps
xchg
stos
mov
jns
push
adc
and
(bad)
(bad)
ror
icebp
rcl
js
xor
push
std
pop
(bad)
cdq
push
inc
imul
xchg
mov
pop
ret
fwait
jbe
push
mov
aas
push
fisttp
fwait
cwde
push
inc
mov
jae
int
pushf
dec
imul
int3
dec
inc
jmp
(bad)
(bad)
rcl
jo
(bad)
cmps
and
call
mov
dec
sbb
xchg
dec
lock
int3
inc
xlat
repnz
cmp
cmps
aaa
clc
inc
movs
iret
or
inc
xchg
dec
ret
cmp
popf
mov
dec
fs
mov
sbb
imul
adc
dec
(bad)
ds
cld
push
sbb
cmps
movs
mov
pop
dec
movs
mov
push
stc
rol
inc
rcr
sbb
cs
fisttp
mov
sbb
enter
inc
icebp
push
mov
int3
je
push
jle
shr
push
mov
dec
dec
cs
inc
pop
adc
cmp
lahf
push
adc
movs
sub
ret
scas
xlat
mov
imul
dec
sub
cmp
cmp
iret
jne
sub
mov
add
scas
fcom
jmp
cmc
test
fisubr
xchg
mov
pop
mov
stos
retf
out
shr
sbb
rol
jge
add
xchg
popf
pusha
inc
out
pop
xor
aad
js
in
mov
dec
lahf
mov
es
and
imul
adc
pop
aam
cmp
and
movs
ror
imul
int3
lods
adc
cmps
mov
add
inc
sbb
bound
or
jno
aaa
jb
orps
mov
jp
or
add
rcl
sub
xor
adc
pusha
and
in
ins
ficom
jmp
add
mov
pminub
js
data16
adc
pop
test
in
ins
cmp
in
aas
or
fnstenv
mov
push
push
rcr
xchg
call
std
ja
push
loope
mov
jecxz
pop
lods
xchg
js
dec
jg
inc
inc
jp
std
mov
xor
adc
sub
repnz
jbe
add
in
xchg
add
sub
mov
sbb
out
jne
clc
sar
stos
cmps
ins
fdivr
aaa
sbb
js
repnz
lock
pop
dec
mov
outs
mov
and
cmps
xchg
mov
mov
repnz
cmp
(bad)
push
stos
test
mov
pop
dec
pop
shr
pop
clc
xor
xlat
ss
inc
inc
call
mov
jbe
lea
inc
mov
push
jg
scas
sar
(bad)
sub
mov
sahf
mov
add
gs
ds
ffreep
adc
add
mov
pop
mov
mov
cwde
pop
scas
mov
scas
outs
out
ins
sbb
retf
dec
das
add
out
mov
mov
xor
push
pop
or
xor
in
xor
dec
daa
mov
call
dec
xchg
sub
sahf
mov
in
sub
movs
mov
ins
inc
rol
stc
outs
movs
xor
retf
cmp
jmp
add
cmova
retf
test
imul
lods
les
movs
inc
sbb
ja
jp
pop
adc
cli
in
popa
jmp
mov
mov
retf
lds
leave
mov
dec
das
sub
pop
and
or
dec
inc
pop
aam
nop
and
push
dec
scas
test
and
add
cwde
(bad)
cmc
xchg
mov
xchg
adc
aaa
stos
mov
jb
dec
daa
xor
in
dec
call
(bad)
fs
mov
aad
test
test
cld
in
out
push
scas
mov
mov
mov
cmp
push
(bad)
fstp
push
adc
jmp
int
repz
popf
addr16
pop
pop
mov
cmp
mov
mov
mov
mov
xchg
je
icebp
lock
fimul
jb
sbb
hlt
jmp
push
daa
and
add
scas
mov
repnz
sub
or
cmp
xchg
sub
sahf
and
add
mov
mov
jle
(bad)
lods
pop
popf
mov
add
packuswb
(bad)
fcom
je
test
fcomp
sbb
xchg
data16
ror
imul
sub
dec
sbb
dec
jbe
xchg
push
and
sbb
int
xchg
mov
(bad)
sbb
sbb
sub
fstp
sbb
sbb
das
cmp
pop
imul
jg
inc
dec
adc
mov
mov
in
ja
push
int
push
add
ror
pop
(bad)
js
dec
(bad)
jp
jno
(bad)
and
jno
out
aas
mov
sub
ficomp
xchg
pop
jge
popa
scas
xor
adc
mov
imul
or
loope
inc
sar
add
xchg
and
jmp
aas
and
cs
clc
aaa
xor
pop
retf
sbb
pop
add
add
cwde
repz
mov
movs
out
cmps
ja
in
mov
jns
aaa
push
and
ss
mov
sbb
add
fisttp
mov
mov
xor
sub
push
pop
jbe
inc
jnp
pop
mov
loope
sub
xchg
and
pop
mov
add
or
and
imul
stos
inc
loop
dec
data16
inc
call
inc
adc
xchg
rcl
popa
into
jl
(bad)
sbb
pop
stos
out
cdq
leave
inc
and
fldenv
push
mov
frstor
mov
mov
add
push
push
stc
aam
cmp
mov
push
vpunpckhbw
add
mov
cdq
sbb
cld
dec
je
pushf
dec
std
jae
mov
nop
call
jae
push
pop
xchg
cmp
adc
adc
jb
inc
jo
or
leave
in
xor
pop
icebp
cmps
ins
cmp
pop
cdq
and
dec
sbb
jbe
mov
jmp
stos
or
mov
xor
(bad)
rcr
jnp
inc
jbe
in
outs
sbb
and
jl
outs
adc
push
pop
pop
push
sbb
xor
or
aad
pop
pop
addr16
push
sbb
das
lea
gs
xchg
dec
xor
mov
jne
inc
adc
test
(bad)
hlt
add
sub
ror
xlat
call
pop
pushf
add
ret
mov
mov
out
adc
or
and
cmp
outs
sub
or
fadd
rol
(bad)
fbstp
mov
lock
push
ror
sbb
sar
or
lds
mov
dec
push
test
xchg
jo
dec
cmp
stos
mov
pop
repz
mov
xchg
jle
sub
dec
mov
sti
mov
in
pop
adc
jmp
cs
in
xchg
scas
dec
xchg
mov
xchg
xchg
inc
sub
ss
mov
clc
sahf
push
clc
pop
push
mov
ja
and
test
push
in
sahf
retf
sub
(bad)
int3
mov
in
mov
test
mov
fst
cmp
lds
das
loop
jg
mov
retf
bound
fldenv
out
fcom
sar
push
daa
rol
jmp
xor
push
pop
sub
cmp
sub
fnsetpm(287
fmul
mov
sbb
mov
dec
(bad)
mov
repnz
int
les
inc
loopne
adc
cdq
je
je
push
int
cmp
je
or
push
xchg
push
fisttp
jbe
and
add
imul
mov
pop
call
out
mov
int
outs
fs
ss
push
xor
leave
push
sub
mov
imul
rcl
cmp
ja
data16
ins
mov
xchg
jge
es
cdq
mov
cmp
add
imul
push
xchg
cmps
(bad)
jo
test
inc
xchg
mov
dec
mov
ja
add
ror
inc
jg
adc
mov
xor
jno
test
jge
xor
jbe
popfw
and
or
sbb
cmp
popa
nop
clc
scas
and
movs
push
mov
and
outs
or
jns
inc
pop
pushf
jne
xlat
inc
push
in
mov
sub
test
out
jecxz
cwde
fisttp
or
mov
pop
adc
inc
lahf
dec
into
popf
mov
shl
pop
mov
repnz
jg
or
les
push
sbb
pop
or
jb
push
cmp
std
gs
in
xlat
adc
ret
push
shr
push
jno
gs
sbb
or
cmc
jle
jbe
and
mov
add
retf
popa
aam
jbe
mov
std
(bad)
fdiv
mov
inc
aad
or
pop
xor
test
mov
aad
int3
lahf
push
stos
inc
mov
mov
loopne
mov
mov
cmp
push
inc
jmp
push
pop
xchg
sub
pop
jmp
test
mov
out
repz
dec
aad
jns
in
mov
iret
cmp
xchg
cmp
scas
push
xchg
adc
sbb
inc
xor
pop
pop
push
dec
ja
xor
xchg
into
mov
shr
icebp
mov
maxps
loopne
jmp
pop
inc
popf
imul
add
pusha
cld
mov
lahf
ror
mov
jno
mov
adc
jecxz
sub
dec
jl
mov
cmps
pop
mov
sub
inc
jo
adc
pop
cmp
pop
fdivr
stc
(bad)
rcr
pop
mov
xor
in
sbb
in
int3
pop
es
sub
sbb
aam
adc
lods
push
pushf
mov
push
mov
cmp
in
aas
mov
out
stos
or
ins
call
(bad)
pop
out
add
inc
cli
into
inc
cdq
call
mov
(bad)
popa
imul
loope
inc
int
push
or
jb
dec
imul
cmp
in
add
loope
push
jno
sub
pop
jmp
call
inc
pop
fcmovnbe
inc
ror
jg
push
jns
inc
dec
je
inc
and
push
push
test
test
jbe
cmc
or
mov
pop
test
pop
div
mov
imul
ja
push
mov
out
push
shrd
lods
imul
rol
adc
out
xor
cmp
stos
cmp
xor
jbe
adc
mov
stos
bound
push
pop
adc
(bad)
(bad)
jne
fdivr
mov
xor
lods
xor
xor
sub
dec
pushf
fld
cmp
into
mov
sub
mov
imul
cmovns
loop
pop
dec
pushf
shr
rol
shl
inc
xchg
xchg
rcl
jl
rol
adc
test
adc
xchg
cdq
push
neg
mov
jecxz
js
mov
xchg
add
retf
mov
test
pop
fwait
jl
xchg
cmp
ds
dec
jo
sar
loop
mov
and
pop
jg
jbe
ror
xchg
or
mov
mov
pop
fdiv
sbb
and
outs
dec
out
inc
es
neg
inc
test
adc
push
clc
push
xor
pop
pop
leave
lds
fdiv
lods
push
pop
and
sbb
cmps
xor
popf
xor
sub
push
add
inc
adc
(bad)
lods
retf
ss
movs
pop
retf
icebp
dec
mov
(bad)
in
cmps
bts
mov
sbb
mov
pop
xor
gs
mov
pop
arpl
inc
ret
or
ins
push
xchg
movs
pop
sbb
ins
and
lock
in
out
lock
test
int3
jecxz
or
in
stos
loopne
cmp
jb
cmp
test
inc
cwde
cwde
jns
push
shl
xor
inc
mov
ror
ss
add
pop
inc
fadd
imul
aaa
je
daa
(bad)
cmp
shl
shr
in
leave
cdq
dec
sub
jg
data16
add
aad
push
(bad)
mov
lods
loope
dec
lahf
out
xchg
leave
xchg
jb
inc
mov
jnp
mov
in
pop
lahf
pop
inc
push
add
ins
jp
or
xchg
ds
xor
pop
mov
jne
repz
adc
sahf
inc
push
fsub
xchg
mov
mov
push
stos
push
ffreep
add
push
stc
pop
pop
push
daa
push
pop
std
pop
jne
mov
pop
sbb
sub
test
(bad)
std
xchg
inc
retf
pop
jmp
ret
fcomp
(bad)
fcmovnb
rdmsr
pop
xchg
(bad)
cmp
imul
cmc
xchg
mov
pop
out
dec
sub
fcomip
cmp
jno
sub
repz
jp
scas
push
test
push
sti
es
leave
call
sbb
adc
cmp
ret
shl
imul
add
cmp
lds
loopne
pop
pop
and
pop
xor
jmp
mov
jmp
cs
fsub
movs
pop
in
jecxz
call
sub
dec
ret
sbb
sbb
add
or
ret
iret
or
fcmovnbe
sbb
fadd
js
daa
push
push
popa
push
push
(bad)
jmp
sahf
es
and
mov
in
dec
push
outs
mov
stos
jmp
and
(bad)
sbb
ins
pop
adc
xor
mov
ss
mov
mov
out
jmp
les
jmp
sti
jmp
and
jp
mov
and
and
js
ficom
jp
cmps
and
dec
popa
js
stc
sbb
clc
(bad)
nop
sub
fidiv
sar
and
mov
push
and
mov
retf
in
fisttp
loope
lods
dec
pop
xor
test
int
adc
xchg
mov
jle
and
fst
jl
mov
(bad)
aas
inc
cmp
xor
enter
jg
mov
mov
cwde
bound
jnp
mov
lods
push
imul
test
mov
in
frstor
mov
shr
cmp
jae
pop
push
jnp
push
cmp
jl
lds
push
mov
mov
ss
icebp
mov
clc
and
mov
ss
dec
in
test
and
retf
outs
lds
sub
dec
lahf
push
jle
pop
push
and
dec
int3
(bad)
xchg
push
cwde
pop
jmp
test
cmp
ins
in
xor
ud0
adc
ret
mov
dec
fs
mov
push
or
idiv
retf
push
xor
xor
xor
xor
enter
out
fmul
loop
shl
mov
or
push
add
mov
mov
ins
in
iret
imul
xchg
stc
cmp
mov
jecxz
outs
pop
jns
mov
repnz
dec
in
popf
popa
mov
idiv
dec
xchg
add
mov
dec
push
inc
pushf
ins
adc
xor
adc
inc
and
xor
xor
xchg
lods
in
mov
inc
test
rcr
ret
pop
rcr
xor
inc
addr16
dec
inc
adc
das
push
into
push
pop
adc
mov
push
xor
jg
add
push
cmps
mov
jecxz
push
and
out
or
mov
sahf
aas
mov
sub
and
xor
ficomp
pop
js
fimul
push
jns
xchg
inc
call
retf
ret
jae
jp
mov
add
sub
mov
push
out
jbe
(bad)
mov
pop
mov
fcomp
mov
pop
xor
loope
fsub
dec
mov
fcmovnbe
sub
pop
fnstcw
arpl
xor
push
(bad)
mul
mov
dec
jno
(bad)
push
push
or
mov
in
retf
scas
add
push
dec
pop
fist
dec
mov
push
adc
popf
test
and
xchg
enter
mov
(bad)
ret
aas
mov
dec
mov
dec
les
std
retf
jbe
aaa
push
mov
icebp
push
mov
mov
pop
neg
data16
fmul
lock
mov
mov
bound
into
xchg
push
jno
mov
xor
jmp
push
mov
dec
cdq
xchg
std
jo
movs
out
mov
daa
mov
repz
mov
xor
popa
cmps
and
push
leave
ficom
ret
jle
retf
xchg
out
xchg
add
out
stos
jo
call
stos
push
jg
jb
push
pop
xor
mov
jp
iret
sub
ins
mov
(bad)
repnz
icebp
or
push
cmps
mov
mov
stos
dec
rcr
mov
mov
mov
cmps
mov
mov
aas
test
ror
popa
dec
adc
(bad)
mov
jp
push
mov
mov
and
push
sar
fist
(bad)
js
lock
retf
jb
sbb
mov
shr
cs
sahf
mov
or
popa
cmp
loop
mov
aam
(bad)
dec
adc
(bad)
mov
adc
in
add
and
and
add
fwait
and
and
jbe
jmp
or
push
stc
arpl
and
div
fwait
or
test
dec
cmp
inc
icebp
mov
jnp
push
push
cdq
cmp
sbb
and
push
sbb
xchg
outs
test
lods
pusha
stos
in
out
mov
out
jae
push
or
fstp
les
sbb
pop
iret
call
pop
or
push
ret
xchg
pop
jge
leave
call
in
fld
xchg
pusha
shr
jmp
cs
ret
(bad)
ins
rol
cs
sub
sbb
ret
ret
retf
repz
push
inc
cmp
cwde
div
mov
idiv
retf
ja
sub
pop
cmc
jnp
outs
and
cmps
push
sbb
shr
retf
nop
dec
popa
push
(bad)
push
or
mov
in
(bad)
das
test
stos
or
sub
call
rcl
outs
dec
adc
mov
inc
adc
xor
leave
lahf
jnp
add
das
jp
pop
jle
and
dec
(bad)
dec
xchg
sti
fst
push
add
mov
sbb
lods
ds
adc
adc
jno
ret
dec
dec
les
mov
jb
cmps
mov
movs
xchg
xchg
jp
pop
jmp
cld
mov
dec
mov
or
mov
outs
jle
jp
dec
(bad)
push
sbb
cld
xchg
adc
or
or
push
in
cld
jmp
mov
mov
sub
aam
jne
mov
call
push
arpl
sub
repnz
aaa
daa
jbe
imul
dec
xchg
jp
add
pushf
std
mov
popa
out
mov
sub
ins
(bad)
fsubr
test
(bad)
push
into
cmc
adc
xor
out
add
or
mov
push
add
fist
or
retf
and
adc
add
pushf
add
cmc
movs
cmp
jne
je
ds
inc
aaa
test
(bad)
push
sahf
cmc
dec
dec
sub
std
push
stc
gs
xlat
jne
push
aas
bound
iret
mov
stos
out
adc
sahf
mov
mov
(bad)
daa
call
mov
clc
or
push
icebp
mov
push
jle
jo
push
and
(bad)
mov
mov
mov
pop
movs
shl
push
cwde
hlt
push
int3
ds
mov
push
pop
sbb
(bad)
inc
sbb
fwait
sbb
inc
call
(bad)
and
(bad)
sti
in
fidiv
push
ret
jnp
rcr
cmp
push
mov
or
mov
dec
inc
sbb
sbb
cmp
imul
cmc
repnz
clc
fisttp
out
mov
add
call
gs
fmul
popa
jae
mov
sub
mov
push
rcr
movs
xor
ja
inc
mov
dec
js
sti
and
adc
cmp
push
xor
push
mov
outs
js
shl
or
sub
dec
inc
mov
lahf
pop
dec
test
cmps
mov
sub
adc
mov
push
sti
scas
xchg
loopne
cmc
sbb
js
cmp
pop
repz
retf
push
cmp
pop
xchg
adc
rcr
cmp
pop
mov
sbb
sbb
sbb
aam
daa
xchg
xor
outs
add
es
dec
ror
test
stc
ins
pop
push
test
push
xor
push
loopne
fcomp
xchg
cmp
cmp
stos
fadd
jecxz
add
sbb
je
(bad)
call
pop
inc
int3
and
(bad)
mov
nop
cmp
xor
push
add
xchg
adc
or
popf
push
mov
clc
data16
movs
and
mov
inc
mov
out
adc
adc
jae
and
std
or
std
scas
xor
ins
lock
stos
aad
jecxz
js
es
push
mov
mov
gs
popf
cmps
mov
jns
push
mov
imul
sbb
inc
loop
data16
fnstsw
sub
popa
es
icebp
cmp
xor
mov
pop
jg
fdiv
pop
and
pop
ins
cmp
stos
add
sbb
inc
clc
cmova
adc
pop
loopne
mov
leave
adc
int
sub
add
and
dec
or
add
and
js
(bad)
int
sbb
je
push
or
std
popf
lahf
(bad)
and
repz
jnp
or
ds
das
lock
test
add
fucomp
jge
mov
sar
cs
lock
loop
retf
iret
push
mov
xchg
fmul
stc
jb
pop
mov
pop
xchg
out
add
sbb
or
dec
mov
cmp
mov
nop
sbb
call
and
pop
or
or
aam
jecxz
sub
sbb
sub
clc
sahf
(bad)
test
popa
div
mov
out
push
mov
and
or
fdivr
test
movs
scas
(bad)
xchg
(bad)
jne
inc
test
stos
outs
mov
(bad)
test
cmc
ror
xchg
bound
jno
into
sub
xlat
pop
stos
sub
pop
or
sub
sbb
outs
(bad)
jmp
push
xlat
jno
test
outs
out
mov
mov
xchg
push
lea
(bad)
aad
out
popf
mov
stos
js
adc
sbb
inc
push
ss
mov
mov
or
push
cmp
pop
fidivr
xchg
jmp
test
gs
xchg
nop
lds
imul
lahf
inc
sahf
jl
das
push
jbe
inc
push
mov
es
and
div
mov
push
jnp
fwait
push
lahf
jmp
mov
fadd
push
or
dec
or
test
mov
mov
(bad)
fcom
stc
ins
scas
xor
(bad)
cld
push
stos
mov
dec
jge
cmps
mov
imul
push
(bad)
clc
(bad)
add
pop
xchg
dec
sbb
imul
xor
jmp
mov
mov
push
ds
or
sbb
pop
popa
out
xor
add
dec
add
xchg
mov
dec
call
retf
hlt
loope
xchg
xchg
jo
(bad)
inc
mov
mov
(bad)
pop
and
je
sbb
in
cwde
dec
(bad)
lods
aaa
xchg
lea
std
jns
mov
xchg
nop
xchg
movs
or
and
int3
ret
rol
xchg
lods
ins
xor
xor
(bad)
daa
add
mov
and
jecxz
out
adc
jbe
jne
(bad)
pop
or
fisubr
cs
push
pop
movs
mov
push
push
push
inc
into
add
mov
sub
ret
das
adc
push
cdq
loop
out
sbb
inc
jmp
pop
imul
xchg
mov
or
adc
leave
repz
repz
fwait
nop
into
sub
jne
push
or
pop
xchg
and
scas
ja
mov
jbe
jne
(bad)
shl
hlt
cli
call
add
loop
xchg
scas
jmp
xchg
enter
mov
mov
outs
cmc
ds
adc
xchg
ins
dec
mov
pop
mov
out
or
jnp
jecxz
in
mov
mov
xor
inc
rcr
mov
pop
jmp
mov
xor
outs
or
fdivp
mov
das
mov
fsub
cmp
das
sub
call
push
ins
aam
inc
push
and
imul
lea
rol
shl
or
jp
or
jnp
test
dec
jns
jne
jg
in
adc
rcr
cld
push
inc
push
sub
mov
sbb
pop
daa
fwait
xchg
push
jmp
rcr
mov
popf
jmp
fstp
shr
inc
or
dec
and
jecxz
sub
xlat
neg
(bad)
rcl
jmp
and
jns
sti
mov
xor
or
in
dec
lods
dec
lds
jmp
mov
adc
inc
in
test
retf
jnp
popa
dec
inc
aam
jle
call
cmp
outs
mov
pop
sbb
push
mov
pop
mov
mov
cmp
mov
or
test
cmp
rcl
daa
int
and
gs
adc
jne
mov
xchg
fxch
arpl
mov
jmp
sar
in
test
mov
cwde
pop
sbb
dec
stos
js
inc
ror
dec
ret
mov
mov
(bad)
xor
mov
mov
sbb
(bad)
sbb
hlt
or
pop
mov
stc
pop
std
ret
mov
mov
out
add
jp
push
mov
pop
mov
fmul
add
shl
pop
inc
adc
push
push
or
mov
xor
rol
sub
jo
add
push
jmp
or
pop
cmp
pop
jns
sbb
fwait
cmps
mov
repz
xor
xor
test
cmp
mov
mov
stc
adc
dec
and
movs
pop
loope
push
adc
xchg
repz
call
mov
icebp
leave
mov
cmp
icebp
mov
mov
xchg
sub
ins
jp
addr16
sub
add
(bad)
cmp
repnz
pop
retf
cmc
fs
test
fnstsw
mov
shl
add
iret
shr
add
cmp
(bad)
xlat
movs
mov
pop
xlat
loope
es
lods
sbb
pop
sub
push
nop
sbb
jp
and
and
sbb
dec
cmp
bound
mov
outs
cld
in
push
loop
imul
stos
sbb
push
mov
outs
in
cs
pop
push
aas
adc
pop
cwde
dec
scas
fadd
adc
js
push
shl
fild
fdivr
rcr
sub
mov
in
test
repnz
mov
push
mov
in
dec
test
out
add
pop
xchg
out
popa
mov
ror
mov
jne
sbb
pushf
loop
adc
sub
mov
inc
jl
jbe
neg
hlt
(bad)
or
ds
sbb
inc
jl
outs
adc
mov
cmp
xchg
call
bnd
mov
iret
xor
inc
ret
dec
cmp
jne
shl
stos
inc
(bad)
aas
mov
adc
arpl
sub
je
call
and
popf
cmc
mov
out
jmp
ja
je
adc
lea
add
dec
mov
sub
cmps
nop
aad
cmp
mov
jbe
dec
jns
shl
mov
or
and
imul
xchg
fwait
mov
jp
mov
and
push
mov
fs
push
sub
mov
sar
repnz
out
push
fidivr
paddq
adc
mov
fisttp
xor
cmc
sbb
jno
xchg
out
cmp
add
loopne
mov
push
jnp
push
push
sub
adc
push
xor
push
cmp
loope
stos
jae
inc
pop
inc
mov
pop
call
retf
xor
adc
loopne
pop
loope
cmp
push
jmp
rcr
pop
fisub
mov
fisubr
inc
inc
inc
imul
fld
fchs
ss
mov
xor
mov
mov
sbb
cmp
xor
adc
rcl
es
stos
xor
jo
jmp
add
inc
xchg
sub
inc
fs
jge
outs
mov
pop
mov
jb
out
xchg
inc
cmp
add
pop
lea
loop
cmps
loop
mov
sub
mov
(bad)
rcr
cmp
adc
mov
push
xor
adc
pop
daa
sub
fdiv
cli
cmps
call
movs
xchg
mov
mov
(bad)
pop
mov
inc
and
xchg
mov
rcl
out
les
(bad)
test
mov
sbb
stos
jae
push
(bad)
sub
or
add
push
(bad)
es
pushf
inc
outs
jo
hlt
ret
ss
in
fdiv
mov
daa
out
pop
add
(bad)
jmp
sbb
push
push
and
xchg
sar
repnz
aam
clc
pop
frstor
(bad)
jns
xchg
aaa
mov
jp
and
popf
push
and
(bad)
sbb
jns
test
fs
sti
les
mov
out
jmp
ins
mov
popa
pop
psllw
fidiv
sahf
repz
adc
or
call
cmp
and
xor
jae
test
out
mov
cmp
sbb
std
inc
adc
sbb
xchg
mov
bound
and
outs
inc
(bad)
arpl
adc
mov
push
mov
add
mov
ucomiss
(bad)
fnstsw
out
xchg
mov
(bad)
mov
xor
shl
dec
add
and
push
inc
cmp
das
sub
or
mov
pop
shr
sahf
loopne
mov
hlt
imul
push
sbb
mov
mov
fadd
lds
sbb
adc
(bad)
cs
xlat
dec
xor
popa
data16
mov
add
cs
idiv
and
pusha
nop
aam
in
(bad)
test
add
or
inc
std
dec
mov
outs
rcr
cmps
out
test
pop
ins
pop
aaa
sbb
cmp
mov
mov
js
retf
pop
push
push
mov
fcomp
imul
out
and
pop
std
xchg
mov
or
aam
icebp
lods
dec
and
mov
push
pop
sub
cmp
rcl
jp
outs
hlt
mov
mov
lods
stos
(bad)
repz
adc
pop
arpl
jae
scas
lds
in
adc
mov
adc
jbe
sbb
xor
stos
test
cmp
inc
mov
out
je
arpl
jmp
scas
jne
fs
adc
dec
cdq
in
icebp
adc
iret
es
(bad)
jmp
inc
cmp
adc
mov
adc
mov
iret
sub
call
xor
xchg
ss
cmp
xlat
outs
jl
mov
and
mov
xor
or
das
aaa
pop
mov
inc
sub
add
xor
(bad)
jecxz
bts
sbb
fmul
repz
mov
aas
jg
jno
add
scas
adc
(bad)
in
lock
push
inc
data16
inc
ss
push
jae
movs
cmp
xchg
push
push
mov
or
inc
popa
xor
mov
iretw
test
jae
shr
sub
(bad)
mov
dec
dec
mov
adc
fnsave
out
fnstenv
in
or
ret
inc
in
retf
jl
push
(bad)
repnz
fwait
inc
hlt
jmp
je
repnz
push
daa
in
or
cld
retf
inc
add
xor
push
popf
ret
movs
pop
pushf
cmp
mov
out
pop
inc
retf
data16
scas
sub
mov
push
sahf
call
mov
xchg
arpl
(bad)
mov
mov
inc
xor
inc
or
mov
mov
jp
dec
rcr
sub
inc
xor
mov
fisub
jns
mov
mov
or
adc
icebp
test
(bad)
repnz
fld
call
dec
ret
add
in
xchg
ds
out
retf
repnz
inc
cmp
out
cmp
jecxz
test
fsubr
pop
xor
adc
mov
mov
push
and
mov
scas
(bad)
mov
iret
fmul
call
cli
(bad)
out
or
mul
cmps
aaa
lahf
ins
add
or
out
das
jb
jle
jg
jno
inc
push
xchg
call
push
jmp
shl
xchg
pop
test
adc
into
fild
jmp
xchg
cmp
adc
mov
mov
pop
sbb
mov
cwde
ret
adc
pop
and
mov
cmp
cmp
(bad)
dec
sub
stos
push
sub
fimul
loope
hlt
xchg
lods
inc
test
out
sbb
jo
in
data16
mov
ss
fild
outs
arpl
call
cmps
movs
adc
push
nop
(bad)
xchg
ins
push
arpl
out
cmp
ret
inc
outs
xor
cli
jg
fs
or
out
fs
shl
jb
jno
loop
out
xor
pop
test
movs
scas
popa
dec
jmp
mov
call
retf
sub
ret
enter
jle
push
into
mov
fmul
and
in
mov
mov
jnp
(bad)
pop
data16
outs
mov
push
movs
loopne
cmps
outs
outs
scas
xor
push
leave
js
cmp
icebp
push
mov
and
inc
sub
sub
iret
push
and
popf
gs
cmovno
(bad)
cmp
push
jp
sbb
icebp
xchg
mov
addr16
out
out
iret
ss
dec
clc
adc
mov
push
sbb
xchg
pop
cmp
mov
cmc
idiv
mov
dec
sub
push
dec
pop
lods
jbe
adc
loopne
loop
sub
(bad)
jbe
jns
addr16
ret
movs
push
inc
pop
push
push
lahf
mov
idiv
xor
data16
mov
or
test
ja
mov
xchg
xlat
lea
dec
sub
jl
adc
pop
xchg
or
adc
push
pushf
out
cmp
xchg
dec
inc
pop
adc
push
jg
mov
imul
das
imul
mov
xchg
iret
popf
adc
in
xchg
mov
js
fdiv
(bad)
xlat
int3
lock
sbb
in
pop
in
sub
fisub
pop
callw
std
mov
push
pop
jbe
rcr
add
jne
test
push
pop
pop
mov
mov
mov
sub
icebp
dec
je
fwait
mov
test
pop
cmp
lods
int
mov
cmps
mov
mov
(bad)
pop
imul
mov
jecxz
addr16
bound
je
inc
sub
or
stc
xchg
retf
ins
mov
push
sbb
aad
jne
dec
sbb
adc
fnstenv
add
into
pop
movs
lea
fldcw
ins
sub
cmps
or
sbb
test
sti
cmps
or
push
repz
retf
adc
jecxz
out
dec
add
out
xlat
xchg
inc
leave
pop
and
clc
cli
jge
scas
ror
add
rol
out
pop
inc
in
in
pop
outs
mov
jae
cmps
and
mov
cld
cld
mov
inc
stos
xchg
aad
mov
repnz
dec
out
call
push
jnp
add
jmp
xor
mov
inc
mov
movs
pop
xchg
push
mov
loope
inc
jo
jmp
sub
xor
or
xor
(bad)
daa
jge
jmp
cmp
pop
add
dec
cmp
mov
xor
popf
enter
pop
movs
xchg
das
mov
ret
lds
hlt
(bad)
sbb
in
sti
in
sbb
lahf
jge
aad
adc
cld
sub
ja
inc
into
test
ds
sahf
stos
push
or
xchg
or
xor
xchg
adc
lds
test
fdiv
cwde
ds
and
shl
adc
inc
scas
add
mov
sub
cs
lds
(bad)
sub
dec
sub
mov
jae
cdq
jmp
xor
mov
push
leave
aam
das
out
cld
sar
fs
push
adc
and
aad
outs
jmp
jmp
push
adc
push
mov
dec
scas
mov
xchg
jmp
(bad)
rcl
loop
xchg
xor
jo
jg
xor
popf
daa
cmp
idiv
push
gs
icebp
mov
xor
push
mov
mov
and
xchg
ret
ret
ins
les
xor
shl
add
mov
ds
cli
ja
jno
aam
pushf
add
pop
mov
and
hlt
fistp
fs
sbb
xchg
mov
(bad)
mov
xor
mov
cmp
sub
aaa
cli
dec
adc
fs
movs
lods
adc
pushf
scas
xchg
lock
in
lds
inc
cmps
xchg
and
ins
in
pop
mov
xchg
jb
cmc
sub
enter
and
(bad)
fisttp
add
scas
call
in
adc
adc
cmc
mov
fs
out
(bad)
jge
inc
xor
add
movs
mov
icebp
mov
cmp
test
add
js
movs
jb
fwait
stos
add
repnz
jae
push
and
jmp
retf
repnz
out
sbb
dec
mov
mov
pop
sti
jmp
push
sbb
sbb
inc
lods
adc
fdiv
xchg
loop
movs
gs
push
xor
cmps
pop
ins
movs
mov
js
cli
xchg
and
cli
add
and
or
std
xlat
cmp
popf
dec
mov
sub
out
sbb
xor
jge
mov
bound
loop
shl
cwde
repnz
mov
xlat
nop
movs
mov
xor
movs
ret
jmp
sub
mov
test
mov
mov
test
bound
rol
stos
clc
pop
cmp
loop
cmp
jle
inc
(bad)
lods
shr
xchg
or
and
nop
jle
pop
lock
stos
push
jl
pop
mov
inc
xchg
inc
mov
xchg
dec
mov
jp
sbb
sbb
and
fld
xor
mov
imul
add
cdq
pop
retf
sbb
in
lock
sub
push
sbb
shl
test
in
fadd
pop
lods
sub
xlat
jbe
iret
ficomp
into
test
retf
hlt
xchg
xchg
pop
retf
retf
adc
rol
aaa
dec
in
or
pop
call
push
inc
cmp
pushf
in
popa
les
les
loop
loopne
xor
jns
lds
adc
pop
add
inc
fst
cmp
xchg
xor
jmp
mov
jb
mov
dec
xchg
adc
inc
test
jl
imul
out
sbb
fldl2e
or
clc
aam
in
cmp
scas
in
sub
fcmovnb
sub
test
nop
adc
jne
jmp
icebp
push
jmp
add
call
retf
fsubr
xor
fwait
ds
(bad)
movs
push
and
mov
add
mov
loopne
inc
data16
and
arpl
out
gs
loopne
push
mov
sahf
fdiv
inc
push
sub
adc
add
fisttp
rcr
pop
mov
adc
push
xor
add
mov
scas
inc
mov
pop
pop
mov
jmp
pop
aas
into
stos
jnp
cmp
mov
mov
push
pop
dec
popa
inc
xchg
adc
xchg
sub
mov
daa
je
mov
outs
call
retf
jnp
inc
(bad)
test
in
fcom
sti
aaa
mov
inc
pop
inc
mov
add
imul
lea
fst
rol
popf
cli
xor
pop
sbb
sar
sub
punpckhbw
iret
(bad)
mov
aad
push
mov
mov
call
jle
test
add
mov
cmp
jp
mov
fsubr
inc
pop
pop
cmp
add
ja
jmp
movs
popf
repnz
cmp
daa
mov
les
add
sti
jne
pop
jge
inc
outs
add
push
sub
pop
inc
fld
ins
mov
push
sbb
xchg
fcom
arpl
dec
or
pop
inc
or
cmp
mov
das
dec
fwait
inc
or
test
mov
fcomp
in
and
push
add
and
out
mov
(bad)
fst
mov
movs
inc
mov
xor
rcr
inc
xor
mov
jbe
cmp
add
jge
adc
mul
mov
fisubr
(bad)
pop
pop
xor
jle
sub
clc
int3
jne
fisubr
jl
ins
xor
dec
cli
test
fsub
or
lods
test
mov
sar
add
ja
sub
scas
sub
xchg
mov
mov
add
mov
mov
add
mov
ret
repz
cmp
test
pop
dec
hlt
dec
mov
pusha
xlat
outs
movs
test
mov
data16
pusha
inc
xchg
das
and
inc
xor
or
add
adc
and
or
pop
(bad)
std
stos
call
pextrw
inc
mov
lods
repz
movs
das
(bad)
ds
lods
in
or
idiv
push
mov
popf
dec
nop
xchg
ins
or
pop
scas
push
mov
je
sbb
push
xor
ins
sti
xchg
lock
xchg
pop
ins
shl
outs
repz
xchg
pop
or
mov
xchg
mov
jmp
or
jmp
jo
loop
pop
into
mov
(bad)
push
jae
fidiv
push
xchg
jne
loopne
daa
cmp
jecxz
push
mov
out
fst
pop
ins
add
retf
cmp
dec
lea
in
div
cmp
and
xchg
adc
in
dec
dec
cmps
mov
ins
pop
mov
clc
test
pop
(bad)
popa
xchg
js
adc
clc
push
mov
repnz
je
out
and
push
cld
cmps
add
in
out
mov
or
jo
out
mov
outs
cmp
outs
xchg
xor
imul
mov
mov
mov
test
ins
dec
dec
push
aaa
fmul
jmp
sbb
jmp
lods
ror
cmps
mov
cmp
xor
pusha
push
sub
sbb
jne
mul
mov
retf
adc
mov
clc
or
test
clc
mov
and
ror
mov
out
xor
out
pop
shl
js
into
dec
jl
push
xchg
or
add
sub
frstpm(287
mov
pop
inc
iret
test
xchg
fisubr
xchg
push
lea
lods
xor
mov
and
cwde
jbe
int
xchg
dec
pop
push
jmp
bound
out
inc
jmp
arpl
or
shr
add
inc
in
sbb
out
sbb
sar
adc
xor
enter
adc
fwait
cli
(bad)
sub
js
xchg
mov
push
jl
dec
ins
adc
ret
or
daa
or
add
pop
cmp
mov
cli
ss
mov
sbb
dec
adc
ret
popa
in
(bad)
into
sub
push
loopne
sub
jns
sbb
addr16
dec
pmaddwd
cmp
xchg
sahf
lea
imul
mov
test
dec
add
or
js
fwait
xor
cmp
mov
pushf
pop
jns
clc
pop
jns
cdq
ja
push
xchg
mov
push
add
(bad)
pop
pop
arpl
loope
test
adc
ret
fwait
pop
jge
mov
push
push
pop
jmp
ins
xchg
je
add
push
loope
jp
ja
test
(bad)
cmp
stc
daa
test
(bad)
sub
push
outs
es
or
sub
jmp
dec
dec
or
add
dec
bound
sti
xor
mov
sbb
scas
sbb
mov
sub
jb
pop
mov
push
push
push
push
sbb
pop
dec
cmp
fisubr
push
clc
fnsetpm(287
test
pusha
xchg
fst
es
xchg
push
cwde
mov
xor
xor
(bad)
addr16
shr
xor
mov
sub
mov
cmps
sub
sbb
sbb
push
mov
xchg
into
lahf
repz
test
jmp
bound
pop
iret
sbb
scas
ja
xchg
lock
sbb
sbb
pop
mov
pop
loopne
add
dec
pop
dec
movs
push
pop
push
ins
sbb
test
adc
mov
mov
dec
mov
lods
dec
jg
test
ret
sub
je
push
cmc
jl
pop
sub
mov
gs
jbe
sar
dec
test
and
sbb
mov
stos
jecxz
popa
pop
inc
out
dec
xor
or
dec
add
push
aam
xor
pop
cmp
cmp
push
inc
pusha
add
lods
mov
sub
jg
xlat
outs
mov
inc
repnz
jne
jae
lods
dec
push
cmp
das
jg
add
in
dec
inc
jp
in
mov
sub
(bad)
outs
bound
(bad)
jno
lods
inc
mov
ds
mov
mov
inc
lods
in
sbb
fmulp
xchg
inc
test
push
popa
lea
mov
mov
push
pushf
gs
int3
add
enter
or
dec
pop
sub
jl
sub
sub
in
xor
pop
idiv
pop
pop
inc
call
int
(bad)
jg
inc
loope
rcl
outs
add
xchg
(bad)
jns
xchg
jecxz
mov
test
shl
mov
mov
add
sub
cmp
lahf
repnz
xchg
ins
fadd
ja
mov
scas
inc
push
or
push
lahf
ins
nop
outs
jbe
push
inc
fdivr
mov
pop
shl
ret
iret
xor
fidiv
enter
lds
mov
mov
fldenv
push
shl
pop
adc
xor
sbb
and
sbb
dec
push
ins
mov
inc
std
shr
sti
lock
out
sbb
or
and
pop
fisttp
sbb
inc
iret
mov
mov
cli
imul
dec
pop
or
dec
add
push
lea
and
das
jecxz
data16
cld
mov
sahf
mov
pop
inc
pop
pushf
mov
dec
ja
push
add
lock
dec
test
dec
retf
sbb
jmp
sbb
in
sbb
mov
ret
mov
(bad)
adc
mov
dec
push
imul
adc
jge
bound
pop
adc
imul
inc
in
jp
mov
cmp
iret
and
jae
enter
mov
inc
cmp
dec
ins
mov
sub
jnp
mov
sbb
repnz
xchg
cs
(bad)
sahf
bnd
and
mov
push
adc
mov
push
popf
sbb
iret
mov
add
push
push
loopne
cmp
sbb
jmp
sbb
jge
test
mov
xchg
out
dec
cli
mov
xor
stos
call
movs
and
fwait
or
dec
out
pop
outs
inc
ror
sbb
mov
outs
inc
cdq
xchg
pop
and
mov
mov
je
or
inc
aaa
add
retf
jb
addr16
or
add
push
or
push
pop
(bad)
ds
cmp
ins
sar
adc
mov
add
test
xor
pop
cmp
pop
or
dec
dec
mov
leave
in
cmps
lods
repnz
dec
jo
call
jmp
jmp
mov
aad
inc
(bad)
and
rol
pop
(bad)
ja
pop
jno
scas
in
dec
nop
push
sbb
movs
xor
test
xchg
hlt
push
vmovaps
shr
mov
jbe
mov
retf
data16
jge
bound
hlt
out
mov
addr16
inc
push
(bad)
xor
mov
pop
add
push
jae
pop
inc
(bad)
jno
inc
imul
jmp
mov
or
pop
ins
jns
and
retf
ins
lds
dec
jno
pop
in
test
std
inc
fimul
mov
xor
jne
mov
sub
popf
sub
or
add
out
aaa
push
div
jb
push
inc
cmp
jns
ret
out
stos
js
adc
xchg
mov
and
retf
mov
mov
out
pop
test
sti
outs
lods
jg
sbb
stc
and
adc
jl
fcmove
iret
into
repz
pop
inc
(bad)
std
jno
jns
xchg
jb
jge
dec
and
inc
mov
mov
inc
adc
inc
add
xchg
cmc
pop
adc
loope
fist
pop
adc
pop
xor
addr16
pop
jmp
cmc
mov
and
icebp
xor
jmp
xchg
cld
ret
push
stos
jb
mov
loopne
lock
bound
inc
pop
clc
mov
jg
pop
mov
or
jmp
adc
idiv
cmp
and
sub
aas
popa
aad
imul
and
pop
imul
push
ins
jnp
push
jmp
ds
pop
(bad)
mov
jae
push
or
imul
xor
cmp
dec
mov
sub
mov
or
fwait
and
pop
dec
daa
adc
(bad)
std
cmc
mov
(bad)
in
cli
mov
mov
scas
mov
inc
fisubr
fsubrp
dec
push
fwait
mov
fidivr
mov
out
sub
(bad)
outs
js
or
and
fistp
xchg
jbe
dec
add
cdq
push
dec
push
imul
mov
das
adc
inc
frstor
pop
sbb
push
ins
and
cwde
popf
(bad)
inc
pop
mov
jg
mov
popa
sbb
and
repz
jnp
cld
jp
add
sti
sbb
std
loope
and
cmps
adc
ins
imul
cmp
cdq
jnp
aas
cmps
(bad)
out
push
xor
jne
fcmovnbe
push
mov
cwde
clc
fsub
sub
scas
dec
jecxz
mov
out
push
scas
mov
cmps
stos
mov
push
cmp
call
mov
mov
imul
adc
test
scas
loop
das
and
inc
(bad)
push
adc
ins
cmp
adc
scas
ret
xor
cmp
cs
test
std
addr16
dec
push
dec
nop
xchg
pushf
fdiv
xlat
test
push
outs
push
call
into
ja
lock
dec
test
push
cmc
cmp
(bad)
fbld
int
ss
mov
adc
(bad)
sbb
xchg
add
jecxz
sbb
cmp
jl
pop
sbb
sub
cs
mov
sbb
or
jmp
add
fnsave
push
mov
xchg
stc
push
mov
(bad)
jmp
jne
fistp
cmc
add
je
lods
dec
adc
cmc
(bad)
mov
sbb
or
jns
and
mov
loope
jle
mov
ins
aad
push
pop
jl
into
jbe
jecxz
dec
stos
xor
(bad)
into
in
xchg
(bad)
stos
fcomp
xor
ret
adc
pop
fimul
jae
loop
es
aam
ins
frstor
stos
and
enter
outs
sub
repz
loop
push
adc
adc
outs
pushf
fs
frstor
mov
fdiv
mov
mov
dec
fisub
shr
cdq
call
jmp
pop
pop
(bad)
push
pop
add
mov
fstp
sar
jmp
adc
and
jbe
mov
cmc
xor
fidivr
popf
jp
leave
jmp
aam
das
mov
out
dec
push
push
rol
mov
pushf
mov
frstor
add
ret
shl
inc
ja
mov
enter
repz
mov
push
add
push
xor
push
jnp
xchg
mov
dec
clc
std
cmp
in
xchg
dec
jmp
sbb
xor
retf
push
nop
inc
in
repz
fistp
jle
arpl
nop
dec
das
jle
popf
pop
nop
sub
cs
aam
xchg
add
(bad)
sub
or
push
pop
mov
push
sti
push
fdivr
cmp
je
fcom
call
scas
hlt
enter
addr16
rol
adc
sbb
adc
add
pop
jns
sub
into
jne
out
fist
jmp
pop
fcmovne
mov
popf
in
mov
out
or
xchg
aas
ret
in
mov
or
mov
cmp
add
pop
jo
pop
sahf
sbb
dec
or
sub
div
retf
out
cmp
xchg
nop
ins
dec
test
scas
jle
cmc
dec
push
rcl
push
sbb
cdq
and
mov
int3
cmp
pop
push
mov
or
pop
xor
mov
retf
mov
sahf
je
pop
inc
sti
add
clc
std
xchg
fisub
clc
sbb
arpl
adc
add
out
fadd
shld
arpl
call
pop
out
ror
push
adc
mov
lods
rcr
cmp
dec
mov
in
push
ja
cli
push
jns
xchg
mov
adc
stos
cmc
add
or
nop
popf
in
push
dec
mov
adc
shl
xor
dec
icebp
xchg
in
inc
out
xlat
pop
push
call
cli
xchg
pop
adc
arpl
dec
inc
(bad)
cmp
jmp
add
es
pop
xor
mov
retf
inc
movs
jb
scas
fild
test
cwde
xor
enter
jle
xchg
and
pop
je
popa
repz
dec
ffreep
mov
sub
(bad)
xchg
xchg
popf
fs
jno
push
adc
add
retf
rcr
(bad)
dec
lahf
or
stos
pop
cmp
push
in
and
stos
mov
push
in
dec
outs
mov
fsub
(bad)
ins
out
stos
and
xchg
mov
loop
aas
lods
cmp
test
mov
fst
jmp
xchg
mov
dec
ds
test
ins
xchg
mov
jp
cmps
push
(bad)
movs
repz
mov
dec
xor
sti
fwait
adc
pop
jns
repnz
fadd
adc
es
mov
iret
or
sbb
cmps
jge
jns
add
ins
lods
(bad)
repz
call
add
push
jns
shl
push
mov
stc
std
xchg
and
push
sub
icebp
retf
inc
outs
add
sbb
or
cdq
pusha
lock
inc
movs
cmp
movs
inc
jmp
aaa
sub
or
push
push
dec
aam
or
push
mov
iret
mov
and
add
and
xlat
daa
inc
jecxz
xchg
sbb
std
pop
or
xchg
(bad)
xor
fldcw
xor
mov
and
int
add
loop
or
xlat
test
and
add
scas
(bad)
neg
cmp
adc
inc
cmps
pop
lea
arpl
inc
cli
xlat
scas
in
lods
sub
push
repz
push
es
cmp
clc
cdq
push
xchg
push
sti
daa
sbb
mov
xchg
and
arpl
lahf
pusha
adc
and
push
xor
xor
pop
cmp
jb
clc
mov
out
lock
sbb
pop
sti
mov
jmp
int
dec
cmp
icebp
dec
sub
pop
mov
or
lods
adc
daa
out
(bad)
movs
xor
and
lea
into
out
jb
fisub
and
xor
mov
(bad)
cs
aam
mov
xor
in
imul
mov
(bad)
mov
sub
cmp
cmp
ins
mov
and
sub
je
xchg
bound
in
pop
xor
mov
mov
clc
mov
repnz
mov
imul
test
imul
xchg
cmp
and
mov
(bad)
arpl
jecxz
xchg
out
pop
mov
push
xchg
push
jle
mov
test
cdq
mov
pop
mov
xchg
push
sbb
aas
jp
xor
cmp
and
xchg
(bad)
pop
pop
xchg
cwde
xor
retf
(bad)
ins
push
xor
mov
je
fldcw
mov
addr16
test
test
add
xlat
shl
fstp
or
inc
iret
leave
in
or
mov
jns
mov
aam
std
loope
sub
xor
icebp
mov
jb
lods
(bad)
xor
daa
(bad)
mov
arpl
ret
enter
(bad)
repz
sbb
xchg
(bad)
repnz
daa
fcmovnb
sbb
retf
jae
cmp
rcl
and
jne
add
cmp
aad
push
adc
fisubr
jecxz
movs
pop
inc
das
(bad)
lahf
rep
jmp
jg
add
test
cs
xor
(bad)
loop
push
add
sbb
cld
mov
out
scas
xor
or
call
inc
out
add
push
rol
imul
pop
iret
jmp
test
mov
add
or
(bad)
push
jecxz
lods
enter
pop
mov
sbb
add
push
jl
ror
sub
test
and
fdiv
popf
lods
and
cwde
jecxz
jns
xchg
jo
sbb
test
cmc
loope
adc
or
xor
cmp
mov
ja
cs
jb
popa
inc
xor
xor
mov
jge
mov
adc
shl
or
cmps
loope
(bad)
and
scas
outs
mov
sbb
outs
mov
shl
and
push
or
mov
push
jmp
ficom
pop
cmp
push
sub
in
imul
popf
and
icebp
out
mov
rcl
lock
and
dec
call
fsubrp
jg
xchg
jle
sar
fs
aas
ficomp
adc
xor
push
out
xor
and
nop
movzx
push
push
aam
stos
in
push
xor
aas
psubw
xchg
(bad)
xor
scas
xor
jae
int3
jmp
outs
mov
pop
inc
repz
icebp
or
arpl
(bad)
mov
dec
sbb
inc
xor
sti
pop
inc
std
repz
rcl
sbb
push
sti
sbb
xchg
fcmovb
xor
(bad)
mov
and
ja
sbb
dec
(bad)
mul
push
lahf
sub
xchg
daa
fwait
adc
loopne
cmps
popa
xchg
aam
and
cli
and
scas
pop
stos
and
jge
dec
pop
mov
idiv
aad
inc
ficom
loop
cmps
cmp
je
daa
mov
mov
cmp
jae
sub
je
loopne
call
xchg
xchg
adc
dec
imul
or
push
xchg
xchg
jb
jp
or
rol
jno
jmp
jne
pop
shl
scas
es
cwde
pop
push
push
sar
jno
cmp
mov
sub
mov
and
loop
test
dec
rcr
xchg
xchg
jno
add
shl
mov
sub
test
sbb
int3
cmp
xlat
out
cmps
aas
adc
add
sbb
adc
jge
popf
or
or
pop
(bad)
xchg
xor
ss
inc
mov
test
and
outs
sti
xchg
jp
push
mov
mov
pusha
neg
add
popf
or
retf
inc
pop
mov
sbb
adc
xor
sub
cmps
jmp
cmp
cmp
push
enter
inc
daa
outs
inc
xchg
nop
inc
adc
jge
mov
faddp
mov
rcl
sub
inc
aam
aad
dec
xor
mov
adc
lods
mov
inc
hlt
jmp
rol
movs
fcmovb
xchg
cmp
jmp
fbld
icebp
push
and
jno
jp
icebp
loop
sahf
xchg
jmp
inc
jl
xor
mov
xor
sbb
jmp
pop
xlat
mov
nop
retf
push
out
fisttp
ja
sbb
dec
jne
and
shr
out
adc
push
aas
inc
dec
xchg
pop
pop
outs
mov
add
fs
out
out
sub
pop
lds
fchs
or
xor
sahf
xor
cwde
push
jae
cmp
jecxz
pop
pextrw
xor
push
dec
mov
je
out
jnp
in
pop
inc
mul
mov
cmp
shl
fcomi
fmulp
xor
outs
push
cmp
out
xchg
add
dec
out
mov
sbb
int3
stc
outs
rcl
jbe
xor
add
or
or
(bad)
je
or
gs
fstp
jns
mov
jg
or
jmp
lds
mov
add
imul
mov
aam
fnstsw
fwait
mov
inc
pop
sbb
dec
(bad)
les
popf
les
jmp
xchg
scas
xchg
mov
cdq
pop
push
shl
adc
add
dec
pop
enter
inc
sub
clc
pusha
(bad)
mov
(bad)
pop
adc
cmp
lahf
jb
lahf
xor
retf
ins
aas
dec
loopne
mov
aas
adc
in
std
cdq
lods
in
out
fld
cmp
sub
nop
(bad)
push
sbb
movs
dec
pop
fadd
pop
jno
lds
cwde
daa
mov
fsubr
cld
popa
push
inc
cmps
push
sub
cmp
xor
mov
mov
fst
inc
sbb
popf
fnstenv
lds
or
arpl
cmps
mov
dec
pushf
jg
pusha
imul
and
shr
mov
mov
pop
inc
xchg
aas
cwde
cmp
(bad)
pop
and
adc
call
xchg
adc
je
push
lahf
dec
mov
cmp
and
mov
lahf
push
push
daa
jecxz
aas
jns
mov
cmp
or
jmp
daa
mov
stos
add
push
mov
inc
aaa
std
(bad)
call
retf
jno
pop
jmp
jns
loop
xchg
jno
sbb
out
adc
mov
(bad)
sahf
push
jl
xor
cmp
mov
in
scas
add
sub
pop
and
pop
sub
stc
and
cmp
dec
lahf
and
test
shr
dec
ret
aam
mov
pop
jns
cwde
outs
ds
dec
fs
aaa
outs
int
(bad)
clc
mov
mov
ror
(bad)
pop
sar
addr16
rcl
jg
inc
push
sbb
inc
fs
jp
ins
cmps
push
sub
xor
cmp
jmp
sub
push
mov
inc
sbb
dec
pop
enter
mov
call
push
and
in
js
dec
adc
jmp
inc
add
push
ds
dec
idiv
dec
outs
cmp
pop
and
rol
adc
call
mov
call
pop
sbb
jnp
not
xchg
(bad)
dec
rcr
retf
adc
sbb
add
mov
mov
int3
fsubr
fnstcw
sbb
je
(bad)
mov
xchg
rol
or
in
gs
clc
inc
xchg
fcom
popf
cmp
and
cmps
jge
movs
scas
adc
pop
inc
mov
mov
ds
aad
push
scas
hlt
add
push
pop
(bad)
or
sbb
sbb
xchg
push
lahf
inc
pop
xlat
xor
cmp
out
jmp
mov
mov
mov
mov
sub
mov
mov
(bad)
adc
and
sub
retf
mov
fidivr
stos
sub
fist
adc
sub
adc
dec
clc
dec
mov
dec
std
fistp
test
pop
out
pushf
pop
stos
mov
in
xchg
mov
movs
and
mov
(bad)
ds
mov
jae
xchg
xor
(bad)
mov
mov
shr
gs
hlt
push
in
add
or
cmp
fst
jns
sub
movs
mov
dec
jcxz
mov
and
loopne
sub
hlt
adc
jo
xor
shl
mov
push
dec
jmp
adc
fist
mov
ja
inc
inc
cdq
add
adc
jns
retf
iret
push
(bad)
out
call
xchg
gs
(bad)
leave
test
and
fdivr
jl
add
stos
add
inc
xor
adc
and
shrd
shl
out
or
or
or
jno
or
cmp
ins
mov
ja
adc
sbb
in
test
inc
aad
repz
jno
add
or
rol
cmp
xor
jp
inc
iret
mov
loope
in
jns
mov
inc
dec
out
loopne
cmp
xor
retf
in
jno
jg
pop
lds
je
sbb
jge
xor
(bad)
and
fisttp
mov
mov
jge
(bad)
clc
sub
mov
push
fdivr
jae
out
mov
cmp
lea
jae
fimul
loopne
idiv
adc
mov
nop
cdq
xor
cmp
test
inc
and
jns
sub
cwde
push
jmp
xor
jae
retf
mov
lea
out
sub
fs
mov
in
cmp
mov
imul
cmps
push
arpl
jp
cmp
mov
imul
push
test
mov
enter
scas
sar
push
hlt
or
movs
push
push
push
les
mov
xchg
arpl
pop
sub
or
data16
mov
sub
repz
fwait
mov
jbe
xchg
stos
sti
or
cmp
fsubp
retf
sar
sub
leave
fldenv
fmul
push
test
jge
adc
fwait
mov
scas
aam
dec
push
movs
ret
xor
jns
add
inc
repnz
not
(bad)
push
inc
icebp
xor
rcl
cli
sahf
int3
adc
mov
mov
sub
lahf
shl
mov
dec
and
aaa
pop
fiadd
push
adc
movs
cmp
ret
lods
jmp
sahf
mov
sub
sub
enter
cmp
bound
and
(bad)
jnp
mov
xchg
xor
or
inc
cwde
into
mov
sbb
dec
mov
jne
aas
dec
mov
(bad)
dec
fbld
inc
push
jmp
stos
jno
mov
or
add
lods
add
faddp
mov
cdq
in
add
or
fwait
popa
and
add
movs
ja
rcr
adc
aaa
iret
(bad)
int3
pop
mov
jg
mov
mov
lea
adc
shl
mov
dec
ror
jns
mov
sbb
mov
bound
sub
movs
movs
mov
ins
cmps
cli
mov
(bad)
idiv
sbb
movs
xor
popa
icebp
jmp
call
xchg
inc
cmp
push
mov
adc
inc
mov
cmp
push
pop
mov
inc
or
push
mov
lahf
add
call
sahf
out
test
movs
jmp
lahf
inc
cdq
pop
inc
mov
pop
mov
mov
adc
mov
sbb
lahf
mov
xchg
jmp
icebp
add
mov
xchg
cmp
and
jg
in
sbb
and
xor
dec
dec
dec
imul
inc
inc
test
dec
sub
xchg
push
adc
sub
or
push
aad
ja
add
cmc
dec
in
mov
pop
mov
dec
inc
loope
ficomp
ficomp
stos
dec
mov
stos
pop
sti
mov
pushf
in
repnz
mov
aaa
jl
cmps
fmulp
lock
xchg
mov
and
stos
sub
inc
ss
popf
mov
retf
push
in
xor
or
or
fdivr
dec
adc
mov
scas
mov
sbb
ret
dec
xor
(bad)
arpl
push
rcr
xor
push
and
mov
sahf
jg
shl
clc
cmp
cmc
clc
mov
movs
test
ror
adc
in
dec
imul
pop
sub
test
enter
sbb
sar
sti
pop
dec
mov
stos
cmps
aas
xlat
scas
ds
std
mov
out
mov
and
mov
dec
adc
in
stos
push
cmp
or
lock
iret
es
mov
das
xor
jecxz
jge
call
jnp
sub
test
aaa
out
mov
lods
cdq
ret
sbb
stos
scas
inc
push
scas
in
sub
imul
enter
popa
int3
and
jmp
call
fld
(bad)
sbb
add
sbb
out
clc
inc
jmp
xchg
add
and
imul
mov
ja
and
fwait
mov
mov
inc
gs
jb
fidiv
cmp
sbb
retf
fild
icebp
inc
test
jo
js
push
inc
mov
xor
or
out
inc
fnstsw
cmp
add
cmp
lods
scas
int3
fdiv
in
retf
test
movs
lock
push
xor
call
icebp
stos
or
mov
or
lds
dec
(bad)
je
aas
mov
mov
sub
(bad)
(bad)
lods
addr16
loopne
movs
neg
pop
test
jp
mov
pop
push
scas
test
loopne
stos
pop
cmps
rcr
xchg
arpl
mov
in
pop
cmp
out
fdiv
add
(bad)
dec
xchg
ins
mov
and
jbe
rcl
push
jle
push
sub
pop
and
test
push
push
mov
out
lds
and
mov
sbb
ins
cmp
push
mov
dec
jae
sti
fbld
jg
or
mov
and
jmp
ffreep
mov
xor
fisubr
xchg
adc
loopne
and
mov
mov
xor
pop
jmp
in
imul
std
jne
stc
sub
(bad)
scas
fld
nop
(bad)
enter
adc
mov
push
pop
fild
adc
add
xor
gs
stc
or
stos
sub
adc
std
pop
xchg
sub
pop
push
repnz
lods
mov
xchg
clc
fdiv
mov
mov
imul
fs
sub
dec
popf
test
jae
scas
jecxz
cmps
fisttp
adc
sbb
(bad)
cli
sar
sub
sub
cmp
test
cmp
mov
adc
mov
jmp
rcl
mov
stc
neg
mov
push
in
stc
stc
add
std
xchg
cmp
rcr
jmp
sub
inc
pop
cld
mov
push
loop
cmps
push
jo
or
jne
in
mov
shr
iret
fwait
push
les
and
mov
push
mov
cmp
mov
dec
jo
mov
sahf
fldenv
xor
lods
cmp
repz
jns
into
nop
cli
fwait
add
in
lods
scas
push
or
mov
inc
jge
pusha
mov
mov
jge
mov
adc
and
push
add
rol
mov
in
(bad)
ret
sbb
dec
(bad)
(bad)
stc
cwde
sub
pop
fwait
sub
sbb
sbb
call
jg
mov
mov
sbb
adc
xor
pop
scas
inc
out
ret
adc
cmp
push
add
mov
mov
sti
fstp
int
inc
jge
loopne
call
outs
mov
adc
out
test
add
xchg
mov
mov
imul
push
mov
int3
ret
xchg
jg
cmp
inc
add
(bad)
xchg
inc
mov
sar
push
div
cmps
outs
(bad)
dec
sar
sub
fwait
outs
ins
movs
cmp
cmp
push
lods
mov
sbb
into
sub
movs
rcr
inc
ds
pop
push
out
loope
ds
add
or
mov
std
out
push
mov
ds
lahf
popa
push
das
nop
push
xor
mov
movs
lahf
(bad)
inc
nop
stos
mov
inc
xchg
retf
inc
mov
add
int
nop
cmp
pop
pusha
inc
addr16
mov
lods
adc
inc
push
inc
outs
lock
mov
xor
call
loope
mov
js
mov
jno
dec
jecxz
fistp
mov
(bad)
es
jecxz
into
mov
xor
fld
mov
mov
movs
inc
jge
xchg
adc
pusha
or
pushf
push
xor
test
call
test
cmp
enter
movs
dec
clc
pusha
fsub
push
(bad)
mov
out
jns
nop
(bad)
inc
mov
dec
and
adc
retf
adc
movsx
cmp
mov
fwait
xlat
scas
cmp
enter
xchg
(bad)
mov
inc
inc
sbb
out
clc
lds
pop
cmp
outs
push
pop
jg
sar
cmps
out
jl
mov
test
push
or
mov
or
sbb
fs
jl
xor
test
mov
lods
adc
push
rcr
stc
jae
lods
sub
imul
hlt
mov
or
mov
pop
mov
fist
add
cmps
mov
mov
sub
imul
jae
pop
into
pushf
sub
(bad)
jns
inc
loopne
pop
push
xchg
rcr
adc
ins
sbb
push
loope
add
psrlw
dec
cld
cmp
jge
fdivr
jbe
add
mov
mov
xchg
cmp
stos
mov
imul
movs
inc
and
pop
jmp
in
sub
sub
cmp
mov
jmp
div
push
mov
mov
cmps
dec
stc
loop
ins
fs
or
scas
leave
jp
or
test
cmp
jb
outs
out
div
push
mov
mov
dec
adc
inc
and
push
or
mov
sub
in
(bad)
out
sub
paddd
aas
pop
ret
jl
das
mov
push
loop
icebp
enter
into
lods
addr16
lahf
adc
pop
xor
(bad)
sub
push
xor
jge
test
mov
push
cld
mov
mov
sub
xchg
mov
dec
lds
inc
sbb
mov
sub
mov
mov
jmp
(bad)
or
or
fstp
rcr
or
mov
loopne
fwait
js
cmps
mov
pop
dec
or
jle
mov
fsubrp
shl
inc
iret
adc
sbb
pop
add
and
inc
or
mov
sar
push
inc
push
addr16
shr
(bad)
mov
inc
(bad)
sahf
add
xlat
jb
adc
add
jno
dec
fcmovnbe
lock
add
imul
push
js
jo
or
mov
bound
and
mov
call
mov
sbb
push
in
jg
ins
ja
shl
or
jmp
gs
jge
loop
pop
jne
mov
adc
push
push
rcr
and
nop
fbld
test
or
iret
cmp
jmp
push
and
inc
push
jecxz
or
pop
pop
loopne
sbb
add
pop
lea
jmp
pop
mov
les
adc
dec
sbb
icebp
inc
push
sub
mov
sar
adc
scas
fbld
rol
ja
sbb
scas
mov
std
or
xlat
jmp
pop
add
test
push
mov
retf
out
repz
nop
(bad)
cmp
arpl
aad
sbb
jecxz
push
xchg
jmp
scas
mov
icebp
ret
lea
cwde
cmc
pop
leave
lds
xchg
sbb
inc
pushf
mov
js
inc
in
sbb
and
dec
mov
outs
bnd
mov
and
pop
dec
pusha
inc
push
push
sub
push
sar
les
cwde
daa
les
sti
outs
cmp
cmp
in
push
adc
cmp
lods
push
jae
or
dec
cld
and
stos
sub
call
leave
(bad)
daa
scas
xor
neg
mov
inc
xor
dec
rol
adc
xchg
ror
mov
mov
xchg
add
leave
adc
sub
test
adc
(bad)
je
mov
into
inc
mov
jnp
fstp
xor
ja
(bad)
cld
mov
clc
es
pop
fcomp
sbb
and
push
stos
jae
sahf
add
or
cld
test
shl
fs
and
jno
es
push
aas
xor
sbb
scas
or
dec
dec
not
xchg
sub
pop
and
dec
jp
out
sub
inc
leave
shl
push
cdq
xchg
jl
push
push
icebp
pop
sbb
pop
popa
in
iret
shl
(bad)
(bad)
int3
mov
ret
(bad)
mov
mov
sahf
mov
jmp
das
sub
sbb
inc
push
mov
or
int
js
fucomp
mov
mov
push
out
inc
pushf
pop
inc
push
rcl
gs
scas
shl
inc
call
mov
xchg
pop
mov
pop
aam
pusha
sub
addr16
(bad)
and
push
cmc
jl
scas
and
add
or
or
imul
adc
fimul
xchg
int
and
pop
and
sbb
xor
ficom
scas
test
mov
xor
(bad)
push
jbe
sub
jl
or
stc
scas
add
and
daa
dec
lock
clc
fsub
repnz
push
ror
xlat
jge
es
xlat
repz
mov
and
mov
jl
cld
inc
mov
mov
pop
leave
cmps
xor
stos
mov
mov
sub
out
cmp
adc
add
sbb
lock
ins
in
cmp
mov
push
ss
mov
pop
mov
pusha
adc
mov
pop
xchg
jecxz
mov
ret
sbb
rol
pop
fsubr
js
jg
xlat
icebp
or
call
aaa
adc
inc
mov
addr16
in
in
aas
jle
and
xchg
loop
lods
mov
sbb
or
jmp
mov
pusha
mov
test
cmc
inc
repnz
sbb
pop
fst
loop
push
shl
popf
sbb
sbb
adc
xor
test
inc
push
sbb
jg
cmc
inc
dec
fisub
mov
mov
jg
push
repz
sbb
sub
dec
push
in
push
mov
mul
movs
pop
sbb
jns
mov
ja
leave
ret
or
mov
mov
ret
out
test
rol
(bad)
mov
pop
daa
stc
jecxz
adc
fcomp
jp
sbb
sbb
mov
xchg
mov
cwde
cdq
neg
xor
sbb
in
test
sbb
test
push
mov
mov
mov
shl
push
(bad)
sbb
ror
push
fwait
push
fwait
ja
pusha
adc
jg
pop
inc
mov
into
and
sub
mov
xor
test
lods
jl
inc
movs
and
adc
and
scas
mov
sti
cmp
sub
pop
xor
leave
mov
cmp
enter
stc
dec
aaa
int3
pop
pop
in
inc
jo
dec
push
add
pusha
out
cmps
fcom
push
xchg
retf
push
sub
add
iret
scas
dec
clc
ds
mov
add
repnz
xor
scas
sub
aas
fs
jecxz
push
repnz
shl
adc
loope
inc
mov
or
ficom
(bad)
sbb
rcl
xchg
push
bound
outs
fisttp
push
mov
xchg
sub
add
inc
fsub
push
mov
cmp
mov
mov
lahf
fwait
inc
call
or
jp
jg
pop
bound
or
ins
cmc
xchg
rcr
loope
cmp
push
ds
mov
jae
mov
ret
int
xchg
sahf
into
xor
popa
cmp
and
ret
jnp
push
push
or
mov
es
xor
gs
cmp
movs
outs
mov
mov
sub
int3
cdq
push
lock
out
add
in
(bad)
in
dec
xor
mov
pop
or
dec
lock
sub
out
jmp
xor
fldz
jno
jmp
xor
xor
cmp
mov
dec
mov
xchg
shl
jno
mov
and
outs
in
ret
std
mov
mov
mov
dec
sbb
inc
xor
je
test
enter
add
arpl
fs
test
sub
push
push
idiv
mov
inc
xchg
sbb
mov
sbb
pop
mov
push
retf
rcl
sbb
addr16
sub
and
dec
push
jb
xchg
or
popf
mov
pop
sti
sbb
adc
je
xor
sub
(bad)
and
test
xchg
imul
mov
mov
into
jmp
das
xchg
add
add
call
cdq
xchg
xchg
cmps
pusha
and
adc
arpl
pop
jle
dec
and
dec
fisttp
fstp
fucom
int3
sahf
movs
mov
adc
ja
sar
mov
and
sub
shl
jbe
retf
aam
cmp
jo
sbb
add
popa
daa
frstor
adc
add
push
add
pop
lods
ror
mov
inc
xchg
imul
sbb
jp
xor
push
mov
jmp
pop
cmc
add
cld
clc
idiv
sbb
pushf
cs
jmp
sbb
cvtdq2ps
ds
add
in
data16
(bad)
js
push
movs
std
bound
push
(bad)
cld
push
test
(bad)
ret
(bad)
adc
jno
icebp
into
push
arpl
mov
shr
push
inc
pop
mov
hlt
adc
popf
fdivp
sahf
(bad)
or
iret
dec
jge
loope
je
sub
push
mov
sbb
loopne
fsin
push
outs
in
xor
(bad)
or
(bad)
(bad)
cmps
(bad)
int
in
xor
out
aas
pop
xchg
outs
repnz
call
xchg
push
ror
xor
out
cmc
xchg
repnz
adc
sbb
movs
fidivr
sbb
adc
dec
lahf
retf
sbb
mov
inc
pop
mov
ret
sub
mov
lods
mov
add
leave
or
jbe
mov
mov
mov
xor
retf
inc
mov
pop
xor
mov
les
imul
fidivr
cwde
and
cmp
xchg
inc
out
test
add
sti
push
adc
sbb
ror
and
cmp
xor
sbb
jne
fldcw
adc
adc
dec
aas
mov
pop
xor
xchg
xchg
inc
adc
pop
in
out
mov
hlt
in
mov
pop
cdq
fistp
add
inc
sbb
mov
inc
jns
enter
xor
sub
pop
adc
ins
adc
iret
mov
inc
mov
je
fistp
ror
xor
push
test
xchg
inc
xchg
ins
jmp
mov
mov
jno
inc
mov
rcr
(bad)
adc
(bad)
jecxz
outs
(bad)
fdiv
fstp
xchg
jl
mov
fiadd
inc
in
stos
sbb
leave
data16
out
or
stos
imul
and
pop
movs
sub
xchg
pop
xchg
aad
adc
gs
and
fwait
push
mov
mov
sar
out
fiadd
mov
and
pop
repz
call
js
push
xchg
out
add
add
hlt
jb
fucom
or
mov
push
add
aad
pop
mov
outs
adc
test
dec
lahf
cmp
dec
loope
jo
rcl
cmp
xchg
jp
test
sbb
cld
cmp
(bad)
aas
mov
arpl
inc
mov
add
sub
mov
inc
sbb
imul
pusha
xor
aam
push
js
push
outs
mov
push
add
jecxz
(bad)
ins
pop
and
xchg
cli
cmps
mov
sti
add
loopne
stc
mov
ficom
test
adc
dec
dec
mov
pop
sahf
shl
cs
xor
fsubp
cld
sbb
neg
cmc
jb
jb
aas
stos
ins
cmp
fs
xchg
inc
pop
add
sub
test
mov
dec
imul
mov
out
outs
imul
push
mov
leave
std
movs
lahf
(bad)
out
fistp
sub
jecxz
sbb
mov
fldenv
(bad)
aad
or
es
mov
xchg
mov
inc
fiadd
sub
jmp
pop
jb
push
jno
dec
xor
sti
pop
pop
inc
inc
pop
add
adc
cmp
(bad)
cmp
xor
jp
stc
xor
retf
dec
aas
pop
xor
cmps
dec
into
inc
leave
cld
ja
cdq
nop
std
xor
fnstsw
ret
mov
xchg
in
push
jae
stos
je
adc
xchg
inc
jbe
dec
imul
lahf
jne
xchg
xchg
or
je
mov
pushf
cmps
jmp
mov
enter
mov
gs
sub
and
xchg
push
sahf
cmp
je
add
sub
add
sbb
mov
mov
and
jmp
push
jg
shl
scas
fidiv
fsubr
mov
sbb
cmc
call
and
clc
push
pop
xchg
call
inc
push
inc
lahf
lea
retf
xchg
mov
pushf
outs
push
retf
leave
add
push
jo
(bad)
mov
push
lea
cmp
sub
pop
dec
cmp
mov
jmp
pop
int
xor
mov
sub
fs
sub
mov
lds
stc
ja
push
dec
das
test
dec
and
popf
sub
imul
fwait
jl
ret
cmps
les
xchg
rcl
js
cmp
nop
mov
dec
dec
sbb
cmp
out
test
call
or
jmp
inc
setns
arpl
or
ins
dec
clc
mov
je
repz
int3
sbb
push
add
mov
push
pop
mov
aaa
push
adc
(bad)
adc
cmp
imul
fbstp
pcmpeqb
pop
xchg
fadd
fild
pop
lahf
mov
add
dec
push
mov
mov
call
and
nop
sbb
enter
popa
fild
retf
mov
mov
or
push
ds
push
mov
lods
retf
sahf
in
or
(bad)
mov
sub
lods
or
in
push
imul
sub
stc
retf
movs
in
mov
push
push
dec
pop
cmp
mov
mov
retf
cmps
fs
push
mov
mov
rol
dec
push
stc
adc
arpl
adc
pop
jnp
mov
pop
fdivrp
out
jnp
xlat
jne
dec
out
(bad)
f2xm1
and
push
cld
sbb
fwait
inc
imul
retf
push
push
or
mov
mov
cmp
pop
test
mov
por
aam
loopne
sbb
aad
call
jo
cmp
(bad)
std
or
xlat
js
xor
mov
push
xlat
adc
stc
lds
es
jmp
push
dec
lds
out
int
lahf
test
call
jae
xchg
(bad)
xchg
rol
inc
jmp
ins
xchg
mov
dec
dec
inc
adc
dec
pop
dec
test
(bad)
es
movs
jecxz
push
cmp
les
icebp
or
data16
pop
int
lods
out
movs
adc
ins
sbb
out
sub
scas
int
loopne
add
icebp
add
mov
mov
movs
jno
rol
push
loop
pop
jb
push
inc
pop
mov
sub
bound
test
pop
and
aaa
mov
xchg
pop
and
imul
xor
mov
adc
out
inc
push
sub
aam
pop
xchg
js
cmp
cmp
sbb
inc
daa
test
fild
in
inc
pop
mov
pop
shr
sti
adc
daa
movs
(bad)
stc
add
sbb
or
mov
scas
dec
out
mov
pusha
ja
push
mov
test
test
aam
mov
adc
in
inc
or
push
popw
mov
jg
pop
les
or
outs
pop
div
jl
mov
stos
or
push
iret
add
pop
adc
push
into
cmp
lock
(bad)
ficom
stos
push
ror
jnp
call
nop
push
xchg
fdivr
movs
es
push
pop
sub
setl
push
fisub
and
mov
icebp
xor
ins
jae
(bad)
fild
xor
cs
xchg
outs
push
jo
xchg
cdq
rcl
xchg
or
cmp
cmp
xchg
jb
pop
jb
pop
imul
push
sar
(bad)
cmp
pop
dec
fsubr
cmp
pushf
and
daa
cmp
call
jl
cmp
loope
lahf
stos
popf
div
pop
xchg
in
push
inc
mov
xor
dec
fwait
cmc
imul
call
rol
adc
adc
xlat
arpl
cmp
xchg
nop
cld
test
mov
mov
adc
stos
fld
adc
xor
pop
popa
add
cmp
push
sahf
js
fimul
(bad)
and
stos
and
cmps
gs
imul
rol
js
test
push
(bad)
hlt
or
iret
mov
push
jo
dec
pop
jge
jmp
ins
xlat
inc
inc
inc
sub
cmp
push
ins
xchg
enter
and
xchg
or
jno
add
jns
mov
fcmovnb
in
mul
fdivr
and
add
jge
call
mov
xchg
es
imul
add
push
fs
pop
test
repnz
in
(bad)
push
lock
dec
mov
mov
cmp
repz
sub
icebp
iret
jbe
cmp
aad
jns
(bad)
out
xchg
je
mov
cmp
xchg
test
and
nop
pop
cmc
sub
push
or
int3
(bad)
mov
push
shl
or
mov
es
scas
jae
xchg
inc
or
mov
dec
mov
loope
cli
dec
and
mov
pop
push
pop
fstp
pushf
not
jo
mov
scas
push
mov
push
sahf
pushf
rol
jecxz
jmp
aam
mov
outs
fadd
mov
pusha
lods
pushf
scas
aaa
icebp
sti
adc
ja
loopne
cli
les
sbb
fdiv
popa
(bad)
mov
cmp
iret
rcl
xchg
mov
sub
pusha
(bad)
(bad)
nop
out
test
cmp
mov
mov
add
mov
or
(bad)
fst
imul
dec
jb
arpl
dec
popf
cs
fdiv
jbe
mov
push
stos
mov
sbb
inc
cmp
jmp
xor
xor
shl
xchg
dec
(bad)
loopne
movs
push
sar
pop
xchg
cmp
lahf
adc
adc
fistp
and
bound
mov
cmc
add
jmp
and
lahf
cmp
mov
dec
push
mov
xor
xchg
xchg
cmps
xchg
xor
sbb
mov
imul
mov
inc
lods
mov
jmp
in
je
adc
(bad)
xlat
jmp
mov
cmp
in
xchg
mov
ret
jge
mov
sub
mov
dec
daa
mov
into
jbe
add
xchg
pop
dec
cmp
pop
xor
popa
cli
in
mov
popa
imul
cmp
es
dec
jmp
aas
cmc
push
or
rol
or
sub
adc
(bad)
mov
xchg
in
test
jns
push
pop
cdq
ins
sbb
out
push
jnp
add
clc
and
ins
idiv
jbe
xor
or
gs
outs
mov
cmps
loope
or
ss
xchg
call
dec
fwait
adc
pop
xor
(bad)
cmp
jp
ret
pop
and
(bad)
(bad)
push
or
or
add
dec
jge
leave
mov
cmp
mov
or
mov
sub
ins
comiss
jb
fmul
ins
or
mov
mov
adc
inc
and
inc
iret
mov
ficom
mov
je
mov
mov
push
enter
cmp
add
pop
add
out
cwde
pop
xchg
adc
jns
shl
in
mov
xor
mov
imul
xchg
jns
adc
xchg
adc
icebp
xchg
popa
mov
rcr
and
xchg
or
push
popf
jns
push
push
test
fistp
sbb
lods
rol
mov
mov
sbb
jae
xchg
or
(bad)
retf
or
pop
jmp
aad
xchg
ja
fs
inc
cmp
adc
inc
(bad)
sub
imul
inc
inc
pop
inc
adc
gs
jb
std
and
push
pop
pop
jnp
ins
cmps
retf
mov
pop
cmc
clc
sbb
sbb
out
imul
nop
push
aam
adc
leave
pop
pop
xchg
cmp
sbb
iret
aam
stos
dec
mov
ja
inc
cwde
inc
add
xchg
sub
bound
sub
call
test
or
call
test
or
mov
add
cdq
xor
rcl
pop
enter
mov
and
xchg
and
and
(bad)
xor
mov
sbb
mov
cmp
or
pop
enter
sbb
mov
push
sbb
mov
pop
aas
pop
mov
jp
enter
out
push
mov
rcl
adc
or
add
outs
push
mov
movs
lods
clc
in
retf
inc
jnp
sbb
sbb
or
mov
and
hlt
imul
mov
dec
inc
imul
rcr
mov
xchg
dec
fst
mov
mov
(bad)
popa
std
ins
stos
cmp
adc
dec
call
xor
out
push
add
ret
inc
cwde
inc
fwait
dec
xchg
mov
scas
nop
jl
xor
mov
dec
loope
sub
add
dec
aad
in
imul
in
popf
fs
or
mul
loope
dec
into
das
sub
mov
pop
es
popa
pop
inc
mov
lods
adc
and
rcr
out
jp
jno
fwait
pop
mov
iret
pop
mov
xchg
in
cdq
xor
leave
mov
iret
aas
outs
outs
adc
in
sbb
jl
sbb
rcr
call
push
pusha
je
mov
adc
lds
dec
sbb
and
out
sub
fisttp
or
inc
pusha
push
lods
push
mov
jge
jns
dec
int
xor
test
jle
popf
and
stc
and
xor
out
fimul
cmp
(bad)
jl
shl
jecxz
push
repnz
dec
cmp
or
xor
xor
push
add
cmps
mov
(bad)
ret
push
pop
pop
sbb
(bad)
xchg
fld
in
or
aaa
(bad)
jmp
cmc
and
push
xor
pop
scas
lea
outs
xor
in
mov
retf
loopne
imul
ror
popa
or
iretw
mov
cdq
mov
add
imul
jo
je
mov
and
je
mov
ja
mov
bound
jge
enter
(bad)
fwait
adc
aas
and
test
out
popa
sbb
mov
movs
xchg
in
mov
int
bound
in
or
mov
mov
mov
xchg
mov
pushf
adc
fsub
lock
xlat
jp
jle
xchg
sbb
add
push
mov
ins
cli
push
sbb
fiadd
cmp
push
fild
mov
addr16
fcom
xchg
add
pop
cli
inc
pop
jmp
jb
sar
and
sub
sub
xor
loop
mov
inc
(bad)
cli
mov
xchg
test
mov
push
test
mov
add
jae
push
jp
ins
test
push
enter
inc
in
sub
into
sub
ins
daa
mov
mov
test
push
das
setge
lds
xchg
mov
scas
push
adc
inc
adc
xchg
(bad)
out
movs
lea
inc
mov
xchg
imul
push
jge
aam
mov
inc
push
daa
mov
inc
lock
pop
inc
lods
mov
lods
mov
stos
mov
pusha
out
lods
retf
or
lods
or
stos
movs
outs
sbb
jb
cs
in
ins
xchg
icebp
ja
xchg
dec
shl
call
lods
lods
pop
push
std
pop
test
add
pop
retf
mov
sub
inc
push
pop
js
mov
add
add
scas
retf
mov
push
lock
push
mov
lahf
mov
stc
imul
xchg
ror
jg
add
cmc
(bad)
push
rcl
mov
movs
xlat
ficomp
adc
xchg
xor
in
stc
(bad)
cmp
daa
jae
and
or
sub
(bad)
clc
repnz
int
xlat
and
cli
inc
sbb
adc
pop
mov
scas
adc
popf
in
dec
cmp
sahf
and
cmps
mov
pop
push
sbb
xchg
out
push
inc
xchg
icebp
nop
mov
ds
add
push
mov
sub
(bad)
fstp
mov
call
fwait
(bad)
jae
fstp
lock
push
iret
or
mov
jno
inc
js
sub
cwde
adc
aas
dec
sahf
frstor
dec
(bad)
xchg
iret
sub
pop
std
shl
push
sbb
aas
push
mul
inc
xlat
mov
(bad)
enter
sub
out
push
bound
push
rol
push
std
lar
sbb
aam
out
jmp
aaa
xor
sub
xchg
and
cmp
mov
sar
out
bound
mov
mov
cmp
sub
mul
xor
cmp
add
imul
pushf
jl
sti
std
mov
mov
in
sbb
jl
jl
cs
adc
push
fmul
cmp
push
scas
arpl
push
mov
mov
cmc
jmp
add
cmp
out
add
inc
or
or
or
add
and
mov
xchg
pop
fneni(8087
mov
pop
imul
fisubr
cmp
fcmovbe
xor
mov
jbe
mov
adc
dec
out
cmp
scas
adc
cmps
lods
add
inc
dec
bound
mov
add
in
xchg
and
out
(bad)
cwde
shl
ficom
shl
cld
ret
adc
ins
mov
sub
call
mov
cmp
xor
sbb
popf
fmul
retf
mov
and
pushf
(bad)
movs
mov
mov
inc
xchg
test
das
pop
or
jecxz
jbe
push
pop
hlt
lock
adc
jecxz
sbb
cmps
jbe
or
or
lahf
pop
arpl
sub
push
int3
mov
xchg
cmp
cmps
ss
mov
loop
fisttp
mov
mov
jmp
popa
jmp
int3
pop
and
dec
xchg
jns
jmp
xor
xlat
aam
adc
rol
mov
mov
cmps
sub
data16
in
xor
mov
pushf
ror
jp
ins
add
jl
sub
and
lds
dec
std
mov
adc
dec
iret
and
mov
jge
or
xchg
int3
pop
mov
jmp
inc
test
(bad)
ror
js
add
addr16
lods
mov
mov
cmp
mov
sbb
int
pop
inc
cdq
mov
sbb
mov
in
sbb
and
les
or
sahf
lods
xchg
nop
mov
mov
ret
mov
pop
loop
jp
or
mov
or
jnp
iret
mov
rcr
das
and
stos
push
pop
loope
sub
xor
or
pop
mov
sahf
jp
in
rcr
test
dec
adc
mov
pop
push
or
add
aad
or
test
stos
push
fs
cmp
xlat
repnz
lea
dec
out
hlt
inc
in
clc
lock
loop
push
test
mov
jl
movs
xor
cmp
mov
dec
out
fcom
pop
test
add
in
cmp
or
cmp
dec
outs
fstp
out
mov
cwde
jmp
outs
call
pop
popa
or
and
(bad)
lock
mov
sar
sbb
add
xor
imul
xchg
call
push
fimul
adc
cmp
cli
or
into
xchg
jle
hlt
icebp
lock
mov
mov
int3
cs
mov
xchg
sbb
mov
pushf
int
mov
mov
sbb
lea
xchg
setl
push
outs
jbe
into
pop
(bad)
and
push
sar
shl
wrmsr
jae
sbb
mul
or
cs
jmp
jae
mov
ss
sbb
ins
fsubr
and
enter
into
retf
bound
repnz
frstor
jecxz
setnp
xchg
out
jo
mov
in
cmp
int
fbld
aam
and
mov
push
cmp
std
sar
aam
push
movs
sub
arpl
rcr
in
in
xchg
sbb
imul
fdivrp
mov
inc
test
fistp
enter
cmp
shl
sar
daa
cmp
sub
into
cmp
sbb
divps
or
jge
jg
das
cmp
hlt
dec
retf
jmp
jecxz
push
je
add
scas
cs
push
jmp
add
pop
imul
aas
fisttp
cmp
jo
retf
rcl
in
icebp
out
sahf
push
shl
adc
xchg
push
loope
pushf
sbb
aas
outs
jo
fistp
into
retf
cmc
inc
adc
ins
(bad)
pusha
xchg
stos
sub
mov
cmp
sbb
dec
pop
add
lock
loop
lods
cmp
call
imul
scas
adc
sub
cmp
or
lods
xchg
call
pop
clc
or
sbb
dec
retf
adc
sar
jo
shr
push
adc
jge
xor
jo
dec
push
es
pushf
sub
stos
mov
inc
(bad)
cmps
out
ficomp
cmp
push
inc
or
sub
test
xchg
or
int3
jp
gs
cwde
add
jno
ins
xlat
and
mov
popa
fmul
sub
xlat
data16
jo
dec
mov
xchg
(bad)
(bad)
jns
mov
mov
ds
stos
add
push
std
out
mov
jecxz
pushf
jo
push
out
push
cmp
dec
or
sub
je
jecxz
cmp
pop
sahf
mov
pushf
(bad)
scas
jnp
pop
das
ficom
movs
leave
cmps
jae
stos
inc
fisttp
idiv
mov
xor
dec
jecxz
cmp
outs
cld
adc
repnz
cmp
(bad)
sbb
out
sub
jae
mov
out
xchg
stc
sub
jg
mov
sub
ds
stos
aad
inc
dec
cdq
cld
outs
pushf
ret
dec
rcl
movs
and
lds
cdq
jmp
lea
jg
mov
inc
lea
xchg
add
jns
mov
stos
loop
push
xor
mov
mov
cdq
punpcklwd
loopne
adc
sahf
daa
dec
in
lods
mov
inc
out
cmps
ins
sub
mov
psraw
jmp
imul
out
aad
push
cmp
push
int3
movs
mov
dec
add
aad
pop
jns
stc
loopne
out
in
adc
out
rcr
push
es
sub
adc
mov
dec
and
xchg
cs
mov
mov
(bad)
push
adc
in
sti
enter
gs
adc
jbe
push
or
mov
add
mov
aam
cs
dec
sahf
xor
nop
adc
(bad)
pusha
ins
xchg
(bad)
cld
jle
pop
pop
mov
out
fwait
mov
enter
ja
sbb
jmp
test
push
dec
pop
pop
retf
js
mov
je
sub
mov
mov
in
mov
(bad)
clc
jnp
jl
mov
sub
sahf
sub
cld
cmp
dec
jnp
cmp
xor
jnp
mov
jmp
mov
call
jae
mov
jmp
clc
test
lahf
call
push
add
sbb
xchg
inc
pop
imul
mul
jge
inc
(bad)
cmp
xor
pop
cmp
popf
sub
add
(bad)
test
test
push
int3
or
popf
adc
pop
push
push
retf
pop
cmp
mov
mov
mov
pop
or
jbe
pop
sub
ds
mov
push
push
les
pushf
jnp
sub
xlat
mov
mov
aaa
data16
enter
mov
ins
dec
sbb
cmp
leave
push
mov
dec
pop
ins
add
mov
jp
scas
gs
pop
xchg
scas
push
cmp
ins
mov
es
ds
push
mov
jl
or
fimul
mov
pop
(bad)
(bad)
fmul
adc
daa
aas
cmc
xchg
dec
mov
stc
push
stos
or
xor
in
sub
sub
retf
push
inc
cmc
nop
dec
mov
js
dec
out
data16
stos
les
adc
pop
hlt
loope
cmp
dec
cmp
lods
or
xor
xchg
int3
int3
dec
jno
sbb
in
test
cmps
out
mov
frstor
cmp
jb
stos
pusha
lock
(bad)
(bad)
scas
iret
scas
dec
pusha
adc
(bad)
and
mov
bound
mov
push
lahf
and
push
push
pop
add
setg
mov
repnz
test
(bad)
call
mov
retf
ds
adc
mov
push
pop
aas
inc
or
or
sti
inc
repz
jo
icebp
outs
push
enter
call
xor
push
rcr
sub
cmp
jmp
ins
mov
xchg
mov
hlt
pop
jecxz
and
add
mov
test
pop
mov
pop
push
push
(bad)
jns
imul
into
imul
into
fnstcw
rcr
sbb
(bad)
(bad)
imul
(bad)
in
cs
test
fild
mov
dec
or
loop
ds
push
dec
jnp
mov
jge
stos
jo
and
cmp
xor
call
jne
(bad)
cmp
fimul
mov
mov
int3
dec
jne
and
cmp
cmp
dec
xchg
add
push
bound
xchg
xchg
jg
mov
or
xchg
mov
push
imul
mov
adc
sahf
cmp
shr
(bad)
xor
push
add
shl
call
jmp
dec
jl
cs
push
scas
mov
mov
pop
sahf
push
dec
lock
xchg
shr
imul
in
push
jmp
mov
out
rcr
pop
xor
not
adc
xchg
sbb
inc
scas
dec
not
xor
push
sbb
outs
inc
or
sub
stos
popf
jp
sub
mov
lock
sbb
adc
div
bound
jb
sub
mov
loop
mov
jns
out
mov
add
ja
data16
xchg
xchg
xor
iret
sbb
xchg
mov
push
sbb
ror
jne
adc
cmp
sbb
lea
nop
ds
pusha
pop
xor
cwde
mov
hlt
scas
loop
jecxz
outs
mov
es
push
xor
(bad)
push
jl
jno
aad
jge
(bad)
jno
les
scas
lods
aaa
ror
push
mov
ds
in
pop
cld
call
call
pop
dec
or
outs
mov
jbe
or
inc
pop
bound
pop
jns
xchg
shl
cmp
cwde
cmc
sbb
adc
sub
(bad)
rol
and
pop
addr16
cmps
xor
icebp
push
mov
cwde
dec
dec
xor
pushf
retf
or
imul
stc
lds
and
inc
add
add
lds
add
dec
imul
outs
and
mov
aam
mov
fnsave
movs
jmp
cld
mov
outs
and
repz
cmps
mov
push
movs
(bad)
fadd
push
mov
out
xchg
lock
mov
icebp
dec
das
sti
pop
inc
add
lods
mov
jecxz
ret
call
mov
je
rcl
in
fiadd
pushf
fldenv
(bad)
mov
and
cmp
ret
jge
mov
xchg
xchg
popa
inc
xchg
fwait
pop
add
nop
lods
dec
ss
cmp
pusha
out
push
pop
enter
cmp
pop
hlt
mov
das
jne
add
xchg
(bad)
aaa
(bad)
add
cmp
add
sahf
fidivr
mov
push
add
(bad)
dec
jle
test
xchg
jmp
inc
loop
loopne
or
push
and
imul
add
leave
mov
ins
and
xchg
mov
cli
and
cmp
fucomp
jae
lock
add
sbb
cs
leave
cmc
stos
push
pop
inc
lahf
rcr
push
rcl
test
mov
inc
or
test
rcr
test
mov
(bad)
sub
loop
fimul
sbb
mov
adc
jmp
repz
(bad)
(bad)
mov
xor
mov
jmp
cld
adc
cmp
sbb
cwde
fld
push
mov
icebp
mov
adc
and
fadd
clc
inc
popa
xor
mov
mov
xchg
mov
es
call
enter
push
and
aas
retf
pushf
retf
loope
xor
(bad)
or
jne
pop
add
aam
push
sbb
push
push
into
mov
test
push
cmp
cmp
adc
out
retf
fdivp
(bad)
pop
and
not
push
mov
addr16
add
mov
sub
bound
scas
adc
scas
ss
sbb
(bad)
xchg
sbb
sahf
hlt
jg
sbb
repz
and
pop
int
test
fimul
into
push
mov
shl
ror
xlat
dec
stos
jae
mov
mov
(bad)
(bad)
mov
pop
lock
cs
js
mov
cmp
jae
cmp
mov
std
out
test
sti
pushw
jno
test
data16
cdq
xor
and
movs
jne
push
(bad)
in
retf
xchg
mov
push
adc
cdq
retf
xchg
loope
aad
cmp
int3
shr
mov
push
adc
je
leave
and
xchg
popf
test
add
sub
push
xor
push
mov
pop
(bad)
in
jo
push
pushf
sub
(bad)
ret
in
in
mov
call
sbb
or
xor
test
pop
xrelease
dec
or
or
jns
or
ror
adc
pop
lahf
xchg
mov
out
adc
sub
inc
adc
mov
dec
arpl
adc
je
jge
dec
xchg
pop
sub
dec
xor
shr
pushf
out
push
push
cvtdq2pd
mov
dec
xor
shl
dec
or
jl
icebp
(bad)
aas
imul
nop
es
mov
jmp
push
pop
fisub
jae
push
or
into
mov
mov
pusha
inc
mov
or
ins
add
fnstsw
mov
xor
sahf
sbb
lds
repz
cs
in
mov
adc
jecxz
cmp
add
call
adc
aas
shl
vaddsd
shl
les
psubd
jge
mov
iret
cld
dec
jmp
imul
out
je
imul
sub
xor
lock
movs
mov
sbb
mov
adc
push
aaa
fdivr
out
sbb
jl
pushaw
adc
das
and
pushf
dec
cs
call
rcl
cli
sub
sbb
push
rep
and
in
pop
(bad)
nop
iret
dec
lods
xchg
add
stc
ja
jne
cld
push
mov
xchg
jo
and
shl
adc
add
int3
je
adc
fld
test
(bad)
pop
inc
or
cmc
xchg
sbb
mov
jnp
jecxz
ret
push
call
mov
mov
idiv
(bad)
sub
pusha
pop
and
jo
jg
retf
add
and
jg
std
fisubr
add
mov
jmp
and
sub
shl
inc
stc
pop
adc
stos
dec
sub
jae
pop
repnz
xchg
mov
cmps
push
das
xor
mov
pushf
ja
outs
xchg
or
lahf
dec
pop
mov
or
or
pop
cld
or
or
xor
mov
stc
mov
pop
mov
(bad)
mov
xchg
mov
lock
movs
and
inc
(bad)
lea
mov
mov
mov
xchg
dec
push
cmp
jne
add
push
adc
xor
icebp
hlt
push
es
aam
lds
mov
push
les
in
sub
sub
iret
pop
test
les
icebp
xchg
jmp
cmps
xor
inc
loope
ffreep
jl
dec
fsub
retf
pop
cmps
jns
and
jo
mov
sbb
lods
jo
mov
pop
mov
shl
push
add
cdq
popa
outs
pop
push
add
and
sub
mov
bnd
aad
dec
hlt
or
add
sbb
dec
es
shl
enter
repnz
movs
sbb
xlat
ss
mov
inc
lds
sub
fs
jnp
sub
daa
lahf
pop
stos
cmp
ficom
xchg
cmc
sub
es
sub
jmp
mov
add
push
lea
clc
es
fisttp
mov
(bad)
and
les
push
xchg
inc
je
and
jecxz
dec
dec
jge
out
mov
sbb
cld
push
les
pop
jbe
or
xor
stos
push
repz
xchg
stos
pop
add
out
iret
xor
sbb
inc
or
cmp
push
add
xor
shl
fwait
lods
outs
inc
sub
test
loopne
mov
mov
outs
pop
(bad)
cld
mov
add
pusha
bound
or
push
inc
add
cmp
pushf
mov
inc
mov
add
xor
and
mov
and
mov
push
jecxz
pop
jg
cli
sbb
jmp
dec
dec
loope
aad
xor
push
fwait
adc
ins
sbb
xor
push
loop
adc
push
fcomp
sub
xchg
sti
mov
fs
push
sbb
daa
add
mov
movs
add
icebp
fs
and
mov
pop
int
jge
adc
adc
mov
test
out
clc
add
sub
pop
mov
xlat
out
add
les
mov
adc
push
mov
fild
mov
retf
pop
cmps
mov
pop
jns
push
je
inc
lods
sbb
rcr
mov
or
xchg
xor
hlt
jecxz
std
dec
fdivr
xchg
cmp
mov
rcr
mov
xchg
mov
lahf
and
push
mov
mov
out
scas
ret
xor
mov
adc
test
cli
repz
ds
iret
mov
lods
scas
cmc
inc
xor
je
lds
mov
jns
sti
sbb
jge
fsub
movs
ins
mov
or
lods
adc
std
leave
mov
and
pop
stos
cmps
mov
adc
(bad)
enter
xlat
into
fld
fmul
mov
xchg
repz
ss
xchg
loopne
outs
in
dec
call
pop
mov
daa
push
iret
push
ss
xor
test
ins
dec
cmc
sub
jmp
scas
retf
push
jb
sti
cmp
pop
push
(bad)
cli
mov
sbb
push
sub
jge
jno
pop
adc
jg
stos
pop
mov
push
mov
jo
enter
inc
lahf
(bad)
sbb
push
xor
repz
or
jae
xchg
out
leave
dec
ja
inc
jl
inc
adc
and
and
xchg
mul
cmp
stc
test
out
stos
cwde
or
shl
mov
or
shl
sub
je
mov
mov
hlt
xchg
pop
fisubr
in
xchg
stos
sbb
rcr
js
mov
or
test
btr
pop
dec
inc
or
sub
sbb
pop
loope
iret
imul
xchg
push
add
dec
(bad)
jge
adc
fimul
into
or
lds
cmps
mov
in
jl
sub
out
ret
aaa
std
push
dec
and
lock
cwde
cmp
adc
scas
pop
ds
(bad)
jg
add
retf
adc
add
pusha
test
xlat
stos
add
shr
push
cmp
scas
in
pop
outs
(bad)
neg
dec
je
cmps
jo
sub
jecxz
cli
add
imul
test
test
fisubr
stos
clc
stc
arpl
sbb
les
xchg
jg
xchg
ret
mov
movs
sbb
int3
repz
pop
or
push
cmp
jmp
and
jmp
mov
dec
push
jle
inc
sbb
repnz
adc
pop
ffreep
icebp
arpl
mov
idiv
pop
jno
jmp
pop
outs
xchg
xor
jle
nop
std
cmps
loope
cwde
add
push
mov
out
dec
cwde
and
pusha
fs
iret
xor
push
call
and
adc
sub
repnz
es
add
nop
adc
popa
sbb
popf
mov
dec
mov
jo
xchg
jmp
inc
push
clc
and
mov
and
repz
data16
fldenv
stos
mov
mov
cmp
or
push
dec
mov
jnp
bound
xchg
xchg
push
comiss
cmps
xchg
push
jno
push
pop
cld
inc
pop
pop
mov
mov
fild
rcr
sbb
outs
dec
and
ret
cmp
ss
scas
jmp
push
sub
dec
test
sti
dec
fst
cmps
ins
mov
imul
jmp
mov
ins
lods
mov
lock
test
pop
gs
mov
mov
dec
and
sbb
sbb
add
dec
cmps
push
aad
ret
inc
adc
call
jns
cmp
and
pop
jb
cwde
xlat
sbb
lods
dec
in
jbe
inc
fsubr
pop
fist
or
test
movs
sub
je
add
in
pop
out
sub
add
mov
fistp
mov
cmps
mov
and
or
loop
js
dec
popa
iret
dec
neg
pop
cli
pop
ss
mov
pop
movs
mov
pop
les
stos
cmp
lods
push
in
jg
cmp
add
lods
add
into
fwait
push
lds
mov
jmp
or
in
add
mov
mov
jmp
fwait
enter
mov
or
sub
mov
ret
and
arpl
nop
push
mov
push
jmp
jmp
mov
xchg
loop
inc
arpl
mov
pop
in
mov
xchg
jnp
adc
lods
stos
dec
add
scas
xor
cmp
mov
sbb
xchg
les
mov
push
jge
aas
jb
cld
mov
and
pop
xchg
jge
gs
sub
pop
pop
mov
rol
sbb
rcl
push
mov
push
ins
nop
iret
lea
out
(bad)
push
cmp
dec
or
and
adc
jmp
sbb
repz
mov
add
jmp
in
add
pop
mov
cmc
xor
mov
mov
push
lock
out
sub
inc
int3
mov
cmps
xor
adc
ja
stc
dec
(bad)
xchg
jmp
das
pop
rol
popa
dec
into
imul
int3
sbb
(bad)
xor
jns
outs
push
or
dec
mov
cmp
daa
or
mov
jnp
inc
sbb
cmp
pop
mov
sbb
add
add
hlt
jnp
jg
sbb
push
cmp
adc
out
scas
lock
out
clc
cmp
push
or
(bad)
shl
das
push
cdq
mov
fwait
int
movs
aam
mov
imul
cdq
and
mov
mov
aad
iret
mov
(bad)
mov
loope
and
dec
ret
loopne
and
jge
mov
lds
cs
lods
ins
sbb
out
out
pop
in
sahf
pop
pop
call
mov
mul
sub
lock
mov
mov
pop
inc
mov
test
xchg
ds
imul
in
loop
and
ret
xor
pop
cmp
data16
add
aad
leave
cmp
icebp
jmp
popa
jns
push
jbe
es
or
dec
ror
pushf
xor
int
inc
leave
cwde
xchg
pop
gs
cmp
les
(bad)
in
dec
mov
xchg
and
or
cmps
or
add
rol
jae
jecxz
pop
jno
out
pop
cli
stos
or
jns
lods
(bad)
(bad)
cmp
mov
xchg
into
(bad)
dec
js
xchg
iret
sar
add
pop
xchg
adc
mov
sbb
mov
push
jle
jae
jne
shr
and
bound
jge
retf
dec
add
inc
div
sahf
cmp
mov
test
aas
jo
mov
lea
(bad)
out
mov
cmp
cli
cmp
(bad)
mov
cmp
cmps
add
dec
pusha
movs
and
jnp
mov
jno
test
idiv
inc
in
imul
retf
or
inc
into
mov
inc
movs
mov
pop
loopne
xor
ss
adc
and
mov
int3
xor
dec
and
xchg
popf
sub
je
sbb
jno
scas
shl
sti
adc
cmp
je
iret
(bad)
cmp
je
sbb
mov
xchg
(bad)
(bad)
mov
jl
adc
adc
pop
cmp
movs
xchg
jg
sub
xchg
pop
ficom
nop
xchg
sub
sbb
(bad)
mov
pusha
dec
sub
pushf
jmp
es
fs
xchg
adc
outs
cmp
xor
outs
or
push
mov
jnp
adc
fbld
(bad)
pusha
xor
outs
pop
les
pushf
stos
sub
lods
mov
inc
dec
hlt
mov
mov
xchg
dec
push
jae
(bad)
das
fbld
sbb
sqrtps
xchg
cmp
lahf
popf
xor
jl
inc
lods
add
jo
jmp
ficomp
jno
ja
ins
add
adc
scas
loopne
bound
push
test
sbb
(bad)
jns
dec
sahf
xor
sti
imul
lea
pushf
repz
dec
test
(bad)
mov
or
outs
xor
(bad)
fdivrp
xchg
sub
cmp
in
xchg
xchg
jg
mov
mov
mov
adc
arpl
fild
jae
(bad)
fcmovnbe
and
repz
mov
pop
and
iret
in
(bad)
gs
sar
sub
outs
cmps
add
push
aam
sbb
outs
and
js
mov
push
loope
aaa
push
mov
pop
add
std
mov
mov
mov
pushw
in
std
or
jmp
jp
sar
(bad)
ds
bound
xchg
imul
adc
jle
sbb
ret
adc
xor
and
cli
adc
inc
rcl
fwait
test
push
push
and
stos
aad
sbb
icebp
loope
dec
enter
ins
inc
pop
in
pop
(bad)
dec
dec
push
loope
test
jbe
jecxz
or
clc
xchg
je
popa
lods
cdq
adc
jns
jmp
movs
and
mov
in
data16
sti
push
or
adc
adc
xor
out
or
push
cmc
mov
sar
dec
dec
aaa
jmp
dec
mov
into
add
in
out
test
inc
pop
xchg
scas
adc
mov
and
aas
or
stos
dec
loope
mov
cmp
mov
inc
imul
pop
mov
sub
mov
sub
lods
jae
inc
(bad)
stos
inc
aaa
(bad)
and
mov
(bad)
xlat
mul
clc
out
jecxz
jge
cmp
pop
arpl
aad
ins
movs
ret
mov
lock
sbb
dec
ret
or
shl
and
cmp
jns
cli
push
xchg
jno
jno
cmp
fsincos
sti
xchg
push
mov
inc
imul
aaa
xchg
dec
movs
pop
lds
ret
cmp
cli
test
dec
mov
inc
sub
mov
add
arpl
pop
fcomp
fdivr
or
iret
push
nop
xchg
gs
inc
(bad)
ins
xchg
pushf
in
aaa
inc
popf
xchg
ret
(bad)
ds
xor
call
dec
xchg
adc
in
fadd
fs
xchg
add
js
(bad)
lock
xor
imul
mov
adc
int
pusha
fsub
cmps
push
or
dec
push
(bad)
cli
cmp
out
pop
(bad)
inc
add
sbb
xor
mov
jno
push
cs
loopne
es
mov
iret
cmps
add
outs
push
(bad)
into
mov
cmp
mov
dec
ror
lock
(bad)
jecxz
(bad)
mov
adc
in
jns
scas
mov
sbb
xchg
and
outs
pop
aad
jl
add
jae
or
or
push
gs
dec
inc
in
loop
xor
(bad)
mov
add
push
leave
mov
mov
test
pop
cmp
mov
mov
add
(bad)
std
push
jge
adc
cwde
or
sub
mov
push
xor
out
pop
jl
xor
inc
cwde
das
sbb
xchg
mov
sahf
jmp
pop
lods
scas
movs
inc
cmp
lahf
sbb
jns
es
rol
js
sub
pop
test
movs
jns
bound
movs
mov
xchg
add
and
cmp
imul
ja
mov
iret
push
retf
cmc
jmp
adc
xor
(bad)
sbb
ja
cmp
jbe
lahf
rcr
lods
fimul
push
fild
mov
stos
int
outs
int3
aaa
jo
(bad)
ret
xchg
lods
ffree
cmp
call
xor
xchg
push
pop
movs
stos
add
repz
adc
sbb
sbb
lods
dec
stos
mov
mov
sub
icebp
mov
(bad)
iret
iret
jne
mov
jns
loope
mov
or
sbb
outs
out
ficom
daa
jnp
push
test
jecxz
push
or
out
sub
daa
cld
rcr
test
inc
fstp
mov
or
jbe
jb
mov
cwde
cli
jbe
ins
sub
mov
pop
and
xchg
ja
mov
pop
shl
sbb
outs
pop
outs
xchg
int
dec
lds
and
adc
cwde
pop
int
sbb
adc
xor
inc
sbb
sub
mov
mov
mov
and
call
and
imul
sub
stc
loopne
ja
loop
bound
push
test
setle
push
fsubr
dec
iret
cmps
xchg
pop
mov
mov
push
ret
pop
scas
(bad)
jne
lahf
call
clc
sub
call
outs
movs
or
push
inc
push
dec
ret
fcmovnbe
add
cmp
xchg
jbe
pop
iret
mov
mov
in
mov
push
in
cmps
sub
mov
sbb
mov
add
(bad)
aaa
jmp
sbb
mov
xchg
scas
retf
stos
jge
fistp
push
ffree
pop
mov
jae
and
cmp
iret
(bad)
sub
leave
and
(bad)
inc
inc
cli
(bad)
jns
push
in
clc
in
jmp
sbb
mov
cmp
test
loop
ret
test
retf
mov
es
ret
movs
inc
or
xchg
imul
cwde
leave
mov
test
inc
mov
sbb
iret
(bad)
mov
js
add
imul
rol
push
or
push
jecxz
pop
hlt
dec
aaa
les
ja
out
mov
movs
xchg
or
imul
fwait
(bad)
jbe
gs
shl
out
pop
mov
push
mov
jbe
inc
mov
mov
cmp
dec
repz
inc
sub
jl
mov
and
aaa
sub
push
stc
push
cmps
js
mov
popf
(bad)
lods
sub
sbb
ss
call
out
push
fdiv
mov
adc
mov
mov
cmp
jecxz
dec
clc
mov
repz
stos
rol
in
xchg
adc
cmp
mov
adc
mov
addr16
fstp
dec
sti
movs
mov
pop
les
test
cmp
aam
and
daa
adc
jg
sub
sub
pop
jl
cmp
mov
test
xchg
aad
jmp
sub
dec
into
adc
xchg
int
fmul
mov
mov
sahf
nop
jecxz
(bad)
arpl
or
inc
sti
jmp
mov
std
lea
loop
mov
cmp
je
jge
mov
imul
mov
push
jo
cmps
mov
pop
bound
inc
test
xchg
loop
(bad)
iret
outs
inc
add
xchg
sbb
lods
adc
mov
pop
aaa
test
dec
or
and
shl
mov
sub
xchg
shr
mov
mov
scas
pop
test
retf
stc
lods
cmp
cmp
and
cmp
xor
fmulp
push
(bad)
dec
or
push
add
nop
test
mov
sbb
aas
mov
sar
lahf
mov
cwde
sbb
shr
imul
out
dec
mov
jg
mov
stos
jae
shr
cmp
mov
jne
mov
push
mov
push
lods
xchg
xor
xlat
call
xchg
ins
cmp
jmp
jae
or
lea
xchg
aam
lods
dec
dec
mov
pop
xchg
xor
test
mov
int3
cmp
sub
loope
cmps
mov
or
shl
mov
in
add
or
stos
arpl
and
sbb
sar
xchg
jmp
cmc
cs
mov
shl
jge
pop
push
and
push
pop
or
jne
dec
iret
movs
and
sbb
push
xchg
lods
xor
popa
cwde
cwde
or
stos
push
mov
cmps
sbb
test
inc
xchg
nop
outs
lds
lahf
push
pop
iret
inc
int
pop
or
inc
push
dec
test
jge
pop
dec
idiv
ror
std
arpl
inc
cmp
pusha
jns
sbb
adc
sbb
loop
push
addr16
imul
xchg
add
mov
(bad)
fdivr
scas
repz
(bad)
fdivr
push
daa
push
pop
dec
push
scas
sub
xchg
lahf
bnd
push
fist
cwde
mul
aas
jne
pop
dec
xor
and
or
ds
je
inc
icebp
dec
cwde
inc
in
inc
enter
add
outs
cdq
adc
cld
adc
mov
cmp
jmp
idiv
jp
jmp
mov
scas
movs
add
iret
sti
gs
loop
push
inc
adc
xchg
outs
rol
neg
xchg
pop
out
bound
inc
retf
xchg
and
dec
mov
sbb
jnp
out
jbe
cmp
inc
mov
push
fsubr
movs
stos
shl
sbb
lds
or
sub
and
bound
lahf
sti
fild
jb
dec
jbe
mov
(bad)
jbe
mov
data16
popa
ss
jae
push
repz
jge
mov
push
jb
push
repnz
xor
lock
std
sub
push
sbb
popf
aad
fmulp
inc
(bad)
adc
jmp
pop
lock
movs
xchg
fidivr
sahf
js
fsubp
cmp
xor
mov
les
sbb
arpl
add
sub
mov
push
jmp
pop
mov
mov
push
jle
dec
mov
jecxz
pop
into
loopne
data16
cmps
rcl
jae
scas
cld
call
outs
push
xchg
pop
or
or
sbb
add
mov
push
pop
xchg
fcomp
inc
push
pop
push
outs
shl
jge
into
mov
sub
or
mov
mov
cmc
sbb
scas
cmc
xor
arpl
mov
test
lods
sub
xchg
inc
inc
lds
xlat
enter
mov
pop
mov
scas
inc
inc
stc
lock
test
adc
outs
add
loope
fdiv
int3
push
cmp
stos
mov
xchg
mov
lea
in
mov
mov
test
lea
inc
mov
std
stos
mov
xchg
cwde
dec
xchg
enter
fild
mov
sub
sub
mov
and
and
push
lds
add
push
pop
jl
adc
iret
sub
pop
ins
movs
scas
fdivr
lods
not
mov
inc
sbb
shl
cmps
in
mov
xor
push
jno
ret
push
inc
inc
popf
cmps
icebp
mov
xor
out
push
add
push
retf
adc
mov
fisttp
xchg
into
add
jmp
sbb
nop
inc
mov
add
imul
pop
ins
fdivr
cmp
add
scas
xchg
xchg
out
lds
cmp
in
arpl
xchg
lea
push
vlddqu
fldlg2
(bad)
loope
add
out
sti
int3
rol
add
add
sbb
data16
sbb
xor
scas
adc
mov
pop
stos
or
call
add
cdq
addr16
aas
mov
icebp
lahf
adc
mov
mov
or
gs
push
bound
fmul
or
and
popf
hlt
add
cmp
jp
repz
addr16
push
jae
cmp
mov
push
sbb
ror
popf
sub
push
loope
call
lds
xchg
xor
and
inc
jbe
std
loopne
ins
fwait
mov
rcl
sbb
sub
int3
lds
ja
push
ror
scas
test
imul
aad
inc
out
call
enter
mov
mov
and
lahf
movs
inc
int
mov
loop
pop
add
xchg
mov
enter
or
gs
pop
or
mov
sub
xchg
and
or
and
imul
sub
mov
movs
pop
ror
lods
psrlw
mov
imul
(bad)
cs
stos
(bad)
inc
in
arpl
jl
push
aaa
cmp
mov
movs
sub
cmp
stos
fs
jbe
fwait
inc
int
add
fs
xor
or
jbe
add
gs
into
push
retf
xor
fist
xchg
lea
xchg
pop
cdq
xchg
cmps
and
pop
or
fst
mov
push
lods
jns
js
test
scas
sbb
div
cmp
inc
call
cmp
inc
stc
mov
cmp
sti
aas
sbb
inc
js
xchg
hlt
ficomp
jb
jge
mov
inc
lods
push
test
loope
adc
jno
shr
cmp
mov
xchg
test
push
adc
inc
inc
or
das
inc
ss
mov
mov
outs
std
outs
mov
fcmovbe
adc
test
adc
xlat
outs
fnsave
fsubr
clc
mov
cmps
es
cld
ror
lods
das
pop
jmp
xchg
jae
pop
call
sti
mov
scas
jns
mov
cmovge
lock
pop
scas
pop
mov
mov
ins
fidivr
add
cld
ins
mov
jecxz
sub
mov
iret
shl
mov
dec
pop
fadd
mov
or
pop
in
push
not
dec
sub
push
add
inc
xchg
sbb
test
loopne
pop
pop
repz
les
or
inc
cdq
fwait
popa
lods
sbb
push
cwde
inc
or
mov
out
in
push
lods
mov
ins
inc
popa
adc
mov
or
push
adc
mov
ins
push
lods
cwde
push
data16
inc
fwait
sbb
enter
push
jmp
in
pop
daa
mov
inc
retf
pop
dec
sub
dec
lock
mov
cmps
shl
inc
pop
sar
jae
mov
add
stos
test
inc
out
adc
not
sbb
jmp
jg
ds
popa
mov
imul
fild
inc
lds
adc
shr
jnp
data16
hlt
sub
mov
push
fwait
ds
pop
scas
sub
repz
out
mov
lock
not
or
mov
dec
aam
pop
movs
les
mov
inc
sub
add
mov
jnp
sbb
inc
shl
lock
and
xchg
xchg
mov
sahf
sub
mov
fistp
mov
jb
inc
sub
or
push
js
cli
inc
inc
xlat
jae
ds
or
icebp
outs
cmp
jns
mov
mov
mov
je
in
sar
dec
add
mov
xor
ret
dec
add
jl
mov
mov
scas
cmp
into
and
inc
aam
sbb
adc
sub
add
pushf
jmp
mov
std
xchg
adc
(bad)
js
push
xor
stos
mov
and
clc
imul
add
or
cmps
outs
fmul
(bad)
adc
mov
ds
in
(bad)
jns
loopne
lahf
pop
cwde
push
(bad)
xchg
cmp
mov
sub
cmp
fcomp
sub
push
and
jnp
cli
js
fimul
xor
in
mov
scas
lods
add
leave
outs
mov
xchg
hlt
mov
ror
and
mov
xchg
xchg
pop
inc
shl
mov
hlt
inc
and
inc
mov
lea
std
test
xchg
xchg
push
aaa
clc
mov
push
ss
mov
or
mov
mov
sub
mov
jle
test
aaa
cs
icebp
sbb
lds
mov
dec
mov
mov
and
jbe
je
aam
or
push
xor
add
inc
inc
xchg
ins
jbe
gs
daa
xchg
jg
mov
jg
jle
arpl
clc
mov
mov
movs
jne
mov
enter
xor
scas
pop
xchg
sbb
arpl
in
dec
sbb
(bad)
das
sub
jl
mov
sub
shl
push
cs
mov
inc
sub
sbb
call
lock
xor
or
popf
mov
arpl
add
pop
lods
add
sub
dec
mov
outs
nop
jl
xor
xor
stc
ret
jmp
in
inc
xchg
ins
inc
ret
xor
loop
ret
and
int
mov
or
mov
dec
adc
ret
fwait
mov
push
sbb
xchg
fistp
adc
xchg
mov
xchg
std
push
inc
cs
dec
daa
jmp
jle
out
push
xchg
(bad)
lds
into
int3
add
scas
dec
lods
mov
mov
adc
jbe
xor
inc
sbb
(bad)
ret
inc
in
mov
pop
outs
add
pop
fld
mov
or
push
cmc
sbb
les
sbb
mov
int
adc
loopne
rol
jl
inc
mov
outs
rcr
xchg
pusha
pop
sub
es
sub
or
gs
push
leave
out
arpl
push
jbe
cdq
shl
or
out
mov
data16
pop
cs
jg
cmps
(bad)
hlt
jmp
push
stos
mov
stos
js
dec
or
xchg
inc
inc
push
ss
fwait
cmp
mov
or
push
pop
lds
adc
or
xchg
inc
rcl
mov
int3
dec
dec
xor
mov
lds
rcr
inc
add
sub
nop
dec
aas
or
into
fsub
aam
xchg
cs
lea
and
pop
xor
mov
dec
fstp
gs
inc
pop
or
mov
or
cmps
call
dec
aad
dec
push
movs
push
ficomp
imul
test
mov
daa
sar
sub
mov
test
xor
sub
xchg
movs
popf
loop
pop
test
sar
or
addr16
es
add
pop
addr16
mov
je
inc
scas
sti
movs
and
sbb
mov
pslld
sbb
mov
sar
xchg
xchg
popf
fidiv
sti
lock
daa
imul
mov
aas
cmps
imul
xchg
cs
add
aam
ins
jbe
inc
push
mov
and
inc
dec
adc
add
loope
sbb
icebp
push
cmps
jecxz
call
mov
imul
data16
jae
jo
(bad)
out
adc
cs
add
cmp
adc
jmp
or
loopne
adc
pop
fs
js
fimul
fwait
cs
add
jp
jge
cmps
mov
adc
and
fwait
loop
jecxz
into
and
mov
sub
jae
sbb
and
rcl
fidiv
sub
shr
jo
cmp
jl
lods
pop
add
push
adc
mov
and
ror
loopne
xchg
adc
mov
sub
dec
mov
inc
pop
push
xchg
inc
clc
dec
aam
popf
gs
or
pop
cmp
scas
adc
cmp
lock
add
xor
ins
das
add
loope
es
push
movs
push
and
in
jne
out
push
xor
push
std
xchg
imul
fild
cdq
fwait
sub
pop
adc
xor
fsubp
mov
cs
in
add
sahf
fidivr
add
add
sub
mov
bound
xor
sbb
pushf
or
fcmovb
mov
jmp
mov
and
push
xor
inc
fidivr
inc
in
out
imul
push
in
ds
mov
es
adc
sub
mov
out
jbe
mov
cld
aam
push
and
cdq
sbb
or
jbe
push
xchg
add
test
cmp
lods
push
fsub
and
aas
inc
shr
dec
add
mov
hlt
not
ds
scas
xchg
or
(bad)
out
jge
sbb
arpl
cli
jge
ror
(bad)
int3
dec
arpl
jno
inc
sub
push
jle
push
xchg
pop
outs
mov
call
inc
pop
jmp
inc
dec
jnp
(bad)
fcmovnbe
dec
mov
sub
mov
aaa
jg
and
cdq
xchg
or
retf
retw
jmp
sbb
xchg
mov
(bad)
push
fnstenv
idiv
clc
pop
cli
inc
sub
sbb
pop
pop
outs
sub
add
mov
pop
push
rol
mov
xor
xor
or
sbb
pop
hlt
or
les
leave
inc
pop
(bad)
mov
and
ficom
xor
mov
popa
das
and
sub
(bad)
sti
lock
fs
add
leave
mov
std
test
adc
mov
in
ret
xchg
popa
add
mov
sub
fs
pop
pop
adc
dec
push
rcr
mov
test
retf
lods
cwde
ins
push
sbb
lock
stos
inc
fisttp
daa
fnstenv
mov
sbb
or
xchg
pop
cmp
data16
sbb
mov
push
pop
push
xor
stc
cmp
adc
ja
(bad)
jns
sub
rcr
cmp
retf
adc
or
sbb
int3
sbb
mov
mov
scas
sbb
jle
retf
cmps
fwait
mov
sbb
jmp
in
push
xchg
cwde
aas
pushf
xor
and
mov
dec
movs
es
pusha
jmp
xchg
sbb
dec
lahf
pop
add
push
jnp
in
out
loop
mov
pop
push
fwait
fs
adc
push
cmp
mov
or
push
pop
test
push
mov
add
push
sahf
sub
(bad)
loop
mov
js
mov
add
nop
add
xlat
out
xchg
into
lahf
add
jle
sbb
cmps
jg
jl
sbb
push
mov
and
outs
pop
fnstcw
mov
jne
ret
pop
dec
mov
outs
jmp
add
dec
movs
mov
push
cmp
sbb
mov
mov
jb
xlat
(bad)
mov
(bad)
adc
sbb
into
mov
mov
xor
pop
daa
or
je
fwait
adc
out
clc
out
inc
push
sbb
xor
test
sbb
mov
xchg
add
push
inc
xchg
scas
push
leave
adc
pop
mov
pop
mov
rcr
(bad)
shl
cmp
jno
cmps
call
mov
push
shl
push
sahf
mov
lahf
aas
cmp
pop
fwait
sub
cmp
cmps
inc
cmps
test
dec
pop
in
in
mov
adc
rcr
adc
lods
mov
sbb
fwait
push
hlt
cmc
sub
pop
inc
jno
pop
fild
dec
rol
and
dec
cmps
cmp
sbb
shl
pushf
js
(bad)
push
cli
lock
(bad)
sbb
ror
mov
shl
xor
pop
ror
jae
outs
ss
outs
repnz
push
dec
xchg
push
pop
inc
jns
movs
and
pusha
or
out
inc
hlt
jg
and
adc
lock
or
mov
ret
in
push
jo
push
div
lock
jecxz
xchg
mov
add
out
xor
dec
adc
sub
mov
sahf
sbb
adc
add
leave
mov
repz
xor
popa
sub
dec
sbb
outs
test
into
xchg
xchg
cmp
xor
push
jns
call
add
fimul
pop
jg
sub
ja
call
xor
mov
ins
in
xchg
stos
cmp
cmc
add
push
mov
call
aam
cli
les
mov
repnz
add
or
sub
sahf
test
repnz
jne
or
xchg
je
xor
sahf
pop
jmp
fst
push
shl
mov
(bad)
jecxz
xor
adc
sbb
mov
sub
gs
cmp
repnz
inc
xor
push
add
mov
jecxz
mov
pop
cmps
imul
rol
inc
push
xor
imul
mov
fdiv
adc
ja
daa
stos
imul
stos
adc
sbb
xor
and
ins
ret
aam
dec
lods
int
paddsb
mov
mov
jmp
mov
sub
mov
sbb
xlat
mov
and
ja
outs
xor
xor
push
push
xchg
inc
jmp
out
ins
test
xchg
nop
or
cmps
ja
test
inc
into
(bad)
mov
out
inc
jp
mov
dec
imul
loop
or
push
int3
mov
stos
stos
outs
into
(bad)
leave
jbe
cld
jno
dec
push
add
jecxz
xor
std
ror
dec
into
fdiv
cmp
scas
or
imul
sbb
cmp
in
imul
scas
stc
iret
(bad)
mov
lea
and
scas
cmps
inc
xchg
rol
push
dec
add
stos
(bad)
jb
call
mov
imul
or
or
ret
and
je
nop
test
test
mov
xchg
test
xchg
pop
sbb
xchg
xchg
pop
dec
mov
jecxz
and
je
movs
(bad)
rep
pop
inc
pusha
push
mov
int
ins
(bad)
fwait
clc
xor
(bad)
enter
(bad)
add
xor
push
cdq
sub
rcr
mov
das
cs
cmp
jl
into
jae
mov
dec
(bad)
mov
xor
addr16
sub
xchg
xlat
xchg
call
in
movs
mov
dec
or
(bad)
mov
dec
or
bound
push
xor
pop
ret
push
popa
mov
ret
iret
mov
or
or
mov
inc
(bad)
or
mov
popf
pop
ret
cmc
mov
or
mov
dec
call
xchg
jno
or
xchg
add
jbe
cdq
fidiv
scas
fs
movs
repz
lods
mov
add
ror
data16
fisttp
sub
imul
sub
xor
and
mov
dec
dec
call
mov
push
jle
sub
xor
sbb
retf
iret
push
pop
xor
sahf
push
mov
loope
fnstsw
jns
pop
xor
mov
jns
dec
push
sub
punpckhbw
push
or
mov
mov
mov
lods
pop
rcr
xchg
loop
nop
xor
xchg
loop
pusha
hlt
test
and
jle
nop
int
ret
cmp
lds
push
sub
and
imul
call
cwde
push
add
call
mov
(bad)
lods
je
(bad)
mov
aad
mov
xor
gs
into
addr16
xchg
or
mov
push
cmp
fdivr
cmp
adc
outs
lods
pop
dec
mov
stos
jbe
aas
loop
mov
or
push
aas
add
xor
ficomp
dec
xor
hlt
in
and
inc
lock
mov
fsincos
out
mov
loopne
test
sub
jbe
or
jmp
xor
popf
and
adc
cmp
dec
or
or
sbb
je
add
mov
mov
pop
mov
jne
cmp
mov
mov
lahf
and
pop
pop
add
daa
aas
gs
adc
sbb
pop
je
fsub
cwde
add
or
and
mov
xchg
push
out
cld
test
and
cmp
dec
xchg
xor
mov
xor
dec
jnp
or
inc
xor
sub
int3
pop
aaa
stc
mov
sub
add
jns
ss
sbb
mov
scas
shl
inc
jmp
xor
sbb
fcom
sub
dec
ror
push
rcr
cli
pop
dec
ror
cmp
dec
mov
and
hlt
pop
aaa
sub
xlat
adc
jo
or
fdiv
xadd
(bad)
sub
push
into
push
aas
push
fdiv
xor
es
lar
outs
mov
adc
jne
jne
fdiv
std
bound
add
fwait
aad
mov
inc
mov
in
mov
dec
pop
dec
sbb
(bad)
daa
push
ins
jmp
add
lahf
jae
jge
add
lds
cmp
ins
(bad)
mov
jno
mov
mov
aaa
call
repz
loop
inc
movs
jbe
xor
shl
out
daa
mov
jge
pop
movs
shl
and
pmovmskb
ret
addr16
mov
stos
and
repnz
push
pop
nop
out
push
mov
dec
xor
stos
inc
cld
mov
or
repnz
mov
jmp
xor
das
mov
cmp
jmp
sub
lea
push
jae
push
mov
mov
push
or
jns
jo
mov
ins
leave
push
sub
test
rcl
or
mov
jbe
bound
cld
pop
arpl
sbb
jb
pop
jno
and
fs
cmp
sub
int
push
xchg
adc
sbb
rcr
or
out
xchg
jmp
push
stos
mov
js
and
inc
fnstcw
cmp
add
stc
mov
hlt
pop
sbb
xchg
xlat
rcl
fdivrp
jns
mov
and
inc
ins
mov
mov
icebp
jl
call
push
cmp
outs
cmp
jmp
xchg
inc
rol
push
(bad)
mov
xor
mov
cmp
punpcklbw
adc
into
stc
loope
mov
test
cmc
push
xchg
sub
sbb
pop
or
rol
mov
fcomi
shl
fist
ss
mov
sbb
call
adc
(bad)
cld
mov
out
mov
adc
cmp
adc
mov
out
mov
pop
pop
push
push
cs
sub
mov
call
jg
pop
leave
sub
test
xchg
jne
sahf
xor
cmp
and
pop
out
jecxz
into
inc
popa
popa
mov
in
mov
xchg
cmp
mov
clc
stos
fidivr
inc
or
loop
(bad)
fdivp
into
(bad)
cmps
jns
push
mov
adc
loope
iret
dec
xchg
int3
and
pop
mov
fadd
inc
pop
add
lea
ss
clc
jmp
mov
movs
popa
inc
ret
(bad)
sbb
xchg
adc
adc
ss
push
push
aam
jmp
in
xchg
sub
and
ffreep
ss
add
rcl
(bad)
lock
push
in
pop
lea
dec
push
mov
(bad)
inc
cmp
icebp
ins
fdivr
adc
cmp
fwait
jg
xchg
xor
imul
cmp
out
(bad)
stc
pusha
movs
loopne
call
cmp
xlat
fidiv
push
mov
sbb
push
sub
into
sbb
mov
mov
inc
or
push
mov
fcom
push
dec
push
or
sbb
(bad)
and
pushf
fwait
call
leave
fisttp
jns
sti
leave
push
mov
sbb
or
dec
leave
addr16
stos
and
retf
or
retf
stos
sbb
imul
test
push
lods
loope
clc
ja
sbb
sub
mov
pop
mov
cmp
les
fcomp
jp
cmp
cmp
sahf
push
ror
(bad)
adc
dec
bound
clc
int
imul
push
ficomp
dec
mov
retf
imul
cmp
pop
retf
push
into
(bad)
imul
push
sar
jae
mov
sti
lods
in
popf
mov
jp
push
pop
fnsave
sub
aad
arpl
push
dec
sub
mov
push
pop
mov
fsubr
or
popf
adc
xchg
test
xor
push
adc
mov
(bad)
das
in
hlt
outs
xlat
dec
inc
pop
mov
pop
cmp
push
add
lock
and
pop
cmps
sahf
jp
test
jge
jnp
xchg
in
out
pop
pop
sbb
mov
push
(bad)
cmp
xor
and
iret
out
ret
(bad)
cwde
mov
fmul
jae
je
fsubp
call
mul
aad
arpl
pusha
ds
outs
sub
adc
sbb
xchg
jne
loopne
jae
inc
mov
xchg
cwde
outs
ja
add
in
nop
stos
lea
ss
sbb
push
icebp
xchg
sub
jns
mov
cmps
daa
cmc
imul
jne
jae
out
ins
out
movs
imul
outs
xchg
loop
lods
adc
loop
push
xlat
ins
inc
mov
arpl
je
pop
hlt
mov
es
mov
push
xor
push
rcr
or
jp
dec
mov
fcmovbe
cld
idiv
lock
cli
aam
retf
cmc
loope
adc
(bad)
fadd
retf
cmps
mov
mov
scas
push
cwde
in
and
aad
dec
aaa
cmp
adc
in
cdq
fimul
mov
cld
scas
imul
bound
packsswb
fs
stc
in
popa
in
cdq
jmp
lods
hlt
leave
fbstp
sub
jle
sub
hlt
scas
scas
scas
in
fidiv
movs
movs
cs
out
jmp
adc
pop
int3
pop
mov
cli
test
popf
add
sahf
and
pop
adc
adc
jl
lahf
mov
mov
aad
pusha
out
fld
dec
mov
push
jmp
xchg
mov
pop
push
inc
xor
pavgw
ret
(bad)
sbb
mov
dec
sar
retf
mov
into
mov
jge
lods
test
pop
clc
jg
mov
push
xor
jae
mov
xor
fwait
push
ror
mov
ret
inc
cmp
dec
mov
popf
push
add
inc
repnz
shl
les
sahf
and
mov
lods
jle
xchg
jnp
mov
jb
sub
xchg
in
add
ret
test
add
sub
sbb
mov
lds
and
xchg
sub
mov
dec
fdivr
lahf
inc
scas
inc
push
ret
mov
or
mov
aas
inc
adc
lock
outs
mov
fstp
jge
inc
(bad)
fcmove
xchg
xor
pop
pop
push
out
sahf
xor
mov
aam
aas
sbb
cmp
xchg
outs
nop
mov
mov
cli
pop
fisttp
sbb
inc
xor
int
cdq
adc
enter
cmp
push
hlt
lahf
push
lods
fadd
or
dec
in
jg
sub
scas
sbb
jmp
aas
repz
repz
mov
dec
xor
xor
jp
gs
pushf
inc
jl
retf
dec
lock
jg
int
dec
dec
(bad)
or
popf
xor
or
mov
sub
ror
pusha
imul
xlat
gs
jg
int
adc
fiadd
popf
jle
fiadd
xchg
mov
test
bound
push
dec
ret
fmul
mov
(bad)
xchg
pop
xchg
icebp
into
xchg
cmp
cmp
mov
adc
repnz
add
ficomp
add
jae
loope
cmp
pop
pop
pop
pusha
xchg
into
ret
stc
push
fstp
xor
aaa
(bad)
shr
jmp
aaa
nop
imul
fcmovb
inc
xchg
pop
pop
sub
mov
pop
dec
ins
mov
out
(bad)
popa
push
inc
xchg
mov
movs
mov
xchg
push
inc
test
rcl
ror
cld
cdq
xor
sbb
nop
cmp
retf
push
out
push
aaa
adc
jle
jg
push
mov
xor
cmp
retf
int3
add
mov
pop
pop
ja
jae
xchg
xor
push
mov
in
mov
sub
mov
out
stos
adc
jae
pop
movs
inc
retf
jle
sti
daa
xchg
jb
arpl
mov
xor
lea
imul
jo
pushf
fbld
inc
fadd
(bad)
or
mov
out
inc
cmp
cmps
ret
ins
(bad)
fs
xchg
sbb
xor
adc
pop
cli
inc
dec
push
jp
clc
lea
leave
adc
test
sbb
pop
mov
mov
jle
sub
(bad)
sub
mov
(bad)
cmp
cdq
add
fild
cmp
push
das
adc
inc
ret
sbb
or
adc
sub
lods
cmp
xor
retf
inc
daa
test
test
sub
popa
jle
jmp
or
ds
aam
push
push
movs
pop
mov
mov
shr
mov
and
sub
pop
adc
and
xchg
adc
pop
mov
xchg
shr
sub
jb
or
mov
adc
sbb
imul
addr16
(bad)
mov
retf
cdq
lfs
nop
inc
adc
or
or
xor
(bad)
imul
cmp
daa
and
jno
in
jbe
mov
fsubr
mov
aam
sbb
in
pop
mov
xor
(bad)
jmp
push
xor
rcr
sub
stos
(bad)
cmc
(bad)
mov
push
retf
fcmovnu
mov
jecxz
(bad)
popa
dec
jecxz
repz
fisubr
imul
pop
sub
nop
sbb
pushaw
mov
dec
lds
cdq
mov
sub
jle
sbb
push
jle
jb
mov
sbb
xor
fwait
xor
or
jbe
loopne
push
inc
inc
fxch
lods
mov
test
or
push
fnstsw
adc
clc
pop
ds
clc
sub
mov
es
call
mov
out
movs
fnsetpm(287
xor
xchg
test
int3
and
jmp
inc
sbb
or
loop
jmp
mov
pop
fbld
repz
dec
leave
popa
rcl
cdq
adc
scas
mov
xchg
jmp
fdivr
out
daa
test
mov
dec
into
out
sbb
fwait
(bad)
js
rcl
test
outs
push
and
push
and
inc
cmp
pop
inc
bound
nop
ficomp
stos
arpl
xchg
jb
jno
or
call
retf
pusha
into
jb
iret
and
pop
cs
sti
je
popf
jmp
repz
dec
test
pop
sub
fcom
mov
lods
xlat
lods
dec
pop
arpl
add
pop
in
aaa
in
mov
dec
push
in
arpl
fwait
add
xchg
jmp
test
test
add
sub
aaa
sub
sbb
fs
pop
in
adc
xlat
mov
test
mov
test
cli
push
stc
adc
sbb
pusha
pop
pop
les
adc
inc
inc
dec
fs
jb
gs
fidiv
push
lahf
pop
push
adc
mov
dec
xchg
pushf
xlat
jmp
inc
xchg
imul
lea
sti
fmul
call
adc
psllq
fsubp
(bad)
fisubr
sbb
sbb
ja
inc
mov
sahf
mov
call
jne
ds
sbb
pop
(bad)
out
int
(bad)
bound
scas
lds
(bad)
sbb
mov
push
jle
dec
xor
in
adc
mov
dec
pop
call
mov
out
adc
and
xchg
in
pop
dec
cmc
je
lods
aas
inc
inc
icebp
fcomp
mov
push
movs
pop
xor
or
addr16
push
xor
add
or
out
call
sub
add
cmp
sub
sub
pop
adc
sub
mov
or
dec
pushf
sbb
dec
push
xchg
stos
inc
dec
mov
push
out
iret
adc
inc
(bad)
add
das
data16
adc
sub
(bad)
pop
jmp
test
push
cmp
add
mov
mov
jp
cmc
test
jl
or
jmp
das
adc
mov
test
mov
ja
lahf
inc
fstp
and
push
pop
arpl
out
ds
mov
adc
xor
aaa
nop
adc
in
pop
cmps
dec
and
adc
icebp
push
retf
sar
jae
push
mov
mov
sti
mov
add
pop
and
sub
bound
data16
fistp
dec
pop
jnp
sub
push
pop
popf
movs
or
imul
shl
clc
or
mov
mov
ror
add
and
bound
std
push
outs
aam
es
out
cmp
jne
jo
popa
jmp
xchg
sbb
gs
jo
sbb
xchg
mov
popf
out
xor
cmp
lods
mov
js
jnp
or
jp
ror
push
mov
shr
pop
cmp
adc
cld
arpl
sbb
inc
ins
ret
movs
idiv
rcl
fnsave
out
add
add
popa
call
outs
push
scas
pusha
adc
fdiv
data16
xchg
mov
enter
xchg
mov
inc
aas
push
cwde
(bad)
mul
test
rol
mov
add
(bad)
mov
sti
push
inc
jg
mov
shl
jno
pop
jg
cmp
mov
sbb
mov
enter
cmp
add
xor
jno
push
inc
mov
test
xchg
inc
add
pop
cmp
or
std
adc
mov
cmps
(bad)
and
adc
sbb
iret
fld
or
ficom
retf
rcr
ja
mov
or
scas
stos
pop
sub
xchg
xchg
mov
out
aad
sbb
mov
mov
xor
test
dec
inc
push
jg
mov
in
sbb
mov
lods
in
aas
ficomp
mov
cmp
and
pusha
or
rcl
lea
mov
xor
jmp
mov
out
pushf
jae
iret
inc
lahf
pop
xor
iret
popf
add
cmps
dec
stc
mov
pop
push
adc
mov
and
sub
repz
aas
jb
xor
sub
add
mov
inc
bound
jo
mov
in
sahf
adc
mov
cmp
mov
or
add
pop
cld
(bad)
fimul
cmp
pop
test
xchg
cmp
daa
sti
ret
nop
(bad)
pop
pop
or
test
jmp
mov
adc
add
xchg
in
in
stos
sbb
or
clc
pusha
and
sub
bound
dec
shl
xchg
mov
xchg
loop
out
adc
ins
iret
leave
pop
movs
mov
dec
or
push
lods
jo
xchg
mov
mov
cmp
dec
nop
and
aam
mov
add
retf
movs
cmps
js
outs
bound
xor
mov
fadd
lods
imul
jno
mov
pop
clc
and
or
inc
and
inc
pop
push
mov
and
(bad)
popa
fs
lds
mov
retf
xor
cmc
(bad)
jb
sbb
xchg
add
mov
daa
(bad)
cwde
aaa
sahf
pop
xchg
add
push
push
dec
or
pop
cmp
lahf
jae
ret
push
adc
jbe
das
xchg
(bad)
push
adc
push
bound
ret
inc
loop
test
push
sbb
mov
es
mov
cmc
pop
push
in
out
int
scas
xchg
loop
das
adc
mov
mov
popa
dec
cmp
or
dec
movs
add
sti
mov
xor
jae
ss
out
sbb
and
cli
pusha
retf
lock
aas
cmp
xor
jmp
push
xchg
bound
xlat
mov
repnz
sub
jle
jmp
mov
pushf
loopne
cdq
stos
xchg
push
xor
mov
test
sbb
push
les
cmp
imul
push
aas
lods
cmp
push
jno
mov
jmp
rcl
call
test
sub
sbb
inc
imul
stc
rcr
and
pop
pop
jbe
std
xchg
shr
xor
xchg
or
jne
pop
push
sbb
push
cmps
or
aam
adc
mov
sbb
xor
stos
sbb
bswap
adc
pop
cmp
add
jmp
shl
(bad)
popa
sbb
dec
mov
mov
ds
push
pop
pop
inc
ss
rcl
mov
and
sub
sar
nop
sub
xchg
and
rol
and
out
sub
daa
ret
xor
push
xor
and
sbb
pop
inc
(bad)
jg
pop
stos
sbb
pop
test
jmp
les
sbb
(bad)
loopne
jns
jmp
lods
outs
sub
(bad)
je
dec
jne
call
pop
lods
fild
mov
xchg
inc
in
sti
in
mov
je
sbb
jp
retf
dec
push
push
jns
and
sub
neg
inc
mov
fs
mov
push
fisub
or
add
add
dec
add
retf
sbb
ins
repnz
scas
(bad)
cmp
add
dec
xchg
cmc
retf
js
cmp
or
pushf
popa
xor
ins
jge
addr16
pop
data16
push
into
pushf
aam
or
call
mov
xchg
or
xchg
push
mov
sti
ds
fwait
mov
push
mov
jmp
push
add
ret
mov
adc
lea
(bad)
jmp
(bad)
xchg
and
jle
mov
sbb
mov
out
mov
mov
sbb
mov
ins
mov
in
call
inc
mov
or
les
add
add
dec
sbb
adc
(bad)
mov
in
mov
add
pop
and
std
test
bound
mov
repnz
mov
dec
jno
mov
sub
mov
jb
arpl
xchg
clc
inc
jmp
mov
jo
ja
add
inc
test
xor
or
or
fmul
div
pop
sbb
and
jecxz
mov
xor
ret
jg
gs
add
lock
and
xchg
loop
aam
neg
pop
inc
sub
and
adc
iret
pop
dec
mov
das
dec
out
lea
add
fld
ret
cmp
mov
je
cs
retf
push
std
push
cmp
or
cmp
mov
push
aas
fisubr
xchg
inc
in
fld
imul
cmps
loope
inc
pop
repz
add
adc
mov
or
in
dec
pop
ret
push
mov
pop
xor
sbb
xchg
inc
jno
cmps
adc
mov
call
test
fsub
popa
and
cmp
pop
stos
mov
add
push
in
out
and
xchg
bound
sub
mov
ffreep
(bad)
and
popf
ja
in
cwde
push
pushf
xlat
jne
imul
hlt
psrlq
or
or
in
dec
mov
out
es
push
push
jmp
inc
test
or
nop
adc
mov
push
sub
(bad)
nop
test
adc
xchg
xor
stos
fisub
jecxz
ss
lods
mov
adc
sbb
scas
repnz
jne
repnz
imul
sbb
xchg
mov
push
bound
jmp
(bad)
stc
icebp
add
adc
int
aas
pusha
shr
jnp
pop
mov
jo
bndldx
iret
into
sbb
stc
bound
mov
scas
sub
or
inc
dec
std
icebp
xchg
test
sbb
js
or
stos
or
cmp
fimul
inc
cmc
add
lods
mov
push
mov
push
imul
adc
or
(bad)
mov
fld
push
test
xchg
pop
xor
sbb
inc
jbe
fwait
popa
xor
in
cmpps
in
xchg
aam
dec
cwde
inc
sbb
mov
pop
add
cmps
and
or
xor
sbb
out
add
xchg
sbb
and
mov
xor
fprem
mov
mov
fcmovnb
popf
stos
and
retf
mov
xchg
mov
fnstsw
push
jae
(bad)
mov
push
push
adc
ret
sub
js
mov
mov
push
out
jnp
pusha
jecxz
mov
jg
add
ror
call
jne
xchg
mov
pcmpgtd
jp
bound
adc
stos
mov
loop
pop
int3
fild
rol
and
into
repz
pop
adc
ror
pop
inc
push
shl
aaa
out
fld
push
sti
out
jmp
xor
pop
aas
retf
js
cli
xchg
lahf
rcr
outs
inc
dec
push
loop
inc
fwait
rcl
xchg
push
(bad)
sub
and
fsub
dec
sbb
pushf
dec
addr16
mov
or
cmp
cmps
inc
sti
adc
mov
sbb
dec
cld
inc
std
pop
loop
call
pop
fcmovnbe
mov
or
mov
jnp
cwde
shl
leave
xchg
xor
push
mov
xchg
das
jle
loop
(bad)
aam
cld
xor
lds
xor
xor
into
or
push
gs
mov
inc
(bad)
adc
adc
ret
mov
fcomp
movs
or
adc
mov
cwde
inc
or
std
into
mov
xlat
loop
dec
mov
js
mov
mov
popf
rol
cmp
adc
mov
xchg
outs
pop
das
in
pushf
pop
js
call
inc
movs
cmp
jg
sbb
movs
fbld
(bad)
stos
jge
jg
jno
fist
sbb
iret
pusha
and
daa
mov
push
push
sbb
or
sbb
ins
mov
mov
pushf
mov
cmc
jmp
jp
jmp
add
adc
gs
xor
cmp
jmp
xchg
daa
add
rcl
test
sti
mov
stos
push
fisttp
pop
pushf
sbb
frstorw
inc
jmp
stos
xchg
jl
(bad)
shl
cmc
test
bnd
(bad)
in
and
fsubrp
shr
or
das
mov
aaa
lods
out
pop
sub
cmovl
shr
jge
jno
push
mov
mov
dec
sbb
nop
ja
jnp
repz
add
int
cvttps2pi
retf
fist
iret
out
pop
jmp
sbb
aas
push
pusha
push
xchg
in
outs
fisttp
iret
cmps
add
shr
daa
fcomp
aaa
add
push
push
(bad)
mov
retf
sub
add
push
cdq
xchg
jae
xor
sbb
arpl
push
cwde
xor
inc
push
int
in
in
inc
mov
push
sbb
std
mov
cld
out
out
jmp
xchg
out
sbb
inc
(bad)
call
mov
fstp
repz
or
dec
pop
mov
mov
rcr
and
gs
fcom
ins
loop
jb
outs
loope
push
hlt
jmp
adc
dec
retf
inc
push
jge
xrelease
nop
repz
stos
(bad)
dec
pop
in
and
arpl
sub
test
call
sub
mul
xor
xchg
ins
dec
cmp
sub
adc
cmp
fwait
sub
pop
mov
xchg
sbb
hlt
scas
in
stc
out
mov
movs
adc
xchg
jp
xchg
imul
sub
ror
pop
pop
cli
ins
int3
cmp
int3
test
stc
xchg
out
rcr
sbb
nop
pop
cmps
adc
xchg
cmps
jns
pop
fimul
ja
dec
push
cmp
test
adc
repnz
add
mov
mov
and
(bad)
sbb
jo
clc
cs
fwait
push
xor
loop
fisttp
scas
add
jns
mov
lahf
dec
iret
mov
aas
lods
test
inc
test
sbb
mov
mov
mov
and
iret
enter
mov
outs
xchg
push
int3
enter
scas
call
(bad)
jecxz
xor
cdq
pop
sub
(bad)
imul
xchg
mov
fs
push
fisub
xor
mov
inc
fst
inc
sar
mov
fadd
mov
mov
xchg
jo
mov
pop
stos
mov
das
retf
jb
sbb
jg
cmps
add
loope
out
pop
into
ja
retf
enter
test
shl
pop
cmps
or
or
retf
sub
push
xchg
ins
mov
inc
push
pop
imul
or
in
mov
cld
(bad)
test
ja
mov
fiadd
pusha
hlt
cmps
aas
idiv
and
stos
lds
sbb
add
push
jg
inc
test
mov
jb
pop
sub
lea
stos
sbb
or
sbb
fs
inc
mov
bound
sub
push
out
sahf
inc
inc
jno
xor
jge
retf
sub
rcl
ret
out
movs
test
cmp
adc
stos
repnz
xor
xor
clc
jmp
call
pop
movs
test
scas
loope
jne
pop
out
outs
inc
mov
sub
dec
scas
mov
mov
adc
call
call
call
push
xor
and
jl
jbe
cmp
mov
pop
dec
and
arpl
cmp
jmp
into
pop
cmps
movs
mov
cmp
cs
pop
push
jns
cld
jmp
xchg
es
cmp
push
or
pop
and
pushf
or
mov
jmp
cmp
push
push
rep
(bad)
es
out
push
cld
adc
jns
in
leave
cld
sub
inc
retf
pop
(bad)
xchg
call
int
mov
jnp
lahf
pop
add
inc
pop
sbb
sets
mov
pop
or
mov
out
hlt
dec
jmp
cmp
mov
inc
sub
dec
or
mov
mov
mov
popf
popa
adc
inc
mul
adc
lahf
cmp
push
mov
add
movs
cmps
push
nop
dec
aam
cmp
mov
(bad)
mov
pop
mov
jbe
dec
ins
jmp
or
jmp
stos
sbb
jbe
dec
mov
ja
mov
and
es
repz
cmp
sub
mov
jle
bound
jle
enter
inc
push
std
jg
pop
push
scas
sub
add
jbe
call
cmp
and
jnp
arpl
xlat
daa
int
mov
sahf
aas
test
loopne
jne
jg
mov
arpl
dec
fsubrp
loope
int
imul
pop
inc
add
mov
stos
(bad)
int3
rol
xor
push
push
jmp
ins
and
jp
inc
sbb
sar
dec
mov
lahf
push
(bad)
arpl
call
push
std
gs
or
push
mov
mov
mov
push
sbb
mov
cld
shr
mov
inc
adc
push
dec
dec
shl
dec
call
sbb
jbe
and
adc
fmul
outs
lds
rcr
mov
or
leave
retf
ja
or
pop
call
leave
sar
not
pop
fldl2t
mov
sahf
imul
dec
hlt
lds
pcmpgtd
test
xor
ret
das
(bad)
and
xor
pushf
movs
sahf
in
nop
(bad)
loope
cmp
sbb
icebp
rcr
dec
dec
das
(bad)
sbb
fwait
dec
push
xchg
shl
ret
popf
cld
inc
jno
in
and
outs
sub
push
mov
clc
outs
sbb
fucom
dec
test
push
mov
in
hlt
fadd
jmp
btr
adc
cld
xor
jb
imul
je
jecxz
xor
dec
mov
stos
jp
push
dec
loopne
push
adc
mov
iret
push
pop
dec
and
adc
shl
push
mov
hlt
movs
std
and
aaa
or
mov
adc
jae
lods
fs
mov
ror
bound
push
adc
das
loop
cmp
adc
cdq
cmp
ss
js
jns
xor
or
movs
ja
mov
movs
inc
shl
popf
je
fsubr
sbb
jns
hlt
mov
shr
jnp
mov
and
xchg
jmp
loopne
popa
mov
or
jb
cmp
cmp
test
sub
lahf
pop
shl
mov
add
icebp
pop
test
inc
movs
inc
sub
mov
jmp
push
jp
pop
popa
mov
and
cld
jnp
xchg
sbb
lahf
outs
jle
(bad)
dec
pop
and
push
aas
ja
inc
jmp
push
aad
in
mov
sbb
not
nop
bound
dec
mov
pop
dec
pop
xchg
sub
sub
test
icebp
sbb
add
mov
int3
push
cmp
pop
ds
aaa
ds
pop
mov
jnp
sbb
bound
dec
jecxz
mov
add
fnstcw
imul
test
inc
mov
mov
repz
in
repnz
scas
adc
or
xchg
sub
outs
lahf
sub
jns
loope
scas
inc
popa
shr
ja
mov
out
test
ins
mov
push
arpl
les
repz
add
pushf
sub
je
pop
push
pop
mov
or
sub
into
sahf
outs
mov
push
add
adc
adc
cli
aam
push
cmp
and
mov
xor
jae
popf
addr16
fs
push
lea
mov
imul
push
mov
lods
cmps
adc
xor
xchg
sbb
loop
sbb
(bad)
cmp
in
stc
fsub
(bad)
xchg
jb
sub
(bad)
xlat
enter
cmp
mov
sub
cmp
cmovo
xchg
ja
ss
shl
mov
ret
mov
xchg
jb
(bad)
lock
inc
mov
mov
adc
rcl
je
add
imul
out
call
out
mov
cmp
cmp
xlat
cwde
pop
dec
or
pop
cmp
neg
out
dec
out
call
xchg
add
mov
aas
mov
cmp
ss
push
addr16
jne
ds
cmp
call
cs
mov
jne
loopne
fist
jns
push
call
js
loopne
je
fdivrp
fsub
add
sub
fdivr
inc
sar
test
mov
jmp
fisubr
imul
(bad)
mov
stos
jl
loop
cs
push
(bad)
sti
ins
xchg
cmp
xor
xchg
les
push
cmp
retf
push
jb
jbe
adc
and
and
lock
fld
shl
stos
jo
xchg
sub
mov
sbb
loope
mov
hlt
(bad)
mov
sub
out
sub
inc
imul
mov
movs
jl
jo
lods
js
in
dec
(bad)
mov
hlt
inc
and
add
fdivr
pusha
inc
ss
test
jge
adc
or
push
out
adc
scas
test
adc
and
and
sti
jge
mov
out
push
imul
add
aas
inc
fdivr
ds
mov
add
dec
adc
retf
scas
fucom
adc
not
mov
xor
lock
sub
sti
cwde
imul
inc
jl
jno
inc
outs
ins
(bad)
test
push
les
pop
mul
ror
adc
or
lods
sub
in
loop
test
loopne
pop
xchg
push
aaa
lods
stos
ds
jb
push
aad
mov
cmp
xor
inc
xchg
add
pop
popf
jmp
sub
or
mov
int3
inc
push
adc
mov
test
inc
inc
sahf
stos
push
dec
retf
mov
ins
mov
dec
gs
inc
test
stos
mov
inc
in
xchg
add
es
and
pop
lock
dec
outs
add
mov
mov
ret
aas
shl
xor
xor
or
add
aaa
add
mov
push
lahf
mov
push
test
js
shl
jns
mov
fdivr
xchg
cmp
neg
or
aas
mov
mov
push
cmp
aaa
push
push
sub
stc
(bad)
adc
int
lods
ja
div
mov
mov
jns
push
push
inc
stos
stos
xor
std
call
movs
(bad)
xor
call
lods
sbb
gs
mov
jmp
or
mov
aas
lahf
pop
or
dec
pop
cli
mov
or
jmp
in
add
jns
addr16
push
push
and
out
push
jne
rcl
or
xor
jne
inc
push
sub
adc
cmc
sahf
lods
daa
and
pop
icebp
xchg
jns
xor
out
xchg
ror
js
test
xlat
mov
push
sub
cmp
cmp
fmul
dec
int
aas
jmp
mov
sbb
je
ds
std
das
push
jb
xor
(bad)
or
fcom
jnp
mov
jns
and
jae
push
mov
push
push
int
ror
push
out
xor
add
inc
out
pop
mov
or
inc
or
pop
shr
and
push
mov
cmps
clc
inc
dec
mov
or
mul
das
xchg
or
push
ror
stc
lea
or
ror
mov
test
or
cmps
dec
mov
popa
pop
stc
scas
lahf
mov
mov
cmp
int3
and
(bad)
call
xchg
in
call
push
jmp
aas
or
adc
mov
xor
or
fwait
enter
sub
xchg
lods
pop
jecxz
call
mov
leave
push
jle
mov
imul
xchg
xchg
or
stc
lods
and
jg
and
push
or
push
mov
mov
daa
sub
fmul
fcom
popf
push
mov
adc
into
pop
pop
shl
mov
aas
jl
or
cmps
inc
test
adc
aam
sahf
sahf
jmp
repz
test
mov
adc
xchg
mov
(bad)
addr16
nop
data16
fadd
imul
cs
jae
add
cmc
jb
aam
rep
xor
imul
outs
adc
cmp
and
xchg
push
mov
imul
call
in
adc
xlat
push
sub
mov
fwait
ret
popf
cmp
js
xchg
movs
fldcw
icebp
sub
inc
sbb
add
cmc
sbb
xchg
icebp
sbb
push
push
rcl
shl
add
dec
imul
std
sbb
inc
mov
add
lods
jb
aam
xchg
mov
add
xlat
stc
and
(bad)
adc
mov
nop
int3
add
fcom
adc
fcom
inc
ja
imul
in
sbb
(bad)
sbb
adc
jl
ss
fs
mov
ret
dec
sub
inc
movs
and
pop
fmulp
or
sub
fist
mov
xor
jmp
fwait
and
pop
imul
sahf
addr16
sbb
imul
and
pop
sub
dec
push
loope
cmp
aaa
stc
repnz
sbb
push
enter
push
enter
and
shr
push
jno
and
jns
or
dec
push
sbb
dec
ins
add
mov
mov
jo
cmp
dec
rol
(bad)
pop
daa
xor
sbb
mov
mov
or
xchg
ins
sub
pushf
xchg
and
aam
pop
call
shr
push
getsec
mov
add
inc
outs
jmp
iret
and
outs
scas
mov
popf
movs
dec
sub
ret
push
in
jl
out
xor
adc
mov
les
(bad)
leave
push
scas
ins
loop
call
dec
popa
sbb
arpl
dec
lahf
in
dec
jecxz
scas
popf
mov
js
fld
inc
mov
cmps
cmps
mov
pop
shr
fcmovnbe
xchg
xor
retf
test
cli
ins
mov
je
and
dec
mov
jl
pop
pop
jp
jae
mov
fs
xchg
loop
mov
into
mov
jbe
cmps
xor
jbe
outs
dec
or
scas
xchg
jae
pushf
pusha
jbe
adc
pop
dec
les
scas
xchg
xor
ins
mov
lahf
push
mov
mov
xchg
xor
xchg
hlt
test
fstp
sbb
xor
cmp
lsl
mov
push
aaa
(bad)
imul
movs
lea
lds
in
loopne
jle
cli
fisub
adc
retf
mov
jnp
call
dec
add
stos
out
aam
pusha
imul
push
movs
sar
jo
pop
lahf
push
stos
in
aad
or
and
cld
mov
lds
sahf
jl
adc
or
ficomp
fs
jle
jo
or
dec
jo
lods
push
sub
cdq
shr
xchg
ins
mov
ss
fs
addr16
push
push
ds
lds
retf
cmc
jno
xor
sbb
lods
cmp
ficomp
sar
dec
cli
xor
cwde
mov
mov
std
cmc
jmp
js
or
fmul
not
(bad)
aad
dec
or
inc
call
popf
in
aam
cld
xchg
into
mov
(bad)
sbb
aam
cmp
mov
xor
daa
mov
push
test
dec
mov
bound
std
sub
or
shr
xchg
fidiv
inc
mov
cli
cmc
mov
mov
test
(bad)
outs
or
repz
jge
cwde
(bad)
mov
retf
jg
mov
ja
push
cmp
movs
mov
dec
inc
(bad)
gs
int3
dec
push
iret
fimul
lods
jno
adc
cmps
gs
loop
xchg
arpl
icebp
xchg
and
xchg
mov
clc
mov
mov
fs
sbb
pushf
pop
sbb
(bad)
aas
or
inc
je
push
(bad)
cmp
mul
and
loop
cs
inc
xor
cld
aam
and
ds
ins
js
shl
add
cmp
dec
pushf
sahf
sub
les
imul
imul
adc
or
fstp
dec
out
ins
iret
lods
xchg
pop
(bad)
and
mov
dec
in
xchg
iret
stos
or
jp
xor
stos
adc
pop
push
sub
sbb
sub
ret
and
mov
and
cmp
ins
scas
mov
cmps
push
scas
nop
push
jae
push
pop
and
repz
loopne
jo
jcxz
xor
test
stos
push
stc
into
sahf
mul
std
lds
das
stc
and
xchg
cmp
inc
loopne
cdq
ret
inc
aas
push
mov
fimul
mov
sub
shr
push
push
clc
mov
xchg
fst
stc
xchg
jbe
jnp
call
push
mov
enter
pushf
(bad)
adc
cdq
mov
rcl
or
ins
outs
lods
dec
jnp
stc
add
rcr
jae
or
adc
test
cld
mov
sbb
mov
popf
xor
shr
lea
add
lea
or
push
(bad)
enter
jbe
pop
int3
xchg
ret
or
dec
and
das
add
adc
dec
dec
imul
cmp
jge
rcl
int3
jecxz
in
mov
outs
fcomp
mov
mov
sahf
and
(bad)
pop
jmp
jae
ds
fxch
jecxz
mov
lock
mov
pop
dec
pop
ret
nop
ins
xor
mov
inc
imul
jge
pop
(bad)
xchg
jmp
pop
in
jnp
dec
dec
cmp
cdq
(bad)
fidivr
add
outs
fdiv
cmp
retf
jp
out
movs
fst
inc
dec
bound
xchg
jmp
jb
lock
retf
xchg
iret
xor
das
or
lock
xor
mov
enter
and
mov
cdq
pop
and
pop
repz
add
inc
pop
mov
movs
jns
mov
pop
adc
shl
pop
sahf
pop
add
push
aaa
sub
retf
jecxz
adc
ins
xchg
js
push
push
mov
clc
(bad)
jge
push
push
sub
lahf
adc
mov
add
or
mov
pushf
cwde
sbb
ret
pop
or
sti
xor
and
jno
(bad)
ror
inc
cs
xor
xchg
adc
xor
imul
inc
stc
sbb
mov
(bad)
xchg
sub
retf
xchg
loope
stc
daa
xor
ins
push
or
add
mov
jns
push
dec
(bad)
cld
adc
loope
mov
xchg
(bad)
repnz
xchg
and
ror
or
aas
mov
jmp
xchg
pop
cmps
jae
stc
adc
mul
cmp
rcl
es
inc
aam
cmp
sub
inc
dec
das
jmp
arpl
cld
mov
dec
out
repz
js
lods
jmp
add
imul
mov
jg
mov
mov
mov
and
cwde
shl
test
or
sbb
int3
and
jecxz
xchg
xor
mov
cmps
movs
(bad)
cmp
test
mov
mov
pop
sub
xchg
std
or
retf
ds
fsubp
inc
mov
enter
or
retf
xchg
sbb
js
popa
arpl
clc
fwait
pusha
sbb
jg
dec
add
je
sbb
fst
(bad)
stc
and
in
ins
mov
fadd
dec
or
movs
adc
cmp
loope
fimul
dec
mov
cmp
push
stos
xchg
push
retf
pop
cs
(bad)
xor
xchg
jnp
pop
mov
and
jbe
sub
out
and
mul
xor
and
lahf
dec
cmp
test
mov
cs
les
je
jnp
into
ds
icebp
(bad)
adc
aam
cli
retf
data16
fidivr
inc
aaa
push
cmps
mov
ds
test
outs
cmp
ds
dec
fwait
call
cmp
iret
sub
daa
and
or
dec
jecxz
jnp
jns
pop
adc
ja
inc
jo
push
sbb
ja
pop
xchg
and
popa
xor
test
pop
pop
cmps
xchg
sub
leave
jecxz
xchg
fmulp
jo
cmps
cmps
pop
xor
icebp
xor
lock
imul
jo
and
sti
shl
cmp
push
xchg
std
xchg
and
aaa
jle
arpl
stc
test
mov
rcr
pop
stc
xchg
std
ja
xchg
loope
push
dec
jnp
xor
mov
retf
out
js
xor
fisttp
mov
mov
cmps
xchg
(bad)
repnz
mov
xchg
fidiv
dec
in
jecxz
sbb
cmp
pusha
mov
sub
mov
pop
stc
xchg
popf
sbb
push
enter
fdiv
dec
aam
inc
cmp
ss
cmp
jmp
jg
movs
adc
cmps
bound
xchg
aas
xor
aad
push
iret
jmp
cmps
and
xchg
mov
cmp
cmp
ret
xchg
loope
lods
mov
push
adc
sar
mov
test
inc
mov
fimul
iret
jmp
enter
dec
imul
fs
pusha
pop
imul
out
push
hlt
cmp
mov
jbe
push
xchg
inc
movs
test
pop
sbb
sti
pcmpgtb
sbb
(bad)
push
cmp
shl
(bad)
and
mov
test
stos
addr16
mov
hlt
pop
mov
xchg
outs
leave
adc
aad
daa
sbb
leave
sbb
retf
mov
scas
clc
inc
or
(bad)
pop
jnp
add
mov
and
or
aas
mov
hlt
mov
out
mov
(bad)
adc
inc
clc
aam
and
jb
pop
xor
adc
mov
xchg
sbb
fnsave
clc
cmp
fdiv
into
push
daa
push
hlt
or
data16
mov
test
arpl
add
inc
out
lds
pop
hlt
push
cwde
inc
inc
cs
ret
shl
call
mov
sub
jmp
push
mov
pusha
int
in
pop
sub
mov
push
sahf
sbb
xchg
ss
cld
add
pop
sbb
push
dec
test
movs
mov
imul
inc
ss
dec
dec
pop
bound
add
sub
jno
and
pushf
fst
push
into
shr
cdq
add
daa
pop
adc
xor
loopne
and
ds
scas
add
adc
mov
xchg
add
retf
mov
fwait
ret
inc
fmul
int3
mov
sub
adc
sbb
push
out
call
(bad)
aam
addr16
sahf
or
clc
lds
xchg
out
imul
inc
push
test
push
dec
ds
xor
xchg
stos
pop
fiadd
scas
fisubr
repnz
sub
enter
pop
(bad)
adc
adc
inc
mov
xchg
sar
test
jb
or
imul
call
test
push
adc
cmc
or
int
movs
js
ds
mov
xchg
stos
jno
dec
enter
add
push
rol
xchg
ins
inc
shr
or
mov
cmps
out
cmp
sbb
(bad)
out
xchg
or
cmp
add
push
and
mov
pop
mov
fcomip
jp
inc
das
xor
fidiv
and
or
jle
push
sahf
out
sub
jp
int
sub
xor
hlt
or
scas
sbb
aam
sbb
pop
ins
inc
fwait
pop
xchg
test
mov
clc
push
outs
fst
loopne
adc
or
mov
es
xor
nop
and
wrmsr
(bad)
lock
xchg
in
enter
fs
lods
(bad)
cdq
jecxz
sub
mov
push
mov
dec
loopne
add
in
and
mov
mov
mov
pop
adc
lock
fcomp
sti
mov
xor
repnz
or
mov
xor
(bad)
rcl
push
(bad)
mov
cwde
cld
push
mov
and
add
out
into
scas
add
jecxz
adc
scas
into
pop
or
pop
pop
inc
and
sbb
mov
add
jmp
cmp
popf
popf
fdiv
mov
aam
push
je
cmp
mov
imul
push
mov
push
jmp
mov
lds
mov
lds
(bad)
cmp
(bad)
adc
jo
xchg
mov
loop
idiv
cmp
movs
pop
xchg
lock
dec
push
pop
(bad)
neg
sbb
sub
das
fcom
mov
std
add
cmp
(bad)
popa
test
(bad)
lock
and
sahf
xchg
cmp
mov
jle
mov
ss
mov
mov
and
mov
lods
ret
xor
dec
and
xchg
int
in
repnz
imul
or
mov
inc
ss
push
xchg
add
stos
shl
fdivr
sbb
sub
cli
xor
pop
or
dec
jne
mov
xchg
push
mov
mov
xor
ja
inc
xor
sub
in
sbb
adc
push
xor
dec
mov
js
push
lock
popa
or
mov
add
lds
pop
mov
repz
dec
aaa
jp
xchg
sub
imul
inc
sbb
xchg
movs
mov
pop
dec
bts
scas
retf
aad
addr16
je
dec
and
je
mov
mov
or
and
clc
sbb
jp
add
ret
idiv
jp
sbb
je
ret
jl
pop
or
or
add
jae
xchg
adc
pusha
mov
in
or
xor
sbb
pop
adc
fld
mov
movs
rcl
jb
or
push
enter
dec
dec
dec
(bad)
neg
mov
fwait
jle
mov
fbstp
sar
(bad)
sbb
inc
aam
(bad)
sub
push
and
sbb
xchg
or
push
dec
cmps
mov
arpl
jne
and
inc
scas
pop
rcl
sbb
pop
test
cld
xor
scas
inc
leave
pop
xlat
fld
das
push
add
fs
dec
and
fidiv
cmp
vandps
pop
push
bound
mov
push
aam
lods
xor
push
icebp
or
sub
movs
js
mul
cld
clc
lods
sbb
push
in
or
scas
and
les
aad
arpl
mov
jp
outs
pop
movs
mov
(bad)
and
into
shl
pop
repz
dec
movs
sbb
jl
lds
sbb
sub
mov
cwde
rcl
cmps
rol
call
sub
or
mov
mov
repz
pusha
dec
sbb
fcomp
pop
adc
mov
jmp
or
lock
cdq
pop
mov
mov
inc
pmaxsw
push
sbb
xor
dec
pop
jne
or
jo
push
pop
jae
mov
pop
fwait
clc
std
dec
cmps
add
fdivr
mov
mov
dec
add
mov
mov
movs
in
push
xchg
ret
repz
outs
fst
mov
es
push
push
xlat
fldenv
je
test
gs
jle
call
cld
mov
sub
inc
(bad)
lahf
rcr
shr
test
sub
jl
push
nop
xor
xlat
push
aas
push
push
adc
adc
xor
add
mov
xor
cmps
pop
push
or
xor
in
adc
xor
sbb
cs
into
std
into
pop
lods
inc
xchg
xchg
jmp
fst
call
popa
cmp
mov
inc
add
mov
or
pusha
dec
ins
inc
movs
sahf
int3
iret
ins
es
movs
xor
adc
lods
pushf
pop
test
add
mov
popf
and
sub
repz
push
push
cmp
or
fnstsw
js
(bad)
stos
adc
loope
pop
pop
xchg
xor
jl
enter
add
ins
imul
adc
cs
dec
cmp
dec
jno
mov
or
pop
push
test
jmp
jbe
mov
or
or
sbb
sub
dec
lea
cmp
outs
(bad)
fs
sub
push
sbb
pop
mov
stos
jb
inc
test
inc
dec
das
rcr
fld
mov
test
ins
push
sti
mov
add
jmp
xor
cmps
or
(bad)
fistp
adc
outs
into
cwde
jmp
mov
and
scas
pop
fist
adc
ins
pop
(bad)
lahf
movs
out
mov
rol
lahf
mov
adc
movs
test
jns
xchg
xchg
je
jo
mov
movs
mov
fld
int
mov
mov
xchg
sub
mov
sub
cli
pushf
pusha
fwait
cmp
hlt
sbb
jmp
sub
in
sub
xor
push
pop
call
push
(bad)
shr
jmp
sti
push
movs
pop
push
xor
mov
popf
or
push
jmp
add
mov
mov
mov
lea
cmps
test
sub
adc
and
es
in
outs
fild
iret
fidivr
mov
sub
lahf
aad
add
jmp
cli
xor
(bad)
cli
repz
inc
imul
imul
loopne
cmps
out
cmp
cmp
ins
jno
int
cdq
sahf
inc
outs
hlt
pusha
nop
mov
inc
adc
iret
push
add
test
push
dec
push
push
xchg
test
pop
inc
adc
pop
das
mov
pop
loop
cld
cmp
add
cmp
data16
and
push
add
sbb
ret
sbb
xor
jae
(bad)
pop
mov
imul
cs
ret
adc
dec
add
jb
mov
and
(bad)
jle
jb
and
sbb
mov
jb
sbb
fstp
loope
inc
rcr
adc
test
mov
push
ret
(bad)
inc
add
out
pushf
cmc
xchg
std
scas
push
mov
ret
xor
jne
sti
mov
fstp
or
scas
leave
dec
mov
inc
or
mov
inc
int
fsub
jmp
xor
pop
sub
inc
cmp
mov
adc
sub
cwde
push
dec
mov
outs
fmul
in
sbb
mov
(bad)
les
ins
jecxz
fimul
movs
scas
repnz
stos
test
or
dec
jo
les
rcl
test
test
pop
xchg
adc
inc
mov
xchg
fwait
jle
push
ja
outs
pop
push
xchg
(bad)
mov
popf
out
es
jge
jl
loop
retf
popa
outs
scas
and
mov
sub
icebp
pop
cmp
fwait
push
sub
dec
lea
or
leave
scas
out
xchg
jb
leave
rcr
add
xchg
aad
sbb
and
jmp
arpl
mov
enter
jg
add
jno
repnz
dec
popa
jle
test
push
sub
add
xor
in
jmp
sbb
jg
mov
bswap
imul
mov
sbb
push
dec
or
loopne
cmp
fdivrp
test
fistp
cmps
or
ret
jbe
es
inc
push
enter
aas
jns
mov
stc
sbb
(bad)
div
and
and
add
imul
sbb
sub
or
not
(bad)
es
pop
add
(bad)
call
inc
or
and
ins
in
arpl
jp
pop
shl
loop
xor
daa
shl
xchg
frstor
push
sbb
xor
imul
inc
ins
addr16
sub
mov
sub
(bad)
pusha
arpl
fst
and
je
or
mov
lods
pushf
xor
push
xor
jmp
push
stc
sbb
xchg
mov
dec
dec
ret
mov
xchg
pop
xchg
or
call
cmp
pop
imul
jmp
ror
in
jmp
xchg
imul
out
call
pop
mov
dec
ins
icebp
inc
imul
or
(bad)
scas
fbld
mov
dec
scas
cli
hlt
or
or
and
les
inc
jp
jmp
out
push
test
fs
(bad)
xchg
mov
xor
and
cmp
in
aam
iret
cdq
(bad)
das
scas
(bad)
mov
mov
mov
aas
pop
test
push
aas
push
pusha
retf
or
mov
mov
xlat
jne
icebp
popa
dec
or
or
call
or
push
hlt
cld
lods
mul
retf
cmp
push
sub
pop
mov
mov
aad
cmp
mov
xchg
outs
test
(bad)
movs
gs
movs
push
stc
jne
ds
lahf
sub
lea
jle
sub
pop
mov
jle
(bad)
fcom
xor
fmul
push
enter
mov
std
or
inc
movs
inc
loop
mov
fisub
and
into
fstp
fcom
outs
jl
in
lock
jmp
xchg
(bad)
push
mov
push
mov
test
mov
hlt
fisubr
sub
test
dec
cs
rcr
std
sbb
mov
sub
mov
dec
jge
cwde
pop
(bad)
fwait
pushf
xchg
mov
cld
mov
outs
cmps
loop
sub
push
jnp
js
gs
adc
lds
xchg
stc
jecxz
packssdw
mov
jmp
dec
cdq
sahf
test
cmps
addr16
js
sti
mov
es
(bad)
cld
lock
pop
and
cmp
push
in
retf
in
aas
pop
push
mov
outs
gs
jmp
cld
js
(bad)
cli
xchg
pop
push
pop
sbb
into
iret
add
out
ret
iret
adc
test
pop
fstp
in
ficom
test
jno
or
aad
sbb
and
mov
fst
dec
data16
sbb
pop
sub
xor
mov
fdivr
js
cld
test
ds
out
sahf
imul
xlat
push
jle
push
sbb
sub
pop
jb
sar
iret
xlat
mov
mov
mov
ror
push
adc
(bad)
(bad)
and
std
mov
stos
pop
loop
fild
(bad)
cmp
(bad)
mov
and
or
inc
jle
jno
aas
adc
stos
loopne
or
xchg
cmps
fmul
in
jnp
cmp
in
xor
cld
push
pop
fdiv
cld
cmp
ja
cmp
(bad)
xor
sbb
cmp
push
repz
je
cmp
lock
mov
and
or
pop
rol
mov
mov
icebp
mov
ja
out
sbb
gs
push
and
and
je
or
inc
repz
push
scas
pop
mov
pop
test
cmp
sbb
out
push
and
arpl
dec
push
xor
sbb
jge
fiadd
pop
or
sbb
jecxz
add
inc
pop
mov
jb
adc
dec
sub
fmul
sub
jnp
add
out
loopne
pop
mov
ds
mov
jp
out
dec
push
pop
pushf
leave
xor
jno
cli
inc
sub
push
into
or
repz
mov
or
out
clc
call
ret
cmp
out
jnp
cmovnp
sar
and
xor
jno
cmp
cmp
in
dec
push
xchg
and
or
cld
cdq
sub
xchg
out
imul
fwait
ror
sar
mov
nop
iret
ret
mov
dec
or
outs
scas
adc
push
out
xchg
dec
int3
cmp
movs
movs
inc
mov
jp
add
mov
and
test
cmp
aam
in
sbb
push
add
adc
dec
imul
xchg
aaa
inc
cmp
pop
adc
ret
stos
pushf
lock
push
mov
das
out
(bad)
cmp
int3
call
lahf
fs
aam
push
repnz
(bad)
inc
inc
or
push
lods
loop
or
test
push
mov
in
pusha
or
ins
sbb
mov
(bad)
inc
(bad)
std
mov
push
into
add
(bad)
fs
js
push
add
push
test
xor
adc
test
jmp
mov
mov
fnsave
mov
or
ret
das
pop
xor
aas
xor
mov
xchg
fdivr
out
ss
lock
xchg
inc
inc
cs
sub
enter
repnz
fidiv
cmp
loope
fmul
push
mov
sub
mov
xor
dec
mov
sub
outs
(bad)
in
fdiv
loope
ss
(bad)
jle
je
and
addr16
jno
sub
cmp
xor
cmps
sti
aam
or
dec
mov
and
cmp
loope
mov
fsubr
(bad)
ds
xor
or
fwait
fwait
popa
ret
push
into
add
in
pop
mov
add
mov
stos
inc
xor
cmp
fld
mov
sbb
not
hlt
movs
add
arpl
jno
push
iret
arpl
cmc
es
ss
in
or
pop
in
lods
lock
pop
and
lahf
sub
jo
push
mov
jg
das
push
jmp
lods
inc
adc
aas
xchg
dec
(bad)
pusha
(bad)
mov
icebp
repnz
mov
sti
pop
mov
adc
mov
adc
in
scas
cwde
shr
xor
pushf
shl
pusha
and
xchg
xchg
test
adc
pop
mov
out
dec
sbb
adc
test
sub
inc
jnp
mov
test
and
xor
retf
jmp
sbb
fild
sahf
fneni(8087
out
push
sub
cmp
push
dec
js
dec
fiadd
inc
pop
sti
xchg
add
rcr
or
pop
sub
cwde
(bad)
inc
loope
sub
push
dec
lds
inc
sub
jbe
pop
adc
sbb
mov
push
(bad)
or
test
xchg
ss
lock
dec
adc
fdivrp
mov
pop
inc
adc
(bad)
cmp
daa
ds
mov
pop
xlat
shl
adc
xor
(bad)
mov
or
repz
cs
popf
cmp
test
xchg
sti
lods
pop
dec
out
scas
loope
mov
sti
xchg
mov
pop
add
sbb
add
pop
or
inc
out
push
std
ds
xchg
gs
std
and
push
lds
aas
inc
adc
outs
and
(bad)
out
(bad)
fnsave
scas
andps
popf
cmp
mov
or
and
jecxz
movs
hlt
lahf
ret
cmp
aam
mov
js
fdiv
inc
scas
xlat
pop
xor
pop
in
rcl
fcomp
sub
inc
mov
cwde
sbb
jmp
enter
fistp
fsubr
data16
push
nop
add
adc
shl
pop
fidivr
push
hlt
mov
scas
add
into
xor
xor
in
scas
fldenv
or
lock
jl
lea
xchg
push
shl
or
sbb
test
bound
sub
sub
(bad)
stos
leave
pop
mov
inc
scas
jecxz
ret
pusha
xor
mov
mov
xor
jbe
mov
lock
push
or
rcr
jle
rcl
neg
sbb
mov
adc
mov
jb
xchg
scas
inc
xor
loop
out
dec
daa
arpl
sti
out
mov
cs
mov
mov
push
jge
call
add
mov
fcmovnb
cmp
inc
sub
and
push
xor
sbb
arpl
adc
addr16
xor
dec
and
je
icebp
out
jmp
imul
cmp
ret
gs
dec
xor
cmp
movs
inc
cmp
(bad)
stos
sti
daa
dec
int
jge
jl
int3
adc
adc
je
push
sub
pop
xchg
xlat
and
clflush
test
pop
sub
les
xchg
cld
mov
jns
fimul
hlt
cmps
cs
test
fnstsw
movhps
(bad)
out
push
(bad)
retf
call
mov
imul
mov
mov
fst
jno
pop
mov
outs
push
mov
cmp
stos
sbb
adc
std
jmp
fisttp
(bad)
aas
rol
call
cmp
aam
cwde
pop
mov
repz
or
and
dec
pop
lea
jb
xchg
cwde
ret
jmp
dec
nop
cld
lahf
xchg
in
fidiv
mov
push
aaa
sbb
jecxz
(bad)
jp
ins
cmc
ret
or
dec
adc
sub
pop
inc
cmp
mov
loope
mov
loopne
imul
push
mov
or
repnz
push
lock
xchg
in
xor
inc
pushf
mov
ror
pop
add
pop
xchg
jmp
dec
mov
and
add
ds
lods
adc
cs
cwde
fild
jno
cwde
or
cs
adc
ins
loopne
cmp
add
(bad)
out
gs
movs
jno
ins
nop
arpl
out
arpl
mov
es
inc
popf
cli
das
cmp
pop
add
or
add
mov
test
xchg
push
sahf
mov
int3
mov
shr
ins
movs
and
sti
or
mov
adc
addr16
sbb
sub
adc
sub
pop
adc
push
shl
bound
cmp
add
mov
dec
cmp
xor
rcl
mov
sub
call
fild
lock
sub
cli
movs
enterw
adc
xchg
xor
sbb
jmp
jnp
cmp
mov
ror
dec
jge
cmp
xor
add
jmp
pop
call
outs
dec
or
cmp
cmp
inc
fldcw
div
mov
push
lahf
jle
mov
pusha
cmp
push
inc
idiv
jp
sbb
dec
iret
sti
pop
xor
(bad)
mov
cmp
sbb
fidivr
rol
xchg
adc
(bad)
adc
stc
xchg
xchg
repz
les
inc
sbb
std
ss
enter
sub
add
fnstcw
mov
push
addr16
xchg
jl
push
pop
adc
rcr
add
and
jae
mov
(bad)
push
data16
inc
arpl
retf
sub
pop
push
ficom
cmc
sbb
sbb
aas
clc
cmp
mov
outs
cld
and
sub
lods
and
push
fdiv
in
call
push
cs
add
mov
scas
ret
fiadd
xchg
or
loope
add
in
aaa
cwde
lods
or
lea
imul
add
fadd
loopne
std
mov
sub
outs
cmc
and
mov
mul
call
add
dec
inc
ror
sub
shl
repz
cmp
xchg
cld
xchg
fdiv
std
fidivr
jmp
pop
fnstcw
in
lea
nop
push
sbb
clc
inc
xchg
rol
in
push
xchg
jns
retf
aam
(bad)
fcomp
mul
loope
retf
xchg
sbb
dec
js
mov
std
movs
call
push
test
push
mov
mov
cmp
jns
js
stc
(bad)
ficomp
add
call
add
ret
cld
mov
cmc
or
jmp
repnz
xor
pop
sbb
cmp
leave
xchg
add
xchg
or
jo
push
lahf
mov
std
pop
jmp
or
jle
retf
push
out
pop
mov
xor
int3
add
lock
push
inc
mov
xor
ret
mov
and
(bad)
mov
stc
enter
add
call
or
call
pop
rol
ins
or
loope
movs
pop
xchg
or
jle
mov
cs
xlat
sub
imul
daa
dec
or
popf
or
push
pandn
pop
push
call
add
mov
daa
sub
out
or
dec
cwde
sti
adc
push
cs
loope
or
loope
and
pop
es
push
and
ficom
mov
inc
or
and
outs
scas
pop
push
mov
retf
jmp
outs
pop
pop
xchg
or
inc
xor
and
test
(bad)
sahf
sti
jge
(bad)
xchg
gs
imul
out
jne
test
mov
ret
sub
mov
xchg
aaa
test
sbb
cmp
gs
add
rol
cmps
xchg
sbb
adc
sbb
push
mov
xor
xor
push
aam
xchg
aam
call
sub
idiv
scas
cmp
cmps
mov
pop
test
jg
inc
and
mov
shr
mov
inc
pop
or
jg
ret
jo
jp
xor
imul
inc
fistp
fisttp
jecxz
dec
push
xchg
fcomp
sbb
(bad)
(bad)
sbb
xchg
arpl
je
fxch
sbb
mov
and
aaa
neg
mov
inc
int
add
movs
jne
in
lahf
loopne
int3
push
pop
sub
fsub
mov
cmp
push
pop
rol
mov
mov
and
shr
sbb
(bad)
rcl
xchg
test
xchg
pop
adc
je
mov
test
in
ins
mov
call
mov
mov
fld
push
ret
xchg
fs
jle
dec
cmps
inc
in
adc
(bad)
lahf
xchg
imul
mov
mov
pop
pop
icebp
test
jge
sub
pop
int3
test
mov
jmp
xchg
pop
clc
dec
dec
ficom
mov
cmps
pop
repnz
jbe
jg
push
inc
cld
leave
mov
xchg
mov
add
loop
ret
dec
mov
cmp
dec
ja
not
xor
enter
xor
jmp
push
into
and
(bad)
cmps
xor
mov
shr
add
and
(bad)
add
call
jmp
sbb
mov
xchg
mov
lods
push
or
scas
pop
jle
stos
sub
int3
scas
cld
out
dec
push
mov
or
mov
(bad)
sbb
movs
add
loopne
and
aad
lods
jbe
(bad)
ins
mov
into
mov
fucomip
movs
rcl
jmp
xor
(bad)
xchg
push
out
adc
shl
repz
in
les
cmc
add
xchg
(bad)
mov
jno
pop
fnstsw
int3
leave
push
adc
bound
pusha
cmp
(bad)
or
jmp
cmp
fdiv
or
dec
adc
add
ret
popa
scas
sar
push
jo
iret
sbb
test
div
outs
gs
dec
cmp
cmps
dec
xor
aas
mov
mov
fimul
sbb
gs
pop
call
mov
dec
mov
aad
push
enter
test
imul
push
pusha
pop
inc
clc
jns
sub
dec
div
adc
(bad)
lods
jg
call
nop
cmp
sbb
mov
je
sub
lds
jecxz
adc
jl
xchg
out
push
mov
push
mov
add
adc
lahf
bound
test
in
out
adc
sti
nop
xor
sti
stc
mov
(bad)
into
imul
(bad)
and
(bad)
outs
ror
add
sahf
(bad)
ja
jmp
mov
sub
pop
ficomp
(bad)
sbb
ficom
inc
ins
cmp
xchg
mov
fisttp
cdq
jnp
repnz
jmp
ss
jle
ds
je
push
in
ficom
mov
push
clc
sbb
dec
out
adc
lods
sub
mov
loope
not
inc
lods
sub
push
adc
dec
fsub
fwait
jg
or
adc
pop
rol
push
(bad)
mov
sbb
imul
lds
mov
sbb
outs
std
xor
enter
mov
xlat
loop
jb
inc
cmp
ins
loop
push
bound
fst
add
call
lods
aad
cmc
inc
int
push
mov
int3
cld
jmp
stc
stc
scas
leave
arpl
leave
jg
std
add
push
lahf
fwait
adc
xchg
mov
stos
sti
jecxz
iret
adc
push
adc
sub
xor
gs
pop
popf
sbb
movs
in
jnp
ret
pop
mov
or
loope
(bad)
mov
retf
pop
push
pusha
mov
cmps
push
mov
lahf
repz
xchg
adc
xchg
sti
adc
daa
mov
and
and
call
icebp
ja
dec
mov
mov
repz
std
loope
rcr
cmc
mov
(bad)
cmps
std
inc
xchg
mov
nop
in
add
jle
mov
jge
adc
lods
pop
loopne
jecxz
dec
fistp
(bad)
sar
vpmaddwd
or
jecxz
xchg
leave
sbb
xor
push
not
sbb
jne
push
sbb
and
ficom
add
ret
and
xlat
add
loop
(bad)
and
mov
aad
fldcw
push
in
pop
fwait
xor
mov
mov
(bad)
call
sub
pop
ja
outs
push
cmp
adc
idiv
sbb
and
inc
inc
add
and
jle
cdq
lea
or
xor
aaa
dec
ds
xor
cs
xchg
aas
out
nop
mov
mov
mov
fwait
out
stc
adc
cmp
pop
pop
icebp
fisttp
sar
ja
inc
adc
xchg
and
jne
test
clc
jecxz
loopne
xchg
push
and
pusha
(bad)
dec
call
dec
js
mov
les
mov
rcl
and
jae
add
sub
das
adc
jp
cmp
(bad)
iret
retf
dec
sahf
inc
and
mov
mov
fwait
out
and
rol
cmp
add
loopne
fisttp
lock
mov
xor
in
xchg
inc
jb
sbb
(bad)
sub
mov
enter
jno
and
dec
lea
xor
mov
test
xchg
out
jmp
dec
xchg
das
push
cmp
loope
mov
push
fdivr
in
mov
jge
cmp
sub
aas
scas
xchg
mov
pop
fstp
outs
jnp
push
les
lock
and
loopne
pop
les
add
ins
xchg
mov
out
pop
es
xchg
sahf
cmps
push
xchg
jno
test
cmp
pushf
outs
jmp
test
cmp
rdpmc
pusha
(bad)
fdiv
sub
xchg
mov
stos
push
mov
cs
mov
xchg
inc
mov
(bad)
inc
imul
out
or
test
pop
popf
pushf
and
or
adc
mov
imul
daa
cmps
gs
jg
jmp
imul
cld
and
cmp
iret
sub
ss
repz
lock
iret
xor
fidiv
pop
inc
fxch
dec
aaa
test
and
into
enter
test
xchg
jl
fs
mov
xor
mov
xchg
lock
repnz
and
push
push
stc
loope
dec
mov
xor
jnp
daa
cmc
enter
cmp
sahf
or
sub
test
mov
inc
dec
sbb
xchg
adc
and
and
mov
cmc
jmp
sbb
inc
pop
push
clc
or
xor
fld
adc
mov
jmp
dec
stos
sub
mov
add
xchg
push
test
or
mov
dec
gs
dec
push
pop
sbb
push
sub
mov
in
fadd
jp
imul
push
(bad)
pusha
ret
sbb
or
fcomp
and
jmp
mov
push
adc
daa
or
mov
add
and
cmp
stos
or
mov
in
sbb
stos
or
or
xor
adc
cs
iret
cdq
dec
inc
mov
call
int3
mov
gs
push
xchg
test
adc
inc
movs
sub
ffreep
sbb
sti
mov
cmp
cmc
add
dec
xchg
cld
inc
leave
out
mov
jb
outs
mov
out
in
xchg
adc
ret
ret
push
mov
ins
xor
xchg
dec
add
cwde
sbb
xchg
(bad)
sub
inc
push
mov
sti
cmp
xchg
jge
and
jecxz
ss
push
jg
pop
fmul
push
mov
sbb
pop
cmps
int
mov
xor
(bad)
hlt
ret
xor
aaa
dec
and
sbb
add
test
scas
mov
pop
fisubr
add
and
icebp
(bad)
loopne
mov
out
sub
mov
xor
stos
xor
xchg
cmc
xchg
lock
and
popa
cld
or
sti
pop
xor
mov
pop
shr
ins
pusha
cli
test
test
ret
cmp
int3
adc
or
xchg
dec
and
mov
enter
sub
scas
rcr
pop
(bad)
sahf
inc
jl
loop
mov
nop
icebp
bnd
push
sub
rol
push
xor
in
mov
jbe
or
push
xchg
mov
pop
push
nop
out
mov
inc
pop
pop
push
and
pushf
cld
ins
retf
cmp
imul
neg
fisub
arpl
add
pop
inc
dec
mov
iret
lahf
xor
loopne
pusha
push
pop
mov
les
ins
sbb
and
ins
mov
fidivr
mov
and
in
sbb
pop
out
fsubr
out
enter
daa
add
mov
js
leave
mov
bound
int3
hlt
fwait
and
lahf
mov
mov
lods
shl
mov
sub
inc
and
jle
out
inc
popa
lahf
sbb
jne
mov
mov
inc
(bad)
mov
mov
aam
push
iret
lahf
pop
clc
push
adc
out
sub
pop
retf
mov
dec
add
inc
pop
dec
mov
mov
les
lods
xchg
inc
xchg
bound
cmp
cmps
jecxz
test
xor
mov
mov
or
aam
fistp
and
cmp
gs
retf
jnp
sub
sub
adc
jo
cmp
arpl
inc
imul
popa
gs
inc
cmp
pop
push
(bad)
dec
and
fst
les
inc
and
clc
jbe
std
ffree
sti
aas
mov
sub
push
xchg
sub
pop
je
call
xchg
fimul
gs
in
mov
fcomp
fstp
mov
xchg
das
jl
in
xchg
cmp
repnz
stos
mov
retf
dec
ins
adc
(bad)
out
aam
dec
cmp
push
mov
sbb
in
adc
cmc
push
xor
stos
shr
lock
mov
loop
rcl
cmp
stos
test
int3
lods
mov
jle
stos
(bad)
mov
js
adc
and
fs
icebp
jns
popa
test
pop
mov
xchg
xchg
lea
xchg
pop
dec
iret
push
add
dec
(bad)
jns
mov
aaa
mov
lahf
shl
adc
mov
inc
xchg
cmps
inc
hlt
cmp
xchg
arpl
cwde
sets
pop
aam
dec
test
hlt
mov
xor
cwde
aad
(bad)
repz
adc
push
clc
mov
popa
in
cld
xor
clc
clc
repz
lds
cld
sub
push
add
mov
outs
js
inc
ficom
jg
sbb
push
lea
rol
lea
mov
hlt
sub
(bad)
mov
loopne
pop
push
mov
fyl2x
cmc
out
cld
and
icebp
scas
or
push
xor
and
xchg
inc
clc
cmps
dec
cmp
xor
out
call
aaa
add
cmps
pop
xchg
pop
daa
mov
push
jmp
mov
sub
mov
fdivr
dec
and
call
mov
es
jno
jmp
out
mov
enter
test
mov
sub
mov
jno
jae
jno
call
js
jbe
mov
xchg
sub
sub
adc
xchg
xchg
repz
adc
cld
or
retf
push
dec
sub
sbb
jmp
push
out
imul
fidiv
ds
mov
rol
sbb
iret
mov
push
xor
cwde
aas
adc
jnp
cli
or
out
test
dec
sbb
ret
je
or
mov
bound
adc
sbb
mov
push
retf
int
daa
aas
push
test
shr
aad
push
mov
scas
jbe
cmp
out
cmp
push
pop
loope
xor
jmp
jecxz
loope
sbb
ins
mov
mov
jns
stos
dec
aas
dec
movs
dec
jae
fcomip
pop
test
pop
cmp
bound
mov
shl
div
in
aaa
imul
lods
and
mov
jmp
cwde
mov
push
dec
loope
add
mov
adc
pop
inc
outs
call
int
pop
les
addr16
pusha
into
dec
dec
xor
nop
fidiv
lds
xchg
into
aad
pop
rol
and
push
std
cmp
pop
push
cwde
push
xlat
xor
loope
clc
popa
or
add
div
arpl
xchg
leave
mov
pusha
sub
loope
mov
das
or
add
pop
pop
add
bound
arpl
ins
dec
cmps
inc
pop
mov
sahf
cli
cmps
out
xchg
ss
xchg
ja
enter
rcl
ins
push
mov
je
cmp
jge
pop
repz
or
push
dec
cmc
or
xchg
xchg
or
out
fild
jne
push
push
cmps
inc
int3
pop
lahf
in
loop
sub
mov
movs
imul
popf
cmp
push
pop
lea
les
(bad)
cmps
repz
mov
fisubr
cmp
shl
retf
movs
(bad)
aas
pop
rcl
das
out
or
js
dec
add
ss
jg
retf
adc
mov
das
mov
jmp
stc
or
iret
ja
(bad)
(bad)
sar
sub
jne
mov
mov
adc
retf
sbb
mov
iret
mov
leave
adc
test
mov
aad
add
inc
loopne
jnp
xor
stos
cli
pusha
int
sub
mov
call
add
pop
xlat
mov
fs
and
stos
push
fcomp
jg
or
and
push
loope
call
sub
or
in
xchg
inc
jmp
pop
add
mov
repz
adc
pop
aas
mov
mov
push
hlt
cmps
dec
xor
pop
fbld
ret
je
mov
xor
adc
into
pop
pop
in
xchg
inc
in
push
shr
nop
test
mov
push
sub
sbb
cmps
pop
add
sahf
gs
loope
pop
sbb
enter
adc
push
sti
fcomp
fsub
(bad)
pop
out
movs
xchg
cmp
xchg
and
jo
sbb
out
mov
shr
ja
aad
jge
add
(bad)
out
jmp
repnz
test
cld
jge
xor
mov
in
push
std
movs
jmp
fstp
push
mov
adc
xchg
loopne
mov
(bad)
push
leave
cmc
xchg
pop
scas
icebp
fs
das
(bad)
inc
inc
or
mov
xchg
int3
sub
sti
lods
cmps
cwde
lds
jmp
pop
mov
add
inc
xor
adc
cli
or
lods
shr
and
jp
mov
test
mov
mov
es
cmp
popf
shr
aas
lea
stos
fld
and
cmp
les
arpl
ins
cld
test
pop
and
xchg
inc
shr
ret
push
retf
es
ficomp
dec
jae
xor
mov
xchg
fbld
fisubr
icebp
scas
shl
xchg
lods
idiv
jmp
mov
ficom
sar
rcl
stos
and
lds
mov
pop
pop
retf
xchg
ficom
hlt
stc
ret
push
jb
jmp
iret
rcl
cmp
push
xor
mov
stc
add
xor
pop
add
jo
dec
stc
div
ins
cmc
fisub
sbb
repnz
ret
xchg
and
pop
into
cmp
(bad)
scas
ret
sar
cmp
dec
mov
cmps
jmp
sub
stos
cmp
outs
mov
dec
adc
addr16
loopne
scas
mov
xchg
nop
retf
mov
mov
cwde
adc
mov
push
add
fist
mov
mov
adc
and
jecxz
and
push
and
mul
jae
retf
xor
mov
cwde
call
xor
pusha
loopne
dec
jb
cld
fwait
xor
or
mov
test
fwait
lods
imul
ror
aaa
pop
inc
cld
fs
icebp
jl
div
sbb
jmp
popf
pusha
out
lea
adc
aad
push
mov
xchg
inc
or
pop
ins
in
sbb
mov
cmp
push
pushf
xor
lods
adc
in
pushf
adc
mov
arpl
dec
dec
xchg
xor
xor
cdq
cdq
xchg
call
pop
nop
xchg
inc
lds
adc
inc
xchg
dec
mov
out
int3
leave
or
clc
int
rcl
test
mov
mov
push
cli
jecxz
in
pop
or
arpl
jns
into
push
out
out
adc
add
sub
jb
dec
clc
inc
xchg
std
add
inc
jnp
stos
push
or
inc
cmp
sbb
mov
inc
or
scas
sub
adc
stos
out
jnp
ins
xor
dec
jg
add
lods
imul
mov
loop
loopne
jbe
mov
jg
ins
dec
xchg
test
fnstcw
mov
test
push
int
das
push
lahf
loope
imul
mov
sub
lods
cmps
jle
jae
popa
add
adc
jmp
in
mov
or
cmp
icebp
or
jne
dec
sub
stos
jp
xor
or
xor
repz
jl
mov
xchg
fsubr
int
movs
cdq
pop
sub
scas
mov
add
or
cmp
inc
repz
pop
lahf
xchg
test
xchg
aaa
adc
mov
and
retf
lods
push
mov
push
cmc
inc
mov
stos
xchg
test
aad
inc
std
jge
dec
retf
jmp
mov
out
(bad)
push
popa
dec
clc
pop
addr16
jle
jnp
adc
nop
pusha
xchg
sub
mov
mov
mov
test
mov
jns
fstp
push
sti
repnz
mov
jmp
adc
mov
sbb
pop
cmp
imul
test
xor
loop
pop
push
jnp
jb
push
cs
test
and
xor
adc
imul
in
inc
ror
bound
pusha
les
jno
cmps
jnp
ds
test
sbb
sub
repz
or
pop
cli
inc
push
push
sti
mov
pop
movs
dec
imul
or
inc
std
imul
or
ins
bound
in
ins
mov
push
into
dec
mov
imul
cmp
sti
cmps
pop
stos
fbld
fnstsw
pop
stos
inc
cwde
dec
jae
add
xchg
fwait
sbb
leave
call
rcl
xor
xchg
ds
add
jle
jae
loopne
adc
pop
out
inc
mov
pop
mov
jecxz
and
cmp
loop
push
jae
mov
mov
das
and
and
pop
mov
stos
fdiv
dec
cwde
inc
pop
and
not
sar
in
mov
mov
idiv
sub
hlt
mov
test
ror
push
movs
dec
rdpmc
ficomp
xchg
arpl
pop
retf
scas
sbb
sub
in
leave
pushf
mov
mov
ds
inc
scas
inc
xor
(bad)
test
mov
adc
adc
inc
aaa
fist
les
push
sbb
jo
cmp
dec
in
xor
out
data16
bnd
rcl
mov
and
(bad)
fistp
and
jmp
call
and
ret
dec
and
arpl
sub
add
movs
pop
pop
pusha
pop
pop
std
mov
out
cwde
into
mov
aas
pop
out
repnz
inc
push
out
jne
pop
rol
dec
xchg
mov
xchg
shr
jl
ret
ins
xlat
ins
mov
mov
inc
add
ss
push
pushf
fdiv
(bad)
mov
int3
movs
je
sbb
cmp
call
and
cmp
mov
sub
aam
fcomi
dec
aaa
fcmovnb
add
push
xor
movs
jmp
sub
adc
iret
sahf
iret
sub
pop
or
jae
mov
mov
xchg
(bad)
pop
(bad)
sub
push
push
ret
add
adc
sbb
cli
pop
cwde
xchg
loope
xchg
inc
out
adc
inc
into
mov
cdq
cmp
sbb
dec
fistp
arpl
pop
iret
pop
lods
pusha
mov
fwait
push
or
sbb
xchg
adc
out
(bad)
jl
stos
ret
or
fdiv
movs
jl
out
pop
xchg
sbb
out
mov
movs
adc
add
dec
dec
pusha
cmp
leave
leave
dec
pop
adc
ss
lods
jo
in
pop
mov
xlat
sub
test
gs
adc
xchg
fldenv
out
ror
dec
push
adc
or
xlat
dec
adc
(bad)
add
or
mov
sbb
lds
or
jmp
xchg
popa
adc
cmp
pop
lea
adc
cmp
fisttp
add
rol
into
fwait
popa
adc
mov
or
out
ds
and
es
fstp
pusha
retf
iret
jmp
outs
daa
cmp
ret
or
jb
push
ds
cmp
dec
aaa
mov
outs
in
xor
stc
push
out
adc
push
sti
dec
pop
ret
mov
add
(bad)
mov
cwde
(bad)
into
or
dec
push
cmc
jle
mov
aam
pop
daa
xchg
popf
repnz
dec
into
sahf
scas
mov
adc
pop
scas
test
cmp
fdivr
sti
pushf
dec
dec
out
imul
rcl
pop
cwde
sbb
scas
jo
pusha
fs
and
(bad)
push
mov
fwait
imul
fmul
jns
xor
loopne
and
mov
xor
push
mov
lock
arpl
jecxz
mov
add
mov
repz
pop
loop
xor
stos
push
pop
xor
test
cmps
push
or
and
cmc
ins
dec
ins
add
sahf
mov
xchg
mov
out
dec
int
jnp
cmp
jns
mov
sub
dec
imul
adc
mov
mov
fild
dec
inc
mov
mov
(bad)
icebp
dec
loopne
jns
outs
inc
clc
ror
in
cmp
cwde
in
inc
fs
sbb
cdq
jnp
ret
push
sub
sahf
xor
retf
fimul
ret
dec
dec
sub
dec
(bad)
mov
lea
int3
add
sub
inc
sub
div
movs
mov
sub
sbb
add
in
jmp
in
xchg
jmp
les
rol
shr
mov
call
and
int3
xor
cmps
push
cmps
jbe
ins
test
sbb
test
stos
lods
jmp
xchg
mov
and
inc
fwait
ja
xchg
xor
dec
mov
mov
sub
push
mov
std
sub
jno
shl
jge
stc
mov
jne
(bad)
xchg
cmp
cdq
retf
adc
adc
pop
adc
(bad)
jbe
ins
mov
scas
adc
inc
xor
out
imul
jp
push
rcr
imul
push
loopne
pop
xchg
pop
xor
jae
xchg
dec
test
les
jmp
iret
xchg
sbb
outs
sar
inc
lods
cdq
std
test
mov
lds
dec
xor
push
jmp
loopne
and
cmp
dec
xlat
lock
mov
data16
or
neg
inc
(bad)
jmp
mov
pop
imul
(bad)
cmp
jne
icebp
pushf
and
jg
cmp
jge
add
retf
and
mov
pop
inc
cmp
shl
js
(bad)
lahf
cmp
fisubr
sbb
das
aaa
inc
jo
jb
or
rcl
adc
in
movs
sub
iret
pop
int3
push
(bad)
dec
mov
in
jno
cmp
(bad)
fistp
inc
repz
mov
jbe
adc
sub
cdq
or
inc
jae
pop
nop
outs
xchg
jmp
add
jmp
push
or
mov
inc
adc
out
xchg
mov
out
or
cmps
mov
sar
mov
sbb
mov
jl
jge
dec
push
cwde
sub
push
pushf
jp
out
mov
and
pop
cmp
push
test
in
mov
loopne
inc
xchg
add
or
inc
sub
out
in
not
icebp
int3
sbb
xor
adc
mov
xor
test
fcmovnb
(bad)
jno
xchg
push
pushf
jle
mov
repnz
add
ret
inc
cmc
push
rcl
xor
lock
push
xchg
push
mov
jmp
les
out
push
or
fidiv
(bad)
jmp
idiv
cmps
cwde
push
mov
jns
xor
jnp
out
iret
in
jg
pop
add
popa
xor
cli
xchg
loop
bound
inc
dec
lods
adc
cmp
fist
dec
pop
xchg
retf
cmp
xchg
mov
gs
mov
pop
push
sub
add
pop
add
pop
adc
push
js
dec
pop
sub
push
xchg
adc
inc
mov
mov
ja
nop
lods
popa
jge
scas
test
xor
pop
scas
fstp
outs
aas
out
and
aam
movs
aas
(bad)
xor
lock
inc
retf
xchg
xor
pop
jmp
cmps
std
jp
js
dec
xchg
mov
or
in
or
cmp
xchg
outs
out
xchg
mov
mov
pusha
aas
mov
mov
or
imul
inc
into
push
mov
test
pop
inc
or
jl
lock
and
inc
hlt
cmp
dec
jge
dec
cwde
dec
retf
pop
or
out
jge
std
dec
and
cwde
xlat
sub
push
jge
inc
fistp
test
xor
test
dec
mov
xor
pop
lods
imul
push
pushf
imul
sub
(bad)
mov
sub
push
daa
sub
mov
fcom
sub
mov
mov
add
into
out
adc
(bad)
pop
lods
ret
inc
fist
adc
push
and
and
(bad)
retf
cdq
xchg
push
imul
xchg
aas
lock
cli
mov
jb
xor
outs
or
jb
fcmovnu
ins
pop
rol
loope
arpl
adc
ret
inc
push
movs
push
inc
sbb
ss
mov
js
(bad)
cwde
mov
add
and
or
or
adc
sbb
lahf
add
xchg
out
icebp
add
sub
push
out
cmp
push
nop
rol
jle
imul
outs
xor
fucomi
imul
xchg
dec
idiv
or
mov
push
adc
cwde
jb
mov
sahf
mov
cld
mov
js
loopne
out
sar
mov
dec
into
mov
cmps
retf
push
popf
add
inc
push
sub
outs
(bad)
and
int3
jae
jl
pop
sub
int
test
rol
ja
in
lds
xor
adc
in
ffreep
jle
xchg
leave
iret
jle
je
imul
retf
ret
inc
pop
mov
sbb
mov
popa
fcmovu
add
shr
or
iret
push
push
mov
push
xchg
stos
movs
stc
mov
sar
xor
(bad)
mov
popf
jmp
pushf
push
rcl
jmp
push
fcmovu
inc
jge
outs
adc
jge
icebp
imul
icebp
mov
sub
and
dec
fwait
pop
add
std
out
stos
pop
cmps
push
mov
outs
add
imul
jg
imul
rcr
pop
adc
nop
retf
pop
add
adc
fild
mov
sbb
dec
or
mov
sub
call
mov
bound
lods
pop
out
aad
inc
out
mov
sub
je
fnstcw
xchg
repnz
push
adc
or
pop
stos
aas
pop
jno
dec
fldz
mov
pushf
sub
push
mov
iret
es
inc
adc
cli
pop
test
dec
jns
lahf
ins
adc
xor
mov
cs
sti
push
loopne
mov
xchg
sqrtps
cmp
ss
push
inc
ret
inc
mov
add
jmp
add
jl
fwait
in
addr16
nop
out
retf
(bad)
ds
mov
adc
(bad)
or
jle
jbe
fwait
retf
inc
mov
repz
(bad)
or
jnp
iret
jb
gs
add
lahf
(bad)
(bad)
or
je
fcomp
fsubr
(bad)
cwde
ds
std
pop
jae
mov
pusha
in
push
push
dec
cli
adc
lds
xor
adc
loop
mov
pop
inc
call
cmc
cli
cmc
cmp
push
imul
movs
rcr
pop
xchg
fs
and
xchg
mov
fwait
cmc
sbb
mov
lods
lock
jge
mov
aad
sub
xor
nop
push
outs
cs
test
je
call
and
loop
stos
test
stc
push
mov
scas
xlat
add
jo
outs
and
(bad)
daa
retf
daa
and
test
pop
lods
lea
mov
imul
xor
ins
pop
fndisi(8087
ret
retf
jb
jne
cmps
mov
mov
cmp
cmp
cmp
(bad)
push
push
mov
mov
repz
aad
cdq
mov
xchg
and
test
inc
call
cmp
xor
and
adc
xor
cmps
lea
int
pop
std
stos
nop
out
int
pop
fsubr
ret
xchg
cld
or
add
retf
dec
cmps
sqrtss
cmps
mov
mov
jmp
mov
ret
clc
xchg
cmp
sbb
dec
jmp
mov
mov
push
push
mov
in
pop
lods
cmc
add
pop
in
movs
push
cmps
in
out
ja
mov
inc
int
mov
lds
movs
xor
push
pop
pop
push
(bad)
push
sub
pop
jge
sub
(bad)
mul
in
jb
test
pop
mov
pop
in
aas
mov
int3
mov
add
cmp
jno
(bad)
out
and
jb
cdq
sub
inc
stos
and
sub
fisub
push
add
xor
mov
popa
fild
xchg
in
outs
cli
in
lods
push
adc
dec
jmp
sti
xchg
mov
sar
or
ss
jb
out
or
xor
jae
shr
add
push
inc
ds
dec
scas
cmp
cmp
mov
test
js
faddp
imul
daa
sub
ss
dec
outs
iret
push
mov
inc
xor
mov
and
xchg
sbb
ins
cmp
add
ret
imul
inc
inc
adc
mov
int3
add
out
push
cmps
imul
jmp
sbb
cmps
rcr
movs
stos
into
adc
jne
adc
push
push
push
fcomp
add
loopne
loope
ss
and
pop
mov
int3
cmp
jecxz
lods
jno
ins
call
outs
inc
enter
adc
mov
pop
cwde
fbld
or
pop
retf
(bad)
or
pop
lds
cld
enter
fadd
call
inc
cmp
lock
loop
ins
xor
jno
push
mov
jo
adc
jmp
sub
loop
sti
inc
in
lds
fcmovu
int3
lods
fsubr
lods
sbb
and
outs
mov
cmp
jmp
inc
mov
or
or
outs
pop
dec
sub
movs
out
test
jmp
mov
add
add
cmp
(bad)
mov
xor
fcom
or
mov
(bad)
aad
and
adc
bound
xor
out
dec
sub
xor
adc
rcr
dec
and
dec
push
popa
jno
scas
(bad)
cli
inc
pop
pop
mov
sbb
cmps
pop
push
fcom
scas
inc
push
arpl
hlt
fmul
gs
pop
add
or
aam
addr16
cwde
mov
in
loopne
mov
ffree
(bad)
out
loop
int3
fs
mov
ins
or
mov
fsubrp
and
sub
or
cld
mov
push
and
push
sub
and
push
pop
repz
push
out
jmp
or
test
inc
out
sbb
jg
int
dec
fbstp
cmps
xchg
cmp
icebp
mov
sbb
or
aaa
jp
icebp
dec
(bad)
inc
cwde
mov
mov
and
xor
adc
cmps
xchg
imul
inc
movs
jnp
rdpmc
call
test
cmc
bound
sub
call
and
push
add
sub
pop
cmps
hlt
or
call
add
hlt
rcr
int
mov
addr16
push
into
dec
mov
dec
jnp
add
cld
movs
adc
repnz
sti
add
jmp
jp
rol
jne
loopne
mov
and
sub
mov
jno
inc
cmp
shl
adc
sti
xchg
cmps
int
ins
add
or
test
mov
xor
movs
ret
test
enter
add
pop
dec
clc
in
or
adc
and
mov
mov
shr
int
imul
or
aas
lea
push
inc
scas
push
jnp
cmp
fcom
ret
loope
aas
mov
mov
jecxz
xor
aad
xchg
jbe
adc
sub
or
xor
repz
push
jle
mov
call
test
aaa
gs
xchg
sar
loop
inc
or
mov
mov
fcompp
fs
push
jmp
addr16
leave
pop
sbb
xchg
lahf
xor
int
loope
sbb
iret
mov
push
pusha
repz
ror
sub
bound
add
cmc
add
movs
jg
mov
or
int
sbb
add
aad
rcl
pop
cdq
xlat
or
mov
pop
and
aad
out
add
lds
out
into
dec
pop
add
cmp
lods
dec
outs
jl
cs
lods
push
repnz
and
mov
push
out
jae
add
mov
retf
(bad)
scas
ss
adc
pop
add
xor
jns
shl
pop
(bad)
pop
mov
pop
or
out
sub
fsubr
push
fnstcw
sbb
(bad)
mov
or
hlt
out
arpl
call
jmp
push
out
fst
sahf
iret
jne
xor
mov
push
xchg
movs
mov
fsub
mov
cmp
mov
mov
dec
push
outs
push
repnz
mov
call
daa
add
out
pop
sbb
jno
jle
aas
xor
int3
ret
outs
inc
repnz
inc
cmp
call
dec
and
mov
sahf
sar
ja
rol
xor
out
mov
sbb
push
icebp
cmp
cmp
jns
scas
std
sbb
sbb
sub
sar
or
xchg
cwde
scas
mov
fsubr
pop
pop
repnz
mov
lahf
addr16
cmc
movs
stos
out
cs
mov
out
inc
sub
cmps
popa
inc
mov
dec
fwait
adc
sbb
xchg
sub
leave
or
or
push
cmp
inc
out
cmp
pop
(bad)
sti
push
pusha
in
repz
fldcw
xchg
mov
pop
ret
jae
dec
rol
rcl
or
(bad)
ins
cld
adc
add
ret
and
pop
xchg
fcomp
ret
cld
fs
mov
ins
jb
ds
dec
lods
and
mov
pop
test
and
or
jae
mov
dec
fst
cmp
arpl
add
inc
fistp
jg
push
inc
fisttp
xor
pusha
shl
not
ret
repnz
push
pop
lea
ffreep
xor
or
xchg
pop
(bad)
rol
jo
push
nop
ss
stc
and
lods
or
inc
xchg
mov
jo
pop
pop
rcr
push
add
int
mov
mov
loop
leave
sbb
xchg
mov
test
cmp
jns
jg
ret
xchg
or
ss
add
outs
enter
das
aad
in
jl
arpl
test
pushf
pusha
repz
fdiv
lods
mov
push
enter
jno
pop
mov
xchg
inc
pop
push
lods
cmps
sbb
xor
add
ss
ins
mov
ss
inc
outs
xlat
mov
cld
out
push
ror
sar
mov
add
in
mov
retf
ror
test
mov
sbb
xchg
lock
jmp
test
sbb
ja
test
sbb
add
pop
in
jno
faddp
cmp
xchg
jmp
loope
xchg
pop
dec
jbe
pop
repnz
mov
push
nop
and
mov
and
pop
(bad)
cmp
addr16
cmc
jbe
aad
adc
and
mov
inc
dec
adc
out
jae
jae
ret
xchg
push
adc
push
sti
cmp
addr16
sub
ret
aam
mov
mov
(bad)
aas
inc
lds
sbb
sub
fstp
mov
lds
dec
test
pop
inc
aaa
pushf
test
vprotb
or
cs
cld
fist
xchg
dec
scas
dec
mov
adc
pop
and
loopne
and
test
call
mov
hlt
popa
sub
cmp
lods
sti
push
inc
std
in
xor
les
movs
xchg
cmc
imul
dec
bound
xchg
xor
jno
js
mov
mov
cmps
aaa
pop
les
das
sbb
jmp
or
dec
cld
ins
push
dec
movs
aam
cmp
in
rcr
out
adc
sub
push
cs
push
xor
test
nop
push
mov
out
sbb
jecxz
jmp
mov
jo
cmps
sti
std
ja
fld
ret
loope
loop
mov
inc
add
dec
call
addr16
loopne
call
loop
jmp
push
dec
lea
cli
push
call
jo
cmp
sub
(bad)
shr
xchg
adc
lock
sbb
adc
pop
fidiv
pop
dec
fld
out
js
inc
pop
add
cs
jno
mov
jnp
ds
sahf
hlt
or
adc
and
cld
lods
lahf
xchg
inc
adc
jns
xchg
hlt
adc
jne
cmp
cmp
jge
dec
nop
imul
aas
dec
sub
adc
pop
inc
popa
sbb
mov
imul
cmps
clc
jbe
mov
push
and
add
cmp
adc
stos
jbe
jl
rcr
mov
pop
pop
sub
mov
mov
lods
mov
mov
jo
xchg
call
dec
adc
add
in
mov
or
scas
jo
lods
fild
ins
xor
mov
idiv
imul
xchg
mov
pop
inc
adc
jmp
mov
lea
inc
outs
popa
dec
cmp
mov
in
loop
shl
rcl
sub
ror
mov
int3
adc
sbb
call
fwait
ret
dec
(bad)
jbe
test
push
(bad)
int3
arpl
sub
test
cmps
clc
loope
mov
push
mov
and
add
and
mov
stos
mov
out
sbb
frstor
mov
ins
xchg
icebp
mov
adc
popf
mov
jo
pop
mov
hlt
mov
jmp
rcl
lods
push
aaa
sti
sahf
outs
jno
add
dec
sbb
adc
pop
cmp
cmc
out
push
test
jmp
fld
cmp
jmp
rol
ss
gs
(bad)
cs
stos
bnd
mov
mov
aam
jns
jo
jnp
out
or
xor
xchg
movs
and
xchg
xchg
dec
xor
into
adc
sbb
add
(bad)
dec
or
aaa
cmp
popf
sub
pop
mov
mov
repz
add
cmp
fs
adc
retf
idiv
cmp
lock
inc
sub
fild
or
shl
mov
and
fisubr
jg
cmp
lods
sub
fucom
(bad)
aad
mov
mov
jmp
stos
sbb
inc
rol
lods
fisub
ds
xor
(bad)
fadd
lahf
cli
push
push
out
jp
pop
ins
push
jg
push
jb
cli
hlt
sbb
pop
nop
push
jp
mov
jo
sbb
test
cwde
rol
fsubr
push
loop
aad
imul
adc
ret
repnz
cmp
or
jle
cwde
cmp
(bad)
aas
sub
shr
dec
cdq
cdq
pop
sub
dec
xor
mov
cmp
(bad)
aam
aaa
fist
jg
loope
and
bound
fnstsw
loop
dec
hlt
jl
les
jg
sub
push
fsub
inc
and
pop
push
jg
aad
add
cmp
iret
pop
push
push
pop
sbb
ja
pop
pop
mov
jle
sbb
and
or
pop
leave
test
sub
mov
movs
push
enter
push
js
test
jg
shl
movs
ins
sub
mov
dec
pop
sub
jl
fcomp
in
or
adc
popf
push
xlat
(bad)
fcomi
ins
mov
cmp
nop
mov
add
iret
and
test
mov
jecxz
das
jns
gs
scas
mov
lahf
or
iret
ret
test
pop
mov
pop
jb
sbb
outs
fwait
jg
sahf
movs
pushf
popa
mov
out
sbb
xlat
(bad)
les
imul
and
rcr
test
je
mov
jbe
cdq
pop
push
popa
inc
pop
mov
std
and
lock
adc
push
xchg
je
pop
mov
sbb
icebp
push
push
int3
pop
int3
mov
fild
inc
xchg
into
pop
jae
dec
mov
loop
in
ja
ss
ja
icebp
ins
adc
outs
js
dec
call
in
inc
(bad)
lea
jle
xor
dec
sar
or
dec
jecxz
leave
(bad)
repz
clc
fild
pop
push
dec
sub
movs
mov
(bad)
fimul
pusha
(bad)
jmp
movs
adc
out
mov
in
pop
call
jle
les
sub
(bad)
fstp
es
or
add
cld
xor
and
loopne
test
gs
sbb
scas
call
dec
xor
adc
adc
push
dec
aaa
ja
push
mov
shr
addr16
xor
push
sub
inc
mov
jbe
sbb
cmc
hlt
shl
ds
outs
in
inc
xor
mov
adc
(bad)
mov
stos
cmps
sbb
out
jmp
movs
dec
aas
push
nop
push
jecxz
mov
neg
and
hlt
test
push
push
in
inc
js
mov
retf
pusha
adc
mov
sub
push
push
sub
or
sti
aas
push
and
imul
das
movs
inc
ucomiss
popf
gs
and
mov
lahf
and
xchg
dec
pop
mov
mov
test
mov
call
sbb
stos
jmp
xchg
jnp
frstor
push
mov
jae
cmp
outs
sti
xchg
mov
xchg
mov
mov
dec
and
xor
jl
arpl
dec
push
retf
cwde
mov
ins
mov
cmp
sbb
jo
pop
sbb
sbb
lds
test
sub
xchg
ret
jge
lahf
addr16
cld
popa
jnp
mov
mov
pop
lods
cwde
int
shr
daa
daa
retf
pop
(bad)
mov
(bad)
or
mov
cld
jbe
inc
leave
cmc
cs
jmp
movs
stc
shr
sahf
loopne
mov
push
dec
rol
sahf
jne
lods
aad
in
aaa
add
adc
in
push
popf
int
xchg
jne
stc
push
loope
jge
test
rcl
add
aaa
jne
jbe
and
mov
xchg
mov
int
shr
stos
jmp
enter
xchg
imul
enter
mov
call
dec
mov
adc
fstp
cmp
int
fcomip
sar
rol
movs
mov
jg
pop
es
adc
mov
ins
aas
sti
addr16
(bad)
sub
dec
lahf
ret
add
js
mov
mov
cmp
mov
pop
mov
shl
movd
sbb
shr
jo
push
jb
(bad)
or
test
inc
ja
(bad)
jecxz
sti
push
cmps
jns
cdq
inc
mov
int
push
es
in
push
push
cmps
rcl
aam
cmp
js
jbe
cld
fmulp
pop
scas
jge
add
cmp
(bad)
xor
sahf
sar
cdq
push
fldenv
mov
dec
mov
sbb
stos
add
mov
pop
pop
ds
xchg
or
pop
xchg
xchg
push
stc
xor
(bad)
mov
jbe
push
add
mov
push
push
xor
push
cmps
ror
add
or
in
push
(bad)
jl
mov
imul
shl
sahf
mov
pop
fcmove
fld
in
pop
lahf
aaa
jae
pop
and
retf
push
movs
pop
outs
xor
ds
push
iret
or
push
les
outs
adc
fmulp
outs
inc
inc
test
cld
aad
mov
iret
fnsave
ret
sbb
sahf
mov
fdivr
jle
test
add
in
ds
stos
pop
and
jb
data16
or
jp
aam
stos
push
mov
fist
fimul
out
mov
adc
sub
sbb
je
dec
call
jno
sub
push
mov
pop
or
(bad)
(bad)
adc
call
mov
cld
inc
jg
retf
lds
cmps
arpl
out
aad
cwde
or
cmps
lea
mov
outs
mov
ja
js
retf
jae
imul
stos
imul
mov
rol
jmp
dec
clc
jae
pushf
dec
push
ret
pushf
or
nop
clc
cwde
out
mov
adc
fst
loopne
ds
pop
and
cmps
adc
pop
inc
xchg
sbb
jge
daa
jl
out
sbb
(bad)
cwde
loope
inc
lods
add
and
sub
sbb
inc
xchg
cmp
jmp
cmps
sbb
call
inc
rcr
pushf
ss
call
jp
fsub
mov
js
sbb
xchg
scas
pop
mov
out
adc
int
mov
frstor
xchg
mov
or
fmul
adc
push
mov
(bad)
sub
and
cli
xlat
inc
jl
jmp
cmps
inc
fs
pop
mov
shl
fst
and
iret
scas
iret
pusha
xor
sbb
stos
ret
inc
dec
xchg
ins
in
rol
mov
lds
(bad)
out
daa
dec
fsubr
dec
hlt
repz
inc
in
icebp
sub
mov
sti
imul
sub
shl
jnp
xor
xchg
cmp
xchg
ss
std
(bad)
fld
fsubr
sahf
nop
lahf
sahf
(bad)
addr16
sub
xchg
loopne
ins
inc
cmp
movs
mov
je
sbb
inc
out
shr
dec
xor
sub
test
dec
inc
test
pmaxub
data16
xchg
xor
ret
inc
arpl
mov
rol
mov
mov
add
out
ds
xchg
std
adc
scas
loope
mov
pop
pop
scas
cmp
mov
xor
jae
retf
pop
bswap
inc
sub
into
aaa
adc
in
sbb
lds
retf
xor
fsubrp
fnstcw
mov
or
ja
push
pop
mov
mov
in
in
repz
dec
inc
scas
jp
jmp
sub
bswap
stos
in
sub
cs
xor
test
xlat
and
push
cwde
sub
push
mov
xchg
mov
ins
dec
or
fnstcw
or
jecxz
(bad)
fucomi
rcl
movs
test
cmp
xchg
jg
shl
sub
jmp
jbe
cmp
push
aad
inc
jg
and
neg
call
push
xchg
in
test
test
inc
ficom
cwde
push
sub
cld
sub
mov
mov
add
mov
sbb
sub
pusha
or
call
sub
mov
movs
dec
cwde
in
jecxz
test
loop
cmp
sub
inc
mov
les
inc
mov
mov
xor
xor
mov
xchg
mov
lods
sbb
sbb
mov
int3
mov
cdq
pop
sub
jae
pop
sti
inc
repnz
mov
xchg
sbb
mov
lock
jnp
ds
retf
mov
mov
mov
fcmovnbe
xchg
and
inc
push
xor
cmc
out
inc
shl
push
jae
jle
cmp
push
call
fisttp
xor
data16
out
hlt
mov
pop
sbb
dec
cmps
dec
push
mov
mov
pop
cmps
inc
jmp
push
das
out
dec
dec
(bad)
int
mov
(bad)
cmp
nop
sub
ret
xchg
sahf
adc
fst
imul
pop
xor
gs
jmp
jbe
movd
and
sub
daa
cmc
dec
leave
inc
mov
mov
aad
pushf
pop
dec
mov
jne
cmp
pop
add
outs
jns
fadd
out
pusha
mov
(bad)
mov
pop
scas
jae
lock
fisub
ret
mov
js
adc
inc
fdivr
jns
cmc
xlat
xchg
les
xchg
ret
imul
stos
jae
ss
pop
pop
clc
pusha
inc
(bad)
or
jo
mov
mov
leave
adc
mov
dec
leave
sub
dec
scas
xlat
pop
or
adc
mov
mov
dec
inc
add
stos
call
mov
nop
(bad)
adc
cmc
cmp
(bad)
aam
pop
or
mov
mov
in
aas
cwde
fwait
loope
inc
ss
rol
imul
cdq
push
pop
pop
shl
or
lods
pop
ror
jp
mov
sub
aam
cmc
aaa
inc
clc
(bad)
mov
xor
inc
mov
pop
cs
test
push
into
into
xor
mov
int3
scas
shr
pop
mov
sub
loope
icebp
or
test
fisub
addr16
dec
xor
mov
leave
jae
(bad)
mov
mov
hlt
dec
nop
jle
jb
mov
add
push
and
dec
or
stos
mov
shr
dec
pop
and
jns
jnp
fidiv
and
adc
aam
pushf
push
mov
(bad)
push
mov
mov
jae
ret
sahf
ins
adc
xor
(bad)
sbb
and
cdq
bnd
mov
stc
sub
or
pop
pop
lahf
cmp
nop
mov
push
in
xchg
mov
push
jle
mov
fimul
mov
int3
adc
mov
leave
inc
jae
sbb
shl
xor
ret
dec
test
hlt
inc
fdivp
stos
inc
stos
cwde
lahf
out
inc
repz
fstp
push
pop
outs
jg
mov
pusha
out
out
push
adc
jae
imul
test
cmc
popa
ror
cmp
mov
arpl
and
stos
mov
out
mov
jecxz
popa
adc
dec
adc
mov
xchg
imul
cmp
pop
mov
outs
int
movs
fild
add
movs
call
mov
das
js
ret
pop
cmps
rcl
jae
mov
fld
mov
jmp
imul
je
mov
js
mov
imul
fnstenv
or
jg
xchg
cmp
jmp
ja
jbe
sbb
popf
inc
sti
xor
fcomp
jo
sar
ret
or
repz
mov
mov
xchg
xchg
mov
xchg
sbb
movs
dec
mov
pusha
fsub
sahf
push
sbb
jecxz
ds
sbb
jp
mov
out
call
aaa
ret
(bad)
xchg
in
int
adc
(bad)
xchg
mov
inc
inc
jmp
xchg
xor
and
test
popf
mov
xlat
fldcw
je
jbe
fdivr
aas
retf
call
test
lea
mov
cmp
pop
mov
addr16
adc
add
inc
or
pop
xor
mov
repnz
dec
jecxz
scas
mov
mov
dec
fdivr
enter
je
xor
push
popf
aaa
popa
arpl
fild
adc
mov
mov
jmp
ins
lods
cmp
lods
jno
or
sub
cmp
cdq
push
xor
mov
sub
scas
cwde
lea
cmp
push
and
nop
push
into
mov
dec
xchg
push
test
pop
inc
nop
jne
je
pop
push
nop
push
into
push
sahf
jmp
inc
jmp
push
add
xor
mov
xchg
mov
adc
in
mov
sub
ss
inc
jmp
sbb
ja
cmp
sbb
ret
push
sub
in
in
aam
sti
jl
push
push
shl
mov
xor
jae
stos
fwait
cwde
shl
enter
(bad)
test
xor
popa
call
ds
push
stos
mov
sti
fimul
in
push
stos
sub
pop
retf
add
pop
iret
fild
test
mov
retf
cmps
or
pushf
test
jns
test
pop
or
loope
in
or
cli
cld
mov
int3
cmp
(bad)
and
std
cmc
in
outs
repz
xor
ficomp
mov
push
aas
push
add
xchg
cwde
js
fsub
jb
dec
sub
mov
in
and
(bad)
scas
mov
ins
lds
icebp
mov
push
inc
(bad)
test
jecxz
mov
xchg
jne
nop
inc
mov
pop
inc
cmps
arpl
and
lahf
rol
fs
in
mov
aaa
add
leave
push
mov
or
imul
into
in
sbb
leave
data16
adc
add
sbb
mov
arpl
mov
pop
pop
outs
sub
xchg
sbb
je
jno
jmp
push
pop
jle
cmp
int3
ror
les
mov
sar
push
into
scas
xor
test
sbb
stc
out
scas
ins
xchg
pop
sub
push
dec
and
adc
push
push
cmc
jnp
mov
adc
push
retf
add
lahf
inc
out
lds
sub
mov
mov
mov
jmp
pop
sbb
les
xchg
pop
pop
lds
push
and
sub
(bad)
loopne
push
adc
out
push
and
popa
xor
sbb
lds
cmps
adc
iret
add
xchg
xor
push
jmp
stc
fld
sbb
pop
add
mov
sbb
es
cli
lods
mov
or
push
cmp
and
sub
imul
or
mov
pop
mov
fsubr
pop
cmps
cmc
jne
sbb
(bad)
addr16
les
sbb
jge
js
add
add
sbb
lods
add
xor
retf
jno
dec
xchg
les
test
call
add
or
and
sub
mov
lods
test
fsubr
jle
xchg
sub
add
push
je
mov
adc
dec
mov
or
jmp
test
(bad)
int
or
cwde
push
mov
xchg
add
or
sahf
jmp
aaa
push
pop
cmp
pushf
ds
add
ins
and
dec
daa
xchg
int
sub
inc
pop
cdq
jecxz
xchg
fsubr
adc
push
aad
stc
adc
sbb
mov
add
icebp
add
jno
movs
jb
mov
(bad)
mov
push
into
retf
sbb
inc
push
movntps
sar
push
in
retf
clc
xor
cmp
push
shufps
mov
(bad)
mov
stos
aaa
shl
cli
mov
lods
movs
sbb
add
adc
jge
lds
push
mov
fstp
adc
pop
pushf
cmps
mov
iret
xor
(bad)
push
pusha
mov
outs
sub
jg
or
inc
xchg
leave
idiv
and
cdq
xchg
xchg
call
scas
cmps
lods
movs
int3
sub
jmp
les
dec
mov
sbb
ret
xchg
inc
leave
adc
xchg
call
sub
icebp
dec
xor
stos
mov
pop
xchg
in
add
pop
mov
xor
add
add
mov
mov
mov
clc
mov
mov
mov
mov
xor
jecxz
in
pop
call
icebp
sub
int
pop
movs
inc
stos
sbb
rol
jmpw
adc
(bad)
cmc
mov
push
pushf
and
and
fdivr
cmp
cmc
test
dec
push
sbb
or
sub
xor
daa
xchg
pop
push
dec
push
aaa
push
ds
jmp
dec
dec
xlat
arpl
into
mov
pushf
lea
imul
idiv
cmc
fld
jbe
pop
dec
inc
(bad)
sahf
imul
rcr
lods
sar
(bad)
fdivrp
jle
into
bound
fnsave
jge
and
jno
jmp
outs
mov
lea
add
fs
cs
adc
clc
jne
jae
mov
cmps
shl
leave
mov
push
test
sub
out
mov
cwde
sbb
add
ds
pop
ins
mov
push
mov
pop
imul
mov
jge
out
sti
xchg
scas
or
and
leave
pop
lods
not
xchg
mov
push
jp
add
inc
rcl
(bad)
fisttp
cmps
sbb
addr16
add
xchg
pop
cmp
lods
cmp
or
mov
inc
movs
jno
pop
mov
dec
pop
pop
adc
mov
mov
dec
pop
fisubr
dec
push
call
mov
iret
call
jae
xchg
in
retf
jbe
mov
lock
cld
stc
imul
ins
call
je
movs
xchg
mov
pop
cld
repz
xor
jl
lods
cs
out
jo
js
add
iret
js
jmp
mov
push
or
retf
inc
cwde
sbb
pop
cmp
or
mov
and
in
mov
mov
mov
xlat
(bad)
enter
push
xor
xor
xlat
in
xchg
call
fs
adc
xor
arpl
adc
cmps
in
aam
dec
lods
cmp
push
retfw
ins
push
pop
pusha
in
jmp
repnz
sahf
dec
xor
adc
xor
sub
cdq
and
xor
fldenv
es
jl
loopne
loopne
(bad)
mov
ffree
pop
push
inc
mov
mov
enter
test
push
cmp
jecxz
arpl
retf
sub
outs
inc
pop
scas
cmp
dec
int
or
sbb
dec
cwde
pop
test
or
push
adc
xor
xor
inc
imul
mov
int3
cli
jae
hlt
fadd
sbb
test
arpl
sub
xchg
fwait
dec
pop
cmp
or
mov
shr
sub
sub
push
and
fsub
cmc
xor
dec
mov
out
and
cmp
mov
shl
jmp
arpl
pop
adc
(bad)
into
mov
pop
(bad)
stc
dec
imul
(bad)
push
or
xor
mov
and
shl
in
(bad)
or
(bad)
sbb
test
mov
lds
rcr
shl
rol
xlat
xor
cdq
fmulp
retf
ja
aas
mov
dec
pop
aad
idiv
add
movs
inc
call
xor
jl
jl
mov
xor
push
fcmovbe
loope
and
pop
sub
pop
push
sub
xchg
loopne
cmp
cmc
sub
into
and
push
sub
jl
add
jo
(bad)
cld
xchg
pop
pushf
inc
adc
stos
jge
loop
outs
test
add
mov
push
aad
xchg
loope
imul
aas
stc
(bad)
repz
std
add
stos
sbb
xchg
fstp
imul
loope
loope
fcomp
sub
xchg
sahf
cli
inc
cmp
mov
mov
xchg
mov
xchg
mov
push
ret
leave
das
mov
scas
shl
enter
lahf
add
ret
pop
jmp
or
cwde
aam
xlat
jle
and
jp
dec
cmp
ins
push
cmp
fs
loope
movs
aam
mov
cmps
outs
popf
inc
fcom
lds
in
outs
scas
stos
mov
push
repnz
das
mov
(bad)
adc
inc
jle
shr
xchg
std
and
repz
push
sub
mov
rcl
loop
mov
sbb
inc
ret
sbb
dec
inc
inc
add
jb
int3
cmp
mov
dec
cmp
and
int3
(bad)
dec
sub
cld
loop
mov
sub
loopne
sub
adc
pusha
daa
mov
xchg
sub
pop
data16
add
jno
mov
lea
inc
hlt
xchg
out
dec
fdivrp
clc
push
sbb
pusha
jne
cwde
mov
cmp
dec
lods
push
push
call
mov
(bad)
fs
retf
cmp
push
dec
cmp
ds
mov
movs
inc
sub
je
mul
fild
stos
in
inc
aam
push
xchg
fbld
or
rol
cmp
mov
leave
dec
xchg
mov
mov
dec
sbb
fisub
lea
push
jne
(bad)
ds
inc
leave
ins
pusha
adc
xor
bound
cmp
pushf
clc
xor
test
ja
fs
loop
cmc
fs
cmc
daa
add
jne
pop
jge
rol
sbb
mov
jmp
cwde
mov
retf
icebp
sub
and
mov
lea
xchg
jmp
sub
sub
mov
mov
bound
into
sbb
mov
lods
test
pop
out
nop
jmp
push
ret
jecxz
inc
in
in
rcl
scas
jns
shl
adc
inc
add
xchg
js
mov
xchg
push
push
mov
and
sti
dec
push
div
inc
test
mov
data16
mov
pop
retf
sub
popa
rcr
and
dec
dec
lods
inc
ins
xchg
lock
loope
sti
and
xchg
cmps
out
pop
xor
aaa
sbb
sub
jp
add
and
imul
pop
cmp
push
ss
jg
mov
jb
push
movs
jne
pushf
xlat
in
stos
sub
pop
mov
and
add
cwde
cmps
xor
loope
call
adc
mov
cmp
mov
sbb
loopne
and
pop
jnp
pop
mov
aas
pop
sub
idiv
icebp
jb
jle
xchg
cmps
or
out
aam
xor
int
bound
or
sti
inc
mov
call
or
jo
or
dec
add
pop
icebp
cmp
lock
pop
into
mov
or
cli
adc
ins
sar
xor
cmp
push
mov
loope
xchg
das
hlt
das
sub
adc
mov
lods
test
cs
jnp
xchg
xchg
faddp
xchg
jb
cmp
iret
sbb
sbb
xor
scas
xor
aad
mov
xchg
(bad)
div
add
pusha
jle
xchg
xor
xor
retf
inc
outs
ds
div
add
sbb
ret
inc
or
stos
push
sub
mov
mov
(bad)
rcr
lea
jae
cmp
lods
in
mov
shl
pop
sbb
sub
pop
iret
loope
fist
and
xor
adc
out
loop
aam
mov
sbb
popf
ror
sub
repz
aaa
retf
mov
cmp
shl
ret
aaa
daa
sub
out
push
(bad)
mov
xchg
sbb
sub
test
in
cmp
or
inc
add
sub
mov
cmp
pushf
mov
pop
cmp
sbb
enter
mov
int
inc
cmps
mov
mov
xlat
div
jle
push
mov
and
and
rcr
js
inc
cmps
xchg
mov
scas
mov
loopne
in
aam
nop
enter
mov
sbb
xor
pushf
mov
mov
add
sub
(bad)
cmp
fistp
sub
out
ins
aas
jmp
std
repz
adc
test
xor
pop
and
fwait
int3
inc
mov
leave
add
imul
inc
addr16
inc
(bad)
pushf
std
stos
int
inc
cmps
fstp
movq
xchg
dec
sub
sub
outs
(bad)
int
xor
mov
xchg
sbb
in
movs
(bad)
in
arpl
or
iret
sahf
test
cdq
sti
dec
sub
push
iret
bound
mov
add
(bad)
jecxz
xor
xchg
dec
add
inc
xor
jae
repnz
cli
xor
loope
aaa
and
(bad)
jg
fidiv
ds
pop
daa
jmp
bound
xchg
add
or
or
pop
adc
inc
aad
cld
ja
mov
(bad)
pushf
xlat
and
ja
pusha
or
mov
scas
jns
fsub
ret
jno
movs
shr
jno
adc
mov
mov
push
imul
sbb
xchg
nop
sbb
outs
xchg
arpl
sbb
int3
cmp
out
int3
jmp
push
push
push
hlt
jne
int3
push
xchg
fdiv
daa
xor
add
jne
mov
out
jb
stos
add
mov
pop
clc
or
xlat
retf
mov
and
xchg
bound
add
push
jge
mov
push
clc
adc
dec
in
xchg
jge
fcmovbe
mov
and
les
(bad)
popa
shr
jmp
test
inc
xchg
mov
adc
adc
out
cdq
mov
dec
mov
sub
scas
mov
inc
mov
lahf
arpl
lods
sub
mov
add
pop
cdq
and
cmp
std
mov
lds
cmp
cmp
int
aad
mov
retf
inc
cmp
in
ja
loope
or
(bad)
arpl
cmp
ffreep
dec
dec
pop
std
dec
push
movs
dec
cmc
pop
loopne
in
cmps
lds
adc
std
ins
xchg
icebp
hlt
lea
sar
imul
pop
adc
imul
xchg
pop
in
cmp
cmp
xchg
call
add
push
stos
xchg
or
pop
xor
cmps
arpl
mov
shl
out
xchg
fstp
mov
jmp
push
or
ja
imul
popf
mov
xor
int3
ins
push
push
adc
sti
or
dec
inc
je
sar
cdq
sub
js
jecxz
pusha
sbb
idiv
fsub
jmp
xchg
mov
loopne
out
sbb
lds
sbb
adc
pop
addr16
retf
sbb
sahf
dec
je
js
scas
bndldx
push
sahf
lahf
jnp
jecxz
call
adc
cmp
xchg
int
inc
xchg
rol
test
or
in
jne
ret
pop
int
lock
imul
dec
xchg
or
fcmove
add
idiv
inc
sbb
loope
shl
loope
rol
nop
rcr
or
popf
xor
jp
fcom
aaa
mov
mov
and
test
mov
shr
xor
pop
test
mov
mov
pop
cs
pushf
data16
sbb
(bad)
cli
(bad)
push
mov
(bad)
xchg
push
cmc
js
ret
es
stc
xchg
pop
shl
mov
nop
pop
xchg
sar
dec
imul
popa
dec
adc
or
jnp
xor
xor
aam
dec
out
xchg
adc
mov
pop
mov
out
ins
rol
push
pop
pusha
xor
repnz
mov
scas
mov
into
lahf
xchg
inc
(bad)
jo
and
std
mov
imul
pop
imul
cs
enter
pusha
xor
popa
adc
xchg
jle
into
jmp
pop
loop
xchg
push
jno
and
frstor
and
jg
fstp
push
xchg
es
sub
pop
loop
inc
jnp
mov
mov
out
mov
jg
jge
loope
cdq
imul
fdiv
call
add
dec
jl
fistp
ss
add
je
or
push
jmp
cmp
jle
xchg
aas
mov
pop
imul
push
je
movs
mov
imul
lods
sub
pop
push
test
jecxz
push
es
push
sub
cmps
cli
or
pusha
or
jb
push
ficomp
ins
cmp
scas
dec
call
mov
shl
xlat
adc
jae
xor
fwait
bound
mov
or
std
rcl
mov
(bad)
xchg
call
fbstp
mov
adc
mov
push
(bad)
sbb
ds
pop
pop
push
enter
dec
push
aaa
pop
ret
inc
imul
in
test
push
imul
je
cmps
or
(bad)
(bad)
cwde
scas
popf
pop
(bad)
jp
pop
xchg
icebp
je
imul
mov
scas
dec
lds
adc
aas
iret
in
add
rol
fidiv
rol
push
test
pop
and
mov
push
imul
xchg
jne
mov
mov
ja
das
adc
or
lock
das
stos
leave
ja
rcl
ficom
sub
adc
fcomp
out
ins
std
jmp
jle
xor
shl
out
mov
lahf
pop
shl
push
mov
xchg
ret
dec
stos
and
cmps
out
ret
or
and
pushf
loopne
mov
sub
scas
out
pop
jg
push
add
call
in
xlat
pop
lods
stc
push
sbb
add
cli
mov
call
xor
push
sbb
imul
fwait
xor
dec
call
sbb
ss
out
add
int
add
fadd
iret
jbe
lahf
in
sub
inc
call
ret
or
gs
jp
jecxz
hlt
mov
inc
xchg
cdq
mov
je
adc
cmp
sub
pop
je
test
test
and
cmp
or
inc
mov
stos
xchg
jmp
jns
test
scas
call
pop
gs
es
cmp
mov
mov
es
or
dec
ret
mov
add
cmp
and
cmc
sbb
leavew
ja
or
pushf
mov
inc
xlat
fisttp
fistp
jg
add
outs
es
xchg
adc
(bad)
xor
lock
retf
cmc
aad
inc
xor
inc
mov
shl
push
in
outs
sahf
repnz
sbb
mov
mov
xor
cdq
test
addr16
push
js
ret
imul
lds
pop
shr
dec
inc
movs
mov
xchg
inc
mov
repnz
mov
push
mov
repnz
mov
out
shl
mov
mov
push
aad
lock
push
adc
cmp
pop
jo
shl
out
lock
and
mov
fs
je
push
sti
xor
fcom
movs
int
inc
push
(bad)
imul
jbe
xor
sub
sub
rol
sbb
sbb
cmp
dec
pop
sub
test
and
data16
div
aaa
aas
or
imul
cs
mov
mov
xor
out
pusha
sub
sbb
mov
lahf
add
dec
out
test
(bad)
xor
iret
bnd
and
cmp
add
pop
aaa
xchg
mov
xchg
mov
pop
mov
add
jecxz
mov
push
or
jne
cs
xchg
fwait
lods
sub
sar
jb
dec
repz
pop
sbb
das
and
xlat
jns
jae
sub
iret
pushf
movs
pop
outs
test
dec
inc
and
xor
es
pusha
xchg
mov
add
jp
jg
inc
std
mov
push
cmc
mov
dec
sbb
push
inc
dec
jl
mov
nop
adc
pop
aaa
repz
mov
pushf
loop
mov
(bad)
pop
call
ins
loop
lock
popa
xchg
push
jg
jmp
adc
or
and
xchg
xor
es
mov
xor
clc
mov
fst
xor
mov
push
mov
add
test
hlt
push
jecxz
sbb
je
mov
mov
in
arpl
pop
cli
or
das
and
call
push
jae
test
cmp
test
jmp
jbe
or
adc
push
fcomp
out
mov
out
nop
add
inc
aas
jo
sbb
call
sbb
pop
push
jle
xchg
rcr
pop
push
popa
or
test
pop
xor
inc
cmp
lds
push
and
fcomp
push
cmp
pop
sbb
out
arpl
shr
and
(bad)
pop
xchg
jne
inc
fdivr
test
in
lea
add
pop
xchg
(bad)
pushf
mov
add
loop
out
leave
xchg
ins
int3
(bad)
pushf
xadd
rcl
icebp
jmp
mov
daa
xlat
inc
pop
cmp
push
and
bound
ret
les
xlat
pop
(bad)
gs
mov
lea
lea
push
out
outs
or
jecxz
cmc
pop
inc
push
lods
jb
add
ja
sbb
jp
es
and
dec
das
in
pop
dec
mov
and
mov
mov
lock
call
std
sahf
das
mov
jns
inc
cmp
push
out
sbb
bnd
sub
or
frstor
jne
cmp
jne
inc
jge
dec
dec
cmp
add
mov
inc
jmp
inc
mov
mov
repz
xchg
mov
(bad)
pop
jg
and
shl
inc
add
inc
pop
cmp
sub
rcl
and
loopne
push
fcomp
mov
retf
sub
(bad)
cld
xchg
jne
js
pop
aad
in
jg
mov
sbb
push
stos
adc
cmc
mov
jl
lods
jne
(bad)
call
sti
xchg
sub
es
dec
adc
cmps
dec
inc
loopne
int3
fcom
inc
test
inc
pop
loopne
mov
loop
add
pop
cld
mov
fistp
mov
out
push
mov
movs
cmp
es
aaa
je
pop
adc
push
xor
mov
add
imul
mov
imul
mov
cmp
xor
add
test
dec
retf
xchg
inc
aad
(bad)
std
lock
dec
stc
dec
fucomip
or
mov
into
mov
mov
sub
in
and
sub
dec
pop
outs
ss
jecxz
loop
mov
xchg
fwait
sub
je
mov
mov
retf
mov
xchg
mov
mov
or
push
mov
jo
jge
rcr
test
jmp
jmp
lods
sub
add
aam
das
imul
mov
sti
xor
and
xor
aad
neg
jbe
adc
test
mov
test
into
and
dec
lock
call
cmps
sar
test
fnsave
sub
push
loop
sbb
mov
add
xor
pusha
movs
daa
dec
adc
push
jno
out
inc
mov
add
movs
or
dec
xor
arpl
jnp
jno
xlat
mov
adc
popa
jo
mov
repnz
jne
xor
fiadd
call
and
push
stos
jnp
dec
push
pop
pop
inc
push
stc
cli
movs
mov
inc
jae
out
mov
enter
inc
movs
push
cwde
jl
jge
xor
xor
sub
cmp
fistp
out
dec
pop
rol
mov
xor
lods
inc
in
jo
loop
or
test
retf
mov
cmp
aaa
lods
div
xchg
mov
std
pop
ja
sbb
add
aaa
mov
in
out
cmp
sub
cld
mov
out
xchg
mov
fadd
lahf
lock
push
pop
mov
(bad)
or
mov
mov
(bad)
test
and
xor
mov
push
out
xor
lock
dec
fadd
and
rcl
xlat
xchg
(bad)
ror
iret
mov
pop
add
inc
or
sbb
push
mov
jg
icebp
repnz
jge
out
pop
lods
lahf
scas
retf
fadd
mov
fmul
in
pop
clc
aaa
or
or
lock
neg
aam
std
outs
xchg
adc
add
add
xchg
dec
scas
fs
aaa
movs
addr16
xchg
push
lods
sbb
xor
movs
sbb
std
push
stos
jns
or
das
xor
enter
sahf
fwait
cvtps2pd
dec
jl
push
push
mov
pop
and
xor
ds
retf
jno
mov
ins
and
jg
push
mov
sub
dec
adc
xor
jae
push
aas
cdq
fdivr
sbb
xor
sbb
jmp
(bad)
pushf
fidiv
(bad)
nop
loopne
xor
sbb
gs
push
mov
stos
xchg
push
test
mov
push
repnz
(bad)
mov
popa
and
call
retf
add
arpl
dec
lahf
sub
xchg
mov
push
inc
pop
test
pop
imul
jp
cld
popf
cwde
xchg
jno
or
pop
or
push
pop
popf
arpl
mov
ja
sahf
cmp
pop
add
dec
fistp
add
addr16
sbb
(bad)
adc
retf
fs
cwde
mov
inc
(bad)
call
cli
in
shr
mov
test
test
daa
lods
repz
lahf
sahf
inc
mov
sub
xchg
ja
loop
push
inc
jge
xchg
jl
jbe
pop
test
cmp
out
retf
movs
xor
scas
add
jp
aad
pop
xor
cmps
in
cmp
sbb
sbb
push
(bad)
jmp
cmp
adc
mov
movups
push
xor
(bad)
call
or
add
jno
lock
(bad)
scas
fcomp
imul
push
icebp
dec
xor
sbb
mov
ret
ja
sub
js
outs
or
mov
hlt
jb
loop
add
jmp
xor
std
pop
inc
dec
mov
xor
js
xchg
nop
dec
jl
dec
and
and
and
add
mov
jo
ds
(bad)
add
jae
cmps
fisubr
fs
adc
dec
push
pop
mov
or
js
mov
push
cli
push
gs
popf
sub
enter
pop
aaa
js
cs
mov
xor
ja
fnstcw
sar
xlat
inc
test
imul
and
out
ret
add
sub
mov
aad
loopne
aam
sahf
jne
scas
bound
or
adc
xor
int
xchg
jnp
jne
xchg
arpl
jne
in
sbb
outs
out
fild
ins
jmp
mov
mov
xchg
movs
jnp
cmps
jmp
cmp
adc
rcr
loopne
mov
xchg
jmp
and
dec
and
movs
mul
jecxz
sub
dec
sub
lods
hlt
ret
ja
test
jnp
pop
mov
xchg
pop
mov
aaa
mov
das
pusha
std
or
lea
cmc
in
retf
add
pop
and
ret
push
neg
dec
ins
xchg
add
into
ror
mov
retf
xlat
or
out
(bad)
sub
mov
loopne
add
fcom
mov
daa
adc
mov
scas
inc
mov
mov
pusha
jno
fistp
mov
sbb
dec
sbb
stos
outs
cli
or
imul
xor
mov
xchg
retf
loopne
fidivr
pop
mov
cli
adc
jg
(bad)
mov
iret
or
pop
push
in
jmp
stos
adc
repnz
mov
mov
xchg
pop
sbb
sbb
sbb
cs
push
lds
leave
in
sbb
jo
mov
pop
and
pusha
(bad)
test
add
xor
xor
push
repnz
xor
mul
rcr
aas
fsubr
jecxz
mov
jge
daa
xchg
hlt
or
ret
arpl
into
jecxz
lahf
mov
mov
enter
popf
xchg
push
aas
(bad)
inc
fdivr
xchg
jmp
or
xor
daa
cli
imul
dec
out
pop
arpl
jp
push
adc
mov
mov
cmp
pop
cwde
and
xlat
call
dec
push
sbb
jo
fld
sti
arpl
cwde
jmp
push
mov
ret
cmp
fstp
shl
sbb
mov
mov
out
adc
fstp
mov
jge
in
sub
out
xchg
jl
sbb
jo
cs
mov
icebp
(bad)
stc
pop
jle
or
in
sbb
adc
jnp
inc
push
inc
pop
or
rcr
mov
mov
bound
sub
push
jge
adc
push
ret
mov
inc
repz
sbb
pop
and
fcomi
dec
mov
adc
cmp
mov
pusha
or
pop
repz
iret
jmp
outs
inc
mov
xor
push
shl
dec
inc
pushf
adc
xchg
retf
cwde
mov
ror
aaa
inc
call
ins
cdq
popa
jecxz
in
jl
rcr
or
mov
mov
shl
int3
push
out
and
mov
jae
jg
or
xchg
dec
test
lods
outs
dec
push
adc
push
nop
fnsave
xchg
(bad)
call
lds
ret
div
pop
or
and
scas
mov
out
mov
loop
inc
imul
inc
sub
sub
jo
inc
or
inc
xor
aas
or
push
mov
and
and
xlat
sbb
fistp
pop
mov
mov
add
mov
test
(bad)
out
pop
outs
in
dec
mov
jle
test
scas
bnd
test
int
pushf
sub
pop
dec
sbb
cli
push
jecxz
(bad)
imul
nop
cld
xor
mov
jo
or
std
test
fcom
jmp
(bad)
retf
ret
(bad)
add
(bad)
lock
movs
or
push
out
ret
dec
and
sub
xchg
ins
je
movs
(bad)
fsub
inc
jge
mov
jmp
lock
loope
fimul
lds
aas
out
sbb
test
mov
fcomp
stos
repz
daa
mov
cmc
cmp
or
xchg
xor
mov
or
adc
aas
mov
mov
adc
int3
mov
dec
aas
adc
inc
push
ret
pushf
enter
or
fld
and
std
out
pop
(bad)
mov
stc
push
sbb
xor
and
push
push
push
mov
push
icebp
xor
jg
jl
push
pop
outs
or
fcom
mov
xchg
test
xor
fild
sub
leave
test
adc
scas
mov
clc
ss
loopne
xchg
sub
ins
outs
push
ret
jge
imul
push
sub
rcl
jmp
dec
push
ror
test
pop
xchg
popf
pop
jbe
add
sbb
and
mov
stos
xlat
iret
jno
cmp
scas
cmp
pop
rol
std
(bad)
mov
popf
cmp
jge
and
(bad)
mov
inc
mov
xchg
repnz
addr16
pop
jo
shr
clc
jmp
add
fst
add
xchg
pop
aaa
jae
mov
add
hlt
in
popf
mov
xor
mov
(bad)
aam
or
in
push
pusha
jmp
retf
mov
enter
jns
xor
xchg
or
retf
sti
repnz
sbb
push
vpmuludq
dec
std
retf
aaa
xchg
aad
sbb
fldl2t
scas
mov
(bad)
stos
inc
xor
push
mov
xchg
sub
push
sbb
push
adc
sub
inc
ret
mov
jmp
das
retf
fild
out
jbe
push
inc
pop
lds
inc
mov
jecxz
cdq
leave
loopne
mov
loope
sbb
mov
mov
push
sbb
or
dec
lds
and
adc
add
test
adc
loop
cdq
scas
mov
or
push
inc
repz
arpl
pop
mov
pushf
push
or
cs
xor
lds
cmp
(bad)
inc
and
sub
mov
sub
dec
mov
push
mov
int3
aam
sar
aas
loope
xlat
or
mov
mov
xchg
call
popa
adc
sbb
dec
cmp
stos
pop
repz
call
fwait
ret
xchg
shl
ins
add
fdivr
add
std
adc
push
test
xchg
and
in
fild
cmp
xchg
fdiv
mov
sbb
inc
sub
mov
in
inc
mov
retf
lock
add
cmp
ins
push
stos
push
jge
jne
data16
aaa
add
ins
sbb
xor
cs
imul
mov
adc
test
mov
jle
add
xor
sahf
xchg
out
pushf
mov
iret
mov
mov
xchg
jo
or
mov
jo
pop
jg
dec
into
xchg
add
stc
pop
mov
mov
push
cmp
das
mov
fucomip
fsubp
xchg
popa
(bad)
and
mov
adc
sahf
add
xor
mov
jmp
jg
jg
add
sbb
(bad)
cmp
mov
pop
pop
out
cs
int3
xchg
into
sbb
mov
xor
or
jmp
shr
mov
leave
lahf
push
shr
push
mov
repnz
mul
outs
ins
adc
add
js
imul
scas
adc
dec
dec
ret
jge
inc
and
pop
push
mov
jge
test
jl
pusha
push
cmps
adc
or
push
cmc
retf
mov
fistp
dec
test
mov
loopne
std
mov
std
jns
and
or
cmp
and
jns
adc
cmps
add
jmp
jnp
add
clc
cmp
or
fild
sbb
adc
repnz
xchg
idiv
ja
std
dec
movs
fldenv
add
pop
ja
sbb
cmp
xchg
and
(bad)
xor
fist
add
es
inc
lea
and
adc
test
add
(bad)
hlt
ret
movs
push
dec
mov
mov
mov
stos
ret
dec
push
jno
pop
cwde
ror
out
push
in
jmp
nop
cmp
mov
in
popf
sbb
int3
push
shl
mov
mov
xor
icebp
cmp
mov
out
or
xlat
inc
in
jns
(bad)
jmp
mov
iret
in
mov
or
mov
mov
popw
sahf
or
pop
ret
mov
pop
cmps
pushf
or
rol
sahf
xor
dec
cwde
jno
inc
stc
inc
movs
sar
lods
cmc
lahf
jb
sub
pop
mov
out
push
jbe
sahf
pop
rcr
mov
jns
jmp
data16
jl
retf
xchg
std
lods
aad
aam
or
sub
push
pop
adc
pop
rcl
mov
or
sbb
inc
pusha
fsubr
add
arpl
rcr
or
loopne
xor
cdq
mov
xchg
popf
xchg
inc
mov
pop
rcr
dec
(bad)
mov
sahf
ror
jle
sub
ins
movs
xlat
pop
mov
bound
lods
push
mov
out
movs
sub
addr16
xor
xchg
pushf
mov
retf
gs
dec
cmp
xor
xor
test
add
add
mov
pop
or
ficomp
cmp
cmps
push
ja
sbb
mov
or
jo
dec
mov
je
cld
inc
es
cmps
into
pop
fcomip
sub
xchg
ltr
sbb
cmps
iret
push
or
xor
sub
and
add
dec
dec
mov
jmp
push
and
xor
popa
xchg
jecxz
push
pop
fistp
xor
loop
mov
test
sbb
adc
aaa
out
stc
mov
dec
loope
loop
int3
mov
aam
pop
aas
push
leave
aaa
ins
pop
pop
mov
dec
jecxz
xchg
sub
mov
loop
jmp
test
fdivr
movs
mov
dec
inc
ror
in
hlt
adc
es
and
push
mov
in
test
dec
mov
mov
cmc
repz
push
daa
xchg
inc
fldcw
stos
inc
push
inc
dec
inc
cmp
(bad)
int3
lahf
rcl
jbe
cmp
mov
fadd
pop
push
stos
mov
adc
imul
fiadd
xchg
shl
push
inc
mov
mov
retf
clc
out
mov
jb
adc
sbb
(bad)
ror
imul
cwde
pop
test
jmp
daa
cwde
or
repz
daa
leave
jp
das
pop
je
add
fidiv
scas
mov
int
xor
sub
mov
imul
loop
popa
out
call
sahf
shl
pop
loopne
mov
jns
mov
mov
adc
add
lea
xchg
jecxz
in
leave
xor
pop
call
cmc
add
xchg
movs
jno
sub
inc
cld
shl
mov
ja
call
and
lea
jo
scas
mov
dec
and
jnp
addps
ret
mov
or
xchg
mov
int3
popf
ficom
mov
mov
dec
cmp
cmp
imul
pop
(bad)
mov
lahf
shr
ds
aaa
sti
popa
jp
aaa
xlat
dec
mov
mov
(bad)
out
in
int
lds
lods
call
cmp
rcl
into
xlat
sub
std
cmp
lds
jmp
sti
mov
and
inc
sti
pusha
sub
cwde
fwait
mov
push
(bad)
mov
movs
mov
inc
imul
inc
sbb
nop
ret
adc
es
leave
nop
xchg
aad
jbe
dec
adc
inc
dec
stos
jbe
retf
and
jl
xchg
pop
adc
inc
jae
mov
adc
and
jmp
neg
cli
mov
jb
xchg
dec
jbe
mov
adc
and
div
stc
pop
(bad)
mov
or
nop
xacquire
cwde
push
adc
dec
call
das
and
cmp
(bad)
test
jecxz
enter
int
fiadd
(bad)
mov
test
cmp
das
dec
into
jae
imul
or
pop
inc
fisubr
aam
in
sub
xchg
pop
and
scas
xor
and
mov
addr16
lds
arpl
inc
jne
(bad)
mov
mov
push
inc
(bad)
dec
cmps
test
push
repnz
das
stos
mov
mov
(bad)
int
xor
mov
jecxz
or
jnp
ins
cs
push
ins
loopne
sahf
sbb
push
cmc
mov
pop
out
and
test
out
pop
mov
in
add
hlt
(bad)
mov
ret
inc
scas
mov
pop
fisubr
add
movs
and
mov
cmp
daa
jge
xor
retf
call
leave
cld
sub
test
fld
aam
xchg
cmp
sbb
push
jle
test
retf
lds
sbb
add
out
rol
mov
and
ret
pop
push
pop
(bad)
iret
mov
fisttp
jnp
pop
shr
lock
(bad)
call
fld
not
jne
cs
jnp
(bad)
cmp
push
and
cmp
lds
mov
aad
out
pop
es
gs
or
mov
icebp
daa
gs
mov
mov
push
xor
ja
mov
outs
scas
clc
ret
lahf
jge
aam
clc
cli
mov
jl
fld1
push
(bad)
sbb
cdq
cmp
lds
mov
ret
dec
push
xchg
in
dec
(bad)
jb
inc
xchg
arpl
push
cmps
test
aad
or
mov
dec
sub
mov
cli
je
push
add
shl
ss
(bad)
sbb
outs
lds
jge
(bad)
add
cdq
inc
cmp
cmp
leave
ret
ss
aaa
inc
adc
sub
retf
add
cs
inc
aam
addr16
cmp
jae
(bad)
pop
out
outs
mov
pop
fisttp
fcmovu
adc
jo
fs
pop
clc
retf
imul
mov
mov
sti
fs
mov
sbb
push
mov
test
aad
and
mov
cwde
sbb
cmp
movs
clc
loopne
xlat
or
or
fdiv
cmp
push
push
sbb
iret
pop
push
pop
mov
cmp
test
mov
push
retf
stos
or
add
inc
jae
fnstsw
in
sub
mov
movs
sbb
out
mov
mov
inc
jl
inc
push
push
je
xor
pop
aaa
sub
mov
and
and
jle
fwait
int
ss
inc
pop
repz
sbb
xlat
xchg
movs
ds
int
xchg
adc
rcr
xchg
mov
call
dec
lods
sbb
in
jne
lahf
add
jb
arpl
cmps
cmp
out
pop
adc
pop
cmp
in
js
cmp
fsubr
jmp
out
(bad)
or
retf
jb
dec
popa
xchg
push
xlat
cmp
cmp
jno
inc
pop
out
inc
fisubr
mov
scas
xchg
jo
in
push
jb
cmc
sahf
sbb
add
pusha
jb
retf
or
pop
test
push
mov
push
fistp
mov
or
inc
or
mov
dec
pop
pop
pusha
loop
and
mov
cmp
repnz
stos
jns
xor
out
aaa
jno
jnp
stos
aas
add
mov
pop
aad
xchg
jmp
xlat
sub
xor
sub
adc
js
pop
mov
dec
(bad)
pop
sahf
xchg
pop
jno
(bad)
jp
jmp
jmp
fcomp
mov
stc
inc
mov
shl
and
xchg
mov
psubsb
test
sbb
lock
mov
pop
push
lds
in
scas
ins
mov
xchg
pop
pop
cmp
ret
bnd
mov
cmc
stc
aas
aas
daa
mov
jge
je
fwait
ror
cs
xchg
xchg
mov
ja
(bad)
loop
jp
jp
ror
mov
test
and
ss
sub
mov
or
movs
inc
sbb
fld
jmp
(bad)
(bad)
mov
mov
ret
dec
mov
push
clc
pop
xchg
ins
ror
int3
dec
repnz
lods
frstor
test
inc
dec
mov
or
jmp
ja
mov
fdivr
adc
cmp
cmp
or
dec
add
pop
in
jbe
popa
jo
push
mov
xchg
jne
cmps
mov
ins
and
in
into
(bad)
imul
xor
aaa
stos
or
repz
jp
leave
pushf
(bad)
lods
push
imul
lds
cmp
or
inc
inc
loopne
(bad)
xchg
aam
cmp
pop
push
fisubr
leave
sbb
stos
mov
cmp
aam
cmp
mov
ja
cmp
jle
add
imul
push
and
shr
js
sub
out
or
and
test
push
mov
pop
and
cmps
push
jns
test
fsubp
loop
stos
mov
ins
je
push
int
adc
ret
adc
and
pop
bound
cmp
je
jnp
adc
add
add
jns
cld
adc
mov
enter
sub
mov
test
in
xchg
cdq
add
rcl
inc
push
mov
test
cmp
div
inc
fimul
retf
sbb
mov
ins
cdq
mov
into
sub
iret
jle
cmp
or
daa
mov
pusha
call
data16
rcl
jae
aaa
sahf
ret
xor
sbb
pop
sub
mov
mov
or
scas
(bad)
popf
sbb
mov
aas
push
test
cmc
(bad)
(bad)
fiadd
jno
pop
pop
cmps
dec
stc
prefetchnta
ret
push
fwait
inc
mov
sar
jmp
stos
out
lods
loope
out
outs
sub
dec
rol
sti
xchg
shl
loopne
inc
arpl
sub
popf
out
leave
js
mov
out
mov
out
sti
inc
mov
aas
pop
ret
cmovl
jge
push
daa
xchg
lds
or
sbb
pusha
or
mov
movs
stos
xchg
ret
cmp
add
xor
xor
pop
movs
sbb
mov
les
add
fsub
xchg
enter
xor
inc
jae
bound
mov
dec
sub
jecxz
inc
push
adc
out
call
pop
inc
jl
sub
add
xor
adc
addr16
mov
jbe
mov
add
jp
push
scas
mov
popa
xor
mov
jns
scas
sub
fstp
add
cmp
cmps
repz
shl
shl
outs
or
(bad)
lahf
dec
cdq
ret
ins
add
mov
fsubr
mov
mov
mov
inc
jp
xchg
jnp
jge
mov
stos
xor
mov
jg
lea
jae
push
adc
ins
mov
into
dec
iret
test
es
mov
retf
bound
jmp
je
lock
fst
pop
xchg
jb
fidiv
dec
push
ret
fdivr
(bad)
sbb
out
in
pusha
jge
mov
les
xchg
xlat
cwde
shl
sbb
cmp
jp
stc
cmp
jne
inc
cld
test
hlt
cli
pop
adc
mov
adc
movs
sbb
lds
mov
sub
add
xchg
out
mov
mov
ds
jl
pop
xchg
lods
add
cmp
lock
push
ja
jmp
xor
ret
or
mov
sbb
arpl
jns
adc
je
cdq
pop
outs
add
xchg
repz
jg
in
push
mov
scas
dec
mov
inc
lods
imul
(bad)
fucomip
xor
ret
out
and
jecxz
jbe
mov
psraw
push
push
pop
pop
xor
jg
(bad)
jbe
test
or
cmp
hlt
jmp
loop
sub
(bad)
in
scas
pop
inc
es
dec
jge
jp
popf
sbb
test
lock
push
jl
pop
hlt
mov
cmp
jmp
push
lods
add
add
pushf
stc
xor
sub
sbb
inc
stos
cld
stc
add
sub
aaa
dec
sbb
or
pop
sub
test
mov
dec
out
cmps
add
cmp
mov
leave
mov
out
mov
mov
scas
outs
mov
mov
and
shr
pminub
adc
xchg
mov
jo
out
clc
push
rcr
push
iret
aam
stos
push
enter
aam
in
xor
ss
pop
movs
repz
push
push
xchg
jb
xchg
getsec
sar
pop
pushf
xchg
retf
add
push
fldcw
mov
mov
adc
lds
dec
loope
hlt
in
jbe
movs
cmps
mov
bound
sub
dec
sbb
std
(bad)
dec
bnd
dec
cmc
xchg
cmps
sub
imul
xor
js
mov
out
(bad)
jmp
inc
ja
shl
add
je
push
lds
inc
arpl
dec
out
enter
lds
shr
std
jno
push
or
je
cmp
dec
jecxz
inc
push
push
fwait
stc
cwde
add
scas
xchg
int
xchg
retf
test
les
or
cmps
shl
jp
add
mov
cmp
push
dec
fnstsw
(bad)
sub
std
je
sahf
cmc
sbb
in
mov
arpl
aas
jno
mov
ja
lods
cmp
mov
pop
pop
js
out
hlt
mov
movlps
pop
or
adc
rol
sbb
push
(bad)
loopne
xor
fist
addr16
xchg
push
push
push
ss
outs
push
mov
lahf
cmp
push
scas
mov
pop
scas
lock
sbb
(bad)
and
xor
xchg
arpl
es
test
cmc
imul
(bad)
fidiv
add
gs
pop
sbb
lock
mov
loope
das
mov
out
js
aas
fwait
outs
add
jnp
dec
jg
push
out
addr16
(bad)
cs
int
fist
add
movs
repnz
jp
int3
adc
mov
outs
jmp
mov
pushf
lea
or
pop
adc
xchg
cmp
inc
pop
in
test
inc
sti
mov
das
loopne
mov
inc
lods
pop
pusha
movs
loopne
nop
shl
and
sbb
ins
(bad)
fidiv
cwde
cmp
cwde
int3
dec
xchg
icebp
pushf
or
xchg
xor
popa
lea
rcl
fwait
pop
sub
push
clc
push
push
retf
or
(bad)
das
adc
or
adc
mul
sub
sbb
cmp
rcr
adc
dec
jne
daa
stos
mov
jb
cli
bound
mov
sbb
cs
fidiv
dec
(bad)
push
ss
sub
call
xor
mov
das
movs
jmp
sbb
fldcw
ja
ds
and
ds
sbb
imul
(bad)
mov
sbb
jge
daa
into
cmp
mov
lahf
jmp
inc
jle
pusha
leave
shr
dec
sub
fnstcw
das
dec
push
call
mov
daa
mov
push
xor
mov
outs
(bad)
fmul
movs
aas
mov
mov
pop
stos
repnz
cmp
adc
xchg
push
push
pop
xor
(bad)
mov
dec
cdq
jl
and
inc
inc
addr16
lea
stos
add
pop
test
lods
retf
dec
fcom
enter
inc
sar
ins
inc
mov
rol
or
mov
mov
(bad)
sub
rcr
mov
fcomip
jnp
jno
push
ror
dec
int3
jo
push
jg
imul
and
or
pop
cmc
xchg
rcr
jo
lds
or
movs
add
cmps
shl
adc
shl
inc
xchg
xlat
adc
cdq
(bad)
nop
aas
stos
mov
xchg
mov
mov
mov
lods
pop
push
inc
and
or
pop
into
scas
push
mov
cmp
cmp
ds
lds
iret
ja
pop
fs
aam
pop
sbb
inc
mov
ins
mov
lea
mov
adc
fadd
(bad)
pusha
mov
mov
in
imul
fild
and
mov
int
push
mov
fwait
lock
sub
jbe
cmp
pop
mov
mov
add
ins
mov
out
bound
or
stos
out
dec
cmps
dec
push
jne
jle
mov
xchg
pop
dec
mov
pushf
adc
xchg
adc
xchg
mov
sub
push
fs
xchg
sti
cmps
movs
sbb
jle
leave
(bad)
mov
out
push
lds
mov
in
fistp
mov
in
xor
scas
cs
mov
cmps
add
icebp
sar
push
(bad)
in
cs
ret
xchg
sub
and
aad
mov
lods
jbe
and
ror
imul
neg
mov
mov
jns
sahf
sbb
ss
inc
push
retf
add
fld
mov
adc
dec
pop
push
mov
adc
inc
mov
ror
sbb
xor
mov
(bad)
xchg
push
cmp
push
cmp
stos
mov
aaa
jg
sbb
mov
rcl
or
inc
mov
cmps
jmp
sbb
and
enter
inc
push
fldcw
retf
mov
adc
mov
in
jecxz
or
and
push
dec
xlat
imul
jmp
movs
mov
aas
jl
out
jns
test
je
or
cmp
xchg
or
dec
bound
sbb
lock
jmp
xchg
enter
xlat
dec
inc
mov
xchg
push
in
adc
js
pop
push
inc
cwde
fiadd
mov
sbb
(bad)
mov
(bad)
fadd
mov
inc
fcomp
adc
cdq
cmp
inc
test
dec
je
add
test
pop
jmp
shl
cdq
xchg
and
pop
mov
arpl
sbb
je
test
outs
mov
out
jno
jle
vpsllw
icebp
mov
hlt
iret
mov
loopne
jmp
sbb
xor
nop
cmp
test
sbb
dec
ficomp
jl
cmp
inc
jbe
enter
test
pop
push
push
jp
xchg
add
xchg
shl
in
xor
aad
sub
mov
inc
dec
add
pop
add
dec
and
lock
xchg
cmc
push
jo
xchg
mov
inc
dec
jae
mov
scas
and
mov
movs
stos
imul
jmp
in
dec
int3
bound
xor
pop
and
stos
add
fst
mov
aas
dec
jl
(bad)
lock
dec
mov
test
sub
jecxz
int3
add
pop
out
and
inc
mov
addr16
mov
adc
add
pop
not
inc
dec
out
shl
das
xchg
fs
add
movs
dec
mov
add
rcr
adc
jge
call
out
stos
push
addr16
mov
sbb
int3
not
imul
cmp
mov
xchg
in
jno
lods
and
adc
loop
jmp
dec
popf
dec
xor
sti
fcomp
jae
xchg
mov
pusha
xor
push
(bad)
scas
mov
adc
test
pushf
mov
and
lds
shl
mov
xor
loope
or
and
shr
dec
push
xchg
add
std
inc
ss
or
(bad)
inc
jo
push
ins
aam
push
rol
pop
call
push
mov
fist
rcr
mov
fst
jno
fxch
mov
adc
push
aas
setno
bound
sbb
outs
bound
push
ret
jo
mov
outs
mov
std
mov
xchg
in
cwde
mov
mov
push
(bad)
sub
icebp
loope
repnz
icebp
repz
call
jle
jle
inc
fdiv
jle
in
sub
cmp
mov
dec
dec
fadd
inc
in
clc
ret
dec
arpl
mov
js
retf
idiv
inc
das
daa
shr
xor
mov
xchg
add
jnp
and
pop
mov
sbb
(bad)
inc
xchg
pop
dec
jne
or
mov
mov
loopne
and
inc
and
dec
sar
jmp
aad
sub
jnp
and
jge
pusha
call
xor
dec
popf
and
out
jb
movs
in
cmc
pop
and
outs
cmp
into
and
cs
xchg
add
cmp
icebp
push
push
adc
and
sub
mov
clc
mov
cmp
mov
stc
push
cmc
and
and
js
cdq
xor
mov
repz
pop
mov
jg
cmp
aas
out
lods
xor
adc
mov
repnz
jp
or
sbb
scas
and
mov
xor
jmp
or
out
sbb
fwait
mov
sar
and
pushf
push
sub
jnp
pop
ficom
cmp
aad
(bad)
jle
sbb
pop
mov
ror
cdq
inc
into
push
loop
mov
(bad)
std
(bad)
mov
add
adc
push
mov
nop
push
push
icebp
mov
popa
test
pop
sbb
lea
aas
mov
call
ja
(bad)
addr16
mov
(bad)
sub
xchg
repnz
pop
out
cmc
test
retf
adc
aam
mov
movs
cmp
jmp
pop
daa
shl
and
sar
sbb
jo
or
add
(bad)
push
mov
cmps
aaa
int3
mov
mov
movs
pop
test
pushf
sbb
push
adc
mov
in
stos
mov
loop
jnp
data16
out
mov
mov
lods
pop
xchg
sbb
std
xchg
jecxz
imul
aaa
jo
pop
xchg
bound
xor
cmp
xchg
mov
inc
sysret
mov
stos
ret
cdq
fcmovnbe
mov
mov
push
lds
inc
idiv
into
or
push
shl
and
in
mov
xor
cmps
(bad)
aas
neg
call
scas
loop
mov
or
loope
adc
pminub
inc
imul
push
pslld
sub
mov
sar
popa
popa
mov
test
dec
dec
outs
mov
div
inc
sbb
(bad)
cmp
dec
loope
inc
pop
jnp
in
adc
xchg
test
jns
fwait
and
push
cmp
pop
dec
jmp
loopne
icebp
loopne
std
je
or
xchg
mov
push
lahf
int
mov
or
popw
dec
add
test
test
push
bound
and
mov
add
sbb
retf
hlt
pop
pop
jns
ins
dec
(bad)
into
(bad)
outs
mov
fcomp
ret
inc
or
and
xchg
mov
push
out
xor
xor
mov
je
lods
sar
fs
ja
jmp
in
mov
mov
aad
sbb
enter
test
dec
fadd
rcl
adc
sub
mov
js
int3
test
xor
xchg
sbb
es
mov
pop
les
div
ret
rol
dec
lds
lea
sbb
pop
rol
jo
les
outs
inc
(bad)
cmp
js
test
outs
test
cmp
rcr
cmp
cmp
dec
pusha
out
jo
add
mov
push
call
push
aam
mov
iret
loopne
scas
test
arpl
mov
adc
enter
mov
les
jbe
inc
xchg
adc
arpl
mov
call
xor
ja
sub
jmp
shl
push
add
and
adc
push
push
mov
cld
outs
arpl
imul
jbe
mov
cmp
add
mov
fisub
packssdw
loopne
or
dec
call
call
xor
jmp
xor
std
push
bound
mov
sbb
xchg
cmp
mov
xchg
sbb
push
pushf
out
sbb
imul
cmc
cmp
popf
xor
arpl
test
out
ret
dec
or
out
xchg
scas
cmc
loopne
iret
adc
push
push
inc
(bad)
xchg
jo
mov
mov
cwde
(bad)
sahf
xor
sti
aam
ret
popf
in
lds
xor
fld
xchg
sahf
push
shl
(bad)
(bad)
sub
out
add
(bad)
ins
sar
dec
dec
and
dec
scas
xchg
loop
jl
nop
das
imul
sbb
aam
cmc
push
ins
inc
aaa
js
push
pop
es
mov
sbb
mov
jno
xchg
dec
movs
inc
xlat
mov
or
push
test
dec
call
mov
pop
inc
mov
mov
cmp
rcl
cmp
adc
stos
sahf
push
xor
add
and
cs
and
sbb
test
xor
push
push
inc
fsub
stos
scas
loopne
lods
inc
add
push
scas
call
rol
cdq
jg
jns
cs
vphaddubq
int3
jmp
pop
cli
rcr
jno
cdq
div
aaa
leave
mov
or
lahf
push
repz
mov
push
bound
dec
nop
add
leave
add
sub
add
inc
in
xor
out
inc
sbb
fisub
sbb
cmps
ds
dec
test
pop
xchg
mov
inc
xchg
mov
pop
inc
push
ins
sbb
sub
or
cmp
mov
push
push
dec
sbb
and
sbb
stos
mov
adc
lock
in
scas
fisubr
(bad)
jmp
inc
adc
sub
add
sbb
adc
mov
adc
or
bound
inc
bound
or
push
adc
jne
adc
loopne
test
adc
pop
sbb
fisubr
out
dec
or
fistp
scas
push
mov
jae
(bad)
adc
call
cs
pop
cmp
add
daa
xor
xor
andnps
mov
call
sbb
jle
sti
or
fisubr
jb
xor
mov
cmp
adc
loop
sub
inc
add
adc
outs
mov
push
adc
cmp
fwait
sub
je
int3
push
inc
mov
add
ins
loopne
rol
cwde
aaa
in
sub
addr16
in
dec
sub
jae
lods
xchg
or
adc
inc
adc
popf
fwait
mov
in
imul
mov
idiv
das
test
fisttp
mov
rcl
jmp
into
push
sub
(bad)
int
clc
and
push
fstp
add
mov
jbe
ss
inc
enter
mov
(bad)
call
nop
(bad)
data16
dec
lods
push
mov
(bad)
fisttp
dec
dec
and
add
jne
pop
inc
fmulp
mov
cmp
push
nop
(bad)
call
sar
cmp
pushf
in
mov
sahf
jle
xor
lods
js
call
imul
ins
xchg
movs
fnsave
hlt
ror
jo
jge
xchg
pop
xor
inc
cmp
out
pop
aas
push
cmc
loope
and
add
(bad)
jl
ins
fcmovne
mov
sub
adc
fidiv
mov
or
jne
dec
fst
(bad)
xchg
and
push
mov
xor
ret
xchg
call
jbe
adc
dec
imul
nop
cmps
fisub
jecxz
nop
stos
arpl
test
mov
push
mov
fisubr
bound
stos
icebp
test
in
mov
mov
xor
test
mov
(bad)
iret
or
pop
push
mov
mov
and
xor
aad
ss
ds
mov
xor
cmps
fist
sti
mov
dec
inc
xor
mov
ret
or
pop
xor
mov
or
sub
test
xor
xchg
out
loop
sbb
lahf
daa
dec
pop
add
in
out
adc
mov
imul
mov
inc
mov
sbb
aas
imul
loop
jecxz
xchg
movs
movs
cmp
test
call
pushf
(bad)
mov
push
mov
jne
daa
nop
out
jo
test
and
mov
jbe
jecxz
inc
pusha
scas
imul
cdq
lods
and
sub
or
(bad)
adc
into
push
jmp
jne
lods
data16
cs
mov
retf
inc
adc
(bad)
adc
inc
mov
and
sti
sar
sbb
stos
arpl
fild
cmp
jb
retf
pusha
jmp
mov
ret
mov
cmc
sub
movs
xchg
jp
mov
(bad)
xor
and
mov
dec
mov
pusha
lock
xor
push
shl
rcl
dec
or
out
lea
xchg
fcom
sub
lods
(bad)
push
push
jg
push
outs
or
jg
xchg
sbb
inc
(bad)
jp
sbb
arpl
xchg
lahf
lahf
pop
sub
pop
mov
ins
sbb
xchg
fs
or
ffree
dec
push
push
cs
div
sbb
fiadd
dec
jl
mov
cmp
scas
hlt
stos
ins
mov
pop
xor
mov
cwde
pusha
mov
cld
inc
stos
xchg
mov
dec
rcr
cmps
adc
into
pop
int3
call
pusha
jbe
enter
and
aas
push
pop
jb
jno
add
add
push
and
add
xor
inc
pcmpeqd
add
pusha
retf
sub
icebp
inc
mov
add
push
loop
and
(bad)
les
inc
stos
cli
pusha
fsubp
retf
addr16
in
ret
into
mov
mov
in
(bad)
sbb
mov
lods
loope
and
shr
lock
push
call
jbe
retf
scas
(bad)
in
cmp
repnz
mov
(bad)
pop
std
popa
xor
mov
js
xor
push
dec
push
cdq
clc
pop
jns
jmp
pop
rol
inc
mov
cs
xchg
push
dec
adc
pop
or
dec
xchg
or
or
outs
imul
cwde
inc
fist
aaa
rcl
mov
sub
push
xchg
jae
inc
dec
mov
(bad)
in
xchg
pop
and
fstp
cmp
xchg
cmp
mov
push
add
in
xchg
cmp
movs
nop
mov
retf
dec
jae
dec
fidivr
or
inc
pop
das
cmps
bnd
dec
test
cmp
sbb
addr16
in
inc
test
mov
push
add
add
call
mov
push
jge
je
mov
pop
(bad)
dec
movs
add
xchg
push
test
and
push
inc
leave
test
xlat
mov
pop
jle
push
sbb
ror
mov
jle
xchg
shr
dec
mov
mov
imul
pop
mov
aaa
lahf
in
ins
add
(bad)
(bad)
push
sbb
cli
pop
fld
push
loope
or
lock
mov
lods
test
dec
push
xchg
in
loopne
sub
pop
fistp
add
cdq
sahf
(bad)
(bad)
adc
sub
mov
mov
jnp
adc
in
jecxz
sbb
jl
mov
sbb
sub
mov
push
or
cmps
aam
mov
dec
loopne
or
fsubr
out
arpl
xor
(bad)
in
popf
loope
add
mov
adc
ins
mov
loope
mov
mov
fwait
ins
dec
ins
inc
mov
cmpxchg
adc
call
cwde
pop
push
scas
rcr
cwde
in
mov
nop
and
xchg
loop
pop
pop
mov
dec
enter
dec
mov
(bad)
fiadd
lods
xchg
pop
fldcw
cmc
stos
ins
cmp
shr
sbb
out
push
dec
lea
xor
mov
push
jecxz
test
mov
adc
push
xlat
push
stc
jge
pop
stos
cs
pop
adc
cmps
repz
rol
jmp
out
xor
inc
sub
mov
leave
push
cmp
hlt
jl
js
imul
cdq
stos
cmps
lods
and
ja
push
jp
xchg
cmp
in
fadd
sar
sbb
stos
cli
dec
sbb
add
(bad)
mov
stos
sbb
xchg
dec
sub
lods
push
sub
xlat
xor
clc
rcr
mov
retf
xor
xchg
mov
jnp
mov
stos
rol
jns
inc
fldenv
pop
sub
cli
sbb
mov
loopne
lahf
lea
loope
jl
clc
dec
fsubr
push
pop
cmp
xor
mov
xor
je
not
xor
cmp
out
outs
lds
push
mov
push
cwde
mov
mov
xchg
cmp
ins
push
jp
outs
or
dec
push
addr16
imul
push
cmp
out
addr16
xchg
push
dec
mov
cmp
dec
jmp
sbb
sahf
int3
xchg
mov
or
sti
pop
and
sbb
xor
fdiv
aaa
js
pop
es
ficom
sahf
jno
mov
les
push
(bad)
cli
xchg
sub
pop
pop
pop
inc
mov
jp
data16
inc
je
imul
fwait
and
in
(bad)
fs
movs
and
cmp
sbb
fsub
sbb
std
movs
mov
sbb
ffree
pushf
jo
push
fwait
jl
push
pop
(bad)
sub
lea
jmp
xchg
ror
rol
xor
jge
fsub
xchg
pop
icebp
imul
mov
add
mov
push
and
sbb
fnsave
clc
mov
sub
pop
xlat
shl
add
(bad)
pop
pop
nop
imul
push
push
test
retf
mov
mul
xchg
xchg
push
add
call
sbb
add
mov
adc
loop
pop
sbb
pop
mov
add
mov
outs
mov
xchg
lods
xor
retf
dec
push
mov
push
stos
and
dec
push
test
adc
aas
inc
xchg
sub
(bad)
das
in
lock
cmp
mov
sbb
dec
fbld
js
outs
push
jle
bound
retf
xchg
cs
aas
retf
das
sbb
jl
rol
stos
sti
fsub
add
fwait
mov
adc
test
ret
or
or
test
jbe
jo
xchg
stos
not
adc
push
dec
ss
scas
add
loopne
mov
loope
addr16
fwait
mov
bound
sub
mov
or
leave
pop
push
loope
in
mov
fild
mov
add
xchg
push
sub
xor
jle
jne
bound
cmp
pop
in
add
push
scas
daa
pushf
and
push
inc
push
imul
mov
inc
fisubr
mov
sti
or
in
(bad)
movs
div
das
ss
arpl
cli
retf
addr16
ret
fwait
cmp
retf
sub
out
add
pop
mov
inc
movs
mov
fwait
push
sub
add
stos
xor
jecxz
ficom
pop
scas
and
jg
mov
or
xchg
xchg
mov
add
icebp
jnp
mov
xchg
xor
mov
fidiv
fwait
add
sub
jne
mov
add
adc
jmp
(bad)
je
sub
shl
push
icebp
shl
jmp
cmp
sahf
out
das
fstp
out
jp
mov
ins
or
mov
retf
mov
push
xlat
push
add
or
dec
sbb
nop
xchg
adc
mov
push
or
(bad)
retf
dec
shl
or
adc
push
aas
or
and
cmp
jge
cld
lods
dec
test
(bad)
sar
adc
comiss
stos
add
push
inc
or
scas
aaa
jecxz
adc
xor
or
std
sub
and
icebp
call
mov
ins
add
test
mov
(bad)
aas
into
push
sub
or
add
xor
mov
arpl
sahf
and
and
pop
push
push
ret
iret
dec
in
push
sub
inc
sub
je
and
lahf
rcl
out
mov
imul
push
mov
fisubr
or
xchg
mov
dec
cs
ror
jne
add
pop
dec
cmp
mov
nop
push
jmp
sti
xchg
mov
cdq
lds
xor
std
sbb
xor
into
pop
shl
cmp
cmp
push
push
cmp
push
or
ins
movs
inc
fld
mov
push
shl
or
loope
jecxz
movs
fidivr
enter
pushf
mov
loop
and
push
lahf
add
xor
repnz
mov
dec
sbb
ror
cld
xor
jg
(bad)
nop
push
ins
pop
sub
add
pop
adc
or
xchg
jmp
daa
adc
ror
dec
lods
mov
dec
hlt
inc
int3
mov
xor
fist
sub
mov
pop
addr16
or
fbld
cli
retf
adc
bound
rcl
ss
pop
mov
(bad)
adc
retf
retf
inc
dec
jb
arpl
mov
sahf
mov
xor
dec
ficomp
iret
cmp
fcom
mov
cmp
hlt
push
and
cdq
aaa
clc
sub
push
pop
fucomp
test
xchg
push
out
stos
movs
inc
sbb
sbb
aad
fbld
mov
add
or
mov
add
mov
inc
fnsave
das
imul
and
xchg
mov
jnp
push
xchg
add
cmps
pop
push
mov
adc
xor
icebp
push
push
ja
jo
retf
push
stos
jne
cld
sbb
or
xor
dec
pop
sbb
jmp
repnz
mov
and
push
ret
inc
in
or
push
jo
aas
cmps
(bad)
xor
push
pop
pop
stos
js
pop
mov
(bad)
in
mov
xor
lods
out
mov
mov
inc
dec
mov
push
cmp
xor
lds
sbb
aad
(bad)
int
fs
shr
mov
mov
ja
jecxz
aam
xor
sub
adc
in
mul
cmp
push
fnclex
rcl
test
sti
int
sub
xchg
sbb
out
paddb
frstor
mov
scas
inc
adc
pop
sbb
call
mov
scas
dec
int3
bound
in
pop
arpl
and
(bad)
xchg
mov
dec
(bad)
in
sub
aad
inc
mov
jno
pop
xchg
mov
test
xchg
retf
push
aas
data16
outs
sar
enter
mov
mov
mov
and
jecxz
retf
ins
mov
int3
cmp
leave
inc
push
mov
push
mov
sub
mov
cmp
or
ret
cmc
jp
push
xor
rcl
adc
loop
pop
out
sub
xor
adc
in
call
add
dec
xchg
fadd
js
push
(bad)
push
xor
sub
mov
cmc
in
clc
pop
xor
cdq
sub
leave
lds
movs
fistp
xor
in
mov
or
xchg
jnp
mov
fdivr
inc
clc
ins
sub
repnz
sti
(bad)
lock
xchg
loop
push
cmp
push
into
cwde
ret
jne
pop
push
shl
cli
aam
mov
in
push
dec
pushaw
adc
gs
in
add
inc
icebp
xchg
out
popa
and
pop
and
push
push
push
popf
sub
pop
push
jle
dec
std
push
stc
add
mov
je
mov
inc
out
adc
push
pop
adc
(bad)
cmp
or
mov
cmp
scas
and
leave
jae
les
xor
ficomp
mov
nop
fsub
sbb
call
and
sbb
loopne
jne
mov
js
jp
add
mov
int3
clc
sar
and
push
add
mov
retf
test
mov
inc
(bad)
repz
loop
in
ficom
in
stos
bound
xchg
outs
or
mov
ja
dec
aaa
jle
xor
xchg
jl
in
mov
jns
pminub
js
(bad)
cmp
mov
lock
pusha
frstor
xor
movs
pop
add
stos
test
inc
push
jne
xchg
adc
sbb
xor
repnz
mov
mov
xor
ss
fnstcw
ret
les
jne
cdq
into
shl
xor
sub
and
fdivr
ins
cmp
arpl
(bad)
ds
push
repz
jb
out
repz
and
mov
cli
adc
aad
mov
mov
sub
movs
clc
xchg
push
xor
hlt
in
jnp
mov
outs
rcl
mul
pusha
mov
cli
cmp
or
prefetch
jno
adc
mov
push
clc
jg
cli
in
in
rol
out
enter
cmp
cmp
dec
or
aam
mov
mov
pop
adc
fistp
out
test
test
and
fs
mov
aam
es
pop
jns
enter
cmps
fidiv
inc
jns
int
jmp
jl
ins
dec
dec
pop
and
fimul
sbb
mov
idiv
outs
fs
dec
mov
mov
cmp
stc
cli
push
sub
iret
xor
or
sahf
loop
cli
and
lods
mov
fs
jno
ror
(bad)
lds
lea
add
jns
xchg
adc
mov
test
fadd
repz
push
in
inc
test
pop
js
sti
pushf
daa
es
imul
je
push
xchg
es
int3
mov
arpl
test
jne
xchg
pop
mov
repz
jmp
mov
out
and
clc
lods
xchg
stc
adc
pushf
xchg
mov
adc
test
push
mov
sub
pop
pusha
dec
mov
imul
add
imul
adc
aas
dec
fiadd
call
and
adc
pop
fcomp
sub
shl
pop
lock
push
xchg
shl
cmps
sub
repnz
fsubr
push
mov
mov
cdq
sbb
mov
pop
test
bound
or
enter
jle
(bad)
daa
inc
(bad)
sub
call
inc
or
pop
pslld
iret
ja
sub
fadd
rcl
jmp
popa
xor
retf
ror
loop
cld
fidivr
and
mov
mov
pop
mov
cmp
mov
fsub
call
inc
jmp
bound
mov
(bad)
jge
xchg
pop
mov
mov
mov
push
inc
xchg
(bad)
adc
or
sbb
out
fild
test
mov
jb
xor
xchg
mov
xchg
fsubrp
dec
or
jmp
iret
into
or
xchg
jo
mov
pusha
es
mov
cmp
dec
push
xchg
dec
daa
jns
je
push
call
cmps
repz
xchg
ins
movs
hlt
leave
out
push
or
mov
stos
ret
cmp
pop
es
ja
dec
test
and
mov
xchg
cli
(bad)
mov
xchg
mov
cli
or
xchg
ds
jg
jnp
or
loopne
ins
sub
ins
push
out
cmps
mov
arpl
adc
out
adc
dec
dec
cmp
xor
loopne
mov
out
out
fsubr
call
mov
jle
fldcw
dec
pushf
push
pop
mov
sbb
push
pop
pop
cs
out
ja
pop
sbb
add
dec
sub
dec
jge
and
mov
add
fidiv
bound
mov
add
mov
sub
scas
xor
lea
sub
ja
shl
jmp
or
xchg
call
inc
cmp
mov
ja
cmps
mov
and
dec
push
sbb
out
fs
add
dec
outs
out
repnz
jl
sti
cmc
sub
pushf
pop
mov
cmp
pop
neg
xchg
jle
fadd
add
add
jnp
or
cmp
shl
arpl
scas
rol
and
fwait
push
pop
jb
int
jns
cmps
and
jle
stos
in
stc
call
pop
stos
and
int
jae
or
adc
int3
xor
rcr
mov
jae
sub
sahf
mov
xor
sbb
jns
lahf
pop
sbb
xchg
adc
sub
sbb
aaa
cmps
pop
mov
ins
adc
xchg
gs
mov
sbb
scas
push
out
inc
movs
fcomip
enter
xor
jl
sbb
dec
xchg
and
fldcw
not
mov
loope
pop
test
add
repnz
jg
hlt
pop
cmp
xchg
dec
jmp
sbb
dec
xor
add
sbb
jae
dec
and
loop
push
sub
sbb
xchg
dec
jae
movs
movs
or
mov
xchg
mov
mov
xchg
xor
or
cmp
popa
and
sbb
cld
popa
xor
mov
pushf
mov
(bad)
cmp
push
stos
add
cmp
dec
xchg
add
in
hlt
push
outs
cs
and
(bad)
adc
sub
dec
in
cmp
arpl
pop
into
mov
mov
retf
leave
jnp
jle
add
and
mov
add
addr16
mov
and
add
jnp
aaa
push
not
xor
in
inc
adc
push
sub
ret
ds
jo
or
jle
mov
jnp
es
adc
or
jbe
and
addr16
pop
pop
xchg
or
jbe
dec
sbb
mov
lods
das
out
jae
dec
js
mov
xor
sub
jmp
xor
es
movs
icebp
jne
xchg
retf
add
lods
fcom
jp
pop
cmp
shr
mov
dec
(bad)
sar
popf
daa
xor
add
push
add
shl
adc
inc
adc
mov
pop
sbb
dec
pushf
push
out
lahf
retf
mov
in
(bad)
iret
jg
pop
or
test
lock
hlt
sub
lds
cmp
stos
fwait
addr16
bswap
jmp
jle
imul
add
or
popf
imul
dec
out
mov
jecxz
inc
xor
aam
inc
mov
sbb
xchg
and
dec
xchg
cs
mov
mov
cmp
mov
add
xchg
(bad)
mov
jmp
mov
or
ins
or
out
repz
mov
rcr
(bad)
xor
retf
mov
mov
xchg
movs
cld
mov
and
add
mov
dec
adc
dec
jo
rsqrtps
mov
lock
loope
jge
test
iret
test
inc
adc
cdq
test
pusha
in
or
mov
cdq
out
bound
jl
mov
push
jns
sub
xchg
or
jecxz
xchg
hlt
das
and
popa
hlt
or
call
xchg
mov
xchg
popa
dec
in
sub
or
jp
bound
push
cmp
in
mov
daa
imul
push
adc
ds
or
in
sbb
loop
out
mov
test
mov
mov
pop
cmps
xlat
call
js
push
sti
bts
or
fstp
xor
pop
adc
sub
(bad)
adc
fsubr
mov
pop
cmps
add
sub
or
or
movs
mov
pop
or
cdq
fst
je
je
sbb
call
je
and
stc
neg
xor
call
mov
add
fwait
push
in
movs
pcmpgtw
pop
push
scas
in
ret
stos
(bad)
call
add
pop
enter
pop
clc
fs
push
jle
inc
mov
xlat
jl
cmp
lock
dec
pop
int3
jb
sub
add
xlat
pop
icebp
jb
imul
cs
fstp
xchg
test
pop
and
scas
pushf
mov
js
mov
fsub
mov
mov
pop
test
gs
dec
retf
repz
jmp
push
int
push
and
inc
repz
in
mov
and
test
sbb
in
in
movs
arpl
sub
mov
jge
xchg
fist
sub
outs
fidiv
retf
jp
jmp
icebp
ficom
jge
out
push
into
movs
retf
mov
cdq
pop
pop
scas
pusha
fild
inc
ins
gs
add
pop
push
outs
call
ror
data16
leave
pop
adc
xchg
adc
ja
les
jge
jle
sbb
test
mov
in
mov
iret
sub
stc
adc
std
jae
push
cs
ja
(bad)
jge
sti
and
mov
sbb
cdq
nop
mov
mov
bound
cmp
adc
adc
xchg
or
loop
push
aas
je
sbb
xchg
std
pop
cmps
std
xchg
mov
mov
mov
sar
ins
sbb
mov
lahf
xchg
sub
pushf
cmp
pop
daa
es
aad
jno
dec
jmp
push
pop
test
cmp
cmps
test
out
jno
mov
test
mov
fdivr
add
repnz
ins
loopne
fisttp
mov
lock
call
sub
cmp
adc
xchg
(bad)
sub
imul
inc
mov
sti
xor
ins
push
lea
movs
xchg
movs
pop
iret
in
push
movs
and
xor
cdq
mov
pop
jno
push
mov
xchg
fld
test
loop
xor
jae
pop
out
mov
jnp
gs
dec
mov
shl
adc
push
jle
pusha
aas
dec
(bad)
xor
mov
push
cmps
pop
ror
inc
or
jp
jle
enter
lock
nop
jle
cmp
push
pop
in
mov
or
and
mov
and
call
(bad)
std
fwait
add
jmp
push
rcr
pusha
cmp
xor
adc
ds
sbb
pop
clc
push
fsubr
das
test
aas
in
push
mov
mov
mov
xchg
les
push
stos
inc
movs
lahf
pop
fldenv
pop
shr
sub
stos
push
ret
adc
int3
xchg
sbb
add
xchg
lods
ja
int
hlt
sbb
pop
ret
mov
popf
adc
outs
in
jmp
fstp
aas
sbb
mov
dec
daa
pop
inc
(bad)
icebp
xchg
push
jl
sub
nop
js
fdiv
xchg
sbb
cmp
jg
dec
cld
popa
jbe
push
pushf
push
mov
add
(bad)
lods
fcomp
lds
rcl
cs
jmp
xlat
je
out
fsubr
mov
mov
pop
fs
xor
rcr
ret
push
sbb
xchg
cmps
addr16
jge
mov
arpl
pusha
stc
or
fldenv
leave
out
adc
ja
xchg
and
sahf
sbb
scas
cld
mov
jns
mov
pop
call
aas
lods
xor
idiv
call
neg
popa
push
pop
ja
cmp
cdq
out
icebp
daa
push
pop
dec
call
cdq
inc
and
mov
enter
in
add
dec
out
jbe
adc
jbe
cmp
jns
stos
push
(bad)
fistp
pop
in
push
mov
js
data16
mov
adc
cmp
stos
push
fldenv
push
cli
mov
rcr
jns
cmp
mov
dec
push
add
daa
sub
mov
cmp
stos
push
jno
dec
cmps
sub
stc
ds
dec
aaa
aam
jp
mov
enter
loope
jb
push
inc
xchg
popa
mov
push
out
push
sub
aas
ror
inc
push
xchg
aad
add
retf
in
jbe
xor
inc
mov
cmp
ds
cmps
out
push
jo
in
pop
cmp
pop
cwde
idiv
push
pop
mov
(bad)
inc
mov
add
popa
js
fwait
xor
push
mov
jno
pop
xchg
adc
sub
lock
xchg
or
popf
out
not
pop
pop
scas
in
dec
mov
leave
inc
fstp
pop
lds
xor
lock
out
out
cmps
and
mov
xchg
dec
sbb
test
mov
iret
sbb
or
pop
pusha
lock
cmp
iret
mov
movs
xor
sbb
push
retf
loop
jae
push
jmp
(bad)
fisub
xor
inc
int
jmp
lahf
pop
test
sub
adc
pusha
xor
mov
push
stc
xor
lahf
in
stos
jle
xchg
pop
std
fsub
out
je
or
sbb
and
cmps
cld
mov
inc
stos
cmc
cmp
xchg
popa
mov
mov
fsubr
sub
(bad)
mov
jmp
sub
add
mov
psrlq
addr16
inc
xchg
adc
mov
xlat
ror
gs
out
jmp
fucomi
mul
(bad)
push
mov
adc
je
mov
inc
cmc
mov
arpl
xchg
mov
jmp
inc
test
test
inc
jns
bnd
jnp
pop
stos
jl
cld
sbb
jae
inc
retf
imul
retf
xchg
or
mov
aaa
out
out
inc
pop
sub
pop
in
add
addr16
aas
popa
je
xchg
cmc
jns
xchg
cs
xor
in
popf
sbb
push
adc
mov
lahf
out
stos
mov
lock
neg
mov
xor
fdiv
mov
jns
push
mov
push
cmp
jns
clc
cmp
mov
push
lods
or
int3
jae
aad
mov
cmps
pusha
sahf
(bad)
icebp
popf
cmp
out
push
in
ficomp
loop
mov
arpl
inc
sar
dec
mov
sbb
xchg
adc
es
and
stos
adc
pop
int
xchg
sbb
xor
jp
mov
out
dec
sub
fld
dec
dec
add
das
idiv
scas
sub
add
dec
imul
mov
sti
int3
jne
loop
mov
sahf
sbb
loopne
out
addr16
cmp
lahf
and
jmp
jmp
or
sahf
cmp
sbb
push
mov
xchg
push
sbb
sub
mov
sub
dec
shl
add
sub
push
shr
gs
out
fild
cs
aas
leave
xor
add
lds
stc
or
ja
inc
adc
out
les
mov
in
ret
push
push
int3
push
xlat
shl
rol
cld
iret
add
jge
retf
jno
push
loop
(bad)
adc
(bad)
or
jmp
lahf
jmp
adc
sbb
sub
cmc
jae
mov
inc
xchg
add
and
push
stos
adc
push
out
jmp
jae
gs
jmp
hlt
cmp
xlat
xchg
popf
and
push
mov
or
sub
jno
pop
mov
sbb
mov
in
fstp
jl
mov
ja
mov
ror
xchg
pop
hlt
int
xor
fisttp
ds
and
mov
sahf
jo
and
lods
int3
pushf
leave
fild
cmc
call
ret
hlt
call
inc
js
pop
mov
sbb
sbb
add
bound
jne
in
icebp
cld
sub
inc
xchg
push
mov
and
sti
pop
mov
pop
xchg
xor
call
lea
jle
mov
mov
push
out
mov
stc
push
mov
sbb
iret
in
das
repz
or
jmp
fcom
inc
out
dec
fdiv
(bad)
dec
mov
sahf
mov
cmp
jmp
imul
push
xor
inc
inc
xor
inc
leave
hlt
repnz
loopne
hlt
(bad)
xchg
and
adc
loope
rcl
xor
scas
cwde
les
add
xor
cmps
aas
out
dec
add
cmp
scas
aad
sub
sbb
mov
pop
repnz
mov
test
call
inc
sub
sbb
pusha
gs
lock
(bad)
mov
aam
push
xor
mov
cld
jmp
jp
test
xchg
pop
sbb
scas
test
adc
sbb
cmp
mov
fistp
shr
data16
jbe
rcr
mov
outs
lds
jl
enter
les
jl
lahf
rcl
inc
clc
pop
je
js
test
int
xor
repz
or
aad
sbb
xor
mov
sub
outs
lea
call
fwait
inc
sub
fcom
(bad)
cmp
fwait
outs
dec
mov
fmul
mov
cmp
iret
dec
pop
cli
xchg
aad
jmp
test
or
das
movs
outs
and
adc
sbb
fnstenv
fisubr
addr16
mov
fbstp
push
dec
jmp
pop
mov
inc
inc
cmps
add
jnp
jnp
(bad)
jns
je
xchg
stc
hlt
push
add
lods
(bad)
mov
test
lods
repz
lods
popa
add
and
mov
sub
xchg
retf
mov
and
daa
ja
xor
shr
mov
dec
retf
sbb
sbb
stos
shl
push
icebp
push
inc
ret
xchg
jge
sub
in
push
imul
mov
lds
faddp
add
ret
or
pop
mov
adc
mov
push
stc
(bad)
mov
gs
mov
pop
sbb
fwait
or
loop
aad
int3
or
xchg
inc
jmp
aas
pop
mov
(bad)
adc
into
cwde
(bad)
cmp
gs
lahf
adc
clc
sub
jae
mov
imul
xchg
addr16
dec
mov
mov
(bad)
mov
push
rcr
mov
jbe
sar
in
jl
retf
loope
xchg
inc
push
fadd
sar
inc
add
or
adc
bound
cmc
cmp
cli
mov
xor
or
int
pop
jno
adc
dec
add
ds
jb
cmp
mov
popf
out
mov
or
mov
mov
clc
push
inc
xor
sbb
ret
cld
dec
sub
je
loopne
push
fdivrp
arpl
ret
push
push
(bad)
shr
push
jecxz
shr
xchg
adc
cmps
loop
push
ins
pusha
test
rol
test
addr16
sbb
inc
xor
cmp
inc
adc
adc
mov
fnsave
iret
or
aam
call
in
xchg
cmp
jnp
fbld
stc
lock
dec
pop
add
xor
addr16
rol
cli
out
repz
cmp
add
pop
xor
(bad)
fld
out
adc
ins
inc
pop
xchg
data16
xchg
pand
int3
stos
mov
fld
push
out
sar
jno
ins
or
int3
push
shr
xor
out
push
dec
push
shr
pop
pop
fdiv
or
mov
adc
popf
movs
push
mov
push
icebp
adc
retf
aam
enter
pushf
push
xor
mov
sub
out
movs
mov
hlt
jae
lods
in
add
and
stc
sub
cmp
bound
loopne
call
push
out
bound
push
fwait
aaa
test
aam
cmp
mov
ins
dec
popf
xchg
inc
out
retf
ins
sbb
neg
add
ret
lahf
arpl
pop
sub
dec
jecxz
push
loope
jno
out
cmps
loope
add
iret
nop
rcr
or
dec
or
repz
ds
movsx
lods
mov
mov
xor
and
adc
or
retf
fisub
jbe
fsubrp
fstp
imul
mov
jge
lods
lds
jo
inc
test
mov
jmp
add
daa
enter
outs
movs
push
and
inc
add
test
test
inc
addr16
or
outs
in
adc
test
xchg
test
mov
xor
aas
ffreep
push
inc
dec
lahf
dec
mov
pop
sbb
mov
xor
inc
(bad)
ja
dec
ins
aam
mov
xchg
push
dec
adc
inc
sahf
clc
push
int3
inc
cwde
arpl
cmp
mov
das
js
pushf
jns
into
nop
(bad)
add
fs
jp
ror
jns
cmp
xchg
dec
push
retf
mov
jge
and
rol
and
inc
xchg
loopne
pop
inc
aad
sbb
sbb
add
push
or
jns
lock
sbb
jnp
xor
xchg
rcl
fisubr
mov
pop
(bad)
mov
cs
(bad)
mov
dec
cmps
jg
pop
pop
mov
push
xor
pop
(bad)
or
cmps
mov
jnp
mov
shr
fadd
mov
in
pop
push
(bad)
cdq
popa
mov
pop
inc
xor
enter
in
adc
cmp
or
in
pushf
xchg
push
test
cs
out
mov
int3
jns
stc
mov
lds
fisttp
mov
xlat
xlat
in
jmp
sbb
pop
pop
xor
jae
inc
add
mov
bound
ror
pop
ret
push
sub
fwait
aad
in
mov
clc
mov
dec
fadd
and
and
mov
push
addr16
ss
cld
add
test
xchg
stc
out
mov
das
pop
aas
cmp
mov
dec
mov
jo
lea
mov
(bad)
xor
jne
sub
cld
pop
clc
xchg
add
or
sbb
adc
pop
ss
jne
fcomp
xchg
cmp
aam
imul
jns
jo
xchg
pop
addr16
in
lock
mov
pushf
push
les
sbb
mov
jno
call
in
xlat
sub
repnz
cdq
pop
cmc
cmp
sbb
iret
sbb
jge
sbb
and
(bad)
push
adc
stc
xchg
mov
push
loop
add
test
cld
fsub
shl
push
pop
push
lods
test
out
push
lahf
(bad)
fld
lahf
lods
pop
adc
out
repnz
retf
jmp
mov
pop
bound
(bad)
push
mov
jecxz
and
sbb
mov
xor
int
xchg
xchg
(bad)
pop
addr16
pop
and
adc
push
pop
dec
aas
pop
or
add
xor
xchg
ins
jnp
push
call
inc
lock
scas
mov
scas
call
jmp
nop
mov
mov
mov
mov
mov
mov
or
imul
retf
jae
push
inc
xor
jne
test
ss
out
out
mov
push
into
dec
dec
out
mov
lods
out
aad
or
aam
dec
and
fisubr
test
push
and
retf
adc
daa
xchg
(bad)
xlat
sbb
and
mov
mov
push
inc
inc
and
xchg
pusha
pop
fucomp
or
mov
or
pop
push
scas
adc
and
lock
fist
cmps
mov
loope
int3
mov
jns
mov
stos
xor
jle
cmps
dec
pop
(bad)
jbe
inc
ins
sti
and
stos
mov
enter
jmp
adc
rol
je
sub
sbb
fcmovnbe
sbb
repnz
or
sub
mov
imul
xchg
es
call
jmp
int
in
pop
push
mov
pop
ficomp
imul
and
test
or
inc
mov
stc
or
or
jb
pop
rol
iret
push
fdiv
sub
xchg
cmp
push
xchg
and
arpl
fisttp
inc
stos
out
enter
stc
scas
and
push
push
add
lea
push
cmp
jbe
mov
fimul
sbb
arpl
lods
idiv
fs
cmp
sub
outs
mov
sbb
mov
ja
push
and
cmc
adc
ret
aaa
imul
jge
ret
bound
inc
fwait
inc
jmp
push
and
or
fisub
mov
test
stos
stc
icebp
cmp
adc
outs
push
into
push
dec
pop
add
movs
retf
jo
cmp
cmp
add
pushf
and
aam
push
in
add
jbe
js
mov
bound
lods
xor
mov
xchg
inc
mov
jg
int
or
lods
adc
cmp
out
pop
sub
clc
(bad)
movs
lds
enter
jl
fiadd
mov
adc
lock
push
or
jnp
pop
getsec
dec
xchg
outs
xchg
stos
mov
and
dec
mov
dec
jl
lods
xchg
aaa
loopne
and
mov
das
daa
mov
cmp
pop
std
mov
sbb
in
xchg
jbe
repz
or
jle
sub
ins
pop
push
sbb
cwde
sub
std
ds
jbe
add
xchg
fs
scas
cdq
jnp
jge
sub
dec
movs
pushw
jecxz
xchg
rcl
or
xlat
pusha
dec
popa
jecxz
ja
(bad)
inc
add
daa
mov
cld
pop
mov
sub
sub
jb
test
xchg
ins
js
dec
stc
movs
jno
movs
mov
pxor
movs
jns
in
xor
repnz
push
cmps
cmp
je
sub
push
out
ret
pop
pop
sbb
cmp
push
clc
adc
lods
xchg
hlt
and
xchg
push
jnp
test
fwait
jecxz
or
mov
enter
ja
mov
or
sub
fmulp
xor
mov
aam
aaa
dec
fistp
jmp
ror
(bad)
pop
fcmovu
fmul
hlt
jmp
push
adc
sar
xchg
cmp
call
mov
mov
pop
iret
inc
popa
adc
pop
push
adc
mov
mov
or
out
(bad)
scas
frstor
cmp
add
adc
adc
mov
cmp
mov
ja
or
into
and
push
push
xor
idiv
jge
fwait
(bad)
es
xchg
in
mov
gs
daa
arpl
xchg
push
les
dec
add
test
pop
ins
and
icebp
or
dec
nop
ss
les
inc
push
movs
out
lahf
lock
mov
sub
sub
imul
xor
push
clc
aam
xor
mov
div
xor
outs
jne
or
inc
mov
ss
movs
aas
mov
push
pop
adc
hlt
jo
out
outs
sbb
test
ret
and
aam
fwait
pop
mov
xchg
sbb
sub
sahf
xchg
push
clc
mov
ds
mov
fstp
fldenv
add
or
jg
cli
push
adc
fs
ss
cs
cld
pop
jns
pushf
jg
(bad)
je
frndint
clc
fadd
sbb
inc
mov
push
std
or
repnz
(bad)
addr16
or
jge
lods
inc
scas
das
sbb
cs
leave
push
or
aas
loope
dec
es
mov
xor
pop
je
push
shl
xchg
or
test
add
ja
mov
scas
lods
and
jge
mov
cli
mov
imul
and
mov
out
and
cmovno
jl
mov
or
sbb
jne
stos
int3
push
test
jno
dec
loop
xchg
jmp
inc
je
(bad)
cmp
int3
xchg
mov
cmp
rcr
pop
pop
sbb
ret
and
stc
mov
jg
xor
pop
call
enter
jg
dec
jmp
aad
mov
jmp
mov
jecxz
fnstenv
retf
push
test
cmp
mov
sbb
lea
xchg
nop
mov
xor
std
repnz
jl
into
inc
lahf
test
test
(bad)
xchg
int3
mov
jecxz
xor
ins
inc
nop
in
xchg
loope
rol
pop
test
cdq
mov
(bad)
cmc
iret
dec
rcr
pop
sahf
sbb
dec
popa
xchg
xchg
or
aaa
jnp
jle
mov
clc
or
rol
fwait
out
sub
pop
and
cdq
popf
stos
and
mov
xchg
hlt
sbb
or
fsub
icebp
stos
rcl
lods
push
sub
push
xor
(bad)
fld
mov
adc
shl
inc
retf
and
shl
jnp
lods
das
fild
rcr
movsx
clc
call
not
dec
jo
inc
jnp
es
pop
add
mov
jl
sar
xchg
jnp
mov
scas
inc
repz
cmp
cld
jp
rcl
into
aaa
dec
and
clc
xchg
lods
jae
jge
sbb
xor
push
ins
pop
add
lods
jl
lahf
push
xor
test
sbb
cmps
out
dec
push
(bad)
aaa
push
dec
sbb
iret
xchg
call
gs
push
out
cmp
fdiv
out
add
jae
iret
xchg
(bad)
out
sbb
xor
iret
fadd
pushf
jae
fistp
bound
inc
and
push
or
push
hlt
ja
fbld
fld
cmps
cmp
enter
pop
and
and
adc
retf
pop
ror
stc
sbb
cmp
out
pop
jae
xor
dec
xor
push
fcomp
cmp
or
add
ds
rcr
addr16
lock
mov
fisttp
lods
xchg
xchg
add
cs
dec
nop
and
add
fsubr
dec
stc
mov
mov
sub
movs
push
push
fimul
ja
cmps
push
arpl
adc
je
adc
fadd
mov
push
jmp
leave
(bad)
xchg
inc
cmp
(bad)
lods
xor
adc
add
test
jl
mov
mov
scas
pop
sbb
inc
jl
(bad)
cmp
daa
mov
cld
sahf
out
pop
call
shl
daa
into
mov
loop
loop
xchg
adc
pop
out
push
adc
cli
or
out
adc
sbb
aam
out
mov
daa
ds
into
xchg
jo
loop
test
jmp
test
cmps
dec
dec
icebp
lss
pop
push
cmp
inc
add
adc
push
push
add
cmps
test
lds
enter
pop
(bad)
and
aad
cmc
ss
in
outs
data16
dec
in
jp
ror
clc
sub
popf
push
push
aaa
and
int
and
dec
jmp
mov
inc
out
into
jge
lea
xchg
jmp
ficomp
aaa
rol
pop
(bad)
cmp
lods
ds
sub
or
shl
or
mov
mov
jmp
xchg
mov
mov
jne
int
std
dec
in
aaa
adc
int3
call
adc
ins
push
push
bound
push
xor
xor
sub
push
outs
ja
xor
pop
out
loop
pop
mov
jg
jp
inc
mov
inc
jne
add
or
and
mov
shr
fidiv
les
and
dec
ins
mov
pop
out
sub
xchg
xor
push
bound
fisubr
stos
popf
push
cmp
inc
xchg
or
sbb
jmp
adc
sub
pushf
pop
std
lods
xor
mov
cmp
xor
mov
jno
(bad)
mov
aaa
les
ds
mov
mov
mov
movs
add
(bad)
mov
icebp
sub
mov
sbb
jmp
sbb
cmp
in
pop
mov
push
icebp
fild
inc
mov
jae
and
jg
add
jge
xchg
sub
pushf
inc
sbb
push
ss
sub
lds
fdiv
mov
dec
movs
push
mov
(bad)
pop
hlt
mov
into
cmp
outs
fwait
daa
add
clc
hlt
(bad)
sbb
and
mov
and
out
pop
mov
xchg
push
les
lea
mov
iret
fdivr
ds
or
jns
rcr
(bad)
mov
(bad)
mov
adc
jmp
daa
push
out
cdq
jnp
retf
pop
test
fs
int3
(bad)
xchg
inc
mov
(bad)
inc
inc
add
mov
loop
dec
mov
adc
div
sbb
or
bound
rcr
mov
mov
mov
push
in
into
retf
das
jns
adc
imul
pop
ret
and
push
mov
xchg
add
pop
test
repnz
(bad)
mov
fdiv
pushf
enter
fild
and
inc
popf
cmp
call
mov
and
fs
ins
aad
cmp
fcom
sub
pop
dec
or
lods
fsubr
inc
lods
xor
jecxz
dec
mov
inc
in
jecxz
ins
mov
sbb
push
xor
or
cdq
sub
mov
(bad)
cmp
mov
fs
xchg
pusha
adc
fdivr
retf
inc
sub
mov
push
mov
xor
and
(bad)
and
popf
and
sbb
(bad)
jmp
and
adc
enter
ds
retf
ins
daa
or
popf
jp
jne
(bad)
fsub
xchg
xor
pop
pusha
daa
jae
mov
mov
xor
xor
dec
pop
ror
call
fnsave
stc
(bad)
jo
inc
fcom
and
or
cmp
mov
jle
(bad)
sbb
test
jle
adc
xchg
mov
xor
add
mov
retf
call
mov
inc
jae
or
add
(bad)
js
jo
mov
popf
sbb
pop
nop
mov
arpl
mov
aaa
push
icebp
cmps
icebp
fcmovne
int3
fwait
inc
xor
dec
mov
and
mov
mov
sub
retf
xor
in
add
adc
test
add
add
xlat
and
sti
nop
(bad)
and
imul
lods
sub
rol
fsub
sbb
test
nop
icebp
jg
pop
cmp
jge
(bad)
or
(bad)
add
clc
sub
rol
cmc
test
dec
push
xchg
test
cdq
pop
mov
or
and
lea
icebp
jecxz
(bad)
(bad)
aam
aaa
mov
js
and
inc
das
fcmovnu
push
addr16
sbb
fmul
jp
and
int
push
push
mov
loop
leave
in
sbb
(bad)
lods
dec
push
mov
lock
sbb
adc
fisubr
rcr
xchg
scas
sbb
aas
mov
sbb
pop
mov
lea
pop
iret
xor
pop
ds
(bad)
fisubr
outs
sbb
pusha
inc
dec
or
dec
retf
(bad)
push
arpl
movs
cmp
(bad)
mov
push
inc
push
cmp
sub
retf
imul
ds
jns
into
or
add
sbb
xchg
jcxz
call
jae
sub
or
test
push
adc
inc
in
imul
sbb
stos
dec
push
inc
mov
sub
or
dec
rcl
lahf
jno
dec
fs
(bad)
in
repz
xor
jnp
cmps
lds
sbb
push
add
cmp
cld
and
adc
inc
rcr
mov
or
or
mov
xchg
mov
jmp
push
jp
adc
dec
loope
mov
cdq
(bad)
fidiv
loope
pop
mov
sbb
jle
sbb
sti
fadd
cli
and
int3
sahf
mov
or
pop
ror
push
icebp
add
xchg
jmp
mov
sub
test
(bad)
sbb
inc
cdq
mov
mov
loop
inc
xchg
sub
xchg
mov
into
mov
int
fs
sti
stos
dec
inc
and
push
dec
nop
popf
outs
sbb
stos
pop
add
push
int
pmulhw
arpl
jae
rcl
jmp
or
stos
xor
stc
lock
retf
inc
xor
outs
xor
and
dec
scas
shl
in
stc
loope
je
push
daa
outs
rcl
push
and
fmul
mov
ja
fsubp
(bad)
xor
jnp
mov
pop
popf
add
sbb
out
fcomp
daa
push
add
test
cmps
push
retf
cs
cmps
imul
movs
or
xchg
test
pop
sub
inc
fs
jecxz
das
fst
sub
mov
aad
or
popf
jno
and
bound
mov
sub
xor
cdq
jne
ds
push
iret
xor
sbb
push
and
cmp
fcmovnb
in
jp
mov
mov
dec
sub
out
sbb
out
mov
test
js
popf
inc
out
ret
mov
pop
lods
imul
cdq
cld
sub
int
mov
iret
int3
clc
fild
imul
mov
in
nop
pushf
mov
inc
adc
pop
out
fidiv
repz
loop
lods
clc
arpl
loop
mov
seto
in
xor
in
cli
lea
ins
(bad)
in
jmp
retf
out
imul
inc
ret
into
jns
in
mov
add
fucomi
data16
shr
repz
rol
retf
lock
sub
cmp
mov
shl
cmp
cs
xchg
imul
push
aad
ret
pop
push
call
in
in
stos
dec
int3
sbb
jo
push
mov
mov
ja
jnp
adc
adc
mov
shr
sbb
mov
out
add
jno
dec
pushf
test
mov
fwait
pop
ss
sub
jae
les
xchg
pusha
dec
jmp
fld
xchg
sub
mov
sahf
(bad)
loope
pop
jbe
rcr
les
cmp
mov
dec
cmp
mov
outs
hlt
rol
pop
iret
inc
sbb
int
and
ins
xchg
repz
clc
ds
mov
pop
and
adc
inc
cdq
add
inc
lahf
pop
addr16
xor
das
sub
cdq
repnz
mov
or
mov
test
add
push
ds
pop
sbb
sti
call
mov
lahf
ja
stos
sar
inc
xchg
jne
lds
jg
adc
aam
jecxz
or
or
mov
dec
inc
sbb
add
lds
pop
fwait
into
ret
inc
push
inc
mov
jl
sub
push
xchg
dec
mov
leave
mov
mov
cmp
push
jl
sbb
cli
mov
adc
inc
ins
xor
inc
pop
rcr
(bad)
and
mov
dec
stos
jo
mov
mov
xchg
call
push
push
xor
cmp
or
cwde
and
sti
pop
adc
movs
mov
or
call
xchg
lds
fwait
imul
lea
adc
dec
aad
mov
cmp
inc
mov
jp
xchg
push
push
fs
pop
xchg
out
ficom
(bad)
nop
mov
aas
mov
and
mov
stos
out
xor
sbb
lods
sti
ins
xlat
and
adc
std
popf
lods
dec
int3
jmp
iret
cmc
cmp
mov
mov
mov
addr16
test
push
push
enter
or
sahf
mov
fwait
ror
fsub
pop
dec
jge
ret
aas
jg
maxps
push
loope
dec
mov
mov
stc
pop
sbb
in
ret
loopne
or
imul
jo
test
mov
mov
repz
jg
pop
dec
mov
sub
data16
repnz
icebp
maskmovq
not
add
ror
clc
aad
aad
pop
xchg
(bad)
mov
lock
aas
add
in
sbb
ret
pop
push
jno
std
pop
and
adc
shl
push
iret
mov
sub
cmp
ds
sub
xor
push
sti
push
cwde
mov
xchg
jno
loop
in
mov
sbb
fidiv
or
mov
xchg
and
add
and
shl
dec
mul
in
push
xchg
popa
xor
or
in
xchg
mov
shr
push
push
mov
dec
adc
xor
mov
mov
jmp
dec
out
imul
cli
inc
pop
pop
nop
jp
xor
mov
clc
mov
cmps
mov
xchg
cmp
push
xor
xchg
sbb
enter
fisttp
sub
test
test
adc
lds
addr16
push
sub
pop
jle
or
stos
ret
add
aas
cld
mov
mul
sahf
xor
mov
mov
fsub
pop
mov
mov
jo
mov
mov
cmps
jns
xor
shl
sbb
mov
je
jno
arpl
call
dec
cmp
inc
fsubrp
add
bound
sub
lock
ds
mov
sub
js
imul
adc
pop
dec
pop
inc
frstor
xchg
mov
and
repnz
scas
fmul
push
jmp
sub
add
fs
mov
xchg
jno
sbb
repz
inc
sub
dec
pop
sub
gs
jo
data16
out
push
xchg
hlt
addr16
add
ror
jne
sbb
jae
into
sub
rcr
hlt
jg
xchg
inc
popa
mov
ins
mov
push
dec
(bad)
repnz
cmp
pop
std
sar
pop
fld
cmps
fidiv
sbb
xor
mov
stos
and
into
or
fidiv
arpl
ds
loop
movs
das
pushf
xlat
push
and
hlt
clc
xlat
iret
xor
pop
xchg
dec
ds
leave
mov
outs
mov
das
jl
data16
ins
xor
and
jns
data16
adc
xor
or
arpl
adc
mov
clc
mov
add
pushf
pushf
adc
inc
adc
mov
(bad)
movq
sbb
imul
add
mov
jo
iret
in
call
imul
ins
or
out
fdivr
data16
out
push
dec
test
loopne
cmc
cmp
push
lods
fldenv
or
xor
and
js
scas
adc
push
pop
mov
push
mov
jl
fld
ret
xor
pop
pop
daa
in
mov
iret
add
in
lock
rol
outs
push
ds
xchg
out
jp
xchg
xlat
sahf
in
cmps
std
retf
aam
mov
pop
mov
mov
xchg
cli
adc
stos
repz
xchg
daa
jmp
xchg
mov
lahf
adc
push
pop
test
push
in
sub
fistp
push
in
loopne
out
mov
cs
dec
in
inc
outs
sahf
pop
push
(bad)
mov
les
shl
push
xor
dec
fisttp
lods
jns
xchg
xor
(bad)
jge
xchg
push
(bad)
arpl
sar
bound
push
mov
outs
pop
mov
int3
mov
loopne
sub
push
or
adc
fld
enter
and
imul
js
mov
pop
(bad)
dec
jo
dec
movs
imul
dec
clc
or
call
cmp
pop
std
jbe
popf
int
xchg
mov
mov
mov
loope
add
rol
arpl
lds
call
mov
pop
inc
in
out
into
cs
lods
dec
sbb
fisttp
in
jge
lds
pusha
shr
pop
cmp
retf
iret
std
fidiv
jl
inc
mov
(bad)
outs
cmp
pop
xchg
popa
jl
push
xor
jg
iret
sub
shr
fsub
cli
push
(bad)
xor
mov
and
pop
mov
cmps
jno
jle
repz
lock
cmp
rol
scas
mov
mov
dec
push
cmp
test
outs
and
mov
push
pop
and
(bad)
lods
xor
sub
daa
mov
std
retf
mov
and
(bad)
mov
retf
lods
add
inc
adc
jge
fsubrp
fmulp
adc
nop
retf
(bad)
outs
jne
or
sub
imul
jne
int
inc
pushf
inc
gs
jmp
mov
aam
pop
pop
pop
mov
retf
test
xchg
cmp
nop
and
sub
xchg
xchg
test
repnz
cmp
outs
lds
push
test
inc
ret
and
lds
mov
ret
push
pop
gs
sbb
mov
mov
pop
retf
mov
(bad)
ja
xlat
sbb
mov
sahf
scas
dec
shl
sahf
cmps
inc
sar
in
outs
jle
cmp
xor
int
nop
into
xchg
adc
(bad)
mov
scas
shl
jle
lock
xchg
sahf
jb
mov
ret
inc
jne
(bad)
fidiv
fdivr
sbb
adc
js
and
neg
out
call
pop
and
push
icebp
jmp
or
mov
sub
into
mov
dec
or
pop
push
lea
or
ins
sbb
sahf
rcr
int3
cmp
jecxz
int3
sub
add
jno
sbb
mov
push
inc
sbb
push
cwde
aas
jl
xchg
call
jbe
jno
or
xchg
adc
or
test
pushf
add
mov
dec
in
ror
xchg
popf
inc
cmp
jo
fmul
dec
mov
stos
mov
imul
int
jnp
test
fstp
outs
sbb
bound
cmps
push
fnstcw
hlt
mov
fcmovbe
xor
xor
inc
pusha
ret
imul
and
movs
and
es
xor
or
inc
ja
mov
xchg
in
jle
jns
jmp
or
and
iret
adc
inc
mov
popf
daa
mov
stos
or
add
ins
dec
jle
test
mov
dec
int
test
mov
push
mov
sbb
mov
and
adc
retf
mov
push
pop
retf
(bad)
inc
(bad)
out
movs
mov
jge
ins
and
and
pop
mov
xchg
push
fsubr
ret
addr16
ss
push
popa
leave
xor
pop
out
(bad)
mov
test
push
push
rcl
movs
cmp
add
cmp
arpl
bound
jnp
push
lahf
cmp
call
jl
stos
aad
inc
xor
sahf
mov
add
dec
or
jmp
sub
push
xchg
int
repnz
adc
call
scas
sub
inc
(bad)
in
cmp
jmp
inc
jb
mov
(bad)
fnsave
add
lds
mov
loopne
in
loope
outs
test
push
xor
fdivr
add
pushf
cdq
ins
call
cli
jg
xchg
xor
xor
ret
mov
mov
pop
ret
in
repnz
add
push
enter
in
inc
xor
inc
sbb
xchg
pop
std
lods
fs
fbld
push
stos
push
test
sti
dec
dec
cmp
sub
lds
aaa
movs
jmp
mov
jmp
outs
ss
adc
in
(bad)
cmps
sub
and
push
fwait
xchg
xchg
xchg
fmul
xor
lahf
fs
sub
pop
xor
leave
xchg
and
xor
sub
mov
dec
shl
pop
cs
iret
int
aam
fldcw
mov
(bad)
daa
je
and
loopne
jns
cwde
aaa
xor
sub
or
mov
les
add
push
fbld
ss
into
xor
sbb
ja
pop
sbb
loopne
imul
xlat
int
ficom
mov
jmp
mov
and
out
scas
jg
jns
cmp
loop
rcl
rcl
jns
call
jecxz
iret
inc
add
jns
xor
xor
push
inc
mov
xchg
or
push
push
cwde
xchg
lahf
push
aam
inc
out
iret
popf
nop
and
repnz
retf
leave
xor
inc
jmp
jmp
mov
ss
push
ja
mov
pop
lds
fcomp
mov
aas
xchg
and
cli
hlt
mov
lahf
or
cdq
into
jne
inc
mov
lock
int
outs
and
xchg
test
rol
dec
push
lods
cmps
iret
ror
jne
out
out
adc
xchg
lds
jns
dec
gs
cmp
push
mov
jb
in
jno
shl
mov
pop
add
pop
sbb
scas
cmps
(bad)
aam
push
rcr
and
xchg
test
pcmpgtb
jae
rcl
adc
jg
sub
mov
stc
jg
push
dec
repnz
leave
push
mov
(bad)
jge
mov
cmp
mov
jmp
inc
cmp
test
sub
sub
push
push
ss
lock
clc
cmc
pusha
and
mov
js
adc
pop
test
test
xchg
stos
jp
inc
dec
sbb
call
neg
fs
sub
mov
bound
pop
cmp
out
fsub
aaa
lahf
mov
xor
pop
ins
ret
cmc
mov
xchg
dec
iret
call
adc
pop
pop
adc
popf
popf
test
pop
mov
jbe
push
sti
and
push
push
lea
rcl
jp
push
arpl
pop
test
aad
(bad)
daa
inc
jno
xchg
dec
cmp
mov
test
push
repnz
lock
mov
cmp
add
and
pop
xor
mov
inc
push
mov
arpl
xor
mov
and
dec
fiadd
mov
and
push
push
add
mov
mov
sub
adc
xchg
les
lods
in
(bad)
outs
xor
push
push
dec
jecxz
fst
arpl
loopne
adc
and
sahf
mov
fwait
push
mov
lahf
or
sub
call
cmp
lds
mov
dec
add
in
aas
sbb
xor
(bad)
daa
and
pop
rol
cmp
jne
xchg
(bad)
fbstp
retf
cmp
movs
retf
test
jns
mov
jmp
scas
or
mov
hlt
jae
inc
push
icebp
pushf
pop
xor
and
pop
(bad)
shl
dec
dec
cwd
call
imul
nop
mul
cdq
push
(bad)
jp
adc
hlt
mov
dec
(bad)
repz
sub
mov
xor
movs
and
xor
push
hlt
lea
mov
cmp
ss
mov
sub
jge
test
pop
int3
scas
repz
sub
(bad)
adc
aam
sbb
sbb
dec
jno
push
loope
loopne
sub
cmps
xchg
xor
stc
retf
jne
ror
xchg
popf
xor
sahf
sahf
mov
add
arpl
arpl
jbe
cli
je
cmp
nop
pop
pop
add
fisttp
jmp
es
pop
xor
pushf
pop
cmp
fisttp
fidivr
shl
addr16
cmc
test
arpl
push
int3
in
inc
js
das
lock
or
lea
cld
or
mov
mul
or
cdq
cmc
loope
in
xchg
pop
push
or
in
fmul
push
pushf
mov
jnp
fidiv
adc
xor
mov
bound
ss
sub
adc
cdq
mov
sar
add
and
jne
scas
sbb
in
dec
mov
or
sub
add
push
mov
cmp
cmp
sub
xchg
call
lods
jo
fisub
cmc
or
push
jnp
xor
jns
mov
(bad)
out
out
scas
sbb
rcl
sar
mov
add
mov
sub
lahf
(bad)
sub
mov
push
imul
(bad)
iret
sub
sbb
sbb
jne
mov
add
mov
ins
lahf
hlt
dec
ret
xor
jno
cdq
add
xor
leave
mov
mov
sub
mov
adc
or
sbb
daa
cwde
inc
mov
push
mov
call
and
jns
cmp
test
out
dec
pop
sbb
mov
sbb
pop
lods
pop
cmp
out
or
xlat
mov
ficom
pop
fidiv
cwde
inc
dec
hlt
mov
mov
ins
retf
jo
in
jo
pop
sub
jno
add
inc
and
aaa
(bad)
cwde
mov
leave
call
ror
mov
inc
add
lea
xchg
push
sub
repnz
dec
ins
xchg
scas
clc
or
xor
mov
add
pushf
rcl
push
pop
adc
fdivr
ret
les
pop
cld
scas
dec
push
mov
inc
call
jae
add
sbb
mov
sbb
iret
xor
dec
dec
seta
jle
and
add
sti
sbb
xchg
fbstp
xchg
bound
pop
je
xchg
jno
inc
sti
xchg
cwde
fadd
push
loope
sbb
aad
and
push
je
ins
(bad)
dec
and
mov
enter
out
cld
mov
in
mov
test
mov
sub
test
adc
fdivr
call
shr
scas
sar
mov
sahf
mov
add
mov
inc
dec
xor
pop
aas
dec
mov
inc
retf
and
dec
sbb
pop
call
ja
jl
rcr
or
or
test
mov
les
shl
mov
sub
pop
or
xor
shr
or
fild
push
stos
inc
pop
nop
and
xor
int3
or
ins
pop
xor
mov
add
addr16
(bad)
adc
mov
fcom
imul
inc
popf
cmc
jl
mov
jp
outs
inc
(bad)
push
xchg
mov
popa
sub
dec
(bad)
or
scas
(bad)
(bad)
loop
test
mov
cmp
inc
mov
sub
mov
scas
xor
sub
(bad)
(bad)
out
cmp
test
arpl
fisubr
and
in
jae
stos
imul
fsub
xor
push
out
mov
retf
push
jns
inc
leave
push
xor
push
in
and
sub
mov
xor
out
inc
sbb
test
sbb
sti
sbb
stos
nop
xlat
(bad)
push
or
jge
dec
call
cmps
add
retf
stos
call
sub
or
pusha
mov
sub
pop
add
arpl
add
ret
hlt
movs
push
dec
jo
mov
shl
sub
call
lock
xchg
or
cmp
pop
mov
loopne
aam
int3
mov
inc
inc
das
(bad)
(bad)
outs
add
(bad)
clc
sbb
add
sar
lods
lock
ror
ja
(bad)
loop
outs
pop
cld
push
leave
adc
jle
adc
xor
mov
jno
je
inc
push
mov
not
popa
adc
mov
and
pop
push
jp
adc
mov
test
(bad)
scas
dec
xchg
mov
daa
out
shl
outs
div
fmul
or
jno
les
mov
inc
jae
sub
je
ror
dec
imul
mov
and
movs
cs
movs
in
in
inc
pushf
mov
xchg
movs
push
cmp
out
sub
in
lods
mov
cmps
or
lahf
das
aad
hlt
ror
adc
popf
xor
shl
jl
dec
leave
inc
cmp
xchg
(bad)
xchg
inc
out
xor
jecxz
movs
or
and
stos
xor
out
test
jp
cld
iret
hlt
lods
pop
popa
sub
mul
add
mov
jmp
aaa
xchg
jg
test
push
mov
imul
and
or
mov
icebp
xchg
pop
adc
cli
and
nop
xor
pop
jl
or
mov
retf
dec
retf
jbe
or
cs
fisub
pop
outs
lahf
test
(bad)
std
mov
sub
cmp
push
aad
jecxz
xchg
push
jo
xchg
mov
and
test
dec
arpl
mov
aaa
mov
fild
rcr
add
enter
jae
addr16
dec
mov
mov
sub
repnz
fld
inc
imul
mov
scas
call
ret
mov
ret
retf
mov
dec
inc
inc
sub
fist
jbe
mov
cdq
pop
(bad)
jmp
mov
cmps
or
popa
and
lods
mov
movs
inc
jl
inc
dec
es
ret
lds
out
cli
jle
mov
sub
jmp
jo
in
jle
add
lds
out
cld
int
jle
ins
mov
mov
jge
je
sub
mov
in
dec
mov
xor
lds
shl
les
mov
aam
mov
pop
invd
xchg
jb
xchg
mov
jmp
jno
scas
cld
inc
sub
pop
xchg
jns
add
aad
clc
xchg
xchg
push
push
daa
xor
mov
lds
ds
(bad)
push
ins
inc
fwait
dec
shl
pop
cmp
adc
gs
(bad)
retf
ja
clc
stos
jp
jmp
cmp
mov
lds
xor
pusha
push
call
aad
jecxz
cwde
inc
xor
imul
jg
mov
jl
push
sbb
loope
sar
into
sahf
xor
fimul
rcr
cmp
leave
mov
push
mov
cmp
xor
cmp
sbb
aam
adc
sub
mov
add
push
(bad)
lock
and
fcmovne
inc
mov
out
(bad)
div
xchg
ror
rcr
ret
xchg
loope
ret
nop
lahf
std
adc
mov
dec
leave
add
cdq
pusha
js
es
je
mov
popf
frstor
jmp
inc
les
cmps
sub
daa
or
je
retf
aam
mov
pop
xor
push
inc
outs
mov
push
sub
cli
add
mov
(bad)
in
ret
sbb
dec
mov
aaa
lods
pop
or
fs
adc
fwait
loop
xchg
(bad)
mov
mov
sete
push
into
cmps
push
mov
fdivr
in
loopne
les
scas
pusha
arpl
add
aas
in
pop
jge
into
jno
cmc
adc
das
bnd
aad
pop
add
ret
in
fidiv
rcr
pop
or
pop
cmps
xchg
sub
dec
cdq
sub
adc
mov
scas
cmp
movs
cmp
loop
pop
sub
and
adc
push
hlt
mov
aas
pop
lahf
out
dec
pusha
std
and
mov
inc
addr16
add
jge
pop
icebp
inc
sahf
add
xor
jg
adc
outs
ror
xchg
or
and
ret
test
mov
dec
push
pop
xor
pop
loop
mov
cmp
data16
cmps
gs
jl
sti
xchg
(bad)
in
icebp
int
mov
sub
cmps
daa
mov
xchg
or
cwde
shl
jge
mov
ja
mov
xchg
xor
pop
and
out
sub
mov
jge
(bad)
xor
xchg
dec
xor
loopne
mov
(bad)
ret
cmp
push
pop
sbb
mov
call
sbb
and
out
jo
sub
inc
push
je
cmp
mov
inc
adc
mov
cwde
fsubr
cmc
sbb
or
add
xchg
sbb
clc
scas
mov
enter
pop
xchg
out
cwde
and
sub
or
mov
imul
lods
fcmove
pop
data16
mov
dec
sbb
dec
mov
cmp
ja
rcr
xlat
sub
mov
jo
or
test
shr
leave
or
(bad)
nop
(bad)
ret
inc
dec
adc
sar
push
jmp
xchg
mov
loop
mov
xchg
jae
mov
adc
fxch
xchg
add
std
pop
std
retf
in
stc
rcr
xchg
loope
movs
sub
clc
(bad)
mov
xchg
cli
lahf
xchg
mov
dec
xchg
pusha
pop
mov
mov
lock
popa
in
lahf
inc
jp
xchg
jl
or
pop
push
xchg
in
in
shl
scas
(bad)
outs
cmps
xchg
sar
sahf
in
push
xchg
mov
cmp
mov
sar
pop
(bad)
mov
nop
jb
call
(bad)
mov
push
mov
lahf
and
dec
inc
repz
pop
inc
adc
jae
icebp
cs
pop
cwde
dec
pop
xor
add
loop
or
test
sbb
and
inc
push
or
push
add
mov
push
bound
mov
loop
jmp
push
out
xchg
inc
mov
pusha
stc
inc
popa
push
sub
sub
sub
movs
je
xor
pop
mov
bound
or
xchg
pop
push
rcr
inc
cmp
imul
aad
or
sbb
cmps
xchg
lods
ret
inc
xchg
shl
fst
loopne
out
inc
xor
and
ja
jecxz
xchg
push
add
dec
pushf
stos
lock
in
jmp
cmps
es
jno
popf
arpl
shl
outs
leave
xor
jno
or
sbb
adc
mov
push
and
movs
imul
pusha
ret
pop
add
into
pushf
scas
jae
mov
mov
fdiv
pop
mov
inc
mov
and
daa
daa
inc
adc
outs
inc
in
lods
mov
pop
fstp
cmps
loope
je
adc
fbld
imul
xchg
push
sbb
sub
jge
push
xlat
fs
mov
clc
loopne
(bad)
std
inc
aas
sub
pop
test
ins
pop
jmp
cmc
scas
rcl
icebp
xchg
add
hlt
sbb
nop
push
stos
ss
or
(bad)
sub
je
pop
int
and
adc
xor
je
mov
mov
push
xchg
add
jne
retf
aad
scas
mov
int
sbb
inc
mov
sub
retf
neg
sbb
jg
retf
test
inc
pop
adc
ja
push
mov
jg
cmp
add
mov
test
jae
or
sbb
mov
sub
mov
shl
mov
mov
xchg
pop
jb
lods
xchg
xchg
loop
outs
lds
stc
addr16
cli
sub
cdq
aas
push
popa
hlt
test
adc
enter
movs
mov
jnp
movs
xor
jo
or
cdq
clc
std
das
xor
dec
adc
push
sbb
loopne
iret
fiadd
adc
xchg
bound
xor
pop
push
stos
and
push
dec
jnp
scas
outs
pusha
ds
jne
imul
movs
dec
pop
mov
xor
popa
das
das
or
push
xor
(bad)
in
hlt
sbb
cmps
xor
dec
push
(bad)
iret
push
(bad)
or
(bad)
popf
pop
jge
outs
mov
pop
push
aam
dec
or
ret
out
push
aas
(bad)
cmps
enter
add
fstp
mov
jle
xchg
push
lods
fs
das
dec
rcr
xchg
mov
call
dec
mul
in
xor
mov
scas
xchg
sub
in
adc
clc
sbb
jp
dec
pop
jns
fs
imul
sub
xor
cdq
pop
jg
aad
retf
imul
jge
inc
jno
xchg
push
enter
xchg
add
sti
cld
push
cmp
or
jmp
push
cmp
jmp
mov
and
jnp
mov
dec
xor
fist
adc
addr16
cdq
or
test
aam
ret
push
mov
mov
fcmovne
ins
(bad)
fcmovbe
sbb
inc
sbb
pop
add
test
fadd
into
jp
test
dec
and
aas
dec
sbb
retf
pop
adc
sub
dec
call
ss
bound
dec
lods
(bad)
popf
rol
clc
sbb
pop
mov
sar
lods
jne
inc
cld
outs
pop
adc
es
mov
adc
sahf
stos
mov
and
into
outs
rcl
jbe
outs
add
mov
out
in
arpl
hlt
(bad)
(bad)
mov
push
mov
xchg
pop
cmp
jns
hlt
jg
outs
adc
retf
mov
sbb
lods
outs
sti
or
test
inc
fisttp
xchg
adc
dec
leave
pop
sub
outs
mov
adc
push
cmp
jle
sub
or
mov
xchg
test
sahf
leave
mov
aad
sbb
mov
imul
loope
dec
pusha
enter
dec
sbb
and
(bad)
mov
fisubr
cwde
leave
imul
out
jle
aad
daa
dec
popf
ja
es
call
xor
sub
imul
cld
push
xchg
mov
in
pop
push
fbld
sub
jno
mov
xchg
dec
arpl
stos
push
dec
(bad)
or
ins
clc
mov
dec
xchg
fisttp
call
pop
sub
jecxz
ret
cmp
inc
push
xchg
adc
inc
add
test
mov
add
and
dec
daa
ds
loopne
hlt
lahf
pop
xor
pop
sub
fnop
inc
push
add
or
loope
out
push
push
jmp
(bad)
mov
leave
je
xor
adc
cmp
cdq
out
rcl
and
add
leave
adc
outs
adc
jecxz
cdq
int3
stos
add
aad
push
cli
dec
dec
xor
mov
fwait
jl
push
mov
sub
adc
out
jno
popa
repz
add
and
xchg
enter
movs
cmp
fimul
sbb
lock
jnp
call
pop
jl
fnstcw
and
push
test
cmp
sub
inc
jae
fisttp
(bad)
int
jg
pushf
inc
jne
and
jg
mov
add
mov
sbb
push
mov
hlt
lock
addr16
and
sbb
imul
out
cmc
jo
xchg
mov
(bad)
ror
xor
mov
pop
daa
arpl
in
(bad)
(bad)
fiadd
ffreep
jbe
sbb
fadd
retf
jmp
out
fistp
jge
push
xor
jge
dec
and
xchg
add
jmp
and
iret
pop
fucomp
add
pop
jo
mov
adc
jnp
div
jmp
iret
cmps
push
xchg
das
pop
leave
adc
lods
cmp
stos
inc
add
cmp
inc
jbe
cmp
jae
xchg
xchg
pop
sbb
leave
aam
mov
in
mov
inc
xchg
mov
pusha
lds
ds
sbb
add
pop
imul
(bad)
fsub
mov
and
jne
mov
scas
sbb
inc
jl
cmp
leave
pop
mov
scas
xchg
mov
pop
xchg
imul
or
rcl
mov
jp
sbb
jle
ja
mov
xchg
mov
add
mov
lods
ret
cmps
repnz
pop
mov
pushf
movs
in
xor
inc
jae
inc
repz
dec
sub
das
or
pop
test
pop
xor
adc
popa
push
mov
ins
inc
popf
gs
mov
pop
sub
inc
mov
cmp
cmp
aam
test
shl
push
mov
mov
sub
mov
in
(bad)
jecxz
cmp
push
jge
int3
aam
cmp
outs
outs
or
sar
push
(bad)
ror
call
jg
call
fsub
or
pusha
sub
lods
scas
pop
inc
test
dec
popa
xchg
cmp
jne
xchg
clc
nop
imul
shl
add
mov
cmp
xor
in
pop
xor
cld
xor
enter
call
test
dec
pop
call
in
outs
xchg
mov
mov
rol
es
pushf
(bad)
adc
rol
or
mov
or
das
xor
add
cld
adc
jg
push
xor
sub
fld
jo
jp
scas
scas
xchg
pop
adc
sub
js
pushf
jne
inc
rol
popa
loop
sbb
enter
fstp
mov
pop
lods
mov
in
cmp
mul
pop
dec
jne
mov
xor
cmp
adc
dec
sbb
cmp
fild
fisttp
add
out
ins
rol
cmp
mov
push
test
mov
mov
dec
mov
push
mov
neg
retf
loop
stos
jl
lds
jecxz
sub
in
out
ret
sbb
call
dec
mov
jne
adc
mov
or
les
mov
jnp
add
or
push
ror
fild
mov
dec
add
fldenv
mov
pop
add
fcom
add
popf
popa
mov
and
gs
fs
dec
movs
add
in
data16
in
add
loope
(bad)
mov
imul
jo
pop
(bad)
frstor
mov
nop
xor
popa
mov
inc
loopne
adc
and
shl
imul
stos
jbe
or
out
jl
jle
enter
sbb
pop
(bad)
nop
pop
and
fcomp
mov
mov
push
sub
(bad)
sbb
ficomp
int3
lea
add
movs
and
mov
ss
nop
repz
and
push
cmps
mov
pop
outs
inc
data16
sbb
and
pop
push
cld
icebp
sub
mov
and
je
lods
mov
dec
push
cmp
test
lea
lahf
and
jno
(bad)
mov
mov
inc
mov
xchg
xor
in
fidiv
mov
inc
pop
scas
call
add
ins
pop
jl
jle
adc
cmp
jne
vmovd
repnz
push
fimul
cmp
mov
out
cdq
pop
xlat
and
stos
mov
pop
push
mov
xchg
in
mov
test
xchg
es
inc
cmps
dec
xor
jmp
push
mov
lods
mov
in
jb
rcl
test
out
xlat
pop
xchg
iret
xor
push
pushf
mov
cmps
xor
or
sub
or
adc
dec
jo
scas
shl
cmp
cmp
sbb
and
arpl
cmp
das
retf
ret
mov
add
or
cmp
push
cmp
xor
pop
icebp
inc
or
test
dec
fstp
add
iret
pop
and
je
and
push
mov
jp
test
push
inc
push
xchg
dec
mov
test
jns
mov
lock
xchg
nop
pusha
shl
dec
cmp
mov
test
jbe
fwait
cmp
mov
inc
(bad)
pop
stos
push
cmps
jmp
adc
(bad)
mov
popf
ins
int
xchg
adc
repnz
push
call
xor
and
rcl
test
movs
mov
fstp
add
int3
mov
adc
scas
sub
jecxz
outs
cs
mov
sub
retf
mov
dec
aas
stc
mov
cld
out
adc
cwde
adc
push
inc
or
jp
int
mov
jmp
sbb
add
clc
stos
test
mov
int
inc
loop
fisubr
inc
leave
or
pusha
xchg
lods
stc
mov
bound
(bad)
push
dec
cmp
mov
test
adc
retf
mov
push
sbb
je
dec
hlt
dec
add
mov
aad
xchg
pop
repnz
in
loope
pop
mov
cmps
daa
mov
arpl
adc
inc
cmp
sub
jnp
pop
aam
mov
lahf
pop
pop
fimul
mov
and
inc
pop
and
jecxz
xchg
mov
aaa
lods
inc
cmp
sub
fimul
test
rol
mov
ret
shr
outs
scas
stos
jb
sub
test
or
popa
(bad)
fbld
dec
pusha
fstp
inc
iret
jmp
and
inc
jl
mov
pop
pop
test
stc
fs
pop
push
arpl
xchg
push
pop
idiv
sub
out
xor
aas
retf
mov
int
les
gs
aam
cdq
out
mov
loopne
das
leave
pop
dec
leave
seta
fcomi
mov
stos
retf
sti
rol
shl
mov
scas
out
ss
inc
push
push
aas
add
fdivr
gs
(bad)
or
not
pop
outs
push
add
scas
call
shl
pushf
test
outs
fbstp
pop
mov
iret
cmc
add
cmps
adc
mov
ret
inc
outs
jne
ret
xchg
out
stc
pop
js
sar
arpl
ja
mov
jge
(bad)
jno
or
push
mov
push
dec
mov
rcl
(bad)
dec
sub
popa
adc
mov
mov
sub
push
xchg
and
adc
sub
packuswb
fimul
imul
dec
adc
(bad)
loope
dec
pop
stc
dec
daa
jle
retf
mov
mov
jle
scas
ss
outs
xor
popa
xor
jecxz
pop
push
pop
fidiv
pop
popa
and
jbe
adc
push
dec
push
xlat
test
xchg
pop
(bad)
fmul
xor
dec
sbb
xchg
ror
mov
sar
pop
clc
clc
mov
sub
cmp
rol
mov
pop
push
jne
shl
call
call
ins
(bad)
pop
aad
sbb
inc
icebp
cmp
xor
dec
xchg
adc
push
popf
es
xor
rcr
int3
mov
xor
pop
popa
mov
movd
xlat
inc
and
adc
or
mov
loope
sub
ficom
push
movs
push
pop
jae
fcom
(bad)
ins
not
dec
xchg
sub
(bad)
jmp
cs
add
nop
stos
dec
loopne
fs
daa
jmp
pusha
xor
mov
daa
xchg
sub
in
cld
(bad)
in
cld
sub
test
pop
call
std
loopne
(bad)
ret
jno
adc
js
sbb
or
mov
and
and
or
leave
xchg
pop
push
pop
push
ins
inc
add
add
pop
mov
mov
(bad)
ficom
pop
mov
cmp
pushf
dec
pop
out
dec
cli
mov
dec
dec
sti
xchg
(bad)
loopne
xor
mov
scas
adc
mov
outs
adc
mov
adc
push
sbb
pop
jnp
int
mov
dec
inc
sbb
or
pop
movs
jo
jns
mov
mov
pop
jno
xor
jl
inc
sahf
or
adc
or
test
retf
dec
mov
das
int3
push
sti
sbb
lds
scas
cwde
inc
sbb
pop
push
test
stc
cmp
sbb
aam
jno
sbb
push
sbb
mov
push
rcl
shl
adc
mov
fwait
(bad)
repz
cmp
and
xchg
repz
lea
or
mov
and
clc
test
mov
adc
iret
cmp
jbe
ja
bound
stos
sahf
add
dec
xor
mov
je
retf
jns
into
xor
add
dec
pop
or
aad
call
addr16
jno
xchg
(bad)
and
pop
test
inc
xor
in
add
fs
data16
lds
add
xor
test
fdivr
mov
sbb
push
dec
ins
jno
rol
inc
sbb
mov
out
aaa
xchg
push
push
scas
ins
and
stos
aad
xchg
pusha
jge
push
xchg
sbb
mov
mov
mov
pop
aad
inc
hlt
jo
mov
aad
mov
and
hlt
push
cmp
rcl
sbb
ins
(bad)
dec
push
mov
dec
retf
pusha
adc
mov
seto
into
repz
dec
fsub
data16
sbb
dec
dec
add
or
mov
cli
xchg
inc
call
es
mov
hlt
hlt
inc
test
les
fld
shl
jg
imul
or
mov
jmp
mov
fdiv
sbb
stos
mov
cmp
xchg
bnd
lds
dec
pop
adc
mov
push
jbe
mov
in
cld
lock
xchg
jae
(bad)
out
mov
pop
xor
ds
ja
cdq
retf
inc
and
pop
sar
fcom
pop
stos
daa
xlat
imul
push
or
push
daa
jnp
or
mov
lods
xchg
cmp
xchg
inc
(bad)
sar
outs
pop
test
pcmpeqd
stos
add
aad
sub
adc
out
sar
mov
shl
leave
jmp
mov
jle
shr
mov
cmc
xor
arpl
or
sbb
(bad)
call
lods
cs
(bad)
jae
imul
(bad)
aam
add
popf
inc
mov
pop
faddp
adc
adc
or
hlt
cld
les
rcl
pop
movs
xchg
fdiv
fsub
hlt
paddw
pop
and
fld
ret
jo
stos
cdq
jmp
xor
sbb
push
cmps
retf
push
mul
or
in
dec
push
mov
call
out
(bad)
mov
sar
pop
jbe
mov
cld
hlt
sub
adc
mov
xchg
mov
pushf
jecxz
sbb
imul
mov
mov
daa
adc
push
mov
jae
test
add
push
inc
fiadd
or
and
(bad)
jno
out
test
jb
inc
inc
or
and
ins
mov
retf
jmp
mov
je
mov
mov
mov
dec
push
cmps
fdiv
add
jg
add
out
jb
mov
jno
mov
scas
pop
movs
jmp
(bad)
mov
scas
xor
and
fcmovnb
test
mov
lahf
push
push
mov
out
ss
shl
mov
jp
sti
das
jge
or
push
cmp
imul
mov
retf
push
iret
pop
push
jecxz
ss
cdq
add
and
jnp
mov
cmp
cld
inc
inc
stc
sub
mov
sub
inc
add
test
inc
int
push
jae
jb
push
loop
fiadd
push
jmp
cld
(bad)
mov
shr
(bad)
outs
(bad)
cwde
mov
ins
xor
push
imul
mov
ds
mov
test
sub
mov
lods
pop
pop
mov
cdq
loopne
scas
pop
sar
mov
mov
and
enter
clc
fcomp
and
inc
cmc
mov
jb
add
sbb
enter
xlat
xor
out
adc
sub
fnclex
xlat
repz
inc
mov
xor
fdivr
sbb
sti
inc
fld
lahf
mov
icebp
(bad)
gs
daa
pop
fiadd
into
in
xor
cmp
add
xchg
and
jae
and
inc
out
sub
cmp
das
inc
sub
add
push
mov
sti
push
lock
jmp
or
push
and
in
mov
(bad)
out
inc
xchg
scas
pop
dec
push
ins
sbb
clc
lea
sbb
jno
retf
jecxz
xchg
cmp
jge
out
mov
pop
mov
jo
test
ficom
jae
aad
ja
add
push
dec
mov
cwde
inc
dec
inc
add
and
dec
mov
pop
and
into
jge
push
dec
pop
cmp
jmp
and
and
add
imul
outs
add
jnp
mov
aaa
hlt
and
inc
jle
into
mov
jae
ror
and
scas
(bad)
pop
sub
mov
add
movs
xchg
dec
leave
mov
mov
pop
movs
or
ss
and
add
cmp
addr16
dec
adc
and
jo
outs
dec
cmp
dec
jge
push
imul
fiadd
xchg
or
es
pop
stc
mov
ins
ins
xlat
pop
ficomp
loop
movs
mov
(bad)
adc
sub
std
ficomp
daa
lods
ret
push
jmp
shr
add
inc
popf
and
xchg
jle
fbld
es
ins
pusha
ins
inc
iret
ins
jl
neg
inc
fcomp
jbe
repz
jns
cmps
sbb
cmc
mov
add
dec
addr16
sub
mov
push
ss
aaa
dec
push
cmps
cmc
je
jl
lods
stc
sub
fnstenv
jbe
pop
mov
or
test
(bad)
add
mov
cld
and
xor
icebp
push
cmc
scas
fisub
push
cmp
and
std
mov
dec
fcomp
add
lock
pop
mov
rol
fwait
cmp
inc
stos
adc
ret
inc
out
jp
inc
mov
fstp
cli
inc
xor
xor
ja
ret
aam
cmp
jbe
xchg
lahf
or
cld
jge
(bad)
lahf
or
jmp
mov
push
nop
lock
xchg
vandnps
mov
mov
push
lea
loopne
retf
imul
mov
jb
pop
ins
repnz
and
xor
xchg
in
cmp
outs
movs
es
and
(bad)
jno
pop
xchg
or
int3
sbb
inc
pop
dec
or
cmp
in
fbld
sbb
es
mov
fisubr
cmps
je
repz
sbb
push
lock
rcl
xor
lods
inc
icebp
pop
sub
push
jl
cld
xchg
cvttps2pi
in
adc
inc
dec
rcr
cmp
mov
ins
enter
popf
je
cmp
popa
sub
leave
bound
push
(bad)
and
out
cmp
je
or
mov
clc
and
push
mov
in
ret
push
iret
jmp
sbb
cmp
adc
out
or
cmps
pop
sahf
out
or
mov
rcl
push
jbe
(bad)
jmp
push
xchg
fst
pop
sub
adc
es
dec
or
jl
leave
aaa
test
dec
jp
stos
(bad)
es
in
lods
or
dec
ja
and
push
xchg
sub
add
pop
mov
shl
or
test
aaa
cld
and
cmp
out
cs
xchg
(bad)
in
xor
add
push
or
xchg
dec
pop
dec
in
dec
mov
or
(bad)
xor
fsubr
and
shr
icebp
lods
mov
aam
jne
mov
push
daa
mov
xor
out
cld
lea
shr
sub
into
mov
or
and
and
cli
(bad)
jl
out
dec
jge
(bad)
push
mov
cs
(bad)
es
ss
daa
test
adc
arpl
popa
mov
pop
jmp
retf
adc
out
push
sub
bound
popf
test
clc
jmp
xchg
pop
add
jnp
shl
fst
jle
push
and
lods
sbb
in
enter
pop
add
xor
xchg
movs
ss
xor
(bad)
pop
in
and
mov
push
fld
das
pop
xchg
lds
mov
mov
les
ret
cmp
add
xor
sbb
mov
sub
mov
mov
call
adc
sub
cli
mov
in
sub
xor
xchg
jg
inc
sub
cmp
fs
xchg
int3
jmp
out
shl
pop
and
lods
imul
mov
inc
rcl
je
sti
sub
mov
lods
push
sub
pop
aaa
jmp
mov
cwde
adc
sbb
jmp
clc
stos
into
inc
(bad)
icebp
dec
fnstcw
or
mov
imul
add
sub
mul
adc
pop
mov
js
scas
retf
loope
mov
mov
inc
jns
nop
add
jae
cmp
call
xor
test
test
cmp
mov
cmp
push
sub
call
je
mov
ret
jmp
push
or
fbld
sub
mov
mov
push
pop
shl
ds
mov
out
cli
cmp
jno
xor
sar
outs
push
pop
fist
mov
adc
push
mov
mov
les
sahf
or
and
(bad)
mov
mov
ss
cwde
cmc
xchg
add
gs
jg
clc
ins
(bad)
cmps
cmp
xchg
ret
mov
lods
sti
xor
mov
mov
out
(bad)
retf
cmp
jecxz
mov
(bad)
ja
mov
xchg
repz
sbb
adc
adc
fsubr
jle
jg
aas
mov
lea
repnz
and
sub
sub
outs
mov
(bad)
and
xchg
xchg
sti
std
outs
(bad)
sahf
imul
add
fwait
dec
out
sbb
gs
xor
cs
inc
lahf
imul
stc
ds
dec
dec
push
addr16
fiadd
push
fcomp
dec
(bad)
adc
in
mov
dec
fild
adc
add
push
fsub
inc
out
xchg
lea
xchg
inc
stc
inc
test
push
mov
les
(bad)
cmp
cwde
ja
imul
add
xchg
es
mov
add
mov
jecxz
fst
inc
push
adc
and
mov
loop
data16
rcr
rcl
adc
jmp
(bad)
push
and
retf
outs
mov
pop
push
pop
or
pushf
and
mov
push
stos
pop
add
and
push
imul
push
loopne
mov
xor
or
mov
repnz
ret
ds
into
loope
or
mov
pop
outs
push
enter
dec
icebp
test
jge
mov
push
inc
repz
xor
jbe
cmp
call
and
dec
inc
xor
inc
mov
xchg
or
stc
pusha
leave
sbb
pop
(bad)
fld
xchg
and
mov
xchg
stos
xchg
xor
dec
push
cld
inc
pop
cs
xor
push
outs
lock
mov
lock
mov
push
xchg
ror
mov
ret
xor
inc
in
mov
imul
sbb
sbb
shl
aad
push
sub
lods
sub
test
imul
pop
pop
and
sar
or
ss
fld
sbb
stos
out
mov
loop
and
stc
cmc
loopne
call
pop
out
out
mov
pop
mov
or
push
(bad)
pop
dec
in
adc
pop
pop
xor
push
pop
shl
loopne
out
stos
inc
mov
(bad)
mov
xchg
(bad)
adc
(bad)
push
push
loop
rcl
adc
stos
pusha
stc
sbb
adc
cmp
call
dec
gs
sbb
xor
add
adc
sbb
mov
sbb
xchg
inc
or
mov
in
or
retf
jbe
sub
inc
sbb
test
(bad)
dec
retf
adc
arpl
mov
push
movs
clc
or
sub
xor
push
dec
out
out
jge
add
mov
in
add
mov
cmps
(bad)
daa
addr16
stos
into
xchg
in
ss
js
and
mov
or
inc
xor
repz
retf
iret
stos
jg
or
fistp
into
test
mov
imul
sub
adc
xchg
dec
jae
jns
addr16
pop
mov
in
mov
pop
pop
sub
cmp
out
inc
mov
outs
jecxz
jne
sub
jg
mov
ror
popa
lock
sahf
mov
aaa
add
mov
xor
inc
aas
mov
(bad)
jmp
shl
cmp
and
cmc
lahf
fmul
pop
or
sbb
inc
and
pop
lahf
(bad)
das
lock
add
push
adc
out
xlat
jmp
xor
inc
mov
(bad)
out
int
clc
into
push
fcmovu
xlat
push
enter
xchg
imul
push
mov
pop
das
call
shl
mov
pop
out
jno
dec
mov
xor
push
push
retf
xchg
or
(bad)
pop
jp
pop
lods
rol
adc
dec
ss
push
mov
shl
dec
xchg
aas
mov
fbld
call
clc
sub
lock
and
shl
mov
mov
ins
(bad)
ds
mov
pop
adc
push
mov
dec
cmp
mov
mov
imul
mov
movs
add
sbb
pop
sar
call
adc
cmp
sbb
test
ret
lds
hlt
mov
sub
adc
inc
lods
sub
inc
popf
(bad)
int
push
adc
repnz
jge
mov
into
xchg
xor
sub
jns
popa
and
add
dec
push
mov
stos
mov
gs
adc
adc
outs
fsub
test
xchg
(bad)
cmp
cmp
pop
sub
mov
fstp
cdq
fcom
fwait
mov
idiv
fnstcw
mov
pop
push
mov
shl
mov
dec
push
outs
(bad)
push
in
jbe
fs
adc
aas
dec
ss
ret
in
xlat
mov
or
cmp
and
pop
cdq
cmc
adc
adc
mov
test
mov
xchg
daa
add
xor
lods
cs
clc
cmp
clc
mov
retf
cwde
movs
into
xchg
xor
pushf
shl
xchg
push
ficomp
cmps
jo
popf
dec
inc
imul
lahf
arpl
pop
or
adc
(bad)
div
imul
fidiv
imul
sub
mov
adc
scas
mov
clc
push
in
and
add
mov
pushf
jbe
xchg
test
mov
test
sbb
mov
adc
push
dec
push
sub
dec
mov
jbe
in
movs
xchg
mov
std
pop
sbb
adc
xlat
stos
jne
xor
cmps
inc
or
out
inc
shl
sti
jge
pop
adc
dec
iret
mov
jno
in
add
fbstp
aam
or
dec
cmp
stos
(bad)
call
fcomp
jmp
sub
imul
sub
scas
pop
push
sub
mov
sub
jns
inc
stos
jmp
adc
xlat
or
cmp
or
xchg
add
inc
jnp
pop
imul
push
jns
add
mov
std
xor
sbb
mov
adc
fst
mov
fisubr
xlat
xor
ret
arpl
cmp
add
out
mov
fwait
adc
sub
cmp
test
aas
cmp
pop
imul
mov
dec
cmps
pop
add
cmp
inc
icebp
int
loope
pop
jmp
leave
call
jmp
mov
repz
ret
shl
adc
jp
pop
push
pop
push
sub
push
cmp
sub
ds
adc
cmp
jg
out
mov
sahf
dec
push
loopne
inc
pop
jne
test
shl
or
xchg
cli
xchg
dec
lds
call
inc
or
iret
push
jne
pop
mov
bound
or
rcr
dec
inc
or
pop
cli
fnstcw
popa
cmp
or
fdivr
ss
call
dec
push
mov
xchg
imul
inc
or
nop
inc
pop
ins
movs
and
pop
mov
test
jg
imul
jle
fwait
test
push
aad
arpl
int3
inc
jmp
cli
movs
jg
adc
pop
mov
stos
mov
inc
push
dec
jge
xchg
repnz
push
rcl
jle
pop
and
mov
lahf
or
pop
mov
cmp
xor
jg
rcr
push
and
inc
rcl
out
jle
cwde
cmc
idiv
mov
rol
(bad)
(bad)
in
push
inc
ror
and
ss
(bad)
shr
or
aad
data16
js
sbb
xor
mov
add
push
ins
retf
out
mov
xor
and
inc
pop
fs
jmp
cdq
sub
scas
hlt
leave
(bad)
xor
jo
push
cmp
pop
outs
lahf
adc
or
xor
xchg
jne
sub
add
out
sahf
retf
or
adc
icebp
in
data16
jg
push
jne
in
int
in
jo
jl
sbb
jge
adc
ds
ret
mov
mov
jo
or
enter
mov
mov
cvtdq2ps
dec
data16
es
pshufw
sbb
jbe
fstp
clc
ret
mov
pop
int
call
out
adc
(bad)
push
jmp
and
scas
ret
leave
je
sti
out
retf
cli
pop
xor
cwde
pop
ss
icebp
test
(bad)
mov
add
inc
(bad)
test
call
test
mov
lods
out
ja
mov
push
imul
mov
push
or
push
xchg
jno
fneni(8087
(bad)
rep
fidiv
dec
sub
adc
fidiv
popa
cs
js
test
push
mov
mov
pop
mov
jge
rcr
fucom
fwait
or
jne
xchg
or
pop
popa
pop
mov
xor
in
out
cs
jne
pop
fst
jno
daa
pusha
rol
aas
rol
inc
repz
movs
adc
mov
xchg
pop
add
mov
inc
xchg
xor
(bad)
and
sar
mov
pop
sub
mov
dec
ret
loope
mov
clc
and
mov
out
cli
mov
ret
fistp
mov
outs
pop
mov
or
mov
inc
and
sti
inc
inc
iret
pop
pop
mov
out
jno
inc
jb
adc
dec
pop
and
sbb
aad
popf
(bad)
rcl
popa
add
mov
pop
addr16
add
stos
push
shr
fs
xchg
xor
shr
and
pushf
shr
cmp
push
int3
(bad)
jl
pop
fwait
or
jecxz
out
fisttp
imul
sub
retf
pop
icebp
mov
cmovle
mov
rcl
and
cwde
paddq
fdiv
xor
repz
daa
ror
call
sub
pop
(bad)
fs
mov
pushf
fisubr
or
into
push
and
lahf
retf
jge
ins
pop
add
scas
jle
cmp
cld
jmp
adc
fldcw
or
push
mov
dec
ja
cmp
xor
cwde
pop
cli
or
push
and
inc
pop
aaa
dec
mov
xchg
jne
call
and
xchg
call
mov
in
outs
or
in
into
adc
popa
mov
loopne
xchg
in
jno
test
push
pop
xchg
push
xchg
aas
mov
ja
pusha
and
nop
sbb
push
inc
jb
mov
aas
xchg
or
or
mov
push
push
xor
sahf
mov
aad
sub
ds
push
mov
(bad)
inc
(bad)
sbb
sbb
loopne
daa
adc
and
es
inc
xchg
push
jno
jecxz
inc
mov
ins
mov
retf
push
int
sbb
das
fimul
sub
xor
pop
daa
mov
lock
(bad)
cmp
xor
ja
sbb
inc
mov
ret
or
push
(bad)
jns
cwde
push
xor
jnp
dec
mov
cmp
lea
xor
cmp
sub
jl
iret
jmp
loopne
add
scas
shl
xor
cli
call
mov
lock
push
in
iret
mov
mov
xchg
dec
pop
cwde
mov
mov
mov
pushf
cmp
dec
ret
xchg
js
idiv
push
pushf
and
mov
dec
sbb
aam
add
stc
dec
(bad)
dec
mov
push
loope
stos
popf
jmp
sub
fninit
loopne
popf
test
mov
aaa
mov
push
jnp
lods
xchg
mov
jo
pop
enter
xchg
xor
pushf
rcr
xchg
jnp
repnz
aaa
inc
jbe
(bad)
outs
popa
enter
ror
aam
add
imul
adc
cmp
jl
inc
ja
mov
xor
es
mov
or
lods
rcl
fwait
in
fistp
out
(bad)
aaa
enter
(bad)
hlt
fs
add
push
cwde
cmp
xchg
in
stc
iret
sbb
xchg
pop
lods
retf
int3
mov
out
mov
mov
adc
mov
lock
imul
mov
pop
xor
stos
js
aam
ss
loope
outs
cmps
es
mov
and
ins
popa
inc
dec
add
mov
out
into
xchg
cld
clc
out
mov
fist
pop
adc
out
xor
shl
pop
push
int3
sbb
retf
jp
js
cdq
mov
js
es
push
mov
jmp
push
mov
aas
adc
mov
ins
jl
test
hlt
and
mov
fmul
jge
icebp
outs
mov
lahf
push
dec
pop
push
or
shl
adc
out
js
and
js
shl
push
iret
sbb
mov
mov
shl
or
mov
mov
call
adc
cmp
adc
jnp
sub
bound
push
dec
mov
call
or
cmp
outs
mov
clc
stos
mov
aam
adc
cwde
jno
ds
inc
int3
sbb
cli
push
(bad)
push
cmp
xor
and
xchg
movs
jmp
cmp
jno
push
movs
cmp
cmp
inc
rol
ds
mov
mov
repz
(bad)
inc
outs
push
and
test
or
lods
sub
jns
and
mov
rcr
imul
add
add
aaa
fdivr
and
mov
dec
loope
test
adc
rcl
stos
xor
addr16
mov
mov
dec
stc
and
push
mov
inc
push
aas
popf
inc
cdq
sti
inc
lock
sar
mov
jb
jle
shl
vmaxss
jno
and
loopne
or
mov
sar
ficomp
shl
scas
retf
shl
add
shl
into
movs
stos
sub
or
cmp
adc
ret
and
loope
jnp
xchg
push
data16
fcmovnu
lea
cmps
(bad)
push
inc
rcl
sbb
mov
aam
fist
and
push
mov
mov
push
aaa
push
imul
lea
mov
ja
add
stc
in
xchg
(bad)
mov
and
das
test
mov
ficomp
mov
mov
push
mov
(bad)
sahf
or
pop
sbb
lods
aas
in
xchg
call
fmul
out
mov
lds
aad
ja
aam
shr
(bad)
sti
adc
push
shl
(bad)
push
test
cmp
add
es
inc
popf
mov
add
cmp
leave
xor
sbb
outs
mov
data16
cmp
std
and
test
stc
xchg
nop
inc
loope
imul
jl
(bad)
adc
(bad)
sub
retf
(bad)
shr
sbb
adc
pop
pop
add
pop
xchg
jne
xchg
(bad)
cmp
sbb
mov
xchg
xchg
pop
push
mov
push
mov
mov
sbb
fisttp
fiadd
popf
stos
shr
jo
jmp
lds
pop
dec
add
and
je
rcr
adc
add
dec
push
dec
test
hlt
xchg
or
add
stc
jb
leave
js
fisubr
push
stos
cmp
div
adc
push
sbb
sub
fiadd
dec
lahf
arpl
xor
aas
test
sbb
push
call
dec
dec
adc
enter
sub
popf
dec
call
ror
xor
fidivr
cmps
and
push
jo
xor
sub
lea
hlt
and
test
adc
pop
in
mov
out
inc
popa
xor
cdq
push
(bad)
jae
add
push
pop
lds
xor
popa
jle
repnz
in
dec
js
sbb
imul
aaa
inc
das
imul
dec
pop
cdq
ss
sub
add
fwait
lods
mov
jbe
(bad)
addr16
loop
or
loope
out
scas
mov
sub
fwait
sbb
inc
and
add
sti
loopne
or
adc
pop
cmp
fs
popa
pop
cmp
mov
add
pop
mov
inc
add
aas
aas
cmc
xor
xchg
xchg
push
call
in
frstor
outs
(bad)
repz
dec
loopne
(bad)
mov
mov
outs
inc
adc
mov
jbe
leave
add
sbb
mov
or
mov
xor
(bad)
sti
xor
rcl
jge
jnp
ins
(bad)
shl
adc
push
out
sahf
aam
test
jae
inc
ja
push
ins
inc
xor
lods
cwde
rcl
jb
movs
les
movs
or
cmp
movs
mul
shr
xor
xchg
test
mov
xor
and
sub
(bad)
cmp
out
mov
fisttp
lea
mov
push
aaa
cmp
pop
sti
ret
mov
sbb
jns
enter
mov
leave
mov
aam
aam
xor
add
sub
lds
xor
shl
rcr
mov
push
inc
mov
imul
and
pop
fnstsw
cmp
fisub
aas
fdivr
sar
pop
or
or
loopne
daa
or
add
fstp
and
xchg
add
and
ins
jmp
inc
fld
popf
cmp
lds
xchg
mov
and
pop
inc
lods
add
jno
outs
pop
cli
pop
adc
dec
fsub
or
jnp
mov
sub
inc
jnp
ss
jge
sbb
cdq
sub
xor
push
stc
es
test
fdivr
cmp
xor
mov
mov
mov
add
inc
loopne
clc
or
scas
push
hlt
jp
sbb
sahf
mov
movs
cdq
cmp
ins
and
jns
sub
jne
jp
push
jg
fnsave
cld
movs
mov
leave
adc
(bad)
imul
in
jl
jbe
pushf
movs
imul
inc
loopne
cmp
mov
stc
ins
mov
jmp
adc
push
jmp
lock
push
fstp
push
jne
sbb
push
xor
sahf
xlat
dec
jl
scas
dec
sbb
adc
sar
jb
xor
jl
dec
ror
clc
xor
pusha
sub
inc
or
sub
call
loop
and
dec
pop
ins
call
scas
fcom
(bad)
xchg
neg
jo
fsub
sub
dec
loop
fdiv
daa
int
mov
sar
and
and
cmps
scas
idiv
mov
into
mov
clc
xchg
mov
dec
pop
or
mov
mov
sti
fimul
dec
retf
cmp
inc
and
pop
sub
pop
popa
movs
cld
not
jo
shr
inc
jecxz
adc
aam
pusha
dec
ins
lds
retf
in
inc
enter
in
sar
dec
cmps
les
lock
cmps
mov
fadd
dec
cmp
out
int
cld
xor
xchg
inc
push
mov
(bad)
push
pushf
inc
sbb
jl
xor
out
movs
xlat
fsubr
adc
xlat
into
mov
push
scas
pop
adc
std
adc
ins
sub
in
cmc
fimul
fcmovnb
ins
mov
adc
xchg
jg
movs
mov
dec
mov
fsubr
inc
shl
clc
in
xor
xor
jno
enter
mov
out
das
mov
ins
mov
ret
and
rcr
sub
adc
loope
push
sub
push
mov
and
add
rol
(bad)
or
fidiv
lock
enter
sub
or
icebp
add
out
push
inc
neg
sub
push
push
enter
cs
pop
pop
cmps
sub
jle
ret
popa
mov
cdq
out
aaa
mov
call
adc
or
rcl
fisttp
fs
xor
cmp
push
push
cwde
mov
xchg
add
fidivr
fist
mov
pop
in
cld
cld
xchg
fst
mov
pop
pop
imul
fcomp
mov
jle
xor
jg
inc
xlat
mov
ins
and
pop
cwde
ja
loopne
pop
xchg
ins
es
xor
add
xor
cmp
mov
sub
mov
xchg
add
mov
push
imul
test
das
cli
xlat
daa
in
xor
fld
jp
jo
repnz
xchg
shl
add
inc
jnp
sbb
xchg
stc
lods
leave
ret
inc
add
push
xor
cli
mov
sub
xchg
jp
jno
jl
out
jg
sbb
dec
fstp
fnstenv
dec
dec
xchg
test
sahf
retf
lahf
mov
mov
loop
add
scas
mov
jns
mov
lods
push
cli
test
sbb
inc
ins
cmps
inc
je
inc
loope
push
jbe
push
outs
push
cmp
(bad)
frstor
push
adc
and
pop
cmp
jmp
pop
xor
loope
pop
or
loope
xchg
push
call
mov
or
mov
and
cld
lds
loopne
loop
pop
out
aam
lock
mov
inc
and
push
leave
jbe
jo
mov
rcr
pop
aaa
lds
das
sub
jmp
jecxz
fst
fs
loopne
adc
ficom
in
bnd
mov
inc
in
mov
mov
test
mov
dec
mov
mov
pop
inc
push
repnz
xchg
mov
push
dec
(bad)
sbb
dec
pop
out
dec
xor
bound
mov
je
dec
sbb
jl
das
push
pop
pop
fild
sahf
daa
pop
dec
mov
leave
add
in
dec
cmp
das
xchg
xchg
bt
mov
cwde
out
in
sbb
xor
(bad)
outs
jg
xor
dec
int
ret
ja
ss
or
push
sub
(bad)
mov
rcl
jb
adc
mov
xchg
lea
mov
cdq
mov
int3
or
fwait
test
retf
cmps
sub
mov
das
add
fdivp
mov
mov
es
les
retf
out
iret
stos
fwait
enter
jg
xchg
pop
push
push
xchg
mov
mov
sub
inc
add
mov
bound
dec
inc
or
jmp
add
mov
popf
(bad)
push
mov
gs
in
mov
and
sub
lods
xlat
jecxz
cmp
xchg
jg
or
ret
aam
popa
xor
les
jge
lahf
in
inc
cmp
mov
xor
push
push
test
cmp
lds
jb
fnstenv
mov
jne
dec
xor
push
mov
pop
lods
mov
mov
sbb
mov
mov
mov
fxrstor
cmp
sbb
mov
jo
sbb
jl
mov
dec
mov
mov
fidiv
mov
pop
out
pop
mov
inc
cmp
stos
fprem1
mov
lods
cmp
aam
mov
add
dec
mov
cmps
xor
loope
adc
inc
sbb
pop
jle
out
mov
jmp
imul
retf
xor
in
pop
jno
setnp
fwait
out
mov
bound
repnz
into
push
sub
movs
int
js
mov
jge
sbb
mov
mov
pop
push
and
mov
retf
rol
das
or
pslld
jp
push
sahf
mov
cmp
xchg
outs
xor
push
jmp
int
jne
jecxz
pop
out
data16
ret
loope
into
or
pop
jg
dec
fcmovbe
and
retf
iret
push
sub
xchg
adc
call
rol
and
add
pop
push
lea
cli
sub
cmp
neg
sbb
aam
dec
xchg
cmc
jne
das
sub
bound
cmps
lock
ins
mov
cmp
or
mov
mov
pushf
repnz
fist
pop
sbb
loopne
lea
(bad)
mov
or
lea
jmp
adc
ds
mov
mov
rcl
jno
and
iret
and
les
sub
or
or
dec
cmps
not
mov
cli
cmp
mov
or
sub
arpl
(bad)
out
fdiv
fist
xchg
adc
fistp
aaa
mov
mov
push
cli
jmp
ret
mov
sar
jge
dec
jle
inc
jge
push
arpl
daa
push
lods
sbb
lock
sar
inc
shl
iret
adc
pop
xor
inc
aas
and
ja
adc
jne
fmulp
out
add
xor
ret
mov
jg
imul
add
adc
ins
dec
or
and
in
and
push
repz
loop
jle
sbb
aad
sub
mov
or
test
xchg
lea
adc
or
xchg
mov
lods
(bad)
fstp
(bad)
and
call
sbb
ds
lods
sub
or
adc
push
pop
outs
imul
scas
mov
pop
dec
std
cmps
leave
movs
jg
mov
dec
dec
push
cs
sbb
xchg
dec
sbb
das
pop
and
out
aas
daa
test
and
xor
cmp
xor
in
int3
jb
cmps
in
in
push
ja
pop
mov
mov
and
sub
fsub
cmp
cmp
xor
fnstsw
mov
arpl
add
aam
or
sti
rcr
cli
inc
shl
pusha
add
inc
jecxz
les
nop
std
fcomip
add
popa
das
pop
gs
mul
and
sub
jmp
inc
push
sbb
jl
pop
mov
test
inc
mov
sti
popa
mov
and
fcom
jmp
ins
mov
push
je
mov
mov
lock
jl
ds
push
adc
cmp
xor
xor
(bad)
dec
jmp
(bad)
mov
cmp
int
push
mov
test
shl
and
pop
test
inc
push
add
jge
dec
cmps
pop
std
jecxz
sub
inc
popf
pop
ins
shl
pusha
outs
fst
aaa
add
xchg
sbb
mov
adc
(bad)
aas
test
pop
outs
mov
shl
(bad)
mov
sub
or
mov
jne
(bad)
les
inc
cmp
ins
pusha
loope
cmc
mov
aas
sub
jnp
popa
and
cmp
inc
push
or
cmp
out
pushf
iret
cmps
pop
inc
xor
les
das
and
sub
push
adc
mov
dec
add
adc
call
cmp
gs
cmps
mov
popa
xor
pop
xor
mov
and
sub
mov
dec
xchg
je
out
inc
rol
push
sbb
mov
imul
outs
jge
retf
jl
mov
xchg
scas
imul
pop
les
cmp
dec
sub
push
and
jns
and
xchg
in
ins
inc
push
aam
stc
(bad)
gs
popf
cmc
out
sti
loope
dec
iret
mov
jmp
lahf
test
(bad)
loop
lds
dec
sti
sub
fcomp
pop
cld
pop
jb
inc
jg
inc
ins
and
addr16
push
xlat
or
pusha
popf
pop
jle
and
add
iret
sbb
mov
mov
inc
sub
addr16
scas
loope
add
aas
cmp
dec
fisub
stos
push
out
cmps
imul
or
in
ret
cld
xor
scas
cmp
push
in
cmc
xor
xor
stos
in
arpl
add
adc
pop
cwde
sbb
je
push
fstp
test
jmp
dec
sub
cmp
adc
adc
lods
adc
(bad)
and
or
mov
xor
out
push
inc
aas
out
in
loopne
call
nop
addr16
mov
out
leave
inc
mov
sub
daa
std
in
adc
sbb
sbb
fcmovnb
push
xchg
outs
dec
cmc
popf
lods
imul
pop
or
mov
dec
bnd
(bad)
cmp
sbb
retf
adc
stc
push
imul
loopne
push
adc
xlat
lahf
mov
ins
cld
cmovle
es
xor
retf
(bad)
cmp
imul
addr16
loop
retf
sbb
lahf
lods
xor
mov
sbb
sti
xchg
or
mov
les
stc
lds
or
mov
or
cmp
xchg
je
push
sub
ja
fnstsw
inc
dec
retf
adc
jle
scas
jne
sbb
add
out
rcl
push
xor
loop
xchg
xchg
xchg
jno
scas
mov
rcl
xchg
cmp
lods
call
mov
in
lahf
xor
or
mov
sbb
jb
add
loop
or
cmps
leave
sbb
jo
cmp
mov
inc
rcr
and
mov
jmp
pop
jns
fwait
pop
es
mov
mov
mov
outs
retf
adc
bound
pusha
call
into
jb
jne
icebp
loope
(bad)
mov
shl
iret
std
xchg
push
div
enter
mov
in
dec
push
jnp
rol
pop
sbb
jbe
fild
loopne
mov
mov
jno
loop
cmp
int
jmp
cld
movs
or
arpl
jmp
add
mov
jg
xchg
mov
jns
inc
aas
movs
adc
(bad)
shr
mov
pop
je
fwait
(bad)
push
(bad)
mov
cmp
in
sbb
and
out
add
in
cmc
jl
cmp
pop
adc
int
pushf
pop
cld
add
cmp
and
cmps
xchg
(bad)
xor
or
daa
adc
jge
out
jns
adc
ret
stc
sbb
popf
mov
inc
mov
in
call
push
in
popf
inc
es
enter
xchg
sti
mov
fcmovb
dec
(bad)
cmp
dec
outs
or
cmps
push
sub
and
sub
sbb
xchg
fs
pop
(bad)
pop
test
jbe
mov
jb
cmps
jno
jnp
sbb
jg
ret
(bad)
hlt
push
(bad)
sbb
mov
jp
xchg
inc
mov
pusha
rcl
leave
ficom
jb
and
data16
popa
mov
(bad)
fdivr
inc
arpl
mov
shl
push
lahf
xchg
xor
mov
push
mov
add
or
mov
cld
pop
xor
shl
add
xchg
mov
(bad)
jbe
mov
add
call
mov
into
sub
mov
rcl
call
jmp
hlt
movs
sub
xor
cmps
in
js
enter
adc
dec
xchg
cmp
paddusb
mov
ds
inc
xchg
(bad)
loope
push
jno
test
test
(bad)
cld
loope
cmp
lea
pop
sub
jnp
xor
leave
clc
test
mov
adc
pop
and
int3
inc
mov
push
data16
jb
(bad)
fimul
jmp
aas
repz
mov
lods
lea
adc
push
add
wbinvd
jp
scas
and
dec
inc
lea
jo
test
add
or
add
add
jp
lock
jge
ja
loope
jnp
data16
mov
xchg
pop
jmp
popa
jnp
clc
xchg
lods
aam
push
sub
dec
daa
sti
cli
xlat
outs
xchg
or
dec
sbb
dec
into
sub
inc
or
or
sub
and
push
add
add
mov
pop
mov
ins
fs
pop
add
xchg
icebp
add
fist
std
mov
or
xor
inc
dec
mov
cmp
ds
push
and
lahf
and
jb
and
les
(bad)
aad
mov
mov
mov
(bad)
adc
mov
ja
out
cmp
jp
ror
cmp
jg
pushf
push
test
push
jl
pop
xor
mov
(bad)
adc
in
mov
xor
cmp
pop
rcl
adc
adc
sub
scas
popa
clc
cmp
mov
mov
es
fidivr
data16
fisub
push
fwait
jns
xchg
adc
(bad)
ret
cmps
sub
scas
push
sub
jl
xchg
ret
push
push
aad
clc
imul
shr
dec
dec
jl
adc
ins
fbstp
lock
scas
mov
inc
retf
pop
and
aad
dec
ss
or
stos
mov
in
test
fnstcw
cmp
push
cli
sbb
sbb
xchg
xor
sbb
jg
or
push
mov
push
cmp
fsubp
sbb
out
or
xchg
xchg
icebp
addr16
(bad)
std
outs
ss
sbb
pand
aaa
int
xchg
sub
mov
aas
fidiv
ds
movs
aas
cmps
(bad)
fld
jo
mov
sbb
hlt
pop
xchg
cli
sub
push
pop
cmp
mov
xchg
std
dec
xor
pushf
adc
mov
cmps
fisub
jbe
or
xchg
mov
imul
mov
lods
inc
repnz
push
(bad)
pop
clc
ret
pop
adc
js
ins
jmp
out
jp
cwde
jns
dec
jns
adc
sbb
or
out
lods
sti
mov
add
or
aas
in
cmp
mov
push
fld
into
(bad)
iret
mov
sub
fcomp
jns
jbe
cmp
jbe
test
cmp
mov
jne
mov
and
cmp
int
(bad)
cld
iret
sub
add
add
pop
nop
mov
imul
mov
add
addr16
retf
push
test
pop
mov
push
pop
jecxz
cmp
ins
arpl
ins
call
ficom
mov
ins
leave
sbb
pop
lods
or
mov
mov
cld
inc
mov
inc
mov
sub
xchg
addr16
cwde
call
stc
push
test
or
fdiv
push
(bad)
xor
fidivr
and
dec
rcr
repnz
push
jmp
push
shl
ds
push
ret
cmp
lahf
inc
or
adc
jg
cmp
gs
ficomp
stc
int3
mov
and
push
aad
mov
add
scas
and
fsub
dec
xchg
lock
ja
psrad
in
dec
ss
call
inc
sbb
xchg
nop
dec
mov
(bad)
ret
stos
inc
sbb
push
outs
cmp
or
jne
in
nop
dec
(bad)
jbe
or
pop
into
sbb
sti
sub
(bad)
in
sub
xchg
and
rol
xchg
cwde
daa
xor
xchg
push
inc
or
jg
xchg
xchg
sbb
cwde
push
(bad)
push
mov
(bad)
movs
loope
sti
lds
test
rep
dec
mov
cwde
push
daa
in
cmc
mov
fimul
(bad)
out
gs
int3
inc
push
popf
mov
daa
mov
push
sbb
pushf
lods
fcmove
and
jo
fwait
dec
sub
idiv
scas
out
jb
inc
movs
in
mov
fisttp
mov
test
jg
add
lock
pop
and
lods
and
fistp
cmp
jmp
out
fcom
js
xor
pushf
mov
test
fwait
stos
jne
mov
or
ret
pop
fwait
(bad)
xlat
out
adc
or
jbe
hlt
in
movs
rcl
xor
sti
in
pushf
(bad)
add
loop
daa
icebp
xchg
sbb
sub
mov
cdq
xchg
stos
or
jae
add
ins
jle
jge
sub
mov
stc
mov
pop
inc
pop
sub
int
pop
dec
adc
adc
ja
and
jmp
into
mov
jmp
rcr
or
cmc
ss
mov
ror
aas
mov
scas
xor
fdivr
ins
push
pop
pusha
je
cmps
hlt
js
mov
or
pop
loop
sar
nop
mov
push
xor
out
pop
pop
adc
clc
xchg
xchg
xchg
pusha
mov
dec
pop
daa
or
mov
xchg
(bad)
sbb
cdq
inc
cs
ror
add
popf
mov
sahf
js
mov
fld
cs
jno
xchg
mov
push
mov
lock
xor
cli
fild
add
lds
push
fadd
pop
scas
xchg
cld
retf
int
icebp
pushf
add
neg
adc
call
or
test
cmp
sbb
outs
jle
rcr
(bad)
fld
sub
es
xchg
xor
mov
(bad)
repnz
xchg
push
xor
pop
jge
lods
repnz
loop
cdq
and
xor
int3
adc
jp
loopne
sub
lods
mov
cmps
jno
sti
mov
fisub
xchg
gs
lods
imul
pop
inc
(bad)
call
jmp
push
loope
mov
loopne
cld
pop
rcr
pop
sub
xchg
call
push
enter
mov
add
aas
mov
push
fmul
std
addr16
push
add
arpl
jbe
scas
es
xor
lds
mov
out
stos
or
movs
xor
das
fidiv
fimul
icebp
jno
cmp
mov
dec
imul
js
cwde
mov
jecxz
(bad)
add
out
nop
adc
popa
loopne
inc
adc
adc
xchg
sub
in
sbb
jno
jl
mov
in
xlat
xchg
jns
and
pop
hlt
xor
xchg
mov
jmp
add
cmp
in
add
mov
mov
jmp
push
sub
pop
mov
mov
ss
push
or
imul
hlt
and
out
into
outs
cmc
mov
out
dec
fwait
cmp
sbb
(bad)
mov
imul
(bad)
adc
and
and
bnd
mov
fnsave
and
(bad)
fistp
ret
sub
xor
xchg
fs
adc
loop
icebp
lods
jo
adc
lahf
sub
mov
les
ja
mov
out
in
inc
mov
rcr
cmps
ficomp
inc
(bad)
in
or
cmps
ds
cmp
jl
lock
movs
jmp
pusha
sbb
adc
sub
jb
sbb
(bad)
xchg
or
mov
ins
test
push
clc
nop
(bad)
cmp
je
jb
sub
rep
jmp
pusha
push
xchg
push
pop
or
jne
lods
xor
and
std
imul
shl
jno
in
dec
leave
add
jmp
lea
push
int
lods
mov
retf
dec
ins
mov
jg
dec
out
out
pop
dec
pushf
pop
or
sub
(bad)
mov
cli
jns
push
jp
sti
push
lods
jne
dec
sbb
imul
add
fwait
int
sbb
int3
xor
and
ins
mov
test
hlt
das
or
mov
pop
(bad)
or
sub
ja
shl
bound
push
pop
cmp
or
xor
push
jnp
lods
(bad)
pop
dec
lea
dec
mov
mov
lock
mov
lahf
add
pusha
adc
adc
jl
xchg
sbb
inc
arpl
mov
je
or
(bad)
add
ret
leave
mov
mov
sbb
mov
xlat
retf
fwait
or
xor
push
sub
or
(bad)
pop
bound
loope
addr16
mov
dec
addr16
xor
push
sahf
sbb
shr
(bad)
or
add
bound
mov
imul
das
rol
test
jg
sub
push
pop
mov
pop
or
pusha
xchg
cmp
adc
fnstenv
pop
cdq
add
inc
push
les
adc
out
fistp
jecxz
xchg
mov
and
dec
movs
sahf
call
pop
clc
and
mov
loope
retf
sub
pop
loope
pop
jge
push
fwait
outs
jns
mov
cmp
mov
imul
hlt
lock
out
lock
je
into
mov
inc
cdq
in
mov
sub
or
je
clc
in
sub
dec
jo
sub
retf
test
push
pop
das
push
pop
(bad)
pop
mov
dec
cmp
pop
mov
and
movlps
addr16
pusha
hlt
pop
sub
mov
imul
jnp
mov
cdq
pop
iret
(bad)
sti
js
sub
or
mov
or
(bad)
cmp
mov
jle
imul
in
in
mov
mov
jmp
push
mov
jl
std
dec
nop
push
and
push
cmp
inc
fisttp
cmp
ds
mov
push
ret
xchg
retf
into
inc
les
or
sbb
enter
pushf
int
fnstenv
call
aas
sub
retf
push
lea
push
mov
pop
mov
sub
mov
mov
push
sbb
es
mov
or
(bad)
fmul
inc
bound
and
out
xor
loop
mov
cmp
enter
cmp
xchg
mov
push
call
sbb
rcl
(bad)
sar
vmwrite
daa
cmp
sub
sub
test
popa
dec
out
jle
in
push
xchg
mov
mov
jb
dec
mov
sub
xchg
mov
sbb
fisubr
inc
xchg
pop
and
mov
jmp
lods
ds
mov
idiv
or
cmp
adc
sub
into
or
xchg
aad
add
mov
jge
pop
mov
out
dec
jno
pop
daa
aad
add
pusha
mov
(bad)
mov
inc
outs
jb
pop
pop
cmp
jle
mov
cli
dec
push
push
es
pop
sub
or
aas
adc
ret
sbb
lds
int3
jnp
stc
jno
fst
xchg
imul
out
cmp
sub
and
mov
sbb
addr16
dec
pop
mov
or
and
cmp
push
mov
(bad)
stc
sub
(bad)
sahf
jl
fdivp
int
push
std
shl
iret
rcl
xchg
mov
mov
sbb
retf
rol
bound
adc
gs
push
mov
les
lods
movs
mov
sub
in
mov
inc
jle
sahf
es
cmp
dec
(bad)
hlt
pop
stos
in
sbb
fld
xchg
fs
leave
fwait
pop
popf
pop
and
jge
or
mov
pop
icebp
pushf
(bad)
mov
xchg
inc
rcr
enter
shr
mov
cdq
xchg
rol
test
add
mov
add
minps
(bad)
ins
inc
sti
movs
sti
loopne
lds
inc
adc
pop
retf
es
cwde
mov
or
cmc
sub
xchg
mov
(bad)
lock
mov
js
fisubr
les
jl
xor
(bad)
pop
xor
psllq
cdq
jb
fist
add
rcl
adc
push
sub
dec
mov
add
stc
ins
or
sbb
push
stos
dec
push
dec
push
fmulp
repnz
fist
dec
xor
int
stos
fdivr
cs
gs
scas
pop
push
sbb
call
cmp
imul
sub
jnp
pop
pop
pop
cmp
mov
dec
adc
add
std
pop
pop
and
(bad)
and
xchg
fs
inc
cmp
and
sbb
sbb
jecxz
push
sti
mov
in
jo
rcr
aam
push
add
in
xor
adc
mov
sub
aam
sbb
call
retf
nop
ret
add
nop
in
xchg
push
aaa
test
dec
leave
loopne
rcr
pushf
pop
xchg
stos
jns
aam
sbb
pusha
add
shl
adc
push
mov
jecxz
mov
int3
fistp
xlat
push
cmps
popf
cmp
rcl
inc
fild
adc
pop
pop
addr16
lea
push
shr
lahf
sbb
mov
imul
sub
jo
pop
mov
call
xchg
jl
jg
(bad)
cmp
cmps
int3
dec
pop
adc
fwait
shr
cmps
jecxz
mov
adc
jns
imul
xor
inc
push
cmps
aas
lock
cwde
or
in
(bad)
xchg
mov
movs
movs
aam
sbb
fild
lds
xchg
inc
mov
dec
cmp
idiv
dec
test
mov
std
dec
pushf
leave
push
sub
dec
xchg
add
cdq
clc
inc
xchg
mov
inc
lock
test
data16
cmps
stos
aad
(bad)
xchg
in
sti
sahf
sub
das
add
cmps
test
out
mov
in
pop
mov
into
icebp
(bad)
pop
adc
xchg
js
mov
dec
mulps
into
(bad)
les
mov
out
mov
mov
sub
data16
sub
xchg
sub
leave
pusha
add
jle
jg
ins
fcmovnb
lock
mov
ja
pop
js
jl
or
xchg
(bad)
loopne
retf
fisub
jo
sub
fucomp
pop
out
fst
clc
inc
pop
loop
sub
adc
mov
mov
sub
aas
lahf
mov
rol
xchg
pop
iret
stos
inc
das
loope
pusha
je
imul
and
aaa
pop
mov
(bad)
out
inc
jle
inc
repnz
das
add
imul
test
fisttp
inc
pop
fisubr
sbb
mov
jp
mov
cmps
ja
xlat
and
cmps
popa
bound
sub
shl
imul
mov
push
sub
(bad)
mov
adc
and
sar
lahf
cmp
mov
(bad)
push
jl
add
cmp
sbb
gs
loopne
daa
and
xchg
mov
jae
dec
jns
sub
pop
out
push
or
xchg
aam
xor
pop
mov
push
cmp
push
mov
xchg
and
inc
cmps
aad
gs
adc
push
jae
ror
out
loop
sbb
mov
xlat
xchg
sbb
movs
repz
pusha
call
enter
sbb
fiadd
push
jmp
cli
mov
cmp
jne
fwait
xchg
(bad)
mov
sbb
dec
cld
xchg
inc
sbb
jno
cmp
inc
inc
cwde
add
sub
sub
sub
and
adc
shr
loop
add
ficomp
cmp
fstp
xchg
push
or
sub
cmp
inc
sar
stos
(bad)
dec
(bad)
pop
out
push
dec
enter
adc
add
mov
sahf
lds
sub
inc
xor
and
dec
mov
fdiv
stos
or
cmp
(bad)
scas
mov
cmp
mov
mov
and
fs
retf
mov
jb
xchg
push
aaa
and
pop
lds
bound
sub
push
iret
out
jbe
in
shl
es
jne
(bad)
scas
std
push
into
cmp
rol
xor
call
mov
xchg
pop
loopne
mov
push
inc
out
push
lods
cmp
xor
push
jbe
loopne
in
mov
(bad)
mov
ins
movs
loopne
and
fld
out
popa
jnp
hlt
or
ror
fild
and
(bad)
lock
xchg
or
inc
and
xor
data16
not
aas
fstp
dec
adc
or
jmp
or
xchg
popf
xchg
aam
xchg
mov
sub
push
and
jo
imul
jo
jne
xor
push
and
inc
pop
in
lods
push
mov
(bad)
loopne
les
shl
xchg
add
lea
or
push
pop
inc
sbb
xchg
fnstcw
push
mov
mul
mov
arpl
inc
aam
fcomp
int
(bad)
gs
mul
pop
inc
in
(bad)
jmp
sti
and
inc
mov
mov
and
in
fwait
sbb
inc
sbb
es
sbb
xchg
xchg
adc
into
or
test
and
mov
das
loope
sub
lahf
call
stos
lea
aas
push
dec
push
xchg
inc
or
sbb
cmc
mov
adc
fld
xchg
rol
sti
sub
mov
jmp
cmp
sbb
or
enter
push
call
jmp
xchg
and
push
mov
jno
push
cmp
and
xor
fsubr
mov
lods
jo
xor
xchg
aas
(bad)
push
fidiv
mov
out
into
inc
cs
out
xchg
pop
fwait
mov
pop
hlt
and
out
hlt
out
ror
xor
cmp
dec
in
cs
fistp
sub
jl
jbe
pushaw
out
or
and
enter
aad
js
into
and
jp
out
popf
shl
push
arpl
je
xchg
ins
add
fs
inc
(bad)
imul
sbb
fdiv
adc
rol
arpl
mov
push
stos
mov
lock
shl
stc
add
inc
sar
std
sahf
retf
leave
clc
in
and
stc
(bad)
and
int3
dec
iret
mov
mov
mov
stos
push
xor
rcr
or
sub
mov
sub
xor
loopne
outs
inc
test
inc
sub
shr
fidiv
(bad)
jecxz
jmp
ret
hlt
fadd
or
mov
jg
arpl
add
dec
into
xor
push
push
jmp
mov
push
push
sti
(bad)
out
sub
pop
and
(bad)
jnp
mov
and
adc
dec
xor
mov
pop
es
stos
sbb
outs
ror
xchg
lds
pop
mov
in
pop
dec
xchg
pushf
shl
mov
cmc
xor
xor
in
fcomp
pop
lahf
and
add
ror
adc
lea
pop
lock
or
sbb
push
daa
popa
xlat
add
push
mov
in
mov
aaa
leave
inc
cmp
pop
dec
sbb
inc
add
mul
xchg
js
je
xlat
jne
call
xchg
out
imul
cmps
jmp
sti
xlat
jge
stc
int3
pop
jmp
rol
repnz
mov
out
movs
dec
lds
ss
int3
arpl
pop
mov
sbb
xchg
lahf
scas
es
jp
cmp
ss
(bad)
in
add
adc
cmp
push
inc
(bad)
pushf
add
cmp
ret
push
push
mov
inc
adc
scas
es
inc
sbb
mov
mov
mov
sub
add
fdiv
dec
cmc
loopne
and
dec
cmp
(bad)
int
jo
mov
ret
aas
out
ja
mov
adc
sti
cmc
mov
shl
leave
xor
sbb
lds
setno
push
jmp
lahf
stos
jmp
pop
jmp
out
cld
out
inc
sub
in
addr16
(bad)
ret
fucom
stos
sub
pop
loope
and
or
enter
or
jl
xor
(bad)
mov
xor
aam
pop
sub
fwait
add
pusha
clc
out
or
dec
jmp
cmps
sub
lea
xchg
fcom
mov
or
dec
jmp
mov
mov
jp
(bad)
mov
xor
jmp
and
iret
pop
cdq
push
cmp
and
xor
repnz
ror
add
loop
nop
and
cmp
inc
stc
fwait
(bad)
imul
xor
(bad)
cmp
fisub
push
sbb
ror
in
dec
adc
xchg
mov
idiv
movs
adc
ret
or
(bad)
out
movs
das
sbb
shl
icebp
cmp
daa
div
cmc
inc
push
ficom
xor
xchg
sti
mov
ds
pop
mov
mov
pop
mov
cli
dec
cmp
jns
mov
retf
mov
repz
ret
xor
data16
(bad)
mov
jle
nop
add
fwait
aas
fild
and
bound
jne
mov
repz
xchg
arpl
rcl
sti
xlat
jne
les
(bad)
mov
xchg
inc
adc
cli
jle
cmp
mov
cld
cwde
aad
jle
shl
sub
lods
jno
cmp
jne
dec
lods
in
popf
pop
repz
pop
ret
fidivr
jae
xchg
cmc
stos
jbe
movs
fld
pop
add
adc
rcl
mov
sub
aam
mov
mov
push
(bad)
repnz
rcr
fild
jp
gs
leave
and
out
lods
jb
adc
stc
test
iret
jp
inc
int
jp
jb
sahf
int3
aam
stos
sti
cmc
jb
push
inc
outs
jno
push
ret
jo
shr
cmp
xchg
fist
mov
push
add
adc
pusha
push
mov
push
clc
lods
xor
aas
repz
bound
xor
outs
mov
pop
aam
or
rol
mov
repz
cmp
inc
pop
add
jbe
cmc
(bad)
push
push
in
mov
xchg
push
inc
xchg
sbb
xchg
xchg
lods
sbb
push
fdiv
sbb
ret
xor
clc
dec
mov
xchg
scas
sub
(bad)
mov
mov
jmp
adc
lods
dec
stc
outs
loop
cli
jne
push
adc
test
in
aam
mov
sub
jae
mov
aam
or
jmp
hlt
mov
mov
jg
std
pop
and
rcl
xchg
jnp
push
es
jo
sahf
push
push
mov
dec
add
dec
dec
or
cs
jns
or
pusha
loopne
push
mov
call
jmp
xor
arpl
fild
xchg
mov
movs
sub
aad
(bad)
sbb
(bad)
out
enter
and
or
cmps
stos
js
jnp
inc
xchg
add
hlt
add
enter
xor
shr
fadd
loope
scas
inc
sbb
call
adc
cmp
or
dec
fabs
mov
dec
fnsave
or
jge
mov
add
popa
mov
in
mov
add
and
call
mov
fild
icebp
mov
in
add
in
test
sub
push
sbb
cmp
push
(bad)
dec
bnd
mov
enter
test
push
xor
leave
dec
mov
sub
push
lods
add
call
test
jb
retf
cmc
push
in
add
or
push
les
mov
pop
fisttp
cmps
jge
int3
clc
into
jecxz
adc
inc
data16
ja
jne
shl
retf
rol
sub
pop
ins
sub
jle
aaa
inc
pop
lds
arpl
add
loope
pop
stos
sbb
or
push
mov
or
ja
movs
cmps
xor
icebp
int3
aas
sbb
dec
cmps
(bad)
ja
sub
pop
inc
push
popa
je
cdq
dec
sbb
test
aam
out
sti
xor
(bad)
ins
push
aas
sahf
cwde
fisubr
outs
mov
sbb
pop
iret
xor
mov
int3
stc
push
int
pop
imul
mov
sub
or
adc
fwait
retf
or
and
(bad)
dec
or
ficomp
nop
push
inc
and
dec
inc
push
sbb
pop
push
jmp
mov
outs
fcos
iret
xchg
xchg
shl
sti
pop
scas
rol
jb
repnz
adc
mov
pop
jecxz
push
cmps
or
inc
lahf
imul
sub
push
cmp
rcr
(bad)
or
adc
inc
adc
and
cmp
jo
sub
ret
adc
in
fcmovne
push
pop
std
out
fistp
or
push
cld
dec
xor
icebp
sbb
adc
cmp
pushf
adc
sub
mov
popa
sbb
jge
cmp
test
mov
inc
inc
fs
es
fisub
inc
cmps
or
add
pop
in
lods
pop
daa
and
retf
and
push
lods
shl
push
(bad)
adc
mov
lahf
cmp
loop
xchg
xor
ja
or
jnp
aaa
leave
mov
icebp
mov
(bad)
data16
or
jp
mov
xlat
and
mov
movs
stc
gs
repz
call
push
jmp
out
or
add
cwde
xor
int3
lahf
adc
ficomp
shr
(bad)
mov
movs
scas
cmp
mov
mov
xchg
adc
mov
aad
mov
cwde
xor
inc
ror
jmp
sub
movs
pop
xchg
pushf
test
mov
xor
sar
outs
jmp
inc
neg
sar
add
jmp
cli
mov
rcr
dec
jo
sub
(bad)
rcl
test
cmp
xchg
dec
mov
mov
(bad)
(bad)
inc
cmp
cmp
sub
loopne
out
in
out
adc
sbb
icebp
dec
sbb
mov
add
or
xor
mov
aad
je
sbb
push
sbb
jl
stos
jns
mov
push
cmp
adc
pushf
xor
xchg
push
ret
retf
jg
cmp
jp
scas
adc
push
push
mov
out
sar
add
add
sbb
shl
in
xchg
(bad)
in
jne
or
add
in
mov
adc
ins
js
xchg
cmp
inc
xchg
retf
mov
in
mov
and
lea
xor
inc
xchg
push
adc
jnp
gs
call
fcom
push
repnz
fild
dec
out
movs
int
mov
adc
push
jo
inc
mov
xchg
cli
out
js
or
fs
popa
mov
loopne
mov
mov
stos
aaa
xor
setge
add
fstp
pop
pop
lea
jne
pop
aad
dec
pop
in
sub
fisub
fnstcw
sub
mov
cmp
push
fisubr
leave
inc
stos
jg
mov
pop
es
and
fdivr
sub
mov
xchg
jns
repnz
shl
inc
ficom
dec
sub
inc
lods
ror
jne
imul
pop
aad
loope
fstp
and
jge
sub
retf
inc
call
movs
addr16
mov
mov
jbe
sub
and
pushf
mov
out
(bad)
pop
fdivr
loope
repz
sub
cs
ja
rcr
push
mov
stos
jno
aas
aaa
and
ja
(bad)
mov
inc
mov
or
(bad)
out
sub
callw
lock
rcl
(bad)
push
push
in
xchg
bound
scas
lds
enter
dec
mov
dec
jns
cmp
add
cmp
repz
sbb
fld
jl
or
xchg
mov
jl
dec
xchg
push
xor
add
je
sub
arpl
nop
inc
bound
outs
add
ror
or
xor
sub
inc
xchg
mov
inc
xchg
mov
xchg
pop
jns
pop
jbe
mov
inc
rcr
jle
sti
lea
adc
das
mov
or
inc
jecxz
dec
jne
jae
add
cmp
add
mov
mov
xor
jbe
xlat
nop
ret
add
and
(bad)
mov
rcr
in
cmps
adc
arpl
and
cmp
ret
ds
out
adc
mov
test
xchg
jne
jmp
add
push
das
fiadd
cwde
inc
and
add
stos
mov
inc
mov
addr16
cmp
push
les
or
inc
jmp
add
bound
mov
stos
inc
out
inc
stos
popf
jge
dec
adc
cmp
sbb
mov
iret
test
out
retf
fcomi
mov
xchg
fild
mov
in
jp
cmp
pop
sbb
pushf
ret
mov
loopne
imul
push
push
hlt
dec
xchg
jae
dec
pop
inc
sbb
mov
push
(bad)
sub
adc
out
sbb
jmp
cli
mov
nop
aaa
enter
sbb
mov
addr16
dec
es
mov
stos
add
inc
cwde
imul
fild
(bad)
cwde
pop
push
push
shr
push
adc
out
cwde
ds
xor
in
mov
shr
and
pop
leave
or
push
xlat
pop
mov
sbb
fcomp
and
xor
rol
jl
ins
jbe
mov
rcr
mov
adc
ficom
arpl
pushf
inc
sub
or
mov
xchg
pop
or
mov
pop
inc
(bad)
leave
aaa
cmps
sbb
je
mov
sahf
cmp
mov
sub
lds
dec
pop
out
mov
cwde
push
inc
mov
dec
(bad)
sbb
into
xlat
mov
xor
jle
push
popf
jle
rcl
adc
cmp
mov
cmp
das
sub
mov
retf
jecxz
pushf
in
mov
cmps
and
inc
inc
call
adc
outs
sub
movaps
outs
js
cmc
cwde
jle
js
fwait
dec
cmps
xchg
aad
sub
aam
test
or
std
jmp
mov
jecxz
cmp
cmp
test
mov
mov
pop
mov
xchg
xor
orps
mov
lds
jecxz
jmp
repz
dec
retf
or
adc
jne
mov
mov
mov
dec
out
and
into
jmp
call
jne
gs
call
out
pop
cmp
push
jmp
xor
loop
or
jne
mov
rol
cmp
in
and
mov
dec
mov
or
adc
inc
jnp
idiv
sub
adc
(bad)
jb
cmps
(bad)
leave
jecxz
jmp
out
xor
mov
xchg
add
popf
xor
inc
in
push
cmps
pop
inc
xchg
(bad)
in
ja
fdivr
shr
ror
rol
mov
pop
pop
out
ret
xchg
mov
mov
shl
mov
xchg
ret
fndisi(8087
cmp
scas
push
jne
push
aad
scas
in
cmp
std
int3
xadd
xchg
push
sub
cvtdq2ps
xor
pop
cmc
xchg
xor
cmp
sar
fcomp
in
cli
js
and
hlt
out
(bad)
or
push
xchg
mov
dec
pop
inc
(bad)
pop
loope
imul
adc
test
iret
fsubr
cmc
or
jnp
mov
cmc
repnz
mov
div
xchg
jo
pop
pop
icebp
cwde
dec
xor
cmp
(bad)
mov
pop
jnp
bound
lock
adc
xchg
xchg
cs
add
fwait
ror
sbb
xchg
sbb
clc
mov
pop
sbb
cmps
cld
add
sub
xchg
mov
pop
sbb
adc
jae
in
mov
jbe
(bad)
(bad)
sub
pop
jne
fiadd
movs
sub
mov
loop
mov
push
in
push
mov
mov
lahf
push
mov
dec
test
popa
xor
movs
jmp
retf
cmp
xchg
lods
jge
and
xchg
scas
push
repnz
xor
das
sub
xchg
pop
fwait
push
add
mov
inc
push
in
movs
je
rcl
lods
xchg
fisubr
loope
push
push
jo
in
out
jae
adc
test
test
xchg
mov
mov
out
add
je
ja
inc
clc
mov
outs
inc
loope
iret
outs
adc
xchg
or
pop
pop
cmp
push
ret
mov
xchg
xchg
in
aaa
sbb
test
test
push
stos
sub
mov
xor
cmp
pop
fild
push
mov
fstp
push
(bad)
repnz
test
sub
test
fmul
loopne
jo
call
lea
jp
imul
mov
jg
in
cs
movs
imul
test
ds
cmp
(bad)
sub
xor
ins
mov
or
or
pop
ins
movs
xlat
call
jmp
(bad)
leave
rcr
pop
ja
lds
and
jg
jge
adc
repz
ret
push
in
imul
add
or
lds
popa
jae
(bad)
and
inc
mov
add
mov
lods
inc
xchg
inc
or
adc
lahf
pop
sbb
imul
cmps
pusha
cmp
cmps
pop
or
pop
dec
je
jno
push
mov
into
hlt
arpl
jecxz
sbb
adc
stc
pop
retf
mov
or
xchg
fsub
ret
mov
xchg
fadd
jecxz
jns
xor
loope
pusha
mov
test
int3
scas
outs
(bad)
mov
ficom
cmp
cld
or
shr
mov
sbb
pop
jnp
adc
adc
and
jnp
xor
cwde
pushf
inc
mov
mov
xor
cmc
cmp
push
add
(bad)
std
adc
test
pop
mov
mov
dec
retf
(bad)
xadd
shr
xchg
sub
in
imul
add
xor
and
adc
sbb
cld
and
or
pop
in
daa
bound
xor
movs
mov
iret
popa
mov
aaa
inc
std
sbb
sbb
fidiv
jbe
xchg
in
stos
mov
je
jg
neg
xchg
or
sbb
add
jno
in
push
in
and
inc
inc
dec
out
dec
cdq
fst
loop
xchg
cmp
pop
dec
cld
jo
clc
aas
cdq
cmp
stos
cmp
mov
daa
sub
xchg
pop
in
mov
mov
xor
hlt
push
xchg
adc
push
pminub
shl
in
or
movs
mov
sbb
(bad)
sub
rcl
pop
dec
ret
mov
mov
lods
lock
mov
adc
mov
xor
ffreep
adc
jno
daa
jnp
retf
in
and
or
jmp
add
adc
std
fld
rcl
lods
rol
xchg
dec
push
out
outs
mov
cmc
or
mov
movs
stc
arpl
jne
in
retf
sbb
lods
push
or
add
dec
int
sbb
hlt
and
or
adc
dec
cli
pop
or
dec
shl
fimul
add
inc
sub
inc
jae
cmps
sbb
(bad)
push
and
xchg
jnp
adc
and
lahf
mov
adc
push
imul
push
xor
daa
out
ror
in
adc
mov
mov
mov
inc
dec
mov
push
clc
enter
fwait
call
ret
mov
or
and
lods
or
sbb
jge
pop
inc
not
jmp
sbb
jo
popa
dec
sbb
inc
or
shl
out
test
xor
mov
mov
repnz
popa
push
int3
int3
repz
pop
pop
out
movs
inc
bound
add
jmp
or
xchg
mov
push
ror
lock
cmp
outs
dec
ds
pop
sub
ja
out
aaa
and
loope
sub
or
inc
retf
mov
mov
sti
xchg
sub
or
loop
jg
cli
pop
add
pusha
imul
cmc
loop
inc
inc
call
js
mov
popa
fcmovne
xchg
mov
mov
lds
sub
xchg
scas
cmp
mov
mov
aas
push
nop
ins
hlt
pop
dec
shl
mov
jno
rcr
and
call
add
inc
pop
loope
push
pop
in
clc
test
cmps
adc
jns
pop
mov
and
mov
stos
mov
stos
sbb
ins
leave
push
stos
rol
push
nop
adc
scas
pop
aaa
ins
xchg
addr16
in
cs
std
das
sar
jp
cli
(bad)
jg
aas
add
jl
inc
mov
pop
sbb
lock
inc
daa
xor
pop
imul
cmp
jmp
popa
mov
mov
test
dec
int3
xor
mov
xlat
inc
mov
mov
jp
cmp
daa
ja
sbb
pop
or
mov
enter
cmp
int3
push
jne
push
jg
(bad)
push
mov
sahf
dec
ja
ret
test
mov
cs
pop
shl
push
jo
xchg
and
add
fiadd
dec
push
mov
dec
popa
iret
out
lahf
cmc
stos
lods
ins
imul
or
pop
or
xlat
xchg
mov
fiadd
ins
mov
out
ja
iret
lea
retw
pop
out
icebp
in
sbb
stc
inc
loopne
bound
aad
frstor
mov
xchg
shl
sti
mov
push
push
out
push
push
sbb
mov
push
add
mov
xchg
cmc
dec
adc
or
pop
sbb
scas
push
out
pop
iret
iret
push
fcmove
xchg
cmp
sbb
retf
and
aam
shl
mov
call
push
in
daa
push
loope
sar
out
aaa
imul
call
in
gs
cmc
cs
mov
aad
daa
pusha
xor
ret
push
cmps
jb
xchg
and
inc
(bad)
or
mov
out
pop
jbe
movs
cdq
xchg
loope
sahf
imul
jne
push
bound
mov
repnz
mov
out
cmp
int
inc
fwait
dec
sub
ins
or
stos
push
arpl
cmp
or
aad
pop
data16
sti
xor
(bad)
cli
mov
jmp
ja
pop
inc
mov
sbb
mov
cmp
mov
cs
sbb
shl
lahf
adc
dec
and
sti
mov
xor
mov
xor
pushf
test
popf
sub
mov
pop
jnp
mov
pushf
out
fwait
daa
lods
jmp
mov
mov
dec
aad
mov
sahf
sub
xor
retf
dec
push
xor
xlat
pusha
arpl
icebp
std
xchg
pop
std
ins
dec
push
mov
mov
jmp
pop
pop
xor
jl
outs
push
loope
jb
retf
pop
push
sahf
int
test
mov
idiv
xor
arpl
pusha
or
(bad)
loope
add
ins
inc
lahf
sti
mov
mov
dec
call
scas
outs
fs
add
xchg
dec
cmp
mov
add
add
not
xchg
inc
sub
cmp
sbb
sbb
push
stos
popa
mov
aad
gs
or
jne
dec
mov
adc
arpl
mov
sub
stos
(bad)
and
scas
pop
sub
or
or
in
stc
ret
stc
sar
or
push
inc
push
shr
xchg
xchg
or
stos
jmp
repz
add
mov
das
pusha
and
inc
out
lahf
dec
std
jno
daa
or
addr16
jl
in
stos
popf
xor
jmp
pop
mov
push
jle
push
adc
jbe
sbb
mov
test
jno
js
repnz
ds
xchg
test
and
jmp
(bad)
in
icebp
push
mov
pop
(bad)
test
sub
stos
pop
bound
ss
mov
xchg
cmps
in
sbb
mov
and
mov
lea
in
xor
test
shl
push
fdivr
pop
jp
inc
mov
jge
bound
push
push
jno
sub
dec
sbb
mov
shl
test
(bad)
mov
(bad)
sub
dec
cmp
stos
cdq
fcmovnb
repnz
int3
cmp
arpl
jecxz
pop
arpl
ret
sahf
mov
aaa
aad
cmp
ror
lock
inc
push
xlat
ja
fcomi
sub
div
push
xchg
leave
dec
mov
loopne
mov
js
add
leave
adc
std
shl
fstp
jbe
add
adc
in
into
(bad)
jle
adc
jmp
xor
fst
out
cmp
loopne
mov
xor
mov
mov
add
popf
inc
dec
cmc
mov
fdivr
lock
repnz
mov
cli
pop
loope
imul
mov
xor
test
aas
fucomp
push
inc
adc
jnp
sbb
in
mov
fist
mov
std
adc
imul
sub
std
aad
(bad)
into
and
call
imul
dec
jmp
sbb
ja
inc
jmp
mov
push
mov
dec
pop
rol
popa
push
dec
cmp
and
push
imul
daa
cs
ds
inc
xchg
add
push
xor
jb
enter
cmp
push
mov
stos
retf
js
mov
repz
push
lock
add
xchg
mov
lds
mov
mov
cmp
pop
mov
pop
push
(bad)
cmps
inc
retf
das
sub
add
add
xlat
dec
push
rcr
sahf
xor
xor
lea
rcr
call
loopne
push
pop
push
fwait
mov
pop
or
loope
inc
dec
(bad)
retf
cwde
dec
pop
jecxz
jp
add
pop
pop
popa
xchg
pop
mov
rcl
out
or
mov
leavew
mov
icebp
out
bound
mov
cli
or
cld
pop
xor
mov
stos
popa
cmp
into
push
inc
call
popa
repnz
xchg
mov
mov
cmp
pop
dec
pop
jbe
call
bswap
cmp
push
cli
aam
xor
mov
pop
std
aaa
or
lea
dec
hlt
push
dec
fwait
pop
mov
idiv
stos
jmp
mov
push
aaa
je
push
lea
and
add
xor
nop
loope
stos
inc
push
cmp
arpl
sub
push
addr16
cmp
retf
sbb
(bad)
repnz
mov
test
sar
das
lahf
cmps
add
lds
xor
retf
or
js
sbb
lahf
mov
addr16
pop
jp
sub
fisub
push
je
test
test
xchg
ficom
pop
jmp
add
jge
push
fmul
ucomiss
mov
(bad)
jp
out
cmp
sti
addr16
push
fmul
aam
and
aad
or
cli
mov
push
jbe
das
xchg
aaa
sbb
movs
pop
push
data16
or
lock
scas
es
or
push
dec
retf
rcl
call
mov
out
(bad)
gs
pop
scas
mov
cmp
in
outs
loope
hlt
fistp
out
jno
icebp
popa
mov
jb
movs
add
add
push
ins
and
inc
aad
fisttp
inc
cmp
fs
pusha
mov
addr16
xor
jnp
xchg
or
stos
mov
mov
in
mov
mov
pop
imul
sbb
call
jl
and
packuswb
fdiv
sbb
jbe
cmp
lock
sbb
cdq
ss
repnz
pop
jmp
xchg
push
inc
jp
push
cmp
cmp
mov
mov
mov
sbb
retf
and
sbb
cmp
jmp
or
shr
arpl
mov
sub
lea
inc
ror
fwait
popf
cmp
inc
add
mov
sbb
jnp
sub
icebp
lahf
pop
mov
push
pop
scas
in
and
test
fidivr
cmc
(bad)
aam
dec
dec
xchg
adc
addr16
mov
addr16
jp
mov
jmp
in
sbb
ret
out
es
pop
mov
int
dec
pop
adc
add
je
jae
xchg
cmp
(bad)
icebp
inc
dec
or
jmp
push
sbb
xlat
enter
in
mov
cdq
aaa
aad
test
dec
dec
add
fbstp
fwait
jg
cwde
mov
mov
jmp
mov
pop
scas
pushf
pop
loopne
jmp
mov
clc
fistp
adc
data16
fcmovnu
adc
mov
frstor
loope
lods
sub
push
push
cwde
or
mov
sub
arpl
or
dec
(bad)
retf
mov
mov
and
scas
(bad)
adc
mov
jle
jmp
inc
mov
push
xor
dec
(bad)
scas
pop
mov
daa
inc
jnp
jae
pop
mov
aas
adc
mov
inc
mov
inc
or
movd
mov
shl
adc
dec
sub
in
(bad)
sbb
fisub
in
push
mov
jecxz
idiv
dec
(bad)
or
and
rcl
push
imul
(bad)
lds
int3
pop
push
mov
fidivr
jae
out
lods
outs
imul
(bad)
xlat
fisttp
add
push
push
sub
push
mov
cld
fisttp
std
and
aam
in
sbb
cmps
cmp
cs
repnz
dec
(bad)
out
loopne
mov
push
ret
jnp
fsub
out
repz
pusha
push
jno
jmp
mov
or
cmp
imul
daa
or
jne
shl
cmp
jae
cdq
out
adc
jmp
mov
(bad)
loope
movs
inc
xchg
popf
push
imul
mov
into
sahf
push
cmp
jnp
in
or
in
aaa
pop
push
daa
clc
or
mov
add
jecxz
outs
cmc
xor
xchg
add
cdq
loopne
mov
sbb
arpl
mov
mov
enter
shl
cmp
in
retf
or
les
aad
test
(bad)
dec
push
jb
ret
adc
in
push
xchg
(bad)
aaa
call
mov
cmc
(bad)
mov
retf
repnz
mov
imul
cmp
test
test
int
push
(bad)
aam
neg
mov
paddd
mov
mov
push
enter
xchg
inc
outs
adc
or
aad
push
adc
in
sub
add
or
jb
movs
loop
sbb
loop
xor
mov
inc
push
les
mov
mov
cmp
jecxz
retf
cmps
pop
fld
adc
lds
push
dec
jb
inc
lods
movs
xchg
(bad)
scas
loope
dec
mov
mov
inc
outs
mov
stc
fstp
and
cmp
adc
out
xor
push
sbb
retf
into
test
jno
lea
shr
pop
mov
sbb
pop
aad
nop
(bad)
jg
sahf
mov
inc
(bad)
fs
loope
in
nop
xchg
ret
dec
adc
jns
add
sub
rcl
arpl
mov
mov
xchg
cmp
xchg
(bad)
std
nop
mov
mov
adc
shl
(bad)
mov
jl
sar
push
jle
push
and
mov
adc
and
iret
adc
mov
(bad)
(bad)
es
xor
dec
inc
pop
pop
les
mov
jno
fmul
popf
jmp
pop
inc
sar
or
iret
cmps
les
aad
cld
repnz
dec
and
out
xchg
mov
inc
and
test
fbld
push
loope
add
iret
push
nop
dec
loope
inc
push
push
xor
stos
push
aaa
fstp
loop
push
cs
ins
push
rol
les
jecxz
sbb
pop
and
test
(bad)
shr
arpl
loopne
test
aad
bound
inc
scas
pop
and
mov
mov
aaa
mov
out
cmp
fimul
popf
std
xor
outs
xor
mov
jmp
imul
cmovp
scas
pop
lea
push
rcl
xchg
and
mov
clc
stos
out
add
std
rcl
mov
and
in
sbb
ins
adc
and
jge
inc
xor
cs
pop
add
sub
mov
sbb
adc
ja
imul
push
leave
mov
stos
cmp
mov
inc
sub
fs
sbb
pop
mov
mov
pop
push
shr
cmp
(bad)
adc
and
jbe
and
and
inc
mov
add
pop
fucomp
adc
lahf
fisub
outs
or
inc
adc
fidiv
inc
adc
not
inc
mov
xor
jp
mov
fcomi
cwde
mov
jae
shl
push
cmp
mov
sub
sar
or
sbb
dec
push
and
mov
inc
arpl
aaa
ret
retf
push
fisub
adc
sub
rcl
in
shl
ret
xchg
es
add
mov
test
push
and
push
dec
leave
mov
aam
sub
shl
nop
dec
pop
push
adc
adc
jge
fstp
or
int
test
jne
movs
mov
xor
loope
inc
repnz
xor
retf
cmc
xchg
dec
cmc
cld
cmp
push
push
cmps
in
lea
jno
xlat
pushf
outs
xor
stc
sub
mov
xor
pop
out
adc
jo
in
aad
add
pop
mov
(bad)
and
push
xor
adc
les
mov
call
fadd
and
int
shl
ret
push
xor
cwde
fwait
mov
inc
or
jne
pop
adc
fisub
sub
stc
das
sub
dec
pop
sbb
inc
push
les
stos
retf
jb
jmp
inc
dec
cmp
retf
add
xor
aad
sti
outs
push
push
fsubr
lods
test
dec
je
mov
ds
clc
or
xchg
jp
ret
push
pop
ins
imul
push
ja
loopne
es
inc
pop
scas
ins
xchg
and
sub
imul
sbb
fcom
enter
stos
pop
(bad)
mov
(bad)
loop
ins
stc
mov
(bad)
ror
pop
push
push
aad
inc
cmp
push
jg
nop
push
pop
cwde
adc
aas
cmp
adc
dec
ror
sbb
sbb
int3
xchg
jmp
fisttp
stos
inc
retf
adc
add
inc
(bad)
into
pop
inc
inc
dec
push
push
lods
adc
mov
lods
mov
rol
add
mov
enter
inc
pop
mov
adc
inc
jecxz
cmp
or
aam
(bad)
push
inc
popf
ds
fcomip
inc
mov
xchg
mov
(bad)
hlt
jno
sub
xchg
xchg
dec
or
xchg
repz
test
ror
arpl
mov
ja
dec
nop
push
sti
outs
add
xor
mov
enter
dec
cld
mov
cli
push
push
mov
xchg
js
nop
jbe
mov
arpl
push
xchg
xchg
(bad)
push
sti
mov
xchg
in
xor
mov
dec
sub
hlt
js
pop
dec
icebp
mov
mov
mov
test
es
cmp
add
or
popa
dec
and
fs
rcr
pop
add
mov
sub
add
add
mov
popa
jg
lea
sbb
and
pop
ja
mov
loopne
add
adc
fcmovne
jno
xchg
sub
data16
fisub
pop
(bad)
(bad)
sbb
std
imul
jno
sbb
ins
pop
addr16
js
ds
xor
jmp
sbb
test
shr
neg
dec
xchg
(bad)
xor
mov
mov
mov
mov
in
adc
mov
in
xchg
(bad)
dec
dec
das
jo
retf
addr16
adc
jnp
adc
out
adc
push
loop
ss
jae
cmc
arpl
inc
mov
inc
jo
cmps
lea
(bad)
adc
dec
dec
ins
imul
shl
out
js
mov
daa
or
adc
and
cmps
fst
sbb
xor
sub
shl
xchg
sahf
pop
ins
dec
leave
adc
mov
and
int3
mov
pop
ss
ins
dec
arpl
nop
fsubp
test
and
add
arpl
jl
pop
fwait
(bad)
sbb
sti
jle
inc
arpl
outs
scas
jmp
(bad)
mov
add
push
loopne
adc
xchg
lods
cmp
out
dec
test
pop
pushf
mov
call
iret
out
sti
add
not
pop
iret
cmps
lods
push
push
into
cld
and
jmp
mov
or
jg
mov
xchg
sub
sub
enter
inc
(bad)
jl
and
mov
js
inc
mov
nop
mov
imul
movs
mov
jns
or
push
pop
call
adc
ds
leave
div
push
mov
aas
fwait
aam
push
push
das
in
xchg
test
mov
pop
inc
out
push
add
cs
inc
mov
sub
pop
mov
mov
hlt
jmp
cmp
jecxz
inc
mul
pop
lahf
adc
popa
xor
cmp
ret
dec
sub
scas
addr16
cmps
popf
pop
sub
xor
xchg
jp
les
jge
div
mov
out
shl
pusha
out
test
cmp
jb
fldcw
outs
cmp
aas
dec
jns
inc
and
int3
push
mov
jnp
mov
xchg
sbb
sbb
or
stos
test
xor
sar
fwait
jge
aaa
(bad)
jb
dec
add
inc
jle
(bad)
call
test
adc
jae
inc
nop
movs
mov
sbb
jl
mov
popf
stos
mov
(bad)
fnstsw
fs
les
pop
xchg
jecxz
xlat
mov
push
xchg
cmps
sbb
cmp
pop
inc
sub
sub
(bad)
call
ret
sub
aas
stc
loop
xchg
push
pushf
fidiv
or
lods
mov
scas
sbb
sbb
cmovae
icebp
push
mov
leave
mov
in
cdq
inc
mov
ret
mov
push
xchg
es
fnstcw
mov
or
data16
or
fmul
ins
xor
(bad)
pop
sub
stc
imul
mov
scas
out
pop
sub
jle
and
fdivp
int3
push
pop
mov
pop
repnz
rcl
push
test
xlat
int
xor
inc
cwde
scas
add
adc
popa
adc
sbb
pop
push
stc
or
scas
call
lahf
std
dec
aaa
repnz
popf
rcr
xchg
adc
push
pop
std
jmp
test
jbe
std
repz
mov
mov
jno
sbb
mov
pop
es
fcmovu
pop
inc
push
jl
imul
stc
scas
mov
mov
sub
push
popa
sar
sbb
cmc
push
adc
in
xchg
mov
imul
pop
cmp
and
in
cld
add
mov
adc
out
sahf
cld
pop
dec
(bad)
jp
mov
pop
cmp
cmp
test
pop
jno
inc
mov
iret
retf
push
xor
xchg
ja
add
jno
adc
hlt
inc
cmc
lds
aas
icebp
mov
xchg
pop
xchg
sbb
rcr
scas
ins
enter
ret
xchg
push
dec
and
jns
jge
ins
aaa
(bad)
push
mov
xor
add
jecxz
jg
push
sbb
sub
pop
dec
or
ror
xchg
jl
sbb
add
mov
adc
js
jle
jns
inc
xor
mov
inc
imul
or
mov
leave
pushf
jne
push
mov
mov
xor
push
and
cmp
aas
int3
cdq
retf
in
repnz
cmps
stos
push
int3
cmps
clc
(bad)
gs
xchg
xor
cs
rcr
jns
sub
dec
(bad)
icebp
cmp
mov
xor
push
or
data16
fwait
cmp
and
call
test
cmp
jne
cmp
adc
fld1
call
add
fisttp
push
inc
pop
push
ss
inc
push
repz
mov
mov
rcl
mov
inc
aas
pop
pop
push
(bad)
lock
xor
push
push
sub
xchg
push
das
retf
jmp
ja
icebp
cwde
repnz
inc
stc
loop
push
add
mov
aas
sub
dec
pop
rol
push
es
je
mov
inc
les
dec
test
jo
stos
cmp
adc
ins
je
ins
inc
pop
scas
and
mov
add
sub
cli
shr
sahf
adc
dec
ficom
pop
cmp
push
sub
inc
popf
xor
sub
scas
sub
push
and
fiadd
push
stos
add
outs
jmp
and
test
clc
imul
xchg
lock
adc
sbb
pop
stos
and
test
shl
dec
adc
xchg
stc
int
cmp
pop
sbb
addr16
mov
cmp
inc
test
jecxz
ror
xchg
xlat
out
int
test
pop
sub
sti
and
bound
and
cwde
outs
add
jb
cmp
add
adc
pop
icebp
inc
cmp
sbb
sar
sbb
xchg
out
cmp
mov
push
ret
ret
gs
mov
sub
div
mov
xchg
fmul
cwde
movs
cld
in
mov
inc
call
or
or
movs
or
stos
sti
push
mov
int3
sbb
fisttp
mov
addr16
cmps
cwde
jbe
and
push
loopne
pop
mov
in
icebp
xchg
scas
lods
scas
adc
stos
sar
lods
dec
push
and
push
js
inc
pop
push
inc
mov
cmp
mov
cli
outs
jge
bound
or
ja
fs
and
int3
adc
dec
and
sahf
xchg
test
inc
shl
pop
lahf
pusha
xor
test
cli
pop
shl
lahf
mov
pop
std
push
in
mov
mov
fcmove
sub
push
stc
mov
fsubp
mov
les
adc
push
cmp
jns
push
leave
rcr
jge
call
pop
rcl
ins
test
dec
(bad)
sub
das
xchg
or
jmp
dec
daa
or
jae
push
sub
aam
xor
xchg
sbb
pop
loopne
mov
add
imul
inc
add
js
jmp
dec
ss
lods
vcvtusi2sd
arpl
aad
xchg
into
push
jp
imul
in
or
adc
mov
add
adc
int3
cmp
jl
hlt
lahf
retf
cmp
and
push
jnp
iret
enter
adc
ficom
push
repz
stos
sti
mov
mov
std
in
loop
shl
xchg
cdq
mov
and
int3
add
int3
enter
dec
dec
repz
int3
mov
mov
mov
cmp
cmp
fcmovb
rcl
push
rcl
(bad)
or
les
add
jmp
ds
mov
cmp
sbb
cmp
xor
pop
into
inc
mov
call
pop
push
mov
pop
mov
xchg
jl
std
fsubr
pop
adc
sar
and
in
mov
mov
int3
shl
addr16
aas
or
mov
add
shl
stos
dec
cmp
mov
int3
loop
and
push
sub
pop
push
inc
retf
push
sar
movs
inc
inc
add
sub
adc
aas
fcomp
jl
loope
mov
dec
mov
outs
dec
xor
cld
adc
cdq
out
push
in
xchg
call
cmp
mov
nop
gs
ins
jo
test
push
arpl
adc
push
and
jmp
inc
dec
mov
adc
and
xchg
shl
iret
lea
fcom
sbb
inc
arpl
fld
test
ins
movs
ja
inc
cmp
sar
jecxz
and
loop
lods
pusha
sub
mov
enter
movs
xchg
mov
jbe
lea
and
mov
arpl
lods
and
pusha
mov
aam
jno
hlt
lock
cli
call
pop
aaa
mov
mov
mov
mov
sub
jmp
and
xchg
xchg
or
mov
adc
retf
ja
cmp
fdivrp
in
pushf
push
mov
or
xchg
mov
cli
sub
pop
and
push
mov
outs
add
div
out
xor
int
jo
mov
test
les
and
xchg
das
repz
scas
mov
daa
sbb
cwde
push
(bad)
cmps
push
enter
mov
cli
nop
or
stos
(bad)
pop
scas
dec
xor
es
xchg
out
xchg
ror
popa
(bad)
dec
inc
icebp
add
push
cli
repz
loop
inc
fild
mov
imul
mov
cmp
push
loope
aaa
(bad)
fwait
push
lahf
jge
sbb
xchg
arpl
inc
xor
bound
ins
fdivr
xlat
dec
push
mov
mov
pop
or
xchg
cmp
rcl
xor
icebp
pop
cli
jl
stos
sub
cld
ret
in
fimul
mov
aas
ins
sbb
aam
dec
(bad)
aad
in
mov
aad
ins
in
lods
jg
(bad)
int
mov
daa
or
rol
aaa
ds
and
fimul
std
lods
cld
add
ins
shr
jmp
adc
pop
push
shl
jnp
push
pop
mov
push
pop
and
pop
sub
cwde
mov
retf
daa
cmp
fidiv
(bad)
scas
lods
pop
test
cmp
ficomp
(bad)
xor
mov
sub
out
push
push
xchg
push
mov
push
das
inc
(bad)
jno
ins
fcmovnb
lock
stc
push
add
push
shr
fsubr
dec
fild
xchg
adc
adc
xchg
scas
fcmovnu
inc
imul
add
or
ret
ffreep
inc
add
shl
sbb
inc
jae
sub
cdq
adc
fild
mov
push
xchg
aaa
pop
cmp
retf
shl
lds
cwde
mov
mov
jmp
adc
sub
arpl
out
jmp
adc
mov
or
xchg
pop
push
in
mov
sub
test
mov
inc
popf
dec
sbb
jb
fbstp
repz
jb
adc
rol
dec
ja
pop
les
jb
ret
sti
inc
icebp
sbb
movs
jb
mov
jne
movs
push
retf
sbb
jge
lods
into
dec
mov
or
mov
xor
fdiv
sahf
adc
xchg
pop
or
pop
xor
dec
or
mov
or
cld
pop
cmps
int3
jg
popf
adc
cwde
or
push
imul
push
inc
pop
mov
push
jge
neg
(bad)
mov
jg
cdq
fwait
repnz
sbb
aad
test
mov
and
retf
add
int
(bad)
data16
retf
cmp
push
daa
xlat
les
sub
or
movs
push
pop
push
iret
in
mov
in
mov
mov
mov
push
ja
or
cmp
jecxz
bound
into
lods
iret
addr16
fcomp
cmp
fs
bound
push
pop
or
sahf
add
sub
pop
je
and
dec
xlat
aaa
inc
jp
push
in
add
inc
lock
mov
jge
cmp
cmp
sar
std
jl
ret
lds
bound
out
sub
out
sub
icebp
jg
inc
cmp
sub
sbb
sub
inc
outs
loope
stc
inc
push
movs
fmul
div
mov
retf
pop
jl
pusha
mov
inc
sbb
xlat
dec
sbb
sahf
adc
adc
scas
dec
add
aaa
xchg
fs
and
arpl
ins
add
add
lock
sti
adc
repnz
movs
inc
dec
mov
pop
cdq
ds
jne
ins
xchg
cmc
stos
dec
lods
lds
in
cmp
cmps
retf
call
xchg
xchg
inc
sub
push
push
test
aaa
push
sbb
loop
pop
(bad)
jae
push
mov
loope
jo
in
xor
pop
xchg
push
or
out
ret
push
xor
fnstenv
test
jnp
int3
jae
push
cmp
jno
jb
dec
daa
(bad)
mov
daa
push
out
lahf
movs
js
loope
clc
push
inc
out
scas
jl
push
mul
and
xchg
gs
arpl
inc
in
mov
add
ret
add
sub
push
fadd
(bad)
out
inc
xchg
sti
xchg
into
push
xchg
add
les
mov
data16
retf
mov
mov
dec
mov
and
loope
out
xchg
(bad)
movs
fisub
add
mov
loop
jns
lds
lea
add
mov
sub
mov
cmp
lahf
xor
add
and
pushf
mov
mov
sub
jbe
jmp
and
stos
inc
cmp
mov
inc
das
outs
mov
scas
inc
add
and
mov
inc
mov
adc
test
sti
sti
inc
push
cmp
xlat
mov
dec
iret
mov
lahf
pop
popf
mov
out
push
cmp
add
inc
add
stos
in
loopne
sub
std
jle
or
sub
ins
or
or
ret
xor
inc
test
mov
fdivr
xor
dec
mov
test
mov
ret
adc
inc
jmp
gs
dec
fcmovb
jmp
dec
sub
mov
hlt
loope
adc
mov
lods
dec
das
cmp
xor
pop
cdq
pop
inc
pop
popf
rcr
aaa
aam
(bad)
cmp
jb
inc
dec
daa
add
mov
mov
fistp
outs
movs
jo
std
sbb
xchg
movs
cwde
jns
ficomp
dec
mov
in
outs
imul
call
adc
in
xor
js
fwait
dec
addr16
test
(bad)
pop
ficomp
jecxz
fucom
ror
mov
xor
jno
imul
imul
or
jmp
dec
mov
ja
les
dec
(bad)
icebp
sub
test
lds
pop
stos
stos
push
xlat
and
jbe
daa
sub
loop
mov
popf
(bad)
loope
add
fstp
icebp
rol
xchg
arpl
or
ds
xor
mov
shr
(bad)
pop
inc
je
jbe
pop
dec
(bad)
push
test
jns
shr
test
shl
jmp
mov
dec
call
mov
inc
repz
stos
and
sti
inc
push
enter
xlat
jecxz
cmp
sub
sub
push
or
sub
dec
jmp
pop
ja
clc
retf
sbb
cmp
mov
test
shr
cmps
push
mov
cdq
ror
pop
push
mov
push
shl
into
pop
aam
push
inc
(bad)
test
in
inc
daa
sub
cld
cmp
dec
ror
push
ss
cmp
cmp
xchg
fadd
loope
stc
lea
sub
sbb
lods
movs
sar
int3
and
movs
inc
sar
jle
scas
pop
test
in
popa
pop
adc
retf
js
pop
cmp
push
outs
pop
inc
mov
cmp
stc
sub
fcomi
call
push
fdivr
jae
lods
or
rcl
movs
lock
push
and
aas
pushf
mov
aaa
pop
retf
mov
add
mov
mov
or
lods
jecxz
sbb
je
sbb
sub
outs
mov
mov
dec
push
movs
ss
int3
push
fsub
and
cmp
jp
call
enter
enter
loope
arpl
loope
dec
nop
adc
sbb
xchg
das
xchg
mov
pushw
cdq
aas
cmp
enter
xor
mov
add
aam
mov
imul
das
mov
in
xchg
lds
mov
pop
lods
and
mov
add
leave
(bad)
(bad)
enter
jbe
nop
xor
xor
jle
mov
sbb
pushfw
mov
in
xlat
adc
dec
jmp
sbb
cwde
push
cmc
sar
bound
cld
push
sar
movs
xchg
sahf
jmp
xchg
dec
int3
mov
retf
mov
stos
pop
test
mov
pop
inc
loopne
mov
dec
enter
hlt
sub
sbb
cmps
sar
ins
adc
jmp
ds
cmps
ret
dec
in
dec
sahf
cmp
inc
xor
push
scas
cmp
arpl
mov
and
push
xor
add
fisttp
sbb
ins
sub
sbb
pop
fsub
hlt
mov
in
repnz
adc
add
test
data16
call
sbb
das
push
mov
lahf
or
xchg
iret
cmc
loope
adc
jns
std
sub
mov
pop
xor
or
pop
pop
iret
mov
dec
lock
outs
xor
cmps
jns
cld
cmc
icebp
ficomp
sub
daa
push
push
scas
cld
icebp
pop
fbld
ret
ja
fdivr
dec
ins
lods
lock
test
xchg
shl
and
stos
or
cmps
lods
cdq
fsub
(bad)
xchg
(bad)
pusha
mov
jecxz
out
out
adc
push
sbb
push
jecxz
outs
fwait
and
out
xor
or
stos
fmul
xchg
push
pop
cmp
sbb
cmp
jbe
jmp
cwde
stos
adc
mov
jecxz
dec
out
movs
mov
lods
push
mov
add
fs
push
(bad)
mov
call
pop
jmp
loop
sahf
iret
lahf
add
add
dec
sti
fimul
and
push
pop
adc
aaa
or
out
ins
sbb
fidivr
add
xor
xchg
stos
rcl
mov
(bad)
mov
push
lock
mov
cmc
pop
or
scas
mov
sub
xor
and
mov
and
adc
add
and
adc
and
cmp
dec
and
ret
cwde
mov
pusha
cmps
xor
outs
bound
imul
mov
add
les
bound
jge
icebp
inc
lds
pop
(bad)
loopne
mov
cdq
iret
js
xchg
inc
retf
aad
sub
pop
xchg
dec
add
icebp
sub
loop
in
sub
stos
in
adc
jae
push
dec
shl
add
mov
jge
jecxz
call
fnstsw
inc
icebp
mov
xchg
lea
(bad)
aaa
push
adc
imul
add
ds
mov
mov
mov
cmc
ins
lds
lock
mov
push
cmp
lahf
xchg
in
in
(bad)
inc
xor
or
or
outs
and
in
imul
fnstsw
std
or
sub
push
jo
pop
stos
mov
push
inc
rcl
pop
scas
mov
pop
jo
mov
(bad)
into
jne
in
bound
dec
mov
jge
xor
es
sbb
sub
and
add
xor
lods
call
or
test
and
shl
xor
mov
lahf
dec
test
pushf
arpl
les
xor
add
icebp
mov
repnz
or
lods
pop
outs
mov
jne
mov
pop
std
mov
sub
lods
retf
stc
imul
mov
or
inc
movs
mov
xor
push
iret
sti
and
sbb
pop
inc
mov
int3
(bad)
xor
mov
retf
out
ret
sbb
es
push
popa
jnp
or
aam
test
pop
call
push
mov
aaa
add
out
adc
mov
mov
push
lods
shr
push
jo
add
mov
pop
xor
in
aad
sub
out
xchg
xor
adc
popa
out
stc
cmp
cmp
mov
xor
lea
xchg
idiv
stos
ret
mov
popf
or
inc
xchg
add
outs
je
push
push
icebp
popa
rol
sbb
push
hlt
add
mov
(bad)
fisubr
(bad)
call
jnp
fxch
adc
pop
xor
(bad)
fisub
xchg
mov
adc
rol
push
outs
hlt
dec
pop
jae
ret
std
int3
jp
and
mov
pop
ins
sub
sbb
mov
fimul
(bad)
mov
jns
push
pop
rcr
add
pusha
sub
ffree
dec
or
stos
data16
xchg
loope
sub
mov
sbb
(bad)
and
(bad)
inc
mov
aas
inc
dec
mov
ficomp
mov
(bad)
add
sub
dec
inc
mov
sub
jbe
and
lea
inc
imul
jmp
or
movs
mov
jecxz
lods
push
mov
adc
das
movs
adc
xor
out
(bad)
pop
sbb
xor
cmc
dec
or
add
retf
and
call
retf
int3
aad
and
xchg
sbb
inc
rol
cmp
dec
cmp
adc
mov
je
sub
out
add
fsub
nop
xchg
xor
jae
push
push
jbe
cmp
xor
scas
push
xchg
cli
hlt
xchg
add
add
repz
dec
mov
mov
mov
loopne
in
pop
loopne
in
dec
lahf
jecxz
daa
inc
std
shr
das
pop
stos
mov
sub
cmove
push
xchg
icebp
add
xor
not
xchg
jmp
pop
cmp
pop
ret
xor
jne
dec
pop
shr
pop
inc
(bad)
mov
lods
jae
inc
mov
pop
ret
lea
pop
sub
shr
and
sbb
lods
mov
lock
std
cmps
dec
xchg
ror
inc
cwde
in
or
adc
in
ins
mov
xor
mov
or
(bad)
rcl
mov
and
ret
stos
push
jns
ins
stos
ss
mov
sar
(bad)
cmp
xchg
adc
mov
nop
mov
adc
jns
jmp
repz
stos
jp
shr
sbb
movs
add
test
data16
fs
push
mov
mov
dec
add
repnz
test
mov
jnp
mov
icebp
fiadd
in
cwde
fdivr
shl
outs
inc
repz
sbb
aad
cld
jmp
push
jnp
idiv
in
lock
int
cmps
lock
fsubr
js
aad
cmp
retf
fcmovnu
out
xor
int3
mov
iret
jne
ss
mov
fwait
dec
mov
leave
dec
mov
xor
imul
ror
stos
(bad)
mov
shl
mov
add
mov
or
out
fldz
add
sti
and
fiadd
add
aas
(bad)
inc
sar
adc
les
sbb
pop
in
xchg
fst
adc
or
loop
retf
aas
push
int
out
jge
jmp
out
jl
push
scas
mov
add
(bad)
xchg
shr
mov
xor
mov
stc
stos
mov
jbe
jne
jmp
pushf
cmp
scas
mov
dec
push
sbb
sbb
nop
sti
mov
xor
fld
jb
sbb
les
outs
mov
jmp
ss
adc
sbb
cld
sbb
sub
dec
jecxz
add
cli
mov
push
dec
sti
imul
dec
ret
addr16
movs
(bad)
hlt
xor
push
sbb
inc
add
aad
(bad)
cld
xor
sbb
mov
push
mov
(bad)
jo
push
xor
cdq
jae
arpl
std
jne
pop
mov
test
adc
mov
lods
fs
cmp
enter
sbb
dec
cmp
(bad)
push
xor
arpl
push
jb
dec
jne
adc
pop
in
loopne
adc
pop
int
xor
sub
inc
pop
in
add
mov
push
add
mov
loopne
and
pop
add
fistp
adc
mov
mov
or
xor
pop
xchg
fcmovnbe
sbb
or
sbb
jo
push
int
ret
fiadd
mov
neg
ret
fbstp
(bad)
leave
mov
push
daa
fadd
hlt
ret
ror
add
div
jmp
jle
mov
pop
cld
call
(bad)
push
out
(bad)
fdivr
jmp
ficom
and
adc
push
rol
test
mov
je
xchg
arpl
imul
arpl
aas
stos
mov
mov
push
fmul
out
aas
aam
ret
(bad)
dec
add
or
push
jp
bound
xchg
mov
lods
pop
adc
sahf
mov
adc
xchg
pop
cli
mov
(bad)
stos
push
pop
mov
jg
mov
scas
(bad)
out
mov
loope
sbb
cdq
adc
outs
test
mov
pop
jle
adc
jle
and
or
jmp
pop
ss
lds
(bad)
mov
push
les
popa
imul
movs
inc
xchg
stos
mov
adc
sar
xor
push
xchg
retf
setp
mov
add
push
dec
adc
inc
les
push
jns
gs
pushf
packsswb
jns
cmp
mov
sahf
sub
pop
pop
inc
mov
arpl
inc
out
mov
test
cmc
mov
sbb
adc
rol
pop
and
outs
out
dec
or
sahf
mov
xor
out
sbb
addr16
xchg
div
push
push
xor
stc
test
lds
aas
jbe
mov
int
je
mov
mov
inc
pop
sbb
mov
adc
jg
test
jge
mov
xchg
jae
sub
xor
add
pop
mov
rcl
in
xor
jbe
jmp
adc
dec
add
dec
shl
ret
dec
mov
rol
data16
inc
pusha
leave
lock
add
les
jle
rcl
retf
js
cdq
fnstcw
jb
lds
cvtps2pi
pop
pop
adc
loop
jae
mov
jmp
cmc
les
popf
test
leave
and
stos
shr
test
xchg
ja
test
adc
test
cmp
add
pop
xor
push
xor
(bad)
sub
pusha
les
add
xor
push
(bad)
(bad)
sub
xchg
inc
mov
pop
sub
or
pop
retf
mov
jo
pop
xor
xchg
and
lods
imul
push
inc
mov
fs
lods
out
pushf
dec
gs
test
mov
jg
ret
push
std
test
jmp
data16
jl
scas
das
xchg
stos
push
cmps
sbb
jne
and
mov
fs
gs
out
push
cld
cmovge
lea
xor
and
inc
mov
shl
pop
jg
mov
mov
es
aam
and
xor
sub
mov
(bad)
and
test
movs
retf
leave
mov
add
inc
cmp
aam
sti
rcl
and
push
xor
fisub
jmp
inc
retf
lods
and
ja
inc
scas
mov
xchg
popa
ficomp
or
adc
mov
mov
call
xchg
in
pop
int3
movs
add
fiadd
mov
dec
popf
in
mov
test
adc
ja
cmc
jecxz
test
out
sub
jbe
pop
daa
pop
ror
scas
outs
imul
dec
mov
pop
mov
mov
imul
stc
(bad)
mov
cmp
rcr
stos
xchg
jb
aad
icebp
mov
loop
fwait
dec
test
(bad)
out
aam
mov
sbb
xchg
int
xchg
jecxz
imul
popa
mov
lea
das
in
sub
cld
jp
mov
outs
mov
jns
sub
adc
into
scas
retf
call
popf
inc
push
data16
adc
jns
xchg
std
adc
push
push
shl
sahf
inc
dec
pop
jmp
cmp
cmp
xchg
jmp
jmp
pop
ins
and
sti
adc
aam
mov
fisttp
dec
out
imul
adc
ins
(bad)
push
test
xor
adc
fwait
jo
je
test
push
cmps
fwait
les
vmread
or
scas
pop
sub
xchg
sbb
push
shr
or
push
dec
mov
cmps
mov
or
pop
(bad)
jge
and
mov
mov
in
push
sub
fist
lock
mov
lods
dec
cmp
sub
lods
js
pop
(bad)
in
mov
jl
pop
dec
loopne
cmp
xor
jne
stos
aad
sub
add
mov
in
jbe
mov
add
push
xchg
sti
sti
sbb
es
fnstsw
ds
out
or
or
sar
ds
mov
mov
adc
and
pop
stc
shl
test
mov
stc
popf
pavgb
(bad)
iret
sbb
pop
shl
jl
gs
xor
ins
mov
adc
and
fld
mov
pop
pop
fbld
jb
fidiv
inc
lods
push
and
jl
jmp
dec
aam
repz
dec
mov
in
or
loopne
or
sub
(bad)
sbb
fimul
push
scas
sti
aam
jl
sar
fimul
xchg
pop
cmp
call
test
test
lock
mov
int3
in
xchg
cmp
imul
dec
ret
xchg
mov
sbb
push
not
lahf
call
imul
xchg
enter
(bad)
iret
adc
xor
ins
(bad)
retf
js
iretw
data16
mov
jne
push
adc
inc
ja
dec
xor
aaa
test
std
mov
lods
adc
in
pusha
dec
inc
mov
ret
jecxz
cmc
pop
jmp
leave
ret
loop
mov
icebp
xor
cwde
repnz
jo
xor
inc
iret
mov
sahf
imul
sub
iret
xchg
push
test
test
xor
jae
xor
js
mov
leave
rcl
int3
push
xor
cli
cmps
sub
popf
ret
iret
div
xchg
dec
bound
mov
mov
daa
pop
adc
sub
dec
pop
mov
jmp
or
mov
push
xchg
cmp
inc
sahf
jmp
fcomp
mov
xchg
cwde
stos
ja
fdivrp
push
mov
adc
dec
jne
dec
int
jae
loope
fsub
mov
pushf
xor
pop
into
outs
leave
fidivr
jp
and
xchg
sbb
sbb
test
dec
push
movs
add
cmp
or
nop
test
lahf
sub
adc
dec
or
rcr
inc
mov
ret
fdiv
sub
fnstsw
cdq
fucomip
or
sahf
(bad)
addr16
call
xchg
je
pop
mov
(bad)
fst
in
jno
sub
out
mov
or
pop
loope
push
pop
pop
jne
inc
sbb
add
ror
sub
xchg
cmovl
cmps
pusha
lods
mov
std
test
fadd
sbb
xor
cmp
push
xor
fsubr
adc
mov
xchg
fcmovbe
sub
inc
aam
sub
pop
std
icebp
mov
sbb
ins
fld
retf
sub
sbb
inc
push
movs
add
add
pop
(bad)
xlat
jmp
cli
xor
sub
fnstenv
pop
loopne
jmp
mov
inc
imul
jne
mov
push
push
clc
stos
push
push
cli
push
inc
pop
jge
lds
sbb
sahf
jo
cmp
mov
xor
mov
bound
dec
popa
sub
adc
leave
jo
or
push
cmovbe
mov
mov
std
push
fiadd
or
mov
push
enter
jo
xlat
sbb
jge
and
scas
inc
(bad)
test
in
retf
add
dec
xor
sbb
cmps
fcmovnbe
mov
sbb
pop
shr
sub
pop
xchg
fmul
icebp
mov
fstp
es
cmp
or
gs
movs
fidiv
sahf
sbb
cmovb
push
mov
ins
cwde
ins
leave
inc
dec
fld
out
js
mov
stos
push
jge
imul
shl
and
int3
fnstsw
call
icebp
pop
and
lock
xor
push
imul
scas
inc
test
mov
push
pop
sbb
jae
pop
fwait
push
xchg
sbb
in
pop
mov
sub
hlt
cmp
pop
or
add
scas
sbb
jg
xchg
sub
push
and
sbb
mov
inc
mov
mov
shr
lahf
mov
movs
leave
(bad)
mov
jge
push
sbb
js
jb
inc
push
adc
xchg
inc
xor
pop
icebp
fist
mov
out
inc
inc
repz
rcl
adc
and
cmp
mov
outs
repz
cmp
fcom
enter
push
aaa
shl
movs
xlat
loop
inc
xchg
inc
add
std
addr16
in
xlat
test
fild
cmp
add
xor
sub
xchg
mov
mov
xor
xchg
xchg
jge
int
inc
jno
mov
retf
stos
sbb
mov
push
or
mov
cwde
xchg
inc
mov
xchg
adc
scas
xchg
addr16
ds
loopne
sub
fild
dec
std
inc
mov
xlat
into
enter
retf
movs
idiv
clc
push
int
pushf
pusha
in
jne
xchg
fcom
mov
test
mov
inc
ret
imul
test
cmps
xchg
and
out
push
gs
mov
cdq
jge
sar
sbb
loope
inc
fimul
test
cwde
mov
repz
or
stos
xor
lock
imul
sti
dec
cmp
sbb
fbstp
fdiv
cmp
pop
lea
(bad)
std
pop
retf
xor
xchg
and
ret
mov
mov
xor
das
iret
sub
jnp
enter
(bad)
shl
fistp
pusha
add
mov
pop
xor
lds
add
mov
loop
loopne
les
jns
movs
mov
sbb
cli
or
mov
cdq
outs
scas
arpl
out
mov
(bad)
fisttp
mov
(bad)
in
xor
or
mov
sub
jno
jecxz
jmp
add
or
imul
out
fdivr
repnz
jnp
sub
and
xlat
inc
jb
sub
xchg
mov
mov
xchg
mov
adc
jp
les
adc
push
lahf
loop
data16
out
mov
add
pop
fcomp
ret
xchg
stc
mov
and
iret
popf
adc
push
retf
aam
(bad)
xlat
xchg
lea
daa
xchg
fdivr
pusha
and
call
xor
mov
mov
mov
xchg
xor
lds
ja
mov
adc
xchg
imul
rcr
rcl
mov
or
jge
sub
fsubr
or
dec
and
or
xor
inc
fs
mov
rcl
cmp
fisub
enter
sbb
stos
in
jecxz
scas
push
iret
jae
and
fcom
aas
inc
and
jge
add
outs
test
xchg
pop
push
(bad)
mov
mov
test
stos
jg
mov
leave
aaa
test
mov
jo
lds
cli
in
dec
out
jecxz
pop
(bad)
div
shl
stos
xchg
popf
or
jb
fistp
retf
or
ror
inc
and
fild
pop
(bad)
in
pop
fs
jne
loop
ds
push
out
or
sar
mov
leave
je
adc
mov
cs
arpl
or
test
js
pop
mov
xchg
add
clc
mov
(bad)
sbb
sbb
sub
sub
xor
mov
mov
pop
mov
jecxz
leave
mov
leave
jae
cmp
rol
sbb
arpl
cmp
mov
test
cli
retf
into
mov
call
repz
movs
lahf
int
(bad)
jnp
lea
(bad)
bnd
popa
mov
and
push
ja
sbb
fwait
call
sub
test
adc
in
pop
pop
dec
pop
dec
cwde
stos
mov
or
sbb
inc
mov
mov
mov
mov
sbb
(bad)
addr16
inc
and
js
retf
or
lods
cmp
mov
std
xlat
push
mov
(bad)
(bad)
pushf
fsub
sub
fldcw
retf
push
cmps
std
xchg
cmp
dec
jmp
cmp
jo
pop
xor
popf
inc
adc
popa
sub
(bad)
jo
sub
xchg
loope
add
xchg
lock
stos
jno
scas
dec
cli
scas
push
adc
pop
jbe
lock
or
aaa
mov
out
jb
mov
stc
mov
(bad)
pop
lds
out
sub
outs
lea
daa
inc
ror
test
je
xor
and
adc
xor
out
dec
xor
jns
pop
xlat
into
push
jp
test
xchg
mov
test
push
das
ja
add
jne
(bad)
hlt
aad
xchg
retf
movs
das
lds
or
inc
pop
jl
jmp
sub
add
mov
shl
inc
out
sbb
sub
js
dec
imul
push
add
dec
or
push
jns
push
mov
mov
dec
add
(bad)
and
cmp
sub
push
int
out
pushf
aad
jb
xor
sbb
xchg
xor
sbb
mov
in
jae
add
test
mov
(bad)
jl
jbe
loopne
push
js
xchg
inc
sbb
push
call
mov
inc
lods
add
add
cld
push
xchg
and
xchg
in
xor
repz
cmp
icebp
test
gs
lea
fdivr
sub
sub
push
out
sub
mov
(bad)
push
jbe
mov
fimul
out
mov
xor
inc
sti
popf
dec
pushf
xchg
adc
xchg
fild
and
sub
lock
xor
or
xchg
jo
inc
jo
pop
daa
sbb
cmp
aas
data16
adc
shr
retf
xchg
mov
cld
xchg
movs
lods
rcl
(bad)
jno
out
outs
push
or
ror
mov
pop
test
fisub
mov
dec
iret
add
sahf
cmps
pop
add
loope
push
mov
inc
pop
jl
cli
inc
xchg
dec
daa
and
and
xchg
add
xchg
sub
sub
mov
jmp
in
inc
inc
es
jecxz
cmp
cmp
bound
or
test
add
retf
sub
test
push
dec
sub
xor
mov
pop
rol
in
mov
xchg
pop
mov
inc
aas
xchg
or
fwait
dec
dec
lock
push
jg
ins
adc
add
loop
dec
nop
adc
mov
xor
adc
mov
push
iret
sub
sbb
scas
or
aam
out
scas
shl
gs
adc
aam
mov
outs
cmps
pop
adc
retf
dec
(bad)
std
cmc
push
call
xor
loopne
repnz
sbb
stc
popa
sub
aaa
repnz
inc
cmc
xchg
loope
mov
mov
pop
les
mov
push
push
arpl
push
sub
fisttp
sub
mov
cmp
cmp
mov
lea
out
out
jl
int3
inc
jle
and
leave
call
xchg
xor
mov
loope
seta
das
xchg
and
add
in
fadd
iret
or
sbb
or
push
ja
ror
pop
mov
scas
clc
pop
xchg
push
fidivr
pop
scas
lds
pop
mov
sbb
pop
add
cs
hlt
xchg
dec
shl
add
pop
mov
pop
mov
push
test
sub
jbe
ss
jno
sub
scas
out
cmc
push
repz
or
xchg
jp
fild
(bad)
ds
arpl
out
lods
dec
lods
ins
sbb
push
xchg
and
xor
and
(bad)
fstp
shl
push
ror
push
adc
or
sub
js
adc
mov
and
fiadd
xchg
out
add
jbe
jge
push
frstor
lds
inc
stos
mov
add
inc
xor
das
inc
rcr
pop
pop
or
push
jnp
movs
aaa
popa
lods
jl
ret
fisttp
movs
ret
jmp
aam
jge
push
push
inc
xchg
push
icebp
jle
mov
inc
int3
imul
test
test
add
lods
les
cmp
fidivr
dec
sub
pop
or
jmp
mov
fsub
and
mov
(bad)
repnz
out
xchg
stos
jns
inc
xor
dec
jns
pushf
pusha
cmp
cmps
push
cmp
in
cmp
mov
cpuid
mov
cli
jnp
hlt
loop
shl
or
adc
lods
ret
adc
dec
fstp
mov
add
push
or
and
int3
cs
(bad)
fmul
and
push
inc
movs
retf
ss
outs
or
adc
ror
dec
es
outs
sbb
jp
(bad)
shr
stos
lods
aaa
dec
cmp
(bad)
push
mov
dec
frstor
outs
jge
add
or
fld
mov
fiadd
ins
ror
sub
and
mov
pop
push
xchg
pop
out
pushf
push
pop
xor
push
or
lea
sbb
ret
loop
movs
mov
popf
pusha
aaa
retf
in
or
xchg
xchg
xchg
int3
jns
ds
push
ficomp
dec
mov
rol
sbb
and
or
jp
ret
dec
enter
pop
daa
pop
xchg
xor
scas
out
repnz
pop
add
cmc
mov
add
in
xor
aad
jno
xor
gs
fidiv
push
cmps
fnstcw
lods
push
test
xor
mov
cs
sub
test
pop
lds
arpl
push
jl
call
adc
mov
leave
xor
xchg
jg
pop
sub
and
ss
lods
xor
push
sti
and
repz
and
test
dec
iret
mov
inc
dec
pop
movs
es
adc
jle
popa
jecxz
push
pop
cwde
add
(bad)
mov
in
adc
mov
mov
cmp
aad
cmp
mov
cdq
push
nop
pop
popf
pop
cmp
fidivr
add
inc
mov
jno
add
dec
cli
vprotd
lahf
and
mov
push
inc
or
dec
fcmovu
leave
sbb
or
dec
cmp
xor
cmp
lods
lds
jns
mov
shl
xor
(bad)
and
and
or
shr
loopne
push
jg
inc
fstp
aad
pop
pusha
hlt
xchg
arpl
adc
in
cmp
fnstenv
adc
ja
add
mov
sahf
movs
fiadd
sub
sub
or
xor
inc
push
or
add
das
xor
and
adc
pop
add
pusha
ja
sub
(bad)
repz
sahf
(bad)
mov
xchg
cmc
adc
and
jecxz
inc
pop
mov
add
fadd
cld
fisttp
sub
or
sbb
mov
fcom
jl
push
inc
test
sti
stos
jl
push
aaa
pop
mov
jl
pop
fidiv
lock
push
dec
or
jecxz
enter
inc
mov
inc
test
or
and
cld
push
movs
daa
xchg
sbb
test
retf
shl
pop
inc
pop
jg
fmul
push
mov
repz
jmp
mov
rcr
ss
mov
add
push
std
jb
cmps
or
shr
dec
(bad)
jmp
fld
jg
jnp
cmc
cli
mov
xchg
cmp
pop
and
and
(bad)
sub
mov
sti
mov
xor
jne
cmc
test
dec
mov
cmp
test
enter
das
movs
inc
sub
outs
pop
fldenv
sti
ja
mov
or
fucomip
les
scas
mov
adc
cmp
push
cmps
cmps
inc
sar
sbb
outs
pop
aam
xchg
pop
cdq
and
sub
push
inc
mov
and
ja
jns
mov
enter
stos
out
and
jae
push
xor
adc
mov
adc
out
cdq
xor
add
cwde
pop
(bad)
sub
cmp
jnp
sbb
inc
cmp
or
sbb
or
add
push
mov
adc
sbb
loopne
not
pop
jae
add
(bad)
js
jne
mov
and
mov
int3
mov
mov
adc
jmp
lds
std
jmp
shr
inc
adc
dec
or
mov
sbb
(bad)
xchg
dec
aam
inc
sbb
nop
jns
out
inc
hlt
and
sub
imul
jmp
jl
jge
cdq
int3
aam
push
xor
ficomp
cmp
sbb
sbb
jns
adc
xchg
lahf
cdq
mov
loope
inc
pop
dec
sbb
pop
(bad)
mov
inc
es
and
xlat
cmps
call
jbe
xchg
test
cmp
inc
or
mov
ret
not
xor
xchg
(bad)
mov
leave
ret
push
cmp
(bad)
js
sub
xchg
xchg
aad
xchg
adc
aam
mov
mov
pop
lock
fucomip
push
dec
loop
ins
jl
idiv
int3
aam
xchg
rcr
inc
push
or
into
cmp
retf
stc
ss
ret
rol
add
das
cmps
and
xor
shl
mov
ins
mov
add
ror
xchg
stos
inc
dec
or
sbb
scas
es
wrmsr
mov
pop
xor
inc
pushf
xchg
pop
(bad)
(bad)
pop
cmp
icebp
adc
xchg
cmp
std
push
push
mov
push
mov
jo
aam
fs
xchg
mov
addr16
adc
jmp
sub
ret
mov
out
pop
sbb
loop
cs
dec
leave
sar
sahf
jbe
sub
fdiv
xchg
xchg
std
cmp
xor
fs
and
jo
stos
movs
rcr
ret
inc
(bad)
sbb
push
pop
gs
repz
jmp
ss
sub
in
mov
push
or
mov
cmc
imul
les
rcr
lea
div
sahf
sbb
add
in
movs
push
pushf
imul
mov
fiadd
ja
iret
ds
imul
push
test
pop
das
mov
pop
cld
sbb
cli
in
hlt
adc
push
ja
sub
mov
outs
movs
retf
sbb
xchg
inc
mov
pop
pop
add
xchg
xchg
fwait
xchg
enter
int3
xor
mov
push
add
(bad)
retf
push
cmp
push
cmp
ret
xor
ja
xchg
out
xchg
xor
fisttp
pop
clc
cmp
fdivr
xchg
jo
into
jle
enter
cld
retf
jge
bound
jmp
mov
xchg
clc
add
or
and
retf
sbb
inc
add
adc
and
adc
cmp
in
into
test
neg
dec
pushf
pushf
stos
mov
push
movs
cs
fcmovnbe
imul
test
adc
rcl
mov
adc
outs
jmp
inc
and
(bad)
adc
pusha
xor
pushf
mov
aaa
out
sahf
inc
sub
pop
call
sbb
mov
not
fs
ss
imul
jl
jno
sbb
sub
ja
ret
je
loope
cli
mov
mov
mov
cmps
iret
jbe
and
test
sub
shl
xchg
es
outs
div
movs
cs
mov
mov
not
mov
enter
ret
or
shl
repz
(bad)
fnstenv
mov
shl
retf
outs
pop
adc
inc
into
mov
cdq
xchg
in
in
sub
push
or
scas
xchg
cwde
xor
call
jmp
or
inc
xchg
sub
imul
xchg
add
inc
cdq
xchg
and
mov
shl
push
jp
lahf
jae
test
lds
mov
scas
ins
clc
jl
sahf
movs
or
cmc
mov
inc
sub
mov
test
ret
pop
loope
jno
stos
mov
mov
iret
dec
lea
and
mov
push
and
push
push
mov
shl
lahf
mov
lock
push
test
(bad)
fist
xchg
jne
daa
jmp
and
adc
call
out
sub
sub
scas
jmp
push
das
push
scas
cmp
iret
jp
sub
gs
mov
mov
inc
stos
push
iret
sbb
mov
push
movs
cs
sahf
mov
jo
retf
loop
arpl
cmp
push
movs
xor
int3
js
sar
in
pop
mov
mov
fcmovnu
xor
dec
shl
arpl
out
sbb
push
push
clc
push
sub
jmp
mov
pushf
sbb
sbb
dec
(bad)
adc
cld
mov
jg
ret
les
nop
std
(bad)
shl
fild
xchg
cdq
sub
aad
cwde
sub
cmps
sbb
fs
es
fwait
mov
push
orps
gs
jecxz
scas
or
std
retf
mov
jno
cmps
inc
adc
fist
ja
pop
ror
sub
or
test
jb
pop
cld
pushf
and
cmc
dec
lea
call
ficomp
inc
add
repz
pop
icebp
out
rcr
test
mov
stos
clc
push
fsub
es
jmp
aad
mov
mov
xchg
adc
mov
cmp
lahf
jecxz
rcl
std
mov
push
pop
push
add
push
sar
xchg
adc
mov
xor
sbb
or
sub
repz
jp
add
sub
sub
repnz
sub
test
or
movs
enter
mov
das
data16
pop
cmp
jno
cmp
dec
aam
xchg
jns
arpl
mov
xchg
movs
inc
sub
sub
pop
loopne
pop
ins
aam
fadd
in
jne
lods
ret
ja
pop
mov
push
cdq
push
mov
(bad)
ror
icebp
lods
jno
push
dec
adc
in
cmps
outs
add
test
mov
adc
inc
test
mov
or
ror
ds
mov
data16
cmp
aam
fwait
call
fs
xchg
jae
pop
inc
cmc
dec
movs
loop
in
mov
jg
push
cmp
cld
icebp
iret
js
std
push
call
add
and
push
sahf
fs
(bad)
jg
mul
pop
arpl
inc
cmp
inc
aam
int3
jbe
(bad)
pop
add
push
or
sub
xchg
aam
jmp
xor
add
mov
stc
stos
push
mov
dec
aam
jne
sub
xchg
pop
enter
add
inc
in
add
pop
ret
xchg
fistp
pop
and
add
inc
(bad)
mov
dec
stos
es
push
shl
(bad)
xchg
sbb
lods
xor
sub
jo
cmp
xchg
xlat
mov
xchg
hlt
add
adc
cmp
mov
push
mov
cmc
and
push
stos
add
inc
pop
mov
loope
icebp
arpl
imul
sbb
inc
pop
cmps
or
movs
ret
push
cmc
jae
clc
outs
and
inc
sub
sbb
and
push
loopne
popf
stc
xchg
mov
jmp
inc
xchg
fcomp
cmp
cdq
shl
cmp
cmp
lock
xchg
(bad)
pop
test
pop
sbb
daa
iret
out
xor
cdq
xchg
lds
xchg
and
adc
clc
mov
pop
enter
ss
sar
fdivr
dec
mov
popa
cmc
adc
aam
jbe
scas
test
sub
(bad)
pop
imul
adc
clc
add
es
sbb
fdiv
js
int3
(bad)
fdivr
js
cld
add
cmp
jecxz
mov
es
outs
xor
cdq
gs
js
loope
test
ja
repz
sbb
cli
fmul
popf
mov
mov
shl
cmp
dec
jecxz
sub
stos
fst
xchg
and
inc
push
jnp
dec
mov
js
sub
mov
pop
(bad)
jno
cmps
cmp
add
aaa
xchg
dec
test
adc
and
call
out
pop
outs
pop
jg
xor
repz
xchg
xor
neg
mov
aas
scas
shr
movs
inc
sub
loope
inc
in
mov
pop
mov
test
mov
or
in
ret
dec
mov
mov
or
add
xlat
dec
daa
mov
pop
loop
and
and
add
xor
jmp
loop
push
cmp
scas
add
lods
inc
mov
sub
test
jp
cmp
dec
jmp
push
mov
mov
jp
inc
xchg
cmc
mov
add
mov
mov
int
fsubr
mov
cmp
mov
jmp
push
leave
mov
in
sahf
ret
in
xchg
(bad)
pop
imul
clc
ror
push
(bad)
pop
movs
imul
push
mov
dec
xor
sub
dec
pop
(bad)
loop
ret
push
ja
scas
iret
imul
dec
and
pop
sub
mov
mov
shl
xchg
in
stos
popa
addr16
dec
std
retf
adc
nop
addr16
mov
outs
inc
mov
jns
cdq
popf
fld
pusha
xchg
lods
xor
jg
mov
cmp
outs
sbb
cdq
xchg
jns
or
add
mov
inc
daa
call
push
adc
sub
xchg
(bad)
popf
sub
mov
xor
bound
mov
ss
mov
sbb
movs
nop
inc
pushf
fidivr
gs
outs
es
adc
loope
out
mov
xchg
and
sub
movs
hlt
sub
mov
push
retf
and
fiadd
outs
je
pop
cmp
imul
mov
enter
xchg
imul
cmp
jmp
mov
jecxz
loopne
or
ja
pop
out
dec
mov
inc
mov
cs
jbe
xchg
push
test
push
pop
jge
arpl
popf
pop
es
pop
push
xchg
shl
mov
scas
jno
cmc
mov
mov
ins
jle
mov
adc
loop
pushf
loopne
shr
ins
(bad)
retf
aaa
fadd
inc
call
cdq
bound
retf
pop
lahf
jle
jecxz
push
jl
scas
nop
add
popf
mov
dec
push
lea
mov
cmps
dec
test
out
std
jle
fnstsw
aas
cmp
(bad)
cmp
inc
mov
or
mov
adc
loopne
mov
sub
hlt
cli
adc
cmp
xor
bound
jo
mov
(bad)
in
push
leave
retf
jbe
pop
cmovbe
mov
inc
sbb
pop
push
push
scas
call
xchg
outs
imul
xchg
xchg
mov
jnp
call
jbe
mov
es
sub
pop
adc
fldcw
shl
test
cmp
jae
add
popf
lahf
loopne
cmps
adc
les
les
pusha
push
inc
mov
mov
rol
shr
hlt
bound
aam
cmp
mov
lea
retf
mov
mov
xchg
sbb
and
pop
mov
sbb
call
push
or
push
jecxz
dec
out
popa
sar
ret
movs
or
(bad)
scas
in
int3
push
dec
add
ret
test
rcl
fcomp
mov
ins
nop
mov
arpl
jne
aam
arpl
fwait
iret
xchg
jnp
out
pop
sub
dec
aam
and
fidivr
leavew
ror
adc
fldcw
mov
fidivr
jmp
xor
push
arpl
imul
add
je
popf
jo
iret
jge
retf
pop
mov
cwde
retf
aam
jae
cld
(bad)
ror
xchg
push
test
test
mov
retf
popa
or
cs
movs
xchg
test
(bad)
repnz
dec
or
cld
push
or
sbb
enter
xor
popf
stos
loop
mov
loopne
and
pop
sbb
mov
clc
add
cmp
sar
mov
push
js
icebp
dec
pop
dec
rcl
push
xchg
fs
jg
dec
sbb
cmps
jb
test
inc
loope
cmps
(bad)
mov
jmp
adc
sub
xchg
jmp
sub
sub
mov
pushf
test
outs
ds
jnp
pushf
mov
ins
sub
retf
ds
test
xor
mov
inc
(bad)
cs
sbb
fucom
adc
dec
add
sti
out
xlat
test
clc
pop
mov
ret
data16
mov
sub
sub
int
sub
xor
xor
xor
add
mov
dec
jle
dec
popa
out
jnp
jecxz
adc
lds
sub
jecxz
mov
popf
sbb
out
xlat
or
mov
inc
rol
rcl
fs
je
push
shl
into
daa
and
sbb
xchg
cwde
or
out
out
jge
jge
es
stc
mov
(bad)
sbb
add
mov
xor
push
sbb
mov
out
rcr
punpckhdq
push
imul
adc
loope
and
inc
mov
xchg
xor
or
pop
stc
inc
shl
sti
int3
(bad)
rcl
push
imul
leave
xchg
call
jmp
dec
iret
aas
add
(bad)
test
aas
sbb
mov
cmc
leave
ror
xchg
mov
xor
jecxz
sbb
xor
rol
(bad)
mov
sti
push
xchg
ret
aad
ret
loop
lock
mov
imul
fsubr
mov
push
mov
cmp
cdq
sub
ror
sub
mov
(bad)
jl
xor
call
pop
push
inc
ret
pop
pushf
nop
push
jae
mov
shl
int
sub
das
mov
int3
push
pop
out
stos
sar
push
cmps
imul
dec
xchg
push
jle
mov
jnp
rol
jne
nop
and
jo
cmc
retf
jmp
adc
dec
inc
pop
shl
mov
push
imul
hlt
hlt
adc
pop
test
outs
mov
fs
mov
push
div
cmp
iret
das
mov
neg
hlt
sbb
das
pop
dec
push
jg
not
jle
push
jbe
out
rep
xor
je
test
jbe
idiv
(bad)
int3
or
dec
nop
push
loop
jb
or
jne
cli
popa
ins
add
xchg
jge
mov
call
fwait
sbb
push
pop
jns
pop
mov
arpl
push
out
xchg
add
cmp
mov
gs
(bad)
mov
shl
mov
aad
lods
cmps
out
mov
xchg
fwait
mov
jnp
fstp
test
imul
dec
xchg
cdq
fldcw
mov
push
leave
sbb
data16
push
mov
mov
(bad)
push
inc
sar
xor
ds
or
sbb
xchg
pop
(bad)
pop
int
push
das
sub
lods
mov
out
pusha
mov
cmps
adc
jmp
adc
and
dec
jl
jb
sub
add
mov
mov
mov
mov
adc
dec
mov
and
mov
in
mov
jne
push
rcr
dec
mov
lahf
jge
or
sbb
adc
popa
aad
sti
adc
jns
sub
xchg
sub
dec
fnsave
repnz
fimul
push
cmps
push
test
push
pushf
ins
sbb
nop
adc
push
push
pushf
push
test
(bad)
jne
sar
out
cmps
jb
sub
frstor
jb
sub
in
out
xchg
or
adc
xchg
sbb
cmp
add
sub
leave
ret
push
dec
loope
push
jae
mov
mov
cmc
jne
mov
sub
cmps
and
push
out
mov
out
leave
or
mov
sbb
enter
push
cmp
std
fadd
cmps
mov
imul
push
fistp
jne
cmp
rol
enter
int
xchg
(bad)
dec
xor
inc
mov
not
jnp
popf
mov
inc
xor
xchg
mov
mov
ror
stc
aam
aas
mov
adc
sbb
sub
shl
nop
push
pop
in
cmp
xor
mov
jg
ror
lock
xor
mov
ja
mov
das
and
pop
cdq
and
adc
or
fwait
div
push
and
imul
push
add
ins
les
cwde
jns
call
push
dec
jmp
sub
test
test
add
sbb
std
jae
adc
xor
cmp
repnz
fbld
stos
stos
xchg
pop
jo
lock
call
jns
dec
and
shr
sbb
ins
and
ror
cld
movs
sar
pop
mov
jge
mov
dec
mov
sbb
lods
dec
mov
xchg
inc
imul
pop
pop
xor
repnz
(bad)
add
mov
enter
nop
xchg
xchg
mov
mov
inc
mov
push
adc
mov
popf
fild
xchg
dec
pop
dec
aam
push
push
push
aaa
sub
jg
(bad)
loope
jge
pop
jg
mov
(bad)
inc
aad
shl
lds
or
push
mov
cmp
frstor
xor
scas
lds
jecxz
dec
jmp
rcl
xor
push
sub
addr16
jbe
mov
adc
fisttp
arpl
cmps
mov
inc
div
push
push
adc
cdq
jl
fnsave
stc
pop
cmp
mov
mov
hlt
call
and
(bad)
mov
mov
in
test
cmp
fild
fistp
(bad)
cld
mov
add
retf
(bad)
in
lahf
and
retf
mov
sub
clc
cmp
out
jbe
test
or
cmp
adc
cmc
jb
xchg
xchg
mov
and
cwde
pop
inc
cmp
cmps
push
shr
repz
mov
(bad)
or
add
push
cmp
and
jne
rep
loop
jmp
adc
popa
cwde
fwait
adc
push
xor
cmp
(bad)
loopne
(bad)
xchg
cmps
mov
aaa
inc
cmp
mov
push
or
inc
hlt
ss
stos
xchg
(bad)
lock
mov
adc
adc
or
mov
into
fiadd
das
pop
push
ret
or
cdq
cmp
sub
fs
sbb
cmp
add
adc
or
xor
retf
or
push
scas
aaa
adc
pop
dec
fdivr
cld
mov
movs
nop
cmp
mov
loope
cs
and
mov
in
dec
pop
sub
mov
ja
lahf
je
inc
in
inc
inc
sbb
or
fldenv
mov
iret
adc
xchg
sub
jo
cs
lds
xor
inc
outs
aaa
dec
popf
jl
cmp
and
fild
mov
or
inc
xchg
jno
(bad)
int
push
jae
jmp
adc
cmp
mov
sub
and
fs
out
xor
loop
fwait
loop
fldenv
cmp
jecxz
ffree
ja
int
addr16
inc
arpl
fcmovbe
loopne
lds
push
test
xchg
test
mov
out
idiv
daa
or
loope
xchg
push
jns
movs
jb
or
fistp
stos
daa
int3
imul
in
xchg
or
retf
outs
sub
inc
loopne
pop
out
jmp
fmul
mov
pop
push
je
cmc
inc
xchg
int
inc
add
and
cld
cdq
pop
push
call
pop
ins
pop
mov
sub
mov
movs
arpl
in
sbb
mov
mov
pop
mov
test
push
loope
or
aad
sahf
pushf
adc
addr16
mov
xor
ja
mov
cmps
scas
movs
loopne
push
jnp
cli
ja
enter
je
or
add
popf
and
add
xchg
pushf
outs
out
mov
xchg
mov
xchg
enter
aaa
je
popa
repnz
(bad)
mov
cmp
pushf
dec
add
lds
mov
push
sti
mov
push
add
jle
enter
jp
ds
inc
jbe
popf
jmp
fmulp
and
mov
cmp
sbb
icebp
or
sbb
stc
fidiv
pop
clc
sbb
sbb
pop
call
aam
add
mov
adc
nop
mov
arpl
lahf
aas
jb
retf
or
xchg
or
adc
inc
test
out
mov
faddp
dec
xchg
arpl
test
mov
jge
and
call
aas
xchg
and
inc
movs
inc
loope
jo
retf
mov
add
cdq
mov
enter
push
loop
cdq
lock
sub
mov
out
pop
sar
gs
sub
lock
cdq
aad
add
push
inc
dec
dec
push
dec
pop
adc
mov
jp
repz
aad
or
xchg
mov
add
cmp
call
cs
fld
popa
loopne
outs
test
sbb
mov
xchg
or
xor
push
and
leave
cmp
mov
add
or
or
mov
inc
adc
and
bound
fsubr
jne
and
test
hlt
fcomp
pop
add
fld
in
pop
xor
aas
sub
test
cwde
add
rcr
mov
sbb
jp
scas
mov
aad
jle
jae
fs
sub
ret
sub
mul
xchg
and
sbb
push
ret
pop
(bad)
scas
jp
push
fdiv
mov
test
inc
in
add
aad
repnz
jl
cmp
jne
cmp
mov
ud1
mov
ja
sar
inc
js
movs
sub
sbb
lods
jmp
leave
jne
push
clc
inc
inc
push
sub
xchg
fld
and
fcomp
jp
jo
ss
mov
sti
cmp
inc
ins
call
xchg
rol
in
call
or
xor
je
inc
xor
out
cwde
lds
fidivr
fistp
fild
int3
mov
mov
jg
jge
jo
mov
loopne
addr16
shl
(bad)
xchg
ins
jae
lea
xor
sub
pop
xor
lock
or
pop
add
mov
lea
inc
fist
out
ror
mov
inc
jnp
mov
xchg
shl
pop
out
mov
push
or
push
mov
xchg
pop
pop
out
test
xor
js
cmc
ret
nop
retf
cli
shr
and
ins
adc
xor
loop
jecxz
mov
cmc
je
and
call
imul
xor
iret
xchg
arpl
mov
repz
scas
aad
popa
jo
js
dec
or
inc
mov
fistp
mov
mov
cmp
dec
add
leave
sub
arpl
sbb
cmps
arpl
or
gs
inc
jmp
dec
stos
rcl
nop
or
mov
mov
push
ss
imul
xchg
inc
jae
clc
loope
push
xchg
aas
sahf
fs
pop
sahf
jp
rol
mov
sbb
or
pusha
cmp
(bad)
es
mov
xor
popa
xchg
xchg
loop
push
lds
test
xor
ja
inc
xchg
test
cmc
sbb
pop
out
pushf
or
ja
cmps
jbe
dec
popf
ins
mov
imul
jb
(bad)
xchg
sub
and
mov
mov
out
daa
pop
repz
mov
adc
cld
sti
dec
inc
shl
ret
xchg
jno
cmp
nop
jle
ds
mov
in
mov
lea
push
and
icebp
pushf
aad
mov
shl
aam
sub
into
add
popf
mov
add
sub
and
or
arpl
xchg
dec
push
rcl
test
xor
and
inc
test
and
ins
das
xchg
jl
pusha
xor
inc
inc
push
movs
lock
push
fild
lock
(bad)
cmp
ret
mov
push
mov
jne
int
push
sbb
ins
ss
add
cmp
and
out
les
stc
jmp
push
adc
loope
mov
push
aam
xchg
les
int3
pop
cmps
sub
inc
int
sahf
icebp
std
xor
sar
ins
xor
or
and
sbb
shl
sbb
sub
hlt
outs
pop
add
mov
mov
mov
adc
test
pop
stos
adc
into
or
xchg
(bad)
inc
arpl
xchg
inc
mov
mov
jbe
sbb
iret
or
mov
pop
daa
xlat
faddp
mov
repz
fmul
sbb
dec
and
cli
pop
test
and
lahf
pop
aaa
push
sti
pop
push
in
cmp
aam
int3
sbb
cld
scas
in
ret
sub
shl
stc
push
dec
mov
mov
outs
xor
out
scas
sbb
cwde
push
xchg
ss
dec
mov
stos
rol
inc
cmp
ret
data16
dec
push
clc
jno
or
sbb
sub
jecxz
sub
mov
cmp
into
arpl
je
mov
and
mov
inc
pop
lods
jne
mov
xchg
inc
and
cs
out
aaa
push
dec
mov
jno
xchg
inc
fsubr
in
mov
leave
(bad)
in
dec
leave
(bad)
xchg
sbb
pop
fcomp
std
jl
xchg
jl
frstor
pop
xchg
sahf
int
lahf
std
cmc
mov
pop
mov
inc
ja
daa
hlt
loope
shl
dec
inc
jge
ins
jle
xchg
(bad)
outs
mov
arpl
mov
inc
add
cmp
ss
ret
jno
add
cmp
into
mov
push
xchg
cmp
out
lock
pop
inc
jle
cmp
test
neg
mov
aad
sbb
push
adc
sahf
cmp
ins
push
and
(bad)
rcl
out
xor
xor
les
aam
inc
mov
mov
jmp
call
(bad)
rol
push
jo
pop
cld
call
or
call
in
jb
xchg
push
or
push
ins
jge
jge
mov
cli
fwait
push
cmps
arpl
sbb
dec
nop
stos
movs
movs
outs
jae
outs
scas
lods
scas
(bad)
mov
das
aad
into
fst
ss
iret
scas
mov
push
stc
test
int
push
cmc
dec
mov
nop
or
jmp
dec
pop
push
jb
movs
jns
or
jno
test
sar
test
dec
shr
lds
dec
ficom
mov
jl
mov
int3
clc
dec
sbb
and
lods
jmp
xchg
push
test
adc
outs
lds
dec
arpl
mov
bound
or
stc
jmp
xlat
push
(bad)
sahf
inc
mov
or
adc
push
ss
ror
aas
pop
adc
jb
popf
arpl
sub
inc
inc
push
fwait
and
mov
or
inc
adc
xor
inc
hlt
aam
mov
out
scas
popf
sbb
xchg
mov
adc
clc
std
xlat
pusha
movs
mov
cmp
push
sbb
cmps
mov
push
stos
pushf
xchg
ror
add
xchg
sub
in
lahf
xchg
push
fisttp
add
sbb
mov
mov
fwait
mov
xlat
ss
mov
inc
add
stos
outs
jb
jne
popf
pop
cmps
repz
dec
fs
dec
dec
jg
cmp
daa
enter
scas
add
shl
jmp
push
add
push
adc
mov
es
mov
gs
mov
sti
pushf
maxps
adc
shl
es
cmp
ret
test
sbb
gs
enter
outs
lods
push
nop
pushf
test
shr
fbstp
sbb
adc
jmp
xchg
dec
push
lds
movs
into
sbb
fidiv
add
dec
mov
add
ror
adc
sti
push
dec
mov
add
jecxz
repz
cmps
dec
pop
call
bound
and
cvtdq2ps
repz
ret
arpl
xor
dec
pop
pop
sub
mov
mov
loop
rcr
cli
cmp
jmp
bound
mov
mov
mov
sar
xor
mov
(bad)
lahf
xlat
test
cmps
sub
jbe
dec
xchg
or
xor
and
into
inc
push
rcl
jo
ins
cli
out
jae
add
xchg
pusha
fs
xchg
cmps
and
inc
push
ret
sub
jae
fstp
xchg
lock
push
add
push
in
shl
pop
movaps
fidiv
dec
push
xchg
vpunpckhbw
fmul
adc
xor
push
inc
and
or
out
xchg
js
dec
aam
xchg
push
cdq
icebp
mov
or
loopne
sti
mov
jl
test
and
jmp
jo
push
xchg
or
scas
push
(bad)
and
test
push
mov
rcr
inc
fstp
add
(bad)
mov
stos
sbb
idiv
and
jecxz
lods
aam
push
shr
retf
(bad)
(bad)
jle
stos
mov
dec
movs
adc
dec
dec
jae
dec
repz
mov
data16
xchg
push
aas
inc
lds
jle
push
cmp
pop
pushf
sub
cmp
mov
mov
mov
js
mov
or
jbe
out
pop
dec
js
outs
sbb
aad
ret
and
push
leave
call
bound
pop
add
fild
daa
pop
jb
sbb
mov
cmp
cmp
sub
mov
repz
pop
inc
cld
push
jo
in
mov
add
mov
(bad)
es
dec
loopne
mul
loope
hlt
in
mov
ror
cmp
mov
cmp
mov
adc
jl
cmp
(bad)
dec
popf
add
in
in
push
push
(bad)
cmp
pop
call
mov
mov
iret
aad
push
push
adc
sub
sbb
jns
mov
pop
xchg
popf
int3
cmps
loope
js
outs
pop
dec
xor
push
(bad)
ror
adc
pop
in
fdivp
cmp
clc
mov
push
mov
sbb
outs
aaa
scas
lahf
dec
cmps
mov
push
sbb
sbb
mov
cmp
jp
dec
es
and
add
mov
sub
fld
das
js
sbb
test
mov
in
adc
gs
loope
pop
sti
mov
cmps
sbb
cli
shl
(bad)
inc
rol
int3
inc
(bad)
idiv
mov
out
sahf
jbe
aas
cli
popa
xor
adc
sbb
out
inc
cs
dec
je
push
xor
(bad)
push
mov
adc
in
lods
daa
sub
dec
cwde
outs
gs
gs
popf
jnp
retf
sub
ja
or
imul
aaa
arpl
pop
adc
in
movs
add
out
js
out
cwde
aas
lea
es
adc
and
sub
xchg
push
mov
xchg
fsubr
sti
dec
mov
fs
leave
pop
retf
pop
hlt
push
pop
stos
scas
pop
push
mov
adc
xor
fcmovne
jp
movs
cmp
and
and
dec
sub
add
xchg
dec
movs
mov
jecxz
imul
push
stos
and
js
mov
ss
jb
mov
mov
mov
dec
inc
pop
jmp
lea
les
out
push
(bad)
fisttp
adc
dec
push
sbb
ret
fdivr
xor
mov
push
sbb
(bad)
cld
inc
hlt
call
out
xor
cmps
jne
shl
call
in
push
add
int3
jae
inc
pop
jmp
xor
or
mov
lock
xchg
dec
pop
pushf
or
xlat
mov
fst
loop
js
sub
popf
test
fwait
mov
push
iret
cmps
mov
mov
inc
jl
or
adc
mov
pop
adc
and
cmp
adc
mov
or
and
push
icebp
sbb
cdq
dec
jo
or
inc
fiadd
fs
mov
xchg
loopne
add
dec
push
int
cmp
cmp
in
scas
stos
arpl
stos
adc
ficomp
pop
sbb
push
data16
loope
imul
push
sbb
(bad)
xchg
cmc
loope
and
cmps
fs
das
mov
ja
aaa
push
or
and
sub
mov
daa
(bad)
jmp
xchg
mov
jecxz
xor
(bad)
push
inc
cmp
movs
shr
add
mov
cdq
or
and
push
pop
push
mov
mov
adc
std
repz
inc
ret
xchg
mov
cmp
test
scas
sub
inc
jo
xchg
sub
inc
fidivr
in
dec
dec
dec
inc
je
adc
and
mov
dec
pop
add
scas
movs
sahf
xor
sbb
cmps
mov
out
stc
imul
test
mov
lods
fstp
mov
in
fld
loopne
sub
sub
loope
test
fistp
(bad)
pop
jae
xchg
push
sub
arpl
sbb
xlat
sbb
fimul
movs
pop
ins
ret
test
adc
mov
mov
xor
or
ror
add
sbb
dec
stos
xchg
sbb
sub
imul
pop
mov
in
in
shl
pop
ss
mov
and
ss
mov
mov
aaa
in
pop
loope
(bad)
icebp
and
push
pop
in
jbe
(bad)
bound
fcomp
sub
sub
xor
mov
add
or
mov
js
mov
mov
cmp
dec
pop
push
data16
test
fadd
cmp
mov
cmp
adc
in
aad
and
xchg
mov
pop
mov
fst
and
(bad)
jmp
inc
movs
pop
aas
(bad)
mov
movs
dec
arpl
jmp
or
cmps
out
ds
(bad)
mov
adc
cmp
add
or
mov
icebp
(bad)
jno
mov
sub
adc
ins
xor
daa
or
fidivr
fwait
and
push
ret
into
iret
jae
in
int3
sbb
sub
mov
rcr
test
sbb
fs
jmp
in
lea
fcmovnu
sub
fidivr
cmp
sbb
lock
adc
jp
es
add
ds
in
bts
xchg
in
and
in
and
adc
mov
mov
cmc
and
sbb
outs
repz
pop
jg
inc
push
inc
xor
stos
xchg
mov
pop
push
xor
scas
pop
test
inc
mov
xor
add
adc
push
les
inc
into
push
(bad)
push
dec
das
xchg
pop
push
mov
cmp
push
cmc
fwait
repnz
adc
fcomp
iret
ret
jns
xlat
mov
sub
or
add
xchg
mov
and
add
aas
test
mov
jae
loopne
xchg
test
mov
push
adc
or
aaa
mov
add
jo
(bad)
and
inc
(bad)
xchg
int3
test
call
dec
lahf
call
fild
shl
jmp
nop
jg
out
sbb
push
add
cmp
int
outs
sub
fisubr
sbb
loopne
test
inc
fsubr
or
pop
and
push
jecxz
inc
inc
or
fisubr
fdivr
aad
inc
fcom
outs
cli
sub
push
arpl
add
xchg
mov
shl
inc
sub
movs
loop
jp
sbb
xchg
mov
fisttp
std
mov
dec
push
jp
pop
mov
or
mov
sbb
or
cwde
mov
leave
(bad)
lss
push
outs
ret
or
pop
cmp
movs
nop
neg
xchg
pop
pop
and
sbb
lea
leave
mov
jecxz
cwde
fisub
inc
scas
or
add
fnstcw
sub
push
stos
sbb
mov
test
sbb
mov
shl
push
mov
or
pop
sub
fwait
mov
iret
sbb
dec
(bad)
in
ds
add
into
sub
push
ins
mov
add
gs
ins
(bad)
es
sub
lods
fmul
xchg
pop
xor
xor
inc
mov
popa
mov
or
mov
add
sub
mov
add
fldcw
es
push
loop
cmps
or
clc
mov
(bad)
adc
ins
inc
xlat
push
cmp
and
retf
adc
adc
mov
jnp
callw
call
pop
ja
inc
push
jno
fs
push
push
mov
cmp
into
mov
mov
aaa
mov
daa
dec
fs
std
inc
mov
out
pop
pushf
ins
pop
out
mov
xor
and
jmp
leave
fwait
sub
jmp
call
jns
sbb
mov
xor
in
mov
add
les
mov
rol
pop
mov
pop
push
loope
aam
mov
mov
mov
and
jmp
pop
rcr
mov
retf
sub
push
leave
mov
add
and
hlt
sbb
enter
adc
(bad)
loop
pop
ficomp
in
jb
pop
adc
fnsave
xchg
pushf
dec
sbb
xor
inc
mov
fbld
arpl
or
scas
jmp
jae
push
sub
inc
inc
xchg
das
cli
stc
inc
iret
xchg
retf
push
push
pop
cmp
stos
or
push
adc
inc
mov
and
out
out
sbb
out
mov
cmps
sbb
dec
mov
sbb
jae
mov
jp
fild
jmp
std
jle
aam
inc
dec
add
mov
inc
outs
push
sti
stos
ficomp
clc
mov
sbb
shl
nop
test
ds
jg
sbb
add
js
repz
movs
test
ins
popa
mov
add
mov
pushf
shl
lea
cmp
pop
sbb
rcr
push
aaa
mov
mov
call
in
sub
out
cli
cmp
adc
rcr
stos
sbb
stc
adc
aad
dec
push
ds
push
sub
and
jbe
xchg
mov
mov
fistp
shl
das
dec
es
xor
cld
sbb
imul
xchg
sbb
xchg
xor
ror
cld
or
push
loope
add
retf
adc
or
inc
out
xchg
ins
sar
push
sahf
mov
jge
scas
mov
xor
cmps
iret
add
popa
mov
cmp
mov
lods
and
mov
in
popa
mov
jno
cmp
bound
sub
nop
rcr
jnp
xchg
loop
adc
sbb
ins
mov
stos
pop
shl
repnz
inc
jb
mov
dec
mov
add
(bad)
jmp
pop
movs
(bad)
fsub
(bad)
hlt
mov
shl
(bad)
cmp
jecxz
mov
fldcw
pop
mov
xor
xor
repnz
xchg
addr16
sahf
xchg
loope
push
dec
add
cmc
lds
xor
repz
fisub
xor
cmp
fisttp
out
cmps
jb
pop
aad
jo
ss
xchg
ins
(bad)
outs
xchg
aad
in
jns
push
pop
shl
es
cli
ficomp
jge
neg
ja
rol
int3
fistp
iret
inc
dec
cmp
lock
sbb
push
or
aaa
cwde
outs
ss
test
lods
and
retf
jp
mov
cld
movs
xchg
xchg
pop
mov
xor
rol
pop
jle
jmp
retf
out
xor
les
mov
jae
mov
aas
xor
cdq
es
or
mov
rol
sbb
cdq
gs
or
out
sub
add
in
movs
fld
and
fmul
out
inc
mov
outs
pop
ret
sar
cli
jmp
in
mov
and
popa
inc
pop
das
lods
test
mov
pop
pusha
pop
lock
sbb
cmp
neg
adc
icebp
dec
(bad)
xor
call
fs
imul
push
mov
push
retf
out
rcl
mov
cmp
sti
out
mov
and
or
les
loope
pop
mov
add
pop
ins
dec
cmp
aaa
(bad)
nop
ins
xor
int
ror
xchg
xlat
jge
mov
pop
push
imul
int
xlat
or
out
fisubr
mov
popa
hlt
pop
stc
call
repnz
out
add
sti
cs
ret
jnp
dec
in
stos
mov
xor
ret
xchg
fdiv
xlat
outs
add
mov
repz
nop
xor
push
dec
inc
icebp
inc
stc
sti
in
js
adc
outs
(bad)
int
mov
mov
cmp
jmp
and
inc
dec
repz
stos
or
sub
ja
jmp
iret
in
push
rcr
jae
fxch
jbe
pop
add
loopne
lds
in
mov
sbb
div
(bad)
loop
cwde
and
pop
jge
add
adc
cli
mov
ja
sub
sbb
loop
into
addr16
imul
add
cs
test
fistp
pop
inc
inc
pop
mov
cmp
ins
jo
(bad)
jg
fsubr
(bad)
cmc
aad
lods
pop
out
sbb
into
add
fist
jns
sub
mov
and
fwait
dec
jl
das
mov
fnstcw
pop
data16
sub
cmp
loop
sbb
in
in
push
mov
adc
stos
pop
sbb
ja
enter
mov
mov
add
loop
cmp
ror
bound
repz
ret
mov
nop
push
push
cs
(bad)
sbb
jmp
xor
adc
mov
into
loope
sub
dec
jae
iret
mov
mov
sub
push
aad
mov
cmp
mov
lahf
sbb
pop
sbb
sub
fst
cmp
dec
push
cwde
lahf
adc
addr16
cmp
mov
inc
iret
outs
arpl
mov
mov
push
or
cld
int
mov
adc
test
add
out
adc
cwde
fcomp
xor
or
cmc
jmp
movnti
adc
cmp
cmp
sbb
cmp
xor
(bad)
ficomp
mov
or
fcomip
pop
push
int3
mov
cmps
shr
add
mov
mov
inc
adc
lahf
test
mov
jg
push
xchg
mov
pusha
adc
jl
adc
xchg
adc
fsubr
xlat
lods
test
xchg
daa
xor
dec
fwait
push
add
sub
test
cmps
xor
xor
not
popa
jle
sbb
addr16
xor
in
and
inc
xchg
(bad)
cmp
jbe
shr
outs
add
mov
sub
inc
mov
fist
out
or
hlt
push
shl
ss
jp
jl
test
jecxz
xor
xchg
push
loope
outs
pop
ds
cmps
xchg
retf
push
xchg
xchg
mov
sub
xor
mov
ret
in
loop
xchg
dec
xor
jnp
dec
pusha
jnp
xor
jnp
pop
std
ins
add
jne
mov
repnz
mov
sbb
mov
jecxz
imul
and
into
push
mov
inc
add
push
enter
xchg
ja
movs
fnstenv
retf
jnp
add
ret
cmps
fdivr
add
push
repz
dec
sub
mov
push
bound
mov
frstor
pusha
aam
ss
add
fimul
add
lods
stos
pushf
mov
jle
fmul
adc
push
ins
or
mov
std
mov
call
push
sbb
cmp
mov
and
test
inc
mov
aad
jbe
mov
adc
cs
pushf
dec
mov
mov
enter
cmps
test
sbb
shl
(bad)
cmps
clc
sub
sbb
cmp
mov
push
lods
iret
sar
gs
xchg
std
jg
(bad)
out
mov
test
jb
cmp
pop
push
(bad)
ror
je
and
mov
dec
imul
jl
jno
jmp
aad
out
mov
fisub
mov
jp
add
lods
jge
daa
es
enter
cmp
cmp
xchg
dec
gs
lock
pop
bound
jbe
push
sbb
jne
or
push
movs
fiadd
jno
call
fstp
jo
gs
fiadd
xor
stos
dec
loopne
fsub
pop
repnz
sahf
out
inc
mov
push
cmps
mov
jge
mov
sub
adc
ret
icebp
adc
xchg
and
in
adc
arpl
and
(bad)
aad
fidivr
repz
cwde
lds
ret
mov
nop
inc
outs
mov
pop
movs
arpl
iret
repnz
arpl
hlt
cmps
mov
sub
jp
fs
cmp
cwde
(bad)
(bad)
jae
daa
add
in
mov
jb
sbb
call
cld
cmp
repz
fnstenv
jg
push
int3
lods
leave
pushf
call
out
(bad)
push
jne
lea
mov
aam
out
icebp
and
xchg
nop
scas
pop
jmp
mov
mov
and
xchg
outs
sar
hlt
xor
aam
jg
mov
mov
aam
ins
add
shl
stos
push
fld
aas
jae
jle
dec
mov
(bad)
dec
jmp
mov
mov
test
and
xor
jns
scas
xor
mov
sub
push
and
into
push
pop
jne
loop
jns
out
mov
add
jle
popf
test
sbb
fdiv
dec
mov
xor
int3
aad
ret
call
cli
inc
fcom
bound
sub
push
mov
and
lahf
sbb
pop
mov
movs
dec
dec
ds
aaa
dec
push
gs
(bad)
in
rol
xor
arpl
retf
adc
mov
inc
fmul
ss
dec
xor
popf
xchg
push
mov
jmp
aas
push
xor
mov
sbb
push
clc
pop
call
jo
nop
in
jmp
jecxz
sbb
sbb
lods
push
cs
cmp
repz
leave
(bad)
mov
les
call
repnz
das
jns
daa
rol
mov
mov
xor
mov
mov
jge
cmps
fs
inc
outs
dec
fiadd
into
mov
xchg
push
ret
sbb
pusha
mov
xlat
xor
pop
cs
jae
cmp
and
loopne
es
inc
push
mov
enter
(bad)
xchg
cs
bnd
mov
inc
call
movs
xchg
add
dec
inc
loope
fmul
mov
daa
and
cdq
lods
fdecstp
pop
dec
ror
sub
xor
or
data16
popa
jnp
stos
push
aaa
imul
and
cmps
in
push
jp
sbb
inc
cmps
jle
jecxz
mov
sti
out
inc
in
add
repnz
retf
dec
and
loopne
adc
dec
sub
mov
(bad)
sbb
aad
sbb
jnp
jge
sub
or
loop
call
in
fcmovu
scas
das
pushf
xchg
mov
mov
ins
outs
add
and
or
xchg
add
frstor
xchg
fsubr
inc
pop
aam
test
lods
(bad)
mov
pop
jmp
sbb
mov
or
mov
dec
inc
mov
mov
(bad)
(bad)
adc
hlt
push
jns
pminub
aas
adc
pusha
sbb
ret
(bad)
ds
std
out
adc
add
add
mov
inc
xchg
outs
shr
jbe
cmp
inc
rol
repz
inc
out
mov
and
inc
mov
jle
jne
push
js
arpl
sub
sbb
sbb
push
out
int
jae
pop
cmp
sbb
mov
inc
adc
nop
stc
stc
jbe
div
lock
or
mov
mov
mov
mov
xor
mov
adc
les
mov
push
sub
movs
or
cwde
bswap
sub
jae
dec
pushf
pop
aad
lds
cmps
hlt
repnz
in
leave
push
xchg
and
test
in
int3
enter
sub
and
leave
dec
in
mov
and
movs
imul
ds
push
sub
sub
add
imul
mov
cmps
sbb
(bad)
fadd
in
in
jns
repnz
loop
movs
pop
jp
adc
add
xchg
add
lods
pushf
icebp
lea
xchg
adc
push
ss
(bad)
and
call
push
and
loopne
aad
and
ins
sub
push
nop
(bad)
inc
lea
clc
mov
cmp
xor
jb
push
repnz
in
push
jmp
add
mov
sbb
fdiv
or
cmp
sub
sub
fild
test
sbb
cmp
inc
jp
sub
xor
sbb
imul
outs
rcl
(bad)
push
or
sbb
inc
or
xchg
mov
jecxz
aad
jmp
mov
(bad)
cmp
scas
mov
push
adc
push
jmp
stos
add
sbb
mov
(bad)
ss
dec
cmp
xor
call
pop
pusha
push
xor
mov
mov
adc
push
mov
xchg
mov
and
fyl2xp1
loopne
data16
stos
add
ror
jmp
test
add
into
inc
addr16
push
cmp
mov
daa
jmp
lods
std
dec
inc
fcom
inc
arpl
ret
outs
push
iret
xchg
xor
push
into
or
and
mov
sub
ja
mov
icebp
mov
adc
mov
mov
mov
test
lods
rol
dec
mov
pop
and
movs
mov
loopne
add
nop
jecxz
push
fcomp
mov
xchg
je
mov
lods
fs
xchg
(bad)
pop
neg
mov
adc
pushf
inc
loope
dec
aam
mov
nop
cmps
mov
fiadd
push
outs
and
adc
sub
test
mov
inc
(bad)
sub
push
pop
(bad)
xchg
mov
mov
jle
scas
inc
xor
cmc
cmp
scas
mov
rcr
mov
fistp
loope
mov
fidiv
shl
in
scas
test
(bad)
dec
adc
cmps
xchg
shl
idiv
repz
retf
add
xor
ret
mov
int3
push
in
ficomp
cmp
and
(bad)
dec
xor
mov
pop
mov
aaa
ja
or
mov
push
fst
xlat
js
adc
cmps
adc
adc
add
xor
idiv
sub
push
push
dec
jle
stos
xor
rol
ret
push
pop
outs
mov
mov
xchg
les
adc
cmps
cmps
movlps
mov
pop
inc
jmp
sbb
adc
dec
push
jmp
sbb
mov
sub
add
or
(bad)
jns
pop
push
dec
loop
scas
enter
lock
cmp
out
shr
mov
aaa
dec
dec
dec
jp
loop
mov
fimul
adc
push
xchg
ins
add
sub
shl
inc
jg
ror
rol
mov
or
cmp
jmp
aas
int3
sub
ja
ja
mov
inc
inc
out
xchg
xchg
and
xor
jo
test
outs
xor
or
out
pop
xchg
inc
ins
pop
adc
hlt
or
or
or
and
stos
adc
out
cmps
xor
sbb
add
dec
outs
cmp
test
loope
pop
test
dec
add
pop
aad
aam
jne
retf
cwde
add
rcr
popa
and
lock
or
jo
rcl
sahf
push
in
popf
mov
scas
test
pop
inc
push
sbb
mov
adc
adc
fwait
add
xchg
jae
movs
imul
inc
aaa
aam
sub
jl
sbb
xchg
ss
adc
inc
cmps
inc
ret
cmp
cmp
sub
rcl
pop
push
adc
mov
or
mov
jno
and
pop
push
sub
push
push
sbb
idiv
scas
cmp
clc
call
addr16
div
frstor
add
aas
icebp
pop
jge
mov
pop
cwde
xchg
cmp
pop
repnz
cmp
ss
fisubr
mov
scas
into
adc
iret
loop
inc
fstp
mov
push
and
dec
xchg
adc
ret
in
mov
push
mov
fmul
sahf
mov
sbb
push
pop
add
int
cmp
xchg
popa
mov
scas
retf
lods
scas
enter
retf
push
retf
sub
out
xor
ror
inc
push
xor
cmp
and
lea
sti
xchg
xor
(bad)
retf
push
rol
cmp
and
mov
jo
jmp
push
leave
ss
lods
push
dec
shl
ins
or
add
adc
(bad)
icebp
cmp
jge
xor
and
jnp
sti
dec
pop
lahf
dec
jno
mov
sbb
hlt
push
xor
sub
stos
xor
dec
pop
push
loope
stos
loopne
clc
push
shl
cmp
test
aaa
lods
out
ins
js
mov
pushf
cwde
cwde
and
add
aad
hlt
add
cmps
jecxz
push
xchg
(bad)
jmp
retf
pop
and
cmc
jae
clc
outs
ret
cmps
jecxz
adc
ins
repnz
shl
in
std
inc
dec
retf
loopne
sbb
pop
pop
hlt
int3
xlat
sub
cmp
pop
nop
mov
neg
xor
xor
sub
lds
mov
adc
lahf
mov
loop
dec
popa
inc
dec
sbb
scas
inc
mov
icebp
in
inc
loop
std
dec
cld
shl
ficom
or
sbb
ret
dec
aaa
ins
test
push
dec
mov
imul
test
fdiv
xchg
push
and
clc
inc
or
or
aad
add
sub
aam
data16
push
cdq
sub
sub
movs
out
test
movs
mov
cdq
cdq
dec
hlt
mov
clc
mov
arpl
dec
fs
mov
mov
addr16
clc
test
int
out
ror
sbb
inc
sub
imul
call
jmp
push
adc
test
or
mov
(bad)
imul
ret
outs
push
int3
aas
mov
xchg
dec
dec
es
pop
imul
cmp
add
adc
cmp
adc
pop
jbe
into
fild
ins
dec
mov
mov
mov
or
or
pop
imul
into
daa
or
jecxz
sub
or
cwde
mov
xchg
sar
pop
sbb
mov
pop
(bad)
jae
xor
enter
int3
and
lods
pushf
movs
movs
mov
xor
out
leave
add
ja
adc
or
cdq
int
xchg
mov
pop
inc
ret
dec
icebp
pop
xchg
push
sub
mov
sub
sti
cwde
pop
jne
cmps
adc
mov
adc
clc
sub
adc
popf
sbb
test
je
cmp
sub
test
je
fdivp
fisubr
inc
cmp
sub
fmul
jnp
fdiv
shl
ja
dec
gs
push
frstor
mov
fsub
iret
cmc
ret
ror
sahf
dec
rcl
jmp
add
xor
push
pop
cld
push
push
pushf
(bad)
div
ret
adc
mov
imul
push
pusha
mov
imul
out
rcl
into
mov
adc
retf
sub
jge
iret
mov
xor
mov
add
xchg
fwait
jae
xor
cmp
push
shl
pop
stos
xchg
mov
adc
lods
xor
scas
ins
xor
pushf
call
(bad)
xchg
in
scas
das
cmp
lods
retf
shr
pop
movs
jae
aad
icebp
lahf
xchg
and
js
inc
cs
popf
add
fwait
dec
out
in
les
jmp
inc
cmps
pop
mov
into
push
data16
pop
js
and
mov
or
enter
inc
adc
cmp
sub
push
add
sar
pop
sub
xor
mov
js
(bad)
out
ficomp
jae
pop
mov
mov
test
mov
xor
(bad)
loope
xlat
mov
jp
ficom
adc
inc
mov
call
inc
cld
jge
aaa
ins
mov
lods
popa
aas
xchg
xchg
fdivr
lock
mov
ror
mov
or
adc
pop
sub
and
mov
stc
and
pop
push
push
cwde
in
out
cmp
adc
bnd
and
imul
cmc
cmp
mov
hlt
dec
loop
shl
dec
jp
jne
mov
xchg
mov
(bad)
fistp
loope
sbb
mov
cmp
sub
sub
sub
sar
fstp
jl
test
mov
jb
jo
(bad)
cmp
add
mov
sbb
js
fist
mov
loope
ins
dec
jbe
int
and
arpl
mov
adc
mov
or
push
add
push
mov
iret
dec
and
add
retf
sub
iret
dec
inc
addps
js
ds
outs
mov
jmp
add
mov
out
dec
pop
inc
add
and
lods
or
sbb
test
arpl
stos
popa
retf
test
mov
mov
arpl
adc
sbb
mov
lods
sbb
and
xor
add
push
sub
xchg
scas
dec
push
mov
iret
dec
je
ret
jg
sbb
push
mov
sbb
and
jg
leave
pop
xor
inc
sbb
popf
out
adc
lods
or
cmps
pop
stc
cmp
nop
jo
std
xchg
clc
mov
in
test
test
sbb
fmul
jns
adc
cmp
and
pop
inc
xchg
sahf
sub
(bad)
cwde
push
and
out
shl
push
movs
xchg
ficom
push
ss
mov
add
xchg
aaa
fcomp
in
push
fld
vpmaxub
jne
fisub
push
lods
(bad)
and
aas
popa
mov
mov
mov
cmp
and
mov
inc
fdivr
test
xchg
dec
mov
les
and
pusha
cdq
in
cmp
cmp
xchg
scas
or
stc
aas
xor
xor
xchg
cmp
xchg
mov
mov
sbb
aaa
fist
gs
adc
fcmovu
mov
mov
mov
stos
mov
sbb
fcom
jecxz
sbb
sub
push
xchg
cmp
pushf
or
jae
mov
push
movs
add
call
stos
xchg
(bad)
mov
call
call
fistp
test
retf
jmp
mov
and
mov
daa
cwde
sub
movs
scas
cmps
inc
mov
out
ss
adc
scas
sub
rol
mov
xchg
int
mov
xchg
inc
test
loope
test
and
lds
push
shl
add
bound
pop
sbb
sbb
sahf
test
sub
(bad)
dec
jmp
retf
fcmovbe
call
adc
fld
lock
sub
mov
in
adc
stos
call
and
hlt
je
add
cmp
aaa
mov
gs
sbb
mov
jne
in
cdq
lods
div
sti
cmp
push
xor
int
mov
fsub
xchg
(bad)
mov
sar
add
ret
sub
nop
ret
add
aaa
mov
sub
pop
pop
jne
mov
push
neg
lea
adc
adc
mov
gs
push
xchg
ror
push
push
xchg
ja
and
push
pop
mov
rcr
mov
cmp
enter
push
arpl
gs
jnp
and
lahf
or
jo
cwde
shr
(bad)
in
iret
rcr
push
dec
push
sub
rol
dec
sbb
sbb
repnz
push
fwait
fs
movs
mov
push
mov
out
mov
sbb
repz
or
add
mov
adc
aaa
ret
sbb
pusha
bound
sub
xchg
mov
inc
lahf
mov
or
mov
(bad)
xchg
add
repnz
fwait
movs
into
lods
in
sbb
sti
sbb
test
cmp
shl
cmp
sbb
mov
clc
jno
into
(bad)
fst
add
adc
shl
cli
mov
dec
and
add
fwait
popf
ins
xchg
repnz
ret
inc
arpl
pop
fsubrp
outs
repz
adc
movs
sub
aas
cmp
and
push
inc
lds
dec
pushf
mov
push
jecxz
into
xor
test
add
(bad)
mov
mov
cdq
push
sub
push
xchg
jbe
cmp
jno
rcr
push
test
(bad)
dec
lds
or
xor
mov
inc
mov
test
call
jo
dec
in
scas
outs
add
ins
pop
cmc
xlat
inc
retf
mov
stos
subps
mov
mov
js
inc
push
jae
es
mov
or
or
dec
ja
adc
jbe
imul
js
arpl
(bad)
retf
(bad)
fsub
es
(bad)
scas
outs
dec
outs
repnz
xor
xchg
sub
adc
out
rol
out
test
out
push
or
fwait
and
data16
jecxz
popf
iret
push
loope
push
mov
or
and
mov
mov
pop
mov
jne
xchg
sbb
stc
push
mov
aaa
inc
mov
cmp
jnp
add
stc
xchg
test
inc
mov
xor
jp
jne
aaa
lahf
rcr
nop
xor
jns
mov
hlt
pop
movs
into
xor
jb
cmp
sar
mov
mov
jge
inc
inc
pop
pop
xlat
test
push
pop
outs
dec
inc
not
cmovle
push
fsubp
les
push
mov
push
cli
mov
jbe
xor
and
jmp
rcl
daa
jmp
mov
or
pushf
je
(bad)
cmp
dec
cmc
cs
fiadd
add
mov
movs
je
hlt
jge
cmp
or
movs
jbe
mov
cli
jecxz
ftst
adc
jl
movs
push
mov
es
inc
imul
sub
add
popa
retf
scas
fisubr
sub
sbb
ins
and
or
cmp
out
or
push
add
adc
sub
lea
int3
jb
icebp
cmp
and
cmp
adc
ja
jl
add
mov
and
imul
lods
lods
test
cdq
pop
stos
ret
sti
out
sti
mov
pop
not
fcmovnbe
sti
add
test
mov
out
cmp
pop
fs
shl
stos
jmp
push
adc
fdiv
fs
ret
(bad)
popf
mov
dec
lock
xchg
stos
out
ds
jbe
push
cdq
xlat
xchg
or
mov
sbb
cs
sbb
mov
xor
cmp
inc
fldenv
enter
or
das
cld
cdq
pop
rcl
cli
fild
(bad)
out
push
sbb
stc
aam
(bad)
inc
mov
jg
ret
ins
mov
pop
iret
imul
inc
jg
(bad)
sub
int
retf
xchg
movs
mov
xor
mov
jl
xchg
loop
dec
adc
ret
jmp
jle
push
jns
jmp
fsubr
leave
aad
fnsave
xchg
lods
ss
mov
enter
sub
shr
int3
retf
sbb
aas
nop
jno
fs
adc
xor
dec
shr
mov
icebp
loop
ffree
bswap
hlt
add
sahf
js
scas
xchg
mov
fst
inc
(bad)
fnstsw
lock
pop
push
loope
mov
xchg
nop
jmp
xchg
idiv
mov
and
sub
push
ret
xchg
dec
das
mov
daa
push
inc
pop
ins
adc
inc
pusha
loop
xlat
div
push
xor
test
jmp
jmp
and
or
push
outs
iret
movs
vpmullw
add
xor
xlat
inc
pop
dec
jae
ds
mov
sub
add
jae
ds
jl
xchg
mov
mov
pop
pop
jp
iret
push
int3
test
loope
sbb
fnsave
or
push
jmp
cmp
mov
lods
div
es
(bad)
and
pop
retf
adc
js
ja
es
sbb
fnsave
mov
leave
das
in
dec
mov
pop
movs
lahf
shl
push
stos
sbb
shr
and
shr
add
repnz
lahf
out
ror
push
jno
jmp
jecxz
test
add
xchg
fwait
push
not
das
mov
jecxz
(bad)
pop
adc
lea
dec
in
mov
repz
daa
adc
xchg
xlat
inc
push
push
fild
(bad)
loope
popa
out
jo
mov
pop
adc
adc
mov
mov
sar
pop
clc
push
xchg
mov
int3
push
sub
xchg
jo
out
les
mov
call
int3
test
fcom
dec
jmp
gs
mov
cwde
xchg
outs
push
sbb
or
popa
and
cld
lds
in
push
jmp
push
sar
movs
dec
in
cmps
inc
repnz
movs
fiadd
out
mov
sub
retf
pop
mov
mov
cld
or
ret
jmp
int3
lahf
pop
adc
jle
imul
jnp
test
mov
jle
xchg
xor
rol
out
mov
in
fwait
mov
push
xor
lds
inc
inc
ret
les
pop
das
test
fs
addr16
sbb
imul
nop
mov
push
sub
xor
fwait
push
das
sub
sahf
jmp
jle
xor
mov
mov
fldenv
cmp
add
mov
xchg
mov
bnd
stos
retf
nop
sbb
jae
out
inc
add
imul
in
inc
mov
pop
mov
dec
jp
xchg
shl
cmps
dec
retf
iret
mov
dec
adc
out
out
fs
lahf
ret
sti
les
jbe
sbb
xor
sub
adc
sub
jge
push
jnp
push
loope
cmp
(bad)
test
jg
mov
xchg
jle
and
and
cmp
pop
in
int
sahf
jae
mov
mov
or
xchg
mov
mov
and
daa
mov
call
outs
cld
neg
pop
push
adc
out
jp
int
js
test
sbb
add
stos
xlat
cmp
js
xchg
aad
or
xor
mov
jno
js
lods
mov
cmp
cmp
cld
dec
push
mov
rol
mov
xchg
test
mov
iret
(bad)
(bad)
ins
cmps
xchg
xchg
jne
mov
mov
popa
std
(bad)
sahf
mov
dec
jg
sub
jno
pop
mov
fld
sub
fdivr
mov
data16
sti
add
mov
clc
(bad)
popf
mov
jl
jne
ins
sub
loopne
iret
dec
leave
cmp
enter
jae
enter
fadd
mov
dec
jmp
out
mov
imul
jl
mov
movs
rcr
dec
pop
xor
and
es
gs
and
repnz
cmp
int
sti
fwait
sbb
lea
add
xchg
pusha
mov
das
dec
(bad)
push
add
xor
xor
sub
adc
xchg
popa
xor
stos
in
pop
mov
and
add
sbb
shr
or
pop
adc
pop
and
jnp
cs
outs
ins
mov
push
mov
lea
mov
inc
in
cdq
cli
fwait
adc
rol
icebp
jo
lahf
push
xor
mov
aam
push
shr
jae
dec
inc
jne
pop
sbb
mov
in
daa
leave
ret
dec
ds
adc
pop
das
inc
adc
call
rol
cs
(bad)
cmps
retf
into
cmp
inc
jmp
(bad)
sbb
int
mov
mov
inc
dec
iret
mov
mov
xchg
ds
mov
das
mov
push
vorps
scas
scas
or
out
sbb
(bad)
pushw
xchg
pop
imul
gs
ja
ins
mov
jbe
mov
daa
mov
movs
sub
pop
push
or
fisttp
ret
mov
es
jbe
cmp
sub
mov
leave
pop
out
add
je
jb
repnz
sti
std
sbb
push
xchg
mov
push
mov
retf
test
imul
dec
sar
xchg
pop
cmps
outs
aaa
js
push
or
lea
add
sbb
adc
push
and
outs
jbe
dec
iret
push
inc
les
mov
mov
jno
adc
push
test
add
or
xor
retf
jmp
push
mul
add
pusha
arpl
sub
fldenv
pop
pop
mov
cmp
fnstenv
test
mov
iret
hlt
add
fadd
loopne
stos
sbb
sbb
add
or
fisub
movs
jo
inc
jmp
fwait
call
cmp
xor
sti
and
pop
push
adc
imul
push
ror
clc
test
and
inc
imul
in
mov
push
inc
loopne
ficom
hlt
mov
push
adc
xor
fwait
data16
fdiv
popa
cmps
sti
(bad)
jp
jb
std
jne
fsubr
xchg
lods
adc
lock
das
dec
pop
adc
jg
in
test
add
test
pusha
out
jae
add
xchg
ds
bound
test
imul
inc
push
xchg
aad
(bad)
cmp
shr
daa
fist
dec
mov
inc
std
enter
jae
inc
ins
popf
mov
int3
sub
sub
cmp
jno
out
push
mov
mov
outs
jne
pop
mov
(bad)
fld
jg
mov
icebp
pop
nop
loope
xchg
lods
inc
and
leave
icebp
adc
or
inc
pop
cmc
jnp
dec
ret
push
push
mov
xor
and
or
lock
pop
jnp
xor
pop
or
ror
fild
sub
(bad)
fdivr
sbb
inc
jmp
lahf
leave
push
and
cmp
sbb
sub
cdq
mov
call
fisttp
cmp
dec
mov
mov
push
repz
in
pop
loope
xor
and
xchg
sar
sub
add
bound
adc
push
and
rcl
dec
das
push
int3
outs
iret
fstp
inc
sub
shl
jnp
pusha
inc
mov
mov
aas
push
int3
sub
dec
sbb
inc
xchg
and
or
push
imul
mov
leave
sub
push
cmp
inc
xchg
repz
sbb
cld
lahf
sub
clc
cmp
mov
inc
in
fldenv
mov
ss
fwait
sub
sub
mov
movs
and
xor
lahf
retf
(bad)
mov
mov
shr
cmp
ds
outs
inc
shl
(bad)
fcomp
test
mov
sbb
test
pop
pop
mov
fs
xchg
mov
dec
repz
adc
in
aaa
lds
adc
mov
inc
out
idiv
pop
dec
imul
mov
or
ror
push
cmp
mov
(bad)
jne
and
jle
mov
neg
add
les
loopne
xchg
shl
jle
ret
inc
pusha
cmp
ins
sbb
pop
dec
in
(bad)
fstp
jnp
mov
push
xchg
pop
daa
dec
out
inc
pushf
je
or
fwait
mov
(bad)
out
xchg
sub
add
(bad)
aas
imul
jo
sbb
add
into
out
push
xor
add
push
dec
mov
int3
mov
adc
popf
fisub
leave
cmc
inc
cmp
add
jnp
iret
call
inc
fwait
push
sub
inc
cmp
repz
inc
xor
dec
mov
mov
stos
int
lds
xor
adc
inc
sbb
ins
dec
jns
sub
ins
sar
movs
dec
sub
test
shr
push
jno
push
cld
das
adc
push
and
(bad)
ret
adc
mov
out
repz
sbb
mov
les
out
std
pop
scas
sub
or
stos
mov
call
push
push
movs
jge
and
ss
inc
mov
pushf
mov
mov
cmp
xor
sbb
out
cs
pop
in
sar
pop
in
mov
jb
daa
rcr
movs
mov
push
daa
and
dec
rcr
ror
mov
inc
pop
jecxz
retf
push
rol
and
sar
bound
rcl
repnz
sub
inc
inc
dec
push
mov
add
pop
out
aaa
mov
dec
mov
xor
xchg
retf
jae
xchg
aad
movs
data16
rcl
mov
adc
inc
sbb
cli
mov
push
into
xor
cmps
inc
ja
ds
movs
jne
adc
je
adc
jns
scas
(bad)
sub
cwde
sub
jnp
aad
sbb
add
rol
xchg
push
out
sub
jecxz
xor
and
sar
mov
xor
push
mov
push
inc
cmp
sbb
pop
call
mov
shr
repnz
xor
rcr
and
movs
and
push
cs
movs
mov
mov
mov
call
imul
pusha
int
in
pop
mov
mov
arpl
dec
lock
in
cs
adc
or
jge
ret
push
fcmovbe
loope
dec
or
sub
dec
jae
lock
arpl
lds
ds
mov
pop
jl
jns
add
imul
xchg
iret
in
(bad)
mov
les
mov
scas
js
jmp
aaa
xor
repz
mov
out
rcr
push
movs
(bad)
cmp
sub
ds
hlt
imul
lods
jmp
aaa
loop
push
push
pop
aad
fbld
or
or
sti
push
retf
push
out
jmp
stos
and
bound
cmps
test
push
or
pop
inc
dec
adc
mov
test
lds
loop
jmp
scas
push
jecxz
pop
icebp
cs
xchg
nop
mov
jmp
dec
or
ja
test
push
ja
fwait
out
stos
push
call
add
imul
and
popf
fnsave
test
cmp
add
test
mov
mov
pop
xchg
call
add
add
push
mov
mov
jno
sbb
mov
imul
das
xchg
js
and
push
cmp
adc
push
clc
or
cmp
pop
pop
fsubr
movs
mov
cmp
inc
cmp
adc
imul
aas
fnclex
xor
pushf
jg
inc
xlat
push
xchg
cli
imul
(bad)
push
jmp
in
push
add
ins
inc
mov
call
cmps
xor
repnz
mov
adc
pop
js
int
aam
dec
jae
dec
and
cs
les
or
out
fisttp
mov
push
sbb
push
cld
push
xor
lods
and
fadd
cs
push
stc
xchg
test
aad
mov
adc
stos
retf
mov
sbb
ret
pop
inc
dec
(bad)
cmp
jae
sbb
pop
inc
int
mov
int
gs
push
rep
dec
cmp
sahf
stos
adc
xchg
jmp
dec
xlat
inc
add
outs
dec
inc
pop
push
test
pop
push
jbe
jmp
jb
iret
nop
cmp
aas
dec
jnp
nop
pop
bound
test
mov
mov
(bad)
stc
mov
and
jb
push
mov
pop
mov
jae
in
xor
sub
dec
call
movs
fwait
jb
xchg
movs
push
sub
jp
call
adc
inc
sbb
add
xor
ret
je
cmps
std
inc
xchg
or
(bad)
cli
jno
add
pop
nop
pusha
ret
loopne
push
jbe
mov
fs
fwait
adc
out
aam
or
mov
mov
and
xlat
sub
xabort
dec
mov
push
loop
inc
(bad)
cmp
iret
fsubr
pop
repz
ror
xchg
xor
outs
xchg
xor
lods
or
mov
aas
xchg
push
jb
shr
pop
jae
fimul
in
inc
adc
pusha
pop
test
data16
arpl
mov
push
dec
fucomi
icebp
dec
mov
stos
test
dec
(bad)
arpl
icebp
(bad)
out
pop
pop
pop
outs
in
imul
ja
into
inc
inc
jbe
add
add
(bad)
cli
mov
(bad)
sub
shr
xor
and
in
xchg
cld
test
cli
loope
or
jae
sbb
mov
adc
xchg
pushf
mov
aaa
ror
mov
loopne
jl
xchg
push
icebp
stc
(bad)
mov
add
stc
push
mov
movs
shr
mov
mov
push
ret
into
cs
out
mov
movs
stos
mov
push
sbb
sub
fbld
mov
adc
or
imul
mov
and
retf
retf
data16
pop
push
jb
dec
adc
dec
shl
leave
dec
adc
xchg
das
adc
out
push
hlt
sub
add
iret
and
inc
pop
(bad)
sbb
aaa
push
mov
jbe
mov
cwde
fsub
call
xchg
neg
sub
xor
xchg
mov
xchg
div
sub
jmp
stos
scas
add
pop
in
adc
or
shr
mov
push
dec
imul
rol
sbb
adc
int3
dec
mov
icebp
xchg
mov
enter
(bad)
shr
mov
imul
pop
jns
ins
sahf
sar
jmp
(bad)
xlat
test
mov
mov
retf
mov
hlt
cmp
out
sar
ret
popa
xor
jmp
pop
and
(bad)
call
movs
and
call
shl
jmp
and
call
in
inc
dec
or
and
scas
xor
inc
xchg
sub
pop
mov
inc
dec
or
stos
fist
mov
mov
dec
push
push
sar
(bad)
add
pop
mov
or
sub
mov
inc
sbb
test
push
(bad)
sbb
cwde
jmp
aaa
cdq
(bad)
xchg
inc
inc
jne
out
push
addr16
aas
inc
push
aam
dec
dec
mov
in
and
mov
shl
add
and
inc
or
and
sub
je
xor
movs
dec
cmp
outs
mov
mov
and
add
adc
(bad)
adc
call
mov
inc
sbb
mov
jle
scas
dec
loopne
jmp
adc
jmp
adc
push
cmp
fild
mov
int
xchg
fsub
scas
push
inc
jmp
or
mov
cmc
loope
jmp
jno
mov
cmp
cwde
sbb
adc
int3
mul
mov
adc
adc
xor
sbb
xor
in
out
pop
(bad)
xchg
test
pusha
and
pusha
leave
inc
jae
mov
mov
aam
xor
cli
out
mov
lock
loopne
es
inc
inc
adc
push
mov
(bad)
dec
scas
and
shl
inc
dec
push
into
into
mov
xchg
fistp
cwde
push
inc
sar
mov
shl
cdq
or
cld
xchg
sub
dec
cmps
pop
in
sbb
ret
or
jmp
pop
arpl
xlat
pop
mov
xlat
inc
hlt
and
mov
dec
add
mov
mov
fst
les
es
add
mov
cli
leave
outs
xchg
es
jne
push
push
or
mov
inc
push
pop
add
xor
push
test
jnp
jo
js
call
push
ret
ret
out
xor
into
(bad)
and
ja
jecxz
and
cld
ins
push
cmp
sub
dec
pop
test
xchg
xor
push
dec
or
mov
shl
cli
bound
sti
mov
popf
hlt
sub
cmps
lods
xor
retf
in
push
mov
xor
fcmovnb
ficomp
mov
fistp
test
sub
xchg
cli
stc
adc
sub
xchg
adc
neg
int3
dec
and
gs
adc
mov
das
int3
loope
jb
cmp
jmp
or
sbb
in
fnstcw
pusha
sbb
outs
arpl
(bad)
in
pusha
inc
push
movs
xchg
cs
popa
iret
jmp
jbe
mov
shl
adc
push
xchg
mov
add
(bad)
and
sub
iret
sbb
(bad)
lock
mov
sbb
imul
(bad)
hlt
popf
adc
sbb
sub
xchg
call
rcl
pop
mov
in
enter
and
fimul
enter
pop
dec
loope
push
dec
xlat
xlat
lea
mov
jmp
add
loopne
out
adc
push
ficom
(bad)
xor
movs
xlat
xchg
xor
sbb
cdq
call
xor
add
xor
popf
loop
dec
arpl
call
repnz
add
add
scas
or
out
xor
mov
pop
(bad)
retf
inc
scas
imul
ins
jmp
xchg
cmc
cmc
pop
mov
add
int
sbb
lea
cmps
xor
cmps
aaa
jne
test
movs
ret
mov
aas
ds
mov
mov
mov
mov
mov
cmc
stos
xlat
mov
jno
fwait
mov
rcl
jmp
outs
mov
and
add
enter
lods
ret
(bad)
sub
aam
add
sbb
ret
(bad)
popf
bound
ret
popa
cmp
in
cmp
and
inc
data16
fwait
in
loopne
(bad)
(bad)
and
cli
in
xor
outs
jb
mov
cmps
int3
xchg
scas
icebp
pop
xor
or
push
(bad)
xchg
imul
push
fimul
retf
or
mov
sahf
mov
das
sar
outs
ror
or
mov
jno
shr
push
add
push
jmp
mov
lods
mov
je
cmp
xor
push
or
cld
out
ret
fcom
lods
outs
adc
push
fstp
pop
ror
or
sar
scas
ins
mov
dec
std
push
fcomp
push
sub
inc
ins
scas
add
bound
adc
pop
cs
and
nop
icebp
jle
push
imul
pop
push
mov
call
pusha
jmp
aad
and
sub
lds
pop
imul
mov
sbb
sub
cmovbe
sbb
mov
popa
push
mov
xchg
push
mov
cmc
sub
out
aaa
xor
addr16
push
shr
adc
mov
fs
loop
shl
xor
cwde
daa
mov
clc
mov
imul
and
adc
jb
hlt
adc
sub
(bad)
in
and
das
xor
xor
loopne
in
cmp
jmp
in
sbb
ror
gs
loope
sbb
adc
mov
sti
cli
scas
jmp
add
lock
pop
mov
jae
mov
pop
nop
rcr
aaa
leave
cld
hlt
lods
clc
push
or
xchg
push
stos
arpl
neg
fiadd
inc
fimul
loop
jl
push
sbb
enter
pusha
pop
movs
mov
sub
stc
out
test
jecxz
xor
push
add
loopne
retf
imul
xchg
sbb
gs
xor
lea
mov
dec
or
push
cmp
dec
mov
jnp
int3
adc
cmp
xchg
push
imul
sahf
fcmove
dec
cmp
clc
jmp
jle
es
ins
xlat
sub
scas
sbb
bnd
fs
push
out
mov
fnsave
out
or
pop
sbb
push
pop
mov
stos
lock
in
mov
mov
int
stos
loope
gs
mov
or
idiv
movs
ficom
pop
repnz
mov
mov
jl
aad
inc
mov
mov
inc
sti
sbb
mov
sbb
jnp
sub
sub
popf
ja
mov
push
movs
jno
jmp
ficom
test
pop
mov
fnstenv
pop
cmp
in
cli
mov
cmps
ficom
scas
mov
(bad)
push
lods
inc
pop
cmp
add
lods
jne
and
idiv
dec
test
sbb
es
(bad)
mov
jne
and
and
test
clc
jns
jl
gs
sub
jmp
rcl
popf
jl
mov
inc
and
xor
inc
xor
js
jns
fstp
xchg
cs
jo
cwde
push
out
je
lea
pop
repnz
sti
push
cmp
test
dec
clc
sub
jmp
push
and
jmp
mov
pop
imul
or
rcr
dec
jmp
jbe
inc
inc
or
les
jb
adc
xchg
xlat
loopne
loopne
addr16
scas
fcomp
mov
std
cmp
aas
adc
sub
jmp
jecxz
sbb
dec
add
dec
dec
adc
mov
add
sbb
mov
sbb
adc
and
adc
loopne
cli
cmp
mov
inc
stos
jl
or
mov
sti
cmp
rcl
xchg
repnz
leave
cmc
sub
nop
fst
lds
sbb
loope
add
or
call
repnz
cmp
aam
add
in
jns
push
test
pop
xchg
jns
pushf
pop
stos
lods
test
cs
cmp
hlt
xchg
js
mov
inc
mov
mov
cmp
pop
add
scas
popf
loopne
mov
movs
jnp
inc
inc
dec
or
inc
or
(bad)
out
inc
call
dec
sub
push
cmps
push
pop
aam
fdiv
pushf
sub
xchg
mov
movs
jno
mov
les
sub
add
cmp
push
mov
add
xor
test
lods
push
adc
(bad)
js
jl
mul
leave
arpl
cmp
aas
xor
push
and
ret
inc
sbb
int3
lds
adc
cdq
xchg
test
dec
push
and
(bad)
push
icebp
inc
sub
mov
test
call
pop
imul
fld
mov
stc
xor
inc
pop
ret
xchg
js
sbb
xchg
sahf
stos
ret
and
mov
gs
dec
jns
cdq
mov
pop
lods
mov
dec
xchg
cmps
ins
pop
clc
mov
pop
mov
jp
xchg
inc
add
aam
out
jb
(bad)
lock
lods
mov
adc
rcl
in
in
inc
hlt
add
pop
pop
shr
push
cdq
cmp
inc
push
push
mov
mov
out
mov
lock
xor
inc
xor
mov
pop
rol
adc
call
mov
ja
pop
leave
push
xchg
pop
pcmpeqd
push
(bad)
clc
outs
mov
dec
shr
and
lahf
mov
jle
jmp
mul
mov
(bad)
push
pop
lods
fld
jae
push
cmc
and
sbb
lds
push
inc
jne
adc
in
cli
ja
fadd
fist
xor
in
xchg
inc
or
frstor
sbb
mov
dec
xsha256
cmps
adc
ficom
ins
das
repnz
mov
(bad)
pop
jmp
xor
jo
nop
(bad)
pop
aaa
outs
pop
int3
dec
(bad)
hlt
cmp
aad
retf
aaa
xchg
movs
call
test
and
cmps
int3
stos
jne
adc
cmp
mov
jp
mov
and
lods
jg
mov
clc
leave
cmp
rcl
jae
pop
mov
sbb
pushf
out
xor
adc
(bad)
sub
adc
ins
cs
loopne
stc
mov
or
int
mov
stc
push
xchg
xchg
or
das
jb
mov
dec
pop
or
jmp
pop
and
sahf
pop
jg
pop
xlat
arpl
mov
jmp
movs
or
sbb
out
pop
iret
addr16
outs
mul
cmps
jl
inc
das
push
jmp
adc
clc
cmp
pop
mov
outs
mov
into
xlat
das
lahf
jmp
cwde
jmp
sub
pop
retf
and
sub
pop
data16
push
loope
push
rol
mov
sub
mov
mov
mov
call
pop
push
jnp
lds
inc
scas
sbb
add
jmp
push
push
not
xor
and
ret
call
dec
sub
push
push
test
aas
scas
fcmovbe
mov
push
mov
or
inc
or
adc
or
and
(bad)
icebp
inc
adc
mov
pushf
mov
stos
cmp
aad
dec
dec
sbb
movs
xor
(bad)
cmp
sub
addr16
or
out
jo
sub
fistp
mov
sub
int3
clc
dec
lods
cmp
or
aam
sub
sbb
in
mov
pop
push
jo
jne
(bad)
ror
cs
pusha
dec
gs
inc
ret
(bad)
and
in
addr16
or
jge
cmp
fmul
in
jns
add
jno
xor
cmp
inc
call
aas
inc
sbb
xlat
jmp
fnsave
sbb
icebp
outs
mov
sub
dec
push
add
js
inc
jp
repz
test
and
fcomi
in
and
(bad)
push
push
add
or
inc
mov
test
imul
in
sub
pop
ror
add
push
add
fnstcw
addr16
iret
jl
xchg
mov
bound
das
cmp
jp
or
cmp
pusha
pop
dec
jbe
fld
leave
mov
jl
adc
and
test
aad
xchg
push
cmp
mov
jp
add
popf
mov
ja
mov
dec
shl
cli
mov
or
repz
cdq
push
push
sbb
jge
or
push
mov
mov
aaa
popf
repnz
add
cmp
sbb
sub
dec
scas
pop
(bad)
mov
call
lea
sub
mov
pusha
repz
mov
rol
sbb
jge
sbb
leave
jl
jmp
mov
xchg
adc
dec
jne
fs
test
or
jmp
das
sahf
dec
ins
clc
mov
mov
jecxz
and
loop
mov
(bad)
adc
retf
mov
out
fdiv
sub
jo
or
mov
add
jmp
ficomp
or
out
stos
nop
add
and
push
xor
hlt
mov
(bad)
fsubr
out
pop
cmp
add
shl
mov
sahf
and
push
push
sti
dec
add
mov
or
and
retf
repz
jne
xchg
fist
test
pop
adc
fbstp
sub
ins
xchg
push
es
jne
fistp
rol
scas
bound
pop
fnstenv
xor
sbb
sbb
ret
mov
(bad)
cs
inc
jmp
hlt
adc
pop
sbb
fcomp
les
or
hlt
retf
mov
retf
fisttp
mov
cmp
daa
cs
int3
dec
and
add
inc
or
xchg
xchg
add
xchg
test
mov
pop
mov
popa
or
dec
movs
fcomp
dec
stos
mov
imul
stos
cmp
in
add
addr16
push
aas
call
xlat
mov
scas
jecxz
mov
pop
pop
mov
push
nop
pushf
inc
jecxz
inc
add
lods
adc
in
out
cdq
and
outs
push
lods
jg
(bad)
mov
and
mov
lea
retf
xchg
inc
jnp
mov
sub
dec
inc
mov
rol
je
scas
mov
loopne
pusha
push
lods
jmp
sbb
adc
pushf
dec
jo
jb
xchg
repnz
lea
mov
call
and
(bad)
pop
pop
call
bound
sbb
sub
pusha
sub
daa
out
cld
cld
mov
out
nop
sub
mov
add
xchg
or
popa
outs
or
mov
jno
js
pop
pop
int
pop
test
pop
fld
mov
push
test
push
inc
mov
imul
mov
jl
popf
pop
lock
shr
cwde
(bad)
jbe
(bad)
iret
stc
sbb
pop
dec
les
mov
mov
xchg
dec
cmp
clc
xor
mov
mov
sbb
(bad)
imul
dec
pop
jae
inc
push
sti
push
addr16
mov
cmp
js
jae
mov
call
call
es
ret
xor
and
aas
inc
(bad)
iret
push
and
lahf
test
sub
movs
push
call
mov
sbb
jne
dec
out
or
and
or
xor
scas
gs
rcl
or
test
repz
int3
ror
aam
stos
xchg
mov
mov
xor
out
inc
je
nop
sub
dec
mov
aam
sub
psrad
fiadd
xrelease
jmp
sar
repz
lods
xchg
and
pop
frstor
ins
outs
cdq
fs
pop
in
icebp
test
movs
pop
in
aam
cwde
or
sbb
mov
fcom
sub
and
mov
jg
xchg
cmp
xchg
mov
inc
ja
mov
dec
movs
adc
sub
jne
sbb
sbb
push
xor
inc
adc
push
idiv
cld
int
int3
fisttp
jne
jbe
retf
test
outs
mov
pop
fsub
sti
adc
xchg
push
or
xchg
loope
xchg
add
sbb
jl
inc
pop
jae
add
dec
aam
push
add
xchg
dec
ja
dec
sbb
jne
fst
ja
add
and
cmp
sbb
sbb
adc
loopne
inc
add
xor
jae
pop
je
fidiv
je
mov
dec
cld
movs
pop
inc
call
sbb
mov
aaa
pop
adc
ror
mov
arpl
cwde
outs
leave
addr16
xor
xor
sbb
shl
pop
dec
into
je
mov
jno
pop
jns
in
jno
dec
ss
sub
sahf
std
jnp
xor
add
mov
mov
stos
aas
fucomp
fsubr
not
mov
xchg
adc
cwde
adc
push
mov
xor
and
jl
jg
mov
fs
test
loopne
(bad)
pop
loope
clc
dec
or
call
pop
push
jns
test
fld
dec
arpl
in
jle
mov
fstp
dec
add
sub
mov
mov
pop
or
push
ja
push
mov
rcr
nop
ins
fisttp
(bad)
fiadd
mov
arpl
add
sub
and
xor
xor
shl
ds
push
std
xchg
pop
xchg
mov
push
(bad)
fdiv
inc
inc
icebp
add
xor
xchg
and
not
jmp
retf
outs
dec
xchg
lahf
sub
jmp
std
jecxz
call
inc
je
(bad)
adc
mov
jbe
lods
sar
into
inc
inc
icebp
adc
aad
inc
mov
inc
cdq
clc
pop
jbe
pop
or
gs
in
dec
pushf
dec
xchg
fcomp
cmps
sbb
jbe
fcomp
pop
push
sub
std
xchg
std
jb
xchg
mov
adc
cmp
stos
fmul
cmps
popf
mov
inc
js
and
stos
(bad)
(bad)
pusha
sbb
cmp
out
(bad)
push
or
hlt
push
jns
dec
popf
bnd
rcr
inc
stos
push
movs
mov
jbe
jmp
fucom
addr16
inc
arpl
sub
stc
mov
sbb
into
push
test
lea
(bad)
push
ss
jge
stc
arpl
outs
pop
rol
ret
loope
xchg
lea
fnsave
out
mov
inc
test
pop
jno
add
inc
gs
or
and
hlt
xchg
push
aas
in
pop
test
cmps
push
mov
jb
(bad)
hlt
in
push
mov
stc
dec
dec
or
imul
retf
mov
xor
(bad)
icebp
cs
jle
in
pop
rcl
inc
dec
push
mov
mov
dec
outs
in
mov
dec
mov
inc
das
in
xchg
retf
push
std
cmp
dec
lods
clc
stos
jmp
ins
jbe
ds
jns
sub
shr
inc
cwde
push
inc
sub
sub
pop
xchg
mov
dec
mov
lods
mov
sahf
jge
inc
xchg
sbb
dec
in
xchg
push
out
ja
scas
push
mov
movs
xchg
mov
mov
sbb
cmps
stos
ins
mov
sahf
xchg
mov
mov
jae
(bad)
cmp
(bad)
daa
lea
mov
ret
sub
dec
fmul
jbe
cmc
(bad)
loope
adc
xchg
ins
xor
std
stos
xchg
outs
cli
sub
fcmovu
test
or
push
xor
adc
dec
pusha
shl
out
(bad)
into
test
mov
div
xchg
mov
mov
adc
jg
push
test
inc
add
into
test
mov
push
lds
push
into
inc
mov
and
push
add
jns
mov
sub
xor
add
cmp
pop
imul
adc
dec
inc
fstp
add
jo
bound
ins
rcr
pop
sbb
xor
xchg
outs
daa
push
int3
iret
bswap
pop
xlat
fadd
adc
jbe
not
stos
les
pusha
lds
loopne
push
int
sbb
jecxz
sbb
pop
mov
test
sbb
jg
adc
pop
jle
mov
in
jmp
xchg
in
(bad)
ins
xor
mov
(bad)
sbb
fimul
push
sub
call
rol
and
pop
push
jne
stos
cmps
retf
and
mov
test
add
push
sub
scas
sar
add
int
repz
jge
call
clc
mov
(bad)
adc
popf
daa
pop
aam
repnz
(bad)
ror
push
add
push
in
sar
loopne
in
pop
sbb
and
mov
cmp
imul
adc
rcr
xchg
pop
or
xor
xor
out
test
ins
jae
int
jp
push
nop
mov
loop
sub
push
push
into
call
push
lahf
cmc
xchg
xchg
cmp
test
mov
mov
or
bound
mov
je
pop
xchg
push
dec
inc
xchg
les
js
into
pop
int
sub
cli
mov
cmpxchg
sbb
call
mov
and
and
nop
loopne
loopne
es
mov
out
jno
mov
or
jne
and
aad
lods
sbb
push
std
es
or
repnz
adc
push
ret
fidiv
xchg
mov
mov
retf
pop
retf
out
lods
daa
out
out
out
call
mov
(bad)
mov
pop
out
pop
dec
sub
outs
cmps
ins
mov
loope
pop
in
and
sub
cmp
lods
dec
xchg
int
dec
add
jmp
int3
sbb
scas
mov
xchg
in
loop
outs
daa
cmp
ret
stos
arpl
retf
retf
dec
inc
or
cld
dec
sbb
or
mov
push
jmp
int3
cmc
xor
and
lea
nop
sti
fcomp
popf
inc
mov
inc
mov
and
add
dec
loopne
xlat
sub
pop
cmc
push
mov
movs
fist
scas
push
inc
push
jmp
xchg
mov
in
stos
sbb
mov
pop
cs
cli
daa
inc
add
xchg
loop
dec
les
outs
mov
popf
test
(bad)
loopne
xor
inc
xor
mov
mov
loopne
jb
dec
scas
pop
cmp
xchg
addr16
retf
call
adc
jnp
mov
rcl
push
or
retf
pusha
cmc
(bad)
scas
loopne
pusha
mov
add
add
jns
adc
nop
in
inc
cdq
div
lods
out
mov
je
(bad)
xor
mov
je
test
mov
cdq
and
jecxz
jmp
jp
inc
jnp
mov
sub
push
int3
stos
mov
sub
xor
push
jmp
cmp
adc
mov
movs
(bad)
hlt
mov
mov
mov
aaa
movs
nop
rcr
dec
jecxz
loopne
js
cs
imul
mov
out
out
out
sub
push
loop
dec
push
movs
pop
sub
inc
dec
fwait
jle
js
xlat
dec
add
leave
test
sbb
sub
imul
xor
and
sbb
call
test
fidivr
arpl
out
and
dec
cmp
ds
jmp
aam
stos
pop
xchg
int3
push
push
jecxz
push
scas
push
(bad)
xor
sub
adc
and
sbb
push
stos
mov
and
addr16
adc
push
and
aad
sbb
sahf
cdq
test
add
pop
and
lods
lahf
das
scas
or
jl
mov
not
(bad)
aas
pop
or
jbe
or
push
jmp
imul
mov
cmp
mov
mov
jmp
jmp
lds
mov
mov
or
ins
ret
mov
adc
jo
cmps
jb
mov
push
cmp
imul
pmaddwd
loop
adc
mov
lods
pop
mov
dec
cmps
cdq
xor
pop
sub
stc
fwait
repz
sbb
leave
xor
in
add
mov
adc
rol
xor
stos
jl
xchg
fst
mov
test
mov
sahf
mov
pop
sahf
pusha
mov
retf
push
jne
inc
push
mov
sub
jne
and
mov
test
xchg
jo
retf
loopne
int
inc
or
xlat
ret
and
mov
cmp
sti
dec
daa
pop
or
dec
and
popf
int3
(bad)
jmp
inc
pop
dec
xchg
out
or
bound
mov
test
mov
test
pop
and
xchg
sahf
cmp
mov
sub
and
fnsave
sbb
(bad)
popa
jne
mov
out
adc
les
aam
or
sbb
push
jge
jge
push
and
sbb
(bad)
out
xor
imul
pop
call
or
loope
mov
mov
sub
adc
pop
sbb
pop
loop
cmp
addr16
cmps
pop
pop
mov
jno
loope
mov
inc
shl
add
cmp
fnstcw
sbb
xlat
pop
or
es
pop
movs
mov
cmp
xor
mov
das
test
ja
ins
mov
xor
in
scas
les
inc
mov
shl
cmc
fstp
or
sub
shl
inc
sti
sbb
adc
fist
mov
fmul
xor
xor
sti
xchg
mov
adc
jae
lods
sbb
cmps
js
dec
adc
iret
stc
aad
rcl
xchg
hlt
xchg
fld
mov
jmp
nop
sbb
hlt
test
leave
lods
xor
jge
jae
test
int
jo
ss
addr16
push
push
aaa
lea
outs
jns
ss
fistp
add
pop
cwde
jp
sar
xor
test
ja
or
addr16
add
fdivr
fbld
sbb
or
int
dec
add
jl
jl
sbb
mov
or
inc
fdiv
cdq
cmp
(bad)
adc
pop
sbb
arpl
inc
dec
jae
jge
mov
out
jne
xchg
test
pushf
dec
or
cmp
arpl
and
loope
push
push
push
mov
push
inc
pop
data16
fucom
test
fnstsw
jmp
cmps
inc
adc
push
xlat
mov
test
adc
into
mov
in
nop
pop
lds
jp
stos
adc
inc
inc
dec
test
into
in
ret
fnstcw
scas
aam
ficom
daa
push
das
cmc
push
shr
jge
and
lahf
dec
push
(bad)
dec
mov
inc
mov
mov
cdq
push
push
ins
(bad)
cvtpi2ps
jo
aad
jb
test
xor
(bad)
xor
inc
cmp
push
aam
fxch
mov
repnz
jbe
mov
lahf
das
cmp
jo
mov
shl
jmp
dec
xor
mov
xchg
movs
cmp
jmp
dec
jbe
stos
cmp
or
ret
outs
sahf
ret
or
and
pop
xor
or
stos
inc
xor
push
inc
jle
mov
xchg
mov
mov
mov
xchg
mov
fs
mov
jns
sbb
inc
arpl
mov
jb
and
and
repz
loop
iret
dec
lods
sub
mov
leave
jmp
ja
jmp
pusha
into
jle
dec
imul
xor
adc
fstp
cwde
sbb
(bad)
cs
dec
xchg
add
int
dec
and
retf
mov
movs
sub
fwait
mov
mov
int3
inc
jo
or
jle
jns
in
imul
lahf
inc
add
loope
dec
sbb
push
arpl
scas
hlt
fsub
jl
lods
fcos
mov
jecxz
push
add
pop
cli
sbb
out
sub
push
cmps
jae
mov
rcr
pop
mov
mov
repnz
jmp
dec
clc
mov
inc
dec
fsub
mov
daa
arpl
(bad)
jecxz
cmp
pop
xchg
xor
cdq
sbb
push
outs
stos
and
mov
repnz
ins
mov
test
sbb
sbb
aam
cmp
scas
pop
jl
cli
adc
xor
xchg
xor
fnstcw
in
jmp
push
out
sbb
and
jmp
dec
sub
or
xchg
pop
js
movs
ss
or
and
jmp
cmp
push
pop
mov
xchg
ins
pop
cmp
retf
mov
and
(bad)
dec
fs
xchg
aas
pusha
push
test
in
(bad)
fild
dec
lods
push
sbb
ja
lahf
arpl
inc
out
mov
cmps
adc
fwait
sti
add
mov
push
or
sbb
mov
(bad)
fsubr
mov
rcl
scas
mov
push
adc
mov
cmp
and
jmp
adc
jmp
cs
(bad)
adc
cmp
aad
loop
loopne
inc
pop
and
xchg
sub
cdq
sahf
cld
imul
push
fldenv
icebp
adc
in
mov
mov
jge
push
jno
arpl
dec
inc
(bad)
or
(bad)
fucomi
cdq
xchg
cs
out
outs
jo
sbb
pop
lods
dec
leave
fsubr
add
mov
sbb
xchg
mov
jg
jns
cwde
pop
out
add
jle
daa
test
aas
sub
ret
inc
xor
push
mov
jle
pop
das
test
inc
cmp
pop
add
popf
push
movs
(bad)
lock
add
adc
cli
pop
push
push
scas
call
sbb
mov
or
xchg
ja
mov
mov
mov
in
std
xor
xchg
aas
cmp
mov
outs
loop
jns
jecxz
cmp
jge
retf
push
gs
cmp
(bad)
dec
arpl
lahf
test
push
pop
mov
sbb
ror
dec
(bad)
jl
and
adc
jp
mov
cmp
jnp
xchg
ins
arpl
and
aas
movs
adc
retf
test
mov
arpl
inc
inc
stos
push
in
outs
cmps
or
pop
inc
jbe
scas
inc
xor
push
inc
mov
(bad)
jmp
aam
and
or
sbb
int3
and
int3
push
mov
cmc
jae
mov
ins
lods
and
fist
sub
or
add
sahf
(bad)
jl
mov
int
out
out
in
push
ins
mov
adc
xor
xor
rol
mov
inc
cmp
test
and
cmp
adc
shl
lea
cmc
out
and
retf
pop
sbb
mov
sub
test
mov
imul
add
push
cld
fcom
and
ins
stos
mov
fisubr
mov
pop
les
lea
iret
mov
or
arpl
adc
hlt
jb
xor
ret
js
ret
cs
add
mov
outs
or
clc
dec
cmp
and
out
push
push
adc
daa
and
push
ret
test
out
shl
je
xor
mov
xor
repz
test
xchg
pop
or
lods
sub
or
(bad)
aas
scas
jb
add
xor
jnp
adc
mov
(bad)
mov
gs
scas
xchg
xor
dec
push
loop
mov
sub
stc
in
outs
pop
fdiv
sub
xchg
cmc
jmp
push
test
lods
mov
jl
push
xchg
and
loopne
(bad)
bound
add
push
fcom
aas
sahf
rcl
xchg
fidiv
sahf
or
adc
mov
lds
push
sti
jl
lods
popa
or
adc
popf
les
movs
pop
outs
enter
test
jmp
push
out
bound
iret
cmp
fstp
mov
add
pop
outs
mov
call
in
aam
dec
xchg
in
cmp
(bad)
int3
and
test
loopne
ins
xor
dec
aam
and
adc
aas
push
add
sub
ret
daa
(bad)
fcmovu
ret
lea
sub
mov
dec
sbb
inc
sub
and
repz
ja
xchg
out
mov
es
pusha
jl
xor
fstp
and
mov
es
mov
nop
into
pop
xchg
sbb
test
icebp
mov
lds
xchg
pop
lea
xchg
xchg
test
(bad)
out
rcr
sbb
stc
movs
jns
adc
iret
(bad)
jge
out
inc
iret
mov
(bad)
adc
pop
push
push
call
in
cmp
cmp
xchg
mov
push
push
sbb
push
push
std
mov
add
icebp
adc
xor
imul
clc
retf
adc
push
jl
mov
pop
cmp
sub
xchg
push
out
mov
icebp
in
pop
push
inc
cmps
sbb
xchg
stc
inc
dec
es
iret
mov
pop
es
jge
pop
dec
pop
or
fwait
pop
es
xchg
jo
sub
dec
add
push
ss
data16
add
test
rcr
jg
movs
stos
ret
push
add
dec
mov
rcr
stos
dec
pop
pop
out
cdq
and
inc
cdq
loop
or
inc
retf
xor
xor
sub
stos
call
and
test
sbb
test
adc
call
outs
ins
inc
dec
pop
push
retf
pop
inc
add
or
cmps
stos
and
inc
scas
xor
and
pop
mov
cmp
je
loopne
out
push
cmp
lods
ds
push
stos
(bad)
xchg
or
aad
out
hlt
fwait
add
sbb
addr16
sbb
or
idiv
movs
push
push
mov
cmp
pop
add
pop
ficom
push
fcomi
add
pop
leave
icebp
xchg
jae
jae
loop
ja
dec
mov
in
stos
mov
neg
iret
div
sahf
es
mov
inc
daa
fs
and
add
push
cmp
popa
sbb
sub
jl
and
ja
pop
mov
xor
cld
(bad)
add
add
dec
sub
adc
add
popf
ror
(bad)
jmp
das
inc
cli
xchg
loopne
pop
rol
int3
sti
jbe
cmp
outs
inc
fld
add
stc
scas
or
leave
xchg
shl
cmp
jns
xchg
or
sub
int3
cmp
jbe
fcom
out
ror
push
retf
add
or
rcl
sub
mov
or
aas
pop
pop
inc
into
rcl
inc
int
into
retf
(bad)
jns
add
pop
outs
lahf
aas
inc
stos
pop
xchg
daa
out
cmp
lock
les
fiadd
in
push
pushf
mov
or
mov
fwait
cli
mov
push
pop
mov
adc
dec
xor
(bad)
pop
and
push
stos
jae
pop
clc
jg
xchg
sub
idiv
fistp
push
repz
mov
clc
lods
ja
(bad)
add
cli
xchg
enter
mov
movs
mov
adc
pop
ret
sbb
dec
pop
push
push
loopne
pusha
cmp
or
push
xchg
xchg
(bad)
into
pop
cmps
xlat
pop
(bad)
sbb
(bad)
and
scas
pusha
jle
xchg
or
sub
jne
in
jle
scas
push
setle
in
add
push
aas
xor
jmp
fs
adc
call
pop
div
jg
xor
aas
or
xchg
retf
dec
stos
pop
popf
pop
xor
or
xlat
dec
lods
pop
les
aam
icebp
inc
and
adc
inc
dec
sbb
es
dec
repz
mov
(bad)
ss
in
fild
jbe
xchg
mov
xor
cdq
scas
pusha
or
mov
(bad)
mov
ror
call
mov
push
xor
aas
sbb
cmps
sbb
iret
jecxz
jl
dec
test
bnd
mov
sub
pushf
fdiv
pop
(bad)
mov
sub
mov
jp
jne
dec
rol
xor
and
std
mov
out
(bad)
ficomp
stos
mov
pop
call
in
loopne
push
cmp
data16
mov
jbe
jge
push
addr16
and
cmp
jbe
nop
movs
inc
out
lock
fisub
cs
sbb
outs
pop
cmp
inc
or
repz
add
mov
pop
dec
mov
lods
mov
push
fst
stc
adc
mov
push
inc
mov
mov
sub
pop
sub
and
ds
or
mov
mov
adc
lods
jae
hlt
sub
cmp
ret
ret
bound
aad
push
or
lock
aad
dec
add
mov
rol
mov
jmp
outs
xor
sbb
jp
sbb
movs
(bad)
movlpd
(bad)
in
sahf
sbb
xchg
sbb
jb
lock
cwde
pop
adc
fild
repz
rcl
rol
inc
add
jbe
fcmove
je
in
das
sti
push
inc
push
retf
hlt
fmul
sbb
fxch
ds
cmp
movs
mov
std
gs
cmp
dec
mov
dec
and
in
aad
push
sub
hlt
mov
rol
xchg
or
mov
scas
cwde
das
hlt
test
lahf
add
jle
lock
bsr
push
jae
mov
out
inc
sbb
jae
clc
fwait
jne
inc
xchg
mov
test
ja
sbb
dec
ja
scas
jo
xor
push
aam
vmovaps
fs
ret
jo
pop
test
enter
call
rcr
or
mov
fild
or
call
and
push
jle
repz
repz
fs
leave
ret
xor
sub
pop
ins
adc
mov
es
mov
and
icebp
xchg
adc
pop
stos
fiadd
rcl
cld
sbb
add
mov
xor
push
daa
pop
js
add
leave
inc
sbb
lock
je
lods
int3
sub
mov
dec
dec
add
push
iret
mov
test
push
jno
pop
jne
inc
sar
popf
out
outs
lahf
mov
fsubr
scas
and
int
ins
mov
lods
pop
outs
mov
jne
inc
adc
push
loop
les
in
daa
dec
out
cs
inc
retf
xlat
mov
aas
xor
mov
test
movs
push
or
mov
std
aam
xlat
leave
inc
xchg
sahf
rcl
sbb
lods
loopne
fmul
or
xchg
rcr
lea
popa
jmp
jmp
shl
and
enter
mov
sub
cmp
sar
retf
imul
fadd
sti
xor
mov
add
jae
js
mov
sbb
sti
pop
lahf
pop
outs
test
hlt
ins
xlat
xlat
call
adc
pop
adc
pop
dec
jmp
call
jae
and
leave
ja
aas
xlat
out
inc
mov
jo
imul
mov
enter
push
inc
inc
adc
sub
sahf
push
adc
enter
cmp
jnp
inc
push
mov
xchg
in
sub
adc
jno
fild
dec
mov
sbb
push
sub
push
fbld
call
in
sub
jbe
push
mov
cmp
fcomp
xor
mov
js
jl
out
cwde
mov
pop
mov
cwde
mov
dec
and
jmp
and
sbb
stos
mov
mov
(bad)
jb
dec
fsub
mov
(bad)
fwait
jae
imul
inc
arpl
mov
outs
cmp
rcl
and
push
ins
and
lods
fnclex
les
xor
push
push
lods
mov
sbb
pop
neg
clc
retf
(bad)
cmps
(bad)
dec
cmp
mov
jne
pushf
adc
push
and
(bad)
mov
mov
mov
jb
sbb
mov
xor
out
jecxz
or
fmul
push
movs
aas
dec
jbe
lods
adc
aaa
fsubp
mov
mov
leave
cld
push
cs
in
test
in
iret
mov
jecxz
int3
pop
mov
dec
mov
or
push
xchg
jle
jae
mov
push
adc
stos
cmp
push
addr16
lock
js
xlat
mov
cmp
xor
sbb
jle
adc
popa
and
cmp
pop
push
outs
dec
fsubr
adc
and
mov
push
dec
lea
hlt
sub
and
xchg
xor
sub
sbb
mov
iret
cli
sbb
xor
mov
sbb
mov
dec
inc
sub
sub
out
aam
repz
in
das
setne
fnstsw
loopne
mov
jb
xor
pop
cmp
add
movs
inc
aaa
into
out
scas
loope
push
mov
add
sub
or
jno
imul
rol
push
mov
in
pop
cs
mov
xor
cmc
push
push
cs
mov
push
xchg
cmp
xor
mov
in
repnz
hlt
fisub
mov
mov
out
xchg
mov
rol
xor
xor
shl
xchg
mov
(bad)
retf
dec
pop
adc
cmp
mov
add
jg
sub
enter
mov
aaa
hlt
je
les
push
pop
sub
xor
out
pop
sbb
loop
ror
into
push
mov
and
push
(bad)
mov
jg
xor
jle
ss
test
mov
call
dec
xchg
fwait
pop
fstp
mul
cmp
leave
and
test
inc
enter
out
inc
(bad)
mov
push
adc
xor
cmp
outs
lock
in
int
popa
dec
or
cdq
mov
cmp
frstor
and
jp
frstor
out
cmc
pushf
mov
jne
xor
xlat
cmp
repnz
hlt
gs
sbb
pusha
test
inc
(bad)
ror
xor
into
sub
icebp
pop
cmps
add
les
jmp
cmps
repz
jmp
pop
cmp
xchg
fcomp
popa
hlt
pop
dec
fild
jl
aad
imul
mov
push
push
imul
push
fucom
sub
mov
test
mov
scas
ins
scas
jmp
(bad)
cmp
or
adc
nop
js
mov
mov
data16
ja
xchg
push
retf
inc
xor
mov
cmp
lds
xor
int3
fnstsw
and
dec
fldenv
jmp
inc
int
sar
push
push
test
ret
(bad)
test
jmp
out
fs
inc
sbb
xchg
shl
test
inc
inc
add
stc
fst
fnsave
push
loop
pop
stos
popf
cmp
xchg
pop
mov
add
lock
ret
out
jle
mov
sub
and
dec
jae
mov
inc
jle
inc
or
test
or
sub
cwde
and
dec
gs
mov
xor
mov
push
cmc
repz
fild
xor
not
scas
dec
ds
push
movs
sar
aad
std
mov
mov
iret
je
ins
cmp
test
leave
pop
sbb
ins
adc
push
cli
mov
test
cmp
retf
aaa
aad
xor
nop
xchg
dec
call
inc
adc
lods
xlat
pop
stos
lock
ins
imul
pop
inc
push
je
mov
sbb
cld
lds
int3
(bad)
leave
ins
mov
retf
scas
pop
mov
es
fmul
push
out
js
movs
in
push
out
into
je
push
scas
push
ficom
je
cli
push
cdq
aad
cmp
add
cwde
cmp
in
inc
je
sar
fldenv
imul
lock
movs
ror
mov
push
add
js
psllw
add
dec
les
inc
nop
and
mov
mov
es
or
int
sbb
mov
jno
pop
dec
fadd
xlat
outs
mov
dec
cdq
outs
icebp
dec
sub
mov
add
inc
addr16
aas
mov
mov
mov
das
xchg
ror
jl
daa
retf
(bad)
daa
rcr
mov
xor
ret
aad
icebp
and
nop
xor
xchg
int
and
jmp
pop
aas
fld
ins
pop
xor
mov
into
mov
ret
dec
sbb
cs
adc
in
xchg
dec
jmp
xchg
sbb
stc
repz
jl
sbb
aas
leave
aad
push
and
ins
xchg
mov
mov
push
fadd
xor
push
mov
cwde
icebp
dec
arpl
adc
push
imul
xchg
call
das
sbb
mov
fld
out
test
xor
jge
shl
imul
jecxz
dec
rcl
cli
ins
cwde
jne
sbb
es
fisubr
repnz
lock
pop
xchg
add
cmp
dec
fstp
or
inc
xchg
dec
or
fimul
ficomp
add
int3
jo
adc
cmc
xchg
cld
pop
in
ss
cmp
(bad)
cld
jns
push
fnstcw
cmp
or
push
or
lods
pop
imul
loop
pop
add
xchg
inc
loopne
jle
dec
xlat
sar
clc
jmp
das
push
dec
cmp
jl
mov
dec
mov
xor
jl
(bad)
pop
xor
ins
mov
out
inc
retf
retf
jae
cs
inc
mov
xor
mov
(bad)
lods
adc
fcmove
icebp
mov
fild
xor
fimul
out
mov
hlt
sbb
sub
xor
pop
loopne
jne
sbb
jmp
cmc
cmps
loopne
iret
pushf
out
out
loopne
jmp
mov
fild
cmp
leave
jbe
lock
fsubrp
fld
movs
data16
in
shl
dec
scas
add
call
pop
sub
popf
es
ror
mov
xchg
addr16
ins
or
cdq
mov
lods
lds
push
sahf
mov
and
hlt
ret
outs
xor
push
fdiv
jns
push
outs
inc
nop
xchg
aam
lea
(bad)
dec
push
pop
inc
ins
inc
add
xchg
jecxz
fistp
jge
and
(bad)
fcomp
or
add
add
and
stos
(bad)
leave
and
fild
dec
mov
std
or
push
int3
mov
add
idiv
in
ds
cld
mov
aam
popf
cmc
lods
lahf
pop
jle
cld
push
inc
aam
jae
out
es
push
add
icebp
adc
sub
mov
mov
test
or
cmc
inc
xchg
xchg
ins
sbb
call
sub
mov
ins
retf
in
data16
stc
dec
fcomp
xlat
push
sub
jbe
xor
inc
xchg
in
and
push
dec
cmp
sbb
clc
inc
aam
and
dec
bound
rcl
scas
in
add
jp
cmps
xchg
loopne
sub
pop
es
sbb
les
jle
repz
movs
sbb
lods
outs
mov
addr16
cmp
add
test
adc
mov
mov
add
lds
clc
mov
sbb
(bad)
pop
cmp
repnz
loope
ret
or
mov
mov
sbb
ins
lds
mov
mov
jo
(bad)
mov
dec
nop
jmp
fist
(bad)
sbb
aam
dec
in
(bad)
and
jmp
fwait
or
movs
in
add
sbb
pop
repnz
inc
jecxz
lods
out
loop
mov
repnz
sar
scas
cmp
in
shl
scas
in
js
mov
jl
ds
xchg
das
xchg
aad
push
xchg
jae
cmp
les
adc
(bad)
jns
adc
and
sahf
(bad)
cli
nop
aas
jmp
test
psrad
lods
add
add
out
jo
(bad)
int
push
dec
shl
push
jnp
stos
loope
inc
hlt
and
nop
push
push
cmp
lahf
sahf
mov
dec
adc
popaw
ss
mov
mov
xchg
into
aas
ret
jb
push
inc
imul
shr
js
cmp
stos
nop
pusha
imul
icebp
add
(bad)
xchg
ins
inc
pusha
cmp
into
sub
xchg
sub
mov
lock
cmps
xchg
or
adc
jp
data16
lock
shr
pusha
sub
pop
not
pushf
ret
mov
or
push
xor
lock
call
daa
mov
adc
jge
or
gs
or
out
pop
(bad)
jl
imul
dec
mov
icebp
pop
xchg
ret
sti
ja
dec
pushf
repnz
dec
(bad)
mov
mov
mov
sbb
mov
xchg
mov
or
push
mov
push
popa
loopne
loopne
imul
mov
sbb
retf
xor
shr
push
and
xchg
jg
and
(bad)
or
add
addr16
enter
cmp
cmp
mov
inc
js
inc
hlt
addr16
jl
mov
aam
icebp
lods
sbb
or
and
pop
or
pop
inc
mov
and
dec
xor
fs
nop
jb
add
and
js
xchg
jmp
push
push
jl
or
dec
ins
call
adc
xor
loope
xor
push
mov
add
adc
hlt
adc
stos
add
sahf
dec
jg
cmp
and
test
cmps
inc
shl
or
or
call
jecxz
mov
pop
lock
stos
loopne
pop
xor
cmp
lock
dec
in
div
jbe
cmp
add
iret
cmps
test
call
stos
push
std
inc
inc
int
inc
aaa
mov
and
sbb
inc
mov
(bad)
jmp
lods
icebp
(bad)
pop
shl
dec
iret
pop
mov
xor
inc
fild
pop
sub
call
add
and
adc
push
ss
lahf
cs
cwde
and
inc
loope
mov
mov
xchg
loope
pop
pushf
and
hlt
call
scas
aad
(bad)
std
(bad)
mov
sbb
inc
out
add
rol
sub
mov
add
xchg
push
mov
les
data16
int3
fisubr
mov
mov
inc
aam
sub
mov
sbb
ret
xchg
test
repnz
jnp
cmp
mov
in
cmp
pop
les
cmp
cmp
xor
jmp
or
adc
and
imul
scas
adc
dec
(bad)
leave
pop
loopne
sub
(bad)
mov
adc
cmc
jmp
xor
jle
xchg
fwait
or
aaa
and
shl
repz
call
jae
out
hlt
ret
push
add
sahf
(bad)
pop
in
inc
push
out
xlat
(bad)
(bad)
jmp
fnstcw
and
mov
mov
sbb
pop
loope
aas
mov
mov
out
and
pop
xchg
jmp
add
push
fs
jp
push
aad
ss
fiadd
lea
aas
ins
addr16
cli
xchg
loopne
(bad)
call
fs
arpl
mov
mov
sbb
int
ror
movs
nop
ret
fdivr
jmp
dec
inc
test
(bad)
mov
shl
ret
test
sub
sub
lea
call
sti
lds
jbe
ret
cs
pop
inc
stc
cmp
fidivr
xor
adc
sbb
clc
inc
or
dec
iret
xchg
cmp
outs
nop
add
or
add
iret
dec
cmp
aad
inc
shr
pop
jge
mov
aam
sub
xchg
hlt
jo
sahf
and
mov
jne
icebp
cmp
mov
or
test
jns
call
push
pop
test
pop
adc
fst
push
outs
jl
test
cmp
gs
cmps
sub
and
(bad)
mov
cmp
push
sahf
call
inc
in
adc
mov
call
lods
adc
jbe
mov
sahf
fwait
adc
push
cmp
out
inc
and
and
and
hlt
aaa
xchg
stos
cmp
xchg
push
xchg
cmp
xchg
push
mov
sub
fidiv
test
and
or
sbb
fidiv
adc
mov
aad
in
jmp
dec
adc
mov
xchg
in
icebp
pop
(bad)
call
retf
ror
inc
mov
inc
cmp
jmp
mov
adc
mov
loope
addr16
enter
mov
test
(bad)
sub
test
or
lds
inc
scas
mov
cld
cmps
cli
test
inc
sbb
cs
mov
xor
loope
jae
outs
iret
adc
arpl
outs
mov
mov
cwde
aaa
hlt
and
push
aaa
stc
test
or
push
out
mov
nop
ret
jecxz
shl
push
cmps
imul
push
dec
lock
xor
sub
and
outs
ins
inc
jge
nop
sub
in
jb
jg
imul
or
ret
adc
fistp
jecxz
fisub
xor
mov
retf
inc
add
pop
dec
mov
pusha
jns
icebp
cmp
nop
mov
inc
cwde
sbb
dec
popf
adc
jle
adc
cmps
inc
shl
dec
push
mov
shl
outs
jle
jae
xor
(bad)
and
push
pop
retf
sbb
add
cwde
pop
cmps
xchg
and
popf
imul
dec
pushf
das
mov
fwait
mov
aam
test
or
jmp
jle
fmul
cs
ds
into
xor
mov
repz
ins
push
mov
ins
ret
sbb
sar
(bad)
jb
nop
out
test
movs
nop
inc
sbb
hlt
add
push
xlat
(bad)
(bad)
inc
shl
pusha
push
rcl
lods
in
push
mov
mulps
xchg
ds
add
adc
xor
dec
dec
push
rol
adc
sbb
std
icebp
(bad)
ds
cmp
xchg
pop
pop
into
push
lahf
ins
push
mov
dec
out
sub
sbb
clc
pushf
aad
mov
or
or
aaa
xlat
xchg
mov
and
sub
mov
rol
repz
leave
enter
xor
es
fimul
add
cwde
rol
lahf
cmp
mov
cli
sbb
inc
cli
adc
pop
jmp
jae
iret
cmp
mov
scas
stos
cmp
jmp
cmp
and
mov
xlat
loopne
sahf
xchg
jmp
or
mov
xor
sub
dec
mov
fsub
fist
cmp
ret
mov
lock
fmul
fdivr
pop
ret
or
mov
cmp
push
scas
ds
xchg
push
test
mov
call
push
in
mov
shl
dec
lock
pop
mov
mov
mov
dec
jbe
adc
mov
sbb
sbb
fistp
inc
dec
dec
call
in
(bad)
shl
(bad)
push
scas
pop
out
sahf
loope
add
mov
sub
mov
push
dec
mov
push
jne
mov
(bad)
aas
push
or
fld
(bad)
pusha
or
shr
retf
mov
cmc
or
and
mov
call
outs
xchg
fwait
les
jge
into
das
mov
jns
sbb
mov
push
daa
ror
jle
aas
out
vcvtss2sd
hlt
shl
mov
inc
jne
(bad)
jmp
mov
mov
popa
pop
mov
dec
mul
out
hlt
add
rcr
movs
cli
ja
das
fiadd
or
add
cmp
call
adc
jo
popa
sub
ss
lods
imul
sahf
xchg
out
adc
fsub
or
fidivr
inc
and
xchg
adc
mov
xor
mov
xor
ja
xor
inc
and
imul
shl
jbe
gs
xchg
cmps
push
sub
imul
adc
cwde
aaa
mov
push
xor
add
sar
fild
aaa
or
jge
lahf
ror
push
jle
push
ror
shl
adc
aad
js
in
cmc
hlt
cmp
xchg
repz
mov
arpl
jns
stos
xchg
or
movs
mov
push
mov
xchg
mov
or
fisub
hlt
ins
cmps
pop
stos
cmc
pop
mov
ins
xchg
xchg
cmp
cmp
fs
cld
mov
dec
jno
test
rcl
push
dec
(bad)
cwde
shr
sub
movs
nop
mov
pusha
movs
mov
push
std
mov
aas
cmp
or
ret
adc
xchg
mov
fnstcw
repz
push
push
fdiv
mov
mov
push
adc
xor
sub
aas
pusha
fwait
out
bound
sub
fs
jne
out
and
scas
cli
fnstenv
mov
in
fsubp
mov
push
jmp
jmp
pop
pop
jmp
fs
popf
loope
xchg
je
adc
hlt
test
ficomp
add
mov
dec
push
nop
jnp
dec
movs
mov
mov
mov
loopne
jne
in
lock
push
cmps
rol
mov
dec
or
pusha
mov
test
pop
out
icebp
push
sbb
or
inc
iret
sub
(bad)
in
jae
sti
add
jne
jg
xchg
stc
rcr
in
loopne
jnp
lods
mov
mov
mov
pop
pop
pushf
lods
movs
ins
and
sti
mov
push
sbb
mov
sar
jmp
push
je
ds
fnstenv
push
mov
or
fld
pop
dec
mov
shl
loopne
dec
retf
add
lock
mov
outs
xchg
cld
mov
mov
gs
pushf
dec
lods
xor
shr
jp
cli
xor
dec
and
mov
inc
sbb
ret
inc
pop
retf
hlt
sub
push
adc
inc
inc
mov
xor
push
jno
pop
stc
out
mov
leave
out
adc
sar
dec
mov
add
push
test
int3
(bad)
add
out
retf
push
or
or
loope
push
popa
and
ds
cmp
dec
out
xchg
sub
aas
repnz
loopne
mul
lods
call
push
stc
imul
sub
sub
cli
das
loopne
icebp
jmp
xchg
jge
mov
sbb
dec
ins
and
xlat
stc
sub
outs
popa
sub
mov
inc
or
push
xchg
xchg
(bad)
push
sub
outs
pop
cmps
jle
fild
jno
inc
push
pop
fwait
xor
out
adc
xchg
icebp
adc
push
cli
in
pop
sub
inc
popa
add
cmp
retf
gs
pop
call
pop
fsubr
jle
mov
cli
pop
cmp
and
push
jl
cmp
cwde
cdq
dec
or
ins
pop
popf
ins
(bad)
ror
xor
xor
lds
push
loop
test
fsqrt
push
cmp
mov
adc
aad
out
aas
or
mov
mov
xchg
test
cmp
adc
mov
push
bound
fwait
mov
xlat
loope
js
popa
mov
push
mov
rcr
mov
push
cmp
cwde
fs
mov
std
adc
push
ins
push
test
fisttp
xor
cmp
ins
sbb
lea
push
xchg
jns
xor
or
add
inc
lea
xor
nop
mov
ja
pop
(bad)
push
add
add
and
cs
popa
or
in
outs
sbb
(bad)
es
shl
mov
fwait
and
jmp
fiadd
inc
dec
cmps
test
push
fxtract
dec
jle
idiv
push
xor
das
or
scas
jge
pop
mov
jnp
mov
xor
cmp
sub
enter
add
rcr
or
call
inc
xor
mov
jns
aaa
cmp
adc
dec
jbe
(bad)
push
sahf
stc
jae
adc
outs
in
ss
pop
enter
add
xor
mov
je
cwde
jmp
fs
pop
mov
pop
fcmove
sub
adc
adc
loope
push
in
mov
dec
test
pop
sahf
aas
test
retf
movs
xchg
jle
shl
mov
pusha
es
cld
add
mov
sbb
outs
test
mov
in
out
call
adc
out
mov
ds
stos
push
jns
out
out
or
mov
xor
or
mul
sub
push
or
mov
inc
popa
jae
mov
add
ret
inc
shl
adc
cmc
dec
jecxz
jecxz
jo
cmc
xor
sub
mov
dec
call
(bad)
rcr
jbe
hlt
scas
daa
in
or
mov
sbb
stos
outs
or
ins
fisubr
cmp
jmp
test
js
push
push
xchg
xchg
push
sub
js
adc
loopne
(bad)
sti
dec
stos
outs
(bad)
add
push
pop
retf
inc
cld
scas
push
mov
(bad)
cmp
mov
icebp
arpl
pop
leave
cmp
fst
ins
and
inc
ja
cmp
addr16
or
adc
xor
sbb
js
mov
inc
xchg
outs
pop
enter
add
push
sub
repnz
aas
xchg
jnp
jmp
(bad)
shl
fwait
lods
and
mov
xor
cmp
push
mov
push
push
pop
mov
loope
dec
enter
fs
pop
stc
mov
daa
xor
fild
pop
mov
inc
repnz
les
(bad)
ror
and
sahf
or
mov
inc
aaa
mov
xchg
lods
dec
shl
test
sahf
jmp
add
imul
inc
cli
adc
push
or
adc
jns
mov
punpckldq
repnz
hlt
cmovp
(bad)
lea
xor
push
xor
aam
xchg
pop
es
cmps
shr
jne
pop
sbb
push
es
dec
xchg
push
hlt
jbe
pop
rcr
dec
fsubr
(bad)
stc
cmp
push
jmp
mov
add
ret
xor
je
xchg
(bad)
lods
cmp
test
xor
xchg
push
pop
sub
cld
push
mov
mov
push
mov
and
mov
lods
xchg
mov
loopne
sbb
loopne
mov
mov
imul
jae
outs
push
push
bound
pop
mov
add
push
jge
xlat
sbb
data16
scas
cdq
mov
lahf
sub
xchg
xchg
mov
lods
out
push
call
jb
pop
inc
push
jecxz
sbb
lahf
test
fnstenv
jl
and
sub
xlat
jge
and
push
jnp
retf
ja
or
loope
dec
clts
fld
dec
int
add
and
fldcw
movs
dec
pop
sub
outs
cmp
add
shl
xlat
xor
cmp
cmc
or
fcomp
aaa
mov
and
in
repnz
ins
fisubr
test
push
push
aam
in
adc
and
push
in
cmp
nop
js
dec
cmp
retf
mov
stos
jns
inc
push
cli
ds
std
jbe
inc
xor
xchg
add
jle
inc
sub
aaa
ficomp
xlat
cmps
pop
fmul
sti
cs
xchg
in
pop
push
stos
pop
in
mov
mov
outs
iret
mov
fwait
cmp
leave
pushf
fild
cmp
cmp
pmulhw
shl
cdq
stos
cmc
dec
mov
xlat
(bad)
pusha
jge
into
cmp
or
push
or
jle
in
xlat
ror
dec
int
(bad)
hlt
sbb
sbb
adc
pop
into
fsub
not
ret
sbb
popf
in
(bad)
test
fcmovnb
cs
popf
sar
sbb
or
pop
add
ss
sbb
jmp
daa
aas
sub
xor
add
pushf
mov
das
aaa
jno
xchg
cmp
push
mov
push
mov
add
sbb
data16
(bad)
fs
cmp
lds
cmc
xor
jle
xchg
js
push
and
dec
xor
in
loop
stc
repnz
aas
jbe
xchg
cmp
mov
cmp
out
outs
mov
sbb
test
and
iret
out
stc
adc
icebp
dec
adc
gs
inc
imul
jge
dec
jg
cmp
xchg
fmul
jmp
imul
bound
cmp
das
jle
dec
xor
xchg
jmp
mov
push
pop
jle
stos
ret
add
repnz
xchg
sbb
push
test
es
push
js
popf
cmp
cdq
pop
rol
scas
lds
or
and
stos
push
sti
or
mov
(bad)
and
aaa
or
inc
(bad)
scas
or
test
ins
bound
cmp
sub
dec
int
sbb
push
out
jle
and
add
call
cld
add
sub
jbe
push
cld
push
xor
push
inc
and
int3
mov
std
xor
or
or
call
dec
pop
cmp
pop
(bad)
adc
add
test
fsubr
cmps
sub
test
and
cmp
gs
mov
and
jo
push
mov
push
mov
bnd
jmp
dec
mov
stos
jecxz
es
jecxz
dec
cli
jmp
or
(bad)
push
xchg
jp
ss
jo
aaa
hlt
mov
dec
aam
test
cld
jns
mov
fs
adc
daa
and
sahf
aam
xor
or
cdq
push
cld
aam
jae
loop
int3
and
xchg
cli
pop
lds
daa
inc
inc
and
sbb
ds
sub
adc
dec
out
push
mov
xchg
dec
pusha
lds
push
push
jecxz
sbb
mov
cwde
xor
enter
in
(bad)
ss
add
jns
ud1
sub
pusha
jne
jle
scas
sub
add
pop
ss
ficomp
icebp
scas
aas
dec
jns
(bad)
fs
std
test
daa
out
or
cmp
add
pop
pop
daa
adc
aad
mov
ds
out
outs
daa
pop
adc
idiv
loope
rcr
or
in
pop
add
int
test
mov
dec
sub
or
xchg
push
xchg
shl
xlat
jne
(bad)
sbb
clc
jo
mov
pop
movs
(bad)
sbb
sub
stc
jns
xor
js
and
lea
fucom
push
xchg
jp
(bad)
shr
cmp
and
xor
or
adc
int3
ss
mov
xchg
repz
cmp
mov
stos
ins
pop
mov
das
aam
push
xchg
jb
xchg
sti
fidiv
adc
adc
sbb
in
ret
mov
iret
outs
jnp
cmc
test
ds
mov
popf
ffreep
pop
xchg
push
or
dec
adc
enter
out
pop
pop
inc
mov
or
jb
xlat
xor
das
rol
or
clc
test
stos
mov
pop
retf
sbb
xchg
pop
xor
shr
cmp
scas
popa
iret
(bad)
das
jnp
out
ret
ret
inc
mov
cmp
adc
cmp
in
jecxz
adc
push
test
mov
lds
mov
add
xchg
int3
ret
or
pusha
jne
cdq
sar
ret
je
les
(bad)
fldcw
ins
fbld
xchg
iret
loop
rcr
loop
push
jno
push
aas
cmc
sub
mov
stc
pop
test
inc
ja
mov
gs
push
push
icebp
addr16
outs
(bad)
adc
in
xchg
push
dec
inc
lods
hlt
in
mov
or
aam
mov
or
adc
stos
and
fcmovbe
sbb
fdiv
mov
mov
dec
fidivr
in
xchg
sub
fwait
inc
int3
adc
imul
jns
fs
loopne
inc
dec
adc
jecxz
cdq
out
ins
je
pop
cwde
xor
out
out
inc
cld
sar
xor
adc
push
sub
cs
pop
out
jb
xchg
mov
sbb
retf
inc
aaa
adc
outs
jmp
fisttp
cmps
jne
jb
les
jae
mov
fist
jg
aad
sbb
pop
movs
add
jmp
js
xchg
sbb
movs
lock
inc
imul
xchg
mov
bound
cmp
cmp
sbb
outs
div
push
cdq
out
push
fcomp
mov
xor
jecxz
or
jle
ss
cmp
dec
aam
shl
cmp
push
out
test
ss
iret
inc
pop
retf
mov
imul
stos
dec
data16
sar
pop
adc
add
dec
cmp
iret
cmp
push
xchg
push
adc
jmp
and
cmp
fs
rol
push
test
push
loopne
push
jne
cmc
push
fdiv
ins
lahf
jnp
sub
les
xor
mov
je
loop
or
es
jmp
mov
(bad)
out
pop
and
mov
jecxz
inc
call
mov
jmp
push
pop
jmp
jmp
xchg
(bad)
adc
add
and
cdq
imul
hlt
mov
data16
lods
movs
adc
and
add
mov
jecxz
inc
pushf
mov
mov
push
leave
test
pushf
xchg
inc
leave
fwait
stos
ret
adc
mov
(bad)
pop
jo
mov
cmp
scas
xor
test
xchg
jl
js
test
inc
add
ja
stos
cmp
jecxz
sbb
adc
stc
mov
ins
pop
mov
lock
sub
push
mov
sub
outs
loop
xchg
cli
add
cld
pop
in
out
xor
cmp
cli
fcmovu
dec
mov
scas
xor
fisttp
hlt
dec
outs
fistp
pop
sub
(bad)
in
adc
push
call
pusha
ds
and
push
sahf
loopne
mov
inc
outs
jmp
mov
cld
out
mov
mul
dec
imul
js
test
ret
pop
loopne
test
mov
sub
xor
fild
popa
mov
fisttp
cmp
or
shr
call
pop
mov
fs
outs
fisub
ret
fldenv
inc
mov
sub
mov
xchg
inc
int
mov
and
daa
les
xchg
ins
lea
test
inc
ins
pop
jle
rcl
cmp
sbb
push
inc
jae
jnp
popf
and
sar
push
(bad)
mov
(bad)
(bad)
out
cmp
ret
sti
daa
xlat
or
aaa
test
imul
push
sbb
pop
retf
loope
inc
rcr
out
in
pop
push
arpl
mov
xchg
mov
xchg
dec
sub
mov
pminsw
and
shl
xchg
sti
adc
jl
push
adc
je
xchg
popa
and
and
jno
addr16
push
or
jbe
xchg
lahf
pop
retf
inc
movs
mov
repnz
cmp
hlt
(bad)
fist
std
xor
not
lods
mov
in
jns
or
or
cmc
jne
rcl
stos
cmpps
sbb
jmp
or
(bad)
enter
stos
cmps
xchg
lahf
arpl
or
(bad)
cli
rcr
xchg
jle
cmps
cmc
je
add
ss
and
jmp
cmp
dec
mov
mov
sbb
jo
sbb
dec
(bad)
pushf
aad
or
lahf
lods
aad
outs
popf
jae
inc
sub
in
sbb
mov
pop
fmul
inc
adc
mov
rcl
enter
xchg
frstor
adc
hlt
or
push
arpl
ss
push
dec
popf
jno
iret
ins
add
xchg
ficomp
lds
fldenv
fstp
pusha
fistp
and
inc
lahf
inc
xor
dec
enter
push
(bad)
push
sub
sbb
sahf
or
ret
aaa
mov
pop
push
cmps
or
adc
jmp
mov
jge
xchg
sahf
jo
dec
jnp
outs
ret
lods
xor
in
pop
jbe
lock
sub
test
out
inc
fs
ins
jns
jmp
es
daa
fdivr
jg
or
push
push
xchg
jp
push
pop
or
enter
retf
pop
mov
test
aad
xor
pop
fnsave
or
dec
loopne
mov
test
fmul
cmc
adc
pop
cdq
mov
cmp
aas
jb
repnz
push
push
dec
stc
rcr
cmp
pop
test
inc
ds
data16
inc
mov
mov
popf
xchg
xor
push
cld
mov
push
int
fiadd
sub
jmp
jmp
out
pop
jmp
add
out
rcl
xor
push
mov
rcl
sub
fist
in
bound
xor
sahf
xchg
jl
(bad)
int3
repz
push
pushf
jle
aad
movs
sub
mov
jo
(bad)
jo
ds
jmp
mov
or
xor
jb
xchg
outs
inc
inc
jmp
cmp
inc
mov
daa
mov
int
mov
ds
mov
test
call
sub
inc
or
loopne
jp
cmp
movs
je
xchg
fs
shl
xor
(bad)
data16
call
loope
test
and
stos
rcr
jp
leave
push
ror
dec
or
clc
cmp
sti
sbb
les
mov
mov
rol
cmp
mov
jp
sub
cwde
ins
xor
rcr
adc
sbb
call
adc
jmp
or
pop
ja
xor
mov
and
xlat
inc
int3
scas
and
cmp
sbb
(bad)
jo
pushw
mov
ins
fwait
in
iret
and
call
sahf
(bad)
sbb
outs
cmp
pop
in
mov
pop
iret
pusha
ret
cmp
mov
pop
mov
inc
ror
stos
(bad)
hlt
cdq
pop
(bad)
or
pushf
and
adc
lahf
iret
adc
cdq
and
dec
inc
adc
cmp
mov
pop
loopne
retf
mov
sub
dec
push
arpl
stc
pushf
mov
scas
iret
cli
pop
out
mov
adc
push
ret
pop
cs
sahf
jge
fdivr
xchg
xchg
scas
xchg
jmp
push
jle
frstor
inc
inc
rcr
sbb
add
sub
fsub
sbb
cmc
fstp
inc
loopne
mov
and
mov
mov
cmp
and
test
and
scas
fstp
xchg
test
mov
and
push
leave
fsubr
test
mov
inc
mov
sub
jge
dec
cwde
jecxz
fsub
rol
cmp
fadd
push
cmp
push
fs
ret
aam
cmps
les
jle
inc
aad
aam
and
pop
or
sbb
jbe
bound
mov
jne
sbb
stos
aam
das
mov
mov
int3
int3
inc
mov
inc
imul
mov
jnp
add
adc
repnz
push
xchg
sbb
icebp
fcom
xchg
push
cwde
sub
xor
jne
ins
lods
retf
inc
arpl
dec
mov
or
cmp
sti
push
cmp
ret
xor
ins
push
mov
ror
lds
mov
jle
aas
sbb
push
sbb
cli
aad
outs
iret
ins
dec
xchg
or
cmp
pop
fsub
and
jmp
push
xor
ins
in
push
cmp
std
in
or
ins
loope
lahf
mov
cs
jle
mov
rcl
cmp
sbb
loopne
jmp
es
test
into
les
xor
outs
xor
xchg
dec
xchg
push
pop
sbb
outs
push
or
jne
jae
sahf
into
jo
cmp
xchg
mov
popa
(bad)
adc
pusha
sbb
fsub
ins
pop
or
lahf
or
loope
pushf
push
add
pop
xor
mov
bound
cmp
stos
ror
xlat
adc
push
push
aad
arpl
jmp
and
mov
sbb
pop
cmp
les
mov
pop
mov
iret
shl
inc
test
lahf
cwde
scas
jno
pusha
add
xor
movs
adc
iret
adc
mov
pop
jle
pop
dec
cmc
inc
mov
mov
ror
pop
push
jl
mov
cdq
jae
mov
bound
(bad)
fsub
add
popf
scas
sub
scas
add
jge
push
pop
sub
fs
add
mov
push
ficom
sub
cli
leave
jge
int3
mov
ins
sbb
rcl
jnp
xlat
or
fnsave
in
jg
inc
pop
imul
mov
pop
and
stos
dec
inc
ds
cmp
xor
bound
xchg
push
pop
outs
test
jecxz
mov
dec
mov
pop
xor
push
mov
xchg
aas
mov
mov
sub
xor
out
ret
cmp
sub
ret
lods
(bad)
pushf
ds
imul
sti
or
xchg
xlat
std
ins
dec
aaa
je
adc
mov
lods
hlt
jp
push
pusha
(bad)
mov
sbb
(bad)
pushf
jmp
add
aas
cmp
out
mov
push
and
pushf
bound
mov
je
vpmacssdqh
mov
in
in
je
push
add
push
add
push
pusha
cli
xchg
pop
std
xor
adc
xchg
mov
inc
sub
cmc
xor
pop
inc
xchg
mov
pop
push
loope
push
rdtsc
jo
das
cmp
pusha
add
stos
cmp
lahf
iret
xor
push
xor
inc
pusha
lock
push
and
movs
xor
xor
push
jbe
imul
pop
cdq
sub
inc
shr
add
out
adc
jle
mov
and
ret
push
loopne
or
xchg
loope
jbe
dec
rcr
out
lahf
(bad)
scas
or
push
mov
hlt
sub
aam
out
std
cmps
ret
jb
adc
dec
push
xor
adc
sbb
mov
dec
retf
jne
mov
out
movs
dec
jg
or
repz
movs
loopne
test
cmp
dec
push
cmp
and
repnz
outs
xchg
ins
fwait
jo
pop
mov
(bad)
cmc
mov
push
cmp
fst
es
inc
adc
sahf
fnstcw
je
jl
or
dec
ret
xchg
gs
xchg
pop
mov
les
repz
jle
pop
inc
sub
cmp
enter
ffreep
out
stos
sti
(bad)
push
rol
pop
mov
xor
mov
push
pop
jno
sbb
mov
pop
or
pop
mov
mov
scas
sub
xchg
stos
outs
mov
jp
xlat
outs
add
enter
dec
iret
xor
add
ret
adc
stc
(bad)
jl
test
sbb
(bad)
mov
stos
aam
jg
scas
lods
sub
sbb
cld
and
push
int
das
(bad)
loop
jb
xor
push
xchg
push
mov
out
inc
(bad)
mov
jno
jno
jb
stc
sbb
iret
stc
cwde
inc
cwde
mov
arpl
inc
stos
fldenv
inc
arpl
cmps
sahf
jle
inc
cmp
fisttp
pop
xchg
out
mov
dec
mov
out
dec
leave
pop
imul
xchg
mov
cmc
loop
adc
and
(bad)
fild
jbe
popf
push
and
sbb
pop
mov
xor
(bad)
jmp
std
fwait
cwde
test
mov
loop
cmps
(bad)
jnp
sub
mov
neg
add
dec
fisub
fcom
pop
mov
cmp
cmp
xlat
out
daa
push
jns
popf
fidivr
inc
cmp
int
mov
(bad)
xrelease
xor
(bad)
push
cmp
repz
mov
pop
das
adc
es
mov
loope
mov
fnstcw
mov
mov
pop
push
aam
xchg
dec
inc
inc
not
js
arpl
daa
fsubp
pop
push
in
push
mov
jmp
iret
scas
inc
adc
dec
test
daa
xchg
xor
fwait
mov
repz
jne
push
daa
push
shl
sahf
addr16
fst
adc
mov
push
je
(bad)
scas
pop
dec
das
in
xchg
scas
call
inc
or
fs
lock
push
or
xor
loop
mov
scas
and
jmp
leave
leave
mov
mov
scas
adc
add
pop
mov
adc
lea
mov
aaa
test
push
or
sti
loope
dec
vmwrite
pusha
dec
loopne
scas
inc
sub
add
and
inc
in
sar
ret
push
das
sbb
ret
xor
sar
jle
gs
sub
xchg
mov
xor
mov
mov
jmp
sub
fs
xor
jge
push
sub
cmp
les
and
lock
or
out
pop
dec
pop
cmp
adc
stos
add
mov
div
mov
inc
jecxz
inc
sbb
inc
xchg
xor
iret
in
or
mov
jmp
in
jae
inc
mov
mov
lods
mov
addr16
push
cmp
enter
test
sub
mov
sub
inc
lahf
enter
cmc
cmp
jg
pusha
icebp
xor
ret
cli
dec
rcr
ret
aam
and
lea
(bad)
jmp
or
fwait
cmp
call
loop
fnstenv
mov
jp
inc
and
cli
fld
pop
or
inc
mov
mov
mov
cmp
retf
pop
sbb
lahf
pop
stos
jp
loopne
sub
add
(bad)
pop
in
imul
sub
repz
sub
arpl
jo
or
jmp
xchg
fild
jo
mov
stos
push
(bad)
mov
or
sar
in
aaa
jne
mov
cmp
loop
lock
sbb
pop
fcmove
adc
pop
call
cmp
inc
lock
sbb
or
jmp
push
sahf
into
xlat
(bad)
fsubrp
adc
cmp
jnp
or
dec
adc
push
mov
aam
fbld
cmp
and
add
aam
scas
ds
gs
sbb
push
and
jo
push
xchg
loopne
jns
or
sbb
clc
mov
ss
pop
sbb
mov
jae
cmp
pop
fiadd
movs
pop
add
cmc
pop
shl
sub
mov
outs
(bad)
pop
xor
push
pop
adc
or
pop
fld
pop
aas
inc
mov
(bad)
dec
rcr
jbe
mov
xchg
push
push
jb
es
bound
or
xor
push
test
scas
bound
in
add
hlt
cmp
clc
cmps
adc
and
pop
push
push
ret
lods
adc
cmc
into
jo
(bad)
lods
stos
outs
sub
jl
shl
aas
sub
mov
jg
adc
xchg
dec
push
repnz
dec
enter
pop
pop
rcr
inc
test
push
pop
jecxz
retf
dec
jno
mov
div
int3
popf
xor
sbb
xchg
xchg
mov
aas
add
pop
loope
ins
jbe
sbb
sbb
ret
inc
push
maskmovq
not
add
popf
xchg
push
jns
fcom
arpl
xlat
xor
xchg
push
shl
mov
adc
push
cld
imul
imul
sub
inc
enter
cdq
push
and
dec
stos
jns
xor
lods
outs
sub
sahf
adc
les
push
mov
jg
cmp
aam
cli
data16
inc
cmps
or
push
sub
lds
cli
jno
mov
jp
data16
xchg
xor
pop
cmp
sub
jno
es
pop
adc
ins
ret
scas
cli
xchg
or
xchg
sbb
dec
mov
outs
xchg
mov
test
cdq
xlat
ins
adc
cmp
pop
mov
xor
dec
mov
pop
pop
mov
ins
pop
in
enter
clc
jns
fcomp
mov
cmp
lahf
jge
pop
push
jmp
stos
and
push
mov
das
dec
pop
xchg
cli
call
and
push
push
arpl
sub
cwde
jno
mov
jae
out
cli
aam
test
int3
add
push
push
xchg
inc
push
fdiv
(bad)
sub
push
test
xchg
sbb
pop
lods
pop
test
and
push
and
xchg
rcr
xchg
push
aas
out
xchg
arpl
(bad)
push
jno
rcr
mov
inc
scas
lods
aad
sub
pop
cmp
lock
cdq
cmp
mov
sub
jmp
or
jae
rcl
iret
inc
test
sub
in
xor
mov
inc
add
lds
and
or
pushf
fnstsw
xor
add
inc
shl
call
(bad)
cld
mov
stos
push
sub
jmp
dec
ret
push
xchg
pop
imul
jmp
push
fistp
push
je
xchg
sahf
mov
lds
bound
push
cs
js
and
(bad)
mov
sbb
rol
mov
fs
or
cmp
pop
imul
push
clc
imul
nop
sbb
mov
test
or
retf
fwait
adc
push
inc
jo
pop
push
or
jb
dec
jne
test
dec
adc
jecxz
call
mov
sbb
mov
sub
ins
mov
mov
pop
mov
or
inc
jl
sbb
cdq
stos
aam
mov
jb
dec
es
jg
pusha
cmps
jne
fst
imul
fsubr
xchg
mov
or
ss
mov
dec
fwait
push
mov
outs
inc
test
dec
das
push
imul
hlt
cmps
jns
call
loop
movs
mov
int
cmps
inc
adc
push
push
xor
push
mov
fcomp
mov
dec
sub
in
inc
push
aad
cmp
push
arpl
hlt
mov
xchg
shr
pop
push
je
jmp
arpl
inc
icebp
(bad)
test
inc
test
ror
cmp
jle
add
pop
and
xlat
push
cwde
das
les
(bad)
push
dec
push
fcmovne
dec
mov
dec
stc
test
retf
mov
leave
stc
push
xor
xchg
and
jnp
out
adc
pop
xchg
rcr
fsub
dec
repnz
dec
mov
aad
cmp
xor
rcl
(bad)
xchg
sti
stc
and
je
lahf
aas
sub
push
jge
imul
pop
pop
out
pop
je
jbe
lds
test
sub
fistp
pop
dec
aas
fistp
leave
sub
and
mov
jp
gs
mov
add
lds
xchg
adc
inc
loop
add
les
jae
in
cmps
leave
mov
cmp
sbb
pusha
adc
mov
test
push
retf
icebp
icebp
test
arpl
push
inc
icebp
push
add
xchg
shr
out
out
sub
mov
(bad)
push
es
dec
sub
js
jmp
jnp
mov
jge
in
ret
add
test
bound
dec
mov
xor
mov
push
add
cmp
das
stos
push
dec
test
mov
adc
inc
sbb
sbb
push
shl
ss
dec
aaa
in
out
inc
cdq
pop
cmp
inc
popa
jp
cmps
xor
cmp
aad
jbe
push
mov
jae
adc
stos
iret
pop
out
jle
dec
cmps
mov
mov
pop
popf
out
xor
or
jbe
pop
ror
pop
data16
jl
(bad)
mov
mov
stos
aas
xor
scas
jnp
out
xchg
pusha
xlat
addr16
sub
cdq
fild
inc
and
inc
jmp
adc
das
jnp
lds
xor
cmp
dec
loope
ins
es
out
or
push
retf
and
ror
mov
jp
shl
add
mov
cmp
imul
lods
or
adc
mov
xlat
sub
pop
mov
pop
add
in
cmp
stos
rcl
fs
dec
iret
add
jp
cmp
push
out
mov
inc
and
mov
test
data16
sahf
sbb
sub
xchg
test
inc
pop
lods
aad
in
sub
push
mov
cmc
ret
data16
adc
adc
mov
and
jne
ror
add
nop
fs
add
iret
sub
adc
mov
or
clc
inc
sbb
jnp
or
mov
cmp
push
xchg
dec
inc
pminsw
sbb
mov
nop
(bad)
xchg
dec
and
or
pop
rcl
into
outs
ins
pop
lahf
or
movs
fucomip
ret
adc
mov
cmp
push
cmp
aam
retf
ss
xchg
lds
xor
outs
push
jno
or
sbb
inc
ja
outs
push
daa
pop
loope
sub
inc
push
sti
xchg
test
xor
lahf
lfs
test
or
jmp
pop
shl
fst
mov
cli
ins
pop
stos
clc
mov
and
mov
and
pop
add
dec
mov
cmp
cmp
inc
les
enter
pop
pop
sti
imul
jne
retf
dec
pop
imul
xor
or
jne
cmp
iret
ror
xchg
lods
lds
shl
inc
call
jle
xor
aam
dec
rcr
mov
pop
cmps
scas
fldcw
mov
dec
mov
mov
or
push
fdivr
push
shl
sbb
(bad)
or
mov
aam
xor
cmp
and
fst
pop
jl
rol
mov
xchg
jle
push
xchg
adc
stos
shr
mov
xor
pop
sub
and
movhps
xchg
cmp
jg
jo
cmp
or
or
xchg
arpl
inc
ret
jmp
jns
or
scas
gs
sbb
stc
cmp
bound
(bad)
mov
inc
mov
jne
fidiv
lock
fmul
inc
imul
or
rcr
shl
fbld
mov
xchg
push
adc
or
inc
sbb
out
in
inc
es
addr16
dec
sti
es
or
and
sub
xlat
fsubp
pop
imul
xor
dec
out
dec
push
stos
pop
daa
dec
inc
shl
daa
(bad)
mov
adc
out
ret
aad
pop
pop
in
loop
dec
mov
aad
ss
dec
and
call
add
xor
dec
fcmove
mov
xchg
xchg
je
in
outs
cmp
aad
add
popf
bnd
add
sub
jmp
lea
cli
scas
jns
pop
mov
add
add
aam
neg
ins
pop
rol
(bad)
out
pop
sub
adc
sahf
loopne
cmc
dec
in
dec
jno
aas
ja
push
(bad)
dec
xchg
int3
mov
rcr
pop
jns
das
mov
in
mov
imul
gs
sub
sar
xor
aaa
call
stos
cdq
xor
enter
ja
or
das
ins
and
in
outs
push
test
xchg
out
jmp
les
mov
xchg
push
xchg
lock
retf
fiadd
cmp
loope
lods
inc
je
dec
call
sub
mov
mov
fs
retf
push
sbb
ficom
xor
scas
loopne
sbb
mov
mov
or
sahf
sbb
jne
rcr
push
push
cwde
imul
movs
xchg
cmp
mov
popf
xchg
pop
jle
mov
sbb
cmp
jo
enter
fnsave
test
push
xlat
pop
inc
icebp
cmps
jge
mov
xchg
sub
gs
cs
jmp
es
stc
bsr
jmp
sub
push
ret
fwait
mul
or
cmc
loop
and
sub
mov
sbb
cmp
test
pushf
cli
mov
dec
int
adc
(bad)
enter
dec
inc
cdq
cs
pushf
lahf
cld
ss
int
sar
leave
add
mov
loop
fs
lods
and
ficomp
push
or
dec
dec
mov
or
iret
movs
ja
jmp
ret
pop
mov
xor
inc
jg
sahf
leave
cmps
test
lds
cdq
jbe
push
push
jne
pop
sar
sub
xchg
cwde
jmp
adc
pop
cs
out
inc
and
or
lods
inc
movs
cmp
test
stc
inc
loopne
ins
fild
jle
rcl
jns
xor
pop
rcl
dec
cmp
push
stos
mov
gs
imul
js
(bad)
mov
adc
cmp
sti
pop
push
mov
adc
cmc
adc
jae
ret
test
es
add
int
aad
test
lods
cmps
inc
ins
jmp
sbb
push
and
xor
mov
cmp
inc
inc
and
mov
and
leave
mov
pop
ins
sbb
bound
mov
cmps
dec
mov
cmp
fbstp
hlt
lods
cdq
ds
xlat
call
pop
ss
fnsave
push
les
xchg
push
inc
loope
xor
imul
leave
test
push
es
outs
or
mov
inc
(bad)
lods
xchg
call
stc
mov
stos
push
out
jns
sbb
loope
dec
js
pop
repz
mov
in
mov
(bad)
xor
xor
pushf
push
sub
xlat
cmp
jmp
sbb
push
mov
jl
push
sbb
es
cmc
push
push
stos
inc
ins
pop
mov
push
pop
push
int3
(bad)
in
in
jno
cmp
ret
or
movs
jmp
(bad)
xchg
daa
adc
add
sahf
repnz
repnz
xor
ret
cmc
xchg
ret
test
loopne
ret
int3
pop
out
jge
xlat
les
mov
mov
inc
(bad)
ins
loop
cmp
ins
push
or
scas
inc
imul
(bad)
mov
and
ror
jne
outs
call
lahf
xor
add
jne
xchg
jnp
jmp
fbstp
pop
cwde
mov
int
pop
gs
dec
movs
fisubr
lods
sub
push
adc
aas
pushf
mov
mov
mov
inc
imul
addr16
inc
lahf
cs
inc
call
mov
sbb
jp
jmp
cld
jns
out
iret
daa
and
pop
dec
add
push
cli
enter
and
pop
mov
test
aas
scas
loopne
jmp
or
jns
or
sbb
cmp
jne
mov
das
inc
mov
(bad)
div
iret
js
sub
call
xlat
jb
cmp
ds
cmp
lock
jp
pushf
ins
(bad)
mov
ret
pusha
and
inc
repz
(bad)
stc
ss
cmp
popf
cmc
mov
xchg
loop
jmp
shl
jo
mov
cmp
mov
in
mov
xchg
sbb
jg
outs
dec
jp
popa
ins
sbb
mov
xor
push
fisub
jns
adc
jb
daa
shr
retf
mov
pop
jp
outs
pop
sar
push
arpl
and
pop
push
mov
std
or
inc
(bad)
sbb
mov
jge
mov
test
es
rcl
inc
mov
shl
outs
movs
rcr
rcr
arpl
mov
inc
sbb
inc
sub
dec
popa
fadd
shl
xchg
xor
movs
inc
xlat
imul
xchg
push
in
clc
inc
sti
sbb
push
xor
push
mov
sbb
ror
(bad)
sbb
out
pop
sbb
retf
mov
rcl
test
dec
mov
or
xor
add
jae
call
push
nop
jmp
(bad)
cmp
inc
jmp
cli
push
sub
ja
mov
mov
push
cmp
mov
mov
cmc
mov
xor
out
arpl
add
mov
into
mov
rcl
adc
mov
ja
push
xchg
imul
dec
mov
nop
imul
in
in
(bad)
mov
cmp
pop
shl
add
mov
fmul
mov
inc
mov
cli
gs
(bad)
mov
pop
loope
movs
hlt
sbb
out
push
lds
stc
pop
mov
cdq
xchg
scas
adc
pop
mov
adc
push
loop
cmps
xor
add
sbb
rcr
test
or
js
lahf
push
mov
scas
inc
pop
cdq
xchg
jae
cdq
jle
lea
and
cmp
repnz
xchg
xor
retf
and
add
and
dec
and
or
xchg
inc
mov
(bad)
aad
sbb
out
jmp
ins
mov
cmp
push
mov
sbb
cmp
rol
inc
(bad)
mov
sub
sbb
jmp
pop
into
fnstenv
mov
dec
pop
retf
push
add
xlat
outs
out
or
hlt
or
retf
rcl
leave
bound
repnz
test
addr16
sbb
mov
fnsave
icebp
xchg
jle
(bad)
test
cli
fild
inc
jbe
les
out
mul
stc
jle
enter
pop
mul
leave
xor
fwait
(bad)
mov
mov
cmps
jne
mov
jp
js
mov
icebp
jge
push
pop
adc
or
sbb
push
ret
aad
outs
fwait
jb
inc
(bad)
xor
adc
jmp
int
scas
jno
sbb
mov
sbb
(bad)
aas
fwait
pop
sti
mov
fisttp
arpl
jnp
outs
mov
inc
and
pop
or
xor
push
mov
inc
pop
je
les
or
(bad)
cwde
xchg
or
movs
inc
dec
fiadd
cmc
stos
or
test
sub
xchg
in
in
sub
cmps
cdq
inc
cld
push
retf
cmp
xchg
in
cmp
sahf
lock
sub
cmp
lods
jne
inc
imul
cmps
ins
ds
mov
push
cmp
mov
sbb
xchg
addr16
sub
push
pushf
push
cmp
push
inc
popa
pop
jle
movs
mov
in
std
jno
adc
repnz
or
enter
add
inc
xor
jmp
cld
psllq
retf
aam
lods
dec
fadd
iret
xor
jmp
outs
or
jnp
push
in
push
dec
adc
and
loop
inc
int
mov
repz
mov
mov
xor
inc
mov
in
clc
movs
push
popa
add
cld
adc
stos
(bad)
cmc
push
mov
test
inc
in
nop
sub
nop
cmp
push
mov
cmp
ret
mov
jae
pop
mov
cmc
mov
cmp
ret
mov
leave
in
add
out
or
adc
mov
mov
inc
enter
dec
dec
dec
call
retf
into
in
fwait
pushf
inc
push
or
add
mov
test
or
adc
mov
jmp
gs
sbb
lahf
inc
add
jecxz
rol
push
daa
inc
stos
sar
in
fistp
(bad)
adc
push
push
cmp
fwait
jns
dec
aas
mov
xor
into
mov
cmc
lds
cmps
aaa
push
mov
test
loope
je
lods
test
jge
push
push
mov
(bad)
int
push
imul
or
clc
inc
adc
sbb
inc
out
mov
mov
adc
aaa
cs
sub
(bad)
div
jo
(bad)
leave
(bad)
jg
xlat
daa
fs
popf
(bad)
xlat
retf
rcl
sar
jmp
and
sub
fcom
sub
movs
push
fild
stos
xor
scas
call
push
mov
add
scas
in
test
xchg
pop
imul
lock
and
push
sti
add
push
dec
xchg
gs
(bad)
sbb
xchg
jmp
call
fsub
add
jb
pop
xchg
add
cwde
rcr
fisttp
loop
sbb
movs
push
and
adc
lahf
or
mov
mov
stc
sub
cmps
sub
mov
xchg
cli
test
shl
ins
or
bound
dec
pusha
dec
pop
or
jb
scas
les
pop
and
lods
jb
repz
xchg
aas
das
ret
js
pop
retf
inc
imul
(bad)
xchg
pushf
jbe
iret
mov
push
(bad)
sub
jp
sbb
imul
test
pusha
or
or
sahf
adc
lods
sbb
les
outs
mov
and
mov
pop
call
xor
dec
push
jae
pop
add
add
jmp
lock
xor
cmps
mov
pop
xchg
retf
pop
pop
mov
arpl
mov
stos
adc
into
stc
add
lods
retf
es
lods
or
fiadd
pop
jno
mov
cmp
push
adc
ins
push
fucom
inc
dec
shl
adc
pop
inc
xchg
jns
jnp
and
pop
and
aam
cmp
lock
js
lahf
sar
xlat
cld
mov
push
retf
sti
in
jp
pop
lahf
in
out
and
cmp
(bad)
movs
adc
mov
xchg
test
imul
loope
xchg
mov
clc
mov
sub
xchg
popa
inc
mov
cmp
arpl
imul
shl
pop
jmp
xchg
les
fmul
int3
inc
sahf
cmps
arpl
adc
sub
cmps
cld
mov
pop
adc
or
imul
jns
data16
jo
xchg
ja
fiadd
cwde
or
push
adc
jmp
ins
mov
push
cld
sbb
bound
dec
aas
mov
cmove
push
sbb
in
outs
or
sub
pop
cmp
mov
jl
(bad)
aad
daa
rol
loopne
int3
mov
inc
mov
das
jl
xchg
sub
addr16
call
mov
test
fwait
or
xor
push
cs
iret
xor
in
scas
inc
cmps
xchg
mov
pop
les
cmc
xor
add
clc
ret
jae
adc
ss
push
stos
fwait
xor
pusha
pop
jl
(bad)
xor
cmc
xor
sub
ins
stc
dec
xor
call
lods
lahf
push
pop
jg
ja
dec
inc
shr
leave
cmp
pop
jo
mov
movs
jne
and
gs
mov
out
jo
inc
sbb
jmp
outs
mov
or
rcl
(bad)
sbb
std
shr
jmp
mov
stc
add
fwait
push
mov
inc
mov
cmps
and
xchg
xchg
and
test
cmp
jbe
mov
sub
test
push
fbld
(bad)
and
push
sub
push
sbb
dec
push
jns
inc
inc
ds
jmp
dec
jl
(bad)
aas
inc
jecxz
les
mov
addr16
pop
(bad)
(bad)
outs
cwde
call
clc
outs
push
mov
enter
ins
popa
(bad)
je
movs
inc
imul
xchg
fwait
xor
pop
mov
add
mov
enter
sub
fmul
ret
ins
adc
cdq
inc
adc
mov
nop/reserved
adc
call
pop
xchg
and
adc
outs
inc
xor
jl
std
test
lds
in
dec
cmp
cld
dec
xchg
xor
ror
retf
sbb
sub
add
sub
or
adc
imul
ror
cli
mov
bound
pop
mov
pop
push
cli
jb
add
bound
xchg
push
pop
into
dec
dec
pop
test
sub
test
(bad)
pop
inc
ror
(bad)
jmp
xor
xchg
adc
xchg
adc
mov
xlat
fldcw
sbb
jg
test
test
mov
inc
test
jg
pop
icebp
adc
pusha
pushf
mov
add
rcl
jp
daa
xchg
mov
jb
cmp
div
push
rol
jle
stc
shl
rcl
inc
enter
outs
or
clc
inc
pushf
leave
sub
push
push
mov
dec
in
movs
inc
test
cmp
daa
mov
or
mov
movs
fcmovne
and
cmc
cmps
jb
jne
fcomp
dec
inc
mov
in
in
ss
adc
mov
inc
inc
inc
hlt
push
adc
pop
sti
out
xchg
ins
jge
call
daa
lods
cld
ins
pop
test
mov
mov
and
mov
jo
pusha
jmp
add
imul
inc
mov
jne
add
add
movs
or
repz
cmc
xor
cmp
cmp
xor
adc
jbe
fs
jge
popa
cwde
jns
lea
push
mov
daa
xchg
aas
mov
js
xor
call
push
or
jmp
in
into
pushf
push
push
movs
xor
mov
lahf
mov
imul
cmp
fadd
dec
test
and
loop
pop
in
pop
sar
rol
ja
sub
sub
adc
jecxz
inc
ds
stos
adc
sub
dec
fucom
neg
stos
push
retf
in
inc
(bad)
bound
es
cmc
ret
ret
mov
or
push
pusha
pop
push
adc
sbb
adc
sbb
pusha
inc
or
fucomp
bndldx
imul
inc
sub
and
data16
xor
test
mov
popf
or
aad
cmp
pop
jge
or
mov
ror
out
cmps
ins
push
call
mov
sub
xlat
in
mov
and
(bad)
les
and
cmp
mov
mov
cld
in
sub
(bad)
xor
mov
or
lods
xchg
push
ret
and
inc
test
call
scas
aam
bound
std
sub
pop
ss
and
retf
push
imul
sub
clc
xchg
push
xchg
ds
(bad)
inc
pop
cmp
xor
mov
fmul
std
aad
fldenv
test
test
mov
jae
mov
jae
push
fstp
mov
pop
lds
leave
lods
or
inc
and
pop
iret
xor
jecxz
push
xor
in
jge
jp
ret
jle
dec
pop
call
mov
mov
lea
retf
add
xor
jns
fstp
inc
sbb
ja
mov
int3
ret
gs
inc
cmp
sub
sbb
in
inc
sbb
fnstenv
iret
mov
mov
test
lods
push
mov
ret
jle
sub
(bad)
or
call
xchg
xor
mov
sbb
push
push
outs
loopne
mov
int
test
cmps
xor
sbb
daa
push
out
pop
jecxz
jns
mov
jge
out
(bad)
xchg
pop
sbb
push
lea
cmps
mov
mov
or
inc
push
mov
les
push
es
stos
ss
inc
pop
add
in
mov
mov
jo
ffree
cmc
call
fcomp
mov
push
dec
into
aaa
rol
mov
push
cmp
out
call
or
sbb
imul
les
sbb
(bad)
sti
lods
rcl
mov
adc
dec
fdivr
mov
adc
jno
add
dec
pusha
cdq
and
imul
mov
pop
or
daa
icebp
js
sub
ret
arpl
repz
mov
cmp
leave
dec
aas
pop
lahf
pop
pop
jl
pop
adc
rol
adc
bound
mov
aaa
mov
(bad)
lea
dec
mov
xor
aam
jmp
push
test
xchg
mov
out
jmp
in
pop
cmp
jno
sbb
scas
mov
je
push
jae
imul
push
fcomp
dec
mov
popa
jp
inc
jg
dec
xchg
in
push
mov
xor
stos
mov
xor
dec
xchg
xor
dec
fsub
sub
stc
sub
or
sbb
lds
mov
cdq
xor
hlt
fdivp
cmp
and
jb
mov
pop
(bad)
cmp
push
push
scas
or
nop
lahf
add
cld
xor
(bad)
sti
lock
in
stos
and
mov
call
das
push
outs
std
hlt
fsubp
xchg
dec
div
xor
inc
jp
cwde
push
mov
or
and
into
mov
(bad)
out
pop
jg
outs
mov
push
mov
inc
xchg
and
dec
jmp
pop
jnp
jns
jmp
push
repnz
ret
pop
(bad)
sbb
ror
add
inc
mov
mov
sbb
pop
shl
xlat
cmp
fstp
rcr
fst
push
mov
nop
cmps
push
push
xor
pop
inc
inc
rol
mov
stos
repz
retf
dec
ins
int3
push
(bad)
aad
clc
adc
test
xchg
fs
repz
(bad)
inc
pop
in
aad
ds
(bad)
(bad)
imul
sub
je
ja
inc
in
pop
outs
add
add
xor
cmps
dec
(bad)
rol
in
(bad)
fcomp
sub
rcl
ficomp
mov
xor
popa
imul
fiadd
aam
cmp
cmps
pop
and
adc
ss
mov
int
popa
(bad)
fldl2t
jb
into
ins
cmc
into
pusha
push
inc
jae
mov
lea
pop
mov
ds
mov
dec
aam
push
jns
std
cdq
nop
aam
mov
mov
fistp
shl
cmc
sbb
or
adc
les
fistp
inc
ja
push
lahf
and
inc
mov
out
xlat
idiv
pushf
cmp
fsubr
pop
cld
fsub
add
pop
(bad)
out
mov
fimul
or
sbb
mov
aad
cwde
ret
inc
sbb
sbb
iret
popa
dec
push
pop
daa
mov
mov
pop
fimul
inc
ds
lahf
stos
cmps
adc
call
push
sbb
cmp
ins
scas
mov
dec
mov
imul
aad
loopne
push
add
iret
sbb
cli
add
adc
stc
cdq
and
test
mov
ins
mov
push
push
mov
fs
fisttp
test
fwait
neg
rcl
das
jne
sub
cmc
mov
add
test
xchg
sahf
cld
xor
add
aam
jg
mov
(bad)
pop
sub
cmp
sub
mov
lods
or
inc
aas
aam
fsub
icebp
sub
mov
cli
jmp
mov
xor
(bad)
sbb
jnp
cmp
(bad)
cmp
daa
ss
stos
mov
push
ins
lods
rcl
std
inc
repz
nop
mov
fs
push
xor
hlt
push
xchg
push
out
outs
mov
mov
jp
cmps
adc
push
xchg
xchg
mov
sub
shr
xchg
push
add
inc
and
jmp
aas
ret
adc
dec
mov
fwait
(bad)
jl
or
mov
gs
dec
xor
imul
dec
sub
adc
ret
xor
mov
ins
dec
sub
sbb
xchg
mov
std
cmps
add
jecxz
jo
jns
push
icebp
mov
mov
popa
les
scas
xchg
jge
xchg
and
jae
ja
aas
jl
push
stc
push
ins
int
stos
fcmovnb
lods
sar
sbb
xchg
leave
test
data16
aam
sar
call
ins
inc
rcl
imul
(bad)
frstor
add
cmp
push
or
lea
pop
sbb
pop
add
mov
(bad)
aaa
adc
pop
call
inc
mov
sub
mov
sahf
push
ins
inc
push
dec
shr
jb
call
sbb
jmp
scas
loop
mov
retf
push
test
cmp
in
(bad)
push
das
mov
or
hlt
sar
enter
sub
sub
stos
push
shl
dec
out
(bad)
call
add
push
adc
loope
call
pop
sub
fadd
test
lods
fwait
test
inc
dec
push
push
icebp
retf
or
stc
hlt
or
push
xchg
sub
mov
sub
arpl
ss
jge
sub
adc
and
lods
mov
fsubr
xchg
call
mov
pop
lods
mov
cli
cmp
cs
mov
xchg
(bad)
or
ret
xchg
pop
lock
add
sbb
pop
imul
and
sbb
adc
xchg
dec
pushf
jge
adc
mov
pop
mov
push
pop
mov
loopne
imul
xor
test
movs
arpl
int3
scas
add
fwait
addr16
imul
cld
or
mov
add
repz
scas
sub
jle
fisub
and
inc
rcl
ret
ss
push
out
adc
or
enter
shr
push
add
cld
stos
cmp
ins
sbb
pop
int3
test
retf
sar
out
fs
cdq
mov
xor
jge
inc
sub
xchg
cli
stos
xor
retf
add
arpl
add
sahf
adc
ins
xchg
(bad)
adc
dec
in
inc
test
js
js
sub
std
(bad)
sahf
jbe
pop
imul
mov
jecxz
mov
not
or
inc
mov
repz
xchg
ins
sbb
fs
mov
pop
jmp
shr
mov
das
cmp
and
aad
cmp
dec
out
adc
inc
inc
mov
(bad)
or
ins
out
sbb
test
mov
cld
in
fsub
push
and
retf
rcr
and
(bad)
xchg
cld
push
aas
into
dec
fnstsw
cmps
test
loopne
add
cmps
xchg
xor
mov
cli
sbb
push
cmp
push
or
jnp
lods
(bad)
sbb
inc
in
jb
lock
or
mov
push
cmps
sub
pop
rcr
adc
imul
pop
mov
dec
xlat
(bad)
add
push
idiv
jbe
sub
mov
ret
data16
push
(bad)
push
add
push
popf
mov
sub
neg
jo
jmp
stos
outs
add
das
fdivr
mov
pop
in
(bad)
xchg
cmp
pop
mov
rcl
aad
arpl
ja
retf
into
or
sub
xchg
mov
jns
loop
push
xor
pop
push
push
pop
enter
(bad)
mov
pop
shl
mov
into
jge
outs
pop
shl
dec
push
push
in
loope
popf
inc
adc
cs
out
rcr
push
push
repnz
xchg
out
outs
outs
add
repz
stc
mov
adc
jnp
lods
into
imul
jl
dec
sbb
dec
fwait
scas
adc
repz
enter
inc
loopne
ds
jg
pusha
sub
imul
adc
push
lods
inc
inc
mov
nop
dec
arpl
enter
mul
cmps
mov
addr16
aas
test
int3
dec
mov
xchg
ins
test
adc
adc
aas
cmps
push
out
and
jp
xor
inc
push
int3
mov
lock
xchg
loope
dec
les
lds
push
popf
les
sub
cmp
cmp
xor
les
mov
test
psubsw
pop
loopne
lods
jnp
mov
sbb
mov
and
cmp
shr
or
in
mov
xchg
outs
shld
daa
outs
adc
cmp
xchg
cmp
hlt
inc
push
bound
dec
dec
jb
mov
or
aas
sub
and
pop
dec
xor
scas
xlat
imul
cld
dec
mov
fidiv
scas
mov
xchg
or
jp
test
mov
push
xchg
add
sub
push
sub
fist
push
cs
adc
int3
outs
jl
cmps
jno
add
xor
pop
arpl
aas
and
icebp
cmc
push
pusha
jl
lds
sbb
cmp
push
(bad)
mov
ret
mov
inc
aaa
dec
sbb
mov
test
jne
push
mov
(bad)
cli
pop
mov
pop
mov
outs
(bad)
nop
enter
push
cli
js
pop
cmp
inc
mov
fst
out
jno
xor
adc
and
adc
sub
cmp
or
lahf
adc
xchg
fcmovnb
dec
rol
jno
gs
popf
adc
(bad)
xlat
dec
cmps
inc
jl
inc
(bad)
mov
or
push
and
test
fistp
cmp
(bad)
jl
out
scas
xlat
push
cmp
cs
out
mov
clc
or
ins
gs
(bad)
scas
aaa
(bad)
out
xchg
and
mov
xchg
adc
xchg
sbb
int3
push
sub
and
out
sbb
scas
int
ror
mov
dec
sub
test
adc
test
mov
dec
pop
and
sbb
repnz
mov
ins
cmps
dec
cmp
cdq
enter
mov
sbb
cwde
neg
pop
pushf
lahf
iret
pop
xor
pusha
add
lock
lods
push
mov
and
ficom
cmp
or
cdq
adc
xor
xchg
ret
test
or
adc
xchg
test
xor
push
jmp
mov
call
jl
and
or
in
xchg
outs
inc
aad
pop
pop
xchg
stos
lahf
es
cdq
mov
repnz
test
add
aad
cmp
inc
ret
inc
pop
hlt
arpl
or
mov
mov
pusha
add
and
xor
test
xchg
or
fsubr
xor
jo
outs
shl
xchg
xchg
cmp
jne
push
aam
mov
fcomp
dec
pop
inc
jmp
inc
(bad)
repz
mov
inc
pop
idiv
fadd
push
fild
inc
mov
adc
ror
ins
int3
mov
or
fmul
cmp
mov
mov
pop
push
pop
xor
int
ja
mov
mov
pop
and
pop
mov
push
movs
pop
test
and
cli
out
lock
mov
adc
push
movs
push
dec
jnp
adc
ins
loop
xor
adc
das
fdivp
(bad)
das
ss
mov
cmp
pop
mov
loopne
inc
ss
mov
hlt
dec
test
ret
fs
ins
xor
movs
add
inc
les
push
sbb
addr16
ss
fldenv
cmps
mov
out
jge
inc
jl
nop
jp
xchg
or
sbb
sub
xchg
les
jns
inc
xor
pop
sbb
jmp
adc
cwde
cwde
mov
cmp
or
or
sbb
(bad)
mov
test
mov
inc
cmps
add
loopne
push
mov
or
inc
dec
xor
cmp
test
pushf
test
ds
in
loope
inc
dec
iret
cmp
fild
sub
fld
data16
pusha
test
adc
fs
das
imul
mov
in
adc
out
mov
or
pop
or
xlat
in
push
mov
pusha
jmp
fdivr
pop
mov
dec
push
dec
(bad)
shl
into
hlt
int3
mov
inc
dec
inc
sub
xor
adc
xlat
adc
xor
jnp
daa
add
mov
sbb
and
dec
sar
outs
and
jecxz
jnp
xchg
gs
imul
cwde
lds
dec
sub
pop
and
mov
loope
add
mov
into
cmp
cmp
push
dec
sbb
push
mov
cmp
scas
sub
ret
jle
cs
mov
pop
push
das
jg
ret
fstp
icebp
aaa
daa
push
test
and
xchg
and
mov
mov
cmp
inc
pusha
jnp
les
and
adc
test
loop
mov
arpl
call
es
sti
mov
add
xbegin
mov
test
fidiv
push
cmps
je
(bad)
adc
cwde
dec
cmp
and
arpl
mov
pop
mov
cmp
xor
mov
xchg
dec
leave
mov
jmp
hlt
push
push
rol
lds
adc
push
(bad)
imul
pop
pusha
rol
or
push
push
push
xchg
sbb
dec
fstp
retf
and
dec
faddp
shl
das
push
pop
xlat
jp
std
xor
sbb
(bad)
scas
retf
mov
call
cmp
push
cmp
leave
xor
repnz
bound
jbe
jmp
ins
xchg
leave
mov
cmp
fwait
outs
sti
lahf
adc
in
(bad)
or
repz
xor
sbb
dec
int
add
pop
or
retf
xchg
call
mov
arpl
aad
aad
push
adc
scas
mov
sbb
jb
ret
mov
shl
bound
push
add
add
mov
jae
sbb
out
fs
push
pop
retf
ret
pop
cld
into
inc
dec
or
icebp
imul
push
out
stos
sbb
(bad)
push
test
imul
push
mov
outs
cmp
in
out
mov
in
jne
xor
loope
cmc
out
push
lds
sti
ret
mov
in
lock
pop
repz
push
(bad)
cmc
(bad)
fdivr
data16
inc
jbe
inc
and
outs
pop
and
test
sar
out
jne
xor
jmp
inc
dec
repz
jmp
sub
sbb
clc
jle
fisttp
movs
lock
xchg
mov
dec
dec
pop
push
cmp
cmp
dec
ficomp
adc
push
and
es
hlt
pop
bound
xchg
cmps
mov
mov
cmp
sete
test
sub
enter
add
shr
pop
pop
pop
xchg
mov
(bad)
loope
jmp
mov
imul
mov
push
pop
imul
push
(bad)
shl
mov
jae
leave
mul
pop
jo
xor
mov
std
stos
daa
clc
ror
(bad)
jo
inc
sub
cmp
sub
fstp
aam
outs
mov
pop
adc
mov
mov
add
dec
ins
outs
cmp
or
push
xchg
pop
pop
dec
in
movs
push
ins
pop
lods
pushf
in
push
mov
aad
sbb
jl
xor
pop
addr16
push
xor
push
lock
test
lds
jge
shl
fsubr
imul
mov
jg
(bad)
xlat
mov
sub
lods
mov
mov
inc
pop
inc
mov
ss
aas
aad
ja
(bad)
jns
loopne
mov
fcomp
dec
and
iret
push
movs
cs
xchg
ficom
pop
mov
xchg
lds
out
inc
imul
aad
movs
loop
adc
(bad)
cld
adc
or
outs
test
mov
and
adc
adc
(bad)
fstp
lahf
add
fistp
movs
xor
hlt
adc
fdivr
fadd
or
sub
and
hlt
das
pop
xchg
sbb
(bad)
in
or
jecxz
lock
fnstcw
stos
call
dec
mov
pop
pop
sbb
jmp
(bad)
les
dec
push
lock
test
mov
push
pop
cmp
(bad)
push
sahf
cmp
test
inc
ja
addr16
mov
add
inc
jmp
in
daa
sub
mov
or
fstp
into
push
(bad)
mov
dec
scas
xchg
push
nop
in
aaa
jg
in
inc
lods
pop
dec
push
rol
adc
stos
pop
scas
inc
push
pushf
fadd
inc
outs
jl
or
ret
add
addr16
nop
minps
xchg
ret
mov
mov
sbb
mov
and
fadd
lahf
pop
rcr
push
jno
mov
pop
out
push
sbb
mov
outs
push
arpl
sub
jmp
or
loop
and
icebp
repnz
repnz
aas
xor
cmp
or
xor
sbb
xchg
jle
xchg
inc
dec
ficom
outs
icebp
gs
lods
repnz
sbb
retf
sub
sbb
shr
push
dec
jl
push
in
ror
jle
push
xor
ror
sbb
ds
lahf
fdivr
sbb
dec
movs
retf
add
xchg
leave
and
hlt
icebp
add
retf
cdq
jbe
sbb
jmp
in
dec
in
sub
jge
inc
jns
mov
aam
ja
mov
mov
mov
inc
push
mov
fndisi(8087
popa
test
dec
inc
and
jno
cdq
sti
and
imul
and
hlt
and
pop
dec
pop
lods
ds
push
xlat
sbb
mov
push
mov
sbb
push
push
jbe
jecxz
sbb
push
loope
ins
dec
shl
add
(bad)
fwait
ja
cmp
sbb
sbb
enter
ja
aas
push
add
stc
xor
mov
mov
int3
or
(bad)
inc
xor
dec
cmp
mov
xor
mov
test
iret
inc
stc
shufps
adc
aas
mov
sub
popf
call
jnp
pop
ret
inc
and
pop
inc
inc
xlat
lods
in
mov
sbb
dec
dec
bound
in
jno
sar
(bad)
popa
lods
pop
sbb
add
lock
cmp
xlat
cmp
fs
xor
jp
pop
faddp
in
xor
test
and
(bad)
xchg
pop
jnp
and
mov
sub
mov
aad
lods
add
imul
std
ret
aas
pop
cmp
lods
sub
sub
fwait
cmp
gs
std
fcmovne
mov
popf
(bad)
jo
and
xchg
or
fist
out
push
sub
outs
mov
push
ret
jbe
(bad)
ds
ins
dec
loope
push
sub
mov
ins
retf
pop
int
lea
inc
xlat
fs
mov
in
in
cwde
sub
xchg
add
mov
mov
stos
push
push
(bad)
outs
push
mov
test
call
retf
sbb
xor
les
inc
push
jp
rol
or
mov
dec
xor
test
push
rcr
mov
movs
cmp
div
jl
dec
loop
cmps
in
fcomp
cmp
fcom
jbe
jmp
dec
inc
cmp
jmp
popf
scas
pusha
jae
scas
or
mov
repz
outs
addr16
shl
cmp
popa
xor
movs
adc
sub
jmp
mov
and
(bad)
fwait
(bad)
fwait
adc
xchg
loope
push
mov
mov
fnstsw
inc
and
jg
leave
bnd
clc
pop
jb
xchg
dec
xor
sbb
push
movs
pop
(bad)
push
rol
pop
shl
fstp
cs
jb
stos
test
jle
xchg
fist
retf
ror
dec
lods
xor
les
stos
scas
data16
imul
mov
jl
jo
cmp
ins
(bad)
clc
fdiv
in
outs
mov
hlt
jnp
rep
(bad)
sbb
test
stos
xor
pop
push
inc
pusha
push
mov
jne
push
sar
fimul
push
jbe
fcmovu
clc
fstp
test
mov
leave
call
sub
pop
and
std
pop
stc
hlt
(bad)
inc
sti
outs
fnstenv
out
outs
fnstcw
or
mov
dec
movs
ror
xchg
pop
sub
out
xlat
in
add
std
pop
cmp
test
xchg
sbb
in
sbb
fcomp
fs
repnz
stos
cmps
or
shr
sbb
icebp
jo
inc
mov
adc
sub
xor
cmp
repz
jns
(bad)
xchg
and
bnd
and
mov
lods
test
ret
mov
movs
leave
aam
pop
ret
mov
mov
and
cmps
call
and
out
ins
outs
bound
les
enter
pop
or
mov
and
push
jae
sub
es
adc
aaa
and
cmp
imul
and
pusha
mov
test
sub
hlt
push
push
call
aad
sub
mov
jmp
or
dec
cdq
dec
div
and
shl
jb
and
jae
or
(bad)
icebp
ds
fisttp
or
mov
xchg
mov
mov
adc
mov
nop
loop
js
cld
out
pop
jle
inc
jb
movs
daa
add
xor
inc
ja
out
mov
sti
xchg
stc
cmp
lods
sbb
cmp
icebp
mov
inc
dec
cmp
add
out
ret
jae
in
lahf
xchg
mov
cmp
shl
mov
clc
mov
xchg
shr
push
xchg
int3
int
cmps
gs
or
cmps
sub
test
sub
ror
xor
stos
es
xor
icebp
cmp
enter
xchg
push
(bad)
stc
inc
push
aam
push
dec
icebp
neg
iret
inc
gs
cmc
and
aas
adc
aas
shl
fldcw
add
std
leave
dec
pop
and
or
add
xor
pop
dec
jg
and
pop
xor
(bad)
or
stc
cwd
add
test
and
sbb
(bad)
pusha
retf
add
mov
bound
call
ss
mov
jg
mov
fs
inc
dec
(bad)
fst
aaa
cmp
shl
clc
cmp
adc
adc
jl
cmp
stos
cmp
xchg
retf
popa
inc
repz
jbe
mov
repz
push
jno
call
int3
cmps
fbstp
add
fbstp
add
inc
push
aaa
addr16
leave
pushf
inc
or
dec
push
push
retf
add
shr
ret
daa
inc
not
jae
shl
or
pop
push
ror
mov
or
xchg
adc
(bad)
mov
add
cmps
call
sub
cmp
inc
pop
and
lea
mov
dec
mov
add
pop
int
inc
dec
ins
push
(bad)
aad
leave
aad
ja
mov
fwait
pop
dec
dec
and
(bad)
in
pop
inc
and
sub
push
dec
add
arpl
outs
cmps
inc
push
inc
dec
sub
dec
cmps
ss
xchg
cmps
xchg
stos
pop
ret
xchg
xchg
mov
xchg
shl
arpl
lods
enter
fs
call
inc
pop
pop
and
pop
jnp
sbb
dec
dec
jno
jp
mov
(bad)
(bad)
jp
mov
stos
pop
pop
leave
jno
fdivr
xor
inc
sub
xchg
gs
es
inc
jnp
cs
leave
sar
jp
pop
xchg
inc
jecxz
xchg
cmp
imul
jns
and
(bad)
push
fwait
pop
jl
mov
fst
je
jge
rcl
add
jns
loopne
mov
imul
cs
and
popa
xchg
cdq
in
cmp
jb
pop
aaa
fcomi
dec
cld
clc
retf
add
mov
inc
xchg
push
int
or
popf
inc
out
ins
cmps
mul
pop
cli
lods
inc
mov
add
bound
jmp
iret
leave
das
pop
push
mov
or
jne
mov
mov
pop
xor
bt
add
dec
xlat
dec
loopne
xchg
pop
cmc
fs
leave
nop
test
shr
mov
mov
sub
add
sti
and
addr16
aaa
ss
inc
retf
iret
sub
xor
jl
dec
mov
pop
inc
or
jbe
das
ins
out
(bad)
jmp
outs
jo
lahf
std
push
inc
push
(bad)
scas
adc
(bad)
jg
xchg
cmc
in
pop
push
sub
in
inc
cmp
push
call
nop
into
test
sbb
fdivr
sbb
dec
inc
dec
and
gs
or
mov
test
pop
rcl
jbe
ret
out
or
dec
test
repz
or
pop
dec
dec
xor
(bad)
and
mov
jb
inc
das
ret
xchg
mov
and
out
dec
fs
jns
aam
push
or
mov
call
pop
mov
aas
aad
into
inc
ret
je
sbb
push
mov
out
cli
add
pushf
add
xor
ds
out
xor
outs
jmp
pop
mov
test
int
loop
icebp
xchg
jge
pop
jb
out
jge
aad
ins
xor
sub
inc
clc
ds
je
jmp
add
xor
dec
into
sub
xor
push
fadd
in
mov
test
shl
sar
fwait
lea
inc
out
test
mov
mov
dec
push
jae
(bad)
add
mov
mov
shr
fisttp
test
add
and
je
jo
retf
adc
or
cmps
mov
push
add
neg
outs
(bad)
cmp
inc
inc
sub
movs
jne
ffreep
mov
add
inc
imul
std
push
inc
inc
sub
popf
sub
xchg
jmp
pusha
inc
push
leave
or
pop
push
jle
mov
adc
lahf
jge
je
xchg
dec
dec
mov
lods
push
stc
popf
ja
fadd
push
mov
icebp
clc
fidivr
cmp
ins
sar
xor
mov
bnd
dec
push
aas
cwde
loope
jge
test
mov
sbb
adc
jl
push
mov
add
jmp
inc
jecxz
xchg
(bad)
mov
int
call
jmp
movnti
retf
cmc
repnz
or
sub
push
mov
and
add
out
dec
push
sbb
gs
cmp
push
stc
data16
push
adc
xchg
mov
cmp
jns
test
popf
pop
and
adc
jge
ins
lahf
xlat
int
test
fsqrt
dec
mov
stc
mov
push
mov
fs
imul
jno
imul
lods
adc
sub
mov
retf
call
inc
(bad)
in
inc
xchg
cmp
int
repz
ds
into
pusha
(bad)
stos
(bad)
or
jp
outs
sbb
pop
adc
cmp
add
dec
pop
push
fsubr
and
sbb
lahf
jae
xchg
stos
(bad)
stos
xor
or
or
sbb
cdq
imul
and
inc
imul
gs
pop
popa
push
inc
or
mov
int3
fs
lahf
int
pop
fst
sub
(bad)
dec
push
adc
jl
mov
xchg
fadd
push
clc
lods
movs
idiv
sub
cmp
mov
lahf
lds
fcomp
jae
hlt
mov
addr16
mov
or
aaa
fs
aad
lods
aaa
fst
push
test
movs
push
pop
xor
adc
jb
sub
inc
stos
cwde
mov
lods
lds
push
xchg
mov
push
add
dec
sbb
cmp
mov
xchg
xor
test
mov
mov
loopne
jmp
fsub
dec
jg
bound
fiadd
sahf
pop
data16
or
xor
aad
(bad)
les
int
xchg
lods
push
cmp
loope
clc
and
daa
xlat
or
fld
jle
mov
cmp
push
cmps
into
cmp
shl
and
popa
adc
jo
adc
xlat
sbb
retf
xor
push
(bad)
in
dec
xchg
call
es
es
xor
out
adc
adc
jns
sbb
cmp
or
jge
scas
sub
push
adc
xchg
ins
dec
pop
mov
jg
jmp
imul
adc
push
jnp
fistp
jg
in
outs
inc
cs
sbb
mov
mov
movs
jp
repz
pop
mov
les
or
jle
push
xchg
cmp
adc
lods
cmp
sbb
xlat
push
dec
lods
or
aas
pop
and
repz
arpl
iret
mov
adc
adc
dec
aam
jo
mov
aam
cmp
or
ja
pushf
fbld
imul
lods
cmps
(bad)
popa
push
lods
out
mov
mov
jg
xchg
aas
aaa
push
hlt
cs
sub
mov
fwait
call
sub
dec
jmp
ror
push
pop
sub
(bad)
xlat
cld
mov
mov
ins
ss
cmc
fidiv
and
adc
mov
test
icebp
test
push
mov
movs
push
pop
pop
icebp
adc
lock
and
adc
xor
push
rcl
loop
cmps
or
test
cwde
jp
pop
fcomp
xor
mov
pop
cmp
dec
mov
and
pop
(bad)
int
in
lock
push
retf
into
cs
stos
out
mov
and
cwde
call
dec
jp
bound
dec
jno
mov
pop
jbe
push
add
jnp
push
inc
iret
mov
lea
push
icebp
xor
lds
out
push
or
in
psubb
fsubr
sub
xchg
into
pop
pop
mov
retf
dec
pop
cmps
jecxz
jb
fwait
test
loope
sub
sti
popf
sub
fadd
cmps
(bad)
cmp
loope
pop
dec
cwde
pop
ror
(bad)
adc
inc
jne
inc
icebp
push
(bad)
or
cmp
hlt
mov
dec
mov
push
pop
(bad)
pop
add
mov
xlat
push
sbb
lahf
mov
repnz
je
and
pop
sbb
or
xor
xlat
pop
push
sahf
lea
mov
daa
adc
jnp
shl
ins
push
fucomi
imul
xor
shr
(bad)
enter
xor
and
mov
push
add
push
fbstp
sub
in
cdq
mov
fwait
call
sti
xor
cmp
mov
mov
ss
loopne
inc
call
add
neg
popf
jg
test
cmp
(bad)
jbe
loopne
mov
xor
nop
cmp
or
pusha
inc
xchg
shl
mov
fidiv
fs
push
jl
mov
ja
cmp
adc
xor
scas
ja
mov
lea
clc
pop
inc
scas
test
bound
cmc
in
push
add
pop
iret
jle
mov
dec
mov
stc
pop
xchg
fild
sub
pop
inc
push
int
arpl
mov
dec
mov
inc
gs
adc
iret
sar
mov
xor
xor
mov
rcr
fbld
or
test
addr16
push
test
arpl
ficomp
in
adc
(bad)
mov
or
jle
mov
jae
test
sti
push
jo
xchg
add
pusha
int3
fcom
test
pop
outs
mov
mov
fbstp
pop
mov
test
xlat
fdivr
aas
inc
cmp
dec
lods
sub
scas
pop
(bad)
stos
dec
add
pop
imul
fistp
(bad)
fst
into
dec
ins
mov
mov
pushf
jp
sbb
sub
je
fild
out
ret
sub
xor
test
xchg
cmps
popf
iret
lods
repz
or
out
sub
inc
movs
add
ror
sar
inc
push
lahf
inc
js
push
fmul
add
xchg
xchg
adc
lea
pop
into
fld
repnz
push
iret
jle
test
cmp
jle
fld
addr16
sub
mov
dec
push
mov
std
fcom
sbb
pop
ficom
mov
adc
fidiv
or
sbb
cli
ret
ins
adc
xchg
mul
leave
xor
xchg
and
iret
ins
dec
dec
pop
dec
add
mov
xchg
xchg
(bad)
leave
cmc
sub
test
aad
mov
outs
pop
jg
jnp
iret
jmp
xchg
pop
dec
xchg
mov
outs
jge
int
mov
push
sub
and
jle
dec
jecxz
fst
lods
mov
xor
ins
mov
bound
repz
ja
pop
lahf
dec
rcr
daa
inc
xor
adc
cmp
and
mov
test
stos
pop
ins
xor
pushf
mov
dec
mov
data16
sub
call
or
jnp
inc
aad
jae
jmp
test
dec
pop
loopne
add
lock
dec
fcmovbe
imul
inc
(bad)
dec
mov
call
cmp
arpl
and
jne
xor
cmp
hlt
or
mov
pop
dec
fnstenv
lds
arpl
push
adc
xchg
fldcw
pop
mov
stos
in
int
pop
aad
popa
icebp
test
out
jo
retf
mov
xlat
xor
fisubr
in
pop
xor
imul
add
mov
in
pop
mov
lock
fidiv
(bad)
data16
sub
inc
adc
stos
movs
sub
or
pop
mov
sbb
not
ret
(bad)
jg
pop
mov
sar
loop
xchg
shrd
inc
push
aad
div
outs
adc
pop
retf
movs
and
push
out
inc
or
inc
mov
mov
outs
adc
sti
vsubss
jle
jle
aas
mov
lock
adc
mov
mov
adc
cmp
in
lahf
dec
ret
neg
or
mov
and
int
sahf
or
xor
sbb
cmp
outs
xor
in
out
push
retf
sub
stc
test
mov
adc
sub
sbb
inc
dec
cld
cmps
adc
in
mov
call
icebp
in
mov
xor
xchg
dec
movs
dec
push
adc
out
inc
mov
mov
mov
xor
push
pop
sbb
ret
mov
scas
or
shr
imul
in
jg
aam
imul
add
vpaddsb
rol
fwait
push
jp
push
or
fnstsw
xor
je
sbb
cmp
sbb
js
sub
jne
in
sbb
stos
mov
or
clc
(bad)
jnp
(bad)
fmul
int3
mov
dec
dec
ror
push
lds
adc
push
push
out
inc
or
xchg
cmp
rcl
push
mov
out
popf
cld
sub
mov
mov
ds
pop
cli
test
or
loop
xchg
mov
push
stos
outs
dec
or
icebp
sbb
inc
mov
sbb
data16
sub
clc
ret
mov
jecxz
out
push
pop
sbb
push
inc
jmp
into
add
xor
(bad)
jge
out
mov
ins
movs
pop
mov
pop
push
inc
push
jp
aas
lds
cmp
push
pop
jge
mov
in
into
iret
fsubr
rcr
aad
(bad)
mov
in
jge
cmp
sub
(bad)
mov
pusha
mov
into
jle
sbb
inc
aad
jns
add
out
stos
jge
dec
jae
and
inc
mov
out
stos
push
push
cmp
push
or
fbld
rcl
lahf
retf
sbb
jnp
into
cmp
mov
int
ret
and
scas
cwde
leave
push
fwait
xchg
sar
lods
enter
ror
jo
mov
pushf
lds
xchg
call
test
push
cmp
adc
mov
mov
std
adc
loopne
or
jp
adc
loopne
adc
pop
mov
push
mov
mov
push
inc
add
int
test
dec
popa
mov
stos
out
fcomi
jmp
das
ret
outs
pop
rcr
sub
dec
add
daa
lods
mov
sahf
por
repnz
out
adc
cmp
cmps
in
xor
xor
inc
xchg
sub
dec
arpl
pop
mov
push
lods
rol
and
aad
in
mov
data16
data16
jnp
scas
jg
push
imul
retf
fisubr
test
iret
nop
fwait
shl
xor
les
mov
in
jmp
cmp
mov
popf
jne
(bad)
cmp
addr16
loope
in
sub
push
add
daa
fdivr
jno
cmps
add
add
aaa
(bad)
test
mov
xlat
(bad)
mov
leave
push
adc
(bad)
fmul
adc
call
dec
or
or
call
dec
jns
add
ret
in
gs
xor
add
fild
add
inc
(bad)
pushf
xchg
push
sub
jno
pop
arpl
or
jne
aas
jnp
aas
push
(bad)
js
xor
dec
or
jne
bound
cld
mov
jp
leave
imul
push
int
loop
loop
or
(bad)
ffreep
arpl
pop
cdq
jp
cmc
dec
xor
push
in
jl
dec
test
and
sbb
and
mov
div
aaa
aam
rcr
mov
dec
adc
lock
jns
ror
imul
xchg
(bad)
push
push
or
mov
mov
ret
cmp
hlt
sub
fsubr
xchg
cmp
and
mov
pusha
lods
(bad)
or
mov
inc
xor
(bad)
pop
push
cmps
hlt
ret
jge
lds
jge
ja
mov
inc
jae
(bad)
jns
inc
out
outs
cs
scas
xchg
iret
fimul
sahf
add
test
sub
jmp
add
iret
xchg
dec
jns
mov
fdiv
dec
mov
and
push
fwait
push
inc
inc
aam
add
cmp
sub
(bad)
frstor
stos
mov
adc
in
push
sbb
adc
movs
and
data16
sub
(bad)
gs
call
pop
je
std
xlat
fild
lods
cmp
dec
sbb
lods
retf
push
jmp
les
dec
(bad)
xor
sub
mov
cwde
sub
push
(bad)
sub
ins
lds
outs
push
jecxz
stc
cdq
mov
mov
xor
jnp
jo
sahf
adc
cmp
loope
loop
mov
dec
and
ret
in
xor
cmp
and
sar
lahf
pop
mov
adc
pushf
call
stos
shr
or
xor
push
ret
call
mov
push
fstp
inc
repnz
sbb
sub
jno
bound
dec
push
(bad)
cmp
sub
bound
xor
mov
and
call
pop
aam
retf
packuswb
cli
dec
cli
sbb
jmp
leave
add
jle
inc
and
mov
(bad)
cmp
jecxz
adc
cwde
jmp
ret
ins
(bad)
xor
xchg
leave
push
jno
push
fisttp
xchg
xor
sub
repnz
aam
out
jle
outs
or
sub
adc
jle
push
aaa
cld
(bad)
in
imul
lods
mov
or
inc
es
imul
fiadd
cmp
mov
jbe
cli
ret
push
sub
inc
(bad)
out
xor
add
(bad)
mov
push
mov
xchg
loopne
out
(bad)
cmc
adc
loopne
rcl
bound
push
jmp
xor
lods
mov
dec
xor
mov
cld
test
mov
inc
jl
push
mov
jecxz
neg
add
sub
sbb
push
(bad)
aam
out
jns
(bad)
push
jg
and
mov
js
(bad)
and
add
fadd
fisttp
scas
mov
push
je
mov
mov
neg
xor
popf
ja
sub
out
inc
xor
and
shl
xor
ret
inc
xor
xor
popf
mov
dec
cmps
test
or
inc
lds
jbe
cld
xchg
cmp
int
dec
retf
ins
jb
dec
shr
lea
sub
cwde
in
sub
(bad)
fld
xor
dec
aas
out
pop
jnp
mov
pusha
ret
in
jmp
jns
xor
push
arpl
mov
and
int
retf
mov
mov
pop
sbb
adc
cmp
xor
outs
inc
sub
icebp
(bad)
jns
xor
sub
fadd
movs
jbe
inc
(bad)
jge
adc
cmp
jl
and
bound
xchg
sbb
push
rol
cdq
pop
add
mov
popa
inc
imul
inc
mov
or
push
push
mov
in
cwde
scas
test
call
ss
ret
sbb
movs
and
(bad)
pop
mov
push
jnp
das
and
in
push
cmp
outs
mov
cmp
jmp
mov
test
xlat
push
gs
das
or
es
dec
and
lods
in
mov
adc
jmp
jle
retf
in
les
or
scas
retf
push
shl
or
(bad)
jmp
out
push
mov
xchg
xchg
lods
(bad)
fwait
xchg
jl
sbb
aad
and
popa
stc
sbb
aaa
ins
call
jnp
dec
idiv
lahf
sub
aam
mov
daa
stos
loop
je
ret
out
mov
outs
sar
les
xchg
mov
rcl
adc
mov
xor
test
invd
add
xlat
add
or
clc
ret
fild
jae
cli
(bad)
out
rcl
stos
ins
jno
push
sub
test
dec
fs
out
imul
fidivr
push
push
out
adc
nop
sub
push
xor
jnp
push
jmp
stos
sub
pop
shl
mov
imul
xchg
jae
lds
or
xchg
inc
nop
pushf
je
ja
push
xor
jnp
cs
out
mov
push
call
dec
pop
mov
mov
js
cmp
je
inc
cmc
mov
ret
jbe
pop
ror
lds
sub
inc
xchg
or
xchg
int3
push
dec
sbb
push
or
loop
std
inc
lahf
sti
dec
add
loopne
(bad)
(bad)
and
push
shl
push
and
stos
shr
pop
je
jl
mov
and
adc
pop
mov
xchg
sub
cmp
mov
jle
fbstp
arpl
lods
mov
mov
push
jmp
pusha
xchg
shl
aaa
inc
out
imul
cs
xor
jns
xor
fadd
push
aaa
and
inc
inc
fsubp
popf
into
pop
push
sbb
dec
(bad)
pushf
xor
inc
dec
leave
mov
mov
das
(bad)
fwait
jns
xor
cmp
cmp
outs
scas
loopne
and
mov
dec
inc
fucomip
icebp
mov
mov
cmp
in
pop
outs
lds
pop
in
aas
pop
and
pop
mov
inc
pop
dec
pop
ret
mov
or
pop
das
jg
add
pop
cmps
shl
jl
dec
call
sub
sbb
std
gs
xchg
pop
cdq
or
lds
mov
and
xlat
add
les
xlat
(bad)
(bad)
std
test
aas
es
stos
mov
popa
das
aas
sub
fisttp
adc
push
adc
lds
ss
mov
mov
xchg
dec
repz
xlat
shl
cmp
ret
add
or
push
stos
dec
sbb
adc
adc
popa
push
dec
outs
or
jl
loop
ins
int
movs
adc
call
fsub
pop
mov
mov
(bad)
sti
and
cmp
mov
lods
cli
jae
xor
out
mov
sbb
mov
xor
xchg
xor
cdq
lds
inc
movs
pop
call
popf
adc
aaa
(bad)
jmp
jg
loop
mov
jg
in
sahf
mov
loop
js
scas
(bad)
push
pop
mov
dec
leave
cdq
lods
mov
mov
les
in
adc
cli
test
mov
(bad)
lock
cmp
cli
lods
xor
xchg
into
stos
pop
sbb
call
pop
sbb
dec
inc
mov
jne
dec
xchg
cld
mov
rcr
je
imul
enter
repnz
lea
jno
popf
test
push
loope
mov
dec
imul
fnstsw
add
aam
jg
(bad)
aam
fld
lock
lods
into
adc
scas
xor
xor
mov
pop
je
jp
mov
(bad)
sub
les
int
add
int3
push
js
bound
pop
mov
add
in
cmp
jecxz
mov
dec
or
loop
das
add
leave
dec
dec
fldcw
bound
shl
aam
das
dec
dec
std
ins
mov
daa
jno
pop
cmp
js
sar
pop
inc
jl
mov
jae
shl
and
jbe
dec
xchg
pop
les
xchg
xchg
pop
mov
or
fwait
mov
sar
call
test
stc
sub
xlat
dec
aas
xchg
push
jp
fs
rep
ret
or
pop
ret
popa
les
jp
xchg
popf
(bad)
jnp
xor
jnp
cdq
test
cs
daa
adc
aaa
cmp
lods
pcmpgtd
rcr
and
push
cmp
nop
ret
arpl
push
mov
xor
outs
adc
mov
sbb
or
lods
add
inc
mov
xchg
sub
arpl
mov
test
ins
inc
inc
xchg
mov
rcr
jp
xor
mov
lods
(bad)
adc
push
and
(bad)
hlt
lds
fs
stos
scas
fwait
inc
adc
adc
(bad)
pop
ss
sbb
sub
pop
pop
hlt
mov
je
ss
push
popf
mov
(bad)
push
leave
popa
and
push
pusha
sahf
movs
xor
sub
xor
cmp
xchg
adc
and
adc
adc
pop
or
xor
stos
mov
mov
popf
out
sub
xor
or
xchg
pop
mov
adc
jp
mov
ss
inc
cmps
jg
mov
jmp
bt
pop
cmp
idiv
or
and
das
pop
inc
scas
repz
out
or
iret
or
mov
cs
mov
out
push
add
add
test
ja
(bad)
sub
add
dec
push
mov
inc
lods
mov
push
sahf
push
das
or
adc
mov
mov
and
scas
imul
xor
jo
shl
cli
cmp
rcr
mov
push
xor
add
mov
iret
cwde
pop
adc
scas
xchg
jne
test
arpl
pop
mov
shr
mov
ficomp
rcl
stos
or
mov
daa
adc
aaa
xlat
push
mov
nop
fisub
push
add
jmp
mov
popf
mov
mov
shl
out
cld
and
mov
or
sbb
adc
mov
(bad)
(bad)
call
aad
adc
les
jge
popf
mov
mov
push
pop
lahf
cmps
sbb
xor
fidiv
and
std
push
sti
pop
(bad)
(bad)
jnp
sub
scas
push
mov
sbb
cmp
jg
adc
loop
les
loop
jo
jp
or
movs
sbb
loope
out
sbb
xor
out
arpl
cmps
fstp
in
mov
rcr
jns
mov
imul
stos
lods
nop
cmps
push
jecxz
mov
int
pop
addr16
test
ss
retf
call
adc
adc
adc
or
lods
cdq
push
lds
enter
pop
fs
cmp
idiv
adc
popa
xchg
fisttp
push
push
imul
xchg
dec
mov
jno
dec
jmp
ror
ins
pop
jno
inc
fstp
sti
stc
xchg
in
xchg
mov
push
mov
sub
cs
ds
push
pop
adc
or
xor
jp
mov
mov
repz
jle
push
mov
and
xor
rol
push
out
mov
pop
or
leave
cmp
push
add
enter
inc
enter
mov
jne
test
cmp
sahf
movzx
jl
cmp
movs
enter
dec
xlat
mov
in
mov
mov
inc
jl
clc
mov
in
jo
lahf
adc
xchg
mov
mov
mov
scas
jbe
div
sub
adc
cmp
mov
call
mul
mov
xor
addr16
in
hlt
fisttp
daa
fmul
stos
test
sahf
test
es
addr16
jbe
dec
and
fldz
pop
xchg
icebp
sti
cmp
adc
in
inc
cs
leave
inc
in
inc
mov
out
add
addr16
inc
dec
clc
mov
mov
xor
mov
and
mov
out
cmps
or
mov
popa
stc
mov
or
call
jmp
stc
ret
mov
movs
aam
(bad)
movs
jl
loop
push
inc
enter
(bad)
mov
std
push
mov
test
push
scas
retf
repz
xchg
imul
and
add
aam
add
es
call
xor
or
cmp
jmp
gs
add
scas
mov
push
int
xor
test
xor
push
les
fdivp
pop
mov
ins
or
push
xor
or
sub
mov
icebp
mov
int3
mov
jbe
xor
inc
add
inc
retf
jmp
adc
arpl
aad
cs
jge
jbe
leave
out
sahf
sub
xor
js
push
ds
dec
clc
in
(bad)
fs
mov
inc
sti
loope
lahf
and
iret
add
pop
(bad)
push
xor
dec
push
mov
xor
jns
ja
push
ss
out
xor
(bad)
in
push
dec
fild
push
xor
pushf
mov
in
sbb
mov
les
imul
push
xchg
in
inc
mov
add
mov
xchg
fcom
retf
test
mov
js
sub
sbb
add
stos
jle
or
rep
push
fsubr
fnstsw
cmp
pusha
mov
cmp
push
sahf
je
jecxz
mov
mov
cli
xor
or
sub
outs
dec
xor
pop
jo
cmps
out
shr
cmp
cmp
es
jbe
dec
std
inc
(bad)
jl
call
movs
into
(bad)
inc
scas
and
dec
out
mov
jbe
xchg
into
lock
stc
clc
cmp
add
lods
bound
lea
sub
aas
mov
ins
gs
jns
in
cmc
xchg
sub
jae
push
movs
cmp
inc
fwait
inc
cwde
push
and
xor
and
(bad)
mov
and
sbb
pop
fcmovne
fldcw
out
ins
xor
std
mov
inc
jecxz
adc
daa
jmp
inc
adc
adc
and
sub
mov
sbb
xchg
loopne
mov
in
shr
retf
pop
pop
imul
and
loop
xor
push
sbb
popf
inc
rcl
jae
cld
pop
pop
out
adc
into
lea
jle
xor
push
aas
mov
pop
jl
fcmovnb
pop
or
cld
sbb
and
mov
sub
call
retf
test
iret
out
popa
(bad)
std
dec
data16
pusha
sub
jge
add
loope
ror
aaa
cmc
loope
cdq
clc
dec
call
or
xlat
(bad)
fucomip
pop
sbb
adc
and
movs
leave
sub
jecxz
add
arpl
sub
mov
pop
mov
retf
aaa
dec
inc
test
sar
cdq
movsx
sub
daa
inc
cmp
jne
or
or
daa
pop
lahf
and
test
jge
rol
or
test
mov
adc
cwde
jmp
repz
fiadd
and
xor
pop
xchg
fist
push
sbb
inc
cmp
test
mov
xor
mov
inc
ins
cmc
mov
mov
adc
mov
retf
call
xor
pop
or
scas
xchg
xchg
shr
or
test
iret
iret
pop
hlt
vpmulhuw
add
sbb
xchg
enter
jl
mov
cld
push
in
repnz
mov
test
push
aas
daa
add
push
xlat
ret
cmp
mov
shl
dec
int
(bad)
in
and
mov
aaa
pop
mov
int3
inc
and
xchg
xor
rcr
sub
pop
imul
or
jl
cs
movs
xchg
out
push
stos
cmp
inc
sahf
pop
loopne
lea
pop
(bad)
mov
stos
repnz
adc
aam
jge
cmp
sahf
mov
retf
mov
xor
call
enter
mov
jns
mov
and
ret
inc
adc
xchg
bound
jl
mov
retf
add
sti
(bad)
cmp
add
push
outs
xchg
lds
xor
and
fidivr
dec
mov
adc
mov
xchg
sub
cmc
push
sahf
ins
mov
push
(bad)
aas
and
outs
stos
popa
jle
dec
mov
cmc
in
pop
mov
stos
dec
push
fnsave
and
out
cmps
and
push
test
add
fld
cmp
add
pop
push
popf
mov
ja
jb
mov
(bad)
adc
fist
and
mov
lahf
adc
inc
push
shr
arpl
push
dec
cs
fisttp
shr
fwait
xor
xchg
sub
iret
movs
popf
sti
int
in
jae
pop
mov
call
xor
fisub
(bad)
popa
xor
push
fstp
das
in
inc
sub
xchg
xchg
fstp
les
sbb
fidiv
cmp
sbb
add
adc
pop
test
jbe
clc
push
mov
jmp
pop
inc
jnp
shl
push
add
cs
and
outs
mov
lea
dec
mov
mov
aaa
loopne
cmp
fidivr
adc
lods
jmp
mov
and
dec
aaa
jnp
mov
loope
dec
popf
mul
int
jl
sahf
adc
mov
adc
cmps
dec
mov
adc
jge
xchg
lea
shl
xchg
repz
jo
pop
imul
push
mov
ror
aaa
icebp
shr
sub
inc
lahf
mov
mov
and
add
dec
data16
mov
shl
test
jecxz
pop
out
cmp
nop
dec
dec
or
push
mov
jmp
xor
inc
pop
movs
stos
jmp
jmp
call
push
adc
sbb
mov
cmp
mov
jne
mov
xor
add
push
pop
push
push
test
push
jl
sub
or
mov
retf
pop
inc
xchg
jmp
pop
mov
push
pop
mov
dec
pop
push
push
sub
jg
dec
icebp
fnstenv
dec
add
mov
scas
stos
adc
lods
std
push
mov
jmp
pop
cmps
mov
mov
fist
xlat
outs
arpl
and
fild
jmp
das
adc
and
xchg
push
bound
mov
dec
imul
int3
adc
add
and
mov
xchg
scas
ins
ja
in
push
xor
cmp
xchg
sub
fldcw
jae
mov
jmp
cli
jae
pop
adc
jns
ins
arpl
mov
push
bt
dec
ror
fisub
add
xor
jbe
mov
movs
iret
cmp
scas
dec
xor
inc
mov
push
cdq
(bad)
pop
ins
xchg
jae
inc
adc
or
jne
cmps
out
outs
loop
pushf
xor
or
or
cmps
sbb
sub
mov
test
inc
imul
loope
push
mov
or
jae
rol
fwait
bound
sti
div
out
lods
xchg
dec
ret
mul
cld
cli
adc
sti
sahf
add
or
scas
imul
xchg
mov
mov
in
int
mov
pushf
jmp
inc
mov
mov
xlat
xor
mov
retf
in
xor
cmp
or
and
xor
dec
dec
call
rol
mov
mov
mov
cmc
in
cld
xor
das
jmp
jb
sahf
inc
jmp
imul
jno
das
adc
cmp
cmp
retf
rcr
ret
sub
xchg
sub
fbld
cmp
icebp
call
sub
inc
fsubr
repnz
aaa
ret
xchg
in
sbb
scas
cld
in
out
or
jmp
pop
cmp
femms
or
mov
inc
rcr
sti
or
pop
je
lahf
sub
lock
xchg
retf
lahf
mov
push
sti
das
xor
das
mov
retf
addr16
not
rcl
jecxz
test
nop
pop
sbb
stc
ret
jne
imul
mov
movs
pop
retf
pop
push
in
add
sbb
and
in
jno
sti
mov
test
pusha
lock
push
int
and
push
push
test
xor
scas
adc
sub
xor
mov
iret
ss
and
ds
xor
mov
cmc
repnz
push
pushf
inc
(bad)
and
sub
(bad)
fcmovbe
add
faddp
in
sbb
data16
pushf
loop
mov
xchg
pop
fld
jo
push
push
loope
int
add
mov
xchg
cwde
push
sahf
sub
jae
mov
cmp
nop
dec
push
inc
cmp
xor
xchg
stc
adc
ror
sbb
xor
mov
dec
ins
popf
(bad)
test
imul
adc
jb
ficom
mov
adc
ror
fcom
imul
mov
jbe
int3
leave
dec
pop
test
mov
dec
dec
imul
loope
data16
adc
dec
mov
inc
inc
jle
xchg
hlt
mov
ror
inc
js
mov
xor
push
lahf
ret
pusha
and
lea
lods
push
jne
sub
adc
xor
pop
sub
mov
fisubr
call
mov
loope
xor
ins
fwait
out
push
cmps
add
push
pop
pop
adc
or
and
adc
cdq
outs
lahf
dec
xchg
inc
inc
and
and
dec
jg
in
(bad)
test
inc
pop
fsub
es
scas
fiadd
xor
cli
out
pusha
xor
add
dec
inc
push
xchg
dec
pushf
sbb
lods
pop
test
fucom
ss
sub
movs
push
test
imul
pop
aas
push
add
movs
add
jbe
jmp
jb
pop
int3
mov
or
mov
pushf
je
and
rol
mov
jmp
add
fdiv
xchg
fincstp
mov
sbb
and
jecxz
nop
xchg
scas
popa
adc
dec
lods
and
mov
sub
xchg
sbb
ret
fild
jmp
ins
sub
push
cmp
xlat
dec
je
mov
jae
ja
or
xor
adc
addr16
xor
push
xchg
lods
dec
mov
mov
pushf
jo
mov
js
sub
jge
inc
les
setnp
adc
and
inc
(bad)
xchg
jmp
mov
mov
(bad)
cmp
xor
cmps
sahf
lahf
pop
ret
push
sub
and
in
jnp
pop
out
cwde
ret
pushf
ins
sub
or
inc
lock
inc
daa
jo
sbb
sbb
mov
test
clc
call
add
hlt
and
mov
jg
mov
es
test
dec
pop
rol
pop
pop
loop
inc
aaa
push
loop
aaa
mov
xchg
pop
sbb
or
pop
inc
cmp
mov
(bad)
mov
aam
dec
test
cmc
dec
cmp
ret
inc
ds
imul
icebp
cwde
jo
mov
pushf
mov
dec
nop
pushf
ins
daa
xor
ss
and
loop
dec
rcr
sbb
mov
xor
movs
cmp
ret
or
pop
add
arpl
and
jo
xchg
(bad)
xlat
sahf
rcl
dec
adc
push
fs
and
mov
jns
(bad)
das
push
sbb
xchg
add
sahf
pop
sbb
fstp
add
adc
jns
les
ret
clc
xor
adc
aad
icebp
aad
jb
dec
xchg
adc
mov
sbb
retf
lahf
inc
sbb
or
xor
je
xor
out
add
stos
addr16
test
or
push
jnp
popf
push
outs
out
cli
fstp
jb
xchg
rcl
mov
or
cmp
cmp
pop
add
aas
scas
fldcw
jno
sbb
int3
scas
repz
add
je
push
adc
(bad)
loop
pop
(bad)
div
js
loope
dec
jno
fild
movs
rcl
xchg
(bad)
cmp
(bad)
stos
jno
inc
std
loop
(bad)
and
jmp
test
out
mov
mov
leave
in
pop
imul
sub
loope
cld
or
or
push
adc
sar
add
loopne
scas
jle
mov
in
test
dec
cmps
iret
icebp
lds
and
imul
iret
add
xchg
pop
iret
mov
bound
cmp
repz
sub
rol
mov
clc
and
outs
mov
fcom
jne
adc
gs
cmps
push
add
mov
and
lahf
push
ret
aam
test
add
inc
test
adc
xchg
adc
push
fmul
call
xlat
ror
fisub
dec
call
ret
push
into
jae
sub
cli
mov
test
repnz
jg
push
pop
mov
imul
out
add
aam
push
inc
dec
mov
popf
adc
jp
jmp
sub
pop
mov
push
retf
or
icebp
rcl
adc
ins
add
sbb
xor
aad
xor
ss
test
call
mov
js
ins
test
or
(bad)
lahf
fwait
dec
ret
cmps
xor
or
call
mov
iret
ror
fs
inc
out
cmps
test
sbb
mov
jae
mov
jnp
aaa
push
jmp
dec
int
fwait
xchg
add
(bad)
in
mov
(bad)
shl
mov
fbstp
push
push
xchg
sub
int
stos
movs
xor
xor
mov
cmp
cmc
mov
jae
loop
push
pop
pop
imul
clc
xor
cmp
inc
inc
mov
fild
iret
fimul
icebp
mov
cmps
rol
mov
cmps
aad
pop
cmp
inc
pop
sub
rcr
xor
sahf
loop
sbb
xchg
test
mov
cmp
int3
and
pop
xor
je
ds
sbb
pop
mov
mov
nop
xor
jae
jg
xor
test
cmp
pop
mov
in
into
loope
sub
outs
mov
div
push
inc
push
jp
push
sub
push
pop
jo
leave
inc
out
out
je
pop
dec
rol
sbb
add
sti
(bad)
mov
aaa
lods
pop
adc
popa
shl
nop
std
pusha
pop
aam
sbb
lds
mov
retf
ins
and
loopne
ja
(bad)
jl
cmp
repz
(bad)
pop
fiadd
in
std
lahf
test
xor
push
and
mov
fcmove
jbe
dec
and
ins
cld
adc
sub
in
imul
xor
loopne
push
les
(bad)
mov
push
ins
cmp
mov
xor
mov
fstp
mov
ret
xchg
or
inc
sbb
aam
hlt
aaa
cld
push
js
add
call
xchg
xor
xor
fucom
movs
xchg
(bad)
ins
sahf
mov
cmps
out
push
ss
ss
je
in
es
cmps
inc
mov
sub
out
and
sbb
push
and
xchg
dec
arpl
js
dec
repnz
cli
xchg
mov
das
data16
out
push
lahf
xchg
out
push
aaa
mov
repnz
mov
pop
cmp
shr
jle
push
(bad)
and
mov
or
rcr
lds
and
mov
hlt
test
push
pop
push
cmp
lock
push
into
jo
mov
pop
test
sub
ret
arpl
add
in
sbb
cld
xchg
sub
add
leave
adc
icebp
add
retf
xor
add
or
push
aad
popf
in
cmp
and
lods
stos
push
mov
add
shr
add
add
xchg
cld
dec
jnp
clc
sbb
mov
int
cmps
jo
lock
push
mov
not
movs
sub
(bad)
pop
pop
push
jge
dec
rcl
pusha
pusha
fstp
push
mov
fld
sub
ficom
pop
outs
xchg
fnstcw
mov
sub
jns
xchg
push
ror
jbe
fs
xor
jbe
xchg
add
and
sub
sbb
imul
mov
ret
je
loop
fnsave
jle
popa
cmps
ss
mov
test
xor
inc
push
es
push
sbb
hlt
sbb
mov
mov
push
fidiv
es
mov
push
dec
and
or
jp
jns
xchg
aas
dec
fs
jne
scas
addr16
jb
jo
xor
adc
out
std
mov
mov
dec
out
and
push
xchg
fs
or
cwde
lock
xor
stos
stos
out
adc
inc
movs
cdq
and
jns
xchg
fs
and
(bad)
pop
add
shl
retf
outs
ja
push
jg
iret
imul
arpl
call
jnp
ss
popf
retf
sbb
dec
mov
imul
jns
mov
jne
daa
adc
or
cmp
lahf
push
sub
sub
sub
dec
and
dec
stos
sbb
inc
call
push
pop
mov
adc
shr
mov
xchg
add
sbb
aaa
iret
enter
repnz
and
push
inc
push
and
lds
icebp
jp
mov
jmp
sub
xor
inc
jmp
cmps
mov
(bad)
jle
or
add
ins
or
adc
sub
nop
into
pop
inc
popf
or
inc
ds
rcl
jb
dec
xor
mov
cmp
or
add
xchg
js
outs
mov
not
in
rcr
jg
add
add
xlat
fsubr
fs
inc
cmp
in
cwde
adc
aad
out
and
shl
into
fld
(bad)
lds
mov
push
shl
stc
cmps
jmp
pop
xor
int3
aam
aaa
push
test
inc
cmps
aad
rcr
in
pop
mov
adc
cmps
push
cld
sub
sbb
js
push
pop
movs
stos
dec
adc
inc
inc
jno
fild
(bad)
fist
sti
mov
pop
(bad)
xor
pop
test
mov
jne
inc
xchg
sbb
mov
aam
lea
pop
lahf
movs
xlat
inc
cmp
(bad)
or
mov
xchg
lods
mov
inc
jbe
ds
bound
lea
pop
add
sub
popf
ret
scas
xor
push
scas
cli
xor
sub
cmp
jbe
outs
aas
cli
pop
sub
ret
mov
mov
mov
dec
sbb
and
or
jmp
int3
sbb
mov
or
fisubr
inc
or
cmp
inc
xor
int
test
test
push
sub
sbb
dec
ins
call
pop
ds
test
xchg
sub
das
(bad)
mov
mov
pop
jne
inc
adc
mov
pop
test
out
out
js
jnp
or
aam
pop
jb
(bad)
pop
pop
adc
ja
(bad)
jmp
popa
scas
xchg
aaa
mov
xor
loop
sbb
lods
loopne
and
adc
fs
mov
push
mov
fcmovnb
add
jp
les
jae
into
xchg
pop
sub
mov
in
adc
popf
and
and
pop
push
shl
inc
jp
stc
les
and
fiadd
dec
out
push
mov
cmp
dec
jmp
aas
push
stos
xchg
call
sub
fldenv
or
das
mov
push
xchg
adc
sti
ins
out
pushf
outs
lahf
mov
push
pop
lea
(bad)
movs
mov
jnp
mov
gs
sbb
xor
mov
sub
xor
outs
lds
pop
xchg
mov
or
(bad)
fist
jg
sahf
mov
cmp
push
mov
outs
push
or
aad
inc
(bad)
mov
xchg
repnz
(bad)
and
enter
mov
rcl
push
into
add
xchg
xchg
pop
sbb
mov
pop
(bad)
pop
mov
sbb
xor
and
sub
nop
fwait
adc
push
add
cmp
sbb
xor
(bad)
shl
(bad)
jmp
iret
xor
stos
push
mov
or
(bad)
in
push
(bad)
mov
sub
addr16
sbb
fstp
(bad)
or
dec
push
jae
rcl
stos
mov
inc
ja
add
jle
cmp
pushf
hlt
leave
inc
mov
mov
jmp
xchg
sbb
sub
ret
mov
out
in
ficom
js
test
or
dec
adc
add
scas
sar
dec
mov
pop
and
sbb
push
jns
cmps
inc
sahf
push
fist
shr
dec
icebp
push
xor
repnz
push
xor
adc
sub
fs
xchg
mov
xor
leave
retf
sub
xor
push
jne
add
adc
sbb
mov
aaa
mov
sub
pop
mov
mov
and
add
mov
ds
sub
es
inc
std
fild
sub
push
inc
push
loope
xchg
retf
sub
stos
pop
xchg
push
mov
movs
pop
cmp
rol
or
je
fadd
cmp
add
and
xchg
ret
adc
repnz
pop
sbb
test
mov
inc
add
jns
hlt
mov
js
or
int3
lds
jnp
jmp
add
movs
mov
clc
xchg
std
mov
push
out
push
mov
inc
(bad)
hlt
mov
mov
test
inc
mov
mov
mov
ret
popf
and
push
jl
sbb
(bad)
fs
out
popw
scas
sub
pop
jns
sbb
pushf
scas
adc
out
pop
std
or
mov
cmp
sbb
aas
xchg
jecxz
dec
jle
ret
push
neg
and
sub
push
adc
imul
outs
imul
mov
ret
mov
addr16
add
loop
adc
out
sub
mov
(bad)
ss
xchg
mov
add
rcr
dec
(bad)
(bad)
sub
or
fst
aaa
out
jb
or
mov
stos
push
add
sbb
ins
push
adc
mov
daa
out
jg
lea
mov
fistp
popf
test
pop
pop
dec
xchg
stos
xor
pop
call
mov
shl
xchg
pop
and
push
add
cwde
in
sbb
repz
mov
adc
xor
jg
fdiv
js
cmp
inc
and
leave
stc
inc
stos
aaa
je
stos
ficom
cmp
mul
clc
push
push
dec
ret
mov
mov
int3
icebp
ins
aas
mov
xor
in
or
lahf
xchg
sti
dec
and
imul
push
and
imul
pushf
lods
adc
pop
xchg
push
push
cmc
inc
adc
test
pop
xchg
cmc
out
ret
in
mov
sbb
jmp
jp
les
cmc
mov
stos
movs
movs
sbb
fisttp
push
into
dec
mov
outs
sub
sub
dec
lea
pop
inc
(bad)
leave
aad
ret
sbb
jg
(bad)
outs
pusha
arpl
mov
inc
pop
cli
and
cmp
cmp
mov
int
xchg
mov
in
out
ror
test
ror
test
cmc
fwait
adc
ja
test
cdq
push
pop
dec
pop
push
and
loope
inc
push
mov
stc
imul
out
stos
push
pop
pop
xor
fidiv
mov
mov
outs
mov
jl
stc
fs
dec
inc
mov
lahf
(bad)
mov
(bad)
(bad)
das
das
cmps
sbb
mov
push
sub
jmp
(bad)
cwde
int3
inc
jge
ret
xor
mov
pusha
(bad)
sub
mov
out
jecxz
(bad)
shr
(bad)
mov
xor
lods
or
sbb
mov
out
les
mov
jp
jp
rcr
fcom
test
clc
out
in
movs
jecxz
jnp
jnp
fadd
retf
sbb
cmp
mov
(bad)
hlt
sub
cdq
cmp
or
mov
pop
adc
sub
daa
fidivr
ins
xchg
loop
not
dec
xchg
fnsave
sbb
add
hlt
jecxz
push
add
inc
inc
stos
inc
into
neg
sar
out
out
popa
mov
add
das
and
lock
jnp
(bad)
pop
in
int
aaa
stos
dec
adc
cmp
(bad)
xchg
cld
mov
jo
cli
jl
xchg
rcl
loope
aaa
cli
js
push
mov
xchg
jne
or
pop
test
pushf
and
cmp
int3
call
dec
outs
xor
out
into
inc
sti
cwde
lods
adc
out
test
xor
cdq
adc
daa
test
and
mov
and
jp
lds
pop
push
inc
add
sbb
mov
retf
cmp
jle
in
and
loope
gs
push
wrmsr
(bad)
ins
and
mov
push
xchg
in
xchg
ins
mov
add
add
(bad)
aad
aaa
mov
data16
adc
or
sbb
cmp
(bad)
fwait
jmp
cmp
or
pop
push
cld
jo
xchg
mov
inc
(bad)
(bad)
xchg
mov
mov
ror
loop
int3
xlat
scas
inc
out
addr16
jno
js
repnz
repnz
cmc
fist
or
mov
ficomp
loope
rcr
inc
xchg
jns
and
mov
pop
mov
add
push
fmul
out
(bad)
ret
gs
repnz
xlat
not
lods
leave
pop
adc
or
jb
xor
ja
hlt
sub
xor
pop
scas
cli
div
ins
mov
pop
dec
sbb
mov
stos
imul
dec
loope
push
ret
jmp
test
inc
jmp
pop
adc
cmp
fwait
and
mov
push
mov
mov
fwait
mov
xchg
pusha
adc
repnz
adc
sub
or
and
and
cmp
cmps
shr
cmp
retf
leave
les
sub
jp
in
pop
hlt
mov
jmp
push
fsubr
das
pop
pop
push
sti
jmp
push
jae
sbb
stos
mov
int
or
mov
jmp
inc
push
arpl
retf
loop
int3
ret
inc
or
dec
popa
and
pushf
inc
jecxz
dec
test
leave
sub
(bad)
stc
mov
retf
pop
push
in
rcr
mov
mov
rcl
gs
jl
or
test
jne
xor
dec
in
dec
jb
repnz
ficom
xchg
fincstp
pop
fcomp
xor
mov
leave
out
idiv
shl
hlt
cmp
add
jmp
inc
lock
ror
das
test
(bad)
not
pop
sbb
cs
add
mov
int3
int3
pop
int
out
jb
dec
stc
bound
mov
sub
test
out
call
shr
or
jl
fcom
jns
iret
or
sub
sub
mov
retf
xor
pop
jbe
repz
shl
pop
lea
lea
mov
ss
sbb
clc
pop
in
retf
fidiv
cmps
add
dec
cmp
cmp
in
aam
mov
in
mov
ret
sbb
pop
movs
xchg
jmp
push
(bad)
jg
xadd
sbb
xchg
cmp
outs
or
aaa
xchg
lock
dec
cmp
std
mov
xlat
std
or
mov
leave
enter
loop
pop
push
fs
outs
or
push
rcr
loope
xchg
gs
cmp
sbb
cmovne
test
leave
push
std
lds
nop
adc
out
sbb
test
pop
stos
ins
mov
add
sti
adc
cld
mov
js
pop
or
mov
add
sbb
mov
jge
imul
dec
pop
popf
xchg
mov
cmps
shl
call
outs
test
out
in
lahf
inc
cli
loop
jmp
sub
addr16
test
cdq
and
in
dec
add
stos
add
adc
lock
inc
push
dec
xor
enter
jle
mov
mov
push
out
mov
test
ret
mov
jl
push
mov
cwde
fidivr
stos
(bad)
lea
mov
xchg
repnz
aas
js
push
ins
xlat
stos
mov
test
cmps
ret
retf
addr16
call
test
push
icebp
cld
loop
xchg
pushf
in
pop
cmp
jo
mov
xchg
enter
fst
mov
outs
push
nop
inc
cmp
inc
or
push
mov
xlat
mov
scas
or
xchg
aad
jns
out
mov
sub
dec
or
mov
pop
push
cmp
xor
(bad)
jp
movs
fs
adc
jge
ja
sub
loopne
adc
out
add
mov
add
inc
cmps
mov
push
cmp
cs
sahf
push
shl
mov
and
stos
pop
fs
fiadd
aas
test
test
repnz
mov
sub
inc
dec
mov
xor
outs
xor
jmp
das
retf
les
mov
inc
fimul
(bad)
and
test
push
data16
jmp
sub
aad
js
out
jmp
sub
retf
jo
shl
jno
pop
nop
mov
pushf
or
add
mov
mov
xor
push
test
outs
data16
cs
xor
pop
lahf
test
shl
dec
sub
adc
mov
je
pop
pop
data16
cdq
mov
sbb
test
push
sbb
inc
out
ret
(bad)
cld
ins
mov
cmps
mov
je
call
mov
outs
out
inc
ret
jne
pop
int
push
add
or
jmp
and
(bad)
xor
xchg
lods
adc
and
xor
xchg
test
ss
leave
mov
pop
jl
or
stos
test
push
outs
push
sbb
lea
pavgw
xor
dec
pop
jb
in
imul
jg
add
xor
mov
add
sub
retf
xchg
or
lock
pop
ds
arpl
inc
adc
ficom
test
test
pop
outs
repnz
jo
push
mov
fimul
xchg
inc
int
mov
mov
test
cld
stc
jp
xlat
cmp
fucomi
jns
movs
in
fwait
xor
enter
push
lods
jae
push
in
popa
fs
jbe
ins
movs
lods
fisttp
dec
sub
ss
cmps
sub
nop
pushf
repnz
pop
iret
dec
mov
mov
or
mov
lahf
and
or
scas
das
rol
(bad)
out
lea
(bad)
jge
mov
cmp
lahf
idiv
or
jecxz
mov
repz
fidiv
or
cmp
xchg
ror
aad
(bad)
out
mov
fwait
sub
cwde
fnstsw
sub
inc
loop
mov
ds
daa
jne
sub
dec
aaa
jnp
pop
push
mov
hlt
push
icebp
pusha
push
mov
cmp
fsubr
pop
mov
push
mov
aad
aad
and
xor
or
int3
sub
adc
iret
push
ja
ror
or
popf
shr
inc
or
fs
push
ror
mov
xor
js
dec
(bad)
jge
ins
sbb
xchg
xor
inc
mov
push
cmp
add
test
shr
sar
out
push
inc
test
dec
loop
or
mov
pop
lods
retf
jno
xchg
cmps
pop
xchg
(bad)
rcl
mov
jne
adc
dec
stos
icebp
adc
and
push
mov
dec
xchg
and
fisttp
jno
(bad)
push
sbb
xor
xor
cdq
dec
mov
aaa
test
inc
ja
jmp
movs
mov
je
pop
mov
jbe
xchg
jmp
mov
cli
and
cwde
ss
stos
addr16
and
fistp
mov
sub
cmp
scas
imul
out
inc
xor
mov
dec
sbb
loopne
push
(bad)
sub
cmp
xchg
mov
pop
dec
adc
mov
mov
outs
push
xor
fst
xchg
xor
bound
les
or
retf
or
ficom
stc
hlt
into
inc
ficom
fsincos
rol
lahf
and
scas
mov
(bad)
addr16
add
es
call
jmp
out
fisub
add
arpl
sub
jp
cmps
pop
ja
imul
into
dec
sbb
cld
sahf
pop
bound
loope
adc
gs
mov
in
pop
bound
fisttp
pop
jbe
popf
push
sub
fs
retf
bound
add
push
xchg
mov
sti
push
sub
or
shr
or
pop
xor
jl
xchg
pop
cmp
retf
icebp
inc
or
push
add
retf
test
mov
lds
fsubr
ja
xor
imul
daa
call
call
nop
std
sub
jns
ins
retf
xlat
cmp
mov
add
div
test
adc
out
loop
lods
sbb
mov
jl
fwait
adc
xchg
mov
xchg
mov
push
mov
adc
xchg
cld
int3
adc
fadd
add
adc
push
pushf
mov
xchg
cmp
scas
push
push
mov
pushf
push
pop
add
and
not
inc
fistp
test
inc
mov
gs
loope
xchg
jns
cmp
sbb
sahf
jae
jmp
mov
clc
mov
ret
hlt
xor
push
es
outs
fisttp
test
aaa
mov
out
dec
and
cmp
jmp
sbb
fbld
cmp
xchg
fstp
fdiv
pop
sar
and
out
mov
mov
inc
ficomp
mov
cld
std
clc
cmp
sbb
lock
mov
mov
out
hlt
jne
cdq
in
sub
fs
push
lahf
bound
jmp
sbb
cmp
cwde
inc
jo
cmp
cld
jnp
dec
leave
sar
cmp
hlt
ss
jno
cmp
adc
sbb
out
adc
arpl
stc
inc
nop
cmp
stc
add
sub
enter
sub
js
push
inc
xchg
stos
pusha
dec
ror
cmc
mov
mov
add
jg
scas
push
add
rcl
cmc
mov
out
adc
xchg
ret
push
les
dec
popa
lahf
aaa
inc
pop
not
es
ins
enter
gs
cmp
mov
add
push
outs
jecxz
xchg
push
ret
mov
mov
es
stos
jmp
or
ss
cli
jo
cs
leave
stc
shr
call
outs
cmp
mov
dec
retf
xchg
ja
int3
xor
out
clc
sbb
mov
cmp
bound
sbb
movs
jmp
xchg
sub
cmps
xor
add
jmp
mov
pop
enter
dec
(bad)
adc
pusha
int3
jae
or
sub
ins
mov
dec
cmp
call
(bad)
fucomip
ror
add
pushf
sahf
cmps
sub
lea
(bad)
pop
movs
sub
ret
dec
(bad)
les
adc
enter
dec
jno
xchg
ror
add
out
mov
call
xchg
and
and
mov
jbe
mul
bound
popa
mov
cmc
jne
push
jmp
push
pop
pop
add
movs
push
shl
cmp
outs
stos
ret
shr
cmp
cld
xchg
jl
mov
(bad)
push
dec
mov
adc
jb
(bad)
test
mov
(bad)
jg
cwde
mov
loopne
rcl
xor
and
xchg
sub
outs
cmp
push
and
aam
rol
nop
(bad)
fistp
in
js
adc
xchg
movs
sub
inc
bound
mov
and
cmp
add
adc
xchg
push
cmp
dec
jp
or
jmp
jl
sub
mov
into
shr
jns
aam
cmp
and
clc
pop
dec
mov
int3
and
pop
ror
or
stos
sbb
int
repnz
call
je
inc
push
sar
mov
stos
(bad)
imul
data16
pushf
dec
inc
adc
xlat
call
xchg
xchg
(bad)
mov
int3
ret
pop
fld
(bad)
xchg
jge
jb
je
inc
dec
ja
imul
jno
jne
cdq
xlat
repz
pusha
cmps
sub
xlat
mov
call
mov
fnstcw
cmc
aad
pusha
inc
stc
icebp
mov
outs
xchg
and
pop
jp
mov
pop
call
sub
in
fdivr
cdq
xor
repnz
mov
into
jno
loope
sahf
scas
fwait
mov
mul
jmp
fsub
outs
es
cmp
in
jne
outs
mov
or
mov
in
popa
enter
lea
rcr
hlt
ds
xlat
or
sub
or
ins
xor
cld
dec
inc
test
loopne
sub
lea
int3
jge
dec
stos
xchg
mov
das
cmp
nop
jp
js
nop
dec
pop
fs
lea
nop
addr16
(bad)
stc
sbb
mov
push
test
call
dec
outs
xor
ins
hlt
jp
mov
mov
int
xchg
int3
push
stc
je
jae
arpl
push
jns
xlat
cmp
sbb
inc
xor
call
add
or
outs
adc
popa
jnp
add
mov
sti
dec
and
stos
bound
push
push
inc
xchg
jecxz
xor
mov
out
dec
(bad)
retf
fsub
jnp
cmp
fwait
add
inc
push
shl
push
das
cmps
gs
jle
mov
ds
mov
cmc
gs
nop
and
pop
adc
push
aam
(bad)
pop
lea
mov
dec
dec
sbb
pop
test
mov
mov
stos
mov
(bad)
pop
xor
out
and
cli
rol
into
loope
loope
add
mov
pop
scas
jmp
xchg
pop
push
push
push
enter
hlt
imul
popa
nop
in
push
mov
shl
mov
repnz
fimul
or
push
not
adc
sbb
dec
nop
push
add
das
cld
scas
daa
xor
mov
pop
pop
adc
pushf
cmps
xchg
jle
add
xchg
mov
popa
pop
or
jg
and
out
dec
repnz
repnz
xor
in
(bad)
sub
addr16
int
jecxz
and
cld
sub
mov
leave
xor
inc
adc
jmp
pop
(bad)
fst
cmps
mov
push
xor
jmp
int
jmp
fwait
mov
fwait
rcl
ds
addr16
mov
add
nop
imul
pop
and
inc
mov
xchg
pop
leave
lods
mov
xor
fisubr
jmp
(bad)
rcr
repz
xlat
mov
push
ret
fimul
mov
movs
fisttp
bound
lea
cmp
es
push
mov
ret
add
(bad)
mov
mov
(bad)
ror
mov
mov
jge
sahf
dec
rol
loopne
(bad)
rol
stc
jno
mov
lock
pavgb
push
repnz
sbb
sbb
cmp
sub
out
iret
sub
inc
or
and
xor
xor
xchg
sbb
lock
outs
ins
sbb
inc
outs
aaa
xchg
sahf
cld
adc
add
xor
shl
xor
test
ret
cmps
xor
jg
(bad)
jo
mov
or
sub
mov
jg
pop
inc
cmps
pusha
inc
f2xm1
fs
fsubr
add
pop
pop
xchg
mov
and
pop
sub
xor
jmp
dec
mov
push
ins
jne
xchg
mov
adc
sub
test
pop
mov
out
push
sub
xlat
(bad)
push
aas
pop
scas
push
add
fistp
jecxz
gs
test
push
fcmovnu
outs
xchg
and
or
pop
repnz
sub
and
adc
(bad)
in
mov
dec
mov
mul
out
push
xor
leave
shl
mov
sub
mov
xchg
in
dec
and
sbb
pop
pop
fiadd
inc
push
shl
imul
xlat
cmp
sbb
mov
sbb
mov
mov
fiadd
icebp
mov
test
adc
ficomp
je
hlt
mov
ds
jae
loopne
std
jp
pusha
js
push
fbstp
push
out
es
xor
push
push
retf
mov
pop
mov
cmp
cmp
(bad)
in
mov
sti
inc
jecxz
pusha
(bad)
icebp
fptan
aas
sbb
pop
ins
push
pop
inc
mov
inc
out
mov
mov
out
ror
ret
or
loope
in
popf
sub
test
pop
sub
arpl
mov
xor
rcl
xchg
mov
jg
rcl
test
mov
jns
cdq
nop
mov
cmp
(bad)
lds
popf
adc
aam
add
or
adc
int
lock
add
into
inc
mov
pusha
jns
mov
mov
xchg
cmps
mov
cmps
mov
or
sub
xor
sbb
dec
sub
mov
out
ret
sub
stos
movs
mov
inc
sbb
les
xor
add
add
sahf
or
mov
add
jno
lock
arpl
adc
and
xor
mov
ja
arpl
js
mov
fwait
das
aaa
dec
inc
push
xchg
out
dec
fwait
div
mov
das
int
pop
fsubr
fadd
call
fstp
inc
fld
es
mov
xchg
jge
cli
inc
loope
pushf
in
cmp
jge
cdq
dec
xchg
xor
je
cmp
sbb
scas
sbb
repnz
inc
call
inc
test
inc
cmp
adc
int3
or
mov
stc
shl
sbb
cmc
mov
ror
or
in
push
add
cmp
cmp
aam
xchg
dec
jle
outs
mov
mov
push
sub
mov
push
mov
mov
inc
dec
stos
fwait
xor
pop
inc
ins
jmp
retf
mov
mov
sbb
ds
add
call
and
hlt
addr16
in
mov
mov
pop
cli
rcr
pop
sub
jecxz
and
aas
scas
xor
mov
mov
stos
out
mov
jecxz
or
shl
mov
fisttp
sub
js
in
sbb
sahf
push
ja
out
out
push
jae
sub
cmp
jle
scas
dec
fsubr
and
pop
add
mov
inc
pop
mov
inc
aam
lock
dec
js
jl
push
push
cmps
jb
dec
sbb
or
(bad)
pop
dec
rcl
(bad)
xchg
fwait
dec
ds
out
cmp
dec
movs
and
xlat
sub
(bad)
in
retf
lods
fwait
mov
cmp
mov
std
push
mul
and
and
lods
xchg
inc
push
cmc
das
push
sub
aad
sbb
fild
nop
test
push
or
pop
adc
or
sar
sbb
imul
mov
imul
sti
js
xor
mov
mov
and
push
loope
push
int3
adc
arpl
jp
or
ja
jmp
(bad)
lock
push
shl
sahf
jmp
pop
fnstcw
push
mov
mov
jae
push
adc
or
cwde
ds
xor
mov
push
sub
mov
cmp
mov
lea
jmp
rol
sub
aad
xchg
ja
ds
pop
out
ins
sub
mov
cmp
retf
call
xor
int
enter
cmp
pop
cmp
add
fsubr
pusha
jbe
push
fisubr
loopne
test
shl
mov
dec
test
sub
idiv
(bad)
addr16
dec
push
fwait
jp
push
pusha
call
ror
bound
scas
repz
or
aad
aas
xchg
mov
add
rep
pop
xor
out
inc
jmp
jae
stc
(bad)
sbb
in
shl
inc
cs
dec
cmps
and
bnd
fistp
cli
lods
xchg
mov
lods
into
and
push
fs
push
dec
test
sub
sbb
add
loop
or
stc
xor
clc
fwait
sbb
cmp
jae
mov
and
sub
jge
out
ins
mov
movs
cmps
sub
sahf
adc
inc
dec
jl
fild
push
pop
jno
or
mov
iret
fisubr
mov
dec
pop
mov
sbb
inc
loop
test
adc
cmps
dec
sar
mov
movs
mov
ret
outs
cmp
cmp
aam
inc
push
aad
inc
mov
sub
arpl
imul
add
(bad)
lock
xor
mov
mov
dec
jnp
adc
add
and
scas
push
push
ror
jo
cmp
sub
not
jbe
add
and
pop
lock
sbb
inc
lds
xor
movs
jae
mov
or
pop
fstp
or
fadd
or
ror
lock
ret
push
and
or
pushf
cdq
cmp
sbb
stc
and
rcl
arpl
jno
jmp
sbb
das
loop
nop
hlt
add
movs
jns
aad
mov
push
nop
enter
aad
aam
or
mov
leave
leave
push
inc
test
nop
jno
sti
mov
idiv
int
loope
mul
inc
ins
cmp
nop
jae
push
hlt
mov
mov
gs
sbb
lahf
pop
inc
mov
out
push
ret
mov
xchg
mov
aam
fsub
jb
rcl
adc
les
sti
dec
push
xchg
out
ja
hlt
pop
adc
rcl
mov
(bad)
sbb
sbb
pop
ret
scas
cmp
inc
ins
push
or
icebp
nop
rcr
push
sbb
xor
cmp
pusha
or
mov
jl
cmp
test
lea
xchg
mov
lea
mov
inc
sub
movs
rcr
iret
push
lock
pushf
fpatan
jle
mov
pusha
pop
jns
ror
je
ins
mov
push
fimul
out
jne
lea
test
sbb
cmps
adc
sti
cmps
xchg
std
push
(bad)
movs
xchg
inc
dec
test
lahf
mov
les
sub
dec
sbb
cmp
js
or
xchg
lock
jb
push
mov
push
sub
pop
or
jbe
stos
aas
xor
cmp
cwde
mov
and
fstp
jns
cmp
sub
in
out
lea
sar
mov
retf
mov
(bad)
out
sub
rcr
std
lods
(bad)
xchg
sub
aaa
(bad)
sbb
jbe
jnp
clc
sub
scas
sbb
dec
mov
fldcw
inc
cdq
jp
in
out
cmps
fbld
mov
out
push
cld
xor
out
sbb
sbb
pop
pop
into
(bad)
mov
iret
test
icebp
hlt
icebp
push
mov
pop
push
scas
dec
or
aam
xor
sub
xlat
dec
mov
mov
mov
jne
leave
sbb
or
adc
push
inc
clc
adc
lea
test
or
cmp
dec
jp
xchg
shr
xor
stc
cmp
mov
cmps
jne
les
vphadduwq
sahf
icebp
loopne
fadd
ins
jle
xchg
inc
movs
clc
popf
adc
mov
lods
hlt
push
scas
xor
mov
mov
pop
mov
not
pushf
jae
pop
mov
inc
js
icebp
xor
pop
sahf
push
shr
cwde
inc
mov
sti
ja
loop
lock
dec
inc
in
iret
cmp
push
imul
xor
xchg
and
dec
retf
jle
sub
add
jmp
sbb
or
push
(bad)
jmp
imul
sub
clc
aad
mov
cs
movs
or
ds
and
mov
xor
push
ins
pop
aad
mov
mov
and
pop
cmp
jne
(bad)
sbb
es
mov
cld
imul
paddsb
enter
cmp
dec
jo
test
mov
mov
shr
jne
or
in
enter
fwait
lds
loopne
cmp
xor
aaa
or
iret
xchg
jbe
xchg
sub
xchg
pop
fdivrp
test
ja
inc
nop
mov
xchg
sbb
inc
punpckhdq
repnz
in
aaa
xchg
movs
call
xor
sbb
retf
mov
and
sub
add
add
es
(bad)
rcr
sbb
or
cdq
inc
aaa
es
inc
jl
in
cdq
adc
cmp
mov
inc
inc
mov
mov
repz
sbb
out
sbb
push
mov
lea
adc
enter
push
mov
pushf
add
outs
std
xchg
jmp
mov
stc
gs
mov
pop
outs
outs
jle
pop
sbb
and
jge
mov
inc
(bad)
pop
xchg
mov
sbb
enter
add
mov
mov
mov
enter
js
jne
or
std
retf
das
int3
push
aam
in
cld
jge
mov
and
or
jp
bound
add
lock
mov
(bad)
sbb
lods
sub
push
or
or
popa
fs
pop
push
or
out
(bad)
pusha
ror
movs
jl
sub
(bad)
jbe
jmp
ja
fdivp
inc
gs
test
cmp
cmp
aaa
xor
lea
retf
jmp
or
fs
jg
cmp
push
(bad)
inc
add
pop
mov
or
cmps
adc
pop
dec
and
cmp
call
cmp
call
iret
test
aam
and
call
fwait
inc
mov
jbe
cmp
cmps
lods
test
mov
xchg
xchg
js
xor
mov
daa
push
stc
aaa
das
test
std
retf
jecxz
xor
pop
add
addr16
leave
rcr
ret
cmp
push
adc
push
add
cli
adc
scas
(bad)
ss
jb
(bad)
xor
and
fadd
jns
mov
daa
sub
mov
sub
idiv
jecxz
jmp
mov
xchg
pop
add
adc
cmc
cmp
enter
(bad)
and
mov
sbb
into
ret
in
sbb
or
mov
lock
pushf
add
xchg
add
lods
mov
mov
stos
test
iret
xchg
js
sbb
jmp
ss
je
sub
repz
mov
and
out
aaa
and
movs
fcom
mov
fiadd
test
loopne
gs
scas
mov
mov
mov
push
dec
pop
mov
lods
and
test
stos
sub
test
(bad)
fucomi
add
xor
mov
call
mov
sub
aaa
(bad)
(bad)
xchg
pop
or
mov
cmovo
pop
inc
mov
fcomp
mov
rep
dec
sbb
paddw
jns
inc
adc
sub
in
imul
sbb
loopne
cmps
inc
dec
(bad)
push
mov
int
inc
xchg
xor
movs
mov
adc
mov
leave
mov
inc
jo
jae
fld
mov
and
mov
pop
jns
ds
mov
pop
sub
js
lock
test
loope
clc
into
cmp
pop
and
or
xchg
xchg
push
jbe
cmp
icebp
int3
fld
out
aad
call
pop
daa
sub
mov
rol
jno
mov
loope
(bad)
int
fimul
mov
xchg
test
and
cmp
and
cmp
add
or
pop
mov
xchg
loope
sbb
out
(bad)
sti
repz
imul
js
cmp
pop
sahf
aad
ja
les
mov
clc
add
jae
inc
int
and
out
mov
and
xor
out
shl
in
xor
xchg
xor
jle
or
jno
dec
mov
test
sahf
dec
lea
adc
fcom
mov
inc
xchg
test
push
xor
lds
js
fisttp
xor
push
xor
dec
inc
(bad)
call
push
in
test
int3
xlat
or
inc
mov
push
cmc
fisttp
mov
scas
push
rcl
loope
cli
or
out
xchg
in
jns
inc
ins
mov
sub
xor
jge
push
jmp
popa
inc
ins
push
test
adc
sahf
mov
sti
rcr
pop
es
inc
(bad)
enter
outs
jo
xor
ins
sub
and
xor
push
mov
scas
xor
cmp
js
sahf
push
mov
lock
push
ja
icebp
loop
adc
inc
lock
pop
jo
fisttp
inc
(bad)
push
(bad)
iret
mov
sub
inc
(bad)
mov
mov
xor
or
stos
leave
dec
sub
or
movs
inc
xchg
retf
mov
int3
xchg
cmp
xor
push
(bad)
fldcw
aam
pop
les
mov
mov
out
test
mov
hlt
xchg
jecxz
and
int
mov
mov
xchg
dec
mov
mov
inc
jmp
sti
daa
js
jo
add
ret
std
and
inc
jge
pop
cmp
test
rol
pushf
push
xchg
dec
ins
shl
fiadd
inc
(bad)
dec
dec
jl
lds
mov
mov
inc
(bad)
adc
jmp
inc
mov
add
and
or
(bad)
xor
clc
push
(bad)
leave
sub
dec
adc
push
out
rcr
adc
and
push
mov
stos
arpl
std
cmp
(bad)
pop
ss
in
cmps
fadd
pusha
loop
sub
push
inc
movs
dec
inc
dec
pop
pop
pop
bound
aas
pop
bswap
je
xor
dec
mov
loope
jle
xchg
bound
mov
pop
ins
iret
cmp
popa
push
mov
lock
shl
daa
sub
popf
mov
(bad)
nop
mov
xchg
jg
pop
jmp
mov
cwde
push
lods
jmp
pop
dec
fcomp
xor
mov
sbb
xor
add
test
shl
lock
loope
push
(bad)
icebp
jno
inc
mov
loopne
add
xchg
in
mov
dec
arpl
sbb
rcl
shl
jg
adc
jp
or
xor
or
lahf
adc
in
xor
out
jns
jle
call
rcr
loopne
pop
cld
and
shr
test
addr16
les
popa
sub
pop
pop
dec
sub
(bad)
dec
add
cmp
jl
(bad)
pop
in
iret
or
mov
sahf
mov
ds
jmp
xlat
adc
icebp
mov
jb
ins
fld
neg
cli
sub
fcmovnu
and
test
mov
adc
mov
push
add
sbb
iret
(bad)
daa
mov
xchg
mov
cli
pop
mov
dec
or
jb
adc
mov
pop
xor
scas
cmp
cmp
sub
mov
xchg
xor
inc
sub
int3
pusha
add
mov
mov
and
xor
pop
cmp
(bad)
ret
hlt
sar
idiv
icebp
(bad)
popf
adc
sub
inc
lock
mov
(bad)
loop
xchg
xchg
push
je
push
dec
mov
xchg
sbb
jb
sbb
and
mov
out
jo
std
cmp
sub
call
pushf
or
mov
jb
leave
mov
add
std
pop
inc
sub
adc
js
arpl
in
cmps
mov
and
mov
sbb
leave
ja
sub
pop
push
fadd
mov
add
or
dec
xlat
mov
jb
xchg
out
test
mov
aad
out
or
push
mov
stc
pusha
js
inc
ja
movs
cmp
out
scas
dec
(bad)
sub
aam
nop
mov
in
push
jmp
jp
ins
mov
and
sar
mov
pop
add
test
mov
or
pop
scas
int3
mov
fcomp
inc
xchg
mov
mov
bound
pushf
xchg
xchg
adc
ret
out
mov
sbb
xchg
ret
mov
xchg
outs
loope
push
xchg
jnp
(bad)
and
sbb
aaa
lds
adc
ret
add
mov
and
dec
push
fdiv
in
xor
sub
inc
pop
fdivr
js
into
push
sub
pop
fs
enter
mov
inc
les
pop
pop
ficom
aad
mov
mov
dec
mov
pop
mov
dec
in
lock
dec
mov
dec
pop
int3
push
retf
dec
and
jl
xchg
mov
imul
lahf
outs
retf
inc
mov
stos
repnz
jnp
jle
pop
pop
out
aad
retf
outs
mov
aad
aad
dec
pop
lods
or
loope
es
push
jns
mov
fstp
sti
scas
call
inc
lods
sbb
sahf
inc
push
(bad)
stos
fist
retf
push
mov
jmp
cmp
lock
(bad)
jmp
iret
retf
int3
cmp
sahf
jno
jnp
add
fisub
hlt
mov
je
fbstp
scas
jno
cmps
loop
xchg
mov
scas
xchg
in
xor
bound
ret
daa
xor
mov
add
mov
xor
and
mov
(bad)
mov
sub
retf
scas
lahf
adc
ins
mov
and
jg
and
jmp
and
cmp
pop
mov
je
mov
int3
(bad)
out
ja
sbb
push
xor
loopne
or
jle
push
add
push
cmp
test
test
mov
enter
add
adc
and
dec
repz
addr16
and
stos
jo
cmp
and
adc
xor
daa
or
movs
stos
popf
daa
xchg
mov
cmps
shl
xchg
xchg
cld
rcl
out
sbb
or
mov
aam
(bad)
mov
pop
xor
pop
shl
and
lods
popa
mov
test
or
inc
sbb
jmp
and
inc
out
shl
shl
daa
push
aas
mov
in
aas
mov
sub
sbb
test
mov
xlat
adc
adc
mov
add
bound
cwde
dec
shl
pop
cdq
inc
pop
cmp
in
xlat
sub
or
mov
push
cmp
ja
stos
sub
inc
clc
ins
sbb
jmp
jo
cmp
push
ret
jno
cmp
lahf
mov
push
imul
(bad)
fsub
movs
xlat
pop
sub
push
int3
mov
push
sub
and
jns
cmp
sar
sub
inc
sbb
icebp
xchg
add
fisub
sbb
movs
fnstcw
push
mov
push
adc
and
pop
push
aad
imul
dec
sbb
push
jle
fistp
gs
sub
test
aam
lods
push
stos
dec
inc
lds
ret
in
repnz
cwde
jl
or
jae
ds
ins
dec
pop
cmp
jmp
mov
int3
loopne
mov
stos
in
and
fiadd
inc
mov
or
add
mov
movs
outs
pop
xchg
stos
xchg
mov
sbb
ins
inc
pop
and
mov
and
mov
or
mov
stos
cmps
cmp
call
cmp
xchg
mov
repz
enter
mov
pop
sti
stc
sbb
ds
ins
mov
and
enter
dec
inc
jbe
ror
pusha
mov
call
lods
in
cmps
ror
xor
dec
call
mov
in
jmp
push
ror
aas
mov
ss
enter
mov
(bad)
aad
ds
gs
mov
dec
(bad)
mov
scas
sub
out
(bad)
pop
mov
inc
pop
scas
test
out
jnp
xchg
js
pop
jne
(bad)
int3
sbb
outs
jmp
fidiv
inc
dec
fidiv
adc
push
mov
in
pop
dec
mov
push
adc
cmp
sbb
and
rcr
cld
test
adc
dec
out
jbe
jo
test
mov
(bad)
sbb
cmp
mov
xchg
fisubr
adc
push
dec
add
leave
pop
mov
or
neg
xor
push
test
inc
push
sub
mov
xchg
jbe
imul
sub
shl
mov
fidivr
sub
inc
inc
sub
push
push
pop
aam
and
cmp
xlat
repz
and
mov
daa
not
mov
aas
ja
lea
rcl
sub
mov
out
inc
mov
pop
fisttp
(bad)
repz
jbe
push
jne
fs
add
lea
mov
repz
cvtps2pi
lods
movs
leave
mov
aam
imul
xchg
xchg
neg
adc
inc
popf
icebp
cli
call
adc
mov
push
adc
repnz
xchg
jge
shl
mov
pop
jle
mov
(bad)
push
ficom
sub
jmp
cmps
imul
out
lods
ficomp
mov
pop
pop
inc
mov
mov
xor
push
shl
daa
xor
xchg
pop
test
and
test
or
mov
test
add
cli
movs
jno
leave
test
mov
js
cmps
pop
test
mov
push
mov
mov
push
shl
pop
stc
fs
add
xchg
and
mov
jnp
jp
jnp
jp
cmc
adc
cmp
sbb
xor
(bad)
or
jno
mov
add
dec
ret
mov
pop
in
fild
and
fnstsw
push
scas
mov
sub
inc
xlat
call
xor
push
je
js
pop
rol
les
(bad)
dec
jmp
mov
xchg
cmp
jmp
mov
jb
aad
shr
cs
push
aaa
add
push
clc
retf
stos
pop
xor
mov
cmp
not
test
fdivrp
push
fisub
or
les
add
mov
dec
adc
pushf
mov
retf
or
call
cmp
cwde
sub
stos
popf
inc
ror
xor
cmp
inc
repz
arpl
clc
mov
xchg
std
cmp
scas
fisub
pop
bound
cwde
call
jnp
inc
popa
xor
mov
fcomp
xor
imul
sub
and
ret
xor
adc
xor
mov
popa
pop
imul
rcr
lahf
lahf
pop
xor
loope
ror
jae
or
enter
je
(bad)
hlt
mov
call
mov
jnp
mov
xchg
call
add
sub
in
pop
pop
xchg
adc
mov
std
out
imul
jg
jge
leave
or
sub
xor
xchg
mov
jecxz
jl
pop
adc
sbb
inc
mov
lds
pop
sub
inc
test
ins
xor
xchg
lds
scas
mov
fldcw
inc
cmc
fwait
imul
movs
or
and
or
popf
or
mov
sahf
fbld
sbb
push
cmp
cmps
xchg
cmps
shl
mov
popa
xchg
out
(bad)
xchg
sub
scas
mov
sub
mov
push
jp
fwait
or
into
inc
jmp
addr16
sbb
inc
or
fcomip
dec
mov
leave
cs
mov
js
xchg
and
retf
cli
mov
or
aad
in
pop
mov
mov
bound
jo
pusha
cld
mov
push
sbb
retf
add
movs
pop
gs
dec
shl
jbe
lds
cdq
mov
(bad)
cmp
in
scas
xchg
gs
scas
nop
ret
int
xchg
(bad)
xchg
pop
ins
sbb
mov
popf
in
pushf
jo
dec
mov
movs
xor
xor
cmp
(bad)
sbb
std
fsubr
scas
jle
dec
leave
mov
cwde
add
clc
or
les
ret
lea
pop
mov
ja
mov
add
daa
mov
mov
pop
adc
push
push
xchg
cmps
adc
add
nop
xor
ins
sahf
mov
leave
aad
pop
popf
aam
ret
out
ret
pop
adc
mov
sbb
cmc
scas
scas
imul
ds
mov
or
mul
or
loope
bound
sub
js
jno
cmp
lds
sahf
stc
imul
rol
xor
or
jge
fisttp
jno
aam
xchg
cmp
xchg
mov
inc
js
shr
inc
sahf
pop
mov
sub
sbb
sub
mov
cld
or
jnp
and
fistp
dec
mov
adc
leave
test
nop
push
aas
dec
sbb
out
mov
fcmove
in
add
dec
(bad)
and
jecxz
hlt
call
push
out
mov
pop
(bad)
in
dec
fsubr
adc
cmps
push
hlt
movs
dec
test
jmp
sbb
jo
leave
retf
adc
xor
jnp
or
jg
call
push
pop
sub
fs
nop
iret
rol
jmp
mov
retf
push
(bad)
xor
cmp
push
cmc
lock
dec
mov
add
pushf
cld
leave
icebp
popa
dec
mov
popa
mul
test
jmp
inc
ds
ins
scas
mov
xchg
cmp
lahf
lahf
pop
mov
dec
sbb
(bad)
and
mov
sbb
fisubr
(bad)
jae
std
out
or
pop
pop
add
arpl
mov
(bad)
outs
add
cmc
sbb
lahf
fild
add
mov
add
call
xor
or
loop
cmp
inc
inc
icebp
sbb
ror
jmp
(bad)
enter
cmp
out
adc
jb
xor
mov
push
mov
fnsave
inc
mov
cmp
out
(bad)
sti
cmp
mov
xlat
sub
das
jnp
dec
and
repnz
mov
stos
hlt
scas
adc
jle
mov
jmp
cmp
(bad)
adc
jbe
and
sbb
jmp
xor
rcl
sub
cmps
rcr
xchg
cmp
jne
mov
mov
sbb
outs
xor
sbb
jns
imul
sbb
fist
pop
add
cmc
sub
outs
xor
loop
jmp
fwait
enter
push
pop
pop
mov
imul
xor
daa
inc
dec
shr
jp
push
adc
aaa
xchg
int
jno
sbb
pop
test
pop
lahf
cmp
(bad)
(bad)
clc
out
int
pop
nop
aaa
nop
mov
in
sub
addr16
test
or
bound
sar
ret
test
push
outs
xchg
xor
cwde
test
sbb
int3
or
xchg
xchg
push
adc
leave
xchg
xor
mov
ins
push
jl
add
jne
push
xor
test
cmc
lahf
retf
out
lds
push
mov
or
sub
inc
ins
sub
and
outs
mov
outs
mov
cmp
into
lock
xchg
test
repz
cmps
jmp
jb
mov
inc
cmc
jle
rcr
mov
lds
sub
retf
or
dec
out
pop
pop
test
pop
into
mov
iret
jle
inc
mov
xor
in
out
push
jge
ret
outs
clc
cmp
in
aaa
ret
inc
enter
dec
loop
enter
xor
imul
movs
push
mov
jno
loop
clc
xchg
mov
sub
int
lods
push
(bad)
inc
add
jnp
mov
push
dec
lods
lea
in
mov
xor
into
inc
ja
repnz
in
std
das
add
push
inc
jp
or
or
mov
xchg
mov
mov
mov
leave
ja
mov
pop
mov
lods
leave
push
fmul
mov
mov
fld
pushf
jmp
mov
sub
push
mov
jmp
stc
(bad)
jne
cs
cmc
add
mov
pop
shl
loopne
jge
out
iret
sub
std
xor
int3
push
jl
pop
loopne
sub
cmp
addr16
(bad)
xchg
fwait
lock
add
add
mov
add
sub
in
add
imul
pop
jge
or
inc
and
mov
or
test
sub
push
dec
xor
pop
pop
or
push
bound
neg
xchg
xchg
sub
retf
pop
arpl
sub
or
push
sbb
mov
mov
mov
test
push
imul
cmp
pop
int
pop
addr16
ficom
adc
add
fdivr
push
(bad)
test
out
sbb
mov
lahf
xor
adc
xchg
or
call
jne
adc
pusha
pop
mov
arpl
inc
into
push
pop
jecxz
mov
(bad)
mov
dec
daa
jbe
jecxz
mov
mov
outs
mov
adc
push
push
adc
push
push
fcomp
nop
daa
idiv
mov
ins
or
bound
inc
sahf
std
fcom
bound
sbb
mov
jmp
adc
inc
inc
or
aad
in
in
clc
add
add
inc
mov
dec
not
lods
dec
dec
loope
xor
adc
dec
fisubr
and
jle
pop
or
test
jb
pop
pop
jmp
imul
addr16
xor
stc
int
fbld
push
(bad)
scas
stos
(bad)
ror
inc
ss
cmp
pop
mov
jne
mov
adc
pop
push
lock
pop
cmps
cli
pushf
imul
(bad)
xor
lock
popa
and
pop
cmp
mov
(bad)
mov
add
xor
jle
push
add
dec
mov
(bad)
aam
adc
mov
fmul
push
or
(bad)
sahf
gs
push
mov
jnp
sub
mov
jae
test
mov
adc
xor
nop
mov
fisubr
jnp
fadd
xchg
pusha
jmp
sbb
lock
test
(bad)
cmps
cdq
adc
sbb
pop
adc
push
ds
sti
pop
call
inc
repz
xchg
cdq
pop
xor
mov
js
cs
loope
mov
push
and
xchg
xor
push
repz
fsub
rcl
call
ja
rcl
sbb
inc
sbb
inc
addr16
mov
test
(bad)
jl
outs
mov
imul
xchg
add
cmp
fs
sub
adc
sub
sub
imul
xor
test
stos
mov
cmps
fwait
cli
and
setle
cmc
imul
icebp
fbstp
xchg
cmp
jne
rol
add
stc
xchg
ret
jecxz
push
sbb
push
call
mov
pop
mov
mov
or
popa
inc
in
adc
adc
iret
daa
xor
aad
push
es
ret
inc
(bad)
cs
out
or
ret
mov
push
inc
inc
ds
mov
scas
sbb
push
repz
popa
sbb
adc
movs
movs
std
jnp
jb
out
push
data16
mov
adc
leave
in
test
call
pop
mov
fldenv
adc
shl
add
sbb
je
inc
or
(bad)
xor
cwde
ins
pop
mov
in
rcl
xlat
pop
jecxz
push
stos
mov
push
mov
mov
jae
mov
fdivr
aad
dec
int3
cdq
and
adc
daa
call
repnz
mov
(bad)
xor
and
je
(bad)
repnz
cmp
fild
mov
push
in
pop
mov
(bad)
(bad)
sbb
bnd
xor
fistp
inc
retf
cmp
mov
xchg
sub
mov
pop
sbb
jns
ret
(bad)
pushf
mov
imul
movs
retf
lock
cmc
test
sbb
movs
cmc
adc
pop
out
mov
mov
dec
ret
es
fsub
pop
ret
cmp
add
or
and
je
xchg
inc
test
push
sub
dec
int
int
mov
jge
(bad)
sahf
mov
pop
loopne
in
xor
and
jae
xlat
adc
jmp
enter
out
nop
icebp
jns
hlt
mov
mov
mov
test
outs
(bad)
test
xchg
cdq
gs
dec
xchg
gs
add
cwde
ja
or
xchg
add
lock
cmps
dec
xchg
add
jp
int
mov
bound
jmp
mov
call
mov
push
or
in
jecxz
outs
xchg
adc
push
mov
and
fsub
or
ja
cmp
mov
xor
xor
dec
mov
repz
ror
out
out
ins
add
and
cdq
frstor
push
mov
adc
cmp
stos
mov
add
test
js
or
pop
es
retf
pop
push
aaa
inc
sbb
outs
scas
mov
lods
mov
ss
fidivr
mov
sahf
fucom
mov
daa
dec
lods
adc
pop
mov
push
cmp
lahf
stc
aam
fs
cli
pop
cmp
addr16
test
stos
and
in
mov
push
rcr
push
loope
xchg
(bad)
out
inc
fwait
and
jmp
push
repnz
mov
sahf
movs
push
sub
ds
inc
int
scas
push
cmc
retf
sbb
push
nop
lds
int3
es
xor
or
and
inc
jmp
jae
push
lea
cmp
push
cmc
add
sbb
(bad)
add
add
clc
xor
mov
jecxz
cld
inc
pop
int
fwait
pop
shl
lahf
adc
cmp
sub
xchg
outs
xchg
fwait
and
int
sub
or
into
jno
inc
mov
mov
shl
outs
xchg
or
inc
inc
jnp
push
inc
push
mov
inc
mov
pop
cmp
sbb
retf
and
shl
out
mov
dec
push
stos
fucomi
push
cdq
pop
and
and
scas
and
adc
push
ins
jmp
test
out
sahf
loop
stc
ja
mov
xchg
push
stos
inc
idiv
(bad)
(bad)
movups
mov
nop
test
cmp
add
movs
inc
sar
arpl
out
mov
into
lds
add
arpl
sahf
fldcw
loope
enter
in
imul
jmp
std
or
xchg
arpl
shr
push
mov
pop
adc
sub
in
xchg
(bad)
ja
test
pushf
data16
stos
cdq
cmp
int3
or
xchg
sub
jp
scas
adc
repnz
xchg
mov
mov
add
fldenv
or
rcl
test
xor
mov
subps
es
dec
pop
lds
push
out
sub
pop
or
xchg
pop
(bad)
pop
inc
or
jp
pop
add
scas
xlat
pop
in
sub
test
mov
lods
outs
fwait
xor
sub
add
and
outs
xchg
stos
jb
outs
xor
sbb
push
pop
or
and
sub
push
xor
mov
mov
xchg
lea
lods
cmp
loopne
inc
enter
add
test
adc
mov
out
fstp
pop
mov
lock
popa
push
int3
shl
sbb
cli
sub
mov
jnp
pop
(bad)
call
inc
in
cld
sahf
push
hlt
jae
sbb
imul
test
dec
hlt
jmp
mov
lods
add
or
sub
mov
sub
add
adc
leave
dec
scas
mov
xchg
sbb
mov
sub
fs
test
lahf
dec
sub
jae
js
fwait
sub
out
push
push
cli
addr16
fimul
in
or
cmp
ror
mov
outs
sub
mov
hlt
ret
jbe
or
xchg
dec
inc
int
push
jmp
neg
push
xchg
jnp
pop
cli
xchg
pop
ja
or
push
and
mov
stos
cwde
test
push
retf
mov
(bad)
lea
js
adc
int3
dec
sbb
sbb
dec
sbb
nop
int3
cmp
jp
add
loop
inc
push
mov
mov
push
popf
sub
and
imul
loopne
mov
jo
lods
retf
frstor
fsubr
jmp
lock
aam
scas
adc
imul
retf
xchg
test
fidivr
loop
arpl
inc
add
mov
sub
jp
adc
add
dec
jo
inc
mov
rcr
pop
stos
iret
inc
(bad)
fist
mov
dec
ja
cmp
adc
sahf
movs
ds
fldenv
add
mov
sub
add
les
call
inc
cmps
sbb
adc
push
into
lahf
adc
mov
call
inc
das
jmp
daa
bound
fcom
or
ror
ret
(bad)
lahf
pop
or
adc
or
test
xor
and
add
ss
test
jg
sbb
sbb
out
push
test
(bad)
arpl
cmc
sub
mov
push
cmp
xor
mov
in
stc
jbe
nop
mov
sub
dec
aaa
mov
in
and
mov
test
or
dec
mov
or
adc
cld
mov
popa
out
bound
inc
push
(bad)
imul
(bad)
sbb
adc
push
call
push
mov
std
(bad)
hlt
out
dec
ja
mov
jmp
mov
mov
popa
cmps
inc
push
adc
test
rcl
daa
mov
fld
(bad)
int3
mov
cmp
clc
jae
sbb
retf
push
inc
sub
and
sub
sbb
fadd
and
cs
jl
mov
sar
push
or
sbb
pop
lock
xchg
lea
mov
into
lds
push
data16
lods
push
test
push
push
pop
ret
pop
mov
mov
and
popa
inc
cmp
mov
add
adc
loop
dec
lahf
cmp
pop
xor
fiadd
test
imul
fisttp
mov
xchg
xor
fwait
pop
hlt
jle
rol
mov
outs
mov
sbb
push
rcl
xchg
sbb
aad
pop
adc
sbb
sub
xchg
push
add
jg
stc
loope
jbe
ror
data16
xchg
jo
jnp
cmp
ins
and
push
mov
jecxz
sub
push
xlat
xchg
leave
xor
or
mov
mov
cli
cdq
xlat
mov
lods
jo
imul
es
or
dec
jl
jb
push
pop
imul
mov
(bad)
test
fsub
mov
dec
pop
sahf
outs
cmc
les
mov
xchg
iret
push
add
or
mov
xor
pusha
cmp
push
(bad)
arpl
aad
mov
lods
(bad)
inc
retf
mov
leave
push
jo
(bad)
mov
mov
pop
dec
outs
inc
clc
pushf
test
mov
mov
or
cmp
sbb
jmp
jo
push
pop
mov
arpl
lods
push
loop
jecxz
xchg
adc
test
cvtps2pd
stc
xor
test
(bad)
jp
imul
sbb
fadd
pop
and
sub
or
mov
icebp
pop
and
mov
and
(bad)
dec
arpl
jl
push
aaa
pop
sub
das
cdq
test
push
mov
test
nop
ficomp
sbb
push
fcomp
xchg
xchg
ds
jnp
aaa
enter
add
inc
mov
idiv
jb
sub
mov
push
lahf
xor
adc
pop
std
inc
mov
mov
xchg
in
rcl
mov
xor
pop
cwde
fnstenv
and
jl
fidiv
mov
sbb
aam
jbe
popf
movs
in
pop
(bad)
or
or
ret
pop
pusha
repz
push
mov
jg
ins
imul
dec
push
popf
adc
and
mul
push
mov
sbb
pop
call
and
int
inc
xor
add
push
idiv
sub
mov
mov
xor
addr16
test
retf
das
jo
push
pop
mov
fbstp
xchg
fs
loopne
popf
dec
shl
lea
push
push
add
sbb
pop
mov
arpl
or
out
sar
ja
cmc
rol
pop
(bad)
js
adc
lahf
int3
lods
jmp
xor
das
aam
mov
aad
call
cmc
(bad)
adc
sub
mov
loope
add
ret
push
out
fnstsw
(bad)
test
mov
cwde
fisttp
lods
fsubr
arpl
shl
out
nop
aas
jns
sahf
into
inc
lods
mov
add
adc
xchg
mov
cmps
dec
jge
push
push
shl
outs
or
mov
and
pop
inc
add
pop
les
sub
hlt
push
add
cmp
dec
popa
cmps
cmp
stos
dec
cmp
fs
push
mov
xchg
mov
aaa
push
mov
ror
adc
sbb
inc
dec
cs
xchg
loop
loope
(bad)
ins
rcl
inc
or
je
aad
fstp
fwait
or
call
pushf
stc
add
gs
dec
xchg
jl
daa
lock
mov
(bad)
movs
aam
mov
pop
sub
add
adc
fwait
std
pop
dec
push
aas
mov
lods
retf
xchg
fst
(bad)
mov
into
retf
dec
jo
sub
sub
inc
or
adc
in
xlat
out
xchg
in
aaa
inc
pop
jne
and
scas
in
iret
add
sbb
imul
test
aam
popf
cmp
or
jmp
and
add
stos
add
enter
idiv
cli
stos
dec
xchg
sbb
pop
aas
(bad)
(bad)
jg
dec
(bad)
sidtd
adc
push
and
retf
mov
retf
add
sti
xor
cmp
enter
cli
inc
outs
jecxz
sub
scas
mov
xor
xor
add
pop
cmp
cmp
in
sbb
pushf
(bad)
dec
mov
in
lahf
loope
pop
mov
push
repz
dec
xchg
scas
test
gs
cmps
mov
aas
mov
imul
outs
mov
js
push
daa
inc
aaa
in
jbe
ins
jmp
data16
push
rcr
jmp
mov
push
mov
movs
cdq
stos
movs
xchg
call
data16
sub
shl
cmps
mov
outs
mov
rcr
adc
ror
push
cmps
add
mov
stc
andnps
das
jle
leave
test
sbb
xchg
dec
and
sbb
xchg
sahf
imul
push
fld
call
dec
mov
inc
les
jne
mov
ja
pop
sub
pop
scas
push
ror
out
push
sbb
mov
xchg
test
cdq
or
xor
xchg
and
inc
lods
daa
(bad)
cmp
jne
and
or
mov
test
pop
dec
repnz
jnp
jae
xchg
sbb
aaa
gs
add
sbb
mov
inc
invd
arpl
inc
sub
test
ins
push
or
daa
test
bound
mov
sbb
pop
sub
and
lea
cmps
push
ficom
adc
ja
or
push
jno
push
push
mov
mov
lea
mov
cmp
ja
fs
pop
cmps
add
cmps
imul
push
gs
push
rol
retf
add
test
sahf
mov
inc
mov
xchg
ror
sbb
and
mov
in
mov
cmp
fwait
mov
retf
xor
les
xchg
xchg
pop
repnz
(bad)
lea
jo
push
fild
mov
mov
aaa
and
int3
sbb
cdq
cld
sub
imul
lea
xchg
in
fwait
imul
inc
in
test
and
dec
(bad)
mov
mov
call
pop
cmp
popa
mov
xchg
xchg
sti
cmp
pextrw
push
mov
sbb
loop
xor
adc
repz
and
jb
(bad)
or
call
int3
mov
pop
repnz
pop
xchg
xor
mov
fs
aaa
push
movs
cmp
jne
and
bnd
lea
int3
std
and
inc
imul
mov
retf
aas
adc
cmp
aam
adc
adc
xchg
sub
sub
pop
xchg
jp
aas
jmp
aaa
inc
daa
mov
cmp
inc
test
rol
dec
sbb
lds
test
pop
dec
movs
hlt
fisub
xchg
sahf
shr
test
inc
jecxz
daa
mul
in
mov
sbb
and
cli
xchg
jp
lds
sub
mov
mov
cmps
(bad)
(bad)
cdq
mov
mov
jle
fidiv
stc
pop
pop
and
loop
in
cmp
sub
stc
mov
mov
push
or
nop
jl
icebp
jb
dec
add
ja
jne
popf
dec
push
in
sub
jecxz
sbb
pop
push
scas
int
rcr
mov
push
loopne
sub
jne
xor
pop
dec
jmp
inc
cmps
sbb
xchg
cmp
fisttp
daa
jo
out
xlat
adc
jbe
xchg
lahf
xlat
jne
push
sbb
push
push
gs
jb
inc
dec
sub
or
sub
pop
movs
cmp
test
xchg
mov
mov
cmp
mov
repnz
adc
xor
pop
push
mov
mov
jecxz
mov
jge
jbe
fld
push
shl
mov
pushf
rol
bound
call
adc
inc
and
xor
xchg
rcl
(bad)
xor
sahf
nop
fsubp
es
fbstp
stos
add
fsubp
mov
pop
out
sbb
ror
icebp
test
jl
or
adc
mov
daa
adc
mov
jne
xor
mov
outs
sub
xchg
cmp
xchg
xor
mov
mov
push
ja
inc
vunpckhps
jecxz
jge
add
pop
jnp
push
push
push
in
std
jmp
mov
repz
pop
mov
dec
ja
dec
jmp
jl
in
sahf
bound
(bad)
adc
push
stc
ret
mov
mov
pcmpeqw
pop
mov
xor
mov
pop
jae
pushf
bound
(bad)
xchg
fisubr
out
xor
and
(bad)
(bad)
inc
out
push
idiv
sar
mov
out
pop
xchg
mov
mov
cmps
sbb
dec
cmp
pop
int
hlt
into
and
sub
and
sub
mov
adc
ja
test
xchg
ds
push
add
pop
test
ins
imul
shl
jns
sub
adc
sti
mov
xchg
shl
xchg
adc
jnp
jmp
push
pop
call
inc
pop
test
les
pop
shl
and
rcr
test
pop
(bad)
cli
ins
adc
push
fs
outs
adc
(bad)
(bad)
bound
mov
into
lahf
dec
rcl
mov
push
pop
js
aad
mov
and
imul
stc
dec
jecxz
pop
test
sbb
call
add
icebp
add
dec
mov
enter
sahf
cs
and
or
pop
in
sbb
imul
jne
icebp
xchg
dec
cmps
mov
add
pushf
mov
mov
add
pushf
ror
lods
cmp
ins
out
jne
scas
mov
popa
or
cli
and
ins
outs
gs
mov
rcl
fwait
cli
cs
out
out
xor
push
jmp
cmc
clc
or
(bad)
push
add
ret
inc
lahf
add
mov
push
sub
mov
push
mov
test
push
sahf
cs
jl
iret
movs
clc
leave
call
push
sbb
jnp
sti
(bad)
adc
icebp
arpl
dec
inc
push
mov
mov
jmp
mov
inc
call
lods
cmps
outs
dec
out
(bad)
lds
inc
mov
and
ins
jns
inc
pop
mov
mov
adc
xchg
inc
test
test
push
mov
loope
icebp
xor
adc
dec
sqrtps
sub
stc
lea
jge
ror
mov
mov
or
mov
retf
shl
xchg
add
push
mov
scas
push
jge
popa
rcr
mov
fcom
xchg
jp
sub
jo
pop
popa
and
xor
call
mov
aaa
and
cmps
adc
in
and
mov
pop
fisttp
repz
push
adc
scas
clc
add
push
ror
sbb
in
mov
jecxz
iret
dec
mov
and
ins
icebp
ds
adc
jb
cwde
mov
pop
or
mov
or
cmp
sbb
or
add
mov
inc
sub
inc
xor
lahf
and
adc
imul
add
gs
leave
mov
mov
in
mov
dec
mov
cmp
mov
(bad)
pop
lock
pop
ffreep
mov
pop
arpl
inc
jecxz
add
iret
ins
data16
lds
out
ror
push
jmp
in
mov
in
and
or
shl
cmp
cmp
mov
dec
pop
(bad)
dec
iret
mov
xor
fwait
repz
jl
out
shl
mov
dec
push
ss
jg
rol
gs
xor
and
mov
aad
jle
ror
cmp
dec
loop
div
scas
add
ds
lahf
imul
dec
test
pop
xor
xchg
dec
dec
xor
inc
rol
pop
push
mov
lock
sub
retf
pop
mov
pop
or
ret
xchg
adc
xchg
jne
jbe
and
jb
enter
pop
adc
loope
xchg
dec
rcl
xor
jbe
ins
(bad)
push
lock
mov
xor
sub
pushf
pusha
(bad)
scas
jb
dec
mov
scas
out
bound
loopne
movs
and
fcmovne
or
fcmove
outs
sbb
adc
sahf
fisubr
ret
jne
cmp
jb
xor
mov
loopne
mov
sbb
xor
add
jmp
mov
cmp
mov
cs
jne
add
pop
mov
add
adc
scas
pop
push
aad
or
mov
das
stos
not
loope
dec
push
imul
rcr
xchg
cmp
push
add
in
out
adc
xchg
and
aaa
repnz
fsubr
loopne
popf
retf
jle
xor
outs
adc
cmp
jle
test
out
(bad)
ja
out
daa
fwait
repnz
gs
and
out
or
sub
add
retf
dec
out
arpl
add
mov
sbb
mov
pusha
fwait
scas
mov
cdq
mov
mov
jmp
cmp
dec
test
nop
sub
cmc
bnd
push
mov
ss
lods
sbb
add
push
movs
retf
rol
mov
out
psubsb
xchg
jle
push
inc
pop
or
push
mov
mul
pop
cld
add
test
int
sub
pop
scas
sub
addr16
retf
inc
mov
mov
int
stc
sub
shl
inc
or
dec
sub
shr
fcomp
dec
jl
mov
add
mov
pop
jg
xor
adc
cli
lods
dec
sahf
sbb
adc
jae
ss
ds
xor
mov
add
adc
push
jne
jl
push
inc
es
mul
sbb
mov
ds
clc
pop
jae
test
push
daa
dec
outs
lea
pop
adc
nop
std
into
ja
test
and
push
xchg
(bad)
repz
imul
mov
daa
xor
shr
retf
pop
mov
jmp
xchg
cmps
add
jge
hlt
xchg
cmps
test
jb
ror
push
lahf
adc
ins
pop
dec
jmp
mov
dec
mov
repnz
sahf
xor
mov
stc
xor
(bad)
sahf
popf
fwait
mov
sbb
rcr
push
hlt
sub
(bad)
jge
fiadd
or
xor
mov
cmps
adc
add
mov
cld
(bad)
and
mov
gs
inc
mov
or
aas
(bad)
jge
adc
fwait
repz
xchg
mov
push
adc
push
xchg
add
push
aas
xor
punpcklbw
bound
inc
and
dec
gs
jne
cmps
dec
mov
retf
retf
call
mov
push
xor
das
add
cwde
and
add
lds
push
xchg
and
enter
push
xsaves
push
in
pop
inc
stc
jb
adc
cld
sahf
dec
addr16
cmp
xchg
imul
(bad)
xchg
pop
pusha
repz
dec
xchg
fimul
mov
jno
cmps
xor
cmp
jnp
sub
hlt
test
repz
je
sub
sbb
jbe
add
cmp
out
mov
inc
out
mov
or
mov
or
push
and
fcmovne
(bad)
inc
int
sbb
retf
out
add
fcmovnbe
adc
data16
out
jns
push
pop
out
leave
cmp
(bad)
out
cli
int
xor
loopne
dec
lods
dec
stos
icebp
push
mov
add
and
out
mov
cmps
(bad)
lods
add
cwde
sub
leave
fld
add
fwait
mov
and
(bad)
sub
xchg
test
frstor
pop
xor
add
movs
mov
scas
aam
stos
cld
mov
push
push
push
int
mov
push
xchg
adc
push
cmp
inc
cli
xor
xor
(bad)
gs
inc
add
add
aam
fbld
adc
cmp
mov
pop
test
cli
mov
or
xchg
test
outs
dec
adc
pop
lods
in
test
test
sub
fstp
dec
pop
inc
or
ds
push
jecxz
(bad)
fdiv
retf
cmp
iret
inc
adc
cmp
add
jae
jne
jecxz
xchg
dec
(bad)
frstor
cmp
aad
push
pop
sbb
push
sub
ss
iret
pop
adc
add
pop
fwait
loope
lds
ja
push
pop
mov
ror
xchg
mov
cdq
sub
(bad)
dec
sub
cwde
or
aaa
mov
push
jl
jbe
je
mov
pusha
fisttp
jo
test
pop
mov
push
in
cmp
xchg
(bad)
jns
sti
cdq
and
ja
push
xchg
out
dec
je
or
ds
imul
add
lea
xor
aaa
gs
jl
lds
push
xchg
lods
enter
test
loopne
movs
cdq
in
scas
je
ins
adc
add
push
jge
inc
jnp
loope
arpl
push
arpl
and
xor
xor
cs
nop
mov
mov
inc
jg
mov
cmp
push
aaa
mov
int3
push
out
(bad)
adc
push
add
or
imul
or
xchg
mov
or
sti
and
repnz
push
cmp
add
jnp
xchg
pop
test
and
pop
cli
xor
or
scas
mov
jbe
cld
add
inc
jmp
push
push
dec
test
cmp
inc
add
jle
test
sbb
adc
scas
mov
jmp
mov
push
pop
pop
aam
ret
jnp
cmps
es
shl
lods
inc
mov
gs
xchg
das
dec
rol
add
xor
xchg
sbb
stos
sbb
add
imul
fwait
xor
push
in
xchg
jo
pop
sahf
test
not
fmul
sub
or
aad
loop
mov
lock
sar
lea
gs
mov
sbb
popf
mov
lahf
clc
js
rcr
(bad)
outs
dec
stos
sub
add
and
lods
leave
dec
xor
ret
adc
test
les
dec
aam
call
add
pop
and
(bad)
mov
stc
mov
mov
enter
xor
rcr
pusha
jae
je
mov
fdivr
cmp
ja
out
mov
cmp
test
test
xchg
mov
mov
mov
mov
ret
pop
ins
fisub
cwde
add
cmc
dec
out
xchg
mov
loopne
in
xor
repz
sbb
je
lods
cli
lock
xchg
cld
cmp
pop
cmp
fwait
or
gs
sub
(bad)
mov
sahf
sub
jmp
retf
mov
inc
push
inc
lea
pop
leave
(bad)
hlt
mov
push
mov
sub
imul
ret
dec
pop
push
xor
(bad)
nop
fdivr
jge
push
not
dec
and
adc
jecxz
jp
cmp
push
or
add
jns
xlat
or
pop
and
ror
pop
mov
push
fdivr
mov
stc
jno
mov
cmps
xchg
fcomp
and
icebp
pop
dec
xor
xlat
add
rol
das
outs
add
jg
mov
(bad)
sbb
fist
pushf
jl
test
sbb
add
mov
mov
dec
inc
stos
enter
mov
cmp
stc
das
push
and
pop
cmps
xchg
jae
aaa
lahf
mov
lea
jge
std
push
dec
and
jns
sti
jo
jg
pop
cdq
es
(bad)
mov
jp
xchg
adc
cmps
outs
mov
dec
fwait
test
and
sar
retf
(bad)
xchg
and
jns
fsub
inc
and
sar
xchg
mov
and
jb
dec
fdivr
mov
xchg
pop
fiadd
outs
repz
pop
lock
xor
pop
popf
xchg
or
add
xor
hlt
fiadd
imul
fiadd
aam
inc
mov
push
aas
mov
sbb
test
and
push
in
dec
jmp
(bad)
jp
arpl
or
out
inc
and
stos
sub
mov
hlt
enter
bound
mov
repz
lea
adc
adc
or
mov
pop
adc
imul
mov
sub
mov
hlt
cmp
add
inc
test
jnp
jl
xor
ins
and
(bad)
cmps
movs
adc
loopne
sub
aad
pop
stos
push
mov
pop
aad
sbb
jmp
jle
enter
into
adc
mov
fnstenv
lods
sub
push
jl
mov
mov
pop
pusha
push
cmp
adc
imul
xor
xchg
mov
mov
jbe
dec
(bad)
sbb
lods
jl
xchg
adc
ss
adc
fiadd
les
adc
jae
or
cli
std
mov
jle
and
add
jb
cmp
pop
sbb
fbld
mov
jp
adc
mov
fcomp
inc
out
dec
mov
xchg
adc
sahf
and
aas
push
(bad)
fst
aaa
push
(bad)
mov
jp
(bad)
call
jg
stos
icebp
mov
sub
sub
mov
std
dec
sub
jbe
or
pop
movs
scas
xchg
ret
jae
ror
outs
pop
jmp
fistp
ins
repnz
inc
fnstenv
push
mov
es
mov
lods
clc
(bad)
mov
ret
cmc
fs
mov
test
fidiv
test
xor
mov
cdq
sbb
push
icebp
mov
mov
pop
fdivr
ss
jecxz
jnp
sar
push
leave
xor
inc
sub
adc
pop
lods
rcr
xchg
pop
shl
mov
rol
add
fnstcw
repnz
pop
inc
push
jmp
(bad)
dec
dec
arpl
lds
jo
ret
pop
adc
pop
aam
inc
out
sub
mov
jp
call
push
or
mov
cmp
lea
inc
aad
pop
inc
inc
adc
xor
push
icebp
mov
jne
not
mov
enter
push
stos
ffreep
test
push
and
jl
or
xor
or
mov
push
mov
jge
cmps
or
mov
jle
mov
icebp
scas
dec
mov
fld
in
or
dec
les
ret
outs
sbb
loop
sbb
jmp
add
xlat
pop
sti
outs
and
or
sbb
in
jo
sbb
sbb
dec
sbb
push
inc
ret
icebp
xchg
sbb
adc
hlt
sbb
mov
lods
inc
cmc
stc
aaa
xchg
inc
push
addr16
jle
(bad)
imul
les
nop
dec
push
cmc
hlt
xchg
scas
out
(bad)
xor
push
cmps
push
int3
pop
jo
adc
fsub
mov
lea
xchg
out
sahf
mov
fldenv
sbb
adc
clc
inc
ja
sub
pop
dec
cmc
aaa
jmp
mov
push
js
and
hlt
inc
push
fs
(bad)
aam
or
popa
mov
push
and
int
ins
mov
sub
les
pop
jb
popa
sub
jmp
push
jae
push
fchs
ret
mov
jne
jl
and
fnsave
loope
pop
fadd
pop
pop
fdiv
lahf
push
movs
addr16
mov
int3
inc
mov
mov
fdivr
push
inc
aaa
fsubr
jge
pop
shl
retf
pop
dec
xchg
adc
lods
dec
inc
jbe
inc
test
and
mov
mov
mov
mov
push
xlat
xchg
xchg
repnz
imul
lock
mov
cmc
pop
adc
lock
sub
mov
mov
mov
sahf
jns
pop
lock
and
ror
aaa
add
sub
(bad)
fisttp
test
fidiv
jp
xchg
and
jne
mov
call
aaa
inc
dec
cdq
fild
test
xor
xchg
xchg
and
in
jg
add
rcl
cmps
cmp
pop
adc
cdq
lahf
xchg
test
sub
hlt
dec
jb
adc
sub
cmp
mov
ficomp
fstp
ret
xchg
jbe
adc
sbb
cli
jns
jo
arpl
movs
out
sub
xchg
pop
sbb
pusha
sbb
and
enter
dec
rcl
(bad)
out
xor
call
xor
(bad)
test
jb
push
mov
push
cld
xchg
cmp
lahf
mov
sub
into
mov
push
fcom
add
xor
push
mov
je
xchg
(bad)
mov
and
call
sbb
add
or
iret
int3
repz
mov
ds
ret
sub
xor
out
stos
push
clc
lea
cwde
or
in
mov
jge
xchg
adc
or
test
adc
repz
xchg
cmps
or
int
fcom
iret
out
add
sub
cmp
inc
ds
mov
jo
mov
xchg
fwait
stc
jge
push
scas
(bad)
jnp
or
call
jnp
int
mov
inc
inc
call
pop
mov
cld
ret
shr
lahf
inc
fsub
jle
jmp
rcr
adc
out
ret
ja
stc
and
lods
test
xlat
(bad)
xchg
and
mov
gs
push
movs
(bad)
pop
icebp
ss
cmp
or
and
scas
sub
sbb
pop
movs
mov
outs
mov
xor
arpl
shr
jmp
add
lea
gs
imul
push
mov
push
add
cdq
adc
pushf
icebp
movs
jecxz
cmc
das
aad
les
sar
add
and
cmp
push
mov
sbb
mov
arpl
(bad)
adc
pop
loopne
daa
arpl
sbb
adc
sbb
lea
or
push
xchg
scas
xchg
xchg
outs
je
add
stos
std
push
pop
int
adc
pusha
mov
frstor
das
stos
push
sbb
push
stc
out
addr16
cmps
nop
mov
les
fidivr
xor
lods
xchg
mov
icebp
sti
add
adc
in
inc
mov
mov
test
in
sub
out
and
and
int
add
lods
cdq
inc
mov
fiadd
leave
ret
or
mov
imul
or
js
sbb
mov
mov
adc
mov
out
adc
adc
adc
hlt
mov
addr16
scas
pop
sub
inc
and
(bad)
retf
nop
cmc
xchg
lods
xor
outs
mov
jmp
pop
xlat
jge
push
push
retf
(bad)
adc
ret
fxam
mov
cwde
sbb
pop
xor
popf
fdivr
ficomp
xchg
dec
mov
dec
mov
cmp
imul
sub
lods
cli
sahf
jmp
int3
repz
mov
push
test
mov
sub
stos
sbb
cli
(bad)
add
shl
loop
jmp
sahf
jbe
lahf
call
push
call
outs
into
ret
inc
jnp
sti
jne
xor
clc
int3
(bad)
push
add
jae
stos
mov
fcom
or
shl
jns
rol
ins
add
push
arpl
push
enter
repz
cmp
rcl
iret
je
outs
mov
sbb
pop
jb
gs
add
sbb
add
adc
adc
mov
adc
std
and
lahf
cs
ffreep
sbb
pop
pop
mov
mov
xchg
das
pop
sub
pavgw
out
and
xor
xor
adc
or
fcomp
fwait
mov
xchg
imul
lods
movs
push
mov
sub
outs
adc
sub
es
push
rol
lods
and
inc
jnp
inc
ins
stos
ud2
sahf
jmp
loopne
std
sbb
pop
xchg
add
sub
xor
dec
and
test
dec
mov
inc
imul
jnp
mov
fmul
test
mov
dec
add
inc
add
mov
jmp
(bad)
sub
inc
inc
cmp
fnstsw
cmp
lss
push
call
out
inc
cld
mov
pop
jns
fisub
dec
sbb
pop
or
adc
xchg
sub
rol
and
sub
jns
test
adc
pop
out
and
xchg
xor
and
data16
in
jns
mov
mov
push
push
and
pop
mov
xchg
adc
ror
int3
push
mov
jnp
add
adc
mov
push
push
in
outs
inc
ficom
push
shr
pop
mov
cmp
mov
xchg
push
inc
rol
in
fldenv
retf
sbb
cli
and
fimul
mov
mov
adc
add
retf
shl
pop
pushf
xchg
js
or
outs
repnz
outs
test
mov
call
cmp
adc
xchg
mov
or
ja
leave
dec
gs
push
mov
dec
cmps
loop
mov
scas
imul
adc
cmp
das
or
and
jp
ret
std
add
mov
repz
push
stos
sub
push
and
mov
dec
sbb
lds
pop
pop
in
push
adc
repz
sub
mov
hlt
retf
jmp
arpl
out
ds
shl
les
in
ds
in
xor
dec
out
push
jnp
dec
jo
in
into
or
out
inc
sub
jge
adc
nop
lahf
or
dec
cmp
lds
cmp
sbb
repz
imul
pop
mov
xchg
dec
sti
and
dec
xchg
js
les
sbb
sub
stos
add
sahf
popf
jae
lahf
gs
cld
cmps
loop
addr16
dec
add
aad
movs
jne
cmp
xchg
cmp
mov
scas
xor
retf
push
mov
sub
test
add
mov
cmp
adc
push
mov
inc
fcmovnb
sbb
or
add
xchg
sbb
cmp
icebp
ret
fwait
iret
cmc
movs
push
mov
mov
inc
scas
jae
sub
pop
xchg
xlat
imul
jbe
leave
inc
cmps
mov
(bad)
lock
lock
adc
mov
and
fcmovnb
fisttp
add
sub
xchg
cli
sbb
pop
test
lock
push
push
adc
in
mov
dec
cmp
jp
and
add
cs
cmc
scas
sbb
cmc
mov
push
fisttp
dec
cmps
sub
jo
mov
das
sahf
loopne
push
sbb
jge
or
dec
in
add
fild
pop
sbb
mov
sub
icebp
cmps
sub
pop
loop
cmp
or
cmp
in
aas
lods
cmp
adc
jmp
xchg
fbld
pop
sub
daa
xchg
push
mov
cmps
scas
add
adc
pop
and
pusha
das
fidiv
jae
mov
test
and
std
dec
mov
les
pop
pop
int
cld
push
repnz
push
imul
push
push
int3
(bad)
jns
cld
xor
mov
cdq
int3
les
movs
jno
fwait
jmp
mov
in
jno
(bad)
int3
loop
mov
xchg
je
es
pop
cdq
push
add
cmp
pop
sbb
movs
js
fsub
cmc
std
nop
mov
xlat
mov
je
pop
xchg
xor
jmp
test
out
fld
cmc
std
pop
ss
int
aaa
icebp
adc
dec
imul
imul
sub
add
in
push
xor
xor
sub
mov
lds
fmul
data16
jo
aas
ror
xchg
test
sbb
xor
dec
mov
aas
sti
jo
int
jl
lea
rcl
pop
cmp
sub
fsub
xchg
nop
idiv
mov
ins
mov
xchg
outs
jg
sub
push
push
adc
mov
fwait
outs
pop
push
xchg
sub
ss
jb
rcl
and
jmp
push
jge
ja
mov
aad
pop
mov
pop
push
or
sbb
cmp
add
mov
mov
xor
sbb
or
push
enter
mov
mov
int
dec
test
xor
push
into
fmul
mov
leave
or
push
scas
push
retf
mov
lods
adc
mov
lods
xchg
inc
ret
cli
jne
(bad)
jge
fdiv
mov
adc
shl
and
in
sar
stos
aas
pop
pop
jo
lds
les
add
xlat
leave
cwde
pop
add
xchg
repnz
aam
ret
xor
inc
popa
mov
push
call
ret
xchg
popa
dec
loop
jp
mov
in
and
mov
or
push
dec
and
pushf
call
test
shr
push
in
or
ror
and
sbb
popf
lods
and
popa
out
add
jg
jo
pusha
jnp
jns
retf
add
fistp
adc
cli
retf
dec
dec
xchg
pop
sar
mov
and
or
dec
cwde
mov
(bad)
pop
mov
cmp
daa
nop
jo
sbb
int3
call
(bad)
or
inc
js
ja
dec
mov
xor
mov
sub
in
mov
pop
cmp
popf
ja
cmp
dec
push
(bad)
out
xchg
push
dec
test
lds
mov
add
aaa
xchg
ror
pop
adc
mov
(bad)
dec
jae
sub
cmp
pop
cdq
dec
push
inc
ficomp
outs
cld
imul
stc
or
mov
cmps
pop
(bad)
sub
push
dec
leave
cmp
xchg
add
aad
stos
hlt
pop
mov
add
cdq
iret
and
cdq
sub
dec
jmp
mov
and
sub
imul
hlt
ficom
mov
aas
movs
mov
xlat
jne
into
jle
call
xor
jecxz
dec
xchg
add
jns
add
movs
loopne
mov
(bad)
mov
mul
inc
pop
test
add
retf
cdq
cmp
mov
aad
mov
repz
inc
inc
push
scas
aad
je
xor
xor
jge
and
mov
and
xchg
dec
xchg
popa
or
into
mov
(bad)
jecxz
mov
retf
(bad)
cmp
pop
jge
mov
enter
mov
arpl
frstor
movs
mov
push
mov
cmc
fwait
lock
mov
cs
pop
jnp
daa
jno
nop
fimul
mov
and
out
mov
outs
mov
or
arpl
mov
shl
out
jo
(bad)
addr16
shr
fldenv
aad
mov
xchg
push
data16
hlt
test
push
pop
xchg
out
inc
sub
mov
lds
repnz
push
fst
xchg
imul
sub
in
adc
in
adc
in
shl
outs
inc
push
aad
je
out
mov
cmps
xchg
push
push
cmp
iret
xor
ret
imul
inc
mov
pop
rol
ret
popf
pop
cwde
fld
jne
dec
out
jb
fild
imul
xor
mov
jl
gs
loopne
es
xchg
dec
lahf
cmp
dec
inc
nop
loope
sar
jbe
aas
mov
enter
nop
jae
sub
pop
or
adc
mov
jnp
cmp
sbb
mov
or
dec
pop
aaa
cmp
ja
js
int
dec
pop
cmp
adc
popf
push
mov
sbb
in
bound
les
in
push
and
xor
jns
push
les
jne
in
and
cmp
adc
cmp
push
scas
xchg
cld
inc
adc
xor
sbb
jmp
mov
cmp
popf
xchg
test
cli
outs
jp
cmp
mov
es
cmp
jb
aam
push
(bad)
jmp
inc
mov
add
sbb
int3
lock
je
aam
inc
xchg
cmps
jmp
aad
loop
or
fcmovu
mov
fistp
lahf
xor
into
push
loop
fs
mov
xlat
int
mov
xchg
fdiv
std
xchg
cmps
mov
mov
loope
sub
mov
mov
xchg
adc
push
push
js
xchg
and
outs
and
outs
(bad)
dec
mov
push
jb
lahf
jmp
lea
repz
stos
lea
or
nop
push
sub
repnz
fdiv
sti
cmp
mov
pop
fisub
xor
stc
sti
ins
jl
inc
call
jne
mov
pop
jmp
fucompp
sub
xchg
sbb
push
dec
scas
sub
add
or
ds
cld
bound
leave
mov
push
mov
cs
mov
push
pop
inc
int3
lea
sbb
mov
pop
(bad)
and
in
mov
test
in
or
aad
push
mov
xchg
xchg
xlat
add
in
lock
retf
jbe
xchg
jne
mov
pop
ds
adc
out
sbb
(bad)
and
pusha
mov
out
fsubr
call
fldenv
xchg
imul
fidiv
fsubr
dec
rol
fstp
popa
add
dec
cmp
aaa
pop
inc
adc
xchg
xlat
pop
inc
add
fisub
add
jne
sbb
fwait
push
das
or
popa
dec
(bad)
outs
enter
clc
or
sbb
pop
jbe
movs
mov
jecxz
mov
mov
popf
movs
out
push
stos
pop
gs
stc
rep
stc
push
and
cmps
sub
scas
data16
popa
xchg
mov
(bad)
fadd
out
stos
sbb
loop
in
mov
cli
xlat
or
ss
xor
cmp
and
jp
ins
jge
dec
mov
in
dec
push
(bad)
xchg
mov
and
xchg
mov
dec
shr
push
shr
dec
pop
dec
add
inc
cmp
jbe
clc
or
mov
dec
inc
dec
sti
ret
addr16
sbb
ins
add
or
addr16
mov
mov
je
in
adc
data16
sub
push
imul
mov
or
xchg
sub
mov
adc
out
mov
mov
mov
sbb
sub
mov
dec
cmps
push
sti
repz
jmp
rol
in
push
enter
mov
push
sti
ret
pop
dec
pop
into
retf
jnp
ds
push
test
mov
xchg
es
rcr
retf
or
jle
mov
repnz
mov
pop
fld
hlt
jge
sbb
fist
test
int
leave
call
pop
push
pop
push
sbb
adc
mov
iret
bound
pop
sub
fsubr
push
test
and
shr
cmp
push
cmp
stos
push
sub
adc
xor
jp
mov
mov
(bad)
icebp
mov
mov
adc
mov
add
add
ret
outs
lods
mov
rcr
out
jp
out
xchg
or
inc
(bad)
mov
sbb
inc
or
mov
test
lea
and
add
push
push
inc
ret
push
and
les
(bad)
bound
inc
or
jg
int3
push
jmp
pop
cli
add
or
or
lahf
adc
and
xchg
leave
push
mov
or
jge
ret
or
pop
inc
test
mov
pop
sbb
mov
inc
and
inc
mov
mov
sub
enter
icebp
jp
pop
mov
push
cdq
fsub
sbb
dec
gs
dec
mov
lahf
cs
inc
xchg
mov
aas
stos
popf
out
jecxz
or
mov
sub
ja
retf
pop
xor
imul
std
ficom
push
std
mov
in
dec
push
push
cmp
scas
adc
adc
jbe
jge
out
nop
cld
outs
sub
pop
loope
mov
inc
push
xor
call
sti
push
outs
or
inc
nop
dec
cdq
mov
sub
in
imul
mov
pushf
scas
lds
mov
stos
aad
pop
into
mov
call
cmc
xor
xchg
sbb
mov
xchg
push
mov
stos
in
or
add
out
jbe
mov
cmps
jl
add
shr
mov
stos
fnsave
jmp
mov
in
push
int3
daa
aam
cmp
xchg
jp
hlt
xchg
iret
stos
sar
pop
nop
stc
ss
xchg
xchg
add
sub
ins
out
pop
repz
mov
ret
xchg
and
not
fsub
add
(bad)
mov
mov
aaa
loope
dec
mov
push
lods
xor
and
xor
mov
xchg
popf
fmul
add
cmc
xor
xchg
popf
add
dec
xchg
repz
mov
lds
adc
or
mov
push
sti
cmp
push
lea
mov
xchg
icebp
sub
aas
mov
lea
mov
cmp
bound
aad
cs
scas
mov
lahf
adc
lea
cmp
stc
popa
(bad)
int
dec
add
pop
or
call
or
into
jg
rol
not
cmps
pop
sub
add
and
jl
les
pop
mov
add
cdq
jno
aas
jne
mov
pushf
cwde
xchg
retf
popa
scas
xor
jg
fscale
addr16
xor
lds
push
sbb
lods
sub
cwde
lahf
popf
jg
mov
xchg
popa
or
jne
cmp
xchg
push
pop
les
cmc
dec
sbb
stos
mov
mov
mov
cli
out
adc
rcl
ds
sub
mov
scas
jl
es
out
fcomp
xchg
mov
outs
rcl
adc
jle
jbe
cmps
sub
shl
loop
sbb
arpl
pop
cmp
pop
setl
jno
jae
jae
xor
mov
sub
cmp
dec
cmps
mov
ret
xor
cmp
retf
aas
addr16
push
sub
repz
jle
xchg
mov
xchg
and
mov
loope
aas
inc
div
push
pop
imul
jl
jl
mov
adc
enter
imul
adc
cmp
cmp
mov
test
hlt
popa
aas
mov
adc
xlat
test
mov
out
addr16
loopne
mov
pop
(bad)
or
inc
rol
std
dec
or
in
mov
pop
mov
fisub
mov
jb
fldcw
or
loopne
sahf
pop
out
cli
rol
push
int
nop
xchg
neg
push
cdq
and
jg
cmp
push
xlat
add
lods
int3
popf
leave
and
push
fild
add
mov
and
xchg
test
ret
xor
cmp
mov
pop
xchg
mov
and
gs
ja
sub
xor
lods
dec
inc
shl
adc
fisub
popa
test
sub
jg
popa
sub
call
inc
ror
pop
mov
aam
jns
mov
jns
pop
pop
jecxz
scas
pusha
ret
repz
add
cmc
outs
jecxz
push
test
in
sahf
in
or
cmps
ret
xlat
and
(bad)
sub
mov
fld
pop
retf
add
fistp
lods
push
add
dec
not
push
hlt
in
jb
stc
imul
dec
stos
aam
dec
dec
mov
and
scas
push
sbb
sbb
inc
in
call
test
or
test
inc
cdq
xor
sahf
jge
jbe
aam
cmp
call
sub
adc
cmp
rep
out
cs
xor
jbe
jl
cmp
adc
pop
cmc
cs
add
sbb
or
rcr
rol
test
loope
js
xchg
xor
hlt
stos
pop
cwde
pusha
mov
leave
loopne
loop
mov
(bad)
ds
rsqrtps
loope
add
inc
std
pop
ret
push
cwde
inc
loop
push
mov
popa
outs
inc
xor
ret
dec
and
bound
sub
xacquire
push
mov
xor
or
ins
int
cmp
cmps
xor
(bad)
xor
xlat
(bad)
sub
cmp
stos
push
add
or
and
sahf
jo
mov
out
mov
shl
out
test
jmp
out
sub
mov
daa
imul
(bad)
rol
mov
jmp
sbb
mov
sbb
(bad)
ror
sub
jp
bound
xchg
cmp
xor
mov
leave
xor
icebp
xor
mov
mov
test
enter
and
int
push
fld
dec
fisubr
shr
inc
inc
or
inc
or
mov
pushf
cmp
xchg
add
data16
push
and
cmp
int
push
imul
aas
sahf
ins
push
xlat
push
inc
sub
xchg
out
xchg
mov
imul
xor
outs
inc
cmp
mov
and
das
mov
cmp
in
add
dec
stos
dec
add
and
ja
call
es
in
push
rol
lahf
(bad)
pop
cmp
pushf
(bad)
lahf
mov
loope
dec
call
xchg
or
pop
cmp
fcmovnb
pop
call
xchg
pop
mov
cld
mov
ror
outs
jnp
iret
xchg
xchg
inc
mov
jp
outs
ss
and
jo
fsub
dec
aaa
shl
push
xchg
xchg
test
out
dec
ja
jae
mov
xchg
int3
movs
repnz
mov
mov
add
aas
cmc
test
jnp
ficomp
ret
test
jno
push
aas
push
(bad)
jg
ror
sbb
xor
xlat
mov
inc
in
call
inc
sbb
aas
sub
fwait
mov
sbb
jno
sbb
cmp
int3
popf
jl
nop
mov
lea
push
(bad)
fmul
push
sti
shl
xlat
and
inc
sub
cmps
pop
push
movs
rcr
xchg
loop
dec
jno
xchg
aas
and
jnp
mov
pop
jg
nop
inc
lods
mov
not
std
out
repnz
daa
add
sbb
sub
sub
inc
es
dec
sbb
ja
cmp
xor
xor
mov
push
jecxz
mov
sub
shl
mov
mov
add
sbb
dec
retf
gs
test
cmp
xchg
out
repz
(bad)
cmc
popf
and
jmp
xchg
test
push
loopne
addr16
out
mov
jnp
mov
cmc
mov
aas
jp
lock
dec
call
test
and
aad
ja
adc
sahf
dec
ds
sbb
ror
mov
shr
push
mov
popf
xchg
icebp
xchg
push
cwde
inc
adc
jnp
pop
ins
jo
sti
cmp
outs
dec
push
imul
sbb
jmp
xchg
sbb
jge
push
inc
dec
xor
cdq
xor
call
xchg
push
in
shl
pop
loope
push
sbb
mov
sahf
jmp
inc
cmp
cmc
fisubr
cmc
fst
sbb
adc
in
lahf
sub
xor
shl
inc
mov
mov
pop
jmp
daa
or
adc
or
adc
and
or
aad
sub
and
pop
stos
loope
pusha
sub
xchg
jne
lea
test
movs
pop
dec
or
xchg
inc
sub
test
pop
jns
cmp
fbstp
sbb
scas
cmps
mul
gs
inc
mov
push
rcr
sub
mov
je
xor
movs
cmp
jmp
or
mov
xor
lods
adc
inc
rcl
rcl
idiv
mov
(bad)
ja
cdq
add
cs
lds
jl
fbld
push
cmc
xchg
ret
inc
dec
or
jae
add
xchg
jmp
(bad)
bound
mov
mov
mov
lods
dec
fdivrp
xchg
test
lds
outs
je
mov
dec
int3
dec
in
xor
(bad)
js
jle
sub
xlat
jg
jb
push
(bad)
test
jl
call
jg
jo
fwait
into
xchg
loop
stos
push
pop
sbb
shr
cs
dec
out
(bad)
(bad)
push
cs
adc
ret
pusha
cmc
add
shr
aas
imul
fsub
jmp
push
xchg
mov
jae
add
int
out
and
in
dec
(bad)
fbld
pop
fidiv
ror
sahf
test
push
mov
(bad)
pushf
add
pop
cmp
and
add
lods
dec
fst
mov
pop
pop
lahf
std
and
pop
imul
pop
repnz
dec
add
xchg
scas
adc
addr16
shr
adc
xor
mov
mov
xchg
pop
add
cmps
push
icebp
cwde
test
jo
sbb
push
mov
mov
pop
sahf
mov
movs
retf
in
fisub
stc
mov
je
adc
lahf
daa
fiadd
mov
cmp
shl
inc
jmp
mov
add
ss
retf
dec
xor
jnp
lods
sbb
sub
ret
cmp
mov
jae
cmp
neg
imul
mov
mov
lods
push
xor
je
out
mov
arpl
rcl
(bad)
(bad)
out
mov
mov
movs
push
jmp
xor
into
shl
jnp
scas
add
push
cli
lods
pop
and
test
outs
push
mov
enter
jge
adc
out
neg
ins
sub
xchg
cmps
mov
jle
sub
jecxz
stos
shr
out
sub
add
fisttp
and
and
inc
test
das
mov
pop
push
jns
call
sub
mov
scas
icebp
dec
loop
mov
inc
test
or
out
and
pusha
xlat
sub
inc
ja
mov
bswap
push
rcr
add
pop
or
loop
mov
xor
dec
call
adc
aam
and
rcr
and
cli
dec
lea
mov
mov
add
jnp
sbb
std
enter
jge
repz
add
inc
sub
dec
or
aas
jl
mov
retf
xor
(bad)
and
inc
inc
shl
jmp
jnp
cmp
sbb
mov
scas
inc
(bad)
adc
or
out
lods
mov
lods
pop
mov
popa
dec
jns
ret
retf
add
xchg
out
jbe
test
outs
mov
inc
inc
or
fisubr
pop
and
in
jb
iret
leave
repz
popf
int
ja
and
jns
jae
and
nop
into
sbb
push
vpsubq
add
movs
stos
pop
test
mov
dec
pop
aam
ret
push
sub
xor
pushf
popf
push
mov
mov
(bad)
pop
in
push
jne
lods
xor
jne
sbb
rol
lods
push
pop
jmp
cld
jge
outs
gs
push
gs
jle
repnz
mov
adc
loope
jne
xor
cmp
cmc
and
enter
sub
or
call
movq
jmp
dec
push
xchg
cwde
dec
bound
push
mov
add
mov
push
xchg
sbb
mov
in
scas
xchg
xchg
push
in
out
out
fidivr
inc
retf
xor
or
and
rcr
cmp
mov
aam
jmp
lock
gs
mov
mov
mov
fwait
sti
pop
shl
mov
aam
pop
hlt
stc
aad
xchg
xor
xor
rol
cmc
outs
adc
xchg
aaa
ficom
fcom
push
daa
mov
xchg
sbb
and
aas
jmp
xor
mov
clc
test
(bad)
fst
outs
arpl
push
jl
and
sub
sbb
loop
ins
mov
pop
ret
(bad)
jmp
mov
sub
push
or
jmp
jne
xor
push
cwde
fstp
lahf
test
add
cmp
cli
sub
pop
cmp
add
fwait
mov
jo
add
cmp
(bad)
out
inc
jmp
loopne
(bad)
and
fidivr
dec
(bad)
push
xor
ret
mov
inc
lahf
adc
sbb
push
pop
xchg
sub
inc
xchg
sub
sti
xchg
addr16
js
das
push
sub
sbb
test
or
jg
cld
fcomp
pop
and
daa
inc
mov
and
fcom
push
pop
mov
cwde
std
xchg
add
imul
jmp
test
inc
cmps
cmp
pop
and
add
test
sbb
icebp
adc
aad
cli
loope
fnstsw
and
adc
ret
imul
add
xor
data16
fisttp
inc
cmc
sahf
dec
pop
mov
sbb
xchg
mov
jo
gs
push
inc
sbb
lea
mov
in
(bad)
sub
popa
pop
test
lods
test
cmp
pop
jne
shl
data16
out
sbb
sub
loop
ins
pusha
mov
test
je
xor
adc
jns
push
jp
(bad)
mov
cdq
sub
out
sahf
int
xchg
adc
pushf
mov
in
in
scas
push
jge
inc
sub
bound
pop
push
gs
mov
pop
(bad)
xor
or
mov
in
jl
xor
jg
and
push
fs
fcomip
out
sub
inc
(bad)
ret
pop
sub
(bad)
cmp
inc
cdq
(bad)
mov
xchg
daa
jmp
(bad)
jle
sub
ficom
mov
pop
neg
xlat
ja
fwait
ret
push
out
int
in
pop
jg
mov
and
push
sub
out
sub
pushf
out
fcmovne
leave
leave
xor
jne
(bad)
clc
mov
fwait
jns
cmps
and
adc
jg
adc
aaa
and
push
push
ss
fldenv
mov
aad
int
lds
mov
leave
push
or
dec
sub
xor
jp
and
xchg
or
xchg
inc
inc
loopne
movs
shl
mov
dec
int3
outs
mov
pop
push
test
lahf
ficomp
inc
push
dec
lods
aaa
repnz
fwait
jne
out
test
dec
sbb
add
das
pop
sahf
dec
mov
mov
mov
shl
shr
iret
iret
repnz
and
addr16
or
ins
js
pop
je
adc
cmps
imul
mov
mov
mov
mov
sub
sbb
jnp
inc
dec
xor
test
lods
mov
sbb
sar
mov
div
sub
xor
mov
jmp
xor
js
sahf
dec
mov
dec
fstp
jge
div
and
inc
jae
movs
bound
xor
mov
je
fcmove
cmc
(bad)
pop
inc
fld
clc
jno
in
jecxz
gs
aaa
mov
mov
and
pusha
inc
and
hlt
cmp
dec
repz
sbb
push
mov
xor
es
push
mov
or
xchg
jp
dec
fild
inc
adc
sub
pushf
mov
jnp
aam
sub
push
jb
push
jge
push
shl
push
xchg
add
inc
inc
scas
daa
jmp
fcomp
jne
or
mov
and
xlat
dec
jecxz
arpl
xor
xlat
push
jno
lock
icebp
js
sbb
sar
test
bound
std
(bad)
fstp
mov
hlt
aam
popa
pop
fidivr
jb
daa
sbb
leave
fwait
aas
stos
inc
retf
and
mov
mov
sahf
je
(bad)
into
jo
add
jmp
xor
inc
jnp
push
xchg
or
sahf
push
xlat
lahf
mov
icebp
add
sbb
clc
loopne
jnp
push
jmp
or
and
das
xchg
xor
push
(bad)
ss
pushf
shr
inc
inc
mov
pop
int3
movs
mov
inc
pop
add
adc
and
pusha
cmp
(bad)
xor
pop
test
add
test
fnsave
jecxz
push
inc
loop
inc
test
mov
pusha
mov
out
inc
(bad)
cld
ror
pop
dec
movs
cmp
mov
je
and
mov
jno
jle
xor
and
dec
mov
pop
cli
and
ja
mov
in
xchg
dec
arpl
in
inc
idiv
leave
and
xor
sub
rol
lods
adc
dec
mov
jge
int
(bad)
sub
bound
xor
outs
test
(bad)
pop
inc
add
pop
add
retf
sbb
mul
lock
call
clc
xchg
xor
sbb
push
retf
mov
push
cmp
test
ds
xor
mov
test
pop
xor
inc
push
mov
ss
sbb
pop
dec
or
xor
pusha
imul
xor
daa
lahf
jmp
mov
and
lahf
lahf
test
shl
inc
sub
jo
(bad)
mov
mov
stos
pop
add
lds
sub
mov
xor
pop
xor
mov
mov
mov
push
(bad)
stc
sbb
test
outs
cwde
pop
xor
cmp
sub
cmps
cdq
jns
adc
rcl
xchg
push
pop
adc
leave
jmp
jnp
mov
pop
popa
repnz
ret
adc
arpl
into
add
stos
xchg
hlt
or
inc
lahf
pop
stc
xor
movs
mov
sbb
add
cdq
push
sar
setle
in
ins
jecxz
rcr
dec
jae
call
pop
cdq
hlt
fwait
or
dec
test
ret
inc
or
sbb
pop
add
pop
(bad)
xchg
and
sub
mov
xor
fnstenv
ins
movntps
aad
jecxz
and
adc
mov
movs
mov
(bad)
push
cmp
aam
xor
pop
jp
inc
jo
add
cmp
push
or
cwde
pop
fist
int
and
mov
or
pop
std
sub
call
pushf
idiv
jno
mov
lock
dec
cmps
mov
mov
test
fwait
in
cwde
fdiv
inc
xor
adc
jp
xor
xchg
aas
std
dec
arpl
jnp
fisub
out
js
sar
movs
jle
jmp
ins
xor
push
sbb
mov
mov
add
dec
dec
dec
pusha
leave
pop
enter
std
push
(bad)
aaa
sub
fld
xchg
xchg
outs
pusha
inc
mov
or
inc
pop
sub
pop
std
shl
mov
mov
pushaw
inc
jl
pop
jbe
add
iret
retf
leave
dec
add
cdq
mov
stc
mov
jo
cmp
mov
xchg
adc
loopne
push
push
pusha
call
lods
pusha
lock
pop
inc
sahf
add
enter
aas
cmp
xor
mov
xor
iret
sbb
out
jge
stos
xchg
pop
lock
stc
ret
mov
mov
or
sub
int
jl
popa
std
imul
cmps
dec
or
push
mov
mov
inc
das
test
pop
adc
mov
cmps
cmp
test
or
push
out
mov
in
adc
int
jnp
call
dec
mov
lea
jmp
cld
and
pop
add
and
jno
data16
jecxz
inc
inc
jge
inc
pop
sbb
mov
out
cwde
stos
jo
adc
push
rol
and
stos
cwde
stos
pop
fmul
(bad)
pusha
fs
je
std
jo
in
dec
in
movs
mov
retf
icebp
pop
je
aaa
movs
xchg
add
add
mov
(bad)
movs
pop
stos
out
add
mov
mov
imul
and
sbb
push
jl
jle
mov
(bad)
sbb
fcmovnu
mov
mov
and
stc
(bad)
push
push
xchg
sbb
mov
jne
jg
add
xchg
or
(bad)
out
pop
inc
das
aad
inc
xchg
out
mov
cdq
or
sub
fiadd
mov
lea
or
nop
les
push
mov
sub
and
xchg
jg
push
lds
mov
pushf
ret
adc
xlat
add
xor
pop
clc
add
mov
neg
enter
jecxz
rcl
sub
into
fnstcw
test
mov
pop
mov
gs
lods
adc
xor
push
or
sahf
inc
add
lods
pushf
cmps
(bad)
fsubr
jb
push
ror
xchg
ja
push
ror
adc
mov
call
add
jnp
mov
nop
ss
push
sbb
mov
jl
pop
test
stc
bound
icebp
(bad)
cmp
cmps
add
adc
jle
sub
dec
cmps
enter
fs
ret
int3
into
jmp
xor
cmp
add
fstp
inc
sbb
clc
fistp
(bad)
cmps
call
popf
inc
jmp
sub
xchg
cmp
jbe
dec
aam
jge
popa
sbb
pop
aam
pop
mov
(bad)
mov
popf
psadbw
pop
sti
sbb
dec
mov
arpl
fmulp
cmp
stos
dec
mov
iret
push
jg
pop
mov
dec
pop
jae
aaa
or
aas
out
fsub
lahf
sti
push
pcmpgtb
mov
mov
push
add
aad
and
inc
sub
adc
outs
push
sti
cmp
lock
xchg
ret
jmp
mov
xchg
sti
xchg
nop
or
sub
inc
not
pop
push
retf
retf
and
lahf
call
lods
or
popf
(bad)
sti
lods
adc
adc
jno
fs
jmp
fcomp
out
leave
add
into
and
mov
adc
stos
shl
push
repz
sahf
int
fcomp
in
gs
outs
push
pop
pusha
adc
xchg
(bad)
out
sbb
pop
cmc
xlat
cmps
adc
cmps
imul
mov
pop
out
adc
iret
(bad)
cmp
pop
pop
dec
mov
xchg
adc
xchg
loope
mov
jmp
out
push
inc
dec
mov
push
cmp
nop
out
cs
sti
shr
adc
xchg
ss
pop
sbb
stos
mov
sbb
xor
(bad)
push
shr
push
test
xchg
in
iret
sahf
imul
dec
pop
out
inc
in
cmp
inc
mov
or
in
pop
push
mov
or
pop
adc
mov
inc
je
lods
ja
andnps
xor
aam
or
mov
mov
pop
(bad)
fs
jmp
fdivr
mov
sub
jnp
stc
aas
jb
daa
push
loopne
es
cld
clc
jns
enter
in
push
imul
jp
push
mov
pusha
out
inc
sbb
stos
iret
cmps
fiadd
sti
sub
jmp
jg
push
cwde
rcr
mul
xlat
add
push
scas
hlt
nop
rol
int
stc
or
js
call
(bad)
sub
xchg
dec
jmp
fild
and
xchg
jp
mov
xor
fstp
shl
xlat
add
jmp
push
sbb
dec
ins
and
dec
push
imul
sar
stos
jg
dec
add
aam
fcmove
mov
inc
lds
mov
test
mov
(bad)
mov
xchg
mov
mov
shr
imul
popa
and
inc
pushf
and
fucompp
clc
popa
sub
retf
dec
dec
sub
push
xchg
and
mov
rcr
xchg
xor
mov
lock
inc
call
test
sbb
pop
popa
push
mov
xchg
into
ins
jge
repnz
mov
test
mov
sub
adc
inc
daa
adc
xchg
push
sbb
mov
mov
adc
xor
xchg
push
or
xor
xor
out
inc
out
and
sahf
mov
(bad)
out
inc
cmp
xchg
int
loopne
cmp
xchg
mov
outs
fs
(bad)
cmp
sub
popa
ror
jnp
pop
shr
mov
pusha
test
shr
cmp
and
xor
ret
outs
fcom
xor
imul
xchg
loope
inc
loop
cmp
ds
add
add
shl
loop
cmp
cmps
or
paddusw
mov
(bad)
mov
xor
or
ss
sbb
pcmpgtb
hlt
popf
nop
in
cwde
ss
aas
int3
sbb
test
mov
fld
aam
pop
or
js
pop
jecxz
mov
aas
jae
stos
sbb
add
sti
sti
retf
fiadd
pusha
stos
inc
jae
clc
pop
jecxz
jbe
sahf
ja
cdq
movs
xchg
and
jmp
sub
les
dec
jnp
jne
sti
and
fbld
mov
or
xchg
sbb
push
pop
test
inc
xchg
sbb
or
in
sub
(bad)
and
adc
fs
cmp
or
call
pop
out
jmp
cli
arpl
neg
xor
aaa
into
sahf
and
and
push
fdivr
xor
loopne
aam
jb
(bad)
mov
scas
xor
jmp
mov
dec
and
jmp
sar
sbb
test
push
xor
fwait
lea
dec
jne
outs
in
mov
sahf
cmp
stos
sub
lods
(bad)
out
int
mov
(bad)
stc
int3
ds
pop
push
imul
loop
int
(bad)
lods
jb
cmps
sbb
pop
ds
push
ficomp
push
lods
aaa
cmps
add
cld
xchg
(bad)
xor
retf
or
arpl
inc
xor
adc
jae
test
push
sub
jnp
or
dec
pop
cmp
dec
arpl
fldcw
or
adc
pop
cmps
cs
and
mov
bts
es
sbb
mov
mov
mov
aad
xchg
mov
mov
sub
je
(bad)
mov
mul
pop
xor
jle
adc
(bad)
scas
xor
xchg
cli
or
pop
jge
xchg
push
dec
mov
(bad)
mov
sub
pop
and
mov
or
xor
imul
sbb
sbb
in
jae
or
push
xor
dec
push
push
cmps
retf
cmp
lahf
push
pop
pop
adc
adc
mov
xor
es
adc
xor
mov
je
mov
nop
in
aas
cmp
sub
test
(bad)
pop
ins
call
in
ficom
je
imul
icebp
xchg
cmps
stc
pop
pop
adc
xor
adc
push
retf
addr16
cmps
(bad)
cmp
or
sub
xchg
pushf
and
shr
jle
dec
push
xchg
pop
xchg
fisttp
je
xor
lds
adc
or
xchg
inc
daa
mov
add
xchg
stos
or
mov
out
jecxz
jnp
lahf
xchg
xchg
jno
and
jae
iret
push
lock
inc
xor
xchg
push
scas
push
jmp
dec
dec
(bad)
jmp
adc
nop
sar
push
cmp
mov
rcr
loopne
adc
mov
(bad)
(bad)
arpl
add
imul
dec
rcr
sti
adc
cs
cwde
adc
das
loopne
fisttp
stos
push
push
nop
cld
push
fwait
mov
jb
pop
jmp
mov
or
mov
add
inc
ins
inc
and
adc
(bad)
imul
mov
or
and
adc
push
or
dec
hlt
cmp
sub
and
jmp
(bad)
dec
and
ret
add
mov
push
adc
repz
cmp
sbb
mov
jl
ja
movs
loope
loopne
test
xor
int3
sbb
inc
mov
dec
sub
jmp
mov
int3
adc
sub
je
inc
jns
inc
or
jmp
repnz
ja
fcomp
push
or
jae
sbb
pop
jle
xchg
and
daa
xchg
xlat
xchg
frstor
push
imul
pop
mov
inc
cmps
inc
inc
mov
push
mov
popa
cmp
pop
mov
xchg
leave
dec
jecxz
dec
and
add
les
mov
(bad)
ins
mov
leave
aam
xchg
aam
mov
daa
jns
jmp
dec
(bad)
jmp
(bad)
mov
daa
fs
(bad)
pop
push
mov
ins
je
push
mov
jo
mov
push
imul
xor
sbb
jmp
push
ret
mov
inc
inc
(bad)
inc
cmp
adc
mov
arpl
mov
jns
add
pop
or
and
cmp
xchg
(bad)
cmp
rcr
push
(bad)
jge
sub
sbb
cmp
test
outs
push
ret
popa
clc
or
push
lods
shl
sub
adc
(bad)
mov
cwde
cmc
in
fisubr
pop
popa
out
gs
popa
rol
lock
push
cli
pushf
leave
mov
js
mov
pop
mov
lahf
std
pop
shr
out
sub
jne
dec
dec
inc
int3
jp
sub
push
sbb
cli
cmp
cdq
inc
push
lods
pop
les
cs
sub
movs
jg
lods
aas
xor
das
push
(bad)
jge
inc
dec
xlat
sub
cs
mov
and
inc
mov
dec
stos
inc
iret
mov
pop
pop
std
dec
outs
sbb
mov
pop
lock
adc
in
mov
jecxz
add
call
push
adc
add
push
(bad)
aas
fst
neg
and
arpl
push
add
lods
pop
hlt
xchg
daa
neg
xor
addr16
and
nop
test
gs
out
sbb
mov
cli
mov
lock
rcl
xor
dec
lock
xchg
push
fnstcw
mov
arpl
int3
bound
bound
cmp
inc
inc
sub
test
lds
or
outs
mov
fistp
test
rcl
sub
mov
add
loope
mov
out
push
push
sbb
loope
cmp
test
bound
fwait
int3
out
sbb
add
sbb
jo
outs
jge
push
out
loopne
bound
pop
sbb
shl
lods
add
dec
and
cmp
or
mov
dec
cmc
stos
mov
repz
(bad)
sub
jae
fidivr
aam
xchg
loopne
mov
inc
jbe
loope
sbb
adc
cmp
pop
fcmovb
sbb
and
cmp
dec
add
test
aaa
inc
mov
int3
lahf
or
call
mov
mov
scas
test
popa
mov
add
js
jecxz
xor
push
xchg
mov
pop
and
retf
out
push
repz
inc
xor
ficom
movs
jg
inc
cmps
seta
mov
mov
xchg
xchg
mov
je
xor
mov
xlat
loopne
jb
fisttp
fidivr
push
cdq
mov
fcmovne
xor
push
jl
sub
jle
ds
jae
push
mov
push
and
pusha
inc
jmp
test
mov
cmps
mov
or
push
repnz
dec
mov
dec
inc
xchg
mov
sbb
fs
xor
pop
dec
sub
into
pop
mov
add
jp
mul
fisub
xchg
mov
ja
and
dec
test
out
loope
loope
leave
scas
mov
push
adc
xchg
xchg
aad
dec
xor
push
(bad)
pop
mov
mov
inc
mov
mov
and
(bad)
aam
sub
leave
lods
adc
mov
ins
popf
in
outs
add
add
mov
xchg
call
enter
and
ja
out
dec
pop
mov
movs
mov
ins
mov
call
pop
jne
mov
pusha
scas
push
pop
out
pop
call
sub
and
pusha
sbb
inc
push
outs
adc
mov
mov
sbb
mov
jo
fs
sub
loope
sar
call
int
ds
das
pop
push
pop
sar
jns
dec
mov
inc
outs
bound
inc
int
(bad)
loopne
add
fst
adc
ret
ins
dec
stc
adc
(bad)
test
nop
xchg
test
or
jle
add
dec
adc
mov
mov
cld
out
imul
nop
or
loop
leave
mov
and
fsub
rol
fs
mov
clc
mov
adc
jp
sar
inc
xchg
scas
add
xchg
cmps
xchg
push
pop
adc
sub
leave
jnp
or
jmp
add
ror
or
jle
fcomip
fisubr
cmc
jg
(bad)
lds
nop
adc
dec
(bad)
mov
or
push
shl
int
pop
and
and
retf
test
dec
or
lods
loop
dec
or
xor
aas
mov
(bad)
pop
cmp
clc
das
push
(bad)
adc
push
push
movs
arpl
mov
add
and
outs
jp
je
out
mov
daa
or
shl
in
iret
jno
stc
xchg
jae
sub
out
and
pushf
mov
inc
push
push
dec
int
jo
cmp
push
inc
push
aad
mov
cdq
or
mov
pop
das
xlat
(bad)
add
xchg
dec
leave
add
or
repnz
pusha
mov
iret
jle
jnp
cmc
test
or
out
xchg
mov
sub
ret
sar
jmp
lahf
nop
movs
jge
icebp
push
nop
push
push
push
daa
sahf
ret
repz
adc
ffreep
xor
clc
cmp
pop
test
and
movaps
(bad)
call
sub
mov
not
or
lea
in
scas
pop
or
lods
sub
outs
push
mov
das
mov
xor
mov
jmp
pop
shr
les
repnz
(bad)
sahf
cmc
inc
xchg
pop
jl
ja
into
movs
or
push
jg
cmp
enter
sub
mov
mov
cmp
sbb
aad
sub
js
int
popf
sub
mov
lods
mov
inc
mov
adc
pop
loopne
adc
or
fcom
fmul
dec
sbb
imul
push
jae
add
in
sbb
std
stos
jb
aam
ret
inc
sbb
imul
push
psubusb
call
or
xchg
add
pop
mov
jle
jbe
test
movs
out
sbb
cmp
pop
dec
xchg
xor
popa
jp
cmp
mov
imul
xor
lock
pushf
cs
xor
mov
int3
xchg
(bad)
aad
mov
stos
mov
mov
int3
mov
fidiv
xchg
xor
inc
aam
xchg
je
dec
xchg
scas
inc
xchg
test
mov
in
push
mov
jno
push
test
test
or
push
xor
dec
fcmovnb
mov
imul
sti
jp
and
das
pop
or
aam
(bad)
mov
pop
push
inc
push
fwait
jne
xor
push
(bad)
iret
inc
push
cli
jecxz
sbb
cmp
xchg
dec
lock
xor
(bad)
cmp
lods
inc
jp
mov
push
pop
cmp
pop
inc
mov
push
aaa
xor
in
outs
arpl
xor
ins
mov
pop
mov
push
aam
retf
push
jae
lds
adc
iret
pop
xor
int
inc
leave
data16
jge
cs
sub
rcl
cmp
es
sbb
imul
(bad)
retf
and
inc
push
inc
or
xor
fwait
cmp
and
nop
mov
or
or
adc
popa
mov
jb
jge
and
dec
jmp
push
mov
stos
daa
leave
mov
ja
push
in
(bad)
jo
out
stc
loopne
add
cmp
mov
jmp
imul
cwde
sti
push
mov
sbb
jb
call
sub
push
nop
shr
stos
push
jl
mov
cs
(bad)
pop
(bad)
retf
ficomp
hlt
lods
retf
jns
test
and
dec
or
stos
mov
call
pop
add
dec
fild
mov
stc
pop
jge
jne
pop
imul
xchg
scas
inc
xor
inc
mov
jb
ja
push
jecxz
dec
stc
arpl
mul
daa
dec
dec
fcomi
mov
(bad)
in
push
jl
imul
pop
inc
fcmovne
jg
sbb
(bad)
(bad)
call
cmps
jmp
add
in
xor
jne
lods
loope
pop
jne
sub
add
push
mul
(bad)
out
push
ins
sbb
mov
test
xlat
movs
xor
adc
xor
mov
repz
xor
mov
cmp
call
scas
sbb
ret
call
inc
xor
ins
fldenv
fs
mov
stos
jmp
aaa
test
(bad)
out
jmp
js
sbb
movs
pop
bound
or
mov
cmp
cmp
ja
sbb
push
scas
and
cld
mov
int3
inc
jl
mov
movs
push
stc
adc
hlt
jl
mov
pop
pop
mov
shr
push
les
mov
push
rcl
pop
dec
push
data16
test
mov
mov
ror
mov
inc
dec
sub
fadd
cli
ins
inc
cmps
or
cs
jo
test
mov
inc
bsf
cmp
pop
jp
cld
jle
mov
bnd
jmp
mov
outs
pop
dec
push
add
cmc
fimul
mov
hlt
jg
int3
out
shl
sub
sbb
(bad)
out
xlat
sti
dec
add
sbb
push
xor
add
sub
xlat
adc
cmp
xor
fwait
sahf
sbb
fsub
mov
ret
pop
(bad)
enter
sub
cwde
ss
dec
test
mov
xchg
lods
cli
sub
and
scas
adc
dec
cmp
jne
xchg
daa
and
cwde
jnp
mov
add
sar
inc
adc
movs
pop
xlat
mov
popf
mov
jo
add
mov
mov
dec
outs
fwait
arpl
div
or
inc
jnp
sbb
call
fadd
loope
shr
loope
adc
push
or
cs
mov
jp
ja
call
nop
shl
sub
inc
xchg
jae
inc
(bad)
pop
add
push
jne
dec
movs
lods
lock
inc
(bad)
sub
std
jle
jnp
ror
push
jae
loop
popa
call
mov
fmulp
scas
rcr
and
xor
cmp
cmps
dec
aam
dec
add
cmp
xor
into
xor
dec
in
mov
sbb
std
xor
dec
cs
mov
test
jmp
mov
pextrw
call
sbb
ficom
jae
call
jecxz
scas
ss
mov
out
xchg
mov
and
call
ins
int
fld
les
mov
adc
loopne
push
dec
jno
(bad)
jns
dec
call
fmul
repnz
cmp
and
inc
lods
mov
ror
fldcw
jmp
stos
add
adc
lock
int
lods
add
pop
(bad)
das
(bad)
retf
les
sub
js
mov
hlt
mov
imul
add
and
repnz
and
pop
in
loop
cmp
pop
push
rcr
jg
sub
push
pop
mov
in
fstp
inc
push
add
mov
or
xchg
clc
aam
pop
cmp
adc
clc
and
rol
sub
dec
loope
xchg
fnsave
movs
popf
or
inc
fstp
dec
jge
popf
mov
lods
and
xchg
add
inc
imul
inc
jl
imul
icebp
xchg
jmp
scas
jno
arpl
xor
inc
inc
jle
lahf
popa
neg
pop
shr
imul
cmpxchg
not
fadd
pop
adc
and
test
mov
sbb
pop
and
mov
in
pushf
add
rcr
sub
push
(bad)
mov
loopne
or
mov
(bad)
mov
pop
stc
aaa
sub
sub
stos
jno
inc
in
jecxz
mov
or
ret
and
cmps
xchg
add
add
sbb
(bad)
jmp
push
cmc
and
pusha
sbb
or
and
mov
push
mov
cmp
xor
dec
bound
xor
mov
int3
repnz
and
test
les
or
movs
ins
fistp
or
into
push
mov
stc
mov
cmp
cmp
push
and
in
in
fisubr
retf
or
inc
sub
pop
out
xchg
add
inc
cmp
fwait
sahf
jl
int3
sub
cs
in
jbe
xchg
add
repnz
sbb
sahf
and
jge
call
dec
and
cmp
cmp
dec
inc
inc
xor
movs
inc
dec
mov
dec
popa
aas
xlat
ja
fndisi(8087
add
call
or
pop
pop
mov
stos
test
and
inc
jge
xchg
push
mov
sub
dec
(bad)
xor
in
sbb
icebp
and
jne
pop
xchg
and
mov
mov
mov
xchg
fsub
and
xor
fimul
ins
cwde
addr16
fcmovbe
ja
ss
lock
dec
retf
adc
cwde
imul
mov
sbb
xor
icebp
imul
test
inc
repnz
in
mov
or
jge
sbb
dec
mov
xor
call
cwde
jno
mov
add
and
add
cmp
out
lods
shl
and
push
cmovle
cmps
fimul
add
cmps
not
mov
(bad)
mov
cdq
mov
iret
dec
std
sbb
and
call
xchg
sbb
scas
mov
stc
mov
adc
sub
jmp
ficom
push
enter
int3
jge
cmps
sub
or
dec
arpl
pop
clc
pop
add
jmp
sub
in
aaa
gs
jecxz
out
and
lea
add
cli
jo
dec
jp
(bad)
mov
mov
and
jmp
mov
shl
call
adc
clc
ins
or
push
in
push
mov
inc
xchg
repz
cdq
adc
dec
xor
inc
mov
outs
iret
pop
pop
je
clc
hlt
pop
sbb
movsx
sbb
sbb
ds
ror
lahf
xor
loop
push
jb
mov
and
push
xor
add
lods
sub
stos
push
lfs
sar
mov
das
mov
or
and
cmps
(bad)
add
sub
inc
stos
and
cmps
sub
aad
lock
sbb
xor
in
popa
jae
jp
cli
push
jmp
imul
lock
call
xor
and
into
or
fcomp
sbb
repnz
mov
dec
inc
xor
scas
mov
retf
out
sbb
sti
pop
imul
mov
imul
aas
adc
test
xchg
or
aaa
adc
push
dec
pop
push
das
jecxz
fs
in
fcom
and
dec
es
or
pop
inc
mov
in
not
add
cwde
cmps
pop
lds
(bad)
imul
pop
fwait
lods
loope
rcl
push
xor
rol
movs
sub
jmp
mov
cmp
sti
adc
rcr
cmps
lods
std
and
add
out
xor
(bad)
jae
or
(bad)
leave
icebp
cmp
jb
aam
xor
inc
(bad)
mov
int
jne
dec
ror
clc
sti
fidiv
cmp
add
mov
xor
ins
jp
shr
push
mov
retf
mov
mov
pop
and
movs
push
rcr
sbb
dec
dec
das
xor
push
movs
test
sub
xor
inc
sub
shl
jno
das
and
sahf
mov
popa
mov
add
inc
inc
jns
or
aas
cmp
cmps
in
mov
or
loop
std
and
pop
outs
retf
jp
aad
jmp
mov
in
popf
push
inc
out
dec
lods
or
je
adc
xor
inc
das
shr
repnz
add
mov
cli
cmps
xchg
mov
jnp
cdq
push
les
push
bound
mov
push
retf
jmp
mov
mov
not
mov
cwde
int
mov
outs
jnp
ret
inc
call
inc
sbb
mov
fwait
sub
mov
fs
sahf
or
cmp
mov
and
mov
inc
scas
push
retf
push
mov
sub
mov
and
sbb
fisttp
jo
pop
rcr
push
push
sub
adc
lds
outs
adc
add
jo
dec
addr16
jg
or
push
fisttp
ins
mov
xchg
or
adc
lods
push
cli
add
adc
adc
fdiv
adc
jo
pop
(bad)
test
adc
xchg
int
sbb
movs
jns
or
popa
mov
clc
adc
out
aaa
mov
mov
aaa
or
stc
mov
leave
mov
iret
mov
scas
test
(bad)
mov
push
jno
jl
les
mov
sti
int
hlt
neg
aaa
cwde
jns
dec
and
inc
repnz
fisttp
add
cli
jmp
js
mov
pop
xchg
dec
add
sbb
lea
sbb
cmp
adc
xor
and
or
fwait
std
sar
push
and
inc
retf
pop
out
mov
popa
jb
aam
cmps
scas
jnp
lea
out
jae
inc
pop
lahf
lds
mov
(bad)
sub
pop
add
push
xchg
(bad)
dec
mov
inc
pushf
or
retf
imul
imul
not
inc
cmc
ins
jmp
pop
add
in
or
cmp
dec
inc
(bad)
fsubp
sub
sub
in
std
pusha
or
fisttp
inc
jno
outs
push
pop
push
sbb
and
mov
jns
es
xchg
sub
(bad)
fisttp
mov
dec
pop
sbb
fucom
mov
sbb
int
xor
xor
inc
cwde
cmp
pop
jnp
adc
adc
push
adc
cmp
lods
pop
out
inc
and
sbb
lock
in
or
mov
or
pop
adc
out
xchg
in
pusha
inc
xchg
into
xchg
test
je
xchg
or
mov
fild
scas
dec
pop
repnz
jnp
adc
in
cs
rcl
repz
and
push
(bad)
dec
cld
enter
mov
aaa
adc
mov
pop
aas
sub
and
push
mov
sar
int3
xchg
(bad)
jb
sbb
enter
fdiv
cmp
(bad)
fisubr
jmp
aas
cmp
icebp
scas
push
lahf
js
add
mov
(bad)
mov
repz
rcr
jecxz
jl
je
jmp
push
sbb
jmp
cmp
lock
xchg
lods
pop
imul
popf
es
mov
in
jne
(bad)
cmc
mov
sub
and
push
xchg
xchg
cmp
inc
mov
stos
xchg
aas
test
sti
(bad)
in
out
and
fdivrp
adc
das
cld
sbb
and
lods
jns
in
pop
sbb
add
mov
jecxz
rcr
jle
mov
xchg
cli
dec
outs
sbb
cmp
jmp
shl
std
retf
aam
mov
cdq
push
and
add
push
sbb
fcomip
repnz
mov
mov
lods
adc
and
pusha
mov
inc
jno
sbb
in
sbb
cvtps2pd
mov
je
push
pop
inc
call
jb
xchg
lock
push
mov
dec
lock
adc
mov
pop
aas
ds
mov
mov
mov
cmp
jg
stos
pop
push
test
movs
inc
mov
in
inc
test
push
jo
sbb
pop
xor
ret
cmovns
std
and
div
and
cmp
xchg
xchg
mov
jbe
inc
vmread
add
out
pop
sub
inc
and
clc
jne
inc
dec
ret
mov
inc
sbb
pop
test
mov
sbb
xor
ins
cmp
sbb
push
dec
add
mov
mov
pop
sbb
inc
xor
imul
add
and
call
stos
dec
in
sub
push
pop
sub
loope
sub
fidivr
mov
xchg
lods
ret
inc
and
mov
loop
mov
push
data16
pop
(bad)
fscale
and
test
aas
test
outs
cmp
test
mov
xchg
cmc
shr
fadd
xchg
sbb
and
stc
mov
dec
cwde
je
or
xchg
cmp
pop
mov
xchg
push
ror
std
test
and
sub
sahf
inc
xchg
pop
and
sbb
pop
inc
push
fs
xchg
(bad)
adc
pop
jmp
jl
or
mov
sbb
xchg
cmp
scas
out
je
mov
lods
add
shl
mov
xor
outs
push
fadd
jo
aaa
cli
loop
mov
jnp
add
fidiv
inc
dec
pop
pop
mov
imul
inc
sub
pop
jl
outs
test
xchg
call
pop
(bad)
in
cmp
or
popa
jne
fist
push
dec
retf
(bad)
aad
sbb
xor
pop
sub
and
dec
mov
sbb
dec
into
pand
dec
in
sbb
mul
add
adc
and
mov
adc
(bad)
cmps
push
xchg
mov
sub
jb
or
sbb
and
nop
repnz
sub
push
dec
daa
iret
push
test
add
push
inc
pop
jecxz
xor
js
lods
retf
sbb
lea
cld
mov
push
out
arpl
sub
sbb
call
das
imul
xor
inc
(bad)
ins
pushf
push
ficom
push
clc
adc
icebp
xchg
pushf
mov
fwait
mov
ret
and
mov
xchg
lock
mov
jp
lds
sub
adc
loop
add
jg
xor
pop
retf
jmp
test
out
les
add
fcmovu
leave
popa
loopne
sub
mov
loope
stos
push
cmps
shl
lea
pop
or
arpl
mov
xor
mov
mov
sbb
fiadd
or
ret
mov
ret
aaa
sub
or
shl
xor
outs
lahf
call
outs
iret
jmp
cmp
push
jp
aam
and
mov
sbb
push
pop
and
sbb
cmp
xchg
psllw
and
sti
push
sbb
fdivr
push
and
cmp
nop
push
cmps
xor
pop
dec
(bad)
dec
imul
adc
sbb
call
stos
inc
inc
(bad)
sar
or
xchg
and
pop
inc
ficomp
or
jecxz
inc
or
mov
into
pop
push
xchg
fdiv
cmc
add
cmc
jns
pop
mov
shr
in
xchg
push
scas
pop
data16
push
mov
jmp
bnd
imul
gs
retf
test
dec
ja
jl
nop
push
outs
fldcw
rol
inc
fs
xchg
mov
jae
xchg
cmp
pop
in
sub
js
jns
shl
ins
sbb
sbb
nop
bound
(bad)
pop
mov
ror
aam
fstp
mov
dec
adc
test
ret
xor
cmp
sbb
movs
adc
pop
push
jae
mov
xor
mov
and
mov
mov
icebp
adc
mov
lds
sbb
aad
imul
dec
popa
aad
scas
xchg
gs
icebp
jmp
fld
movs
fist
retf
push
out
add
dec
inc
enter
inc
and
pop
mov
mov
outs
sub
xchg
fnstsw
jnp
jge
adc
sub
ja
fnstsw
adc
scas
push
push
icebp
adc
outs
push
js
rol
xor
(bad)
push
out
dec
jp
rol
fdiv
gs
adc
sub
mov
leave
ret
ret
mov
mov
cmps
mov
cmp
add
mov
mov
sub
or
mov
sbb
mov
loop
out
mov
out
stos
mov
out
daa
int3
jns
dec
mov
fcom
xor
icebp
loope
dec
je
xor
xor
mov
mov
ins
cmps
test
pop
push
aas
jmp
pop
ror
mov
call
pop
or
leave
cmp
out
jge
pop
out
xor
xor
mov
in
add
es
adc
pop
int3
xchg
adc
mov
das
adc
(bad)
and
dec
daa
out
pop
in
ja
add
jmp
fdivp
fcomp
fstp
or
jmp
push
lods
dec
loopne
sbb
ins
xor
cmp
iret
mov
xchg
daa
xor
retf
push
stos
rcr
fwait
(bad)
loope
popf
or
mov
xchg
and
jno
dec
pop
cli
jae
and
imul
cmp
jp
pop
call
push
xor
sub
dec
xchg
xor
cmc
cwde
mov
mov
inc
shl
jo
icebp
xor
scas
aaa
sbb
xchg
jmp
cmp
xchg
pop
sbb
mov
adc
ins
add
pop
dec
and
push
xor
pop
sub
mov
jb
ds
je
sbb
aaa
ret
cmp
mov
clc
xor
lods
inc
hlt
and
push
rol
sub
and
push
fistp
dec
div
fistp
callw
push
or
push
xchg
xor
fldenv
ja
call
shl
mov
mov
pusha
and
paddq
push
xlat
sub
popa
jmp
les
and
out
test
sbb
and
bound
pop
test
inc
fiadd
cmps
arpl
lahf
sahf
sub
cmp
movs
std
rol
mov
psrld
(bad)
ficom
dec
mov
push
div
inc
jl
out
outs
jo
ds
iret
xchg
jns
scas
xchg
jg
jne
aaa
pop
pop
cwde
mov
dec
cmp
je
fistp
add
sbb
mov
fistp
mov
sub
or
std
push
or
sbb
rcr
jne
repnz
mov
sbb
subps
mov
mov
mov
test
mov
ret
cmps
xor
jo
rcl
push
(bad)
sub
call
int3
mov
aad
call
adc
mov
ror
push
in
fidivr
and
(bad)
popf
stc
xor
mov
mov
retf
or
inc
cmp
popf
movs
fdiv
add
iret
push
mov
dec
ror
div
leave
ds
jg
mov
and
or
xor
ret
test
xor
hlt
pop
je
inc
jmp
lds
push
fisubr
mov
sbb
mov
or
or
add
shl
mov
movs
lods
icebp
mov
in
imul
fwait
jbe
and
arpl
adc
retf
add
outs
ja
push
in
popf
shl
adc
mov
cmp
cld
call
shr
xor
int3
scas
sub
arpl
and
repz
xor
add
push
scas
out
retf
gs
sub
fmul
push
test
imul
sub
add
(bad)
push
adc
ret
movs
loop
dec
cmc
mov
cmp
mov
aaa
xchg
iret
fwait
dec
jmp
push
ja
push
mov
mov
in
add
gs
xchg
mov
aas
popf
ror
pmulhuw
xchg
rcl
xchg
jmp
fs
dec
pop
(bad)
enter
popa
fcom
popa
fs
push
cmp
sub
ja
xchg
pop
in
mov
mov
mov
mov
repnz
imul
in
addr16
das
pop
push
ja
lods
add
clc
icebp
push
out
inc
jno
dec
lahf
mov
xor
test
push
retf
mov
jbe
sub
shr
fisttp
lods
and
xchg
aad
push
mov
or
scas
mov
jne
push
sub
(bad)
retf
adc
cmps
cmp
sub
loop
or
and
xor
cmp
inc
cmp
jp
inc
xchg
enter
mov
les
cld
pop
out
mov
test
scas
jae
enter
and
mov
xchg
mov
rol
in
push
push
jp
cmp
push
fs
rcr
shl
add
mov
pushf
rol
and
cmp
push
jnp
xor
xchg
psrlw
retf
sub
cmp
lea
cs
enter
push
push
sbb
inc
js
ret
or
pusha
call
inc
fcom
add
lods
aad
sbb
(bad)
cli
aam
lods
add
mov
dec
sub
ret
or
mov
out
sub
lods
mov
(bad)
inc
dec
cmps
mov
adc
mov
inc
loope
mov
xor
push
scas
test
or
out
fwait
mov
add
inc
mov
imul
lock
push
aas
or
push
mov
push
adc
lods
cmp
sbb
clc
dec
imul
dec
and
repnz
xor
mov
sub
cmp
xchg
xchg
mov
repz
jo
cmp
ret
fstp
aas
add
daa
mov
sub
mov
cmc
cmps
sti
fadd
pop
hlt
inc
mov
push
or
clc
mov
xor
cmp
jo
sub
and
retf
mov
je
pushf
and
enter
rcl
nop
ds
bound
cmp
stos
scas
mov
data16
adc
mov
add
cld
add
cmps
sbb
jno
cmp
inc
xchg
mov
js
mov
ficomp
cs
dec
call
neg
idiv
pusha
xchg
push
cmp
jecxz
inc
ins
push
mov
adc
gs
add
mov
lds
outs
clc
push
mov
inc
arpl
push
aaa
jmp
sub
mov
cwde
jae
jl
dec
jle
daa
sbb
xchg
cdq
jne
and
in
pop
xor
jmp
sub
push
test
icebp
imul
xchg
aad
mov
(bad)
in
inc
(bad)
out
movs
imul
loopne
mov
jno
mov
mov
push
jne
mov
pop
xchg
push
mov
push
and
mov
pusha
out
xor
sbb
imul
pop
sbb
pushf
mov
not
inc
icebp
mov
fldenv
pop
xchg
and
addr16
pop
in
adc
stc
jb
mov
call
dec
mov
adc
mov
or
int3
mov
paddsb
push
dec
loope
mov
scas
cwde
cmp
xchg
xor
fwait
daa
push
outs
adc
ret
mov
in
or
out
cmp
adc
or
push
imul
mov
repnz
or
adc
lods
lahf
pop
lods
jge
and
mov
mov
jno
ret
stos
pop
bound
xchg
pop
pusha
add
cmp
icebp
(bad)
test
jbe
(bad)
xor
mov
push
cmps
test
aas
(bad)
fnsave
pop
test
jne
inc
outs
jp
xor
fcomp
pop
out
pop
adc
adc
dec
out
mov
sub
inc
sub
mov
adc
out
add
popf
jecxz
fs
mov
call
mov
movs
jle
icebp
int3
das
inc
adc
and
add
sub
xor
adc
adc
sub
push
in
push
inc
mov
jle
les
jge
add
jmp
bound
bound
cmp
mov
xchg
ret
dec
cs
xlat
add
ds
pop
pusha
xchg
and
add
ss
push
int3
fs
addr16
push
push
push
les
pop
xchg
ret
pop
fdivr
dec
jl
or
push
shr
loope
icebp
sub
pop
cmp
xor
fmul
imul
out
js
jmp
je
jle
(bad)
mov
cmp
les
dec
(bad)
sar
or
xor
adc
dec
stos
xchg
pushf
(bad)
adc
xor
xor
sti
xor
inc
push
jnp
mov
fwait
push
imul
int
cmp
cmps
stos
out
push
jbe
rcr
lock
mov
mov
mov
dec
add
outs
(bad)
daa
leave
fistp
xor
enter
mov
fs
ja
jbe
push
arpl
sahf
inc
push
shl
push
imul
in
loopne
push
xor
mov
sbb
lock
das
xchg
adc
adc
mov
cmp
movs
data16
xlat
lock
popf
sub
sub
test
inc
rcr
xor
mov
fmul
or
retf
mov
ja
inc
movs
lds
inc
pop
jmp
lahf
daa
cmps
es
inc
ror
pop
in
out
mov
repnz
int3
pushf
ins
cdq
jne
add
loope
mov
scas
bound
and
sub
sbb
std
mov
push
xor
das
iret
aad
mov
or
test
out
add
aaa
push
sub
mov
xor
shr
and
and
int3
mov
jb
add
imul
jns
mov
pop
or
pushf
mov
mov
aad
xor
fwait
ror
scas
sub
mov
data16
repz
popf
add
push
test
inc
inc
add
in
adc
stos
jae
cmps
add
push
mov
inc
jg
(bad)
les
mov
and
and
enter
outs
dec
(bad)
sbb
fs
dec
mov
sub
mov
and
idiv
cdq
mov
jbe
loope
jmp
pushf
test
in
ror
pusha
lods
adc
jb
inc
out
cld
push
clc
stos
adc
lea
popf
fsubr
mov
mov
jb
test
iret
pop
push
jl
mov
push
jo
sub
iret
mov
sbb
aas
and
(bad)
xor
and
imul
dec
push
adc
test
(bad)
pop
xor
jo
xchg
das
xchg
xchg
fs
cmp
xchg
push
push
fisubr
addr16
fsubr
sbb
jbe
rcl
push
imul
dec
sbb
jmp
sti
jnp
xor
sub
scas
lock
mov
inc
sub
xchg
movs
movs
pop
std
push
xchg
inc
xor
aaa
inc
cmp
rcl
push
cmps
loop
sub
nop
jmp
mov
jmp
push
mov
lds
mov
jg
es
(bad)
lahf
and
sbb
ins
imul
ja
mov
push
jl
rcl
pop
xlat
test
push
jle
punpckldq
ror
popf
mov
call
test
nop
add
les
movs
jle
adc
mov
jae
sbb
and
xor
xor
rcr
leave
mov
inc
bound
mov
idiv
retf
xor
fild
ret
sti
sbb
inc
mov
dec
adc
outs
lahf
dec
xchg
and
jl
adc
lods
and
dec
sar
ret
pop
fnstsw
addr16
xchg
push
es
fwait
dec
jo
sub
and
rol
and
pop
adc
and
scas
mov
inc
movs
ja
cli
in
adc
cdq
(bad)
out
popf
out
shl
inc
(bad)
(bad)
jo
ins
(bad)
cmp
imul
loop
call
adc
pop
(bad)
icebp
loop
inc
sub
pop
test
push
fimul
js
inc
and
adc
ret
movnti
shr
adc
cmc
cmps
jne
icebp
inc
test
jo
movs
dec
add
mov
jmp
leave
stos
arpl
mov
push
xchg
xor
jbe
mov
cld
and
rcl
push
xchg
js
pop
fcmovbe
add
or
aad
push
push
jmp
(bad)
loope
ds
sub
mov
sub
mov
fild
jp
aas
popa
inc
dec
inc
int
mov
je
add
js
jle
cli
scas
push
sbb
mov
movs
or
mov
pop
in
lds
hlt
dec
xor
jmp
out
rol
std
out
loopne
xchg
mov
mov
cwde
je
pop
sub
jne
cwde
mov
and
xchg
sub
lds
push
mov
xchg
xchg
scas
sbb
mov
lods
and
imul
(bad)
add
loope
ja
adc
pushf
xchg
xchg
test
or
sbb
adc
jne
repz
lock
int
mov
not
xor
hlt
inc
leave
or
push
fwait
mov
xor
cmps
jmp
push
addr16
ins
adc
xchg
add
sbb
push
pop
dec
movs
push
(bad)
mov
jle
call
xchg
sbb
imul
rcl
xchg
jno
(bad)
cli
push
arpl
mov
xor
fwait
inc
stc
xor
mov
jmp
push
push
cmp
pop
cwde
push
mov
pop
cmp
fiadd
sbb
inc
hlt
enter
pop
das
sbb
xor
into
fwait
sub
outs
fdivp
(bad)
mov
push
or
aaa
shr
adc
test
cmp
dec
icebp
ja
test
add
ret
or
outs
adc
mov
js
hlt
mov
cmp
sub
mov
mov
je
test
pop
jle
test
jno
or
mov
push
push
das
or
rcl
push
pop
jnp
pop
imul
outs
fdiv
pushf
icebp
into
xlat
out
push
scas
repnz
pop
xchg
ffree
dec
add
aas
rol
test
sbb
nop
cmp
sbb
sub
xchg
(bad)
xchg
jns
xchg
cmp
mov
arpl
xchg
sbb
mov
or
mov
pop
push
jmp
cmp
shl
pop
not
mov
arpl
adc
cmp
(bad)
adc
test
mov
loop
pop
(bad)
adc
out
and
nop
adc
adc
pop
fsub
mov
gs
adc
pop
iret
xor
pop
mov
pop
inc
add
push
popa
add
pusha
ret
shr
cmp
sahf
inc
ret
inc
jbe
or
loopne
lahf
jecxz
xlat
cs
add
cwde
pop
and
pavgw
cmp
mov
lock
imul
outs
and
(bad)
sub
imul
dec
or
mov
pop
push
and
pusha
dec
xor
out
pop
out
sub
xchg
cmp
cmp
xlat
ins
push
sub
inc
add
out
(bad)
neg
mov
cs
retf
imul
(bad)
jl
mov
xchg
daa
arpl
push
in
pushf
adc
shl
add
sub
loopne
and
icebp
sbb
xor
fwait
jno
xor
pop
pop
enter
hlt
mov
add
dec
sub
ja
add
mov
and
jg
dec
xor
shl
sbb
rcl
cmps
xor
xor
ds
repnz
dec
and
fsub
push
out
je
xchg
push
enter
enter
cwde
jl
push
rcr
call
dec
xor
or
retf
push
int3
xor
inc
ja
lock
loopne
and
push
repz
rcl
stos
popa
fistp
push
jae
enter
out
mov
xchg
out
lock
inc
(bad)
ror
adc
in
mov
xlat
out
sub
fwait
sub
inc
xor
xor
push
fdivr
mov
push
and
shl
add
imul
xor
ja
push
icebp
pop
or
(bad)
aas
mov
sbb
ret
pop
pop
mov
popf
mov
and
jle
outs
arpl
neg
pusha
sub
mov
leave
gs
inc
push
cld
(bad)
out
pusha
sbb
sti
adc
stos
mov
cmp
je
in
jge
push
scas
into
fstp
fmul
and
cld
mov
fld
and
add
pop
test
add
nop
out
add
shl
cmp
sbb
daa
xor
push
cli
jmp
shl
adc
or
ins
mov
(bad)
das
into
repz
jne
and
call
adc
popa
pop
mov
dec
push
push
ins
jae
dec
jnp
mov
pusha
sub
sbb
popf
pop
lock
sbb
leave
fisub
push
dec
pop
mov
test
loope
inc
jp
rcr
lea
mov
movs
stos
mov
mov
sub
cmp
outs
or
mov
mov
cs
int
inc
sbb
int3
mov
cwde
dec
and
adc
xor
dec
inc
mov
push
pop
dec
lea
mul
push
mov
pop
jbe
icebp
pop
ret
dec
push
outs
pop
stos
sar
sbb
scas
add
(bad)
ins
and
ins
das
pop
xor
and
push
stos
or
mov
iret
fimul
jbe
dec
mov
retf
adc
gs
lods
jecxz
enter
push
mov
sbb
std
jge
je
aaa
das
mov
xor
jo
stos
lahf
(bad)
cmp
and
xchg
mov
outs
xor
jne
jo
retf
aad
(bad)
cmp
rol
mov
inc
pop
call
adc
in
out
out
lods
jnp
adc
xor
std
dec
pop
into
mov
mov
xor
fstp
mov
push
repz
sub
add
ins
lea
adc
inc
pop
add
mov
jle
mov
add
enter
ret
xor
dec
adc
pop
dec
sub
jns
outs
mov
outs
xor
test
fisttp
leave
ja
in
jns
das
int3
dec
lock
push
int3
mov
sbb
cmp
scas
sbb
lock
xor
test
pop
add
stos
xchg
call
xor
in
push
fcmove
jg
add
sahf
stos
xor
icebp
dec
or
inc
jns
retf
sti
dec
and
add
dec
xchg
push
jb
xchg
sub
pop
(bad)
in
stos
push
out
and
sbb
xor
iret
jecxz
adc
jge
sub
inc
dec
sbb
add
ret
and
mov
pushf
jno
cmp
mov
data16
mov
adc
rcl
jmp
pop
lea
mov
or
sub
fwait
xchg
sub
jmp
in
jg
push
call
or
inc
pop
in
in
dec
add
scas
movs
push
mov
push
cld
outs
mov
les
fwait
pop
xor
in
cs
rcl
or
int3
out
add
dec
fs
ja
xchg
lds
pop
fmul
inc
or
call
xchg
test
in
sar
loop
cmp
pop
(bad)
dec
dec
jecxz
add
add
add
mov
ds
xor
fidiv
clc
popa
push
mov
inc
not
leave
and
retf
and
out
mov
push
cmps
cwde
mov
or
pop
inc
ror
fcomp
imul
cld
push
mov
inc
or
and
in
iret
pusha
push
sahf
outs
neg
or
addr16
mov
push
retf
inc
dec
push
ficomp
xchg
sub
mov
sbb
nop
xchg
aas
inc
pop
(bad)
sbb
mov
or
inc
in
lods
test
jl
nop
sub
mov
icebp
mov
test
xlat
popw
add
mov
xchg
and
cmc
sbb
and
aam
and
mov
pop
clc
icebp
jp
dec
fild
xor
sub
mov
or
sub
mov
sbb
loope
(bad)
int3
pop
int
scas
lods
mov
mov
pop
jb
add
and
lahf
daa
or
int
add
loop
pusha
fbld
test
fsubr
cmp
jb
xchg
xchg
dec
aaa
jne
cmp
push
xor
pop
test
outs
test
sbb
gs
xchg
add
aaa
gs
test
mov
jl
and
mov
xor
pusha
xchg
mov
sub
mov
inc
and
ja
ficomp
stos
popa
mov
dec
test
loop
push
stos
iret
jne
cwde
jmp
push
pop
fisubr
out
xchg
mov
sbb
dec
fcom
mul
xor
ins
fstp
pop
cmc
test
jmp
xchg
mov
leave
enter
ja
or
out
retf
cmp
lds
std
in
add
jp
jg
mov
adc
dec
cmps
fist
dec
mov
call
and
inc
jo
mov
adc
stos
cmp
inc
es
in
outs
dec
gs
rol
jnp
ret
jmp
cmp
sbb
sub
inc
out
mov
test
and
js
xor
or
shr
mov
inc
add
and
inc
mov
push
jnp
cs
fucomp
pop
jae
repz
lahf
adc
push
into
push
fstp
ja
jb
out
cmp
mov
dec
call
push
add
push
(bad)
fiadd
sub
aas
mov
test
push
(bad)
mov
mov
hlt
call
mov
adc
clc
adc
test
inc
sti
mov
leave
cli
or
loop
sub
dec
mov
mov
daa
pop
icebp
test
jmp
data16
dec
and
mov
inc
lods
movs
out
ret
push
and
jmp
add
pushw
xor
dec
cmp
dec
cmp
mov
stc
pop
out
cmc
js
out
test
lock
jecxz
cmp
push
jl
and
mov
mov
push
ret
adc
scas
cmc
sub
xor
out
push
xchg
hlt
and
pop
push
xchg
inc
mov
enter
std
iret
aas
inc
in
aaa
jg
div
adc
ins
jo
outs
jle
loop
rcr
sbb
stc
in
or
inc
add
or
mov
mov
inc
fidivr
mov
mov
xchg
sti
mul
mov
push
adc
int
jmp
scas
jmp
nop
mov
out
aam
add
cwde
lock
inc
data16
xchg
(bad)
mov
in
add
push
loope
mov
mov
jno
cs
jg
lods
loop
push
or
jecxz
scas
stos
adc
adc
arpl
inc
out
and
jl
pop
test
add
push
mov
sbb
bound
ins
sub
addr16
jne
fimul
(bad)
int
xchg
adc
add
adc
out
xchg
and
adc
sbb
mov
popf
jmp
dec
(bad)
adc
aad
call
mov
add
sbb
setbe
cmp
ja
es
cmc
pop
pop
inc
mov
and
div
(bad)
fwait
pop
sub
outs
jl
or
adc
inc
std
mov
scas
rcl
loop
rcl
loope
(bad)
aad
mov
jl
ds
inc
pop
arpl
in
sbb
dec
aam
mov
leavew
push
leave
jecxz
xchg
dec
sbb
inc
bound
adc
daa
popa
test
dec
fs
mov
out
push
in
mov
inc
cdq
test
ds
adc
xchg
adc
test
data16
adc
unpckhps
push
aam
push
ror
add
push
call
sar
xchg
mov
sbb
out
inc
jecxz
loopne
adc
xor
aas
sub
jne
pop
dec
mov
xlat
into
mov
enter
fcmovbe
xchg
add
ins
push
pop
xor
sbb
sub
inc
pop
jle
sbb
and
add
cmp
xchg
or
(bad)
cmovs
dec
sub
jns
mov
in
sbb
mov
sahf
cmp
xor
cmp
sbb
lea
(bad)
stos
test
jne
dec
push
inc
adc
jns
scas
pop
lahf
mov
scas
pop
(bad)
mov
addr16
push
sbb
cmp
cmps
jb
scas
add
loopne
fist
cmp
jle
loopne
mov
ss
sbb
jge
imul
shl
sub
sub
out
xor
mov
or
pop
cmps
xchg
adc
repnz
daa
push
pop
aas
into
in
mov
loope
xchg
out
fild
push
test
bound
and
xor
sub
aad
cmp
sub
sbb
fist
mov
mov
scas
sahf
mov
adc
pop
ror
mov
je
pop
pusha
shl
pushf
cld
add
xchg
cmp
aaa
or
jno
mov
and
xchg
rcl
jo
ds
xchg
into
jb
jns
repnz
sub
call
xchg
(bad)
scas
mov
data16
daa
mov
mov
and
leave
fnstcw
jp
or
xchg
inc
push
mov
pop
(bad)
imul
dec
xchg
ret
stos
lea
push
mov
fidivr
and
pusha
cdq
mov
and
add
pop
fimul
bound
adc
mov
aaa
out
int
sub
lahf
(bad)
fs
outs
inc
movs
test
jne
mov
scas
mov
movs
mov
jecxz
dec
inc
das
jmp
mov
jge
xor
pop
push
pushf
xchg
pop
int3
push
cmc
mov
mov
or
lods
mov
rcr
les
add
das
movs
test
or
or
cmp
sbb
fcmovb
mov
nop
push
xchg
popf
rol
push
leave
je
test
outs
and
jo
mov
pop
imul
scas
fdiv
call
jns
fisub
movs
aaa
js
xchg
xlat
adc
int3
ret
aas
addr16
pop
pop
mov
dec
dec
rcl
es
in
loope
xor
mov
mov
or
daa
sbb
inc
lock
cmp
fisubr
in
sbb
pop
jae
jge
mov
and
jbe
jae
jg
add
pop
iret
cdq
inc
mov
aad
inc
rcr
lahf
mov
and
arpl
xchg
in
jbe
popf
rcl
jg
mov
fsub
lea
movs
sahf
aad
ins
push
ja
dec
lock
sub
retf
dec
mov
jge
rcr
push
fs
retf
sbb
jbe
bound
(bad)
pop
sbb
push
push
dec
fiadd
rcr
outs
cwde
sbb
jmp
and
pop
dec
test
jne
outs
sub
loopne
xchg
pop
aam
sbb
mov
cmp
mul
out
push
js
adc
call
in
clc
(bad)
xchg
inc
pop
jge
pop
shl
fs
add
xor
push
xchg
leave
add
(bad)
mov
ret
adc
or
xchg
or
movs
xor
mov
push
rol
(bad)
mov
mov
xor
lock
in
neg
imul
push
fdivr
jecxz
sbb
mov
sar
or
(bad)
xchg
loope
in
and
cwde
mov
into
(bad)
and
ss
loop
mov
push
pop
sbb
int3
xchg
fdiv
add
push
push
imul
mov
push
jb
jbe
jp
repz
std
test
dec
(bad)
ja
out
(bad)
stos
pop
push
add
pusha
sbb
out
pushf
sub
retf
hlt
fwait
out
mov
and
in
cmp
(bad)
xchg
sbb
pop
mov
sbb
outs
in
cmps
les
sbb
dec
mov
retf
sbb
aas
aas
or
cmp
jbe
stc
scas
lods
aas
daa
fwait
shl
cwde
ins
xor
lea
and
add
cmp
cwde
cmc
mov
jnp
jg
mov
out
cs
in
inc
or
xchg
jae
sub
adc
int
pop
sbb
pop
dec
sbb
lods
jno
jmp
jo
jmp
js
fnclex
dec
push
(bad)
outs
lea
imul
das
add
add
xchg
push
out
dec
or
mov
xchg
xchg
in
mov
mov
sti
push
cmp
ret
xchg
test
mov
pop
cdq
das
or
fiadd
pop
mov
aaa
(bad)
pop
shr
test
push
addr16
pcmpgtb
cmp
ret
dec
icebp
push
xor
out
jmp
pop
pop
cmps
out
sti
nop
das
je
pop
add
(bad)
in
push
pop
stos
mov
aas
pop
jns
sub
mov
fimul
mov
mov
mov
fs
es
(bad)
fimul
xor
add
mov
jg
popa
daa
fisubr
mov
(bad)
mov
popf
fiadd
xor
mov
jmp
sbb
pop
int3
out
(bad)
(bad)
in
and
fnstsw
pushf
push
mov
rcr
add
inc
and
sub
data16
pusha
test
mov
enter
lods
pop
ror
sub
jge
cmps
aas
aam
inc
xor
test
add
sub
(bad)
xchg
adc
or
mov
arpl
retf
sub
fmulp
mov
fadd
push
jle
retf
aaa
xchg
shr
(bad)
sub
mov
fmulp
mov
mov
jnp
aas
push
or
or
pop
or
fisub
xor
push
scas
sub
adc
es
aas
movs
push
mov
fcmovne
xchg
(bad)
icebp
xor
xor
cmp
add
xor
xchg
mov
aam
mov
aaa
sub
or
dec
out
push
jb
fisttp
sbb
scas
pop
stos
xlat
scas
or
cmp
ja
push
sbb
and
cmp
(bad)
das
jnp
or
call
call
int3
leave
or
out
and
sub
repz
iret
cwde
(bad)
push
mov
sbb
mov
cwde
adc
and
and
mov
adc
int3
cmp
xchg
add
fdivr
ret
push
mov
retf
daa
pusha
xor
mov
and
ret
pop
push
xor
pop
out
popa
neg
sbb
int
enter
and
lds
scas
ins
sbb
test
xor
add
fist
dec
lahf
xor
mov
icebp
retf
out
in
ds
and
ds
mov
pop
js
loop
inc
sbb
ss
shr
outs
pop
into
pop
data16
mov
pop
inc
lock
sbb
mov
xor
mov
fwait
jmp
pusha
out
dec
add
xchg
mov
mov
outs
push
clc
aas
ficomp
pop
mov
repz
push
js
push
push
jns
xchg
pop
stos
xchg
mov
jns
es
cli
and
movs
in
aam
dec
inc
sub
fwait
inc
push
movs
and
cmp
push
(bad)
fisttp
mov
and
cs
mov
es
popa
fist
sub
(bad)
popa
test
jns
fstp
mov
nop
inc
fldenv
fs
lock
fmul
inc
mov
cwde
inc
leave
mov
clc
loop
fwait
rcr
xchg
nop
lock
dec
pop
sbb
jge
pop
cmp
add
push
in
mov
call
mov
inc
repz
pop
int3
xor
int
and
jecxz
ret
cs
xchg
adc
push
rol
adc
or
std
mov
push
fild
pop
cli
call
loopne
dec
bsr
inc
imul
sub
cwde
jne
shl
jmp
add
mov
out
imul
pop
cmp
int3
(bad)
(bad)
sahf
pop
cmp
sar
push
aam
and
dec
and
lea
mov
pusha
bound
jl
imul
enter
jns
movs
jno
sbb
jbe
hlt
nop
push
or
test
xchg
clc
loope
cmc
jmp
(bad)
inc
repz
jae
inc
ins
int3
sahf
push
test
xchg
lods
cmp
pop
aad
iret
aaa
pop
out
ds
mov
pop
repnz
lock
stos
lea
xor
jno
dec
sub
push
xor
cmps
mov
mov
std
xor
shl
mov
rcr
shl
(bad)
mov
int
cld
and
xchg
lock
xor
add
jnp
pop
int3
pop
lods
shl
gs
rcr
cmc
jae
inc
or
pop
cwde
(bad)
outs
ss
mov
jb
cwde
add
xor
movs
inc
je
inc
outs
cs
sar
imul
add
out
in
jge
in
cmp
jo
out
pop
lahf
inc
mov
mov
ins
cmps
std
jmp
js
xor
push
ja
jne
fwait
iret
sub
outs
outs
cs
inc
pop
movs
jecxz
mov
inc
jae
in
daa
push
mov
mov
daa
popa
push
mov
aam
iret
or
mov
xor
outs
dec
mov
je
mov
(bad)
imul
xchg
xchg
jecxz
popa
cmp
pusha
test
dec
dec
jecxz
mov
push
test
mov
xor
out
outs
xor
mov
and
in
pop
cmp
int3
lods
stos
imul
jle
or
xor
outs
and
movs
add
sub
pop
ret
test
test
inc
adc
pop
enter
mov
int3
fadd
imul
mov
xor
arpl
cdq
pop
out
arpl
xor
shr
cmps
int
shr
scas
sub
pop
fadd
pop
xor
add
mov
xor
jmp
cmp
jno
(bad)
cld
cmp
or
fisttp
jmp
ror
js
fidivr
fwait
mov
aas
jmp
or
rcr
push
lods
push
ficom
test
jbe
ret
loop
ins
or
mov
pop
dec
mov
and
js
cmps
cmp
pop
cmps
jp
mov
push
inc
imul
cld
rol
pop
inc
push
std
(bad)
sub
test
rdpmc
sbb
push
push
cs
aam
xchg
pop
sub
repz
adc
sub
jno
add
inc
jnp
test
xor
out
leave
pop
mov
test
movs
cmc
inc
jmp
ja
std
cmp
arpl
cli
sbb
sub
sbb
jnp
mov
out
inc
dec
mov
(bad)
ficom
(bad)
(bad)
sbb
icebp
fdiv
fnstsw
cmp
xchg
mov
pop
sbb
leave
dec
jle
mov
jb
rcl
dec
lods
mov
push
scas
xchg
imul
inc
mov
dec
push
sub
shl
add
cmps
popf
jle
ret
test
mov
dec
aad
sub
xchg
mov
cwde
aaa
pop
sbb
pop
sahf
adc
jns
inc
test
sub
addr16
mov
pop
jg
ret
mov
dec
push
and
pusha
pop
add
add
adc
lahf
jmp
inc
(bad)
jg
sub
mov
(bad)
lea
mov
sbb
pop
push
mov
inc
mov
call
sbb
sahf
mov
(bad)
cmp
repnz
push
jnp
fimul
sbb
icebp
cwde
jb
mov
aad
aam
or
cld
stos
push
outs
call
mov
inc
repz
sar
dec
jae
add
neg
or
fistp
jecxz
and
push
or
popf
jo
push
adc
idiv
cmp
add
lods
xchg
arpl
not
dec
xchg
jmp
mov
push
xchg
or
mov
je
push
pop
inc
xchg
adc
les
lods
mov
repnz
and
pop
aam
ins
jbe
in
inc
in
stc
punpckldq
mov
dec
data16
add
xchg
outs
(bad)
enter
or
loopne
(bad)
push
cmp
and
sbb
retf
xor
fdivp
pop
out
jbe
sar
sub
dec
leave
push
rcl
pop
fwait
dec
ja
loop
sub
lds
push
dec
retf
xchg
add
imul
into
test
push
sub
xor
jl
shr
jp
mov
add
jg
dec
fidiv
push
inc
sti
repz
outs
leave
cmp
outs
popf
test
aaa
test
fdivr
inc
jae
test
dec
sub
push
lock
push
data16
jno
mov
js
not
pop
mov
jae
test
loopne
jmp
lods
aaa
jg
inc
jne
(bad)
mov
xchg
loopne
loopne
cdq
ficomp
or
in
ja
mov
and
cmp
popf
xchg
out
inc
(bad)
sub
inc
jmp
icebp
fwait
add
aad
jecxz
retf
xchg
aas
icebp
jp
sbb
xchg
enter
dec
(bad)
xchg
clc
je
mov
sbb
push
jl
movs
pop
jecxz
pop
jne
cmc
pop
ret
sbb
dec
daa
push
addr16
push
mul
out
add
fisubr
ins
cdq
dec
cli
inc
or
push
comiss
cmp
xor
fwait
mov
adc
xchg
hlt
push
(bad)
pop
test
mov
sbb
cmps
sbb
and
pop
xchg
push
xor
aas
jmp
mov
push
jnp
push
in
jge
cmps
mov
xchg
push
sbb
mov
imul
js
mov
pop
push
lock
shr
(bad)
cdq
xchg
scas
mov
xchg
push
cld
lahf
cld
mov
xor
je
sbb
mov
inc
push
push
push
sti
xor
and
cmp
adc
mov
fdiv
test
adc
sbb
jecxz
icebp
das
and
cmp
mov
mov
mov
mov
es
mov
inc
leave
cmps
arpl
jge
into
mov
mov
jge
push
inc
retf
mov
(bad)
stos
ret
mov
mov
pop
and
mov
(bad)
call
in
fst
add
xor
imul
mov
dec
cmp
sbb
shr
sbb
and
ds
cdq
ror
ss
in
dec
movs
or
mov
push
not
inc
push
adc
fldenv
sbb
push
or
cli
repz
iret
rol
cwde
lea
fdivr
and
xchg
(bad)
int
inc
out
and
mov
adc
pop
rcl
push
(bad)
stc
push
xchg
mov
xor
popa
xchg
and
or
cmp
gs
or
cmp
cmp
and
push
js
repz
xchg
cmps
popf
xchg
(bad)
outs
pop
lods
out
jnp
test
mov
aam
je
xor
jmp
rol
push
or
jecxz
sar
sti
out
adc
jo
cmp
shr
mov
push
sbb
sbb
xchg
test
and
mov
inc
daa
mov
pop
adc
xchg
sar
push
jae
mov
push
push
pop
neg
jecxz
sub
push
xchg
cmovl
and
cmp
sbb
shl
xchg
sub
or
jne
mov
sub
mov
int3
or
jmp
mov
ret
mov
sbb
pop
mov
or
sbb
dec
push
xchg
jmp
call
mov
pop
xchg
fidivr
mov
xor
shl
mov
adc
cld
and
mov
fisubr
stc
pushf
rol
jae
ret
(bad)
sahf
nop
add
or
rcl
es
sti
ja
xchg
popa
adc
dec
nop
ja
into
bound
sub
pop
inc
lds
push
sar
adc
pop
popa
adc
push
cmp
int
in
icebp
lahf
fbld
iret
stos
xchg
in
ins
stc
in
mov
imul
aam
adc
add
neg
lea
out
les
dec
mov
stos
jl
(bad)
jns
(bad)
in
sub
push
adc
in
out
jl
xchg
cmp
xor
icebp
test
adc
or
std
jae
lahf
xchg
imul
adc
fld
sbb
push
pop
mov
call
shl
das
bnd
mov
in
jecxz
mov
lea
add
or
popf
call
mov
iret
test
add
xor
xchg
or
pop
xchg
sbb
and
hlt
test
or
push
sahf
xchg
pop
push
add
xlat
adc
data16
js
scas
xchg
jmp
dec
push
xchg
stos
(bad)
jmp
lahf
sub
nop
hlt
mov
add
push
add
out
mov
xchg
sbb
pop
fidiv
imul
mov
push
dec
mov
test
scas
test
stos
popf
int3
mov
mov
enter
xchg
jg
test
sub
dec
movs
in
cdq
fwait
push
push
inc
retf
jp
cmps
adc
xchg
dec
dec
sub
gs
into
sbb
adc
shr
xor
dec
fldenv
adc
mov
je
fcomp
cmp
push
cwde
pop
xchg
mov
cdq
lahf
pop
test
and
jl
pop
jns
jge
cmc
icebp
sub
mov
cmp
cld
xchg
lods
sbb
xor
pop
sub
xor
dec
jmp
mov
or
es
hlt
mov
in
popf
jo
pop
jecxz
pushf
lock
jecxz
mov
and
cwde
leave
mov
push
sub
mov
test
sbb
sub
add
rcl
popa
ins
lea
jecxz
pop
pop
scas
mov
mov
repz
dec
outs
jge
mov
mov
push
loop
jle
lods
lods
test
jo
lods
cld
outs
in
adc
jmp
neg
sar
(bad)
idiv
ins
push
(bad)
xor
jle
jle
xor
cmps
jnp
test
push
jmp
ror
xchg
dec
xor
js
or
gs
cmp
and
push
pop
ins
inc
cmps
push
push
jnp
mov
adc
aaa
adc
mov
(bad)
dec
sbb
mov
mov
push
bnd
mov
mov
push
fwait
and
das
ss
lahf
jp
sahf
xchg
in
xchg
shr
inc
cmps
push
xor
cwde
sub
pop
mov
adc
stos
and
inc
mov
out
pandn
sub
mov
xor
sar
cmp
js
cmp
das
enter
(bad)
std
cmp
fxsave
lea
xchg
es
test
out
jb
jno
ins
cmp
loop
xchg
iret
adc
nop
cmp
mov
add
daa
dec
cmp
mov
iret
pushf
mov
imul
add
bound
or
jmp
xchg
enter
hlt
push
add
push
and
and
out
xor
and
mov
cmps
fs
(bad)
push
icebp
dec
daa
mov
cmps
push
jns
inc
stos
nop
mov
mov
in
inc
ret
push
retf
pop
or
adc
dec
dec
jge
int3
or
jbe
mov
xchg
int
nop
mov
jns
add
je
mov
mov
push
repnz
stos
mov
pushf
outs
fsub
xor
jg
outs
cmp
mov
mov
xchg
xor
sbb
cli
pop
pop
rol
mov
arpl
mov
call
jl
dec
fidivr
lods
dec
cmps
jb
test
mov
jmp
adc
push
hlt
xchg
or
inc
add
mov
sub
push
mov
mov
shl
fldcw
cmp
mov
ror
sub
push
inc
in
pop
nop
add
in
or
pushf
mov
mov
and
sub
xchg
into
popf
pop
ds
sbb
cmps
sbb
loopne
inc
loope
or
ds
xor
call
(bad)
call
test
push
mov
mov
lods
bound
pop
sub
lds
fwait
and
hlt
je
xor
loop
xor
imul
test
bnd
in
xchg
pop
gs
and
int3
dec
rcl
lds
xchg
mov
xchg
fcmovu
add
sub
pop
test
jg
movs
loop
jo
mov
cmp
and
cmps
pop
and
adc
lock
arpl
pop
pop
mov
xlat
repnz
add
add
movs
(bad)
sti
popf
mov
(bad)
popf
mov
pop
and
xchg
inc
pop
enter
jno
call
inc
push
pop
sub
sbb
sbb
int3
fisub
aad
cmp
xor
push
neg
lock
push
xchg
dec
dec
lds
icebp
add
pop
and
cdq
test
pop
mov
outs
mov
xlat
lods
pop
aaa
sahf
mov
inc
and
imul
dec
addr16
or
imul
xchg
in
out
mov
mov
inc
sahf
mov
push
lea
mov
sbb
dec
mov
arpl
mov
mov
pop
ficomp
cdq
push
add
sub
mov
bound
xor
leave
(bad)
mov
out
int3
loopne
fidivr
cmps
lea
push
sbb
mov
retf
push
rcr
xor
(bad)
push
daa
out
mov
dec
pop
cmc
fsubr
inc
lods
and
or
fsubrp
pop
ds
xor
lods
jo
enter
fsub
movs
jg
xor
loop
dec
add
fist
or
cs
repnz
and
ror
rcl
test
lahf
not
add
mov
fwait
(bad)
data16
jno
mov
push
stos
push
push
push
lods
mov
addr16
stc
ds
jnp
push
inc
or
(bad)
shl
add
(bad)
popa
mov
(bad)
call
inc
add
pop
aam
ror
imul
xchg
add
cmp
inc
lods
xor
scas
fwait
mov
jmp
aad
aaa
sub
sub
fcomp
dec
scas
(bad)
jmp
inc
jbe
test
rcl
jo
das
adc
xchg
mov
push
push
test
jns
inc
xchg
es
das
(bad)
jne
loop
push
mov
mov
into
ds
cwde
adc
aad
sub
jp
sbb
clc
fnstenv
call
fistp
lock
pop
dec
clc
int3
inc
daa
retf
int3
icebp
mov
jge
hlt
test
pop
mov
outs
hlt
sub
je
pop
mov
in
loop
xchg
inc
call
sub
and
cmps
test
sub
and
(bad)
jecxz
nop
shl
or
pop
cmps
in
mov
fxch
adc
push
add
inc
xor
fsubr
in
fs
int
test
dec
xlat
sbb
loop
push
repz
fst
cmps
cs
xchg
std
push
inc
mov
ret
pushf
and
fwait
jge
cwde
xchg
test
jmp
in
lods
jle
nop
fwait
ja
fcom
or
mov
inc
mov
add
fmul
pop
repz
mov
fisttp
in
dec
pop
mov
pop
test
push
jno
aas
jl
xor
push
mov
iret
mov
call
pusha
push
movaps
das
(bad)
clc
add
ja
cmp
sbb
and
cwde
and
and
not
xchg
lahf
into
sbb
cmp
mov
jl
int3
mov
or
adc
inc
dec
ss
cld
movzx
or
in
movs
in
xor
add
dec
dec
mov
push
jb
(bad)
retf
call
imul
sub
ins
bound
mov
test
mov
inc
or
xor
add
lea
dec
push
out
movs
cmp
fcmovbe
in
push
enter
xor
cmps
cs
retf
outs
fwait
inc
sbb
adc
fdiv
ret
xor
stos
push
daa
std
mov
jbe
dec
std
lock
jmp
pop
and
movs
sbb
div
jbe
push
push
clc
(bad)
mov
dec
jne
inc
inc
mov
and
stos
sbb
cmp
sbb
arpl
popa
sub
or
sbb
scas
sub
test
ds
repz
jmp
icebp
sbb
or
sub
popa
push
adc
or
jmp
lock
or
dec
fist
mov
cwde
(bad)
cmc
fdivp
shr
jnp
daa
push
mov
mov
arpl
rol
push
pop
mov
pop
movs
jp
or
bound
cmp
outs
fnstcw
mov
mov
or
and
cmp
aaa
loope
ins
icebp
sahf
out
scas
mov
sub
test
jle
dec
cdq
not
jb
pop
sub
push
std
in
dec
push
test
retf
stos
clc
out
mov
sbb
popa
ins
or
sbb
adc
(bad)
jmp
pop
(bad)
pop
or
bound
scas
addr16
cld
push
adc
aam
mov
cs
mov
icebp
mov
lods
xchg
jg
(bad)
fsubr
call
sbb
shl
outs
dec
pop
mov
rep
aaa
clc
mov
push
mov
hlt
cmp
adc
pusha
or
mov
cld
imul
add
cwde
cmps
pop
scas
mov
push
out
mov
adc
sahf
adc
bound
aas
stos
into
mov
mov
ror
clc
int
fwait
sub
cwde
mov
mov
xor
retf
jbe
and
inc
dec
je
and
cmp
push
xchg
mov
push
leave
inc
aas
test
les
or
lods
xchg
sbb
xor
push
popf
push
sbb
daa
push
dec
inc
xchg
push
and
mov
std
mov
sub
dec
and
mov
cmp
push
sti
add
inc
jle
dec
xor
cdq
mov
pop
adc
sbb
mov
or
add
pop
cld
jae
inc
retf
loopne
push
lock
mov
jne
std
xchg
xchg
jo
sbb
test
jl
inc
mov
shl
mov
lock
sbb
push
shl
and
adc
popa
rcr
pop
mov
or
test
repnz
int
inc
inc
and
cli
dec
imul
int
in
and
sbb
clc
in
xchg
mov
sub
xchg
cmps
enter
ins
jmp
dec
jbe
iret
push
fs
inc
pop
cmp
and
mov
dec
adc
cmp
stos
jmp
pushf
test
out
(bad)
sub
loop
aad
aaa
in
dec
push
mov
rol
and
push
pop
mov
jo
aam
cs
stc
sbb
jg
cmc
imul
push
fmul
and
adc
es
push
xchg
into
inc
sub
xchg
(bad)
jecxz
popa
in
in
mov
iret
and
or
or
fisttp
adc
fcomp
xchg
jmp
in
sbb
cmp
test
int
or
lods
push
inc
jbe
aaa
jmp
pop
dec
test
shr
xor
xor
ins
outs
js
push
add
mov
(bad)
popf
rcr
aas
stos
xor
fwait
cmps
mov
icebp
aad
shl
mul
lods
or
out
leave
dec
inc
in
test
retf
shl
scas
xchg
call
js
sbb
jp
add
push
ds
or
mov
add
mov
add
in
mov
jno
dec
scas
xor
into
cld
call
jg
dec
(bad)
sub
xchg
mov
sbb
push
add
fadd
dec
jle
mov
push
cmp
fidiv
sbb
les
pop
in
out
and
mov
hlt
mov
neg
xchg
dec
mov
es
pop
xchg
jmp
jecxz
ja
daa
jle
fmul
pop
sbb
dec
add
cmps
in
gs
push
and
jmp
daa
fwait
push
rcl
inc
jecxz
leave
fsub
ds
sub
sub
jmp
rol
lods
popa
out
aaa
retf
shr
dec
jmp
xor
lahf
xchg
aas
(bad)
outs
push
int
mov
inc
jmp
xor
cmp
cmp
or
sub
mov
pusha
adc
int
(bad)
test
add
mov
dec
out
push
pop
mov
sbb
repnz
push
sbb
cmps
xchg
sti
ins
mov
ins
or
dec
cs
packuswb
mov
inc
adc
cs
inc
jbe
sub
mov
sub
(bad)
sti
add
ret
mov
add
mov
inc
xor
jp
aas
xchg
clc
pop
push
mov
cmp
inc
aad
dec
inc
rol
call
(bad)
jmp
ja
mov
hlt
aad
jmp
sar
jmp
std
push
(bad)
and
adc
xor
xchg
cmp
sub
inc
lds
je
mov
iret
shl
mov
test
clc
(bad)
outs
sbb
sub
mov
mov
es
xchg
and
in
xrstors
lods
sar
ficom
jns
pusha
bound
jne
mov
test
test
jns
pop
pushf
sbb
or
mov
jo
inc
jae
sbb
fstp
xor
js
icebp
lods
out
jle
and
int3
xchg
lea
or
xor
stos
xor
rcr
push
outs
mov
loop
pop
jnp
jmp
sbb
aam
inc
jmp
xor
data16
adc
sbb
mov
pusha
inc
dec
inc
push
les
sbb
or
aaa
or
icebp
xchg
xchg
mov
scas
hlt
sbb
dec
or
pop
mov
fisub
sti
ss
pop
call
inc
(bad)
adc
shl
cs
outs
test
jns
jae
(bad)
(bad)
mov
dec
jne
xchg
push
push
rcl
add
mov
add
enter
push
mov
ins
unpckhps
xchg
inc
sbb
dec
outs
pusha
push
fcomp
jne
imul
ret
retf
lods
pop
push
ins
dec
rcr
sbb
ds
and
imul
jnp
cld
clc
fisub
cmc
jns
xchg
pop
fldcw
or
fisubr
fldcw
(bad)
je
mov
xchg
das
dec
mov
push
pusha
add
lods
push
fld
in
into
adc
jns
(bad)
adc
xlat
pop
xchg
fisub
inc
sub
push
push
outs
(bad)
hlt
add
inc
ins
out
dec
inc
leave
mov
or
jmp
shr
mov
imul
xor
mov
jo
pop
pop
sub
in
push
mov
pushf
mov
bound
enter
shl
mov
leave
call
or
(bad)
or
xlat
ja
scas
js
out
out
jno
push
pop
inc
lods
inc
xor
sbb
cmc
push
test
imul
xchg
cld
add
std
les
adc
stc
or
xor
mov
cmps
and
cmp
lock
das
(bad)
mov
les
mov
xchg
jle
adc
cmps
xor
ss
jg
sbb
push
movs
arpl
outs
out
cmp
sub
int3
(bad)
push
stc
in
pop
push
mov
add
push
aam
test
or
std
fs
jp
xor
sbb
stos
daa
adc
addr16
out
inc
cmps
mov
call
jo
sahf
movs
xlat
jo
loope
sbb
(bad)
or
rcr
popf
inc
mov
repnz
dec
sbb
xor
dec
dec
jno
not
or
fisub
pop
ja
jmp
and
xor
jb
mov
fdiv
mov
lock
mov
mov
inc
push
sar
sti
or
aad
das
imul
scas
sbb
cmp
or
es
jp
or
movs
add
into
jno
je
inc
and
mov
ror
outs
sbb
ret
fmul
pop
xor
mov
repnz
dec
cmps
ficom
ja
adc
mov
test
outs
pop
or
and
fsubr
jp
ins
arpl
xchg
mov
lahf
sar
mov
pop
mov
repnz
sbb
jecxz
aad
cdq
loop
and
adc
out
imul
adc
cmc
cmp
jbe
shr
fadd
jge
xlat
sub
mov
in
fnstenv
faddp
mov
movs
hlt
imul
jnp
push
rol
rcl
mov
fwait
jnp
shl
inc
int3
inc
jns
hlt
je
shr
rcl
sti
daa
push
xchg
icebp
mov
pop
xchg
ret
in
adc
jl
retf
or
xchg
add
dec
jae
(bad)
(bad)
lods
dec
bswap
imul
test
lock
cmp
mov
not
std
scas
dec
mov
mov
sti
mov
ins
leave
aas
mov
dec
leave
rcl
popa
ror
pop
dec
cmp
cs
inc
pushf
out
into
jle
mov
pop
and
mov
aam
push
add
sbb
xor
fbstp
es
inc
mov
mov
mov
jo
mov
out
shl
push
xor
push
xor
jns
inc
cmp
(bad)
pop
and
jae
pusha
lahf
cmp
enter
fimul
dec
mov
sbb
adc
mov
dec
hlt
(bad)
sub
cld
or
mov
addr16
xchg
or
fadd
or
loope
adc
dec
cs
test
xor
lods
lahf
mov
je
icebp
lock
push
or
fld
jnp
scas
(bad)
mov
mov
pop
xchg
std
or
fucomp
mov
and
add
push
imul
pop
outs
push
inc
outs
(bad)
mov
xchg
scas
test
inc
mov
sti
call
jne
mov
iret
outs
pop
jnp
nop
stos
mov
dec
or
dec
(bad)
scas
ins
jmp
das
icebp
push
(bad)
ja
inc
arpl
sbb
xchg
ss
stos
setl
stc
push
push
mov
push
mov
xchg
mov
lahf
ror
inc
xchg
arpl
repz
shr
cld
loop
mov
dec
(bad)
sub
adc
or
iret
(bad)
idiv
add
test
in
cmp
sub
xchg
in
pop
pop
ds
or
jmp
and
gs
dec
push
xchg
sti
scas
popa
daa
adc
mov
cmp
fisub
pop
ins
and
test
and
push
xor
sahf
jns
fld
and
xchg
cmp
inc
xchg
stos
push
fs
xchg
lock
and
out
bound
and
jns
retf
int3
mov
and
inc
pop
hlt
xchg
fbld
dec
dec
clc
xchg
cwde
xchg
or
inc
dec
stos
pusha
push
or
sbb
cwde
lock
dec
mov
cmp
push
icebp
fld
xchg
jl
ins
lods
xor
fwait
xchg
(bad)
inc
or
gs
or
mov
sbb
jb
mov
cmc
pop
inc
mov
mov
add
mov
stos
inc
or
mov
mov
add
mov
in
aaa
ins
fwait
push
js
dec
call
dec
xchg
jo
aad
sbb
dec
xchg
test
rcr
mov
jbe
mov
cmovno
(bad)
cmp
jl
adc
cmp
fwait
movs
adc
xlat
push
jno
mov
adc
inc
loop
push
leave
mov
push
push
movs
stos
mov
adc
repnz
xor
xchg
repz
dec
xor
adc
pop
xchg
(bad)
mov
mov
fcmovb
mov
lea
pop
test
call
popa
dec
xchg
sbb
repz
jle
jno
sbb
jp
mov
(bad)
pop
xor
iret
xchg
movs
outs
mov
pop
xchg
mov
add
adc
shl
pop
mov
shl
in
push
or
mov
jmp
adc
add
out
xchg
cs
in
cmp
loope
scas
in
xchg
and
or
jmp
or
pop
icebp
push
(bad)
jmp
or
enter
sbb
cld
or
cmps
test
push
pop
adc
push
and
jl
mov
dec
cmp
sahf
scas
xchg
lods
loop
push
pop
outs
pop
test
mov
xchg
fiadd
(bad)
out
jge
mov
inc
sub
inc
cs
call
adc
shl
adc
inc
jne
adc
inc
add
and
cmp
stos
mov
sub
int
sub
xchg
rcl
mov
push
jmp
inc
cli
movs
jo
int3
sbb
mov
jecxz
mov
ins
mov
mov
jnp
lds
push
in
dec
mov
in
mov
jmp
mov
and
mov
add
inc
mov
pop
iret
xchg
aam
mov
push
in
inc
movs
test
jmp
mov
es
pop
loop
jmp
loopne
xchg
out
mov
mov
push
out
test
das
mov
lods
xchg
pop
adc
and
ret
sbb
jno
mov
pushf
movs
sbb
iret
sar
movs
lock
pop
dec
pop
ss
leave
mov
lods
enter
(bad)
mov
sub
cmp
pop
pop
add
pop
jmp
xor
dec
(bad)
mov
scas
cmps
xor
xchg
cmp
mov
lock
sbb
jae
cmp
loopne
sbb
shr
ds
lods
mov
pop
push
pop
leave
ret
aaa
iret
(bad)
mov
ja
into
sub
sub
mov
add
ins
jmp
outs
add
ret
mov
clc
cmps
and
xchg
mov
jno
mov
shr
nop
data16
aas
nop
and
push
jns
push
daa
pop
jg
xor
and
mov
fs
mov
scas
mov
imul
push
add
test
push
cmp
mov
mov
push
(bad)
test
sub
and
mov
into
(bad)
fidiv
inc
push
shl
in
loopne
cmp
jecxz
test
enter
sbb
push
(bad)
dec
push
int3
cli
into
in
jmp
fimul
fsubr
shl
sub
movs
daa
clc
xchg
in
mov
mov
adc
dec
clc
ja
pop
int
add
sub
test
xlat
fwait
mov
xor
daa
xchg
call
push
pop
test
add
sbb
sub
adc
mov
mov
leave
mov
mov
jne
fisub
fistp
xchg
sar
sub
(bad)
daa
fst
shr
ret
scas
daa
sbb
xchg
sbb
xor
mov
rcl
push
test
lods
pop
cmc
jge
adc
out
adc
xor
fsub
mov
ins
bnd
mov
mov
mov
pop
test
pop
out
(bad)
add
mov
xlat
repnz
bound
xor
add
xchg
stos
int
rol
fdivp
inc
sub
ror
mov
int3
dec
jmp
sbb
repz
inc
push
xbegin
popa
adc
sub
mov
out
pop
inc
sahf
repnz
inc
sbb
cmp
mov
cdq
xchg
mov
popf
mov
cwde
add
jl
dec
xchg
ins
inc
xor
xchg
pop
fbstp
outs
cmp
mov
fs
xchg
add
arpl
aas
fisttp
jg
stos
loope
add
scas
and
fisubr
jmp
ret
bound
icebp
(bad)
mov
cmp
cli
cmp
fsubr
sbb
or
repnz
mul
js
movs
inc
(bad)
push
dec
and
mov
xor
cmp
rol
jmp
and
xchg
loopne
lea
repz
cli
dec
psubusb
push
movs
aad
mov
imul
xor
mov
(bad)
mov
leave
aam
mov
or
retfw
xor
jne
cli
pop
pop
xchg
mov
in
inc
cld
sub
test
sub
rcl
xchg
(bad)
jbe
or
test
ds
cwde
pop
ja
mov
push
cmovg
imul
out
lods
retf
pop
ja
enter
sbb
bound
shl
cmp
jl
test
pop
or
xor
cmc
xchg
in
push
xor
and
in
sbb
jbe
scas
popa
ss
adc
adc
pop
inc
or
add
fisttp
and
(bad)
xor
cmp
imul
and
ja
popf
mov
dec
icebp
pop
adc
rcr
fld
push
dec
push
xor
imul
loope
jmp
sbb
sti
mov
hlt
sub
xlat
imul
push
in
inc
arpl
xchg
test
xlat
aas
xchg
in
mov
iret
dec
fidivr
or
imul
xchg
dec
jmp
daa
shl
sub
jl
mov
call
mov
cli
ss
push
mov
mov
mov
frstor
pop
sti
cmp
jmp
mov
mov
in
mov
cmp
dec
ss
popa
push
nop
jmp
and
add
lahf
fisub
add
push
add
sbb
sub
cmp
mov
mov
cmps
and
adc
cmc
retf
mov
or
pop
lds
(bad)
xchg
hlt
xchg
(bad)
or
sbb
dec
mov
sti
arpl
(bad)
mov
cmp
pop
cwde
cwde
in
call
or
lods
mov
cmp
push
xchg
xchg
adc
leave
cmp
jns
sub
cmps
cmp
pop
fisub
push
es
or
xchg
lods
scas
cmp
jg
(bad)
icebp
(bad)
lds
push
xchg
pusha
xor
hlt
mov
stos
push
out
mov
mov
jmp
out
movs
movs
jl
cmp
xor
and
(bad)
mov
sbb
xchg
pop
ret
dec
jae
addr16
inc
mov
repz
push
inc
xlat
and
xor
xchg
(bad)
pop
mov
sbb
enter
movs
aaa
add
pop
or
dec
repz
fistp
or
mov
stos
dec
and
call
add
sub
inc
fbld
mov
outs
aam
bound
icebp
jle
les
dec
out
add
mov
and
jae
adc
popf
mov
mov
fiadd
inc
sub
arpl
aam
ss
inc
mov
inc
and
(bad)
cmp
mov
cmp
arpl
mov
inc
push
shl
xor
push
mov
shr
(bad)
imul
add
or
and
out
adc
xor
pop
xchg
(bad)
in
xchg
in
xchg
and
(bad)
pop
es
mov
pop
sub
dec
pop
fcmovne
(bad)
sbb
xchg
add
pop
mov
xchg
push
shr
out
(bad)
jns
sub
imul
clc
xor
stos
mov
jb
shr
add
icebp
or
push
dec
outs
shr
xchg
in
cmps
iret
retf
test
mov
lds
push
imul
int3
mov
xchg
clc
retf
fcmovnu
sti
inc
or
pop
lahf
add
cmp
jns
jl
push
in
ins
push
cwde
jecxz
sbb
fisub
and
aaa
mov
mov
sbb
je
(bad)
mov
icebp
mov
jl
ror
(bad)
push
push
jnp
arpl
jb
shr
sbb
mul
add
in
leave
(bad)
test
dec
xchg
dec
lock
fiadd
sahf
xor
fdivr
retf
sub
test
std
add
in
das
add
(bad)
sti
add
jmp
pop
dec
jb
dec
fs
adc
dec
adc
call
test
pop
cmp
and
inc
dec
aam
in
mov
push
js
or
push
repnz
inc
sbb
test
int3
cld
enter
and
jmp
in
fidivr
clc
add
add
lods
pushf
inc
jns
and
xchg
mov
or
div
sar
lahf
ret
stc
mov
cmp
jno
mov
mov
xor
enter
fisttp
retf
push
xchg
jmp
scas
cld
add
cld
das
push
cmp
ja
pop
mov
test
cwde
jle
aad
dec
fdivr
jb
iret
mov
push
outs
cwde
xchg
je
sub
or
sub
hlt
(bad)
dec
retf
ds
dec
push
inc
xchg
jo
call
push
fst
es
pop
cmps
mov
mov
jecxz
cmps
xchg
leave
jne
test
jp
jno
mov
add
out
xor
sar
fisttp
xor
call
dec
ss
in
jno
dec
addr16
jae
jle
add
cmp
push
fwait
mov
push
sub
sub
mov
in
clc
pop
or
call
push
xchg
iret
mov
dec
call
adc
je
cwde
sub
cld
pop
pop
scas
xor
adc
out
nop
(bad)
fst
jl
jecxz
mov
add
push
add
jbe
pop
jnp
push
pop
or
out
xchg
cmp
mov
cdq
mov
sbb
push
xor
jg
pop
push
lahf
fsub
mov
aaa
mov
inc
and
or
adc
fstp
add
bsf
jb
sub
jbe
xor
out
bound
inc
ins
cmp
aas
outs
cmp
aas
inc
je
xchg
(bad)
(bad)
adc
push
mov
mov
xor
sub
rcr
sub
daa
popf
sub
fistp
rcl
mov
outs
add
sbb
cmp
dec
(bad)
leave
aad
sbb
pop
(bad)
jmp
ret
shl
sbb
pop
sbb
pop
loopne
retf
dec
js
mov
sbb
imul
xchg
mov
xchg
pop
test
ret
xchg
not
lods
shl
mov
hlt
inc
pop
pop
jge
xor
mov
dec
pop
ror
lea
fcomp
jnp
inc
dec
dec
sbb
sub
cmps
jg
leave
add
sbb
dec
xor
movs
scas
cmp
jge
push
xchg
pop
cmp
les
push
(bad)
ss
dec
xchg
dec
cdq
ret
pop
and
xchg
pop
mov
sbb
xor
adc
sub
xchg
or
arpl
mov
ror
mov
pop
push
popfw
adc
mov
cmp
sub
mov
mov
mov
call
jns
jns
jno
int
jae
push
retf
lods
adc
lods
cld
cwde
xor
and
outs
imul
ffree
mov
pop
mov
sbb
dec
fs
xchg
jbe
int
push
leave
stos
and
out
movs
ja
push
ds
leave
sub
shl
(bad)
fwait
mov
jle
gs
dec
jmp
or
icebp
add
push
outs
repz
cs
iret
xor
rcl
es
jnp
fidivr
sub
and
sub
xchg
sbb
fisub
iret
mov
cld
sub
pop
loop
leave
add
jo
(bad)
inc
fiadd
and
lea
mov
ins
or
ja
jae
loope
jmp
cmp
mov
mov
sbb
je
retf
sbb
out
mov
into
ret
stc
out
inc
cs
sahf
jne
mov
adc
into
stos
es
sub
mov
loopne
mov
stos
pop
dec
fiadd
shl
pop
pop
add
inc
adc
cmp
mov
mov
push
outs
adc
push
pop
in
mov
loop
(bad)
mov
and
dec
xchg
push
outs
outs
cwde
ror
pop
push
loope
mov
ja
mov
loope
jnp
jg
stos
stc
mov
(bad)
arpl
dec
jmp
xchg
mov
fs
sub
mov
shl
out
enter
rcl
adc
jbe
aam
cmp
xchg
sub
fbld
and
mov
xchg
push
lds
cmp
dec
sar
retf
shl
mov
inc
fdiv
ret
inc
push
nop
and
loope
arpl
(bad)
pop
in
jge
xor
test
cmp
repz
shl
jnp
cmp
out
lods
mov
test
sahf
scas
push
int
hlt
cmp
xor
or
pop
shr
sub
nop
push
in
jmp
mov
push
add
mov
pop
out
mov
jmp
sbb
in
test
lahf
push
je
xchg
es
das
gs
sub
arpl
dec
xor
push
std
mov
pop
pop
fst
add
sub
imul
xlat
inc
sbb
icebp
addr16
cdq
leave
fwait
scas
adc
(bad)
nop
cdq
hlt
jb
fcom
loope
push
into
mov
mov
xchg
mov
mov
(bad)
iret
and
push
inc
xor
dec
dec
jb
jbe
add
scas
fwait
inc
out
mov
jne
sub
aam
xchg
add
loop
repz
ins
sar
xor
aas
call
idiv
fstp
add
pop
inc
mov
bound
test
add
imul
or
je
jnp
fbstp
or
mov
ins
push
mov
mov
xchg
daa
cld
in
js
pop
aaa
inc
adc
enter
mov
xor
or
sub
div
xor
mov
adc
retf
jge
mov
and
loopne
mov
shl
je
aam
(bad)
sti
sbb
cmp
loope
(bad)
pslld
daa
fimul
push
add
mov
xchg
jbe
xor
fs
dec
cmp
stos
xchg
cmp
inc
adc
cld
xchg
inc
push
repnz
xor
cmp
mov
ins
xchg
push
xchg
push
xchg
shl
mov
outs
pop
in
int
or
pop
shr
jp
aam
into
(bad)
pusha
or
jecxz
add
fs
arpl
aaa
in
cmp
ret
dec
fisubr
test
out
scas
in
sbb
ret
mov
dec
mov
loope
pop
imul
in
jmp
xor
pop
into
popa
dec
dec
ror
ss
jo
or
mov
jne
sub
xchg
push
sub
xchg
mov
stos
or
ror
scas
jno
sbb
dec
or
int
fistp
sbb
mov
ja
jnp
je
mov
fild
add
mov
push
pop
sub
sub
jmp
add
ffree
cmps
add
loop
inc
or
sahf
movaps
aaa
xchg
inc
pop
mov
imul
mov
fsub
jno
xchg
push
cmp
data16
lea
or
loopne
ret
call
xchg
pop
enter
dec
xor
push
mov
pop
cmps
xor
and
sbb
lods
repz
mov
sar
cli
push
push
jbe
ja
retf
dec
retf
jp
xor
scas
nop
add
je
nop
in
adc
lods
stc
pushf
test
add
push
sbb
dec
jns
(bad)
out
jbe
outs
in
fsub
dec
mov
(bad)
leave
aas
dec
lahf
gs
xor
adc
push
push
dec
pop
cs
not
in
lock
mov
loop
jns
mov
pop
xor
fdiv
mov
jl
jbe
sti
xchg
ret
pop
jns
out
ret
mov
xor
in
add
lahf
popf
imul
shr
mov
jb
xchg
stos
inc
cmps
dec
cmp
ret
add
mov
retf
jp
sub
int
imul
rcr
mov
mov
dec
cmp
adc
in
sub
in
imul
jno
call
aaa
nop
(bad)
jl
dec
mov
(bad)
jge
or
jecxz
ret
jmp
addr16
not
loope
pop
loop
xor
xor
mov
out
xchg
jl
sbb
out
fdivr
push
dec
mov
test
lods
sti
or
jmp
stc
int
mov
dec
clc
pop
xchg
jae
loopne
into
gs
add
and
cmp
cmc
call
dec
add
sti
jmp
jmp
ins
xor
lea
push
fwait
push
xchg
and
imul
movs
sbb
mov
ins
cmc
pop
ja
syscall
mov
retf
out
sbb
rol
push
retf
xchg
nop
push
pushf
loope
adc
jl
icebp
xor
je
cmp
(bad)
fcmovne
out
jmp
or
lock
cmc
inc
jae
dec
fmul
movs
push
stos
inc
cmp
add
int3
jle
inc
jb
outs
xchg
add
add
rcr
iret
jecxz
jmp
cmp
leave
in
movs
in
in
imul
bound
rcl
out
hlt
fs
jle
jbe
cmp
fwait
cmps
pusha
enter
in
inc
add
add
jl
les
ret
mov
and
ins
movs
fild
hlt
rcr
repz
sub
xor
or
mov
mov
mov
jge
(bad)
inc
pop
fimul
pop
rcr
sub
inc
adc
ss
loop
iret
ds
sti
(bad)
ss
push
mov
push
aam
clc
cmp
loopne
sti
retf
je
mov
out
jmp
push
cmp
inc
inc
imul
and
pop
xor
gs
cwde
push
outs
add
hlt
int3
dec
imul
cmps
(bad)
aad
call
jne
stos
int
fstp
arpl
fwait
xchg
iret
dec
dec
outs
jns
pavgw
and
jmp
out
dec
repz
outs
cmp
dec
loope
sbb
pop
cli
es
out
fcmovne
push
cmp
mov
rcl
mov
jle
(bad)
push
imul
stos
add
lea
ins
sub
fadd
pop
loopne
div
rcr
call
pop
int
cmp
jmp
test
push
add
push
jnp
fdivr
imul
loopne
adc
les
mov
aaa
nop
xor
sar
mov
jno
pushf
dec
mov
out
sub
mov
test
pop
or
sub
add
ins
jmp
movs
out
inc
lods
mov
cmps
jo
pop
jle
inc
jbe
adc
xchg
mov
pop
aaa
and
mov
scas
mov
out
mov
out
adc
pop
jg
mov
cmp
adc
adc
imul
push
push
rol
pop
cmps
dec
add
outs
cld
xchg
pop
push
inc
inc
adc
mov
popa
retf
(bad)
and
dec
adc
jo
or
or
dec
movs
and
out
ds
adc
call
sub
mov
gs
adc
outs
(bad)
rcr
repz
mov
and
scas
sbb
cmps
ja
mov
in
test
jecxz
xchg
pop
lea
arpl
xor
xchg
mov
sti
or
mov
xor
mov
jno
mov
mul
push
jb
dec
mov
sbb
adc
pop
fwait
jmp
jmp
pop
repz
adc
test
dec
jno
call
test
scas
int3
imul
and
pop
sahf
outs
loopne
cdq
loopne
das
sbb
push
xor
xchg
leave
cli
or
mov
lock
mov
cmps
imul
cmps
frstor
int3
ret
inc
or
sbb
jbe
ja
in
xchg
sub
or
fs
cmc
push
mov
lahf
les
out
push
xchg
cli
(bad)
ficomp
movhps
add
cmp
sar
or
xor
jmp
mov
sub
mov
aam
int
nop
mov
jecxz
and
es
push
out
mov
lods
inc
adc
fistp
mov
popf
lea
cmp
repnz
sahf
push
cs
dec
dec
jmp
sbb
sbb
dec
pushf
fdivr
pop
out
fcom
mov
outs
cmps
and
sbb
push
cli
mov
and
dec
fs
cmc
bound
mov
cmc
(bad)
inc
xchg
aad
fst
fisttp
sbb
test
push
sti
std
(bad)
mov
inc
leave
leave
xlat
pop
clc
das
movs
div
cmps
call
aam
in
(bad)
pop
daa
data16
xor
in
or
mov
push
out
push
mov
cmps
inc
loope
int
sahf
or
pop
(bad)
mov
movs
nop
(bad)
xlat
scas
xor
push
and
xchg
call
retf
lahf
retf
lods
xchg
(bad)
cmp
sbb
arpl
cwde
repz
dec
popa
call
and
jle
xor
xchg
sbb
fld
ret
mov
loop
adc
idiv
adc
pop
retf
push
out
call
mov
test
jbe
fiadd
and
sbb
mov
jmp
sub
sbb
sub
sub
(bad)
fdivr
jb
dec
add
inc
aas
arpl
or
cmp
popa
stos
adc
fadd
or
mov
add
adc
pop
dec
inc
iret
mov
xchg
sub
mov
push
ret
cwde
mov
out
push
cmp
cmc
jne
ins
aaa
dec
dec
xchg
into
cmc
mov
mov
call
jbe
shr
jns
mov
es
sbb
in
cdq
xchg
icebp
mov
in
bound
mov
pushf
mov
mov
push
push
xchg
retf
dec
ins
jno
push
stos
xchg
xlat
add
(bad)
dec
jne
mov
in
mov
into
test
and
jae
push
je
movs
jecxz
stos
mov
in
scas
and
dec
in
pusha
mov
ss
mov
mov
xchg
add
cmps
or
jp
inc
test
pop
push
or
xor
xor
pop
ins
inc
xchg
jo
lods
jne
cmp
div
mov
loope
cdq
iret
jle
fcomp
stos
push
cmp
add
pop
xor
pop
inc
shl
icebp
sbb
and
das
and
push
jne
loop
cmps
int
rcr
sub
mov
pop
outs
pop
adc
or
call
adc
jmp
mov
jnp
es
mov
ss
ret
or
or
mov
ret
mov
fcmovbe
add
pop
jle
cmc
pop
aas
push
pop
and
adc
out
pop
sub
mov
xor
mov
xchg
sub
fwait
pop
aas
into
cmp
rcl
ins
bound
add
mov
stc
inc
jne
(bad)
mov
cmp
or
jae
xchg
fst
fst
arpl
shl
outs
fs
dec
leave
dec
jno
lods
jecxz
int
repnz
call
cmp
in
sub
inc
jge
test
div
jg
lods
mov
adc
movs
lods
mov
mov
jbe
je
xchg
mov
loopne
jg
and
mov
jp
lahf
mov
xchg
pop
and
mov
inc
mov
rcl
mov
rol
pop
int3
pop
mov
xor
or
out
iret
xchg
jle
rcr
pop
add
push
xchg
test
inc
or
add
sar
adc
mov
push
stos
pop
push
or
jae
cmc
xor
mov
mov
dec
xchg
idiv
stos
jmp
aas
or
and
xchg
push
or
inc
cmp
xor
xchg
(bad)
dec
icebp
enter
ins
cmps
sbb
lods
xor
push
xchg
mov
push
push
stos
daa
dec
lahf
and
push
mov
fwait
iret
mov
jo
mov
or
je
outs
sti
dec
mov
(bad)
int3
sbb
jnp
ss
add
fisub
test
scas
scas
inc
ds
xchg
push
cmp
retf
add
jg
pop
and
fldenv
aad
mov
push
repz
push
or
scas
fs
div
imul
cli
sti
dec
mov
fdivr
popa
and
hlt
dec
adc
mov
popf
retf
aaa
sbb
(bad)
dec
addr16
call
cmp
pop
pop
icebp
int
pop
iret
mov
inc
mov
clc
lods
push
into
fisub
(bad)
jle
dec
rcl
dec
or
mov
jecxz
jns
std
aaa
in
cli
stos
or
xlat
pop
jno
loop
add
lds
sbb
push
bound
dec
xchg
inc
clc
pop
rcr
sbb
mov
pushf
aas
icebp
dec
(bad)
pusha
js
sar
mov
ins
mov
mov
jp
or
fidiv
clc
xor
in
je
jp
mov
in
jmp
(bad)
pop
sbb
add
ins
movs
sbb
jecxz
ret
ret
xor
jo
out
arpl
lock
(bad)
popf
add
xor
xchg
mov
xchg
or
mov
enter
or
inc
(bad)
popa
test
inc
or
mov
and
pop
fs
mov
jbe
movs
loope
ds
inc
sub
ins
xor
cmp
mov
das
mov
sti
jmp
mov
or
repnz
das
mov
sbb
or
dec
cdq
repz
mov
pop
sub
push
stos
cmp
cmp
aaa
fs
mov
cmps
cmp
mov
push
imul
push
and
imul
daa
mov
or
pop
and
arpl
in
xor
mov
sub
leave
sbb
fdiv
fnstsw
mov
adc
adc
rol
or
dec
int
std
sbb
lods
cwde
inc
std
or
push
add
aaa
mov
mov
cmp
add
push
cwde
xchg
movsx
push
ja
cmps
es
adc
lods
aam
push
int3
jo
outs
int3
or
cli
pop
das
pop
push
mov
mov
add
retf
cwde
mov
dec
add
push
jmp
shr
mov
jne
aaa
sbb
jge
aas
push
push
lods
popa
sub
outs
hlt
int
mov
mov
xchg
cmp
fistp
sbb
adc
retf
mov
(bad)
and
push
push
inc
inc
fld
(bad)
cs
in
std
(bad)
fnstcw
xchg
inc
push
jns
mov
and
cs
in
cli
std
cs
mov
rol
inc
adc
js
dec
(bad)
enter
and
nop
xor
dec
mov
and
ret
mov
popa
xor
xchg
sbb
out
pop
add
cmp
bound
jmp
add
or
cli
add
cmp
addr16
pop
xchg
iret
dec
ror
fs
mov
out
and
out
mov
hlt
and
clc
fistp
in
xchg
mov
shl
js
mov
or
pop
ins
shl
or
and
pushf
pop
pop
in
or
xchg
imul
and
sar
push
adc
sar
mov
je
loope
push
inc
rol
je
popf
data16
push
cmps
adc
int3
xchg
mov
mov
fimul
xchg
sbb
xor
ud1
add
cli
inc
add
jg
pop
lahf
add
push
or
dec
fwait
xchg
mov
pusha
js
ror
xchg
ror
aas
mov
dec
shl
xor
xor
inc
add
cwde
cdq
aaa
loop
inc
pop
push
inc
cwde
dec
call
sub
mov
dec
mov
and
fsubr
jnp
dec
cwde
arpl
out
stc
mov
jnp
cmps
pop
sbb
fistp
ss
jle
sub
adc
mov
xor
loop
jmp
pop
mov
mov
and
aas
inc
pop
cdq
rcl
or
lahf
daa
imul
push
scas
stc
imul
sbb
sub
cdq
sahf
mov
pop
mov
icebp
inc
fwait
pop
ja
sahf
je
mov
(bad)
(bad)
ss
xor
scas
cmp
push
mov
fisubr
addr16
sub
lds
or
sbb
imul
or
out
popfw
cwde
shr
fcmovnu
daa
push
test
adc
sub
jno
out
iret
pop
adc
fadd
dec
sub
jmp
cmps
mov
lahf
push
nop
mov
xor
jp
adc
dec
ss
dec
repnz
dec
jp
inc
add
jp
clc
adc
sbb
cmp
fstp
mov
arpl
arpl
mov
dec
sbb
out
retf
pop
shr
adc
ss
jae
into
push
std
arpl
leave
or
js
rol
inc
pop
das
sti
retf
shl
add
jg
fdiv
ss
push
jmp
dec
fwait
std
test
jg
hlt
fsubr
retf
stos
cdq
inc
xchg
sbb
aam
dec
jae
fwait
das
mov
outs
mov
loopne
cmp
sub
pusha
dec
jbe
sbb
xchg
push
or
xchg
xor
pop
mov
imul
ins
cmp
pop
mov
mov
sub
or
sub
idiv
lahf
sbb
mov
nop
inc
imul
popa
ss
xlat
adc
clc
fiadd
pop
cmp
jnp
xor
lods
sub
call
sbb
mov
jmp
and
stos
xchg
out
xchg
aam
push
add
jge
stos
call
jecxz
movs
ret
sub
popf
js
out
(bad)
ds
inc
mov
push
repz
sub
jne
pop
adc
add
imul
pop
xchg
cmp
js
cmp
out
cmp
out
dec
jno
loop
push
jno
push
test
xor
dec
jno
stos
(bad)
cmc
or
aam
(bad)
push
in
scas
(bad)
sbb
adc
cmp
popa
(bad)
pop
xor
(bad)
mov
jecxz
dec
jne
bnd
fdiv
mov
xor
pusha
pop
sar
or
mov
xchg
add
or
(bad)
(bad)
mov
lds
mov
pop
hlt
or
add
std
sbb
fisttp
cmp
out
fs
xor
(bad)
test
and
adc
lahf
call
pop
addr16
mov
int
idiv
jl
jmp
sahf
xchg
ins
push
in
(bad)
adc
xchg
das
xchg
sbb
mov
or
ds
lock
sub
pop
xchg
and
bswap
les
sub
xor
adc
inc
jno
xor
mov
ret
dec
sbb
ins
aam
mov
retf
aad
out
(bad)
push
xor
fsubr
push
xor
jp
mov
outs
call
out
cmp
push
fstp
or
dec
xchg
js
loopne
add
sti
mov
mov
and
mov
mov
rol
inc
or
data16
dec
idiv
popf
pop
cmp
aad
(bad)
pushf
xchg
pop
xchg
push
imul
fs
jl
in
aas
cmp
adc
inc
bound
mov
dec
cmps
lods
xlat
jo
jns
sti
cmps
mov
fdiv
pop
cmp
dec
dec
or
push
push
mov
mov
clc
imul
pop
sbb
stos
pop
les
cmp
add
ins
mov
push
mov
fs
and
nop
mov
xor
scas
pop
push
ins
jl
test
ret
fwait
push
dec
test
sub
adc
adc
adc
stc
push
ins
push
sub
push
mov
push
add
or
bnd
stos
sti
mov
push
out
adc
xor
(bad)
js
inc
pop
jge
mov
retf
dec
je
es
adc
push
push
das
std
xchg
cmp
mov
fadd
xchg
clc
in
out
addr16
fsubp
adc
nop
hlt
or
imul
lods
mov
imul
dec
jmp
rcl
lock
push
cmp
xor
(bad)
adc
push
and
dec
call
outs
ror
call
fidiv
pusha
ins
dec
mov
imul
stos
mov
add
sbb
xchg
lods
enter
mov
mov
ins
outs
push
imul
jae
(bad)
adc
mov
sub
xchg
cli
rcl
mov
addr16
sub
cdq
mov
addr16
push
push
jmp
retf
(bad)
imul
jnp
xor
xor
mov
ja
test
dec
dec
loopne
adc
add
xor
sub
cmps
and
inc
movs
sti
(bad)
pop
sbb
nop
je
push
or
mov
arpl
inc
xlat
lods
xchg
xchg
aam
loopne
cli
jbe
mov
ins
in
xor
into
rol
mov
les
retf
fdivr
mov
cmp
into
jne
cmp
int3
iret
call
mov
test
jp
jb
mov
stos
mov
loop
jge
xchg
xchg
out
(bad)
popf
xchg
sti
jb
fwait
xchg
add
loop
int
cld
push
or
adc
add
dec
gs
and
dec
mov
sub
sbb
mov
(bad)
dec
lea
ja
cs
in
or
xor
lahf
mov
mov
cmc
dec
mov
dec
xchg
mov
jp
sbb
cmc
mov
outs
call
dec
cld
loop
gs
mov
xor
push
dec
mov
lods
(bad)
push
(bad)
mov
xor
out
shl
(bad)
rcl
fadd
ss
mov
ss
les
jmp
cwde
test
pusha
pop
push
push
or
leave
xor
test
lock
jmp
sub
add
in
sbb
or
mov
and
cld
mov
(bad)
pop
sub
pop
dec
sbb
ret
ret
jbe
sar
ror
fmul
pop
aas
jno
jo
jmp
pusha
push
sub
aam
sar
dec
dec
out
or
push
jecxz
push
pop
pop
jp
xchg
leave
test
loop
and
push
pop
mov
jg
in
mov
mov
sub
or
cdq
and
test
lea
and
mov
scas
sar
test
in
aam
mov
xor
sub
mov
out
dec
test
dec
or
xchg
or
mov
shl
icebp
in
sub
sti
out
push
in
int
mov
ss
mov
rcl
mov
xor
and
(bad)
nop
mov
fstp
push
int
pop
push
mov
icebp
ss
mov
sets
stc
add
jle
fmul
jp
cwde
and
jo
inc
arpl
xor
and
sbb
mov
inc
lahf
int3
enter
mov
inc
cli
ret
fucomp
stos
xor
ret
out
mov
addr16
inc
out
sbb
mov
dec
dec
data16
mov
loope
push
ror
outs
mov
push
push
adc
inc
(bad)
(bad)
jge
mov
shr
inc
sbb
xor
push
xor
data16
call
mov
and
(bad)
cmp
adc
jp
adc
jle
jmp
jmp
(bad)
mov
(bad)
adc
shr
sbb
out
jmp
movs
inc
(bad)
inc
(bad)
cmp
cmp
cmps
adc
and
or
dec
sbb
push
ret
mov
lahf
jo
pop
enter
aas
pop
push
cli
xchg
daa
fld
loopne
adc
sub
sbb
mov
xor
dec
sbb
out
imul
fstp
dec
js
cli
mov
dec
mov
je
(bad)
push
call
enter
jecxz
ds
adc
lea
jl
pop
cmp
push
dec
sub
lock
rcr
mov
mov
sbb
push
vmovupd
retf
push
pop
jle
(bad)
xor
pop
inc
int3
jg
sbb
adc
add
ror
adc
pop
xor
push
int3
call
leave
sbb
retf
aam
fcomip
sbb
inc
ret
and
inc
retw
push
sbb
mov
(bad)
mov
mov
sub
add
and
pop
cmc
ins
lock
sbb
imul
mov
adc
xchg
mov
test
dec
jo
into
fcom
pop
das
xchg
addr16
bound
xchg
jl
aam
cmp
movs
jp
xor
mov
call
and
pop
nop
sar
test
jbe
aas
inc
add
push
rol
movs
out
add
adc
pop
mov
movs
pop
sbb
and
mov
mov
fist
gs
popf
or
in
pusha
lods
idiv
ficomp
enter
add
in
ror
cmps
add
inc
xchg
jge
sub
rol
pop
mov
jge
mov
xor
jno
sahf
pop
int
retf
dec
mov
pushf
push
or
test
stc
jle
lods
sub
aaa
cwde
iret
jl
xor
lahf
dec
(bad)
mov
jp
sbb
fs
push
dec
mul
adc
mov
je
push
out
xchg
mov
imul
lea
(bad)
movs
mov
xor
adc
out
(bad)
mov
jl
mov
shr
adc
jle
cdq
fs
mov
add
cmc
shl
sbb
retf
jbe
jmp
in
cmps
lods
pusha
sbb
(bad)
sbb
xor
jbe
mov
dec
push
cmp
jbe
imul
sub
inc
adc
add
addr16
pop
add
add
scas
sub
out
push
(bad)
adc
(bad)
pop
aad
rol
adc
sbb
mov
retf
jl
xor
adc
mov
and
adc
add
add
mov
mov
jecxz
jmp
pop
outs
push
rcr
pusha
(bad)
sbb
and
jle
or
aas
loope
cmp
clc
fstp
out
aad
xor
jecxz
jnp
lods
mov
div
movs
push
out
pop
not
lods
ret
test
or
repnz
(bad)
jb
out
fisub
xor
jae
sub
cmp
pop
retf
aad
repnz
xchg
jo
mov
sub
mov
in
mov
pop
loop
mov
(bad)
add
sub
icebp
dec
shr
add
mov
mov
mov
(bad)
cmp
xchg
hlt
fwait
jge
outs
das
adc
imul
int3
or
inc
lods
xor
and
fistp
cdq
or
mov
sub
call
jecxz
js
mov
pop
cld
mov
sbb
sub
je
mov
(bad)
scas
xor
(bad)
(bad)
gs
je
lods
fstp
and
cli
sub
sbb
cmove
cdq
test
out
xchg
arpl
fidiv
sub
int
and
jp
pop
test
(bad)
(bad)
mov
fidivr
sub
stc
movs
cmp
pop
jno
stc
retf
clc
arpl
sbb
sub
fidiv
add
mov
push
pop
mov
clc
xchg
(bad)
js
mov
retf
mov
mov
mov
shl
adc
mov
cmps
sub
xchg
sub
push
mov
arpl
or
jge
jns
xor
push
push
jmp
pusha
shr
imul
cmc
inc
lods
sub
das
or
ja
jge
xor
cwde
push
dec
inc
in
mov
loope
xchg
(bad)
neg
mov
dec
pop
and
xor
cli
popf
imul
icebp
jecxz
push
jno
scas
mov
daa
imul
movs
xor
pop
stc
xchg
inc
addr16
je
sub
ja
(bad)
in
outs
xor
sub
cmp
xor
push
pop
outs
stc
ja
xor
mov
jo
mov
mov
mov
gs
cmps
inc
ss
xchg
into
cmp
mov
shl
lds
stos
and
scas
das
sub
sub
inc
inc
xor
push
or
mov
push
dec
add
jecxz
sbb
push
and
or
lea
mov
cwde
mov
adc
mov
or
inc
push
xor
es
rol
xor
jbe
stc
fcmovnbe
cs
pop
push
sbb
mov
inc
or
adc
(bad)
into
mov
movs
mov
pop
xchg
jmp
dec
pop
inc
outs
das
sub
adc
in
jl
clc
sub
cmp
inc
dec
ffree
push
das
jmp
cmps
outs
data16
repz
push
mov
mov
and
in
pop
xchg
xlat
cdq
pop
rcl
rcr
add
in
addr16
sub
ficom
sub
xchg
jns
jmp
je
pushf
xlat
pop
jmp
aad
call
inc
fsub
inc
cmp
ja
mov
sub
popf
bound
and
dec
add
out
ret
push
jnp
sti
mov
mov
push
xor
stos
jns
xchg
xchg
adc
lods
adc
cwde
inc
(bad)
(bad)
outs
loope
push
dec
push
bound
xchg
arpl
mov
mov
rcl
jb
xchg
call
mov
pop
std
inc
sub
gs
les
push
retf
scas
ins
cmps
in
adc
sub
pusha
xchg
cmp
sub
ret
cs
dec
ss
or
pop
mov
nop
mov
leave
aaa
test
or
hlt
inc
call
ja
sbb
fdivr
mov
xor
std
and
cli
fist
pop
data16
sar
pop
stos
push
das
lea
test
mov
test
xor
xchg
cmc
and
mov
xchg
jne
mov
mov
mov
std
leave
pop
jge
sbb
mov
jmp
ficomp
in
mov
in
lods
push
pushf
leave
add
dec
pop
lods
dec
jmp
ja
clc
mov
cmp
loopne
sub
cmp
icebp
fstp
rol
xchg
inc
out
mov
(bad)
idiv
pusha
push
dec
stos
aam
mov
pop
or
fsub
xchg
pop
dec
out
xor
icebp
jne
jecxz
sbb
xchg
xor
sti
leave
mov
std
jae
adc
stos
add
out
js
cwde
pop
shl
xor
push
sub
push
dec
and
push
aaa
push
out
inc
xchg
in
xor
sahf
sbb
call
push
repnz
xor
and
cmps
pusha
pop
shl
div
into
(bad)
lea
out
sub
cmp
(bad)
lock
neg
out
cmp
stos
cmp
aaa
sub
adc
ret
call
(bad)
push
lock
enter
xor
cdq
add
mov
in
pop
xor
mov
and
daa
cmps
or
shr
sbb
xchg
inc
test
movhps
ins
add
mov
movs
sub
rcl
(bad)
ds
or
repz
cld
push
pushf
(bad)
sbb
aaa
shl
pop
in
ficom
push
or
daa
fnstcw
adc
mov
lods
cwde
mov
cmp
popa
das
add
cmp
add
jbe
add
sub
dec
mov
mov
(bad)
mov
adc
(bad)
call
inc
inc
movs
out
adc
ins
push
sbb
repnz
aam
sub
lods
jg
push
adc
aam
loope
inc
(bad)
jle
(bad)
sub
ss
inc
add
outs
push
pop
or
movs
cdq
ficom
out
stos
ins
xchg
mov
shl
jae
popf
dec
push
mov
mov
pop
dec
xor
cli
fistp
jl
jae
mov
adc
or
lahf
jne
div
push
js
sbb
push
sbb
dec
test
retf
call
sbb
sar
mov
sub
adc
sbb
test
int3
test
stos
into
dec
inc
mov
loope
mov
inc
add
and
out
arpl
jne
pusha
dec
fwait
movs
push
fwait
popf
push
movs
stos
pop
inc
cmp
daa
xor
jnp
inc
dec
out
call
and
pop
les
pop
xor
repz
mul
mov
cld
cmp
ffree
popa
in
pop
cli
iret
(bad)
ds
mov
inc
jo
enter
xchg
ret
cmps
in
and
out
jmp
or
inc
in
pusha
adc
pop
jmp
mov
jle
frstor
push
cld
into
add
sbb
dec
loope
push
mov
test
cmc
cli
add
dec
pop
adc
loopne
retf
push
int3
scas
outs
cwd
sar
mov
mov
knotw
xor
sbb
inc
xor
sbb
aaa
mov
lods
std
mov
addr16
adc
jl
and
js
ds
lods
adc
aad
xchg
out
movs
fs
cmp
pop
fnstsw
mov
or
xchg
sub
stos
mov
cmps
or
rcl
sbb
mov
out
mov
(bad)
mov
retf
mov
sbb
(bad)
jae
dec
stc
and
shl
(bad)
ja
cmp
xchg
in
(bad)
pop
xor
ja
or
mov
push
test
(bad)
out
fild
ds
cmp
stc
enter
stos
in
or
push
arpl
das
sbb
outs
xor
cmp
leave
jmp
pusha
pop
pop
popf
sbb
sar
mov
scas
test
cmps
popa
add
xchg
cmps
addr16
sub
sub
addr16
and
lods
adc
inc
add
push
jg
mov
int
cmps
mov
sbb
pusha
(bad)
cdq
rol
jmp
jnp
and
pop
mov
dec
cmc
mov
test
push
fidivr
dec
lahf
loop
xor
inc
cli
mov
test
lds
imul
ins
sub
pusha
cmp
push
fist
mov
and
push
enter
jle
mov
rol
sub
cmps
retf
sar
mov
dec
inc
shl
or
fdivr
jle
popf
inc
sbb
adc
addr16
nop
sbb
adc
lods
(bad)
cmp
lds
retf
mov
sub
retf
test
int3
dec
pop
fst
sahf
cld
cdq
stos
pop
cmp
lds
cmp
jg
test
dec
je
mov
movs
cmps
rcl
jne
je
out
inc
ins
lods
mov
dec
popa
out
fbld
popa
mov
mov
pop
sbb
(bad)
sahf
cmp
popa
fist
(bad)
mov
xchg
adc
cmc
ror
xchg
pop
jmp
xchg
mov
push
ret
sub
inc
mov
sahf
ror
lds
bnd
aam
cs
inc
or
cmc
sbb
adc
inc
mov
or
mov
jns
mov
push
imul
(bad)
pop
pushf
cmp
add
lahf
mov
mov
xchg
nop
mov
fist
mov
sbb
add
pop
jmp
sbb
pop
scas
lea
sbb
add
xchg
cmp
stos
fs
(bad)
jl
stc
mov
stos
iret
cwde
adc
or
shl
mov
pop
push
inc
mov
xlat
or
pop
out
inc
xchg
iret
les
or
sub
in
push
hlt
cmp
jae
dec
push
or
arpl
dec
mov
push
xchg
and
push
aas
outs
lahf
dec
stos
out
mov
add
jmp
retf
sub
cli
lds
mov
sbb
popa
int3
out
mov
out
push
mov
or
pop
iret
cli
fisttp
test
push
(bad)
xchg
inc
xchg
inc
aaa
fidivr
jne
dec
dec
out
mov
test
cwde
shl
mov
pop
mov
dec
mov
lds
std
adc
jl
lahf
mov
outs
pop
cmp
dec
xlat
lock
jle
retf
cs
es
and
lea
arpl
clc
jle
icebp
aas
and
jmp
xchg
dec
int
pop
stos
jne
cld
sbb
push
push
retf
popa
inc
cmp
dec
ret
xchg
aaa
inc
mov
push
addr16
loop
movs
xchg
push
bound
outs
imul
push
cwde
ret
push
inc
cmp
sub
dec
add
fistp
addr16
and
push
je
mov
mov
ds
retf
clc
pop
stos
aas
mov
loopne
jg
callw
adc
dec
jmp
adc
inc
mov
cmps
scas
(bad)
adc
dec
shr
in
push
xor
call
xchg
(bad)
and
push
mov
push
mul
lods
in
jmp
rcr
sub
bound
jecxz
adc
mov
inc
repz
sbb
or
sti
call
mov
mov
cmp
pop
mov
pushf
jo
ins
ja
add
daa
push
test
xor
jp
mov
js
xchg
xchg
ret
add
xchg
mov
(bad)
inc
xor
xor
add
adc
scas
leave
loope
mov
or
je
jge
bsf
or
sbb
cdq
dec
add
pop
or
retf
mov
push
inc
inc
or
mov
test
iret
pop
fcom
add
faddp
js
enter
xchg
test
sbb
fld1
xor
(bad)
sbb
pop
adc
or
je
pop
jmp
mov
repz
inc
nop
mov
and
in
lahf
push
aad
lods
mov
(bad)
mov
fadd
push
test
add
sbb
les
rol
xor
clc
push
daa
cs
loope
or
mov
push
(bad)
ss
xor
add
mov
aas
push
push
fndisi(8087
cmps
es
not
aas
xchg
add
mov
retf
test
mov
jecxz
je
outs
popf
push
sahf
mov
and
ror
movs
shl
push
jl
and
or
cmp
(bad)
xor
gs
jns
aas
jmp
(bad)
retf
jno
clc
mov
cli
shl
jno
mov
inc
sub
cmp
mov
pop
int3
addr16
pop
mov
sub
add
test
xor
(bad)
fld
rol
mov
xchg
adc
dec
pop
mov
aam
jno
mov
fdiv
jle
es
jo
lods
sbb
hlt
test
sbb
int3
add
sti
jecxz
iret
sbb
fisubr
mov
in
xchg
sbb
xchg
int3
aam
stos
jecxz
cmp
sbb
xor
scas
lods
mov
nop
(bad)
jmp
out
jo
push
fistp
inc
out
les
sub
iret
mov
push
(bad)
push
cmc
xor
not
cmp
pop
add
push
sti
pop
mov
stos
aad
cli
fcmovnb
pop
add
sub
xchg
push
and
das
jmp
lds
fadd
bound
arpl
movs
icebp
cmp
jmp
stc
loop
add
xchg
xlat
ss
dec
or
test
iret
pop
jb
(bad)
pop
xchg
repz
push
jbe
push
mov
sbb
pop
mov
xchg
and
pop
cmp
cli
jbe
test
jnp
xlat
dec
test
(bad)
aam
and
xor
xchg
or
imul
jnp
sbb
shr
arpl
dec
out
aad
aad
and
stos
mov
push
or
mov
lahf
es
in
dec
add
xchg
fld
xchg
sbb
push
loop
xor
mov
dec
mov
scas
bound
pop
inc
or
adc
jae
popa
adc
push
shl
sub
dec
jmp
(bad)
push
push
test
jno
data16
jecxz
sub
scas
in
(bad)
repz
call
(bad)
cli
push
enter
push
mov
jnp
jno
pop
push
mov
sbb
(bad)
dec
stos
jno
out
xlat
inc
(bad)
mov
ror
dec
xchg
xchg
pushf
jg
push
or
mov
adc
mov
cwde
sbb
fcom
pop
mov
loopne
cmp
ror
cwde
mov
daa
jno
xor
nop
(bad)
sub
ins
pop
cmps
xor
loope
adc
sti
nop
data16
mov
das
retf
outs
or
cs
dec
icebp
push
(bad)
cwde
mov
xchg
ret
add
test
add
sti
call
stos
test
cli
arpl
xchg
pop
fist
scas
das
das
jl
mov
call
fwait
mov
push
xor
cwde
jmp
retf
xchg
pusha
or
mov
mov
dec
(bad)
movs
xchg
pop
adc
cdq
push
cmp
add
das
sub
pop
(bad)
cmc
mov
cdq
scas
mov
sub
mov
push
pop
pushf
sbb
into
or
adc
ds
loope
aad
aad
cmp
jl
ret
cmps
mov
cmp
ins
xlat
mov
inc
mov
outs
or
ins
xor
sbb
(bad)
or
cmp
pushf
xchg
or
scas
das
stc
bound
fcom
inc
cwde
ror
sub
test
mov
lea
scas
(bad)
dec
scas
cmps
sbb
jno
push
jg
pop
inc
mov
sub
test
sbb
daa
mov
jae
push
fisubr
out
inc
aas
test
fdivr
ja
cwde
jecxz
call
in
repnz
call
or
mov
jg
mov
mov
out
imul
cmp
rol
mov
push
mov
jnp
rcl
mov
xchg
ss
jo
mov
leave
sub
scas
mov
xor
cmp
mov
jns
jp
test
lods
cs
les
xor
or
gs
add
jmp
ja
and
cmp
das
out
out
add
es
and
add
adc
sbb
stc
cmp
xor
aas
jecxz
mov
loopne
adc
jecxz
sbb
xchg
jecxz
ds
aam
sub
or
sbb
jmp
inc
and
jmp
push
test
mov
mov
push
(bad)
retf
aad
jge
mov
pop
test
shl
into
or
dec
mov
xor
test
shl
mov
(bad)
mov
hlt
mov
inc
or
xlat
pop
aaa
add
jno
(bad)
pop
je
and
sub
mov
jae
xchg
jnp
push
pop
mov
jmp
xchg
mov
(bad)
not
outs
pop
push
xchg
fld
shl
iret
add
fcomp
xor
inc
nop
retf
(bad)
fsub
scas
test
jo
in
pushf
xor
push
lods
inc
jp
push
sti
inc
push
outs
inc
inc
movs
in
pop
in
push
fimul
pop
sbb
inc
movs
out
pop
pop
adc
mov
mov
fcmovnb
dec
mov
outs
lock
pop
test
cmp
inc
fsubr
sub
or
and
jl
ins
mov
jbe
stc
out
out
xor
out
adc
stos
sbb
pop
sti
inc
test
push
cli
and
adc
jnp
push
stos
or
(bad)
ficomp
xchg
icebp
imul
sub
imul
cdq
fs
sahf
jo
jg
add
jmp
clc
retf
cmp
mov
popf
lods
addr16
in
aas
jo
test
xor
cmp
stc
enter
(bad)
cli
and
cmp
rcl
mov
mov
or
push
retf
dec
movs
adc
inc
call
sub
jmp
repz
dec
pusha
xor
enter
aaa
loop
cwde
inc
inc
xchg
out
cmp
jmp
das
jbe
xchg
bound
pop
or
mov
cmps
stos
pop
xchg
stos
jg
cmp
pop
das
sar
repz
xor
out
loopne
mov
mov
out
paddusb
loopne
ja
out
mov
pusha
xchg
or
in
xchg
xchg
mov
push
ret
adc
inc
sahf
mov
pop
rcr
fs
xchg
loope
das
ret
and
out
test
inc
and
int
xor
jge
xchg
jle
imul
fadd
test
das
jge
push
add
outs
pop
in
jne
(bad)
stc
das
arpl
test
inc
or
das
imul
sti
cmc
mov
mov
push
stos
lahf
and
out
pop
sub
adc
bound
sahf
int
or
adc
cmc
inc
dec
ins
cmp
adc
aas
out
or
xchg
dec
leavew
(bad)
sahf
call
inc
imul
or
loop
jns
xor
test
fcompp
fimul
in
pop
push
jo
cmc
inc
sbb
(bad)
outs
test
push
rol
mov
push
ds
mov
jnp
aam
and
sub
btc
jle
pop
jmp
js
mov
movs
pop
enter
push
push
imul
movs
jbe
wbinvd
es
push
je
push
outs
sbb
pushf
or
shr
push
(bad)
pop
dec
test
ss
movs
mov
sub
test
mov
inc
jle
(bad)
mov
lds
sub
cdq
cld
ins
xchg
daa
xor
cs
fstp
ret
push
mov
mov
mov
or
fs
arpl
push
mov
pop
mov
push
(bad)
xchg
push
test
pop
sub
pop
mov
imul
neg
inc
fdivrp
mov
xor
popf
sub
cwde
mov
test
or
fcom
push
dec
cs
mov
and
or
pop
sub
movs
leave
test
or
rol
or
and
int3
cdq
jg
(bad)
pop
dec
sbb
dec
inc
or
mov
retf
popf
xchg
inc
sub
addr16
ror
not
mov
xchg
fdiv
cmps
adc
inc
sub
jp
js
push
sub
sti
xor
and
xchg
dec
ret
cmp
lods
push
(bad)
pop
cld
cli
pop
in
dec
pusha
retf
call
cmp
ja
sub
fst
mov
fst
int3
jns
cwde
pop
jae
mov
jmp
dec
out
inc
mov
cld
popf
mov
cmp
mov
fld
(bad)
arpl
enter
push
sbb
test
pop
xor
js
test
sub
test
xchg
mov
mov
jmp
add
mov
ja
or
into
mov
repnz
sub
iret
in
fbstp
cmp
rcr
pushf
aas
push
sbb
xor
imul
xor
scas
icebp
enter
pop
outs
cmp
sbb
push
sbb
mov
and
ins
xchg
adc
adc
mov
jbe
int3
add
fcomp
push
inc
sbb
mov
(bad)
mov
pop
test
test
data16
mov
cdq
dec
aaa
popf
je
call
jns
stos
xor
mov
jmp
cli
out
mov
cmp
push
jbe
loopne
inc
mov
inc
fisubr
add
aad
adc
xchg
lock
mov
ins
dec
ret
adc
test
fisub
out
and
cmc
fdiv
mul
and
mov
(bad)
out
je
mov
retf
stos
repnz
nop
stc
inc
dec
push
xor
ja
mov
retf
xchg
push
xor
lods
int
adc
add
fisttp
push
les
sbb
vpcmpeqw
jno
mov
jle
fcmovb
fs
add
jg
jns
fs
mov
and
aam
fidivr
push
mov
sbb
cmp
mov
stos
xchg
cmps
das
pop
fist
fsubr
sti
xor
jg
cmp
sub
push
ret
rcl
hlt
or
pop
aaa
imul
test
adc
jmp
jne
loopne
jb
mov
mov
or
xchg
push
add
cdq
test
xchg
xchg
test
mov
pslld
test
jge
int
inc
sub
mov
je
cwde
test
cvtpi2ps
bound
mov
arpl
jle
iret
sbb
in
aam
loopne
xchg
pop
push
sub
mov
pop
adc
jne
xchg
stc
sub
popf
dec
shr
mov
jno
inc
scas
cwde
xor
jp
cmps
lahf
cmp
sar
clc
(bad)
pop
inc
adc
sub
test
or
fcmovnb
push
mov
ins
bound
sbb
pushf
ret
xor
pop
sbb
sbb
ins
rcr
cmps
xchg
in
int3
add
scas
mov
movs
and
aad
aad
xchg
sub
sti
mov
sbb
mov
push
jl
jp
add
mov
bound
sbb
jmp
leave
mov
mov
xchg
aam
add
or
out
mov
mov
fs
jns
sub
(bad)
cmp
fiadd
xchg
inc
data16
rcr
pop
jmp
lods
cmp
xor
(bad)
les
mov
fisttp
push
mov
sahf
les
int3
fadd
out
loope
inc
shr
push
icebp
add
int3
dec
ds
adc
fmulp
xchg
xor
sbb
jle
pop
xchg
or
ror
(bad)
ja
call
xor
add
and
pop
ret
in
jmp
add
cdq
test
arpl
pop
mov
(bad)
mov
mov
jmp
stos
dec
mov
call
push
ret
shr
xor
dec
or
cmp
add
rcl
sbb
sub
jg
fst
outs
push
add
jno
dec
xchg
idiv
add
adc
stos
pop
pop
mov
scas
cmp
pop
adc
repz
mov
into
scas
jmp
mov
es
mov
ficom
shr
pop
ret
sub
repnz
out
(bad)
dec
sub
loope
xchg
pop
jb
add
push
dec
xchg
mov
xor
jmp
popa
and
xor
ja
nop
ins
lods
mov
xchg
cld
test
(bad)
jae
fsubr
mov
cmp
out
or
pop
int
out
ror
or
xchg
outs
mov
out
imul
cmps
mov
or
and
inc
out
dec
push
enter
sub
xor
lods
inc
mov
pop
xlat
sti
xchg
imul
addr16
adc
mov
sub
out
rol
and
and
inc
loopne
mov
(bad)
dec
push
into
push
aad
sub
ds
sti
fabs
iret
lods
sub
ret
or
dec
or
sahf
jb
xor
rcr
mov
shl
outs
push
cwde
ins
aaa
sub
out
int3
mov
pop
sbb
fdivr
imul
outs
dec
sbb
out
xor
jmp
popf
aaa
loopne
dec
imul
sbb
cmps
adc
xchg
arpl
cs
push
clc
push
sub
je
jne
loope
jg
inc
repz
out
retf
imul
je
hlt
dec
(bad)
pop
js
and
xor
xor
imul
int
movs
xor
or
xchg
leave
sbb
data16
and
xor
test
popf
xchg
retf
cs
dec
gs
push
dec
mov
xchg
sub
xchg
mov
push
xchg
sbb
mov
or
enter
pop
sub
les
(bad)
lds
cli
shl
pop
cli
jp
mov
movs
pop
xchg
pop
jo
rcr
imul
xor
pop
inc
jmp
mov
es
jnp
cmc
jo
or
add
je
aam
cwde
sub
xor
in
call
xor
inc
and
repz
dec
pop
inc
inc
jge
popf
stc
and
dec
push
sub
jmp
xor
fdiv
dec
jno
sub
and
mov
jg
pop
pusha
mov
popa
add
and
sub
in
push
fild
mov
fdiv
cmps
(bad)
mov
fbstp
fadd
leave
sub
in
in
fadd
adc
inc
inc
mov
mov
cmp
int3
int
add
pop
sbb
ret
imul
sbb
inc
shr
mov
xchg
adc
test
shl
leave
(bad)
ins
cld
and
pop
xor
fisubr
add
fisttp
leave
or
fucomp
test
pop
sbb
leave
sahf
js
(bad)
(bad)
fbstp
rcr
out
aad
push
cmps
push
pop
and
and
int3
jg
add
les
mov
ss
jmp
test
xor
addr16
pop
clc
rol
arpl
aam
mov
mov
outs
cmps
cwde
jmp
mov
push
adc
push
mov
bndldx
(bad)
repz
dec
mov
out
rol
(bad)
mov
and
std
mov
ins
mov
lods
push
les
(bad)
cmps
movs
sbb
repnz
pop
mov
in
adc
cli
jnp
or
adc
fisttp
(bad)
dec
add
jnp
out
in
xchg
clc
rcl
xchg
pop
inc
aaa
lods
push
inc
pusha
aad
sar
mov
push
lahf
retf
sbb
fisttp
call
pusha
jns
je
ret
int
add
shl
xor
mov
stc
rcr
dec
in
add
sub
ins
push
sub
inc
test
clc
addr16
and
add
xchg
mov
hlt
mov
or
push
inc
arpl
shl
push
ret
jne
das
js
sub
jge
lods
push
in
pop
out
mov
jmp
int3
jno
xchg
push
push
aam
out
lods
xor
in
and
and
mov
pusha
mov
dec
adc
cmc
adc
enter
dec
sbb
enter
add
jae
inc
les
out
movs
cmps
sub
ficomp
add
out
fcmovu
jge
dec
stos
or
lahf
cdq
or
int3
shl
ror
loopne
mov
sub
sbb
jo
lds
outs
cmp
inc
imul
cmp
and
add
mov
pop
fdivr
adc
cmps
pop
add
repz
call
push
fbstp
(bad)
lock
adc
lods
lock
aaa
xchg
jge
sub
sbb
dec
mov
sub
es
push
mov
outs
test
shl
cwde
aaa
mul
add
movs
(bad)
fld
add
sub
lods
aam
push
ins
cmp
cmps
mov
mov
inc
inc
mov
push
(bad)
pop
mov
xlat
xor
neg
aam
xchg
and
ror
push
cs
jmp
sub
cwde
inc
leave
mov
xor
shr
ds
and
rcl
adc
add
and
dec
mov
push
data16
xchg
push
jnp
pop
div
cli
jecxz
dec
dec
lahf
push
je
mov
jp
inc
sar
(bad)
call
lods
jecxz
push
or
je
hlt
imul
xor
cdq
and
fldz
repz
cmp
dec
(bad)
mov
and
(bad)
psubusb
jo
ja
dec
repz
out
stos
xchg
test
inc
adc
out
fcomp
pop
mov
xchg
jl
adc
scas
(bad)
mov
iret
ud2
mov
mov
xchg
loopne
mov
je
popa
cmp
sbb
mov
add
ja
imul
jle
js
sub
lds
push
push
hlt
jge
movs
loopne
data16
push
jno
or
clc
call
fs
sar
out
popf
and
mov
cmp
mov
ret
sub
enter
sti
sbb
cwde
pop
in
lds
jae
ins
pop
lods
ins
fild
xor
xchg
push
clc
rcr
xor
stc
test
inc
mov
mov
cmp
test
aam
push
pop
leave
out
les
xchg
sub
push
mov
push
push
sub
aas
mov
mov
or
mov
xor
aam
cld
sub
cmc
xchg
xchg
fwait
and
ds
test
jle
sub
push
mov
cmps
bsr
shr
xlat
push
setnp
pop
xchg
pmovmskb
push
das
xor
das
cmc
je
mov
or
sbb
sub
pop
int3
jmp
lahf
fwait
sub
je
sbb
icebp
xor
jmp
push
repz
xchg
(bad)
retf
jnp
xchg
dec
push
fstp
jmp
rol
js
mov
sti
mov
iret
aas
push
mov
aad
xchg
lods
clc
or
jp
int
inc
xchg
xor
scas
scas
inc
aaa
(bad)
loope
mov
pop
test
mov
xchg
cmp
(bad)
mov
mov
arpl
mov
mov
dec
and
rcr
out
cmp
daa
dec
inc
inc
sar
std
dec
and
jns
push
out
lods
rcl
ins
fdiv
hlt
out
dec
loopne
xor
pop
loopne
mov
scas
aas
gs
sbb
jno
stc
dec
in
or
in
stos
fidiv
int
(bad)
(bad)
push
mov
outs
mov
and
or
jl
or
xchg
ret
fldcw
call
hlt
bound
ins
sub
push
cmp
or
into
dec
loop
cmp
jno
rcl
pop
add
(bad)
cmp
mov
cwde
ret
add
dec
push
jb
cs
(bad)
stc
(bad)
(bad)
leave
xor
fidivr
int3
sub
add
test
mov
stc
aad
or
enter
add
add
mov
or
mov
jmp
(bad)
jae
inc
scas
push
push
fst
lahf
(bad)
sbb
xor
inc
xchg
das
test
cmp
cmc
retf
cmp
pop
mov
push
or
les
mov
xchg
mov
popf
add
dec
call
lods
push
xchg
xchg
(bad)
stos
cmp
pop
popf
inc
inc
and
int3
pushf
push
ror
les
sbb
mov
mov
retf
push
pop
mov
fs
mov
xchg
cmc
sahf
xor
movs
sar
sbb
idiv
xor
jbe
and
or
ins
in
xor
xchg
inc
dec
adc
cli
sub
lods
out
sbb
xchg
adc
outs
not
dec
jg
sub
and
fst
push
xor
aas
mov
das
retf
mov
cmc
pop
mov
in
mov
jno
add
jbe
cmp
pop
fidiv
inc
xchg
popf
in
pop
add
call
mov
jb
call
shl
mov
(bad)
icebp
dec
sbb
sbb
pop
adc
ficom
icebp
adc
aaa
sbb
adc
fld
outs
out
adc
in
icebp
lods
in
inc
arpl
push
and
(bad)
sub
mov
mov
sub
mov
frstor
movs
xchg
adc
nop
mov
push
inc
xchg
push
lahf
adc
inc
sbb
xor
inc
dec
sbb
neg
xchg
mov
xchg
and
pop
xor
(bad)
aaa
push
pop
xchg
push
jg
sub
call
ss
in
mov
xchg
cmps
and
dec
mov
add
cmc
gs
popa
pusha
mov
jecxz
in
hlt
fcom
jo
push
ins
adc
cmp
mov
adc
jmp
ret
mov
adc
add
mov
inc
sar
and
dec
dec
ret
outs
xor
dec
mov
jno
xlat
mov
leave
sbb
mov
pop
movs
xchg
cmps
cmp
xchg
push
dec
adc
jbe
idiv
xor
pop
push
pop
lock
dec
inc
fld
into
jno
lock
pop
push
ds
ret
lds
mov
cli
mov
mov
nop
and
push
call
mov
mov
push
push
jge
stos
iret
ins
ins
shl
movs
mov
mov
add
ins
out
shl
fld
pop
aad
xchg
or
jb
xor
sbb
add
add
mov
xor
call
xchg
pop
adc
adc
cmp
jno
aaa
push
adc
pop
or
ret
imul
mov
cwde
xlat
push
test
mov
test
pop
mov
sub
push
ficom
dec
sar
fnstcw
aam
cs
cdq
movs
add
mov
aam
stc
cmp
add
(bad)
push
cmp
inc
fidiv
xor
xor
and
and
lods
xchg
lods
jne
jl
bound
xor
inc
loopne
pop
or
(bad)
jg
pop
js
subps
retf
jge
cld
mov
outs
ds
mov
into
xor
add
aaa
xchg
sti
cmp
popw
mov
and
add
dec
cmp
mov
nop
cmc
hlt
or
jnp
lahf
mov
adc
ret
bound
or
mov
call
push
aaa
out
pop
jbe
fwait
nop
push
mul
fnsave
lahf
mov
das
ror
js
fwait
inc
call
jp
stos
pop
aaa
or
add
adc
dec
xor
test
stc
jg
cmp
mov
add
lods
and
jmp
pop
mov
imul
jge
fcomp
push
ret
in
add
repz
cmp
xchg
cmp
push
fwait
iret
xor
sbb
bound
imul
push
in
add
dec
data16
je
dec
adc
or
mov
cs
(bad)
and
movs
das
dec
loopne
mov
lods
mov
mov
daa
jae
sbb
out
cmps
iret
clc
sub
cmp
mov
xor
stos
sub
(bad)
cwde
inc
lods
loop
push
retf
repz
retf
fucomp
fwait
push
das
adc
bound
mov
fsub
fidivr
mov
cmp
addr16
ss
cmp
iret
push
add
dec
ds
mov
push
mov
gs
call
(bad)
or
mov
loop
mov
fistp
pop
xchg
xor
mov
pop
push
mov
lock
adc
mov
adc
outs
pop
push
cs
inc
outs
loope
les
or
pop
mov
mov
push
test
mov
xor
dec
je
dec
dec
std
jl
mov
dec
adc
jbe
stos
(bad)
and
adc
jbe
mov
clc
dec
mov
leave
dec
hlt
pop
mov
ins
push
popa
xor
iret
pop
cli
imul
push
xlat
cmp
mov
dec
hlt
push
lock
cwde
inc
mov
neg
(bad)
jnp
or
sbb
or
popf
dec
outs
(bad)
mov
test
jb
mov
push
(bad)
imul
xor
ret
push
jb
sbb
cwde
xor
jnp
out
aas
ret
mov
shl
sbb
hlt
pop
stos
mov
inc
jbe
data16
daa
sbb
je
inc
xchg
loopne
jg
pusha
lea
cmp
adc
shl
or
jne
scas
sub
or
xor
pop
push
rol
jmp
ja
test
mov
push
mov
ror
mov
xor
outs
xchg
xchg
shl
fstp
icebp
inc
aas
sub
popa
push
(bad)
jnp
leave
or
ss
jae
cmps
mov
(bad)
cli
adc
jl
pop
std
jl
ror
stos
movs
push
je
pushf
mov
imul
dec
and
clc
xchg
fld
mov
sbb
test
stos
call
(bad)
dec
cmovl
loopne
sbb
shl
add
cmp
mov
lea
or
je
cmp
xchg
sbb
push
ror
mov
sub
xchg
mov
jnp
and
mov
and
cdq
std
jmp
mov
test
aas
mov
lods
mov
mov
adc
movs
into
inc
add
(bad)
lods
outs
out
mov
mov
arpl
sub
cmp
stos
adc
stc
aas
test
fst
inc
or
idiv
pop
mov
sub
dec
data16
mov
shl
push
inc
push
cmp
lahf
add
cmc
dec
push
push
push
sub
jne
loopne
lea
pop
mov
fwait
cmps
sahf
ins
test
xlat
test
test
int3
adc
data16
or
(bad)
lods
pop
dec
out
xor
ss
dec
cmp
das
cmp
out
fimul
xor
add
sub
add
in
jne
sub
push
stos
inc
push
int3
mov
pop
fcom
ret
pop
imul
sub
daa
dec
fsubr
lods
lods
push
dec
sub
mov
imul
aad
mov
xor
xlat
sahf
cmp
inc
sub
inc
mov
mov
xchg
test
repz
std
or
(bad)
cwde
mov
loop
jae
jnp
inc
dec
mov
test
push
sbb
lea
inc
leave
div
cmp
fwait
cmps
xor
xlat
mov
sub
adc
cld
icebp
jecxz
adc
sbb
cmc
sbb
lahf
retf
mov
fidivr
and
(bad)
aad
(bad)
pushw
and
xor
(bad)
xor
retf
es
pop
(bad)
test
retf
cs
je
cmps
dec
imul
icebp
in
sbb
mov
ret
fidivr
mov
inc
mov
movs
adc
jb
adc
jnp
sub
(bad)
imul
fstsw
fistp
add
mov
retf
popa
jmp
cdq
clc
ret
aas
or
fwait
cmp
jb
inc
jmp
xchg
add
pop
jbe
cmp
mov
pop
mov
xchg
sub
add
ja
fnsave
iret
pop
jmp
push
sub
inc
fmul
push
or
loop
push
fsub
and
inc
dec
push
inc
cmps
dec
lea
jge
adc
xor
fistp
outs
pop
xor
ss
jge
cmp
mov
xchg
inc
inc
jmp
movs
jge
cmp
jns
stos
fst
leave
pusha
mul
mov
jg
inc
lahf
mov
adc
lahf
vpshufd
leave
je
lods
mov
add
and
or
mov
push
cli
out
sub
jno
xor
jnp
xchg
mov
out
cmp
mov
sbb
add
int
pop
stos
ficom
jne
adc
data16
pushf
cmp
test
js
mov
pop
inc
ficomp
sub
ja
adc
cmps
xchg
dec
and
test
ins
in
jecxz
mov
inc
dec
pop
int3
xchg
aaa
rcr
xchg
sub
mov
mov
pusha
scas
push
lahf
xlat
loope
pop
(bad)
pop
push
(bad)
lock
imul
repnz
xchg
in
es
push
shl
jae
push
js
movs
jb
in
adc
cs
or
jne
xor
xchg
cmp
pop
push
mov
lahf
mov
lea
dec
out
jmp
icebp
dec
pop
xor
mov
outs
aas
stos
nop
jo
cld
push
xchg
and
mov
aas
cmp
fistp
loope
sub
push
lods
fmulp
and
lods
icebp
shl
mov
push
shl
adc
(bad)
ror
xor
dec
mov
in
mov
(bad)
int
aam
scas
ror
adc
stc
dec
mov
xchg
loop
jb
mov
fild
hlt
add
mov
and
or
mov
lods
cmp
mov
retf
pop
push
imul
scas
cli
fld
dec
pusha
cwde
jl
sub
jnp
add
cmp
les
lea
cmps
dec
sub
mov
outs
test
enter
push
movs
ds
mov
out
mul
xor
mov
imul
sub
sub
sub
push
fwait
inc
outs
ficomp
loope
stos
jle
stc
shl
cwde
mov
and
gs
mov
adc
xchg
loopne
stos
std
mov
sar
mov
data16
push
jmp
pop
in
clc
adc
jp
popa
sbb
aad
mov
xor
ja
jmp
sti
and
mov
xor
stos
ins
sbb
test
add
add
das
(bad)
sub
das
xlat
hlt
or
pop
dec
repnz
arpl
push
pop
movs
loop
sub
loopne
into
(bad)
jl
int3
mov
pop
loop
adc
pop
dec
pop
mov
xchg
and
mov
mov
ret
mov
sub
sbb
sti
pop
imul
push
je
imul
or
mov
(bad)
mov
jae
fild
es
ins
test
(bad)
cmp
xchg
push
pop
fdiv
loope
inc
cmp
cdq
dec
pop
inc
mov
adc
iret
mov
cmp
stc
and
rcl
js
sub
sbb
cmps
sbb
cmp
adc
sub
add
aad
inc
xchg
and
fdiv
cmp
retf
inc
inc
xor
fs
retf
pop
sub
cld
leave
sub
or
or
bound
push
and
jno
dec
mov
fwait
dec
jne
jle
aam
das
(bad)
(bad)
or
repz
push
pop
pushf
(bad)
repnz
or
push
in
stc
add
adc
int3
push
or
retf
fadd
pop
jp
mov
push
cmp
add
icebp
test
dec
imul
(bad)
cld
repz
mov
sub
jle
and
pop
sahf
cdq
jmp
sqrtps
js
adc
imul
cli
adc
lds
je
outs
cmp
xchg
sbb
jg
inc
shl
cmp
ret
sbb
adc
jp
rcl
into
sub
pop
xchg
not
push
sub
and
pusha
fdivr
push
ja
cmps
inc
das
xor
adc
pop
xchg
ret
dec
pop
mov
fldenv
popa
mov
cdq
lds
pop
or
inc
cs
and
mov
pop
outs
fbld
pop
adc
stos
ins
adc
popa
jge
and
jb
push
ins
mov
jns
mov
mov
iret
xor
sub
push
lahf
pushw
mov
pop
mov
rcl
fucomip
push
or
(bad)
and
data16
sbb
jnp
adc
dec
pop
xchg
int
dec
loop
stos
add
pop
or
call
dec
repz
dec
add
push
adc
mov
mov
jb
cmp
call
jo
retf
std
in
(bad)
retf
jge
push
xor
stc
ja
lods
ss
xchg
js
das
push
add
int
xchg
out
sub
jmp
or
mov
inc
xchg
and
sti
mov
dec
fstp
push
mov
sbb
mov
jne
repnz
push
xlat
lea
fdiv
xchg
add
adc
(bad)
sahf
(bad)
std
data16
pop
outs
enter
pushf
and
or
popf
ficomp
ret
clc
mov
lods
outs
cmp
jbe
add
lds
addr16
stc
rol
jmp
sbb
icebp
sub
push
xchg
jne
out
push
mov
addr16
gs
xchg
lahf
je
jecxz
jmp
add
(bad)
ins
not
mov
inc
mov
mov
hlt
pushf
mov
movs
inc
daa
mov
outs
sbb
inc
mul
and
jae
fistp
aaa
sbb
gs
cmp
jp
mov
pushf
nop
dec
fwait
shr
and
stos
movs
sti
test
pop
cmp
shr
out
gs
in
or
int3
mov
mov
stos
mov
and
inc
ds
mov
and
gs
dec
fadd
cs
les
ja
dec
mov
pop
mov
(bad)
outs
cdq
arpl
mov
fcmove
jae
jmp
pusha
adc
dec
jae
mov
push
mov
data16
outs
call
and
pushf
mov
in
adc
push
ror
fcom
test
mov
pop
mov
push
dec
mov
jecxz
mov
or
mov
arpl
push
jecxz
ret
mov
inc
and
nop
adc
out
jle
cs
cmp
mov
mov
out
mov
(bad)
mov
mov
pusha
out
ins
mov
pop
(bad)
sar
test
dec
pop
scas
pop
mov
out
mov
mov
sbb
mov
dec
dec
enter
dec
sub
pop
adc
xchg
sbb
(bad)
out
sub
fimul
daa
pop
sub
dec
arpl
xchg
jp
inc
mov
and
fdiv
add
enter
mov
pop
and
imul
jmp
add
aad
sub
fnstcw
dec
push
add
inc
cmps
scas
mov
push
cmp
cwde
ror
pushf
in
inc
sbb
pop
mov
loop
scas
out
and
sbb
jle
in
pop
retf
std
das
or
lahf
aad
cwde
xchg
pop
and
sbb
out
jbe
add
or
push
retf
je
les
sub
retf
pusha
push
stos
adc
push
lea
mov
jmp
pop
xor
shl
int3
sub
pushf
sbb
push
xchg
arpl
cs
inc
test
jecxz
jecxz
je
std
sub
xchg
jnp
jmp
and
in
les
mov
test
mov
test
jecxz
aad
pusha
mov
add
sub
adc
faddp
ins
adc
mov
cdq
add
push
adc
push
dec
scas
mov
test
inc
sub
add
xchg
pop
in
inc
jae
add
push
pop
xor
push
sbb
iret
arpl
cs
fdivp
pminsw
loope
aas
add
ret
sbb
mov
ins
sbb
push
aas
pop
sbb
and
xchg
test
fimul
add
call
and
test
sub
daa
mov
mov
sub
xor
movs
jge
je
and
sub
xor
mov
push
sbb
call
icebp
fnstenv
fmul
cld
mov
mov
(bad)
mov
push
xor
out
mov
inc
js
into
sar
add
push
retf
pushf
icebp
cmp
mov
stos
scas
(bad)
jmp
dec
scas
xchg
(bad)
dec
fistp
inc
scas
repnz
int3
mov
sbb
test
xchg
cdq
and
dec
jecxz
inc
xchg
popf
fdiv
enter
jg
cmc
fld
ss
popf
mov
mov
or
mov
(bad)
loop
jnp
inc
jae
into
xor
ss
push
cmp
push
mov
mov
dec
jmp
push
into
out
and
or
push
sti
adc
call
lods
and
inc
adc
jae
div
jno
or
inc
iret
and
dec
arpl
mov
inc
dec
xor
adc
sbb
pop
jmp
fisub
loope
bound
jne
out
mov
ret
lods
adc
add
push
mov
xchg
or
sub
xchg
fsubr
xchg
mov
xchg
out
pop
jae
jecxz
retf
sub
mov
sbb
idiv
sbb
and
xor
mov
mov
out
mov
or
fwait
pop
inc
mov
arpl
mov
rcl
xlat
add
cld
test
adc
mov
mov
jmp
fwait
cmc
(bad)
lds
pop
pop
push
xor
cmp
adc
ret
sti
pushf
out
cli
aaa
mov
add
jmp
jg
cmp
cmp
(bad)
enter
mov
fs
cs
and
test
add
retf
mov
and
cli
mov
retf
ficom
imul
and
arpl
iret
mov
stc
imul
mov
sbb
xlat
pop
std
pop
cs
cmp
add
stc
in
(bad)
data16
in
repnz
xchg
mov
movs
pusha
test
mul
stos
popa
dec
push
sub
mov
mov
cmc
and
adc
(bad)
mov
in
pop
fwait
push
xor
adc
push
out
cmps
pusha
pop
mov
push
sbb
or
xor
or
pop
sub
push
adc
xor
lods
dec
ror
fst
ins
daa
ret
ret
ja
mov
inc
mov
and
movhps
pop
aaa
mov
sahf
ja
mov
arpl
sbb
and
add
adc
pop
pop
pop
push
ror
xchg
adc
mov
ss
retf
xor
fld
inc
in
pop
dec
cs
push
cmp
ret
xchg
ins
loope
inc
sahf
je
mov
call
icebp
popf
fild
shl
jne
hlt
ins
test
nop
rcl
mov
loopne
out
scas
pusha
mov
jg
test
ins
das
cmp
into
dec
add
lahf
push
push
and
popf
cmps
dec
gs
dec
jmp
cmp
aas
or
hlt
add
jbe
inc
scas
out
xchg
ror
fwait
les
inc
sub
mov
int3
jl
inc
in
call
(bad)
stc
sar
push
pop
es
xchg
push
push
and
div
adc
(bad)
ret
test
inc
lds
enter
std
adc
mov
daa
test
sub
imul
cmps
repz
movs
test
inc
aad
aad
and
ins
enter
jns
push
xchg
or
jge
push
retf
jbe
add
push
cmc
in
or
mov
out
sbb
ins
dec
sub
jns
cmps
mov
mov
jae
pop
push
(bad)
push
inc
mov
or
push
ficomp
or
les
mov
jae
jmp
out
ins
movs
outs
cmp
ret
ret
cmc
xchg
in
ins
sub
ins
(bad)
cdq
nop
pandn
inc
mov
add
cs
in
fwait
jp
jl
rcpps
int3
test
cmps
adc
lea
and
loop
call
aad
scas
int3
xchg
xchg
jb
sub
shl
retf
cld
xchg
cmp
pop
test
ins
dec
adc
dec
inc
sbb
jo
(bad)
jmp
and
mov
in
or
dec
push
ins
int3
and
pop
pop
pop
inc
pop
jo
(bad)
sbb
cmp
aaa
sub
push
and
push
popa
sar
retf
adc
mov
test
add
lods
or
lahf
dec
fild
push
sub
adc
mov
mov
jmp
xchg
cmp
lods
lds
pop
push
les
test
mov
xchg
lods
aaa
xchg
push
addr16
xchg
and
jp
adc
pop
jle
test
dec
mov
mov
mov
pop
ja
aas
and
jecxz
prefetchw
or
das
pop
shl
sub
es
data16
stos
cmc
mov
mov
(bad)
dec
adc
outs
jge
adc
and
mov
xchg
or
pop
sar
inc
push
xor
cmp
jl
jno
adc
mov
shr
adc
shl
sbb
out
aaa
sub
dec
sbb
mov
push
xchg
pop
cld
cdq
pop
retf
mov
inc
js
aas
adc
xchg
inc
push
xor
hlt
js
addr16
jo
test
inc
lahf
cmp
in
mov
cs
popf
pop
xchg
dec
xchg
or
pop
inc
fistp
ficomp
loope
test
mov
push
xchg
jno
jg
dec
in
mov
arpl
es
add
in
sbb
pop
inc
and
icebp
inc
sbb
xchg
ror
repnz
dec
out
enter
inc
mov
add
dec
pop
aaa
scas
ds
mov
push
lds
(bad)
inc
cmp
mov
mul
add
mov
adc
std
call
jmp
xchg
fisttp
and
retf
inc
shl
sub
fisttp
in
fdivrp
ret
pop
icebp
test
in
jle
mov
inc
cli
jnp
enter
inc
in
mov
or
sub
cwde
aas
dec
push
inc
out
addr16
push
shl
pop
popf
jmp
or
aam
xor
imul
pop
cmp
add
je
mov
addr16
sub
push
jnp
xchg
sahf
add
jl
mov
adc
movs
cmps
out
cli
loopne
push
arpl
and
mov
imul
adc
jno
mov
ficomp
imul
stc
cmp
xchg
test
adc
push
out
xchg
cmps
retf
shl
dec
sub
jae
aaa
xor
mov
push
loop
push
sbb
sbb
arpl
sbb
test
addr16
sub
dec
sbb
adc
bound
mov
lahf
cmp
ins
sbb
sbb
inc
mov
popa
cwde
jle
cmp
or
test
add
call
es
mov
pop
ins
or
repnz
or
call
and
ss
test
dec
retf
stos
xchg
outs
pop
cmp
mov
inc
out
mov
imul
cmps
pop
cmps
mov
loop
je
test
rol
cmp
mov
pop
adc
adc
fnstsw
dec
adc
jo
arpl
lods
sbb
fistp
dec
xchg
(bad)
repz
mov
mov
pop
test
push
xchg
clc
inc
shl
adc
not
sub
lods
sub
adc
loop
iret
push
push
sub
adc
sahf
mov
mov
aas
mov
add
retf
cmc
clc
xchg
shl
push
cmps
loopne
sbb
xchg
jbe
dec
mov
ficomp
mov
xchg
pop
mov
jae
cmp
push
sbb
std
add
rcr
aas
mov
sbb
dec
leave
(bad)
test
fldenv
ret
test
out
push
push
jbe
call
je
outs
mov
push
loopne
sub
cwde
arpl
mov
aad
shl
lahf
sub
mov
adc
mov
inc
aad
sub
loop
enter
xchg
pop
std
pop
pop
adc
popa
lea
push
inc
aaa
lods
(bad)
outs
cmp
popa
or
int
mov
push
iret
or
and
mov
pop
out
push
inc
les
pushf
cli
retf
xchg
xchg
ret
dec
mov
test
mov
std
mov
dec
js
mov
jge
cmp
mov
cmp
xor
pushf
xchg
sbb
push
lahf
sub
pop
sar
jne
or
inc
adc
add
sbb
shr
push
mov
ins
cmp
mov
adc
fsub
add
sub
adc
push
or
xchg
je
bound
push
xor
adc
inc
or
push
mov
mov
push
test
sub
xchg
or
fmul
push
cld
outs
sbb
div
loop
shr
loope
dec
xlat
sahf
pop
and
ficomp
test
cmp
mov
pusha
pushf
pop
xor
and
cdq
dec
es
inc
fist
xor
hlt
pop
xchg
jp
inc
aad
in
es
pop
lock
push
lods
cmps
push
pop
sahf
imul
fwait
cmp
in
rol
xchg
cmp
sub
mov
nop
popa
xchg
xor
add
imul
pushf
jmp
lock
ja
outs
pop
or
jae
js
not
xchg
and
mov
into
pop
push
push
out
mov
hlt
fidivr
xchg
jmp
xor
and
in
jge
jl
mov
add
mov
jle
adc
outs
call
rol
xor
aad
sti
mov
xor
ss
xor
stos
push
mov
adc
jne
mov
sbb
xor
or
sub
push
cmc
jno
pop
lock
sar
retf
dec
test
out
push
sar
xor
jbe
add
mov
and
xor
mov
sbb
push
loope
mov
pop
mov
adc
lea
(bad)
push
push
push
(bad)
xor
sahf
push
cmp
xchg
out
iret
lods
cmp
scas
and
popa
enter
es
dec
sar
push
push
outs
xor
cld
xor
sub
(bad)
dec
jo
jb
lds
add
push
mov
call
sbb
push
sub
(bad)
hlt
mov
int3
inc
pop
lods
jp
icebp
push
dec
inc
pop
cmps
xor
push
dec
jo
cmps
jns
xchg
mov
sar
dec
ds
cmp
push
jmp
push
inc
mov
push
adc
popf
mov
jle
movs
cmp
push
adc
out
hlt
inc
push
or
sub
or
pushf
push
sti
add
cmps
sbb
int3
inc
adc
add
loop
pop
and
rol
push
out
add
and
mov
pop
or
push
add
inc
inc
cwde
addr16
jbe
mov
jno
cmp
clc
and
dec
adc
push
inc
mov
vpavgw
bound
fwait
jp
add
mov
xchg
adc
sub
in
(bad)
icebp
sti
dec
jl
push
sbb
push
test
xchg
(bad)
cmp
pushf
adc
lahf
ret
add
addps
sbb
or
aaa
push
out
popf
push
ucomiss
dec
jne
mov
cs
lahf
mov
jmp
neg
out
call
ins
out
add
test
sbb
call
adc
scas
ins
push
addr16
push
add
sub
mov
xchg
ret
mov
pop
stos
push
mov
cmps
fimul
inc
dec
jle
sbb
xor
test
jg
repz
iret
inc
test
pop
out
in
adc
rol
jecxz
outs
les
and
pop
shr
repnz
pop
(bad)
xor
stc
int3
mov
jmp
jno
jne
jne
ins
pop
movs
dec
(bad)
popa
xor
xchg
jbe
mov
or
cdq
mov
cmp
nop
cmp
cs
xchg
and
adc
sbb
inc
add
fwait
cmp
fimul
jecxz
mov
mov
jb
aad
adc
lahf
mov
sbb
out
push
mov
adc
xchg
sub
and
pushf
mov
add
push
jle
or
cmp
(bad)
ja
call
fst
or
fmulp
cli
(bad)
xor
fstp
sbb
add
xlat
ds
cli
ins
push
das
and
stos
ret
dec
mov
enter
sti
jp
mov
movs
sub
inc
or
mov
xchg
add
sbb
jge
lds
pop
aas
arpl
dec
call
dec
jae
rcr
adc
jnp
jge
cwde
ret
in
mul
out
pop
push
push
out
nop
sub
jmp
and
dec
fwait
pop
dec
pop
stos
jae
mov
popf
mov
dec
aaa
mov
xchg
cs
jns
retf
aam
aad
outs
iret
xchg
xchg
jmp
push
inc
stos
mov
jbe
ins
dec
adc
mov
jmp
jno
outs
in
jecxz
out
cwde
out
jg
push
mov
imul
jmp
pop
scas
clc
mov
cli
cmp
jmp
push
cld
xor
pop
jb
aaa
cmp
rol
nop
sbb
cli
add
cmp
fcom
add
inc
jp
mov
push
pop
pop
adc
cmp
jp
call
and
loop
imul
jl
sbb
cld
lahf
mov
dec
inc
add
mov
das
xchg
push
movs
out
add
dec
add
fst
imul
pushf
pop
push
push
fsub
out
add
scas
pop
fcom
mov
sbb
xchg
pushf
int
fsin
sbb
mov
and
push
mov
ret
add
data16
mov
dec
rcl
push
mov
stos
sbb
inc
add
out
es
aam
aad
repz
jecxz
xchg
jmp
out
jne
inc
std
dec
mov
es
jne
xchg
jb
loopne
add
pop
shr
xchg
lods
or
imul
arpl
adc
cmp
dec
popf
in
sub
lods
xor
cmp
adc
sub
xchg
pushf
xor
rcr
mov
or
shr
and
ja
pop
jmp
dec
in
mov
mov
cmps
sbb
addr16
mov
sbb
jle
push
xchg
ins
mov
loopne
jmp
neg
xchg
adc
xchg
lods
inc
loop
fadd
push
mov
mov
fdivr
inc
push
adc
jg
je
pop
push
and
push
aad
pop
loope
enter
in
pop
dec
adc
jo
call
retf
ds
imul
xchg
xchg
or
test
pop
mov
(bad)
leave
fild
xchg
sbb
cmp
adc
fcmovu
sbb
inc
pushf
stos
jmp
mov
jns
test
(bad)
sub
inc
mov
inc
int
(bad)
pop
and
mov
adc
mov
pop
aas
out
ret
xor
xchg
adc
or
call
cmc
xor
ds
pusha
ret
(bad)
mov
repz
(bad)
je
sbb
mov
push
pop
cli
test
ins
nop
sbb
aam
outs
xchg
scas
lahf
popf
cmp
pop
das
icebp
cmps
hlt
ficom
stc
push
mov
push
mov
je
in
dec
mov
call
cli
or
mov
jmp
jb
sbb
cli
mov
mov
pusha
xlat
out
jl
outs
cmp
push
in
je
sub
sbb
jnp
gs
stos
xor
invd
inc
(bad)
xlat
push
dec
outs
jnp
test
fiadd
iret
mov
xchg
sbb
add
icebp
sub
sbb
xabort
out
out
mov
or
mov
enter
imul
retf
pop
scas
ret
mov
(bad)
mov
fiadd
(bad)
(bad)
cli
sahf
mov
jbe
fisttp
cld
sbb
sbb
mov
inc
mov
adc
jle
lods
mov
cdq
(bad)
adc
bound
int3
in
in
outs
ds
daa
add
and
and
imul
pop
push
pop
xchg
daa
mov
(bad)
int3
fs
push
test
in
test
jp
ret
addr16
or
cmps
call
jp
push
xor
pop
add
mov
jp
out
das
ret
add
jmp
inc
aaa
mov
enter
stc
movs
cli
push
(bad)
jo
mov
cmp
dec
sbb
pusha
and
scas
xor
test
div
call
js
mov
gs
jnp
call
mov
div
pop
in
mov
dec
rcl
inc
ret
out
mov
test
pop
dec
and
pop
sub
imul
inc
ins
add
pop
out
dec
out
in
push
cmp
pop
test
pop
repnz
fst
sti
jae
imul
cmp
je
loopne
inc
das
mov
lea
adc
mov
daa
enter
aam
cmp
ror
push
push
in
cmp
xor
ja
repz
xchg
mov
mov
mov
xor
mov
inc
popf
pop
sbb
popa
std
ins
xor
jnp
fdiv
(bad)
lods
js
xlat
ds
xchg
call
shl
jecxz
loop
and
cwde
lock
imul
loopne
cmp
std
das
inc
add
push
xchg
adc
call
cmp
aaa
sub
pushf
xor
and
in
mov
(bad)
(bad)
adc
push
and
inc
es
jp
(bad)
pushf
sub
bound
xchg
ins
inc
inc
push
jb
int3
mov
adc
mov
shr
icebp
mov
pop
inc
je
jbe
mov
push
out
imul
leave
mov
push
lods
shl
mov
outs
dec
call
arpl
scas
out
mov
and
ins
sub
cmp
test
in
out
(bad)
shl
ret
test
(bad)
xchg
cwde
pop
xchg
xchg
jmp
das
sahf
inc
stc
cmp
cmp
lock
sub
(bad)
(bad)
dec
ins
mov
fucomi
not
push
icebp
fcom
into
mov
cdq
inc
jl
sbb
call
sbb
outs
jge
sahf
mov
mov
test
pop
push
add
pop
xchg
and
sub
pop
loope
jnp
in
add
aaa
xchg
mov
inc
sub
ins
adc
mov
sub
sbb
test
lods
shl
(bad)
ins
or
cmp
sti
xor
adc
xchg
stos
test
and
or
pop
cdq
aad
lock
or
mul
xor
iretw
out
dec
adc
push
dec
sbb
pusha
retf
pop
push
scas
ins
das
popf
sub
rcl
mov
inc
push
aad
std
mov
xor
pop
sbb
nop
out
mov
repnz
inc
mov
and
mov
xor
call
sbb
mov
mov
cmp
mov
setne
sbb
cmp
xchg
popf
movs
or
xchg
mov
inc
mov
std
push
jb
(bad)
xor
cli
sar
inc
or
ja
jmp
jae
xor
and
mov
xlat
cwde
loopne
push
lea
push
or
das
push
sbb
arpl
sub
arpl
cmp
mov
cmp
inc
jg
mov
scas
push
jl
and
jmp
sahf
fptan
pop
daa
add
out
xchg
pop
jb
arpl
ret
add
pop
adc
or
adc
dec
jle
in
les
pop
pop
xchg
(bad)
(bad)
in
adc
inc
mov
push
and
mov
fmul
sub
xor
xchg
aas
xchg
or
jb
push
std
cmp
lea
orps
cmp
xchg
(bad)
cdq
or
outs
mov
dec
into
add
int
in
mov
cs
nop
add
and
loop
push
sar
scas
idiv
in
xor
xchg
test
cmp
pop
push
scas
pop
mov
sub
sbb
shl
clc
sub
pop
xor
ret
(bad)
fld
popa
pop
gs
adc
aam
inc
rcl
lods
aaa
and
pop
push
mov
enter
push
sbb
mov
in
popa
cmp
cmp
xor
inc
jecxz
les
push
cmp
arpl
in
(bad)
nop
iret
add
mov
add
ret
mov
fnsave
xchg
bound
inc
sbb
call
cmp
sub
mov
xchg
dec
sahf
push
imul
dec
sub
jmp
push
shr
jge
fistp
jns
mov
xchg
rcl
aas
(bad)
mov
dec
add
mov
mov
mov
and
mov
pop
fsub
push
adc
es
test
and
mov
repz
fdiv
shl
or
shr
add
sub
jnp
add
push
int
call
push
pop
loope
les
aaa
outs
xor
in
test
out
xchg
std
adc
push
repnz
call
rcr
fldpi
inc
and
mov
scas
aaa
shl
inc
sti
movs
(bad)
dec
xor
adc
repz
in
in
dec
inc
mov
leave
push
pop
loop
mov
imul
retf
inc
test
or
out
int3
imul
fst
jo
xor
aaa
sahf
add
lods
loop
sub
in
neg
push
cmc
into
loop
aaa
test
sbb
dec
sbb
in
cmc
aad
add
jns
dec
push
je
aad
cli
mov
loop
dec
repnz
add
pop
inc
xchg
fwait
xor
js
cmp
jmp
enter
xor
test
mov
idiv
cmp
stos
rol
in
pop
add
ret
push
(bad)
push
imul
cmp
xor
xchg
inc
pop
push
jno
adc
sbb
shl
adc
fcomip
xor
fild
retf
push
mov
lahf
sub
pop
shr
test
lods
mov
jg
out
shl
shl
adc
call
ins
push
push
adc
push
jg
out
dec
(bad)
jns
shl
mov
pop
fs
dec
push
sub
xchg
out
mov
push
nop
dec
ss
add
push
in
push
cmps
pop
cwde
pop
adc
js
lock
(bad)
fcom
mov
lea
pop
sbb
mov
cdq
push
inc
(bad)
xlat
cli
push
ret
pop
ds
pop
out
mov
(bad)
sub
xchg
mov
mov
inc
add
and
cmp
push
pusha
push
daa
loope
mov
test
pop
sbb
inc
pop
pop
fld
push
mov
push
das
add
and
pop
jl
addr16
rcr
lods
call
retf
push
jecxz
sub
push
rcr
jo
loope
es
dec
pop
mov
adc
mov
mov
sub
fsubr
push
mov
fsubr
out
cmp
inc
inc
callw
(bad)
xchg
ss
cld
inc
push
mov
jg
mov
in
in
mov
xor
cmps
cs
jg
jb
mov
into
mov
mov
jb
dec
call
lock
out
inc
jmp
aaa
stos
movs
push
fnstcw
(bad)
inc
mov
jb
sbb
dec
rol
ss
pop
pop
jmp
es
sub
lea
dec
int3
adc
aas
cmp
fld
js
lods
movs
mov
nop
mov
pop
loopne
js
cmps
pop
sub
dec
xchg
or
jmp
ins
inc
add
loopne
rcr
or
ret
pop
call
hlt
jbe
mov
xor
and
ret
add
imul
sbb
push
mov
dec
test
in
cwde
sub
sub
jmp
cmp
out
stos
jle
ins
cmps
pop
mov
es
sbb
nop
adc
aas
addr16
sub
pop
pop
pop
adc
aad
jbe
and
test
xor
mov
sar
loopne
aaa
and
hlt
sbb
mov
mov
ds
jmp
add
or
pusha
mov
dec
and
mov
movs
in
fiadd
mov
jmp
js
dec
(bad)
aad
scas
cmp
leave
or
test
ja
jo
lock
test
or
xor
or
mov
fs
outs
mov
xor
add
sub
cdq
sub
(bad)
xor
imul
movs
inc
jns
add
(bad)
ds
ss
xchg
pop
stc
gs
das
data16
pop
repz
loop
jle
dec
ds
dec
or
imul
fadd
sub
mov
add
sbb
repz
jo
bswap
sub
rcl
xor
inc
mov
sti
pop
leave
mov
arpl
in
lahf
adc
mov
pop
ds
ret
pusha
les
cli
gs
jg
add
mov
inc
(bad)
(bad)
xchg
dec
push
jecxz
repnz
mov
scas
das
mov
scas
push
or
push
hlt
cwde
test
mov
fisub
mov
pop
inc
sbb
int
jmp
add
sub
xor
and
jmp
jbe
or
in
out
ror
int3
hlt
jae
or
jne
mov
inc
mov
hlt
xor
jno
outs
retf
jge
ins
hlt
cmp
popf
out
inc
jbe
mov
dec
sahf
and
int
aaa
mov
jo
mov
dec
test
dec
into
push
into
in
sar
and
in
pushf
mov
ror
test
push
pop
sar
xchg
fadd
pop
push
ja
(bad)
in
mov
sbb
add
lock
or
add
scas
or
imul
add
pop
push
sbb
pusha
enter
test
mov
and
jno
(bad)
sub
ins
cs
mov
adc
(bad)
push
push
inc
sbb
inc
jp
into
sar
scas
jbe
fmul
add
ret
inc
loop
cli
stos
add
xchg
adc
push
pop
scas
je
sbb
(bad)
rcr
adc
sbb
lds
in
fdivr
adc
adc
xor
lahf
ins
test
jo
add
push
or
in
xor
xchg
cmp
in
mov
pusha
mov
cmp
in
and
arpl
scas
pop
pop
dec
push
inc
cmp
call
into
lea
xchg
pop
mov
call
cmps
mov
mov
jns
mov
pop
js
js
mov
(bad)
inc
inc
inc
jl
push
mov
repz
out
out
adc
data16
cdq
jmp
sar
idiv
fcomp
add
and
movs
hlt
dec
or
scas
clc
int3
ja
in
or
nop
imul
sbb
sub
xor
in
fcmovu
in
mov
loop
xor
sub
xor
out
(bad)
scas
jecxz
and
imul
out
dec
add
(bad)
rcr
ror
mov
cmp
add
fcmovbe
shr
scas
aas
shr
movs
shl
in
(bad)
mov
(bad)
xlat
lods
(bad)
jecxz
ror
push
test
aam
call
inc
(bad)
clc
call
in
repnz
sbb
cmp
aas
or
inc
xor
pop
call
loop
jl
mov
jbe
lods
jmp
add
cmc
push
imul
pop
xchg
fwait
add
pop
xor
fcmovnbe
je
fist
sub
inc
sti
or
cmps
arpl
ins
mov
in
mov
mov
in
dec
sbb
das
pop
xor
jecxz
push
lods
cmp
in
aam
repz
mov
jle
das
cmp
inc
or
sbb
mov
mov
inc
in
imul
xchg
push
push
inc
and
xchg
enter
xchg
lods
push
push
cmp
sti
push
sbb
(bad)
repz
shl
repnz
push
movs
adc
pop
lods
sbb
or
neg
gs
sub
jl
aad
inc
addr16
jle
jnp
mov
leave
jmp
aam
lods
lahf
push
sbb
dec
std
push
xchg
retf
sub
test
icebp
stos
mov
or
and
pop
(bad)
fsubr
sub
js
add
rcl
enter
lahf
bound
add
stos
push
adc
mov
lods
push
cmps
inc
cmp
push
jle
jne
xor
data16
push
out
sbb
idiv
jp
fcomi
outs
mov
cld
sub
fs
cli
jl
xchg
push
sub
jl
jmp
mov
ds
(bad)
pop
mov
and
jno
dec
fiadd
(bad)
jecxz
jbe
icebp
jne
(bad)
(bad)
mov
(bad)
ret
pop
ret
div
jg
scas
sub
js
cdq
dec
pop
loope
or
fmulp
dec
jns
add
xchg
daa
push
push
adc
cmps
frstor
(bad)
fidivr
popf
mov
mov
mov
loope
and
leave
sub
adc
mov
arpl
mov
movs
mov
(bad)
mov
stos
fadd
cld
push
pop
dec
mov
sub
push
adc
push
lods
inc
retf
rol
sahf
rcr
xchg
jecxz
mov
xchg
inc
fcmovnu
sbb
(bad)
mov
fs
dec
mov
pop
cmc
or
or
dec
push
iret
jne
aas
mov
ss
iret
shl
pop
sub
(bad)
retf
push
mov
hlt
call
jp
fcomp
pop
push
cmp
sahf
inc
rcl
out
retf
mov
lods
push
(bad)
cmp
(bad)
shl
sub
xchg
popa
and
ins
adc
or
inc
hlt
add
mov
jecxz
xor
leave
lods
adc
sub
inc
rol
xchg
push
xchg
stos
push
inc
fsin
jne
out
scas
mov
out
mov
jge
mov
inc
cs
je
aas
int3
(bad)
nop
es
xchg
and
pop
movs
or
stos
sub
aad
popa
and
rcl
adc
addr16
or
jb
and
mov
mov
dec
cs
pop
adc
mov
mov
mov
enter
xchg
sub
jne
rcl
ret
rcr
dec
pop
add
js
or
mov
xchg
inc
sti
(bad)
cmp
lahf
pop
jmp
bound
pop
in
push
or
cwde
or
jne
inc
outs
imul
adc
(bad)
mov
ss
sub
add
jne
cld
and
in
or
scas
pop
add
adc
dec
out
sbb
bound
jle
ss
pop
movs
jle
inc
or
out
outs
mov
xchg
scas
js
mov
daa
dec
push
push
fwait
pop
mov
(bad)
dec
imul
jb
fidivr
bound
(bad)
xchg
push
push
pushf
xor
mov
call
inc
jns
fiadd
mov
out
cmps
xchg
icebp
xor
jne
inc
sbb
mov
mov
xchg
adc
add
add
mov
mov
outs
pushf
pusha
rcr
repz
loop
or
bound
out
ror
rcr
mov
xor
ret
ins
stc
ds
pop
mov
popa
add
test
or
ds
pop
mov
mov
int
and
scas
test
or
or
and
pop
add
cmp
jo
dec
out
mov
out
out
adc
xchg
sbb
repz
out
or
stos
cmp
(bad)
pop
jmp
push
sar
rcl
and
sbb
push
inc
bnd
daa
xor
sbb
jl
or
cmp
adc
push
xor
dec
scas
push
mov
push
psubsb
scas
hlt
push
sbb
sub
outs
std
push
jo
fnstenv
jno
mov
lods
leave
scas
dec
call
pusha
daa
pop
scas
jmp
inc
lahf
or
bound
cmps
rol
xchg
mov
or
aam
add
stc
arpl
push
je
mov
sub
dec
cmp
dec
daa
rcl
sbb
fist
pop
push
out
pmulhw
add
dec
jmp
dec
inc
jmp
xchg
cld
adc
(bad)
cmp
push
cmps
mov
mov
or
test
sar
movs
ss
ret
repz
mov
retf
cmp
add
lods
sbb
add
xchg
mov
hlt
movs
test
iret
dec
pop
push
sub
dec
push
fild
mov
test
mov
inc
push
dec
dec
dec
lea
test
cmp
test
jno
pop
pop
sub
ja
daa
pop
aad
push
jg
add
cmp
(bad)
cli
ss
dec
pusha
jno
add
rcl
pop
aad
call
inc
pop
push
fs
or
sahf
data16
dec
jns
cmps
ficom
popf
stc
stos
cwde
mov
aaa
xchg
adc
int3
mov
adc
push
xchg
adc
or
test
adc
xor
jno
add
jmp
clc
out
inc
in
push
push
mov
mov
aad
or
icebp
cmp
mov
xor
xor
test
les
fistp
or
(bad)
mov
xor
cmp
jb
jbe
lods
or
sbb
mov
jl
adc
push
shr
(bad)
inc
mov
out
and
inc
lds
sti
lods
cmp
push
dec
mov
mov
int
cmp
push
add
pop
call
fisttp
push
sti
ss
repz
or
in
add
jbe
iret
(bad)
jne
movs
or
push
in
js
xchg
lock
mov
mov
das
fwait
adc
hlt
jp
xchg
push
add
and
mov
out
dec
addr16
mov
in
pusha
cmp
hlt
mov
test
add
dec
mov
dec
test
je
mov
xchg
dec
push
push
pop
lock
mov
xor
imul
enter
xchg
test
lahf
aas
repnz
icebp
mov
data16
cmp
jp
jne
sar
xor
xchg
mov
mov
aam
jg
(bad)
pop
sub
arpl
cmp
sub
sti
pop
aad
and
mov
dec
pop
or
xor
addr16
or
sbb
pushf
adc
std
cmp
inc
adc
in
adc
mov
rcr
xchg
std
in
loope
pop
dec
sbb
sub
ds
inc
sahf
pop
mov
sbb
sti
sub
add
dec
(bad)
push
aaa
sbb
into
lds
sbb
dec
xchg
cmp
cmps
stos
or
jmp
and
pop
xchg
in
dec
jp
push
rcr
cmc
das
jo
dec
or
inc
mov
std
pop
mov
fistp
scas
gs
mov
xor
out
stc
clc
es
mov
cli
push
jb
mov
outs
dec
loope
mov
pop
pop
lea
mov
xor
outs
bound
sahf
mov
jae
inc
(bad)
mov
daa
repz
sub
sub
sub
xchg
int3
sbb
fld
fnstenv
cli
xor
sbb
mov
jno
push
fnstsw
push
sbb
iret
je
mov
or
call
pop
dec
into
add
ins
push
inc
jno
inc
in
in
sar
sbb
mov
pop
cmp
or
cmc
pop
out
jmp
mov
xor
iret
repz
xor
fwait
push
rcl
repnz
rcl
fsub
dec
mov
pop
cmc
iret
cld
and
push
ficom
push
xchg
mov
call
jo
ja
or
fldz
push
test
inc
push
clc
mov
rcl
movs
ss
rcl
fld
jbe
jmp
sbb
sbb
cmp
scas
jb
js
pop
push
mov
pop
pop
mov
inc
mov
fisubr
xchg
aam
idiv
mov
sbb
loop
ss
jb
add
ins
repz
(bad)
jle
lock
repz
and
push
cs
cld
in
pop
push
leave
cmp
mov
push
or
imul
inc
mov
data16
mov
mov
loope
sub
mov
xor
dec
loop
sub
sub
dec
pop
das
dec
test
rcl
jno
aas
(bad)
pop
sub
xor
leave
cmp
xor
push
push
out
(bad)
and
dec
pop
push
push
mov
jne
pop
jb
imul
xchg
lock
int3
cli
xor
pop
cmps
out
callw
mov
jle
retf
mov
pushf
cdq
movs
cdq
in
push
dec
xor
or
cmp
out
inc
sbb
xlat
ror
and
outs
jmp
lds
sbb
dec
dec
or
dec
imul
out
(bad)
stos
(bad)
mov
loop
jl
push
hlt
mov
repz
repnz
div
xchg
popa
add
(bad)
xor
mov
pop
adc
ja
cdq
call
shr
xlat
mov
mov
retf
pop
xchg
add
(bad)
std
jl
add
cmp
or
test
push
enter
loope
les
push
cmp
xlat
cwde
push
in
mov
cmps
adc
or
nop
sbb
cld
jmp
out
push
and
fucomip
iret
add
call
push
sbb
(bad)
jo
(bad)
idiv
data16
mov
and
add
aad
iret
cmp
stos
inc
xchg
int3
pusha
xor
lea
dec
xor
cmp
pop
mov
dec
stos
ret
or
or
js
mov
neg
lea
cmp
pop
cli
movs
push
adc
sbb
adc
scas
(bad)
fimul
adc
fcomp
and
daa
test
mov
xchg
xor
(bad)
pop
(bad)
clc
jbe
jmp
pusha
pop
mov
aas
cs
(bad)
test
gs
pop
js
jge
mov
mov
adc
xchg
sbb
xchg
imul
jmp
xchg
leave
dec
retf
js
push
loop
push
jae
dec
movs
dec
ds
xchg
and
out
mov
and
(bad)
push
lods
mov
ror
inc
idiv
lahf
xchg
stc
in
loopne
bound
in
jb
sysexit
or
push
out
pop
dec
sub
in
scas
cli
push
aas
fsub
dec
das
xor
mov
inc
sbb
pop
aam
movs
jb
sub
xlat
cmp
adc
cmp
je
mov
fld
push
pop
mov
cs
dec
fs
xchg
xchg
in
dec
les
push
call
add
dec
jg
adc
ins
sub
adc
cmp
pushf
in
mov
cmp
sub
adc
or
sbb
dec
inc
call
inc
repnz
xor
repnz
gs
inc
clc
xchg
add
out
pop
popf
dec
sbb
pop
mov
pop
gs
loope
fild
inc
jecxz
mov
in
nop
fld
ins
jecxz
xchg
(bad)
mov
push
mov
adc
adc
adc
lock
movs
inc
in
mov
fstp
jecxz
aas
sbb
adc
or
pop
icebp
or
int
pusha
push
cli
push
cmps
in
out
cdq
lods
pop
jnp
cmp
lea
pop
adc
lods
inc
adc
arpl
dec
mov
add
adc
sbb
sbb
push
in
jg
mov
pop
out
hlt
cmp
fbld
jbe
fcomi
mov
in
push
lock
icebp
cmps
inc
imul
stos
int
jo
mov
push
iret
jb
frndint
pop
call
test
add
cwde
lds
sub
test
ret
scas
mov
mov
std
call
call
mov
pop
push
icebp
cmp
imul
sub
pop
(bad)
fs
int
cli
dec
jb
fidivr
add
mov
out
dec
jp
dec
add
add
push
cmp
sub
stos
pop
push
or
bnd
bound
(bad)
into
jb
adc
into
xchg
mov
movs
xchg
or
and
jge
inc
pop
retf
mov
sub
cmp
jmp
push
in
inc
push
add
arpl
ja
mov
sbb
xor
sub
dec
xchg
out
std
inc
and
dec
ret
scas
and
sub
pop
jo
loop
icebp
aam
mov
dec
xor
mov
imul
or
add
je
xor
fxch
out
ins
and
dec
jl
inc
pop
movs
mov
shr
jge
mov
icebp
imul
movs
or
pop
mov
fadd
sbb
cmps
stc
lea
xchg
sbb
and
hlt
jns
pop
push
push
or
sbb
cwde
in
xlat
rcl
gs
sbb
ss
cmp
loope
jbe
jge
jmp
das
jb
fs
mov
sub
fldcw
push
stc
mov
cmp
mov
pop
js
lea
enter
nop
push
adc
arpl
or
lds
cmp
test
mov
add
add
inc
aam
mov
std
cmp
xchg
mov
stos
std
sbb
jnp
jmp
rol
cld
stc
repz
jle
pop
sbb
stos
lahf
cld
inc
shl
and
and
and
jae
sbb
sahf
cwde
jb
fisubr
aas
in
lods
pop
pop
sub
mov
ja
xor
mov
(bad)
fwait
dec
xor
fadd
pusha
int
dec
sbb
stos
movs
inc
adc
pop
ja
dec
cs
pop
mov
mov
lea
jmp
or
fs
in
add
rol
cmp
cmc
mov
adc
jmp
(bad)
cli
pop
lea
jmp
fucom
sub
adc
popa
lods
test
dec
push
mov
sti
xchg
mov
movs
addr16
fcmove
int3
xor
imul
hlt
mov
inc
nop
and
arpl
rol
nop
sbb
sub
push
adc
jle
mov
or
mov
cmp
aaa
or
inc
jns
xchg
stos
xchg
in
in
nop
jno
lods
pop
retf
pushf
ss
shl
dec
dec
movs
xchg
enter
enter
xlat
add
out
cmp
clc
popf
shl
lds
daa
fnsave
gs
push
jecxz
mov
popa
iret
jns
inc
push
cmp
dec
pushf
sahf
in
fst
jmp
inc
add
and
sti
lds
addr16
push
push
or
lea
pop
mov
(bad)
sti
ja
fwait
dec
inc
icebp
lods
out
sub
fsubr
adc
mov
add
mov
movs
cmp
pop
or
adc
cs
mov
and
cmp
sub
daa
leave
hlt
cwde
jns
mov
or
inc
dec
and
imul
clc
push
add
fxch
mov
enter
fmul
push
fwait
ret
pop
mov
loopne
mov
mov
sub
cli
pop
lahf
and
or
sbb
stos
inc
sbb
xor
icebp
addr16
mov
or
push
(bad)
pop
shl
inc
aaa
test
sub
and
movs
add
cli
imul
push
frstor
pop
je
inc
push
adc
int
repnz
xor
add
jmp
push
outs
pop
js
outs
xchg
xor
shl
jo
cli
inc
mov
call
loop
pop
fdiv
out
and
data16
mov
cmc
test
jmp
mov
pop
add
ins
in
jbe
push
jg
jmp
sbb
lods
out
cmp
retf
icebp
fwait
jge
(bad)
pop
push
iret
add
aas
lods
xchg
and
jle
rcr
jmp
in
pop
add
lods
js
aam
inc
jnp
xlat
(bad)
adc
dec
es
repnz
sti
mov
or
mov
pop
push
imul
mov
jno
iret
enter
sub
cmp
fld
clc
xchg
add
sub
std
dec
jg
outs
xchg
mov
(bad)
in
ret
push
lods
pop
(bad)
pop
ins
jne
add
sub
leave
jg
(bad)
xor
xor
mov
pusha
mov
cmp
add
and
arpl
adc
cmp
movs
mov
jecxz
or
jl
hlt
mov
xchg
push
(bad)
clc
fldcw
cmp
xchg
pop
data16
das
mov
adc
push
loop
fs
dec
jae
call
or
inc
jne
test
cmps
inc
dec
push
(bad)
fiadd
or
cld
test
pop
or
xchg
les
xchg
jp
fs
(bad)
jp
arpl
lea
adc
mov
jmp
es
lds
sbb
push
mov
push
push
add
call
pop
sbb
sbb
cmp
xor
mov
xchg
clc
jmp
jmp
leave
jbe
iret
int3
addr16
xor
loop
mov
pop
mov
sub
fld
shl
fnstsw
out
push
inc
push
(bad)
dec
dec
xor
test
inc
dec
add
dec
add
es
in
or
icebp
xor
test
mov
and
icebp
push
pushf
pop
les
stc
jae
lahf
sahf
cmp
sbb
(bad)
shr
dec
add
xor
jecxz
loopne
pusha
iret
emms
mov
lahf
sub
scas
nop
shl
inc
and
jmp
xor
repnz
sub
or
(bad)
in
ficomp
out
xchg
(bad)
lahf
fcom
mov
add
xchg
cmc
(bad)
xor
mov
repnz
out
mov
adc
test
inc
xor
or
dec
xchg
xor
push
vpor
mov
xor
jle
jmp
outs
int
add
hlt
xor
(bad)
or
cs
adc
out
jnp
mov
pop
scas
(bad)
adc
jge
pop
ror
xor
or
inc
scas
addr16
push
mov
jle
lea
scas
repz
fidivr
push
or
and
pop
ret
pop
mov
les
js
inc
test
stos
stc
jne
scas
jmp
cmc
jg
loop
push
add
arpl
in
xor
shl
iret
pop
adc
xchg
inc
mov
enter
push
mov
movs
jle
popa
mov
cmp
sub
imul
push
faddp
push
aam
rol
xchg
adc
add
jmp
push
pop
rol
cdq
das
dec
mov
popf
mov
shl
push
xchg
pushf
clc
mov
dec
jl
dec
idiv
test
cmps
xor
outs
add
push
loop
scas
fnsave
shl
and
cwde
pop
pop
add
stos
leave
mov
add
movs
inc
cld
call
or
jnp
sub
or
push
test
pop
mov
push
and
cmp
mov
xchg
pop
lock
popa
fcomp
cdq
jle
pop
outs
jbe
cmps
loop
and
jl
enter
(bad)
xchg
cwde
xchg
imul
xchg
test
jp
daa
sbb
sbb
test
dec
hlt
or
jbe
call
icebp
cmc
sbb
enter
retf
xchg
push
stc
xchg
scas
jecxz
jnp
out
mul
aas
cmps
sub
cs
rol
xchg
clc
dec
pushf
sbb
cwde
stos
push
and
dec
adc
or
stos
cmp
xor
sub
cdq
push
(bad)
sub
scas
sub
ds
adc
or
outs
xor
pop
sahf
or
push
pop
pop
and
out
in
sub
jne
addr16
or
add
mov
jmp
push
and
push
mov
mov
xchg
cdq
out
add
or
cmp
mov
and
mov
jp
int3
xchg
mov
mov
xor
aad
mov
(bad)
jmp
sbb
(bad)
fsubr
in
test
jl
div
and
sub
or
push
inc
pop
outs
call
mov
adc
or
add
dec
nop
adc
jl
jge
jp
jge
pop
out
ja
adc
in
pop
add
fnstenv
ins
mov
push
cli
mov
sub
push
test
mov
mov
inc
add
jl
pop
pusha
add
stos
daa
jb
je
iret
jbe
ror
aam
push
add
loopne
xor
cmc
xor
lock
mov
push
pop
aas
push
push
push
inc
imul
repz
adc
into
outs
adc
jl
sbb
or
sub
cmps
jp
inc
pop
sbb
cli
fs
ja
mov
nop
cwde
sbb
int3
pop
cmps
and
sub
cdq
repz
xor
xor
pop
inc
xchg
rcl
daa
jl
xor
cli
jns
xor
cli
ret
in
pop
sub
cmp
out
sbb
mov
(bad)
sub
mov
into
mov
inc
enter
nop
inc
out
(bad)
mov
ror
out
xor
scas
lock
(bad)
adc
ds
loop
sti
cs
pop
cmps
movs
or
push
or
dec
sbb
fmul
sbb
leave
mov
pop
mov
inc
movs
call
and
or
or
jb
sbb
hlt
sbb
sbb
cmp
dec
(bad)
lods
pop
adc
aas
cld
inc
cmp
inc
ja
fstp
adc
push
xchg
jmp
std
fcom
hlt
scas
jecxz
jnp
cmps
outs
mov
inc
popa
or
xchg
mov
mov
push
jmp
mov
aas
cmp
pop
ins
jg
icebp
adc
mov
xchg
add
stos
add
test
add
(bad)
fimul
mov
jp
out
or
adc
imul
call
cli
iret
or
data16
fstp
mov
rcl
mov
lods
xchg
add
js
jae
push
imul
jno
push
adc
mov
sbb
xlat
dec
out
addr16
ss
push
xchg
inc
jo
aad
inc
sbb
add
ss
sub
or
sub
mov
icebp
fmul
add
retf
call
sub
ret
jbe
dec
and
inc
aam
icebp
scas
pop
dec
fiadd
into
cwde
inc
data16
call
test
fstp
call
rol
mov
mov
adc
sbb
and
xchg
sub
or
sbb
dec
(bad)
cmp
sbb
(bad)
loop
leave
test
data16
mov
pushf
mov
cmp
add
cmc
jecxz
mov
popa
and
mov
add
lds
mov
es
push
xor
mov
jmp
test
xlat
stc
add
pop
xor
push
ins
mov
enter
cli
retf
ja
mov
jecxz
jg
inc
pop
or
inc
xchg
ror
xor
scas
shl
sub
loope
jb
out
sub
or
add
cs
mov
into
mov
push
dec
mov
popa
mov
xchg
mov
clc
(bad)
dec
xchg
loopne
dec
cmc
cmc
mov
imul
sub
and
and
jl
jnp
vminss
cli
js
mov
test
mov
pop
pop
pop
add
aaa
shl
push
dec
xchg
or
(bad)
fdiv
cmp
out
inc
sbb
(bad)
mov
add
dec
sbb
repz
stos
nop
jns
adc
(bad)
add
sti
xchg
scas
js
pop
adc
sub
push
loope
xchg
outs
sti
xchg
int
mov
mov
cmp
pop
ss
xchg
stos
inc
in
inc
int
sub
sub
sub
cmp
cdq
cmps
dec
push
jp
push
push
inc
ins
mov
cmp
(bad)
xor
jge
fnstenv
cmps
data16
and
sub
mov
jg
and
and
xlat
mov
mov
add
ja
mov
popf
retf
inc
mov
adc
xlat
and
movs
xor
mov
xor
mov
push
push
adc
jp
add
mov
cmps
retf
mov
add
popf
(bad)
jno
mov
push
inc
je
push
jae
movs
jo
sub
cvtdq2ps
pop
or
mov
shl
iret
loope
or
lahf
or
add
mov
inc
retf
push
xor
push
cdq
ins
mov
call
clc
sbb
ret
push
mov
pop
push
call
cmps
inc
pop
psadbw
adc
add
(bad)
push
pop
dec
addr16
xchg
sti
cmc
push
aam
pusha
das
push
dec
add
fisttp
jae
out
jmp
hlt
mov
(bad)
repnz
jmp
into
xor
scas
add
ins
mov
rcr
pop
arpl
mov
(bad)
ror
fwait
imul
sub
lock
add
xchg
or
push
sub
add
jge
xchg
add
cmc
and
gs
shl
stc
add
pop
sub
out
push
fimul
sti
mov
cld
mov
push
jmp
push
in
nop
or
pop
cli
(bad)
lock
mov
adc
shr
es
add
cmp
rol
adc
iret
(bad)
lea
dec
sbb
sub
xchg
dec
repz
cmp
data16
outs
pop
jne
pop
imul
jmp
fs
and
outs
cmp
in
in
cmps
pop
sar
xor
or
or
ja
mov
iret
xchg
dec
bound
push
pop
mov
mov
xchg
loopne
arpl
and
stos
xchg
fistp
pop
in
sub
jmp
pop
cmp
es
and
adc
pushf
xchg
xor
data16
movs
push
lahf
daa
add
call
xor
jge
cdq
sbb
mov
popf
lea
(bad)
inc
dec
fbld
addr16
jae
gs
inc
cmp
ds
add
dec
movs
out
test
sub
cmp
push
and
rcr
ss
inc
lahf
stos
es
xchg
adc
scas
int
aad
push
getsec
cmps
ret
adc
or
xchg
sbb
enter
cmp
add
test
scas
pop
add
fcmovu
lahf
(bad)
xchg
sub
inc
mov
repnz
push
push
mov
dec
loop
rcr
inc
arpl
pop
fidiv
pop
sahf
adc
mov
or
xchg
or
loop
loopne
jns
cmp
rcl
mov
repz
inc
adc
fimul
adc
xchg
jmp
xor
pusha
add
jecxz
and
test
mov
retf
nop
cmp
jbe
push
push
lea
fist
enter
test
xchg
xor
ja
push
cmc
jp
iret
mov
out
cmc
adc
imul
mov
mov
cmps
mov
sbb
repz
add
rcr
xchg
not
shl
imul
js
push
lock
and
and
in
lods
push
jae
and
aaa
mov
sub
imul
mov
js
retf
outs
daa
cmp
inc
pandn
mov
scas
in
or
imul
sub
in
jecxz
leave
imul
ds
mov
cmp
jg
int
cli
jns
adc
cmps
aad
jl
ins
ins
cwde
mov
xchg
adc
push
fimul
inc
arpl
cmp
cli
adc
sub
aas
dec
cmp
dec
enter
movs
test
cmc
scas
lea
xchg
stc
sti
dec
dec
imul
test
adc
ds
ins
push
test
imul
or
xor
dec
xchg
xchg
hlt
dec
call
sbb
enter
inc
ja
xor
fcmovne
cwde
fs
jl
mul
cmps
pop
mov
out
das
sbb
lea
jmp
cli
add
pop
icebp
pop
xchg
arpl
cmp
test
cmp
and
test
pushf
jne
scas
push
xchg
push
cmc
iret
inc
push
mov
sbb
cwde
jmp
push
mov
push
in
int
outs
(bad)
fcmovne
sar
push
dec
xlat
call
mov
sbb
dec
xor
push
lea
ret
sub
int3
fst
mov
mov
cmps
leave
lea
and
aad
in
(bad)
cmps
shl
jmp
inc
lock
pop
mov
dec
xor
sti
ror
sbb
jle
sub
push
inc
sub
xor
add
sub
aaa
push
cmp
cmp
mov
xchg
add
dec
fcomp
mov
test
mov
mov
push
sbb
mov
jge
leave
jb
lods
mov
jo
push
xor
int
std
xchg
sbb
enter
int
jno
pushf
(bad)
dec
loope
sub
inc
xchg
cmps
mov
scas
sbb
leave
mov
cdq
mov
dec
pusha
jmp
cmp
pop
retf
test
mov
lods
dec
pop
in
push
mov
lds
outs
sbb
or
add
es
cmp
bnd
inc
shl
jmp
retf
lock
ror
fld
mov
jae
inc
pusha
adc
dec
add
dec
xor
out
mov
pop
sbb
xchg
nop
aaa
or
pop
mov
pop
mul
lock
outs
fldl2t
mov
neg
dec
lock
pop
(bad)
scas
popa
pop
inc
retf
jbe
in
sbb
adc
mov
mov
adc
dec
std
xchg
fmul
cmp
add
ror
jecxz
cmp
push
push
dec
xchg
idiv
scas
rol
iret
sar
loope
or
mov
sub
jecxz
jmp
add
xor
mov
jecxz
mov
cdq
mov
icebp
jno
and
movs
ins
sub
movs
jnp
inc
sub
push
rol
mov
mov
test
scas
mov
cwde
rcr
ret
shr
shl
inc
or
bound
xchg
pop
je
nop
stos
(bad)
lods
and
dec
sub
jecxz
out
mov
cld
add
push
mov
mov
test
rcr
cmp
xor
mov
ins
int
or
or
sbb
add
out
shr
and
shl
cmc
xchg
jbe
cmp
xor
inc
pop
fsub
and
or
jno
popa
nop
mov
xor
aam
xchg
int
ins
jmp
lods
xchg
jne
fadd
add
adc
sub
pop
adc
leave
movs
cmp
jmp
popf
pop
mov
add
int
pop
xchg
test
lea
sbb
test
sub
mov
xchg
and
ja
pop
xchg
dec
cld
fsub
push
or
es
xor
push
imul
jne
xor
fisub
jne
in
pop
mov
sub
jbe
fnsave
jmp
(bad)
jl
sbb
jno
jmp
popa
jmp
icebp
leave
jno
rcl
fcomp
push
sbb
cmp
jnp
push
repz
hlt
dec
xchg
js
mov
fnsave
inc
cs
and
and
pop
jmp
mov
pop
and
jne
fisub
sbb
cmp
ja
xchg
dec
push
push
test
test
shl
dec
scas
mov
and
jbe
xor
add
into
ds
aad
adc
js
sti
push
dec
div
and
xchg
sub
or
test
pop
mov
xchg
add
and
mov
sub
neg
stc
cld
outs
ins
and
mov
xor
jge
arpl
enter
and
hlt
movs
xor
es
cwde
lods
dec
push
data16
iret
sub
add
add
xor
mov
cmps
je
repnz
shl
inc
in
push
je
iret
sub
mov
add
mov
and
icebp
ss
push
push
cmp
retf
push
into
xor
sub
movs
dec
mov
inc
enter
sbb
add
xlat
push
push
jmp
dec
sub
dec
jnp
rol
xchg
out
pop
lock
or
sbb
cmp
in
xlat
out
and
in
ja
add
pop
in
gs
pusha
push
xor
and
(bad)
adc
jns
jo
ja
pop
shl
test
pop
pop
sbb
jp
sti
ror
and
or
fwait
mov
test
call
mov
mov
and
xchg
retf
dec
mov
js
push
sub
pop
lock
out
adc
pop
retf
cwde
cmp
aas
push
sbb
mov
hlt
out
dec
js
ror
and
cmp
and
lods
jbe
cwde
lock
cmp
jle
in
fs
retf
ret
test
mov
mov
or
mov
pushf
ss
call
add
inc
rol
mov
or
mov
ins
xchg
jae
sub
and
mov
or
out
push
add
fdiv
inc
dec
lods
in
test
fisub
sbb
mov
adc
imul
loop
ret
and
repz
pop
pop
cmp
dec
inc
fistp
xchg
xchg
ret
sbb
test
pop
movs
add
xchg
psrlw
inc
jg
push
pop
outs
pop
and
daa
mov
retf
xchg
pop
mov
pop
pushf
pop
popa
mov
xor
out
movs
sub
xchg
xchg
add
fdiv
sub
aas
loop
jmp
pop
fisttp
outs
jecxz
cmp
les
jg
jl
aam
or
mov
(bad)
pop
rcl
dec
out
pop
int3
jmp
iret
sub
scas
into
push
push
(bad)
jns
ins
xchg
lock
mul
jmp
pop
mov
xchg
or
imul
scas
jge
(bad)
clc
and
fdivr
xor
push
mov
jecxz
fcom
fsubr
mov
int
rol
retf
sar
push
pop
mov
test
gs
adc
jp
call
push
sub
mov
rcl
sub
aad
xlat
sbb
sar
or
(bad)
addr16
or
sbb
mov
xchg
int
arpl
sub
inc
btr
pop
sub
dec
inc
js
popa
push
cwde
push
push
jl
popa
stos
inc
in
pop
push
xor
dec
in
hlt
push
sub
int3
push
jecxz
stc
dec
test
xchg
mov
pusha
in
shl
jmp
mov
add
mov
inc
xor
(bad)
dec
or
int3
scas
call
push
sub
adc
push
jno
xchg
cs
retf
pop
outs
push
dec
sahf
lds
out
mov
mov
mov
xchg
lods
call
push
sub
and
cmps
test
adc
iret
sub
dec
sub
movs
aad
sub
inc
push
mov
lock
mov
mov
mov
fmul
mov
repnz
push
mov
jl
mov
mov
inc
(bad)
aam
pop
aad
psubw
scas
or
ins
mov
sbb
mov
ds
dec
lahf
or
int
cmp
shl
push
imul
inc
adc
mov
iret
adc
mov
xchg
sub
jo
sbb
inc
in
cmp
sub
inc
pop
and
loop
push
dec
fimul
xor
jg
outs
fldcw
dec
sbb
outs
sti
sbb
ret
xchg
pop
dec
xor
push
(bad)
(bad)
(bad)
(bad)
jbe
inc
imul
cmp
repnz
dec
sub
cmp
inc
inc
jecxz
into
mov
into
enter
popa
gs
jg
jge
sbb
repz
aaa
fistp
sub
std
mov
adc
add
or
jg
nop
xchg
mov
jmp
nop
inc
lods
sbb
cmps
call
mov
out
lock
cwde
pop
shr
push
xchg
fist
outs
inc
xchg
xchg
stc
ror
lahf
jl
xchg
sar
aas
loope
in
mov
in
dec
xor
push
inc
add
fisub
into
popf
and
xor
xchg
mov
adc
test
pop
and
aad
mov
mov
ret
sbb
and
jae
add
leave
inc
sbb
xchg
fnstenv
cmp
das
jmp
mov
add
dec
addr16
retf
push
pop
xchg
push
add
and
adc
or
int3
pusha
dec
test
fldcw
fst
mov
sub
jae
fsubp
xchg
dec
mov
xchg
test
mov
add
out
push
push
add
jmp
arpl
ret
mov
bound
call
mov
cdq
hlt
add
cli
mov
frstor
mov
std
test
test
xchg
or
int3
jecxz
cmp
aas
icebp
xor
arpl
jnp
aaa
data16
mov
mov
xchg
push
dec
test
jae
lods
das
mov
cmc
in
sub
ja
loop
call
mov
jmp
pop
movs
mov
jnp
retf
sub
aaa
test
clc
xor
cld
clc
js
add
sbb
and
xchg
jl
fadd
jecxz
add
jp
jl
and
test
mov
not
mov
lahf
sub
cld
adc
cmp
(bad)
ret
imul
bnd
cmp
ins
sahf
and
push
mov
jp
ret
fdiv
repnz
mov
adc
xor
and
xchg
add
rcl
mov
sbb
aad
adc
dec
lods
jl
imul
daa
fisttp
outs
xor
lods
mov
pop
or
or
push
ret
psubsb
je
cmp
mov
mov
test
aas
mov
sbb
outs
xchg
mov
ja
sub
dec
sbb
shl
cmps
jb
cmp
sub
push
fidiv
adc
adc
mov
sbb
popf
mov
push
into
xor
in
ror
sbb
(bad)
imul
inc
add
add
cdq
addr16
std
xchg
add
hlt
inc
lods
cmp
lahf
(bad)
leave
mov
jmp
sub
mov
add
sub
pop
lods
in
mov
xor
push
fadd
fidiv
js
mov
ret
sub
sub
dec
sbb
mov
aam
popa
dec
cmp
dec
mov
mov
jns
arpl
int
cmp
pop
aad
cwde
idiv
add
add
or
sbb
or
mov
pop
jo
sub
lahf
out
sub
in
sbb
sbb
cs
pop
push
adc
movs
fsub
xor
inc
fadd
push
pushf
xlat
cmps
xchg
stc
fs
xchg
xlat
dec
or
cmps
mov
pushf
push
mov
addr16
mov
fsubr
jmp
cmps
stc
lock
cmps
xchg
pop
or
push
xchg
fs
pop
(bad)
jmp
push
in
adc
xchg
into
fwait
cdq
pusha
dec
fdivr
add
xchg
inc
repz
sti
dec
or
shl
push
dec
sbb
mov
cdq
in
push
inc
loope
add
shr
xchg
imul
pop
nop
mov
push
mov
aad
push
xchg
ret
sub
push
pop
lds
call
sub
add
and
sbb
mov
mov
lods
push
adc
mov
(bad)
and
leave
in
movs
aad
jmp
test
or
retf
jo
push
sub
or
cmp
mov
adc
sub
inc
push
push
addr16
mov
push
icebp
dec
mov
rcl
out
mov
pop
(bad)
loope
cmp
mov
pop
sbb
inc
adc
add
inc
popf
fadd
popa
outs
mov
lods
inc
cmps
jmp
(bad)
jmp
dec
ja
add
dec
push
push
fst
call
jle
fwait
pop
out
pop
ja
adc
mov
jp
lea
addr16
mov
mov
mov
out
and
mov
int3
cdq
cld
les
adc
sub
popf
pop
fild
bound
jecxz
aad
test
lods
pop
xchg
pop
int
inc
cmp
into
sub
nop
xchg
(bad)
out
cdq
adc
and
ret
repnz
xchg
pop
es
or
sub
gs
inc
jb
imul
mov
xchg
and
stc
mov
xor
ds
aas
fisub
shl
in
or
popa
pop
adc
icebp
mov
retf
out
mov
or
inc
(bad)
cwde
out
pop
add
pop
jmp
push
repnz
mov
dec
mov
sbb
mov
jge
daa
fnstcw
(bad)
sbb
jnp
xor
into
xor
push
dec
fucom
push
addr16
xchg
shl
shl
cmp
xchg
or
addr16
pop
nop
jnp
xor
pop
mov
in
shr
and
mov
mov
lds
rcl
push
xor
shl
sbb
dec
sbb
or
inc
mov
inc
cli
gs
pop
xor
pushf
fs
push
icebp
mov
dec
pop
dec
jmp
inc
sbb
dec
pop
jp
push
xchg
aam
outs
mov
(bad)
xor
xor
imul
xchg
jecxz
push
jae
fcomp
jnp
scas
sbb
dec
sbb
(bad)
shr
das
sub
push
aam
in
xchg
(bad)
mov
into
icebp
sbb
in
xor
mov
addr16
xchg
xor
xor
loope
arpl
push
movs
scas
out
(bad)
dec
lods
push
xchg
jns
pushf
push
xor
inc
jp
sbb
out
push
and
inc
xor
ss
(bad)
into
xchg
(bad)
ins
lahf
and
jge
shr
mov
mov
mov
push
dec
std
pop
retf
sbb
and
cmp
mov
mov
shl
movs
mov
add
mov
push
jns
in
bound
mov
outs
retf
ja
push
test
cmp
pusha
jbe
ror
xor
lds
movs
push
cdq
lock
mov
mov
pop
int3
push
int3
add
pop
xor
adc
icebp
cwde
stos
popf
test
inc
aaa
xchg
xchg
cs
xlat
xchg
popa
outs
pop
sbb
fs
sub
push
aam
cs
mov
outs
push
add
sbb
mov
jl
scas
cdq
cmps
lds
push
shl
sub
adc
stos
mov
scas
adc
jecxz
adc
mov
sub
rcr
mov
out
cmp
ins
scas
dec
push
(bad)
push
ror
mov
sub
into
ficom
or
clc
jle
xchg
cmp
add
and
ins
mov
out
inc
shl
cmc
ret
sub
data16
aad
hlt
mov
or
ror
pushf
in
cmp
leave
in
clc
push
call
xchg
loop
push
xor
cmc
repnz
pop
lea
stc
push
mov
cmp
ins
pop
dec
mov
in
test
cmp
and
inc
add
push
sbb
xor
(bad)
ret
loopne
das
mov
in
xchg
ja
sar
jle
jb
test
(bad)
mov
jo
push
inc
cdq
aaa
pop
aas
std
adc
leave
cmc
xchg
pusha
or
jb
push
(bad)
cwde
inc
cwde
pop
test
xor
lods
(bad)
sub
cli
sub
adc
aad
test
mov
xchg
push
hlt
dec
or
cmp
aaa
xchg
sub
scas
aad
loopne
mov
test
mov
cmp
sub
xchg
push
movs
in
and
xor
sbb
daa
push
test
inc
cld
cmps
or
and
inc
push
repz
fisttp
stos
test
add
and
fld
neg
out
rol
dec
cmp
add
leave
out
int3
mov
sbb
sbb
or
sbb
jo
dec
jno
cmp
bound
push
dec
dec
mov
push
jns
or
dec
or
call
xchg
inc
or
imul
daa
cmc
push
ds
or
dec
and
in
aad
xchg
jb
sub
adc
push
fisub
loopne
jmp
sub
pop
adc
int
add
cmp
mov
jno
sbb
xchg
inc
sbb
lods
push
(bad)
xor
test
ins
cmp
xor
cs
dec
adc
or
push
ins
js
inc
inc
(bad)
mov
nop
fwait
sbb
dec
ins
sub
mov
sbb
cmp
stos
ret
jns
pop
xor
push
jo
xor
cmp
jmp
cdq
test
daa
add
mul
cmp
fsubr
bound
jg
loop
sahf
test
rcr
movs
movq
mov
jge
dec
in
push
mov
jno
(bad)
jl
cmps
sbb
popf
mov
fcomp
(bad)
enter
call
or
jmp
mov
cli
xchg
sub
jp
les
into
jge
cmps
fwait
xor
call
bound
pusha
add
push
pusha
outs
pop
pop
data16
dec
jns
das
enter
mov
pop
mov
push
cmps
jno
pop
leave
push
and
lahf
inc
sub
rol
mov
test
fsubr
xchg
or
fwait
lods
ds
or
cmp
lds
pusha
fwait
dec
sbb
add
pushf
(bad)
call
loope
xchg
call
stc
pusha
sub
push
xor
sahf
sub
retf
xor
fwait
lock
cs
idiv
jnp
cmp
mov
ins
int3
cmp
fst
das
xor
push
jge
je
hlt
(bad)
leave
sbb
fcmovu
dec
xor
shl
sbb
cmp
push
hlt
mov
popf
int
push
mov
ret
push
idiv
test
cmp
pop
in
icebp
ds
and
pop
out
cmps
idiv
pop
or
cwde
int3
and
cld
inc
out
mov
xchg
jnp
shl
pop
xchg
das
mov
aam
icebp
mov
add
or
jae
push
dec
sbb
inc
addr16
outs
fistp
jl
repz
cmp
loopne
xchg
dec
mov
jno
push
ja
xor
dec
ficomp
stos
jmp
cld
js
stc
test
cmp
(bad)
cmp
imul
js
add
repnz
fcmovu
test
inc
faddp
pop
lods
mov
mov
sbb
loop
arpl
retf
loop
or
cmps
push
js
ret
push
fmul
je
push
push
call
js
mov
jnp
mov
sub
add
ds
aam
adc
mov
aaa
xchg
aam
jg
into
push
xchg
hlt
sahf
pop
xlat
enter
mov
xchg
adc
mov
js
pop
pop
(bad)
xor
enter
add
test
xchg
mov
xor
dec
jbe
cmps
xchg
jg
dec
(bad)
pop
rcl
rol
mov
inc
cmp
test
push
nop
dec
pushf
adc
xlat
dec
aam
lds
cmp
adc
cmc
fs
jmp
cmp
ret
movs
pop
jnp
dec
fwait
cmp
cmp
in
(bad)
fadd
inc
call
aaa
xchg
or
(bad)
xchg
inc
push
add
(bad)
xor
cmp
cmp
adc
xchg
mov
(bad)
into
mov
das
jnp
mov
jmpw
in
repz
fst
adc
retf
xchg
les
or
dec
(bad)
jns
cmps
xchg
mov
mov
nop
loop
cmp
iret
gs
int
in
mov
aad
test
pusha
imul
(bad)
rol
ror
push
pushf
dec
mov
shl
bound
pop
movs
jne
sbb
sub
sub
iret
xchg
mov
das
pushf
shl
daa
iret
xchg
xor
jmp
repz
cmp
xor
int
add
je
movs
push
sti
push
xchg
or
ret
dec
cmp
xchg
xchg
mov
addr16
sbb
call
push
popf
push
push
pop
out
lock
xor
lock
mov
inc
shl
sub
xchg
fwait
adc
jp
pop
sahf
xor
dec
and
cld
loope
sub
gs
daa
xor
or
cs
mov
clc
and
adc
or
cdq
push
sar
rcr
out
mov
pop
outs
mov
push
cld
out
outs
fwait
pushf
push
xchg
cli
mov
sbb
xor
pop
mov
fist
lds
push
mov
imul
movs
jle
(bad)
std
repnz
xor
rol
and
cld
pop
mov
inc
and
in
sahf
and
pop
push
popa
dec
sti
xor
dec
sbb
movs
push
or
inc
xor
mov
or
add
sbb
gs
arpl
cmc
and
(bad)
mov
mov
mov
in
(bad)
mov
lock
fwait
rcr
fmul
mov
ret
not
call
mov
int3
shl
shl
and
sub
mov
(bad)
push
xchg
inc
jl
(bad)
scas
jl
sbb
inc
cmp
inc
jo
into
xchg
xchg
fs
mov
add
mov
iret
xlat
stc
enter
ja
push
xchg
fdivr
adc
jl
call
jb
xlat
adc
pusha
adc
sbb
ret
dec
pushf
lock
outs
and
lahf
xor
hlt
test
(bad)
dec
mov
cwde
gs
lea
or
scas
add
fcom
fnstenv
xor
dec
call
jae
in
add
sub
inc
pushf
push
push
cdq
aaa
xor
adc
dec
shl
test
push
xchg
lock
aas
jmp
enter
fisubr
sub
loope
dec
mov
mov
punpcklbw
and
je
pop
sub
(bad)
sbb
mov
or
fwait
into
into
xor
adc
jmp
push
pop
xchg
jbe
(bad)
fisubr
cmps
popf
fwait
push
imul
(bad)
scas
test
jge
inc
test
pop
mov
add
ja
mov
shl
mov
in
jmp
shr
stos
push
cmps
shl
jns
cmps
push
data16
ins
add
imul
cmps
add
fcom
and
mov
xchg
iret
mov
mov
aam
popa
ror
lods
inc
les
int3
(bad)
or
cdq
pop
js
js
mov
jle
sbb
push
pop
lock
and
or
and
xor
jnp
xchg
sub
stc
fadd
sti
imul
imul
lods
pop
inc
scas
ret
arpl
retf
and
popa
mov
jb
leave
shr
and
pushf
xchg
inc
test
in
sti
jae
in
out
rcl
ror
addr16
hlt
hlt
dec
cmp
inc
std
cmp
and
(bad)
cdq
xchg
and
movs
sbb
mov
(bad)
scas
(bad)
(bad)
neg
push
ds
repz
idiv
fcomip
adc
push
out
cmps
test
pop
out
int
adc
and
inc
stos
enter
mov
mov
jge
sbb
fst
retf
adc
pop
mov
pusha
dec
xchg
inc
sbb
cmps
rol
fldenv
arpl
push
test
cdq
shl
cmp
xor
sub
mov
dec
out
test
sar
mov
dec
xor
bound
adc
test
aaa
jmp
jg
dec
push
inc
or
pop
mov
pop
inc
mov
add
cwde
jmp
xor
mov
lods
fidivr
inc
fcomip
jl
pop
movs
add
stc
inc
sbb
mov
lds
cs
cmps
daa
repz
pop
jne
call
sbb
pop
call
dec
inc
sub
popf
or
das
dec
ds
xchg
jb
mov
clc
push
shr
fistp
cdq
jmp
test
push
jno
js
stos
(bad)
imul
fstp
pusha
aad
jnp
pop
in
addr16
mov
fsubr
js
mov
mov
pop
add
(bad)
or
add
cmp
xor
lahf
lods
ja
mov
sub
adc
scas
or
mov
fadd
ja
int
rol
xchg
push
xor
mov
dec
xchg
inc
repnz
dec
out
rol
bound
outs
in
ret
ret
pop
fimul
dec
xchg
ja
and
rcl
sbb
jmp
dec
data16
pop
fcomip
jae
mov
mov
scas
sub
push
sbb
ret
or
push
stc
dec
jmp
adc
enter
imul
shr
shl
mov
test
and
retf
imul
movs
gs
push
clc
xchg
shl
jle
push
xchg
test
jne
mov
pop
in
aas
adc
movs
popa
mov
sti
dec
sub
xor
mov
(bad)
sbb
div
pop
jecxz
call
div
pop
sbb
push
(bad)
ficom
pusha
js
push
push
out
ja
mov
mov
push
rcr
out
frstor
mov
push
pop
xchg
rcr
sbb
ja
pop
sbb
(bad)
out
jmp
repz
aaa
(bad)
shl
or
in
pop
xchg
inc
mov
out
sbb
int3
sbb
xor
xchg
and
sub
mov
push
ror
sbb
cmp
add
push
inc
les
mov
test
mov
retf
in
das
xchg
cmp
pop
mov
in
sub
push
cmps
inc
jmp
jl
mov
dec
add
or
pop
jmp
jle
dec
(bad)
imul
and
in
retf
outs
sahf
mov
add
jmp
scas
pushf
add
cmps
cwde
into
xor
loopne
xor
cmps
dec
pusha
in
in
mov
cs
mov
push
scas
pusha
mov
mov
je
mov
nop
inc
dec
mov
add
xchg
jp
or
arpl
xchg
xor
xchg
ficomp
adc
and
jae
dec
repz
popf
pop
or
or
push
arpl
add
bound
mov
inc
jl
sahf
pop
std
outs
and
or
push
in
std
seta
fnstsw
shr
dec
jns
cmp
push
scas
fidivr
test
xchg
mov
sub
push
cmps
push
int
dec
add
sti
enter
xor
dec
pushf
inc
sbb
aaa
ins
jmp
stos
lods
(bad)
xor
js
dec
mov
test
sub
(bad)
jmp
sbb
ror
ja
out
sub
stc
sbb
outs
sub
mov
xor
xchg
repz
call
and
cmps
aaa
in
push
bound
ins
je
or
sub
adc
mov
mov
jbe
push
adc
or
push
push
call
add
xor
std
fwait
pop
mov
int3
jne
test
push
ins
add
popa
aam
or
push
sar
add
cli
mov
(bad)
and
ss
mov
inc
dec
mov
add
or
pop
or
dec
js
inc
xlat
aam
cmp
push
ds
xchg
pop
jne
xchg
push
mov
clc
std
sub
repnz
pop
xchg
dec
jecxz
das
adc
mov
gs
pop
fcomp
jle
jge
inc
std
fadd
pop
xchg
sub
mov
adc
out
jle
adc
mov
ret
and
cmp
push
mov
dec
inc
mov
mov
mov
mov
dec
or
(bad)
sar
sub
mov
cmp
jmp
call
ror
push
sub
push
xor
mov
mov
or
pop
dec
pop
mov
mov
pop
lock
push
xchg
std
jbe
or
cli
js
and
fst
push
lea
cmp
dec
cs
dec
bound
cmc
imul
dec
mov
int
adc
pop
mov
mov
mov
nop
mov
sub
fcomp
sbb
mov
jge
in
sbb
iret
jmp
fnsave
ret
imul
repz
jbe
sub
mov
xchg
cmp
lods
jecxz
jg
retf
push
cmps
lahf
mov
daa
rol
sub
adc
dec
das
retf
sbb
das
inc
sub
push
xchg
(bad)
stos
push
ret
push
ror
data16
jg
(bad)
mov
in
daa
add
dec
inc
std
pop
sahf
adc
mov
cmp
outs
outs
movs
xor
fistp
xchg
in
dec
mov
out
leave
adc
sti
test
push
mov
lock
iret
sbb
inc
xchg
ret
pop
adc
ja
sbb
or
je
leave
retf
pop
dec
scas
adc
xchg
xor
test
and
cmp
xor
mov
mov
ret
dec
cmp
fcom
add
and
fs
jmp
push
xchg
push
push
mov
mov
and
(bad)
hlt
(bad)
mov
imul
mov
mov
int3
outs
cmp
xchg
iret
cld
adc
fldenv
(bad)
loope
lea
repz
jne
retf
xchg
and
out
inc
lea
cwde
pop
int3
imul
in
mov
mov
or
fcomp
in
mov
js
adc
adc
lahf
retf
arpl
mov
in
or
cli
push
adc
scas
lea
and
and
add
retf
or
call
mov
jns
pop
stos
fistp
inc
call
nop
sbb
push
inc
sub
cmp
fcmovu
pusha
push
imul
cli
daa
or
(bad)
lods
pusha
in
pop
(bad)
fidiv
jge
push
std
or
call
out
jecxz
icebp
cwde
mov
mov
cld
inc
xor
xchg
in
cli
xor
movs
mov
fucom
inc
in
push
out
dec
cmps
aam
cmp
nop
pop
call
pushf
cmp
jmp
xchg
sbb
call
mov
shr
adc
sbb
mov
mov
pusha
push
sub
sub
lods
ja
xchg
push
ins
jecxz
cmps
xor
jg
push
cmp
mov
lds
adc
mov
pop
dec
or
mov
movs
dec
or
pop
(bad)
mov
test
fwait
call
rcl
imul
cmp
mov
and
and
pop
movs
std
cmps
vsqrtpd
aad
in
xchg
cmp
dec
or
mov
aas
sbb
push
std
jb
pop
fld
mov
movs
xchg
adc
add
ss
mov
and
nop
lea
cmp
cmp
jmp
movs
xchg
or
push
js
push
adc
dec
xor
ja
addr16
cld
stc
retf
outs
fisubr
xchg
push
cmps
mov
cld
sbb
xchg
ja
jns
ds
loop
mul
rol
repnz
(bad)
dec
lods
bound
out
(bad)
xor
or
push
mov
inc
imul
adc
int
jecxz
push
sub
in
or
adc
adc
sub
into
jne
fcmovbe
inc
mov
stc
mov
push
iret
push
mov
out
in
push
xchg
or
popa
nop
pop
or
aam
sub
(bad)
jecxz
cli
cmps
rol
jle
popf
xor
dec
(bad)
jnp
mov
ffreep
mov
add
jl
dec
adc
dec
xchg
call
cmp
stc
dec
push
data16
fidiv
fild
xor
jnp
sbb
jge
xor
out
jg
inc
loopne
movs
xchg
sahf
test
cdq
mov
sbb
mov
js
jl
xchg
xor
fst
arpl
pusha
or
ret
lods
xchg
or
mov
imul
add
mov
sub
jo
xor
or
imul
mov
ins
mov
xor
aad
in
push
mov
iret
stos
dec
bound
fistp
psrld
mov
jns
dec
jp
cmps
in
inc
mov
or
das
addr16
push
ficom
and
jp
push
popa
pop
push
les
mov
or
div
and
sub
fnstcw
push
cmp
gs
push
mov
inc
ins
call
pop
jmp
and
mov
jns
sub
push
inc
stc
into
test
hlt
pop
ds
and
dec
cdq
aam
xchg
push
mov
lea
mov
jne
cmp
fldcw
lods
arpl
cmp
mov
int
fld
jmp
in
pop
inc
mov
pop
mov
sub
lock
dec
inc
cmps
add
retf
clc
xchg
test
xchg
sub
shr
cli
xchg
mov
xor
ds
sub
inc
add
sar
fucom
mov
(bad)
mov
cmps
dec
cs
push
mov
cdq
ds
hlt
cmp
imul
jb
(bad)
jl
nop
loop
mov
retf
nop
ret
push
pop
or
push
lock
and
adc
lods
pop
xchg
ja
add
gs
push
repnz
push
mov
(bad)
fistp
imul
sahf
iret
push
cmps
outs
loopne
adc
mov
inc
jns
adc
cmp
in
je
(bad)
retf
mov
hlt
js
jge
repnz
rcr
add
xor
enter
ins
es
jmp
rol
test
or
add
ja
test
rcr
pop
pop
mov
or
jp
add
push
add
lods
xchg
(bad)
rol
bound
faddp
xchg
aad
fild
xor
cmp
pushf
cld
aas
aaa
adc
push
or
fmul
mov
cmp
xchg
adc
bound
inc
imul
(bad)
not
push
mov
mov
loope
mov
call
(bad)
call
push
pusha
mov
push
dec
stos
dec
retf
sbb
dec
sbb
sub
lea
(bad)
jb
and
pop
mov
cmp
mov
scas
cmp
sbb
sub
inc
xlat
pop
sub
sub
retf
mov
inc
stc
dec
in
adc
cmp
dec
fsub
out
adc
sti
push
add
test
push
cmp
or
push
movs
jle
div
test
mov
sbb
cmp
adc
jle
inc
jl
cld
jo
sahf
push
lods
sub
outs
pop
dec
add
and
fdiv
or
dec
fsub
ss
jg
cli
cmps
inc
mov
mov
cld
std
xchg
cmp
ja
or
(bad)
xlat
loope
dec
adc
mov
push
mov
ja
xchg
jne
lods
jmp
mov
jp
out
xchg
mul
(bad)
das
xlat
aad
or
sti
mov
pop
int
adc
mov
mov
push
mov
push
leave
dec
sbb
inc
cmp
sar
jg
mov
loopne
mov
fisubr
repz
lahf
jne
jle
dec
push
adc
mov
setb
sub
adc
jbe
outs
pop
pop
stc
inc
lds
mov
cmp
jecxz
mov
adc
iret
inc
aaa
pusha
add
adc
jo
fdivr
fcom
loopne
pop
push
mov
movs
ror
jno
rol
hlt
rcr
stos
cwde
add
call
sub
pop
mov
or
loop
cdq
sbb
pushf
or
in
ret
(bad)
sbb
test
push
pop
lods
ins
das
outs
ret
jbe
das
sbb
outs
xchg
outs
in
not
sub
sbb
jo
neg
rcpps
pop
jge
cmp
sbb
push
and
test
xchg
test
mov
test
adc
sbb
add
and
cmp
add
dec
rcl
das
xor
gs
cmp
ja
xor
call
hlt
(bad)
or
stos
or
xor
imul
pusha
pusha
retf
xor
aad
sahf
sub
not
in
lea
(bad)
fild
pop
jns
jg
jmp
sub
sbb
sahf
addr16
xchg
into
movs
xor
mov
stos
sbb
imul
fild
mov
inc
mov
xchg
inc
xor
push
enter
mov
push
add
and
inc
pop
mov
loope
mov
in
mov
mov
mov
xor
jg
retf
jns
push
dec
iret
sbb
xchg
push
dec
lods
adc
pop
gs
pop
addr16
jl
inc
jmp
push
ins
adc
pop
loope
cmp
sahf
xor
adc
sbb
jmp
ss
daa
daa
fadd
js
pop
inc
out
out
jnp
inc
add
out
xor
call
mov
add
xchg
xor
jae
sahf
push
(bad)
das
addr16
mov
sbb
or
mov
mov
mov
push
cmp
pop
jg
xor
stos
jns
daa
pusha
push
sti
vpmuludq
mov
jae
js
lea
sub
cmp
or
fstp
add
test
es
adc
mov
xchg
out
stos
std
cmp
iret
or
lock
int
imul
stc
aaa
test
into
sti
out
lods
pop
dec
nop
cdq
xor
aas
mov
xor
or
inc
scas
sti
out
rcr
or
fwait
pop
pop
mov
jns
test
or
sbb
test
mov
pushf
dec
mov
lahf
pop
bound
mov
test
push
pop
push
hlt
dec
jns
test
xchg
adc
rol
sub
ret
dec
ins
aad
adc
and
imul
dec
mov
pop
psllw
aaa
jne
jno
jo
cmp
stos
test
cmps
pop
push
ins
xchg
stc
pop
fidivr
and
enter
push
mov
outs
es
in
popa
imul
mov
out
mov
mov
inc
icebp
nop
mov
addr16
adc
mov
outs
mov
ficomp
imul
retf
and
inc
sbb
lods
jb
outs
push
jecxz
sub
addr16
cwde
out
jne
fiadd
ficomp
pop
or
xor
mov
js
shl
xor
js
fcmovnbe
hlt
cdq
pop
jmp
sub
or
sub
test
shl
out
jg
xor
pusha
clc
(bad)
pop
or
sahf
mov
pop
out
rep
ins
aaa
sub
jg
fsubr
dec
adc
call
sbb
sar
mov
int3
push
jo
les
xchg
add
sbb
out
hlt
push
cld
cmp
lea
or
inc
in
data16
sbb
mov
daa
add
rcl
push
dec
xchg
cmp
mov
jb
nop
test
add
icebp
jnp
(bad)
shr
ss
xor
lods
cmove
les
jmp
xchg
inc
scas
mov
or
(bad)
ret
call
fbstp
pop
sbb
mov
leave
cld
xchg
mov
and
mov
mov
jnp
and
sub
call
sbb
inc
mov
loopne
in
popa
sbb
imul
pop
cmps
xchg
lahf
imul
and
out
(bad)
idiv
js
push
aaa
mov
sub
cmp
jecxz
xchg
add
mov
fcomp
adc
push
retf
or
ja
pop
gs
jecxz
nop
sub
arpl
loop
es
inc
mov
sub
pop
adc
cmps
mov
xor
and
and
into
sar
and
mov
xor
(bad)
call
loopne
cwde
add
xchg
(bad)
outs
pop
pop
push
adc
test
js
test
dec
xchg
push
(bad)
pop
push
push
daa
jmp
neg
pusha
rcr
inc
mov
mov
cmp
std
in
hlt
clc
retf
inc
daa
ret
outs
outs
cmc
ja
mov
aam
(bad)
scas
ret
cmps
div
out
cmps
ror
ins
pop
jle
in
ds
inc
dec
pop
hlt
jle
and
push
sbb
inc
mov
pop
dec
mov
cmps
sahf
addr16
ins
dec
pop
fisttp
neg
cmp
lods
jno
rcr
pop
and
adc
cld
arpl
add
jno
mov
adc
int3
fld
xchg
sahf
or
mov
and
daa
jno
push
mov
test
shl
push
sbb
mov
dec
push
pop
and
xchg
scas
pop
hlt
sbb
jp
(bad)
jae
or
push
sbb
cmps
nop
jle
sub
push
cld
push
mov
cmp
das
jp
xor
add
pop
dec
int3
or
out
add
mov
mov
js
add
int3
fld
dec
sysret
rcr
cwde
push
iret
add
and
pusha
xor
inc
fs
sahf
mov
ins
push
dec
ss
push
pusha
ret
add
fwait
ins
in
cld
mov
jge
xor
nop
lods
inc
push
push
mov
pop
dec
push
mov
fucom
pop
mov
popf
not
data16
jp
sbb
imul
in
pop
xchg
icebp
adc
sbb
addr16
mov
sub
out
mov
sahf
jns
loope
popf
mul
jne
or
push
mov
mov
aas
lahf
sub
ror
xchg
test
mov
and
pop
cwde
pusha
lods
xor
sub
cli
jbe
std
movs
fild
rol
int3
push
adc
jb
(bad)
push
shl
mov
mov
sub
and
call
test
mov
(bad)
dec
pop
fld
fsub
popa
dec
inc
push
movs
retf
repz
jge
cmc
pop
mov
or
push
das
cmp
jge
adc
and
(bad)
(bad)
cmp
dec
pushf
cwde
fstp
hlt
test
mov
and
out
popf
jl
xor
retf
mov
inc
pushf
add
sub
dec
aas
or
cli
jo
jb
adc
and
mov
mov
pop
xlat
pop
(bad)
mov
out
scas
mov
jb
jns
cmp
ins
mov
fs
imul
and
sub
std
(bad)
mov
aaa
rol
jmp
or
or
in
sbb
into
cmps
pop
adc
nop
pop
pop
mov
jg
xchg
dec
mov
cmp
inc
int3
jecxz
or
shr
mov
sbb
pop
or
mov
mov
jg
xor
mov
bound
movs
mov
(bad)
jnp
pusha
push
xchg
push
pop
pop
cs
push
cmps
outs
jl
rcl
lea
lock
bound
dec
retf
cdq
cld
les
loope
cmps
aam
push
inc
jle
add
inc
shr
cld
adc
sar
add
movs
mov
push
jge
jae
and
jmp
stc
sub
(bad)
jmp
push
bound
and
les
pop
mov
inc
aas
lahf
bound
xchg
rcr
sub
mov
sti
fiadd
pop
jp
dec
mov
xor
adc
ret
mov
sbb
(bad)
xchg
push
mov
cmp
xchg
and
pop
inc
and
jnp
arpl
cli
inc
jecxz
inc
add
pop
mov
bound
sbb
jge
push
ror
jmp
enter
(bad)
mov
int
and
dec
iret
sub
jae
or
inc
xchg
inc
imul
int3
inc
inc
movs
popa
je
or
sti
gs
int
mov
lock
push
sbb
cmp
cmc
mov
adc
mov
mov
push
mov
aam
in
je
mov
jge
in
cmp
mov
cmp
or
xchg
cmps
in
xchg
stos
sub
pop
int
shr
leave
sbb
push
ret
cmp
pop
(bad)
data16
je
cdq
out
inc
push
arpl
sub
add
mov
scas
cmp
cmp
dec
mov
daa
cmp
js
lods
sahf
jg
pushf
push
push
mov
shr
leave
mov
dec
xchg
cmp
daa
or
inc
xchg
cwde
or
mov
in
(bad)
push
push
out
sub
in
dec
lahf
and
cmps
in
repz
add
mov
pop
enter
fstp
pushf
push
sti
and
mov
out
cmp
and
loop
or
push
inc
xor
movs
test
cmp
fldenv
sbb
test
mov
scas
jmp
gs
xchg
mov
mov
inc
mov
mov
adc
adc
mov
mov
jmp
mov
rcr
or
cs
sahf
out
fdivp
jecxz
push
fistp
(bad)
rcl
sub
gs
jbe
mov
imul
aas
adc
std
cmp
xchg
xor
sub
das
pop
pop
mov
cmp
mov
in
ja
jp
retf
xchg
arpl
xor
mov
leave
sub
(bad)
pop
push
loop
jmp
xor
mov
xor
test
clc
adc
sar
inc
cdq
mov
fwait
sub
pop
push
push
and
das
inc
ss
imul
ja
jno
in
pop
cwde
ret
jne
ror
pop
push
mov
and
jge
popf
rcr
jg
cld
xor
dec
arpl
stc
xor
jno
or
(bad)
movs
leave
not
jmp
and
mov
sahf
stos
mov
cwde
lods
dec
(bad)
test
into
or
push
pop
xor
stos
nop
add
cmp
shl
jo
mov
loopne
or
sbb
lds
loopne
fs
cmp
push
fbld
not
cmps
outs
loop
sub
out
inc
popf
cmp
xchg
cmp
sti
pop
jo
mov
loopne
sbb
cmp
nop
push
pop
jne
mov
cmp
popf
add
aaa
mov
or
aad
mov
retf
clc
pop
cmp
(bad)
aam
cs
push
and
sub
mov
cwde
push
sbb
mov
jnp
leave
(bad)
jbe
mov
pop
fwait
adc
sbb
inc
pop
fst
pop
push
mov
jl
iret
add
push
into
add
movs
xchg
push
cmc
in
into
(bad)
in
jo
adc
js
push
and
rcr
xchg
dec
popf
mov
push
lahf
mov
dec
and
in
sbb
leave
dec
add
loope
in
sub
jle
mov
js
and
imul
scas
pop
call
bound
pop
in
xchg
jle
and
mov
xlat
fstp
call
imul
jbe
pop
ss
dec
dec
lock
add
xor
test
mov
push
shr
pop
mov
scas
push
sbb
(bad)
and
into
pop
fdiv
call
jne
loopne
add
jb
mov
or
lahf
and
mov
inc
fwait
sub
fmul
xor
sub
xchg
repz
jmp
jae
sub
aam
jmp
jmp
or
jecxz
sar
jae
inc
sub
mov
mov
lahf
enter
cmp
jmp
sar
daa
jmp
mov
bound
les
icebp
push
cmp
mov
fwait
mov
dec
data16
xor
cmps
stos
jae
jle
push
aad
cli
and
es
push
(bad)
int
mov
ror
jae
in
sub
lods
mov
xlat
push
mov
jp
(bad)
int
and
cmp
pushf
mul
loop
cmc
pop
pop
hlt
dec
dec
pop
cli
sbb
push
sbb
icebp
test
ss
add
dec
mov
int
pop
add
add
and
jno
div
test
vandnps
or
retf
jnp
cmp
push
add
mov
dec
add
mov
mov
in
dec
loopne
cmps
sbb
ffree
popa
pushf
cmc
jmp
daa
mov
addr16
das
call
scas
aas
xor
iret
(bad)
mov
les
push
aas
stos
in
add
movs
mov
xlat
or
cmp
jbe
and
popf
cmp
sbb
dec
mov
sbb
cmc
out
jl
div
stos
out
test
jno
test
add
iret
and
adc
sub
push
mov
lock
or
fidiv
iret
jg
fmul
cmp
xchg
mov
cmp
iret
inc
movs
sbb
add
jl
rol
popa
mov
jns
cmp
movs
mov
xchg
push
and
or
js
pushf
lods
mov
movs
or
popf
jo
aam
(bad)
push
icebp
xchg
xchg
inc
imul
add
cmps
jne
add
adc
sbb
iret
add
and
test
je
xor
rcl
ins
leave
or
and
popa
test
ret
rcr
pop
adc
out
mov
cli
test
xor
lods
pop
sub
in
cmc
mov
in
jno
je
cmp
fwait
mov
and
cmp
add
xchg
js
cmp
fwait
sar
in
xchg
imul
mov
jle
xchg
rol
cmp
dec
out
and
ja
sub
in
lods
mov
les
pop
mov
dec
jmp
adc
sbb
adc
outs
pop
sub
dec
xor
in
ins
mov
add
sahf
hlt
std
jb
in
ss
sub
jp
adc
mov
adc
jle
adc
cs
mov
or
pop
dec
mov
push
(bad)
pop
popf
xor
add
int
hlt
cmp
dec
pop
adc
repnz
adc
outs
pop
xor
(bad)
xor
adc
test
push
(bad)
jg
and
sahf
pop
inc
js
push
ret
push
add
inc
js
scas
mov
rol
repz
fiadd
jbe
sbb
retf
nop
pop
cmp
mul
xor
js
ins
sbb
or
xchg
pop
movs
jb
push
loope
cmps
jl
xchg
pop
mov
pop
retf
xchg
sub
shr
jnp
dec
dec
push
jo
sbb
sti
xchg
adc
add
adc
cmps
mov
mov
fwait
inc
jo
pop
stos
mov
push
mov
sbb
sahf
adc
stos
ins
pop
movs
sbb
jl
sub
xchg
jle
inc
test
and
test
mul
(bad)
shr
fmul
sbb
xor
out
jmp
dec
sbb
jle
scas
mov
nop
sbb
xor
jle
pop
xchg
outs
adc
add
add
cmps
xchg
outs
cmc
jp
add
push
jns
jl
push
jle
mov
push
lahf
ins
xchg
cmp
nop
pop
ret
cdq
sbb
mov
push
jmp
and
and
xchg
or
lods
imul
popf
jne
popf
fmul
test
sub
push
fcmovb
les
arpl
xchg
dec
sti
add
stos
stos
pushf
or
rol
ins
cmps
adc
jno
cs
dec
pop
loop
push
mov
jecxz
inc
pop
addr16
outs
je
pop
in
dec
cmp
push
fs
cmps
inc
outs
sub
mov
pop
push
jne
lods
retf
test
(bad)
jmp
push
sub
mov
push
add
pushf
or
loope
and
clc
jne
xchg
or
cmp
sub
inc
pop
hlt
dec
mov
add
(bad)
aaa
movs
fiadd
div
adc
shl
fcom
retf
ins
sbb
sahf
jmp
cmp
add
mov
and
and
xlat
(bad)
jnp
and
loope
mov
loopne
sti
cmp
enter
sti
popf
mov
fidiv
cmp
sbb
pushf
pop
les
jecxz
lea
adc
jmp
mov
jbe
and
sbb
or
inc
scas
add
push
lea
xor
movs
mov
and
and
pop
dec
mov
or
addr16
retf
push
shr
jl
cwde
in
mov
sar
mov
mov
(bad)
and
fs
mov
(bad)
imul
lahf
push
fadd
lahf
fadd
and
sar
pop
cmc
or
mov
ja
sti
xchg
push
sbb
pop
push
mov
pop
push
jnp
sub
sti
cmp
pusha
je
nop
add
jae
inc
fwait
push
jecxz
arpl
or
inc
push
les
dec
jle
out
inc
mov
adc
fmul
jecxz
retf
or
out
xor
xchg
jmp
clc
push
ret
test
dec
mov
dec
ficom
ds
cmps
sub
ss
(bad)
sbb
fprem1
ud0
mov
outs
imul
push
nop
out
add
rcl
mov
loope
jne
jo
int
dec
mov
hlt
int
pop
bound
scas
sbb
lahf
movs
lds
fwait
sbb
shl
and
data16
sahf
pop
out
mov
pushf
sbb
xor
sub
pop
dec
push
jb
mov
ins
cwde
mov
fld
jo
jno
and
add
xchg
push
loopne
out
dec
xchg
out
call
pop
das
es
gs
popa
das
or
lea
mov
es
ret
imul
mov
mov
test
pop
fwait
add
jne
adc
ret
cmp
jmp
repz
repz
lea
inc
sbb
mov
mov
lahf
pop
nop
xor
push
add
mov
add
inc
rol
xchg
arpl
jle
aam
adc
mov
out
push
cmp
daa
bound
jmp
mov
jb
call
sbb
sar
mov
mov
mov
adc
xchg
enter
test
adc
push
push
mov
sub
jmp
shr
or
mov
outs
sbb
inc
sbb
int
mov
dec
jmp
add
inc
cmp
(bad)
sub
xchg
push
test
jo
sub
jbe
jmp
push
adc
push
jmp
adc
mov
mov
call
cmps
(bad)
call
and
and
add
ficom
out
sbb
jecxz
sbb
ja
fchs
pop
inc
ins
addr16
mov
push
and
scas
hlt
fsubr
push
mov
daa
push
imul
imul
cwde
shl
popa
mov
sbb
mov
sbb
mov
inc
enter
ficom
iret
shl
repz
inc
adc
sbb
push
ret
pop
scas
jle
and
lock
mul
xor
in
aam
inc
call
mov
(bad)
js
xchg
xchg
cs
or
add
scas
sub
frstor
dec
lods
xchg
ror
lods
dec
xchg
dec
push
hlt
pop
repz
jp
call
adc
cmps
adc
cmp
nop
out
xlat
adc
inc
loopne
xchg
ins
loop
int
arpl
jne
and
(bad)
or
ja
sub
sub
dec
xchg
or
adc
retf
mov
int
sub
js
lods
(bad)
movs
mov
push
jnp
mov
adc
ds
outs
jae
loopne
mov
cmp
sti
rcl
(bad)
sub
fdivr
jle
shl
out
jmp
jecxz
int
adc
pop
jnp
int3
(bad)
fmulp
inc
mov
movs
cmp
inc
adc
xchg
inc
rcr
adc
cmp
sub
pop
jb
sub
mov
cmp
xchg
(bad)
loopne
cmp
lds
mov
fistp
or
addr16
stos
rcr
mov
leave
(bad)
and
into
rcr
js
call
bound
and
xor
push
cld
mov
jp
movs
sbb
xor
cmps
ss
fisub
mov
neg
pusha
inc
fidiv
jo
jge
xor
cmp
mov
into
mov
iret
xor
in
mov
ror
enter
jbe
push
and
(bad)
aam
jle
js
shl
cmp
xchg
lock
add
jecxz
sbb
test
imul
sbb
sbb
jmp
pop
std
mov
lods
mov
jae
data16
dec
imul
jnp
rcl
and
dec
mov
mov
std
fwait
pop
(bad)
ds
jno
xchg
and
sub
mov
add
mov
add
mov
shl
imul
clc
ins
xchg
(bad)
xor
adc
pop
loope
pop
dec
adc
pcmpeqw
pusha
(bad)
fcmovnbe
mov
iret
test
call
push
scas
fcomp
sysexit
sbb
or
mov
fwait
mov
ds
jle
jecxz
fimul
jne
in
adc
push
es
sub
int3
sub
packssdw
(bad)
xchg
mov
test
lods
cwde
unpcklps
popa
cmps
not
xchg
sub
out
sahf
(bad)
mov
and
lea
and
ins
add
data16
push
fidivr
push
lods
js
out
mov
mov
push
lds
mov
(bad)
or
xchg
nop
jae
pop
cwde
leave
mov
dec
pop
pusha
(bad)
jb
add
xchg
arpl
jge
pushf
mov
jge
xchg
mov
mov
aas
je
outs
inc
cmps
jb
icebp
int3
xor
icebp
mov
and
shr
push
or
ins
cmp
add
dec
dec
in
and
(bad)
pop
jg
push
jmp
mov
jno
movs
xchg
pusha
cmp
mov
and
(bad)
cmp
fist
ror
push
mov
push
int
ror
jle
cmps
fstp
int3
inc
jge
lea
dec
push
lds
mov
adc
test
fdiv
not
mov
dec
frstor
mov
dec
call
dec
mul
aad
cmp
pop
inc
fcmovnbe
ror
and
fnsave
(bad)
sbb
pop
cmps
mov
pusha
sub
inc
into
call
and
pop
les
cld
inc
ret
jl
loopne
add
inc
cwde
cld
add
jmp
push
hlt
push
dec
and
call
movs
jp
das
pushf
mov
mov
out
cmp
std
scas
inc
shl
xor
xchg
add
aam
rcl
sub
jo
fwait
xor
scas
inc
cmp
mov
push
in
push
adc
retf
dec
call
cmp
and
mov
outs
pop
retf
cmp
dec
and
mov
cwde
push
movs
out
adc
(bad)
mov
mov
test
add
add
movs
icebp
fs
dec
mov
xor
add
fstp
shr
fdiv
mov
fisubr
test
mov
cmp
fisubr
push
into
mov
repz
add
out
lahf
cmp
scas
idiv
aaa
leave
sbb
xchg
scas
int
rcl
mul
adc
(bad)
mov
into
cmc
bound
aad
dec
les
sub
jns
fld
adc
jmp
push
pop
jmp
mov
pop
in
add
jecxz
lahf
stc
test
repz
outs
mov
add
push
mov
js
dec
or
xor
push
add
jmp
or
lods
daa
add
int3
cmp
mov
ins
add
cs
ja
pop
sbb
cwde
pop
popf
stc
cmps
jecxz
mov
cdq
add
aas
xor
adc
gs
or
sbb
dec
push
xchg
mov
lea
test
or
dec
dec
call
loope
imul
test
xchg
icebp
jns
mov
(bad)
or
push
dec
mov
mov
shl
xchg
loope
inc
jae
push
or
xchg
push
pop
pcmpgtw
mov
pop
shl
aam
sub
addr16
loope
imul
mov
out
dec
add
je
ss
stos
push
retf
fisubr
push
ror
popa
or
push
push
jecxz
cmp
int
in
stos
loop
jb
inc
xchg
dec
inc
xchg
fidivr
sub
arpl
xchg
sahf
push
cmps
sti
dec
mov
outs
cmps
nop
sub
push
pop
div
stos
mov
aas
aas
inc
mov
aad
mov
retf
into
aam
and
inc
xchg
jl
pop
sbb
sar
adc
stos
pop
sbb
jae
es
dec
xbegin
jp
and
cs
sub
stc
sti
bound
ss
inc
push
scas
jl
mov
retf
adc
sbb
cmp
pop
jmp
shl
test
push
outs
sub
inc
pop
pusha
cs
iret
sbb
jge
sbb
xchg
in
daa
xchg
call
mov
mov
aad
mov
jge
ss
xor
lea
pushf
mov
fwait
mov
lds
fcom
mov
adc
mov
and
sti
leave
call
lods
inc
std
push
mov
xchg
fsub
(bad)
shl
mov
outs
push
add
mov
cmps
in
(bad)
in
imul
or
mov
je
icebp
repz
or
push
cmp
or
push
cdq
cmc
jecxz
mov
ins
neg
or
ins
sbb
jb
push
cmc
retf
(bad)
pop
cmc
and
mov
fsubr
lock
loopne
or
cli
pop
mov
add
jne
dec
add
lahf
mov
push
and
(bad)
xchg
les
mov
push
push
retf
inc
dec
retf
add
data16
loopne
push
bound
or
fimul
push
jnp
sahf
cmp
rcl
mov
ss
imul
es
xchg
scas
mov
sbb
cmp
pop
adc
jbe
jb
mov
mov
and
sub
xchg
xchg
jecxz
sbb
sbb
mov
mov
scas
call
outs
xchg
daa
dec
dec
test
or
mov
push
or
fs
mov
push
scas
jge
or
iret
mov
mov
pop
dec
ror
or
les
jnp
sub
mov
mov
test
ror
or
outs
jbe
mov
iret
cld
lahf
repz
sub
xor
and
sbb
xchg
dec
sub
adc
in
cmp
retf
retf
jge
aad
add
(bad)
sti
mov
scas
pop
ins
push
sbb
mov
shl
mov
scas
xor
jne
imul
push
push
pop
mov
imul
mov
xor
adc
mov
pop
mov
fbstp
fsub
ins
test
into
jb
xor
xlat
sahf
movs
mov
in
les
movs
ins
adc
sbb
and
pusha
(bad)
lea
js
mov
pop
sti
inc
je
dec
xor
lds
add
or
test
add
dec
mov
and
cmp
adc
pop
xor
xor
cmp
mov
lea
cmp
pop
lods
pop
push
inc
(bad)
fstp
xlat
mov
xchg
or
fwait
jmp
or
lahf
(bad)
call
test
sub
popa
cmp
loope
loope
test
call
in
dec
ins
jmp
mov
scas
add
pop
sbb
xchg
push
jns
and
xlat
pop
pop
fyl2xp1
lds
stc
iret
pop
add
cdq
jge
sti
dec
outs
mov
or
mov
rcl
aaa
(bad)
xchg
mov
je
test
fild
inc
jge
cdq
mov
cmc
mov
hlt
dec
leave
int3
xor
dec
fwait
mov
jmp
rcl
jb
cld
mov
in
dec
jg
push
xlat
dec
ret
adc
mov
ss
(bad)
neg
shl
xor
sbb
and
jmp
jns
add
fld
in
inc
dec
out
or
jl
dec
fnstcw
fs
iret
sub
mov
aad
mov
add
lds
jl
ja
adc
push
adc
sti
mov
test
cs
fisttp
push
movs
jl
xchg
mov
xchg
jb
rol
and
adc
cmp
es
jecxz
inc
mov
jp
cmp
fsubp
arpl
(bad)
js
mov
imul
movs
cmp
daa
jbe
cdq
fistp
hlt
sbb
jb
ins
pop
xor
adc
or
jecxz
ins
addr16
sbb
jne
mov
xlat
or
inc
in
std
loop
cs
pop
sbb
sbb
mov
lahf
shl
xchg
dec
nop
jg
lock
(bad)
cmp
frstor
xor
pusha
mov
adc
xchg
pop
add
inc
mov
repz
mov
pop
dec
test
pop
dec
inc
and
xchg
jl
popa
enter
jle
inc
rcr
mov
lods
nop
mov
retf
fnsave
imul
mov
mov
xchg
leave
stos
push
out
push
shl
sub
xor
int
clc
adc
push
mov
popf
scas
fst
ret
xchg
or
mov
inc
mov
(bad)
mov
ret
adc
test
adc
popf
loopne
cli
dec
inc
or
push
fcomp
xor
and
push
loope
inc
aam
dec
cld
dec
test
out
movs
sbb
xchg
hlt
pop
sbb
add
push
cmovo
mov
ss
jmp
mov
inc
popf
adc
mov
or
sub
out
dec
invd
pop
add
jo
(bad)
outs
pop
pop
push
dec
mov
jbe
add
(bad)
imul
mov
jnp
and
xchg
pop
stc
sub
push
cmps
(bad)
push
shl
jmp
add
or
mov
mov
lock
imul
push
mov
aas
or
sahf
adc
and
int3
ss
jge
push
test
into
mov
test
sbb
xor
into
cmp
mov
test
push
jno
(bad)
enter
cs
ss
in
sbb
jb
add
xchg
dec
push
test
loope
jnp
retf
jmp
fbld
inc
xor
cs
xchg
das
dec
xchg
dec
lods
ret
jmp
cs
push
cld
outs
mov
xchg
cmp
ftst
imul
push
pop
push
pop
jle
add
dec
mov
dec
jl
mov
xor
ret
sub
pusha
sbb
lods
adc
fadd
jl
cmp
ret
(bad)
mov
cmp
imul
test
jge
sub
mov
pop
xlat
fsubp
push
or
inc
cmp
and
fsubr
and
iret
in
std
outs
mov
dec
aas
sub
mov
xor
leave
mov
repz
xor
jnp
pop
sbb
add
out
lods
mov
in
stos
fiadd
sub
cmc
icebp
pop
ds
push
jle
push
out
cwde
ret
cmp
adc
and
and
pusha
mov
mov
js
push
sar
in
mov
inc
or
add
xor
cmp
sbb
call
sub
mov
outs
nop
fist
mov
repnz
clc
add
xchg
pop
cwde
sbb
pop
mov
jb
add
popa
std
sbb
adc
jns
inc
std
mov
nop
xchg
jecxz
les
mov
xlat
mov
fnstenv
popa
mov
push
adc
out
imul
sbb
mov
fldenv
or
orps
fist
iret
mov
or
lahf
push
or
in
mov
dec
dec
jmp
out
frstor
mov
mov
jne
dec
ret
inc
lahf
pushf
push
mov
xor
outs
dec
cmp
push
mov
inc
xchg
jnp
and
xor
aaa
jp
pushf
in
aas
idiv
inc
inc
in
sub
repz
push
ficomp
aam
mov
mov
mov
aaa
cmp
or
addr16
lds
leave
mov
adc
shl
sub
call
and
iret
pop
fs
clc
push
mov
and
and
sahf
add
pusha
cmp
mov
sbb
jnp
sbb
data16
popa
xor
scas
adc
pushf
retf
ret
xor
mov
jmp
lods
scas
imul
test
fdivr
scas
mov
out
arpl
lds
std
enter
ins
dec
ins
cmp
mov
fadd
out
fwait
clc
jnp
pop
int3
in
mov
adc
jns
shl
imul
mul
enter
ins
mov
inc
mov
xchg
or
(bad)
ffreep
dec
jecxz
imul
add
mov
push
data16
mov
adc
(bad)
icebp
in
data16
push
popf
ss
push
ss
and
jo
mov
es
xchg
xchg
stos
in
aaa
ret
jnp
scas
jg
adc
mov
mov
iret
popf
mov
das
test
push
arpl
imul
and
cmp
imul
push
das
imul
in
popa
jae
mov
add
inc
sub
ins
mov
xchg
pop
sbb
sbb
dec
not
sub
nop
dec
pop
aas
adc
bound
std
xor
xchg
mov
int3
mov
pop
dec
push
xor
repz
cli
adc
arpl
jo
jge
mov
cwde
cmp
push
lea
cwde
pop
test
test
cmc
hlt
nop
or
add
push
xchg
in
mov
hlt
jecxz
jle
fnstsw
cdq
out
dec
sub
inc
out
mov
inc
into
mov
cmp
popf
xor
pop
pop
fsubr
aaa
jb
sub
pop
pop
cld
fild
iret
mov
outs
dec
ds
xchg
movs
mov
add
bound
push
or
xchg
out
add
sbb
inc
jecxz
or
movs
les
sbb
or
icebp
dec
pop
ss
push
xchg
aas
push
clc
pop
std
ret
push
add
retf
mov
mov
shl
push
ds
je
sub
in
nop
mov
popa
inc
sub
lock
xor
pop
mov
or
sub
xchg
inc
pusha
xor
sub
stc
add
xor
mov
xchg
and
ins
(bad)
je
and
loop
call
sbb
mov
sti
dec
stos
das
dec
cdq
add
call
dec
nop
inc
outs
dec
jmp
inc
repnz
lds
test
not
add
mov
dec
xchg
or
hlt
pop
enter
scas
adc
lahf
mov
mov
inc
push
int3
xchg
mov
sar
js
into
out
xor
in
pusha
call
xor
mov
xchg
xchg
push
push
inc
mov
xor
ficom
jl
and
jmp
fdiv
pop
cld
ds
or
push
aas
push
daa
pop
sahf
cmp
or
int
jmp
js
xor
loop
int
cmps
jnp
out
add
push
aas
lock
ret
sbb
(bad)
mov
inc
pop
(bad)
pop
inc
adc
dec
lods
imul
mov
xchg
mov
das
push
lea
packssdw
lock
and
push
bound
push
sbb
cmp
adc
aam
test
sub
dec
ins
jns
mov
bound
pusha
mov
push
cmp
and
call
test
sbb
mov
fidivr
push
xor
(bad)
fsub
out
cdq
retf
ins
pop
jbe
pusha
adc
mul
out
push
repnz
out
retf
sub
lods
aad
fldcw
jmp
pushf
sbb
sti
cli
cmp
pop
or
pop
movs
lahf
aaa
adc
enter
cmp
gs
sub
pop
or
loope
xor
test
pushf
stc
in
jg
das
popf
inc
cmp
lahf
pop
ja
out
pop
dec
pop
repnz
daa
xchg
push
sbb
stos
push
neg
ficomp
inc
aam
jnp
inc
inc
test
and
xlat
ret
je
bound
pusha
jl
leave
rcr
pop
and
xor
cwde
je
in
daa
repz
imul
mov
pushf
inc
in
push
pop
mov
xchg
pop
fwait
add
fsub
jmp
je
fmul
out
mov
inc
jo
jge
add
fcomp
cld
(bad)
dec
dec
xchg
mov
out
ins
shl
loope
jno
aas
jno
push
jg
loop
cmps
or
mov
mov
ror
in
xor
jmp
xor
push
xchg
or
or
movzx
adc
shl
into
in
push
sbb
adc
dec
test
xor
cld
jmp
aas
jecxz
xchg
pop
or
dec
lods
test
mov
lock
leave
out
mov
lods
xchg
mov
inc
pushf
(bad)
out
mov
leave
add
sub
adc
dec
cmps
inc
imul
mov
jp
gs
or
cmp
das
adc
fdivrp
sti
mov
stos
sbb
add
ret
call
js
push
lds
jns
jg
out
jle
enter
mov
loop
pop
shl
cmp
sti
rol
jns
mov
popa
div
sbb
jle
jno
aas
jle
mov
mov
clc
icebp
push
hlt
mov
loop
pop
sbb
(bad)
mov
pop
sbb
xor
push
sti
xor
sub
fistp
ret
pop
scas
test
repz
mov
push
inc
int
imul
push
pop
cmp
inc
jne
dec
mov
cmp
xchg
dec
mov
jae
lds
mov
xchg
mov
push
aam
cmp
imul
cmp
inc
loopne
lea
xor
cmp
mov
popa
out
pop
adc
mov
sbb
ss
sub
ret
inc
das
imul
(bad)
cs
sub
mov
data16
stc
mov
inc
jae
arpl
dec
mov
icebp
mov
movs
jecxz
xor
clc
xchg
and
loop
add
pop
cmp
add
sub
push
sar
out
into
jge
sti
sbb
xchg
clc
push
loopne
in
hlt
push
sub
add
xor
sbb
fwait
lods
and
cs
pop
add
leave
and
push
movs
adc
pushf
mov
icebp
stc
jge
adc
loope
stc
adc
int3
adc
xchg
mov
test
mov
inc
movs
enter
mov
rcl
mov
pushf
pop
pop
scas
daa
adc
cmc
ror
cmps
popa
inc
fwait
push
stos
cmp
retf
ds
sbb
push
jne
gs
dec
jle
jnp
scas
sbb
pop
mov
dec
mov
mov
mov
movs
mov
ins
add
test
xchg
xor
sub
push
in
mov
popf
repz
jmp
in
lods
push
add
popf
pop
push
loopne
pop
xchg
cmps
xchg
mov
cld
lock
(bad)
sbb
retf
adc
pushf
push
sti
xchg
pop
popa
xlat
push
ins
in
pop
sahf
mov
adc
inc
fcomp
ret
xchg
mov
pop
add
(bad)
push
dec
cmp
not
scas
mov
lds
jg
hlt
push
or
pop
pop
mov
repnz
aaa
icebp
jae
in
sub
dec
inc
xchg
enter
mov
aam
xchg
mov
jno
mov
test
push
in
mov
cli
pop
mov
mov
movs
iret
xchg
stos
cmp
push
xor
stos
jno
xor
stc
adc
push
jg
call
pop
repz
nop
cmc
bsr
lea
jg
push
ja
fldenv
adc
inc
(bad)
cmp
adc
aam
fsubr
ja
movs
out
or
stc
clc
mov
xchg
shl
rcr
fucomi
mov
jp
and
xor
pushf
mov
jmp
or
sub
jnp
(bad)
cwde
outs
adc
pop
idiv
pop
adc
dec
push
icebp
lock
pop
leave
rcr
or
or
mov
sbb
cli
mov
cmps
sbb
nop
add
cmp
jle
mov
push
or
xor
outs
bound
mov
iret
inc
jp
xchg
imul
out
int3
leave
leave
ja
loop
ds
das
sbb
push
fdivr
imul
add
adc
push
mov
mov
mov
lods
mov
mov
and
call
js
pop
test
or
mov
cwde
or
and
pop
movs
lahf
repz
jecxz
ss
pusha
ja
addr16
mov
and
inc
or
xor
push
in
addr16
jmp
sahf
ror
and
mov
cmp
je
ja
sahf
and
jg
jnp
call
xor
pop
xchg
push
cmp
pusha
test
sbb
shl
mov
imul
adc
arpl
sub
cs
sub
ror
and
pushf
xchg
mov
xor
shl
dec
ret
movs
push
into
lds
mov
and
add
or
or
dec
inc
push
xlat
add
dec
arpl
sbb
lahf
push
in
sub
push
shr
fwait
(bad)
fisub
or
lahf
shl
addr16
mov
sbb
test
(bad)
inc
xor
push
fs
and
out
rcl
mov
add
sub
jle
sub
mov
pop
push
or
jge
movs
mov
popf
and
aaa
mov
or
lds
mov
in
out
sbb
cmp
call
pop
jg
sbb
inc
mov
stos
bound
enter
mov
cmps
fnsave
test
pop
xor
es
sub
scas
fild
xor
in
cld
std
dec
sub
(bad)
push
and
sbb
xor
pushf
or
inc
sbb
push
jg
xchg
retf
mov
sbb
shl
sbb
pop
test
pop
sbb
ins
push
or
cdq
pop
into
cmp
cmps
adc
cmp
sar
aaa
xlat
dec
arpl
(bad)
fmul
iret
int
aas
mov
pop
popf
pop
in
std
push
imul
mov
into
sbb
cs
cli
sti
stc
xchg
xor
bound
mov
and
dec
call
pusha
jle
jbe
inc
add
bswap
mov
push
mov
in
sbb
jns
add
xor
rol
ror
mov
imul
xor
in
popa
sub
xor
sbb
scas
sbb
nop
in
rcr
test
or
ror
jmp
out
shr
scas
movs
pop
mov
pop
imul
adc
mov
lahf
out
mov
out
inc
adc
or
out
jno
xor
neg
xchg
jmp
mov
movs
pop
ins
dec
daa
je
das
pop
mov
je
js
shr
shr
or
sbb
jecxz
clc
mov
or
pop
into
(bad)
cmc
mov
sbb
xchg
imul
popa
das
adc
das
sub
fwait
movs
outs
in
push
and
adc
push
inc
fisttp
int
rol
call
je
jae
test
mov
stos
addr16
dec
int3
out
and
aas
(bad)
cmp
sbb
test
retf
call
jne
mov
js
arpl
leave
sub
push
push
popf
movs
push
lods
cmp
mul
lods
jns
cs
dec
pusha
or
inc
cmp
lea
stos
shl
nop
push
popa
mov
push
test
rcr
popf
mov
push
inc
test
dec
icebp
add
call
test
cs
sbb
inc
repz
cwde
(bad)
leave
jae
sub
std
mov
iret
dec
shl
sar
into
dec
dec
mov
xor
xor
and
ret
fwait
push
ror
loope
dec
aaa
retf
fnsave
xchg
repnz
sub
movs
arpl
add
sbb
mov
in
ss
xlat
pop
xchg
(bad)
arpl
jmp
cmove
pop
loop
test
push
jl
cmps
in
inc
data16
push
pushf
bound
ret
mov
imul
push
jg
sub
mov
pop
fs
jmp
xchg
push
(bad)
mov
repz
jmp
sub
mov
cmc
das
pusha
(bad)
push
jb
add
mul
sub
imul
or
mov
jbe
mov
adc
sub
pushf
arpl
in
leave
pop
aam
xor
sbb
push
sub
ins
mov
lahf
jns
push
call
pop
push
bound
push
or
inc
das
call
retf
pop
dec
bound
dec
es
sub
cld
cs
jmp
in
add
sar
imul
(bad)
jg
and
fist
jp
outs
jmp
outs
xor
mov
sahf
pop
cmp
add
fadd
aaa
popf
lock
out
add
icebp
mov
repnz
dec
jl
mov
outs
dec
cmps
stc
push
jge
mov
jp
in
jb
mov
jnp
mov
mov
stos
jo
lock
cmp
sbb
mov
push
mov
xor
cmp
or
movs
add
out
test
fstp
int
and
cmp
test
or
add
and
das
xor
lock
stc
adc
mov
sub
pop
iret
iret
aad
mov
xor
es
shl
sub
mov
jb
(bad)
out
cmp
sar
mov
inc
adc
dec
dec
mov
cli
(bad)
int3
mov
jecxz
xchg
dec
aad
aaa
pushf
xchg
adc
push
repnz
jno
jo
add
and
xchg
rcl
and
push
sbb
jbe
test
scas
sbb
in
fiadd
xor
in
das
pop
pop
or
mov
push
cwde
pop
and
movs
inc
retf
xchg
cmc
add
mov
into
xor
fdiv
pop
mov
pusha
enter
jb
nop
jbe
ficomp
movs
(bad)
rcl
push
inc
lock
cs
(bad)
stos
sub
mov
xlat
std
mov
cmp
sub
jp
sub
xor
jns
mov
dec
mov
xchg
imul
aaa
stos
mov
mov
jg
mov
or
in
pop
pop
rol
pop
data16
out
push
test
sbb
imul
in
or
retf
jno
push
inc
stc
sub
pusha
test
xor
loopne
sbb
mov
and
xchg
paddq
loopne
sub
fmul
gs
sbb
movs
and
fclex
jno
leave
fistp
arpl
rcr
cmp
cdq
cli
fnstcw
mov
int
adc
sub
cmp
movs
push
mov
test
out
cld
fcom
dec
(bad)
mov
jbe
or
adc
dec
pop
or
mov
(bad)
call
xchg
xor
rcr
in
cmp
ror
jbe
clc
jecxz
jae
mov
and
and
in
retf
aas
jbe
in
shl
sub
xchg
out
push
es
jno
mov
stos
xchg
mov
fst
daa
xchg
jg
sbb
movs
stos
sti
enter
push
pop
in
jge
and
test
push
loopne
add
loopne
(bad)
jle
mov
(bad)
mov
xlat
sub
mov
add
jmp
mov
or
cmp
push
pop
pop
pop
arpl
aad
pop
xchg
jns
fild
xchg
es
pusha
xchg
ss
in
pop
sub
jge
cmp
sbb
movs
shr
push
out
mov
add
jnp
push
repz
ja
dec
rcl
arpl
ins
fwait
xchg
push
pop
arpl
(bad)
arpl
loopne
push
xchg
mov
jmp
and
leave
enter
inc
jbe
pushf
(bad)
mov
in
sbb
cwde
cmp
mov
adc
and
push
adc
in
jno
cmp
(bad)
stc
push
push
cmp
push
pop
push
outs
xor
xchg
std
xchg
fiadd
xor
sub
and
jns
dec
fisub
dec
mov
inc
adc
mov
cli
fsub
or
push
arpl
mov
fwait
jne
fidiv
add
shr
dec
in
ja
dec
adc
shl
jae
loop
jae
jg
inc
sub
es
pushf
add
xchg
stos
add
movs
mov
xor
dec
movs
add
push
add
and
fld
xor
sbb
imul
adc
or
pop
xchg
or
and
bound
mov
push
sub
icebp
js
popa
lods
sbb
popf
push
push
sub
cwde
cmp
jecxz
push
mov
sub
lods
mov
in
and
es
and
pushf
mov
pop
xchg
out
adc
jmp
lock
push
mov
ja
jns
mov
repz
bnd
mov
inc
and
inc
retf
and
ins
add
xchg
nop
sahf
push
dec
add
lahf
stc
mov
dec
aas
rol
inc
inc
xchg
adc
xchg
sub
and
cmp
imul
call
xchg
popa
fcomp
ins
in
sbb
cmp
inc
or
jecxz
pop
mov
mov
repz
les
adc
xlat
outs
fadd
inc
xor
adc
std
into
sbb
cmc
es
movsx
sub
les
mov
inc
sub
jnp
jb
or
pop
add
inc
sahf
ds
adc
sub
dec
xchg
enter
xchg
inc
xchg
scas
adc
xor
mov
mov
dec
sub
cld
outs
(bad)
dec
jmp
cmp
lods
push
popf
mov
add
outs
jbe
fwait
push
stc
inc
out
and
sti
cmovge
clc
out
add
aam
mov
add
outs
dec
in
lea
cwde
xchg
mov
jp
stos
jmp
xchg
mov
rcl
pop
fisubr
fcmovne
(bad)
out
push
sub
mov
pop
cmp
mov
adc
movs
bound
dec
mov
arpl
pop
icebp
scas
xor
pop
int3
mov
sbb
pop
inc
sti
sbb
arpl
xor
cmp
mov
(bad)
std
stos
(bad)
push
ins
ja
add
xor
pop
jns
mov
mov
cmp
xchg
pop
jmp
gs
popf
dec
pop
or
mov
jg
movs
mov
fisub
xchg
test
dec
stc
inc
add
adc
retf
jmp
push
mov
cld
loope
inc
xor
or
and
xor
nop
je
xor
scas
sbb
pushf
stos
jmp
cdq
mov
sar
cmp
stos
loope
xor
sti
adc
(bad)
call
push
push
and
and
push
or
out
popa
adc
lock
push
push
inc
ds
stc
jp
pushf
cmp
cmp
(bad)
fcomp
mov
outs
add
cmp
push
pop
pop
das
mov
jecxz
inc
jl
mov
sti
retf
fnsave
dec
and
adc
add
loope
inc
call
mov
test
mov
or
call
punpcklwd
pop
mov
fwait
clc
jae
lea
jmp
lock
stc
stos
jo
dec
mov
mov
fcomip
jb
sub
push
jns
mov
add
fist
xchg
pop
dec
adc
pop
ror
retf
fistp
pop
div
mov
mov
out
jmp
jb
pop
xor
push
dec
xor
outs
adc
xor
push
inc
add
and
dec
fst
or
fimul
rcr
loop
inc
adc
cwde
aas
xchg
popa
test
cdq
dec
stos
jle
cmps
pop
jmp
mov
xor
stos
nop
or
clc
jg
and
into
cmp
push
icebp
cwde
out
icebp
cmps
test
(bad)
jo
cmp
outs
dec
stos
cdq
jge
mov
arpl
add
or
fucomip
cmp
fidivr
xchg
add
inc
jb
aas
and
or
ja
je
movs
mov
inc
xchg
cmps
xchg
dec
enter
popf
fstp
push
or
test
or
mov
or
test
lods
xchg
cdq
pop
mov
mov
mov
and
aas
fwait
push
rcr
and
mov
out
out
ss
sub
out
jge
push
hlt
adc
pop
adc
into
xor
mov
jle
push
aam
adc
jl
stos
leave
dec
je
(bad)
aas
cmp
(bad)
pop
mov
sub
bswap
mov
inc
(bad)
sub
jecxz
and
and
inc
xchg
inc
pop
ss
mov
mov
outs
fbld
mov
ins
data16
mov
int
shr
call
ffreep
loopne
cmp
jmp
mov
and
or
movs
mov
jg
nop
inc
shl
pop
movs
dec
jo
aad
add
(bad)
add
pop
jl
xor
jge
sub
scas
jne
scas
daa
ins
push
ja
fcmovne
sub
retf
ret
and
mov
or
cmp
into
scas
repz
shl
fimul
cli
inc
push
push
out
pop
xor
rcl
repnz
cmc
scas
push
sub
out
push
je
aam
in
or
js
iret
or
sub
or
cmps
mov
cli
aaa
dec
mov
loope
cmc
dec
or
js
inc
or
scas
push
in
ja
imul
lea
in
sub
leave
xor
sbb
call
sub
(bad)
inc
lods
dec
adc
cmp
in
jge
or
mov
das
dec
(bad)
sahf
inc
add
mov
mov
dec
movs
ret
mov
inc
jns
stos
mov
shl
das
xor
jg
stos
or
outs
or
mov
dec
xchg
clc
xchg
aam
mov
test
imul
fnstcw
retf
or
cmp
inc
inc
inc
xor
fisub
xchg
icebp
rol
jns
or
jg
dec
jb
mov
and
ja
sbb
enter
das
jno
out
adc
jae
test
bound
retf
lea
mov
xchg
push
mov
test
mov
dec
iret
les
cmp
push
rcl
test
xchg
sbb
test
rcr
sub
jl
into
mov
icebp
jge
repnz
(bad)
outs
leave
pop
sti
leave
es
xchg
aad
(bad)
test
push
cdq
dec
add
fild
into
sbb
xchg
push
mov
cmc
int3
and
cmc
inc
and
lock
jb
out
rol
xor
xchg
(bad)
sub
jl
mov
mov
dec
aas
clc
ja
into
ret
aas
xor
addr16
jns
adc
cmp
mov
xor
and
or
icebp
rcr
popf
ret
jp
aam
mov
int
and
aam
icebp
retf
dec
shr
addr16
mov
adc
add
mov
outs
je
xchg
aas
sub
and
bswap
adc
and
cli
pushf
mov
loope
cmc
test
daa
xchg
xchg
pop
push
call
sub
cmp
add
imul
fcmovnbe
fisttp
mov
mov
mov
int3
jp
stos
call
cmp
arpl
adc
ds
inc
lods
out
sub
std
and
or
pop
not
out
setb
test
mov
push
xchg
das
and
jo
dec
enter
jb
xlat
inc
sar
mov
(bad)
cdq
cld
dec
pop
mov
ins
daa
shr
inc
ret
ficomp
clc
mov
aad
push
jno
pop
jecxz
dec
jle
aas
rcr
scas
dec
push
ds
add
jmp
xchg
and
mov
jge
and
pop
push
pop
mov
loopne
dec
fs
jns
loope
icebp
and
sbb
sbb
scas
push
outs
aaa
mov
sub
and
or
data16
mov
aad
cdq
aam
mov
cmp
fidiv
test
pop
ins
mov
and
(bad)
ficom
loop
rcl
mov
shl
jl
mov
dec
push
sahf
clc
sbb
xchg
ins
xor
sub
xchg
or
push
dec
xor
shr
jae
ds
mov
loopne
jge
and
addr16
inc
sub
bound
jp
gs
in
in
pop
fs
cwde
fsubp
cmp
shl
out
ins
cwde
jb
movs
add
mov
inc
sub
ret
pop
pop
xchg
dec
jmp
pop
pop
ss
shl
(bad)
dec
xchg
mov
fwait
cmp
je
repz
dec
mov
loopne
mov
xor
mov
adc
xor
push
fdiv
xchg
in
cmp
and
arpl
int3
mov
or
comiss
fs
sub
jae
xor
rcl
ss
stc
jp
xor
in
in
push
jp
mov
inc
and
sub
xlat
mov
xchg
pop
push
shl
retf
mov
add
push
sahf
fwait
iret
jle
cli
jbe
sahf
jp
sbb
aam
adc
sub
or
int3
inc
xor
jmp
cmp
xor
into
popf
jle
push
shl
cmp
xor
stos
(bad)
fild
repz
mov
pop
sub
rcr
jns
repnz
inc
push
cmovbe
push
mov
xor
pop
int
data16
sbb
sub
jns
rcr
fsub
xchg
xchg
or
shl
and
push
pusha
push
dec
inc
sti
mov
(bad)
cmp
in
jbe
pop
std
ret
mov
mov
ret
inc
inc
add
test
mov
aaa
xor
mov
lea
mov
dec
adc
icebp
out
movs
and
sbb
mov
int3
sub
fsub
call
outs
or
adc
(bad)
arpl
cli
in
out
or
dec
and
clc
mov
repz
jle
jle
int3
and
adc
fld
movs
imul
sar
or
xor
aad
dec
mov
push
cmp
retf
fidiv
push
pop
aaa
in
inc
jmp
outs
call
lds
inc
sti
std
mov
iret
test
aam
mov
fs
ss
mov
inc
ffree
imul
in
scas
mov
bound
lods
jb
push
lahf
jecxz
cld
lock
adc
mov
outs
fstp
sbb
fsubrp
inc
loope
test
pop
push
enter
xor
leave
dec
in
test
(bad)
je
and
mov
add
sbb
cmps
xchg
pop
add
dec
imul
xchg
jo
sbb
enter
or
sub
mov
jl
xor
mov
test
aas
fadd
mov
inc
push
xchg
push
mov
jmp
mov
fdiv
push
lea
sbb
jne
jne
xor
cwde
arpl
jmp
arpl
loope
cmp
add
lods
or
sbb
int
mov
mov
add
in
mov
inc
pop
xchg
cmps
aad
and
cs
pop
test
stc
jb
jnp
xor
jae
test
jne
or
scas
jp
sub
cmps
sbb
mov
rcl
and
jmp
xchg
not
xchg
cli
jns
xor
iret
aaa
mov
out
cmp
dec
or
inc
out
dec
int
stos
mov
shl
mov
(bad)
shr
shr
mov
xor
hlt
dec
jo
movs
xor
sbb
(bad)
movs
test
mov
sbb
xor
inc
outs
cmp
in
repz
lods
test
jae
mov
test
pop
aas
mov
ret
jle
or
aad
mov
add
push
pop
fdiv
mov
add
stos
pop
inc
push
fs
das
addr16
popf
das
pop
and
dec
out
mov
aas
mov
jmp
cli
test
sub
xor
push
add
mov
test
cmp
popf
mov
or
dec
or
jge
mov
scas
or
jb
scas
test
xor
jb
cmp
mov
inc
fistp
fwait
mov
test
addr16
jmp
pop
jbe
inc
dec
scas
push
iret
or
and
enter
or
les
bound
enter
arpl
cmp
sub
mov
popa
jbe
fs
js
imul
mul
fild
rol
popf
shr
(bad)
das
fcos
or
jbe
call
outs
std
outs
mov
mov
dec
pop
fnstsw
and
std
mov
leave
imul
arpl
repz
cmps
pop
in
shl
shl
jmp
push
sbb
xor
imul
loop
data16
mov
or
pushf
jge
loopne
mov
sub
jo
outs
lods
out
cmp
pop
mov
mov
addr16
sub
push
mov
jp
sbb
xchg
sbb
call
fs
rcl
push
fdiv
rol
pushf
mov
adc
jge
inc
push
mov
rcr
mov
icebp
sbb
pop
sahf
outs
sub
lods
adc
push
mov
scas
jg
pop
sti
out
mov
aad
cwde
dec
sbb
mov
jo
mov
xchg
cmp
adc
ret
push
dec
fidiv
dec
add
leave
(bad)
ss
xor
jbe
dec
rcr
enter
leave
dec
test
cmp
xchg
jbe
or
mov
dec
fisttp
pop
add
push
mov
mov
ins
mov
jns
rcr
je
aaa
call
ins
mov
inc
cmp
sar
cdq
mov
cmps
stos
mov
sahf
mov
aas
adc
cdq
inc
out
push
aaa
mov
out
into
sti
mov
std
add
loopne
add
xchg
mov
inc
sub
in
jl
lahf
jp
adc
pop
lea
pushf
xchg
(bad)
push
loope
pusha
(bad)
cmc
cmp
mov
mov
outs
call
fsubr
mov
push
mov
mov
jo
jo
add
das
push
sahf
not
out
das
push
push
or
cmp
loope
aad
js
mov
in
psrlq
inc
push
push
xor
dec
fcom
(bad)
pop
push
sahf
shl
mov
push
int
inc
fist
loopne
(bad)
xlat
inc
adc
mov
movs
arpl
out
dec
cld
lock
xchg
xor
xlat
add
sub
hlt
pop
mov
xor
pop
call
loopne
icebp
and
cmp
in
pushf
mov
mov
sub
mov
dec
fs
cmp
or
cmp
jle
add
retf
sub
mov
(bad)
sbb
out
rol
adc
pushf
(bad)
loop
aas
loopne
test
(bad)
dec
ins
pop
sub
loope
in
test
inc
fnstenv
inc
sbb
mov
jmp
mul
popf
sub
pop
mov
dec
cmp
ss
mov
push
jl
pop
sbb
cmp
aaa
mov
popa
stos
dec
mov
xor
js
sbb
mov
jp
movs
jae
mov
push
ud0
or
xor
pop
xlat
(bad)
fucomi
out
mov
nop
sub
retf
xlat
hlt
pop
aam
inc
sub
and
stos
inc
imul
pop
sbb
fild
xchg
shr
test
test
pop
jge
mov
das
fdiv
inc
xor
push
mov
push
push
push
mov
pushf
hlt
cmc
pusha
jo
cmc
fistp
jle
(bad)
hlt
test
cmp
mov
xor
mov
movs
icebp
ret
retf
das
and
popa
jbe
inc
pop
test
das
iret
jae
js
push
cmp
shr
dec
pop
sub
stc
jae
dec
mov
jmp
bound
cmp
dec
push
xlat
jo
xor
xchg
les
pop
sbb
mov
xor
fsubrp
cmps
das
jg
aad
and
scas
inc
(bad)
mov
pushf
adc
sti
pop
in
mov
or
lods
daa
push
adc
sub
or
scas
add
sbb
stos
scas
popf
fsub
mov
cmp
outs
(bad)
call
dec
daa
push
hlt
xchg
xor
imul
mov
jg
jmp
aaa
sti
cli
or
push
in
leave
icebp
fcom
or
mov
fld
jnp
pusha
addr16
gs
inc
jbe
push
jmp
(bad)
stos
jb
test
xchg
icebp
sbb
or
loope
shl
xchg
mov
cpuid
std
pushf
sar
xor
repz
enter
mov
ficom
and
pop
cld
lock
je
mov
add
mov
xchg
adc
repnz
icebp
mov
add
cmp
sub
push
and
xor
std
rcr
dec
inc
aad
fistp
pop
test
dec
jae
xchg
mov
test
loop
mov
(bad)
sbb
lods
arpl
mov
mov
clc
cs
jg
cwde
in
push
or
push
cmps
or
pop
dec
sub
mov
xchg
or
mov
clc
test
cmp
jge
dec
inc
mov
jo
dec
sbb
cmp
and
rol
repz
out
cmp
or
adc
sahf
cdq
mov
jno
push
ja
std
adc
sbb
fldenv
sub
mov
fist
aam
inc
or
mov
adc
int3
in
mov
ficomp
cli
scas
(bad)
shr
(bad)
jl
mov
mov
mov
push
fadd
push
shl
pop
push
push
iret
mov
sar
cli
leave
popf
sbb
cdq
aam
mov
hlt
mov
mov
mov
hlt
sub
fadd
movs
pop
mov
or
imul
xchg
push
inc
adc
mov
fistp
jp
cmp
inc
mov
dec
aam
xchg
gs
sub
cs
or
enter
not
and
aaa
and
mov
nop
jnp
outs
inc
sub
jnp
push
sub
push
jno
(bad)
jge
mov
scas
jne
mov
es
push
loopne
call
mov
xor
call
xchg
icebp
pop
in
pop
add
add
std
push
jns
xor
jmp
cmp
sub
sbb
or
dec
retf
pushf
and
sbb
and
retf
pop
and
or
fadd
pusha
fwait
mov
movs
aaa
das
lods
shl
pop
rcr
xor
scas
cmps
pushf
popf
mov
cli
xor
mov
stos
shl
add
pop
clc
lahf
test
ss
xchg
in
xor
in
les
or
inc
or
pop
test
ret
push
not
movs
rcl
jb
mov
push
shl
hlt
and
push
lahf
aam
mov
dec
mov
pop
pushf
cmp
jbe
les
and
bound
test
pop
sub
push
mov
cmp
jb
sbb
in
test
ror
xchg
clc
mov
aaa
mov
mov
je
imul
sub
addr16
push
add
sub
ins
and
js
cli
rcl
sahf
and
ret
nop
add
dec
loope
fcom
cmps
xchg
xor
scas
sub
scas
dec
scas
jle
and
sahf
loopne
adc
jnp
or
cmp
pop
or
xchg
dec
xchg
sbb
pop
sbb
bound
hlt
mov
fist
jbe
sub
jb
aad
dec
lods
xor
or
leave
jle
mov
inc
test
push
mov
inc
in
fst
jle
jp
inc
xchg
arpl
cmp
mov
push
fcomp
adc
fcmovnb
lods
sub
arpl
inc
add
(bad)
jb
rcr
pop
sub
test
lahf
mov
sub
loope
pop
call
sahf
ins
fs
or
scas
movs
mov
in
outs
jno
jmp
inc
fisub
call
cwde
movs
sahf
outs
pop
popf
into
in
sub
jb
sbb
sbb
cld
outs
fmul
cli
retf
mov
push
add
adc
mov
fidivr
jl
sub
push
inc
nop
dec
cmps
add
arpl
aaa
mov
out
push
and
mov
jg
cmp
or
xchg
or
cmps
mov
xor
lods
ins
pop
inc
inc
mov
sub
lds
repnz
dec
(bad)
(bad)
test
ficomp
push
pop
cmp
sub
loopne
pop
popf
stos
jg
lahf
scas
sbb
sbb
ret
mov
push
cmp
(bad)
fsub
jle
mov
dec
add
ror
loop
dec
push
dec
ss
mov
fs
dec
fnstsw
std
enter
add
add
xor
sbb
cmp
xchg
push
fsub
jne
cdq
xchg
adc
shl
mov
cmps
dec
stc
fmul
push
rcr
scas
shl
dec
out
cmp
repnz
lods
xor
add
rol
int
jecxz
imul
inc
and
(bad)
jnp
jp
jecxz
and
ret
dec
frstpm(287
jne
cmp
add
stos
int3
lahf
inc
sahf
retf
pop
fild
test
in
and
jle
inc
lods
add
cmp
ret
ds
jno
popf
pop
out
pop
out
pushf
add
in
lds
fwait
neg
adc
pop
push
scas
mov
mov
pop
ins
pop
sbb
xchg
push
mov
adc
leave
stc
jae
inc
mov
hlt
mov
adc
into
je
jl
pop
je
les
icebp
(bad)
stos
fimul
movs
arpl
jbe
(bad)
mov
daa
daa
mov
sbb
cwde
fucomp
xor
add
push
rep
test
cmp
xchg
mov
inc
scas
jbe
push
mov
js
push
jo
mov
cmp
inc
push
(bad)
in
xchg
hlt
stc
popa
ror
jne
or
cmps
cmp
inc
jnp
adc
cmp
mov
mov
push
inc
dec
aad
sbb
call
pop
neg
cmp
mov
loope
cmc
pop
ja
sbb
hlt
add
push
scas
sbb
or
mov
jl
cmp
mov
(bad)
scas
or
xor
and
cmp
dec
mov
mov
push
lods
sbb
lods
push
xchg
or
test
add
leave
mov
loopne
das
sub
(bad)
jle
dec
push
jne
(bad)
sbb
cmps
bound
aad
mov
neg
cmp
push
mov
aad
or
frstor
(bad)
sbb
(bad)
dec
sub
sbb
int
movs
inc
lods
jg
cwde
fadd
pushf
mov
aam
adc
jp
mov
imul
lods
dec
(bad)
loopne
test
cmp
pop
sti
mov
popf
stos
jmp
shr
push
jmp
and
inc
mov
stos
sub
adc
sbb
jmp
jl
pop
mov
mov
out
pushf
jo
xor
or
aad
adc
lock
xchg
mov
jnp
test
sar
in
enter
mov
mov
ret
loop
call
js
fst
scas
adc
ret
(bad)
mov
mov
push
jge
lahf
or
out
movs
pop
sbb
lods
inc
dec
push
nop
out
and
stos
mov
scas
sbb
pop
jge
ret
lods
push
(bad)
xchg
shl
dec
pop
out
ss
sub
(bad)
nop
cmp
push
loop
mov
je
inc
mov
mov
xchg
mov
adc
cmp
xchg
icebp
cmps
lea
push
(bad)
mov
stos
test
loopne
push
dec
in
push
ins
or
xchg
or
mov
xchg
jo
iret
test
(bad)
lock
leave
or
cmps
rcl
mov
call
aaa
and
and
aaa
adc
or
ss
xor
in
fdivr
mov
cmps
imul
rcr
outs
inc
rcr
mov
cdq
je
jle
fdiv
cdq
lea
sti
inc
test
fs
retf
mov
xchg
cmc
sub
jbe
jle
out
xor
add
mov
cs
js
jg
int3
xor
xchg
cmp
es
jns
arpl
and
pop
ficomp
or
cli
push
mov
cwde
call
push
mov
adc
xrelease
adc
test
add
div
push
mov
imul
xor
out
aam
aas
fidivr
mov
fwait
imul
jns
repz
test
(bad)
push
inc
xchg
retf
jmp
xor
ins
jmp
cmp
mov
cld
icebp
cli
jb
in
pop
push
inc
jbe
shl
mov
sub
inc
retf
and
sbb
mov
jmp
enter
push
lods
(bad)
call
movs
aam
in
fild
aaa
loopne
add
pcmpgtd
push
daa
pop
inc
stos
repnz
data16
pop
ins
retf
(bad)
fs
and
push
mov
das
xor
push
fmul
hlt
arpl
inc
call
mov
test
bound
(bad)
repz
push
mov
sbb
mov
xchg
mov
fcmovnbe
retf
push
cmp
and
rcl
adc
sub
inc
std
mov
stos
fcos
cmp
mov
cmp
sbb
scas
xchg
stc
jns
stos
push
das
cmc
popa
cwde
dec
scas
jo
or
xor
xor
ins
repnz
je
adc
sub
fcmovu
ins
call
xchg
div
mov
or
sbb
into
retf
mov
mov
sub
(bad)
jl
fwait
cmps
repz
sub
outs
mov
inc
lea
pusha
xor
sbb
jl
jmp
lds
dec
test
lahf
jne
movs
call
in
cmc
cmp
sub
lods
adc
loop
ficom
test
fidiv
mov
(bad)
repnz
push
inc
jns
xor
jp
(bad)
pushf
push
mov
pop
into
xchg
retf
ror
pop
sub
out
sbb
test
out
jmp
idiv
jle
jl
add
fwait
pop
xlat
dec
ret
pushf
iret
or
xor
lahf
adc
mov
enter
or
outs
xchg
js
imul
sti
mov
cmp
pop
add
jns
pop
mov
cwde
mov
and
stos
sar
jl
inc
iret
das
test
jmp
add
dec
adc
sub
push
or
test
sub
(bad)
stos
shl
jbe
sbb
icebp
adc
mov
adc
sub
test
sub
call
pushf
cmp
mov
mov
enter
loopne
mov
clc
xchg
inc
mov
or
mov
inc
imul
retf
cmc
add
mov
js
icebp
xchg
mov
push
aad
push
inc
jp
outs
lods
dec
dec
fadd
mov
cli
aad
hlt
cs
cmp
cli
mov
fsubr
xor
pop
inc
add
or
ficomp
scas
sub
loop
xchg
adc
pop
cwde
push
dec
nop
mov
lock
out
jmp
call
add
dec
imul
sub
push
sbb
adc
dec
aad
and
sbb
inc
push
arpl
xchg
fcom
mov
dec
mov
mov
xchg
jnp
cmps
aam
push
pushf
pop
dec
pop
adc
scas
mov
out
(bad)
and
adc
jp
push
jae
out
push
push
add
mov
pop
mov
cmps
nop
movs
das
test
cmp
or
test
imul
mov
add
shl
lahf
or
add
jbe
add
leave
int3
mov
mov
mov
std
and
les
mov
rol
out
addr16
xchg
je
idiv
jp
ret
rep
int3
movs
inc
inc
sub
inc
ds
mov
popa
ja
into
div
jecxz
div
cdq
in
push
gs
dec
xchg
(bad)
push
mov
pop
imul
(bad)
pop
mov
sti
xchg
sbb
mov
xor
xor
pop
jbe
aad
push
jb
sub
sub
mov
push
in
ficomp
scas
inc
shl
out
mov
outs
cli
(bad)
imul
mov
(bad)
das
rcl
shl
sub
xchg
jnp
xor
add
mov
repz
(bad)
movs
push
mov
xchg
cmp
push
mul
xor
loopne
jmp
mov
xchg
out
ds
jge
stos
test
cmp
aad
dec
inc
push
mov
pop
push
xor
dec
xchg
cmp
inc
aam
adc
add
sbb
xchg
rcl
adc
jle
push
and
dec
push
mov
xlat
pushf
in
fistp
pop
pop
and
cmp
adc
sbb
aad
jmp
xor
cs
out
rol
sbb
fild
bnd
pop
push
ins
and
dec
jmp
mov
mov
retf
inc
clc
cdq
mov
xor
dec
dec
outs
cli
ret
sub
loopne
in
adc
out
add
mov
mov
iret
mov
cmp
shr
in
stc
dec
inc
xchg
jns
jns
movaps
cmp
repnz
aaa
cmps
das
lahf
and
leave
cmps
or
in
add
mov
mov
std
jnp
dec
imul
mov
xchg
jns
xor
sbb
loope
or
mov
dec
inc
and
jmp
mov
(bad)
or
xchg
aaa
jno
iret
(bad)
xlat
ins
sub
cli
jp
in
movs
mov
adc
or
pop
int
mov
cmp
fisubr
xor
loope
pop
int
and
data16
xchg
add
mov
and
add
test
fst
and
push
lods
les
xchg
cdq
dec
pop
cld
daa
sahf
push
loope
sub
xchg
bound
sub
data16
mov
mov
dec
in
call
(bad)
jmp
scas
jo
shr
mov
rol
repz
cmc
mov
mov
sub
ror
ror
adc
neg
lods
es
jmp
ins
push
jg
and
cli
(bad)
xchg
retf
dec
test
sbb
lds
add
jle
jle
sahf
cmp
pop
adc
and
mov
dec
inc
cmps
cmp
inc
cmp
push
(bad)
push
cld
pop
(bad)
ror
adc
pusha
cmp
test
outs
sbb
test
jmp
addr16
gs
cdq
lds
mov
std
adc
in
dec
push
stos
mov
js
mov
pop
sar
(bad)
adc
mov
adc
or
(bad)
fbld
div
data16
and
cmp
icebp
test
cmp
lods
cmp
aad
call
push
sub
repz
sbb
or
lods
push
int
and
adc
adc
add
and
xchg
dec
scas
push
mov
loop
outs
(bad)
xchg
dec
xchg
cmp
hlt
xor
mov
test
lock
sub
(bad)
sbb
pop
fsubr
rcr
mov
ja
xchg
sub
cwde
loop
daa
cmp
mov
(bad)
jo
imul
fmul
(bad)
push
(bad)
nop
mov
mov
pop
or
ss
xchg
scas
inc
xor
and
mov
fs
cmps
push
push
xor
ins
sbb
hlt
fs
push
ficom
stos
cmp
xor
loop
and
(bad)
imul
bound
add
fisub
cld
pop
cs
shr
push
xlat
scas
jo
mov
data16
jl
std
dec
mov
in
mov
dec
mov
(bad)
jl
mov
adc
stc
lahf
adc
fwait
leave
inc
sbb
movs
sahf
cmp
in
jmp
add
jle
and
xchg
je
sub
dec
sub
mov
mov
push
hlt
jmp
loope
pop
lods
push
xor
mov
pop
in
pop
inc
popf
cmp
xchg
jns
adc
test
call
cmp
movs
sbb
push
jbe
pop
mov
mov
add
xor
or
test
xor
leave
gs
int
stc
mov
mov
test
(bad)
xlat
addr16
in
push
mov
cmp
pop
imul
in
pop
lods
cs
jl
xor
fnstcw
sub
cmp
stos
mov
sub
or
push
push
inc
jge
and
push
cmp
dec
test
adc
add
fisttp
pop
loope
int3
sub
call
test
hlt
push
push
nop
mov
sub
not
fxch
push
(bad)
mov
mov
jnp
jne
mov
rcl
pop
div
push
mov
jb
repnz
gs
cmp
jmp
cli
jle
xlat
adc
loopne
(bad)
in
imul
cdq
div
iret
sbb
hlt
sbb
pop
jmp
cmp
push
lea
mov
xchg
jae
inc
int
or
sahf
mov
mov
and
sbb
mov
mov
pop
cmp
sbb
add
push
pushf
(bad)
repz
fcom
js
sbb
push
cmp
fld
cs
jns
sbb
dec
xchg
loope
ja
shl
mov
aaa
jae
add
adc
push
and
ror
out
inc
cmp
bound
pop
mov
or
cmp
test
or
arpl
and
or
dec
jns
iret
dec
mov
pop
(bad)
repnz
xlat
hlt
rcr
pop
xor
(bad)
xor
add
mov
shl
pop
jb
cmp
leave
adc
aaa
mov
xor
push
shl
iret
int
mov
mov
adc
xor
mov
test
dec
or
in
loope
outs
cld
and
std
mov
dec
inc
mov
xlat
adc
mov
adc
scas
jne
in
jg
dec
js
sub
enter
xchg
or
xor
retf
cmps
ret
daa
jbe
ds
out
inc
push
int
mov
sub
sti
xor
xor
imul
xchg
sbb
and
pop
mov
pop
mov
ja
mov
pop
cmc
popa
ins
test
pushf
jmp
sub
ins
sahf
popf
in
dec
sti
fdiv
cmp
faddp
nop
clc
sar
gs
mov
mov
and
dec
outs
mov
dec
ret
jnp
std
ror
call
jp
(bad)
in
cld
int
sub
and
mov
repz
xchg
outs
dec
data16
dec
arpl
xor
or
test
ret
add
xor
push
adc
shl
and
add
mov
nop
fwait
jecxz
enter
enter
(bad)
sbb
pop
movs
fbld
pop
add
dec
stc
add
mov
dec
pop
mov
inc
mov
pop
sub
mov
data16
ret
shr
adc
sbb
popf
(bad)
mov
mov
int3
mov
nop
pop
adc
in
fidivr
adc
mov
bound
mov
inc
hlt
ins
xchg
stos
adc
outs
pop
outs
mov
icebp
and
push
mov
push
xor
nop
nop
mov
(bad)
and
sub
lds
stos
jecxz
dec
nop
retf
dec
xor
mov
pop
cmp
shl
inc
ss
cmps
fnstenv
dec
lea
mov
or
cmp
pop
adc
pop
fcomp
retf
addr16
es
and
xchg
enter
push
cdq
mov
fmul
jo
add
xchg
pushf
or
cmp
mov
je
stos
or
outs
lock
inc
xchg
out
cmc
mov
ss
jo
pushw
stos
in
push
pushf
shl
mov
inc
popa
pop
inc
xchg
xchg
fwait
iret
push
stos
fcomp
fcomp
push
push
push
and
pushf
adc
fwait
into
sbb
rcr
addr16
mov
js
(bad)
icebp
and
fisttp
xchg
jo
stos
fiadd
and
jecxz
movs
adc
push
ret
lods
movs
mov
dec
add
pop
cmp
aam
xlat
lods
push
adc
cmp
cmps
xlat
in
add
mov
lods
inc
xor
shl
xchg
mov
xchg
xchg
arpl
in
mov
mov
add
cmp
ror
jp
jmp
sbb
scas
sbb
jns
pop
(bad)
in
dec
ja
sbb
fwait
adc
fwait
cwde
fmul
std
(bad)
dec
ret
xor
push
nop
shl
ret
mov
or
inc
std
sbb
ret
xor
inc
xor
lds
stc
out
ins
cmp
inc
jge
push
loop
test
mov
movs
mov
gs
shl
inc
push
retf
mov
lock
sub
pop
mov
pop
ja
xor
xor
mov
adc
or
jns
sar
dec
rol
mov
mov
shl
pop
mov
js
stos
sbb
(bad)
sbb
jmp
repnz
mov
(bad)
lods
and
scas
adc
(bad)
mov
mov
ins
lods
xor
xlat
mov
dec
out
outs
fild
enter
in
mov
dec
cmp
scas
inc
or
dec
mov
mov
xchg
mov
mov
jns
mov
cmps
mov
jnp
add
xchg
nop
loop
fs
sub
imul
xor
mov
or
setae
mov
aad
rol
push
test
loop
jg
inc
sar
and
pop
inc
div
jmp
adc
mov
les
movntq
out
xchg
dec
inc
inc
addr16
cmp
and
dec
rcr
xor
mov
fstp
add
ret
fwait
sub
mov
outs
mov
(bad)
stos
(bad)
fmulp
in
hlt
dec
fdiv
std
xchg
or
push
cmp
outs
sahf
mov
or
jp
ja
test
dec
popa
in
loopne
jae
pusha
out
imul
fucom
jns
leave
pop
pop
cmc
sbb
ss
cmp
pushf
mul
pop
push
addr16
in
imul
out
cs
leave
pop
lods
xor
fninit
jecxz
push
jb
inc
(bad)
mov
das
cmp
inc
cmp
pop
pop
hlt
mov
xchg
dec
js
dec
mov
(bad)
out
sbb
add
stc
jmp
icebp
repz
and
daa
inc
aad
fwait
mov
pop
push
mov
fstp
mov
dec
pop
not
dec
aam
cmps
mov
push
xchg
movs
jno
sbb
adc
inc
jne
and
in
mov
pop
loopne
sbb
shr
xchg
jp
int
imul
pop
fld
shl
test
pop
into
cmc
hlt
pop
ret
dec
(bad)
enter
xor
or
loopne
mov
in
das
mov
cmp
loopne
js
movs
sbb
or
pushf
cmp
das
fwait
sbb
pop
xchg
jle
pop
cmp
or
pop
inc
and
mov
pop
pop
push
call
popa
leave
add
jne
cmp
mov
or
xchg
inc
lods
jb
aad
aaa
cmp
inc
dec
lds
lods
lods
sbb
popa
fs
cmp
sbb
jle
mov
dec
mov
int
iret
mov
pop
pop
stos
out
daa
sti
adc
push
cmp
stos
xor
xor
mov
sar
mov
imul
mov
fld
inc
icebp
inc
xchg
pop
repnz
fimul
xchg
inc
fadd
mov
xor
jmp
shl
pop
hlt
imul
outs
jbe
jmp
pop
pusha
xlat
out
mov
jge
(bad)
mov
test
loope
ds
shl
jne
add
xchg
cmps
nop
jecxz
inc
(bad)
and
ror
sub
(bad)
or
pusha
call
xlat
adc
push
adc
sub
sahf
sbb
lea
(bad)
xor
ret
ins
adc
and
xor
pop
xchg
(bad)
leave
jns
inc
jecxz
xchg
lds
inc
push
sub
push
sahf
test
push
or
shl
js
xchg
mov
jg
les
loopne
arpl
loopne
and
js
add
lock
xchg
call
add
xchg
lds
fldenv
xor
jbe
push
shl
sub
arpl
call
jle
mov
hlt
cmp
js
push
(bad)
das
lods
aad
jno
ja
pop
sbb
cmp
leave
add
int
pop
mov
dec
shr
arpl
add
and
mov
pop
in
sub
shl
push
cwde
pop
clc
xchg
push
or
(bad)
daa
mov
ret
loope
push
push
(bad)
dec
adc
fstp
enter
adc
out
aad
fwait
or
dec
cmp
inc
fild
popf
pusha
inc
xor
cmp
push
enter
dec
sbb
mov
ja
call
mov
cmc
lea
push
sub
cmp
mov
sbb
popa
fs
xlat
test
pop
xor
mov
push
or
imul
es
mov
cli
push
add
addr16
xor
mov
stos
mov
push
pop
in
push
adc
enter
xor
mov
sub
adc
(bad)
faddp
loopne
or
std
imul
(bad)
pop
ins
xor
(bad)
push
push
xchg
or
and
xor
ds
cwde
jns
jno
data16
loopne
sahf
les
aaa
mov
sbb
push
or
push
pop
add
retf
inc
stos
push
push
lock
sub
arpl
or
mov
pop
mov
and
sbb
cmp
pop
mov
and
mov
neg
push
movs
or
cmps
sub
jne
lahf
test
gs
xchg
push
inc
in
js
cmp
inc
push
push
retf
lahf
jne
mov
jo
pushf
lahf
lds
or
(bad)
aad
fwait
sbb
mov
outs
jnp
adc
outs
iret
xchg
fstp
mov
mov
lahf
scas
pop
call
ror
mov
outs
jnp
dec
je
out
xchg
pop
add
cs
stc
jecxz
cmp
cmps
jmp
(bad)
ret
pop
jg
sub
sar
test
dec
fs
push
sbb
enter
adc
stc
rol
xchg
cmp
cmps
or
jmp
sbb
aad
int3
hlt
mov
mov
pop
sti
fild
aaa
push
ins
pushf
adc
inc
test
(bad)
movs
mov
push
outs
sar
in
dec
inc
cmps
mov
adc
or
mov
lock
stc
das
pop
lea
xchg
cmp
inc
mov
mov
in
dec
mov
add
xchg
mov
pop
xor
fild
js
shl
rcr
ja
jge
pop
cs
jnp
cmp
inc
gs
scas
ds
inc
pop
xchg
jo
and
sub
and
imul
out
or
mov
cmc
sbb
hlt
test
sbb
jmp
icebp
sbb
mov
xor
data16
sub
iret
daa
scas
test
cmp
mov
repz
sbb
int
outs
(bad)
jb
fs
xchg
retf
add
jnp
repnz
sbb
inc
dec
repz
lods
repz
and
adc
mov
imul
(bad)
sbb
je
pop
pop
inc
adc
xlat
lock
dec
hlt
fs
and
push
outs
pop
call
pop
or
loope
js
retf
mov
imul
jmp
lea
aam
aad
xchg
scas
or
lods
jb
fstp
dec
(bad)
call
and
jp
sbb
pushf
ss
mov
adc
or
mov
mov
xchg
fwait
gs
push
add
xchg
cdq
jmp
divps
loope
or
pushf
or
pop
sbb
leave
rcl
or
popa
mov
jp
sub
out
repnz
xchg
test
dec
mov
sti
push
mov
shr
sub
outs
daa
xchg
mov
sbb
pop
xchg
lods
pop
mov
dec
xlat
fsubr
lahf
ins
stos
add
(bad)
lods
push
pop
out
adc
es
add
cmp
stos
jns
arpl
push
sbb
pop
jne
aas
in
lods
(bad)
push
xchg
mov
pop
sti
dec
push
pop
ja
cmp
jno
je
xchg
jb
pusha
adc
xor
test
or
dec
cs
mov
jb
inc
out
repz
jmp
adc
outs
in
mov
pop
add
je
sbb
and
xchg
outs
test
lea
sbb
pushf
inc
add
pop
pop
cwde
sub
lds
loopne
retf
mov
shl
iret
out
hlt
repnz
ret
jns
pop
pusha
pop
fld
outs
movs
sub
mov
sub
mov
mov
sub
mov
popa
mov
push
mov
jmp
inc
test
or
adc
mov
sub
pusha
dec
test
mov
sub
adc
push
cmp
out
clc
cmp
cdq
outs
lods
cmp
or
mov
lahf
mov
addr16
jle
mov
cmp
or
xchg
mov
test
inc
sti
push
into
les
jg
scas
push
adc
outs
xchg
repnz
loopne
not
inc
cmps
inc
dec
stos
mov
popf
xchg
into
or
mov
das
fwait
push
popf
jl
push
pop
or
xlat
add
pop
hlt
dec
sti
retf
pop
mov
pop
scas
cmps
inc
test
stos
out
movs
(bad)
bound
shr
sbb
cmp
and
int3
adc
(bad)
cmp
das
fstp
ret
out
jnp
js
test
lea
cmp
lock
lods
xor
dec
and
xchg
stos
stos
ficom
rol
pop
repz
adc
xchg
inc
or
std
inc
js
fldenv
jmp
ret
cmp
push
dec
pushf
cs
arpl
in
pop
xchg
(bad)
mov
shl
loope
addr16
add
pop
jmp
into
js
ret
mov
fisttp
pop
imul
pop
sub
jle
mov
jnp
mov
sbb
cli
std
push
sahf
test
jb
ja
sub
pop
sub
xor
pop
mov
mov
ret
inc
xchg
fwait
iret
loopne
dec
sub
ror
and
jae
jl
inc
adc
sbb
rol
adc
pop
cmp
inc
adc
sbb
aas
popa
aad
out
adc
aad
fsubr
mov
aaa
mov
int
xchg
cmp
or
retf
push
mov
mov
push
sbb
fldenv
push
mov
inc
mov
lds
xchg
dec
cli
pop
ror
dec
mov
inc
fucomp
enter
icebp
or
ins
repnz
push
loope
lods
pop
mov
cs
jnp
aas
imul
(bad)
cmp
pop
adc
in
adc
call
mov
jg
movs
or
push
je
push
stc
pop
and
aaa
push
pop
fs
hlt
scas
dec
ror
das
sbb
push
xor
jns
loope
lods
cmp
cmps
(bad)
fs
es
ja
es
ins
inc
call
mov
adc
cli
sti
test
and
rcl
and
mul
ror
and
scas
bound
das
mov
mov
data16
adc
push
pop
xchg
and
inc
or
mov
and
push
(bad)
fsubr
fisttp
inc
ffree
jmp
xor
mov
lea
sub
test
daa
or
jae
mov
outs
and
xor
jno
pop
sub
dec
rcr
jge
push
int3
stc
mov
fldenv
xchg
xlat
mov
jbe
(bad)
clc
and
add
fist
stc
outs
(bad)
ror
and
xchg
cmp
enter
push
retf
mov
jno
leave
je
rol
aaa
fnstenv
bound
lock
lock
push
nop
jge
sbb
push
call
dec
push
adc
jae
mov
sbb
adc
loop
stos
ins
imul
movs
inc
push
mov
in
fimul
(bad)
jg
adc
fstp
outs
add
iret
add
xchg
ja
and
jmp
mov
push
xor
sar
push
mov
mov
and
ret
add
mov
jl
add
(bad)
aaa
sub
pusha
or
test
add
dec
cdq
rol
mov
mov
lock
int3
push
mov
cmp
adc
sti
je
cdq
xchg
jecxz
int
nop
pop
dec
sbb
mov
xchg
add
add
loop
adc
imul
or
neg
sbb
fbld
jmp
inc
xchg
mov
jg
arpl
mov
fsub
push
jecxz
xor
mov
leave
popf
aad
jmp
(bad)
cdq
xchg
mov
mov
outs
loop
sub
jmp
fidivr
jns
xor
pop
xor
mov
and
mov
jecxz
jp
dec
rcl
psrld
sahf
push
loop
das
fs
std
repz
retf
push
inc
mov
iret
stc
fs
ds
sar
loope
into
jmp
cwde
adc
push
jp
mul
jne
pop
add
mov
out
(bad)
pop
jnp
cdq
ds
add
mov
push
or
shl
popf
mov
lods
pop
ja
push
mov
(bad)
sub
repnz
cmp
ret
adc
add
push
ret
adc
gs
jb
(bad)
jns
cwde
jge
pushf
push
ins
mov
cmp
(bad)
sbb
(bad)
mov
jno
das
loop
inc
rcr
lods
ret
mov
ret
ds
in
mov
sub
xor
(bad)
rol
dec
int
ficom
mov
lods
and
hlt
push
popf
push
pop
sbb
inc
sub
mov
retf
inc
push
dec
(bad)
cdq
xor
xor
push
sahf
push
lds
aad
sub
xor
out
ss
cmp
inc
xchg
sub
repnz
xchg
mov
sub
retf
movs
ss
sub
addr16
sti
cmp
lea
pop
or
inc
ins
ret
call
adc
inc
test
jge
sbb
xor
cmps
cdq
pop
xchg
fsubr
mov
fisub
sbb
fbstp
xchg
or
sahf
pop
and
jmp
scas
mov
jmp
push
popf
add
xchg
add
dec
sub
sar
ret
gs
mov
jno
sbb
adc
inc
pop
pop
std
mov
mov
imul
sbb
mov
loopne
mov
sti
jmp
cmp
adc
ret
sbb
popf
sbb
and
mov
pop
cmp
(bad)
mov
jp
pop
or
bound
(bad)
jnp
adc
inc
mov
push
loopne
xchg
sub
daa
jo
mov
and
jae
mov
mov
in
jle
pop
jmp
xor
ret
clc
retf
cmp
add
sub
stos
push
xchg
and
sti
add
pop
lea
or
clc
pop
mov
repz
clc
jle
jnp
xchg
in
out
retf
jns
inc
repz
push
cmp
mov
imul
mov
cmp
mov
fucomp
xor
push
pop
cs
out
push
cmp
movs
jge
mov
movs
mov
arpl
sbb
or
test
ficom
dec
rol
sub
into
movs
call
scas
inc
and
ds
mov
bound
push
dec
sahf
xchg
pop
js
pop
push
in
test
lock
push
cmp
mov
mov
push
pop
dec
and
lods
daa
mov
sbb
mov
mov
pop
jmp
pop
retf
sbb
icebp
mov
pusha
xabort
lock
cwde
stos
int3
pop
out
sar
fcmovne
inc
stc
iret
je
rol
nop
addr16
cmp
imul
xor
jno
xchg
adc
inc
inc
cwde
lahf
xchg
loopne
shl
jb
adc
fld
int
popf
outs
js
jle
sbb
sbb
and
or
sbb
shl
pop
shr
mov
icebp
and
outs
imul
dec
jecxz
sbb
push
sub
pop
xor
xor
daa
das
add
imul
mov
jmp
sub
movs
stos
lods
dec
sbb
xchg
icebp
repnz
jp
scas
cmp
outs
and
ins
cmp
ins
call
xor
mov
push
xchg
push
fcom
js
mov
and
ins
dec
adc
sub
add
scas
outs
jl
push
push
or
mov
pusha
jmp
nop
daa
lahf
mov
pop
jecxz
fisubr
fstp
or
mov
jnp
xor
inc
arpl
hlt
int3
and
mov
sahf
jg
nop
je
test
sbb
fistp
in
pushf
arpl
scas
or
or
sub
dec
int
arpl
pop
xor
call
mov
das
jno
push
push
pop
mov
or
push
ja
add
jo
call
pop
adc
pop
mov
jb
push
idiv
add
dec
lock
in
xchg
int3
inc
sub
retf
stos
std
rcl
pop
mov
add
aaa
lahf
(bad)
shl
mov
leave
adc
in
aas
fldenv
mov
aas
sbb
out
imul
iret
(bad)
push
mov
test
cld
call
scas
ret
push
iret
jae
dec
stos
into
mov
aas
or
loop
adc
retf
push
or
mov
ins
repnz
xor
jg
or
bound
repnz
mov
ds
push
mov
sub
shl
inc
jmp
popf
jmp
cs
pop
lods
xlat
jmp
pop
stos
xchg
sbb
out
mov
fcom
test
rol
bound
sar
sub
fs
dec
xchg
sahf
jmp
sbb
mov
je
mov
popf
lock
fcomip
cwde
lds
rcr
ror
and
push
add
inc
add
aad
xchg
or
stos
cmp
or
pop
mov
mov
cmp
dec
dec
xor
pop
sub
pop
dec
aaa
sbb
shl
dec
adc
enter
mov
xor
es
ret
inc
(bad)
scas
fmul
fs
inc
rcl
call
(bad)
xor
xchg
cmp
adc
or
xchg
sbb
aad
and
push
hlt
sub
vmovaps
sub
cmp
mov
imul
(bad)
jb
pop
inc
jmp
cmps
mov
popf
cli
mov
add
cmp
mov
data16
inc
or
jae
dec
sar
add
xor
xor
cmp
bound
fcom
fnstcw
pop
ret
mov
jecxz
lods
push
pusha
dec
cmp
dec
jae
dec
cmps
push
aas
int3
pop
or
ror
scas
mov
imul
(bad)
and
sub
sbb
daa
stos
mov
adc
pop
jl
pop
das
lea
sub
cmp
int
pop
in
inc
fsubr
movs
mov
lahf
std
ffreep
sti
(bad)
cmp
or
sbb
mov
mov
adc
push
cwde
jo
xchg
jp
sbb
pop
dec
cs
dec
ins
inc
xor
sbb
push
pop
test
icebp
xor
dec
fild
add
jae
add
test
fadd
cld
mov
mov
jne
push
int
(bad)
mov
xchg
xchg
cmp
jge
cmps
add
sbb
mov
(bad)
push
scas
sbb
or
outs
adc
mov
int3
push
pop
cld
or
sub
js
xchg
mov
sti
and
jl
loop
add
or
call
(bad)
mov
fisubr
sub
dec
leave
inc
pop
pushf
and
int
(bad)
nop
stc
cli
sub
(bad)
stc
push
dec
sahf
dec
cwde
dec
(bad)
and
dec
rol
mov
jl
pusha
je
inc
xor
adc
push
lods
test
pusha
fld
mov
clc
mov
or
and
push
sti
mov
fimul
cs
jbe
add
ins
(bad)
stos
cmp
mov
jecxz
rcl
ins
pop
loope
jmp
fistp
loop
xchg
mov
add
jne
mov
aam
lods
lods
mov
pop
shr
adc
inc
jb
stos
jb
jne
sbb
inc
xchg
add
push
test
cmp
in
imul
dec
sub
dec
push
lods
mov
and
enter
mov
jne
cmc
mov
imul
and
or
ret
push
stos
lahf
xchg
xchg
retf
xor
jle
xchg
or
sbb
test
scas
int
xor
mov
push
inc
loope
shl
pushf
iret
sbb
out
sub
pop
sti
(bad)
sbb
data16
mov
ret
push
shl
jmp
in
push
dec
cmps
sub
loop
sbb
lahf
adc
and
std
push
mov
shl
xchg
sub
aas
test
jl
pop
(bad)
mov
mov
lods
adc
mov
stos
jmp
ins
hlt
pop
push
add
adc
push
rcr
addr16
arpl
jle
loopne
stc
pop
out
adc
inc
cdq
and
adc
pop
pop
sbb
lahf
jno
cs
pop
jp
call
push
inc
mov
arpl
xchg
mov
fiadd
sub
outs
hlt
mov
pop
out
dec
daa
mov
and
lock
(bad)
push
lock
pop
add
aas
push
pop
push
xchg
ds
add
mov
and
mov
arpl
jle
rdpmc
push
cmp
xor
stos
cmc
cmp
push
sub
test
sub
lahf
mov
les
(bad)
lods
jg
fs
and
xor
add
pop
test
mov
and
add
cmp
in
ret
cmp
adc
pusha
pop
push
into
or
or
(bad)
test
inc
mov
sub
push
cmp
loope
sub
call
shr
(bad)
imul
(bad)
call
enter
push
loopne
cmp
aaa
inc
cmp
stc
fucomip
sti
pop
out
gs
jge
std
int3
pop
lods
out
adc
pop
xor
sti
xchg
push
sbb
ja
leave
fld
loop
xchg
ja
inc
mov
(bad)
push
mov
movs
out
mov
into
add
mov
rcr
push
or
retf
dec
ins
sub
cmp
jmp
adc
dec
(bad)
cmp
xchg
sub
stc
loop
mov
scas
mov
jae
sbb
sbb
mov
sbb
add
dec
xor
dec
mov
mov
dec
push
dec
pop
mov
adc
mov
push
mov
push
cwde
xchg
in
mov
and
mov
pop
out
or
push
cmp
outs
pushf
push
push
xor
mov
inc
inc
jecxz
test
movs
push
jg
out
repnz
shl
jge
push
push
sbb
call
mov
test
fcomp
and
jnp
in
sub
push
xor
stc
into
shr
push
add
jbe
pop
adc
xlat
ins
movs
cmp
lahf
inc
dec
mov
cmp
and
hlt
pop
mov
clc
stos
cli
push
sub
cmp
mov
stos
cmp
ss
in
in
jl
fist
push
dec
inc
sub
popa
mov
pusha
fdiv
or
or
jns
iret
sub
jno
pusha
fsub
arpl
cmp
pop
add
sbb
inc
jl
add
fsubrp
adc
js
push
push
aad
pop
mov
cmp
or
scas
cld
in
int3
dec
mov
push
in
cmc
and
add
mov
arpl
shl
jo
fstp
jae
fs
movs
test
mov
xchg
cmp
movs
call
je
cmps
lahf
ss
xchg
pop
fisubr
mov
xor
mov
out
(bad)
push
js
pushf
scas
jo
xor
add
mov
inc
mov
xchg
ds
push
clc
dec
jg
jae
pop
lea
jne
enter
popa
adc
sti
jmp
fsubr
mov
cmps
xchg
mov
int
adc
dec
stos
xchg
cmps
jmp
in
cmps
add
rcl
adc
ret
test
(bad)
jno
jge
fisubr
je
and
in
jle
test
push
ins
sbb
(bad)
cmp
pop
mov
jmp
dec
ret
iret
gs
loope
fcmovnbe
pop
or
pop
sub
adc
mov
pop
or
(bad)
aas
imul
jbe
push
mov
xchg
cmp
inc
pop
lea
sbb
pop
js
ins
ret
out
cmps
push
in
push
add
mov
pop
lock
bound
cmc
mov
rcl
addr16
sahf
arpl
pusha
sar
ja
scas
outs
sub
mov
xchg
push
adc
outs
cmp
jg
xor
in
inc
pop
scas
inc
(bad)
hlt
jl
mov
push
shl
aaa
repz
pop
cmp
push
ret
fisttp
int3
rcl
jmp
jp
sbb
xchg
xor
movs
(bad)
in
in
lahf
push
add
scas
mov
jae
pop
jle
ret
fldenv
mov
fild
fwait
sti
xchg
inc
xchg
(bad)
aad
or
mov
out
dec
mov
shr
mov
jae
adc
push
in
fcom
push
(bad)
leave
inc
mov
push
test
scas
ja
xchg
xchg
pop
sub
cs
push
jl
test
and
lahf
add
aas
sbb
icebp
(bad)
pop
out
mov
sbb
pushf
fcom
(bad)
clc
mov
inc
out
mov
fisttp
sbb
dec
or
and
cmp
in
sti
push
xchg
inc
pop
push
dec
mov
out
mov
(bad)
dec
xchg
fs
icebp
imul
pop
xor
mov
nop
shl
sbb
pop
in
xchg
mov
imul
mov
cmp
pop
ins
ins
or
shr
cs
or
sbb
xchg
add
adc
out
in
maxps
pop
xor
enter
mov
and
jbe
popf
cmp
mov
adc
sbb
gs
and
sbb
dec
add
mov
lock
imul
dec
cld
xchg
sub
sub
fcmovne
ins
(bad)
in
mov
push
imul
movs
je
outs
mov
xor
lods
mov
sti
sub
ret
fcom
fstp
xchg
dec
cmp
call
mov
fmulp
cmp
ins
sub
jbe
pushf
pop
mov
and
jo
and
xor
call
popa
shl
rcr
mov
sbb
jl
mov
loop
mov
out
mov
pusha
(bad)
mul
ror
pop
scas
hlt
inc
popa
(bad)
jno
mov
sbb
mov
dec
and
push
into
jo
pop
in
addr16
push
mov
inc
mov
dec
or
mov
jge
dec
xchg
int3
data16
shl
addr16
repz
movs
jb
sub
fld
dec
sbb
push
push
ret
push
es
repnz
or
mov
loopne
repnz
mov
pop
test
inc
mul
add
xchg
stos
sbb
mov
aam
outs
mov
inc
mov
aas
in
imul
jne
xchg
les
dec
cmp
les
jl
add
pop
in
and
je
fldl2e
jmp
add
pop
xor
dec
sub
daa
ins
xchg
cmp
cli
cmc
imul
dec
xchg
inc
loopne
pusha
pop
sub
in
div
add
jg
push
xchg
ret
mov
adc
div
or
les
les
aaa
dec
iret
inc
xlat
sbb
pop
mov
inc
mov
sub
mov
repnz
sub
sub
int
int
xor
jg
sti
aaa
movs
outs
(bad)
fnsave
xlat
scas
pop
mov
push
jo
mov
out
mov
xchg
mov
ja
jns
xchg
(bad)
mov
push
sbb
xchg
retf
test
fidiv
fcomi
jmp
mov
ins
xor
sar
ja
test
push
in
and
and
pop
cwde
ret
jge
push
inc
dec
mov
retf
dec
push
retf
sub
(bad)
cli
sbb
test
je
xchg
ror
mov
retf
in
or
adc
out
lods
inc
enterw
adc
ror
in
or
jge
fs
adc
stc
arpl
mov
out
add
lea
push
sbb
sar
dec
mov
lea
ret
shr
add
dec
lahf
push
repnz
xchg
cmps
popa
fs
mov
in
push
jmp
repz
push
call
jo
mov
fsubrp
and
xchg
outs
imul
in
aas
cmps
mov
adc
fsubr
and
mov
outs
push
lea
cmp
mov
neg
in
imul
xchg
rcr
popf
and
pop
aad
fisub
xchg
xchg
adc
mov
bnd
(bad)
hlt
les
or
mov
cmp
xchg
rol
aaa
bnd
jne
hlt
pop
icebp
(bad)
dec
out
bound
xor
cmp
(bad)
cli
out
popf
das
mov
jno
loopne
daa
jg
and
push
(bad)
(bad)
sahf
fld
xchg
sbb
sub
ret
inc
mov
sbb
sub
pop
pop
or
popa
push
mov
fcmovnb
ja
dec
and
sub
pop
loopne
pop
add
mov
push
push
ja
mov
imul
ror
jecxz
jmp
sti
push
cs
xchg
or
stc
sub
mov
bound
xor
sub
add
pop
xor
and
out
mov
js
call
std
or
pop
das
into
bound
cld
pop
inc
pusha
add
add
sub
in
or
xchg
cld
dec
adc
mov
out
mov
or
add
dec
fnsave
push
and
addr16
les
jg
aas
mov
adc
stc
inc
mov
clc
mov
leave
mov
sbb
mov
dec
mov
out
adc
mov
into
mov
out
add
std
add
or
xchg
push
into
dec
pop
and
lods
out
fcomp
push
fdivr
mov
cmps
ret
inc
xchg
js
sbb
stos
in
cs
sti
jns
xchg
mov
in
les
in
dec
into
test
loopne
retf
mov
cmps
dec
pop
cli
xor
add
mov
out
test
mov
scas
jnp
je
cld
int3
push
jmp
add
sub
stos
out
cmps
ficomp
jg
jb
xchg
and
and
shl
ror
and
int
xchg
add
jg
inc
(bad)
aam
lods
(bad)
daa
shr
cwde
mov
sub
adc
or
and
mul
xchg
sub
inc
call
pop
retf
xor
jb
sbb
fld
not
lods
xchg
(bad)
js
cmc
cwde
fnstenv
aam
ds
(bad)
outs
jbe
leave
inc
fisubr
aad
xchg
das
pop
stc
in
fcmovnu
jbe
push
daa
or
inc
xor
mov
jmp
cmp
pop
fldenv
jns
inc
pop
push
hlt
dec
dec
push
or
in
pop
outs
hlt
popa
mov
aad
mov
sub
mov
xchg
cdq
or
xchg
call
pop
(bad)
(bad)
fadd
cmp
lds
aad
xor
iret
dec
inc
retf
leave
retf
cli
enter
xchg
pop
sbb
mov
adc
inc
sbb
push
arpl
push
or
neg
frstor
jl
xchg
inc
es
mov
xchg
jp
es
adc
jle
out
pusha
imul
pop
scas
fsub
lds
es
aas
into
jne
push
xor
fucomip
cmps
(bad)
mov
aas
aad
inc
push
sbb
push
fisub
cld
test
dec
icebp
inc
or
imul
add
sub
cmp
push
jp
push
imul
rol
fcom
push
cmp
xor
adc
xchg
or
fwait
and
lods
mov
cmp
arpl
xchg
xor
jle
retf
dec
mov
cmp
cmps
push
add
push
js
pop
fwait
(bad)
xlat
fs
push
pushf
add
(bad)
enter
xor
das
inc
adc
out
fld
jns
repz
mov
xor
lods
mov
stos
sbb
jmp
sahf
or
lods
adc
repz
cmp
aad
dec
int
std
lahf
(bad)
add
push
retf
push
outs
fadd
mov
cwde
push
ds
ds
pop
jge
push
das
mov
or
add
popf
pop
or
cld
clc
aad
movs
icebp
pushf
movs
fld
or
xchg
retf
int3
dec
shr
cmp
adc
inc
mov
ins
fwait
in
sub
pop
jne
rcl
adc
sbb
stos
add
mov
dec
add
call
pusha
scas
in
mov
loopne
lods
aad
push
pop
and
mov
inc
bound
xor
xchg
sti
or
scas
lea
pop
in
(bad)
jp
xor
test
sub
push
fsubr
inc
cmp
dec
or
add
add
push
jl
adc
push
data16
pop
into
and
loop
inc
mov
mov
mov
or
sbb
dec
addr16
bound
pushf
enter
mov
cs
push
cmp
and
imul
mov
ror
dec
(bad)
fstp
or
aaa
aas
mov
sub
sbb
cmp
mov
leave
adc
hlt
push
inc
mul
(bad)
out
repnz
sub
xchg
ja
cmp
inc
push
cmp
mov
(bad)
push
ret
jmp
xor
or
aaa
inc
and
clc
test
xor
mov
sbb
sti
fcom
xchg
rol
push
fmul
sbb
or
(bad)
push
cmp
push
mov
cdq
in
xchg
pusha
adc
dec
add
lods
movs
sbb
add
mov
imul
xchg
test
jp
inc
push
addr16
jns
adc
data16
dec
adc
fwait
mov
div
jmp
int
xchg
add
fcmove
icebp
jo
jge
pusha
push
cmp
xchg
out
sbb
push
int
hlt
repnz
sub
and
jno
in
adc
inc
sub
mov
mov
push
loopne
test
fwait
adc
pop
mov
mov
mov
sub
cld
jle
inc
dec
mov
xor
jb
jb
arpl
jns
sbb
cdq
push
mov
sti
jae
cmp
mov
addr16
fisub
mov
mov
or
je
push
add
adc
xor
jbe
fimul
out
ret
cs
jo
jbe
mov
daa
imul
test
dec
jmp
cld
out
or
push
enter
or
je
outs
aas
ins
inc
clc
add
sbb
out
cmp
mov
add
adc
rcl
sub
xchg
mov
es
pop
aas
push
in
cmp
shr
or
fstp
ds
icebp
mov
popa
in
out
scas
js
pop
(bad)
ror
stos
mov
inc
stc
xlat
test
jmp
stos
in
mov
clc
mov
aam
fld
push
push
test
mov
pop
cmp
shl
or
jno
add
xchg
call
std
cdq
in
mov
lahf
pop
push
ror
pop
ficomp
jne
cmp
cs
add
cs
not
mov
int
or
inc
xchg
shrd
push
pop
pop
repz
sub
and
test
fsubr
cmc
sbb
sbb
scas
xchg
out
fcom
lods
sub
mov
hlt
sbb
mov
adc
js
inc
imul
sub
jae
stos
arpl
lock
lds
stos
sti
mov
stc
pop
cld
sub
int3
mov
mov
inc
leave
and
adc
ds
or
enter
in
or
jl
add
cmp
mov
arpl
nop
add
iret
call
dec
scas
ss
fimul
aad
jbe
mov
jmp
pop
xchg
mov
mov
jecxz
xor
bound
dec
idiv
and
dec
pop
test
js
(bad)
(bad)
daa
push
cmp
ins
jnp
(bad)
push
pop
xchg
enter
cmp
in
aas
adc
xor
inc
push
int3
in
(bad)
xchg
in
data16
movs
xchg
and
jge
cli
cmp
int
ss
mov
scas
fbld
(bad)
sub
cmp
retf
out
lahf
les
int
jns
pop
pop
or
jb
retf
lea
dec
push
mov
mov
sub
test
fcomp
in
adc
xchg
int
dec
aaa
(bad)
cmps
xchg
inc
xchg
ja
cmp
lahf
sbb
lock
lea
jmp
das
mov
pop
adc
repnz
jb
jnp
mov
pop
mov
hlt
in
cmps
and
xchg
and
xchg
cmp
leave
outs
mov
fild
mov
pop
xor
or
fcomp
mov
inc
mov
push
sbb
ss
xor
mov
adc
enter
ret
cmp
in
jmp
fstp
cmp
xor
inc
and
adc
js
out
repnz
push
or
xor
fs
or
pop
mov
sub
outs
jle
not
adc
push
add
inc
sub
out
inc
mov
imul
jo
adc
mov
sbb
dec
scas
mov
call
sub
or
sub
pop
dec
in
mov
clc
sti
cwde
inc
inc
inc
test
pusha
stos
xor
push
xchg
call
lock
xlat
mov
add
and
sub
(bad)
fnsetpm(287
repnz
out
(bad)
invd
jns
xchg
add
int
jne
xor
(bad)
jae
int3
mov
loop
xor
aas
or
dec
cmps
push
sbb
lods
and
iret
mov
xor
in
push
icebp
xor
inc
in
mov
push
adc
mov
xchg
xchg
cwde
xchg
jns
pop
nop
xchg
ja
push
fist
test
jne
popf
loopne
mov
out
pop
mul
jecxz
test
add
adc
mov
in
pop
xchg
cmp
or
sbb
pop
pusha
fist
(bad)
dec
cmp
mov
neg
ret
sahf
jp
rcr
jbe
cs
sbb
xor
xor
and
push
imul
pause
xchg
jmp
cwde
jg
ja
int3
xchg
sbb
and
loopne
push
sti
and
pop
addr16
mov
pop
adc
mov
push
inc
pop
mov
cmps
mov
jge
stos
mov
jmp
sub
out
and
pop
sti
adc
xchg
sbb
or
inc
dec
and
fistp
out
enter
mov
rcl
cmp
call
loope
cmp
adc
xchg
xor
dec
push
jne
(bad)
ins
xchg
lea
jns
in
retf
outs
mov
sub
mov
add
xchg
es
test
xchg
(bad)
ds
fs
in
je
lods
hlt
adc
mov
jl
ss
cmp
(bad)
fldcw
sub
cmp
mov
call
sub
test
jns
cmps
aaa
cmp
push
and
out
and
clc
jbe
add
xor
daa
aam
mov
ins
out
push
jbe
sub
arpl
pop
fstp
popf
imul
lock
popf
add
lahf
cli
cmp
dec
lahf
mov
adc
or
mov
cmp
das
js
call
fwait
out
stos
loop
dec
jae
cmps
mov
out
jae
cdq
std
cld
sbb
sub
dec
imul
gs
add
inc
shl
mov
dec
cli
mov
rcr
push
imul
jns
sub
inc
cmp
xor
push
xchg
test
(bad)
out
hlt
sub
frstor
je
mov
push
inc
mov
out
jmp
inc
pop
mov
aad
into
mov
sbb
or
pop
pop
cmp
mov
daa
jbe
les
aaa
sub
pop
push
outs
cmps
clc
pushf
in
xlat
mov
pusha
fild
fbstp
mov
xor
scas
fcomp
push
pop
mov
(bad)
jnp
pop
dec
sub
xor
xchg
sub
push
and
inc
imul
jno
adc
loope
fld
outs
repz
push
test
jb
cld
mov
mov
enter
rcr
sbb
mov
dec
push
sahf
and
jmp
push
jmp
out
cmp
xor
call
test
push
adc
or
jnp
push
(bad)
inc
mov
push
jp
mov
xchg
and
shl
push
add
fsubr
sbb
push
add
test
jno
aad
push
(bad)
clc
(bad)
jmp
fsubr
xchg
fsubr
rep
sub
push
or
pop
adc
sahf
mov
stos
add
cmps
sbb
movs
ss
jl
cmp
das
push
cmp
jb
loope
xchg
imul
sbb
add
adc
mov
lods
dec
mov
xchg
test
aam
shl
pop
fxch
mov
(bad)
fist
adc
pop
(bad)
(bad)
shl
imul
(bad)
adc
ds
sub
dec
jns
xor
int3
shl
xor
fdivrp
mov
hlt
fcom
push
shl
jnp
lock
lods
adc
scas
loop
jl
pop
cmc
fmul
fwait
add
call
daa
imul
jo
push
inc
push
(bad)
mov
popf
cmp
pusha
test
xor
cmp
push
es
push
int3
cmp
std
inc
outs
rol
loop
or
xchg
cli
inc
adc
clc
jmp
test
sub
or
and
add
or
or
scas
test
pop
je
(bad)
adc
mov
(bad)
push
jecxz
cwde
cmp
push
addr16
in
add
arpl
push
jmp
mov
sbb
jnp
inc
call
movs
sbb
push
cmps
pop
add
lods
retf
outs
pop
clc
lods
iret
mov
(bad)
push
lock
adc
mov
int3
ja
into
int
mov
in
xchg
inc
xchg
gs
mov
push
push
and
aas
enter
sbb
mov
or
lds
scas
stos
push
inc
inc
ret
inc
data16
mov
rcl
cmc
jnp
pushf
fcmovnu
outs
add
shl
sti
cld
xchg
int3
xchg
cmp
popa
repz
jns
jle
fiadd
or
call
cmp
in
mov
sahf
sbb
mov
pushf
lahf
int3
sahf
repz
rcl
pop
sub
sub
push
in
arpl
add
(bad)
mov
(bad)
outs
icebp
add
fwait
mov
sbb
add
mov
dec
xchg
loope
dec
repnz
cli
ret
jp
push
sub
sar
iret
adc
mov
out
pop
mov
add
aas
nop
mov
jp
imul
lock
push
jl
outs
inc
push
out
sbb
iret
in
rol
cs
(bad)
mov
lods
mov
jmp
sbb
cmp
sbb
mov
jmp
fnstsw
jae
sub
enter
sub
push
lock
jle
mov
aad
aaa
or
adc
das
push
shr
lods
fidiv
sub
loop
jnp
loope
fcomp
sub
mov
test
pusha
xchg
lahf
push
clc
and
inc
imul
lds
rcl
imul
or
inc
sub
stos
push
inc
aaa
mov
mov
or
arpl
or
repnz
mov
and
shl
ja
cmp
fcmovu
arpl
leave
int
mov
push
shl
or
fld
xor
push
fcmovnu
mov
call
xchg
mov
or
test
sbb
int3
icebp
js
lods
pop
movs
call
fldcw
sbb
hlt
in
or
inc
sbb
loopne
stos
mov
dec
lds
xor
aad
jle
popa
mov
inc
mov
jbe
popa
and
adc
sub
ja
mov
mul
loope
jmp
push
inc
push
adc
lds
push
lock
pusha
bts
daa
mov
xchg
pop
and
mov
adc
loopne
jg
bnd
push
jne
or
or
sub
mov
adc
mov
mov
mov
mov
cmp
into
outs
retf
add
inc
imul
mov
(bad)
push
xor
cmps
ret
jmp
cmp
jae
and
mov
pushf
adc
ret
inc
fisttp
dec
sbb
(bad)
pop
push
pop
fst
adc
not
adc
sti
repnz
fs
sub
cwde
in
nop
dec
sbb
repnz
out
jmp
xchg
cmpxchg
aam
int3
popf
(bad)
add
jp
and
cli
fsubr
(bad)
mov
addr16
dec
and
daa
jmp
pop
ss
(bad)
(bad)
ins
(bad)
sti
add
jbe
mov
aaa
sti
or
aaa
add
mov
mov
sbb
les
fcomp
das
call
(bad)
loop
adc
shl
xchg
scas
fdivr
ss
or
pop
dec
mov
push
mov
add
sahf
ror
rol
lahf
hlt
mov
xchg
push
div
xchg
pop
xor
xlat
cld
mov
sar
aaa
adc
movs
ja
sbb
adc
dec
xchg
pop
hlt
mov
cmp
outs
mov
js
or
or
(bad)
adc
jl
pop
rol
adc
jmp
push
pop
daa
cwde
push
or
mov
js
ds
mov
lds
jno
scas
inc
push
or
xchg
rcr
jb
inc
mov
push
jo
retf
or
pop
dec
mov
cld
test
mov
das
xchg
jno
inc
sbb
repz
lahf
mov
fadd
mov
mov
jge
jbe
push
sub
sub
leave
lahf
xchg
loope
xchg
cmp
movs
mov
pusha
cmp
psllw
sti
add
sub
cwde
dec
mov
mov
mov
arpl
mov
scas
hlt
pop
sbb
dec
jns
dec
lea
xor
inc
fndisi(8087
sbb
sub
and
and
fsubr
les
xor
(bad)
xchg
sub
mov
fstp
sub
cmp
push
jns
(bad)
mov
xchg
bound
dec
ds
push
outs
shr
jp
adc
jg
es
outs
imul
sub
sub
jns
(bad)
inc
outs
stc
jno
xchg
aaa
cdq
adc
jge
dec
aam
shr
setl
mov
sub
bound
jge
xor
je
jmp
test
push
and
pop
stos
push
(bad)
mov
je
(bad)
pop
ret
in
push
pop
sti
mov
jae
dec
jo
push
sahf
das
pop
retf
shl
in
loop
iret
add
sbb
popf
mov
add
jno
mov
daa
push
sahf
adc
dec
adc
adc
cld
aam
xchg
jecxz
pop
enter
mov
push
mov
ja
shl
push
test
clc
xchg
ret
(bad)
pop
hlt
sbb
push
lea
xchg
cmp
jmp
in
mov
inc
adc
jmp
sahf
movs
loopne
jl
inc
outs
jbe
sbb
cs
xor
sbb
mov
jb
cmp
call
push
push
enter
sub
jecxz
and
lock
ror
scas
ret
shr
mov
dec
adc
mov
sbb
and
sbb
ds
adc
aas
scas
shl
dec
rol
loop
(bad)
jl
aad
mov
cs
adc
bound
pop
(bad)
mov
in
addr16
scas
rcr
push
in
pop
jns
ins
pop
add
xchg
inc
jg
push
or
fsubr
lods
leave
mov
mov
xchg
clc
ret
jno
and
mov
or
int
ins
arpl
pop
in
test
jecxz
test
push
pop
fisttp
push
push
loop
fdivr
je
retf
add
xor
and
pop
or
pop
jae
sbb
pop
mov
push
mov
or
stos
nop
int3
cmp
add
jle
mov
icebp
mov
test
sub
jnp
das
test
daa
(bad)
ret
xlat
stc
lock
lods
retf
fbstp
push
pushf
pop
jge
retf
jge
sub
cmp
xor
inc
daa
sbb
aaa
cwde
mov
sbb
mov
pop
cdq
sbb
mov
mov
sub
pop
or
push
sub
in
sub
popf
mov
dec
call
mov
scas
mov
xchg
ror
inc
mov
inc
push
test
mov
les
jl
daa
pop
out
jno
lds
inc
aaa
imul
and
add
mov
aad
inc
and
aas
lds
push
popf
adc
retf
xor
inc
popf
in
sub
add
ret
push
pushf
jp
adc
add
push
cmps
xchg
dec
xchg
out
aas
ret
push
das
enter
mov
jno
lds
cmp
(bad)
mov
ja
mov
fisub
outs
retf
ror
call
xchg
cmps
adc
lds
movs
push
data16
and
cmp
sub
js
scas
xchg
dec
mov
pop
int
jb
mov
mov
cmps
dec
add
shr
fwait
icebp
(bad)
pop
or
xchg
inc
daa
pop
push
ss
cwde
gs
dec
push
pop
sbb
pop
jmp
xchg
pop
into
pop
mov
lds
lahf
loopne
push
std
out
out
xor
push
mov
adc
fucomp
xchg
movs
inc
ret
retf
push
mov
jne
mov
cmp
mov
xchg
std
jmp
lds
int
inc
jnp
aas
jp
adc
imul
(bad)
pop
sub
dec
or
sbb
pop
xlat
adc
mov
and
mov
push
or
in
aaa
adc
dec
jb
pop
inc
and
es
scas
add
add
int
stos
pop
push
jo
iret
icebp
push
and
imul
addr16
pusha
ins
mov
out
push
test
pop
imul
add
and
lods
cli
jno
idiv
lods
push
js
fnstsw
push
jb
pop
sbb
lods
in
test
test
test
idiv
repz
repnz
(bad)
fisttp
into
and
mov
call
int3
or
adc
stos
inc
inc
mov
pop
mov
xchg
cli
neg
xchg
adc
loopne
jno
loopne
lods
add
loopne
shl
cli
add
and
pop
es
pop
ds
xchg
xor
jbe
test
dec
mov
jecxz
adc
cmp
cmps
les
push
xchg
in
pop
loop
xor
push
xlat
push
stos
mov
sbb
cmps
sub
retf
mov
jb
mov
int
pop
rcl
out
pop
repnz
ja
sar
jns
sahf
retf
push
adc
lahf
and
fst
in
and
jmp
xor
ss
fldcw
hlt
and
push
stos
das
std
cmp
mov
cmc
test
push
xor
sub
dec
mov
shl
pop
popa
cmp
jmp
sahf
call
mov
shr
retf
push
call
pop
aad
lock
sbb
cmp
mov
xchg
inc
iret
pop
lahf
dec
add
sahf
mov
sub
(bad)
cmp
inc
gs
ficomp
in
push
popa
push
sub
sub
push
push
adc
popa
popf
cmps
std
aad
iret
cmp
sbb
loop
lea
jmp
xchg
inc
push
jmp
les
mov
(bad)
sub
dec
ss
mov
outs
jb
cmp
call
cld
inc
cld
push
push
inc
inc
pop
add
stos
xlat
xchg
pop
pop
(bad)
xchg
xor
neg
pop
dec
push
imul
jno
lods
adc
mov
and
outs
inc
int
outs
loop
js
cmps
stc
cwde
sub
scas
or
idiv
xchg
fs
shl
inc
or
jmp
push
data16
jmp
push
ds
fadd
gs
test
pop
xlat
popf
mov
jl
mov
int
inc
mov
sahf
jnp
shl
jmp
sub
rep
cmps
sbb
lahf
adc
(bad)
jmp
in
ret
sub
adc
js
rcr
mov
fild
push
cmc
cdq
cs
sar
push
popf
enter
xchg
out
push
pop
test
popa
(bad)
xlat
sub
dec
inc
outs
fcomp
jmp
fist
inc
neg
dec
mov
dec
jo
rol
(bad)
xlat
xor
lods
out
int3
jb
or
adc
mov
stos
xlat
add
rol
(bad)
push
std
sub
sbb
pop
imul
and
sub
xor
lahf
sub
popa
cmp
cmp
cmp
daa
mov
xchg
jno
mov
pop
ins
icebp
sbb
nop
jg
dec
adc
shl
jle
jl
leave
inc
les
iret
xor
leave
je
jb
inc
adc
fwait
xlat
popaw
sbb
mov
xchg
(bad)
push
into
jns
arpl
call
jge
es
sbb
ret
pop
sub
xlat
inc
addr16
dec
aas
and
inc
je
mov
push
jp
pusha
xlat
and
push
fistp
enter
les
xor
call
ja
jnp
std
mov
adc
cli
mov
in
xor
adc
and
je
jae
ss
dec
sbb
fld
outs
adc
sub
cmp
inc
xor
in
lahf
jl
add
sub
sub
inc
call
cmp
dec
dec
and
pop
xchg
jnp
shr
(bad)
pop
adc
call
cld
xchg
push
(bad)
xor
add
jmp
out
inc
mov
out
xchg
dec
cmp
dec
test
pop
adc
repz
xchg
or
int
hlt
inc
loope
jae
je
out
cli
clc
xor
jno
cmp
inc
enter
or
popf
into
popf
or
aas
xchg
ins
out
dec
int3
inc
fwait
jg
int
test
sbb
sub
or
aas
iret
rcl
push
cli
pop
pop
call
mov
xlat
mov
(bad)
lds
lods
jae
jbe
mov
adc
jo
mov
int
lods
sbb
jbe
outs
sahf
mov
cmp
and
(bad)
mov
popf
sti
aas
adc
cmp
or
dec
pop
js
stos
jo
pop
jge
and
(bad)
lock
push
xor
mov
arpl
(bad)
aad
ret
jb
fld
sub
imul
out
pop
or
sbb
mov
push
jae
addr16
cmp
jmp
mov
iret
add
mov
inc
popa
inc
xor
lahf
inc
mov
jl
xor
not
clc
add
jle
loop
xor
repz
std
enter
adc
inc
es
or
in
retf
outs
rcr
ret
lods
out
sub
lahf
retf
test
inc
retf
xor
mov
nop
rol
les
ror
loopne
movs
jo
stos
pop
push
dec
jne
fsub
data16
pusha
inc
jecxz
pop
sub
es
jle
enter
movs
call
imul
xlat
lods
mov
imul
ja
and
cmps
icebp
jbe
retf
add
pop
or
cmp
push
das
std
mov
nop
xchg
mov
movs
sbb
aam
cli
or
or
inc
stos
push
xchg
adc
push
pop
push
mov
sbb
ins
test
aam
xchg
add
dec
xor
dec
jnp
mov
jl
test
sbb
adc
xor
xchg
bound
ror
jns
pop
loope
jo
jnp
and
cmp
ds
data16
cmps
xchg
ss
add
and
or
loopne
cmp
sahf
jmp
sbb
adc
mov
mov
cmps
push
aaa
pop
loope
popa
push
cmc
cmps
pop
sbb
cli
call
icebp
or
cmp
dec
call
sbb
or
and
outs
pop
xor
call
adc
in
addps
sbb
pop
mov
popa
mov
cdq
adc
mov
pop
inc
sbb
or
cmp
mov
out
pusha
dec
pop
ss
sbb
fucom
ss
cli
inc
call
pop
mov
and
push
dec
inc
sbb
mov
in
xchg
xchg
ss
jne
inc
fistp
adc
mov
enter
(bad)
push
mov
jge
push
push
ins
xchg
movs
leave
and
std
cmp
sbb
fwait
mov
cli
sbb
fwait
sub
shr
test
mov
jmp
jns
bound
mov
arpl
cwde
mov
mov
shl
inc
cmp
xor
adc
push
(bad)
fs
out
enter
loopne
jb
add
mov
mov
gs
add
mov
add
in
push
jge
cmp
fiadd
retf
mov
push
and
inc
and
outs
ret
loope
pop
(bad)
mov
jl
imul
or
and
out
pop
into
inc
push
fnsave
jge
push
inc
push
mov
daa
jns
jnp
mov
fst
xor
repz
test
push
out
movs
aam
call
mov
jle
jbe
xchg
sti
fcomp
(bad)
faddp
mov
push
stos
add
sbb
dec
mov
and
sbb
xchg
push
mov
scas
das
sub
mov
int
inc
(bad)
and
stos
and
test
test
test
aad
stos
xchg
rcl
arpl
cmc
jbe
jb
das
loop
mov
inc
stos
push
(bad)
shr
and
sbb
dec
mov
push
mov
xchg
and
out
add
inc
cmc
mov
aaa
xchg
out
in
sub
mov
xchg
push
clc
jno
mov
or
or
inc
pop
shl
pop
add
sar
ja
add
in
repnz
xchg
scas
cwde
cmc
inc
ins
(bad)
cs
mov
jge
jb
ret
xchg
mov
test
(bad)
or
mov
push
sub
pop
jp
xchg
daa
dec
in
xor
out
mov
add
mov
popf
mov
pop
dec
jne
std
jmp
jo
test
popa
push
or
sub
enter
jae
jb
pop
ret
sbb
xchg
inc
adc
ja
addr16
xor
push
adc
cwde
nop
mov
pushf
fisttp
mov
adc
ficom
and
xor
je
lock
mov
imul
jne
sub
out
repnz
jae
std
inc
test
cmp
aam
jg
ja
popa
stos
clc
test
pop
inc
jmp
lods
mov
xchg
mov
popa
adc
scas
xor
sbb
sbb
sbb
adc
mov
add
gs
out
mov
xor
int
jg
sub
dec
jmp
cmc
jmp
sbb
sti
jnp
add
fld
xchg
push
inc
jnp
push
loope
mov
or
pusha
mov
xor
mov
out
(bad)
retf
popf
mov
sbb
or
pop
iret
mov
out
and
pop
add
repnz
add
xchg
call
sub
test
(bad)
cmp
and
cli
jle
dec
cdq
or
leave
sub
movs
mov
(bad)
mov
lods
pop
sahf
xor
mov
les
(bad)
fs
cmp
repnz
mov
in
ins
cwde
mov
mov
pop
inc
in
lock
push
out
iret
outs
mov
dec
cmp
pop
inc
stos
je
mov
add
sbb
addr16
pop
ins
fwait
or
mov
leave
sub
cld
pslld
ret
mov
push
mov
pop
cmp
fwait
xor
mov
xchg
shl
fsubr
imul
movs
push
mov
jnp
stos
sub
ins
jo
(bad)
dec
out
or
dec
add
and
mov
push
mov
xchg
outs
adc
mov
inc
cmp
push
ficomp
add
loopne
and
and
push
test
mov
and
fwait
pushf
dec
fdiv
jnp
fidiv
inc
div
xchg
xchg
(bad)
jbe
sar
adc
scas
xchg
sbb
mov
scas
inc
dec
sbb
pusha
(bad)
sbb
dec
jbe
test
dec
cwde
push
and
imul
xchg
jo
xchg
mov
mov
dec
leave
mov
sbb
cli
jmp
aam
push
xchg
or
mov
js
test
or
lods
inc
mov
push
lds
ret
in
xchg
cmp
jne
mov
xchg
adc
jnp
push
neg
inc
aaa
bnd
inc
cmps
xchg
sbb
inc
in
jecxz
out
adc
data16
cmp
test
add
addr16
test
(bad)
aad
sti
stc
push
es
std
loopne
cli
and
out
inc
dec
pop
and
scas
pushf
inc
sub
mov
lds
jae
sti
cmp
pop
das
fisubr
push
sti
adc
push
dec
dec
cdq
jmp
mov
xchg
mov
pop
and
(bad)
js
xchg
test
sbb
retf
xchg
rcl
in
jg
inc
daa
cmp
popa
dec
movs
ror
imul
(bad)
mov
push
push
fcmovbe
dec
xchg
out
mov
sub
stos
rcr
push
rcl
mov
jb
in
ficomp
imul
in
jl
arpl
lods
ja
mov
(bad)
fidiv
aas
xor
fdivr
into
cmps
pusha
out
or
push
add
bound
loope
add
fdivr
cwde
fisub
jl
pop
cwde
cdq
ins
les
loopne
or
cld
and
mov
mov
pop
js
dec
int
cmc
inc
mov
das
xlat
pushf
sbb
jp
ds
mov
outs
enter
jno
repz
cmps
cli
mov
daa
xchg
std
stos
xor
fsubr
mov
xchg
(bad)
fcom
lea
ret
add
dec
push
(bad)
push
jnp
fdiv
push
aaa
cmp
pop
cwde
shr
lea
push
out
lds
jmp
js
push
push
jbe
xchg
mov
or
enter
inc
push
int3
sbb
shr
ficom
pop
or
retf
lock
inc
mov
mov
int3
pop
ret
ja
les
ins
jl
or
adc
mov
aam
nop
(bad)
cmp
jle
inc
sahf
js
cmp
sub
cmc
data16
inc
inc
cmp
sahf
in
mov
icebp
dec
or
sub
fistp
fst
enter
mov
jecxz
mov
test
push
rcr
inc
pusha
ins
sbb
idiv
add
mov
xor
inc
pop
adc
aad
or
pop
xchg
xchg
dec
fistp
pop
jmp
sbb
push
retf
push
sbb
lods
fs
pop
cli
mov
dec
das
inc
push
add
pop
fxch
jne
mov
fmulp
fs
sar
popf
add
dec
add
add
int
xchg
dec
xchg
cli
inc
out
push
pop
fimul
fisttp
in
xor
adc
mov
adc
fdivr
or
push
xlat
mov
ja
je
enter
push
hlt
shl
movs
inc
adc
mov
pop
mov
and
jae
jmp
cmps
(bad)
test
dec
std
dec
inc
sbb
ret
add
sbb
pushf
(bad)
in
push
sbb
aad
sbb
and
(bad)
adc
cdq
dec
push
ret
mov
daa
jl
jle
dec
mov
push
fs
mov
ds
lods
xor
inc
mov
jmp
sbb
pop
movs
inc
(bad)
neg
fcom
pop
aas
xor
icebp
mov
mov
sub
ins
mov
sti
jmp
inc
outs
push
or
in
ret
xor
push
aad
sti
jle
test
mov
lea
mov
push
dec
fisttp
xor
nop
or
addr16
iret
cmp
or
xchg
cdq
and
add
add
push
daa
(bad)
nop
lods
jecxz
mov
enter
cli
mov
cmp
in
or
sbb
dec
rcr
mov
es
push
aad
xchg
push
arpl
rcr
cmp
and
not
scas
or
leave
sub
imul
push
inc
popf
add
or
adc
push
arpl
rol
clc
inc
add
lods
test
mov
mov
enter
mov
out
jmp
add
jbe
push
mov
cli
xlat
pushf
and
sbb
add
outs
outs
sbb
fcmovne
pop
pop
(bad)
dec
or
mov
hlt
jns
hlt
mov
jecxz
outs
xor
retf
pop
(bad)
mov
xlat
rol
xchg
shl
and
popa
inc
fld
mov
cmp
jp
mov
mov
xor
adc
dec
repnz
mov
or
and
call
out
sbb
or
sti
into
idiv
or
add
clc
inc
test
pop
mov
lahf
jl
loop
test
fld
int
mov
xlat
or
out
jl
cmp
das
or
inc
sub
mov
jnp
(bad)
mov
fistp
and
fwait
pop
jge
ror
std
adc
in
mov
jl
xchg
addr16
dec
mov
jb
xchg
and
imul
jnp
imul
sub
add
jge
sub
dec
and
sbb
push
(bad)
add
or
jae
add
or
inc
cmp
adc
jns
nop
sahf
aad
shl
into
cmp
jb
mov
stos
pop
sbb
xchg
sub
mov
out
pop
daa
xor
push
add
lahf
das
sbb
addr16
dec
or
ret
push
cmp
jp
fld
cmp
add
stos
push
add
xor
iret
xor
sub
jmp
sub
mov
imul
imul
push
mul
mov
ffree
je
dec
dec
sar
push
mov
lods
push
pop
sbb
dec
out
or
mov
xchg
dec
das
out
inc
iret
sub
mov
pop
mov
xlat
xchg
push
cld
pusha
fmulp
mov
pop
mov
or
and
mov
dec
dec
sbb
loope
lods
sub
pop
jne
test
dec
push
xchg
ret
retf
xchg
fwait
inc
push
pop
xchg
jmp
sub
popf
inc
and
test
imul
cmp
pop
or
inc
sahf
movs
and
xor
and
cmp
(bad)
xor
es
cmp
scas
inc
inc
jl
mov
push
add
or
cmp
mov
ret
xlat
cmp
add
cmp
jb
fisub
pop
jmp
mov
in
xchg
enter
or
sbb
jns
mov
sub
sub
push
mov
xchg
outs
in
cdq
mov
retf
imul
test
(bad)
and
sub
adc
mov
iret
aad
aas
in
out
fist
je
and
movs
jmp
or
jae
mov
xchg
sub
lock
add
sahf
xor
cmp
pop
jge
das
push
jbe
outs
repnz
fcom
loop
call
aaa
or
leave
push
push
mov
sahf
jo
mov
scas
inc
or
sahf
cmps
fldl2t
or
bound
add
xor
shr
cmp
push
arpl
xchg
movs
movs
pop
pop
and
movs
retf
vshufps
sub
inc
mov
fst
jp
(bad)
and
inc
xchg
pop
adc
adc
in
adc
or
movs
adc
dec
test
adc
icebp
sub
adc
xor
out
(bad)
jno
adc
iret
cmps
jecxz
popa
ja
mov
in
cmps
fdivr
aad
push
in
pop
outs
mov
inc
out
sahf
lea
lods
cmp
aas
cdq
sbb
mov
inc
inc
mov
aad
jmp
cmc
retf
ret
rol
adc
in
and
adc
(bad)
lea
or
sbb
mov
mov
dec
dec
pop
xchg
(bad)
loopne
not
xchg
cmps
xchg
mov
outs
in
outs
fdivr
push
aaa
bound
stos
xchg
out
retf
adc
push
pop
push
ror
loop
lds
push
loope
cdq
xor
clc
cwde
mov
adc
sub
scas
mov
dec
(bad)
dec
sbb
push
mov
(bad)
rcr
call
es
mov
(bad)
fidivr
and
xlat
jns
movs
pop
mov
inc
xor
mov
lahf
lea
add
das
add
fwait
data16
stos
push
ret
sbb
ins
adc
stos
pop
jp
push
adc
div
inc
push
bound
mov
int
fbld
out
enter
call
xchg
into
lock
js
(bad)
xor
sub
out
rol
mov
ds
out
fstp
lock
das
in
dec
pop
rcr
sahf
ja
xchg
sbb
xor
rol
push
xor
cmp
popa
in
jns
test
es
mov
or
outs
cmp
test
fldcw
int
out
dec
adc
in
sbb
cs
inc
pusha
iret
push
arpl
dec
cs
jne
sahf
sub
push
in
and
lds
(bad)
adc
test
fcom
enter
fcmovbe
movs
adc
push
push
lods
push
out
ds
ins
mov
mov
push
adc
add
test
pushf
fst
sbb
and
inc
ret
aad
(bad)
loop
rcl
push
shr
fild
push
xchg
sub
cwde
jo
mov
movs
push
pop
fdivp
jp
jmp
(bad)
and
cmp
clc
ins
add
push
scas
mov
pusha
fld
sbb
push
jecxz
adc
es
sub
or
or
xor
ret
cmc
scas
into
cs
ds
and
add
push
retf
lods
pop
or
data16
rcl
fcomp
xchg
mov
sbb
pop
movhps
outs
loop
popa
fsub
mov
repz
pop
push
adc
adc
jno
jmp
dec
pushf
mov
icebp
das
into
dec
div
push
xchg
lds
jp
iret
xor
xchg
jecxz
add
mov
mov
bound
cmp
xchg
movs
cmp
adc
mov
imul
das
cmp
gs
lock
loope
test
push
add
inc
xlat
and
sub
leave
xchg
push
mov
adc
scas
jmp
stos
repnz
mov
add
jp
sub
into
jb
ss
mov
and
inc
dec
xchg
push
push
dec
mov
cmp
out
pusha
call
pop
jge
dec
push
int3
xchg
lods
pop
iret
shr
push
mov
mov
push
xchg
sub
mov
pop
lock
push
mov
movs
cdq
cmps
pop
adc
retf
and
lahf
adc
test
inc
or
xchg
xor
sub
(bad)
call
sbb
mov
sti
pop
jmp
push
dec
add
fidiv
fisttp
fdiv
icebp
push
add
mov
jmp
mov
cmp
ss
xor
movs
xor
mov
call
pop
dec
repnz
pop
daa
inc
sub
sub
push
lock
popf
out
pushf
xchg
pop
and
sub
(bad)
clc
cs
sbb
daa
inc
mov
out
shl
(bad)
and
push
jmp
dec
mov
retf
jb
fst
jb
cld
sti
inc
sbb
stos
pop
ins
add
imul
sbb
rcr
fst
inc
out
xchg
(bad)
add
cmps
pop
rcr
jbe
out
js
jge
cld
loope
sar
movs
jl
fist
out
mov
scas
adc
aas
mov
bound
pop
xor
cld
mov
mov
loop
mov
fimul
lods
mov
nop
hlt
mov
and
inc
xor
es
cmps
mov
mov
jbe
adc
jb
(bad)
retf
aaa
arpl
dec
inc
pop
pusha
push
stos
push
adc
cdq
mov
push
dec
xor
cmps
jbe
stos
inc
xor
inc
in
adc
test
cmp
sub
movs
stc
fld
dec
add
cmp
xor
pushf
dec
gs
rcr
pusha
jl
jle
test
(bad)
mov
sub
(bad)
les
cmp
or
ja
retf
sbb
dec
cmp
fwait
push
fdivr
jo
add
xchg
xchg
call
jp
jae
xor
inc
push
sub
call
mov
mov
mov
in
inc
pop
test
arpl
dec
les
mov
ja
pop
fsubr
loope
jae
and
lods
sbb
xor
pop
add
or
cmp
sub
add
jno
push
imul
fidivr
sub
adc
dec
(bad)
sub
lea
and
fld
inc
adc
mov
clc
xchg
aam
loop
adc
outs
mov
fstp
fdiv
sub
push
ret
out
pusha
ins
lea
cmp
out
jnp
ja
jb
cs
jg
jmp
cmps
sub
mov
stos
test
jecxz
cmps
in
outs
sbb
mov
jo
mov
dec
test
and
pop
popa
cdq
mov
jecxz
or
xor
pop
sbb
out
imul
add
fild
imul
pop
scas
in
xchg
mov
mov
adc
int
cmp
lea
pop
fnsave
add
icebp
xchg
cli
push
xchg
(bad)
ror
pop
and
sub
pop
sahf
leave
lock
fld
and
xchg
(bad)
out
sub
aad
push
jb
pop
xchg
mov
aam
jno
stos
cmp
adc
pop
mov
fisttp
imul
sbb
pushf
and
or
dec
clc
(bad)
fiadd
mov
popf
outs
loop
cmp
call
inc
mov
cld
mov
sub
(bad)
add
ins
aaa
jb
push
pop
xor
(bad)
sub
pop
pop
(bad)
or
sahf
fs
in
add
js
push
or
repnz
ficom
adc
adc
movs
mov
lahf
mov
test
push
(bad)
in
shr
daa
pop
jmp
jp
jmp
pop
push
stos
jno
mov
jb
jg
xlat
test
out
ja
and
in
arpl
jne
stos
adc
fwait
loopne
and
or
aas
xchg
sub
loop
xchg
daa
inc
sub
ds
arpl
outs
mov
adc
int3
jae
cwde
cmps
in
mov
(bad)
fstp
loopne
je
add
ficomp
stos
jne
sub
je
jo
jle
mov
adc
ja
inc
std
(bad)
pusha
cwde
std
mul
shr
out
inc
or
dec
pop
mov
and
mov
inc
pop
or
sbb
scas
dec
jns
xchg
std
les
rcl
test
fidiv
iret
cmp
add
xchg
repnz
das
loop
cli
mov
call
jle
mov
sahf
fidivr
inc
int
pop
call
sub
jp
adc
and
loope
lock
mov
jb
jge
cmp
pusha
xor
je
aad
push
pop
adc
mov
mov
mov
cmps
js
add
cmc
push
xor
xchg
imul
aad
ret
sbb
xchg
dec
mov
inc
push
or
ret
xchg
(bad)
mov
cmps
call
fsub
xchg
lahf
push
mov
pop
mov
push
in
sbb
rol
sbb
pushf
mov
fmul
cmps
add
jmp
scas
add
mul
push
mov
mov
pushf
nop
cmc
into
je
pop
gs
inc
mov
mov
push
sahf
add
or
int
xor
imul
shr
xor
dec
xor
not
dec
fidivr
ret
retf
mov
or
test
int3
cmps
test
push
dec
mov
jns
inc
shr
push
and
fcomp
scas
adc
pop
out
lock
rcr
cmp
js
test
fild
cmps
mov
xchg
sbb
sub
adc
arpl
outs
retf
or
fimul
inc
or
lds
js
cmps
jecxz
jg
pop
inc
cmps
gs
or
jg
nop
pushf
pop
faddp
repz
dec
call
adc
xor
mov
push
cmp
fbld
stos
(bad)
xchg
lahf
sub
jmp
push
stc
aaa
addr16
cli
nop
inc
mov
int
pop
mov
fadd
cli
xor
sub
rol
ss
inc
adc
sbb
outs
mov
fdivr
movs
sti
dec
mov
not
pop
(bad)
sbb
and
ins
clc
cmp
nop
pop
push
fmul
jbe
fnstsw
rcr
fcom
xor
mov
or
retf
cmps
in
pop
or
les
mov
aas
or
iret
pop
lock
or
sbb
sbb
jecxz
jns
mov
shl
mov
ins
outs
sti
dec
jl
fild
lods
sub
cmp
mov
sbb
cdq
and
scas
pop
mov
(bad)
aam
mov
arpl
xchg
fldcw
mov
stos
mov
xchg
movs
aas
cmp
sbb
mov
dec
ins
shr
dec
fistp
in
dec
dec
(bad)
icebp
std
into
dec
jbe
push
cmp
mov
addr16
or
sbb
xlat
dec
pop
cs
test
adc
mov
push
dec
xor
inc
addr16
and
nop
mov
ss
push
dec
adc
out
pusha
sbb
(bad)
mov
sar
in
ja
out
mov
pop
shl
add
(bad)
sbb
push
sbb
pop
cmp
and
and
pand
(bad)
sbb
ins
cmp
xor
xchg
mov
mov
repz
(bad)
lea
retf
jbe
call
add
bound
mov
test
retf
mov
pop
(bad)
sbb
sbb
pop
xchg
sub
mov
push
fnstenv
push
jno
or
jmp
ret
add
add
loopne
add
adc
and
inc
inc
nop
add
pop
aam
les
mov
push
mov
mov
arpl
loope
push
out
push
xor
mov
sbb
sbb
pop
push
add
(bad)
es
or
jae
aaa
loopne
rol
repz
addr16
sbb
push
pop
push
adc
xchg
cdq
and
aad
cmp
xchg
and
in
cmp
ins
and
jg
sub
and
mov
and
movs
or
jg
push
jne
jmp
sbb
ss
inc
or
push
mov
data16
ret
cmp
push
in
and
sub
xor
jmp
cmps
mov
js
mov
jno
jne
test
add
clc
lea
or
or
jne
and
mov
idiv
or
mov
inc
rcr
leave
or
movs
mov
xchg
xchg
xor
mov
addr16
jmp
add
and
push
push
sbb
inc
pop
inc
push
fist
iret
jmp
fs
loop
out
xor
adc
cmp
push
gs
std
les
dec
sbb
loope
in
jnp
xchg
movs
mov
mov
xor
cmp
or
ror
sar
push
xor
sbb
test
into
mov
mov
and
cld
xchg
jp
movs
sbb
push
or
leave
fcmovb
jns
rcr
mov
int
or
out
iret
mov
test
bound
aam
adc
cmps
cmps
jae
sti
clc
int3
scas
mov
mov
gs
sub
xor
pop
fisubr
add
dec
push
jge
scas
dec
add
jmp
pop
stos
xchg
add
jnp
imul
shr
jmp
or
int
push
jge
dec
add
cmp
imul
shl
xor
xor
aas
lahf
add
cs
outs
push
or
es
es
jnp
sbb
or
cdq
sub
inc
fwait
in
ficomp
cmp
ret
cs
dec
inc
mov
add
pop
xor
addr16
dec
int3
xor
xchg
xchg
leave
jmp
inc
sbb
jmp
push
mov
ss
mov
xchg
xchg
shl
add
daa
jg
pop
pusha
popa
cmp
pop
sbb
xchg
daa
in
lods
jle
push
jns
dec
rol
xchg
mov
cs
mov
sbb
(bad)
pop
test
jp
inc
repz
pop
stc
movs
(bad)
and
jno
js
sbb
aas
cmps
call
lahf
adc
imul
(bad)
mov
call
cmps
mov
mov
or
fadd
mov
inc
test
out
push
icebp
test
jnp
mov
dec
adc
cwde
arpl
imul
aam
jb
int
mov
int3
and
(bad)
std
ss
psubsw
sub
push
test
xor
and
adc
jo
mov
cmp
xor
fs
add
adc
inc
adc
fs
xor
and
aas
enter
mov
movs
jnp
movs
inc
xchg
mov
sti
xor
xchg
(bad)
push
mov
sbb
mov
mov
dec
aad
push
jl
push
mov
xchg
jno
xchg
std
push
jns
into
or
mov
xchg
pushf
xor
ror
fnstcw
test
pusha
jg
retf
jb
pusha
mov
(bad)
mov
(bad)
mov
daa
cwde
jbe
push
and
imul
push
mov
push
jne
fwait
cmps
xchg
sub
arpl
push
inc
and
stc
or
lods
outs
mov
dec
xor
jae
xchg
adc
xchg
popf
pop
ds
call
pop
leave
std
push
retf
jp
mov
or
repnz
pop
pusha
xchg
popa
into
pop
dec
cdq
adc
and
pop
push
arpl
hlt
movs
or
push
jg
cs
icebp
jmp
test
mov
hlt
dec
ja
(bad)
rol
mov
dec
pop
fisubr
inc
xor
icebp
adc
fidivr
xchg
push
and
jg
icebp
addr16
shl
or
dec
mov
mov
jb
xor
ss
fs
or
test
lods
std
loopne
cmp
sbb
cmps
sti
mov
jo
dec
xchg
xchg
xchg
sub
sbb
add
rol
hlt
sbb
jl
ds
inc
cmps
sbb
in
sbb
or
xor
push
push
popf
popf
mov
aad
jbe
prefetch
or
adc
push
fstp
push
enter
repnz
jge
std
retf
or
es
mov
push
movs
adc
les
sbb
js
inc
pop
pop
jmp
sub
fldcw
mov
loop
cmp
outs
mov
je
in
push
cbw
mov
lock
outs
ror
in
lahf
dec
mov
xchg
and
fild
adc
jns
xchg
and
outs
cld
ret
outs
dec
mov
hlt
fisttp
dec
xor
xor
jne
dec
xchg
lds
add
lahf
add
enter
popf
adc
lods
xor
adc
fwait
pop
adc
cmps
sub
xor
retf
xchg
out
jns
xor
pop
dec
pop
rcr
ins
jno
fidiv
movs
jo
dec
xchg
ds
mov
inc
sahf
in
inc
pop
popa
cld
call
into
jns
pmulhw
outs
outs
push
gs
xchg
mov
mov
xchg
adc
popf
mov
das
in
xchg
je
jmp
and
xchg
scas
in
cld
in
test
mov
mov
std
js
js
mov
jle
stos
mov
adc
sets
dec
vandnps
test
fidivr
(bad)
fwait
mov
sub
xor
mov
in
push
jecxz
stos
outs
dec
ja
cmp
cwde
or
in
loop
xor
sub
mov
inc
scas
shl
mov
in
in
add
jnp
cmp
cmp
add
stc
adc
sbb
push
mov
pop
xchg
arpl
hlt
xlat
sbb
cmps
sub
add
inc
data16
jp
jbe
imul
in
jo
sahf
push
xor
retf
mov
xor
les
pop
repz
jbe
mov
pop
out
loopne
inc
loope
aam
cld
imul
in
inc
adc
sbb
test
rol
mov
jae
pop
mov
daa
imul
jbe
xor
ror
(bad)
cdq
dec
ret
dec
out
retf
fcomp
mov
inc
icebp
inc
jmp
imul
ss
push
jmp
into
mov
mov
call
stos
hlt
imul
inc
loopne
pop
sbb
int
sar
add
sub
ror
or
in
outs
stc
sbb
cs
fistp
cmps
or
sbb
in
pop
ins
dec
lock
dec
mov
xchg
push
mov
fs
test
daa
int
stos
add
dec
add
ret
jl
pushf
mov
adc
ret
sub
sub
mov
(bad)
adc
inc
mov
mov
imul
test
and
cmp
mov
jmp
sbb
jae
push
mov
add
cmps
hlt
leave
xchg
(bad)
js
push
clc
or
pop
shr
jp
inc
mov
pop
setnp
hlt
and
mov
mov
in
inc
push
mov
xor
pop
mov
cmp
push
mov
icebp
xchg
xchg
jne
inc
sub
das
ss
mov
fsubr
pop
ja
cmp
mov
repz
clc
adc
mov
lods
mov
lahf
and
cmp
adc
pushf
sub
xor
fnstsw
out
push
sbb
cld
inc
jl
imul
and
daa
add
mov
cli
add
fnstsw
jbe
xor
js
inc
push
test
cmp
loopne
mov
retf
jne
push
fs
std
cdq
jnp
xor
cs
mov
test
ror
leave
dec
pop
push
nop
or
mov
mov
icebp
mov
out
jno
mov
jl
repz
sub
inc
js
imul
xchg
pop
jno
mov
aad
test
or
inc
loopne
sbb
lods
dec
fwait
and
int
retf
sbb
mov
xchg
pusha
cs
sub
outs
call
dec
jb
adc
ds
xor
xchg
mov
ds
jns
sub
(bad)
mov
iretw
jge
jnp
(bad)
rsqrtps
test
movs
add
leave
inc
movs
icebp
jno
push
shl
adc
rol
sub
sbb
and
cli
aaa
jbe
adc
lds
xchg
icebp
shr
test
jae
push
ds
in
jns
add
push
es
mov
pop
mov
mov
mov
push
or
pushf
jecxz
and
and
xchg
push
jge
call
inc
mov
rcl
inc
out
clc
inc
lahf
pop
loope
mov
shr
jp
pop
rol
nop
rcl
scas
pop
mov
dec
gs
mov
call
mov
test
nop
mov
popa
push
mov
inc
jp
jmp
movs
loopne
shr
fimul
mov
fldz
call
ja
dec
fcmovnbe
dec
mov
sahf
pop
jno
mov
push
in
loope
retf
lock
xchg
shr
gs
cmp
add
inc
ficom
iret
jecxz
shr
pop
ds
retf
movs
pop
outs
xchg
scas
jnp
outs
mov
sub
add
inc
jae
stos
mov
ins
pop
loop
dec
inc
in
sub
movs
push
add
test
cmp
in
daa
mov
aam
sbb
pusha
ret
xor
addr16
dec
daa
mov
outs
inc
mov
add
sub
jecxz
cmps
cwde
pop
and
add
sbb
xor
xchg
adc
ss
inc
das
mov
cmp
jnp
aas
xor
loopne
dec
jp
sub
ins
cmp
arpl
je
mov
ins
loop
mov
push
pusha
xchg
dec
jmp
ins
xor
ja
jbe
lods
and
fwait
jp
xchg
stos
mov
sub
xchg
adc
mov
push
push
pop
inc
mov
shl
test
cmps
mov
mov
aas
pop
lea
xchg
or
call
out
mov
fstp
(bad)
cs
pop
aam
cmp
cs
scas
movs
pushf
inc
nop
jmp
scas
push
ins
aaa
rcl
xchg
je
mov
inc
push
ret
xchg
retf
bound
fdivr
icebp
xor
sar
imul
fisubr
dec
pop
inc
sbb
mov
lea
fwait
sub
or
and
pop
cmp
push
dec
dec
inc
or
fisubr
fnstcw
test
movs
jmp
and
push
sub
xlat
adc
nop
sub
jae
mov
popa
repnz
movs
jo
inc
mov
ins
aas
push
inc
loop
rcl
mov
mov
int
enter
repz
fwait
aam
js
cmp
inc
repz
push
and
sbb
xor
dec
fsub
je
pop
sub
inc
inc
pop
cmc
lods
(bad)
mov
leave
jae
or
jns
mov
fisttp
loop
add
inc
pop
push
mov
inc
inc
or
cmp
inc
push
push
jmp
add
scas
sbb
xlat
nop
dec
movs
call
push
and
ins
xchg
scas
push
int3
in
xor
mov
dec
fwait
pop
or
mov
into
or
add
sti
push
jle
pop
in
aam
adc
jnp
cmp
ret
mov
shl
ds
data16
xor
mov
stc
test
and
pushf
lods
sub
pop
test
cmp
(bad)
mov
bound
lock
shr
dec
cmp
outs
jmp
mov
loopne
pop
mov
stc
jo
jge
add
cdq
out
or
xchg
std
nop
in
fimul
cmp
imul
add
ficom
mov
pop
xchg
cmp
bound
jb
aam
imul
ret
fldcw
shr
mov
xor
ret
jmp
xchg
rcr
loop
adc
mov
jmp
mov
pop
mov
clc
pop
and
push
xor
into
or
or
mov
push
jp
aad
pop
and
jg
nop
xor
lahf
iret
js
add
pop
out
imul
stos
test
int3
or
add
ror
pop
push
sbb
sub
int
pop
xor
push
inc
inc
retf
loopne
and
sub
sub
clc
mov
jnp
sub
mov
add
inc
adc
adc
es
mov
ret
jp
mov
and
iret
dec
add
inc
lahf
imul
adc
ins
adc
stos
push
imul
push
cmp
mov
push
sbb
test
mov
and
jmp
mov
je
lods
dec
bound
jp
mov
jmp
cmp
push
cmp
push
jmp
mov
dec
lahf
add
std
cld
mov
in
(bad)
popa
push
mov
icebp
inc
cmps
cmp
mov
inc
aaa
test
dec
repz
sbb
jae
cmps
adc
inc
fist
stos
or
cmp
test
inc
xlat
adc
je
sub
inc
adc
je
hlt
pop
sub
(bad)
mov
(bad)
enter
in
mov
xchg
jmp
fwait
sub
out
push
push
jmp
enter
movs
stos
shr
(bad)
jle
cli
out
in
leave
push
adc
mov
add
cmp
jbe
fs
fnstsw
cld
xchg
daa
retf
mov
mov
push
scas
xchg
push
stc
lahf
pusha
xchg
adc
sub
mov
xor
dec
daa
pop
ja
add
sbb
std
sub
push
in
inc
xor
pop
mov
cmp
jg
xchg
aad
shr
pop
call
sahf
inc
lock
mov
out
sti
adc
adc
jmp
test
hlt
mov
cmp
movs
out
mov
and
and
addr16
int
mov
(bad)
mov
adc
xor
xchg
cmp
sub
cmp
mov
adc
mov
(bad)
stos
mov
dec
sub
cmp
int3
(bad)
sbb
sbb
stos
(bad)
jns
push
bound
sbb
add
das
sar
dec
sub
dec
xor
scas
bnd
test
and
pop
mov
scas
(bad)
mov
push
ficomp
es
xchg
mov
xor
daa
out
jne
mov
inc
xchg
cmp
in
fidivr
add
xchg
or
retf
cmps
(bad)
and
retf
inc
call
mov
fcomp
mov
add
or
pop
(bad)
lods
repnz
inc
dec
imul
cmps
nop
bound
jge
mov
jp
cmp
rcl
jnp
sbb
out
cmp
pop
enter
xchg
xor
adc
mov
(bad)
in
jmp
ja
add
fiadd
call
sar
adc
pop
sub
adc
mov
dec
sbb
adc
mov
mov
dec
jmp
jno
(bad)
fcmove
xchg
lods
add
ds
jp
es
mov
es
and
xchg
neg
sbb
push
add
out
std
daa
outs
test
loop
and
lods
aam
jecxz
fidivr
push
repnz
in
cmp
inc
cdq
push
ror
cmp
xchg
mov
mov
push
xor
shl
ja
pop
repnz
pop
popf
xchg
lea
leave
sbb
jne
mov
scas
mov
add
add
mov
dec
ror
pop
jne
mov
sub
inc
cmp
or
add
aas
mov
test
movs
lahf
ins
pop
test
jne
jbe
mov
push
jnp
pop
mov
jecxz
inc
mov
lea
ins
movs
mov
mov
xlat
push
shl
ret
jb
stos
mov
(bad)
xor
clc
cmp
jb
or
mov
fidiv
mov
ret
sub
mov
out
scas
jmp
(bad)
jae
test
imul
jb
test
mov
mov
xor
or
sub
adc
cmp
into
ss
push
fstp
loop
inc
push
push
jae
enter
xchg
sbb
xchg
nop
into
jmp
loopne
and
shr
cmp
cmp
dec
xchg
push
into
mov
loopne
aaa
ret
jmp
cdq
dec
mov
mov
movs
dec
fisttp
pop
ja
fisttp
nop
jge
ror
push
push
jge
jmp
imul
je
inc
dec
add
inc
(bad)
xchg
frstor
dec
mov
mov
test
push
(bad)
popf
mov
imul
(bad)
and
stos
gs
scas
mov
pop
push
cmp
mov
loopne
push
shr
pop
ret
xchg
cmps
push
add
loop
xor
call
fmul
jl
lahf
out
mov
jb
or
pop
add
pop
dec
fwait
sub
pop
push
shl
jg
gs
clc
arpl
shl
popf
sbb
pop
jne
and
mov
or
ins
mov
movs
fldenv
not
push
in
daa
mov
je
cmp
adc
popf
cs
ins
daa
call
add
stc
xchg
mov
lahf
xchg
sbb
xor
ja
stc
enter
(bad)
dec
push
and
push
lock
fidivr
not
mov
scas
add
arpl
or
jg
call
stc
jne
in
ja
mov
iret
js
call
leave
jmp
mov
and
sahf
lock
scas
jl
fs
jne
(bad)
lahf
mov
cs
loopne
push
cwde
add
adc
(bad)
pop
xor
pop
mov
sar
or
mov
pusha
cmps
iret
cmp
daa
sar
in
sub
inc
dec
rcl
mov
sbb
dec
push
addr16
mov
dec
add
imul
repnz
inc
fsub
pop
and
push
in
retf
push
es
nop
iret
out
ins
mov
push
inc
movs
jae
jle
fisub
jno
adc
jmp
sbb
mov
adc
ficom
mov
test
rcr
stos
dec
cmp
push
sub
xor
shl
pop
dec
sub
pop
push
sti
sbb
push
call
cmp
pop
sub
xchg
xchg
push
les
xor
repz
out
outs
cmp
sub
xchg
xor
xchg
aam
dec
lahf
retf
ret
bound
xor
shl
mov
pusha
inc
and
fmul
mov
sub
add
das
push
inc
repz
and
iret
adc
sti
add
push
inc
add
or
sbb
cmc
stos
mov
and
or
sbb
(bad)
scas
pop
inc
int3
stos
cs
cmps
jp
push
fidivr
aam
(bad)
aam
loope
or
int3
and
jb
cmc
xor
mov
jae
push
loopne
mov
xchg
jmp
je
test
and
in
pop
mov
ds
(bad)
jae
aam
and
push
pushf
call
sbb
test
sti
cmp
push
lods
mov
jns
ja
xchg
sbb
cmp
pusha
stos
inc
add
(bad)
dec
paddsw
sub
xchg
cmp
pop
push
dec
or
mov
dec
or
push
lds
inc
push
push
dec
sbb
repnz
pop
mov
add
inc
mov
push
jecxz
mov
and
xor
push
ins
jmp
inc
(bad)
jo
ds
jmp
(bad)
push
pushf
jne
xor
xchg
sub
xchg
xor
ja
aam
mov
jne
daa
inc
xchg
cmp
into
push
leave
cmp
cs
add
jb
or
mov
in
jns
out
xor
stos
(bad)
mov
lahf
test
sub
pop
ror
std
ret
out
push
or
mov
jo
call
mov
int
adc
je
add
push
xchg
sub
jno
movs
inc
xor
test
aam
aad
xchg
pop
test
movs
adc
cli
rol
ins
test
pop
jge
mov
aas
jb
icebp
pusha
mov
mov
repz
push
out
dec
loope
jo
push
hlt
mov
mul
loopne
push
pop
mov
je
test
stos
stos
xchg
mov
or
and
test
shl
inc
mov
and
pop
(bad)
fwait
mov
pop
jns
push
ret
fldl2e
add
lods
pop
fs
sub
or
leave
adc
lods
pop
xor
sub
arpl
add
pop
imul
lods
je
adc
movs
adc
mov
in
imul
dec
push
mov
push
jge
in
fwait
adc
add
inc
cdq
adc
test
test
xor
or
xor
or
lock
and
sub
(bad)
es
sbb
fmul
mov
fistp
xchg
sbb
jge
mov
imul
addr16
xchg
sbb
inc
dec
pop
in
not
mov
arpl
mov
xor
add
test
mov
jl
jle
jo
shr
jle
pop
xchg
mov
pusha
add
sbb
cwde
and
daa
ja
call
and
out
push
int3
(bad)
loope
adc
mov
sbb
sbb
lea
(bad)
call
nop
pop
sbb
outs
add
jge
pusha
shl
xchg
mov
out
cmps
adc
mov
jo
loop
xchg
mov
adc
les
dec
pop
inc
mov
mov
push
sub
pop
mov
jmp
jp
sbb
sbb
loope
(bad)
jne
loope
ret
pop
and
and
clc
inc
mov
fnstcw
sub
test
or
add
xchg
add
push
loopne
fstp
in
pop
ror
xor
jae
jmp
repz
mov
jecxz
out
rcr
xor
ret
xchg
add
mov
fild
div
mov
pushf
in
cs
out
xchg
mov
adc
fcomp
out
lahf
inc
inc
and
inc
out
fadd
and
pop
push
movs
scas
pop
dec
and
fwait
test
jno
cli
scas
in
xor
jecxz
gs
mov
or
sbb
nop
cdq
cmp
mov
jl
dec
enter
sbb
out
call
test
adc
cld
repnz
rol
add
jae
rcr
call
adc
and
sbb
mov
xor
es
inc
jle
sti
inc
pop
or
loop
cmps
rol
dec
pop
loopne
mov
icebp
fdivr
push
jbe
or
(bad)
retf
ficomp
int
mov
inc
aaa
daa
loopne
aad
fist
addr16
pop
cmp
add
test
mov
pushf
dec
je
ds
pop
pop
mov
mov
pusha
sbb
add
fwait
pop
mov
loopne
xlat
cwde
jae
pop
scas
rcl
xor
xchg
mov
stc
test
pop
xor
(bad)
fiadd
mov
and
icebp
jno
mov
mov
add
cmp
cmps
push
jl
dec
mov
mov
mov
(bad)
xchg
jg
jp
(bad)
mov
cmp
leave
inc
dec
loopne
or
loop
rol
repz
in
pop
stos
mov
out
xrelease
outs
jae
adc
cmp
into
cmp
out
adc
mov
sahf
mov
add
out
fbld
inc
lds
test
xchg
rcr
mov
fadd
inc
mov
adc
or
push
clc
sbb
dec
retf
inc
dec
mov
ret
xchg
in
lds
fidivr
add
mov
stos
sahf
loopne
mov
push
add
xor
imul
xor
das
call
femms
inc
cmps
div
mov
push
es
jmp
lds
xor
xchg
sub
mov
push
and
add
retf
aaa
dec
or
pop
sbb
jnp
repnz
add
cdq
loopne
xchg
pop
fdivr
dec
outs
loop
leave
int
xor
iret
fcom
jnp
inc
and
dec
popa
ins
sbb
pop
sbb
aam
adc
dec
or
pop
pminsw
add
cmp
sbb
sbb
pop
clc
or
(bad)
mov
pop
lds
je
out
jbe
les
mov
sub
jg
sbb
jne
sub
cmp
pop
sub
or
(bad)
shl
dec
sub
xor
cmp
rol
jbe
mov
imul
sub
xchg
pop
jp
pop
fsub
popf
movs
fadd
int3
adc
mov
ins
call
add
inc
xor
dec
ja
rcr
test
sbb
cli
movs
sub
dec
or
(bad)
leave
lahf
jp
out
sub
pop
push
inc
inc
js
inc
aad
cmc
data16
daa
mov
sbb
jmp
jnp
xchg
pop
fnsave
scas
pop
loope
pop
or
pop
or
jno
mov
sub
sub
ins
push
jnp
and
sub
ja
rcr
hlt
loopne
out
es
ret
dec
fidivr
ins
add
lods
cmp
out
fild
sub
ins
imul
leave
test
mov
retf
pop
dec
sbb
adc
push
movs
cmps
rcl
retf
test
outs
cld
loopne
xor
xchg
cdq
jge
jmp
out
es
dec
push
add
imul
and
imul
push
loopne
xchg
xchg
aam
dec
lahf
mov
fmulp
int3
dec
retf
dec
cmps
jno
push
lods
jmp
dec
(bad)
scas
mov
fdiv
jb
loopne
xchg
dec
xchg
mov
push
aas
dec
or
jne
in
push
adc
jno
sub
jne
int3
jbe
(bad)
sbb
and
mov
and
mov
or
push
ins
and
cdq
dec
or
mov
call
call
pop
pop
cmps
nop
or
cmpps
stos
sti
mov
pop
adc
xchg
mov
mov
ss
ins
pop
(bad)
inc
xlat
sub
fsub
inc
icebp
rol
mov
inc
xor
cmc
popa
add
scas
add
enter
in
popa
int3
inc
nop
sahf
stos
push
dec
sbb
ja
pop
pop
pushf
repz
cdq
test
cmp
ins
pop
jl
cmp
movs
cs
mov
cwde
and
mov
popa
or
or
lds
loop
push
adc
cmp
xor
js
jb
sahf
repz
mov
mov
xor
xchg
ins
xchg
fcmovb
mov
pop
mov
xor
lock
je
pop
mov
dec
mov
lea
adc
jmp
dec
sbb
outs
mov
aad
sbb
out
jns
jg
loop
retf
daa
popa
daa
lahf
push
sub
in
mov
lds
ret
imul
mov
(bad)
leave
sub
arpl
inc
mov
jb
outs
shr
jp
push
ret
hlt
cmps
xor
sub
sti
pop
out
test
cmc
addr16
nop
mov
xor
call
mov
inc
sbb
adc
or
rol
and
xchg
mov
lds
and
enter
fsubr
xchg
ins
nop
cmp
cmc
push
sti
jne
inc
sub
mov
sub
out
push
mov
or
or
data16
jge
fnstcw
push
jge
pop
xchg
out
inc
jnp
push
cmp
es
xchg
sbb
or
rcr
dec
sbb
jle
outs
sub
adc
cmp
sbb
iret
call
push
ret
das
pop
jg
test
into
fwait
xchg
outs
out
sbb
retf
icebp
hlt
cmps
sti
xchg
mov
push
test
cmps
or
pop
ret
push
push
mov
clc
imul
popa
or
out
xlat
fist
pusha
lea
jl
loope
sub
xchg
sti
(bad)
mov
mov
fisttp
push
hlt
jne
push
cld
inc
shl
or
pop
pop
xor
add
cmp
jno
dec
ret
pushf
adc
loope
movs
rcl
mov
mov
out
lea
aaa
xchg
sar
fidivr
or
daa
dec
test
pop
add
cmps
mov
iret
into
fidivr
dec
mov
(bad)
lea
add
cld
adc
pop
sahf
(bad)
pop
loop
xlat
mov
daa
cmp
inc
add
fdiv
sbb
jo
scas
test
pop
inc
xchg
xlat
jne
cmp
mov
out
movs
add
push
leave
and
fistp
hlt
cmp
xchg
jmp
repnz
call
xchg
mov
dec
add
fnstenv
cmp
fld
jnp
inc
pextrw
int3
inc
scas
call
cld
cwde
sahf
xor
dec
lea
rcr
xchg
push
test
mov
inc
cmps
fisttp
push
cmps
loopne
and
ss
pop
out
retf
or
mov
push
addr16
sbb
mov
cmp
xchg
mov
popa
pusha
add
add
add
je
aas
push
inc
loope
retf
cmp
stc
mov
sub
mov
loopne
aas
push
xlat
jns
jbe
jp
nop
mov
popf
sbb
push
fidiv
cmp
movs
jmp
sub
lock
cli
stos
stos
cmc
inc
fcmove
fstp
inc
fisttp
push
js
pusha
nop
jne
jge
pushf
out
mov
jns
call
out
btr
sbb
daa
adc
je
outs
mov
sbb
retf
cmp
gs
fisttp
xor
fstp
sbb
(bad)
jecxz
add
sbb
dec
pop
ins
stos
dec
and
xor
data16
add
cmc
nop
push
xchg
jb
sub
adc
pushf
mov
mov
inc
outs
push
mov
arpl
jb
ds
loope
stos
loope
push
mov
rcl
out
aad
out
xchg
(bad)
adc
pop
in
adc
cmp
mov
or
jo
xchg
and
aad
sbb
pop
xlat
les
frstor
sub
pop
js
push
inc
clc
outs
jmp
and
push
push
sbb
test
stc
jmp
add
ror
sub
(bad)
mov
(bad)
push
dec
sbb
gs
sub
pushf
or
(bad)
jbe
repnz
loope
mov
dec
push
dec
mov
lods
imul
hlt
sbb
push
ret
stos
inc
out
into
sbb
or
and
pop
xor
test
aad
stos
mov
add
in
pusha
popf
lds
(bad)
push
jno
jmp
adc
cmp
and
adc
frstor
ror
dec
mov
cwde
repnz
jg
cld
and
xchg
and
dec
sbb
cwde
or
adc
(bad)
mov
jmp
push
popa
sar
inc
gs
jge
call
push
fs
push
pop
adc
aaa
stos
or
cmp
dec
and
inc
jb
adc
int3
inc
daa
fisub
je
add
cmp
pop
and
ror
stc
mov
sub
inc
(bad)
mov
xchg
adc
shl
lea
xchg
adc
lock
mov
mov
mov
jmp
mov
frstor
push
(bad)
jns
movd
pusha
inc
sub
pop
out
cmp
leave
lea
les
ja
dec
aaa
loop
lock
add
sub
sbb
sbb
mov
xor
mov
and
sbb
inc
mov
xor
mov
frstor
inc
sbb
ins
imul
fstp
jp
cs
or
popa
lods
pop
sbb
or
inc
movs
xchg
mov
inc
pop
mov
mov
lds
pop
fs
movs
mov
div
pusha
sbb
(bad)
and
push
jns
(bad)
enter
dec
fbstp
cmp
mul
ja
int
add
mov
fwait
inc
sbb
push
or
and
ins
pop
rol
xor
mov
ja
or
test
fdiv
sub
es
(bad)
xchg
mov
xor
fild
aad
mov
xchg
mov
mov
or
push
xchg
push
jle
mov
imul
adc
clc
xchg
xor
sub
xchg
(bad)
mov
inc
xor
sbb
aam
mov
out
push
les
idiv
cmps
retf
mov
aaa
jo
ss
pop
adc
data16
outs
jbe
ffreep
xchg
xchg
cmps
ror
into
push
adc
aaa
cmp
or
push
adc
mov
outs
pop
fld
mov
push
pop
xchg
add
iret
retf
dec
shr
mov
jl
adc
leave
jmp
sub
es
mov
jnp
repz
xor
push
ja
and
sbb
jge
es
push
sub
jmp
sbb
adc
push
in
add
dec
out
dec
shr
xchg
cs
add
cmc
xor
pop
add
lds
push
sti
pop
loope
dec
mov
cmps
ret
pop
cmps
fmulp
retf
or
mov
xchg
test
pop
mov
jne
cwde
fidiv
pop
jle
xor
addr16
add
(bad)
repz
and
xor
shl
adc
std
outs
fisttp
mov
arpl
pop
dec
stos
shr
test
lea
fld
lods
add
mov
shr
fcomp
xor
jmp
aad
retf
jno
jge
clc
cmp
ror
mov
adc
bnd
mov
pop
test
enter
daa
sbb
jo
dec
mov
fwait
lods
in
imul
jne
xor
test
call
je
pop
xor
stos
xor
addr16
cli
in
add
in
lea
sti
in
pop
xor
cmps
inc
mov
sbb
stos
cs
call
mov
xchg
addr16
mov
cmp
stos
into
jb
sub
(bad)
fwait
aad
mov
outs
hlt
test
sub
pop
jnp
mov
leave
test
adc
fsubr
jns
or
int3
ja
add
adc
loopne
push
sahf
ret
and
inc
mov
stc
retf
call
imul
hlt
pop
add
jl
cmps
call
iret
sub
push
mov
scas
mov
or
idiv
test
scas
jp
sahf
sti
ret
stos
push
push
cmp
dec
pop
push
and
addr16
or
in
int
loop
ds
mov
in
mov
adc
hlt
cmp
(bad)
and
pop
push
pop
pop
push
dec
jae
xlat
xor
xchg
lea
fwait
cmp
dec
dec
scas
cmp
xor
and
push
ror
inc
sar
sub
cmc
mov
popa
mov
rol
dec
fiadd
pusha
pop
sub
pop
mov
push
cs
add
push
mov
stos
xchg
es
ficomp
pushf
sbb
dec
fsub
mov
pop
popf
mov
repnz
cmp
sbb
push
(bad)
push
(bad)
fisubr
dec
(bad)
inc
fcomp
in
popf
fs
les
fdivr
sub
dec
mov
xchg
sbb
loope
fwait
pop
aad
mov
imul
std
and
jb
jns
retf
jge
mov
and
and
retf
in
rcl
outs
push
push
loope
inc
test
or
in
push
mov
cmp
pop
int
retf
xor
jmp
add
ror
mov
(bad)
ds
adc
neg
xlat
dec
push
(bad)
popa
and
out
jmp
mov
mov
jno
mov
out
jmp
dec
mov
int
xor
inc
xchg
xchg
xchg
inc
push
std
jg
push
sbb
sub
xor
int3
and
sbb
in
data16
pop
loop
and
sbb
shr
stos
fcomp
dec
push
call
add
cs
mov
mov
(bad)
and
xchg
push
(bad)
imul
sbb
cwde
into
daa
pop
js
mov
mov
movs
(bad)
xor
dec
push
mov
lahf
dec
mov
movs
mov
inc
sbb
mov
push
dec
fisttp
mov
aaa
adc
xchg
out
pop
and
stos
and
sub
inc
loop
jae
mov
jg
loopne
push
lock
mov
push
scas
add
not
mov
out
mov
mov
test
gs
cdq
add
scas
fnsave
pop
mov
sub
pushf
xor
ins
mov
in
hlt
jge
icebp
popf
pusha
pop
dec
and
push
rcr
sbb
cwde
aas
jmp
scas
inc
mov
and
xchg
mov
jbe
push
outs
push
in
out
sub
fs
(bad)
or
ret
mov
sub
jl
xor
rol
mov
idiv
mov
mov
out
adc
mov
rol
xor
cmp
mov
(bad)
cmps
out
fadd
shl
call
xor
repz
dec
imul
in
push
cmp
and
push
dec
test
mov
mov
jo
clc
adc
xchg
sub
lds
mov
cs
mov
mov
mov
mov
sub
mov
jp
xchg
or
daa
arpl
js
stos
pop
setb
add
iret
jno
jmp
xor
xor
test
mov
nop
xchg
retf
mul
out
fidiv
or
or
fadd
js
lds
sub
mov
inc
mov
push
nop
lahf
imul
in
mov
mov
jo
pop
scas
jnp
sbb
adc
addr16
lock
inc
add
cmp
xor
loope
icebp
mov
sbb
rcl
mov
fild
xor
jmp
xor
cmps
leave
mov
inc
pop
sub
xchg
add
imul
or
test
mov
push
mov
pop
adc
ja
sub
pop
cli
loope
cmp
mov
(bad)
js
(bad)
cmp
popa
mov
dec
lods
push
scas
imul
clc
cmc
or
leave
loopne
cwde
sub
xlat
jne
fild
and
push
js
sub
add
ror
sti
lock
dec
mov
push
adc
pushf
ins
loop
xchg
cli
dec
ret
jno
neg
ret
sti
cmp
les
pop
pop
stos
adc
clc
test
ss
push
retf
jb
xor
stc
out
jmp
mov
cmp
mov
or
scas
add
inc
jnp
dec
in
shr
inc
jge
fwait
js
sub
adc
pop
sbb
cmps
push
jno
mov
mov
add
dec
xor
xchg
add
xor
jo
loope
inc
adc
add
or
jmp
outs
add
das
and
xchg
outs
or
ins
jge
scas
and
push
cld
(bad)
inc
addr16
pop
cmp
call
cmp
adc
pop
pop
hlt
movs
lods
mov
pop
push
sbb
jmp
arpl
xchg
cmp
fld
sbb
sar
pop
mov
cmps
push
add
push
fistp
push
out
mov
pop
jb
adc
sbb
(bad)
scas
(bad)
(bad)
sbb
sahf
sti
jnp
stc
fistp
inc
loope
push
dec
gs
push
xor
(bad)
fistp
test
adc
dec
scas
sbb
mov
jp
pop
push
mov
sti
adc
sbb
stos
dec
dec
repz
lea
test
push
cmp
mov
push
xor
imul
xor
push
mov
test
nop
cmps
retf
(bad)
lahf
and
icebp
loopne
xchg
popf
dec
xchg
outs
xchg
adc
mov
xor
out
popa
add
lock
ins
push
retf
lock
lahf
or
inc
repnz
pushf
jmp
or
dec
push
cld
xchg
push
mov
xlat
xchg
cs
mov
cli
pop
jg
sub
or
adc
jmp
rcr
imul
mov
cs
shl
cdq
jge
cld
mov
cmp
xor
imul
mov
inc
int3
jae
pop
in
out
pmulhw
shl
xor
sbb
inc
xchg
leave
cmp
mov
sbb
adc
(bad)
and
jmp
int
xchg
pop
pop
pop
mov
icebp
jae
mov
sahf
jecxz
sub
das
stos
add
sar
in
jno
dec
push
sti
push
mov
ds
pop
push
in
shr
sbb
(bad)
jbe
pop
arpl
call
test
test
and
inc
mov
out
ins
mov
out
add
xor
(bad)
shl
mov
data16
xor
cmp
shl
nop
rcl
sahf
mov
cmp
out
pop
sbb
int
pop
out
clc
push
jbe
(bad)
or
movs
jg
adc
mov
int
sahf
lock
mov
xchg
clc
xchg
add
out
cmc
fldenv
outs
mov
repz
sbb
mov
imul
iret
das
mov
xchg
rcl
xchg
inc
cmp
mul
pop
and
out
jnp
sbb
out
cs
dec
lock
cmp
mov
mov
lods
scas
push
in
das
inc
call
add
xor
bound
sahf
loope
lods
adc
cs
popa
fs
xchg
pop
mov
xchg
nop
mov
pop
pop
adc
imul
js
aad
sub
adc
cwde
lods
mov
xchg
jmp
inc
xor
daa
adc
mov
jg
data16
fsubr
inc
repnz
sar
jmp
xor
inc
mov
ja
les
in
cld
mov
sbb
lods
xchg
push
inc
sbb
sbb
jo
or
aam
cmp
retf
ins
jbe
and
movs
ficomp
xchg
or
jnp
and
dec
sbb
(bad)
cmps
(bad)
sub
call
cmp
fild
sub
xchg
je
addr16
pusha
mov
loope
pop
jbe
arpl
movs
inc
mov
aad
fmul
fsub
cmp
mov
daa
inc
xchg
mov
movs
pop
aam
pusha
jmp
add
lock
out
retf
scas
xchg
(bad)
imul
mov
add
pop
mov
ins
jmp
lods
cmp
sahf
mov
xor
inc
call
lahf
xchg
xor
push
rcl
lds
(bad)
fwait
or
enter
sbb
shl
arpl
neg
mov
les
jmp
jno
out
pop
sahf
mov
out
movs
dec
jp
inc
sub
aas
push
pop
pusha
scas
jno
cli
(bad)
mov
stc
xchg
inc
add
mov
sahf
test
mov
push
push
push
sub
inc
dec
loopne
cld
or
leave
adc
mov
sub
mov
xlat
stc
sbb
push
cmp
daa
xchg
pop
out
sub
push
std
cmp
mov
xor
inc
pop
(bad)
mov
movs
pop
push
push
inc
stos
dec
test
ficom
dec
in
sbb
or
mov
mov
xor
xor
sbb
ja
push
add
js
mov
sahf
in
pop
ret
(bad)
loope
adc
rcl
pop
loop
pop
fwait
xchg
(bad)
jmp
js
retf
xor
rol
leave
call
cmp
stos
or
or
mov
push
mov
loopne
stc
scas
daa
jns
aad
sub
repz
xchg
pop
xchg
out
jl
outs
clc
nop
cld
in
ficom
xchg
add
and
xchg
aas
or
aam
jl
jbe
test
or
aas
push
mov
or
mov
xchg
push
cmps
mov
mov
cmp
sub
sbb
cli
mov
mov
mov
in
popf
(bad)
(bad)
ss
jmp
bound
push
gs
sub
jp
push
cmp
xlat
adc
retf
jg
mov
mov
push
jecxz
lahf
enter
aaa
mov
iret
(bad)
ins
in
cmps
xor
lds
mov
(bad)
sub
hlt
pop
cmp
jnp
hlt
mov
cmps
aaa
add
stos
ja
add
sub
adc
inc
fcom
pusha
lahf
mov
repz
lea
out
inc
inc
fmul
stc
or
mov
pop
(bad)
pop
push
cmp
fistp
or
fs
(bad)
pop
cmp
xor
add
jecxz
and
neg
fwait
mov
aas
mov
ret
push
cmp
cmps
popf
dec
jle
xor
pushf
push
push
test
loope
test
pop
xchg
add
icebp
and
cdq
nop
out
popf
leave
dec
and
and
inc
cld
fisubr
es
mov
test
scas
jmp
shl
addr16
jecxz
ins
jmp
xor
pop
or
clc
mov
or
sub
pushf
in
fdivr
std
dec
jns
mov
icebp
push
or
sbb
adc
adc
xor
leave
scas
lods
jle
jle
adc
pop
jne
sub
js
rcl
push
inc
lds
cli
and
push
xor
loop
retf
or
ins
out
mov
cli
xchg
fisub
(bad)
or
sti
ins
add
ret
pop
inc
sub
leave
in
pop
ss
ficomp
nop
sub
shl
cmc
add
mov
or
out
mov
je
mov
icebp
loope
jae
into
mov
fldenv
xchg
(bad)
jge
ss
out
sbb
cs
test
sbb
jmp
lods
(bad)
and
imul
jbe
xchg
repz
mov
sbb
push
jae
cmps
dec
mov
enter
cmp
jb
retf
dec
lea
jb
in
sub
and
inc
pushf
bound
rcl
xchg
xchg
xor
js
scas
out
(bad)
enter
call
push
dec
push
ret
cmp
pop
lods
out
xor
loop
adc
push
mov
jbe
mov
or
loop
xor
daa
add
fadd
dec
ficomp
jnp
call
xchg
ret
dec
and
not
(bad)
and
fmul
xor
je
xchg
inc
shl
imul
inc
mov
repz
sbb
popa
sub
call
das
fisttp
sbb
or
mov
mov
(bad)
fsub
fld
and
pop
xor
sbb
pop
pop
xchg
imul
jmp
jge
aad
cmp
and
mov
jge
aad
and
cld
out
and
jo
es
mov
stos
or
pop
mov
sbb
push
outs
jo
mov
add
push
and
clc
xor
or
xor
xchg
inc
push
scas
dec
dec
in
jmp
cld
push
(bad)
and
imul
aaa
mov
adc
sahf
cmps
rcr
fwait
nop
sub
js
push
xor
jecxz
inc
adc
xlat
pop
push
add
jno
iret
leave
sbb
pop
pop
mov
xor
loopne
mov
inc
jbe
mov
ja
mov
lock
xlat
push
xlat
jno
(bad)
pop
es
mov
sub
push
dec
stos
mov
adc
or
cdq
jmp
mov
stos
popf
push
fsub
inc
hlt
popa
jb
adc
pop
nop
fiadd
xchg
ins
ret
inc
push
xchg
or
cld
pop
mov
or
out
and
clc
out
dec
aad
(bad)
sar
test
or
adc
push
sub
fadd
cmp
mov
sbb
ret
jno
jbe
nop
sahf
jnp
in
mov
cmps
add
jge
jmp
mov
xor
xchg
int3
pusha
movs
mov
fistp
jg
pusha
and
sbb
push
loope
retf
movs
xchg
mov
and
mov
add
push
je
pop
pop
dec
pop
aad
jbe
or
dec
into
out
dec
retf
xor
mov
dec
cmp
xchg
jne
add
adc
lds
cli
movs
out
cmc
in
dec
cld
mov
in
xor
jecxz
cmp
adc
jl
in
xchg
scas
xchg
mov
jbe
xchg
gs
and
gs
and
pusha
inc
jae
fsubr
pop
inc
scas
fidivr
pop
fldcw
add
rcr
sub
imul
imul
inc
jae
mov
pop
enter
adc
xor
stc
mov
out
pop
sbb
ss
pop
xor
jecxz
mov
mov
ins
and
loop
repnz
sbb
jecxz
jecxz
das
movs
xor
cmp
mov
or
inc
xor
mov
call
xchg
movs
in
cmp
test
test
cmps
leave
in
(bad)
pop
push
dec
cmps
call
nop
aam
pop
mov
pop
popf
out
sbb
jmp
leave
wbinvd
out
mov
adc
clc
cmp
aas
or
add
gs
pop
icebp
rol
xchg
cdq
push
mov
adc
das
inc
popf
jmp
test
out
adc
imul
(bad)
call
dec
into
sbb
out
test
popa
fwait
stos
pop
out
dec
mov
loop
sbb
and
repnz
pushf
pop
add
sbb
div
out
dec
adc
fnstcw
sti
jne
or
mov
arpl
stos
jne
mov
pop
loope
pusha
cmp
ret
outs
sub
pop
data16
jp
dec
mov
and
in
sub
sub
nop
pop
sbb
pop
mov
mov
arpl
aad
cwde
call
mov
xchg
mov
int3
jmp
ror
les
push
dec
or
mov
pop
aad
popa
fadd
clc
mov
aam
jl
(bad)
sti
gs
clc
dec
sub
pop
pop
cmc
cs
fnstenv
lds
in
mov
repnz
in
ja
adc
push
movs
mov
imul
inc
arpl
test
cdq
sar
sbb
cmps
dec
mov
jmp
xor
idiv
sub
test
loop
ins
fcomp
retf
repnz
js
and
stos
(bad)
repnz
mov
push
xchg
pop
js
pop
scas
jmp
sbb
add
xor
adc
push
dec
sti
sub
ret
fmul
dec
pusha
call
mov
adc
mov
and
sbb
rcr
popf
push
hlt
cmp
outs
dec
sub
inc
stos
pop
ins
movs
call
aas
imul
aad
repnz
fs
push
mov
jnp
data16
xor
popaw
repnz
loope
cli
mov
icebp
sbb
inc
and
js
pusha
push
(bad)
cld
mov
xchg
cmp
loop
ret
imul
fsub
sti
das
push
dec
jmp
lock
fidivr
aaa
out
in
push
ds
pop
imul
add
lea
call
fdiv
sbb
mov
mov
jp
xchg
mov
sbb
pop
jnp
pop
jnp
adc
or
js
fisub
cmp
rol
mul
pop
int3
popa
jns
sub
je
test
sbb
test
mov
jge
jnp
ret
or
js
jne
ja
dec
je
xor
repnz
inc
shl
mov
push
mov
jne
mov
inc
ret
neg
mov
mov
ror
sbb
push
sbb
push
mov
push
call
mov
out
cmc
cmps
ret
repz
sub
jns
es
xchg
dec
imul
push
mov
push
sbb
(bad)
push
cvtdq2ps
cwde
sbb
jge
call
push
pop
add
out
mov
je
mov
jo
mov
fidiv
dec
dec
lahf
leave
cmps
and
aad
jns
fisub
pop
rcl
jae
or
cmps
stos
int3
in
lods
lahf
clc
mov
jne
fdiv
xchg
push
and
(bad)
xor
repz
inc
mov
mov
mov
jle
in
jmp
push
je
add
push
scas
mov
mov
in
push
inc
xor
outs
(bad)
cld
aaa
push
xchg
call
int
mov
mov
and
xchg
mov
push
sub
inc
jmp
jb
stos
cmp
lods
cmp
mov
cmc
daa
sbb
sub
lock
jmp
mov
xchg
rcr
pusha
sbb
xchg
adc
pushf
xchg
add
outs
sbb
inc
aaa
jmp
das
mov
xchg
dec
mov
mov
add
inc
push
mul
aaa
cmp
mov
cmp
loope
movs
out
iret
arpl
neg
in
ja
stos
scas
cmp
cmp
jo
daa
mov
add
in
bnd
outs
sub
push
mov
outs
dec
xor
jb
or
jg
arpl
cdq
sbb
jl
mov
aad
xor
jno
pushf
xchg
mov
and
jle
pop
cs
push
mov
dec
sbb
cmp
xchg
jmp
sub
stos
rol
scas
push
lods
add
xchg
mov
or
or
push
loope
shl
mov
or
mov
mov
push
fs
adc
(bad)
or
fs
inc
dec
jo
sbb
adc
push
cmp
sar
jno
xchg
pop
scas
enter
not
mov
jecxz
mov
ret
das
setno
jmp
int3
pusha
mov
inc
jb
mov
sbb
jge
cmp
add
hlt
xchg
test
pop
jo
mov
shr
pop
lods
int
and
std
inc
or
push
mov
retf
cmp
popa
test
inc
inc
repz
jnp
imul
ror
sub
adc
fstp
icebp
xor
aas
jno
in
cwde
pusha
popf
in
stos
ins
mov
or
loop
pop
sbb
xchg
cmp
(bad)
jmp
aas
ficom
mov
dec
nop
das
mov
mov
and
add
in
in
aaa
sub
(bad)
mov
push
add
push
mov
cmp
fld
mov
mov
(bad)
int3
jp
and
icebp
add
jne
push
or
movs
(bad)
out
xor
xlat
push
into
fs
cmp
cdq
rcl
popa
shr
and
cdq
retf
loope
sub
and
jnp
cmp
(bad)
daa
jbe
jbe
(bad)
sbb
adc
cmp
mov
(bad)
ret
das
or
les
fild
xchg
in
pop
fs
mov
mov
xchg
aam
xor
fnsave
lahf
dec
pop
ficomp
sbb
push
cmp
ss
stc
js
and
lds
sbb
mov
(bad)
mov
stc
sti
xlat
clc
jbe
xchg
xchg
or
adc
cdq
xor
push
icebp
mov
stos
jae
sbb
cmp
adc
xor
dec
outs
mov
mov
mov
pop
jmp
call
mov
push
scas
pop
fwait
data16
mov
jne
or
pop
mov
arpl
ds
hlt
loop
mov
inc
or
mov
cmp
loope
sahf
dec
push
xchg
es
stc
mov
aas
mov
mov
popa
cmp
mov
int3
and
hlt
inc
js
pop
xor
dec
dec
aaa
push
lods
ja
ins
fs
pop
mov
std
push
sbb
inc
adc
stc
jg
popf
fucomip
or
dec
loope
jns
cmp
push
jmp
sbb
(bad)
(bad)
mov
sbb
out
sbb
(bad)
in
dec
in
retf
and
push
data16
sub
push
fadd
sub
add
dec
fidiv
bound
xor
pop
pop
test
inc
push
movs
rcr
popa
mov
ss
sahf
xor
jle
mov
stos
in
leave
leave
lahf
cdq
std
mov
in
mov
popa
cmp
add
bound
inc
mov
add
shl
test
mov
dec
(bad)
xchg
sub
lock
test
loopne
shr
adc
cld
inc
imul
cs
xchg
sub
cmp
cmp
mov
sub
inc
test
sub
push
fsubr
cmp
pop
out
cwde
xor
cmp
cli
xor
ds
(bad)
fnstcw
pop
loopne
xor
rcr
mov
std
cld
pop
pop
test
pop
push
adc
add
dec
ret
jge
xchg
aas
adc
das
test
sbb
xchg
outs
xchg
mov
xchg
loop
mov
push
mov
add
jg
push
ds
dec
repnz
jb
adc
repz
sbb
stos
cmp
inc
mov
ss
mov
ins
push
ds
repnz
and
sbb
arpl
mov
imul
movs
mov
inc
push
mov
out
enter
(bad)
xor
ss
xor
loope
in
call
jns
cdq
repz
outs
dec
cmc
push
in
stos
loop
dec
push
sbb
dec
test
fistp
mov
push
jmp
mov
jmp
imul
inc
scas
xchg
movs
push
sbb
(bad)
dec
outs
clc
fnstenv
rcl
mov
arpl
ds
(bad)
mov
in
dec
cs
add
call
mov
mov
sub
outs
aas
out
(bad)
mov
mul
inc
inc
mov
push
(bad)
icebp
sub
xchg
sahf
push
xor
out
mov
jge
jns
jbe
add
push
xor
jge
es
cmp
in
jnp
inc
mov
stos
(bad)
sub
and
add
lahf
add
cs
and
jbe
mov
add
mov
pusha
xchg
xor
add
addr16
mov
dec
icebp
push
icebp
cmp
add
adc
aad
push
and
mov
jb
mov
pop
jle
(bad)
addr16
jae
adc
ret
push
xor
push
push
sub
das
sub
sub
out
xchg
retf
test
enter
cld
fiadd
push
mov
sbb
mov
dec
movs
out
fimul
xor
adc
dec
imul
pop
ins
xchg
fwait
push
dec
repnz
adc
sar
xchg
aaa
in
cmps
cmps
imul
pusha
cmp
adc
xchg
popa
nop
scas
fwait
jmp
(bad)
out
in
mov
loope
pop
maxps
ficomp
hlt
icebp
add
movs
test
leave
dec
in
rcl
scas
jle
and
xor
lods
xlat
xor
popa
xchg
or
shr
sahf
xchg
scas
mov
(bad)
push
push
cmc
out
add
adc
mov
or
push
inc
and
retf
pop
imul
inc
pop
rcl
popf
imul
add
jae
shl
pop
adc
movs
and
jae
out
push
inc
mov
mov
in
cmps
sub
lods
inc
and
add
aam
push
dec
mov
in
mov
dec
test
ins
mov
repz
popa
cmps
sub
out
push
mov
jle
mov
scas
or
test
jmp
xor
lods
xor
inc
movs
push
movs
std
dec
pop
hlt
std
push
in
sbb
out
xor
repz
call
dec
mov
(bad)
sahf
mov
inc
pusha
pop
adc
push
iret
push
ret
pop
test
jmp
xor
dec
mov
cmp
add
daa
jb
(bad)
fsubr
repnz
cmc
or
(bad)
call
jge
and
and
pop
xchg
retf
push
mov
jmp
(bad)
imul
mov
inc
ficom
aam
in
mov
add
pop
nop
pop
mov
sbb
jnp
fwait
call
xchg
lea
adc
retf
addr16
push
jge
js
pop
jp
sub
ds
or
pop
pusha
cwde
xchg
mov
xchg
xchg
(bad)
stos
jecxz
fbstp
and
(bad)
das
iret
and
ins
jp
jo
dec
ret
xor
pop
movs
fidiv
outs
mov
out
sti
mov
dec
xchg
jge
out
cld
retf
fwait
(bad)
push
mov
jno
in
pop
fidivr
pop
ja
mov
aam
and
dec
mov
rcr
pop
jle
imul
call
add
lahf
dec
inc
sbb
iret
stos
gs
shr
jmp
push
mov
cwde
std
or
xchg
les
arpl
inc
push
aaa
mov
jns
jmp
cmps
out
cmp
dec
mov
inc
jmp
ins
cmp
(bad)
retf
xor
lds
fistp
fnsave
outs
jae
dec
mov
mov
call
inc
mov
in
pop
jae
mov
xchg
dec
cmps
movs
ds
shl
push
pop
jecxz
pop
sbb
aam
cmp
cmp
outs
cmp
cmc
push
movs
and
in
add
push
arpl
xchg
dec
test
push
jne
push
jp
jae
xlat
sub
cdq
jnp
adc
fmul
jge
xor
xor
in
adc
test
in
ja
(bad)
fild
icebp
das
sar
add
(bad)
mov
nop
sbb
push
scas
movs
adc
and
test
les
sub
adc
xchg
ins
mov
fstp
jmp
mov
xchg
jae
fild
pusha
jo
xchg
add
mov
push
push
test
fnstenv
test
or
das
stc
and
pop
popf
fcom
mov
jb
add
pushf
shr
nop
and
movs
out
frstor
icebp
in
pop
cmp
seta
ds
mov
popf
cdq
push
test
lods
cli
loop
cmps
mov
push
jg
mov
add
cdq
dec
in
mov
sub
ret
xchg
jb
lods
stos
les
sbb
sar
cli
push
push
stc
aam
retf
movs
cdq
mov
xlat
call
push
(bad)
mov
sbb
jmp
dec
stc
inc
inc
test
sbb
enter
aad
jp
retf
jge
mov
je
push
pop
xor
mov
(bad)
sub
ins
jne
into
ret
sub
fwait
xlat
int
sbb
lds
popf
ret
icebp
or
popf
jns
and
popa
jb
data16
rol
and
pop
mov
es
sub
mov
mov
sar
cmc
test
pusha
in
lea
sti
inc
push
pushaw
adc
ss
pop
mov
mov
mov
push
push
hlt
loop
daa
loop
dec
xchg
sbb
fcmovne
xchg
cli
sti
mov
mov
je
int
ret
in
mov
cmps
dec
cmpxchg
xor
loope
mov
retf
sti
xchg
lds
pop
xchg
mov
or
in
or
(bad)
in
mov
imul
adc
push
jo
add
data16
scas
cwde
mov
jbe
adc
clc
jecxz
arpl
sbb
mov
cli
aam
mov
xor
pusha
xor
sub
pop
cmp
xor
ins
aaa
pop
ja
push
cmp
or
mov
adc
push
xor
sub
std
in
ficom
or
movs
cmp
jmp
(bad)
in
and
jns
ins
inc
push
pop
(bad)
dec
rol
mov
aad
and
or
inc
or
xchg
out
lds
shl
aad
add
adc
adc
sbb
jg
push
ds
in
das
shl
jno
pop
into
xlat
sbb
gs
vandps
movs
xchg
and
in
mov
aaa
sahf
sbb
pop
mov
mov
pop
mov
adc
jmp
retf
aam
clc
or
push
(bad)
sub
ss
dec
inc
bound
loopne
(bad)
lods
mov
cld
movs
out
xor
sbb
imul
xchg
enter
sub
mov
scas
retfw
fucomip
leave
inc
sbb
push
fs
pusha
rcr
mov
ins
loop
sahf
pop
and
inc
adc
fsub
stos
sbb
es
aam
rcr
jecxz
repz
dec
inc
leave
cmps
inc
data16
(bad)
mov
dec
jo
dec
and
imul
pop
mov
adc
sbb
lods
movs
push
iret
sbb
push
mov
sbb
pop
in
add
fimul
fcom
jns
adc
mov
xchg
and
mov
lahf
lods
jmp
dec
sbb
pop
imul
(bad)
adc
inc
adc
xchg
mov
jmp
leave
fs
push
fistp
push
mov
mov
dec
mov
ins
dec
rcr
sub
xchg
out
pop
jle
xor
or
enter
test
mov
sub
dec
shr
std
adc
xchg
stc
icebp
inc
sub
cmp
xor
stos
pop
shr
mov
ja
mov
pop
sbb
iret
mov
mov
dec
ins
cmp
stos
pop
and
ror
jnp
jl
mov
scas
or
push
mov
(bad)
and
repnz
inc
mov
xchg
fdivrp
pop
rcr
dec
or
into
mov
xor
jl
je
aas
jo
sbb
loope
mov
add
xchg
xor
sbb
xor
stc
daa
pop
aam
call
pushf
ficomp
mov
xchg
out
mov
mov
mov
movs
xchg
imul
add
mov
test
sbb
adc
pop
pop
cmp
xlat
pop
push
aas
push
adc
ds
movs
inc
fcomp
cs
cwde
out
xchg
cdq
adc
push
cdq
push
(bad)
js
lds
xchg
bound
lea
lea
test
inc
lea
sahf
mov
loope
mov
ror
aam
xchg
xor
pop
xchg
mov
call
adc
popf
fprem1
mov
mov
mov
js
shl
cmp
push
xchg
cmp
sub
cmp
push
jmp
cmp
cs
repnz
xchg
jl
loope
cmp
sbb
in
push
jno
cmp
cs
inc
mov
mov
inc
push
jb
ret
cmc
xchg
and
sbb
lods
test
imul
stc
inc
aam
dec
adc
push
jle
pop
sub
mov
cmp
add
mov
mov
std
add
imul
out
jmp
mov
fnstsw
add
es
jae
sahf
in
and
imul
inc
fistp
lods
std
sub
mov
xchg
push
out
cdq
xor
mov
std
xchg
adc
or
inc
fld
sub
ins
bound
in
sub
sub
push
xchg
or
sub
add
arpl
push
pop
mov
in
(bad)
sub
add
rol
mov
sub
or
fmul
imul
and
imul
jmp
push
push
mov
addr16
jg
iret
stc
pop
sub
fldenv
test
mov
mov
es
loopne
(bad)
pop
outs
mov
push
cmps
xor
xchg
je
retf
push
cmp
je
mov
neg
add
push
call
daa
inc
mov
and
fidivr
mov
jns
cmp
pop
mov
out
add
cmps
pusha
dec
cli
xchg
outs
jae
and
jno
shr
adc
fs
scas
in
bound
stc
mov
mov
jno
enter
fstp
stc
and
mov
ds
imul
ins
pop
lock
(bad)
je
daa
je
dec
xchg
arpl
(bad)
sbb
loope
call
pop
movs
aad
xor
mov
push
imul
pop
mov
sti
in
mov
hlt
push
sub
inc
stos
aad
push
jae
dec
inc
call
jge
mov
mov
lahf
hlt
mov
xchg
fs
cwde
fucomp
mov
leave
out
cmc
popf
xchg
cld
cmp
jno
inc
mov
gs
jecxz
mov
mov
call
pusha
bound
sub
je
jl
ja
xchg
loopne
push
lar
inc
mov
or
rcl
mov
or
pop
cmc
je
(bad)
jl
adc
imul
les
pop
loopne
cmp
movs
cmp
xchg
das
sahf
sbb
je
sub
nop
mov
mov
and
jno
ret
cmp
pop
test
sbb
cwde
aad
xchg
sub
mov
jo
sub
mov
or
push
inc
popa
and
int
test
sub
add
stos
retf
loop
popf
leave
lds
aad
ror
fstp
xor
repz
enter
mov
cmp
push
or
xor
cwde
pop
xor
les
mov
mov
sbb
jns
pusha
in
and
jecxz
mov
adc
vmread
hlt
add
call
repz
mov
mov
repz
bnd
iret
imul
xchg
xchg
sub
push
cmp
lea
cld
punpckhwd
mov
(bad)
sbb
inc
sub
test
mov
popa
pop
mov
push
pop
shl
test
jge
int
xor
loope
jbe
or
add
dec
fdiv
in
cmps
cld
push
fidivr
xlat
cmp
loop
and
pushf
ds
jo
dec
xchg
je
pop
cmc
out
ss
movs
pop
test
xchg
stos
mov
aaa
sbb
sbb
mov
cmp
in
jbe
jb
or
pop
mov
jne
jmp
neg
(bad)
mov
js
mov
adc
lock
or
gs
cmp
cmp
cmps
test
call
hlt
outs
mov
mul
dec
inc
rcl
lds
in
mov
push
into
mov
adc
mov
popa
out
rep
fistp
fst
jnp
jae
fwait
and
fwait
xlat
mov
or
sti
sti
or
jge
scas
or
enter
sbb
icebp
ret
les
and
mov
stos
mov
loope
fxch
in
jnp
test
ret
xchg
mov
pusha
add
mov
sahf
shr
jmp
jle
retf
loopne
setae
scas
fiadd
jno
nop
das
lea
in
lea
loope
retf
das
xor
dec
sub
mov
sbb
mov
xlat
adc
and
jne
std
add
fild
dec
in
push
add
jnp
jns
or
dec
imul
div
xlat
push
add
shr
mov
lea
mov
or
cmp
shl
repnz
lods
pop
add
sub
dec
xchg
inc
(bad)
enter
push
into
mov
lock
je
seto
clc
dec
mov
add
clc
sbb
fnsave
scas
mov
pop
add
mov
mov
setae
call
movs
or
or
xor
jge
lea
dec
pop
inc
and
or
ins
mov
inc
loope
and
outs
fs
and
cmc
and
mov
ret
sbb
push
lock
jmp
sti
sti
sar
aas
movs
repnz
in
adc
dec
aad
xchg
xor
push
push
and
jo
je
add
ja
jg
pop
add
stos
ret
add
popf
adc
inc
lea
jmp
aaa
daa
(bad)
loopne
stos
test
nop
stc
mov
sbb
xchg
xchg
popa
fdivr
dec
pcmpeqb
arpl
or
js
(bad)
stc
push
xchg
std
aad
mov
imul
loope
adc
ret
jno
sar
mov
pop
dec
dec
movs
cdq
out
and
push
(bad)
jmp
bound
jmp
mov
iret
mov
adc
repnz
lahf
inc
and
or
cmc
xor
outs
cmp
pop
mov
inc
mov
inc
dec
dec
ror
jle
std
mov
aad
adc
movs
mov
sbb
or
fs
mov
in
adc
mov
outs
or
push
add
shl
sub
into
cmp
pop
or
(bad)
out
sub
mov
cld
jge
ror
pop
(bad)
jmp
and
dec
mov
xor
jmp
loopne
inc
and
jecxz
lock
and
imul
fnstenv
mov
fs
mov
jno
inc
jb
ins
addr16
out
or
or
jle
and
add
add
cmp
mov
mov
xchg
leave
stc
adc
add
jmp
inc
retf
and
inc
mov
sbb
add
mov
pop
rcl
cmp
pushf
xchg
mov
pop
iret
aas
lahf
imul
ror
mov
aad
shl
push
rcr
jo
dec
add
ins
xor
sbb
jle
(bad)
inc
cmps
call
ret
and
mul
jne
mov
inc
rcl
(bad)
jns
stos
fdivr
mov
dec
mov
pop
test
xchg
aam
xchg
imul
pop
call
push
test
and
sti
dec
sar
mov
push
dec
test
add
and
pop
jge
pop
inc
mov
es
aam
push
imul
aam
pusha
adc
daa
adc
cmps
iret
ficomp
push
adc
test
push
cwde
call
nop
dec
cmp
imul
or
in
sub
outs
xlat
adc
imul
(bad)
xor
pop
mul
xchg
inc
pop
test
rol
xchg
stos
out
not
jb
scas
mov
push
adc
(bad)
repz
dec
outs
sub
loope
movs
dec
push
(bad)
std
mov
stos
dec
jmp
push
sub
dec
push
push
dec
rol
jmp
hlt
pop
gs
outs
out
add
jge
bound
xchg
cmps
stos
sub
jae
xchg
out
gs
sbb
inc
mov
push
nop
leave
out
test
ins
lahf
push
inc
xchg
shl
sahf
mov
imul
lock
int
push
or
in
sub
and
scas
fbstp
inc
mov
jl
push
(bad)
shr
or
rcl
les
or
jg
sub
cmp
dec
sbb
add
mov
add
cli
mov
out
push
inc
or
mov
imul
ins
dec
sbb
ret
pop
jns
mov
push
fcomp
mov
jmp
scas
cli
or
repz
inc
(bad)
mov
(bad)
jno
(bad)
data16
inc
pop
mov
cmps
imul
int3
dec
inc
mov
jno
jp
aam
je
adc
out
call
scas
psubd
sti
xchg
ja
mov
lods
cmps
inc
ror
cmp
adc
in
push
in
cwde
arpl
push
push
mov
ficomp
retf
test
pop
rcl
inc
pop
dec
sbb
xchg
mov
mov
bound
add
xchg
inc
xchg
cmp
fbstp
data16
out
jg
mov
nop
fild
cld
mov
xchg
push
in
mov
rol
ds
out
sbb
dec
cwde
mov
dec
pusha
mov
mov
xchg
push
cld
or
lahf
add
sbb
cmc
or
or
in
cld
mov
push
mov
test
add
and
sbb
inc
call
lods
add
push
push
mov
mov
and
add
and
and
or
add
es
test
dec
mov
rcr
pop
xor
fist
mov
add
outs
(bad)
scas
cmp
fadd
shl
and
mov
icebp
push
push
test
enter
mov
aas
pusha
out
fwait
xor
imul
nop
mov
leave
mov
pop
xor
xor
sub
outs
jbe
xor
cwde
out
xor
sub
sbb
iret
std
mov
xlat
repnz
or
fwait
jbe
lea
scas
mov
icebp
jecxz
cld
shl
bound
adc
rol
jg
push
add
cmp
and
dec
sbb
pop
rcr
push
out
mov
in
sbb
inc
cmp
push
outs
repz
test
retf
icebp
mov
dec
xchg
mov
or
(bad)
jecxz
jmp
cdq
mov
cwde
pushf
pop
shl
jecxz
outs
test
mov
dec
imul
jae
mov
sbb
jns
leave
test
cdq
sbb
jl
push
adc
ds
dec
ds
or
sti
jg
pop
mov
leave
ficom
mov
jb
jmp
cmp
pop
xchg
sbb
cmp
loop
cmp
jo
sub
lea
dec
mov
add
adc
dec
add
fwait
or
imul
out
repz
push
gs
fst
adc
adc
sbb
aam
cli
xchg
jbe
add
pop
mov
stos
mov
or
sub
xchg
jnp
cmp
call
fist
fcomp
ins
leave
lds
push
sbb
cs
xchg
xor
add
arpl
cli
push
cmc
sub
jae
ja
das
push
mov
imul
push
iret
xor
jge
adc
dec
out
aas
popf
adc
jbe
retf
ret
test
sbb
(bad)
sbb
pusha
jge
push
sti
in
pop
enter
mov
ss
sbb
add
cmps
fwait
test
scas
cmp
mov
outs
inc
adc
dec
sub
or
adc
jl
loope
pop
outs
push
stos
mov
cmp
mov
aas
jae
lock
test
adc
mov
mov
int3
jbe
std
fmul
stos
(bad)
movs
dec
fwait
test
nop
push
outs
scas
js
or
sbb
dec
jge
stos
or
cmps
mov
sub
sub
sbb
lods
shr
cmp
mov
dec
mov
add
stc
cmp
lock
pop
jp
jno
mul
cmp
mov
js
daa
movs
aad
push
ja
dec
test
dec
test
iret
push
repnz
jp
push
das
add
retf
xchg
retf
mov
sbb
mov
call
es
pop
mov
dec
pop
mov
lahf
pusha
test
and
icebp
iret
add
cmp
push
jg
mov
ins
inc
add
push
int
loope
in
loope
dec
jle
rol
dec
push
pop
scas
test
xchg
cwde
dec
push
sbb
cmps
shr
repnz
js
shl
inc
(bad)
int3
push
sahf
adc
lods
mov
or
ss
mov
loopne
add
xchg
xchg
xor
jl
mov
cmp
int3
sbb
jbe
jae
xlat
add
mov
and
ins
pop
fcomp
jp
shl
dec
cmps
shl
adc
pusha
(bad)
push
shl
add
push
and
sub
movs
fs
sbb
(bad)
sub
dec
adc
mov
mov
add
lds
xchg
jl
mov
ret
outs
repz
stos
xchg
(bad)
pop
jns
pop
leave
fisttp
out
and
jmp
fsub
adc
cmp
sub
dec
gs
and
ret
pusha
sub
leave
jmp
push
retf
leave
arpl
movs
adc
fimul
movs
push
aas
cmp
add
pop
mov
bound
dec
add
std
push
(bad)
repz
jle
into
mov
ret
lock
imul
xor
inc
push
test
leave
inc
nop
scas
call
cmp
mov
cmps
jb
push
sub
inc
push
mov
dec
mov
pop
pop
das
test
xchg
dec
lods
stos
push
xchg
rol
ret
gs
xchg
jle
pop
xor
out
clc
jbe
aaa
cmp
mov
lahf
add
mov
(bad)
sub
pop
pop
js
out
mov
stos
inc
(bad)
outs
popa
mov
jle
jnp
add
jae
lods
or
ret
ja
out
adc
push
jne
rcl
adc
push
mov
push
test
into
mov
repz
push
jno
mov
sbb
imul
jbe
sub
ret
push
(bad)
test
pop
retf
inc
outs
dec
and
add
xchg
fs
stos
test
or
jmp
mov
cdq
jmp
test
fisttp
in
loopne
push
cmp
jno
mov
movs
mov
mov
shl
fbstp
dec
push
pop
(bad)
enter
iret
scas
pop
nop
mov
inc
inc
jae
popf
repnz
jae
mov
test
push
aaa
inc
fdivr
mov
arpl
idiv
sub
xchg
push
into
jo
fsubr
stos
stc
sbb
shl
movs
lock
div
sub
and
mov
sbb
xor
fwait
repnz
fs
addr16
xor
inc
xchg
retf
sub
cmp
dec
(bad)
shr
lock
rcr
mov
mov
retf
push
xchg
mov
or
and
cli
popa
mov
cwde
pop
xchg
dec
iret
jb
lahf
and
mov
loop
imul
mov
add
xor
sbb
push
add
mov
xor
mov
mov
mov
gs
aam
cmc
leave
fisubr
push
dec
mov
pop
jg
pop
xor
das
ja
sbb
mov
loopne
push
movs
outs
call
das
test
or
pop
jns
xchg
popa
hlt
adc
pop
fcomp
inc
int3
test
sub
in
add
rol
mov
cdq
adc
retf
movs
sar
mov
jo
mov
or
cmp
imul
pop
sub
cwde
sbb
sbb
out
movs
sbb
mov
pop
sub
add
jnp
push
and
(bad)
mov
cmps
cmc
mov
sbb
sub
jle
data16
scas
sbb
cmc
sub
mov
adc
in
aas
xor
push
push
pop
cmc
scas
add
clc
and
jno
lea
in
aas
cmp
push
adc
mov
and
adc
adc
push
mov
xor
cmp
sahf
nop
mov
aam
inc
adc
(bad)
add
lods
cmc
sar
bnd
cmp
out
inc
mov
jbe
popf
mov
adc
into
sbb
ret
call
mov
retf
mov
pop
push
push
push
loop
or
ficom
call
and
int3
xchg
sub
int3
xor
in
(bad)
jmp
int
lock
inc
adc
test
adc
rep
inc
imul
cmp
imul
addr16
leave
or
out
pop
push
and
push
rcl
aam
rcr
mov
and
pop
jns
movs
cmp
cmp
in
test
clc
std
sbb
into
jbe
adc
or
pop
imul
mov
hlt
(bad)
jg
sbb
test
xchg
pop
dec
mov
mov
in
add
hlt
mov
mov
test
nop
outs
test
cmps
and
push
rcr
cli
inc
inc
mov
dec
out
popa
ja
jp
jo
or
pcmpgtd
adc
xchg
fidivr
ss
push
cs
lock
ins
push
iret
popf
pop
sbb
data16
lds
jge
sub
dec
pop
out
xor
loopne
aas
jbe
sbb
scas
fs
jmp
ins
dec
xor
stc
pop
out
scas
and
ins
or
sub
jae
mov
loop
call
jge
leave
(bad)
pushf
and
jmp
dec
bound
push
sar
sub
inc
or
mov
in
xlat
adc
out
push
test
stos
cli
push
ins
stos
inc
push
stos
lods
cwde
aam
adc
push
fld
stc
nop
mov
mov
fwait
and
jns
in
sar
lahf
sbb
inc
pop
xor
scas
jmp
add
xchg
mov
out
lahf
ret
xchg
pop
iret
out
ins
xchg
leave
addr16
(bad)
inc
xchg
sub
aaa
cmp
fnstenv
sbb
imul
call
xor
or
dec
rcr
aaa
lock
mov
rol
and
dec
cmovs
sahf
hlt
imul
dec
xchg
call
push
fisubr
sub
mov
sub
lea
cmp
ret
or
es
les
rol
std
cmp
movs
push
dec
sbb
mov
adc
xchg
std
pop
and
fnsave
jne
(bad)
jns
cmp
ins
mov
pop
cmp
cdq
movs
rcr
les
fld
cmps
pop
(bad)
lods
xor
cmp
into
mov
sub
xchg
xor
loop
or
cmp
scas
scas
inc
daa
or
loope
pop
popf
stc
es
push
xchg
test
cmp
in
retf
jmp
ja
mov
jne
push
jno
push
les
xchg
and
cmp
addr16
fist
fsub
outs
cmp
clc
mov
pop
mov
test
imul
add
and
mov
cs
imul
rcl
out
xor
sahf
pop
out
imul
call
jl
aam
pop
aas
daa
jle
pop
and
xor
icebp
inc
outs
clc
xor
scas
inc
xchg
xor
push
adc
jp
and
inc
push
movs
das
mov
fwait
and
leave
sahf
sbb
jbe
pop
xchg
jno
cs
arpl
out
dec
push
pop
sub
call
jb
adc
stos
and
test
fdivr
jl
xchg
popf
lods
stos
jns
or
pop
jmp
add
(bad)
sbb
jge
adc
sbb
xchg
bound
repz
es
dec
pop
into
adc
test
fiadd
mov
mov
inc
cmps
mov
into
mov
xchg
and
addr16
xor
add
or
jl
sar
cmp
add
nop
fsubr
xlat
les
in
mov
adc
inc
push
jecxz
sub
add
imul
jle
scas
inc
jle
mov
dec
push
out
mov
jecxz
imul
or
jo
shl
mov
and
mov
pop
xor
xor
out
adc
std
std
dec
xchg
mov
cld
jmp
mov
sahf
fisubr
jns
jmp
mov
mov
daa
or
cwde
icebp
imul
(bad)
hlt
and
pop
jecxz
ins
test
imul
std
or
aas
xor
sbb
pop
ret
mov
xor
mov
sti
inc
or
jb
ror
or
enter
pop
out
mov
mov
xchg
(bad)
xlat
mov
stos
call
dec
lods
pusha
(bad)
out
inc
in
dec
sbb
out
ds
dec
jae
add
mov
popf
push
(bad)
cli
sti
call
std
push
jp
cmps
mov
inc
dec
or
(bad)
xchg
enter
in
loop
xor
mov
pop
sti
mov
pop
das
bound
sub
sub
adc
(bad)
popf
enter
jnp
pop
cmp
mov
jle
sbb
dec
xchg
ins
xor
pop
retf
xlat
cmp
daa
jecxz
or
loope
cmp
push
jne
loopne
cmp
ficom
inc
and
xlat
xor
aaa
fsub
je
cli
xchg
nop
in
dec
fmulp
cdq
icebp
enter
into
push
xor
ror
xchg
fcomi
add
xchg
or
push
test
les
mov
jno
cmps
loope
cmps
xchg
xor
cmps
jl
mov
sub
jbe
es
test
cmp
stos
lahf
int
dec
std
scas
test
adc
mov
xchg
xor
jae
out
fistp
stos
add
nop
add
mov
or
xchg
ja
cwde
sub
inc
dec
call
into
lahf
mov
mov
clc
cmp
jp
mov
out
cmp
out
mov
movs
ins
fwait
cli
cmp
das
cmp
dec
push
fstp
test
stos
sub
cmp
pushf
dec
out
pop
loop
lahf
arpl
adc
(bad)
push
jmp
xchg
jnp
push
or
shr
mov
mov
dec
scas
xchg
jl
dec
addr16
xchg
dec
inc
(bad)
std
cs
push
push
pop
add
sub
lds
in
imul
mov
or
sbb
xlat
sub
add
and
ss
and
or
dec
aad
xchg
or
inc
xor
repnz
dec
cli
dec
daa
sti
mov
daa
inc
lock
mov
outs
aam
mov
or
cmps
mov
div
int3
sub
or
cmp
std
and
pop
or
cwde
jge
push
fist
sti
popf
test
data16
sbb
and
dec
in
or
nop
movs
inc
sti
sbb
fstp
pop
(bad)
xor
cld
jge
mov
mov
sub
test
pop
std
int
loopne
sbb
push
inc
sbb
lods
lods
adc
jno
and
or
dec
sbb
(bad)
pop
add
in
mov
pushf
in
sub
sub
enter
data16
xchg
stos
mov
xchg
mov
fild
loopne
pop
cs
outs
retf
pop
rcl
test
inc
mov
and
dec
jmp
sbb
adc
cld
in
sbb
jno
xor
xchg
aas
dec
mov
(bad)
mov
ror
retf
jmp
dec
pop
mov
sbb
push
(bad)
xor
dec
ins
inc
loopne
loope
push
shl
xlat
std
popf
pop
cwde
xchg
mov
or
in
cld
ja
hlt
xchg
fadd
out
sub
cdq
icebp
xchg
xchg
mov
inc
pop
jo
movs
je
xchg
stos
pushf
jb
fmulp
pop
dec
xchg
std
sbb
sbb
push
clc
inc
mov
cs
retf
add
lods
sub
int
adc
mov
lds
jl
pop
adc
sub
jge
push
gs
repz
mov
sub
leave
test
in
loope
pusha
xchg
push
cmc
gs
retf
mov
das
enter
sbb
jmp
dec
pop
sti
ja
(bad)
adc
fs
cmp
call
jmp
xchg
mov
pop
fbstp
sub
or
xlat
and
retf
jmp
cmp
aam
add
in
mov
(bad)
cmp
repnz
arpl
adc
sar
push
das
or
(bad)
data16
push
adc
rcr
bound
jb
(bad)
push
add
push
and
ret
outs
leave
or
out
jmp
dec
jns
dec
jmp
es
cdq
xor
inc
inc
pop
enter
pop
ficom
fild
pusha
inc
sbb
rol
leave
jmp
xor
arpl
cmp
pop
xor
inc
repnz
xchg
jle
xchg
push
push
sub
shl
pop
test
jl
lea
push
cmp
fwait
adc
add
xchg
and
sub
mov
push
cmp
and
out
pop
outs
ds
inc
fild
cmp
repz
push
es
mov
je
pop
mov
scas
jbe
ins
or
stos
int
mov
lods
mov
pusha
cmp
mov
mov
test
(bad)
push
icebp
mov
mov
mov
add
imul
pop
mov
pop
addr16
sub
daa
imul
gs
add
and
mov
shl
ins
jle
retf
fwait
push
sbb
sub
inc
loopne
into
jne
aad
repz
sub
out
mul
pushf
iret
loop
add
sub
add
mov
fucom
nop
mov
and
mov
ret
push
fs
es
clc
retf
sub
sbb
pop
frstor
mov
leave
cmps
jle
xor
jo
scas
ja
shl
push
dec
dec
and
sbb
ja
ins
cmps
mov
sub
cmp
jnp
repnz
cli
out
inc
mov
or
inc
pop
pop
add
inc
nop
xor
lods
test
loopne
push
mov
sbb
(bad)
dec
jp
ins
mov
in
mov
les
imul
cld
out
ds
mov
fiadd
aad
test
ins
cmp
mov
test
iret
dec
icebp
sti
xor
mov
pop
clc
fwait
push
bound
fdiv
pop
jmp
adc
mov
cld
sub
xchg
les
mov
in
jl
aas
and
test
adc
fild
pusha
aas
sar
push
mov
push
cmp
and
dec
mov
mov
inc
lock
idiv
cmp
mov
retf
cmp
jecxz
imul
leave
dec
add
mov
push
fcmovbe
shr
gs
call
lock
or
inc
lods
ja
ror
scas
cmps
in
or
mov
jbe
jg
adc
gs
xor
imul
adc
mov
call
retf
(bad)
mov
lahf
dec
pop
sub
int
dec
out
dec
mov
(bad)
ins
out
xchg
out
std
sbb
jecxz
xchg
xor
or
iret
aam
loop
inc
xor
sbb
xor
jp
pop
or
sar
xlat
mov
pop
xor
pop
xchg
inc
pusha
test
scas
xor
sti
mov
push
mov
pop
fidivr
and
(bad)
dec
cli
cmps
and
mov
call
mov
xchg
push
mov
mov
mov
popa
push
jae
or
mov
or
adc
add
adc
mov
xor
sti
hlt
or
nop
adc
test
mov
cmps
mov
or
xchg
sbb
jmp
(bad)
jecxz
add
cmp
aad
mov
mov
jmp
dec
jnp
arpl
pop
dec
push
cwde
stos
or
out
pushf
mov
mov
mov
ret
bound
jns
lods
adc
test
sbb
add
pop
sar
arpl
xchg
cmp
rcl
cmp
add
lea
mov
loope
inc
idiv
add
or
xchg
aas
mov
push
fcom
cli
mov
cmp
repnz
into
cmc
adc
xlat
not
pop
mov
jne
jmp
cmps
mov
sbb
cmps
lds
lahf
sub
out
(bad)
mov
xchg
loope
in
stos
ja
and
lds
dec
ins
out
dec
dec
test
and
in
rcl
sar
(bad)
mov
or
mov
scas
inc
daa
fistp
retf
ret
inc
dec
sahf
shr
leave
rcr
jecxz
push
cmc
jg
es
nop
inc
inc
pop
into
jo
xor
pushf
pop
dec
jle
mov
sbb
mov
mov
push
and
test
out
fdivr
and
bound
mov
mov
pop
jle
rcl
add
pop
mov
outs
inc
test
ins
in
xor
out
outs
dec
fdiv
adc
retf
daa
or
xchg
pop
outs
loop
icebp
sbb
dec
inc
fwait
dec
imul
pop
outs
es
sub
ret
adc
sub
add
dec
(bad)
jns
imul
jno
neg
and
inc
jecxz
pop
sub
icebp
ret
cmp
xchg
jp
add
mov
sti
lods
inc
cmc
jp
jns
sub
nop
ds
push
enter
in
inc
in
sbb
test
(bad)
xchg
sti
test
retf
push
mov
adc
stos
jle
mov
sub
lods
or
cwde
push
ins
icebp
xchg
jo
sar
pushf
repz
popf
push
push
and
mov
mov
icebp
fimul
retf
inc
loope
jmp
loopne
and
mov
xchg
mov
aaa
mov
mov
push
in
mov
enter
ds
sbb
neg
pop
shl
mov
out
fnstsw
scas
call
sub
hlt
rcr
test
out
push
or
test
into
in
add
test
psraw
std
imul
pop
imul
xchg
push
pusha
sub
sub
std
fistp
icebp
stos
jle
cwde
movs
xchg
or
loop
es
sbb
adc
fld
movs
xchg
in
jge
fs
leave
fcom
sbb
loopne
out
add
mov
cmps
cmp
jae
movs
xchg
test
lock
pop
jg
jmp
outs
or
rcl
dec
add
mov
sbb
in
xor
and
in
js
dec
repnz
mov
out
shl
and
mov
enter
xor
sub
dec
jmp
sbb
and
dec
sub
pop
mov
iret
lods
pop
icebp
cmp
in
into
xlat
or
sub
fs
mov
sbb
xchg
scas
adc
pop
movs
and
inc
jecxz
inc
pop
dec
xor
push
sahf
and
leave
or
adc
aaa
gs
not
inc
(bad)
sbb
push
popa
call
fst
jmp
repnz
mov
gs
xchg
(bad)
push
cs
shr
or
xchg
mov
fidiv
test
cmp
xchg
lock
jns
xchg
popa
pushf
mov
imul
mov
sub
outs
mov
(bad)
xlat
dec
pop
xchg
test
fisubr
iret
out
ret
xor
cmp
cmp
sub
jo
push
cmp
jb
and
es
fist
jo
out
loop
inc
repz
dec
es
neg
imul
inc
cwde
jecxz
jbe
hlt
sub
pop
add
cli
in
jnp
or
push
(bad)
loope
mov
mov
push
and
mov
push
xor
pusha
repz
(bad)
mov
jle
scas
mov
or
mov
inc
sbb
hlt
jge
(bad)
aaa
xchg
pushf
push
loop
clc
or
icebp
xchg
xchg
cli
add
add
mov
mov
cmc
xchg
pop
dec
fdiv
imul
mov
scas
ins
shr
fcomp
dec
jge
data16
aas
mov
in
cs
dec
xchg
sbb
lds
mov
dec
shr
cld
xor
jg
mov
movs
scas
pop
bound
pop
add
add
push
test
(bad)
jae
xchg
(bad)
stc
adc
inc
aaa
iret
gs
and
sbb
sub
std
pop
dec
cwde
outs
fcomp
and
push
push
pusha
imul
popf
dec
xchg
aas
jmp
and
xor
sahf
enter
jb
adc
mov
movs
xchg
or
xchg
out
hlt
test
xchg
ins
clc
mov
fcomp
dec
in
jo
mov
push
fiadd
in
(bad)
mov
mov
and
outs
sbb
and
leave
(bad)
stc
mov
pusha
push
cmp
test
fidivr
sub
mov
aas
and
xchg
fwait
mov
test
cld
jb
pop
pop
les
cmp
hlt
or
cmp
clc
fadd
std
mov
adc
cmp
push
mov
xor
inc
dec
enter
inc
cs
add
push
pop
das
inc
cmp
and
or
inc
je
mov
xchg
sub
mov
(bad)
sbb
ins
inc
js
pop
mov
dec
cmc
sbb
pop
jnp
test
xchg
sti
das
pusha
les
adc
in
dec
pop
icebp
(bad)
pop
movs
or
scas
mov
mov
arpl
or
add
iret
in
loop
out
rcl
outs
repz
gs
imul
setb
mov
mov
pop
add
popa
retf
and
sbb
(bad)
and
cdq
mov
push
push
add
dec
jnp
mov
adc
sub
(bad)
leave
mov
inc
adc
les
rol
pushf
frstor
cmp
push
push
movs
xchg
loopne
xlat
dec
test
and
les
mov
sub
jb
aad
lahf
pop
add
fmulp
repz
mov
cmp
shl
xor
shr
aas
repz
xor
xor
jmp
cmp
int
or
xor
lea
push
cmp
dec
mov
jge
push
in
pop
push
lahf
sar
inc
adc
mov
lds
cmp
and
mov
sbb
dec
push
sbb
in
mov
jno
xchg
retf
loop
jmp
mov
and
inc
jl
stc
add
(bad)
push
sbb
xor
mov
dec
and
pop
retf
and
push
xchg
popa
cmp
ins
sti
jmp
jle
ror
(bad)
(bad)
in
mov
scas
dec
stos
outs
dec
add
in
gs
add
push
cmp
jmp
fisub
ret
pusha
push
jmp
cld
or
inc
jmp
int3
adc
rcr
jecxz
add
or
inc
push
int3
sub
fbld
popa
fdiv
(bad)
lea
cmp
imul
fscale
pop
jae
pop
test
jno
mov
movs
sbb
mov
push
out
push
adc
js
jecxz
push
aam
pop
mov
lods
cmp
add
mov
ins
cwd
add
cmp
stc
rcr
(bad)
lea
mov
leave
jge
test
mov
inc
or
clc
movs
mov
retf
and
shl
popf
shl
sub
xchg
mov
mov
daa
(bad)
pop
pop
repnz
pop
daa
mov
cmp
ficom
jge
dec
mov
inc
les
gs
push
sub
sub
sahf
fdivp
add
xchg
adc
imul
(bad)
mov
pop
scas
jg
clc
xor
or
sub
cld
movs
or
shr
ret
cld
jmp
add
(bad)
jl
bound
(bad)
popf
mov
xor
mov
dec
inc
inc
and
sbb
inc
imul
push
dec
(bad)
dec
mov
mov
lock
gs
fistp
rol
lahf
cli
sub
mov
loope
lock
repz
pushf
mov
fiadd
or
push
xlat
ret
enter
sub
test
fst
jmp
out
retf
adc
loopne
lds
cmp
mov
cld
push
dec
inc
outs
pop
pusha
std
add
stos
out
jl
mov
dec
repz
sbb
movs
sub
inc
cmp
sub
adc
xchg
in
fsubr
add
fmul
sbb
or
add
jmp
je
pop
fadd
dec
icebp
cmp
je
sub
jnp
stos
sub
sbb
not
add
cmp
push
mov
das
add
bound
or
in
xor
outs
pop
push
sbb
xchg
and
adc
sub
mov
pop
stos
mov
rcl
lea
stos
mov
xchg
inc
fstp
or
gs
jmp
adc
(bad)
mov
fadd
adc
jl
cld
mov
aas
mov
popf
mov
mov
mov
pop
pusha
or
(bad)
ss
rcr
aas
push
aad
or
frstor
or
iret
jb
out
out
push
cmp
popf
shr
cmp
repz
out
aas
iret
in
cmps
xor
mov
jg
xchg
cmp
movs
out
cmc
push
out
jmp
or
lods
dec
out
adc
push
inc
enter
mov
pop
in
jo
sbb
add
sbb
out
pop
lods
dec
dec
in
mov
fimul
push
lods
hlt
mov
mov
add
daa
xchg
cwde
sub
test
xchg
xor
mov
jb
jae
jge
sar
push
sub
sub
call
mov
lds
adc
ret
jne
cld
sub
ficom
xor
lods
jne
mov
call
mov
out
retf
jo
adc
cmp
test
movs
bound
test
xchg
sbb
test
imul
aam
push
adc
rcl
sbb
sbb
xchg
mov
or
fnstsw
imul
cmp
es
and
sub
(bad)
cmp
sbb
jbe
fistp
xor
or
inc
(bad)
icebp
ins
inc
push
call
retf
push
nop
loopne
mov
mov
add
sub
repnz
xor
xchg
jl
xchg
pop
inc
dec
jo
(bad)
push
cmp
out
xchg
or
sahf
fst
mov
pushf
mov
inc
cwde
je
mov
sub
pusha
pushf
lds
xor
arpl
stos
mov
mov
bound
sbb
lods
clc
dec
movs
sub
mov
inc
shl
loope
xor
retf
es
add
mov
add
clc
out
ss
fbstp
lods
arpl
or
mov
jbe
jl
or
dec
jmp
and
test
ds
xor
stos
int3
jo
(bad)
pop
push
pop
push
mov
int3
movs
or
mov
cdq
push
sbb
pop
aad
xor
movs
jle
ret
sub
xchg
ja
push
mov
dec
sub
clc
mov
sub
iret
jbe
jno
sbb
les
vmovss
pop
jl
iret
dec
xchg
pop
inc
data16
es
mov
ror
or
mov
push
mov
out
xlat
lock
pop
call
inc
adc
aam
cmp
jg
fstp
fcom
sbb
fidiv
jl
mov
(bad)
(bad)
mov
inc
mov
dec
jle
loopne
shl
mov
adc
add
or
call
scas
cmp
sbb
ins
mov
inc
mov
dec
push
ss
dec
aad
stc
lods
adc
xor
inc
mov
fmul
lds
or
sahf
test
sub
push
ss
stc
cwde
push
sbb
xchg
das
mov
or
push
and
mov
push
neg
leave
jbe
popa
rol
lods
jo
pop
scas
cmps
xor
jo
jecxz
and
and
out
in
repz
sbb
mov
jle
inc
fbstp
je
inc
dec
mov
call
mov
(bad)
dec
imul
fcomp
scas
push
imul
pop
pop
push
pusha
enter
push
or
dec
push
stos
xchg
iret
addr16
popa
dec
jmp
xchg
add
ficom
push
push
cwde
jne
sub
outs
ret
push
mov
push
pusha
xor
pop
shl
xchg
js
idiv
pop
stos
sti
div
shl
bound
xor
addr16
push
pop
jg
retf
mov
dec
add
in
mov
xchg
scas
test
mov
loope
jmp
or
test
inc
push
stos
dec
scas
cmp
dec
xchg
add
cmps
xor
push
xor
xchg
das
aas
lea
sbb
(bad)
xlat
adc
push
aad
xor
add
xor
scas
and
je
pop
fst
call
push
rcl
mov
fsub
mov
stc
mov
push
push
jno
sub
jge
add
sub
ins
mov
retf
xor
inc
ficom
mov
je
mov
lods
inc
movs
fisttp
xchg
mov
in
xchg
sub
push
(bad)
and
imul
int3
ins
fild
sbb
cmc
sar
mov
dec
sub
inc
add
mov
dec
add
pop
(bad)
push
cli
das
call
mov
pop
sahf
imul
shl
movs
pusha
push
adc
leave
ja
inc
icebp
out
pusha
inc
sbb
frstor
jge
pushf
aaa
push
rcl
sub
dec
outs
xchg
dec
sbb
scas
xlat
xor
sub
fsubr
xchg
clc
dec
and
cmps
mov
or
jle
fisttp
mov
pop
dec
mov
repnz
out
jle
push
ins
mov
rcr
aas
std
inc
add
in
sbb
sahf
sbb
test
in
ja
sub
test
or
dec
retf
xchg
loope
push
retf
inc
push
add
cli
int3
or
sbb
ins
in
sub
retf
and
jo
inc
test
inc
ss
xchg
pop
shl
sbb
and
xor
mov
sub
loop
mov
ret
or
icebp
jns
je
loopne
xchg
jmp
add
jecxz
jbe
adc
iret
out
jo
mov
push
mov
add
jo
dec
mov
xor
lar
sbb
mov
mov
shr
xchg
dec
test
jne
rcr
movs
xor
mov
fsubr
das
popa
xor
rcr
fnstcw
lock
adc
mov
adc
xor
dec
mov
dec
xchg
or
xchg
int3
inc
fnsave
xchg
dec
dec
or
outs
push
xchg
sbb
mov
ss
into
pop
ins
push
daa
es
mov
arpl
push
fdiv
outs
pop
sub
repz
pop
mov
pusha
stc
sub
pushf
imul
leave
dec
cmp
imul
push
or
push
bnd
sbb
sti
adc
and
or
add
pop
pop
aaa
and
or
lea
add
sbb
stc
shr
daa
push
stos
aad
pop
imul
sbb
ffree
lea
mov
addr16
bound
in
nop
xchg
popf
cmp
push
das
jecxz
adc
ja
psubusw
outs
lock
jl
loopne
push
out
lods
rol
fcomp
lods
push
mov
fwait
pop
int3
sbb
call
repnz
dec
jae
push
jne
xchg
not
stos
das
lock
retf
push
dec
add
jns
mov
jmp
xor
loop
adc
mov
jmp
add
mov
push
lds
fldenv
in
imul
adc
jne
or
jns
fstp
xchg
dec
or
stos
pop
xor
(bad)
repz
inc
jge
lods
shr
push
daa
dec
popf
leave
hlt
js
out
ins
lahf
gs
inc
pop
inc
add
(bad)
loope
lds
mov
xor
cmp
inc
out
mov
push
loope
mov
jmp
pop
push
int
(bad)
(bad)
mov
(bad)
jmp
das
lds
mov
clc
pop
jmp
js
mov
xchg
not
sub
sub
cld
and
mov
mov
jno
dec
test
leave
hlt
into
cmps
sti
and
repnz
push
add
mov
cmp
add
mov
add
(bad)
xchg
xchg
xchg
mov
adc
add
rcr
mov
lods
les
call
in
daa
aaa
cmc
cmp
popa
add
imul
dec
mov
and
in
aas
lds
push
sbb
js
stos
jnp
sbb
outs
and
fist
inc
or
idiv
test
std
add
cdq
jb
sub
or
cld
int3
shr
push
xor
push
jno
jns
and
in
or
dec
sub
js
outs
jge
cmps
mov
jmp
call
and
ins
cmps
adc
inc
dec
test
das
dec
push
lahf
adc
jle
fdivr
xor
fsubr
dec
cmps
pop
inc
xchg
pop
add
sbb
fsubr
jb
data16
pop
jne
push
lock
dec
dec
(bad)
cmp
push
inc
mov
xchg
and
in
or
add
sbb
add
xor
jns
push
pop
inc
jl
push
lods
mov
test
mov
inc
xchg
int3
test
inc
cmc
pop
jl
cmp
mov
adc
inc
movs
and
retf
push
les
mov
xor
arpl
jo
sbb
js
pop
adc
sub
repnz
and
test
xchg
push
cmp
aas
gs
pop
into
fiadd
sub
add
or
inc
sub
test
pop
or
lea
in
aam
mov
scas
sti
mov
sbb
test
cmp
jno
cmp
lods
mov
out
push
or
jbe
adc
mov
sub
xchg
or
fidiv
sbb
iret
and
(bad)
mov
in
ss
leave
je
jne
jo
push
xchg
mov
in
ror
inc
loope
fwait
push
lahf
mov
xlat
adc
mov
adc
pop
movs
clc
shl
cmp
push
aad
(bad)
popa
jo
mov
cmc
icebp
(bad)
inc
rcr
in
addr16
mov
mov
test
push
cmps
cmps
fnstsw
rcr
add
mov
dec
inc
movs
mov
retf
movs
mov
cwde
into
aaa
fidiv
ins
and
scas
clc
push
aaa
adc
lods
inc
pop
ins
inc
push
push
aaa
in
inc
cmps
gs
push
lods
cmps
cdq
nop
xchg
cmp
test
shr
fnstsw
pusha
scas
jg
ret
ror
lods
fcom
inc
adc
inc
push
lods
cli
push
dec
or
adc
imul
out
imul
nop
and
jle
aas
sub
repnz
dec
or
push
ret
lods
mov
lds
shr
lock
push
popf
pop
xor
mov
lods
mov
dec
das
cmps
ins
and
cmp
or
jg
mov
and
lods
xor
jmp
retf
dec
xchg
xor
inc
pop
jecxz
test
mov
in
and
adc
jo
jns
jo
ds
dec
xchg
xchg
push
into
pop
xchg
pop
or
test
fsubr
push
outs
mov
in
scas
dec
push
dec
dec
(bad)
mov
inc
mov
popf
es
dec
leave
cld
cmp
out
ret
jecxz
fdiv
xor
sbb
scas
jecxz
(bad)
push
xchg
mov
call
gs
dec
cdq
(bad)
sbb
xchg
and
fbld
clc
xor
fild
jns
jbe
dec
pop
mov
xor
add
mov
jo
retf
enter
jne
sbb
inc
and
inc
jmp
js
ins
jnp
inc
mov
lea
mov
push
mov
add
enter
bswap
push
sub
stc
cmps
jns
paddq
push
add
mov
xchg
sub
shl
aam
inc
sbb
jp
cpuid
es
leave
cmp
clc
out
jb
shl
xlat
ins
inc
daa
jb
cmps
sahf
(bad)
and
or
in
je
jno
jmp
daa
ss
daa
add
(bad)
ins
fwait
imul
test
cld
aad
aaa
sbb
repz
pop
fs
and
xor
push
rcl
push
ffree
or
retf
div
js
dec
cmc
xchg
cmc
das
hlt
jae
push
mov
repnz
fnstsw
fsubr
mov
dec
xchg
cmp
scas
and
les
mov
or
sbb
lds
cmp
pusha
inc
sbb
aaa
inc
jns
and
or
popf
sbb
imul
loopne
mov
in
(bad)
and
stos
sbb
ins
pop
inc
sub
mov
jp
mov
loopne
clc
cmps
sbb
mov
mov
test
jnp
pop
outs
mov
fbld
or
retf
(bad)
stc
sub
cdq
xchg
or
sbb
add
pushf
fs
nop
lea
mov
pop
das
fcomi
pop
cmp
popa
sbb
sub
psrld
repnz
sbb
sbb
push
arpl
xor
sbb
jmp
mov
mov
dec
ficomp
adc
repnz
pop
inc
dec
mov
inc
jmp
test
mov
mov
test
jl
xor
aam
ror
icebp
lds
icebp
in
in
pusha
sti
pop
cdq
or
test
sbb
sub
jecxz
push
push
mov
pop
sub
ins
ss
(bad)
push
jle
push
jmp
cli
imul
je
imul
sub
ret
cmp
lock
pop
jle
(bad)
int3
jg
xor
js
push
dec
mov
loopne
mov
and
push
and
sahf
sbb
push
push
mov
mov
movs
add
mov
lods
pop
xchg
ds
repz
push
lods
inc
aaa
outs
iret
lds
gs
pop
xor
outs
or
sbb
mov
les
and
fucompp
(bad)
cmp
pop
sub
adc
lods
dec
retf
push
outs
xchg
retf
add
sar
pop
mov
lock
dec
xchg
fstp
mov
jns
daa
pushf
mov
hlt
mov
punpckhdq
out
or
adc
mov
clc
sbb
js
mov
pop
pop
clc
pop
pop
dec
int3
xchg
cmp
pop
addr16
pop
pop
(bad)
loopne
mov
xchg
in
xor
or
sbb
push
lock
mov
jle
mov
mov
pusha
dec
jp
adc
jbe
pop
sbb
es
push
loope
push
cmp
scas
mov
xchg
stc
xchg
rcl
stc
sbb
fisttp
dec
cmc
(bad)
or
or
ins
sbb
or
imul
xchg
enter
sbb
pop
dec
inc
jae
daa
or
inc
(bad)
mov
and
xchg
or
int3
mov
xchg
jecxz
out
test
pop
adc
shr
jge
sti
push
loope
xchg
stc
xlat
retf
inc
pop
(bad)
dec
xor
fnstsw
xchg
mov
imul
dec
js
jmp
rol
clc
dec
adc
push
dec
lock
cmp
ret
dec
xchg
and
xchg
inc
sahf
push
jge
sbb
jg
pop
repnz
inc
cmp
(bad)
or
mov
aam
inc
mov
mov
sbb
jmp
mov
(bad)
mov
les
aad
shl
inc
adc
jne
pop
inc
or
mov
fiadd
mov
add
call
xor
jg
imul
cmp
sbb
call
xchg
xor
push
xchg
ins
rcl
adc
icebp
mov
int
aad
aad
push
adc
jmp
out
mov
pop
(bad)
push
into
push
fisub
repnz
pusha
mov
pop
cmc
lds
mov
sbb
lods
daa
idiv
lds
jecxz
sub
cmps
jecxz
push
jecxz
xor
call
mov
ror
cwde
adc
inc
js
xlat
lds
pop
out
pop
adc
or
mov
fidivr
fs
jle
pop
inc
xchg
stos
adc
sub
inc
or
mov
sub
adc
mov
sbb
lea
pop
push
in
cmp
sbb
xor
mov
mov
xor
retf
mov
out
loopne
test
in
shl
or
pusha
(bad)
fisubr
xor
jge
pop
addr16
mov
nop
xor
mov
pop
data16
or
add
xchg
clc
pushf
lods
push
es
xor
lods
mov
and
or
ss
lds
std
push
xor
(bad)
push
hlt
or
jnp
dec
mov
int3
dec
mov
mov
push
mov
jne
test
mov
fcmovne
pop
fwait
sub
psubw
sbb
dec
out
movs
loope
jb
push
mov
push
out
or
stos
add
test
jb
sub
mov
adc
lahf
icebp
sar
add
les
push
jnp
lods
add
retf
inc
xchg
dec
xchg
in
mov
daa
dec
and
jp
xchg
(bad)
loop
into
std
xor
jb
inc
jge
jns
cmp
clc
in
cmp
sbb
sub
clc
jb
or
jmp
adc
retf
dec
ficom
mov
clc
sar
or
(bad)
(bad)
or
dec
popf
sahf
pop
inc
ss
pop
ds
jo
jl
lods
shr
mov
mov
and
adc
or
and
cs
xchg
inc
jnp
iret
in
ret
test
ud0
add
cmps
ins
push
stc
cmp
std
ins
out
cwde
test
jle
fdivp
mov
shl
pop
lahf
and
jle
xchg
sub
push
cwde
jne
outs
aam
xchg
xor
mov
bts
sub
outs
push
adc
js
sbb
inc
inc
xor
mov
jb
rcr
push
mov
popf
lahf
mov
jmp
jl
adc
mov
loop
or
test
dec
into
call
lahf
in
retf
inc
test
cmps
fld
imul
jo
cmps
fistp
lahf
mov
add
clc
fdivr
mov
fdiv
mov
dec
nop
jnp
cmp
fcmove
dec
retf
ret
jo
sub
or
mov
pop
sub
xchg
in
fld
popa
sub
ficomp
jmp
jl
fbstp
mov
stos
and
mov
in
fistp
cld
cmc
(bad)
ds
movs
imul
and
les
loope
(bad)
mov
mov
or
sti
push
pop
mov
ss
inc
cmp
adc
add
pop
dec
cmp
pop
mov
(bad)
out
cs
jno
and
mov
add
mov
outs
js
addr16
push
mov
stc
sar
mov
pop
inc
jne
adc
xor
xchg
repz
inc
pushf
fcmovnb
bound
push
cmps
jae
nop
xor
outs
iret
(bad)
pop
xor
push
push
into
enter
sar
(bad)
mov
stc
adc
inc
sahf
or
stc
into
mov
sbb
push
not
inc
push
sbb
mov
sub
stc
cmp
cmp
aaa
mov
inc
cli
add
jg
mov
rol
and
fs
ret
inc
mov
dec
sahf
pop
dec
inc
js
xchg
xchg
in
shl
aas
rcr
int
pop
pop
or
in
push
cmp
movs
stos
xor
push
(bad)
and
jae
test
cmp
cmp
popa
test
(bad)
jecxz
cmp
push
outs
dec
shl
xor
inc
xchg
pusha
push
stc
push
add
or
lods
inc
add
loopne
div
adc
jmp
add
popa
adc
push
mov
fst
and
mov
lods
xlat
cmp
mov
push
mov
xor
das
lds
jecxz
retf
mov
push
dec
add
rol
clc
loop
icebp
inc
xor
xchg
push
adc
or
mov
mov
xor
dec
and
or
jge
and
pop
dec
jl
pop
nop
xchg
jns
test
mov
cli
jo
jno
pop
push
in
shl
pop
xchg
xor
jns
pop
jle
push
repnz
push
mov
or
xchg
or
pushf
jo
xor
fadd
jmp
iret
mov
pop
jge
call
jb
ins
xor
inc
sub
ret
rcl
add
movs
cmps
push
(bad)
mov
repnz
pop
or
add
mov
push
mov
jle
ds
sub
xlat
and
push
jae
push
dec
sbb
movs
jae
cmp
push
jb
fnsave
sub
scas
ds
clc
push
jne
xchg
ret
neg
mov
ins
jnp
data16
adc
pop
dec
lds
mov
mov
xlat
std
ret
jne
pop
int
cs
test
stos
clc
retf
gs
leave
or
call
lods
push
dec
cs
jae
pop
popa
adc
mov
add
rcr
push
bound
jno
dec
dec
sub
lods
retf
inc
shl
or
iret
loope
repnz
and
xchg
and
out
mov
pop
pop
dec
mov
push
sub
in
ins
mov
jo
in
mov
adc
xor
pop
xor
dec
dec
jmp
xchg
jmp
sub
inc
xchg
daa
call
or
inc
xchg
(bad)
jo
push
sub
test
test
sub
cmp
mov
sub
(bad)
add
bound
push
xchg
add
mov
and
xor
retf
arpl
mov
jp
push
jo
jbe
std
aam
jne
bswap
jle
sbb
sbb
clc
adc
mov
push
std
xor
mov
sbb
push
neg
imul
fcomi
dec
mov
shl
imul
pushf
jp
in
test
cs
mov
jl
loop
test
pop
scas
adc
mov
cmp
and
xchg
repz
inc
in
and
ror
sub
jo
mov
and
loopne
aas
ins
inc
pop
rcl
cmp
xor
pop
jecxz
sbb
fistp
ins
loop
push
inc
aaa
aam
push
lds
inc
push
push
fwait
add
in
aad
sbb
cli
mov
bound
xchg
mov
retf
inc
cmp
cmp
inc
out
pop
pusha
jo
ins
mov
stos
rcl
shl
shl
pop
mov
fmul
test
sbb
jmp
repz
fs
lahf
fld
cdq
clc
xlat
mov
pop
dec
test
dec
or
iret
rol
rcr
and
and
inc
or
stos
stos
mov
mov
xlat
pop
das
jmp
pop
lds
xor
in
sbb
mov
sbb
ins
and
daa
sub
adc
sbb
jns
jge
loopne
cmp
int
nop
repz
imul
pop
(bad)
cmps
xor
jmp
call
mov
adc
sub
mov
mov
and
jne
mov
push
sub
pop
mov
retf
xor
ret
sbb
sbb
mov
jmp
lods
jmp
inc
hlt
mov
into
inc
pop
mov
(bad)
cld
add
mov
jo
xor
pop
sub
and
addr16
popf
dec
repz
jmp
hlt
xchg
mov
fcomp
(bad)
test
xlat
adc
aam
inc
mov
mov
jmp
mov
mov
sub
push
data16
scas
lock
mov
hlt
cs
push
bound
or
in
mov
into
push
inc
xchg
and
int
jae
fmul
push
ret
test
loope
xchg
lahf
add
addr16
dec
dec
cmp
or
adc
test
mov
cli
jno
cmc
push
cmp
xchg
jb
das
xchg
in
adc
mov
cmps
lods
add
js
sbb
enter
xchg
mov
(bad)
call
je
cmp
out
add
in
and
in
or
mov
cmp
xor
push
movs
xor
data16
xor
jl
adc
ds
jecxz
mov
sahf
add
mov
test
inc
sbb
inc
inc
test
sbb
loope
inc
xor
jp
sar
push
cdq
daa
sbb
stos
ins
mov
and
dec
enter
and
ficom
jne
mov
dec
shl
mov
dec
je
jbe
cld
add
push
mov
mov
(bad)
adc
sbb
sbb
lahf
push
rol
mov
lods
enter
cld
adc
mov
dec
out
mov
call
and
add
xor
in
mov
mov
outs
rcr
imul
nop
pop
xor
jecxz
and
mov
cmp
arpl
out
dec
gs
dec
sti
mov
pop
push
adc
cmps
stos
jmp
pop
sub
pop
dec
fld
xchg
cmc
pop
push
mov
xchg
xor
call
and
pop
cmp
sub
push
les
popf
sbb
mov
das
and
push
pop
ja
int3
popa
(bad)
xchg
xor
xor
sub
sub
mov
inc
cmp
inc
add
iret
xchg
jl
mov
dec
xor
xchg
push
lods
leave
je
rol
iret
push
call
sub
jno
mov
movs
(bad)
cmps
outs
pusha
sub
pop
adc
into
mov
loopne
fld
xor
arpl
add
imul
gs
jne
std
fwait
mov
leave
imul
xor
push
lods
sub
cdq
xor
std
cs
cld
cwde
pushw
jmp
pop
aas
outs
sbb
lods
lea
std
shl
push
cmp
not
adc
scas
in
(bad)
cmp
cmp
xchg
call
(bad)
inc
jne
add
in
add
cmp
pusha
cld
movs
or
lods
inc
mov
xchg
retf
cwde
xlat
cmp
inc
aad
mov
ror
adc
pop
popf
jmp
call
ret
push
mov
loop
push
cmps
ins
mov
pop
push
fadd
cdq
add
outs
jo
rcl
xchg
into
ror
and
push
xchg
and
cmps
push
xor
dec
mov
sbb
mov
mov
sahf
xchg
test
fwait
mov
sbb
lahf
ins
rcr
scas
jge
and
cmp
sbb
out
jmp
mov
xor
mov
push
test
dec
dec
mov
ins
adc
aam
adc
fwait
test
cld
adc
or
cdq
into
jb
rcr
cmps
mov
mov
jmp
bound
and
jp
sbb
mov
jns
ins
ins
bound
and
dec
sbb
pop
mov
jnp
jae
lods
scas
xchg
cmc
retf
scas
scas
push
mov
push
inc
and
adc
scas
xchg
cwde
and
test
sbb
sub
clc
cs
or
inc
xchg
repnz
popf
daa
jb
js
stos
cdq
mov
vmread
jno
cmp
jne
ss
push
nop
xor
lahf
cdq
xchg
mov
inc
(bad)
fcom
ret
push
xchg
in
xlat
mov
inc
test
popa
repz
nop
mov
xor
push
adc
mov
movs
and
jmp
mov
std
push
lods
add
push
or
je
push
in
adc
and
or
jbe
adc
iret
cmc
or
sahf
inc
mov
sbb
jg
push
xor
repz
addr16
cmp
out
icebp
mov
imul
and
xchg
leave
movsx
rcl
xlat
add
xchg
lock
xchg
adc
xor
mov
jne
xchg
add
xlat
mov
mov
loope
dec
pop
and
(bad)
cmps
mov
js
dec
icebp
ss
(bad)
movs
das
ret
mov
nop
fcom
add
cmp
lods
sub
dec
pop
sub
rcl
xor
dec
inc
icebp
dec
lock
inc
fwait
mov
and
and
psubusb
xor
(bad)
sbb
call
sbb
out
ja
jle
cmp
int
jmp
mov
xchg
test
or
adc
push
fmul
imul
pop
lods
push
fwait
mov
add
test
xchg
das
rcr
lods
call
xlat
(bad)
iret
cmp
cmps
and
jo
sub
xchg
mov
and
pusha
test
jns
inc
mov
fisub
mov
inc
ins
test
aad
pop
pop
out
icebp
bound
fsubr
mov
imul
cmps
adc
out
cmp
movs
mov
add
xor
clc
inc
push
jecxz
push
enter
scas
call
push
maskmovq
not
les
xchg
and
push
push
xchg
nop
ret
dec
mov
push
cmp
xchg
mov
fcom
jae
dec
imul
push
mov
mov
inc
xor
out
push
lods
dec
cmps
adc
xor
outs
jo
lds
outs
lods
inc
mov
nop
test
xchg
retf
add
and
xchg
inc
pop
push
inc
cmc
mov
pop
cmc
enter
leave
cli
test
xlat
mov
dec
cld
xor
jmp
adc
mov
and
out
nop
jp
mov
or
cmps
fadd
scas
test
fcmovne
sub
xor
jmp
add
lock
mov
cmp
mov
push
test
or
dec
(bad)
(bad)
adc
xchg
xor
mov
or
ins
iret
xor
(bad)
jl
add
cmp
mov
mov
sub
data16
cmp
sbb
ficom
sub
sub
mov
mov
clc
movs
fsubr
stc
cmp
(bad)
retf
inc
cwde
(bad)
mov
(bad)
cmp
fwait
sub
pop
and
mov
mov
dec
fistp
aam
push
(bad)
jle
xchg
or
mov
pushf
sbb
adc
mov
jmp
pop
mov
test
call
neg
out
frstor
xor
in
cmp
out
mov
cmp
rcr
push
mov
aas
pop
(bad)
sub
icebp
xor
jl
jp
or
sub
sbb
sub
jbe
xchg
cli
add
pop
call
lods
shr
in
xchg
in
or
or
vminpd
mov
pop
in
jbe
jns
outs
mov
sbb
(bad)
xchg
hlt
jno
test
int3
leave
inc
cmps
xchg
jmp
push
nop
cmp
inc
xchg
fimul
cmps
fstp
pusha
mov
push
out
repz
outs
or
(bad)
pop
inc
xor
sbb
cmp
push
js
lods
inc
jns
xchg
arpl
pop
xchg
or
loop
mov
out
mov
jae
push
push
(bad)
aam
aaa
int
and
je
js
stos
lock
imul
jns
ds
cmp
dec
stc
mov
mov
stos
jno
jp
xlat
jns
sbb
and
jne
fild
cmp
jmp
add
(bad)
ja
sub
cli
jmp
popa
xchg
outs
bound
arpl
fdiv
arpl
pusha
mov
repnz
pop
iret
test
inc
mov
dec
sub
loopne
mov
jbe
cdq
dec
call
int3
mov
aad
lock
mov
stos
into
stos
and
jo
adc
sub
push
inc
cmp
popa
(bad)
adc
fcmovnbe
icebp
rol
ja
sbb
mov
sub
and
jge
or
and
out
pop
jmp
sar
aaa
(bad)
dec
int3
scas
inc
sbb
push
call
mov
cwde
dec
dec
xchg
and
enter
clc
aas
fld
mov
jge
jmp
sahf
fiadd
add
add
sbb
test
jp
mov
les
(bad)
clts
mov
cdq
jg
pop
mov
mov
loopne
sub
cld
stos
inc
adc
std
arpl
pusha
ret
out
imul
sti
add
pop
repz
ror
add
ins
popa
movs
mov
add
mov
and
loope
or
loopne
(bad)
xor
inc
or
jge
js
sti
jb
fdivr
loope
jae
dec
cmp
sub
stos
into
leave
in
mov
jl
ret
call
outs
dec
call
rcr
inc
xchg
fst
and
iret
add
popf
(bad)
stos
sbb
cmps
push
pop
ret
pop
lea
cdq
psubsb
lahf
pushf
lods
daa
xor
hlt
clc
lds
and
test
mov
pushf
xor
inc
test
sbb
lods
push
add
enter
arpl
jmp
inc
jno
and
or
inc
cli
out
mov
mov
jne
ror
iret
ror
fs
xchg
jbe
and
add
repnz
jg
or
out
aam
mov
push
xchg
sub
sub
pop
fisubr
pushf
xchg
(bad)
fsub
inc
rcr
pop
mov
ror
mov
pop
mov
sub
and
push
pop
xor
sbb
push
neg
sti
add
pop
lds
xchg
xchg
out
jecxz
retf
and
out
or
call
mov
rcl
mov
pushf
push
inc
pushf
bound
test
xor
addr16
jmp
jae
jle
adc
pop
xchg
cli
icebp
retf
xlat
vcvtsd2si
imul
std
mov
(bad)
cwde
sub
fnsave
int
sbb
sbb
pop
lods
xchg
(bad)
(bad)
iret
inc
adc
xor
lahf
jl
sar
inc
xlat
xor
icebp
jmp
bound
test
minps
shl
test
pushf
pop
lock
(bad)
aas
mov
sti
pop
inc
inc
retf
push
aam
stc
pop
inc
fisttp
push
adc
das
xchg
dec
lds
sbb
and
cdq
dec
lods
jb
les
out
jge
imul
test
pop
pop
dec
bound
mov
mov
cwde
cmp
adc
mov
add
pop
mov
es
mov
mov
jecxz
leave
enter
pop
nop
xchg
stos
xor
and
shl
and
sar
sbb
pop
xor
out
outs
xor
ror
and
xchg
ss
cmc
or
jg
jle
dec
and
sahf
jge
aas
out
fadd
sbb
and
outs
imul
test
test
out
aad
and
adc
mov
lea
jne
mov
fwait
pusha
mov
sub
pop
pop
sar
and
push
lods
push
dec
push
repnz
or
pop
mov
and
ds
cmp
xor
and
dec
cmp
or
jns
call
dec
sti
push
xchg
movs
mov
mov
inc
sub
mov
push
int3
and
cmp
fimul
ror
inc
aas
pop
aaa
mov
jbe
icebp
jmp
mov
dec
push
test
sub
fist
enter
dec
adc
cdq
aad
adc
adc
sub
push
aaa
mov
jbe
lods
fs
iret
scas
push
xchg
inc
outs
xor
sar
outs
mov
xor
or
push
cmps
sub
or
pop
jmp
pop
jnp
(bad)
out
std
out
or
add
outs
pop
je
mov
mov
dec
mov
push
lea
mov
pop
data16
inc
push
ins
inc
mov
in
cmps
daa
loop
push
jo
xor
call
lea
or
dec
sub
shl
adc
inc
cli
je
cmp
or
fs
jne
sbb
fstp
rol
outs
jecxz
into
xor
aaa
movs
or
fwait
pop
jo
dec
fldenv
cmps
cmps
cmp
pop
(bad)
dec
lahf
sub
sbb
ins
pop
pop
cmps
mov
push
popf
(bad)
push
dec
fmulp
mov
ret
push
pushf
in
(bad)
ficom
inc
imul
sub
or
es
pop
cwde
push
popa
sahf
and
aaa
push
push
mov
fs
mov
scas
fmul
in
jmp
mov
ret
mov
loope
pop
pushf
into
cmp
call
jo
fsubrp
mov
frstor
cmp
fld
mov
fld
pop
cmps
xor
adc
int
dec
ds
mov
and
push
jle
clc
inc
push
xchg
and
(bad)
mov
cs
jns
dec
dec
push
jb
jbe
adc
and
out
pop
dec
loopne
int3
jl
stc
cwde
lahf
push
icebp
or
sahf
push
jle
ret
data16
or
out
stos
lods
int3
lods
sub
loop
fcomp
and
neg
mov
mov
in
add
js
dec
cmps
sar
cmp
cli
popf
pop
xor
into
aas
xchg
fadd
enter
pop
test
test
out
sbb
and
mov
loopne
inc
ror
push
(bad)
mov
mov
mov
dec
inc
pop
mov
ds
jo
dec
mov
stos
xchg
inc
dec
pop
and
cmp
push
retf
addr16
cmps
sbb
sahf
sti
cmp
xchg
nop
popa
mov
in
pop
(bad)
repz
inc
int
sar
dec
or
push
push
push
push
sbb
or
es
arpl
(bad)
int
adc
in
sub
pushf
jg
xor
add
or
cmp
arpl
popa
mov
test
out
movs
or
lods
adc
sub
xor
xchg
mov
sbb
call
mov
mov
stos
mov
xchg
ret
repz
lods
pop
iret
ret
mov
adc
mov
(bad)
fcomp
jp
add
clc
mov
jne
jmp
cli
das
xchg
push
mov
push
and
cmp
xor
sub
mov
or
pusha
mul
mov
and
sbb
test
in
pop
mov
mov
shr
sbb
sbb
test
or
jmp
test
push
adc
xchg
ins
mov
sub
int
lea
pop
mov
sbb
test
mov
push
xchg
and
add
mov
cmp
pusha
add
clc
pop
test
call
fldcw
ret
mov
leave
ja
das
(bad)
in
adc
xor
imul
rcr
cmp
rol
fist
fdiv
js
mov
pop
pop
cmp
(bad)
sbb
xor
jge
xor
and
jge
std
fisttp
cs
pop
neg
addr16
test
inc
mov
dec
sbb
call
out
or
pop
sbb
movs
into
sbb
xor
dec
out
xor
data16
loope
fcmovne
xchg
and
lock
(bad)
in
mov
das
outs
dec
sbb
push
clc
lea
(bad)
call
and
(bad)
cmps
hlt
repnz
leave
rcr
xlat
add
mov
inc
outs
ror
std
jae
jecxz
sbb
adc
xchg
mov
and
cli
jmp
adc
dec
pusha
retf
push
iret
or
pusha
sbb
jg
les
mov
push
cmc
ror
(bad)
les
jne
aam
call
xor
loope
jnp
sbb
aam
jmp
xchg
jae
cdq
dec
sub
into
pop
and
pushf
sahf
fmul
or
imul
mov
pop
xchg
sbb
mov
xor
xlat
adc
ins
ja
sub
adc
retf
inc
sti
sbb
shr
inc
sub
and
mov
jmp
popf
ins
fst
mov
in
jg
cmp
push
bound
cmps
retf
test
icebp
rcr
test
enter
cmc
cmp
inc
(bad)
sahf
dec
iret
iret
scas
xor
stos
aaa
push
stos
cmc
sbb
sub
loope
sbb
adc
lods
dec
setg
je
scas
pop
inc
sbb
and
aaa
loopne
loope
mov
popf
cli
xor
xor
xchg
adc
sub
sbb
enter
mov
jp
push
mov
jg
rcl
mov
cmp
ins
pop
jbe
pop
fimul
or
pusha
neg
mov
cli
call
jecxz
pop
adc
push
aaa
(bad)
mov
(bad)
jne
dec
sub
aaa
xchg
inc
sub
int3
imul
xor
test
leave
shl
mov
test
mov
cdq
push
ret
in
call
retf
pop
pop
inc
and
push
xor
sbb
inc
and
cdq
pop
lahf
scas
fisub
in
daa
enter
and
stc
inc
in
and
mov
xlat
jnp
inc
jne
pop
into
xlat
cli
setns
inc
(bad)
lahf
push
daa
test
and
or
add
mov
push
inc
imul
imul
mov
xor
push
push
pop
inc
add
pop
(bad)
add
xor
fdivr
and
in
outs
call
sub
cld
or
imul
mov
scas
xchg
push
test
fisub
pop
mov
rol
and
stos
stos
mov
xchg
pop
jl
jne
sbb
pushf
inc
int3
(bad)
jno
mov
vmread
add
aam
mov
xchg
sbb
call
stc
sbb
test
adc
pop
imul
inc
sbb
mov
(bad)
jp
jne
lea
stc
mov
or
popa
addr16
jle
and
xchg
xchg
jnp
int
jge
shr
shl
icebp
scas
jl
push
adc
xchg
mov
adc
pop
rcl
mov
test
retf
xor
or
xchg
imul
into
cmp
mov
stos
cmp
hlt
push
jle
aam
mov
stc
xor
pop
jne
sub
ss
pop
data16
mov
mov
add
jmp
ds
mov
or
inc
aam
call
xchg
das
push
inc
cld
jmp
int
js
pop
ret
fwait
jmp
jb
cmps
lds
adc
push
add
pop
xor
arpl
in
xor
jno
into
add
cmp
mov
mov
out
fidivr
pop
ror
(bad)
mov
xchg
repnz
push
sub
mov
cmc
or
dec
out
inc
test
pop
stc
shr
mov
cmp
dec
je
dec
dec
inc
cmc
inc
or
test
mov
ficomp
push
es
rol
push
or
push
sar
das
iret
ret
adc
push
sbb
(bad)
ja
jbe
push
push
jl
or
mov
and
int3
cli
aam
xchg
dec
xor
jnp
sub
ror
repz
gs
xor
xor
dec
cmp
push
mov
sar
jb
lods
pop
shl
ret
leave
jge
jp
inc
xor
mov
enter
test
leave
and
rcl
or
adc
pop
stos
sub
mov
retf
rep
mov
hlt
loopne
addr16
inc
in
lock
stos
fisub
jns
das
ret
xor
inc
mov
jp
dec
inc
cmp
imul
mov
outs
repnz
inc
pop
repz
in
cld
xor
adc
scas
jo
sub
adc
call
sub
stc
sub
sbb
sbb
xchg
pop
ins
mov
sub
out
or
dec
es
in
adc
jmp
outs
popf
mov
cmp
cmp
arpl
xchg
loop
and
(bad)
movs
mov
pop
xchg
inc
sub
cli
mov
xor
xchg
in
push
(bad)
rcl
repnz
and
or
xor
add
sbb
sub
lea
push
jmp
repz
mov
(bad)
xlat
push
not
scas
add
(bad)
test
test
xor
test
nop
sahf
daa
data16
nop
cmp
sar
lods
fstp
movs
adc
lea
push
aam
test
sbb
aam
dec
cmp
cdq
mov
(bad)
pop
jno
mov
dec
mov
xlat
into
popa
adc
in
mov
and
or
cmp
or
cmc
popa
inc
stos
pop
push
pop
call
rol
push
mov
jp
sbb
mov
pop
std
inc
call
addr16
pop
inc
jecxz
and
adc
or
fld
dec
cmps
into
ret
cld
ins
mov
loopne
xchg
sub
push
out
sbb
pop
icebp
xchg
js
dec
inc
push
dec
out
mov
outs
jnp
mov
aam
adc
(bad)
aam
push
dec
mov
sbb
jge
pushf
dec
and
fmul
(bad)
rcl
(bad)
ins
aas
dec
cmp
enter
ror
rol
mov
loopne
dec
rcr
outs
xor
xchg
adc
popf
test
fist
test
cmp
into
adc
fwait
sti
arpl
mov
inc
jbe
xchg
push
cld
fistp
je
shl
stos
pop
cdq
call
pop
daa
jae
jecxz
push
jg
jne
xchg
movs
popf
xchg
sbb
xchg
sbb
sub
and
pop
clc
mov
xor
pop
cmps
mov
dec
sub
aad
shl
stc
sbb
and
xchg
lods
or
lahf
fisttp
add
test
inc
jne
daa
push
or
mov
push
pushf
test
and
ror
or
push
sub
hlt
rol
imul
pushf
sahf
mov
mov
data16
scas
fidiv
int3
dec
mov
and
lods
push
int
dec
shl
jmp
test
xchg
lahf
push
add
in
fwait
cmc
dec
popf
scas
mov
in
sbb
mov
dec
cmp
mov
cmc
jp
not
int
out
or
cmp
and
fsave
sub
mov
adc
(bad)
outs
stos
sbb
push
jl
ja
adc
push
aaa
sbb
inc
std
inc
das
pop
ins
cmps
and
inc
push
adc
add
loope
pop
addr16
xchg
cmp
in
inc
aad
push
sti
popa
xlat
test
sbb
mov
jmp
les
ss
cld
(bad)
in
iret
cmp
test
pop
cwde
cmp
or
hlt
enter
bound
mov
xchg
and
jns
jmp
jnp
jmp
pop
xchg
(bad)
dec
lock
sbb
cmc
das
fadd
shl
fs
(bad)
pushf
imul
xchg
icebp
out
repnz
pusha
mov
inc
push
and
mov
data16
das
dec
inc
cld
xchg
outs
push
in
pop
aaa
cmp
mov
inc
addr16
cmp
jbe
dec
xlat
inc
jns
ret
or
sbb
test
lea
mul
es
mov
jg
xor
es
mov
pop
repnz
scas
pop
mov
das
ret
pop
push
mov
movs
(bad)
xchg
mov
sbb
mov
js
jo
cmps
pushf
push
retf
rcl
into
sub
mov
add
cmps
push
stos
icebp
fwait
mov
adc
out
jno
adc
jo
push
push
dec
sbb
xchg
xor
mov
mov
xchg
xor
std
adc
outs
in
aas
test
(bad)
push
outs
nop
dec
push
adc
jb
in
jle
(bad)
pop
and
dec
dec
add
fwait
and
mov
xor
cmp
aaa
or
cmp
sbb
sar
dec
fisttp
adc
and
mov
mov
mov
cmps
inc
jnp
sub
retf
jno
(bad)
stos
xchg
jnp
mov
adc
push
push
pop
mov
scas
xor
pop
adc
fiadd
and
test
sbb
xchg
outs
in
inc
fimul
loopne
and
js
ss
jne
test
popa
or
mov
or
jmp
sub
xchg
pop
pop
aad
dec
fbld
inc
(bad)
pop
aam
cwde
inc
cmp
scas
out
dec
push
mov
jg
leave
cld
adc
in
(bad)
je
push
dec
jg
lods
rol
imul
int
dec
xlat
dec
cwde
mul
outs
iret
adc
cmps
icebp
data16
dec
adc
xchg
sbb
and
mov
mov
mov
cld
mov
and
shl
addr16
aaa
mov
iret
clc
inc
jmp
add
or
test
sbb
dec
or
add
sti
inc
mul
jbe
out
inc
dec
pushf
jno
or
and
xchg
jnp
xchg
cli
sub
xchg
pop
cs
inc
mov
adc
(bad)
rcr
rcl
xchg
mov
dec
jg
test
loopne
mov
cmp
lock
popf
into
fdivr
int
mov
ins
loop
outs
(bad)
push
dec
jge
fs
mov
xor
jle
push
mov
call
mov
or
push
xor
rol
fsub
fisubr
xor
out
cmps
pop
mov
xchg
mov
imul
push
sar
mov
addr16
push
push
sbb
and
loop
adc
test
mov
shr
xchg
add
(bad)
and
sbb
mov
test
jge
test
repnz
aam
rol
xchg
sub
mov
retf
mov
dec
loope
adc
mov
stc
pop
dec
ins
out
aam
ficomp
mov
sbb
mov
and
clc
xchg
pop
cmp
xor
cld
mov
mov
mov
cmovbe
lods
stc
mul
sbb
mov
aas
mov
cmp
sbb
dec
push
inc
in
js
ss
jg
call
push
inc
inc
cmp
icebp
out
hlt
xchg
add
xchg
inc
(bad)
scas
arpl
sub
aam
xchg
stc
into
(bad)
in
dec
je
iret
call
or
xlat
shr
aaa
pop
or
mov
repz
aam
cs
jmp
push
(bad)
int3
pop
repz
xlat
sub
mov
loopne
and
mov
popf
ss
test
xor
lods
mov
shr
out
aad
or
jp
aas
inc
aad
loop
loopne
inc
and
or
cmc
inc
xchg
fst
add
xchg
sub
jmp
sbb
scas
sbb
dec
jmp
or
or
xchg
mov
pop
mov
adc
push
test
movs
adc
in
jl
aaa
repnz
rcl
repz
into
ret
stos
ret
lds
push
jp
xlat
in
sub
dec
out
xor
mov
adc
fs
leave
inc
dec
sbb
mov
cmp
daa
test
fmul
cs
shr
cmp
outs
in
dec
mov
and
ss
(bad)
stos
sub
test
add
data16
lds
shl
cmp
push
jg
stos
fs
mov
je
xchg
inc
sbb
das
push
fcmovu
sbb
xor
and
inc
jo
leave
lds
aam
popf
xchg
or
xchg
and
repz
adc
inc
daa
(bad)
ror
jb
push
dec
(bad)
push
cld
add
clc
mov
sub
jb
mov
push
int
push
scas
inc
repz
out
stos
(bad)
sbb
scas
xlat
in
mov
xchg
pop
leave
rol
mov
mov
sar
fwait
cmp
pop
fs
fwait
add
mov
hlt
fldcw
loopne
pusha
icebp
sub
scas
adc
int
mov
mov
gs
xor
mov
dec
into
ins
jmp
in
add
push
int
into
and
inc
and
in
stc
aad
sar
push
cmp
retf
dec
xor
sahf
and
dec
cmp
mov
lds
or
int
jp
out
scas
inc
addr16
and
cmp
cmp
add
xor
std
or
in
dec
lds
stos
mov
add
repz
inc
or
push
xlat
rcr
pushf
test
cmc
pop
sahf
xor
xchg
not
add
fbstp
sar
clc
loope
adc
pop
dec
lahf
or
or
das
jo
push
cmp
not
mov
test
jnp
jnp
add
(bad)
data16
xor
mov
fist
rol
adc
mov
iret
in
repnz
cmps
lds
fild
loop
mov
int
les
adc
ss
addr16
mov
fsubr
or
push
lea
mov
xor
in
xchg
or
test
test
dec
dec
or
lods
mov
stc
mov
dec
inc
loop
sub
ins
jl
mov
aad
adc
(bad)
lods
add
sbb
push
out
pop
jg
fld
jns
inc
stc
dec
sbb
dec
cmps
pop
loop
push
in
(bad)
loopne
cmp
mov
aad
sub
xchg
dec
inc
or
clc
stos
push
mov
jo
and
or
add
and
adc
jl
lds
dec
mov
add
pop
dec
mov
cdq
jae
(bad)
mov
mov
add
mov
add
cmp
aas
cmp
or
stos
cmp
icebp
scas
movs
fcomp
cwde
inc
dec
(bad)
cmp
in
mov
jb
mov
fcomp
sub
sub
add
push
outs
mov
push
retf
add
cwde
or
cs
mov
pop
jp
bound
aad
lods
leave
js
std
or
ret
xlat
stc
out
in
dec
lds
(bad)
js
call
loop
ja
in
gs
js
dec
xchg
add
test
adc
sub
lock
cmc
mov
add
jo
mov
fidivr
add
dec
(bad)
test
mov
mov
or
inc
push
and
sub
push
mov
cmp
cwde
jge
xchg
jecxz
lahf
jmp
and
mov
add
ret
lahf
cmps
scas
lods
out
fsub
retf
pop
lods
js
or
push
sbb
sub
nop
or
aam
adc
xchg
inc
mov
jmp
iret
xor
jecxz
and
sti
out
xchg
lds
jp
mov
push
cmp
sub
cld
cwde
cmp
jns
popa
popf
fidivr
mov
ffreep
shl
cld
outs
push
jbe
jae
mov
dec
mov
div
dec
(bad)
sahf
retf
pop
out
mov
pop
lods
in
ret
test
arpl
push
sbb
adc
fisubr
retf
mov
push
jge
in
loope
lahf
test
fwait
movs
imul
dec
mov
mov
add
jmp
mov
gs
adc
hlt
loope
xchg
aam
retf
popw
movs
xor
sub
sub
leave
inc
xchg
mov
sub
push
mov
and
outs
sub
add
or
pusha
jle
sbb
dec
addr16
mov
pop
push
loope
out
icebp
faddp
mov
jecxz
sub
ret
inc
push
cmps
ds
dec
jecxz
ins
lahf
out
in
pushf
sahf
and
lock
push
mov
imul
repz
add
nop
stc
pop
stc
aam
dec
sub
push
ds
mov
add
and
push
dec
pushf
sub
xchg
test
sbb
fidivr
sahf
das
jle
das
enter
xchg
int3
xchg
dec
call
mov
jg
into
lea
or
pusha
mov
in
dec
dec
push
ja
(bad)
sub
inc
fldenv
jb
pop
lahf
(bad)
hlt
sbb
jo
ins
out
pop
les
mov
or
call
mov
dec
out
inc
je
xor
mov
les
xchg
jmp
scas
mov
mov
enter
and
add
call
out
jg
jns
add
add
aad
in
mov
(bad)
pop
xor
or
cmp
adc
lahf
jmp
ror
mov
add
aas
stos
sti
mov
inc
sbb
ins
and
stos
scas
xlat
sub
aaa
movs
stos
xor
and
and
and
sbb
pop
retf
aas
hlt
add
movs
cli
push
jl
adc
jnp
repz
push
data16
mov
and
sbb
adc
ins
ret
inc
sub
popa
ret
div
shl
lds
add
mov
pop
xor
js
pop
xchg
push
call
pop
jge
jbe
push
pop
das
sbb
mov
mov
inc
xchg
hlt
out
es
int
clc
hlt
leave
xor
dec
xchg
leave
retf
fdivr
imul
cmp
inc
out
mov
jno
test
rol
adc
mov
icebp
je
pop
retf
(bad)
outs
cmp
xor
test
out
out
push
cmps
mov
pop
jle
and
or
stos
mov
and
cld
xor
push
leave
shl
daa
pop
push
stos
xor
pop
fimul
repz
jmp
lahf
cmp
repnz
sbb
test
pop
in
mov
xor
scas
push
jle
push
imul
div
sbb
pop
mov
loopne
jns
sub
(bad)
pop
push
inc
sub
lock
ins
stos
push
pop
pop
dec
test
mov
out
cli
rol
pusha
mov
sub
outs
movs
aaa
lea
cmps
out
loopne
cmp
jmp
cmp
or
jl
das
xor
enter
push
ret
cmp
cmps
lea
sbb
fldcw
jno
cdq
add
sub
popf
adc
mov
into
scas
call
call
mov
ja
test
addr16
loop
addr16
stos
xor
dec
(bad)
push
cmp
stos
xlat
test
cld
jle
retf
(bad)
xchg
and
pop
sbb
mov
xlat
scas
mov
out
shl
(bad)
jmp
dec
imul
ror
pop
mov
xor
pop
(bad)
and
push
inc
movs
imul
push
repz
cmp
test
push
out
shr
add
push
repz
and
repz
retf
pop
(bad)
aas
inc
xchg
mov
push
xor
xchg
cmp
data16
aaa
jg
mov
int
cmp
mov
push
push
adc
adc
add
and
mov
fidivr
or
mov
adc
sub
sub
add
mov
sbb
loopne
xchg
inc
and
jno
fcom
fisubr
fmul
add
ja
out
mov
lods
mov
sub
(bad)
jmp
rcl
sub
dec
retf
push
xchg
jns
cmp
and
mov
xchg
jb
cmp
fld
repnz
mov
cmp
push
rol
daa
repnz
and
ror
ret
rcl
popf
xor
jno
cmp
mov
jne
and
mov
stos
inc
leave
or
pop
or
loope
out
mov
push
movs
adc
xchg
js
or
retf
adc
pop
or
xchg
push
push
sub
lods
push
sub
jp
pop
sub
es
ss
les
jmp
(bad)
ficom
stos
dec
mov
mov
call
mov
stos
cld
mov
mov
ja
xlat
inc
mov
cs
sub
adc
inc
sbb
jg
xchg
jp
ins
push
addr16
or
call
push
sub
jp
stos
xlat
ins
nop
lds
add
hlt
xchg
in
inc
adc
adc
xchg
dec
pop
pop
or
mov
call
(bad)
fcomip
jmp
clc
sub
lods
shl
imul
fimul
dec
dec
mov
fst
adc
ds
xor
clc
inc
xchg
scas
inc
mov
pusha
mov
popf
ds
gs
pusha
mov
in
xchg
popf
mov
in
(bad)
cmps
data16
and
adc
cmps
test
repnz
pop
pop
jno
cmc
pop
mov
jg
jmp
gs
pop
xchg
in
je
ins
jle
mov
aam
add
out
enter
mov
add
bound
jge
jg
push
adc
push
push
in
push
adc
sub
stos
shl
outs
aaa
sbb
out
jge
inc
and
mov
sbb
pop
sub
cmp
inc
mov
add
mov
sbb
lods
sbb
pop
or
inc
clc
or
xacquire
sbb
movs
xchg
fs
mov
in
inc
mov
push
clc
sbb
cmp
sub
cmp
cmp
lock
sbb
jae
cmp
ins
out
push
cmp
repnz
push
int
xchg
inc
int3
hlt
scas
out
jmp
or
into
aas
int3
shl
test
xchg
dec
rcl
and
gs
fwait
outs
inc
jns
test
push
dec
sahf
cmps
inc
push
(bad)
aad
push
sub
or
push
and
pop
inc
push
jmp
lea
sub
cwde
shl
inc
clc
dec
popa
cwde
sub
clc
stc
enter
push
aaa
dec
adc
mov
fdivr
mov
outs
xchg
pop
mov
call
mov
lss
xchg
cmps
ja
mov
mov
inc
fdiv
popf
push
leave
jmp
inc
xor
adc
int
mov
neg
sub
add
call
fistp
test
(bad)
cmp
dec
mov
xor
imul
icebp
scas
sbb
mov
(bad)
ins
iret
push
mov
sub
repnz
mov
jp
push
ss
shr
js
shl
and
addr16
and
and
stos
(bad)
loop
inc
pop
hlt
or
inc
or
gs
jp
movs
pop
jmp
jcxz
dec
sahf
sub
dec
(bad)
push
stos
xor
push
lock
je
shr
or
xor
out
xor
mov
sbb
push
jnp
out
cmps
cmps
adc
mov
sbb
mov
not
repz
mov
rol
mov
daa
inc
outs
rcr
sub
test
retf
sbb
xchg
push
enter
les
lea
jge
bound
mov
pop
adc
dec
dec
and
repz
jo
lahf
dec
add
or
cmp
stos
loopne
mov
xchg
xor
cwde
and
cld
dec
test
xchg
call
lods
sbb
sbb
xor
cmp
fmul
mov
scas
cmp
mov
xchg
xor
mov
dec
lods
push
sbb
dec
xchg
mov
jmp
pop
dec
loop
xchg
xchg
mov
add
sti
sbb
cmp
sub
out
mov
mov
cmp
jae
xor
repz
jp
jmp
imul
mov
fsub
call
aaa
in
imul
push
fcmovu
xor
nop
ficom
mov
dec
and
push
lods
out
sete
rcr
inc
shl
sbb
rcr
sub
and
cmp
rcr
pop
pop
sti
cmps
popf
xchg
xchg
scas
or
sbb
inc
xchg
test
retf
popf
cmp
test
push
out
cmp
cmp
jb
sahf
sbb
std
add
add
div
ret
mov
int3
fmul
imul
cmp
outs
out
ins
xchg
ret
ins
(bad)
mov
test
mov
jmp
adc
mov
pop
ret
sub
pop
mov
cmps
ss
push
repnz
pop
pop
call
mov
mov
test
stc
mov
dec
xchg
cmp
or
call
add
push
inc
sbb
iret
adc
addr16
sbb
pop
xchg
pop
mov
bound
mov
jle
and
push
test
sbb
mov
neg
fisub
xchg
rol
(bad)
rcl
pop
sub
lock
jmp
(bad)
ficomp
push
cmps
sub
gs
pop
lock
xlat
loop
adc
inc
addr16
xor
dec
jmp
adc
retf
cmp
out
or
mov
bound
jg
mov
add
xor
dec
mov
es
fisttp
mov
mov
xor
arpl
push
inc
test
jmp
sahf
or
mov
dec
xchg
ja
cmp
sbb
mov
ror
pop
les
mov
pop
test
cmps
les
jo
add
rol
jns
push
inc
pop
leave
arpl
pop
add
push
adc
add
and
mov
bound
imul
mov
push
dec
daa
dec
pop
xchg
cwde
daa
movs
std
mov
rcr
out
adc
in
shr
or
sbb
sub
in
test
sub
pop
mov
push
cdq
cmp
sahf
push
mov
xor
mov
adc
nop
push
mov
jl
ins
pop
inc
jno
sbb
mov
mov
adc
sub
xchg
push
call
cdq
xor
jnp
out
mov
mov
popa
int
or
or
inc
and
(bad)
push
lahf
dec
shl
mov
retf
(bad)
ds
shl
es
pop
mov
lahf
jg
enter
xchg
(bad)
fdiv
dec
jns
pop
mov
nop
and
daa
pop
cmp
es
inc
int3
pop
(bad)
je
xchg
push
je
add
stos
jbe
mov
mov
shr
inc
mov
cdq
mov
push
mov
mov
loope
sbb
out
xchg
xchg
sub
sub
add
aaa
gs
xor
je
cmp
mov
fwait
mov
jbe
push
or
add
into
fmul
fidiv
call
push
fst
movs
add
or
fiadd
push
lock
out
xor
jmp
movs
jnp
and
fist
jl
sti
sbb
and
scas
shr
mov
fs
or
rcr
mov
or
add
mov
mov
jl
cmp
int
cmp
stc
pop
mov
push
inc
out
add
movs
je
push
aam
movs
fist
dec
pop
imul
aam
pop
or
loopne
jecxz
inc
out
dec
fild
jb
xchg
jnp
pop
sub
mov
sbb
enter
(bad)
(bad)
mov
fcmove
(bad)
mov
push
leave
les
shr
out
lahf
pop
adc
pop
or
add
loopne
outs
push
pop
mov
icebp
shr
out
mov
repnz
xor
xor
push
inc
fsubr
addr16
je
mov
ins
mov
sbb
mov
nop
bound
popf
xor
xchg
jns
mov
es
hlt
or
std
inc
xor
sub
out
pop
mov
mov
mov
inc
cld
imul
cwde
ret
ss
push
fist
pop
repz
jecxz
icebp
popa
fs
pop
cmp
xchg
xor
mov
into
or
adc
inc
jge
jno
mov
push
mov
adc
add
mov
xchg
xor
adc
push
mov
mov
sub
jg
aam
cmp
xor
mov
mov
pop
mov
xor
lods
inc
pop
push
or
pop
(bad)
fcom
(bad)
into
jle
sti
into
ds
sbb
lea
aam
mov
xor
sub
adc
mov
or
fcom
sub
fisubr
rcr
rcl
test
dec
push
shl
pop
adc
inc
pop
hlt
arpl
in
cli
xor
xchg
in
mov
pusha
sub
mov
(bad)
pminub
mov
or
sub
aam
xchg
dec
add
jb
leave
and
imul
jae
(bad)
mov
sar
cmp
xor
cs
(bad)
and
push
iret
adc
shl
sbb
jno
lahf
xor
ss
cld
es
sub
sub
and
pusha
outs
fcmovnb
dec
push
ret
xchg
push
retf
jne
pop
xchg
dec
les
sub
icebp
jno
loop
and
or
dec
mov
daa
pop
(bad)
mov
in
sti
or
push
in
aaa
adc
or
pop
data16
mov
xor
cmp
mov
pop
std
lods
push
sbb
pop
mov
fwait
cmps
daa
xor
sbb
inc
int3
sub
(bad)
adc
push
jno
xchg
std
xchg
cli
mov
in
pop
mov
and
and
cdq
sub
ret
outs
lods
sub
mov
xchg
movs
stc
nop
ins
stos
dec
movs
(bad)
push
mov
jmp
int3
xor
inc
aam
cwde
xchg
push
adc
rol
jne
repz
add
arpl
adc
fs
jmp
jl
popf
sbb
retf
iret
sbb
in
sub
xchg
ins
adc
dec
mov
xchg
popf
xchg
inc
push
mov
xchg
in
ficomp
jae
inc
mov
aam
cmp
add
(bad)
fdivr
xchg
jp
xor
movs
icebp
or
vmovntdq
ror
push
cwde
pop
repz
and
jmp
inc
imul
dec
ret
adc
mov
jecxz
inc
mov
add
les
dec
dec
arpl
mov
(bad)
jecxz
mov
mov
call
and
out
sub
test
sbb
outs
push
jno
rcl
mov
movs
inc
repnz
mov
mov
aaa
sahf
cmp
test
test
push
shr
push
dec
mov
xchg
cs
aad
mov
lahf
adc
mov
data16
jmp
mov
push
push
mov
xor
out
rcr
dec
inc
rcl
jnp
and
ret
mov
cmc
jbe
jne
dec
dec
jmp
mov
scas
push
cmp
out
push
(bad)
lahf
outs
(bad)
cmp
xor
repz
mov
ror
imul
pushf
jb
(bad)
push
jns
call
mov
das
xor
and
pop
mov
push
add
dec
adc
jmp
out
scas
mov
xchg
mov
gs
fwait
sbb
arpl
mov
int3
xor
mov
adc
test
fadd
retf
ins
adc
add
mov
std
scas
push
xor
adc
mov
add
aas
sbb
ror
jnp
shl
and
add
mov
xor
js
inc
mov
xchg
stos
cmp
mov
repz
inc
xor
push
and
out
aaa
mov
inc
pop
mov
push
sar
pop
jp
mov
jmp
cmp
fistp
sub
icebp
add
sbb
adc
add
or
arpl
cmps
fs
ja
jae
mov
sbb
inc
in
mov
or
mov
mov
mov
and
sub
into
dec
mov
inc
lds
dec
adc
je
sbb
add
mov
cmps
cs
mov
mov
and
lea
push
addr16
and
lock
or
lods
movs
xchg
sbb
push
mov
push
adc
fisttp
jmp
fisttp
jnp
fnstcw
sub
adc
ret
hlt
stos
sti
dec
inc
mov
out
jge
and
int
add
sti
push
sub
cdq
xchg
xchg
cmp
ret
call
sahf
sbb
fst
pop
jecxz
(bad)
xchg
jl
call
pop
or
out
arpl
cmps
daa
xor
cld
xchg
fcom
ret
jl
repz
jo
pop
jle
(bad)
add
xchg
mov
div
test
scas
adc
add
jmp
fisub
or
mov
stc
xor
stos
movs
inc
movs
cmc
out
stc
(bad)
mov
out
(bad)
outs
mov
add
lock
add
xor
pop
inc
push
ja
(bad)
loop
cmps
jle
clc
push
ret
inc
aas
xor
jp
mov
cli
pop
loop
ja
jbe
push
mov
mov
cmp
daa
nop
lds
pop
aam
xchg
mov
retf
sbb
out
sub
dec
add
jmp
add
add
scas
push
mov
and
cs
stos
xor
das
push
in
(bad)
xor
and
mov
jnp
(bad)
je
inc
aaa
jno
add
mov
adc
and
and
dec
cmp
cmp
and
pop
fbstp
xlat
dec
sub
mov
pop
loopne
mov
mov
arpl
pop
loop
mov
pop
and
shr
add
mov
dec
mov
loopne
fdiv
push
pop
push
cmp
les
lds
addr16
fiadd
js
mov
jecxz
jge
data16
adc
es
fidiv
mov
mov
fcomp
sbb
dec
in
imul
add
out
inc
cdq
inc
push
sub
loope
push
ret
jmp
fcom
mov
sub
jbe
inc
mov
test
loope
call
pop
repz
jo
cmp
outs
xor
inc
scas
sbb
imul
inc
pop
aam
xchg
xchg
xor
pop
push
mov
cmp
es
retf
jae
sub
lds
jae
xor
add
fst
(bad)
push
sbb
jmp
je
and
dec
test
cdq
lods
fst
fsub
aad
lods
lds
xchg
adc
aaa
enter
pop
xor
int
mov
xor
inc
and
adc
int3
sbb
ins
push
jecxz
mov
jp
fnstenv
xchg
cmp
dec
and
mov
repnz
mov
push
push
or
(bad)
pop
cmc
pusha
mov
cld
jne
sub
mov
inc
aas
shl
cmp
pop
push
and
fwait
repnz
repz
gs
mov
cmp
push
adc
mov
and
jne
call
clc
cmps
jbe
sub
shl
mov
sar
mov
mov
cli
test
jb
push
outs
cmp
adc
or
cdq
dec
aas
fwait
cmps
push
jg
fwait
sahf
jg
lahf
scas
shl
stos
inc
lea
test
jg
xor
or
inc
adc
out
enter
mov
bound
movs
inc
test
out
xor
ficom
sub
fdivrp
xor
(bad)
jne
or
sahf
jne
lds
add
sbb
cwde
daa
lods
cmc
sti
lea
pop
je
hlt
(bad)
(bad)
pop
fidivr
sti
jno
mov
outs
pop
jne
adc
js
cmp
sahf
jnp
xchg
call
or
push
pushf
jp
push
jl
inc
out
mov
and
pop
fs
sti
jno
clc
jmp
shl
into
fldcw
js
pop
pop
cmp
test
mov
dec
nop
add
mov
out
dec
mov
std
das
mov
retf
fisttp
xor
ret
mov
into
mov
xchg
and
popf
push
jecxz
dec
cmp
test
push
test
mov
cmp
mov
aaa
mov
dec
pop
mov
outs
sub
and
std
push
lahf
xchg
loopne
pushf
mov
push
jnp
loope
adc
cmp
loopne
and
xlat
dec
xor
clc
dec
out
jcxz
add
and
push
cmp
adc
lahf
push
addr16
arpl
popf
and
js
out
xchg
jns
scas
loope
ret
sbb
jb
fstp
cli
add
jo
fbstp
jno
ds
and
sti
jns
popf
js
into
ret
or
leave
add
dec
out
je
cli
cmps
das
push
lahf
jne
sbb
lahf
add
and
and
ins
mov
jns
mov
mov
int3
adc
int
in
sbb
xlat
(bad)
mov
(bad)
and
fild
cmp
call
ss
jmp
fsubr
add
push
pop
pop
test
ss
into
xchg
cwde
lahf
push
xchg
mov
add
mov
sub
dec
and
movs
idiv
dec
push
xchg
cmc
or
sub
popa
pop
mov
dec
sti
push
push
cmovs
jbe
rcr
ja
inc
test
in
in
(bad)
push
retf
cld
cmp
shl
add
icebp
out
cmp
arpl
and
(bad)
daa
retf
and
adc
into
scas
push
or
(bad)
push
in
ss
cmps
jne
jp
push
dec
mov
jne
xor
sbb
mov
or
xchg
lds
add
test
and
jmp
sbb
aaa
sbb
sahf
(bad)
mov
mov
dec
js
std
gs
scas
rcl
call
shl
out
mov
pop
jl
aas
mov
cmp
or
call
ds
push
pop
ret
mov
lahf
stc
fsubr
in
jge
data16
sahf
jae
mov
cdq
mov
mov
mov
xor
pop
or
xchg
(bad)
or
sbb
clc
pushf
shl
cdq
lods
push
in
pop
sbb
out
xchg
push
ret
out
pop
loop
or
nop
or
stos
pop
fwait
pop
ds
mov
ret
dec
jb
add
ret
jnp
out
loope
adc
mov
pop
push
iret
fdivr
out
xchg
fcom
sbb
cmp
or
inc
arpl
sti
mov
adc
aaa
icebp
sub
loop
daa
sbb
pop
call
and
mul
lahf
or
scas
imul
loope
sub
push
xor
lock
sub
push
push
pop
int
jns
pop
stos
outs
(bad)
lock
pop
mov
lods
pop
jmp
int
push
adc
push
xor
fcom
lea
dec
rol
and
fnstenv
test
popa
adc
xchg
or
add
popf
push
or
mov
test
cld
aam
ss
test
and
mov
inc
sub
cmps
xor
rcl
cwde
sub
arpl
adc
pop
sbb
arpl
popf
rcr
int
out
pop
call
ja
mov
sub
(bad)
push
mov
adc
loope
xlat
in
push
cld
jg
in
ins
or
iret
test
push
out
xor
in
scas
and
shr
das
vpshad
xlat
jb
rcl
dec
outs
out
xchg
or
sub
into
call
aaa
sar
cdq
cmp
addr16
adc
into
push
leave
pop
mov
xlat
jns
jmp
dec
sub
dec
or
hlt
jo
or
repnz
div
or
push
jns
sub
xchg
jno
fadd
jo
std
fisub
rcl
adc
lods
into
push
add
inc
push
out
inc
sahf
(bad)
mov
mov
dec
(bad)
sahf
xchg
call
mov
mov
gs
sub
xchg
xchg
xchg
(bad)
pop
pusha
dec
and
add
push
data16
adc
pop
mov
pop
out
out
int
rcl
cmp
adc
sub
sbb
stc
fwait
pop
loop
xor
fdivr
xchg
jne
vstmxcsr
cmp
and
jne
mov
jl
push
cmps
mov
idiv
mov
hlt
out
push
and
fsubrp
jecxz
xchg
daa
lds
adc
cdq
inc
rcr
imul
mov
out
test
int
mov
jns
fnstsw
adc
jo
out
jns
dec
cmps
ret
leave
jmp
push
inc
jbe
dec
std
sub
lods
xlat
test
inc
outs
push
(bad)
lock
inc
ins
cmc
push
setge
mov
or
mov
pop
inc
and
mov
push
pushf
pop
ja
sub
iret
loope
int3
comiss
and
lahf
sub
adc
mov
xor
pop
xchg
lock
sbb
imul
popa
gs
or
add
popf
hlt
fsubr
mov
xchg
xchg
dec
inc
mov
pop
fadd
or
and
movs
jmp
mov
push
sub
retf
sbb
adc
pop
retf
imul
inc
cmovbe
ja
gs
inc
add
inc
jmp
cmp
inc
mov
loopne
lea
fnstsw
retf
jge
pop
fidivr
mul
jbe
shl
push
hlt
jecxz
fs
inc
push
aas
xor
sub
push
sti
ss
jmp
jle
fmul
lods
sahf
jg
(bad)
xchg
xchg
sbb
xchg
or
push
pop
nop
jg
sbb
and
arpl
jmp
in
pop
je
cmps
loope
and
ins
cmp
cmps
jl
(bad)
xchg
push
cwde
add
add
sub
mov
xchg
or
add
add
aam
dec
dec
(bad)
mov
cdq
imul
adc
test
mov
ja
push
pusha
data16
bound
cmps
cli
data16
adc
ins
and
call
inc
inc
pop
out
fist
out
leave
or
es
jge
jbe
fsubr
les
adc
cmps
bound
jae
pop
mov
adc
cli
icebp
retf
imul
xchg
xor
mov
mov
xchg
outs
or
jns
adc
mov
mov
dec
mov
sub
adc
cmps
fsincos
cmp
xchg
push
xor
das
add
cmps
or
int
xlat
ins
mov
add
test
sub
push
jmp
movs
xchg
or
(bad)
and
pop
push
fs
mov
pop
xor
stos
xlat
xchg
push
xchg
inc
push
inc
out
xor
stc
sub
inc
pop
adc
mov
push
dec
(bad)
pop
iret
xor
retf
adc
jo
cmp
loopne
hlt
and
clc
xor
fptan
(bad)
loope
sub
jmp
jns
and
adc
xchg
aas
mov
inc
mov
mov
js
out
sub
loopne
mov
dec
adc
adc
pop
push
(bad)
int3
pushf
sub
cdq
enter
lods
mov
and
cmp
mov
and
test
cmp
adc
jecxz
jmp
sahf
xchg
jbe
pop
rcr
pop
sbb
daa
(bad)
fstp
mov
jp
lea
mov
movs
in
mov
cmp
or
bound
jb
loopne
or
pop
mov
dec
jb
data16
outs
sub
mov
adc
xchg
sub
and
push
test
cdq
inc
cmp
jg
or
xor
dec
rol
les
mov
xor
pop
fiadd
push
cmps
cmp
pusha
inc
xchg
fidiv
loop
sub
leave
add
cs
outs
add
mov
arpl
add
xchg
mov
call
sbb
pop
jp
cmp
mov
out
push
iret
frstor
and
inc
cmc
adc
int
jmp
das
lea
je
repz
clc
add
mov
push
sar
mov
adc
cmp
rol
dec
in
sub
loop
adc
or
or
xchg
lods
ret
scas
mov
adc
adc
stos
addr16
and
or
jecxz
mov
(bad)
mov
std
xchg
lahf
retf
es
dec
std
je
movs
and
add
pop
xchg
aas
lahf
(bad)
ds
cmps
fst
je
adc
jmp
pusha
sbb
(bad)
pushf
ja
scas
sub
je
mov
test
rcr
and
neg
fwait
push
scas
shr
out
jg
daa
ret
jnp
rcl
or
mov
mov
push
xor
mov
xchg
scas
push
retf
fistp
fiadd
icebp
or
mov
jmp
pop
mov
fs
mov
mov
ja
fnsave
mov
jno
inc
adc
int3
xchg
dec
and
dec
pop
cdq
pop
jecxz
mov
push
addr16
mov
mov
imul
mov
mov
cmps
bound
lods
cmp
mov
sbb
les
sub
scas
mov
mov
xor
pop
xchg
dec
stos
dec
jb
jmp
add
xchg
sbb
pop
cmc
aas
jb
bound
push
test
cmp
out
push
aas
cs
(bad)
sahf
dec
or
in
sub
enter
cmp
loop
and
ror
cmp
xor
push
test
pop
call
rol
pop
test
or
out
jmp
jecxz
shl
das
push
pop
ds
xchg
movs
xor
hlt
pop
movs
cdq
inc
adc
xor
stos
xor
or
add
xchg
mov
les
mov
sub
jbe
dec
iret
sbb
push
inc
mov
(bad)
sbb
std
and
xor
sbb
push
sbb
js
std
mov
fwait
shl
repz
enter
sbb
cmps
sbb
aad
mov
sub
loopne
ins
mov
out
jmp
pop
out
dec
test
mov
cmps
jl
xor
popf
addr16
push
push
out
je
sub
(bad)
fs
test
pop
mov
add
repz
push
je
mov
stos
iret
retf
and
mov
aaa
and
cs
les
sbb
xchg
fst
xchg
sbb
cmps
sahf
shl
repz
sbb
mov
fsubr
jo
cld
pop
jmp
in
add
fistp
jae
test
mov
push
aad
inc
(bad)
xchg
add
add
(bad)
clc
add
cmc
mov
dec
jne
rol
dec
out
pop
add
dec
mov
repz
cmc
add
mov
or
call
jns
and
ret
mov
jmp
stos
xor
outs
pop
sub
addr16
sbb
scas
mov
popa
and
popa
mov
add
enter
sub
sahf
jge
nop
out
mov
outs
mov
inc
cmp
arpl
in
data16
fisttp
retf
scas
dec
ret
stos
sub
and
jle
add
pop
cmp
or
imul
adc
hlt
scas
xor
inc
(bad)
scas
jg
xor
and
jge
mov
or
loopne
inc
imul
aas
jb
call
jno
int3
cmp
cmp
call
mov
popf
pop
repnz
pop
out
sbb
push
and
mov
cmp
shr
xlat
fadd
mov
ror
xchg
std
jge
aad
jo
cmps
jmp
lods
fisubr
inc
push
mov
ss
or
push
out
jmp
sbb
dec
or
daa
int3
push
fcmovnbe
pop
push
cmp
or
dec
or
fst
cdq
xchg
pop
repz
pushf
popf
movs
dec
mov
push
scas
loopne
and
xchg
sub
lods
lds
fst
mov
push
add
jne
jg
(bad)
popa
xlat
(bad)
je
jecxz
mov
cld
out
jp
es
push
jns
pop
(bad)
and
cmp
mov
cs
int
adc
sub
jge
das
mov
ja
push
sbb
or
jge
push
mov
icebp
das
cli
popf
push
pop
inc
imul
add
xchg
loope
js
or
xchg
test
pop
jmp
je
sbb
ret
in
ss
int
xchg
das
fwait
and
cmp
movs
es
aas
mov
out
sub
imul
cs
scas
test
xor
paddw
addr16
xchg
ret
mov
clc
mov
in
push
inc
xchg
xor
dec
mov
imul
pop
add
push
mov
pusha
or
xchg
lahf
inc
out
addr16
loope
stos
jle
movs
fwait
aas
or
aas
and
inc
cmp
outs
xor
shr
xor
repz
cwde
(bad)
sbb
imul
cmp
retf
lahf
xchg
outs
cmp
dec
cli
xchg
sbb
dec
adc
icebp
cmp
out
sub
stc
xchg
xchg
inc
popf
mov
push
xor
loope
dec
inc
mov
xchg
push
test
aas
mov
ret
dec
cmp
cmps
mov
out
(bad)
iret
in
sub
mov
or
mov
or
out
out
fimul
hlt
inc
scas
stos
stos
sub
dec
arpl
push
mov
xchg
pop
icebp
test
movs
addr16
pop
xchg
or
lods
das
mov
xchg
loope
dec
cmp
xor
iret
jne
jo
pushf
mov
push
ins
ds
and
fimul
dec
mov
fcmove
or
adc
mov
mov
or
pop
stos
xchg
and
push
jmp
cli
mov
es
xor
enter
aaa
pushf
das
dec
mov
shr
cmp
addr16
push
dec
xor
pop
cmp
inc
pop
xchg
jge
xor
(bad)
adc
shl
add
dec
shr
imul
pusha
stos
mov
int3
push
dec
out
out
cs
mov
jg
(bad)
jmp
push
xchg
jns
sti
scas
adc
ud2
into
fldcw
and
adc
fbstp
push
dec
adc
dec
in
dec
mov
fisub
rol
push
pop
cmp
mov
fwait
cld
and
or
(bad)
ror
mov
cmp
mov
arpl
je
xor
xchg
push
mov
retf
mov
sahf
pop
jns
into
repz
push
jge
dec
enter
bnd
pop
cld
int
in
and
mov
lds
out
mov
push
lods
scas
clc
and
mov
cmps
ins
mov
jecxz
pop
dec
pop
inc
ficomp
(bad)
leave
shl
mov
stos
cmp
or
test
mov
or
add
lahf
fwait
adc
sub
jl
(bad)
pusha
nop
cmp
push
and
or
mov
push
cmc
es
xchg
mov
adc
call
mov
pusha
pushf
ss
rcr
cmp
sub
push
pop
lahf
ret
mov
xlat
test
or
sub
push
dec
scas
test
test
cmp
jl
fsubr
or
in
push
push
xchg
bound
(bad)
in
or
jmp
xchg
add
test
push
fadd
push
imul
dec
mov
mov
lods
scas
jg
xchg
fmul
clc
push
pop
push
std
xor
jo
cmp
jge
popa
ret
pop
inc
popf
lods
jecxz
or
or
add
popa
jbe
jae
int3
mov
cmp
lahf
or
leave
push
mov
jmp
pop
cmp
push
sub
add
scas
cmps
retf
out
push
mov
fs
ret
jns
or
fwait
fwait
mov
xor
sbb
xor
inc
and
dec
in
adc
jne
ret
ret
xor
cmp
je
rol
mov
push
es
cmpeqps
in
cmp
cmp
bt
inc
test
mov
dec
cld
xchg
int
cmp
dec
cwde
add
mov
shld
pop
jne
in
sbb
in
add
js
add
retf
push
jp
xor
or
add
popf
cmp
fwait
das
scas
mov
loopne
dec
mov
int3
inc
xchg
je
jae
adc
in
adc
add
pop
cwde
sub
add
pop
fwait
xchg
mov
mov
aaa
pop
fnstcw
lahf
movs
xor
adc
inc
jbe
sub
sub
xor
in
xchg
inc
xor
lods
pop
xor
jmp
sub
or
or
and
in
mov
jmp
lods
icebp
push
xchg
(bad)
sub
or
mov
sub
xor
(bad)
push
jnp
inc
call
jg
dec
je
sub
leave
popf
call
int
stos
inc
dec
mov
pop
xor
data16
out
inc
and
pop
push
in
xor
les
cdq
cmp
pusha
or
call
inc
mov
aas
bound
cld
or
lahf
imul
mov
data16
sti
icebp
add
rcr
push
fisttp
and
xor
xchg
cmps
xor
cmp
add
push
ins
loop
das
imul
jmp
sti
aam
pop
lock
outs
int3
repz
inc
adc
mul
mov
xor
pop
lahf
call
(bad)
xor
mov
ret
xor
sbb
mov
adc
out
je
pop
out
(bad)
lahf
fld
ss
fild
sbb
test
rol
rcl
shl
push
aam
push
aad
lea
stos
btr
mov
std
ss
dec
das
xchg
into
mov
dec
dec
nop
mov
xor
loop
push
fucomip
or
bound
fist
mov
in
or
sbb
add
sub
js
(bad)
adc
movs
dec
in
sub
in
pushf
mov
sub
pop
and
aaa
push
push
scas
xchg
or
sti
gs
jl
and
ds
mov
pop
push
scas
rol
and
sub
adc
xor
dec
or
xor
int3
inc
fisubr
popf
(bad)
mov
sbb
outs
test
lds
das
and
retf
neg
in
test
jmp
xchg
dec
cwde
(bad)
retf
jbe
sbb
push
test
fisubr
cdq
pusha
add
push
push
cdq
aad
pop
bound
dec
psrld
mov
xchg
sti
jg
mov
scas
pop
inc
inc
into
pop
mov
inc
movs
push
mov
loopne
add
mov
pop
jnp
push
pop
das
xchg
jle
jmp
sti
js
jbe
xchg
xor
(bad)
fs
inc
icebp
xchg
sbb
out
out
sub
adc
ficom
shl
cwde
call
js
cmps
or
lea
mov
jg
push
jle
fldenv
jl
or
loope
add
popf
jnp
loopne
sbb
les
call
pop
dec
in
pop
inc
(bad)
(bad)
push
not
aam
jno
mov
push
rcl
call
(bad)
fs
into
sub
pop
jb
ds
jmp
outs
push
lea
push
loop
xor
clc
jge
cld
mov
popf
cmp
xor
adc
push
jo
mov
add
in
or
mov
mov
inc
retf
cmps
push
mov
mov
mov
out
dec
or
mov
repz
adc
and
jge
aas
call
inc
inc
cld
repnz
dec
mov
std
adc
sbb
cmps
lea
leave
push
xchg
sbb
add
adc
mov
xor
scas
loop
aaa
imul
jno
(bad)
sub
imul
push
stos
rol
or
dec
or
adc
mov
add
jns
stos
sbb
jae
cmps
in
mov
pusha
popa
out
inc
xor
dec
ror
fwait
iret
fsub
in
stc
xchg
pop
je
out
sbb
fmulp
cmc
jmp
jb
in
out
dec
push
xchg
mov
jo
and
into
cmp
jmp
aaa
ds
lds
inc
mov
scas
or
test
shr
jle
call
aas
rol
cmp
push
(bad)
fwait
or
rol
or
push
jns
test
ins
dec
xor
jmp
gs
inc
mov
ret
or
les
adc
je
pop
jb
jnp
xchg
aas
shl
lea
dec
sbb
js
mov
pop
add
sub
add
(bad)
sub
aad
xor
sti
in
pop
lock
pusha
add
cmc
inc
push
jnp
lock
cld
lahf
mov
lds
(bad)
cwde
adc
adc
mov
bound
rcl
aam
jne
cmp
mov
jno
pop
push
not
mov
enter
mov
xor
ret
xor
mov
xchg
inc
push
cmps
sub
add
call
out
mov
jmp
pop
push
nop
xchg
jg
sbb
mov
or
in
jb
sub
movhlps
test
mov
cmp
ins
mov
dec
repz
xor
mov
jne
add
cli
fwait
bound
fisubr
data16
sbb
sub
and
dec
sar
ror
std
jp
sub
mov
mov
or
sbb
scas
scas
dec
test
arpl
ins
(bad)
(bad)
test
cld
into
sbb
lods
lods
mov
mov
movs
shl
js
mov
mov
mov
xchg
dec
pop
dec
jmp
fwait
clc
shl
leave
jg
loop
test
mov
daa
scas
push
addr16
mov
inc
xlat
repnz
out
dec
(bad)
jg
mov
out
loopne
xchg
sbb
mov
retf
rol
and
sub
xor
and
inc
or
test
ficom
mov
loopne
dec
icebp
mov
mov
sbb
repz
ret
pop
loope
inc
sub
leave
test
fisub
sahf
fnstenv
xor
stos
inc
push
xchg
stos
loope
jbe
ret
inc
cwde
xchg
adc
jmp
lods
pushf
clc
popa
add
out
xlat
out
add
cmp
mov
into
clc
mov
sbb
repnz
sbb
push
cli
fsubr
dec
sub
dec
popf
inc
aaa
cld
pushf
nop
stc
rol
sub
sub
or
adc
fld1
lods
fwait
(bad)
mov
jo
test
adc
lods
(bad)
fdiv
xchg
shl
lods
ror
push
pop
cmp
fwait
pop
pushf
(bad)
mov
out
mov
jo
retf
push
les
mov
sub
fwait
retf
fstp
fsubr
ja
adc
sbb
or
dec
mov
jmp
retf
sti
push
repz
push
xor
lock
mov
scas
mov
cmp
push
test
add
(bad)
or
cwde
div
fs
push
mov
jmp
push
fistp
xor
dec
fmul
jns
jo
fs
in
adc
lods
jmp
sbb
repnz
mov
add
xor
fs
mov
cmp
js
hlt
mov
inc
in
pop
ds
jle
popa
popa
xchg
das
test
or
fldcw
pop
dec
pop
inc
cmp
pop
iret
mov
push
mov
call
xor
mov
or
retf
loop
aad
repnz
dec
clc
rcr
sbb
and
pop
inc
and
or
sub
aad
cmp
inc
inc
jo
push
outs
dec
mov
jno
or
or
xor
sbb
lods
jbe
push
cmp
movs
inc
or
loopne
into
pop
push
mov
shl
imul
imul
sub
test
jae
add
ins
popf
mov
adc
fsub
pop
mov
xor
dec
and
inc
sbb
sbb
inc
jno
out
dec
in
and
scas
dec
mov
iret
int
xor
arpl
mov
xor
test
jmp
aaa
(bad)
jmp
and
and
inc
inc
daa
xor
mov
push
push
jle
fmul
es
mov
push
mov
pop
xchg
pop
sub
fld
jae
cvttps2pi
adc
push
add
lea
sbb
mov
mov
cli
mov
ret
mov
nop
retf
pushf
data16
mov
ror
imul
xor
inc
es
(bad)
mov
psrlq
jbe
adc
inc
and
inc
cmp
or
jno
push
xchg
and
pop
jge
xchg
push
mov
push
ins
push
daa
jns
mov
cmc
into
jl
xchg
mov
mov
mov
mov
mov
xchg
jp
xor
jae
or
cmps
ficom
mov
xchg
xor
pop
mov
jge
push
inc
repnz
dec
push
into
into
rol
in
add
pop
and
mov
xchg
fistp
xchg
inc
ret
dec
pop
jp
and
add
popa
jp
jp
pushf
call
xchg
lods
leave
repnz
sub
std
mov
fs
lock
das
mov
mov
fdiv
rcr
mov
xchg
mov
pusha
rcl
lahf
mov
rcr
in
xchg
mov
movs
enter
sub
dec
mov
rcl
out
leave
xor
rcr
inc
sbb
sbb
sub
or
dec
das
pop
in
jnp
xor
xor
jmp
mov
pop
mov
sub
sub
xchg
cmp
cmp
mov
adc
scas
push
xchg
out
ret
dec
es
jmp
ins
je
xchg
aas
pop
xor
test
dec
xchg
js
loop
mov
test
and
cmp
mov
cs
xchg
sub
xchg
jmp
lock
sahf
je
outs
xchg
lods
arpl
dec
mov
xchg
or
adc
jne
fcom
dec
in
xchg
pop
stos
add
icebp
inc
xchg
mov
mov
inc
mov
icebp
les
pop
hlt
cdq
mov
jo
gs
out
add
push
push
push
jnp
and
inc
sbb
lods
xor
mov
and
dec
retf
mov
jmp
cmp
andnps
pop
push
ds
dec
add
adc
jmp
call
sbb
cmp
and
rsqrtps
jo
idiv
push
imul
sahf
mov
gs
jae
or
and
scas
outs
scas
rol
jecxz
and
fisttp
dec
frstor
mov
mov
mov
lods
(bad)
adc
fisub
jnp
push
ret
cmp
jo
sbb
add
sbb
aad
mov
fisttp
jmp
call
bound
push
arpl
jnp
cmp
push
pop
xchg
cwde
adc
jp
mov
shl
repnz
jnp
test
xchg
int3
rol
sahf
cmc
out
inc
push
jecxz
mov
mov
repnz
mov
sub
jle
fs
fs
pop
inc
in
js
inc
cs
dec
scas
mov
cmps
in
sub
(bad)
sbb
pop
loopne
ds
jno
inc
mov
loopne
test
jb
cmc
leave
shl
bound
hlt
jl
mov
dec
data16
je
jnp
pop
adc
sbb
xor
push
dec
arpl
cdq
div
movs
mov
sub
mov
dec
pop
add
inc
jno
xchg
inc
dec
inc
sti
scas
xchg
jp
(bad)
jmp
nop
test
movs
sbb
adc
fisub
in
hlt
push
jnp
inc
jae
out
les
out
dec
mov
mov
aas
ins
dec
std
xor
fs
retf
sbb
push
adc
pop
ss
daa
add
cmp
mov
pop
push
dec
xchg
(bad)
dec
mov
xor
add
xchg
jge
adc
inc
ror
inc
in
int
or
ret
jno
ret
ficom
int
dec
add
int
fmul
push
pusha
push
add
jnp
(bad)
jl
stos
jbe
pop
fadd
xor
inc
mov
pop
aas
dec
mov
cmp
ds
movs
and
cli
mov
retf
ret
mov
out
mov
jns
out
(bad)
fiadd
pop
mov
test
sub
enter
xchg
xchg
sti
mov
jle
test
test
jge
jmp
sbb
addr16
loop
aad
aad
aad
and
inc
inc
call
out
(bad)
dec
pop
sbb
and
lock
mov
sar
lods
lock
sbb
in
add
test
loopne
jle
jl
xchg
ret
lahf
jp
add
stos
jmp
push
adc
sub
daa
lea
jae
dec
mov
cmp
dec
lds
jo
sar
addr16
dec
dec
out
js
loope
mov
test
in
test
popa
int
fdivr
adc
push
xchg
sbb
adc
and
daa
sub
inc
inc
lock
xchg
mov
cmps
mov
faddp
inc
vcvtsd2ss
xor
movs
xor
call
retf
std
hlt
add
inc
ss
rcl
cmp
ret
xchg
cmp
sub
adc
stos
sub
add
push
xor
cli
inc
sub
(bad)
mov
and
call
(bad)
mov
fadd
cmc
retf
movs
mov
in
adc
fdivrp
enter
or
push
das
pop
dec
in
or
aad
sbb
sub
dec
icebp
and
ja
ror
jns
xor
jmp
or
mov
out
fstp
outs
data16
or
xor
stos
pusha
(bad)
mov
add
add
dec
cmc
add
loope
push
add
sbb
pop
bnd
inc
pop
pop
xchg
mov
rol
jp
xor
dec
push
into
adc
daa
cs
or
jne
xchg
lock
cmp
jecxz
sub
cmp
retf
aad
inc
mov
ret
fwait
sbb
sbb
stc
jnp
lds
mov
add
addr16
jecxz
jnp
ins
sbb
mov
or
or
fs
cmp
loope
les
pop
cvtdq2ps
mov
mov
in
int3
or
pop
xchg
xchg
(bad)
sti
mov
loopne
add
(bad)
in
in
mov
cmc
(bad)
cld
shrd
iret
mov
xor
das
mov
scas
cmp
xor
ficom
lea
(bad)
lock
jb
add
dec
jns
inc
call
(bad)
fsubr
xor
push
cmp
repnz
ja
cmps
je
pop
sahf
xchg
mov
mov
int3
pop
mov
jno
xor
arpl
xor
xor
out
lock
xchg
xchg
ss
in
mov
add
sahf
pop
dec
jbe
int3
gs
add
outs
rol
(bad)
pop
jge
mov
mov
jl
dec
cdq
loopne
mov
adc
test
and
dec
sub
sbb
jl
sti
out
push
xor
adc
jmp
out
dec
cmp
xor
das
ja
ror
rcl
sub
jbe
into
lods
dec
ja
mov
dec
add
loope
push
fcomip
mov
xchg
mov
adc
mov
cmc
jne
aas
repnz
or
push
jae
pop
aas
cli
inc
push
ds
test
pusha
in
sbb
mov
mov
mov
mov
scas
popa
neg
lock
fstp
jb
pushf
jno
push
int
jbe
mov
add
idiv
in
dec
push
jmp
mov
push
mov
mov
xchg
xchg
iret
dec
(bad)
xchg
sub
dec
pop
xor
push
js
mov
out
repnz
sub
cmps
hlt
jle
cs
cmp
mov
stos
mov
push
cmp
ret
adc
xchg
sub
mov
or
mov
lahf
push
repz
dec
(bad)
and
(bad)
cmp
pop
pop
jmp
mov
adc
(bad)
push
imul
xor
jp
xor
aaa
pop
pop
cld
xor
mov
inc
into
add
push
pop
aam
and
add
retf
dec
mov
push
mov
push
cmp
dec
fistp
or
sub
pop
xchg
xor
and
sti
popa
push
ja
ss
or
(bad)
out
cld
sbb
xchg
mov
or
imul
cmp
lods
dec
test
repz
mov
or
paddq
push
in
or
std
dec
sbb
ins
sbb
iret
ds
push
lahf
jmp
iret
jle
mov
call
adc
cmp
inc
push
aaa
mov
repz
fld
ja
inc
jnp
inc
sub
mov
fs
arpl
pop
xlat
mov
sbb
xor
cmp
clc
(bad)
adc
cs
into
hlt
jne
jno
(bad)
gs
cmp
fldl2t
jp
shl
and
repz
mov
adc
iret
sbb
push
sub
add
out
xor
dec
cmp
lods
push
popf
loopne
push
pop
add
jmp
xchg
mov
retf
dec
push
push
xor
mov
retf
fsub
mov
aam
fidiv
das
iret
clc
xchg
pop
cdq
(bad)
push
leave
test
aas
push
xor
les
or
inc
adc
int
fild
lods
sub
push
fimul
or
mov
lahf
pop
jns
dec
test
mov
inc
dec
xchg
cmp
dec
mov
jmp
and
repz
jp
leave
or
cmp
cmp
inc
outs
xor
int3
fisttp
mov
shr
add
cmp
mov
mov
push
mov
inc
icebp
adc
nop
xchg
pop
pop
in
xchg
jae
and
dec
adc
adc
inc
movs
mov
cmp
test
add
mov
pop
retf
test
aam
adc
xchg
popa
mov
icebp
mov
sub
lds
cmps
aam
cdq
xchg
leave
pand
adc
mov
mov
mov
cmp
cdq
xchg
pop
ffreep
pushf
(bad)
dec
inc
xchg
imul
or
jae
cmp
adc
dec
dec
int
stc
(bad)
xor
in
push
popf
pusha
mov
or
popf
dec
js
xor
adc
loope
mov
cmps
es
cwde
sti
loopne
adc
push
adc
lea
test
jecxz
push
dec
dec
sub
push
pop
pop
stos
sbb
mov
mov
popa
and
cmp
retf
sbb
sub
call
mov
dec
push
fdivr
jo
test
enter
mov
add
dec
and
aas
dec
mov
rcr
push
loope
jb
ds
mov
dec
pop
cli
inc
sub
mov
and
test
repz
sti
xlat
cmps
push
das
outs
lods
jl
jno
lods
ret
fstp
xchg
push
adc
out
repnz
or
sub
repnz
mov
pop
dec
xchg
mov
test
loopne
faddp
xor
inc
aam
in
sub
jge
nop
shl
mov
scas
(bad)
xchg
mov
dec
cwde
push
inc
ffreep
in
pop
push
loopne
jae
outs
dec
adc
stos
dec
xchg
inc
pushf
out
mov
mov
pop
or
jne
inc
hlt
add
cmp
xchg
or
and
xor
nop
dec
enter
or
push
xor
aam
lds
imul
data16
pop
cmp
jle
jne
jbe
jle
out
mov
inc
mov
imul
outs
mov
or
fisub
push
push
add
jg
mov
stc
pop
ss
stos
(bad)
loop
add
sub
shl
xchg
into
and
mov
and
inc
(bad)
xor
in
jg
mov
out
scas
or
mov
cmps
jmp
sbb
popa
loop
adc
sbb
dec
cmc
mov
cmp
out
sahf
shl
inc
dec
xor
out
push
stos
(bad)
jnp
aas
push
enter
ins
icebp
jle
repz
push
imul
xchg
retf
sbb
mov
stos
imul
les
addr16
sbb
cmp
cmp
add
nop
adc
cmc
test
adc
jp
fcomi
xchg
adc
outs
outs
mov
push
dec
pushf
lods
movs
test
ss
popa
push
(bad)
xor
test
aas
retf
inc
dec
call
xchg
mov
jo
leave
mov
sbb
loope
mov
retf
ret
cmp
sub
jo
add
pop
xchg
cmp
push
dec
cmp
mov
inc
into
pusha
push
mov
mov
cmp
es
jbe
aas
add
int
int
sub
jg
or
aam
lods
test
xchg
sub
cmps
into
xor
push
je
xchg
and
push
add
call
fstp
mov
fdiv
cmp
adc
xor
fmul
loope
arpl
mov
sbb
out
in
test
retf
sub
outs
stos
mov
jbe
es
dec
jo
pop
ds
ins
mul
xlat
int3
mov
aad
jns
in
dec
clc
cmp
xor
inc
in
mov
ins
retf
xchg
and
imul
add
cmps
xchg
jmp
scas
stos
out
out
cmp
or
adc
and
pop
jae
daa
lea
xchg
dec
into
push
into
and
vpand
loop
rol
or
into
pop
cld
inc
pop
je
(bad)
hlt
cs
in
nop
scas
popf
outs
out
mov
mov
enter
sbb
aaa
push
les
and
mov
cwde
jbe
cwde
cmps
ins
mov
dec
pop
int3
mov
out
add
sbb
(bad)
add
xchg
fdivr
out
clc
ffreep
mov
jge
sbb
in
mov
mov
int3
int3
push
cmp
(bad)
mov
psubb
pop
xchg
xlat
pop
mov
sub
arpl
(bad)
or
daa
clc
add
jp
iret
mov
adc
(bad)
sbb
mov
push
in
into
add
dec
mov
push
mov
mov
jae
push
adc
fisttp
xchg
jb
push
xor
call
pop
or
shr
data16
jno
pushf
mov
mov
mov
push
mov
jge
pushf
stos
int3
pop
xor
in
inc
dec
movs
dec
adc
sahf
xchg
daa
jl
xchg
repz
push
dec
xchg
jl
sbb
sbb
daa
dec
jb
lods
fidiv
call
lods
aaa
cmp
jge
leave
mov
dec
test
sbb
outs
leave
inc
mov
cmp
inc
pushf
sbb
ret
aas
cmp
mov
xchg
push
mov
out
pop
xor
xor
jp
int
test
jle
lock
add
pop
push
mov
shl
adc
mov
mov
out
xor
sub
cmp
xchg
sbb
int
sub
ja
jne
xor
add
fisubr
add
xor
inc
sar
add
leave
das
mov
inc
add
sub
ret
mov
jmp
mov
xchg
xor
add
ret
mov
add
mov
jns
sar
fsubr
push
movs
mov
cwde
inc
lods
(bad)
lahf
push
mov
pop
inc
jo
cdq
pop
dec
nop
xchg
mov
int
inc
int3
fistp
adc
mov
xchg
lods
std
int
push
loopne
movs
add
mov
inc
pop
retf
sbb
mov
push
mov
sbb
cmps
or
adc
sub
add
or
push
xor
pop
inc
ins
loop
fistp
scas
(bad)
retf
pop
inc
imul
push
add
repz
xor
ss
adc
cmp
add
enter
mov
push
lods
inc
inc
xchg
out
and
data16
pop
mov
or
mov
and
and
pop
js
inc
fidiv
loopne
jo
iret
fcmovnbe
nop
add
movs
repz
(bad)
popf
pop
jns
int3
cmp
scas
inc
mov
mov
clc
adc
or
pusha
jnp
sub
test
sbb
loop
xchg
call
outs
rcr
cli
jp
pusha
out
cs
lahf
jnp
mov
test
mov
out
inc
movs
inc
(bad)
pop
add
cmp
in
stos
jle
xor
ss
or
adc
dec
push
push
clc
mov
cmp
lods
(bad)
xor
lock
movs
pop
ret
push
xor
addr16
jg
sub
mov
mov
lock
out
adc
leave
rol
xchg
loopne
dec
xchg
mov
xchg
jno
into
shl
call
jbe
stos
pusha
lds
and
dec
jne
std
imul
add
add
lock
jno
lock
mov
xlat
lea
test
dec
add
imul
enter
ja
push
cld
xchg
cld
mov
ins
push
fisub
xchg
and
in
mov
std
sub
stos
add
xchg
outs
jmp
in
lds
lock
dec
sub
push
xchg
cmp
shl
cdq
xchg
bound
repz
loopne
pop
fnstenv
(bad)
xchg
mov
push
dec
loope
add
fcmovnbe
jb
sbb
mov
in
fisubr
cwde
pop
ins
test
push
imul
retf
push
pop
mov
lds
pusha
xor
adc
gs
xchg
pop
jnp
or
push
in
adc
ja
aam
loope
es
or
loope
dec
dec
pop
pop
cmp
mov
cmp
add
sub
adc
sub
icebp
das
nop
adc
ret
mov
push
ror
mov
push
out
mov
pop
sti
mov
and
dec
das
movs
mov
jmp
out
out
or
stos
ret
xchg
cmp
pop
jle
push
and
or
sbb
test
sbb
or
mov
mov
int3
popf
dec
repnz
in
dec
popa
fadd
retf
jo
shl
test
mov
aam
jg
dec
pop
sub
xchg
and
mov
test
sub
add
fcom
and
daa
jg
adc
and
movs
mov
ss
mov
aad
xchg
mov
fwait
fs
stc
es
sar
fwait
or
mov
inc
mov
and
push
push
bound
das
shr
leave
cmps
bnd
push
mov
out
das
repz
or
mov
(bad)
pop
or
int3
sar
ret
or
out
jg
or
cwde
dec
pop
ret
mov
fidivr
int3
dec
out
dec
sub
nop
sub
sub
(bad)
fwait
and
ss
and
jae
ins
and
add
dec
cmc
pop
cmc
mov
and
jns
mov
not
ja
jmp
hlt
xor
out
out
rol
into
cs
push
add
push
xor
data16
stos
sbb
stos
xor
inc
dec
xchg
xchg
mov
mov
inc
out
bound
mov
jecxz
mov
mov
aam
retf
retf
hlt
jge
adc
pop
outs
clc
cmp
out
repnz
mov
adc
cmp
int3
jbe
nop
frstor
adc
cmp
scas
pop
pop
arpl
and
ins
fldenv
sar
push
inc
xor
cmp
jo
add
jle
cwde
sub
clc
sbb
jo
and
mov
jge
jp
pop
daa
arpl
sti
mov
add
dec
cs
lock
cmps
ja
jbe
data16
jne
cdq
push
fdivp
pop
or
ins
stos
(bad)
xlat
pop
cmp
sub
sbb
cmc
shl
inc
movs
retf
add
xchg
pop
xchg
popa
xor
push
jns
sahf
add
ja
mov
mov
retf
les
stc
aam
inc
dec
test
sub
jne
inc
sti
xor
pop
aas
out
bound
cmp
push
call
push
fmul
out
jb
call
add
scas
test
int3
daa
ret
aas
adc
and
jmp
adc
inc
popf
stc
dec
inc
adc
dec
mov
iret
jp
xor
xor
test
mov
cmps
mov
lods
mov
inc
mov
nop
aas
cwde
sbb
sbb
add
call
fs
jle
jae
jecxz
movs
fld
cmc
fsubr
xchg
or
sti
sbb
and
mov
or
dec
psubq
jnp
cdq
and
aad
or
jae
pop
in
mov
pop
pop
btr
pop
call
out
xchg
in
cmp
xchg
mov
push
(bad)
mov
nop
popf
mov
mov
fwait
cmps
icebp
push
cmp
icebp
sahf
mov
test
add
push
loop
cli
loop
ror
mov
or
fistp
xchg
lods
cmps
rol
fnstenv
ror
pop
sbb
and
scas
and
xor
test
xchg
out
add
mov
imul
add
lods
hlt
push
fcom
cld
out
loope
mov
inc
push
or
ins
lds
adc
xor
mov
jae
call
jecxz
call
xchg
mov
jmp
imul
dec
aaa
jbe
jg
xor
sub
cmp
or
jbe
out
pop
or
sbb
psubsb
xor
inc
jo
arpl
fldenv
enter
push
or
mov
clc
cmp
jnp
lahf
push
je
pop
sti
movs
sar
mov
push
and
jae
in
popa
mov
faddp
mov
and
retf
mov
and
fdivrp
mov
rcl
bound
push
jo
mov
ret
xlat
sub
out
sbb
xchg
and
mov
adc
mov
out
neg
pop
lods
mov
les
or
fist
jge
and
inc
loop
mov
movs
mov
or
xchg
int3
xor
mov
ins
test
jp
fmul
and
push
and
ins
adc
lds
inc
std
jecxz
cli
add
pop
iret
test
push
and
or
out
cs
cmc
dec
mov
sbb
aas
dec
arpl
fisub
or
add
arpl
fidivr
nop
hlt
(bad)
fdivr
pop
out
cwde
(bad)
es
call
adc
loopne
scas
pop
add
jne
mov
(bad)
mov
push
fist
test
or
or
adc
inc
mov
or
jns
scas
pusha
iret
cmp
mov
xor
jno
and
addr16
das
stos
xor
mov
(bad)
cli
push
inc
maxps
and
mov
xor
cmp
jle
addr16
nop
retf
mov
cwde
pop
jmp
addr16
sub
test
lahf
iret
icebp
mov
cmc
jo
cwde
nop
mov
in
cmp
jmp
(bad)
(bad)
adc
shl
test
idiv
xchg
fwait
arpl
pop
cdq
adc
cmps
and
jge
and
cli
add
dec
loop
shl
iret
loope
pop
mov
adc
cmp
pop
adc
fdiv
xchg
icebp
pop
ftst
mov
mov
jle
arpl
dec
mov
mov
jo
adc
in
inc
jg
sbb
pop
mov
xchg
dec
pop
je
fst
xchg
cli
add
scas
jge
mov
addr16
mov
mov
int
jg
cwde
sub
sub
jno
sti
rol
sbb
aaa
lods
imul
cmp
dec
or
scas
shl
xlat
push
test
or
inc
fucom
pop
and
cmp
xchg
push
std
fdivr
mov
(bad)
mov
out
cmp
pop
and
loopne
and
(bad)
iret
mov
cmps
leave
adc
jne
pop
nop
mov
and
inc
inc
ror
jge
sar
or
sub
mov
in
imul
dec
jecxz
sub
lds
pushf
out
sar
test
sbb
xchg
aad
push
jo
pop
pop
xchg
dec
xchg
mov
out
ds
loope
push
adc
ret
cli
xor
dec
or
and
mov
pop
les
and
rcl
mov
fsub
cmp
adc
mov
inc
xchg
mov
jne
jmp
push
or
mov
xchg
out
(bad)
jmp
add
mov
(bad)
cmp
and
jle
out
adc
fs
dec
adc
xchg
mov
cmp
dec
dec
push
mov
sahf
or
ja
std
out
xor
cmc
shr
and
xor
pop
xlat
repz
out
aam
into
dec
pop
mul
sbb
repnz
xchg
in
outs
inc
push
mov
addr16
int
cmps
mov
sub
and
jb
mov
aas
in
xlat
test
inc
add
cmp
loopne
or
jmp
mov
sbb
xchg
jae
maxps
popa
pop
xor
mov
aas
call
lea
jmp
in
fmul
(bad)
mov
jne
xor
bound
fucomip
(bad)
sub
dec
or
lea
and
push
je
movs
or
mov
lea
scas
add
pop
daa
ds
je
das
jns
cmp
out
xchg
div
and
add
xor
sub
cmp
sahf
(bad)
(bad)
and
push
loopne
pusha
out
dec
imul
dec
cmp
rcr
sti
pop
and
xor
or
sahf
adc
(bad)
mov
psllq
jl
mov
rol
xchg
xchg
movntq
jb
call
pushw
test
mov
and
(bad)
dec
ficom
cmp
aaa
mov
in
inc
xor
mov
inc
xor
push
adc
adc
rcr
out
and
lea
in
fdiv
rcr
xor
out
gs
gs
pop
pop
xchg
push
or
scas
in
xchg
test
ret
mov
shl
inc
mov
push
push
mov
or
fst
lods
cwde
dec
pop
fldenv
xchg
mov
sub
hlt
loop
cli
out
gs
adc
push
push
mov
call
add
xchg
stos
and
push
adc
cmp
test
fsubr
cmp
mov
pop
push
adc
cmps
lods
shl
lock
(bad)
shr
inc
mov
and
xchg
add
es
pop
aad
leave
pop
jecxz
xor
mul
loopne
dec
inc
jge
aas
jmp
pop
(bad)
mov
adc
pushf
push
sbb
mov
xlat
lea
push
xor
dec
movs
cmp
add
jbe
ss
cmp
inc
out
inc
fsubr
jp
dec
out
or
aam
std
push
es
sub
cdq
sbb
dec
mov
jb
mov
add
gs
ins
sbb
shr
or
and
sub
mov
jmp
js
or
test
and
dec
icebp
gs
add
add
push
sub
add
loope
nop
mov
fcomp
push
xchg
out
mov
call
mov
lods
in
inc
inc
push
inc
not
jnp
cmp
js
xchg
push
test
add
pop
mov
lahf
pop
inc
xchg
mov
mov
pop
push
xchg
icebp
cmp
inc
mov
push
clc
aam
lods
data16
lods
retf
mov
fisubr
lds
outs
stc
dec
adc
mov
dec
mov
push
sub
(bad)
ret
pusha
clc
scas
sti
jle
ss
push
cmp
xchg
ret
fs
loopne
adc
inc
pop
aam
mov
repnz
iret
bound
in
jns
mov
jg
inc
cwde
push
jbe
xchg
adc
adc
out
xchg
push
add
hlt
xchg
jbe
cmp
sub
adc
mov
fadd
movs
xchg
sub
dec
dec
test
xchg
or
sti
ror
pop
loopne
test
test
out
jns
(bad)
in
push
out
or
sti
(bad)
loopne
ds
sbb
shl
cmp
in
pop
imul
stc
repz
and
push
xchg
(bad)
push
mov
mov
test
adc
xchg
das
call
pop
fstp
div
ins
cmp
mov
in
mov
add
ja
jne
and
dec
popf
push
cwde
pusha
pop
popf
mov
cdq
repz
pop
xchg
(bad)
fsub
(bad)
push
loopne
cmp
cmp
outs
add
pop
mov
push
mov
sub
xlat
add
ret
into
or
inc
xchg
sti
out
push
add
ins
fild
mov
cmp
out
fwait
pop
adc
jo
das
outs
push
fistp
mov
cmps
ret
addr16
dec
inc
cmp
jmp
test
lock
test
add
mov
adc
mov
mov
push
pop
sub
jae
in
pop
push
push
(bad)
cmps
call
and
mov
pushf
cs
add
out
es
scas
(bad)
xchg
jno
in
sub
int3
or
retf
inc
js
inc
fistp
jecxz
jle
push
stc
hlt
out
lods
jecxz
cmp
add
cmc
into
int
jno
cli
dec
in
in
lods
imul
push
jecxz
enter
cmp
mov
shr
cmp
or
das
hlt
add
bound
and
sbb
jge
inc
push
popf
sub
mov
in
xchg
mov
outs
popf
stos
in
(bad)
mov
pop
out
test
(bad)
call
fwait
out
fld
movs
jo
pop
popf
fist
test
dec
jne
aam
cmps
sub
mov
jnp
cmp
dec
out
in
or
in
jle
sub
ins
push
mov
jecxz
es
cli
aaa
and
and
ucomiss
and
jns
mov
cmps
imul
out
jnp
fidiv
je
stos
lock
stos
xlat
in
and
jne
cli
jg
ins
in
jp
retf
(bad)
mov
test
sbb
sub
fs
xchg
call
aam
or
leave
ins
pop
xchg
sub
pop
mov
sbb
(bad)
dec
push
dec
mov
jmp
push
sbb
mov
pop
loopne
mov
sbb
enter
push
loope
add
push
mov
add
imul
lea
cmp
scas
mov
call
cmovae
js
sahf
sub
sub
mov
int
(bad)
cmp
movs
cwde
and
sbb
movs
xchg
mov
out
iret
push
popa
mov
stc
scas
enter
add
xor
cmp
mov
xor
pop
add
sbb
add
stos
retf
in
sub
in
jne
jno
and
cmp
push
ins
cmp
in
sbb
xchg
inc
imul
sbb
mov
push
lds
sub
leave
pop
lods
jb
jmp
or
loopne
fiadd
sbb
sbb
mov
and
cmp
aad
leave
cmp
inc
adc
das
aad
xchg
popa
(bad)
stos
xor
inc
lods
data16
push
xor
(bad)
xchg
sub
jmp
movs
stos
daa
loop
add
sbb
cmp
xchg
jne
xchg
repnz
daa
inc
jb
pusha
cmp
mov
daa
fwait
xor
call
push
clc
pop
fwait
mov
sar
pusha
pusha
das
push
scas
adc
mov
xor
or
iret
add
sahf
mov
nop
(bad)
cmp
push
sbb
add
adc
(bad)
jp
je
pop
mov
add
fild
jns
or
cs
cld
adc
mov
pop
enter
out
jno
test
sbb
repz
push
or
mov
scas
lods
push
fdivr
or
cmp
dec
jecxz
sbb
or
xchg
out
or
imul
push
pushf
sbb
or
dec
mov
mov
mov
shl
cs
daa
in
and
imul
and
test
imul
(bad)
imul
adc
mov
push
into
ret
pop
scas
and
xor
adc
das
jnp
into
xor
lea
sbb
stos
mov
(bad)
pop
dec
mov
dec
out
retf
push
leave
push
pop
and
lock
cmp
aam
pusha
jl
xor
pop
mov
(bad)
stos
imul
lahf
int
stos
fiadd
call
and
mov
lock
out
lods
jl
dec
out
pop
fs
sbb
and
dec
repz
loope
push
mov
mov
sub
stos
imul
and
fild
xchg
inc
push
push
pop
mul
(bad)
push
add
add
in
push
mov
movs
test
adc
icebp
adc
cmp
jae
out
or
or
sti
mov
sbb
cdq
adc
scas
test
iret
retf
push
and
lods
inc
iret
test
push
mov
dec
adc
ins
jb
repnz
fwait
ins
movs
xchg
lock
xlat
lea
loope
cdq
mov
stos
fiadd
aaa
sar
das
ror
sbb
scas
xor
ss
scas
or
cld
jb
jmp
jns
push
js
dec
mov
inc
daa
mov
xchg
sti
xor
repz
mov
outs
fwait
add
je
aam
ds
xor
adc
inc
jecxz
stos
shr
popa
xchg
push
adc
std
out
jno
aad
xchg
in
repnz
inc
add
sbb
mov
jecxz
mov
rcr
idiv
mov
xchg
xor
(bad)
aas
data16
aas
cmp
mov
retf
pop
call
xor
adc
jo
retf
into
inc
mov
movs
push
out
sub
pusha
cli
jno
sbb
and
fmul
fimul
stos
and
jl
sub
and
sub
cmp
inc
mov
push
jle
or
adc
add
rcr
outs
cdq
sti
in
loopne
ret
jl
pop
xor
movs
repnz
in
xchg
jg
sbb
shl
aad
ficomp
icebp
cld
(bad)
pushf
dec
lods
jns
in
loop
dec
add
outs
jmp
test
cmp
pop
call
rol
push
cmp
xor
iret
jno
out
clc
jle
sar
pop
mov
cmp
dec
xor
pushf
fwait
inc
ds
pop
mov
adc
sbb
push
pop
es
pop
icebp
xchg
fs
pop
or
mov
mov
lds
push
iret
imul
out
mov
in
dec
test
adc
xchg
and
inc
outs
cmc
jmp
sbb
adc
dec
jp
pop
lock
shr
out
jnp
pop
pop
arpl
xchg
test
or
push
pop
fs
cmp
out
push
inc
dec
sti
jp
dec
rol
nop
sbb
mov
mov
out
mov
pop
(bad)
and
push
lea
jnp
adc
adc
ins
add
out
ret
outs
add
stos
aam
sub
push
dec
mov
imul
jno
pop
or
mov
out
cli
loope
sub
sti
cmp
iret
mov
outs
mov
mov
mov
hlt
pop
into
mov
mov
bound
addr16
sar
sub
shl
adc
rol
pop
out
out
das
lahf
fimul
out
xor
xchg
int
(bad)
das
into
ja
and
fisubr
and
ret
pushf
fwait
mov
ja
adc
mov
adc
(bad)
outs
cmp
popa
add
mov
mov
dec
push
jecxz
in
dec
retf
add
dec
xor
and
cmc
add
retf
cwde
ret
pop
mov
inc
scas
in
test
push
sub
dec
xchg
jmp
add
push
daa
push
retf
inc
into
mov
ins
or
imul
imul
popa
repnz
inc
cmp
xchg
call
sbb
daa
dec
(bad)
ss
jl
jns
xchg
lsl
xchg
fldln2
pusha
out
jge
add
in
add
pop
mov
xor
les
jl
xchg
retf
repz
add
fs
int3
jle
mov
test
outs
retf
popa
pop
xchg
mov
std
mov
enter
mov
fidiv
rcl
(bad)
out
in
add
js
rcr
sbb
dec
ins
mov
out
adc
xchg
mov
aaa
sbb
cmp
fidiv
cs
dec
test
mov
or
xor
pushf
mov
repz
mov
cs
test
pusha
(bad)
daa
lds
aad
popa
xchg
dec
lock
ins
or
push
mov
addr16
mov
sbb
sub
xchg
pop
xchg
push
cmp
pop
adc
sbb
jp
in
sub
retf
jle
mov
bnd
lock
xchg
adc
test
inc
ret
cwde
fwait
xor
sti
sbb
mov
or
mov
adc
cmp
pop
into
xchg
jb
popf
mov
mov
outs
inc
fwait
push
addr16
pop
mov
sbb
movs
inc
jbe
add
stos
cmp
pop
and
pushf
daa
(bad)
(bad)
hlt
or
movs
xlat
adc
sbb
jo
pop
lock
nop
mov
les
cmps
data16
sbb
cmps
xchg
push
sbb
sub
or
xchg
xchg
cmp
inc
ja
pop
jnp
xchg
mov
add
mov
and
push
cmp
sbb
fs
jecxz
cli
dec
out
nop
jmp
imul
sub
or
not
sbb
loope
adc
lahf
cmc
xchg
mov
sub
cmp
loopne
or
dec
and
enter
mov
adc
xor
mov
and
pop
inc
icebp
scas
mov
gs
lea
arpl
aam
in
jp
stos
jmp
mov
sbb
(bad)
fsub
mov
dec
aas
xchg
and
jno
pop
push
cmp
inc
push
sbb
repz
das
fsubp
xlat
stos
xchg
mov
inc
pop
outs
jge
out
das
pop
push
(bad)
popf
cdq
hlt
ret
pop
or
lods
imul
(bad)
or
iret
xor
adc
test
sbb
rol
push
mov
imul
dec
and
and
or
push
call
inc
push
and
xchg
das
test
jb
in
add
jnp
inc
dec
cmps
sub
xchg
add
push
lods
stos
stos
into
lock
pop
pusha
pushf
dec
rol
adc
(bad)
(bad)
int
mov
adc
and
scas
lds
cmp
aaa
adc
sti
mov
shl
mov
mov
sbb
sahf
inc
cli
mov
xor
fmul
adc
mov
imul
div
ins
xor
imul
cmp
inc
mov
cmc
cmp
mov
inc
mov
loope
test
outs
daa
push
or
retf
push
(bad)
dec
mov
shl
outs
add
or
ins
mov
test
in
push
add
fistp
fild
xchg
out
mov
mov
ror
int3
and
push
dec
out
push
mov
jmp
cmp
add
inc
inc
fisttp
inc
mov
scas
out
mov
push
adc
add
sbb
sbb
pop
arpl
std
(bad)
ret
xor
out
jno
add
stc
dec
sbb
mov
shl
mov
pop
pop
inc
bnd
rcl
add
mov
inc
sbb
xchg
fsub
jb
and
pusha
inc
inc
sahf
xor
cs
shl
inc
int3
call
loop
bound
add
jb
aas
mov
and
hlt
push
add
xor
xor
shl
pop
xor
scas
gs
jl
jnp
(bad)
sub
cs
jle
and
xor
aaa
mov
stos
sub
add
pop
adc
cmp
push
out
pop
mov
push
inc
imul
mov
(bad)
retf
lea
sub
pop
fcmove
pop
mov
jns
out
inc
push
fs
dec
inc
pop
rol
mov
aas
inc
mov
mov
or
jo
sti
push
add
ret
and
lea
sub
je
push
sbb
pushf
sub
bound
scas
cdq
stos
popf
rol
cmp
push
pop
dec
cmp
fidivr
lods
push
out
add
(bad)
xchg
and
out
adc
push
mov
hlt
mov
clc
leave
adc
in
pop
pop
dec
xor
jge
stos
shr
dec
nop
sbb
push
inc
mov
push
ficomp
add
jg
ss
mov
test
sbb
add
inc
repz
cmc
in
pop
dec
jns
xor
int3
push
fwait
xor
std
loope
cmp
sti
push
retf
bnd
push
xor
dec
xor
pop
sub
mov
or
cwde
sbb
loope
stos
test
pop
sbb
outs
cld
test
fistp
mov
mov
mov
mov
adc
enter
test
inc
movs
pop
xor
jb
mov
mov
mov
jne
lods
mov
out
lds
imul
test
sbb
lods
inc
or
mov
mov
fst
mov
cwde
in
into
stos
xchg
mov
add
xchg
cmp
data16
jp
sub
jmp
bound
retf
jae
cld
(bad)
cli
jecxz
pmaddwd
nop
pop
mov
add
xor
ret
jnp
pop
addr16
lds
lea
adc
dec
pop
je
dec
lock
or
in
out
mov
inc
sbb
adc
sub
xchg
add
mov
mov
adc
sti
adc
add
cmp
add
adc
pusha
mov
ret
js
or
push
scas
mov
enter
adc
test
mov
xor
gs
int3
mov
sub
mov
xchg
fimul
nop
iret
ror
mov
xchg
mov
fs
xchg
push
xchg
jne
ror
mov
push
xor
clc
pop
stos
xlat
sti
dec
jbe
test
pop
sub
jl
stc
ficom
call
inc
pop
sahf
or
fwait
mov
cli
jl
inc
push
repz
iret
fninit
cmp
loop
add
outs
push
add
sub
fist
adc
add
pusha
or
and
inc
ds
daa
jmp
rcl
out
(bad)
xor
pop
dec
in
loopne
mov
fidiv
add
int3
push
adc
test
push
push
jae
add
repz
mov
(bad)
xchg
mov
cmps
sbb
pop
jg
ret
dec
aas
fmul
cmps
push
and
sbb
and
push
sub
or
fsubr
cmp
(bad)
imul
js
(bad)
pop
int
enter
cmp
or
mov
mov
jl
dec
dec
pop
aas
xchg
mov
jecxz
sahf
data16
jp
xchg
fs
pop
sar
dec
je
icebp
fwait
mov
ror
sar
push
cmc
std
in
jge
cmp
ins
inc
add
xor
ins
adc
xor
pop
push
lods
mov
add
mov
pop
loope
popf
ds
test
inc
cmp
jp
addr16
dec
push
clc
lock
sbb
inc
adc
xchg
iret
push
bndldx
imul
idiv
mov
int3
loope
xchg
add
adc
sub
jge
cmc
pop
xchg
xchg
cmp
pop
xchg
inc
or
sub
pop
bound
mov
mov
jb
sbb
jecxz
sbb
setg
or
push
and
jmp
push
gs
pop
(bad)
cwde
scas
cli
fadd
xlat
fisttp
inc
pop
xchg
and
sbb
mov
add
popa
outs
mov
aad
loopne
lahf
fs
mov
pop
push
pop
ins
adc
sbb
out
jne
movs
add
jmp
or
add
pop
cmc
cmp
in
scas
int3
sub
pop
mov
mov
dec
sub
mov
fs
push
sete
mov
xlat
ja
ins
push
xor
push
adc
cdq
inc
add
mov
jg
pusha
ins
fistp
pop
sbb
dec
imul
mov
mov
pushf
lea
jne
hlt
retf
cmp
cmps
movs
push
iret
(bad)
cmp
jns
outs
sbb
(bad)
loope
push
jg
popf
iret
sub
jae
sub
sar
iret
adc
xor
popa
lods
cmp
ss
xor
inc
rcl
sub
or
rcr
mov
mov
std
stos
int
mov
cmp
hlt
movs
push
jge
push
mov
rcr
xchg
mov
lock
sbb
ins
inc
pop
mov
movs
push
jnp
in
jns
movs
lods
lea
arpl
cdq
cmc
pop
pop
mov
cwde
stos
clc
mov
daa
dec
scas
mov
and
inc
dec
sbb
ja
(bad)
repz
jmp
jmp
mov
lds
rcl
stos
mov
les
xor
mov
aaa
aad
or
pop
shl
fnsave
cld
test
push
cmp
inc
mov
xchg
sbb
jno
stos
in
ret
fidivr
push
je
jbe
pop
lock
mov
mov
cld
lods
addr16
push
test
bound
out
imul
repz
xchg
mov
dec
mov
xor
jge
mov
mov
mov
jg
leave
(bad)
ret
mov
lahf
inc
and
out
and
cld
mov
cmps
ret
adc
sahf
ds
test
add
fldpi
ficom
xlat
push
mov
push
xchg
dec
(bad)
sbb
std
test
jp
lock
pop
push
jle
cmovle
jge
or
or
movs
jmp
call
jecxz
ret
jo
pop
jp
xor
addr16
sub
mov
in
(bad)
loopne
rcl
or
sbb
or
xlat
lods
jge
pop
sub
inc
addr16
mov
sub
pop
mov
or
loopne
inc
fdiv
xchg
fnstcw
adc
sbb
(bad)
das
adc
cmp
ja
dec
or
in
cmp
ret
cmp
test
cmp
ror
in
pop
xchg
test
sub
into
mov
add
outs
push
into
xchg
out
fs
pop
sbb
pop
(bad)
frstor
gs
jno
or
outs
rol
popf
xor
xchg
call
and
in
pop
adc
scas
out
and
daa
pop
and
xchg
outs
mov
xchg
xor
es
xor
mov
dec
jp
mov
push
push
in
jb
add
shl
inc
leave
cdq
pop
(bad)
and
add
jecxz
pop
or
pop
xor
mov
stos
ins
stos
sub
inc
add
cli
jl
cmp
outs
jb
js
and
sbb
jle
into
fld
arpl
cli
mov
test
xlat
push
inc
cmp
adc
mov
pushf
jmp
cmp
ds
mov
test
scas
mov
xchg
pushf
push
jmp
fldcw
push
mov
adc
jno
inc
fimul
ret
push
push
inc
popa
push
add
adc
jae
push
fdiv
(bad)
(bad)
cmp
cmp
jae
cmc
mov
mov
and
repnz
iret
ficom
icebp
outs
gs
dec
popa
pop
mov
inc
mov
mov
jmp
xor
scas
(bad)
cmp
idiv
jmp
adc
jb
adc
sbb
xchg
cmp
cmps
je
fist
inc
bnd
pop
in
push
ins
mov
cmp
xor
jb
add
cdq
mov
cmps
xor
xchg
push
pop
inc
cld
clc
jge
xlat
jae
je
sbb
mov
cmp
icebp
inc
pop
jbe
xchg
out
sbb
in
mov
cmp
out
mov
test
rcl
xor
mov
test
or
je
or
mov
add
push
xor
aaa
inc
(bad)
xor
sub
push
mov
sti
mov
out
int
in
xchg
mov
cmp
jmp
fdivp
sbb
call
ja
js
pop
das
push
lds
push
fsubr
pop
or
push
rcl
and
jmp
and
push
sbb
and
repnz
fmul
(bad)
adc
out
jl
repz
jno
fmulp
paddusw
enter
stc
or
pusha
jae
xchg
lea
dec
or
into
xchg
ins
gs
loope
jae
or
and
or
mov
lahf
test
rcr
dec
pop
shl
int3
iret
mov
or
xor
push
fnstenv
cmp
pusha
cmp
and
iret
lods
icebp
dec
xor
call
mov
pop
jmp
test
dec
xchg
sti
inc
xor
js
popf
cmp
or
inc
push
pop
mov
adc
or
mov
push
jbe
mov
div
push
aad
mov
cwde
movs
imul
add
push
dec
push
jae
mov
jnp
call
cld
(bad)
cmp
push
ins
ja
and
jbe
mov
xchg
dec
jg
loope
outs
test
movs
push
ret
add
jl
popf
pop
rep
call
pop
add
xor
(bad)
ror
(bad)
mov
std
enter
jns
cli
cli
inc
test
mov
push
cs
add
jmp
xchg
ins
mov
cdq
leave
or
sbb
(bad)
outs
fistp
ret
jmp
jae
in
hlt
int
popa
mov
dec
test
sbb
cli
call
pop
push
mov
test
cmp
test
ret
xchg
dec
dec
jp
mov
mov
or
pop
sbb
inc
nop
je
adc
jbe
sub
xor
repz
faddp
sbb
(bad)
cwde
xchg
cmp
les
push
data16
jb
fs
pushf
hlt
imul
in
das
add
push
mov
inc
loope
mov
adc
and
pop
icebp
push
stos
out
adc
xchg
xchg
stos
mov
jno
adc
add
sahf
je
std
(bad)
aam
pop
push
inc
jp
mov
enter
mov
xchg
mov
out
js
fmul
add
xor
nop
pop
sbb
test
in
mov
jecxz
jnp
and
loopne
mov
ins
enter
jae
loopne
or
jnp
fistp
cmp
cmp
popa
cmp
ret
push
nop
push
xor
dec
and
push
jb
jno
js
push
or
test
inc
cmp
mov
mov
mov
outs
gs
mov
jp
mov
mov
cmp
inc
mov
iret
push
adc
adc
dec
jp
push
jb
cmp
test
push
pop
adc
jnp
aad
or
imul
pop
cdq
fldenv
test
add
add
xchg
or
jl
cmp
pop
sub
ins
inc
push
retf
lods
jb
push
mov
aaa
(bad)
test
repnz
repz
mov
adc
mov
mov
(bad)
mov
xchg
push
or
cld
mov
xchg
mov
fist
jge
inc
inc
fst
addr16
and
cmp
or
adc
adc
mov
dec
mov
mov
es
inc
xchg
aaa
sbb
and
inc
jp
mov
call
icebp
xlat
gs
cmp
mov
lahf
jnp
jno
xchg
(bad)
cli
movs
adc
retf
lods
enter
inc
sub
iret
outs
mov
mov
repz
leave
(bad)
fild
or
imul
daa
and
inc
mov
xchg
or
sub
mov
icebp
add
mov
push
mov
sub
and
arpl
mov
dec
frstor
rcl
call
mov
or
jno
push
js
jno
fstp
or
pop
cdq
jbe
lahf
(bad)
iret
enter
mov
adc
fcmovu
mov
in
jl
mov
aam
xchg
jle
loopne
arpl
xor
(bad)
and
sub
shl
enter
mov
(bad)
scas
leave
mov
pop
pcmpeqb
daa
fstp
(bad)
out
icebp
outs
stos
rcl
mov
cmp
(bad)
xor
addr16
aam
call
sub
out
mov
mov
aam
mov
ins
lds
jmp
mov
hlt
cmp
je
std
inc
in
lock
clc
add
xchg
push
adc
iret
push
inc
repz
or
dec
pop
push
inc
push
dec
dec
sub
inc
retf
or
adc
pop
or
mov
push
jae
scas
mov
ret
ins
aaa
sub
out
(bad)
out
aas
mov
popa
(bad)
je
popa
int
jnp
cmps
dec
nop
aaa
inc
(bad)
test
add
sbb
inc
push
jle
cmc
ss
icebp
fsubp
or
(bad)
retf
pop
mov
test
and
and
in
inc
fldl2e
cli
xchg
in
push
inc
imul
cdq
(bad)
inc
jo
adc
adc
mov
mov
mov
dec
sub
or
aam
test
push
adc
pop
xor
add
es
sub
jecxz
stos
jmp
dec
repz
lods
add
mov
dec
inc
xor
xchg
jae
cdq
call
in
fidivr
jp
jp
inc
dec
xchg
xor
xor
mov
repz
or
cdq
add
in
cmp
nop
addr16
sbb
pop
and
sbb
jge
mov
sbb
das
in
aaa
jbe
adc
push
mov
sbb
adc
push
sti
shl
dec
lea
push
jg
rep
jecxz
add
repnz
repz
cmp
sub
loop
scas
xor
rol
inc
and
outs
and
imul
fisttp
or
sbb
frstor
shl
mov
(bad)
test
sbb
cmps
mov
mov
ss
jae
jecxz
mov
xchg
jmp
fs
call
in
and
push
adc
(bad)
pop
xor
mov
adc
in
retf
sub
sbb
neg
lods
in
sti
adc
sub
and
mov
fdivr
movs
mov
call
push
call
or
push
and
mov
ja
jb
push
cli
cmp
and
in
jmp
cwde
jp
mov
out
out
adc
mov
addr16
add
push
mov
pushf
fst
xchg
fsubr
gs
retf
adc
dec
dec
add
xor
xlat
pop
jno
sar
xchg
dec
pop
ret
or
(bad)
aad
xchg
mov
sti
mov
or
and
cmp
mov
push
adc
imul
sbb
jno
repz
retf
mov
mov
push
mov
ret
rcl
nop
sbb
cmp
in
mul
cmps
mov
rcr
cmp
pop
out
push
fwait
adc
pop
sub
cwde
and
movs
sub
data16
(bad)
fdivr
movs
pop
dec
or
jge
lds
fidivr
addr16
bound
fstp
dec
pop
stos
xor
jo
daa
adc
cli
test
cmp
neg
xchg
cmp
jb
int3
pusha
fs
cmps
mov
pop
pop
mov
stos
dec
sbb
jmp
mov
fs
xlat
ret
jmp
pop
(bad)
push
stos
push
(bad)
mov
je
mov
lods
aaa
inc
adc
xchg
pop
or
push
and
cdq
cmc
fcmovnu
push
dec
jo
push
jo
addr16
pop
jo
fistp
jb
fldcw
test
add
stos
in
fidivr
inc
sbb
jmp
sahf
shl
leave
mov
in
pop
inc
sbb
cmp
(bad)
dec
or
push
and
add
nop
(bad)
call
xchg
gs
jb
jmp
fwait
aas
fsub
mov
movs
and
inc
pop
xchg
cmps
fsub
dec
sub
fcmovnbe
jecxz
push
stos
leave
inc
push
or
scas
lea
nop
inc
inc
mov
fdiv
dec
movs
jns
mov
outs
fisubr
scas
mov
mov
clc
scas
(bad)
stc
aaa
jg
jnp
dec
mov
imul
jmp
(bad)
cld
stc
es
pop
mov
iret
cmovp
add
cmps
mov
and
adc
or
mov
push
xchg
ret
jno
inc
jge
ss
push
mov
lds
test
stc
push
mov
push
hlt
dec
gs
xchg
sub
aad
ss
repz
pop
(bad)
adc
mov
bound
pop
imul
fnstcw
xor
ja
push
mov
and
xor
fs
push
inc
adc
jp
aad
lds
add
mov
mov
(bad)
lahf
or
jae
stc
lock
mov
fwait
(bad)
pop
add
and
sub
jmp
xchg
call
hlt
mov
aas
sti
mov
int
and
fisub
dec
push
std
mov
rol
xor
test
imul
popf
leave
ja
out
and
shl
sbb
push
lahf
and
js
iret
icebp
rcl
and
jns
mov
mov
js
(bad)
push
adc
mov
outs
and
or
hlt
mov
or
call
jg
enter
mov
dec
leave
mov
sahf
or
push
outs
stc
push
mov
clc
neg
inc
outs
pop
lock
test
mov
add
mov
stos
mov
dec
sbb
aad
dec
iret
sahf
mov
popf
stos
clc
lods
add
(bad)
xchg
push
cmps
jae
rcl
lock
mov
jnp
xchg
stos
xor
xor
adc
jecxz
sahf
into
loopne
adc
push
sbb
xchg
sub
mov
cdq
mov
and
and
jecxz
push
sbb
(bad)
dec
and
xor
jns
cld
gs
outs
cs
in
mov
jo
popa
jb
stos
inc
push
cs
pop
cwde
xchg
push
push
(bad)
adc
push
jnp
mov
inc
pop
js
xchg
mov
add
jne
mov
lea
push
ret
pusha
lock
pop
aas
jge
xor
cwde
out
cld
dec
test
ret
dec
popf
dec
mov
lahf
dec
lock
pop
dec
movs
mov
pop
jmp
cmp
mov
pop
ror
out
js
mov
out
inc
shl
ret
loopne
and
sti
pop
pop
inc
inc
cmp
dec
pop
stc
mov
or
adc
inc
neg
sub
or
add
mov
inc
or
mov
lea
or
fcomp
adc
ret
sbb
mov
mov
nop
test
retf
out
inc
push
hlt
outs
loopne
loop
mov
test
sub
add
push
fcmovnbe
push
ins
js
mov
sbb
shl
xchg
ss
(bad)
sub
fild
push
xor
lds
mov
out
les
test
ds
pop
movs
sbb
lock
bound
jge
fwait
out
inc
inc
jne
pop
dec
data16
adc
cli
and
nop
call
jno
push
jp
mov
les
outs
and
push
cmp
repz
cmp
push
push
mov
call
retf
call
enter
sub
loope
cmps
std
fimul
mov
lahf
dec
and
loop
fucomi
jl
(bad)
(bad)
push
(bad)
dec
stos
xchg
mov
outs
mov
rcr
pop
dec
cmp
fld
aas
rol
jo
cli
icebp
lock
mul
mov
sahf
scas
out
icebp
clc
sbb
jmp
out
push
mov
and
sub
mov
les
mov
inc
movs
mov
sbb
idiv
xor
jl
fsubr
pushf
cwde
and
inc
pshufw
shr
dec
adc
xchg
cmp
inc
add
ficomp
(bad)
(bad)
cli
retf
dec
jp
mov
add
xchg
ins
out
jne
fisttp
push
leave
mov
cmp
push
or
mov
ins
adc
add
iret
inc
jae
mov
pop
mov
cmp
inc
popa
fdiv
sub
mov
cs
sti
mov
and
hlt
jle
es
loope
lds
mov
lods
cmp
rcl
int
inc
mov
jp
adc
out
dec
push
lds
inc
leave
mov
push
and
push
not
add
mov
int
(bad)
enter
adc
push
xchg
pop
jmp
pop
cmp
out
xchg
jp
adc
mov
push
sub
or
adc
idiv
fsub
(bad)
push
push
mov
js
sbb
repnz
push
pop
jp
daa
test
aad
pop
movs
push
xlat
push
sub
cmps
dec
std
xchg
rcr
dec
sub
pop
sahf
dec
idiv
and
push
jmp
shr
or
xor
add
jmp
and
loop
push
outs
jns
in
push
jo
and
adc
and
sti
icebp
cwde
adc
cmp
repnz
mov
arpl
adc
bound
push
dec
call
add
mov
in
mov
push
or
nop
push
int
and
push
inc
stos
or
jp
(bad)
retf
mov
push
pushf
loope
mov
cli
jmp
hlt
rcr
mov
or
inc
aam
sub
add
sbb
enter
jg
sti
cwde
int
cld
(bad)
(bad)
adc
call
jns
sar
sub
call
mov
jno
and
hlt
mov
stc
pusha
int3
(bad)
es
sti
sub
mov
sbb
aad
inc
push
sti
movs
and
inc
sahf
xor
stc
and
push
jmp
or
into
jg
sti
mov
or
fist
cmp
jl
add
mov
or
nop
inc
mov
mov
dec
mov
cmps
sub
cs
fisub
dec
jno
ror
inc
es
jb
mov
cmps
das
in
cmps
add
shr
mov
inc
xchg
lea
adc
jecxz
adc
movs
adc
add
ins
mov
mov
jmp
jecxz
cmps
dec
mov
rcl
adc
(bad)
mov
cwde
sahf
pop
sub
dec
mov
xchg
aas
mov
outs
xchg
lea
cdq
and
pop
int3
ret
popf
mov
iret
mov
(bad)
pusha
hlt
bnd
pop
xor
xchg
mov
enter
push
jge
sti
pop
and
ins
mov
fnstenv
hlt
arpl
push
call
xor
stos
in
stos
aad
mov
xchg
int
sub
es
ins
call
inc
int3
addr16
repnz
sti
je
mov
scas
xchg
fwait
ror
lahf
dec
mov
pop
fst
ret
je
ret
sbb
(bad)
arpl
dec
iret
out
sub
in
dec
je
lahf
xor
jns
push
jb
jg
fisub
jge
mov
cmps
outs
xchg
loopne
cmps
dec
mov
adc
sahf
outs
call
mov
add
sbb
sub
xlat
cli
retf
in
jno
inc
das
push
arpl
sbb
shr
xor
jl
push
pop
(bad)
in
mov
inc
add
mov
outs
repz
gs
xchg
adc
(bad)
and
jle
pop
mov
adc
pop
shl
ret
pushf
add
push
test
nop
loope
mov
inc
fs
pushf
add
gs
mov
add
aaa
mov
dec
mov
loope
add
jb
ret
dec
repnz
fdivr
cmps
scas
outs
mov
dec
adc
imul
pop
mov
stc
cmps
jb
js
pusha
sub
mov
mov
psllq
movs
jbe
movs
dec
push
mov
imul
cmp
or
aam
scas
cmc
aad
lock
mov
fst
fs
std
cwde
cmp
leave
inc
inc
call
sub
cmp
(bad)
and
repnz
in
lea
dec
xor
cli
inc
push
(bad)
cmp
add
out
bound
stos
arpl
jmp
jle
or
cld
cmp
or
mov
inc
jnp
and
adc
pop
mov
or
fisttp
(bad)
cmp
cmp
cmp
mov
cmc
adc
fnstsw
out
jl
push
mov
add
cld
jns
cmp
xchg
jg
into
shr
lods
add
sub
cmp
cdq
and
mov
jmp
mov
mov
repz
and
mov
xchg
inc
int
mov
jae
in
mov
xchg
scas
inc
mov
push
mov
int3
test
(bad)
and
xchg
sub
jle
ja
int3
add
and
pop
lea
pop
(bad)
pusha
mov
cmc
mov
push
sub
jmp
loop
sbb
and
icebp
fs
dec
cdq
dec
xor
add
push
or
cld
jae
push
xchg
pop
jg
jbe
js
repnz
cmc
test
loope
mov
or
out
and
in
mov
mov
sub
clc
pop
cmp
xchg
jmp
leave
mov
xcrypt-ecb
cmps
pop
jle
sbb
push
or
out
push
jbe
outs
sub
jbe
lahf
(bad)
mov
xchg
fs
pop
cmp
imul
in
xor
inc
mov
sub
mov
mov
xchg
lea
mov
into
bound
adc
or
cmps
ins
cli
xor
jns
sub
and
popa
add
mov
dec
ret
xor
mov
aad
mov
mov
aad
not
jae
mov
dec
addr16
enter
cli
or
xchg
xor
int3
daa
fist
bound
rcl
and
std
xor
arpl
imul
mov
cmp
jmp
ins
enter
dec
dec
cmp
sbb
das
cmp
dec
fstp
cmps
mov
lds
ss
stos
mov
test
call
repnz
push
add
sub
ins
dec
inc
pop
pop
dec
cmp
test
mov
sar
adc
imul
sahf
cmp
dec
jmp
fmul
jb
(bad)
xor
in
sbb
loopne
out
ds
push
jo
xor
cwde
lea
xchg
movs
cmp
xor
test
gs
sub
xchg
popa
push
call
fcmovnb
bnd
ins
mov
iret
inc
mov
call
fwait
(bad)
jge
aad
jecxz
push
jb
jp
popf
stos
neg
ins
outs
out
gs
inc
ja
cmp
fmul
jle
mov
or
dec
push
cmp
and
adc
adc
xchg
out
mov
xchg
or
xor
sbb
and
cli
dec
nop
pop
mov
add
xchg
(bad)
repnz
jmp
in
inc
bound
iret
outs
(bad)
loope
push
cs
mov
pushf
rcr
dec
pop
xchg
out
xor
dec
lods
setns
sti
xor
into
push
into
lfs
(bad)
in
sub
sub
jmp
arpl
add
aad
dec
and
test
cmp
xchg
not
lods
or
je
jo
jne
es
xchg
pop
cmp
outs
test
stos
call
mov
ins
cli
jmp
dec
add
hlt
jbe
mov
je
inc
and
add
mov
xchg
add
movs
loopne
movs
or
ret
(bad)
addr16
sbb
jmp
sub
not
mov
push
sbb
mov
ss
push
(bad)
jl
cmps
out
fistp
sbb
xchg
iret
outs
int3
xor
jg
sbb
cmp
cmc
loope
xor
xchg
cld
pop
push
push
mov
mov
xor
addr16
mov
inc
sar
sub
sub
mov
mov
xor
mul
or
sub
or
in
scas
retf
or
out
aaa
test
test
jae
or
je
dec
mov
jbe
cmp
xchg
movq
pop
adc
xchg
bound
ins
jl
mov
sub
pop
mov
sub
adc
outs
in
fwait
push
icebp
hlt
mov
dec
fadd
mov
xchg
xchg
add
leave
(bad)
jmp
ins
daa
movs
ret
jp
dec
(bad)
mov
ins
stos
or
and
sti
fwait
or
mov
mov
lock
sub
adc
dec
xchg
push
dec
sbb
dec
jne
cwde
mov
or
into
xor
imul
pop
pop
sti
imul
adc
loopne
fidivr
lods
test
jmp
cmp
jno
fs
rcl
jecxz
pushf
inc
cmps
jns
(bad)
retf
out
pop
popf
mov
add
add
out
pusha
pop
test
mov
iret
or
cmp
xchg
adc
stos
sbb
not
shr
retf
jp
mov
fs
pop
ret
test
pop
movs
sbb
xor
les
push
ret
cmp
mov
xchg
or
int
retf
fwait
pop
popa
mov
adc
rcl
jg
pop
test
lea
inc
out
dec
jg
cmp
ror
cmc
stc
neg
inc
mov
pop
outs
mov
push
fs
pushf
mov
aas
je
xchg
call
lds
jge
test
mov
int3
sbb
mov
lods
xchg
or
add
in
(bad)
cmp
out
mov
fiadd
jmp
dec
inc
add
mov
lods
adc
push
xchg
stc
shr
inc
test
xor
xor
fisubr
xchg
xchg
xchg
rol
add
scas
rcr
retf
out
out
sbb
cwde
std
sub
neg
sbb
or
cmp
es
cmp
inc
(bad)
out
and
mov
fs
adc
dec
or
push
jg
out
retf
push
mov
xchg
test
lods
jmp
xor
test
pop
pop
ss
xor
dec
hlt
fidivr
mov
or
mov
pusha
clc
outs
mov
jmp
dec
inc
je
in
(bad)
and
fcom
loope
or
add
push
sub
sub
jmp
and
inc
add
pop
sbb
mov
ficomp
mov
ficomp
sub
dec
popf
pop
add
ins
mov
cdq
and
dec
iret
lods
dec
or
neg
lock
push
lods
mov
xchg
adc
jle
jg
push
jbe
daa
cli
sti
jbe
ja
and
jb
je
mov
and
shl
mov
(bad)
xchg
xchg
shr
mov
sbb
sub
aad
mov
maskmovq
idiv
jno
add
cmp
mov
push
in
jb
xlat
lea
enter
and
push
ss
adc
cmp
push
inc
inc
icebp
push
clc
clc
sub
into
in
mov
jl
test
add
mov
dec
iret
add
popf
dec
xchg
movs
add
stos
add
mov
loop
gs
push
sahf
sub
jns
jno
(bad)
leave
fwait
lahf
xchg
test
fscale
dec
sub
mov
in
rcl
movs
rcr
arpl
jl
movs
inc
push
or
mov
sbb
inc
mov
mov
div
push
scas
adc
jmp
adc
inc
sub
in
adc
loope
and
xor
fadd
jmp
loop
or
add
(bad)
call
push
js
mov
ret
fstp
retf
call
out
cmps
leave
jne
mov
push
lahf
and
hlt
jb
jae
add
mov
jne
data16
cwde
stc
xchg
test
mov
ret
sbb
sti
pop
aad
dec
adc
mov
ins
retf
adc
and
imul
xor
xor
sahf
call
push
repnz
lods
xor
adc
sub
nop
jns
ins
retf
cmps
mov
xchg
push
aam
icebp
inc
daa
(bad)
test
xchg
ins
or
or
or
pop
xor
mov
pushf
cmps
jmp
mov
ror
mov
mov
ins
popa
push
into
(bad)
loopne
retf
cdq
imul
loop
test
mov
push
jmp
xchg
ficom
iret
scas
xor
push
out
ret
push
daa
lods
and
dec
es
xchg
jnp
add
inc
je
xor
(bad)
push
jl
fist
xchg
jge
pusha
xchg
movs
cmp
idiv
out
mov
scas
push
scas
loope
add
outs
pop
(bad)
outs
xchg
push
sub
cmp
mov
adc
les
test
movs
dec
inc
frstor
xor
outs
hlt
inc
pop
cs
add
push
add
mov
fs
pop
aaa
and
fsubr
lods
gs
stos
sar
aad
fmul
mov
arpl
clc
sbb
push
pop
xor
add
imul
cs
add
mov
or
mov
leave
popa
cmp
sbb
inc
mov
or
popa
or
jg
js
sub
dec
dec
mov
xlat
(bad)
data16
adc
adc
repz
loop
and
ror
popf
add
ret
sbb
jb
stc
pop
xchg
or
test
or
rol
(bad)
mov
test
or
cwde
cmp
in
fdivr
inc
bound
cmp
mov
jmp
retf
pop
cmc
arpl
in
aad
js
inc
push
push
call
sub
mov
xchg
in
xor
jbe
pusha
imul
jb
xor
cmp
rcr
jmp
add
call
call
sub
add
pop
fld
movs
dec
das
(bad)
cmp
and
pop
lahf
and
sbb
out
movs
or
test
retf
fdivr
mov
inc
push
jo
cdq
or
pusha
and
xor
pop
inc
or
sub
adc
das
cli
ja
fnstsw
movs
sub
cs
xchg
(bad)
in
push
ins
cs
add
adc
in
jl
pop
ret
mov
mov
cmp
sbb
fndisi(8087
xchg
push
xor
imul
jb
movs
cmp
cmc
xchg
loope
or
fsubp
jno
hlt
fidivr
test
sbb
jae
nop
sahf
std
or
and
sbb
int3
or
mov
dec
xchg
pop
cwde
popf
and
mov
cmc
pusha
outs
xor
dec
mov
pop
cli
scas
imul
cmp
retf
jg
jge
mov
outs
sbb
xchg
mov
inc
jne
or
push
bound
mov
jmp
pop
or
dec
data16
cmps
jns
leave
and
mov
xchg
or
xchg
adc
shl
frstor
retf
xchg
movs
lock
pop
mov
push
sub
push
sbb
mov
pop
pop
shl
imul
adc
std
jg
lock
out
(bad)
pop
(bad)
fbld
(bad)
sub
inc
pusha
adc
test
pusha
lods
cmp
or
adc
popf
mov
ds
fsubr
dec
or
cmp
jb
pusha
sbb
mov
lock
cmc
aas
daa
push
out
mov
adc
dec
mul
fs
sbb
scas
gs
fsub
fsub
ret
mov
xchg
or
shr
nop
push
ror
outs
dec
mov
arpl
jge
mov
retf
xor
(bad)
mov
cli
dec
mov
sub
arpl
(bad)
jge
xchg
fld
(bad)
jp
mov
mov
sbb
jb
xchg
sbb
push
push
ffree
add
sub
and
xchg
mov
int3
dec
int3
push
arpl
dec
push
xor
pop
mov
pop
jl
retf
cwde
es
std
ss
pop
scas
pop
daa
cmc
and
cwde
loope
or
push
sub
cld
xchg
mov
stos
xor
jo
out
aam
cmp
jne
mov
cwde
enter
loopne
xor
fdivr
rcl
sub
xchg
sub
in
sbb
(bad)
xchg
aam
seto
mov
hlt
or
pop
inc
push
or
sbb
sahf
mov
out
xchg
dec
jmp
fdiv
leave
fwait
xor
pushf
mov
push
adc
ja
cmp
imul
mov
pop
int3
xor
jno
mov
in
cmp
xlat
imul
jnp
pop
cmp
mov
mov
out
mov
call
pop
xor
jne
jo
push
push
stos
adc
call
dec
jp
push
jbe
mov
rcl
jae
pop
jmp
or
sub
xchg
je
cmp
call
mov
mov
cmp
xlat
push
out
pop
inc
fdivr
push
div
mov
sbb
das
(bad)
xchg
mov
mov
inc
dec
xchg
sub
or
shl
das
mov
leave
inc
mov
in
mov
push
scas
(bad)
cmc
stc
dec
into
inc
add
mov
xor
sbb
ficom
fild
and
push
(bad)
cmp
dec
aas
clc
scas
add
adc
data16
fnstenv
js
jae
or
push
clc
jle
mov
cmp
cwde
push
(bad)
xor
(bad)
and
adc
xchg
mov
lods
pop
ror
(bad)
push
adc
xchg
adc
dec
inc
sub
stc
cmp
xor
and
push
mov
bound
lock
push
nop
pop
adc
pop
mov
cmc
out
imul
cmps
mov
stc
cmp
inc
push
push
jns
mov
loope
fild
data16
sahf
mul
ins
(bad)
not
cmp
fwait
in
ret
retf
jl
sub
sti
xchg
scas
(bad)
and
push
std
ror
dec
ror
movs
call
outs
push
pop
mov
popf
cmp
iret
mov
jmp
das
mov
or
cmp
add
jnp
pop
inc
pop
adc
call
ins
add
xchg
add
int3
sbb
or
mov
mov
enter
push
fisttp
xchg
inc
movs
xchg
iret
gs
jb
daa
and
scas
adc
mov
rol
pop
rcr
out
xor
in
lea
popa
ins
inc
jne
dec
mov
pop
dec
and
adc
mov
pop
fdivrp
dec
daa
adc
cld
xor
and
mov
idiv
icebp
mov
dec
inc
lea
jnp
fld
push
push
mov
clc
mov
aaa
mov
sub
cmp
mov
movs
stos
int3
faddp
mov
xchg
dec
fwait
movs
adc
mov
out
xchg
out
pop
mov
clc
cmps
pop
aaa
dec
sbb
and
pop
lahf
pop
fsub
retf
mov
in
mov
fld
and
div
push
and
mov
pop
cmp
in
dec
jo
jb
and
sub
dec
xor
lahf
jns
daa
nop
sbb
rcl
cmp
pop
adc
repz
dec
mov
data16
push
cmp
and
out
mov
pop
aaa
add
xchg
loopne
sub
pop
jle
push
(bad)
push
lods
push
outs
retf
jge
or
das
and
fistp
dec
popf
or
loope
retf
repz
clc
fimul
inc
mov
jle
lds
pusha
sbb
pop
outs
mov
dec
push
add
add
out
cli
retf
xchg
xlat
cwde
pop
sbb
imul
mov
xor
xor
and
sbb
xor
shl
dec
mov
pop
retf
sahf
iret
(bad)
push
lods
imul
inc
ds
xchg
mov
adc
mov
into
loop
xor
rcr
and
xchg
pusha
mov
push
add
sub
cmp
sub
adc
retf
ins
mov
pop
jo
pop
add
cwde
aaa
ds
jno
pop
jge
inc
pop
inc
inc
and
pop
sbb
sbb
or
std
rol
sahf
push
scas
fstp
pop
or
sub
shl
int3
outs
cmp
sub
xchg
xchg
(bad)
jmp
mov
add
pop
lea
sbb
mov
sbb
iret
cs
pop
cmp
sub
stc
dec
push
nop
push
xor
push
imul
imul
mov
pop
push
scas
xor
aad
mov
add
(bad)
add
out
push
lahf
fcomp
add
sub
lock
inc
out
ret
ret
mov
div
add
in
test
es
sti
paddw
xchg
pop
adc
in
bound
fwait
adc
mov
add
outs
enter
mov
jmp
dec
loope
adc
ret
jmp
push
adc
mov
push
pop
sub
outs
addr16
pop
jns
(bad)
sbb
rol
and
ret
jl
xor
or
cmp
mov
out
fld
mov
or
dec
sub
movs
in
(bad)
ret
push
sbb
mov
xchg
(bad)
pop
lds
fsubrp
shl
(bad)
out
mov
dec
loope
mov
jl
xchg
data16
mov
add
dec
out
(bad)
imul
jg
inc
xchg
jbe
push
mov
sbb
jae
mov
aam
xor
mov
adc
pop
push
cmc
mov
dec
lds
in
int3
and
int
add
lea
fs
jmp
ss
jp
add
xchg
cld
add
sub
cmp
out
xlat
adc
and
hlt
arpl
rcl
shl
lods
enter
jg
bound
lods
ret
ret
mov
push
jns
adc
stos
mov
xlat
dec
pop
stos
icebp
fisubr
jg
nop
hlt
push
cdq
xor
pop
adc
cmps
int
stos
inc
jae
add
mov
jns
(bad)
xor
(bad)
push
test
cmps
jae
dec
or
ret
ror
retf
jl
pop
call
pop
dec
jp
out
ret
cmps
shr
add
jmp
neg
movs
neg
(bad)
push
ins
inc
or
add
sub
mov
pop
mov
outs
xor
iret
mov
leave
pop
jbe
ins
ds
dec
fnstenv
sub
mov
ins
shr
mov
jmp
add
(bad)
stos
or
or
inc
jbe
add
pop
scas
fadd
div
and
add
out
pop
or
loopne
mov
sbb
and
mov
pop
iret
iret
and
paddusb
(bad)
ins
mov
mov
inc
popa
aad
pop
mov
in
jmp
jp
or
shl
sub
jmp
push
fwait
pop
lock
push
shl
mov
pop
push
into
xor
hlt
pop
dec
xchg
bound
mov
inc
aaa
test
cmps
test
xlat
sub
pop
mov
and
scas
lock
xor
adc
cmc
pop
rcr
mov
xor
data16
mov
push
pop
xchg
sub
cli
loop
add
sbb
(bad)
(bad)
pop
adc
std
fsubr
jle
(bad)
jno
repz
iret
inc
retf
repnz
cld
push
push
adc
stos
int3
xchg
cs
pop
jnp
loope
adc
rol
enter
lds
cli
daa
pop
inc
stos
pop
and
push
das
jae
xchg
xor
xchg
sub
and
add
inc
lds
(bad)
adc
out
cmp
adc
add
or
mov
mov
sahf
ds
scas
dec
fild
inc
sub
or
or
xor
ret
lock
mov
jns
push
nop
cmp
sahf
fisttp
xchg
js
jne
push
rcl
addr16
push
outs
arpl
ja
xlat
mov
cmp
sbb
add
inc
ins
jg
arpl
cmps
inc
pop
neg
retf
cli
pop
arpl
inc
jb
pop
icebp
mov
sub
or
push
arpl
ds
inc
sbb
fbld
mov
xchg
mov
pop
test
mov
inc
sbb
xchg
movs
rcr
int3
sbb
sub
sub
enter
mov
call
in
add
gs
jo
adc
out
addr16
sub
adc
pushf
mov
je
(bad)
and
jmp
cli
jecxz
cmps
aas
inc
and
icebp
mov
mov
sbb
std
pop
stos
xchg
fs
lds
neg
xchg
nop
pop
inc
cmp
movs
push
xchg
mov
xlat
xor
cld
sar
xor
mov
test
jne
sbb
mov
xchg
sub
ror
push
add
adc
sbb
push
arpl
ret
xor
xor
aaa
mov
mov
mov
xchg
mov
mov
adc
add
shr
shl
pop
push
dec
inc
push
pop
dec
add
jnp
(bad)
leave
pop
sbb
imul
out
pop
iret
pop
push
push
mov
adc
pop
punpckhwd
icebp
imul
pop
std
ins
mov
jb
adc
inc
leave
lahf
es
lods
mov
mov
jg
sti
retf
jg
popa
mov
push
addr16
movs
popf
in
aaa
in
enter
fdiv
sbb
addr16
push
enter
lock
xchg
fisub
(bad)
push
scas
dec
cli
mov
cli
(bad)
sbb
fidivr
xor
xchg
jp
xor
in
imul
(bad)
sub
adc
xchg
(bad)
call
out
mov
jecxz
call
add
xchg
mov
jg
push
jmp
mov
inc
or
out
adc
leave
mov
mov
jl
adc
loope
lods
xchg
nop
cmp
sub
cld
inc
popf
xchg
mov
shl
or
fwait
ins
xor
lds
dec
rcr
sbb
(bad)
sbb
fs
sar
or
outs
add
retf
pop
and
adc
mov
mov
add
push
sub
in
hlt
fnstenv
push
add
jae
jns
xor
loopne
retf
xchg
adc
dec
enter
jp
enter
cmp
adc
ins
lods
adc
jnp
adc
sub
ret
or
or
jne
add
sub
push
add
mov
cmps
repz
sbb
jnp
ins
outs
imul
cmp
sar
pop
enter
sub
lods
mov
jp
cmp
in
out
imul
sbb
stos
aaa
(bad)
jns
in
loope
lahf
or
adc
pop
fwait
jne
neg
(bad)
mov
mov
adc
loopne
mov
ret
cmp
repz
(bad)
dec
cdq
cmp
repz
jp
pop
aas
or
outs
fs
and
mov
pop
or
xchg
xchg
cmps
cmp
xor
clc
aad
or
dec
aam
in
mov
pop
inc
ret
push
into
retf
or
(bad)
jae
dec
cmps
loope
mov
mov
ficom
push
popa
scas
aaa
in
cmc
imul
outs
cmp
sti
test
(bad)
call
rcl
out
push
clc
mov
cmp
cdq
push
movs
xor
out
mov
inc
mov
add
jg
mov
xlat
add
ss
test
mov
cdq
inc
test
jmp
mov
jne
inc
jl
pop
pop
adc
mov
dec
fadd
inc
sbb
cmp
test
jp
loop
aam
fdivr
js
std
xlat
loopne
ffreep
push
aad
sbb
xor
lods
ss
int
popa
jmp
cs
jnp
(bad)
jmp
loope
or
cmp
lahf
out
cmp
push
lods
mov
pushf
(bad)
push
test
loope
push
xchg
sub
and
fist
or
popf
cmp
mov
jle
outs
ds
xchg
hlt
mov
repz
push
jp
mov
mov
sub
or
pushf
lock
mov
movs
movs
jge
test
adc
jo
sahf
ja
sub
hlt
mov
push
pop
outs
sub
mov
cdq
push
int
cwde
call
test
retf
loop
pop
push
cmp
imul
sub
test
rcr
je
push
out
xor
mov
sub
test
jmp
mov
inc
sbb
test
mov
xchg
xchg
lahf
scas
xor
dec
sbb
xor
(bad)
pop
xor
add
lahf
xlat
pop
imul
push
outs
sub
jmp
les
cld
sbb
mov
pop
test
sub
adc
stos
add
int
call
mov
sar
sbb
push
dec
xor
push
pop
call
xchg
mov
add
pop
stos
xor
push
inc
or
sub
cmp
xchg
loopne
fidivr
call
cmp
repnz
push
xchg
mov
loope
mov
add
fcmovb
or
aas
cmc
pop
jns
mov
mov
sub
rcr
cmps
(bad)
rcl
shl
retf
mov
adc
leave
inc
push
pushf
xchg
mov
(bad)
xchg
ret
movs
mov
inc
aas
ds
mov
mov
dec
xchg
cmp
sbb
mov
add
adc
jne
jle
(bad)
dec
push
xchg
mov
sbb
(bad)
xor
test
push
int
test
loopne
push
xchg
out
popf
dec
aaa
pusha
xchg
and
cdq
xor
mov
or
lods
pop
repnz
xchg
jmp
jb
mov
dec
push
mov
outs
cld
retf
xchg
repz
jmp
rcl
cmp
fwait
jbe
jl
xchg
ja
jge
out
les
or
or
test
out
lahf
daa
mov
jg
loopne
in
cmp
repnz
cdq
sbb
out
pop
and
push
scas
jno
push
and
inc
les
neg
and
xchg
aas
cli
push
xchg
lahf
pusha
dec
and
inc
jbe
push
mov
mov
mov
sub
repnz
stos
sbb
out
movs
xor
mov
cdq
sbb
cmovp
mov
or
ins
and
or
adc
int
cmps
out
mov
leave
sub
jbe
pop
sti
pop
push
std
sub
mov
sbb
mov
pop
mov
mov
and
fsubp
mov
gs
jno
scas
jecxz
adc
lods
imul
retf
mov
jno
(bad)
push
and
xor
movs
std
and
nop
repnz
loop
sub
inc
add
(bad)
call
not
retf
or
xor
jge
dec
inc
repnz
mov
xchg
push
out
xchg
inc
clc
out
sahf
dec
mov
or
(bad)
leave
mov
cli
and
push
jns
jmp
fld
sbb
add
sbb
sub
test
icebp
fidivr
mov
mov
and
push
xor
mov
mov
retf
fldcw
xor
push
inc
jae
aas
mov
xor
rcr
leave
fmul
inc
cwde
mov
mov
retf
fs
inc
das
dec
push
sahf
mov
xor
cli
rcl
pop
jp
int3
jno
mov
mov
jle
cmp
mov
imul
enter
cmc
mov
ja
(bad)
lods
xor
out
scas
addr16
arpl
or
or
pop
mov
sti
or
or
in
clc
cli
mov
sub
cli
cli
cmp
rcr
mov
neg
and
(bad)
pop
cli
cmc
jne
pop
sub
sub
inc
and
add
cmp
dec
jae
or
fnstcw
mul
or
les
and
push
dec
inc
fdivr
push
mov
pop
pop
std
in
lahf
pop
lahf
xor
and
cmp
retf
in
fidiv
cmp
push
inc
sbb
bnd
and
in
ret
xlat
nop
out
sbb
inc
sbb
pop
ret
mov
pop
test
mov
cmp
sub
into
aaa
push
mov
push
repnz
push
bound
push
xchg
dec
mov
mov
jmp
mov
push
test
jecxz
add
movs
add
mov
popa
cwde
or
add
jmp
outs
inc
mov
aad
mov
retf
(bad)
fdiv
xor
cmp
cmovns
jno
dec
push
ins
fdivr
jns
sbb
mov
add
mov
xchg
inc
cmp
mov
inc
add
int
adc
add
cwde
ret
jne
or
div
aaa
ja
les
jl
xchg
jl
aad
pop
jp
rol
scas
xor
jg
or
xchg
add
mov
repz
sbb
push
(bad)
jle
push
arpl
popa
mov
arpl
(bad)
fild
mov
sub
lea
xor
inc
mov
mov
or
push
xchg
jmp
fwait
and
add
push
sub
inc
cmps
(bad)
mov
xchg
loope
(bad)
imul
dec
jecxz
xor
dec
mov
add
push
add
xlat
inc
(bad)
retf
mov
ror
popa
mov
shl
xor
and
cmps
jo
mov
xchg
sbb
push
pop
sbb
out
dec
mov
or
dec
jae
loop
mov
mov
nop
mov
aad
rol
or
dec
pop
add
cmp
(bad)
push
sbb
xor
iret
in
clc
lea
and
push
jb
nop
mov
je
(bad)
aam
add
jae
jmp
mov
cs
leave
out
retf
or
sbb
scas
and
(bad)
fnsave
test
add
push
fsubr
popa
dec
cmc
fyl2x
sub
inc
in
hlt
pop
xchg
addr16
mov
cmps
mov
test
popa
popa
and
dec
dec
pop
fmul
push
mov
hlt
(bad)
push
add
push
jne
ja
stos
or
out
into
sbb
mov
cs
pop
add
loope
inc
add
aaa
sub
cmp
pushf
cdq
iret
dec
mov
call
push
cld
les
mov
push
mov
fld
scas
xor
mov
or
stc
adc
mov
mov
das
push
jns
or
mov
sbb
stc
pop
cmps
push
bound
outs
add
les
ins
aam
es
out
adc
sbb
(bad)
pop
ja
jo
jmp
mov
xchg
push
sub
and
add
loop
pop
rdtsc
xlat
leave
bound
lahf
xor
outs
(bad)
adc
or
or
mov
(bad)
vshufps
xchg
adc
pop
dec
cdq
outs
push
push
pop
push
fbstp
sbb
and
test
data16
sbb
ror
pop
adc
lods
xchg
int3
mov
jmp
fsubrp
adc
out
mov
(bad)
or
es
fnstcw
inc
shr
daa
add
aas
div
imul
jmp
in
mov
jne
inc
lea
popf
and
push
mov
sub
mov
sbb
sbb
mov
(bad)
mov
dec
sbb
ins
mov
sbb
mov
sar
dec
(bad)
dec
cmp
push
jmp
retf
sbb
xchg
cld
imul
dec
imul
ror
out
ret
dec
movs
pop
ds
(bad)
fldenv
jnp
enter
add
or
cmp
xor
jp
mov
mov
les
mov
bswap
gs
popf
xchg
sub
fs
dec
sbb
lea
push
mov
neg
adc
add
inc
push
xor
out
test
inc
dec
idiv
cmp
sub
dec
psubsb
cld
dec
push
jp
or
jle
cmps
cwde
xor
or
cmp
push
nop
and
jne
and
sbb
pop
adc
fstp
stos
add
lds
cld
or
iret
fild
lods
cmp
pop
add
repnz
icebp
add
sub
mov
int
inc
adc
lds
lods
ja
mov
sub
std
jae
pushf
mov
jns
pop
mov
loop
loopne
cmps
sub
jb
lods
arpl
cs
mov
jne
xchg
lahf
xchg
retf
push
xor
gs
popa
hlt
inc
pop
jo
test
dec
out
test
test
xor
nop
mov
sub
and
jno
or
popf
(bad)
mov
inc
fisub
sub
inc
(bad)
adc
test
dec
sbb
out
in
inc
sbb
cwde
mov
mul
cmps
push
inc
push
(bad)
loopne
push
iret
adc
adc
les
push
icebp
dec
pop
jo
std
dec
movs
sub
sti
outs
sbb
xor
lahf
sbb
sbb
repnz
shl
mov
addr16
ins
out
add
dec
ins
add
mul
lahf
adc
inc
sub
ja
popa
add
test
call
cli
jo
out
lock
inc
pop
nop
mov
sbb
push
pop
jecxz
(bad)
adc
data16
jmp
lahf
sar
stos
fidiv
pop
iret
out
adc
mov
inc
pop
adc
bound
dec
cmps
mov
and
inc
cdq
pop
mov
in
fidivr
jae
adc
ror
push
pop
cmp
sar
and
adc
sti
cwde
inc
sub
ds
mov
mov
pop
in
lahf
pop
add
mov
fdiv
stos
sub
or
inc
push
or
xchg
jmp
inc
xor
mov
scas
lds
scas
adc
out
repz
data16
and
push
or
(bad)
std
jbe
jecxz
aaa
add
xor
xchg
push
xor
inc
sbb
in
test
rdtsc
outs
cdq
js
jb
(bad)
(bad)
stc
sbb
lahf
push
mov
popa
(bad)
iret
movs
sbb
cdq
and
sbb
mov
add
push
pop
(bad)
pop
adc
adc
mov
ror
mov
fisubr
imul
mov
push
sti
pop
push
into
push
sub
jl
iret
shl
(bad)
push
jnp
out
push
mov
js
stc
loope
dec
fimul
dec
inc
call
shl
fcomip
imul
pop
test
fwait
cli
jbe
mov
dec
and
jp
mov
lods
in
mov
jb
fsubr
loope
pusha
mov
xor
(bad)
ret
enter
gs
push
enter
add
add
lea
test
jmp
add
xchg
mov
pusha
xor
and
test
adc
cli
bound
fisttp
cmc
jmp
lahf
stc
sub
mov
adc
icebp
xor
dec
cdq
xor
repz
addr16
xchg
loope
xchg
or
or
iret
jns
out
pushf
adc
addr16
mov
dec
jle
scas
push
nop
jne
add
dec
int3
mov
bound
shl
outs
dec
pop
mov
mov
add
mov
push
pusha
(bad)
mov
mov
cmp
mov
sbb
jb
cli
inc
push
ja
sub
jnp
call
mov
loope
into
cmp
shr
cmp
ds
lahf
or
mov
inc
jbe
cmp
sar
dec
cmps
xchg
icebp
xor
mov
cmp
jo
jp
cmp
push
stos
fcmove
cmp
inc
add
loopne
ins
add
xor
test
fild
jge
jae
jno
xchg
xchg
je
das
aas
outs
jb
sub
mov
pusha
adc
sahf
dec
ret
outs
fwait
mov
mov
(bad)
hlt
arpl
jmp
push
ret
jno
xchg
xlat
and
lea
(bad)
and
adc
inc
int
mov
xor
mov
fisubr
sub
xor
retf
mov
mov
mov
test
cmp
popf
or
adc
mov
sub
sbb
imul
jge
ret
and
aaa
fdiv
ret
push
adc
inc
shr
sbb
adc
dec
jecxz
mov
jge
xchg
or
pop
aaa
mov
jl
fdiv
cmp
cli
outs
sbb
xchg
rcr
scas
(bad)
(bad)
sbb
in
sahf
(bad)
(bad)
fcmovbe
div
jmp
ja
ror
push
dec
(bad)
push
sahf
scas
stos
adc
push
push
repz
out
mov
arpl
add
xor
dec
sub
fcom
in
loop
mov
adc
scas
mov
xor
sbb
fdiv
sub
and
popf
cld
xlat
sbb
sub
fmul
adc
sbb
xor
lods
dec
sub
pop
retf
lods
xor
xchg
mov
mov
test
pop
mov
lock
fcomp
xchg
ror
add
ret
out
retf
je
pop
push
mov
mov
inc
mov
xor
sub
test
inc
ds
(bad)
add
lods
mov
dec
add
xchg
mov
movs
stos
std
dec
iret
xchg
lea
push
sti
aad
adc
jmp
jle
inc
xchg
(bad)
(bad)
sbb
sbb
or
push
xor
lds
ja
adc
or
mov
xor
push
xchg
dec
mov
add
lock
push
mov
nop
xchg
into
mov
mov
mov
js
xchg
pop
mov
cmc
out
frstor
mov
xor
or
xor
sbb
inc
loop
dec
idiv
adc
push
in
inc
inc
vpshufhw
jne
scas
cmp
in
cli
int3
addr16
(bad)
(bad)
pushf
cmp
push
pop
dec
and
fisubr
jp
adc
cdq
push
inc
mov
inc
add
cmp
std
push
dec
jnp
call
outs
sbb
pop
pmulhuw
icebp
mov
mov
aam
adc
stos
mov
xchg
pop
adc
mov
dec
xor
arpl
xchg
sub
mov
out
sbb
sbb
mov
popf
lods
cs
add
fdivr
pop
mov
add
add
fstp
jmp
push
push
cmps
test
sub
cs
je
mov
push
xchg
imul
push
lds
test
(bad)
retf
ss
stos
jecxz
daa
cmp
inc
imul
adc
dec
fwait
add
stos
xchg
int3
rol
mov
push
xor
mov
or
jo
pop
cmp
xchg
sahf
ficom
push
mov
inc
mov
push
call
mov
leave
jge
or
add
mov
and
in
(bad)
fwait
jl
lahf
loope
and
cmps
leave
mov
jmp
push
cli
xlat
dec
inc
test
or
push
into
call
out
or
ror
je
xor
das
cmp
dec
jmp
jg
fdivr
nop
in
fld
clc
ss
mov
ins
pop
test
adc
adc
sub
inc
js
xchg
mov
xchg
pop
data16
retf
cdq
mov
add
sbb
cmp
cld
jg
sub
xchg
mov
pushf
xchg
jns
jns
dec
call
mul
pop
fcomp
mov
stc
call
cmp
xor
cmp
push
stc
popf
mov
loopne
movs
add
(bad)
(bad)
xchg
lea
inc
(bad)
cli
stos
adc
(bad)
mov
bound
sbb
pop
stos
stos
jmp
movs
(bad)
xor
mov
(bad)
lahf
mov
mov
shl
push
push
jge
(bad)
xor
loope
push
dec
xchg
cmp
lock
inc
call
test
ret
jecxz
add
out
mov
inc
jge
xlat
call
jmp
rcr
cmp
sbb
fst
mov
test
dec
(bad)
sub
test
sbb
jbe
into
sbb
mov
mov
ins
mov
and
mov
shr
daa
xchg
adc
sahf
dec
jnp
or
adc
ret
iret
xor
mov
and
das
and
push
jmp
shl
retf
pop
push
xchg
xchg
mov
jmp
inc
xor
jb
jns
sbb
and
test
retf
loope
punpcklbw
cmps
stc
lea
ficomp
sbb
shl
sub
je
les
iret
adc
fisub
cmp
mov
and
loopne
int3
out
stc
shl
xor
ret
mov
cmp
jg
dec
loop
xchg
das
(bad)
xchg
xchg
mov
mov
cli
cmp
bound
cmps
or
jle
push
bound
dec
sbb
lea
fcomp
cmp
jl
jae
cli
and
jmp
push
out
lods
ss
fwait
into
adc
test
mov
jp
lods
das
mov
out
(bad)
loope
mov
popf
or
cs
test
or
in
sbb
mov
xor
out
imul
(bad)
push
push
cmps
test
arpl
mov
inc
fisubr
sbb
bnd
(bad)
loop
int
shl
jmp
cdq
pop
pop
xchg
cmp
xchg
mov
pop
into
inc
loopne
gs
pop
pop
shl
in
movs
clc
into
fwait
adc
rcl
pop
call
push
idiv
jbe
int3
xchg
mov
sbb
cmp
dec
retf
jg
(bad)
movs
ret
mov
mov
jge
aad
adc
ja
dec
adc
nop
add
sub
ins
ss
jle
xchg
mov
cmp
not
push
inc
lock
pop
into
jbe
xchg
repz
in
(bad)
and
mov
mov
xchg
mov
sti
scas
mov
sbb
mov
add
and
xor
xlat
mov
lock
cwde
mov
(bad)
jl
movs
popa
cwde
cli
inc
aas
fucomip
or
or
mov
idiv
xchg
das
sub
add
push
stos
cmps
test
int
cmc
and
sahf
mov
in
popf
scas
and
ficom
loop
sahf
daa
mov
jne
xor
ins
xchg
mov
sbb
inc
cmps
in
loope
inc
ficomp
xchg
imul
xlat
ja
and
mov
pop
mov
ss
mov
dec
push
jl
jae
xor
pop
retf
aam
mov
idiv
stos
pop
cmps
pop
or
pop
jmp
(bad)
cmp
mov
mov
jmp
or
addr16
(bad)
in
(bad)
fcmovnbe
add
sti
sbb
adc
imul
retf
(bad)
adc
inc
leave
xor
in
mov
les
pop
jns
outs
aad
mov
loop
inc
mov
jo
jg
mov
push
shl
jns
mov
mov
loopne
into
scas
cmps
data16
pusha
iret
dec
push
test
sub
pop
mov
cmp
inc
push
mov
jne
inc
lods
push
pop
mov
push
std
mov
jo
mov
inc
ror
fisub
jmp
pop
push
add
pop
mov
dec
add
sar
(bad)
cli
lods
or
jns
sub
ret
xlat
push
test
or
xor
inc
lock
pop
mov
push
or
lods
out
shl
enter
mov
mov
sbb
or
mov
icebp
jns
dec
test
retf
popa
sar
push
jecxz
add
sbb
jmp
(bad)
movs
add
scas
in
movs
mov
mov
inc
add
in
shr
seto
jle
sbb
ror
test
(bad)
and
xchg
sub
adc
mov
pop
das
adc
pop
leave
stos
jno
sbb
xchg
ss
or
daa
hlt
aas
or
adc
xchg
and
stos
ins
pop
jne
sub
cmps
lods
mov
fwait
pusha
lds
call
loopne
jb
jl
es
or
aaa
push
pop
jb
xchg
push
and
push
dec
mov
cwde
in
mov
adc
mov
mov
iret
ja
adc
cld
sbb
fwait
mov
push
nop
sbb
inc
int
mov
sbb
enter
xchg
add
or
xor
cmp
aas
in
inc
mov
push
xchg
jmp
push
pop
sbb
cmp
mov
jl
mov
push
adc
test
mov
sub
clc
ret
jo
fmulp
mov
add
rcr
and
sbb
sahf
cmp
mov
pushf
cmc
jmp
push
or
push
fdivr
mov
je
ret
jbe
add
(bad)
aad
into
imul
popa
inc
imul
ds
retf
sbb
movs
inc
out
sbb
js
mov
ret
jbe
jp
jmp
push
jge
call
imul
or
outs
and
aad
jno
and
mov
jae
pop
dec
inc
fbld
inc
sar
pop
jne
retf
xchg
nop
popa
iret
mov
dec
(bad)
sub
or
dec
adc
ds
dec
xor
and
cmc
shl
xchg
mov
bound
pop
cwde
rcr
push
adc
movs
sbb
fst
bound
xor
jmp
out
fdivr
ss
push
cwde
push
cmp
sub
push
cmp
hlt
cmp
imul
bound
call
xchg
aaa
std
jae
dec
push
add
fidiv
scas
jne
mov
imul
sbb
jbe
test
mov
mov
dec
mov
out
(bad)
pushf
cs
jl
mov
adc
inc
mov
push
push
in
mov
sbb
adc
pop
out
retf
mov
push
mov
ss
mov
inc
jae
cmp
add
popf
fadd
call
mov
pop
call
xchg
mov
daa
mov
adc
mov
jge
cwde
xchg
scas
sbb
or
sti
add
shl
fwait
out
push
call
out
hlt
adc
dec
or
xor
xchg
fstp
pop
or
cmp
push
dec
fs
iret
mov
scas
push
mov
(bad)
xchg
int3
lahf
pop
aad
xor
jae
jl
scas
xchg
lods
inc
sub
xchg
adc
sahf
push
inc
int3
std
mov
inc
ds
enter
pop
pop
(bad)
xchg
sbb
or
(bad)
test
test
(bad)
out
xchg
bound
or
adc
or
cdq
out
push
mov
mov
mov
add
stos
out
mov
ret
cli
psubsw
jle
and
jb
inc
jbe
and
jmp
rol
adc
inc
ud2
xchg
and
popa
ret
adc
sbb
lahf
or
jg
outs
inc
sahf
es
aam
iret
xor
ja
loope
mov
(bad)
lock
retf
gs
xor
jle
in
and
fisttp
inc
arpl
jne
mov
mov
xlat
int3
js
mov
jecxz
clc
adc
pop
in
mov
fdivr
sbb
cmps
cmp
sub
aaa
lods
mov
repz
ret
adc
stos
mov
and
sti
adc
ins
cmps
in
(bad)
and
hlt
mov
xlat
dec
and
(bad)
mov
rcr
(bad)
push
movs
rcr
mov
(bad)
add
mov
out
push
xchg
xor
movs
adc
lock
sahf
adc
mov
inc
int
mov
(bad)
xchg
rol
adc
sub
movs
jo
mov
ffreep
out
test
mov
and
or
mov
dec
outs
push
(bad)
mov
jl
jp
mov
jmp
cmps
hlt
sbb
pop
sbb
popa
mov
ror
movs
stos
ror
(bad)
dec
fld
mov
iret
in
aad
push
icebp
fidiv
mov
and
mov
xor
ret
jbe
aas
and
ror
test
fidiv
adc
mov
pop
imul
ins
xchg
cmp
scas
mov
sbb
sub
adc
cli
sub
push
fld
std
jl
lods
xchg
jno
xor
or
enter
test
mov
push
sub
ret
movs
imul
adc
out
daa
mov
sub
imul
inc
push
push
jns
les
aaa
inc
push
iret
dec
sbb
or
(bad)
(bad)
imul
imul
test
(bad)
push
lods
js
mov
and
fnstenv
jmp
xor
popf
arpl
call
repnz
jge
fisubr
and
(bad)
js
fwait
pop
test
stos
adc
inc
sub
add
in
sub
std
movs
ret
lock
xchg
cmps
repnz
mov
fldcw
and
push
push
mov
(bad)
rcr
sub
int
push
xor
push
mov
jmp
test
fadd
mov
outs
jle
adc
jp
sub
xchg
adc
aad
and
(bad)
adc
iret
hlt
sub
int
mov
pop
inc
xchg
(bad)
xchg
rol
adc
ds
cmp
fsub
repnz
and
daa
call
int3
xor
or
test
jge
cmps
jno
xchg
xchg
enter
gs
mov
cdq
and
dec
aad
mov
loope
xor
mov
xor
cs
jb
adc
inc
adc
daa
pop
adc
scas
xor
pop
dec
jecxz
push
mov
xchg
scas
js
mov
(bad)
and
cwde
test
adc
mov
mov
and
mov
jg
clc
in
div
push
xchg
pop
fldenv
adc
or
pop
test
push
add
enter
pop
test
in
xor
mov
mov
ret
(bad)
int3
loopne
xlat
das
and
in
inc
mov
js
aad
lods
sar
inc
push
(bad)
mov
xchg
pop
das
cld
jns
mov
xchg
jmp
jecxz
aad
imul
pop
xchg
mov
pop
mov
dec
jmp
out
push
mov
mov
mov
lds
(bad)
push
data16
xlat
adc
or
push
push
or
sbb
and
jae
pop
jge
xchg
inc
jb
fild
ins
xor
or
aam
lahf
fsub
test
rcl
nop
mov
adc
test
cmp
mov
mov
mov
cmc
push
out
jne
xlat
mov
pusha
cmp
rcl
xchg
pop
cwd
push
dec
repz
xchg
sbb
(bad)
mov
or
or
std
pop
adc
mov
fisttp
and
dec
cs
push
and
mov
leave
mov
dec
jle
inc
rcr
mov
adc
cmc
clc
call
add
sar
stos
cs
and
mov
aad
ffree
fsub
retf
loope
dec
cmc
pop
outs
outs
pop
xor
clc
cmp
jge
movs
xor
cmps
clc
cdq
sub
fldcw
sbb
inc
push
pushf
movs
dec
xchg
sar
push
push
les
fistp
inc
mov
sub
dec
jp
daa
loopne
pop
stos
call
push
fwait
jecxz
loopne
shl
dec
stc
loopne
adc
mov
xchg
ja
fld
mov
sub
cmp
sub
push
ja
inc
sbb
pusha
ror
mov
pushf
adc
pop
xlat
ficom
pop
fldenv
bound
add
arpl
in
xchg
jge
in
out
je
test
cmp
aaa
clc
enter
adc
inc
(bad)
jecxz
mov
test
adc
idiv
repnz
inc
cmp
aad
cmp
mov
sub
pop
test
jne
inc
xchg
cld
add
cld
sti
mov
push
xchg
dec
push
jns
int
and
lods
shr
add
out
icebp
pop
imul
adc
les
stos
test
movs
sub
xor
sysexit
mov
out
cmps
push
mov
xchg
int
scas
fild
jae
(bad)
je
out
cli
jle
frstor
mov
dec
mov
xor
stc
or
adc
inc
add
leave
or
push
cli
hlt
jae
stos
mov
jne
add
fild
sbb
fcmovu
jge
call
mov
adc
push
lods
jo
jb
pop
std
adc
stc
je
xchg
movs
repnz
stc
sub
scas
hlt
add
aas
xor
cmp
pop
add
out
pop
ret
popa
mov
sbb
add
pop
pop
jle
nop
cmps
pushf
cmp
(bad)
xor
add
xchg
imul
out
pop
pop
jnp
xor
mov
ret
sub
push
lds
in
mov
adc
in
jns
retf
mov
push
out
fwait
clc
mov
cmp
cmc
mov
cmp
ds
fdivr
movs
xor
cmp
lahf
pop
mov
call
imul
lahf
mov
int
movs
xchg
lock
rcr
mov
imul
push
int
dec
mov
repz
push
je
icebp
add
je
sub
xor
and
xor
movs
sub
sti
(bad)
mov
aas
lds
rcl
jg
add
sub
jle
push
fmul
data16
and
jmp
mov
fwait
scas
stos
push
xor
scas
dec
movs
xchg
into
das
jmp
test
inc
cmps
inc
scas
leave
std
xchg
aas
jns
add
movs
fnstcw
sub
mov
ds
rol
inc
dec
stos
daa
lea
pop
fwait
out
cli
cmp
mov
(bad)
or
aaa
xor
cmp
repnz
ins
rcr
cmp
mov
pop
sub
push
jbe
adc
cmp
lods
mov
pop
popa
and
mov
scas
int3
sbb
pushf
mov
jbe
icebp
or
shr
scas
retf
add
pop
xchg
retf
test
xchg
jbe
leave
fisub
pop
and
inc
xchg
or
fwait
loope
les
mov
push
dec
add
mov
push
inc
sub
(bad)
mov
inc
aas
hlt
outs
mov
mov
cmp
sub
xor
popf
loopne
(bad)
stos
push
xchg
xchg
test
aad
retf
fdiv
retf
mov
jne
cmc
repz
inc
bound
mov
ret
xlat
add
retf
mov
shl
pop
ss
cdq
add
xlat
hlt
cs
mov
arpl
sub
out
iret
rcl
pop
dec
hlt
dec
add
sub
ja
fidivr
(bad)
pop
mov
pop
retf
iret
mov
or
push
mov
jg
or
stc
push
ror
mov
dec
movs
add
cdq
ret
adc
stc
sub
pop
sub
pop
jge
cmp
add
sub
and
jecxz
(bad)
in
aaa
jbe
hlt
sub
mov
je
test
je
jbe
add
mov
push
ds
add
jne
popf
loopne
mov
(bad)
mov
sbb
dec
sbb
add
dec
jo
cmp
iret
test
scas
mov
cmp
hlt
dec
adc
push
sahf
jne
pop
mov
pop
bound
arpl
pop
dec
dec
dec
or
lahf
js
inc
push
mov
mov
stos
shr
ror
(bad)
and
shr
pop
cmp
pop
ins
adc
fwait
pop
pop
ss
aam
cmp
outs
movs
jle
sub
fldenv
arpl
cli
and
jnp
movs
rcl
dec
jns
lahf
fs
dec
jb
lds
loopne
push
fadd
mov
data16
cdq
xchg
sub
retf
sbb
inc
ret
(bad)
loope
fisubr
outs
cli
push
aam
fs
fist
pop
cmp
sub
in
div
dec
jge
push
mov
or
add
loopne
push
push
(bad)
pop
(bad)
sub
mov
push
rcr
movs
fldcw
hlt
mov
mov
aad
jnp
ins
add
adc
pop
ins
sar
dec
cmps
sti
adc
fsub
xor
or
inc
in
and
adc
push
jl
jae
retf
rcl
test
mov
jl
sub
jmp
mov
int
push
inc
mov
rcl
mov
jg
xchg
jg
jp
mov
call
in
mov
pop
je
jmp
sahf
pushf
js
push
retf
test
jo
pop
test
pop
jne
outs
sub
shr
je
xchg
mov
mov
bound
retf
scas
add
and
mov
nop
or
xor
push
pop
movs
(bad)
ins
pop
sub
sub
push
inc
and
adc
push
mov
(bad)
pop
nop
push
push
ins
jns
add
hlt
adc
gs
or
push
inc
lahf
icebp
loop
cs
imul
das
pop
sahf
pop
in
aas
push
pop
jne
xor
imul
xchg
sar
and
stos
pop
lods
push
inc
jne
test
push
fcmovbe
xor
call
les
ror
int
cmp
mov
out
gs
rol
ds
dec
xor
iret
ret
es
imul
xchg
sahf
enter
dec
dec
out
lods
lahf
sti
pop
sbb
xor
xchg
and
imul
test
push
inc
shl
adc
pop
pop
cld
xor
lea
inc
ins
stc
call
cmp
retf
sbb
stos
add
mov
cmp
loop
rcl
or
mov
jo
and
out
inc
cmp
pandn
mov
xlat
fwait
mov
cmc
nop
dec
sub
mov
mov
xor
pop
fucomip
fcomp
inc
and
mov
sar
dec
ins
push
jb
shr
sbb
stc
mov
pop
dec
(bad)
or
(bad)
jp
mov
test
das
or
mov
or
dec
mov
push
lds
pop
in
fdiv
movs
lock
pusha
adc
push
mov
xor
sbb
and
ins
out
push
mov
mov
push
mul
sbb
inc
lock
movs
pop
or
stos
dec
lods
mov
lods
mov
and
aam
fisttp
inc
loop
mov
addr16
xor
iret
lahf
(bad)
xor
xor
mov
push
dec
sub
mov
(bad)
sbb
push
popf
add
daa
nop
cmp
imul
jge
retf
icebp
mov
loopne
or
test
add
jns
fstp
cld
adc
out
add
and
jns
inc
mov
jnp
push
mov
out
inc
nop
add
fst
aad
ror
aas
or
mov
lods
add
aaa
imul
leave
rcr
xor
xor
push
(bad)
and
push
xchg
cdq
cld
cmp
push
sbb
mov
mov
sbb
mov
mov
xchg
and
clc
xchg
mov
jae
loopne
add
inc
int3
add
add
int
mov
data16
ins
loopne
mov
sub
mov
cmp
out
ds
aaa
add
mov
mov
int3
mov
mov
pop
sub
inc
in
call
add
addr16
dec
fwait
jae
inc
mov
loop
mov
gs
sub
push
xor
and
jl
add
and
sbb
dec
jo
jle
jno
in
in
fwait
push
bound
mov
fimul
and
cmp
push
mov
mov
add
clc
mov
push
(bad)
popf
cdq
fwait
rcl
adc
lods
test
retf
mov
ins
pop
mov
pop
push
int
in
(bad)
mov
stos
add
xor
(bad)
adc
xchg
cmp
cmp
in
add
inc
icebp
les
jge
js
dec
fwait
mul
sbb
push
adc
xchg
inc
cmp
fwait
dec
sahf
sbb
xor
pop
shl
leave
popf
xchg
imul
push
jne
cmp
xchg
add
cli
ja
add
cmp
xchg
iret
push
pop
pop
mov
xor
and
nop
push
push
test
aam
mov
aaa
fwait
pop
ja
sar
movs
cwde
adc
retf
retf
mov
(bad)
jnp
hlt
aad
xor
popa
(bad)
dec
lock
mov
pusha
out
and
or
and
pop
mov
sbb
xor
xchg
iret
dec
nop
imul
aas
sbb
xor
loopne
aaa
(bad)
jne
data16
lock
idiv
sbb
scas
fs
mov
ficomp
mov
(bad)
jg
mov
test
mov
pop
fld
inc
and
mov
cmc
jno
out
lea
rcl
pop
push
loop
add
sahf
xchg
outs
jle
jge
mov
fisttp
idiv
xchg
dec
push
add
jecxz
mov
dec
jecxz
xor
scas
mov
leave
(bad)
hlt
jp
fwait
and
and
dec
ja
jbe
gs
adc
scas
inc
mov
outs
cdq
push
and
mov
fild
jns
sbb
outs
mov
inc
icebp
test
addr16
xchg
mov
inc
iret
hlt
out
fisttp
adc
or
adc
mov
lock
int
inc
in
xor
sub
sbb
retf
(bad)
pop
add
div
xchg
mov
add
test
xchg
pop
das
mov
cmp
sahf
ret
imul
sbb
push
jmp
mov
mov
stc
add
lock
add
stc
call
out
(bad)
fisubr
mov
lods
jg
out
pop
shr
inc
mov
adc
(bad)
retf
pop
mov
dec
(bad)
sbb
int
xor
jecxz
int
adc
mov
aad
xchg
mov
int3
retf
fisttp
inc
pop
and
int3
pop
jl
in
pop
lea
sbb
movs
shl
cmp
out
jge
rcr
sub
sub
loope
imul
push
inc
imul
fsub
sbb
add
daa
jge
mov
dec
xor
mov
in
ins
shl
jmp
rol
daa
push
sub
jecxz
sub
retf
fcmovbe
into
mov
popf
aam
xor
test
test
sub
lock
(bad)
xchg
icebp
xchg
pop
jg
cmc
loope
es
dec
mov
xchg
mov
sub
and
mov
xor
mov
push
mov
or
sub
pop
jne
mov
cmc
xlat
rol
mov
sbb
ret
sahf
cdq
cmp
out
push
push
add
or
xchg
mov
fs
in
repnz
dec
dec
cmp
cmc
in
push
jp
repnz
xor
push
dec
jne
nop
shr
(bad)
lods
popa
dec
shl
dec
shr
fidiv
xor
scas
push
fcmovnu
xchg
mov
fs
fistp
xchg
mov
and
fs
pop
or
test
jge
jmp
mov
pop
jo
xor
sbb
adc
xlat
ror
fwait
fs
fwait
loope
pop
loopne
or
inc
xor
jno
xchg
shl
and
sub
out
or
add
cmp
cdq
pop
adc
lahf
adc
xor
push
add
cmp
or
cld
push
inc
repz
sub
or
or
movs
dec
pop
std
lods
fst
paddd
pusha
ja
push
jae
movs
pop
js
jb
dec
test
sub
movs
pop
mov
and
lahf
lds
mov
into
(bad)
add
test
cmp
inc
(bad)
mov
ror
add
lods
out
pop
and
repnz
and
ret
fimul
fadd
cmp
jle
sbb
jne
jl
ret
outs
jmp
mul
pop
and
ins
aam
pushf
(bad)
fucomip
add
icebp
mov
sub
leave
mov
pop
les
jg
fst
data16
fld
fimul
lock
mov
jle
add
or
outs
xchg
dec
xor
outs
ss
jo
mov
(bad)
jmp
nop
clc
iret
int3
inc
out
and
inc
fstp
push
cdq
or
frndint
stos
inc
lahf
sub
fidivr
mov
mov
sbb
nop
mov
rol
push
leave
mov
js
xor
mov
push
inc
in
mov
push
or
fxch
outs
ins
push
dec
mov
xor
jg
loopne
aaa
pop
cmp
push
push
mov
push
pop
jp
addr16
sbb
dec
jge
sbb
enter
rcr
popa
inc
xor
rol
movs
cmp
xor
or
enter
dec
jb
jno
loope
js
fdivr
fsub
pop
test
pop
test
mov
pop
or
mov
mov
mov
mov
lock
int3
fnstcw
neg
dec
pop
mov
mov
cmp
push
xchg
or
jecxz
xor
add
imul
add
push
popf
mov
and
jmp
arpl
ret
(bad)
nop
or
in
xchg
xchg
out
adc
or
jne
cmp
and
ror
popf
sub
mov
jb
sbb
fmul
sbb
in
sub
inc
mov
pop
test
sbb
jns
not
sub
popa
ins
fsub
dec
imul
sbb
xchg
mov
daa
or
inc
movs
mov
in
mov
lea
and
scas
sbb
lods
xor
mov
dec
pop
scas
cmp
dec
mov
mov
xor
lahf
dec
adc
out
push
sub
not
or
movups
shl
cmps
dec
jne
leave
std
add
jne
add
jmp
ja
mov
dec
mov
inc
sahf
lods
pushf
inc
xor
rol
sub
push
inc
fwait
sbb
arpl
jmp
mov
dec
std
or
xor
rol
movs
sub
cmp
mov
sti
div
and
outs
cwde
jb
das
js
out
mov
out
fwait
popa
ret
ins
add
in
test
call
je
dec
mov
sub
cmps
popa
or
mov
stos
inc
fild
(bad)
addr16
imul
out
mov
gs
mov
repz
das
sar
jge
fsincos
pop
mov
jle
ins
mov
adc
das
adc
mov
jne
je
fdivr
vmread
mov
sbb
adc
inc
cld
shl
jge
lea
add
xor
popf
push
sub
and
xor
jne
adc
adc
clc
sub
jmp
or
test
sbb
js
or
ja
daa
ret
push
cmp
(bad)
and
je
repnz
cmp
push
xrstor
scas
test
int3
push
scas
loope
jae
mov
call
popf
dec
int
pop
add
mov
sub
sub
fst
adc
mov
or
bound
sahf
mov
mov
push
lea
mov
addr16
xchg
cmc
fbld
jmp
fcomp
jnp
arpl
rol
popa
xor
popa
jo
rol
fbstp
or
arpl
cwde
pop
xor
xor
mov
inc
xchg
fbstp
cmp
xchg
retf
or
and
test
push
(bad)
xor
(bad)
cwde
mov
sbb
fistp
out
lock
(bad)
mov
sbb
xchg
scas
push
push
mov
test
push
push
jmp
adc
pusha
mov
fsub
xor
bound
xor
inc
or
mov
adc
push
dec
inc
stos
out
sbb
aad
and
mul
repz
sub
cmp
adc
(bad)
shl
mov
xchg
call
mov
pusha
xor
sub
cmp
dec
mov
jmp
loop
test
push
mov
push
pushf
jnp
sub
inc
les
xchg
nop
pop
mov
sbb
and
and
sub
pop
(bad)
nop
jp
shl
mov
sub
xchg
dec
outs
std
aas
sbb
lahf
nop
mov
data16
and
(bad)
sub
mov
inc
sub
mov
xor
jle
adc
push
adc
adc
ret
sar
add
outs
scas
lods
mov
and
(bad)
pop
adc
sahf
jns
in
arpl
out
sahf
movs
pusha
neg
leave
xor
mov
ret
xor
and
jbe
or
movs
out
xor
fstp
mov
dec
iret
and
push
jp
inc
sbb
stos
push
ins
fisttp
push
add
mov
gs
retf
dec
loop
mov
cdq
leave
jmp
stc
outs
lods
mov
repz
and
xchg
test
xlat
stos
outs
cmp
std
push
data16
mov
inc
hlt
xor
cmc
scas
loope
lahf
and
outs
jae
mov
adc
icebp
ins
xchg
pop
add
mov
mov
mov
sbb
or
gs
mov
cdq
stos
mov
movs
sub
jns
out
pop
adc
out
ins
jae
test
daa
loop
fst
lods
mov
pusha
idiv
bound
cmp
sar
mov
scas
gs
shr
icebp
mov
dec
mov
daa
ror
dec
int3
jae
jne
push
push
mov
push
mov
mov
loopne
aad
mov
push
mov
mov
cmp
mov
add
aam
imul
lods
pop
dec
(bad)
or
rcl
pop
mov
or
fwait
ret
sbb
push
and
ss
cmp
jbe
pop
ror
add
jb
and
aas
mov
mov
add
or
jmp
mov
sub
outs
pop
scas
loopne
ins
nop
pushf
jbe
and
movs
int3
test
fbstp
fisttp
pop
enter
aas
ror
daa
push
push
mov
xchg
and
pop
mov
push
jle
cmps
loopne
outs
mov
rcr
sub
ret
cmps
imul
pushf
or
loop
arpl
js
mov
sbb
push
aad
dec
in
add
ret
sbb
mov
xchg
and
mov
(bad)
mov
in
pusha
or
xchg
mov
pusha
cli
js
jp
test
mov
pop
fs
xor
lods
fwait
out
jnp
in
mov
jb
and
jp
lea
mov
enter
mov
dec
cmps
mov
mov
jno
ficom
xor
and
shl
pop
fsubr
stos
mov
int
mov
je
pop
lds
test
mov
mov
in
(bad)
loopne
pop
sub
test
icebp
imul
inc
gs
inc
xchg
jnp
dec
shl
mov
call
push
pop
arpl
cmp
push
push
pushf
sub
fidiv
sahf
cwde
jbe
mov
xchg
mov
popa
xchg
aam
mov
bnd
jo
cmp
cs
mov
loopne
cmp
push
adc
jp
push
idiv
test
adc
mov
into
cmp
(bad)
mov
mov
or
js
add
inc
cmp
(bad)
popa
pop
(bad)
mov
addr16
jno
sbb
iret
mov
rol
outs
sbb
and
xor
jns
or
leave
and
inc
adc
push
sbb
jl
and
shl
inc
mov
push
and
bound
repnz
mov
(bad)
outs
sti
mov
loop
mov
add
loopne
inc
adc
ins
movntq
jne
(bad)
and
call
jns
sub
jge
mov
call
jne
jnp
out
mov
and
xor
sbb
repz
ins
in
fild
xor
mov
ins
cmps
out
pop
xchg
test
dec
or
mov
xchg
inc
stos
pop
mov
out
and
xchg
mov
outs
push
mov
cmp
aam
loop
pop
test
push
cld
sub
sub
ss
mov
xor
cmp
nop
sbb
inc
jmp
fld
xchg
movs
xchg
sahf
fs
pop
retf
push
std
pop
xchg
sbb
mov
pop
adc
cmp
dec
fbstp
jno
ret
mov
shl
(bad)
mov
test
(bad)
movs
clc
call
mov
and
sub
cld
push
jmp
jno
cmps
sbb
fidiv
das
xchg
hlt
ret
call
add
push
inc
in
or
add
sbb
cmp
test
xor
pop
lock
sub
lock
mov
lahf
test
push
jmp
xchg
aas
sbb
(bad)
xlat
xor
sbb
push
mov
xchg
repz
adc
retf
cmp
iret
cmp
or
jb
push
in
mov
not
push
push
jmp
lods
jmp
pop
cdq
mov
dec
lahf
mov
sbb
push
rcl
repz
iret
adc
lock
push
ret
mov
mov
cmps
int3
imul
clc
je
xchg
push
inc
sub
add
retf
adc
push
test
pop
jb
sahf
pusha
cmp
cmp
jp
add
push
and
hlt
cdq
or
(bad)
cmc
mov
ins
dec
cmp
and
adc
sbb
stos
push
inc
pop
cmp
imul
push
jmp
daa
shl
test
aad
rol
mov
mov
xlat
ret
jno
fcmovb
inc
popf
push
aad
addr16
retf
sbb
(bad)
mov
pusha
jns
xor
jecxz
hlt
pushf
jge
loopne
ds
retf
push
jmp
adc
aas
push
mov
add
pop
jo
xlat
and
sub
adc
jge
mov
(bad)
push
mov
xor
call
jecxz
and
xor
lock
push
nop
adc
test
test
into
scas
cmps
or
jb
fcmovnbe
xchg
lea
outs
xchg
dec
add
std
cmp
dec
mov
clc
mov
pop
cli
jnp
push
or
ins
push
ficomp
add
or
out
call
mov
in
jg
sub
sbb
push
add
std
inc
jle
popa
mov
cmp
or
or
ficom
xor
bound
loope
sahf
mov
xor
cmp
mov
mov
and
out
jl
out
das
mov
lods
jmp
daa
call
mov
test
cmp
ror
stos
addr16
xor
stos
stos
ins
leave
stos
aam
cmp
dec
fmulp
xchg
or
test
ja
ret
aas
loopne
mov
gs
sbb
mov
into
and
push
enter
adc
xlat
jmp
mov
out
ins
out
pop
loop
mov
xor
test
or
adc
jg
sub
adc
rcl
xchg
in
inc
nop
cld
pop
call
leave
popa
inc
add
push
pop
in
cmps
in
adc
(bad)
xor
mov
pushf
jmp
in
jnp
mov
or
pop
(bad)
mov
fsub
or
adc
fld
shl
xor
les
mov
std
daa
jle
xlat
bound
add
loop
adc
pop
daa
into
jne
cmp
fwait
push
scas
pop
mov
mov
jl
adc
pop
ds
xor
cli
imul
adc
cmp
pop
inc
jl
in
iret
dec
mov
inc
xchg
sti
inc
inc
fsub
js
xchg
inc
xchg
push
pop
xchg
movs
ins
aaa
call
mov
xchg
fst
inc
inc
ud0
push
push
shl
cmp
push
push
dec
or
and
int3
add
cmp
gs
xchg
fdivrp
dec
aaa
repnz
xor
ins
sti
test
shl
pop
pop
inc
in
loop
sar
xor
neg
and
jo
(bad)
repz
imul
iret
in
and
mov
hlt
pop
js
pop
ins
pop
cmps
outs
mov
xchg
fcom
cwde
or
mov
adc
lock
mov
or
xor
adc
and
loopne
or
(bad)
xchg
inc
stos
xchg
pop
dec
push
popa
popf
enter
mov
ss
inc
aas
lea
(bad)
popa
aam
or
call
rol
add
fnstcw
scas
sub
fcomp
adc
jp
lods
add
cs
mov
add
push
xchg
enter
inc
imul
ins
(bad)
cmp
xchg
cmc
jl
push
enter
in
mov
fistp
push
ins
cmps
sbb
fstp
icebp
mov
repz
arpl
cdq
mov
sub
sbb
jp
mov
dec
outs
inc
or
nop
adc
pusha
test
cmp
imul
cmc
dec
sub
fs
std
loopne
sbb
fsubp
adc
sbb
push
repz
add
mov
cmp
scas
push
bound
sub
shl
sbb
adc
aas
(bad)
dec
and
add
mov
push
sub
push
or
mov
sub
rcl
leave
add
clc
mov
rcl
ins
fild
ins
test
mov
loop
push
movs
xor
test
test
repz
mov
pop
pushf
mov
movs
xchg
add
add
add
(bad)
cmps
cld
jp
call
daa
xchg
std
sub
lds
and
rcr
jb
jl
sub
push
and
mov
xchg
xchg
les
call
fist
ins
mov
out
in
push
pop
pop
xchg
inc
mov
jle
inc
push
push
mov
sar
push
(bad)
(bad)
mov
test
loopne
inc
adc
sub
and
jecxz
je
pushf
es
sbb
xchg
mov
loopne
cmp
scas
ret
rcr
fs
xchg
je
mov
cli
cmp
and
ret
arpl
inc
xchg
push
data16
xchg
es
std
ret
jns
mov
xchg
xchg
pusha
idiv
scas
jp
xor
stos
push
data16
data16
repz
sub
jmp
loope
mov
mov
out
jg
cmps
jb
xchg
out
push
test
arpl
sub
gs
mov
sbb
shl
call
cmp
sub
fnsave
dec
jl
dec
sbb
adc
mov
(bad)
fild
mov
push
lods
xor
sub
es
shr
ins
pop
ror
jp
fs
test
xchg
pop
mov
dec
jae
jb
lods
icebp
adc
jne
jge
ss
hlt
cli
jp
push
sub
mov
cs
inc
jne
mov
or
pop
inc
jmp
out
and
mov
(bad)
dec
dec
out
cmp
xlat
sbb
push
ja
jo
retf
xor
xchg
cmp
push
push
js
and
mul
lods
movs
ret
xchg
repz
push
iret
mov
fld
add
(bad)
stos
pop
inc
retf
inc
(bad)
fimul
jl
inc
cmp
xor
mov
lahf
dec
pop
cmps
add
xchg
jb
sub
jge
and
mov
jne
or
and
psubsb
call
mov
in
add
(bad)
out
mov
mov
push
jge
jns
and
nop
es
cmp
cmp
loop
or
pop
popf
cld
xchg
xlat
rol
cmps
fidivr
mov
mov
into
aad
cmps
push
aaa
push
cmp
test
arpl
jo
rcr
sbb
loop
cmp
je
bound
cld
and
cmp
out
and
jae
xchg
sub
push
call
test
inc
xor
sbb
jne
push
mov
js
pushf
or
inc
test
outs
lea
fbld
ret
int
jbe
cs
push
cmp
les
hlt
icebp
nop
xchg
test
xor
popf
fcmovb
daa
or
lock
mov
iret
stos
pop
mov
pop
ret
sub
dec
mov
pushf
rcr
dec
repnz
mov
sti
jne
(bad)
mov
or
outs
add
mov
pop
movs
(bad)
out
and
aam
adc
aas
ja
dec
imul
test
out
push
loopne
ins
enter
push
and
cmc
mov
test
stc
stos
enter
pop
call
or
inc
neg
jmp
ins
mov
xor
xchg
cdq
js
lea
mov
(bad)
(bad)
add
stc
push
sar
dec
xchg
push
clc
cmp
and
int
aaa
sahf
(bad)
in
push
jne
ins
xchg
fs
lock
lock
pop
xlat
and
mov
js
clc
xor
inc
xor
push
cmp
cdq
sbb
pop
mov
add
mov
(bad)
outs
adc
popf
shl
xchg
xor
sbb
fucomp
push
mov
jl
es
cmp
stos
stc
stos
push
mov
ja
dec
test
dec
mov
js
fldenv
pop
lahf
adc
sbb
xor
call
pop
leave
push
cmp
and
cld
popf
daa
sub
test
popa
or
(bad)
sub
mov
cwde
leave
fldenv
dec
fsub
mov
pop
fisubr
out
jnp
fimul
push
(bad)
mov
pusha
and
xlat
cld
mov
push
loop
jo
sbb
pop
xchg
(bad)
(bad)
int3
repz
(bad)
into
test
jp
sbb
daa
mov
mov
(bad)
push
jmp
in
mov
sbb
push
(bad)
dec
fwait
add
je
cli
out
or
mov
adc
push
cmp
pop
pop
arpl
mov
or
pop
xor
icebp
cmp
and
data16
int3
mov
jmp
std
sub
mov
jno
jnp
xchg
push
xor
out
cdq
dec
push
xor
mov
shr
jbe
xor
movs
mov
(bad)
cmps
les
enter
scas
jl
movs
push
or
in
pop
aad
push
jp
mul
push
mov
xor
cli
xchg
adc
ins
adc
push
int3
mov
add
in
aad
xchg
xor
mov
inc
jno
pop
ja
xor
je
fiadd
ins
xchg
cdq
in
pop
lock
daa
xor
adc
xchg
mov
push
call
sbb
inc
mov
int3
std
mov
cs
and
cmps
fwait
dec
push
xor
je
pop
ror
mov
or
stos
jnp
xor
pop
loop
pop
fs
mov
add
push
loope
mov
enter
jmp
mov
push
sub
retf
mov
push
mov
stos
push
add
outs
sub
add
inc
mov
jns
int
inc
cwde
xor
jecxz
test
or
sbb
stos
(bad)
xchg
sbb
xor
ins
mov
mov
lds
neg
dec
fmul
rcl
movs
xor
lods
sub
add
ins
sbb
scas
sub
sub
jne
inc
call
ficom
mov
inc
add
arpl
sub
imul
xchg
test
rol
leave
aam
add
(bad)
fsubrp
jb
push
ja
ja
jno
push
mov
int3
xor
test
mov
mov
das
push
xchg
je
mov
pop
ror
jg
or
push
xchg
ss
or
xlat
jbe
or
mov
mov
int
xchg
push
shl
jnp
ins
mov
cmps
mov
aad
mov
aaa
mov
mov
dec
test
dec
stos
jae
cmp
aaa
inc
clc
xchg
cwde
cs
add
inc
pop
mov
mov
cmps
lds
cwde
lock
inc
xchg
cmps
fadd
cmp
js
les
aas
mov
cmc
or
enter
test
retf
cmp
dec
fwait
scas
mov
cmp
outs
in
movs
leave
jne
jmp
adc
mov
fimul
gs
repnz
out
jmp
ja
mov
push
pop
cmps
or
ja
xchg
ins
push
shl
out
fistp
mov
inc
adc
arpl
ret
sub
xchg
rol
retf
sti
xor
xor
outs
mov
pop
mov
mov
lock
jg
push
inc
(bad)
jge
repnz
icebp
ret
pusha
cmps
mov
mov
das
jmp
(bad)
xchg
fidivr
sbb
push
xchg
xlat
in
int
mov
ret
jg
enter
fadd
loopne
cmps
imul
jmp
adc
jmp
mov
mov
ret
and
enter
fisubr
jnp
pop
call
sub
addr16
inc
sbb
lods
xor
fwait
jmp
and
fsubr
or
xchg
shr
xchg
dec
inc
lds
das
pusha
mov
dec
mov
bnd
cmc
mov
inc
stc
aam
adc
push
xchg
in
jmp
rol
adc
or
cmp
das
je
enter
int3
sub
stos
and
bound
ret
ins
aaa
and
jo
int
loop
es
cmp
cmp
jecxz
out
mov
pop
(bad)
ror
cmp
sbb
sbb
aad
clc
movs
push
stos
scas
clc
pop
xchg
call
adc
popa
shl
ret
sub
or
dec
scas
xchg
xor
sub
lea
aas
sub
xchg
mov
aas
or
mov
push
sar
stc
fnstcw
push
fimul
pop
ds
jp
adc
xor
sti
retf
jecxz
gs
call
addr16
xor
lahf
ins
xchg
dec
mov
push
push
push
iret
mov
jae
inc
adc
jge
fadd
outs
je
sub
in
movs
xlat
jno
inc
push
out
xchg
adc
in
jl
xchg
mov
dec
rcl
cld
jmp
mov
xchg
mov
pop
sar
lea
out
out
(bad)
call
cmp
dec
and
fprem1
pop
ror
sbb
or
aad
mov
xchg
in
(bad)
xchg
call
add
push
retf
dec
div
movs
mov
xor
dec
retf
test
(bad)
sti
je
sahf
dec
add
dec
ins
fs
mov
cmps
rcl
fcmovu
dec
ror
jp
inc
sti
xor
dec
dec
(bad)
in
nop
imul
in
fcmove
cs
adc
mov
inc
push
dec
repz
xchg
xchg
out
scas
lods
push
pop
shl
mov
lea
push
push
addr16
xor
push
cmc
mov
pop
gs
fild
call
lock
mov
fwait
stos
adc
jae
fnstcw
xchg
add
add
ins
imul
mov
mov
es
push
pop
(bad)
jecxz
jo
not
test
pop
push
pop
jg
int
frstor
dec
cld
pop
add
mov
mov
sub
les
xchg
push
in
neg
xor
ins
xchg
int3
mov
addr16
pushf
and
mov
ret
jae
xlat
rcr
scas
pop
pop
cwde
adc
fcmove
push
dec
jo
inc
nop
mov
push
adc
sbb
cmp
and
add
pop
ins
sub
dec
jno
pushf
pop
mov
or
pop
out
push
sar
dec
sbb
adc
cli
lds
pop
es
inc
repz
adc
outs
pop
and
dec
dec
das
movs
lock
rcl
rcl
jp
dec
jo
(bad)
push
mov
jnp
test
outs
fistp
inc
xor
xor
dec
add
int3
adc
int
fnstsw
inc
mov
mov
push
xor
sbb
jbe
xchg
fidivr
dec
sbb
and
push
dec
mov
aad
cmps
rcr
inc
sub
cs
les
loopne
test
jge
mov
into
jg
popa
pop
imul
mov
pop
jne
adc
rcl
dec
popa
test
cdq
in
or
inc
loop
cmp
leave
cmp
test
out
fnstenv
xor
hlt
mov
mov
sub
sbb
js
push
mov
ss
(bad)
ds
aas
inc
add
mov
adc
jmp
inc
cli
mov
jg
in
mov
adc
xchg
in
and
adc
sub
mul
lea
inc
or
lods
mov
lea
sub
mov
fisubr
out
push
or
ins
movs
lock
or
dec
inc
fcmovbe
pop
or
idiv
sub
jnp
add
push
pushf
mov
pop
jnp
loopne
cmp
outs
lock
fucomi
loop
cmp
mov
and
xlat
clc
push
add
mov
and
inc
imul
jno
sbb
xor
adc
or
xor
sub
stc
mov
pop
(bad)
in
(bad)
sub
lea
xchg
adc
pop
cwde
jg
jae
cmp
sub
sub
xchg
(bad)
sub
push
mov
dec
push
mov
cmc
jg
push
aad
pusha
push
fld
jb
fldenv
fdiv
leave
inc
dec
rcr
inc
scas
sbb
rcl
jo
push
sub
dec
add
xor
sub
pushf
jne
pop
add
mov
fwait
loope
add
aaa
jp
mov
and
xor
cdq
(bad)
ss
inc
std
push
and
mov
jmp
add
mov
mov
ss
aam
loop
or
cmc
js
or
xchg
mov
dec
jne
mov
mov
or
stos
mov
jns
or
add
bound
dec
mov
lods
sbb
rcr
jmp
jnp
inc
sub
test
in
push
mov
fst
iret
cwde
mov
das
sub
aam
push
sub
es
out
inc
mov
imul
test
sub
mov
in
pop
call
jl
fisttp
sbb
sbb
loopne
js
cmp
imul
xchg
or
pop
cmps
repnz
push
dec
rol
inc
push
fst
push
in
lea
or
adc
or
mov
mov
jecxz
or
aas
rol
mov
inc
rol
das
fidiv
cs
cmc
mov
or
dec
sub
outs
or
sbb
test
sbb
inc
gs
sbb
sub
adc
stos
pop
and
mov
sub
rol
add
rcr
addr16
push
mov
xchg
dec
outs
sbb
aam
gs
xor
shl
xchg
retf
mov
xchg
add
mov
add
icebp
mov
mov
add
cli
sub
repz
sbb
cmps
aam
cmp
adc
xlat
or
scas
out
ret
push
imul
jmp
add
xchg
and
pop
cmps
jmp
pop
lds
bnd
sub
xchg
call
cs
dec
push
adc
gs
test
shld
dec
cmp
add
xchg
adc
adc
les
(bad)
adc
xchg
(bad)
xor
leave
(bad)
pusha
cmp
sbb
sti
inc
psllq
push
sub
cdq
fsub
mov
(bad)
retf
and
call
imul
dec
cld
mov
xor
and
lar
mov
or
jp
outs
jmp
and
call
jno
in
movs
sub
cmp
jle
fsub
inc
pushf
int3
and
jl
retf
dec
or
fwait
adc
sub
sbb
xchg
sub
cmps
daa
pop
loop
loope
push
or
jnp
cdq
push
lea
fwait
test
stc
popa
mov
ss
and
das
movs
rcr
sub
addr16
nop
adc
inc
mov
xor
ins
sti
adc
stc
or
and
clc
mov
fs
shl
adc
mov
dec
cmp
lahf
add
repz
xchg
pop
out
test
dec
mov
inc
jmp
in
add
jnp
in
int
sub
(bad)
scas
push
mov
pushf
push
sbb
into
je
ins
sub
nop
inc
fistp
cdq
dec
and
mov
mov
in
sub
add
xor
mov
push
imul
add
aas
sub
mov
cmp
cdq
or
sub
sbb
outs
xchg
movs
(bad)
inc
mov
cdq
call
clc
sub
inc
stos
(bad)
cmp
mov
pushf
pop
mov
cli
jg
mov
sahf
aaa
cmc
int3
rcl
int
(bad)
ins
fcom
jecxz
push
fidiv
jmp
inc
sub
sbb
push
cld
pop
repnz
test
cmp
out
mov
iret
adc
fcomp
icebp
jo
mov
addr16
or
sbb
jo
sbb
iret
sbb
daa
shld
dec
fild
inc
mov
fsubr
jmp
call
lock
out
or
xlat
jmp
xchg
mov
sub
inc
cmps
ror
ss
add
hlt
popf
outs
adc
movs
push
xor
adc
cmp
push
dec
fwait
shl
outs
ins
mov
fs
ja
lahf
mov
sbb
and
fld
push
xor
cld
mov
push
movs
and
jne
cmc
retf
shl
xchg
jns
mov
pop
or
and
or
fnstenv
fsubr
fistp
dec
shl
ror
xor
lods
call
pop
enter
imul
ins
dec
mov
or
sub
aas
call
or
repnz
pop
xchg
mov
or
inc
jo
retf
dec
rcl
push
test
lods
repz
js
fstp
test
clc
cmp
int
or
ins
jmp
mov
jle
int3
mov
cli
(bad)
mov
nop
fiadd
in
or
je
mov
jle
out
dec
pop
fisub
inc
dec
leave
not
sub
mov
aas
clc
jg
sub
lods
jg
pusha
mov
aaa
sbb
mov
jns
xor
mov
stos
jo
dec
movs
out
mov
mov
jmp
call
xchg
ficomp
push
jmp
lea
jmp
sti
clc
(bad)
sbb
cmp
std
add
sar
cmp
jns
jp
jnp
stos
and
aam
mov
inc
mov
cmp
ins
movs
daa
adc
jbe
dec
fdiv
neg
inc
xlat
inc
ss
dec
aas
iret
cmp
sbb
xor
push
add
and
cmp
push
jb
or
ror
pop
stos
jp
sub
aad
sti
ja
clc
fld
dec
pushf
and
shl
push
mov
cmps
pop
fiadd
xor
test
jmp
xchg
call
rcr
cwde
lds
mov
pop
es
mov
inc
lods
mov
clc
pop
repz
dec
jg
stos
jmp
sub
mov
sub
aam
js
les
xor
sub
inc
shl
add
mov
mov
mov
add
cmps
dec
cmps
pop
ins
mov
cmove
aaa
adc
mov
inc
repnz
gs
loope
mov
(bad)
lahf
pop
idiv
mov
int
jns
cwde
fdiv
icebp
js
shl
(bad)
popf
cwde
cmp
dec
jg
adc
outs
lds
add
jbe
sub
mov
add
(bad)
push
into
mov
inc
scas
lods
jmp
dec
out
mov
sub
or
mov
jmp
sbb
loope
enter
fsubr
adc
test
call
sahf
shl
xchg
jmp
ficom
xor
dec
repz
push
mov
cld
pshufw
lea
pop
pusha
popa
xor
pusha
adc
and
leave
in
jmp
add
movs
into
inc
sbb
xchg
sub
inc
(bad)
int
push
movs
clc
lods
jg
adc
fidiv
add
mov
add
jmp
sub
rcr
repnz
jns
add
jp
sub
in
mov
stos
cmp
sbb
or
push
mov
jbe
stos
jg
mov
les
mov
xor
clc
sub
push
and
or
fs
adc
fisttp
sbb
mov
inc
jge
test
sub
mov
push
arpl
jbe
pop
out
mov
cmp
pop
cmp
out
push
sub
push
adc
mov
cmps
jmp
addr16
mov
mov
sub
or
and
sbb
xchg
daa
cmp
push
lock
out
sbb
dec
inc
mov
mov
and
je
push
cwde
mov
xor
js
pop
out
movs
je
sub
lock
jo
test
xchg
inc
mov
or
jbe
fucomi
add
repnz
sbb
test
ds
pop
adc
cmps
sub
pop
and
sbb
jge
dec
repz
xlat
movs
call
fs
movs
sub
mul
cmp
inc
pop
inc
gs
add
mov
sbb
jle
(bad)
xor
push
xor
daa
rol
retf
(bad)
loope
jo
adc
xor
aad
mov
loopne
sbb
int
popf
adc
xchg
pop
test
push
addr16
mov
push
shl
push
rcr
das
mov
call
imul
and
pop
je
sar
xchg
add
push
iret
test
jmp
mov
enter
aaa
pop
mov
dec
aad
pop
push
pop
or
xchg
fild
cmp
xor
scas
into
int3
out
ret
inc
jl
cmps
mov
jmp
mov
sbb
enter
outs
lock
mov
jle
or
nop
pop
xchg
jl
lods
cmp
retf
add
fstp
sub
lods
lds
js
push
push
dec
cmp
retf
cmp
(bad)
jmp
shl
repz
xchg
and
jge
sub
retf
or
call
test
dec
add
xor
sub
cmp
jae
add
ins
sub
cdq
not
sub
cdq
add
xor
imul
das
fstp
jecxz
adc
std
push
ret
fisubr
stc
xchg
push
jnp
arpl
jbe
mul
movs
dec
add
test
fsubr
ret
cdq
cmp
jb
or
popf
sbb
jns
jg
inc
(bad)
sub
xchg
adc
mov
jnp
and
mov
fbld
call
push
loope
fidivr
js
inc
jle
jne
pop
mov
int3
push
or
sbb
lods
cmp
pop
sbb
stos
mov
add
push
dec
or
stc
inc
jg
push
pop
pop
pop
out
ss
sbb
xchg
xchg
sbb
jae
and
cmp
retf
mov
scas
xchg
ja
aas
adc
rcl
mov
lahf
inc
scas
and
hlt
aad
shr
sbb
xor
add
mul
mov
sub
es
test
ins
pop
and
jne
push
and
jl
push
or
inc
fcomp
sti
cmp
cmp
int3
adc
xor
sahf
inc
icebp
mov
stos
jg
aad
test
ret
in
out
(bad)
mov
sbb
(bad)
xchg
jmp
pop
xchg
push
js
cmp
add
jo
mov
sar
out
xchg
push
cmps
popa
jno
sbb
sub
mul
jg
loope
outs
or
pop
icebp
pusha
inc
jmp
cdq
mov
fs
ja
xchg
mov
pop
push
lahf
push
push
scas
mov
jae
mov
inc
out
xor
rcr
fs
aas
aam
std
fnsave
jne
mov
xor
fidivr
movs
mov
xchg
sub
cmp
pop
or
retf
rol
xchg
stos
imul
dec
out
sbb
retf
test
dec
hlt
add
dec
pop
fnsave
stos
push
jnp
mov
push
add
movs
out
into
cdq
retf
mov
out
dec
imul
sub
add
or
in
jnp
push
jbe
inc
fnstcw
iret
aas
pop
stos
das
je
pop
xchg
add
int
mov
push
mov
scas
dec
push
pop
or
ret
mov
into
cmp
stc
cs
movs
xchg
clc
mov
rol
scas
xchg
mov
js
and
mov
sahf
or
add
sbb
xor
das
fdiv
push
aaa
pop
test
mov
push
sahf
adc
mov
mov
or
sub
mov
push
int
adc
adc
mov
vmulss
xor
mov
outs
test
sub
jg
pop
and
add
pop
mov
mov
cmp
ja
mov
mov
std
push
rol
mov
or
cmp
int3
jmp
loopne
mov
stc
adc
mov
rcl
mov
dec
je
leave
or
test
jbe
add
rcr
je
dec
sahf
popf
mov
cwde
mov
(bad)
int3
mov
xchg
lahf
cmps
(bad)
xchg
mov
xchg
cmp
aam
mov
test
ret
push
test
pop
cmps
test
dec
hlt
add
ficom
dec
pop
(bad)
aad
test
xor
xchg
cmp
pushf
add
xchg
mov
inc
int
mov
fistp
movs
add
test
mov
jg
call
scas
test
and
pop
and
mov
(bad)
mov
in
inc
xchg
call
sahf
pop
scas
inc
cmp
mov
(bad)
xchg
sbb
xchg
xchg
xchg
gs
push
(bad)
push
mov
dec
jl
and
bound
repnz
aas
mov
add
movs
sub
mov
imul
inc
aaa
je
scas
outs
pop
pushf
jmp
(bad)
aas
sub
dec
mov
sub
rcr
shl
or
adc
add
das
and
sub
enter
pop
pop
sub
cmp
add
sub
shr
push
mov
inc
inc
mov
mov
sub
pop
mov
imul
ins
mov
pop
pop
add
retf
punpckhdq
cmc
imul
sbb
lods
cdq
lods
(bad)
push
adc
jno
stc
add
sbb
sbb
call
imul
push
xlat
cmc
cmps
loop
pop
inc
push
push
pop
cmp
push
imul
das
call
jns
inc
fdivr
cdq
jp
out
cmp
xchg
jns
sti
aam
add
jp
jns
push
mov
cwde
enter
push
leave
sbb
adc
fs
movs
mov
aas
jmp
jmp
cmc
dec
les
loop
jp
test
aas
dec
aaa
arpl
call
cld
mov
xchg
stos
or
jb
shr
stos
fisubr
shl
push
add
mov
lea
daa
(bad)
dec
mov
sbb
call
(bad)
aad
push
mov
or
enter
repz
fsubrp
jg
int
pop
das
or
cmp
xchg
adc
and
fsubr
call
add
cmp
cli
ror
es
fs
(bad)
enter
icebp
sub
cmp
mov
imul
retf
pop
dec
ins
push
jae
xchg
clc
ss
adc
jmp
js
or
sub
cdq
xchg
jp
cmp
jecxz
popa
pop
repz
and
stc
push
push
ror
les
outs
inc
sbb
inc
pop
push
ss
(bad)
mov
fcmovnbe
jge
mov
mov
shl
mov
in
adc
inc
add
inc
das
add
ins
ins
out
ret
and
xlat
and
or
jno
sub
in
push
bound
and
push
out
lahf
imul
add
push
mov
es
xor
fcomip
inc
add
out
xor
cdq
push
and
popf
sbb
rcl
pusha
mov
out
sbb
test
cld
outs
mov
push
add
xchg
imul
dec
sti
inc
sub
and
outs
jnp
(bad)
jne
pop
pusha
scas
cmc
sub
and
ss
aam
clc
mov
mov
jbe
in
xor
dec
sub
pop
lods
outs
jl
out
sbb
test
lods
or
push
push
fisub
or
xchg
sbb
mov
jg
jmp
mov
dec
mov
imul
xchg
mov
mov
leave
pop
push
fldenv
push
xchg
jmp
shl
das
pop
scas
mov
add
je
fisttp
sbb
mov
inc
mov
(bad)
xor
xor
sbb
mov
out
aad
inc
ficom
mov
inc
push
(bad)
push
mov
lahf
dec
sub
rol
mov
cwde
inc
or
jns
or
aad
js
mov
cmc
int3
inc
stos
add
or
add
sbb
rcl
jp
jnp
jmp
dec
pop
movs
or
jecxz
aam
pop
lods
int3
dec
shl
dec
lahf
pop
in
jmp
and
mov
dec
fdiv
mov
nop
dec
jbe
adc
bound
xchg
rcr
das
sub
jns
call
jae
xchg
aaa
inc
in
jg
(bad)
pop
aaa
call
retf
or
cdq
mov
jl
test
sbb
(bad)
add
or
jae
movs
cld
push
arpl
or
es
out
dec
pop
addr16
hlt
inc
mov
out
sub
add
jb
ficom
bound
(bad)
cmp
mov
push
ss
daa
fs
out
jbe
sub
ins
push
je
cmp
aad
jnp
or
int3
sub
xchg
push
dec
sub
mov
sbb
push
lock
inc
sub
ins
mov
add
dec
daa
dec
mov
in
inc
add
retf
test
(bad)
cli
(bad)
loope
and
mov
test
mov
fisubr
mov
adc
scas
xchg
dec
(bad)
lods
cli
cwde
jae
mov
pop
(bad)
xor
sub
(bad)
shl
les
or
test
xchg
and
add
push
movs
(bad)
and
(bad)
outs
sub
cmp
int
xor
in
cmc
push
jno
pop
pop
sub
dec
xor
(bad)
call
jne
shl
inc
xchg
(bad)
mov
sbb
std
inc
push
mov
adc
div
pop
dec
ss
call
ret
sub
push
inc
arpl
push
pop
pop
pushf
je
jae
scas
int3
iret
shr
test
scas
sahf
or
hlt
adc
xchg
xor
inc
dec
call
or
add
(bad)
mov
out
mov
pop
xchg
loopne
add
sub
and
sub
pop
mov
cli
lds
clc
cmp
shl
popa
add
fisubr
mov
ins
inc
push
push
sbb
nop
xchg
sub
dec
pop
pop
push
mov
xchg
and
pop
leave
xor
hlt
xchg
imul
ins
cli
inc
jne
inc
pop
sbb
addr16
push
sub
imul
mov
leave
mov
mov
(bad)
popa
xchg
jo
inc
jae
(bad)
cmp
hlt
mov
cmc
and
rcl
icebp
push
inc
inc
push
jp
fs
fwait
ja
into
or
ja
js
and
(bad)
clc
jno
or
sbb
arpl
inc
mov
mov
adc
fld
push
pop
(bad)
mov
div
pusha
xor
dec
jmp
jo
cld
cmc
push
jne
inc
push
daa
mov
xchg
cmp
push
cdq
fwait
xchg
rcl
cmp
scas
jb
jno
lea
(bad)
clc
fsub
data16
lods
push
sbb
pop
adc
out
gs
mov
pop
and
dec
cmp
mov
pop
sub
test
mov
sub
movs
outs
sub
lods
lds
xor
pop
out
pop
sbb
xchg
sub
push
aam
xor
gs
retf
jg
cmp
inc
pusha
add
cmc
movs
test
inc
js
stc
fdiv
push
pop
push
jo
ins
inc
icebp
shl
rcr
loop
jle
inc
or
in
lock
outs
repnz
shl
inc
out
(bad)
call
mov
mov
enter
ss
or
pop
test
sbb
shr
mov
data16
repz
mov
fbld
sub
push
rcr
fdivr
adc
cmps
inc
xchg
into
cwde
xor
sbb
mov
jo
sub
icebp
data16
cmp
retf
bound
or
dec
push
push
and
cli
pop
jmp
inc
call
imul
xor
jl
lock
nop
sahf
retf
pop
jnp
call
xchg
(bad)
sbb
sub
mov
test
test
scas
fstp
jge
outs
and
outs
pop
sub
mov
xor
sti
gs
out
fwait
ret
adc
and
pop
mov
out
mov
call
dec
dec
adc
in
push
popf
ret
jp
lahf
mov
data16
pop
cmp
in
xor
idiv
(bad)
std
lods
lahf
out
shl
out
and
cmc
sbb
clc
or
cld
rcr
fwait
cdq
inc
mov
push
repz
stos
icebp
cld
and
(bad)
scas
adc
hlt
xchg
jns
loopne
inc
outs
pop
int3
and
shl
ret
leave
jne
pop
and
rcl
sbb
stc
sahf
pop
(bad)
and
popw
retf
inc
sub
and
pop
mov
je
pop
data16
lea
and
arpl
jb
cmp
push
rcl
sub
inc
fbstp
cmp
cmp
xor
pop
mov
mov
cmps
jmp
out
inc
iret
inc
das
and
ja
pop
jmp
jl
cmp
pop
mov
or
mov
add
lock
imul
(bad)
call
xchg
mov
arpl
mov
push
xchg
xchg
adc
lds
aad
sti
inc
mov
jns
(bad)
pop
add
stos
retf
ins
shl
adc
pop
xchg
push
adc
mov
inc
adc
repz
enter
lods
jae
pop
test
faddp
stos
xor
pop
repz
xlat
jecxz
mov
dec
les
pusha
cmp
iret
inc
in
scas
repz
xor
stos
addr16
jecxz
push
push
fld
push
sub
push
test
inc
mov
adc
retf
pop
adc
xor
or
pop
rcl
scas
cmp
or
or
push
adc
dec
jns
and
cld
push
lock
adc
dec
(bad)
pop
pop
inc
inc
in
(bad)
and
xchg
dec
cwde
stos
sub
adc
xor
fimul
or
mov
mov
lock
xchg
ret
xchg
imul
stc
cwde
sub
cdq
fistp
jp
mov
or
inc
xchg
xor
leave
popa
push
or
jecxz
or
lahf
js
cli
retf
add
cmp
mov
push
sbb
adc
xchg
sbb
xchg
popf
fs
fcmovb
pusha
dec
(bad)
xor
cmps
xor
retf
sbb
mov
sbb
and
enter
ds
cmp
ins
xchg
sbb
dec
and
mov
lods
pop
or
pop
add
mov
push
lods
stc
xchg
rep
int
adc
not
pop
ficomp
jp
sub
push
imul
pop
add
je
lea
(bad)
jg
sbb
popf
or
cld
add
jecxz
loop
ja
test
jmp
outs
sti
push
aaa
mov
mov
(bad)
ja
daa
int
mov
xor
mov
or
or
cmp
aas
mov
cmp
fbld
out
mov
(bad)
xchg
adc
enter
and
mov
cmp
mov
fisttp
test
pop
inc
sbb
adc
jmp
es
(bad)
aad
movs
lahf
push
mov
adc
add
push
jb
mov
pop
movs
repnz
push
std
mov
xchg
jecxz
pop
mov
jno
lock
add
mov
das
dec
cdq
loope
bswap
mov
mov
pop
sbb
sbb
dec
out
stos
adc
outs
and
add
lahf
dec
xor
fst
adc
cli
mov
aaa
jmp
xchg
bound
push
mov
xor
push
mov
cwde
dec
sub
cmp
xor
xchg
cmp
loopne
pop
fwait
mov
(bad)
push
aas
jmp
mov
in
fisttp
inc
ror
mov
test
add
pop
(bad)
sub
loop
mov
jae
out
loope
mov
adc
out
jns
xchg
mov
lds
shl
stc
shl
mov
hlt
push
adc
xor
loopne
xor
ror
mov
push
pop
add
dec
mov
aam
pushf
sub
jl
(bad)
shl
mov
cld
or
xchg
add
xchg
scas
push
inc
mov
adc
(bad)
mov
out
mov
push
int
lods
cmps
in
mov
mov
repnz
int
dec
call
dec
pop
sub
hlt
(bad)
lahf
lds
icebp
or
sub
jb
ficom
push
(bad)
mov
in
pushf
jmp
(bad)
inc
sub
call
adc
mov
cdq
pop
test
push
adc
sub
jmp
js
popf
push
dec
sbb
mov
push
jbe
rcr
adc
push
and
mov
add
int3
retf
call
(bad)
sbb
jae
rep
push
adc
out
xchg
dec
cmp
mov
imul
daa
mov
dec
enter
rcl
cmp
pop
cmp
push
lds
into
and
out
in
gs
icebp
lock
mov
add
adc
and
pop
xchg
pop
adc
cmp
and
or
fiadd
fdivrp
dec
std
inc
xchg
add
inc
jnp
cmovl
loope
dec
or
mov
push
mov
int
dec
into
fsub
xor
adc
adc
(bad)
mov
aam
mov
cmp
mov
xchg
xor
repnz
js
jmp
es
loopne
test
or
sub
ins
aas
stos
lds
push
jmp
test
push
xlat
jns
pop
lea
jbe
sbb
lock
mov
push
sub
call
or
jg
lock
or
cmp
mov
fs
out
out
push
mov
pop
add
lea
stos
xor
out
push
test
xlat
(bad)
cmc
pop
mov
test
add
xchg
and
push
adc
stos
retf
adc
fisttp
push
call
movs
iret
jne
mov
(bad)
(bad)
gs
repnz
pusha
adc
and
adc
xor
or
cwde
cmp
repnz
xchg
cmps
out
(bad)
mov
bt
cmp
xchg
fild
loop
push
pop
pop
xchg
loope
and
mov
call
(bad)
dec
cmp
imul
mov
xor
mov
mov
aas
push
std
sub
mov
(bad)
sub
ror
fld
retf
movs
cli
inc
mov
jmp
pop
cmp
aas
mov
dec
dec
sub
jo
mov
push
xchg
cs
rcr
mov
push
xchg
pop
and
jb
mov
mov
mov
jae
inc
mov
scas
mov
cs
jbe
xchg
outs
std
mov
ret
sahf
ss
mov
add
push
xchg
cmps
repz
rcr
retf
into
cld
mov
mov
rol
add
dec
pop
repnz
in
(bad)
loopne
push
pushf
inc
xchg
stos
enter
dec
pusha
stc
pop
sub
xchg
pop
(bad)
add
mov
fdiv
aaa
push
sub
cdq
xor
(bad)
push
fisubr
ret
int
sub
mov
sbb
mov
jae
ins
into
in
jg
jae
or
lods
(bad)
bound
out
sbb
mov
xor
jae
loope
out
jns
scas
jmp
pop
or
int3
and
mov
and
ins
cmps
and
add
pop
xchg
mov
das
js
cmovle
cmps
cli
mov
es
in
dec
(bad)
jle
fiadd
outs
es
rcr
int
sbb
cmp
fadd
je
movs
jmp
mov
test
imul
jns
cmp
cwde
test
push
test
int
call
shl
pop
sti
scas
in
inc
jns
in
adc
in
adc
sahf
jp
fsubr
or
stos
or
pop
add
add
cs
pop
lds
jne
cli
fmul
sbb
dec
jecxz
jl
cwde
xchg
les
shl
xsavec
sti
and
int3
test
push
jmp
sar
aam
loop
jbe
lods
call
int
test
xchg
mov
xor
jecxz
pop
xchg
ret
imul
rcl
jge
repz
je
pop
jmp
mov
jp
mov
jo
(bad)
adc
scas
push
mov
clc
cmp
rcr
test
bound
dec
and
(bad)
xchg
lods
mov
add
or
scas
scas
mov
inc
mov
test
xor
sahf
jl
lods
dec
shr
push
xchg
jb
or
jae
sbb
adc
push
add
jo
das
imul
movs
push
jno
jno
xor
ds
shl
das
sar
adc
xlat
pop
pop
mov
das
push
pop
and
ss
das
jmp
lods
ret
(bad)
push
lea
push
pop
push
add
mov
sub
out
aam
and
sbb
push
repnz
mov
scas
outs
mov
dec
aas
test
cmc
das
xor
and
or
cwde
rcr
jmp
enter
rcl
inc
jns
pop
pop
pop
xchg
(bad)
retf
mov
pop
inc
pop
cwde
fwait
sbb
push
xor
and
pop
push
bound
(bad)
fcomi
mov
test
inc
push
or
sbb
sub
fs
inc
add
rol
jno
inc
out
sub
pop
dec
cmps
into
push
mov
repnz
mov
outs
neg
xchg
iret
pop
push
in
dec
cmp
lods
loope
mov
xor
adc
ret
test
daa
leave
or
add
cmp
adc
js
retf
sbb
repnz
push
lahf
cdq
cmp
pop
jl
fisubr
mov
aad
mov
dec
(bad)
hlt
dec
jmp
retf
(bad)
out
jp
mov
sub
xchg
sahf
jne
in
sub
enter
adc
mov
add
arpl
lods
retf
(bad)
scas
(bad)
ins
test
xchg
sub
call
mov
push
jecxz
loopne
xchg
jp
mov
dec
fst
movs
ret
adc
call
jmp
add
pusha
gs
push
mov
dec
fucomip
ja
lock
call
test
fild
lahf
adc
sti
stos
or
add
xor
sub
mov
jmp
push
jecxz
lock
push
mov
icebp
lea
dec
out
ss
test
and
out
push
add
push
cli
mov
fisubr
sub
iret
cmps
dec
sti
add
je
sbb
cmps
(bad)
mov
mov
or
shl
ffreep
lods
inc
arpl
add
lahf
xchg
add
xchg
sbb
xchg
(bad)
mov
cmp
shl
lea
into
popf
fwait
mov
sub
pop
push
jle
das
add
add
push
cmc
mov
lods
lods
into
hlt
ficomp
inc
mov
and
inc
cmps
cs
push
ror
add
and
pop
mov
mov
(bad)
ds
add
push
int
imul
pop
mov
xchg
dec
jmp
fdivr
adc
mov
in
repz
pop
dec
daa
adc
and
mov
movs
outs
cmp
fwait
sub
stos
loopne
lds
lods
sti
and
mov
int3
mov
jae
xchg
(bad)
jl
jmp
es
push
push
dec
nop
gs
in
add
rol
jge
fcmovnbe
mov
dec
inc
out
rcl
pop
lahf
out
xor
sub
push
xor
loop
std
jno
test
mov
sbb
xchg
and
mov
out
scas
push
or
aas
iret
jno
sbb
fidivr
nop
cmp
scas
cli
cdq
and
jmp
inc
push
mov
repz
push
ror
pop
inc
xor
lds
add
and
cld
or
lahf
repz
cmp
lods
sub
ds
cld
movs
add
push
inc
(bad)
cmp
(bad)
mov
ficomp
lods
lods
shl
out
mov
daa
cmp
cmp
dec
retf
cmps
mov
mov
jl
lds
jno
mov
jne
xor
dec
loope
fdivr
sub
in
and
call
mov
retf
push
and
shl
ret
rcr
fisubr
mov
push
(bad)
fisttp
sti
inc
movs
les
sbb
xchg
inc
(bad)
pop
aas
push
test
stc
arpl
leave
sbb
repz
or
bound
loopne
lahf
call
pop
je
lock
mov
push
pop
dec
arpl
mov
inc
arpl
arpl
mov
call
inc
pop
adc
out
ja
mov
out
loop
leave
sub
pop
pop
cli
(bad)
or
xor
or
sbb
sub
aad
lahf
test
push
js
add
mov
mov
sbb
mov
pop
jo
scas
cs
pushf
inc
mov
aam
sbb
adc
sub
dec
es
fidivr
jns
fcomp
fs
scas
ins
sub
std
mov
fsubr
in
dec
(bad)
dec
rcr
nop
pop
push
and
mov
ret
out
loop
movs
out
jo
in
fwait
mov
xchg
sub
aas
rcr
mov
xchg
xor
pop
sbb
mov
ins
rcl
sbb
or
xchg
call
cmp
jne
sbb
icebp
jge
aaa
leave
inc
aam
jo
mov
repz
jne
mov
cmp
aad
sub
out
add
bound
out
mov
mov
push
push
xor
inc
and
jge
(bad)
shr
dec
inc
aam
and
push
inc
lock
inc
cld
mov
mov
pop
cmp
(bad)
mov
push
repnz
in
popa
add
mov
loopne
mov
repnz
push
aad
adc
bound
lods
int3
jnp
mov
imul
push
cmc
mov
add
push
mov
(bad)
mov
dec
lds
shl
push
pop
(bad)
push
sub
test
sahf
(bad)
push
jo
pusha
jno
jg
in
pop
adc
push
xchg
cmps
jmp
xchg
scas
enter
ficomp
rcr
push
(bad)
fucomip
jmp
inc
add
cmps
add
in
test
adc
xor
test
push
pop
lds
xchg
and
cmp
mul
push
fdivr
mov
mov
cmp
sub
sbb
hlt
popf
mov
int3
jb
push
mov
cmp
mov
sub
and
stc
xchg
lahf
in
clts
and
push
mov
sub
sahf
mov
outs
outs
add
mov
das
jbe
lods
retf
retf
pop
cmps
call
lods
jnp
add
xor
mov
loope
fisubr
inc
pop
jae
fcom
xchg
cs
mov
push
sub
outs
test
jae
jmp
sub
adc
mov
sub
jbe
mov
repz
out
pop
in
in
push
mov
adc
push
int
test
dec
das
inc
jnp
xor
xor
cli
stc
adc
shl
cmp
test
cmp
pop
cmc
xor
js
sub
add
lahf
jg
jle
or
adc
stos
jmp
push
stc
int3
outs
jle
pop
jns
test
bound
fs
sahf
in
or
adc
pop
dec
mov
dec
jne
xchg
adc
js
addr16
xchg
and
mov
scas
(bad)
dec
sbb
fcom
mov
popa
pop
and
and
mov
inc
cs
and
mov
imul
loopne
or
dec
mov
leave
pop
mov
add
inc
push
mov
fstp
out
fs
fwait
popa
xchg
js
mov
mov
sub
mov
fsubr
shl
loop
jns
stc
jecxz
mov
jl
and
aad
mov
mov
jg
out
or
jnp
and
es
mov
pushf
add
dec
pop
lahf
les
dec
dec
(bad)
repnz
sbb
jmp
push
fcom
cmp
iret
xchg
jmp
cmp
pop
dec
int3
push
fidivr
jb
and
sub
dec
or
rcl
dec
out
movs
or
or
jae
push
out
stc
call
mov
pop
cmps
jmp
mov
test
test
shr
(bad)
mov
into
dec
das
push
pop
pop
pop
mov
scas
clc
cmp
in
lods
cmp
inc
ss
shr
out
inc
add
cmp
pop
popf
adc
push
jo
inc
and
and
cmp
jo
stos
xchg
mov
inc
inc
and
mov
xor
jl
out
es
jns
in
dec
dec
push
push
repz
movs
aaa
gs
cli
adc
fld
rcr
and
mov
inc
sbb
jmp
ins
retf
les
jmp
pop
(bad)
ins
mov
pop
xchg
xchg
shr
sbb
rcl
push
(bad)
sub
cdq
push
repnz
repnz
popf
add
rol
repz
je
cmp
int
mov
test
pop
xchg
aam
(bad)
cli
scas
pusha
lock
mov
adc
lods
adc
stc
cli
(bad)
lds
aas
movs
dec
lea
out
xlat
sbb
scas
frstor
dec
or
addr16
add
shl
mov
push
jmp
sbb
inc
scas
loope
(bad)
idiv
jne
mov
pop
xchg
cwde
inc
(bad)
mov
inc
xchg
(bad)
stc
cmp
pop
inc
lods
mov
(bad)
push
xchg
neg
in
enter
sbb
mov
sbb
test
push
scas
sub
xor
ja
call
xchg
jmp
sbb
test
mov
jno
jne
mov
ficom
inc
cld
jmp
cmp
pop
mov
inc
xchg
jge
mov
mov
or
mov
xchg
push
das
movs
in
xchg
pmulhuw
xlat
loopne
cmps
add
std
xchg
push
pop
dec
jmp
and
adc
loop
add
or
or
jl
iret
ds
inc
adc
clc
sub
xor
pop
adc
call
sahf
daa
jo
pusha
mov
int
cmc
dec
jae
je
dec
das
xor
xchg
add
sar
loope
ja
mul
fisttp
mov
lods
jmp
(bad)
retf
shl
popf
test
push
cmp
mov
add
mov
mov
and
mov
repnz
pop
mov
ror
sbb
and
inc
and
mov
cmps
loop
and
and
sar
jge
in
jo
loopne
mov
mov
loop
shl
xor
sar
mov
cmp
ror
sti
mov
pushf
jp
icebp
sahf
sbb
data16
(bad)
sub
pusha
daa
and
xchg
xchg
imul
mov
int
mov
jge
push
add
xor
xor
shl
xor
inc
sbb
mov
xor
mov
mov
push
add
add
push
enter
sti
xor
push
push
mov
test
aas
mov
mov
xchg
rcr
icebp
shl
int
sbb
cmp
fnstcw
or
xor
stc
cs
mov
pop
cmps
sbb
stc
mov
data16
ss
fwait
(bad)
int3
sbb
ss
and
pop
xor
mov
fdiv
sbb
push
outs
(bad)
dec
call
cmp
jmp
js
sub
fsubr
in
add
sbb
push
in
mov
add
loop
xor
stos
fstp
call
adc
imul
mov
fisubr
hlt
repnz
aas
xor
fsubp
push
mov
add
dec
push
les
add
mov
sub
add
push
adc
or
(bad)
into
jne
test
mov
pop
mov
mov
mov
push
push
mov
les
sbb
or
mov
mov
jg
cmp
pop
inc
daa
mov
ins
mov
adc
pop
push
inc
sbb
out
icebp
fist
ret
mov
sub
xchg
cmp
adc
push
loop
sub
movs
mov
cmp
bound
add
ss
and
sbb
mov
xor
in
popf
pop
xlat
inc
sub
mov
xor
cmp
hlt
cmp
pop
push
add
cmp
jmp
imul
sub
mov
push
fisttp
fwait
inc
inc
out
and
push
add
idiv
push
mov
jnp
push
fdivr
jmp
fistp
pop
jae
dec
sbb
shl
jmp
cmp
sbb
push
push
xchg
mov
imul
or
pop
mov
sub
cli
cwde
std
inc
or
stos
push
rol
and
inc
and
in
or
adc
stc
loope
imul
jg
das
pushf
mov
popa
mov
aas
xchg
sbb
push
mov
pop
aam
into
mov
test
retf
aad
xchg
adc
addr16
loope
jg
push
add
xchg
mov
lods
xchg
mov
mov
xor
mov
add
or
adc
call
or
and
inc
xchg
sbb
mov
pop
push
fs
jno
sbb
dec
arpl
inc
mov
cmp
in
fst
arpl
les
adc
ins
js
pop
cmc
nop
shl
mov
push
and
neg
je
popa
sub
mov
mov
mov
mov
(bad)
aaa
std
push
inc
popf
ss
aas
retf
inc
daa
xor
dec
add
pushf
mov
rcl
dec
test
loop
int
sub
test
ds
fdivr
mov
shl
inc
stos
mov
fwait
add
mov
scas
sub
mov
add
xor
or
pop
add
shl
mov
mov
mov
shr
adc
pop
daa
xchg
dec
mov
xor
inc
ja
inc
jg
pusha
sbb
push
adc
push
adc
inc
nop
push
in
and
jno
xor
scas
and
mov
mov
not
inc
adc
jne
scas
pop
xlat
rol
mov
or
mov
dec
jns
test
or
(bad)
mov
xchg
push
sub
(bad)
lock
test
enter
mov
jge
mov
test
clc
in
cmc
jmp
add
cmp
not
pop
jl
cmp
push
inc
dec
(bad)
pop
ret
xchg
sbb
sar
mov
or
sbb
jmp
add
aaa
or
pop
or
dec
pop
sbb
scas
xor
mov
test
mov
fucomp
cdq
mov
out
add
popf
push
pop
pop
cmp
cmp
retf
dec
sar
mov
gs
push
call
test
mov
call
clc
add
cmp
lds
popa
aad
push
inc
mov
sub
dec
inc
cld
xchg
movsx
loop
mov
and
mov
nop
or
and
sti
imul
dec
cli
xor
dec
pushf
sbb
ins
add
fdivr
pop
jle
rol
xor
cdq
data16
mov
mov
dec
jle
arpl
cmp
test
aam
int3
push
inc
sub
ror
and
xor
sbb
jbe
xor
fdivr
dec
dec
out
dec
cwde
sub
shr
dec
push
cld
mov
push
pop
cwde
jl
sar
or
scas
dec
nop
mov
cmp
js
test
test
jl
fidivr
mov
out
pop
out
mov
or
adc
pop
(bad)
sbb
or
ss
lea
push
adc
or
mov
(bad)
mov
arpl
imul
sbb
je
add
jb
jge
dec
fs
jns
popa
and
mov
(bad)
pop
ror
test
leave
sbb
ja
jne
pop
mov
js
adc
pop
pop
cld
cld
mov
sbb
mov
das
outs
push
push
loopne
and
inc
jl
lea
push
aam
(bad)
loopne
adc
or
dec
out
das
outs
das
mov
mov
cld
sbb
push
cmp
pusha
in
dec
dec
pop
call
add
leave
fdivr
and
inc
popf
rcr
xor
fldcw
mov
mov
imul
std
push
pushf
mov
popf
sbb
sbb
cli
ficomp
and
aam
or
bound
loope
xor
push
pop
pop
cmp
and
dec
stc
setns
lock
fbstp
inc
fild
lahf
in
loope
jnp
pop
arpl
adc
and
lods
push
xor
jb
xchg
xor
jbe
jge
(bad)
push
cmp
ror
aam
sbb
dec
mov
shl
push
dec
dec
xchg
sub
or
fs
or
cvtdq2ps
or
out
jmp
dec
xchg
cwde
mov
add
dec
sar
lods
stos
mov
int
cmp
in
adc
xchg
hlt
add
in
and
add
sub
daa
xor
cmp
and
dec
pop
int3
pop
inc
adc
xor
ins
inc
fstp
jp
dec
pop
neg
std
in
int
je
add
into
xchg
cmps
pop
test
or
pop
retf
sub
push
xor
mov
imul
and
pop
push
int3
mov
jb
ins
xchg
and
mov
add
je
das
mov
(bad)
leave
dec
jo
nop
bound
dec
stc
cwde
test
add
arpl
xlat
jne
inc
jae
out
shl
pop
cwde
out
fsub
loopne
xor
mov
repnz
clc
xchg
into
push
jmp
in
adc
lds
out
imul
inc
out
jecxz
lds
mov
sbb
(bad)
sub
cmp
mov
sahf
mov
xlat
xchg
sbb
push
rcl
mov
pop
scas
mov
int
inc
fst
sbb
(bad)
push
fimul
mov
cmc
dec
mov
in
bound
push
(bad)
mov
add
and
inc
sub
cmps
jno
aas
enter
mov
lea
fldenv
pop
sub
test
push
rcr
and
test
test
mov
loopne
mov
ja
cmp
lahf
jg
and
clc
pushf
(bad)
repz
sbb
push
xor
sbb
inc
clc
mov
daa
test
call
leave
movs
shr
ret
and
xrelease
xchg
xor
adc
out
adc
nop
arpl
mov
mov
sub
pop
imul
int3
imul
out
test
aaa
repnz
fidivr
mov
ins
dec
outs
or
mov
mov
pop
mov
mov
add
das
mov
cld
js
cwde
loop
sbb
and
pop
lods
(bad)
sbb
fs
and
jnp
add
sbb
outs
mov
mov
es
sbb
jo
test
stc
leave
cmp
clc
and
sbb
pop
mov
mov
daa
sbb
(bad)
out
or
(bad)
lods
cld
cmp
inc
rol
jo
ins
retf
int3
(bad)
cld
add
push
clc
pusha
cmp
add
retf
mov
mov
and
dec
popa
xchg
adc
inc
inc
inc
mov
cmp
jmp
push
ss
rcr
std
push
aas
sbb
(bad)
cwde
not
mov
call
cmp
mov
movs
pop
fcmove
add
hlt
xchg
outs
fdivp
popa
lods
ja
cmp
mov
std
cmp
retf
mov
enter
test
ret
xor
pop
xor
xor
fisubr
lods
lds
add
cmp
sub
pusha
cmp
rcl
pop
jns
or
jmp
imul
fwait
out
push
cs
push
dec
sbb
dec
out
cs
mov
repz
imul
pop
es
xlat
mov
call
xor
imul
jae
jnp
pop
pop
inc
or
jo
inc
mov
sar
dec
pop
fiadd
or
mov
sar
popa
adc
push
mov
nop
rol
sub
adc
out
xor
jne
into
cli
pop
loop
push
mov
dec
mov
or
repnz
mov
xor
sti
popf
and
xchg
cmp
data16
and
(bad)
xacquire
std
sbb
mov
pop
shl
xlat
sbb
ror
xchg
out
mov
push
in
push
or
lahf
jae
push
test
mov
aam
pushf
cld
mov
sbb
xchg
fisttp
mov
sub
inc
xlat
dec
dec
sahf
dec
icebp
xchg
nop
leave
cmp
push
sub
mov
fidivr
movs
ret
ss
(bad)
mov
inc
lea
dec
xchg
adc
sbb
adc
shl
sti
push
shr
mov
xor
hlt
sub
(bad)
lock
pop
nop
mov
(bad)
mov
mov
dec
and
push
jmp
mov
sbb
das
jge
(bad)
out
jns
pop
xchg
cmp
jl
jb
not
push
adc
fwait
cmps
sub
retf
fmul
xchg
fldcw
and
cdq
push
out
xor
or
sbb
fidivr
scas
jbe
imul
lock
push
shl
pushf
in
add
xor
js
sub
and
mov
lods
scas
inc
loop
add
mov
mov
or
add
push
repnz
sub
inc
mov
cdq
mov
push
sbb
dec
pop
stos
(bad)
sub
dec
adc
push
dec
cs
es
fisttp
jae
in
cmp
fist
lock
retf
test
stc
jmp
push
add
adc
add
push
inc
cmp
mov
test
bound
cwde
mov
test
fstp
dec
loope
xchg
mov
pop
out
jo
daa
or
stc
adc
and
dec
add
repz
(bad)
imul
push
or
stos
cmps
jo
jge
push
movs
nop
sbb
lock
mov
mov
loopne
add
sub
cmp
out
int3
dec
jl
push
mov
arpl
xchg
dec
movs
pop
fstp
outs
xlat
push
mov
into
test
adc
js
movs
(bad)
icebp
addr16
loop
push
(bad)
adc
mov
inc
bound
inc
test
(bad)
test
add
fidivr
push
enter
aaa
mov
sbb
loop
dec
es
cmc
or
ins
ja
sub
repnz
(bad)
js
shr
push
retf
inc
xchg
dec
push
sbb
jns
pop
xor
sub
call
adc
call
inc
nop
sub
sbb
push
jb
sbb
cmp
inc
cmp
in
jae
cli
mov
sub
mov
pop
and
nop
cmp
dec
aas
push
sbb
mov
(bad)
icebp
jle
pusha
cmp
sub
cmp
add
sub
lock
mov
icebp
jg
xchg
jle
sub
push
pop
xlat
xchg
xchg
aaa
xchg
mov
mov
lods
mov
cmp
pop
arpl
xor
rcl
xlat
lods
mov
xchg
(bad)
iret
addr16
mov
addr16
or
dec
imul
push
dec
ret
or
js
out
in
cmp
icebp
cmp
outs
out
xor
or
sub
out
ficomp
sbb
or
loopne
pop
out
rcr
out
mov
out
mov
(bad)
(bad)
lods
int
jb
mov
fdiv
clc
or
adc
pop
mov
sti
jbe
lods
xchg
xchg
sub
int
clc
sbb
jp
mov
push
xchg
sub
stos
mov
xchg
xchg
mov
fsub
dec
cmp
test
sub
mov
test
xchg
fiadd
fs
sub
ficomp
dec
mov
add
dec
mov
adc
cmps
mov
cmp
xchg
lds
test
addr16
aas
inc
push
inc
inc
stos
shl
mov
fwait
pop
ficomp
lds
dec
or
les
xchg
xchg
ds
and
nop
dec
rcr
mov
jns
addr16
pop
pusha
std
jb
out
xchg
adc
inc
iret
jb
ins
dec
adc
iret
lea
dec
jecxz
inc
inc
(bad)
into
or
loopne
int3
and
popf
pop
sub
adc
test
cmp
pop
retf
clc
lds
ret
mov
rcr
sub
dec
sub
push
jge
ret
clc
test
jbe
mov
adc
dec
stc
pushf
xor
mov
mov
stos
in
add
sub
push
sbb
jmp
or
cdq
inc
jge
cli
pop
jl
(bad)
pusha
scas
jecxz
xchg
aas
sub
sub
fs
cli
mov
cld
fild
pop
jge
jp
inc
test
data16
mov
add
stos
sub
imul
pop
stos
imul
or
cmp
lea
test
adc
imul
mov
leave
or
sbb
mov
sahf
scas
outs
xor
mov
jg
pop
jp
pop
mov
aas
adc
clc
std
fxtract
pop
hlt
dec
scas
inc
test
gs
sbb
(bad)
mov
(bad)
mov
mov
or
dec
jae
or
inc
fisub
jmp
fnsave
add
push
aaa
and
inc
pop
xchg
xchg
repnz
or
pop
or
inc
adc
and
les
cld
pop
jb
sub
mov
sub
iret
pop
dec
or
or
sub
jnp
mov
mov
pop
sbb
add
ret
lea
es
ins
aad
pop
pop
out
(bad)
and
mov
adc
xor
ret
or
stc
inc
push
mov
or
das
and
pop
xor
push
mov
sahf
sub
jmp
or
or
jge
inc
cmps
jmp
dec
jmp
xchg
dec
jno
jmp
push
inc
pop
movs
ret
fst
mov
xlat
into
gs
push
sbb
ror
and
inc
test
push
ror
mov
or
jns
test
into
dec
dec
dec
mov
or
jno
pop
dec
jmp
mov
jmp
or
add
lods
mov
xor
mov
add
lods
mov
sub
lds
mov
xor
rcr
mov
(bad)
retf
ja
sub
pop
cmps
dec
clc
xor
add
mov
jo
push
rcl
adc
mov
ins
cmp
movs
mov
sbb
adc
xchg
call
mov
adc
retf
movs
fcmovu
cmp
and
loopne
mov
or
add
adc
jmp
mov
adc
dec
cdq
dec
dec
test
mov
repz
jle
push
(bad)
fidiv
test
lods
sub
(bad)
sbb
call
xor
cmp
mov
mov
sbb
lds
adc
cmps
mov
sar
popf
add
mov
mov
pushf
mov
rcl
mov
loop
xor
mov
outs
cdq
int
and
mov
push
xchg
stos
jp
movs
xor
adc
and
clc
lods
outs
dec
ret
imul
mov
cli
retf
push
push
mov
data16
push
loop
cmp
aaa
fwait
cmc
dec
jne
jecxz
mov
adc
clc
or
test
inc
repz
inc
inc
popf
clc
pop
mov
movs
test
mov
or
clc
sub
aas
mov
or
dec
mov
fsub
ins
enter
sbb
call
lds
inc
fwait
out
xor
dec
call
dec
push
mov
fmul
loopne
ss
dec
pop
cmps
loop
inc
push
lds
rcl
xchg
lea
sbb
not
jle
jle
xor
loopne
jl
or
push
or
adc
(bad)
cmp
mov
xchg
mov
cmc
add
xchg
sub
in
xchg
cmp
sub
xchg
fbstp
pop
pushf
mov
and
data16
test
test
sbb
xchg
pop
int
div
ins
adc
inc
fdiv
pop
pusha
call
fdivr
bound
sub
popf
push
sahf
mov
into
sbb
in
int3
lea
cmp
pop
rcr
jns
shr
cmp
cs
xor
mov
push
ret
jle
pop
ss
cmps
push
popf
out
sbb
pushf
test
loop
ret
mov
gs
inc
mov
push
pop
mov
xor
dec
xchg
addr16
mov
jle
rcl
mov
ror
into
inc
stos
in
in
dec
jp
push
mov
and
out
push
xchg
gs
scas
call
loopne
and
fs
aaa
mov
lea
inc
cli
mov
push
mov
outs
and
jle
nop
pop
inc
add
cmp
pop
sub
mov
push
dec
xor
jns
int3
jge
adc
mov
loopne
mov
inc
xchg
adc
pop
mov
mov
xor
cmp
aam
cmp
pop
add
sbb
push
mov
loope
mov
movs
and
out
adc
pushf
scas
(bad)
movs
mov
out
cmp
and
loopne
xchg
retf
loop
icebp
inc
mov
cmp
repnz
(bad)
idiv
inc
(bad)
jno
aaa
addr16
push
jmp
outs
mov
inc
or
cwde
(bad)
mov
jp
movs
xchg
and
dec
fst
add
mov
repnz
xor
out
mov
sub
imul
hlt
outs
dec
(bad)
xchg
stos
jge
adc
mov
push
sub
sub
lock
jge
xor
movs
and
dec
xor
ins
scas
pushf
mov
int
mov
sub
(bad)
and
dec
mov
pop
aaa
adc
xor
sbb
sbb
ret
inc
les
outs
pop
stos
loop
jmp
and
push
or
xor
dec
mov
es
sti
add
lds
cmp
or
loopne
or
daa
mov
into
cmps
retf
xchg
push
ret
repnz
xor
jno
inc
pusha
and
test
test
call
inc
dec
or
push
mov
jmp
das
dec
xchg
xor
dec
sbb
fisttp
int3
in
in
mov
movs
imul
mov
mov
add
push
aam
and
pop
xchg
(bad)
cmc
pop
xchg
outs
leave
cld
jmp
and
imul
into
in
jno
clc
pop
add
retf
stos
movs
dec
ficomp
xchg
addr16
jne
sti
mov
inc
mov
into
mov
mov
dec
mov
mov
aam
cli
rol
adc
jmp
add
mov
hlt
dec
inc
add
test
xchg
inc
push
cli
sub
jge
push
xchg
mov
push
ss
push
mov
mov
ja
fs
es
cmps
cli
rcl
test
xor
dec
daa
bound
inc
fist
test
adc
fistp
ds
rcl
xor
jg
push
add
rcr
stos
dec
rcr
xor
xchg
stos
js
xchg
je
movs
mov
lds
and
test
int3
adc
addr16
inc
xchg
nop
in
(bad)
cmp
ds
scas
pop
pop
inc
pop
fidiv
mov
push
mov
pop
movs
mov
add
cmp
mov
add
(bad)
lock
push
jbe
shl
cwde
pop
outs
pop
mov
sbb
dec
add
dec
enter
mov
push
loop
jno
mov
add
mov
std
or
mov
sbb
pop
push
push
call
inc
sbb
jle
xchg
popa
cwde
and
or
pop
aaa
adc
push
cli
sub
fcmovbe
popa
lods
icebp
dec
mov
pop
shl
dec
pop
int
add
fisubr
sbb
inc
push
loop
imul
leave
pop
push
adc
jge
jp
xchg
sub
in
mov
fs
xor
shr
sar
adc
jecxz
das
jnp
call
fcom
xor
ja
cmp
in
das
loope
cmp
pop
fistp
je
popa
dec
pop
adc
inc
pop
adc
add
ret
and
or
dec
repnz
lock
bound
(bad)
mov
inc
fsubr
mov
cmp
inc
pop
out
cmps
jg
add
push
sar
das
test
aad
jb
sub
call
ss
loop
lds
mov
inc
pop
out
mov
(bad)
mov
or
in
xchg
fxch
add
aas
and
ja
test
add
cli
sar
xchg
sub
into
in
and
xor
mov
push
push
aaa
mov
ret
sub
aam
push
int
push
loop
fild
repnz
add
mov
scas
xor
clc
jns
push
pop
push
js
push
push
and
dec
shl
pop
lods
aas
popf
fcomp
iret
xchg
mov
jmp
ja
xlat
enter
ins
lock
dec
xor
push
jge
push
cwde
dec
adc
inc
mov
dec
aad
mov
inc
inc
imul
(bad)
test
xor
imul
adc
push
push
(bad)
mov
sbb
mov
pop
outs
push
cmp
rcl
fs
push
and
jmp
add
or
pop
dec
jg
lahf
push
out
out
test
(bad)
(bad)
fisttp
or
(bad)
push
lock
mov
loop
inc
inc
sbb
or
outs
mov
jae
fistp
xor
push
xchg
sti
imul
dec
rcl
test
mov
jge
rcr
push
int3
pop
cmp
in
push
test
mov
popf
movs
mov
dec
mov
push
mov
xor
and
xchg
ss
and
loopne
retf
daa
out
jl
push
mov
jl
rcr
loopne
fs
stos
mov
(bad)
adc
icebp
outs
cmp
xchg
ds
mov
ret
jo
hlt
popf
xchg
arpl
pop
jmp
ret
jns
aad
push
(bad)
jns
pop
aad
in
das
rol
adc
jecxz
cdq
mov
sbb
jmp
add
xchg
sub
test
inc
cwde
jg
jp
inc
pop
and
and
adc
pop
rcr
mov
xchg
call
(bad)
adc
jae
or
repnz
push
outs
icebp
jnp
xchg
push
xor
pushf
mov
dec
cdq
das
jl
out
jmp
(bad)
jge
fwait
pop
data16
lods
rol
sbb
sbb
add
shr
sbb
jmp
inc
(bad)
xlat
leave
inc
dec
and
dec
sub
mov
or
shl
pop
xor
lods
adc
adc
jge
(bad)
mov
call
cmp
and
std
jmp
js
adc
(bad)
jnp
jne
xchg
sub
clc
out
push
adc
stc
in
xchg
dec
mov
ds
cmp
mov
xchg
jb
retf
je
shl
adc
cmp
popf
or
fild
dec
xchg
ret
imul
jne
outs
(bad)
adc
ret
jl
mov
loop
clc
retf
cdq
cmp
popa
inc
in
repnz
mul
fimul
div
loopne
mov
push
ja
push
les
push
scas
stos
mov
out
push
loop
mov
jecxz
shl
mov
jecxz
call
setbe
ret
dec
popa
xchg
fs
cmp
jb
in
dec
adc
dec
imul
dec
pushf
ror
inc
(bad)
pop
push
in
adc
jb
stos
inc
mov
xchg
test
xchg
cmp
jno
outs
and
fistp
adc
xor
inc
jmp
dec
dec
test
mov
jmp
popf
fild
xor
into
inc
(bad)
ins
dec
es
int3
push
push
out
jp
or
xor
loope
adc
movs
mov
shl
adc
in
loope
and
mov
pop
mov
out
mov
lods
sub
or
pop
push
cmp
ins
inc
xor
fs
cld
fisubr
pop
fld
adc
mov
clc
add
xchg
sahf
outs
dec
mov
mov
clc
jmp
pop
mov
pop
stos
or
rol
loope
push
push
mov
ja
push
mov
lds
int3
push
aas
scas
jmp
in
sar
push
aam
xchg
mov
cli
jl
or
and
sbb
enter
mov
sbb
push
psrad
xchg
xor
sub
in
mov
(bad)
icebp
call
fild
adc
fldcw
(bad)
push
fisubr
adc
or
jb
inc
arpl
adc
mov
loopne
or
inc
jnp
push
sbb
xchg
or
xchg
sbb
ret
xchg
push
mov
mov
call
push
inc
or
jle
jbe
jne
mov
std
jo
fisub
add
xchg
lods
inc
imul
arpl
xor
mov
and
imul
inc
adc
ss
pop
lahf
inc
test
loope
jo
push
mov
aaa
div
sbb
std
int3
outs
mov
mov
nop
sahf
push
pushf
adc
fild
outs
pop
xlat
and
mov
cmc
fwait
mov
jns
pop
and
adc
cdq
gs
adc
enter
pop
fistp
jnp
sbb
(bad)
fmul
(bad)
sar
outs
jmp
dec
pop
test
out
sbb
jno
mov
cmp
jmp
pop
and
sbb
inc
mov
lds
dec
(bad)
jecxz
xchg
mov
adc
and
(bad)
movs
jecxz
(bad)
gs
leave
mov
pop
(bad)
xchg
or
xchg
rol
(bad)
in
cmp
je
push
sahf
jbe
mov
mov
or
call
mov
stos
jle
pop
data16
pop
aaa
inc
sbb
enter
mov
or
push
add
push
cmp
mov
icebp
jbe
push
std
ins
sbb
cmp
fnstenv
mov
cmps
in
cmp
mov
stc
out
inc
xor
or
inc
rep
xchg
test
mov
xor
cmps
push
inc
push
push
push
retf
pop
aas
xchg
ds
lock
dec
ja
cli
fwait
or
pop
sbb
adc
aas
cmp
popa
popf
scas
push
xchg
jle
jbe
xor
in
loope
xor
dec
fstp
(bad)
aas
clc
inc
jl
mov
loop
and
aam
jne
xor
mov
das
xchg
inc
scas
mov
sbb
adc
in
monitorx
daa
mov
ja
pop
cli
or
popa
jle
mov
xchg
aaa
cmp
cld
test
div
cmp
(bad)
mov
pop
lods
pushf
inc
sbb
(bad)
out
nop
push
pop
aas
iret
nop
jo
mov
fcomip
repz
rol
imul
and
and
mov
test
lock
(bad)
jno
mov
sbb
pop
pop
sti
fcmovnbe
pop
mov
sbb
daa
not
pop
or
cdq
icebp
ret
mov
pop
(bad)
cmp
jmp
mov
mov
add
adc
add
int
jno
fcomp
push
or
int3
shr
cmp
cmp
jno
fcomip
test
repnz
xchg
cli
cmc
ds
ins
js
jmp
push
rcl
arpl
inc
sub
sbb
adc
leave
addr16
iret
in
jle
cwde
xchg
call
(bad)
hlt
adc
jbe
inc
and
inc
popf
cld
cmp
jns
cmps
jmp
hlt
add
popf
cmps
adc
adc
scas
inc
repz
pop
cmp
mov
mov
iret
mov
je
mov
cmovae
mov
retf
push
mov
dec
movs
hlt
mov
iret
xchg
xchg
cli
int3
pop
and
ret
ret
jge
mov
pop
dec
lea
add
or
fs
(bad)
cmps
sbb
hlt
xor
mov
ret
fadd
jp
adc
(bad)
shr
stc
(bad)
test
sub
add
mov
and
pop
rol
jge
std
push
sub
stc
ret
dec
fdivrp
push
cmc
jle
pop
in
sbb
cs
test
leave
xor
jno
inc
push
push
sub
mov
adc
xchg
jg
stos
or
aaa
add
sub
jns
add
xor
cdq
xchg
sbb
sub
fidiv
jnp
sbb
retf
or
sub
mov
mov
mov
aas
xor
adc
mov
mov
mov
add
shr
sar
xor
adc
dec
fsub
xchg
popf
mov
inc
(bad)
mul
sbb
dec
ror
cwde
pop
scas
lods
fadd
fidiv
mov
inc
test
sub
ja
adc
inc
sbb
mov
dec
je
pop
sub
imul
jecxz
pop
adc
jns
jb
mov
lfs
cld
outs
je
stos
cmp
mov
lock
xor
inc
pop
add
xchg
lock
ja
test
sar
sti
sub
daa
mov
daa
(bad)
fisttp
mov
scas
stc
bound
aaa
xchg
push
bound
call
xchg
cmp
mov
sahf
sbb
jp
rol
mov
imul
pusha
push
(bad)
iret
leave
(bad)
or
inc
ja
in
bound
push
sbb
add
es
ret
mov
push
idiv
and
sbb
mov
and
(bad)
pop
xchg
pop
add
mov
pop
xor
loope
arpl
cmp
ins
gs
leave
nop
fistp
stc
push
or
or
xor
cmps
in
scas
inc
cmp
popa
and
pop
enter
lods
push
and
int3
dec
jle
inc
sbb
cmp
or
movs
lods
jle
jnp
rcr
mov
loope
(bad)
push
or
or
imul
inc
push
div
faddp
cmps
jb
push
pop
scas
(bad)
xor
or
std
cmp
inc
add
ror
or
addr16
sbb
repz
jmp
(bad)
xchg
jb
shr
dec
in
outs
sub
ins
fs
jnp
push
in
push
mov
jmp
ror
repz
jg
xor
push
or
repz
cmp
and
fsub
mov
add
pushf
fs
jo
loopne
xor
jne
leave
or
shl
sub
das
mov
vmread
out
and
push
jb
outs
jl
xor
jnp
adc
mov
mov
and
das
inc
add
add
fwait
jmp
jb
push
aaa
dec
fst
mov
lds
daa
lods
stc
repnz
add
sub
fsubp
jl
or
out
aaa
add
ficomp
scas
fcmovu
or
sub
imul
sub
xor
sub
mov
lahf
sbb
cdq
xor
push
ret
jecxz
or
les
mov
mov
in
xor
dec
into
fisub
mov
idiv
xchg
daa
test
imul
ss
lahf
and
pop
push
ja
pop
scas
(bad)
loope
dec
inc
arpl
retf
cmp
push
out
sub
add
rcr
hlt
xlat
stc
xchg
jecxz
retf
(bad)
retf
push
cmp
gs
push
mov
cmp
mov
dec
out
rcl
jge
mov
addr16
sbb
jle
jns
mov
(bad)
xlat
push
daa
add
test
cmp
mov
xlat
cli
loope
xor
aaa
mov
push
stos
add
sub
jmp
addr16
mov
jle
(bad)
mov
movs
sbb
cdq
popf
xchg
jmp
imul
ins
xchg
sbb
cmp
loop
test
mov
div
pop
pop
scas
std
sub
add
(bad)
xor
or
lea
and
or
es
ror
jns
add
xchg
jns
jno
push
fmul
add
sub
push
inc
repz
push
loope
jbe
push
mov
push
out
in
adc
push
shr
mov
jg
stos
leave
fucomi
sbb
rcl
mov
mov
je
out
lods
sti
mov
or
(bad)
dec
nop
dec
mov
push
inc
fisub
add
repnz
(bad)
mov
xchg
cmps
adc
inc
sub
ret
dec
pop
adc
mov
or
pop
jnp
imul
lods
mov
aad
stos
ja
cdq
xchg
or
and
dec
aas
sbb
mov
cmc
in
mov
sbb
mov
mov
cli
pop
bound
mov
mov
mov
or
lods
mov
mov
push
adc
pop
pusha
(bad)
sbb
xchg
push
in
jle
add
neg
fidivr
lea
movs
mov
es
push
gs
jo
jmp
mov
hlt
das
push
pop
daa
out
add
rol
xor
pop
dec
cmps
pop
dec
leave
push
sub
imul
xchg
int3
daa
popa
pop
xor
pop
xor
out
fstp
ror
scas
ja
ja
lahf
out
aam
xchg
enter
mov
in
sbb
sub
ds
les
in
out
int3
or
and
es
adc
mov
dec
bound
xchg
inc
pop
sub
hlt
fs
cwde
out
and
pusha
mov
push
test
cmp
mov
pop
dec
sub
inc
lock
retf
adc
jns
mov
jmp
jo
dec
fnsave
ins
xchg
sbb
neg
mov
sti
cmp
loope
cmc
in
mov
scas
xchg
dec
push
xor
sahf
and
adc
ret
mov
pop
inc
loopne
xchg
sub
mov
add
ret
bound
stos
rcr
push
sub
mov
jae
sbb
mov
iret
jmp
cmp
mov
cmc
movs
icebp
xchg
push
xlat
add
inc
in
ficomp
mov
inc
dec
ins
in
jmp
xchg
sahf
dec
inc
xor
(bad)
loope
repz
call
jl
je
rcr
shl
cdq
mov
jecxz
adc
adc
pop
cmp
aaa
call
jbe
adc
inc
aaa
mov
fisttp
or
jp
call
sbb
fs
outs
mov
or
jle
ins
and
mov
mov
movs
pop
je
pop
in
and
xchg
fisub
popa
dec
je
loopne
popa
xor
jne
je
repnz
adc
pop
xor
out
fadd
inc
and
xchg
daa
xchg
xchg
dec
mov
or
jno
arpl
leave
and
addr16
stos
push
dec
push
dec
loope
push
mov
test
pop
sahf
nop
mov
fdivr
in
xor
fisubr
lods
inc
jb
adc
sbb
xchg
jno
fnstenv
push
mov
in
inc
mov
sti
push
hlt
cmp
mov
imul
(bad)
scas
mov
fst
push
mov
xchg
call
gs
sbb
mov
xlat
pushf
jae
popa
push
and
cld
dec
mov
mov
push
test
xor
add
call
cmc
mov
retf
cmps
lds
jmp
adc
add
mov
pop
sbb
sbb
out
push
dec
add
mov
movs
pop
xchg
fcom
add
sar
or
xlat
ret
push
dec
cdq
xchg
enter
xchg
es
or
scas
out
loop
or
aaa
in
mov
cdq
mov
xor
and
fstp
(bad)
jns
fisttp
xchg
add
add
hlt
xor
sbb
or
mov
jp
imul
out
sar
retf
xlat
into
adc
pop
mov
inc
repz
outs
imul
arpl
stc
add
aam
adc
mov
lods
cli
imul
cwde
inc
and
test
rol
xor
dec
push
(bad)
in
pop
xor
in
loop
sahf
and
mov
mov
movs
into
mov
iret
retf
pop
mov
mov
bound
sbb
inc
inc
mov
pop
neg
(bad)
ror
test
sar
and
adc
pop
movs
or
adc
adc
adc
push
pop
sbb
dec
xchg
inc
jmp
std
mov
or
pusha
into
je
dec
cmp
iret
fsubrp
and
scas
stc
xor
mov
lock
xchg
jmp
fcmovb
bound
gs
inc
bound
mov
jb
sti
xlat
stos
in
es
inc
push
pop
pop
sub
sub
jmp
push
cdq
fsubp
nop
dec
pop
(bad)
pop
fbld
in
pop
aad
cdq
cmps
jns
mov
int3
cmp
fsubr
push
xchg
pop
xor
neg
xchg
jmp
aad
loop
xlat
mov
xchg
dec
xchg
sti
fidivr
jecxz
dec
jge
push
jno
jns
ja
or
std
mov
mov
clc
inc
or
clc
xor
pop
sub
icebp
shr
cwde
pusha
js
push
pop
jmp
xor
ins
sbb
ja
xor
and
xchg
jmp
frstor
shr
cmp
jb
dec
xchg
adc
jge
mov
xlat
mov
xchg
movs
adc
ret
les
mov
call
push
and
add
movs
aad
outs
movs
in
(bad)
adc
mov
xor
iret
cld
aaa
outs
inc
or
aad
cmp
sbb
cmp
xchg
pop
adc
in
ret
mov
xchg
dec
scas
mov
push
jno
mov
cmp
xchg
inc
xchg
fisttp
dec
add
pop
jp
imul
dec
pop
ret
add
or
mov
xor
jecxz
lahf
mov
pop
jmp
push
daa
xchg
pushf
scas
push
retf
pop
add
and
popf
vandnps
dec
add
push
ins
aas
pushf
fldenv
xchg
push
arpl
xchg
mov
dec
loope
pop
xchg
sar
jg
push
rol
lods
inc
and
dec
add
es
or
adc
bound
lahf
and
jmp
gs
add
and
shl
mov
or
dec
add
sbb
cmp
cmps
push
in
xor
xchg
(bad)
jbe
rep
sbb
sbb
scas
ds
mov
mov
stos
ds
ins
dec
inc
mov
sub
ret
ds
pushf
pop
std
cmp
fnstcw
mov
out
cld
stc
sbb
cli
or
mov
shl
sbb
sub
jp
fs
ins
repnz
ficomp
jmp
mov
pop
lock
stc
jb
lds
shl
inc
aaa
mov
pushf
in
jmp
gs
sbb
ds
das
cdq
test
imul
sub
and
mov
dec
sbb
dec
maxps
dec
inc
(bad)
sar
outs
mov
jns
scas
mov
mov
imul
cmps
xchg
stos
sub
and
xor
outs
(bad)
pop
stos
xchg
fld
scas
cmps
mov
sbb
je
scas
dec
add
push
xchg
rol
add
int3
ror
sbb
cmpxchg
or
(bad)
pop
lds
mov
add
inc
inc
mov
adc
cs
dec
adc
ins
dec
pushf
adc
or
lods
imul
mov
sub
arpl
iret
shr
cmp
mov
ins
retf
cmc
pop
gs
lods
and
retf
jmp
xchg
ja
outs
ror
jecxz
ret
mov
addr16
sub
fld
pop
pop
int3
daa
js
stos
jl
aaa
mov
not
mov
iret
xlat
jmp
not
jmp
jle
scas
ficomp
mov
out
mov
mov
adc
xchg
adc
pop
xchg
jno
outs
popf
adc
dec
dec
ins
pop
adc
rcl
sar
add
scas
jbe
jl
push
loop
cmp
ficomp
sub
cmps
mov
jmp
movs
and
lock
push
jge
sub
inc
daa
outs
loopne
out
mov
mov
cld
or
pusha
stos
inc
cs
aad
cmp
stos
xchg
sub
push
xchg
into
sbb
mov
or
shl
out
xchg
xchg
stc
dec
mov
or
add
loope
ds
push
xchg
fnstenv
aaa
mov
push
sub
cmp
jnp
arpl
rcr
jns
jmp
or
fiadd
arpl
ss
inc
dec
lods
xlat
jb
aaa
lea
xchg
pusha
mov
fdivr
test
aaa
jae
and
sub
sub
shl
mov
(bad)
out
mov
ss
out
loopne
pop
xchg
mov
jg
mov
idiv
mov
jp
cmp
sbb
cmp
in
jle
stos
retf
dec
ins
mov
cmps
lods
test
cmp
js
rcl
push
leave
out
(bad)
dec
push
mov
fs
stos
imul
push
dec
jmp
out
jnp
aad
jbe
mov
test
imul
iret
gs
repz
test
mov
mov
push
jge
adc
test
clc
mov
sbb
push
push
sar
jg
jp
ret
call
or
inc
dec
jmp
cmps
xchg
xchg
loopne
jno
cmp
mov
jns
pop
add
sbb
dec
push
xor
sets
or
push
push
dec
dec
je
push
mov
sub
in
popa
adc
xchg
inc
pop
fiadd
retf
xor
sub
mov
cmps
sub
ins
lods
shld
xchg
jge
clc
cmp
push
(bad)
and
push
lods
call
scas
dec
leave
sub
(bad)
and
mov
mov
inc
cmp
xchg
(bad)
jns
mov
mov
mov
in
mov
mov
mov
push
xchg
loop
sub
mov
cmps
cmc
cmc
lock
add
jecxz
inc
push
and
xchg
aaa
sahf
outs
xchg
dec
in
adc
loopne
iret
popf
test
mov
(bad)
mov
stos
sbb
int
or
or
stos
aam
dec
call
adc
xchg
jo
outs
mov
mov
push
clc
sbb
and
lahf
movs
shl
cli
stos
cpuid
ins
jmp
sar
xor
mov
xlat
ficomp
pop
pop
or
(bad)
call
inc
adc
sub
lahf
and
sti
scas
cmp
imul
pop
jmp
push
add
stos
cs
into
popa
out
fist
add
jno
pop
inc
popa
sbb
xchg
jmp
mov
call
arpl
retf
xchg
mov
lds
leave
pop
les
pusha
dec
fsubr
jg
add
xor
or
xchg
jge
mov
push
shl
mov
cmp
js
mov
icebp
icebp
nop
inc
jecxz
mov
xlat
test
popa
cmps
(bad)
and
fs
test
jb
mov
cmp
jne
jle
mov
pop
test
cmp
in
data16
jo
mov
mov
in
mov
shr
outs
or
iret
add
xchg
movs
inc
add
pop
call
sar
repz
(bad)
jmp
pop
add
push
dec
mov
(bad)
jns
ins
adc
es
push
push
icebp
push
add
adc
push
or
add
inc
inc
sub
repz
xor
pop
xchg
dec
int3
jmp
out
xchg
push
mov
fidivr
xor
push
push
inc
mov
or
jge
outs
cld
or
icebp
add
retf
jno
and
jae
adc
or
or
out
sbb
ret
rcr
mov
pop
ja
pusha
pop
or
hlt
xchg
cwde
sub
ins
jne
retf
sub
out
aam
pop
pop
sbb
add
add
add
push
hlt
jp
push
sub
mov
pushf
daa
pop
(bad)
mul
sub
fdivp
or
or
jb
push
dec
mov
ds
in
iret
out
and
dec
mov
test
push
repz
inc
loopne
clc
inc
or
mov
xchg
cs
add
sbb
ja
fstp
fwait
pop
out
push
push
dec
int3
(bad)
arpl
(bad)
cmps
push
mov
fisubr
test
fs
sbb
push
mov
cwde
dec
mov
inc
push
and
hlt
xor
sar
call
cs
push
jno
mov
cmp
mov
rol
xchg
jno
dec
outs
mov
push
or
pop
mov
xor
push
addr16
pop
cmp
or
push
adc
inc
test
ror
sbb
xor
stos
(bad)
retf
pop
scas
mov
outs
daa
sti
pushf
push
nop
(bad)
out
ds
mov
dec
out
jo
inc
rcr
mov
leave
test
add
test
xchg
jnp
or
lock
stos
inc
adc
cli
and
repnz
fadd
sbb
int
sbb
pop
push
stos
icebp
in
dec
mov
sub
inc
adc
fwait
in
fidiv
dec
inc
and
ds
inc
or
jle
mov
lock
es
pop
inc
cmp
pop
and
and
aaa
and
rcr
arpl
xor
clc
pop
push
cmp
das
std
ds
jae
mov
(bad)
call
push
mov
pop
mov
push
lods
jmp
enter
cld
das
mov
(bad)
adc
adc
or
cmp
mov
jb
mov
stos
test
sbb
inc
test
(bad)
mov
cs
xor
mov
fld
push
push
xchg
jae
mov
xchg
cmps
xchg
ror
lock
stos
mov
mov
jp
add
cld
in
xor
stos
(bad)
das
std
push
sbb
jb
repnz
pop
sbb
inc
adc
test
and
jb
fld
or
sub
imul
add
test
xor
adc
loop
push
leave
xor
jne
fsubr
pop
xor
cmp
pop
adc
push
add
xchg
jo
sub
(bad)
je
sahf
outs
pop
inc
out
js
cmp
or
pop
xor
leave
cmp
adc
or
push
les
lods
out
imul
inc
repz
adc
in
sbb
jmp
int
add
dec
add
(bad)
sub
sub
ja
and
cmp
je
repz
test
leave
popf
fmul
arpl
dec
leave
sub
push
mul
or
cs
xor
retf
jmp
outs
ins
int3
pop
push
mov
fisubr
std
mov
ss
mov
push
sbb
pop
cs
cmps
inc
popf
dec
jne
mov
push
xchg
movs
lds
das
rcl
fdiv
adc
data16
jg
idiv
das
dec
jno
push
mov
mov
bnd
js
add
sbb
mov
mov
dec
jne
jb
fldcw
es
or
clc
dec
cli
ja
out
test
mov
mov
dec
and
xchg
test
cmps
ja
pop
test
inc
pusha
in
and
call
push
popf
pop
stos
add
add
into
dec
fsubr
aaa
repz
add
test
lahf
inc
mov
scas
mov
loope
mov
cmp
add
retf
lahf
pusha
xchg
lahf
(bad)
xor
xchg
or
pop
fld
and
pop
push
rcr
pop
lahf
xor
adc
in
hlt
pop
xlat
xor
enter
scas
(bad)
adc
rcr
and
popa
ja
pop
xchg
out
xchg
dec
adc
pop
ror
cld
jae
pop
jg
out
fcmovb
js
(bad)
inc
fcom
out
cmps
out
(bad)
mov
cmp
hlt
sbb
or
iret
sbb
xor
ret
sbb
data16
out
jle
push
xchg
out
or
push
mov
repnz
mov
pop
add
inc
cmp
push
inc
das
pop
jmp
cld
or
add
repz
mov
jle
cs
shr
and
mov
popa
cmc
and
popfw
in
push
fs
in
(bad)
sbb
nop
inc
pop
nop
xchg
mov
jae
nop
mov
jb
js
mov
inc
test
sub
cmps
out
push
lds
or
mov
add
xchg
xchg
dec
inc
cmp
jo
pop
mov
movs
int
push
xlat
xchg
out
leave
mov
in
dec
(bad)
rcpps
jp
sbb
in
out
sbb
adc
add
or
pop
add
int
mov
inc
in
iret
jp
loope
mov
mov
cli
sbb
outs
retf
imul
icebp
and
inc
pop
and
or
icebp
or
ds
jb
dec
jp
jl
xchg
xchg
imul
xor
or
mov
daa
cmp
lock
(bad)
cmps
and
pusha
neg
mov
or
push
add
mov
(bad)
xchg
ja
test
loopne
cmp
jno
mov
mov
or
and
dec
mov
jl
mov
je
pop
mov
pop
lds
aad
ss
xchg
ror
mov
or
push
xchg
btr
or
jmp
adc
push
gs
(bad)
icebp
push
sub
add
lods
cmps
cmp
dec
jae
sub
rcr
add
sbb
xchg
jns
sti
pop
aam
cmp
jb
add
jo
push
cmp
jo
out
lods
std
pop
cld
adc
mov
jmp
scas
xchg
and
cmc
or
pop
push
cwde
fisubr
mov
cmp
mov
pop
xchg
mov
pop
add
jnp
jge
jo
test
fwait
jns
test
retf
dec
jae
ins
cmp
xchg
(bad)
or
dec
(bad)
lock
aam
sbb
sbb
sub
retf
ficom
mov
out
les
mov
nop
aad
push
in
jmp
mov
sub
scas
scas
sti
dec
mov
dec
loopne
mov
inc
mov
push
jl
jg
data16
pop
fldcw
dec
stc
mov
cmp
ins
sub
out
push
or
pop
and
cli
in
push
sub
cmp
test
mov
les
je
xor
or
fsubr
dec
sahf
add
addr16
cmps
push
lea
xor
movs
les
sub
cmps
or
addr16
stos
lods
out
fs
push
clc
jge
pop
in
fcomip
cwde
jb
pop
sub
cmps
mov
xor
scas
cs
xchg
mov
pop
fdivr
push
sbb
push
sbb
fst
sbb
mov
(bad)
cmps
mov
and
bound
(bad)
out
imul
ror
daa
xchg
dec
inc
mov
cwde
(bad)
shl
cmps
das
add
jo
pop
xor
inc
mov
mov
into
ret
dec
ins
xor
jnp
jecxz
cdq
(bad)
call
call
in
mov
mov
pusha
out
dec
fwait
sbb
pop
sbb
stos
add
mov
ret
xlat
pop
sub
or
cmp
pop
js
test
xor
nop
movs
sub
test
mov
push
es
jb
inc
into
mov
sbb
stos
and
add
lea
jbe
mov
rcl
mov
sbb
or
sub
jecxz
test
pusha
mov
pop
outs
repz
das
rcr
sbb
adc
int
sub
pop
fs
stos
dec
xor
(bad)
mov
fimul
push
pop
mov
and
leave
addr16
dec
aas
iret
cmp
lods
dec
inc
shl
mov
das
mov
push
cdq
ds
xchg
sub
fnstsw
cmp
dec
aas
rol
jmp
adc
jecxz
add
(bad)
or
cdq
or
pop
mov
jp
mov
inc
pusha
lea
bound
arpl
ffreep
rcr
mov
mov
push
retf
add
cmp
pop
mov
idiv
mov
dec
imul
aas
test
dec
mov
sub
jmp
out
add
and
push
aam
into
retf
repnz
pop
fcomi
(bad)
pop
movs
in
or
std
movs
sub
repnz
hlt
jae
add
xor
mov
push
bound
xor
leave
data16
out
movs
jmp
addr16
fidivr
(bad)
cmp
inc
ror
push
fstp
repnz
out
call
sub
dec
fwait
in
bnd
ret
add
mov
mov
outs
cmp
sti
cmp
pop
add
fistp
mov
mul
popf
shl
cmp
aaa
push
cmp
and
jg
cld
sub
cmp
sbb
(bad)
loope
repnz
sbb
jmp
inc
pop
ins
dec
cmp
sbb
jp
(bad)
loopne
add
push
add
adc
add
in
xor
call
jp
icebp
and
mov
jno
aad
fnsave
retw
loope
mov
or
jbe
repnz
sub
imul
fst
sar
pop
rcl
mov
add
(bad)
push
cwde
dec
sbb
lds
jl
add
movs
xlat
ja
inc
bound
(bad)
aam
inc
in
sbb
into
add
mov
ins
cmp
mov
or
popf
je
out
mov
scas
shl
popf
popa
mov
lods
pop
sbb
gs
mov
push
fs
cmp
and
mov
pop
or
iret
stos
mov
cmc
push
xchg
sbb
loop
adc
int
hlt
push
fs
sti
xlat
fs
xchg
add
dec
js
jmp
xlat
adc
out
inc
lea
jno
dec
adc
scas
aas
pop
pop
or
out
inc
inc
popf
mov
das
(bad)
cmp
or
ins
sar
push
es
fisub
(bad)
mov
and
pop
add
sahf
mov
into
sub
fdivr
cld
jnp
xchg
into
sar
xchg
pop
push
mov
push
and
mov
mov
pop
add
pop
dec
and
and
lahf
cmc
nop
or
mov
fdivr
shl
out
sahf
aad
cs
pushf
call
pop
ins
fld
scas
inc
shr
in
ss
stc
or
jg
mov
out
data16
aaa
ror
sbb
pusha
pusha
call
xchg
mov
inc
out
inc
into
sar
dec
mov
sub
cmp
mov
mov
sbb
les
(bad)
jecxz
ins
cmps
fcmovnbe
sub
(bad)
movs
push
cmp
cmps
add
dec
ret
sbb
in
mov
(bad)
xchg
xchg
lock
jmp
test
mov
fld
pop
lds
(bad)
fldenv
xchg
inc
jmp
addr16
ja
jns
add
gs
test
pop
adc
fild
pop
cmp
inc
inc
add
dec
fsubrp
dec
fisub
cli
je
test
sbb
pushf
sub
dec
push
test
ret
mov
scas
(bad)
ins
xchg
push
push
inc
inc
sti
mov
xchg
outs
adc
hlt
test
repz
and
dec
loop
xor
mov
call
mov
cs
sahf
ins
call
push
inc
aaa
sbb
fstp
mov
xor
jecxz
sbb
lods
xchg
jne
in
data16
pushf
mov
xor
add
add
xchg
pop
loop
scas
leave
dec
xchg
test
push
mov
lock
out
sbb
cmps
jo
cmp
pop
mov
jns
mov
sub
cld
sbb
or
pop
adc
pusha
add
dec
sbb
ja
es
cmp
push
xor
mov
cmp
xchg
ins
sub
(bad)
out
cmps
lods
out
lods
fs
pop
adc
pop
aaa
push
pushf
loop
in
xor
jbe
sub
xor
sahf
mov
pop
sub
push
cld
and
add
and
shl
shr
cmp
mov
xchg
xchg
jp
mov
lea
dec
ss
int
cs
call
sbb
das
or
pop
xor
popf
xor
in
dec
lods
shr
outs
sub
adc
jp
(bad)
loope
add
test
js
xchg
dec
(bad)
rcr
xor
hlt
xchg
inc
cwde
sbb
int
ss
adc
sub
jl
shr
enter
repnz
and
inc
ins
xor
dec
inc
pop
psraw
imul
fisttp
mov
xor
inc
(bad)
jmp
xchg
xchg
xchg
pop
in
data16
push
stos
popf
and
jl
js
jle
xchg
hlt
(bad)
mov
push
sub
xchg
push
cli
xor
jmp
jecxz
stc
ficom
ficom
iret
sbb
xchg
shl
inc
push
sub
mov
pop
cld
test
inc
bound
mov
pop
dec
mov
mov
sbb
cwde
mov
mov
mov
cmp
retf
xchg
loopne
add
imul
mov
pop
xchg
lahf
sub
out
scas
dec
fsub
loop
cmp
push
in
mov
jb
stc
jmp
xchg
xor
mov
pop
push
add
and
jle
push
sbb
shl
jmp
sub
sti
push
mov
dec
pop
cmp
push
test
pop
scas
pop
jecxz
xor
dec
popf
mov
jbe
dec
hlt
pop
mov
or
and
std
sbb
ror
inc
sub
fld
cmp
push
dec
test
fcomp
jns
or
or
sub
ds
cmps
xchg
cmp
mov
les
cmc
mov
test
or
jmp
xor
and
and
es
mov
xchg
repz
pop
in
jp
jmp
cmp
cwde
xchg
mov
mov
push
leave
adc
cld
mov
sub
(bad)
jge
inc
jbe
push
jmp
test
and
pop
adc
pop
fisub
or
popf
out
rol
shufps
fcom
pushf
sbb
(bad)
push
pop
dec
pop
in
xor
pop
xor
cdq
ins
jbe
cmp
aad
mov
aaa
loope
mov
js
xor
test
test
and
sbb
sbb
outs
dec
loope
ins
mov
push
inc
dec
jbe
push
jg
fstp
mov
xchg
mov
mov
out
rcr
xchg
dec
cdq
xor
jl
pop
mov
das
sub
fnstenv
popa
jns
jecxz
repnz
cmp
cmps
jmp
push
retf
ss
icebp
nop
ja
(bad)
data16
movs
sbb
mov
sbb
ds
cmp
pop
stos
stc
loopne
sbb
mov
jb
cmp
ret
push
stc
out
(bad)
stos
or
push
cmc
xchg
xor
xchg
sbb
addr16
imul
movs
push
mov
jae
xchg
(bad)
clc
jb
mov
adc
sub
fwait
in
and
call
pop
nop
xchg
mov
xlat
fistp
popf
adc
in
xchg
aad
pusha
lock
cmp
out
and
mov
pop
es
addr16
or
(bad)
sbb
addr16
push
sahf
jmp
xchg
and
clc
movs
out
addr16
xor
inc
clc
(bad)
(bad)
idiv
mov
adc
inc
cmc
cs
cmp
ja
mov
pop
mov
(bad)
stc
xchg
loopne
(bad)
cmp
push
fild
in
mov
(bad)
cwde
jmp
fnstsw
cmp
les
cld
push
inc
mov
push
jbe
fadd
cmps
jle
inc
pop
pop
lahf
xlat
adc
jns
push
int
sub
outs
mov
mov
test
cmps
popf
ret
outs
push
xor
and
cld
xchg
dec
call
fdiv
out
inc
pop
arpl
push
push
aad
popf
mov
xchg
repz
and
cmps
push
cmp
repz
dec
mul
pushfw
push
and
cdq
shr
lock
scas
push
and
lods
enter
cmc
xchg
dec
sub
(bad)
adc
inc
imul
sub
aad
call
int
das
dec
sub
cmp
xor
rcr
xor
add
xchg
xchg
sub
or
shl
(bad)
dec
bound
mov
xor
push
xor
push
xchg
shl
scas
popf
ins
dec
leave
mov
in
lods
mov
mov
sar
pushf
mov
push
ret
lock
or
movs
out
sub
inc
mov
cmp
in
sub
cmp
jbe
pop
test
pop
(bad)
in
(bad)
push
push
jl
add
push
sub
inc
add
rep
nop
mov
(bad)
movs
xchg
push
pop
jmp
add
jo
in
mov
(bad)
add
out
inc
mov
outs
jbe
cld
cdq
in
stos
dec
pusha
mov
imul
shl
dec
int3
div
jno
shl
jp
sub
mov
ins
push
rcl
xchg
pop
repnz
js
int3
imul
pop
das
fidivr
ss
movs
adc
push
dec
out
mov
fdiv
mov
or
add
mov
hlt
or
mov
daa
ret
jmp
lods
jo
outs
inc
adc
loop
or
mov
dec
jge
aaa
lea
test
jbe
rcr
jo
cmp
pop
xchg
popf
mov
loope
movs
jbe
fdiv
leave
scas
(bad)
xchg
test
test
fchs
stos
dec
outs
sbb
xchg
rcr
inc
scas
cdq
adc
or
dec
mov
push
rol
aas
pop
ror
or
pop
iret
mov
shl
fild
cmp
pop
rol
mov
mov
mov
es
stos
cwde
imul
and
scas
or
lock
mov
lods
pop
dec
mov
mov
clc
arpl
in
mov
push
sub
sbb
in
ins
imul
mov
(bad)
shl
bound
daa
inc
es
cld
mov
rcr
sar
xlat
jae
pop
pop
xor
sub
cdq
push
movs
push
mov
cmc
xchg
cs
loope
sti
push
sbb
retf
std
ret
cdq
inc
cli
cmc
mov
or
popf
or
div
ins
jmp
mov
imul
jne
sub
jo
test
pop
nop
loope
cli
repnz
loopne
and
test
jnp
push
sbb
pop
leave
xchg
xor
adc
push
in
lds
xchg
lods
pop
sti
scas
daa
retf
sub
(bad)
cmp
add
jo
xor
cmp
into
retf
pop
xchg
mov
outs
and
icebp
or
ficom
mov
sbb
pop
icebp
jp
inc
add
dec
sbb
aam
cmp
and
mov
sbb
(bad)
lods
imul
loopne
pop
mov
sub
jbe
ja
sbb
jle
mov
push
xchg
jbe
mov
cmps
jnp
jle
inc
cmp
ds
inc
xchg
mov
xchg
or
ret
cwde
lods
es
add
pop
xchg
inc
mov
add
mov
jge
add
fld
push
mov
push
jl
sub
mov
sub
inc
jne
pop
test
inc
std
ds
adc
dec
xchg
mov
outs
jecxz
push
jae
push
leave
sub
mov
movs
sbb
retf
iret
sbb
ficom
daa
inc
pop
adc
jle
(bad)
ror
iret
xchg
push
fcomp
sbb
push
mov
out
mov
repnz
adc
mov
fnstsw
mov
mov
movs
cwde
outs
inc
cmp
test
mov
lods
mov
xor
outs
inc
out
out
jo
push
mov
stos
out
fstp
xchg
push
call
jecxz
mov
stos
(bad)
mov
outs
adc
popf
ins
sub
sti
les
jecxz
jmp
lods
ja
cld
xchg
lods
cmp
stc
jp
adc
jle
push
pushf
inc
xchg
pop
jmp
iret
retf
loope
test
mov
test
cmp
shr
mov
stos
ficomp
jo
fisttp
sbb
addr16
retf
cdq
hlt
imul
arpl
or
jb
mov
dec
pop
inc
mov
add
ret
dec
or
std
cmp
std
push
jo
iret
sbb
mov
push
xchg
add
jp
mov
adc
cmp
ins
popf
popf
outs
mov
dec
lds
outs
out
nop
sub
mov
and
inc
cmp
bound
add
in
adc
bound
and
pop
inc
pop
outs
out
retf
and
lea
shl
pop
or
sub
in
mov
(bad)
pop
das
repz
add
sub
ror
add
daa
jl
jmp
add
lahf
xlat
outs
xor
push
mov
sbb
test
out
jl
xchg
aaa
ja
pop
(bad)
xchg
jbe
ds
mov
jg
adc
push
cmps
inc
or
inc
stos
call
loopne
xlat
jns
push
inc
cmps
movs
pop
dec
(bad)
rcl
dec
xor
push
push
jge
aad
sub
xor
popa
(bad)
sub
ret
sti
xor
lods
jp
dec
dec
dec
sub
enter
mov
and
push
(bad)
int3
cmp
ins
imul
adc
fucom
(bad)
xchg
inc
xor
out
lods
push
mov
adc
mov
xchg
out
jmp
mov
mov
push
xor
and
repnz
sti
ins
or
xchg
(bad)
cmp
mov
fldenv
movs
int3
bound
mov
push
popf
(bad)
retf
cmc
mov
add
mov
repnz
cmp
into
arpl
mov
bound
dec
pop
push
jo
int3
jbe
jne
outs
data16
cld
cmp
ds
xor
data16
jno
mov
pop
mov
mov
mov
mov
and
int3
mov
or
scas
imul
xor
adc
mov
das
fcomp
sub
jle
gs
mov
xlat
jg
xor
jae
add
sbb
loope
in
fdivr
(bad)
mov
pop
jbe
xor
sbb
xor
xchg
inc
mov
dec
movs
dec
(bad)
sbb
push
inc
retf
frstor
imul
sub
hlt
(bad)
int3
push
cmp
jecxz
inc
jne
ret
or
or
stc
inc
mov
stc
inc
mov
add
fs
add
add
(bad)
adc
scas
xor
dec
ins
sbb
mov
inc
add
pop
movs
xchg
adc
add
popa
movs
popa
mov
cmc
cmp
xor
pop
popa
imul
xor
ja
pushf
mov
dec
test
dec
sbb
mov
sub
xlat
sub
or
inc
gs
jmp
or
pop
cwde
xor
repz
dec
xchg
sub
xor
fild
jmp
xchg
xor
mov
and
jp
int3
ss
or
retf
fiadd
cmp
sub
jns
daa
in
jo
cmp
adc
or
retf
mov
pop
sub
jae
xchg
outs
fwait
sar
jg
mov
cs
retf
test
sti
cmp
xchg
push
out
inc
ins
frstor
mov
test
pop
xor
fadd
je
fdivr
dec
sahf
jge
adc
adc
pusha
addr16
and
adc
pop
xchg
jl
push
add
mov
loopne
movs
mov
sub
jmp
or
femms
lods
jo
jnp
or
retf
pop
call
test
or
mov
inc
dec
and
mov
jmp
xchg
sub
xor
push
(bad)
repnz
xor
popa
mov
jb
pop
pusha
cmp
mov
ins
xchg
popf
xor
xchg
add
gs
pop
scas
pop
sbb
retf
add
and
jle
out
ss
xchg
or
lods
lods
add
xchg
xor
sub
mov
jmp
(bad)
jge
and
dec
inc
lods
sbb
ja
mov
pop
cli
es
cmp
sub
push
mov
out
mov
and
and
popa
imul
sar
dec
sub
mov
add
inc
mov
jbe
dec
cld
push
sti
daa
in
mov
mov
mov
dec
cmps
out
jae
out
repz
jns
das
pop
adc
pop
sub
test
add
ja
(bad)
and
xor
adc
sbb
sbb
mov
xor
mov
and
(bad)
stc
das
leave
mov
std
int3
inc
xor
lsl
and
mov
add
mov
ds
sbb
sbb
scas
pop
add
sub
push
mov
or
adc
cmp
dec
dec
ror
retf
cmps
mov
mov
(bad)
int3
test
push
xchg
add
cmc
xchg
mov
cmp
mov
enter
mov
cmp
iret
ret
sub
enter
cmp
rcl
jmp
dec
cmp
and
sub
fcom
mov
jne
and
arpl
sbb
cmp
rcr
(bad)
mov
fadd
je
dec
push
sub
adc
push
adc
xsave
arpl
xchg
into
outs
pop
add
lods
in
dec
fisub
mov
xor
pop
mov
dec
xchg
stc
shl
bound
or
pop
jo
cmps
sti
fadd
pop
sub
mov
fld
fdivr
sbb
push
add
ja
ins
ss
mov
aam
rcr
sub
pop
daa
pop
aam
lahf
add
stos
out
dec
xchg
sub
inc
jl
in
dec
loop
bnd
add
dec
push
test
pop
jae
ins
cmp
fmul
push
retf
mov
push
(bad)
fdiv
out
mov
dec
mov
pusha
rcl
jle
fmul
pop
xor
stos
sub
fst
ds
xor
or
xchg
ins
jecxz
loope
sbb
push
lahf
data16
leave
cmp
(bad)
dec
jne
inc
push
dec
call
cmp
push
sahf
mov
xlat
(bad)
fsub
mov
sahf
cmp
mov
adc
mov
jecxz
cwde
adc
stc
jnp
aas
in
mov
add
xor
pop
push
jecxz
xchg
xchg
repz
mov
test
repz
inc
push
js
add
mov
aas
das
test
pop
sar
sub
aam
out
outs
jb
or
in
ret
xchg
or
retf
and
rcl
lahf
sar
cmp
sbb
cmp
cmp
or
pop
arpl
xor
(bad)
in
push
cs
xor
xchg
xor
shr
lods
push
push
scas
xor
addr16
mov
and
adc
xchg
idiv
inc
sbb
mov
test
sub
fucomi
int
or
adc
(bad)
shl
jp
(bad)
das
mov
inc
outs
dec
popa
inc
mov
mov
stos
ret
push
fld
mov
popf
pop
fidiv
sub
les
cs
pop
lahf
xchg
jb
sbb
push
shl
hlt
adc
(bad)
xchg
push
cld
out
fild
xchg
mov
sub
push
pop
jecxz
ja
lods
mov
add
arpl
push
and
xchg
sub
dec
inc
fcomp
mov
aad
iret
sub
mov
enter
popf
jl
mov
aaa
sub
movs
inc
add
popf
adc
add
ins
jge
data16
lods
and
jbe
jb
mov
sbb
dec
ror
(bad)
fdiv
repz
or
cmp
jge
or
hlt
rcl
jl
fwait
rcl
xchg
popa
jo
pop
fucomip
xchg
lods
or
push
cmp
jmp
lods
rol
push
xchg
out
inc
stos
clc
or
adc
sub
in
cmp
adc
fstp
xchg
add
sbb
jbe
retf
inc
es
leave
fs
out
or
mov
sbb
inc
fadd
pushf
mov
sub
test
mov
mov
daa
fist
ja
mov
fld
cmp
retf
call
mov
mov
sbb
or
iret
jbe
fadd
pop
pop
loop
push
(bad)
push
mov
and
int
test
outs
arpl
out
retf
cmp
pusha
mov
popa
cmp
(bad)
repnz
(bad)
jnp
jmp
in
pop
popf
mov
cmp
shr
inc
stos
pop
test
mov
mov
inc
mov
int
cli
pushf
inc
mov
push
push
jg
pop
mov
push
jmp
jo
mov
call
(bad)
enter
push
popa
mov
(bad)
cld
cmps
xor
sub
sub
jle
hlt
push
ins
imul
cli
cmc
sub
mov
cmps
push
pop
push
jge
mov
sbb
dec
test
add
jo
fsubrp
popa
xor
inc
pusha
add
lea
cmp
les
cli
(bad)
fwait
js
repz
dec
push
sbb
or
cdq
mov
int
dec
iret
xor
add
imul
icebp
pusha
push
movs
bound
iret
mov
sbb
push
fldcw
mov
push
mov
mov
nop
in
sbb
adc
pop
mov
mov
adc
hlt
inc
loop
pop
push
jmp
xchg
jmp
movs
sbb
jae
fst
fsubr
mov
imul
cwde
jp
cmp
jp
dec
sub
jg
mov
and
aas
pop
jo
(bad)
(bad)
mov
sar
fld
fwait
aad
retf
adc
jmp
outs
push
inc
pop
inc
pop
jecxz
sub
loopne
jnp
xchg
push
stc
test
call
clc
cli
xchg
inc
pop
std
imul
jmp
mov
test
adc
inc
xchg
imul
inc
add
call
lahf
xor
dec
dec
mov
sub
lods
mov
xchg
int
xor
iret
xor
hlt
imul
(bad)
fisttp
sar
add
xor
xchg
xchg
repnz
push
lea
dec
push
imul
scas
cwde
popf
loop
jbe
mov
arpl
int3
enter
dec
xlat
clc
stc
int3
jae
xchg
push
jmp
test
retf
or
daa
sub
or
dec
xlat
cld
fcomip
add
(bad)
mov
xchg
pop
mov
mov
lods
test
sbb
sub
mov
mov
addr16
sbb
xchg
jle
in
daa
ins
or
jb
sub
js
push
mov
pop
adc
cmp
les
or
fwait
pushf
loopne
(bad)
stc
mov
retf
jne
push
loope
sbb
push
shl
and
pusha
(bad)
sti
dec
das
sub
mov
xchg
push
dec
sbb
dec
cmp
cmp
cmps
shr
push
call
and
jbe
in
cld
mov
sbb
das
add
jle
leave
push
popf
leave
jnp
fsubr
mov
or
mov
shl
lds
sub
(bad)
or
mov
iret
sbb
push
sbb
or
cwde
mov
repnz
push
fcmove
ds
movs
push
dec
push
dec
sub
mov
mov
or
push
jge
jo
pop
push
mov
popf
mov
add
call
scas
mov
xchg
push
stos
xor
fnsave
or
inc
dec
retf
xchg
inc
out
adc
test
cli
cmp
and
ins
(bad)
cmps
jg
mov
lock
movs
ror
inc
pop
imul
mov
xchg
mov
mov
popf
inc
pop
jge
imul
(bad)
iret
wbinvd
mov
mov
(bad)
pop
inc
lahf
hlt
xchg
retf
jo
cmp
xchg
out
arpl
xchg
loope
add
sar
inc
pusha
les
shl
loopne
iret
xor
and
mul
aam
cld
adc
push
fild
add
jo
jae
xchg
jns
jmp
mov
ficom
add
push
cmp
push
mov
mov
inc
adc
stos
inc
sub
jge
jnp
inc
clc
jb
ds
in
sub
sub
mov
shl
imul
ror
in
sbb
out
mov
rcr
pop
cmp
retf
ins
jnp
adc
in
(bad)
inc
pop
and
inc
pop
imul
push
movs
into
jns
sub
jge
adc
sar
mov
out
mov
inc
out
push
mov
pusha
mov
aaa
adc
xchg
cld
sub
ror
lahf
dec
sub
out
push
fsub
in
xor
mov
out
(bad)
aas
aaa
cld
xor
ret
test
adc
or
aam
add
sbb
bound
xlat
pop
mov
nop
call
inc
ins
mov
adc
(bad)
retf
movs
daa
cs
iret
adc
dec
add
rcl
in
lods
xchg
sbb
xor
dec
ss
xor
leave
xor
ins
pop
sbb
and
into
ret
mov
or
dec
adc
enter
inc
mov
out
daa
sub
inc
mov
cdq
pushf
fcmovu
ds
lock
cmp
(bad)
mov
loop
dec
sbb
outs
jo
in
mov
lea
out
push
sti
dec
pop
(bad)
xor
cmc
push
jno
cs
sbb
shr
adc
nop
mov
ins
or
outs
pop
adc
xchg
xchg
stos
dec
in
sbb
aaa
ret
(bad)
cmc
(bad)
jo
or
add
xchg
lods
sti
inc
jl
and
aam
cmp
mov
inc
sbb
adc
test
mov
pop
retf
jp
push
and
adc
sub
repnz
mov
or
je
fwait
cmp
mov
jg
adc
mov
jmp
stc
xchg
xchg
xor
sti
xchg
hlt
jge
(bad)
and
sbb
xor
fnstcw
pop
add
stos
mov
push
fwait
jo
outs
dec
(bad)
sub
jns
sub
xor
popa
xor
cdq
(bad)
mov
out
cmp
lds
mov
jns
mov
xchg
adc
lea
in
scas
xor
les
mov
retf
test
mov
pop
sti
test
std
lahf
cdq
lds
enter
hlt
sti
ja
and
add
clc
push
adc
fidiv
dec
cli
add
push
movs
adc
add
xchg
lds
adc
and
ss
push
dec
ins
sar
mov
dec
lock
mov
push
int3
loope
pop
xchg
aaa
fs
mov
inc
cwde
outs
imul
sti
xor
and
cmp
sub
imul
inc
dec
fild
dec
cmp
inc
dec
push
retf
xchg
stos
xchg
pop
push
dec
(bad)
fisttp
xchg
scas
lods
cmp
xor
lds
js
test
sbb
adc
xchg
jo
sub
xchg
sbb
cmp
add
push
pop
ins
loope
adc
stos
push
in
clc
mov
pop
pop
nop
dec
inc
push
mov
sbb
(bad)
fwait
and
loope
sahf
dec
pop
dec
sub
pop
add
xor
aaa
imul
push
xor
aad
xor
fnstenv
push
jno
test
rol
mov
out
or
inc
inc
pop
icebp
dec
xor
mov
iret
fdiv
jae
stos
xlat
cwde
push
pushf
ret
push
adc
lods
xor
lods
cmp
cmp
aaa
dec
pop
mov
out
fs
movs
shl
fnstenv
sub
push
sar
movs
mov
loop
sub
add
xchg
js
imul
clc
pop
js
aam
ss
bound
push
push
jg
sub
sti
sahf
inc
push
inc
or
retf
cmc
and
out
and
add
mov
retf
dec
jb
(bad)
movs
not
and
out
mov
push
dec
jmp
adc
add
(bad)
aas
repnz
cmp
enter
out
fld
sbb
xcrypt-ecb
aam
mov
mov
xor
push
mov
out
ins
mov
out
sub
pop
ja
out
div
or
xchg
inc
pop
dec
and
int
dec
mov
sub
iret
cmp
jge
jge
fild
mov
dec
inc
in
rol
out
or
inc
inc
pushf
cmps
enter
jb
ret
jmp
push
fcom
jo
into
and
in
mov
sbb
cmp
outs
add
cmps
fucomp
dec
sbb
jmp
xor
sahf
cmp
pop
jno
mov
pop
in
and
out
mov
outs
mov
pushf
fs
repz
inc
adc
cmps
inc
(bad)
idiv
ret
pop
push
addr16
mov
or
aaa
ret
or
pop
or
push
sbb
test
push
outs
loop
pop
pop
dec
out
jge
adc
fisttp
sub
dec
mov
ret
ss
or
xchg
push
shl
adc
sbb
(bad)
mov
adc
cmps
pop
test
rcl
ja
push
push
mov
ds
inc
pop
dec
mov
sbb
(bad)
and
add
push
call
push
movzx
inc
sbb
js
jmp
leave
mov
pop
dec
pop
shl
int
inc
leave
push
adc
ins
cld
sbb
retf
gs
cmp
(bad)
(bad)
fcomp
xchg
jp
xchg
push
ror
jbe
call
lahf
call
int
cmps
adc
jmp
adc
mov
mov
mov
or
dec
pusha
jmp
stos
in
push
das
jg
ins
sub
push
inc
cmps
dec
push
js
aas
adc
daa
leave
xor
retf
imul
in
in
int3
pop
xor
sbb
xor
cli
js
xchg
mov
cmps
out
in
cmps
push
or
push
xchg
pop
jnp
mov
pop
iret
push
adc
mov
adc
iret
lds
mov
repnz
cmp
jg
in
adc
jge
clc
mov
sub
and
lds
pop
jns
repnz
push
ror
jno
rcr
test
jne
dec
adc
dec
stos
in
outs
push
aad
es
and
xchg
arpl
popf
aam
dec
psrad
xchg
pop
push
sbb
and
fdivr
cmp
das
je
xlat
xor
iret
call
fwait
cmp
cli
sub
shl
mov
and
adc
addr16
mov
mov
pop
cdq
mov
jo
jp
call
add
nop
mov
ins
lods
and
test
(bad)
add
lds
dec
add
clc
and
std
mov
inc
mov
mov
add
adc
push
aam
ret
imul
shl
movs
add
xor
lds
xchg
dec
pop
add
ror
adc
or
push
leave
mov
pop
push
mov
jmp
retf
shr
inc
push
mov
jmp
lods
cmp
ret
xor
mov
push
inc
push
sti
or
popa
xchg
mov
popa
daa
(bad)
pusha
data16
in
ins
cmp
movs
jnp
xor
xlat
jge
(bad)
ds
mov
imul
jp
mov
aam
or
inc
pop
and
adc
out
pop
iret
pushf
xchg
add
aad
repnz
into
mov
shl
push
dec
bndstx
cmp
and
fadd
popa
jecxz
enter
fld
imul
nop
jg
mov
mov
loopne
sbb
add
xor
mov
sub
xor
aas
fmul
sub
cmp
push
pop
test
hlt
sbb
enter
scas
sbb
and
cmp
out
xchg
dec
jmp
or
jns
ret
call
push
loope
xor
cdq
mov
mov
xchg
inc
fbld
bound
arpl
jnp
mov
(bad)
scas
stos
jl
out
(bad)
aaa
clc
or
test
xchg
int3
lock
cmps
retf
test
lods
mov
and
repz
dec
div
jl
mov
(bad)
mov
scas
push
stos
adc
push
sub
repnz
pop
add
scas
mov
mov
or
xchg
shl
sbb
fwait
sbb
inc
mov
out
mov
or
cmps
scas
inc
mov
mov
(bad)
cmp
push
shr
test
pop
test
adc
mov
inc
ss
mov
jge
movs
imul
pop
xlat
lods
pop
xchg
mov
cmp
or
xchg
adc
lock
pop
ins
push
jge
or
fst
or
pop
jbe
popa
shl
loopne
fisub
sti
push
lods
test
das
cmp
jp
cwde
push
cmp
nop
add
ret
mov
cmp
cmp
out
push
cmc
outs
sbb
dec
push
sbb
pop
cmps
rcr
sub
jo
add
into
das
xor
pop
test
xor
(bad)
cmp
cs
cmp
mov
cmp
test
add
addps
xchg
aad
out
xchg
jmp
or
sti
ins
xchg
sbb
icebp
lea
mov
mov
retf
mov
sbb
and
push
retf
mov
sub
ret
ficom
xor
or
or
pop
pusha
loope
in
retf
dec
(bad)
out
inc
je
adc
push
test
sbb
and
add
test
sub
mov
push
xlat
jmp
or
dec
cld
mov
(bad)
sbb
int3
jmp
imul
ins
mov
xor
jnp
lds
inc
jns
sahf
inc
ficom
jae
outs
popf
loop
mov
in
xor
test
sub
push
pop
xchg
adc
xchg
call
cmp
inc
sar
cmc
scas
les
ret
leave
mov
push
add
out
not
fsub
not
(bad)
sub
jnp
push
add
add
add
pop
mov
retf
mov
and
loop
pop
pushf
lahf
push
out
fnstsw
xchg
xchg
or
int
sub
mov
fnstcw
into
pop
fcmovu
xchg
mov
and
inc
lods
aad
jmp
lahf
ds
inc
push
and
sub
xchg
test
mov
and
mov
shr
imul
jmp
ins
pop
aad
pushf
movs
fistp
leave
cwde
add
push
mov
jmp
jg
arpl
lea
push
imul
stos
imul
sar
push
stos
xchg
and
mov
pop
inc
fwait
aad
jne
sbb
fild
stos
mov
and
lahf
fst
mov
xor
test
bound
imul
loope
sub
ja
sbb
sub
lods
jae
xchg
jne
and
xchg
aas
dec
or
ret
cmp
jnp
mov
das
mov
test
fidiv
aam
aaa
cmp
jae
scas
int3
xor
adc
jmp
cmp
jae
fisttp
mov
pop
ficom
test
push
sbb
cli
inc
adc
retf
fist
sub
jb
xor
jo
push
les
popa
xchg
test
imul
int3
jmp
cmp
icebp
movs
push
add
mov
or
add
in
sbb
fnstenv
push
imul
fdiv
xor
pop
push
(bad)
push
mov
mov
push
or
jae
scas
test
pop
jbe
and
cmps
mov
in
ret
fwait
jbe
retf
nop
clc
sbb
and
mov
sti
gs
push
mov
ds
xchg
sbb
arpl
lods
xchg
push
mov
jge
xor
or
mov
into
pop
xor
cmps
and
sahf
jge
fcmovnb
arpl
push
cmp
dec
xlat
adc
not
jo
sub
dec
pop
scas
movs
adc
sub
fwait
pop
jl
or
cld
popf
inc
loop
ret
push
ret
mov
mov
icebp
dec
rcr
ja
mov
sti
mov
xchg
loope
aas
arpl
lods
push
xchg
xor
sbb
sbb
shr
inc
push
test
push
fcmovnu
retf
mov
sub
mov
sub
movs
rcl
mov
fiadd
push
push
and
lock
jno
jg
inc
bound
cmps
inc
shr
cmp
movs
and
test
or
pop
mov
in
add
jmp
adc
pop
jge
call
pop
bound
out
(bad)
mov
imul
cmp
mov
mov
xchg
fbstp
xor
xchg
inc
dec
cmps
ins
clc
dec
inc
shl
mov
sbb
and
pop
adc
ins
dec
mov
(bad)
xchg
bound
mov
xlat
clc
mov
lds
push
pop
adc
push
jb
mov
dec
xor
mov
sar
sbb
or
test
test
fcmovnb
adc
mov
cmp
inc
movs
dec
int3
cmp
mov
lea
scas
dec
and
mov
push
fwait
(bad)
mov
sub
imul
sub
iret
int
or
pop
adc
jne
inc
in
pop
cmp
test
pop
call
neg
cld
pop
popf
js
and
adc
add
(bad)
aad
loopne
sbb
in
(bad)
add
fimul
imul
inc
das
add
dec
out
sti
sar
add
ror
mov
sub
dec
sbb
push
out
cmp
loop
mov
loop
mov
addr16
aaa
retf
jmp
push
into
xor
imul
jmp
cld
push
xor
lea
cmps
jne
test
dec
jge
adc
push
mul
mov
cdq
ds
sar
adc
or
leave
loope
inc
popa
mov
xor
fistp
dec
aad
jl
fldenv
and
mov
pop
adc
out
mov
ds
(bad)
and
imul
add
and
cdq
mov
mov
and
int3
mov
cs
in
inc
lods
rol
add
cmps
add
sub
push
test
jns
sub
idiv
jo
mov
rol
(bad)
dec
inc
pop
mov
ins
push
and
adc
cmps
mov
xchg
and
sbb
mov
push
mov
test
adc
or
dec
or
sub
(bad)
(bad)
cmp
bound
jno
push
dec
imul
cmp
cmp
es
pop
fsub
cmp
push
push
(bad)
xor
fist
jbe
mov
iret
ffreep
out
test
cmps
xchg
out
inc
adc
jl
inc
lock
cmp
jmp
mov
std
dec
cdq
jg
std
and
or
xchg
or
pop
dec
xchg
cwde
mov
pop
scas
test
jg
out
push
cmps
and
mov
cmp
gs
mov
and
fwait
xor
mov
adc
nop
push
adc
jp
mov
imul
mov
add
bound
data16
rol
bound
pusha
pop
ficomp
lahf
mov
xchg
es
(bad)
sbb
stos
pop
fbstp
or
imul
dec
in
push
aam
sub
mov
es
xor
pop
out
sbb
push
pop
ret
xchg
jmp
stos
stos
cmp
es
xchg
xor
xor
or
xchg
inc
stos
pushf
out
inc
pop
loopne
sub
jle
fs
xchg
lahf
pop
push
aas
inc
xor
call
lock
sbb
bound
or
push
dec
jg
cwde
std
xchg
push
mov
imul
sub
fbld
push
cmps
aas
nop
stos
adc
lock
arpl
cld
fcom
mov
imul
pop
pop
aaa
xor
fidiv
pop
in
adc
cmp
inc
pushf
cmp
jl
cmp
jb
fs
push
call
lods
shl
mov
aam
jb
jmp
jae
aaa
sub
movs
test
repnz
les
push
add
je
sub
sti
adc
cmps
or
add
cmp
aaa
jg
mov
sbb
xchg
sar
push
mov
cmps
xor
cmps
cmp
cmp
pop
cli
sbb
xchg
xor
rol
div
loop
jne
fmul
rcl
xor
mov
and
lea
cmp
scas
or
jae
sbb
call
imul
mov
cli
loop
ins
push
add
in
and
pop
xlat
and
xor
js
add
or
ds
jle
pop
repz
add
mov
inc
mov
pushf
mov
sbb
stos
adc
imul
inc
mov
inc
popa
out
xor
or
and
je
xchg
cwde
(bad)
arpl
je
xor
sar
cld
lods
int3
push
dec
mov
push
cmovbe
add
lods
jp
pop
sub
enter
jae
sbb
sbb
cmps
push
ret
leave
push
neg
daa
adc
sub
lea
out
jmp
cmps
sub
aaa
pop
inc
add
xchg
lds
adc
outs
ds
ret
mov
jmp
fimul
inc
shr
adc
test
push
dec
xchg
out
cli
std
and
sub
dec
mov
push
xor
xor
bound
jae
fwait
(bad)
movs
in
in
and
inc
mov
xor
mov
jmp
sub
sub
sbb
mov
mov
mov
js
sub
cs
stc
enter
mov
dec
push
test
mov
imul
ins
push
pop
mov
ret
xchg
cmp
lea
xor
push
aaa
dec
loop
push
loopne
mov
xchg
js
retf
cmp
mov
push
jecxz
movs
retf
lds
jno
int3
in
pop
cmps
jp
mov
mov
dec
test
mov
shr
enter
cs
in
add
inc
or
retf
fxtract
sub
(bad)
push
sbb
repnz
pop
mov
or
scas
je
retf
scas
repnz
outs
ins
add
sub
lahf
addr16
rcl
push
pop
mov
pop
aaa
jmp
in
in
rol
mov
shr
mov
(bad)
mov
push
(bad)
mov
push
(bad)
ja
jne
mov
repz
sub
lahf
sar
mov
jne
ins
cmps
(bad)
mov
pop
xchg
popa
mov
test
pop
xchg
mov
dec
dec
dec
popf
jae
fsubrp
mov
push
bound
int3
mov
mov
pusha
or
mov
jne
iret
push
lods
es
dec
push
cmp
mov
pop
push
sub
inc
outs
daa
out
and
cmp
imul
or
mov
inc
fdivr
daa
ins
inc
mov
iret
push
bound
stos
xor
imul
xchg
(bad)
fstp
dec
or
jmp
fucom
loope
cmp
dec
adc
jge
lds
loope
adc
or
push
dec
bound
aad
push
imul
cmp
es
mov
xor
leave
dec
ss
add
(bad)
out
rcr
into
or
push
xor
outs
xchg
jbe
add
ds
jne
stos
jns
cli
nop
lahf
mov
cdq
sub
loop
mov
je
cmc
fidiv
xchg
inc
add
sub
cmps
mov
push
retf
jp
jb
ins
lea
mov
dec
jle
jns
stos
ss
loop
sbb
div
mov
retf
test
cdq
aaa
jmp
xchg
jae
fsub
mov
dec
fwait
mov
cs
adc
adc
scas
hlt
into
adc
fnstenv
or
and
or
xlat
mov
(bad)
jmp
lods
push
dec
mov
lods
aad
stos
sbb
jns
ret
mov
adc
dec
lahf
sub
ret
ror
stos
test
dec
sahf
jno
xor
sahf
add
ret
inc
(bad)
push
add
adc
cli
jle
sahf
ror
sahf
stos
adc
retf
add
pop
out
dec
jle
sahf
(bad)
ins
sar
push
xchg
xchg
addr16
sets
jp
pop
in
push
into
das
fld
jbe
ja
xor
rcr
pop
xchg
js
pop
hlt
ret
lahf
dec
addr16
mov
lea
in
fadd
mov
add
ins
rcr
xor
xchg
pushf
lock
mov
mov
and
inc
cdq
jns
lods
push
es
mov
mov
or
add
data16
nop
and
xchg
std
push
cmps
call
adc
js
sub
cmps
movs
cmc
dec
xchg
push
mov
push
(bad)
stos
jb
add
adc
mov
lods
rep
imul
and
adc
mov
jmp
gs
jno
popf
call
retf
and
push
dec
addr16
and
jl
je
xchg
pop
fwait
pushf
mov
data16
jae
add
aaa
xchg
or
jge
sbb
loop
int3
(bad)
and
sar
xor
enter
dec
sahf
call
mov
or
xor
outs
mov
aaa
inc
into
arpl
or
imul
fs
mov
xchg
jb
ficom
cmps
xor
sbb
add
sub
pop
clc
retf
cwde
or
pusha
pop
aas
retf
jno
push
scas
int
dec
mov
movs
mov
push
rcr
int
mov
xlat
mov
jmp
adc
in
(bad)
call
inc
pop
leave
jo
dec
mov
sbb
xor
sub
test
mov
jl
outs
arpl
jno
lds
cmp
mov
rcr
or
jne
ret
cmps
mov
cmps
jle
jbe
mov
movs
rcr
push
pop
dec
lahf
push
xor
outs
jnp
jmp
or
sub
and
and
push
in
jl
icebp
and
mov
cmp
push
sbb
pop
mov
pop
popa
and
scas
push
pop
stos
mov
stos
dec
fstp
pop
jns
xsha256
cmps
push
test
cmp
ins
sub
test
inc
in
cdq
daa
cmp
loop
mov
xchg
les
push
iret
repz
inc
iret
or
sbb
cmp
(bad)
jbe
std
and
add
jg
aaa
pop
xchg
jmp
mov
xchg
in
in
outs
test
mov
loope
and
and
cmp
cdq
repnz
popa
in
add
sbb
ret
lea
mov
pop
cmps
es
jne
(bad)
jecxz
xchg
lahf
jae
jb
sub
jno
fiadd
inc
les
xchg
sub
mov
mov
mov
mov
xchg
adc
sbb
scas
push
mov
mov
lods
retf
add
fisttp
mov
jl
pop
adc
cmp
iret
(bad)
jno
bound
sbb
call
fimul
lahf
pop
fimul
adc
inc
rcl
xchg
mov
push
clc
je
sub
ins
dec
call
cmps
cmp
jae
test
push
jne
sub
sar
sbb
pop
cdq
jg
mov
add
jecxz
popf
shr
int3
pop
mov
push
popf
(bad)
mov
mov
imul
cld
or
add
in
jns
pop
cmp
push
cmp
sub
popf
in
jno
push
mov
cmp
jg
mov
movs
pushf
dec
pop
lock
jmp
retf
popa
fild
sbb
xchg
(bad)
repnz
sub
xadd
movs
xchg
lods
(bad)
mov
cmps
loop
hlt
sti
xor
loope
ins
pop
adc
jge
enter
xor
dec
jns
rcr
push
ss
cli
jg
mov
xchg
call
xchg
retf
nop
fstp
adc
das
or
in
and
call
and
mov
inc
add
ja
or
popf
call
mov
jo
loopne
test
xchg
mov
and
lea
shl
mov
jmp
adc
jae
xchg
push
fnstcw
mov
inc
imul
mov
pusha
mov
jl
sub
dec
mov
dec
mov
add
add
push
cmps
fcmovnbe
inc
lods
dec
sbb
pop
jmp
imul
pop
scas
mov
cwde
sub
call
call
movs
sub
call
adc
iret
enter
cmp
pop
aaa
sbb
sbb
xor
addr16
shl
call
test
mov
or
retf
shl
push
pushf
(bad)
fsub
outs
mov
xchg
jmp
jmp
mov
jge
mov
add
ds
loop
inc
cmps
fst
sub
loop
inc
addr16
(bad)
pop
nop
repz
jmp
ret
iret
(bad)
push
imul
mov
jb
sub
dec
ror
and
scas
add
push
inc
retf
sahf
inc
pop
pop
pop
(bad)
ret
cs
push
xchg
dec
mov
test
out
and
add
mov
call
lds
add
lahf
adc
movs
dec
adc
adc
ins
lock
jl
xor
mov
mov
jl
and
xchg
adc
movs
ret
cmp
mov
mov
add
ja
aad
push
je
aam
add
outs
jle
adc
cli
pop
ror
mov
std
(bad)
sti
xchg
dec
jne
(bad)
mov
clc
jmp
aas
push
pop
add
cmp
dec
imul
mov
jno
retf
mov
loop
lahf
and
cmp
mov
aas
div
pop
je
cmc
pop
lea
inc
cmc
inc
pop
fucomip
adc
mov
sbb
int3
fistp
movs
fsub
push
(bad)
nop
and
sub
scas
shr
or
enter
cmp
add
adc
or
nop
outs
pop
out
out
jnp
jnp
enter
nop
fcomp
pop
add
pop
mov
or
icebp
test
sahf
loopne
cmc
(bad)
into
clc
sbb
in
ins
repz
pop
movs
ja
addr16
add
outs
mov
pop
inc
xor
push
dec
dec
fisub
js
cmps
mov
cmp
scas
push
add
cmp
scas
aad
jg
jl
mov
mov
and
add
cmp
inc
out
xchg
pop
retf
push
retf
sub
mov
fadd
rol
cmp
cmp
rcr
pop
mov
and
imul
add
mov
dec
jne
and
aas
pushf
pop
jle
cmp
mov
cmp
xchg
jbe
aas
xor
shr
pushw
or
nop
loop
stos
pop
gs
push
sbb
lahf
push
call
movs
sahf
pusha
test
das
repnz
aaa
pop
sti
mov
imul
mov
adc
xchg
jmp
add
push
jp
rcr
inc
pop
call
movs
cmps
push
xchg
aas
adc
(bad)
jb
fstp
loop
xchg
in
test
jbe
call
not
fs
jp
fisub
cwde
dec
xlat
psllq
cmp
jecxz
and
jmp
or
pop
add
lahf
pop
jp
push
addr16
sbb
push
clc
adc
ja
loope
jne
jle
cmp
outs
xchg
sub
mov
dec
dec
sahf
sbb
cld
ss
cmp
aas
sti
push
xchg
ret
xchg
js
mov
and
push
stos
retf
or
cmp
sbb
sbb
xor
jecxz
jo
dec
ins
cmc
sbb
sbb
ins
sbb
mov
jnp
dec
dec
dec
mov
jecxz
fnstcw
fisttp
pushf
test
sbb
pop
in
mov
mov
scas
pop
outs
push
test
push
cld
mov
pusha
push
add
js
es
pop
dec
mov
jne
inc
cmp
cli
ins
xchg
mov
fsub
cmp
pop
fsubr
cmps
adc
fldenv
fisttp
pop
test
popf
pop
and
pop
lock
adc
fld
pop
call
pop
xor
mov
test
dec
xor
retf
jbe
xchg
pop
adc
sbb
inc
jb
xor
push
in
fisttp
scas
push
xchg
xchg
popf
mov
xchg
retf
inc
push
adc
sbb
dec
sbb
sbb
scas
call
adc
jnp
xchg
mov
ss
leave
mov
push
pop
jmp
das
ja
call
out
cdq
mov
sbb
lahf
nop
retf
mov
mov
aam
jae
or
dec
aaa
xor
aad
fadd
pop
(bad)
add
xlat
call
pushf
dec
push
xchg
pop
dec
xchg
push
imul
add
jp
pop
mov
jbe
mov
cmps
push
test
jmp
inc
or
mov
fmul
mov
ror
and
fprem
mov
cmp
inc
call
(bad)
sbb
stc
sbb
cdq
fsub
lds
pop
mov
mov
push
inc
add
pusha
mov
(bad)
inc
dec
or
retf
jmp
dec
xor
ret
jmp
mov
pusha
or
pushf
sub
xchg
push
sbb
inc
stos
jge
or
out
adc
sub
sub
out
and
ja
add
aam
lods
dec
mov
pop
rcr
sbb
lea
xchg
mov
mov
push
fwait
bound
push
adc
dec
xchg
lock
adc
add
popa
xor
iret
(bad)
dec
lahf
sub
mov
out
dec
ret
cdq
mov
cmp
sbb
xor
ja
aaa
dec
push
fdiv
mov
fwait
xlat
dec
stc
daa
jnp
ss
rcr
inc
dec
fbld
pusha
inc
idiv
(bad)
push
movs
add
xchg
pop
mov
es
test
push
retf
repz
or
inc
jge
gs
mov
sbb
stos
inc
push
mov
rcl
(bad)
hlt
cli
cmc
jmp
movs
test
cld
push
aad
jne
ins
push
and
aaa
out
inc
out
xchg
(bad)
not
pop
dec
mov
dec
ins
call
add
ret
shl
dec
dec
jno
mov
dec
loope
add
hlt
call
or
repnz
dec
in
dec
adc
xor
in
push
bound
(bad)
mov
cs
jecxz
fsubp
and
mov
pop
cmc
pop
xchg
fstp
loopne
jo
les
test
cs
leave
xor
xchg
imul
xchg
xchg
call
push
dec
xchg
mov
cli
mov
push
inc
adc
cmp
mov
add
or
(bad)
inc
js
leave
sbb
sbb
fldcw
mov
out
pushf
retf
cwde
mov
out
jmp
icebp
and
xchg
push
in
rcr
scas
push
dec
inc
int3
loope
lods
pop
xor
cmc
mov
inc
add
pop
mov
in
test
and
pop
xor
sbb
sbb
push
cs
movs
test
mov
adc
movs
or
enter
jp
add
add
(bad)
dec
inc
(bad)
sar
adc
inc
sbb
jno
mov
and
add
mov
push
lahf
sbb
push
and
cmps
mov
icebp
test
jmp
pushf
inc
xor
jno
lock
pop
jb
mov
inc
fmul
jae
sahf
mov
in
mov
sar
shl
ins
in
xchg
inc
mov
shr
pop
pop
xlat
sar
jecxz
push
push
mov
mov
fld
xlat
xor
popa
cwde
loope
push
sar
mov
pop
mov
sbb
push
dec
mov
sti
addr16
mov
pusha
cmp
stos
inc
mov
and
xchg
movs
ds
xor
xchg
gs
retf
scas
jecxz
xchg
stos
aas
movs
(bad)
cli
adc
sar
movs
(bad)
out
fs
repnz
repz
and
dec
in
jmp
inc
retf
add
adc
fld
fdiv
out
xor
stos
or
adc
inc
iret
sbb
pop
jp
pop
movs
test
fbld
test
or
ss
(bad)
xchg
rcl
popa
xor
loopne
call
sahf
pop
aaa
fisttp
jmp
ret
popa
cdq
js
lods
je
test
hlt
jo
cwde
int3
cli
int3
mov
ja
mov
jmp
retf
mov
sbb
int3
cwde
jge
pop
xchg
cmp
cwde
bnd
movs
rol
cli
jmp
test
jb
push
in
push
test
jne
sbb
ja
sti
sbb
xlat
movs
dec
and
gs
iret
mov
mov
or
fldcw
fisub
push
sar
pusha
jbe
sti
cmps
rcl
mov
cmc
repnz
add
adc
dec
pop
xchg
xlat
xchg
stos
mov
push
repnz
out
loope
push
xor
jb
inc
jmp
out
mov
mov
fdiv
xor
or
test
mov
test
xchg
sar
jbe
out
test
inc
mov
dec
fidiv
xchg
xchg
cli
rcr
mov
ins
out
nop
in
cmp
lock
fmulp
test
rol
call
pop
push
daa
dec
mov
test
push
pop
ficomp
jns
jmp
xor
std
mov
push
fwait
in
jns
mov
inc
pop
push
jl
mov
xchg
mov
push
push
sbb
and
sub
ret
and
dec
and
or
or
ret
adc
add
fwait
inc
fsub
js
neg
add
test
pop
add
repnz
in
push
ja
adc
sub
jmp
push
sbb
cmp
mov
mov
inc
retf
pop
out
xchg
pop
cs
jecxz
pop
fisttp
xchg
jge
xchg
mov
inc
mov
clc
add
pop
adc
(bad)
xchg
in
sbb
dec
jbe
fs
mov
inc
into
cmp
inc
mov
and
lods
mov
(bad)
loope
out
jbe
int3
and
and
fmul
scas
fmul
fwait
push
je
add
or
sbb
push
pop
or
aas
inc
mov
rcr
push
sub
jmp
sub
dec
es
cdq
test
imul
add
movs
ret
mov
sbb
inc
scas
cmp
(bad)
add
adc
sbb
inc
add
and
mov
jmp
int
jl
jae
aad
pop
dec
push
mov
leave
xchg
nop
push
daa
das
pop
xchg
retf
iret
nop
and
jl
xchg
xlat
test
inc
(bad)
stos
retf
dec
sub
mov
js
jecxz
jb
inc
fstp
inc
pop
mov
or
xchg
popa
xchg
mov
cmp
jnp
call
xchg
call
(bad)
mov
ins
outs
push
fdivr
dec
inc
arpl
or
sti
inc
add
adc
lods
dec
xchg
into
xor
(bad)
int
inc
sbb
cmc
mul
call
or
popf
pop
gs
adc
addps
in
xchg
dec
dec
mov
xchg
jb
jno
pop
xchg
cmp
jb
dec
and
idiv
push
int
leave
mov
pushf
jbe
fmul
gs
pusha
sub
dec
pop
bound
test
adc
out
imul
test
cmp
jnp
xchg
out
jae
mov
jbe
das
or
sub
push
daa
and
inc
mov
frstor
lea
scas
push
hlt
sub
fsub
and
nop
rcr
test
push
leave
(bad)
in
nop
cmp
jo
xchg
stc
xchg
dec
lock
out
push
imul
push
push
loopne
adc
std
cmp
or
outs
fldenv
aam
mov
or
fistp
lahf
popa
inc
cmps
cmps
packsswb
fist
cmps
inc
out
out
repnz
xor
sub
xor
loop
mov
mov
push
(bad)
mov
call
xor
mov
xchg
and
jnp
cmp
loop
xor
ins
outs
xchg
fld
mov
sbb
sbb
test
addr16
fldenv
add
or
or
out
sbb
push
jns
xchg
push
neg
scas
call
dec
xor
adc
pop
mov
dec
push
push
sub
pop
fild
fxch
or
fisttp
rol
in
fld
xchg
push
(bad)
jg
jg
test
add
sub
mov
ret
push
jecxz
icebp
les
xchg
sub
push
sahf
movs
repnz
sub
jns
fisub
mov
xor
mov
or
or
rcr
lahf
cmc
sub
dec
jne
push
popf
push
mov
xchg
sbb
(bad)
push
stos
add
push
mov
js
jae
mov
pop
xlat
pop
lds
in
nop
jp
mov
or
xchg
ret
ror
into
mov
xchg
xchg
xchg
xlat
stos
(bad)
cmps
jne
xchg
nop
clc
hlt
aas
pop
and
push
xchg
pusha
cmps
js
mov
and
shl
sbb
mov
jbe
adc
stos
or
into
jle
in
popf
mov
or
loop
xchg
ror
add
(bad)
cmp
lods
fs
jle
and
test
mov
cmp
cwde
fisttp
in
jo
aas
xor
mov
cwde
and
(bad)
ret
push
in
pop
add
loop
xchg
into
mov
pop
and
jmp
sub
dec
ss
xor
out
pop
mov
iret
fyl2xp1
shr
mov
fnstenv
scas
mov
pop
adc
mov
xlat
adc
cmps
cmc
cld
call
push
lahf
mov
dec
sub
or
rcr
lods
cmp
inc
push
lods
xor
rcl
inc
mov
adc
rep
mov
push
or
and
cs
add
mov
dec
fidiv
cmc
lds
loopne
in
mov
mov
xor
cmp
mov
push
dec
shl
add
lea
sahf
repz
adc
jo
sub
push
stos
mov
imul
sti
cmp
sbb
out
add
rcl
enter
and
arpl
ins
fwait
push
pop
pushf
dec
mov
add
mov
cmp
inc
cmps
sub
paddb
push
adc
cmc
and
movs
add
jmp
scas
fld
cmp
sub
(bad)
in
sbb
pusha
push
es
jae
jmp
stc
ret
(bad)
stc
mov
loop
or
xor
mov
cmp
inc
cmp
sbb
(bad)
fs
inc
jne
xor
xor
mov
inc
sar
mov
inc
xchg
nop
cld
jp
stos
das
ja
je
cdq
stc
arpl
fwait
inc
push
sub
(bad)
faddp
jp
sub
les
je
and
push
lea
(bad)
sub
or
test
shl
aam
dec
inc
mov
and
inc
shl
mov
or
das
mov
into
ret
mov
iret
add
sar
mov
and
xor
arpl
pop
and
push
inc
jmp
dec
inc
sbb
sti
inc
xchg
(bad)
(bad)
xchg
fild
jo
jge
mov
dec
jnp
push
imul
std
push
retf
in
inc
mov
sub
lods
cmp
clc
sbb
mov
arpl
mov
daa
xor
push
movs
xchg
imul
ror
mov
daa
jbe
mov
xchg
jmp
sub
out
(bad)
sbb
mov
movs
push
and
jle
mov
jp
jle
jb
test
out
cmps
pop
jg
xor
pop
inc
into
arpl
scas
xor
nop
dec
pop
lock
sbb
push
call
push
cmp
jnp
pop
mov
(bad)
fst
pop
jo
push
leave
in
not
addr16
xchg
jge
xor
dec
mov
jns
xlat
mov
nop
sti
pop
xor
mov
ss
lock
lahf
push
adc
sahf
(bad)
cwde
enter
mov
rcr
cmp
cmps
push
js
xlat
mov
mov
rcr
cmp
out
addr16
neg
mov
push
out
push
sbb
mov
fld
ins
mov
pop
add
scas
jo
leave
popf
hlt
lods
inc
cmp
pop
pop
outs
add
inc
div
or
hlt
cmovne
(bad)
test
cmp
cmp
enter
mov
retf
xchg
or
leave
out
sub
xor
xor
adc
mov
mov
pop
adc
fnstsw
adc
and
inc
mov
shr
sbb
mov
cmp
xor
in
push
xchg
inc
(bad)
in
out
dec
push
cmp
dec
push
loop
fwait
popf
xor
xchg
push
out
or
mov
outs
xor
dec
cmp
jo
and
aas
call
fcomp
fcmovb
lock
push
pop
add
daa
(bad)
and
cmps
jns
push
pop
sbb
xchg
cmps
(bad)
inc
mov
in
sahf
and
adc
adc
(bad)
jo
(bad)
hlt
adc
je
in
mov
pop
adc
mov
das
arpl
pop
mov
push
xor
inc
sub
jno
sahf
cmp
sbb
or
js
add
repz
add
mov
lds
add
int
(bad)
(bad)
push
mov
pushf
mov
jo
bound
or
je
xchg
loop
or
mov
sub
icebp
(bad)
mov
fld
in
sbb
repz
invd
cli
je
leave
cmp
lea
or
out
xchg
ja
test
pop
inc
test
out
push
ins
push
pusha
stos
inc
jbe
ficom
xor
xchg
out
inc
xchg
dec
or
mov
inc
xor
mov
xchg
sub
dec
rcl
push
clc
lahf
push
add
mov
leave
mov
mov
xchg
cwde
inc
xor
add
jne
and
(bad)
imul
mov
pop
mov
push
addr16
in
jno
iret
xor
mov
mov
arpl
imul
fld
xlat
inc
(bad)
push
int3
cli
sti
fxch
xchg
fstp
iret
fstp
xlat
lea
dec
nop
push
sti
(bad)
cld
xor
(bad)
cli
inc
pop
mov
push
dec
cwde
jge
fdiv
adc
inc
push
mov
push
(bad)
pop
push
and
fwait
mov
test
outs
rcr
inc
imul
ins
sub
cmps
sti
out
in
dec
repnz
aas
push
daa
loop
ss
adc
cld
pop
daa
or
mov
dec
mov
inc
inc
pop
out
scas
retf
mov
(bad)
push
(bad)
sar
test
pop
inc
add
and
inc
(bad)
xchg
dec
scas
dec
call
xchg
aad
inc
dec
dec
xchg
xor
retf
lods
outs
test
xor
jnp
das
mov
mov
jo
shr
out
aas
repz
sahf
adc
out
ret
mov
adc
pop
in
inc
retf
je
or
xlat
fild
xlat
lea
cmps
sbb
fldcw
push
ror
inc
inc
add
jae
jb
ja
push
mov
stos
sahf
ja
movs
loopne
inc
cld
or
cmp
aas
scas
lods
inc
adc
ret
lea
js
int
fidivr
scas
xchg
out
ins
jns
push
push
pop
aaa
jbe
cmp
pusha
pop
outs
sub
and
les
sub
ins
or
sbb
inc
dec
(bad)
jo
pop
or
pop
jp
mov
nop
mov
(bad)
lock
mov
xchg
xlat
push
sub
ror
loope
repz
fsubrp
outs
test
pop
arpl
(bad)
mov
cmc
or
cmps
mov
xchg
and
sbb
xor
scas
sahf
(bad)
sub
fsub
sub
ins
jnp
mov
inc
and
cwde
jge
xchg
(bad)
das
(bad)
les
dec
out
push
fnsave
and
push
jb
push
or
xchg
aas
vmovapd
outs
mov
pop
loope
jmp
ud1
mov
test
adc
lea
inc
cmps
mov
dec
in
pop
div
shl
inc
lea
xchg
sbb
call
in
ror
les
les
push
sub
xchg
adc
pop
iret
outs
pop
and
pop
lea
lds
outs
pop
sbb
das
xchg
mov
pop
test
sbb
and
mov
pop
dec
and
jae
cs
xlat
(bad)
pop
push
loopne
test
sub
sbb
pop
jne
aad
in
cmp
sub
mov
add
sti
or
mov
and
enter
lods
mov
retf
retf
call
and
test
xor
mov
push
and
out
out
lahf
cmp
icebp
je
push
aas
inc
test
aaa
dec
mov
and
xchg
std
jbe
out
push
out
popa
call
or
xchg
sub
sbb
retf
std
out
(bad)
fs
jae
ret
cs
xchg
mov
push
add
fnstcw
sub
jmp
jle
inc
in
cmp
call
xchg
cwde
xchg
mov
and
fimul
mov
jnp
sub
cmp
sub
inc
or
test
add
ins
push
addr16
dec
adc
pop
xor
push
mov
sub
sti
add
or
pop
ret
cmp
aaa
mov
jp
sbb
popf
and
scas
fsubr
loop
aam
and
pop
scas
movs
xor
ret
push
ins
sub
sub
retf
xor
in
aas
sbb
mov
inc
xchg
mov
repz
aas
or
icebp
test
outs
arpl
ss
jo
js
das
xchg
mov
cmps
mov
add
push
sbb
outs
fidivr
ds
into
sbb
sbb
push
xor
sbb
loopne
aad
mov
retf
sbb
addr16
jmp
pushf
xchg
add
sub
es
js
aas
inc
jo
xor
cmp
mov
rcl
or
inc
dec
call
aad
push
and
aam
jb
in
jl
xor
add
push
out
orps
dec
std
xor
sub
jmp
xchg
push
pop
dec
aam
popa
aam
daa
ret
cdq
pushf
pop
add
test
dec
dec
arpl
sbb
icebp
shl
or
inc
sbb
jnp
test
xor
xchg
xor
jo
add
mov
mov
dec
jp
mov
sub
stos
call
(bad)
loopne
mov
dec
or
in
mov
mov
in
(bad)
ss
cli
add
adc
adc
jns
(bad)
dec
sub
cmps
mov
std
cmp
mov
mov
cmp
fdiv
dec
pushf
sub
scas
out
int
xchg
push
jo
scas
js
add
xor
mov
xor
popf
in
std
inc
sub
mov
and
push
int3
or
mov
xchg
lahf
fistp
adc
xor
cwde
loop
inc
scas
pop
sbb
mov
cmps
jmp
push
pop
push
std
sbb
jmp
sub
dec
pop
xchg
mov
pop
imul
mov
fdivr
and
mov
push
mov
outs
stos
pop
retf
lock
mov
mov
xchg
in
stc
inc
pop
pusha
push
arpl
enter
add
add
pop
pop
scas
or
repz
xor
cld
cdq
rcl
pop
aad
push
aas
(bad)
fsub
test
loopne
jbe
rcr
push
pushf
add
(bad)
or
xchg
pop
and
stos
das
and
(bad)
adc
xor
jns
sbb
xchg
jge
adc
cwde
mov
xchg
dec
in
aad
ja
cmc
or
push
aam
mov
loopne
sub
pop
push
daa
cmp
jge
lods
xchg
outs
push
mov
call
pushf
mov
(bad)
mov
jg
jns
ret
xor
fdiv
cs
add
(bad)
fisttp
pusha
adc
mov
mov
adc
test
sti
stos
mov
out
add
mov
sbb
std
in
jle
cmp
pusha
xor
mov
mov
push
inc
xor
xchg
int
push
or
aaa
jo
pop
cmp
pop
sub
call
mov
imul
jmp
lock
sub
jae
mov
movs
add
mov
bound
cmp
loop
lea
cli
fadd
cmp
sub
in
shl
mov
call
jmp
sbb
or
call
cld
ret
(bad)
jg
pop
cmp
mov
mov
fs
sti
jb
dec
cmp
movs
pop
push
add
into
aad
jne
repnz
inc
ins
in
xchg
push
mov
push
sbb
xor
fdivp
std
movs
leave
mov
inc
mov
enter
cmc
and
xor
and
(bad)
pop
push
xor
dec
sbb
int
mov
jb
jbe
cs
test
shr
cmc
lods
pop
xchg
inc
push
sbb
ror
xchg
jbe
cmp
mov
add
mov
cli
lock
xor
ss
push
inc
mov
and
in
adc
nop
jl
ror
jnp
dec
sub
call
stos
and
adc
ins
in
and
or
or
pop
mov
enter
popa
cmp
push
jo
stos
lock
jle
jmp
ins
imul
dec
cli
jns
mov
add
dec
xchg
sti
loop
dec
ins
inc
cmp
or
outs
scas
rcr
xor
jae
pop
cmp
pusha
mov
or
in
mov
mov
jecxz
ins
mov
mov
outs
dec
cmp
xchg
call
clc
add
inc
in
xor
and
(bad)
(bad)
std
push
jle
pop
xchg
loop
xacquire
in
mov
push
sysret
or
pop
lock
aam
call
or
les
xchg
vsqrtpd
stc
cli
imul
ror
test
inc
cwde
sbb
sti
add
leave
inc
pop
ja
retf
pop
xor
into
aaa
rcr
bound
fs
or
sar
hlt
dec
(bad)
jmp
mov
sbb
nop
push
xlat
mov
cld
jo
movs
or
sbb
cs
xchg
sbb
mov
int
es
or
add
repz
or
movs
mov
inc
scas
ror
push
ret
sbb
push
xor
cwde
jo
(bad)
cdq
push
fdivr
dec
aad
xchg
jae
add
adc
int3
and
xchg
rcl
xchg
sub
push
out
sub
nop
ins
mov
and
dec
cmp
sar
jmp
sub
sbb
mov
adc
mov
jmp
lds
sbb
cmp
jbe
stos
call
xlat
retf
scas
aad
mov
xchg
fwait
jne
adc
xchg
pushf
cwde
(bad)
in
fldcw
push
dec
pop
jg
in
dec
in
mov
mov
dec
clc
cmp
fimul
ror
sbb
dec
aas
dec
sbb
mov
out
ror
in
or
cmp
shl
adc
sti
adc
jge
pop
stos
ins
in
imul
cmp
push
adc
(bad)
(bad)
lahf
data16
push
aas
pop
sbb
xor
add
jp
stos
and
fbstp
xchg
rcl
sub
fucomi
push
(bad)
aam
push
jbe
sub
and
or
lods
xor
stc
bound
xchg
gs
outs
fs
int
mov
repnz
into
inc
mov
es
adc
dec
push
xchg
pop
jecxz
sbb
add
xor
stc
fdiv
cmps
lock
inc
xchg
outs
xor
or
or
jle
mov
repnz
dec
test
xor
push
pop
outs
call
adc
jmp
not
adc
mov
mov
popf
(bad)
mov
pushf
sbb
inc
jne
sbb
jns
mov
mov
dec
push
ret
sar
pop
sub
mov
dec
clc
fnstsw
in
mov
or
push
mov
adc
cmps
out
jns
hlt
inc
mov
add
xchg
aad
enter
dec
retf
fnstenv
jg
inc
mov
(bad)
adc
mov
mov
jno
(bad)
sub
icebp
mov
jne
je
inc
cmp
mov
jo
push
imul
or
add
fmul
cli
das
lahf
push
and
sti
das
out
lods
sub
retf
add
pusha
inc
ja
sbb
scas
in
inc
mov
add
mov
xchg
movs
not
sub
lods
das
ret
or
aas
rol
mov
push
and
xchg
arpl
(bad)
(bad)
and
popa
mov
and
xlat
push
repz
and
(bad)
int3
and
leave
push
lods
jnp
repz
lock
aad
push
cdq
push
adc
ror
or
jae
and
inc
jecxz
retf
push
inc
leave
sub
ret
imul
rep
push
xor
pop
jo
xor
loope
push
dec
scas
into
ret
fsub
(bad)
mov
jle
in
add
adc
lock
sti
mov
xchg
inc
xor
push
stos
aad
(bad)
into
sub
stos
mov
xor
(bad)
mov
mov
xchg
adc
sbb
inc
push
pop
sub
movs
adc
cmps
shl
call
xor
aam
pop
inc
xchg
push
add
xor
jmp
mov
xchg
loop
icebp
fcom
cmp
test
sbb
fadd
xchg
retf
push
outs
push
jle
(bad)
mov
stos
call
dec
ss
std
ss
sbb
outs
mov
sbb
fs
jle
push
arpl
mov
loope
(bad)
or
jmp
jns
dec
or
or
fild
xor
inc
pop
mov
xor
inc
sar
push
repz
call
ins
or
test
aad
pop
xchg
pop
sbb
push
dec
and
mov
loope
jb
and
movs
push
mov
test
bound
xor
pop
mov
mov
pop
test
or
rcr
into
mov
out
add
daa
sbb
dec
mov
pop
dec
adc
push
push
icebp
mov
xor
loopne
push
cli
mov
rcr
xlat
add
xchg
sahf
and
xlat
sbb
adc
cmp
push
inc
xor
out
xor
lods
stos
dec
push
sti
adc
loop
mov
mov
lock
js
test
outs
popf
rol
scas
inc
push
cld
aas
mov
inc
mov
push
inc
xchg
jl
adc
adc
jl
fisubr
stos
clc
mov
or
sahf
sub
jp
inc
push
ins
out
sbb
in
sbb
repz
cmp
lea
fisttp
lods
(bad)
mov
push
pop
mov
or
sub
push
retf
jns
xchg
lds
outs
ficomp
xchg
lods
xchg
lods
push
add
idiv
cwde
cmps
push
sub
popf
call
xlat
push
(bad)
fcmovnb
push
pop
sar
inc
in
xor
and
jb
leave
adc
daa
mov
jl
inc
dec
loop
cmps
dec
push
jl
xchg
es
push
fmul
outs
add
loop
add
add
ins
lods
loopne
sub
or
(bad)
es
jmp
sbb
sti
movs
ret
and
stos
pop
cmp
jnp
add
daa
mov
dec
inc
add
xchg
aas
(bad)
fisubr
pop
mov
inc
test
xlat
mov
std
in
pop
test
jmp
std
call
call
ins
and
retf
add
and
dec
jmp
inc
add
mov
div
jp
and
lods
sub
shl
sub
cmps
cmp
xor
mov
out
and
lods
xor
(bad)
(bad)
mov
jmp
pop
jnp
sbb
xlat
out
aaa
in
test
(bad)
xchg
and
dec
imul
stc
das
pop
add
xor
les
stos
xchg
xor
nop
xor
movs
mov
out
aam
aaa
adc
out
retf
pop
dec
les
mov
dec
and
inc
mov
and
pop
test
out
push
xor
je
loop
stc
push
mov
dec
out
push
outs
data16
punpcklwd
lds
cdq
aas
inc
mov
ins
hlt
sub
out
xchg
ss
lods
outs
inc
add
test
jecxz
je
daa
in
clc
pop
mov
int
mov
cli
inc
jnp
jmp
pop
sbb
scas
fcmovne
mov
cwde
mov
add
aaa
adc
push
repnz
mov
out
adc
mov
and
and
ror
movs
ins
sub
xor
pop
push
clc
pop
(bad)
fwait
or
sub
mov
bound
hlt
inc
aam
js
mov
data16
leave
test
popa
mov
lea
pop
addr16
inc
pop
add
movs
sbb
add
mov
stc
mov
sub
cli
xor
or
push
or
and
and
js
in
mov
repnz
jl
into
jl
ins
mov
daa
xor
mov
cdq
fidiv
stc
inc
dec
mov
lds
fldlg2
xor
and
mov
adc
popf
pop
(bad)
ffreep
add
test
data16
jnp
pop
fs
mov
jge
icebp
cmp
pushf
add
fwait
push
cli
cmp
mov
int3
test
cwde
adc
aaa
outs
push
pop
rol
clc
mov
jg
sbb
sbb
repnz
or
mov
rol
outs
mov
out
mov
pop
adc
xor
jecxz
lea
jmp
xor
(bad)
lock
mov
push
push
push
test
and
and
cdq
fidivr
fwait
stc
sub
int
int3
mov
sbb
or
sbb
nop
(bad)
clc
xor
cdq
push
mov
test
adc
xor
push
out
and
sbb
mov
daa
sub
push
or
mov
imul
cmp
sahf
pop
mov
push
mov
add
push
push
mul
cmps
push
daa
enter
adc
xlat
and
outs
shl
jmp
test
sub
mov
fwait
test
and
jne
out
aam
jne
and
jns
rcl
adc
mov
mov
mov
xor
xlat
fnstcw
xchg
loopne
push
adc
ins
sbb
(bad)
(bad)
and
pop
shr
lods
out
adc
xchg
faddp
xor
stc
pop
or
xor
mov
adc
jo
test
mov
push
add
mov
repnz
in
mov
sti
dec
jle
mov
sbb
in
nop
outs
pop
jecxz
or
or
jecxz
fstp
xchg
and
pop
xchg
out
sbb
dec
sar
loop
out
adc
jns
retf
xchg
sbb
pop
cmps
repnz
and
iret
xchg
add
add
in
sub
out
cmps
adc
retf
xchg
aam
cmp
sub
jp
(bad)
sbb
xchg
mov
cmp
call
mov
push
sub
sbb
jae
retf
(bad)
scas
popf
pop
dec
iret
mov
xor
mov
sar
sahf
mov
aas
mov
jns
movs
shr
xor
pop
fcomi
cmp
enter
(bad)
push
mov
push
jnp
ss
lods
xchg
jg
clc
retf
sar
test
adc
ror
jle
mov
lds
aaa
dec
pop
adc
imul
push
mov
mov
adc
fisttp
fdivr
jns
out
dec
jmp
fild
mov
push
xlat
jecxz
xor
addr16
dec
inc
int
mov
cld
inc
xchg
(bad)
ins
ret
in
jl
jo
fwait
outs
cmc
dec
jmp
popa
xchg
rol
dec
fs
in
jb
mov
(bad)
cld
in
jo
inc
or
jl
out
lods
loope
mov
jo
cmp
lods
pop
ds
fstp
rcl
xchg
or
out
mov
retf
test
cmp
mov
lahf
xchg
jle
stos
aad
xchg
cmp
dec
test
stos
test
xchg
xchg
popa
jecxz
or
(bad)
std
mov
fisubr
sub
test
or
inc
iret
mov
mov
scas
ss
mov
fdiv
cmp
jg
cdq
dec
add
loope
call
(bad)
xchg
(bad)
pushf
push
add
retf
xchg
ds
jle
xor
push
xchg
mov
xchg
frstor
sub
cmp
std
jge
loopne
xor
push
lock
mov
jecxz
les
jae
xor
push
enter
inc
sbb
addr16
nop
jo
(bad)
std
xor
imul
popf
repnz
ins
inc
xor
cmps
push
xchg
stc
gs
les
fwait
cmp
sub
rcr
xchg
push
test
popf
shr
int
mov
pop
mov
pop
pushf
push
xor
loopne
test
dec
cwde
ins
enter
or
mov
scas
pminub
jmp
xor
push
pop
xor
xor
aad
loop
inc
cmp
push
jnp
dec
add
ins
push
cmp
(bad)
pop
mov
pop
fs
lahf
inc
mov
mul
sar
enter
mov
push
cmp
fbstp
ret
sahf
retf
cmp
sub
ret
sbb
int3
jle
push
sbb
cld
mov
mov
xlat
sti
jmp
sub
push
push
iret
aas
cld
out
dec
outs
(bad)
shl
xchg
div
mov
mov
outs
(bad)
adc
aaa
cmc
sub
in
int
fs
jl
push
lods
sti
sbb
imul
in
fcom
inc
in
add
std
push
out
jecxz
sbb
or
push
jge
mov
test
mov
sub
lock
jo
dec
les
repnz
mov
loope
inc
xchg
xlat
mov
mov
mov
je
xor
scas
dec
out
cmp
sub
add
inc
mov
mov
cmp
ja
mov
inc
stos
sbb
mov
or
sub
pop
sub
pop
adc
cld
aam
das
loopne
sub
nop
das
out
sub
push
in
adc
pop
add
jnp
nop
xchg
fnstenv
sar
mov
xor
xchg
xchg
fcomp
pop
adc
fnsave
cli
sub
(bad)
pop
addr16
not
push
ret
mov
and
lock
mov
push
arpl
stos
jnp
pop
mov
test
add
ror
xlat
dec
sbb
into
xchg
dec
not
(bad)
js
sahf
sahf
mov
(bad)
adc
dec
push
fucomi
mov
cwde
adc
sub
jae
pop
lahf
(bad)
and
pop
jnp
adc
xchg
imul
je
xor
mov
sbb
aam
xor
out
stc
(bad)
sti
call
add
out
xor
test
shl
aam
aas
fistp
outs
xchg
mov
ret
int
dec
das
daa
jno
mov
es
cmps
ss
mov
lock
in
jns
and
push
and
pop
scas
retf
retf
cmp
jg
es
je
inc
mov
outs
fisttp
cld
lahf
int3
out
jmp
jnp
cmp
cmp
cld
mov
(bad)
push
dec
adc
aad
loop
jmp
jno
sar
cmp
nop
adc
retf
loop
add
mov
test
fld
adc
imul
jg
sbb
sbb
lahf
hlt
ficomp
cmc
inc
daa
xor
lods
cmc
push
repz
into
rcl
sub
scas
push
sar
add
pop
inc
pop
out
xchg
out
lods
popf
movs
loope
out
push
inc
in
jl
mov
sbb
ror
sbb
or
cmp
retf
cmps
xchg
push
push
sub
call
lea
jmp
pop
xlat
test
shl
push
popf
xor
jle
dec
mov
xchg
pop
leave
xchg
out
mov
cmp
adc
sub
xchg
mov
and
xor
mov
fdivr
adc
idiv
ror
pop
mov
repz
or
dec
push
sub
ret
push
fstp
daa
jle
cmp
inc
test
ja
repz
push
(bad)
cmp
(bad)
int
and
clts
stos
adc
dec
dec
sub
icebp
hlt
fstp
mov
sti
cmp
nop
mov
jo
in
ins
enter
xchg
stos
out
inc
fmul
fidiv
add
ffree
sbb
outs
push
jmp
repnz
sbb
xlat
adc
inc
sti
push
outs
pop
inc
xchg
cmc
cs
push
daa
mov
sub
ds
cwde
sub
iret
enter
(bad)
out
and
or
add
stc
dec
push
xchg
adc
jecxz
stos
aad
sbb
rol
das
adc
mov
lahf
sbb
in
pop
sbb
outs
xchg
scas
and
cmp
leave
jp
in
mov
dec
js
retf
hlt
shl
mov
pop
stos
xor
jae
or
mov
xor
nop
ins
lahf
out
aad
or
cmp
icebp
or
out
and
hlt
add
jnp
mov
lods
jg
ss
fcmovu
dec
cmp
stc
or
mov
call
mov
out
xchg
out
ins
jg
push
mov
jg
xlat
adc
cmp
push
cmp
add
(bad)
out
pop
mov
or
pop
rol
xor
dec
ficom
fild
cmp
fsubr
pop
shr
test
cmovno
xor
ret
add
pop
(bad)
retf
ins
inc
or
imul
add
jmp
jg
int
mov
pusha
pushf
(bad)
jo
jo
and
pop
retf
ja
and
ret
xlat
push
loopne
and
jbe
(bad)
push
cs
clc
xor
ror
dec
jbe
mov
sbb
in
retf
inc
jo
pop
bound
add
xor
aaa
sbb
aas
sub
out
inc
cmp
stos
inc
out
fbstp
lahf
lods
and
jmp
push
in
cmp
cwde
fs
hlt
std
push
or
test
mov
mov
sub
jg
adc
fwait
inc
mov
mov
xchg
mov
xor
sub
loop
xchg
imul
mov
jo
xchg
dec
pop
(bad)
sub
enter
jne
cmps
xchg
out
dec
jo
ins
mov
test
cmp
add
rcr
retf
sbb
or
xchg
xchg
push
inc
call
mov
loop
repnz
mov
mov
lea
test
lds
je
retf
adc
inc
push
cmp
sbb
hlt
inc
mov
xor
std
loope
pop
leave
mul
jmp
sbb
inc
popa
mov
xor
test
adc
stc
push
sar
cmp
mov
and
fld
scas
sbb
or
sub
je
jmp
(bad)
ror
mov
(bad)
pop
xchg
inc
es
sub
cld
pop
push
push
dec
cwde
popf
xlat
or
cmp
xchg
xchg
js
sbb
movs
rcl
push
jle
add
vpaddw
xor
fwait
sti
sbb
jl
or
lahf
add
dec
scas
xor
jge
mov
jae
neg
sub
and
xchg
cmpxchg
inc
push
inc
or
pop
jmp
(bad)
fcomip
mov
mov
leave
lods
pop
mov
mov
enter
fcomp
outs
ja
es
sbb
in
lods
and
xor
inc
fidivr
push
push
fisubr
pop
push
jo
dec
jb
cs
mov
(bad)
das
loop
xor
pop
jns
adc
xor
xor
mov
sahf
or
push
arpl
daa
fwait
cmp
arpl
sbb
stos
shr
jnp
and
aam
or
inc
adc
adc
imul
mov
and
mov
sub
stos
inc
xchg
dec
out
pop
and
cmc
push
pop
fld
out
pop
addr16
sti
jecxz
dec
loope
loop
xchg
mov
mov
fistp
mov
out
fcmovnbe
outs
retf
ror
jo
out
push
or
mov
pusha
jno
xchg
adc
call
leave
daa
ins
shl
or
xor
sub
sbb
daa
shl
mov
aad
mov
push
fidiv
call
aaa
xor
xor
ficom
fcomp
pop
nop
fs
dec
pop
(bad)
idiv
inc
jb
(bad)
lgdtd
adc
popa
dec
aam
jg
and
(bad)
pop
cmp
addr16
xchg
inc
xchg
add
inc
fwait
loopne
sbb
outs
pop
mov
mov
out
adc
mov
out
push
std
pop
cmp
xchg
mov
in
aad
push
or
jb
or
(bad)
pop
into
dec
mov
cmps
adc
cmc
sbb
ins
lahf
retf
push
(bad)
cmp
fidivr
xor
jecxz
pop
outs
pushf
jge
xchg
xchg
(bad)
sbb
call
xchg
jmp
imul
push
xchg
mov
sbb
inc
fcomp
shl
adc
in
fnsave
fwait
loope
xchg
cmp
fcom
xchg
mov
dec
fs
jl
mov
xor
jge
lahf
ins
mov
xor
sub
pop
mov
enter
or
test
test
pop
xchg
hlt
ds
xchg
xchg
jl
enter
jl
cld
and
(bad)
and
gs
pop
xor
add
imul
test
adc
sbb
addr16
js
add
fwait
pop
pushf
adc
cmps
lods
dec
mov
out
sub
push
neg
mov
popf
cmp
repz
sahf
add
iret
adc
or
xlat
or
call
mov
add
test
and
ins
pop
mov
imul
mov
inc
cmp
pop
mov
mov
or
sub
jnp
std
push
cmc
int3
lock
ja
sbb
test
shl
std
and
inc
pop
cs
loope
lods
sbb
push
sbb
dec
cmp
pop
jecxz
add
mov
sahf
scas
sub
test
rcr
add
xchg
inc
sub
adc
cmp
add
ret
and
js
xchg
inc
jb
xchg
pop
cmp
cmps
repz
hlt
and
pop
xchg
and
or
cmp
jbe
add
mov
fdivrp
mov
inc
mov
dec
outs
adc
push
lock
scas
fcmove
dec
pop
je
das
in
cmc
lods
dec
mov
pop
pop
dec
in
mov
sub
movs
sbb
push
test
inc
lods
iret
fcmovnu
sub
push
and
mov
nop
loop
ror
ins
cld
lock
adc
in
retf
inc
xchg
sub
mov
and
or
sar
not
pop
jecxz
and
dec
in
into
xchg
mov
imul
out
push
inc
jns
dec
or
mov
(bad)
fistp
push
ret
or
or
in
(bad)
repnz
iret
xor
pop
dec
fbstp
pop
sub
and
cli
les
inc
xor
pop
rcr
adc
sub
inc
rcl
cmps
scas
jmp
sub
dec
or
fwait
and
das
dec
loop
pop
jmp
daa
or
aam
cmps
jecxz
sbb
sub
lahf
cmp
lods
repnz
jg
push
xor
jno
(bad)
cmp
lea
pushf
inc
jns
loope
pusha
adc
fst
imul
loopne
je
scas
jno
mov
cmps
push
pop
shl
pop
imul
jbe
cmp
mov
pop
cmp
push
jg
(bad)
adc
push
loop
movs
mov
mov
cmc
cmp
mov
jecxz
clc
fimul
dec
sub
jns
not
add
rcl
push
cmp
fimul
int
lock
ret
and
in
dec
mov
popf
or
pop
test
xor
dec
outs
xor
inc
cmc
jp
ins
xor
jae
(bad)
fwait
movs
sbb
daa
pop
iret
mov
fs
outs
lock
dec
inc
sbb
sti
adc
in
(bad)
pop
jge
push
inc
inc
sub
dec
xchg
lods
inc
cmps
cld
dec
fidiv
sub
movs
imul
sti
pop
cmp
jbe
and
(bad)
and
or
(bad)
mov
movs
inc
mov
test
sahf
jg
pop
or
imul
mov
shr
push
aad
mov
stos
xchg
xchg
daa
rol
mov
ins
sub
ficomp
pop
inc
jp
push
fbld
fs
adc
imul
jns
repz
movs
stc
add
das
test
retf
xchg
adc
inc
push
push
out
inc
mov
outs
pop
ins
mov
mov
dec
xor
mov
xor
lods
repnz
inc
xchg
mov
mov
push
scas
xchg
jmp
mov
fstp
and
lock
xlat
fs
je
dec
push
sti
inc
js
jnp
xchg
jne
jmp
push
pop
sbb
mov
fwait
enter
out
xchg
sar
addr16
pop
mov
stos
xchg
js
cwde
pusha
push
fs
out
test
cmc
repnz
sub
cmp
cli
pop
adc
push
pop
cld
fadd
imul
pop
push
bound
or
xor
test
mov
test
inc
pop
mov
stc
shl
sub
inc
das
sub
enter
xchg
push
sub
pushf
repnz
scas
sub
cmp
adc
mov
mov
and
xor
shr
lea
(bad)
and
pop
in
mov
and
scas
ds
es
outs
sub
pop
repnz
shl
or
xor
inc
aam
or
jb
xchg
xor
test
hlt
sub
cwde
mov
jno
test
push
cmc
add
dec
xchg
sbb
push
mov
out
push
lock
sub
or
stc
cs
ficom
std
cmps
pop
xlat
test
pop
pushf
div
jecxz
add
or
mov
sub
add
adc
dec
in
add
ret
add
mov
sub
push
aad
bnd
cmps
ficomp
jno
ins
ds
push
and
jmp
add
adc
adc
dec
inc
pop
and
out
pop
and
into
retf
mov
pop
pusha
scas
inc
sbb
and
pop
imul
ja
or
xor
outs
lahf
(bad)
cmp
fdiv
sub
jmp
pop
mov
aas
jmp
xor
scas
retf
inc
lea
cmp
not
in
xchg
ins
pop
push
sub
push
adc
jg
mov
stos
out
movs
ds
loop
lods
adc
pop
mov
imul
div
dec
pop
xlat
jecxz
repnz
xor
call
loope
and
shl
sbb
push
add
and
sub
(bad)
and
js
(bad)
(bad)
shl
in
aas
sub
pop
jle
mul
or
pop
fs
add
aas
cli
test
popf
loope
movs
mov
add
adc
jno
(bad)
pop
xchg
mov
call
xchg
or
xor
mov
xchg
jge
inc
addr16
lods
and
in
jnp
fs
iret
nop
fadd
mov
stos
ret
popa
dec
sub
and
xchg
or
(bad)
cmps
cmps
js
stc
push
mov
mov
jns
stc
mov
push
jle
std
pop
mov
jo
pop
pushw
inc
cmp
jnp
push
outs
cmp
outs
dec
(bad)
mov
push
rcl
xchg
outs
out
fist
sub
jmp
jne
dec
(bad)
sub
fs
cmp
and
jno
(bad)
pop
xchg
stos
(bad)
iret
jmp
(bad)
xchg
dec
push
out
mov
add
outs
cld
and
xchg
lods
jp
and
je
inc
xchg
gs
push
movs
pop
mov
(bad)
js
fwait
jae
lds
dec
adc
sbb
push
xchg
fcom
(bad)
out
cmp
and
ds
mov
add
dec
mov
lahf
mov
push
rol
pop
sub
stos
cmp
stos
mov
ins
or
add
aas
test
getsec
inc
sub
or
shl
shr
sbb
mov
cdq
and
out
fcomp
cmps
cmc
sub
test
popa
xchg
retw
mov
push
loop
mov
(bad)
mov
xchg
mov
or
cwde
hlt
sbb
shr
jmp
movs
(bad)
scas
in
(bad)
imul
sub
and
(bad)
into
loop
fdivr
pop
push
add
inc
in
sbb
mov
cmps
and
fst
test
pop
sbb
or
mov
pop
jecxz
mov
or
sbb
fsub
test
add
or
ins
jns
sbb
inc
jno
mov
sbb
pop
jg
xchg
jo
popf
jo
xchg
rcl
(bad)
hlt
pusha
adc
fld
cmps
jmp
fs
mov
xor
int
imul
loopne
popf
mov
jbe
xchg
adc
pop
sbb
inc
xor
add
cmp
push
cmc
movs
hlt
int3
mov
xchg
jno
ds
xlat
in
repnz
inc
test
inc
and
shl
pop
test
mov
mov
adc
retf
pop
cli
cmp
in
loope
ds
pushf
loopne
inc
ret
aas
mov
mov
push
shl
(bad)
fldenv
cmc
pop
inc
push
test
mov
adc
inc
jo
(bad)
dec
jg
jle
gs
dec
pop
jmp
fcom
js
pop
data16
shl
out
fwait
sbb
retf
and
sub
add
sub
test
repz
loope
mov
push
adc
pop
lods
mov
push
adc
lods
push
fnstenv
jp
popa
xlat
jb
retf
call
mov
add
inc
sbb
add
test
sbb
dec
(bad)
mov
fidivr
or
int
push
pop
mov
mov
cmp
test
sub
add
ret
mov
mov
add
leave
in
gs
sti
movs
xchg
arpl
dec
mov
jne
mov
or
call
gs
dec
popa
xchg
leave
aaa
ins
call
pop
mov
scas
shl
repz
movs
push
inc
jmp
cmps
sbb
fsub
test
jb
pop
shl
sub
retf
fucomip
push
jmp
frstor
mov
push
ret
leave
jmp
aam
inc
jb
mov
dec
cmp
xchg
or
test
adc
les
mov
and
neg
mov
add
loop
xlat
cmp
ret
mov
jp
cdq
xchg
jno
(bad)
fisub
push
inc
mov
jg
or
and
cdq
scas
and
and
push
xor
push
mov
xor
jns
sbb
jnp
sbb
fldcw
retf
loopne
push
jmp
dec
xchg
adc
sub
mov
mov
in
loopne
enter
or
inc
or
outs
adc
pusha
or
inc
jmp
pop
xchg
inc
call
and
hlt
outs
mov
push
out
jecxz
nop
movs
xor
or
sar
neg
loopne
sahf
(bad)
retf
push
scas
clc
mov
adc
pop
jnp
lods
(bad)
push
dec
hlt
jl
gs
mov
pop
mov
shl
add
sbb
push
push
mov
mov
stos
sub
jo
cmc
outs
push
test
pusha
outs
mov
pop
dec
mov
cmps
retf
repz
(bad)
pushf
arpl
adc
stos
movs
out
in
pop
int3
pop
cmc
push
push
push
mov
stos
and
mov
cli
(bad)
shl
sub
xchg
pop
and
shl
inc
(bad)
sub
xlat
test
fmul
imul
aas
adc
cmp
pop
jmp
cmps
mov
cmp
gs
stos
outs
and
adc
push
add
sti
test
imul
mov
lea
xor
les
je
stos
mov
data16
clc
das
dec
or
cmps
les
push
and
sti
mov
cmp
leave
inc
je
and
and
pushf
mov
daa
repnz
xor
rol
mov
out
ss
repz
push
inc
and
jmp
in
add
jp
mov
xchg
jmp
cmp
xor
mov
(bad)
adc
dec
mov
(bad)
push
push
and
popa
jl
sbb
div
jecxz
cwde
js
rcr
pop
xor
jb
out
pop
adc
mov
int3
lods
test
inc
xlat
pop
mov
inc
mov
pop
mov
inc
jo
mov
lahf
arpl
movs
or
movs
xor
xor
xor
int3
push
fwait
in
mov
ins
test
inc
xchg
enter
cmp
dec
cmp
dec
iret
ja
mov
test
jo
adc
inc
mov
fstp
mov
out
xchg
scas
or
cmps
push
mov
push
stos
ja
cmp
(bad)
mov
sub
inc
mov
ja
popf
inc
sub
inc
push
daa
pop
jmp
es
push
imul
aas
inc
aam
mov
in
ins
dec
mov
sbb
push
stos
jecxz
cld
xchg
cmc
inc
(bad)
not
sbb
ins
ja
or
cdq
push
add
inc
into
test
fsub
lods
rol
test
mov
mov
xor
jmp
pusha
leave
test
xor
xor
lods
call
push
(bad)
adc
rol
outs
sti
jno
test
pop
adc
jbe
cmp
jle
loopne
mov
inc
sbb
leave
repnz
lods
mov
div
mov
scas
outs
loop
iret
add
xor
imul
cld
arpl
test
rcl
dec
push
or
fidivr
sbb
mov
dec
sbb
ss
in
sbb
mov
not
pop
cdq
jno
jae
retf
aas
fcmovbe
das
dec
nop
xlat
xchg
out
icebp
cld
xor
mov
div
mov
sbb
fst
aam
nop
and
ins
lahf
mov
ja
inc
or
pop
mov
or
jb
sub
ds
and
adc
test
and
jge
mov
xchg
pop
movs
por
or
jp
out
jne
xor
or
dec
pop
out
mov
test
cld
pop
push
dec
push
iret
xor
cwde
sar
cmps
or
or
scas
int
dec
adc
jno
gs
adc
fldcw
scas
push
mov
pushf
les
outs
add
fmul
mov
imul
repnz
sub
or
xor
or
pusha
mov
inc
rol
outs
out
test
aaa
dec
call
mov
std
call
sub
movs
call
cdq
mov
cmp
(bad)
mov
loop
ins
aam
xchg
das
cld
pop
sbb
lods
mov
iret
fld
mov
sbb
jnp
mov
pop
movs
xlat
mov
pop
cmps
xchg
xchg
int
enter
adc
add
out
stos
cmp
fld
inc
(bad)
jbe
mov
dec
(bad)
repnz
xchg
adc
fnstcw
inc
adc
outs
cwde
jl
xchg
add
in
jge
loopne
es
mov
cmp
imul
rcr
or
test
lahf
push
ds
ja
aam
retf
and
sub
or
mov
push
movs
or
fistp
dec
icebp
(bad)
call
fisub
push
adc
int3
push
jb
and
data16
lock
or
mov
dec
jb
jle
test
pop
fs
inc
dec
mov
pop
or
mov
std
repz
loope
lea
arpl
movs
pop
adc
cwde
out
addr16
in
xor
imul
pushf
fnstsw
sar
sbb
mov
loop
sbb
das
movs
mov
xchg
(bad)
movs
xor
jl
int3
pop
dec
sbb
pop
ss
jbe
sub
iret
xor
push
pop
mov
cmps
pop
xchg
xor
rcl
out
fs
scas
ins
sbb
into
outs
pop
jae
(bad)
out
cmp
pop
mov
ret
jle
(bad)
movs
rol
sar
idiv
inc
scas
xor
mov
pop
add
dec
jecxz
sub
ss
sbb
ror
test
loope
into
add
jl
jb
xor
ins
pusha
xor
pusha
retf
cmp
add
dec
mov
cwde
adc
xor
push
data16
mov
int
cwde
fld
movs
psubq
adc
sbb
loope
xchg
mov
(bad)
ja
gs
movs
mov
div
aaa
gs
jge
push
push
imul
mov
xchg
and
fwait
mov
les
pop
inc
retf
mov
or
mov
outs
js
sti
repz
ss
push
std
pushf
pop
sbb
cwde
xchg
daa
es
mov
sub
jmp
(bad)
loop
mov
mov
pop
aad
test
ret
fisttp
(bad)
jb
bound
jns
shr
hlt
popf
sbb
pop
ret
mov
cmp
mov
fidivr
sub
test
dec
sbb
xor
aas
test
xchg
cmps
movs
inc
in
mov
imul
dec
inc
cmps
in
add
jnp
andps
ficom
and
push
arpl
and
push
or
ins
add
mov
sub
cmc
jmp
ins
and
pop
scas
dec
sahf
addr16
mov
dec
sub
xchg
sub
mov
and
(bad)
sbb
icebp
add
push
pushf
dec
movs
push
fs
das
xchg
cdq
(bad)
inc
popf
aaa
cmp
stos
push
sub
xor
pop
outs
pushf
adc
push
cmc
aaa
and
sbb
pop
retf
xor
inc
sbb
sub
inc
mov
mov
daa
inc
push
mov
jmp
cmc
mov
dec
sbb
icebp
xor
stc
jl
(bad)
xchg
pop
addr16
xchg
push
mov
and
push
xchg
bound
in
jbe
mov
je
mov
xchg
ret
xor
xchg
xchg
mov
sbb
mov
mov
pop
stos
pop
inc
adc
sub
les
mov
and
cli
pop
addr16
mov
and
(bad)
in
add
lea
js
cmp
addr16
mov
adc
jmp
lods
mov
stos
mov
push
or
rcl
sub
ror
jns
in
movs
mov
sti
inc
jmp
ins
jne
jmp
mov
xchg
daa
sub
rcr
mov
hlt
clc
call
sub
cmp
push
xor
sub
jle
ret
(bad)
ret
fld
sahf
xchg
pop
nop
ja
mov
int3
enter
push
xchg
sub
xchg
pop
xchg
iret
jmp
pop
out
jns
pop
cmpxchg
xchg
test
aam
or
call
mov
push
enter
loopne
fadd
pushf
int
mov
jbe
add
mov
push
sbb
xchg
mov
pop
add
sbb
int
push
pop
jl
jbe
push
add
sbb
xchg
cmp
adc
and
push
xchg
xchg
push
retf
gs
push
pop
pop
scas
lock
pop
scas
or
push
push
mov
xor
push
cmp
cld
or
pop
pop
in
movs
or
inc
cmps
pusha
jnp
psubd
adc
jp
inc
sub
push
into
jle
xor
dec
push
xlat
clc
push
pxor
jp
in
add
ins
arpl
fwait
or
leave
lahf
ja
or
aam
popf
cmp
mov
pop
popf
neg
test
icebp
xor
fild
mov
ja
jo
call
mov
dec
retf
mov
fisubr
mov
test
pushf
add
push
scas
daa
cdq
or
pusha
test
mov
dec
into
jecxz
and
lock
dec
jge
clc
add
pop
inc
cwde
sub
pop
sub
pop
icebp
cmc
xor
jecxz
test
leave
cli
sbb
xchg
adc
mov
rcr
iret
add
and
das
mov
aas
sbb
mov
xchg
dec
xor
js
lock
rcr
sbb
cld
inc
mov
jno
in
shl
les
pop
pop
or
dec
and
test
add
cmp
jp
outs
in
out
out
xor
pop
pop
cld
pusha
pcmpgtb
mov
rcr
push
pcmpeqb
cs
out
dec
mov
sahf
inc
das
push
fwait
mov
sbb
xor
inc
cld
jns
adc
xchg
icebp
pop
ins
rdpmc
mov
icebp
xor
mov
add
inc
xchg
and
mov
mov
and
lea
fidivr
inc
enter
fld
mov
and
loope
dec
pop
jbe
xchg
xchg
mov
sbb
xor
(bad)
sbb
lock
and
add
pop
leave
mov
jl
jb
or
cwde
fst
out
icebp
push
(bad)
ja
call
(bad)
push
cmp
pushf
sub
es
and
or
mov
sub
xchg
mov
lahf
cld
retf
inc
mov
ret
or
adc
pop
jge
mov
rol
cmp
cmc
rcl
xor
jl
out
(bad)
int3
loop
pushf
std
ins
or
test
ret
movs
movs
xchg
pop
stos
push
mov
xchg
out
shl
inc
mov
and
rcl
scas
mov
das
fisub
out
jbe
(bad)
jg
dec
sar
call
imul
dec
inc
and
inc
inc
cmc
loopne
fild
ror
add
mov
iret
adc
pop
mov
push
test
jecxz
enter
(bad)
cmp
hlt
xlat
add
jns
add
inc
hlt
xchg
sub
int
rcr
xchg
and
mov
pop
movs
add
fiadd
jle
lods
sub
les
imul
and
and
aam
mov
sbb
out
out
dec
push
push
adc
jnp
add
sbb
iret
xchg
hlt
inc
out
mov
js
std
or
xlat
in
(bad)
outs
aad
(bad)
shl
mov
in
icebp
imul
cs
fdivr
or
jns
std
pop
movs
push
aad
pop
fmul
xchg
inc
movs
out
jo
sub
xor
mov
add
(bad)
repnz
cmps
mov
dec
and
lock
sub
int
out
inc
inc
ret
sub
arpl
pushf
xor
sbb
dec
xchg
pop
arpl
dec
shl
icebp
push
push
add
mov
stos
pushf
mov
retf
mov
pop
ds
push
adc
lock
test
pop
dec
push
das
push
pop
inc
data16
and
mov
adc
aad
mov
mov
jecxz
cmp
pop
sbb
mov
(bad)
lock
or
daa
cmps
jne
xchg
imul
lods
jb
dec
jmp
popf
mov
mov
inc
pop
enter
test
leave
pop
cmp
mov
mov
add
inc
cmps
je
sub
pop
push
add
ror
dec
mov
jmp
inc
int
inc
cmps
cmps
mov
mov
iret
add
pop
cmp
repnz
jl
cmp
add
jg
sub
ja
jb
ror
lods
add
fiadd
adc
or
jne
xlat
push
or
mov
enter
fnstsw
jle
lea
mov
fidiv
mov
pop
mov
lods
dec
rcl
inc
sub
dec
dec
dec
call
ss
sbb
repnz
or
cmp
jg
fcomp
mov
push
(bad)
pop
ins
xchg
dec
xchg
inc
das
lds
outs
adc
xor
or
je
ins
es
push
jmp
inc
inc
sbb
cwde
jge
dec
xchg
aad
cmps
xor
add
sub
pop
dec
stos
mov
out
sbb
push
clc
mov
sub
enter
cli
(bad)
xchg
cmp
jb
inc
jbe
frstor
push
lods
(bad)
cld
mov
inc
stc
in
sub
retf
outs
repnz
xor
dec
push
mov
adc
in
cwde
js
lods
ds
movs
jmp
imul
fadd
scas
mov
aas
js
fmul
pop
add
sbb
add
rcr
cmps
add
mov
cmp
mov
jnp
ffree
loope
inc
dec
fldcw
pop
data16
xor
adc
cmc
push
xor
or
dec
out
jmp
mov
inc
in
mov
mul
jno
jg
in
jne
rcl
xchg
dec
and
pop
or
call
and
mov
and
rcl
pop
test
pop
cmp
pusha
ja
push
mov
lods
or
or
jnp
repnz
popf
cmp
bound
fstp
rcl
push
scas
mov
lods
jg
out
in
xchg
mov
cmp
push
hlt
test
jmp
test
fcomp
jecxz
rcr
std
in
inc
ror
xchg
cdq
dec
(bad)
iret
popf
adc
repz
out
test
repnz
rcr
xchg
lea
mov
ss
dec
int
stc
rcr
push
cdq
jle
imul
dec
mov
scas
cmps
dec
ret
fadd
push
aaa
stos
cmc
les
push
xor
bound
jae
sbb
loope
inc
lea
sub
pop
push
cmp
cld
aaa
xchg
xor
inc
aaa
fwait
retf
xor
xor
fcomi
xlat
imul
or
fisub
fldcw
sub
scas
pop
stc
mov
fdivr
cdq
and
push
xor
lods
les
xchg
aaa
lahf
stc
mov
das
xor
imul
adc
jb
dec
inc
ja
and
add
mov
push
or
mov
jae
mov
or
mov
or
mov
movs
jne
mov
mov
les
xor
pop
push
add
or
jge
imul
gs
adc
jno
mov
(bad)
push
add
jmp
mov
mov
cmp
jl
call
ret
mov
adc
mov
fidiv
add
mov
test
xchg
cwde
mov
fs
leave
inc
stos
aad
inc
pop
shl
mov
jns
aas
mov
xchg
push
mov
adc
pusha
out
mov
es
out
lahf
mov
mov
inc
mov
cmps
fwait
or
mov
push
pop
and
mov
in
push
dec
add
push
popf
push
pusha
pop
imul
ds
(bad)
jbe
popf
sub
and
push
outs
cmps
sub
inc
lahf
jp
ror
sub
bound
cwde
mov
and
adc
push
aaa
adc
xchg
retf
les
nop
inc
push
sub
jnp
cld
cmc
fisttp
cld
sar
repnz
dec
mov
data16
mov
ret
dec
and
fisub
xor
sub
movs
push
add
or
mov
jg
dec
xchg
ss
and
dec
cmp
out
mov
int3
sbb
add
inc
xor
test
mov
fstp
mov
mov
jo
jbe
leave
repz
outs
lock
out
popf
cmovg
sti
xchg
gs
and
dec
jmp
data16
adc
sbb
jno
frstor
aad
fbld
xor
sub
sub
and
dec
or
and
jg
fmul
mov
mov
sbb
iret
push
cdq
mov
inc
(bad)
lods
(bad)
mov
sbb
test
xchg
add
test
hlt
test
scas
and
xchg
nop
jae
ja
sbb
(bad)
sbb
sahf
cmc
sbb
cmps
ins
cmp
popf
mov
movs
ds
ja
jecxz
jae
mov
out
call
inc
iret
cmp
adc
sub
pop
or
addr16
enter
call
xchg
sub
clc
push
mov
aam
loope
dec
sbb
aas
fld
sbb
and
or
test
das
js
cmp
push
ja
or
sbb
iret
dec
sbb
sahf
mov
(bad)
cld
adc
pushf
mov
mov
or
sbb
pop
sahf
xchg
pop
pop
mov
mov
jg
or
jmp
loope
test
sbb
and
repnz
jnp
xor
sahf
push
ss
enter
push
mov
mov
adc
jnp
call
sub
add
rcr
stos
pop
pop
sub
dec
cmp
popf
xor
fisub
dec
into
jecxz
pop
add
adc
sti
stos
and
in
mov
hlt
cmp
cdq
jo
stos
pop
xchg
movs
xor
pop
mov
les
sahf
in
or
movs
jl
das
sub
jne
out
sbb
adc
ret
mov
(bad)
int
xchg
and
test
mov
push
cmp
xchg
push
jb
cmp
in
pop
(bad)
fnstenv
(bad)
test
movs
push
(bad)
fnstcw
jle
inc
adc
or
xchg
retf
data16
dec
mov
push
xchg
push
test
jge
xchg
cmp
pop
jge
retf
bound
xchg
dec
fcom
loopne
cmp
xlat
cmp
or
and
ficom
pop
and
mov
mov
sbb
lahf
sub
jne
xor
cmc
jg
jno
pushf
aad
xor
fsubr
ss
adc
xor
cwde
out
inc
cmps
lea
push
adc
mov
and
xchg
pop
push
push
jl
adc
mov
xchg
test
nop
push
cmp
sbb
pop
push
and
mov
pop
nop
cli
nop
push
add
dec
cmp
clc
jmp
inc
inc
and
cmp
test
bound
(bad)
out
std
cmp
mov
mov
ror
int
popf
gs
inc
sub
int3
jmp
outs
pop
call
pop
dec
add
xlat
dec
shl
inc
and
lds
lods
xchg
or
lds
ins
mov
int
ficom
ins
xchg
cdq
pop
sti
xor
adc
inc
int
fcomp
test
fcom
and
pop
pop
mov
loop
es
mov
pop
rcr
dec
mov
(bad)
cmp
lea
lds
(bad)
repz
fisttp
push
xor
xchg
push
shl
cli
sbb
xchg
out
pusha
ret
ins
mov
js
in
scas
adc
pop
scas
xor
std
stos
add
imul
push
stc
ja
mov
xchg
xor
dec
sbb
push
or
dec
in
jmp
not
add
lods
push
fwait
(bad)
sub
outs
daa
cmp
scas
fistp
movntq
mov
xor
xor
aad
cmp
sub
dec
cmp
sahf
les
mov
xlat
add
data16
js
sub
into
pop
cmp
mov
cmc
hlt
dec
popf
psubq
ret
jb
xchg
in
inc
push
jmp
es
aam
pop
sub
(bad)
inc
jmp
fs
rcl
mov
xor
xlat
or
inc
ss
mov
or
call
pop
add
add
sub
imul
stos
jno
jnp
jno
std
sar
cmc
test
jae
cmp
out
sub
inc
ins
cld
ins
in
inc
clc
out
lea
cmp
cs
scas
sbb
cmp
enter
pop
sbb
fiadd
cmp
(bad)
int
inc
sub
push
xchg
add
mov
retf
xlat
cmp
jg
in
xlat
push
and
dec
xchg
adc
xor
push
sti
out
ret
push
fcomp
inc
mov
movs
imul
sbb
fnsave
and
fwait
push
xlat
retf
adc
mov
pop
das
stos
jns
rcl
ja
ret
ret
fsub
scas
cli
push
cmp
imul
dec
fnstsw
cmp
sbb
or
xor
aad
test
mov
mov
fisttp
cmp
imul
scas
add
enter
dec
das
mov
stos
out
xchg
ja
pop
mov
xor
and
data16
icebp
or
mov
adc
sub
lods
mov
sub
stos
fs
push
dec
pop
leave
sub
push
sub
cmp
jmp
mov
inc
ja
cmp
and
pop
add
push
loop
or
mov
sar
mov
cdq
je
sub
jecxz
dec
push
push
cmp
mov
cmp
xchg
xchg
push
scas
ret
scas
or
into
mov
test
mov
sub
xchg
lods
push
mov
xchg
les
push
test
xchg
pop
mov
add
out
mov
or
add
out
daa
hlt
sub
daa
pop
iret
cmp
in
aad
movs
dec
dec
into
stos
xchg
movs
mov
stos
cmp
addr16
ficomp
xchg
and
xchg
popa
mov
in
mov
mov
cmc
idiv
sbb
and
mov
dec
adc
pop
sbb
out
fwait
lds
jo
sub
stos
ror
cmp
in
push
jmp
arpl
mov
test
sbb
mov
jg
stc
pop
jns
(bad)
fdiv
xchg
outs
pop
ins
aaa
gs
inc
mov
jmp
jmp
stos
fisttp
iret
xchg
bound
sbb
in
inc
lods
xchg
push
mov
pop
test
mov
test
lock
das
cmp
mov
xchg
mov
adc
repnz
(bad)
out
pop
adc
fs
sar
cmp
mov
push
push
mov
sbb
inc
je
cmp
mov
pop
cdq
or
xlat
shl
repz
out
ret
sbb
retf
adc
pop
stos
jge
sti
(bad)
mov
mov
cmps
shl
mov
ds
cmp
repz
movs
xor
push
call
(bad)
xchg
test
xor
jl
(bad)
pop
sbb
ret
pop
pop
inc
jo
in
or
push
cmc
xor
jnp
lods
pop
mov
add
or
mov
xchg
cmc
repnz
movs
inc
mov
fcmovnb
cwde
lea
mov
sub
aam
repnz
mov
in
loop
and
shr
jle
inc
popf
(bad)
add
mov
adc
inc
pop
xchg
mov
movs
jmp
jmp
cmp
xor
clc
jmp
mov
iret
dec
mov
push
aas
dec
mov
ror
jge
imul
ja
add
dec
es
movs
push
push
ret
enter
aam
push
add
mov
movs
in
arpl
dec
fcom
push
test
fcmovnbe
push
test
lahf
sbb
scas
std
fdivr
mov
out
add
jns
call
push
fwait
sub
pop
dec
arpl
arpl
in
fiadd
push
xlat
dec
sbb
stos
sbb
loope
jae
mov
(bad)
jge
adc
shl
(bad)
push
inc
mov
push
mov
push
push
aas
xor
mov
mov
push
mov
fst
or
mov
cmp
ja
xlat
out
add
and
call
sub
rcl
mov
pusha
cmp
xchg
nop
retf
ins
cmp
not
call
movs
pop
data16
adc
push
fimul
lock
mov
div
add
or
hlt
(bad)
js
pop
shl
xor
inc
in
sub
adc
pop
out
in
sbb
dec
outs
stos
ss
cmp
inc
jl
outs
push
adc
pop
and
cmp
lods
xchg
mov
adc
push
imul
inc
jmp
pop
(bad)
jle
mov
inc
pop
dec
jp
pop
cwde
les
jo
loop
out
pop
xchg
push
push
xchg
mov
movs
std
add
pusha
popa
sub
nop
xchg
inc
jnp
add
sahf
push
or
add
adc
mov
cld
sbb
jo
(bad)
adc
sbb
push
mov
adc
cmp
clc
test
jbe
push
add
test
push
push
(bad)
mov
xor
or
sbb
imul
ret
data16
ins
retf
and
pop
jge
mov
mov
fisubr
mov
push
pop
test
adc
mov
pop
arpl
mov
mov
mov
add
popf
cmp
and
fsubr
jnp
push
xchg
mov
lea
jno
(bad)
push
xchg
inc
mov
bnd
fwait
pop
repnz
mov
push
inc
fs
shl
sti
sub
and
fldenv
in
jns
sub
jmp
mov
(bad)
clc
push
or
cmps
jmp
jmp
retf
cmp
lods
add
pop
cmps
pushf
ja
mov
xor
jno
push
push
rcr
cs
test
in
cmps
and
jmp
xor
mov
test
push
pop
arpl
out
pop
aas
test
sahf
jae
mov
adc
cmp
sbb
push
inc
mov
call
int
es
xor
mov
shr
cmp
fsubr
xchg
or
scas
push
xor
push
out
movs
mov
mov
test
arpl
or
and
shr
push
std
into
shl
jmp
sbb
mov
mov
std
jnp
les
mov
dec
leave
jmp
fstp
movs
hlt
(bad)
popf
pop
das
pop
(bad)
sub
jecxz
mov
inc
xor
jae
dec
sbb
test
jne
sub
add
xor
jnp
cld
pusha
retf
jnp
dec
mov
mov
(bad)
and
fstp
adc
and
jle
retf
out
shl
mov
stos
pop
stc
sub
out
cmp
mov
jnp
ret
add
rol
int
sbb
cmps
cld
out
shl
addr16
pop
stc
jp
nop
xor
aam
inc
repz
xor
jbe
lods
test
push
jnp
add
or
add
sub
and
and
cli
out
test
push
xor
xchg
test
mov
add
into
scas
inc
(bad)
mov
adc
mov
sub
add
das
jne
inc
(bad)
cmp
int
icebp
or
jne
cwde
imul
adc
jae
adc
shl
jne
adc
pushf
xor
xchg
inc
adc
out
ins
sbb
mov
call
je
call
pop
outs
add
hlt
push
or
jns
jb
pop
mov
fwait
jo
mov
pop
dec
fnstsw
inc
jns
(bad)
test
mov
jp
sub
retf
mov
fsub
mov
or
mov
jb
aad
push
repz
pop
stos
std
call
leave
in
inc
xor
loop
jge
pop
in
ret
mov
ins
sbb
xchg
es
sbb
ss
call
stos
js
xchg
inc
pop
in
cmps
and
inc
shrd
nop
inc
xor
push
adc
inc
inc
push
int
out
adc
cwde
dec
xor
jne
das
in
ins
lahf
test
pop
push
pusha
dec
retf
pop
push
arpl
(bad)
imul
and
sbb
adc
out
mov
fwait
int3
push
je
pop
xchg
in
or
in
jecxz
push
test
aad
mov
push
and
xor
push
hlt
movs
mov
fiadd
test
fwait
inc
lea
(bad)
movzx
add
rcr
push
int
in
movs
out
ins
dec
jecxz
mov
nop
pop
jmp
fsub
call
retf
xchg
pop
push
cmps
scas
push
pop
pusha
cmps
cmps
int3
rcr
cmp
or
jge
or
shr
call
hlt
nop
mov
mov
push
and
mov
xor
fiadd
div
jnp
jl
fimul
sbb
(bad)
movs
mov
ds
sub
cmc
lahf
push
xchg
rol
push
jb
inc
test
adc
dec
jae
xor
aaa
fnsave
mov
add
ret
iret
jl
stos
jmp
test
add
popa
and
cmc
outs
mov
xchg
in
fnstsw
sub
mov
jg
ffree
sbb
(bad)
jge
sar
push
test
sbb
mov
into
mov
xor
pop
addr16
push
outs
pop
cld
and
mov
xchg
mov
aam
shl
push
pop
mov
mov
xor
add
stos
rcr
cmp
js
push
jno
mov
dec
shr
xlat
es
adc
xor
inc
ret
xchg
jb
aaa
adc
mov
push
(bad)
jge
mov
aaa
inc
in
out
mov
sub
jb
(bad)
push
dec
int3
or
test
inc
imul
pop
scas
sbb
and
sbb
test
adc
mov
push
mov
sub
(bad)
jp
mov
sub
push
push
fdiv
cmp
xchg
popa
pop
mov
push
not
pop
or
lods
not
sub
dec
xlat
mov
inc
cs
nop
jns
jge
xchg
sbb
aam
mov
mov
cdq
cwde
mov
sub
dec
call
mov
jne
(bad)
xchg
dec
dec
jge
int
ins
ret
push
mov
fadd
xchg
pushf
cmp
(bad)
push
dec
or
adc
pop
sub
aam
(bad)
fld
dec
push
mov
pop
push
cwde
mov
ret
adc
xor
cli
sbb
test
test
adc
test
sub
fisttp
mov
cmp
mov
in
loope
xchg
xchg
cmp
cmps
dec
fcomip
outs
ins
es
aaa
(bad)
jp
xchg
dec
mov
dec
cmp
cmp
aad
and
mov
fwait
or
push
in
and
jge
pop
mov
and
adc
sub
cdq
xor
dec
sub
sub
arpl
fisubr
shl
or
cmc
scas
xor
pop
inc
cmp
not
xor
fdivr
sar
(bad)
fisub
cdq
cmp
xchg
xor
cdq
adc
jno
outs
(bad)
push
push
es
ins
dec
cmps
out
xor
popa
repz
xor
fldcw
ss
xchg
call
and
cmp
pop
lea
mov
mov
sub
pop
mov
jecxz
jg
mov
cmps
daa
les
sbb
cmps
or
out
iret
xor
into
repz
fnstenv
rcr
mov
call
ret
push
jl
push
adc
daa
jbe
(bad)
mov
(bad)
rcr
fisttp
mov
push
add
fs
dec
pushf
out
sbb
fidivr
add
retf
arpl
and
cmp
lock
pop
test
jp
out
cmp
xor
cmps
sbb
add
cmp
add
fisttp
pop
stos
test
popf
aas
pop
push
cmp
sbb
xchg
hlt
or
out
div
aam
cdq
jo
aas
test
push
inc
lock
dec
xor
cdq
sbb
sub
lods
(bad)
stos
pop
pop
ficom
pop
(bad)
js
(bad)
mov
les
push
test
sbb
cwde
push
pop
and
dec
xor
inc
rcr
cmps
scas
mov
pop
pop
cmp
add
ret
and
stc
mov
aad
inc
lds
sub
mov
cmp
mov
xchg
shr
scas
push
cmp
fsubr
test
lods
xchg
dec
cwde
ret
sti
jg
(bad)
push
aaa
ret
sbb
retf
loop
pop
in
add
movs
retf
mov
add
xor
pop
xchg
inc
mov
xor
xchg
out
icebp
add
sar
outs
mov
xchg
loop
jg
xlat
fistp
cmps
das
sub
ja
ror
ja
std
jae
cwde
jae
xor
lods
add
arpl
daa
adc
les
or
sub
sbb
adc
inc
fldpi
repz
mov
add
jno
sub
mov
sbb
jbe
pop
push
pop
(bad)
shr
call
out
and
call
sbb
dec
cli
add
pop
pushf
mov
ret
cwde
sub
pushf
push
cld
pop
mov
jl
or
or
cdq
(bad)
imul
lods
push
inc
jl
jp
mov
cmps
xchg
cld
out
out
mov
(bad)
sbb
mov
lock
ret
(bad)
cmp
(bad)
mov
sbb
jnp
fldenv
shr
mov
fstp
ins
(bad)
je
xchg
(bad)
xlat
or
mov
cmps
ja
inc
inc
and
mov
cwde
fsubr
sar
push
sahf
xor
lds
dec
inc
jns
cmp
test
xchg
dec
inc
xchg
sbb
cmp
out
xchg
or
xchg
xor
out
fdiv
pushf
and
stc
mov
mov
jae
mov
test
sti
lods
ins
scas
out
lea
pop
pop
adc
mov
nop
adc
xchg
mov
or
cdq
in
push
mov
in
mov
cmps
ret
ficomp
add
push
sbb
call
and
add
sbb
cmp
movs
cmp
loop
hlt
sbb
xchg
mov
and
mov
sbb
xor
fwait
test
cmp
pop
sub
jnp
test
xchg
push
aad
xchg
das
aaa
cdq
call
ret
add
sub
push
push
mov
icebp
int
mov
sbb
mov
mov
shl
loopne
mov
out
dec
sbb
cli
sbb
popa
nop
jmp
xor
ror
xor
jnp
cmp
push
inc
push
(bad)
sub
cli
aam
push
cld
jecxz
or
in
jle
adc
out
leave
aaa
call
mov
arpl
mov
cli
xor
scas
pusha
in
pop
loopne
jg
xchg
mov
xchg
(bad)
ror
jnp
rol
int
shl
inc
push
lea
xor
(bad)
js
cmc
jmp
out
pop
test
mov
sbb
mov
mov
xchg
mov
int3
stos
in
sub
outs
mov
int
mov
retf
add
inc
daa
and
mov
pop
shl
fldenv
xchg
(bad)
inc
jmp
push
(bad)
and
push
ins
or
xor
jge
add
sub
jae
outs
push
xchg
jecxz
inc
pop
fld
jbe
inc
push
sub
cdq
movs
xchg
cmc
adc
loopne
ror
cmp
test
out
loop
inc
sub
jb
mov
pushf
adc
add
cmp
add
(bad)
pop
fcomp
and
push
and
js
lock
dec
mov
call
cmps
jne
gs
pop
pop
popa
lods
stos
popf
out
fbstp
loop
and
sbb
call
movs
ret
cmp
cwde
(bad)
adc
test
and
sbb
fst
and
mov
and
mov
addr16
jno
in
cmp
push
xchg
pop
ja
mov
and
pop
jp
pop
arpl
mov
dec
int
repz
clc
iret
push
push
push
add
xor
test
mov
jmp
inc
pop
mov
ja
add
sbb
scas
dec
mov
fs
shl
bound
fcomp
neg
mov
cmp
out
mov
jg
jmp
xor
mov
ds
lods
inc
(bad)
push
sbb
adc
push
or
dec
out
and
inc
cli
out
pushf
adc
xchg
int
sub
ds
mov
fdiv
cwde
sbb
or
jb
out
jb
mov
xchg
mov
ror
in
pop
out
mov
pop
aas
push
lods
sbb
(bad)
ins
sbb
shl
jmp
fs
sub
jmp
push
pop
mov
ins
cmp
ins
ret
retf
sbb
in
cmc
cmp
push
test
or
xor
jno
xor
cmp
movs
nop
jle
push
repz
push
mov
movs
mov
in
add
and
pop
push
sti
(bad)
fidivr
push
mov
popf
push
nop
pop
add
imul
jns
dec
dec
mov
sub
aam
lds
das
xchg
repz
add
lods
add
cmp
fadd
mov
lea
outs
scas
push
sbb
jb
push
xor
jno
dec
clc
cmp
leave
or
jle
sub
fsub
xor
rol
jns
daa
jl
push
xchg
das
test
sbb
xor
repz
je
inc
jle
jl
daa
dec
mov
idiv
jae
or
outs
pop
xchg
or
cmps
inc
loope
popf
pop
jmp
add
cs
dec
add
mov
imul
cdq
sbb
xor
cdq
xchg
je
inc
mov
mov
sbb
xor
mov
push
add
mov
fs
push
xor
fnstenv
pop
outs
outs
iret
cmps
push
retf
cmp
push
into
mov
movs
cmp
lea
jbe
fimul
test
mov
xchg
xchg
(bad)
mov
rcr
pop
je
fisttp
lods
inc
push
call
adc
cmp
jae
add
dec
xor
ficom
das
leave
mov
sbb
or
test
sahf
daa
scas
adc
xor
mov
dec
repnz
ins
div
stc
leave
adc
leave
(bad)
(bad)
mov
iret
rol
iret
adc
xchg
(bad)
call
add
fsubr
data16
and
rcl
pusha
cs
dec
mov
loopne
sub
mov
inc
jge
ins
pop
iret
inc
sti
mov
fcomip
clc
cmps
fwait
inc
repnz
jg
loop
or
xor
xchg
adc
pop
out
scas
les
xchg
inc
iret
pop
add
sub
push
data16
retf
xor
push
(bad)
hlt
inc
shl
not
inc
xchg
pop
xchg
mov
inc
inc
sub
arpl
add
mov
test
jns
dec
add
dec
outs
jmp
imul
and
dec
inc
jbe
dec
and
fistp
xor
mov
shl
mov
jb
outs
fild
test
ret
add
int3
mov
lock
sbb
or
pop
mov
jecxz
mov
jo
jns
stos
jl
dec
ret
leave
nop
je
ss
in
or
fld
into
push
sbb
in
movs
sub
mov
jp
imul
dec
mov
xchg
mov
pusha
mov
fwait
test
mov
lods
and
xlat
inc
or
in
sar
and
xor
pusha
ret
push
in
add
bound
test
ins
test
out
cwde
dec
jmp
jne
loop
ss
out
mov
out
xor
out
das
fnsave
or
pusha
xor
out
pop
mov
inc
icebp
mov
sahf
dec
aam
sbb
sti
out
popa
pop
cmp
les
call
lods
inc
or
ss
(bad)
cmp
jp
inc
add
cmp
push
aaa
xchg
outs
or
jo
rcl
cmp
test
mov
adc
dec
mov
dec
gs
out
iret
jmp
xor
ja
(bad)
mov
hlt
aas
pop
pop
arpl
test
pusha
call
adc
cmps
and
xor
aad
(bad)
pop
push
jo
into
sbb
(bad)
int3
xchg
std
add
(bad)
add
mov
dec
fcmovb
repnz
mov
aam
fimul
mov
(bad)
cmp
leave
inc
(bad)
mov
push
lods
mov
xor
push
sbb
cmp
mov
inc
add
mov
test
sub
in
mov
xor
int
shl
push
lahf
jle
pop
dec
bound
mov
push
(bad)
push
pop
sbb
into
std
mov
mov
add
jmp
daa
add
adc
jmp
ror
cmps
movs
jmp
popf
int
jle
adc
mov
xchg
jne
xor
leave
push
adc
jo
pop
int
xor
xchg
repz
sbb
mov
inc
or
imul
push
enter
stc
stos
xchg
cmps
test
xor
stc
pop
adc
stos
jmp
dec
gs
test
and
(bad)
in
jno
call
ret
outs
push
bound
mov
cmps
push
cmp
mov
in
jns
sub
lds
inc
sub
dec
cs
stos
ret
pop
cmps
mov
outs
test
ins
sti
es
pop
xor
push
inc
xor
lds
inc
sub
xor
nop
aaa
repz
jp
inc
jne
mov
xor
and
mov
scas
test
cmp
xchg
stc
and
pop
test
out
shr
call
scas
dec
lds
xchg
mov
and
rol
add
call
test
and
enter
lods
call
mov
out
mov
and
arpl
mov
movs
mov
sti
push
dec
sbb
adc
sahf
cs
mov
lods
mov
dec
fwait
push
mov
test
mov
adc
inc
cmp
xchg
sub
pop
std
mov
push
inc
inc
int3
mov
add
jecxz
scas
jmp
movs
movs
xchg
out
dec
add
loopne
lahf
fiadd
enter
pop
daa
xchg
inc
jg
ins
jne
mov
int3
pop
adc
fimul
xchg
mov
jae
jmp
rep
daa
mov
jbe
dec
(bad)
hlt
xchg
lock
pcmpeqw
fbstp
aas
test
mov
enter
jmp
fstp
adc
jnp
ret
test
cmp
dec
mov
xor
cld
mov
dec
sahf
push
push
sub
mov
push
mov
or
push
inc
nop
test
out
xchg
mov
or
push
repnz
bound
mov
sub
mov
cmp
inc
jno
xchg
mov
leave
imul
jge
test
mov
imul
pop
pop
dec
ds
enter
xor
mov
popa
dec
ret
out
cwde
pushf
push
mov
icebp
mov
imul
mov
dec
scas
xor
push
inc
push
jnp
retf
xor
cmp
aas
mov
es
pop
pop
or
and
repnz
lds
xchg
stos
sub
rcl
sbb
jl
pop
inc
adc
add
retf
lea
and
dec
enter
cmp
lds
jb
mov
dec
addr16
std
mov
mov
add
stc
stos
sahf
xchg
lods
inc
and
xchg
push
lods
lods
jmp
xchg
pusha
enter
out
add
sbb
lods
xchg
ds
xor
sar
fs
or
popf
inc
scas
pop
xor
adc
dec
imul
cli
and
mov
icebp
fldenv
add
jg
fmul
lahf
jge
shl
push
arpl
test
pop
xor
sub
or
sub
inc
das
mov
sbb
popf
mov
push
shr
leave
xchg
rol
add
xchg
mov
lods
fwait
jge
stos
jg
pop
cmps
arpl
add
or
sub
mov
rcr
inc
dec
and
ds
repz
push
loopne
cli
mov
cwde
fwait
xchg
mov
cdq
push
adc
loope
imul
mov
(bad)
mov
jl
pop
or
adc
jmp
inc
shl
fucom
les
popa
cld
push
shl
sbb
dec
jb
mov
iret
mov
es
dec
mov
mov
jb
cmc
add
push
jmp
jb
xor
pop
push
mov
mov
lea
sbb
aas
adc
mov
mov
xchg
jno
pop
add
push
pop
fist
lock
(bad)
sub
mov
mov
sub
adc
inc
not
sub
mov
xchg
movs
cdq
addr16
pop
fsubr
cmp
jbe
mov
loop
mov
das
xchg
fistp
in
test
repz
mov
adc
mov
xchg
popa
adc
mov
xor
and
inc
or
jmp
add
adc
lea
popa
and
je
or
aas
data16
je
cmp
and
(bad)
ins
pop
loop
lds
push
add
sbb
dec
into
dec
ret
imul
cmc
push
cmp
imul
cdq
aaa
cdq
fbld
stos
fadd
aas
std
pop
pop
cmp
push
je
test
mov
mov
jno
jns
jnp
pop
mov
jge
mov
enter
icebp
or
push
pop
mov
xor
leave
sub
scas
mov
dec
push
sar
clc
jbe
out
fisub
cmps
pop
mov
xor
xor
mov
inc
mov
xor
mov
dec
xlat
xchg
(bad)
xor
lea
push
push
sub
dec
les
sub
sub
loope
dec
add
mov
add
lods
sbb
add
and
xchg
sbb
push
jb
test
push
in
adc
dec
mov
mov
push
dec
jp
sti
push
and
jecxz
out
fmul
out
add
test
rol
out
cmps
nop
mov
mov
lahf
xchg
ins
enter
movs
push
add
push
mov
xor
add
sbb
push
aam
out
sar
bound
retf
ja
mov
dec
and
or
stos
imul
fs
or
mov
shl
sbb
dec
mov
into
lea
xor
jg
xchg
repnz
cmp
add
loope
xchg
mov
mov
cmps
pusha
test
into
fs
adc
xor
data16
and
clc
add
sub
mov
push
ja
push
lahf
jno
loope
shrd
loopne
int
mov
inc
test
push
movs
nop
pop
retf
dec
and
and
or
enter
or
daa
mov
mov
push
retf
imul
xchg
jmp
mov
retf
cs
jmp
cmp
mov
pop
inc
dec
or
lods
add
sbb
inc
mov
enter
jo
clc
add
movs
xchg
es
mov
cmp
aad
sbb
xor
pop
ss
lods
pop
std
dec
mov
cmps
shr
movs
ins
stos
or
and
xlat
push
jbe
and
sub
mov
cmp
mov
dec
mov
mov
mov
pop
and
mov
out
push
frstor
lods
add
dec
aad
(bad)
mov
jnp
mov
iret
icebp
outs
mov
test
dec
push
inc
cmp
pop
sbb
(bad)
out
test
ins
jl
jbe
pop
int3
iret
mov
mov
add
add
aam
and
ret
loop
(bad)
cmp
dec
jp
xchg
mov
imul
xchg
int
inc
jne
aam
xor
push
pop
adc
jno
ins
cmp
mov
int
pop
jp
or
jg
rcl
push
mov
sub
push
rcl
loopne
loopne
sub
int
repz
sub
jmp
in
ss
jp
dec
add
push
mov
sub
cli
dec
xchg
cmp
popa
cli
fs
cmp
jp
dec
aad
iret
fld
mov
mov
and
std
sahf
jne
xor
or
mov
add
(bad)
repnz
cmp
int
test
adc
sti
cmps
rol
mov
jp
ins
push
mov
add
sti
mov
fisubr
adc
mov
cmc
sahf
jle
add
stos
dec
pop
jge
sbb
mov
sbb
hlt
cdq
and
and
cld
out
xor
sbb
cmp
jmp
lods
mov
movs
dec
(bad)
aad
inc
mov
in
loop
and
std
mov
bound
and
sub
in
cli
hlt
fisubr
scas
vmread
cli
fmul
lods
imul
cmp
push
xor
or
push
imul
call
out
mov
stos
add
jnp
pop
repnz
aas
(bad)
cmp
adc
mov
mov
xor
in
adc
dec
int3
repz
arpl
jecxz
cld
push
call
dec
sub
jno
add
out
cld
out
jae
pop
sbb
loopne
mov
pop
adc
inc
jbe
das
iret
jno
mov
daa
test
sub
cmps
mov
rcr
test
cmp
mov
push
repz
fldl2e
adc
jnp
pop
xor
ret
push
pusha
in
nop
rol
sbb
push
xchg
inc
fimul
ret
mov
xchg
aad
fdivr
sub
inc
dec
and
int
xchg
addr16
loopne
jnp
fist
push
adc
add
test
cmp
xchg
movs
gs
cmp
xchg
jl
ret
aad
gs
lea
fs
fwait
loopne
adc
scas
fisubr
inc
clc
shl
mov
out
neg
pop
imul
outs
mov
mov
inc
sar
into
enter
outs
xor
dec
adc
outs
(bad)
sub
std
add
cmp
retf
sar
sub
add
arpl
xor
loopne
and
je
cld
cmp
and
icebp
call
unpckhps
xchg
(bad)
mov
repz
jle
ja
in
arpl
push
ins
mov
idiv
stc
inc
and
xchg
fisub
test
pop
pushw
mov
dec
jmp
call
xlat
pop
fnstsw
(bad)
icebp
(bad)
or
aad
mov
mov
mov
jge
rcr
push
fcomp
push
sti
rol
or
xor
mov
jne
sbb
aas
ret
sbb
cdq
and
jo
in
movs
call
or
adc
jp
sar
mov
cmp
cld
sub
jle
push
pop
gs
mov
loope
jl
pop
clc
jbe
fucomi
sbb
lds
fist
call
into
js
pop
adc
repnz
xor
push
add
push
or
test
(bad)
or
dec
jle
add
test
call
push
imul
xchg
cmp
cmp
out
sbb
cmps
sbb
aas
fistp
cmps
jo
mov
add
fstp
inc
mov
imul
cmp
iret
pop
inc
hlt
push
out
test
in
and
outs
push
sti
fdiv
xchg
sbb
out
ins
sbb
mov
mov
pop
dec
mov
add
xor
imul
sub
inc
pop
dec
add
add
cmp
sub
in
mov
mov
mov
push
pop
fisubr
xchg
xchg
loope
xchg
inc
sub
ins
sub
pop
mov
lock
mov
(bad)
jnp
adc
mul
mov
shl
pop
shr
test
push
aas
adc
and
sbb
sub
loop
and
sbb
sti
fld
dec
push
sub
int
pop
icebp
fcmovnu
cmps
sub
cmp
stc
pop
jmp
mov
call
cmp
fadd
jns
sbb
mov
arpl
pop
scas
cmp
dec
adc
jo
mov
push
call
bound
sahf
pop
cmp
add
sub
mov
(bad)
sub
int
leave
push
(bad)
fldenv
xchg
sub
sti
mov
jge
fcomp
test
cmp
mov
out
mov
xchg
cmps
pop
jns
movs
jp
out
mov
test
or
push
pop
push
stos
test
inc
mov
pop
hlt
(bad)
loopne
sub
dec
fld
xchg
jb
jmp
sub
push
ret
inc
push
xor
dec
xor
pop
inc
dec
out
mov
mov
js
add
test
ret
xor
push
mov
outs
push
pop
stos
or
cli
mov
jae
mov
imul
cmps
and
jb
(bad)
mov
fs
add
in
mov
adc
pop
es
or
inc
imul
inc
icebp
xchg
or
sub
shl
push
ss
pop
pop
dec
push
jge
addr16
sbb
push
mov
dec
ficomp
xchg
cmps
es
xlat
in
sub
mov
aas
xchg
into
add
xchg
cld
fsubr
inc
les
mov
mov
aad
in
jmp
jb
inc
inc
push
xchg
jg
cmps
sub
add
jbe
sub
mov
es
sub
mov
push
stos
cld
js
test
push
xchg
push
mov
push
aaa
jno
mov
xor
and
push
mov
dec
mov
xor
data16
mov
loopne
mov
dec
cmp
push
xchg
mov
push
and
data16
sbb
(bad)
pop
scas
aad
das
stos
mov
call
mov
push
and
mov
in
add
in
jmp
add
and
jecxz
loop
cmc
fisttp
and
push
cld
push
xchg
and
xchg
cs
cmp
inc
ja
mov
icebp
mov
pop
add
cmp
ins
(bad)
ins
jb
or
cmp
pop
outs
xchg
ss
jp
push
sub
scas
and
cld
push
or
jmp
mov
clc
jno
jmp
cs
inc
sbb
cli
pop
xchg
cmps
fst
pop
aas
adc
mov
or
jnp
int3
push
cmp
or
mul
scas
retf
arpl
mov
and
idiv
mov
ja
mov
movs
mov
js
ds
adc
fwait
lods
lods
outs
je
add
jnp
rol
pop
not
inc
pop
inc
mov
sub
push
mov
xor
sub
lock
xor
lods
push
das
push
fistp
imul
sbb
not
jg
sbb
jne
or
iret
and
push
mov
jp
test
fisttp
mov
test
inc
neg
add
sahf
jnp
fucom
pop
mov
jmp
and
adc
movs
imul
idiv
jg
ds
shl
es
pushf
adc
mov
inc
jo
or
mov
std
mov
pop
cmps
aas
mov
shl
leave
mov
lahf
fwait
cmp
aad
adc
sar
pop
adc
out
out
mov
or
push
sub
mov
mov
jle
bound
jle
rcr
fild
aaa
loop
in
xchg
push
xchg
cld
stos
push
fisub
jno
sbb
pop
jp
data16
sbb
xacquire
xchg
es
mov
adc
sbb
mov
neg
lea
aaa
pop
ret
push
sub
in
nop
adc
xor
movs
in
inc
xor
mov
(bad)
mov
jns
inc
adc
xchg
clc
bound
in
pop
cmps
cs
call
retf
xor
cmp
sbb
fsubr
jno
icebp
or
in
out
cwde
jns
jmp
xor
leave
add
xchg
or
and
ret
sub
jmp
fwait
leave
jmp
sbb
cmp
or
sub
and
out
cdq
xchg
mov
retf
ins
rcl
cli
jae
push
sbb
and
mov
stos
loopne
popf
push
or
sbb
div
sbb
dec
adc
or
jg
mov
cmp
div
(bad)
mov
jbe
or
adc
repz
push
cdq
aas
fwait
cmp
cmp
pop
push
push
xchg
add
test
push
cmp
in
mov
aas
jmp
mov
mov
sbb
jb
xchg
jmp
das
and
cwde
outs
dec
ss
cmp
(bad)
out
mov
mov
sbb
ret
adc
pop
push
aam
fst
call
dec
outs
push
fld
or
stc
sbb
sub
nop
shr
push
outs
imul
addr16
je
or
adc
mov
pushf
and
loopne
ds
popf
fisubr
add
or
fld
cmps
sub
adc
push
mov
sbb
dec
(bad)
push
lds
inc
inc
aaa
dec
cmps
add
bound
and
out
mov
pusha
fisttp
pop
fmul
iret
fld
(bad)
(bad)
sti
cmp
ss
cmp
pop
adc
inc
shl
jns
in
out
xchg
lds
push
pop
fld
mov
pop
daa
retf
mov
mov
mov
std
aaa
stc
mov
lods
dec
push
aaa
inc
gs
loope
xor
cmp
mov
adc
jge
in
stos
inc
inc
pop
inc
add
pavgb
xor
mov
jmp
xor
sub
jp
sub
push
gs
xor
(bad)
xor
icebp
ret
movs
cmp
cli
nop
push
sbb
icebp
dec
retf
ffree
aad
dec
mov
mov
ret
hlt
pusha
jns
adc
mov
cmp
sbb
xor
jnp
cmps
mov
dec
int3
sub
mov
in
aaa
push
push
cdq
dec
mov
fs
or
push
dec
(bad)
push
bound
js
in
ret
mov
leave
test
cdq
aad
pop
ret
adc
js
xchg
add
loopne
cmp
push
mov
cmp
mov
jmp
cmp
shl
hlt
jno
sbb
add
nop
out
jmp
movs
cmps
ins
in
pusha
retf
add
stos
push
cmp
int3
jle
jp
xchg
mov
data16
sbb
cmp
pusha
mov
mov
adc
addr16
mov
mov
aam
mov
xor
out
clc
mov
in
xchg
or
push
in
ret
push
and
inc
ror
xor
mov
pop
aas
cmc
idiv
pop
mov
adc
and
sar
int3
fiadd
xor
not
inc
fbstp
and
or
cdq
add
jmp
bound
in
cdq
(bad)
pop
sub
mov
and
fcom
jg
pop
icebp
jle
dec
xlat
lods
clc
push
popa
cmps
mov
clc
mov
mov
add
jmp
sub
add
push
or
and
addr16
sbb
xchg
arpl
mov
cmp
mov
mov
push
jne
jae
ret
mov
xchg
jge
adc
or
push
shl
and
outs
mov
hlt
mov
add
das
xlat
jg
sbb
xor
add
sub
mov
das
xor
inc
movs
rcl
imul
in
mov
clc
adc
adc
sbb
dec
pop
pushf
mov
push
sub
rcr
xor
outs
and
test
lock
adc
repnz
js
stos
fmul
cmp
jb
mov
aaa
into
xchg
jge
cmps
out
ins
(bad)
popf
mov
movs
pop
jge
sbb
cwde
pushf
loopne
neg
repz
mov
xchg
dec
rcl
jne
jp
inc
mov
outs
jmp
adc
repnz
(bad)
mov
(bad)
fdiv
pop
fwait
adc
loope
lods
in
push
sub
mov
mov
inc
aad
sbb
fisttp
inc
retf
lock
leave
push
sub
inc
mov
and
fwait
daa
loope
cmp
scas
fild
lds
loope
and
ret
stos
push
jno
xchg
ja
mov
mov
jl
test
mov
xchg
add
ss
shl
fcmovne
mov
and
hlt
jmp
lods
jmp
loopne
inc
inc
push
push
pop
rcr
pop
or
jmp
xor
mov
mov
test
ja
ficom
push
cs
shr
arpl
in
je
mov
pusha
adc
pusha
push
xchg
sub
xchg
(bad)
retf
cmp
in
sbb
cmp
cmc
inc
pusha
inc
fstp
or
ror
jmp
mov
mov
ret
jno
or
aad
retf
gs
add
ficomp
mov
addr16
jb
ja
scas
in
imul
push
cdq
stos
fs
add
xor
(bad)
aaa
cmp
popf
or
push
adc
fiadd
mov
cmp
aam
and
xchg
int3
inc
mov
pop
xor
repnz
pop
lahf
sbb
pop
mov
push
sbb
sahf
sbb
lea
or
push
xor
loopne
std
adc
mov
loopne
retf
out
xchg
or
add
adc
mov
cmps
pushf
mov
mov
add
sbb
pop
ss
leave
sbb
dec
inc
cmp
sub
mov
inc
inc
jg
out
loope
aaa
mov
out
retf
into
mov
sahf
mov
xor
pop
loope
pusha
lock
inc
(bad)
nop
repnz
sub
stos
push
sub
retf
mov
jne
out
cmps
push
fnstenv
hlt
lods
(bad)
cli
dec
popf
popf
cdq
(bad)
pop
or
mov
in
idiv
and
cmc
scas
sbb
cdq
mov
repnz
mov
jmp
out
enter
and
neg
or
jge
add
out
add
into
add
mov
in
(bad)
aas
ret
(bad)
sbb
fcmove
or
pusha
inc
rcr
push
xor
inc
xchg
xchg
mov
lahf
mov
mov
(bad)
jbe
mov
shl
jle
pop
push
mov
adc
sbb
nop
jb
xor
dec
loopne
int
paddsw
rcr
xchg
dec
cmps
ins
popf
inc
fdiv
ins
push
cmp
dec
enter
mov
(bad)
cmc
ds
daa
sub
cmps
push
adc
call
jge
push
sbb
dec
stos
push
xor
jp
fwait
mov
push
out
xor
sub
inc
jle
cmp
add
and
das
adc
push
mov
jae
and
outs
xor
dec
or
mov
in
sahf
and
gs
repnz
push
pop
ins
push
enter
test
movs
aam
mov
jmp
test
test
(bad)
scas
jecxz
ret
push
call
and
cs
mov
stos
add
dec
(bad)
in
pop
adc
cdq
mov
je
repnz
jmp
cdq
dec
outs
imul
sar
sbb
cmp
call
call
jg
out
dec
retf
cmp
cmc
push
test
push
dec
sub
jl
jnp
pop
dec
xlat
mov
mov
adc
cmp
and
test
imul
xchg
mov
imul
lods
add
adc
inc
jmp
xchg
or
dec
push
adc
clc
fisttp
mov
sbb
pop
fwait
dec
and
jmp
test
and
push
ja
repnz
mov
loope
xor
xchg
fxch
cmc
icebp
adc
xchg
adc
xor
xchg
cdq
mov
data16
movs
das
xchg
push
mov
cmp
loop
gs
out
test
sbb
push
xchg
push
dec
aas
push
(bad)
hlt
cmp
out
imul
cmp
add
jmp
sbb
test
xor
jg
or
outs
inc
jb
mov
sbb
or
add
ja
loope
and
ss
cmp
out
and
mov
sbb
loope
jmp
and
dec
xchg
mov
fdiv
out
bound
mov
call
dec
int
sbb
inc
call
fs
arpl
test
mov
jb
add
and
js
push
sbb
adc
pop
psrlq
mov
mov
jmp
repnz
cmp
ror
cmp
movs
les
pop
(bad)
or
mov
jle
clc
test
dec
add
and
mov
dec
add
scas
jns
cmc
jge
push
fisttp
lock
mov
cwde
add
dec
ins
fcomip
pop
jg
xor
sub
mov
mul
(bad)
jmp
fisttp
push
jo
and
and
ficom
and
movs
sbb
pop
movs
sti
cmp
fisttp
in
je
pop
neg
loopne
bound
iret
jb
dec
call
icebp
std
popa
bound
out
mov
pop
push
lods
sub
cdq
sub
adc
int3
hlt
pop
popa
cs
push
mov
fcmovnbe
cmp
jmp
or
ja
adc
dec
sahf
add
dec
mov
xchg
int3
mov
lods
jg
repnz
shl
(bad)
sub
mov
aas
push
mov
in
push
mov
xor
sbb
dec
xchg
pop
iret
inc
je
adc
ins
mov
out
mov
loopne
test
cld
(bad)
jmp
ret
sbb
pop
retf
mov
stos
stos
lock
ins
aas
in
stos
adc
enter
mov
ss
mov
call
or
shl
inc
enter
(bad)
mov
jmp
mov
out
sub
(bad)
aam
es
ret
sub
pop
ss
fstp
cmp
dec
sbb
(bad)
or
push
sub
and
push
sar
push
pop
sub
push
mov
cmps
jg
mov
push
test
dec
pop
adc
cvtdq2ps
clc
out
jle
fdivr
loop
pushf
lods
push
rcr
rcr
adc
xchg
pop
sub
scas
pop
push
iret
xor
mov
dec
ja
adc
xchg
(bad)
jg
or
dec
sub
jl
and
inc
cli
fldcw
cmp
out
retf
icebp
hlt
mov
adc
call
sbb
ret
movs
lds
mov
fwait
inc
mov
clc
ins
pop
add
push
add
xor
data16
(bad)
out
jmp
cdq
nop
sub
ss
sub
dec
fwait
call
popa
dec
mov
out
mov
mov
adc
imul
pusha
add
and
lahf
fwait
pushf
mov
dec
and
ins
push
mov
or
and
cmp
imul
jl
retf
mov
jecxz
sbb
dec
add
(bad)
xor
add
clc
pop
bt
push
mov
adc
fiadd
movs
mov
xor
pop
xchg
ror
xchg
jnp
add
icebp
pusha
mov
jno
ret
mov
xchg
mov
jne
sbb
adc
xchg
movs
fiadd
pop
jns
sub
(bad)
out
or
adc
and
jnp
or
popf
mov
out
mov
enter
add
mov
icebp
movs
push
and
mov
mov
int
aas
jbe
int
fcomi
jne
(bad)
lahf
enter
pop
jns
mov
cmp
xchg
scas
mov
pop
xchg
pop
add
xchg
pop
adc
pop
test
dec
test
jg
xchg
das
xchg
cmp
jbe
jp
xchg
xor
das
push
lahf
and
cmps
outs
not
sub
std
sub
jno
fcmovne
pop
aas
dec
add
push
xchg
sbb
push
jbe
mov
pop
cmp
dec
mov
das
in
iret
sub
pop
xchg
pop
dec
dec
in
data16
das
repz
sti
lods
adc
xor
or
dec
pop
leave
jno
ins
cld
xor
push
(bad)
pop
stc
std
dec
push
mov
dec
inc
add
fnstsw
loop
jl
popa
mov
fbstp
xchg
cmps
xlat
dec
xchg
cli
sub
xchg
pop
pop
inc
jmp
ret
scas
dec
sar
popa
cdq
fimul
xor
pop
sbb
loopne
scas
inc
cmp
mov
mov
mov
out
cmp
lea
icebp
int3
xchg
dec
lods
pop
and
inc
out
out
popa
lock
mov
push
jp
shl
sub
inc
sub
inc
cld
or
in
mov
lea
imul
mov
je
cwde
fcom
mov
ret
xor
pop
or
fwait
stos
or
leave
fneni(8087
aad
gs
out
dec
in
cmps
xchg
jmp
pushf
scas
pop
or
sub
into
mov
scas
imul
bound
mov
adc
out
addr16
(bad)
out
ret
pusha
mov
pop
inc
xchg
xlat
pop
test
in
sub
cld
or
pop
lods
jae
sbb
icebp
rcr
in
cs
xor
cmp
fld
ret
inc
(bad)
mov
and
pop
loope
add
jmp
mov
sub
lahf
repnz
mov
dec
in
into
hlt
mov
nop
pop
fild
xor
icebp
call
enter
fimul
bound
aas
push
cmp
icebp
mov
(bad)
xor
jbe
push
jne
cmp
cmps
clc
jno
popf
repnz
data16
js
fsubp
cs
push
mov
push
push
mov
or
mov
jmp
jb
in
pop
out
outs
pop
fist
movs
dec
pop
xchg
stc
ret
mov
cli
std
(bad)
out
pop
dec
stos
inc
xchg
jle
(bad)
and
inc
inc
jecxz
leave
jbe
mov
sahf
inc
push
push
push
mov
pop
adc
sbb
sbb
sub
cmc
xor
into
addr16
xchg
and
ins
repnz
shl
xchg
retf
lds
pop
rcr
sahf
adc
stos
cmc
mov
sbb
scas
dec
mov
adc
cmc
inc
xchg
add
int3
aas
xor
icebp
xchg
mov
sub
(bad)
inc
sbb
fld
cs
xchg
fld
dec
jbe
out
push
mov
push
mov
jae
add
(bad)
push
ds
sub
or
repz
sbb
xor
(bad)
gs
test
add
jo
xor
mov
mov
leave
neg
sub
adc
inc
mov
out
sahf
pop
stos
mov
addr16
clc
jns
sbb
call
xchg
mov
test
push
ror
sub
je
mov
out
daa
jne
mov
dec
(bad)
push
popf
xchg
lahf
inc
sbb
inc
push
inc
movs
(bad)
imul
ins
xor
ret
dec
mov
cmps
xchg
pop
int3
clc
or
fsub
aas
(bad)
fimul
pxor
pop
js
mov
in
adc
or
xor
stos
adc
xchg
sbb
or
pop
scas
in
lock
std
cli
add
jae
and
cld
call
adc
out
(bad)
imul
aad
cmp
bound
mov
dec
jl
jle
cmp
mul
pop
out
rol
sub
pushf
inc
stos
not
repz
sub
push
inc
retf
adc
xchg
inc
iret
aas
jne
sti
xlat
addr16
mov
jae
cmps
out
js
and
mov
add
(bad)
sub
or
cdq
sbb
sub
int
std
call
cli
sbb
lods
push
sbb
mov
pop
(bad)
mov
shl
out
fisubr
(bad)
in
dec
mov
ficom
dec
and
fcomip
(bad)
ror
jmp
mov
adc
es
in
cmp
test
lods
and
push
movsx
(bad)
cmp
aas
das
mov
mov
sbb
jge
lods
sahf
and
leave
ja
loope
les
fild
mov
into
lea
sub
push
jmp
pushf
outs
jnp
sbb
inc
stc
ror
mov
sub
sub
adc
jge
(bad)
lea
mov
ror
in
aas
in
dec
mov
dec
push
jae
sbb
adc
sub
cld
cmp
das
out
iret
xor
mov
pop
push
xlat
outs
push
pop
ds
and
lea
cmps
int
adc
cdq
sub
cld
mov
xor
mov
pop
mul
fsub
(bad)
push
mov
sbb
fisttp
das
ins
pop
nop
pop
pop
mov
mov
jp
cld
or
sub
sbb
or
push
jmp
dec
and
xor
jbe
sub
xchg
pop
iret
push
push
cmp
cmp
mov
mov
xor
cmps
jnp
mov
mov
and
or
pop
in
jmp
and
aam
scas
retf
lea
push
sub
push
(bad)
mov
adc
ficom
adc
jno
aaa
push
repz
cmp
lods
scas
inc
(bad)
(bad)
push
hlt
dec
jne
sbb
popa
pop
push
fimul
adc
daa
pusha
sbb
(bad)
sbb
xor
pop
clc
add
out
rcr
fwait
das
fsubrp
sub
push
gs
ror
stos
xchg
xchg
leave
mov
inc
test
mov
sahf
aas
(bad)
inc
in
fisttp
paddusw
pop
pop
test
addr16
mov
in
jl
cmps
stc
sahf
adc
jmp
adc
fistp
test
mov
dec
sub
jle
(bad)
ret
dec
cmp
sub
mov
aad
mov
lods
xor
jge
cs
sub
xor
push
repz
setb
mov
daa
ret
inc
ror
mov
retf
cmp
push
pop
cld
stos
xchg
dec
jp
dec
adc
sbb
dec
xor
mov
or
xor
stc
pop
(bad)
fiadd
push
popf
ret
cs
push
call
pop
mov
(bad)
pop
mov
aam
inc
and
ret
scas
dec
push
inc
push
jbe
nop
ja
and
rcr
popf
cmp
xchg
iret
xchg
mov
aad
or
loop
or
call
test
in
sbb
pop
stc
stos
nop
inc
xor
imul
jno
mov
sar
jge
dec
js
or
pop
mov
scas
xchg
rol
cmp
or
out
and
cmps
sub
push
pushf
ret
dec
mov
jne
or
leave
jo
cmps
jg
ins
les
xchg
jg
adc
das
mov
sbb
push
(bad)
mov
jecxz
test
repz
sub
pop
or
push
pop
add
mov
or
inc
jl
shl
out
jg
fstp
pop
jmp
aas
dec
daa
retf
test
into
mov
xchg
sbb
scas
call
cmps
jge
jo
out
sub
xchg
xchg
out
ss
push
or
addr16
mov
outs
in
inc
lods
mov
and
test
push
jp
call
mov
pop
into
push
jno
pop
in
or
fdiv
mov
jbe
and
pop
sbb
out
mov
(bad)
retf
push
inc
ret
xor
pop
(bad)
nop
fiadd
pop
lds
mov
rcl
stos
add
mov
xlat
movs
fbstp
sahf
cld
cmp
out
sar
and
ror
lds
jno
jle
add
mov
xor
dec
arpl
mov
adc
cmp
bound
mov
push
lahf
adc
pop
push
jb
lea
or
cmps
mov
jne
aad
jno
cmc
bound
cmp
js
dec
sbb
mov
and
in
xchg
int
cdq
xchg
mov
mov
stos
jp
mov
sub
aaa
pop
fiadd
xchg
test
or
xchg
xor
in
addr16
jp
dec
mov
inc
mov
fwait
in
jmp
in
icebp
sbb
div
movs
ins
mov
and
in
pop
add
or
cmps
std
mov
add
add
mov
dec
pop
imul
fwait
and
pop
mov
xchg
jmp
out
nop
fs
cmps
ds
jae
out
xor
test
lock
fnstenv
lods
out
xchg
test
pop
cs
add
sti
ret
mov
sbb
push
push
xchg
adc
cmp
sbb
push
jmp
imul
hlt
sahf
in
outs
ja
ret
out
fisub
dec
sub
aaa
xchg
mov
mov
sbb
push
sar
neg
nop
(bad)
(bad)
xchg
cmp
retf
push
add
lods
jne
lods
inc
xchg
aad
pop
pop
sbb
push
stos
les
adc
outs
adc
aaa
sub
retf
jnp
inc
stc
ss
push
icebp
cmc
mov
sti
cdq
outs
test
in
add
daa
outs
jge
mov
inc
ins
push
in
fiadd
scas
repz
and
adc
xchg
in
mov
dec
sbb
retf
rol
ins
jmp
mov
mov
movs
dec
dec
retf
push
push
cwde
sub
jge
ss
mov
xchg
or
push
je
loop
cdq
clc
sbb
add
(bad)
jno
xchg
lea
mov
jne
pop
fist
jg
mov
fbstp
addr16
loop
in
sar
and
lahf
fnstsw
xchg
push
dec
inc
nop
and
xchg
test
cmp
dec
mov
hlt
sti
test
cmp
aas
push
out
push
jbe
cli
push
ss
int3
dec
adc
add
dec
jb
mov
stc
sbb
add
rcl
xlat
pop
xor
pop
dec
(bad)
xchg
xchg
sub
mov
ins
out
stos
(bad)
jmp
cmp
enter
cmp
lods
jbe
loopne
mov
imul
push
call
adc
je
cli
and
adc
cmps
repnz
and
mov
pop
jp
retf
call
inc
push
sub
scas
and
test
jmp
cld
pop
mov
pop
cli
cwde
in
and
cmp
icebp
xor
(bad)
aaa
mov
or
jmp
mov
mov
dec
movs
aas
jl
jmp
aas
or
cmp
and
stos
inc
shl
je
push
sbb
ss
dec
mov
or
dec
pop
mov
pop
adc
ja
lea
jge
dec
push
mov
mov
out
push
xchg
das
pushf
addr16
jge
mov
js
aad
xchg
icebp
test
fld
inc
inc
add
in
mov
push
in
es
cmp
or
scas
sbb
mov
out
outs
repz
mov
ins
stc
or
test
sub
fwait
sub
ins
ss
pushf
and
add
xor
int
jl
adc
lahf
add
test
or
stos
pop
and
and
jns
test
xor
inc
lods
sbb
push
mov
sub
fild
loopne
jnp
inc
push
dec
dec
iret
sub
xchg
test
imul
iret
inc
scas
jns
(bad)
idiv
and
add
push
retf
sub
mov
sbb
inc
(bad)
retf
lahf
xor
idiv
dec
push
jmp
mov
mov
jno
out
and
(bad)
push
call
xchg
ins
xchg
jnp
or
xor
dec
mov
jae
(bad)
mov
and
(bad)
test
jae
jecxz
fiadd
mov
gs
fistp
push
cmp
jns
mov
out
and
fs
inc
adc
dec
push
inc
cdq
mov
es
mov
xchg
xchg
mov
jns
dec
cmp
clc
pop
addr16
call
loope
cld
test
retf
jle
pop
sbb
loope
adc
std
and
icebp
popaw
gs
push
pop
stos
nop
mov
inc
mov
jbe
popf
test
and
jle
and
out
aaa
paddsw
aam
fisub
dec
mov
dec
push
cmc
adc
int
xor
test
sti
and
std
popa
(bad)
pop
lods
js
call
xchg
pop
sti
mov
and
inc
shl
hlt
inc
out
(bad)
data16
call
into
xchg
mov
push
out
mov
jae
shl
mov
xor
mov
pusha
cdq
cmp
add
in
mov
(bad)
xchg
bound
inc
imul
adc
mov
jmp
aas
nop
dec
mov
cmp
mov
jmp
xchg
fcomp
sahf
push
push
fild
push
adc
or
dec
(bad)
and
jo
mov
sbb
inc
sub
pop
pop
call
and
(bad)
and
cdq
aad
aam
bound
int
adc
psubd
sbb
push
pop
xchg
ins
movs
arpl
mov
jnp
and
xor
xchg
push
cmp
pop
leave
scas
jecxz
pop
sub
outs
stos
cmp
das
sbb
lds
jmp
or
adc
in
inc
xchg
mov
ins
das
popf
sbb
and
xchg
sbb
leave
cwde
mov
cmc
push
jp
mov
popa
ds
or
jl
enter
aad
xchg
lea
mov
ins
in
test
(bad)
mov
push
and
lods
push
sub
jne
cmp
xor
or
mov
push
pusha
into
imul
push
pop
jmp
jl
push
pop
aam
dec
and
fmul
adc
movs
call
cmp
icebp
mov
pop
(bad)
shl
inc
pop
das
add
add
and
mov
and
sbb
cmc
jl
sti
lods
mov
push
(bad)
int3
mov
cs
or
sbb
aas
(bad)
fiadd
aam
push
sub
in
xchg
fild
ret
gs
pushf
ret
add
add
xchg
pop
sub
inc
aad
lahf
inc
adc
ret
sub
dec
lods
xor
mov
jge
stc
push
push
fs
xchg
xchg
jnp
adc
repz
jmp
mov
mov
jle
retf
or
xor
aaa
data16
loop
xor
lock
lock
mov
push
mov
outs
jge
xchg
dec
scas
dec
xchg
fst
lods
movs
enter
sub
ins
or
and
mov
in
ds
push
bound
sub
add
adc
cwde
cld
popf
jmp
sbb
lea
mov
jecxz
or
sar
ds
test
push
xor
push
shl
and
push
inc
or
mov
in
sahf
js
mov
test
xor
or
mov
cld
and
jp
inc
jp
or
mov
cmp
out
pop
(bad)
mov
dec
stos
sub
popa
push
movs
pusha
or
test
mov
dec
loopne
ret
ins
add
lahf
movs
jmp
lock
mov
js
pop
into
stc
daa
cmp
mov
pop
add
ins
(bad)
pop
retf
dec
imul
mov
outs
loopne
cmp
cdq
icebp
jnp
int3
inc
in
dec
mov
or
add
mov
fidiv
sahf
nop
mov
repz
retf
xor
loop
es
test
sahf
shl
lahf
mov
inc
push
cdq
pusha
jne
and
mov
mov
in
and
imul
scas
inc
dec
adc
test
fcomip
movs
call
jns
fnstcw
jno
dec
cmps
dec
adc
daa
icebp
stos
movs
scas
std
and
loope
mov
ret
push
pop
icebp
shl
scas
aaa
and
retf
pop
sub
mov
ds
test
cmps
mov
mov
mov
and
fs
stos
push
ins
sti
or
mov
push
mov
inc
gs
loop
cdq
jae
jns
mov
push
dec
inc
pop
fstp
or
push
data16
inc
js
sub
inc
nop
pop
add
mov
xor
cmp
sub
pop
mov
js
fcomp
fsub
jb
iret
call
jecxz
push
cmps
jae
scas
mov
push
sub
sti
cdq
mov
push
sbb
and
jecxz
sbb
push
jecxz
add
jge
jnp
add
(bad)
add
stos
mov
jbe
fistp
in
mov
lods
(bad)
and
push
inc
jecxz
xlat
loopne
outs
sbb
mov
cmp
es
or
les
rcl
lods
aas
xchg
push
mov
jge
mov
add
rol
jmp
mov
sub
sub
jp
iret
ds
(bad)
fcom
mov
inc
inc
cld
mov
das
jo
paddusw
(bad)
mov
hlt
out
mov
push
lds
fwait
inc
adc
inc
and
xor
addr16
adc
xchg
shr
repz
xchg
fwait
xchg
jle
mov
movs
push
adc
jmp
rol
dec
xor
inc
fist
lods
mov
inc
cld
loopne
call
inc
xchg
pop
mov
imul
cmp
(bad)
push
sub
sbb
and
jl
push
in
pop
arpl
jge
es
sbb
mov
pop
rcr
ret
jecxz
ss
pop
sbb
in
adc
xchg
jl
sbb
mov
arpl
push
mov
pop
pop
adc
cmp
shr
imul
jb
mov
sbb
sahf
add
adc
push
cwde
jle
jmp
pop
(bad)
mov
xor
icebp
inc
outs
pop
or
or
icebp
jmp
loopne
mov
ret
(bad)
(bad)
jle
in
jmp
imul
mov
jle
xor
inc
test
ss
(bad)
dec
fist
jge
inc
sbb
fstp
mov
js
mov
pcmpgtw
call
and
outs
cmps
push
test
imul
mov
and
xchg
push
or
enter
dec
aaa
rol
aas
jp
mov
arpl
ret
clc
push
dec
pushf
inc
xchg
lds
xor
and
and
xchg
cmp
sbb
leave
adc
leave
sbb
ror
or
adc
mov
jno
lods
sti
cld
sub
adc
push
pop
daa
jg
(bad)
xor
lock
fidivr
dec
idiv
mov
push
test
rcl
xlat
and
fidiv
xchg
mov
add
in
xor
cmc
sti
mov
neg
and
jp
iret
xchg
frstor
sahf
push
sub
jnp
test
mov
cld
add
mov
test
or
repnz
mov
inc
xor
or
shl
mov
pop
call
cmps
jo
addr16
lods
cmp
outs
and
xchg
add
fild
out
sub
rcl
mov
mov
mov
in
pop
movs
test
out
push
out
push
ins
sti
out
xchg
dec
pop
ror
pop
xchg
int
inc
(bad)
aam
adc
shr
lods
lahf
sbb
mov
adc
inc
mov
cs
inc
mov
enter
popf
and
popf
cmps
cwde
fneni(8087
push
int3
test
mov
out
fnstenv
pop
shl
stos
add
and
jno
pop
in
add
rol
and
inc
jecxz
sbb
pop
in
pop
ja
out
xor
cmps
jle
outs
call
out
cs
pushf
das
push
loope
push
push
jp
loopne
sub
sti
xor
mov
lock
jle
pop
inc
repz
sub
adc
ret
imul
int
jae
xchg
push
stos
rol
loop
cli
pushf
call
mov
and
cmp
in
pop
push
movs
add
in
sahf
cdq
aas
in
sbb
sub
leave
jne
mov
fist
mov
sbb
mov
addr16
shl
add
cmc
add
and
push
mul
sti
xchg
pop
ds
es
pop
nop
jge
push
shl
xchg
cmp
pushf
pop
cmp
(bad)
loope
cmp
mov
call
or
or
cmps
cmc
mov
mov
data16
inc
imul
clc
inc
adc
fnstenv
xor
call
not
mov
pop
jecxz
ja
lock
jge
imul
dec
out
repz
ret
and
sub
daa
xchg
ja
lods
sbb
push
cmps
jae
and
push
cs
pusha
inc
mov
push
cdq
popa
sbb
dec
repnz
push
mov
mov
inc
mov
int3
test
add
xchg
outs
inc
inc
jp
lods
pushf
inc
mov
xor
stos
inc
sbb
xchg
push
and
addr16
stc
imul
and
fcom
(bad)
add
loopne
iret
pop
int
ret
cmps
xchg
(bad)
ss
nop
dec
adc
cmps
call
sbb
jnp
cmp
sbb
pop
pop
jnp
je
call
scas
das
movs
ffreep
mov
and
ja
push
jbe
movs
pop
pushf
stos
loop
out
cmp
fdiv
in
popf
out
or
test
mov
xchg
add
mov
add
jmp
pop
sub
mov
loope
xor
clc
(bad)
mov
test
test
bound
bound
or
or
inc
sub
sub
mov
mov
fld
inc
cmp
in
and
dec
jl
ror
or
xor
outs
push
test
mov
jo
mov
adc
cli
dec
cmp
mov
xlat
sbb
loop
jmp
loopne
not
pop
xor
jae
cld
inc
or
arpl
cmp
mov
imul
fsubr
test
cdq
pop
xchg
fwait
add
xchg
(bad)
dec
test
jne
mov
movs
adc
adc
xor
inc
pop
pop
je
dec
or
fst
sub
push
mov
push
push
push
std
retf
arpl
xchg
les
out
hlt
cmp
xor
xor
mov
(bad)
pushf
std
mov
pusha
bound
sbb
sub
push
fxam
jmp
mov
inc
xchg
dec
mov
fs
push
out
rcr
movs
into
scas
ins
lods
mov
mov
loop
retf
add
ret
push
(bad)
aaa
mov
retf
fcomp
das
mov
aam
in
mov
call
push
push
mov
jp
bnd
dec
jb
adc
ins
xchg
cld
into
les
sub
std
repnz
sbb
jg
xchg
adc
daa
dec
mov
sar
mov
xor
sub
lods
xchg
fmul
ret
idiv
xchg
in
or
mov
push
xor
cmp
in
hlt
jb
rcl
inc
(bad)
aas
push
shl
dec
popa
pop
and
mov
inc
lahf
push
jns
aas
nop
inc
xchg
mov
stos
call
or
cmp
stc
lock
repz
popa
popf
fisttp
mov
shl
fsub
(bad)
sar
mov
sbb
adc
cmp
inc
cdq
aad
ds
mov
es
xchg
push
cmp
in
xchg
pop
sbb
or
mov
call
call
fmulp
fbld
outs
call
cmp
pop
test
lods
push
mov
(bad)
pop
(bad)
cs
pop
jb
mov
dec
sub
push
pop
adc
test
jne
push
lea
adc
jecxz
dec
fs
bndldx
hlt
xor
and
cmps
dec
pop
(bad)
ins
pop
out
rcl
(bad)
add
fsub
dec
jecxz
jne
scas
dec
jae
mov
(bad)
sbb
jmp
stos
mov
ror
loop
int
stos
xor
retf
push
sub
loop
ret
lods
inc
mov
pop
and
fld
mov
jecxz
movs
or
pop
aas
inc
sbb
ficomp
cs
(bad)
stc
xchg
and
cwde
les
test
xor
shl
popf
sbb
out
sbb
iret
and
cmps
jge
sub
cmp
outs
icebp
test
and
cli
retf
iret
mov
mul
call
jmp
and
ret
mul
and
xor
dec
dec
or
adc
add
std
int3
out
push
inc
ds
ror
jecxz
and
loope
jmp
push
cmp
ror
sbb
popa
push
mov
cmp
pop
pop
in
test
stc
jb
(bad)
ffree
inc
(bad)
or
lods
jb
shl
into
jb
cmp
mov
in
lahf
push
btr
and
cdq
pop
enter
std
in
mov
(bad)
xchg
pop
stc
les
ret
mov
mov
int3
mov
out
push
movs
lock
adc
mov
xchg
retf
adc
and
adc
push
imul
or
sbb
add
jno
mov
or
or
aaa
cwde
shl
popa
xor
xor
hlt
out
mov
test
push
xchg
dec
call
xchg
sub
and
adc
or
sub
outs
imul
mul
xor
sahf
cmp
xor
ins
cmp
pop
mov
test
fstp
std
mov
dec
cmp
mov
jb
sbb
aaa
cdq
pop
push
push
jp
mov
xchg
or
inc
inc
jns
cdq
cli
mov
aas
pinsrw
movs
add
or
pop
cmp
aam
movs
inc
and
stos
mov
xor
inc
cmps
pop
sti
shl
idiv
dec
js
dec
ror
mov
mov
add
pop
jle
rcr
sub
push
cwde
inc
sub
pop
xor
je
out
test
ror
out
test
cmp
mov
jp
int3
push
retf
pop
rcl
jecxz
jae
pop
das
icebp
mov
out
sub
stc
test
xchg
dec
and
aam
in
lods
or
ret
pop
add
je
mov
inc
sbb
leave
test
xchg
and
loopne
and
xchg
cmp
cmps
das
mov
dec
adc
inc
jmp
cmc
or
fisubr
sar
push
mov
xor
icebp
loope
ins
fucom
mov
fiadd
mov
repz
inc
rcr
and
outs
fsubr
shl
jns
add
pop
mov
pop
out
in
mov
mov
test
and
xchg
inc
retf
test
jmp
out
and
xchg
call
pop
dec
pushf
fs
or
mov
dec
daa
and
xchg
test
mov
push
cld
mov
sub
mov
adc
je
pop
sbb
push
mov
push
inc
fstp
adc
adc
pop
or
aam
in
ret
inc
jg
xchg
sbb
jb
loop
mov
aad
icebp
jnp
inc
cmp
inc
jns
nop
arpl
stc
leave
fisttp
dec
(bad)
inc
add
pop
dec
loop
xlat
and
popa
xor
pushf
rcl
xchg
xchg
aaa
mov
stos
sub
call
jae
mov
jbe
adc
or
inc
push
push
ja
sar
sbb
xchg
pop
cmp
dec
fwait
repz
or
into
or
aam
ror
stos
cmc
mov
es
xchg
ror
mov
dec
and
pop
sar
mul
push
push
sub
mov
shl
out
mov
int
ficomp
add
inc
jb
or
popa
mov
jnp
repnz
cmp
daa
jae
(bad)
sbb
sub
(bad)
and
div
mov
jp
inc
or
jae
push
sub
sub
ins
das
jae
shr
cmp
iret
int
sbb
test
outs
(bad)
xlat
push
aam
pop
sbb
adc
aad
sub
mov
(bad)
and
gs
(bad)
out
ret
enter
test
pop
push
inc
jno
repnz
lds
and
mov
retw
sbb
jo
test
or
jge
xchg
les
scas
cs
adc
lds
pusha
mov
mov
sbb
and
mov
mov
imul
jae
mov
imul
mov
movs
add
cmps
mov
pushf
out
(bad)
fsubr
mov
cmps
std
mov
scas
lock
dec
sahf
add
pop
imul
shl
xor
pop
(bad)
and
sar
movs
pop
popf
cld
ror
int3
repnz
ret
sbb
jb
leave
retf
push
cmp
sqrtps
fwait
and
lock
ins
push
jo
or
inc
mov
dec
jns
sbb
int
mov
xor
aaa
vmovhpd
push
fwait
inc
pop
ss
pop
dec
cmp
cmp
or
ins
adc
dec
repz
in
loopne
sbb
xchg
retf
cs
mov
call
fpatan
pop
jns
arpl
jmp
fdivr
bound
inc
jb
pop
xchg
out
retf
inc
(bad)
in
sub
in
adc
ss
cld
xor
pop
xchg
dec
dec
iret
mov
pop
ins
pop
test
movs
push
movs
lea
push
add
es
bound
mov
and
je
(bad)
inc
or
cld
and
push
cmp
(bad)
sti
cmc
sahf
cmp
xchg
in
pop
inc
ret
jbe
lahf
mov
les
js
out
rcl
add
(bad)
fisub
xchg
mov
jmp
cmp
pop
jo
scas
mov
(bad)
outs
bound
pop
push
xchg
dec
rcr
sub
sti
sbb
test
pop
call
int
out
test
stc
xor
inc
pop
ret
jmp
movs
sbb
leave
jae
iret
xchg
fdiv
in
movs
leave
shl
repz
out
daa
dec
cmp
mov
iretw
sbb
jne
push
imul
jnp
adc
test
dec
mov
in
into
pop
ss
push
or
int
stos
mov
repnz
sub
test
push
int
jle
loopne
sbb
sub
pop
pop
cmp
and
inc
in
add
iret
inc
stos
mov
push
sbb
cmp
pop
cli
adc
inc
je
dec
loop
pop
out
pop
imul
push
jmp
pop
(bad)
out
outs
sti
adc
pop
int
imul
test
jle
add
call
add
sub
fwait
mov
add
imul
retf
push
shl
and
pop
xchg
cmp
movs
daa
pushf
vcomisd
jle
movs
xor
cmps
add
jbe
and
cdq
sub
cdq
push
clc
cwde
repz
push
test
push
add
xlat
ja
loope
fdiv
push
fwait
sbb
mov
push
pusha
jge
jno
mov
add
loope
mov
out
stc
call
fwait
jl
ret
xchg
iret
rol
cmps
adc
fptan
jmp
arpl
inc
loop
loop
mov
stos
push
pusha
sub
(bad)
(bad)
cmp
jl
dec
call
jmp
cli
sub
push
out
je
test
cld
mov
sbb
ret
das
mov
xchg
into
(bad)
out
pop
adc
in
adc
inc
lds
int
adc
sbb
cdq
call
xchg
xlat
pop
jp
(bad)
mov
inc
mov
mov
mov
mov
mov
jl
jp
lea
fsubr
cmps
out
push
cmp
call
jns
cs
shr
movs
ret
mov
fbld
xchg
dec
ds
repnz
mov
pop
inc
pop
xor
xor
adc
pop
sub
call
fldenv
mov
enter
push
and
fcmovb
mov
dec
ins
cwde
dec
(bad)
mov
(bad)
clc
cmp
cdq
imul
dec
pop
nop
movs
and
stos
std
lahf
dec
daa
push
mov
sbb
nop
retf
mov
ins
mov
cmp
jae
mov
enter
pusha
mov
adc
jb
test
mov
addr16
sbb
call
das
adc
mov
sti
sbb
push
stos
leave
xor
xor
hlt
leave
int
jo
mov
pop
cmc
cmp
pop
mov
rol
jne
mov
or
aam
push
out
(bad)
inc
cmp
sbb
mov
cmp
pop
add
jnp
xchg
mov
or
xlat
js
push
inc
sbb
fnstcw
mov
ss
stc
mov
add
dec
sbb
sahf
lea
dec
or
and
xlat
sub
adc
sti
lods
ins
or
mov
jns
clc
sub
inc
and
aaa
sbb
adc
mov
jmp
neg
idiv
je
xor
stc
(bad)
aaa
enter
in
dec
sbb
xor
jno
cdq
out
mov
xchg
jmp
loopne
sub
jmp
jo
push
or
lds
ret
push
out
or
push
xor
inc
add
sub
jmp
pop
or
push
idiv
ret
movs
push
movs
out
leave
fild
sbb
jl
dec
or
cli
mov
popa
mov
mov
ins
inc
bound
dec
(bad)
jg
mov
clc
jo
xchg
ror
adc
jbe
inc
jo
cli
jae
test
gs
or
jno
sub
daa
je
iret
es
(bad)
loopne
repnz
mov
ficomp
(bad)
out
pop
lds
ss
in
fld
jp
dec
pop
cmp
loopne
xor
push
fld
inc
adc
or
pop
or
dec
(bad)
popa
outs
mov
mov
leave
and
xchg
cwde
(bad)
cmp
mov
adc
dec
vdivps
xchg
fldl2e
add
dec
cmp
inc
(bad)
lea
push
add
clc
cmp
cld
jmp
xchg
xchg
jno
adc
(bad)
js
stc
into
int
imul
lods
push
adc
(bad)
sub
icebp
call
outs
mov
pop
sub
xchg
cld
stos
sub
fwait
nop
out
and
shr
je
loope
addr16
in
addr16
sub
jle
inc
xor
fstp
lahf
fdivr
in
mov
bound
arpl
in
or
cwde
push
mov
aaa
mov
sahf
rcl
cdq
(bad)
mov
push
mov
jne
xchg
xchg
cmps
retf
inc
push
sbb
aam
push
sub
sub
jnp
dec
lock
lahf
ss
dec
or
les
push
ins
sub
cmp
sbb
xchg
dec
dec
mov
hlt
aas
ret
cmp
enter
sbb
or
mov
ins
aas
enter
xchg
sbb
xchg
fdivr
sbb
cmp
sbb
aaa
dec
(bad)
imul
test
aam
xor
mov
pop
test
push
cmp
popf
aas
and
jmp
gs
mov
mov
dec
stos
mov
outs
int3
repz
xor
mov
je
push
xchg
in
cmps
sub
fs
pop
sub
daa
call
dec
mov
outs
fs
pushf
jns
sub
sbb
and
pop
fadd
mul
pop
es
out
and
push
add
adc
daa
data16
xor
mov
sub
fiadd
pop
add
fidiv
push
cld
or
shr
out
jbe
outs
ror
xor
mov
pop
adc
pop
jae
shl
sbb
push
jl
xor
cmp
fdivrp
adc
push
pop
(bad)
dec
adc
xchg
mov
out
movs
loop
jnp
ror
xor
and
mov
in
dec
jbe
shl
adc
mov
mov
pop
pop
out
test
cmp
or
out
jne
out
xchg
adc
shl
or
adc
xor
push
imul
jo
sti
push
test
sbb
shl
movs
and
outs
or
movs
mov
mov
mov
xlat
iret
(bad)
cdq
push
sub
push
test
out
push
jnp
sub
jno
xchg
cli
jbe
cmp
popa
aam
push
sbb
pop
mov
xor
fnstenv
das
shl
in
mov
xchg
push
lahf
or
mov
mov
adc
mov
sbb
movs
add
aam
sar
jge
adc
or
mov
add
jae
repz
adc
mov
mov
xchg
lds
out
xor
sbb
cs
or
scas
js
mov
mov
inc
jnp
pushf
es
sub
ret
xchg
sub
add
daa
mov
xchg
icebp
dec
jmp
cmp
push
adc
pop
cmp
clc
fld
xlat
aaa
rol
popa
shr
cmp
mov
dec
leave
sub
ds
inc
cmps
xor
mov
clc
fwait
mov
pop
ficom
icebp
lock
mov
dec
int
jg
jmp
lea
(bad)
jl
imul
scas
xchg
call
and
icebp
or
or
sbb
loope
sub
mov
cli
xchg
mov
pop
push
and
mov
push
add
clc
hlt
ins
push
je
mov
mov
(bad)
std
bswap
out
hlt
enter
cmp
icebp
out
xor
(bad)
cwde
mov
push
add
xchg
nop
loop
scas
fs
mov
cmc
mov
(bad)
ja
shl
mov
jb
and
dec
fmul
test
inc
out
add
lods
xor
xor
mov
shl
jmp
test
shr
mov
sub
jbe
jno
mov
cmp
pop
xchg
and
sbb
scas
or
scas
lahf
pop
mov
xchg
dec
mov
test
pop
dec
fcmovne
xchg
push
jp
in
pop
mov
adc
cmp
out
jle
cli
les
push
bnd
in
mov
(bad)
test
inc
mov
adc
push
daa
les
out
(bad)
cmc
add
sub
pop
loopne
push
jns
xchg
jns
add
leave
push
push
cmp
add
sar
(bad)
fwait
shr
xor
jmp
adc
cmp
dec
and
mov
mov
mov
adc
outs
cmp
test
inc
sbb
pop
sbb
lahf
sahf
mov
test
fucomip
test
push
push
cld
xchg
jl
out
imul
shl
(bad)
mov
aam
mov
adc
test
ins
push
mov
push
sub
inc
inc
cmps
fistp
loopne
and
popa
inc
and
hlt
imul
jbe
lahf
ds
pop
or
push
mov
pop
xor
dec
inc
add
xor
cdq
push
hlt
push
icebp
stos
push
hlt
mov
movs
ret
inc
pop
mov
jl
xchg
(bad)
ficomp
outs
inc
adc
addr16
dec
xchg
nop
push
pop
pop
sub
push
pop
aaa
in
sub
pop
bnd
mov
inc
dec
(bad)
push
sti
mov
inc
cmp
ins
cmps
(bad)
add
or
sub
repnz
cmps
mov
dec
xchg
inc
les
add
aad
nop
xor
add
mov
aam
in
or
add
cmc
push
imul
cli
hlt
bound
cwde
(bad)
add
ret
(bad)
xor
cmp
and
jne
xchg
dec
gs
mov
inc
cld
mov
jns
rcr
dec
xchg
mov
mov
cli
mov
mov
(bad)
cmc
fdivr
jle
xchg
push
ret
xor
neg
ins
sub
mov
loop
ja
nop
mov
mov
jae
je
mov
cmp
inc
inc
test
dec
test
push
xor
mov
enter
xchg
add
pop
push
js
adc
jns
jmp
mov
mov
sub
shl
sar
ret
stc
loop
mov
jmp
jnp
sbb
in
mov
std
and
jnp
push
(bad)
pop
fdiv
sahf
sbb
add
and
ret
pop
cmp
imul
adc
fbstp
xor
sar
outs
cli
imul
iret
mov
fnstcw
dec
inc
xor
dec
imul
jge
push
(bad)
push
rcr
jp
jecxz
test
xor
mov
push
aam
ret
dec
div
xor
fwait
push
outs
test
inc
aad
add
imul
setno
mov
inc
icebp
push
jp
inc
push
xor
pop
inc
aas
cmc
jae
sbb
sbb
add
std
cmp
ret
aad
scas
mov
bound
jo
pushf
push
fcomp
or
mov
ja
test
arpl
rcl
mov
sbb
jmp
inc
scas
xchg
adc
push
call
arpl
or
int
out
or
cmc
or
mov
(bad)
shl
ds
cmc
sub
sub
and
push
pop
sub
or
pop
xor
add
mov
jae
xchg
in
mov
arpl
add
aam
aad
mov
stc
or
outs
jne
loope
dec
stc
jb
ja
lods
mov
fbstp
mov
sti
fidiv
jbe
cmp
dec
and
dec
xlat
daa
rcl
xor
addr16
retf
dec
sbb
pop
aad
pushw
cmps
adc
push
ja
cmp
push
test
ret
fisttp
loop
jmp
xchg
pushf
fnsave
cmp
loop
sub
jl
adc
test
data16
sbb
nop
fsubr
ins
data16
nop
jl
pop
jge
dec
scas
mov
frndint
or
push
sbb
ins
dec
icebp
xchg
jmp
xchg
icebp
ret
or
pop
xchg
and
fcmovnbe
movs
in
lock
adc
adc
lods
faddp
fimul
sbb
sbb
scas
cwde
dec
push
outs
repz
rcl
mov
mov
pop
test
dec
jmp
test
inc
pop
mov
and
int3
loopne
add
out
ror
adc
out
loope
fs
add
cmps
sub
mov
addr16
xchg
fisub
fild
cdq
adc
adc
ins
lock
daa
adc
xlat
fmul
fsubr
pop
mov
mov
mov
hlt
fwait
cs
js
hlt
stc
pop
dec
and
(bad)
cmp
mov
rcr
popf
jne
xchg
mov
mov
scas
retf
adc
mov
mov
cmps
xor
pop
mov
jne
and
xchg
les
(bad)
daa
mov
clc
jge
rcr
jbe
rcr
test
imul
inc
sar
call
sbb
cmp
test
cdq
int
inc
in
pop
mov
arpl
inc
and
and
aam
mov
fs
out
ffreep
cld
rcl
and
mov
xor
cmc
pusha
rcl
cmp
xchg
push
call
test
repz
cwde
dec
dec
ret
xchg
pop
gs
jmp
mov
or
call
nop
mov
inc
push
fs
pop
xchg
aad
jnp
push
add
adc
cmps
int3
arpl
test
fild
mov
adc
loopne
inc
adc
lds
mov
lds
jno
dec
(bad)
int
jmp
test
xchg
adc
sahf
fs
adc
push
pop
mov
mov
xor
cmp
jb
sbb
(bad)
call
and
outs
jnp
xchg
dec
jecxz
retf
dec
dec
das
mov
ds
sub
and
jno
dec
pop
icebp
mov
push
inc
xchg
jmp
nop
jo
ss
push
pop
add
and
cmp
cmp
inc
sbb
dec
int
or
xchg
ins
sbb
pop
pop
imul
jmp
xor
stos
fstp
inc
(bad)
test
jnp
hlt
dec
jnp
test
xchg
add
jmp
movs
into
mov
aam
push
loopne
int
xchg
push
mov
push
pop
mov
pushf
mov
scas
and
and
inc
cmp
dec
jmp
icebp
pop
xchg
dec
imul
jmp
add
into
jecxz
push
lds
sub
inc
add
dec
aad
push
or
jecxz
cmp
mov
and
je
cmps
push
cmp
mov
push
or
add
mov
test
cli
out
or
cmp
adc
scas
stos
jmp
(bad)
pop
lock
ret
rcl
push
lods
mov
addr16
and
cs
mov
inc
pop
gs
call
or
pop
cmps
test
xchg
outs
inc
mov
cmps
pop
xchg
dec
sbb
xchg
into
dec
xlat
dec
push
lahf
pop
das
cmps
adc
(bad)
sbb
loopne
and
movs
fnstcw
(bad)
xor
loopne
sub
test
sub
dec
idiv
or
push
out
loop
xchg
jns
add
pop
aad
icebp
shl
lahf
std
xchg
dec
mov
inc
test
int3
xchg
(bad)
out
mov
call
int
aaa
sbb
jae
and
pushf
pop
add
dec
(bad)
pop
aad
scas
pop
loop
pop
cld
aad
lods
daa
cdq
inc
dec
inc
scas
stos
mov
jne
adc
sbb
icebp
xchg
mov
ror
in
jp
add
fs
sbb
les
and
fcmovbe
inc
popf
xlat
les
pop
daa
call
or
aam
dec
(bad)
mov
loopne
imul
dec
mov
and
jo
fistp
fwait
out
add
mov
jmp
loope
cmp
loope
popf
rol
cli
cmp
xchg
aam
cmps
jmp
data16
inc
dec
xchg
std
nop
jl
pop
iret
fld
fs
or
jmp
cwde
stc
or
movs
stos
call
lods
cli
and
sar
enter
xor
inc
cmc
pop
xlat
int
jbe
pop
cmps
ja
xchg
cld
mov
dec
pop
dec
call
pop
clc
cmp
mov
jmp
mov
dec
inc
clc
cmp
sub
mov
pop
cmps
scas
retf
iret
xor
test
mov
jbe
mov
jno
lods
sbb
das
inc
mov
jb
cmp
push
int
inc
mov
out
add
test
fisttp
jns
xchg
mov
xchg
mov
loope
add
and
(bad)
adc
dec
fadd
fadd
mov
int3
jmp
sar
add
dec
push
xchg
fsubr
cwde
jl
dec
jg
sbb
hlt
popa
ds
into
mov
mov
cmp
push
(bad)
clc
sub
ins
xor
and
ror
test
mov
ret
addr16
or
sbb
sbb
xor
pop
cdq
mov
(bad)
sar
call
pop
mov
xchg
xchg
jo
leave
test
sbb
push
cmp
sahf
mov
dec
lods
mov
retf
inc
mov
adc
push
arpl
mov
test
cmp
add
inc
sbb
pushf
in
nop
inc
sti
fmul
aaa
sbb
push
shl
sbb
jb
out
jns
push
adc
icebp
stos
ds
cmps
daa
enter
bound
inc
sbb
adc
push
sbb
cmp
mov
jl
push
hlt
(bad)
jns
movs
mov
aaa
pop
fnstcw
pop
or
xor
mov
xchg
in
test
ret
(bad)
adc
lods
scas
mov
mov
jecxz
and
or
push
sbb
adc
mov
inc
or
ins
push
jl
dec
ret
adc
mov
cmp
push
fcomp
jns
pop
xchg
sbb
jmp
popf
mov
test
call
pop
fist
xchg
push
dec
dec
pop
adc
into
dec
test
idiv
pop
stc
push
sub
sub
iret
adc
jb
mov
mov
inc
repz
or
push
retf
cmc
fidiv
sub
add
inc
stc
mov
cmc
dec
inc
test
jbe
and
mov
inc
mov
iret
out
mov
ss
sbb
inc
outs
(bad)
mov
in
mov
inc
pop
inc
dec
cmp
out
adc
inc
and
xlat
outs
inc
enter
mov
cs
add
or
mov
cli
js
arpl
and
hlt
loopne
mov
clc
jmp
ja
test
cmp
daa
sbb
shl
in
cwde
jg
fcomp
push
ja
sar
popf
xor
push
lahf
(bad)
adc
ds
mov
loopne
xchg
cmp
adc
add
xlat
fild
push
cmp
jecxz
popf
icebp
enter
cs
mov
(bad)
stc
fcmovnu
(bad)
lods
fnstenv
rol
cmp
ret
xchg
dec
xchg
int
fcomp
fidiv
mov
dec
inc
pop
cwde
ret
daa
and
cli
pushf
xor
jge
push
and
xchg
nop
or
mov
xchg
retf
ja
aam
xchg
or
mov
add
xor
leave
(bad)
std
test
push
test
daa
repnz
ror
mov
imul
aaa
push
fistp
lods
xchg
mov
dec
jle
fwait
mov
or
pop
cs
jb
xlat
popf
fstp
fs
and
repnz
in
adc
or
das
xor
adc
pop
push
repnz
mov
cmps
sub
sbb
popf
sbb
in
enter
(bad)
(bad)
inc
(bad)
jmp
xchg
bound
pop
imul
cmp
push
xchg
push
(bad)
adc
mov
ins
jno
mov
and
fdiv
in
or
cmp
cmp
imul
adc
and
and
lock
dec
fdiv
int
retf
cmp
dec
inc
and
inc
xchg
xchg
imul
sbb
popf
xchg
add
jg
jle
cld
aas
xor
clc
jb
add
push
or
(bad)
jg
das
sbb
mov
je
jb
ret
and
(bad)
and
(bad)
cli
mov
icebp
jge
push
loopne
inc
clc
jb
jne
jle
xchg
dec
retf
and
dec
mov
rcr
fild
jo
sti
adc
mov
cmp
pop
outs
data16
mov
call
lds
fwait
sbb
fldenv
pop
cmps
cdq
loope
sar
xchg
xchg
xchg
pop
data16
lods
mov
vpand
arpl
xchg
mov
pushf
jge
aam
jo
or
push
repz
mov
inc
cwde
je
pop
fcmovu
mov
or
rol
scas
lea
mov
pop
adc
push
mov
push
rol
out
sub
mov
pusha
lods
xchg
adc
and
sbb
(bad)
stos
movs
push
mov
cdq
dec
in
nop
les
or
in
(bad)
mov
(bad)
rcl
nop
daa
mov
dec
in
push
fwait
xchg
outs
pop
fnsave
jno
dec
icebp
inc
(bad)
int
pop
jns
arpl
and
fidiv
sub
jno
xor
sub
jnp
jmp
and
dec
jle
xor
cmp
xchg
scas
stos
movs
in
add
and
fdivrp
rcr
xor
imul
mov
jnp
cld
rcr
cmp
out
ror
push
push
xor
pop
adc
mov
sub
and
retf
mov
jg
sub
jge
cmc
fs
repnz
outs
xor
cs
push
or
cmp
gs
jb
inc
pushf
dec
pusha
outs
les
adc
lods
ret
sub
aad
sbb
dec
cmp
sub
test
in
xchg
movs
test
push
push
jecxz
hlt
jmp
xchg
lods
or
mov
and
loope
adc
xchg
call
jmp
and
pop
mov
push
jp
ficomp
push
daa
jmp
jae
xor
add
add
fist
jmp
add
(bad)
addr16
data16
stos
mov
sahf
sub
ja
shl
daa
jg
add
neg
sub
sub
inc
outs
or
inc
or
inc
aas
in
xor
sub
pop
sbb
add
cmps
das
and
cmp
ins
gs
call
sti
call
fmul
add
mov
jecxz
cmp
cs
cmp
xor
pop
sub
mov
xor
cmp
mov
dec
inc
push
inc
out
leave
pop
aam
test
stos
int
inc
fmulp
sub
jge
je
enter
cli
clc
shl
sub
fstp
arpl
cmp
pop
imul
imul
xor
loope
test
mov
int3
jecxz
jbe
dec
jle
loope
adc
imul
arpl
xor
xchg
(bad)
retf
sub
dec
mov
mov
mov
add
movs
push
pop
xchg
sub
or
or
mov
sbb
pusha
pusha
data16
xor
sub
jb
stos
push
pop
iret
enter
std
adc
enter
push
or
mov
out
stos
les
inc
fwait
les
inc
pop
mov
and
sbb
ss
int3
loope
sar
movs
pop
cdq
mov
(bad)
mov
mov
out
es
mov
pop
mov
call
mov
nop
cmp
nop
out
aas
jbe
mov
jmp
xchg
idiv
pop
add
div
int3
pop
mov
add
arpl
fcomip
das
or
mov
dec
add
fisub
or
jmp
rep
les
(bad)
pushf
pop
cmc
je
mov
push
int
std
push
pushf
in
and
xchg
jae
pop
dec
xchg
cld
jg
xor
inc
jb
jae
and
jns
retf
xor
xchg
test
shr
stos
dec
icebp
add
movs
dec
and
mov
xchg
or
and
mov
sar
xchg
mov
clc
sub
retf
cli
fld
adc
clc
add
mov
mov
mov
xor
add
push
ror
add
ds
fld
imul
sub
daa
shl
push
pop
and
mov
xlat
add
test
lock
sbb
pop
push
paddb
mov
nop
lods
or
xor
rcr
and
jae
int
not
xchg
pop
jb
dec
inc
mov
xor
push
cwde
daa
fidivr
stc
push
xor
daa
lahf
xchg
push
cmp
and
or
or
hlt
mov
sbb
and
push
cs
pop
sub
dec
scas
adc
mov
loop
pop
mov
movs
or
jne
jle
dec
or
push
and
rcl
out
xchg
or
jge
(bad)
xchg
sub
(bad)
iret
ss
test
dec
mov
ss
mov
(bad)
adc
jae
and
stos
jle
push
jg
arpl
inc
pop
mov
daa
bound
sub
xchg
dec
hlt
sbb
stos
lock
test
adc
jecxz
sbb
test
stc
loop
fldenv
mov
nop
mov
push
inc
jmp
cmp
adc
call
ret
je
dec
dec
(bad)
fadd
sbb
xchg
test
arpl
enter
add
aad
jmp
fimul
mov
mov
mov
xchg
sbb
mov
lods
pop
in
push
jmp
sub
jnp
inc
retf
jmp
xor
nop
imul
rcr
je
jnp
je
push
sti
stos
stos
test
cld
lods
mov
scas
cmps
fwait
imul
ss
or
rol
(bad)
xor
nop
aaa
or
xchg
scas
add
sub
mov
in
je
jo
mov
add
js
pop
xlat
fisttp
mov
mov
out
xor
scas
push
pusha
ffreep
shl
push
fwait
imul
jnp
push
neg
jo
and
test
dec
jecxz
clc
cmp
cmps
xchg
mov
out
pushf
into
or
popf
popa
adc
jnp
cmp
jg
push
imul
and
mov
inc
iret
outs
and
mov
cmp
and
xchg
clc
lock
enter
xor
push
mov
dec
enter
clc
xor
leave
jno
test
fwait
cmp
xor
icebp
data16
nop
inc
shl
ins
repz
xlat
ins
mov
or
sbb
adc
dec
mov
cmps
ret
test
jbe
cli
ret
adc
outs
sub
pop
push
or
imul
inc
(bad)
mov
int
push
xchg
(bad)
xor
(bad)
imul
cmps
out
(bad)
es
mov
jnp
into
inc
(bad)
pop
pop
cmps
loopne
add
mov
fsub
inc
ins
sub
gs
sahf
(bad)
std
bound
fild
(bad)
dec
adc
call
movs
sub
aaa
mov
xor
inc
add
mov
(bad)
mov
sbb
mov
pop
push
(bad)
jp
shl
pusha
mov
int3
cmp
imul
or
lods
repz
scas
arpl
or
mov
sbb
add
and
sub
xor
out
push
pushf
test
das
jle
movs
pusha
add
daa
inc
sub
jnp
bound
icebp
pop
push
jno
lahf
aam
(bad)
sbb
push
cmc
lahf
into
push
ins
sbb
sbb
sub
xor
jb
mov
pop
mov
xchg
out
pop
sbb
sub
loop
loop
div
mov
sub
retf
outs
cld
das
ja
out
les
ficomp
mov
push
jp
jle
sub
pop
mov
pop
push
(bad)
es
jbe
ja
mov
stos
movs
std
dec
push
sbb
push
stos
dec
fisttp
mov
repz
out
xor
imul
adc
inc
and
pop
repz
cdq
push
inc
xchg
pop
repz
xchg
(bad)
js
and
out
outs
push
dec
cli
test
pop
sub
push
retf
ss
push
sbb
imul
adc
and
ror
in
icebp
adc
mov
arpl
neg
lahf
pop
push
pop
inc
inc
inc
xor
inc
imul
or
test
(bad)
repz
data16
jecxz
dec
adc
push
xchg
push
in
adc
pop
pop
cmp
pushf
jns
(bad)
retf
cmp
dec
or
xor
int
cmp
es
movs
popf
inc
mov
js
push
fisttp
sub
cmps
cmps
pusha
das
push
pop
cmp
xor
sub
and
imul
xchg
mov
sub
and
bound
fnstcw
jle
sbb
xor
dec
dec
mov
push
test
fist
clc
in
(bad)
xchg
shl
test
cmc
sbb
popa
and
xchg
fistp
push
add
jno
call
cs
mov
retf
mov
xlat
cmp
pop
fisub
push
fidivr
jb
sar
pop
pcmpgtb
call
inc
imul
cwde
ja
fnsave
bnd
push
fadd
jne
imul
mov
pop
int
ins
xchg
cld
xchg
mov
arpl
xchg
adc
outs
inc
ss
xor
(bad)
fadd
mov
stc
xlat
aam
or
push
dec
mov
jl
test
adc
jno
not
xchg
scas
(bad)
outs
xchg
xor
or
mov
daa
(bad)
xchg
cmps
int
jp
sbb
xlat
inc
add
in
pop
in
cmp
inc
stos
xor
jno
shl
sub
ret
(bad)
(bad)
stc
push
cmps
xchg
shl
in
mov
push
pavgw
dec
call
inc
(bad)
fldcw
movs
mov
mov
call
scas
sub
pushf
mov
jb
scas
dec
imul
stos
out
stos
stos
or
cmp
xchg
mov
push
or
fstp
les
movs
xor
add
pushf
and
loop
int
mov
sub
dec
mov
cmp
pop
mov
(bad)
cwde
and
fs
adc
push
jecxz
(bad)
scas
jnp
mov
push
inc
cmps
push
(bad)
jp
aas
adc
inc
mov
retf
cmp
loopne
retf
sar
lods
jecxz
pop
in
push
sbb
adc
cld
test
adc
push
retf
or
push
nop
or
(bad)
in
rol
popa
(bad)
in
(bad)
fs
or
aaa
shr
pop
imul
es
in
xor
out
das
es
pop
mov
inc
(bad)
lahf
out
or
(bad)
push
mov
or
add
ins
jecxz
ror
and
adc
arpl
mov
jae
sbb
sbb
and
adc
or
jge
xchg
test
test
out
in
iret
sub
push
(bad)
mov
mov
retf
cdq
xor
add
or
xor
int3
outs
push
cmc
sub
test
xchg
pushf
cwde
sbb
sbb
jne
push
dec
inc
cdq
jo
scas
push
fcmovnb
cwde
sub
cmp
outs
lods
retf
mov
jp
test
xchg
sub
rcl
inc
mov
and
xchg
add
push
movs
rol
fstp
out
pop
xor
aam
frstor
dec
mov
pusha
xchg
push
dec
lods
(bad)
sub
inc
add
scas
jmp
sbb
das
(bad)
repnz
xchg
sub
mov
cli
popf
jns
dec
pop
(bad)
fwait
test
ja
pusha
test
icebp
sub
mov
and
bound
rcl
adc
ja
adc
cdq
mov
jmp
jns
fcomp
ins
adc
mov
sbb
mov
add
jge
out
rcl
das
loope
dec
xor
jle
sbb
sub
mov
std
adc
adc
jo
pop
rcl
dec
mov
shl
fwait
pop
(bad)
cmp
adc
xor
daa
xor
inc
mov
push
std
(bad)
fst
pop
mov
popf
frstor
dec
mov
push
xchg
sub
mov
daa
in
out
lahf
mov
in
push
adc
push
inc
stos
lds
fcomp
je
pop
loopne
repz
jnp
push
dec
arpl
sar
mov
(bad)
rcl
pusha
movs
push
pop
ds
jmp
or
mov
jbe
in
in
dec
add
nop
mov
repz
and
movs
jo
cmp
mov
jle
inc
dec
push
das
sbb
outs
sbb
inc
dec
fcmovnu
push
neg
mov
inc
dec
pop
out
les
mov
daa
jp
ins
inc
call
inc
div
or
outs
in
add
fldenv
xchg
nop
repnz
int
adc
dec
movs
cmp
mov
or
and
mov
(bad)
and
out
loopne
mov
lods
dec
mov
shl
mov
push
shl
mov
test
and
mov
push
les
pop
lahf
loope
pusha
push
mov
in
mov
nop
sbb
adc
xor
loopne
ret
outs
pop
daa
cmp
lea
dec
inc
in
pop
sbb
pop
lahf
fwait
js
or
cdq
lds
jns
pop
addr16
test
push
cwde
jp
out
mov
fcomp
mov
aam
(bad)
shl
mov
ss
adc
(bad)
cmp
scas
not
pop
mov
out
sbb
sahf
out
dec
stos
dec
push
xor
lea
dec
add
sub
in
aad
sar
rcl
pop
mov
push
xchg
(bad)
fimul
mov
pop
adc
lock
ss
or
std
xlat
and
inc
sub
push
jle
(bad)
lds
cdq
imul
(bad)
sar
jmp
jge
mov
in
jg
imul
jo
or
lock
mov
sbb
sbb
adc
push
jbe
mov
gs
fsubr
idiv
mov
outs
ja
pop
lock
aad
push
fdiv
xchg
adc
jmp
es
shr
test
mov
jbe
(bad)
adc
not
aad
shl
cmc
into
neg
dec
or
sub
dec
scas
pusha
sbb
aad
div
push
xor
movs
imul
aad
or
fld
retf
in
add
xchg
test
in
ja
add
push
mov
movs
pop
hlt
loop
mov
inc
lahf
cmp
cmp
jo
test
mov
inc
movs
xor
sub
cmps
push
sbb
mov
nop
mov
fld
(bad)
push
sbb
push
mov
int3
movs
(bad)
rcl
or
push
inc
lds
pop
xchg
inc
fcomp
cmp
(bad)
stc
psubsb
and
inc
cmp
in
pop
arpl
fisttp
xchg
jb
pop
push
enter
xor
and
jp
xchg
or
lods
mov
out
inc
jg
loopne
and
jmp
inc
cmp
jecxz
mov
(bad)
scas
push
jnp
lods
adc
adc
jecxz
push
jmp
push
adc
movs
sub
dec
mov
push
int
dec
dec
ret
fimul
inc
jl
xor
movs
cmp
mov
ret
test
into
or
sub
jno
cwde
add
sbb
or
push
mov
sbb
pop
add
sbb
or
jbe
cmp
jae
imul
adc
mov
mov
cmp
pop
mov
data16
inc
mov
adc
sbb
or
std
aas
or
xchg
adc
xlat
cwde
add
sbb
sub
push
addr16
std
xchg
in
sbb
cmp
aad
mov
mov
std
adc
inc
imul
push
inc
repnz
xchg
shl
dec
add
pop
hlt
inc
pop
add
es
or
aas
pop
sub
scas
cmp
sub
test
fcmovbe
adc
lahf
mov
sub
(bad)
jmp
not
xchg
jo
pop
inc
(bad)
cmp
jnp
int3
iret
pop
ins
xor
mov
into
int3
dec
stc
push
std
adc
inc
push
sbb
xchg
aaa
push
hlt
mov
xchg
or
add
inc
fnstenv
bnd
mov
loope
scas
retf
or
clc
sub
xchg
enter
sbb
sub
std
cmp
stc
jecxz
js
push
pop
xor
fwait
rcl
daa
jno
jae
aam
xor
fwait
lods
inc
ins
or
mov
cwde
pop
mov
inc
jge
aad
add
outs
mov
pop
and
lea
sahf
xor
ins
pop
imul
or
push
cmp
ins
adc
mov
inc
jmp
shl
retf
mov
mov
mov
lahf
cmp
adc
into
call
jmp
cli
or
jbe
cmps
fisub
fldcw
and
xchg
test
mov
mov
fs
ja
jmp
mov
push
aas
es
or
or
lea
pop
jbe
nop
sahf
jg
push
mov
add
dec
cmp
pop
repnz
push
int3
sub
cmps
dec
and
mov
inc
(bad)
les
jle
or
sbb
inc
nop
mov
xchg
jmp
ins
fstp
cmp
test
jnp
repz
inc
leave
cmp
or
mov
ds
mov
gs
push
ficom
mov
xor
jmp
pop
lahf
ret
sub
inc
in
push
or
adc
and
pop
(bad)
out
mov
xor
and
scas
scas
pop
in
adc
aaa
lds
das
in
aas
rol
test
xor
sbb
clc
stos
jp
iret
call
xlat
xor
mov
or
adc
adc
cmc
xlat
icebp
sahf
popa
sub
inc
fdiv
adc
cli
loop
ja
mov
sub
mov
pop
fcomip
ja
dec
int3
fnstcw
fistp
mov
or
sahf
mov
xchg
ins
jb
add
xor
stos
inc
test
out
cmp
mov
ss
test
dec
jb
push
(bad)
dec
fidivr
(bad)
out
push
cmp
sub
jb
repnz
(bad)
mov
popa
jp
sbb
mov
inc
sub
cdq
(bad)
mulps
imul
sar
mov
cmp
mov
outs
xchg
xor
push
push
push
mov
test
mov
bound
ja
nop
je
ret
cdq
add
dec
add
sar
scas
iret
xchg
imul
xor
pop
ret
jge
xlat
stos
or
mov
arpl
add
mov
xchg
pop
or
jbe
lds
xchg
sub
jae
pusha
push
xor
test
in
out
(bad)
(bad)
bound
cli
stos
outs
lods
loopne
xchg
xchg
out
and
push
or
xchg
(bad)
mov
jmp
bound
jmp
fwait
imul
fnstenv
js
fsub
les
fdiv
addr16
push
cmp
xchg
and
in
xchg
sub
rcr
dec
cmp
cmovb
mov
add
iret
mov
or
sbb
hlt
sbb
xor
ins
stc
movs
xchg
jecxz
sub
movs
mov
xchg
nop
xchg
or
dec
outs
out
mov
sub
je
sbb
cmps
sbb
cmps
sub
and
mov
jb
ja
das
je
ja
icebp
mov
push
out
push
fst
outs
cmp
xrelease
dec
into
push
push
ins
mov
(bad)
in
bound
push
jecxz
or
sub
sahf
add
movs
push
push
stos
sub
mov
adc
jo
xchg
adc
out
fiadd
xor
cmp
iret
out
add
mov
aad
nop
cmc
dec
xor
int
clc
inc
popf
jecxz
xchg
cmps
mov
pop
out
jecxz
or
push
mov
leave
mov
arpl
xor
mov
and
mov
popa
sub
xor
dec
adc
dec
ss
lds
out
push
rcl
and
popf
pop
mov
jne
add
jl
push
jg
mov
dec
mov
mov
inc
aad
xor
and
loopne
mov
in
mov
out
adc
(bad)
xor
add
xchg
out
or
cs
push
push
xchg
xchg
xor
and
xor
dec
push
not
pop
cmp
xchg
bound
dec
lea
jno
push
mov
imul
or
sub
imul
adc
push
(bad)
cmc
(bad)
in
adc
or
mul
mov
gs
dec
add
cmp
lds
pushf
mov
xchg
addr16
loopne
pop
push
pop
rol
int
sub
xor
push
jge
cmp
sub
repz
outs
jmp
or
mov
outs
inc
dec
daa
(bad)
(bad)
(bad)
sti
cmp
gs
jge
fstp
push
sbb
add
mov
xchg
repz
lea
push
pop
xchg
es
push
sbb
nop
aaa
loop
js
mov
jl
xor
lods
xchg
adc
icebp
xor
sbb
push
jl
mov
aam
iret
cmp
les
sbb
and
ret
push
xchg
push
push
and
loopne
push
enter
inc
xor
xchg
jae
inc
pop
jne
xlat
fs
sbb
jp
shr
dec
pop
add
sub
leave
pop
pop
out
shl
into
mov
in
or
cmp
and
xor
jle
shl
add
pop
(bad)
retf
(bad)
addr16
push
(bad)
aam
jp
mov
lahf
jb
jecxz
cmp
dec
aam
sub
push
inc
and
mov
stos
aad
pop
mov
xchg
fist
pop
lods
sub
cmp
dec
sar
jne
sbb
or
push
daa
mov
cmp
pop
cdq
mov
enter
sub
(bad)
gs
mov
movs
push
lahf
test
into
dec
jae
inc
cmp
fst
int
shl
xchg
mov
xchg
lea
xor
(bad)
xor
popf
add
jae
xchg
cwde
inc
pop
and
mov
jecxz
push
(bad)
xchg
shl
aam
inc
xor
add
push
sbb
dec
outs
ins
mov
xor
push
mul
aas
(bad)
jle
gs
pop
xlat
cli
add
pop
pop
fld
loope
mov
sub
outs
pop
call
and
push
out
dec
fwait
neg
xchg
push
mov
jnp
cmc
jns
hlt
dec
mov
(bad)
sbb
and
mov
sub
add
sub
mov
sbb
aad
jbe
dec
lods
mov
mov
shr
jmp
loope
pop
inc
repnz
xchg
jmp
push
xor
test
test
xchg
js
inc
pop
je
fdiv
inc
outs
cmp
cld
fcom
xchg
cld
je
or
test
std
or
sbb
mov
adc
lock
cmps
fld
mov
into
mov
push
and
xchg
cmp
dec
std
std
push
stc
aas
or
xor
pop
dec
cmp
xor
pop
add
jmp
xchg
sub
out
fstp
fucomip
adc
and
inc
shl
inc
dec
inc
ins
lahf
pop
sahf
mov
scas
mov
add
push
mov
sbb
stc
or
xor
leave
popa
lods
and
shl
mov
fwait
icebp
cmp
sbb
push
imul
or
cdq
pusha
adc
in
cdq
stc
jb
fwait
pop
icebp
iret
movs
std
iret
xchg
and
mov
ficomp
adc
push
shl
xlat
cmp
mov
sub
sahf
enter
mov
cmp
adc
inc
mov
push
ds
test
add
mov
ins
loop
mov
rol
nop
fisub
xchg
aam
clc
ret
xor
adc
jg
mov
icebp
jmp
js
cdq
jle
les
iret
mov
cs
loopne
add
clc
dec
aad
loopne
test
pop
mov
and
scas
sar
pop
mov
cmp
dec
sbb
add
mov
jns
sub
adc
shl
icebp
in
add
mov
fild
sub
sbb
not
icebp
mov
mov
popf
mov
stc
mov
pop
ja
cmp
push
lods
sbb
dec
and
out
xchg
mov
mov
pop
dec
dec
dec
jno
xchg
add
cmp
sbb
arpl
jbe
sub
cmp
xor
retf
add
fucomi
inc
sar
adc
test
gs
pushf
fld
add
adc
jmp
test
sbb
cmp
scas
mov
jnp
push
test
xchg
xor
arpl
mov
cmp
cmp
pop
pop
test
imul
in
mov
out
popa
pop
bound
aas
stos
bound
cmp
inc
repnz
xor
sub
sahf
jbe
out
pop
mov
sbb
xchg
mov
lds
push
fsub
test
(bad)
cmp
mov
popa
ins
cwde
sub
(bad)
fcomp
leave
ins
ds
retf
fwait
js
jmp
shl
neg
sub
rcl
cld
fwait
jae
mov
repnz
adc
push
out
adc
and
mov
pushf
dec
cs
or
std
jno
and
stos
aad
mov
jnp
popa
into
(bad)
(bad)
aas
jns
setne
out
and
das
daa
into
stos
or
stos
jl
add
aad
es
mov
inc
sti
popa
add
mov
push
dec
pop
jle
inc
stos
mov
fild
jb
ret
inc
stos
mov
push
aad
rcr
data16
(bad)
nop
jmp
retf
push
retfw
rcpps
xchg
cmps
aas
add
cmc
frstor
aas
jg
dec
push
js
cmps
cmp
sbb
jb
mov
mov
(bad)
jmp
fisub
cmp
mov
mov
outs
cli
lods
inc
and
int
dec
scas
(bad)
ror
xchg
gs
push
sub
mov
cmp
popf
add
or
std
bound
mov
movs
mov
gs
xchg
sahf
imul
inc
xchg
or
sbb
outs
dec
movs
mov
test
xor
popa
inc
sub
cmp
int
dec
add
dec
inc
movs
outs
call
test
push
add
dec
sar
je
retf
lahf
rcl
or
jbe
pop
test
jg
rol
pop
cmp
mov
nop
pusha
cmp
dec
jne
sbb
rcr
inc
js
aam
push
sub
pop
mov
sahf
add
cmc
and
(bad)
xor
stos
sbb
xor
or
pop
sub
jg
xor
or
cmp
sbb
pop
adc
inc
repnz
or
sbb
mov
mov
jns
pop
cmp
aaa
cmc
inc
iret
adc
add
loopne
mov
lods
ror
pusha
sub
lods
nop
sbb
xchg
mov
pop
mov
and
retf
inc
add
add
scas
or
mul
(bad)
cmp
gs
sub
icebp
pushf
les
aad
cmp
shr
movs
arpl
dec
mov
cmp
jle
aad
inc
int3
je
and
sar
aam
mov
ins
inc
add
pushf
xchg
fs
std
loope
add
movs
pop
imul
call
pusha
and
sbb
mov
jbe
push
dec
movhps
mov
test
pop
or
pop
daa
jns
inc
inc
jmp
cmp
lds
aaa
lock
out
data16
xchg
dec
stos
sub
cmp
lahf
mov
mov
gs
rol
stc
jbe
sbb
movs
cmp
jle
and
add
sbb
dec
dec
push
cmp
push
inc
xchg
ins
ins
cwde
xchg
dec
lea
add
mov
adc
adc
cmp
and
jno
or
div
mov
jecxz
pop
jnp
cdq
je
repnz
mov
pop
iret
rol
loopne
add
cld
stc
push
or
jmp
xlat
or
jmp
or
shl
nop
mov
loopne
sbb
xlat
sub
repz
mov
push
ds
push
lahf
ins
cmp
fwait
jns
bound
xor
loop
mov
push
(bad)
rol
idiv
xchg
icebp
cmp
jmp
and
cld
inc
imul
mov
mov
xlat
mov
and
jno
jl
mov
add
jnp
aam
dec
mov
aad
xor
sbb
movs
adc
(bad)
sub
retf
outs
jge
sar
mov
inc
out
mov
adc
mov
jne
fld
(bad)
pop
iret
cld
jmp
gs
adc
std
sti
sar
cmp
push
scas
xor
ror
pop
nop
xchg
cwde
or
jge
jnp
pop
out
or
push
xor
mov
push
out
and
push
xor
imul
mov
sub
lock
xlat
jg
fs
sbb
adc
pop
xchg
add
(bad)
adc
cmp
call
enter
dec
pop
test
add
jecxz
nop
(bad)
mov
pop
or
stos
leave
pop
aaa
xchg
lods
or
pop
xchg
push
dec
test
loopne
das
mov
mov
cmc
scas
aas
mov
adc
ret
mov
addr16
in
popf
dec
add
adc
ror
(bad)
fild
dec
aaa
shl
xchg
ja
in
test
inc
xchg
shl
dec
mov
into
sbb
lea
cmc
outs
pop
xchg
dec
into
clc
iret
jle
fisttp
push
hlt
xchg
jne
jbe
ja
push
inc
shr
fcom
push
mov
dec
sub
in
mov
jne
cmp
mov
add
or
out
bnd
fld
inc
mov
sub
xchg
or
int
xchg
mov
jl
dec
ss
out
pusha
ins
dec
fs
arpl
loopne
mov
std
cmp
mov
pop
cmp
dec
icebp
sbb
pusha
stos
mov
mov
jns
pop
fldcw
das
and
arpl
data16
mov
mov
test
adc
add
adc
xchg
mov
sbb
fwait
stos
je
ins
sbb
je
mov
clc
cmps
xor
and
pop
xchg
push
xor
inc
scas
in
xchg
jl
retf
mov
rcpps
scas
jns
pop
stos
cs
stc
fistp
xor
or
sub
sbb
sbb
retf
das
xor
das
cmp
int3
adc
dec
repz
jmp
xchg
xor
add
js
mov
aam
xor
dec
push
push
aaa
ret
xor
ja
scas
fwait
shl
xchg
sahf
lea
out
cmc
mov
movs
mov
mov
or
pop
xor
xlat
inc
aas
clc
pop
daa
aaa
arpl
cmp
sub
cld
cs
or
inc
mov
dec
mov
mov
mov
cmp
add
(bad)
sub
scas
repnz
xchg
inc
push
nop
loopne
or
out
cmp
sbb
retf
add
cld
jg
icebp
cmp
sub
lahf
ins
sbb
in
and
xor
mov
pop
inc
popf
in
adc
cld
xchg
jle
mov
sti
pusha
gs
xlat
xchg
push
mov
cs
push
movs
imul
shr
and
jl
aas
out
mov
and
lods
(bad)
call
out
call
xor
sti
ror
test
out
add
add
ror
jae
sub
inc
in
shl
(bad)
xor
push
outs
loope
jmp
push
repz
mov
es
mov
inc
out
(bad)
adc
xchg
fdiv
loopne
sub
data16
(bad)
lahf
popf
dec
iret
jns
lods
mov
mov
fisubr
mov
hlt
mov
ins
sbb
or
pop
mov
in
repz
lods
(bad)
in
xor
mov
jne
pushf
jns
inc
push
pop
push
mov
mov
adc
test
fdiv
es
ror
pushf
repz
imul
vandnps
imul
push
sbb
in
jmp
add
js
mov
imul
retf
test
sti
xchg
mov
pusha
mov
dec
mov
lds
push
daa
rcl
xlat
pop
pop
mov
das
jb
aaa
jmp
je
and
rcl
retf
(bad)
sub
stc
fild
das
xchg
leave
add
push
ds
inc
mov
in
(bad)
loopne
and
push
sti
out
jmp
push
xor
das
loope
lods
cli
in
and
and
mov
outs
aam
xchg
ds
jecxz
scas
dec
scas
sbb
into
or
jmp
loop
loopne
pop
xchg
lock
mov
dec
(bad)
adc
or
mov
int
and
movs
cwde
stc
sti
mov
(bad)
mov
sub
rcl
inc
in
fisttp
aam
lahf
push
(bad)
mov
sbb
and
sbb
imul
cli
dec
mov
push
xor
sbb
sbb
retf
push
inc
and
add
add
std
int3
mov
push
jecxz
test
push
fld
xor
lods
mov
cvtdq2ps
outs
dec
jno
mov
pop
jae
mov
sub
push
(bad)
in
stos
jmp
mov
out
jns
sti
adc
(bad)
jae
mov
ss
fwait
fwait
popa
pop
in
gs
(bad)
sub
popa
push
adc
mov
and
push
mov
inc
sbb
je
cmps
sbb
out
jnp
push
addr16
or
sub
push
sbb
add
sbb
mov
and
add
mov
inc
ja
sub
adc
das
pop
adc
and
loopne
stos
stos
pop
sub
mov
retf
retf
inc
xchg
lods
shr
sbb
or
rcl
and
push
mov
and
add
mov
mov
neg
xchg
mov
mov
dec
cmp
mov
outs
nop
enter
cmp
jno
sub
push
push
push
xchg
pushf
jge
fdiv
ror
xchg
or
sub
sub
inc
mov
test
repz
repnz
mov
xor
fstp
call
sbb
(bad)
jae
and
jae
inc
xor
add
xchg
cmps
and
jp
cmp
add
jmp
shl
loop
jno
adc
jl
xor
in
popf
mov
loope
sub
ficom
rcr
xchg
add
sahf
jne
jo
xchg
jle
hlt
xchg
or
xchg
mov
mov
movs
inc
mov
jnp
out
popf
push
pop
mov
popa
or
cmp
jo
imul
mov
jle
push
lahf
not
loope
mov
inc
add
sbb
add
mov
cld
mov
into
mov
repnz
ds
sub
pop
xor
pop
mov
cwde
mov
cmp
fst
imul
test
rcr
pop
fneni(8087
mov
pop
icebp
add
fist
and
or
call
push
push
pusha
lods
push
outs
xlat
mov
pop
mov
ss
or
add
mov
fstp
fisub
cmps
jge
lods
(bad)
mov
jns
push
sbb
jno
pop
or
aam
leave
push
in
(bad)
mov
dec
inc
pause
jno
jl
pusha
in
xchg
push
out
pop
mov
call
out
fisub
dec
push
inc
repnz
jb
mov
fld
xchg
push
mov
fmul
xchg
into
or
pop
les
inc
mul
jno
mov
ret
leave
fsubr
inc
sbb
mov
sub
xchg
loop
fcmovbe
aaa
add
std
in
aam
scas
inc
call
pop
nop
xor
or
or
inc
mov
mov
pop
mov
arpl
or
popa
pop
jae
push
mov
inc
jge
mov
ins
cmps
pop
cmp
hlt
inc
or
retf
test
out
gs
jae
dec
xchg
pop
(bad)
mov
xor
dec
pop
das
test
inc
xor
mov
clc
jb
stos
loopne
ins
cmps
adc
sbb
(bad)
sti
mov
shl
les
adc
push
mov
lock
inc
fimul
xchg
lock
xchg
(bad)
xor
(bad)
popa
cmp
stos
cmp
out
lods
pop
cld
xor
lock
mov
cs
adc
cdq
leave
and
dec
sub
ss
inc
popa
jmp
jb
bound
cmp
aas
push
mov
mov
jecxz
mov
and
pop
xchg
pop
jge
adc
ror
shr
inc
mov
inc
sbb
movs
stc
aad
push
dec
mov
js
pop
sub
stos
adc
jge
sbb
stc
fidiv
frstor
or
fwait
(bad)
fisttp
mov
inc
xchg
jmp
dec
fld
bsr
push
mov
stos
lods
xor
popa
mov
in
int
mov
xchg
cwde
dec
cmp
jns
fwait
leave
or
fsubr
sbb
enter
jae
stos
ins
mov
mov
loop
lea
mov
pop
shl
aad
jmp
jmp
aad
cwde
sbb
(bad)
jns
push
imul
into
add
mov
lods
cmp
aad
loope
xlat
je
dec
or
mov
out
mov
adc
stc
xlat
cmp
cmp
into
leave
cmps
outs
clc
popa
repz
sahf
in
aaa
push
ss
test
stos
stos
jo
dec
adc
and
mov
adc
xchg
cmps
xor
(bad)
fwait
cs
fistp
nop
int
mov
ss
retf
call
pop
xchg
push
pop
cmp
(bad)
cli
outs
cmp
mov
scas
or
imul
int3
or
not
sbb
jecxz
fisubr
fwait
push
fmul
cvtpi2ps
dec
dec
mov
add
xor
rcr
sbb
ret
xchg
pusha
dec
inc
jb
mov
inc
dec
inc
stos
mov
ins
cs
clc
aaa
pop
retf
test
jl
cmp
mov
sbb
inc
push
rcl
add
ds
in
pop
cld
je
scas
adc
out
sbb
test
rcr
inc
adc
scas
jo
cmps
add
inc
sub
int3
in
xor
push
xor
lods
mov
movs
push
pop
shl
jb
nop
aas
xor
shr
jle
(bad)
and
mov
js
dec
sbb
mov
cmp
jmp
out
and
outs
pop
and
sbb
xor
mov
sbb
mov
fadd
cli
jg
lods
inc
data16
dec
aad
ror
mov
mov
lahf
sbb
cmp
or
call
cmp
xchg
outs
push
dec
cmp
pushf
ds
cld
addr16
shl
stc
rol
(bad)
(bad)
fwait
cdq
outs
or
sbb
lock
add
xor
xchg
jge
dec
xor
mov
cmp
pop
int
pop
out
int
xor
push
sub
div
pop
push
mov
cmovbe
mov
push
dec
mov
and
jae
xlat
add
inc
lock
push
and
hlt
dec
sbb
add
cwde
push
jbe
cmp
add
sub
xlat
mov
adc
es
(bad)
test
neg
cmps
and
(bad)
dec
scas
stos
or
jo
jnp
xor
aaa
sbb
add
je
or
sub
jp
inc
rol
pop
pop
hlt
sbb
jmp
jae
je
sbb
mov
cmp
sti
push
mov
ret
pop
or
xchg
xlat
mov
pop
popf
push
sub
div
outs
aad
test
das
adc
ins
inc
sahf
inc
loop
fsubr
mov
mov
dec
or
ja
ins
inc
shl
cmps
rol
xchg
fiadd
sub
test
xchg
(bad)
fldenv
test
cmp
test
sub
outs
inc
test
shr
sub
xchg
add
call
outs
cdq
mov
scas
dec
sbb
fisubr
mov
cmp
jmp
mov
(bad)
fst
aas
xor
(bad)
push
sbb
mul
cmp
xchg
sbb
(bad)
push
rcl
xchg
nop
cmp
adc
mov
mov
aas
add
ins
mov
mov
in
aaa
push
leave
enter
jne
mov
dec
sbb
xor
test
jae
scas
adc
mov
idiv
pop
mov
mov
out
mov
adc
xchg
xchg
pop
xchg
inc
cmps
rol
cmp
ror
dec
or
mov
add
jge
mov
mov
inc
lds
(bad)
lds
shr
cmps
jle
out
mov
mov
push
jmp
cs
add
mov
bound
ins
dec
(bad)
clc
sbb
or
mov
out
xor
sub
scas
fiadd
dec
push
dec
mov
inc
pop
pop
(bad)
xchg
jle
push
cwde
fcomp
jmp
mov
fs
xchg
stos
repz
mov
movs
test
out
mov
and
mov
rcr
movs
cmp
jbe
xchg
xchg
adc
fcompp
fcom
sbb
pop
xlat
outs
inc
lods
adc
adc
or
jge
loopne
nop
fcomp
jbe
add
pop
cdq
xchg
repz
jno
or
xchg
mov
test
icebp
rcr
div
aas
xor
out
sti
out
test
dec
mov
mov
or
mov
dec
clc
sub
sti
push
mov
push
outs
mov
mov
add
iret
stos
enter
ret
mov
sub
(bad)
sar
test
push
(bad)
dec
iret
mov
shl
pop
daa
inc
enter
int3
repz
or
dec
ja
cld
inc
int
lods
push
inc
pop
cld
(bad)
sub
mov
cmps
cld
jne
mov
ror
push
loope
mov
inc
aam
cs
or
and
mov
pop
and
xchg
ret
xor
pop
mov
or
ret
lods
mov
int
shr
outs
mov
push
pusha
pop
and
jmp
push
je
int
call
neg
test
test
cdq
sbb
fdiv
mov
(bad)
les
outs
and
popf
mov
bound
push
or
xchg
outs
bnd
rcl
aaa
dec
lds
inc
xor
and
loope
pop
js
jb
aam
xchg
xor
arpl
adc
xor
pop
adc
xchg
sub
dec
je
pop
out
and
frstor
loope
movs
inc
std
adc
shr
cmp
int
xor
mov
cmp
call
inc
add
xor
push
mov
jp
shr
sbb
mov
xor
adc
mov
aas
push
dec
adc
jo
in
fild
sar
add
cmp
mov
sbb
lods
(bad)
call
sub
push
jno
test
repnz
test
and
fwait
xor
sbb
adc
pop
into
retf
ss
pop
fbld
ret
jb
push
jmp
retf
gs
adc
push
icebp
rcl
pop
xor
ins
ret
xchg
jecxz
jae
loopne
int
test
cmps
ins
ror
fcmovu
jb
cmp
(bad)
cwde
fchs
dec
jp
sub
pop
mov
scas
inc
ds
fbstp
mov
sbb
ss
test
ds
sahf
cld
mov
fimul
sub
jg
push
fstp
lods
les
sub
lea
in
in
fcomp
inc
pop
cmc
xor
sbb
xchg
movs
jge
pop
sbb
sti
daa
std
adc
push
sahf
(bad)
mov
or
or
cs
ins
pop
rol
or
(bad)
gs
test
mov
int3
cli
sbb
loope
dec
jmp
(bad)
mov
pop
lock
add
loope
pop
dec
out
je
loop
popa
cmp
das
es
test
(bad)
fidiv
daa
and
mov
retf
and
pop
pop
mov
dec
in
push
stc
movs
and
pop
loop
jb
mov
idiv
xlat
es
cmp
sbb
jo
fs
jne
push
xchg
add
bound
lods
pop
jns
sub
xchg
mov
sbb
popa
inc
jge
test
or
jp
test
cmp
ret
mov
xor
inc
mov
mov
jb
mov
sbb
aad
xor
or
push
call
xor
dec
pop
fsub
je
mov
loopne
jno
sbb
xchg
jle
cmp
shr
sub
out
jp
push
mov
sub
retf
pop
cwde
stos
pop
in
mov
adc
je
(bad)
mov
call
ror
in
xchg
mov
outs
add
pop
loop
and
bound
pop
jns
xchg
(bad)
icebp
jge
imul
pop
pusha
in
mov
dec
mov
sub
popa
(bad)
adc
jne
push
into
mov
(bad)
adc
mov
mov
jmp
ds
xchg
push
ins
(bad)
stos
ror
nop
jl
in
ds
xchg
int3
xchg
push
push
mov
push
mov
jge
and
shl
sahf
mov
std
retf
pop
mov
mov
daa
sub
ret
popa
std
xor
mov
add
sub
imul
sbb
dec
jp
fld
movs
rcr
jle
ja
dec
push
mov
aam
push
add
push
xchg
push
jp
dec
(bad)
sub
das
je
scas
adc
stc
test
add
jbe
lea
mov
add
hlt
inc
sub
leave
fs
jno
cwde
jno
in
push
add
outs
pop
pop
les
pusha
and
cmp
adc
and
xor
lods
jecxz
xor
pop
loop
ins
xchg
sub
mov
movs
sub
sub
bound
repz
mov
loopne
dec
loop
loopne
jmp
int
mul
das
push
dec
leave
inc
push
mov
mov
add
mov
mov
xchg
cmc
and
mov
cmp
cmp
mov
mov
popa
inc
fdiv
xchg
rcr
add
and
pop
rol
imul
cwde
popf
nop
pop
es
aas
adc
test
mov
fwait
clc
pop
retf
mov
retf
jg
cmps
sub
cld
ss
call
push
mov
push
push
inc
fcomi
in
xchg
ret
ds
xchg
rol
xchg
jae
out
(bad)
adc
outs
push
sbb
push
xor
outs
add
sar
xor
outs
repz
cli
inc
(bad)
scas
fld
or
xchg
lahf
out
int
pop
xchg
sub
cmp
lahf
mov
push
int
xor
popa
xchg
lea
les
sar
cmp
sbb
in
cwde
scas
add
out
push
dec
loopne
imul
cmps
adc
and
jmp
loopne
(bad)
mov
mov
out
xor
cmp
in
cmp
pop
mov
inc
add
int
push
ret
ins
(bad)
mov
inc
dec
test
sbb
fistp
xor
lahf
test
test
jo
out
call
ss
mov
popa
push
imul
loope
inc
fmul
or
add
jo
adc
test
push
jge
mov
nop
fcmovne
inc
adc
(bad)
push
jno
call
js
inc
or
(bad)
jns
lods
sub
sbb
inc
dec
xchg
or
ins
cmp
(bad)
rep
clc
mov
daa
and
pop
inc
fwait
in
iret
push
mov
mov
pusha
jno
scas
pop
jecxz
push
pushf
mov
mov
adc
jmp
jns
test
mov
inc
fadd
jno
mov
sahf
sub
xor
sar
repnz
adc
das
add
jecxz
xor
(bad)
push
ret
xchg
xchg
mov
cmp
xchg
cmp
into
add
jp
call
push
push
sub
frstor
sbb
out
movs
sti
aam
add
arpl
cmc
ja
int3
push
into
or
imul
mov
jg
mov
test
sahf
cdq
das
jno
and
push
xor
add
aam
or
std
push
or
cld
ror
les
(bad)
out
inc
hlt
sbb
rol
imul
test
push
movs
retf
ins
out
xor
hlt
das
cwde
dec
cmp
add
cmp
cs
mov
out
lds
jno
shr
push
ficom
jmp
sbb
in
push
add
lock
xor
sub
clc
push
fisubr
cmp
sbb
shr
sbb
or
fist
mov
mov
stos
xlat
mov
iret
test
adc
jp
and
dec
sub
sub
mov
mov
push
ds
sbb
and
repz
inc
test
icebp
fild
ret
cmp
daa
std
pop
enter
data16
push
cmp
pop
cmp
lods
hlt
xor
bound
jg
je
pop
jne
in
sar
and
(bad)
pop
cld
into
xor
sbb
or
jae
in
or
cmp
sub
sbb
pop
mov
jg
fwait
xchg
fbld
dec
inc
cld
push
push
inc
pop
(bad)
cmps
das
push
gs
int3
data16
das
push
adc
or
icebp
push
mov
mov
dec
out
push
pusha
je
mov
pop
inc
sahf
sbb
(bad)
pop
sbb
(bad)
jecxz
add
push
dec
mov
ret
xor
cmp
push
cmp
imul
mov
inc
add
lahf
sub
add
xchg
xor
or
fnstenv
leave
clc
fsubr
adc
(bad)
push
inc
out
test
arpl
pop
mov
push
retf
cdq
cvttps2pi
cwde
mov
stos
push
mov
mov
imul
jmp
jne
jnp
sar
mov
adc
mov
nop
sbb
movs
cmp
test
cmc
test
add
xor
jmp
fnstcw
cli
mov
cmp
mov
inc
arpl
mov
mov
dec
stc
scas
fisub
mov
ficom
jbe
int3
in
mov
dec
jg
lahf
imul
inc
push
jae
adc
fild
inc
jmp
addr16
iretw
pop
imul
inc
xor
mov
popf
scas
jb
in
mov
dec
fnstcw
cmp
repnz
repz
cld
add
adc
push
lahf
mov
jns
cmp
mov
outs
adc
adc
loopne
mov
rcr
leave
fdivr
jo
fisttp
mov
dec
mov
inc
sbb
dec
mov
rcr
nop
fidiv
jne
add
clc
mov
mov
inc
pop
mov
or
fsubr
cmp
test
mov
sub
sub
aam
inc
push
mov
dec
imul
(bad)
fidiv
das
mov
jge
or
mov
push
inc
pusha
push
packsswb
add
call
jmp
aad
clc
cmp
xchg
ins
jb
aad
into
mov
adc
bound
sbb
push
pop
adc
outs
xchg
cmp
lock
add
fdivp
gs
lahf
lods
jmp
push
and
fadd
out
ss
cmc
fld
icebp
cmp
or
nop
ja
pop
and
retf
dec
mov
mul
and
mov
mov
jmp
ficomp
cli
mov
mov
pop
pop
xchg
aaa
xchg
mov
pushf
inc
jmp
push
cmp
and
ja
mov
ds
jg
fcomp
ds
fadd
mov
fwait
jns
jo
in
int
mov
xchg
or
daa
out
jg
repz
and
sub
(bad)
jmp
sub
arpl
xor
loopne
mov
pop
mov
lock
cmp
imul
inc
test
nop
sub
ror
xchg
test
mov
test
retf
pop
addr16
inc
and
inc
test
mov
jl
out
mov
test
push
cmp
sub
aad
movs
adc
or
mov
dec
xlat
add
ret
pop
jne
popa
in
and
(bad)
xchg
ins
(bad)
stc
adc
ror
bound
loope
addr16
xchg
lea
test
popf
jle
xchg
sbb
and
shr
call
mov
cs
pop
fistp
pop
jmp
adc
jl
mov
xor
out
mov
sub
jmp
pusha
dec
and
lahf
sub
and
ins
in
xchg
mov
mov
mov
pop
or
out
sti
push
fild
inc
lock
dec
mov
mov
and
movs
sub
test
scas
pop
add
sbb
xchg
rcl
dec
data16
inc
pop
cmp
dec
jns
push
push
inc
xchg
mov
out
pop
cwde
or
pop
jmp
cs
(bad)
in
push
pop
gs
and
cmps
cdq
mov
cmps
jg
imul
xor
push
adc
out
add
imul
out
dec
pusha
xor
popa
in
xchg
push
dec
or
sub
daa
fbld
jge
inc
mov
data16
push
sbb
add
mov
mul
(bad)
xchg
add
mov
xchg
push
push
sub
inc
mov
cmp
mov
xchg
cli
pop
mov
into
(bad)
fs
popa
in
xchg
std
popf
in
jne
dec
iret
and
sbb
cmps
iret
stos
fidiv
in
imul
pop
inc
loopne
adc
mov
enter
push
jecxz
mov
mov
pop
js
cld
gs
or
jbe
mov
xchg
dec
and
adc
cld
xchg
or
daa
loop
add
xchg
fiadd
in
movs
cld
push
or
xor
cmps
sub
sbb
push
adc
aad
cmc
fwait
mov
xchg
inc
push
xor
pop
dec
or
jne
xchg
cmp
sub
in
mov
sub
push
cmp
rcl
or
pushf
retf
test
int
aad
xor
icebp
jmp
xchg
rcl
test
jmp
enter
cli
jne
loopne
std
jmp
inc
ds
add
shl
cmp
gs
lods
jbe
or
retf
cdq
fisttp
inc
xchg
adc
aaa
mov
mov
out
out
sbb
mov
jns
adc
jmp
dec
outs
add
jae
cmps
push
jb
xor
iret
lds
xor
pop
mov
jns
stc
or
fs
lahf
add
push
sbb
test
test
aad
(bad)
lods
mov
lahf
lods
stos
pop
lods
jg
ins
ins
sbb
je
jmp
push
repnz
int3
and
xchg
mov
cmp
or
or
dec
mov
mov
loope
sub
ins
cdq
stos
mov
xchg
adc
add
mov
ficom
mov
xchg
pop
fs
pop
pop
mov
push
pop
adc
mov
jecxz
lea
stc
test
inc
lds
push
pop
dec
and
xchg
or
lds
lds
dec
mov
loop
ins
add
(bad)
mov
(bad)
ja
scas
jb
and
mov
push
leave
push
lea
xchg
adc
add
in
mov
repnz
bound
ret
ror
outs
aaa
jmp
imul
aaa
pop
mov
hlt
cmp
out
rcr
mov
daa
jns
call
jnp
adc
sbb
(bad)
mov
jg
lock
xchg
fstp
dec
push
fisubr
cli
jbe
inc
pop
inc
mov
inc
cdq
sub
sub
daa
in
(bad)
outs
mov
mov
sub
hlt
lea
mov
push
movs
in
fwait
inc
push
xlat
imul
pop
push
mov
mov
or
xchg
mov
mov
loop
xlat
test
mov
mov
mov
cld
cli
push
mov
stos
push
int
hlt
jne
or
jnp
sbb
inc
call
push
cwde
mov
rcl
dec
xchg
add
adc
sub
mov
das
cli
adc
ret
dec
retf
sti
add
and
ins
movs
pop
jmp
mov
pop
int
fld
jbe
mov
mov
ja
mov
jb
push
fsub
ds
or
and
mov
fdivr
jne
xchg
int
mov
shr
inc
pop
xor
sahf
ficomp
and
jl
push
nop
add
push
add
test
or
xchg
cmp
mov
lods
jl
mov
outs
ss
pop
and
std
pusha
or
call
por
add
mov
das
dec
neg
(bad)
push
or
pop
js
or
shl
cld
lahf
mov
pop
add
dec
js
or
jmp
sub
add
jns
jae
jb
or
enter
in
jns
idiv
inc
out
cli
arpl
repz
and
mov
sub
repz
fnstenv
pop
pop
loop
push
jnp
push
inc
add
jnp
stos
stos
inc
and
mov
movs
push
cs
mov
leave
and
ins
mov
sbb
lahf
shl
test
out
jmp
mov
out
jne
mov
adc
inc
cmps
loop
call
xor
cmp
inc
arpl
je
sahf
ss
jle
push
add
mov
sub
pop
push
daa
popa
xchg
enter
std
iret
push
ja
push
int3
rcl
pusha
js
inc
mov
aad
div
mov
sub
or
dec
(bad)
gs
jbe
pop
in
sqrtps
cwde
adc
cwde
xchg
push
pop
movs
inc
mov
retf
add
or
sub
rcr
aad
dec
sbb
fwait
push
(bad)
push
sbb
add
aas
jle
test
sti
lea
out
(bad)
jb
loop
jmp
mov
gs
inc
mov
js
test
add
mov
cs
dec
mov
mov
ins
sub
hlt
dec
sub
test
(bad)
inc
loopne
sub
mov
cmp
cmp
mov
daa
mov
xchg
ret
pop
adc
mov
leave
imul
dec
icebp
clc
sub
cmp
and
in
in
(bad)
mov
hlt
jb
push
sub
loopne
in
or
pop
add
or
sub
jg
int3
jbe
cmp
out
mov
imul
add
xchg
dec
mov
xchg
pop
add
mov
xchg
out
xchg
iret
mov
(bad)
mov
cdq
or
inc
les
test
ds
ret
xchg
adc
ins
sub
nop
cmps
mov
mov
pop
popa
(bad)
and
push
or
out
jns
jns
adc
xlat
cmp
dec
pop
xchg
(bad)
lds
push
jbe
stos
daa
jecxz
add
verw
fsubr
daa
adc
mov
ret
or
and
dec
push
in
lds
push
add
outs
push
push
fistp
shr
xor
mov
dec
call
jne
jl
fbstp
jb
ja
daa
cmp
lods
mov
fisttp
sub
dec
cmp
jne
xchg
add
mov
cmp
data16
ret
push
mov
cmc
push
mov
aad
sbb
loop
mov
xor
xor
loope
xor
outs
inc
clc
ins
inc
cli
xchg
mov
sub
pop
jb
ret
stos
sub
js
retf
inc
lahf
aas
xor
sbb
popa
repz
cld
and
loope
bound
pop
stc
mov
adc
dec
loopne
sar
xchg
jo
ret
add
sti
sub
js
mov
das
and
ret
shl
mov
pop
hlt
les
cmp
xchg
arpl
and
adc
ror
addr16
adc
and
adc
popa
cmp
sbb
xor
push
arpl
iret
inc
aas
call
mov
sbb
popf
rol
sub
jle
jnp
rol
mov
dec
cmps
push
jp
and
push
inc
add
fwait
inc
cmp
add
mov
cmp
(bad)
xor
dec
fwait
rcl
fnstenv
addr16
mov
mov
retf
pop
pusha
add
test
sbb
clc
(bad)
jl
adc
pop
pusha
mov
push
cmp
jp
and
pop
and
xchg
lds
mov
sbb
(bad)
hlt
mov
jge
and
push
xchg
xor
sti
dec
inc
jo
jmp
repnz
call
cli
mov
jb
sub
sti
mov
ret
pop
stos
pop
pop
mov
push
sar
enter
(bad)
(bad)
outs
inc
xchg
xchg
imul
ja
push
outs
jg
in
mov
pop
hlt
dec
pop
ret
pop
bound
pop
mov
dec
retf
dec
add
or
push
in
xlat
push
xlat
idiv
es
mov
jecxz
jns
xlat
pop
ja
leave
xchg
jg
pusha
icebp
ret
adc
sub
mov
mov
icebp
mov
in
fadd
jmp
int
outs
pop
pushf
xchg
dec
ins
aad
jl
or
popf
mov
jno
fdiv
ficom
dec
jb
xor
pop
cs
xor
push
test
pop
pop
add
fisttp
das
test
jg
add
sub
jp
add
fdiv
inc
lea
jle
ds
cmp
adc
or
cmp
div
out
xor
jnp
sbb
ret
xor
std
or
jmp
or
jmp
adc
ja
lods
inc
inc
aad
call
in
popf
mov
scas
out
jnp
fsubr
into
push
or
mov
popf
pop
push
(bad)
cmp
push
push
inc
sub
iret
pop
cdq
in
sti
xor
es
clc
dec
jne
add
inc
or
inc
neg
cmp
fisttp
clc
add
adc
push
arpl
movs
mov
lods
and
aad
ins
push
push
jae
pop
fwait
clc
ins
fsub
repz
cld
or
and
xor
jge
pop
cmp
aad
inc
int3
adc
int
std
cmp
cmp
sbb
adc
jecxz
lods
and
mov
bound
and
push
cmp
cmps
sub
or
cmc
or
fmul
xchg
sub
test
sub
jmp
test
pop
mov
cmps
jle
fldenv
mov
push
icebp
pushf
pop
xchg
xchg
add
mov
and
test
and
pop
jnp
jbe
pop
cmp
mov
std
test
aas
ror
xor
out
mov
xor
pop
cmovl
cdq
mov
xchg
adc
or
fisubr
mov
cdq
dec
test
fistp
cmp
add
xor
mov
cmp
cld
outs
call
mov
push
outs
ficom
mov
pop
and
xchg
inc
and
aam
sub
imul
add
or
sbb
in
push
dec
js
xchg
jo
fwait
imul
fdivr
or
and
popf
pop
sar
lahf
fcmovu
sub
out
(bad)
stc
push
aam
mov
jecxz
stc
inc
push
sahf
mov
xor
jmp
inc
pop
pop
push
or
test
xchg
lods
aam
and
fldcw
je
inc
les
cdq
inc
jno
mov
xchg
sbb
cmc
mov
adc
lahf
mov
pop
jge
ffree
inc
(bad)
xchg
xor
pop
fsub
lods
scas
fs
sub
xchg
add
sub
cdq
and
xlat
xchg
dec
das
cmp
sbb
test
cs
sub
mov
inc
ins
and
(bad)
ins
out
mov
sub
je
push
in
in
mov
scas
or
inc
cmps
ins
lahf
sbb
inc
cs
push
in
mov
pop
repnz
movs
aaa
or
jns
enter
ja
bswap
pop
ins
push
ret
fcom
mov
fdivp
mov
or
addr16
mov
loopne
mov
test
mov
neg
fild
push
arpl
sub
push
ror
les
jne
xchg
stos
sub
out
rcr
mov
js
icebp
push
outs
xchg
std
shl
arpl
int
cdq
cmp
cwde
cmp
jns
dec
push
jge
xchg
push
or
jns
dec
in
call
pop
outs
push
push
adc
es
outs
sub
scas
xchg
jnp
jae
cmp
pop
fs
push
mov
ret
sahf
cmp
pop
jecxz
xchg
sti
xor
jmp
add
cmps
adc
xor
fidiv
in
rcl
mov
cmp
test
sbb
rol
xchg
and
mov
or
sbb
and
jg
xchg
cmp
cdq
pushf
cmps
or
aaa
inc
mov
cli
mov
mov
push
inc
outs
add
jbe
shr
inc
test
cmc
pop
mov
cmp
pop
add
cmp
(bad)
inc
jge
xor
fcmovnu
inc
push
mov
fisttp
lahf
mov
je
mov
dec
sbb
sub
out
pop
and
mov
(bad)
bound
inc
aam
mov
pop
sar
mov
(bad)
movs
lds
(bad)
mov
pop
mov
cmp
ins
mov
retf
or
sti
popf
and
mov
or
mov
mov
mov
aad
push
xchg
gs
test
xchg
xchg
in
jecxz
or
mov
sub
xchg
pop
ds
xchg
ficomp
push
xchg
sub
std
retf
push
and
mov
or
fcmovbe
inc
enter
adc
(bad)
scas
ror
or
iret
ds
cs
sub
call
ret
cmp
(bad)
loope
xor
sbb
dec
jns
mov
mov
movs
mov
mov
xlat
xlat
xor
pop
and
pusha
lods
mul
add
mov
scas
jo
ror
pop
mov
je
out
or
cmp
int3
neg
out
jo
push
jns
dec
out
inc
cmp
lods
mov
sahf
pop
mov
mov
adc
adc
cmp
(bad)
rcl
mov
cmp
jge
(bad)
pusha
cmp
jbe
adc
mov
ja
inc
jle
cmps
inc
gs
(bad)
sbb
fs
mov
jge
mov
cmp
or
inc
call
and
fst
push
or
mov
inc
mov
mov
jne
adc
ret
xor
pop
add
adc
xchg
gs
cmc
or
adc
std
test
mov
outs
sbb
pusha
add
jbe
(bad)
mov
and
mov
repz
mov
das
lea
test
xor
rcl
sbb
xor
cmp
iret
and
call
lahf
and
rcr
popf
(bad)
daa
mov
neg
sbb
and
mov
and
rcr
jmp
push
sub
ficom
mov
movs
mov
cmp
pop
sub
test
enter
mov
je
jmp
in
fcomp
push
lods
nop
repz
repz
add
shl
std
lds
xchg
add
enter
rol
and
into
lahf
mov
lods
xchg
inc
ss
fimul
xlat
add
inc
mov
adc
ret
scas
sub
stos
pop
cdq
and
rol
push
ins
test
pop
add
pop
dec
lods
sar
mov
aam
aas
or
xor
loopne
outs
cli
addr16
fisub
mov
sbb
push
jne
std
ss
jb
adc
jns
sbb
adc
in
mov
sti
popf
out
sahf
jp
or
sub
push
and
das
leave
mov
mov
adc
mov
lods
jl
mov
in
push
mov
mov
xchg
cdq
cs
and
js
push
push
adc
shr
movs
cli
mov
sahf
neg
jmp
mov
jb
icebp
int3
ret
cmp
push
inc
mov
clc
inc
popa
cmp
jg
pop
ret
test
sbb
aaa
mov
lahf
cmc
push
jp
aam
jne
dec
xor
mov
iret
sub
sar
ins
imul
jno
std
xchg
jge
fstp
dec
aas
inc
pop
cwde
rep
adc
fnstsw
push
mov
inc
jmp
dec
shr
retf
(bad)
les
xor
sti
push
mov
lahf
pop
(bad)
xor
repz
xchg
popf
dec
stos
(bad)
test
in
call
pop
fcomp
arpl
jp
popf
pop
test
imul
sbb
(bad)
icebp
mov
lods
test
fnsave
inc
xchg
ss
fisubr
sbb
mov
push
and
ds
popa
rol
pop
pusha
test
mov
leave
aad
fdivr
xor
inc
sbb
jmp
ret
aad
xor
xor
inc
jno
cdq
xchg
xchg
ret
add
sbb
push
dec
xchg
popa
std
movs
mov
stc
call
mov
(bad)
or
sbb
jb
jne
and
(bad)
dec
xchg
lods
sub
xchg
shl
sub
in
pusha
mov
jno
jl
push
inc
mov
jo
mov
pop
lea
test
std
popa
into
xchg
pop
mov
stos
mov
(bad)
mov
test
popf
pop
push
iret
dec
in
sar
inc
int
test
std
aad
stos
xchg
mov
sbb
and
dec
je
mov
adc
add
jne
push
jns
(bad)
and
scas
test
sar
sub
sub
push
pop
push
jl
js
(bad)
adc
adc
adc
cli
in
jge
movs
push
neg
out
je
lahf
push
popa
pop
fwait
sub
movs
cs
inc
add
jne
xlat
fidiv
shl
sbb
mov
mov
stos
mov
adc
pop
sbb
jne
push
repz
(bad)
xchg
mov
lahf
pushf
xor
rol
inc
pop
lahf
jle
xor
mov
xor
repz
repz
fist
cmps
sti
add
pop
retf
ins
cli
add
cmps
mov
jle
dec
jg
xchg
or
and
xor
mov
mov
cmps
dec
and
push
pop
idiv
sub
mov
stc
cmps
xchg
loop
or
sbb
push
and
out
je
and
xchg
repnz
push
xchg
pop
fst
pop
xlat
jmp
loop
(bad)
fadd
jmp
js
mov
and
inc
aad
lea
(bad)
sub
shr
xor
mov
dec
pop
and
and
jp
popf
mov
hlt
xor
fdiv
xchg
and
in
movs
sub
dec
jae
pop
call
ins
or
out
xor
dec
and
jne
cmp
lock
fbstp
sub
adc
mov
push
mov
cmps
(bad)
in
xor
ins
push
inc
xchg
in
adc
inc
pop
enter
std
pushf
dec
std
aaa
or
mov
xor
push
inc
add
sbb
xchg
cwde
and
push
mov
pop
mov
jle
mov
xchg
sbb
jo
add
jnp
stos
shr
dec
cmc
mov
inc
sbb
and
dec
inc
push
xor
enter
sbb
sub
aam
jl
dec
xchg
pop
jecxz
add
stc
jp
loop
mov
jae
js
adc
sbb
ss
ret
push
je
add
push
aaa
cmp
jge
pop
jbe
pop
mov
mov
mov
repnz
in
jb
leave
test
mov
popa
fmul
mov
pop
xor
into
fldcw
xor
pop
add
sbb
aam
jb
es
xor
neg
jle
arpl
leave
jnp
sbb
mov
sbb
add
inc
fist
aam
sub
push
inc
arpl
xchg
inc
(bad)
rol
and
xchg
cmps
jp
cmps
rcr
adc
aas
fwait
into
and
pop
add
jmp
inc
mov
mov
xchg
bound
fwait
(bad)
jno
inc
imul
mov
test
push
arpl
movs
jle
adc
bound
xchg
iret
movs
add
test
retf
shl
push
(bad)
(bad)
rcr
sub
mov
cmp
and
shl
dec
repnz
je
les
fstp
(bad)
inc
mul
push
les
das
rcr
aas
call
lods
jnp
clc
jno
out
(bad)
push
lea
enter
sahf
cmp
cli
sbb
pop
mov
nop
jg
retf
js
mov
push
inc
out
das
dec
cwde
mov
add
xchg
xchg
xchg
xchg
sub
and
jmp
imul
outs
and
inc
add
fwait
fs
push
outs
cmps
pushf
jmp
fs
cdq
ins
out
or
dec
jae
sbb
xor
lea
xchg
out
xor
gs
pop
pop
push
push
mov
and
sahf
or
pop
dec
push
cld
pop
ins
iret
pop
imul
inc
jno
add
pop
xchg
loopne
inc
sbb
loope
jl
push
out
rol
and
xchg
sub
ss
jne
sbb
sub
adc
mov
cs
xchg
outs
mov
in
xor
push
inc
movs
out
add
es
cmps
ja
aad
adc
in
pop
stc
sbb
inc
mov
je
inc
cdq
test
cmp
retf
es
ins
jbe
lods
sub
dec
jo
add
mov
out
out
add
ss
or
ja
xchg
into
pop
in
push
cmp
shl
mov
(bad)
sub
fwait
mov
movs
and
scas
and
cmps
fistp
jno
clc
shl
and
mov
mov
mov
or
(bad)
movs
pop
push
jns
sub
jle
push
ror
sbb
mov
mov
push
push
repz
mov
bound
movs
neg
imul
pop
cmps
push
adc
mov
repnz
xlat
mov
dec
jl
cdq
fld
cdq
cmp
gs
pop
cdq
(bad)
xchg
cmp
cwde
aad
xchg
pop
xchg
mov
pop
jne
outs
out
mov
call
push
dec
mov
xchg
mov
xchg
movs
aam
xchg
mov
loopne
retf
ss
ds
fmul
mov
or
(bad)
cmpunordps
jg
or
not
dec
push
or
jns
std
push
xor
test
out
daa
std
push
push
add
fs
cli
into
loope
push
ret
mov
pop
scas
mov
in
(bad)
dec
dec
inc
lea
setbe
mov
cmc
and
xlat
into
and
push
inc
add
or
push
dec
in
jne
push
push
cmp
xchg
(bad)
sub
adc
lock
lods
jb
cmps
aas
ja
call
adc
add
mov
jo
pushf
inc
inc
aas
rcl
push
jle
nop
inc
inc
mov
daa
(bad)
das
lahf
cmp
push
les
jle
jb
jmp
push
in
adc
stos
je
sbb
xor
mov
adc
mov
xchg
mov
fistp
push
lods
ja
mov
dec
enter
das
das
fs
rol
ret
hlt
add
mov
inc
xchg
mov
dec
retf
jecxz
jne
jbe
popa
add
lock
jnp
rcr
and
leave
mov
lea
mov
addr16
jne
adc
retf
or
jecxz
sbb
xlat
cs
test
xchg
jns
imul
inc
ret
pop
loop
xor
cs
inc
adc
enter
cmp
xchg
adc
push
xor
pop
imul
mov
ret
jno
cld
and
cmc
in
mov
pop
repz
iret
leave
sbb
dec
outs
cwde
into
add
imul
cmps
out
jle
clc
cdq
fwait
dec
dec
sahf
icebp
adc
mov
(bad)
cwde
in
rcr
movs
mov
jmp
pop
jge
cmp
push
jb
mov
push
pop
mov
push
lock
lock
stos
adc
jne
in
pushf
xor
ss
and
in
sbb
fcomp
sub
jmp
push
imul
adc
cmp
sbb
ss
inc
cdq
jbe
(bad)
repz
fcmovnb
xor
shr
stos
repz
jle
aad
push
cmc
xchg
(bad)
sub
push
aaa
(bad)
mov
push
pop
ret
pushf
aad
xor
mov
push
ja
xor
sub
fmul
repnz
sub
fistp
sbb
push
or
leave
pop
cmp
inc
(bad)
adc
das
or
ret
pop
sub
or
ja
ins
or
sbb
jle
mov
shl
mov
aam
sub
cmp
sar
sti
popf
xor
stos
or
jns
in
push
and
test
dec
mov
mov
sbb
mov
dec
push
cli
repnz
sub
dec
xor
xchg
leave
outs
xor
in
dec
fs
or
scas
lods
sub
jns
out
icebp
cwde
sbb
xor
push
aad
xchg
push
es
stos
stos
xchg
fxch
pop
mov
cmp
jge
dec
sbb
sbb
mov
mov
dec
mov
popf
add
add
out
jno
(bad)
dec
and
icebp
mov
xchg
pushf
jb
cmc
ss
mov
jmp
dec
xchg
or
xchg
add
not
add
mov
mov
cdq
mov
adc
adc
pop
movs
xor
pop
lds
add
xchg
xchg
sub
shl
mov
push
cs
cmp
(bad)
cmp
dec
outs
popf
and
add
in
hlt
out
fs
mov
cmp
lods
outs
pop
ret
sbb
imul
std
stos
push
inc
out
jl
xchg
mov
cmc
(bad)
jno
mov
(bad)
mov
ins
jge
mov
aas
stc
push
rcl
dec
aam
mov
fnstcw
lahf
xor
sub
dec
dec
adc
xchg
(bad)
std
std
je
sbb
cmps
(bad)
frstor
cmp
xchg
js
aam
fldcw
cmp
mov
or
push
sbb
mov
test
mov
mov
sar
push
jo
cmp
fimul
repnz
mov
shr
push
les
sbb
call
movs
dec
or
sub
jne
loopne
or
cmp
sahf
jnp
mov
popf
inc
push
jb
mov
xor
aaa
and
mov
cmp
mov
sbb
adc
pop
pop
retf
adc
and
push
xchg
lds
mov
and
xchg
xlat
push
adc
mov
xchg
inc
setg
xor
xchg
ins
loop
scas
sub
es
mov
sub
inc
popa
xchg
mov
les
jecxz
out
into
movs
or
adc
jns
shl
pop
shl
sbb
imul
xor
pop
test
xor
adc
or
adc
dec
mov
or
(bad)
adc
mov
pop
cmps
stc
mov
retf
mov
cld
jae
inc
neg
add
aam
shl
and
jg
ret
push
data16
(bad)
hlt
stc
mov
mov
mov
sbb
push
ret
dec
mov
test
das
jnp
adc
xchg
inc
inc
push
jg
mov
mov
adc
sub
outs
(bad)
adc
gs
aaa
or
mov
mov
imul
inc
std
mov
scas
cs
sub
sar
jno
pop
sbb
add
jae
mov
push
cmp
sub
jp
icebp
adc
push
nop
les
movs
jmp
mov
sub
pop
out
arpl
in
inc
jecxz
fidivr
mov
fcomp
lock
out
jmp
push
xor
aad
stc
dec
dec
adc
pop
mov
xor
mov
pop
ds
and
jo
in
add
shl
add
(bad)
mov
mov
add
pop
mov
enter
(bad)
jmp
hlt
cmps
movs
cmps
fdiv
mov
or
aam
jmp
jno
jg
cwde
call
dec
pop
lds
out
adc
dec
out
loopne
(bad)
cmps
inc
ss
sub
dec
cmp
mov
retf
xor
jl
addr16
cmps
setl
stos
inc
pushf
outs
fdivr
sbb
push
sub
daa
aaa
out
scas
adc
arpl
sbb
aas
adc
stos
ins
mov
mov
mov
cdq
cli
push
or
test
mov
adc
sub
sub
rcl
add
add
jbe
add
fimul
push
mov
es
stc
cmp
adc
adc
push
sub
inc
in
dec
fwait
aas
xor
not
int
cmp
jnp
jne
loope
mov
jb
call
add
push
outs
push
test
cwde
mov
ins
sbb
push
xchg
movs
hlt
or
mov
retf
ret
pusha
das
mov
add
push
test
scas
(bad)
push
fisttp
inc
jp
cmp
repz
mov
fwait
mov
add
jne
xor
lea
test
inc
mov
mov
shl
xor
call
imul
cmp
imul
test
fidivr
cmp
inc
push
cdq
and
cmps
aas
sar
jb
sbb
mov
test
hlt
imul
push
pop
mov
and
push
je
jge
dec
lea
inc
jg
or
xchg
adc
dec
mov
lods
fadd
arpl
jl
stc
call
jae
sub
into
xor
cld
std
cld
or
push
shr
jno
cmp
fucomi
adc
iret
cli
push
rcl
lock
inc
(bad)
call
test
jnp
in
jg
jo
inc
cmp
and
cmps
sbb
mov
std
pop
into
adc
sbb
mov
push
in
mov
and
adc
lods
sbb
mov
xchg
pop
xchg
or
jp
inc
into
fild
cmps
mov
sahf
or
fs
lods
mov
dec
retf
sbb
mov
xchg
xchg
push
jae
out
leave
imul
aas
lods
adc
(bad)
mov
movs
paddusw
fist
loop
ins
fwait
repnz
mov
and
push
out
stos
xchg
ins
inc
push
sahf
mov
mov
in
out
inc
fstp
and
cmp
push
or
push
scas
or
push
ror
clc
xchg
enter
add
mov
inc
call
imul
xor
pop
in
dec
or
push
fidivr
add
push
adc
add
push
movs
stos
mov
mov
xlat
and
in
inc
aas
xchg
push
cli
stc
mov
pop
push
outs
or
out
dec
out
pop
mov
sbb
pusha
scas
sbb
xchg
add
dec
popf
fst
jle
aad
dec
ins
fidivr
sbb
sub
xor
push
adc
out
inc
sbb
sbb
rcr
nop
mov
sbb
mov
inc
xchg
inc
mov
arpl
fs
es
fisub
mov
push
icebp
jno
inc
pop
push
pop
hlt
loopne
sub
outs
ror
scas
mov
cmc
mov
mov
test
imul
dec
imul
aaa
mov
icebp
mov
in
in
jg
push
jns
cmps
jge
cmps
inc
pop
and
loope
xlat
mov
adc
mov
xchg
jbe
xchg
xchg
cmp
test
push
cmp
cmc
inc
fst
adc
(bad)
jle
icebp
ja
in
push
test
or
(bad)
sbb
xor
movs
pop
push
jns
clc
dec
retf
cmp
fmulp
cmp
mov
adc
test
mov
inc
ret
add
push
dec
xor
sar
out
inc
push
imul
test
out
inc
dec
rcr
ret
stos
in
lods
mov
mov
shr
push
and
shr
test
jmp
movs
fwait
jl
pop
mov
mov
jmp
repz
mov
jmp
ror
jb
movs
and
sub
inc
mov
mov
mov
cli
dec
outs
or
clc
in
pop
and
add
mov
xchg
leave
add
and
and
jae
or
lods
arpl
inc
imul
pop
adc
leave
sbb
dec
sbb
cwde
jecxz
test
jp
cmc
imul
cmp
iret
gs
adc
leave
(bad)
xchg
mov
xor
enter
sub
mov
addr16
jmp
and
mov
xchg
cmp
mov
xchg
das
cmp
cmp
loopne
cmps
fistp
add
add
adc
xor
sub
dec
in
xchg
outs
sar
movs
fdiv
pop
mov
bnd
xor
imul
inc
mov
push
dec
loopne
mov
push
(bad)
and
lock
pusha
mov
mov
mov
out
jns
mov
sub
mov
fisub
cwde
mov
cmp
xor
mov
xor
adc
in
in
pop
xlat
dec
or
int3
or
(bad)
mov
cld
cmp
dec
cmp
out
push
mov
push
jmp
mov
jge
mov
retf
(bad)
mov
jo
and
scas
mov
mov
fnstcw
popa
fimul
mov
adc
or
cmp
jo
mov
sbb
cmp
sub
push
sub
cmps
aas
xchg
clc
inc
xchg
cld
cmps
retf
cdq
scas
rcr
xchg
leave
cmc
add
das
cmp
cmps
cwde
xchg
(bad)
mov
push
fist
mov
add
sub
shl
mov
outs
or
pop
inc
or
cmp
loop
add
push
dec
lods
inc
sbb
(bad)
jbe
shl
mov
sbb
xchg
cmps
xor
pop
cmp
xor
(bad)
jmp
fld
jmp
aam
fdiv
popf
int
scas
dec
cmps
xchg
fdiv
cmp
pop
xor
(bad)
hlt
int
dec
mov
jmp
loope
mov
jo
jge
mov
mov
cmp
dec
mov
mov
outs
push
dec
mov
add
xlat
movs
sbb
in
add
mov
rcr
stos
loop
(bad)
or
(bad)
and
clc
xchg
xor
popf
popf
nop
lahf
fdiv
mov
stos
mov
gs
push
sbb
inc
in
outs
jnp
mov
fsub
icebp
or
jns
jmp
or
jg
add
sub
xchg
cmp
cli
addr16
push
inc
sub
jbe
sete
add
shl
ret
inc
push
sbb
outs
repz
dec
mov
call
xor
cmp
out
loopne
sbb
mov
mov
jp
cwde
adc
out
mov
call
not
push
xchg
ss
jmp
adc
jge
mov
add
push
ss
sub
cmps
es
mov
sub
sub
and
outs
in
adc
push
lock
or
popf
jo
stos
and
jo
push
repz
imul
or
in
cmp
ds
and
or
rcl
jl
fmul
lods
stc
add
mov
rcl
ins
jp
mov
outs
sahf
xor
fidivr
sub
repz
sbb
iret
xchg
cmp
les
mov
sbb
pop
mov
aaa
lea
loope
scas
adc
call
enter
jmp
aam
aas
iret
pop
icebp
pop
cld
cmp
int
pop
adc
popf
or
out
jb
rcr
pop
ret
jl
retf
and
cs
push
sti
mov
int3
xchg
push
jge
loopne
jno
sub
mov
pop
std
fimul
adc
aam
sti
hlt
xchg
shr
fld
or
call
or
and
mov
dec
mov
fwait
(bad)
mov
popa
daa
shl
dec
dec
(bad)
and
dec
scas
shl
test
pusha
push
pop
ja
adc
add
inc
nop
call
popa
dec
mov
(bad)
sub
xchg
loope
adc
rol
test
retf
in
add
or
ins
and
hlt
adc
pop
movs
ret
fwait
bound
mov
out
js
pop
cmp
movs
pop
(bad)
in
rol
jae
lock
mov
jb
or
mov
mov
aad
pop
cs
inc
outs
jge
push
js
add
popa
aas
push
rcr
sti
cmovns
xchg
jg
add
cmc
mov
je
and
loope
xchg
add
icebp
push
movs
push
xchg
cmps
mov
call
std
ficom
push
and
scas
es
pop
(bad)
mov
imul
popf
xor
jbe
cmp
arpl
adc
cli
jmp
jns
lds
lea
push
dec
ret
mov
add
mov
sbb
call
mov
std
jns
jg
inc
mov
ret
xchg
mov
push
call
pop
mov
sbb
iret
adc
repz
mov
es
popf
(bad)
bound
mov
xchg
scas
mov
xchg
xchg
inc
mov
loop
into
xchg
or
dec
scas
xchg
and
lea
mov
imul
xchg
or
psubusb
push
adc
jmp
mov
enter
inc
test
test
dec
fs
cmp
scas
inc
mov
fild
pop
out
ret
mov
cmp
fmul
aas
std
test
leave
or
xchg
ror
mov
inc
sub
or
sub
(bad)
mov
in
shl
sbb
push
mov
mov
xchg
ficomp
inc
repz
cmp
xchg
nop
inc
mov
jno
imul
or
and
out
mov
mov
jmp
mov
loopne
pop
and
pop
verr
mov
rol
stos
inc
xchg
inc
xor
aam
aas
ret
push
aaa
sub
xchg
add
mov
push
inc
xchg
mov
sub
test
cld
push
xor
mov
and
mov
or
push
mul
mov
pop
in
fs
xor
in
popa
mov
mov
xchg
dec
aas
ret
dec
(bad)
shr
and
loopne
or
call
ret
loope
and
mov
cmp
out
pop
imul
fmul
ficomp
mov
jae
mov
mov
dec
xor
add
jae
clc
hlt
ds
shl
test
movs
leave
mov
inc
dec
mov
mov
(bad)
and
jb
cmps
xchg
lods
or
and
xor
push
out
xchg
and
movs
add
push
xor
int3
push
out
popf
mul
aam
icebp
sub
movs
jge
lods
mov
push
and
movs
mov
aad
mov
xchg
inc
daa
scas
xor
add
es
add
pop
rcl
adc
es
xchg
xchg
pop
inc
test
push
mov
mov
push
fld
push
js
movs
imul
inc
stos
add
call
popa
xor
cdq
arpl
adc
bound
call
shl
je
inc
stos
xor
inc
(bad)
popf
push
pop
int3
push
jecxz
fsubr
ret
cmp
xchg
xlat
jecxz
hlt
outs
mov
sti
aad
add
hlt
mov
cmp
imul
cli
aas
xchg
mov
pop
mov
dec
mov
ror
adc
inc
pop
in
outs
adc
pop
loopne
nop
popa
sar
xor
push
jb
push
jp
add
in
xor
jae
or
add
sub
sbb
xchg
mov
arpl
mov
mov
out
gs
xchg
or
add
in
inc
dec
and
inc
cmp
push
test
jmp
sbb
push
push
jo
test
shl
call
and
test
adc
mov
xor
jp
div
jmp
(bad)
imul
xlat
sbb
sbb
xchg
push
das
sbb
sbb
xchg
pushf
lds
pop
xchg
mul
outs
mov
add
rcl
jbe
ins
dec
jge
mov
nop
out
(bad)
jo
fstp
jle
jbe
pop
sbb
inc
and
mov
push
inc
adc
cmp
xchg
imul
inc
fs
pop
sbb
and
sbb
mov
xchg
lods
aam
xor
lods
xchg
mov
repz
mov
xchg
jae
retf
inc
mov
adc
call
or
mov
dec
int
sbb
or
ds
retf
and
mov
jno
or
push
or
or
loop
xor
xchg
retf
test
or
enter
mov
cmp
(bad)
xchg
mov
pop
(bad)
mov
mov
mov
xor
pop
cwde
mov
sbb
jns
dec
inc
dec
loop
fstp
mov
addr16
dec
cmp
aad
movs
push
fimul
xor
leave
(bad)
jmp
jmp
clc
cwde
and
ins
or
inc
mov
add
push
adc
jnp
jge
cmp
popa
aaa
inc
adc
sbb
jecxz
push
cmc
pop
div
adc
ret
ror
jns
jns
retf
and
or
or
out
xchg
dec
push
clc
out
sar
xchg
push
xchg
jg
and
push
call
fisub
mov
xchg
xor
(bad)
mul
out
add
or
(bad)
in
mov
sub
cmp
sbb
push
mov
xor
pop
and
push
mov
imul
sbb
outs
pop
push
test
arpl
popf
mov
push
psllw
fld
stc
sub
leave
les
mov
and
xor
enter
arpl
rol
mov
jle
dec
cs
pop
fsub
repnz
mov
stos
push
mov
dec
sbb
fcomp
push
(bad)
popf
scas
data16
test
mov
sbb
xchg
jecxz
outs
jge
cmp
imul
icebp
mov
add
pop
xchg
clc
xor
stc
call
and
and
mov
xchg
loop
and
sub
sub
rcl
cmp
jmp
fmul
(bad)
pop
mov
ins
sub
dec
mov
jg
mov
sbb
ja
stc
dec
dec
call
xchg
ins
cmps
adc
mov
sub
jbe
jle
js
lahf
je
gs
fisub
xchg
jle
or
nop
data16
out
nop
dec
xchg
cdq
out
mul
sbb
mov
fxch
xchg
nop
or
mov
popa
ins
inc
cmc
aas
bound
fadd
call
xchg
in
pop
add
push
in
sbb
mov
sbb
xchg
lahf
add
aad
lds
mov
imul
mov
mov
stc
es
jbe
pop
test
or
fimul
addr16
int
js
cmps
jp
mov
stos
or
inc
dec
push
jmp
retf
jge
ds
mov
mov
or
push
cmps
jb
ficomp
outs
outs
test
retf
retf
mov
or
retf
jmp
inc
out
nop
sbb
sbb
fmul
pop
lods
and
cdq
xchg
pop
jl
and
iret
das
and
or
ret
fidivr
adc
ret
test
add
loopne
pushf
pop
dec
mov
cmp
popf
ins
aam
pop
in
dec
dec
fcmovu
aad
push
jmp
mov
rol
ret
mov
pop
mov
and
mov
cld
sbb
test
xchg
movs
or
dec
pop
push
js
call
jno
adc
mov
xchg
and
sub
sub
mov
or
test
sbb
dec
push
sbb
and
mov
adc
and
sub
mov
rcl
sbb
sahf
mov
pop
jmp
sbb
cmps
mov
pop
jl
movs
jge
ffreep
loope
jno
std
nop
adc
add
cld
push
sbb
hlt
out
int
fucomip
pushf
popf
aam
add
xlat
arpl
jecxz
and
jecxz
xchg
outs
pop
xor
jecxz
aas
inc
into
add
xchg
xchg
mov
mov
mov
lea
cmp
mov
retf
xchg
cmps
xor
mov
(bad)
out
sbb
out
rol
jbe
sub
jmp
mov
popa
pop
cmp
mov
test
inc
out
or
loopne
mov
pop
(bad)
jnp
mov
and
fld
inc
and
dec
in
fwait
ds
mov
outs
bound
(bad)
jno
fs
mov
ror
adc
mov
dec
jmp
push
les
ss
mov
xchg
push
test
mov
into
enter
or
cdq
scas
cli
add
mov
test
mov
pop
test
xchg
pop
add
jne
(bad)
fisttp
es
xchg
sub
inc
push
push
dec
jb
xchg
ja
mov
and
or
out
sub
or
mov
repz
mov
les
neg
adc
(bad)
ja
les
sahf
adc
mov
jle
adc
lods
dec
jge
neg
jl
mov
fst
pop
add
stc
fld
cmp
dec
ret
add
add
aaa
jo
or
mov
dec
xchg
mov
(bad)
jmp
je
sub
inc
repnz
test
pop
shl
fldenv
pop
sub
mov
sub
pop
retf
test
push
aaa
dec
adc
xchg
xlat
xchg
out
lahf
punpckhwd
in
aas
(bad)
jg
dec
cmc
pushf
ja
push
les
cwde
lock
addr16
dec
mov
xchg
pop
fild
pop
fcmovne
jb
inc
mov
(bad)
in
cdq
sbb
and
pop
and
cmp
jg
jbe
loopne
and
lods
add
(bad)
jae
push
dec
xor
mov
sbb
(bad)
jae
fldcw
or
jae
sub
int3
jmp
and
test
mov
sub
loop
and
and
fstp
dec
test
sti
sbb
adc
sub
pop
dec
xor
xor
mov
mov
stc
shl
or
sub
int
rol
test
jnp
mov
and
or
fidiv
pusha
push
neg
cmc
bound
rol
xor
ret
jae
pop
jns
arpl
sub
out
mov
or
inc
cwde
retf
lahf
jp
sub
jns
mov
and
movs
xchg
cmp
push
mov
mov
cwde
test
call
fnsave
adc
ja
add
or
dec
xchg
xchg
scas
pop
jmp
add
iret
xchg
xor
xchg
add
fstp
sar
in
sub
les
xlat
outs
test
pop
aaa
out
cdq
pop
inc
sub
jns
imul
leave
mov
xchg
popf
in
pop
pop
mov
out
(bad)
bound
push
(bad)
mov
jl
fimul
xchg
jb
sbb
xchg
dec
xchg
xor
dec
int3
mov
inc
js
push
push
(bad)
loop
mov
mov
hlt
inc
add
jbe
jmp
cwde
inc
mov
inc
mov
add
mov
mov
data16
xor
mov
ret
ficom
test
pop
fistp
jg
rcr
mov
add
ins
cli
imul
test
sar
shl
aaa
pop
loope
fnstcw
into
xor
lds
lahf
jge
outs
stos
fstp
retf
xor
mov
xor
mov
repz
xchg
pop
enter
cmp
cmp
daa
stc
pop
shl
sbb
dec
mov
test
iret
retf
and
ds
es
movs
mov
loopne
cs
dec
push
retf
jne
ds
push
stos
sub
sbb
movs
inc
xchg
div
popa
clc
hlt
mov
sahf
cmp
leave
bound
push
test
fsubr
jbe
aaa
aad
jns
jg
aaa
test
jns
cmp
mov
mov
imul
loopne
popa
jmp
cwde
mov
movs
ss
or
or
xchg
repnz
sub
push
imul
mov
shr
and
repz
and
nop
sub
fadd
push
loope
sahf
or
jnp
inc
std
dec
dec
(bad)
mov
cmp
bound
retf
sub
lahf
cmps
jb
enter
ja
ins
adc
mov
iret
pop
jecxz
inc
sbb
mov
jp
ret
repz
je
xor
pop
mov
inc
fsubr
mov
add
mov
bound
and
xchg
cmc
cmp
jne
mov
in
jae
sahf
push
adc
mov
push
mov
shl
mov
fadd
nop
pop
jp
sub
mov
sub
adc
cmps
xor
push
pop
mov
mov
js
mov
add
sahf
out
sub
pusha
scas
mov
mov
and
mov
push
int3
mov
mov
pushf
(bad)
inc
add
sub
and
fs
dec
sub
xchg
push
jl
fistp
test
(bad)
loopne
cmp
jo
loopne
xchg
xor
test
cmp
xlat
push
jae
sub
dec
das
call
scas
pop
mov
jnp
dec
xchg
push
cli
jno
and
cmps
cld
popa
add
aad
ret
imul
xchg
mov
les
lds
int3
push
fimul
shr
xor
outs
add
xor
outs
(bad)
hlt
push
outs
stos
mov
ror
xchg
pop
add
or
mov
aaa
outs
ss
ja
xchg
jge
or
int
js
ins
nop
xchg
mov
fidiv
das
inc
cmp
push
xor
mov
cmp
mov
add
loopne
dec
pop
add
dec
or
jge
rol
test
push
inc
std
and
xchg
or
xor
mov
sbb
jo
fadd
test
mul
test
stc
cmps
mov
dec
xor
fimul
call
and
sbb
setl
mov
aad
daa
sub
fdiv
cwde
cmp
repz
or
adc
mov
lods
mov
setl
jle
mov
xor
cmp
out
dec
push
lods
mov
cwde
push
inc
mov
xor
cmp
pop
and
lods
push
cdq
jle
dec
das
adc
mov
test
pop
test
aaa
ja
mov
(bad)
sub
mov
mov
shl
sub
xchg
xchg
adc
jno
ret
hlt
push
ret
dec
test
sahf
int
data16
pop
shl
cld
and
adc
scas
fwait
mov
mov
loopne
mov
repnz
cmp
xchg
retf
(bad)
jno
cmp
xor
xor
mov
stos
stos
cmp
int3
fadd
or
and
inc
dec
dec
xlat
fistp
sbb
inc
imul
add
(bad)
in
ins
cwde
shr
xchg
push
mov
fsubr
mov
and
pop
xor
aad
movs
rcr
out
mov
cdq
cmp
pop
xchg
push
(bad)
jne
dec
pusha
xlat
cmp
in
add
sub
or
xor
test
jg
ror
inc
loopne
and
adc
xor
dec
in
xor
icebp
call
bound
mov
leave
(bad)
and
jecxz
push
pop
mov
push
(bad)
movs
stos
jmp
out
jecxz
push
add
sahf
jbe
fs
cmp
daa
jo
out
out
scas
(bad)
sar
pop
add
adc
inc
xor
sub
stos
push
ret
(bad)
test
loopne
loop
xor
repnz
sub
jmp
dec
lahf
out
test
fst
popf
sub
inc
test
jl
fsub
xor
jnp
cmps
mov
stc
dec
in
imul
mov
jmp
jl
sbb
aam
pop
cmc
int
fidiv
outs
pop
dec
xor
push
mov
cmp
sub
movs
dec
dec
(bad)
jmp
lock
adc
pop
dec
lahf
outs
cmp
push
xor
retf
adc
xchg
sub
aaa
inc
cmp
mov
fnsave
rol
mov
sub
aaa
mov
xor
scas
pop
or
std
ja
test
lods
fist
xchg
hlt
cmc
add
dec
xchg
lea
add
jl
pop
es
adc
mov
push
int
fdivr
out
lahf
mov
ss
ds
sbb
imul
add
mov
pop
rcr
popf
cdq
das
iret
shl
test
arpl
add
out
dec
(bad)
jae
or
imul
fisubr
mov
shr
xchg
call
mov
outs
push
cwde
stos
dec
(bad)
mov
add
icebp
lahf
xchg
arpl
lock
in
repnz
loop
ror
mov
pop
jmp
clc
out
call
cmc
mov
sbb
mov
pushf
cmp
shl
(bad)
mov
popf
(bad)
out
xlat
xor
sub
adc
dec
daa
test
ror
(bad)
cli
leave
mov
enter
dec
out
ja
sub
jp
lahf
jbe
(bad)
cmp
cs
in
push
pop
sbb
movs
daa
push
lods
(bad)
cli
xchg
js
mov
add
xchg
adc
mov
call
mov
mov
jbe
pop
retf
pop
mov
cs
sub
mov
out
push
inc
and
add
ins
adc
repz
fs
xlat
push
sbb
add
js
pop
pop
push
adc
add
ja
pop
repnz
pop
cmc
je
ja
cmp
mov
inc
daa
js
dec
cmp
adc
mov
outs
sar
push
test
mov
ins
test
xchg
pop
std
clc
cs
pushf
movs
aad
clc
fucomi
in
cmppd
pop
fs
ror
out
inc
sbb
xor
mov
mov
mov
sti
pushf
stos
scas
sbb
shl
and
in
loope
rol
loop
sub
outs
stc
mov
test
enter
pop
cmp
push
call
inc
cmp
dec
mov
mov
shl
xor
mov
(bad)
push
jo
sti
jno
mov
sbb
pop
imul
cmps
(bad)
loop
mov
xchg
adc
data16
fisub
inc
add
ja
or
push
cmps
jns
(bad)
cmp
leave
mov
test
ror
ret
into
sbb
push
jg
in
dec
adc
cmp
jae
inc
call
iret
push
daa
shr
shl
rol
push
sbb
es
sbb
or
cmp
inc
std
mov
sub
call
daa
cmp
cwde
cmp
stc
cmp
stos
ror
fcmove
adc
mov
in
aaa
rcl
mov
pop
fcmovu
lea
(bad)
and
mov
iret
add
ins
add
test
xchg
dec
mov
adc
pushf
outs
inc
scas
sub
cmp
retf
dec
test
adc
sbb
push
es
in
je
neg
daa
sbb
arpl
ficomp
add
mov
sbb
pop
das
inc
dec
fistp
mov
jmp
mov
and
das
sub
pop
sub
pushf
mov
(bad)
fnstcw
aam
sub
ja
xor
shl
mov
mov
cmp
call
test
mov
scas
fbstp
dec
inc
jg
es
(bad)
pop
ins
push
into
or
cmp
dec
sahf
popf
cmc
dec
popa
loopne
outs
fwait
mov
fwait
push
cli
sub
xchg
dec
lea
and
jno
push
shr
xlat
add
xchg
out
and
sbb
xchg
xor
sub
in
lods
xchg
fwait
push
add
pop
or
pushf
jl
cmp
ins
movs
pop
jae
dec
add
push
imul
scas
mov
out
inc
xchg
jle
addr16
xchg
not
icebp
and
cmps
or
jmp
cmp
inc
inc
hlt
sahf
int3
cwde
repnz
pop
repz
jno
mov
or
shr
mov
(bad)
jle
rcl
retf
adc
push
jne
xor
jbe
jae
push
mov
pop
out
sbb
push
jl
cmp
or
int
fwait
mov
xor
or
sti
jnp
fwait
mov
out
dec
in
cdq
or
sbb
mov
mov
sbb
add
fstp
push
mov
retf
pusha
cmc
stos
push
sbb
mov
rcr
xor
je
cmp
sub
push
cmp
enter
in
repz
pop
xchg
(bad)
fimul
xlat
dec
mov
les
hlt
and
mov
call
movs
push
cmp
add
mov
out
stos
pop
addr16
xchg
lahf
call
fstp
repz
pop
cmc
hlt
test
sar
inc
mov
shr
sbb
sbb
push
iret
nop
or
test
add
mov
cmps
xabort
or
jmp
sar
cmp
jo
sub
ret
and
push
and
lock
jg
sbb
mov
imul
cmp
xor
test
sbb
mov
or
mov
in
cmp
sub
fs
scas
sbb
sbb
or
cmp
in
js
dec
je
adc
xchg
sub
and
dec
arpl
push
push
pop
outs
mov
and
movs
mov
(bad)
int
int3
jo
dec
and
cwde
mov
rdpmc
lods
dec
pop
cdq
sbb
cmp
dec
add
mov
jae
or
cld
mov
mov
call
mov
scas
xor
sbb
sbb
rcl
jl
lahf
xor
sar
inc
jbe
mov
sub
cld
stc
xor
jmp
add
mov
leave
aam
jg
ins
sti
dec
mov
mov
mov
loope
adc
cmp
cmps
cmp
sbb
leave
cmps
loop
(bad)
cmps
je
nop
xor
ins
mov
out
scas
jmp
nop
mov
retf
adc
mov
jne
pop
scas
test
jbe
fmul
and
inc
sbb
repnz
sbb
mov
mov
jns
(bad)
cmps
mov
sub
cmp
xor
inc
xchg
add
fdiv
popa
and
repz
or
jns
jb
jge
dec
jecxz
cld
sub
adc
sbb
pop
pop
data16
leavew
and
pop
sbb
movlps
or
pushw
pop
push
(bad)
repz
cmp
sub
xchg
test
test
xchg
inc
mov
test
inc
pop
push
add
imul
inc
fdivr
pop
pop
ja
scas
dec
inc
out
retf
sub
push
inc
data16
es
mov
mov
outs
xchg
outs
out
mov
repz
movs
mov
cmp
add
popa
or
lods
cmp
fs
ins
mov
mov
jecxz
fcom
pop
inc
inc
or
shl
ins
clc
xchg
sar
addr16
jnp
loope
sti
ins
xchg
cdq
cs
adc
sbb
sbb
sbb
or
cmp
mul
fiadd
scas
inc
inc
jmp
dec
(bad)
dec
sahf
push
sahf
mov
sub
mov
push
or
lea
mov
xlat
das
jns
xlat
aam
cmp
pop
push
xchg
xor
push
aas
aaa
icebp
and
movs
or
retf
nop
sbb
ret
outs
gs
mov
icebp
add
fs
push
and
js
loop
mov
xor
cmp
pop
sub
jle
sti
rcr
adc
mov
adc
dec
pusha
mov
xor
cmps
sub
inc
aam
add
add
jp
repz
dec
jmp
in
loop
xchg
inc
outs
movs
mov
cdq
iret
dec
cmp
dec
fild
ins
add
out
sbb
int3
jle
adc
out
shr
pop
dec
mov
sub
sub
(bad)
popw
movs
std
fiadd
jmp
rcl
aad
jge
mov
repnz
test
out
(bad)
das
daa
dec
dec
mov
les
arpl
inc
int3
and
cwde
push
dec
cvttps2pi
cmps
aad
je
cmps
cmps
(bad)
js
pop
and
ins
out
lods
ret
pop
mov
lds
adc
lahf
test
cwde
mov
sahf
add
(bad)
fdiv
dec
hlt
add
pusha
aas
rcl
push
mov
out
sub
xor
dec
stos
in
loopne
mov
jp
shl
jle
in
repnz
lock
mov
sub
xrstor
jns
and
repz
stc
cmps
in
pusha
adc
cs
sub
xor
(bad)
jno
adc
push
or
pusha
popa
stos
dec
es
mov
iret
jae
in
inc
sub
call
ret
movs
cdq
push
jnp
retf
fldl2t
push
cmp
xchg
retf
retf
stos
push
mov
cmpps
in
movs
xor
int
push
or
cdq
fcmovne
mov
cmp
or
fsubp
jnp
ret
push
scas
sbb
xchg
add
les
or
stc
sub
jmp
mov
rcl
or
dec
(bad)
jnp
jae
fcmove
shr
(bad)
sub
dec
int
sub
push
sbb
addr16
jmp
shl
cmps
adc
adc
pop
pop
outs
popa
pop
adc
xchg
add
arpl
cmp
push
mov
inc
out
xchg
and
jo
pop
cmp
imul
dec
pop
jo
movs
ja
dec
mov
dec
jmp
jbe
push
hlt
icebp
movs
xchg
mov
les
mov
pop
lahf
sub
push
addps
xor
aam
sbb
dec
icebp
jge
(bad)
jg
ins
push
gs
inc
fimul
and
mov
enter
pop
lods
push
jecxz
int3
ficomp
mov
cmp
fld
lods
sbb
rcl
and
fcomp
add
(bad)
and
sub
call
add
ror
test
add
rol
(bad)
mov
sbb
push
stos
add
rol
adc
fwait
mov
mov
sbb
mov
jmp
in
dec
xlat
cmp
fcom
mov
or
outs
nop
xchg
jnp
mov
icebp
shl
out
pusha
mov
mov
(bad)
aaa
aas
xchg
mov
jp
xchg
adc
daa
mov
mov
pop
es
loop
fstp
in
aas
out
inc
jge
sub
dec
adc
push
adc
sbb
sahf
push
les
jae
jmp
add
in
mov
comiss
jp
out
loop
scas
mov
jno
jle
or
xor
aaa
jmp
add
xor
jmp
je
jo
jne
xor
fwait
dec
lods
cmps
push
stos
mov
adc
add
inc
fiadd
rcl
add
leave
jl
das
cdq
fisttp
test
inc
push
fild
mov
jb
xchg
sbb
loopne
sbb
mov
pusha
(bad)
push
and
(bad)
stc
fwait
(bad)
sub
adc
call
inc
mov
mov
adc
add
mov
fmul
fcmovb
pop
popf
cmp
pop
mov
mov
sbb
loopne
sbb
cmps
pop
div
popa
push
jns
call
in
cmp
test
pop
mov
repnz
dec
mov
mov
pop
outs
in
jg
leave
pop
in
adc
mov
sar
fnstsw
xor
mov
jg
cli
lods
or
sbb
sbb
adc
out
out
cmps
fist
mov
in
movs
cmp
sbb
add
or
addr16
pop
mov
xlat
jns
out
adc
in
or
jmp
inc
ss
out
adc
gs
jne
dec
es
popa
pop
shl
daa
loop
ror
lea
push
or
mov
les
push
pop
mov
sbb
sbb
outs
out
xchg
int
lods
sub
and
push
je
jg
retf
cli
pop
cmp
cmp
push
(bad)
cmc
addr16
pop
mov
and
or
mov
push
fucomp
test
fs
jl
lahf
add
(bad)
and
arpl
bound
mov
push
shl
xchg
sub
pop
pop
pop
fimul
clc
pop
add
pop
stc
mov
push
xchg
(bad)
mov
scas
lea
fdivrp
adc
xor
pop
mov
(bad)
mov
mov
cmp
mov
fnstcw
out
sbb
lods
and
loopne
dec
xchg
out
scas
popf
cmps
or
test
jl
add
add
inc
cs
(bad)
adc
mov
push
test
cwde
and
xchg
push
in
xchg
(bad)
and
dec
sbb
call
jmp
jle
movs
mov
xchg
pop
test
fucom
fiadd
pop
xor
clc
jmp
mov
stc
inc
sbb
imul
lds
adc
ror
imul
cmps
adc
les
ror
jns
call
push
aaa
pop
rcr
sub
mov
sub
push
imul
bound
sbb
jg
sub
inc
push
outs
jl
cdq
data16
mov
and
mov
jns
movs
mov
push
mov
lods
inc
popa
add
icebp
and
aad
retf
mov
cmp
movs
pop
dec
pop
nop
aam
mov
push
push
ins
dec
call
and
cdq
cmp
and
pop
sub
leave
or
adc
dec
in
rol
push
pop
mov
xchg
popf
add
adc
dec
lea
xchg
jmp
std
xor
or
push
popf
hlt
bound
jno
rcr
pop
jae
cld
sbb
arpl
push
jb
out
xchg
stc
loope
mov
mov
pop
(bad)
mov
test
push
(bad)
out
movs
push
jge
out
inc
jge
stos
out
bound
out
repz
cmc
pushf
pcmpeqd
sub
in
jmp
lahf
dec
mov
idiv
dec
test
and
repnz
loopne
ja
movzx
aas
test
mov
sub
jmp
aad
in
daa
pop
mov
pushf
fcmovnbe
fst
fcmovbe
pop
sub
add
inc
cmp
lods
cmp
xchg
push
sbb
fistp
shl
or
rcr
xchg
sub
push
xor
icebp
adc
push
iret
(bad)
les
push
outs
ins
sub
stos
pop
pop
jmp
mov
sbb
cmps
dec
push
push
into
inc
cld
adc
xlat
sbb
fisub
shl
adc
and
mov
pop
ins
(bad)
into
mov
mov
js
adc
repz
pop
mov
repnz
mov
mov
(bad)
xchg
sbb
sbb
xchg
xchg
dec
jmp
movs
stos
mov
jg
stos
jge
sbb
ds
retf
(bad)
push
dec
movs
(bad)
jle
aaa
jge
cmp
pop
dec
adc
fstp
jo
pop
dec
and
out
ds
movs
inc
(bad)
xlat
rcr
ds
cmp
jecxz
fisttp
mov
push
imul
bound
lea
sbb
es
mov
push
mov
push
push
in
push
fldenv
adc
inc
loopne
push
stos
stos
mov
pop
in
loope
pop
sub
mov
clc
fs
push
ret
shr
jmp
mov
jno
lea
into
popf
xchg
jno
lahf
in
test
es
daa
xchg
mov
lock
jle
mov
lds
inc
(bad)
lods
in
gs
pop
out
sbb
out
in
sbb
inc
imul
jno
in
cmps
inc
sub
std
retf
test
inc
add
dec
nop
mov
imul
data16
pop
scas
popf
or
xchg
sbb
shl
imul
not
clc
adc
lods
push
(bad)
ins
xchg
icebp
sahf
imul
psraw
(bad)
sbb
repz
addr16
and
lods
sub
or
sub
in
mov
fidivr
or
dec
dec
cmps
into
or
push
popf
or
rcl
or
das
leave
and
add
scas
dec
xchg
scas
add
clc
adc
pusha
adc
jae
dec
leave
adc
jo
push
sub
mov
jle
jp
cmp
and
stc
adc
and
mov
out
push
mov
cwde
xor
fnstcw
cli
int3
pusha
cmp
(bad)
cmc
ror
jl
call
out
ins
xor
xor
or
mov
xchg
push
out
inc
mov
out
outs
inc
into
icebp
xchg
enter
cmc
test
pop
mov
and
inc
outs
fs
ret
lds
in
push
push
and
or
inc
cmc
and
test
cmps
adc
les
(bad)
adc
mov
mov
arpl
stos
mov
ss
mov
sbb
dec
sub
iret
inc
std
lahf
cmp
mov
or
int3
pop
(bad)
and
sbb
lock
mov
mov
jl
push
jb
repnz
cwde
mov
clc
push
sub
xchg
add
push
cmc
data16
cs
pop
lock
mov
xor
out
mov
mov
ins
sbb
xchg
mov
mov
push
div
xchg
jecxz
sub
or
jo
xor
cmp
mov
jle
repz
sub
je
push
xor
ins
xor
pop
arpl
pop
movs
xchg
mov
sub
jge
ins
sub
das
jns
xchg
mov
popa
adc
jo
sub
test
and
sbb
adc
cld
and
(bad)
mov
out
inc
or
mov
sbb
leave
loope
dec
mov
xor
in
pop
dec
mov
sbb
mov
pop
loope
pop
movs
imul
mov
and
test
mov
scas
adc
inc
imul
xchg
dec
xor
mov
sbb
push
stos
rcr
sub
push
stos
sbb
pop
mov
outs
sbb
int
ins
aas
pop
or
jg
clc
mov
(bad)
(bad)
adc
js
into
loop
dec
ror
sti
ret
mov
push
into
add
cmp
fscale
xor
ds
mov
dec
sub
sub
cmp
inc
push
(bad)
lock
cmps
icebp
addr16
sbb
mov
cmp
xor
fisub
stos
inc
out
cli
cmp
pop
add
push
jnp
(bad)
popf
nop
or
enter
sar
into
cs
fidivr
(bad)
in
rcr
xor
xor
enter
pop
inc
mov
out
mov
test
adc
pop
jno
je
iret
lea
jg
imul
shl
out
sti
mov
pop
adc
fstp
dec
cdq
fcmovne
adc
push
mov
or
shl
xchg
adc
pop
pop
push
fucom
mov
dec
inc
shr
bound
test
adc
mov
fcmovne
and
(bad)
dec
cld
mov
(bad)
scas
daa
ror
psrlw
popa
(bad)
loopne
js
sbb
jnp
(bad)
mov
xchg
retf
mov
lods
add
mov
jae
test
cmp
and
sub
sbb
xchg
in
sbb
xor
aaa
repnz
test
fwait
push
pusha
cmps
xchg
dec
sbb
pop
std
dec
retf
add
sbb
pushf
pop
xchg
cmp
pop
fst
call
inc
(bad)
sub
mov
clc
scas
das
fiadd
dec
push
pop
jae
movs
cs
and
or
daa
rcl
mov
push
sbb
inc
retf
and
push
addr16
sub
adc
fadd
xor
test
mov
inc
cmp
jge
lock
in
test
xchg
xor
mov
jnp
dec
jmp
mov
imul
outs
push
add
mov
ret
imul
fstp
xor
outs
mov
aaa
pop
xchg
into
jp
mov
add
adc
jo
fwait
cmp
leave
imul
inc
inc
pop
jnp
mov
leave
jg
xchg
add
retf
sar
xchg
push
ror
das
imul
fsub
call
in
push
aam
push
pop
pusha
xor
push
xchg
jmp
dec
clc
dec
pop
int3
into
mov
xor
jl
lods
rcl
add
(bad)
and
mov
test
mov
mov
xor
push
lods
mov
jne
cmc
inc
mov
mov
cmp
and
jl
(bad)
sbb
fs
push
icebp
sub
movs
jg
jbe
lahf
nop
(bad)
cmp
cmps
push
retf
jge
mov
inc
lea
loope
cmps
dec
push
dec
ja
in
frstor
xor
add
sbb
push
ins
cmc
or
iret
mov
in
retf
aaa
repnz
xor
jp
jnp
mov
mov
mov
push
out
int
mov
xchg
(bad)
mov
mov
add
mov
sub
or
mov
loopne
mov
leave
add
shl
or
stos
sub
lock
jne
jmp
jnp
and
icebp
test
pop
retf
mov
lgs
dec
pop
or
js
fisubr
pop
xor
int
jns
gs
xor
clc
lds
xchg
test
out
push
imul
mov
jge
push
xchg
aaa
push
mov
mov
lock
mov
sahf
test
popa
mov
aad
shl
pop
bound
push
push
inc
les
leave
xor
adc
mov
ss
inc
add
cmp
in
sahf
xor
aam
out
or
cli
push
and
pop
(bad)
sbb
dec
xchg
sbb
call
cld
mov
push
cmp
add
mov
fst
inc
fxam
xchg
aaa
pop
in
inc
call
jecxz
sub
sub
lock
push
jb
xchg
ror
in
inc
cmp
test
idiv
gs
sbb
pop
push
jae
mov
cs
pop
out
adc
xor
or
cmps
inc
mov
jb
in
or
shl
sahf
neg
sub
pop
fdivr
pop
mov
mov
(bad)
push
jnp
pop
jno
add
fcomp
fisubr
mov
popa
push
das
push
lods
mov
movs
mov
jp
xor
xor
call
xor
mov
test
stos
(bad)
mov
outs
mov
sub
outs
out
mov
add
mov
pop
pusha
aam
cwde
lock
mov
xor
ret
push
es
cmp
ins
or
jmp
or
sahf
push
sahf
cmp
xchg
aas
pop
sub
gs
mov
sbb
lock
mov
jb
xchg
xor
loopne
adc
mov
test
adc
pop
jmp
push
in
mov
rol
xchg
cmc
mov
sbb
int3
std
ss
dec
test
and
pop
div
shl
mov
push
inc
sti
std
jge
xor
push
inc
in
push
pop
cli
fdiv
push
pusha
push
int3
inc
adc
gs
(bad)
push
xor
sbb
push
push
leave
sub
dec
fisub
xor
ficomp
xor
rcl
inc
js
dec
test
mov
push
and
stos
adc
test
push
mov
inc
imul
pop
mov
scas
xchg
cmp
push
lea
imul
loop
cmp
loope
enter
jo
cmp
sub
mov
cwde
fnstenv
lods
clc
fild
leave
or
cmp
mov
fld
and
mov
add
in
arpl
push
dec
push
test
xor
in
test
data16
rcl
push
sbb
loopne
or
idiv
loop
pop
xchg
or
jb
dec
rol
sbb
mul
push
mov
jle
mov
into
cmp
fwait
mov
dec
pop
jbe
dec
mov
repz
inc
push
bound
rcr
je
mov
fsubr
emms
xor
xchg
push
push
cmc
xor
mov
or
sbb
push
gs
call
adc
pop
test
push
cmp
inc
stc
fldcw
mov
xor
hlt
inc
out
dec
in
in
mov
mov
cmp
pop
je
xchg
xchg
cmp
mov
pop
add
add
dec
in
icebp
jge
adc
add
xlat
cmp
std
sub
push
cli
retf
fnstenv
repnz
sub
jmp
in
and
mov
retf
inc
frstor
inc
jae
and
jne
out
lods
movs
stos
loop
jecxz
jne
dec
jge
cmp
pop
jle
jb
imul
(bad)
(bad)
and
pop
dec
cmc
leave
dec
mov
cmps
jbe
rcr
mov
push
push
sub
sar
push
push
cmp
jecxz
sub
daa
je
neg
js
fnstcw
mov
pop
xor
mov
iret
mov
out
or
popf
ins
not
cmp
sub
out
loop
mov
adc
rcl
out
jbe
movs
inc
stos
sbb
shl
pusha
js
enter
das
xor
fdivp
push
xor
cmps
into
shl
inc
stos
sub
mov
xor
sbb
std
lea
imul
sub
js
add
or
adc
jmp
jg
fnstenv
pop
daa
or
hlt
hlt
or
jbe
mul
push
adc
scas
lahf
in
ja
jmp
sbb
jmp
mov
sbb
xor
adc
push
cdq
mov
fldlg2
pop
jb
inc
dec
js
xor
adc
mov
xchg
xor
inc
adc
push
lods
daa
rcl
cdq
outs
add
fsubr
sub
add
mov
movs
fst
mul
sub
lods
push
jp
and
sbb
fiadd
std
shl
ja
sbb
test
sbb
fdivr
imul
int
shl
mov
les
sahf
inc
aas
mov
mov
xchg
cmp
dec
imul
inc
sub
std
stc
imul
sub
jge
mov
enter
xchg
mov
or
jge
cmp
and
mov
and
scas
push
or
jecxz
mov
cmps
les
fs
pop
push
xchg
aaa
ja
or
mov
push
lahf
fcomi
pushf
xor
ret
out
pop
setge
fsub
push
imul
or
cmp
add
pushf
(bad)
loope
inc
push
xor
in
and
js
sbb
lahf
jbe
pop
lock
xchg
or
ja
dec
pop
pop
cmp
push
dec
xlat
xor
fdiv
xchg
fbld
pop
out
cmp
fldcw
movs
mov
repz
jo
mov
into
or
fist
dec
(bad)
fisubr
mov
idiv
push
jbe
pop
xchg
xor
dec
stos
dec
dec
jns
add
push
movs
cdq
in
sahf
pop
(bad)
adc
lea
or
push
packssdw
mov
sub
std
xchg
out
xchg
cmc
sub
std
mov
push
dec
sub
lds
cmps
and
rol
dec
rcr
(bad)
stos
mov
in
daa
in
sbb
adc
fwait
bound
mov
sub
jg
aam
repz
or
jmp
in
push
ret
sub
lods
fisub
sub
fidivr
into
pop
mov
mov
cmp
repnz
xchg
pop
sub
xor
imul
jno
push
sbb
shl
jo
mov
sbb
cmps
adc
daa
js
add
or
pop
fadd
(bad)
mov
push
xchg
push
sti
fwait
inc
aas
and
aad
leave
mov
xor
cmc
and
sub
sahf
or
out
ins
push
jns
repnz
pop
test
mov
xchg
dec
sbb
pop
jecxz
sbb
loopne
inc
sahf
xor
jmp
push
fimul
jnp
xor
sub
stos
mov
sbb
jmp
sbb
mov
adc
xchg
pop
test
mov
and
in
xchg
jg
fs
cs
sar
repz
jnp
fwait
sar
test
cmps
sub
out
sahf
mov
lods
aas
inc
das
outs
and
icebp
and
adc
xchg
rcl
add
cmp
(bad)
lock
adc
jg
mov
jecxz
jl
cmps
inc
or
jle
out
stos
(bad)
mov
jnp
mov
leave
pop
sbb
push
shl
sub
adc
adc
xchg
shl
adc
inc
out
mov
add
cmp
xor
dec
inc
dec
arpl
loope
sbb
jecxz
(bad)
lock
fild
loope
mov
sub
sbb
or
pushf
leave
jo
xchg
pop
out
out
jmp
fiadd
and
cmps
movs
jg
clc
scas
(bad)
cmc
out
xchg
mov
mov
ins
mov
mov
movs
cld
xor
ror
and
inc
cmp
movs
stc
push
adc
mov
dec
retf
jl
adc
not
out
pop
xor
dec
(bad)
xchg
add
pop
fisttp
dec
(bad)
and
loope
call
dec
xor
(bad)
xor
push
pop
pop
js
xchg
lods
mov
ins
test
dec
pop
sbb
ror
mov
cmp
(bad)
mov
mov
or
xor
scas
jb
hlt
xchg
shl
and
cmc
lock
xchg
stos
cdq
cmc
sbb
fbstp
retf
aam
fwait
add
or
ret
xor
cs
icebp
pop
rol
stos
mov
call
dec
outs
and
daa
mov
aaa
cdq
dec
pop
xor
jb
test
lea
int
test
stos
xchg
mov
cmp
and
(bad)
stos
inc
ins
mov
retf
ja
iret
lods
mov
pusha
sub
mul
push
cmp
call
fs
into
sbb
leave
test
xchg
arpl
mov
ins
xor
aas
fcmovnu
push
bound
rol
cmp
cmps
pusha
add
scas
dec
jb
mov
sbb
out
aaa
in
lahf
jo
mov
pop
out
ror
das
outs
es
sub
std
jbe
lea
mov
setne
mov
or
jmp
and
jp
pop
adc
xchg
cmp
inc
adc
fmul
lds
mov
sbb
test
xor
ds
call
cmps
sub
xor
mov
sub
or
jns
cmp
test
outs
cmp
add
or
xchg
jecxz
and
push
fnsave
add
cwde
dec
retf
pop
(bad)
es
push
jnp
out
adc
out
push
icebp
cs
push
fisttp
popf
adc
push
rol
mov
lock
arpl
mov
test
neg
ret
scas
movs
cmp
call
int
mov
xchg
jns
aas
scas
pushf
fwait
pop
int
gs
sti
jg
sub
jnp
jmp
ins
outs
fwait
retf
pop
addr16
add
mov
aam
mov
jnp
and
fst
sbb
mov
aaa
push
jbe
lds
pop
fisub
out
aaa
inc
shl
pop
retf
push
pop
jb
dec
jns
mov
jge
das
stos
lea
sahf
js
aam
rcl
push
dec
jge
arpl
test
lea
mov
addr16
mov
ret
out
data16
push
adc
stc
mov
pop
fidiv
in
leave
cmps
jo
clc
mov
mov
stos
push
xor
(bad)
mov
push
imul
pop
std
pop
and
ss
mov
(bad)
sbb
jo
fnstenv
and
test
pop
xchg
retf
mov
push
pusha
push
push
xchg
call
mov
lea
cmp
xchg
push
xlat
leave
scas
sub
jb
mov
int
mov
pop
mul
mov
adc
push
push
add
mov
add
cwde
pusha
inc
repz
cli
xor
push
add
cmps
gs
hlt
loop
(bad)
jnp
cmp
pop
sbb
cmps
xor
pop
dec
ins
sar
loop
shr
pushf
xor
fdivr
call
les
push
lds
jge
mov
es
data16
xchg
or
xchg
mov
push
pop
add
std
mov
add
not
inc
sub
mov
popf
sar
pusha
dec
mov
jne
hlt
fwait
mov
pop
pop
imul
cmp
sbb
fsub
pop
test
(bad)
(bad)
push
mov
scas
lods
in
dec
sub
push
mov
xor
push
xor
sbb
clc
push
sbb
add
sti
jg
stos
push
loopne
lds
adc
mov
adc
ret
mov
or
cmps
mov
mov
nop
aas
push
sub
neg
adc
xor
or
loop
and
inc
int
or
push
sbb
popa
dec
in
pop
add
xor
pusha
mov
movs
lods
aad
cs
cmp
cdq
test
or
clc
xor
lods
in
out
ficomp
or
into
push
inc
inc
mov
inc
jmp
xchg
mov
jmp
cmovo
pop
int
jb
mov
loopne
sbb
call
dec
fbstp
cmp
jae
out
in
push
lock
int
fadd
adc
fnstcw
cmp
adc
dec
add
aas
hlt
jle
cs
(bad)
loope
and
dec
(bad)
mov
xchg
add
bound
test
cmps
mov
retf
inc
lods
lahf
inc
ins
sbb
ja
in
stc
fwait
nop
inc
nop
push
ret
and
aas
cmp
daa
and
ins
mov
cmp
cmp
xchg
dec
popa
pop
sbb
fisttp
cmp
mov
xchg
rcr
push
stc
dec
adc
outs
or
jge
fwait
cli
sbb
aad
jmp
out
jmp
jnp
daa
add
or
push
cmps
mov
js
add
shr
popf
popa
adc
dec
jmp
ins
dec
(bad)
(bad)
sbb
fidivr
xor
out
inc
lods
sbb
cmps
cmp
test
loopne
fisubr
jge
mov
cli
ja
or
sbb
(bad)
pop
repz
pop
push
jb
pop
mov
jg
mul
std
fdiv
pop
mov
push
pop
adc
jmp
cwde
popf
not
xor
cmp
stos
mov
stos
scas
or
jge
pushf
dec
ret
popa
and
cdq
mov
inc
movs
inc
jae
ret
dec
ins
ret
mov
(bad)
jmp
mov
mov
push
aaa
sbb
adc
and
cwde
push
js
loopne
ins
fidiv
dec
mov
push
and
mov
fldpi
push
pop
ins
mov
aam
lods
std
sahf
sbb
movs
lahf
mov
test
test
ret
mov
mov
in
inc
scas
or
mov
mov
cs
mov
in
xlat
repnz
leave
adc
dec
test
leave
repz
add
int
xor
aaa
mov
adc
and
cmp
cs
out
repnz
fld
aas
data16
daa
mov
inc
ins
jp
lods
adc
adc
sub
push
cdq
outs
or
cld
xchg
dec
bound
inc
cmps
in
push
bound
aad
mov
xlat
in
hlt
sub
out
arpl
xlat
mov
scas
mov
ss
mov
jnp
outs
out
fs
xchg
retf
dec
cmp
cs
cmp
inc
inc
repnz
add
push
sar
mov
movs
mov
mov
pop
(bad)
jbe
cmp
std
and
inc
clc
aam
xchg
sub
popf
ss
into
xchg
or
leave
fcom
add
push
push
fwait
pop
retf
inc
leave
ror
out
test
sbb
mov
cmps
xor
jbe
pop
jg
xor
test
pop
pop
push
retf
cmp
adc
cmp
retf
add
out
xchg
inc
sbb
xchg
dec
add
add
sbb
xor
(bad)
cld
ds
adc
xor
push
pop
loope
inc
cmp
data16
cmp
adc
daa
dec
int
pop
(bad)
jl
mov
movs
adc
sub
out
xchg
adc
repz
cmp
push
cld
popa
iret
sub
pop
jp
dec
inc
cmps
mov
fdiv
jmp
test
and
push
fild
bound
push
lahf
cmp
call
and
jle
inc
sub
lea
in
es
jnp
(bad)
push
ret
cmp
dec
inc
push
inc
pop
mov
test
shl
cmp
mov
dec
push
dec
inc
adc
push
fistp
(bad)
pop
cwde
clc
add
pop
adc
pop
dec
jns
rcr
arpl
xchg
add
bound
ret
jne
in
pop
jl
stc
pop
xor
mov
loopne
sti
test
test
retf
sti
pop
cli
gs
xchg
push
sub
jle
pusha
ds
sub
jge
push
adc
jl
ins
sbb
rol
addr16
iret
mov
sbb
cdq
sbb
inc
stos
sub
jp
sar
or
xchg
mov
sub
push
mov
sbb
mov
sbb
out
adc
jg
lea
fimul
dec
push
cmc
imul
xor
out
mov
add
jne
or
(bad)
and
cmp
idiv
jmp
add
adc
inc
and
pop
push
jne
mov
add
repz
adc
dec
mov
shr
cs
push
mov
mov
jmp
outs
push
mov
add
or
sbb
xor
ins
xchg
(bad)
mov
cmp
stc
outs
cs
icebp
mov
aaa
dec
stc
and
stos
sar
dec
mov
pop
stos
push
push
and
ins
outs
mov
jle
std
pop
cmp
cld
xlat
xor
and
je
mov
dec
sub
aam
cdq
mov
and
aas
pushf
je
dec
push
mov
arpl
mov
dec
out
(bad)
cld
rcl
inc
movs
out
scas
hlt
loopne
fs
sahf
repnz
es
add
mov
xchg
retf
pop
outs
mov
and
push
sti
cmp
lods
or
dec
xor
imul
mov
dec
neg
stc
push
push
jns
push
mov
adc
(bad)
fadd
jl
sub
adc
jg
pop
test
sbb
cmp
call
loopne
cmps
jecxz
lock
enter
test
lock
(bad)
hlt
popf
jo
retf
adc
mov
mov
fwait
pop
or
sbb
push
rcr
xlat
cmp
lds
cld
mov
scas
pop
repz
push
popf
retf
jmp
mov
cmp
add
mov
fcomi
ins
pop
and
jae
cmp
shl
jo
imul
pop
(bad)
and
mov
dec
sbb
sahf
pop
clc
add
cmp
push
popf
jno
xchg
imul
pop
jbe
pop
fucomp
adc
cmp
rol
hlt
mov
repz
push
mov
jge
xor
push
jmp
es
int
cmps
icebp
cmp
xor
aas
jmp
mov
cli
cmps
call
cwde
jae
mov
rol
fwait
in
jmp
push
loopne
jae
pushf
sub
(bad)
loopne
sbb
inc
in
test
mov
sub
mov
je
pop
jl
lds
ror
mov
inc
adc
mov
push
mov
add
fsubp
mov
sar
(bad)
stos
test
ud0
xchg
mov
pop
aaa
pop
mov
aaa
xchg
daa
shl
sub
mov
sub
jno
jbe
out
or
jge
xchg
pop
mov
cmp
jae
outs
xchg
test
or
fstp
mov
add
cmp
jo
ret
not
add
fisubr
dec
cmp
pop
or
cmps
mov
data16
stc
cmps
iret
push
ds
mov
movlps
or
cmp
dec
sbb
dec
ret
pop
inc
and
fldl2t
push
cwde
sub
ja
jl
lods
dec
xlat
scas
movs
popf
lock
test
dec
into
aam
cdq
nop
sbb
adc
sub
nop
xor
ins
xchg
inc
mov
cmp
addr16
jno
aaa
into
mov
pop
or
bound
mov
(bad)
addr16
mov
adc
popf
call
mov
mov
popf
xchg
cmp
jmp
(bad)
fld
cmp
aas
dec
mov
icebp
mov
fnsave
repz
mov
call
push
adc
xchg
imul
mov
aam
or
test
add
push
gs
pop
xchg
mov
mov
pop
xor
mov
aaa
xlat
jmp
loopne
ins
imul
repz
call
and
pop
fcmovnb
mov
jp
inc
mov
xor
popa
rcl
jg
pop
jb
mov
sub
cmp
(bad)
mov
jo
jle
aas
popf
lods
pop
das
in
into
inc
jp
hlt
(bad)
xor
xor
loopne
inc
out
jae
movs
sahf
sbb
popa
fistp
sbb
nop
call
pop
pop
jl
cmp
movs
xchg
retf
sbb
sahf
mov
loopne
pop
movs
or
mov
push
das
mov
lods
loope
hlt
xor
and
cmp
jnp
sub
xchg
pop
fsubrp
iret
adc
xchg
fidivr
xchg
test
sbb
sbb
dec
cwde
scas
test
arpl
xchg
dec
shl
movs
and
mov
test
inc
in
lods
jbe
dec
repnz
jno
aaa
inc
mov
push
into
xchg
jle
ret
neg
dec
xor
push
mov
and
retf
sub
fs
add
lock
mov
outs
xchg
dec
outs
in
fcom
aas
dec
jae
xchg
mov
fisttp
jl
stc
leave
shl
cwde
test
sahf
xor
ret
and
(bad)
xor
xchg
test
scas
mov
inc
xchg
xchg
jo
dec
mov
and
sahf
daa
xchg
std
xchg
in
es
cli
push
jae
jge
sub
int3
dec
sub
test
xchg
add
cwde
dec
and
retf
pop
sar
dec
fdiv
sbb
fwait
dec
add
mov
icebp
fcom
fild
or
imul
pop
(bad)
xor
adc
fsub
lea
jbe
cmc
shl
xor
or
mov
cdq
and
inc
mov
push
rcl
xchg
stc
rcl
les
xlat
adc
ret
xchg
sub
stc
xlat
shl
mov
mov
jle
aas
imul
push
xchg
lods
enter
sbb
imul
mov
enter
xlat
push
imul
pop
in
sbb
cwde
mov
je
les
inc
push
cmps
mov
mov
frstor
ds
dec
repnz
push
rcl
mov
or
fdivr
push
in
and
cmp
mov
add
shl
mov
outs
or
and
cmp
inc
pop
sub
xor
ja
pop
sti
push
lock
pop
int3
sub
or
and
enter
lahf
mov
call
call
outs
call
loope
test
sub
push
sbb
xchg
stos
pop
mov
(bad)
out
cmc
out
dec
sub
gs
mov
mov
or
retf
fidivr
imul
sar
js
jo
mov
test
cmp
sti
jl
sbb
adc
jb
cmp
fiadd
ds
add
rcr
sub
sbb
pushf
arpl
cmp
cmp
sahf
xlat
out
mov
in
(bad)
in
(bad)
fsub
pop
fwait
push
dec
push
fiadd
inc
jp
stc
out
mov
retf
jecxz
dec
xchg
test
lods
je
mov
stos
push
cmp
xchg
add
and
ins
adc
xchg
retf
cmp
add
fisttp
dec
push
mov
mov
add
inc
mov
jl
and
mov
fld
cld
aaa
xor
mov
lock
xor
mov
sbb
and
sahf
inc
xor
stos
(bad)
push
jo
pushf
ins
add
pop
test
cmp
mov
ins
sti
mov
adc
fisubr
fimul
pop
or
xor
pushf
adc
push
cmp
ja
pop
jnp
shl
dec
xchg
xchg
add
mov
sub
test
mov
movs
or
push
push
push
sbb
aas
cmp
(bad)
aam
mov
cdq
sub
inc
out
xchg
adc
call
hlt
out
call
pop
sbb
cs
inc
push
adc
(bad)
sbb
xor
and
in
sbb
jo
push
repnz
popa
aad
mov
or
loope
push
push
pushf
inc
xchg
sub
popf
sbb
push
sbb
lods
sub
pop
xlat
sub
xchg
sub
jo
xchg
or
xor
xchg
scas
dec
xor
lock
dec
je
dec
int3
inc
rcr
dec
inc
fwait
cmp
sub
or
mov
movs
sub
or
and
sbb
dec
xchg
mov
jg
pop
cs
sub
inc
call
add
out
icebp
jns
dec
xor
dec
mov
push
adc
mov
(bad)
nop
add
push
rol
loope
sub
hlt
cs
inc
out
cmp
ret
out
xor
cmp
add
mov
shl
sti
pop
mov
loop
sbb
sti
test
jecxz
mov
sub
inc
mov
mov
loop
and
scas
sbb
add
sub
retf
lods
(bad)
(bad)
rcr
retf
push
push
movs
clc
mov
retf
std
dec
dec
sub
and
pop
sbb
cld
lahf
dec
pop
in
jb
pop
add
ss
inc
sub
and
aad
mov
cli
pop
ret
cmp
cmp
lock
dec
das
mov
and
mov
xchg
xlat
jmp
cli
push
jl
mov
dec
fst
mov
xchg
jns
cli
or
pop
enter
add
cmc
add
je
push
pop
dec
je
sahf
mov
jg
addr16
fcmovnbe
and
aas
test
shl
loop
js
fnsave
aaa
mov
jg
inc
aaa
lods
test
in
xor
mov
dec
js
xor
in
mov
test
shl
add
cld
out
leave
xchg
jl
push
data16
or
add
dec
jle
mov
loop
and
xor
mov
jmp
hlt
sbb
std
mov
in
pop
gs
pop
imul
mul
mov
and
outs
jbe
cmp
push
sar
in
lds
dec
and
(bad)
jo
xlat
inc
in
adc
(bad)
sbb
jbe
mov
stos
or
lock
mov
jecxz
dec
adc
xchg
mov
mov
outs
mov
fcmovu
xchg
sbb
into
sub
lahf
loopne
int
int3
add
or
aaa
lds
adc
inc
sbb
push
outs
aam
push
jecxz
lods
mov
push
mov
aaa
in
sub
retf
out
xchg
test
jle
and
cdq
adc
outs
adc
mov
add
fcomip
div
lods
jle
sub
stc
in
sahf
shr
sbb
dec
mov
pop
jo
xor
xchg
scas
xor
inc
cdq
lds
mov
sub
or
retf
(bad)
mov
pop
call
sub
repz
shl
ins
ja
shl
scas
ds
ins
inc
dec
push
aam
push
mov
test
adc
jmp
(bad)
out
xor
mov
xchg
je
mov
test
sar
lds
mov
cmp
jle
neg
sub
push
stc
cmp
cmp
pusha
popf
mov
inc
test
sbb
add
out
test
retf
sbb
int
call
mov
dec
xchg
mov
imul
(bad)
into
js
mov
or
lods
aaa
fsub
xchg
sub
lds
test
inc
mov
iret
push
dec
in
clc
push
aas
sar
sar
push
xchg
retf
scas
pop
push
pop
popa
xor
mov
xor
dec
dec
sub
aad
dec
mov
sub
mov
sub
mov
loop
cmps
dec
mov
inc
aad
push
xlat
push
mov
jecxz
xchg
inc
mov
jp
shr
mov
push
and
stos
shl
adc
(bad)
aad
pop
mov
cmp
loope
sub
icebp
or
rcl
(bad)
add
inc
retf
call
xor
ds
mov
pop
xchg
mov
imul
xchg
int
mov
call
xchg
sub
sbb
push
pop
jbe
xchg
daa
sub
and
movs
xor
push
scas
clc
and
and
mov
sbb
mov
aas
dec
enter
retf
pusha
dec
mov
add
stos
or
jns
jp
pop
fwait
dec
int3
mov
jle
mov
mov
xor
inc
add
push
or
or
xchg
dec
inc
call
inc
push
dec
sbb
or
jmp
ja
adc
(bad)
pop
dec
cmps
cdq
mov
sub
icebp
(bad)
mov
popf
idiv
add
inc
test
jmp
int3
outs
cmp
or
stos
inc
inc
push
lds
adc
ins
enter
xchg
mov
shl
repz
xchg
cmp
ror
(bad)
outs
jno
pop
push
jo
mov
int3
fs
loopne
pop
mov
lds
mov
(bad)
push
daa
xor
gs
jae
call
dec
iret
ins
sbb
push
mov
loopne
sub
ds
xchg
dec
mov
shl
xor
add
and
popa
adc
rol
ja
ret
adc
cli
pop
and
ss
nop
repz
cmp
mov
test
outs
mov
push
cmp
inc
mov
(bad)
(bad)
mov
adc
cmc
cwde
xor
dec
inc
iret
lds
scas
mov
jmp
pop
push
arpl
dec
outs
xor
xchg
cmp
mov
retf
sbb
enter
push
xchg
outs
(bad)
jmp
lds
xor
inc
in
and
sahf
jno
push
arpl
in
xchg
gs
cmp
inc
xchg
les
addr16
test
rol
call
add
movs
pop
jecxz
pop
inc
popf
and
jbe
(bad)
push
and
add
xchg
fcmovu
adc
or
or
adc
xor
xlat
dec
in
std
popf
jo
push
cmps
mov
xor
sbb
mov
dec
cld
pop
setbe
movs
mov
dec
hlt
xchg
push
or
int3
mov
(bad)
pop
mov
loop
sub
cmp
inc
inc
dec
fs
jnp
cli
dec
mov
pushf
int3
or
lds
sbb
je
inc
rcl
jge
orps
add
popa
into
mov
stos
cmc
xor
test
cli
or
push
xchg
arpl
outs
xchg
push
repnz
aad
aad
jmp
xchg
xchg
fcmovbe
dec
mov
nop
stc
xor
cmp
call
and
and
mov
mov
ret
arpl
hlt
inc
fmul
or
dec
loope
mov
scas
jle
scas
push
int
inc
sbb
retf
imul
das
test
mov
mov
cwde
and
or
push
inc
retf
sbb
aam
(bad)
arpl
inc
lahf
jnp
inc
sbb
out
mov
lods
adc
fistp
dec
sti
mov
jo
dec
mov
push
cdq
sbb
ret
leave
jle
mov
aad
mov
jmp
cmc
out
mov
pop
pop
jp
test
jbe
add
lds
out
imul
cmp
repz
cmc
sub
mov
movs
mov
mov
or
inc
ficom
xor
jecxz
adc
in
xchg
mov
das
sub
pop
pop
mov
enter
lods
loope
xchg
es
mov
les
jl
cld
pop
add
mov
push
add
out
cmc
iret
imul
aad
std
fxch
std
pop
pop
mov
call
push
pop
and
addr16
sbb
xchg
inc
or
sub
sub
ror
outs
mov
or
fisttp
dec
push
xchg
push
nop
push
add
inc
icebp
xchg
aad
sbb
dec
mov
(bad)
jno
pop
jp
gs
mov
adc
shr
inc
mov
cmp
fdivr
andps
xchg
fist
pop
inc
mov
push
popa
mov
mov
popa
in
cli
test
jo
jmp
sub
dec
(bad)
xor
(bad)
push
dec
cdq
mov
xchg
inc
dec
call
push
mov
and
aad
scas
add
repnz
fld
push
mov
test
jmp
adc
or
mov
or
mov
imul
scas
add
or
leave
mov
mov
into
jne
loopne
arpl
std
pop
cmp
jnp
mov
or
in
in
jge
xchg
popa
xchg
jg
sub
push
xor
mov
push
pop
push
nop
int3
out
mov
mov
dec
in
jmp
fisttp
lods
repz
add
shl
and
mov
xchg
repnz
jo
push
xor
mov
cmp
dec
jb
or
and
pop
and
dec
pop
push
call
cli
mov
mov
call
dec
or
fmulp
push
fmul
jmp
repnz
(bad)
and
lods
jne
jmp
add
mul
ins
sbb
xchg
adc
xchg
mov
aad
xchg
fsub
ret
in
loop
lods
inc
dec
int3
int
dec
idiv
or
(bad)
aas
fwait
(bad)
mov
sti
aam
xor
inc
repz
mov
je
ins
jmp
inc
xor
fist
cwde
mov
mov
mov
push
sbb
cmp
inc
arpl
sub
push
ret
pop
nop
mov
xchg
jo
xchg
pusha
sub
pop
out
call
fs
mov
jb
test
and
jae
hlt
sub
mov
fwait
cmps
shl
push
and
add
pop
inc
shr
mov
inc
dec
inc
and
mov
cwde
dec
add
or
call
stos
push
push
shl
jbe
bound
movs
push
sub
and
stc
ja
or
mov
fisub
scas
xchg
fs
adc
add
ja
mov
cld
mov
cmp
dec
(bad)
push
pop
retf
shr
push
ins
shr
xor
push
mov
and
ds
jecxz
mov
adc
lea
inc
push
dec
sti
push
(bad)
and
or
push
pop
push
jnp
mov
out
pop
(bad)
jo
or
retf
jo
cmc
test
aas
sbb
sbb
mov
popf
addr16
mov
mov
or
imul
dec
stc
adc
fadd
shl
xor
adc
add
rol
adc
lods
dec
xchg
and
ins
xor
pop
fsubrp
sahf
sti
push
int
sub
dec
or
call
test
test
outs
or
inc
lods
mov
stos
adc
mov
lea
sub
sub
or
jb
neg
movs
cmp
xchg
and
sti
jmp
ds
and
adc
xchg
dec
sahf
mov
cmp
push
mov
sbb
es
mov
fwait
repz
stc
jg
stos
sahf
in
adc
jmp
xor
xor
sbb
inc
cmp
fcom
push
cdq
cmp
and
jmp
jb
das
xchg
inc
mov
stos
retf
push
xchg
iret
test
or
(bad)
das
inc
stc
cmp
mov
inc
push
(bad)
in
xchg
push
inc
and
fdivr
out
sub
pop
jb
dec
jae
sbb
jne
out
dec
and
sbb
rcr
das
adc
inc
test
idiv
fadd
mov
pushf
test
cs
jmp
stos
leave
stos
mov
clc
push
or
push
stos
mov
mov
imul
in
add
or
inc
mov
ins
jmp
xor
mov
jecxz
popf
jp
cmps
or
cmp
cmp
shr
hlt
call
or
add
mov
push
shl
dec
es
lahf
cmp
imul
xor
ds
sbb
dec
push
mov
loope
add
jle
ins
mov
mov
or
pop
in
jge
test
mov
adc
dec
pop
mov
xchg
push
xchg
sub
jo
pop
xchg
pop
rcl
adc
dec
outs
es
jle
xchg
mov
es
mov
xchg
cmp
dec
pop
retf
add
(bad)
fstp
aam
out
cwde
std
jne
sub
mov
cmp
ror
or
movs
mov
mov
aam
sbb
mov
sub
addr16
jmp
mov
cld
repnz
mov
nop
and
mov
adc
pushf
jecxz
popf
fst
xchg
call
mov
fwait
push
sbb
mov
xor
dec
xor
cmps
or
xchg
mov
xor
pusha
leave
mov
add
clc
lahf
fwait
pop
sub
sbb
push
cmp
retf
fisubr
dec
mov
push
fidiv
pusha
or
cmp
fnstcw
mov
shr
xor
sbb
sub
push
xor
test
aaa
cmps
jbe
lods
arpl
jno
in
std
and
fist
mov
inc
popa
fmul
popa
lods
int3
jae
jle
push
repnz
fs
ins
adc
xchg
popf
mov
and
mov
jmp
adc
stc
push
call
fisttp
or
inc
popa
pop
add
or
(bad)
lock
clc
mov
mov
je
mov
mov
scas
xor
jae
shl
pop
or
xor
adc
sbb
mov
sahf
shl
and
(bad)
in
mov
(bad)
repnz
outs
mov
dec
daa
sub
push
iret
mov
in
loopne
adc
mov
dec
dec
inc
push
jbe
imul
adc
jmp
lds
inc
shl
pop
fwait
enter
dec
jo
push
enter
adc
call
sub
push
xor
loopne
mov
cdq
lahf
lods
push
jmp
adc
push
add
inc
fbstp
and
ror
cwde
iret
fdiv
hlt
(bad)
imul
aam
cmp
jae
mov
mov
mov
xchg
cmps
cmps
sbb
mov
repz
jmp
jmp
call
xor
dec
add
pop
cmp
fldenv
sbb
fcomp
(bad)
out
pop
mov
mov
mov
pop
push
jbe
mov
mov
pop
push
mov
daa
jmp
mov
ret
ins
dec
inc
and
jle
and
mov
jb
cmp
or
add
sub
mov
adc
adc
mov
jo
ret
popf
xor
fidiv
xchg
pushf
push
push
(bad)
push
jno
int3
jnp
sbb
mov
pusha
cmp
(bad)
sub
aas
push
and
add
call
imul
mov
std
sbb
rcr
dec
arpl
lods
cmp
add
rcl
mov
mov
mov
test
out
int
jp
imul
ror
and
(bad)
mov
push
mov
add
call
pop
addr16
dec
and
sbb
cmps
inc
jmp
pop
inc
xchg
mov
(bad)
bound
jns
sbb
add
ins
ret
call
sub
cmp
jnp
mov
lds
sbb
jecxz
pushf
mov
or
arpl
mov
dec
mov
xor
push
aam
ret
mov
fiadd
stos
outs
stc
ffreep
in
(bad)
xlat
xchg
mov
jl
sbb
mov
mov
jmp
jp
jge
stos
mov
and
pop
jo
sbb
stc
inc
sub
sub
push
xor
adc
loopne
movs
arpl
sub
mov
loop
scas
inc
iret
add
dec
lods
pop
psubsw
mov
jne
mov
push
sbb
dec
js
ficom
pop
push
xchg
sahf
icebp
arpl
xchg
scas
inc
add
cmp
jb
or
add
mov
mov
adc
xchg
(bad)
out
mov
xchg
sbb
jle
or
loope
pop
dec
xchg
pop
add
pop
stos
stos
pop
or
lea
xor
retf
out
dec
jmp
dec
loope
adc
inc
sbb
leave
cmp
(bad)
pop
bnd
arpl
(bad)
jp
(bad)
mov
cmps
adc
outs
js
push
pop
dec
push
mov
push
pop
push
test
pop
ror
mov
mov
nop
loop
xchg
inc
xor
jne
and
cmp
inc
mov
mov
aas
fcmovu
xchg
jns
aas
stos
daa
xchg
push
add
mov
mov
fs
mov
mov
iret
xchg
xchg
arpl
pop
(bad)
shr
mov
push
je
dec
mov
push
scas
inc
inc
mov
adc
mov
test
sub
cmps
test
and
je
(bad)
cdq
ds
mov
xor
dec
cs
pop
fcom
pop
dec
stos
cmc
add
xchg
stc
and
ret
push
xchg
dec
push
sbb
mov
cmps
loopne
add
test
inc
out
das
dec
loope
xchg
cdq
fsubr
cld
inc
mov
or
stos
jle
mov
les
idiv
std
mov
shr
cdq
mov
xor
sahf
cli
fs
(bad)
mov
ret
or
retf
ins
cmp
daa
call
sub
cmp
sub
cmp
pop
pop
ins
or
mov
(bad)
push
lock
fisub
stos
cmps
fstp
or
pusha
jmp
fistp
push
mov
sub
pushf
into
jbe
jae
int
retf
xchg
hlt
or
test
(bad)
mov
mov
stos
shr
cs
inc
shl
jg
pop
mov
leave
shr
rol
sub
push
pop
xor
sahf
sbb
(bad)
xchg
push
int
sub
dec
ins
jmp
fldcw
jno
push
lea
(bad)
test
xchg
xchg
fdivr
jl
mov
xlat
dec
xlat
stc
jp
cdq
aaa
das
outs
xlat
push
int3
inc
int3
and
fiadd
retf
sub
call
int
aas
test
fwait
and
mov
or
scas
dec
ror
pop
lock
add
fidivr
push
(bad)
(bad)
fcomp
cmp
ins
popa
test
ds
cld
mov
jge
scas
not
jnp
pop
call
ficom
xor
stos
pop
retf
data16
inc
int
stos
stos
jb
or
mov
call
mov
pop
ins
aad
sub
lea
shl
and
adc
push
dec
sar
ror
push
push
sbb
out
ds
sahf
rcl
adc
jp
mov
or
ins
daa
jmp
xchg
pusha
jb
arpl
inc
imul
scas
fwait
(bad)
mov
(bad)
mov
fistp
aad
out
les
push
je
mov
(bad)
push
or
es
cmp
ss
cli
outs
xlat
cmp
pushf
je
xor
ins
push
and
lea
mov
dec
sub
cmps
mov
jmp
add
mov
cmp
and
add
sahf
xchg
fstp
jecxz
(bad)
cdq
int
cwde
mov
clc
out
dec
imul
mov
adc
retf
sub
jl
jb
retf
lock
cmp
cmps
or
arpl
push
jae
xchg
js
mov
xchg
out
retf
outs
retf
mov
icebp
sar
neg
add
(bad)
mov
sub
xor
fisub
stos
mov
ret
gs
js
cmp
mov
xchg
push
in
(bad)
jmp
dec
(bad)
aad
cmp
ret
sahf
mov
sub
iret
mov
push
xchg
jecxz
aad
in
pop
scas
jo
int3
cmps
or
jmp
dec
icebp
vmovaps
jecxz
mov
pusha
push
in
sbb
add
(bad)
jns
call
push
ins
sti
clc
sbb
cmps
cmp
mov
rol
jmp
sti
test
adc
jp
cmp
jnp
call
inc
dec
cmp
sub
lods
repnz
imul
mul
jl
cmp
or
aas
das
mov
call
std
adc
fld
sub
cwde
nop
dec
mov
repz
and
jne
ss
stos
xor
jecxz
aas
pushf
inc
pop
push
push
test
shl
in
inc
loope
cmc
jns
les
popf
hlt
outs
ror
inc
mov
adc
div
pop
std
data16
or
dec
xor
adc
push
repnz
(bad)
enter
mov
xor
(bad)
retf
jge
xchg
sahf
jle
lahf
hlt
jno
jg
call
pushf
gs
push
and
inc
add
pop
cs
out
add
xor
and
jle
xchg
scas
xchg
lods
scas
adc
mov
sti
ficom
in
int3
leave
mov
in
ja
sbb
pop
sbb
leave
repz
test
cmp
mov
xor
sahf
pop
jecxz
mov
clc
div
mov
adc
lea
cmc
test
mov
jne
xor
bound
mov
sub
loop
or
in
lea
mov
cs
pop
imul
push
movs
test
test
and
cli
cld
das
stc
cli
ins
imul
(bad)
shl
cmp
add
fdiv
adc
clc
jne
mov
pop
sub
inc
sbb
popa
jne
jp
in
pop
scas
loope
inc
push
mov
pop
jnp
add
dec
ror
push
inc
add
je
pop
push
test
loop
scas
jns
popa
xchg
lea
call
jmp
test
mov
xchg
fst
adc
dec
outs
jp
pop
mov
cmp
inc
xchg
and
ins
nop
mov
dec
imul
cwde
repz
dec
fcom
xchg
stos
cmps
sahf
fcomp
dec
jb
push
mov
les
sub
and
cli
nop
mov
jp
add
pop
push
mov
xchg
aas
xchg
fldenv
dec
push
or
ret
popf
pshufw
stc
cmps
and
cmp
jmp
cmp
sbb
fbstp
test
cmps
mov
mov
pop
(bad)
out
pop
push
mov
xchg
add
cs
iret
push
mov
xor
adc
mov
dec
loopne
stos
jg
xlat
push
sub
retf
cmp
xchg
xchg
sub
cmp
jmp
pop
cmp
stos
push
xor
xchg
inc
in
mov
test
adc
in
fsubr
and
adc
xlat
in
dec
cmp
cmp
push
inc
fbld
or
pop
add
out
aas
dec
mov
mov
fnstsw
and
cmp
cmps
add
push
in
jmp
xor
inc
mov
retf
mov
and
ret
icebp
cs
lds
sub
ficomp
in
retf
push
sbb
pop
or
lahf
ins
cs
scas
xchg
pushf
sahf
pop
push
hlt
js
int3
xchg
imul
cli
push
cmp
mov
jl
inc
ss
rcl
cmp
mov
adc
jg
std
mov
mov
push
rcr
dec
mov
es
fs
retf
leave
add
push
jl
sub
sub
xchg
loop
mov
popf
cmp
sub
or
mov
fld1
stos
int3
xor
fdivr
ror
mov
aad
mov
xor
adc
shl
dec
dec
pop
add
(bad)
push
pop
loope
add
and
scas
cdq
jns
xor
in
mov
dec
xor
popa
inc
fldenv
adc
hlt
ins
cmp
and
mov
leave
cmp
(bad)
outs
adc
leave
push
push
fdivr
lock
ds
repnz
stos
call
mov
out
mov
mov
cdq
(bad)
stc
cmps
rcl
mov
cmp
xor
add
mov
mov
repnz
xchg
xor
mov
adc
jl
movs
or
(bad)
jo
out
int
ds
test
cs
es
push
fadd
shr
mov
loop
loop
mov
retf
pop
fst
or
jbe
lods
fwait
pop
(bad)
adc
out
sar
add
jno
out
sar
adc
dec
add
jo
sub
outs
rol
addr16
xor
mov
mov
push
jae
mov
or
mov
jmp
call
adc
mov
leave
mov
clc
or
nop
retf
fnsave
mov
data16
ret
mov
inc
sub
ins
cdq
push
sub
icebp
sub
sbb
inc
(bad)
mov
dec
xor
dec
add
bnd
in
xlat
ret
(bad)
or
pop
and
pushf
icebp
cmp
xchg
xor
pop
sahf
fs
jne
cmc
outs
enter
aaa
mov
ja
data16
xor
xchg
cli
outs
hlt
fisttp
rol
lea
fbld
enter
or
mov
outs
and
fcomp
push
add
div
and
inc
and
aas
fisub
aas
inc
inc
pop
push
sahf
std
sbb
xchg
das
rcr
pop
push
retf
aad
push
add
sbb
xlat
jg
pop
cld
inc
repnz
push
(bad)
scas
xchg
call
repz
in
ss
int
lods
inc
aad
pop
mov
mov
imul
pop
stos
ins
push
jne
push
xor
or
(bad)
fist
cmp
sbb
inc
cmp
push
sub
inc
loop
shl
stos
ds
sbb
loopne
inc
inc
subps
adc
popf
lock
retf
ins
mov
sub
loope
cmp
sti
inc
sar
mov
cmc
popa
lea
mov
(bad)
xor
push
loop
pop
lock
mov
test
cmp
loop
push
fdiv
out
adc
add
scas
sbb
mov
jne
fld
cli
jno
pop
cwde
jmp
hlt
(bad)
std
loopne
inc
data16
push
jae
push
lea
mul
aad
cdq
mov
cmp
and
pop
ins
inc
hlt
jecxz
sub
jle
std
movs
xchg
data16
fs
dec
push
sub
mul
cmp
stos
jno
ds
add
adc
sbb
dec
add
jp
mov
adc
jae
sub
push
mov
push
mov
call
mov
leave
cmp
outs
ret
test
mov
dec
cmp
pop
bnd
add
in
push
cmp
imul
fnstsw
add
adc
sbb
rol
daa
or
cwde
es
mov
sbb
add
(bad)
stos
cmps
ins
or
adc
call
popf
and
inc
dec
cs
js
pop
enter
dec
xchg
pop
mov
sub
repz
nop
test
imul
stos
mov
int
bound
adc
jnp
dec
mov
ins
stos
sub
(bad)
cmc
push
arpl
sbb
mov
cs
out
mov
mov
xor
xchg
jmp
xchg
imul
lea
pop
xchg
mov
bsf
or
jmp
and
and
push
adc
in
(bad)
sbb
dec
aad
nop
cwde
dec
ror
ror
pop
loope
jmp
test
xchg
sti
sub
lods
sub
fild
les
dec
xchg
fcom
inc
pop
in
je
sub
push
aas
(bad)
jmp
sub
push
adc
aam
dec
or
mov
add
dec
mov
mov
jno
outs
inc
xor
fmul
setg
ret
fstp
pop
loop
push
pushf
push
add
cld
dec
enter
cmp
(bad)
sbb
push
xchg
mov
pop
scas
shr
out
push
jge
sub
mov
retf
xor
movs
cld
dec
fiadd
in
push
pop
jp
jb
xor
add
repz
pusha
push
sbb
sbb
arpl
or
xor
mov
int3
push
sub
mov
mov
fiadd
sbb
shl
xor
mov
cld
das
sysret
shl
jo
jg
das
fsub
mov
xor
jmp
dec
sbb
jbe
aad
xor
sub
std
cmp
test
fwait
(bad)
clc
fsubr
xlat
pop
adc
pop
sub
popa
les
ds
les
or
push
add
jb
xchg
and
or
adc
test
jge
popa
push
mov
ret
adc
mov
(bad)
cmp
shl
fcmove
pushf
add
sub
cmp
add
das
scas
nop
mov
call
retf
das
cli
and
dec
mov
fldcw
pushf
inc
pop
enter
mov
test
push
sti
pop
movs
xchg
jnp
xor
in
cmp
mov
scas
(bad)
out
pop
cmp
cmps
outs
jns
pop
push
ss
retf
jg
cmp
dec
inc
jns
gs
adc
daa
cmps
pop
cmc
scas
mov
inc
inc
sar
dec
or
dec
cmp
push
jo
out
scas
add
cmp
fcmove
mov
adc
xchg
xor
das
add
enter
mov
pop
jo
or
or
lds
mov
outs
mov
scas
pop
lds
inc
es
nop
cmp
out
push
jae
and
dec
test
sub
xor
in
or
test
jl
in
cmp
cmp
or
or
mov
fldcw
jge
mov
xor
cmp
push
dec
and
xsha256
cmps
xlat
adc
mov
add
and
ins
jo
mov
bound
or
and
mov
loope
ror
xor
(bad)
addr16
xchg
in
ficomp
test
cmp
cmp
icebp
jg
ret
cli
dec
inc
inc
push
lock
mov
push
jnp
cmps
stos
mov
jbe
cmp
out
bound
dec
gs
pushf
in
push
cmps
mov
sub
jecxz
jnp
hlt
repnz
push
dec
inc
lods
daa
pop
push
mov
adc
je
xchg
cmp
push
xor
add
or
pop
jge
or
or
adc
and
mov
scas
fldcw
xlat
sub
and
xchg
and
inc
movs
sbb
adc
and
jno
and
or
(bad)
aad
cmc
xchg
ds
lahf
pop
or
test
mul
jno
sbb
loopne
add
xchg
fsub
push
aam
mov
out
push
add
push
adc
sub
enter
push
aas
shr
push
shl
ins
cmp
jmp
(bad)
jb
cs
xchg
pusha
push
lods
cmp
int3
cli
adc
mov
jno
fild
pop
lea
(bad)
(bad)
pop
test
mov
fucom
lods
in
sub
sbb
ja
adc
repnz
mov
adc
test
in
out
scas
push
setb
cmp
pusha
repz
(bad)
mov
out
test
cmp
mov
fild
call
push
xor
aas
mov
sub
mov
push
test
rcl
inc
scas
sbb
pop
mov
sbb
sbb
push
shl
and
adc
push
adc
dec
sbb
popa
and
sub
or
adc
pop
mov
sbb
fsubr
fcomp
outs
push
(bad)
jnp
inc
mov
mov
jne
jp
or
push
push
pop
leave
or
mov
xchg
pop
cs
lods
out
push
fs
sti
ins
push
pop
jne
mov
rcr
loope
cmp
popf
jl
push
adc
or
jmp
mov
lahf
cmp
lods
xchg
sub
fisub
jmp
cmp
adc
movs
cdq
jl
add
jo
sub
fwait
cmp
jg
out
scas
(bad)
sbb
pushf
in
mov
pop
adc
dec
mov
adc
in
xor
cld
xchg
std
pop
jb
add
jg
and
in
and
push
movs
fcomp
fdiv
jge
inc
in
jmp
dec
xor
call
pop
mov
or
sahf
aaa
pop
aad
dec
push
(bad)
fwait
js
je
push
and
stc
or
mov
mov
das
add
sub
mov
jmp
jne
push
ds
(bad)
mov
fxch
xchg
or
jp
outs
or
mov
xchg
mov
cs
movs
test
or
rcl
in
xor
jl
cli
aad
retf
xchg
sub
cmp
jmp
fisub
daa
ficom
cmp
sub
jge
nop
jle
mov
xor
repz
mov
jecxz
(bad)
and
mov
cmp
mov
cdq
mov
repnz
adc
ss
push
xchg
inc
(bad)
gs
aam
sahf
mov
jge
mov
pop
sub
scas
fdiv
ftst
fs
aaa
retf
(bad)
mov
cmp
(bad)
and
addr16
nop
fidiv
cmp
mov
add
test
dec
and
jno
add
in
hlt
mov
sub
sahf
es
adc
cmovo
lea
stos
sub
push
and
popa
jle
shr
pop
dec
pop
out
push
sbb
shl
jle
adc
ss
inc
dec
retf
add
push
test
mov
lds
adc
es
retf
push
or
jecxz
push
add
pop
push
xor
pop
dec
cs
mov
jo
xor
push
out
(bad)
repnz
stos
or
aaa
les
push
int
jo
imul
outs
call
sbb
fadd
js
push
jmp
fmul
rcl
add
loop
mov
cs
outs
loopne
pop
cmp
stos
cmps
pop
fisub
neg
jne
jne
and
ficomp
dec
push
push
jge
jns
push
jno
mov
xor
ss
xchg
(bad)
(bad)
faddp
lds
mov
div
je
jae
and
call
inc
neg
(bad)
shr
and
pop
retf
fs
es
mov
mov
sti
and
(bad)
cmps
jecxz
adc
cwde
cs
and
pop
fcomp
sahf
push
push
xor
fs
xchg
dec
dec
lods
call
xor
add
jbe
and
ja
add
xor
mov
cmp
lea
mov
mov
mov
sahf
cmp
add
sub
aad
push
xchg
sub
fsubr
cmps
mov
xchg
mov
cmp
fisubr
mov
out
mov
inc
sar
in
jno
xchg
popa
loope
pop
rol
lahf
pusha
xor
mov
sbb
ss
jae
nop
mov
sub
cs
ins
jle
cli
add
(bad)
lods
xor
xchg
push
and
movs
pop
add
sbb
out
pop
or
pop
ds
adc
aaa
xor
add
int
jae
das
jae
retf
pop
xor
xor
pop
es
adc
add
int
jnp
sbb
mov
dec
mov
xchg
mov
mov
lods
retf
sbb
adc
pop
push
outs
jmp
mul
sbb
ffreep
jb
or
fmul
(bad)
int
leave
push
mov
mov
out
inc
retf
in
mov
adc
mov
push
mov
and
sub
cmp
pop
popf
lods
out
das
mov
into
in
je
ret
adc
pop
mov
leave
test
sbb
jbe
jg
mov
hlt
adc
and
mov
movs
mov
fwait
xchg
xchg
dec
adc
jno
movs
push
cmp
dec
and
xchg
into
xchg
adc
push
sti
aas
pusha
xchg
mov
mov
repnz
mov
call
or
pop
mov
(bad)
neg
jne
shl
call
cwde
sbb
xchg
mov
mov
push
scas
cmp
stos
daa
aaa
add
and
ror
sub
lods
add
js
cmp
jb
sti
inc
push
fs
xchg
rol
lods
xchg
aad
push
jo
hlt
push
ins
loop
neg
lods
loopne
dec
je
push
scas
and
xchg
xor
je
or
sub
in
nop
lods
scas
mov
inc
pusha
mov
ror
push
pop
call
dec
push
xchg
ss
aas
ds
fs
adc
mov
push
mov
outs
ja
cmp
fmul
out
push
sti
mov
or
out
mov
icebp
sub
xchg
lods
mov
icebp
lds
clc
fxtract
add
dec
dec
adc
mov
dec
mov
push
jo
ficom
icebp
test
add
xchg
aad
and
sub
dec
daa
xchg
les
lods
out
jmp
jns
test
gs
mov
jl
les
mov
cwde
add
jo
pop
inc
dec
push
and
aaa
cmp
retf
jmp
pushf
icebp
jne
mov
jmp
sub
xchg
xchg
pop
add
cmp
rol
retf
and
repz
(bad)
aam
and
rcl
stos
dec
addr16
sbb
outs
out
push
stos
xor
cmp
dec
push
jmp
adc
ror
sub
jge
(bad)
push
adc
gs
lahf
in
inc
push
and
test
mov
sub
gs
stc
mov
outs
pop
test
and
(bad)
jno
repz
xor
test
pop
stos
outs
xor
js
xchg
mov
daa
pop
mov
jle
addr16
fnstcw
movs
cmp
pop
jge
repz
pop
add
sbb
iret
push
daa
jae
cmp
ss
jo
mov
push
bound
cmp
jb
leave
shl
rcl
bound
add
cmps
rcl
ins
mov
mov
lods
and
jmp
hlt
imul
fbld
mov
enter
hlt
pop
jbe
and
jge
into
and
jne
xchg
fild
cwde
ret
jmp
addr16
push
jmp
jno
cmp
push
lea
xor
jne
shl
es
ja
mov
fwait
out
mov
mov
retf
xor
test
xchg
xchg
add
movs
pop
xlat
inc
mov
mov
or
into
aam
push
dec
dec
popf
jmp
aam
aad
shl
cwde
mov
adc
push
sbb
jp
sbb
pop
enter
icebp
xchg
xor
sub
cmc
loopne
sbb
sbb
lods
shl
push
dec
jns
div
ror
cmp
fisub
stos
jle
jno
cwde
cwde
sbb
jle
xor
test
fdivr
pushf
jmp
je
cmps
(bad)
adc
cmp
fdiv
mov
sub
jle
cmp
or
mov
pop
xor
adc
mov
test
mov
pop
xchg
adc
inc
cmp
jecxz
dec
movs
ss
iret
test
pop
call
ins
ror
pop
ja
mov
daa
scas
push
lock
fisubr
scas
sbb
jg
ss
and
adc
xchg
jmp
xchg
iret
nop
sbb
sub
mov
(bad)
out
adc
jb
cmp
mov
dec
push
cmp
cmp
inc
or
sub
daa
mov
stc
hlt
loopne
loop
adc
mov
xchg
dec
add
inc
test
push
xchg
mov
pop
sti
ja
dec
adc
inc
mov
jmp
mov
les
outs
xchg
or
jmp
stc
pop
(bad)
test
(bad)
gs
adc
repnz
sub
loop
in
inc
arpl
popf
inc
repnz
movs
dec
add
jns
(bad)
inc
cmp
mov
jno
dec
jae
and
mov
repz
mov
push
sub
int3
sbb
xor
test
cmp
test
repz
inc
(bad)
add
cmp
cmps
mov
test
jecxz
dec
(bad)
rcr
pushf
jp
cwde
mov
or
pop
aam
adc
int
lods
pop
(bad)
les
mov
loope
sbb
pop
cdq
jo
add
rcl
sbb
stos
and
cdq
data16
push
fistp
mov
lods
sar
pusha
and
xchg
xor
fstp
pop
sub
(bad)
xor
inc
fwait
adc
cmp
pop
in
jp
pop
idiv
test
add
adc
in
push
pop
in
stos
inc
(bad)
stc
jmp
in
or
sub
mov
outs
ret
je
addr16
inc
out
adc
jp
sbb
cs
pop
inc
and
and
(bad)
(bad)
mov
scas
fst
mov
clc
shl
cmp
pop
pop
lahf
pop
js
sahf
xor
jnp
pop
xlat
fmul
jp
and
pop
js
mov
mov
js
pop
mov
inc
mov
mov
repz
and
xchg
fild
popf
bound
push
cmp
sub
loop
push
mov
and
xchg
cmps
pop
aad
cmp
(bad)
lods
push
loope
and
es
ret
or
pushf
mov
jecxz
mov
test
cmps
int3
adc
lahf
mov
(bad)
out
aam
jne
jns
cmp
sbb
imul
or
fist
inc
add
test
dec
pop
and
jl
inc
xor
clc
pop
adc
jmp
mov
push
jmp
lods
jne
adc
sbb
(bad)
fistp
(bad)
sbb
test
hlt
mov
popf
push
dec
cdq
xor
btc
cli
in
xor
add
out
mov
out
pusha
sub
lods
xor
jns
mov
dec
out
pop
lods
out
jo
sub
jp
fcmovbe
push
mov
popa
movs
inc
push
in
cmp
movs
mov
ss
jg
jno
aas
retf
push
test
sub
adc
jmp
cmp
jnp
mov
cmp
pop
dec
cmc
and
retf
sub
pusha
pop
and
outs
ss
push
call
mov
lea
out
cmp
xor
sbb
or
cmp
out
adc
mov
dec
aaa
dec
adc
not
loop
jp
jmp
mov
or
ins
jmp
(bad)
cmp
je
jge
push
ins
(bad)
call
lods
ins
arpl
mov
sub
mov
push
sbb
jne
mov
in
add
ds
mov
dec
movs
jo
adc
add
popa
mov
pushf
or
jnp
out
stos
mov
cmp
or
push
cld
sbb
in
das
jae
in
mov
cmc
xchg
jmp
mov
pop
inc
sub
mov
loopne
pop
scas
pop
lods
adc
lea
jne
jbe
dec
mov
sti
and
movs
bound
xlat
shr
push
lds
out
out
jnp
out
cmps
mov
push
fs
pusha
xchg
nop
xor
ds
pusha
or
(bad)
pop
stc
aaa
or
cmp
je
xlat
push
call
push
sub
mov
and
mov
mov
push
ret
dec
xchg
pop
cmp
xchg
xchg
ja
dec
in
cli
enter
mov
jmp
daa
xchg
xor
scas
sbb
adc
retf
fucomi
pop
inc
push
xchg
and
jg
mov
in
fwait
jmp
mov
aas
loope
fdiv
push
outs
lea
push
jbe
pop
push
mov
test
or
mov
pop
mov
push
rcr
mov
ficom
sbb
aaa
lock
outs
mov
cli
pop
popf
xor
fcomp
sbb
xchg
out
dec
pop
scas
shr
repnz
mov
jae
dec
push
call
xchg
div
scas
ror
xor
fstp
push
pop
rcr
leave
(bad)
dec
add
test
lock
mov
push
retf
and
xor
or
mov
arpl
and
cmp
mov
push
xlat
(bad)
mov
ins
cmp
adc
lahf
(bad)
sti
sbb
mov
outs
lock
dec
mov
cmp
int
ret
(bad)
clc
pop
aad
pusha
les
(bad)
inc
mov
mov
pop
sub
jp
sub
jg
xchg
dec
xor
sbb
int3
sub
add
ins
fsub
in
add
fsubr
mov
out
lahf
out
out
sbb
ret
sub
cwde
xlat
aas
mov
(bad)
outs
repnz
dec
push
jg
lea
pop
and
ret
adc
adc
jecxz
jl
(bad)
fs
pop
xchg
and
es
push
aaa
push
fimul
mov
and
outs
or
ds
retf
mov
mov
jp
cmp
cmps
dec
inc
neg
jmp
add
test
retf
sahf
rcr
ror
mov
das
push
xchg
sub
adc
adc
xor
popf
dec
cmc
sub
and
adc
stos
adc
inc
ins
cmp
inc
inc
mov
aam
sbb
sub
pop
adc
sbb
ret
xor
jg
push
mov
stc
add
adc
test
rol
jg
lds
scas
cdq
push
cmps
inc
push
dec
pop
jl
push
pop
jae
jle
cmps
test
sub
jg
pop
icebp
int3
dec
mov
call
jnp
data16
iret
or
ficomp
in
cmp
push
push
icebp
paddusb
or
add
adc
dec
test
pop
inc
mov
xchg
je
mov
and
sti
jmp
(bad)
push
sub
lock
ja
pop
scas
cmc
scas
pmaxub
pop
jae
xchg
xchg
shl
stc
sahf
or
dec
add
repnz
adc
test
xor
popa
jg
das
inc
sbb
cmp
xor
pop
jmp
mov
retf
and
popf
fimul
xor
inc
sbb
fisubr
not
idiv
mov
dec
adc
xor
sbb
pop
cwde
lods
adc
pavgb
out
movs
xor
gs
ja
cld
jp
push
out
call
cmps
cli
mov
push
(bad)
mov
xor
pop
adc
sub
das
std
sbb
xor
pop
pushf
sbb
lds
sub
xlat
stos
push
jmp
icebp
cdq
sub
clc
jmp
and
mov
dec
dec
into
pop
or
mov
and
xchg
xchg
aaa
xor
jo
cmps
and
sub
pop
mov
cmp
jmp
xchg
add
pop
mov
repnz
fsub
std
sti
sub
cdq
adc
(bad)
sar
out
and
cdq
outs
cmp
xor
sbb
sbb
pushf
mov
lahf
rcl
mov
mov
mov
push
mul
dec
mov
ret
(bad)
out
pop
es
sbb
mov
push
mov
sbb
and
mov
data16
bound
mov
lds
xor
mov
test
xchg
add
jp
test
in
jl
sar
add
cdq
adc
sbb
mov
cmp
mov
xchg
sahf
sti
ins
jae
xor
or
xchg
or
mov
hlt
xchg
mov
xor
jmp
xor
inc
cdq
enter
add
xor
xor
push
scas
shl
add
sbb
xchg
sbb
push
sahf
jb
out
test
sub
cmps
push
in
cmps
sub
rcl
bound
fcomi
inc
mov
movs
mov
jmp
pop
xchg
xor
ja
iret
sub
add
aaa
sar
sbb
jnp
jecxz
fisub
dec
call
lock
inc
pop
loopne
sub
mov
xlat
cmp
imul
cmp
test
push
xchg
xchg
xchg
(bad)
xchg
add
push
rcr
rcl
fxch
adc
jno
or
movs
int
cdq
jbe
aam
pop
mov
xchg
fiadd
ret
push
push
adc
into
std
lods
xchg
sub
ds
fimul
cmp
or
in
push
in
xchg
xor
lock
pop
nop
jno
clc
inc
or
dec
ror
lahf
ror
movs
sub
es
jb
test
dec
enter
sbb
push
add
rep
sar
xchg
mov
xchg
fld
xor
js
inc
dec
inc
repz
mov
lea
sbb
scas
xor
sbb
cmp
ss
into
mov
inc
dec
fs
xlat
ror
pushf
cs
add
cli
add
sbb
pop
bound
rol
cld
loop
mov
movs
pop
mov
sub
lahf
xor
loop
dec
jp
rcr
lock
pop
aas
xchg
pop
into
std
pop
fsubr
mov
inc
pop
inc
dec
aad
pop
fistp
pusha
stos
dec
sbb
pop
into
loopne
std
jge
daa
ins
(bad)
dec
xor
or
mov
or
movs
cmp
ds
test
loop
pop
inc
hlt
or
daa
pop
gs
add
adc
and
push
mov
cs
das
mov
imul
adc
fwait
jmp
cmp
loop
or
xchg
adc
inc
or
adc
mov
push
lea
sbb
sbb
daa
jo
or
mov
aad
jmp
pop
and
sbb
aas
retf
aam
adc
aad
shl
clc
mov
test
mov
call
out
inc
dec
test
xor
push
sub
repnz
popa
ins
lods
hlt
gs
cmp
mov
sub
stos
push
stos
sbb
jo
retf
out
mov
rcr
int
mov
adc
(bad)
or
pop
mov
scas
jmp
adc
int3
(bad)
fcomp
(bad)
mov
loopne
(bad)
shl
out
or
int3
(bad)
stos
dec
int
je
(bad)
fmul
cli
or
fwait
pusha
gs
imul
and
push
(bad)
push
mov
fsub
ins
jecxz
or
ja
int3
movs
shl
push
add
jp
sub
mov
push
lds
movs
xor
sar
into
jo
leave
cs
ins
jmp
sbb
fsubr
icebp
loop
adc
scas
add
loop
out
dec
enter
add
push
or
addr16
out
inc
scas
ret
mov
and
arpl
mov
fs
leave
cmp
or
out
cmp
retf
ds
scas
lods
mov
lahf
xor
mov
sti
push
and
mov
cmp
cmp
lock
cmp
out
add
cmp
xchg
stos
pop
xchg
sub
idiv
stc
pop
dec
push
push
mov
mov
mov
shl
xchg
cdq
hlt
pop
push
xchg
sub
stc
cs
outs
retf
cmp
pop
jg
or
scas
stos
icebp
scas
(bad)
scas
mov
fnstcw
sub
xor
fs
lds
mov
ror
xchg
call
pop
pusha
push
shl
movs
int3
sbb
add
or
cmp
xor
retf
inc
out
enter
movs
pop
sbb
cmc
in
dec
(bad)
adc
jecxz
(bad)
addr16
dec
push
retf
pushf
scas
fcmovbe
push
xchg
out
xchg
mov
pop
jno
or
pop
mov
cmps
arpl
mov
out
sbb
scas
outs
jle
push
cmp
inc
popf
or
das
xchg
jg
(bad)
jmp
mov
ss
mov
inc
shr
pop
sbb
cmp
out
mov
popa
scas
out
test
jae
(bad)
call
icebp
test
in
push
xor
jp
push
popf
xchg
fldenv
sbb
icebp
mov
mov
xchg
test
add
push
mov
adc
mov
ja
mov
ins
push
loope
or
lods
pop
or
arpl
ds
mov
sbb
movs
adc
push
push
xchg
sbb
mov
lds
jg
xchg
(bad)
cmp
push
mov
inc
bound
dec
(bad)
in
push
inc
mov
out
inc
daa
and
pop
mov
pop
and
bound
or
jnp
sbb
test
cmp
fstp
(bad)
into
test
retf
sub
sahf
dec
xchg
ins
sub
into
inc
add
mov
inc
ins
inc
adc
arpl
movs
add
jnp
jl
mov
int
or
in
cmps
pop
stc
push
or
xlat
adc
imul
pushf
add
mov
stc
and
jo
dec
scas
mov
lahf
jno
mov
ror
daa
leave
nop
pop
jnp
cmp
fisub
aas
(bad)
bound
inc
addr16
inc
aas
push
pop
pop
mov
(bad)
adc
mov
and
cmp
aam
or
iret
and
lock
or
cdq
dec
push
dec
jbe
sbb
dec
mov
dec
cmp
pop
shl
sub
sub
hlt
nop
jl
sar
push
mov
pop
in
push
(bad)
inc
add
sub
rcr
xchg
fwait
and
je
mul
mov
outs
inc
ret
cmp
leave
fisttp
jp
xor
jp
jp
mov
int3
xchg
fldenv
movs
jno
mov
pop
stc
push
mov
cmp
in
inc
out
inc
jno
gs
mov
xor
daa
and
sub
mov
push
fimul
xchg
xchg
jmp
psraw
mov
dec
int3
xchg
inc
jnp
cs
dec
rcl
or
xchg
adc
inc
mov
push
clc
stos
xor
retf
(bad)
pop
test
sbb
and
xchg
dec
adc
fs
mov
and
or
mov
or
frstor
lahf
cdq
or
adc
pop
(bad)
hlt
jle
enter
lds
test
mov
ret
enter
mov
cmps
mov
idiv
shl
mov
gs
mov
sub
fild
mov
or
cmp
ins
xchg
cmp
jg
xchg
test
hlt
cmps
mov
dec
stc
mov
xor
mov
clc
pushf
sub
xlat
sub
mov
dec
fisubr
inc
push
retf
movs
ins
repz
dec
loop
or
sbb
xor
push
ja
lods
push
dec
pusha
pop
add
cmp
icebp
xlat
mov
enter
les
mov
imul
or
fstp
pop
push
push
cld
jle
mov
mov
or
(bad)
je
test
xor
sbb
(bad)
xlat
push
xchg
mov
fadd
mov
xchg
cdq
inc
(bad)
and
cmps
data16
inc
stos
imul
jnp
cld
shr
les
inc
xor
stos
jg
jmp
xchg
push
jle
stc
pop
sbb
ins
cmp
xchg
cli
sub
into
dec
imul
call
dec
adc
mov
adc
std
add
ret
lods
fs
int3
add
jecxz
ds
adc
les
add
fs
mov
std
xor
retf
loop
sub
pop
mov
push
fdiv
cmp
std
mov
mov
jle
test
adc
jno
fst
(bad)
xchg
xchg
test
repz
call
mov
push
cmps
hlt
mov
nop
fwait
adc
xchg
mov
(bad)
loope
test
mov
aam
xor
dec
sahf
setle
test
repnz
jmp
jmp
rcl
adc
outs
ret
push
adc
ja
inc
pop
or
add
movs
loop
dec
mov
mov
test
sahf
clc
rol
(bad)
mov
sbb
loop
ror
pop
pushf
in
shl
stos
jp
jns
xchg
cmp
sub
mov
sti
out
mov
sub
push
and
cmp
cmp
scas
pop
sub
adc
call
dec
pop
or
(bad)
es
adc
sahf
clc
arpl
mov
aas
loope
and
dec
fdivr
sub
push
mov
pop
ret
cmp
scas
adc
push
or
mov
and
mov
or
in
cmps
pusha
popf
arpl
retw
sti
or
test
mov
data16
movs
rcr
cmps
ds
imul
stc
(bad)
aaa
stos
inc
xchg
retf
dec
mov
ins
adc
iret
xor
add
cmp
(bad)
dec
hlt
cmp
mov
xchg
addr16
ins
adc
int3
push
jecxz
mov
pop
fld
ds
pop
fbstp
(bad)
mov
(bad)
push
jns
jbe
fdiv
lea
cdq
xchg
mov
and
pop
(bad)
pop
into
in
sbb
xchg
sub
cmp
aas
mov
pop
xor
rcr
mov
loop
pushf
push
fs
jmp
cmp
lock
call
add
fmul
test
and
push
jns
jecxz
push
cmps
test
mov
inc
or
ins
dec
pushf
adc
cdq
xlat
inc
xchg
xchg
pusha
pop
jl
scas
xor
inc
in
leave
pop
out
idiv
xchg
add
stos
adc
adc
sub
neg
call
jbe
dec
xor
jmp
rcr
mov
pop
adc
sbb
pop
fld
and
dec
mov
retf
inc
ror
and
into
fnstsw
sbb
mov
add
mov
loopne
ret
loope
repnz
sub
or
data16
out
push
ret
movsx
and
mov
sbb
retf
pop
js
pop
xchg
(bad)
fiadd
mov
adc
leave
push
cmp
push
cli
shr
scas
mov
icebp
popf
lods
aas
pop
jnp
xchg
test
arpl
adc
cmc
jecxz
push
ins
cli
mov
and
into
inc
mov
(bad)
(bad)
fdivr
shl
retf
mov
xchg
jns
daa
sbb
or
cwde
dec
dec
and
mov
(bad)
popf
pop
mov
ror
fstp
mov
in
test
xor
add
shl
in
jae
pushf
push
mov
cmp
xchg
loop
gs
(bad)
push
aaa
leave
stos
pop
ret
dec
jle
imul
bound
cmc
push
(bad)
mov
pop
mov
add
cmc
outs
ret
retf
(bad)
jo
pop
adc
addr16
cmps
test
data16
mov
leave
retf
jns
sbb
dec
mov
mov
mov
dec
jb
mov
int3
mov
or
sub
cmp
adc
sbb
inc
in
js
inc
jmp
into
in
stc
jle
xor
ins
aas
jle
jecxz
movs
push
inc
pop
adc
jne
data16
dec
adc
mov
daa
jl
xchg
ror
push
and
outs
jae
lods
and
jo
sbb
es
mov
sar
scas
hlt
jne
lods
add
stc
jb
lock
test
int
or
pop
jbe
movs
loope
adc
ja
inc
xchg
pop
bnd
pop
mov
sub
adc
cwde
dec
inc
jmp
aad
dec
hlt
and
mov
rol
pop
test
sti
fwait
cmp
jmp
xchg
neg
mov
adc
(bad)
mov
loop
inc
shr
(bad)
das
in
jb
add
inc
adc
popf
popa
xor
movs
pop
repnz
inc
in
ja
adc
jae
mov
dec
leave
ja
hlt
cmps
jmp
fdivr
adc
xor
inc
mov
dec
jle
outs
inc
adc
pushf
mov
push
mov
mov
push
out
inc
(bad)
mov
mov
ja
xchg
jnp
shl
fcmove
ja
in
js
jne
and
and
xchg
inc
mov
cmp
cld
mov
add
cmc
adc
clc
add
mov
add
or
in
adc
jo
pop
jl
mov
js
add
lods
cwde
aaa
inc
gs
not
cmps
add
adc
outs
fcom
pop
(bad)
fcomp
jp
add
fwait
and
xchg
int
sbb
add
pop
xchg
add
dec
rcl
hlt
add
or
fadd
fwait
dec
mov
add
gs
push
sub
xchg
inc
stos
mov
dec
or
in
push
(bad)
ficomp
lahf
cmp
cmovg
mov
mul
lods
retf
ins
ret
cld
out
pop
bt
inc
xor
test
sahf
cmp
pop
and
mov
sbb
bound
push
mov
xor
or
ficom
add
jg
mov
fldenv
cmp
nop
xchg
jg
out
inc
hlt
sub
sub
mov
mov
aas
daa
push
ss
mov
ds
gs
jno
and
repnz
push
fistp
pop
and
lahf
push
add
popa
mul
les
in
(bad)
aaa
push
push
scas
pop
add
jl
mov
and
mov
shl
in
fisubr
es
sbb
pushf
sar
mov
lea
loope
cmp
mov
mov
sti
push
xor
cld
jns
push
test
mov
sub
sbb
xor
ins
mov
mov
nop
rcl
and
clc
(bad)
lods
mov
mov
mov
in
xchg
cld
test
xchg
dec
pushf
repnz
and
pop
cmp
push
cmps
dec
pop
xor
imul
iret
je
mov
or
pslld
sub
mov
push
dec
jmp
mov
lods
(bad)
hlt
sub
xor
mov
pop
test
aam
jae
fidivr
inc
push
jmp
repz
dec
lock
pushf
mov
add
and
nop
ss
sub
add
jmp
in
xor
push
dec
inc
dec
mov
loop
xor
push
xlat
leave
mov
pop
mov
dec
and
jno
cs
dec
jb
add
jae
sub
pop
fwait
add
adc
sbb
jle
mov
shl
inc
fld
add
out
sbb
fdiv
mov
ret
js
rcl
(bad)
mov
mov
bswap
sub
scas
cs
dec
mov
outs
pop
movs
dec
push
fist
add
iret
out
mov
adc
fs
movs
jo
sahf
xor
sub
movs
leave
inc
mov
cdq
adc
in
xlat
xor
inc
ins
xor
and
or
xor
or
(bad)
out
fmul
add
fild
sub
sbb
add
fisttp
popa
pop
sar
sub
mov
aas
mov
and
enter
fisub
test
iret
xor
scas
ror
mov
std
pop
test
gs
mov
not
mov
push
out
sbb
icebp
xchg
test
cwde
fwait
pop
dec
hlt
(bad)
mov
test
cmps
stc
mov
cmps
mov
sub
dec
stos
mov
jle
cmc
iret
push
xchg
mov
mov
jmp
(bad)
pop
adc
fnsave
jmp
cmps
dec
mov
stc
mov
mov
int
test
daa
jge
inc
call
xor
cdq
sbb
scas
sti
mov
cmp
jmp
cmp
mov
cmc
mov
push
scas
mov
jmp
push
xchg
mov
call
xchg
xlat
cmp
sub
rol
imul
scas
mov
mov
jmp
div
xor
add
(bad)
cwde
in
add
mov
mov
pop
jmp
out
int3
xor
(bad)
adc
sar
bnd
aas
test
scas
daa
jnp
jbe
mov
xchg
fisttp
dec
xchg
gs
ret
fs
xchg
shl
xchg
fwait
cdq
in
pop
xor
sbb
mov
ds
scas
cmp
inc
ret
dec
icebp
fld
jo
dec
mov
or
pop
cmps
leave
and
sbb
xor
push
add
mov
fsubrp
sbb
xor
repz
push
sub
push
cmp
pushf
test
(bad)
push
mov
cmps
xor
enter
fcomp
cvtps2pd
sbb
hlt
mov
pop
xchg
dec
adc
test
xor
adc
(bad)
stos
xchg
ficomp
push
or
out
jnp
sbb
sub
cwde
mov
dec
add
aaa
rol
imul
cmp
mov
repz
push
(bad)
cmp
cmps
fistp
mov
and
fiadd
add
(bad)
xchg
imul
dec
adc
cli
pop
sbb
mov
adc
inc
mov
lock
call
xor
add
(bad)
loop
mov
push
test
pop
repnz
rcr
cmps
ror
aam
fstp
test
nop
mov
in
inc
mov
mov
or
stos
bound
test
mov
xor
lods
mov
mov
mov
push
xchg
inc
dec
jo
push
int3
inc
jbe
add
push
push
arpl
(bad)
inc
into
jo
lock
push
mov
imul
and
or
push
jp
pushf
cmps
pop
ds
push
nop
inc
lea
leave
add
push
scas
dec
push
sub
ret
movs
rol
je
xchg
xor
push
mul
mov
(bad)
dec
jmp
adc
push
adc
cwde
mov
and
sti
xchg
mov
or
jmp
arpl
mov
fild
jbe
jmp
lods
add
mov
aas
cmp
cmc
push
inc
dec
out
(bad)
cmp
pop
cmp
or
enter
mov
mov
addr16
dec
jge
xor
jnp
dec
mov
jle
inc
loopne
hlt
mov
movs
cli
(bad)
loopne
outs
jo
push
iret
xchg
pop
je
jl
dec
cli
mov
mov
sub
push
(bad)
mov
movs
fs
xor
mov
call
dec
cmps
cmps
inc
mov
fadd
mov
(bad)
clc
mov
cmc
movs
inc
sub
fs
xchg
push
add
cmp
in
mov
or
inc
cmp
mov
mov
push
and
test
in
xchg
sub
pop
jge
xchg
mov
(bad)
in
pushf
push
retf
(bad)
xchg
fdivr
and
push
mov
cwde
daa
xchg
leave
mov
shl
pop
das
jo
xchg
jb
dec
cmps
jnp
cmp
test
mov
sbb
sbb
sbb
sti
pusha
push
jno
sub
in
nop
add
cli
jae
stos
fdiv
call
movs
add
ds
xchg
loopne
jmp
xchg
mov
dec
leave
aad
es
add
mov
cmp
aas
and
cmp
rcr
enter
push
mov
inc
mov
push
fst
dec
or
mov
call
fsubr
xchg
cmp
das
xchg
push
dec
jmp
jbe
ja
or
jb
test
xchg
add
mov
les
add
push
les
fldenv
and
mov
xor
and
test
xchg
push
les
or
jmp
nop
cmp
in
and
inc
jge
push
mov
and
adc
outs
jo
mov
xlat
and
stc
xor
mov
mov
cmp
stos
xor
jg
shl
es
xchg
aad
popf
jle
fisttp
dec
or
fist
retf
and
lock
xor
int3
(bad)
fimul
jmp
repnz
out
(bad)
push
(bad)
jno
mov
and
jb
fcomp
test
dec
idiv
js
xchg
push
cmc
ret
sub
int3
push
clc
jno
xor
rcr
or
(bad)
outs
out
sub
lea
loopne
jge
adc
test
push
mov
ds
pop
fwait
lods
push
or
sub
cmc
shr
mov
repnz
in
dec
jbe
jle
dec
add
mov
xchg
fadd
inc
inc
jp
mov
stc
(bad)
rcr
fld
push
fdiv
(bad)
sbb
call
inc
cdq
xor
xor
xor
cmps
and
loopne
cmp
and
lock
jns
or
lahf
push
sahf
lahf
mov
test
hlt
ja
test
mov
jno
dec
inc
(bad)
push
icebp
int3
mov
pop
jbe
loop
inc
xchg
icebp
(bad)
push
shl
in
push
add
sahf
add
mov
adc
xchg
cmp
mov
xchg
popa
cld
pop
pop
mov
sbb
push
push
or
leave
and
sub
or
push
jmp
fdivr
ret
jnp
xchg
popf
stos
mov
data16
imul
pushf
retf
movs
sbb
repz
pop
mov
mov
je
sub
dec
cmp
xor
inc
iret
mov
mov
retw
adc
jno
mov
sub
mov
mov
and
mov
or
das
adc
retf
fld
sub
mov
retf
outs
out
xor
sbb
mov
fcom
fadd
mov
mov
(bad)
outs
and
loop
pop
jae
add
pop
inc
iret
call
es
add
mov
inc
mov
or
sbb
mov
pop
inc
sub
fs
nop
rol
push
out
adc
xchg
adc
add
add
adc
std
add
push
fldenv
add
inc
push
ss
ror
adc
mov
es
bound
cs
adc
inc
movs
pop
fist
fwait
imul
inc
les
xchg
les
add
dec
mov
in
fs
cmp
dec
cld
sub
cmp
and
fwait
cli
pop
mov
pop
add
pop
sbb
(bad)
cmp
repz
xchg
test
sub
pop
dec
jmp
mov
enter
call
gs
(bad)
inc
cmp
xor
icebp
mov
cli
in
cld
ret
retf
jnp
les
iret
out
or
shl
pop
std
and
xchg
loop
jno
sbb
retf
iret
push
jge
adc
rcr
in
dec
add
sbb
or
push
test
popf
xchg
mov
mov
jmp
cld
sub
fs
lds
and
fisub
cmp
mov
or
cmp
sub
sub
jo
mov
pop
and
xor
fwait
mov
inc
rcl
out
pop
mov
add
stc
retf
inc
aas
mov
jmp
stc
xor
mov
test
rcl
in
xor
xlat
rcl
push
test
call
sar
call
xor
or
dec
leave
xchg
sbb
cmp
push
(bad)
xor
pop
mov
cmp
lock
ficomp
daa
fsub
cwde
mov
sahf
mov
ficomp
push
mov
mov
sbb
fild
jns
imul
mov
xchg
fsub
dec
(bad)
popf
sub
outs
into
shl
jae
cmp
add
jno
pop
cmp
cwde
cs
and
loop
mov
jmp
jmp
mov
idiv
loop
nop
rcl
scas
mov
inc
or
in
push
sub
aas
xor
or
in
ret
adc
push
(bad)
int
mov
mov
pop
sub
add
push
icebp
in
sub
nop
adc
or
iret
xor
xchg
ror
add
int
loopne
push
int3
stos
cmp
mov
icebp
test
push
xor
jmp
jno
push
jg
and
(bad)
adc
xor
fcmovbe
mov
sti
adc
sbb
xor
dec
mov
inc
ror
fwait
retf
mov
lea
push
sar
sahf
aam
repnz
dec
ret
mov
popa
fs
mov
cmps
ins
jge
inc
push
sub
(bad)
(bad)
arpl
loop
xchg
in
outs
inc
cmc
sub
jp
xchg
leave
popf
mov
aad
stos
sub
jbe
mov
out
add
cs
hlt
cld
jnp
xor
shr
xchg
cmp
push
ret
pop
out
cmp
xlat
lock
nop
xchg
(bad)
int3
sub
lods
ret
dec
test
mov
sbb
shl
test
xor
inc
cdq
shl
repz
sub
test
sub
outs
mov
outs
xor
aaa
jge
ss
mov
add
and
std
xor
sub
cmp
fcom
ins
cmp
xor
xchg
fbld
pop
mov
push
add
in
pop
adc
fnstsw
es
int
ror
xchg
jg
lock
inc
add
inc
jp
ins
(bad)
popf
or
aam
mov
call
or
add
mov
ja
lods
dec
pusha
mov
push
mov
pop
jle
loop
ret
jns
outs
cwde
jb
fcmovnb
(bad)
(bad)
cmp
push
add
push
fidiv
daa
xor
retf
aas
or
push
xchg
(bad)
xlat
shl
xor
jl
in
stc
cmp
xchg
push
data16
push
aaa
inc
or
dec
add
and
test
sub
das
loopne
enter
test
and
out
outs
jae
aas
test
mov
xchg
dec
das
adc
loopne
aad
arpl
hlt
int
rcl
call
sbb
ins
sbb
mov
xor
add
rcl
sbb
rcl
icebp
in
popa
in
xchg
mov
pop
sbb
ret
fiadd
xchg
jge
pop
(bad)
(bad)
or
jmp
mov
mov
sub
xor
add
dec
lods
push
rcl
in
leave
mov
fst
je
nop
xchg
dec
out
out
or
scas
rcl
push
mov
push
dec
jge
mov
add
jg
repz
add
into
test
and
pop
push
cmp
sub
and
ss
stos
mov
cdq
clc
mov
mov
or
lods
int
outs
sbb
jb
jecxz
ror
sbb
push
cmp
add
sar
jbe
adc
pop
cmps
adc
shr
jnp
shl
in
dec
stos
(bad)
out
dec
out
int3
test
cmp
inc
pop
mov
ret
mov
xor
mov
popa
inc
ja
(bad)
out
xor
jne
dec
std
in
pop
repnz
movs
cmp
out
push
cmc
pushf
and
cmp
xchg
pop
lea
pop
or
add
sub
retf
xchg
sahf
iret
push
sbb
ja
sbb
ins
inc
or
sub
je
lea
adc
sbb
and
jae
add
dec
adc
lahf
xor
sub
dec
call
xor
mov
enter
addr16
inc
jo
and
or
adc
jmp
dec
fs
pop
test
dec
movs
sbb
jmp
push
xchg
in
fidivr
fwait
ret
cmc
std
daa
daa
cmp
sub
jecxz
push
lock
dec
pop
inc
cmp
in
jge
pop
xchg
mov
mov
test
push
mov
mov
mov
in
test
add
pop
je
mov
push
dec
pop
adc
imul
add
hlt
movs
not
adc
fist
adc
jmp
out
je
mov
and
(bad)
jns
push
mov
add
sbb
add
out
xor
jne
or
in
pop
cmps
add
call
mov
push
lock
xchg
outs
movs
or
inc
or
dec
retf
cdq
repz
adc
xor
fisttp
cmp
(bad)
mov
xor
aas
lea
sub
retf
dec
les
pop
mov
lahf
cmp
mul
clc
or
jmp
pop
enter
inc
cs
pop
sub
and
sub
sahf
push
mov
(bad)
sbb
lea
call
push
and
dec
int
fidiv
rcl
and
gs
adc
iret
jmp
outs
jp
cmp
sbb
(bad)
rcr
test
daa
outs
dec
dec
retf
sar
add
hlt
push
retf
cmp
push
jnp
nop
test
out
sub
xor
pop
and
cmps
loop
mov
inc
stc
fcom
push
mov
pusha
fadd
mov
jne
imul
xchg
pop
mov
mov
or
ins
mov
retf
lock
push
pop
inc
fsubr
mov
daa
sbb
lods
cmp
out
sub
sbb
out
xor
sub
pop
or
add
inc
popf
retf
jbe
leave
xchg
clc
and
xor
mov
push
shl
movs
xor
jl
test
ret
mov
fstp
das
sbb
add
mov
push
dec
jns
(bad)
mov
(bad)
and
rcr
inc
xor
push
cmp
out
mov
lahf
stc
sub
test
sbb
add
or
aaa
jno
xchg
pop
add
xor
xchg
inc
pop
or
jne
fwait
or
sbb
xchg
shr
cmp
inc
xchg
cmp
cli
jecxz
fcmovne
or
out
adc
cmp
shl
push
mov
jns
stos
push
adc
(bad)
or
jmp
imul
ror
and
pop
out
not
imul
(bad)
call
xchg
not
aas
cli
mov
sub
das
and
call
pop
lods
mov
fwait
and
push
cmp
pop
jg
jmp
hlt
in
lahf
inc
dec
stc
jne
jns
sbb
mov
rcl
jecxz
sub
loope
rol
bound
inc
nop
xor
clc
mov
scas
fs
mov
div
fild
xchg
stos
mov
mov
inc
adc
sbb
jg
adc
shl
test
cli
ret
jmp
or
mov
and
cmp
ins
cmps
sbb
xor
outs
mov
aad
daa
fcom
add
or
jmp
mov
dec
inc
add
pop
inc
pusha
ins
stos
sbb
(bad)
dec
cmps
retf
out
ins
dec
ret
nop
sub
push
pop
push
int3
sub
xchg
cmp
icebp
pushf
or
xor
in
mov
leave
pop
adc
inc
mov
cmp
ror
cs
aam
add
inc
pop
inc
bound
jl
cmc
das
dec
addr16
sbb
cmp
pop
imul
shl
inc
loop
dec
(bad)
jns
cs
sbb
jae
repz
pop
or
jo
sub
pop
and
sbb
sub
fabs
mov
retf
xor
xor
inc
sub
inc
popa
mov
adc
and
adc
popf
into
inc
jecxz
test
adc
mov
mov
add
sub
pop
pop
mov
mov
inc
jp
fldenv
loopne
mov
dec
lods
popf
jae
xchg
xor
jo
je
std
ret
mov
int3
mov
xor
dec
pop
loope
enter
and
les
dec
add
(bad)
sbb
enter
loopne
loope
gs
loop
mov
stos
pop
add
addr16
mov
cmp
fbld
cld
inc
mov
add
ds
das
adc
fstp
push
call
cli
and
dec
call
or
bound
pop
jmp
dec
push
and
add
inc
dec
jmp
pop
push
adc
icebp
not
push
cmp
push
mov
xchg
je
rcr
push
and
mov
push
and
add
pop
or
pop
mov
paddsb
ins
jo
mov
xchg
sub
sub
sub
(bad)
icebp
mov
inc
mov
fidiv
inc
and
out
div
mov
out
pop
dec
cmp
(bad)
push
and
into
cdq
jmp
pop
mov
or
jecxz
test
sub
add
fidiv
mov
(bad)
cwde
rcl
pushf
sub
stos
idiv
mov
inc
jno
dec
mov
push
push
mov
sbb
or
jl
movs
cmps
cmps
or
dec
inc
mov
fild
cmp
sbb
jmp
inc
pop
jge
sub
fstp
fcom
mov
repz
shl
les
clc
push
std
adc
ficom
ss
pushf
into
and
sub
add
xchg
outs
sahf
cmp
cli
movs
addr16
cld
ficomp
or
out
mov
dec
fld
mov
pop
and
xchg
(bad)
cmp
cwde
imul
shr
loop
stc
jmp
xchg
mov
and
mov
ret
loopne
mov
imul
sbb
inc
test
xor
clc
push
pop
int3
and
mov
shr
fld
stos
outs
out
adc
mov
fisub
mov
aas
or
jo
jo
repnz
sbb
shl
mov
mov
sbb
pop
idiv
mov
lods
stc
mov
out
sub
or
push
pop
js
sub
add
aam
add
jo
mov
push
sahf
mov
jmp
jecxz
fdivr
test
movs
cmp
data16
mov
inc
nop
jns
jp
mov
adc
std
repz
not
mov
jbe
or
stos
out
aas
mov
mov
adc
mov
and
mov
leave
sbb
das
out
stc
xchg
jbe
jae
mov
enter
inc
cmps
imul
jp
fdiv
dec
ret
aaa
jb
test
les
xchg
retf
aas
mov
xor
popa
adc
iret
inc
pop
popf
xor
cmp
iret
sar
xchg
jp
push
ret
mov
sbb
lods
jmp
mov
div
xchg
push
sbb
fisub
cmp
mov
mov
dec
inc
int3
or
add
jne
icebp
mov
xchg
inc
test
div
retf
and
jge
loop
add
pushf
add
(bad)
fmul
outs
dec
cld
loope
sub
fnsave
nop
sahf
mov
fmul
and
pop
out
in
call
fst
frstorw
jno
loopne
add
jae
mov
push
mov
into
push
mov
adc
cmp
popf
xchg
mov
fild
out
lods
mov
in
pop
sbb
pushf
sbb
and
cmps
push
xlat
cmps
push
sub
jmp
mov
xchg
xchg
cli
fdiv
inc
mov
fdiv
fcomip
pop
rcr
cld
shl
sti
outs
clc
push
data16
jo
xchg
add
add
sub
es
cmp
int3
cmps
aad
push
into
cld
int
sbb
aaa
xor
lods
xor
mov
retf
into
out
js
pop
out
inc
xchg
jb
data16
sub
xchg
push
or
xor
std
jg
dec
test
jbe
iret
pop
out
je
cmp
nop
mul
xor
icebp
out
jmp
inc
cmps
mov
cwde
cmp
or
das
mov
mov
xor
(bad)
mov
ficom
xor
and
xchg
and
sub
div
xchg
(bad)
call
mov
fdivr
jmp
fild
rol
or
xor
push
leave
inc
ret
dec
dec
not
iret
in
xchg
push
sub
inc
test
pop
out
mov
test
cmp
mov
mov
lods
xor
es
jnp
repnz
retf
xor
cmp
rcl
ret
sti
adc
lds
jge
pop
fadd
nop
cmp
xor
lock
jmp
dec
imul
in
dec
out
mov
add
outs
ins
sub
or
lods
lods
dec
cmp
sub
push
cmp
sub
xchg
push
sbb
push
add
mov
arpl
fs
lahf
outs
xor
adc
clc
fsubr
pop
cwde
jne
(bad)
pop
sub
adc
outs
cli
xor
pop
pop
popf
adc
or
inc
mov
adc
inc
dec
sbb
push
sahf
mov
pop
adc
ins
test
mov
cwde
in
scas
inc
push
stc
push
cmps
or
dec
jnp
std
out
mov
jb
stc
scas
dec
fsubr
inc
adc
sar
add
out
push
mov
jmp
repnz
mov
sub
aam
stos
test
popa
(bad)
(bad)
inc
mov
shl
jbe
dec
stc
sub
jns
inc
jmp
or
mov
xor
xor
xchg
loop
push
push
call
ja
fsubr
scas
loope
xchg
dec
addr16
aam
cli
sbb
adc
es
jge
(bad)
xor
add
xchg
int3
nop
aam
cmp
jnp
xchg
xor
jmp
std
test
mov
cmc
cmp
stos
stc
mov
mov
(bad)
cmp
mov
(bad)
dec
stos
dec
mov
and
paddq
imul
add
sbb
(bad)
sbb
and
aam
mov
mov
scas
pop
pop
repnz
loopne
out
stos
or
sbb
idiv
fcomp
mov
push
pop
arpl
lahf
sbb
jnp
cmp
popf
rcl
inc
cld
pushf
sub
dec
gs
movs
aas
sub
cmp
and
dec
mov
inc
and
lods
inc
cmc
push
pop
mov
int
cmp
jmp
(bad)
cmp
xlat
lods
test
clc
adc
daa
push
mov
xchg
les
jbe
push
into
cmp
in
cmps
push
loope
push
shl
or
jp
sub
cmp
xor
cmp
call
mov
imul
shl
out
lods
int
inc
fs
push
into
dec
push
xchg
xchg
lahf
jo
ja
adc
mov
pop
cmp
cli
mov
push
jae
sbb
xchg
push
bound
mov
jp
inc
ret
lea
mov
popa
pop
add
popa
mov
jbe
std
sub
leave
je
stc
jmp
bound
mov
sbb
xchg
and
push
fdivrp
pop
sub
pop
pcmpgtd
xchg
xor
jge
ret
cmp
stos
adc
mov
mov
pop
dec
out
mov
jno
inc
add
dec
xor
stos
jae
cmc
sub
add
ins
and
add
outs
push
fiadd
loope
loope
rcl
pop
sar
ss
pop
sbb
dec
ret
cmp
pop
push
test
dec
add
neg
mov
das
and
mov
mov
lahf
jge
ss
jne
imul
jbe
sbb
es
rol
and
inc
ins
mov
and
daa
jg
out
pop
rcr
enter
add
je
xchg
aam
adc
popa
imul
inc
xlat
sbb
pop
inc
sti
pop
(bad)
fnsave
retf
nop
(bad)
dec
inc
inc
jge
neg
cdq
test
pop
outs
sbb
add
out
js
mov
inc
or
lods
or
mov
jnp
mov
hlt
leave
rol
test
in
int
push
cmp
in
pop
popa
lea
shl
xchg
mul
dec
xchg
out
jb
xchg
cmp
jns
jmp
cmp
cmp
aas
popf
es
retf
dec
outs
mov
imul
fcmovnb
jo
jae
popa
pop
xor
and
repz
aad
mov
adc
aaa
or
fucomip
and
mov
sar
sub
adc
push
sti
and
rcr
in
or
adc
fmul
pop
cmp
ds
pop
xchg
ret
loop
xor
frstor
pop
xor
xchg
rcl
outs
sub
arpl
pop
loopne
frstor
xchg
xlat
in
nop
arpl
clc
xchg
scas
and
or
cli
adc
pop
xchg
pop
push
xor
imul
imul
jae
pop
mov
sub
stc
cmp
xchg
shr
pusha
daa
ins
push
xlat
out
das
mov
cmp
add
aas
(bad)
movs
not
aam
dec
pop
push
sbb
and
in
cmp
sub
or
add
mov
ret
fwait
dec
jo
movs
jle
and
or
dec
push
leave
cmp
rcl
pop
xchg
xchg
sar
adc
xor
cli
and
mov
(bad)
out
retf
jbe
mov
xor
out
call
std
call
sbb
ja
js
fild
iret
push
mov
aam
mov
cmps
(bad)
sbb
add
cmp
outs
mov
outs
and
pop
(bad)
add
pop
int3
fxch
jae
inc
push
push
sahf
cmp
fisttp
mov
cmp
(bad)
fdiv
pop
jmp
lea
jp
retf
clc
mov
xor
loopne
sbb
jnp
mov
mov
mov
lods
fsub
adc
repnz
int3
sub
and
mov
in
mov
push
dec
inc
pop
bound
sbb
fwait
or
test
adc
outs
xchg
mov
cmp
jecxz
cdq
retf
es
cwde
jp
imul
aam
jno
out
cmp
adc
test
gs
shl
cwde
shl
fst
sub
inc
popf
jbe
jmp
inc
loopne
leave
add
mov
ror
mov
xlat
cld
mov
fisttp
and
ins
imul
mov
das
mov
cmps
bound
shr
leave
jl
in
jecxz
sub
cli
cmp
repnz
lock
fisubr
pop
push
pop
mov
repz
test
push
sti
and
xor
jb
dec
cdq
xor
mov
in
adc
movs
aam
push
div
xor
jns
xlat
mov
jbe
or
ffree
cmp
cld
xchg
mov
mov
jns
pop
scas
retf
xor
jg
dec
stc
ret
push
mov
out
(bad)
sar
(bad)
dec
outs
cld
mov
and
fs
inc
lahf
push
enter
adc
sub
jp
mov
mov
inc
ror
imul
pop
in
imul
sub
out
push
and
cmps
sahf
retf
fcmovnu
push
retf
call
rol
push
cmp
sti
cld
ror
cdq
jne
add
ror
or
call
push
sub
psubw
ss
cmp
mov
daa
stc
sub
sti
cs
jecxz
pop
dec
out
scas
out
push
das
adc
inc
adc
mov
pop
or
fcmove
int3
in
xor
pop
dec
ficomp
leave
push
cs
into
(bad)
and
jge
vpsadbw
add
jmp
or
dec
mov
cli
inc
(bad)
aam
mov
popa
jecxz
and
int
gs
xchg
sbb
jmp
mov
push
test
rol
cmp
adc
inc
repz
bound
push
in
xor
mov
(bad)
rol
(bad)
xchg
xlat
lahf
add
cmps
loop
xchg
pop
sub
lods
aam
xor
stc
loopne
pop
shl
call
mov
add
mov
push
jb
xor
pop
mov
xchg
push
(bad)
adc
repz
or
fidivr
int3
lods
retf
in
sahf
and
dec
movs
pushf
or
outs
add
scas
sub
xchg
out
jg
add
jae
jne
dec
push
sub
popf
pop
repnz
loope
xor
xor
idiv
xor
call
jge
cmp
xor
dec
inc
sub
or
stc
int
in
jbe
sub
(bad)
xchg
pop
xor
mov
or
sbb
xlat
test
mov
xor
pop
movs
movs
cmc
cld
shl
ss
cli
xor
jae
or
cmp
ficomp
ror
scas
js
push
lock
or
dec
pop
push
inc
sbb
push
pxor
mov
into
je
mov
xchg
ins
inc
push
mov
ins
or
lock
xor
xchg
jl
push
in
xor
leave
adc
xchg
sub
mov
aam
xor
xor
xchg
inc
ins
cs
in
lods
not
dec
(bad)
cwde
mov
push
sub
shr
pop
ja
xor
ds
xchg
js
ret
addr16
pop
jae
push
jnp
dec
int3
pushf
mov
dec
cmp
inc
ss
cmp
fs
jp
sub
movs
push
or
cmp
imul
push
scas
cld
add
inc
ins
pushf
aaa
jg
jbe
out
xchg
scas
mov
fs
sti
cmp
inc
push
inc
mov
repz
xor
iret
out
xchg
nop
mov
inc
adc
inc
push
push
outs
lods
xchg
aam
sub
sbb
mov
add
shr
dec
pop
push
dec
ficomp
mov
movs
dec
xchg
inc
fild
repz
push
bound
add
gs
ficom
into
xor
adc
call
inc
pop
sbb
ja
rcl
es
call
mov
lods
or
xchg
rcl
push
inc
jnp
dec
daa
mov
xlat
cld
dec
sbb
push
hlt
ins
mov
(bad)
clc
mov
dec
aas
jbe
inc
lods
mov
lods
loop
sahf
imul
jb
jge
sub
and
dec
mov
mov
movs
cmp
fimul
jp
mov
(bad)
scas
cmp
cmp
mov
push
(bad)
test
jbe
nop
inc
adc
fidivr
call
sar
inc
scas
cmp
cmp
je
cdq
sub
cmp
or
gs
repnz
or
jmp
xor
mov
mov
call
or
jno
mov
cmp
adc
scas
cwde
inc
sub
pop
cmp
ret
lods
xchg
(bad)
(bad)
sbb
lock
jb
aam
adc
xchg
cmps
loopne
cmp
in
pop
cs
mov
cmps
out
fsubr
stos
pop
loop
std
ins
sbb
adc
inc
xchg
jne
pop
jmp
in
inc
sbb
dec
pop
jecxz
push
jp
idiv
arpl
sbb
and
mov
inc
mov
mov
imul
jb
and
pop
cmps
sbb
pushf
arpl
movaps
or
ins
xor
aam
retf
xor
pop
or
ror
lea
repnz
jle
test
mov
dec
inc
xchg
test
mov
in
push
pop
pop
adc
sub
or
outs
jle
je
add
and
fist
aas
and
aad
pop
inc
lods
sub
mov
pop
stos
sahf
mov
cmps
mov
cmp
mov
mov
and
shl
out
lock
mov
stos
jbe
push
ss
sbb
add
add
and
fs
and
jb
loope
loopne
nop
cmps
mov
movs
nop
cmp
or
pop
push
and
and
sub
dec
dec
push
jge
jae
or
jmp
adc
(bad)
out
sbb
loop
loope
int
rcl
inc
aas
ins
shr
call
cdq
repz
mov
jbe
pop
aaa
or
fisttp
cli
inc
in
add
mov
mov
test
adc
pop
or
and
xchg
inc
inc
cwde
push
add
inc
imul
(bad)
inc
das
int3
jle
(bad)
(bad)
test
or
inc
add
stos
ficomp
cmp
adc
mov
mov
repnz
mov
in
lahf
outs
movs
retf
sub
(bad)
xor
fisub
outs
fild
jge
pop
mov
fst
push
mov
cmps
pop
sub
inc
jge
loop
pop
out
sbb
mov
enter
sub
fsub
jnp
push
adc
loope
loopne
pop
dec
add
les
popa
(bad)
xchg
mov
xchg
aas
sub
dec
lods
cmp
clc
jno
dec
dec
adc
pop
aas
mov
pop
jb
ss
or
xor
mov
adc
inc
or
mov
jbe
cmc
jae
xchg
mov
and
cmp
or
call
das
loopne
dec
pop
sbb
xor
or
inc
add
pop
nop
loope
mov
xchg
jns
jno
imul
push
or
adc
mov
fnsave
sub
mov
or
aas
mov
sbb
fwait
lods
pop
loopne
cmp
test
cmp
vandnps
fldenv
test
adc
and
and
mul
mov
dec
pop
sbb
in
add
mov
sbb
xor
sub
or
mov
push
and
inc
ja
mov
mov
mov
and
inc
sti
jbe
pop
in
adc
xchg
ins
outs
out
sub
add
repnz
cmp
add
inc
je
fistp
test
xchg
aaa
mov
mov
and
mov
mov
jb
imul
sub
popf
cmp
mov
jg
cmp
cmps
and
dec
les
cmps
jno
ret
lock
ror
jmp
stc
retf
sub
add
daa
lahf
bound
xchg
push
push
and
sbb
inc
push
out
int3
mov
mov
add
stos
cmp
push
int
pop
xor
in
ret
xchg
aas
aas
mov
pop
outs
mov
add
pop
sub
mov
cmps
es
les
ret
xchg
pop
jne
fstp
jg
fcmovne
cmp
jl
mov
adc
mov
aad
add
jmp
xor
and
shl
mov
fisub
iret
lahf
daa
dec
cld
sub
enter
cs
(bad)
fidivr
aaa
jns
xor
mov
dec
cs
xchg
xor
call
mov
jo
inc
sbb
xor
push
inc
fisttp
xor
outs
jp
into
pop
repz
inc
xchg
cld
ins
push
pusha
je
adc
add
xchg
adc
shl
jmp
rdtsc
sahf
jno
call
sti
jae
sub
xchg
pushf
push
jp
out
cmp
adc
sub
push
xor
jns
sbb
mov
int3
push
ins
cmp
pop
xor
pop
xchg
mov
loope
cld
data16
int3
mov
xor
test
sahf
stos
mov
or
loop
(bad)
push
mov
int
cmp
xchg
adc
jb
fistp
aam
or
jae
gs
adc
mov
(bad)
jno
int
in
data16
jge
jbe
push
icebp
adc
div
shl
rol
or
mov
fisttp
and
mov
out
je
push
int
fstp
pusha
pop
(bad)
push
out
ds
ret
leave
jnp
fisub
jb
push
rcl
out
pusha
xchg
mov
pop
imul
jo
std
sbb
aas
retf
lahf
inc
fld
(bad)
mov
(bad)
mov
add
mov
test
cmps
xor
arpl
fxtract
rcr
in
in
cmc
lods
mov
add
leave
lods
mov
adc
cld
repnz
inc
and
pop
adc
add
add
iret
pop
xor
mov
mov
push
test
test
pop
xor
iret
aaa
test
retf
xor
dec
addr16
inc
int
in
arpl
jmp
push
call
dec
lods
into
sti
adc
or
fsubp
cmp
(bad)
dec
lea
ror
add
and
(bad)
lahf
xchg
add
repnz
and
cld
rcl
adc
addr16
out
push
enter
mov
ins
jo
push
cld
cmp
lods
adc
mov
ins
fsubrp
pop
adc
fs
shr
cmp
hlt
call
xchg
fld
in
dec
adc
pop
addr16
ja
pop
mov
ficomp
mov
xchg
dec
mov
cmp
mov
sub
lock
(bad)
ins
mov
loope
fcomp
popa
stos
mov
push
aad
cmp
inc
popf
jle
inc
inc
jb
(bad)
popf
jge
mov
dec
jge
scas
std
add
pop
jae
add
pushf
mov
fmul
pop
mov
sub
mov
mov
dec
outs
adc
in
popa
dec
mov
(bad)
push
setl
lock
movs
push
lahf
rol
jae
sahf
sbb
xchg
and
aas
(bad)
fnstsw
fstp
out
mov
push
dec
mov
imul
in
dec
ss
xchg
and
dec
or
int3
hlt
aaa
popa
jo
mov
pop
rcl
loope
push
loop
add
fstp
add
(bad)
ficomp
mov
inc
pop
lods
dec
fs
push
adc
retf
mov
test
mov
xor
xor
dec
push
xchg
outs
(bad)
stc
jo
loopne
push
mov
aam
or
inc
mov
xor
sub
std
pop
cmp
in
shr
enter
mov
rcl
mov
test
adc
jecxz
sti
out
imul
jo
mov
out
sbb
pop
aad
xor
stos
pop
repnz
add
mov
sbb
es
stos
int
sub
sub
lods
or
add
xchg
mov
lods
cmp
call
add
mov
(bad)
aaa
sbb
out
lods
pop
and
pop
nop
cmp
pop
sub
pop
push
jg
inc
or
inc
enter
in
xor
jns
push
adc
outs
inc
jl
dec
mov
mov
mov
mov
inc
jmp
retf
sub
scas
nop
add
mov
(bad)
in
adc
aad
xor
dec
xchg
mov
xchg
ins
pop
jmp
fsub
imul
lahf
jecxz
inc
lds
in
sub
sahf
out
adc
leave
movs
cld
xchg
push
sub
popa
pop
dec
mov
mov
pop
jg
mov
int3
sub
push
mov
push
jp
cld
je
out
mov
mov
push
and
pop
test
jg
adc
pop
xchg
xchg
pop
xchg
dec
push
push
gs
mov
hlt
fdiv
je
fst
push
ss
arpl
idiv
push
xor
sub
sahf
xchg
xchg
inc
inc
(bad)
or
sub
fs
fbld
fmul
cmp
ret
jo
xor
int
pop
test
pop
repnz
aaa
dec
or
mov
mov
and
rcl
xor
push
gs
fidiv
xchg
jne
fst
push
xor
dec
out
(bad)
ds
leave
inc
jb
push
outs
popa
bound
pop
jp
fs
ret
sbb
xchg
jg
sub
xcrypt-cbc
cmps
push
mov
push
(bad)
fsubrp
xchg
dec
mov
dec
mov
xchg
or
popa
pushf
sub
cld
xor
ss
jmp
icebp
(bad)
jns
sub
hlt
lock
xchg
pop
push
cdq
or
cmps
in
sub
fidivr
test
push
imul
and
in
jecxz
test
icebp
imul
jb
sahf
jp
out
mov
xor
add
and
call
xchg
nop
sbb
mov
hlt
and
push
in
out
data16
mov
out
mov
call
adc
popf
or
rol
mov
shl
aaa
out
fidiv
fwait
test
mov
cli
pop
hlt
push
inc
lock
cmps
test
fisubr
leave
inc
leave
adc
pop
mov
popf
adc
rcl
mov
jns
or
adc
mov
movs
mov
pop
fdivr
xchg
adc
mov
leave
jecxz
jg
xchg
ror
mov
xchg
aaa
fstp
call
loopne
ret
jns
lods
pop
push
mov
test
adc
mov
cmp
add
mov
mov
sbb
adc
popa
xchg
mov
sub
scas
sbb
or
cmp
or
mov
inc
mov
outs
cld
sub
cmp
cwde
adc
clc
pop
mov
xor
mov
jno
fcomp
dec
retf
ja
fistp
add
dec
retf
mov
mov
xchg
pop
inc
pop
sar
push
shr
test
not
repnz
jp
pusha
fld
mov
sbb
add
ror
aas
adc
adc
or
sbb
dec
shl
inc
mov
in
outs
movs
push
or
arpl
push
mov
mov
pop
xchg
dec
push
out
sub
inc
lahf
sub
out
lods
sti
inc
int
ins
(bad)
dec
fisttp
xchg
shl
sar
inc
pop
jnp
and
std
sbb
mov
add
ja
inc
xlat
jbe
jge
sub
fist
inc
clc
add
rol
test
stos
nop
jb
lea
mov
inc
movs
test
sub
ss
cmc
jmp
lods
pop
push
xor
jle
(bad)
adc
call
fstp
sbb
loope
ret
sub
push
push
jb
push
outs
stos
add
mov
jne
stc
mov
outs
sbb
repz
je
out
push
push
add
inc
fs
push
jae
mov
ror
cmp
stc
xor
lahf
(bad)
mov
sbb
jge
sbb
in
pushf
inc
addr16
les
jbe
xor
and
cmp
pop
jb
popa
arpl
(bad)
sub
mov
movs
shl
or
(bad)
pop
out
cmps
test
sar
dec
lock
out
rcr
lods
sbb
mov
out
mov
lods
enter
cmp
mov
mov
ret
cmp
cmp
(bad)
xchg
pop
inc
dec
sbb
sub
jmp
jmp
xchg
cwde
fnsave
aaa
call
mov
add
sahf
scas
in
loope
js
xlat
fisub
mov
ret
out
mov
mov
adc
pop
add
inc
(bad)
xchg
movs
mov
fwait
push
clc
data16
add
js
push
ret
mov
popf
in
jmp
xor
jae
cs
je
int3
(bad)
or
ja
and
sbb
ja
push
add
adc
popf
xchg
ficomp
rcl
pop
mov
and
mov
mov
idiv
cli
dec
mov
or
pop
jnp
inc
sbb
(bad)
call
lods
xchg
retf
ins
sbb
push
mov
(bad)
sbb
mov
adc
popf
ret
cmp
(bad)
xor
imul
or
in
jne
(bad)
movs
popa
cmps
xchg
dec
pushf
fcom
loopne
enter
sub
and
and
lds
mov
add
or
push
jo
push
in
mov
add
clc
adc
cs
mov
sbb
pop
enter
pushf
shr
cmp
clc
test
fcomp
inc
adc
imul
in
(bad)
push
mov
lahf
push
test
inc
cdq
xor
push
ret
mov
ins
adc
and
jmp
ret
icebp
cmps
xchg
mov
imul
jo
sub
sub
pusha
shld
pop
push
rcr
out
sbb
imul
ja
push
(bad)
fmul
repnz
mov
mov
pop
xor
inc
dec
ja
fstp
mov
es
adc
(bad)
sub
sbb
arpl
dec
cmps
pop
in
adc
inc
xlat
adc
mov
push
jno
pop
movs
or
add
fidiv
xchg
ins
push
or
and
nop
dec
push
(bad)
push
aas
cmps
ja
inc
movsx
inc
lea
sub
loope
sahf
inc
cmp
cmps
lods
mov
mov
shl
add
aam
and
mov
pushf
rcr
xchg
adc
cmps
xor
out
xchg
adc
mov
movs
push
call
not
sbb
pop
mov
cmp
shl
pop
in
mov
mov
cs
add
test
or
adc
or
lea
scas
xor
sbb
inc
mov
jmp
adc
icebp
je
mov
cmp
pop
add
fidiv
shl
ja
int3
fsubr
xchg
iret
jmp
inc
inc
mov
je
mov
imul
popa
xor
and
cs
sar
xor
xchg
stos
mov
adc
ds
mov
sbb
fwait
xchg
pop
pop
cmps
leave
les
pop
loope
pop
fwait
inc
daa
sub
lods
and
iret
shl
pop
mov
sub
daa
mov
lahf
xchg
lock
lahf
dec
imul
fstp
pop
ds
fwait
sar
mov
pop
xchg
or
test
cld
mov
fisttp
push
ss
ds
mov
in
imul
xor
loope
and
gs
mov
cmps
aam
pushf
push
xchg
cmp
loop
es
sbb
mov
es
nop
shl
xchg
ins
mov
repz
(bad)
jg
dec
add
pushf
push
(bad)
push
fidivr
xchg
xchg
fs
sbb
push
inc
push
jns
loop
xchg
aad
int
in
xchg
inc
cli
xchg
lods
and
push
xchg
mov
and
dec
fwait
ins
mov
jae
hlt
adc
mov
jl
into
loope
loope
cwde
jge
and
add
or
jle
ror
out
in
push
and
or
inc
sti
jg
add
mov
and
into
fwait
mov
cli
adc
xchg
out
icebp
jmp
scas
and
dec
cld
mov
hlt
out
fs
dec
fisubr
nop
fs
rcr
stc
inc
test
not
(bad)
enter
inc
loop
cmp
and
xor
out
nop
(bad)
push
and
outs
cmp
mov
mov
cdq
lods
dec
and
jge
mov
pop
scas
dec
shr
test
(bad)
fstp
mov
inc
popa
inc
xchg
xor
loopne
jmp
fdiv
mov
ins
retf
icebp
mov
pusha
cwde
stos
lods
push
retw
repnz
pushf
adc
cmp
mov
in
and
imul
inc
fld
dec
loope
ficomp
sar
fldenv
mov
pop
shl
xchg
mov
add
icebp
add
jmp
mov
xor
inc
lahf
ja
xor
int
rcl
int
jmp
enter
xor
inc
test
add
mov
inc
enter
pop
and
es
mov
adc
push
stos
mov
inc
mov
add
loopne
(bad)
jmp
mov
call
repz
sti
dec
xor
dec
and
xchg
mov
inc
xor
add
pop
pop
pop
xor
mov
mov
pop
mov
sbb
daa
push
(bad)
pop
call
sti
add
jo
mov
xchg
push
xor
repz
mov
adc
add
sbb
das
xchg
or
and
xchg
and
pushf
xchg
mov
ret
imul
xor
mov
int3
push
sbb
aaa
mov
loope
inc
inc
daa
sub
mov
bound
sar
gs
call
movs
fstp
das
jp
and
jmp
jle
rcl
inc
jle
fistp
rol
fisubr
add
jmp
xchg
mov
fsub
or
sar
rcl
scas
jo
out
inc
xor
mov
jns
lods
xor
stos
adc
xchg
adc
loope
not
jecxz
mov
cld
push
cdq
jge
scas
das
icebp
jecxz
cmp
add
adc
add
cld
xchg
inc
hlt
push
mov
sub
cmp
test
pushf
inc
mov
ficom
cmps
inc
mov
pop
fnstenv
mov
or
scas
ret
push
mov
shl
bound
imul
ret
ja
lea
nop
sub
push
sbb
loope
imul
(bad)
jg
dec
cmp
aas
loope
or
mov
sub
and
shl
mov
cmc
cmc
push
emms
pop
(bad)
lods
ins
or
pushf
lahf
ret
sbb
or
inc
es
mov
adc
repz
add
js
xchg
lods
push
add
mov
leave
ret
push
aaa
cmp
adc
bts
lea
add
add
fs
adc
je
out
test
ficom
jno
xor
divps
xor
inc
cmps
pop
and
jns
les
out
and
daa
fstp
xchg
pop
outs
dec
xchg
inc
call
cmc
movs
repz
jb
call
inc
call
in
in
ror
lods
out
leave
test
ins
retf
sti
add
push
cs
fmul
mov
jmp
hlt
lods
cmp
sbb
loop
aaa
add
inc
cmps
sbb
les
sbb
out
mov
dec
pop
or
js
fld
push
add
test
push
pop
mov
adc
adc
in
mov
xor
pop
pop
add
in
lods
pop
mov
jmp
pop
inc
push
data16
cmp
inc
imul
cmp
movs
xchg
xor
ret
push
xchg
pop
ins
js
push
sub
retfw
inc
addr16
addr16
inc
movzx
xchg
cmp
pushf
das
sub
add
fisttp
sets
lods
mov
ja
push
lea
mov
nop
imul
mov
(bad)
adc
push
repz
xchg
rol
push
mov
sbb
lods
fiadd
jne
in
cmp
sar
push
imul
or
mov
out
mov
int3
pop
sahf
mov
in
xchg
dec
cdq
push
and
dec
adc
jmp
retf
shl
add
pop
and
inc
es
inc
clc
dec
imul
sbb
push
call
jbe
scas
xchg
test
inc
out
int3
into
bound
cli
aam
push
adc
and
ret
(bad)
cmc
imul
ret
aad
ja
push
dec
in
xor
sbb
sub
outs
movs
rcr
daa
mov
cwde
loop
xor
std
mov
and
into
inc
jno
adc
test
xchg
stos
or
int
add
xlat
pop
inc
cs
push
popf
inc
loop
or
fs
add
mov
out
jns
fucomi
sbb
inc
sbb
ds
clc
cmp
mov
sub
scas
lea
push
fisttp
mov
ja
sub
or
push
or
xor
jmp
push
repnz
cmp
icebp
test
int
pushf
(bad)
sub
gs
or
jns
cmps
add
rcr
mov
push
jbe
jmp
dec
ja
dec
rcr
push
out
add
pop
stos
imul
lahf
call
or
dec
mov
mov
imul
(bad)
repz
jecxz
jp
sbb
mov
rcl
bsf
in
(bad)
aad
repz
lods
stc
sub
jecxz
pop
sub
mov
stos
cmp
cdq
pop
and
adc
mov
pop
fidiv
cmp
mov
pop
sbb
cli
call
adc
mov
push
out
adc
shr
mov
xor
cld
loop
xor
mov
dec
es
pop
mov
iret
call
pop
popa
inc
imul
push
(bad)
das
pusha
cmps
popa
retf
in
fisttp
xor
jg
or
pop
ds
pop
cli
mov
sbb
push
push
test
sub
pop
xchg
add
dec
mov
mov
ret
jnp
inc
mov
rep
push
stos
and
int
or
imul
and
push
mov
pop
adc
popa
pop
push
sbb
cld
ja
and
aad
jp
xchg
push
(bad)
mov
inc
sbb
fidiv
call
mov
sub
mov
xor
cmp
and
pop
add
sub
mov
push
xor
shr
push
adc
test
stos
repz
jae
fild
stc
xor
test
mov
(bad)
and
mov
xchg
ret
push
mov
out
push
mov
loopne
inc
outs
std
arpl
adc
fnstenv
repz
mov
jnp
or
or
enter
xchg
cmp
inc
cmp
cli
adc
repz
or
rcr
es
not
loopne
(bad)
out
lea
and
in
lock
mov
outs
push
test
addr16
rcl
in
pop
xor
pop
ror
(bad)
push
outs
sbb
aas
sbb
enter
push
hlt
js
in
neg
lods
out
and
mov
pop
push
xchg
xchg
imul
jle
loopne
jne
cld
or
pop
mov
call
jl
push
xchg
mul
pushf
xor
out
in
cmp
out
ja
jg
arpl
outs
loop
xchg
ror
adc
stos
pop
or
mov
mov
jmp
cmp
retf
(bad)
sbb
xor
(bad)
test
mov
inc
push
dec
out
mov
cwde
jno
adc
ret
xor
outs
push
dec
gs
adc
jg
and
sub
cdq
jecxz
in
mov
jecxz
leave
mov
sbb
pop
aad
push
adc
lahf
pop
xchg
jecxz
xchg
mov
inc
int3
lds
mov
sub
sub
pop
jo
(bad)
in
mov
jae
jg
adc
mov
xchg
in
scas
add
leave
sub
mov
jnp
lods
ja
das
xchg
hlt
jp
add
adc
cld
mov
icebp
add
add
lea
add
add
or
cmps
test
sbb
xor
push
xor
dec
sub
pop
mov
mov
pushf
mov
add
add
mov
mov
(bad)
cli
stc
ds
and
or
(bad)
jne
dec
pop
cs
mov
mov
ss
inc
push
pop
nop
jmp
scas
fwait
mov
imul
iret
dec
mov
fwait
arpl
jae
dec
jbe
fcmove
or
hlt
sbb
pop
mov
idiv
dec
adc
push
push
scas
sub
adc
xlat
mov
mov
outs
popa
fwait
imul
inc
enter
sbb
adc
mov
rol
mov
cmp
ins
lock
xchg
mov
repnz
mov
iret
retf
int
sbb
inc
vmovd
mov
jmp
push
mov
dec
ss
mov
je
out
or
cmps
enter
or
adc
scas
mov
fmul
test
jbe
adc
fsubrp
push
stos
jecxz
jmp
mov
fadd
jb
sbb
jns
stc
dec
inc
xor
dec
cld
adc
gs
dec
inc
xchg
cmp
bound
fsubr
jmp
out
ins
xlat
or
in
stos
lods
mov
xchg
out
fcomp
pop
out
adc
pop
sbb
inc
jb
test
and
add
in
aaa
stc
loope
adc
xchg
pushf
sti
repnz
inc
mov
cmps
mov
jae
or
push
das
lds
jg
cmp
ret
scas
dec
test
scas
js
adc
sbb
shl
popf
xchg
dec
imul
jnp
lahf
sub
pushf
and
mov
pop
test
xor
imul
fs
xor
mov
or
cmps
repnz
jne
pusha
fisttp
mov
push
adc
call
mov
mov
push
ins
add
sar
into
xchg
dec
imul
push
mov
out
outs
outs
pop
and
into
test
xchg
jecxz
cmp
into
out
sub
xchg
sahf
stos
sub
mov
in
add
and
(bad)
jmp
cmp
(bad)
cmp
ret
lock
inc
and
imul
push
jo
sbb
test
inc
push
fwait
pop
xlat
pop
push
enter
push
mov
cwde
lea
daa
fldcw
in
mov
jne
xchg
xor
out
aaa
pushf
scas
leave
or
scas
mov
call
mov
dec
in
popf
xchg
jo
mov
adc
fimul
mov
mov
cld
sar
mov
sub
push
mov
cmp
xor
mov
test
jle
daa
xor
xor
pusha
cmp
cwde
mov
pop
pop
mov
imul
push
imul
mov
xor
cmp
ins
mov
jne
pop
sub
repz
xchg
lods
xchg
mov
test
xchg
addr16
outs
mov
jg
dec
xlat
pushf
or
punpckhdq
test
push
arpl
fs
xor
lods
popa
mov
jmp
cdq
ret
add
pop
in
jecxz
leave
mov
dec
repz
cmp
cmp
shl
and
scas
sub
int3
adc
mov
(bad)
rcr
push
ret
stos
test
pusha
jg
cmc
cmp
jbe
sub
mov
xchg
push
mov
(bad)
(bad)
pop
adc
mov
push
ins
js
jmp
popf
xor
test
in
xchg
xchg
scas
lods
fdivr
in
xchg
mov
dec
gs
fcomi
dec
xor
retf
jno
cld
xchg
sti
pop
xor
test
push
shl
in
cmp
mov
aas
or
push
daa
add
(bad)
lods
xor
addr16
test
outs
mov
cwde
leave
xor
mov
mov
sub
and
je
mov
lds
aas
or
xchg
dec
out
dec
les
dec
dec
jb
xchg
mov
aas
mov
cmp
push
jmp
add
xchg
add
outs
and
rcr
push
fidivr
mov
out
push
dec
push
xor
(bad)
addr16
mov
cdq
cdq
sti
shl
add
scas
(bad)
lods
push
int3
cmp
in
dec
ficomp
(bad)
jl
(bad)
xchg
mov
or
jle
mov
xchg
lahf
outs
test
sar
(bad)
sahf
or
xchg
fstp
push
pop
mov
sahf
(bad)
repnz
aad
inc
cmp
sbb
xor
fimul
jge
dec
ds
test
push
push
pop
es
mov
pop
shl
jl
and
arpl
jge
mov
sbb
sub
jp
push
in
jnp
cmps
adc
popa
cmp
cmps
ja
add
pcmpeqd
push
rcl
xchg
mul
lods
inc
frstor
push
fbld
dec
mov
cdq
popf
inc
xchg
jp
dec
pop
jmp
and
ds
adc
fs
jns
mov
stos
add
mov
loope
add
lfs
into
inc
xchg
mov
pop
loope
lods
movs
mov
and
push
and
mov
stos
push
mov
repz
push
mov
(bad)
or
ficomp
mov
mov
and
push
inc
les
cmp
rcr
aam
add
test
mov
and
jae
jl
imul
dec
into
add
push
(bad)
and
mov
adc
and
inc
arpl
bound
cmp
cli
xor
dec
mov
fild
xchg
jecxz
jmp
jo
adc
pop
xchg
adc
(bad)
xor
jmp
les
mov
retf
lds
das
imul
xchg
add
sub
addr16
pop
stos
iret
lock
xchg
xor
sub
push
inc
movs
adc
jmp
cs
jne
test
sti
div
fsubrp
pminsw
sbb
in
or
sbb
sub
sbb
hlt
mov
xor
mov
mov
fld
cmp
pop
dec
pop
jp
lahf
fst
cli
mov
sti
adc
add
es
shr
inc
xchg
xchg
jmp
xchg
ficomp
sbb
test
repz
(bad)
lahf
cli
(bad)
sub
push
jmp
jl
out
jo
jp
imul
je
xchg
(bad)
mov
fiadd
xchg
lods
retf
out
mov
xor
cmp
cmps
inc
inc
lahf
add
dec
add
mov
push
mov
mov
hlt
out
test
bound
out
sar
adc
sbb
test
pop
mov
sbb
fstp
aas
inc
rol
iret
imul
mov
call
test
les
fisub
push
ins
leave
fistp
xchg
loopne
iret
adc
jmp
in
rol
add
cdq
add
mov
pop
jp
test
in
sti
or
mov
pop
xchg
push
fistp
cmp
adc
jno
xor
jo
js
pop
push
out
inc
into
jne
add
pop
cs
mov
xor
loop
repz
enter
rcr
mov
rcr
(bad)
in
adc
stos
add
cmp
lds
fsubr
jno
retf
push
(bad)
pop
fbld
inc
or
arpl
xchg
jmp
sub
fst
sub
xchg
out
out
shl
sub
xor
dec
add
daa
cmp
mov
stos
add
adc
repz
hlt
nop
loopne
je
adc
push
mov
fistp
xchg
xor
div
ret
in
cmc
jg
jne
out
inc
jno
inc
les
mov
jnp
dec
dec
movs
fwait
lods
xor
xor
iret
or
jg
mov
mov
scas
push
dec
sub
pop
int
jno
or
mov
mov
dec
mov
jmp
xchg
fxam
dec
retf
pop
dec
jo
and
mov
adc
retf
repz
dec
ins
cwde
cli
je
dec
ja
adc
jl
and
repz
aaa
ret
sbb
mov
mov
cmp
cmp
mov
jbe
out
out
sbb
inc
inc
dec
cmp
and
popf
mov
mov
dec
daa
sub
ja
xchg
xchg
jp
xchg
cli
xor
imul
pushf
adc
aaa
mov
pmuludq
lahf
push
jge
push
lds
push
fistp
sbb
cmc
ds
out
les
sub
xlat
movs
add
out
stos
ins
add
xchg
je
sbb
sub
sbb
jge
mov
(bad)
cli
add
xor
outs
rol
int
fisubr
mov
(bad)
bound
mov
xor
xor
push
adc
push
cmp
arpl
push
rcl
jbe
inc
dec
nop
dec
add
arpl
xchg
or
mov
ss
shl
dec
cmp
popf
cwde
(bad)
fiadd
mov
mov
in
mov
sub
push
mov
ins
das
call
popf
jge
jb
sbb
clc
mov
outs
jmp
jmp
push
dec
rcl
stos
mov
cwde
mov
std
inc
push
cwde
pop
iret
neg
push
int3
push
test
in
fsubr
fsubr
xchg
scas
and
sub
ins
sbb
inc
repz
xchg
ret
xor
sub
cmp
outs
clc
dec
adc
(bad)
fmulp
fdivr
xor
ret
(bad)
xchg
(bad)
stc
sub
fimul
sbb
popf
mov
stos
sbb
inc
adc
ror
sbb
push
psubw
pusha
int
xor
pop
mov
lahf
mov
fisttp
popf
xor
pop
rcr
xchg
into
jg
dec
sti
jns
xor
inc
or
inc
lahf
dec
mov
fnstsw
or
jns
mov
imul
jecxz
fidivr
pusha
sbb
mov
inc
adc
movs
jl
inc
scas
ficomp
pop
mov
inc
not
jg
loope
jl
add
enter
push
xor
adc
not
dec
inc
xchg
mov
mov
stos
inc
mov
fsub
lds
sbb
fadd
mov
sub
sbb
pop
clc
cmp
jae
pop
(bad)
retf
inc
sar
(bad)
in
movs
test
ficomp
cwde
lea
mov
loopne
cmp
icebp
int3
fist
sbb
mov
and
jns
arpl
adc
jb
sti
mov
movs
mov
lods
imul
pop
dec
adc
das
fsincos
fist
pushf
aad
sub
jmp
in
inc
pop
xchg
in
pop
leave
pop
stos
stc
sti
pop
cmp
mov
outs
inc
sbb
xor
sub
pop
ds
daa
cmp
js
mov
mov
pop
jnp
into
test
icebp
aas
mov
or
ds
xchg
and
inc
lock
and
jnp
popa
ins
mov
dec
inc
leave
pop
ret
shl
cmps
dec
repz
stos
(bad)
jae
adc
mov
or
lahf
fcomi
cdq
mov
sub
scas
inc
lahf
xor
or
aam
add
dec
test
shr
pop
lea
pop
jg
fwait
mov
lock
(bad)
cmp
pop
out
lds
sahf
daa
cmp
mov
mov
sbb
xor
xor
cwde
fistp
jmp
or
jo
mov
(bad)
icebp
ins
hlt
add
mov
inc
cmps
mov
mov
pop
or
add
scas
mov
repnz
xchg
fs
push
int3
imul
pushf
push
lds
movs
xlat
aas
sbb
in
mov
sub
xchg
es
(bad)
fld
jnp
mov
icebp
push
test
cli
sub
je
or
mov
ret
adc
inc
ret
outs
adc
call
jecxz
inc
or
adc
inc
ficomp
adc
into
out
push
jp
xor
adc
xor
shl
cmp
xchg
xor
retf
enter
jno
adc
cwde
jg
push
fdivrp
push
test
sbb
popf
cmps
ror
pushf
xchg
mov
outs
lds
push
pop
cmc
icebp
add
test
popa
push
inc
fcom
push
cwde
mov
mov
dec
fwait
cmp
test
fnstenv
loop
adc
shl
add
fwait
adc
aas
retf
mov
inc
xchg
iret
cld
loope
add
loop
mov
pushf
lods
int3
iret
out
pop
mov
jge
and
sub
popf
test
mov
mov
cmp
dec
mov
mov
ja
or
stc
xchg
cdq
mov
scas
call
int3
pop
repnz
add
add
inc
pushf
xor
call
addr16
lods
pop
loope
jecxz
out
test
inc
arpl
pop
or
or
(bad)
pop
(bad)
sbb
inc
popf
mov
fist
scas
sbb
je
aaa
pop
jge
mov
mov
add
xor
jo
jno
add
std
cmc
pop
inc
mov
mov
push
inc
retf
jns
outs
test
(bad)
int3
push
aad
push
adc
jnp
inc
ins
call
xchg
mov
stos
inc
cmp
cld
aam
jmp
push
mov
pushfw
shr
xchg
aad
ins
pop
int
mov
into
xchg
dec
pop
jo
mov
jnp
and
push
dec
arpl
into
and
inc
dec
(bad)
into
out
fstp
ror
je
(bad)
mov
into
stc
jmp
retf
rol
scas
jecxz
sub
gs
and
add
xor
push
outs
aad
fld
push
lock
mov
fadd
stos
in
jno
fnstcw
pop
retf
pop
dec
pop
push
ret
push
and
mov
mov
(bad)
(bad)
lock
dec
xchg
inc
cmp
push
sbb
pop
arpl
cmps
pop
inc
jmp
repnz
sar
xchg
hlt
push
push
push
js
jmp
sub
inc
xchg
int
jnp
adc
cmp
retf
gs
pop
movs
ror
fisttp
add
adc
cmp
dec
mov
mov
(bad)
bound
pop
aaa
mov
stos
es
mov
leave
das
jbe
pop
add
jbe
(bad)
pop
sbb
imul
int3
xchg
movs
push
pop
cwde
ss
mov
pop
jno
fs
push
(bad)
xor
inc
fcmovb
out
or
out
je
cmc
sbb
shl
mov
xchg
arpl
std
inc
pop
push
mov
jmp
or
cdq
mov
jmp
sub
jno
xor
inc
cdq
sub
pop
push
add
xchg
push
mov
sub
neg
xor
jle
add
mov
mov
or
push
pop
mov
mov
xchg
mov
js
lahf
or
neg
dec
mov
ds
cmp
daa
or
pop
and
imul
dec
inc
sbb
inc
cmp
xchg
sahf
inc
jle
lods
or
inc
lods
or
mov
icebp
push
call
push
sbb
repz
jae
js
push
cmp
jl
ret
and
sbb
outs
repz
in
push
mov
sub
xchg
adc
lahf
das
addr16
or
jne
push
cli
dec
iret
mov
mov
mov
sub
jl
movs
sub
test
dec
add
int3
or
loopne
mov
mov
xchg
shl
mov
dec
mov
or
ror
cmp
push
dec
add
and
push
mov
stc
out
adc
aad
cwde
fdiv
mov
in
xor
cmp
xor
push
inc
rcl
mov
or
jns
xchg
or
cli
outs
inc
sbb
out
(bad)
xchg
iret
jecxz
imul
cmp
and
add
fdivr
push
and
inc
pop
sbb
test
and
(bad)
sbb
into
loop
cwde
mov
movs
mov
push
ret
sub
repnz
outs
test
pushf
xor
mov
mov
mov
fwait
cmp
ins
lahf
ins
ret
pop
cli
outs
fs
gs
loope
inc
cld
jbe
repnz
(bad)
test
and
inc
aad
arpl
or
inc
push
mov
add
add
int
mov
and
sub
int
or
xor
dec
pop
add
mov
push
lods
clc
mov
and
pop
call
psubusb
cs
pop
push
popf
adc
mov
dec
sub
mov
loop
jmp
ret
adc
adc
rep
popf
push
dec
push
inc
push
arpl
cmp
pop
fldenv
mov
into
add
cmps
or
std
jns
fisubr
pop
push
sub
rcl
and
cli
retf
push
or
mov
in
and
scas
test
mov
mov
push
cmps
adc
mov
cmp
leave
jbe
pop
cmp
mov
push
lods
sub
pushf
rcr
arpl
and
cmp
inc
fcomp
in
leave
mov
nop
jle
retf
sub
test
pop
jge
shl
mov
mov
(bad)
or
scas
js
enter
retf
lock
pop
dec
jno
mov
(bad)
jbe
js
sti
das
dec
loope
pop
or
push
mov
mov
lea
mov
gs
dec
(bad)
sbb
xor
inc
icebp
sbb
sub
shl
adc
jp
pop
aad
es
xchg
xor
mov
cmp
inc
ret
ss
or
jne
or
scas
mov
and
addr16
jae
daa
jl
jp
sbb
pop
test
push
xchg
jnp
jo
push
mov
adc
and
pop
xchg
sub
scas
mov
div
fwait
inc
cwde
stos
loopne
arpl
xor
lds
fs
inc
call
or
or
cmp
fwait
mov
int3
test
stc
data16
jnp
mov
inc
out
pop
and
pushf
mov
enter
cmp
or
mov
fs
loopne
scas
(bad)
out
mov
jle
jle
test
dec
movs
cdq
mov
ja
popf
jae
shr
dec
sub
clc
int3
xor
int
icebp
pop
jae
dec
loopne
gs
sub
aad
pop
push
add
dec
imul
add
pop
fwait
mov
push
sbb
jnp
mov
jge
cmp
das
inc
fild
dec
iret
test
test
mov
mov
adc
sti
aaa
add
push
sub
pop
jae
push
dec
cmp
(bad)
jnp
push
xchg
iret
push
xchg
std
das
fisub
xchg
sub
nop
pop
mov
fsubr
pop
scas
push
in
mov
cmp
xor
add
das
clc
cmp
jmp
cmp
aaa
pop
(bad)
cld
xor
(bad)
js
jae
in
push
out
pushf
sub
pop
cmps
xlat
inc
js
aad
add
stos
cld
mov
push
arpl
lods
arpl
(bad)
push
cmp
adc
add
jbe
int3
(bad)
imul
mov
push
gs
sbb
cmp
out
jmp
clc
call
neg
fbld
or
fs
mov
push
ret
lea
cmp
dec
fwait
daa
inc
pop
xchg
xchg
dec
shl
ja
out
test
test
hlt
sub
or
cmp
xlat
add
pop
jb
das
test
aaa
dec
in
xor
xchg
loop
aaa
js
xchg
stos
push
out
call
sbb
je
lods
int
(bad)
or
mov
jne
fmul
inc
out
je
jmp
icebp
add
mov
mov
cmp
leave
adc
arpl
sub
popf
arpl
adc
mov
jle
or
mov
in
sar
lods
lods
scas
pop
fistp
or
xchg
adc
lods
add
mov
dec
clc
pushf
out
fwait
mov
aad
ins
xor
movs
inc
jl
lods
jl
add
dec
icebp
xchg
or
mul
outs
out
adc
pop
cmp
sub
call
lock
xor
xlat
ficomp
and
jae
sbb
popa
add
ins
mov
lock
je
pop
mov
lahf
push
fsubr
jo
cmp
adc
mov
pop
aaa
aam
mov
inc
out
add
leave
push
add
into
push
rcl
cmps
ins
dec
mov
sub
es
mov
fnsave
sbb
add
xchg
sbb
sub
mov
lods
sbb
lock
out
inc
sbb
sbb
jge
sub
aas
xchg
daa
mov
and
adc
cmp
sub
push
adc
in
aas
clc
pop
mov
push
je
aad
aad
scas
pop
mov
xor
cmc
push
adc
sub
adc
sub
pop
xor
ds
out
dec
sbb
push
aaa
test
int
out
add
fld
retf
add
inc
test
pop
sahf
xchg
into
mov
or
cdq
push
int3
cmp
ret
cs
and
mov
and
dec
mov
movs
or
stos
push
jl
mov
mov
sahf
ret
sub
aas
sbb
or
jg
push
sbb
(bad)
xlat
stos
jp
push
out
call
aaa
sub
xchg
outs
out
jae
bswap
add
add
out
loop
pop
pop
je
xor
out
mov
je
jb
push
push
or
popa
fadd
add
in
mov
arpl
ffreep
mov
dec
push
jmp
push
mov
sub
outs
aas
out
or
int
sub
push
and
sbb
cld
les
xchg
pusha
test
xor
and
and
icebp
mov
aad
aas
inc
aas
or
lea
jle
or
add
mov
add
sub
dec
(bad)
push
sbb
ss
push
pop
std
dec
xchg
push
mov
popa
jmp
and
inc
out
push
xchg
cld
gs
repz
fild
cmp
mov
out
lods
push
add
int
je
inc
or
scas
xchg
jne
and
jb
push
adc
into
mov
leave
cli
call
stc
retf
jmp
fs
pop
push
pop
jge
cmp
cmp
pop
push
jp
call
and
jmp
cmp
mov
call
push
loop
sbb
jge
inc
and
call
cmp
popa
test
adc
xor
mov
mov
mov
pop
push
xchg
mov
(bad)
je
clc
and
and
cwde
xor
movs
mov
mov
xor
mov
add
lds
stos
retf
push
lock
dec
pop
mov
pop
inc
ins
jmp
addr16
sub
lds
inc
xor
jae
ss
leave
scas
xlat
adc
jge
adc
adc
cmp
test
sbb
cmps
add
data16
pop
fild
xchg
push
out
aas
lock
xchg
pop
dec
xchg
bound
in
ins
mov
fnstenv
into
sbb
loope
or
call
enter
lock
mov
loop
loopne
out
jno
sub
shl
cmc
dec
mov
out
stos
lds
pop
aad
out
xor
aad
jae
pop
mov
sbb
fadd
scas
pop
(bad)
xlat
push
push
jae
add
lods
fnstenv
jmp
sti
dec
daa
pop
nop
sub
dec
inc
mov
mov
add
xchg
xlat
pop
(bad)
daa
idiv
add
xor
jle
stos
movs
dec
cmp
popa
sti
std
mov
add
mov
das
sub
(bad)
sbb
cmc
mov
xlat
mov
outs
loop
fldcw
pop
call
gs
dec
rcr
pop
dec
push
jl
sbb
lods
pop
xchg
adc
test
jb
pop
pop
les
test
xor
mov
out
xchg
data16
cld
adc
sub
mov
sub
adc
call
sub
jns
inc
out
add
push
push
add
das
and
addr16
lods
jl
xor
(bad)
mov
es
xor
pop
mov
in
inc
or
stos
ret
stos
shr
mov
cld
in
out
icebp
out
aad
sbb
das
iret
jge
stc
xlat
repz
jno
shl
mov
inc
test
ficomp
and
push
or
std
pushf
add
dec
les
sub
hlt
call
fldenv
scas
sbb
mov
push
push
movs
cs
xchg
mov
outs
mov
repz
or
push
in
(bad)
and
js
sub
mov
fbstp
call
push
xlat
push
xchg
and
call
nop
cmp
cld
inc
jne
mov
inc
mov
mov
idiv
clc
aaa
das
xchg
or
aaa
ins
xor
pop
mov
stos
aaa
mov
dec
mov
xor
imul
sbb
or
ins
dec
fisub
dec
stos
adc
add
adc
xchg
pop
mov
pop
aad
mov
dec
stos
xchg
sbb
in
inc
dec
and
fld
pop
in
sbb
ret
mov
lahf
pop
sbb
add
popf
inc
std
or
sbb
outs
mov
add
inc
xchg
adc
xchg
xchg
pop
(bad)
aad
jg
mov
sbb
sbb
ror
int
mov
mov
and
aaa
fisttp
dec
mov
cli
lock
int3
sub
pop
lds
push
push
icebp
mov
mov
pop
cwde
outs
mov
leave
push
cmps
fucom
out
je
xchg
jge
test
in
shr
jno
dec
cmp
sbb
fs
out
mov
sub
rol
add
dec
and
ss
lods
or
cmp
test
cmps
(bad)
shl
in
hlt
jb
(bad)
movs
push
adc
push
sbb
fwait
or
ds
jl
daa
inc
push
div
lahf
popf
cmc
pop
mov
push
arpl
push
repnz
scas
cmps
scas
js
std
jmp
pop
pop
ja
pop
cmp
or
leave
lock
fwait
and
mov
retf
into
lods
das
jl
push
mov
xchg
pop
mov
adc
dec
outs
int3
inc
or
hlt
adc
in
push
xlat
(bad)
sbb
push
sub
mov
xchg
(bad)
jg
add
mov
mov
inc
fmul
dec
push
inc
test
stos
pop
adc
mov
add
(bad)
aam
push
fsub
out
cmp
(bad)
pushf
push
mov
mov
mov
mov
test
inc
pop
add
fcomp
aaa
pop
xchg
cmps
enter
push
dec
repz
push
pop
sub
inc
sub
cs
(bad)
mov
xchg
xchg
cmp
push
or
xor
fwait
test
idiv
clc
dec
inc
ins
pop
imul
pop
retf
ins
and
jmp
jl
add
mov
jl
push
adc
das
jne
(bad)
mov
in
dec
mov
in
sub
mov
cmc
adc
or
leave
mov
or
mov
pop
(bad)
(bad)
add
leave
ret
cmp
sbb
mov
xchg
repz
icebp
sbb
pop
xor
push
(bad)
add
(bad)
and
add
sub
adc
inc
adc
jmp
aaa
clc
mov
int
add
cmp
pop
pop
cdq
xchg
xchg
retf
dec
sti
sbb
retf
mov
xor
adc
or
sbb
adc
mov
and
jns
scas
retf
bound
mov
loop
(bad)
in
stc
mov
cmp
das
mov
adc
xchg
jl
inc
sub
sub
mov
and
pop
test
pusha
push
lods
int3
inc
xchg
rcl
test
xor
add
and
retf
lahf
add
push
and
fbstp
pop
mov
inc
js
cmp
cli
hlt
mov
mov
stos
push
mov
push
push
or
push
int3
dec
addr16
cmp
or
mov
cmp
and
retf
sbb
mov
div
inc
cmp
push
test
out
jmp
cmp
pusha
fcom
cmp
movs
pushf
push
int
jno
dec
loop
and
in
push
push
jmp
xchg
push
mov
inc
pop
nop
and
adc
mov
jnp
pop
mov
popf
test
lea
cmps
(bad)
adc
dec
ror
xor
not
cli
mov
movs
scas
jmp
push
stc
jns
dec
repz
sbb
call
dec
fbld
sar
lock
dec
push
push
outs
or
xlat
add
and
cmp
and
test
aam
aaa
(bad)
sar
pop
xchg
fsubp
xchg
mov
sub
(bad)
in
jae
adc
pop
lea
push
xor
push
jmp
daa
fdivr
and
jmp
add
or
and
xor
sub
lahf
pop
stc
bound
jns
sbb
mov
lahf
jno
mov
shr
or
or
mov
das
sbb
cmp
je
lock
loope
add
cmps
es
les
scas
ret
and
mov
sahf
cmp
jno
sub
pop
ror
add
or
fidivr
mov
sub
xchg
cmps
mov
add
and
xor
scas
je
leave
pop
push
jb
lahf
pop
(bad)
xchg
xor
push
(bad)
fisttp
pop
mov
jp
(bad)
lahf
mov
push
fadd
jl
lock
cmp
(bad)
xor
push
je
(bad)
in
popa
xchg
mov
fxch
das
icebp
pop
out
push
cmp
add
jnp
imul
out
dec
jne
je
cld
test
mov
push
xchg
cmp
in
div
xchg
pop
cmps
pop
mov
dec
push
mov
rcl
mov
add
enter
cmp
sbb
mov
aaa
fisubr
xchg
add
pop
add
sub
cs
fidivr
cld
push
xor
stos
mov
pop
cmp
pop
and
fcom
icebp
sbb
bndldx
aad
int3
jge
pushf
mov
cmp
repz
xor
sbb
fcom
and
es
add
inc
sbb
or
test
xchg
sbb
aam
test
inc
pop
push
cmp
stc
loopne
sbb
mov
jmp
clc
pop
jns
inc
iret
js
int
adc
xor
push
popf
mov
pop
and
lock
adc
enter
rcl
in
pop
pop
push
inc
out
push
ja
shl
inc
or
xor
ds
in
mov
lea
sub
push
push
pusha
add
out
or
jecxz
ret
add
xchg
fnsave
lds
inc
xor
fdiv
lock
sub
jl
pop
cmps
shr
jae
fnsave
sti
mov
addr16
addr16
ins
mov
or
mov
and
or
xchg
data16
repnz
test
ins
retf
add
add
jmp
stos
adc
pop
mov
add
aas
fiadd
sahf
(bad)
dec
mov
lahf
dec
pop
sub
outs
js
pop
repnz
pop
mov
sbb
jne
add
repnz
sbb
ror
xor
inc
lock
xchg
enter
daa
scas
ds
out
ja
pop
push
xor
rcr
cmps
adc
ret
adc
xchg
ficomp
mov
sbb
outs
sbb
push
or
pop
mov
popa
push
imul
push
add
sub
mov
cmp
or
xchg
sub
sub
inc
jmp
lods
mov
sub
inc
jmp
aaa
sar
mov
das
mov
repnz
repz
ds
mov
push
sbb
adc
push
out
push
dec
cwde
lods
fisttp
sahf
inc
popf
or
inc
or
cmp
imul
test
test
push
jp
adc
pop
pop
js
inc
push
xor
push
scas
sub
fucomi
nop
lock
out
enter
add
xor
imul
pop
idiv
mov
jns
call
nop
or
repnz
pop
xchg
ins
call
faddp
xchg
ins
std
pusha
jg
popa
sub
mov
xor
sub
cmp
add
mov
mov
xchg
push
dec
inc
aaa
lods
xlat
adc
rcr
adc
mov
xchg
stc
push
retf
xlat
(bad)
fcom
xchg
imul
jecxz
add
and
push
mov
xor
add
xor
outs
xchg
test
int3
mov
jae
jmp
add
les
add
out
push
push
mov
lea
jo
loopne
pop
scas
test
bound
in
enter
in
jnp
sub
sub
pushf
and
hlt
test
cwde
loope
mov
jl
xchg
jmp
outs
(bad)
repz
cwde
cli
aad
push
mov
jne
pop
cmp
imul
in
xchg
test
outs
sub
mov
jo
ds
inc
xor
lea
pop
loope
neg
inc
adc
pop
adc
dec
push
xor
jmp
push
sar
fsub
(bad)
fldcw
lea
rcl
mov
cmp
sbb
in
ds
int3
enter
dec
int
sub
and
fldcw
movs
stc
xchg
stos
ins
test
add
adc
rcr
mov
lock
std
(bad)
cmp
into
or
test
arpl
lock
sbb
cmps
sub
mov
dec
lahf
pop
sub
jbe
out
or
push
hlt
fwait
pop
lock
sbb
inc
in
ffreep
jge
in
stc
mov
lods
adc
bound
icebp
pop
(bad)
out
fld
cdq
xchg
enter
or
rcr
int
leave
mov
add
xchg
shl
mov
inc
or
fcom
int
fadd
inc
jb
inc
sub
outs
pushf
ret
stos
pusha
dec
and
jg
cld
in
ins
retf
cmp
dec
xchg
or
mov
lds
push
dec
jo
jne
add
mov
nop
in
push
mul
pop
xchg
jp
(bad)
icebp
popa
std
ins
dec
js
(bad)
push
add
pusha
inc
add
(bad)
cwde
jb
dec
cmp
sbb
xor
cdq
leave
mov
call
dec
cmp
repnz
mov
sbb
mov
inc
fadd
fisubr
dec
fldcw
pop
or
sub
(bad)
sti
scas
in
push
xchg
xchg
aas
pop
(bad)
sbb
rol
cmp
fmul
sti
fcmovnbe
(bad)
xor
inc
movs
or
dec
int3
xchg
bound
repz
(bad)
sub
add
push
(bad)
mov
cmps
aas
sbb
mov
xchg
cmc
jecxz
sbb
jae
jmp
and
push
mov
fs
movs
imul
push
test
xor
loop
dec
(bad)
imul
ins
sbb
cmp
push
mov
bound
fcomp
retf
pop
mov
scas
push
rcl
pop
mov
fisubr
mov
div
in
fwait
out
push
clc
dec
shl
pop
push
je
shl
movs
out
add
div
repnz
mov
in
addr16
pop
outs
sahf
mov
popf
jae
fcomp
in
in
push
push
pinsrw
mov
or
jbe
in
ret
sti
shl
xchg
and
aaa
mov
jp
cdq
inc
fisub
jo
jmp
pop
cmp
cmp
in
and
mov
adc
jbe
push
jecxz
sbb
push
cwde
rcr
mov
adc
xor
or
cmc
repnz
mov
(bad)
int3
lea
xchg
aaa
push
test
sahf
push
jae
into
jmp
cmp
mov
pop
not
(bad)
jo
out
mov
pop
pop
dec
stos
mov
movs
(bad)
aad
or
movs
sahf
jae
jmp
mov
jae
sub
lahf
jae
nop
loope
fadd
add
pop
pushf
leave
sub
(bad)
cmp
and
mov
push
fcom
out
jl
pop
xchg
push
mov
pop
xchg
fwait
and
inc
sbb
or
cmp
sub
xchg
lea
lods
and
cmp
dec
and
or
adc
sub
loop
in
push
xor
push
inc
call
mov
add
repnz
fld
push
jnp
pop
pop
popf
ds
mov
in
inc
push
ror
out
repz
das
cmp
mov
pop
sub
jno
push
shl
hlt
cdq
loope
add
cwde
mov
inc
scas
sbb
(bad)
jb
xchg
enter
mov
jmp
cmp
movs
repnz
inc
test
xor
inc
mov
hlt
xor
out
bound
xchg
or
sub
outs
imul
aam
jae
xchg
jnp
and
ror
or
pop
mov
adc
mov
cmp
dec
cmp
xlat
mov
repnz
mov
jl
dec
mov
and
clc
push
idiv
push
shl
cmp
or
mov
push
adc
pop
stc
repz
int
push
adc
arpl
cli
lea
sbb
add
dec
xchg
push
outs
cwde
cmps
sbb
inc
xlat
fucom
cmp
xor
sbb
add
pusha
adc
and
jecxz
pop
cdq
jne
les
xor
adc
xchg
je
imul
pusha
shl
mov
or
aam
fwait
adc
jmp
cdq
ja
cmp
scas
mov
xchg
mov
push
fstp
(bad)
call
pop
add
aaa
push
push
jno
repz
push
sbb
(bad)
mov
dec
adc
push
ins
stos
push
ja
pushf
pop
push
popa
xlat
mov
(bad)
sbb
mov
fld
(bad)
xchg
es
xor
inc
cmps
fst
mov
fstp
or
mov
sub
mov
mov
inc
nop
(bad)
test
repnz
jnp
jnp
pop
push
pop
pop
out
out
fldcw
xor
out
push
lock
add
jg
cmp
xor
dec
add
or
xchg
push
lds
pop
idiv
adc
xchg
pushf
fs
sbb
push
test
mov
push
loope
call
nop
cmp
cmc
mov
push
pop
pop
(bad)
jmp
mov
sub
call
sub
mov
jne
mov
sbb
push
ja
mov
mov
jmp
pop
ins
and
test
dec
or
ja
ss
cmp
ins
fs
xor
adc
aaa
je
mov
adc
int3
dec
arpl
fidivr
sub
push
cmp
shl
ret
mov
pop
jmp
dec
cmp
jmp
sbb
cmp
xchg
mov
rcl
adc
mov
imul
xchg
jno
int
pop
int3
dec
and
mov
xchg
mov
jg
jl
call
lock
cmp
and
sbb
adc
fldenv
loope
add
mov
mov
pop
mov
jno
cmc
daa
inc
stos
popa
dec
stc
add
sbb
xchg
jae
push
loope
push
imul
push
adc
mov
cwde
ret
ds
dec
inc
mov
push
cmp
xchg
add
push
retf
aam
ss
sbb
dec
outs
mov
repnz
out
push
fist
xlat
add
icebp
scas
xor
gs
nop
mov
jg
sbb
loopne
test
retf
pushf
fsubr
es
ds
or
sub
cmps
pop
leave
and
fs
cmp
xor
mov
mov
mov
xor
jmp
push
je
js
or
ss
push
sub
mov
pop
push
std
loopne
sbb
lds
loop
out
xor
pop
push
ins
popf
js
les
jnp
cmc
outs
mov
ret
mov
pusha
gs
(bad)
adc
(bad)
mov
fwait
mov
pop
pop
lahf
push
push
push
aaa
js
in
sar
sbb
repnz
jge
cmc
xor
add
popaw
mov
and
cmp
mov
pop
push
xor
dec
jns
dec
(bad)
lods
sbb
aam
pop
test
pushf
dec
push
retf
jne
xchg
cmps
and
mov
cmps
mov
bound
cmps
mov
scas
sbb
outs
jns
or
push
bnd
in
lds
mov
pop
mov
adc
js
jns
inc
push
addr16
outs
loope
call
push
mov
xchg
and
(bad)
inc
mov
rcl
mov
hlt
mul
(bad)
pushf
pop
loope
(bad)
mov
aam
mov
lahf
inc
xchg
xchg
mov
in
gs
sar
add
cmp
and
repz
mov
out
std
ret
and
fstp
test
sbb
outs
gs
xchg
repz
scas
dec
hlt
jecxz
xor
lds
hlt
dec
cmp
mov
and
jecxz
ror
mov
das
pop
(bad)
push
xchg
xchg
add
and
scas
stc
jl
sub
call
mov
jns
ret
dec
iret
fadd
shl
xor
add
mov
lahf
dec
mov
mov
(bad)
call
cmp
sbb
sbb
cmp
sbb
es
inc
daa
bound
mov
scas
and
loope
push
dec
cmp
jbe
cld
mov
mov
dec
push
jmp
outs
cmp
cwde
adc
or
out
push
int3
sbb
mov
cdq
add
jge
lods
cdq
sbb
in
add
mov
dec
inc
xlat
inc
push
ins
add
repz
cmp
aad
sub
mov
inc
pop
push
sub
cmp
cmp
out
xor
mov
hlt
lods
(bad)
xor
inc
adc
test
cwde
dec
adc
pushf
rcr
icebp
(bad)
dec
or
mov
loop
inc
mov
aad
sar
add
mov
or
bound
hlt
jg
cwde
add
push
out
js
jecxz
mov
jmp
scas
div
pop
dec
hlt
add
push
jno
cdq
pop
enter
pop
push
test
mov
and
mov
rcr
aaa
(bad)
or
sbb
fs
(bad)
push
xor
xchg
(bad)
out
sbb
xor
retf
inc
inc
loopne
sar
call
inc
sub
xchg
jmp
cmps
xor
out
mov
jae
xor
push
push
retf
mov
mov
mov
xchg
cli
mov
addr16
xchg
movs
ins
ror
dec
out
cs
mov
fcom
push
add
arpl
jns
sahf
mov
and
adc
push
xchg
push
int
push
xchg
mov
push
retf
push
leave
mov
pop
pop
add
test
and
adc
retf
add
in
mov
or
fcom
enter
dec
mov
mov
adc
jae
cmp
iret
out
or
adc
sbb
outs
aas
lods
in
daa
in
sub
dec
cmp
pop
icebp
sbb
mov
push
lea
fs
sti
jp
mov
or
adc
test
icebp
loopne
loope
ficom
nop
cmp
mov
mov
retf
adc
inc
shl
sub
hlt
push
popf
sub
sbb
jmp
mov
jno
add
xchg
nop
out
(bad)
movlps
shr
stos
and
pop
fiadd
pop
xor
scas
add
ins
add
lahf
nop
pushf
mov
dec
imul
xor
xchg
ja
mov
ins
cmp
inc
mov
frstor
in
jne
or
jecxz
movs
or
nop
out
push
mov
xor
and
ffree
and
loopne
sbb
ds
xor
mov
scas
fst
or
mov
idiv
inc
jno
inc
ins
fld
dec
inc
jne
jne
xor
sbb
or
outs
test
movs
out
or
xchg
add
sub
xor
test
int
dec
ret
mov
add
push
mov
fmul
fiadd
push
cmp
add
inc
mov
push
cmp
and
inc
inc
aad
ficomp
xchg
shr
icebp
rcr
iret
(bad)
test
in
enter
cdq
cmp
xchg
cmps
ss
fild
int3
test
lds
push
call
add
jae
jmp
adc
pop
and
gs
sbb
(bad)
sub
push
cmp
nop
push
ins
sahf
mov
shl
jmp
mov
in
xchg
mov
ss
ds
xor
rcr
mov
call
adc
test
inc
cmp
(bad)
mov
mov
mov
jmp
pop
es
pop
(bad)
mov
cli
fstp
repz
gs
push
ja
mov
lods
cmc
push
cmp
push
ss
pop
dec
and
data16
cld
cmp
aam
inc
sbb
daa
sub
fdiv
mov
(bad)
gs
jmp
mov
jo
(bad)
loopne
int3
popa
and
dec
lods
retf
mov
and
in
test
dec
xchg
or
jbe
push
fxam
daa
jmp
cld
loopne
push
add
movs
data16
cwde
ret
in
mov
rol
out
jne
je
daa
es
outs
shl
dec
test
mov
jmp
lea
movs
pop
enter
(bad)
mov
bound
imul
adc
dec
dec
sbb
loopne
test
outs
jle
imul
sahf
setns
mov
mov
jae
sub
cmp
adc
icebp
shl
mov
jno
(bad)
pop
xor
sbb
cmp
mov
mov
int3
test
arpl
adc
ret
adc
repz
(bad)
jmp
xor
in
or
pusha
loope
push
sub
jae
addr16
mov
ret
sub
xchg
arpl
(bad)
jnp
mov
rep
sub
mov
fisubr
jmp
mov
data16
or
mov
call
cmp
or
mov
ret
aaa
add
lods
scas
dec
dec
sti
and
or
push
stos
lods
push
sar
pop
mov
mov
adc
adc
xor
or
fwait
dec
mov
push
inc
mov
adc
cmp
inc
iret
loopne
sbb
fldcw
pop
mov
push
nop
movs
or
jle
fist
pop
icebp
retf
jb
(bad)
jmp
jmp
test
or
dec
ret
(bad)
or
(bad)
fld
push
ret
mov
or
out
mov
out
push
sbb
add
dec
retf
sub
or
or
pop
js
inc
pop
xor
inc
mov
(bad)
jmp
pop
add
mov
jp
mov
jnp
xchg
ret
push
cmp
pop
or
stos
push
xchg
mov
fist
add
or
aaa
fdivr
push
xor
lahf
dec
in
push
in
in
inc
test
cmp
mov
ret
repnz
vmaxss
xor
stc
push
cmp
xchg
and
popa
cmp
(bad)
aad
xor
xchg
add
out
jae
lahf
pop
and
pusha
mov
pusha
sub
sbb
xchg
add
in
hlt
push
fnstsw
lds
es
in
push
add
loopne
hlt
or
mov
lods
rcl
hlt
pop
push
sub
or
mov
(bad)
mov
cmp
inc
std
bound
cli
rol
dec
movs
inc
adc
mov
nop
movs
push
ficom
ins
sub
stos
sub
movs
imul
pop
mov
mov
aaa
push
xchg
mov
mov
adc
scas
fwait
pop
bound
mov
jmp
mov
outs
pushf
icebp
pop
stos
fsub
xor
(bad)
lds
(bad)
lds
mov
mov
fs
stos
cld
sahf
xchg
aas
dec
push
push
jbe
lahf
stos
pushf
mov
mov
mov
out
xchg
leave
mov
sbb
movs
ret
sahf
into
xor
(bad)
in
retf
in
jmp
sbb
(bad)
dec
jmp
outs
in
aaa
pop
loopne
out
ja
ins
push
ins
in
sbb
call
cwde
cld
out
int3
mov
dec
mov
retf
out
xor
jnp
sbb
pop
outs
jg
fistp
leave
xchg
sbb
push
cmp
and
dec
addr16
mov
sub
addr16
adc
retf
fsub
sub
mov
xor
jl
rcr
or
lock
sbb
inc
sub
cmps
js
bound
popa
aas
xor
stos
jp
xchg
inc
mov
inc
inc
sbb
sub
(bad)
out
push
cmp
adc
sub
fidiv
popa
mov
push
mov
xchg
icebp
sbb
push
lods
fld
lods
xchg
jb
pop
fsubr
dec
push
pop
test
hlt
ror
jnp
and
and
aaa
rcl
inc
es
dec
push
jo
ss
iret
hlt
in
sub
adc
sbb
movs
inc
pusha
daa
lea
jb
mov
adc
mov
xor
std
jg
sub
in
gs
mov
in
pop
adc
pop
sbb
stos
xor
jl
inc
cmp
cli
iret
add
add
sub
sti
push
inc
mov
mov
(bad)
clc
fisub
add
(bad)
fnstenv
js
aaa
inc
inc
push
dec
sub
pushf
popa
xchg
pop
cmp
repz
pop
int
test
push
scas
mov
jo
xchg
sbb
or
leave
sbb
pop
ja
add
pop
adc
icebp
aaa
(bad)
arpl
mov
sahf
fsubrp
pop
std
cmps
int3
jns
pop
pusha
and
jmp
cmp
xchg
call
lods
dec
push
mov
imul
xchg
jne
(bad)
ror
popa
je
inc
(bad)
pushf
cmp
mov
inc
hlt
loopne
xor
add
mov
sbb
ins
add
fadd
mov
data16
mov
loop
jo
loop
lods
xchg
cld
(bad)
pop
dec
jge
mov
fidivr
mov
adc
cmps
gs
sub
std
mov
bound
or
push
popa
sbb
sbb
outs
bound
call
jp
inc
loopne
sub
in
and
popf
sar
adc
(bad)
addr16
out
sbb
pop
push
mov
cmp
pop
xor
push
out
cmp
bound
stos
sbb
sub
ror
fistp
pop
jp
gs
shl
cmp
aam
mov
mov
fstp
dec
jg
fs
jl
lods
aaa
fisttp
stc
jnp
inc
(bad)
xor
nop
push
cmp
jmp
inc
add
xchg
xchg
(bad)
ins
aaa
gs
shl
cmp
inc
ror
xor
cmc
jbe
push
fidivr
pop
inc
push
mov
adc
clc
push
cmp
cmp
mov
(bad)
jmp
sub
retf
cli
and
mov
mov
sbb
mov
add
repz
fwait
dec
cmp
mov
push
cmp
jp
add
dec
adc
pop
mov
mov
xor
(bad)
pop
jno
inc
ret
pinsrw
add
inc
retf
bound
dec
and
xor
cmps
xchg
cmp
push
test
mov
push
stos
fnstsw
dec
sahf
ins
mov
out
popf
icebp
pop
sbb
xor
icebp
ins
cmp
mov
push
cmp
out
jnp
mov
out
add
rol
(bad)
loope
stc
inc
mov
pop
pop
sbb
aas
sbb
test
(bad)
jmp
or
movs
pop
mov
pushf
imul
mov
pusha
adc
mov
dec
sub
test
xchg
mov
add
xchg
fnsave
das
iret
in
or
add
or
mov
dec
aas
xor
push
inc
push
daa
cmp
mov
and
sub
int3
sub
mov
xchg
mov
xor
outs
mov
pop
xchg
jge
repnz
inc
inc
mov
xchg
inc
or
xor
out
sbb
cli
es
or
add
test
and
inc
icebp
inc
cmps
pop
xor
jo
sahf
outs
mov
xor
mov
cld
and
pop
dec
or
push
jb
hlt
and
stos
fbstp
cmp
movs
mov
(bad)
stos
test
aam
dec
sahf
jmp
jbe
stos
jo
mov
sbb
shl
fimul
test
movs
and
jp
mov
test
jnp
sbb
or
pop
inc
jns
push
push
mov
fprem
pop
push
mov
push
adc
pop
add
ret
(bad)
xchg
adc
sbb
lods
pop
cmp
es
call
adc
dec
fist
jp
dec
inc
pop
sar
mov
repnz
push
mov
mov
retf
ds
out
repnz
mov
push
icebp
aaa
jae
shl
jmp
or
jne
jmp
scas
out
popa
push
mov
inc
jle
sahf
pop
sbb
je
pop
popa
js
xor
stc
imul
icebp
jg
sbb
jnp
(bad)
hlt
and
popf
or
movs
mov
enter
mov
ret
scas
or
jne
dec
sar
xchg
pop
lea
dec
mov
inc
data16
lods
cmps
fs
enter
dec
call
jnp
cwde
ret
mov
jo
not
pop
jle
cmps
jecxz
int
jecxz
sbb
mov
mov
cli
test
jmp
sbb
xchg
lods
(bad)
mov
aam
pop
sbb
retf
icebp
mov
repnz
jp
xor
mov
sahf
enter
jmp
test
pop
add
adc
hlt
sbb
push
scas
(bad)
pop
pop
mov
call
test
push
bound
(bad)
mov
outs
loop
das
mov
pusha
inc
add
mov
lock
jmp
cmp
retf
pop
mov
mov
jnp
into
pop
ja
jns
pushf
jo
adc
and
test
or
fimul
mov
add
repnz
scas
ret
sub
fild
sub
mov
dec
repnz
loop
pop
mov
(bad)
push
shl
mov
idiv
mov
(bad)
clc
stos
mov
pop
sar
lea
out
div
jo
jp
cmp
out
test
cli
mov
jmp
fiadd
xchg
jmp
push
jmp
jne
sbb
hlt
(bad)
sub
imul
or
pusha
arpl
or
lds
js
movs
push
cwde
in
aas
rcl
xor
adc
mov
sti
push
cmps
cli
xchg
(bad)
fwait
out
movs
retf
lods
inc
arpl
pop
or
xchg
push
repz
inc
repnz
push
lahf
iret
or
pop
or
inc
hlt
or
ds
xor
fist
les
nop
shl
aas
sub
cld
cdq
sti
adc
aam
lahf
cmp
jns
xor
ret
sub
xor
push
js
sbb
andps
pop
xchg
xchg
pop
xchg
mov
push
jp
fcmovnbe
mov
push
jno
mov
shr
adc
lahf
xchg
ins
dec
fisttp
jmp
test
out
mov
setnp
dec
jno
inc
dec
add
addr16
(bad)
movs
xchg
xchg
outs
sbb
xor
jae
cmps
pop
call
icebp
xor
scas
xor
dec
push
dec
cs
int3
sahf
pop
mov
mov
into
cdq
adc
cs
sti
push
(bad)
je
mov
iret
mov
fstp
and
leave
mul
mov
cld
repnz
xchg
xor
pop
movs
mov
add
mov
fsub
pop
aam
add
or
push
cmp
movs
lock
adc
xchg
push
mov
cld
cmp
loope
mov
pop
inc
ins
cs
jns
stos
or
pushf
into
dec
xchg
(bad)
in
pop
sahf
adc
mov
jbe
inc
out
(bad)
jb
imul
(bad)
adc
dec
mov
xchg
push
mov
ficomp
clc
add
push
js
sbb
adc
and
test
add
adc
add
pusha
data16
(bad)
and
lock
sbb
daa
push
sub
mov
adc
(bad)
jge
or
ret
xchg
(bad)
and
pcmpgtw
cmp
cmp
add
(bad)
or
mov
ds
push
push
out
in
(bad)
addr16
repz
cmps
jmp
push
pop
dec
ja
movs
cmp
jno
xchg
aas
push
test
bound
stc
xchg
jne
push
cmps
retf
call
mov
xchg
ins
add
adc
inc
out
shl
out
add
ret
mov
cmp
sbb
call
or
push
rep
int3
mov
cmp
neg
cmps
pop
repz
test
cmp
pop
add
jecxz
leave
push
dec
sar
(bad)
xlat
pop
pusha
or
add
scas
andps
arpl
cmp
mov
cmp
in
fnstenv
loop
clc
lock
fs
or
cmp
std
das
sti
xchg
outs
cmp
dec
or
or
xchg
mov
sub
mov
dec
xor
aas
scas
mov
adc
push
sbb
pop
cmp
sahf
mov
into
cld
fwait
not
adc
jno
icebp
ret
pop
add
shr
jge
push
hlt
retf
and
je
out
dec
aam
or
push
xor
mov
add
pop
and
mov
into
mov
and
sbb
add
and
in
pop
fsubp
adc
repnz
xlat
popf
cmp
outs
out
mov
mov
ins
lods
sti
push
shl
mov
inc
sbb
cld
xchg
js
sub
inc
push
push
les
cs
xor
dec
and
or
xor
cmp
lahf
fild
sbb
hlt
mov
mov
xchg
je
pop
ret
add
pop
and
xchg
and
test
cmp
pop
sub
div
in
and
adc
or
and
add
(bad)
dec
popf
xor
and
dec
bound
or
push
cmc
mov
push
loopne
and
mov
repz
xor
and
test
or
pop
cmp
ds
hlt
dec
push
out
int3
or
cld
pop
add
test
test
ret
pop
mov
add
xchg
clc
cmps
test
sti
ins
neg
push
xchg
nop
sub
ds
cmp
sbb
cwde
fisttp
outs
xchg
daa
movs
loope
add
jbe
movs
mov
xchg
add
loopne
pop
imul
xchg
leave
mov
imul
sahf
test
pop
test
dec
jg
mov
cmp
inc
aaa
sbb
sti
iret
jl
test
dec
push
add
test
pop
xchg
inc
stos
mov
jle
loopne
dec
cmp
ja
lds
or
test
mov
cmp
and
popa
mov
xchg
push
jecxz
test
int
pop
pop
test
outs
jnp
in
(bad)
dec
add
mov
idiv
int3
push
popf
sub
in
add
adc
gs
push
push
sub
sub
popa
cmp
sbb
xlat
mov
test
sti
ret
es
scas
loop
popf
rcl
mov
sub
adc
jnp
and
aam
sub
cmp
cmp
cld
jno
jnp
push
jnp
enter
sbb
fist
xor
in
push
aad
mov
pusha
add
dec
retf
ins
out
inc
(bad)
pop
or
icebp
cmp
sub
ins
dec
in
in
fs
pop
test
test
mov
push
push
je
icebp
shr
sub
ror
xor
sub
cmp
push
lods
mov
cmp
imul
pop
xchg
xor
fadd
dec
ins
stos
iret
fnstenv
push
nop
jb
xchg
rol
cwde
mov
les
sub
fnsave
aaa
xlat
enter
jge
fdiv
je
sti
dec
jmp
arpl
int3
lahf
add
mov
stc
ins
or
test
icebp
push
and
cmp
mov
cld
(bad)
ret
dec
sbb
adc
loopne
fwait
inc
adc
mov
aaa
mov
inc
xchg
lock
ret
loop
or
inc
in
out
jmp
int
enter
shr
push
ror
and
cmp
add
jge
sbb
jmp
cdq
xchg
cmps
add
jmp
jno
inc
fs
(bad)
out
push
sub
shl
lea
lds
dec
in
xor
xchg
nop
cmp
inc
gs
ret
hlt
and
adc
inc
jl
jp
lds
sbb
fisub
int3
xchg
sub
jbe
ja
mov
mov
(bad)
xor
or
je
pop
(bad)
jne
pop
stos
jbe
nop
iret
mov
xlat
ja
ss
lds
je
push
cld
popf
retf
mov
push
sbb
mov
jbe
dec
jp
ret
rcr
retf
dec
(bad)
in
mov
pop
xor
add
test
cdq
push
scas
stc
add
mul
inc
or
into
mov
dec
xor
fld
fs
stos
mov
xchg
inc
xchg
int
mov
rcl
scas
mov
xor
cdq
jmp
loop
in
mov
jmp
dec
add
add
cwde
mov
in
pop
stc
dec
sub
cmp
cmps
retf
xchg
xor
jmp
imul
jmp
movntps
xchg
push
pop
sub
cmc
mul
inc
xchg
or
ins
test
or
lds
push
mov
in
inc
inc
cwde
jae
xlat
inc
(bad)
jmp
cdq
iret
inc
test
(bad)
dec
push
mov
inc
repnz
into
add
clc
adc
and
lea
inc
pop
aaa
push
outs
das
cdq
shr
mov
add
or
jge
outs
and
jmp
lock
jnp
mov
mov
or
inc
push
cmp
add
or
mov
enter
retf
ror
out
retf
aad
adc
mov
mov
jle
mov
dec
imul
mov
nop
call
and
mov
shl
test
out
cdq
push
add
mov
push
repz
sbb
test
in
inc
and
push
mov
aam
jbe
cmps
jl
mov
sbb
jne
daa
fucomp
lods
shr
(bad)
fistp
imul
cmovs
mov
shl
je
rcr
push
outs
(bad)
addr16
push
out
loop
scas
sbb
or
push
mov
adc
xchg
or
xchg
outs
dec
in
dec
mov
mov
inc
aam
repnz
fisub
sbb
repz
out
and
push
les
scas
sahf
xchg
adc
add
jl
inc
add
cmp
xchg
loop
jmp
out
sub
jno
outs
int3
fwait
nop
push
ja
out
ret
cmps
mov
icebp
xchg
inc
(bad)
(bad)
jmp
mov
icebp
lock
test
inc
inc
inc
sahf
daa
sti
pop
mov
lods
lock
sub
(bad)
std
xchg
dec
inc
jmp
jl
dec
aas
or
test
jns
aas
xchg
loopne
sldt
and
and
out
adc
mov
and
arpl
je
(bad)
cld
adc
fbstp
cdq
test
dec
pop
leave
jg
pusha
arpl
retf
dec
push
test
or
retf
mov
inc
mov
xor
sbb
scas
mul
fxch
cwde
jecxz
cwde
ss
pop
ret
int3
jns
or
add
sar
in
call
or
and
add
inc
icebp
lds
inc
mov
mov
div
add
outs
jmp
pop
mov
fisttp
xchg
inc
mov
add
(bad)
pop
mov
inc
sub
sti
leave
ss
push
fsub
xchg
loope
mov
movs
jmp
jmp
ret
pop
into
add
es
sbb
stos
pop
adc
ret
in
add
jl
add
mov
sbb
xor
sahf
cli
call
sub
mov
and
je
sbb
shl
inc
push
jns
mov
std
cmps
adc
outs
fisub
push
inc
mov
clc
xor
aam
les
cdq
sub
inc
jg
aaa
clc
inc
push
rcr
and
pop
ret
cmp
int3
hlt
and
int3
outs
ror
rcl
fwait
retf
cmp
jns
push
lods
das
and
outs
repz
jle
out
jge
cmps
test
push
pop
cmps
(bad)
xlat
clc
or
jmp
xor
mov
(bad)
shl
pop
mov
fisub
out
pop
sub
pop
mov
mov
lods
das
pop
pop
dec
int3
int
outs
jnp
cs
xchg
lods
inc
stos
(bad)
add
push
add
and
jae
push
shl
shr
jge
push
lahf
cmc
mov
jo
mov
lahf
movs
outs
mov
and
inc
push
scas
loope
add
adc
pusha
dec
adc
mov
cmp
sahf
je
sub
sbb
cmp
mov
(bad)
xchg
jge
in
out
pushf
mov
mov
push
add
fild
ret
pop
dec
sbb
sub
inc
push
xchg
imul
mov
cld
popf
pop
mov
pop
xchg
push
sbb
bound
enter
mov
mov
cli
add
and
push
bound
jae
jno
xor
dec
add
inc
das
retf
mov
aas
add
fmul
not
jae
stos
push
sub
jmp
adc
xchg
ins
(bad)
xchg
hlt
imul
retf
adc
cmps
outs
xchg
ds
dec
mov
enter
hlt
add
mov
cmp
mov
jb
jl
mov
sahf
mov
or
adc
inc
mov
dec
xchg
inc
xchg
test
push
rcl
fwait
xchg
(bad)
hlt
outs
cdq
fisub
pop
stos
add
fbld
inc
sub
ret
cmp
dec
cmps
and
dec
sub
out
call
shl
mov
mov
sub
mov
xor
sbb
xchg
and
ins
(bad)
int
xchg
or
loope
inc
cmp
aas
mov
mov
inc
not
sub
lods
adc
loop
add
sub
adc
call
into
out
mov
sub
adc
aaa
cmc
mov
pop
adc
out
xor
pop
and
push
repnz
xchg
gs
inc
pushf
adc
mov
repz
sub
and
sbb
inc
adc
push
(bad)
pop
jo
pop
icebp
xlat
mov
jg
cld
cmovl
mov
xchg
test
jns
ret
mov
sahf
(bad)
mov
call
add
scas
pop
(bad)
cs
jg
nop
jo
xchg
jns
push
retf
js
(bad)
sahf
rcr
push
or
dec
fwait
lahf
mov
and
arpl
mov
jle
mov
or
xor
xor
lock
enter
mov
les
cmps
xor
xchg
(bad)
into
pop
not
enter
mov
stc
xor
outs
mov
aaa
aad
and
nop
cmp
int
cmp
cmp
aaa
data16
sub
das
xor
push
cmp
xor
(bad)
xor
xchg
pushf
sub
inc
sbb
pusha
shl
mov
jnp
and
test
add
jns
dec
retf
in
stc
(bad)
ds
jle
mov
(bad)
pop
mov
gs
ror
mov
lea
sbb
jmp
aaa
idiv
in
ins
fs
in
inc
sbb
jp
mov
call
sub
call
rol
inc
pop
stc
and
jmp
jle
jge
inc
dec
push
mov
scas
(bad)
pop
inc
je
xchg
add
push
out
pop
pop
cmp
aas
mov
leave
adc
sbb
scas
and
and
jle
jbe
in
imul
inc
fdivr
push
and
mov
cli
(bad)
mov
mov
bound
push
in
xchg
pop
xor
int
sbb
jne
out
mov
jl
xchg
cwde
push
push
out
or
adc
mov
data16
pop
mov
and
dec
popf
outs
aam
aas
lods
mov
mov
aad
dec
fs
les
int3
xchg
pop
aad
pop
mov
je
cmp
xor
inc
shl
sbb
push
mov
dec
and
mov
mov
dec
lock
mov
shl
add
mov
and
leave
sar
test
in
sub
daa
xchg
or
cmp
aas
shl
mov
add
xchg
outs
ins
inc
std
scas
adc
sub
pop
call
in
retf
and
cmps
ret
dec
aad
cdq
jl
mov
repz
popf
clc
add
test
jg
leave
jp
fwait
inc
xlat
add
test
pushf
mov
sub
sub
inc
(bad)
push
xchg
mov
inc
adc
push
adc
shr
mov
stc
xchg
data16
and
mov
jl
rcl
cmp
cmp
jns
pop
aam
cmp
fs
add
dec
js
sti
and
pop
jns
je
pop
popa
mov
mov
test
adc
mov
popf
push
and
(bad)
and
sub
dec
aad
call
icebp
dec
in
fwait
mov
dec
(bad)
hlt
sub
jae
push
cmp
sbb
retf
retf
mov
push
loopne
jmp
and
xchg
pop
div
pop
pop
bound
enter
or
cmc
mov
stos
inc
data16
retf
mov
or
mov
and
stos
aam
mov
cmp
mov
js
enter
push
retf
repnz
popf
retf
pop
mov
dec
fcom
ja
add
push
or
xor
bound
fdivr
jne
mov
jg
jne
ins
ds
icebp
in
xor
mov
jnp
mov
mov
in
inc
movs
and
loope
mov
mov
lahf
clc
push
ret
jp
movs
cdq
push
sub
lods
jmp
mov
xchg
mov
mov
pop
lods
push
jo
je
pop
int
jb
clc
mov
lock
cmpps
xchg
shl
and
cmp
push
loope
jnp
iret
int3
lea
cmps
out
clc
shl
cmp
add
imul
mov
or
mov
adc
push
out
add
push
mov
ins
sahf
enter
mov
lock
jmp
push
xor
mov
push
hlt
pop
mov
test
adc
dec
add
fwait
(bad)
mov
add
jae
add
outs
pop
inc
cmp
add
not
xchg
inc
adc
sbb
fincstp
outs
or
(bad)
sub
xor
inc
jno
rcr
ret
dec
or
out
inc
repnz
lahf
popa
(bad)
mov
mov
fwait
pop
enter
(bad)
cdq
repnz
push
ss
pop
retf
and
enter
mov
dec
or
cs
pushf
inc
inc
adc
hlt
rol
adc
and
(bad)
bound
nop
aaa
shl
fidiv
push
out
mov
xor
mov
cmps
push
popaw
inc
dec
jmp
sbb
inc
aad
lods
sub
cmc
enter
jo
stc
adc
mov
or
lock
fcom
push
stos
push
push
mov
bound
jl
mov
daa
jmp
div
pusha
dec
inc
xchg
and
pop
dec
std
sub
inc
xchg
cdq
cmp
aaa
dec
(bad)
xchg
mov
cmp
lods
inc
dec
and
(bad)
out
loopne
stc
inc
aaa
fld
fadd
lods
stos
xchg
icebp
call
pop
push
push
or
xor
inc
test
push
add
je
xchg
into
cmp
mov
push
mov
jae
jns
dec
and
dec
lahf
sbb
push
jg
std
sbb
mov
iret
hlt
mov
and
inc
iret
lea
jmp
push
pop
enter
mov
cmps
call
sti
pop
pop
inc
mov
sub
mov
lahf
dec
and
mov
fstp
aam
jp
std
clc
popf
sub
dec
xlat
sbb
imul
lea
pop
sti
dec
nop
cli
stos
xor
call
js
xchg
xchg
cmps
mov
sub
jg
fwait
sbb
loope
js
jnp
fsub
in
cmp
mov
inc
sbb
pop
pop
ins
inc
gs
sbb
in
mov
pushf
xchg
jae
or
jecxz
pop
dec
push
rcr
mov
or
push
ss
pop
mov
mov
sub
addr16
jne
pop
ins
xchg
fdiv
push
cmp
or
dec
push
repnz
and
test
call
mov
sub
xor
xchg
fdivp
int3
lds
jne
call
xchg
mov
dec
cmp
gs
ins
aas
std
mul
nop
rol
cmc
(bad)
add
adc
cmp
fwait
cli
stos
xchg
jecxz
xor
sub
inc
mov
mov
push
mov
lds
and
test
and
cmc
push
mov
dec
adc
xchg
inc
add
mov
cdq
out
xchg
leave
mov
into
mov
lods
xchg
lock
ret
in
mov
pushf
add
xor
mov
dec
adc
fsub
adc
mov
and
outs
xor
sbb
mov
out
dec
mov
sbb
cdq
dec
clc
pop
js
inc
sbb
hlt
dec
jmp
test
std
xchg
sar
mov
mov
mov
jl
jecxz
pop
ins
cmp
nop
arpl
leave
retf
out
movaps
fs
push
jg
fnstsw
icebp
or
ins
movs
stos
cs
popa
retf
fwait
out
es
lods
xchg
add
xor
ret
rcl
dec
rol
dec
mov
sub
mov
fidiv
cmp
adc
and
sub
in
mov
and
or
sbb
inc
sub
sbb
hlt
dec
dec
pop
sub
add
in
imul
movs
pop
jmp
dec
jo
mov
cmp
dec
hlt
dec
sbb
(bad)
enter
dec
cmp
push
cmp
xor
dec
(bad)
dec
std
pextrw
mov
pop
imul
sbb
pop
sar
fwait
sahf
retf
cmp
(bad)
clc
dec
push
jmp
in
out
cdq
lahf
cmp
push
iret
sbb
nop
adc
dec
icebp
fcomp
jl
xchg
js
fmul
mov
aas
xchg
test
dec
(bad)
ds
jmp
ret
loope
retf
repz
xor
movs
xor
dec
mov
aad
(bad)
and
into
jge
pop
push
push
and
cmp
mov
fist
stos
pop
(bad)
mov
sub
push
pop
in
lea
jp
cmps
adc
mov
pop
mov
mov
adc
fs
pushf
mov
inc
dec
mov
outs
(bad)
scas
sub
jo
and
and
sub
fadd
xor
idiv
mov
scas
js
or
movs
jbe
or
pop
push
inc
daa
fidiv
loop
pop
cmp
sar
add
push
sub
inc
cmp
out
aad
enter
scas
mov
mov
and
mov
daa
(bad)
and
mov
mov
mov
loope
test
inc
pop
into
xchg
cli
add
and
cmp
mov
adc
ficomp
dec
push
mov
je
cmc
xchg
in
lods
cmp
xor
das
(bad)
xor
shl
dec
pushf
mov
or
jmp
pop
dec
mov
dec
push
pushf
jnp
lods
test
js
mov
dec
pop
(bad)
xchg
jmp
ror
or
xor
dec
call
cmps
inc
sbb
adc
sbb
rol
test
xchg
pop
mov
mov
dec
test
dec
das
jl
in
nop
adc
xor
xchg
ja
lods
fdiv
jo
or
push
jg
(bad)
mov
sub
inc
scas
xor
lea
mov
cmp
xor
push
dec
mov
xchg
push
ja
mov
dec
fisub
inc
sbb
mov
adc
aam
mov
and
call
pop
jp
push
push
es
loop
adc
test
inc
inc
hlt
fimul
(bad)
pushf
ror
sub
push
dec
fiadd
push
loopne
adc
std
and
or
in
(bad)
xlat
scas
hlt
push
movs
sub
test
push
js
inc
movs
inc
cmps
sub
and
mov
aad
jge
pushf
lds
mov
pusha
pop
adc
in
sbb
mov
out
in
mov
ins
scas
aam
adc
cmp
mov
inc
jg
dec
call
in
mov
or
test
mov
je
adc
mov
enter
aam
mov
push
mov
cmps
jno
jecxz
sbb
pop
mov
dec
mov
test
test
pusha
or
sub
and
pop
dec
scas
xchg
lea
cmp
cmc
add
sbb
push
(bad)
lahf
inc
sbb
js
inc
xchg
add
adc
mov
mov
aad
pop
mov
push
addr16
push
and
dec
out
dec
mov
jno
in
rol
jg
rol
das
adc
mul
xor
std
jp
dec
push
lahf
repnz
mov
lahf
sbb
test
add
ficom
imul
test
gs
mov
xor
enter
mov
cmp
stc
inc
jmp
pop
inc
add
dec
bnd
xor
rcl
or
cdq
fsubr
cmc
popf
pop
test
out
aaa
jno
mov
hlt
and
xchg
sub
adc
lock
fbstp
add
and
call
enter
fisub
push
clc
stc
or
sbb
ins
movs
(bad)
push
and
(bad)
in
cmp
xchg
mov
idiv
mov
mov
sub
mov
add
pop
and
push
mov
dec
push
sbb
and
adc
retf
int
fstp
jnp
stos
lea
gs
rcl
aam
sbb
jno
jo
std
and
adc
and
retf
retf
add
(bad)
iret
sbb
test
lea
fnstcw
mov
or
cmps
out
sub
mov
rcl
icebp
cmp
(bad)
in
cmp
and
call
fistp
addr16
imul
dec
outs
imul
cwde
inc
mov
leave
nop
outs
bound
in
mov
addr16
adc
js
call
cmp
movs
arpl
xchg
dec
ror
pop
icebp
add
jnp
pop
jle
push
repz
shl
and
or
and
jp
push
mov
int3
push
pop
cmp
mov
mov
mov
pop
in
mov
lds
shl
adc
mov
jns
in
or
daa
mov
push
call
mov
jecxz
shr
outs
sbb
adc
hlt
repz
or
mul
inc
or
leave
jmp
jnp
into
int
mov
push
(bad)
xchg
arpl
popa
ja
jmp
aas
jg
jl
(bad)
shl
(bad)
in
iret
jns
imul
adc
cmps
sub
sahf
in
jb
cmp
mov
lock
cmc
je
push
mov
mov
shl
clc
test
cmp
movs
push
addr16
xchg
jo
push
mov
shl
inc
inc
mov
imul
mov
repz
je
unpckhps
out
jmp
jno
stc
xchg
fs
lods
sti
mov
fdivr
sub
dec
mov
das
imul
stos
icebp
sbb
inc
push
dec
daa
mov
popa
mov
cmp
add
stos
and
jmp
(bad)
xor
jns
out
das
pop
lock
jb
leave
arpl
mov
movs
sahf
call
hlt
or
ret
or
outs
(bad)
dec
fidiv
sbb
mov
mov
stos
pop
xchg
jo
aaa
inc
je
lock
pop
jmp
outs
jmp
mov
push
mov
(bad)
jl
stos
and
cmp
xchg
sub
popf
cmc
xor
xchg
mov
arpl
dec
shr
cmp
or
or
lea
or
adc
es
and
lea
lods
jbe
xor
loope
mov
lods
scas
cdq
push
push
addr16
in
ret
jno
inc
out
and
cdq
jne
adc
cmc
ja
cli
dec
mov
mov
sar
cmp
repz
dec
mov
cld
stos
shl
clc
pop
xchg
push
sbb
mov
lds
sub
jb
ret
lods
mov
xor
rcr
mov
ins
mov
shl
mov
addr16
mov
ror
outs
xor
fstp
fcomi
cmc
hlt
adc
mov
push
jbe
arpl
ins
dec
dec
fistp
test
xchg
in
fdivr
add
add
add
jecxz
pop
dec
icebp
cmp
mov
mov
mov
test
dec
push
std
mov
jmp
rcl
inc
rcl
sub
cs
or
lods
jle
imul
shl
sbb
outs
ret
daa
fwait
je
sub
mov
sub
push
aam
mov
mov
sub
and
movs
pop
js
pop
push
stos
fdivr
xchg
pop
retf
xchg
jle
call
jmp
clc
adc
popf
and
sbb
ja
hlt
sbb
and
sbb
jo
lods
jno
(bad)
dec
stc
inc
adc
fist
mov
arpl
scas
add
adc
cdq
sub
(bad)
enter
sub
ret
loopne
imul
mov
loop
mov
sub
dec
add
pop
repz
sub
pop
pop
push
mov
push
push
mov
jmp
sub
xor
movs
out
out
loope
hlt
in
and
in
pop
adc
jl
mov
jge
retf
pop
and
pop
xlat
ins
js
push
pop
mul
jp
pop
lea
mov
xor
mov
pop
gs
or
out
cmp
cli
sbb
fdivr
retf
dec
xchg
gs
ja
nop
xchg
nop
jnp
out
cmps
aad
pop
scas
adc
add
clc
mov
lahf
scas
and
sahf
push
xor
add
retf
sub
out
adc
(bad)
fcom
arpl
sbb
(bad)
or
sbb
pop
xor
dec
lahf
in
out
adc
xchg
jle
jecxz
call
test
mov
rol
or
mov
pop
aas
mov
rcr
mov
outs
test
add
sbb
mov
xchg
ins
fwait
adc
cli
dec
dec
(bad)
cwde
(bad)
push
pop
in
ds
test
jmp
xor
mov
(bad)
rcr
add
ss
lea
pop
adc
pop
xchg
loop
jecxz
push
dec
cs
jne
inc
or
push
hlt
sub
or
cmps
test
cwde
in
das
mov
pop
sub
stc
mov
test
(bad)
fld
je
lea
outs
sub
adc
mov
pop
mov
mov
mov
mov
add
(bad)
daa
mov
dec
adc
repnz
add
push
loope
adc
fstp
cmp
cmp
(bad)
call
ss
xor
mov
and
sbb
cmp
xor
out
jge
or
imul
jb
call
mov
sahf
mov
jns
lock
mov
sbb
(bad)
jnp
adc
mov
shl
jmp
sahf
data16
sub
and
push
int
movs
sbb
xor
ins
imul
scas
cli
add
dec
xchg
mov
inc
cdq
cmp
das
sti
retf
in
adc
nop
scas
movs
xchg
and
mov
add
sub
xor
data16
iret
gs
scas
or
jmp
xchg
fdivr
mov
nop
jne
sub
and
rcl
jmp
cs
int3
xor
cmps
aam
mov
movs
mov
scas
(bad)
movs
lods
pop
dec
pop
sbb
movs
or
mov
inc
or
add
xchg
repnz
pop
iret
mov
cmp
xchg
jno
sub
sub
movs
call
fimul
jp
cmps
arpl
mov
pop
mov
cmp
mov
outs
or
loopne
xor
jg
dec
and
pop
mov
(bad)
fst
mov
mov
xchg
scas
fdivr
add
adc
lods
cmps
mov
arpl
test
ins
idiv
dec
push
xchg
xor
sbb
shr
jno
dec
(bad)
pop
xchg
cs
and
xchg
and
pop
fist
scas
push
call
add
cld
xchg
(bad)
cmp
adc
lods
cmps
pop
loopne
pop
mov
mov
fwait
mov
pop
xchg
out
fstp
data16
pop
mov
aaa
inc
add
and
cdq
stc
fidivr
test
data16
sbb
dec
sbb
xor
jp
in
sahf
sbb
cmps
pop
jmp
mov
out
pop
movs
cwde
mov
std
mov
out
jl
jle
(bad)
cmp
mov
sub
cmc
(bad)
mov
ret
pushf
sbb
scas
ret
mov
jmp
push
clc
cmps
fst
imul
jge
(bad)
mov
fnstsw
repnz
pop
fisttp
add
sub
inc
test
pusha
and
cmp
cmps
in
nop
cdq
out
outs
fnsave
ret
ss
out
retf
pop
jns
xor
xchg
sub
xchg
inc
xor
push
pushf
lods
xor
stos
fwait
sub
and
mov
cmp
(bad)
shl
jmp
dec
sub
bound
(bad)
jle
and
popf
repz
pop
sbb
aaa
ret
sbb
pop
cmp
ret
pop
lods
sbb
adc
adc
mov
mov
fs
xor
retf
push
cwde
ds
fnstenv
loopne
inc
jns
mov
jno
pushf
mov
mov
xchg
stos
das
lds
xchg
xor
nop
xor
pop
pop
cli
dec
mov
retf
mov
jne
lahf
mov
ret
clc
pop
mov
inc
neg
mov
jns
enter
add
into
repz
sahf
dec
mov
pop
mov
xchg
loope
stc
sbb
call
mov
repnz
push
addr16
jecxz
jmp
add
loope
push
inc
jno
cmp
mov
cli
ficom
mov
hlt
movs
pop
mov
stos
push
scas
fnsave
(bad)
stos
fidiv
pusha
pushf
dec
(bad)
cmp
call
mov
nop
(bad)
in
es
or
push
stc
xor
push
mov
ficom
lods
outs
mov
es
jns
int3
pop
dec
shl
iret
loopne
rcl
fadd
repnz
mov
mov
cld
pushf
dec
adc
jnp
or
fcomp
(bad)
mov
sub
aas
cmp
ins
mov
pop
ror
cmp
ins
cmp
jnp
adc
mov
sub
adc
loopne
lods
gs
inc
loop
sahf
sub
xchg
dec
jno
jo
sar
outs
retf
push
neg
dec
pop
xchg
xchg
or
outs
retf
push
(bad)
fs
retf
pop
add
sub
ins
jp
shl
fsub
xchg
out
or
call
in
aas
jno
sub
cli
fisttp
xchg
mov
and
mov
iret
ss
and
push
call
push
mov
sahf
shr
mov
mov
bound
mov
cmc
or
mov
cmps
gs
mov
cmps
lods
pop
jo
mov
jl
mov
out
ficom
or
lock
call
inc
pop
mov
sub
jmp
inc
and
das
cmp
cli
xchg
fsubr
and
xor
iret
or
pop
jl
adc
xchg
dec
setb
icebp
mov
in
jecxz
adc
ret
jno
ins
popa
lds
fiadd
push
jns
add
sub
pop
push
outs
(bad)
rcr
mov
push
hlt
sahf
add
add
fs
dec
push
mov
xchg
xchg
inc
mov
lods
idiv
fdivp
mov
mov
sbb
mov
outs
and
jo
inc
mov
jns
ret
stos
xchg
mov
aam
adc
push
mov
out
aad
mov
inc
rol
mov
out
jns
push
pushf
xchg
enter
xlat
add
scas
and
jbe
jmp
xchg
pop
mov
pop
stc
push
leave
sub
xchg
(bad)
jb
out
push
sbb
push
adc
std
lods
out
sbb
jns
cmps
ret
mov
mov
jmp
xor
in
or
mov
in
gs
retf
clc
hlt
das
cmp
mov
jb
sbb
jecxz
push
(bad)
mov
scas
loope
retf
adc
push
sbb
ds
sbb
push
dec
icebp
adc
lock
xor
xchg
fldcw
lds
xor
inc
xlat
movs
ror
mov
cmps
loope
pop
in
xor
aas
inc
cmp
or
sti
(bad)
or
push
add
push
fcmove
push
push
push
lock
arpl
mov
sbb
mov
lea
pop
repnz
call
imul
aam
imul
outs
mov
cmp
das
clc
sub
jae
stos
lods
aas
mov
je
popa
dec
div
adc
je
hlt
scas
loope
and
mov
ror
mov
adc
sub
jb
enter
inc
ins
jge
pusha
(bad)
mov
lods
pushf
imul
fisub
jl
push
ficomp
mov
push
dec
(bad)
mov
leave
dec
pop
mov
or
fwait
clc
mov
mov
adc
xor
js
call
inc
and
popw
dec
add
cld
pushf
pop
es
std
shr
adc
cmp
pop
ja
pop
adc
push
push
(bad)
aas
xlat
xchg
xchg
mov
call
inc
inc
xlat
add
sub
test
mov
enter
int
xchg
inc
out
xchg
mov
jne
xor
dec
out
ficomp
enter
(bad)
retf
push
ror
and
mov
and
mov
stos
fstp
(bad)
out
jne
(bad)
retf
sub
lods
(bad)
ret
sbb
jmp
in
enter
bound
jmp
and
push
aaa
pop
push
sub
sahf
clc
and
and
sahf
xchg
fs
xor
cli
aam
push
add
push
adc
adc
test
adc
sbb
adc
test
popa
cs
jne
repnz
and
xor
xchg
jnp
xor
movs
mov
adc
mov
pop
lea
in
or
int
mov
dec
stos
addr16
popa
adc
ja
cmc
push
fist
push
inc
jge
mov
xchg
pop
jb
adc
cli
rol
sub
(bad)
fwait
pop
fdivr
sub
pop
xchg
and
xchg
arpl
bound
repnz
dec
dec
xor
jbe
xor
fcom
and
mov
je
js
cs
pop
and
pop
rcr
js
(bad)
jno
mov
pop
in
cmc
xor
inc
xor
sub
ins
add
pop
das
retf
xor
adc
fnsave
sbb
cmp
jno
inc
or
in
cmp
imul
leave
call
cmp
hlt
aas
lahf
stos
test
fldcw
mov
mov
push
inc
adc
cmps
cmp
rcl
aam
adc
inc
xchg
sbb
ds
fstp
cs
xchg
xlat
in
or
xor
mov
lods
xchg
test
jle
sub
rcr
mov
and
xor
pop
or
mov
or
out
pop
pop
movs
pop
sbb
pop
das
push
fldcw
shl
xchg
dec
inc
xor
jbe
scas
jg
and
mov
pop
xchg
or
dec
rcl
aam
pushf
cmps
in
jl
(bad)
mov
and
adc
das
(bad)
sbb
dec
sub
sub
(bad)
jo
push
aaa
xchg
xor
cmps
pushf
(bad)
call
ss
push
add
pop
enter
sar
int
mov
outs
fidivr
and
xchg
jg
in
imul
leave
mov
push
cmp
ficomp
push
(bad)
fs
add
dec
pop
jle
arpl
stos
test
pushf
cmp
gs
fs
es
(bad)
call
mov
mov
retf
fadd
and
ror
mov
pop
mov
push
enter
(bad)
push
cmps
mov
cmp
push
pop
shl
into
xor
in
int
inc
repz
sbb
mov
cdq
mov
cld
fld
pop
xchg
push
fdivr
cmps
pusha
xchg
dec
adc
ins
(bad)
xor
cld
inc
sbb
mov
inc
js
mov
shl
adc
retf
mov
push
arpl
and
adc
sub
loopne
sbb
jmp
xor
xchg
jae
pop
sti
imul
or
test
xchg
mov
jno
cmp
or
loope
sbb
leave
or
mov
ja
add
in
lss
fcmovbe
retf
or
jl
pop
mov
int3
mov
mov
or
lock
adc
int3
and
mov
sbb
int
ss
repnz
push
pop
sti
cmp
mov
jno
dec
movs
nop
shl
jecxz
mov
shl
pop
xchg
int3
icebp
mov
jg
sub
fisttp
mov
mov
stos
(bad)
scas
mov
and
clc
repnz
fdivr
sub
jge
out
adc
mov
rcl
out
icebp
sbb
sub
sbb
cmps
jne
cmc
push
jo
jecxz
stc
pusha
ficomp
leave
dec
mov
pop
les
popf
jb
repnz
or
xor
or
adc
and
pcmpeqb
push
stos
or
ror
test
jmp
xchg
sbb
js
imul
arpl
in
stc
push
adc
and
xor
ja
dec
mov
les
or
adc
loope
stc
add
and
movs
mov
out
and
pop
jle
sub
int
loope
sub
out
fisttp
xor
mov
cmp
mov
push
jae
ret
push
(bad)
stc
aad
inc
sub
shr
and
movs
jno
push
jle
jbe
push
std
mov
sbb
dec
in
xor
lods
test
ret
icebp
ss
mov
mov
pop
jmp
xchg
jmp
retf
gs
sub
sahf
sbb
push
xchg
out
in
adc
and
sub
data16
xchg
pop
cli
push
div
ror
movs
jge
add
ins
scas
in
into
mov
lock
mov
imul
mov
enter
bound
jnp
xor
mov
sbb
lock
cmp
jp
jb
loope
repnz
adc
movs
ret
imul
inc
retf
std
in
stc
push
jle
outs
ret
stos
inc
iret
mov
kortestb
fwait
hlt
test
dec
nop
out
les
fist
push
mov
mov
jnp
jo
jg
loop
fsubr
adc
xor
std
xor
xchg
pop
leave
popa
lods
push
cs
nop
xchg
lods
cld
loope
(bad)
int3
or
xchg
ins
jge
je
or
push
dec
test
cmps
adc
fidivr
test
mov
aam
dec
mov
pop
(bad)
dec
mul
push
test
pop
ja
adc
pop
inc
movs
call
cld
sbb
lods
cmp
xchg
sbb
and
into
add
sub
pop
scas
leave
fistp
mov
dec
enter
ins
ins
pop
aaa
or
popf
mov
inc
mov
enter
jno
in
stc
rcr
mov
dec
push
add
adc
inc
(bad)
xchg
in
int3
or
test
or
push
and
jp
mov
xor
ret
push
mov
ja
fld
push
xchg
jmp
lods
lods
shl
cli
add
jmp
dec
iret
add
int
adc
xlat
fst
xchg
leave
jno
mov
call
adc
inc
jno
push
shl
xor
and
cdq
jmp
loope
cmp
pop
xor
cmp
outs
and
pop
inc
fwait
cmc
cmp
dec
mov
mov
retf
scas
ss
test
mov
into
sbb
xor
stos
outs
mov
std
loop
xor
popf
jae
push
fistp
fs
sub
stos
and
sbb
push
or
test
mov
in
cld
je
in
inc
cwde
jmp
lea
retf
sbb
jnp
cli
scas
pop
adc
lods
pusha
aaa
mov
and
jo
cmp
jno
fwait
xchg
call
mov
cmp
and
fld
cwde
push
cmp
outs
inc
rol
ror
(bad)
gs
ss
pop
mov
je
(bad)
mov
push
lock
fsubr
adc
into
(bad)
sbb
and
xchg
jl
push
mov
ins
cmp
xchg
rol
xchg
sti
stc
out
inc
mov
ficom
adc
dec
ret
cs
mov
outs
and
sahf
cmp
pop
xor
call
and
fisttp
imul
adc
or
xchg
repnz
outs
xchg
inc
jg
inc
loope
jns
arpl
jns
imul
in
outs
ds
je
xor
int3
push
dec
fcmovnbe
lods
add
jno
sub
adc
pushf
ja
inc
dec
push
stc
(bad)
jmp
das
mov
jle
xor
ret
or
and
cmc
jle
add
fcomp
jp
repz
ret
or
lods
add
fstp
sar
mov
ja
dec
mov
cli
inc
popa
xor
dec
aas
fisub
and
in
addr16
lods
pop
or
repz
(bad)
or
mov
neg
ja
pop
mov
jo
enter
mov
hlt
jnp
xchg
jmp
jo
mov
icebp
add
loop
pop
cmc
jge
rcl
shr
imul
inc
out
cmps
out
inc
cmp
out
add
lea
push
add
outs
in
and
and
add
jp
aaa
mov
leave
sub
test
dec
movs
sbb
(bad)
jno
dec
mov
retf
sbb
sub
nop
repnz
call
stos
pop
xor
push
cmp
mov
ret
aas
mov
shl
inc
sbb
cmc
jg
pop
jbe
and
movs
cmp
or
test
pop
or
cmp
mov
and
sbb
xor
mov
aad
pusha
les
cmps
mov
adc
inc
inc
mov
dec
sahf
call
xchg
dec
test
dec
jmp
cmp
inc
xor
ds
out
mov
les
and
shr
xor
cmps
lds
push
pushf
xchg
dec
test
sub
(bad)
shl
mov
ret
or
cld
xor
inc
jne
push
jecxz
adc
sbb
and
cmp
cwde
mov
test
xchg
xor
cli
aam
push
sahf
xlat
stos
mov
cwde
mov
shl
adc
push
jne
pop
lods
ds
push
(bad)
dec
shl
imul
sbb
xchg
push
ss
sti
lds
call
mov
ret
fistp
shr
shl
mov
or
mov
fmul
movs
xchg
xor
inc
jmp
xor
jle
xor
pop
cmp
call
jbe
cld
jl
mov
jnp
pop
pop
test
in
popf
out
jecxz
fist
xor
mov
pushf
cmp
jp
cmp
jo
pop
loope
scas
jnp
mov
jae
add
pop
ss
jmp
mov
pop
daa
test
pop
xchg
dec
mov
sti
xchg
xchg
dec
loop
mov
add
(bad)
and
ret
icebp
dec
adc
aam
(bad)
sar
cdq
pushf
das
stc
fs
and
rcl
(bad)
inc
or
arpl
sahf
jne
xchg
mov
xor
fisubr
popf
pop
xchg
xor
sbb
ja
mov
out
sbb
into
add
push
and
adc
xchg
sbb
lds
(bad)
aaa
pop
ds
mov
test
test
sub
pop
pop
xor
es
stc
xchg
pop
mov
clc
push
mov
push
push
cmp
jns
dec
and
popa
mov
sbb
sbb
inc
scas
mov
mov
fistp
arpl
or
xchg
mov
call
fdivr
fwait
xchg
call
jno
pop
and
lahf
ss
xlat
aaa
sbb
jns
mov
rcr
mov
leave
or
emms
hlt
(bad)
shl
adc
jbe
(bad)
arpl
pop
inc
out
out
nop
dec
cmps
movzx
xor
clc
test
in
cli
push
dec
inc
cmp
mov
xchg
(bad)
adc
out
fs
push
pop
add
leave
into
sbb
sbb
inc
ins
mov
aam
dec
out
push
pop
cmp
lods
mov
out
(bad)
pop
std
xor
or
ret
std
mov
mov
stos
jge
dec
sub
lods
dec
hlt
dec
loopne
mov
jo
mov
dec
xchg
adc
cmp
jmp
push
ss
repz
or
jp
int
xchg
sub
in
popf
repnz
sub
aaa
push
add
fiadd
in
adc
in
cmp
adc
jecxz
retf
sub
aaa
enter
mov
call
sub
aaa
into
inc
mov
xor
cld
push
xchg
enter
out
add
cmp
sub
fsubr
sub
ins
leave
adc
lods
pop
fcmove
call
sahf
sar
add
xor
into
lock
and
stos
push
cmc
fcmove
pop
adc
cmp
jge
mov
mov
addr16
push
mov
adc
mov
ins
pop
repnz
push
and
(bad)
cmp
loope
xchg
pop
jo
lods
cmp
cs
lods
lds
clc
jmp
mov
jmp
jns
loope
outs
sub
arpl
sub
jmp
jl
add
push
retf
adc
(bad)
push
mov
xor
xchg
push
and
dec
mov
add
or
pushf
fdiv
jmp
stos
jmp
cmc
enter
out
arpl
ror
or
int
sbb
sub
xor
retf
lea
add
(bad)
neg
rol
dec
js
mov
cld
cmp
test
xor
pop
outs
push
pusha
push
ss
dec
and
sbb
pop
cmc
out
cmp
mov
inc
(bad)
adc
pop
cmp
mov
push
push
mov
fs
sbb
rcl
cmps
jmp
inc
or
jl
jns
or
push
xchg
repnz
loope
shr
pop
lock
jmp
in
je
xor
inc
mov
adc
push
shl
add
mov
mov
stos
xor
xchg
je
call
pop
xor
fwait
jmp
adc
pop
aad
adc
in
cli
jae
mov
cld
jbe
jmp
mov
inc
xor
add
push
sbb
hlt
xchg
hlt
ins
mov
call
or
mov
xchg
ss
(bad)
adc
add
not
or
adc
xchg
mov
push
call
push
ss
leave
xchg
xor
xchg
lods
cwde
add
cld
add
nop
mov
cmp
xor
std
and
out
mov
test
nop
sub
or
lock
test
ret
fist
jmp
fimul
shl
mov
pop
cli
movs
sbb
popa
jnp
and
mov
push
ds
xchg
scas
shl
aam
arpl
dec
iret
add
(bad)
mov
mov
stos
repz
adc
sub
(bad)
fdivr
scas
sub
test
retf
cmp
ficomp
sbb
jne
cmps
mov
or
enter
sub
dec
imul
das
fimul
cmps
fstp
addr16
pusha
jae
into
push
and
xor
xchg
repz
mov
jmp
mov
jl
fst
dec
iret
imul
fwait
and
adc
mov
mov
mov
jmp
xor
cld
adc
cli
sbb
sbb
sub
or
add
fdivr
pushf
fnsave
xlat
pop
inc
jo
mov
shl
or
jno
xor
movs
arpl
std
aam
bound
rcl
test
dec
jl
outs
ja
mov
jno
xor
mov
mov
cld
shl
dec
lods
mov
shl
mov
jmp
mov
cmp
ror
inc
xchg
jmp
xchg
and
xor
add
xor
cwde
(bad)
xlat
daa
shl
rcr
icebp
mov
stos
sbb
xor
xchg
(bad)
ins
div
push
in
popa
xor
mov
and
dec
and
aas
rcr
jle
xchg
mov
loopne
stc
xchg
sbb
loop
retf
pop
pusha
add
shl
inc
mov
shl
sbb
pusha
mov
imul
add
add
jecxz
mov
mov
aaa
sub
mov
fsub
push
dec
mov
(bad)
jmp
jne
pusha
lods
or
std
lods
fcom
dec
sub
cmps
fst
xchg
mov
fwait
mov
fld
sbb
pop
push
mov
mov
mov
sbb
out
pop
mov
push
(bad)
and
lahf
and
fistp
push
or
mov
mov
in
push
out
cmp
addr16
cli
mov
adc
jns
xor
test
cmc
push
repnz
push
mov
and
shl
scas
sahf
mov
int
es
loop
int3
fwait
adc
sbb
fnstenv
fsub
xor
push
cmps
cmps
xor
sub
hlt
scas
in
sahf
and
sbb
nop
ja
js
int3
fild
sub
pop
jecxz
movs
loope
(bad)
aam
push
in
mov
cld
lods
les
sbb
hlt
jmp
repnz
movs
sub
fsub
cmp
xlat
test
and
mov
int
js
outs
push
xor
std
lods
ja
retf
test
out
les
jg
fisub
and
out
stc
jmp
pop
fst
addr16
aaa
mov
int
test
mov
adc
dec
sbb
jmp
shl
xor
mov
and
out
(bad)
arpl
sbb
cmp
cdq
sbb
es
pop
jno
mov
sar
push
inc
lock
je
fsub
xchg
test
mov
add
ret
jge
sub
dec
jnp
fmul
inc
test
fdiv
push
sub
(bad)
fbld
fidivr
movs
jnp
sub
out
add
(bad)
sub
cmps
push
js
fdivr
mov
dec
popf
stos
push
popa
and
jge
sti
xor
hlt
xor
cmp
js
clc
xchg
push
mov
leave
xchg
rcl
lea
mov
fmul
jnp
and
imul
and
xchg
rcl
inc
jo
fsub
inc
jns
in
push
sub
push
in
sbb
jg
push
xor
cmp
jp
inc
and
xor
dec
popa
push
(bad)
mov
fwait
daa
cmp
stos
repz
jno
dec
call
repnz
stos
pop
js
xor
mov
push
iret
in
xor
dec
pop
ror
jle
xor
xchg
clc
popa
leave
fbstp
and
stc
lods
mov
sbb
fdivr
mul
icebp
mov
aam
push
aaa
add
dec
cdq
jg
iret
test
enter
cmp
pop
adc
jns
sbb
adc
in
mov
sbb
(bad)
aam
xchg
pop
or
sbb
sbb
out
leave
inc
push
xchg
inc
retf
xor
adc
aam
inc
rcl
mov
icebp
pushf
pop
dec
pop
jp
retf
xlat
addr16
cmp
and
scas
cdq
push
pop
jecxz
loop
dec
fs
push
in
(bad)
push
cmps
cmp
call
ror
add
jl
loope
popa
call
mov
push
out
sbb
popa
inc
(bad)
and
xchg
and
leave
ja
in
mov
lahf
pop
shrd
int3
add
pop
cmc
push
(bad)
jnp
dec
xor
mov
sbb
adc
aaa
pop
cmp
pop
lods
xchg
xor
xor
jg
scas
stos
push
inc
jge
xor
nop
inc
(bad)
lahf
adc
jle
pop
mov
les
dec
mov
inc
ret
or
shl
fmul
jns
fldcw
pop
sub
loop
fisub
add
add
out
sub
or
retf
dec
lds
xchg
icebp
push
xchg
out
add
je
mul
mov
xor
scas
adc
sub
inc
xor
inc
mov
ss
pop
adc
fst
test
add
imul
shl
clc
shl
and
jns
mov
mov
cmps
jb
xchg
xor
push
adc
fnstcw
test
jecxz
inc
sub
inc
cs
stos
xchg
xor
and
lock
fimul
mov
inc
pop
repz
mov
stos
jmp
loope
dec
ja
or
sbb
sbb
aad
fst
jmp
retf
fist
stos
adc
adc
cmp
call
enter
dec
jmp
mov
mov
pop
sub
scas
inc
aas
jne
std
(bad)
repz
sbb
pop
nop
push
popf
mov
mov
jbe
shl
paddd
out
mov
mov
adc
ins
inc
sub
test
fcomp
sar
xor
mov
icebp
adc
and
and
mov
fst
cmp
mov
dec
(bad)
sbb
lea
jnp
xor
adc
and
ret
sti
sbb
xchg
mov
sub
sti
pop
gs
je
push
daa
push
inc
jo
push
sbb
test
inc
sti
jmp
jp
movs
adc
retf
scas
gs
outs
mov
add
jae
adc
add
adc
loop
outs
call
xchg
mov
xchg
stc
lds
jb
(bad)
(bad)
dec
xor
mov
stos
gs
pusha
outs
dec
and
pop
jno
or
lods
fldcw
xchg
ins
xlat
sub
add
dec
xchg
cmps
cmp
jg
jne
lock
or
mov
(bad)
jmp
fmul
add
jns
bound
jne
mul
cs
inc
or
mov
adc
je
dec
and
rcr
jne
xchg
cmp
add
stc
pop
stc
mov
push
cmc
adc
xor
mov
cdq
clc
fcmovu
das
and
mov
xor
sbb
push
and
xor
xchg
push
xchg
sbb
mov
imul
out
mov
cmc
mov
mov
(bad)
pusha
inc
daa
test
pop
sbb
and
mov
and
cmc
movs
repnz
sbb
outs
ret
adc
jno
adc
mov
mov
inc
jnp
das
loope
inc
sub
js
movs
mov
inc
sub
dec
push
push
push
rol
(bad)
adc
xchg
enter
push
mov
mov
mov
jmp
out
jne
xlat
cwde
xchg
movs
push
adc
inc
(bad)
rcl
repz
xchg
fcmovb
arpl
in
ins
dec
aaa
repz
push
sbb
jb
or
(bad)
adc
aas
stos
and
out
fbld
iret
jo
cli
jg
gs
shr
addr16
xchg
jmp
inc
cmps
sbb
repnz
aad
je
jnp
sti
pop
nop
xor
inc
sti
call
fcmovbe
add
outs
xchg
cmp
leave
or
xchg
es
jmp
cmp
mov
popf
retf
call
das
into
and
xor
pushf
lea
inc
or
mov
leave
in
dec
cmp
push
adc
seto
jmp
(bad)
dec
lahf
mov
push
sub
fistp
mov
and
jns
push
pop
xchg
enter
dec
push
mov
int3
jecxz
out
jg
test
or
pop
(bad)
push
xor
shr
cmp
mov
(bad)
out
mov
push
shr
pop
adc
popf
mov
adc
imul
and
sar
push
icebp
push
push
in
sbb
xchg
pop
out
mov
lods
xchg
je
imul
fimul
fcom
cdq
jne
retf
mov
fild
inc
dec
fbld
jg
dec
aad
or
retf
leave
in
cmp
nop
gs
es
add
push
sti
(bad)
xor
lock
ins
stos
pop
hlt
jl
int
scas
call
arpl
pop
xor
push
test
aam
std
cdq
int3
cmp
arpl
test
enter
mov
xchg
add
xor
(bad)
jecxz
inc
fwait
rol
int
rol
mov
rcl
mov
clc
mov
test
mov
mov
xchg
test
cmps
xchg
mov
sar
jne
pop
xor
xor
push
repnz
ficomp
sub
les
cli
iret
jge
in
or
not
movs
daa
in
outs
popa
inc
xchg
ror
call
out
(bad)
adc
xor
jmp
or
xchg
mov
lds
dec
pop
pop
and
cs
ffreep
stc
mov
mov
dec
xchg
enter
xor
mov
retf
call
inc
iret
daa
not
dec
jb
cmp
fisttp
push
bound
(bad)
jno
xchg
jo
xchg
int3
in
sbb
or
xor
xor
mov
xchg
movs
sub
repz
jo
stos
stc
jnp
mov
add
cmp
call
and
ficom
inc
retf
push
retf
add
jp
popa
mov
mov
pop
iret
sub
sub
leave
mov
mov
add
cmp
sbb
jecxz
call
mul
add
pop
xor
inc
ins
sub
cmp
pop
push
xor
mov
jb
mov
fidivr
push
call
pop
sahf
stos
jo
retf
or
in
loopne
jbe
mov
call
inc
xchg
jge
lock
mov
pop
sub
ret
(bad)
loop
in
sbb
out
dec
push
xor
cmp
mov
mov
and
cli
inc
push
and
xor
cdq
cmps
scas
je
inc
xchg
in
xlat
fist
lea
xchg
arpl
daa
popa
(bad)
and
jl
push
mov
dec
cmp
xor
adc
pop
(bad)
out
push
jg
xchg
movs
inc
xor
daa
pop
inc
outs
sub
pusha
or
loopne
hlt
jle
lahf
and
sub
mov
dec
gs
rol
popf
dec
adc
shl
sub
and
xor
faddp
les
ret
lods
mov
stos
aam
mov
mov
in
cmps
jnp
lods
fbld
jbe
(bad)
imul
sub
xor
mov
retf
(bad)
adc
clc
fdiv
fisttp
or
push
cmp
(bad)
add
adc
(bad)
cmp
jnp
cli
fidivr
and
cld
cmp
in
add
and
pop
rol
add
das
loope
adc
add
mov
xchg
cdq
mov
adc
and
xchg
xchg
call
arpl
mov
sub
xchg
add
imul
jmp
mov
xchg
or
jmp
(bad)
mov
cmps
pop
jbe
mov
test
lock
repz
mov
mov
shl
test
call
ficom
loopne
repnz
adc
loopne
xchg
mov
lea
add
jg
inc
jp
mov
rcr
int
jmp
arpl
cmp
pop
int
dec
inc
sbb
push
mov
mov
or
fsub
jg
ror
loopne
pushf
xor
rol
loop
sbb
fild
mov
mov
mov
sub
(bad)
call
xchg
inc
push
xor
xor
out
jle
in
fmul
mov
add
xor
sub
push
xchg
mov
jge
jmp
fsubr
mov
out
add
pop
and
fist
out
enter
fisub
mov
js
mov
lods
mov
es
es
jl
push
add
mov
clc
jnp
jg
call
pop
popa
dec
popf
cwde
cmp
retf
arpl
mov
jae
push
out
lahf
adc
inc
cmp
sti
test
cmp
enter
imul
push
adc
push
fwait
mov
sbb
push
cmc
daa
iret
je
in
icebp
xlat
int
inc
dec
inc
push
js
in
outs
sub
in
mov
dec
cld
mov
int3
xor
sub
pop
outs
fcom
push
add
xchg
and
add
xor
call
sbb
inc
adc
pop
jmp
mov
rcr
adc
pushf
fild
scas
push
or
ss
adc
mov
or
fidiv
stos
in
mov
cli
push
sbb
push
mov
push
and
xchg
ret
out
xor
and
mov
stc
sub
jbe
mov
movs
pop
repz
ret
inc
mov
out
fldenv
hlt
ret
mov
pop
mov
test
inc
outs
arpl
js
inc
(bad)
int3
dec
mov
xchg
into
nop
fwait
dec
scas
inc
push
add
push
cs
les
rcr
xchg
xor
ins
inc
xchg
stc
les
adc
push
xchg
add
add
inc
xor
lock
adc
mov
dec
movs
rol
addr16
scas
push
and
mov
loopne
leave
loope
dec
scas
lea
outs
les
cmp
jb
inc
out
inc
(bad)
adc
inc
xlat
dec
shl
ja
pop
nop
nop
aad
dec
js
aad
out
push
rsqrtps
out
(bad)
pop
pop
mov
mov
dec
push
in
mov
jl
jo
repnz
mov
(bad)
cdq
xor
cmp
cmp
leave
add
frstor
and
cmps
ficom
retf
and
and
jecxz
push
xlat
xchg
mov
mov
sub
xchg
outs
scas
or
sub
hlt
and
cmp
fdivr
enter
cmp
pop
call
mov
jnp
popa
nop
add
push
aad
cmp
dec
mov
ret
iret
bound
adc
cmps
mov
add
test
call
mov
(bad)
aad
ja
popf
adc
outs
and
int
arpl
sub
lea
mov
mov
lods
xor
or
adc
jecxz
dec
es
fs
bnd
sbb
add
pop
or
(bad)
mov
jecxz
mov
add
daa
mov
xchg
std
push
mov
call
xor
fst
sub
mov
(bad)
fsubr
jae
inc
add
sbb
or
pusha
mov
mov
or
(bad)
std
fsubr
out
fwait
mov
adc
cmps
jb
test
fst
inc
addr16
jp
leave
mov
xor
call
lahf
adc
add
inc
in
push
call
mov
(bad)
std
lods
stc
ret
bound
rcl
inc
and
or
hlt
int
jmp
sbb
nop
loope
ins
gs
pop
idiv
pop
mov
ficomp
inc
dec
or
mov
pop
shl
add
inc
shl
mov
dec
cmp
iret
stos
mov
cli
inc
xor
lods
fucomi
sbb
imul
xor
add
mov
call
cld
in
xor
vdivps
daa
cld
cdq
out
pop
mov
add
jnp
ror
sub
inc
mov
push
pop
(bad)
jecxz
test
dec
mov
cli
scas
cmp
shl
or
inc
jae
pop
mov
xor
imul
les
cmp
sbb
xchg
pop
in
and
push
addr16
pop
xchg
xor
loop
pop
inc
adc
pop
push
lahf
test
push
popf
cmc
std
mov
and
ja
out
sub
jge
mov
add
ss
push
inc
pusha
and
mov
in
push
test
retf
jl
mov
popf
int3
mov
mov
test
enter
jge
adc
ins
push
scas
arpl
or
in
or
fwait
rcr
ja
int
pop
pop
ret
ret
ins
xchg
pop
xor
jle
fbstp
push
cmp
mov
leave
in
fimul
repnz
fwait
cmp
xchg
ds
(bad)
mov
ins
out
inc
mov
xor
jbe
in
xchg
sbb
cs
mov
(bad)
ins
inc
out
lds
jnp
imul
cmp
inc
cmps
adc
jecxz
out
clc
cdq
mov
adc
ficom
push
rol
aad
mov
xor
or
mov
pop
and
xchg
repz
loop
enter
jp
aad
sbb
(bad)
xchg
cmp
loope
xchg
dec
pop
add
iret
repz
ss
mov
cmc
hlt
gs
pop
pop
xor
(bad)
xor
xchg
mov
push
retf
fwait
imul
lock
jns
push
mov
std
imul
cdq
or
mov
loopne
jne
sub
pop
test
arpl
sbb
je
mov
je
xlat
popf
add
xor
jb
add
int3
cmp
xor
adc
sbb
cmc
in
das
or
xor
mov
inc
mov
mov
xchg
or
sbb
cmp
xor
scas
sbb
and
push
enter
add
dec
lea
sub
stos
into
popa
pop
fistp
rol
(bad)
sahf
mov
xor
mov
pop
jns
pop
xchg
fimul
jnp
add
lods
fs
add
retf
sbb
arpl
inc
icebp
hlt
aad
in
fs
add
addr16
inc
rol
mov
jne
sub
push
arpl
xchg
outs
repnz
and
stos
cdq
jb
push
fistp
fisub
jns
jbe
test
or
add
mov
inc
dec
(bad)
or
cmps
push
ret
or
xlat
in
aam
push
cmps
in
inc
leave
push
fistp
pop
cmp
dec
aaa
test
pusha
retf
fst
(bad)
scas
or
jb
sbb
out
mov
wrmsr
sbb
test
stc
(bad)
xchg
and
lahf
mov
jl
loope
hlt
sahf
out
pop
mov
pop
inc
lea
add
add
cs
inc
cmp
dec
cmp
mov
sbb
mov
inc
pop
xor
mov
and
adc
int
add
push
mov
mov
inc
scas
cmps
jmp
pop
ds
or
popa
mov
repz
(bad)
pop
mov
enter
loopne
push
or
inc
out
inc
sar
inc
sub
adc
out
lods
in
jle
cmp
sub
pop
sub
pop
test
mov
add
les
int
xchg
pop
sbb
leave
inc
loopne
out
ss
lds
call
lods
push
jno
sahf
sbb
mov
xor
mov
jo
dec
arpl
daa
hlt
xchg
dec
mov
or
dec
xchg
jmp
jbe
(bad)
xchg
stc
lock
inc
jmp
add
in
mov
xor
push
out
pop
jns
jl
sub
xchg
xchg
jmp
ins
dec
inc
mov
xchg
xor
and
in
or
jae
in
jecxz
push
mov
mov
mov
aam
sbb
lods
mov
mov
cld
jb
xchg
aaa
mov
add
addr16
mov
cmp
pop
cmps
xchg
outs
ss
and
fcmovb
into
cmp
add
and
ror
mov
mov
ret
mov
push
into
sub
lahf
jge
xchg
mov
pop
test
push
pop
ret
ficomp
inc
pop
push
inc
mov
xor
jl
cmp
dec
repnz
lock
mov
mov
pop
aaa
shr
push
ds
mov
sub
cs
adc
mov
dec
or
aaa
mov
in
inc
push
scas
add
jne
xchg
or
and
sub
arpl
arpl
mov
cld
retf
mov
in
jno
jle
pop
xlat
sbb
or
data16
mov
lock
mov
dec
dec
push
cmp
push
xor
push
mov
inc
sbb
mov
(bad)
cmp
shl
cli
cmp
sbb
pop
adc
push
dec
adc
test
adc
gs
adc
aaa
push
jg
or
inc
dec
bound
fmul
mov
jl
mov
(bad)
(bad)
lock
inc
add
pop
in
faddp
jae
fcomip
sbb
imul
add
js
sub
fs
fnstenv
add
cmp
sbb
outs
xor
fisttp
(bad)
idiv
xchg
inc
xor
push
retf
cmp
repz
xor
cld
dec
retf
cmp
stos
pop
mov
mov
push
xchg
scas
inc
inc
cli
lds
jmp
(bad)
dec
jno
call
popf
hlt
push
aaa
int
into
call
aad
stos
pop
xchg
xor
add
sahf
dec
cmp
sbb
sub
mov
mov
(bad)
imul
sbb
ss
ret
call
and
(bad)
jbe
(bad)
mov
bound
jmp
mov
inc
jno
mov
aas
lock
add
out
jmp
jo
xchg
cmp
or
bound
mov
ror
test
mov
popf
shl
pop
add
inc
repz
push
cmp
inc
pop
mov
sbb
mov
xor
inc
dec
jae
sbb
lods
or
mov
xor
dec
sub
mov
jp
mov
cmc
dec
loopne
and
mov
rcr
loopne
es
ds
pop
popa
repz
inc
sti
mov
mov
dec
mov
dec
xor
mov
xchg
int3
loope
pusha
retf
mov
sub
shr
lahf
or
mov
arpl
sbb
out
and
int3
push
xchg
repz
jae
iret
stos
jg
pushf
sbb
mov
mov
mov
lods
dec
call
lea
mov
ins
ficom
inc
retf
(bad)
adc
pop
aas
repnz
retf
fisubr
int3
test
fcmovnbe
ret
scas
ss
jb
stc
dec
sub
push
(bad)
push
adc
je
ror
mov
jecxz
cmp
and
jl
adc
pop
jno
les
add
je
mov
pusha
and
xchg
test
popa
aaa
xchg
add
dec
adc
mov
cld
mov
cmc
bound
push
sub
sub
clc
push
shl
test
dec
mov
jbe
or
sub
cmp
les
push
or
addr16
daa
test
leave
leave
add
and
inc
sub
mov
repnz
cmp
aaa
jg
jg
jge
ficom
push
jl
outs
repnz
das
jo
and
jbe
mov
outs
dec
sahf
pop
pop
(bad)
mov
sti
push
repnz
pop
adc
mov
jb
test
xchg
inc
inc
pop
and
arpl
xchg
mov
cmp
sub
jnp
test
jmp
jo
out
mov
mov
or
mov
mov
aad
jns
pop
fwait
out
inc
ins
dec
jle
stos
dec
jae
cmp
and
mov
pop
test
jns
inc
imul
pop
push
push
adc
jno
bound
pop
sbb
das
inc
xchg
dec
sub
push
aas
xor
into
in
int3
dec
cmp
(bad)
in
aaa
mov
es
add
mov
dec
bound
addr16
jnp
adc
xchg
jno
sub
aad
icebp
dec
mov
fscale
mov
xor
mov
(bad)
(bad)
push
daa
(bad)
cmp
inc
inc
adc
push
push
push
lods
xor
mov
in
call
faddp
aas
mov
jmp
adc
in
mov
jo
fiadd
ins
imul
cmp
jl
ficom
dec
adc
sbb
add
stos
movs
jg
cwde
in
xor
mov
mov
lds
in
in
imul
pop
and
inc
popf
mov
dec
xchg
adc
and
(bad)
push
(bad)
jne
mov
movs
call
movs
mov
fsub
jno
sbb
or
enter
dec
inc
cmp
mov
inc
sub
sbb
out
mov
ret
jmp
mov
sbb
sub
xor
(bad)
jno
out
add
es
cld
stos
mov
dec
pop
stos
sub
dec
xor
xor
gs
idiv
sbb
dec
das
(bad)
jle
pushf
clc
push
xchg
loop
dec
jp
cmp
popf
mov
push
lods
data16
pop
movs
xchg
sar
mov
popf
popa
xor
jbe
bnd
cwde
or
xchg
mov
ret
inc
stos
cmp
inc
pop
push
sub
xor
or
dec
movs
mov
xor
icebp
add
fcom
cmp
in
repz
cmps
popa
popa
pushf
test
and
xor
dec
shl
mov
lock
(bad)
scas
push
mov
push
mov
(bad)
push
out
loopne
jno
xchg
out
mov
ja
fwait
stos
movs
cdq
ds
mov
jnp
mov
arpl
push
lods
mov
add
pop
dec
xchg
mov
push
jbe
mov
sbb
fwait
out
lock
into
xor
sub
mov
into
and
mov
ss
and
lods
and
cmp
dec
adc
int3
mov
enter
xor
shl
mov
ret
add
shl
pushf
enter
scas
movs
sti
ret
lds
rcr
cmc
movs
fdivr
ror
or
xchg
idiv
inc
push
rcl
retf
(bad)
add
mov
iret
inc
pusha
loopne
lods
push
sub
xor
inc
sahf
sbb
fs
cmc
xor
lods
dec
dec
loop
in
adc
jl
add
mov
(bad)
push
sbb
or
xlat
adc
push
out
cwde
mov
lods
mov
add
push
out
fstp
sub
enter
aad
mov
fbstp
cmps
(bad)
or
popf
stc
adc
or
pop
mov
nop
cmp
sub
pop
(bad)
fldenv
push
and
jp
lods
mov
pop
ja
shl
add
mov
push
mov
jge
call
retf
push
add
sub
movs
pop
sub
and
adc
fisttp
pop
sub
xor
dec
aaa
aad
pop
mov
test
call
push
xchg
xchg
ss
mov
test
test
mov
push
or
inc
xchg
shl
inc
or
pushf
mov
xor
js
add
jecxz
jns
shl
mov
loop
fs
out
cmc
push
ret
mov
mov
xchg
leave
popa
pop
fs
jbe
sbb
push
jmp
push
jmp
jbe
out
mov
xchg
pop
dec
cmp
xchg
cmps
xchg
adc
sbb
jo
or
push
mov
xlat
test
jne
clc
pop
or
(bad)
push
sub
xchg
or
ja
sti
cld
cmp
mov
push
lods
test
pusha
std
pop
das
mov
retf
hlt
sub
mov
sbb
jle
xchg
add
add
les
aam
inc
adc
fs
mov
jmp
jle
xchg
(bad)
sub
or
clc
adc
inc
pop
int
loope
ret
sbb
ja
sbb
sar
push
jae
jne
mov
addr16
push
cmp
pop
sbb
pop
push
data16
neg
xor
and
in
adc
mov
cmp
(bad)
aad
cmps
rcr
xor
stc
repnz
cmp
or
inc
cld
es
xor
mov
arpl
into
imul
cmp
jno
xchg
fldenv
xchg
mov
xchg
arpl
cs
or
(bad)
mov
add
pop
jbe
xchg
sub
pop
mov
loopne
dec
jmp
pop
inc
stos
sbb
xor
lock
xchg
stos
jno
cmp
inc
in
je
rcl
test
pop
test
cmp
add
mov
sbb
or
sub
jp
sub
outs
scas
(bad)
aam
xchg
enter
add
lahf
int
ret
std
xchg
and
daa
in
dec
daa
jge
mov
jb
les
mov
pop
in
sbb
repnz
mov
addr16
mov
or
xchg
push
aaa
jne
inc
and
cmp
push
adc
scas
push
sbb
sbb
inc
mov
das
xchg
add
jne
movs
mov
jmp
arpl
jecxz
nop
push
fsubr
test
out
inc
jno
mov
jmp
sbb
or
mov
inc
and
mov
test
out
cmp
or
sub
div
and
out
mov
push
in
sub
pop
sbb
inc
xor
(bad)
pop
sub
nop
lock
fadd
retf
jle
jns
jl
or
nop
sub
std
mov
test
shr
popa
out
cli
fild
cdq
in
mov
xor
ins
movs
and
ffree
inc
shl
cmc
pop
ins
fs
(bad)
add
jmp
mov
inc
mov
add
out
mov
lds
or
data16
mov
lods
lds
dec
mov
mov
loop
mov
popf
jbe
cwde
sbb
addr16
cmp
into
pop
mov
lahf
outs
inc
pop
jmp
or
or
push
div
aaa
test
add
inc
xor
sub
fldcw
popa
out
push
les
add
into
add
pop
cmp
lahf
popf
repnz
icebp
imul
outs
ret
dec
out
shl
mov
dec
neg
dec
gs
ror
fcomi
sar
mov
push
imul
ja
add
add
adc
mov
das
retf
push
imul
jbe
jge
and
jno
or
mov
inc
sahf
cmp
xchg
mov
xchg
not
repnz
jecxz
call
ins
dec
or
pop
pusha
xchg
pop
outs
pop
aas
test
(bad)
push
push
rcl
dec
cmc
jecxz
cmp
mov
xchg
cld
stos
shl
fdiv
push
sub
in
ret
xchg
in
lea
cmps
fcom
ins
push
inc
sub
and
jb
loop
adc
mov
sub
test
dec
int
mov
fsubr
imul
pushf
jl
(bad)
cmc
jbe
call
inc
cmc
jl
push
mov
shr
pop
add
bound
xor
in
(bad)
outs
fidivr
add
or
adc
cs
push
mov
(bad)
ja
imul
jle
les
repnz
xor
jle
inc
cmps
add
inc
sub
cmp
addr16
mov
sbb
sbb
lods
in
js
test
add
sbb
ret
(bad)
ins
imul
sub
in
cwde
jl
leave
mov
push
fwait
stos
rcr
ficom
call
(bad)
repnz
adc
xchg
push
add
cli
jno
(bad)
aad
add
clc
neg
pop
out
iret
dec
scas
push
adc
lods
rcr
cwde
pop
mov
mov
mov
test
cmp
aas
cmc
mov
jge
sbb
and
cmp
jno
mov
je
sti
popa
push
adc
scas
retf
adc
sbb
je
mov
xor
jno
mov
pop
(bad)
fidiv
pop
std
icebp
fwait
out
mov
adc
push
add
mov
adc
aad
dec
cmps
dec
(bad)
mov
icebp
xchg
inc
loopne
push
lea
pop
push
mov
jnp
das
movs
mov
push
mov
fild
into
pop
popa
test
outs
push
push
outs
(bad)
add
mov
or
push
mul
sub
or
out
inc
mov
adc
popa
mov
arpl
mov
inc
mov
test
je
shl
mov
outs
daa
repz
mul
test
mov
mov
jl
cwde
(bad)
jl
gs
pop
out
repnz
das
sbb
int
shl
add
(bad)
cmp
jnp
mov
mov
dec
mov
push
inc
add
test
in
mov
or
mov
pop
daa
push
call
sub
out
jb
shl
fdiv
sub
popa
add
addr16
push
mov
std
adc
push
test
dec
mov
mov
sbb
cmp
jns
cmp
call
pop
in
out
adc
xchg
outs
outs
imul
cmps
inc
sbb
mov
das
and
sbb
int
xor
xchg
dec
mul
retf
dec
add
clc
inc
mov
(bad)
push
cli
jb
pusha
or
iret
aam
xor
fdivr
dec
iret
pop
pop
mov
adc
push
movs
or
mov
inc
xor
jae
sbb
mov
les
ja
inc
jae
iret
test
aam
mov
jbe
mov
dec
pop
(bad)
jge
and
(bad)
mov
inc
ja
xchg
push
fdiv
test
inc
aaa
inc
pop
jle
inc
in
inc
lds
dec
aas
pop
inc
(bad)
lods
je
push
xchg
cmp
(bad)
fnstcw
pop
mov
lods
sbb
out
lea
es
inc
out
cmp
pop
or
jnp
rol
pop
cmps
js
ja
pop
in
mov
add
icebp
sar
(bad)
neg
xchg
add
int3
and
jmp
sub
add
push
icebp
(bad)
adc
cmps
push
lods
cmp
je
cld
dec
lock
or
out
js
and
aad
push
popf
adc
not
fldcw
dec
inc
adc
cmp
cdq
add
dec
push
out
fldcw
or
fistp
xor
xchg
push
push
jbe
adc
push
jmp
add
mov
dec
sbb
sub
push
push
mov
ret
outs
repz
in
lods
(bad)
stc
sti
test
xor
arpl
retf
in
(bad)
in
push
and
std
inc
pop
cli
lahf
cmp
jno
add
dec
jmp
cmp
xor
pop
mov
(bad)
mov
adc
inc
hlt
adc
or
popf
fcmove
pop
jo
jnp
cs
cmp
outs
out
or
sub
in
js
pop
outs
sbb
sti
imul
jp
add
add
cmp
mov
push
push
mov
mov
cmp
gs
xchg
jp
popa
xor
prefetcht0
stc
cmc
iret
cs
xor
push
dec
lock
shl
hlt
dec
sub
out
aam
fdiv
fcomp
sbb
(bad)
xchg
int3
cli
cmp
sbb
pop
pop
mov
mov
mov
cmp
jecxz
jns
lods
add
ss
repnz
xchg
hlt
or
call
push
xchg
in
call
outs
fmul
aaa
imul
jo
mov
std
dec
sti
cli
sar
cmp
xchg
and
pop
ds
outs
fcomp
mov
adc
push
adc
pop
xor
sbb
jle
pop
shr
jnp
mov
nop
sub
call
mov
adc
(bad)
push
sbb
movs
mov
mov
mov
or
bts
movs
pusha
test
ds
lock
inc
cmps
inc
jge
push
add
sub
push
lock
mov
sub
pop
cmps
push
pusha
inc
ret
(bad)
outs
rol
mov
arpl
loope
mov
push
push
or
arpl
mov
jle
push
lea
pop
xor
fcom
repz
and
xchg
sbb
ret
mov
xchg
add
sub
mov
aad
div
or
sbb
cdq
ds
aam
aaa
clc
nop
jno
out
mov
push
into
cmp
xor
pop
test
push
cwde
cmp
dec
(bad)
(bad)
or
fdivr
fimul
sub
adc
push
pop
sub
add
test
arpl
pop
dec
jecxz
jae
hlt
inc
fcmovne
in
jge
add
stos
test
rcl
cmp
aas
jge
repz
in
cmps
adc
dec
xchg
dec
fst
add
mov
dec
pop
in
clc
ins
pop
fistp
(bad)
push
js
out
ja
arpl
leave
(bad)
ins
xlat
push
jo
(bad)
iret
xlat
mov
inc
mov
js
ss
mov
ret
mov
arpl
dec
push
push
jae
ins
loop
movs
iret
mov
test
pop
jecxz
fiadd
ins
mov
clc
cmp
mov
xchg
aad
lods
test
xor
les
push
addr16
outs
test
or
outs
and
add
fldenv
mov
stc
popf
out
push
movs
xchg
mov
sub
push
jno
add
sub
(bad)
out
pop
add
cs
pop
and
pop
ins
push
fild
shr
xlat
cmp
in
fcmovb
mov
jge
cwde
mul
out
popa
push
push
adc
pop
std
push
pop
inc
adc
(bad)
sbb
retw
in
leave
lods
sar
mov
and
add
rcl
add
jbe
adc
retf
cdq
into
out
cmp
jo
push
aas
xor
sbb
shl
xor
(bad)
mov
adc
mov
push
sar
sar
push
or
inc
hlt
cmp
jl
add
fst
cmp
ret
jb
push
pusha
sbb
mov
mov
outs
and
addr16
push
sbb
xchg
cs
retf
push
pop
sub
push
daa
xchg
inc
mov
rcl
adc
icebp
jmp
adc
or
pop
fmul
call
ret
and
cmp
not
cmp
jle
ss
aam
cmc
jb
sbb
dec
test
test
test
(bad)
dec
in
mov
ret
(bad)
mul
lea
mov
dec
mov
xor
jno
cwde
lock
fsubr
fimul
push
sub
imul
jmp
xchg
lds
cmps
das
retf
inc
or
lds
(bad)
jne
and
or
mov
shl
call
mov
cmp
test
adc
mov
imul
enter
inc
repz
pop
push
or
pop
icebp
add
mov
ret
xor
inc
mov
daa
data16
fs
neg
xor
ins
ficomp
mov
or
xchg
mov
cdq
cmp
stc
push
push
jle
jle
xor
xor
cmp
aas
xchg
mov
inc
mov
repnz
(bad)
aam
jne
pop
(bad)
dec
inc
mov
div
dec
inc
arpl
outs
clc
xchg
adc
dec
xchg
aaa
jmp
fs
jp
retf
mov
sbb
push
mov
cmps
pop
ins
pushf
pop
mov
push
loop
jne
fisubr
push
ja
mov
ja
cmp
out
in
cld
inc
jmp
add
dec
nop
shl
out
mov
rol
inc
sar
hlt
sbb
add
add
leave
jp
jae
ss
outs
push
jmp
jo
and
sti
test
popa
sbb
mov
call
mov
xor
and
push
push
loopne
ficomp
mov
ret
or
mov
gs
ret
mov
pop
jnp
add
cmp
mov
cmp
dec
inc
outs
rcr
jle
retf
and
xchg
rcr
in
mov
clc
lock
iret
arpl
cmp
cmp
dec
pop
lods
repz
rcl
jns
push
pusha
ds
sahf
xchg
dec
(bad)
in
push
jns
push
pushf
fimul
xchg
fidivr
adc
(bad)
icebp
out
push
mov
dec
pop
sahf
push
sbb
addps
clc
inc
mov
retf
xchg
push
addr16
and
pop
(bad)
sar
aad
sbb
sbb
mov
mov
jecxz
xchg
cmp
sbb
int
cmp
sbb
sub
or
(bad)
stc
shl
push
arpl
inc
mov
movs
cmps
bound
(bad)
push
pusha
mov
sub
adc
sbb
add
and
and
inc
out
jne
(bad)
jmp
not
mov
loopne
mov
dec
xchg
pop
sub
hlt
pop
jae
xchg
outs
cwde
cmovno
dec
mov
cli
add
cdq
jnp
push
mov
mov
or
scas
cdq
imul
fstp
outs
pop
sub
jb
in
stos
sbb
dec
xor
aad
mov
shl
into
ds
int
jecxz
dec
mov
imul
call
dec
aaa
mov
push
cld
jmp
cmps
push
mov
add
out
fnsave
dec
enter
jle
repz
mov
gs
scas
retf
call
lods
push
xor
xchg
cmp
scas
shl
jns
rcr
or
out
cs
mov
aas
(bad)
xor
xchg
ins
aas
mov
and
sub
cmp
push
mov
retf
data16
jns
or
pop
pop
pop
dec
aaa
push
mov
jno
xchg
je
shl
cdq
bound
jno
inc
icebp
retf
jl
adc
xor
lods
mov
cmc
dec
fild
sbb
mov
mul
test
sub
dec
jge
mov
adc
mov
cdq
sbb
in
gs
call
outs
mov
push
dec
jno
cmp
xlat
push
or
mov
in
jmp
pop
mov
outs
jnp
mov
push
(bad)
jp
sub
mov
inc
sub
(bad)
sub
dec
adc
imul
shl
test
shr
push
mov
out
test
dec
mov
xor
cmp
mov
test
arpl
mov
sub
xor
jle
sub
or
in
cmp
xchg
stos
pop
imul
cmp
fdivr
sbb
scas
fs
mov
imul
pop
or
xor
stos
mov
popa
loopne
pushf
ret
in
sahf
jno
fild
dec
pusha
cli
ss
test
(bad)
clc
or
jb
push
ja
mov
mov
jns
inc
mov
pushf
or
adc
call
push
lds
push
mov
nop
(bad)
pushf
add
call
pop
daa
mov
int3
pop
fwait
shl
pop
nop
xor
and
aam
out
shr
mov
call
fwait
and
jnp
push
mov
clc
xor
mov
(bad)
adc
data16
ja
ret
cmp
bswap
test
dec
into
pop
push
int3
mov
sbb
pop
mov
(bad)
dec
sar
rcl
rcl
rcl
rol
jb
cmp
in
aam
(bad)
xchg
xchg
ins
gs
loope
loopne
inc
cld
xor
shl
mov
cmp
loope
inc
repz
push
add
aam
fidivr
pusha
into
mov
shl
push
mov
push
pop
dec
(bad)
fidivr
pushf
jmp
cmp
fwait
es
mov
sub
jno
lea
(bad)
int
(bad)
js
push
pusha
fwait
nop
pop
xchg
push
ss
cmps
push
xchg
bound
cld
test
push
jne
repz
scas
xor
mov
pop
dec
fbstp
add
mov
xor
mov
pop
jle
and
xor
jmp
cmp
pop
cmc
jmp
repz
rol
push
(bad)
cmp
pop
cmps
fmul
mov
sub
hlt
mov
jg
fst
retf
bound
inc
xchg
and
clc
(bad)
out
jo
lea
fidivr
cli
add
sbb
in
call
dec
push
xchg
stc
add
sbb
sbb
or
mov
add
xor
push
add
add
mov
(bad)
loope
cmp
fcomp
and
(bad)
ror
adc
cmps
and
mov
nop
cmp
push
cmp
retf
push
repz
rol
mov
std
jle
pop
ds
pop
mov
mov
add
jp
cs
jo
sbb
(bad)
xor
test
(bad)
inc
call
mov
rcl
sbb
mov
xor
dec
cmp
and
cmps
sbb
loopne
lahf
addr16
fcom
addr16
jle
ret
inc
mov
inc
call
mov
sbb
retf
cdq
sbb
test
mov
pop
and
push
inc
pop
xor
pop
ja
imul
fistp
test
repz
inc
dec
dec
or
das
popf
pop
cdq
mov
out
mov
or
fcomp
sti
mov
into
mov
mov
pop
push
nop
aam
sqrtps
mov
sti
sub
retf
jnp
inc
addr16
ror
ror
jae
fdiv
sub
fisttp
mov
dec
mov
jmp
fcom
or
lods
jp
jo
lea
dec
bnd
cmp
or
sbb
in
cli
mov
dec
jbe
enter
or
xor
and
test
jge
push
sbb
jl
cmps
adc
cmp
ja
sbb
jae
and
jae
xlat
cwde
mov
sub
inc
out
es
sbb
cli
push
dec
or
fwait
or
pop
inc
idiv
pop
idiv
cdq
inc
fwait
xchg
ja
nop
pop
mov
mov
mov
fcom
scas
inc
retf
dec
inc
sbb
in
jg
jge
jmp
push
adc
adc
pop
add
mov
int
test
or
xor
fs
jmp
out
adc
and
mov
dec
in
inc
repnz
mov
mov
dec
lods
in
and
ins
xchg
test
push
scas
cmps
sub
mov
out
nop
push
cmc
ss
cmp
sub
lock
lods
xor
pop
int3
mov
cs
sub
or
js
push
jne
pop
cld
push
stos
push
das
(bad)
xor
ja
shr
sti
jle
cmp
sbb
push
(bad)
sub
addr16
cld
shr
arpl
ficomp
cmp
test
cmp
xchg
stc
pop
push
or
mov
stc
push
pop
xchg
not
pusha
mov
mov
jne
setg
cmc
movs
(bad)
stos
cmp
dec
mov
scas
inc
test
mov
mov
adc
sbb
sbb
in
cdq
xor
pop
jecxz
in
jo
ins
loop
mov
scas
dec
push
mov
cmps
inc
dec
dec
movs
pop
add
jecxz
jnp
scas
(bad)
repz
push
frstor
rcr
pop
sbb
inc
stc
and
xchg
call
out
test
out
mov
mov
outs
(bad)
icebp
pop
jg
sbb
lods
(bad)
xor
retf
and
sbb
popa
xchg
jp
xor
xchg
inc
cld
xor
pusha
es
dec
popa
sbb
pop
fucom
int
mov
and
add
inc
or
cmp
jge
xor
fsin
lock
or
cmps
sub
pop
das
cmp
daa
(bad)
or
ins
dec
(bad)
repz
push
aam
gs
pop
movs
sub
pop
ror
or
repz
jecxz
xor
div
bound
adc
fst
daa
inc
inc
data16
pop
dec
scas
test
js
adc
inc
pusha
nop
fs
aad
test
jl
jnp
inc
loopne
rol
loop
adc
movs
aam
shr
stos
jns
les
fadd
ins
dec
and
in
ds
out
imul
fsubrp
xor
ror
fisubr
aaa
add
xor
add
pop
cmp
les
ja
lods
sti
adc
ret
stos
mov
xchg
dec
in
push
ds
jge
inc
(bad)
sub
ss
(bad)
repz
test
mov
movs
neg
fadd
pop
xchg
in
dec
and
pop
out
xchg
(bad)
adc
fwait
in
test
mov
stc
loop
loop
(bad)
rcr
push
push
ins
dec
xor
fwait
push
adc
dec
and
call
push
mov
and
xor
xor
aad
push
and
into
inc
(bad)
or
push
xor
jb
and
aam
jae
cmp
add
add
xor
icebp
lea
ficomp
rcr
enter
mov
pop
adc
test
push
icebp
inc
(bad)
and
and
mov
sbb
sahf
jecxz
inc
adc
mov
fstp
push
xchg
imul
sbb
mul
jo
push
sbb
xlat
test
fidivr
sbb
inc
jecxz
fwait
cld
dec
adc
sahf
cmps
aaa
pop
jl
std
in
mov
cmp
cmp
mov
push
inc
mov
mov
pop
inc
(bad)
int3
dec
dec
mov
repnz
into
scas
mov
xor
sub
pop
push
adc
lds
pop
je
test
mov
mov
cdq
and
in
xchg
push
and
pop
pop
mov
dec
mov
cmp
in
shl
movs
enter
jmp
ret
sahf
shr
add
out
sub
sar
push
xor
iret
lea
xchg
jmp
popa
add
into
imul
loop
inc
adc
fimul
enter
sub
(bad)
in
push
jo
fcomp
add
push
mov
mov
dec
jl
int
movs
enter
and
aam
pop
(bad)
mov
pushf
(bad)
push
inc
imul
ror
loop
stc
(bad)
mov
fbld
cmp
fwait
rcl
mov
dec
(bad)
das
ror
loope
int3
inc
cmp
popa
xor
js
hlt
xchg
pop
fldz
mov
xor
pop
rcl
or
ins
or
cmp
lahf
lea
jne
and
hlt
or
shl
mov
jne
jecxz
add
mov
sub
fisubr
sbb
scas
pop
imul
mov
sbb
mov
cld
xor
jp
mov
nop
add
fs
inc
pusha
xor
xor
rcr
das
dec
pop
mov
adc
mov
pop
mov
dec
xchg
pushf
push
fwait
xchg
ja
das
and
sub
lods
(bad)
push
sub
xor
scas
jo
xchg
mov
hlt
jmp
mov
mov
inc
sub
dec
cmp
(bad)
stos
cmp
loop
xor
mov
mov
xchg
out
(bad)
pop
pop
ds
inc
outs
push
sahf
test
mov
dec
dec
repnz
push
out
pop
lods
adc
(bad)
xlat
pop
lods
(bad)
and
cmp
hlt
fadd
xchg
ficom
push
adc
push
psubb
push
dec
mov
inc
xchg
push
push
dec
mul
jl
shl
and
mov
xor
cmp
xchg
in
fisubr
or
jne
fstp
pop
scas
int
lds
mov
xchg
(bad)
lahf
adc
movs
add
xor
cmp
test
leave
retf
cmp
add
dec
nop
int
push
push
out
scas
push
jecxz
(bad)
loop
sbb
pop
mov
xchg
jmp
mov
pop
add
push
fmul
or
int3
fbstp
and
(bad)
xchg
push
fwait
(bad)
cli
jg
inc
lods
in
xchg
lock
and
inc
lahf
sbb
sub
cmc
imul
pop
push
mov
int
jle
loopne
out
push
int
arpl
push
adc
clc
lods
mov
pop
xchg
aad
(bad)
jmp
pop
adc
jl
out
adc
mov
(bad)
aad
nop
jo
mov
pusha
pop
push
(bad)
or
sub
cld
jmp
shr
pop
mov
ins
ins
add
mov
test
jle
loope
cli
mov
jp
cmps
jnp
jo
fimul
movs
jp
(bad)
pushf
sti
sbb
inc
nop
repnz
sub
xor
and
xlat
add
inc
or
call
mov
mov
xor
mov
mov
inc
stc
lock
mov
es
mul
adc
cmp
ret
int3
repnz
int3
cld
pop
test
fiadd
jb
cmps
daa
sbb
mov
repnz
push
dec
sbb
imul
mov
es
aad
sbb
add
cli
add
cmp
test
xchg
and
mov
xor
(bad)
jl
mov
repnz
aam
fild
sti
push
(bad)
jmp
cmc
jb
stos
stos
inc
pop
push
mov
add
out
je
imul
sub
movs
loope
mov
jle
cmp
and
or
mov
pop
popa
fadd
hlt
leave
fld
(bad)
in
jl
jne
pop
jo
adc
icebp
lods
(bad)
hlt
fs
mov
jp
mov
pop
idiv
mov
fcomp
bnd
cs
nop
mov
mov
pop
cld
int3
push
sub
mov
movs
add
and
add
inc
(bad)
cs
dec
ret
sub
fld
iret
xchg
jo
and
or
dec
push
mov
into
sbb
in
sub
mov
cmc
inc
mov
aas
pop
scas
outs
add
jle
in
push
cmp
fst
inc
leave
adc
xor
jle
outs
hlt
push
out
push
or
jle
mov
sub
dec
and
xchg
or
xchg
jp
xor
into
sbb
inc
xor
dec
mov
adc
xor
xor
cwde
lahf
add
mov
out
cli
fstp
push
cmp
jle
paddsb
pusha
call
dec
adc
inc
(bad)
push
test
call
mov
in
mov
mov
jge
xor
inc
or
popa
jb
scas
pop
and
imul
aaa
adc
(bad)
pop
and
retf
push
dec
or
imul
fiadd
out
sar
push
push
sbb
or
out
mov
aad
mov
mov
aas
ret
loope
leave
pushf
rcl
push
mov
idiv
stc
jp
mul
sub
and
imul
movs
pop
cmp
pushf
jg
xor
add
xchg
in
jo
fiadd
jp
movs
push
cs
add
mov
fldenv
cmps
cli
push
mov
rol
jmp
call
or
sti
pop
mov
cmp
sti
dec
dec
fist
bound
push
push
xchg
and
pop
call
inc
pop
cli
sbb
and
stos
push
call
sbb
jmp
xor
sbb
into
popa
out
add
hlt
push
sub
in
and
bound
mov
rcl
cmc
(bad)
cdq
pop
(bad)
pushf
dec
jmp
ins
pop
or
cmp
hlt
xchg
neg
loop
xchg
and
cmp
inc
or
mov
xchg
xchg
data16
sub
lea
ins
leave
adc
(bad)
xor
cmp
les
popf
inc
push
jl
clc
mov
in
and
in
(bad)
imul
int
pop
pop
sar
mov
hlt
sub
lods
or
mov
pop
repnz
jl
fldenv
sub
jae
sbb
sbb
imul
ret
and
retf
mov
fiadd
mov
mov
fsubr
sub
cmp
push
sub
cmc
pop
pop
mov
push
retf
dec
sbb
out
mov
repnz
leave
loop
test
cmp
shl
fist
mov
or
gs
popa
cmps
test
and
sbb
jb
out
xchg
jo
or
fwait
not
les
aam
test
push
call
mov
jno
pusha
pop
mov
add
hlt
and
mov
adc
clc
int3
sbb
iret
sti
jp
fcomip
hlt
and
inc
(bad)
pop
dec
movs
hlt
inc
pop
mov
sbb
sub
dec
ffree
pushf
sar
xor
(bad)
iret
mov
repz
sbb
pushf
and
rcl
pop
xchg
les
int
push
loopne
xchg
pusha
pop
loopne
inc
lds
xlat
add
pop
ret
xlat
das
xor
(bad)
loope
mov
push
inc
mov
fs
out
cmc
std
xor
iret
pop
jp
addr16
push
fbld
pop
mov
(bad)
mov
mov
sbb
mov
xor
dec
or
dec
mov
clc
adc
pop
mov
cmp
fwait
mov
pop
rcl
mov
int
jl
and
loopne
mov
lock
mov
add
cmp
dec
mov
pop
call
outs
rol
test
dec
mov
repz
enter
lods
ret
test
ror
push
dec
sbb
cld
jecxz
nop
ja
push
xor
jmp
call
xor
retf
xor
sub
sar
mov
leave
loop
mov
lods
movntq
mov
jl
pop
dec
fdivr
imul
add
mov
out
or
dec
push
call
ret
and
dec
jbe
adc
adc
pop
test
into
mov
fucomip
hlt
jae
push
dec
loop
mov
sbb
aas
mov
sbb
add
or
pop
movs
inc
jbe
cli
out
xchg
sub
inc
std
cmp
fnstenv
(bad)
jbe
jbe
nop
pop
xchg
(bad)
cld
jbe
inc
and
retf
adc
adc
sbb
cmp
ss
adc
mov
dec
sbb
push
push
xor
sbb
int3
xor
push
mov
fidiv
cdq
and
enter
and
paddd
lock
les
sahf
or
shl
push
xchg
xor
popa
call
sub
add
sub
jns
arpl
mov
cmps
clc
xor
aad
call
mov
hlt
inc
pushf
mov
mov
add
popf
push
inc
adc
retf
mov
(bad)
jae
mov
mov
xor
cs
cmps
xchg
jns
fwait
je
(bad)
in
(bad)
(bad)
(bad)
stos
outs
push
or
jg
div
outs
lock
sub
inc
out
jecxz
push
lods
and
and
cld
push
shl
sbb
lea
fisub
push
fnsave
bound
push
shl
imul
push
leave
call
jp
cmp
pop
out
aad
leave
test
xor
js
sti
mov
mov
add
push
(bad)
lsl
cmc
pusha
push
aam
dec
cmp
ret
dec
mov
ja
out
leave
ja
inc
xor
push
outs
sbb
cmps
add
test
(bad)
mov
imul
jmp
mov
ja
add
inc
push
dec
jo
push
mov
jg
dec
das
fsubr
jecxz
sbb
fs
stos
mov
push
and
nop
mov
xchg
or
or
repz
pop
or
retf
leave
xor
popf
popf
jb
aad
scas
ss
mov
sti
xchg
in
into
add
inc
mov
jmp
int3
and
inc
retf
clc
sahf
iret
jno
fs
sub
and
jmp
pop
pop
imul
add
inc
pop
push
xchg
xor
push
and
inc
dec
pop
pop
and
dec
enter
retf
sub
push
sbb
xchg
mov
lea
jo
push
hlt
dec
stos
call
cmps
in
xchg
mov
pop
mov
stc
jmp
lods
sti
(bad)
aas
clc
(bad)
mov
std
cwde
test
(bad)
iret
dec
lahf
xchg
sbb
add
pop
mov
and
jl
(bad)
shr
mov
aaa
jbe
pop
xchg
ins
mov
out
add
sub
jb
jecxz
clc
mov
mov
inc
lea
stc
ja
inc
cmps
les
jbe
retf
sbb
(bad)
xlat
and
mov
jbe
mov
aad
mov
inc
xor
mov
push
imul
stc
mov
and
sbb
pop
nop
fwait
pop
mov
pop
push
sbb
pusha
cdq
mov
push
in
enter
mov
cld
out
inc
mov
dec
loope
pop
lock
in
pop
enter
xchg
push
fbstp
mov
push
mov
lahf
inc
mov
mov
mov
inc
and
or
xchg
pop
sahf
inc
outs
or
mul
mov
jp
retf
cmp
fsub
xchg
xchg
repz
(bad)
mov
cmp
leave
mov
int3
jns
movs
cmc
rcl
pop
sbb
mov
inc
xlat
jae
aas
add
dec
sahf
inc
sbb
inc
int3
adc
loopne
test
mov
ss
test
mov
jp
(bad)
call
pop
jne
fistp
imul
mov
cld
mov
shl
inc
aas
push
sub
fcmovnu
xchg
mov
outs
jo
mov
mov
mov
adc
(bad)
sub
fadd
fadd
sub
push
shl
and
(bad)
mov
mov
mov
xor
adc
lock
xchg
fsubr
leave
pop
fadd
jmp
out
sbb
adc
xor
dec
mov
pop
cli
cmp
loope
sbb
movs
cmp
jns
test
jo
sub
pushf
xor
jecxz
ins
icebp
test
adc
movs
lods
and
mov
test
xchg
(bad)
(bad)
rol
xor
adc
(bad)
mov
inc
push
movs
and
rcr
mov
(bad)
pusha
mov
or
sub
xor
push
std
je
outs
inc
outs
jns
retf
clc
inc
or
or
jmp
jae
or
adc
pop
call
out
sbb
inc
sub
(bad)
ins
js
inc
test
(bad)
push
lds
xchg
xor
mov
repnz
popa
popf
jl
mov
mov
mov
in
in
loope
fadd
push
(bad)
adc
aam
cmc
js
push
or
xlat
in
sbb
ins
stos
sar
push
in
xchg
xchg
and
sbb
push
mul
jnp
and
imul
rcr
mov
out
jbe
outs
loope
sub
frstpm(287
mov
push
ins
dec
movs
mov
repnz
pop
push
sub
mov
adc
mov
das
xchg
mov
jge
pop
push
jge
cwde
ror
in
and
jns
cs
sub
jns
cmp
icebp
mov
add
loopne
lea
into
inc
inc
mov
pop
cmp
cmp
sub
jns
xchg
cmp
imul
mov
enter
daa
sub
into
jg
icebp
sub
mov
or
push
pop
and
sub
pop
adc
mov
sub
xchg
std
inc
mov
adc
and
mov
in
ins
xor
(bad)
mov
cmp
dec
cmp
mov
jmp
mov
push
cld
xchg
adc
xor
inc
dec
jnp
mov
rol
mov
mov
xchg
xor
lods
mov
rol
daa
leave
jbe
mov
sub
xchg
ins
aas
out
inc
fisubr
pop
jp
sub
mov
cli
(bad)
imul
mov
sub
(bad)
push
sbb
inc
in
scas
dec
or
push
fmul
push
push
pushf
mov
mov
mov
jmp
sub
dec
shl
push
xor
inc
add
fmul
cmp
fwait
pushf
test
xor
push
dec
push
jp
shl
push
dec
mov
fldlg2
or
mov
lds
pop
loope
jecxz
sahf
push
jb
mov
adc
int
out
xor
mov
addr16
pusha
inc
xor
lock
out
jmp
adc
arpl
fistp
in
xor
call
call
aaa
stos
jnp
inc
pop
stc
mov
in
jno
hlt
adc
inc
mov
inc
and
test
mov
movs
pop
loope
daa
lahf
adc
lea
loopne
shr
jmp
jne
icebp
addr16
fnstenv
or
pop
add
add
lds
call
add
leave
pop
cmps
retf
mov
mov
stos
ficom
cmps
sub
ret
outs
cmp
xchg
xchg
rol
mov
(bad)
std
xor
jmp
xor
jo
leave
inc
in
push
push
and
mov
icebp
xor
std
retf
pusha
or
inc
mov
dec
leave
xor
mov
and
outs
dec
clc
push
retf
xor
xor
mov
mov
sbb
mov
clc
dec
add
mov
cmp
xchg
pop
out
adc
xor
push
(bad)
push
fistp
pop
mov
mul
pop
int
sub
push
or
aad
pop
mov
and
mov
and
add
push
ins
jge
xchg
cmp
daa
jbe
scas
pop
mov
mov
ret
mov
pushf
dec
(bad)
dec
sbb
and
dec
sbb
hlt
dec
in
(bad)
push
pop
add
pop
sub
or
push
mov
lea
pusha
inc
and
xor
cdq
push
jbe
cmp
push
mov
repnz
add
lahf
(bad)
test
dec
and
mov
mov
mov
fdiv
xchg
popf
out
pushf
pushf
pop
aad
lods
aas
sti
inc
sbb
jg
sar
fldcw
leave
call
repnz
les
call
iret
scas
pop
mov
dec
shr
fstp
ja
mov
cmc
repz
cwde
ret
adc
inc
adc
dec
aam
mov
fwait
popa
mov
(bad)
(bad)
sbb
loopne
push
sti
pop
dec
adc
pusha
add
xlat
retw
(bad)
mov
pop
mov
stc
jp
rcl
pop
pop
cmc
inc
dec
xchg
sar
add
fwait
sub
and
(bad)
mov
inc
(bad)
pop
int
sti
mov
mov
adc
sub
xor
sub
inc
push
add
mov
jg
retf
div
mov
(bad)
push
xor
pop
push
or
add
mov
outs
sub
(bad)
fsubp
sub
mov
xor
mov
fbld
sbb
out
xlat
(bad)
neg
push
hlt
push
imul
push
xchg
or
inc
dec
test
sar
les
and
sub
pop
pop
imul
cmp
sbb
inc
call
adc
ja
xchg
in
out
rcr
loop
into
mov
ret
dec
mov
push
jmp
test
mov
adc
mov
cmp
sub
test
imul
(bad)
test
and
or
cmp
add
mov
pop
push
call
pop
and
aam
inc
arpl
push
adc
loope
xchg
add
and
xchg
mov
mov
and
mov
jmp
push
ss
test
add
jbe
bound
fwait
pushf
(bad)
js
cmp
and
mov
popf
mov
and
mov
int
test
repz
(bad)
add
stc
push
sub
(bad)
fst
in
cmps
ss
sti
lds
inc
test
xlat
ficom
mov
and
fst
or
leave
outs
xchg
cmp
xor
and
into
nop
add
lds
mov
jb
push
les
stos
add
stos
stos
jmp
movs
mov
sub
sahf
cmc
xchg
fisubr
push
js
add
sub
loope
mov
(bad)
shr
xor
in
dec
adc
mov
cmp
ficomp
sub
mov
jp
test
movs
test
adc
ins
jb
fdiv
jle
mov
(bad)
mov
out
cmc
mov
(bad)
addr16
imul
rcr
mov
inc
je
dec
mov
dec
bound
pop
aas
fild
jns
lea
retf
out
into
shr
sbb
mov
in
lds
inc
fnstcw
pop
jns
sbb
loopne
nop
jp
inc
xlat
cdq
cmp
xchg
push
out
fs
pop
pop
pop
mov
pusha
je
std
push
xchg
call
jecxz
icebp
jae
popa
outs
mov
jmp
repnz
add
adc
pop
std
fwait
push
jmp
sti
jns
lock
xchg
and
fwait
add
cmps
fcmove
movs
loop
mov
mov
xor
dec
pop
ins
(bad)
shl
push
cwde
sahf
jecxz
sbb
mov
out
ss
stc
dec
stos
out
mov
scas
shr
mov
mov
or
repz
enter
shl
xlat
je
test
out
jmp
mov
in
add
movs
sub
into
cs
jmp
(bad)
push
xor
arpl
push
cmp
arpl
pop
int
add
mov
(bad)
sbb
out
inc
mov
pop
sahf
dec
std
sbb
xor
and
jne
sub
sbb
add
jnp
call
inc
xchg
push
mov
jmp
test
push
sub
mov
fldenv
bound
ds
mov
(bad)
mov
xor
daa
mov
or
jae
lds
mov
push
and
cs
lock
sbb
inc
or
gs
xor
dec
stos
inc
mov
retf
dec
fldcw
dec
lahf
jg
(bad)
out
mov
sub
(bad)
cwde
sahf
std
pop
mov
mov
and
add
fstp
pop
dec
jmp
dec
push
ss
data16
jnp
mov
call
jne
or
xchg
mov
xlat
sbb
xor
ins
mov
jno
or
pushf
push
cmp
cmp
or
stos
jbe
lods
sbb
dec
test
mov
jbe
mov
mov
int
sti
arpl
sub
adc
(bad)
lds
pop
jo
and
xchg
jns
cmps
rcl
jbe
push
cmps
retf
pop
cmp
mov
enter
mov
mov
and
cmp
jmp
push
in
mov
imul
cld
xor
scas
push
stos
xor
out
dec
push
xchg
mov
outs
jb
cli
cmp
mov
aaa
cwde
dec
cmp
aaa
jnp
mov
xchg
mov
jmp
aaa
clc
cmps
test
stc
je
dec
xor
fwait
mov
pop
cmp
mov
ret
cmps
mov
loope
out
rcr
fwait
ins
xchg
int
(bad)
adc
add
xor
add
stc
and
pop
cs
out
cmps
sub
sti
hlt
adc
(bad)
xor
or
xchg
fimul
test
sub
or
inc
sar
sub
jae
pop
rep
dec
xchg
(bad)
mov
mov
mov
mov
call
dec
into
pop
xchg
jl
mov
push
push
test
imul
call
imul
mov
ds
out
add
inc
repz
sub
ja
mov
sbb
rcl
inc
and
mov
push
js
jle
dec
(bad)
repz
fnsave
inc
xor
pop
pop
lock
lods
push
or
push
imul
jle
enter
fidiv
adc
push
out
iret
xor
mov
icebp
jo
imul
mov
loope
inc
icebp
sbb
mov
rcl
xchg
mov
retf
lods
sub
cmp
or
mov
pop
adc
inc
pusha
xchg
sbb
push
mov
or
jns
stc
pop
push
cwde
mov
mov
shl
mov
(bad)
sar
nop
dec
(bad)
ins
shr
and
mov
pop
jmp
xchg
jle
scas
movs
jae
adc
lahf
xchg
cmps
cmp
mov
dec
jecxz
xlat
imul
(bad)
push
fstp
aas
or
fnstcw
repnz
xor
gs
aad
mov
cli
mov
mov
fist
push
mov
in
fnsave
cwde
scas
pop
mov
xchg
cmp
jmp
pop
inc
inc
sub
xchg
outs
inc
jno
xor
mov
prefetch
and
jno
sub
jo
cmp
mov
test
(bad)
scas
dec
or
jnp
pop
into
loope
adc
test
in
sub
imul
sub
in
dec
aad
and
ins
mov
cmp
mov
xor
push
or
and
inc
sbb
mov
and
int
jae
jbe
in
add
xor
aam
fcom
ficom
mov
ret
mov
jle
rcl
fs
xchg
loop
rol
jmp
and
and
stos
ret
mov
jne
jbe
adc
aam
mov
adc
rcr
push
hlt
mov
pushf
add
popa
sbb
or
verr
cmp
lea
dec
inc
aad
xor
pop
es
push
out
jno
sbb
adc
sar
inc
jmp
adc
inc
xchg
cld
push
mov
std
lahf
cmp
das
xlat
and
dec
jb
jo
adc
mov
iret
dec
push
sub
push
mov
sub
aad
ret
ja
push
mov
into
or
popf
sub
push
not
(bad)
mov
add
scas
(bad)
aad
out
sub
popf
jb
add
cwde
jmp
scas
adc
or
mov
jmp
scas
cmps
ficomp
jbe
jp
sbb
adc
jg
push
jno
adc
int
repz
cmc
pop
stos
jmp
push
jge
inc
retf
dec
clc
(bad)
sbb
mov
inc
ss
push
(bad)
(bad)
and
and
daa
popa
into
psubw
pop
ror
add
sub
jg
or
retf
rol
(bad)
lods
and
sub
adc
jl
jo
push
movs
ret
out
push
das
sbb
in
xchg
sahf
fild
jmp
dec
dec
jo
rol
inc
repz
inc
test
lock
sub
cmp
xchg
fmul
sub
mov
pop
addr16
fcomp
push
xchg
or
xor
fisttp
test
rcr
mov
mov
ret
cmp
fiadd
fs
jno
nop
movs
mov
into
push
sbb
jno
or
out
enter
pop
fcmovnu
cld
lock
mov
jp
aaa
xor
jmp
and
push
cld
and
imul
test
(bad)
pop
inc
lods
ror
retf
mov
xor
shl
xchg
aaa
xchg
ins
or
ins
retf
mov
add
and
mov
rcr
adc
movs
test
mov
or
out
cld
jne
sbb
mov
loop
stos
add
xchg
mov
jge
aaa
sbb
push
cwde
cld
and
dec
fld
jns
adc
sub
mov
daa
(bad)
cs
and
out
jns
in
int3
jnp
inc
mov
stos
add
cld
cld
fld
mov
(bad)
push
or
mov
jp
clc
jmp
cmp
enter
inc
cdq
fbstp
(bad)
cld
push
sbb
xor
inc
add
mov
int
sub
pop
rol
sti
(bad)
shl
es
jnp
(bad)
loopne
mov
mov
loopne
pushf
cmps
dec
out
mov
xchg
arpl
pop
mov
jmp
xchg
or
fcmovbe
push
bound
jecxz
mov
(bad)
pop
inc
popf
xchg
mov
and
cmp
mov
cmp
or
lea
nop
inc
xchg
daa
ins
xor
mov
in
jl
sub
(bad)
lahf
(bad)
and
adc
adc
loope
mov
mov
ret
icebp
arpl
repnz
sub
mov
mov
pusha
nop
push
xchg
lahf
je
dec
xlat
mov
add
xchg
xlat
push
push
jb
xchg
cmc
cmp
das
les
xor
ss
aas
xor
pop
clc
mov
cld
dec
leave
bound
adc
fwait
test
add
or
neg
pop
dec
loopne
lods
iret
mov
cmp
xchg
inc
jne
mov
icebp
xchg
gs
inc
push
push
push
xchg
enter
lock
add
(bad)
push
xchg
mov
pop
stos
inc
or
test
sbb
lods
test
in
push
(bad)
and
jb
xor
xchg
pushf
std
scas
mov
push
mov
or
std
adc
scas
test
jl
(bad)
sti
pop
sbb
bound
xor
in
xor
jge
push
data16
into
lea
xchg
jb
mov
stos
sbb
sub
and
jo
mov
fwait
push
xchg
or
fstp
pop
jns
fst
pop
ss
add
test
jmp
pop
hlt
jp
ins
sbb
loope
fwait
xchg
xor
or
mov
sub
in
fld
cmp
jnp
pop
cmp
pusha
mul
xchg
lock
jmp
push
mov
and
sbb
cli
xor
cmp
mov
push
daa
xor
imul
clc
and
shr
ins
xlat
in
in
lds
push
movs
jne
pop
ds
imul
test
dec
ret
nop
movs
or
jae
or
push
das
or
repz
shr
js
pop
sbb
(bad)
loopne
pop
in
cmc
leave
sub
das
pusha
inc
jae
xlat
inc
fnstcw
pop
cmp
fstp
and
arpl
xlat
cmps
call
test
mov
fild
mov
icebp
add
mov
rcr
add
sub
aad
dec
out
sub
push
vpsubd
mov
movs
fmul
push
inc
int3
int3
ret
mov
cli
hlt
pop
jmp
adc
adc
ret
dec
add
sbb
dec
loope
lods
dec
or
pop
or
push
stc
test
scas
in
ja
addr16
leave
xchg
sub
mov
mov
aam
cdq
pop
(bad)
mov
clc
repz
adc
fstp
inc
add
add
es
repz
cmp
push
and
rcl
or
je
js
pop
and
sbb
es
in
xor
cdq
ds
ds
aad
add
inc
inc
push
leave
js
push
sbb
leave
popa
inc
sti
push
es
cmc
push
std
int
cmc
inc
ja
adc
xor
pop
cwde
add
ins
inc
ret
push
gs
jge
add
sbb
mov
cmp
nop
mov
add
xlat
jge
shr
xor
or
mov
sub
cmp
pop
jl
rcl
inc
test
sahf
ret
xor
jle
fiadd
push
enter
ja
rcr
mov
jecxz
ins
jne
adc
sub
iret
lods
sub
std
stc
es
cmps
sbb
lods
add
mov
push
jmp
ja
mov
fs
cmovs
in
jmp
and
je
xchg
das
mov
sahf
fwait
mov
add
fld
and
sbb
outs
ret
add
inc
fcmove
push
rcl
adc
outs
repz
je
cmc
cwde
mov
repz
pushf
cmp
cmp
jecxz
in
push
ins
lods
outs
popf
mov
ret
pop
imul
adc
sti
in
in
or
jle
fdiv
inc
cmp
cmps
dec
daa
ins
(bad)
and
fistp
and
retf
mov
fidiv
(bad)
fnstenv
cmp
or
cmp
xchg
mov
(bad)
retf
jne
mov
mov
js
daa
xchg
imul
add
outs
lods
pushf
loopne
push
pop
(bad)
push
or
std
adc
or
sbb
test
retf
stc
dec
push
in
xor
inc
out
xchg
mov
add
fwait
mov
jecxz
add
mov
adc
add
iret
(bad)
and
jle
and
or
mov
sub
js
or
or
leave
xor
jno
cmc
pop
popa
not
cmps
fld
jmp
fs
nop
fcomp
mov
retf
and
mov
lock
mov
push
aad
and
out
out
mov
push
sbb
pop
outs
ror
dec
xchg
or
test
push
gs
dec
rcr
or
mov
or
mov
in
mov
adc
movs
sti
gs
jmp
(bad)
jns
int3
sub
cmp
pusha
inc
add
stos
lds
ins
push
(bad)
sbb
inc
cmps
mov
inc
jle
icebp
retf
ret
sub
lea
xchg
xchg
mov
xchg
iret
cmp
sahf
xor
adc
(bad)
pop
cdq
mov
sti
mov
mov
xchg
daa
stos
mov
adc
call
out
xchg
int3
loopne
or
xchg
xor
ja
inc
fsub
aam
and
dec
scas
jl
mov
pop
je
mov
cwde
aaa
dec
out
pushf
push
or
push
stos
dec
xchg
lahf
pop
push
(bad)
cli
dec
jecxz
int3
and
xor
push
pop
dec
adc
fist
xchg
inc
add
ja
mov
popa
push
jmp
sbb
outs
sbb
daa
push
xlat
loopne
jnp
sbb
scas
arpl
mov
arpl
test
iret
scas
pop
fmul
jae
and
in
rol
movs
in
inc
sbb
and
sbb
addr16
gs
push
arpl
and
dec
jmp
daa
aaa
in
cmp
stc
mov
das
xchg
hlt
xchg
pop
js
int
inc
fsubr
and
sub
and
scas
shl
adc
ins
scas
adc
xor
xchg
inc
push
add
xchg
popa
fwait
retf
jecxz
and
mov
in
fist
sub
and
mov
(bad)
xor
es
cmc
inc
mov
sti
repz
js
das
or
mov
test
int3
mov
(bad)
mov
xor
inc
jo
inc
sbb
out
inc
arpl
cmp
out
xchg
and
cdq
pop
loopne
sbb
adc
push
dec
jp
sbb
cmp
scas
inc
mov
aam
push
popf
fs
fstp
jo
test
addr16
mov
out
push
xlat
(bad)
jmp
xchg
cmp
dec
scas
pusha
(bad)
stc
inc
xchg
ss
push
mov
push
xchg
add
cmp
pop
cs
or
retf
ja
sbb
sub
data16
and
jo
or
shl
lahf
imul
xchg
push
cs
jge
bound
or
sub
pop
(bad)
push
push
add
inc
pop
add
push
or
test
sub
into
inc
push
cmp
imul
test
pop
mov
arpl
loope
jno
lea
into
pop
mov
ss
inc
mov
dec
(bad)
pop
pop
xor
in
stos
xor
aam
push
mov
xchg
or
aaa
pop
sbb
fxch
jp
sbb
test
xchg
popa
add
or
sar
lea
sub
sub
push
mov
ror
sbb
dec
sub
int
xchg
rcr
sub
fild
pop
sub
(bad)
(bad)
js
jb
sub
and
inc
xchg
nop
dec
cmp
and
xor
cmps
xlat
mov
lods
sub
inc
scas
xchg
outs
cmp
repz
icebp
or
xchg
dec
sub
out
sahf
push
jp
les
test
popf
retf
pop
mov
or
adc
aam
pop
jb
dec
aaa
test
xor
push
and
jb
call
inc
out
add
mov
inc
in
and
xchg
pop
(bad)
repz
dec
mov
stc
pop
mov
jmp
aad
push
add
aam
mov
adc
and
pop
dec
ret
sti
into
out
test
xchg
sti
cmp
jns
fcomi
pop
loop
push
inc
cmp
clc
icebp
scas
arpl
push
inc
fs
outs
aam
(bad)
jecxz
or
(bad)
or
mov
jg
pop
mov
test
inc
stos
dec
fistp
lds
fst
push
dec
pusha
test
stos
or
movs
call
out
sbb
mov
push
out
jmp
push
or
push
icebp
mov
stos
int
pop
or
leave
add
in
shl
xchg
mov
push
pop
or
xor
jb
or
inc
mov
loop
pop
or
jns
sbb
es
sbb
or
mov
test
mov
inc
repz
pop
out
sub
jnp
xor
pop
xchg
cwde
int
pop
xchg
push
cmp
js
sti
push
iret
(bad)
addr16
daa
addr16
cmp
pop
cmps
adc
cmp
ss
lds
retf
dec
aad
repz
cmp
push
cmp
lea
(bad)
and
push
fist
mov
or
ins
sbb
outs
xchg
jg
loope
in
(bad)
mov
call
push
xor
cmp
push
scas
mov
mov
push
rcr
enter
jbe
out
cld
lods
dec
cli
in
push
pop
pop
bound
mov
xor
sub
ror
sti
jne
mov
jo
fdiv
inc
addr16
and
or
scas
js
adc
push
push
cld
xor
cld
cli
mov
sbb
inc
sbb
xchg
aad
push
stc
(bad)
into
xor
pop
sub
jge
xor
jae
push
test
mov
cmp
lahf
sub
or
sub
aas
sub
fiadd
(bad)
fsub
cmp
and
rcr
add
inc
xor
pop
xlat
xchg
or
je
or
inc
xor
test
pushf
pop
cmp
test
ins
loope
pop
mov
aas
xchg
xchg
mov
test
(bad)
in
xchg
ror
in
xlat
mov
push
pop
pop
inc
push
icebp
fs
push
popa
dec
push
es
dec
mov
sar
nop
mov
cmps
int
adc
add
ds
jmp
mov
cdq
call
dec
call
in
sbb
mov
imul
pop
scas
icebp
out
fist
push
ret
movs
stos
push
test
mov
sub
stos
inc
xlat
jl
(bad)
push
cs
call
outs
cmp
sbb
mov
pop
sbb
or
and
push
in
sbb
cld
jle
je
adc
in
mov
sahf
adc
data16
dec
or
dec
adc
out
and
push
loopne
xchg
loopne
(bad)
sbb
out
outs
add
neg
xor
mov
daa
pop
(bad)
jmp
push
arpl
xchg
xchg
dec
test
lock
push
adc
mov
js
loopne
jae
sub
and
stc
adc
pop
mov
(bad)
adc
mov
sar
xor
dec
fldcw
lock
daa
in
xchg
xchg
cld
call
rcr
mov
ins
test
call
ret
imul
inc
in
mov
mov
retf
jmp
push
add
jl
(bad)
inc
(bad)
cmps
mov
mov
cmps
(bad)
or
inc
xchg
push
cmps
popf
icebp
daa
lahf
jge
mov
scas
mov
sub
fidiv
or
inc
sub
inc
mov
pop
or
into
cli
out
out
aas
mov
cli
outs
repz
pop
sbb
pop
adc
fiadd
xchg
aaa
mov
mov
jb
fistp
hlt
jns
jmp
and
push
sbb
pop
cdq
or
fidiv
push
sub
movs
cmc
test
inc
push
mov
neg
mov
adc
mov
nop
mov
pop
adc
push
mov
pushf
xchg
fcmovb
hlt
and
push
sti
sahf
in
cmc
add
xor
mov
cmps
stos
stc
call
mov
out
mov
add
dec
scas
mov
mov
jge
inc
(bad)
loop
add
ds
mov
fld
mov
in
jecxz
inc
cmp
bound
mov
lods
fst
leave
push
js
out
cld
stc
jge
icebp
pusha
xchg
xchg
lahf
push
cmp
cmp
ja
mov
jae
std
adc
pushf
mov
hlt
lock
push
ja
add
sti
xchg
fucom
jle
and
jl
rol
mov
xlat
mov
adc
ror
test
hlt
int3
jb
jmp
loope
inc
dec
xchg
nop
sahf
pusha
imul
in
or
push
dec
rcl
jge
lahf
add
add
pop
pop
pop
in
stos
loopne
fdivrp
mov
(bad)
xchg
je
adc
idiv
daa
in
icebp
lds
cmp
mov
add
jp
es
adc
ror
xchg
pop
je
mov
ins
add
or
sbb
aaa
add
dec
mov
adc
inc
ss
arpl
cld
push
pusha
fisubr
(bad)
cld
das
cmc
ins
rcl
je
inc
fsub
mov
rol
cmp
sahf
outs
gs
sbb
ins
cmp
pop
ins
es
bswap
jno
or
dec
adc
sub
aad
loop
mov
ins
inc
aaa
bt
out
or
mov
rcl
mov
outs
xor
dec
test
lods
push
stos
ins
ins
adc
test
fwait
xchg
xchg
bound
or
push
push
mov
pop
jl
mov
std
or
enter
xor
cmp
sub
or
mov
test
out
mov
dec
enter
xchg
inc
jnp
add
and
jle
dec
xchg
fdivr
sti
xor
add
jle
and
cs
sbb
pushf
add
push
adc
fisub
and
int3
jp
test
shl
push
leave
sub
sub
out
or
add
loopne
(bad)
mov
mov
stos
xor
loopne
movs
repnz
pop
mov
jne
outs
enter
sbb
fisubr
mov
cdq
mov
cmp
bound
(bad)
adc
pop
cdq
test
movs
shl
pop
push
mov
stc
push
nop
jmp
aas
dec
sub
mov
dec
mov
push
xor
aas
pushf
inc
movs
pop
mov
and
push
clc
jle
jmp
outs
sahf
pop
dec
lock
retf
hlt
adc
int
and
sub
push
xor
ficom
mov
cmp
and
mov
inc
cmp
xchg
dec
lahf
sbb
pushw
(bad)
in
inc
mov
in
stos
adc
push
sub
dec
cwde
add
and
mov
arpl
imul
and
inc
dec
mov
xor
cdq
call
mov
or
jbe
and
push
pop
mov
inc
xchg
lods
ds
mov
push
push
push
dec
fist
jne
inc
adc
add
jns
cmps
or
or
mov
dec
lods
das
jb
add
xchg
jmp
add
cwde
mov
push
jmp
clc
mov
push
dec
pop
pop
int3
test
mov
loopne
sub
or
add
in
loope
fld
cmp
sbb
and
push
adc
sbb
mov
pop
test
cmps
mov
and
aad
inc
call
mov
jg
push
aam
adc
ror
cmc
jle
aad
jmp
sub
inc
push
sub
repz
fild
xor
adc
ss
mov
test
scas
retf
mov
push
mov
aas
xchg
je
push
jge
not
popa
or
aad
les
jle
out
neg
inc
xor
mov
inc
je
add
or
cld
test
dec
mov
idiv
jle
fisub
fwait
test
xor
shl
cs
cmc
loop
jb
and
add
(bad)
sub
cmc
jmp
ja
shr
dec
or
rcl
push
jno
loope
arpl
or
xchg
or
pop
push
adc
dec
and
mov
push
push
lea
mov
ret
shr
(bad)
in
xor
or
inc
scas
pop
mov
push
fnstsw
(bad)
cld
xchg
add
das
sti
add
sub
inc
mov
div
fwait
sahf
pop
cdq
mov
inc
jnp
adc
fs
pop
pop
xchg
sti
mov
sub
push
mov
daa
repnz
inc
outs
mov
shl
mov
xchg
and
push
shl
cld
pop
lods
and
jmp
xlat
test
inc
mov
and
push
sbb
pop
jge
call
and
enter
xor
xchg
int3
mov
fst
stos
repnz
cmp
lds
mov
fiadd
xchg
mov
arpl
pop
loop
push
aad
push
push
ja
cmp
js
sahf
and
push
mov
inc
mov
arpl
retf
xchg
bound
in
js
imul
in
inc
ins
jne
clc
inc
pop
push
scas
jb
or
jl
movs
mov
add
mov
add
dec
js
dec
cwde
inc
dec
fidiv
fisttp
pop
adc
outs
or
(bad)
fcomp
loop
inc
xlat
add
fdivr
xor
inc
push
xchg
imul
cmp
out
imul
sub
ret
fwait
xor
(bad)
aas
sbb
sbb
sahf
mov
(bad)
adc
add
sti
(bad)
fdiv
inc
cmp
jns
sbb
push
pop
(bad)
inc
push
repz
sub
pop
or
mov
add
sub
outs
cmp
add
mov
call
xor
mov
cmps
mov
ss
jne
cmps
xchg
fwait
sub
mov
pop
add
jge
pop
movs
lods
xlat
sbb
jecxz
scas
xor
(bad)
fmulp
pushf
jnp
jmp
(bad)
mov
aas
retf
mov
or
lds
mov
jns
inc
cmp
mov
and
jbe
mov
fsubr
push
lea
jns
jmp
pushf
mov
jno
xor
je
xchg
sbb
in
add
or
xchg
add
adc
cmc
inc
mov
leave
xor
mov
jg
add
push
stos
adc
sub
cli
pop
rcl
mov
ret
mov
xchg
iret
bnd
or
(bad)
je
(bad)
sub
jae
mov
jle
add
or
mov
dec
pop
loop
mov
outs
jl
mov
pop
mov
outs
loope
(bad)
call
test
jb
es
stos
sub
ins
(bad)
and
cmc
mov
dec
sbb
mov
adc
movs
push
ret
sub
sar
aam
imul
xchg
je
add
icebp
jb
jl
gs
mov
mov
bound
es
dec
icebp
cmc
cmps
fchs
inc
xchg
inc
jb
xor
pop
inc
jle
cmp
mov
mov
mov
fsubr
mov
mov
jmp
ss
or
enter
push
cli
call
icebp
pop
jmp
iret
mov
sbb
add
add
aaa
push
(bad)
jns
test
pop
fdivr
jnp
clc
(bad)
mov
xchg
pop
scas
pop
mov
pop
mov
sbb
dec
mov
jp
das
adc
out
stos
dec
add
mov
je
xchg
jb
xchg
or
enter
adc
push
jg
cmp
pop
mov
inc
and
pop
loop
inc
pop
lods
xchg
mov
inc
xchg
sbb
(bad)
mov
jo
cld
mov
enter
out
sahf
pop
cmp
mov
mov
add
push
out
dec
outs
cmp
pop
add
pop
in
sub
sbb
repnz
xor
push
(bad)
xlat
mov
sub
jne
cmp
movq
jbe
int
int
jnp
inc
imul
sar
loopne
inc
xchg
aas
scas
leave
push
mov
xor
ret
sbb
mov
mov
jmp
cdq
hlt
(bad)
idiv
sahf
fldenv
test
or
mov
mov
inc
(bad)
push
add
mov
call
popf
popf
or
or
cmc
and
gs
inc
jmp
sbb
pop
icebp
je
scas
mov
(bad)
adc
shl
gs
loopne
retf
mov
bound
js
std
cmp
shl
imul
int3
adc
in
pop
inc
jmp
jb
in
inc
jl
push
sub
jmp
xor
jne
or
shl
pop
cmp
movs
outs
add
adc
int3
xchg
mov
mov
retf
outs
jmp
dec
shl
rcr
jo
fdiv
jmp
xor
call
pop
dec
cmp
mov
add
jnp
sbb
pop
push
add
clc
push
pop
push
inc
pop
gs
inc
mov
sti
fcomip
je
push
cmp
(bad)
dec
xchg
xchg
push
pop
lods
adc
out
leave
(bad)
lds
xlat
arpl
fadd
(bad)
cli
cmps
retf
retf
mov
loopne
xchg
fwait
sahf
out
ins
rcr
add
in
jl
mov
mov
mov
daa
les
mov
mov
jnp
sbb
xchg
dec
(bad)
ficom
adc
mov
imul
inc
outs
push
mov
mov
or
test
lods
(bad)
add
popf
sahf
out
mov
loopne
dec
xchg
sbb
sahf
(bad)
mul
sbb
cmp
loop
sub
scas
movs
and
push
push
and
push
lods
adc
xlat
(bad)
mov
std
xchg
(bad)
mov
pop
pop
pop
mov
sbb
sub
xor
dec
jae
sub
xchg
mov
gs
test
adc
cmc
add
pop
gs
pop
not
mov
loope
xchg
lods
shl
mov
push
xchg
addr16
or
jb
repz
mov
jnp
ja
jle
xchg
hlt
and
fsub
icebp
in
push
mov
fcmovnu
out
retf
scas
sbb
mov
rsm
xlat
dec
or
sbb
shr
pop
inc
sub
lock
loopne
xchg
lock
sar
adc
test
lea
scas
or
ret
sbb
das
xchg
cmc
hlt
pop
imul
mov
lock
cmp
test
icebp
or
js
sbb
fistp
rol
stc
mov
mov
inc
add
cmps
push
outs
push
pop
mov
test
hlt
add
adc
sbb
out
sub
(bad)
aas
movs
das
dec
cld
mov
out
jp
ins
ret
mov
sbb
xchg
shl
int3
mov
pop
sbb
cmps
lods
xor
repz
pop
ret
mov
(bad)
adc
rcl
pop
cmp
push
lea
sub
dec
out
jae
xchg
adc
xor
mov
shl
aam
aas
mov
mov
dec
adc
fdivr
xchg
scas
jb
push
xor
in
dec
sti
ins
in
xor
or
or
movs
xchg
xor
ins
(bad)
or
mov
out
fidiv
xor
cld
into
xor
jmp
xor
das
jmp
test
inc
inc
mov
fs
repz
js
add
lods
test
add
cmps
xor
mov
int
(bad)
out
clc
add
aad
sbb
je
into
jnp
and
dec
adc
mov
adc
js
imul
fidivr
sub
mov
ret
mov
test
jno
push
js
aaa
div
mov
cmps
stos
fs
adc
sub
or
sbb
int3
sbb
mov
lea
jp
outs
xchg
xor
fwait
imul
mov
pop
ins
mov
lods
test
cmp
inc
jl
fild
fucomip
and
xchg
or
loop
pushf
mov
ins
rol
cmp
pop
mov
xor
shr
push
or
es
push
mov
add
xchg
jbe
gs
xor
ror
adc
lds
test
push
dec
imul
xchg
mov
lahf
imul
mov
jmp
fnstsw
push
push
inc
hlt
fiadd
mov
mov
in
out
scas
not
mov
addr16
mov
jp
cwde
lea
shl
out
ja
push
cmps
push
push
imul
ja
nop
cmps
xchg
push
and
mov
jno
dec
sti
(bad)
mul
lea
push
push
cmps
mov
mov
pop
add
inc
mov
(bad)
fcomi
hlt
outs
pop
push
jle
ss
or
cmp
and
mov
sub
ud0
mov
or
pop
sbb
and
inc
popa
push
imul
mov
ins
jbe
stos
dec
pop
add
sub
ins
stc
add
xchg
fldcw
mov
push
pop
cmp
push
leave
sbb
mov
mov
daa
pop
pop
push
or
dec
mov
cmc
push
jns
movs
lea
push
test
jecxz
jmp
mov
pop
data16
dec
mov
mov
jb
aas
fnsave
mov
xchg
inc
xchg
(bad)
jl
cmp
or
push
xchg
add
xchg
jp
or
les
mov
in
je
mov
or
fistp
lods
enter
xlat
adc
inc
mov
fisub
adc
jge
out
mov
mov
fwait
or
xor
jo
mov
cmps
(bad)
push
push
mov
fwait
ins
sub
fwait
jmp
mov
cld
mov
sub
les
loope
loop
js
mov
or
xor
sub
fnstenv
jo
pop
fstp
jle
jge
sahf
hlt
xchg
stc
pop
scas
and
fdivr
iret
dec
xor
inc
sbb
popf
xchg
dec
cli
adc
push
mov
add
shr
ds
mov
xor
loope
enter
add
fcom
and
stos
stos
pushf
hlt
loope
shl
adc
fimul
adc
rcl
push
arpl
dec
fst
mul
dec
sub
jle
sbb
push
pop
add
push
add
add
jno
aas
xor
in
ror
hlt
es
imul
adc
in
lods
hlt
add
push
jno
push
jg
fst
sbb
cli
and
hlt
lahf
and
push
mov
lods
addr16
xor
mov
sub
cmp
jne
fistp
repz
loope
fld
sub
xor
loop
sbb
xchg
lods
test
cld
gs
sbb
jno
push
pop
mov
inc
dec
or
scas
mov
mov
xchg
push
mov
lock
sbb
lea
sub
jmp
mov
dec
iret
imul
fmulp
mov
push
clc
pusha
aam
(bad)
sbb
or
(bad)
js
mov
rol
pop
inc
dec
mov
mov
aas
sar
fld
popf
mov
(bad)
and
das
les
inc
add
stos
cmp
out
push
mov
mov
jbe
out
xor
sub
shl
and
push
inc
cmp
(bad)
rcl
add
push
inc
movs
inc
in
call
test
mov
mov
ficomp
jae
mov
in
mov
dec
and
xadd
popf
loope
inc
cmp
cmp
aaa
jno
arpl
mov
int3
dec
cmovae
ficomp
mov
test
dec
int3
sbb
sar
adc
fiadd
neg
mov
ficomp
fld
pop
or
jecxz
mov
jne
mov
pop
jle
or
js
add
adc
fadd
mov
pop
inc
dec
jo
outs
sti
jp
repnz
cmp
pop
push
std
out
fwait
inc
cdq
mov
sub
inc
push
xchg
mov
jno
mov
push
dec
mov
loop
jbe
pop
sbb
push
ror
inc
rcr
push
ret
adc
or
add
mov
fwait
xchg
out
repnz
jge
xchg
bound
xor
bound
in
inc
xor
add
cmp
addr16
and
lahf
loopne
dec
adc
jg
inc
scas
xchg
push
cwde
cmp
loop
fsubr
shl
retf
movs
fild
inc
sub
mov
mov
(bad)
mov
cmc
ror
in
push
sub
dec
mov
ins
inc
stos
dec
ret
rcl
sub
push
sbb
or
cmp
es
xor
xchg
or
push
dec
imul
xchg
push
fld
push
inc
in
xor
and
dec
ins
xchg
pop
fdivrp
scas
sub
enter
xchg
mov
sbb
xlat
mov
pop
lahf
nop
popf
(bad)
jmp
dec
mov
inc
mov
jae
retf
scas
shr
movs
js
add
xchg
push
pop
clc
add
loopne
add
sti
mov
cmps
cmps
push
fcom
dec
sbb
pop
xchg
xor
in
loop
repnz
mov
dec
icebp
mov
jns
test
cmp
mov
xor
cmps
jp
sbb
jl
pusha
and
or
lds
jo
(bad)
cmps
out
push
xchg
inc
nop
sub
add
frstor
adc
outs
jg
lock
(bad)
lods
imul
sub
sbb
xchg
inc
mov
scas
jmp
in
cli
and
xchg
in
loope
hlt
cmp
mov
sub
cmp
idiv
es
je
jae
jle
(bad)
dec
sbb
lods
jle
aad
add
test
mov
add
or
in
fnstcw
mov
jae
out
add
or
xchg
test
sbb
dec
icebp
test
fsubr
and
out
add
xchg
gs
inc
mov
jmp
and
sbb
jns
xor
xchg
ins
pop
inc
add
cli
adc
(bad)
stc
ins
fcmovnbe
mov
add
fild
popf
and
and
setno
adc
stos
or
leave
jo
push
push
mov
call
(bad)
xchg
out
adc
inc
xor
lods
push
(bad)
push
ss
sbb
jmp
xor
adc
push
das
cli
sub
inc
inc
sub
xchg
xor
cmp
jecxz
push
or
add
(bad)
outs
sti
das
jle
fs
(bad)
aas
jo
adc
jp
fstp
ss
mov
jnp
xlat
dec
mov
outs
dec
cmps
es
popa
cs
dec
cmp
loope
add
sbb
xchg
lods
xchg
pop
out
clc
xchg
push
mov
mov
inc
je
in
add
fld
sub
pop
or
push
xchg
adc
mov
lds
lds
es
sbb
xor
mov
xchg
les
inc
dec
(bad)
ffree
and
push
(bad)
fdiv
adc
mov
(bad)
enter
lods
dec
dec
mov
mov
mov
in
push
cmc
fild
inc
push
cmp
fs
shr
push
push
dec
mov
out
pop
call
ins
dec
inc
push
lahf
sub
push
aad
and
std
loope
sti
cdq
sub
xchg
fld
aad
scas
or
pop
(bad)
jecxz
sbb
pop
sub
adc
sub
adc
inc
pop
sub
adc
mov
or
fwait
adc
ins
sub
xor
stc
(bad)
cmp
xor
shl
pop
push
and
xlat
ss
leave
rol
xlat
push
push
sub
inc
cdq
into
and
div
jno
les
xchg
adc
fsubr
fmul
outs
test
rcr
fimul
inc
cmp
lar
push
dec
push
mov
lods
fisttp
or
adc
dec
inc
lds
pop
lds
inc
jmp
scas
cmp
sti
pop
movs
dec
push
mov
ins
test
inc
retf
and
imul
je
in
push
xor
xor
movs
mov
dec
into
dec
jb
inc
dec
xchg
js
fwait
pop
pop
int3
pop
inc
push
lds
pop
in
inc
dec
int3
(bad)
sbb
mov
inc
dec
or
lahf
mov
jo
addr16
and
xchg
mov
test
pop
jbe
pushf
and
xchg
out
(bad)
clc
int3
add
dec
jge
inc
mov
movs
jb
xor
push
or
mov
xor
jnp
mov
lods
or
adc
jg
mov
scas
xor
mov
fiadd
push
cmp
fsubr
sub
dec
xor
daa
pop
pop
add
xchg
dec
mov
(bad)
sbb
mov
and
mov
add
pop
inc
add
into
sbb
and
imul
mov
dec
xor
sar
or
ror
aam
adc
fadd
stc
and
sbb
in
clc
or
mov
test
(bad)
push
fld
mov
cmp
out
retf
mov
stos
mov
mul
(bad)
ror
xor
pop
fidiv
jg
enter
xchg
lods
adc
das
into
outs
ja
jns
outs
xchg
sub
int
inc
sub
cmp
adc
jmp
out
pop
movs
mov
movs
adc
pop
mov
sub
pop
stos
stos
fwait
cmp
(bad)
pop
(bad)
in
or
sub
test
and
inc
jmp
aam
or
sbb
cmps
bound
sti
mov
jg
xor
test
fbstp
xchg
add
push
aas
jge
mov
adc
call
ins
add
enter
je
sahf
sub
xchg
mov
mov
xchg
sar
out
push
dec
fs
lds
lock
mov
cmp
rcr
pop
dec
pop
shl
in
jmp
movs
jmp
mov
pop
adc
dec
punpckhdq
mov
sub
stos
adc
sub
inc
clc
or
lahf
mov
icebp
push
add
pop
pushfw
xor
inc
mov
aam
add
pop
sub
cmp
cwde
test
jae
inc
(bad)
(bad)
cmps
repnz
xor
jnp
out
xor
popa
retf
mov
int
mov
jne
nop
xor
inc
fnsave
sahf
stos
adc
jmp
pusha
scas
pop
pop
jmp
cmp
sbb
pusha
(bad)
and
push
in
hlt
jp
or
dec
rcl
jno
or
push
mov
test
cmps
jg
jg
cmp
sub
test
loop
loopne
hlt
scas
or
pop
add
jge
(bad)
int3
int3
dec
or
jnp
cs
add
mov
xchg
mov
dec
xor
jo
lods
(bad)
aad
clc
mov
not
das
sar
xlat
add
scas
pop
rol
cmp
leave
movs
ret
stos
sti
jmp
nop
add
cld
pop
pushf
mov
fs
stos
or
test
fild
jo
push
hlt
shl
mov
sbb
js
mov
sbb
out
movs
sbb
inc
mov
mov
ins
imul
dec
push
push
dec
stos
ja
xor
dec
mov
sbb
push
sbb
sti
or
fldenv
dec
test
in
sbb
daa
outs
jmp
aaa
stos
jno
(bad)
loope
iret
adc
fistp
sahf
cli
sahf
js
inc
mov
sub
xor
in
popa
(bad)
iret
mov
cmp
cmp
mov
sub
repnz
cmc
fs
je
and
arpl
or
inc
pop
mul
or
dec
inc
popa
xor
inc
dec
mov
mov
jge
scas
jbe
fwait
les
cs
mov
adc
imul
jbe
dec
jmp
addr16
cmp
pop
out
jne
sbb
fdivr
aad
out
mov
cmp
cwde
mov
(bad)
sahf
xor
and
push
jne
stos
test
lea
ror
lods
nop
mov
std
xor
pop
sub
mov
jbe
enter
xor
sub
sub
test
mov
mov
rcr
add
sbb
jne
popa
mov
pusha
pop
jno
pop
aam
pop
push
out
and
xor
stos
cwde
pop
dec
inc
mov
push
mov
out
hlt
pop
mov
jo
cs
jmp
push
(bad)
ficom
fdivr
mov
push
pop
inc
jp
mov
sub
cmp
loope
aam
adc
push
clc
mov
jmp
jbe
pop
test
inc
call
add
call
jno
or
xchg
data16
pop
xchg
jmp
cdq
jg
mov
xor
add
xor
xor
cmp
or
les
lods
outs
xor
addr16
or
mov
cwde
js
in
pop
loopne
sub
mov
cmp
loop
movs
mov
inc
stos
int
dec
push
dec
int
or
(bad)
cmp
cld
addr16
fimul
pop
shl
add
in
push
xor
cmovl
int3
cmp
loopne
push
ds
aaa
cdq
fwait
call
into
aam
stos
xor
loopne
fxch
push
sub
and
stos
and
push
sub
movs
inc
xchg
dec
or
sub
call
(bad)
ret
jl
fsubr
jbe
mov
pop
stos
sbb
movs
jmp
fwait
inc
repz
ret
in
push
scas
repz
mov
adc
mov
repnz
in
and
and
test
mov
sahf
icebp
or
sub
cli
ds
mov
jns
pop
cli
ins
js
or
out
pop
pcmpeqd
cli
and
xadd
and
loopne
aad
jns
lds
outs
mov
mov
push
mov
sbb
mov
sub
loope
jle
or
call
lods
xor
shl
jp
sbb
push
xchg
aad
push
push
sbb
and
(bad)
into
imul
push
(bad)
repnz
sbb
pop
rcl
call
imul
add
adc
sbb
dec
fisttp
dec
repnz
outs
push
ret
fidiv
pop
addr16
repnz
stos
arpl
inc
cli
pop
popa
cmps
sbb
into
jae
lds
aad
mov
cmc
test
inc
pop
sub
(bad)
ret
sbb
lods
out
and
repz
xor
sahf
sbb
dec
cli
imul
push
inc
imul
add
add
dec
push
mov
mov
bswap
push
aaa
sub
and
xor
movs
cmp
les
imul
sti
cdq
aad
call
in
cmps
jmp
nop
lods
pop
adc
xor
and
jo
and
stc
stos
fmul
push
mov
mov
push
or
push
jl
js
adc
gs
movs
push
and
(bad)
int
mov
mul
sbb
daa
hlt
xor
mov
mov
xchg
gs
and
add
push
xchg
mov
lock
div
fild
jle
dec
xlat
arpl
mov
pop
adc
mov
loopne
idiv
xor
pop
test
es
pop
xor
leave
test
cmp
ja
mov
sub
(bad)
out
cmps
jl
adc
scas
rcr
ret
push
dec
lock
mov
repnz
lods
(bad)
(bad)
fcomp
repz
cmp
cmp
fadd
push
movs
bound
dec
xor
jl
lods
jne
aaa
call
jmp
jns
xchg
jae
adc
fidivr
dec
hlt
and
dec
dec
lods
mov
fcmovnu
(bad)
xchg
or
adc
mov
js
cmp
inc
pop
lds
outs
pop
add
stos
int
push
pop
mov
xor
ins
popf
je
fldcw
mov
jle
push
test
cli
scas
pop
(bad)
xchg
sub
stc
mov
pop
test
mov
test
call
(bad)
cmp
mov
or
repz
xor
or
fsub
jmp
dec
jne
ins
ret
inc
xor
push
movs
cmp
ror
mov
fild
jns
js
iret
pusha
loopne
out
ds
lods
lock
pop
aam
jnp
setbe
cmps
sbb
xor
jge
scas
stc
pop
mov
mov
sbb
das
xchg
mov
icebp
ret
fisubr
dec
lahf
jo
shl
sbb
sbb
int3
push
jae
mov
inc
add
call
loope
add
jns
aas
aas
mov
adc
scas
fcom
out
add
inc
retf
mov
sbb
sub
mov
xchg
jg
mov
rol
sbb
pushf
or
mov
movs
inc
and
call
jns
pop
sbb
push
jae
nop
mov
push
add
dec
mov
mov
jae
retf
scas
stos
add
(bad)
push
push
pushf
loopne
xchg
fmul
mov
loopne
jo
push
push
or
test
jns
jo
cmps
push
imul
jl
(bad)
outs
movs
or
ror
add
ins
stos
popf
les
(bad)
movs
sysret
sbb
push
xor
jp
jnp
je
sbb
clc
or
or
push
sbb
push
sub
mov
in
stos
repnz
or
xchg
fmul
icebp
xor
sbb
arpl
dec
lods
sbb
cmp
fisub
mov
sub
ret
sbb
and
dec
outs
push
ins
pop
adc
cmps
ins
fmul
and
and
push
mov
(bad)
movs
xchg
adc
call
xchg
mov
or
sbb
jno
pop
leave
popf
add
mov
rcl
cdq
adc
push
dec
ret
pusha
lahf
in
fidiv
ds
in
jmp
daa
add
test
cmps
push
(bad)
jl
int3
mov
mov
xor
dec
inc
imul
in
xlat
push
jmp
push
inc
jge
push
fld
sub
push
aaa
xchg
sub
pop
mov
sti
push
ins
rol
push
loope
mov
std
or
retf
jmp
ins
xchg
sbb
mov
loopne
mov
ja
pop
cmp
inc
clc
cli
pop
popa
dec
dec
sub
sub
ror
ds
jnp
pushf
sub
or
sub
div
jnp
dec
stos
mov
inc
repz
(bad)
dec
test
das
mov
ficomp
jns
in
js
adc
into
mov
xchg
cmps
ret
sbb
xlat
leave
push
xchg
sar
std
and
jg
mov
ja
lock
daa
int3
mov
jge
mov
stos
cmp
daa
stos
cmp
aam
sub
lahf
xchg
inc
inc
xor
and
pop
and
rcr
jbe
pop
xchg
sub
call
shl
sub
int
cmps
pusha
or
retf
int
xor
jmp
and
in
xor
out
cmps
test
mov
cmp
in
ja
dec
rcl
sbb
rcr
icebp
loope
xchg
and
fadd
inc
fistp
repnz
add
(bad)
cmp
or
imul
imul
dec
pop
push
jmp
gs
ret
inc
adc
mov
mov
fdivp
xchg
inc
cmc
ins
xor
adc
add
xchg
retw
enter
add
cmp
xchg
inc
loopne
jmp
mov
mov
xchg
cmp
jmp
adc
outs
dec
fdiv
clc
daa
lods
lahf
push
sub
iret
xor
cmps
ja
xchg
mov
sbb
fnstenv
adc
(bad)
jmp
fisttp
in
xchg
rcl
retf
inc
adc
pop
dec
mov
and
cmps
pop
pop
inc
out
xor
sub
mov
je
ins
dec
ins
sbb
lahf
mov
ds
movs
sti
push
mov
mov
or
pop
inc
lock
outs
or
cmp
data16
ins
and
pushf
in
das
and
js
xchg
sbb
(bad)
aam
cmp
mov
stos
jbe
sti
sub
jp
movs
mov
and
into
xor
into
xchg
mov
mov
mov
cmp
mov
sbb
(bad)
popf
sub
loop
test
jo
idiv
mov
mul
add
in
(bad)
ss
mov
ret
(bad)
cs
dec
mov
xchg
js
add
push
rol
mov
movs
sub
xchg
in
push
xor
hlt
ja
in
ror
out
sahf
(bad)
sub
lahf
jo
ror
daa
(bad)
int
les
jb
mov
mov
retf
iret
lahf
nop
sub
scas
mov
imul
pop
xor
call
lods
push
push
jb
pusha
fisub
mov
ss
stos
popa
add
sbb
outs
fsubp
inc
loope
pop
scas
jle
sbb
pop
enter
jbe
push
mov
pop
mov
aaa
repz
cmps
stc
je
xlat
pusha
pop
stos
pop
cwde
into
and
pop
enterw
stos
and
rcr
sahf
inc
mov
ja
inc
sub
jl
sbb
add
sub
cmc
lods
ror
jle
push
icebp
aas
cli
outs
add
xchg
outs
push
neg
(bad)
(bad)
adc
add
push
pop
(bad)
loopne
or
jae
(bad)
bound
xor
and
cmp
mov
mov
sub
imul
mov
jne
lods
stos
push
add
arpl
xchg
outs
sti
sar
jae
call
mov
inc
xchg
loope
jecxz
or
jae
jnp
cli
mov
mov
out
lock
out
int
ret
out
jb
hlt
and
dec
mov
lods
scas
sub
cmp
in
and
es
das
dec
sub
in
jg
inc
fwait
test
lds
jl
mov
rcl
add
pop
aad
sbb
or
push
pop
jmp
(bad)
cwde
push
(bad)
mov
and
mov
lahf
cmp
out
xor
adc
xchg
popf
mov
xchg
cmp
pushf
out
sbb
ins
dec
cs
sbb
(bad)
cmp
je
cmp
adc
lods
int3
pop
and
sahf
mov
mov
lods
addr16
cmp
xchg
push
add
mov
cmp
dec
sti
fidivr
or
inc
les
ficomp
mov
jmp
jecxz
mov
sbb
es
cli
pop
adc
mov
inc
cmc
and
fisttp
fild
test
add
mov
shl
push
ret
cmp
ret
fbstp
add
mov
out
dec
ins
inc
hlt
jae
push
inc
xor
mov
jo
ret
int3
stc
xchg
mov
retf
loope
shr
or
xchg
xor
xchg
adc
and
sbb
mov
arpl
add
sub
jle
jne
iret
push
loop
cmp
sbb
ds
nop
inc
xor
sub
jecxz
fxtract
dec
mov
sbb
ret
sbb
icebp
adc
xor
cmps
and
jecxz
cmp
inc
sahf
ins
test
fwait
xor
daa
out
fs
push
scas
test
cld
inc
fst
(bad)
test
mov
shl
or
dec
jmp
sbb
daa
js
mov
mov
push
lock
test
inc
dec
ror
fnsave
in
and
mov
add
jns
mov
mov
call
out
(bad)
call
push
lods
repnz
imul
pusha
out
(bad)
push
scas
retf
mov
mov
add
addr16
into
or
sub
shl
iret
(bad)
in
or
jmp
data16
jb
pop
std
pop
cld
push
xchg
arpl
adc
imul
xor
sbb
dec
pop
test
loop
aaa
jle
xor
scas
fs
out
inc
sub
cmp
push
xchg
inc
shr
sub
jo
push
pop
pop
les
dec
jo
dec
pop
jbe
add
xchg
sbb
cmc
test
shr
sbb
jmp
sbb
jle
jecxz
leave
popf
scas
fwait
dec
sbb
dec
shl
push
jecxz
and
(bad)
sar
sub
pop
ror
mov
xchg
aaa
aam
jb
into
adc
jmp
mov
mov
cmps
mov
dec
int
sti
mov
movs
pop
mov
sbb
rol
push
out
dec
ja
inc
mov
sbb
fisubr
hlt
dec
(bad)
push
sub
into
sub
out
movs
and
outs
xchg
push
hlt
jb
mov
or
not
and
inc
inc
rol
into
iret
(bad)
shl
hlt
adc
inc
mov
or
fistp
sbb
inc
inc
imul
sbb
out
out
pop
add
mov
daa
popf
std
lea
call
daa
push
cli
jno
ret
clc
add
out
pop
test
arpl
dec
or
push
mov
repnz
mov
ror
or
test
sbb
and
pop
or
imul
push
hlt
imul
(bad)
ins
sti
sbb
hlt
lods
inc
data16
and
shl
adc
stos
sub
mov
dec
cmps
dec
lds
add
mov
movs
outs
fldln2
shl
jbe
xor
push
bound
xchg
stc
nop
je
jmp
xchg
pop
mov
xchg
sub
mov
loopne
inc
sbb
push
push
fisub
dec
(bad)
imul
and
mov
call
popf
jmp
fsubr
addr16
add
sbb
loope
xchg
mov
xchg
adc
arpl
push
out
push
in
add
push
(bad)
xor
pop
push
xor
test
sub
inc
jmp
pop
mov
xor
aas
es
xor
fs
ins
adc
fadd
cmp
sub
push
add
out
ds
jecxz
in
sbb
out
sbb
test
(bad)
fwait
mov
fimul
test
stos
mov
idiv
sub
movs
sbb
cdq
clc
and
ss
data16
jo
test
push
ins
jae
imul
adc
stc
shl
adc
xchg
inc
popf
pop
loopne
push
xchg
not
cmp
dec
mov
fsub
rcl
mov
clc
sub
pop
add
loop
popf
daa
cmp
cmp
adc
and
mov
mov
and
cmp
xchg
mov
retf
nop
add
jno
dec
push
mov
sahf
test
xor
and
retf
or
(bad)
pop
pop
ret
dec
scas
aad
push
or
cmp
ss
add
mov
push
jmp
les
call
ins
jbe
and
(bad)
outs
test
in
and
ins
inc
ss
and
push
xchg
cmps
jno
call
inc
mov
test
pop
sub
dec
dec
cmps
std
shl
xchg
lock
adc
push
sbb
fsubr
out
inc
push
fmul
sbb
xor
gs
nop
adc
cmp
and
cmp
in
jmp
shr
imul
add
sbb
or
or
push
pushf
test
mov
dec
jg
das
adc
xlat
(bad)
call
cs
aam
mov
lods
jl
or
mov
or
inc
or
outs
mov
sub
mov
inc
scas
je
(bad)
cmp
inc
in
sub
nop
xor
or
(bad)
dec
fwait
test
(bad)
clc
retf
(bad)
mov
jae
add
adc
mov
or
pop
xchg
cli
nop
outs
(bad)
add
daa
cmps
mov
dec
lahf
mov
ins
sahf
inc
push
and
sahf
pop
add
int3
or
cmc
mov
mov
lds
lods
stc
test
std
push
xchg
outs
push
scas
add
loope
xor
pop
neg
mov
sbb
pop
cs
dec
xchg
addr16
cmp
rol
or
mov
lods
out
(bad)
outs
stc
in
cmc
pop
adc
xlat
push
sahf
add
add
jmp
mov
aaa
jo
adc
test
out
fnstcw
add
ret
vmwrite
iret
iret
inc
mov
mov
sub
sti
jge
push
mov
sbb
test
and
imul
cmp
jg
loop
inc
out
jge
les
adc
cmps
in
add
sub
pop
mov
fadd
dec
fsub
or
in
fs
ss
rcl
dec
push
xchg
es
rcl
(bad)
repz
or
inc
test
xor
jl
arpl
or
pusha
jne
add
cmc
xchg
loop
test
test
(bad)
pop
dec
rcr
inc
xchg
mov
xor
xchg
retf
xchg
jbe
push
addr16
jp
xor
icebp
cs
sub
add
retf
inc
(bad)
(bad)
(bad)
push
(bad)
and
mov
(bad)
jae
popa
mov
dec
or
inc
xor
jg
pop
ds
sti
call
mov
or
inc
aad
or
outs
pushf
jmp
pop
xchg
push
outs
call
pop
xchg
cmps
icebp
pop
pop
outs
out
into
push
retf
pop
loop
hlt
(bad)
jge
inc
daa
xor
push
xlat
arpl
es
xchg
xchg
sbb
xchg
in
(bad)
xchg
and
xchg
mov
mov
cmp
push
dec
in
out
inc
mov
sub
mov
jnp
mov
and
inc
mov
bound
inc
cmps
movs
sbb
xor
pop
sbb
jmp
adc
xchg
out
cmp
data16
js
jg
ds
mul
repz
int3
scas
cmp
jne
mov
or
mov
repnz
arpl
dec
not
dec
add
movs
repz
sbb
jg
rcl
push
nop
(bad)
rol
mov
shl
sbb
or
cmp
imul
fsubr
mov
std
jnp
into
and
push
fisttp
(bad)
scas
pop
xchg
clc
fild
add
sbb
push
mov
hlt
(bad)
push
ss
sub
fmul
out
mov
ins
es
cmp
add
clc
mov
test
push
cmpps
push
cwde
je
add
push
leave
push
mov
mov
ret
shr
sahf
xchg
outs
aam
pop
fwait
or
adc
pushf
das
(bad)
cwde
mov
xor
mov
mov
xor
mov
aam
dec
mov
test
sbb
dec
push
lods
hlt
out
pop
pop
inc
shl
(bad)
mov
inc
cmovle
add
lock
(bad)
xchg
mov
push
outs
or
push
popa
and
addr16
inc
std
or
push
push
lods
pop
inc
and
sahf
sti
and
sahf
inc
pop
and
dec
addr16
pop
js
mov
movs
add
jecxz
mov
ret
mov
movs
and
and
pop
jne
mov
dec
pop
xlat
les
cs
cmp
fdivr
icebp
inc
ja
fsubr
sub
push
fchs
push
ficomp
iret
dec
fisubr
push
mov
pushf
sub
inc
sti
outs
mov
fsub
dec
dec
shl
and
mov
ss
add
(bad)
fld
dec
sbb
stos
jne
xchg
(bad)
shl
jp
push
bound
inc
add
and
test
cmc
aam
mov
lods
xor
lahf
sub
ins
cmps
pop
inc
loopne
popa
cmps
ss
daa
or
inc
pop
ds
stos
jo
add
sbb
shl
stos
(bad)
stc
or
fld
movsx
inc
add
dec
lods
sbb
adc
sub
fwait
das
sub
push
not
cmp
jle
and
and
call
jbe
sub
pusha
aam
rcl
daa
inc
xchg
fild
lock
jg
push
les
sbb
xchg
test
xchg
mov
in
xchg
leave
lahf
sub
(bad)
fsubr
in
(bad)
out
outs
jg
xchg
push
xlat
push
test
jae
sbb
das
mov
and
mov
mov
add
stos
jae
dec
in
adc
dec
mov
add
add
inc
push
dec
in
stos
cmp
push
xchg
ins
sbb
jecxz
test
movs
in
out
neg
rcr
push
or
jg
or
push
add
rcr
push
mov
mov
nop
lahf
xchg
adc
dec
mov
push
data16
fs
lock
sub
pop
jmp
fistp
mov
mov
add
cmps
mov
(bad)
dec
jg
mov
dec
ret
leave
sbb
ins
mov
cli
loopne
mov
ins
mov
mov
cwde
ds
cli
add
xor
pop
dec
jge
sub
jbe
loop
jmp
shl
lock
or
push
lods
out
jae
sbb
scas
cmp
rcr
or
pop
fsub
or
xchg
mov
cld
(bad)
cmp
push
pop
mov
into
and
push
out
cmps
stos
iret
sbb
sub
jne
fcom
mov
dec
cmp
pop
push
xor
mov
pop
arpl
inc
dec
cmp
arpl
or
not
jae
xor
ret
mov
xchg
jl
mov
push
int3
add
jp
arpl
add
mov
mov
int
mov
repz
cs
add
(bad)
(bad)
jp
mov
ret
cwde
(bad)
js
test
mov
adc
jb
inc
mov
mov
and
lock
xor
mov
inc
pop
mov
jns
shl
mov
or
int3
in
and
loop
(bad)
sub
lods
aas
push
xlat
xor
lods
jle
je
fmul
inc
dec
pushf
mov
lahf
cmp
jne
push
repz
cmps
pusha
fdiv
sbb
pop
or
cdq
(bad)
fiadd
sub
sbb
dec
sbb
mov
xchg
(bad)
addr16
imul
mov
dec
sub
std
call
test
add
in
dec
mov
add
lods
mov
cs
dec
fistp
jl
mov
xor
fimul
xor
mov
outs
mov
outs
sub
imul
lds
pop
in
imul
jmp
out
cmp
dec
and
ja
sbb
jbe
ret
xor
inc
pop
ins
dec
or
add
dec
getsec
mov
jecxz
fdiv
or
fist
or
data16
cld
mov
dec
adc
xchg
lock
popf
jl
daa
or
pop
out
rcr
scas
inc
imul
scas
sub
add
jmp
gs
xchg
mov
lea
imul
or
xor
or
dec
and
mov
pop
push
test
aas
out
jns
xor
stc
mov
arpl
jmp
xchg
in
mov
dec
inc
xchg
movs
(bad)
lods
push
pop
mov
xor
dec
inc
inc
nop
cmp
jo
out
js
sub
push
add
xchg
js
add
jecxz
call
xor
xchg
jb
add
or
loope
add
add
add
stc
test
les
stc
mov
ins
push
lar
cs
(bad)
mov
and
cmp
or
pop
adc
loope
nop
repz
lea
dec
ss
jb
xor
test
pop
int3
xchg
add
lock
jns
cmp
cmps
mov
test
mov
cmp
jne
mov
cmps
outs
jo
push
imul
xchg
daa
mov
jbe
add
shl
test
add
iret
add
mov
ins
repz
cwde
mov
pop
pop
fcmovu
int
mov
sub
sbb
in
test
dec
dec
pop
lds
(bad)
adc
jmp
ja
add
xor
call
(bad)
xchg
push
push
addr16
mov
mov
and
int3
cmp
lea
out
sti
rol
cmp
dec
jns
loopne
jle
stc
jmp
push
inc
dec
pop
pop
pop
mov
jge
(bad)
lods
scas
lds
dec
adc
lock
xor
imul
shr
xchg
xchg
arpl
mov
mov
(bad)
jae
adc
sti
iret
loop
and
cmc
data16
movs
cmp
dec
push
sub
test
rol
or
pusha
repnz
adc
or
adc
or
cmc
pop
lock
(bad)
xchg
inc
cmp
mov
xchg
outs
add
iret
ds
cmp
arpl
add
xor
jmp
test
test
aam
nop
inc
jns
jbe
ds
push
outs
push
icebp
in
mov
(bad)
retf
nop
sbb
xor
cmp
nop
dec
mov
adc
push
cli
in
adc
std
mov
add
push
fiadd
loopne
inc
pusha
into
sar
(bad)
loope
jmp
cmp
ret
adc
dec
inc
pop
int
ret
inc
and
(bad)
je
add
xchg
sub
rcl
idiv
xlat
xor
xchg
lahf
xchg
loope
test
cmp
call
loop
mov
push
ja
psubsw
jl
cmp
loopne
in
adc
lock
iret
(bad)
repz
call
push
inc
imul
nop
jg
cmp
aam
movs
dec
push
and
rcl
out
cs
repnz
jbe
xchg
xchg
and
lock
sub
pop
adc
fwait
mov
in
jo
and
imul
pop
mov
shr
mov
bound
repnz
test
sub
in
pop
jl
or
jae
fwait
mov
adc
mov
out
(bad)
fwait
sbb
xor
mov
push
pop
ins
pop
cld
adc
rol
sub
(bad)
aas
xchg
mov
test
jp
test
adc
xchg
mov
dec
leave
cmp
mov
aad
sub
pop
les
sbb
lods
arpl
(bad)
icebp
sub
xchg
sbb
ds
add
adc
dec
pop
pop
popf
xchg
into
mov
jb
cmps
ja
addr16
cmps
test
int3
lds
pushf
push
inc
cmc
jecxz
pushf
leave
in
js
cmps
and
adc
pop
fld
scas
push
(bad)
lods
jb
jb
retf
jg
cmp
mov
and
imul
aad
dec
jecxz
sub
es
jge
dec
dec
in
pop
sbb
sub
jno
std
jmp
adc
sub
cld
ss
mov
mov
mov
std
add
fs
fs
dec
mov
test
jecxz
popa
stc
mov
leave
sbb
or
pop
addr16
mov
xor
adc
iret
add
clc
mov
les
xchg
push
jge
mov
(bad)
xor
loopne
adc
fidivr
sub
sti
and
adc
sub
pop
push
mov
sbb
imul
retf
pop
stos
lds
sbb
push
std
push
xor
mov
int3
push
test
mov
retf
shr
mov
repz
(bad)
mov
jle
xor
mov
cmp
dec
rcr
cld
les
imul
arpl
and
push
cld
dec
mov
ss
cmp
(bad)
jp
inc
mov
xchg
sbb
ret
xor
hlt
xor
lds
arpl
xchg
retf
xchg
in
jb
xchg
aaa
or
cs
jge
psubsw
sbb
(bad)
out
mov
sub
mov
pop
popa
add
mov
add
std
ret
mov
hlt
pop
sbb
sub
or
cmps
inc
js
mov
add
arpl
retf
mov
sbb
aam
test
iret
jmp
std
jae
push
into
sub
cmps
cmc
jb
sub
jbe
inc
fstp
movs
je
jle
cmp
mov
xor
lods
in
into
les
or
scas
loope
lods
gs
iret
into
mov
daa
lock
xor
cmp
or
sub
out
pop
repnz
push
in
call
sub
fbld
nop
jbe
mov
mov
mov
mov
dec
mov
sar
xchg
push
cmp
pushf
in
mov
sub
popf
mov
pop
jno
cmps
or
jp
adc
stos
icebp
inc
jns
mov
xchg
outs
adc
and
sbb
cmp
pop
xchg
jmp
dec
dec
add
cmps
pop
hlt
maxps
adc
test
xor
ds
xchg
shl
mov
repz
xlat
mov
xchg
les
stc
push
cld
mov
and
shr
icebp
inc
cmp
pop
mov
sbb
mov
sahf
hlt
retf
loop
mov
add
mov
sbb
or
xchg
jge
cwde
sub
pop
xchg
push
dec
sbb
xchg
jge
xchg
imul
xchg
pop
mov
mov
call
jp
in
sbb
js
sub
leave
adc
shl
jmp
frstor
jno
jge
mov
imul
sbb
test
add
mov
pop
sti
pop
mul
or
adc
call
aas
jge
mov
mov
and
or
in
repz
or
sahf
call
imul
cmp
mov
dec
push
fnstcw
add
xor
cmp
es
xchg
xchg
ror
mov
es
rcr
mov
mov
xchg
dec
push
and
(bad)
int
pop
adc
push
cwde
add
cmp
iret
(bad)
out
ins
int3
sub
ins
mov
adc
iret
rcr
mov
je
(bad)
(bad)
es
pushf
fwait
and
fwait
loope
jae
and
fxch
idiv
call
outs
movs
push
xor
mov
(bad)
mov
(bad)
adc
mov
xlat
ds
push
sar
lods
mov
push
push
cdq
push
leave
bound
or
ds
jbe
adc
mov
and
push
jns
pextrw
sbb
addr16
(bad)
scas
std
imul
test
test
sub
dec
popa
pop
xor
(bad)
xchg
das
cmp
movs
out
int3
pop
cli
dec
repnz
push
mov
out
adc
paddb
jmp
shr
inc
popa
xchg
ret
nop
mov
imul
and
in
sub
add
cwde
xchg
sub
xchg
push
loopne
fwait
mov
in
mov
jmp
dec
xor
pop
jecxz
xchg
jns
jmp
stos
mov
dec
(bad)
jb
cdq
repz
xchg
dec
ret
repnz
stos
or
cmps
mov
cwde
jge
add
enter
stc
mov
adc
inc
test
adc
shr
retf
xchg
or
push
and
cs
out
inc
jo
jb
jecxz
mov
jp
xchg
pop
(bad)
loopne
movs
aas
std
pop
addr16
dec
cld
lods
jp
ds
pop
test
aas
push
outs
mov
(bad)
jbe
push
mov
fstp
sbb
push
xor
dec
mov
jg
or
push
adc
dec
mov
xchg
je
pop
stc
push
shl
lods
add
jbe
mov
out
inc
or
cmp
add
mov
jge
data16
jmp
shr
cmp
push
loope
outs
pop
sbb
hlt
sub
push
inc
xchg
lods
push
pop
mov
jbe
int3
dec
sub
gs
jne
je
add
mov
pop
push
stc
sbb
test
jmp
and
or
std
stos
dec
push
aas
mov
scas
bound
and
and
arpl
mov
or
imul
jne
call
cmp
lods
ret
dec
lock
jmp
ins
jp
mov
cmps
mov
jecxz
sbb
xchg
jb
inc
and
imul
lea
movs
lea
aas
add
sbb
cmp
pop
pop
pop
ds
aad
mov
xor
inc
jae
cld
test
sbb
dec
repnz
jmp
cmp
lahf
pop
cmp
add
mov
and
dec
mov
jnp
inc
(bad)
xchg
rep
xor
xchg
mov
mov
push
movs
cwde
out
mov
mov
mov
jmp
fidivr
retf
std
test
jmp
mov
sbb
test
out
adc
repnz
inc
lock
ss
inc
in
xchg
loop
mov
mov
mov
jge
add
dec
js
jp
ror
jmp
jb
cs
aad
and
mov
push
das
jge
jae
push
ficom
dec
adc
out
xchg
mov
rcl
into
dec
cmp
or
or
ret
setl
adc
add
xor
or
fwait
sbb
dec
inc
pop
dec
push
xchg
push
outs
cmp
jno
push
mov
fistp
aaa
not
mov
test
mov
sbb
pop
ss
lods
vsqrtps
lds
xchg
rcr
rcl
xor
gs
pop
jle
stc
mov
ds
(bad)
mov
mov
inc
or
inc
xchg
mov
in
pop
adc
cmp
aad
dec
add
shl
scas
shl
std
pop
arpl
mov
test
adc
lods
adc
nop
inc
inc
pop
dec
xchg
mov
add
fwait
loop
dec
pop
jbe
cmp
fsubr
or
repz
dec
add
stos
mov
js
pop
or
or
cwde
lahf
fcmovnbe
dec
inc
outs
xor
sbb
sbb
(bad)
outs
fdivr
lods
addr16
jae
vorps
or
iret
cli
fbstp
cmps
shr
imul
xlat
mov
sub
popa
loopne
dec
or
mov
fwait
cmps
aad
xor
imul
mov
dec
ins
jns
push
ins
popa
pushf
shl
mov
dec
retf
and
fcomp
nop
pop
mov
dec
cmp
into
or
cwde
jo
jns
out
lods
add
xlat
jmp
test
mov
cdq
(bad)
sbb
mov
mov
inc
mov
push
mov
inc
lahf
test
add
push
push
push
xchg
add
mov
cmps
pop
leave
and
jae
neg
inc
cmp
jge
out
(bad)
es
clc
and
and
push
push
aad
movs
mov
jbe
sbb
test
and
stc
pop
dec
jnp
inc
and
daa
mov
or
test
mov
dec
lock
xor
cld
cli
dec
ss
add
sbb
mov
or
retf
(bad)
sahf
mov
(bad)
loop
fistp
(bad)
jbe
ds
enter
or
inc
sub
jmp
out
fisubr
pop
pop
sti
es
jne
jae
rcr
push
fst
dec
lock
clc
lock
mov
mov
mov
fwait
das
mov
mov
push
mov
inc
test
dec
mov
xor
test
and
mov
test
movs
pop
ins
cmp
loope
(bad)
fisub
and
adc
pop
pop
mov
test
dec
adc
in
add
popa
jae
(bad)
pop
push
pop
aam
push
xchg
jmp
lods
jns
test
ins
jnp
cdq
dec
jbe
pop
movs
cmp
fcmovb
jbe
jge
shr
sti
mov
adc
ds
dec
sbb
or
in
into
or
jns
push
mov
add
imul
imul
call
das
in
call
shl
jae
mov
dec
inc
lds
pop
gs
or
icebp
and
movs
imul
sub
retf
aad
jge
mov
push
daa
push
int
mul
test
ss
aaa
sub
and
adc
lock
inc
xchg
xor
add
sub
js
fiadd
add
vpsubw
adc
xchg
aaa
jge
mov
hlt
mov
push
dec
or
(bad)
fmul
test
mov
rcr
fs
ret
imul
dec
nop
jo
sbb
sbb
sahf
ds
xchg
adc
cld
aas
inc
dec
jo
dec
cwde
mov
fbstp
dec
int3
sahf
sub
mov
xor
dec
adc
and
ficom
sub
addr16
add
cdq
or
dec
loopne
sub
and
xchg
sbb
movs
into
cld
popf
add
add
jmp
mov
lahf
xchg
pop
jg
out
cmp
scas
repnz
test
push
outs
push
dec
mov
pop
add
fmul
sbb
and
xor
das
adc
pushf
adc
bound
repnz
aad
and
int3
sbb
sub
mov
inc
adc
jmp
jmp
jae
mov
leave
addr16
inc
jnp
xor
adc
aaa
mov
or
mov
mov
stos
in
mov
jbe
and
ret
pop
add
je
add
imul
mov
call
pop
dec
sub
inc
inc
fxtract
xor
fld
mov
icebp
in
imul
stc
mov
repnz
fidivr
adc
lock
imul
add
sti
retf
stos
std
into
lahf
iret
loope
ror
xchg
int3
pop
add
aas
cmp
adc
jecxz
jge
je
jge
cmps
and
int
pop
inc
inc
adc
push
cmps
shl
push
push
out
xor
rcl
push
imul
push
into
mov
cs
test
rol
inc
dec
sub
fadd
add
inc
adc
daa
icebp
or
fldenv
or
(bad)
in
mov
xchg
(bad)
pop
adc
push
std
retf
mov
push
mov
clc
test
push
ror
pop
dec
shl
xchg
ins
cmp
lahf
jmp
shl
repz
ja
xor
int3
inc
sbb
sbb
xchg
mov
loopne
fisttp
sub
icebp
mov
sbb
(bad)
repz
push
pop
mov
lds
clc
cmps
(bad)
ins
sahf
jmp
mov
inc
mov
adc
cmps
dec
test
pop
mov
inc
inc
inc
popa
pop
neg
sbb
cli
movs
and
aas
fwait
arpl
shr
pusha
cmp
pop
xor
jecxz
stos
and
rcl
add
xchg
fmul
dec
or
xchg
or
push
or
outs
or
cmp
cmp
popa
xchg
outs
cmp
cmp
cmp
mov
jno
jbe
xor
mov
dec
es
fistp
xor
in
cmp
xlat
jns
xor
div
pop
clc
arpl
push
mov
push
ds
adc
call
scas
mov
inc
test
xchg
adc
pop
js
add
lock
ins
call
inc
mov
sar
jno
or
dec
ror
out
aam
test
jo
outs
lea
inc
mov
jmp
jle
inc
out
int
cmp
pop
lahf
test
icebp
mov
mov
sub
(bad)
mov
iret
popa
inc
paddq
out
pop
xor
in
lods
mov
jo
aaa
mov
stc
pop
jnp
inc
cdq
cmp
(bad)
out
or
mov
and
scas
aam
out
lock
mov
icebp
scas
outs
jns
in
mov
ins
je
cmp
sbb
sahf
jmp
repnz
rcr
sar
xchg
mov
and
imul
movs
and
ds
test
xor
test
pop
push
sbb
fwait
cmp
pop
stos
xor
xor
ret
xor
mov
adc
or
pop
int
mov
mov
loopne
arpl
xchg
(bad)
faddp
test
test
push
fistp
sti
test
sub
out
js
call
mov
xchg
add
cmp
int
add
xchg
test
or
imul
pusha
ret
cmps
push
xlat
mov
cwde
pop
xchg
or
addr16
rcr
jmp
and
jle
js
xchg
inc
mov
fidivr
jmp
push
loop
stos
push
stc
jmp
mov
cdq
out
in
mov
imul
mov
fcom
test
or
jno
std
jns
pop
adc
and
retf
mov
stos
int3
cmp
mov
retf
dec
lods
add
stc
das
and
mov
das
dec
mov
push
pop
mov
push
sub
sbb
sar
inc
pop
xlat
ret
pop
cmps
test
fcom
fldcw
cmc
xchg
sti
jno
ss
jge
ss
and
mov
sbb
fimul
mov
sbb
int3
and
cmp
mov
jo
movs
cmps
cwde
fmul
mov
ret
push
pushf
sub
sbb
and
in
and
pop
mov
push
mov
bound
icebp
retf
cld
xchg
test
leave
xchg
stc
or
push
mov
aaa
jge
cmp
mov
int3
int
xor
mov
das
int3
retf
adc
repnz
fisttp
in
sahf
jae
pop
cwde
push
cdq
ret
xchg
inc
in
mov
xor
cli
pop
add
lahf
jecxz
jno
jp
xchg
call
jb
mov
cmps
ror
cmp
mov
test
lods
bound
mov
cmp
daa
mov
or
imul
dec
leave
aam
shl
stc
sub
call
ins
in
imul
push
cwde
mov
xlat
sub
pop
xor
xor
xchg
lods
mov
mov
mov
cmp
(bad)
sbb
dec
add
ds
xor
push
and
inc
mov
mov
mov
xlat
out
add
mov
cmp
dec
imul
xlat
cmp
cmp
ss
stc
popf
ds
mov
xchg
call
stos
sub
mov
add
jmp
test
add
xchg
jmp
cmps
fcomi
sbb
out
cmps
(bad)
cmc
sbb
mul
and
mov
punpckhwd
in
cmps
inc
cmp
outs
or
inc
lock
sbb
jp
aad
cli
stos
push
mov
sub
xlat
ins
sub
mov
jo
(bad)
pop
jge
cmp
jle
arpl
add
nop
pushf
mov
xchg
(bad)
mov
pop
push
jae
or
stc
push
js
xchg
mov
(bad)
scas
pop
pop
cmp
out
movs
loope
stc
cs
mov
pop
dec
push
ror
repz
aam
mov
mov
push
xor
push
ja
sub
sub
cld
ja
pop
int3
pop
jnp
js
jnp
push
inc
into
call
add
inc
cmp
add
test
xor
pop
loop
push
mov
mov
lock
xor
jbe
inc
enter
fsubr
sub
out
out
clc
pop
sub
jp
mov
sbb
push
in
pop
mov
in
shl
dec
xchg
(bad)
movs
bound
add
test
pushf
mov
cmp
inc
mov
jb
ds
mov
fmul
sbb
or
retf
in
mov
adc
sub
xor
dec
aam
sti
int
enter
shr
movs
arpl
and
pop
push
sub
pop
mov
inc
mov
(bad)
mov
mul
shr
push
xor
sahf
retf
cmpxchg
add
mov
jbe
inc
jae
fidiv
xchg
int3
je
jo
mov
int
inc
and
mov
retf
stos
int3
rcl
aaa
cmp
and
adc
aad
std
fucomp
in
(bad)
cmp
inc
mov
out
xchg
add
mov
push
mov
and
cdq
sbb
ret
or
add
inc
dec
pop
fistp
mov
ds
inc
and
inc
test
mov
mov
inc
mov
icebp
mov
test
js
aas
add
fs
icebp
mov
or
mov
in
pop
iret
push
add
fsub
pop
xchg
xchg
popa
aas
fcomp
cmp
dec
lods
aas
movs
retw
sub
cmp
adc
inc
sub
shr
mov
retf
add
inc
pushf
pop
add
fwait
push
fld
ret
pushf
(bad)
jo
cld
retf
sub
repnz
arpl
mov
in
sti
pop
push
sub
sub
push
jns
(bad)
fcom
mul
imul
je
xor
(bad)
mov
lock
les
push
inc
movs
test
pop
adc
mov
mov
test
pop
jbe
scas
fild
xchg
loopne
mov
sub
adc
and
xor
fwait
pop
loopne
pop
xchg
sub
lahf
imul
xchg
add
rcr
hlt
add
and
lock
adc
pusha
sbb
jno
popf
xor
leave
imul
pusha
pop
dec
hlt
repnz
jg
pop
cld
test
fisubr
pop
fiadd
das
mov
push
inc
cmp
pshufw
jl
test
fs
and
sbb
pop
pushf
pop
fnstsw
jns
push
in
xchg
jmp
je
ret
mov
jbe
imul
in
pop
ds
pop
sbb
mov
or
or
cmp
fidiv
lds
mov
xlat
inc
sti
and
jne
hlt
int3
and
xchg
lea
xor
popf
(bad)
aas
push
adc
pop
cmp
or
ja
fdiv
push
fsubp
push
btc
repnz
xchg
cmps
cmp
iret
sub
div
sti
ror
inc
adc
and
arpl
pop
xchg
and
into
repnz
in
ds
mov
popa
mov
into
mov
push
jne
pop
scas
in
in
cmc
inc
shr
dec
sahf
repz
mov
sub
pop
mov
and
or
xor
xlat
pushf
mov
(bad)
or
(bad)
ja
mov
cs
dec
addr16
sti
push
(bad)
ins
add
cwde
ins
and
push
sbb
scas
cld
popa
cmp
push
stc
jnp
and
jmp
call
(bad)
jbe
push
retf
add
cmp
aad
das
cli
das
lock
sub
std
xchg
in
cmps
mov
rcr
repz
repnz
xchg
add
xor
lods
or
rcl
add
aad
add
or
int
adc
jge
xchg
push
jns
push
sbb
xor
ror
cdq
cld
jl
into
outs
jp
cmp
sti
lods
daa
xchg
mov
inc
out
xchg
mov
dec
adc
pushf
jnp
(bad)
enter
lahf
add
pop
adc
sub
lea
sbb
mov
xchg
stos
dec
outs
fwait
jg
sbb
adc
xor
jns
jns
sub
in
lahf
adc
mov
cwde
daa
retf
push
repnz
aas
dec
mov
jl
jmp
adc
mov
inc
ins
pop
sti
or
fbld
sub
xchg
icebp
arpl
(bad)
mov
mov
test
pop
icebp
or
out
sbb
dec
inc
shl
(bad)
clc
fimul
inc
ds
fmul
sbb
jns
out
repz
mov
or
daa
xor
cmp
pop
in
add
mov
test
cs
retf
shl
mov
rcr
add
leave
jle
es
and
pop
enter
pushf
mov
xchg
out
adc
dec
retf
pop
mov
inc
stos
xor
jb
daa
dec
into
cmp
popa
pop
dec
xchg
cmp
std
and
sub
aad
call
jg
adc
pop
push
loopne
xchg
fmul
push
hlt
add
mov
inc
loope
fcmove
adc
sbb
movs
or
or
mov
push
ja
add
xchg
dec
mov
sub
dec
retf
adc
mov
test
jle
jl
nop
cmps
stos
jg
xor
fcmovnbe
(bad)
std
cdq
out
sub
push
in
mov
sbb
xor
pop
imul
mov
and
dec
sbb
jae
mov
ja
mov
or
inc
pop
push
mov
(bad)
fstp
mov
in
aaa
lds
dec
xchg
jp
pop
mov
ret
cld
retf
sub
cmp
dec
and
mov
jae
out
add
add
push
push
sub
xchg
or
cmp
stc
jmp
xchg
or
lds
xchg
mov
test
or
xchg
aam
cmp
std
fimul
daa
les
and
cs
mov
mov
daa
aas
xchg
int
(bad)
jge
cmp
std
ins
pop
loope
jnp
data16
in
xor
push
inc
mov
jg
nop
cld
mov
enter
inc
(bad)
mov
stos
cmp
stos
dec
or
pop
mov
hlt
pop
cli
sub
pop
retf
mov
repz
mov
outs
out
inc
mov
and
loope
jmp
or
sub
rol
call
push
repnz
push
and
repz
jecxz
push
adc
das
add
aam
jne
(bad)
lods
and
stos
jae
std
outs
jge
jp
adc
xchg
stc
arpl
push
pop
and
mov
dec
adc
(bad)
aaa
arpl
cmp
iret
or
adc
imul
and
inc
out
dec
stos
inc
ins
push
outs
xchg
mov
sbb
cli
dec
mov
enter
and
sub
sub
popf
and
jge
and
std
(bad)
mov
ins
es
ficom
cdq
cwde
mov
pushf
jno
rcl
cmp
jns
xor
xchg
jbe
out
fsubr
neg
jp
or
(bad)
fcom
and
aaa
repnz
mov
mov
sahf
mov
xchg
arpl
xchg
fdivr
jmp
stc
fist
sbb
addr16
test
xchg
cmps
dec
ficom
add
inc
pusha
loopne
mov
scas
retf
adc
fld
xchg
sbb
and
xchg
or
stos
ret
cmp
aaa
xlat
xchg
pop
inc
dec
xchg
xor
lods
movs
aaa
ds
mov
in
int3
aaa
sbb
mov
push
cmp
adc
icebp
inc
loop
jmp
inc
or
jecxz
or
sbb
rcl
and
sbb
ins
jp
pusha
stc
movs
cs
jl
lds
stos
test
fwait
outs
(bad)
xchg
mov
mov
ret
rcr
ret
jnp
ficom
loop
jb
inc
and
in
sbb
enter
mov
push
loop
stos
mov
sbb
dec
pop
mov
mov
data16
and
movs
and
popf
ror
fidiv
mov
mov
icebp
xchg
sub
inc
pushf
inc
mov
mov
jnp
dec
mov
lods
int3
scas
loop
fcomip
sbb
jmp
mov
je
aaa
scas
xchg
xor
adc
xchg
test
pop
cmp
cli
shl
jnp
mov
(bad)
push
(bad)
in
lds
push
popf
sub
cdq
inc
arpl
and
push
inc
fstp
stos
imul
xchg
pop
cmp
xor
sbb
ja
cmp
out
pop
shr
ins
mov
and
dec
mov
fwait
jp
cs
std
sub
mov
out
sub
outs
ret
xor
add
ja
jecxz
and
in
sub
pushf
(bad)
call
cmp
pusha
inc
push
lods
out
cmp
(bad)
fmul
outs
and
jnp
into
call
gs
and
sub
out
xchg
push
arpl
jg
sub
in
push
sub
shl
mov
mov
fimul
data16
cmp
ss
mov
pop
xchg
ins
xor
add
lods
or
lahf
shr
push
int3
jns
add
das
(bad)
ins
cmps
mov
(bad)
pop
adc
add
loope
xchg
xor
xor
addr16
sbb
push
mov
out
sbb
pop
rep
push
dec
lahf
sbb
pop
shl
sub
call
or
push
jae
lods
jecxz
pop
iret
int
call
xchg
aas
pop
push
xor
cmps
adc
(bad)
mov
mov
cld
mov
push
adc
push
out
add
dec
jns
leave
rcr
test
sbb
ins
push
mov
dec
sbb
mov
pop
fs
and
sub
xchg
mov
mov
dec
add
pop
(bad)
jne
(bad)
shr
mov
stos
cmc
sbb
data16
xchg
mov
push
jp
sbb
or
and
mov
mov
in
imul
pop
and
rcl
call
mov
dec
xor
out
loop
xchg
xchg
cmp
and
xchg
cmps
dec
aam
addr16
mov
stos
inc
stc
scas
jo
inc
dec
xchg
stc
dec
imul
inc
mov
lods
push
and
std
pop
nop
dec
ins
and
mov
popa
pop
rcr
sbb
outs
cmp
test
lea
mov
mov
jmp
cmp
push
sub
arpl
mov
lods
call
add
cwde
shl
xchg
cld
daa
test
pop
mov
xchg
mov
inc
xor
(bad)
push
push
cmp
mov
cs
repnz
jne
xchg
(bad)
test
out
fcom
push
lods
mov
fstp
in
fxtract
add
xor
lock
into
push
daa
dec
jle
mov
stos
(bad)
popa
lods
int3
scas
inc
out
test
cli
dec
hlt
push
js
dec
lods
mov
cmp
mov
clc
fstp
inc
(bad)
in
lock
sub
lea
dec
popa
push
dec
pusha
fcmovne
jbe
ja
mov
in
sub
xchg
xchg
add
inc
jo
call
dec
(bad)
cld
call
sbb
jl
pop
inc
pop
mov
sub
push
out
pop
adc
and
jo
das
test
jg
popf
inc
mov
and
mov
outs
jae
out
mov
xchg
push
les
pop
sub
mov
retf
sbb
imul
push
xchg
retf
push
rcl
add
not
inc
xor
add
pop
arpl
arpl
jb
pop
ret
(bad)
out
cmps
ds
mov
fs
xchg
add
xchg
cvtpi2ps
or
xor
loope
nop
dec
ja
dec
es
scas
cmps
leave
mov
push
test
cmps
fwait
xchg
outs
xchg
cmc
pop
xchg
pop
fwait
(bad)
test
mov
std
(bad)
ds
int
sbb
(bad)
cdq
add
enter
push
mov
mov
jg
xor
jecxz
out
test
(bad)
mov
aaa
sbb
xor
xlat
pop
shl
ss
retf
lea
mov
adc
push
js
push
inc
mov
cli
mov
in
sub
adc
fld
ror
push
fldenv
and
lock
or
mov
push
jmp
and
into
rcl
mov
enter
mov
(bad)
cmp
fisttp
push
and
ds
(bad)
fucomip
xor
xchg
aas
mov
es
sbb
std
mov
push
push
das
pop
lea
or
fsub
push
jge
xchg
data16
sub
and
jne
fst
xchg
or
fwait
mov
sub
sub
mov
adc
ds
das
dec
pop
jle
scas
add
mul
jb
xchg
mul
xor
xchg
adc
mov
push
dec
adc
jecxz
mov
scas
lods
inc
push
add
xchg
or
mov
(bad)
loop
daa
adc
jbe
dec
mov
btc
sbb
sub
inc
or
ins
in
add
loop
ror
int
popf
iret
scas
popa
or
jle
mov
adc
mov
dec
mov
out
lods
xchg
add
outs
jl
cmp
jecxz
pop
adc
mov
mov
stos
out
mov
(bad)
and
cmps
sahf
push
or
add
test
ds
mov
dec
out
inc
xor
dec
push
xlat
je
cs
pop
jle
in
shl
fsubr
or
ins
adc
jecxz
xchg
push
imul
pop
leave
add
push
jno
ds
(bad)
push
loopne
ror
mov
fisttp
outs
(bad)
fmul
les
mov
inc
adc
sbb
adc
cmp
js
je
cmp
mov
cmps
int
jp
mov
mov
xlat
sub
mov
test
xchg
and
retf
add
sbb
popa
repnz
outs
dec
xor
aas
xchg
inc
mov
add
bound
mov
mov
sub
pop
cmp
sbb
or
adc
mov
or
push
pusha
xor
ds
daa
ja
adc
mov
mov
std
les
xlat
outs
cs
jo
push
cmc
xchg
jae
std
into
jl
mov
dec
fstp
rol
jl
jle
pmaxub
out
lock
and
sub
mov
out
and
fbstp
mov
jecxz
or
pop
mov
int3
pop
mov
dec
mov
imul
and
or
stc
inc
jge
sbb
xchg
popa
cmp
daa
jns
dec
adc
add
(bad)
fisub
outs
ss
bound
pop
mov
in
addr16
aas
jp
mov
jp
test
nop
or
stc
int3
dec
sbb
in
cwde
xchg
ror
cs
dec
pop
jo
ins
popa
mov
mov
add
mov
add
mov
ror
aaa
int3
pop
inc
hlt
mov
aas
xchg
lgs
mov
test
cwde
mov
jl
test
std
jo
mov
loop
ins
sub
sbb
xor
sti
jns
repz
push
mov
mov
cmovo
mov
jns
rcr
scas
mov
fdiv
call
jmp
repnz
inc
and
inc
inc
fidivr
icebp
cld
xchg
jne
cmps
push
nop
popf
test
pop
mov
mov
div
in
int3
inc
push
adc
xchg
aas
and
test
int
icebp
imul
mov
sahf
fs
scas
idiv
xchg
hlt
aas
mov
clc
fnstcw
pop
mov
in
xchg
in
xor
out
jae
jbe
dec
push
fldcw
or
jp
lahf
and
hlt
mov
mov
ins
push
mov
push
push
mov
fwait
and
fwait
je
xchg
cmp
dec
popf
cmp
mov
dec
and
loop
arpl
shl
add
cmc
je
cmp
xlat
test
xchg
lahf
xchg
xor
adc
ret
je
iret
sub
or
adc
jl
aad
push
jne
iret
mov
mov
pop
xor
pop
xchg
mov
ror
sti
ficom
mov
fidiv
sbb
xchg
mov
retf
inc
popa
scas
adc
popa
and
retf
pop
pop
dec
mov
push
dec
js
pop
jbe
aaa
or
adc
cmp
adc
cmp
sar
jmp
int
rep
test
aad
lea
inc
jge
mov
aas
adc
xor
and
mov
xchg
jno
inc
das
push
push
jns
or
push
ficomp
sahf
jge
cmp
jg
and
in
aad
cmp
and
dec
mov
mov
mov
ret
mov
and
leave
dec
push
jae
sub
or
test
pushf
pop
xchg
test
aaa
jmp
imul
pop
xor
mov
jg
cld
xchg
or
xor
sub
cmp
push
repnz
and
(bad)
repz
arpl
cdq
inc
fnstsw
pop
mov
pusha
jbe
cmps
add
mov
pop
and
inc
inc
cdq
pop
imul
jp
out
aad
retf
test
adc
movs
dec
and
jmp
mov
aad
out
lods
arpl
jmp
or
xchg
cmc
inc
and
xor
dec
and
leave
sub
sbb
mov
dec
or
xchg
and
sti
mov
cmps
outs
xchg
mov
pop
sbb
clc
pop
jmp
mov
out
sbb
cmp
push
mov
lds
dec
je
jae
retf
loop
jl
mov
mov
lea
xchg
stos
cs
fstp
jecxz
mov
fiadd
or
adc
or
shl
scas
xchg
mov
addr16
pop
xlat
in
cmps
mov
jne
or
push
push
stos
and
inc
aas
not
out
xchg
shr
cmp
scas
add
aad
jae
les
aam
rcr
ret
pop
and
js
cs
rol
cld
out
xchg
jne
and
dec
call
mov
mov
lods
cmp
jmp
ror
enter
sub
push
and
dec
and
add
ret
scas
jmp
inc
push
pop
jb
mov
pop
jp
or
pop
cs
stos
xchg
sbb
inc
pop
gs
lock
aaa
mov
xchg
sbb
sbb
ja
xchg
movs
sbb
jge
into
push
(bad)
scas
out
fsubr
dec
test
dec
test
clc
mov
mov
jle
test
scas
leave
das
addr16
pop
stos
xor
mov
add
mov
fldz
sub
ret
les
cld
daa
fadd
xchg
or
es
repz
or
push
idiv
mov
(bad)
fwait
pop
call
adc
mov
jecxz
popf
enter
and
add
cld
mov
sar
pop
push
or
cmp
jl
cmp
(bad)
(bad)
dec
mov
out
div
sbb
push
jno
daa
mov
cld
dec
sub
jmp
test
adc
fdiv
pushf
xor
nop
ja
cmp
jl
dec
retf
out
xor
call
adc
sbb
popf
mov
dec
test
enter
mov
xor
and
jmp
fidiv
mov
fsub
push
movs
das
int
imul
es
shr
cmp
add
ss
jge
inc
mov
std
mov
ins
xchg
mov
and
jg
fcmovnu
xlat
dec
jno
mov
rcr
cli
jns
shl
sub
mov
fld
rcr
stos
mov
cmpxchg
aad
push
cli
sub
ret
and
mov
mov
pop
pop
mov
and
loope
and
repz
adc
mov
cmps
es
sahf
push
ins
popf
test
mov
inc
and
adc
jmp
xchg
dec
or
mov
icebp
das
pop
add
mov
lock
jmp
or
mov
clc
es
inc
out
xor
and
jne
mov
ins
cmp
sub
and
aam
icebp
icebp
push
ftst
in
sub
stos
jmp
mov
xlat
mov
call
inc
sub
and
fisttp
out
pop
jns
inc
and
and
add
(bad)
data16
sub
mov
sub
adc
lods
jl
cmp
fmul
xor
mov
mov
xor
out
xchg
call
pop
xlat
push
xchg
repnz
adc
dec
jae
mov
and
adc
mov
adc
push
pop
(bad)
jno
pusha
jae
inc
les
retf
lea
ret
ret
push
ror
or
gs
add
pop
daa
dec
sub
sub
out
bound
das
daa
sbb
add
pop
jbe
dec
mov
(bad)
jmp
push
jne
cmp
stc
sbb
cmps
and
jecxz
inc
jle
cmp
push
stc
mov
xor
stos
xor
je
mov
jnp
xchg
ins
mov
inc
push
nop
mov
xchg
jp
outs
jnp
lods
pop
sbb
ret
push
(bad)
das
bound
fiadd
cdq
out
jecxz
jmp
out
inc
mov
pop
iret
inc
adc
mov
sbb
aad
pusha
jmp
xor
xchg
dec
xchg
xchg
and
(bad)
out
adc
push
adc
pop
jmp
xor
lods
adc
test
sub
clc
std
mov
rol
scas
sub
retf
daa
je
sar
pop
data16
retf
test
push
adc
nop
sub
pop
pop
in
add
(bad)
call
dec
out
maskmovq
not
dec
popf
es
xor
xchg
aam
dec
sub
sbb
mov
lea
dec
in
push
in
inc
test
call
and
mov
aad
rcr
adc
aas
repnz
icebp
cli
adc
xor
enter
xchg
lods
sub
cmps
lods
arpl
push
dec
cmps
xchg
inc
xlat
(bad)
faddp
mov
cmp
cmps
or
in
push
dec
xor
push
fnstsw
(bad)
retf
pop
mov
sbb
cwde
inc
gs
scas
pop
xchg
xchg
cmp
jnp
(bad)
lds
shr
in
sub
push
emms
clc
dec
lea
fldenv
(bad)
jg
jg
and
inc
(bad)
ds
ret
fs
mov
push
mov
dec
xchg
xor
sub
iret
ffreep
cmps
add
jb
lahf
movs
or
hlt
sti
gs
mov
mov
call
out
into
lahf
mov
xchg
sbb
pusha
jecxz
jne
out
fmul
in
ins
adc
jge
ja
pop
push
sub
loopne
pop
ins
jo
push
int
pop
sbb
pop
push
ja
cmps
sub
imul
mov
sbb
ror
mov
mov
xor
pop
aaa
pop
inc
jae
fwait
call
xchg
sub
dec
mov
fist
(bad)
fldcw
les
pusha
mov
add
dec
frndint
inc
xor
xchg
cmps
mov
or
ror
mov
pop
pop
pusha
mov
xor
mov
out
mov
push
ret
ret
dec
inc
(bad)
loop
movs
push
push
jmp
pop
es
xchg
adc
pusha
aam
jge
cmp
outs
int3
cmps
scas
jae
or
pop
stos
(bad)
repnz
sub
sbb
and
and
das
shl
push
lahf
push
jp
mov
inc
frstor
int
aas
inc
cmps
arpl
fnstcw
add
mov
pop
sub
dec
pusha
and
lds
pushf
out
shr
push
xchg
pop
jno
jns
xchg
dec
shl
pop
push
or
adc
pop
add
mov
addr16
dec
push
mov
jb
nop
jl
imul
xchg
nop
pop
inc
ss
cld
push
scas
mov
clc
enter
fistp
fs
push
mov
add
dec
jbe
xchg
jge
pop
push
ret
cmp
data16
or
jge
fs
shl
mov
lahf
loope
in
inc
adc
cwde
push
int3
icebp
or
jnp
or
lods
jns
or
jmp
pop
adc
std
xchg
inc
fcomi
dec
sbb
dec
jne
jmp
(bad)
lock
fcomp
mov
fcomp
or
ja
inc
and
in
fld
mov
arpl
sqrtps
sub
xchg
push
lea
xor
test
movs
aas
sti
and
or
pop
inc
data16
ret
fld
retf
cmp
mov
adc
mov
inc
cwde
clc
pop
pop
cld
and
xchg
js
fld
pushf
cmp
fcomp
enter
mov
cvtdq2ps
jmp
outs
xlat
xlat
adc
jnp
inc
ror
cmps
sub
je
jmp
mov
or
inc
add
xor
sub
pop
and
sub
pop
pop
rcl
fbld
mov
clc
aad
js
and
adc
jne
mov
lock
cmp
dec
jae
and
push
xchg
fidiv
pop
cmp
sub
es
lahf
dec
xchg
mov
push
xchg
xor
stc
jmp
or
xor
ds
cmp
popa
add
lods
hlt
cmp
js
fwait
cmc
fisttp
sub
xchg
inc
jb
scas
mov
test
and
xor
mov
shl
test
jg
push
or
imul
jbe
ja
jmp
mov
repz
std
cmp
pushf
fild
mov
mov
fs
xor
sub
mov
imul
push
pop
sti
loop
sbb
data16
sbb
pop
push
sbb
int3
stc
xchg
xor
nop
push
sbb
cmp
movs
inc
(bad)
xor
loop
nop
and
vphaddbw
movs
iret
pop
test
nop
mov
push
cwde
mov
inc
mov
pop
fild
xchg
jae
jle
cmps
mov
je
mov
and
mov
test
cmps
(bad)
pushf
mov
fisttp
dec
sbb
enter
int
or
jmp
dec
outs
mov
mov
jmp
push
sub
stos
add
lods
mov
rol
mov
sbb
aaa
in
loope
push
mov
add
xor
dec
ins
cmp
adc
iret
retf
pop
mov
ins
jno
xchg
aaa
or
sub
lea
pop
mov
pop
adc
dec
dec
ss
dec
xchg
dec
imul
mov
iret
pop
call
arpl
xor
push
sbb
dec
jmp
pop
hlt
adc
or
or
jg
push
adc
loop
jl
out
xor
retf
sbb
dec
aas
sub
push
inc
ror
loopne
(bad)
out
sbb
lods
(bad)
daa
xor
in
mov
inc
stc
dec
(bad)
out
aad
cdq
xor
mov
jns
jb
outs
stos
fldcw
sub
mov
mov
mov
in
es
mov
stc
push
cmp
int3
xor
into
fdiv
sub
or
out
sbb
dec
leave
lock
pop
sub
les
cli
ins
and
hlt
adc
xchg
(bad)
fist
mov
scas
call
je
stos
mov
and
mov
sub
cld
dec
and
ins
(bad)
xchg
sub
test
jb
mov
movs
or
jmp
pop
cmp
or
push
repnz
nop
clc
stos
fst
cmp
sbb
mov
sub
add
cmp
bound
mov
outs
pop
iret
mov
in
sbb
sbb
test
xchg
dec
fld
pop
inc
xor
dec
repnz
out
out
out
add
repz
inc
in
jno
fcomp
sub
push
mov
xchg
sbb
jge
cwde
mov
pop
into
out
cmp
jne
jge
stc
mov
inc
push
out
icebp
adc
pusha
dec
pop
unpcklps
loope
stos
and
jno
movs
inc
addr16
cmp
das
mov
aaa
jns
jecxz
(bad)
jmp
rcr
lea
js
dec
mov
ins
les
cmp
add
xchg
or
repz
sbb
jbe
push
fist
std
into
xchg
jl
mov
es
or
in
mov
inc
fisttp
xchg
int
cmp
and
cmp
ins
mov
push
call
mov
div
and
dec
outs
repz
mov
sbb
mov
retf
stos
cmp
popf
jg
push
push
jns
sbb
and
mov
outs
loop
xor
or
cmp
test
mov
or
or
dec
cdq
dec
movs
mov
std
(bad)
dec
ins
add
jmp
test
lods
sahf
inc
sbb
test
shr
dec
jno
push
dec
mov
sbb
jmp
and
push
or
test
add
fldcw
gs
adc
adc
add
int
adc
push
(bad)
neg
scas
dec
movs
xchg
(bad)
adc
inc
fcmovb
push
ror
sub
pextrw
xchg
xchg
fcmovb
pushf
test
pop
inc
cmps
test
push
scas
repnz
and
js
imul
mov
cli
inc
in
fst
es
inc
call
pop
outs
shl
jmp
push
neg
hlt
or
movs
push
retf
lahf
mov
jecxz
out
out
and
xor
mov
jns
dec
sar
popa
into
cmc
adc
in
xchg
(bad)
or
xor
call
stc
sar
rcl
or
std
retf
stc
scas
inc
loop
and
test
shl
sti
push
pushf
jne
jp
pop
mov
sub
sbb
stos
adc
in
mov
aas
addr16
ret
mov
push
sbb
stc
ds
mov
jp
neg
sub
and
(bad)
mov
adc
shl
repnz
call
xchg
dec
cmp
push
fsubr
mov
pop
push
xor
dec
dec
out
cwde
xlat
adc
into
inc
jno
and
adc
and
xor
clc
test
pop
add
cmc
and
stos
inc
(bad)
sub
(bad)
ffree
je
push
ret
inc
das
and
cmp
cs
movd
mov
mov
out
clc
and
mov
hlt
aam
pusha
push
hlt
sub
add
or
jns
call
mov
mov
push
test
adc
stc
fs
jno
sbb
pop
je
(bad)
jbe
or
or
pop
adc
fistp
test
jo
or
pop
push
out
inc
addr16
mov
and
sub
jmp
idiv
add
or
cmps
mov
xchg
cmps
pop
push
mov
js
(bad)
imul
lods
push
std
add
cmp
xor
adc
jmp
push
in
(bad)
(bad)
mov
jle
shl
and
outs
xor
pop
pop
pop
repnz
and
imul
stos
scas
jne
mov
xor
adc
push
idiv
pop
leave
cs
into
(bad)
ficomp
adc
cdq
push
inc
xchg
push
pop
jle
inc
adc
push
mov
test
bound
retf
pop
add
jg
xor
sub
gs
xor
ja
movs
repnz
cwde
and
int3
inc
pushf
ror
aaa
(bad)
leave
in
cmp
dec
dec
mov
xchg
imul
rcl
mov
sbb
cmps
dec
loop
fcmovnb
adc
fisub
pusha
adc
pop
and
inc
xor
cmps
cdq
mov
pop
nop
cmp
push
or
xchg
xor
add
in
into
lea
fwait
fwait
lahf
imul
sub
popa
sub
daa
push
arpl
mov
xchg
dec
cmps
in
jmp
aaa
fsub
fidiv
jae
pop
push
outs
gs
jo
add
xor
pop
dec
retf
retf
mov
sub
jl
xchg
jbe
xchg
lahf
mov
jbe
pop
jno
jge
xlat
sahf
cs
in
and
xchg
mov
int
mov
arpl
or
pop
fwait
scas
mov
jne
(bad)
repnz
mov
add
iret
leave
cmps
or
sub
cmp
mov
pop
cmp
movs
cmps
sub
iret
das
aad
dec
inc
dec
cli
sub
iret
push
leave
mov
mov
lock
mov
push
daa
adc
cmp
aam
cmp
push
shl
fld
pop
push
bnd
call
sahf
inc
adc
mov
ins
inc
cmc
xchg
push
repz
xchg
ret
push
inc
int
jle
(bad)
add
push
push
or
(bad)
cmp
and
int
cdq
jge
dec
(bad)
jnp
xor
ins
cmc
mov
dec
jo
inc
mov
stc
mov
sub
and
punpckhdq
hlt
dec
dec
repz
jmp
ja
mov
lods
es
outs
pop
les
(bad)
or
outs
dec
cmp
or
mov
pop
xor
lods
scas
ret
dec
(bad)
lock
jge
sahf
jecxz
sbb
lds
lds
sbb
or
jl
inc
pusha
dec
fld
mov
shl
test
dec
cmp
arpl
fucom
xchg
pop
adc
movs
scas
mov
shl
dec
rol
cs
pop
cmp
jmp
imul
pop
cs
out
and
shl
jmp
mov
mov
cmps
mov
daa
inc
jb
inc
inc
test
addr16
cmp
std
(bad)
mov
ds
leave
xlat
(bad)
bound
(bad)
mov
jo
clc
and
sub
mov
sub
dec
sti
sahf
out
mov
jecxz
ds
sahf
xor
mov
mov
sub
add
test
jecxz
out
retf
cmc
sbb
push
call
pop
jmp
xchg
mov
pop
das
lods
mov
pop
xor
stos
fucomip
inc
call
ret
dec
push
lock
mov
clc
xlat
or
or
jo
pop
sti
mov
xchg
fucom
inc
push
leave
inc
xor
mov
push
(bad)
jns
les
sti
test
mov
pop
or
jmp
mov
fild
stos
call
gs
rcl
and
mov
stc
int3
cmp
retf
movs
(bad)
addr16
xchg
clc
(bad)
not
fst
sbb
jbe
sahf
cmp
pop
out
pop
push
xor
addr16
mov
and
dec
cmc
ds
in
pop
rcl
arpl
aad
std
into
stos
repz
sub
outs
dec
xchg
cld
(bad)
aas
or
mov
retf
xchg
adc
outs
adc
stc
sbb
jnp
mov
adc
cmp
das
cmp
mov
out
jne
out
dec
inc
call
lock
inc
push
ffree
cmp
add
in
pop
push
push
adc
in
xchg
or
mov
sub
inc
loopne
push
sub
dec
push
test
inc
push
pop
retf
sbb
movs
inc
mov
fild
int3
xchg
mov
idiv
ret
(bad)
in
loope
iret
sbb
and
lods
leave
stos
sbb
or
push
lods
sbb
jne
jmp
retf
gs
fs
jnp
mov
ficomp
cmp
dec
jbe
out
fld
mov
jecxz
outs
jge
(bad)
adc
cmp
pop
daa
or
push
into
scas
stc
int3
sbb
lds
cmc
call
and
jecxz
addr16
push
in
test
scas
mov
dec
cs
cmp
lahf
jmp
cdq
or
ror
pop
pop
and
inc
xchg
ja
(bad)
sbb
into
add
call
cmps
mov
push
xchg
icebp
out
imul
and
ins
xlat
loope
mov
(bad)
pop
add
fs
adc
loop
dec
repz
loop
and
movs
mov
push
jg
dec
xor
sbb
sub
mov
inc
(bad)
outs
add
xor
js
mov
sub
jo
sbb
add
sub
and
aas
jmp
mov
in
mov
es
mov
dec
mov
or
and
or
daa
adc
or
test
push
jno
push
mov
and
or
add
(bad)
push
inc
add
hlt
lahf
sub
shl
fwait
lods
je
xor
lods
add
rep
movs
cmps
pushf
movs
(bad)
inc
(bad)
mov
wbinvd
and
retf
inc
cmc
mov
aad
ins
push
cdq
out
xchg
cmp
dec
sbb
or
mov
and
or
ds
cmp
push
rol
in
xchg
lea
add
jne
mov
cdq
sti
call
push
nop
fadd
out
or
and
or
inc
lods
dec
pop
outs
cwde
repnz
ins
fdivr
mov
inc
sbb
je
rcl
lods
shr
test
movs
cmc
lock
mov
(bad)
pop
mov
jo
in
jb
aas
(bad)
dec
mov
mov
outs
inc
call
cmp
pop
dec
in
imul
xlat
mov
jecxz
ret
and
adc
jb
addr16
fcomp
push
inc
jbe
sub
sbb
cwde
xor
test
dec
scas
or
rol
(bad)
into
pop
and
mov
pushf
fucomp
inc
and
and
push
inc
mov
sbb
loop
jbe
jle
stos
loop
retf
lods
ja
repz
scas
dec
push
add
xchg
mov
jle
in
xor
xchg
dec
pop
pop
rol
sbb
or
xchg
push
(bad)
inc
mov
into
test
leave
or
call
inc
pusha
adc
jo
and
es
add
fnsave
jno
pusha
repnz
dec
int
sub
arpl
add
(bad)
(bad)
cld
movs
push
xchg
inc
or
inc
inc
out
repnz
(bad)
in
mov
xchg
mov
ror
inc
mov
fild
cs
fdivp
fistp
clc
pop
fdiv
xchg
pop
dec
pusha
jge
mov
call
out
icebp
and
js
and
outs
sbb
mov
cmp
jo
lods
push
pop
push
ins
add
inc
xor
fstp
repnz
clc
inc
push
cmp
test
adc
out
clc
movs
jge
sar
lock
mov
ja
sub
mov
fcomp
sti
sub
sbb
mov
pop
mov
push
shr
test
stos
push
iret
sbb
enter
imul
push
outs
aad
pop
clc
add
sub
cmc
pusha
mov
rcr
fisub
in
mov
fcomp
sbb
xchg
repnz
sbb
fidiv
jmp
aad
in
add
repz
add
mov
(bad)
int3
inc
mov
fdiv
rcl
(bad)
push
inc
es
cmps
cmps
call
mov
test
sbb
jne
or
xor
sar
(bad)
mov
inc
cwde
or
xor
lahf
sub
xchg
leave
jl
push
popa
push
push
ja
inc
or
imul
push
shl
or
dec
sahf
adc
cwde
cs
and
ja
push
add
out
fsub
retf
vcvtdq2pd
pop
jae
(bad)
xchg
push
add
and
sbb
outs
mov
das
stos
daa
mov
adc
dec
mov
xchg
pop
aam
or
gs
enter
cdq
add
out
cmp
jmp
gs
std
push
push
retf
sbb
push
cdq
jp
inc
xor
sub
mov
imul
mov
xor
xor
(bad)
mov
or
push
nop
adc
je
fnsave
fld
mov
dec
dec
pop
inc
sub
sbb
mov
dec
lods
push
inc
adc
mov
pop
fcomp
cs
sbb
movs
adc
fiadd
inc
and
pop
movs
test
mov
or
sbb
in
loope
fidivr
mov
xor
mov
movs
mov
dec
cmp
retf
shl
sbb
xchg
popa
int
mov
mov
mov
outs
aas
xor
jle
xor
rol
cli
pop
imul
jns
jecxz
shr
(bad)
sbb
cmps
push
(bad)
call
xor
pop
inc
repz
pop
call
nop
out
cmps
call
push
nop
loop
xchg
add
mov
push
mov
dec
mov
iret
xor
pop
int3
les
and
rcr
and
ss
popa
jg
scas
lahf
bound
lods
pop
out
cmp
in
sti
inc
add
adc
int3
mov
inc
push
lock
inc
inc
jno
adc
(bad)
mov
popf
aam
fimul
dec
jp
xor
pop
sub
xchg
pop
dec
dec
cmp
push
dec
pop
fs
call
and
sar
imul
mov
out
daa
and
movs
pop
mov
loopne
mov
in
and
mov
inc
loop
adc
fwait
and
ds
cmp
jb
sub
adc
in
inc
shl
rcl
fnsave
jl
push
or
mov
xchg
xchg
sbb
xchg
and
mov
icebp
cmp
inc
sbb
hlt
cmps
lea
rcr
in
daa
sar
xchg
add
in
jecxz
jmp
retf
int3
pop
push
xor
pushf
cmp
or
retf
add
idiv
add
dec
and
stos
fsub
add
retf
cld
pop
test
dec
stos
aaa
popf
push
stc
aas
push
cmp
sbb
cwde
sbb
dec
pusha
cmp
xchg
scas
adc
mov
sahf
outs
jno
mov
pop
and
pop
xor
push
xor
mov
fucomp
aam
push
mov
jo
iret
mov
in
dec
scas
adc
adc
and
and
pop
(bad)
retf
push
sbb
pop
add
mov
push
cmc
scas
inc
sahf
sub
dec
add
xor
push
aam
enter
cmp
or
mov
push
mov
adc
fwait
in
mov
inc
popf
in
or
mov
fisubr
div
sahf
imul
xor
and
mul
mov
adc
xchg
dec
push
setae
(bad)
sub
ins
mov
ins
mov
loop
rcl
push
inc
pusha
mov
cld
repz
stos
mov
adc
ret
cs
pushf
and
mov
scas
fs
mov
and
leave
aad
sub
arpl
(bad)
leave
jle
mov
sbb
sub
outs
fcom
add
add
xor
adc
iret
lahf
cmps
sub
mov
ret
or
jecxz
sbb
in
push
mov
adc
xor
inc
xor
sbb
repnz
pop
mov
mov
loope
(bad)
clc
mov
xlat
cld
add
retf
xor
les
loope
jnp
into
call
retf
xchg
int
aaa
les
(bad)
in
or
scas
rcr
into
sbb
cmc
pop
call
pop
xchg
push
sbb
xchg
pop
or
fbstp
sub
jnp
xor
jns
lods
mov
or
(bad)
pop
in
pusha
shl
mov
pop
ficom
jb
scas
outs
fistp
sbb
add
jl
mov
shl
push
out
shr
nop
cmps
das
inc
adc
lahf
ins
nop
mov
jl
out
iret
add
ds
mov
clc
sub
xor
mov
or
sbb
xor
or
sar
push
push
jecxz
aas
mov
jle
jge
or
or
addr16
inc
fdiv
cmp
loop
jmp
ja
xchg
or
mov
fs
and
scas
push
jge
pop
pop
inc
xor
push
xchg
clc
mov
mov
(bad)
jle
stos
arpl
push
popf
and
xchg
push
mov
xchg
cmp
pop
test
push
aad
sub
sbb
or
adc
(bad)
fidiv
sub
pop
loop
inc
(bad)
enter
and
mov
jg
cmp
cmps
mov
in
aaa
cmps
adc
sbb
inc
mov
dec
int3
jg
cmp
sbb
inc
mov
cwde
sbb
cmp
adc
pop
pop
rcl
xor
jg
adc
xor
dec
xor
int3
xor
add
and
xchg
shl
sub
jns
push
(bad)
mov
cld
std
icebp
inc
inc
mov
fild
jne
dec
scas
(bad)
addr16
(bad)
jp
mov
sbb
das
cmp
fs
pop
int
add
cmps
jge
out
data16
loope
aad
into
pushf
xchg
push
jmp
ins
es
lds
jne
inc
nop
imul
mov
lea
pop
pop
jns
push
ret
(bad)
fsubr
fnstsw
ret
test
ret
js
std
lods
adc
xchg
imul
fcmovu
mov
sbb
dec
push
in
mov
cdq
sbb
mov
enter
and
add
dec
adc
int
fdiv
inc
sub
xlat
xor
(bad)
jmp
shr
mov
xchg
mov
add
xor
sti
cli
mov
lods
cmp
rcl
pop
mov
jmp
dec
push
and
js
mov
jns
push
and
addr16
ja
pop
lods
adc
jnp
mov
or
in
(bad)
test
xchg
mov
test
or
icebp
scas
ret
adc
xchg
xchg
xchg
mov
cwde
sbb
dec
loope
push
(bad)
push
mov
leave
jbe
or
scas
ret
xor
repnz
mov
and
int3
push
call
das
pop
lahf
lock
mov
leave
xor
add
fistp
js
adc
xor
dec
mov
and
int3
mov
xchg
inc
aam
movs
push
cwde
fistp
popf
push
(bad)
sub
fidiv
push
sub
mov
or
sar
aaa
and
pop
jecxz
mov
imul
cmps
dec
xchg
mov
pop
dec
(bad)
mov
mov
sub
xchg
test
fld
or
xor
cmps
xchg
(bad)
ficomp
enter
mov
mov
out
inc
sbb
pop
add
adc
cmp
clc
mov
stos
pmullw
lods
cmc
retf
dec
dec
push
mov
jnp
popf
mov
popa
shr
fist
dec
inc
test
jmp
or
hlt
mov
xor
pop
xchg
std
(bad)
call
or
mov
stos
sbb
in
xchg
mov
mov
inc
pop
adc
fsub
xchg
lock
loop
addr16
sub
scas
ds
mov
xchg
lock
shr
test
xchg
fmul
clc
mov
ret
call
xchg
jp
sti
movs
xchg
dec
inc
mov
adc
and
mov
lds
adc
fisub
or
ud0
hlt
push
cmp
lahf
shl
(bad)
cmp
lods
dec
clc
inc
xchg
aad
jbe
mov
inc
jae
dec
neg
mov
xchg
aad
cmps
sbb
cmp
or
iret
out
pop
addr16
dec
inc
imul
loopne
pop
and
leave
leave
and
and
adc
jp
js
mov
inc
ret
xchg
(bad)
or
cs
shr
icebp
jp
retf
out
push
and
movs
retf
rcl
push
shr
dec
sub
cmp
(bad)
ds
call
cmp
or
mov
and
jp
(bad)
aas
fcomp
repz
mov
dec
adc
mov
js
call
call
adc
push
and
cs
mov
aas
cs
cmp
fcom
ret
scas
cs
fistp
arpl
xchg
aam
scas
fst
cld
imul
dec
ss
fwait
mov
inc
popa
jle
inc
inc
mov
mov
enter
pop
xchg
aam
and
movs
ja
sub
cmp
in
sub
xchg
out
pop
aaa
shl
and
ret
xchg
or
mov
(bad)
push
or
pop
retf
and
arpl
lods
sub
pop
mov
sar
jb
sbb
xchg
jmp
pop
mov
pop
jmp
pop
(bad)
jl
fst
add
movs
sub
mov
(bad)
and
inc
mov
pop
xor
cmp
or
nop
inc
sti
cmps
and
add
xchg
aas
jg
jae
bound
push
call
push
popa
inc
enter
and
je
or
xchg
fadd
jmp
je
mov
(bad)
cwde
addr16
cmp
outs
test
mov
or
repz
hlt
mov
push
je
sti
mov
mov
fmul
iret
sub
mov
sbb
mov
pop
mov
xchg
dec
jp
out
(bad)
adc
lods
rcl
or
mov
mov
cmp
push
xor
jo
jge
call
and
enter
call
call
xor
dec
sub
cmps
xchg
inc
or
push
push
push
mov
jno
sub
push
arpl
xor
stc
jns
addr16
push
stos
mov
scas
leave
xchg
cdq
inc
out
(bad)
cmp
shr
pop
ror
test
fcomp
add
fadd
int
out
sbb
test
push
ins
jns
imul
push
aas
inc
mov
push
dec
stos
adc
cmp
nop
xchg
inc
pop
addr16
movs
lods
mov
dec
jne
push
(bad)
shl
retf
repz
adc
xchg
mov
aam
lods
cmp
test
xchg
imul
in
data16
ret
lock
inc
sti
nop
inc
xchg
out
sbb
xlat
ror
fwait
mov
xchg
test
or
xor
sub
inc
or
push
or
cld
cmp
pop
pop
inc
call
test
inc
add
enter
sub
ja
mov
repz
add
push
dec
lods
sub
dec
cdq
xchg
xor
mov
push
(bad)
fdivr
retf
outs
movs
popf
sub
xor
dec
and
loope
in
jno
dec
sti
das
xchg
xor
dec
xchg
mov
adc
popa
jmp
out
cmp
aaa
push
fdivr
test
enter
adc
stos
push
and
(bad)
xchg
out
ins
shl
fldpi
mov
mov
repz
add
xchg
leave
test
mov
jle
pop
fmul
sub
fiadd
cmp
mov
cmp
int3
outs
mov
dec
mov
dec
or
and
int3
pop
retf
mov
dec
or
aad
cmp
popf
dec
push
push
jecxz
test
int3
out
push
aam
jbe
dec
adc
movs
mov
add
sbb
outs
inc
and
inc
sar
xchg
sti
push
lods
(bad)
or
mov
es
sub
adc
push
inc
xchg
test
jne
cdq
push
cmp
xor
stos
ja
pusha
jne
fsub
ins
cmp
sub
lock
jecxz
jbe
imul
dec
psubd
mov
jmp
or
std
mov
mov
cmp
and
cs
retf
xchg
inc
aas
xchg
add
sbb
cmp
inc
mov
inc
sbb
mov
mov
(bad)
stos
push
retf
push
adc
xor
add
rol
cmp
adc
sub
ja
idiv
and
sbb
mov
mov
aas
fadd
xchg
and
mov
in
jns
movs
inc
pop
sub
xchg
nop
rcr
jns
out
lods
or
mov
cdq
inc
cmp
push
stc
push
inc
xor
popf
jge
xchg
push
jmp
inc
in
nop
fmul
inc
adc
es
mov
and
movs
sbb
adc
mov
imul
ja
outs
cmp
inc
or
jp
sub
cmp
adc
test
sti
mov
jne
pusha
jbe
shl
jg
jmp
aas
cmp
vmovntpd
adc
xchg
dec
aam
add
add
jno
mov
imul
mov
test
jae
sub
mul
cmps
pop
mov
dec
loop
sub
jp
and
clc
arpl
jae
or
adc
inc
sbb
data16
inc
lahf
cld
push
aas
pop
outs
aam
hlt
into
lods
int
in
pop
sub
mov
xchg
mov
dec
arpl
mov
mov
add
xor
popf
add
and
(bad)
jmp
mov
fcom
and
inc
lods
inc
jle
in
inc
lock
xchg
or
sbb
popf
cdq
dec
xlat
push
xor
sbb
sub
mov
push
(bad)
pop
mov
or
or
add
pop
cmps
sub
sbb
mov
pop
jb
inc
inc
xor
aas
mov
pop
test
xor
mov
scas
sub
loop
ja
psllq
dec
hlt
inc
inc
lock
mov
or
jmp
sti
push
adc
adc
ds
push
dec
shl
ds
mul
ss
push
aam
fisubr
inc
loope
adc
nop
inc
adc
outs
mov
fucomip
pop
add
push
jo
repnz
movs
dec
ja
jae
int3
or
cmp
(bad)
data16
pop
mov
ins
jmp
dec
scas
mov
sbb
in
repz
xchg
jmp
test
xor
(bad)
jmp
in
or
les
jae
gs
sbb
xchg
out
mov
mov
mov
icebp
movs
jb
sub
or
mov
push
hlt
jge
dec
stc
popa
loop
fbld
jle
mov
fld
sub
jle
cmp
cmp
sub
ror
mov
mov
call
in
push
sbb
call
jmp
pop
sub
sub
or
gs
and
push
test
jge
int3
push
jne
sahf
jb
loopne
adc
bound
lahf
jmp
aas
loopne
pop
and
lds
mov
xchg
push
mov
jne
leave
pop
push
jb
rcl
jnp
push
test
jl
mov
fcom
cmps
rcl
mov
mov
push
mov
mov
retf
retf
mov
aas
outs
mov
imul
mov
daa
(bad)
mov
ss
sbb
icebp
call
jns
stos
leave
push
(bad)
fcmovnu
cli
jmp
vpandn
sbb
out
mov
jl
sbb
(bad)
sbb
pop
test
call
push
xchg
in
mov
xor
addr16
jle
push
add
les
mov
mov
and
ds
test
mov
mov
in
push
popa
in
test
mov
push
(bad)
cmp
popf
and
mov
xchg
ss
or
pop
and
movs
fs
aas
(bad)
xchg
cmps
lods
mov
cwde
xor
popf
mov
bnd
xor
mov
jne
inc
sub
in
or
xor
jns
cli
and
xor
add
push
dec
xlat
fnsave
mov
or
xor
mov
push
idiv
xor
xchg
jle
cmps
loope
push
push
aam
push
pop
in
imul
scas
ins
call
or
repz
add
lds
repnz
mov
popa
xchg
adc
sahf
fimul
fcmovu
test
inc
xchg
and
pop
mov
movs
or
dec
jl
mov
loop
and
cmp
xor
(bad)
mov
pop
mov
pop
sar
rol
cmp
cld
clc
sahf
imul
jl
enter
mov
sbb
sbb
pop
aaa
fstp
ficomp
movs
or
dec
(bad)
mov
addr16
daa
(bad)
pusha
inc
xchg
mov
xor
mov
sub
or
cmp
es
jbe
cdq
les
mov
add
sahf
xor
pop
cmps
jle
inc
add
inc
pop
popa
push
inc
movs
mov
push
adc
cmp
retf
std
(bad)
jns
sub
stos
scas
xchg
mov
add
in
inc
jp
loope
test
xchg
nop
pop
jl
jge
mov
cmp
cmp
pop
sti
pop
lea
cmc
jo
or
jp
xor
xchg
sbb
cmp
mov
arpl
test
test
scas
mov
or
push
out
hlt
pop
ret
movq
dec
out
xchg
jmp
popa
pop
xchg
add
mov
out
xchg
mov
jle
dec
(bad)
rsm
mov
pop
cwde
jns
xchg
(bad)
xor
out
push
ja
pop
mov
xor
dec
cmc
pop
and
jbe
inc
jl
dec
sub
pop
not
push
loop
cs
mov
mov
jbe
lods
fdiv
or
mov
repz
xchg
pop
test
cmp
xchg
ja
dec
add
retf
cmp
fld
push
fild
dec
cmp
xchg
xor
sub
mov
loopne
outs
inc
lock
mov
pop
pop
inc
or
cmp
cmps
les
fcomp
add
pop
xchg
movs
cmc
nop
sar
(bad)
push
outs
getsec
xor
and
jne
mov
in
or
jmp
adc
adc
(bad)
(bad)
adc
sti
ins
xor
add
(bad)
(bad)
mov
sbb
and
scas
add
aam
xchg
xor
test
mov
imul
xchg
and
inc
or
sbb
mov
pop
xchg
(bad)
mov
and
(bad)
addr16
cli
pop
fwait
adc
xor
sbb
mov
add
mov
push
rcl
adc
arpl
jbe
lods
mov
sbb
push
push
jnp
ja
mov
lock
stos
sub
mov
inc
sahf
or
inc
neg
pop
pop
nop
push
dec
div
fisttp
fist
pop
out
pop
dec
(bad)
dec
frstor
in
xor
test
call
dec
lds
loopne
mov
jg
or
jns
es
outs
adc
adc
and
fld
sub
sbb
inc
shl
bound
push
inc
movs
pop
into
jl
xchg
sub
or
(bad)
inc
or
dec
jle
inc
hlt
jne
imul
inc
pop
loop
leave
scas
push
pop
jnp
jp
shl
mov
sbb
shl
test
cdq
xlat
retf
(bad)
sub
test
xchg
mov
push
add
cmp
cdq
pushf
icebp
dec
fld
fnstcw
sub
pop
(bad)
rcr
sti
hlt
push
push
mov
scas
cmps
(bad)
ficom
test
stos
and
pop
out
adc
adc
push
sbb
out
and
hlt
rcr
(bad)
daa
outs
ror
gs
jmp
add
cmc
scas
test
repnz
(bad)
jmp
push
mov
outs
in
iret
add
inc
(bad)
adc
in
inc
mov
leave
call
push
pop
push
je
cmp
sti
rol
std
inc
les
shr
es
xor
daa
test
inc
mov
inc
dec
cmp
arpl
cmp
inc
pusha
xor
adc
sub
mov
in
or
sub
loopne
jle
outs
mov
xor
sub
xor
pushf
sar
or
jo
inc
inc
push
jge
xlat
stos
dec
jno
mul
nop
popa
fmul
mov
inc
ror
nop
leave
std
xor
mul
add
popa
mov
icebp
jns
pop
ins
xchg
push
iret
retf
push
pminsw
mov
add
inc
mov
mov
dec
addr16
sub
or
jmp
or
mov
cmc
lods
stc
inc
inc
loopne
cmc
inc
aaa
imul
hlt
dec
ror
mov
ins
inc
jp
jne
xchg
inc
es
ret
mov
inc
adc
sti
das
fcmovnbe
or
adc
mov
jle
sub
xor
sbb
jnp
sub
imul
lock
jns
and
sbb
sahf
out
or
aam
cli
int
pop
ficomp
and
loope
stc
enter
adc
outs
xchg
in
push
jmp
adc
jno
in
mov
ins
nop
sar
std
xlat
sub
jmp
jb
push
push
xor
add
fmul
cli
outs
jecxz
jle
(bad)
mov
outs
inc
pop
add
mul
cmp
sub
pop
mov
out
sub
jp
in
imul
jnp
adc
cmps
stos
cmp
mov
add
push
xor
mov
and
retf
push
(bad)
fistp
adc
sub
ds
adc
pop
mov
test
pop
mov
movs
sub
add
iret
sub
dec
out
xor
mov
xor
pop
adc
or
(bad)
lods
int3
dec
xor
sbb
sub
sbb
out
call
sbb
sbb
mov
repnz
mov
leave
and
test
add
adc
xor
xchg
ror
lea
sub
es
xchg
loope
dec
out
lea
xor
mov
repnz
mov
es
jmp
xor
in
or
dec
xchg
push
pop
cwde
and
mov
sbb
int3
sub
aas
push
mov
add
inc
aas
xchg
pop
call
pop
in
ss
xchg
sahf
adc
dec
icebp
mov
fisttp
mov
cwde
int
xor
(bad)
push
adc
mov
pop
adc
inc
pop
mov
xor
mov
test
int
push
fdivp
pop
cli
dec
inc
mov
mov
(bad)
xlat
mov
add
fisub
mov
jns
mov
repnz
adc
and
xchg
inc
inc
das
sbb
call
addr16
and
mov
cli
loopne
js
xchg
sahf
cmc
das
mov
inc
pop
xchg
cmp
push
and
xor
(bad)
push
inc
(bad)
jnp
cs
(bad)
mov
lds
popf
ds
add
sub
cmps
add
rcr
mov
mov
popa
jmp
daa
xchg
push
(bad)
pop
mov
xchg
sbb
fld
jmp
jne
aam
mov
cmp
jo
jle
imul
test
mov
pop
mov
jb
retf
mov
inc
lds
or
cdq
cmp
call
jp
jno
jae
cmps
sub
and
dec
in
cs
test
or
shl
ret
rol
sti
and
pushf
sub
cwde
mov
jg
dec
loop
mov
xchg
adc
(bad)
and
clc
stos
sub
imul
xchg
adc
dec
or
xchg
push
in
pop
or
daa
mov
jg
pop
pop
mov
add
dec
gs
rcr
xchg
iret
or
pusha
pop
xchg
ret
je
test
sbb
es
gs
dec
dec
ret
push
sbb
popf
adc
aas
cmp
sbb
cmp
inc
repnz
xchg
adc
int3
mov
or
or
and
fcmove
test
dec
cmp
ret
and
jno
and
pop
out
lods
add
ins
mov
sbb
jo
cmc
ss
xor
dec
loop
jmp
dec
jl
push
iret
aad
mov
xchg
jns
cwde
fistp
sub
inc
xor
dec
jg
jg
mov
outs
dec
cmp
pop
xchg
dec
and
ins
push
sbb
fucomp
or
sbb
jmp
fs
and
sbb
jbe
push
pop
in
jp
add
pop
mov
adc
in
jnp
(bad)
xchg
cmps
adc
and
and
lods
cmps
sbb
inc
sub
xor
retf
mov
mov
push
or
icebp
icebp
mov
push
pop
aam
inc
ins
push
xchg
movs
call
mov
and
or
pop
mov
jle
mov
int3
pop
sbb
push
loopne
out
pop
mov
test
add
cmc
xor
sub
stc
dec
pop
outs
sub
jo
int3
jbe
push
in
out
or
(bad)
nop
mov
(bad)
jle
stc
sahf
cmp
cmp
imul
cmp
retf
dec
sub
mov
sbb
xor
xlat
retf
lods
push
into
cmps
test
pop
rcr
repnz
add
pop
jae
(bad)
mov
add
(bad)
rol
push
xchg
jns
sahf
and
pop
movs
(bad)
and
and
outs
inc
out
aaa
mov
mov
sub
cmp
(bad)
dec
pop
mov
int
gs
sub
mov
mov
or
fcomp
lods
psubusw
addr16
mov
gs
push
aad
add
fiadd
jbe
push
packssdw
dec
sub
sub
jge
mov
add
jge
inc
mov
out
std
jle
out
mov
pop
xor
pop
adc
adc
adc
(bad)
fcomp
mov
test
push
call
add
cmp
add
mov
cmps
out
imul
xchg
bound
aam
in
ss
scas
or
mov
popa
jle
or
push
add
ret
and
leave
dec
ins
rcr
sbb
cmp
xor
and
in
inc
or
test
and
std
pusha
ror
xor
mov
ins
fdiv
inc
mov
xchg
sub
xchg
repnz
or
mov
jmp
lods
mov
imul
xlat
push
push
out
pop
inc
leave
in
mov
pop
push
xor
fstp
add
test
sbb
inc
imul
rcr
jl
outs
xchg
jae
fdivr
retf
in
pop
stos
mov
push
call
cld
(bad)
sbb
loop
adc
push
aad
xchg
cmp
xchg
add
jecxz
popa
scas
adc
out
ja
mov
xor
cmps
sub
icebp
jo
es
hlt
pushf
add
jo
sub
test
mov
jle
push
and
sbb
into
mov
dec
das
cmc
push
out
cmp
mov
not
xor
pop
fstp
and
push
mov
(bad)
mov
cmps
ficomp
xor
(bad)
and
xchg
inc
mov
mov
(bad)
sti
mov
mov
sub
iret
push
mov
jmp
xor
xor
jns
xor
or
cwde
call
mov
cmp
jno
cmps
das
aas
mov
dec
pop
push
cmp
sbb
fldcw
jno
repz
out
mov
clc
adc
sub
pusha
repz
loop
lods
call
mov
and
pop
mov
pop
out
xchg
and
mov
out
cwde
cmp
mov
xchg
sub
es
xor
in
nop
les
inc
mov
mov
bound
test
xor
pop
adc
cs
dec
mov
nop
lods
push
sub
or
mov
jno
jno
outs
cwde
fiadd
sbb
push
aad
pop
cdq
adc
loope
mov
cld
imul
out
mov
shr
fcomp
add
sub
mov
ret
movs
adc
or
loop
mov
mov
fst
shl
je
cs
icebp
or
add
sti
psraw
mov
cmps
xor
scas
push
loop
je
pop
cmp
loope
retf
xchg
test
shl
idiv
xor
cmp
mov
sar
mov
sar
(bad)
clc
or
ror
mov
mov
loope
std
inc
pop
aaa
rcl
pop
jno
dec
enter
jmp
lock
cmp
out
push
sbb
sub
sbb
call
mov
sbb
call
jp
sbb
and
adc
add
ret
xchg
sbb
jbe
lods
loop
stos
loope
mov
mov
retf
mov
inc
jge
pop
mov
in
test
fisttp
(bad)
sbb
and
sub
sub
adc
mov
jmp
push
fdiv
dec
sbb
and
mov
ja
xor
cmps
cmp
js
fwait
sar
(bad)
lahf
popf
cmp
add
and
popa
das
aaa
push
cmp
pop
lahf
push
inc
test
aaa
adc
shr
shl
push
dec
std
inc
mov
shr
fisubr
inc
adc
aam
fs
push
leave
rcl
adc
xor
leave
push
xchg
cli
stc
fcomip
dec
popf
push
mov
jecxz
inc
cwde
fisub
push
ins
aaa
xlat
data16
adc
jns
in
mov
push
cs
xchg
retf
cmp
cli
fidivr
sub
adc
xor
or
add
mov
retf
pushf
add
test
cmp
jns
sub
add
outs
pop
inc
jns
sub
sti
mov
or
test
push
je
leave
ss
dec
cli
jae
pusha
pop
push
pop
mov
inc
cmp
mov
int
aaa
psrad
call
adc
sub
pop
pop
adc
or
repz
mov
pop
sbb
xchg
xor
adc
cmp
mov
push
jl
push
mov
mov
add
dec
fimul
jns
dec
and
cmp
scas
out
jbe
shl
and
add
push
pop
jmp
cmp
ss
xchg
test
nop
(bad)
jge
jb
add
mov
rcl
mov
outs
gs
mov
sub
cmp
dec
cmc
cs
(bad)
in
or
push
push
push
stos
pop
call
sahf
dec
aam
enter
in
mov
add
and
or
mov
lea
int
cmp
xchg
mov
aam
add
add
shl
mov
stos
sahf
shl
jp
mov
sbb
cmp
inc
xlat
shl
sub
mov
cmc
daa
xchg
inc
fldenv
(bad)
adc
xchg
adc
stos
int
retf
in
shl
int
mov
loopne
and
pop
fs
cs
xchg
sbb
in
inc
sbb
shl
leave
mov
call
sub
int
mov
jbe
loope
(bad)
xor
lahf
cmp
icebp
mov
mov
cld
pop
push
xor
retf
out
sbb
add
pop
xor
mov
cdq
cmp
sahf
inc
or
fbld
stc
call
mov
inc
lea
xor
retf
in
sbb
sti
mov
aas
fdiv
in
les
cdq
pop
outs
cmp
lds
sbb
adc
out
imul
pop
pusha
jns
imul
pop
add
pop
push
xchg
cld
in
es
push
outs
add
arpl
nop
pop
sub
jmp
cmp
stc
ins
pop
mov
mov
mov
mov
mov
repz
popw
pop
ss
dec
popa
xchg
in
(bad)
mov
pop
dec
push
inc
mov
xor
push
(bad)
in
jg
pushf
pop
xor
dec
jae
ficom
sbb
jg
jmp
push
ffree
push
stc
call
mov
add
sub
and
sar
jo
adc
repz
inc
mov
ret
cmps
fdivr
dec
shl
stos
mov
mov
pop
repnz
loopne
adc
mov
cmp
xlat
or
daa
fnsave
mov
clc
push
xor
outs
cmp
sahf
push
pop
das
das
icebp
or
lahf
lock
mov
sahf
mov
dec
cmps
retf
cmp
sbb
xor
cmp
test
xor
sti
movs
arpl
add
sub
sar
mov
push
sbb
inc
pop
push
int
int
pop
test
mov
fsubrp
shl
adc
aaa
and
jbe
fwait
outs
jns
inc
(bad)
retf
sbb
out
adc
test
or
imul
sbb
imul
mov
adc
cmp
cld
outs
rol
adc
int
dec
(bad)
push
add
pop
mov
push
mov
pop
pushf
ins
mov
add
call
cmp
push
or
mov
es
jl
xchg
repnz
inc
mov
xchg
jno
imul
into
xor
fs
(bad)
mov
jecxz
sub
mov
mov
sub
cld
mov
mov
inc
xor
adc
pop
lds
push
xor
imul
pushf
xchg
mov
xchg
cwde
int
dec
mov
repnz
jle
icebp
aas
int3
mov
mov
jecxz
les
aam
cmp
idiv
dec
dec
add
and
push
cmp
mov
pop
in
jbe
leave
push
dec
jne
mov
jb
in
jp
mov
loopne
addr16
cdq
pop
pop
sbb
pop
jp
mov
inc
pop
jo
(bad)
fstp
sub
or
jno
test
pushf
test
ret
mov
xor
fstp
add
mov
sub
push
pop
je
push
cmp
call
nop
lahf
push
mov
jmp
icebp
dec
outs
jge
cli
xchg
test
nop
mov
dec
(bad)
ror
(bad)
loopne
fst
inc
lods
mov
(bad)
dec
sbb
push
retf
mov
dec
or
sbb
repnz
xchg
scas
sub
push
test
adc
imul
xchg
sub
mov
sub
cwde
sub
jmp
sti
mov
and
mov
mov
sti
dec
dec
pusha
push
xchg
das
and
out
imul
nop
out
sub
stos
sub
fcom
retf
in
nop
mov
fisttp
lods
rcr
jnp
dec
(bad)
mov
fdivr
dec
cmp
cwde
mov
ret
sbb
lock
dec
pop
loopne
retf
xchg
mov
inc
add
ins
sbb
movs
dec
data16
mov
push
push
mov
or
loop
cmc
sub
sbb
push
jp
scas
jge
pop
into
ja
sbb
xchg
adc
inc
fsub
jo
xchg
mov
ss
les
mov
int
and
mov
jnp
dec
add
and
mov
pushf
push
cwde
push
adc
data16
pushf
lea
jno
ficomp
sahf
inc
iret
nop
push
inc
sub
lods
into
fisubr
fldcw
dec
sub
nop
retf
jp
ja
mov
xor
xor
cmc
jg
mov
pushf
pop
arpl
aam
lea
inc
pop
clc
movs
pop
sub
in
and
fisubr
or
add
mov
pop
cmp
je
fs
jl
cld
in
stos
(bad)
xchg
out
outs
mov
movs
daa
mov
mov
in
gs
push
dec
cli
cmp
mov
push
inc
adc
sbb
adc
retf
cmp
neg
sub
fistp
add
cmp
add
outs
dec
mov
xchg
dec
arpl
xchg
outs
mov
aas
jnp
stos
inc
jl
xchg
aad
lahf
xchg
mov
ret
stc
ins
and
call
ja
and
leave
cld
(bad)
lea
cmc
leave
outs
xor
dec
retf
mov
sahf
cli
sub
xor
xchg
mov
call
mov
pop
mov
in
jle
dec
retf
push
mov
jnp
call
and
in
inc
cmp
stc
pop
push
int
loopne
imul
add
lods
or
bound
dec
cwde
mov
mov
sub
push
push
dec
dec
fistp
jl
shl
jnp
dec
test
dec
call
aam
mov
rcr
jge
(bad)
aad
lahf
sub
loop
and
pop
jno
stc
xor
cmp
(bad)
fcomp
or
mov
imul
aas
and
mov
data16
sbb
mov
retf
out
mov
test
xor
adc
loopne
in
sub
or
in
out
imul
mov
cmpps
pop
adc
cmps
jno
out
(bad)
(bad)
mov
imul
dec
sbb
lock
cdq
mov
inc
push
push
shl
push
push
push
sti
mov
push
lods
imul
cli
cmp
mov
in
in
jl
push
es
rol
dec
mov
inc
test
sub
mov
push
in
jg
in
mov
dec
jno
(bad)
fcom
icebp
pop
rcr
pop
in
and
mov
fisub
and
mov
pop
jmp
mov
push
out
xchg
nop
sbb
jp
pop
mov
and
fadd
es
and
xchg
jmp
mov
adc
dec
int3
movlps
pop
cs
or
nop
mov
fwait
les
sbb
mov
jnp
les
xor
xchg
fcomp
push
aam
inc
call
xor
in
and
lea
into
repnz
rcl
(bad)
imul
retf
pop
bound
mov
inc
sub
sti
outs
adc
ret
popa
ins
pop
cld
ret
in
push
cmps
push
repz
pop
int
fcmovb
das
mov
or
add
leave
out
inc
ret
inc
sbb
retf
jl
adc
scas
jl
gs
gs
cmp
icebp
ret
push
jnp
mov
fld
cmp
xchg
and
and
scas
(bad)
(bad)
lods
jb
clc
lahf
lea
add
ficomp
fxrstor
dec
cmp
and
outs
dec
pop
lds
enter
dec
mov
or
ins
jecxz
sub
xchg
pushf
arpl
push
dec
leave
dec
inc
mov
aam
or
ret
push
outs
push
or
push
mov
ret
lock
inc
hlt
shr
jg
lods
xor
mov
add
adc
add
out
or
jb
mov
push
mov
fimul
xchg
ret
cdq
jne
push
jp
pop
adc
aas
add
cld
mov
into
ds
xor
inc
arpl
and
mov
xor
jle
push
data16
nop
aad
xchg
sub
outs
mov
pop
clc
and
pop
pop
xor
aaa
mov
inc
rcl
mov
imul
inc
xchg
dec
lods
leave
int
push
push
xchg
pushf
scas
mov
adc
fsubr
fidivr
test
hlt
xchg
mov
jmp
cmp
int3
inc
and
xchg
call
mov
ret
jmp
(bad)
or
icebp
out
pop
aas
in
adc
pop
clc
mov
(bad)
sahf
nop
xor
add
test
mov
add
aam
xchg
push
aad
xor
sub
dec
jns
int3
(bad)
neg
in
cwde
shr
dec
arpl
mov
xchg
fbld
jmp
bound
xchg
iret
arpl
ds
outs
mov
jno
(bad)
jae
mov
(bad)
fmul
cld
or
cli
dec
xchg
arpl
out
enter
sub
mov
pop
dec
and
add
fsub
mov
mov
jp
neg
daa
std
lahf
mov
or
(bad)
ins
and
push
es
push
mov
cmp
or
xchg
into
inc
aam
and
xchg
leave
lds
or
sti
fwait
jmp
inc
sub
int
adc
pop
pop
mov
mov
or
pop
fcomp
xor
xchg
push
es
dec
cmp
int
dec
cwde
mov
pop
retf
lods
enter
xor
inc
add
fisub
mov
shl
test
retf
push
aam
push
mov
and
dec
pop
in
pop
call
sub
ret
inc
cmp
imul
xor
out
popa
sbb
and
mov
sub
sbb
lock
nop
outs
add
dec
rcr
sub
adc
scas
inc
cmp
or
shl
pop
inc
mov
add
push
test
jmp
sbb
pop
add
mov
or
mov
out
div
pop
ins
clc
retf
pusha
call
fs
ds
(bad)
and
jb
dec
mov
(bad)
pop
mov
div
(bad)
out
sub
or
mov
xchg
inc
pop
push
loop
fwait
mov
retf
fwait
pop
retf
call
add
bound
xor
arpl
jno
add
jecxz
ror
lea
leave
push
mov
xchg
les
popa
out
fdiv
push
and
cmp
(bad)
in
pop
mov
icebp
or
jo
in
mov
sub
inc
shr
sbb
jl
and
mov
xchg
cmp
cwde
inc
adc
enter
daa
outs
push
jge
shl
xchg
hlt
push
mov
loope
pop
repnz
mov
das
(bad)
push
test
mov
add
xor
(bad)
sub
in
iret
adc
add
pop
mov
icebp
adc
xor
xor
ins
or
and
or
mov
shl
dec
scas
(bad)
into
adc
jnp
or
xchg
mov
jmp
loopne
jle
sbb
dec
lods
cmp
out
cmps
jb
inc
push
sub
gs
push
dec
test
mov
aaa
xor
xchg
push
push
jg
xor
inc
pop
out
mov
mov
sar
aad
push
daa
popa
out
jmp
jecxz
ss
mov
out
cmp
mov
push
sar
pop
in
sub
mov
inc
rcl
clc
push
lods
cdq
dec
mov
and
fisubr
pusha
loopne
inc
adc
imul
es
(bad)
shl
fcom
clc
push
data16
and
ror
jmp
and
loope
in
jmp
aam
outs
xchg
out
push
pop
sbb
std
dec
pop
inc
mov
jmp
lahf
mov
add
out
and
jno
outs
scas
call
test
inc
lds
mov
rcr
leave
imul
leave
ret
imul
in
jecxz
or
jl
push
rol
cmc
mov
rcr
or
mov
jg
imul
jb
sti
dec
and
out
popf
inc
inc
mov
cmc
adc
aam
mov
xor
into
shl
stos
inc
rcr
rcr
push
retf
test
std
lds
dec
mov
adc
ds
loope
mov
scas
jmp
mul
les
loopne
lock
sub
push
es
mov
je
pushf
out
lods
cli
sub
and
call
fild
jno
dec
bnd
es
mov
lods
gs
sub
jl
int
inc
jge
xchg
scas
addr16
fimul
add
aas
out
and
iret
lods
or
add
inc
arpl
sti
xlat
inc
push
sub
loope
dec
ja
adc
jl
jae
mov
add
and
fwait
gs
jmp
stos
jmp
sub
and
mov
or
jbe
enter
fwait
iret
adc
dec
inc
add
dec
sbb
add
ret
out
xchg
stos
das
cmp
cmp
mov
inc
ins
cs
das
pop
in
fist
ffree
mov
fadd
push
aaa
inc
rsqrtps
jmp
call
movs
dec
mov
cli
xchg
add
push
dec
mov
push
(bad)
addr16
cmp
dec
push
das
mov
fnsave
pop
or
loop
scas
mov
fs
pop
aam
sbb
jno
jbe
xor
aad
pop
xchg
rcr
lock
jns
jae
loope
and
loopne
pop
xor
scas
jmp
ja
jle
push
and
mov
add
adc
or
mov
dec
jb
xchg
ret
dec
and
jge
mov
adc
stc
xor
jmp
std
jns
adc
lds
or
test
out
sbb
mov
retf
into
mov
inc
adc
xlat
mov
movs
sbb
mov
fidiv
xchg
dec
retf
or
repz
jns
stc
out
xchg
pop
jns
mov
fbstp
and
inc
xchg
movs
lock
in
mov
mov
dec
retf
daa
sbb
int
xor
stos
popa
icebp
sahf
mov
adc
iret
push
dec
xchg
add
mov
(bad)
sub
(bad)
mov
lahf
fimul
lahf
mov
in
xchg
pop
test
jmp
add
pop
lahf
mov
push
xor
js
cmc
bnd
stos
dec
in
hlt
jne
mov
dec
sbb
mov
mov
loope
cmp
addr16
(bad)
sub
pop
(bad)
scas
(bad)
sbb
(bad)
push
call
stos
sub
mov
js
repz
es
cmp
dec
pop
iret
sbb
pop
mov
xor
push
jmp
dec
sub
stos
(bad)
das
jns
imul
int
jmp
mov
cli
jmp
xchg
daa
jp
fimul
pavgb
and
xchg
mov
movs
xchg
sahf
clc
das
mov
dec
pop
pushf
enter
inc
mov
lock
cs
test
hlt
xchg
mov
dec
push
ret
xchg
outs
call
xchg
jnp
jle
push
sbb
in
icebp
loop
popa
lock
pop
stos
sti
sub
cmps
test
test
or
divps
xchg
and
push
add
and
or
imul
pop
lds
push
sub
mov
ins
dec
or
aad
test
mov
xchg
stos
add
and
xlat
or
sar
push
or
inc
leave
mov
jge
mov
rcr
fiadd
push
adc
and
jb
pop
retf
fdivrp
mov
mov
push
adc
popf
dec
xchg
jge
and
call
aas
sub
or
sub
pop
sbb
mov
and
add
cmps
sar
cmps
xchg
hlt
pop
inc
ja
fstp
mov
xor
ins
imul
and
adc
inc
adc
cs
imul
test
xor
sbb
or
arpl
neg
cmps
jmp
int3
cmps
push
xor
adc
dec
xor
cli
lds
std
dec
fild
stc
(bad)
ficom
push
sar
neg
jb
adc
movs
and
xor
sub
push
add
jno
test
cmps
mov
cdq
mov
jnp
and
imul
inc
mov
inc
inc
xor
or
sub
cmp
push
xchg
popa
pushf
imul
hlt
push
xor
jno
setp
fs
out
test
test
pop
dec
data16
and
pop
aam
or
and
ficomp
push
push
cmc
sahf
and
pop
sbb
inc
scas
bound
fist
out
cmp
fdivr
jle
mov
xor
sbb
aam
mov
(bad)
mov
push
push
in
inc
sub
and
cmp
imul
cli
into
sbb
sbb
or
mov
mov
test
cmps
pop
and
jno
je
jmp
dec
jg
(bad)
jnp
nop
mov
and
fstp
lea
out
sub
ffree
dec
inc
xor
or
cmp
inc
push
xor
mov
mov
mov
push
fistp
mov
pop
push
sbb
jg
sub
push
jmp
int3
mov
repz
jo
mov
sub
popf
lahf
or
lock
fld
div
outs
loop
push
int3
push
scas
push
daa
inc
lock
mov
call
sbb
pop
dec
sub
pop
clc
ja
mov
sub
jmp
stos
push
pop
xchg
in
pusha
jno
loope
fadd
fcomp
(bad)
gs
inc
mov
out
sub
cdq
rcl
push
inc
cmp
dec
shl
fild
addr16
mov
sti
dec
or
mov
popf
add
jl
lds
mov
stos
test
push
lods
mov
leave
inc
lea
in
or
jl
mov
push
jae
xchg
cmps
jge
mov
mov
aad
fs
int3
inc
cmp
sar
fisubr
bound
jg
mov
jne
sahf
sahf
rol
scas
in
icebp
das
cmp
and
xchg
neg
call
mov
in
add
(bad)
fidivr
(bad)
jmp
leave
in
inc
mov
stos
adc
icebp
mov
push
mov
push
jb
aam
call
xchg
enter
pop
jecxz
scas
sbb
dec
popa
pop
sub
repz
test
(bad)
repnz
arpl
push
out
add
and
test
test
jmp
add
ins
clc
adc
adc
nop
dec
jbe
inc
mov
lods
ret
ja
and
or
xchg
mov
repz
xchg
int3
jmp
outs
mov
xchg
jmp
mov
mov
fstp
add
sahf
pop
into
ss
or
dec
call
addr16
ret
mov
imul
push
mov
inc
pop
sti
pop
sbb
or
push
jbe
inc
and
dec
jecxz
(bad)
test
imul
cmc
inc
(bad)
push
clc
adc
mov
(bad)
xchg
fst
es
pop
ret
xor
out
scas
(bad)
loope
ror
add
mov
push
cmc
(bad)
in
lea
lea
cwde
popf
cld
test
nop
pop
push
adc
dec
iret
(bad)
inc
call
inc
xchg
int3
sub
xchg
ret
(bad)
push
mov
(bad)
int3
sar
push
cmc
cdq
fldcw
out
cmp
add
fwait
cmp
pop
aas
sub
fucomp
xor
loope
mov
jbe
loop
mov
push
je
stc
bound
mov
lahf
sbb
fisttp
fs
xchg
fbld
or
mov
dec
jmp
and
sahf
jmp
mov
mov
mov
mov
ficomp
outs
xor
fs
cmp
(bad)
nop
test
imul
mov
ds
sub
mov
xlat
lods
inc
mov
(bad)
scas
and
jg
pushf
es
add
sub
pop
push
clc
xor
jmp
jo
popf
sbb
sbb
call
ins
adc
inc
mov
mov
scas
clc
adc
pop
jl
retf
pusha
push
test
fcmove
popf
int
xchg
cmp
mov
mov
xor
xchg
dec
push
int3
mov
push
sub
lods
mov
out
or
adc
mov
push
mov
call
adc
add
(bad)
or
jns
cmp
aaa
push
or
add
cdq
xchg
int3
add
jmp
std
add
mov
jp
sbb
fwait
jl
xchg
lock
or
mov
out
scas
(bad)
cwde
mov
or
sub
mov
sbb
ret
jno
add
sbb
jae
movs
adc
sub
mov
popa
pop
xchg
inc
jle
sbb
or
repz
pop
add
xor
mov
inc
pop
add
mov
inc
jge
or
dec
pop
ja
loope
xchg
add
push
cdq
sub
push
(bad)
cmc
ficomp
rcr
ins
or
sbb
out
sbb
push
scas
sbb
cmp
pop
mov
cmp
or
imul
pop
in
mov
and
dec
jnp
add
out
ja
in
mov
dec
pop
sub
and
icebp
xchg
andnps
(bad)
and
sub
cmp
leave
dec
fimul
aaa
sbb
jbe
pushf
fisubr
cmps
gs
loope
nop
add
xor
jle
push
mov
ffree
pusha
pusha
fisub
pop
std
mov
inc
add
frstor
and
jae
jmp
sub
xlat
pop
sub
or
mov
test
lock
and
lahf
cmp
fist
cdq
push
cdq
or
rcl
imul
mov
mov
ror
call
add
shl
pop
iret
dec
dec
rcl
inc
lea
xor
pop
adc
jne
cmps
cmps
push
sbb
push
sub
push
and
test
mov
out
(bad)
inc
mov
adc
das
mov
fstp
ret
call
xlat
add
addr16
dec
cld
sbb
arpl
inc
stc
(bad)
jns
(bad)
mov
mov
ins
rol
fidiv
jno
f2xm1
dec
cmps
in
pop
ror
mov
add
popa
xchg
je
das
retf
sti
fbstp
stc
sbb
xchg
fs
mov
add
xchg
aam
mov
iret
and
bnd
push
lahf
mov
lds
mov
dec
in
sbb
lods
cmps
retf
mov
mov
cmc
jnp
pusha
call
lock
aad
call
sub
sub
jl
scas
cmc
es
repnz
xor
adc
imul
jmp
or
sbb
or
push
jb
jns
mov
sbb
jmp
jne
fwait
outs
sub
pop
ss
mov
and
sub
or
cmp
pop
and
mov
jmp
ror
xchg
xor
stos
(bad)
or
sub
iret
xchg
mov
mov
enter
retf
shr
aas
dec
(bad)
xchg
pushf
lahf
fst
dec
sahf
loop
dec
outs
jmp
mov
(bad)
cld
mov
je
xchg
iret
add
mov
push
adc
fisub
mov
mov
inc
fwait
inc
mov
and
(bad)
mov
cs
aad
leave
jae
mov
aaa
popa
je
push
dec
je
dec
out
lock
xchg
aaa
retfw
pushf
or
pop
add
sti
add
popa
mov
fs
fistp
lods
sub
and
jp
(bad)
out
push
pop
jnp
inc
jg
mov
sub
(bad)
enter
(bad)
mul
aas
les
pop
adc
cs
xchg
fisttp
js
dec
out
or
ins
or
mov
push
aam
xor
push
je
xor
out
gs
jp
xlat
jmp
pop
push
call
sbb
or
push
cmp
cwde
mov
inc
movs
jge
out
nop
aaa
mov
xor
cmp
pop
not
int
add
or
sbb
and
ja
sbb
jb
pop
add
push
mov
xor
sub
xchg
jmp
cmps
inc
xor
or
es
and
mov
lahf
push
scas
mov
inc
(bad)
mov
inc
xor
sti
and
popf
jae
pop
pop
inc
push
sub
cmp
mov
sar
or
mov
mov
in
ins
jecxz
jle
hlt
inc
pop
sbb
fisubr
movs
stc
(bad)
enter
aad
push
sbb
cs
mov
and
adc
or
sub
jg
sub
inc
xchg
jb
js
add
mov
jne
icebp
out
sub
xor
sar
push
jo
push
push
mov
push
dec
aad
nop
dec
retf
lods
xlat
push
aam
mov
xor
(bad)
and
js
jns
add
jo
fimul
call
mov
sahf
rol
mov
cmp
rcr
retf
xchg
xchg
mov
test
adc
stos
push
dec
cmc
jle
fcomp
jp
mov
popa
xchg
push
jo
and
mov
enter
out
leave
mov
inc
vdivpd
mov
sti
push
inc
jge
sub
add
shr
fistp
fcomp
mov
mov
pop
jo
sub
(bad)
jmpw
es
pusha
or
mov
xor
jne
cdq
push
adc
sub
fist
jnp
pcmpgtb
jl
cmp
inc
bound
mov
mov
adc
call
test
jecxz
(bad)
mov
or
pop
sahf
cmp
xchg
push
out
sbb
clc
mov
mov
fld
or
pop
mov
xchg
jno
popa
and
or
xchg
aas
mov
xchg
test
loope
mov
adc
popf
pop
rcl
sub
popf
push
jno
(bad)
(bad)
imul
mov
pop
pusha
add
sub
imul
(bad)
mov
clc
in
fcmovu
or
popf
mov
adc
inc
cmps
movs
mov
fmul
push
add
mov
call
sbb
pop
xor
cmc
sbb
fxch
inc
push
test
push
push
xchg
mov
sub
jbe
xor
xchg
out
mov
push
sti
sub
dec
add
dec
or
stos
xor
xor
push
repnz
leave
fwait
hlt
addr16
dec
adc
cmp
imul
mov
jns
movs
test
aaa
js
add
cmp
xrelease
add
pop
xor
or
in
ins
mov
mov
mov
sub
cs
cli
push
out
push
sub
xchg
ins
adc
popf
mov
jnp
xor
mov
cmpxchg
pop
das
dec
hlt
leave
cs
mov
push
in
in
stos
or
push
and
sub
add
mov
fmul
scas
inc
loopne
mov
(bad)
mov
rol
cmp
movs
pop
inc
stos
jg
inc
cld
inc
and
add
push
into
sub
push
and
fild
push
add
fwait
(bad)
jnp
sti
and
jae
jmp
movs
mov
rol
ror
shr
fs
data16
(bad)
std
and
pop
push
xor
sub
and
sub
icebp
das
xchg
cwde
aas
mov
movs
sub
clc
and
xchg
adc
mov
add
dec
cmp
pop
xor
xor
lds
mov
sub
xchg
(bad)
and
hlt
int3
(bad)
or
dec
push
pop
pop
push
mov
int3
in
out
(bad)
pop
repnz
jo
inc
xchg
jg
xchg
push
daa
mov
pop
dec
xchg
pushf
xor
and
jle
ins
loop
ffreep
in
div
sbb
mov
xor
cld
(bad)
aaa
add
das
imul
or
xor
xchg
push
lea
push
mov
cmp
(bad)
fild
fisub
test
jmp
js
inc
ins
sbb
test
lea
xchg
pop
push
jl
lods
mov
das
xchg
mov
mov
and
popf
aad
daa
push
ja
fnsave
mov
pushf
call
push
lods
dec
push
mov
mov
inc
cmp
add
es
jno
jo
call
icebp
sub
pop
arpl
add
je
xor
and
cmp
xchg
fldenv
dec
enter
sti
xor
mov
shl
jo
in
or
mov
cmps
loope
sahf
outs
jle
movs
fs
cwde
outs
xchg
call
lods
in
dec
popa
idiv
sahf
popw
jae
pop
aaa
jbe
(bad)
into
cmp
adc
push
cld
inc
cdq
push
lock
or
mov
and
xor
xchg
clc
mov
ja
dec
int3
and
imul
fcom
cmp
cdq
ds
cmp
mov
add
pop
fstp
cwde
pop
push
pop
jbe
and
add
push
in
mov
ret
mov
adc
pop
sub
je
mov
xlat
push
jecxz
repnz
sahf
ds
call
(bad)
xor
sub
add
jns
(bad)
test
add
hlt
jl
aas
in
sbb
call
aad
dec
push
jno
hlt
scas
fist
push
aam
mov
lahf
adc
mov
push
test
mul
pop
push
push
and
mov
inc
pop
mov
dec
adc
movs
mov
xlat
and
sub
mov
nop
mov
out
js
adc
mov
pop
fld
xor
or
jge
dec
imul
xor
outs
cmp
mov
or
jmp
loope
mov
test
mov
popa
lock
popa
add
je
fisubr
mov
mov
inc
(bad)
loopne
and
lahf
jle
fnstcw
mov
ret
(bad)
jnp
xor
daa
or
arpl
and
mov
call
clc
push
daa
xor
xchg
cs
sar
and
xlat
lahf
pop
cld
mov
mov
int
xor
mov
pop
xchg
data16
loopne
shl
push
out
xor
add
popf
xchg
push
es
xlat
adc
push
popa
jmp
retf
test
les
call
and
mov
jno
push
dec
inc
pop
xor
mov
push
xchg
and
scas
das
aam
jb
daa
sub
adc
adc
pop
sti
inc
mul
push
mov
aad
or
out
xchg
mov
lods
xchg
mov
or
arpl
jne
xchg
xor
pop
stos
in
and
xchg
ret
pop
adc
mov
pop
std
fdivr
inc
add
outs
mov
aad
add
cmc
or
pop
jmp
jmp
jns
arpl
sahf
nop
xchg
outs
cli
rcl
cmps
je
mov
arpl
fwait
mov
xchg
push
daa
pop
xchg
je
xor
pop
push
push
rcl
xor
imul
adc
adc
pop
fwait
cmp
aad
stos
leave
xchg
rol
lods
lahf
add
xchg
add
imul
lock
pusha
call
hlt
xor
pushf
aad
les
push
sbb
push
fistp
sub
cmp
outs
outs
fcomp
fidiv
aam
cmc
xchg
inc
cdq
push
test
adc
cmp
out
jno
mov
inc
in
mov
mov
jl
imul
daa
adc
sbb
push
cmps
aas
mov
sbb
iret
xchg
call
not
mov
add
por
lods
pop
pop
or
leave
(bad)
fisttp
cmps
xor
mov
rol
xor
cmp
add
int3
hlt
pop
retf
pop
ret
pop
pop
clc
sub
jp
jge
jmp
xchg
cmc
xor
ja
sbb
dec
hlt
rcl
dec
in
jg
push
sub
ss
sbb
int
sub
rcl
out
jl
mov
xor
out
cmps
pop
cmps
call
in
pop
dec
movs
stc
stc
ds
ins
cmp
test
mov
mov
int3
int
outs
jo
dec
pop
push
repnz
dec
cwde
(bad)
repnz
shr
out
cli
xlat
clc
inc
pop
mov
and
add
(bad)
leave
(bad)
jns
push
cmp
popa
cmp
sub
dec
test
xor
in
cmp
push
cwde
(bad)
fsubp
fild
nop
jecxz
(bad)
mov
and
outs
cmp
jl
xor
sub
ss
mov
bound
add
lods
push
int
fist
pop
cld
mov
adc
iret
sub
addr16
pop
inc
cwde
cli
call
dec
push
and
out
mov
push
push
push
ja
pop
scas
fwait
inc
pop
and
inc
loopne
outs
lods
imul
mov
clc
ins
retf
aas
dec
mov
xchg
sub
and
push
data16
cdq
xchg
and
dec
mov
pusha
dec
cwde
jne
loop
loopne
sbb
imul
or
mov
js
mov
lock
rcl
cwde
scas
xor
inc
jl
or
push
out
push
ror
into
cmp
lock
and
and
sub
sub
cmc
scas
mov
or
pop
div
repnz
(bad)
pop
call
and
jecxz
or
mov
pop
push
iret
or
fwait
jo
imul
jne
or
loop
push
jl
stos
xorps
pop
sub
cmp
cmp
aam
mov
(bad)
or
mov
lods
cmp
(bad)
xchg
dec
mov
adc
sbb
shr
jp
cmp
add
fiadd
repz
sub
push
jmp
sahf
into
pop
enter
lds
cld
je
push
fsubr
jmp
ds
or
and
add
xchg
pop
adc
test
shl
mov
cmp
cmp
imul
mov
sub
sub
inc
or
adc
mov
bound
ins
mov
mov
or
mov
push
pop
add
xchg
and
mov
inc
test
push
shr
aad
retf
retf
outs
jle
fisubr
(bad)
sar
cmp
(bad)
sub
jae
(bad)
cmp
xchg
sub
push
xchg
adc
xchg
cli
mov
jae
xchg
popf
add
int3
retf
inc
lods
scas
jge
lods
adc
inc
xchg
fmul
fdiv
ror
sub
mov
loopne
(bad)
clc
pop
scas
test
xchg
cmp
sti
fdivr
aaa
cmp
sub
cmp
or
cmps
jle
sub
inc
jbe
enter
sub
pop
ds
ja
inc
pop
and
in
repnz
mov
shr
je
dec
adc
or
jns
inc
and
scas
pop
repz
in
pop
dec
ror
mov
mov
push
pop
repnz
aas
int
fwait
popf
hlt
xor
fdivr
ret
sbb
mov
pop
jmp
mov
(bad)
push
rcr
test
call
gs
test
daa
sbb
fwait
out
loope
or
dec
xor
dec
jbe
dec
gs
arpl
jecxz
mov
cdq
out
mov
inc
stc
pop
loop
(bad)
adc
outs
push
mov
int3
dec
test
jae
cmps
in
xchg
lods
(bad)
lock
lds
add
and
mov
xor
dec
push
inc
xor
cmp
mov
jg
pop
loope
test
stc
pop
mov
mov
(bad)
jle
sbb
or
jl
sub
outs
xchg
dec
and
call
jle
(bad)
sub
stos
inc
shl
in
fs
mov
mov
or
loop
push
or
adc
adc
mov
pop
push
pop
jge
push
movs
(bad)
mov
sub
push
loope
sub
pop
addr16
jno
(bad)
das
ret
sahf
iret
stos
outs
push
xor
mov
(bad)
jle
je
lock
in
es
in
mov
(bad)
loope
dec
push
push
aas
sub
jge
jmp
dec
mov
loope
cmc
arpl
xchg
(bad)
dec
inc
(bad)
or
add
dec
push
inc
mov
cmp
sbb
out
into
mov
and
je
xor
in
stos
push
xchg
lds
outs
daa
aam
sub
push
cmp
(bad)
xchg
dec
ret
mov
xchg
add
pop
leave
pop
adc
mov
int
xchg
jne
xchg
cmps
xor
in
movs
sti
dec
pop
shr
push
or
push
shr
repz
mov
jns
inc
push
xor
ret
imul
mov
test
test
mov
and
xchg
push
imul
jb
loop
sub
fldenv
lea
das
jmp
(bad)
jecxz
ins
xor
pop
mov
mov
cmps
mov
sbb
jb
daa
mov
push
dec
sahf
jmp
sub
jmp
fimul
or
ins
sub
pushf
push
push
mul
add
jbe
pop
jno
sar
movs
(bad)
test
scas
mov
cmp
aam
fadd
mov
or
aaa
es
enter
js
sub
inc
iret
mov
in
sbb
rcr
mov
jp
cld
xchg
in
mov
adc
mov
xchg
out
repz
test
shl
jmp
mov
sbb
sbb
lods
out
cmc
adc
push
jb
inc
xlat
pop
repz
ss
int
fadd
push
addr16
and
mov
adc
jmp
ror
aaa
test
cmps
mov
sub
les
inc
mov
mov
cli
hlt
rol
add
je
add
xor
fcom
jmp
xchg
pop
xor
aaa
rol
xor
pop
mov
rcr
inc
and
inc
int3
mov
cmps
arpl
sub
xchg
adc
fwait
neg
dec
cmp
outs
mov
jl
pop
xchg
mov
in
lea
mov
les
lock
mov
test
sub
fdiv
je
int
jne
sahf
or
mov
mov
or
cmp
push
mov
jp
mov
push
mov
lahf
outs
push
sqrtps
nop
aam
mov
jne
adc
xchg
out
addr16
mov
aam
and
ins
hlt
loop
or
add
xchg
jnp
cmp
mov
fistp
push
outs
pop
daa
cmp
mov
shr
(bad)
fldcw
and
outs
rol
cmp
das
add
jle
loopne
sub
mov
arpl
test
and
mov
dec
sub
in
nop
fild
sti
std
inc
mov
xchg
mov
jmp
sti
or
or
(bad)
add
adc
pushf
dec
adc
inc
sbb
daa
jnp
adc
or
repz
cmps
cwde
stc
add
shl
xor
cmc
lods
out
pop
in
xor
out
fidiv
js
pop
cmps
data16
cmp
push
dec
sub
sub
leave
outs
call
cli
add
mov
out
add
jae
jne
jne
stc
ins
and
out
mov
and
xor
jae
adc
jge
mov
cmp
dec
aam
pusha
push
nop
and
test
ja
cmps
fdivr
dec
jo
cs
or
xchg
cmp
fnstenv
(bad)
in
stc
out
add
xchg
sbb
in
movs
hlt
repnz
sub
cmp
fistp
or
cmp
fcom
sub
sbb
ins
dec
mov
loope
push
shl
mov
dec
mov
fisttp
scas
push
outs
xlat
dec
mov
xor
mov
jb
outs
inc
stc
mov
or
ss
cmp
xchg
inc
dec
pop
out
cmp
fisub
int3
jb
dec
outs
jle
add
repz
popf
mov
rol
nop
pmaxsw
ss
jbe
pop
xchg
lahf
xlat
push
ror
repnz
push
and
inc
aaa
add
mov
adc
aad
je
push
call
jo
int3
data16
push
jge
adc
sbb
std
lea
mov
xlat
sar
sub
mov
cmc
add
int
sub
adc
outs
bound
xchg
inc
dec
push
pop
jb
stc
add
(bad)
leave
mov
adc
and
and
mov
fadd
(bad)
adc
arpl
xor
jae
adc
or
adc
fidiv
les
sbb
push
dec
std
mov
mov
pop
sbb
xchg
jae
pop
and
call
mov
mov
jmp
ds
iret
cmp
mov
jge
(bad)
jmp
movs
or
fwait
test
pop
xchg
call
mov
xor
jno
add
je
loop
imul
pop
lock
add
and
mov
add
pop
test
push
mov
rcl
push
jne
js
cwde
clc
mov
xor
push
jle
hlt
pusha
dec
clc
clc
xchg
jno
push
mov
(bad)
cli
dec
aam
in
adc
push
les
dec
int
inc
sub
ss
mov
(bad)
adc
jns
push
jle
inc
pop
jl
mov
aad
inc
xchg
call
mov
adc
shr
dec
mov
jbe
test
dec
adc
mov
adc
daa
leave
inc
aaa
xor
sub
jmp
mov
call
mov
sub
out
jno
pop
aad
dec
pop
mov
xchg
outs
aas
mov
sar
jl
in
iret
sub
or
cmp
xchg
sar
push
mov
imul
push
and
gs
jns
mov
push
ret
lahf
(bad)
jp
xor
(bad)
into
mov
fcmovu
ins
xchg
stos
mov
test
push
push
test
and
adc
aaa
vandps
fbstp
ins
jae
test
xchg
fucomp
xor
out
mov
or
out
and
inc
adc
test
frstor
inc
sub
xchg
and
cli
mov
and
jmp
jae
pop
inc
push
cmp
xor
jmp
(bad)
pop
pop
out
fdecstp
outs
das
cmc
imul
mov
inc
fwait
jp
imul
(bad)
xlat
push
cmps
pop
mov
or
mov
xchg
pop
fist
xchg
imul
arpl
icebp
xor
pop
loop
fiadd
movs
dec
aad
and
clc
fwait
test
pop
iret
repz
mov
std
jns
sbb
pop
pop
sbb
gs
sbb
ss
jbe
adc
stos
shr
sbb
mov
mov
sbb
push
xchg
clc
imul
out
adc
or
ds
mov
mov
inc
loopne
jge
daa
dec
fmul
push
and
jo
daa
movs
lahf
fwait
and
pop
jne
lods
mov
xor
sbb
add
adc
cmp
jg
and
movs
pusha
mov
xor
cdq
js
lea
bound
mov
jo
inc
pop
int
lds
pusha
mov
jb
dec
outs
mov
mov
cmps
iret
call
mov
push
pop
in
call
xchg
mov
pop
sti
jp
sub
lods
data16
test
pop
sub
mov
pop
ins
cdq
sub
dec
mov
hlt
mov
mov
push
mov
cmps
jns
cmp
cmps
das
mov
xor
dec
ret
data16
rcl
mov
adc
sub
call
pop
js
mov
jmp
cwde
fdivr
push
sub
ror
inc
inc
mov
ficomp
fsub
and
xor
push
test
mov
leave
out
loope
xor
std
sar
fstp
shl
xor
sub
cmp
pop
add
dec
les
(bad)
push
aas
sbb
ret
mov
mov
aad
sub
neg
adc
in
or
fld
mov
daa
scas
xor
inc
rcl
(bad)
aaa
and
aas
pop
lock
out
(bad)
(bad)
and
push
enter
rol
hlt
call
lods
and
sub
jp
xlat
inc
mov
mov
mov
shrd
push
movs
dec
or
popf
pop
ss
dec
dec
sbb
aam
popa
mov
pop
inc
cwde
cs
fnstcw
or
cmp
cwde
in
push
mov
pop
cs
std
icebp
cmp
(bad)
in
jle
push
mov
or
lods
xchg
and
dec
scas
fisttp
mov
mov
mov
pop
(bad)
jg
test
loopne
mov
lods
fcmovne
mov
es
add
or
cwde
xlat
popf
sbb
dec
imul
unpckhps
cwde
rcr
pushf
dec
fimul
pop
jb
pusha
push
in
and
or
(bad)
mov
stos
jne
lock
adc
aas
pop
iret
int
scas
xchg
dec
iret
ret
xchg
push
fwait
out
sub
iret
bound
in
jns
test
(bad)
sub
add
call
rcr
sbb
inc
adc
sahf
inc
jne
dec
(bad)
jmp
or
mov
cmp
mov
inc
cmps
out
sbb
mov
ret
or
pop
jbe
in
je
xchg
(bad)
cld
push
(bad)
fld
mov
pop
std
mov
lahf
mov
daa
or
dec
adc
into
dec
(bad)
cmp
loop
xchg
mov
mov
into
clc
lock
or
add
cmp
aam
jmp
int
loope
aaa
scas
movs
pop
xor
push
lea
jl
lea
icebp
xchg
inc
shl
fstp
aas
aas
add
mov
int
push
sub
hlt
pop
sti
movs
sbb
jnp
cmc
mov
aaa
mov
inc
sub
and
js
dec
pop
jb
stos
adc
push
xor
(bad)
cmp
into
pop
fnsave
mov
mov
push
aas
pop
cmc
sbb
inc
mov
sub
sbb
pop
cmps
lock
ret
inc
jnp
and
scas
in
push
jne
pop
lea
pop
pushw
in
mov
jmp
inc
jbe
xchg
mov
xchg
retf
or
ret
inc
adc
pop
les
ficomp
jmp
fs
call
out
and
arpl
xor
pop
fwait
jmp
or
movs
jno
sbb
call
jns
in
cmc
es
lahf
or
fwait
arpl
sbb
push
add
fcomp
gs
add
mov
or
mov
adc
fs
enter
mov
(bad)
cmps
xor
ja
add
jecxz
(bad)
pop
and
mov
lea
(bad)
dec
sbb
push
dec
hlt
pop
movs
(bad)
sbb
xor
scas
sbb
ins
pop
hlt
mov
stos
lods
jmp
mov
mov
xor
call
movs
or
mov
mov
mov
sbb
push
add
loope
dec
out
rol
ds
sub
mov
sub
xor
xor
mov
sbb
xor
dec
mov
mov
xchg
jmp
jae
jge
fcomip
loope
or
loopne
cmp
fdivr
jg
sub
js
cmp
sbb
cmp
aad
popf
xchg
cli
mov
or
ss
jns
bsr
hlt
ret
fisttp
pop
out
cmp
in
jmp
stos
mov
mov
mov
fbstp
sahf
enter
shr
les
or
adc
or
test
adc
mov
repnz
pop
mov
xor
js
gs
pushf
push
mov
mov
adc
jecxz
push
xor
sub
pop
mov
imul
and
pop
sub
rol
movs
into
jmp
xor
retf
jae
je
or
sbb
popf
in
(bad)
in
xchg
addr16
dec
pop
test
aam
(bad)
push
mov
lods
adc
xchg
xchg
pop
test
jnp
pop
scas
imul
xchg
stos
cmp
pop
aad
and
aas
inc
popa
sbb
jge
lock
mov
(bad)
jg
lea
xchg
hlt
lods
adc
fcmovnu
aaa
pusha
fimul
mov
jne
pop
mov
cs
push
lods
mov
mov
std
jl
in
add
popa
retf
pop
movs
sub
idiv
sub
jae
aas
cdq
mov
jne
retf
xchg
push
add
xchg
mov
mov
dec
out
(bad)
(bad)
je
(bad)
push
jg
mov
sbb
hlt
out
fs
mov
mov
dec
push
fs
mov
xchg
movs
jmp
movs
ret
sub
sbb
xor
fdivr
(bad)
and
hlt
ds
mov
xchg
jo
sbb
ret
aaa
cmp
push
repz
lods
scas
fcmovb
jmp
and
es
in
and
imul
mov
add
or
outs
add
jb
retf
mov
adc
xor
sbb
sar
push
movs
movq
fiadd
xor
imul
out
(bad)
add
bound
mov
mov
mov
push
fistp
sbb
and
mov
stc
mov
mov
adc
xor
out
rol
(bad)
fadd
sub
push
mov
lds
pop
mov
iret
cs
add
aad
xor
stc
cmp
dec
jmp
gs
and
hlt
or
cmp
loope
fcmovnbe
pushf
or
push
popa
and
cmp
pop
or
nop
int3
xchg
pop
sub
xchg
retf
mov
fisttp
sar
cmp
sub
popf
stc
dec
xchg
(bad)
lahf
test
adc
pop
cmps
mov
xor
iret
or
adc
push
mov
cmp
sbb
loop
pop
imul
daa
aam
les
bound
sti
push
jl
push
jmp
gs
shl
imul
jecxz
iret
cmp
adc
mov
jge
dec
les
jo
cwde
jb
xchg
dec
xchg
jge
xor
pop
fbstp
jne
(bad)
loopne
add
into
add
sahf
sub
inc
add
inc
rcl
ins
ja
or
cmps
jp
mov
das
fldcw
mov
fist
mov
adc
(bad)
mov
mov
imul
xchg
xchg
mov
adc
mov
sbb
add
or
inc
shl
xor
dec
inc
xchg
add
and
movs
pop
cmp
mov
icebp
js
jne
imul
aad
aad
ins
retf
(bad)
adc
inc
fs
daa
test
arpl
mov
add
ficom
xor
(bad)
fisttp
call
daa
in
jmp
add
jecxz
push
fadd
shr
hlt
and
xor
sar
ret
cs
ret
idiv
mov
adc
cli
add
in
pop
movs
pop
arpl
mov
int
push
sbb
jmp
add
add
and
push
fwait
imul
fsub
iret
icebp
test
fimul
mov
bound
dec
mov
leave
cmps
call
jg
mov
cmp
mov
repz
rcr
xchg
mov
fld
mov
inc
cmp
pop
sbb
fld
and
daa
pop
sti
ins
push
sub
sub
cwde
adc
push
jnp
lods
dec
pop
adc
(bad)
lods
rol
sbb
sub
jae
push
(bad)
jecxz
mov
pop
pop
dec
outs
and
stc
jae
aad
loopne
mul
pusha
push
push
dec
loope
outs
(bad)
fidivr
call
mov
ret
repz
mov
or
push
jg
movs
icebp
push
sbb
push
pop
in
pop
cli
and
repnz
or
mov
and
pop
xor
mov
pusha
mov
dec
in
test
lods
sbb
stc
cdq
retf
or
mov
and
popf
(bad)
push
sbb
ret
xor
adc
test
jo
pop
inc
(bad)
mov
aad
adc
imul
sar
add
and
dec
jge
pushf
loopne
pop
aam
jae
mov
pop
push
cmps
fnstenv
mov
add
inc
ror
pop
scas
mov
push
adc
stc
iret
push
or
add
mov
mov
or
loop
loope
cmp
sti
jge
xchg
loop
cmp
inc
ret
mov
sti
call
loope
pop
jae
push
mov
stc
adc
and
and
ret
cmp
sbb
lods
frstor
ins
or
push
mov
mov
aas
retf
mov
push
adc
sbb
xchg
push
(bad)
js
push
cmp
sub
mov
or
add
or
neg
cmp
test
popf
sar
fsubp
xchg
loop
fcomp
imul
in
xor
jmp
cmp
sbb
pop
stc
push
retf
sbb
fwait
jmp
pop
xchg
jle
push
out
jle
xor
stos
cmps
push
imul
push
xchg
adc
aaa
add
xor
add
jns
mov
inc
(bad)
pusha
inc
ins
xchg
add
adc
inc
xchg
gs
jno
mov
mov
or
outs
jp
ins
xchg
xchg
(bad)
pushf
add
addr16
(bad)
pop
icebp
and
push
test
ins
dec
dec
mov
push
stc
cdq
fdiv
sbb
dec
clc
mov
ja
dec
cmp
jbe
mov
sub
mov
fld
scas
and
pop
add
int
inc
mov
faddp
cld
pop
push
mul
outs
imul
jbe
cmp
dec
add
call
ins
mov
dec
test
call
loop
cdq
inc
pop
into
cmps
mov
xor
or
daa
aam
fldln2
daa
rol
jnp
loopne
stc
jg
inc
mov
ficom
or
fwait
(bad)
imul
pop
push
jns
jl
fwait
mov
sbb
aam
mov
push
pop
mov
inc
mov
(bad)
aas
sbb
in
dec
push
(bad)
std
xchg
mov
mov
xor
aaa
pop
(bad)
adc
sbb
call
sbb
cmp
imul
(bad)
push
cmp
xor
jns
xchg
adc
movs
jne
push
outs
shl
xchg
or
inc
lea
ins
outs
push
mov
pop
test
add
psubusb
push
pop
sti
test
adc
mov
inc
jb
(bad)
fnsave
in
cs
mov
les
das
movs
out
adc
faddp
jo
repnz
inc
shl
push
loope
leave
test
inc
sbb
mov
or
out
jno
and
(bad)
enter
jbe
ss
and
pushf
dec
rcl
(bad)
(bad)
mov
fwait
push
push
stc
(bad)
dec
imul
sar
in
ss
dec
cdq
dec
sbb
inc
movs
mov
f2xm1
xchg
retf
mov
mov
cmp
ss
xor
imul
ficom
sub
cdq
jne
jge
stos
jbe
push
add
out
xchg
test
xor
and
inc
add
movs
test
iret
jl
xchg
add
cdq
cdq
mov
lahf
sub
aam
inc
sar
hlt
in
sub
mov
mov
test
clc
mov
jnp
sbb
icebp
loop
arpl
add
icebp
test
les
loop
jg
cmp
test
test
pop
jae
pop
in
pop
icebp
add
lea
je
and
popf
mov
leave
std
bound
pop
cmc
mov
pop
jae
fiadd
ja
movs
das
scas
into
sub
sbb
add
cmps
lods
js
lahf
xchg
and
pusha
fs
sub
xor
stos
xor
scas
push
loope
fbstp
dec
adc
popa
icebp
mov
sub
push
sub
sbb
cmp
cmp
gs
cmp
push
sub
ror
out
inc
fld
retf
pusha
jle
fs
mov
je
jmp
cmps
jle
(bad)
sbb
xor
adc
sbb
sbb
xchg
and
pop
inc
xchg
out
mov
jecxz
mov
xor
stc
add
js
fidiv
xor
mov
jb
fidivr
add
(bad)
mov
bound
ret
ficomp
or
popa
das
jg
repz
scas
sbb
xchg
xor
inc
dec
inc
cmp
cld
adc
xor
mov
and
enter
xchg
lock
hlt
and
loop
retf
or
pop
mov
and
cmps
sub
xlat
push
jle
pop
mov
pop
or
sub
into
adc
inc
pop
adc
sub
fdivr
test
bound
lahf
sub
in
pusha
rcr
ror
sbb
mov
repnz
cwde
ja
and
pop
imul
and
mov
jecxz
jae
mov
stc
shl
(bad)
lock
cmp
imul
loopne
(bad)
int
push
fwait
outs
rcr
jle
clc
in
jo
mov
call
movs
xchg
sbb
shr
retf
xlat
fild
and
sahf
(bad)
fsubr
jecxz
mov
lea
fist
xchg
(bad)
mov
into
xchg
in
sahf
inc
cmp
sub
adc
mov
xchg
cmps
push
adc
and
mov
mov
mov
je
dec
xor
iret
push
sbb
mov
mov
cmc
les
and
int3
xchg
enter
aas
jno
lahf
mov
fld
mov
push
push
pop
dec
daa
dec
inc
shl
mov
jecxz
cmp
jmp
dec
xchg
in
sti
mov
add
repnz
adc
enter
sahf
mov
fsubr
xchg
cwde
cmp
mov
out
mov
xchg
xor
jge
mov
add
pop
into
pusha
je
or
dec
in
dec
ds
out
inc
jle
pusha
lds
mov
int3
and
retf
and
ret
aaa
call
mov
add
es
push
shl
pop
dec
stc
mov
mov
sahf
push
lods
xor
lods
sub
add
lods
jg
dec
movs
cmp
jge
icebp
loop
push
or
adc
imul
in
call
out
popa
int3
ret
or
lahf
push
rcl
sahf
jle
fcomp
cmp
ror
or
ins
out
test
(bad)
nop
push
imul
mov
fldenv
retf
push
in
mov
or
jp
outs
sub
repz
and
test
jmp
pop
out
addr16
jo
push
xor
xchg
push
jecxz
(bad)
jge
pop
mov
retf
inc
cmps
(bad)
test
imul
into
loopne
je
or
js
out
add
xor
aas
dec
shl
and
rcr
mov
in
push
push
add
cmp
mov
psraw
pop
xchg
clc
fisubr
iret
xor
iret
inc
mov
adc
jg
popf
inc
ss
daa
add
and
and
dec
jge
mov
(bad)
loop
(bad)
sub
ins
cs
lods
sub
pusha
cmp
clc
pop
push
push
mov
aas
sbb
or
pop
xchg
push
(bad)
cmp
cmps
pop
mov
leave
fsubr
inc
and
ret
mov
out
pop
frndint
aad
xor
scas
dec
cld
mov
rol
sbb
cmp
pusha
adc
cmps
inc
lahf
mov
xchg
or
out
loop
pop
and
and
aaa
jge
fwait
aad
push
cmc
cli
sti
int3
nop
xchg
pop
and
dec
mov
addr16
lock
jae
xchg
sahf
mov
nop
dec
dec
jb
fist
push
jle
or
out
pusha
mov
jnp
add
adc
clc
mov
push
fucomi
sbb
inc
bound
scas
sbb
xor
dec
mov
outs
sub
or
pop
push
dec
inc
cli
and
mov
sahf
call
push
inc
daa
(bad)
in
pop
mov
inc
push
lea
adc
addr16
adc
push
sbb
dec
aam
dec
cwde
and
(bad)
pop
not
push
cmp
adc
sbb
adc
mov
ins
imul
dec
push
mov
daa
in
sbb
and
aad
add
mov
or
mov
mov
stos
cmovno
int
push
arpl
cmps
iret
sub
pusha
(bad)
ror
rcl
retf
inc
pop
push
pop
mov
dec
ror
inc
call
xchg
sbb
mov
add
xlat
out
icebp
mov
mov
ja
jb
les
aam
adc
jle
lods
mov
inc
aad
push
scas
frstor
cmp
repnz
xor
jo
mov
addr16
test
sbb
retf
adc
jmp
int
cmc
cli
(bad)
xor
push
ss
jne
cs
cmovl
xor
jo
add
xchg
(bad)
in
int3
scas
push
imul
add
add
std
mov
mov
adc
jne
or
aaa
call
mov
ins
push
cdq
scas
add
movs
add
mov
jp
jne
add
ins
adc
imul
cmp
shr
push
(bad)
mov
cmc
ror
xchg
and
stc
test
mov
call
inc
lods
mov
lock
ret
jnp
push
jle
pop
sbb
mov
pop
retf
scas
add
pop
mov
out
xchg
mov
out
mov
fldpi
pop
sub
cmovp
or
fidiv
inc
jge
jmp
push
cs
pusha
pop
inc
mov
dec
xchg
sahf
movs
lds
and
popf
push
aam
sbb
add
es
rcl
sub
cmp
push
fcomip
in
repnz
nop
lods
inc
call
inc
or
mov
ds
push
pop
push
cmp
call
in
mov
cmp
call
int3
or
inc
bound
inc
(bad)
(bad)
dec
push
repnz
or
jnp
out
clc
jl
mov
and
or
pop
add
push
rol
stc
les
neg
mov
mov
mov
je
push
scas
pop
pushf
cs
mov
jge
adc
xor
sub
nop
dec
int
pop
sti
popf
mov
or
and
pop
add
movs
call
mov
mov
ja
les
dec
jp
retf
xor
mov
outs
fwait
inc
mov
sti
dec
int
sbb
jge
sub
xchg
cmps
repnz
sub
or
pop
jge
push
std
and
fld
pop
mov
xlat
setle
dec
mov
sar
ror
enter
add
fiadd
int3
sbb
dec
add
mov
add
push
jnp
and
add
mov
hlt
sub
ss
mov
leave
iret
scas
cmp
repnz
push
or
add
dec
push
ins
adc
add
mov
xor
in
cmp
mov
adc
push
push
dec
rol
sahf
jno
pop
dec
call
cmc
cmps
jae
cs
sbb
cmp
(bad)
pop
sbb
das
mov
xor
adc
or
mov
in
xchg
ja
(bad)
fisttp
adc
mov
sbb
and
add
test
ror
loope
cwde
fisttp
adc
and
push
jle
cmp
movbe
cmp
repnz
outs
cmp
out
cmp
rcl
sub
pop
call
cs
push
mov
shl
rol
cli
add
movs
mov
pop
cmps
repnz
add
gs
jg
arpl
lods
push
adc
jns
(bad)
cli
iret
xor
or
shl
clc
fbld
jb
call
aam
iret
push
xor
ret
inc
mov
fsubrp
mov
and
push
jno
neg
xor
xor
sti
mov
pop
(bad)
loopne
xchg
lods
cmp
jnp
fiadd
in
inc
jl
and
sub
cdq
sbb
pop
cdq
jb
dec
imul
das
(bad)
or
sub
jbe
inc
jns
(bad)
jbe
pop
pop
inc
into
cmp
shr
in
loop
mov
or
repz
cmps
cmp
pop
add
push
outs
jle
call
mov
ds
fisttp
xchg
jno
mov
add
jmp
aas
push
mov
and
sahf
iret
mov
cld
mov
sbb
push
xor
shl
cmp
aad
adc
cld
popf
adc
lods
mov
jno
cmc
adc
pop
shr
sar
dec
push
pop
or
adc
add
dec
bound
cmp
pop
lds
mov
sub
lahf
dec
mov
ins
outs
fisttp
dec
inc
sub
jp
xchg
lahf
xchg
mov
pusha
push
adc
mov
xor
mov
dec
dec
out
jg
cmp
mov
(bad)
adc
mov
mov
(bad)
xor
enter
inc
adc
push
and
test
arpl
enter
mov
lds
adc
inc
mov
xor
jl
cmp
js
mov
test
pop
sub
leave
popa
inc
into
popf
jb
je
int3
cmp
or
jl
push
pop
push
and
jns
shr
adc
int
(bad)
scas
fsubr
inc
sub
sbb
cmp
mov
jno
dec
pop
pop
fld
xor
xchg
lds
out
out
(bad)
sbb
xchg
sahf
bound
in
pop
pushf
sbb
test
push
add
jg
cmp
xor
loope
lods
sub
jne
lock
sti
pop
xor
cmp
je
mov
xlat
cmp
xor
dec
test
mov
test
or
mov
in
push
cmp
dec
div
jmp
xlat
xchg
lock
pop
jne
sbb
dec
pop
int
mov
outs
cmp
pop
fs
movs
jbe
pop
cmp
cmp
outs
add
js
sar
push
jbe
cli
gs
push
pop
aam
fdiv
xchg
cmc
cmp
loope
mov
pop
je
ds
js
mov
push
iret
xor
fbld
loope
push
lock
or
xchg
popa
lods
and
jne
add
dec
adc
pop
push
mov
add
and
inc
adc
xchg
es
stos
retf
sar
and
cmp
mov
add
sub
mov
ja
cmp
iret
outs
je
fcos
xchg
ret
xor
push
jo
pusha
or
ss
adc
xchg
test
mov
adc
sub
cmp
ins
dec
pop
(bad)
aaa
hlt
stc
adc
outs
jmp
outs
push
rcl
fmul
add
pop
sub
mov
rol
mov
sub
add
enter
(bad)
repnz
adc
mov
xor
xor
dec
pop
out
add
in
(bad)
not
xor
rcl
icebp
pop
xchg
fdivr
add
rcr
sbb
pop
push
je
cs
and
mov
in
jno
(bad)
pop
(bad)
mov
test
pop
sbb
popa
and
(bad)
fdivr
fcomp
test
adc
push
sbb
push
pop
hlt
bound
daa
shl
ds
mov
sbb
sti
je
test
xchg
scas
das
in
add
dec
pop
cmps
xchg
ret
mov
cmps
std
aaa
dec
add
das
pop
popf
fimul
jmp
blcs
jmp
jl
ffree
arpl
movs
enter
repz
inc
jmp
das
packssdw
push
cmp
cmp
or
mov
outs
or
stc
ficomp
sub
in
mov
(bad)
clc
add
cmp
add
sar
cli
or
cmp
push
mov
add
adc
sbb
div
sbb
cmp
shl
and
adc
in
pushf
lea
pop
loopne
push
cmp
inc
lea
xchg
jl
add
inc
fild
ja
nop
push
les
pop
movs
and
jb
jb
sti
mov
stos
sbb
mov
cld
cmc
inc
inc
pop
sahf
or
(bad)
dec
inc
xor
add
push
add
sbb
ficom
sti
mov
loopne
in
aam
stos
jnp
out
push
push
retf
call
sub
and
cwde
outs
into
aaa
adc
pop
sub
cmp
lods
test
add
pop
xchg
push
daa
inc
or
or
jb
xor
(bad)
clc
push
push
push
mov
cmps
sub
push
push
pop
popa
dec
clc
sti
int3
jmp
rcr
loope
push
jo
fs
(bad)
rdmsr
outs
or
jmp
in
ficomp
retf
in
push
in
int
pop
sbb
xor
push
and
test
add
xor
fcomp
sub
sbb
and
dec
(bad)
jl
xchg
js
xchg
xor
mov
(bad)
lahf
test
push
xor
dec
test
fwait
or
int3
out
mov
mov
and
ss
in
sbb
jecxz
ss
jge
sub
rcl
push
std
add
jno
shr
mov
pop
sub
xor
outs
xchg
sbb
pop
adc
jmp
xchg
int
and
push
sar
ret
jecxz
stos
mov
repnz
ins
les
pop
push
test
repnz
adc
cli
add
cld
out
mul
push
into
cli
mov
adc
jle
push
mov
leave
(bad)
loopne
neg
(bad)
lea
clc
cmc
das
popa
daa
pop
mov
mov
retf
lods
add
in
mov
inc
sbb
jo
mov
shl
outs
pop
outs
push
pop
inc
xchg
fld
or
fadd
scas
add
sbb
mul
leave
inc
repz
and
mov
mov
loop
inc
daa
sbb
lods
sbb
sbb
mov
pusha
pop
cmps
mov
dec
mov
je
sti
mov
jp
dec
ins
xor
xchg
sbb
mov
pop
(bad)
jg
(bad)
ins
sar
and
inc
jns
out
out
aad
dec
jae
pop
bound
and
adc
cli
int
or
pop
mov
xchg
dec
loop
scas
pop
mov
jb
or
or
mov
rcl
inc
stos
je
sbb
mov
lods
imul
cmp
popf
mov
pop
add
push
(bad)
mov
loopne
add
jge
pop
loopne
repz
pop
(bad)
in
inc
sahf
push
inc
mov
and
sti
(bad)
leave
mov
dec
xchg
out
mov
imul
gs
int
imul
fucomp
push
out
stos
lahf
jecxz
mov
xchg
je
mov
cmps
ss
std
cdq
mov
add
add
cs
add
mov
mov
test
mov
add
push
adc
xor
inc
sbb
push
ins
pop
mov
jns
sbb
dec
cli
jnp
rcr
xchg
aas
xor
leave
push
loopne
mov
(bad)
dec
mov
in
jp
dec
xchg
je
cmps
out
ficomp
retf
cs
mov
dec
fimul
fcmovnbe
cmps
cmp
ja
jno
div
jno
push
xchg
sub
adc
dec
pop
ss
fisubr
push
xchg
jae
aad
sahf
adc
lea
clc
shr
int3
ins
mov
xor
fldcw
pop
in
out
sub
jnp
(bad)
popf
xchg
add
mov
icebp
push
loop
push
or
mov
into
clc
retf
adc
movs
mov
cmps
pop
dec
mov
xchg
mov
(bad)
push
(bad)
mov
leave
(bad)
iret
fsub
repz
outs
cmp
out
out
push
vfrczps
push
and
jno
add
dec
ret
jbe
pop
cmp
call
ins
sbb
cmp
andnps
push
cmp
pop
repz
mov
pop
mov
ins
xor
sub
xchg
inc
add
arpl
ds
mov
jno
imul
cli
mov
ins
ret
mov
sbb
sbb
xchg
jbe
xchg
fcom
icebp
sub
jae
xor
add
arpl
mov
ds
iret
sub
out
jne
push
mov
jle
loopne
mov
adc
ins
retf
add
ds
sti
inc
adc
jmp
xor
push
retf
js
inc
mov
push
outs
test
and
jmp
pop
and
lock
mov
pop
jmp
test
and
push
movs
sub
cmps
in
not
aas
sbb
in
jb
xchg
pop
and
pop
stos
test
es
lods
cs
rcr
jnp
or
shl
out
sub
cs
xor
repz
scas
mov
cmp
movs
rol
jecxz
sar
xchg
into
loope
in
mov
xlat
sar
and
lods
out
xor
inc
and
mov
mov
and
fistp
mov
sub
mov
aam
inc
mov
mov
cmp
mov
add
add
xchg
iret
lods
xor
stos
pop
and
sub
(bad)
into
cwde
cmps
jae
ret
test
dec
mov
xor
call
or
test
test
jg
pop
jge
push
xchg
mov
dec
out
das
cmp
mov
jmp
mov
je
mov
movs
add
xor
mov
xchg
push
stos
vunpcklps
lods
pop
out
sahf
jnp
or
mov
sub
xor
jl
mov
mov
scas
inc
push
add
mov
out
movs
int
cmps
out
popf
sbb
or
test
lea
push
push
or
hlt
scas
xchg
cmp
mov
adc
mov
mov
xor
and
xchg
mov
sbb
adc
sub
push
cmp
fidivr
mov
push
mov
leave
push
sub
cld
imul
sar
pop
mov
cmovl
ins
mov
lods
sub
add
inc
and
fwait
push
ret
adc
data16
push
dec
jl
loope
mov
pop
jmp
call
sub
fst
adc
aam
adc
fld
jp
addr16
pop
pop
cmp
xchg
(bad)
(bad)
cdq
pop
test
cmc
jno
mov
xchg
and
inc
stos
xchg
and
xchg
icebp
pop
xchg
sar
mov
cmc
add
shl
(bad)
xlat
pcmpeqb
cld
inc
mov
cld
cs
jno
sub
mov
mov
out
test
xchg
or
icebp
add
mov
outs
clc
out
mov
lea
mov
push
and
sbb
push
cdq
sub
(bad)
push
pop
push
iret
and
bound
loop
add
cwde
mov
pusha
xor
js
pop
sub
arpl
jecxz
xor
pop
xchg
sbb
sar
bound
cmp
in
fmul
stc
jb
repnz
jg
mov
aaa
mov
cmp
ss
out
mov
jle
dec
sti
je
jns
fmul
push
sbb
fsub
mov
jmp
popf
mov
lds
jbe
add
sub
xor
dec
leave
je
shr
(bad)
mov
cmp
fwait
btc
aaa
ins
xor
cmp
or
inc
push
cs
dec
(bad)
adc
les
in
in
xchg
loope
jge
ret
dec
push
jnp
add
mov
mov
clc
mov
pop
jecxz
sbb
add
xor
inc
dec
cmp
mov
jb
enter
jge
inc
cmp
in
mov
inc
(bad)
push
dec
mov
jns
cmp
ss
xchg
mov
and
mov
(bad)
popf
retf
cmp
pop
xor
cmp
stos
lea
in
add
int3
fdivr
adc
inc
shl
mov
mov
mov
retf
xchg
sub
test
or
leave
outs
loop
call
dec
popf
mov
xor
rcl
jge
retf
dec
mov
lods
mov
out
sbb
test
and
cwde
cmpxchg
cs
jae
xchg
xchg
pop
jae
rcl
fcmovnu
pop
pop
mov
mov
xchg
inc
in
jge
jb
mov
(bad)
mov
leave
pop
retf
add
popf
pop
mov
es
pop
jae
jle
test
ds
repnz
outs
jae
xchg
and
jl
popf
xchg
inc
stc
int3
jnp
in
push
fistp
add
int3
lock
push
mov
das
daa
neg
outs
pushf
(bad)
push
pop
out
lods
jmp
(bad)
fs
jg
aam
hlt
addr16
add
dec
std
ins
into
push
dec
call
or
ror
add
xchg
dec
inc
nop
mov
jns
adc
pop
cmp
in
mov
mov
lea
fldcw
loopne
dec
outs
cmp
mov
sub
cld
add
enter
aad
jb
shl
inc
dec
jg
jg
(bad)
push
and
lods
mov
in
les
push
sbb
hlt
retf
call
adc
repz
jae
xchg
sahf
push
inc
add
inc
inc
sbb
lock
lods
js
push
mov
adc
mov
es
mov
jno
test
cmps
daa
sub
dec
dec
retf
lock
scas
aam
lods
movs
std
int3
sbb
xlat
and
pop
xor
push
leave
in
rol
out
cdq
shr
lds
popf
into
sbb
mov
xchg
aas
add
cld
iret
jle
ror
retf
aas
bound
repz
mov
adc
shr
inc
push
stos
mov
sub
push
cmps
mov
les
fcom
test
retf
sub
or
jmp
daa
iret
xor
jge
mov
les
retf
repz
xchg
iret
cmp
pop
loop
js
and
cwde
jae
xchg
(bad)
cld
clc
push
mov
clts
iret
xchg
mov
inc
lods
jnp
xchg
gs
xchg
sub
sahf
dec
movs
shl
test
dec
cwde
xchg
mov
mov
retf
jo
shl
fwait
cld
xchg
pmuludq
int
outs
ins
loopne
jo
ss
les
ret
and
add
icebp
shr
xchg
enter
inc
pop
inc
xchg
dec
fs
sbb
push
repnz
or
mov
push
sbb
jae
je
inc
push
sti
mov
sahf
add
push
or
clc
fstp
sbb
xor
mov
nop
jns
mov
lahf
sub
pushf
sbb
and
(bad)
bound
cmp
pushf
xor
fdivp
push
inc
test
xlat
add
mov
dec
retf
mov
adc
fincstp
(bad)
jae
not
aam
xor
in
std
xchg
xor
inc
std
pop
pop
xchg
pushf
jp
lds
cmp
push
jle
inc
mov
je
cwde
inc
pop
jno
jle
imul
or
movs
mov
xchg
or
mov
dec
pusha
cwde
arpl
push
loop
aam
add
inc
daa
cmps
mov
cwde
pop
mov
pop
neg
sar
xor
out
jle
cli
mov
cmps
or
movs
add
cmps
aas
cmp
mov
xchg
leave
mov
cmp
jns
sub
mov
(bad)
lock
cdq
push
arpl
mov
pop
xor
in
or
call
xor
cwde
test
jp
leave
mov
push
jns
mov
data16
js
mov
pop
call
gs
pop
sbb
rol
outs
adc
out
test
push
stos
mov
push
mov
cmp
add
out
lods
or
cmp
push
jns
pop
mov
xchg
sub
xchg
jne
xchg
pop
jnp
repnz
mov
sbb
movs
xchg
adc
push
int
cli
shr
jbe
add
push
sub
outs
int3
pushf
dec
xor
xor
mov
outs
sub
fidiv
mov
cmc
gs
test
add
sar
loop
das
daa
lods
ret
adc
mov
hlt
ins
mov
inc
push
sub
int3
and
or
and
jg
or
fdivrp
imul
shr
in
mov
xor
cmp
ins
cmp
enter
inc
fs
je
imul
stos
das
jp
out
xchg
pop
out
cld
mov
dec
movs
xor
xchg
mov
cmp
aaa
cmp
cmp
xchg
inc
or
and
call
mov
mov
pop
loope
scas
pop
(bad)
xchg
rol
(bad)
pop
push
jp
adc
dec
das
xchg
sar
mov
inc
out
in
fld
ja
mov
add
popa
pop
xchg
shr
call
xchg
jle
dec
jmp
adc
pop
scas
hlt
lea
es
repz
(bad)
push
jmp
mov
sub
xchg
stos
int3
inc
push
inc
dec
sti
ins
jle
jns
xchg
aam
lds
test
pop
pop
mov
mov
shl
push
xor
pop
mov
lods
into
sub
adc
call
lock
imul
sbb
jae
lea
stos
sahf
mov
and
sahf
ret
aaa
aaa
outs
xchg
pop
xchg
jns
repz
mov
adc
das
js
inc
imul
call
push
mov
scas
ror
push
mov
stos
mov
fwait
imul
nop
jge
pop
stos
xchg
arpl
push
fadd
adc
daa
jae
mov
(bad)
xor
sub
adc
inc
scas
ret
or
dec
push
xor
mov
and
aad
jmp
cmp
inc
sbb
jge
or
fchs
jecxz
jns
mov
cmp
call
and
mov
jp
xchg
cmp
adc
std
adc
shl
jmp
xor
sar
leave
push
jne
xchg
out
cmp
mov
push
jo
dec
icebp
addr16
jg
(bad)
fmul
loope
jp
push
cld
out
ret
repnz
mov
scas
inc
xchg
cwde
js
(bad)
call
rcl
pcmpgtd
fistp
sub
in
iret
inc
call
test
(bad)
adc
jmp
cmp
je
pusha
mov
shr
and
add
xor
jp
(bad)
stos
push
or
mov
test
xchg
test
cmp
movs
iret
and
retf
hlt
cmc
into
push
ss
test
jl
xor
sbb
xchg
push
push
ret
and
rol
xor
cmps
into
int
ins
xchg
cmp
xchg
push
nop
sbb
sbb
es
pop
jb
les
int
adc
dec
mov
pop
movs
mov
pop
sub
push
cs
shl
or
mov
push
pop
mov
(bad)
jae
aam
and
mov
nop
mov
mov
pushf
cmp
xchg
push
ret
in
loop
inc
inc
jb
add
jle
jecxz
or
jecxz
pop
das
adc
xor
push
cmc
mov
push
cmps
push
ret
ffreep
lock
test
or
pop
mov
and
pop
add
(bad)
add
sar
mov
in
mov
(bad)
out
addr16
adc
pop
cmp
mov
int
das
cmp
in
aas
mov
adc
jnp
pop
jecxz
and
push
jg
or
xchg
imul
dec
aam
mov
cmc
or
retf
hlt
jmp
movs
gs
cmp
addr16
das
mov
out
sub
cmc
mov
fisub
xchg
or
into
xchg
adc
xchg
sub
mov
cmp
pop
push
cmps
pushf
pusha
add
out
pop
cmps
jne
sub
addr16
pop
les
pushf
jmp
adc
add
movlps
arpl
ins
cmp
aas
in
cs
mov
popa
ds
getsec
std
cmps
xor
mov
das
imul
jno
sbb
nop
rol
clc
cmp
mov
loope
push
and
dec
cwde
int3
push
sub
rcr
jge
lds
adc
jno
cmp
aas
jbe
repz
mov
sub
mov
jbe
inc
in
cwde
push
jecxz
xor
sub
xor
(bad)
sbb
fmul
ret
sub
aad
inc
push
ins
repnz
jb
xor
outs
in
xor
xchg
ja
iret
jae
mov
xor
add
mov
push
or
and
pop
stc
inc
ret
pop
retf
xlat
push
arpl
adc
fnsave
or
add
shl
sbb
dec
pop
cmp
sbb
add
addr16
and
inc
clc
ins
or
sbb
adc
call
test
scas
cs
daa
and
sbb
or
out
mov
and
xchg
not
mov
adc
push
cs
jno
mov
pop
or
xor
das
xor
add
retf
(bad)
pop
loope
and
iret
rcl
js
xchg
cmp
dec
sub
jge
push
ins
cmp
repz
or
aam
add
xor
gs
adc
ins
push
xor
aaa
add
cs
or
adc
ds
cmp
or
jge
add
mov
xchg
pop
pop
fisub
lahf
mov
xor
mov
mov
test
sahf
daa
xchg
push
pop
xlat
inc
inc
bound
aam
outs
loopne
or
dec
movs
push
jno
inc
mov
mov
(bad)
jl
sub
repnz
pop
fwait
mov
pusha
in
pop
jno
iret
pusha
shr
cmp
les
cmp
sub
xchg
out
push
mov
ror
lock
popf
sbb
(bad)
clc
fistp
add
push
add
shl
ins
xchg
mul
and
loop
xchg
add
popf
in
mov
int3
inc
mov
rol
call
or
inc
cdq
add
hlt
call
mov
dec
xor
imul
jae
dec
mov
pop
fdivr
(bad)
inc
pop
push
stos
addr16
nop
mov
mov
jp
jmp
push
in
xlat
sti
inc
loop
aas
pop
inc
(bad)
ds
dec
dec
loope
add
lods
sahf
push
(bad)
dec
ss
adc
adc
xchg
call
or
xor
das
cwde
out
or
jg
jmp
jnp
inc
cmp
dec
pusha
inc
shl
adc
shl
xchg
inc
xchg
pop
popf
xor
arpl
stos
sbb
sahf
push
mov
xchg
aad
mov
xchg
je
out
js
pop
pop
imul
into
jle
movs
adc
pusha
aas
jo
jno
mov
push
cmps
cmp
ins
mov
adc
lahf
add
in
dec
mov
inc
stc
push
mov
pop
scas
je
dec
outs
cmp
jg
pop
xor
bound
retf
ret
adc
fist
dec
jle
out
retf
test
hlt
cmp
xor
xor
or
call
test
xchg
ins
xor
cmp
adc
test
jne
lds
repnz
ret
xor
add
pop
(bad)
adc
call
or
inc
into
xchg
mov
popa
sbb
test
into
inc
test
aas
pusha
cmc
in
(bad)
add
xchg
out
inc
out
shl
cmps
mov
lods
jo
xor
jns
ficom
cmc
scas
mov
mov
mov
mov
inc
ret
out
lar
sbb
aaa
mov
fiadd
daa
mov
mov
mov
xchg
xchg
mov
movs
mov
scas
and
lds
retf
mov
dec
add
outs
and
sbb
int
arpl
outs
scas
or
xor
cmp
daa
fdiv
(bad)
add
jmp
mov
push
sbb
jae
push
inc
sbb
movs
retf
ja
jne
cli
mov
mov
test
dec
jne
pop
xor
mov
test
push
add
push
(bad)
out
push
mov
pop
ins
pop
cs
rol
rol
xchg
add
imul
adc
or
dec
pop
cmp
mov
pop
int
jae
push
adc
pusha
mov
je
cmp
dec
scas
(bad)
pop
dec
dec
xor
leave
mov
push
push
xchg
fucomi
into
jo
repz
push
sbb
mov
add
mov
aaa
add
sub
iret
movs
mov
pop
pop
dec
stc
xlat
cli
mov
jmp
mov
rcr
xlat
mov
sub
(bad)
cld
sub
fstp
stc
std
jmp
fs
dec
mov
call
ins
xchg
and
mov
sub
into
add
mov
jno
popf
jo
push
(bad)
fdiv
mov
mov
and
xor
cmp
cmp
mov
push
dec
fs
dec
mov
xchg
ret
jb
adc
movs
cmp
enter
mov
movs
push
les
jnp
cld
(bad)
fs
dec
fnstsw
lods
(bad)
shr
cmc
push
dec
popf
test
call
pushf
mov
or
mov
sbb
mov
and
or
xchg
(bad)
ins
add
shl
pop
outs
or
sbb
jge
jno
jle
pop
jae
test
leave
(bad)
jmp
fcom
scas
xor
xchg
cmc
ins
ret
rcr
loope
enter
adc
dec
xor
pop
int3
inc
pop
popf
aam
push
(bad)
mov
cmps
movs
in
sub
fwait
aad
mov
arpl
push
mov
gs
mov
int
ds
test
dec
ret
bnd
jg
(bad)
mov
jns
mov
mov
add
dec
lds
add
push
mov
in
sbb
js
jp
or
das
rcl
lahf
mov
iret
pusha
(bad)
loop
repnz
hlt
push
sub
xor
sub
sbb
mov
cmp
call
iret
mov
sbb
movs
sub
cld
pop
gs
iret
pop
call
mov
fwait
and
pushf
call
cmp
push
daa
adc
xor
sub
imul
and
dec
mov
push
ror
pop
add
setp
and
out
aad
pop
jle
mov
pop
mov
das
scas
inc
ret
(bad)
push
add
xchg
lods
or
xchg
xchg
pop
xchg
or
lahf
jne
xor
popf
gs
xor
repz
pop
mov
loop
out
push
push
mov
popf
jo
push
(bad)
mov
mov
and
loopne
mov
aad
xchg
fmul
cdq
mov
xchg
and
call
push
push
inc
dec
cmps
mov
or
pop
sub
jne
repz
xor
adc
cmp
xchg
push
vmread
lea
ss
add
in
cli
lds
jle
push
not
repnz
push
or
mov
sar
push
xchg
adc
adc
xchg
popf
dec
add
sbb
not
adc
pop
xchg
sbb
pop
mov
ss
mov
adc
xor
xor
xchg
int3
push
fwait
mov
in
stos
adc
cmp
adc
movaps
shl
inc
out
and
sub
adc
mov
cmc
loopne
repnz
popf
jne
outs
mov
fld
movs
mov
mov
push
rol
aam
xchg
movs
adc
inc
adc
mov
push
pop
ror
pop
inc
adc
add
push
adc
push
pop
cli
xor
mov
add
jg
in
or
sub
add
cli
lds
jns
xchg
shl
cmp
pop
push
push
aam
cmp
adc
rol
test
(bad)
gs
cmp
xchg
push
add
repnz
push
mov
out
popw
push
and
aaa
icebp
xor
xchg
lods
or
dec
aad
ds
out
mov
mov
in
call
cdq
xchg
cdq
(bad)
repz
mov
fucomp
jnp
mov
dec
fnsave
div
sub
adc
scas
not
adc
sbb
mov
lods
shl
cwde
sbb
dec
div
aam
int3
dec
or
shl
pop
jbe
cs
mov
imul
outs
(bad)
(bad)
xchg
push
add
mov
jnp
js
mov
icebp
pop
ret
inc
lea
loop
mov
jmp
mov
pop
xor
pop
popa
maskmovq
xor
adc
push
sub
(bad)
arpl
or
icebp
cmp
add
mov
push
inc
xchg
xor
outs
inc
icebp
or
inc
sbb
cwde
adc
mov
mov
out
mov
cmp
(bad)
mov
push
jno
and
call
call
add
and
fld
mov
xchg
mov
jge
test
sbb
mov
in
cmp
lods
jne
adc
lahf
test
xchg
scas
mov
jp
hlt
lea
jno
inc
jge
hlt
push
add
sbb
ss
jecxz
fadd
cmp
in
fisubr
mov
or
enter
add
dec
fild
push
movs
ror
movs
adc
xchg
enter
push
fidivr
scas
pop
gs
sbb
add
sbb
jg
add
xor
jns
inc
ins
adc
jmp
(bad)
xor
retf
js
popa
hlt
xchg
push
cwde
and
jg
push
sar
sbb
ins
or
push
push
adc
or
mov
push
adc
mov
test
xor
ret
call
xor
pop
xor
lea
xchg
addr16
retf
cwde
sub
and
shl
cmp
fisubr
mov
scas
inc
popa
mov
inc
ss
scas
popf
jne
pop
push
and
outs
(bad)
ror
inc
arpl
mov
rol
xor
sbb
int
mov
outs
xor
pop
mov
and
xor
and
pop
lahf
cmc
lds
shl
lea
sub
push
dec
xor
js
inc
outs
fsubr
outs
je
xor
scas
stos
(bad)
pop
xor
es
gs
cwde
sbb
dec
fcomp
inc
out
je
std
mov
pop
pusha
(bad)
cwde
dec
mov
jecxz
(bad)
pop
lar
mov
mov
push
out
jp
movs
test
cmp
and
ins
les
add
pop
sbb
das
sar
enter
inc
aad
into
sbb
mov
lock
pop
cmc
adc
fdivr
sub
mov
jae
cmp
pop
cwde
sti
or
or
fidivr
out
add
int
sub
scas
mov
mov
aam
inc
test
mov
aaa
aas
daa
push
jmp
mov
mov
fadd
xor
mov
mov
call
cs
arpl
sbb
cld
and
jmp
pop
push
dec
add
ins
pop
push
mov
fcom
frstor
test
fidivr
hlt
mov
lea
add
mov
stos
daa
xlat
ds
mov
int
cwde
and
cdq
inc
cs
cmp
clc
gs
pop
int
and
sbb
and
leave
pop
fwait
pop
out
ror
daa
mov
data16
cmps
rcl
sar
add
div
jb
out
mov
mov
dec
mov
iret
push
mov
fs
xor
or
jge
mov
pop
into
data16
or
fyl2xp1
adc
fidiv
push
xchg
outs
leave
dec
js
enter
xor
xchg
in
fmul
sbb
icebp
pop
ret
cmp
adc
push
jmp
loope
ja
adc
pop
(bad)
mov
retf
mov
mov
in
add
mov
les
and
mov
mov
mov
rcr
shr
cmovge
jne
js
cmp
lock
push
pop
sub
xor
dec
pop
sahf
sbb
popa
aas
icebp
dec
lds
lea
xor
jae
nop
call
mov
xchg
rol
nop
gs
inc
mov
ret
dec
dec
dec
pop
das
xchg
lea
aad
stos
outs
adc
inc
iret
(bad)
jge
xchg
jecxz
es
in
sahf
imul
shr
inc
sub
add
inc
pop
(bad)
fwait
adc
cmc
add
div
push
mov
adc
ss
add
pop
retf
inc
out
mov
mov
clc
out
pop
stc
sar
jge
jp
int3
cmp
stos
pop
fnstcw
xor
adc
jb
loope
jno
or
dec
pop
icebp
jb
(bad)
mov
xchg
fidiv
aad
cmp
mov
cmp
mov
or
adc
dec
mov
sub
ror
fldcw
mov
js
pusha
icebp
cwde
jle
mov
jle
vandnps
ds
push
xchg
in
(bad)
out
imul
adc
sub
mov
pop
xlat
in
xlat
add
add
mov
icebp
xchg
jb
imul
inc
in
in
adc
jo
and
sbb
pop
pop
fnstsw
pusha
jno
ins
pushf
pop
lea
(bad)
pop
push
es
mov
pop
or
add
xchg
sub
xchg
lods
xor
mov
mov
dec
in
movs
addr16
dec
cmc
arpl
push
dec
adc
sahf
sbb
cmp
or
jg
ss
mov
inc
adc
xlat
inc
popa
dec
sar
pop
push
cld
cmp
cmp
mov
sbb
mov
and
mov
sub
add
aad
inc
adc
xchg
sbb
add
lods
(bad)
fsub
dec
aaa
ja
jnp
or
movs
enter
rcl
push
and
inc
and
test
es
mov
or
aad
fwait
cmp
mov
cli
cmp
inc
es
pushf
or
jmp
adc
ja
retf
dec
cmp
and
in
pop
pop
inc
or
inc
jge
scas
dec
pop
push
ret
sub
push
fidivr
hlt
stos
and
pcmpeqw
sub
push
or
inc
push
ins
jmp
in
dec
repnz
push
xchg
mov
pop
fiadd
shl
mov
cmc
movs
fild
int3
es
push
idiv
mov
inc
lods
and
into
icebp
push
fs
scas
cmp
fcom
push
add
jbe
adc
les
xlat
int3
stos
jge
lahf
inc
iret
fistp
xor
test
push
pop
jp
movs
push
inc
loope
add
sub
pop
jne
neg
scas
(bad)
mov
push
rcl
add
pop
aad
jmp
pop
push
aad
fucomi
std
xor
lock
jae
mov
mov
jbe
ss
daa
mov
add
push
dec
mul
and
cmp
ins
jmp
fiadd
(bad)
pop
retf
or
ja
les
add
retf
sar
test
fisttp
sbb
pop
fs
sub
lods
pop
enter
jo
add
mov
cdq
add
cmp
jecxz
pop
aaa
fcomp
add
sub
mov
push
jne
jge
pop
aad
cwde
jge
shl
pop
ficomp
sub
call
xchg
or
fdiv
cs
and
pusha
sahf
jmp
xor
jmp
xor
jg
(bad)
in
imul
push
xchg
fisttp
dec
pop
xchg
movs
adc
jmp
fimul
inc
sbb
lods
pop
jbe
sbb
push
add
adc
and
test
sub
mov
into
sbb
cli
xchg
sub
and
fwait
jg
pop
iret
(bad)
retf
ds
daa
add
inc
je
das
add
cli
cmp
lods
sub
sub
fsub
dec
mov
mov
ins
mov
mov
jg
jns
inc
mov
mov
adc
mov
loop
cmp
movs
mov
and
add
xchg
(bad)
(bad)
jmp
xchg
mov
popa
xor
in
mov
jg
je
test
pop
je
cmp
xchg
mov
jmp
mov
outs
cmp
inc
popa
loope
mov
xchg
scas
push
pop
out
arpl
fstp
inc
sti
ins
xchg
cli
data16
cwde
jle
es
fdiv
push
jp
xchg
nop
jge
out
pop
inc
fs
fdiv
ds
push
pop
in
pop
inc
xor
(bad)
dec
js
xor
or
cmps
push
inc
mov
pslld
add
or
xchg
retf
and
lods
mov
aas
mov
sbb
push
xchg
dec
mov
in
xchg
or
retf
int3
icebp
xor
or
enter
cld
loopne
scas
dec
mul
shr
imul
inc
fnstcw
stos
xor
outs
add
jb
xchg
push
jbe
fmul
stos
sub
add
push
aaa
cmp
aas
cmp
call
cmc
xchg
jmp
jmp
sub
mov
xchg
outs
neg
icebp
pop
arpl
shl
add
out
mov
rol
mov
jae
aaa
mov
mov
imul
stos
ret
dec
sar
cwde
das
jp
clc
imul
add
fsub
sbb
cmp
push
xor
lods
int3
icebp
xchg
push
push
or
mov
fs
jno
outs
lds
and
sbb
out
imul
push
int3
rol
sub
aam
pop
(bad)
xlat
pushf
rol
xor
jne
pop
out
ret
add
dec
stos
mov
jns
cmp
out
add
retf
(bad)
inc
(bad)
in
test
pop
push
fcmovnb
hlt
sbb
or
(bad)
dec
cmp
inc
std
mov
cmp
and
pop
mov
loop
int3
cld
in
inc
sbb
in
retf
cdq
xchg
mov
dec
outs
push
nop
sub
or
mov
push
sbb
sub
popf
pop
(bad)
xchg
imul
or
ss
xchg
pop
dec
mov
mov
fdiv
sbb
mov
movs
test
movs
aaa
lock
sub
push
sub
mov
gs
jmp
push
dec
or
js
mov
mov
sub
or
(bad)
mov
popa
push
lds
js
push
rcl
rcr
mov
shr
sub
fst
xor
add
scas
loopne
out
push
dec
call
les
pop
push
jecxz
adc
aam
loopne
fisubr
dec
mov
pop
fwait
call
push
in
push
in
retf
push
and
pushf
setns
add
outs
stc
mov
and
inc
shl
and
lods
push
pop
jb
stos
pop
push
loope
imul
lods
leave
mov
ins
mov
popa
ds
fwait
jbe
cs
call
aam
sahf
jbe
inc
sbb
mov
loop
or
cmps
gs
xchg
or
and
ins
sbb
into
(bad)
push
(bad)
xor
pop
dec
es
cld
xchg
inc
mov
add
ins
sbb
xchg
push
pop
cmp
(bad)
mov
sbb
xchg
mov
mov
xchg
push
and
addr16
mov
fdiv
cmp
mov
cli
mov
adc
mov
stos
enter
and
pop
hlt
sti
lods
cs
sbb
daa
push
xchg
aas
jecxz
daa
dec
es
push
dec
or
mov
mov
(bad)
xchg
xchg
lock
sub
fisub
sub
loopne
sbb
(bad)
(bad)
xor
sbb
push
pop
in
xor
je
inc
repz
cvtdq2ps
mov
push
push
push
ficom
ins
stc
movs
stos
leave
call
xchg
bound
mov
sub
dec
hlt
inc
imul
jmp
cmps
or
inc
adc
sbb
(bad)
fmulp
fwait
and
mov
xor
cmp
dec
repz
pop
dec
pop
cmp
mov
push
(bad)
(bad)
adc
jge
push
je
sbb
and
neg
jle
aam
and
mov
call
inc
js
aaa
add
push
pop
aaa
mov
mov
dec
xchg
dec
(bad)
cwde
jno
scas
lods
inc
mov
jg
xlat
fnstsw
jmp
inc
push
popf
adc
pop
cmps
cmp
pop
imul
cdq
pop
cli
jp
mov
and
cld
sbb
jle
sbb
cmp
hlt
lea
(bad)
out
push
dec
inc
mov
push
outs
sbb
mov
mov
push
fwait
jnp
push
out
retf
(bad)
inc
mov
call
stos
call
stc
es
dec
int3
cdq
push
js
pop
jmp
pusha
xor
xor
and
cmp
repz
xchg
cld
mov
call
inc
dec
retf
sub
or
(bad)
adc
jbe
js
mov
mov
ficom
sahf
sub
fsubr
mov
pusha
inc
dec
push
xchg
xchg
sti
fnstcw
ins
xchg
call
and
repnz
cmps
fstp
mov
mov
ret
and
retf
mov
cmps
sbb
pop
xor
pusha
mov
fdivr
push
adc
cmp
and
cmp
aad
mov
fcomip
retf
(bad)
xor
and
adc
neg
shl
pop
jb
call
jne
mov
adc
dec
add
mov
stc
in
ins
scas
mov
sbb
mov
std
and
pop
(bad)
cwde
test
movs
mov
mov
ror
mov
sub
shr
push
cmp
push
cmp
(bad)
loop
inc
hlt
(bad)
arpl
dec
xchg
gs
mov
xchg
or
shl
xchg
jecxz
or
xor
ret
mov
cmp
xchg
retf
mov
pop
aam
fld
dec
push
cmps
push
push
packuswb
lahf
shl
retf
popa
inc
dec
in
out
jmp
sbb
push
jle
pop
in
xchg
inc
push
mov
push
out
retf
in
xchg
call
cmps
or
cdq
add
loope
loope
lods
rcl
mov
lods
shl
jmp
sti
mov
xor
sub
ins
clc
pop
cs
rcl
lea
or
dec
xchg
not
and
jae
inc
imul
test
push
xor
jg
in
fidivr
imul
add
or
retf
nop
fs
sbb
into
mov
inc
retf
push
jno
stos
dec
call
out
push
inc
ins
cmp
fsubr
movs
loopne
sub
push
dec
daa
dec
mov
xor
pop
xchg
push
(bad)
xor
popa
cs
ds
sbb
push
dec
or
fbld
fiadd
add
ins
mov
cmps
mov
scas
std
mov
adc
into
aaa
sub
ror
dec
cwde
adc
mov
dec
jmp
mov
mov
test
outs
pusha
cmps
das
int3
std
xor
ja
ret
imul
shr
xor
loopne
and
cmp
shl
push
mov
cdq
bound
cdq
jl
adc
sbb
or
mov
ds
sbb
inc
(bad)
(bad)
in
push
push
iret
in
daa
scas
xor
sub
push
add
xchg
and
icebp
stc
cld
pop
aas
jns
sbb
into
in
aam
fadd
sub
rcl
hlt
stc
aaa
pop
daa
mov
or
hlt
je
cmp
xchg
sbb
xchg
jnp
xor
add
pop
aaa
(bad)
push
cli
push
bound
jne
mov
dec
mov
and
dec
cmp
js
mov
cmp
sahf
int
das
js
shl
mov
jecxz
dec
jge
push
pop
outs
and
outs
add
sahf
mov
icebp
push
std
cmc
sti
sahf
fidivr
xchg
push
and
jno
cld
repnz
enter
mov
arpl
(bad)
push
sbb
and
cmp
loope
push
inc
cmps
loop
push
dec
add
fistp
in
shl
scas
dec
scas
rol
mov
js
lds
mov
dec
inc
push
mov
inc
jmp
(bad)
cs
mov
retf
fld
lds
jge
or
sub
scas
outs
sbb
test
jl
iret
retf
leave
scas
mov
inc
jne
aam
inc
mov
push
ret
rol
pusha
test
add
lahf
ja
cli
stos
hlt
lods
mov
bound
cmp
int3
lods
and
jle
sub
add
not
jo
mov
xor
jecxz
sbb
cmp
ins
sub
xchg
dec
xchg
cli
fmul
inc
aaa
loope
mov
mov
aam
sub
(bad)
rcl
hlt
mov
pusha
fadd
push
mov
fndisi(8087
movs
push
pop
(bad)
mov
sahf
mov
ins
mov
cld
xor
push
popf
pop
(bad)
cmp
mov
retf
add
mov
mov
pop
hlt
sub
gs
popf
mov
add
xor
sbb
jmp
sub
fldenv
mov
cmp
lahf
cmp
sbb
adc
cmp
es
inc
into
test
xchg
sbb
jmp
xor
mov
xchg
out
jp
ja
test
cmp
cdq
dec
retf
call
daa
mov
jg
hlt
push
dec
push
push
sbb
int
loope
pop
cmc
mov
xchg
xor
push
pushf
cmp
jecxz
repz
mov
ins
mov
push
mov
or
jl
bound
jbe
out
lods
or
out
sahf
lahf
mov
jl
dec
push
sub
sub
xor
pop
ss
nop
outs
in
sbb
dec
mov
dec
in
cmps
and
inc
adc
scas
push
xor
mov
inc
cwde
je
sti
ja
lock
adc
(bad)
inc
(bad)
ret
dec
jmp
test
jbe
lahf
rcl
mov
jae
sbb
jge
xchg
adc
sbb
sbb
mov
mov
pop
mov
sub
stc
and
mov
cmp
mov
inc
mov
cmp
aaa
jg
xchg
cli
mov
sub
rcl
pop
outs
xchg
in
fild
call
leave
dec
lock
jge
cmp
sub
int
mov
mov
jo
add
in
adc
mov
fidivr
jmp
out
dec
adc
add
mov
ss
sub
jno
cld
retf
call
iret
(bad)
push
pusha
(bad)
jb
neg
fwait
xchg
cmp
clc
lds
in
rcr
ficomp
sbb
push
shl
mov
inc
lds
inc
push
bnd
or
ss
push
cmp
mov
mov
cld
xor
cmp
lea
adc
ret
or
mov
push
cmp
or
inc
lea
xchg
dec
and
in
cld
mov
xor
push
dec
sub
repz
cmp
jnp
xchg
pop
or
aad
sbb
jmp
ins
pushf
adc
icebp
jmp
mov
out
int
xchg
loope
mov
pop
dec
xchg
xchg
loopne
cmp
mov
jecxz
test
jl
inc
add
enter
mov
pop
sbb
dec
sub
leave
mov
adc
xchg
lahf
(bad)
out
and
rcl
inc
sbb
mov
xchg
stos
outs
outs
add
ins
xor
fild
mov
sub
mov
scas
(bad)
in
cmp
dec
pop
xor
mov
fistp
dec
pop
arpl
mov
lds
xchg
inc
dec
mov
sahf
data16
(bad)
shl
jecxz
adc
pop
push
pop
add
mov
loop
ror
gs
gs
rcr
(bad)
in
aam
add
add
jno
stc
jnp
fs
das
sub
mov
sbb
inc
dec
and
xchg
popa
(bad)
jecxz
stos
test
mov
xor
inc
out
jo
add
ds
xchg
daa
imul
out
lods
or
mov
mov
sbb
lds
inc
xchg
dec
dec
jne
xor
mov
mov
inc
jge
call
pop
and
into
cmc
lds
popf
xchg
movs
xor
cmps
add
and
scas
(bad)
fmul
sub
aas
lods
mov
test
push
loope
dec
mov
pop
pop
cmp
sti
loope
in
fcmovb
pop
fnstcw
icebp
lods
aaa
nop
push
daa
fldcw
ja
cdq
aam
jmp
push
cmp
test
dec
inc
cmp
mov
in
mov
ds
bound
pop
xchg
imul
push
stos
xchg
inc
push
lahf
pushf
pop
(bad)
out
test
push
push
das
test
pop
ror
mov
in
inc
sub
mov
inc
adc
push
jo
xchg
cmc
fdivr
xchg
pushf
push
inc
mov
sbb
test
repnz
mov
mov
or
sti
sub
cmps
ins
push
cmp
ret
mov
jmp
popf
rcl
push
mov
les
jnp
int
mov
add
mov
fisub
adc
or
fnstenv
dec
jp
dec
and
call
(bad)
addr16
adc
bound
loopne
nop
(bad)
repnz
je
ja
hlt
leave
(bad)
popa
sbb
test
vmwrite
inc
pop
dec
dec
or
mov
sti
or
push
sbb
ins
lea
sbb
add
pop
mov
sbb
push
sub
xlat
mov
mov
or
and
dec
adc
jecxz
cmps
scas
cdq
int3
das
mov
cmp
xor
xchg
cmp
call
jg
sub
retf
mov
jnp
pop
fist
and
pop
cmp
out
loopne
mov
add
loop
data16
int
cmp
repz
fidivr
add
cmp
jmp
inc
sahf
loope
icebp
sub
sar
push
dec
sahf
movs
push
adc
hlt
cmp
cwde
icebp
aaa
pop
pop
cmp
lods
cmp
lahf
sbb
mov
inc
add
pop
jne
popa
scas
sbb
hlt
fiadd
mov
movs
fiadd
ret
and
outs
xchg
xchg
(bad)
adc
dec
mov
in
mov
ret
mov
dec
sbb
or
stos
daa
push
loopne
push
aas
fucom
pop
sahf
imul
adc
jmp
mov
cmps
retf
mov
int
mov
cmc
pop
cmp
test
or
call
xchg
inc
inc
outs
leave
cmp
jbe
into
inc
test
mov
cmp
or
(bad)
rcr
cmp
inc
je
jle
cli
sbb
retf
pop
mov
jle
aam
jp
neg
sub
cmp
lahf
imul
int3
fisttp
adc
xchg
push
repz
jl
out
mov
xor
push
pop
mov
jg
cmp
popf
xchg
mov
out
pop
adc
push
lods
mov
sbb
data16
lods
out
hlt
push
(bad)
cdq
in
jp
mov
add
sub
in
mov
jle
scas
and
jo
lds
ins
shr
bound
repz
shl
je
inc
jo
arpl
cmps
into
and
retf
jne
and
addr16
in
gs
mov
inc
jecxz
daa
ret
mov
xor
arpl
inc
pop
lock
add
enter
repnz
or
test
into
push
sub
inc
lods
test
mov
mov
jo
cmp
into
cmp
in
sbb
cmp
dec
mov
sbb
and
and
mov
or
cdq
ins
mov
pop
pop
dec
cmp
jg
sbb
xor
mul
jb
cmp
jecxz
shl
icebp
ficomp
in
mov
aas
ficomp
or
stos
cmc
jo
add
(bad)
push
stos
dec
jns
cmp
les
faddp
scas
mov
mov
and
ins
popa
movs
mov
dec
js
mov
js
fsubr
cmp
lock
cmp
jle
js
mov
out
repnz
cmp
pop
shl
mov
jg
aas
pop
or
push
int
js
jge
push
out
add
pop
in
shl
pop
mov
xchg
(bad)
in
mov
sbb
loopne
dec
addr16
lahf
rol
cmp
sar
jmp
dec
ja
mov
(bad)
push
mov
pop
pop
or
repnz
and
jns
adc
sahf
mov
inc
aas
or
xor
out
pop
mov
jge
std
shl
add
xor
lods
sub
dec
push
movs
inc
dec
mov
push
call
sar
pop
push
mov
cmp
mov
inc
cmp
movs
addr16
(bad)
pushaw
rcr
gs
cmp
and
mov
jb
mov
jmp
js
jmp
test
arpl
fdiv
and
in
fst
shl
je
ret
sub
cli
mov
jge
or
addr16
sub
add
arpl
out
jbe
das
mov
adc
adc
cld
mov
dec
adc
jle
or
inc
stc
sbb
(bad)
pushf
loopne
sbb
jno
sub
es
push
cmp
xor
dec
mov
adc
pop
sbb
mov
mov
jl
inc
rcl
js
sbb
cmc
mov
test
mov
push
mov
fld
outs
or
lock
fs
sbb
gs
retf
arpl
or
outs
jle
sbb
ret
xor
outs
jo
fisubr
in
pop
adc
and
add
pop
jnp
ins
ret
jp
xor
hlt
icebp
outs
(bad)
clc
repz
popa
int
mov
sub
mov
std
movd
imul
(bad)
imul
inc
dec
idiv
pop
outs
jns
loope
jo
add
push
sbb
dec
imul
fwait
mov
xor
out
test
inc
xchg
adc
cmp
dec
push
cli
mov
mov
(bad)
lock
sbb
jp
push
aaa
aas
push
cmps
xor
mov
jmp
call
popf
inc
jo
fwait
mov
and
sub
adc
push
push
daa
lock
push
xchg
push
push
mov
cmp
mov
pop
cmove
je
mov
and
bound
push
das
imul
ja
push
jo
aad
sub
or
adc
dec
mov
int
ror
in
jbe
shl
stos
shl
pop
imul
imul
int3
retf
out
jne
pop
xor
aas
xchg
add
dec
outs
inc
mov
sub
das
pushf
inc
retf
into
test
gs
push
mov
(bad)
or
cli
sub
daa
es
mov
cmp
adc
push
jge
add
fdivr
xchg
in
scas
test
mov
inc
cmp
or
xchg
pop
and
mov
push
or
mov
test
pop
mov
and
lods
sub
push
mov
mov
adc
rcl
cli
popf
in
jl
mov
adc
push
push
sub
rcr
sub
(bad)
sbb
ins
xchg
cmps
rcl
push
pop
call
call
nop
fisub
(bad)
aad
(bad)
aam
test
icebp
pushw
xchg
rol
enter
add
imul
les
retf
push
xchg
sbb
mov
add
cmp
movs
xchg
bound
in
xor
mov
cmps
fidiv
cmps
ror
dec
dec
fcomp
mov
push
and
leave
(bad)
mov
and
hlt
mov
in
in
dec
push
lahf
push
sub
xchg
scas
mov
sub
popa
jle
inc
and
push
fsubr
sub
pop
outs
xor
jb
xchg
int
rol
jmp
jns
adc
js
mov
bound
call
fnstenv
mov
push
lds
ins
clc
stos
out
dec
(bad)
sub
arpl
fist
mov
push
jb
dec
enter
cmp
mov
mov
cwde
jnp
loopne
add
jg
and
sbb
call
dec
fimul
or
repnz
or
adc
inc
mov
repz
sub
lock
gs
jns
jp
cmp
jo
clc
not
and
loop
jmp
rcr
mov
mov
jae
popf
aas
inc
cmp
sbb
mov
pop
ror
xchg
mov
adc
jle
rol
popa
aas
cmps
scas
pop
cmps
pusha
cli
mov
repz
mov
(bad)
adc
sub
les
push
or
daa
rcl
or
push
jmp
inc
stc
jo
into
arpl
shl
dec
hlt
jne
fsub
ds
mov
fbstp
and
adc
pop
(bad)
push
cmp
bound
mov
jg
je
jnp
outs
push
into
rcr
mov
or
xor
jecxz
pop
sub
pop
aaa
sub
enter
mov
ins
pop
pop
adc
ins
enter
cmp
outs
jl
xchg
or
test
push
iret
jb
test
das
in
dec
test
sub
cmp
xor
out
cli
pop
jbe
fldenv
dec
out
out
test
cdq
pop
pop
mov
call
cs
mov
out
scas
iret
and
inc
xchg
add
dec
ss
adc
das
out
add
fdivr
mov
xchg
dec
xor
sub
add
jne
xor
inc
ss
sub
loop
push
xor
fmul
leave
hlt
jp
mov
inc
adc
lea
push
test
inc
sbb
cmp
add
aas
out
sbb
into
cmps
outs
in
sbb
mov
jmp
xor
or
mov
scas
les
mov
aaa
lds
xor
fs
lahf
sbb
mov
(bad)
xchg
push
ins
sub
cmp
call
mov
fs
inc
pop
sub
jecxz
in
aad
les
shl
ins
das
inc
into
jmp
push
cs
outs
mov
fst
aad
nop
jp
xchg
fisub
pop
outs
out
shr
es
add
retf
adc
ja
pop
pop
and
out
(bad)
mov
sub
or
mov
repnz
jge
mov
dec
enter
rol
jne
loopne
mov
xor
sbb
mov
(bad)
pop
out
mov
sahf
inc
pop
popa
out
xor
jb
int
add
sub
cmps
lock
test
jecxz
jb
rcr
push
dec
in
adc
loopne
mov
sti
mov
adc
imul
sub
popa
xchg
pusha
cmp
push
(bad)
shl
movs
ds
push
push
stos
out
jb
nop
inc
adc
cli
rcr
xchg
cmp
lds
sbb
jne
jmp
and
xor
cmp
addr16
dec
sub
xchg
sub
les
sub
adc
test
sub
aam
loopne
mov
inc
cmp
stos
add
sub
and
out
jnp
cmps
call
xchg
jmp
ret
jge
leave
sub
outs
or
xchg
push
ins
jmp
stos
mov
fsub
cmc
retf
inc
aaa
in
in
fisttp
and
div
int3
cld
scas
jmp
test
mov
out
(bad)
(bad)
lea
in
push
and
mov
mov
push
clc
push
test
jmp
fbstp
rol
add
dec
js
pop
sub
pushf
or
repnz
mov
ret
(bad)
mov
repz
addr16
lds
mov
mov
sbb
out
loopne
aam
jne
mov
fisubr
pop
jmp
jno
aaa
gs
dec
pusha
cli
shr
push
(bad)
cld
cmp
xchg
cmp
push
iret
sahf
xor
jae
xor
fnstsw
ret
jecxz
repz
sub
or
(bad)
(bad)
cmc
jnp
loopne
xor
in
jl
inc
retf
jb
fdivrp
pop
jno
mov
sbb
sub
pop
push
mov
inc
dec
aad
(bad)
(bad)
ins
(bad)
xor
movs
adc
mov
outs
lds
sub
ins
aad
jb
test
pusha
sub
mov
add
adc
mov
cmp
cmp
imul
cld
push
mov
(bad)
jp
push
into
lods
xor
cmps
sar
test
add
(bad)
dec
push
sbb
loope
iret
jo
stc
ret
push
mov
shr
sub
sub
jno
add
sti
les
imul
mov
mov
mov
jno
push
retf
jmp
repnz
data16
xchg
imul
mov
cmp
xchg
mov
or
repnz
jo
push
cld
and
jnp
xor
ja
lea
repnz
xor
das
xlat
out
push
test
in
retf
sub
lods
imul
ins
and
pop
add
test
call
mov
stos
shl
pop
repz
mul
xchg
inc
out
jecxz
ins
shr
xor
mov
mov
inc
scas
sbb
stc
test
xchg
movs
pop
pop
enter
mov
(bad)
clc
jecxz
fs
xor
div
fisub
dec
adc
movs
mov
fsub
mov
aaa
push
nop
pop
adc
inc
clc
ins
xchg
xor
sbb
sub
xlat
scas
cmp
vpcmpeqd
push
mov
push
std
add
jg
iret
mov
lock
js
out
add
cld
test
xor
fisttp
in
neg
push
out
jmp
mov
ret
ds
ror
xor
inc
pop
xor
mov
ds
into
popa
mov
or
sbb
mov
mov
jmp
in
popf
scas
psrad
leave
or
inc
fisttp
gs
inc
mov
aam
jne
lahf
(bad)
(bad)
mov
lahf
jnp
lock
js
lea
je
jle
std
scas
(bad)
xor
inc
dec
xchg
outs
ins
ins
push
xchg
ins
mov
loop
repz
inc
fcomi
inc
es
add
sahf
cmp
mov
xlat
lea
pop
jno
push
fisub
inc
inc
push
xor
das
cmc
clc
stos
mov
addr16
adc
repnz
inc
sub
sbb
imul
(bad)
mov
rcl
test
int
mov
std
rcl
pop
jno
aam
sbb
stos
ret
pop
dec
xor
adc
ret
out
inc
jge
stos
sub
and
cwde
xchg
into
cmp
or
ins
fcom
sbb
(bad)
out
sbb
jmp
sbb
xchg
dec
push
dec
lock
neg
mov
mov
add
in
mov
and
aaa
push
jae
pop
fild
ret
xchg
jecxz
xchg
xchg
scas
pop
mov
bswap
mov
gs
repz
jbe
mov
lock
rcl
out
dec
aad
jo
push
mov
lock
aaa
loopne
jmp
sahf
(bad)
je
retf
sbb
repnz
push
lds
stc
jmp
xchg
fdivr
cmp
inc
mov
cmp
(bad)
cmp
aas
dec
pop
cmp
add
inc
std
adc
push
repnz
sbb
or
push
xor
pop
daa
add
and
push
jne
xchg
sub
scas
sti
repnz
jne
jae
es
jp
mov
mov
imul
hlt
popf
inc
cmp
xchg
(bad)
repz
movlps
and
arpl
mov
push
imul
pushf
dec
rcr
out
fs
(bad)
dec
cdq
aas
xor
xchg
sbb
ins
aas
std
pop
pusha
or
fstp
and
hlt
jl
sub
pop
pop
aad
xor
push
dec
int
push
push
lods
sbb
sub
ds
add
push
or
fwait
cmp
fwait
sub
add
push
mov
and
add
cmp
pop
or
pop
mov
cmp
cmp
bound
mov
jg
xabort
and
inc
outs
std
pop
mov
cmp
cmp
push
mov
je
dec
dec
add
sbb
adc
stos
test
nop
(bad)
test
sbb
outs
cmp
mov
cmp
rcl
mov
retf
sar
mov
jns
test
(bad)
fld
dec
sub
push
stos
ds
iret
ins
cmp
adc
iret
push
daa
cmc
add
add
imul
pop
xor
fs
adc
aad
xchg
lea
inc
mov
or
loop
test
xor
cld
cmp
push
inc
or
xor
dec
popf
add
mov
jb
popa
in
push
push
jl
mov
dec
imul
into
pop
push
pop
in
push
test
fnsave
mov
clc
xchg
imul
mov
xchg
stos
popa
sbb
xchg
or
push
ja
sbb
sub
sub
aad
pop
out
jg
(bad)
outs
mov
adc
clc
clc
hlt
mov
cdq
push
fisub
and
(bad)
bound
loop
rcr
inc
add
cmps
pop
repz
push
pop
or
fwait
inc
sti
jmp
adc
cwde
test
and
jno
mov
and
xor
ret
jp
shr
jecxz
mov
adc
fdiv
movs
les
mov
xor
sub
jmp
fnsave
xchg
out
bound
xchg
lock
loope
fld
sub
push
pop
aad
adc
or
je
cs
and
dec
or
pop
and
pop
lahf
jae
mov
dec
adc
cwde
in
fimul
xchg
adc
sub
add
mov
inc
mov
lods
fnstsw
inc
sbb
aam
add
mov
test
pushf
xor
rcl
mov
mov
out
cs
add
mov
js
popa
ror
arpl
rcr
sub
inc
jmp
xor
test
jge
in
jo
movs
and
(bad)
mov
sar
popf
mov
in
xchg
push
outs
mov
popa
or
nop
cmp
in
add
fidiv
fld
mov
jae
dec
call
mov
clc
jge
lds
hlt
aad
dec
enter
leave
sbb
test
addr16
aas
push
ds
xchg
shr
(bad)
pop
lock
retf
jns
xchg
test
jb
repnz
mov
mov
fwait
ret
mov
ror
push
sub
mov
or
movs
je
xchg
aad
dec
mov
mov
mov
popf
loop
pop
div
mov
rcl
arpl
fwait
jne
ficom
mov
scas
test
inc
das
or
or
popa
out
fsubrp
mov
outs
inc
pop
pusha
inc
leave
xor
(bad)
and
retf
mov
mov
and
mov
pusha
fadd
scas
mov
or
adc
shr
jmp
ret
retf
push
inc
gs
outs
mov
fmul
aad
ss
xor
ficom
lods
jecxz
arpl
into
cld
addr16
pushf
clc
in
movs
(bad)
nop
mov
adc
and
test
lea
enter
pop
push
data16
movs
mov
jge
and
sahf
test
sti
pop
sbb
adc
sub
adc
sbb
or
sub
lds
jp
sar
mov
popf
loopne
syscall
push
sahf
pop
in
xchg
daa
push
cmp
fmul
xchg
jno
es
cmps
arpl
inc
test
imul
adc
and
fnstenv
pop
(bad)
call
sbb
and
fwait
leave
pushf
adc
popa
inc
or
ret
xlat
ins
adc
sbb
pop
test
dec
div
inc
xor
mov
out
das
jnp
xor
in
movs
(bad)
xlat
jno
jg
sub
call
cmp
enter
pusha
sbb
icebp
daa
outs
jae
jne
ret
dec
popf
push
(bad)
das
inc
sub
cmps
iret
mov
add
int3
sub
mov
imul
jb
das
sbb
loopne
ret
push
and
mov
and
outs
daa
shl
nop
(bad)
clc
std
pop
(bad)
js
fwait
iret
mov
inc
sbb
sbb
mov
cli
or
xchg
popaw
dec
jne
mov
sub
int
gs
sti
mov
(bad)
xchg
dec
int3
mov
inc
fadd
cmp
rol
jmp
sub
mov
and
and
fcmovne
and
test
call
mov
out
sbb
cmp
stos
add
jmp
mov
leave
jmp
lea
retf
cmp
in
cmp
mov
and
jns
pushf
xor
and
clc
sub
fld
push
xchg
sub
cld
adc
push
loop
xor
adc
cmp
inc
in
outs
and
in
call
pop
push
pop
(bad)
jmp
dec
jmp
xor
push
imul
fwait
mov
test
fs
or
xchg
xchg
push
and
js
popa
and
or
stos
loopne
mov
mov
xchg
and
inc
sar
(bad)
test
ret
rcl
std
movs
push
xchg
cld
sti
cs
cmp
ror
and
popa
adc
pop
mov
loope
mov
int3
movq
hlt
dec
inc
mov
fdivr
push
dec
xor
dec
call
(bad)
jmp
mov
push
cdq
and
add
stos
mov
popf
inc
jle
push
ret
movs
scas
or
jl
enter
rcr
movs
(bad)
cmp
sbb
and
icebp
into
lods
in
dec
imul
outs
std
add
sub
pop
pop
jecxz
mov
(bad)
(bad)
movs
sub
mov
mov
and
xrelease
jecxz
xor
fmul
cmp
pop
ja
push
sub
cmps
data16
jmp
lock
push
imul
pop
inc
movs
pop
mov
loopne
mov
mov
inc
adc
xchg
ret
sbb
dec
xlat
mov
sub
pop
and
mov
mov
in
xchg
cmp
add
dec
jb
pop
cmp
xchg
xchg
mov
jge
cwde
xor
cmps
jne
dec
jae
mov
adc
lods
sar
sbb
movs
movs
mov
pop
cmp
out
hlt
stc
inc
fiadd
push
aad
pop
xchg
inc
lods
out
out
add
mov
pop
es
outs
adc
push
jb
mov
jns
xchg
inc
jae
dec
(bad)
out
and
xor
pop
movs
mov
addr16
jo
mov
scas
or
(bad)
fidivr
outs
dec
pop
inc
jecxz
nop
fwait
stos
popf
pmulhw
aad
xchg
xor
fld
and
dec
xchg
xor
sub
sub
jbe
ja
mov
scas
mov
ficom
dec
add
push
loopne
arpl
push
das
jmp
sub
inc
int3
xchg
ret
and
(bad)
cmp
sub
popa
out
mov
adc
jge
inc
jp
inc
cmp
fcmovbe
sbb
or
xor
call
test
pushf
jmp
loope
push
mov
(bad)
xchg
iret
lods
test
ja
cmp
rol
mov
push
inc
(bad)
mov
mov
popf
sbb
mov
daa
jmp
out
iret
pop
ins
dec
aas
cmp
jbe
aaa
xchg
mov
mov
ss
sub
jecxz
loope
pop
dec
inc
stc
in
cli
inc
cmps
scas
cmps
mov
xchg
fisttp
jne
jne
jns
(bad)
add
test
fistp
cmp
test
add
pusha
dec
xor
addr16
jae
aas
iret
mov
leave
jl
push
mov
std
jmp
lea
and
fild
call
gs
add
rcl
pop
call
test
pop
fdivr
addr16
das
pop
movs
(bad)
mov
ins
inc
push
cmps
gs
jge
xchg
ret
cld
(bad)
push
xor
mov
jne
ja
or
xchg
xlat
xchg
mov
and
(bad)
jle
std
sti
xchg
pop
jae
imul
(bad)
fpatan
mov
push
test
ja
enter
outs
and
jnp
retf
cli
sub
mov
dec
jo
sub
cmps
test
adc
mov
stos
sahf
jno
push
sub
xchg
in
mov
cwde
xor
mov
inc
outs
stos
stos
mov
scas
shr
gs
mov
popa
mov
inc
in
adc
cmp
movs
aam
cmp
xchg
and
pop
(bad)
mov
pop
test
lods
leave
shl
rcr
shl
cmp
rcl
push
lods
jge
rcr
test
push
sbb
(bad)
out
outs
retf
add
or
sbb
jnp
add
sbb
jbe
push
cmc
movs
call
ror
cmp
push
and
pop
sbb
inc
bound
je
in
(bad)
out
jae
or
clc
dec
scas
xor
jecxz
jne
push
ss
call
push
out
jecxz
xchg
add
test
pop
adc
jg
and
retf
cmp
add
lds
sbb
gs
scas
das
jnp
pop
jbe
mov
xchg
xor
mov
jg
test
xchg
shr
sub
test
dec
in
cli
ja
push
or
jne
ret
in
jo
call
cmps
ror
push
mov
push
jmp
mov
mul
jmp
stc
fbstp
out
cmp
lahf
fmulp
push
int
repz
cld
cld
or
jno
fadd
imul
cmp
pusha
(bad)
out
mov
pushf
mov
mov
idiv
or
mov
xchg
or
shr
pop
stos
pop
loopne
cmps
(bad)
and
mov
sub
ror
cmp
gs
pop
mov
shl
cmp
cmp
fld
jnp
and
das
lods
sub
je
inc
pop
outs
outs
pop
mov
les
test
xchg
or
push
test
fcomi
pop
xchg
and
xor
into
jns
mov
jb
xor
movs
pop
dec
leave
jns
loop
cli
cmp
push
jae
fiadd
mov
cmp
jecxz
mov
inc
mov
adc
(bad)
push
sti
adc
push
mov
jmp
inc
xor
add
xor
lock
jge
cmp
sub
fiadd
shl
mov
cmp
mov
dec
push
(bad)
sub
adc
cmps
imul
xor
mov
ins
push
adc
pop
repz
in
out
xor
fstp
or
std
data16
nop
add
inc
popa
mov
and
jae
dec
cmp
adc
enter
mov
cmp
xor
jle
pop
dec
sbb
xor
cdq
adc
pop
jg
jae
mov
std
jnp
adc
adc
int
popf
xchg
push
and
sub
cmps
xchg
push
push
push
push
inc
(bad)
mov
mov
addr16
push
movs
jle
add
(bad)
loope
sbb
adc
fwait
movs
xchg
sbb
aad
sub
stos
js
scas
xchg
inc
outs
mov
ins
mov
mov
push
cmc
(bad)
ror
dec
mov
(bad)
test
mov
add
inc
repz
adc
dec
cmp
adc
into
enter
and
test
add
inc
mov
int
xchg
loopne
push
(bad)
pushf
jmp
aas
mov
fwait
rol
jbe
or
dec
repz
scas
ins
or
scas
mov
lods
jge
dec
call
stos
sbb
xchg
dec
pusha
push
jl
(bad)
lods
jae
mov
fbstp
jns
clc
call
popf
mov
repz
adc
leave
dec
out
aad
mov
in
adc
stc
mov
xor
or
in
lock
test
inc
sahf
inc
sbb
out
pop
mov
inc
sub
fcom
jbe
cwde
adc
ss
mov
sub
gs
and
push
mov
dec
ins
fisttp
push
retf
cmp
fs
add
mov
aas
xlat
xor
jmp
das
cmp
movs
push
mov
sub
ret
xchg
mov
in
dec
(bad)
mov
out
enter
inc
add
(bad)
movs
pop
sub
pop
xor
mov
(bad)
(bad)
push
cmps
push
push
icebp
test
test
repz
cmp
enter
clc
push
loopne
aaa
mov
sahf
cmp
xchg
sub
pop
cdq
push
(bad)
(bad)
lea
scas
je
outs
in
ds
out
add
mov
rcr
mov
xor
(bad)
mov
or
in
mov
cmp
fldenv
shl
push
ja
stc
xor
call
js
data16
jmp
xchg
cmp
loop
or
gs
push
int3
mov
jl
jl
arpl
hlt
icebp
and
ins
cmps
addr16
lock
ficom
pop
lds
cmp
ds
dec
(bad)
fld
mov
sub
sti
dec
inc
push
inc
outs
in
jl
dec
cli
ja
(bad)
fs
mov
repnz
mov
fnstcw
pop
cld
cwde
jmp
mov
mov
xor
pop
pop
stc
mov
pop
ror
dec
je
xor
pminub
mov
mov
mov
cmovp
adc
in
mov
sub
pushf
dec
mov
(bad)
rcl
xor
popf
fucomp
sub
jmp
mov
jno
jmp
fst
mov
ror
jge
jp
jmp
adc
sbb
or
xchg
push
inc
aaa
popf
pop
cwde
and
xchg
int3
sub
mov
sar
out
mov
add
neg
and
dec
je
and
add
add
ja
add
ret
cs
pop
pop
jmp
mov
test
loope
cmp
dec
add
mov
or
mov
inc
sbb
lods
cdq
imul
xchg
scas
adc
rol
push
pop
push
ret
shl
lahf
sub
call
inc
ret
adc
push
inc
add
sbb
push
test
xchg
cmp
inc
and
sbb
idiv
xor
mov
pop
ret
fcmovbe
inc
push
push
mov
std
jecxz
loopne
imul
std
mov
je
cmp
shr
cmp
bnd
cmp
jge
xchg
mov
frstor
pop
sub
stos
(bad)
pushf
std
mov
or
add
es
neg
out
add
push
add
sbb
push
stc
aas
sbb
xchg
lea
cmp
push
cs
jne
sbb
push
imul
sub
bound
push
and
jmp
test
in
inc
ins
jecxz
fiadd
push
push
out
popf
push
push
fst
mov
jbe
xchg
cmps
iret
add
push
mov
outs
xchg
nop
sub
mov
mov
mov
ja
mov
movs
add
test
popa
push
mov
mov
je
pushf
adc
fnstenv
xor
hlt
add
arpl
into
and
dec
cs
cmps
or
pop
rcl
jbe
sbb
sub
mov
int3
mov
lahf
gs
loope
pop
cli
or
shr
mov
jae
cmp
nop
jge
push
or
fisub
cli
inc
jmp
test
call
xlat
nop
xchg
inc
mov
out
cmp
add
iret
out
retf
inc
in
jg
arpl
stc
std
inc
sub
es
add
rcl
dec
inc
adc
cwde
jecxz
cmc
adc
push
movs
addr16
push
lock
xchg
push
sahf
sbb
mov
hlt
mov
mov
mov
adc
sub
push
pushf
test
and
std
out
and
movs
aad
mov
ds
dec
inc
shl
xor
movs
jnp
and
jmp
imul
pop
rcl
xchg
xor
pop
ss
ss
pop
ja
callw
cld
pop
push
push
push
add
enter
daa
dec
push
test
xor
(bad)
not
sbb
loopne
fidiv
test
mov
sar
jnp
jmp
jmp
dec
or
iret
xchg
daa
ins
mov
add
ins
xor
jbe
sahf
inc
es
fst
fwait
call
popa
mov
add
xchg
mov
je
xlat
pop
test
mov
pop
pusha
ror
mov
jo
fldcw
movs
push
les
jae
xchg
xchg
lea
bswap
mov
sahf
pushf
and
lods
cdq
dec
aam
in
jl
xor
push
push
jle
cmp
jnp
rsqrtps
jns
or
mov
mov
shr
stc
test
push
(bad)
adc
loop
push
mov
mov
test
lock
cmp
out
add
cmp
jl
bnd
mov
ficomp
sub
cmp
dec
adc
out
pop
jmp
lods
mov
xchg
mov
iret
nop
test
jmp
inc
lea
and
mov
mov
xor
movs
das
inc
adc
dec
jp
cmp
pop
xor
aaa
mov
stos
ficomp
xchg
xor
fcmove
inc
aas
data16
mov
cwde
cmp
rol
fisttp
xchg
dec
mov
jo
add
vpor
or
sbb
push
push
aas
out
sub
adc
dec
push
loopne
fmul
xor
mov
xor
loope
rcl
loope
push
or
call
or
fcom
jl
mov
sub
sub
pop
out
call
pusha
daa
inc
mov
bound
pushf
add
jle
cmp
stos
jb
sub
lock
iret
jle
clc
fist
test
xor
or
loop
icebp
jl
jl
bound
add
pop
into
inc
rcr
jns
xor
cmp
or
push
jp
xor
lock
out
inc
clc
imul
pop
ror
arpl
xor
arpl
add
xor
mov
mov
xchg
arpl
fs
xlat
or
cmc
push
retf
sub
or
mov
hlt
mov
mov
loope
call
xchg
sbb
add
dec
fidiv
ret
scas
mov
xor
or
int3
(bad)
jp
mov
mov
test
jnp
fwait
push
fstp
xchg
xor
cmp
xchg
jl
pop
retf
das
(bad)
movs
repz
mov
scas
cmc
cmc
jmp
mov
and
mov
mov
aas
jl
dec
jno
test
jne
push
mov
nop
mov
dec
int
xor
or
inc
jns
addr16
js
stos
inc
icebp
ret
adc
mov
rcl
imul
fidivr
mov
lahf
sar
je
inc
les
and
ss
in
fsub
sar
in
and
stos
xchg
stos
jl
rcl
(bad)
mov
fdivr
fwait
lds
inc
cmps
icebp
retf
cmp
test
cmps
aas
fisttp
adc
fist
fidiv
aaa
lea
pop
inc
or
retf
jno
or
fs
and
(bad)
push
shr
sbb
push
mov
jg
fwait
nop
mov
enter
jmp
jae
test
push
push
js
jg
mov
lds
fst
nop
cwde
jmp
adc
push
cwde
lea
inc
cmps
jbe
fidivr
push
sbb
pop
push
loop
shl
push
xchg
sub
test
jb
mov
sbb
ins
ja
adc
jg
sub
(bad)
cli
and
ss
cmc
mov
ds
inc
adc
shl
mov
js
push
add
ss
out
mov
mov
pop
dec
mov
pop
mov
inc
add
repnz
push
and
cmp
and
pop
(bad)
sub
xor
mov
xchg
call
ss
popa
inc
xlat
loopne
int3
les
repnz
out
pop
sbb
adc
mov
stos
shr
xor
rcl
call
stos
inc
jecxz
out
loope
jmp
test
shl
push
push
adc
inc
lods
inc
es
leave
xchg
imul
outs
test
data16
push
xchg
es
clc
mov
aaa
and
mov
es
lock
das
mov
outs
inc
shr
and
ins
push
es
mov
fcos
push
test
sbb
call
cmp
int3
pop
or
shl
mov
push
addr16
mov
push
mov
les
jge
and
sar
hlt
mov
sub
inc
push
jmp
popf
or
ss
js
jb
mov
xchg
das
int3
inc
dec
fist
movs
enter
outs
das
shl
xlat
cmc
je
jl
mov
loop
(bad)
neg
add
xor
dec
adc
add
jecxz
ret
mov
adc
sbb
xlat
xlat
call
jle
rcr
push
jne
jae
push
mov
or
pop
add
pusha
dec
sbb
mov
fs
dec
mov
idiv
(bad)
call
cmps
iret
jmp
icebp
mov
imul
push
xor
cmp
fsubr
push
or
sbb
sbb
(bad)
les
mov
sahf
lods
xchg
add
add
cmps
push
and
nop
cmc
sbb
in
xchg
adc
inc
clc
test
fwait
jno
inc
stc
movs
mov
lea
xchg
shl
adc
fld
shl
daa
lds
out
jnp
xor
jns
in
inc
mov
mov
call
add
(bad)
js
sbb
out
ret
pop
inc
std
sub
repz
retf
and
push
cmp
out
fsubp
paddq
dec
pop
in
movs
push
(bad)
ror
les
mov
adc
repz
mov
or
enter
push
icebp
mov
(bad)
jle
retf
push
fcomip
xchg
push
test
retf
adc
pop
pop
mov
adc
hlt
xchg
cwde
out
les
int
mov
sub
cmp
jno
xchg
imul
in
into
mov
ja
mov
cld
aad
push
out
fs
rcl
loopne
jmp
test
(bad)
mov
sub
rol
mov
test
(bad)
movs
pop
(bad)
adc
call
(bad)
mul
int
xchg
jmp
leave
xchg
jge
push
xchg
xor
repz
mov
ds
mov
push
subps
cmps
test
mov
pop
and
aam
or
(bad)
pop
jmp
xor
adc
cdq
dec
cli
shl
je
jno
cwde
xor
pop
icebp
aas
scas
add
xor
out
rcr
shr
push
cmp
scas
push
not
iret
dec
ret
jbe
inc
xchg
retf
clc
or
mov
lahf
addr16
mov
cmp
out
and
adc
add
adc
cmc
(bad)
popf
scas
sub
and
test
pop
or
xchg
int3
and
pushf
loop
jae
pop
or
neg
mov
sbb
mov
dec
adc
jae
and
jae
pop
sub
jle
xor
dec
push
fiadd
push
jae
pusha
fs
inc
lahf
inc
jge
stos
out
add
mov
les
or
call
mov
rol
test
repnz
jne
retf
mov
data16
icebp
mov
push
xor
loopne
lock
fbstp
(bad)
sar
in
in
mov
adc
mov
xchg
and
nop
push
rcr
push
inc
sub
mov
mov
outs
cmp
and
gs
push
loope
add
pop
test
add
enter
sub
fidiv
inc
cmc
jo
les
retf
scas
pop
dec
imul
fs
cwde
xchg
sbb
jnp
jns
std
sar
dec
or
jne
sti
in
stos
pop
imul
aad
or
xchg
xor
scas
xchg
cmp
shr
(bad)
jb
add
mov
ret
push
call
(bad)
adc
cs
imul
mov
mov
retf
jbe
xchg
push
ss
push
jle
mov
pop
test
(bad)
push
gs
ja
cmps
sub
xchg
test
clc
mov
xchg
xchg
jae
dec
in
mov
xchg
test
pop
inc
mov
repnz
or
lock
fxch
jp
clc
(bad)
jno
iret
jle
cmc
out
push
mov
push
jmp
popa
outs
jnp
dec
add
arpl
outs
jmp
mov
add
test
iret
push
ret
or
aaa
push
adc
dec
pop
retf
push
retf
loop
mov
add
je
clc
jp
ror
int3
retf
and
aad
adc
loop
sub
fmul
push
jecxz
ss
jmp
outs
rol
mov
out
add
sub
sub
jecxz
addr16
aam
cmc
and
add
imul
sub
sub
push
cwde
fmul
test
ds
repnz
out
pop
repz
(bad)
mov
clc
or
gs
addr16
leave
jns
inc
mov
cmps
pop
inc
mov
outs
movs
inc
call
mov
fisttp
scas
cmp
mov
es
mov
sbb
push
packuswb
or
pusha
push
mov
loopne
pop
push
xchg
sahf
and
je
(bad)
cmp
push
dec
nop
hlt
popf
fs
sbb
sbb
xor
cmc
int3
ror
pop
stos
mul
mov
rcl
fadd
bound
gs
cs
cdq
jecxz
dec
std
movs
adc
cmp
in
adc
dec
mov
mov
lods
jge
jae
sbb
nop
ds
loope
out
cmps
(bad)
aam
and
add
(bad)
xchg
lahf
mov
ss
push
mov
(bad)
xchg
test
mov
mov
retf
and
rcr
cwde
(bad)
add
fadd
mov
rol
rcl
add
mov
push
in
loopne
add
dec
rol
fs
jbe
enter
leave
lahf
pop
pop
jno
push
jae
cmps
dec
adc
sbb
pop
nop
ds
test
imul
push
cmp
xchg
mov
jg
mov
xor
daa
jmp
adc
inc
stos
or
cmp
jl
xchg
leave
add
xor
mov
xchg
scas
lock
hlt
test
jge
pop
mov
mov
je
xchg
pop
lds
cmps
stos
cwde
mov
mov
imul
dec
hlt
and
mov
inc
sub
or
and
sti
xchg
dec
aas
cmp
or
or
repnz
aaa
xlat
inc
pop
retf
popf
outs
jp
aaa
xor
adc
imul
sbb
mov
xor
sbb
jl
(bad)
xchg
cmp
ficom
pop
xor
faddp
or
enter
sub
xchg
adc
or
mov
lods
jecxz
jae
mov
push
add
adc
cmp
mov
cmp
enter
int3
inc
xor
xchg
xlat
sbb
mov
cmps
sub
sub
leave
mov
lods
or
cli
xor
in
repnz
out
in
int3
(bad)
jmp
sub
daa
mov
jno
inc
add
int
jg
pop
push
scas
pop
hlt
lahf
mov
iret
push
js
jnp
pop
cmp
pop
xchg
adc
sbb
rol
xchg
inc
xchg
enter
cmp
sbb
bound
ss
cli
push
adc
inc
sub
pop
cmp
stos
neg
pop
cmp
push
mov
and
out
mov
dec
jno
out
cmps
out
inc
mov
arpl
stos
inc
dec
and
cmps
aaa
push
sbb
adc
adc
and
inc
push
pop
retw
inc
or
jle
mov
fistp
ss
push
sbb
sbb
les
xor
data16
cwde
cmps
xchg
dec
add
cmp
sub
fst
sbb
push
into
pop
movs
out
dec
xor
fst
mov
call
shr
test
aas
repnz
pusha
pop
ds
repz
xor
rol
int
retf
(bad)
pushf
jge
push
loopne
sub
fs
cmp
call
jmp
cmp
popa
adc
scas
popf
push
stos
mov
aaa
icebp
mov
not
xor
xor
rol
repnz
fidivr
fbstp
out
pop
rcl
in
pop
cmp
push
jmp
add
lods
es
pop
push
xchg
pop
mov
pop
xor
xchg
out
ins
inc
xchg
sbb
add
xor
(bad)
or
dec
inc
mov
add
test
je
sti
mov
mov
and
xor
sbb
fucom
mov
clc
je
ret
retf
cs
xor
out
mov
or
add
loope
xor
inc
in
inc
cmp
or
or
and
mov
push
imul
mov
xor
jecxz
in
dec
maskmovq
not
ins
dec
in
and
in
lods
pusha
ss
das
in
mov
adc
or
rcr
cs
adc
pop
imul
adc
or
clc
pop
xor
adc
mov
dec
aam
(bad)
mov
add
adc
jmp
mov
xchg
jmp
frstor
fisttp
pop
inc
mov
jns
mov
cmp
imul
and
std
arpl
jmp
inc
or
push
mov
sbb
ret
dec
arpl
mov
cdq
mov
jp
jmp
nop
and
(bad)
cmp
mov
jecxz
xor
jno
pop
mov
ror
(bad)
mov
scas
inc
outs
mov
add
jns
loopne
sbb
push
dec
dec
push
imul
dec
popf
lds
popf
and
in
push
pop
dec
fwait
cmp
push
pop
cmp
nop
jo
repnz
push
sub
jge
hlt
jo
js
mov
xchg
jmp
int3
push
jl
push
repz
retf
repnz
rcr
(bad)
mov
(bad)
(bad)
xchg
mov
stos
cmp
inc
daa
loope
xchg
ret
pushw
es
xor
dec
mov
xchg
aam
add
lods
push
imul
movs
in
cmc
pop
sbb
xor
xchg
repnz
push
test
xchg
xor
xchg
add
sbb
dec
cmps
(bad)
hlt
jns
repz
jnp
and
pop
and
icebp
sub
repz
(bad)
inc
jle
fadd
in
mov
adc
aaa
jne
dec
mov
mov
xorps
or
std
mov
leave
test
cmp
hlt
je
popf
fcom
sub
pop
loop
and
mov
dec
jge
psadbw
lods
cmp
hlt
pop
mov
mov
mov
in
shl
xchg
mov
pop
adc
sub
xchg
sbb
not
test
in
and
popa
sar
cmp
mov
mov
cli
dec
test
mov
and
ja
add
mov
cmp
in
xor
clc
mov
in
(bad)
xor
nop
jl
test
popf
jno
cs
add
sbb
fistp
mov
and
ja
mov
or
jo
push
imul
data16
jnp
mov
aad
sbb
loopne
xor
xchg
loop
dec
jbe
je
cdq
int3
ja
mov
lds
or
div
mov
repnz
jmp
jecxz
mov
push
jns
push
and
or
xchg
xchg
jl
daa
sbb
push
cmc
mov
fcmove
jg
cmc
in
push
inc
cld
cmp
test
jp
nop
xchg
dec
repz
ins
out
addr16
jle
jp
mov
out
add
cmp
ins
ret
jno
dec
repnz
ds
dec
fwait
clc
inc
daa
sbb
imul
and
push
cmp
ret
not
inc
pop
cs
je
jbe
mov
or
vandnps
(bad)
jle
jp
mov
jnp
inc
cwde
push
push
int
push
test
aas
sti
and
push
cmp
fs
in
arpl
xor
scas
dec
or
mov
in
xchg
sub
push
mov
push
adc
hlt
fbld
imul
jge
cmp
push
jae
addr16
cmp
das
aad
shl
les
scas
jmp
push
call
or
in
mov
imul
cmp
mov
add
add
(bad)
pusha
popa
lock
pushf
stos
and
test
pop
cli
sbb
dec
out
pop
iret
push
mov
cwde
arpl
test
mov
int
adc
test
mov
mov
mov
mov
and
ficom
(bad)
jno
shr
in
pop
jmp
xor
mov
cdq
mov
cli
sti
repz
cmps
test
mov
dec
loope
adc
cmp
mov
adc
nop
cs
ja
loope
ret
int
push
add
xor
test
movs
icebp
ins
daa
dec
inc
dec
je
fwait
sbb
pop
mov
cwde
rcr
add
mov
cmc
push
jecxz
and
jnp
into
mov
movs
mov
push
in
push
sahf
fwait
mul
sub
pop
sub
fsubr
popa
xchg
push
popa
repz
and
mov
inc
fs
lock
aam
mov
fisubr
push
push
mov
adc
ret
xchg
sbb
arpl
adc
sub
inc
adc
xor
adc
mov
std
xor
mov
inc
aam
mov
xor
ins
pop
xchg
add
retf
cmps
mov
mov
outs
add
les
inc
lock
push
fcom
xchg
imul
pop
aas
mov
fist
mov
add
push
(bad)
cmps
jb
std
push
fild
aam
cmp
and
sbb
(bad)
arpl
xchg
(bad)
dec
and
inc
fimul
jb
daa
test
jbe
nop
pop
xchg
mov
imul
mov
or
sub
cdq
into
dec
fisubr
sbb
retf
adc
pop
les
dec
or
shr
test
adc
sub
mov
mov
push
or
jl
adc
rol
ret
sbb
popaw
hlt
into
mov
jmp
ja
adc
mov
sub
(bad)
imul
ja
ror
test
inc
dec
add
mov
push
fsubp
inc
or
cmp
test
pop
aas
add
jmp
in
inc
leave
aaa
mov
mov
push
cmovl
xchg
mov
(bad)
cmp
cld
jge
sbb
cli
push
sub
iret
aad
imul
(bad)
loop
mov
cs
xchg
pop
or
fcom
int
adc
gs
lds
cmp
or
sbb
push
pop
jnp
push
mov
in
lock
je
add
push
push
mov
mov
dec
std
inc
bound
push
call
fiadd
dec
ins
shl
out
scas
inc
shr
and
outs
cs
das
movs
adc
rcl
adc
outs
mov
int3
pop
jecxz
or
(bad)
ja
clc
pop
shl
out
dec
mov
fsubr
(bad)
outs
add
inc
sbb
stos
clc
pop
pop
mov
sbb
test
fwait
cli
or
xchg
jae
push
aad
call
arpl
pop
dec
lahf
add
xchg
pop
jle
test
or
scas
pop
jne
sbb
outs
ret
mov
call
div
in
mov
ret
movs
pop
sahf
jnp
nop
and
and
push
dec
popa
ficom
xchg
dec
jbe
repz
les
lods
or
dec
scas
call
adc
pop
push
aaa
sets
(bad)
jb
cmp
pop
pop
repnz
fild
sahf
add
mov
test
test
enter
mov
stos
push
mov
pop
cmp
dec
or
gs
outs
lock
and
inc
in
jmp
jg
mov
retf
in
lds
or
xchg
fwait
inc
dec
leave
les
xor
add
mov
or
mov
and
bound
popf
push
sti
xchg
mov
scas
pop
jnp
add
mov
xchg
cdq
pop
daa
sahf
inc
jge
test
out
stos
sub
fisub
fdiv
pusha
pop
cmc
aam
sbb
das
inc
(bad)
xchg
xchg
jnp
mov
lds
sub
push
fwait
or
adc
shr
jecxz
and
xchg
xor
pop
inc
into
mov
and
icebp
in
inc
shl
retw
loope
mov
or
(bad)
pushf
shr
push
dec
sub
nop
xor
mov
imul
lods
add
or
aam
mov
fwait
jae
imul
movs
cmp
sub
dec
xchg
mov
pop
push
xchg
and
cmp
xchg
jb
sbb
jo
mov
cmp
push
pop
add
call
test
mov
or
or
jb
sub
inc
retf
adc
movs
adc
scas
add
nop
test
xor
fistp
pop
push
daa
imul
mov
je
lahf
int3
sbb
icebp
dec
and
xor
outs
cmp
shr
daa
jmp
cld
ins
or
lds
xor
ucomiss
mov
jl
cmp
jmp
imul
call
(bad)
mov
sub
icebp
stc
ins
ss
sbb
mov
push
inc
cmp
dec
repz
push
(bad)
out
sbb
test
call
add
xor
push
cmp
inc
mov
jp
push
shr
sbb
xchg
lods
and
add
lds
es
mov
je
sub
ror
inc
pop
inc
or
(bad)
cmp
(bad)
fsubrp
pop
inc
adc
pop
xchg
(bad)
push
dec
loope
imul
xchg
loop
inc
push
clc
jae
mov
add
fstp
xchg
cli
call
xchg
dec
ret
inc
lock
pop
cmp
pop
and
and
push
jle
cwde
and
xchg
or
loop
adc
jg
pop
mov
add
sbb
call
dec
jl
mov
push
dec
mov
fadd
push
or
ja
xchg
fild
packuswb
in
addr16
mov
and
sbb
inc
je
ja
inc
mov
int
(bad)
les
xor
outs
in
sub
shl
lahf
add
xchg
lods
mov
dec
std
mov
and
clc
xchg
or
inc
adc
jbe
pop
rcr
test
ret
pop
push
sar
stc
popa
pop
mov
(bad)
lds
test
fucomi
inc
ret
mov
ficom
mov
aam
and
test
xor
push
cmc
add
cmps
mov
mov
jns
jle
add
pop
adc
mov
fs
jb
leave
mov
and
mov
mov
sub
jbe
pop
sub
add
scas
sar
jbe
xchg
mov
rol
fcmovu
dec
mov
lock
mov
sub
mov
mov
cmp
pop
inc
jp
call
mov
stos
lods
mov
cmps
mov
fld
(bad)
gs
mov
jae
popa
aaa
aas
push
(bad)
(bad)
aaa
fild
arpl
test
dec
cmp
push
sbb
or
rcr
test
fldcw
sbb
mov
adc
ret
add
xor
inc
out
push
xchg
test
xchg
cmp
push
jb
push
dec
dec
push
xchg
in
jmp
pop
mov
mov
call
(bad)
jmp
jae
cmp
daa
fwait
ror
add
dec
adc
adc
pushf
shl
add
and
std
mov
(bad)
aad
les
dec
stos
mov
es
mov
sub
adc
adc
lods
pop
cmp
int
stos
sahf
stc
xor
mov
jmp
mov
sar
outs
xchg
movs
stos
xor
push
jb
jmp
enter
adc
test
mov
push
arpl
fs
add
pushf
sub
adc
call
mov
mov
push
retf
repz
xchg
pop
movs
mov
mov
jbe
(bad)
cmp
jne
aas
xor
inc
xchg
push
jg
imul
aas
xchg
push
mov
shl
or
sbb
bswap
jle
adc
xchg
loopne
jmp
mov
ficomp
retf
sub
or
movs
xlat
inc
add
loope
shl
add
dec
and
mov
dec
lea
and
fst
fld
jbe
add
sub
cs
mov
test
jp
xlat
sub
jg
sub
and
inc
nop
out
add
sub
cmp
xor
pop
jmp
call
mov
outs
repz
add
lea
mov
call
push
and
mov
mov
add
enter
int
mov
ficom
jg
push
enter
push
or
push
dec
imul
in
and
sti
in
xor
packssdw
mov
push
xchg
sti
sbb
rol
cmp
sbb
gs
mov
inc
out
(bad)
loop
lahf
xchg
push
les
fwait
push
push
fcomp
jo
and
lock
call
call
stos
scas
inc
movs
inc
and
sub
test
outs
dec
push
mov
jae
mov
xchg
je
xor
movs
jg
mov
sbb
fnstsw
mov
mov
dec
add
cmp
jno
mov
push
pop
sub
adc
jecxz
dec
int
fwait
jne
mov
dec
add
xchg
nop
and
pusha
adc
mov
or
xor
push
sbb
dec
movs
mov
rcr
popa
loope
dec
mov
arpl
mov
stc
xchg
xor
out
sub
lods
add
cmp
push
into
cmp
daa
imul
data16
scas
jbe
out
or
pushf
dec
sub
idiv
pop
hlt
inc
dec
outs
sub
lods
mov
add
and
push
inc
cmp
mov
(bad)
lds
in
or
mov
cmc
push
push
or
iret
sbb
aaa
pop
add
test
ret
mov
jmp
ficomp
mov
scas
les
sar
xchg
inc
loopne
xor
add
into
or
xchg
inc
xor
(bad)
jg
xchg
xlat
sbb
xor
aas
xchg
and
dec
outs
and
push
mov
cmp
mov
shl
fcom
push
or
hlt
pop
pushf
out
jg
test
jp
outs
repnz
int
cwde
call
daa
arpl
jnp
mov
retf
mov
ins
(bad)
int
es
inc
retf
mov
fisubr
scas
into
jnp
jae
push
xor
cmp
mov
fcomp
cmps
ins
mov
js
lods
loope
push
or
out
cmps
ins
inc
mov
stos
push
push
aad
cmp
xlat
jno
xchg
lods
cli
(bad)
test
xlat
push
lods
movs
push
pop
xor
jae
out
inc
retf
lea
push
adc
push
add
or
loope
push
inc
mov
or
or
hlt
pushf
pop
in
push
fs
push
cwde
sbb
adc
popa
movs
adc
sbb
repz
in
ds
push
mov
mov
fnstenv
xlat
cmp
scas
(bad)
xchg
and
imul
mov
iret
xor
retf
sub
xchg
loopne
gs
lock
popf
fwait
pop
push
inc
ret
iret
in
mov
xchg
pop
and
jmp
daa
into
clc
mov
add
adc
jns
and
or
imul
ret
xchg
loopne
or
cmp
pop
add
cld
inc
and
cmc
jle
push
(bad)
scas
inc
shr
fbstp
out
xor
mov
push
fiadd
adc
xor
es
mov
aas
mov
xchg
sbb
pop
stc
mov
mov
dec
popf
scas
mov
(bad)
sahf
sahf
iret
fist
movs
scas
inc
jb
xor
inc
daa
data16
push
xchg
(bad)
fldenv
retf
add
fld
imul
xchg
gs
inc
scas
jmp
psubusb
and
ds
daa
scas
xchg
pusha
and
movs
sbb
retf
bt
sub
rcl
push
mov
adc
icebp
and
jno
sar
mov
sbb
out
outs
stos
in
xor
cmp
mov
stos
stc
in
ret
test
sub
ss
mov
jns
lahf
push
retf
js
push
xchg
fmulp
aad
push
shl
dec
mov
call
xchg
enter
das
inc
push
gs
xchg
adc
cli
or
sahf
xchg
loopne
lods
retf
xchg
(bad)
xor
pop
ja
sub
rep
rol
and
sbb
inc
fadd
sub
mov
(bad)
fimul
outs
fstp
rcr
repnz
push
mov
add
imul
popf
sbb
rol
jg
add
int3
stos
rcl
adc
push
push
inc
in
push
popa
jp
jae
mov
loopne
call
push
xor
add
out
add
push
cld
or
push
out
cmp
xchg
popf
fstp
shl
aam
sbb
mov
cmp
in
mov
sub
test
push
test
cdq
jge
outs
stos
scas
pop
dec
rcr
repnz
jne
sar
push
call
jns
push
pusha
mov
xor
mov
fimul
es
lock
addr16
push
cwde
in
ss
mov
into
mov
int3
xor
test
add
push
jle
stos
cmp
frstor
xor
(bad)
loopne
(bad)
xor
dec
mov
rcl
nop
je
push
add
mov
mov
push
cmp
mov
jbe
inc
cmp
dec
ja
repnz
das
data16
outs
jne
das
cli
mov
test
aaa
add
adc
xchg
aas
cmp
cmp
push
mov
les
sbb
ins
sbb
xchg
pop
dec
pop
and
add
sbb
and
data16
or
jne
data16
idiv
leave
jmp
stos
sbb
inc
ficom
in
imul
jo
xchg
in
add
push
pushf
je
mov
mov
push
mov
push
shr
hlt
xchg
(bad)
not
popf
cmp
xor
(bad)
xchg
xor
adc
add
sub
mov
cdq
icebp
js
ds
xor
add
sub
mov
int3
jg
push
and
adc
pop
icebp
push
jge
adc
mov
pop
in
push
mov
outs
(bad)
aaa
test
cmp
repz
repz
cmp
sub
in
add
dec
push
cmp
sub
outs
sbb
push
adc
ret
iret
jg
cld
adc
jne
cdq
and
dec
arpl
int
shl
ja
xchg
mov
into
into
fsubp
or
shl
inc
mov
and
mov
fidiv
jno
pop
aas
mov
xchg
jne
push
fimul
and
inc
xchg
jecxz
adc
jb
jg
pop
cs
jns
aaa
inc
cmp
pop
mov
cmc
jne
push
mov
inc
push
ss
cmp
inc
inc
dec
into
ss
push
imul
mov
jmp
or
jb
cs
or
mov
sbb
lods
jbe
fisubr
dec
stos
ja
loope
jnp
cld
cdq
and
(bad)
jmp
retf
push
(bad)
(bad)
sub
dec
ror
pusha
mov
test
popf
push
movs
mov
jnp
xor
rcr
popf
and
inc
jl
int3
in
dec
test
cmp
cmc
rol
retf
mov
sbb
stos
inc
daa
mov
adc
push
pop
std
jns
mov
push
dec
mov
sub
(bad)
mov
sar
mov
ja
adc
pop
dec
sbb
push
(bad)
jp
out
cmp
pushf
lds
outs
jecxz
clc
ins
div
inc
out
(bad)
push
imul
pop
sbb
out
add
xor
xor
loope
fcmovu
xor
cmp
cmp
out
lds
test
repz
ret
xchg
and
mov
dec
jmp
fwait
pop
pop
mov
xchg
fcom
int
imul
xor
data16
and
sub
mov
fcomp
xchg
imul
vpslld
jg
xor
aad
pop
movs
inc
shl
outs
mov
mov
and
mov
dec
add
rol
iret
mov
adc
dec
push
and
es
hlt
mov
(bad)
aam
pop
xchg
jp
lock
pop
xor
nop
push
out
push
cmp
loope
mov
mov
cmp
mov
mov
jb
sbb
mov
xchg
sbb
pushf
mov
push
ins
fdiv
or
stos
dec
mov
sbb
jg
jp
enter
xor
mov
cwde
not
push
mov
jnp
pop
jb
fs
mov
popf
inc
mov
movs
push
mov
mov
shl
retf
sbb
movs
(bad)
(bad)
int3
dec
fisubr
mov
mov
push
dec
xchg
add
mov
sbb
sbb
mov
adc
loope
in
xchg
retf
fidiv
jnp
daa
cmps
(bad)
loop
das
sbb
aam
mov
ja
sar
lods
xchg
test
inc
fwait
mov
ror
add
mov
or
aam
inc
aad
or
xor
mov
movs
test
or
and
pop
push
xchg
(bad)
(bad)
add
test
(bad)
dec
dec
sbb
aad
repz
mov
push
pop
mov
adc
mov
jae
xor
popf
mov
mov
out
mov
push
jp
xor
icebp
xor
shl
mov
or
or
push
cmp
pop
xlat
leave
add
pop
aaa
xor
mov
cli
retf
dec
push
mov
or
and
sahf
mov
pop
mov
dec
and
ror
jp
inc
xchg
push
mov
cdq
aad
mov
mov
add
repnz
adc
lds
outs
inc
push
(bad)
loopne
nop
jo
cmp
aam
xchg
mov
lahf
aaa
fsub
mov
mov
in
stos
sbb
lock
out
jo
or
je
mov
ret
clts
aad
jnp
push
lods
movs
jno
lock
push
jbe
jp
jnp
das
mov
dec
mov
fisub
xor
xor
inc
mov
arpl
(bad)
clc
xchg
bound
add
mov
xchg
and
sbb
in
loop
inc
(bad)
arpl
hlt
mov
inc
fld
or
out
pop
xlat
pop
cwde
lods
(bad)
repnz
sbb
sub
in
loop
push
push
rep
test
dec
or
int3
test
inc
dec
outs
mov
or
ss
hlt
or
enter
into
sub
or
dec
mov
sub
mov
sub
sbb
push
icebp
stos
test
sbb
scas
and
push
iret
aaa
inc
jge
lods
cmps
jne
dec
test
movs
js
fstp
mov
loope
xchg
loop
mov
cmp
fiadd
push
inc
cmc
sub
pushf
dec
gs
stc
jp
dec
sti
add
(bad)
fldenv
pop
or
addr16
iret
or
add
test
imul
mov
xor
shl
xchg
shr
aad
hlt
and
or
mov
jno
dec
or
push
jg
and
xchg
jbe
cmps
jbe
rcl
mov
adc
and
xor
xchg
push
ret
push
sbb
add
inc
sbb
xlat
add
xor
adc
imul
mov
push
pop
xor
aas
ja
xchg
shl
push
xlat
jle
pop
test
adc
enter
into
sbb
add
repz
mov
loope
aam
pop
stc
ins
cdq
and
add
jne
shl
icebp
mov
test
jp
outs
lahf
ss
cli
and
push
pop
sbb
nop
(bad)
out
jnp
fisttp
fcomp
jne
cmp
sti
retf
inc
aad
pop
or
loop
push
les
jbe
xchg
or
repnz
pop
xor
mov
test
and
(bad)
jae
jp
sar
out
aam
pop
sub
aad
cmp
or
or
icebp
mov
out
fcmovnbe
test
fs
adc
dec
out
xor
sbb
and
inc
mov
xchg
inc
xor
push
ror
xchg
in
icebp
pushf
mov
jne
jmp
xchg
dec
sub
pop
or
mov
mov
jb
lods
xor
mov
arpl
(bad)
(bad)
pop
push
aas
add
pop
add
ins
test
cs
pop
push
fcom
mov
rcr
pop
movs
pop
add
inc
jge
sub
enter
push
jbe
movs
movs
dec
dec
iret
shl
js
mov
fwait
mov
(bad)
xor
jge
popf
push
sub
add
data16
xchg
inc
fisubr
cdq
add
push
in
push
jb
(bad)
cmp
push
clc
ror
arpl
bnd
jne
dec
mov
sub
daa
rol
std
xchg
loop
cld
pop
ja
cmp
or
sub
jne
addr16
scas
and
std
and
jl
mov
pop
(bad)
ret
rcr
pop
std
jg
cwde
push
imul
jnp
sti
add
xor
loop
jne
fisubr
pop
mov
outs
dec
push
adc
add
mov
pop
jecxz
inc
push
nop
test
mov
cmp
mov
add
dec
rcl
or
loopne
in
push
push
stos
lahf
cmp
sbb
xor
out
xchg
inc
stos
sbb
test
call
cmp
xor
movs
cmp
and
test
add
fst
shl
push
mov
mov
test
jmp
jecxz
popf
popw
and
stc
and
je
lods
mov
jmp
pop
retf
fstp
cmp
mov
ret
inc
push
cmp
repnz
pop
push
or
scas
call
into
xchg
mov
pop
xor
addr16
in
into
mov
les
sub
mov
addr16
shr
(bad)
ds
mov
xchg
xor
and
repz
or
aaa
mov
and
pop
push
les
push
inc
test
or
mov
popa
mov
mov
jne
je
(bad)
add
mov
out
popa
int
dec
mov
push
fsubrp
and
push
lea
push
mov
mov
shl
cwde
cmp
(bad)
jge
outs
dec
dec
xor
jb
aam
adc
push
cmp
mov
pop
mov
jmp
lods
(bad)
jge
sub
add
test
and
(bad)
lock
sti
int
loopne
mov
jo
xor
sub
cmp
lahf
inc
ja
in
xlat
jmp
pop
loopne
pushf
jno
fbld
stos
ret
xor
call
inc
test
inc
imul
and
jo
sbb
(bad)
mov
cmp
mov
pusha
mov
xor
cld
mul
adc
and
mov
dec
ins
je
and
push
dec
and
in
fdivr
jge
sub
or
js
xlat
pop
mov
je
and
sar
dec
cmps
ret
dec
jb
call
hlt
pop
and
mov
mov
mov
or
aad
call
xor
fwait
xor
xchg
(bad)
and
xchg
mov
xchg
mov
mov
inc
lahf
cmp
out
push
push
push
dec
push
xor
pop
pop
(bad)
ins
jb
cmp
lahf
popa
jle
mul
dec
add
jae
push
dec
(bad)
shl
mov
shl
pop
adc
sub
and
dec
mov
test
(bad)
pop
adc
aad
pop
xchg
icebp
xchg
retf
dec
rcr
stos
daa
stos
inc
mov
sub
xor
mov
fst
pop
mov
enter
ret
push
iret
sub
add
es
mov
pop
xchg
rcr
pusha
daa
push
mov
adc
adc
dec
jns
hlt
jmp
inc
aad
dec
fld
or
pop
mov
cmp
push
cwde
rcl
pop
out
sbb
cmp
enter
gs
aaa
jle
push
outs
pop
xor
inc
leave
aaa
jecxz
int3
out
jo
(bad)
mov
mov
cmp
sbb
push
xchg
xchg
jbe
mov
(bad)
pop
fdiv
popa
jl
add
dec
xor
cli
push
inc
icebp
loopne
inc
sbb
pop
xchg
idiv
pop
or
fdiv
call
mov
mov
je
retf
in
jg
je
push
data16
loop
es
and
jg
pop
inc
jbe
fwait
out
push
jp
and
leave
pop
fcomp
dec
movs
lods
dec
repz
cli
push
inc
push
fldcw
jg
jecxz
icebp
mov
mov
js
fidivr
and
shl
push
or
mov
fdivrp
xor
pop
push
sar
mov
dec
cld
nop
lea
jmp
or
and
sbb
push
shl
pop
in
mov
sti
cs
xchg
mov
jmp
js
lods
pop
cs
shl
and
adc
in
addr16
adc
rol
test
and
repz
sub
out
out
cmp
and
repz
and
rol
iret
in
sub
arpl
fcom
push
stos
mov
push
or
dec
fs
jns
icebp
inc
xchg
movs
sub
jge
test
and
inc
rol
push
or
addr16
(bad)
lock
icebp
retf
sub
pop
retf
xor
mov
cmp
and
jbe
mov
outs
not
jb
or
or
xlat
inc
sbb
xchg
fidivr
xchg
jns
(bad)
(bad)
push
sub
add
ucomiss
dec
(bad)
xor
int3
add
add
and
push
into
aam
je
push
push
fstp
mov
cmps
jb
cli
xor
cdq
xor
xor
cmp
mov
dec
outs
or
popf
pop
mov
imul
arpl
xlat
iret
les
in
aam
imul
pop
lds
sbb
shl
loop
xlat
in
add
fprem1
push
vmovdqa
xor
jle
mov
xlat
mov
inc
inc
dec
adc
in
cld
add
xchg
(bad)
mov
enter
xchg
test
sub
inc
clc
dec
mov
dec
fwait
call
push
sbb
popf
pop
mov
lods
in
jbe
mov
sbb
and
jbe
clc
mov
cli
lods
ret
repz
sahf
and
mov
dec
rcl
lea
jg
push
fisubr
adc
cmps
xchg
jnp
(bad)
adc
js
retf
jne
aad
imul
idiv
cmp
ss
push
lods
fs
mov
or
int
jg
mov
inc
mov
shl
fisubr
xchg
push
pushf
push
dec
loopne
bound
push
xor
push
jbe
pushf
push
lds
lods
jno
imul
retf
fnstsw
das
pop
mov
adc
dec
fimul
outs
test
adc
dec
sub
mov
(bad)
cmc
mov
inc
jmp
push
sub
or
dec
push
imul
ss
sub
cmp
jmp
lods
hlt
inc
cmps
mov
arpl
sbb
test
outs
mov
cli
pop
daa
and
mov
call
dec
mov
mov
sbb
jge
in
push
imul
xchg
into
test
and
fld
cmp
cmp
jno
movs
neg
ret
pushf
jo
mov
in
xchg
inc
shl
cmps
xlat
push
jbe
mov
shr
add
popa
(bad)
jecxz
inc
and
fist
mov
ins
dec
mov
cmp
ret
cmps
jp
lahf
cmp
and
movs
js
ja
out
popa
cmp
fbld
push
push
push
dec
or
in
xor
sbb
in
popa
sbb
jp
inc
out
hlt
int
and
dec
jmp
into
scas
cmps
mov
and
dec
out
sbb
sbb
les
xchg
jbe
or
int
(bad)
sbb
pop
push
cmp
and
inc
fs
mov
pop
addr16
gs
inc
add
mov
mov
cmp
push
dec
xchg
test
stc
fmul
jbe
inc
ins
sub
mov
iret
jmp
push
or
sti
pop
pushf
and
idiv
das
test
cmp
pop
cmp
mov
std
lea
pop
jnp
arpl
jae
mov
xor
xchg
mov
mov
jge
mov
jecxz
push
dec
ins
mov
jbe
mov
dec
outs
fwait
(bad)
cmp
js
lds
push
(bad)
stos
jns
daa
test
mov
cwde
inc
pop
xchg
mov
daa
adc
daa
out
jae
stc
lds
fldenv
dec
pop
add
iret
jge
cmp
and
out
dec
in
sbb
cmp
dec
inc
mov
xchg
mov
fist
stos
ja
scas
repz
fmul
gs
cdq
xor
or
and
mov
xchg
jb
or
scas
fnstcw
(bad)
in
and
out
mov
xor
sub
sti
jns
jne
iret
jg
xchg
xchg
jp
sti
xchg
pop
xor
jns
pusha
test
int
loopne
sti
lea
dec
mov
cmp
mov
fnstsw
loopne
sar
push
xor
loope
sub
stos
or
int
lahf
pop
cmp
or
ficomp
xchg
mov
xchg
add
inc
das
in
das
xor
xchg
inc
outs
push
clc
fwait
xor
repnz
sub
mov
or
dec
and
std
add
ins
xlat
push
cld
push
pop
daa
mov
inc
(bad)
test
inc
int3
jb
hlt
xchg
mov
das
scas
pop
jl
movs
int3
fwait
inc
sub
dec
int3
jmp
sub
push
and
sysexit
xchg
rol
(bad)
lahf
and
in
stc
movs
(bad)
xchg
add
popa
cmp
stos
and
sub
sbb
out
fnstenv
inc
shl
mov
cmp
or
push
add
xchg
ror
mov
fild
pop
aas
stos
xor
(bad)
fistp
rcl
push
fsubr
cmp
jb
mov
mov
adc
mov
sub
lahf
not
or
mov
pop
test
test
mov
inc
push
clc
movs
sbb
jbe
inc
fisubr
movs
cmps
xor
dec
dec
dec
mov
movs
(bad)
cs
loopne
clc
xlat
out
sub
cmp
push
jmp
lahf
cmc
out
fwait
pop
push
(bad)
jbe
cmp
sbb
sti
test
out
int3
lods
int
mov
sbb
pop
fist
push
add
(bad)
mov
fwait
ss
shr
add
lahf
stos
enter
imul
push
push
lods
call
outs
call
add
inc
or
push
lahf
out
mov
sbb
jecxz
(bad)
and
inc
cmp
cld
mov
fs
sub
push
or
fdiv
mov
sbb
popf
or
clc
push
pop
int3
add
(bad)
mov
aam
jmp
lods
xor
outs
stc
aas
xor
mov
lock
int
add
mov
inc
push
mov
push
test
ja
or
jb
jbe
(bad)
mov
push
mov
dec
lahf
cwde
jge
sbb
or
xlat
push
test
mov
or
in
movs
fld
mov
loop
and
int3
and
int
test
and
call
mov
std
inc
into
ret
sbb
cmp
sahf
loopne
pop
enter
dec
mov
pop
loopne
xchg
nop
(bad)
sahf
inc
mov
mov
leave
xchg
add
or
cmps
mov
jo
popa
and
shl
iret
out
mov
frstor
hlt
xor
push
push
pop
test
repnz
lea
lods
mov
mov
into
mov
sbb
push
pop
(bad)
cmp
fsubp
test
xor
sub
pop
fsub
fs
(bad)
push
jmp
jae
xchg
arpl
test
sahf
sbb
and
jns
pop
inc
mov
std
adc
ret
in
stc
in
mov
cmp
in
dec
and
jmp
sub
mov
mov
sbb
inc
fld
mov
inc
sub
mov
jne
lahf
jb
adc
(bad)
jmp
mov
rcr
mov
lea
xchg
mov
or
icebp
leave
and
cmp
mov
in
mov
xchg
loop
jnp
push
repz
mov
mov
or
xchg
test
adc
and
adc
mov
(bad)
ins
push
inc
neg
(bad)
jmp
push
and
aas
aad
mov
pop
not
inc
jo
(bad)
and
dec
cmp
sbb
sar
icebp
xchg
pop
inc
lds
xchg
cli
xlat
sbb
pop
cmps
dec
lods
pop
jp
jbe
sub
push
les
inc
in
test
ds
xlat
mov
xor
push
movs
mov
pop
add
cmc
dec
cmp
and
push
dec
out
sti
dec
repz
(bad)
movs
adc
sub
int
or
outs
inc
rcr
jp
loope
sbb
rol
add
cmp
add
ins
retf
push
pop
and
nop
shl
or
(bad)
mov
shl
pop
mov
lods
mov
inc
fs
cmps
mov
sub
sti
and
add
call
mov
push
inc
(bad)
mul
pop
inc
add
adc
aas
cwde
repnz
dec
in
clc
movs
inc
stos
idiv
fdiv
in
gs
scas
xchg
sbb
ss
mov
sbb
pop
dec
and
add
neg
outs
push
inc
cld
dec
lods
jmp
(bad)
rol
mul
sbb
mov
stc
xor
das
iret
cmp
out
sbb
push
mov
jae
divps
je
jg
loope
popa
cmp
mov
push
dec
rcr
xor
push
or
icebp
inc
imul
imul
push
clc
and
push
cwde
pop
and
es
enter
loopne
out
sbb
pop
nop
mov
jge
xor
js
xor
cmps
lods
(bad)
cmp
xchg
xor
in
ret
sub
and
or
fisub
ins
xchg
pusha
pop
in
inc
shl
outs
sbb
scas
adc
cmps
ds
cmp
pop
lock
out
dec
sub
fisttp
xlat
(bad)
cmps
pop
xor
push
sti
cmps
and
jno
fisttp
sbb
sub
stos
clc
or
cmp
stos
xor
jbe
mov
(bad)
loope
xchg
je
test
push
stc
mov
dec
and
add
xor
(bad)
xor
cmp
rcl
push
(bad)
add
mov
inc
cli
xchg
mov
addr16
jnp
or
push
dec
push
fidivr
push
aad
in
mov
inc
mov
lods
inc
or
xor
jmp
leave
ret
clc
cwde
(bad)
jnp
xchg
jo
mov
add
mov
(bad)
mov
int3
xor
es
ret
popa
ret
mov
cmp
leave
stc
sbb
pop
ud1
pushf
inc
bound
xor
and
and
inc
stos
cwde
add
pop
stc
cmp
jmp
cmp
(bad)
add
inc
jle
or
or
test
(bad)
inc
out
lds
jns
fisttp
leave
mov
mov
sub
pushf
inc
scas
lahf
mov
jns
ficomp
or
mov
push
push
mov
fcmovnu
jp
cmc
cmp
mov
push
push
mov
gs
mov
jne
mov
scas
pop
jp
mov
jnp
push
movs
test
mov
xchg
push
add
push
test
enter
rcr
shr
pop
inc
jno
xchg
(bad)
es
xor
mov
dec
pand
pop
pusha
push
call
mov
lea
adc
(bad)
fnstenv
or
das
data16
add
stc
aaa
movs
ds
jl
out
sar
jmp
sbb
aaa
gs
push
push
xchg
push
dec
test
aad
jl
pusha
sub
cdq
sbb
jmp
loope
daa
cmp
or
add
mov
sub
add
test
dec
in
pop
test
and
push
or
imul
mov
adc
clc
ja
into
jmp
imul
out
aaa
jo
movs
adc
pop
pop
enter
mov
test
and
inc
imul
inc
pop
into
popf
icebp
jmp
les
inc
lea
pop
dec
pop
push
mov
(bad)
loopne
mov
xchg
push
data16
cmp
dec
xor
ins
call
sbb
fwait
xchg
xor
lahf
push
dec
mov
jmp
lock
add
fwait
out
std
dec
push
push
hlt
es
into
pop
xor
cld
in
mov
cli
push
push
test
or
fidivr
pop
loope
sbb
fucomip
fidiv
mov
cmp
xchg
dec
push
dec
sub
mov
jge
push
mov
or
pop
mov
and
outs
mov
mov
sbb
jmp
inc
int
dec
(bad)
into
call
sbb
push
pop
or
push
push
loopne
int
and
movs
xor
mov
mov
imul
fild
lahf
mov
jecxz
(bad)
cmc
dec
outs
outs
mov
xor
add
out
inc
iret
(bad)
popf
sub
test
or
stc
cdq
sub
adc
movs
pop
mov
int3
out
jno
mov
cdq
test
call
test
stos
out
jecxz
sub
mov
dec
ds
or
mov
mov
adc
and
dec
mov
pop
aas
and
fcom
(bad)
xchg
loope
xchg
mov
cmp
and
fstp
loope
cmp
xlat
pop
arpl
(bad)
mov
stos
les
xchg
stos
push
rcr
and
test
in
sahf
cmp
lods
mov
int3
mov
cli
rcr
test
retf
jmp
call
ins
cmp
cmp
add
ds
push
add
(bad)
frstor
cmps
cld
xchg
mov
xchg
and
pop
inc
clc
xchg
mov
and
mov
inc
mov
aas
cmps
loope
jo
inc
popf
std
lds
mov
(bad)
cs
pop
cmp
mov
int3
mov
cmp
push
mov
cmp
inc
cld
adc
xchg
mov
mov
lock
pop
lods
jns
pop
in
sub
fucomp
add
cld
mov
out
test
mov
enter
test
int3
adc
js
adc
add
sub
mov
push
xor
jecxz
pusha
lahf
push
xchg
and
mov
popf
xlat
pushf
inc
jnp
popf
adc
pop
push
pop
std
icebp
mov
mov
loopne
in
das
js
jp
pop
xchg
enter
jmp
inc
pushf
pusha
cmp
outs
and
pop
(bad)
or
out
stc
xchg
fmul
xor
adc
pop
xor
or
sub
ja
icebp
mov
xchg
jno
xchg
inc
pop
test
cmps
push
jbe
aaa
ret
jge
pusha
fmul
dec
and
push
stos
stc
push
(bad)
outs
out
retf
cld
das
jb
push
cmp
(bad)
push
sbb
outs
loopne
scas
jns
into
fild
ror
lds
jmp
ds
arpl
arpl
stc
scas
repz
iret
stc
imul
mov
stc
aaa
test
sbb
in
xor
pop
push
or
les
leave
lock
clc
push
out
adc
in
pop
mov
adc
(bad)
sti
(bad)
imul
sub
imul
jmp
dec
aad
addr16
test
js
stos
dec
adc
hlt
mov
jbe
xchg
movs
mov
push
adc
xor
sub
ret
test
inc
mov
call
jns
dec
enter
push
stc
and
xchg
mov
fdiv
and
arpl
mov
pop
out
ins
cmp
mov
aas
sub
mov
fsubr
xor
ds
pop
cmp
cmp
out
lahf
add
push
mov
int3
sub
sti
imul
repz
dec
xlat
sbb
cmc
repnz
pop
or
imul
inc
lahf
pop
ja
mov
jmp
mov
inc
(bad)
test
mov
ss
adc
ins
xor
popa
cmp
mov
je
call
cmp
sbb
cmpxchg
cmc
xchg
mov
mov
sub
inc
xchg
icebp
or
sub
pop
dec
std
sti
xor
jle
aas
enter
sub
shl
jo
bound
pop
or
(bad)
in
pushf
inc
or
add
imul
sti
ret
out
cmp
arpl
xchg
into
in
sub
xchg
mov
movs
cmp
and
jmp
mov
hlt
push
iret
das
mov
push
das
xchg
add
shl
and
in
call
ret
xchg
push
inc
popf
shl
cmp
enter
ret
shl
adc
push
shl
fwait
push
js
push
pop
retf
or
pop
ja
and
cmps
fcomp
xchg
addr16
jae
inc
addr16
aas
jmp
aas
xchg
hlt
cmp
ins
les
shr
bound
push
sub
xor
lods
xor
retf
sahf
(bad)
mov
aam
inc
sub
jecxz
imul
adc
fsubr
jb
fisubr
mov
add
imul
cmp
jp
pop
or
aad
xchg
sbb
inc
mov
dec
imul
stos
and
add
jge
xchg
int
inc
mov
mov
lahf
mov
in
push
ja
aaa
fs
inc
cmps
jb
xchg
inc
add
shl
pop
xor
in
jno
mov
xor
shl
dec
cwde
movs
xchg
retf
sar
jae
les
popa
adc
sbb
outs
or
(bad)
mov
cmps
mov
push
cdq
aad
sub
call
adc
sbb
cmp
mov
sub
mov
jnp
pop
jecxz
mov
loope
addr16
cmps
lds
mov
push
fwait
je
mov
inc
mov
and
and
aas
inc
sbb
fwait
and
aad
cmp
adc
xchg
popf
xchg
imul
adc
leave
test
cmp
pop
test
stos
pusha
lahf
scas
retf
xor
ficom
xor
icebp
push
add
jmp
mov
mov
popa
jmp
stc
pop
rcr
lahf
xlat
cmp
pop
aaa
mov
xor
add
mov
daa
aas
in
les
or
mov
add
inc
push
sub
mov
mov
jmp
outs
xchg
outs
xor
dec
test
add
sti
aam
adc
xor
cmps
xor
jo
leave
push
sub
in
in
clc
push
call
mov
aam
jl
test
push
xchg
mov
int
inc
mov
loop
retf
dec
sub
aam
sub
or
pop
mov
arpl
out
mov
xor
mov
lea
pop
xor
pushf
(bad)
and
out
cmp
mov
or
mov
or
lods
adc
push
les
jle
or
inc
rcr
scas
pop
jo
xor
pop
sti
jbe
fs
or
mov
bound
or
bound
mov
movs
icebp
loope
and
jns
push
test
mov
std
or
or
call
(bad)
leave
movs
dec
mov
jbe
sub
inc
pop
retf
jp
je
cmc
dec
pushf
movs
nop
mov
retf
js
xor
jnp
cmp
ret
xor
nop
js
add
and
pop
popa
aam
dec
mov
mov
stos
ja
rcl
push
cld
daa
lea
add
pushw
stos
xchg
test
fisttp
cmc
repnz
pop
and
dec
js
adc
mov
dec
in
aas
jp
stos
sub
es
mov
mov
and
dec
enter
fwait
mov
mov
adc
and
pop
rcl
(bad)
jp
mov
shl
sub
inc
push
shl
adc
loop
xchg
cmc
cdq
call
pop
daa
mov
iret
dec
ins
cwde
arpl
test
lahf
mov
pop
mov
mov
(bad)
lahf
aaa
xchg
sbb
jno
mov
call
cs
xchg
dec
mov
xor
in
and
add
test
push
pop
cmp
jb
sbb
adc
ja
int
aas
iret
sub
(bad)
outs
lahf
pop
mov
cmps
fld
pop
out
ds
sahf
repz
mov
xchg
outs
mov
jae
cmp
dec
mov
xchg
popa
test
or
data16
pop
fild
xchg
mov
stos
jmp
imul
add
xlat
aad
jns
sbb
sahf
adc
(bad)
cld
retf
xor
xor
repnz
cmc
xor
out
xchg
in
inc
int
mov
call
loope
psrlw
adc
ret
mov
and
mov
aaa
clc
mov
mov
sub
mov
cmps
cmc
into
sbb
bound
cdq
inc
add
(bad)
repz
push
dec
(bad)
call
daa
mov
and
pop
adc
add
jl
cmc
(bad)
fisttp
mov
fstp
push
bswap
jg
in
bound
repz
aam
sub
lods
push
pop
sbb
or
outs
pop
cmc
jecxz
rcl
push
enter
stos
pop
or
mul
push
and
cwde
or
xchg
retf
jl
test
adc
cmc
push
mov
and
xchg
or
ret
into
xor
push
popf
out
rcl
sbb
pop
or
add
into
add
ins
cmp
jle
push
sbb
shl
mov
or
(bad)
stos
jb
push
mov
enter
scas
arpl
jg
xchg
mov
or
mov
cdq
loop
shl
sbb
retf
(bad)
sti
enter
sbb
int
push
add
pop
push
sbb
xchg
mov
fs
stc
mov
push
sub
push
pop
push
cmps
cdq
sub
push
mov
cdq
mov
stc
jbe
pop
cdq
in
clts
cmp
div
data16
and
pop
test
dec
push
ffree
dec
or
jecxz
(bad)
xor
pop
dec
loop
(bad)
ficom
imul
pop
pushf
cld
outs
out
cmp
or
arpl
imul
mov
shl
fldenv
push
sbb
and
jmp
test
aas
jle
cmp
test
add
adc
or
test
push
daa
ret
jecxz
popa
or
repz
xchg
cmps
jae
jp
jae
cmc
inc
shl
cwde
push
sub
pop
cwde
add
jae
ins
push
dec
pop
shr
jb
jbe
retf
pop
sti
(bad)
sahf
pop
push
pop
ins
imul
addr16
push
and
in
add
pop
cmc
outs
mov
ror
lahf
xor
mov
jo
out
xor
sbb
jo
pop
push
fucom
xor
ja
retf
rep
xchg
jp
outs
pop
lods
neg
inc
scas
out
lods
neg
jo
rcl
jle
sahf
in
sub
(bad)
into
sub
jbe
pop
xchg
xchg
enter
sbb
ja
bound
jo
adc
ret
pop
add
dec
or
vmovss
xlat
outs
ds
das
dec
push
sar
imul
dec
or
es
out
or
push
mov
xor
xor
clc
adc
xor
sub
sbb
loop
push
mov
addr16
fwait
push
dec
pop
scas
fcomp
retf
lea
stos
gs
outs
sbb
xchg
test
out
pop
and
pusha
cs
mov
in
in
mov
pop
jl
xor
iret
jne
ja
dec
push
mov
popa
sbb
iret
sbb
xchg
(bad)
sub
jnp
test
fbld
nop
icebp
into
ds
out
inc
stos
out
in
out
call
ins
in
lock
outs
les
xchg
pop
arpl
stos
jmp
xchg
xchg
ror
jnp
mov
imul
cmp
out
sub
xchg
mov
xlat
mov
dec
jge
inc
inc
in
mov
cmp
pop
mov
sub
or
pop
mov
dec
mov
sahf
das
in
or
pop
in
sar
push
std
jb
mov
pop
add
mov
jns
jmp
les
add
jmp
xchg
in
(bad)
clc
adc
fstp
sbb
push
and
dec
fsubrp
and
in
movs
push
aam
mov
hlt
adc
jl
inc
mov
int3
sbb
rcl
add
das
repz
daa
sub
sbb
cli
in
adc
pop
push
xchg
ins
pop
jg
cwde
or
jmp
les
jecxz
cli
out
arpl
pop
aam
cmp
or
sbb
loopne
push
dec
mov
cmp
aas
lahf
icebp
inc
pop
(bad)
in
mov
jle
sub
jbe
sub
adc
outs
sbb
cmp
sbb
inc
jmp
dec
mov
pop
mov
add
mov
inc
fnstcw
cwde
movs
sbb
lea
add
or
sub
jne
push
scas
mov
cmp
and
in
adc
cs
iret
jge
jno
call
je
das
mov
imul
scas
pop
pop
pop
fcomp
(bad)
xchg
ss
jo
mov
in
jmp
lahf
leave
je
mov
pop
cmc
adc
mov
popf
aam
cmp
(bad)
imul
or
xor
dec
outs
mov
sar
lods
fcomp
shl
sub
mov
mov
jmp
jo
mov
sbb
ror
or
sub
jge
sbb
shr
retf
fiadd
jno
addr16
mov
inc
mov
jae
sub
fsubr
mov
cmc
or
fild
fisttp
sbb
add
(bad)
cmp
sahf
(bad)
(bad)
dec
xchg
(bad)
fisubr
sbb
mov
nop
sbb
stc
stos
mov
out
push
mov
xchg
pop
jne
repnz
test
popa
mov
aaa
scas
pop
or
ja
fs
lds
sub
mov
jno
cmps
out
add
mov
adc
add
pop
mov
inc
or
outs
js
sub
fisttp
and
lahf
mov
cmc
cmp
ins
and
test
push
scas
mov
add
ds
mov
mov
out
lods
inc
dec
mov
cdq
and
sbb
sub
inc
or
jp
(bad)
enter
lahf
scas
and
mov
ja
sub
adc
(bad)
cmp
adc
neg
jns
es
adc
(bad)
rcr
jb
push
stc
imul
hlt
rcl
sbb
call
jecxz
mov
scas
and
loope
sub
loope
xor
dec
jle
dec
mov
gs
pop
fld
sar
sbb
and
jp
lea
adc
stc
inc
bound
sahf
mov
hlt
adc
mov
jne
jb
ds
push
adc
int3
outs
and
in
aam
clc
mov
cmp
add
push
aas
xchg
ret
aas
retf
push
sbb
or
adc
push
bound
and
sub
xchg
adc
mov
in
ret
shl
push
push
xchg
int
mov
cmp
es
and
dec
mov
test
push
pop
mov
inc
repnz
popf
mov
ins
mov
mov
repnz
mov
retf
fidiv
dec
data16
cmp
or
jp
cmp
mov
ins
loop
ins
sbb
or
int
mov
cmp
imul
clc
fwait
mov
mov
fimul
stc
add
dec
arpl
repnz
call
fwait
mov
arpl
shr
mov
mov
aad
arpl
add
(bad)
pop
cmp
adc
dec
sub
dec
mov
jg
inc
inc
gs
adc
pop
shl
push
push
jmp
sbb
dec
and
fnstsw
jnp
aad
push
retf
mov
stc
mov
mov
aam
bound
push
dec
(bad)
xlat
inc
stos
push
gs
stos
jg
cli
add
test
and
cmp
adc
sub
pusha
push
loop
mov
aaa
mov
mov
ror
not
test
fsubr
dec
sti
mov
mov
push
mov
(bad)
popf
xor
jl
push
mov
shl
or
push
sar
cmps
and
retf
test
in
jbe
sbb
jge
inc
int
cli
repz
push
xor
sbb
pop
push
xlat
sub
jg
xchg
cli
inc
pop
out
stc
sub
sub
add
pop
hlt
movs
ret
adc
ds
add
sbb
inc
pop
loop
mov
xor
scas
pop
push
push
ss
retf
mov
shr
stos
enter
je
cmp
ins
inc
jp
test
test
call
add
mov
jg
fs
xchg
fyl2xp1
scas
push
sub
jl
pop
cmp
bswap
idiv
sbb
pop
jne
pop
loope
mov
mov
outs
std
adc
push
or
add
lods
rcl
pop
mov
mov
sub
mov
mov
cmp
sbb
add
cmp
mov
xchg
popf
xchg
dec
jne
xor
jg
outs
fwait
and
imul
jo
pop
das
imul
add
es
in
pop
dec
ss
int3
cmp
sub
fyl2x
(bad)
pop
lods
jo
sbb
and
jp
lock
jb
mov
imul
sbb
jbe
adc
aas
loopne
loopne
fxch
movs
rcl
retf
test
ds
lods
clc
jb
dec
mov
or
imul
inc
ss
and
jo
mov
cmp
mov
xchg
and
in
movs
aas
call
sti
test
xor
lds
in
sahf
pop
jle
cmp
xchg
adc
jno
fcomp
and
jae
lds
out
or
fsubr
aaa
fwait
sar
test
mov
pop
and
mov
cmps
pop
inc
mov
xor
gs
mov
aas
mov
jp
fistp
gs
into
mov
je
jge
std
inc
jno
icebp
icebp
pop
pop
out
sbb
out
fxch
xor
or
shl
mov
sub
sbb
mov
pop
add
stc
jb
cli
(bad)
dec
mov
rol
mov
out
sahf
icebp
lahf
pop
push
cmps
idiv
stos
out
stc
pop
mov
jmp
mov
repnz
mov
push
mov
stos
add
sub
mov
js
mov
push
test
xor
dec
xor
sub
adc
rcr
mov
and
inc
enter
add
and
rol
mov
cwde
fcomp
adc
sti
fcmovne
(bad)
mov
std
and
lods
jmp
jbe
cmp
(bad)
cli
movs
mov
cmp
pop
and
cdq
fs
sub
or
mov
and
inc
sbb
mov
jmp
(bad)
std
inc
add
inc
mov
ds
jb
jg
ror
mov
inc
nop
jo
cmc
mov
retfw
push
jae
and
test
jne
(bad)
loop
sbb
je
xor
cmps
fistp
fwait
lea
popa
push
mov
mov
es
std
sub
daa
test
dec
retf
data16
or
sub
mov
repnz
pop
add
test
into
popa
in
out
add
enter
(bad)
dec
retf
push
pop
adc
jns
push
sbb
dec
jmp
sbb
cli
rol
pushf
ins
pop
push
je
and
repnz
sahf
cmp
or
sub
sbb
xchg
lds
sahf
cmp
pushf
rol
xor
adc
cmp
(bad)
jne
(bad)
aaa
dec
ins
sbb
mov
sub
sbb
sti
push
mov
popa
out
call
das
cs
shl
clc
cmp
fsubr
in
in
pop
popa
in
in
or
repnz
repnz
in
mov
xchg
and
mov
xchg
imul
inc
mov
repz
mov
sar
arpl
jns
pop
sbb
lods
jmp
sbb
xchg
xchg
call
lds
push
xchg
es
push
push
daa
mov
mov
jmp
(bad)
push
repz
int3
aas
jns
pop
stos
loope
dec
shl
adc
jne
imul
jae
cwde
push
adc
dec
enter
nop
cmps
int
sahf
ins
fnstsw
sbb
mov
sti
xchg
and
fisttp
cmp
push
adc
dec
js
xor
std
add
in
mov
jecxz
cli
mov
and
retf
out
daa
pop
in
imul
pushf
jno
jmp
adc
adc
jnp
cmps
xchg
das
cwde
jb
repnz
pop
stc
jecxz
mov
test
(bad)
test
sahf
mov
jp
xor
xchg
in
(bad)
dec
sub
lahf
or
inc
mov
sub
mov
std
push
std
push
sbb
sbb
jg
mov
ret
xchg
mov
xchg
push
dec
lods
jmp
in
pop
or
aaa
pop
or
das
xchg
addr16
xor
fwait
es
ret
fwait
inc
cmp
pop
fiadd
inc
rcl
mov
push
jnp
dec
in
aaa
mov
or
test
sahf
and
cmp
dec
cs
retf
call
and
out
ja
or
cmp
imul
and
and
lea
inc
and
dec
mov
and
jg
leavew
dec
mov
lahf
(bad)
mov
or
inc
pop
cwde
inc
and
aad
iret
cmp
test
pop
movs
or
call
dec
add
iret
adc
sbb
cmp
add
jl
mov
fcom
inc
or
pop
shl
or
push
and
loope
(bad)
mov
and
clc
(bad)
loopne
xlat
stc
test
dec
ss
and
fmul
pop
mov
jmp
in
into
aam
neg
cli
(bad)
mov
vcvtps2uqq
cmp
mov
xchg
push
loop
js
ins
pop
(bad)
pop
hlt
stc
xchg
hlt
dec
pop
ret
sub
lea
jecxz
xchg
retf
loope
mov
jbe
jno
add
jbe
mov
stc
or
into
xchg
dec
cwde
sub
clc
mov
cli
xchg
jl
mov
inc
int3
(bad)
iret
call
sub
mov
adc
out
lahf
cmp
cmc
sub
inc
mov
cmp
ja
inc
jae
cmps
sbb
adc
scas
cmp
sbb
movs
push
add
xchg
scas
emms
aas
jmp
xor
retf
mov
xchg
jns
push
fsubr
adc
popf
arpl
pop
adc
test
dec
pop
adc
push
neg
ds
hlt
lahf
dec
xchg
into
aam
fistp
pushf
in
les
mov
stc
mov
sbb
mov
inc
ret
mov
popa
and
data16
xor
sbb
test
push
mov
and
test
lock
retf
cwde
push
call
push
std
mov
add
jnp
and
(bad)
push
mov
inc
out
rol
jmp
lahf
sar
in
inc
sub
and
mov
movs
repnz
mov
pop
popa
mov
cwde
(bad)
xor
mov
fild
into
sub
sar
js
inc
cmps
bound
ins
adc
xlat
dec
pop
jno
jae
adc
cld
xchg
jle
xchg
mov
sbb
sub
je
mov
inc
iret
mov
add
sub
push
(bad)
into
in
mov
(bad)
repz
mov
sbb
hlt
push
cwde
adc
pop
cmps
rol
cmc
out
cs
pop
lods
sbb
cmp
adc
fmul
xor
in
test
int3
iret
adc
adc
fcom
push
std
mov
scas
xor
and
aam
cmps
jmp
into
adc
pop
xchg
sub
test
push
xchg
test
jbe
cmps
mov
add
jno
(bad)
(bad)
dec
je
pop
dec
cs
jmp
push
nop
xor
sub
lods
dec
jge
mov
out
int3
add
jo
jno
xchg
sub
xchg
stos
sahf
mov
push
push
and
sub
jle
jbe
push
int
push
pop
je
jo
pop
ret
dec
lds
dec
and
sub
shr
pusha
fld
jg
pop
xlat
mov
add
jae
scas
retf
aas
out
cmp
and
pop
loope
cmp
or
jmp
clc
inc
mov
fadd
retf
push
sub
jbe
xlat
nop
jmp
xchg
cmps
cmc
mov
(bad)
stos
nop
inc
cmp
mov
(bad)
push
xchg
xchg
inc
sbb
inc
ja
iret
dec
dec
cld
dec
in
movs
scas
inc
inc
popa
jl
add
pop
push
into
mov
adc
es
sub
pop
je
je
int
dec
adc
pop
clc
push
fisttp
jns
jle
leave
into
mov
sbb
dec
aad
fs
xchg
call
add
popf
loop
mov
cmp
push
push
test
ret
add
or
cs
adc
ins
cmp
inc
and
mov
clc
mov
jp
in
push
ins
jecxz
in
lods
xchg
cmp
mov
das
aam
sbb
xor
ss
pop
ret
retf
leave
or
push
mov
jle
sub
sbb
sbb
loop
(bad)
ds
fidiv
pop
xor
jns
cmc
mov
cmp
les
mov
out
xchg
inc
mov
fucomp
dec
daa
or
cmp
emms
add
das
inc
pop
adc
std
out
outs
adc
mov
bound
(bad)
dec
adc
push
stos
les
or
pop
inc
pop
push
in
mov
ror
out
sbb
mov
mov
leave
mov
push
or
ds
or
jl
pop
add
cwde
and
mov
lods
mov
(bad)
xchg
out
cmp
jae
xor
or
sub
aad
int3
sbb
jo
arpl
into
ss
xor
push
jg
mov
xchg
xchg
jnp
push
dec
sbb
ficom
xchg
inc
sub
stos
jnp
jne
sbb
mov
jns
push
(bad)
jmp
xchg
mov
inc
ror
out
push
loop
pop
mov
or
mov
pop
adc
or
les
add
aad
pop
call
clc
in
mov
adc
(bad)
inc
aas
iret
imul
outs
xchg
gs
stos
adc
out
adc
cmc
xor
inc
inc
sub
mov
mov
inc
das
add
mov
fs
je
or
jge
sub
jne
xor
ret
nop
aam
imul
dec
loop
stos
jg
pop
cmp
bound
call
or
inc
xchg
inc
mov
fstp
in
sbb
mov
mov
push
cmp
cs
out
xchg
sahf
inc
adc
xchg
dec
out
bound
sbb
imul
daa
xchg
and
pop
xchg
test
(bad)
push
addr16
stc
fild
adc
sbb
push
jo
scas
mov
cmp
push
cmp
mov
xchg
cmps
pop
cs
int
(bad)
push
xchg
call
clc
imul
ins
jle
push
js
sbb
ins
aam
jle
jl
and
cmps
xchg
jno
dec
inc
repnz
cmps
xchg
(bad)
mov
inc
pushf
xlat
jno
out
clc
cmp
out
test
xor
adc
cmc
arpl
ret
mov
in
mov
call
cdq
jp
xchg
enter
daa
jmp
in
xchg
(bad)
(bad)
fs
in
inc
mov
scas
adc
adc
xor
fdivr
shl
pop
dec
push
jl
cmc
ja
popf
push
cmc
out
addr16
imul
in
mov
mov
out
fdivr
or
add
call
pop
inc
push
or
out
mov
cld
call
fidivr
push
ss
ins
shl
ret
mov
test
stc
adc
dec
sub
sbb
loope
in
jmp
in
jae
or
je
xchg
pop
and
popa
xor
fadd
fnstenv
bound
mov
nop
cmp
xchg
lods
adc
dec
mov
push
les
dec
cmps
mov
or
cs
daa
repnz
ja
test
adc
(bad)
clc
or
jp
add
mov
cdq
pushf
cmp
adc
aas
(bad)
movs
call
movs
call
jno
shr
rcl
aas
jne
xor
sbb
into
ins
push
into
fnstcw
sahf
stos
bound
rcr
arpl
cmp
inc
cli
mov
sti
std
fld
es
repnz
sbb
sbb
shl
dec
xor
(bad)
push
and
and
sahf
push
inc
lods
jb
lds
fadd
out
pop
leave
dec
pop
and
jb
shl
xor
sti
and
jl
lds
clc
xlat
mov
xor
sbb
dec
fstp
mov
sbb
pop
jae
jge
sbb
push
push
call
mov
jb
xchg
sbb
pop
fld
into
mov
icebp
data16
mov
fisttp
fmul
dec
mov
cmp
xchg
pop
mov
xlat
xchg
outs
jle
neg
mov
mov
stos
push
inc
pop
sub
push
mov
inc
add
and
aaa
push
jo
cmp
and
fdivp
cmc
call
xchg
mov
push
nop
cmp
add
xchg
sbb
mov
int3
fstp
je
data16
adc
xlat
mov
pop
sbb
shl
aad
fs
sub
adc
pop
and
leave
pop
add
xor
or
les
ja
es
mov
push
add
jae
aaa
lahf
loop
push
sti
mov
mov
lea
xchg
and
sbb
inc
cmp
xchg
dec
arpl
sbb
sub
push
test
xor
int3
aaa
adc
mov
sbb
cmp
std
fisubr
imul
dec
lea
push
nop
jmp
in
push
sti
xchg
popf
popa
ins
mov
inc
shr
add
pop
jne
sub
xchg
stos
sbb
loope
shl
sub
inc
cdq
mov
add
and
xor
ins
add
shl
lahf
je
dec
movs
shl
mov
adc
dec
shl
jmp
je
in
daa
mov
inc
js
adc
in
lea
movs
mov
jae
lods
mov
mov
pop
pushf
mov
clc
retf
ret
jb
or
mov
or
mov
sub
push
rcl
xor
rol
jae
das
cmc
push
shl
psrad
push
addr16
scas
push
mov
jbe
jmp
das
mov
sub
imul
pop
(bad)
pusha
adc
mov
push
dec
xchg
les
dec
sub
cwde
jp
and
sub
pop
aas
dec
mov
call
prefetchw
outs
pop
mov
cs
sub
dec
adc
in
cdq
sbb
jl
addr16
das
and
push
sub
ja
lock
out
and
mov
sub
sbb
dec
xchg
add
mov
pop
daa
push
jns
(bad)
adc
push
dec
xchg
push
xchg
mov
shl
(bad)
shr
xor
mov
cli
jne
aaa
lds
and
jo
or
sahf
push
xchg
add
dec
fild
arpl
cs
ret
adc
outs
aas
mov
pop
xchg
aas
cmp
pop
aam
or
nop
inc
addr16
adc
inc
jbe
leave
test
(bad)
test
pusha
adc
rcr
gs
loop
pusha
popa
arpl
test
xchg
icebp
add
pop
jae
pop
scas
adc
mov
mov
and
inc
mov
hlt
out
retf
cdq
inc
call
adc
test
inc
push
sub
and
out
adc
cs
xchg
pop
ins
arpl
sahf
xchg
mov
push
inc
sbb
inc
jb
or
std
(bad)
fadd
aam
jno
cmps
mov
add
sar
mov
or
mov
scas
mov
inc
and
dec
data16
mov
sbb
mov
outs
mov
push
scas
shr
addr16
sub
bound
xchg
and
les
leave
cmp
jge
xor
fadd
adc
pop
je
sbb
mov
push
inc
clc
cmp
inc
(bad)
jne
mov
ins
repnz
pushf
pop
sbb
mov
xor
push
xor
(bad)
cld
push
outs
fbld
loope
pop
lahf
xchg
in
test
or
pop
jmp
pop
xor
cwde
push
in
jl
aam
cmp
test
addr16
fs
jae
aam
outs
lock
mov
cmps
fs
mov
leave
add
addr16
pop
cli
adc
push
jl
jmp
sub
mov
adc
or
aad
pop
shl
shl
out
jg
std
and
push
mov
jecxz
shr
shl
pushf
mov
add
dec
in
ins
jns
mov
xchg
mov
push
test
ss
jne
lods
xchg
enter
adc
pop
imul
dec
aas
arpl
push
pop
add
addr16
and
lahf
sub
lea
mov
ret
sbb
mov
int
or
xchg
push
cmp
inc
add
(bad)
lea
fadd
push
gs
lahf
lock
test
mov
std
pop
inc
add
xchg
inc
mov
mov
sbb
icebp
pop
and
cwde
mov
call
push
pop
jb
mov
push
inc
jbe
inc
loope
or
icebp
mov
inc
cmp
loope
loope
ds
pop
adc
xchg
jo
repnz
pop
pop
pushf
push
adc
lea
popa
pop
hlt
out
outs
mov
ror
call
into
cmp
jge
jle
add
jle
xchg
push
push
lock
not
and
mov
xchg
add
cmp
repz
and
inc
mov
mov
add
out
cmps
mov
jbe
int
arpl
test
mov
pop
outs
out
movs
add
fmulp
xchg
inc
js
cmp
fdiv
loop
iret
int
xchg
addr16
fidiv
(bad)
dec
mov
data16
fisttp
sub
mov
in
jecxz
cmp
ret
cmp
dec
mov
cmp
mov
jg
(bad)
xor
push
ror
sbb
lods
cmc
out
dec
or
adc
xor
push
pop
dec
leave
mov
pop
bound
enter
or
gs
leave
pop
and
inc
lods
jmpw
cmp
(bad)
hlt
jb
enter
push
cmp
sar
push
dec
ins
cmp
test
xchg
(bad)
(bad)
pop
lock
jnp
nop
jmp
cmp
scas
push
jbe
int
cli
sar
and
add
in
xor
cli
scas
and
arpl
pop
aad
ja
mov
push
push
sbb
mov
ins
jl
inc
jl
aaa
adc
in
or
neg
inc
inc
lods
push
jns
mov
sti
int
push
pushf
lea
nop
test
das
call
mov
xor
or
loop
es
mov
pop
and
push
retf
pmaddwd
or
and
sti
inc
gs
cs
cmp
mov
jl
test
stos
xchg
and
pop
stc
mov
stc
loope
popf
call
xchg
aad
add
mov
cdq
xchg
cwde
xor
fcomp
sub
idiv
mov
loopne
mov
call
ret
push
push
lods
call
ret
sti
or
and
xchg
xchg
ds
add
lods
stc
(bad)
leave
push
ret
and
lea
addr16
(bad)
int3
sbb
fs
popa
pop
push
dec
movs
push
adc
jle
mov
pop
popa
xchg
sbb
mov
ja
cmp
(bad)
lods
scas
mov
sub
adc
sub
setge
sbb
shl
xor
daa
mov
test
mov
es
cmp
(bad)
lods
jb
and
jmp
pop
push
fwait
scas
inc
sub
cmc
jbe
adc
loope
jo
dec
fdivr
jo
cmp
in
loopne
add
je
test
jmp
dec
stos
scas
aam
sbb
int3
int
retf
pop
(bad)
retf
out
xor
inc
test
sbb
jge
push
(bad)
popa
add
rcr
fbstp
scas
jecxz
push
push
cmps
in
xor
mov
push
adc
loopne
pop
stos
push
pop
outs
pop
nop
cmp
(bad)
int3
sub
std
fadd
test
jmp
pushf
sbb
call
mov
push
cli
jle
pushf
jp
stc
test
fwait
pop
call
mov
repnz
outs
mov
test
push
mov
aad
push
test
mov
cmp
retf
jp
mov
or
movs
cmp
aam
push
icebp
test
in
jmp
jno
push
inc
inc
fidivr
or
pop
dec
int
fisttp
cmps
idiv
and
repz
lahf
cmps
es
cmc
and
in
xchg
shr
xchg
pop
or
xchg
cld
aad
mov
daa
mov
lea
xchg
sbb
imul
jmp
or
add
inc
or
xchg
in
jmp
pop
retf
mov
fcom
in
jge
dec
loope
test
mov
pusha
jmp
test
push
dec
jns
stos
cmp
les
push
push
enter
loopne
fcmovb
sub
ins
sub
fidivr
repz
scas
cmps
cs
xchg
int
adc
or
sub
xor
inc
in
cmp
popf
outs
pop
mov
push
pop
lock
loopne
out
out
inc
js
jl
mov
push
call
lea
dec
dec
xor
xor
ds
cld
popa
(bad)
enter
pusha
inc
push
rcl
fisub
int
sbb
int3
lods
jo
cmc
icebp
pop
retf
mov
fidiv
ds
pop
out
addr16
setge
add
(bad)
imul
pop
cmp
ss
outs
aad
dec
sbb
cmc
jmp
ds
je
mov
jbe
cmp
out
mov
mov
cmc
pop
add
push
data16
das
pusha
jle
pushf
je
into
retf
into
sbb
or
xchg
dec
(bad)
gs
cwde
rol
inc
out
loopne
mov
push
repnz
mov
rep
mov
mov
stos
push
mul
test
call
dec
(bad)
movs
sbb
sbb
fnsave
cmp
mov
(bad)
jl
fild
cs
test
mov
push
jg
dec
or
pop
push
cdq
cmp
pop
and
xchg
sbb
mov
outs
test
je
les
and
fst
jo
jp
and
push
jne
cwde
adc
mov
and
or
jbe
xchg
bound
dec
fwait
jbe
inc
lock
mov
mov
jecxz
add
mov
ja
mov
imul
inc
xchg
retf
ror
clc
sbb
mov
mov
call
lock
(bad)
shr
and
dec
aaa
sbb
sbb
pop
ret
and
stc
adc
cwde
mov
outs
dec
xchg
bswap
adc
push
jmp
mov
add
jnp
mov
(bad)
test
test
jg
shr
or
or
add
jge
movs
push
je
(bad)
pop
or
xchg
ds
and
pop
jne
fist
jne
mov
fnstenv
jne
push
mov
mov
xchg
push
loope
ds
mov
stc
fsubr
cwde
dec
pop
and
inc
into
in
movs
test
xchg
mov
jp
push
or
inc
push
ficomp
sbb
push
sub
dec
sbb
scas
dec
pop
sar
fisub
dec
sub
adc
and
js
das
or
pushf
fs
or
mov
sub
push
pop
shr
and
(bad)
(bad)
sbb
pop
mov
add
mov
add
jo
fisttp
xchg
jo
stos
sub
add
or
push
dec
mov
cwde
pusha
and
lea
pop
test
push
push
jmp
xchg
sbb
in
std
(bad)
mov
jne
jg
fs
mov
test
mov
dec
cmps
js
fist
push
sahf
pop
mov
jmp
sbb
shl
pop
mov
fwait
enter
cmp
dec
stos
in
cdq
sub
aaa
push
pop
push
mov
xor
xchg
movs
test
push
xchg
rcl
sahf
into
xchg
cmc
outs
mov
jo
stos
mov
ret
or
out
add
cmp
stc
push
push
push
lahf
test
test
out
fld
into
mov
inc
mov
sbb
dec
movs
in
rcl
push
push
mov
or
das
mov
pop
pop
mov
retf
and
sbb
(bad)
scas
jns
cld
cmp
pop
loopne
pop
mov
dec
repnz
loop
add
loope
sub
repnz
push
xor
fisttp
add
xchg
push
inc
ja
and
sti
cmp
dec
add
push
test
adc
aam
scas
and
std
cmp
or
rcr
mov
xor
xchg
cmp
(bad)
and
mov
push
rcr
xor
cmp
retf
in
dec
mov
es
nop
sbb
push
in
les
mov
sub
push
mov
adc
hlt
ja
je
push
or
sbb
adc
sub
cdq
dec
mov
out
fild
or
out
cmps
cmc
or
jmp
addr16
aaa
aas
adc
add
and
mov
jle
daa
ja
enter
adc
jnp
pop
mov
mov
pusha
outs
jnp
jns
repnz
push
sbb
stos
pop
mov
xor
in
loope
(bad)
inc
jmp
in
fld
jne
xchg
js
ds
shl
sbb
or
cmps
cmp
sub
shr
iret
fisub
cmps
stos
mov
add
iret
fild
jmp
mov
inc
cmps
mov
mov
or
xor
test
dec
mov
mov
pop
(bad)
jne
adc
jmp
xor
imul
push
mov
movs
sub
mov
pop
and
mov
lea
cmp
int
repnz
jno
int3
adc
dec
(bad)
rol
fdiv
inc
push
std
(bad)
enter
retf
mov
ror
add
xchg
in
sahf
cmp
push
nop
jge
dec
add
loop
or
jle
xchg
test
in
push
xor
ins
mov
ja
fistp
lock
mov
mov
jae
push
adc
mov
and
mov
shl
inc
jmp
and
nop
cwde
jmp
ret
popa
xchg
cmp
mov
adc
xor
inc
push
jecxz
out
mov
call
ficomp
cmc
push
cmps
ret
xchg
jno
xor
fild
adc
nop
xchg
adc
mov
fbld
cmp
push
lods
lahf
dec
pushf
out
repnz
push
mov
test
mov
addr16
pushf
sub
pop
test
call
leave
add
mov
pop
repz
inc
(bad)
cmp
(bad)
enter
and
jae
add
mov
add
sti
push
outs
and
pop
cld
or
and
sbb
pop
test
add
cmps
xor
ficom
rol
push
cmp
pop
punpcklbw
add
xchg
dec
test
outs
lods
fimul
push
pop
call
icebp
xchg
push
cmp
add
mov
(bad)
ret
cmp
jg
shr
xchg
pop
mov
push
in
in
dec
sti
lock
xchg
les
add
xor
fnsave
pop
ret
cmp
jge
xchg
cmps
and
clc
pop
imul
rcr
std
inc
rcl
push
movs
inc
or
jae
pop
fmul
add
stc
int3
out
inc
gs
dec
loopne
jl
cs
(bad)
xor
dec
mov
pop
into
in
js
sbb
add
xlat
(bad)
jmp
jmp
sbb
int3
xlat
mov
in
nop
push
mov
or
push
lahf
test
in
clc
fwait
mov
adc
sbb
inc
mov
add
ins
shl
mov
es
cmps
jno
jecxz
push
push
xchg
cmp
int
jp
pop
mov
daa
sub
sub
imul
stc
dec
jle
loopne
adc
sti
or
sub
sbb
mov
sbb
pop
sub
test
xchg
jge
or
push
pop
jecxz
mov
lods
adc
out
iret
and
mov
mov
mov
xchg
inc
sbb
stc
retf
(bad)
sbb
dec
fsub
inc
hlt
fs
ret
data16
mov
cmps
enter
ins
mov
and
or
leave
aam
pop
dec
adc
ins
shl
test
mov
div
mov
pop
test
add
loop
jo
mov
(bad)
jnp
scas
mov
pusha
cmp
outs
stc
je
scas
pop
xchg
jnp
xchg
(bad)
idiv
and
es
mov
pop
jecxz
dec
inc
int3
ror
das
mov
push
mov
fcom
jle
iret
xchg
cmp
ss
add
jns
inc
rcr
dec
xor
aam
ins
int3
pusha
or
add
fidivr
push
mov
repz
jbe
(bad)
sub
cmps
outs
sbb
ins
outs
imul
je
cmps
dec
inc
fbld
repnz
cld
mov
fild
jb
push
loopne
dec
sbb
mov
xchg
and
stos
add
sub
inc
sbb
xor
das
xor
adc
xor
xor
in
retf
aaa
sub
dec
les
stos
xlat
fiadd
imul
xchg
push
arpl
mov
lods
fs
scas
cmp
xlat
push
iret
out
mov
std
test
push
mov
ins
jnp
(bad)
je
push
lods
ds
mov
dec
aas
add
test
out
add
out
stos
jge
fstp
gs
loop
mov
push
xchg
in
mov
out
ja
out
inc
pop
repnz
inc
retf
inc
push
movs
aam
dec
sar
out
mov
push
mov
xor
adc
mov
mul
jb
pop
out
mov
jmp
push
dec
mov
ss
fild
jp
data16
(bad)
dec
or
sub
or
test
movs
cld
jmp
mov
xor
out
dec
lods
pop
mov
ficomp
aad
mov
mov
in
jmp
mov
push
in
mov
lea
clc
xor
pop
mov
lahf
outs
add
jmp
stos
mov
repz
or
mov
std
mov
mov
pop
xchg
pop
and
jmp
lods
xchg
jno
outs
xor
std
push
loop
mov
adc
mov
mov
or
lds
iret
data16
mov
dec
inc
bound
(bad)
movs
jge
addr16
mov
sub
test
imul
sahf
push
xor
repnz
int3
or
icebp
sub
ja
and
jg
jnp
inc
les
int
cmp
stos
ror
dec
stc
shl
ss
cmp
add
dec
imul
cmp
cmovle
imul
xor
iret
into
and
mov
je
push
adc
jge
fistp
and
cmc
loop
iret
fwait
in
dec
ja
movs
or
popa
jne
fprem
add
add
inc
jge
les
sbb
mov
fistp
push
stc
jmp
mov
jns
mov
loope
push
mov
cmp
scas
adc
mov
push
call
dec
ins
fbld
daa
cmp
es
out
mov
dec
mov
and
inc
or
inc
lock
shr
pop
dec
popf
or
xchg
sub
outs
fld
in
dec
xchg
add
(bad)
fbld
add
mov
adc
xor
js
or
jmp
(bad)
jne
sti
ds
push
push
sub
pop
fidivr
call
fisubr
jmp
inc
or
push
sub
or
sub
ins
cmps
aad
dec
xchg
shr
dec
jbe
ficom
pop
cdq
and
fiadd
adc
aam
retf
jl
dec
aad
ret
sub
lock
imul
(bad)
call
inc
imul
jae
or
inc
mov
arpl
gs
xor
push
or
ret
sbb
fsub
jbe
sbb
dec
shl
add
jb
lds
call
xor
fwait
(bad)
mov
popa
loop
imul
loopne
inc
out
sub
inc
jle
add
mov
xor
add
test
sti
sub
ins
in
xor
and
xor
call
clc
or
or
int3
sub
(bad)
sti
sub
addr16
ins
sbb
pop
fs
pop
std
add
outs
icebp
enter
cmp
push
inc
mov
push
xor
push
mov
cmps
mov
inc
out
xchg
jg
sbb
shr
fnsave
push
int3
retf
rcr
cmps
add
xchg
(bad)
scas
gs
ds
pop
imul
push
popa
pusha
sbb
dec
and
out
pop
push
outs
mov
je
imul
aam
xor
cwde
daa
into
dec
imul
jo
mov
mov
cli
imul
mov
mov
mov
stos
fldcw
retf
cmc
xor
add
mov
(bad)
fdivr
fs
std
ss
xchg
movs
or
stc
das
imul
sahf
xchg
adc
sar
rol
test
loope
ja
(bad)
cmp
dec
mov
jne
sub
push
mov
(bad)
xor
jg
xchg
cmp
iret
ret
cmp
lds
xchg
loopne
dec
jg
jo
cmps
ficom
inc
movs
lock
(bad)
cld
outs
mov
mov
push
div
in
mov
(bad)
rdpmc
inc
inc
pop
(bad)
inc
sbb
sbb
dec
jo
pop
sbb
push
jbe
sbb
and
jl
dec
mov
pop
out
clc
shl
mov
mov
fdiv
mov
jmp
xor
movs
fst
add
(bad)
or
lods
clc
outs
add
adc
cdq
mov
repnz
dec
int3
movnti
xor
dec
xlat
ficom
mov
xor
jno
(bad)
mov
mov
in
ja
mov
xor
pop
xlat
xchg
out
jmp
shr
dec
and
jbe
int3
je
fiadd
sbb
(bad)
in
mov
leave
push
in
in
cmp
mov
sbb
out
mov
and
dec
sub
xor
stos
jnp
or
adc
cli
retf
in
mov
cmp
sbb
rcr
push
lods
leave
push
call
mov
outs
mov
lods
adc
push
loopne
bound
mov
push
stos
push
in
out
jle
cmp
nop
outs
pop
out
sar
add
aad
adc
bound
cdq
js
push
loopne
sti
inc
lea
fsub
sahf
sbb
and
jg
and
jl
mov
daa
movs
ja
add
mov
shl
retf
pop
fldenv
sub
stos
fist
sub
inc
stc
jnp
or
hlt
lods
mov
jnp
push
or
dec
nop
mov
(bad)
push
dec
ins
out
push
mov
xor
push
push
xor
js
cmps
fwait
dec
dec
xchg
arpl
dec
frstor
rcl
cs
enter
imul
stos
add
mov
aaa
inc
pop
sbb
je
adc
call
sub
cmp
mov
cmp
add
jmp
adc
lock
outs
test
jl
movs
lods
and
cmp
ret
mov
and
cmp
pop
fisttp
jno
fwait
jns
mov
or
test
inc
mov
pusha
mov
out
push
lock
aam
add
out
in
xchg
dec
pop
(bad)
fmul
iret
xchg
add
mov
pop
sub
xchg
enter
xlat
mov
dec
repz
sti
jnp
out
inc
jae
and
sahf
inc
fld
xchg
sbb
mov
and
es
loopne
(bad)
repz
fsubr
inc
outs
sahf
and
mov
je
loop
mov
mov
(bad)
push
popa
or
dec
cmp
jle
jnp
(bad)
fild
mov
fdivr
add
aas
add
ss
mov
jge
test
xchg
dec
pop
xor
xor
mov
mov
repz
and
mov
jle
cmp
lods
jp
imul
push
es
(bad)
imul
inc
xor
push
int
in
xchg
pop
outs
mov
push
jne
xchg
mov
mov
jp
jmp
aam
dec
push
cdq
jb
push
dec
pushf
das
das
fwait
pop
xchg
push
xchg
push
test
outs
clc
xchg
mov
xor
add
lahf
ret
push
cmp
adc
lahf
aas
mov
sub
loope
pop
xlat
pop
cmc
(bad)
jmp
mov
lea
inc
retf
mov
(bad)
add
pop
loop
lahf
shl
pop
jp
es
push
jg
inc
inc
jne
and
lea
stos
gs
dec
clc
call
lds
mov
sbb
push
(bad)
mov
jecxz
pop
add
jns
add
inc
les
push
sub
(bad)
std
cli
jl
sbb
out
push
mov
xchg
aam
outs
cmp
out
cli
jo
fcmovnu
adc
adc
scas
mov
(bad)
or
sbb
jnp
mov
xchg
mov
mov
sub
in
ror
pop
in
loop
mov
adc
stos
std
xor
add
jmp
sub
test
sub
adc
out
pop
cmp
out
adc
sub
iret
xchg
(bad)
into
in
xor
add
xchg
fld
jne
dec
shl
mov
add
fcomp
pop
fcomp
rcl
mov
scas
sub
clc
iret
push
xlat
xor
inc
ins
jecxz
or
int3
out
outs
sar
(bad)
(bad)
loope
cdq
sbb
mov
pop
loope
mov
je
and
push
mov
sub
cmp
into
scas
cli
aas
clc
mov
aaa
out
inc
mov
push
aam
or
fwait
ret
mov
(bad)
jno
shl
jmp
fiadd
or
(bad)
cmp
sahf
xor
sub
in
xchg
xor
int
popf
ins
stc
mov
sar
js
mov
scas
inc
pop
out
out
dec
div
out
jmp
cmps
and
outs
js
ss
and
cmp
js
ss
cmp
xchg
int
pop
das
adc
out
jmp
(bad)
out
out
lods
stos
cmp
dec
mov
push
dec
xlat
mov
cmp
int3
call
mov
rcr
adc
inc
adc
lea
xchg
ins
xor
sar
mov
xor
cmp
(bad)
mov
push
pop
push
mov
rcl
adc
cmps
adc
imul
cdq
and
test
imul
cmps
mov
jne
iret
int3
push
(bad)
stos
test
cmps
lock
jmp
imul
xor
xor
sub
int
xchg
push
xor
xor
les
popf
mov
retf
jo
push
sar
clc
or
ja
and
pop
popa
jle
fisubr
into
and
jbe
aam
imul
mov
sbb
fiadd
pop
cdq
cmp
mov
sbb
jns
or
inc
add
outs
dec
lods
sub
or
mul
dec
and
(bad)
jnp
pop
popa
(bad)
test
out
cwde
jmp
push
mov
add
mov
shr
lock
xchg
xchg
xchg
and
xor
mov
mov
cmp
mov
adc
push
outs
push
jnp
xchg
jge
out
outs
scas
push
add
fs
add
loopne
xor
rcr
adc
fiadd
xor
(bad)
mov
push
icebp
es
int
lods
(bad)
xchg
sbb
sti
sbb
xor
mov
jmp
lea
cld
fisub
mov
sbb
inc
pop
adc
push
jmp
sar
push
and
jno
imul
inc
mov
lock
dec
cmps
pop
ds
in
sahf
pop
and
ins
cmps
cs
loopne
fld
xchg
(bad)
push
cmps
aaa
mov
inc
je
jmp
inc
jge
mov
stc
and
mov
push
mov
sahf
sub
pop
cmp
mov
aaa
adc
jg
int3
or
xchg
mov
scas
push
stc
and
cwde
sub
adc
xlat
out
imul
pop
jno
and
hlt
push
mov
sub
stos
call
retf
mov
fs
add
mov
enter
mov
sbb
mov
fnstenv
mov
packssdw
jbe
pop
out
sbb
mov
test
sub
jl
leave
out
mov
xchg
jo
and
or
loop
pop
mov
mov
mov
js
in
retf
mov
ins
sti
rcl
(bad)
adc
(bad)
mov
fstp
mov
push
shl
push
mov
retf
xor
xlat
shl
out
or
nop
das
xchg
xor
mov
call
cmp
jno
in
shl
das
push
push
enter
cli
ret
movs
sti
sbb
jns
and
sub
mov
mov
mov
mov
int3
pop
add
ret
inc
idiv
push
sahf
call
add
push
adc
xor
js
inc
sub
test
and
inc
aad
add
lock
pop
std
outs
mov
imul
mov
pop
pop
sub
jne
dec
jmp
stos
mov
mov
sbb
inc
out
rsqrtps
jl
out
jmp
push
mov
sbb
out
clc
ja
nop
loop
sbb
pop
cmp
aaa
sar
lods
sbb
mov
mov
pushf
jp
xor
mov
mov
aad
mov
mov
mov
cmp
mov
jge
xor
dec
mov
mov
aam
fist
push
es
push
dec
aas
push
lods
xchg
mov
aam
mov
sub
pop
lds
loope
push
xor
sbb
ja
xor
cdq
jne
push
clc
jp
push
mov
ret
retf
sahf
shr
xchg
jmp
pop
pop
hlt
fbstp
sbb
cmps
jecxz
rcr
push
sub
shr
js
push
dec
les
(bad)
and
adc
in
or
jb
push
ins
push
add
bound
scas
rol
xchg
lahf
imul
cmc
jno
mov
mov
push
cmp
pop
in
mov
mov
cmc
scas
dec
ret
adc
fidivr
shl
or
out
push
clc
fcom
mov
loopne
int3
jp
imul
pop
mov
inc
sar
jmp
xor
jle
test
xchg
mov
cli
cmp
imul
dec
adc
leave
fsub
sub
(bad)
mov
fbstp
div
push
jne
in
ds
inc
dec
push
ins
xor
add
inc
dec
cmp
(bad)
jb
sti
fsub
ins
ud0
loopne
xchg
daa
das
lock
ror
mov
mov
daa
and
fdiv
out
cmp
push
lock
fs
fisubr
jl
dec
jne
mov
(bad)
sub
adc
movs
mov
jmp
ins
mov
sbb
into
test
inc
add
loop
(bad)
(bad)
push
mov
inc
jns
popf
jl
fisubr
and
imul
sar
fwait
ret
jecxz
scas
add
ficom
std
test
inc
fld
add
xchg
int
rcr
movs
dec
xchg
dec
jne
sub
addr16
aam
mov
mov
shr
pop
sub
adc
les
mov
dec
ins
and
and
mov
std
dec
call
fild
adc
adc
inc
jbe
loopne
pop
mov
adc
leave
and
or
(bad)
movs
cmps
xor
bound
and
mov
cmp
das
aaa
in
jo
and
ins
adc
rcl
cli
aad
jae
mov
mov
inc
dec
lahf
adc
or
add
int
sbb
in
cmp
lods
cmp
mov
dec
xchg
daa
sar
cmp
or
ss
pusha
push
fadd
stos
jo
mov
jl
or
jecxz
movs
pop
sbb
das
movs
pop
rcl
int3
and
mov
inc
test
sub
jmp
out
popa
pop
cmp
call
xchg
sub
test
pop
inc
dec
sbb
jp
pushw
push
dec
pop
dec
mov
daa
cwde
xchg
adc
repz
jmp
stos
add
retf
je
dec
cwde
ds
inc
add
jne
xchg
xchg
daa
in
inc
ret
and
mov
push
repz
push
js
xor
scas
sub
rcl
test
(bad)
movs
out
inc
xor
fist
cdq
outs
lea
ror
imul
cmp
leave
shl
nop
cld
push
xchg
dec
jbe
pop
ret
inc
ret
fimul
outs
aad
xlat
dec
arpl
cmp
and
ins
lods
ficom
aas
xor
inc
sub
pop
iret
rcr
clc
ror
lods
dec
es
dec
jp
pusha
sti
je
lds
jp
or
cmp
mov
sub
mov
hlt
jnp
cmp
cmp
(bad)
xchg
push
(bad)
iret
not
sbb
lahf
gs
mov
jg
sub
xchg
jns
arpl
xor
dec
pop
pop
ror
push
sub
xrelease
mov
mov
out
push
pop
push
mov
loope
test
sbb
xchg
fsubrp
xchg
sbb
call
dec
addr16
jmp
push
sbb
(bad)
in
add
aad
push
in
rcr
movs
cmp
sbb
or
sub
sub
mov
mov
test
ins
or
jmp
jmp
pop
mov
jmp
sbb
clc
das
dec
jae
pop
movs
in
std
dec
(bad)
lahf
jb
stos
or
jne
mov
(bad)
call
stc
or
std
into
ret
(bad)
mov
push
cld
test
sub
inc
addr16
sbb
pop
es
add
repz
xchg
(bad)
jmp
clc
jmp
lds
ss
outs
xlat
cmp
sti
sbb
stos
xchg
dec
push
jno
sub
push
cmp
push
jb
sbb
sti
xor
outs
mov
loope
cdq
mov
call
lea
or
fidiv
dec
jmp
pop
inc
mov
loop
cmp
lahf
ins
cmp
cs
(bad)
(bad)
or
sahf
icebp
and
pop
js
and
cmp
dec
es
xor
inc
rcr
xchg
add
dec
push
push
xchg
gs
movs
ss
or
test
mov
cwde
std
pop
je
in
mov
test
jmp
call
fwait
cmp
xor
mov
xchg
in
dec
or
add
fidiv
ja
or
push
add
jnp
push
sub
or
pop
jmp
mov
sbb
jecxz
rep
mov
in
pop
fldenv
mov
mov
jne
sub
xchg
ss
popa
lahf
adc
repz
rol
(bad)
imul
or
cmp
out
into
outs
dec
ds
cmp
cmc
and
aad
jbe
jne
gs
sti
and
scas
mov
pop
fdivr
das
adc
sbb
outs
mov
jbe
xchg
adc
push
xor
das
test
scas
(bad)
jp
out
jne
fstp
push
pop
je
icebp
aas
jbe
dec
xor
dec
xor
dec
stc
mov
fnstsw
outs
iret
cmp
sub
xchg
xor
mov
adc
(bad)
cld
push
in
sub
retf
idiv
lahf
es
push
sub
xchg
daa
lods
push
sub
pop
out
cmc
jmp
and
in
and
hlt
xor
xchg
push
inc
jns
icebp
mov
nop
cmp
sbb
sbb
jnp
cdq
(bad)
and
jnp
cdq
cmps
pop
ds
clc
pop
(bad)
stc
inc
int
xor
mov
retf
and
cmp
in
int
out
mov
add
cmp
imul
xchg
sti
loop
lods
iret
inc
push
or
add
or
aad
in
arpl
mov
imul
cmp
xchg
mov
das
push
mov
std
jae
pop
xchg
(bad)
sbb
and
(bad)
mov
(bad)
out
call
push
sub
mov
ficomp
popa
fistp
jns
stc
in
(bad)
xchg
pop
mov
xor
and
xor
adc
aam
stos
out
stc
cs
into
mov
or
pop
mov
sbb
push
pop
test
aad
xchg
dec
push
(bad)
stos
sub
icebp
das
dec
or
ins
ins
(bad)
and
ror
std
shl
sub
loope
jmp
push
std
mov
inc
lods
xchg
push
jno
jg
mov
mov
(bad)
pop
icebp
or
enter
adc
mov
loopne
mov
(bad)
in
test
fwait
dec
scas
or
bound
int
adc
cld
retf
imul
pop
inc
xchg
cmps
sub
mov
sub
jno
dec
dec
cld
test
mov
iret
inc
mov
movs
lea
mov
sbb
fsubr
(bad)
retf
je
call
(bad)
sahf
pushf
xchg
or
imul
cmp
push
aas
cli
aam
inc
out
sub
sbb
mov
xor
mov
adc
cdq
dec
in
and
pushf
imul
mov
nop
add
jle
test
jp
pop
adc
inc
mov
mov
sbb
loope
sbb
shl
ja
adc
dec
xchg
cmp
pop
retf
test
pushf
mov
pop
cs
out
scas
jbe
mov
fs
popa
push
xchg
int3
out
mov
clc
mov
std
inc
jae
call
scas
jmp
int
cmp
sbb
popf
mov
jle
mov
fist
pop
xor
and
pushf
dec
ins
aam
and
xor
int
add
std
cli
push
jne
and
fisub
push
shr
mov
add
(bad)
out
pop
retf
push
mov
loope
ret
(bad)
cmp
aas
xchg
jmp
stc
sbb
mov
test
sub
fs
ficomp
pushf
lea
inc
ret
movs
sub
cmp
xchg
sbb
or
test
add
xor
sub
cld
rcl
ficom
dec
out
sub
mov
sbb
mov
mov
loop
stc
mov
int3
adc
cwde
xor
ret
fmul
mov
mov
out
lods
loop
xchg
jne
and
out
push
jl
mov
jmp
cld
je
xlat
pop
push
loope
push
movs
adc
mov
mov
sti
or
xchg
sub
jne
xlat
repz
cmp
ds
mov
hlt
loopne
add
out
and
push
in
shl
fisubr
jl
xchg
adc
dec
inc
xor
aad
ret
fadd
sbb
daa
pop
shl
rcr
inc
cmps
inc
daa
jbe
ds
xchg
inc
cmp
pop
mov
mov
inc
mov
arpl
mov
pmaddwd
shl
test
and
imul
jae
adc
jb
ror
jmp
je
pop
jbe
push
cli
and
mov
fdivrp
repz
xchg
addr16
das
clc
adc
jg
aad
or
cmps
ins
mov
sbb
mov
in
jmp
imul
push
(bad)
mov
mov
xchg
das
xchg
in
addr16
test
adc
jbe
loop
dec
int
inc
and
mov
shl
mov
mov
dec
xor
push
lods
repz
push
dec
test
mov
mov
pop
xor
in
hlt
jl
inc
mov
int3
and
xor
xchg
fsubrp
add
sbb
sbb
jns
or
sbb
adc
shl
icebp
inc
xchg
add
add
sub
lods
jae
inc
or
in
loop
lods
dec
xchg
and
std
js
cwde
sub
cwde
sbb
sbb
jns
xchg
call
dec
(bad)
mov
repnz
rol
jnp
add
xchg
sub
dec
sbb
sar
cmps
pushf
adc
fistp
data16
dec
xor
(bad)
jmp
jno
sub
jge
mov
aam
jne
push
cld
and
ds
scas
ja
test
mov
push
jmp
mov
mov
(bad)
outs
xchg
xchg
xchg
test
xchg
push
xor
nop
cld
add
addr16
pusha
fistp
xchg
pop
dec
fwait
push
lock
repz
je
jae
sbb
and
fstp
in
popa
(bad)
nop
loope
dec
pop
mov
ret
jo
jb
outs
adc
test
sbb
cmp
mov
outs
mov
nop
popa
les
jle
or
mov
pop
icebp
xor
fnstcw
jnp
push
sbb
mov
fadd
xchg
push
mov
stos
ret
push
dec
mov
fcomp
xor
sahf
sub
cmp
cmp
cmps
cmp
xlat
jne
cli
test
sti
xchg
mov
mov
dec
cwde
jmp
daa
push
sub
xchg
jbe
xchg
out
pushf
in
pop
sub
mov
retf
push
mov
jecxz
inc
xchg
or
daa
fidivr
ins
shl
sub
cmp
shl
nop
pop
inc
sbb
movs
test
ret
dec
jne
push
test
and
or
cli
aam
adc
mov
imul
mov
imul
arpl
lods
xchg
int
and
and
jmp
xlat
cdq
xchg
fiadd
lock
pushf
mov
lods
sbb
ss
(bad)
sahf
frstor
nop
test
pop
movs
pop
add
push
add
out
inc
cmc
stos
into
lea
add
iret
les
call
push
push
fnstenv
inc
mov
mov
inc
mov
mov
sbb
ss
(bad)
retf
(bad)
mov
add
adc
or
jmp
push
ins
(bad)
cs
sbb
cmp
mov
sahf
sbb
clc
mov
lahf
sbb
jmp
adc
sub
mov
dec
mov
fwait
std
outs
sbb
inc
mov
pop
jno
inc
mov
dec
in
add
sub
xchg
xor
loope
clc
(bad)
fs
test
pop
xchg
xchg
jg
cmc
in
test
cmp
lods
movs
sbb
loopne
mov
enter
inc
and
test
(bad)
adc
fidivr
loope
fwait
mov
mov
mov
sub
dec
popa
xlat
(bad)
in
mov
or
pop
(bad)
jl
imul
inc
sbb
stos
ret
mov
bound
aas
jl
repz
adc
repz
push
mov
push
sub
cmps
xlat
or
test
aam
in
push
jns
ja
xlat
and
pop
xchg
push
and
int3
lock
imul
sub
iret
mov
and
mov
(bad)
repnz
jns
xchg
mov
mov
cs
and
sbb
out
mov
shl
adc
fld
push
push
mov
adc
and
xor
pop
dec
inc
popf
iret
aam
cld
icebp
or
je
sbb
loopne
daa
mov
mov
gs
scas
push
xchg
mov
hlt
dec
adc
ror
jp
xor
(bad)
aaa
fcom
sub
lock
outs
aaa
ins
dec
das
push
jns
leave
jae
ret
sar
mov
push
push
lods
stc
dec
cmp
or
(bad)
push
xchg
dec
lahf
xor
aam
popf
inc
sbb
fistp
inc
adc
pop
repnz
pusha
(bad)
nop
mov
or
in
sub
pop
cdq
out
cwde
enter
mov
inc
enter
xchg
arpl
leave
ss
jmp
and
loop
pop
sbb
lods
push
out
jl
cld
xlat
adc
fldenv
cmp
mov
into
xrelease
ret
jbe
cmp
sbb
jmp
test
or
out
sbb
xchg
div
push
xor
inc
loop
mov
inc
cs
xchg
inc
sar
inc
mov
popa
cmp
sti
iret
inc
add
mov
into
push
jnp
sbb
xchg
call
in
(bad)
cmp
jmp
push
hlt
call
xor
add
fldenv
pop
retf
ins
fs
or
loope
jge
imul
dec
mov
push
(bad)
inc
movs
jl
mov
(bad)
hlt
mov
xor
or
scas
dec
loope
cmp
jl
adc
mov
test
cmp
std
cmp
xchg
sbb
outs
mov
cmp
cmp
ds
mov
sbb
imul
pop
out
xor
sbb
lods
sbb
stos
or
push
or
or
fnsave
movs
lods
push
test
adc
and
and
retf
push
jmp
xor
leave
pop
add
aaa
dec
aas
xchg
popf
push
or
leave
jl
call
add
mov
retf
cmp
xchg
mov
sbb
jbe
js
jle
dec
cmp
push
loopne
stos
add
jb
call
pop
ret
mov
pop
enter
push
and
pop
xchg
mov
(bad)
or
ficomp
pop
push
push
mov
inc
mov
mov
ss
rol
stos
xchg
pop
dec
jmp
cmps
icebp
pop
xor
stc
pop
pop
adc
xor
sub
das
xchg
mov
ret
icebp
std
mov
sbb
pop
dec
movs
fs
cmp
das
push
sub
test
and
loope
push
add
push
sub
dec
pop
scas
dec
mov
lods
pop
pop
mov
adc
mov
mov
rcr
stos
xor
outs
xor
cwde
hlt
cmps
test
jle
push
xchg
push
push
pusha
cmp
xchg
mov
aas
and
stos
and
inc
jno
push
cmp
push
jno
movs
cmp
(bad)
jns
push
sub
sti
pop
xchg
add
pop
scas
imul
add
jno
ins
pop
mov
out
(bad)
loopne
adc
inc
ss
add
push
fcom
dec
pop
or
aad
icebp
in
das
mov
aam
sub
or
cdq
mov
and
pop
lock
sub
sub
cmp
ret
mov
dec
pop
arpl
sahf
scas
imul
mov
pusha
mov
sub
or
popf
cmp
add
scas
stc
jg
ins
stc
add
push
fist
push
cmp
inc
jge
jno
sub
jmp
out
bound
loope
pop
(bad)
mov
pop
out
cwde
js
xchg
test
xchg
stos
cmc
aaa
(bad)
mov
mov
imul
daa
test
or
cmps
push
nop
push
or
xor
mov
sub
pop
push
jb
mov
lea
out
adc
cli
(bad)
fistp
cwde
pop
push
xor
movs
icebp
push
and
push
adc
pop
jle
push
(bad)
mov
and
pop
aad
retf
jae
pop
cvtdq2ps
out
add
enter
push
scas
adc
retf
out
pusha
jmp
stc
repnz
ja
xchg
adc
mov
iret
ds
cmp
jno
add
leave
cmp
cmps
push
(bad)
in
xor
jo
test
ss
imul
dec
outs
and
pushf
es
(bad)
scas
arpl
cmp
movs
psubw
int3
mov
dec
pop
xchg
outs
lods
mov
pusha
shl
cmps
fsub
xlat
in
jge
test
jmp
push
push
(bad)
jne
pusha
sub
mov
inc
or
retf
mov
push
pop
mov
lea
jmp
mov
sub
fisub
ret
not
add
push
fsub
cmp
movs
or
or
inc
add
ret
pop
and
cmp
arpl
inc
mov
mov
data16
jns
xchg
pop
test
and
out
cwde
sub
repnz
inc
(bad)
movs
aaa
xor
inc
and
aaa
lahf
jl
add
(bad)
pop
aam
jne
mov
pop
sar
push
aad
retf
cli
(bad)
xor
enter
push
push
xchg
cmc
mov
xchg
stc
(bad)
mov
push
sub
inc
bound
cmp
fadd
(bad)
and
mov
jmp
jg
ret
mov
int
adc
(bad)
mov
sbb
aas
inc
jl
out
sar
sub
xchg
scas
jg
add
or
mov
jb
stos
xor
dec
sti
fidivr
cmp
push
xchg
and
stos
sub
push
mov
cwde
xchg
inc
and
inc
out
(bad)
leave
lods
jmp
rcl
or
cmp
pop
mov
mov
pop
inc
div
and
push
(bad)
mov
out
push
into
dec
jp
fstp
ja
dec
out
push
push
stos
jl
data16
mov
mov
pushf
pusha
aaa
push
and
cmp
and
push
mov
aas
jno
or
or
and
in
cmp
shl
adc
cs
xchg
xchg
scas
sub
mov
xchg
mov
fst
cmp
jnp
adc
movs
add
movs
cmp
or
adc
cmp
mov
mov
jnp
pop
test
popa
jg
inc
in
xchg
test
sbb
daa
mov
adc
jne
jle
sbb
xchg
cmps
mov
sahf
pop
and
aad
movs
aam
out
jns
add
lods
add
pop
or
les
mov
hlt
mov
les
mov
out
rcl
fwait
sbb
xchg
jno
cmc
(bad)
jae
jnp
sar
pop
sbb
mov
and
gs
jno
jp
cmp
arpl
movsx
fidiv
mov
stos
xchg
add
ins
push
imul
nop
inc
push
(bad)
lea
stos
rcr
push
fidiv
adc
mov
out
cmp
js
and
jnp
mov
test
sbb
xchg
scas
jmp
pop
sti
cmp
add
test
mov
jae
lods
push
and
xchg
add
ror
add
psllw
jmp
xchg
sti
cld
mov
pop
inc
rcl
cmp
repz
aas
out
sub
call
shr
(bad)
stc
movs
cli
inc
mov
sub
or
fnsave
xor
jge
dec
xchg
mov
xor
cmp
mov
mov
add
push
outs
jge
retf
daa
cmp
mov
das
(bad)
int
stos
sti
imul
(bad)
retf
sub
mov
push
aad
cmp
cmps
and
mov
push
jg
mov
leave
jle
push
neg
mov
sub
jp
xor
fild
push
cdq
jp
mov
jecxz
inc
repz
xor
xor
outs
push
adc
retf
xor
xchg
sub
sti
push
outs
xchg
add
nop
jae
push
call
xor
cmp
or
sbb
push
jnp
scas
mov
nop
pushf
std
(bad)
add
dec
adc
or
js
dec
ret
cmp
loope
push
sbb
mov
retf
fstp
sbb
xchg
push
dec
mov
ins
call
mov
int3
fisubr
and
aas
jmp
add
movs
mov
jb
ins
mov
enter
sub
push
icebp
fild
repnz
sti
sub
adc
loopne
xchg
fcom
add
aam
test
pop
xor
mov
imul
nop
(bad)
jbe
xchg
stos
adc
rcr
dec
cdq
ret
push
mov
enter
mov
inc
xor
hlt
pusha
sbb
pop
cs
jecxz
mov
lea
adc
stos
stos
sbb
jge
cmp
std
push
xchg
enter
jno
ret
or
gs
imul
pop
imul
jmp
push
idiv
push
inc
dec
mov
enter
mov
jae
push
repnz
(bad)
outs
daa
fcomp
push
sub
and
cmp
and
mov
inc
inc
cwde
and
sub
stos
sub
xchg
inc
(bad)
in
adc
inc
retf
jmp
and
imul
xor
add
mov
gs
call
mov
jle
ss
mov
jge
mov
mov
loop
inc
jae
fidiv
jmp
inc
enter
xchg
sub
xor
inc
aam
ror
or
sub
outs
jne
fistp
add
adc
jmp
jnp
(bad)
cdq
dec
push
stc
ret
pop
jns
mov
imul
adc
movs
push
stos
fstp
mov
shl
and
xor
mov
fsub
dec
sbb
sti
repz
js
ret
shl
cmp
add
xchg
sub
sub
jecxz
push
popw
leave
out
pop
inc
inc
jb
(bad)
ret
or
jecxz
xor
push
test
adc
lahf
mov
clc
lock
adc
out
ins
arpl
mov
inc
or
loope
mov
dec
and
dec
dec
test
sbb
jl
or
mov
ret
pushf
xchg
adc
stc
cld
push
cmovp
mov
xchg
ds
adc
sbb
mov
sub
adc
mov
xor
dec
and
or
mov
(bad)
imul
cmp
(bad)
cli
or
xchg
sub
cmp
sbb
in
pop
pop
pop
scas
stc
or
push
jecxz
mov
cmps
mov
js
push
xor
popf
push
leave
push
repz
aaa
out
sar
jle
dec
sbb
pop
mov
xchg
mov
movs
ja
push
out
push
outs
hlt
jbe
mov
cs
push
fist
push
leave
mov
add
xor
fdivr
jle
ret
mov
xor
shl
cwde
and
jmp
mov
sub
or
sbb
mov
out
fidivr
int
sahf
pop
arpl
movs
inc
jbe
int
dec
loopne
and
pop
add
cmp
imul
sbb
stos
cmp
(bad)
or
(bad)
adc
fld
and
dec
adc
adc
push
loopne
jbe
sub
push
in
or
clc
jmp
inc
xor
add
repz
lea
mov
jo
ins
out
lahf
outs
sbb
add
scas
mov
sbb
mov
repz
sub
iret
mov
pop
in
(bad)
xchg
call
aaa
jecxz
add
sti
rol
jmp
inc
mov
rol
sbb
jge
xchg
jmp
lahf
xor
xchg
xor
jo
lahf
cmp
stc
iret
outs
and
or
sbb
adc
add
jnp
dec
mov
fidivr
xor
out
fadd
or
push
mov
repnz
imul
cmp
jae
jmp
pop
sbb
or
fst
cmps
jno
pop
je
or
cmp
jbe
popf
data16
lds
jecxz
cld
pop
stos
mov
pushf
xchg
pop
push
pop
cwde
xor
push
pop
inc
mov
repz
mov
lock
stos
adc
ficom
mov
mov
adc
sbb
scas
push
int
cmps
call
jp
dec
test
or
std
and
sar
xor
lods
test
xchg
sub
mov
adc
jo
cs
outs
adc
cmp
and
(bad)
xor
sub
and
mov
jae
jmp
cmp
sub
in
inc
pop
popf
sar
cdq
call
fs
jmp
sbb
fidiv
inc
mov
mul
clc
sub
push
mov
cmps
xchg
les
xchg
test
inc
shl
and
mov
sub
cmp
mov
push
adc
fisubr
mov
lahf
add
mov
push
outs
jmp
aam
pop
lahf
scas
mov
pop
jle
cmp
shl
xchg
push
dec
ins
cld
mov
jns
adc
add
inc
mov
test
sbb
inc
inc
and
or
leave
xchg
fist
repz
pop
sub
fdiv
add
jnp
pop
mov
in
ja
mov
jno
cmp
cmp
jle
jmp
or
adc
std
push
int
inc
cmp
mov
xlat
xchg
dec
xor
call
shl
mul
sub
mov
or
and
clc
retf
jno
or
mov
jae
sahf
push
jnp
into
jp
push
dec
dec
aaa
xor
xor
add
xchg
inc
rcr
jmp
push
add
int
mov
cmp
xchg
and
fwait
pop
sar
imul
mov
cmp
pusha
pusha
pop
pop
pushf
fidivr
jb
add
and
mov
outs
iret
in
sbb
fsub
dec
enter
mov
mov
xor
ss
in
pop
inc
push
fdivr
icebp
inc
mov
xchg
(bad)
loopne
pop
sub
cmp
neg
jecxz
xchg
mov
jo
xlat
dec
shl
mov
lods
cmps
sub
dec
mul
cmp
(bad)
dec
pop
loope
movs
mov
les
fs
movs
(bad)
mov
sub
iret
shr
retf
sub
cwde
dec
dec
cmp
es
sub
nop
mov
adc
push
lock
fidivr
(bad)
pop
mov
hlt
repnz
mul
push
loopne
lods
sub
mov
sub
retf
xchg
push
cld
sub
sub
iret
mov
sub
mov
nop
cmp
adc
mov
cmp
shl
movs
fild
adc
ds
push
pop
out
push
hlt
xor
loop
jmp
imul
mov
push
fs
fwait
xor
sbb
jp
jb
popf
lahf
push
mov
sub
cmp
mov
test
inc
xor
enter
sbb
and
dec
scas
mov
jp
sbb
mov
out
icebp
add
stos
cdq
js
daa
sbb
cmps
sub
pushf
dec
pop
dec
(bad)
mov
xchg
mov
xchg
xchg
inc
sub
mov
ror
or
push
mov
xlat
nop
xchg
dec
xchg
mov
mov
push
pusha
mov
loopne
js
or
int
inc
fild
ret
cld
push
xor
sbb
(bad)
push
inc
ds
dec
and
loope
pop
pushf
lock
sar
push
push
push
in
int
add
test
inc
mov
stos
in
cmp
mov
pop
aaa
add
adc
mov
repnz
(bad)
test
push
fstp
xor
sbb
sub
jmp
loopne
add
call
(bad)
dec
cmps
cld
mov
mov
xchg
pop
jle
out
mov
ret
and
out
stos
(bad)
push
mov
imul
push
aam
mov
aam
sar
cmp
std
int3
jb
call
and
inc
popa
ins
out
jecxz
(bad)
xchg
push
jmp
lock
push
mov
fwait
enter
inc
sbb
leave
mov
push
fsubp
xlat
sub
test
or
mov
int3
lods
outs
out
or
sbb
sub
shl
mov
(bad)
dec
cld
push
pop
jle
addr16
mov
mov
push
ins
aam
cmp
test
xor
jp
jp
(bad)
sahf
dec
int3
cmps
cmps
outs
nop
xor
cli
xchg
mov
mov
mov
pop
xor
add
adc
mov
sbb
cmp
stc
frstor
aas
jae
or
and
xor
mov
test
inc
mov
mov
dec
cwde
inc
aam
pop
xor
mov
popf
je
sar
jbe
sahf
mov
data16
gs
jns
pop
imul
(bad)
fadd
loop
cmps
cmp
ins
mov
out
add
xchg
aam
in
adc
ins
daa
ret
outs
and
mov
je
push
jo
sbb
mov
mov
adc
gs
mov
and
xchg
mov
nop
add
cmp
out
cs
ja
push
ss
daa
int
in
pop
out
repz
push
hlt
jmp
cmp
jnp
aam
jo
fdivr
retf
lods
xor
fiadd
xchg
or
gs
xor
ins
sbb
das
push
pop
rol
ins
hlt
retf
fcomp
enter
daa
aaa
pop
xchg
push
dec
mov
mov
call
das
mov
sbb
cmp
cmps
jmp
neg
cmp
loope
and
pushf
mov
out
movs
or
adc
mov
stos
pop
sbb
jmp
adc
push
int
repnz
nop
pop
and
out
and
xor
jno
mov
xor
and
cwde
mov
(bad)
arpl
(bad)
adc
mov
sub
lea
aam
fdivr
aaa
les
dec
imul
mov
pop
out
not
fist
test
xchg
sbb
pushf
popf
sbb
jns
aas
xchg
lods
icebp
push
jmp
into
push
push
xchg
icebp
mov
inc
retf
ret
sbb
call
enter
scas
in
xchg
push
in
xchg
xchg
bound
mov
lahf
or
pusha
arpl
jno
adc
mov
push
mov
push
cld
add
repz
jg
(bad)
lods
jo
(bad)
fdivr
cmp
arpl
mov
fld
out
add
les
sub
push
lods
cmp
or
and
leave
rcl
mov
xor
icebp
xor
ins
arpl
(bad)
lock
mov
enter
cwde
inc
imul
xor
push
(bad)
fs
adc
mov
dec
and
movs
addr16
(bad)
aad
cmps
into
out
or
xchg
dec
fs
repnz
jns
js
dec
aaa
sbb
inc
sbb
xor
fsubr
add
cli
xchg
cld
outs
xchg
adc
or
jle
sub
cmps
sub
sbb
add
push
and
xchg
int3
sbb
sub
mov
and
out
outs
mov
lahf
inc
int3
shr
inc
dec
and
stc
outs
add
mov
aad
jmp
retf
(bad)
mov
push
and
xchg
xor
and
nop
xor
cmp
mov
xchg
addr16
mov
add
lods
adc
sbb
das
pusha
fisttp
loop
cli
sahf
jmp
das
xchg
mov
mov
jecxz
imul
cmps
dec
dec
(bad)
call
popa
jmp
adc
jmp
lods
or
or
movs
mov
push
outs
jmp
mov
cld
std
pop
inc
aam
rcl
dec
sar
adc
inc
int
inc
imul
mov
push
mov
out
mov
xor
ret
cld
inc
lahf
inc
mov
add
jae
rcr
stos
mov
aaa
sti
push
stc
cmp
mov
pop
out
lea
aam
inc
arpl
push
nop
lods
and
(bad)
ss
pop
adc
mov
sub
aas
hlt
xchg
lods
adc
pop
mov
jbe
jbe
push
sbb
sbb
sbb
pop
inc
es
cmc
xchg
in
outs
fwait
pusha
mov
xchg
dec
in
mov
imul
adc
daa
xor
icebp
hlt
(bad)
fcomp
mov
std
arpl
clc
and
xchg
mov
icebp
sub
add
adc
fidivr
mov
sub
ret
and
dec
xchg
ret
xor
adc
gs
jo
mov
mov
dec
aam
nop
out
sbb
mov
ss
(bad)
pop
popf
ja
mov
xchg
addr16
add
jmp
inc
xor
pop
and
cmp
imul
into
cmp
fdivr
mov
movs
or
sbb
jne
sbb
cs
add
int
or
out
cmps
and
xchg
add
sbb
stos
retf
pop
mov
icebp
out
and
add
cmps
sub
neg
push
pop
test
mov
ret
push
cwde
xor
pusha
pop
cdq
adc
out
call
mov
aas
jo
dec
cmps
cmp
adc
add
sub
dec
lsl
add
call
mov
add
inc
cmp
loopne
movs
mov
scas
in
dec
and
leave
inc
cmps
xchg
mov
pop
jp
pop
jb
xchg
mov
sub
cmp
(bad)
and
shl
ins
outs
push
test
lods
lods
ins
jge
pop
mov
data16
inc
jl
fsub
enter
jmp
inc
cmp
int3
xchg
mov
cld
jmp
stc
xchg
xchg
xor
call
daa
add
xchg
push
pop
xchg
in
sar
jl
push
inc
push
mov
sbb
or
dec
leave
xchg
pop
dec
loopne
sub
dec
aad
jmp
inc
inc
out
mov
fiadd
aam
jp
mov
hlt
mov
lods
ror
movs
jo
add
pop
sub
in
inc
xchg
in
mov
repz
jmp
mov
sbb
mov
shr
stc
xor
imul
(bad)
jecxz
dec
js
adc
repnz
push
(bad)
mov
je
jmp
dec
es
cld
push
ins
mov
add
inc
les
idiv
imul
xchg
cld
popa
imul
dec
mov
push
gs
retf
push
mov
pushf
cmp
add
in
adc
out
nop
inc
push
mov
cwde
sbb
or
xor
call
pop
js
sbb
adc
fs
loope
retf
xchg
push
mov
sbb
lock
jbe
pop
in
pop
test
ins
adc
pop
in
mov
mov
pop
(bad)
xor
pop
push
push
sbb
in
out
aaa
push
imul
mov
mov
fs
pop
xchg
mov
xchg
jl
test
dec
mov
add
inc
add
cs
gs
es
pop
sbb
cmp
pop
pop
iret
jns
ss
test
dec
std
test
jno
and
cmps
lods
movs
push
stc
mov
aaa
cmp
jmp
fsubr
and
les
mov
mov
pop
push
loop
sbb
inc
xchg
gs
lahf
push
sub
shr
outs
std
and
or
xchg
lahf
xchg
mov
push
imul
dec
(bad)
sub
cdq
ror
or
stc
sbb
(bad)
fstp
in
(bad)
jl
xchg
add
xchg
mov
cmovbe
mov
mov
mov
aaa
cs
xchg
aam
xchg
dec
adc
call
ins
out
mov
test
dec
mov
cmps
popa
pop
shl
mov
add
popa
or
jne
jmp
jno
cmp
fcom
sbb
and
xchg
cmc
pop
cmps
mov
(bad)
sbb
mov
(bad)
adc
dec
loopne
push
stc
rol
out
dec
xor
mov
stos
retf
in
xchg
sub
and
iret
fisubr
out
and
or
sti
cs
jo
xlat
sbb
jnp
jbe
inc
xchg
ret
sbb
daa
(bad)
div
inc
pop
cmp
pop
inc
push
push
test
sbb
out
rcr
xor
(bad)
mov
ins
(bad)
sub
push
stc
ss
call
sti
adc
push
inc
or
aas
mov
rcr
sbb
enter
push
xor
iret
je
pop
out
pop
std
imul
pop
pop
ror
push
cmp
push
ret
retf
popf
add
xor
jbe
out
aas
mov
gs
imul
fs
cdq
push
jbe
test
pop
jl
out
fmul
mov
shl
pop
push
loop
cmp
(bad)
int3
push
sar
pop
(bad)
cmps
mov
iret
dec
sub
push
retf
dec
push
jl
pop
and
sbb
pop
inc
jo
push
dec
adc
jae
push
and
ja
or
add
cmp
pop
outs
adc
in
bound
sub
pop
out
pop
stos
sub
jae
loopne
push
addr16
or
sub
jle
sub
sub
outs
movs
cmps
mov
je
pop
aad
dec
es
add
aaa
cli
ja
pushf
push
lahf
cwde
out
cli
arpl
rcl
xor
add
inc
cmps
sub
add
push
or
jp
push
sbb
inc
mov
pop
sbb
aas
jl
xchg
popa
or
push
(bad)
and
cmp
fdiv
inc
mov
xchg
iret
xchg
stc
mov
xchg
call
mov
mov
imul
mov
mov
rol
test
jecxz
add
hlt
aam
mov
cmps
clc
and
popf
pop
shl
xchg
(bad)
jmp
int3
jne
es
(bad)
shl
sahf
push
push
add
pop
movs
push
or
(bad)
cmp
add
sub
sub
and
test
loop
sbb
rol
inc
add
fcmovu
cmp
sbb
add
popf
stos
mov
sbb
scas
in
test
push
or
jb
icebp
aam
mov
aad
xchg
sbb
mov
loope
sub
push
or
jg
or
ins
jp
xchg
in
push
xor
jl
cld
mov
xor
jae
jns
mov
cmps
sbb
rol
popf
lock
xor
es
xchg
js
fstp
dec
call
sub
pop
pop
sub
test
stos
outs
lock
fstp
(bad)
aad
enter
xchg
in
push
pop
inc
call
mov
dec
mov
jne
aam
push
dec
ss
mov
cli
mov
push
cwde
js
out
add
mov
jmp
xor
fist
(bad)
int3
cmp
retf
loop
je
cmp
pop
ret
int3
cmp
jmp
mov
loopne
xchg
add
(bad)
pop
mov
sbb
in
daa
mov
nop
clc
ins
sub
dec
aas
js
adc
leave
mov
push
pop
(bad)
fucomi
(bad)
aas
fdivr
lods
enter
pop
sbb
inc
sub
jmp
sub
sbb
adc
fcmovnu
test
mov
inc
fwait
add
pushf
xlat
icebp
fs
lods
dec
movs
or
dec
adc
repz
pop
arpl
js
xor
adc
and
aas
sahf
js
int3
mov
mov
xchg
popa
push
push
pusha
popa
mov
test
shr
adc
outs
adc
jge
fiadd
xor
jg
pop
jmp
leave
jmp
mov
pop
ss
sub
mov
dec
test
imul
adc
out
(bad)
in
dec
and
dec
mov
aad
jo
jns
cmps
pop
lahf
or
jne
gs
scas
(bad)
fimul
adc
ds
iret
adc
push
outs
clc
cmp
ret
icebp
lods
adc
mov
and
cld
ret
addr16
mov
jge
popa
fdivr
add
lods
dec
ss
xor
hlt
aaa
jns
sub
or
jmp
aam
add
and
enter
lods
outs
dec
mov
nop
xchg
mov
sbb
sub
xchg
scas
and
dec
sbb
sahf
jge
xor
or
sub
fdivr
sub
jnp
cmps
test
pop
imul
and
in
(bad)
cmc
nop
cmps
cmp
test
sbb
xor
ds
xchg
shr
in
jmp
inc
movs
out
jmp
in
sub
call
gs
jmp
fdivr
xchg
add
rcl
jle
push
sar
call
inc
sbb
mov
fild
mov
jne
in
cli
push
scas
inc
lods
inc
and
cmp
jne
inc
xchg
enter
aas
adc
out
inc
jmp
cmp
inc
mov
adc
mov
mov
out
in
aaa
mov
sar
data16
dec
dec
in
sub
xchg
mov
popa
adc
sbb
in
pop
pushf
sbb
sbb
(bad)
rol
mov
cmp
cmps
pop
or
xchg
sub
rcl
rcr
push
stc
sbb
ins
dec
add
popf
lods
out
mov
std
jo
stos
inc
pop
adc
js
push
or
cli
addr16
mov
movs
inc
pop
fistp
cmc
xor
jmp
add
cdq
call
dec
xlat
pop
ins
mov
mov
add
and
jg
pushf
pop
add
cmp
fcmove
sbb
int3
sub
fs
mov
gs
xor
daa
sub
mov
mov
stos
mov
stc
mov
lds
enter
ja
in
ror
fnstenv
mov
adc
inc
hlt
jp
pop
inc
pop
ja
das
mov
and
mov
xor
mov
ja
sub
jge
aam
aam
mov
jmp
ja
pushf
mov
dec
sub
and
neg
outs
popa
and
test
mov
int
jne
xchg
pop
sahf
stos
jo
test
shl
sahf
and
pop
aad
pushf
and
cmp
pop
jmp
sub
js
xchg
jmp
mov
pop
xor
or
push
inc
mov
pop
xchg
je
cmp
xchg
mov
push
popf
mov
loop
fs
imul
ret
sti
push
adc
scas
mov
xchg
retf
(bad)
jo
sar
xlat
sahf
loope
sbb
fimul
into
dec
push
dec
cli
out
sub
loopne
fs
cmp
and
xchg
test
int
xchg
inc
das
outs
(bad)
mov
xor
fxch
dec
sub
(bad)
add
scas
jns
fbstp
cmp
fwait
ret
sbb
call
mov
enter
add
mov
mov
nop
scas
inc
inc
add
jbe
xchg
mov
mov
push
push
dec
aas
popf
mov
icebp
ficom
inc
xchg
mov
rcl
rcl
jecxz
imul
mov
add
push
adc
mov
pusha
dec
imul
imul
jecxz
sub
and
rol
cmc
sub
push
rcl
fistp
jbe
dec
mov
stos
int3
xor
sbb
dec
aas
pop
rol
xor
dec
jmp
sbb
nop
and
pushf
imul
push
movs
xchg
inc
pushf
sbb
and
ret
mov
sbb
jb
pop
cli
mov
jecxz
and
imul
ja
adc
test
xchg
sbb
lea
(bad)
shl
jnp
and
jp
xor
std
inc
xchg
(bad)
test
test
or
les
repz
jnp
mov
jns
mov
xchg
cmp
cwde
call
xor
xlat
nop
mov
add
(bad)
ins
mov
cmps
stos
pop
shl
or
mov
repnz
push
das
xchg
pop
js
repnz
or
mov
dec
or
cwde
xor
ins
mov
add
retf
pop
jno
test
fs
popa
mov
lea
rcl
cmps
adc
sbb
xchg
adc
ss
(bad)
fsubr
inc
bound
dec
jge
fwait
mov
mov
imul
int3
sbb
cmp
aam
cmc
pop
xchg
or
out
inc
jmp
or
fidivr
ror
loop
test
cld
cmps
adc
mov
jmp
mov
mov
das
cmp
fmul
mov
mov
jge
jp
movs
out
retf
mov
ret
pop
or
pop
sub
(bad)
mov
cmc
lods
and
jb
mov
mov
sbb
es
call
jne
jl
(bad)
pop
out
push
data16
sbb
(bad)
fdivr
push
pop
lea
in
push
jle
lds
mov
dec
(bad)
test
fwait
popa
out
pusha
inc
dec
mov
fldcw
mov
jl
mov
mov
xchg
popa
aas
int
fadd
leave
cdq
mov
inc
(bad)
das
aas
out
cdq
out
mov
pop
jnp
stos
loope
das
nop
add
fmul
or
sub
inc
sbb
in
xchg
sbb
pop
test
cmc
scas
cli
sbb
jg
cli
and
fucomi
pop
pop
(bad)
imul
push
or
test
lds
dec
(bad)
mov
es
mov
ret
loope
cmc
pop
fisttp
(bad)
loopne
mov
out
cmp
inc
push
repnz
inc
pop
popa
popf
xchg
clc
scas
sbb
mov
dec
in
push
mov
xchg
cmp
inc
cmp
push
loopne
jl
xchg
hlt
pop
sub
and
inc
inc
mov
fmul
mov
mov
ins
sbb
push
jno
ins
xchg
mov
push
xchg
rcr
mov
mov
cld
or
sub
pop
mov
repnz
lock
fsub
sbb
adc
xchg
into
les
call
dec
push
outs
(bad)
shl
loopne
or
pop
fs
sbb
arpl
cmps
add
lock
hlt
loop
dec
push
(bad)
jmp
loop
and
imul
xchg
call
data16
xor
daa
ds
pop
jbe
cmc
adc
push
(bad)
xlat
xchg
jp
pop
sar
jp
sub
arpl
and
jno
popf
mov
or
pop
inc
push
ja
jg
mov
xchg
inc
fwait
pop
test
mov
add
pop
(bad)
jne
addr16
adc
cld
adc
mov
hlt
pop
xchg
cmp
retf
mov
cmp
xchg
jne
xchg
jl
jp
adc
push
cdq
mov
add
in
cs
pop
rol
jbe
arpl
and
sub
loopne
jmp
jmp
mov
inc
(bad)
jp
xor
push
xor
shl
aad
jge
popf
or
cld
inc
push
mov
jo
inc
dec
mov
adc
arpl
add
sbb
add
ret
cmp
cld
dec
sub
jmp
adc
push
ret
and
inc
outs
in
inc
push
cld
xchg
pop
out
mov
dec
mov
fdivr
push
xor
mov
mov
into
pushf
leave
dec
in
adc
jno
test
dec
mov
jno
and
pop
mov
or
inc
add
fistp
sbb
cld
inc
add
out
data16
out
lea
call
sub
pushf
push
pop
shl
pop
out
test
pop
pop
scas
shl
xor
cmp
cdq
sub
and
sbb
pop
add
iret
daa
push
aam
repnz
mov
sub
mov
or
in
mov
pop
js
enter
and
inc
add
ret
xchg
neg
into
mov
out
jl
cmps
jmp
loop
out
iret
mov
jbe
push
add
dec
loop
jmp
outs
sti
popf
xchg
mov
clc
jno
adc
cli
aaa
mov
or
fist
(bad)
sbb
stos
xor
mov
xchg
pop
and
ins
retf
in
mov
mov
shr
adc
cmp
imul
(bad)
push
(bad)
(bad)
in
sbb
pop
mov
sbb
pop
jns
out
pushf
cmps
bound
pusha
loope
add
(bad)
mov
clc
or
int3
add
and
push
popf
and
adc
sub
jae
push
mov
in
sbb
(bad)
and
test
sahf
pop
or
cli
pop
imul
sahf
inc
xor
loope
(bad)
ret
fs
(bad)
push
mov
stc
mov
in
add
mov
dec
or
std
sbb
into
sub
xlat
xor
movs
dec
popf
cmps
popa
ja
out
popa
sub
pop
xor
pop
jl
push
ins
dec
cdq
jne
pop
cld
in
pop
add
xor
fwait
xor
test
dec
mov
or
test
jg
cld
imul
cmp
sub
sub
into
(bad)
stos
fwait
xchg
jg
cdq
pop
dec
(bad)
(bad)
jp
inc
jp
xchg
retf
mov
jp
ins
push
mov
dec
mov
mov
ins
fisub
sub
out
jecxz
aaa
out
int
ror
outs
inc
(bad)
fnstcw
mov
clc
or
mov
mov
xchg
jmp
sti
jns
and
push
inc
out
sahf
fidiv
shl
call
aas
add
adc
lds
jne
jg
push
dec
jl
jo
int
push
stos
je
pop
xor
pop
mov
xor
out
xchg
imul
out
push
mov
les
idiv
jb
les
hlt
mov
sub
mov
ins
push
lea
clc
and
retf
pop
loope
cmp
repnz
adc
adc
fwait
loope
sub
dec
xor
mov
mov
cmp
int3
push
scas
pop
retf
mov
into
adc
mov
or
loopne
inc
mov
xor
adc
cmp
popa
sub
or
das
aad
jae
outs
xchg
xchg
pop
pop
sub
pop
fs
leave
mov
retf
jecxz
add
rcr
mov
sbb
fnstenv
push
mov
neg
add
or
fisttp
xchg
xchg
sub
sbb
mov
(bad)
and
test
jg
retf
add
xchg
sbb
in
inc
cld
jne
js
mov
out
jo
inc
inc
(bad)
jb
les
add
mov
push
mov
jae
and
xchg
lods
in
imul
gs
cwde
ret
(bad)
and
adc
aas
ins
leave
bound
pop
push
ret
data16
iret
pop
inc
popa
xchg
pusha
jecxz
jl
icebp
jmp
icebp
xchg
xlat
pop
call
hlt
sbb
pop
mov
movs
sbb
mov
jnp
jno
push
lock
push
data16
cmp
jg
cmp
outs
mov
sbb
mov
loope
shl
movs
fmul
inc
loopne
vprotd
fist
sahf
push
and
es
mov
cmc
xor
push
jo
jbe
jno
mov
fldenv
sbb
lods
sub
iret
clc
lods
aad
adc
(bad)
lea
das
cmp
adc
in
into
jnp
pop
push
sub
mov
xor
sahf
mov
imul
mov
dec
repz
adc
inc
popf
bound
inc
pop
fsubr
call
mov
outs
mov
fwait
add
push
mov
std
loopne
push
cmps
out
and
not
out
cmp
(bad)
xor
inc
push
mov
pop
push
(bad)
mov
add
add
cmp
rcr
(bad)
sbb
sbb
adc
push
jp
xchg
(bad)
mov
daa
push
mov
cmps
lahf
out
dec
mov
mov
lock
addr16
jle
cmc
mov
dec
popa
or
or
pop
mov
ret
daa
pop
scas
les
retf
out
lahf
mov
and
clc
inc
je
mov
jg
inc
das
pop
lods
dec
pop
push
retf
push
aas
mul
xor
mov
test
cs
jbe
sbb
mov
cmp
or
retf
xor
mov
add
or
mov
push
and
pop
lea
loope
mov
stc
xchg
push
and
ja
outs
ins
jle
cdq
adc
js
lods
cmp
outs
jg
and
daa
add
add
stc
mov
adc
xlat
xchg
sbb
or
(bad)
out
push
inc
imul
fs
fmul
or
sbb
cwde
mov
mov
rcr
jae
std
jecxz
icebp
or
cld
or
mov
fmul
xor
les
fs
paddq
mov
xor
xor
je
dec
sub
lods
sbb
jo
xor
ret
xchg
dec
pop
(bad)
jbe
shr
repnz
div
shr
call
cmps
sahf
pop
jmp
add
test
sbb
in
pop
movs
movs
test
cmps
nop
pop
es
ins
aas
ja
inc
lods
aad
not
fdivr
(bad)
pop
mov
add
fs
addr16
fbstp
pushf
pushf
shr
dec
pushf
cmp
shl
cld
scas
mov
push
mov
movs
pop
dec
sub
mov
jne
stos
cmovg
rol
inc
or
xchg
cld
dec
push
push
mov
paddusb
imul
adc
xchg
sub
mov
daa
retf
nop
and
and
dec
outs
and
dec
jle
lods
inc
sti
mov
sub
ror
and
mov
fistp
je
rcl
add
mov
push
sbb
mov
cwde
stos
xchg
js
inc
and
pop
mov
jns
xor
xchg
add
push
pop
push
mov
jle
rcr
cld
sub
mov
adc
ficom
shl
mov
es
mov
push
mov
test
loopne
fidiv
dec
ja
nop
jecxz
mov
neg
xchg
adc
mov
mov
ret
or
dec
stc
into
jle
xchg
test
inc
mov
sub
inc
js
fwait
cmc
(bad)
ins
fmul
cmp
xor
sbb
dec
push
inc
cli
call
jp
jge
les
sub
jp
push
and
xchg
test
lahf
into
outs
xor
push
es
mov
pop
minps
xor
mov
imul
push
out
sbb
jg
mov
adc
clc
js
loopne
cmp
js
popf
or
popa
mov
retf
rol
imul
outs
sub
outs
rcr
retf
xchg
scas
repz
lods
push
pop
fsub
mov
dec
dec
(bad)
dec
or
push
out
jbe
sub
clc
(bad)
fwait
clc
push
stc
or
inc
fcomp
xchg
cmp
and
sti
jl
xor
dec
fnstcw
cs
add
xchg
xor
shl
and
imul
xor
fisub
clc
mov
inc
jb
mov
fcmovne
jo
aaa
or
inc
and
mov
jbe
and
mov
adc
xchg
outs
add
cmp
rcr
jno
add
mov
or
stc
cmps
ins
bound
sub
aam
cmp
leave
pop
push
adc
sbb
test
xor
out
sub
xor
sub
xor
bound
fild
mov
outs
aad
fneni(8087
data16
cmps
iret
jae
push
push
div
jbe
cmp
ins
xchg
push
pop
mov
retf
adc
cmp
loope
xchg
xlat
xor
fs
shl
fnstsw
push
imul
pop
test
out
ss
lahf
arpl
in
push
and
(bad)
mov
loop
sbb
out
mov
(bad)
loop
mov
aad
mov
xchg
xor
mov
pop
mov
cld
mov
mov
push
scas
les
xor
adc
jno
mov
xchg
sub
pusha
call
xlat
mov
fadd
lods
adc
mov
push
paddd
in
je
enter
push
cmps
xchg
loop
xor
push
(bad)
mov
aad
sub
mov
outs
add
mov
popf
aam
loopne
push
loop
out
retf
ss
repz
fidivr
cmp
jns
push
push
test
out
cmps
fs
loop
repnz
inc
adc
and
push
xchg
mov
inc
dec
pop
mov
push
addr16
mov
addr16
mov
outs
in
or
adc
jle
or
(bad)
loope
outs
scas
daa
dec
enter
aas
xor
cmps
sub
out
and
lock
dec
push
pop
sub
scas
fisub
sahf
enter
mov
std
adc
aam
shr
xchg
adc
mov
mov
jmp
mov
pop
mov
pop
iret
mov
pop
jbe
imul
ins
fsubrp
adc
xchg
dec
inc
daa
mov
shr
imul
and
mov
fwait
and
cmps
mov
repnz
jns
mov
sub
out
push
call
out
mov
jp
or
sti
call
xor
xchg
cdq
sub
(bad)
xlat
fadd
xchg
push
shr
xchg
add
sahf
mov
ret
loopne
repz
outs
fmul
jnp
lock
push
xchg
cmp
or
(bad)
mov
push
daa
push
mov
xchg
mov
imul
push
sbb
jo
xor
jno
scas
lahf
retf
and
js
aam
pop
pop
jge
scas
pop
jae
into
dec
jmp
aaa
add
jmp
das
test
hlt
out
arpl
(bad)
popf
cdq
fcmovnbe
mov
sahf
test
pushf
xlat
adc
xor
outs
ret
adc
xchg
lock
sub
xchg
fadd
mul
jmp
xor
jle
or
mov
dec
adc
lods
cmp
lods
call
aad
ficomp
jl
test
xchg
mov
cmps
adc
adc
cwde
mov
mov
clc
xor
lahf
jp
fld
hlt
mov
(bad)
dec
je
outs
in
add
das
mov
xchg
push
movlps
scas
inc
mov
cli
rcr
mov
imul
pushf
sahf
sahf
test
aas
inc
test
ret
aas
push
xor
ja
mov
adc
retf
scas
loop
pop
fld
sbb
mov
mov
in
(bad)
mov
pop
jne
outs
pop
or
pop
fcomi
cmp
add
push
xor
lods
repnz
push
jmp
int3
aas
sbb
and
icebp
cmp
ret
dec
sub
mov
cmp
jge
dec
stos
jg
push
fcmovnb
xchg
cmc
xor
add
ins
cmp
adc
dec
jle
add
add
ss
in
mov
movs
shl
sbb
int
ins
repz
cli
test
jg
xor
fld
mov
outs
pusha
ss
loopne
rcr
push
lds
cmp
mov
mov
stos
xchg
or
dec
and
mov
stos
cmp
push
aad
sub
push
int3
aas
ins
out
sbb
adc
lahf
loop
mov
adc
jb
in
stos
cwde
and
push
gs
sbb
pushf
into
jb
mov
add
jo
xlat
fs
mov
jo
mov
mov
mov
lods
popf
dec
aas
scas
sbb
mov
sbb
push
add
dec
aas
call
mov
cmp
lods
in
cmps
sbb
mov
xlat
push
out
push
adc
dec
sar
jmp
xlat
icebp
and
mov
sti
pop
rcl
push
aas
daa
and
aas
adc
nop/reserved
push
lock
or
mul
sahf
inc
outs
leave
cmc
adc
mov
das
dec
xor
cwde
pop
push
xchg
ja
neg
add
aad
je
mov
frstor
sub
and
into
pop
push
xor
jl
mov
std
inc
fwait
cli
sti
mov
and
dec
(bad)
xchg
in
cmp
sbb
or
sub
scas
leave
pop
dec
or
retf
xor
ds
gs
jle
sbb
lea
iret
rol
add
jbe
adc
pusha
into
enter
call
sub
jns
icebp
daa
jo
sub
emms
sbb
and
mov
xchg
iret
mov
fdiv
mov
and
cmc
hlt
out
mov
imul
fcom
jl
stc
push
pusha
pop
or
dec
fsubr
ins
adc
dec
or
push
or
pop
popaw
or
jp
xchg
mov
pop
push
jo
or
mov
mov
test
in
imul
and
cs
std
scas
(bad)
jg
pop
js
shl
sbb
ror
jne
mov
mov
lods
cwde
js
jmp
xor
cld
push
loope
je
mov
lods
inc
sbb
pop
jle
out
sub
nop
ret
inc
sub
mov
test
jge
and
jnp
stos
in
pop
push
mov
cmp
sahf
pop
lds
adc
inc
(bad)
push
xor
xlat
std
inc
jmp
cld
cmps
out
pop
es
mov
push
sbb
mov
add
sbb
push
inc
ret
xchg
mov
imul
sub
pop
or
sub
(bad)
jl
stc
es
data16
shl
xor
dec
add
mov
sahf
std
push
bound
jns
mov
push
jg
hlt
int3
inc
in
mov
or
ja
push
adc
stos
dec
inc
mov
mov
jge
repnz
cmp
pop
jb
iret
or
sub
dec
mov
jne
retf
cmp
push
mov
adc
jmp
mov
jb
adc
pop
xlat
adc
jno
mov
jecxz
lahf
push
dec
aam
loop
sbb
pop
mov
dec
and
test
fidiv
add
dec
mov
sbb
mov
cmp
sub
ins
push
ss
xor
push
cmps
sub
dec
fisub
mov
out
mov
aaa
mov
jae
xchg
cmp
adc
test
xor
jl
push
lds
aad
jge
hlt
and
pop
les
mov
mov
jle
aam
movs
sbb
cmp
sub
fnstenv
and
mov
fcom
loop
pop
mov
adc
stc
test
adc
adc
adc
xchg
mov
sbb
aas
jno
cmp
pop
inc
mov
es
push
sbb
sbb
out
int
fcmovnbe
int3
cmps
mov
dec
and
or
and
jecxz
or
fst
and
push
and
movzx
cmp
test
enter
(bad)
retf
or
loopne
xor
xchg
or
fdiv
mov
bound
(bad)
call
adc
xchg
mov
popf
and
xor
and
ds
into
mov
mov
xchg
pushf
add
shl
lea
out
pop
pop
mov
xor
iret
ret
(bad)
xor
or
shl
retf
into
add
push
xor
cwde
inc
daa
lahf
sahf
xchg
sar
pop
imul
xchg
lahf
pop
or
aam
ds
add
mov
outs
xchg
pop
fild
or
sub
jle
ins
inc
js
gs
nop
pop
out
or
adc
popf
cwde
cli
inc
cmp
adc
lods
cli
pop
out
retf
je
mov
cmp
cmp
test
sbb
xchg
ret
cmp
dec
cmp
xchg
mov
das
lds
pushf
or
push
or
inc
stos
adc
pop
fldl2t
cs
pop
adc
push
ins
ins
dec
out
(bad)
into
dec
retf
inc
mov
mov
add
pop
add
add
cld
xchg
repnz
mov
cmp
inc
stc
outs
(bad)
mov
shl
push
inc
xor
pop
test
and
add
ds
ins
push
fcmovne
jo
in
imul
and
sar
xchg
jp
aam
(bad)
cmp
cmp
ret
sub
addr16
out
repz
mov
mov
fldl2t
test
add
in
xlat
scas
mov
cmp
push
jns
in
cmps
mov
pushf
out
dec
clc
pusha
imul
dec
jns
cdq
add
push
cs
ud1
xor
cmc
sbb
mov
sub
inc
push
lods
push
pop
push
rol
idiv
mov
imul
and
xchg
(bad)
mov
cwde
xchg
stos
ss
mov
jmp
or
ret
mov
dec
int3
adc
cli
and
mov
dec
push
adc
dec
jbe
push
xchg
mov
loope
pop
mov
inc
stc
inc
xor
dec
mov
cmps
in
jno
lods
xor
jno
push
rcl
xchg
inc
inc
xor
movsx
mov
stos
cmp
cwde
int3
bound
mov
or
adc
(bad)
mov
enter
push
inc
jne
push
in
test
dec
xchg
mov
in
dec
in
sub
inc
cdq
loope
test
pop
push
clc
jb
ins
je
ja
ss
out
pop
dec
jno
in
dec
js
loop
push
fistp
jmp
sub
fidiv
push
sar
ins
jl
push
mov
stc
push
aam
push
inc
adc
mov
adc
or
inc
dec
or
xor
mov
mov
call
mov
mov
pop
test
push
rcl
mov
mov
bound
ds
dec
and
adc
sbb
jo
outs
add
or
sbb
pop
sti
and
leave
jg
push
mov
xchg
lods
push
shl
sbb
cli
sbb
je
mov
mov
fdiv
ins
stc
pop
xor
push
inc
and
(bad)
(bad)
hlt
xor
pop
es
pop
inc
push
xor
mov
data16
popa
bts
mov
pop
mov
(bad)
jle
xchg
ret
mov
and
aaa
out
add
mov
lock
imul
xor
adc
int3
mov
add
daa
retf
cmp
inc
test
movs
ja
xchg
in
adc
push
cmps
mov
test
out
xor
mov
jo
addr16
aaa
jno
fbstp
inc
mov
sub
push
push
sbb
mov
xchg
and
lock
sti
push
adc
sbb
fidivr
mov
xchg
push
cdq
pop
(bad)
shr
cmp
in
xchg
stos
or
outs
and
iret
and
mov
or
rcr
hlt
movs
pop
jg
neg
cld
scas
add
or
rcr
sub
xchg
sub
xchg
imul
and
pop
cmp
or
and
xor
push
add
jmp
cs
mov
xchg
or
loop
xor
jns
xchg
xor
mov
jle
fstp
jmp
scas
mov
sbb
mov
test
dec
lock
call
lahf
sub
stos
push
popf
xor
cmp
xor
cmp
jmp
cmps
pop
push
adc
ret
je
(bad)
into
test
cmp
mov
mov
dec
ror
xchg
leave
inc
scas
cwde
jmp
dec
movs
and
enter
inc
mov
cmc
loope
jmp
push
jp
mov
inc
in
adc
xchg
xchg
push
add
xchg
fadd
icebp
xor
test
jbe
dec
dec
dec
jne
push
(bad)
cmp
jle
in
cmp
pop
pop
pop
sub
xor
je
jmp
dec
fistp
and
mov
movs
mov
push
mov
es
adc
mov
mov
test
sub
push
or
pop
in
dec
inc
inc
jmp
gs
or
adc
push
gs
adc
push
pop
dec
adc
jl
inc
add
xor
fstp
test
test
test
imul
add
push
pop
jle
pop
fsub
shl
and
stos
neg
inc
lea
sbb
pop
push
lds
dec
jo
repnz
mov
and
ret
fcomi
clc
jecxz
and
inc
adc
inc
dec
push
cmp
mov
popf
or
sbb
movs
imul
push
sub
sahf
add
dec
dec
(bad)
ins
sbb
push
sub
jge
jb
not
test
jae
or
push
pop
xchg
in
ins
mov
xor
sbb
popa
scas
cmps
mov
inc
dec
js
add
push
mov
add
(bad)
loop
jle
into
stc
les
outs
or
stos
jb
fist
add
retf
pop
xor
sub
pop
(bad)
jae
enter
mov
mov
cmp
mov
jnp
xor
fimul
push
push
mov
add
clc
dec
jns
sub
mov
out
mov
push
lods
shr
adc
jg
cmp
xor
dec
data16
xor
add
pop
and
pop
xchg
inc
test
and
jbe
cmps
loopne
sub
mov
inc
cmps
adc
test
ret
cmp
ins
loop
mov
or
outs
xchg
xor
(bad)
(bad)
ds
pusha
pop
fimul
lea
iret
fild
(bad)
cwde
mov
ds
mov
aaa
fldenv
in
imul
idiv
add
lea
arpl
xor
ret
out
xchg
inc
int
out
lea
(bad)
xchg
xchg
pop
mov
pusha
xchg
int3
movs
xchg
or
push
enter
out
jp
ja
dec
call
mov
stc
fadd
jmp
enter
ja
inc
mov
daa
mov
jno
sbb
lods
or
movs
and
in
or
or
and
shr
cmps
cmps
jmp
cdq
shl
jbe
shl
cmp
mov
mov
cmp
jbe
in
pusha
pop
and
push
cs
xor
adc
lds
je
sub
fdivr
push
adc
and
cmps
cmp
pop
sub
push
adc
jmp
jb
loop
and
dec
cmc
inc
outs
xchg
sti
jl
add
mov
mov
sub
loopne
iret
(bad)
outs
fidiv
addr16
rep
out
xchg
arpl
aas
mov
movs
xor
aas
adc
mov
dec
push
xor
mov
xchg
inc
(bad)
jno
stos
adc
sbb
cmp
cld
enter
mov
mov
out
in
and
inc
int
or
call
cmc
dec
aam
pop
loop
xchg
outs
ficomp
sub
loop
jg
jl
mov
das
jnp
push
or
mov
cli
cmp
call
ret
xchg
jo
ret
loopne
jmp
retf
pop
pop
popf
xor
shr
pop
push
mov
jne
adc
xor
and
add
adc
sub
bound
(bad)
push
sar
arpl
inc
jno
push
xor
or
and
stos
xor
add
inc
xchg
stc
movs
scas
ror
jecxz
xchg
ror
jmp
pop
xchg
ins
hlt
add
mov
outs
push
cwde
cmp
inc
inc
in
mov
jg
dec
xor
shl
gs
pushf
ret
add
je
repnz
push
or
mov
cmps
in
es
test
sar
pop
xor
mov
js
push
pushf
jecxz
or
mov
mov
ins
dec
mov
push
mov
sbb
out
xor
jb
imul
mov
dec
jno
rol
fstp
retf
cli
les
sar
es
cdq
loope
(bad)
arpl
add
(bad)
xchg
sbb
imul
movs
repnz
jbe
movs
(bad)
cmps
push
es
adc
mov
out
or
repz
call
scas
inc
fistp
aaa
jb
fld
dec
js
mov
push
mov
test
fyl2x
sbb
fcomp
fwait
sub
dec
pop
xor
push
nop
add
or
scas
stos
loopne
retf
mov
aas
or
cmc
jnp
(bad)
jno
fwait
lahf
popf
frstor
inc
dec
mov
cdq
(bad)
sbb
inc
stos
addr16
sar
add
int3
or
rcr
rcl
cmc
pop
or
mov
lds
test
aad
out
mov
pop
inc
fs
lods
pushf
jo
mov
dec
pop
bound
dec
jns
mov
mov
mov
not
add
sbb
pop
pop
popa
inc
push
pop
mov
clc
loope
xchg
aam
stc
nop
pop
push
popf
push
fcomip
shl
and
xchg
imul
(bad)
shl
loopne
stos
movs
inc
jnp
leave
mov
popf
clc
(bad)
int3
ret
(bad)
in
add
pop
jbe
out
pop
popf
(bad)
stos
ins
dec
mov
scas
push
mov
outs
add
push
iret
push
jno
push
xor
jecxz
mov
xlat
xchg
and
in
(bad)
xchg
push
mov
into
les
jae
addr16
or
fadd
mov
mov
test
hlt
lods
pop
ins
cld
mov
inc
push
mov
cs
jmp
mov
ds
inc
mov
push
push
push
and
lea
call
test
dec
cmp
mov
loopne
imul
ror
xor
das
mov
adc
inc
movs
stc
sub
or
push
shl
cmp
fdiv
in
loop
ficom
jnp
mov
fcomp
push
adc
sar
test
dec
dec
pusha
jmp
push
push
jmp
leave
jae
cmp
push
fldenv
sbb
inc
cmps
cmp
mov
and
push
pop
cmps
popf
cs
dec
mov
mov
dec
stos
jle
dec
and
adc
xchg
pop
push
xchg
bound
mov
aad
mov
jae
jo
outs
lea
retf
test
leave
jnp
mov
jmp
int
jno
cmp
fsubr
push
sbb
push
mov
mov
jne
pushf
dec
xchg
add
lea
cmp
mul
sti
or
and
jne
add
ins
mov
cdq
dec
scas
inc
adc
push
xor
and
xor
psubw
mulps
inc
and
and
jns
adc
xchg
je
xor
aas
or
add
add
pop
xchg
(bad)
mov
sahf
jb
sub
push
push
jg
pop
xor
shr
es
mov
cmc
rcl
jb
pop
push
loop
sbb
sbb
outs
std
mov
mov
push
push
cmps
pop
(bad)
ja
pop
ss
gs
enter
jno
cmp
inc
cs
dec
aam
jae
sahf
into
dec
psllq
cmps
cwde
into
inc
cdq
sahf
les
mov
pop
leave
mov
je
enter
test
or
mov
pop
adc
mov
enter
pop
pop
out
sub
out
je
mov
les
vmovq
jge
data16
daa
fisub
aam
test
ins
fisub
cmps
add
into
xchg
cs
int
and
popa
ja
rcr
popa
das
mov
inc
ret
fnstsw
push
mov
sar
pop
jns
mov
mov
ret
mov
xchg
mov
imul
jbe
or
dec
stos
jns
mov
jp
ins
repnz
in
lods
dec
sbb
popa
xchg
pop
scas
and
out
es
daa
lods
lea
dec
retf
mov
cmp
pushf
test
ret
add
mov
in
adc
cmp
cmp
arpl
mov
retf
and
sti
movs
cmp
bound
dec
inc
pop
pop
push
or
popf
pop
mov
pop
fcom
sbb
enter
rcl
push
stos
(bad)
push
test
retf
inc
mov
push
pop
xor
in
push
aam
pop
add
and
dec
(bad)
js
cmps
sbb
test
sub
aad
es
or
mov
test
in
or
cmc
in
pop
(bad)
sub
lods
outs
int
cli
or
(bad)
push
or
adc
std
push
push
xchg
cmps
and
stos
jno
and
sub
mov
add
cdq
cmp
call
retf
mov
mov
loopne
adc
jno
mov
mov
imul
inc
or
(bad)
clc
into
sub
jge
(bad)
xor
mov
and
xchg
mov
push
enter
imul
mov
fidivr
icebp
jno
add
sar
sbb
jecxz
pop
jne
and
popf
jo
mov
cwde
pop
lea
mov
xchg
adc
add
call
cwde
mov
aam
sub
push
mov
sub
data16
ficomp
(bad)
sbb
dec
jl
pop
(bad)
call
retf
aaa
mov
mov
retf
add
adc
sbb
out
jecxz
clc
push
cs
cli
jae
dec
test
inc
js
lods
inc
and
fldcw
(bad)
enter
out
arpl
push
sahf
adc
daa
adc
adc
pop
sub
sti
or
pop
pop
adc
pop
arpl
int
inc
jno
in
addr16
jbe
ja
jmp
mov
stos
clc
mov
mov
(bad)
nop
xchg
xor
xor
sar
xchg
add
ds
loope
lods
dec
mov
xor
test
popa
repz
push
(bad)
mov
pusha
out
in
ins
out
and
dec
nop
cmp
fcos
shl
test
xchg
add
and
jp
and
call
loop
dec
add
imul
paddsw
adc
xor
or
scas
jnp
outs
cmp
mov
daa
adc
inc
or
popa
sbb
fcomi
xor
jmp
or
popa
bound
dec
xor
cmp
imul
jnp
pushf
jecxz
dec
or
mov
bound
sti
mov
push
iret
retf
(bad)
movs
xor
and
xchg
push
dec
test
aad
in
pop
sub
sbb
(bad)
pop
not
cmp
stc
repnz
iret
add
mov
adc
lods
(bad)
ror
icebp
cmp
inc
jle
xchg
jmp
or
mov
cmp
(bad)
xchg
(bad)
pusha
xchg
jne
mul
fidiv
dec
test
jge
mov
retf
push
add
test
add
icebp
repnz
adc
xchg
loope
jmp
arpl
popf
xor
pop
and
jmp
fild
push
retf
sub
mov
xchg
rol
or
retf
add
mov
sub
jmp
jmp
(bad)
ret
cmc
adc
out
retf
lahf
dec
xlat
pusha
fld
jecxz
ja
dec
push
jne
xor
(bad)
mov
inc
std
iret
loopne
cmp
ins
sbb
xor
ror
repz
or
pop
xor
call
lahf
pop
jp
retf
push
or
add
jmp
sbb
cmc
pop
inc
sub
fninit
sbb
add
stc
sahf
loopne
pop
or
imul
jno
xor
stos
outs
dec
movs
das
pop
js
lea
pop
std
(bad)
pop
scas
cmps
and
dec
je
jo
add
jge
leave
fcom
repnz
jecxz
push
sub
sbb
add
push
cld
inc
sub
hlt
in
push
lea
minps
add
fucom
pop
xor
mov
retf
pcmpgtb
cmp
sub
sub
add
xor
test
repnz
add
pop
cs
or
outs
jge
mov
les
xchg
mov
push
xor
mov
pop
lahf
fstp
jns
mov
loopne
mov
dec
icebp
ret
or
inc
push
inc
adc
xchg
xlat
or
or
ret
aas
test
xor
push
push
shl
cmp
and
retf
cmp
or
pop
mov
pop
(bad)
mov
mov
add
loopne
pusha
arpl
mov
shl
mov
fisttp
jle
das
aad
inc
pop
mov
dec
fild
adc
dec
adc
pop
xchg
xor
cmp
std
push
addr16
das
dec
sbb
sbb
jg
clc
ror
cmp
(bad)
mov
retf
in
xor
jg
test
mov
xchg
mov
ror
out
out
push
mov
push
inc
jle
pop
mov
adc
stos
inc
shl
fdiv
aaa
inc
pop
(bad)
ficom
jne
or
cs
xor
iret
pop
and
repz
mov
inc
jmp
fst
pop
add
inc
pushf
mov
mov
push
retf
loopne
cmp
inc
cwde
sub
xchg
sub
into
cmp
mov
push
xchg
inc
pop
dec
jle
fs
nop
test
mov
sub
xlat
lock
dec
mov
jl
sub
xor
sbb
push
shl
pop
sbb
loopne
dec
adc
scas
in
div
xor
sbb
stc
sub
pushf
pop
cdq
dec
adc
push
pop
js
mov
add
sub
std
div
cmp
xor
xor
add
shr
mov
leave
dec
mov
dec
xor
inc
cmp
cdq
ins
aad
or
or
(bad)
adc
mov
cdq
stos
cmovnp
xchg
pusha
sar
sbb
xor
jno
dec
and
rcl
sahf
out
inc
mov
adc
in
das
(bad)
mov
add
ins
xchg
fwait
hlt
loope
scas
mov
out
mov
jno
push
in
or
jns
sbb
jge
dec
pop
jp
repz
inc
sbb
or
ss
dec
pop
imul
mov
xlat
dec
inc
fld
cmp
adc
cmovl
cmp
call
dec
xor
push
mov
cmps
sahf
adc
adc
jmp
dec
sbb
sti
call
push
cld
sub
mov
out
leave
iret
cmp
icebp
sub
xchg
xor
push
in
rcr
xchg
fmulp
sub
sub
imul
push
mov
jno
and
jns
xchg
mov
test
xlat
jl
ret
push
fnsave
lahf
fistp
jns
mov
mov
or
dec
jmp
dec
sbb
mov
repz
ins
das
or
cli
xor
enter
test
jg
das
in
inc
dec
repz
loop
sub
repnz
imul
jl
in
out
imul
jmp
std
jle
jb
pop
ret
cmc
repz
mov
mov
push
in
push
jp
loopne
enter
pop
push
popa
xor
mov
mov
retf
or
sbb
sub
sub
(bad)
jmp
inc
sbb
mov
push
bnd
inc
xchg
jl
adc
jle
stos
test
or
loopne
sbb
inc
ds
mov
rol
cwde
imul
mov
ja
lds
fs
outs
nop
jl
and
enter
addr16
loope
adc
ret
fstp
ret
push
data16
in
es
fdivrp
nop
adc
xchg
daa
jmp
imul
push
push
mov
es
jne
int
push
popf
outs
push
add
dec
outs
inc
sub
(bad)
stc
mov
push
aam
out
push
push
add
data16
out
add
cmp
sbb
arpl
popa
mov
jle
xchg
inc
in
in
xlat
xchg
int3
iret
popf
dec
pop
push
push
iret
pop
(bad)
imul
gs
js
inc
call
add
(bad)
mov
adc
std
adc
loopne
imul
or
nop
clc
pop
mov
sub
icebp
lds
xor
adc
jns
leave
mov
(bad)
leave
pop
jge
cli
and
jns
mov
outs
push
add
test
xor
cld
(bad)
int3
add
jb
cmp
scas
adc
push
ss
xchg
fucom
ror
jb
outs
test
inc
loopne
pop
add
test
adc
jo
int3
jne
lds
jg
cli
data16
aad
and
jecxz
inc
movs
ficomp
mov
mov
sub
ret
pop
idiv
repz
xchg
cwde
push
mov
scas
mov
dec
movs
cmp
ret
cmps
jo
hlt
in
sub
xor
jecxz
loop
inc
add
in
mov
lahf
ins
hlt
movs
mov
cmc
test
pop
arpl
pushf
mov
call
lds
in
jp
js
mov
arpl
ja
jne
fs
movs
inc
dec
and
fsubr
mov
pop
inc
sub
inc
pusha
(bad)
push
push
inc
call
sbb
mov
out
mov
test
retf
inc
mov
dec
sub
test
out
xchg
sub
xor
push
shr
add
pop
adc
fisub
xchg
add
ins
adc
lods
outs
in
in
dec
add
xor
xchg
test
mov
dec
in
imul
(bad)
push
jp
lods
rol
inc
out
out
lds
or
fwait
in
dec
call
mov
mov
pop
repnz
adc
cmp
and
clc
mov
add
je
sub
push
mov
icebp
inc
push
xor
sub
test
cdq
mov
jl
xchg
loop
pushf
loop
das
in
rcl
fiadd
addr16
mov
push
lahf
push
mov
shl
mov
shr
pop
aaa
pop
add
inc
sbb
cwde
xor
xor
shl
scas
pop
sbb
in
cmp
jo
in
out
iret
push
push
adc
idiv
retf
mov
in
gs
inc
jb
daa
pop
inc
jno
das
(bad)
jns
push
fdiv
pop
jno
xor
stos
sub
les
adc
cld
xchg
movs
(bad)
cmps
popf
xchg
pop
fnstsw
inc
mov
mov
js
jnp
les
adc
xor
lds
mov
add
popa
test
pop
jge
pop
leave
pop
lea
jp
xchg
sbb
xor
mov
stc
imul
or
out
cmp
popa
sbb
mov
mov
mov
push
pop
or
xchg
je
dec
mov
repz
je
in
adc
fwait
leave
clc
push
mov
inc
out
test
xor
inc
push
cwde
lods
pop
scas
xchg
push
cmc
mov
push
ja
movs
jnp
ins
adc
inc
xchg
adc
cmp
sbb
or
push
es
xchg
or
cmp
push
addr16
adc
add
fwait
ror
pop
neg
inc
add
dec
mov
mov
ror
cmp
ss
fnsave
rol
jo
cmp
dec
push
jno
mov
test
shld
mov
sbb
outs
aam
push
call
popa
fist
cld
in
test
imul
je
mov
neg
movs
sub
mov
xor
(bad)
sbb
ret
(bad)
lock
sub
push
loop
retf
adc
clc
add
enter
daa
in
pop
fldcw
sub
xchg
mov
dec
call
pop
outs
es
mov
mov
push
(bad)
icebp
adc
stos
dec
and
push
mov
push
movs
jb
sbb
dec
ins
repnz
call
sub
cs
lock
lods
jno
add
cmp
xor
pusha
in
jle
test
pop
aas
fisttp
jle
sbb
pusha
sub
movs
mov
push
xchg
test
inc
xchg
push
ins
sahf
(bad)
retf
add
cmp
xor
push
imul
fs
push
mov
sub
jns
or
ja
mov
inc
push
xchg
push
loopne
(bad)
dec
xor
in
inc
cmp
xchg
or
fild
inc
in
dec
push
jle
hlt
jnp
and
xchg
pusha
or
nop
jmp
inc
cli
retf
xor
inc
mov
(bad)
fnstenv
push
and
stos
sbb
sub
and
inc
jns
add
sub
jo
cmp
scas
add
mov
lods
lahf
and
sub
dec
mov
popa
lods
test
(bad)
dec
ss
jbe
sub
shl
js
call
inc
xchg
push
xor
imul
scas
(bad)
icebp
shl
ins
int3
fstp
mov
ffreep
rcl
and
fstp
(bad)
cmp
jge
jae
add
fisubr
cmc
es
loop
lods
test
cdq
inc
push
stc
in
xchg
sub
pop
mov
ins
xchg
push
out
xor
aad
stos
lea
(bad)
xor
inc
xor
outs
mov
retf
inc
jb
nop
cld
add
xor
fidivr
inc
enter
scas
mov
adc
xchg
pusha
or
test
cmp
dec
push
inc
sbb
dec
mov
mov
(bad)
addr16
cmp
inc
loope
jmp
cmp
mov
pushf
outs
(bad)
mov
vunpcklpd
iret
inc
jb
loopne
imul
pop
push
mov
cmps
js
and
movs
xchg
push
jge
out
xchg
and
xor
call
sbb
scas
mov
xchg
push
cmps
leave
xor
or
daa
add
fisttp
mov
sbb
jg
push
(bad)
xlat
cld
shl
outs
mov
cmps
pop
scas
das
test
pushf
sub
jmp
cmps
dec
test
cmp
xchg
ftst
sub
inc
adc
outs
pop
inc
mov
inc
leave
mov
xor
aad
xchg
mov
stc
icebp
sub
jmp
sbb
jg
jl
push
in
ror
xchg
dec
push
in
in
pop
jmp
int3
scas
mov
test
push
sbb
outs
adc
xor
adc
or
inc
rcl
popa
into
lahf
clc
aaa
out
add
dec
stos
je
idiv
add
add
hlt
xor
in
int
stos
pushf
pusha
ror
mov
cmp
or
cmp
inc
dec
xor
jge
inc
hlt
mov
sbb
or
in
xlat
clc
mov
inc
ror
in
sub
dec
inc
sub
rcl
cmp
in
(bad)
imul
ins
(bad)
std
xor
movs
mov
inc
out
xlat
pop
out
das
inc
jp
adc
cmps
mov
xchg
mov
inc
daa
xchg
(bad)
or
(bad)
mov
pop
dec
inc
mov
jge
cdq
dec
lods
sub
sti
xchg
fs
leave
ror
sub
cmp
pop
mov
and
push
or
movs
mov
addr16
pop
pop
and
xchg
adc
or
shr
push
xor
fimul
push
sbb
and
iret
and
retf
dec
rcr
adc
ss
mov
(bad)
(bad)
fistp
sti
aad
lds
jmp
fst
nop
cmp
(bad)
fdiv
xor
cmc
cmp
xor
pop
int3
mov
test
jmp
add
sar
or
es
adc
xor
pop
loope
pop
dec
shl
test
mov
or
in
retf
cld
nop
iret
mov
retf
pop
jge
adc
sti
dec
sub
arpl
sbb
imul
jl
cmp
stc
clc
mov
imul
mov
aad
std
sbb
sbb
jo
or
adc
leave
aaa
add
stos
inc
aaa
mov
jns
fnsave
shl
je
mov
out
add
cmps
add
fdivp
push
iret
jecxz
cmp
dec
mov
mov
stos
mov
xlat
enter
jbe
xchg
data16
xchg
pop
adc
fst
nop
cmp
sub
inc
or
inc
sub
test
cmp
sbb
add
lahf
enter
sub
aad
mov
in
into
in
xchg
sar
clc
xor
movs
push
sub
lahf
stos
pop
cdq
pusha
scas
nop
sbb
lods
mov
(bad)
call
lea
daa
mov
push
(bad)
inc
clc
pop
arpl
mov
sti
out
push
cld
push
and
cmp
popa
retf
xchg
xchg
dec
(bad)
inc
pushf
stos
mov
mov
jecxz
js
jg
aad
out
add
out
ficomp
pop
stc
jmp
add
iret
add
sbb
das
fld
mov
sub
push
add
ret
sub
mov
pop
cmp
lods
adc
sub
add
add
xchg
scas
inc
and
pop
cs
mov
inc
gs
sbb
cwde
out
xchg
movs
stos
sub
out
imul
out
pop
or
mov
inc
(bad)
cmp
retf
mov
cmp
mov
push
mov
mov
test
sbb
(bad)
rcl
hlt
cld
xchg
inc
add
mov
xor
imul
rol
inc
sbb
bnd
dec
lods
xchg
in
cmp
clc
xchg
xor
push
mov
inc
sub
sbb
jae
cmp
test
pop
mov
mov
push
jmp
mov
loop
aas
pop
or
sub
or
dec
xor
sbb
clc
xchg
xor
lea
jl
sahf
dec
pushf
stc
test
neg
pop
rcl
dec
sub
jmp
daa
mov
jno
stc
(bad)
xchg
mov
and
les
cmp
leave
pushf
fcom
add
test
in
cdq
(bad)
int3
es
mov
bound
add
jbe
cmp
adc
pop
rol
sti
push
nop
inc
(bad)
nop
cmps
and
and
mov
rcr
jbe
aad
repz
pop
sbb
sahf
adc
sub
adc
or
movs
std
adc
movs
jns
push
repnz
xchg
xor
call
gs
jae
aam
push
pushf
push
cmp
jecxz
pusha
adc
call
cmp
mov
xor
sbb
mov
push
loopne
dec
dec
mov
ret
dec
stos
je
jnp
movs
(bad)
fs
xchg
jmp
jp
xlat
fldcw
lods
adc
mov
pop
dec
add
mov
xchg
repnz
sub
adc
mov
inc
add
in
call
push
mov
xchg
loop
or
rol
jp
cmp
sbb
aam
xchg
push
mov
pop
or
add
sub
or
leave
int3
outs
sub
inc
je
or
pop
aaa
cld
and
sbb
cs
sub
pop
fwait
add
adc
or
gs
inc
retf
addr16
mov
aam
(bad)
xchg
xor
sbb
repnz
call
test
add
pop
xchg
jmp
les
popf
je
pop
mov
sti
scas
pop
mov
dec
mov
xchg
push
loop
jnp
fst
out
xchg
mov
mov
sbb
pop
iret
in
adc
(bad)
push
sahf
repz
inc
sbb
ins
aam
push
adc
xchg
movs
or
pop
addr16
mov
(bad)
cmp
aam
and
add
and
xor
sbb
or
outs
add
jno
or
pop
pop
jb
push
scas
sub
mov
pop
aas
aam
jae
push
pop
adc
popw
je
loopne
call
jge
xchg
hlt
rcr
or
pop
(bad)
mov
in
xor
fimul
pop
dec
mov
mov
add
out
fnstcw
push
retf
pop
ror
add
inc
mov
jne
or
adc
push
aaa
mov
addr16
xchg
mov
xor
test
xchg
lds
in
cmc
rol
push
outs
xchg
pop
mov
jae
retf
mov
push
je
push
mov
sbb
aam
cli
je
clc
sbb
pop
mov
pop
inc
dec
bound
xchg
stos
sar
jmp
pop
dec
pop
xchg
xor
fdivr
pop
xchg
cmp
movs
(bad)
and
cmp
out
mov
sub
fwait
jno
cmp
sbb
cwde
xor
out
sub
dec
shrd
movs
sub
inc
and
cmp
mov
cli
dec
(bad)
push
xor
mov
cmc
sub
mov
jmp
idiv
(bad)
ficomp
jne
sub
in
mov
stos
pop
push
(bad)
out
jmp
sub
call
xor
les
xlat
pop
dec
imul
jnp
pop
mov
inc
(bad)
sub
int
nop
xchg
mov
push
jo
gs
out
mov
push
retf
(bad)
push
pop
push
das
and
mov
mov
js
call
popf
and
outs
mov
xchg
imul
jmp
inc
aaa
leave
fs
sub
enter
sbb
xchg
push
xchg
stc
std
jge
pop
xor
imul
jecxz
ficom
adc
out
sub
cmp
lock
arpl
jmp
(bad)
out
rcl
test
mov
(bad)
push
pop
jl
ja
inc
pop
nop
dec
popa
mov
mov
in
inc
mov
mov
pushw
(bad)
cmc
adc
(bad)
(bad)
mov
adc
pushf
shr
adc
add
xor
pop
inc
pop
cmp
mov
adc
in
or
jbe
scas
jg
xor
add
les
daa
loop
mov
mov
jne
outs
loope
enter
jne
std
mov
aaa
cmp
aas
mov
mov
xchg
sub
out
inc
clc
sub
jle
ss
jbe
xor
and
fmul
mov
add
imul
mov
or
fsubr
cli
nop
dec
push
in
pop
fnstenv
clc
dec
xor
mov
test
xlat
ja
ja
test
mov
dec
pop
sar
and
dec
dec
pop
jmp
(bad)
fbld
mov
fist
mov
iret
sbb
xchg
dec
mov
dec
adc
mov
sub
movs
int3
adc
test
cwde
iret
pop
mov
in
clc
mov
test
dec
mov
mov
add
dec
loope
dec
pop
fiadd
xchg
or
pusha
push
lea
int
sub
and
sbb
jne
test
pop
mov
push
retf
std
dec
add
pusha
lds
cs
fwait
stos
cmp
in
mov
call
mov
(bad)
hlt
(bad)
call
xchg
and
dec
xor
pop
mov
mov
test
cmps
aas
mov
ja
sbb
cmp
jge
jmp
aaa
fnstcw
xchg
bound
inc
loop
repnz
sub
push
mov
jne
aaa
fsub
xor
add
mov
je
jb
ja
dec
pop
int3
rcl
lahf
(bad)
jp
sar
dec
xor
gs
test
mov
test
das
dec
aad
pop
xchg
cwde
ins
xchg
pop
jnp
(bad)
push
adc
fwait
mov
and
cmp
xlat
mov
add
pop
in
or
ret
mov
fsub
inc
dec
mov
jbe
add
dec
mov
movs
inc
stc
out
mov
(bad)
repnz
inc
and
outs
push
jp
push
mov
lahf
push
inc
add
xchg
daa
fiadd
test
data16
aam
dec
mov
mov
inc
and
xor
push
(bad)
push
call
cmp
es
(bad)
sar
outs
out
into
lock
je
pop
pop
stos
ins
jo
sbb
or
inc
repz
repz
in
fdiv
iret
mov
call
fstp
xor
mov
pushf
cmp
add
ds
stc
ror
mov
xlat
mov
adc
in
adc
and
loop
inc
int3
test
(bad)
jmp
stos
(bad)
repz
lahf
mov
cmp
push
mov
xor
dec
(bad)
sub
mul
cmp
push
jg
mov
inc
inc
adc
cmc
cs
and
imul
mov
stc
cmp
jge
push
mov
push
jle
dec
push
repz
faddp
loope
pop
ins
adc
call
jmp
outs
jne
in
scas
or
out
std
scas
xchg
fisub
fimul
das
dec
fsubr
scas
xchg
sbb
into
sbb
int
fld
mov
inc
lea
mov
adc
push
mov
repnz
int3
or
lds
xor
icebp
sub
repnz
pushf
adc
jg
popa
mov
jmp
mov
(bad)
std
pop
cld
jo
or
aam
fdivr
aad
sar
jg
int
(bad)
aaa
mov
jae
push
int3
imul
test
push
inc
loope
nop
cmp
in
push
adc
jle
xchg
(bad)
pop
cdq
movs
xchg
repnz
out
dec
fidivr
fimul
xor
mov
cmp
imul
mov
adc
dec
mov
shl
imul
dec
mov
or
repz
mov
mov
jno
sbb
out
push
dec
test
add
icebp
pop
stos
cmp
je
cmp
aad
fsubr
sbb
or
mov
sbb
pop
or
cmps
iret
mov
adc
rol
cmps
cmc
cmc
arpl
ss
push
dec
cld
cli
ss
dec
ins
pushf
xor
xchg
ds
xor
jp
int
fld
mov
mov
outs
or
leave
sti
ret
xor
add
jb
pop
jg
arpl
pop
xor
and
int
mov
add
call
cld
jne
enter
scas
jmp
jae
arpl
xchg
or
pop
mov
rol
cmp
pushf
(bad)
xchg
adc
stos
xchg
scas
ja
test
rcl
pop
icebp
sub
leave
(bad)
push
mov
mov
or
cmp
inc
mov
cmc
(bad)
or
inc
mov
iret
xchg
sub
cld
xor
pop
cli
xchg
mov
fwait
nop
cmp
js
or
mov
xor
inc
inc
adc
sbb
adc
cli
or
mov
adc
pop
inc
loopne
call
xor
icebp
mov
(bad)
jns
inc
sahf
lods
xor
add
push
js
push
mov
mov
push
cmp
push
mov
adc
rcl
push
shl
pop
push
fsubr
add
jo
xchg
mov
into
xchg
fld
jmp
imul
out
push
cmp
pop
dec
jp
adc
mov
xor
sahf
es
pop
aad
pop
loopne
pusha
outs
and
jge
inc
call
mov
test
mov
js
dec
jle
or
out
imul
test
dec
cmps
adc
jecxz
and
rol
and
mov
push
nop
mov
leave
test
stc
inc
or
cld
cmps
sbb
enter
aaa
xchg
bound
push
cs
adc
jnp
test
mov
(bad)
jnp
mov
push
xor
add
inc
cwde
mov
fcomip
test
retf
mov
cdq
adc
mov
jb
pop
aaa
lods
and
test
pop
mov
xchg
dec
outs
jo
xchg
imul
inc
inc
(bad)
gs
loopne
xchg
imul
into
sar
cmp
xchg
fs
sbb
scas
lock
dec
xchg
mov
hlt
and
xor
std
jge
mov
test
push
jmp
cmc
adc
test
inc
aaa
sbb
fs
inc
fstp
and
enter
inc
inc
inc
cmp
and
(bad)
pop
xchg
mov
cs
sbb
or
lea
loopne
out
aas
mov
push
pop
test
push
mov
call
mov
sub
aas
sbb
xchg
add
cs
jle
mov
fst
retf
jl
sub
jb
inc
fwait
cmp
jge
popf
cmp
dec
xchg
sub
jl
test
pop
mov
icebp
and
cmps
call
or
mov
inc
repnz
clc
rol
dec
gs
loop
in
daa
scas
dec
lods
retf
add
aaa
pop
add
sahf
mov
cmc
aas
lahf
mov
push
retf
pop
not
xlat
mov
xor
addr16
sub
xor
sbb
(bad)
aas
movs
lds
call
je
ret
mov
jle
push
mov
loope
sbb
out
sub
cmc
in
mov
xchg
mov
xchg
lea
enter
out
pushf
mov
sub
ins
mov
pop
cmp
fsub
outs
mov
or
sti
xchg
pop
(bad)
(bad)
mov
ror
pusha
cmc
adc
adc
sub
clc
bound
in
imul
retf
enter
sub
popf
add
jne
xchg
das
ret
pop
fs
(bad)
sub
mov
xor
cmp
mov
dec
gs
les
mov
mov
(bad)
sbb
push
sub
mov
(bad)
lock
inc
push
sub
ret
dec
ss
sar
fst
cmp
loope
aam
sbb
and
iret
xchg
es
(bad)
sub
and
std
cmp
ret
pop
call
ss
shl
shr
and
in
xchg
pusha
xor
xchg
mov
(bad)
xchg
mov
jne
push
adc
lea
cdq
cmps
sub
gs
sub
mov
or
adc
push
addr16
pop
fdivrp
jnp
inc
repnz
push
jne
or
fwait
pop
jae
add
cs
sub
xor
dec
and
call
outs
jno
scas
inc
fidivr
scas
nop
out
cmp
dec
cmc
leave
lods
push
int3
daa
fisttp
mov
mov
aam
dec
push
arpl
psubusb
or
pop
cmp
adc
pop
dec
xchg
scas
call
add
mov
xchg
js
adc
jp
sbb
lahf
cmp
iret
int3
aas
mov
lods
mov
sbb
adc
cmp
daa
fmul
(bad)
mov
adc
cmp
add
pop
inc
ret
in
push
and
push
and
push
std
out
push
push
sub
jns
adc
mov
sub
test
ds
cdq
scas
sti
or
push
icebp
gs
call
xor
xor
int
inc
mov
hlt
and
mov
jbe
push
pop
pop
ss
popf
addr16
lock
ss
stos
dec
adc
sti
out
leave
jp
cdq
inc
popa
loop
push
jns
aaa
sbb
nop
mov
mov
les
das
mov
icebp
cdq
imul
ret
cmps
cmp
add
jns
das
push
(bad)
int
add
xor
sbb
jmp
fxam
std
data16
scas
int
push
pop
sbb
xor
push
movs
dec
mov
fcom
iret
xchg
inc
xor
mov
mov
cmps
fnsave
nop
nop
(bad)
xor
mov
test
adc
jp
icebp
(bad)
cmp
nop
(bad)
cmps
imul
aam
loop
retf
sub
adc
pop
enter
daa
xchg
stos
fsub
jmp
shl
aas
inc
jne
sub
xchg
jno
test
leave
cmp
movs
sub
inc
adc
mov
pop
inc
rol
push
(bad)
pop
jge
dec
cmp
pop
cmp
out
retf
lock
xor
aas
jge
call
jge
and
push
(bad)
and
jns
sub
fwait
ret
jl
pop
daa
jmp
sbb
cmp
push
cs
pop
xor
retf
test
push
loope
jecxz
mov
mov
jl
retf
pushf
push
pushf
fldenv
xor
mov
or
sti
mov
or
sub
push
or
fld
fisubr
pop
cmp
sbb
les
and
in
aas
mov
loope
test
cli
sbb
mov
or
fwait
xor
inc
mov
fs
add
or
ds
dec
dec
mov
jp
pop
cmp
dec
fisttp
pop
push
out
outs
outs
lds
(bad)
push
leave
pop
dec
jb
xor
mov
mov
ret
cmps
inc
(bad)
lock
mov
ss
sub
push
or
inc
pop
xor
pop
ret
cmp
jp
xchg
cli
fcom
adc
std
adc
mov
xor
adc
xchg
dec
xor
cld
fidivr
push
ret
arpl
push
xchg
pop
fisttp
les
push
rcl
pop
das
lods
or
pop
mov
hlt
shl
(bad)
push
das
std
push
mov
or
cmp
adc
std
sub
lods
repnz
into
lock
leave
or
lock
cmc
movs
aad
jns
mov
and
or
sub
dec
cmp
int3
push
and
or
and
add
add
(bad)
mov
mov
xor
out
(bad)
inc
int3
rol
cmp
sub
push
mov
jns
push
xlat
neg
jnp
pop
adc
mov
fsubr
jno
add
push
retf
ror
test
adc
repz
cwde
ins
sbb
(bad)
hlt
ja
or
sub
and
ins
and
cmc
int3
popf
loop
inc
call
mov
loopne
into
cmps
adc
sti
mov
cs
adc
or
ss
lock
and
cmc
xchg
add
adc
xchg
xchg
xchg
or
inc
mov
hlt
add
push
xchg
push
sub
mov
aas
fld
sub
mov
jle
lock
adc
sub
xchg
xchg
fstp
lahf
push
add
mov
aad
test
nop
adc
mov
(bad)
(bad)
imul
push
jecxz
adc
mov
adc
push
inc
aas
sub
retf
arpl
or
add
xor
movs
sbb
xchg
jmp
push
inc
xchg
xor
(bad)
adc
out
pop
pop
cmp
inc
or
ret
ret
repnz
lods
arpl
sub
test
iret
push
out
mov
and
inc
test
das
xchg
scas
data16
pop
out
jecxz
cmove
scas
dec
and
and
hlt
xchg
imul
neg
mov
pop
xchg
xlat
and
in
nop
lea
jmp
out
pop
sub
push
sbb
add
and
mov
lock
aad
stos
sbb
jl
bnd
stos
adc
test
cmp
push
pusha
jae
pop
aas
or
out
cwde
push
or
sbb
sub
pop
out
mov
stos
xor
and
jne
xor
inc
mov
adc
jl
test
cmps
sahf
rcr
or
mov
sub
jb
retf
inc
push
mov
pop
es
inc
mov
jmp
jno
std
mov
cmp
mov
adc
xchg
mov
dec
cs
pop
mov
(bad)
fmul
rol
movs
push
loope
xchg
adc
sbb
neg
ror
xor
out
hlt
cmp
outs
mov
rcl
inc
push
sahf
popf
push
js
pop
inc
pop
mov
ins
bound
adc
pop
and
test
or
shl
in
mov
shl
daa
mov
jg
jbe
cmp
push
div
and
sahf
inc
mov
ficom
pop
jae
push
xor
add
cmp
shr
lds
pop
aad
fld
cmp
sbb
fwait
out
xor
cmp
sbb
fcomp
xchg
xchg
arpl
push
adc
nop
icebp
mov
retf
das
mov
inc
fdiv
push
pop
nop
mov
outs
jle
retf
fisttp
adc
xor
jge
push
gs
or
outs
xchg
sub
daa
stos
mov
pop
pop
or
mov
xor
and
les
pop
cs
add
mov
in
ret
fisub
or
test
cli
push
mov
rcr
xlat
sar
push
test
cmps
test
sub
mov
inc
test
push
rcl
mov
in
in
sar
inc
xchg
or
fwait
mov
adc
and
xchg
mov
or
pop
jno
fst
in
aad
fisubr
sub
mov
mov
daa
cmps
out
sbb
push
pop
add
and
cmp
pop
sub
lock
popa
xchg
cmp
fst
jb
pop
test
xor
sbb
add
jg
jl
jno
inc
lock
mov
(bad)
cmp
jno
pop
or
movs
shl
and
aad
xchg
jl
xor
inc
gs
arpl
into
out
push
sbb
aad
dec
push
push
addr16
das
ret
mul
mov
inc
ja
call
xchg
movs
xor
sub
mov
mov
mov
frstor
push
xor
movs
jb
mov
iret
dec
pop
movs
cmp
test
iret
hlt
aam
cdq
sbb
lock
cmp
xchg
mov
mov
daa
push
jno
or
lahf
cmc
(bad)
dec
xchg
cmp
adc
aad
imul
jmp
mov
dec
push
in
aaa
dec
ret
rol
enter
sub
inc
push
xlat
and
loope
mov
cmp
test
push
fldcw
xor
or
pop
out
cdq
out
or
pop
dec
jmp
sbb
jmp
cmovo
mov
stos
into
mov
lock
out
jnp
out
popa
jg
pop
jp
sti
pop
sub
sub
aam
cdq
arpl
daa
xchg
std
lods
out
in
rol
adc
push
ret
lock
add
(bad)
ror
pop
sub
inc
push
in
mov
data16
jmp
stos
push
push
(bad)
fs
push
mov
inc
sub
mov
data16
pushf
and
fucomp
ret
cmp
rep
add
in
pop
mov
rcr
clc
in
enter
or
cmc
test
std
dec
or
(bad)
mov
dec
lods
aaa
cmp
dec
into
or
push
mov
shr
jmp
pop
dec
xchg
jnp
jo
jbe
and
push
xchg
lahf
test
repz
fst
add
imul
cmps
stc
pop
iret
call
fsubp
add
adc
in
call
pop
or
sbb
inc
fidiv
ins
mov
sub
xlat
cmp
sbb
retf
adc
jne
jle
push
stc
lea
and
nop
dec
retf
sbb
sbb
xor
dec
or
push
cmps
inc
ja
xor
imul
aad
icebp
(bad)
daa
jp
push
mov
popa
inc
popf
xor
or
(bad)
cmps
shr
xchg
jl
pop
push
push
jmp
xchg
test
stos
clc
imul
inc
xchg
pop
repnz
and
iret
leave
loop
xor
lahf
outs
ss
pop
rcl
sub
push
int
cmp
into
xchg
or
jl
leave
outs
jmp
fnsave
xchg
pop
aas
xor
out
xor
fsubr
push
(bad)
sbb
and
sti
push
inc
lock
ins
scas
xchg
imul
es
cmps
fld
xchg
mov
lds
fsub
outs
dec
stc
sbb
mov
cmp
jmp
in
dec
iret
xchg
shl
mov
push
aaa
or
jno
xor
je
xor
or
(bad)
scas
sub
dec
mov
popa
jne
or
pop
stos
xor
std
mov
or
ret
dec
push
mov
shl
pop
rol
call
add
xor
mul
and
xchg
cwde
(bad)
std
gs
adc
(bad)
cmc
sbb
pushf
fisub
and
fbld
cmp
js
or
dec
inc
xchg
and
cmp
xchg
jne
pop
dec
icebp
fadd
pop
ss
jmp
ror
inc
cmp
push
popf
pop
cmp
sbb
mov
add
and
repz
(bad)
jae
xor
popf
mov
and
ins
fisub
push
popa
push
jbe
fsub
mov
aaa
xchg
imul
in
jmp
xchg
pop
lock
dec
daa
outs
jbe
cmp
punpckhwd
add
dec
jno
xor
xlat
repz
jle
cmps
pop
rcl
cmp
jp
mov
rcl
in
bound
stos
inc
cmp
jl
test
cmp
jle
jmp
test
mov
pop
sub
aad
push
xchg
test
inc
jno
sbb
dec
xchg
xor
add
pop
xchg
push
imul
or
mov
call
fst
or
fsubr
retf
mov
add
xchg
sbb
ret
ins
clc
dec
and
in
jmp
dec
and
ja
repz
pop
test
and
das
pop
dec
ins
out
stos
jg
jp
push
mov
pop
adc
stc
jnp
mov
sahf
loope
pop
push
mov
test
dec
mov
inc
inc
shl
mov
push
adc
jns
sahf
stos
pop
or
or
pop
sub
stc
repz
dec
sbb
adc
cs
stc
dec
pop
and
lea
aaa
outs
and
jmp
adc
mov
lods
or
lahf
mov
sub
jmp
sbb
mov
push
jns
mov
inc
cmp
mov
lea
(bad)
xchg
jno
fidivr
loope
repz
mov
or
push
int
push
and
aas
(bad)
loopne
sti
xor
adc
xchg
loope
scas
jle
rcr
out
cmp
movs
or
sub
xchg
xor
jg
(bad)
aam
pop
jecxz
mov
mov
cs
push
shl
test
cmps
add
push
mov
mov
fild
sub
pushf
add
inc
fwait
addr16
imul
test
int
mov
and
or
adc
dec
std
dec
pusha
push
jl
mov
dec
push
cld
repnz
inc
jmp
rcr
sub
or
mov
aas
je
test
or
dec
pop
cmp
jmp
jnp
lea
inc
cs
pop
data16
neg
mov
(bad)
fistp
ret
cmp
xchg
ja
mov
add
(bad)
adc
(bad)
cli
test
test
jne
in
xlat
icebp
scas
retf
in
adc
ret
or
das
stos
neg
add
mov
dec
cmp
fcmovu
xchg
lds
das
add
fld
loop
(bad)
sub
xor
nop
and
pop
outs
or
int3
dec
movs
sbb
outs
inc
adc
retf
call
inc
pusha
(bad)
mov
mov
jg
std
xor
cwde
jnp
inc
xchg
outs
iret
(bad)
mov
fmul
dec
xchg
inc
stos
adc
daa
or
ffree
std
cmp
inc
mov
jp
push
leave
and
stos
or
out
leave
fmulp
imul
push
mov
ficom
mov
xchg
jnp
(bad)
mov
(bad)
sbb
data16
jo
(bad)
stc
mov
dec
(bad)
test
retf
adc
push
xchg
fisubr
ret
cdq
adc
das
repnz
ret
test
out
mov
fxch
stos
out
dec
mov
test
cmovl
pushf
dec
push
push
cmp
cs
pushf
mov
rcr
add
(bad)
fst
outs
hlt
inc
adc
test
mov
fimul
sub
retf
lods
mov
xor
sub
sub
repz
(bad)
push
add
in
xchg
sahf
and
jp
cld
hlt
cmp
aas
sbb
je
sub
gs
add
push
test
sub
test
pop
xlat
xor
inc
dec
sub
cli
mov
inc
fcom
dec
jne
(bad)
jno
(bad)
jae
pusha
add
sub
mov
push
ja
jl
(bad)
mov
sbb
or
xchg
popa
ror
xchg
ds
call
and
out
inc
xor
out
jmp
dec
(bad)
sub
xor
adc
dec
popf
sub
jnp
jmp
rcr
xor
xor
mov
or
enter
cli
fwait
push
les
add
mov
dec
pop
cwde
or
push
(bad)
lock
ja
mov
lods
imul
xchg
push
add
retf
mov
or
pushf
(bad)
sbb
mov
scas
mov
mov
aad
daa
xchg
push
jbe
sbb
add
jnp
jle
xor
mov
or
loop
imul
cmp
es
sub
mov
mov
inc
mov
sbb
test
nop
dec
int
cs
ins
add
jnp
xchg
cmc
daa
ret
mov
pushf
jo
jno
or
mov
retf
out
jo
push
fdivr
sbb
push
sahf
inc
mov
cmp
add
lahf
sbb
out
mov
push
push
dec
xor
enter
jnp
addr16
rcl
repz
mov
mov
arpl
mov
and
test
movs
mov
dec
and
jne
push
aaa
jb
lods
mov
test
jg
mov
ds
jp
cli
int
fidiv
mov
aad
push
add
cmp
or
or
dec
pop
cli
out
or
fucomip
push
call
jecxz
xchg
faddp
jge
sbb
inc
ins
mov
(bad)
sti
jecxz
scas
xor
jg
in
add
ins
test
call
ins
mov
sbb
adc
cmp
stos
adc
mov
popf
in
xchg
adc
xlat
cmp
pop
pop
xor
lahf
lods
lahf
inc
retf
mov
inc
jmp
push
mov
stc
ficomp
loopne
mov
aaa
lods
cwde
lods
jmp
sar
jnp
jle
retf
xor
mov
dec
cmp
call
push
sub
push
cmp
popa
xor
imul
jecxz
sar
mov
ins
scas
ins
dec
out
dec
dec
imul
push
out
sbb
fisttp
gs
pusha
fs
or
adc
xchg
ror
(bad)
mov
jge
fidivr
cmp
push
loop
out
mov
call
(bad)
cmps
sub
rcl
push
pop
xor
push
xchg
popa
sahf
add
cmp
sub
inc
loop
inc
pop
or
movs
ins
mov
xchg
sub
inc
cmp
mov
pop
dec
adc
xor
push
inc
adc
icebp
mov
dec
xor
cmp
jno
shl
mov
jl
cdq
inc
push
xchg
ja
inc
mov
les
daa
arpl
lea
mov
sbb
sbb
xchg
push
pusha
dec
mov
gs
add
test
ret
jo
or
sbb
adc
js
adc
in
jmp
inc
invd
shl
test
jo
ins
push
sbb
repnz
dec
ror
loopne
xor
or
dec
xor
pop
stos
mov
and
or
xchg
loopne
adc
inc
pop
mov
push
push
ds
sub
(bad)
or
cmp
lods
popa
gs
cmp
out
ficomp
aas
div
or
pop
add
ror
push
inc
and
sbb
out
jecxz
std
mov
inc
lahf
adc
dec
fnsave
mov
arpl
add
push
mov
inc
adc
fcmovb
loop
aaa
mov
sbb
nop
dec
mov
(bad)
pop
cmp
push
fwait
jbe
(bad)
jbe
add
sti
stos
stos
xchg
or
out
xor
pop
dec
adc
and
dec
out
and
cmp
cmps
jb
xchg
fstp
out
jo
xor
int3
imul
je
xor
in
fidiv
mov
inc
popa
nop
cmp
jno
jns
inc
bound
xlat
mov
arpl
shr
inc
pop
xchg
xchg
fucom
jnp
jbe
movs
out
mov
add
or
scas
mov
cmp
add
mov
sub
mov
iret
xor
mov
ds
sahf
outs
sub
loope
cmc
pushf
mov
ja
inc
iret
pop
mov
sbb
(bad)
or
mov
xchg
add
mov
shl
outs
mov
xchg
test
dec
add
jmp
xchg
fwait
aad
mov
sbb
pmaxub
das
xchg
ins
retf
retf
mov
dec
jecxz
cmps
cdq
jecxz
dec
aam
dec
inc
xchg
ror
mov
(bad)
and
gs
jbe
jns
ins
loope
data16
xchg
and
push
and
and
fild
xchg
sbb
xor
xchg
mov
outs
jmp
or
fcomp
pop
jo
jnp
xchg
add
jge
inc
inc
mov
sub
mov
add
add
pop
jl
mov
dec
or
mov
mov
jbe
or
mov
fist
in
cmps
adc
ins
in
into
retf
jp
rcl
mov
pop
test
sti
outs
or
repnz
gs
sbb
shr
mov
pop
or
cmps
dec
xor
fadd
inc
ror
mov
push
mov
ins
xor
int3
or
inc
scas
dec
fisttp
cmps
add
ds
cmp
push
ret
xor
jge
pusha
mov
lods
shl
fisubr
dec
pop
jne
push
cld
mov
jg
jne
push
pop
cmps
mov
sub
adc
stos
sbb
cmp
jno
cmc
pop
mov
data16
daa
mov
add
adc
mov
adc
xor
(bad)
repnz
add
popf
add
daa
cld
dec
mov
sub
imul
add
rcr
hlt
(bad)
(bad)
and
lods
test
adc
cmps
xchg
movs
and
jg
nop
retf
jmp
sbb
rol
outs
xchg
ja
fisubr
cmp
repnz
xor
lea
repz
lods
push
dec
push
push
sub
push
in
cmp
ficomp
push
jno
xchg
cdq
pop
mov
dec
stos
inc
iret
cmc
shr
push
aad
xchg
push
xchg
inc
sub
fsubr
into
out
jbe
sub
pop
inc
inc
mov
dec
push
rcr
adc
push
popaw
sbb
lahf
shl
pop
enter
adc
push
jp
jae
lds
fimul
and
xchg
(bad)
xor
adc
inc
test
cmp
outs
fisub
hlt
mov
push
mov
dec
push
jbe
and
mov
add
dec
imul
popf
stos
adc
fdivr
sub
xchg
jp
jle
mov
jmp
push
(bad)
jb
(bad)
rol
dec
aad
add
out
mov
sub
xchg
js
mov
push
mov
mov
push
dec
nop
pop
sbb
movs
sbb
adc
mov
gs
fidiv
pop
int
pop
(bad)
pop
(bad)
daa
and
stc
loope
sub
popa
sub
pop
adc
ins
clc
mov
dec
sub
scas
inc
dec
sti
stc
outs
sar
adc
mov
out
cli
and
sub
ins
xor
lock
mov
arpl
enter
mov
xchg
sbb
adc
xor
imul
js
enter
scas
adc
(bad)
(bad)
mov
cmp
setl
fs
retf
jne
push
lds
sub
push
mov
cli
xor
pop
or
aam
ins
scas
ss
ja
retf
out
arpl
xchg
jnp
pushf
dec
in
mov
inc
sbb
mov
jae
cdq
xor
ffreep
jge
mov
imul
adc
dec
fwait
push
jno
into
jp
jge
int3
je
and
mov
das
loopne
sar
es
loope
data16
cmp
xacquire
cli
jns
and
ds
outs
cli
sbb
xchg
cld
push
std
scas
arpl
fistp
adc
and
out
rcr
dec
pop
shl
cmps
add
clc
gs
lods
ret
rcr
inc
jae
sbb
out
or
repnz
ins
sub
rol
dec
movs
out
jl
scas
les
pop
xchg
vmulps
sub
loop
ror
cdq
pop
loopne
imul
inc
repz
sub
outs
sbb
cmp
pusha
add
div
pop
mov
dec
scas
ins
(bad)
lods
fmul
ins
jb
es
out
jne
inc
jae
sub
xchg
lods
jnp
pop
loop
mov
add
adc
movs
xlat
and
xchg
ins
mov
mov
ins
xchg
and
test
mov
pop
mov
pop
jg
sbb
push
and
or
inc
ret
js
push
cmp
and
cmps
mov
adc
pop
jnp
setp
lods
dec
ja
dec
(bad)
imul
ins
jmp
in
ja
and
hlt
popa
cwde
adc
adc
dec
add
fbld
shr
scas
shl
inc
mov
jmp
push
retf
sbb
mov
aam
jge
push
icebp
iret
pusha
mov
push
add
hlt
ins
jmp
shr
sub
xchg
popf
xor
mov
call
xchg
(bad)
retf
in
aas
mov
push
jb
rcl
movs
push
mov
jecxz
mov
lods
mov
adc
mov
mov
mov
xor
inc
cmp
and
(bad)
cwde
mov
mov
xchg
mov
mov
and
pusha
dec
fbld
pop
cmps
xchg
mov
(bad)
faddp
into
shr
loope
and
mov
inc
mov
mov
mov
or
test
retf
or
push
add
sbb
mov
setae
xor
push
mov
inc
sub
lods
jg
or
jmp
in
aam
inc
mov
mov
fnsave
fiadd
dec
mov
mov
mov
lahf
in
or
xchg
dec
cld
inc
inc
ror
pusha
push
jnp
sub
push
test
mov
xor
pop
fstp
ret
pop
int3
jnp
or
dec
sbb
cmps
xor
mov
scas
(bad)
loopne
(bad)
into
ins
xchg
mov
stos
and
push
dec
mov
lods
or
mov
fld
stos
pop
add
mov
mov
(bad)
cs
je
jb
jecxz
ss
inc
push
add
call
add
aas
sub
sbb
shr
inc
(bad)
and
jmp
fstp
or
fdiv
mov
and
cmp
xor
or
pop
cdq
cld
mov
and
imul
(bad)
cli
sub
xchg
sub
neg
test
nop
mov
xor
adc
mov
inc
sbb
js
rcl
sbb
sub
scas
scas
lds
(bad)
mov
repz
mov
fdiv
inc
fild
mov
jne
pop
and
cs
ror
pop
inc
mov
(bad)
ficom
hlt
and
scas
ret
test
inc
cmp
push
jae
int3
sahf
xchg
je
pop
and
mov
inc
adc
and
stos
lahf
pop
dec
jge
cmps
ror
jge
dec
add
push
(bad)
adc
adc
popf
add
xlat
and
jecxz
call
push
jge
les
push
jecxz
ret
imul
lea
mov
loop
or
aam
sub
outs
inc
jno
and
push
sbb
js
es
test
or
pop
ficomp
mov
or
pushf
adc
pop
xchg
stc
add
sti
aad
and
sbb
(bad)
icebp
xchg
imul
js
rol
or
outs
mov
pusha
mov
inc
bound
mov
mov
push
(bad)
sub
xor
mov
in
and
and
push
enter
push
fxam
jge
push
jge
cs
mov
add
cli
ins
ja
sbb
out
fistp
dec
push
shl
fwait
lock
fld
mov
push
jmp
lds
loope
mov
push
stc
into
aas
sahf
pop
mov
int3
fiadd
ja
je
sub
data16
or
add
clc
mov
in
je
mul
icebp
mov
loopne
cmp
fdiv
stos
int
imul
or
mov
xchg
adc
jl
mov
(bad)
push
fsubr
add
jne
mov
out
mov
popw
sbb
int3
call
icebp
sbb
pop
and
clc
fbld
arpl
test
add
jmp
rcr
pop
jmp
dec
cmps
add
retf
push
mov
push
jnp
(bad)
inc
arpl
into
pop
aaa
adc
cmp
jmp
mov
jle
sbb
stc
mov
dec
mov
dec
mov
xor
add
sub
(bad)
xchg
test
ret
aam
sti
push
pop
add
push
mov
mov
xchg
dec
add
lods
imul
aam
addr16
cwde
mov
je
jb
xchg
cmp
ret
push
ret
mov
sub
bound
cpuid
stos
(bad)
xlat
loope
mov
push
cmp
pop
movs
dec
sbb
fidiv
popa
and
and
out
shr
rol
jmp
shl
or
aam
repnz
add
dec
daa
pop
dec
add
xchg
pop
mov
sub
cmc
jmp
mov
retf
fisubr
imul
sahf
jb
pop
int
(bad)
fs
fisub
push
idiv
jae
in
mov
mov
add
mov
fsubr
test
push
sbb
shl
cmp
scas
add
scas
mov
mov
rcl
cmp
imul
mov
(bad)
aas
push
sub
iret
cs
fs
leave
or
ret
neg
cs
stc
mov
cwde
dec
ss
inc
pop
test
gs
fild
movs
iret
pop
jno
scas
ja
xor
or
lahf
repz
sti
test
movs
and
inc
pop
dec
lahf
sbb
xchg
or
sar
sub
fadd
adc
cmp
jnp
jmp
scas
mov
xor
mov
dec
stos
nop
pusha
gs
mov
jmp
adc
cmp
pop
or
(bad)
outs
xchg
retf
ret
ja
jae
in
mov
out
xchg
ins
jl
stos
test
fiadd
ins
data16
mov
(bad)
(bad)
cdq
xchg
pop
mov
imul
ds
call
mov
xor
ja
adc
xchg
xchg
xchg
fwait
mov
imul
xchg
or
dec
pop
or
xchg
ret
sub
mov
and
out
imul
xchg
imul
ins
lahf
in
jp
dec
mov
into
cmc
push
iret
jmp
imul
stc
mov
mov
dec
mov
cmps
mov
jne
adc
xchg
(bad)
fst
call
jl
enter
ins
hlt
les
das
add
(bad)
jbe
jmp
inc
icebp
dec
inc
mov
cmps
aad
xchg
std
shr
adc
icebp
sbb
fbstp
push
xor
and
add
(bad)
leave
cmp
retf
mov
inc
jmp
push
cmp
inc
mov
add
sbb
ss
(bad)
mov
inc
push
and
les
push
dec
and
xor
adc
inc
or
or
xchg
clc
movs
int
shr
cwde
sbb
mov
aaa
data16
mov
or
inc
cmp
mov
test
cmp
in
fcomp
xchg
jno
xor
(bad)
lea
push
ss
or
pop
cmp
leave
or
div
push
test
jg
ret
pop
(bad)
sub
test
mov
or
test
fisub
xchg
sbb
neg
push
fisttp
outs
je
dec
pop
cmp
mov
jecxz
dec
jecxz
inc
fstp
call
pop
loop
inc
retf
cmp
push
xchg
mov
sub
inc
add
fwait
repz
das
and
pop
jmp
mov
bsr
mov
jb
sbb
pop
push
push
(bad)
(bad)
out
jns
imul
jb
ins
inc
cs
outs
jnp
aaa
add
frstor
das
rcr
in
xor
ins
sbb
cmp
sbb
or
xor
jl
xor
enter
xor
push
adc
inc
arpl
xchg
mov
(bad)
jmp
and
es
sbb
mov
mov
xchg
iret
test
into
dec
adc
mov
mov
xchg
into
neg
dec
jmp
sub
fwait
lahf
fld
xchg
jbe
repnz
add
int
or
sti
hlt
leave
mov
arpl
xor
xchg
pop
push
sbb
inc
in
pop
loope
pop
mov
mov
add
call
push
sub
jbe
push
retf
clc
push
xor
jb
js
jae
push
push
jmp
add
adc
pop
rcr
adc
not
pop
mov
gs
fdiv
dec
scas
es
and
jecxz
aam
dec
pop
xchg
xor
push
mov
dec
sbb
js
out
dec
sub
dec
push
(bad)
push
fs
out
push
scas
mov
fld
or
add
dec
adc
sbb
dec
mov
pop
test
das
sbb
inc
retf
out
cmp
aaa
pushf
mov
shl
retf
adc
jno
into
adc
adc
out
and
stos
adc
sub
icebp
jnp
push
sub
jmp
ins
lea
ins
js
jnp
xor
mov
test
cwde
(bad)
idiv
loop
outs
imul
adc
dec
imul
xor
mov
or
adc
(bad)
inc
push
inc
enter
das
div
or
fwait
push
sub
mov
enter
sub
(bad)
mov
and
jne
imul
pop
jo
xor
fmul
push
pop
xchg
lock
sbb
fmul
dec
push
aam
jne
inc
lods
stos
mov
cmps
or
imul
mov
or
adc
mov
cld
clc
gs
jl
add
pop
jne
mov
add
inc
xor
(bad)
call
lahf
sbb
mov
xor
into
cmp
or
sbb
popa
das
mov
add
jg
loopne
scas
pop
jge
cmp
fmulp
sahf
hlt
inc
sahf
rcr
bnd
or
stc
jb
adc
pusha
add
adc
or
pop
inc
push
dec
aam
ds
in
xchg
clc
mov
mov
sbb
push
push
cli
ins
pusha
out
cld
pop
jns
leave
mov
and
ja
movs
jnp
mov
inc
inc
dec
lea
dec
or
lods
stos
cs
push
pop
mov
in
adc
pop
push
frstor
shl
cmp
jno
stos
aam
ds
ins
inc
inc
ss
jb
mov
cmp
lahf
pop
fsubp
rcr
and
push
stc
in
les
es
pop
xor
cmps
dec
add
movs
push
les
ror
xchg
xchg
mov
pop
cmp
adc
into
mov
sub
or
add
aam
test
mov
and
fcmovne
jno
call
shl
int
rol
cmc
addr16
xchg
sti
jmp
add
inc
(bad)
xor
iret
mov
cwde
fdiv
cdq
pop
dec
or
jge
mov
push
sbb
pop
(bad)
in
call
addr16
shl
sub
aad
or
add
cs
lods
jecxz
cmps
jae
imul
stc
or
pop
push
sbb
cmps
out
pop
ror
or
or
mov
aaa
push
or
js
mov
(bad)
clc
xchg
(bad)
xchg
test
in
add
loop
or
sbb
inc
mov
or
retf
pop
fdivr
pushf
xlat
(bad)
leave
aad
mov
fs
aaa
retf
jmp
fdiv
pop
xchg
push
out
movs
push
in
fnsave
out
push
jnp
(bad)
inc
daa
mov
mov
and
dec
out
pusha
jmp
cwde
loop
add
and
lods
aam
mov
sub
xchg
adc
sub
xchg
dec
sub
stos
in
pminub
aad
xchg
sbb
je
xchg
add
jp
mov
rol
out
ss
lods
adc
stos
cmp
rol
ret
and
inc
ins
xor
outs
lods
in
je
mov
sub
sbb
mov
pop
jg
shl
aaa
and
jp
adc
stos
jns
xchg
movs
icebp
sub
fsubr
ret
xlat
jne
ja
adc
adc
sub
lods
bound
fiadd
nop
pop
test
mov
inc
cmp
pop
int3
call
icebp
jg
es
mov
or
dec
loopne
inc
lods
push
fidiv
or
frstor
adc
push
mul
popa
out
cmp
jge
fldcw
int
pop
pop
xor
jne
sbb
cmps
mov
retf
ror
push
push
jmp
test
hlt
pop
cli
mov
pop
out
leave
sbb
xor
cmc
fadd
fs
ret
push
xlat
mov
int
je
and
xor
cmp
or
xchg
sub
xor
mov
xor
je
xchg
mov
jge
loope
cmp
mov
ja
xchg
call
inc
dec
out
pusha
je
jae
inc
xor
pop
dec
fldcw
mov
test
lea
or
rcl
pushf
jns
cdq
jb
jnp
mov
add
inc
scas
sbb
stos
push
fs
pavgw
xchg
sbb
aad
push
jo
cmc
add
cmp
cmp
shr
xchg
pop
cmp
nop
inc
inc
push
mov
shl
in
pop
jg
cmp
cli
and
test
pushf
xor
fmul
mov
popf
pop
xor
mov
fstp
repnz
push
jecxz
mov
push
sahf
sti
int3
mov
stc
js
xor
mov
pop
sub
das
cmp
and
cmp
mov
ret
fsubr
dec
push
push
mov
inc
jmp
jae
mov
push
jmp
mov
jl
pop
in
jl
stos
inc
and
fdiv
(bad)
cmp
pop
lds
aas
pop
in
xchg
mov
pop
sahf
bound
mov
xchg
pop
cmps
outs
in
setp
mov
fsubr
jb
jge
clc
adc
in
pop
jnp
loopne
pop
je
cmps
dec
push
mov
xchg
fmul
std
inc
sahf
popa
mov
push
movs
loop
jp
cmp
pop
popa
loope
inc
pop
cmp
add
inc
repz
mov
xor
push
fmulp
push
cmps
adc
cmc
retf
outs
dec
jns
aad
inc
js
in
xor
inc
inc
fwait
repnz
push
mov
ret
jae
aam
sub
xor
and
std
mov
pop
jae
cmc
pop
pop
push
das
or
sahf
cmc
mov
or
in
cmp
inc
inc
sbb
(bad)
in
shr
fst
call
mov
movs
mov
mov
or
sbb
mov
and
push
fdivr
(bad)
std
adc
jno
leave
pusha
cli
ret
xor
push
enter
shr
lahf
movs
imul
(bad)
xor
loope
jmp
pop
out
rcl
out
aad
inc
push
out
xchg
(bad)
out
stc
in
mov
leave
sbb
hlt
and
out
int3
sub
dec
push
movs
xor
(bad)
popa
rcr
or
in
jmp
adc
push
(bad)
mov
jmp
movs
push
cli
push
lock
es
mov
fisub
pop
adc
int3
sub
repnz
cli
jno
xchg
jl
loop
cmp
scas
adc
sbb
and
stc
push
mov
sahf
mov
dec
cmp
ins
mov
xchg
pushf
add
dec
lock
jmp
cmp
jns
popa
ds
sbb
fadd
sbb
retf
jne
cmc
mov
leave
or
int3
xchg
jp
sub
cmps
shl
dec
jmp
cmc
lock
ss
retf
sub
push
out
push
jmp
and
(bad)
ror
test
cmp
sbb
adc
sbb
or
rcl
dec
ja
push
lods
into
loope
ror
fmul
stc
mov
cmp
mov
xor
ficom
sti
xor
in
add
pusha
xlat
test
or
pop
xor
cdq
sub
mov
cmps
sub
shl
popf
mov
and
call
bnd
mov
bound
test
fstp
inc
xchg
adc
pop
dec
push
rcl
std
(bad)
imul
mov
xor
mov
mov
sub
sar
or
pop
(bad)
into
movs
and
stos
and
(bad)
scas
mov
xchg
jnp
gs
inc
push
lock
repnz
pop
in
inc
fld
xchg
ret
jno
cmp
cmp
js
mov
or
loopne
xor
xchg
jno
(bad)
and
popf
pop
retf
lea
inc
xor
push
mov
int
cmp
cmc
xor
push
in
push
mov
and
movs
rcr
je
mov
xchg
push
mov
cmp
dec
mov
mov
mov
and
in
scas
scas
mov
mov
sar
and
pop
add
fadd
push
nop
call
shr
pop
cdq
inc
inc
ins
mov
mov
sbb
xlat
xchg
clc
mov
lds
xor
inc
jns
int3
fstp
pop
in
ss
je
(bad)
cli
(bad)
loop
xor
fdivr
dec
mov
pop
js
loop
mov
cmp
repnz
dec
imul
ror
push
xlat
loopne
imul
in
cmp
stc
jge
and
xor
sub
pop
daa
mov
clc
stos
(bad)
dec
inc
mov
js
fdiv
pop
mov
rcr
in
inc
enter
mov
inc
inc
cld
lods
mov
or
fimul
sar
pop
cwde
mov
mov
add
out
pushf
mov
push
pop
cmp
mov
mov
out
jae
in
cmp
gs
mov
rcl
popf
ret
cmc
scas
xor
cmc
sbb
push
inc
cmp
mov
jo
in
mov
jge
pop
mov
jl
es
or
test
mov
dec
loopne
jmp
mov
dec
ds
mov
int3
hlt
xchg
sbb
fdivr
mov
not
adc
push
sahf
xor
and
loope
inc
xor
ds
je
arpl
adc
enter
ss
and
jl
push
icebp
ret
ss
sub
mov
or
into
idiv
xchg
jg
fdivr
jnp
push
inc
cdq
push
push
or
mov
shr
sub
mov
jae
hlt
nop
fisttp
pop
out
cmp
fs
xchg
mov
popa
(bad)
dec
xor
dec
and
mov
lods
test
dec
pushf
add
mov
xchg
aad
mov
imul
ret
pushf
jbe
add
lds
dec
or
xchg
mov
mov
stos
xchg
nop
dec
push
xor
mov
stos
ins
sub
sti
stos
cs
in
nop
dec
dec
sub
pop
loop
fdivr
mov
lds
into
dec
shl
(bad)
idiv
mov
and
ss
push
dec
xlat
cld
mov
aaa
iret
adc
stc
sub
addr16
daa
cmc
inc
adc
jl
xor
loop
pop
cwde
cld
cdq
or
cmp
or
outs
repnz
(bad)
int
in
shl
dec
popf
test
jae
mov
mov
xor
pushf
jmp
(bad)
loope
push
mov
jne
aam
pop
cld
je
xchg
sbb
addr16
push
int3
xchg
(bad)
mov
jl
pusha
adc
fild
push
xor
fxam
pop
inc
sub
js
dec
in
test
inc
test
ins
jae
xchg
js
adc
inc
call
out
sbb
adc
xchg
push
loopne
into
and
shl
fld
in
jmp
std
sub
xor
shl
inc
jb
(bad)
lods
(bad)
cld
xchg
cmp
in
sub
sub
cs
arpl
or
mov
loopne
adc
test
les
loop
adc
xchg
inc
mov
sbb
and
jecxz
pushf
dec
xor
push
mov
(bad)
push
hlt
mov
cmp
jo
movs
mov
pop
xor
mov
fs
int
popf
fwait
mov
out
ins
push
retf
sub
push
adc
and
jno
test
mov
inc
fnstsw
fdivr
xlat
data16
sti
dec
and
push
call
bound
push
sub
xlat
test
movs
stos
mov
pop
je
adc
in
mov
inc
push
push
jge
gs
xchg
scas
pop
inc
push
pop
pop
push
cmp
jecxz
dec
popf
or
sbb
imul
scas
mov
pop
mov
inc
jg
jle
or
xchg
jmp
lods
fsub
xchg
or
jp
sub
ss
enter
add
leave
cmp
(bad)
push
jp
jp
sub
mov
mov
jl
mov
dec
ror
call
pop
inc
mov
mov
(bad)
add
movs
(bad)
cmps
(bad)
(bad)
cdq
retf
vaddps
or
and
in
push
mov
cmps
and
xchg
loopne
push
mov
(bad)
in
lea
cmp
mov
dec
mov
sub
cmps
and
push
jae
mov
dec
mov
push
xor
adc
xchg
sbb
mov
adc
or
mov
pop
sbb
pushf
(bad)
aam
adc
dec
lock
bound
popa
es
pop
imul
jae
fstp
int3
mov
xchg
sub
mov
pop
add
sub
push
cmp
cmp
pop
fisttp
mov
sbb
xor
iret
mov
nop
sub
ins
call
out
xchg
fwait
adc
jns
arpl
mov
pop
mov
and
dec
jl
jne
add
pop
dec
xor
stos
or
cmp
push
push
add
popa
or
mov
clc
or
hlt
jge
cld
jne
popf
xchg
push
mov
pop
sub
stos
imul
shr
push
dec
jno
push
leave
pop
stc
mov
pop
das
add
xchg
and
xchg
mov
in
stos
daa
out
mov
push
call
jb
inc
sub
add
out
ins
pop
arpl
leave
cmp
lods
(bad)
dec
sub
sahf
sahf
mov
dec
cmp
shl
inc
ror
dec
xchg
pop
or
dec
sub
fadd
adc
jp
retf
int3
cmp
pop
and
push
pop
xor
dec
xchg
push
(bad)
(bad)
cmps
daa
(bad)
je
xor
shl
xchg
clc
jg
inc
mov
sub
push
pop
ret
cwde
xor
jp
sub
clc
add
cmp
into
pop
fbld
out
dec
mov
xchg
je
sbb
clc
jne
mov
comiss
enter
mov
lock
aaa
inc
in
int3
jbe
fisttp
ror
jno
mov
cwde
and
fcom
enter
add
hlt
pusha
fs
sub
xchg
stos
repz
or
ret
(bad)
sub
mov
xchg
cmps
adc
ins
sub
jg
(bad)
cld
mov
xor
idiv
or
add
mov
xchg
imul
mov
rcr
clc
fist
sub
push
mov
mov
xchg
sub
lods
pop
pushf
test
inc
out
lds
sub
punpckldq
sbb
rcr
mov
sub
lods
push
or
jg
add
xchg
push
jle
stos
out
inc
sbb
and
div
add
xchg
stos
iret
adc
enter
stc
push
cmp
cmp
add
mov
cs
mov
mov
dec
ja
ins
mov
aad
pop
add
mov
jp
(bad)
and
leave
adc
push
xchg
or
pop
mov
cmps
cli
dec
movs
mov
or
or
mov
cli
test
in
mov
and
cld
cmp
div
stos
in
fs
in
cmp
imul
push
hlt
scas
xor
xlat
push
sbb
sub
movs
inc
ja
inc
add
xchg
and
xchg
int3
fimul
sar
or
jne
xor
mov
mov
cmps
cmp
add
in
mov
popa
fldenv
in
or
cmp
ins
das
in
or
push
scas
aas
rcr
dec
xor
fcom
sar
adc
cmps
cmp
es
adc
retf
and
jge
sbb
push
xor
add
jge
es
outs
rcr
add
or
push
dec
push
adc
inc
mov
add
sub
sub
data16
in
pop
xchg
(bad)
sub
push
arpl
(bad)
sar
es
xchg
cli
jo
mov
je
pop
daa
(bad)
pop
int
push
cwde
jo
(bad)
pop
dec
test
inc
mov
idiv
xor
cmp
cmp
sbb
xor
xchg
push
pop
inc
push
test
xor
and
in
push
daa
(bad)
jp
cmc
sub
idiv
jo
ins
fisttp
push
dec
pop
std
test
(bad)
dec
daa
in
dec
and
dec
lahf
lods
retf
sahf
fbld
and
push
std
add
dec
movs
popf
rcr
cdq
or
dec
jmp
or
cmc
and
pop
and
cli
mov
stos
div
imul
jne
add
jb
aam
mov
inc
hlt
test
xchg
cmp
add
jp
cmc
xchg
in
jg
nop
mov
xor
dec
ds
je
sbb
cli
push
smsw
and
mov
out
or
adc
adc
movs
fsub
mov
test
pop
retf
adc
mov
inc
xchg
movs
movs
iret
jo
mov
mov
repz
mov
and
mov
mov
arpl
pop
icebp
and
dec
ja
and
sbb
scas
mov
(bad)
dec
fisub
adc
adc
push
pop
jnp
dec
add
ss
scas
fistp
mov
jp
add
scas
(bad)
enter
lea
sar
pop
sahf
hlt
movs
cmp
sbb
add
mov
cld
leave
inc
cdq
lea
inc
jmp
or
mov
jle
pushf
mov
std
jl
das
adc
in
shl
iret
or
cmps
mov
jae
sti
and
ds
sub
mov
fs
mov
loope
ja
sbb
test
cli
ror
jge
movs
inc
dec
outs
xchg
imul
push
or
mov
shr
cmp
inc
gs
inc
out
jb
xor
(bad)
sub
xor
fsubp
call
pusha
pushf
cmp
cdq
stos
mov
test
mov
push
xchg
adc
scas
bound
(bad)
in
mov
dec
fidivr
cmp
pop
inc
arpl
sbb
ins
mov
fmul
add
fsubp
lahf
aas
xchg
das
xchg
into
pop
inc
sbb
or
push
push
pop
jne
popf
mov
xor
(bad)
cmp
iret
mov
xchg
adc
adc
sub
jb
test
jge
push
push
int
sahf
lock
jg
and
cmp
xor
cmc
test
mov
sub
call
ret
mov
int3
inc
pushf
sub
push
sub
xchg
sub
icebp
test
inc
adc
push
xchg
xchg
arpl
inc
xchg
pusha
dec
xchg
ror
adc
add
lods
popa
lea
in
adc
and
movs
and
cmp
add
outs
lea
pop
inc
jmp
pop
arpl
push
imul
dec
add
(bad)
mov
cli
loope
push
je
add
ins
pop
aad
mov
ror
xchg
in
mov
sysexit
stos
adc
mov
sbb
stos
mov
cmp
pop
xchg
cdq
jb
mov
pop
jno
pop
movs
(bad)
jmp
stos
arpl
dec
mov
pop
repz
in
or
add
scas
push
(bad)
outs
or
lods
in
arpl
inc
xor
sbb
neg
arpl
xchg
push
fucomi
cli
xchg
iret
arpl
ins
in
xchg
fimul
in
xchg
mov
icebp
repnz
cmp
mov
sub
gs
push
adc
ffree
sbb
and
cmp
icebp
push
ins
pop
add
mov
bound
sbb
in
movs
pusha
dec
nop
pop
mov
(bad)
out
sahf
xor
or
fild
pop
inc
jb
sti
jno
sub
mov
or
mov
js
fbstp
jmp
push
pop
cmp
inc
inc
(bad)
and
enter
sbb
out
outs
ds
mov
repz
or
jle
jp
push
push
dec
or
sbb
sub
loopne
xchg
jecxz
jne
adc
jnp
call
jno
in
push
mov
imul
aaa
pushf
mov
fwait
dec
retf
mov
cdq
adc
dec
adc
jmp
xchg
aam
cmovo
loop
fsub
sar
icebp
dec
cmp
pop
rcl
pop
or
or
enter
add
sub
rcr
jmp
ret
stc
mov
lods
repz
(bad)
jecxz
or
cmp
(bad)
add
sbb
ficomp
mov
pop
sbb
mov
fs
inc
push
xor
dec
or
int3
mov
jmp
pop
lods
inc
cs
mov
int
add
sti
cmps
jmp
imul
sub
xchg
nop
xlat
popa
les
xchg
mov
push
sbb
neg
dec
pop
nop
cld
pop
std
xor
or
cli
int
mov
fwait
stos
push
iret
mov
mov
xchg
jae
jge
ja
inc
sbb
add
rcr
bound
or
cmps
xor
push
mov
test
and
pop
inc
lds
xor
cld
inc
push
cs
int3
push
dec
jb
sti
in
shl
gs
add
pop
jmp
aas
ficomp
adc
mov
and
push
je
inc
mov
jg
lock
xor
pop
and
or
xor
jno
outs
mov
stos
xor
lds
push
inc
xor
jns
retf
fcomip
or
(bad)
int
scas
push
pop
xor
js
mov
mov
and
out
xchg
push
ins
push
scas
aam
inc
cmc
fisttp
add
test
mul
jae
xchg
stos
cld
mov
cmp
jns
and
dec
mov
out
xchg
push
mov
jmp
mov
pop
dec
jmp
xchg
inc
mov
inc
jne
dec
push
fadd
add
sub
and
inc
rcr
aaa
cmp
push
(bad)
aaa
fdiv
sbb
adc
ins
jne
xor
in
sub
aam
pop
dec
inc
call
lds
loop
or
ret
lock
inc
cmp
xor
(bad)
or
in
sbb
sub
mov
or
inc
push
and
imul
stc
mov
shl
push
dec
add
(bad)
mov
jbe
dec
sbb
out
(bad)
clc
cmp
out
or
fstp
push
or
or
cmps
repnz
div
dec
inc
adc
iret
idiv
into
aam
pop
jle
jle
xchg
adc
arpl
sahf
mov
push
push
cmp
sahf
push
cdq
and
jb
xchg
loope
pusha
ins
jnp
mov
jb
mov
cmp
fst
jge
mov
dec
mov
inc
sub
enter
(bad)
sti
stc
lods
inc
out
jne
cs
fisttp
adc
(bad)
mov
jecxz
ds
xchg
outs
jb
pop
scas
dec
repz
sbb
sbb
les
lods
or
ds
xchg
pop
ret
out
fwait
cmp
jg
scas
in
in
pop
inc
dec
sti
imul
push
sub
fsub
loop
xchg
out
(bad)
mov
imul
aaa
stc
pop
xchg
dec
mov
dec
dec
pusha
(bad)
jae
cmp
test
loopne
and
ror
fld
cld
add
mov
sahf
mov
les
jbe
push
pop
push
jmp
arpl
cwde
hlt
stos
lea
xor
push
stos
ins
jno
loop
iret
cwde
sub
daa
sub
sub
xlat
aaa
add
or
push
jmp
jno
sub
mov
jl
cmc
shl
mov
or
int3
sub
pop
mov
dec
jnp
dec
outs
pop
xchg
das
xchg
(bad)
xchg
std
push
mov
sub
jae
in
xor
fcomp
ds
xchg
in
inc
adc
int3
and
mov
sub
outs
cmp
mov
gs
mov
pop
cmps
jle
jp
imul
adc
xor
les
in
mov
cmps
or
pavgb
pop
jmp
dec
cmc
xor
xor
(bad)
fmul
mov
cmps
jnp
and
xchg
push
xchg
nop
int
jne
fwait
pop
mov
mov
cmp
fisub
in
ss
push
add
std
cwde
and
loopne
and
push
das
ffree
sub
pop
lds
lods
mov
sub
adc
pop
aaa
lock
or
jmp
sbb
out
movs
mov
sub
push
addr16
add
gs
jp
adc
push
call
into
cmp
cpuid
lock
pop
rcr
dec
push
out
mov
pushf
imul
xchg
lds
lods
add
mov
pop
fcom
sub
sub
(bad)
call
mov
(bad)
je
pop
sub
push
xchg
cs
inc
push
mov
(bad)
fsubrp
sti
xor
out
adc
or
fimul
jle
and
cmp
inc
pop
lock
pop
and
mov
iret
jge
xchg
xchg
mov
jb
xchg
shl
and
sub
lahf
or
mov
push
pusha
dec
sub
xchg
pop
mov
inc
pop
push
mov
sbb
inc
sbb
addr16
push
or
mov
mov
jl
dec
xchg
add
push
sbb
leave
mov
or
mov
repz
lods
mov
sub
into
lods
fild
pminsw
pop
test
xchg
aaa
cmp
sbb
mov
loop
sahf
jge
fnstsw
pop
mov
sub
inc
inc
pop
sub
and
jle
push
push
mov
imul
push
or
cli
(bad)
sbb
fwait
leave
movlps
daa
jmp
fyl2x
cs
je
xchg
mov
xor
xchg
popa
test
leave
les
test
ss
mov
pop
ret
lods
xchg
addr16
mov
int
or
(bad)
sar
pop
pop
scas
mov
fwait
pop
loope
push
adc
imul
mov
sub
shl
ss
add
sub
jg
cmp
addr16
das
leave
mov
(bad)
in
sbb
ror
jmp
pop
cwde
push
and
pop
fldcw
popa
xchg
or
popa
jne
nop
xchg
test
gs
hlt
cmp
push
dec
fbstp
retf
push
add
popf
mov
adc
and
push
and
xchg
pop
xchg
pop
pop
add
push
xchg
mov
shr
mov
and
test
add
test
lea
(bad)
jne
mov
mov
fs
pop
xchg
ret
cmp
sbb
mov
pop
pop
scas
xchg
add
sar
iret
movs
mov
xor
push
shl
and
or
icebp
cmps
sbb
inc
pop
and
xchg
cld
mov
xchg
retf
pushf
sbb
inc
lahf
iret
xor
stc
sbb
dec
(bad)
and
cmp
ret
add
std
out
int3
and
out
pop
mov
cmp
ss
sbb
shl
pop
dec
retf
sub
call
jbe
leave
push
pop
mov
add
mov
clc
add
jmp
push
or
cmps
stc
xchg
cmp
lea
fistp
mov
and
push
bnd
jns
push
(bad)
cs
ja
mov
std
(bad)
icebp
cmp
xlat
sub
idiv
push
(bad)
loop
xchg
mov
stos
push
push
jne
fwait
cmp
and
push
loope
rcl
cmps
repnz
adc
sar
lea
adc
sbb
jl
push
hlt
loope
inc
add
pop
sub
sbb
adc
dec
loope
cmp
xor
pop
cmps
jmp
sbb
sbb
fidiv
arpl
into
shl
jne
lods
in
inc
movs
pop
fistp
cmp
xor
cmp
pop
repz
or
shl
int
add
cli
mov
mov
bound
ret
add
add
xchg
xchg
clc
push
inc
loopne
movs
je
and
sbb
fwait
dec
aam
(bad)
sti
mov
add
sbb
and
data16
iret
lods
jae
or
scas
mov
and
sub
or
dec
mov
aad
ins
push
xor
std
add
cld
(bad)
cwde
jecxz
mov
movs
mov
pop
inc
push
adc
mov
addr16
retf
outs
and
hlt
(bad)
xchg
xchg
(bad)
ficom
dec
pop
popa
dec
sbb
ret
fxch
leave
imul
sbb
test
and
jecxz
pushf
sbb
retf
inc
ins
xor
pop
mov
fs
sub
add
imul
cwde
xor
lahf
pop
mov
mov
lea
bound
inc
cmps
lea
in
inc
xor
jg
push
int3
mov
ss
push
sbb
out
call
popf
push
push
ror
jle
fwait
push
mov
aas
mov
in
xor
aad
shr
mov
mov
clc
shl
adc
lea
adc
mov
cmp
mov
add
sub
sub
pop
xor
js
mov
fs
aad
mov
ret
jle
je
ror
and
das
mov
int
push
sub
push
shr
mov
nop
dec
pop
clc
retf
cld
jns
push
fst
fbstp
or
cmc
pusha
dec
bound
popa
mul
adc
push
add
xchg
jo
mov
fcomp
loopne
or
xor
popa
out
into
and
xor
dec
pop
popf
lods
in
mov
pop
xor
xchg
test
xor
jmp
dec
and
nop
test
sub
adc
inc
and
je
repnz
push
xor
jo
pop
push
cs
sbb
pop
cmp
(bad)
adc
mov
pop
aad
fs
fsub
or
cmp
inc
add
adc
pop
add
adc
daa
fiadd
les
jb
data16
lock
(bad)
sti
fdiv
inc
or
jbe
shl
out
sbb
jnp
sbb
icebp
lahf
test
clc
mov
pop
(bad)
sub
sub
push
push
sub
retf
(bad)
fisttp
pop
popf
sbb
push
arpl
mov
push
cmp
js
(bad)
xchg
iret
fs
int3
test
outs
dec
test
or
ja
or
or
pop
xchg
sbb
jmp
lahf
lods
and
push
outs
push
mov
sub
push
xchg
xor
int3
jns
xchg
and
jo
into
mov
movs
out
cmp
int
jp
outs
cmc
repz
sbb
push
jbe
inc
or
dec
sti
add
aad
std
ret
mov
add
neg
imul
mov
mov
fldcw
fs
loope
enter
jns
ss
fisttp
push
das
mov
add
and
ins
sbb
mov
std
ja
jnp
call
jp
jbe
loopne
fistp
out
int3
jg
das
push
(bad)
pop
push
and
adc
sub
rol
repz
in
jb
fcomp
shr
fwait
sti
sub
jbe
sbb
or
jg
dec
xchg
jb
clc
mov
(bad)
(bad)
data16
xchg
xor
loop
mov
inc
sbb
fist
sahf
dec
cmp
out
rcl
data16
jle
div
loope
cmc
xchg
ss
xchg
imul
push
pop
es
loopne
cmp
loop
fs
mov
imul
or
int3
add
popa
dec
push
sbb
ins
xor
test
ror
dec
icebp
sub
stc
aad
mov
jecxz
dec
mov
js
(bad)
test
(bad)
lahf
cs
add
hlt
imul
idiv
ror
cmp
xchg
add
enter
jl
add
pop
mov
pop
loopne
ret
push
fstp
sub
adc
das
cmp
mov
iret
out
mov
xchg
nop
push
push
fidivr
mul
lea
aaa
pushf
or
js
jp
inc
inc
jmp
leave
jnp
mov
sbb
loope
(bad)
jle
dec
enter
gs
mov
mov
add
sar
retf
jg
push
inc
iret
sub
push
pop
or
lods
jg
btc
or
std
repz
jl
lods
fisttp
inc
add
fs
sub
push
inc
icebp
fidivr
xor
leave
int
xor
pop
cmp
and
dec
(bad)
fbld
clc
mov
pushf
cmp
xchg
addr16
ud1
cmc
xchg
out
push
xchg
adc
call
int
inc
sub
lea
not
in
mov
mov
fld
(bad)
imul
sbb
cmp
add
sar
int3
cli
cmp
hlt
xchg
or
mov
xchg
jbe
in
push
pop
cdq
aad
and
jnp
loopne
into
push
(bad)
mov
daa
adc
mov
pushf
mov
mov
mov
outs
ss
xchg
cld
cwde
(bad)
shl
mov
sbb
pushf
xchg
mov
pushf
xchg
push
and
enter
push
xchg
sbb
sub
fisubr
sbb
mov
fistp
das
jnp
lock
sti
std
xchg
adc
xchg
or
mov
ja
cmp
out
retf
fnstenv
jne
or
sub
mov
inc
out
jo
xchg
jg
and
(bad)
and
add
or
les
ja
mov
jns
and
sub
jns
jge
push
jae
rcl
dec
adc
nop
inc
push
(bad)
push
cmp
or
mov
fidivr
mov
adc
push
repz
in
push
mov
cwde
shr
es
add
jnp
je
jns
or
mov
or
aas
mov
and
mov
xor
out
jne
ins
enter
mov
push
inc
mov
jns
pop
cld
(bad)
in
cmp
xlat
jo
arpl
xlat
inc
ds
or
daa
xlat
sbb
dec
fcomip
push
mov
xor
stos
(bad)
mov
fdiv
sbb
loope
jo
mov
pop
mov
pop
leave
les
xlat
mov
mov
dec
icebp
jo
(bad)
sbb
into
and
cmps
pop
mov
rcr
add
ror
dec
popa
outs
in
xchg
xchg
ds
call
mov
int
fcmovb
ins
test
loop
lds
sbb
adc
dec
xor
push
inc
or
or
enter
ror
sub
in
sub
loope
jle
mov
mov
jnp
sbb
dec
sub
push
retf
iret
sbb
jmp
xor
(bad)
pop
int3
or
mov
aad
stos
enter
mov
ins
adc
mov
push
das
scas
jae
sbb
js
ret
aas
mov
cmp
or
jns
mov
in
dec
adc
mov
sti
pop
jno
sbb
outs
rcr
pop
mov
int3
add
fstp
add
enter
jb
and
dec
mov
mov
out
imul
sbb
xchg
rcr
repnz
add
imul
xchg
jo
aad
dec
mov
add
jbe
test
mov
mov
push
mov
imul
scas
pop
push
pop
or
push
nop
std
jmp
jb
xchg
icebp
shl
push
(bad)
stos
(bad)
pop
sub
pop
pushf
test
pop
mov
or
sbb
cdq
test
mov
xchg
sahf
out
mov
and
fsub
dec
sbb
scas
pop
mov
dec
test
sub
lods
mov
mov
push
or
and
dec
ds
adc
lds
jmp
ja
shl
cmp
lahf
dec
push
das
popf
jae
es
fcmovbe
outs
das
scas
lea
inc
lods
and
rol
iret
fnstcw
nop
fstp
mov
(bad)
loopne
arpl
adc
popa
test
aad
xchg
xchg
sbb
adc
sbb
clc
push
push
mov
ds
xchg
push
dec
cmp
mov
(bad)
sub
add
push
mov
jl
or
cwde
or
cmp
(bad)
push
popf
(bad)
dec
hlt
sub
or
fdivr
cmp
add
fistp
cli
(bad)
and
xchg
mov
in
mov
xchg
push
mov
shr
or
inc
adc
popf
inc
add
retf
xchg
idiv
push
scas
push
xchg
pop
mov
push
je
mov
leave
test
neg
lods
jmp
or
paddusb
pop
aaa
inc
jbe
test
das
inc
push
xor
dec
adc
adc
in
loopne
sbb
lds
and
outs
nop
pop
stos
lahf
out
lods
mov
xchg
add
fcomp
setnp
xchg
xor
or
xchg
inc
jmp
fild
adc
popa
pushw
lods
retf
fwait
sub
mov
cmp
jb
sub
add
adc
clc
inc
inc
repz
pop
cmps
test
cmps
adc
xchg
inc
imul
jnp
mov
inc
cli
pop
or
call
into
add
adc
lds
sbb
push
fstp
add
pushf
lds
xchg
fcmovnu
ret
and
mov
test
pop
dec
pop
(bad)
repnz
ins
fidiv
dec
or
pop
rol
dec
ror
push
test
adc
pop
mov
push
or
ins
sbb
fist
fadd
lea
inc
data16
not
jmp
ret
in
lds
fimul
icebp
pusha
outs
clc
fs
aam
cwde
std
xchg
jo
push
adc
sbb
inc
out
fimul
retf
jmp
jmp
push
ror
pop
pusha
ror
jl
adc
mov
cmp
pop
retf
push
xchg
inc
in
cmp
dec
sbb
cmps
sub
pushf
std
clc
clc
daa
push
xchg
fdivr
cmp
retf
loop
data16
test
pop
mov
xchg
xchg
add
dec
push
not
push
ret
int3
mov
mov
repz
sub
xchg
adc
bound
je
xor
int
dec
mov
push
sub
out
fsub
imul
stc
loop
cmps
lods
xchg
pop
fdivrp
pop
jno
daa
inc
mov
push
test
bound
test
push
cwde
pop
sub
xlat
pop
or
lods
cdq
and
jns
scas
imul
inc
icebp
xchg
adc
inc
pop
(bad)
mov
push
ins
ret
cmp
dec
test
pusha
push
or
add
fisttp
push
daa
js
xor
in
and
ja
jne
inc
loope
fldenv
sub
lock
inc
int
adc
inc
(bad)
jl
dec
add
xchg
jb
call
(bad)
sub
sbb
mov
(bad)
dec
xchg
add
hlt
xor
je
sbb
mov
inc
inc
sahf
stc
arpl
aaa
dec
clc
(bad)
mov
(bad)
mov
repz
xchg
inc
add
test
jp
cld
xchg
xor
push
stos
pop
outs
retf
fwait
inc
shl
sub
mov
scas
stos
jg
addr16
repz
sbb
jp
ret
nop
in
xchg
loopne
leave
add
inc
and
cwde
mov
lahf
or
inc
rcr
add
mov
fwait
jbe
out
dec
push
imul
dec
dec
inc
repnz
pusha
mov
push
sbb
add
shr
sub
sbb
push
mov
cmps
loopne
cmp
ret
cmovo
sahf
push
iret
xor
cmp
xor
push
sub
call
push
xchg
in
or
ja
add
(bad)
popw
(bad)
hlt
and
or
cmp
or
xchg
and
xchg
int
mov
lahf
or
jl
loopne
das
cmp
les
cld
inc
xchg
sbb
push
mov
not
int
mov
daa
cmp
pushf
aas
test
sub
and
in
scas
lock
sbb
cmps
clc
or
or
adc
ss
mov
int3
test
lods
call
inc
push
push
ja
add
out
pop
shl
mov
imul
or
jp
push
retf
test
stos
les
in
dec
adc
shr
sar
mov
stos
rol
retf
shl
loopne
gs
(bad)
and
(bad)
adc
sbb
sub
cmp
fsub
fiadd
add
call
mov
loopne
dec
jbe
adc
stc
dec
jmp
ins
cmp
mov
sub
and
aad
adc
pop
adc
pop
and
xchg
add
hlt
xchg
inc
fs
mov
(bad)
push
popf
repz
loop
(bad)
cmp
out
sbb
popa
xchg
dec
aaa
or
outs
push
mov
jbe
ret
out
mov
inc
pop
dec
push
std
jecxz
es
cs
jmp
add
xsaveopt
add
es
xchg
mov
fnsave
clc
xlat
push
test
aam
mov
cmp
enter
sbb
fsub
mov
aad
shl
push
mov
mov
jbe
dec
pushf
sbb
jne
push
jo
test
push
(bad)
push
ret
cwde
retf
and
pop
jne
push
iret
ins
clc
cld
adc
lahf
aaa
mov
mov
adc
mov
mov
xor
retf
jle
dec
cmp
push
nop
dec
retf
adc
jmp
neg
mov
aad
cmp
add
push
aaa
ret
out
inc
fadd
dec
call
rcr
and
push
xor
mov
cs
daa
fisttp
std
fbld
mov
push
xchg
xchg
xchg
dec
mov
push
jno
dec
jg
xchg
cmps
dec
and
mov
mov
inc
mov
popf
or
aaa
jnp
and
add
bound
adc
aaa
addr16
(bad)
jecxz
pop
mov
adc
inc
retf
mov
aad
inc
pop
arpl
mov
sti
in
nop
xchg
adc
adc
or
adc
sti
jl
mov
dec
push
xchg
dec
cmps
loopne
push
ja
nop
gs
in
iret
xor
mov
xor
mov
das
adc
or
popa
in
aad
div
dec
mov
enter
scas
mov
and
pop
movs
ret
adc
adc
push
dec
sub
cld
icebp
mov
popa
popf
aam
ins
outs
add
jge
ins
mov
adc
sub
cmps
sbb
dec
or
dec
cmp
push
icebp
das
mov
inc
scas
jmp
jmp
push
cwde
pop
lods
(bad)
fsub
pop
jle
repz
sub
sbb
jne
and
jl
push
int
mov
rol
ins
cmp
sbb
es
outs
lods
test
mov
xchg
add
bound
aad
push
in
fs
cmp
mov
jo
(bad)
lock
push
pop
or
sbb
push
out
in
sbb
add
shr
call
xchg
shl
not
scas
fwait
push
das
mov
inc
stc
fs
adc
xor
or
jns
call
jne
mov
inc
xor
jbe
sub
xchg
cmps
xor
pop
pop
jns
pop
mov
test
push
cmps
imul
shl
xchg
fistp
cmc
loopne
pop
cmps
pop
sahf
stc
(bad)
sub
stc
jl
pop
dec
inc
imul
sbb
psraw
jns
sar
cmp
daa
das
mov
outs
or
jmp
(bad)
int3
sub
dec
pushf
xchg
inc
xchg
sub
mov
shr
repz
or
adc
mov
jbe
enter
mov
sub
mov
js
push
mov
mov
jae
dec
es
sub
inc
sbb
popf
pop
cdq
loopne
outs
call
neg
mov
test
dec
icebp
dec
dec
cmc
adc
jne
jl
jae
jge
xor
xchg
aam
stos
pusha
jns
aam
les
push
add
fdiv
das
mov
mov
mov
xor
jmp
xor
test
dec
mov
dec
ret
mov
(bad)
popf
iret
add
out
cmp
sub
adc
pop
cld
inc
inc
sub
xor
or
mov
pushf
mov
jecxz
jo
lds
popf
sbb
scas
jns
and
out
pop
cmp
pop
cmc
dec
mov
sar
je
ror
mov
frstpm(287
(bad)
dec
ins
ins
sub
js
jmp
mov
loop
mov
dec
jle
or
out
gs
dec
adc
hlt
mov
cdq
nop
int
adc
pop
lods
sub
je
mov
mov
icebp
push
cmp
sbb
mov
lods
dec
in
push
pcmpgtb
or
pop
inc
fs
push
popa
dec
mov
pop
push
xchg
push
retf
xchg
movs
mov
push
out
stc
jo
jl
push
sub
inc
push
or
and
add
adc
ret
sbb
lahf
fs
dec
mov
push
int
mov
inc
cwde
mov
int
jle
push
popa
or
jno
jnp
sbb
adc
or
inc
mov
mov
cwde
test
add
jg
or
mov
and
fwait
push
sub
(bad)
fld
lods
stos
in
cmp
retf
mov
leave
test
sbb
jns
ret
mov
lock
popa
mov
mul
rcl
dec
add
ret
push
call
std
sti
fld
mov
cwde
lahf
or
lea
pushf
arpl
xchg
sahf
test
xchg
imul
loopne
mov
cmp
or
je
jne
sub
daa
and
aam
repnz
aad
cmps
clc
lahf
fild
jns
or
cdq
lock
je
iret
mov
mov
jecxz
lods
out
pop
inc
jl
fidivr
xchg
jmp
jl
jg
imul
dec
adc
pusha
inc
mov
or
pushf
xor
in
add
fwait
aaa
mov
mov
mov
loop
xchg
fild
jb
mov
jns
mov
mov
xchg
shl
les
cld
mov
sbb
dec
adc
retf
add
or
ret
mov
rcr
pop
iret
cmp
xchg
call
call
cmc
(bad)
repnz
sbb
xor
push
in
cmp
xchg
fst
push
add
clc
sbb
mov
mov
jbe
ds
dec
mov
pop
mov
adc
jge
repz
adc
test
or
clc
cdq
xchg
mov
sub
rol
or
mov
bound
dec
icebp
rol
daa
ins
out
or
ficom
ins
enter
push
in
es
sbb
ror
(bad)
jmp
xchg
pop
cmc
aad
loop
add
adc
loope
jp
sbb
(bad)
pop
in
nop
data16
xchg
xchg
or
ret
xor
imul
mov
xlat
shl
lods
mov
movs
or
aam
xor
lahf
lods
sub
jecxz
mov
nop
inc
(bad)
in
and
pop
je
or
jmp
sub
jmp
ret
ja
add
xor
mov
add
movq
xor
movs
sub
mov
jge
inc
out
push
imul
fdivr
call
test
js
mov
ja
inc
fsub
cld
sbb
clc
adc
daa
hlt
call
inc
fidiv
fnstsw
les
retf
(bad)
jns
sbb
mov
xor
inc
test
xor
cmps
inc
and
xor
mov
in
aam
xor
adc
mov
arpl
xlat
push
test
in
mov
nop
pop
test
jbe
mov
jmp
out
fs
xor
int3
sub
int3
fdivr
loop
(bad)
lds
ror
push
fwait
lock
cld
sahf
call
jb
and
(bad)
dec
test
aas
aad
xchg
jb
push
call
(bad)
out
add
and
ss
ins
inc
ret
xchg
jle
push
and
sub
sbb
pop
or
int3
dec
cmp
fcom
or
(bad)
push
repnz
jne
sbb
imul
sub
pop
sub
jne
jns
xor
cmp
jnp
push
fbld
pop
and
jmp
test
shr
dec
loopne
or
aam
xchg
inc
xchg
mov
sub
inc
mov
add
pop
je
jecxz
and
xor
jno
add
sub
mov
jl
mov
dec
movs
std
leave
cdq
and
nop
jbe
jp
jno
jmp
xor
in
cmp
dec
mov
adc
cmc
or
sbb
push
jne
xor
push
clc
and
add
ret
mov
inc
jae
adc
jp
pop
js
(bad)
cwde
hlt
mov
(bad)
and
inc
ret
mov
jno
icebp
popa
aas
lods
mov
adc
add
retf
cmp
imul
test
(bad)
and
out
push
nop
push
fdivr
popf
mov
lock
ins
data16
jmp
mov
xchg
sbb
sbb
dec
pop
or
shl
retf
std
cmp
xchg
jecxz
rcr
out
mov
out
cmp
and
add
jne
xor
and
leave
test
cli
push
scas
call
adc
cmps
int
adc
pop
push
retf
mov
jmp
and
outs
jno
sbb
sbb
or
icebp
inc
xchg
jbe
mov
pop
into
(bad)
dec
xor
fnstenv
inc
pop
icebp
mov
gs
sub
adc
mov
neg
and
sub
dec
cmovne
sub
mul
cmp
xlat
mov
sbb
fdivp
outs
inc
(bad)
mov
lds
mov
sub
imul
jmp
in
xchg
and
pop
sub
int3
dec
dec
mov
pop
or
sahf
aas
in
int3
test
jb
mul
jnp
adc
mov
add
push
and
adc
sub
mov
dec
mov
outs
(bad)
adc
sbb
lahf
leave
outs
je
jl
push
popf
or
xchg
(bad)
(bad)
jb
into
stc
add
jmp
and
stos
pusha
sbb
fisttp
(bad)
enter
xor
pop
clc
mov
jae
xchg
adc
test
inc
cdq
jmp
mov
sbb
mov
mov
adc
or
sub
js
xor
pop
push
test
push
bound
jmp
push
mov
jl
fistp
in
inc
add
or
movs
and
xor
or
out
inc
daa
push
xor
jns
mov
push
(bad)
ret
aaa
rcl
in
pop
pop
ret
jnp
pop
(bad)
iret
jecxz
ins
test
mov
imul
inc
pop
xchg
dec
je
pop
and
out
dec
retf
mov
jo
retf
js
imul
imul
clc
in
adc
out
jge
pop
stos
mov
clc
(bad)
(bad)
adc
inc
xor
lea
and
mov
mov
icebp
addr16
or
push
loopne
data16
aad
mov
(bad)
sahf
jnp
fmul
(bad)
mov
cmp
jbe
mov
cmc
sbb
cld
sbb
dec
push
cld
cwde
fs
and
cmp
outs
jae
rol
pop
push
xor
repnz
mov
mov
fst
xchg
and
lahf
pop
xchg
dec
dec
sahf
cs
aad
jp
cmp
and
dec
rcr
call
xor
jb
daa
cdq
adc
lods
stos
pop
dec
xchg
xchg
mov
jae
(bad)
cmp
dec
stos
push
leave
imul
xor
push
jnp
rep
mov
inc
adc
test
add
and
mov
(bad)
dec
dec
call
pop
test
mov
xor
mov
mov
imul
mov
mov
sbb
(bad)
daa
jg
push
pusha
mov
sub
cmp
pop
dec
data16
loop
retf
std
lods
xlat
retf
mov
ds
int
jae
outs
dec
mov
mov
daa
pmaxsw
out
adc
mov
cwde
lods
mov
scas
mov
(bad)
add
dec
push
into
(bad)
scas
icebp
mov
sub
xor
xchg
jmp
aaa
jge
pushf
nop
adc
cdq
inc
pop
mov
push
xlat
xchg
lods
xlat
jmp
and
jmp
push
aam
adc
stos
mul
in
jae
jge
and
and
aad
inc
inc
cwde
into
push
in
in
push
inc
pusha
rcl
scas
ret
add
rcr
push
cmp
or
dec
scas
xacquire
pop
popa
cmps
out
push
call
inc
or
out
cld
popa
inc
cmps
das
jg
lahf
mov
enter
icebp
xchg
ins
pop
cmp
out
std
pop
fwait
sbb
cmc
pop
stos
ins
popaw
outs
xor
xor
jecxz
mov
ja
fs
adc
lea
push
mov
dec
sbb
xchg
pop
pop
sets
mov
icebp
pop
fld
mov
xor
lea
push
mov
jp
sub
mov
cld
adc
mov
stos
mov
repz
mov
mov
in
iret
push
xchg
repnz
idiv
sbb
shr
mov
fisttp
add
or
in
outs
call
push
cmp
mov
jmp
cmp
mov
js
cmp
test
(bad)
daa
sbb
fdiv
mov
mov
or
pop
jnp
cmps
pop
call
mov
mov
ins
inc
xor
jnp
mov
pop
push
sbb
mov
xor
je
lahf
ret
push
cld
sbb
mov
dec
(bad)
hlt
mov
or
cmp
mov
ror
xchg
mov
int
pop
xor
jb
mov
cmp
pop
ret
in
int
jo
stos
test
sub
adc
mov
ficom
inc
inc
bound
mov
stc
(bad)
sahf
add
push
fsubr
cmps
cld
push
es
xor
data16
call
jae
adc
xchg
lods
mov
imul
daa
in
dec
loop
and
fdivr
or
fsub
out
ds
out
in
repnz
imul
and
add
(bad)
jno
pop
adc
cmps
mov
shl
mov
dec
and
fld
aam
jo
pushf
in
lods
lea
sub
int3
retf
cld
and
push
cmps
loopne
jno
in
shl
jle
jno
xlat
and
cmp
test
cs
jecxz
data16
pop
mov
xor
dec
jae
int
rcl
xchg
inc
es
out
push
inc
stc
add
iret
adc
test
mov
adc
les
data16
adc
fcom
pushf
add
jae
cmp
lods
pop
mov
mov
push
outs
sbb
popa
repz
dec
add
dec
xor
pop
push
mov
xchg
xchg
cmps
jl
pop
pop
punpcklbw
clc
popf
clc
xchg
xchg
in
cmp
add
push
rol
adc
xor
mov
call
dec
out
imul
inc
push
icebp
movs
sub
addr16
jp
lea
xchg
mov
ss
out
mov
push
mov
and
mov
dec
cmps
jg
ins
pushf
js
loop
cmp
(bad)
mov
fisub
jne
add
sbb
push
out
fidiv
ss
into
gs
stc
cwde
dec
repnz
add
scas
inc
mov
fcomp
(bad)
xor
mov
xchg
add
mov
dec
add
adc
xor
je
xchg
imul
mov
pop
mov
pop
cmc
cmp
enter
inc
je
lea
push
mov
(bad)
mov
or
xchg
movs
arpl
pop
add
cwde
enter
scas
sub
aaa
fwait
in
and
je
xor
mov
lahf
call
(bad)
scas
aaa
adc
pop
or
add
mov
jns
lds
out
inc
mov
aad
cwde
ins
and
sub
aam
push
sub
pop
mov
inc
dec
lods
(bad)
mov
add
cs
push
xchg
jmp
addr16
std
ds
mov
pop
(bad)
aaa
push
mov
shr
or
pop
fwait
loop
std
retf
mov
dec
inc
jecxz
sbb
arpl
cld
data16
test
sub
pushf
push
dec
js
mov
pop
inc
ret
mov
dec
and
xchg
jge
aaa
(bad)
cmc
mov
lahf
push
and
aaa
sub
jmp
dec
ficom
movs
mov
or
cmps
xor
dec
popa
retf
shr
fild
jo
mov
pop
jne
sahf
outs
rcl
pop
sbb
leave
xchg
cmp
add
mov
and
test
(bad)
and
inc
ins
vxorps
mov
or
sbb
xlat
cmps
or
cmps
in
jmp
rol
pop
sub
jmp
(bad)
xor
dec
(bad)
jmp
out
imul
xor
dec
clc
movs
movs
js
xor
mov
inc
cmp
jmp
xchg
sti
pop
ret
push
nop
test
jg
inc
mov
cmp
sub
in
ins
fs
xor
add
sbb
loop
xor
fstp
and
nop
inc
int
aad
sbb
pop
fdivr
add
mov
push
cdq
mov
inc
stos
gs
in
js
inc
sti
push
lea
repz
jb
mov
test
pop
mov
cmp
lods
jns
stos
mov
out
ss
jl
mov
ret
sbb
aaa
fwait
push
inc
mov
bound
add
jnp
call
fst
div
dec
mov
stos
scas
sbb
add
adc
or
loop
shl
or
push
stos
mov
or
cmps
adc
ds
push
jne
ds
ins
or
cli
mov
mov
sti
sub
xor
mov
mov
xchg
das
xchg
fsub
out
fcomp
in
jb
mov
(bad)
mov
lods
xchg
dec
inc
push
dec
in
test
es
into
dec
sar
lds
jb
test
scas
add
rol
frstor
out
(bad)
adc
ds
imul
pop
xchg
xchg
sub
bound
or
inc
mov
cmc
push
jo
repnz
push
mov
clc
mov
adc
or
and
call
jbe
push
ror
stos
add
adc
fwait
stos
pop
pop
dec
dec
shl
mov
jne
and
inc
retf
or
jns
rcr
fyl2xp1
pop
and
jl
in
pop
popf
pop
and
lods
mov
cmp
inc
outs
(bad)
into
pop
push
mov
aaa
pushf
sbb
add
adc
neg
shl
test
jnp
add
js
stc
jnp
cmp
jno
or
mov
jo
sbb
repnz
add
mov
loop
es
mov
xchg
(bad)
aaa
into
(bad)
xchg
jo
gs
push
into
fwait
jns
sbb
das
or
mov
movs
rcr
jle
in
push
xor
lock
xchg
packsswb
inc
in
push
nop
test
sbb
fsubr
jne
sbb
push
and
push
imul
pop
hlt
fild
(bad)
loopne
and
cld
jns
pop
cmp
repnz
mov
pop
pop
cmp
push
mov
pop
ins
test
sti
sub
add
push
jl
rcl
cld
pop
sub
push
xchg
xlat
mov
jb
xchg
(bad)
dec
push
fbld
pop
inc
repnz
xchg
pop
ds
test
push
mov
nop
xor
sub
rol
cmp
iret
cmc
test
pop
rol
or
das
push
clc
mov
inc
and
or
ret
fstp
xor
aam
cmp
and
outs
iret
jns
movs
xchg
mov
and
mov
into
js
xor
inc
cli
and
xor
adc
pop
cdq
push
push
fisttp
mov
fsub
cmps
test
push
push
cdq
xchg
ja
icebp
arpl
cmp
pop
add
mov
mov
or
cwde
addr16
aaa
outs
and
fcmovb
sub
cli
xchg
scas
xchg
bound
or
pushf
xchg
push
repz
imul
fiadd
push
icebp
or
sar
cmp
mov
call
loope
mov
mov
lds
xor
dec
dec
sub
scas
(bad)
jp
add
sub
clc
xchg
push
pop
cmc
push
cmps
xor
ds
jecxz
imul
pop
lods
icebp
pop
inc
pop
out
in
icebp
shl
adc
jecxz
sub
lahf
jl
ss
or
mov
fcomp
shr
jno
rcr
add
je
mov
leave
call
sti
xor
sub
xchg
mov
jmp
clc
pushf
mov
pop
push
push
mov
mov
movs
out
das
lds
pusha
inc
movs
retf
cld
add
cmp
and
repz
or
jle
bound
into
add
jo
adc
jge
pop
lea
jmp
int
push
outs
cmp
mov
loopne
cmc
jg
mov
push
cmp
sbb
xchg
test
push
and
add
dec
in
mov
icebp
mov
mov
data16
ins
mov
jmp
push
shl
(bad)
outs
mov
adc
jne
inc
mov
movs
push
int3
xchg
mov
lock
aam
test
movs
int3
sub
test
stos
inc
pop
mul
xor
jns
fsub
mov
mov
fdivr
repnz
mov
fidiv
cli
dec
push
and
mov
enter
(bad)
fdiv
aas
mov
xchg
inc
xchg
pop
inc
adc
in
add
jle
lahf
(bad)
jb
sar
icebp
cwde
inc
out
add
jmp
dec
inc
mov
(bad)
jecxz
xor
inc
into
es
mov
jle
pop
rcr
push
mov
cmp
ret
popa
leave
test
inc
mov
pusha
adc
out
movs
call
dec
jbe
xor
push
das
rol
cmps
(bad)
bound
cld
xor
nop
pop
not
xchg
mov
push
retf
stos
sahf
fidiv
sbb
mov
popa
retf
fidiv
test
xchg
xchg
adc
hlt
xchg
in
retf
aaa
aad
dec
outs
sub
movs
pusha
mov
dec
xor
or
xor
cwde
das
adc
(bad)
sbb
add
or
out
dec
jbe
das
push
jae
inc
and
lods
retf
imul
push
dec
mov
pop
ins
mov
xor
movs
dec
sbb
stc
fist
in
rep
lds
xchg
mov
push
jns
ficom
ror
mov
aam
pusha
in
clc
ins
fucom
ret
dec
cmp
outs
cmps
mov
xchg
and
pop
pop
add
xor
movs
bnd
leave
and
xor
jb
fcomip
pop
not
movs
add
xchg
mov
xchg
mov
les
rcr
jne
xchg
xchg
(bad)
cmp
or
jno
lea
push
mov
cli
out
jge
sub
(bad)
fstp
and
jns
sbb
push
loopne
dec
add
shl
(bad)
ficomp
jecxz
cmc
add
enter
lods
push
call
inc
mov
add
shr
cmp
push
ins
xor
xor
xchg
lock
ror
xchg
idiv
push
outs
stos
js
cmp
xchg
sti
(bad)
mov
jl
rol
xor
or
retf
xchg
and
or
mov
sub
or
xlat
mul
lahf
outs
or
not
jmp
mul
leave
xchg
mov
or
push
int3
xchg
adc
adc
xor
(bad)
mul
fcomp
sub
cmp
mov
shr
jnp
cmp
xor
fsub
xor
sbb
scas
gs
add
mov
jno
mov
adc
ret
into
push
cmp
outs
mov
mov
cmp
mov
add
jae
addr16
mov
pop
pop
mov
and
call
push
das
dec
sbb
add
jecxz
cwde
in
xchg
stos
jl
xchg
sar
mov
cmp
in
test
scas
shl
and
shl
out
mov
sti
and
mov
pop
retf
inc
and
mov
ficomp
jbe
and
(bad)
aad
adc
jno
add
mov
adc
dec
stos
gs
pop
add
outs
mov
outs
imul
pop
push
add
iret
adc
sbb
inc
sub
inc
call
loop
test
sub
bound
sub
xchg
fcmove
add
jg
xor
outs
int3
(bad)
fisubr
repz
sub
cld
mul
jge
or
nop
sub
cmc
and
es
pop
scas
inc
sbb
mov
arpl
dec
push
(bad)
aad
lea
mov
(bad)
pushf
pop
addr16
scas
in
jp
dec
pop
shl
cmp
mov
sbb
inc
pop
cwde
and
test
scas
push
cmp
push
push
fwait
cmp
stos
mov
jae
std
inc
daa
fst
sub
dec
mov
inc
inc
ret
dec
push
out
fadd
scas
add
and
jb
mov
cdq
setg
je
sbb
jb
mul
loopne
mov
ret
jbe
popa
or
js
nop
out
fldenv
cwde
bound
jo
pop
in
test
pop
jg
rol
sar
stos
data16
add
mov
cdq
push
dec
mov
or
sbb
inc
jne
dec
xchg
jno
aaa
sti
test
sbb
push
xchg
mov
xchg
lods
cmp
jp
pop
sar
(bad)
fidivr
lds
adc
pop
stos
or
daa
mov
ds
xor
or
xchg
adc
lods
in
cmp
cmp
sbb
mov
out
jnp
sbb
jnp
aas
ja
pop
call
or
and
xor
xchg
mov
ror
inc
shl
push
sub
fst
pop
pop
fs
push
loop
cwde
fisubr
xchg
xchg
sar
mov
fstp
add
cmc
test
fwait
jmp
pop
pop
pop
fwait
xor
retf
shl
or
fbstp
mov
or
sbb
(bad)
jmp
and
hlt
call
mov
fwait
pop
or
pop
imul
popf
inc
int
popf
outs
fcmovne
in
jnp
xchg
mov
test
int
jp
imul
mov
stc
(bad)
dec
push
jecxz
push
adc
cmp
rol
movs
sub
cmp
outs
loop
(bad)
mov
retf
test
bound
add
pop
push
mul
data16
fptan
in
jb
sbb
or
cdq
cdq
fs
add
xchg
jb
pop
push
ret
add
xor
xchg
sbb
push
jle
push
call
in
loop
jge
sbb
push
loopne
cmp
shl
fdivr
cmps
sbb
dec
je
adc
ja
xchg
pop
in
jp
ret
sub
pop
lds
arpl
xor
xchg
mov
nop
push
add
inc
bound
dec
test
(bad)
adc
loop
in
mov
cwde
sbb
test
mov
push
jo
cmp
xor
aam
dec
push
je
sub
ret
leave
int
mov
popa
das
mov
add
out
mov
rcr
sbb
(bad)
fdiv
cmp
xchg
imul
push
je
sub
xor
shl
mov
test
dec
jp
xchg
adc
xor
sti
xchg
xchg
mov
scas
cmp
ss
xor
dec
stc
std
loopne
test
(bad)
jmp
or
lods
dec
xor
repz
addr16
into
mov
fs
jae
inc
mov
push
jmp
xor
cmp
sbb
bound
sub
mov
mov
xchg
cmp
adc
sub
ins
mov
push
or
push
sbb
and
sbb
and
cmp
pop
icebp
adc
imul
imul
mov
das
pop
(bad)
mov
xchg
iret
inc
and
ret
outs
cdq
es
mov
dec
or
or
in
pop
inc
lea
push
mov
not
sti
add
mov
ficomp
data16
mov
xchg
xchg
xor
inc
fcmovbe
xchg
out
aaa
adc
popa
hlt
int
inc
jne
jg
ds
leave
and
mov
data16
jp
bound
std
push
lods
test
and
mov
pop
sbb
dec
rcl
sub
adc
fld
lds
into
adc
xor
jge
mov
jne
inc
inc
sahf
retf
loopne
outs
mov
in
lock
inc
or
out
mov
jg
(bad)
or
ret
adc
ja
dec
xlat
js
pop
pop
jmp
(bad)
fld
mov
fdivr
xor
add
mov
out
push
mov
popa
push
sbb
pop
mov
add
daa
and
daa
movs
retf
imul
std
ins
sahf
js
push
inc
sbb
xor
leave
je
(bad)
cdq
sbb
data16
dec
jge
mov
loop
(bad)
test
es
imul
fsubr
sub
adc
sti
loopne
xor
lods
mul
ds
xchg
adc
std
and
loop
push
inc
cdq
jbe
outs
ins
movs
das
pop
mov
stos
xchg
daa
inc
jp
in
fidiv
out
cs
inc
push
out
add
imul
jne
jne
adc
pop
int
pop
dec
popf
xor
out
and
(bad)
fisttp
inc
in
add
nop
sub
xchg
(bad)
fsubrp
out
or
les
mov
enter
xchg
sub
icebp
pop
and
mov
jb
retf
dec
movs
push
fbstp
and
dec
inc
adc
push
xchg
mov
cmp
aas
fs
shl
jmp
aam
out
and
out
pop
adc
test
out
clc
test
jmp
add
aam
cmp
hlt
jmp
inc
sar
retf
mov
jno
dec
push
add
sbb
adc
sub
jno
xor
sbb
jl
jp
ficom
or
data16
adc
cmp
in
sti
xor
jo
pop
loopne
imul
pop
jp
push
push
cmp
loopne
pop
cdq
mov
int3
mov
gs
rcl
xor
(bad)
inc
add
and
inc
xor
or
inc
add
cdq
das
sbb
push
call
icebp
ret
jecxz
loopne
push
fcom
inc
xchg
scas
xchg
mov
cmovg
xchg
xchg
mov
jle
mov
das
mov
shr
pop
and
into
xchg
popa
aam
mov
lods
out
fisttp
adc
shl
test
jmp
mov
xchg
push
mov
pushf
mov
and
push
ret
push
push
retf
rol
bound
ror
cmc
mov
inc
and
pop
gs
xor
cmp
xor
fs
fstp
(bad)
loop
push
dec
sub
ss
cmps
pop
dec
mov
clc
icebp
repnz
jnp
push
sbb
shr
xchg
out
inc
lea
jnp
and
sub
cmps
xlat
inc
or
adc
test
lahf
dec
test
ins
xchg
pushf
mov
dec
out
mov
cmps
fdiv
jmp
pop
pop
fistp
aad
dec
cli
leave
mov
pop
sbb
loope
xchg
pop
sar
stos
inc
sbb
sub
xchg
ins
loop
ja
das
ins
enter
lods
dec
sti
jmp
(bad)
not
dec
outs
std
jmp
or
adc
xchg
in
stc
add
push
call
std
test
adc
push
in
jne
push
sahf
rcl
xchg
popf
cwde
pop
push
jmp
mov
and
push
fistp
stos
paddb
cmps
push
in
outs
ja
loope
fwait
push
mov
mov
lahf
(bad)
cmps
aam
mov
popf
pop
ret
scas
lock
(bad)
xor
inc
jecxz
icebp
mov
dec
neg
fiadd
add
mov
dec
push
xor
push
mov
sbb
int3
add
and
ins
outs
nop
adc
add
repz
test
inc
jle
mov
push
mov
lods
add
out
jge
pop
jp
dec
ret
adc
jns
jbe
outs
or
xlat
int3
mov
xchg
inc
adc
lea
push
outs
or
mov
xchg
(bad)
repnz
(bad)
cmp
dec
cli
cdq
adc
sub
and
xchg
dec
addr16
aad
mov
sbb
sub
add
lods
or
mov
cli
dec
mov
and
ret
xchg
lea
mov
aaa
or
jle
xor
xor
mov
arpl
loopne
jp
mov
pop
add
and
jmp
cmp
push
mov
fst
fst
xor
dec
sbb
cmc
repnz
test
pop
daa
add
xor
gs
loope
adc
loopne
dec
addr16
addr16
mov
rol
ffree
pop
(bad)
fcomi
icebp
mov
clc
rcl
mov
call
inc
sub
cdq
xor
mov
fist
sbb
push
mov
fistp
xor
mov
mov
xchg
fbld
stc
fadd
xchg
or
(bad)
hlt
ss
push
xchg
sbb
jns
fadd
aas
clc
dec
add
aas
sbb
sub
pop
or
lods
jmp
in
xor
loopne
cmp
sub
iret
dec
and
fld
rol
aaa
bnd
in
mov
fisub
mov
adc
stc
dec
push
int
xor
push
ja
mov
jns
hlt
scas
sub
mov
cmp
scas
sahf
cmp
xchg
iret
pushf
cmp
dec
xchg
add
ss
push
fmul
(bad)
call
sub
out
fs
lea
mov
loopne
jmp
pop
xor
inc
cmp
pop
(bad)
ret
sub
and
jmp
mov
nop
stos
movs
sahf
shr
and
mov
cmp
test
or
push
xor
cs
push
or
pop
mov
adc
cmp
ret
lea
mov
inc
sub
in
nop
rcr
push
repz
pop
adc
jae
outs
pop
add
push
popf
cld
packuswb
adc
gs
fistp
retf
fs
xchg
clc
sbb
or
aam
inc
mov
xor
pushf
cld
adc
(bad)
or
or
xor
ja
jne
sub
jge
sbb
push
imul
jnp
mov
lods
scas
pop
xchg
sbb
imul
in
fsubr
push
jb
in
sahf
mov
test
xchg
dec
das
mov
xchg
inc
mov
or
and
mov
cmp
or
retf
inc
ret
mov
mov
ret
pop
mov
int
popf
mov
in
ret
aaa
jl
fistp
sar
dec
cdq
xchg
push
sub
loop
jmp
das
push
shl
scas
adc
lea
fnstcw
fs
jmp
das
das
push
sbb
ret
(bad)
pop
retf
cmp
pop
pop
mov
fwait
mov
sar
jecxz
inc
popa
mov
mov
lock
sub
rcr
and
mov
cmc
dec
cs
les
pop
bswap
(bad)
clc
(bad)
fsub
push
inc
movs
shr
mov
loope
aaa
jbe
and
xchg
sbb
and
addr16
jg
xor
loop
mov
jb
loop
mov
faddp
mov
imul
sbb
movs
or
jae
and
ins
adc
rol
jb
test
inc
call
jb
pusha
stos
pop
xchg
mov
les
cmp
clc
pop
mov
out
ja
jg
outs
fimul
repz
xchg
cmp
push
rol
pop
div
sbb
xlat
jl
mov
call
dec
(bad)
fsub
(bad)
test
cmps
xor
icebp
cmp
xchg
scas
leave
push
les
(bad)
sub
or
(bad)
in
pop
ins
add
cwde
ds
lahf
xor
(bad)
sbb
add
pusha
dec
addr16
jmp
(bad)
sub
jns
cmps
lods
(bad)
hlt
sub
lods
adc
sti
data16
imul
in
jmp
movs
popa
out
repnz
repz
outs
or
rol
jp
daa
jg
dec
adc
adc
loopne
add
xchg
mul
jp
pop
cmps
cmps
mov
bound
push
pop
(bad)
ss
lods
and
fidivr
and
test
pusha
sbb
pop
out
in
ficom
mov
sbb
jmp
or
add
addr16
pop
jae
call
cmp
xchg
lahf
add
jmp
cmp
mov
mov
out
pop
dec
in
jbe
or
movs
imul
lods
out
cmp
in
test
mov
nop
mov
xor
outs
push
sbb
addr16
push
aad
lods
dec
push
pop
shl
ins
scas
mov
add
mov
jbe
adc
push
test
mov
mov
mov
out
jle
inc
and
daa
jmp
lds
mov
out
in
mov
test
inc
dec
sub
sbb
or
mov
mov
jae
aam
and
cmps
dec
pop
add
iret
pop
icebp
mov
and
mov
add
mov
xor
test
add
sub
fwait
cmp
jecxz
out
jge
mov
addr16
stos
adc
es
aaa
hlt
push
push
in
cmc
pop
and
(bad)
cmp
adc
and
dec
sbb
xor
lods
retf
push
mov
fnstenv
mov
hlt
scas
sub
mov
jnp
call
inc
or
mov
mov
mov
fiadd
div
std
mov
sbb
mov
adc
add
mov
mov
cmp
mov
std
mov
outs
cmp
pop
mov
xlat
ins
sbb
test
jne
adc
jmp
mov
cmc
adc
out
jb
int
fidiv
dec
or
mov
mov
repnz
jecxz
dec
sbb
push
xor
test
test
neg
movs
dec
dec
xor
data16
pop
imul
bound
sbb
xchg
adc
out
cmp
into
adc
les
or
leave
jo
xchg
das
pop
or
xor
mov
scas
mov
xchg
ss
ret
inc
repz
leave
das
pop
cmp
cmp
add
cmp
repnz
rcl
jecxz
mov
in
cmp
lahf
mov
addr16
add
jne
mov
jne
popa
cwde
add
shr
push
dec
push
cld
jecxz
repnz
stos
mov
lea
(bad)
and
inc
mov
inc
xchg
sub
mov
push
outs
mov
pop
xor
(bad)
mov
pop
xor
data16
out
xchg
imul
push
xor
shr
and
jno
and
fwait
stc
push
sub
cdq
fwait
icebp
into
into
cmp
inc
icebp
loop
pop
ins
cmp
les
or
(bad)
test
js
movs
shl
cmp
cwde
jns
push
ins
sub
xchg
adc
mov
ins
add
push
outs
popf
mov
ret
push
mov
enter
cmp
jbe
add
adc
clc
repz
add
call
cmp
and
xchg
sub
sub
or
mov
pop
ds
(bad)
mov
lock
dec
in
jb
cmp
aad
pop
inc
push
aad
mul
call
jbe
push
fisub
out
cld
pusha
inc
cmc
les
fiadd
xlat
xchg
mov
push
das
inc
into
les
sar
aad
das
(bad)
or
push
loop
adc
push
mov
loopne
jbe
into
mov
cmp
jle
mov
pop
retf
sub
jbe
pushf
jge
jecxz
or
cdq
loopne
cmp
cli
(bad)
rol
mov
push
add
and
enter
scas
sbb
ss
dec
cmc
mov
mov
or
nop
arpl
gs
sub
aam
clc
inc
push
bnd
into
pop
ficomp
sbb
shl
pop
xchg
sub
and
sub
add
clc
(bad)
ror
add
ds
dec
mov
xlat
fwait
cmps
mov
mov
or
mov
add
add
pop
jg
and
(bad)
fiadd
retf
addr16
bound
add
outs
fisub
repnz
mov
or
mul
(bad)
adc
aad
(bad)
out
gs
mov
sub
or
mov
and
adc
or
xchg
ja
xor
or
std
pushf
dec
ficomp
cmp
adc
xchg
jne
push
out
pop
js
cmc
repnz
(bad)
repz
(bad)
push
aas
xor
fbld
test
xchg
fwait
dec
daa
mov
ror
xchg
or
xchg
data16
mov
push
xchg
test
in
cmp
and
(bad)
call
pop
or
xor
lea
sub
add
dec
mov
xlat
mov
jl
loopne
or
push
(bad)
shr
test
xchg
or
lods
in
pop
call
xor
push
xlat
mov
xchg
jno
jne
daa
test
arpl
les
in
sbb
pop
and
std
test
(bad)
retf
loopne
bnd
lods
rcl
fucomi
scas
push
xchg
in
jp
xchg
dec
mov
push
loopne
shl
pop
jle
fsubp
pop
xor
aad
mov
lds
cs
jle
jnp
jecxz
retf
popa
mov
dec
jnp
dec
int
or
dec
ins
adc
add
pushf
or
or
out
mov
fmul
fidivr
fndisi(8087
fxtract
jnp
inc
jl
fisttp
jge
out
inc
in
add
pop
es
sbb
pop
cmp
sbb
loope
out
jno
jg
adc
aam
data16
jmp
repz
arpl
xchg
mov
enter
call
adc
cmp
adc
xchg
gs
(bad)
mov
mov
pop
xor
ja
outs
mov
pop
jp
cmp
aas
jb
pushf
dec
add
jmp
mov
cwde
add
scas
inc
mov
movs
jo
dec
sbb
stos
pop
xchg
mov
mov
(bad)
mov
outs
pushf
push
mov
aas
sbb
lock
sbb
push
sub
mov
cmp
test
aaa
mov
movs
fldenv
cmp
sub
test
sar
jle
(bad)
int
lahf
jge
in
mov
int3
aam
or
jl
adc
iret
js
push
mov
cs
push
adc
ret
loop
arpl
push
in
mov
shl
sar
scas
xor
shl
rol
add
dec
add
shl
mov
jg
test
pop
sub
call
adc
fcmovnb
ins
les
in
mov
fcmovnbe
adc
addr16
cdq
push
xlat
lahf
test
inc
xor
cmp
rol
lds
in
lock
fisttp
sub
push
jns
jmp
xchg
and
mov
push
adc
cmps
pop
adc
fild
int3
mov
rol
jb
sbb
mov
fs
sbb
sub
aaa
cmp
mov
jmp
dec
lahf
add
add
pop
in
inc
mov
hlt
in
sbb
cmps
jae
mov
ja
cmp
dec
outs
or
fnsave
adc
mov
iret
sbb
sbb
leave
mov
ret
jl
idiv
mov
dec
push
out
dec
mov
addr16
mov
cmp
inc
(bad)
ds
in
iret
adc
stos
sti
or
and
ret
pop
mov
fisubr
xchg
lods
sbb
dec
int
stc
dec
cmp
mov
mov
push
shr
mul
aas
adc
ret
rcr
stos
sub
and
mov
and
sbb
test
popa
cmp
dec
ja
out
and
adc
mov
adc
lock
movs
aam
xlat
gs
icebp
pop
dec
fisttp
hlt
test
adc
into
out
(bad)
in
xor
add
jmp
je
in
adc
movs
out
cmp
adc
or
sbb
push
retf
ja
addr16
sbb
mov
jae
sti
inc
cli
clc
mov
xchg
or
pushf
call
ds
xchg
repnz
lea
xchg
and
jno
mov
(bad)
or
adc
sub
mov
mov
push
mov
cmp
loope
mov
jp
nop
cwde
stos
out
xchg
(bad)
leave
mov
int3
sahf
inc
xor
mov
leave
mov
cmp
enter
inc
cmp
imul
push
rcl
xchg
jb
cdq
dec
mov
inc
mov
dec
and
mov
cmp
dec
dec
test
push
aaa
daa
cmp
jecxz
jb
mov
jbe
or
fwait
jno
test
sbb
jg
push
dec
ret
in
mov
fs
xchg
les
dec
pop
push
lahf
push
adc
test
scas
daa
add
lods
pop
cwde
adc
sbb
push
loop
or
adc
adc
call
mov
jp
mov
adc
adc
jmp
lods
mov
add
push
pop
test
aas
lods
pop
loopne
and
add
mov
xor
mov
push
pop
sbb
pop
push
dec
addr16
mov
xchg
pop
lods
outs
adc
sbb
xchg
mov
and
and
dec
adc
dec
jmp
popf
cmps
(bad)
adc
jnp
stc
sub
out
fstp
fdivr
ficomp
and
ror
mov
adc
js
mov
cmps
jnp
out
les
inc
cmp
out
mov
aam
test
aaa
xor
sub
div
fdivp
fdiv
dec
lods
into
push
neg
lock
xor
aam
xchg
mov
ins
in
add
adc
stc
cmp
gs
xor
and
stos
scas
bswap
cmps
pusha
cmp
int3
cmp
xor
repnz
lahf
jge
jp
sbb
into
test
xor
jl
mov
dec
sub
(bad)
mov
xlat
int3
addr16
mov
mov
lock
pop
or
sbb
sahf
push
xlat
in
dec
mov
sahf
mov
shr
cdq
inc
push
call
and
pcmpgtw
mov
lods
jmp
pusha
push
push
sub
jmp
dec
lea
xchg
jle
loope
aad
ds
jbe
add
hlt
pop
call
mov
pop
xchg
loopne
ror
icebp
icebp
mov
pop
dec
bound
stos
and
fdivr
inc
sbb
rcr
iret
add
pop
fstsw
add
dec
mov
rol
lahf
daa
inc
or
retf
sub
cmp
daa
xor
sbb
push
out
lock
clc
call
cmp
mov
stos
out
jg
call
push
leave
add
f2xm1
das
ficomp
jbe
xchg
or
fcom
out
shl
mov
shr
call
inc
lods
(bad)
or
pop
mov
dec
inc
add
std
mov
pop
shl
call
mov
imul
repnz
imul
pop
push
xchg
mov
sub
cmp
pop
and
stc
cmps
aaa
jmp
popf
rcl
or
push
sub
outs
or
sub
sub
sar
jnp
imul
inc
inc
sub
ffreep
mov
inc
movs
mov
rcl
xor
mov
scas
inc
in
ficomp
add
sbb
lahf
jne
pop
aaa
add
dec
and
push
mov
sub
addr16
pop
pop
popf
iret
repnz
aaa
addr16
ret
pop
mov
sbb
(bad)
jge
jecxz
cmc
fsub
je
sub
cwde
mov
std
and
retf
mov
xor
cmovae
ds
js
sbb
and
sub
cmc
mov
add
inc
sbb
sti
mov
jae
jmp
adc
call
call
scas
mov
mov
xchg
and
lea
imul
jb
lea
int3
loope
cwde
xchg
jge
ficomp
mov
aad
inc
xchg
in
or
stos
add
adc
test
xor
jg
adc
xchg
(bad)
es
push
iret
xchg
jecxz
sbb
pop
aam
dec
in
mov
dec
(bad)
sbb
call
push
adc
retf
iret
rcr
int
mov
(bad)
push
mov
fst
rcl
pop
retf
push
push
push
mov
les
ins
xor
enter
and
mov
push
rcl
and
sbb
in
in
aas
xchg
sub
or
cmp
pop
scas
mov
fadd
aaa
aas
in
and
dec
iret
retf
loopne
outs
in
mov
pop
push
es
adc
icebp
(bad)
pop
repz
jbe
scas
(bad)
js
pop
dec
cmps
jmp
pop
loope
pop
daa
add
pusha
lock
mov
les
add
iret
or
pusha
das
(bad)
push
or
enter
das
test
sub
push
das
in
and
dec
pop
xor
enter
jne
fiadd
popa
cmp
xor
push
scas
popf
sub
mov
cli
pop
push
dec
gs
add
mov
push
dec
push
loope
mov
sub
fistp
ret
retf
aam
mov
jmp
jb
mov
into
icebp
mov
xchg
ret
popa
add
add
pop
xchg
js
sub
pop
jmp
movs
loope
dec
push
cdq
or
pop
shl
in
mov
fidiv
hlt
pop
rcr
jmp
and
jne
inc
div
jmp
cmp
sub
mov
cld
adc
cmp
sbb
icebp
jmp
popa
ficom
rcr
(bad)
call
lods
cwde
cmp
mov
aaa
jnp
mov
mov
jge
data16
sub
jp
pop
gs
and
je
sub
call
prefetcht2
imul
jns
adc
enter
lods
test
inc
sub
adc
jb
loope
xor
inc
iret
(bad)
out
ret
xchg
(bad)
out
rcl
aad
int
pop
std
into
fs
ja
push
push
sub
xchg
mov
pop
int3
out
mov
sbb
std
jl
aas
pop
mov
sub
add
shl
loope
fcom
sti
pop
mov
imul
jo
leave
cwde
inc
mov
hlt
jecxz
fiadd
mov
stos
or
cmp
ret
js
inc
mov
cmp
int3
test
rol
popf
repnz
cmc
call
idiv
es
jno
add
js
jo
pusha
mov
pop
push
iret
adc
in
mov
inc
xchg
xor
es
icebp
lds
jae
or
cmp
aas
lods
dec
xchg
aaa
stos
lock
jne
jae
sahf
mov
jg
shr
cdq
mov
pop
add
mov
jg
adc
data16
out
inc
jno
iret
(bad)
hlt
ds
in
jno
mov
sub
xor
div
call
inc
ja
sub
bnd
dec
fnsave
fldenv
inc
or
pop
cdq
mov
push
inc
xlat
cmp
cmp
push
jl
outs
ret
out
call
arpl
in
cli
xlat
mov
add
inc
mov
adc
xor
jge
push
loopne
ss
push
in
mov
stos
ins
mov
push
retf
imul
jno
test
mov
mov
pop
push
push
sub
jo
pop
rol
ret
jl
stos
stos
lahf
mov
je
jns
(bad)
int3
scas
sub
(bad)
xlat
xchg
pop
or
mov
mov
icebp
push
test
cmp
bound
push
cmc
add
nop
ins
mov
or
cmc
pop
js
int3
dec
test
or
stos
push
fimul
or
ss
das
dec
(bad)
out
add
call
std
mov
aaa
jmp
xchg
mov
lock
push
bound
push
push
pushf
fidivr
jbe
or
xchg
push
inc
clc
mov
lock
xchg
push
adc
push
xchg
jp
clc
pop
mov
mov
jbe
mov
inc
sub
ret
sub
push
cli
xor
or
aas
aaa
xlat
ret
stos
sbb
and
mov
out
lds
imul
daa
sbb
add
lahf
mov
xchg
test
jne
add
enter
bound
inc
cwde
push
jae
movs
(bad)
pop
cli
sbb
mov
push
inc
fsubr
pop
bound
dec
jb
push
add
ins
jne
enter
pop
clc
fbld
lds
test
or
push
daa
mov
push
out
mov
popa
mov
and
ins
in
leave
fidiv
outs
xor
add
xchg
sbb
pusha
xchg
jp
inc
mov
ffree
dec
arpl
cwde
pop
cmp
jl
repz
lock
stos
jp
dec
xchg
js
jae
imul
adc
aam
jno
(bad)
push
sahf
arpl
js
cmp
test
mov
imul
int3
adc
shl
xchg
(bad)
ja
cmc
add
js
mov
loop
mov
or
ins
pop
int3
je
mov
jne
and
cmp
and
sar
fs
inc
mov
jno
enter
inc
push
lds
push
ins
(bad)
dec
lahf
rol
inc
in
enter
hlt
iret
jmp
fld
xchg
and
add
aam
call
dec
ja
stos
adc
mov
push
bound
xlat
aaa
xor
dec
push
inc
or
mov
rol
sbb
mov
pop
repz
stc
push
xchg
mov
scas
jp
and
dec
fs
pop
pushf
adc
popf
bound
jp
in
dec
and
pop
in
dec
rcr
pusha
jmp
push
call
call
jp
fwait
ret
in
es
mov
xchg
push
xor
pop
jl
test
push
dec
(bad)
call
test
mov
mov
jecxz
xchg
or
js
push
sub
popf
addr16
sub
mov
mov
ds
xsaveopt
(bad)
mov
push
fadd
cli
not
mov
vprorvd
fcomp
test
cdq
lahf
test
test
out
xchg
push
scas
int3
adc
pushf
or
scas
cs
shl
xchg
xor
popf
mov
mov
scas
cmc
in
mov
pop
xor
mov
rol
add
(bad)
jmp
das
dec
stos
call
push
(bad)
das
icebp
cli
jne
aad
mov
sahf
int3
xchg
adc
and
retf
daa
stc
xor
fistp
pop
sbb
arpl
sub
fsubrp
retf
addr16
mov
stos
and
ret
jo
push
jecxz
icebp
int3
cmps
repz
cwde
or
or
mov
mov
and
inc
call
mov
or
adc
sbb
add
mov
sbb
in
in
push
jecxz
bnd
ret
ins
push
aad
mov
repnz
js
call
pop
cmp
imul
jl
pop
pop
movs
sub
mov
sahf
jp
jae
mov
div
or
xchg
xchg
or
xor
jnp
jbe
gs
and
sub
sahf
jmp
mov
jno
gs
cmp
sbb
xor
iret
(bad)
push
aas
push
pop
add
push
(bad)
jmp
jmp
int3
add
fucomi
aaa
fisttp
ror
cli
cld
aam
adc
and
inc
pop
gs
and
out
dec
mov
dec
stc
xlat
sti
xchg
cli
xchg
fs
mov
je
sar
repz
sub
cld
ret
sahf
cmp
adc
sub
mov
xchg
fmul
loopne
repz
mov
xor
cld
fnstsw
(bad)
rcr
jnp
jmp
push
or
sub
loopne
xchg
jbe
iret
retf
inc
(bad)
in
xchg
add
fidiv
(bad)
mov
jp
push
loop
fs
ret
cmc
push
push
js
add
xlat
cmp
les
mov
not
xor
mov
cmp
dec
xchg
daa
cmp
and
jae
scas
leave
adc
ins
sbb
pop
dec
mov
mov
sahf
mov
out
fcomp
sub
xchg
jno
repnz
mov
dec
stc
les
jl
sbb
aas
cmp
push
add
cmps
mov
into
sbb
stos
cli
shr
sub
lock
push
das
rcr
cmp
jb
ja
icebp
mov
addr16
xchg
lods
rcl
jge
icebp
inc
inc
rol
loopne
dec
xchg
inc
int3
sub
add
and
jle
les
ins
retf
leave
fidiv
inc
scas
lods
fstp
out
adc
xor
ja
pop
fs
cmps
mov
or
mul
outs
mov
loop
push
int3
mov
add
push
iret
pop
pusha
das
sbb
xor
mov
jl
pop
mov
es
push
repnz
mov
lea
jmp
jmp
test
and
cmps
push
pushf
rcl
stos
dec
xlat
imul
cs
call
pop
or
mov
loop
test
sub
addr16
ror
pop
mov
sysret
loope
imul
pop
xchg
cld
adc
xor
pop
loop
scas
mov
jno
test
dec
inc
mov
xchg
adc
fimul
jl
(bad)
fstp
in
mov
fwait
fwait
imul
sbb
ficom
pop
inc
cmp
outs
cmp
loop
jp
mov
scas
(bad)
cmp
xor
movs
inc
mov
(bad)
mov
xor
xor
cwde
int3
mov
fucomi
dec
push
movs
sub
mov
and
sbb
sub
js
cmp
xchg
inc
and
mov
enter
inc
out
xor
fisub
(bad)
and
je
cmc
xor
sbb
sbb
push
rcr
xchg
push
sub
leave
push
cmp
sbb
adc
xlat
ret
sbb
pop
fidiv
mov
cmps
aad
(bad)
icebp
pop
adc
pop
outs
stos
sbb
or
pop
movs
imul
fcomip
push
inc
jbe
inc
dec
fld
mov
popf
add
mov
mov
jp
inc
cwde
sub
mov
xchg
sub
push
and
call
adc
enter
push
loopne
enter
add
(bad)
or
(bad)
xchg
ds
cmp
mov
xchg
jmp
dec
dec
enter
neg
mov
scas
jns
dec
push
aam
add
cmp
xchg
(bad)
dec
add
jnp
mov
cs
sub
and
(bad)
pop
out
cmp
mov
(bad)
out
inc
mov
std
scas
or
adc
(bad)
cmp
push
xchg
push
jecxz
cs
mov
mov
mov
cld
or
cmp
clc
clc
dec
int
int3
dec
inc
lahf
jne
retf
jge
lahf
push
sub
mov
mov
cmps
mov
cli
imul
add
fwait
mov
sub
fild
enter
mul
movs
pop
sbb
repz
pop
dec
hlt
(bad)
xchg
jmp
xor
test
xchg
push
adc
popf
mov
out
das
push
pop
call
(bad)
xchg
cmps
in
ins
out
or
cmps
fwait
dec
push
fild
sub
lods
test
push
call
fcom
lds
and
push
inc
xchg
mov
mov
out
jne
add
add
mov
pop
jmp
mov
jbe
mov
loop
jne
cmps
out
mov
cmp
dec
fsubp
xchg
and
jo
and
pop
out
fst
shr
fcom
xchg
cs
lahf
xor
jo
stc
xor
ret
sub
cmc
xor
aaa
pusha
cmps
xor
pop
loopne
mov
shr
loop
jmp
stc
push
sbb
and
cli
loop
adc
mul
ror
push
jns
pop
add
imul
mov
adc
arpl
pop
xchg
jl
ret
mov
lea
mov
xchg
(bad)
cmp
push
mov
pop
fwait
mov
adc
push
fwait
aaa
aas
dec
mov
pushf
sbb
pop
jmp
pop
out
xor
jmp
push
pop
bound
jmp
fwait
sbb
dec
jp
adc
cli
add
and
ficomp
cmove
dec
mov
pusha
(bad)
test
ja
cmp
mov
inc
jbe
fst
push
out
mov
scas
pusha
sbb
adc
sub
lea
mov
call
mov
xchg
test
pop
xchg
mov
pop
enter
sub
lock
fadd
in
mov
mov
adc
mov
iret
adc
xor
sub
xchg
xor
stos
pusha
xchg
mov
push
ja
cmc
lahf
sub
cdq
leave
mov
movs
pop
add
mov
std
jmp
mov
pop
(bad)
cmps
jmp
aam
cmp
push
lds
hlt
jmp
aam
nop
jge
push
aas
pop
xchg
adc
pop
(bad)
dec
div
fs
cld
push
adc
imul
mov
sub
mov
xchg
xchg
hlt
push
ja
adc
icebp
loop
dec
and
lock
cmp
jae
in
test
or
push
add
dec
sbb
inc
outs
pop
in
cmps
jb
aad
ret
pusha
sub
(bad)
je
call
(bad)
fld
mov
cmp
aas
xor
rcl
jl
or
add
inc
(bad)
es
sbb
push
mov
pusha
scas
xchg
je
(bad)
imul
xor
into
add
xor
pop
dec
add
jecxz
cli
jb
fcomp
push
inc
xchg
push
pop
inc
dec
mov
push
jne
mov
cmp
jl
xlat
dec
push
adc
sbb
les
jmp
mov
cmp
jmp
out
cmp
inc
mov
retf
arpl
pop
fadd
mov
or
push
xchg
add
jns
jg
loopne
fld
or
push
mov
outs
ins
dec
gs
cmp
xor
pop
enter
jo
and
test
loop
dec
(bad)
hlt
xchg
or
mov
push
idiv
leave
imul
nop
mov
sub
ins
inc
cli
dec
fbld
(bad)
cmc
push
mov
int3
xchg
nop
mov
mov
xor
pop
mov
xlat
cmc
adc
stc
mov
cmps
stos
cmp
or
push
dec
int
mov
lds
sbb
sub
adc
iret
aaa
mov
push
xor
jns
rol
jmp
sub
sub
dec
xchg
jnp
xchg
loopne
aad
xchg
(bad)
mov
outs
popa
lods
cmps
test
add
pop
sub
jno
mov
arpl
xchg
stos
push
mov
rol
mov
ret
xchg
jno
jbe
xchg
mov
inc
xchg
(bad)
sbb
sbb
in
sbb
adc
(bad)
call
aas
xor
jge
cmp
out
loop
jle
xchg
xchg
popf
mov
out
je
(bad)
adc
mov
dec
lahf
mov
xlat
nop
in
sub
jnp
mov
shl
rol
cmps
jle
cs
fadd
fldcw
icebp
bound
pop
push
out
xchg
aaa
push
ret
xlat
(bad)
rcl
add
xchg
gs
or
or
add
movs
lock
cmp
push
mov
pusha
add
addr16
out
xchg
jne
push
ins
es
aad
cmp
sbb
push
mov
and
jmp
push
(bad)
and
aad
(bad)
pusha
add
inc
or
pop
leave
push
fild
inc
mov
fld
add
jno
scas
push
jl
repz
xchg
test
test
call
das
and
dec
inc
movs
mov
mov
(bad)
jmp
std
mov
xchg
ret
(bad)
dec
and
cmp
iret
pop
(bad)
ror
(bad)
push
mov
js
shl
sti
scas
xor
mov
or
into
adc
inc
out
lahf
mov
sbb
stc
cli
out
stos
inc
imul
in
iret
mov
push
jmp
les
lods
imul
dec
aam
or
pop
rcr
js
and
aas
sti
pop
xor
mov
mov
jbe
shl
cli
xlat
int3
sub
mov
cs
ins
test
cmp
sbb
sar
les
xchg
jo
inc
jnp
mov
adc
add
sub
(bad)
push
inc
mov
cdq
stc
iret
sbb
aad
mov
jns
xor
and
rol
xlat
push
(bad)
sub
ins
movs
xchg
outs
xor
xlat
fadd
xor
jge
(bad)
icebp
outs
mov
pusha
push
mov
mov
xchg
jle
int
and
xchg
inc
rcr
cmc
jecxz
stos
mov
xor
push
xor
sub
leave
retf
jmp
outs
sbb
push
dec
push
(bad)
sub
push
mov
adc
(bad)
xor
mov
lea
retf
xchg
cmps
cmps
arpl
movs
mov
or
jmp
les
dec
xchg
adc
ret
das
out
mov
mov
jecxz
ja
pop
inc
push
mov
push
push
call
pop
xchg
loope
jmp
gs
jmp
fisubr
mov
dec
xchg
xor
xchg
mov
xchg
shl
and
iret
mov
push
imul
aas
inc
pop
leave
sti
int3
mov
test
and
and
aaa
div
ja
das
jge
dec
mov
sbb
jmp
pop
scas
adc
push
pushf
xchg
or
push
ins
lds
stc
rcr
push
je
ins
inc
or
sub
sub
popf
or
and
or
sbb
popf
sub
idiv
fiadd
scas
rcl
in
mov
pop
gs
ins
loopne
jbe
sbb
frstor
pop
outs
jle
js
popa
sbb
inc
xor
test
xor
dec
sahf
xor
mov
xchg
ins
pop
shl
fisubr
ins
mov
or
aam
adc
stos
shl
inc
call
mov
fbld
inc
push
and
mov
inc
mov
cmps
aad
xchg
mov
cmp
sbb
and
mov
and
add
ja
mov
add
cmp
ins
pop
cmp
and
sbb
(bad)
sbb
lods
cld
xor
and
mov
jle
or
push
out
jp
clc
imul
out
pop
sbb
(bad)
inc
xor
cmp
rcr
mov
movs
and
cmp
sub
ret
cwde
sub
cmc
cmp
fist
cmps
popa
push
popf
xor
dec
fnstsw
arpl
push
cmp
int3
mov
jp
jmp
or
sbb
pop
cwde
sbb
aas
popf
mov
and
inc
std
sub
sbb
xor
xchg
leave
mov
cmp
jg
dec
inc
mov
adc
neg
sub
mov
dec
fwait
xchg
js
xchg
mov
cs
mov
push
stos
mov
call
(bad)
enter
shl
cmp
imul
inc
test
mov
push
xor
dec
lea
xchg
jmp
add
pop
and
adc
pop
popa
inc
sar
cmp
sub
js
push
dec
jle
xchg
out
aam
inc
mov
add
mov
add
scas
push
jbe
fwait
xchg
dec
(bad)
jl
mov
mov
pop
in
dec
das
and
and
pop
jmp
sub
sbb
rol
jae
outs
test
lods
rol
mov
daa
inc
ret
mov
sbb
mov
xor
shl
xchg
mov
pop
out
clc
cdq
sti
xor
xchg
inc
mov
mov
push
push
xlat
mov
sub
xchg
xchg
inc
mov
pop
lahf
inc
loop
lods
stc
out
mov
mov
loopne
or
pop
aaa
mov
sub
push
mov
xlat
mov
mov
mov
inc
mov
cmp
sub
dec
bound
dec
sbb
lods
xchg
xor
and
pop
jnp
outs
(bad)
mov
mov
or
mov
movs
pop
xchg
mov
or
dec
clc
jb
sbb
adc
add
daa
sahf
in
sahf
or
ins
test
and
and
cmp
pushf
mov
cmp
push
out
mov
xchg
inc
repnz
retf
cwde
loop
out
adc
cmp
cmc
sahf
inc
retf
jmp
data16
adc
(bad)
adc
imul
cs
sub
out
imul
(bad)
es
out
fst
mov
addr16
jg
cmc
sbb
mov
out
ret
adc
xchg
adc
int3
in
lahf
xor
push
mov
test
mov
sar
shr
add
cmp
push
add
mov
outs
js
push
jecxz
data16
fs
jae
adc
and
mov
jge
adc
push
push
jns
or
les
pop
leavew
das
push
sub
xchg
ja
cmp
clc
sbb
je
fsubr
jmp
sbb
jecxz
mov
(bad)
pushf
inc
into
inc
hlt
ins
mov
movs
push
push
adc
mul
sub
or
mov
sbb
adc
xchg
fs
cmp
imul
xchg
(bad)
outs
ror
mov
inc
(bad)
lahf
push
mov
jne
pop
fs
push
fisubr
sti
inc
cmp
sbb
fs
push
test
(bad)
iret
push
xor
arpl
cld
test
sub
cmps
xor
(bad)
rol
or
nop
nop
(bad)
sub
inc
sub
shr
lods
mov
mov
jp
and
xor
sti
stos
aam
aaa
pop
cdq
xchg
push
mov
cld
adc
jg
xchg
(bad)
imul
pusha
ins
cmp
jnp
push
les
ins
pop
jecxz
es
or
sub
xchg
ins
aam
stc
cmp
loopne
mov
jne
enter
ret
xchg
push
push
cmps
jl
fcomp
js
les
mov
stos
sbb
jno
add
sbb
jae
sbb
adc
xor
repz
sub
or
dec
jae
sub
pop
cmp
sbb
push
stos
cmps
inc
mov
clc
outs
data16
jae
ret
pop
mov
push
sbb
leave
stos
hlt
pop
dec
fld
int3
iret
or
daa
and
jno
cld
in
inc
call
int
inc
stos
sbb
int
add
mov
cmp
xor
cmp
sar
rol
jb
cli
push
sub
clc
mov
je
inc
xchg
mov
push
dec
dec
xchg
and
popa
jbe
mov
fsub
std
arpl
repz
cmp
js
mov
sbb
dec
mov
xchg
or
std
lods
pop
jle
ins
xchg
sbb
dec
mov
arpl
int3
fidivr
out
mov
sub
ror
adc
lods
mov
mov
xor
or
repnz
in
jnp
cli
sbb
cli
ret
xor
sbb
in
inc
out
aaa
call
out
ret
mov
pop
movs
shl
add
in
pop
xchg
inc
sub
mov
test
inc
cmc
inc
aam
test
cmc
aam
aaa
xor
sahf
push
bound
sub
adc
in
jns
in
(bad)
fcom
inc
out
or
retf
sub
push
lods
mov
inc
popa
pop
fld
ffree
sbb
adc
push
arpl
leave
push
iret
idiv
hlt
cmc
imul
outs
xor
mov
(bad)
fmul
sub
retf
cdq
jns
sub
xlat
sub
test
or
sbb
es
ficom
push
cmps
in
mov
fidivr
add
out
movs
cs
in
pusha
ss
xchg
stc
daa
cld
popw
jg
jg
push
mov
push
pop
pop
cmp
mov
inc
not
inc
or
iret
dec
jp
mov
(bad)
out
fdiv
(bad)
in
cmps
mov
mov
pop
mov
fcom
jge
cmp
push
repz
ret
xlat
mov
push
mov
xchg
rcr
push
push
inc
xor
int3
jb
aaa
or
stos
mov
mov
not
adc
movs
jmp
cmp
(bad)
dec
aad
aaa
fcom
call
loope
(bad)
mov
pop
in
hlt
xchg
idiv
xor
xchg
add
dec
fadd
push
pop
in
enter
xchg
add
xor
movs
cmps
xlat
rcr
inc
add
cs
loope
mov
xchg
pop
lock
movs
cmp
fild
adc
dec
mov
dec
and
inc
fwait
out
ins
stos
pop
ret
and
and
(bad)
and
mov
inc
add
push
aaa
retf
aaa
outs
call
sahf
mov
add
pop
adc
xchg
dec
and
lea
jne
sub
cli
int3
dec
mov
or
(bad)
out
(bad)
std
jecxz
sar
push
mov
scas
repz
ins
es
add
mov
aam
pop
cmp
xor
mov
lods
jmp
and
ins
xor
sub
dec
pop
or
add
xlat
out
mov
pop
sar
xchg
(bad)
addr16
ret
ja
pop
enter
loopne
cwde
(bad)
popa
sbb
ror
imul
scas
retf
mov
(bad)
jge
jnp
retf
inc
hlt
fnstsw
ficomp
call
adc
mov
scas
push
adc
mov
cmp
rep
pusha
jno
adc
in
scas
or
ins
cs
dec
or
jle
xor
cmc
add
sub
xchg
add
mov
leave
xor
rcr
test
es
rcl
or
retf
out
or
scas
aam
in
xchg
xchg
dec
jne
fild
mov
adc
clc
call
dec
jmp
mov
std
jbe
popa
cmp
fbld
xor
cmp
daa
ror
(bad)
mov
cmps
cmp
pop
dec
mov
test
inc
mov
inc
inc
push
movs
cmps
and
inc
xchg
aad
xor
ss
mov
mov
ja
pop
inc
cs
sub
add
test
mov
adc
mov
sub
clc
sbb
adc
mov
addr16
adc
lock
les
push
cli
cmc
xchg
xchg
ds
xor
leave
outs
popa
out
loopne
imul
addr16
movs
xor
out
mul
in
test
xor
jno
fwait
mov
pop
ret
rol
lods
xor
mov
repnz
data16
outs
cwde
cmps
call
rol
outs
inc
pushf
sub
je
jmp
lahf
cmp
imul
jns
cld
pop
dec
push
adc
stos
inc
sbb
pop
scas
in
inc
rol
add
mov
test
aas
fdivr
push
xchg
js
sub
fwait
mov
xlat
push
outs
outs
dec
dec
call
sub
or
mov
lods
scas
mov
imul
mov
push
int3
imul
cmc
jbe
mov
out
mov
adc
stos
push
adc
lods
test
mov
jo
cwde
ins
enter
in
aas
mov
scas
mov
push
mov
and
sub
imul
dec
or
sbb
pushf
xor
cld
or
lds
(bad)
cmps
rcr
xchg
sub
dec
xor
mov
aad
mov
mov
cmp
lods
leave
adc
fdivr
shl
shl
mov
jbe
shr
retf
js
outs
retf
cli
mov
arpl
retf
cs
int
inc
retf
xchg
mov
xchg
cmp
and
inc
push
and
int
gs
aam
mov
add
jo
dec
sub
jne
push
outs
mov
or
inc
cmp
call
hlt
stos
xor
pop
fstp
push
fidivr
or
fisub
or
mov
sub
jge
add
mov
sub
mov
add
xchg
sar
out
sbb
loopne
ja
add
or
(bad)
xlat
das
pop
sub
enter
out
ds
je
in
(bad)
jns
xlat
out
cmps
in
inc
mov
mov
xor
push
xchg
out
rcl
dec
and
pop
add
mov
pop
test
rcr
sti
dec
push
test
mov
mov
mov
push
aad
icebp
clc
fsub
inc
sbb
je
xor
aaa
mov
hlt
adc
out
sub
xor
mov
js
mov
inc
in
push
jne
mov
enter
call
cmp
fwait
inc
add
scas
scas
mov
xlat
loopne
arpl
xor
mov
pop
ja
push
retf
pop
push
lock
push
or
xchg
xor
inc
jecxz
lahf
cmps
sbb
fdivr
cli
dec
leave
ins
xor
shl
in
shr
(bad)
push
sub
mov
jb
in
sbb
push
mov
sub
inc
scas
add
and
ins
cmp
inc
pop
imul
(bad)
les
call
ins
jl
daa
mov
ss
bound
in
push
xor
out
pop
lahf
js
(bad)
out
sub
leave
imul
push
xchg
mov
and
out
pop
pop
rcl
mov
cmp
shl
adc
xchg
sti
mov
popa
push
jmp
xchg
cmp
xchg
sub
rcr
xchg
sub
mov
sub
sub
aad
add
scas
stc
cmc
mov
lock
cmp
mov
push
jmp
sbb
loope
mov
sbb
shl
cmp
clc
in
aaa
xor
test
out
xor
mov
push
fild
loop
cmp
xor
das
(bad)
xchg
cmps
aas
mov
cmp
pop
mov
push
(bad)
adc
xchg
adc
(bad)
sbb
dec
or
cmp
inc
add
mov
push
cmp
loopne
pop
dec
cs
clc
dec
jae
inc
and
imul
xchg
jbe
mov
sbb
lock
mov
xor
push
mov
loopne
mov
movs
sbb
in
push
dec
setno
fwait
rcr
cwde
lods
fwait
adc
xchg
adc
push
js
jmp
mov
int
retf
xchg
popa
fwait
mov
dec
sbb
ja
js
retf
add
xchg
sahf
mov
cmp
cmps
dec
popa
arpl
sub
inc
adc
mov
cmp
push
dec
pop
test
xor
cmps
mov
stos
pop
and
push
push
loope
mov
jae
ins
jl
ja
jl
xchg
popf
(bad)
rol
aam
or
sub
outs
ja
cwde
or
int3
inc
in
scas
in
call
fdiv
ds
fidivr
pop
sbb
pop
in
push
retf
jbe
out
aam
push
jge
hlt
in
pop
enter
mov
push
mov
loopne
outs
push
lods
dec
push
(bad)
pushf
xor
cmp
mov
add
outs
pop
mov
mul
lods
dec
push
out
std
ds
or
mov
inc
sub
cmp
aas
cmc
xor
fadd
leave
push
xchg
mov
jle
push
and
or
int3
add
or
imul
out
cmps
das
imul
lds
sbb
les
call
sbb
shl
mov
push
pop
jae
cwde
lea
addr16
sti
inc
push
cwde
cmp
and
cmp
(bad)
bound
and
mov
movs
retf
addr16
jmp
mov
fcmovbe
jnp
mov
adc
add
push
scas
popa
mov
popa
rcl
(bad)
aas
mov
out
rcr
push
(bad)
in
outs
repnz
leave
xor
pop
mov
leave
mov
fldcw
jle
(bad)
scas
rol
gs
dec
xchg
mov
cmp
pop
and
mov
mov
pop
add
mov
mov
fucomp
pop
mov
les
xchg
or
push
stc
xor
mov
stc
jne
stos
and
pop
es
loopne
adc
bound
cld
cwde
in
test
icebp
pop
push
and
into
test
loop
popf
in
sbb
neg
out
adc
jnp
leave
mov
jle
inc
sub
js
sub
outs
push
sar
ret
fnstcw
dec
cld
jmp
(bad)
enter
fidiv
adc
ins
ins
sar
xor
jge
lods
test
ds
inc
inc
inc
cmc
cmp
push
call
sbb
adc
into
dec
mov
sbb
push
xchg
sbb
fisub
push
mov
aad
mov
rol
sbb
cmp
jns
(bad)
cmp
mov
js
adc
jg
in
xor
push
scas
out
adc
pop
jge
pop
inc
and
lock
or
sahf
imul
xor
loop
in
pop
sbb
ret
cmp
(bad)
sbb
lods
cmp
or
and
nop
dec
xor
mov
int3
inc
xor
push
inc
pop
gs
cmp
ja
xchg
mov
fist
jmp
or
jns
arpl
mov
mov
into
data16
jae
cs
or
pop
fisub
adc
cld
call
jl
jl
or
repz
adc
mov
shl
shl
push
sub
les
cwde
vpor
pop
into
outs
inc
mov
cmp
cmp
fwait
xor
and
arpl
(bad)
mov
jg
sub
loop
jo
sti
xor
adc
xlat
xor
add
scas
out
ficom
mov
nop
mov
cli
out
pop
shl
push
aaa
stos
cmps
loope
inc
dec
push
or
push
leave
pusha
test
push
sbb
mov
mov
push
inc
xor
sbb
jmp
fist
xchg
(bad)
in
and
xchg
pop
inc
rcr
xor
fwait
leave
ds
inc
sbb
jl
mov
daa
frstor
int3
add
and
or
pop
div
ds
loopne
pop
adc
retf
test
xor
push
adc
repnz
pop
movs
mov
scas
cmp
leave
add
xor
into
xor
push
cmp
pop
dec
(bad)
aad
xor
stos
shl
and
fisttp
leave
loop
add
lahf
push
jnp
and
in
cmp
out
rcr
outs
les
shr
dec
xor
fist
cmps
icebp
clc
jp
inc
xor
shl
adc
lock
xor
and
leave
test
icebp
jo
mov
rcr
aam
in
movs
fistp
mov
neg
repz
mov
inc
gs
bswap
cmp
or
sub
std
(bad)
and
mov
mov
jo
call
dec
mov
add
cmp
adc
push
aaa
or
inc
xchg
(bad)
jnp
xor
sbb
or
ss
xchg
pop
cmps
retf
jno
test
std
lea
mov
sbb
pusha
stc
loopne
mov
repnz
xchg
cmps
cmps
cmp
sahf
mov
clc
sub
outs
sbb
in
inc
mov
sub
es
dec
(bad)
mov
fs
hlt
push
sub
adc
xchg
push
fs
jmp
jle
movs
push
loopne
cmp
sub
and
cmp
cmp
mov
sub
test
(bad)
idiv
bt
jp
sub
daa
shl
into
mov
mov
sbb
mov
popa
cli
mov
ins
or
adc
or
sub
xor
ror
inc
ds
cwde
push
mov
adc
xor
mov
mov
leave
adc
and
lock
jnp
or
sub
xor
js
or
fs
adc
push
pop
push
outs
jge
enter
and
dec
mov
fistp
dec
(bad)
push
add
data16
(bad)
mov
add
scas
ja
ds
push
das
mov
int3
in
ds
scas
cmp
fsubr
aad
dec
movs
ret
fst
popf
mov
cs
sbb
cwde
test
(bad)
fisubr
dec
fwait
mov
jno
xlat
sbb
in
push
cmp
xchg
mov
es
adc
retf
je
out
pop
mov
push
dec
xchg
mov
jno
in
inc
or
int
mov
add
mov
repnz
jmp
ret
call
sub
sbb
pop
fstp
pop
or
lahf
rol
clc
jp
enter
mov
fmulp
jp
jl
inc
outs
addr16
adc
mov
iret
ins
aam
jmp
mov
mov
mov
mov
fild
mov
add
and
pop
push
dec
ins
hlt
mov
mov
push
in
xchg
in
pop
pop
loopne
fist
mov
jl
jl
or
or
pop
fwait
jne
xchg
syscall
pop
xchg
js
retf
sbb
jecxz
(bad)
stos
sbb
ins
clc
jp
gs
sbb
sbb
in
scas
ins
sbb
pop
stc
jg
not
lock
sub
or
cmps
xchg
mov
lds
cmp
in
adc
dec
mov
fisttp
aaa
mov
or
fiadd
xchg
imul
scas
popa
cmp
adc
cwde
xchg
adc
mov
iret
leave
add
sub
(bad)
(bad)
test
ret
sub
xor
clc
add
clc
(bad)
ins
(bad)
popa
aas
mov
bound
inc
jmp
test
xor
and
pop
push
xchg
outs
popf
push
arpl
or
xor
outs
and
int3
bswap
leave
popa
push
mov
mov
loopne
fwait
jae
xchg
sahf
xchg
sub
(bad)
jmp
push
cld
add
call
and
jp
cmps
jnp
out
scas
dec
jl
mov
test
fs
mov
aas
xchg
and
dec
vpsrlq
push
outs
cmp
mov
lods
cdq
inc
mov
cwde
xor
add
xor
jl
lods
dec
cmc
cmp
mov
add
jae
scas
loopne
or
cmp
mov
sbb
iret
into
mov
dec
mov
fsub
xor
(bad)
push
setp
js
xor
repnz
sbb
leave
cwde
les
adc
cs
or
xor
jmp
sti
xor
mov
add
xor
repnz
test
add
pop
test
pop
ds
(bad)
(bad)
nop
inc
push
cmps
clc
clc
ror
jge
xchg
or
lds
imul
(bad)
xlat
jnp
je
lea
cmp
push
push
cmp
push
fimul
jne
paddw
jbe
push
adc
sbb
push
fcmovnb
sbb
cmp
jae
cmp
push
adc
(bad)
mov
in
sub
mov
mov
sahf
mov
dec
jp
pop
loope
fnstsw
lds
mov
xor
(bad)
(bad)
mov
sub
sub
xchg
aas
mov
xor
jle
iret
cld
lock
test
lds
mov
movs
retf
aaa
pop
rcr
and
shl
xchg
adc
scas
or
xor
or
inc
repz
and
loopne
cmp
mov
lahf
rol
push
imul
test
movs
mov
in
add
lods
mov
out
push
in
fisttp
jmp
icebp
inc
int
jns
sub
data16
push
xchg
sbb
leave
(bad)
fdiv
movs
and
mov
xor
sub
retf
pop
dec
leave
and
icebp
or
mov
sub
aam
pop
pop
stos
je
shl
mov
iret
into
call
in
out
dec
sbb
push
mov
jmp
mov
fst
and
test
arpl
jne
cmp
push
es
int3
push
jge
(bad)
push
cs
dec
je
ds
out
mov
mov
cdq
ret
pop
xor
jbe
dec
dec
push
and
imul
ins
ja
test
sub
fcomp
xchg
or
cli
cmps
add
scas
mov
xor
jno
pushf
out
nop
scas
mov
inc
push
xor
inc
or
repnz
ds
jns
inc
movs
xor
mov
add
sar
mov
retf
stc
bound
aad
rcl
inc
pop
sbb
mov
mov
enter
pusha
(bad)
imul
push
xchg
mov
jnp
mov
retf
pop
sbb
ja
repz
(bad)
pop
pop
std
and
and
jmp
test
inc
leave
lock
scas
jo
mov
fst
jecxz
xlat
mov
cmp
fsubr
fisttp
outs
ja
push
mov
xchg
fbld
xor
mov
pop
hlt
std
neg
clc
push
mov
xchg
sub
loop
pop
dec
int
mov
mov
test
xchg
das
sbb
(bad)
jo
push
jmp
mov
aas
mov
movs
ins
test
pop
(bad)
mov
cmps
test
sbb
jne
mov
jmp
sub
mov
cmp
lds
movs
cdq
(bad)
pop
adc
dec
aad
or
cdq
movs
mov
dec
and
sbb
jge
rol
or
sub
arpl
cmp
dec
stos
and
sub
lock
pop
ficomp
enter
call
icebp
rol
je
popaw
cmp
stc
cs
mov
push
movs
add
mov
mov
inc
xor
mov
cmp
add
popa
scas
xchg
xor
cmp
dec
shl
mov
addr16
jg
dec
adc
and
push
xchg
inc
sub
dec
push
jmp
retf
sbb
mov
add
cmp
add
repnz
ds
imul
jno
sbb
fdivrp
sbb
pop
pushf
xor
mov
and
push
out
ds
mov
jmp
js
sbb
dec
xchg
sub
adc
fs
mov
retf
add
sbb
into
push
sub
sbb
sub
and
gs
aad
mov
jge
aaa
mov
inc
(bad)
sbb
shl
mov
push
pop
inc
in
ins
adc
out
sbb
(bad)
jno
daa
adc
test
add
cmp
test
sbb
stc
sbb
mov
(bad)
mov
loope
fisub
(bad)
mov
sub
dec
imul
shr
in
cwde
cmp
sub
mov
push
inc
ficomp
inc
sbb
fst
(bad)
mov
ds
jg
xor
fist
jmp
stos
push
frstor
cmp
jnp
inc
pop
pop
popa
pop
sub
fs
adc
sar
sbb
bound
(bad)
jne
or
jle
pop
neg
pop
cmps
mov
mov
pop
dec
mov
and
jle
mov
jp
sub
cmc
mov
repz
sbb
adc
pop
add
xlat
sbb
mov
fnstenv
adc
fisttp
pop
push
icebp
out
xchg
nop
pop
das
add
and
jo
test
lods
fs
and
addr16
cld
cwde
push
xchg
shl
arpl
iret
dec
inc
push
pop
xor
adc
adc
movs
inc
call
and
or
xchg
es
cmps
loopne
push
dec
mov
mov
pop
inc
mov
pop
push
repz
add
sbb
sub
stos
xor
cmps
ficomp
lea
mov
not
push
dec
pop
inc
cdq
and
mov
sar
nop
push
(bad)
jge
pop
mov
sar
adc
lea
cwde
inc
ffreep
cmc
in
mov
or
(bad)
loop
jnp
inc
(bad)
stc
mov
repz
cmovno
mov
xor
mul
inc
int3
les
adc
stos
sbb
jne
inc
(bad)
repz
popf
mov
ret
lock
imul
jo
pop
and
cmp
dec
movs
add
or
and
into
sub
jb
xchg
lock
je
lahf
iret
push
cmp
sub
(bad)
or
or
and
cli
sub
lds
xor
rol
icebp
jl
shl
jmp
(bad)
mov
xchg
sbb
fcomip
xchg
push
fiadd
push
and
sub
bnd
cmps
das
mov
mov
cmp
dec
xlat
push
popf
out
in
shl
add
ins
and
mov
imul
adc
pop
fwait
sub
leave
stos
or
je
dec
imul
scas
add
inc
pop
test
dec
mov
mov
outs
pop
fcomip
retf
mov
cmp
pop
or
mov
das
jecxz
or
jne
cmp
nop
sbb
xchg
dec
or
(bad)
(bad)
(bad)
cmp
idiv
or
xchg
mov
xor
aas
aas
dec
jne
adc
or
dec
mov
sbb
dec
inc
push
test
out
xchg
push
out
std
test
int
cdq
bswap
lock
cmp
sbb
inc
bound
pop
sub
mov
jg
movs
test
loope
or
lods
xor
stc
jl
ret
pop
popf
rcl
adc
xlat
cmp
xchg
mov
sti
mov
mov
daa
push
or
inc
cwde
movs
mov
cld
mov
push
arpl
xchg
test
pop
lods
mov
xchg
jmp
mov
cld
mov
std
push
and
jno
pop
call
call
push
(bad)
imul
fwait
dec
mov
in
(bad)
and
pop
pop
test
push
and
push
inc
ins
mov
das
jp
jno
mov
out
dec
pop
in
outs
jmp
xchg
pop
stos
cwde
aaa
lods
xchg
enter
(bad)
cmp
popa
xchg
add
mov
jmp
xchg
std
mov
sub
and
add
xchg
dec
adc
lahf
call
xchg
scas
pop
or
push
sar
add
or
xchg
call
fucom
movs
mov
(bad)
jl
lods
pop
popf
rcl
and
cmp
in
pop
jecxz
xlat
fwait
pop
call
imul
ficomp
jb
movs
mov
retf
cmp
sbb
adc
push
mov
pop
and
sbb
mov
push
mov
fisttp
pusha
adc
pop
stos
xor
pop
aas
sbb
or
push
push
stos
mov
push
mov
jmp
and
and
sbb
(bad)
out
scas
dec
aad
shr
(bad)
ficom
or
fidiv
stc
sbb
lods
xor
xchg
ins
dec
dec
call
inc
inc
outs
sub
add
xchg
or
and
cmp
ror
xchg
lds
inc
push
call
lods
stc
push
ins
or
retf
stos
cli
je
jo
sub
sub
fld
dec
jg
out
jb
mov
or
int3
push
push
push
adc
xor
in
jb
lds
mov
ds
sbb
dec
xor
and
xor
inc
(bad)
inc
sub
jne
popf
ss
pop
and
jl
push
sub
stc
xchg
int
cvtps2pi
(bad)
scas
stos
xchg
dec
add
popa
or
std
push
add
outs
push
retf
popa
push
mov
adc
lahf
div
mov
movs
dec
ds
fsub
dec
cmp
hlt
jbe
stos
(bad)
retf
jo
repnz
xchg
dec
xchg
sub
int
xor
dec
mov
movs
rol
or
push
mov
gs
push
jecxz
sahf
aad
pop
lds
mov
fwait
jnp
cmp
idiv
enter
je
loope
add
xchg
mov
(bad)
pop
out
lea
push
jo
imul
mov
test
adc
fsubr
popa
or
out
add
jg
cmp
ror
mov
xor
inc
aas
push
xchg
fsub
sbb
dec
xchg
xchg
sahf
sub
xchg
xchg
mov
cs
in
inc
sar
cli
ret
mov
icebp
fnstcw
jecxz
and
mov
mov
sub
or
xchg
cmp
leave
xor
fs
push
push
(bad)
sub
jmp
data16
inc
test
cmp
gs
mov
pusha
inc
std
fcmovbe
jmp
(bad)
inc
mov
icebp
or
xchg
push
aam
(bad)
xor
imul
mov
push
mov
add
adc
xor
cmp
pop
test
jmp
or
mov
inc
mov
inc
dec
fst
out
or
inc
ficomp
addr16
mov
(bad)
mov
pop
pop
mov
in
xor
cmp
sub
movs
out
pop
in
or
std
jb
test
icebp
mov
jmp
and
sub
in
loope
mov
push
cmp
pop
shr
outs
ins
inc
lahf
in
sbb
sub
sbb
leave
adc
in
xor
jo
mov
mov
push
sti
cmp
test
movs
cmp
or
mov
jb
int
sbb
jle
adc
inc
(bad)
cmc
xor
mov
pop
arpl
sbb
and
(bad)
loopne
cs
mov
lds
dec
inc
outs
mov
bound
cmp
push
cmp
and
shl
adc
rcl
cmp
jle
(bad)
mov
in
aas
test
mov
mov
(bad)
adc
adc
rcl
push
and
mov
aam
sub
das
or
(bad)
out
push
outs
cwde
out
mov
dec
xchg
jl
dec
cmp
pop
cmp
and
xor
add
adc
arpl
xchg
fsubr
add
xchg
mov
fidiv
sbb
jecxz
popa
fwait
dec
daa
push
repnz
or
repnz
cdq
mov
dec
daa
mov
sar
xchg
pop
loop
add
xchg
pushf
ss
or
push
int
push
nop
fisub
mov
mov
fdivr
mov
sub
movs
retf
outs
iret
in
mov
retf
jne
or
popf
test
add
neg
aaa
je
mov
aam
add
jnp
and
je
push
pop
or
mov
adc
or
jne
push
xor
std
add
adc
sub
adc
dec
stc
fdiv
mov
jl
jge
cmp
push
stos
fisub
mov
lods
pop
pop
cmc
xor
jne
fidivr
loope
and
add
mov
mov
loope
cmp
sub
gs
xchg
ins
movs
cmp
hlt
mov
sti
jbe
(bad)
sahf
fist
rol
loop
sub
mov
cmc
out
jmp
sub
adc
jo
cmp
or
cli
hlt
inc
xchg
(bad)
pop
inc
sbb
mov
pusha
pop
nop
test
inc
test
fld
out
xlat
cmp
fsubr
xchg
loope
jbe
adc
(bad)
push
push
popf
gs
or
xor
aad
jne
xchg
inc
sbb
jb
cmps
xor
or
imul
fistp
call
add
jl
inc
enter
jno
push
mov
pop
xchg
js
bound
cli
xor
(bad)
pop
jb
mov
mov
lahf
or
add
popa
jne
sbb
sbb
movs
cld
popa
xchg
jmp
fbld
out
lahf
add
inc
test
pop
add
aaa
xlat
ss
ret
xchg
outs
sti
cmp
iret
push
bound
jmp
dec
mov
or
imul
mov
in
ds
rcl
cmp
bound
aad
adc
retf
mov
add
sub
or
pop
test
and
push
pusha
push
cdq
xor
adc
cmp
mov
imul
outs
sub
fisubr
sbb
xchg
adc
pop
sub
xchg
mov
sbb
mov
xchg
cmp
inc
pop
pop
mov
sbb
lods
xchg
fadd
push
dec
xchg
dec
cmp
cmp
pop
scas
or
mov
(bad)
rcr
inc
mov
cmps
into
sbb
loope
outs
jo
jno
fwait
mov
lods
pop
out
ins
push
jl
outs
and
(bad)
cs
xor
add
xchg
fsubrp
imul
loope
sbb
cdq
(bad)
enter
xchg
mov
nop
lods
fs
lahf
sub
jmp
inc
add
std
add
add
xlat
mov
jno
jmp
push
(bad)
test
push
add
pop
and
into
push
into
out
rol
outs
xor
ss
mov
push
shr
into
xor
dec
mov
leave
xlat
out
pushf
push
cs
push
jnp
out
or
inc
jae
icebp
jg
sub
mov
es
lds
stos
mov
retf
dec
pop
jp
data16
or
dec
jne
adc
inc
ins
adc
cli
in
and
cli
sbb
jne
adc
cmp
push
loope
adc
xor
mov
inc
add
mov
pop
xor
push
fistp
fistp
sub
sbb
jecxz
sub
int
repnz
cmp
mov
shl
mov
bound
into
aaa
adc
add
ret
(bad)
fucomi
mov
mov
rcr
mov
xchg
out
mov
and
and
mov
inc
dec
sub
in
lods
imul
jmp
scas
ret
or
push
and
mov
mov
push
pop
push
push
pop
xchg
or
dec
aas
bound
dec
sbb
sbb
jbe
and
out
jl
int3
mov
pop
fcomi
dec
cmps
push
(bad)
std
cld
outs
arpl
sub
sub
push
daa
std
cmp
out
or
or
sbb
ret
repz
lock
xchg
add
fmul
and
jp
iret
iret
push
mov
mov
dec
inc
mov
pop
sbb
pop
jne
out
sbb
sub
xor
xor
pop
out
sbb
or
sbb
jb
mov
ss
push
mov
and
and
jb
mov
shl
mov
idiv
fs
or
scas
sahf
loopne
xchg
mov
ja
iret
mov
nop
mov
mov
adc
and
aam
pop
fwait
inc
rol
dec
loope
ss
add
xor
pusha
scas
stos
xchg
cwde
push
sbb
or
ret
inc
pop
adc
sub
gs
jge
inc
test
cmp
div
jle
inc
jg
pop
xchg
mov
(bad)
cmp
cmp
mov
je
sub
adc
xchg
xchg
arpl
sar
and
movs
aaa
xor
xchg
xchg
pop
ret
pop
aas
cli
cwde
jecxz
je
scas
mov
and
push
dec
sbb
or
xchg
aad
mov
icebp
dec
push
jbe
mul
xchg
cmc
and
js
adc
and
xor
bound
stos
fadd
cmp
loop
(bad)
xchg
ds
jae
not
or
les
ins
push
add
daa
cmps
sbb
fldenv
dec
and
retf
fisttp
test
lock
jmp
loop
jnp
scas
adc
out
jle
mov
das
add
loop
mov
cmp
enter
or
fidiv
push
xlat
inc
ficom
inc
add
adc
popf
inc
push
pop
xchg
and
sahf
inc
and
jmp
cmp
jle
xchg
jb
aam
lods
mov
ret
sbb
fwait
xchg
test
jb
inc
or
add
aam
push
shl
dec
mov
inc
in
das
push
dec
outs
push
pop
scas
add
stos
pop
pop
jle
ins
mov
pop
cmp
mov
rcl
sub
test
outs
test
add
dec
push
inc
je
hlt
push
add
lea
and
or
pop
xchg
imul
pop
sbb
into
je
aaa
inc
push
fwait
retf
cmps
nop
(bad)
les
in
xor
nop
mov
inc
sbb
push
pop
dec
mov
aam
cmc
pop
jns
sbb
fbld
fisttp
xor
jnp
dec
inc
fistp
cmp
pop
and
mov
test
int3
or
loopne
xor
push
lahf
sbb
scas
dec
ja
mov
mov
jp
(bad)
shl
cmp
sub
xchg
cmp
es
shl
dec
push
sbb
lahf
cwde
imul
jg
add
cld
lds
jnp
ret
xor
or
mov
retf
int
adc
xor
cmp
ins
inc
(bad)
jmp
lock
push
call
fcomi
xor
pop
mov
mov
shl
mov
pusha
neg
adc
and
cmp
jl
shl
mov
inc
sbb
(bad)
outs
es
xchg
mov
xor
sbb
fimul
cmp
jmp
mov
xlat
dec
pop
xchg
js
pusha
les
mov
mov
lods
ins
(bad)
jl
push
inc
add
popa
xor
sub
xchg
jle
mov
das
stc
stos
mov
mov
lods
jns
(bad)
cdq
pop
out
out
in
cli
movs
cdq
aaa
add
sbb
icebp
mov
mov
sbb
xor
loopne
das
repnz
xor
int3
add
jg
mov
std
xchg
sbb
cdq
shr
fstp
shr
(bad)
sbb
cmp
xor
hlt
movs
inc
sub
and
jns
ja
sub
pop
loopne
into
lock
xchg
das
dec
outs
xchg
iret
rcl
xor
cwde
ret
ret
outs
sbb
cli
nop
dec
xor
call
lods
popf
lods
push
push
in
cli
xchg
and
in
int3
fmul
cmp
push
ja
cwde
jno
int
mov
aaa
iret
fs
mov
pop
or
and
lods
dec
xor
and
int
push
mov
or
sub
jbe
jge
mov
cmp
adc
inc
jb
or
jne
loop
arpl
pop
cmp
push
jle
push
push
aas
xor
movs
cmp
repz
push
fsub
imul
xchg
xor
je
xchg
fild
pushf
pushf
mov
adc
stos
push
in
xchg
mov
xchg
add
mov
cmp
call
xlat
shl
cmp
xor
fwait
in
inc
sbb
xchg
mov
push
scas
mov
rol
add
aad
and
jns
cmp
push
sti
mov
out
cld
aas
sub
push
mov
mov
and
cmp
stos
loop
push
pop
push
aam
retf
xor
cdq
retf
stos
push
pop
popa
outs
sahf
mov
and
inc
sub
adc
in
xchg
(bad)
(bad)
jbe
mov
in
aam
pop
inc
dec
inc
inc
xchg
fistp
into
pop
in
jns
inc
enter
sbb
jle
mov
dec
bound
inc
or
outs
(bad)
adc
xchg
sub
inc
jbe
push
pop
leave
xor
xor
fwait
dec
call
retf
enter
adc
sbb
aad
out
movaps
cmp
mov
movs
(bad)
dec
fs
in
mov
jmp
test
loope
imul
xchg
sar
sub
pushf
dec
dec
cwde
sub
ret
dec
fwait
cmp
mov
(bad)
(bad)
leave
sti
push
int
adc
mov
and
popf
enter
xor
dec
push
loope
out
ins
cld
sbb
lds
cmp
popf
mov
push
mov
aaa
ret
shl
out
sub
arpl
push
push
test
cdq
and
(bad)
push
sub
(bad)
aaa
pop
fsubr
push
pop
aam
xor
or
dec
movs
inc
or
fcomp
or
cmc
lods
xchg
mov
xchg
rcl
ror
cld
(bad)
add
dec
pop
es
pop
inc
jnp
jmp
push
pop
out
xlat
inc
inc
dec
aam
daa
pop
push
xor
mov
stos
dec
movs
arpl
sbb
add
mov
push
xchg
lods
mov
cmp
test
mov
dec
jb
les
or
scas
add
jns
adc
sbb
add
aam
pop
inc
mov
fadd
std
lahf
icebp
mov
lds
(bad)
adc
cmp
xor
or
cmps
or
mov
cmps
mov
in
push
inc
inc
jmp
push
movntq
and
sti
test
jne
push
nop
push
loopne
xor
ror
adc
popa
sbb
sbb
xlat
shr
xrelease
movs
and
pop
adc
mov
cmp
loope
aaa
ffree
(bad)
mov
stc
and
jbe
outs
(bad)
ds
cdq
mov
leave
dec
movs
arpl
jle
pop
out
stos
sbb
enter
lods
sbb
dec
xlat
imul
repz
dec
outs
pop
push
inc
scas
outs
mov
mov
sbb
(bad)
ins
popf
add
xchg
jp
je
jno
jbe
push
bound
lds
or
fwait
mov
xor
inc
add
loope
dec
dec
jnp
mov
xchg
push
push
jmp
cmp
xor
sbb
inc
jns
sbb
cmp
ret
inc
aad
dec
adc
mov
xor
push
add
scas
cmp
jae
or
loopne
es
pop
(bad)
dec
inc
xchg
shl
jne
addr16
adc
stos
cmps
ret
sahf
nop
xor
shl
push
and
(bad)
mov
inc
dec
idiv
fld
fbstp
mov
icebp
or
(bad)
sahf
mov
xlat
dec
add
cmp
sbb
add
scas
or
jns
mov
sbb
add
imul
or
cmc
adc
call
jb
dec
inc
int3
mov
mov
lods
mov
iret
pop
ret
mov
(bad)
adc
or
mov
mov
aad
cli
xchg
mov
(bad)
adc
push
pop
div
cmp
mov
sahf
and
mov
jnp
or
hlt
iret
ins
in
mov
retf
out
aaa
push
jg
(bad)
push
cmp
inc
hlt
cmp
out
pop
aas
ins
push
adc
repz
aas
mov
pushf
sar
pop
(bad)
jmp
stos
retf
repnz
pop
adc
xbegin
sahf
cld
xchg
bound
mov
mov
out
or
mov
xor
rcl
xchg
mov
fisub
dec
das
fs
out
pop
mov
stc
or
gs
adc
pop
cli
pop
out
inc
rsqrtps
or
int3
stc
repnz
test
dec
dec
pop
push
pushf
jno
stos
cld
movs
loope
cmps
in
retf
inc
xchg
sbb
sbb
mov
cli
jmp
dec
pop
cmp
outs
popf
sbb
pop
add
movs
xchg
(bad)
jmp
or
xchg
dec
mov
jb
cs
cmp
ret
inc
out
xlat
push
jbe
int
adc
dec
xor
rcr
jno
(bad)
retf
xchg
into
outs
push
nop
pop
nop
mov
and
cs
pop
scas
jmp
int3
sbb
aas
pusha
jbe
ins
pop
cmps
in
fmul
je
sub
xor
add
cvttps2pi
mov
ds
out
es
or
mov
xor
stc
push
and
mov
xor
out
shl
jnp
js
ins
xchg
loopne
lea
sahf
in
div
fldenv
adc
sub
and
add
icebp
scas
jns
(bad)
and
out
mov
jno
jbe
out
cmp
and
ja
ficomp
pop
shl
jle
xor
cmc
and
xchg
es
sub
in
iret
xor
jb
lock
add
bound
fistp
aaa
pop
pusha
lock
push
shl
cmp
pop
out
lahf
sbb
jmp
fwait
shl
jne
cmp
xor
add
mov
mov
mov
push
or
outs
(bad)
mov
not
fdivrp
cmps
xor
pop
rcr
inc
rdtsc
call
mov
and
icebp
mov
add
jnp
fld
jge
sub
mov
cmp
mov
lea
inc
repz
outs
xchg
sar
xor
pop
jmp
mov
dec
(bad)
mov
add
sub
jge
enter
cmc
xchg
mov
je
into
sub
lock
push
scas
aad
shl
rol
mov
sbb
dec
ret
jae
jo
dec
jg
shl
lahf
mov
lea
or
cmp
jg
pop
lahf
adc
xchg
jge
pop
xchg
lahf
push
jmp
imul
push
outs
retf
dec
fmulp
gs
pushf
into
mov
arpl
(bad)
dec
add
mov
popf
dec
mov
push
pop
push
fs
ss
jb
lea
in
out
sbb
call
or
mov
or
retf
bound
shr
ror
enter
dec
rcl
mov
cld
jae
mov
cli
outs
fild
jle
push
je
ja
jmp
cmps
inc
inc
js
jns
mov
sbb
add
sub
and
dec
ins
or
push
sbb
lahf
dec
xchg
mov
movs
(bad)
inc
jmp
jl
stos
sub
les
(bad)
mov
out
push
hlt
push
stos
aaa
jno
push
sbb
fild
cld
movs
stc
mov
xor
hlt
(bad)
(bad)
mov
pop
or
xchg
je
adc
pusha
imul
test
hlt
mov
pop
sbb
std
xchg
sub
(bad)
test
push
add
lods
xchg
fimul
mov
push
lea
js
mov
jns
test
xchg
inc
dec
cmps
dec
outs
cwde
sbb
sbb
outs
push
inc
outs
mov
std
pop
adc
add
sub
pop
out
sbb
data16
js
ins
test
out
and
pop
mov
(bad)
pop
sbb
adc
sub
jle
sbb
or
xor
stc
cmp
lods
pop
xor
and
dec
sub
test
xor
adc
shl
pop
sub
imul
aam
test
in
xchg
popa
add
(bad)
mov
jno
sbb
push
cmp
cmp
sbb
jns
rcl
push
fist
mov
daa
mov
cwde
scas
pop
cmp
(bad)
stos
retf
js
jns
jns
push
cmp
sbb
mov
jae
inc
fimul
data16
lds
loopne
loope
call
or
mov
fwait
leave
dec
in
shld
push
push
mov
rcr
ret
ins
pop
outs
adc
ds
jmp
xchg
out
ins
xchg
xor
jne
clc
(bad)
push
cmp
fcmovnbe
in
mov
xchg
in
mov
jecxz
mov
in
daa
pop
push
sub
mov
faddp
fidiv
sbb
inc
jmp
inc
xchg
repnz
xchg
shl
lods
jmp
repz
sti
cmp
mov
retf
jne
(bad)
lahf
jle
pop
push
sahf
mov
jge
dec
sbb
or
jmp
xor
inc
push
daa
add
jb
mov
sahf
and
call
add
or
jb
pop
das
mov
call
into
dec
cmp
inc
mov
mov
inc
cs
hlt
je
js
ret
and
call
clc
push
ror
cmp
int
xchg
stos
cdq
pop
cmc
and
rcl
dec
dec
rcr
jbe
jno
lock
or
hlt
jb
inc
out
scas
mov
out
icebp
pop
push
push
dec
mov
test
add
and
lea
jge
sbb
cmp
outs
cmps
(bad)
aaa
push
out
jecxz
in
adc
sub
push
dec
scas
add
addr16
cmp
add
add
jnp
and
xchg
loope
add
les
scas
out
arpl
mov
jns
push
push
pop
jmp
mov
movs
aam
and
imul
inc
add
push
xor
xchg
sub
sbb
add
mov
mov
inc
mov
or
sub
push
push
lods
and
or
adc
dec
mov
mov
and
(bad)
outs
sbb
enter
rcl
shl
daa
sbb
mov
or
jo
jecxz
sub
mov
loop
ins
xor
mov
cld
xchg
xchg
sub
push
pop
hlt
in
gs
fwait
push
rcl
dec
movs
dec
loope
push
mov
mov
push
xor
mov
dec
add
dec
sbb
add
dec
inc
rol
mov
add
add
imul
jns
push
stos
xor
and
sub
in
cs
pop
jle
scas
fdivr
mov
and
adc
fadd
inc
mov
loopne
sbb
xchg
sub
push
fcomp
and
sbb
nop
mov
mov
pushf
std
(bad)
mov
push
mov
cs
dec
iret
adc
mov
cdq
outs
popa
gs
xchg
pop
xchg
bound
rol
add
mov
xor
movs
mov
rcr
pop
xchg
stos
iret
or
in
scas
sub
mov
mov
xchg
aaa
lahf
mov
daa
xchg
xchg
(bad)
imul
xor
push
mov
imul
sbb
xchg
lds
ret
retf
mov
pop
into
and
(bad)
(bad)
fbld
movs
loope
mov
into
shl
push
push
lea
gs
push
pushf
fdiv
pop
icebp
mov
jbe
iret
iret
xor
ds
mov
adc
sbb
sbb
dec
and
xor
cwde
fld
or
push
(bad)
xchg
mov
mov
sub
sahf
fstp
cli
pushf
and
jo
daa
pop
rcl
fucomp
neg
mov
(bad)
out
enter
fsub
add
sbb
xlat
aad
xlat
aam
out
sub
imul
add
ret
cmps
fcmovnb
jp
jmp
dec
xor
gs
jmp
(bad)
nop
sti
int
pop
cmp
fnstcw
lea
push
inc
cmp
mov
inc
adc
lea
mov
in
into
sub
inc
mov
nop
cvtdq2ps
sbb
jno
movs
pop
fld
mov
les
or
outs
in
daa
outs
mov
aaa
xor
adc
adc
xchg
shl
push
and
hlt
push
cli
pop
lods
jo
call
fsubr
sbb
(bad)
cmc
in
xor
enter
out
loop
repnz
dec
iret
mov
jp
scas
in
cmps
fdivr
pop
jb
dec
test
hlt
and
mov
mov
jbe
dec
es
outs
mov
mov
xchg
jmp
aam
cmps
out
or
in
push
and
push
out
out
push
sar
(bad)
repz
les
mov
stc
sub
div
ret
pop
mov
fistp
sbb
cmp
loop
stos
sbb
cli
(bad)
dec
xor
fs
add
jae
cmps
popa
ds
jg
inc
gs
scas
mov
add
in
xchg
dec
cld
cmp
sbb
repz
sbb
or
call
inc
xchg
dec
lods
hlt
iret
and
and
xor
mov
sbb
sti
mov
add
(bad)
into
jbe
cmp
push
sbb
hlt
ror
cmp
movs
repnz
ret
and
fild
add
cvtpi2ps
call
jno
shrd
mov
bnd
int3
fstp
and
enter
repnz
aaa
mov
fisubr
std
push
jge
stc
sub
pop
aaa
fcmovu
jmp
jne
lods
cmp
cmp
cmp
inc
jg
outs
gs
add
inc
retf
mov
mov
push
aas
pop
pop
daa
mov
pusha
loopne
rol
sub
aas
mov
cmc
out
pop
(bad)
xor
xchg
shr
pusha
test
xchg
jns
outs
out
mov
jle
pop
pop
(bad)
dec
cld
lock
in
cmc
mov
cld
gs
jns
sub
loope
and
sub
jno
push
jo
sar
clc
pushf
loop
aas
mov
and
dec
sbb
stos
and
mov
out
aam
mov
data16
fwait
xchg
out
sub
mov
jbe
dec
pop
dec
mov
add
pop
ins
mov
and
mov
loope
repnz
and
nop
lahf
pushf
mov
arpl
test
mov
inc
sub
rol
dec
imul
xchg
sub
call
sub
mov
cmp
inc
out
xchg
rcr
nop
jb
aaa
push
cmp
sub
cs
fisub
popa
pop
jl
dec
lods
and
enter
gs
and
inc
and
ins
mov
cmp
or
rcr
(bad)
call
xchg
jmp
pusha
mov
dec
mov
and
es
call
push
bound
ja
dec
sahf
adc
mov
add
or
pop
fdivr
dec
int3
test
dec
test
xor
out
and
(bad)
daa
cmp
mov
test
push
xor
test
push
sub
out
push
cmp
cmp
cmp
not
adc
sbb
xor
imul
repnz
jne
push
and
adc
js
fld
sbb
xchg
fs
jbe
adc
(bad)
stos
inc
sbb
int
mov
out
inc
sbb
jno
test
ds
int
xchg
mov
push
fs
xor
mov
and
add
hlt
mov
mov
ins
pop
and
iret
out
rcl
ds
jmp
call
test
xchg
jle
sub
and
ret
stc
cmp
js
lea
stos
cwde
mov
or
aad
xchg
and
lea
jge
lahf
into
push
in
(bad)
push
fsub
adc
in
aad
in
imul
fs
jmp
and
and
mov
iret
lods
or
pop
add
cs
movs
add
xlat
adc
xchg
push
jo
pop
test
pop
mov
loope
bound
xchg
mov
sbb
push
push
cwde
loope
jmp
test
sub
aas
into
inc
test
mov
out
clc
pop
sbb
das
dec
ret
sbb
mov
imul
dec
push
cmp
rol
mov
and
int3
xor
iret
(bad)
xchg
ffreep
jb
retf
stc
add
or
les
out
and
loopne
lock
sar
jmp
jl
mov
loop
xchg
rol
xchg
push
cmp
or
dec
xchg
les
and
sub
mov
pushf
xchg
mov
dec
add
mov
clc
or
leave
mov
xchg
clc
jne
sbb
dec
xor
fcomp
aam
pop
out
jle
push
fsub
aad
ja
cmp
mov
push
fist
popf
loopne
mov
pop
jmp
aaa
repnz
xchg
call
push
inc
icebp
out
pop
xor
mov
mov
loop
stos
xlat
stos
or
in
(bad)
rol
sbb
jmp
mov
iret
xor
dec
pop
test
adc
push
js
cmp
jbe
cmp
mov
int3
lock
hlt
adc
inc
int
(bad)
ins
mov
mov
jg
dec
jno
xor
or
std
mov
(bad)
lea
xchg
mov
test
add
pop
mov
mov
xchg
push
sbb
xchg
push
arpl
or
mov
xchg
add
mov
dec
sub
pop
out
movs
cmps
cmps
popf
jbe
daa
stos
rcl
adc
inc
mov
addr16
pop
pop
iretw
dec
sub
shl
mov
xchg
or
ror
cmp
frstor
(bad)
adc
mov
cmps
mov
test
call
push
sahf
xor
fst
fidivr
sar
pop
aaa
lods
std
std
mov
repnz
inc
fisub
(bad)
scas
fistp
pop
sbb
pop
sub
xor
mov
mov
inc
lahf
push
dec
stos
pop
pusha
mov
je
call
pusha
ret
outs
(bad)
jle
outs
jp
sbb
mov
inc
shr
inc
push
mov
repz
lds
fstp
in
cld
adc
imul
lea
jg
cld
jo
(bad)
lds
xchg
xchg
cmp
push
iret
pushf
xor
ss
and
ins
dec
sub
sbb
pop
inc
ret
pop
inc
aas
out
fnstsw
mov
jno
(bad)
jmp
add
cdq
add
fnsave
retf
and
adc
scas
dec
inc
retf
sub
sub
rol
enter
cmc
loop
fsub
push
jl
shl
add
arpl
sbb
in
ret
add
ja
outs
imul
mov
mov
add
ret
jb
out
jge
leave
push
mov
lock
lods
push
aaa
clc
inc
and
push
scas
mov
js
jp
lods
ret
fmul
cmps
rcr
adc
xor
aaa
scas
fcomp
mov
pop
sbb
test
fbld
out
sbb
cmpxchg
sub
sbb
mov
mov
xor
pop
lods
xchg
idiv
pusha
and
in
fistp
(bad)
hlt
jmp
inc
std
or
movs
in
mov
sub
loope
push
mov
sbb
jno
fwait
mov
and
or
fld
test
inc
stos
ss
and
and
rcr
inc
out
xchg
shl
mov
das
xchg
pop
addr16
lods
or
jmp
retf
(bad)
sub
mov
call
hlt
push
lods
movs
arpl
bound
fsub
mov
and
mov
mov
mov
in
ds
pop
sbb
mov
and
and
pop
pop
mov
and
scas
mov
test
xchg
(bad)
retf
and
cs
std
fdivr
jge
repnz
cmc
push
or
cmc
xor
in
xchg
jno
daa
fs
jmp
rcl
inc
jne
sbb
in
out
jmp
std
pusha
and
scas
out
mul
cmp
add
push
stos
jnp
jmp
push
pushf
mov
mov
xor
mov
cmp
and
cmp
and
add
daa
xchg
int3
mov
and
shl
ins
rcl
mov
sahf
and
sub
xor
jge
(bad)
and
jg
pop
repz
call
int3
or
xchg
outs
outs
mov
xor
pop
mov
xchg
or
pop
iret
loopne
mov
loope
mov
mov
cmp
and
mov
repnz
enter
movs
sbb
test
out
mov
mov
push
xchg
push
imul
stc
mov
dec
cmp
push
pop
jmp
fcmove
mov
ds
xor
daa
lahf
mov
stos
pop
jbe
outs
mov
imul
pusha
inc
mov
cmp
adc
sub
sub
push
xchg
ins
ss
ds
les
sub
sub
out
loope
sub
mov
pop
mov
icebp
add
sbb
bound
aaa
imul
(bad)
pop
aad
mov
cmp
push
ins
aad
mov
jne
xchg
jmp
(bad)
or
call
bound
stos
rol
fdivp
push
pop
xor
rol
and
mov
mov
jne
sub
(bad)
pop
jecxz
aam
inc
cmp
mov
push
cld
je
cmc
add
movs
mov
je
mov
into
push
xor
sbb
int
cld
jmp
ret
(bad)
and
pop
mov
int3
dec
sti
add
add
xchg
mov
test
cmps
xlat
xor
lahf
mov
nop
push
sub
jbe
in
pop
mov
cmps
xor
shl
repnz
ja
push
or
mul
outs
mov
repz
cmp
sbb
mov
sub
mov
mov
adc
push
lds
or
adc
bound
or
es
cmp
mov
cmc
repz
add
sbb
mov
stc
out
dec
(bad)
aaa
shl
pusha
jmp
inc
cmp
bound
mov
icebp
out
dec
mov
add
mov
test
aas
xor
mov
in
lods
sub
cmp
mov
shl
xchg
loope
outs
shl
(bad)
mov
jge
xchg
stos
mov
fwait
dec
sbb
add
and
popf
das
iret
aas
fstp
movs
test
jns
bound
cdq
inc
or
and
sub
shl
out
push
push
xlat
mov
xchg
cs
push
or
mov
push
ins
jle
inc
mov
or
pusha
sbb
or
fs
inc
test
dec
mov
loope
(bad)
mov
push
(bad)
std
jecxz
adc
ret
cs
add
ret
repz
imul
add
or
add
sbb
pop
stc
sub
jbe
cmp
jmp
inc
jns
xchg
leave
add
out
cmp
mov
std
push
add
imul
les
std
adc
add
in
cmps
(bad)
jae
xor
sti
adc
jl
add
aaa
pop
aam
dec
jbe
dec
aas
dec
mov
cmp
cwde
inc
ds
push
jae
mov
xchg
les
lds
bound
fcom
lahf
jge
fs
jns
(bad)
jbe
fmul
cdq
call
rol
jno
jb
mov
inc
arpl
rol
loopne
dec
and
or
mov
ret
pop
cld
or
hlt
(bad)
in
cmc
push
jmp
out
repnz
(bad)
fisttp
fcomp
(bad)
or
sbb
cmp
fldcw
ja
shl
jb
cmp
add
in
data16
cmps
sbb
mov
sar
in
enter
jmp
scas
cdq
cmp
pop
mov
mov
enter
and
std
sbb
xchg
pop
std
pop
or
xor
xchg
cmp
sar
popa
dec
repnz
call
mov
mov
inc
inc
adc
pop
xor
sub
popf
lods
mov
hlt
dec
add
inc
cmc
jle
loope
xchg
imul
or
retf
int
mov
jno
push
mov
push
stc
popf
mov
lds
cmp
sub
jno
xlat
mov
in
xchg
outs
dec
cwde
in
mov
xchg
pop
push
mov
cld
push
mov
retf
js
xchg
mov
jbe
cmp
pushf
mov
(bad)
and
shl
pop
daa
dec
adc
je
inc
je
push
add
xor
in
in
pop
cmps
out
mov
dec
or
hlt
xor
inc
out
shr
push
sub
pushf
push
sti
rcr
ins
mov
xor
cmps
mov
xchg
cmp
gs
gs
repnz
or
ror
mov
popa
imul
dec
or
and
(bad)
stos
lods
and
add
xchg
lods
je
pop
je
mov
and
lds
je
sub
adc
lods
test
lds
scas
movs
dec
sbb
add
scas
or
mov
dec
pop
pusha
dec
stc
add
movs
add
and
(bad)
out
inc
out
imul
fimul
ret
(bad)
out
push
adc
push
ficomp
repnz
jae
inc
and
jle
arpl
das
sub
jmp
cld
push
(bad)
loopne
sub
mov
(bad)
adc
sar
inc
sub
dec
sub
mov
movs
shr
outs
pusha
pop
adc
aam
in
arpl
dec
push
cli
mov
dec
fnstsw
dec
mov
jne
aaa
loopne
dec
xchg
pop
lods
pusha
test
aam
add
aas
lds
push
lods
pop
popf
push
stos
cdq
out
into
arpl
cld
ret
mov
(bad)
pop
cmp
xor
jmp
mov
xchg
push
sbb
push
ror
inc
dec
test
stos
fcom
je
or
js
popa
pop
sbb
add
ss
daa
jp
pop
movs
addr16
jo
adc
pushf
call
out
jmp
push
int
les
sub
xor
mov
rcl
cli
sbb
sar
pusha
add
inc
leave
cmp
sar
(bad)
fpatan
and
xchg
or
cs
add
xor
xchg
mov
jmp
sbb
fcmovnu
retf
inc
jl
lods
int
dec
sub
mov
push
or
inc
test
mov
rcl
mov
call
mov
and
jmp
mov
ins
dec
sub
inc
jns
int3
shl
add
cmp
jo
adc
scas
adc
add
pop
mov
push
sub
cmp
sbb
int
(bad)
(bad)
int3
push
imul
cmp
test
mov
sbb
mov
mov
stos
lods
je
(bad)
xchg
ss
aas
loope
retf
enter
(bad)
das
push
pop
adc
stos
pop
push
push
cli
jecxz
js
hlt
jmp
lahf
mov
cmc
cmp
aam
mov
pop
dec
aad
dec
arpl
fs
push
mov
stos
nop
push
mov
retf
add
cwde
movs
fidiv
push
cmc
add
retf
ror
inc
push
rcl
push
inc
test
inc
add
lea
lahf
dec
popa
pop
nop
sahf
(bad)
rcl
outs
mov
int
add
mov
(bad)
stos
and
out
aam
pop
ds
mov
add
or
add
jg
mov
movs
and
mov
aaa
push
dec
sahf
ret
int3
aaa
jns
inc
(bad)
retf
rcl
dec
dec
stos
jnp
jo
pop
mov
cld
jae
cmps
aam
pop
jg
mov
add
sub
into
push
fisttp
jb
xor
dec
outs
or
or
fucom
in
(bad)
clc
in
leave
(bad)
cmp
in
shr
or
out
aad
out
aad
inc
fistp
ins
dec
jl
xor
retf
and
or
addr16
and
pop
sahf
pop
pop
popf
push
ret
test
mov
push
add
adc
adc
call
mov
jbe
rol
and
sub
jae
(bad)
jns
je
xor
fyl2x
jne
out
push
mov
mov
inc
jns
pop
jae
xchg
jo
sub
push
dec
push
xchg
out
fs
pop
cmp
cmp
cld
inc
fwait
sub
retf
idiv
cld
dec
xchg
into
cwde
jl
loopne
out
cli
out
div
test
nop
dec
cmp
lods
push
cmp
sub
ja
xor
imul
add
loopne
adc
js
out
ds
jnp
not
outs
outs
adc
inc
pop
mov
adc
cmps
mov
jmp
pop
test
or
dec
inc
add
imul
push
xchg
add
mov
ja
push
pop
das
pop
fcom
jbe
in
iret
imul
push
xor
das
sub
(bad)
jae
sti
addr16
stos
int
popf
aam
ss
outs
aad
inc
aad
jo
es
mov
push
sbb
or
clc
ret
or
imul
call
jae
xor
add
lods
mov
push
nop
cmp
ret
mov
inc
lock
fcom
sbb
mov
sbb
lods
dec
adc
dec
xchg
lock
test
push
outs
sbb
mov
out
in
xor
sbb
jmp
ret
push
inc
inc
gs
push
aaa
jns
rcr
pusha
mov
adc
sub
xor
mov
(bad)
jne
cli
sbb
jmp
mov
fwait
mov
stc
or
xchg
adc
push
mov
sbb
ret
xor
pop
pop
pcmpgtb
mov
mov
mov
mov
xchg
scas
lahf
jmp
(bad)
popa
mov
cmovp
sti
sub
push
ss
retf
mov
mov
add
xchg
jbe
sbb
pop
lea
jmp
adc
push
push
aaa
dec
xchg
shl
movs
jae
inc
lds
retf
sbb
ja
sub
int3
push
aad
adc
in
push
mov
sbb
dec
cmp
xor
rcr
cli
lock
cmps
out
stos
in
cmps
mov
pop
cmps
fmul
in
dec
rcr
jp
xchg
in
xor
add
jle
rcr
mov
jge
movs
je
sub
(bad)
movs
call
outs
cdq
imul
xchg
cmp
adc
das
pop
in
xchg
mov
xor
sub
popf
int3
push
xor
xor
sar
push
jns
push
imul
repnz
aas
popa
mov
jne
dec
lods
addr16
ins
pushf
xor
mov
dec
stc
add
mov
test
adc
xchg
and
add
outs
xor
xchg
mov
ds
pop
mov
pop
sbb
fidivr
cli
inc
cmp
stos
mov
ds
dec
loop
fs
popf
out
sahf
jbe
je
adc
inc
cs
loope
or
inc
in
push
aam
(bad)
pop
pusha
movs
mov
fbstp
fld
pop
dec
retf
sbb
retf
pop
ror
data16
ds
(bad)
loopne
lea
push
jno
data16
or
cmp
movs
push
xor
jb
lock
clc
sub
xor
pop
mov
add
ror
mov
and
das
outs
inc
and
out
outs
std
fcom
aaa
mov
push
addr16
ja
jb
jbe
pushf
mov
jl
mov
lahf
sub
and
inc
cwde
mov
outs
shl
xlat
aad
xchg
ss
add
ror
mov
outs
sbb
dec
inc
popf
repnz
dec
add
dec
retf
mov
cmp
or
int
add
sub
jmp
push
dec
or
out
icebp
gs
les
jle
mov
push
out
test
cmp
mov
in
push
push
and
mov
lock
cmc
lods
add
(bad)
lods
adc
sbb
inc
jmp
push
sbb
jmp
clc
or
and
(bad)
push
popa
xor
cmps
sbb
pop
rol
mov
rcr
mov
fimul
mov
cli
mov
add
sbb
inc
jno
retf
dec
or
aad
cmp
inc
jl
fistp
test
in
push
xchg
rol
leave
sub
dec
outs
jne
daa
xchg
mov
inc
dec
pop
pushf
movs
dec
cmps
sub
inc
cmp
out
cmp
in
inc
scas
push
jg
xchg
sub
xchg
test
sub
pop
out
xor
in
cli
rcl
and
int
mov
sbb
mov
jns
xor
fisub
add
dec
fmul
ret
in
ins
jo
sbb
xchg
dec
jmp
push
je
mov
ins
adc
jne
cmp
pop
xlat
shl
imul
in
pop
pushf
inc
call
(bad)
pop
jo
push
cmp
ss
cwde
test
ror
push
cmps
ret
jne
stos
push
movs
inc
mov
inc
or
push
add
mov
adc
stos
mov
mov
add
imul
or
lods
and
loope
fwait
dec
jecxz
jge
adc
inc
cmp
add
fcom
(bad)
mov
ins
xchg
jo
mov
out
cwde
pushf
aas
out
or
ins
clc
into
das
in
dec
pushf
jmp
psllq
in
and
sbb
or
rcr
outs
pop
ja
xchg
cwde
cwde
dec
clc
xor
pop
xlat
out
in
mov
dec
dec
das
int
(bad)
push
fmul
mov
push
jbe
xor
in
ja
outs
jno
mov
pushf
je
xchg
adc
out
iret
imul
dec
mov
jecxz
inc
fbstp
cdq
pop
push
in
pop
call
clc
rcr
pop
fcomp
mov
div
sub
inc
add
fs
adc
jmp
pusha
call
(bad)
sub
mov
mov
pop
cmps
adc
and
daa
popa
or
mov
(bad)
jle
or
ficomp
pop
xchg
adc
xchg
xor
push
icebp
sub
js
test
xchg
je
jmp
sub
ss
test
mov
mov
(bad)
sub
sbb
xchg
pavgw
dec
jae
pop
aaa
mov
cld
add
inc
pop
daa
jae
pushf
sub
iret
add
pop
cmp
stos
inc
jmp
pop
or
mov
sub
arpl
popf
test
aam
dec
mov
xchg
loope
cwde
iret
pop
pop
and
repnz
cs
pop
adc
xchg
dec
jbe
(bad)
aam
into
and
mov
lock
ret
jno
pop
push
leave
aaa
jnp
loop
pop
repz
fsub
mov
cmp
fwait
lods
cmp
xchg
mov
fidiv
pop
mov
or
leave
daa
std
pop
int3
data16
add
fstp
neg
jg
xchg
mov
sbb
sahf
stos
cs
mov
adc
fild
scas
aas
retf
or
jb
pusha
fisttp
mov
mov
cdq
dec
lods
xchg
dec
dec
push
mov
imul
fcmovbe
xchg
xchg
sbb
xlat
xor
(bad)
sbb
pop
pop
mov
test
mov
mov
add
mov
jb
mov
mov
mov
add
cmp
add
inc
ds
jle
push
mov
test
or
mov
and
inc
aaa
fwait
xchg
les
jl
sub
dec
mov
lock
daa
or
and
lahf
xchg
sub
cdq
adc
mov
sub
push
aas
mov
mov
ret
ins
pop
movs
jge
clc
xor
cs
sar
lods
sbb
sahf
cmp
sbb
adc
pop
rcr
pusha
sahf
mov
inc
cmps
push
push
frstor
cld
jecxz
pop
dec
stc
xchg
jnp
inc
out
dec
arpl
inc
and
js
call
jl
fwait
(bad)
scas
shl
shl
push
test
repnz
inc
xchg
xor
pop
hlt
add
or
adc
sbb
aad
adc
xchg
repz
adc
shl
ins
clc
mov
pop
imul
inc
in
cmp
loopne
mov
sub
ds
xor
xchg
fisubr
cmp
xlat
add
push
or
xchg
cmp
cwde
jno
mov
jg
ds
xchg
mov
xchg
mov
sbb
inc
sub
enter
or
mov
(bad)
ficom
arpl
movs
and
sub
jno
inc
gs
cmp
ins
shr
adc
int3
ja
ins
cmps
js
enter
pop
aaa
sti
sbb
or
dec
mov
xor
dec
or
push
inc
and
jmp
test
lahf
fdivr
push
adc
mov
pop
push
out
xchg
cld
mov
stos
cmps
popf
sub
mov
ret
cmc
mov
mov
or
je
mov
aaa
call
push
add
push
cmp
cli
frstor
pop
xchg
cmp
xacquire
mov
add
inc
mov
push
scas
shl
mov
ret
mov
ret
xchg
movs
jo
push
pop
outs
inc
and
sub
or
xchg
jnp
inc
das
mov
mov
mov
mov
in
xor
out
iret
cs
or
outs
outs
or
xchg
lods
data16
inc
mov
movs
out
sbb
pop
inc
repnz
and
mov
cdq
ret
mov
dec
daa
add
xor
jl
pushf
int3
mov
retf
pop
lds
pop
repnz
call
mov
and
cs
stc
sbb
xchg
mov
scas
ret
xchg
inc
mov
fcomp
sysexit
sbb
js
sbb
mov
jo
add
test
push
mov
sub
mov
aas
dec
div
hlt
retf
iret
push
test
cmps
mov
xor
push
push
clc
pop
pop
xchg
std
jnp
pop
xchg
xor
outs
mov
sub
xchg
pop
mov
cmps
or
or
mov
mov
mov
arpl
push
aaa
addr16
iret
repz
sbb
loop
outs
dec
cmp
jbe
sub
jb
fild
pushf
jns
xchg
rol
xlat
fs
fbld
or
dec
retf
rcl
(bad)
fs
ja
clc
pusha
xchg
out
pop
xchg
imul
mov
pop
lahf
mov
int
sub
cli
lock
in
ret
jo
leave
push
and
adc
inc
add
(bad)
(bad)
cld
xchg
jmp
into
dec
div
ss
push
cdq
jne
lahf
popf
add
adc
cs
es
mov
and
(bad)
mov
bound
in
mov
jno
push
out
dec
push
leave
es
adc
mov
fimul
mov
adc
pop
retf
sub
jle
jmp
and
fwait
in
clc
push
in
mov
(bad)
retf
jmp
sbb
stc
adc
ins
xor
je
repz
fdivr
jae
cdq
adc
pop
add
in
nop
loope
les
(bad)
jp
push
mov
sbb
adc
cmp
ficom
xor
fsubr
cs
dec
push
xchg
data16
fdivr
xchg
sub
xchg
push
mov
in
aad
int
into
jmp
xor
cmc
inc
add
push
dec
stos
push
xchg
xlat
push
cmc
cmp
imul
je
cmc
hlt
jno
mov
sahf
cmps
mov
cdq
aad
inc
and
dec
xchg
outs
out
push
call
popa
xor
cmp
(bad)
sahf
mov
push
sbb
test
push
adc
mov
test
pop
js
pop
call
push
cs
or
mov
add
cmp
daa
sub
sbb
stos
jp
jo
or
mov
mov
sbb
mov
test
pcmpeqb
scas
in
or
pop
cmp
xchg
les
jb
add
dec
pushf
repnz
mov
cdq
mov
xor
repz
dec
xchg
test
sbb
std
stos
stos
movs
pop
(bad)
daa
adc
aad
mov
(bad)
pop
cld
repz
or
push
(bad)
bound
push
cs
mov
jle
retf
dec
cmp
mov
mov
ja
cmc
js
adc
in
add
ins
shr
add
clc
imul
call
ins
push
loopne
test
ins
adc
mov
sti
js
in
push
jmp
adc
push
sbb
(bad)
add
sub
add
aad
inc
enter
(bad)
lods
ror
retf
add
in
adc
mov
in
sbb
neg
ja
in
je
leave
sbb
daa
stos
nop
push
sbb
add
add
cli
fnstcw
js
int
aas
out
je
inc
scas
inc
or
call
push
cmp
arpl
retf
push
ss
jns
push
xor
(bad)
enter
int3
mov
loopne
add
and
inc
push
mov
bswap
sbb
jmp
push
adc
loope
sub
nop
cmp
ins
icebp
pop
inc
dec
leave
and
inc
call
adc
jo
push
push
int3
adc
std
les
pop
lea
ret
mov
outs
add
fcmovb
push
mov
xchg
mul
cs
push
retf
ret
(bad)
cmp
xor
sbb
xor
xor
or
ins
outs
sub
cmps
mov
mov
scas
sub
mov
stos
sub
sbb
cmp
and
inc
xor
pop
pop
loope
dec
arpl
dec
das
pop
inc
and
out
dec
xchg
push
ins
mov
and
dec
push
es
dec
fisub
out
sbb
inc
(bad)
jmp
mov
call
retf
out
mov
inc
ffree
mov
arpl
rol
push
mov
clc
mov
xchg
xor
add
mov
xor
je
ja
movs
in
push
test
fadd
es
ss
or
push
bound
mov
mov
popa
sub
das
and
test
ret
mov
lahf
push
ret
pop
push
into
xor
mov
sbb
fst
mov
lahf
jns
aas
xchg
mov
iret
or
mov
outs
cmps
push
movs
mov
mov
cmp
xchg
sub
inc
dec
sar
or
hlt
or
jns
and
mov
xor
stos
sti
pop
add
jle
jle
cli
ja
push
add
popa
pop
cmp
js
loope
fist
jecxz
sbb
aad
sahf
sub
outs
and
daa
cmp
jne
shl
sbb
push
mov
push
jns
xlat
stos
inc
pop
mov
push
sbb
pop
and
xchg
in
sub
int3
sbb
or
cmp
xchg
cmps
inc
vpshaw
dec
cmp
test
xor
cld
(bad)
push
xlat
rcl
mov
les
sar
sbb
push
pop
sub
shl
mov
test
push
les
(bad)
pop
xchg
sbb
push
pop
sbb
daa
dec
(bad)
sub
push
outs
jl
cmp
imul
int
jge
aas
call
mov
push
out
popf
mov
pop
imul
mov
test
pop
or
push
jmp
(bad)
lock
sbb
or
mov
cdq
fidivr
std
xchg
ja
or
jns
inc
arpl
fist
bound
fsub
loop
inc
jecxz
and
push
es
repz
and
mov
iret
and
push
mov
lods
fisub
imul
mov
shl
inc
aas
scas
jp
push
mov
xor
push
cwde
mov
stc
cmp
mov
push
mov
sahf
repnz
(bad)
cdq
sub
lods
std
xlat
scas
push
nop
adc
mov
clc
cld
aad
std
cmp
jge
dec
inc
fs
mov
mov
repnz
pop
fstp
into
arpl
sub
jmp
retf
or
dec
inc
mov
mov
pop
mov
jmp
pop
xlat
rol
cmp
retf
pop
mov
jg
sub
es
mov
pop
scas
push
cwde
xor
imul
ja
xor
mov
mov
fistp
inc
in
sub
jbe
mov
inc
jno
cwde
repnz
inc
inc
cmp
mov
(bad)
fbstp
push
inc
inc
data16
lds
mov
add
push
mov
mov
fmul
mov
or
in
xor
xor
hlt
addr16
xor
dec
enter
dec
std
adc
enter
jo
jecxz
lahf
jle
jne
daa
jle
mov
jp
push
sar
pop
push
adc
pop
cld
in
push
pop
push
xchg
pop
jnp
sub
cmp
mov
inc
dec
inc
lods
xchg
pop
sub
outs
sub
cmp
in
scas
fimul
xchg
jae
call
cdq
repnz
or
retf
fimul
pop
inc
rcl
add
push
push
loope
push
xor
adc
dec
inc
mov
idiv
mov
call
xchg
add
xchg
and
pusha
mov
or
mov
adc
or
jge
dec
sbb
(bad)
in
sahf
pop
fld
imul
mov
push
int
lods
fnstenv
ss
daa
repnz
dec
mov
inc
(bad)
pop
(bad)
sub
cmp
add
out
push
mov
inc
arpl
in
aaa
shufps
out
cmp
push
sub
adc
mov
add
int
mov
cmp
jmp
mov
cmp
loope
sub
dec
out
div
cmp
pop
push
inc
cmp
pusha
scas
mov
inc
push
movs
sti
cmp
cmc
mov
sbb
loopne
jle
push
int3
cmp
dec
ins
mov
sub
sbb
jns
loopne
movs
mov
cmp
repz
mov
js
div
jnp
adc
repnz
adc
xor
ret
sbb
sub
imul
and
call
pop
xor
test
movs
xchg
mov
out
cld
xor
ja
jae
imul
cmp
or
adc
pop
fcomip
sub
int3
ret
jecxz
gs
lods
add
xor
jo
lock
xchg
inc
jmp
sub
das
enter
ins
fstp
pop
std
xor
mov
std
hlt
pushf
adc
fnsave
out
repz
jge
mov
cmp
mov
jae
sub
ins
js
xlat
stos
push
xor
dec
inc
rcr
jecxz
cdq
(bad)
mov
(bad)
out
mov
cmp
int3
fabs
mov
dec
xor
ds
jecxz
jp
sub
loope
call
or
or
test
sub
nop
idiv
mov
push
inc
cli
push
xchg
outs
mov
rcr
sbb
(bad)
dec
ins
lds
push
pop
dec
xor
aad
sbb
neg
mov
xchg
pusha
(bad)
movs
sub
cmp
pop
and
jo
retf
lahf
jo
test
push
dec
sbb
push
push
cdq
jmp
fisub
movs
jecxz
std
call
out
pop
mov
mov
leave
pop
cmps
cmp
ins
ins
ja
daa
fnsave
jecxz
nop
pop
(bad)
mov
sti
loope
(bad)
xor
mov
nop
lods
adc
scas
(bad)
movs
sub
xor
jo
and
inc
ss
imul
add
jae
fs
or
jle
clc
cwde
cmps
in
(bad)
push
xor
js
les
and
in
push
aam
leave
mov
pushf
lods
fsubr
xor
scas
popa
mov
mov
and
aaa
scas
pop
add
aad
rol
loope
rol
xor
mov
aam
cmp
lods
inc
outs
or
pop
lea
mov
jecxz
cmps
out
push
xor
(bad)
dec
or
inc
cli
aas
jmp
jne
xor
or
cdq
mov
and
fcmovnu
sub
add
retf
enter
int
loopne
mov
mov
cmp
pushf
jno
pop
fidiv
sbb
jns
or
cmp
imul
enter
add
imul
retf
or
mov
je
ins
outs
movs
fstp
mov
fsubr
or
ds
test
popa
xor
xor
dec
jmp
out
movs
mov
int
stc
jp
mov
xchg
popf
push
xchg
fistp
fidiv
leave
mov
retf
adc
sub
mov
iret
xchg
adc
inc
adc
ret
and
test
push
ss
psadbw
rcl
mov
repnz
pop
lds
and
retf
xchg
aas
fnstenv
shl
sub
ins
sbb
lock
(bad)
fwait
and
cmp
fld
dec
test
dec
enter
mov
ret
popf
or
sbb
jge
xchg
fs
fwait
in
test
fidiv
or
push
call
stos
or
fwait
xor
cmp
les
test
imul
jbe
test
mov
inc
sub
add
ret
mov
int
or
push
(bad)
(bad)
fbld
xor
aad
xor
shl
mov
call
dec
das
sbb
inc
pusha
mov
addr16
dec
push
mov
mov
popa
cmp
add
cld
jb
and
out
pop
xchg
sbb
popa
add
jne
scas
gs
lods
jmp
loop
jmp
ja
test
and
sbb
shl
dec
xchg
lahf
add
sbb
(bad)
shl
int
leave
ss
inc
fld
or
jle
and
xchg
xchg
repz
mov
test
jge
push
pop
sub
ins
mov
cs
push
popa
inc
jmp
sub
push
and
jl
cwde
jmp
gs
jns
popa
out
in
(bad)
adc
sysexit
and
mov
scas
cs
ja
repnz
cwde
xor
sub
fist
xor
xchg
pop
inc
pop
push
pushf
mov
xchg
xchg
cmc
call
out
or
push
mov
mov
(bad)
sti
sbb
in
fdivr
push
add
mov
cld
sub
mov
enter
mov
mov
cwde
sbb
inc
adc
or
jmp
sub
and
shr
mov
(bad)
clc
shr
rcl
retf
pushf
cmps
pop
sbb
push
adc
(bad)
loop
inc
iret
neg
out
lock
daa
mov
out
ins
and
xchg
cmp
into
sbb
sbb
fild
fild
or
adc
cs
sub
je
sub
shr
push
sbb
popa
add
cmp
clc
dec
jo
jp
add
sbb
loope
scas
add
push
or
mov
call
and
mov
in
push
mov
shl
scas
cmp
cmp
sub
imul
and
inc
loopne
jb
xchg
int3
scas
mov
movs
fsub
fmulp
test
lea
cmps
pop
fs
in
mov
test
(bad)
idiv
fsubr
mov
sar
sub
mov
cli
ja
or
neg
mov
push
mul
shr
sbb
es
xor
mov
ins
push
retf
sbb
retfw
in
stos
jne
pop
push
sbb
mov
and
push
enter
cmp
outs
arpl
(bad)
fsubr
mov
lahf
jae
(bad)
inc
add
and
fidivr
(bad)
push
daa
repnz
lods
(bad)
rcr
lock
(bad)
sub
add
jae
push
or
gs
lds
push
push
leave
fs
jp
cmp
ja
sub
push
gs
pushf
cdq
mov
shl
or
fldcw
cs
and
shr
push
jae
bnd
xlat
sub
cmps
mov
mov
cmps
ins
pop
in
dec
or
xor
xchg
scas
pusha
sbb
nop
mov
loop
pop
clc
test
mov
xchg
sti
(bad)
mov
jg
jp
lahf
adc
jle
ins
jbe
sbb
cli
test
pop
hlt
sub
outs
aas
sbb
leave
xchg
(bad)
loopne
fwait
adc
cmp
adc
pop
(bad)
idiv
sub
ret
cmp
jle
inc
pop
xor
mov
fldcw
pop
xchg
jae
jae
cli
inc
cmp
or
ds
jg
and
cdq
sbb
push
(bad)
gs
push
sub
nop
std
cmp
or
push
jge
fst
pop
inc
push
cmc
adc
xchg
call
add
add
xlat
scas
lods
mov
add
ins
jns
aaa
mov
xchg
stos
inc
mov
cmc
repnz
scas
hlt
(bad)
out
or
mov
adc
mov
pop
sbb
adc
inc
xchg
cmp
mov
fbstp
mov
inc
call
sbb
icebp
aam
mov
cmps
cmp
daa
jmp
jae
cmp
movs
fild
cmp
adc
das
push
(bad)
xor
mov
or
sar
scas
rol
mov
fadd
cmp
mov
xchg
mov
mov
inc
dec
cmp
push
sub
push
loope
repnz
jns
dec
cmp
lods
dec
jmp
adc
jae
jns
jb
rcl
int
add
fist
scas
or
mov
(bad)
sub
xchg
sub
mov
clc
data16
jo
fild
sbb
das
clc
scas
mov
or
mov
xchg
bswap
imul
das
mov
sar
rcl
xor
neg
sbb
pushf
xchg
push
test
mov
sub
push
call
test
push
fcom
fsubrp
cwde
jg
sbb
ret
and
add
pop
cwde
mov
xchg
frstor
fwait
rcl
sbb
jl
out
adc
shr
mov
sbb
addr16
xor
jmp
daa
lds
sub
cmc
jo
fcmovu
fcmovne
test
cmp
jecxz
adc
adc
repz
xor
push
rcl
xchg
inc
je
ficom
repnz
lods
das
and
adc
xor
mov
jne
or
repnz
(bad)
in
xchg
fimul
movs
imul
add
or
mov
movs
xor
(bad)
test
out
inc
pop
ret
fcom
bound
(bad)
jg
xchg
loopne
jge
mov
lods
or
mov
adc
dec
paddusw
xor
and
push
xchg
mov
ds
clc
mov
aam
mov
hlt
pusha
stos
jne
xor
inc
push
cmp
in
sub
push
pop
repnz
and
cdq
dec
xor
ror
cli
popf
add
clc
jno
inc
sub
retf
add
mov
shl
and
inc
hlt
(bad)
sbb
std
loope
scas
gs
mov
inc
int
pop
cmp
rcl
out
retf
sub
shr
test
adc
push
cmp
adc
jno
fsubrp
lods
inc
repnz
pop
and
js
or
xor
sar
imul
test
sub
push
mov
pop
repnz
mov
pop
(bad)
sub
cs
push
jb
sub
pop
aaa
and
cmps
fcomp
retf
inc
es
lahf
mov
xchg
jg
push
out
push
ror
mov
nop
add
and
fnsave
cmps
jg
fadd
cmp
xor
cdq
ficomp
dec
scas
add
mov
sti
xor
push
call
xor
test
imul
cdq
jmp
and
mov
iret
mov
dec
ja
push
scas
leave
sub
pop
je
add
sbb
dec
ins
push
fidivr
scas
push
push
dec
push
ffreep
dec
scas
mov
push
cld
not
lods
jle
iret
daa
mov
push
mov
inc
or
cmp
xor
sub
aaa
xor
repz
mul
pop
mov
cdq
sub
cmp
jb
pop
dec
jecxz
push
pushf
mov
pop
les
pushf
stos
daa
(bad)
fstp
jg
sub
and
sub
mov
in
mov
leave
test
movs
dec
and
enter
adc
pop
pusha
xchg
test
cmp
ins
inc
jg
add
jns
push
cmp
and
dec
sbb
cmps
lods
repz
(bad)
cld
scas
xor
hlt
icebp
mov
ffree
addr16
in
and
sbb
rcl
mov
add
fcom
hlt
cmp
xchg
es
add
fadd
call
inc
rcl
(bad)
in
mov
arpl
movs
mov
fld
jno
mov
aas
push
int
aaa
cld
add
add
or
sbb
sub
arpl
cmp
ficom
rcl
or
stos
sub
aam
mov
sub
stos
ins
in
frstor
(bad)
mov
and
lds
sbb
pop
jns
pop
iret
mov
push
cmp
in
xor
(bad)
sub
xchg
dec
ins
cmp
outs
ja
(bad)
cmp
or
xor
push
mov
retf
dec
pop
push
jg
inc
int3
dec
jle
pop
sub
test
lock
dec
push
mov
mov
xchg
cmp
mov
adc
aaa
adc
inc
sub
xchg
mov
cld
jle
out
push
inc
stos
ret
in
add
inc
jb
imul
sbb
sbb
mov
or
fistp
retf
dec
jb
into
in
into
push
mov
dec
mov
or
das
dec
popa
pop
(bad)
xor
pop
and
jnp
dec
pop
retf
and
fist
jle
add
jle
sub
dec
cwde
adc
adc
loop
mov
fwait
ds
push
aaa
outs
les
or
clc
mov
leave
or
adc
mov
mov
cmp
daa
iret
rcl
test
hlt
scas
cvttps2pi
or
xchg
jo
jmp
jecxz
ins
add
inc
adc
adc
add
fmulp
je
daa
jbe
pop
or
mov
dec
dec
lods
sti
out
movs
xchg
cmc
push
jmp
out
movs
mov
call
scas
and
dec
sbb
mov
stos
and
call
in
repz
enter
and
movs
sub
leave
mov
aam
push
push
movs
sti
imul
mul
js
ficom
mov
stos
sbb
rol
xor
or
cs
call
pusha
cmc
push
stc
shr
ja
fld
sub
jbe
add
loope
dec
jge
pop
jp
daa
loope
(bad)
adc
and
jb
mov
push
movs
loop
push
cli
bound
mov
or
mov
lds
mov
das
in
xor
jmp
mov
hlt
out
fadd
aaa
mov
xchg
fwait
dec
ret
jmp
push
mov
cmp
stos
dec
add
js
in
hlt
add
and
div
mov
sub
int3
pmulhuw
lock
int
xlat
shr
xor
xchg
repz
loope
or
fidivr
scas
cdq
(bad)
fstp
pop
fwait
dec
jmp
mov
and
mov
push
or
dec
dec
mov
lock
gs
aas
fcomp
mov
inc
xchg
fnstsw
jne
std
xchg
jnp
sti
fimul
int
loop
std
mov
jmp
out
(bad)
fisub
jmp
mov
xchg
ret
enter
mov
mov
mov
xchg
mov
push
inc
je
or
and
js
aas
mov
xor
and
rol
loopne
sbb
pop
cmp
call
jge
mov
mov
mov
mov
loop
sbb
pop
rcl
xlat
push
dec
mov
sbb
xchg
inc
inc
dec
mov
mov
dec
in
add
xchg
mov
(bad)
int
dec
ret
inc
aad
cli
sub
fsub
iret
(bad)
sub
sub
call
out
imul
rcr
mov
push
fcomi
dec
std
pop
add
mov
ja
or
int
sar
sbb
and
jnp
inc
or
cmp
cmp
scas
mov
cmp
mov
xchg
mov
dec
hlt
sub
test
icebp
aad
inc
xor
shr
(bad)
arpl
or
dec
fsub
inc
or
sbb
xor
pop
loop
bnd
ss
call
mov
mov
xor
mov
mov
adc
lods
sub
stos
pop
inc
neg
sub
shl
cs
mov
int
dec
scas
lahf
div
xor
inc
repz
sbb
mov
loop
in
clc
sub
hlt
mov
out
xchg
or
dec
mov
aaa
jmp
loopne
outs
jbe
and
rcl
ins
dec
push
sahf
(bad)
ror
adc
mov
and
add
and
cmp
(bad)
adc
mov
jl
sub
cs
sub
xor
pop
sub
cmps
ins
pop
jae
xor
stc
inc
xlat
inc
pop
call
jecxz
cmp
icebp
rcr
push
repnz
mov
popf
inc
pop
inc
mov
cmps
in
mov
mov
pop
or
in
push
push
test
dec
in
adc
jae
xor
add
cmp
mov
(bad)
pop
hlt
mov
cmp
icebp
jle
add
mov
dec
lea
loopne
sahf
test
pop
jge
adc
push
addr16
cld
sbb
xchg
mov
jns
push
dec
ret
loop
das
dec
sbb
push
inc
jb
iret
xlat
push
xor
jecxz
aam
cwde
jae
push
loopne
and
sbb
stos
retf
dec
test
hlt
stos
mov
rcr
pop
dec
aad
enter
jge
mov
pop
movs
push
sbb
mov
mov
out
imul
xchg
jmp
retf
cdq
out
dec
lds
push
mov
push
add
xor
dec
jmp
hlt
ja
scas
mov
scas
mov
ins
(bad)
mov
and
xlat
inc
xor
xor
scas
outs
jno
jmp
add
outs
mov
jae
inc
dec
or
sub
jle
mov
xchg
mov
test
mov
push
popf
dec
jne
xchg
add
popa
popa
inc
sub
out
scas
into
pop
sar
fimul
pop
mov
xor
int3
add
jmp
inc
push
out
mov
(bad)
fsub
mov
sbb
mov
ss
shl
adc
imul
xchg
into
ror
ds
push
dec
out
(bad)
iret
movs
jp
inc
loope
icebp
xchg
test
cdq
(bad)
dec
repz
mov
sub
out
jl
iret
cmp
retf
dec
dec
movs
das
ss
add
xor
enter
xor
out
push
into
inc
out
pusha
add
sbb
ins
add
or
loope
icebp
dec
inc
mov
pop
in
or
mov
stos
sbb
jmp
xor
das
dec
pop
jno
je
mov
jmp
fst
mov
cmc
nop
push
cmp
pop
push
cdq
push
pop
mov
jle
xchg
jp
sub
loope
adc
inc
mov
sahf
xchg
ins
fdiv
mov
sbb
out
add
fild
dec
test
sbb
shl
jle
mov
call
(bad)
mov
push
dec
sub
jb
xor
push
jecxz
lods
and
test
bound
add
push
xchg
xchg
pop
jbe
dec
ss
xor
mov
fiadd
and
dec
xor
mov
or
aad
or
int
push
iret
hlt
push
out
dec
sahf
mov
dec
cli
mov
outs
in
call
mov
lds
jmp
pop
call
push
fdiv
cs
cs
movs
(bad)
xchg
retf
inc
jno
sbb
dec
sub
sbb
sub
movs
adc
pop
mov
fwait
jne
pop
push
jmp
mov
dec
push
(bad)
jge
pop
xchg
mov
dec
or
gs
lock
retf
mov
or
daa
test
cmps
mov
sub
ins
xlat
ror
fldcw
pop
jle
mov
dec
adc
jg
dec
cmp
aaa
or
(bad)
int
fcomp
and
cmp
jg
pop
sar
test
out
mov
push
test
sub
jmp
push
adc
iret
loope
test
mov
fwait
dec
scas
or
xor
fmul
dec
or
sbb
retf
jae
jnp
inc
cmp
jp
push
cs
ss
lahf
mov
mov
sbb
cdq
imul
xchg
push
fcomp
hlt
cmp
xchg
mov
mov
je
retf
mov
scas
mov
mov
ins
out
leave
sbb
fdivr
or
ret
mov
jo
mov
sbb
int
jns
out
adc
jmp
repz
mov
xor
stc
arpl
adc
lahf
mov
inc
push
sub
aas
sub
(bad)
mov
xor
push
push
cmp
cmp
inc
mov
jl
jnp
pop
jle
iret
jecxz
jmp
rcl
jne
dec
repz
icebp
cwde
lea
or
jp
mov
inc
adc
dec
xor
lods
mov
inc
jno
dec
dec
and
int
dec
ss
cld
mov
js
mov
cmp
call
mov
mov
mov
adc
adc
loop
pop
xchg
loop
dec
add
push
div
gs
adc
and
inc
test
dec
dec
std
adc
shl
push
icebp
mov
fdiv
dec
xchg
imul
mov
inc
push
inc
daa
jp
mov
outs
xchg
pusha
in
and
int
imul
push
mov
repnz
pop
pop
adc
jecxz
(bad)
out
test
pop
neg
add
pop
addr16
inc
out
add
lahf
push
fmul
or
sub
fcomp
mov
cmp
pop
loop
ins
(bad)
loopne
or
or
es
ins
rcr
dec
out
adc
test
sub
fwait
in
mov
push
dec
(bad)
adc
xchg
push
mov
inc
imul
cmp
dec
and
inc
mov
jo
jne
push
ins
xchg
jns
lahf
xchg
fs
out
pop
xchg
sahf
push
aaa
add
ja
dec
and
push
push
pop
inc
pop
cmps
dec
dec
xchg
into
mov
mov
in
xchg
es
int
dec
rcl
bound
shr
mov
pop
dec
shl
sub
sti
or
push
in
and
jp
xor
std
ret
aad
add
daa
stos
push
sbb
fld
sbb
mov
movs
aaa
mul
in
rcl
pop
sbb
in
pushf
sub
dec
aam
xchg
out
retf
xchg
jg
lea
and
ins
or
mov
dec
in
mov
data16
jl
inc
push
and
data16
add
jmp
imul
retf
arpl
cmps
fsubr
addr16
and
mov
lea
dec
xor
dec
sti
rcl
outs
xor
in
pop
lds
sbb
std
jl
jmp
and
jnp
ds
mov
xchg
pop
xchg
mov
jecxz
jno
push
out
pushf
pop
in
imul
mov
sbb
xor
fdiv
and
in
adc
test
loope
cmps
add
cmp
in
aaa
add
test
sub
icebp
retf
or
jl
mov
(bad)
sbb
xchg
push
jmp
pop
pop
push
inc
pop
ja
add
sub
(bad)
retf
mov
cmp
adc
push
lds
es
fdivr
xor
jbe
mov
jl
xor
iret
jne
loopne
stos
fsubp
mov
and
pop
ret
adc
and
mov
stos
mov
in
lods
test
sbb
inc
dec
jb
pushf
add
jae
cmc
sbb
add
outs
faddp
lods
xor
test
out
shl
ins
pop
xchg
xchg
scas
ds
pop
in
inc
sbb
dec
adc
loope
cwde
pusha
cs
enter
mov
ins
out
repz
int3
jge
mov
fst
bound
mov
sbb
test
fldcw
outs
outs
hlt
sub
inc
pop
jl
repz
pop
dec
mov
test
clc
and
cs
mul
clc
fnsave
ret
arpl
ja
ret
mov
dec
mov
leave
adc
mov
ja
push
in
jmp
mov
popf
cmp
dec
inc
jl
inc
mov
adc
call
mov
mov
out
fdivr
dec
pop
call
xor
push
xor
mul
jno
pop
fimul
aam
dec
adc
dec
push
push
xchg
jno
test
out
pusha
xor
sub
xchg
mov
dec
ins
retf
imul
aam
inc
cmp
loope
cmp
mov
or
loop
xchg
sbb
call
ins
dec
leave
xor
cld
sahf
loop
add
aam
aas
push
cs
push
sahf
adc
fwait
or
call
mov
sar
jbe
and
mov
lea
mov
into
cmp
push
mov
cwde
push
cli
jnp
sub
popa
stos
inc
mov
dec
out
xlat
or
mov
add
rcr
jae
outs
push
mov
pop
jns
jg
add
dec
sbb
and
retf
sbb
jmp
or
pushf
add
addr16
or
daa
loope
aas
ss
inc
pop
or
mov
dec
jo
das
or
adc
fisttp
inc
mov
mov
cmp
push
addr16
cwde
not
jae
jne
(bad)
jnp
inc
div
movs
data16
test
jp
popf
sbb
leave
ds
mov
inc
ret
out
stc
xchg
retf
mov
aaa
xchg
xchg
xor
mov
call
daa
and
add
mov
or
enter
ds
daa
rcr
cmp
idiv
cdq
jg
push
nop
mov
sub
or
cwde
mov
dec
xor
add
mul
mov
and
and
in
push
adc
mov
dec
pop
xor
and
jns
inc
fcmovu
out
mov
sar
push
pop
ret
dec
mov
fisttp
fwait
out
mov
stos
or
bound
push
pop
out
scas
sbb
pushf
mov
sub
pop
xchg
(bad)
cs
aad
xor
push
mov
lods
in
mov
mov
fld
jne
ja
ror
js
mov
(bad)
repz
mov
dec
sahf
dec
addr16
mov
add
sahf
pop
adc
jb
test
popa
cmp
push
std
ins
pop
cwde
jno
outs
and
pop
pushf
mov
nop
sahf
dec
js
int
int3
sub
add
jnp
int
cli
mov
inc
dec
pop
jmp
mov
outs
cmc
mov
dec
xor
movs
sbb
ror
lock
inc
mov
fsub
pop
mov
mov
lock
jmp
mov
pusha
into
mov
fld
(bad)
pop
ss
xchg
daa
pop
call
sbb
dec
xchg
dec
scas
mov
xchg
popf
aaa
or
sbb
inc
loope
add
pusha
movs
mov
and
inc
mov
(bad)
jb
xchg
test
fst
push
not
movs
sub
and
loopne
call
lahf
daa
sub
ins
jle
jne
retf
push
jb
fldcw
pop
sbb
dec
test
fsubp
cmp
popa
xchg
adc
push
add
cmp
mov
mov
jbe
loop
sbb
jo
stos
call
inc
adc
clc
ss
inc
sub
ficomp
imul
sbb
adc
dec
lods
ret
aas
pop
nop
dec
jb
ror
idiv
sub
data16
mov
jle
sti
lea
sub
cmps
lock
cmps
out
sub
xchg
daa
or
xor
adc
dec
aaa
sti
xor
mov
adc
jp
xchg
dec
xor
mov
out
cmp
inc
inc
mov
shl
jno
stc
std
push
test
test
and
pop
push
call
lea
push
outs
xlat
push
pop
sbb
aam
cmc
mov
add
pop
movs
fsub
fdiv
fld
jge
leave
mov
pop
jns
test
and
nop
jne
sti
js
mov
mov
sbb
push
sbb
xchg
loopne
fisub
jb
mov
xchg
addr16
cmp
in
repz
(bad)
mov
nop
or
loopne
pop
adc
inc
(bad)
push
dec
cmp
rol
push
stc
(bad)
(bad)
pushf
test
popf
mov
jnp
(bad)
repz
add
add
(bad)
in
mov
push
inc
fsub
dec
es
lahf
and
pop
and
or
out
add
push
dec
les
cmp
(bad)
mov
push
fistp
sbb
jg
pop
fsubr
aad
or
in
outs
sti
mov
out
pop
pop
push
and
movs
into
inc
imul
push
sub
lock
adc
pop
ins
mov
inc
pop
jnp
xor
xor
lock
jno
mov
repnz
sbb
jle
leave
adc
lds
fwait
and
jnp
sbb
jns
sub
dec
bound
ror
cmps
jge
mov
adc
(bad)
jp
pop
mov
sti
mov
stos
scas
into
test
popf
xchg
mov
in
js
movs
push
push
cs
pop
scas
xchg
aaa
into
mov
push
icebp
inc
cld
mov
push
adc
int3
popf
push
cmp
or
mov
jle
sar
cmps
pop
jmp
mov
pop
dec
test
pop
mov
mov
stc
arpl
pop
fadd
loopne
add
dec
xor
into
das
sar
xlat
daa
jle
adc
push
add
bound
int
dec
in
mov
stc
fsubr
inc
test
xchg
mov
fild
fild
cmp
lahf
dec
out
es
mov
fwait
inc
int3
imul
cli
push
mov
cld
mov
dec
add
jmp
daa
imul
out
int
jl
movs
out
xchg
cwde
(bad)
mov
lock
test
in
xchg
mov
jb
cmp
inc
pop
cmp
and
xchg
pop
fidiv
dec
nop
mov
fs
inc
in
or
mov
(bad)
mov
imul
dec
sub
aad
cli
fisttp
jge
and
push
adc
imul
aad
dec
rcl
add
inc
dec
pushf
sbb
out
sbb
xchg
add
retf
dec
pop
xor
pop
xlat
cmp
jmp
loope
cmp
add
jg
add
and
repnz
retf
add
call
mov
adc
lock
daa
mov
idiv
inc
fwait
inc
dec
pop
movs
push
je
push
(bad)
pop
(bad)
int3
jns
jne
pushf
push
shl
fldcw
fist
sbb
mov
mov
cmc
daa
cmp
stos
fidiv
out
lods
adc
and
cld
cmp
mov
stos
pop
mov
or
arpl
je
or
adc
push
cmp
push
jbe
cmps
jmp
les
jmp
ins
(bad)
out
hlt
stos
dec
repnz
enter
iret
adc
or
imul
stc
inc
add
ds
js
mov
ss
(bad)
mov
push
call
jmp
fdivr
pop
sub
push
xor
push
ror
iret
xor
push
xor
lods
xor
sar
inc
adc
pop
mov
cmp
mov
xor
push
or
popf
imul
in
fistp
imul
aaa
sub
jle
sbb
sbb
fwait
sbb
and
imul
iret
ret
jo
xor
push
jb
sahf
mov
sbb
test
inc
(bad)
cmp
pop
bound
push
cs
or
mov
imul
scas
jle
mov
pop
xchg
cmp
push
push
fist
shl
pop
jg
ins
sub
retf
dec
dec
outs
sahf
fcom
xchg
fwait
das
or
in
sbb
int3
add
pop
xor
sub
lds
sbb
adc
jns
inc
dec
mov
and
loope
test
sub
xchg
loope
jl
aad
es
leave
sbb
cmps
rol
sti
mov
mov
movs
dec
xchg
xchg
xor
lea
xchg
mov
imul
rol
and
sbb
mov
sbb
fisttp
and
cmp
mov
iret
inc
clc
mov
mov
mov
inc
cmps
test
or
jmp
jnp
xlat
mov
imul
mov
adc
inc
in
xchg
or
data16
jb
test
fnstenv
mov
xchg
mov
not
jp
pop
mov
jg
lods
adc
xchg
sbb
push
cmp
jne
xchg
in
and
adc
inc
out
mov
push
(bad)
ds
and
pop
and
pop
ror
jecxz
icebp
stos
(bad)
mov
dec
lods
xlat
xor
add
mov
mov
and
push
mov
inc
(bad)
in
mov
es
mov
add
stc
mov
adc
aaa
das
sub
sbb
imul
bound
fadd
jle
movs
cmc
and
xlat
das
fimul
mov
cld
cld
push
je
or
fisubr
in
mov
xchg
setb
dec
sbb
mov
icebp
in
add
xor
push
add
add
adc
lods
pop
cmc
inc
mov
adc
xchg
jmp
jmp
sar
adc
mov
addr16
xor
xor
push
cmp
lahf
data16
ror
rcl
push
test
mov
ret
and
cdq
rcl
mov
mov
test
out
mov
mov
loop
fistp
fcmovbe
or
or
movs
mov
xchg
sub
mov
test
sub
lods
jp
sti
(bad)
icebp
(bad)
in
cmp
push
adc
dec
adc
sbb
mov
dec
pop
sub
push
movs
in
mov
mov
xchg
in
xor
push
mov
cmp
jno
xlat
ins
jo
xchg
popa
mov
out
adc
mov
test
sbb
scas
fs
and
mov
jmp
add
fs
sbb
rcr
lds
push
icebp
adc
fistp
inc
push
pop
push
cmps
jb
pop
dec
fwait
retf
mov
mov
fcomp
aaa
cmps
dec
scas
popf
mov
dec
sti
cmc
lds
sbb
mov
arpl
add
xor
aaa
out
or
ficom
jmp
pop
dec
mov
scas
out
add
sub
fst
push
movs
popf
cwde
xchg
mov
or
cmp
dec
sub
je
lds
lods
xchg
lds
bound
outs
pushf
xchg
retf
mov
push
jae
or
emms
cmp
lea
fsubrp
test
cwde
push
hlt
data16
push
pop
add
mov
add
cmp
inc
fcmovne
popa
pop
inc
ins
lods
mov
ins
cmps
mov
inc
xchg
cmc
mov
jno
jp
scas
xchg
lods
mov
mov
xchg
dec
lea
je
xchg
ja
aaa
js
lods
ds
sub
jmp
jno
arpl
push
imul
into
ret
and
pop
or
jmp
loop
mov
aaa
mov
sbb
inc
je
ds
xchg
nop
cli
or
adc
xchg
pop
call
dec
sub
sbb
pop
(bad)
clc
inc
dec
es
scas
cmp
icebp
cdq
lahf
jno
popf
or
int3
sbb
cs
mov
ror
int3
into
mov
add
arpl
aam
cmp
in
cmc
idiv
ins
jmp
stc
mov
mov
lea
xchg
mov
push
stc
stos
inc
jl
out
push
inc
enter
je
loopne
aam
add
jge
jl
cmc
test
fbld
push
jmp
shl
aad
mov
call
mov
into
inc
das
mov
mov
fsub
mov
mov
inc
imul
dec
fdivr
lock
and
ins
mov
push
sub
arpl
cs
cwde
jge
test
int3
test
call
aas
fwait
loop
adc
(bad)
pop
mov
ficom
mov
ds
iret
mov
xchg
dec
je
enter
ja
cmp
pop
mov
add
cmc
shr
je
inc
push
cmp
ds
repz
(bad)
scas
iret
ret
retf
mov
sbb
mov
leave
xor
(bad)
cmp
adc
push
in
inc
lahf
or
les
sub
fist
movs
inc
bound
fldenv
int3
ror
push
cmps
push
fnstcw
movs
jbe
mov
(bad)
sar
imul
mov
sbb
ds
nop
xchg
or
repnz
daa
loopne
cdq
(bad)
xchg
sub
pop
mov
or
inc
adc
cdq
and
jge
sbb
mov
nop
lea
shl
lock
cmps
sbb
repnz
call
adc
fs
inc
fs
ss
dec
iret
movs
mov
jbe
push
push
adc
daa
js
pop
frstor
sbb
movd
fistp
add
lock
inc
push
adc
mov
in
xchg
std
jmp
mov
lds
jge
ror
aaa
outs
xor
rol
repnz
mov
jl
adc
dec
sbb
fdiv
xchg
movs
out
jne
pop
fidivr
out
fdiv
xchg
fnstenv
jo
test
sub
jo
jnp
in
loope
int
lea
add
or
movs
ret
xchg
jne
imul
int3
fnclex
aad
push
xchg
aaa
pop
xchg
call
jne
jge
sbb
imul
(bad)
mov
xchg
out
jmp
fdiv
mov
inc
lods
add
pop
out
jae
jnp
sti
dec
xor
xor
stos
dec
jmp
in
cmps
sbb
xor
fwait
sub
pop
adc
sub
pop
pop
dec
xchg
and
mul
outs
loop
xchg
mov
adc
out
stc
in
jl
xchg
imul
push
mov
ficom
aas
ds
xor
and
fist
mov
inc
lods
stos
xor
loope
adc
pop
add
mov
fdivr
lods
idiv
inc
adc
fidivr
pop
mov
cmp
jbe
(bad)
mov
dec
mov
call
cwde
mov
out
xor
aas
ins
nop
neg
mov
or
or
push
cmp
inc
xchg
adc
rcr
and
int3
je
add
aaa
cmp
xor
test
mov
and
mov
lock
ret
or
pop
aam
or
or
and
div
lock
icebp
mov
int
aam
sub
cwde
sahf
inc
or
adc
pop
push
je
int3
and
pop
fdivp
cmp
cld
xor
add
movs
int3
jo
mov
popf
fdivr
fbstp
mov
lock
jmp
or
dec
or
ret
adc
sub
ds
cmp
mov
add
ins
xor
dec
pop
nop
pop
jbe
test
ja
movs
or
mov
mov
xor
xchg
sbb
out
sbb
leave
pop
xor
ret
cmc
cmc
dec
push
lock
iret
xchg
dec
cmp
imul
jo
aaa
inc
jne
adc
imul
es
push
and
gs
jp
mov
add
fwait
xchg
cld
jp
nop
loopne
hlt
sahf
addr16
and
sbb
cmp
fnstsw
lea
add
push
or
inc
aad
xor
int3
test
xorps
sub
add
fisttp
mov
imul
pop
inc
push
hlt
inc
fs
mov
leave
mov
pop
pop
sahf
adc
aaa
not
cmp
int
fs
xor
out
loopne
icebp
pop
add
push
inc
push
hlt
push
retf
inc
xchg
mov
adc
popa
jno
or
and
hlt
sbb
jmp
fadd
aas
and
adc
(bad)
and
and
xchg
sar
push
stos
dec
(bad)
push
push
add
push
in
jp
(bad)
int
in
or
sbb
iret
in
xor
inc
push
movs
fnstenv
(bad)
adc
xchg
aas
xlat
xchg
adc
jle
arpl
in
loop
sbb
or
cmp
fcomp
sub
add
xor
jno
pop
add
push
pop
adc
xchg
pop
pop
in
sub
add
repz
jecxz
aad
adc
clc
jb
mov
xchg
or
inc
sbb
sti
or
push
add
dec
popa
jo
stc
outs
push
pop
call
mov
jbe
(bad)
dec
mov
out
pop
cwde
js
xor
mov
lahf
lock
jle
jae
das
lods
dec
add
cdq
pusha
dec
daa
adc
mov
fwait
push
fsubp
push
push
jp
xor
mov
sbb
sti
and
mov
sbb
xor
bound
fmulp
mov
sub
push
pop
dec
mov
test
mov
pop
je
xchg
inc
xor
ret
test
psubw
lock
add
mov
sbb
arpl
into
into
retf
cmps
inc
push
ror
cmp
fistp
call
sti
scas
sub
lods
inc
(bad)
aas
inc
adc
jbe
int
ficomp
test
(bad)
cmp
mov
adc
jne
pop
add
shr
loope
or
shr
daa
adc
mov
xor
mov
jo
inc
jb
idiv
add
xchg
arpl
lods
jo
movs
sahf
push
fistp
add
(bad)
dec
ins
aaa
mov
aaa
adc
out
cmp
outs
mov
sahf
sub
loope
in
or
lea
push
adc
mov
iret
fsubr
mov
iret
js
sbb
(bad)
test
jne
(bad)
xchg
or
outs
aaa
outs
fidiv
or
mov
out
loopne
fst
mov
aad
mov
cmp
aaa
sbb
icebp
jecxz
mov
shr
mov
movs
add
ret
jle
push
scas
mov
xchg
push
adc
in
fidivr
inc
je
jno
pop
jmp
push
fs
enter
sub
into
lahf
mov
cs
movs
fbstp
or
cld
sub
test
or
and
sbb
mov
sbb
and
dec
arpl
rol
xor
out
inc
lock
hlt
push
mov
add
in
frstor
in
enter
add
pop
adc
cmp
add
lds
addr16
add
cmc
fmul
jae
xchg
mov
mov
dec
pushf
jo
mov
popa
push
xchg
sahf
cmp
push
ret
test
or
ins
adc
ins
jns
lahf
adc
mov
fdivr
mov
lock
cli
cli
and
test
loop
sbb
cmp
xchg
pop
ss
and
xchg
outs
or
xchg
adc
clc
(bad)
mov
leave
(bad)
sub
adc
outs
gs
jle
out
rol
pop
fisttp
mov
jb
pop
sbb
sbb
and
cmp
push
mov
in
add
out
test
or
jg
mov
mov
xchg
mov
cld
fstp
pop
out
pop
sub
adc
xchg
(bad)
aaa
jmp
scas
push
call
shr
out
in
stc
jbe
stos
stos
movs
cld
pusha
mov
jnp
mov
inc
push
pushf
add
cmps
inc
inc
add
adc
cli
jge
xor
and
jns
xchg
xchg
stos
imul
into
mov
fadd
xchg
loopne
push
xchg
mov
jne
adc
test
mov
jl
mov
push
leave
adc
sub
jne
pushf
adc
sbb
movs
movs
xchg
or
(bad)
mov
cmps
and
hlt
cli
hlt
movs
xor
shl
sub
pop
inc
mov
dec
(bad)
mov
dec
jns
ss
xlat
mov
(bad)
out
fld
jp
rol
or
and
in
jp
popa
jae
dec
ins
icebp
je
arpl
popf
loope
loopne
jno
lods
and
in
jl
fnstenv
inc
sub
mov
(bad)
pusha
inc
xchg
js
test
sub
xor
cmp
xchg
add
xor
sub
mov
ja
push
ds
add
scas
sub
push
ss
mov
cld
lock
inc
add
inc
xor
pushf
repnz
jecxz
gs
jno
test
call
push
shl
aam
or
les
shl
jge
jmp
jge
repz
push
ret
jmp
add
nop
sahf
mov
or
mov
out
or
mov
xchg
add
imul
pop
mov
sti
push
or
cmp
mov
gs
mov
xchg
sbb
sar
ficomp
pop
inc
xchg
adc
adc
xor
imul
out
out
loope
imul
in
js
ret
mov
add
je
mov
inc
les
pop
jbe
in
scas
or
jae
mov
pushf
or
dec
push
inc
sbb
jecxz
icebp
pminsw
mov
and
iret
push
cld
daa
jno
and
sbb
shr
dec
loope
sub
adc
adc
sub
in
ret
pop
pop
cmp
jmp
pop
sub
ins
sub
or
ins
ins
mov
or
hlt
or
clc
and
mov
dec
push
cli
icebp
out
sub
dec
std
sub
inc
mul
imul
ja
mov
fwait
cmp
in
rcl
or
dec
dec
fdiv
lods
xchg
sub
and
mov
into
popa
(bad)
mov
ror
test
inc
loop
clc
loopne
(bad)
(bad)
sbb
das
adc
xor
mov
push
xchg
push
jns
dec
xlat
sbb
lock
mov
out
aaa
xor
hlt
frstor
call
sti
imul
sbb
xchg
ret
add
enter
xchg
in
lahf
mov
push
shl
jnp
enter
stos
and
or
and
fcmovnbe
das
dec
add
push
enter
sub
out
in
adc
push
imul
sub
out
call
out
out
add
movs
add
or
add
aaa
cli
cmp
arpl
cmp
add
pop
adc
inc
lock
push
out
add
popa
das
and
pop
sbb
stc
xchg
and
call
ror
sbb
imul
dec
xor
mov
iret
xor
jmp
jne
lds
push
push
push
out
into
mov
call
fwait
pushf
in
jecxz
fmul
fsubr
nop
test
jle
scas
cmps
jno
sub
xchg
jo
adc
cmp
dec
cdq
adc
adc
push
leave
das
xor
push
lahf
dec
or
mov
cmp
mov
ret
aaa
iret
xchg
add
shl
pushf
clc
ins
pop
loopne
into
mov
stc
nop
inc
pushf
sbb
dec
loop
lock
scas
dec
imul
outs
mov
cmps
push
in
call
xchg
push
not
jae
or
fdiv
lds
cmp
sub
cmp
call
sahf
mov
sub
lock
jp
pop
pop
ja
xchg
scas
data16
movs
cli
push
sub
aam
jnp
cmp
mov
mov
xchg
vminss
push
test
(bad)
aaa
int
retf
out
pop
(bad)
mov
add
lods
mov
(bad)
pop
daa
xor
add
out
loopne
mov
inc
test
xchg
cmp
jg
pushf
mov
cmp
ficomp
pop
and
test
pop
jae
xor
mov
movs
cld
repz
jns
xchg
dec
xchg
jle
or
mov
(bad)
enter
cs
fdivr
mov
mov
and
fiadd
fstp
call
or
(bad)
xor
ret
popf
bound
sub
or
or
dec
scas
inc
repnz
mov
jbe
popa
and
jmp
push
loope
xor
sbb
inc
(bad)
xchg
dec
test
cmp
das
pop
pop
add
(bad)
les
fstp
sbb
in
cmc
mov
push
xor
adc
jmp
mov
fcmovnb
xor
(bad)
mov
(bad)
test
jmp
mov
xor
test
fcomip
xchg
ss
neg
cs
adc
(bad)
rcl
shr
das
dec
mov
sub
dec
mov
or
das
aas
adc
dec
lds
sub
cmp
push
or
std
add
xor
mov
arpl
inc
retf
cmc
jno
cmc
test
mov
gs
dec
mov
lods
pop
mov
shr
cmp
iret
sbb
bound
mov
add
cmp
mov
push
mov
mov
add
mov
aad
enter
retf
push
pop
mov
xchg
push
imul
imul
push
add
sbb
popf
mov
dec
outs
sete
push
aam
push
in
mov
inc
jle
pop
ins
sahf
add
frstor
mov
mov
jbe
pop
push
dec
and
sub
das
mov
sub
fild
test
sub
loop
lea
mov
xor
aaa
pop
pop
push
push
mov
cdq
cwde
jns
sar
sub
jmp
cli
mov
enter
cdq
inc
adc
(bad)
scas
pop
mov
mov
xchg
mov
addr16
push
cli
xlat
jno
inc
xchg
loopne
ret
adc
push
popf
add
nop
mov
gs
mov
test
ds
cmc
int3
loope
xlat
sbb
aas
(bad)
int3
add
int
outs
or
dec
clc
outs
pop
ffree
popf
fidiv
add
push
ss
push
jnp
or
movs
sub
xchg
add
fucomp
int
push
adc
jmp
inc
xchg
enter
sub
push
mov
popf
and
xchg
push
(bad)
cmp
bswap
and
pop
adc
in
nop
scas
sub
shl
sahf
mov
rcl
mov
push
sub
mov
pop
cmp
retf
in
fcomi
test
lea
and
sbb
pop
rcl
cmp
jge
int3
push
data16
bound
push
lock
(bad)
imul
shl
pop
mov
repnz
jae
not
mov
fcomp
sbb
inc
mov
or
call
xchg
or
fs
popa
inc
out
imul
int3
cld
mov
jae
es
sysret
sub
inc
cmp
aad
scas
cmp
jle
mov
movs
pop
or
sub
cmps
ret
repnz
clc
jo
adc
iret
sti
in
hlt
lods
push
leave
jno
ss
jne
mov
add
xchg
cwde
jl
das
xchg
xlat
or
xor
jg
ret
and
cmp
pop
(bad)
cmp
mov
ja
mov
es
cmp
jbe
cld
aaa
lock
adc
push
adc
cs
mov
test
fst
neg
stos
aas
loop
(bad)
or
lods
in
pop
(bad)
jmp
mov
ds
jno
jge
mov
ins
or
mov
movs
add
adc
in
bound
jecxz
imul
out
jl
iret
dec
std
jp
lods
xor
lea
frstor
popf
pop
aad
es
bound
mov
hlt
inc
sub
jmp
push
mov
xchg
add
out
cmc
push
iret
lods
mov
lock
bnd
or
mov
ja
stc
int3
imul
ins
cmps
jmp
or
shr
or
imul
dec
mov
mov
sbb
or
dec
xchg
in
push
push
shr
(bad)
retf
pusha
or
pop
cmps
push
lds
cmp
shl
pop
punpckhbw
adc
sub
sub
xchg
cmps
inc
sbb
inc
stos
xchg
in
das
(bad)
fidiv
fnstenv
cmp
fcom
ret
sbb
js
pop
dec
fbstp
repnz
movs
mov
push
lds
repz
div
jmp
out
cmp
lahf
inc
addr16
inc
enter
xchg
mov
mov
fdiv
push
pop
out
cmps
push
ins
popf
sub
or
(bad)
pop
push
je
movs
in
(bad)
mov
cmc
int3
and
jl
xchg
mov
ja
(bad)
jnp
and
sbb
int
int
dec
mov
ins
rcl
mov
sub
sbb
fwait
(bad)
loopne
call
in
or
add
push
pop
mov
into
test
fcom
cmp
in
jge
pop
jle
mov
or
out
xchg
jno
sbb
out
dec
clc
or
mov
adc
pushf
xor
fistp
mov
pushf
xchg
ins
pop
in
(bad)
addr16
mov
stc
mov
xor
or
add
mov
iret
call
(bad)
pop
sub
sub
icebp
ret
das
in
mov
loopne
dec
sub
jbe
lods
ror
and
cmp
pushaw
test
fwait
jge
jae
iret
jne
and
add
cmp
cmps
repz
daa
test
or
mov
(bad)
stos
pop
sti
xor
movs
addr16
sub
dec
xor
dec
sub
lds
out
ins
cli
inc
mov
sbb
add
shl
push
jno
or
pop
repnz
jg
(bad)
cmps
sbb
ss
adc
jb
jae
mov
ror
into
ret
ror
and
pop
(bad)
(bad)
out
mov
push
mov
sub
je
gs
(bad)
mov
pop
sub
jecxz
fild
push
ja
in
push
mov
fmul
test
dec
sbb
es
mov
cli
cmp
hlt
pop
mov
sub
or
lods
xor
arpl
(bad)
js
js
shl
pop
xchg
arpl
loope
ret
mov
mov
adc
sub
add
scas
xor
dec
nop
jo
adc
xor
and
sub
lock
mov
popf
xchg
ret
and
(bad)
gs
fimul
push
jae
add
push
jbe
test
mov
repnz
mov
aad
jb
push
repz
jg
sbb
aas
dec
inc
ss
cli
fwait
and
cmc
cmps
outs
dec
push
out
retf
sti
adc
hlt
mov
leave
ret
pop
jmp
(bad)
xor
xlat
daa
jp
mov
sahf
inc
out
shr
rol
dec
xchg
push
mul
mov
sbb
fs
mov
shl
fdiv
adc
lds
mov
sti
xchg
and
sbb
xor
ficom
int
dec
or
fild
and
mov
int3
push
or
mov
and
scas
scas
pop
stc
pop
iret
pop
retf
dec
adc
ret
and
ds
cmc
and
bound
mov
pop
dec
or
test
xchg
or
sub
call
inc
push
mov
js
mov
mov
add
and
mov
push
fdivr
lds
call
mov
pop
or
popa
frstor
loopne
scas
stos
push
ins
shr
enter
out
mov
fstp
inc
(bad)
das
movs
sub
pop
ss
nop
push
sbb
add
lahf
push
(bad)
cli
icebp
(bad)
mov
push
dec
shl
add
loop
icebp
icebp
mov
jns
pop
jmp
fs
in
push
dec
xor
dec
adc
ret
push
sub
inc
push
(bad)
sub
aas
inc
ins
dec
jp
shl
mov
ins
enter
sub
xlat
sbb
and
add
xchg
js
pop
sti
imul
fmul
jne
in
sti
(bad)
stc
inc
rol
mov
adc
jo
nop
sbb
sbb
jg
mov
repz
mov
pop
push
das
in
mov
cmps
mov
(bad)
out
sbb
pop
sbb
pop
push
outs
xor
retf
addr16
(bad)
push
call
push
leave
icebp
rcl
mov
jecxz
jno
push
inc
rol
out
call
xor
ja
pop
jbe
xchg
ret
jno
movsx
dec
push
ret
leave
std
jmp
cdq
loope
adc
cmp
xchg
jp
inc
sbb
cmps
or
inc
(bad)
add
dec
xor
adc
imul
in
sub
fisttp
retf
xchg
jno
repz
sub
lods
fist
sbb
je
cmp
mov
stos
jl
test
inc
(bad)
std
retf
push
bound
inc
sti
push
sbb
loopne
int3
mov
xlat
fiadd
mov
idiv
adc
cmp
test
or
xchg
push
out
ret
inc
mov
fwait
inc
movs
sbb
jnp
dec
inc
shr
popf
in
xchg
loope
cmp
into
xor
push
movs
movs
aam
xor
mov
xchg
jl
jg
outs
jbe
cmps
je
jo
je
push
jne
ins
call
add
mov
out
xor
inc
js
cmp
xchg
pop
xlat
inc
jmp
push
sbb
mov
rcl
ins
ret
arpl
mov
inc
jb
aaa
daa
jb
jp
mov
fld
mov
les
mov
push
sbb
in
dec
xchg
jmp
rcl
cmp
div
add
js
sbb
ds
adc
fsubrp
cli
add
pop
fwait
imul
xor
dec
mov
jb
pop
cmps
aad
nop
cwde
or
add
cmc
loope
jbe
push
xlat
cmps
and
cmp
inc
and
and
sbb
push
vmread
push
mov
jmp
and
xchg
fisub
nop
and
cmp
mov
loop
pop
and
ins
cmp
adc
mov
jp
and
into
xor
and
cmp
repz
ret
loopne
int3
and
ds
and
imul
fimul
out
pop
cmp
pop
mov
lock
sub
inc
mov
ja
mov
lods
je
inc
push
mov
and
push
test
iret
cmc
mov
out
idiv
shr
xor
lahf
cmc
(bad)
stos
dec
mov
pop
mov
sbb
shl
xor
ret
leave
(bad)
xchg
xchg
pop
sbb
xor
lock
mov
push
cmp
repnz
sub
or
sbb
mov
xchg
adc
imul
add
jns
push
into
sub
add
pop
repnz
enter
test
push
lahf
push
jo
ret
or
cli
mov
mov
scas
mov
shl
mov
mov
into
add
jge
imul
adc
ret
pop
cmp
jae
jp
(bad)
push
jmp
ficomp
in
sar
xchg
into
inc
jno
inc
cmps
mov
aaa
pop
mov
fisttp
pop
shr
dec
xor
inc
loop
ret
enter
pop
mov
cdq
pop
sbb
imul
or
mul
iret
pop
mov
aas
xchg
push
retf
cmp
jl
iret
dec
in
xor
loopne
aas
shl
push
mov
push
ficomp
aam
retf
sar
rcl
hlt
loop
xchg
sbb
xlat
sbb
lods
xchg
xchg
(bad)
(bad)
dec
fcomp
aam
in
jg
(bad)
in
dec
push
add
scas
inc
mov
ins
push
lahf
bnd
and
mov
repnz
mov
push
retf
cmp
es
mov
ja
mov
(bad)
(bad)
mov
test
pop
jb
jnp
mov
push
xor
ins
push
mov
out
stc
jno
xchg
loope
push
jle
repz
icebp
stc
sub
ret
enter
mov
mov
cmp
inc
adc
mov
cmp
push
scas
es
into
call
das
mov
ret
stc
xor
xchg
(bad)
into
dec
stos
jmp
sbb
pop
ds
xor
int
and
(bad)
lods
xchg
retf
sub
fdivp
aas
fcom
mov
inc
jge
jo
mov
lds
aas
retf
in
jl
pop
bound
ret
jb
(bad)
imul
fsub
loopne
jl
xor
test
mov
jo
or
pushf
pop
mov
cmps
imul
icebp
or
cmp
mov
inc
movs
out
icebp
cmp
cld
jb
imul
and
push
cmp
aad
call
add
lds
aad
sbb
adc
inc
xor
sbb
sti
fist
lahf
call
addr16
sub
xchg
test
hlt
in
popf
cmc
in
and
cmp
push
xchg
es
jge
aaa
sahf
jl
in
test
adc
std
xor
out
out
js
pop
dec
cmps
add
mov
dec
jecxz
mov
mov
jne
sub
cmp
jns
cmp
cmp
mov
(bad)
sbb
pop
cmps
clc
dec
fld
push
icebp
idiv
gs
lock
pop
das
call
pop
sar
dec
push
inc
push
ret
dec
and
sub
and
dec
out
adc
stos
and
add
xchg
inc
int3
and
xor
cmp
adc
mov
ficom
iret
xor
jno
jge
mov
pop
inc
out
mov
aad
lock
jae
sti
inc
mov
jae
fsub
dec
adc
repnz
inc
call
mov
sub
push
int3
or
pop
cmp
and
jne
inc
jmp
clc
cmp
jmp
test
or
stc
mov
add
dec
pop
jnp
xor
and
dec
cwde
popf
and
lahf
sbb
rol
sbb
neg
pop
cmp
adc
in
and
adc
int3
pop
sub
daa
jecxz
jge
imul
sub
jmp
addr16
out
push
push
adc
inc
rcl
mov
adc
jo
mov
mov
fistp
push
rcr
enter
das
call
mov
mov
mov
call
stc
div
sub
pop
ins
pushf
pop
mov
hlt
jmp
movs
jge
lods
loop
mov
cli
push
xor
mov
push
sbb
xchg
adc
cs
fwait
sbb
js
push
dec
mov
nop
mov
aad
in
xor
mov
aam
pop
mov
sbb
xchg
fcmovbe
jmp
inc
push
pop
mov
gs
mov
dec
imul
and
dec
push
jp
inc
(bad)
rol
aad
dec
call
sub
outs
int
sub
push
mov
int
jmp
test
inc
adc
or
mov
or
imul
(bad)
sub
mov
in
mov
and
cli
jno
leave
inc
pop
adc
movs
cld
add
add
xchg
in
push
xchg
call
mov
(bad)
mov
jns
out
stc
das
les
daa
pop
add
dec
sub
fucomi
popa
xchg
arpl
push
push
out
mov
aad
out
cwde
push
enter
cld
leave
inc
fs
mov
sub
aad
mov
xor
or
enter
or
dec
sahf
xor
and
daa
cmp
aas
push
sti
in
jne
pop
repz
mov
into
ds
jnp
push
adc
call
retf
mov
sub
mov
or
cmc
cdq
xor
ficomp
(bad)
lods
je
out
push
xchg
loope
imul
or
jae
int3
pop
xor
fst
sbb
fwait
cmp
retf
push
test
ret
add
pop
outs
fmul
or
pop
cli
(bad)
clc
in
inc
push
add
mov
idiv
sbb
jge
fwait
sbb
fild
aaa
(bad)
mov
adc
ror
xchg
jle
jo
inc
mov
pop
dec
push
mov
jnp
sub
in
mov
sub
mov
jge
push
xor
inc
jne
nop
gs
in
(bad)
dec
dec
push
mov
push
hlt
pusha
mov
pop
mov
sahf
(bad)
iret
fs
stos
(bad)
xchg
out
push
dec
pusha
shl
aam
pusha
or
sub
dec
cdq
sar
or
add
add
retf
popa
pop
enter
(bad)
mul
or
call
lock
sbb
test
(bad)
mov
test
or
shr
push
mov
loop
jg
cmps
lahf
mov
sar
nop
retf
mov
je
xor
(bad)
dec
outs
pop
movs
loop
retf
out
push
xor
ja
(bad)
xor
mov
popa
add
movs
jp
xchg
outs
xor
xchg
mov
ins
cmp
push
(bad)
into
fsub
hlt
int
shl
loop
inc
mov
jmp
mov
hlt
call
mov
pop
pop
fidiv
sub
fisttp
push
jb
sahf
sub
cmp
in
pop
xlat
cld
imul
sub
mov
daa
sub
rcl
mov
jle
push
inc
fwait
cwde
stos
es
jno
scas
adc
xlat
mov
dec
arpl
pusha
outs
cmps
mov
rcr
inc
cmp
pop
fs
dec
mov
dec
mov
add
sbb
cdq
jb
sub
cmp
dec
inc
or
fist
xchg
ins
dec
lahf
out
cs
icebp
test
aas
je
loop
rep
repz
and
shl
hlt
leave
test
fmul
js
adc
xor
inc
xor
je
xchg
call
mov
sbb
movs
inc
in
je
ret
fs
pop
and
das
aaa
xchg
mov
sbb
lods
repnz
add
or
stos
mov
in
enter
cmc
and
(bad)
mov
xchg
jb
sbb
inc
xchg
std
jnp
mov
mov
pop
xchg
sub
or
lock
xor
icebp
add
jo
enter
push
and
scas
jbe
or
jg
rol
and
sbb
push
sbb
loope
adc
or
adc
add
es
sub
dec
or
scas
ins
mov
ffreep
fdivr
fild
pop
jecxz
mov
cmc
ja
daa
push
jnp
fcomp
adc
mov
or
fwait
call
mov
cmps
imul
scas
inc
lock
(bad)
les
xchg
int3
cli
xchg
jmp
pusha
jle
jb
sbb
inc
mov
push
adc
dec
inc
push
mov
add
pop
push
in
sub
(bad)
lods
adc
fbstp
shl
int3
push
sbb
xchg
enter
scas
fs
scas
push
and
loopne
xchg
ja
push
pop
push
ins
lock
aas
add
dec
adc
cmps
mov
push
push
cmp
ds
xor
mov
std
dec
mov
enter
jnp
(bad)
mov
dec
hlt
pop
xchg
gs
or
(bad)
pushf
jb
xor
nop
jno
add
dec
imul
stos
jbe
outs
jne
ficomp
cmp
sub
fistp
loop
dec
mov
cdq
repnz
jb
scas
jle
xchg
out
in
ja
or
test
mov
cld
push
sub
repnz
cld
ficom
mov
push
mov
cdq
out
sbb
(bad)
cmp
(bad)
rcr
xor
inc
cmc
outs
cmps
jg
nop
mov
jns
pusha
xor
cmps
imul
pusha
(bad)
cmp
sub
outs
sbb
xchg
mov
out
das
fdivr
ja
jb
add
push
jno
push
cs
push
mov
das
hlt
add
push
jge
fadd
cmc
dec
popa
dec
pushf
dec
xchg
dec
jbe
fild
jae
sbb
inc
cwde
daa
fild
cmp
cmps
test
fstp
push
aam
sbb
jne
mov
and
loop
in
ins
jae
mov
inc
ins
ds
mov
scas
dec
das
int3
inc
bound
xchg
ret
mov
repz
outs
(bad)
leave
bound
sub
or
xor
mov
cmp
mov
es
fdiv
inc
(bad)
imul
xor
stc
pop
lahf
sub
fisttp
loope
dec
(bad)
and
mov
inc
(bad)
and
inc
jp
or
mov
add
outs
std
cwde
sub
pop
idiv
dec
(bad)
mov
xor
sub
pushf
mov
call
ret
(bad)
sbb
and
pop
ja
push
mov
not
out
fs
cmp
neg
mov
sti
je
jb
add
cs
mov
in
mov
mov
push
sbb
mov
int
push
int3
jecxz
mov
sub
xchg
mov
sti
push
lahf
mov
sub
in
jno
icebp
xchg
sbb
pop
out
push
fadd
dec
push
push
push
sub
inc
push
pop
cmp
and
out
sub
xor
stos
pop
push
rep
call
gs
mov
mov
jmp
and
in
imul
sbb
mov
lods
call
aas
(bad)
ss
scas
icebp
sbb
fstp
inc
fmul
fdivr
adc
push
pop
retf
push
mov
add
frstor
mov
mov
pop
jnp
cdq
mov
lock
(bad)
out
cmps
sub
jl
mov
dec
and
mov
repz
jmp
daa
lahf
mov
retf
push
ins
push
add
add
mov
ss
dec
dec
stos
inc
and
sub
and
push
fwait
pop
sbb
dec
push
or
inc
inc
jns
xor
adc
sbb
test
sub
(bad)
sub
lock
jmp
cmp
sub
enter
daa
scas
adc
mov
jl
pop
jb
fimul
inc
xchg
jno
sub
mov
fsubr
xchg
cmp
pop
popa
in
aas
loopne
fcomp
push
mov
push
adc
mov
popf
cmp
in
xor
cmp
lods
call
pop
(bad)
mov
inc
arpl
jmp
mov
xchg
int3
jle
not
pop
adc
and
stc
call
imul
aaa
dec
adc
stc
outs
aaa
aas
cmps
(bad)
pop
imul
jmp
dec
jge
ja
mov
rol
pop
ret
push
cmp
cld
call
pushf
jb
dec
(bad)
or
clc
inc
mov
in
out
cmps
cmp
ja
jbe
repnz
mov
push
lods
js
adc
push
clc
jge
cmp
(bad)
mov
lods
xchg
xor
sub
add
out
inc
test
scas
mov
sub
xchg
or
jmp
inc
mov
test
test
and
fsub
sub
add
nop
inc
push
test
cs
loope
sbb
nop
(bad)
xchg
jmp
movs
xchg
cwde
jbe
pop
sahf
push
sar
xchg
cmp
jns
mov
es
cld
adc
add
mov
lds
cmps
sbb
sbb
gs
jle
sub
inc
aam
cld
xor
pop
cwde
cmp
in
xchg
mov
jbe
dec
fstp
mov
sub
pop
sbb
push
adc
dec
jmp
cmp
mov
stos
outs
sahf
sbb
jge
int3
dec
shr
js
push
ins
popa
mov
push
imul
dec
test
iret
push
clc
shr
xor
jge
jle
mov
pop
outs
xchg
outs
loop
sub
pop
inc
sbb
jmp
mov
fs
jns
fwait
adc
popf
sbb
int
sub
pop
lds
mov
ja
xor
fisub
mov
in
jge
dec
icebp
into
xchg
sbb
push
and
jmp
ds
daa
mov
stos
out
jmp
inc
int
adc
inc
dec
imul
adc
push
rcl
stc
and
add
inc
cmp
push
jbe
ss
jp
mov
sahf
sub
mov
xchg
sti
mov
popf
imul
inc
pop
mov
mov
sub
and
sub
cmps
fcmovnb
int
pop
(bad)
fistp
bound
repnz
xor
push
add
xchg
jl
push
push
std
stos
xchg
rcl
add
mov
inc
adc
mov
in
xchg
movs
aam
ins
xor
inc
je
mov
mov
movzx
jle
jb
test
jnp
push
and
repnz
clc
xchg
out
cmp
sbb
out
mov
enter
mov
mov
pop
cmp
cmp
mov
scas
jns
dec
sbb
mov
jo
nop
push
fcmovne
cs
out
cmp
stos
jge
jbe
nop
repnz
or
mov
xchg
jo
cmove
xor
jecxz
add
mov
or
stos
dec
outs
mov
push
outs
mov
dec
jns
xor
test
add
add
xor
add
mov
dec
mov
jbe
jmp
jns
mov
push
ffree
fcom
pop
mov
xor
int3
aam
inc
xchg
cmps
mov
mov
inc
sbb
sbb
cs
call
mov
mov
sub
nop
adc
es
fisttp
jmp
hlt
jne
inc
pop
leave
lods
push
push
cli
fs
xchg
or
sub
sub
in
push
add
jle
lods
les
ins
(bad)
das
pop
cmp
icebp
xchg
lea
lods
outs
mov
inc
pop
sbb
cmps
inc
mov
pusha
outs
call
xor
add
add
dec
ins
fs
or
push
xchg
sub
inc
adc
mov
push
lods
inc
mov
adc
lods
aad
pop
cs
mov
mov
ror
es
les
sbb
retf
stos
into
inc
cmps
fwait
mov
cmp
jmp
inc
pusha
(bad)
lock
pop
push
in
inc
sub
pop
adc
dec
scas
sbb
add
dec
mov
lea
jbe
imul
int
popa
loopne
(bad)
sbb
pusha
mov
fadd
pop
inc
pop
imul
popa
shl
mov
mov
mov
out
shr
jp
mov
in
retf
mov
(bad)
out
into
or
push
jge
push
adc
addr16
in
jg
js
jp
leave
and
jo
mov
mov
inc
add
adc
cmc
mov
fistp
mov
cmp
sbb
imul
sub
ret
outs
push
loope
(bad)
push
mov
in
daa
shl
push
in
div
inc
sbb
ins
jno
push
dec
sbb
aam
xchg
mov
or
cmc
and
or
fcmovb
popa
jbe
xor
ja
push
and
or
into
fisub
adc
vmovaps
call
or
dec
ret
(bad)
xchg
push
push
xchg
pop
push
inc
mov
out
mov
clc
fld
xchg
xchg
test
in
fcomp
cmp
dec
dec
jl
sub
add
or
dec
cmps
into
dec
mov
push
lock
pop
int3
pop
or
in
push
sbb
clc
imul
out
ins
cmp
mov
pop
push
add
mov
add
inc
adc
fxch
mov
mov
stos
xchg
stos
ja
mov
pop
or
aam
daa
lahf
stos
add
cmp
xlat
call
hlt
pop
push
aaa
pop
leave
jmp
or
mov
inc
mov
or
dec
movs
xor
jae
xor
sub
sbb
repz
push
push
dec
push
sbb
pop
inc
add
out
mov
aad
ret
(bad)
sub
push
ds
fstp
jge
pop
push
mov
pop
xor
inc
push
add
cmp
(bad)
addr16
xor
jecxz
(bad)
imul
outs
lea
and
test
loopne
mov
aaa
jle
enter
mov
test
out
hlt
jg
mov
scas
sbb
sbb
adc
lahf
(bad)
cmp
mov
aas
xchg
test
je
mov
jmp
push
cmp
or
mov
inc
xchg
push
fsubr
addr16
xor
xor
call
hlt
cmp
fsubr
jg
and
sub
imul
test
fwait
and
xchg
xchg
(bad)
cs
je
repnz
jge
shr
mov
mov
sub
cmp
add
iret
dec
jl
adc
sahf
rcl
mov
pop
xchg
sbb
xchg
imul
sub
mov
dec
cli
cdq
jp
aas
push
fstp
cmc
enter
mov
call
and
leave
movs
inc
sbb
leave
sti
clc
ret
sub
jno
mov
outs
aam
aaa
in
sub
jecxz
dec
(bad)
daa
sti
into
mov
out
or
call
fld
pop
std
fstp
add
fstp
addr16
inc
push
ja
mov
push
jnp
in
movs
clc
ins
mov
retf
test
sbb
or
dec
inc
pop
mov
fwait
sbb
mov
es
cs
test
outs
and
dec
jp
add
pop
cmp
sbb
mov
inc
adc
add
ja
in
and
ins
imul
dec
mov
ins
test
js
jns
xlat
sub
iret
mov
adc
mov
cmp
jo
inc
into
sub
cmp
cmp
xchg
ret
sbb
xchg
dec
add
outs
aas
push
fadd
call
sub
mov
mov
sub
lods
sub
jae
adc
sbb
rol
xchg
xchg
xor
pop
rol
mov
inc
jl
add
in
fbstp
outs
imul
rcr
or
or
jbe
stos
jmp
xor
xor
idiv
rcr
into
out
mov
shl
mov
inc
xor
xchg
dec
cmp
dec
mov
into
jno
sub
mov
and
mov
rcl
push
xchg
adc
xchg
inc
push
pop
out
scas
lea
cmp
mov
bnd
or
call
rol
(bad)
test
inc
mov
add
fcomp
arpl
pop
cs
mov
cwde
or
mov
push
xchg
jmp
push
div
icebp
cmp
iret
xchg
mov
jecxz
push
cs
jno
shr
dec
(bad)
aam
scas
add
dec
fdiv
mov
sbb
xchg
mov
mov
repz
inc
xlat
aaa
xchg
mov
leave
retf
test
int
adc
mov
ror
sahf
mov
xor
(bad)
xor
test
xchg
or
and
xor
fist
or
adc
xor
jl
(bad)
xor
movs
jl
out
pop
imul
daa
add
data16
jecxz
test
test
mov
and
pushf
sub
sti
scas
cmp
imul
psubsw
xor
fldenv
jmp
loop
mov
push
push
aad
icebp
xchg
xor
mov
pop
mov
shl
push
dec
imul
stc
jg
cmc
ficomp
js
stos
outs
stc
out
sbb
adc
sub
mov
loope
ror
mov
leave
mov
xchg
lahf
push
into
cmp
sub
cmps
cmp
jns
add
lods
rcl
push
sbb
jae
(bad)
mov
in
aam
iret
ss
cs
adc
call
mov
lods
xchg
in
iret
test
adc
test
push
cmps
imul
mov
jp
jmp
pop
out
bound
lods
dec
jb
lea
mov
mov
push
jg
dec
jae
scas
lds
or
je
adc
mov
push
pop
das
and
pop
in
inc
mov
test
xor
adc
repz
fistp
dec
dec
loop
jae
cmps
jmp
adc
mov
adc
sbb
lahf
mov
cmp
cwde
test
rol
mov
mov
ret
jo
sub
in
loope
sub
adc
js
or
cli
mov
lods
pop
out
adc
mov
sbb
rol
xlat
sub
popa
jge
pop
shl
xchg
repnz
mov
jo
and
and
call
fdivrp
lods
dec
mov
cmp
(bad)
cli
mov
ret
hlt
mov
cmp
(bad)
(bad)
(bad)
lock
in
cmp
pop
stc
daa
dec
mov
and
adc
xor
adc
adc
stos
pop
mov
mov
loope
fs
repz
cmp
add
fstp
fs
test
ins
icebp
ins
dec
mov
adc
(bad)
fsubr
push
fwait
sub
(bad)
out
mov
jge
jmp
adc
lahf
adc
ret
(bad)
or
in
push
mov
jne
cmp
scas
xor
adc
cmp
pop
sbb
and
lods
dec
mov
or
mov
pop
inc
test
mov
jnp
pop
mov
and
retf
loop
xchg
sbb
stc
outs
adc
dec
push
xlat
(bad)
mov
xchg
xchg
fstp
movs
test
(bad)
jb
cmp
fisub
cmp
jl
mov
dec
jnp
mov
adc
ds
out
sysret
dec
pushw
and
enter
add
retf
xchg
or
pop
mov
xchg
stos
jge
mov
xor
aas
sub
inc
xor
sub
in
sbb
pop
mov
push
(bad)
int3
shl
es
push
jbe
in
mov
popa
stos
(bad)
sbb
iret
aad
adc
and
xor
les
push
cdq
ja
lods
jge
daa
sbb
sti
std
adc
imul
test
ins
dec
xchg
(bad)
xchg
fstp
es
mov
loopne
xchg
stos
push
mov
mov
test
pop
push
push
stos
cmp
cmp
pushf
loop
dec
in
cmp
dec
std
(bad)
imul
(bad)
xchg
push
and
sub
sbb
jp
xor
inc
inc
dec
dec
dec
or
xor
pop
outs
popf
mov
inc
mov
test
sbb
(bad)
mov
jno
sbb
xor
jl
push
xor
das
cmps
push
iret
ins
xchg
in
xchg
sahf
push
into
pop
jg
push
lea
cmps
xchg
inc
scas
nop
push
leave
sti
mov
(bad)
popf
movs
push
mov
mov
stos
mov
adc
nop
ret
call
ficomp
jg
rol
call
jb
pop
mov
aad
xchg
call
test
mov
es
out
pop
add
or
retf
out
ss
test
scas
rol
fwait
push
xor
(bad)
loopne
adc
rcr
jnp
jle
ins
(bad)
retf
sbb
cmc
xlat
add
inc
push
mov
clc
aaa
(bad)
mov
adc
mov
aam
or
push
jmp
mov
inc
ja
mov
mov
jmp
aad
dec
cmps
movs
stc
ins
test
or
je
rcl
jle
in
cwde
movs
iret
push
cdq
hlt
popf
xlat
xchg
rol
push
call
div
hlt
test
aam
push
pop
js
js
mov
loop
addr16
push
push
inc
adc
adc
pushf
sbb
adc
push
or
dec
ja
adc
xor
sbb
out
mov
xlat
cwde
and
sbb
repnz
pusha
ret
loope
aad
rol
mov
aaa
pop
inc
inc
cwde
imul
sub
loopne
pop
xchg
out
sbb
sub
pop
xor
test
jg
outs
out
push
cwde
and
xor
stc
retf
pop
sub
mov
(bad)
push
nop
scas
movs
(bad)
mov
xor
cmp
push
adc
stos
add
push
in
hlt
mov
xchg
lahf
jmp
jp
imul
cmp
loopne
or
sbb
xchg
mov
stc
xlat
dec
ja
xor
enter
push
(bad)
call
push
ja
push
stos
aaa
mov
adc
mov
and
adc
cmp
sar
jns
enter
xchg
mov
int3
adc
pusha
adc
xor
test
xchg
mov
int
push
cdq
dec
mov
mov
xor
mov
(bad)
jmp
popa
fmul
sub
sbb
jl
in
or
rol
sbb
mov
xchg
fstp
daa
ins
inc
ror
pushw
cwde
sahf
lds
test
dec
clc
inc
clc
sbb
aad
xlat
das
(bad)
shl
add
in
inc
imul
retf
dec
jmp
mov
mov
push
push
push
or
(bad)
movs
dec
out
mov
ins
pop
xchg
movs
js
movs
pop
daa
cmp
pop
pop
xchg
mov
cmp
inc
and
mov
mov
lock
add
not
(bad)
inc
push
bound
add
loope
fdiv
adc
enter
test
stos
bound
push
xchg
cmp
push
inc
movs
jmp
jmp
mov
scas
cmp
mov
retf
mov
jne
xchg
clc
and
mov
mov
das
mov
xchg
mov
scas
push
popa
fmul
adc
pop
(bad)
ret
inc
xchg
sub
cmp
rol
dec
test
(bad)
fisubr
das
and
stos
xchg
addr16
sbb
sub
mov
(bad)
iret
adc
or
pushf
inc
imul
iret
pop
aaa
push
jecxz
lods
add
mov
inc
cmp
pop
outs
xor
mov
mov
inc
call
mov
inc
popf
call
cld
mov
mov
cli
aas
inc
pop
sahf
fisub
push
cmp
addr16
test
jge
push
cmps
fld
xchg
push
jmp
pop
shl
out
and
ds
aam
pop
and
cmp
imul
mov
xor
and
adc
in
aas
jge
jecxz
xor
xor
addr16
and
int3
xchg
cmp
xor
sbb
lods
mov
mov
push
sbb
stos
sub
fsub
sahf
inc
jns
(bad)
mov
test
ss
fcmovbe
jmp
push
pop
pop
test
les
mov
jo
and
cmp
hlt
mov
xchg
push
or
and
push
pop
pop
pop
adc
add
es
ins
mov
adc
movs
popa
addr16
cs
inc
sar
mov
arpl
xchg
sub
outs
mov
movs
mov
ins
sbb
outs
cmc
aad
inc
push
repz
loopne
shl
aaa
inc
repz
xchg
mov
mov
shr
mov
hlt
inc
test
adc
dec
test
sub
shr
aam
fidivr
adc
pop
pushf
out
inc
dec
test
cmc
cdq
mov
pop
sub
aas
dec
dec
xchg
sbb
data16
push
cdq
cmps
loopne
aam
cmc
test
cmps
out
pop
lods
mov
je
repz
jecxz
and
in
push
call
sbb
loope
call
add
cmp
jnp
aaa
shl
call
out
xor
popa
fisubr
cs
inc
loopne
cmp
pop
cmp
scas
mov
dec
xor
cmps
xor
es
mov
lods
pop
mov
sub
dec
les
int3
sub
sub
into
fidivr
jbe
pushf
and
aam
sub
in
xchg
push
les
lds
mov
test
test
or
and
iret
shr
push
jg
stos
test
mov
out
jp
and
pop
stos
xchg
shl
or
xor
sbb
and
cdq
aas
fs
(bad)
mov
dec
out
xor
scas
lea
mov
and
(bad)
jp
xor
mov
jle
and
arpl
fnsave
clc
inc
push
shl
(bad)
push
shr
xchg
lock
add
shr
nop
xor
das
mov
mov
movs
mov
nop
push
xchg
cmps
scas
data16
clc
adc
aad
or
in
sbb
rol
fidivr
enter
(bad)
out
in
cmp
mov
adc
ror
test
dec
loopne
jge
daa
popa
retf
cmp
push
sbb
push
cmovno
movs
aad
xor
jg
dec
dec
gs
icebp
inc
int
push
adc
mov
sbb
scas
jne
scas
dec
test
das
xchg
in
add
jmp
pop
xor
repnz
adc
xchg
daa
outs
clc
pop
inc
stc
mov
jno
mov
cld
sub
or
xchg
push
addr16
xor
jnp
outs
push
mov
jae
and
add
cld
sub
xchg
add
test
or
sub
jmp
adc
adc
mov
fmul
push
pop
imul
pop
xor
das
jns
mov
vpcomuq
iret
xchg
test
into
mov
data16
cdq
mul
sub
or
push
sub
mov
inc
add
fst
psraw
inc
stc
jno
test
push
mov
or
ds
data16
inc
test
pop
cwd
scas
fist
stos
pop
ja
pop
aas
xor
adc
ret
push
sti
mov
jo
inc
lock
jmp
mov
imul
mov
mov
and
mov
in
aad
popf
add
call
enter
das
mov
stos
dec
pop
jns
cli
in
inc
loope
push
xor
enter
xchg
cmps
jne
mov
out
push
or
lods
(bad)
mov
ss
aas
dec
mov
ret
bound
adc
pop
dec
out
mov
pop
inc
mov
xchg
mov
in
int
ret
push
ret
fistp
dec
out
sbb
into
sahf
xchg
dec
inc
or
jb
ja
dec
pop
jnp
mov
adc
xchg
aaa
cmp
ror
pop
in
jmp
arpl
data16
jle
fmul
not
inc
sbb
das
push
popa
jbe
add
sub
cmps
(bad)
shr
mov
pop
pop
leave
test
iret
pop
repnz
pushf
ficomp
and
inc
stos
out
(bad)
pusha
jb
out
add
pop
push
sbb
in
adc
les
jbe
loop
std
jno
std
(bad)
push
mov
add
pop
pop
loop
cmp
inc
add
sub
cmp
sub
dec
sbb
repnz
cs
jmp
daa
movs
push
xchg
out
lods
add
mov
push
jmp
sbb
nop
mov
repz
loopne
pop
into
sub
data16
imul
fsub
aad
mov
repnz
ja
mov
jmp
inc
push
aad
(bad)
cmp
jae
(bad)
iretw
sub
and
push
aam
je
xor
lock
int3
cmc
cmp
xchg
lods
inc
inc
xchg
arpl
hlt
shl
mov
push
mov
adc
pop
adc
mov
push
jge
push
xchg
sub
inc
cs
outs
in
xchg
jmp
mov
pop
fs
iret
aaa
add
jne
retf
hlt
dec
jg
xchg
pop
xchg
aas
push
sbb
das
xchg
js
out
cwde
imul
in
pop
mov
out
mov
jbe
les
dec
adc
pop
retf
jo
jg
fistp
mov
and
pop
hlt
sbb
sbb
cmp
jmp
cmp
inc
(bad)
js
call
in
mov
and
rol
ret
fwait
cs
mov
adc
dec
ss
xor
outs
in
pop
outs
inc
inc
scas
stc
(bad)
or
icebp
and
cmp
dec
adc
cmp
pop
cmp
sub
sbb
pop
mov
mov
dec
mov
arpl
cld
push
sbb
lock
mov
or
add
push
jmp
ret
push
jns
sub
bound
retf
call
mov
cdq
mov
ror
in
cmps
cld
xor
rcr
xor
out
call
sar
dec
stc
pop
xchg
or
sbb
fld
cmps
cmp
push
retf
jp
addr16
aas
fmul
movs
push
add
push
dec
inc
xchg
xor
sbb
adc
in
xchg
ret
sub
add
adc
xchg
jmp
xchg
out
pop
mov
mov
dec
pop
outs
or
and
inc
push
jae
jae
or
jp
sub
inc
fidivr
xchg
xor
es
sub
mov
ins
mov
or
test
(bad)
dec
jmp
mov
jmp
push
mov
dec
cmp
in
pop
or
sahf
jae
ins
jnp
mov
pushf
mov
ss
add
test
or
pushf
in
mov
lock
ror
je
sbb
mov
nop
jbe
mov
and
push
mov
inc
jle
inc
in
daa
outs
jmp
xchg
fimul
mov
jnp
sar
leave
or
mov
fidivr
fsub
xchg
xchg
(bad)
mov
push
sbb
test
push
xchg
add
inc
ret
fsubr
lock
std
das
adc
sub
(bad)
jnp
std
sbb
cwde
xor
test
loopne
xor
ja
add
jns
cmps
popf
ja
int3
xchg
add
push
(bad)
clc
inc
pop
out
pop
inc
pop
cmp
push
cmc
add
in
mov
pop
(bad)
fdiv
add
(bad)
clc
push
add
repz
fcom
call
push
imul
push
fimul
inc
repnz
imul
mov
fiadd
and
push
sbb
popa
cmps
stc
dec
sub
push
dec
and
(bad)
or
add
pusha
push
jo
inc
and
mov
cmps
lea
jl
adc
or
or
mov
dec
imul
inc
mov
cmps
pop
data16
cdq
retf
fdiv
lea
push
jp
inc
out
mov
psubq
movs
sar
popa
aas
in
lock
pop
push
in
cs
mov
int
daa
ret
sub
fdiv
ins
inc
clc
sbb
out
jo
push
jmp
int
mov
ficom
lds
iret
jp
mov
mov
pop
out
fldcw
fs
and
(bad)
mov
je
nop
lds
lahf
hlt
mov
ds
imul
push
jge
call
outs
sar
nop
out
aas
sbb
dec
pop
call
sti
mov
sahf
ret
out
test
dec
mov
in
mov
cmp
cs
(bad)
movs
ins
(bad)
mov
(bad)
fistp
sub
cmp
sub
xor
and
xchg
pushf
or
push
or
in
mov
out
push
cmps
test
mov
jne
sbb
fnstsw
stc
xor
retf
aad
adc
xor
ins
jns
imul
(bad)
call
pop
es
inc
pop
out
lods
xlat
xor
fsub
pop
or
pop
pop
pop
pushf
pop
cdq
sti
add
xchg
loop
sub
mov
(bad)
and
inc
xor
lds
or
pushf
fstp
js
fistp
in
pop
gs
lahf
lods
sbb
inc
jns
inc
xor
push
xor
jo
jae
ins
xor
call
int
xor
shr
(bad)
xor
xchg
fild
fdivr
or
jge
lods
mov
jno
mov
xchg
fist
jmp
fnsave
push
pop
push
jnp
cdq
push
test
out
sbb
test
movs
cmp
lea
imul
xchg
adc
push
xor
push
in
cmp
cmp
sub
mov
mov
(bad)
(bad)
imul
aas
mov
xor
scas
in
test
cmp
sbb
jo
hlt
movs
dec
das
shl
adc
pop
shr
pop
dec
dec
sbb
inc
sub
mov
adc
cmps
lahf
sub
(bad)
int3
mov
idiv
ins
sub
dec
dec
jl
pop
inc
adc
imul
push
mov
push
imul
cmps
sbb
sub
xlat
aad
fisttp
dec
sar
mov
ret
rcr
mov
xchg
mov
ror
test
mov
clc
repz
jge
mov
iret
mov
sahf
cmc
mov
jae
pop
xchg
pop
idiv
dec
call
stc
pop
hlt
pop
pop
and
setno
or
dec
fist
sbb
and
lock
jbe
fldcw
popf
dec
mov
inc
xor
push
fmul
mov
ss
adc
enter
fstp
push
lahf
sbb
jne
mov
mov
ss
not
nop
lods
repz
mov
mov
inc
ins
dec
and
std
into
mov
js
or
jno
mov
jge
xchg
xor
xchg
dec
stos
pop
push
and
je
inc
mov
mov
add
push
cli
idiv
mov
cmp
ret
pextrw
shr
mov
sahf
mov
or
hlt
push
push
mov
fcomi
and
rcr
test
mov
push
push
push
(bad)
ds
jno
inc
fnstenv
shl
cmps
sub
inc
sub
je
pushf
add
and
js
rcl
mov
mov
cmp
jb
out
xchg
cmps
mov
pop
xchg
mov
jle
cmps
loopne
ds
lds
jmp
push
ret
mov
and
fist
test
and
add
lea
(bad)
inc
inc
test
mov
shr
jae
neg
das
xor
push
enter
push
adc
mov
jle
mov
and
xchg
jmp
aam
mov
cmp
movs
mov
dec
mov
sbb
adc
fisub
data16
push
cmp
xor
(bad)
mov
cwde
out
lea
cwde
dec
xor
jle
fld
mov
inc
in
fst
sar
add
ds
repz
out
ror
add
mov
ret
not
pop
fwait
popw
ror
pop
mov
(bad)
push
out
mov
add
and
fistp
enter
fist
icebp
xchg
movs
jae
jp
std
mov
imul
mov
inc
cmp
cs
mov
(bad)
cmps
pop
push
pop
mov
leave
jmp
sub
aas
outs
cmp
test
jo
ins
pop
or
and
popa
push
jnp
imul
cwde
xchg
xor
stos
rcl
pop
bound
add
sub
js
aam
shr
(bad)
call
add
adc
mov
cmp
jnp
stc
test
mov
or
sbb
dec
out
loopne
in
add
mov
push
sar
loop
shl
out
or
and
test
jge
pop
out
push
test
mov
lahf
sbb
xor
test
js
les
mov
shr
pushf
xchg
lods
push
int3
mov
xchg
fsubr
cmps
rcl
xchg
fwait
jmp
add
scas
shl
lea
imul
dec
push
inc
test
int
test
ss
jecxz
fsub
cli
enter
push
int
popa
outs
lahf
in
jge
addr16
fsub
inc
push
stos
pop
test
sbb
shl
fwait
sbb
sbb
mov
fadd
pop
dec
retf
add
mov
hlt
stc
mov
sub
mov
cmp
cmp
cmps
add
retf
and
lods
fiadd
or
lahf
adc
(bad)
sub
push
sbb
xchg
ret
imul
mov
(bad)
push
stc
push
sbb
xchg
cmp
adc
mov
or
xor
sbb
sub
mov
out
loope
mov
cmc
mov
mov
fld
ret
into
xchg
(bad)
sub
(bad)
je
fsub
clc
mov
add
cmp
mov
mov
push
ficom
xchg
(bad)
push
inc
mov
out
lea
mov
adc
cmp
jecxz
mov
and
and
add
loope
repz
push
jmp
and
lea
daa
mov
mov
imul
aaa
es
mov
xor
mov
and
mov
ror
pop
(bad)
mov
test
or
jmp
fsub
enter
inc
and
jnp
int3
or
jns
rcr
mov
push
pop
xchg
pop
push
fistp
adc
sub
push
(bad)
addr16
or
out
add
bound
jo
sub
xor
in
iret
cmc
rcl
pop
lahf
aad
jae
nop
jg
cdq
loope
xchg
or
mov
inc
jmp
ds
adc
sub
shr
and
stc
xor
sti
jnp
sahf
lods
mov
dec
out
mov
test
stos
adc
imul
mov
lahf
sub
mov
ds
cmps
rol
(bad)
push
sub
adc
mov
sub
dec
push
cmp
xchg
push
cmp
add
aaa
int
leave
jle
pusha
mul
into
sub
adc
in
mov
mov
sub
sti
fwait
imul
enter
lds
stos
pop
jmp
xchg
cmps
jmp
and
ret
sar
ret
pushf
push
push
arpl
cld
adc
inc
jo
pushf
mov
rcr
jae
imul
jae
mov
stos
in
or
jge
ror
add
mov
stos
jge
mov
mov
push
mov
dec
adc
repnz
ror
mov
cld
inc
mov
jmp
add
daa
xchg
add
and
xchg
mov
push
call
cs
inc
mov
push
out
xchg
or
pop
outs
jmp
mov
add
mov
jnp
mov
xchg
js
test
dec
cmp
mov
sub
xor
mov
mov
aas
rcr
cmp
mov
xor
mov
ret
test
or
(bad)
out
popf
cwde
stos
setbe
data16
mov
adc
pusha
les
lock
mov
mov
out
cmps
ins
jge
or
std
mov
and
xchg
push
out
sbb
(bad)
call
and
dec
xchg
fistp
cmps
idiv
fisttp
push
dec
ret
cmp
dec
mov
mov
outs
jno
and
and
push
mov
jmp
ss
push
sbb
inc
pop
daa
mov
sub
xor
mov
xor
dec
cmps
call
mov
sub
scas
inc
or
cmp
inc
or
div
add
aam
dec
sbb
and
stos
cmc
fs
das
mov
push
nop
hlt
mov
xor
xchg
loope
jecxz
loopne
jecxz
mov
outs
pushf
rcl
ja
daa
aaa
(bad)
retf
pop
pop
mov
and
sbb
pop
add
ins
cli
call
xchg
or
and
fsubr
clc
nop
scas
pop
jnp
push
xchg
push
int
xchg
retf
jns
cmps
ds
pop
(bad)
loop
inc
not
out
push
push
cmps
xchg
test
inc
push
push
and
xor
or
(bad)
or
dec
mov
xor
(bad)
pusha
push
push
dec
call
and
in
add
cwde
mov
pusha
mov
pop
addr16
rol
dec
(bad)
scas
and
dec
pop
jecxz
mov
hlt
or
out
xchg
cmp
loope
pop
mov
or
ins
dec
push
mov
out
push
jo
xor
mov
into
jl
je
inc
push
clc
pop
or
xor
outs
clc
sub
arpl
sub
sti
test
cmps
mov
mov
cmp
push
ins
repnz
sbb
dec
jmp
adc
push
std
mov
cmp
mov
cmp
addr16
jb
inc
stos
cld
sbb
daa
jl
test
ret
and
push
dec
and
push
jno
int
pop
push
dec
arpl
add
out
adc
daa
fdiv
push
mov
leave
push
in
and
jl
push
add
sub
aaa
popf
add
movs
mov
pop
(bad)
pop
xor
adc
sar
lock
(bad)
mov
fnstcw
mov
adc
in
icebp
(bad)
fsubr
or
or
pushf
iret
je
cli
xchg
mov
jmp
jnp
mov
sub
xlat
lahf
dec
or
pop
sti
stos
pop
mov
mov
dec
xchg
mov
cmp
fdivr
ror
adc
sbb
inc
cs
(bad)
mov
fcom
cmps
cmp
add
or
in
or
dec
add
pop
loopne
(bad)
aam
ss
jecxz
js
call
mov
mov
out
cwde
push
jp
or
bound
xor
test
dec
ss
jb
sub
dec
inc
ins
mov
sub
jp
stos
and
inc
test
jne
jge
outs
into
jo
mov
popf
(bad)
xchg
in
and
sub
and
(bad)
xchg
out
cmp
xchg
std
mov
call
dec
mov
mov
ret
out
ror
imul
in
or
rol
mov
jecxz
xor
xchg
(bad)
fiadd
mov
ret
adc
cmp
xchg
ret
retf
fcmovb
dec
sub
arpl
add
fwait
in
sbb
cs
push
outs
scas
add
je
or
or
mov
movs
mov
ror
stos
add
xor
jle
out
or
sub
mov
or
sbb
cli
xchg
int3
mov
inc
fimul
fistp
dec
stos
data16
vmovapd
cmc
sbb
mov
out
bound
mov
adc
adc
scas
adc
in
mov
dec
loope
pop
mov
std
rol
lods
arpl
fbstp
jmp
inc
mov
add
sbb
stc
lods
call
xor
cmc
jns
xor
push
data16
ja
sub
add
pushf
and
cmp
rcl
sti
sub
adc
or
mov
cmp
push
popa
fst
jmp
and
fild
or
xor
dec
adc
or
test
(bad)
lock
cdq
js
shl
and
sar
mov
mov
inc
mov
sub
xor
popf
dec
shr
fld
mov
cmps
pop
xchg
or
pop
(bad)
movs
aam
add
jae
jne
sbb
jg
fbld
jnp
xchg
sbb
xchg
jnp
jae
xchg
xor
sahf
push
xchg
stos
sbb
mov
loopne
xchg
lds
and
call
nop
rcr
inc
sahf
mov
outs
je
inc
in
out
in
and
out
(bad)
hlt
or
xor
and
stos
xchg
(bad)
jle
xchg
add
hlt
mov
pop
mov
call
inc
movs
sub
(bad)
add
packsswb
aaa
xchg
cmc
push
xor
sbb
ror
dec
mov
push
mov
test
repz
push
dec
sbb
cdq
pop
sbb
lea
adc
and
mov
dec
push
arpl
clc
cmp
sub
fldcw
dec
aas
cmp
inc
scas
loopne
inc
pop
(bad)
mov
bound
rol
shl
sahf
hlt
pop
lods
outs
cwde
loope
xchg
sbb
rcl
cmp
pop
cmp
movs
push
or
and
stos
xchg
jg
adc
xor
aas
xchg
cmp
push
xchg
outs
nop
aas
xor
outs
xchg
outs
jb
ins
or
sahf
sbb
mov
and
sti
cmp
add
je
adc
pop
mov
sub
add
add
xchg
adc
jge
mul
xchg
and
fdivr
mov
int
and
frstor
lahf
jp
mov
jmp
push
mov
fistp
cmp
push
sbb
int
mov
sub
or
cmp
aam
jge
inc
dec
aas
jbe
popa
cld
pop
sub
out
mov
fimul
or
lea
fstp
sbb
fidiv
std
nop
push
xor
pop
out
pusha
sar
in
cmp
(bad)
ja
jmp
dec
inc
fs
fwait
mov
dec
test
mov
and
fisttp
mov
fsubr
or
sbb
ds
xor
sbb
inc
sti
out
sbb
rol
push
mov
cmp
cmp
xor
sbb
dec
mov
pop
jecxz
and
jbe
shl
jbe
stos
scas
clc
nop
sar
mov
sahf
clc
adc
popa
inc
lea
xor
jnp
sub
iret
das
(bad)
data16
je
les
call
push
jnp
mov
cmps
inc
ins
inc
(bad)
xchg
push
mov
jle
addr16
sub
sbb
adc
cmp
or
dec
or
movs
test
jne
int
fisub
jne
mov
push
rcl
jns
in
fst
add
jecxz
lds
ins
stc
jne
mov
std
outs
aam
adc
add
aaa
retf
repnz
lods
mov
and
adc
retf
push
inc
bound
leave
dec
ins
jb
adc
(bad)
mov
mov
gs
(bad)
mov
movs
push
clc
dec
(bad)
test
mov
pusha
scas
sub
sub
push
loop
push
inc
repz
test
add
(bad)
in
sub
jb
or
sub
inc
xchg
push
xchg
inc
push
mov
and
push
jg
pop
inc
mov
and
mov
adc
ss
loopne
cmp
jbe
xchg
and
adc
ror
mov
loope
add
dec
mov
call
mov
jns
jno
add
aad
out
xor
outs
inc
aaa
stc
sbb
cdq
jae
xchg
iret
pop
xchg
shr
sar
jg
push
js
mov
repnz
lahf
xchg
out
clc
repz
js
stos
mov
pop
inc
cdq
out
xor
and
sub
pop
or
jge
or
call
lahf
imul
xlat
sbb
fsub
jp
cmp
(bad)
add
dec
inc
addr16
ret
into
inc
add
(bad)
push
pop
dec
and
lods
stos
loop
sub
mov
call
mov
shl
sub
mov
inc
cmp
pop
push
pop
not
and
add
in
mov
add
adc
rol
shl
movs
rcl
jno
jbe
jle
xor
test
ds
(bad)
and
push
xchg
cwde
push
(bad)
and
in
pop
dec
js
scas
sbb
enter
shr
sbb
and
aas
inc
sub
and
cmps
and
jecxz
cmc
aad
(bad)
adc
fs
push
sub
pusha
cmc
mov
shl
adc
mov
xor
dec
inc
inc
jl
sub
(bad)
movs
xchg
xchg
aas
mov
sbb
cs
jge
out
popf
sub
ret
out
retf
dec
mov
cmc
xchg
cmp
inc
inc
fld
popa
sub
fstp
mov
repz
add
ret
xchg
jmp
call
out
xchg
xor
xlat
out
bound
sub
sub
call
movs
xchg
les
pushw
jns
mov
lock
(bad)
push
out
mov
pop
call
psrlq
mov
xchg
ret
daa
fs
fcomp
loope
out
mov
xchg
or
loope
out
cmps
mov
dec
out
fcmovb
into
dec
das
cmp
dec
stos
sbb
in
sub
movs
mov
mov
cld
inc
int
pop
push
jns
adc
arpl
xchg
push
shl
test
cmp
(bad)
int3
mov
push
mov
lods
pop
movs
inc
shl
push
data16
pop
and
mov
imul
aad
push
push
jne
ror
push
cmp
jbe
arpl
mov
cdq
(bad)
or
mov
dec
stos
xor
push
int
ret
retf
ret
push
sar
dec
and
nop
cmp
pop
ja
movs
clc
add
mov
fist
stos
mov
jmp
inc
movs
add
sub
gs
cmp
cmp
rcl
mov
lahf
int3
scas
dec
pop
aaa
mov
fcom
or
call
arpl
pop
mov
nop
push
in
and
ret
and
not
mov
xchg
pop
ins
bound
push
push
mov
cmp
sub
retf
sbb
aad
cmp
push
pop
mov
cmps
neg
cs
and
repnz
lods
jg
jg
jmp
sub
lahf
call
pusha
sub
push
mov
push
shl
pop
dec
cld
add
sub
mov
xchg
stos
dec
pop
gs
shr
xor
jecxz
sti
mov
(bad)
and
or
fs
sahf
sbb
mov
jbe
cmp
mov
inc
pop
push
fsub
and
dec
cld
addr16
mov
mov
xchg
rcr
mov
mov
push
jnp
sbb
or
jns
rcr
call
ret
das
jp
js
loope
pop
pop
pop
xchg
aad
jl
pop
sbb
cdq
fwait
dec
mov
cmp
sahf
cmp
out
shl
ja
dec
leave
mov
(bad)
jg
into
xchg
push
aad
cld
xor
in
mov
mov
cmp
inc
loop
push
lock
inc
mov
jl
mov
xchg
movs
std
xor
add
jbe
cli
pop
dec
pusha
xchg
ja
ins
fnstcw
pushf
rol
hlt
jecxz
das
in
jl
in
sub
push
sbb
fiadd
add
fs
dec
pop
aam
and
lahf
and
push
ret
xor
pop
jmp
jmp
enter
or
lahf
out
les
add
adc
aad
or
push
and
ret
(bad)
and
push
rcl
xor
pusha
mov
dec
lods
ror
mov
test
imul
mov
cmc
pop
in
imul
repnz
ret
std
por
inc
inc
div
daa
inc
cmp
mov
push
or
dec
xchg
hlt
jmp
fbld
sub
jo
sub
dec
mov
mov
jecxz
pop
mov
sbb
gs
add
sbb
pop
loopne
and
add
sbb
ret
mov
inc
sbb
sbb
or
bound
mov
je
pop
inc
jp
and
inc
push
mov
and
xchg
push
imul
nop
fmulp
and
pop
stos
dec
(bad)
fiadd
jns
mov
pop
sbb
ja
pop
stos
adc
mov
lea
adc
out
retf
xchg
neg
scas
jl
ret
call
mov
adc
jecxz
test
pusha
cmc
jno
sub
and
scas
addr16
inc
cmp
sbb
mul
stc
call
xchg
dec
or
ret
popf
call
mov
xchg
mov
sbb
in
fiadd
fstp
nop
repz
stos
mov
ret
pop
enter
adc
cmp
xor
push
sbb
mov
sub
fdivr
mov
or
data16
pushf
jl
pop
(bad)
daa
(bad)
retf
fild
loop
push
in
jns
pusha
dec
fcomp
add
in
cmp
outs
mov
out
xchg
scas
sbb
sbb
mov
dec
bound
jge
jp
xchg
hlt
inc
mov
pop
add
pop
xchg
push
gs
push
pop
or
sbb
cdq
repnz
loope
mov
inc
push
dec
movd
sar
and
push
int
mov
mov
mov
daa
ds
pop
xchg
push
adc
aaa
ds
das
aad
jo
pop
clc
or
push
scas
dec
aad
mov
mov
jle
loope
mov
push
int
mov
outs
call
scas
aas
sub
xchg
mov
pop
push
xor
adc
pop
add
mov
icebp
add
sub
xchg
push
adc
jne
xchg
pop
sbb
or
and
fst
inc
fucomip
retf
jmp
stc
loopne
std
ds
mov
dec
loope
in
inc
loopne
fwait
out
mov
push
cmp
xor
scas
and
mov
(bad)
jbe
xchg
pop
push
int3
imul
scas
imul
popa
adc
gs
test
es
pop
pop
xchg
or
jb
in
mov
clc
dec
dec
ss
ins
es
mov
cli
sub
vpmaxsw
movs
lods
push
popf
mov
mov
xchg
cmp
mov
and
add
hlt
aad
jmp
aas
xchg
out
outs
inc
pop
leave
imul
pop
push
or
push
cmp
or
fwait
inc
dec
int3
mov
push
retf
rol
div
into
cmps
push
push
and
outs
nop
dec
push
and
xchg
fwait
inc
loope
add
stos
pop
adc
movs
je
inc
push
fst
les
inc
outs
mov
push
sub
dec
inc
mov
ins
dec
scas
cmps
jno
dec
cmp
adc
mov
pusha
jle
add
outs
movs
cmp
in
xor
btr
xor
repz
dec
xor
imul
(bad)
pop
pop
add
xchg
pop
mov
out
clc
es
je
leave
repnz
mov
bnd
sub
pop
ret
rcl
mov
mov
sub
dec
adc
paddw
cmp
xchg
call
xchg
jbe
ds
cmp
out
mov
cmp
xor
js
push
icebp
cld
les
pop
test
xor
out
and
es
mov
sbb
adc
push
xchg
repnz
jne
pop
sbb
dec
adc
push
inc
inc
std
cmp
adc
inc
out
call
and
jnp
xchg
mov
jecxz
push
add
movs
icebp
(bad)
cmp
(bad)
sahf
das
cmp
sub
pop
shl
lods
sbb
inc
dec
mov
rol
or
aam
in
jp
xchg
iret
xor
retf
inc
or
push
jne
pop
sub
lock
pop
inc
rcl
jl
cdq
sbb
imul
jno
xchg
push
mov
ss
fwait
dec
adc
jo
inc
adc
xor
inc
imul
and
repnz
in
rcl
iret
aas
cmp
mov
dec
mov
fnop
xchg
jle
lea
and
lea
inc
jmp
js
gs
sub
jns
pusha
and
mov
repz
stc
retf
push
xchg
into
ds
scas
jmp
push
out
fisttp
jns
shl
inc
(bad)
in
push
jecxz
push
les
out
mov
lods
fcomp
xchg
pop
cmp
dec
les
jo
mov
sbb
sbb
(bad)
rcl
pop
add
std
popf
cli
popf
xchg
mov
int3
jne
dec
push
dec
lods
mov
mov
lds
sub
jge
in
adc
adc
adc
and
mov
movs
mov
push
dec
mov
push
retf
dec
mov
fldl2e
nop
enter
pop
loop
ret
sbb
adc
hlt
in
sahf
jp
jmp
cwde
std
sub
and
inc
xor
fisubr
sahf
into
lods
or
inc
(bad)
mov
loopne
imul
cwde
mov
fisttp
dec
jl
icebp
pop
pop
iret
jb
repnz
jg
or
lahf
jle
arpl
jecxz
repz
aad
(bad)
fiadd
pusha
adc
fisttp
jno
sbb
dec
mov
jmp
mov
mov
pop
xchg
cld
pop
pop
mov
lods
jmp
imul
test
lods
daa
test
add
ret
mov
and
sub
imul
adc
or
jmp
add
inc
lea
cmp
retf
cmps
cmps
test
jle
add
mov
(bad)
stc
mov
int
ja
pop
push
pop
adc
imul
and
pop
dec
aam
mov
jbe
sub
enter
or
mov
(bad)
xchg
add
push
cdq
push
mov
mov
inc
loopne
or
nop
cld
addr16
jo
fbld
bound
add
add
mov
mov
inc
ds
pop
stos
sbb
loope
mov
call
xor
xchg
stos
jns
or
mov
loope
add
or
xor
mov
push
xor
push
xchg
dec
movs
das
mov
adc
push
sub
mov
xchg
and
push
in
ret
mov
adc
or
(bad)
mov
sub
std
popa
cmp
mov
mov
mov
sub
popa
sbb
jae
mov
pusha
push
cmp
fmul
adc
fisub
dec
cmc
xchg
fidiv
sbb
sub
test
or
xchg
mov
push
xchg
or
idiv
inc
mov
ins
xlat
in
and
out
xchg
cwde
(bad)
pusha
mov
sbb
mov
into
lock
cs
xchg
and
das
adc
xchg
les
(bad)
sub
fdiv
test
xlat
stc
and
inc
inc
add
std
or
test
dec
sar
pop
mov
icebp
stc
mul
mov
fiadd
cmps
gs
xor
push
shl
fsubr
sub
sbb
int
jnp
xchg
dec
jmp
pushf
and
std
int3
and
stos
sahf
scas
stos
mov
test
bound
in
mov
and
stos
stos
mov
adc
loope
rol
mov
hlt
adc
push
daa
xor
inc
ja
rcr
test
pop
dec
push
xchg
(bad)
jge
aas
xor
xchg
push
mov
stc
cmp
rcl
in
push
jle
push
mov
fld
adc
movs
jmp
out
dec
jb
test
inc
loop
mov
push
jns
ret
cli
lds
xchg
sbb
or
mov
xchg
sub
mov
call
in
xor
add
inc
cld
dec
jb
loopne
pop
fisub
jp
adc
sub
inc
push
xchg
lahf
dec
rcr
push
mov
and
add
sbb
fild
pop
push
xchg
pop
and
fld
jl
out
or
rcr
dec
(bad)
xchg
xchg
(bad)
repnz
cmps
mov
pop
push
mov
ficomp
repnz
or
fs
xchg
mov
add
popa
add
in
xchg
pop
jmp
cmps
pop
les
sti
mov
shl
jmp
daa
adc
or
xlat
test
mov
mov
xchg
mov
je
mov
push
jnp
stos
pop
lods
shl
ins
outs
add
sub
push
mov
xchg
xor
jge
sub
call
das
xchg
push
mov
xchg
pop
(bad)
jle
ror
outs
xchg
dec
xor
push
sbb
mov
jecxz
cld
outs
mov
mov
in
adc
dec
cli
loopne
add
(bad)
mov
inc
mov
xchg
pop
xchg
repnz
test
cld
aad
or
loope
or
(bad)
call
or
or
test
test
cli
push
pop
and
repz
xchg
mov
shl
fst
xchg
xor
adc
and
fistp
mov
lods
xor
xchg
pop
inc
test
fimul
cmp
push
scas
mov
push
sahf
test
jne
inc
stos
test
retf
js
cmps
fstp
in
jne
push
cmp
lea
dec
es
scas
in
pop
dec
mov
add
cmc
(bad)
test
sbb
add
enter
jl
mov
and
xchg
dec
cld
xchg
xchg
jno
int
sub
stc
or
ja
arpl
mov
xor
jecxz
out
test
xchg
aad
sbb
(bad)
out
int3
ret
and
pop
ds
xor
retf
outs
sbb
scas
cmp
mov
lock
fstp
aas
pusha
xlat
sbb
rol
push
outs
sbb
mov
mov
mov
mov
and
xchg
cmc
ins
push
push
in
dec
inc
adc
inc
mov
gs
xchg
mov
adc
mov
xor
je
mov
cld
or
sbb
repnz
add
mov
push
pop
(bad)
in
lds
adc
sub
loopne
cld
mov
push
push
cmps
xor
cld
cmps
inc
popa
sti
enter
mov
sbb
rcl
mov
mov
add
mov
ss
enter
aas
mov
aad
(bad)
test
pop
mov
movs
push
adc
pop
outs
call
lea
jl
ret
notrack
imul
dec
call
xor
into
mov
cmp
push
pop
ror
sar
mov
mov
jmp
inc
(bad)
or
test
ins
cmc
psrlw
jl
cmps
and
jmp
loopne
(bad)
mov
div
cmp
adc
and
and
idiv
ficom
add
rcr
mov
stc
sbb
mov
lea
dec
pop
sbb
pop
lds
push
out
xor
mul
lea
ret
shr
ds
(bad)
cli
enter
scas
ret
mov
mov
(bad)
(bad)
and
fwait
adc
cmp
out
retf
hlt
outs
mov
and
xchg
sbb
retf
cmc
inc
and
xchg
sub
jb
fs
unpckhps
mov
outs
out
gs
sub
sub
mov
stos
xchg
sbb
add
xor
jbe
lahf
movs
or
and
cdq
shr
inc
xor
stos
dec
cmp
sahf
mov
aas
lahf
aas
fdivr
xchg
pop
imul
xchg
aaa
push
(bad)
das
jmp
sub
es
cli
fisttp
fsub
iret
add
pop
aaa
in
mov
sub
xchg
popa
xchg
dec
leave
jg
sahf
mov
call
jns
gs
push
push
stos
sahf
or
sbb
out
fldenv
mov
ins
mov
fbstp
leave
sub
jmp
pushf
ins
inc
cmp
sar
adc
jbe
out
add
mov
sbb
mov
mov
lahf
nop
in
sub
and
sbb
jecxz
pop
mov
jo
jge
inc
xchg
pop
je
sar
pop
fwait
adc
inc
retf
push
jecxz
aad
xor
and
pop
mov
(bad)
xor
push
mov
shr
shr
mov
pop
mov
dec
inc
sbb
adc
int
add
out
push
sbb
leave
xor
cmps
jmp
push
mov
pop
or
mov
pop
popa
scas
clc
ins
xchg
retf
mov
outs
adc
xchg
jl
jp
sbb
push
xchg
push
sub
les
xor
lea
mov
repz
rol
enter
jp
jmp
mov
mov
sub
test
test
into
neg
es
imul
cmps
xchg
xchg
jecxz
rcr
mov
jp
push
loop
(bad)
in
inc
jle
jae
lahf
mov
(bad)
jl
lea
sub
ror
dec
cmc
pop
cmp
ret
mov
jbe
or
jecxz
sahf
and
jb
scas
xchg
adc
outs
xchg
in
cmp
push
retf
xchg
out
sub
xchg
and
mov
lods
push
mov
shl
stos
arpl
data16
adc
fild
sub
jnp
sti
sub
into
scas
sub
outs
sti
adc
pushf
sbb
dec
jb
stos
mov
les
adc
inc
pop
pop
icebp
mov
dec
stos
dec
mov
(bad)
add
dec
mov
xchg
xchg
jns
(bad)
xchg
scas
aas
lods
xor
(bad)
mov
call
out
and
jo
mov
pop
fisubr
cld
xor
pop
ins
ss
call
das
jmp
fcom
jmp
(bad)
mov
sub
pop
jl
sub
fcom
or
push
in
call
jge
mov
lods
xchg
add
out
(bad)
outs
lds
mov
stc
adc
jle
in
ss
clc
div
outs
retf
js
xchg
pop
retf
nop
jl
xchg
push
(bad)
inc
stos
add
mov
jle
inc
mov
imul
ficom
shl
call
lock
xchg
leave
mov
sbb
(bad)
cli
pop
scas
sub
aas
mov
outs
or
push
ficom
ja
and
test
out
fisub
out
loopne
aas
cmps
(bad)
imul
cmp
shl
pop
jne
mov
cmp
cmp
pop
xor
out
mov
mov
inc
rcl
or
pop
dec
cmps
ss
and
sub
fnstenv
rol
shl
push
or
int3
and
movs
mov
icebp
es
and
or
out
test
pusha
mov
cli
xor
les
mov
cmp
lock
push
addr16
gs
adc
push
(bad)
adc
mov
aas
cmp
and
xchg
mov
mov
pop
pop
and
dec
mov
ds
sub
pop
mov
adc
and
repnz
gs
stos
mov
ds
mov
mov
cmp
mov
sbb
pop
adc
stc
mov
cmp
jmp
lods
inc
xchg
push
xor
sbb
clc
loope
xchg
jo
dec
int
jp
mov
xchg
mov
jbe
fiadd
or
fmul
xchg
dec
adc
enter
bound
(bad)
out
mov
cmps
xchg
popf
pop
jno
or
pop
je
fmul
sbb
popa
jl
adc
movs
push
fidiv
into
fidivr
jnp
shl
xchg
xchg
rcl
cmp
pusha
sub
lods
mov
faddp
fadd
fst
and
retf
sub
cmps
and
sbb
cmps
fcom
daa
add
push
pop
mov
and
arpl
scas
scas
dec
sbb
out
ret
inc
sub
rcr
daa
cmp
cmp
or
push
pop
adc
cmps
inc
std
jbe
sbb
test
fmul
call
xlat
data16
mov
dec
not
or
test
repz
fidiv
cwde
sub
and
popa
pop
add
dec
jbe
push
xor
cmp
cwde
out
dec
sbb
or
xor
aaa
mov
jbe
(bad)
popa
ins
sbb
lea
repz
pop
fs
add
cmps
pop
sahf
or
add
adc
daa
xchg
ss
mov
movs
nop
pop
sbb
aad
mov
jg
mov
clc
ret
test
lods
xchg
(bad)
stos
jo
shl
cmp
xchg
cmps
add
mov
sbb
jmp
in
inc
cmp
(bad)
arpl
cmp
dec
or
xchg
pop
or
and
mov
iret
mov
inc
adc
sar
stc
xor
jnp
dec
das
xchg
pop
dec
mov
scas
mov
test
adc
in
or
mov
lahf
sub
out
(bad)
inc
stos
imul
xchg
push
test
bound
pop
inc
or
add
out
out
push
mov
fsub
ins
push
je
dec
stc
(bad)
cmp
xchg
pop
cli
adc
push
popa
cmc
jnp
inc
mov
xchg
dec
pop
adc
movs
pop
arpl
pop
xor
test
xor
push
aaa
inc
mov
and
dec
lea
push
push
add
xchg
std
jmp
(bad)
(bad)
xchg
add
sub
add
dec
sahf
cmp
jmp
jnp
pusha
dec
ds
add
das
adc
sbb
mov
pop
xchg
inc
call
or
sub
add
icebp
inc
cmps
outs
pop
movs
mov
push
lods
lds
hlt
add
add
inc
loopne
neg
lahf
xlat
lods
mov
push
rcl
fsubr
xor
fisttp
stos
lock
inc
js
and
jo
jns
fsub
not
cmp
dec
les
retf
lock
stos
xchg
jl
cmp
mov
test
add
mov
add
add
dec
int
mov
lds
push
inc
jns
xchg
out
add
test
and
fsubr
or
sbb
data16
push
cmp
xor
and
cld
stc
mov
movs
(bad)
movs
ins
in
out
push
bswap
cs
xchg
outs
aad
mov
jbe
mov
aad
repz
out
cdq
adc
sub
cmc
mov
out
or
jmp
and
sub
add
ins
push
mov
mov
add
xlat
data16
sar
dec
std
test
push
outs
lea
jecxz
mov
cmp
out
pop
sbb
cmp
fisubr
arpl
cmps
dec
pop
xchg
xbegin
sbb
lea
pop
sbb
jae
inc
or
rol
mov
xor
mov
nop
inc
outs
fwait
pop
xchg
imul
add
sub
push
mov
inc
dec
cmp
imul
jecxz
mov
jae
dec
jle
mov
xchg
mov
loope
xchg
mov
fst
retf
add
call
cmp
add
cdq
outs
sbb
mov
add
pop
dec
dec
cmp
cmp
sub
and
fsub
jge
mov
add
add
jo
or
inc
mov
fst
jmp
mov
adc
pop
jle
fldenv
retf
fcom
ins
or
inc
rcl
rcr
mov
lock
pop
stc
inc
jnp
rcl
sbb
push
and
pop
loopne
and
mov
pop
icebp
enter
test
add
imul
or
mov
test
sub
ror
(bad)
repnz
nop
add
sahf
xor
pop
rcr
push
lock
stos
or
xor
push
and
daa
cdq
push
jg
dec
xor
adc
mov
loope
mov
inc
cmp
std
jge
movs
repnz
add
call
shl
ja
mov
repnz
fsubr
mov
adc
pop
mov
jns
shl
mov
mov
movs
dec
out
(bad)
pusha
add
jle
std
or
or
in
stc
dec
daa
in
shl
xor
outs
rcl
scas
test
ror
sbb
pop
and
aad
pop
pushf
stos
call
fwait
pop
inc
rol
dec
mov
(bad)
cli
clc
int3
push
cmp
stc
sub
ins
add
mov
mov
cli
add
push
dec
test
lods
in
pop
or
mov
cmp
std
mov
jb
inc
mov
mov
sub
fs
lea
int3
dec
scas
ret
out
dec
retf
dec
call
mov
neg
push
hlt
subps
shl
gs
daa
jae
push
mov
call
mov
int3
inc
mov
(bad)
mov
lock
sub
popf
aas
adc
or
mov
les
popf
mov
(bad)
arpl
push
xor
dec
cmp
jle
outs
dec
mov
pop
sub
dec
mov
leave
mov
push
fisubr
sub
xor
cmp
jns
jge
cmp
push
or
lds
ins
into
dec
stc
(bad)
sub
pop
mov
and
scas
cli
mov
dec
mov
jbe
pop
xchg
aad
or
push
push
repnz
jno
and
(bad)
push
adc
jo
adc
mov
fist
scas
jge
(bad)
(bad)
out
xchg
mov
sub
cmp
loop
sbb
add
push
retf
lds
lock
inc
sahf
addr16
ins
test
pop
or
push
nop
jg
pop
cmp
or
into
xchg
cs
cwde
ss
or
xchg
mov
loop
ss
xchg
lahf
or
sub
mov
cmp
addr16
jle
gs
pop
(bad)
mov
or
es
es
mov
push
mov
sub
cli
ds
ficomp
sbb
popa
mov
int
mov
movs
dec
sbb
addr16
mov
adc
jns
cmp
fldcw
sub
or
add
inc
jne
scas
fs
inc
mov
retf
in
push
rol
ds
imul
or
xchg
mov
nop
jge
test
push
pop
pop
mov
inc
std
rcr
jnp
cmp
cld
stc
fiadd
push
std
pop
lock
(bad)
mov
int
stos
push
test
mov
cs
enter
ss
mov
xor
jne
(bad)
pusha
addr16
gs
out
fimul
setnp
sbb
push
dec
clc
push
push
shl
dec
dec
dec
push
xchg
(bad)
out
adc
push
sub
scas
(bad)
shr
pop
push
fcom
push
sbb
jp
sbb
les
mov
push
mov
in
sub
dec
fimul
jmp
pop
shr
sbb
push
fldenv
push
fs
repnz
jbe
pusha
(bad)
rcr
mov
push
repz
ret
fsubr
or
inc
out
push
xchg
mov
cmp
repnz
cmp
call
adc
repnz
dec
jmp
aam
ins
inc
xchg
jmp
pop
nop
gs
mov
jnp
cmp
and
fld
out
stos
push
sbb
std
push
xchg
sbb
pop
fiadd
mov
inc
retf
adc
shl
cmp
cmp
mov
cmp
bound
mov
adc
ficom
sahf
mov
mov
pop
fadd
mov
push
fisttp
and
mov
jne
or
mov
dec
mov
add
xor
inc
bound
cli
mov
das
pop
aad
dec
push
fisttp
sti
dec
or
fwait
pop
fist
das
movs
push
shl
neg
imul
and
sar
fiadd
loop
xor
sub
adc
sbb
inc
pop
adc
cmp
daa
rcl
jle
pop
aad
fild
or
stos
cld
das
test
mov
push
std
mov
cmp
cwde
mov
imul
inc
outs
int
outs
or
cwde
dec
lods
jge
xchg
jp
xor
gs
cli
push
cdq
mov
out
cmp
dec
jns
sbb
sbb
ror
into
js
push
fld
in
push
cdq
fdiv
inc
add
ins
sar
jg
test
in
mov
cld
retf
mov
ret
inc
les
mov
dec
inc
add
shl
mov
sahf
inc
cmc
lods
lea
jb
jle
js
fstp
mov
push
test
stos
xchg
(bad)
ins
adc
add
stos
and
xchg
add
push
rcl
lods
fidiv
(bad)
call
(bad)
cwde
aam
push
mov
cmp
cld
sub
inc
repz
or
adc
vmresume
cdq
imul
mov
mov
cwde
mov
out
or
cmps
and
(bad)
hlt
fsubr
scas
and
(bad)
dec
jo
jl
sub
outs
mov
cld
sbb
mov
jae
xor
push
add
push
ins
retf
js
cmp
push
arpl
add
les
daa
(bad)
mov
add
mov
pop
and
outs
and
div
sar
mov
sbb
stos
cmc
mov
xchg
push
dec
repz
inc
repz
xchg
pop
imul
mov
jbe
xor
mov
and
xlat
or
inc
outs
pusha
pop
arpl
cmc
xchg
push
mov
bound
repnz
outs
mov
movs
adc
sbb
mov
sbb
add
sub
loop
sub
movs
mov
jg
in
jmp
mov
xchg
iret
or
jmp
(bad)
div
imul
shl
std
(bad)
cs
mov
loopne
pushf
cli
mov
cmp
mov
or
xor
cmp
adc
push
fiadd
sbb
push
imul
jns
sbb
lods
mov
jae
mov
js
ret
sub
dec
hlt
add
push
jg
cmp
fs
cmp
ins
push
fwait
pop
rcl
in
add
mov
or
lahf
mov
(bad)
fdivrp
lds
test
lea
sub
add
(bad)
das
mov
or
aam
pcmpeqd
rep
fimul
or
xor
sahf
mov
push
int
test
sbb
rcl
cmc
jecxz
inc
inc
xor
add
fstp
mov
mov
cmp
stos
loop
retf
dec
push
jle
xchg
xchg
sbb
jecxz
cmc
xlat
cmp
(bad)
adc
dec
pop
inc
cwde
xchg
adc
in
jb
mov
mov
cld
mov
aad
call
das
inc
ja
pop
cmp
cli
inc
push
loope
mov
lods
dec
mov
out
mov
xor
imul
out
mov
push
sbb
fisttp
push
mov
cs
call
iret
aad
pop
les
fucom
out
pop
call
lea
imul
imul
and
arpl
jl
ret
retf
sub
jcxz
loopne
sar
out
pop
xor
pop
mov
pop
xchg
out
push
sbb
sub
pop
push
mov
jbe
or
lahf
imul
pop
mov
inc
mov
add
mov
dec
sbb
add
or
cdq
in
movs
js
dec
stc
xchg
popa
outs
mov
pop
push
sar
dec
repz
ficomp
mov
push
test
cmp
(bad)
arpl
hlt
inc
inc
push
mov
lock
mov
fisub
cwde
add
cmp
pop
xchg
mov
pop
xchg
stc
lods
cs
or
inc
xchg
call
ins
adc
pusha
mov
cmc
inc
xor
push
jns
inc
mov
dec
shrd
iret
int
(bad)
cwde
add
pop
and
jge
sub
les
cmps
and
lds
xor
bound
ror
dec
sbb
ficom
int
daa
fadd
sbb
xchg
lock
int
arpl
mov
out
in
xor
push
shl
rcl
mov
jg
mov
je
push
push
dec
mov
ret
mul
cmp
push
icebp
rcr
popf
daa
loopne
xchg
aaa
sbb
lods
fmul
push
xchg
xchg
mov
aad
aad
nop
sbb
loope
mov
mov
ret
push
and
pop
xor
xchg
add
es
pop
mov
pop
dec
jecxz
inc
inc
dec
movs
push
aaa
stos
pusha
lock
bswap
add
fcomp
jae
pop
in
lods
sar
mov
inc
scas
inc
lods
jmp
mov
or
cmps
add
inc
(bad)
hlt
es
pop
stos
pop
mov
loop
xchg
and
sub
pop
mov
and
jmp
pop
adc
cmp
iret
repnz
out
cmovge
sbb
popa
lds
js
ret
aaa
push
mov
and
mov
loop
xor
mov
sub
retf
pop
fidivr
xor
sub
ja
and
xchg
and
hlt
jnp
out
inc
jo
push
sbb
inc
setg
xchg
inc
sbb
xor
push
sahf
(bad)
jle
dec
call
fcmovnbe
sahf
xchg
vorps
push
push
fdiv
ja
fwait
aad
add
mov
inc
inc
xchg
or
or
hlt
aad
dec
sbb
pushf
mov
rol
add
xchg
xchg
retf
retf
sti
mov
rcl
lahf
or
cmp
mov
jno
or
pushf
popa
je
retf
jmp
fs
cld
fdiv
aas
or
mov
addr16
jmp
fs
fwait
pop
ret
xlat
mov
out
xchg
jmp
sbb
fwait
scas
outs
jo
es
int
jecxz
jns
scas
fld
out
xor
xor
test
stc
mov
push
pop
adc
and
cs
cmp
stos
jmp
loop
adc
add
push
mov
pop
mov
or
pop
std
in
das
out
fnstsw
dec
aas
add
push
lods
inc
cli
ja
inc
(bad)
xlat
inc
popf
jmp
or
cli
sbb
loope
mov
mov
pop
lea
(bad)
jmp
jbe
push
or
retf
adc
scas
jg
mov
scas
mov
stos
sub
int
add
and
call
mov
jae
fidivr
ret
dec
stos
and
inc
add
xchg
push
mov
jp
xchg
cmp
push
(bad)
cmp
fs
dec
jge
adc
cmp
sbb
fistp
fist
ins
loopne
hlt
adc
or
or
push
in
xor
sub
adc
in
mov
mov
pop
pop
push
and
es
mov
cmps
jp
mov
adc
arpl
sbb
test
loop
rcr
(bad)
mov
cmp
movs
xor
mov
lock
stc
or
xor
add
xchg
jecxz
push
pop
fwait
cs
xchg
popf
iret
push
xchg
adc
loopne
add
pop
mov
out
pushf
sub
jb
aaa
sub
and
ret
test
xchg
imul
int3
xor
ja
sub
jae
test
(bad)
pop
dec
jmp
jmp
test
mov
inc
and
aad
dec
dec
pop
push
xchg
iret
jnp
nop
pop
push
mov
sti
and
outs
sub
fisttp
pop
push
hlt
mov
nop
sub
mov
add
jge
jecxz
sahf
mov
scas
xchg
rcl
scas
push
push
mov
mov
add
out
lods
cmps
test
mov
movs
in
mov
outs
adc
mov
enter
outs
loope
jo
sbb
into
loope
cld
sbb
sub
xlat
add
mov
xchg
or
pop
imul
dec
jb
retf
and
xchg
in
(bad)
sti
neg
lods
out
popa
out
push
es
and
lea
push
adc
cwde
sub
push
das
mov
lea
dec
popa
rol
xchg
and
pop
pop
imul
iret
sub
fldl2t
(bad)
aas
stc
mov
fadd
stos
call
(bad)
in
das
mov
push
push
xchg
fwait
jge
(bad)
clc
lds
cmc
push
push
stos
mov
in
(bad)
fld
fs
in
lahf
push
loop
dec
push
or
or
cmp
or
xlat
stos
mov
imul
neg
sahf
push
sti
sub
mov
(bad)
mov
inc
inc
xchg
dec
xchg
aaa
stos
and
stc
sbb
outs
movs
ret
xchg
pop
das
fnstsw
aas
mov
pop
test
or
mov
push
neg
movs
lock
loop
xor
fcmovnb
or
nop
mov
xchg
retf
mov
inc
mov
jmp
test
int3
push
cli
add
repz
ins
rcl
dec
dec
call
retf
pop
cs
mov
jno
push
pop
stos
sbb
inc
cmp
ror
into
stos
and
jne
mov
xchg
mov
test
(bad)
push
daa
pop
jae
test
dec
hlt
cwde
dec
jg
loopne
cwde
ror
jo
jmp
retf
sub
lock
or
jmp
leave
fs
neg
into
gs
sub
fdivr
leave
add
push
pop
mov
jno
rcr
push
in
pop
pusha
cmp
mov
jae
jnp
cmp
and
adc
push
sbb
fmul
je
or
fucomp
mov
dec
push
cmc
mov
mov
test
fisttp
cdq
and
int3
icebp
outs
imul
inc
inc
inc
mov
sbb
jbe
push
cdq
loop
out
stc
mov
and
mov
shr
(bad)
jmp
mov
add
inc
lock
mov
std
jb
xchg
xchg
cwde
mov
call
pop
into
shl
or
push
cmps
jne
dec
sbb
scas
xchg
addr16
into
inc
jmp
sar
inc
iret
in
push
in
and
or
pusha
inc
pusha
mov
(bad)
leave
adc
adc
test
push
cmp
cmp
es
nop
iret
pop
or
jp
cli
xchg
aas
xor
xchg
std
(bad)
js
and
sti
int
add
retf
mov
mov
inc
mov
cdq
pop
mov
lea
retf
movs
mov
(bad)
cmps
or
jl
scas
iret
jg
sub
shrd
sub
jbe
pop
dec
bound
stos
fcmovnb
pop
(bad)
out
popf
sub
pop
in
es
imul
and
ret
mov
mov
push
inc
sub
sti
jmp
push
jmp
jnp
out
(bad)
addr16
cmps
lods
sub
pop
loop
mov
ja
add
sbb
jmp
out
jecxz
jbe
js
push
lods
mov
bnd
pushf
outs
add
ins
inc
cmp
xor
cmp
repz
inc
or
pop
pushf
adc
mov
add
fs
into
cmp
mov
icebp
enter
repz
xor
enter
xlat
test
scas
mov
pop
iret
add
xor
fsubrp
jmp
push
or
(bad)
and
cmp
stos
in
retf
mov
(bad)
ds
ret
pushf
xor
mov
in
xor
push
lds
in
inc
cmp
or
xor
pop
or
retf
mov
mov
push
nop
dec
xor
pusha
inc
adc
cwde
pop
test
add
xchg
movs
inc
loope
and
cmp
out
jns
cmps
retf
sub
xor
and
sub
xchg
test
jecxz
sbb
sbb
pop
inc
or
dec
xor
dec
rcl
out
les
jnp
enter
pop
cmps
fidiv
movs
or
mov
push
cmp
push
stc
outs
sub
push
clc
pop
sub
aam
arpl
mov
(bad)
mov
jg
ss
pop
mov
xor
mov
and
cmp
lock
add
daa
enter
je
hlt
add
int3
sub
test
aas
outs
gs
jo
sub
sub
lock
sbb
dec
dec
jnp
sub
fstp
inc
push
inc
xlat
test
jg
xchg
pop
xchg
ret
fstp
jp
push
xlat
lahf
xchg
inc
pop
and
push
int
cmp
adc
mov
sbb
cmp
pop
clc
int3
stc
add
pop
jle
or
and
inc
(bad)
mov
cmc
imul
push
stos
arpl
fcomp
pushf
push
data16
mov
mov
jp
fwait
lods
push
push
test
out
loopne
scas
add
test
mov
movs
add
data16
and
mov
mov
or
adc
hlt
(bad)
dec
lock
lods
jmp
inc
dec
sub
hlt
push
xchg
gs
shl
add
pop
popf
adc
dec
daa
lahf
or
arpl
sbb
outs
dec
test
xor
xchg
dec
adc
(bad)
icebp
retf
call
rol
cmp
outs
arpl
pop
jmp
or
call
sbb
mov
and
mov
fdivr
push
sbb
jo
ins
fs
mov
fwait
les
sub
push
xor
mov
mov
fdiv
cmp
jns
mov
push
xlat
scas
fdivp
mov
mov
push
loopne
sub
add
int3
or
fnstsw
sub
daa
jo
aaa
jg
jle
shl
out
rcr
sub
es
repnz
add
push
lods
push
es
cmps
mov
imul
repz
mov
arpl
rcr
cmps
or
sub
icebp
xchg
scas
out
xchg
and
loop
cmp
push
inc
cmp
into
jbe
loope
push
inc
adc
add
popa
int3
mov
gs
inc
outs
jb
out
shl
xchg
test
mov
jmp
ret
xor
mov
ins
sub
ja
mov
arpl
js
and
add
pop
pop
mov
clc
(bad)
sub
jecxz
cdq
push
lahf
add
aas
and
push
into
push
sbb
lods
or
adc
in
mov
enter
clc
int
jbe
adc
call
pop
cmp
mov
pop
sbb
sbb
cli
pop
les
mov
stc
pop
rol
retf
pop
jmp
dec
mov
mov
xor
xchg
dec
aam
fisubr
mov
sbb
sub
shl
sub
icebp
cld
mov
cwde
ja
pop
(bad)
imul
(bad)
stos
jns
pop
iret
clc
movs
addr16
jmp
push
sub
ds
fwait
adc
xor
leave
fwait
ds
cmps
cmc
pusha
and
jmp
ficom
push
push
inc
cmp
mov
sbb
dec
mov
imul
lods
test
or
lds
sar
mov
xor
mul
(bad)
and
inc
stc
pusha
jecxz
lds
pop
push
cmp
(bad)
shl
xor
push
jecxz
loope
and
imul
xlat
vandpd
xor
push
ret
adc
movs
in
jl
inc
add
fmul
add
inc
or
and
add
clc
or
cli
das
sahf
pop
cmc
jmp
ins
inc
ds
jno
(bad)
ja
mov
test
enter
movs
push
out
push
push
xchg
(bad)
dec
push
cmps
cdq
cmps
(bad)
cli
fbld
fidiv
adc
pop
movs
mov
or
stc
mov
fild
sti
je
out
mov
aad
mov
sbb
jmp
imul
pushf
ins
xchg
test
mov
adc
dec
jle
xchg
clc
and
inc
push
retf
ins
xchg
js
jbe
push
jnp
mov
jne
cmp
ins
xchg
pop
outs
movs
lds
xchg
cmp
sub
adc
(bad)
xchg
mov
pop
push
test
(bad)
sbb
call
mov
jmp
shl
aam
loope
dec
mov
mov
push
retf
adc
cmp
cmc
les
pop
pop
push
add
pop
test
imul
inc
movs
mov
jns
dec
in
mov
clc
stos
add
cmp
jle
dec
rcr
aam
outs
mov
xchg
xchg
inc
push
cld
xlat
fs
pmaddwd
shl
popf
sub
js
sub
and
pop
sbb
inc
fsubr
mov
push
icebp
xor
fst
xor
pop
adc
or
in
push
or
push
mov
sub
ins
dec
ins
dec
popf
ins
sbb
sti
push
sbb
mov
aad
(bad)
adc
shl
jnp
or
jmp
stc
fs
fcmovbe
xor
jmp
push
(bad)
adc
cwde
ja
into
push
pusha
inc
aad
mov
mov
inc
cmp
xor
jnp
mov
cmc
mov
imul
fs
fs
imul
mov
in
int
cmp
xchg
xchg
pop
fnsave
push
repz
adc
(bad)
outs
dec
and
inc
sub
rcl
xchg
(bad)
jmp
pop
cmp
stos
push
sub
test
and
clc
mov
xchg
jle
push
fidiv
outs
lods
les
jp
mov
mov
fs
scas
popa
popf
pusha
jno
push
js
xor
enter
pushf
stos
in
xchg
mov
ficomp
outs
pop
and
jbe
pop
test
push
in
data16
je
mov
jmp
sub
inc
enter
jle
mov
(bad)
or
popf
push
fist
add
es
xchg
pop
xchg
add
lods
out
ss
sbb
push
dec
data16
pop
rol
sahf
in
pop
lock
pop
xchg
rcr
jge
rcl
dec
cwde
mov
(bad)
jp
jns
mov
int
push
std
xor
fwait
stos
(bad)
jecxz
cmp
mov
(bad)
fstp
mov
pushf
push
mov
add
stos
sbb
pop
dec
xchg
sub
lock
icebp
xchg
sub
cmps
call
rcr
out
mov
sub
dec
mov
(bad)
aas
(bad)
xchg
adc
dec
aaa
sti
outs
ror
or
xor
lea
ret
stos
repnz
mov
lods
cmp
aas
sbb
(bad)
enter
cmp
mov
push
or
dec
cmp
jecxz
push
xchg
add
xchg
jmp
dec
mov
cmp
mov
je
mov
and
jmp
idiv
and
jb
push
push
mov
and
stos
ds
fld
push
leave
pop
inc
call
sbb
mov
fist
adc
pop
xchg
jge
mov
pop
(bad)
mov
aad
adc
add
mov
sar
adc
clc
aam
inc
sbb
stos
clc
(bad)
mul
ja
outs
inc
dec
rcr
popf
enter
add
lock
jb
scas
cmps
aaa
das
call
cld
jns
and
shr
push
inc
scas
jo
outs
ins
dec
mov
inc
push
mov
jnp
jnp
mov
lock
xchg
jmp
lods
mov
addr16
or
mov
test
stos
pop
xchg
fist
push
xor
bound
test
add
into
sbb
adc
adc
adc
or
jg
push
loopne
mov
mov
xor
punpcklwd
mov
cs
aas
or
xchg
cmp
gs
sbb
jmp
shl
adc
mov
dec
jecxz
dec
add
repnz
loopne
and
inc
jb
(bad)
rol
int3
out
lods
data16
pop
loope
push
jmp
mov
aam
mov
pop
adc
jl
pushf
add
jb
or
sbb
fidiv
rcl
fdivrp
stc
dec
gs
pop
dec
imul
dec
inc
ret
push
jmp
xor
jnp
test
scas
es
dec
xor
ror
rcr
cmp
or
es
adc
push
cdq
inc
dec
in
inc
and
icebp
lds
jmp
shl
jmp
adc
sbb
mov
fnstcw
out
adc
test
mov
frstor
pushf
jmp
inc
call
retf
mov
pop
pop
mov
outs
xchg
out
ds
ins
jle
push
xor
xor
pop
sbb
pushf
push
test
sbb
mov
pop
std
pop
int
mov
std
or
and
dec
jno
pop
jmp
push
push
es
jmp
pop
je
adc
dec
jge
xor
lahf
mov
and
lahf
fs
jecxz
jb
ins
dec
test
rcr
js
nop
(bad)
inc
ja
popf
inc
test
push
outs
pop
mov
or
aad
loopne
movs
mov
pop
mov
stos
rol
jp
jno
gs
fisubr
push
ja
int
jb
jae
dec
scas
adc
sub
mov
inc
xchg
xor
sub
cli
pop
imul
pop
popa
inc
xchg
stos
mov
scas
ss
pop
xor
push
les
xchg
cmp
and
adc
adc
ins
push
sub
inc
in
dec
clc
xchg
mov
cli
jne
sub
test
leave
pop
into
cmp
pop
call
xchg
mov
dec
adc
mov
fst
xchg
cwde
xor
jl
mov
mov
add
cmp
xchg
fdivr
xchg
add
in
add
pop
outs
sub
dec
sti
xchg
inc
mov
fiadd
repz
pop
cli
in
jo
stos
push
inc
rcl
nop
add
dec
jo
sbb
cs
aad
loop
adc
mov
pop
mov
push
inc
ja
cld
pop
sti
cmp
test
loope
sti
lock
(bad)
std
outs
fst
(bad)
aad
stc
xchg
outs
cmps
adc
push
test
jle
arpl
add
jp
and
mov
cmps
adc
push
pusha
fwait
cmp
cmp
push
je
in
(bad)
fstp
aaa
cmp
loopne
cmp
dec
pop
xor
adc
and
mov
enter
arpl
mov
add
dec
xchg
xchg
mov
and
js
enter
or
cmp
jnp
push
pop
push
imul
test
fnstsw
sub
popa
lods
push
xor
inc
data16
jp
jnp
arpl
push
push
test
jp
adc
push
cmps
adc
jl
out
aad
sub
retf
ins
and
in
scas
retf
sbb
sub
test
scas
cld
pop
(bad)
jecxz
gs
mov
repz
xchg
stos
jo
(bad)
int3
stc
imul
imul
push
div
add
test
mov
jb
jne
add
in
dec
xor
or
into
imul
jae
pop
repnz
mov
sti
sub
enter
pop
inc
xor
sub
imul
aas
sbb
jnp
into
int3
popf
xchg
test
jge
push
add
sub
in
in
fst
test
sbb
test
lea
sub
es
adc
mov
cdq
add
rol
(bad)
jb
xchg
cmp
jb
and
movs
retf
js
and
push
shl
mov
mov
xor
xor
aad
inc
dec
jg
mov
sbb
ss
sti
push
jp
xor
arpl
push
mov
fdiv
sbb
push
add
mov
or
ret
pop
(bad)
int
mov
lods
ror
jle
xchg
cmp
out
aaa
mov
pop
mov
xor
mov
or
add
and
sbb
push
mov
test
xchg
push
pop
sbb
xchg
mov
mov
mov
inc
adc
jns
mov
outs
(bad)
push
lahf
and
inc
ins
push
jge
call
cmp
mov
or
fst
mov
sbb
or
rol
lods
mov
ss
jne
clc
lea
scas
stos
jle
aam
shl
iret
xlat
jbe
xchg
retf
jle
pop
sub
loop
js
mov
movs
xor
or
and
push
or
enter
rcr
les
cmp
aam
mov
xor
xchg
push
mov
shl
push
outs
dec
push
(bad)
pop
cmp
mov
push
jno
xor
das
dec
pushf
neg
inc
inc
out
cmps
rcr
clc
mov
scas
jmp
daa
sahf
lea
inc
cdq
cmps
or
enter
and
aas
js
xor
jg
sbb
jl
xchg
stos
pop
(bad)
in
cld
cs
bound
cwde
cs
pop
inc
scas
pop
xchg
fs
out
mov
xor
lods
sbb
loopne
popa
sub
call
bound
dec
push
jmp
lods
and
outs
mov
dec
and
mov
repz
jmp
cld
cli
(bad)
jbe
adc
loope
hlt
mov
sahf
test
xchg
mov
stc
imul
xlat
lea
loopne
cmps
xor
push
fnstcw
shl
jns
into
mov
stos
jmp
std
ret
adc
gs
stc
jg
push
(bad)
push
leave
inc
bound
dec
pop
inc
push
and
xor
lods
in
push
xor
push
out
ret
jmp
outs
push
ds
out
rol
(bad)
and
or
ja
(bad)
aaa
ret
and
xchg
cwde
or
mov
and
out
in
aas
(bad)
mov
mov
(bad)
push
add
pop
retf
nop
fadd
push
and
fist
cdq
mov
cdq
into
or
and
dec
xchg
pop
imul
push
lods
xor
mov
add
fdivr
push
popf
jle
in
inc
cli
adc
mov
xchg
inc
imul
cwde
mov
(bad)
inc
mov
adc
mov
lock
cmc
sti
mov
lea
jae
(bad)
adc
and
jecxz
mov
test
and
sub
sbb
add
sub
shl
fistp
les
std
mov
imul
jo
pop
pop
mov
jno
push
inc
push
mov
ret
pop
(bad)
pop
movsx
add
mov
cmp
fs
push
or
and
mov
loop
imul
in
es
mov
(bad)
mov
or
or
gs
pop
jl
inc
popf
pop
push
fimul
arpl
push
dec
add
push
(bad)
outs
mov
js
(bad)
cmp
hlt
fadd
ins
fist
adc
adc
mov
inc
and
jbe
push
jbe
cmp
ins
sahf
pop
lea
call
fwait
pop
mul
mov
movs
and
cmc
shl
mov
mov
je
xor
rcl
xchg
shl
sub
push
lods
sbb
arpl
mov
call
inc
xor
into
popa
aas
nop
test
ja
push
sahf
ret
ds
sub
(bad)
push
shr
fwait
add
sub
call
mov
lea
sar
cmp
push
or
inc
mov
fmul
(bad)
ror
fild
jmp
scas
in
aad
or
jl
xor
xor
jge
add
sub
cli
aam
ret
push
add
in
idiv
pop
push
scas
cmp
adc
test
cmp
jge
cdq
aaa
jecxz
add
sub
pop
cvttps2pi
mov
push
pusha
mov
popf
jns
adc
or
js
cmp
icebp
push
push
mov
jae
push
jmp
inc
and
in
mov
inc
fs
in
or
inc
or
mov
iret
xor
jmp
fwait
and
mov
out
ss
xchg
sbb
add
adc
in
sahf
fbld
test
cwde
cmps
hlt
mov
cwde
xor
adc
in
and
push
daa
or
and
jnp
xlat
add
sbb
out
mov
and
add
inc
add
shl
aad
or
out
add
dec
cmp
and
das
loope
into
pop
int
cs
cwde
popa
in
clc
xor
inc
icebp
dec
mov
loop
jbe
ror
sub
adc
std
inc
int
mov
out
mov
or
mov
fdiv
push
and
gs
gs
fistp
loopne
mov
mov
ror
xor
out
rcl
xchg
jmp
das
in
jle
or
inc
out
mov
mov
jmp
mov
dec
push
call
adc
(bad)
adc
push
jbe
stos
out
inc
add
ins
sbb
or
pushf
into
test
popa
cmps
(bad)
int3
call
jp
retf
inc
and
out
pop
out
and
inc
push
pop
call
push
cmps
in
ss
xor
add
cmps
and
in
dec
clc
pop
popa
dec
test
xchg
pop
aaa
js
add
outs
and
dec
mov
mov
mov
inc
lahf
push
or
cmc
lods
jl
out
push
in
cmp
(bad)
out
aam
mov
jecxz
aad
hlt
mul
dec
nop
jmp
in
push
aad
sub
and
add
mov
mov
inc
pop
or
fadd
ja
mov
mov
outs
dec
(bad)
clc
and
dec
(bad)
jle
pop
xor
fmul
movs
sbb
repz
xlat
jo
mov
xchg
dec
(bad)
(bad)
inc
xchg
stos
jg
out
stc
pop
jb
xchg
jecxz
or
xchg
mov
cmp
aad
lds
sbb
out
and
ins
sti
dec
push
daa
mov
and
pop
push
dec
(bad)
jae
xor
jle
lock
adc
sub
imul
into
jl
add
das
dec
retf
push
mov
mov
enter
gs
xchg
std
stc
icebp
pop
add
(bad)
(bad)
rcl
vmovd
fwait
cmp
jl
add
xchg
mov
inc
mov
mov
daa
icebp
iret
add
mov
rol
add
lds
cmp
hlt
cmps
and
xchg
push
and
in
pop
sbb
mov
mov
fimul
push
cld
xor
imul
or
add
adc
(bad)
xchg
std
in
jo
sub
mov
mov
pusha
push
lods
pop
dec
adc
ss
lea
imul
div
push
push
push
fs
and
stc
imul
shl
popa
sub
popa
es
inc
lods
and
jmp
bound
or
sar
fmul
std
mov
in
out
dec
push
mov
call
push
xchg
sub
sahf
xor
mov
dec
adc
push
dec
cwde
es
cli
fst
xlat
cmps
mov
xor
loopne
aad
jno
nop
or
mov
and
inc
add
popf
dec
jb
mov
ret
pop
fsub
(bad)
cs
into
out
mov
(bad)
xchg
mov
add
jecxz
push
push
sbb
xchg
fs
adc
aam
mov
sbb
mov
jns
test
stos
movs
add
call
outs
or
cmp
aad
fld
jo
add
ret
cmp
dec
pop
scas
xor
adc
pop
pop
sub
mov
cli
xchg
dec
dec
mov
inc
adc
sub
pop
pop
jmp
aas
pop
rcl
adc
aaa
ret
mov
pop
push
dec
nop
dec
loop
xor
(bad)
xor
pop
sub
and
xor
fisttp
cmps
inc
cld
inc
xchg
inc
push
push
jb
call
(bad)
jmp
or
test
jecxz
fbstp
clc
or
jno
js
mov
xchg
clc
fld
inc
inc
das
cmp
data16
arpl
or
ins
jb
and
(bad)
into
(bad)
push
jns
mov
aam
out
dec
jae
adc
xchg
out
and
rol
mov
cmp
xor
mov
imul
adc
sub
mov
gs
outs
cmp
cmp
xchg
daa
mov
data16
adc
leave
push
push
xor
jno
scas
fbld
cmp
dec
ja
jae
icebp
xor
mov
lahf
mov
int3
mov
pop
or
or
jge
inc
rol
pop
mov
add
inc
fidiv
push
out
and
or
in
mov
cmp
push
in
outs
pop
shl
(bad)
inc
push
push
add
sub
and
inc
cmp
jmp
test
mov
cmps
adc
cmps
ins
nop
aam
add
fist
into
jns
sbb
inc
call
out
sub
popa
pop
jb
(bad)
(bad)
sub
mov
cmp
sbb
jmp
es
clc
dec
ror
scas
push
push
jecxz
add
into
pop
cmps
mov
addr16
iret
loop
(bad)
add
outs
pop
iret
rcl
leave
push
dec
cmp
lods
mov
xchg
stc
pop
(bad)
hlt
mov
or
xchg
in
bound
retf
add
lods
popf
adc
cdq
pusha
sub
aad
jecxz
int3
js
mov
sbb
(bad)
dec
call
jl
out
inc
jmp
mov
push
pop
nop
fisubr
int
clc
push
lods
or
cld
(bad)
popf
sbb
and
jno
sub
push
retf
icebp
int
dec
cmp
mov
xlat
pop
jnp
mov
adc
test
sbb
lahf
pop
sbb
pop
inc
mov
jbe
arpl
mov
inc
jmp
xchg
dec
movs
push
ss
sub
call
pop
xlat
sub
and
jl
arpl
icebp
pop
mov
or
call
and
ds
leave
js
mov
je
div
xor
ficom
xor
inc
jp
cli
mov
imul
enter
sbb
mov
loopne
dec
cmp
jmp
push
push
retf
test
adc
(bad)
sub
push
cmps
nop
push
mov
dec
adc
out
mov
cmps
ins
xchg
xchg
aas
push
pop
aad
mov
or
cdq
xlat
push
hlt
and
lods
pop
pop
or
ins
pop
xchg
pusha
or
xor
out
repz
cmp
add
aad
pop
fild
jns
xor
add
arpl
and
hlt
sub
or
mov
mov
ins
cmp
iret
adc
pop
call
mov
mov
xor
into
and
fnstsw
bound
cli
and
jo
or
mov
sahf
or
mov
ds
arpl
adc
mov
xlat
clc
push
jmp
sbb
scas
imul
or
cmc
dec
dec
js
popa
pop
inc
cdq
mov
rcl
cli
imul
shl
pop
push
xor
jmp
or
push
mov
or
xor
outs
ret
(bad)
movs
fbstp
int3
mov
pop
sub
mov
sbb
mov
jno
add
cmp
dec
iret
out
and
dec
dec
push
iret
aam
mov
xor
cmps
fcom
ficomp
sbb
lahf
(bad)
in
dec
mov
push
pop
and
retf
dec
or
and
cmp
jle
cdq
jae
sbb
daa
cmp
sbb
push
aaa
mov
ja
int3
mov
add
inc
mov
or
mov
cmp
out
cli
cld
ss
in
stos
sti
popf
adc
imul
inc
fwait
mov
sub
jns
mov
xchg
inc
scas
out
xchg
lea
jns
adc
(bad)
inc
dec
cs
das
adc
stos
outs
inc
sub
inc
(bad)
or
gs
mov
jbe
repnz
pop
add
fwait
and
cmp
out
xchg
retf
or
add
je
pop
inc
adc
jge
loopne
pop
inc
test
push
push
(bad)
fisttp
rcr
mov
push
jecxz
push
sub
mov
outs
scas
adc
or
or
inc
mov
lods
cdq
iret
mov
sub
les
retf
cli
fdiv
in
xchg
dec
xor
jnp
rol
cmps
ror
lahf
cmp
imul
xchg
test
imul
add
inc
test
imul
xchg
push
les
xor
fld
movs
fldln2
and
pop
xor
jl
(bad)
std
inc
or
les
inc
jno
xor
xor
mov
popf
fistp
jmp
repz
xchg
pop
inc
jno
inc
mov
enter
arpl
xor
push
int3
test
daa
outs
mov
int3
sbb
jmp
jbe
and
jne
fistp
add
fs
pop
push
pop
jmp
or
and
jns
fld
jmp
jge
popa
sti
(bad)
les
pop
jp
aad
jecxz
ficom
mov
mov
inc
push
pop
jle
(bad)
(bad)
mov
mov
xchg
dec
popf
adc
jb
popa
retf
pop
imul
and
fldenv
loopne
jo
(bad)
cld
and
push
imul
mov
lods
out
fsubrp
push
xchg
inc
mov
push
int3
sbb
test
mov
aaa
dec
xchg
and
iret
mov
outs
outs
cmc
(bad)
push
push
jmp
xchg
aaa
out
(bad)
shr
xchg
xchg
cmp
ficom
and
adc
push
or
pop
(bad)
mov
mov
push
leave
xchg
sbb
mov
and
mov
adc
jnp
pop
jp
push
in
or
lea
call
popf
jmp
cs
test
pop
mov
div
add
cmovns
pushf
lods
adc
popa
leave
pusha
dec
ror
in
mov
sar
sub
or
cmp
jge
sub
repz
cmp
push
xchg
mul
ret
retf
add
ret
push
adc
mov
fld
cli
mov
aam
ins
xor
and
in
fs
call
inc
mov
push
sbb
xchg
lds
daa
sbb
push
and
and
sahf
int3
sbb
pop
div
mov
push
aaa
shl
icebp
scas
mov
dec
mov
sbb
dec
lahf
sbb
jnp
or
push
es
cdq
mov
cwde
mov
enter
push
jl
scas
jecxz
ins
or
rcl
pop
hlt
sbb
jne
mov
dec
fmul
sbb
cs
loopne
das
inc
not
adc
push
mov
popa
scas
(bad)
(bad)
ss
jno
sbb
add
(bad)
bnd
imul
imul
push
call
bswap
es
test
movs
sub
lock
pop
or
stos
adc
daa
ins
neg
jb
loopne
jbe
adc
inc
ret
not
inc
fisubr
in
push
in
call
jae
dec
fdiv
lods
mov
dec
out
jp
test
and
xchg
mov
les
test
test
imul
(bad)
(bad)
mov
ror
or
clc
push
xchg
xor
ins
sbb
retf
add
fmul
out
hlt
add
jns
mov
or
xor
pop
(bad)
cmc
into
retf
call
fiadd
es
inc
sti
mul
xlat
imul
xchg
xchg
jle
jle
int3
mov
and
mov
imul
(bad)
inc
movs
sar
xor
mov
cmps
pop
jo
inc
aas
out
push
adc
cmps
inc
(bad)
fcom
mov
and
hlt
daa
test
and
imul
cmp
sbb
fsubr
icebp
xor
add
outs
mov
daa
imul
xchg
fs
inc
js
imul
imul
fist
sub
stos
fdivr
pop
dec
scas
mov
add
shr
jle
inc
push
xchg
add
pusha
mov
shr
mov
jbe
and
test
jae
mov
xor
lahf
es
js
xchg
pop
jae
jmp
scas
jne
and
jae
fstp
or
pop
int
xchg
sub
sbb
repnz
scas
hlt
pop
inc
inc
test
cld
ds
aam
ficom
pop
mov
add
(bad)
enter
xchg
nop
(bad)
movs
stos
sti
xchg
sub
cmp
sbb
sahf
pop
jb
mov
jo
sub
inc
fbstp
inc
stc
retf
lahf
add
pop
(bad)
xchg
call
je
jecxz
jl
push
rcr
add
shr
mov
pop
xor
inc
jo
retf
pop
pop
rol
inc
mov
(bad)
pop
inc
movs
mov
inc
cs
int3
mov
sub
xlat
movs
cmp
leave
xor
and
loopne
ins
adc
fwait
scas
sbb
iret
mov
and
xchg
inc
stos
loop
enter
fwait
cmps
push
jmp
loopne
imul
xor
shl
mov
int3
inc
out
mov
(bad)
movs
in
mov
pop
jge
sub
mov
adc
bound
dec
jge
pop
in
add
mov
fld
fs
test
(bad)
dec
in
fld
loope
shl
mov
leave
mov
sti
imul
nop
mov
add
dec
adc
pop
push
xor
ret
push
push
mov
sbb
cmps
dec
pop
add
push
mov
in
cli
fucomi
add
loopne
mov
aas
pop
lea
call
out
ret
daa
lods
inc
sub
and
outs
pusha
adc
or
(bad)
cli
and
inc
pop
call
push
lods
push
xchg
inc
out
mov
push
movs
and
or
jge
jge
test
xchg
cmp
inc
xchg
bound
shr
mov
mov
sub
in
inc
icebp
ficom
add
jp
dec
stos
mov
int3
ficom
jno
repz
cs
mov
sbb
bsf
mov
iret
jmp
cmp
add
cmp
fdivr
sti
push
cmp
aas
loopne
dec
or
add
mov
and
neg
sbb
movs
lods
inc
push
stc
and
std
inc
xchg
sbb
sbb
pop
mov
jg
push
ins
sbb
mov
push
cli
or
or
xor
mov
and
lods
push
sar
cld
div
fsubr
cmp
das
lods
test
ins
ins
fcmovnbe
fld
xor
adc
dec
jg
mov
mov
xor
call
xchg
fisttp
sbb
or
movs
arpl
adc
das
in
adc
das
xchg
xchg
inc
and
stc
test
push
sbb
mov
xchg
sub
popa
in
cmp
mov
aas
pop
inc
or
retf
les
(bad)
xor
mov
xchg
gs
repz
adc
jne
xchg
outs
push
in
and
mov
xor
dec
jnp
mov
retf
push
cmp
shr
fnstenv
lahf
inc
cwde
cwde
and
push
and
sbb
pop
xchg
imul
rcr
je
jb
jno
adc
(bad)
in
dec
lods
push
xchg
loopne
not
adc
or
push
ret
bound
mov
push
xchg
mov
test
repnz
lods
fwait
pop
add
ins
scas
stos
lods
(bad)
ret
cmps
cmp
adc
hlt
rcl
out
repnz
mov
xor
mov
pop
fstp
outs
sub
out
(bad)
and
jne
sbb
into
push
outs
mov
out
adc
cli
fld
mov
test
or
out
adc
in
ins
dec
cmp
xchg
pop
js
mov
icebp
pop
adc
repz
cmp
push
aaa
push
ret
mov
cld
and
mov
sub
dec
pusha
or
mov
std
popa
sub
fadd
mov
aaa
out
cmc
in
retf
mov
out
clc
sub
xlat
gs
nop
push
repz
aam
jg
jno
ss
push
dec
jno
stos
fild
inc
icebp
push
(bad)
mov
and
das
das
or
cmc
pop
xchg
xchg
ss
jmp
xchg
nop
and
(bad)
mov
inc
outs
sbb
rol
jo
xchg
adc
clc
ror
ficomp
mov
mov
and
outs
call
cmps
push
es
leave
push
imul
scas
inc
dec
unpcklps
neg
mov
mov
inc
popf
(bad)
js
xchg
jae
in
popf
int
pop
retf
shl
push
mov
pop
mov
mov
(bad)
(bad)
and
push
ins
jge
mov
int3
sahf
jmp
pop
xor
mov
(bad)
in
jns
add
sub
sahf
out
inc
jg
and
les
dec
sbb
hlt
fst
or
sub
adc
imul
cmps
or
xor
inc
pop
dec
fild
out
push
sbb
cmc
test
pusha
(bad)
push
movs
dec
sahf
xor
fdiv
stos
fisub
pop
adc
lea
add
movs
arpl
imul
mov
lods
xor
sbb
enter
jmp
test
gs
jl
les
add
div
xlat
dec
outs
mov
div
xor
lds
into
jb
pop
pop
icebp
fldcw
movs
sub
pop
push
and
xor
push
stos
(bad)
dec
aas
push
mov
ffree
outs
mov
push
bound
les
sbb
mov
pop
movs
cs
adc
retf
push
jg
push
call
sbb
inc
xor
mov
push
mov
xor
pusha
and
or
iret
push
mov
imul
or
mov
or
adc
mov
pop
cmp
inc
push
daa
leave
(bad)
sahf
nop
ins
les
cmps
mov
adc
gs
adc
lock
in
add
lds
mov
inc
xchg
clc
adc
xchg
xor
adc
sbb
jmp
xchg
or
scas
lods
aaa
mov
cmp
xchg
adc
sbb
add
(bad)
adc
cmp
idiv
leave
out
sub
fsubr
in
(bad)
loopne
xchg
js
and
neg
mov
push
mov
and
sbb
push
adc
cmp
xchg
add
inc
ret
xchg
and
ins
cmps
add
test
push
inc
adc
retf
imul
sbb
pop
or
pop
fist
test
mul
ret
dec
ret
into
mov
lods
rol
add
ins
pop
jb
add
lods
or
bound
(bad)
xchg
inc
ret
xchg
pop
pop
cmp
pop
and
push
and
mov
pop
add
bound
jns
jmp
adc
retf
retf
outs
std
test
mov
or
or
dec
lock
xchg
push
cmovle
adc
and
inc
stos
dec
add
mov
popf
mov
(bad)
mov
ss
xchg
aad
xor
jge
jg
ror
bound
cmp
inc
mov
cs
(bad)
inc
pop
sti
shl
mov
jnp
push
out
pop
sub
push
sbb
pop
in
lods
push
outs
iret
add
add
mov
add
or
(bad)
out
sbb
jecxz
scas
shl
iret
inc
mov
imul
rcr
pop
pop
xchg
pop
adc
mov
push
sar
repnz
fstp
adc
xor
add
and
cmp
pop
loop
arpl
aam
repnz
cmps
jle
xchg
push
cmp
popa
cmp
sti
jns
push
push
adc
cmp
mov
int3
(bad)
cmp
test
fs
addr16
push
add
cmp
jge
jae
fistp
cwde
outs
cwde
retf
pop
xchg
mov
mov
int
mov
leave
ja
call
cmp
test
dec
fdiv
adc
mov
mov
stos
dec
jo
in
xor
add
sbb
mov
inc
inc
mov
xchg
test
iret
in
pop
pushf
pop
mov
lea
xchg
je
mov
dec
je
nop
test
push
jl
jle
pop
xchg
mov
cmc
stc
add
int
mov
arpl
retf
movs
icebp
pop
sub
popa
mov
dec
xor
jp
lods
cmp
cmp
ror
xor
loopne
xchg
inc
clc
adc
cmps
sbb
gs
leave
sbb
dec
pop
iret
mov
cmp
xchg
mov
aad
push
or
bound
mov
pop
xor
dec
or
xchg
loop
mov
(bad)
sbb
js
adc
les
mov
mov
mov
xor
push
test
inc
scas
pop
lods
movs
jmp
bound
ror
f2xm1
sub
es
cdq
inc
or
dec
push
mov
aas
movs
pop
jno
sub
dec
and
pop
rcr
inc
jae
mov
mov
jb
mov
neg
xchg
out
shl
(bad)
cmovb
jmp
popa
and
xor
sbb
test
xlat
jle
lahf
scas
rcl
adc
test
ror
stos
mov
fcmovnu
or
add
and
mov
inc
inc
js
stos
idiv
aam
in
pop
pop
add
imul
std
fisubr
xor
jno
ficomp
pop
cwde
adc
or
inc
cmp
mov
movs
push
sbb
cmp
mov
nop
mov
add
shl
add
xchg
aas
pushf
mov
repnz
shl
mov
jns
mov
adc
enter
je
and
jmp
mov
std
(bad)
out
daa
sbb
dec
add
cmp
xor
push
shr
or
jb
test
xor
xor
and
or
(bad)
mov
cmp
jp
(bad)
and
and
mov
outs
add
(bad)
fisubr
mov
mov
mov
cmp
mov
ficom
jmp
(bad)
xor
add
pop
adc
es
retf
push
mov
mov
xor
fmul
adc
mov
mov
fwait
stos
sub
out
cmp
sbb
ret
push
inc
cmp
pop
adc
ins
sub
cmp
popf
scas
dec
ror
mov
sar
test
fwait
or
movs
int3
inc
jno
jnp
xchg
dec
mov
repz
scas
cwde
mov
push
sbb
out
sub
loop
jnp
inc
into
test
jo
pop
mov
fs
xchg
pop
loopne
test
cmp
fstp
pop
mov
mov
lods
or
mov
cwde
out
xchg
mov
test
adc
push
push
cmc
mov
stc
mov
scas
jle
pushf
push
inc
das
cli
nop
pop
mov
fcmovbe
xor
ret
xor
(bad)
xchg
sbb
mov
mov
pop
push
cmp
or
jmp
std
inc
pop
rcr
add
add
stos
adc
stos
leave
cmp
inc
jmp
fsubr
icebp
test
popa
cmps
ja
push
out
test
jbe
mov
test
cmc
sahf
jno
sub
jo
xor
or
icebp
jmp
cs
out
pop
mov
lods
cmc
fiadd
mov
mov
jno
iret
pushf
jns
pop
inc
mov
loope
gs
cmp
jns
inc
mov
xor
push
movs
pop
jp
add
int3
ficomp
xor
cli
sbb
xchg
jno
jno
(bad)
out
mov
xchg
fwait
stos
dec
enter
fstp
jno
adc
mov
retf
popf
xor
mov
test
rcr
popa
dec
not
das
push
sti
sbb
jmp
adc
jmp
mov
inc
fiadd
push
fidiv
jp
pop
push
push
pop
leave
or
pushf
dec
retf
ss
jnp
push
std
test
retf
les
xchg
cwde
jmp
pop
into
cmps
inc
inc
lock
loopne
outs
add
inc
push
mov
or
sbb
in
stos
inc
cmp
pop
sbb
pop
sbb
in
xchg
ficom
inc
add
sbb
mov
mov
mov
pop
or
call
xor
in
stc
ret
jle
retf
sub
push
inc
rcl
push
jl
stc
addr16
jne
mov
jno
loopne
cdq
test
push
push
mov
mov
jae
mov
mov
stos
ds
std
pop
sbb
mov
iret
mov
inc
jnp
mov
dec
out
dec
nop
push
dec
in
rcl
dec
movs
dec
pop
out
aad
inc
mov
imul
aam
test
mov
dec
xor
or
pop
arpl
mov
arpl
stos
addr16
mov
sti
cmp
iret
cmp
adc
int3
or
rcr
push
push
dec
and
or
cdq
iret
and
sub
jo
rcr
mov
pop
pop
add
inc
lock
pushf
fistp
shl
adc
out
mov
inc
cmps
cdq
ja
and
cmp
pop
inc
cmp
mov
test
push
mov
push
xor
cmc
xor
push
movs
hlt
push
mov
movs
push
ret
dec
inc
lods
mov
jo
push
jg
sbb
mov
sub
(bad)
jle
fadd
mov
retf
sti
(bad)
adc
cmp
test
cs
pop
stos
cmp
mov
inc
in
mov
mov
mov
pop
add
mov
fiadd
mov
sar
or
mov
retf
add
jae
scas
jle
fbstp
pop
and
inc
mov
mov
xor
and
push
jb
inc
shl
aaa
jmp
mov
xchg
dec
xchg
push
cld
retf
dec
jg
push
pop
into
xchg
or
lods
sub
mov
test
jg
push
icebp
lea
push
add
dec
mov
out
push
dec
rcl
sbb
sbb
and
jle
ss
cmps
mov
ss
rcr
xchg
mov
inc
std
pop
lahf
(bad)
pop
add
ror
sbb
inc
outs
int
fsubr
sbb
lock
push
sub
aaa
or
add
daa
and
cmc
mov
sub
inc
and
cmps
ret
mov
xor
fmul
mov
jge
cli
jmp
loop
jno
add
mov
add
xor
clc
pop
jbe
lods
inc
setle
pop
aad
loope
inc
xor
mov
out
mov
test
xor
je
push
adc
fwait
out
mov
(bad)
and
or
push
mov
inc
sub
mov
xlat
in
bound
sbb
popf
push
inc
adc
bound
pop
pop
sub
xor
int
pop
dec
(bad)
mov
pop
add
jbe
xchg
sbb
add
adc
add
gs
jle
pop
sub
inc
sub
and
(bad)
das
mov
sbb
mov
jmp
aaa
jmp
xchg
cmp
int3
sti
iret
mov
je
outs
test
fcomi
in
stos
push
out
ds
add
cmp
mov
adc
gs
sub
add
out
mov
cmps
xchg
push
mov
retf
(bad)
pop
pmuludq
shl
dec
int3
adc
sbb
aas
pop
add
inc
inc
adc
adc
xchg
call
std
ins
sbb
or
jo
xchg
mov
dec
cs
cmp
or
sahf
test
sbb
and
jecxz
pop
sub
mov
xor
imul
repz
out
pop
call
popa
inc
test
gs
mov
jmp
jmp
pusha
loope
(bad)
push
mov
leave
not
adc
and
jb
mov
push
push
in
cmps
cwde
pushf
jg
retf
fsubr
cmps
mov
pop
popa
sub
ret
call
xchg
or
(bad)
jmp
xchg
nop
mov
shl
and
ds
sbb
mov
je
mov
hlt
push
rcr
jge
pop
iret
sahf
stos
add
jnp
fimul
jp
pop
push
(bad)
mov
mov
jp
aas
(bad)
cmp
or
cs
cmp
cmps
fwait
imul
and
mov
(bad)
out
in
icebp
lods
xor
and
cmps
mov
out
das
inc
add
push
push
dec
sub
pop
add
sahf
in
fdivr
sub
dec
ror
xchg
and
push
test
push
sbb
push
mov
clc
pop
ds
dec
xchg
retf
ins
nop
pop
fcomp
cli
dec
push
stos
xchg
jns
pop
jno
(bad)
sbb
inc
stos
stos
hlt
cmp
mov
xchg
retf
cmc
pop
push
jle
sub
into
push
xchg
fwait
popa
ja
jmp
xchg
pop
(bad)
xor
iret
and
sbb
(bad)
cmp
inc
pop
cmps
mov
dec
out
loope
dec
add
getsec
xor
lods
sbb
cmp
popa
inc
mov
push
inc
push
gs
xor
xor
mov
movzx
and
jle
ja
fcomi
lea
pop
dec
ret
je
add
div
call
jb
push
mov
outs
ins
inc
data16
inc
jmp
jae
jbe
xor
push
int3
add
or
leave
mov
out
std
sbb
in
xor
push
fwait
clc
dec
mov
pop
in
cmc
xor
pusha
jg
sar
pusha
jne
clc
push
je
popa
jmp
xchg
or
xchg
dec
loop
mov
dec
jp
and
sub
mov
(bad)
clc
loope
pop
jbe
ffree
icebp
push
(bad)
loopne
movs
clc
push
and
push
repnz
lock
xchg
inc
sti
test
(bad)
mov
inc
inc
add
ins
xor
sub
test
inc
mov
inc
sbb
dec
(bad)
jp
dec
arpl
lahf
xchg
dec
and
cld
add
sbb
sar
mov
push
lods
or
(bad)
add
es
lahf
inc
mov
pop
mov
(bad)
jbe
fst
xchg
dec
pop
inc
xchg
popa
cmps
inc
add
mov
xchg
push
adc
ficomp
cmps
lods
push
clc
mov
adc
mov
sub
addr16
std
cmc
sub
or
sub
daa
xor
inc
and
push
arpl
cs
inc
fsub
pusha
sub
xchg
mov
pop
xchg
in
ds
push
loopne
cmp
in
cmps
gs
dec
push
retf
out
scas
pop
cmps
mov
ss
or
jp
lea
lods
add
js
mov
mov
iret
adc
adc
sbb
out
mov
sub
and
test
or
mov
test
or
retf
or
retf
clc
aad
dec
xor
pop
mov
outs
cmp
je
inc
nop
leave
out
shl
add
aad
push
arpl
and
sub
xor
xchg
je
or
test
test
push
je
test
scas
cli
jno
push
jo
ja
mov
scas
mov
dec
dec
in
push
in
(bad)
push
fisubr
jae
loope
push
inc
add
or
mov
push
dec
aad
lock
mov
ret
in
cmps
and
int3
sti
mov
cmp
pop
push
sar
inc
(bad)
xchg
or
push
push
popf
fisttp
sub
mov
repz
pusha
or
sub
inc
aas
sbb
(bad)
cmps
push
loope
push
(bad)
jns
inc
jno
sahf
jle
sub
ror
sub
pop
or
sub
push
fwait
ja
stos
rcr
mov
retf
jl
shl
aad
xchg
movs
sub
pop
test
out
cdq
cmp
repnz
mov
sub
stc
test
mov
lds
scas
pop
call
pop
xor
fdivp
lahf
pop
nop
mov
pop
or
js
mov
loopne
dec
sahf
cmc
and
je
jns
pop
sbb
jg
pop
jbe
jp
mov
aad
or
jae
scas
push
test
test
mov
fs
sub
mov
lods
dec
js
out
xchg
daa
push
jb
sbb
jnp
pop
push
ret
aad
ja
cwde
cmps
mov
xor
add
mov
fidiv
sub
dec
test
push
jns
cwde
cld
jae
mov
out
sbb
xor
ret
out
dec
xchg
dec
punpcklbw
stc
icebp
adc
aad
int3
cmp
jns
push
stos
test
pop
hlt
out
mov
mov
out
jle
rcr
inc
outs
adc
(bad)
xchg
dec
pop
nop
xchg
or
outs
dec
test
cmp
xlat
add
mov
push
adc
aas
sub
pop
mov
jle
jmp
cwde
fadd
cmp
mov
jmp
xor
inc
mov
inc
lods
gs
int
out
bnd
jmp
movs
dec
rcr
push
pop
push
mov
mov
popa
dec
pop
sub
loop
sub
xor
mov
aas
jmp
arpl
and
xchg
rol
mov
jne
mov
dec
pop
leave
mov
mov
cdq
adc
adc
out
cwde
sbb
into
jge
cdq
sbb
cmc
sub
ret
mov
sbb
fwait
cld
jl
and
mov
xchg
das
ins
pop
push
xchg
pusha
imul
mov
mov
xor
fldenv
mov
fwait
xchg
inc
out
fs
and
shr
ins
in
cdq
xchg
rcl
(bad)
scas
mov
retf
pop
bound
jle
movs
mov
push
mov
xor
call
jl
lock
arpl
xchg
aaa
shl
mov
jmp
sub
imul
pop
int3
hlt
push
inc
mov
or
jp
iret
push
add
pop
scas
xor
push
dec
xor
(bad)
xor
mov
in
push
push
add
adc
xchg
sbb
inc
enter
rcl
lock
test
popf
push
call
mov
push
adc
xchg
sbb
addr16
xchg
gs
ficom
dec
in
sbb
push
mov
pop
retf
in
scas
sub
or
in
mov
mov
cwde
js
pop
popa
push
(bad)
sbb
imul
sbb
test
cmp
push
mov
loop
movs
add
cld
push
call
rcl
mov
push
cli
fs
scas
jno
fistp
xchg
mov
(bad)
cmc
cli
fadd
add
or
scas
pop
cmps
xchg
lss
out
mov
jge
adc
sub
jb
dec
push
fbstp
or
cmp
dec
dec
shl
fs
xor
in
(bad)
in
pop
je
lea
mov
sub
outs
adc
pop
leave
aas
pusha
js
jns
add
data16
sar
stc
push
sti
int
cdq
daa
fcmovnb
push
cs
scas
rcr
cld
je
sub
xchg
xchg
in
mul
xchg
push
popf
mov
cmp
call
jmp
inc
fld
pop
fcomp
pushf
jns
(bad)
movntps
sub
mov
ins
jmp
jge
aad
push
sbb
pushf
hlt
inc
les
aam
jmp
pop
repz
add
dec
dec
out
inc
call
addr16
xchg
push
shr
fs
mov
sar
xor
pop
jbe
int3
in
mov
pop
clc
jb
mov
dec
pushf
jnp
jo
enter
add
mov
inc
pushf
xchg
daa
add
mov
inc
xor
rol
imul
imul
hlt
popa
aaa
dec
xor
sti
cmp
push
es
xlat
(bad)
(bad)
stos
aas
add
mov
push
xor
add
adc
dec
mov
in
or
and
inc
fldenv
cmp
and
sbb
xor
cmps
rol
dec
retf
mov
daa
leave
bound
and
cld
push
out
ss
sbb
dec
mov
(bad)
xchg
(bad)
cld
push
scas
pop
cmp
sub
and
repnz
push
dec
mov
fiadd
in
jp
pop
cmps
xchg
enter
mov
jae
stos
lds
imul
out
mov
xchg
mov
inc
sti
call
test
leave
add
lods
(bad)
sub
cmc
dec
mov
cwde
pop
xchg
pop
ds
mov
inc
sub
mov
mov
into
mov
fs
lds
push
sbb
shr
movs
arpl
(bad)
add
ret
retf
cmp
jo
pop
lock
ins
xor
and
ins
dec
or
jge
sbb
inc
xchg
jecxz
jmp
xlat
stc
in
icebp
cmc
sub
adc
mov
dec
repnz
adc
mov
popf
push
xor
aam
adc
push
outs
add
push
dec
dec
xchg
jle
movs
cmp
mov
sbb
jne
lods
repz
xlat
loope
in
ss
mov
iret
aaa
enter
nop
test
scas
lods
test
ins
leave
add
cmp
js
push
pop
mov
lods
push
daa
enter
cmp
jmp
inc
sbb
mov
mov
sar
ds
fnsave
repnz
repz
pop
cmp
mov
ret
sub
xlat
stc
movs
inc
cmp
ja
mov
fcomp
arpl
jge
xchg
dec
idiv
mov
iret
add
stos
sbb
inc
ficom
test
dec
(bad)
aad
dec
int3
adc
push
xchg
mov
pop
test
dec
sahf
ss
mov
jle
jne
add
xor
cmc
fs
or
mov
loopne
into
mov
mov
or
push
inc
inc
add
jne
inc
or
rcl
sbb
fmul
clc
or
adc
(bad)
fistp
scas
mov
add
xchg
es
add
push
test
stos
(bad)
xchg
imul
lods
pop
int
mov
jno
aaa
fnstenv
fisttp
sub
push
aam
mov
adc
add
xchg
or
test
cmc
and
jnp
test
xchg
repz
stc
adc
jnp
fcmovbe
and
cmp
cmc
lock
sbb
mov
mov
sub
mul
jg
pop
sahf
xchg
jbe
sub
or
gs
cs
xchg
xor
push
pop
lods
aad
push
out
sahf
jnp
pop
les
int
gs
lds
pop
jns
lds
sbb
mov
outs
mov
cmc
inc
test
neg
pop
gs
jp
sbb
mov
push
in
mov
and
or
pop
sub
sbb
cmps
and
sbb
ret
xor
adc
mov
test
pop
call
dec
not
adc
lds
fwait
sbb
sahf
sbb
arpl
pop
aaa
sbb
pusha
idiv
sbb
aam
fdiv
dec
and
mov
mov
jae
movs
sbb
stos
jb
out
test
test
dec
mov
xor
mov
push
mul
(bad)
bound
dec
jb
mov
pusha
or
xchg
xor
ins
fwait
pop
shl
repnz
jge
and
add
out
xor
sub
mov
mov
adc
add
ins
fwait
or
mov
fiadd
call
mov
xchg
(bad)
dec
hlt
add
(bad)
dec
mov
push
mov
push
cmc
pop
ret
mov
outs
dec
(bad)
pushf
and
fnsave
out
jle
inc
cdq
cmp
loope
adc
jmp
fnstsw
pop
adc
es
adc
and
xchg
(bad)
push
ror
jmp
aam
pop
iret
lock
call
scas
push
(bad)
mov
xlat
or
sub
rcl
pushf
imul
xlat
das
xor
or
inc
mov
imul
dec
jb
xchg
js
ret
addr16
sbb
sub
pop
jecxz
fnstcw
call
push
pop
pop
int
mov
lahf
push
je
ds
mov
adc
jb
push
addr16
movs
or
sub
scas
(bad)
adc
retf
jno
jno
inc
and
test
pop
cdq
mov
mov
fst
mov
ror
neg
test
in
or
jno
xlat
jnp
mov
mov
xchg
push
ror
mov
ret
call
push
rcr
or
mov
scas
xor
clc
pop
mov
bnd
into
or
xchg
cdq
push
lahf
sub
xchg
leave
je
jmp
stos
and
and
sub
and
pushf
stos
inc
jo
adc
imul
cmp
pop
(bad)
jo
mov
pusha
retf
into
dec
les
test
and
dec
cmp
xchg
add
sub
mov
add
repz
fild
test
frstor
mov
retf
fsubr
cmp
scas
dec
sahf
aas
(bad)
mov
lds
outs
mov
xchg
popa
sbb
loop
je
pop
pop
lea
add
jno
in
mov
fwait
in
xor
out
push
mov
inc
cdq
cmp
adc
lds
cmps
push
in
sbb
cmc
scas
pop
out
je
jmp
and
mov
mov
pop
je
scas
shl
les
mov
jge
dec
xor
in
fsub
push
sti
aas
dec
inc
out
pop
mov
icebp
xor
xchg
mul
add
push
lods
ret
bnd
ret
sub
jbe
adc
mov
into
jns
push
mov
or
mov
popa
adc
sti
movs
sbb
ins
sti
(bad)
push
mov
fucomp
rcr
mov
xor
jmp
dec
cmps
jb
push
arpl
imul
xchg
push
sbb
sbb
mov
sbb
cld
xlat
out
out
xchg
and
xchg
sbb
aas
fucomi
cmp
imul
(bad)
loop
fisubr
add
lds
test
adc
pop
loop
jmp
(bad)
(bad)
jecxz
sbb
or
jp
data16
or
sahf
ins
adc
or
shl
pop
jbe
or
cmps
shl
sub
out
aas
pop
xchg
mov
jb
add
mov
sbb
(bad)
popa
push
mov
jne
mov
jns
xchg
retf
and
cmp
cmps
fsub
pop
mov
lock
rcr
mov
scas
xor
rol
and
inc
and
sbb
cld
pop
add
movs
adc
inc
shr
(bad)
in
out
and
inc
stos
out
daa
inc
lods
mov
js
fnstenv
adc
add
fucom
sar
data16
cli
outs
cmp
mov
hlt
jae
je
aaa
jl
in
jge
ret
jg
movs
popa
or
mov
mov
(bad)
lods
push
xchg
paddsw
and
mov
jl
lods
loop
jo
inc
pop
mov
ins
and
push
or
cmps
stc
mov
push
pop
test
and
mov
es
add
push
push
push
pop
hlt
out
cmps
dec
addr16
add
inc
sub
aam
repz
mov
mov
(bad)
movs
(bad)
fidiv
ret
pop
add
retf
stos
fcomp
sti
(bad)
dec
ss
mov
sub
dec
lahf
clc
nop
xor
(bad)
xchg
ror
dec
pop
pop
dec
mov
pop
cmp
pop
ds
mov
fwait
sbb
lods
test
inc
je
pop
sbb
jmp
movs
loope
popa
ss
gs
pop
gs
je
dec
xor
add
in
and
adc
enter
xchg
and
aam
adc
sti
(bad)
inc
pop
mov
lods
sbb
jbe
push
and
mov
ror
rcl
pop
ins
repz
push
sahf
fisubr
dec
out
sub
sub
icebp
push
sbb
or
gs
arpl
mov
adc
addr16
mov
mov
pop
nop
es
jno
hlt
lahf
pop
or
cmp
mov
retf
xor
imul
enter
jmp
pushf
xchg
cmc
or
jl
jne
and
jmp
out
cwde
dec
fs
loope
dec
mov
ret
xor
in
mov
(bad)
ds
les
mov
daa
sti
dec
int
mul
lock
xchg
jmp
add
cmc
and
or
movs
lea
clc
outs
inc
sahf
sub
ins
shr
shr
or
ds
pop
mov
bound
pop
pop
mov
out
aas
sbb
into
pushf
mov
outs
sub
dec
or
je
out
ss
jge
js
add
jmp
dec
shl
push
dec
adc
hlt
scas
sahf
jnp
or
out
mov
jns
pop
and
ret
arpl
pop
xchg
not
shl
sub
inc
xor
dec
push
mov
ret
mov
fadd
jbe
push
sbb
(bad)
fdivr
adc
mov
cmp
or
lds
ret
inc
xor
std
in
pusha
pop
clc
aad
sbb
adc
daa
movs
jmp
pushf
in
mov
fs
jo
jbe
pop
jle
imul
jb
cmp
js
mov
pop
cmp
ins
cli
adc
pop
adc
pop
push
std
stos
cli
cmc
fwait
in
shr
fwait
ins
lock
xchg
jp
mov
lock
sub
sbb
sbb
push
sbb
ret
icebp
fsubr
lods
and
cmps
aaa
push
mov
dec
mov
cmp
mov
pusha
add
ds
cmps
sub
jle
out
push
add
iret
(bad)
cmp
push
popa
push
jae
call
sti
fs
cs
ins
out
push
mov
pop
enter
sbb
dec
bound
into
leave
arpl
mov
add
mov
and
adc
mov
std
lea
mov
outs
out
ins
ins
mov
inc
je
js
test
les
pop
cmps
mov
iret
xchg
std
les
cmp
repnz
sbb
fild
mov
mov
jge
xchg
ins
lds
shl
dec
and
mov
fisttp
or
sbb
leave
cmp
loope
dec
neg
je
ins
pop
into
retf
inc
jnp
ds
call
aaa
jns
jmp
mov
lock
and
lods
jge
loopne
leave
and
xchg
mov
stc
cld
jg
cli
call
mov
inc
pop
mov
adc
inc
adc
sbb
sub
stos
ins
cmp
cld
cli
xor
jl
cmc
iret
stc
inc
sbb
xor
mov
jo
pop
cmp
push
jge
fwait
aaa
adc
lods
inc
xchg
push
mov
xor
bound
std
(bad)
pop
call
xchg
test
push
nop
fistp
(bad)
adc
fwait
sbb
cs
call
add
mov
stos
sub
shl
mov
out
les
mov
shufps
jb
loope
int
daa
(bad)
sbb
(bad)
mov
adc
int3
fwait
push
pop
fcom
inc
ret
or
sub
push
fld
push
xchg
shr
cmp
jne
jecxz
scas
in
sar
jb
xchg
sub
(bad)
sub
popa
cdq
je
cdq
xchg
jle
pop
push
bnd
inc
pop
or
cmp
xchg
or
add
in
dec
and
movs
mov
adc
into
test
fild
retf
inc
push
inc
cmps
not
mov
in
enter
pop
jmp
hlt
push
hlt
int3
stc
repnz
cmp
sbb
(bad)
sbb
mov
pcmpeqd
sbb
mov
adc
repz
jmp
rol
stos
ins
inc
pop
add
daa
lea
adc
nop
sbb
shl
mov
lahf
adc
arpl
(bad)
mov
mov
les
jne
(bad)
jg
push
sbb
dec
jb
mov
sbb
out
push
test
bswap
stos
lods
xchg
dec
rcr
outs
xor
push
sbb
xchg
int
pop
sahf
pop
xlat
inc
pop
lea
or
mov
push
enter
adc
mov
cmc
je
outs
test
jno
cmp
dec
inc
in
cdq
xchg
aam
push
fld
das
ror
dec
fisttp
mov
pusha
(bad)
xor
push
in
mov
(bad)
cmps
sbb
xlat
mov
cli
icebp
ss
mov
fld
jecxz
mov
bound
pop
retf
out
mov
pop
stos
ret
scas
(bad)
mov
outs
(bad)
dec
pusha
popa
(bad)
aam
rcl
(bad)
sub
mov
pop
inc
aad
aam
stos
gs
cmp
hlt
cld
(bad)
xor
or
mov
ret
call
fsub
push
mov
sbb
xchg
icebp
xor
mov
pop
in
movs
ins
sbb
cmp
shl
mov
or
fucomi
xor
div
pusha
pop
ss
and
(bad)
xor
enter
inc
adc
cmp
ds
sbb
std
pop
add
xchg
jp
and
in
sbb
add
aad
pop
xchg
sbb
pop
mov
jmp
in
lods
div
xlat
fs
arpl
pusha
stos
xchg
push
inc
xchg
ror
mov
sub
sbb
stc
lds
add
ins
std
js
inc
cmps
sar
int
into
sub
xchg
iret
jle
cmp
pop
loopne
test
xchg
xor
out
ret
fld
stc
(bad)
or
or
mov
lods
push
mov
jle
jmp
stos
rol
in
cmps
repz
mov
dec
(bad)
rol
push
sbb
ror
retf
pop
cmp
xchg
(bad)
or
loop
push
dec
mov
adc
inc
sub
jp
xchg
pop
cwde
cs
sbb
jp
sbb
jbe
mov
lahf
sub
xlat
xlat
jbe
or
mov
push
stos
(bad)
movs
add
lock
inc
add
pop
jg
xor
xor
mov
jno
and
sbb
test
loopne
pop
outs
and
push
or
leave
jne
(bad)
xchg
add
imul
xchg
test
arpl
mov
(bad)
lods
test
(bad)
inc
inc
in
mov
cmp
pop
mov
or
std
stc
jae
retf
or
push
fwait
repnz
ins
outs
adc
jo
sub
mov
and
rcr
xor
jb
mov
fs
mov
jb
add
inc
xchg
jl
shl
lds
fstp
mov
add
fst
in
pop
fsubr
adc
mov
pop
ja
pop
mov
mov
mov
pop
xor
pop
pop
pop
bswap
adc
rol
fild
mov
push
(bad)
xchg
sub
js
pop
clc
lea
dec
push
cmps
shl
push
xchg
pop
pop
repnz
clc
add
or
mov
add
sub
push
imul
xchg
sub
push
fcmovnb
addr16
pop
shl
jl
test
ins
aad
out
call
inc
xchg
test
inc
addr16
add
dec
jp
fist
xor
adc
fmul
fmul
out
rol
out
mov
(bad)
std
je
ret
inc
jno
and
dec
mov
adc
xor
jmp
mov
loopne
jmp
stos
xchg
xor
dec
jmp
cmps
shl
push
adc
jno
mov
mov
push
and
mov
xor
mov
xchg
ret
xchg
sbb
mov
adc
mov
and
shl
dec
sub
push
lds
(bad)
movs
stos
lods
cmp
push
int3
mov
push
scas
dec
mov
add
pop
int3
add
ins
or
es
aaa
dec
inc
xor
shl
arpl
not
(bad)
mov
nop
push
aas
mov
inc
aam
ins
aaa
add
imul
mov
gs
enter
pop
sub
or
sub
and
mov
(bad)
aaa
pop
ja
or
icebp
inc
xchg
xor
xlat
ins
add
loope
xchg
add
xor
push
or
call
push
pop
enter
aad
outs
in
ja
add
push
mov
pop
ja
cmp
cdq
fsubp
ffreep
je
rcl
mov
mov
sbb
outs
sahf
mov
mov
cwde
add
int
inc
inc
and
mov
adc
retf
aad
ins
outs
mov
addr16
xchg
and
xchg
push
loopne
mov
jne
push
(bad)
sub
in
fist
int
stc
fcmovb
cmp
aam
add
inc
mov
jg
push
cmp
cmp
daa
xlat
in
inc
jp
ins
jecxz
dec
out
jl
cmps
push
cmps
arpl
sar
sar
pushf
sub
pusha
or
fist
or
push
scas
sbb
push
mov
in
mov
cmp
popa
out
jge
dec
sub
aad
sub
imul
sub
bound
push
mov
push
jle
and
(bad)
into
pushf
pushf
retf
jg
into
arpl
inc
in
jmp
lds
leave
je
int3
push
and
push
and
aam
jmp
add
push
bound
jmp
pop
popf
dec
xor
mov
shl
cwde
pop
shl
pavgb
stos
call
je
dec
scas
sar
adc
and
pushf
fistp
in
icebp
mul
dec
sti
out
daa
or
push
cmp
xor
lods
jmp
test
dec
lods
ja
mov
pop
call
mov
test
mov
dec
addr16
adc
adc
jnp
xchg
repz
inc
adc
dec
mov
jns
call
in
cmp
sub
push
(bad)
(bad)
enter
sbb
sar
fisttp
jo
push
inc
and
inc
push
xchg
mov
lahf
push
xlat
mov
pop
mov
(bad)
(bad)
retf
test
push
ret
mov
out
jb
pop
es
mov
pop
jg
es
pop
push
sub
jmp
test
adc
mul
dec
loope
xchg
arpl
fstp
fiadd
out
jne
jne
add
pop
cli
iret
or
into
cld
cmc
sub
mov
scas
cmp
in
sbb
aas
xchg
sbb
adc
push
leave
fld
sub
daa
add
scas
jle
pop
test
sub
fst
test
adc
sub
pop
add
and
lods
lods
inc
arpl
inc
mov
movs
mov
inc
fdivr
pusha
inc
mov
fisttp
sub
gs
sbb
pop
aam
neg
jecxz
fs
leave
stos
dec
repnz
bound
es
scas
add
jb
mov
ins
ja
pushf
adc
mov
(bad)
icebp
cmps
das
xor
scas
push
aam
fimul
dec
xlat
ins
mov
push
pop
mov
clc
bound
stos
push
pop
cmp
repz
arpl
loope
xchg
call
adc
adc
pusha
mov
or
test
push
fbstp
(bad)
push
movs
loope
dec
cli
sti
sbb
inc
pop
repnz
shl
jno
jmp
stos
inc
mov
shr
pop
mov
std
imul
daa
(bad)
or
pop
(bad)
loope
add
xchg
jnp
xor
push
cli
adc
or
push
shl
ja
xchg
push
mov
mov
repnz
xchg
pop
rol
scas
test
xchg
(bad)
mov
std
aam
ror
int
jge
repz
sbb
pop
cdq
aaa
sub
jno
xchg
jnp
mov
icebp
jmp
mov
fwait
sbb
out
dec
xchg
mov
pop
mov
xchg
bound
pop
adc
jge
scas
xlat
pop
push
sbb
mov
jo
out
pop
fcomp
fdivr
fdivr
lahf
hlt
mov
fstp
(bad)
xor
addr16
loop
clc
push
cmp
jnp
outs
fs
sahf
imul
pop
push
int
mov
and
movs
rcr
sub
(bad)
out
add
out
mov
setne
sbb
iret
call
inc
lods
adc
and
call
(bad)
jmp
mov
div
or
push
ret
pop
xor
pop
(bad)
sbb
icebp
shl
mov
jge
adc
call
mov
jns
pop
rcl
rol
dec
(bad)
aam
mov
int3
dec
rol
loope
movs
and
or
dec
ror
lea
jns
jae
out
and
add
push
sub
xor
addps
fisub
ret
sbb
jge
and
pop
ror
sbb
repnz
jmp
inc
push
mov
test
mov
xor
mov
and
pop
jmp
sub
jb
jns
test
add
aaa
adc
pop
xchg
cmp
cmp
sub
sub
push
mov
fisttp
repz
jmp
mov
xlat
push
or
pop
and
pushf
in
sub
cmp
movs
add
stos
iret
sub
mov
ss
neg
arpl
mov
inc
test
add
push
inc
jb
in
push
int
adc
ficomp
mov
add
in
pop
out
ss
not
retf
inc
std
int3
jl
fist
dec
cli
xlat
test
jno
enter
jle
ss
jbe
xor
mov
int
jb
test
scas
and
(bad)
sub
sub
das
stc
xor
xor
mov
adc
cli
ds
push
les
bound
jns
push
retf
call
retf
lahf
ret
popf
mov
(bad)
jecxz
fistp
cwde
sbb
aas
mov
push
enter
jmp
xchg
out
xchg
mov
sahf
cmp
dec
sbb
lods
mov
aam
xchg
inc
cli
ja
mov
clc
jb
add
push
sti
cmp
in
and
cmp
aam
mov
sub
stos
sub
sbb
dec
jmp
pushf
jns
jle
or
ja
or
(bad)
ins
enter
(bad)
dec
test
inc
(bad)
movs
xchg
sbb
add
and
mov
popa
aam
or
mov
xchg
sbb
ja
mov
cmp
dec
shr
shr
or
cmc
stc
ror
mov
cmps
mov
(bad)
nop
fsubrp
fidiv
cmp
into
sub
mov
sbb
fisubr
and
pop
sub
xor
dec
sub
sub
xchg
daa
out
lds
sub
and
pop
iret
jne
ja
call
sub
jno
jle
pop
shl
jno
pop
call
mov
mov
cld
cmp
pmaxub
ins
adc
fimul
xor
xchg
ds
jb
data16
jb
cmc
inc
sar
push
sbb
xor
cmp
out
jb
aam
adc
jmp
jmp
xlat
and
scas
mov
xchg
int3
inc
mov
movs
clc
sbb
sub
aam
in
xchg
jl
mov
and
(bad)
pop
add
das
lahf
rcr
push
jbe
es
inc
inc
ss
adc
sub
mov
ret
jnp
sbb
test
mov
add
xor
(bad)
jmp
pop
adc
movs
ror
xor
(bad)
lods
jge
ins
leave
dec
and
sub
and
add
(bad)
outs
gs
addr16
jns
into
out
pusha
(bad)
lods
cs
sbb
inc
(bad)
or
bound
adc
jnp
and
es
mov
inc
push
mov
mov
push
sahf
or
out
mov
cwde
vcvtpd2dq
sub
popa
fisttp
ficom
xchg
cli
sub
movs
sub
stos
jb
in
(bad)
mov
push
loopne
and
and
int
je
dec
fcmovne
jg
mov
movs
sub
loopne
stc
sub
test
push
mov
sub
pop
jle
loopne
pop
test
in
clc
int
mov
repz
in
popa
ror
in
xor
sub
pop
jb
mov
sbb
xchg
add
add
mov
cld
pop
inc
test
cmps
push
push
push
retf
inc
dec
dec
fdivr
pop
xchg
mov
inc
aaa
mov
cmp
pop
jno
pop
inc
jl
lds
cmps
jno
shl
push
jnp
sbb
jb
cs
mov
cs
movs
cmp
lahf
ins
push
jmp
mov
pop
jne
test
mov
sbb
push
mov
xchg
xor
cli
xchg
push
shl
fwait
cmps
lock
lods
jle
push
std
mov
mov
test
sub
or
sub
lock
cmps
add
dec
mov
and
pop
aas
or
or
push
fwait
dec
pusha
dec
dec
sub
push
lods
mov
push
mov
and
cmp
fidiv
pusha
mov
push
fld
in
addr16
imul
xchg
push
sahf
lock
rol
inc
jmp
jbe
mov
cdq
gs
movs
jmp
mov
in
jne
adc
pop
ja
mov
add
mov
dec
sub
ins
dec
xchg
neg
daa
fwait
xlat
ret
rol
loop
jp
mov
test
mov
lods
mov
gs
test
sub
mov
xlat
je
int3
retf
lods
fild
lahf
rcl
cwde
inc
std
repnz
sub
push
sar
rcl
jle
sub
out
inc
cmp
xor
cwde
mov
push
lea
jmp
mov
sub
mov
mov
dec
in
jns
add
lahf
dec
push
iret
retf
aam
jge
mov
mov
jge
or
sbb
mov
push
and
pop
sti
push
nop
dec
sub
inc
push
add
push
and
or
addr16
mov
adc
jb
loopne
loope
and
cli
xchg
sbb
jl
mov
mov
test
stos
jb
cmc
sbb
jge
cmp
pop
xchg
push
rcr
cs
mov
add
aad
(bad)
push
jae
push
sbb
inc
add
gs
inc
in
dec
mov
mov
in
mov
dec
outs
mov
fidiv
adc
cwde
dec
enter
sub
mov
cmp
clc
ret
jl
jmp
les
sbb
push
ror
inc
push
aad
enter
inc
mov
cmp
aad
xor
lods
push
sub
fst
test
or
adc
sbb
mov
icebp
add
imul
loope
out
add
jnp
aam
pop
jmp
int
xor
xchg
retf
lahf
inc
(bad)
push
movs
fild
pop
js
ret
scas
repz
pop
fld
inc
adc
add
shl
mov
gs
int3
mov
out
mov
loope
lods
push
dec
inc
mov
mov
mov
mov
call
mov
jl
ret
mov
popa
dec
pop
sti
dec
movs
jle
xlat
retf
cmps
mov
xlat
mov
jge
sbb
push
clc
test
jg
xor
push
or
(bad)
xchg
inc
fwait
mov
hlt
lods
inc
retf
lahf
jae
adc
inc
imul
push
stos
movs
mov
pop
and
idiv
jae
sub
neg
mov
pop
cmc
(bad)
ins
lods
out
jo
popa
vaddps
lods
cmp
push
and
jle
outs
rcl
ret
pop
(bad)
sar
int3
add
lds
jge
fdiv
add
pushf
or
(bad)
in
shl
(bad)
push
jmp
push
and
not
vmptrld
shl
jb
xchg
(bad)
push
xor
sbb
sub
retf
pop
sub
jb
cmp
sahf
cmps
push
les
xchg
mov
adc
outs
in
call
pop
jmp
inc
(bad)
mov
int3
sbb
in
mov
cwde
mov
xchg
int3
pop
pop
inc
cmp
ror
(bad)
pop
mov
in
mov
push
xor
enter
mov
mov
sbb
js
and
popf
add
jae
and
lock
mov
das
jecxz
fbld
mov
sbb
push
push
loopne
dec
jmp
xor
mov
aad
pop
das
jecxz
sbb
add
stc
inc
xchg
ds
jno
sbb
inc
jle
sub
cmp
out
and
add
adc
mov
cli
and
push
inc
stc
cmp
gs
stos
mov
je
push
and
mov
ins
(bad)
rcl
mov
push
loop
dec
(bad)
mov
out
out
inc
bound
out
nop
pop
mov
cmp
ss
mov
(bad)
push
iret
xchg
ret
mov
fidiv
imul
lahf
xor
and
int3
retf
loope
pop
xchg
xor
int3
jge
outs
cmp
loop
ins
inc
mov
dec
add
jnp
cmp
sbb
call
jbe
out
mov
fsubr
add
popf
jnp
aaa
mov
sub
add
mov
xor
bound
das
pop
jmp
xlat
mov
mov
push
and
ret
sub
js
mov
sahf
fist
aas
xor
sub
push
or
ss
hlt
xchg
push
push
pusha
xor
mov
in
jmp
call
popa
xor
xor
fisttp
int3
(bad)
in
jnp
mov
clc
fbld
rcl
daa
push
jns
outs
sbb
jl
cli
mov
inc
push
arpl
jo
mov
and
imul
mov
jae
xchg
mov
mov
pop
cmp
arpl
or
div
test
push
psrlq
mov
aam
out
repz
mov
add
das
mov
fmul
adc
jecxz
cmp
mov
ficomp
icebp
sub
xlat
xchg
push
xchg
xchg
dec
iret
sbb
addr16
arpl
es
rcl
in
jmp
push
mov
pop
lock
jmp
in
stos
pop
xor
nop
shl
xchg
test
mov
cmp
cmp
test
xchg
xor
add
pop
mov
fnsave
call
inc
pop
mov
movs
dec
into
shl
adc
or
addr16
ins
xchg
mov
in
(bad)
les
jno
xor
and
(bad)
inc
mov
inc
xlat
test
sub
ror
or
cdq
inc
sbb
jmp
mov
bound
scas
inc
in
cmp
mov
cld
xor
stos
add
sbb
pop
and
ret
push
jl
dec
add
xlat
cs
je
ffree
loope
imul
lds
and
mov
jmp
icebp
push
inc
pop
jmp
pusha
shl
imul
je
adc
iret
movd
retf
pop
add
rol
mov
jns
sbb
add
loop
aad
in
xlat
ret
dec
cmp
fwait
pop
pop
(bad)
cld
push
jl
jnp
popa
push
jae
push
aas
retf
inc
inc
in
xor
in
and
scas
dec
imul
xor
mov
push
sbb
aas
stc
movsx
sti
fld
sub
out
jg
out
mov
jbe
adc
pop
mov
mov
xor
add
ja
cs
jp
lea
int
stos
imul
ss
sub
shl
repz
push
test
repnz
cmp
cmp
jae
in
dec
or
lods
mov
es
test
call
popa
scas
ror
addr16
mov
ret
mov
sub
sahf
icebp
jle
cmp
inc
loop
cmp
test
(bad)
ror
stos
or
pusha
outs
jne
arpl
mov
repz
(bad)
xor
fsub
int
adc
jge
push
push
into
cmp
shr
lods
pop
jg
mov
ds
ins
mov
push
dec
jo
mov
pusha
inc
es
gs
stc
lds
jae
xor
stos
fbstp
je
out
sub
std
dec
xor
push
mov
xchg
adc
fwait
or
push
adc
fsub
lock
pop
fstp
je
adc
add
mov
jp
dec
pop
(bad)
dec
shr
mov
call
pushf
scas
jne
jge
jo
mov
std
out
movs
daa
addr16
in
pop
inc
pop
push
addr16
mov
test
ins
adc
outs
add
jbe
shr
jle
and
jg
or
xor
push
int
adc
and
push
test
fnstcw
mov
iret
int3
pop
rcl
or
(bad)
es
pushf
add
cmps
cld
leave
sub
addr16
rol
jg
je
or
xchg
fwait
xor
pop
pop
push
jo
xlat
clc
(bad)
jns
mov
mov
and
sub
xchg
add
or
cli
sub
(bad)
fistp
and
jno
adc
pop
jl
jmp
in
jo
xor
jno
movs
or
and
cmc
sbb
mov
dec
mov
adc
idiv
lods
pop
xchg
out
sub
inc
imul
in
mov
aad
iret
mov
push
repnz
ja
dec
ja
inc
imul
ds
shl
int3
mov
push
cmp
mov
fdiv
aas
sub
push
std
sub
dec
mov
es
push
(bad)
fs
ror
inc
mov
sbb
sbb
daa
pushw
call
and
inc
fstp
and
push
shl
pushf
adc
cmps
cwde
fldl2e
cs
jecxz
icebp
fldcw
dec
scas
js
pop
out
popf
adc
pusha
stc
lods
stc
div
mov
movs
cmp
dec
scas
stos
push
and
mov
cmp
dec
icebp
mov
mov
xor
sbb
cmp
das
pop
jmp
clc
(bad)
pop
pop
leave
mov
aaa
pushf
sub
mov
sub
adc
cmp
push
outs
aam
lock
and
clc
jl
dec
jmp
je
mov
and
cmp
or
jge
push
clc
in
mov
sub
mov
jmp
jmp
adc
fisubr
popa
mov
mov
xchg
xor
push
and
cld
mov
or
loopne
or
mov
fst
mov
mov
enter
sub
jmp
div
shr
sbb
and
pop
dec
dec
adc
mov
sub
xchg
pop
add
sub
cmp
mov
mov
xchg
(bad)
out
pop
sbb
movs
mov
mov
mov
xor
shl
dec
sbb
sub
pop
xchg
fimul
retf
cmps
fsubp
nop
lods
sub
add
jl
neg
and
lods
push
sub
and
mov
add
std
xchg
adc
mov
inc
mov
ror
out
sbb
and
scas
shl
push
xchg
sub
xor
fild
retf
jo
sub
push
xor
lds
mov
inc
popf
mov
mov
sti
(bad)
bnd
push
mov
mov
pop
dec
or
inc
mov
addr16
pushf
push
push
sar
add
ins
js
icebp
fisttp
jle
popf
in
cmps
dec
data16
cld
xlat
rcl
jns
mov
or
sub
xchg
test
fst
test
rcl
(bad)
fldcw
or
in
inc
sbb
jnp
sahf
adc
(bad)
or
xor
push
mov
lds
dec
inc
loop
mov
out
inc
xor
add
dec
stos
sahf
push
lods
cmp
cdq
mov
sub
adc
(bad)
sub
inc
mov
xchg
ficomp
idiv
xor
sub
mov
sub
or
call
in
repnz
inc
cmp
xchg
mov
fs
sub
enter
jmp
jp
mov
ja
fistp
mov
rcl
ja
out
shr
sub
stos
pop
scas
stc
sbb
lea
pop
sti
enter
mov
lahf
lds
pop
pop
or
pop
pusha
and
sub
push
sbb
inc
or
ins
sub
mov
cmp
(bad)
lea
mov
sbb
cs
adc
mov
or
outs
retf
(bad)
jmp
jno
test
push
sub
bound
jb
add
out
shr
cld
cmp
enter
sub
sbb
mov
dec
adc
pusha
adc
jne
cmp
dec
mov
add
push
or
retf
mov
cdq
std
mov
inc
cwde
mov
loope
rcr
mov
out
mov
jmp
ja
cmp
or
sub
stos
stos
mov
sub
(bad)
adc
pop
and
sub
call
inc
push
pop
dec
es
test
mov
sbb
loopne
pop
jns
sbb
push
pop
push
sub
mov
mov
cmp
dec
test
jge
icebp
out
sbb
lock
xor
int3
pop
mov
je
push
xor
jne
jle
imul
cld
jbe
mov
addr16
push
adc
adc
mov
gs
pop
sub
mov
xchg
xchg
loop
jae
fbld
mov
adc
push
sub
pop
mov
mov
dec
or
jecxz
ds
dec
xchg
fcmovnu
xchg
and
jmp
scas
fnstcw
inc
movs
xor
and
xchg
arpl
cdq
mov
mov
dec
fsub
dec
push
push
mov
test
xor
xor
leave
jbe
mov
sbb
mov
cmc
shl
jl
dec
dec
dec
jmp
hlt
test
test
stos
shl
fbstp
mov
sub
adc
pop
nop
pop
(bad)
(bad)
sbb
adc
mov
mov
aad
(bad)
clc
sub
loopne
xor
mov
sub
cwde
xchg
fs
stos
mov
mov
mov
aas
pop
sub
push
sbb
add
mov
hlt
dec
push
jno
add
aas
aaa
jns
pop
dec
out
mov
adc
out
xor
outs
jbe
mov
mov
xchg
and
push
pop
mov
leave
dec
cwde
mov
mov
inc
clc
in
jp
out
shl
mov
dec
jo
xchg
dec
cmp
jmp
rcr
ror
mov
push
mov
mov
int3
bound
stc
add
scas
dec
iret
mov
pop
ins
lea
loopne
ds
and
cmp
nop
hlt
xchg
push
retf
push
pop
cdq
js
sbb
ds
pop
mov
add
jmp
movs
mov
adc
mov
cli
pop
mov
cmp
mov
out
aam
xor
sbb
or
sub
mov
test
pop
push
call
les
out
xchg
and
in
push
pop
or
mov
push
and
dec
or
mov
(bad)
and
scas
sar
jo
sub
jg
push
stos
jae
fisttp
neg
mov
pop
jmp
(bad)
push
pop
cli
xchg
and
mov
mov
mov
in
das
push
stc
lods
sti
fucomip
sbb
jmp
popf
loop
inc
std
(bad)
gs
mov
jne
mov
mov
xor
mov
stos
cmp
mov
mov
pop
push
cdq
loop
cs
pop
xor
xchg
addr16
call
inc
xlat
cmp
mov
or
add
daa
addr16
or
jnp
mov
les
push
dec
push
inc
sub
mov
adc
mov
aad
ret
mov
lods
lods
cld
xchg
das
icebp
cmp
loope
dec
inc
mov
xlat
mov
push
sbb
cmc
das
xor
sbb
addr16
enter
aam
mov
ins
jnp
cld
add
inc
xchg
xchg
fs
pop
xchg
fst
lds
jnp
mov
pushf
pop
and
imul
repz
push
adc
push
and
jo
mov
in
xchg
dec
retf
xlat
jne
loopne
or
out
add
add
sbb
adc
scas
retf
sub
cdq
test
xchg
dec
lods
cli
mov
fist
out
push
inc
mov
xor
jmp
daa
mov
or
xor
inc
jne
sub
or
or
addr16
adc
(bad)
dec
sub
mov
xlat
pandn
cli
int3
pushf
mov
cmps
push
sub
ja
imul
push
push
mov
sub
fs
inc
stc
stos
les
bound
fadd
test
imul
mov
and
xchg
adc
mov
cwde
adc
enter
aas
std
(bad)
pop
adc
inc
jmp
xor
out
push
sbb
(bad)
mov
arpl
lock
les
mov
out
push
mov
pop
adc
inc
iret
(bad)
mov
mov
xchg
fild
xor
mov
xor
clc
cmp
xchg
sub
jmp
stos
scas
js
data16
add
pop
dec
mov
xor
dec
mov
fs
jb
and
cmp
mov
pop
dec
and
daa
jle
mov
sbb
mov
mov
jae
std
jne
test
adc
scas
adc
loope
in
mov
xchg
jns
push
inc
push
or
fidiv
mov
pop
dec
jno
and
scas
mov
adc
push
int3
scas
inc
cli
out
pop
shr
adc
outs
(bad)
pop
out
(bad)
mov
test
dec
sti
pusha
sar
hlt
sbb
ret
adc
mov
daa
outs
push
inc
push
bound
ins
js
pop
inc
outs
sbb
rcl
mov
(bad)
stos
fs
movs
mov
jnp
sbb
(bad)
ret
xchg
pop
or
jp
and
jae
add
add
sbb
out
pushf
(bad)
sbb
adc
mov
fs
fdivr
dec
and
mov
mov
test
fistp
push
aaa
leave
sub
addr16
scas
mov
inc
fist
inc
push
xchg
inc
push
loope
or
jle
neg
sbb
pop
jl
rcr
arpl
xchg
mov
adc
mov
outs
cmp
push
inc
sbb
jae
or
mov
mov
or
scas
cmps
inc
xchg
outs
inc
inc
imul
call
jp
adc
cmp
ret
push
mov
daa
mov
cs
stos
pushf
(bad)
push
popa
xor
cs
jns
loop
push
je
pop
cdq
aaa
or
inc
xchg
mov
add
aam
pop
push
cmp
ja
push
hlt
call
mov
(bad)
xor
inc
push
pop
mov
mov
xchg
dec
shl
loope
sbb
or
call
xchg
ja
mov
scas
inc
jmp
xor
inc
jnp
adc
in
jae
lds
push
add
xchg
cmp
stos
cmp
mov
es
push
xchg
or
ss
mov
aaa
push
dec
mov
ror
or
ds
fnstsw
in
xlat
mov
pop
retf
scas
mov
mov
push
pop
lock
ds
mov
out
cmp
xchg
pop
call
mov
or
imul
push
push
cmps
sbb
loopne
pop
test
jo
jns
pop
lods
sub
cmc
lahf
int3
outs
in
xor
jno
push
or
cmp
ror
sub
fadd
adc
xor
out
enter
scas
jmp
jae
jne
jno
pop
xchg
lahf
xor
or
adc
cmp
and
xor
sub
push
(bad)
xchg
pop
mov
xor
ins
aaa
icebp
mov
sub
stc
ss
ror
sub
pop
cli
retf
and
fcomp
sub
outs
call
xchg
jno
xor
jmp
lods
les
mov
fwait
mov
push
daa
or
jmp
mov
mov
or
sub
aaa
sub
adc
call
push
sar
jp
dec
mov
sub
cmc
jmp
mov
lock
jo
hlt
int
mov
enter
mov
ret
or
sub
retf
xchg
clc
add
sbb
or
sar
pushf
mov
push
rcr
sbb
cmps
inc
call
jle
sbb
mov
aam
mov
push
cld
and
imul
cdq
push
push
jb
mov
cmp
xchg
ja
sbb
xor
fisttp
adc
cmp
inc
pop
cmp
jno
clc
lds
and
test
jmp
nop
dec
push
adc
inc
(bad)
fisttp
jno
imul
scas
add
pop
lea
lea
push
hlt
or
adc
mov
ins
inc
iret
fcmovnb
cld
cs
test
stos
push
push
cmps
out
(bad)
jae
out
lahf
push
cmc
icebp
out
xor
fld
and
inc
retf
ret
das
sbb
inc
rol
iret
dec
out
and
sbb
jmp
xchg
jns
das
or
clc
cwde
leave
xor
dec
pop
jecxz
dec
pop
inc
sti
add
mov
cmp
leave
stc
enterw
call
fnsave
or
jmp
hlt
xchg
pop
fisub
push
fdivr
xchg
scas
xchg
ds
and
mov
push
pop
inc
sti
mov
stos
(bad)
leave
adc
bound
inc
dec
clc
(bad)
imul
ss
pop
or
fwait
adc
push
loopne
(bad)
cld
jmp
ror
hlt
into
arpl
and
inc
pusha
enter
jnp
pop
mov
mov
pop
adc
xchg
dec
jp
or
ss
sub
out
mov
mov
arpl
cdq
jge
cmp
mov
and
mov
xchg
dec
test
and
test
inc
fsub
loop
add
jns
arpl
or
dec
aad
sbb
mov
rcr
out
test
jae
push
mov
js
or
adc
aad
test
cmc
je
mov
pop
ret
or
test
pop
pusha
add
bound
sbb
sbb
push
cmc
daa
(bad)
je
fist
xchg
outs
sub
je
mov
inc
movs
or
lahf
test
ss
push
cmps
xchg
rol
popa
mul
call
or
std
or
xor
int3
xlat
or
xor
mov
mov
mov
pop
scas
dec
sub
sbb
das
mov
(bad)
push
pop
lds
es
out
stc
add
push
and
jmp
mov
hlt
test
push
ins
xor
stos
push
int
mov
mov
cmp
(bad)
retf
ret
cmps
sub
mov
(bad)
cli
xchg
call
mov
or
retf
das
xchg
jae
jbe
ret
out
or
and
scas
fisttp
sub
pop
mov
jne
jmp
jl
mov
mov
ja
enter
(bad)
rcl
add
pusha
mov
or
cmp
or
pop
(bad)
cmp
retf
dec
fcom
inc
xor
pop
daa
into
jo
idiv
mov
dec
xchg
xor
pushf
lahf
pop
mov
cmp
mov
mov
mov
jns
mov
ins
jmp
sbb
cmp
aad
out
or
fisttp
call
xor
sbb
dec
gs
pusha
mov
xor
mov
and
lea
add
dec
shr
xchg
jmp
dec
(bad)
and
inc
ss
fsin
mov
jb
mov
inc
not
jns
call
inc
(bad)
in
dec
mov
xor
fld
xchg
mov
leave
icebp
jno
lods
cli
jnp
pop
ins
(bad)
or
hlt
rol
je
adc
imul
cmp
test
fnstsw
fistp
mov
(bad)
jo
sahf
pop
shr
imul
hlt
aaa
fild
inc
and
push
jb
add
jnp
cmp
lea
jmp
pop
xchg
mov
retf
jnp
std
ret
push
leave
push
retf
xor
out
mov
(bad)
dec
and
jmp
and
cwde
mov
mov
dec
cmps
inc
call
and
daa
popa
mov
push
lea
xlat
ja
adc
xchg
retf
xchg
call
mov
push
add
cmps
sti
shr
dec
je
xchg
adc
inc
js
mov
add
in
hlt
call
mov
dec
daa
sbb
dec
stc
mov
inc
cmc
add
scas
adc
mov
iret
(bad)
jo
and
and
xchg
sub
xor
ds
or
ja
push
sub
inc
ss
pushf
aas
retf
jle
xor
ins
and
fstp
cdq
cdq
push
(bad)
lods
fidivr
mov
jecxz
sbb
sub
cdq
xor
mov
sbb
loopne
mov
adc
fistp
int3
inc
mov
jle
dec
cs
out
pop
in
arpl
pop
call
gs
sbb
mov
xchg
fidiv
dec
inc
sub
daa
fcmovnbe
mov
xchg
add
xor
ret
cli
mov
push
bound
xor
icebp
xchg
out
mov
dec
jbe
iret
mov
jp
adc
addr16
lods
mov
add
dec
arpl
and
mov
repnz
jne
out
sub
xchg
popf
push
aam
mov
dec
sub
scas
or
gs
xchg
and
out
call
sub
jecxz
mov
cmp
int
dec
popa
stos
and
rcr
mov
xor
ins
cmp
ss
popf
jno
adc
imul
or
stos
push
lds
inc
and
cwde
sbb
sub
or
pop
cmp
into
call
push
push
fdivrp
fsubr
int3
(bad)
leave
or
cdq
out
adc
or
sbb
aam
gs
movs
aam
pop
jp
cmp
inc
ins
dec
and
jno
add
cs
popa
jae
mov
(bad)
sahf
sahf
pusha
lds
and
ret
out
ds
retf
imul
jns
into
outs
xchg
push
inc
call
sub
mov
mov
fist
stc
jg
sti
aas
leave
and
dec
out
cmp
test
inc
mov
fild
jnp
inc
mov
fidivr
cdq
fmul
fisttp
out
clc
repz
movs
and
lods
xchg
out
sub
mov
and
inc
pushf
fst
int3
and
aad
out
popa
cmps
les
adc
push
pminsw
dec
dec
push
out
pop
hlt
gs
(bad)
out
xlat
es
loopne
push
dec
pop
into
fcomp
jb
fnstcw
adc
not
cmp
sub
dec
aad
arpl
jo
ss
inc
jno
mov
pop
aad
jne
sti
jno
push
add
mov
jp
les
jg
and
and
xchg
out
inc
je
(bad)
pop
jnp
and
fdivr
cld
addr16
dec
aad
out
imul
pop
lods
xor
pop
mov
shl
lock
ja
pop
jmp
hlt
xchg
jmp
sti
add
pusha
movs
xchg
sbb
jmp
icebp
pop
ret
or
(bad)
scas
fcom
mov
pop
mov
sbb
lahf
in
jecxz
ds
mov
mov
jbe
adc
xchg
mov
mov
xchg
mov
imul
fnstsw
push
call
inc
bound
jae
or
mov
movs
mov
mov
inc
mov
inc
or
in
(bad)
int3
jbe
and
rol
xchg
lea
test
fmul
outs
pushf
mov
leave
mov
push
shr
mov
test
xchg
popa
jecxz
mov
push
pop
enter
sub
clc
jae
ins
adc
pop
pop
cmp
div
or
iret
push
outs
js
bound
or
pop
and
js
movs
repz
stos
rcr
and
out
lds
or
xchg
add
cld
mov
jle
enter
inc
gs
xor
scas
psraw
pusha
jns
xchg
and
mov
test
retf
sahf
jns
cdq
jno
or
mov
adc
cmp
mov
std
fild
fs
or
push
adc
sbb
rcr
xchg
call
je
mov
fdivr
adc
pop
xor
fcom
mov
inc
add
cmp
ins
scas
xchg
sbb
les
stc
dec
not
aad
mov
cmp
xchg
push
push
arpl
xchg
jno
cmp
pop
repz
pop
lods
and
int
out
add
sbb
sbb
movs
mov
cmps
push
mov
add
es
add
aaa
in
mov
out
cmps
add
int
fisubr
xlat
daa
or
and
pop
jecxz
push
pop
int
mov
xchg
(bad)
mov
test
jmp
push
and
mov
fsub
pusha
mov
push
push
(bad)
es
mov
das
push
loopne
mov
fidiv
scas
or
nop
scas
xor
mov
call
jo
mov
mov
inc
cmps
lea
pop
jmp
mov
sti
gs
loop
fwait
mov
call
loopne
fsubr
push
mov
mov
mov
jl
in
add
or
fsub
xor
movs
cmp
mov
lods
jg
jmp
aas
clc
cmp
pop
outs
imul
lods
out
mov
ins
add
(bad)
repnz
mov
sub
stos
ror
(bad)
mov
inc
loope
dec
push
cmp
or
and
icebp
push
ins
ins
and
adc
jae
adc
jo
iret
sub
ror
ss
test
mul
es
dec
cmp
outs
cdq
dec
inc
stc
pop
cmp
call
adc
xchg
mov
inc
mov
cli
mov
aaa
sahf
xor
mov
push
js
(bad)
cmc
dec
jne
fimul
cmp
arpl
xchg
loop
nop
std
cmp
sbb
(bad)
push
leave
mov
inc
lahf
rcr
lods
neg
scas
and
add
addr16
add
fldenv
aaa
leave
icebp
pop
pop
fwait
add
test
push
jno
rcr
jecxz
mov
je
or
in
or
fst
ret
movs
popf
aaa
mov
aaa
lods
out
mov
push
cmps
xchg
pop
adc
sahf
(bad)
repz
xchg
rcl
pop
sbb
into
push
lods
mov
jge
pop
pop
lahf
scas
jmp
shr
pop
jle
pop
mov
sar
jno
stos
and
and
jge
push
dec
push
mov
xchg
pop
lods
push
jae
shr
or
mov
loop
jo
mov
mov
pop
mov
dec
int
jne
pop
aaa
test
pop
daa
sub
lea
dec
lds
adc
mov
push
clc
xchg
(bad)
test
mov
mov
add
repnz
mov
mov
mov
leave
or
(bad)
in
jb
mov
sar
jmp
movs
dec
pop
pop
mov
clc
stos
pop
ins
xor
xor
es
inc
fmul
adc
mov
call
xor
and
fwait
imul
lahf
outs
push
ja
sub
dec
jl
fld
cmp
xor
sub
jmp
sbb
xor
daa
out
data16
dec
ins
test
mov
mov
jnp
add
mov
(bad)
ds
pop
ror
cmp
push
jl
inc
scas
mov
and
xchg
xor
cmp
(bad)
idiv
push
ss
cmps
cs
xchg
push
xchg
sub
and
push
dec
mov
std
nop
fsub
jno
push
dec
add
mov
lahf
in
jae
push
sub
cmp
pop
push
mov
dec
aad
push
xchg
aas
mov
sub
adc
mov
push
xor
das
shl
dec
fisubr
psubusw
aad
ror
jp
jg
lods
or
jo
test
jno
adc
clc
test
f2xm1
mov
repnz
or
es
(bad)
xchg
xchg
cvtpi2ps
inc
cmps
mov
pop
add
into
inc
sar
mov
and
sbb
and
ret
cmc
shl
cmp
xchg
adc
addr16
mov
fs
adc
sbb
daa
adc
and
shl
jo
mov
repz
xor
outs
cmps
jg
cmovb
mov
and
push
pop
mov
xchg
sbb
push
sbb
mov
movs
inc
in
and
stc
in
cdq
sub
pushf
iret
dec
outs
jp
mov
mov
loop
shr
cli
dec
leave
ds
add
movs
ret
enter
in
fcom
or
sbb
movs
inc
cli
xlat
cdq
call
push
xchg
fadd
cmp
adc
cmc
pop
mov
adc
dec
and
pop
dec
cmps
(bad)
scas
sub
rol
sub
pop
lea
cmp
push
call
jbe
pop
fbld
push
les
jbe
gs
pop
dec
fadd
xchg
mov
mov
aam
jb
mov
pop
dec
mov
lds
push
or
mov
outs
jmp
or
dec
in
in
sar
xchg
mov
(bad)
cwde
cmp
dec
movs
clc
int
in
test
je
pop
inc
inc
icebp
sub
and
pop
or
mov
push
iret
jnp
fnstcw
pushaw
stc
sub
adc
fwait
push
or
int
cs
out
pop
ror
inc
pop
xor
push
test
mov
dec
mov
mov
fcmovnbe
mov
sub
mov
xor
pop
add
add
jo
pop
loopne
fldenv
push
loop
pop
enter
pop
into
inc
adc
cmp
xor
iret
add
call
cmp
or
xchg
movs
inc
(bad)
das
push
fs
mov
(bad)
(bad)
ins
arpl
fmul
jb
pop
mov
xchg
out
aam
xchg
loopne
frstor
and
adc
or
push
mov
adc
jle
sbb
arpl
ins
jo
add
mov
add
jbe
mov
inc
idiv
sbb
pop
adc
push
loop
daa
xchg
arpl
sub
aad
cmps
jno
outs
xor
outs
cmp
jmp
loope
xchg
dec
inc
test
xor
enter
ds
xchg
mov
inc
retf
jno
rcr
push
add
loop
ror
pusha
cmc
xchg
nop
shl
out
int
mov
outs
push
pop
dec
cmp
jnp
add
int
fist
pop
dec
sbb
dec
ins
lods
or
pop
lods
mov
cmp
cs
and
cmp
and
pop
mov
in
js
xchg
add
inc
xlat
stos
inc
arpl
mul
and
rol
sahf
je
and
ja
lahf
out
mov
jo
add
lock
cmps
inc
pop
int3
and
lods
inc
sub
xacquire
pop
pop
jno
add
pop
rcl
inc
sbb
fisttp
jl
cmp
dec
movs
cmp
mov
jbe
adc
inc
(bad)
imul
(bad)
in
test
xor
and
pop
sbb
les
xchg
dec
out
push
add
sub
xchg
in
mov
(bad)
xor
xchg
mov
xlat
xchg
repnz
sbb
mov
mov
ss
shr
pop
retf
ret
std
push
inc
je
cmps
sub
push
arpl
cmp
mov
into
sub
or
xor
mov
push
adc
xchg
mov
and
retf
lea
or
(bad)
fisttp
lock
les
jecxz
mov
cmp
push
push
mov
mov
push
jl
push
jne
ins
cmp
lahf
dec
jmp
jb
push
xchg
jp
fisttp
push
mov
add
mov
dec
cmp
fisttp
cld
rol
ficom
and
fiadd
setp
add
shr
adc
adc
jns
call
lds
or
popf
jle
mov
aas
bound
mov
jmp
movs
fisubr
and
(bad)
int
push
add
je
xor
cmp
sbb
dec
and
xor
adc
push
outs
ror
outs
inc
xor
cmp
adc
aas
jl
add
push
aaa
ret
and
xor
mov
gs
mov
jmp
rcl
sbb
xchg
or
test
mov
out
out
aam
push
adc
mov
or
test
cwde
repnz
jno
lock
inc
jge
jmp
cmp
sub
cmp
dec
iret
jns
movs
mov
sbb
xchg
rol
mov
ret
fmul
jns
daa
sub
push
test
mov
dec
ror
scas
mov
or
loope
mov
(bad)
test
out
inc
hlt
mov
xor
xor
jno
ja
dec
movs
mov
push
jecxz
popa
mov
pop
ja
jns
and
and
add
cld
sub
cmp
or
adc
test
add
lods
push
(bad)
adc
or
div
sbb
sub
sbb
and
sub
sbb
or
and
push
mov
lock
call
mov
shl
movs
mov
inc
outs
addr16
mov
rol
push
sub
(bad)
cld
xchg
les
imul
outs
loopne
mov
pop
lods
fcomp
jp
popa
imul
push
inc
cli
cwde
(bad)
jge
add
mov
repz
sub
pop
idiv
shr
daa
imul
dec
cmps
fild
ins
dec
sti
xchg
inc
pop
aad
push
sub
in
fild
jg
adc
push
sub
push
xor
sub
push
xlat
imul
(bad)
cs
in
push
fdivr
push
loop
mov
mov
dec
ins
or
shl
call
dec
out
out
(bad)
daa
pusha
jno
xor
cli
sti
in
mov
test
in
jnp
test
sub
std
push
xchg
aas
push
sub
icebp
sub
xor
mov
repz
frndint
mov
enter
gs
fsubrp
xchg
aam
into
cwde
out
jp
repz
outs
or
push
icebp
adc
loop
pop
jecxz
add
or
(bad)
xchg
je
dec
and
fist
mov
sub
mov
sbb
icebp
imul
loop
push
ror
dec
dec
push
stos
push
fld
int3
xchg
and
dec
sub
mov
mov
gs
int
xor
and
add
lock
loope
fcomp
clc
push
mov
jg
inc
cmps
fldenv
js
or
ror
sbb
cmp
mov
sahf
ja
leave
call
xor
sbb
xlat
cmp
popa
pusha
cmp
mov
and
addr16
aam
iret
or
int
cmp
popa
gs
je
outs
xchg
pop
or
das
sbb
push
retf
in
les
test
mov
sbb
cmp
pop
xchg
(bad)
lock
push
pop
clc
inc
sbb
sub
sub
daa
repz
cmc
repz
cmp
push
inc
dec
inc
or
xchg
pop
rol
ss
xor
test
jg
jecxz
pop
shl
cli
pop
mov
shl
add
jno
hlt
inc
xchg
ja
jne
jne
pop
mov
ret
pop
shl
inc
fwait
into
xor
fdivr
dec
pop
xchg
inc
pop
call
aaa
(bad)
pslld
aas
jg
fistp
test
mov
cs
repz
frstor
ret
ins
inc
pop
pop
mov
call
or
or
or
mov
loopne
adc
adc
mov
(bad)
sbb
inc
repz
fdivr
pop
cmp
pop
outs
mov
jbe
scas
(bad)
test
mov
push
test
jl
nop
mov
clc
xor
stos
jmp
jp
stos
aad
mov
adc
xor
push
scas
sbb
int
xchg
push
and
sbb
sub
sbb
xchg
push
ins
shl
sub
push
sub
mov
cmps
dec
xor
lock
icebp
pop
xchg
(bad)
or
sahf
retf
xchg
cdq
sahf
mov
(bad)
xchg
or
gs
aaa
push
pop
mov
xchg
arpl
aad
push
(bad)
cmc
sub
and
arpl
or
test
test
in
inc
pop
xlat
pop
xchg
les
mov
push
(bad)
loopne
shl
cwde
adc
and
repz
(bad)
shr
aas
iret
add
jnp
dec
sub
xor
cmp
mov
cdq
sbb
mov
and
(bad)
lock
pushf
pop
sbb
sar
cld
push
add
ret
scas
jb
dec
add
les
mov
and
push
and
push
jae
xor
cmp
xchg
movs
idiv
into
pop
inc
sbb
push
mov
scas
loopne
dec
retf
add
push
xor
pop
adc
sub
or
es
fistp
mov
in
lock
cmp
pop
lock
and
cli
dec
push
jp
push
mov
outs
xlat
iret
out
call
jmp
cmp
fisttp
mov
lods
mov
imul
xchg
sub
add
(bad)
xor
test
and
pop
cmp
or
xor
sbb
test
cmp
jb
xor
sub
stos
outs
mov
(bad)
mov
sub
and
movs
mov
jle
retf
mov
mov
shl
adc
fiadd
jmp
push
xor
imul
cdq
pop
std
sbb
push
(bad)
mov
test
inc
cmp
xchg
xor
call
inc
push
loope
(bad)
jg
push
popf
add
popf
(bad)
jmp
add
sbb
push
sub
xor
or
jge
imul
test
aas
push
inc
xor
outs
es
push
fs
pop
popf
dec
mov
mov
xchg
cmc
sbb
loope
xchg
inc
mov
cmp
xchg
adc
cdq
ds
or
out
mov
jnp
push
xor
xchg
frstor
mov
ss
movs
pop
retf
fnsave
into
push
inc
and
popf
adc
mov
call
fst
out
movs
sub
int
out
pop
xor
and
and
xlat
fisub
pop
fadd
cmc
cwde
shr
mov
ins
add
idiv
dec
sbb
imul
inc
cmp
int
push
bound
rol
push
ins
add
test
push
or
mov
popa
retf
fist
jmp
sub
movs
push
outs
repnz
aas
cmc
ja
cmp
ror
in
clc
retf
fmul
fmul
test
cmp
neg
loopne
add
add
sbb
ins
cmp
or
out
cld
call
push
mov
pop
repnz
dec
lahf
int
test
xor
push
xor
jb
(bad)
mov
dec
out
test
jo
mov
add
pusha
sbb
pop
pop
lods
dec
aad
dec
(bad)
cmp
mov
cmp
out
jno
outs
std
dec
repz
add
or
pop
dec
and
cli
dec
adc
inc
mov
xchg
cmps
mov
xchg
cmc
xchg
ds
xchg
inc
sub
ror
ss
test
push
xor
xchg
mov
clc
movs
loope
nop
push
cmps
jmp
test
mov
mov
pop
dec
rcl
call
mov
push
pop
xchg
pop
mov
dec
xchg
fcom
dec
fst
jp
mov
in
push
test
imul
mul
dec
sbb
xor
mov
dec
bound
dec
jno
cli
sub
addr16
inc
mov
or
xchg
bound
retf
push
out
out
pop
cld
ds
dec
jb
xchg
out
stc
out
cmp
xlat
adc
(bad)
loop
cwde
fimul
repnz
retf
fs
in
jnp
gs
add
pop
xchg
adc
arpl
and
adc
pop
mov
rcl
xor
xor
and
cmp
ins
les
(bad)
repnz
cmps
xchg
xchg
shl
push
ret
je
mov
add
addr16
xchg
xor
imul
(bad)
not
fmulp
int3
xchg
ss
sbb
or
mov
dec
lock
mov
push
shl
outs
push
sti
or
(bad)
mov
in
jmpw
fwait
sahf
call
das
out
(bad)
xlat
out
int3
xor
sbb
mov
cs
cmp
sbb
jmp
in
pop
arpl
call
(bad)
xor
dec
jno
and
or
jmp
lock
mov
add
or
or
sahf
push
inc
ins
sbb
add
aam
(bad)
shr
aam
stos
mov
sub
stos
outs
(bad)
jae
and
mov
call
jno
iret
rcl
jne
and
add
std
push
add
stos
mov
iret
(bad)
dec
or
ins
ins
push
adc
or
pushf
rcr
mov
lods
dec
js
xchg
shl
xchg
fs
add
push
imul
pop
aam
stc
jo
xor
mov
cld
pop
lods
in
pop
movs
sbb
add
push
je
(bad)
icebp
xlat
or
inc
adc
sub
sbb
std
shl
mov
xchg
fsub
fadd
cs
adc
call
push
test
mov
(bad)
xor
cmps
or
mul
cmp
rcr
xor
push
and
cdq
cmps
in
jmp
jmp
fidiv
adc
inc
rcl
ss
sahf
hlt
and
mov
(bad)
add
(bad)
push
jbe
(bad)
movs
dec
sub
xchg
shl
push
and
pop
mov
movs
xchg
fldenv
(bad)
sahf
xchg
adc
and
push
jne
ret
xor
and
mov
and
ins
mov
jp
out
rcl
xor
xlat
inc
aam
(bad)
ret
int3
iret
stos
das
pop
popf
add
cmp
sbb
loop
pop
cld
xchg
mov
jo
ret
sbb
fst
jge
jne
add
mov
mov
adc
jl
sti
sbb
adc
and
xchg
pushf
fld
mov
icebp
and
dec
in
inc
inc
xchg
jg
sub
mov
xchg
mov
push
adc
add
jns
pop
jae
psrld
fadd
les
mov
add
popa
sti
mov
or
mov
add
push
mov
popa
xchg
lods
push
dec
test
lahf
jge
mov
add
push
hlt
int
dec
leave
jecxz
and
mov
hlt
sub
pusha
lahf
jmp
js
fwait
test
sbb
pop
pusha
jecxz
mov
adc
push
push
pop
push
dec
push
or
lahf
push
call
stos
sbb
inc
inc
dec
lods
pop
fwait
mov
add
xchg
cmp
xlat
sbb
xchg
and
xor
cmp
and
dec
idiv
movs
mov
imul
xchg
mov
sbb
in
int3
ins
adc
nop
leave
loope
adc
push
or
(bad)
cmps
retf
loopne
add
pusha
icebp
leave
pop
cmps
not
xchg
in
push
shl
pop
(bad)
into
xor
pop
fnstsw
in
ds
inc
jns
in
cmp
(bad)
stos
mov
stc
into
das
or
inc
sub
inc
aaa
test
stc
out
mov
mov
jmp
leave
mov
stos
shl
jo
(bad)
ret
(bad)
int
aad
jle
dec
mov
cmc
jg
movs
jge
sahf
cmp
sbb
sti
jg
inc
retf
dec
daa
(bad)
pop
and
xchg
jno
leave
adc
std
es
add
out
ret
aam
mov
call
inc
sbb
adc
mov
pusha
mov
clc
fadd
jmp
sub
jae
mov
push
mov
stos
js
aam
sti
jl
and
cld
test
xor
dec
fld
xor
test
je
out
mov
call
sbb
xchg
int
outs
adc
aad
sub
cdq
mov
mov
or
dec
ret
sub
jne
in
pop
icebp
and
mov
arpl
frstor
fnsave
fcmovne
adc
lea
rcl
sti
push
mov
ins
stos
das
cmp
stc
movntq
sar
jns
les
mov
cmp
cli
cld
or
imul
js
mov
mov
(bad)
fsub
cwde
bound
cmps
mov
sbb
sbb
pop
(bad)
pop
stos
stos
pop
xchg
mov
cli
into
jne
out
scas
std
addr16
aas
test
xlat
add
aad
add
in
test
nop
inc
call
jb
outs
pop
shl
sbb
add
xor
mov
mov
(bad)
fcom
cmps
jge
xchg
add
cmps
movs
xor
sar
mov
int
and
scas
sbb
lds
dec
enter
jp
xor
sbb
hlt
cmp
nop
push
imul
sub
ja
jbe
mov
push
test
push
xlat
rcl
or
pop
test
sbb
dec
lea
and
in
fs
outs
push
idiv
(bad)
and
inc
jae
addr16
xchg
(bad)
jnp
push
in
popf
or
in
cmc
outs
jo
loope
mov
fisub
loop
xor
lods
lods
imul
leave
sub
push
jnp
lds
inc
jp
(bad)
stos
xchg
call
out
jecxz
pop
push
(bad)
shl
pop
cmps
enter
lods
push
mov
cmp
retf
adc
pop
jbe
or
xchg
sti
rol
cdq
xchg
cmp
mov
or
jge
dec
xor
fisttp
push
sbb
cmc
das
mov
lahf
mov
add
data16
ss
lds
jbe
out
and
add
out
mov
jbe
sbb
inc
dec
out
push
ss
jmp
js
xchg
lods
in
xlat
cdq
out
outs
dec
jo
jg
mov
in
nop
mov
loope
ja
xchg
mov
sbb
mov
xchg
int
das
loopne
dec
cld
add
add
enter
dec
retf
jg
dec
inc
push
xchg
pop
in
and
fbstp
mov
jae
cmps
jmp
mov
add
fisub
lahf
pop
sub
test
(bad)
test
out
js
jmp
les
imul
push
xor
movs
mov
bt
cmp
mov
xchg
sbb
fcmovnbe
dec
out
adc
call
ret
ret
out
movs
out
and
mov
imul
das
fdivrp
xchg
enter
cmc
push
test
retf
mov
stos
or
je
cs
or
fsubp
and
cwde
pop
and
fbstp
push
or
adc
or
movs
in
gs
mov
loopne
retf
mov
mov
fwait
jmp
dec
jne
fbld
outs
mov
xchg
stos
mov
lahf
movs
fs
dec
push
mov
aas
loope
outs
imul
adc
cmp
sbb
mov
xchg
adc
push
test
jae
add
cmps
and
mov
jmp
dec
pop
in
out
cmps
jmp
leave
sbb
out
sbb
inc
inc
fld
inc
enter
cmps
xchg
es
jns
xor
(bad)
sbb
xchg
cmp
push
mov
xor
ret
jg
mov
hlt
lds
and
das
rol
imul
fptan
jmp
jg
enter
das
adc
mov
popa
add
(bad)
adc
shl
cmp
jns
loopne
aaa
les
jb
std
push
fcomp
add
imul
sbb
jge
and
xor
into
cs
pushf
hlt
aad
mov
shl
sub
pop
adc
dec
push
mov
add
cmc
mov
push
f2xm1
push
jmp
popf
mov
fsub
cld
jle
aad
stos
test
pop
shl
inc
pushf
add
fwait
call
mov
cld
mov
dec
inc
(bad)
xor
jmp
out
dec
imul
add
xor
sub
pop
sub
std
cdq
mov
pop
aad
(bad)
nop
adc
pop
ficom
sub
sbb
in
or
or
(bad)
push
ret
sti
into
cmp
pop
or
push
retf
mov
fnsave
repnz
data16
cli
leave
sar
out
shl
test
popa
push
and
rcr
mov
mov
xor
adc
les
or
adc
sahf
ret
(bad)
scas
out
cmp
mov
enter
xor
jecxz
xor
loope
jmp
clc
(bad)
or
mov
fldenv
scas
nop
addr16
test
rol
outs
fst
xchg
fidiv
or
sar
mov
enter
cmp
sahf
das
out
mov
xchg
jne
and
nop
in
push
rol
pminsw
sub
cdq
xchg
lods
lock
out
addr16
jns
loope
inc
out
jns
sahf
(bad)
and
movs
inc
shr
(bad)
sbb
repz
pop
popa
xchg
mov
cmp
cmps
jp
call
bound
stos
mov
aam
jo
test
cmp
mov
ins
loopne
cmc
sub
sbb
mov
retf
fs
sub
mov
pusha
xchg
xchg
push
sbb
mov
mov
mov
out
nop
adc
jo
and
mov
scas
fcom
pop
sub
call
outs
(bad)
ins
cmps
mov
repz
ror
sbb
repz
cmc
in
out
jle
xor
(bad)
xchg
mov
ret
std
push
push
xlat
xor
jo
clc
adc
rcr
mov
jge
xor
pop
pop
sbb
mov
add
popa
or
test
pop
xor
cmp
push
push
neg
cld
or
pop
movs
pushf
icebp
sub
sub
push
or
inc
xchg
js
call
in
push
dec
xchg
ret
xor
movs
cmp
cmp
pop
lock
in
shld
mov
mov
mov
shr
xor
mov
nop
pop
(bad)
mov
xchg
push
cwde
pop
daa
sbb
and
cs
into
and
scas
dec
mov
mov
pop
jne
jmp
add
(bad)
bound
pop
cmps
ret
bound
pop
stc
fdiv
test
xchg
pop
push
xchg
and
and
in
pop
dec
(bad)
xchg
sbb
popf
lahf
inc
iret
xchg
lock
fist
fcmovne
mov
pop
mov
outs
push
aam
cmps
in
pop
mov
dec
in
outs
sub
push
or
add
arpl
adc
jl
xor
push
movs
and
rcr
xor
mov
dec
xor
call
test
push
rol
xlat
(bad)
ins
xchg
xor
or
test
leave
cmps
pushf
xchg
sbb
add
mov
js
scas
sar
div
test
mov
and
mov
inc
add
inc
add
test
loope
jle
sub
pop
cmc
mov
sbb
jmp
mov
nop
xchg
or
aas
inc
and
mov
pop
mov
and
shl
cld
neg
sub
dec
add
and
ror
aas
movs
pop
xor
lahf
stos
cmp
adc
out
lahf
pop
ds
pop
outs
shr
push
inc
repz
mov
add
in
push
pop
or
std
cmc
inc
pusha
gs
mov
out
sub
xlat
mov
adc
mov
cmp
call
mov
pop
sbb
fld
push
add
(bad)
into
rcr
lods
call
xor
aas
adc
daa
xor
add
cmps
(bad)
(bad)
bound
mov
dec
mov
mov
dec
jmp
add
inc
loopne
mov
into
or
pop
call
xlat
aam
jmp
clc
add
adc
ins
mov
retf
iret
pop
inc
adc
test
push
ds
jno
pop
popf
in
(bad)
mov
icebp
jb
push
(bad)
rcr
out
aas
call
inc
mov
pop
cwde
stos
test
or
clc
and
mov
sub
pop
ret
or
push
cmps
lea
imul
add
imul
sub
enter
outs
inc
jns
adc
or
shl
jns
stos
xchg
in
adc
arpl
in
out
jmp
sti
int
in
xor
mov
or
xor
inc
loopne
pop
add
mov
in
and
pop
pushf
adc
and
test
mov
lods
div
jle
popa
(bad)
ret
ins
in
inc
jns
cmp
aam
loop
icebp
sbb
dec
mov
scas
jl
rcl
pop
xchg
cmp
cmc
icebp
xchg
jbe
xchg
jl
sahf
lahf
ficomp
js
jecxz
leave
adc
xchg
in
dec
jle
jo
xchg
imul
xor
fcomp
stos
sahf
cmp
(bad)
pop
inc
call
int3
shr
std
jmp
xchg
outs
ja
cmps
sub
ds
xchg
push
and
cdq
sbb
jnp
xchg
shl
mov
jne
lea
add
and
daa
add
push
in
retf
mov
mov
xchg
jecxz
in
inc
(bad)
dec
call
(bad)
scas
adc
cdq
adc
sub
adc
repnz
cmps
aas
ds
xchg
test
shl
sub
or
pop
aas
and
push
push
push
int3
jmp
xlat
or
pop
or
xchg
and
fldenv
scas
clc
push
cmp
outs
(bad)
adc
fimul
xor
test
pushf
and
sbb
jnp
add
jmp
or
rcr
ds
nop
cmp
mov
adc
icebp
mov
mov
sub
jle
add
ins
jae
xor
xchg
in
call
xor
fidivr
xor
enter
ins
bound
aaa
pop
inc
test
xchg
add
jl
or
and
jl
repz
(bad)
xor
popa
gs
sub
cs
fwait
push
cdq
inc
and
sub
mov
stc
test
jne
xor
out
sub
fistp
std
or
stos
mov
(bad)
xchg
clc
push
arpl
mov
jl
imul
aaa
into
add
(bad)
fcmovnb
arpl
sub
sub
xor
outs
popa
(bad)
stos
std
cs
pop
lock
fwait
sbb
adc
pop
sub
out
cmp
push
aaa
jmp
xor
adc
std
fs
mov
inc
fld
out
pop
ret
retf
lods
call
mov
(bad)
popa
jnp
out
jl
popa
lods
sbb
pop
cmp
sub
push
push
out
jnp
repz
dec
push
pop
cmp
cmp
xchg
in
lahf
leave
mov
mov
push
jno
iret
xor
je
imul
mov
bswap
mov
ss
push
cs
fdivr
popf
pop
adc
mov
(bad)
imul
(bad)
cmp
or
ret
add
pop
mov
pop
dec
inc
cmp
xor
push
pop
mov
inc
fisttp
or
xchg
mov
jnp
hlt
movs
loop
retf
push
out
add
ret
ror
jecxz
popf
out
or
push
mov
dec
pop
leave
push
ss
sbb
xchg
and
jno
ins
ss
clc
pop
stos
jmp
sub
inc
call
or
imul
sub
xor
ficom
pop
jb
loopne
xchg
sub
imul
fdiv
scas
xchg
xchg
ja
add
dec
dec
mov
xchg
lock
out
mov
dec
lahf
cmc
leave
jg
repnz
setb
loop
lds
loopne
cwde
add
or
push
inc
xor
retf
jne
xchg
push
xchg
test
xchg
cmp
mov
sbb
pop
sar
xor
ffree
sbb
int
jg
pop
or
es
mov
or
je
sti
or
pop
mov
or
icebp
cdq
pop
in
xor
adc
call
cmps
shl
mov
fist
xchg
push
(bad)
sti
inc
cld
push
add
xor
sahf
ret
lds
mov
adc
ja
sub
cwde
pop
imul
cmp
push
repnz
cmps
jmp
popa
clc
push
ror
mov
or
ret
shr
push
pop
leave
push
and
sbb
shr
loop
jno
les
dec
fisub
dec
ins
jmp
sub
pusha
out
add
lea
sub
paddw
aam
or
push
xor
int
shr
test
pop
in
loopne
xor
je
es
fcomp
xchg
dec
jo
shl
nop
les
or
test
ficom
cli
mov
add
xor
cmp
xchg
mov
into
out
mov
jns
pop
repz
outs
dec
push
xchg
and
pop
inc
cmc
xchg
inc
fmulp
shr
stos
pop
stc
and
out
xlat
scas
mov
sub
test
stos
xor
popf
dec
out
pop
pop
test
pusha
jle
pop
pminsw
xlat
cwde
mul
dec
xchg
or
sub
pop
jbe
xchg
cvttps2pi
test
push
cdq
(bad)
push
push
mov
call
inc
jl
sahf
jb
push
ins
dec
push
inc
xor
imul
nop
xor
in
int3
cmp
and
test
and
shl
hlt
mul
mov
(bad)
aam
jle
cld
xchg
pop
push
call
outs
js
nop
icebp
cli
pop
mov
int
mov
mov
pop
mov
stos
int3
mov
adc
mov
in
pop
jg
daa
lods
pop
jecxz
pop
in
(bad)
ror
fsubr
and
cli
ds
in
dec
push
into
pop
sub
jl
jne
mov
sbb
ss
addr16
out
enter
jmp
aam
cdq
push
inc
dec
div
push
and
and
push
imul
xor
gs
dec
lock
dec
pop
sahf
loopne
adc
jmp
push
xchg
inc
aas
cmp
adc
push
fucomi
mov
pop
jmp
imul
pusha
call
or
stos
push
rcl
jp
jmp
mov
lock
xor
arpl
pop
pop
inc
add
(bad)
add
loopne
xchg
sub
jno
push
jge
das
movs
dec
push
das
int
add
(bad)
out
stc
xchg
aas
fs
sbb
cli
sahf
in
movs
popa
js
mov
add
inc
sar
pop
jb
jl
jo
ror
or
loop
jne
xchg
scas
aaa
jmp
pop
outs
or
mov
loop
push
(bad)
outs
push
out
outs
fs
jmp
cmp
or
xor
xchg
mov
adc
shl
pop
lock
push
sbb
call
inc
mov
rcr
and
in
add
push
(bad)
push
push
lea
add
cmp
xchg
(bad)
or
mov
jmp
or
(bad)
clc
std
imul
sbb
enter
cmp
adc
jae
les
jp
loop
mov
or
out
int
leave
ret
inc
loope
or
mov
fs
mov
sbb
pop
push
mov
xor
push
call
data16
dec
out
(bad)
xor
dec
pop
pop
outs
push
div
jo
push
sbb
cmps
arpl
test
aaa
and
shl
pushf
mov
mov
sbb
stos
test
mov
or
mov
ror
sub
xor
mov
xor
xor
xchg
mov
mov
in
mov
mov
test
arpl
retf
loopne
enter
rcl
and
cmp
inc
xchg
clc
inc
xor
outs
fmul
fs
sbb
push
jb
mov
adc
mov
icebp
ja
(bad)
vsubps
sbb
inc
xchg
or
and
int
adc
push
out
mov
add
xchg
loop
mov
sub
jns
jne
popa
mov
xchg
inc
ret
cld
sbb
pop
pop
in
stos
icebp
or
sub
push
xor
scas
push
mov
inc
adc
sbb
cmp
mov
push
in
int3
mov
fld
mov
fiadd
out
jg
cmp
push
and
loope
ds
fistp
imul
scas
push
scas
(bad)
in
push
cli
mul
iret
sbb
enter
hlt
mov
sar
or
sahf
pusha
(bad)
shl
mov
lods
enter
ins
retf
mov
add
or
sbb
inc
mov
cwde
les
fs
loope
push
das
pop
test
mov
and
or
dec
gs
push
shl
shl
das
cli
stc
ja
shl
sahf
push
jo
mov
xor
arpl
arpl
mov
data16
push
pop
push
mov
clc
sub
or
nop
mov
add
cmp
sub
cli
mov
je
adc
push
rep
or
or
pushf
daa
jg
test
je
in
jae
iret
push
icebp
ins
cmp
push
jae
inc
xchg
lods
int
mov
mov
cli
adc
add
jae
and
or
int3
fistp
sar
ins
inc
mov
and
add
sub
ret
js
enter
xor
xchg
mov
daa
clc
lahf
addr16
jbe
cdq
pusha
(bad)
movs
dec
mov
ror
or
pusha
pop
ss
push
and
cmp
jmp
cmp
xlat
adc
pop
xchg
loop
push
fldz
loope
fnclex
sbb
ins
xchg
mul
stos
aad
loopne
shl
lea
test
mov
in
lahf
cs
pop
pop
nop
imul
xor
out
mov
rcr
mov
xor
lea
inc
fld
adc
mov
repnz
out
mov
jne
cmp
call
sub
jge
cmp
sub
ret
cmps
(bad)
rol
div
fisub
(bad)
xor
pushf
mov
lods
in
sub
sbb
in
pusha
xchg
jae
(bad)
dec
retw
mov
ss
repnz
pop
rcl
mov
loop
add
(bad)
sbb
div
sbb
aam
addr16
(bad)
pop
in
pop
jge
iret
iret
adc
mov
jnp
mov
lods
das
in
stos
adc
ins
gs
pop
test
sub
mov
xor
push
and
out
shl
jmp
mov
xor
test
mov
int3
xor
sub
xlat
lods
inc
ds
mov
add
popf
adc
sbb
neg
dec
mov
and
sub
loopne
lea
cmp
test
lds
scas
mov
adc
fadd
nop
mov
scas
dec
sar
pushf
jecxz
sub
pushw
das
lahf
aaa
cmp
xchg
fisttp
inc
add
adc
shr
fwait
imul
xchg
jp
ins
sub
in
retf
cs
mov
mov
dec
add
ret
jge
repnz
xchg
aad
outs
loopne
rcr
adc
add
pop
xchg
xor
ficomp
paddd
out
(bad)
jb
je
popf
test
xchg
in
cli
and
pusha
je
cdq
xchg
inc
out
lods
cwde
mov
cmp
add
lods
add
mov
test
aaa
dec
shr
pop
pushf
cmp
leave
ja
aas
sbb
pushf
fmul
or
push
sbb
mov
ret
aam
jb
ss
xlat
in
push
push
inc
jb
and
push
and
pop
mov
dec
xchg
scas
(bad)
and
repnz
mov
js
cmc
fidiv
inc
or
cmc
repz
and
xor
push
fcmovb
xor
rol
adc
out
jno
inc
test
push
call
out
outs
(bad)
jl
mov
dec
inc
cmp
and
sti
push
xchg
add
(bad)
sub
and
movs
das
out
inc
push
call
sub
test
test
out
sub
(bad)
adc
xchg
inc
dec
inc
iret
push
xor
inc
mov
test
sbb
xor
into
scas
jecxz
cmp
stos
push
sub
inc
or
push
jp
std
cwde
mov
add
adc
fisub
mov
and
sub
in
jb
jg
pop
daa
mov
inc
clc
inc
adc
sbb
arpl
cmp
push
sbb
cs
movs
sub
mov
cmps
xchg
(bad)
pop
cmp
xchg
fmul
dec
mov
lahf
adc
mul
pop
sbb
xlat
les
bound
cmps
xchg
mov
sti
stos
push
push
lods
cmp
stc
bound
push
and
(bad)
sbb
call
cmc
rcr
shl
in
fld
inc
push
sbb
push
test
daa
hlt
push
aaa
aas
fwait
dec
add
mov
and
or
jb
cmp
nop
gs
test
mov
adc
std
push
jns
inc
or
int3
or
not
fld
mov
js
mov
sti
bound
xor
rcl
nop
popa
pop
sbb
scas
lods
iret
xchg
pop
cwde
mov
and
lods
iret
add
sbb
ror
push
sub
fiadd
ins
cmp
lds
pop
cmp
or
retf
icebp
inc
int
cwde
fcomip
dec
or
mov
loopne
mov
or
shr
add
cmps
and
jb
sub
jge
inc
nop
enter
sub
(bad)
nop
jle
neg
mov
push
mov
mov
xchg
scas
dec
rcl
adc
(bad)
push
lods
adc
pop
mov
or
sbb
sbb
mov
jns
push
pop
and
leave
jmp
in
or
out
mov
pusha
add
push
jg
clc
xchg
retf
cmp
retf
jo
sbb
jg
xchg
mov
and
hlt
out
sbb
mov
cmp
imul
pop
or
out
sbb
cdq
sbb
push
mov
mov
das
lods
xchg
not
nop
pop
cdq
pushf
(bad)
ins
cs
call
sbb
addr16
hlt
push
sub
ret
mov
neg
in
nop
sub
push
retf
push
cmps
push
out
js
sub
dec
lds
xchg
into
test
xor
and
jle
rcl
repnz
fwait
mov
sbb
pop
and
mov
data16
retf
shl
dec
data16
xor
cmp
aam
dec
xchg
gs
scas
pop
push
mov
mov
in
push
or
pop
lods
inc
bound
stos
lock
push
rcl
xor
sar
int3
mov
mov
clc
out
xor
xchg
push
(bad)
push
popf
xlat
fisttp
push
push
pop
into
sbb
xchg
xchg
ss
mov
and
jmp
mov
out
adc
mov
adc
icebp
dec
bound
outs
clc
stos
frstor
imul
mul
dec
adc
fstp
adc
cmp
inc
pop
jb
cmp
std
(bad)
cmps
push
jno
adc
rcl
adc
jb
inc
push
jmp
inc
das
mov
aaa
pop
xchg
mov
fwait
or
inc
cdq
stos
std
push
sub
movs
movs
fs
adc
cmp
mov
call
jmp
int3
popa
aaa
jne
and
sbb
jo
loopne
add
adc
loope
int3
mov
cmp
dec
cld
inc
jmp
cdq
or
(bad)
and
int
data16
sbb
dec
or
jb
popw
and
dec
ds
imul
loope
xor
cmps
aas
dec
mov
je
in
inc
jae
mov
mov
sub
mov
daa
sub
push
pop
ins
sahf
pusha
(bad)
add
cld
jmp
jge
xchg
dec
dec
inc
shl
fild
les
retf
hlt
add
mov
psubq
fidiv
mov
repz
std
xor
mov
pop
sti
mov
cmp
cmp
(bad)
inc
mov
jne
out
pop
(bad)
pop
pop
sbb
(bad)
xor
test
test
inc
jecxz
and
addr16
imul
mov
dec
(bad)
mov
inc
add
adc
in
in
inc
cli
jb
mov
cmp
add
mov
pop
(bad)
jl
add
sbb
mov
xchg
in
in
mov
inc
ror
mov
sub
rcl
jbe
add
dec
int
xor
imul
jb
mov
sbb
aaa
call
jbe
mov
jns
mov
push
xor
mov
or
pop
xchg
xor
ss
jb
dec
pop
arpl
mov
jmp
outs
sub
sub
ss
and
cwde
jne
ss
or
gs
retf
pop
repnz
out
inc
cmp
mov
cmp
adc
mov
and
inc
inc
xchg
pop
sub
fisttp
das
cmps
aad
sub
int
nop
lods
push
adc
inc
push
lahf
push
adc
sub
push
jl
sub
dec
xchg
dec
nop
sahf
enter
jecxz
add
cmp
mov
fild
movs
pop
jnp
mov
inc
les
jecxz
sub
xor
sti
adc
cmp
adc
in
sub
in
mov
mov
imul
retf
jo
push
add
cwde
pop
shl
ror
inc
hlt
ds
loope
call
(bad)
jl
inc
push
dec
cmp
hlt
xchg
ins
push
stos
(bad)
aam
out
loopne
adc
mov
out
mov
cmp
es
int
xchg
in
cld
jle
lods
fldcw
sbb
jmp
sbb
mov
imul
mov
sbb
and
retf
rcl
lea
ja
mov
pop
lods
jp
sbb
sahf
lods
sbb
mov
cmp
xor
in
push
inc
mov
call
push
into
cdq
jg
jno
cmp
test
mov
pop
jo
(bad)
cmc
in
push
dec
jl
xchg
test
pushf
mov
add
sub
lds
mul
xchg
cmp
adc
or
adc
jmp
add
and
shr
sub
ficomp
lods
and
or
arpl
mov
in
pop
add
sbb
aam
imul
(bad)
leave
xor
call
neg
test
inc
in
clc
loope
push
arpl
sub
stos
fadd
bound
repz
mov
xchg
mov
mov
mov
mov
fldlg2
add
stc
xchg
repnz
or
push
xchg
fcomp
iret
push
sbb
xchg
pop
jnp
fisttp
mov
outs
cmc
mov
(bad)
mov
mov
cmp
add
popa
scas
leave
mov
sbb
repnz
jle
movs
adc
test
lahf
mov
or
sti
push
push
push
movs
xor
jle
mov
call
add
(bad)
loop
and
setnp
int
in
pop
mov
pop
aas
xor
jns
xchg
mov
jecxz
mov
sub
ficomp
pop
add
pop
xor
sbb
imul
mov
and
push
jno
(bad)
mov
dec
cmp
xchg
push
std
lea
lea
dec
mov
cmps
mov
sbb
lods
das
imul
jnp
retf
cwde
add
pop
test
rcr
mov
xchg
add
pop
dec
jle
aad
sub
(bad)
push
xor
pop
ror
cs
imul
cmc
sbb
pushf
sub
jnp
les
and
shl
neg
out
(bad)
lock
fucomip
cli
push
fldcw
cmp
cdq
dec
aas
or
inc
fwait
fwait
push
or
mov
dec
cmp
mov
mov
mov
cmp
sub
fmul
loopne
cmp
push
mov
adc
mov
jecxz
sahf
hlt
rcr
add
je
mov
(bad)
mov
jnp
ret
cmp
mov
out
test
in
and
outs
daa
xchg
sub
les
inc
das
sbb
jmp
pop
dec
push
jl
push
mov
mov
hlt
sub
call
or
loopne
dec
int3
retf
fs
js
mul
ins
aad
adc
cmp
and
xchg
mov
in
stos
(bad)
call
cdq
sahf
push
and
jmp
std
stos
into
xlat
sub
repnz
icebp
mov
fdivp
push
mov
push
outs
xor
fmul
inc
push
inc
lahf
in
data16
movs
(bad)
add
mov
sahf
dec
or
and
ds
fcom
mov
adc
jg
cmp
(bad)
fsub
dec
add
push
pop
(bad)
add
jmp
mov
jg
mov
xchg
push
les
xor
iret
adc
cmp
add
xor
out
(bad)
dec
add
push
inc
(bad)
adc
and
ins
mov
lock
jle
cmp
enter
sahf
or
pop
dec
cmps
dec
rcl
test
retf
pop
or
push
dec
or
pop
sub
dec
and
fdiv
out
loopne
fistp
mov
push
push
test
adc
dec
js
icebp
repz
call
jl
pop
push
pop
rcl
jae
add
inc
cmp
mov
add
into
xchg
sar
ss
or
mov
in
enter
shl
push
cmp
das
mov
dec
je
jbe
cmps
data16
dec
jl
call
sub
movs
pop
xor
pop
adc
mov
mov
dec
cmp
xor
cld
mov
adc
xchg
inc
xchg
in
iret
inc
xor
xor
imul
out
mov
jo
adc
jg
or
mov
rol
push
sub
sbb
and
rol
test
ins
or
in
mov
ins
mov
mov
sti
jo
stos
xchg
add
retf
push
shl
adc
xchg
xor
(bad)
(bad)
mov
inc
push
mov
pop
mov
(bad)
(bad)
in
(bad)
push
cmp
adc
dec
dec
pop
mov
icebp
pop
dec
rcr
bound
mov
mov
mov
xor
into
push
adc
mov
movs
cmc
cmp
mov
pop
test
iret
je
push
hlt
enter
pop
push
cmps
pop
push
push
mov
xor
and
inc
cmps
lea
cs
push
(bad)
mov
ret
test
and
rcl
clc
out
fcmovu
sbb
inc
and
iret
(bad)
stc
js
leave
ret
jno
push
jb
ins
lahf
dec
pop
test
mov
pop
stos
cld
ins
add
pop
cmc
xor
imul
or
ds
sbb
xor
mov
or
gs
mov
nop
(bad)
inc
mov
xchg
and
retf
xchg
push
fs
xchg
mov
push
(bad)
mov
pushf
retf
adc
jecxz
or
jecxz
push
mov
cmps
jne
mov
addps
push
or
fld
or
(bad)
or
dec
jecxz
xor
outs
sbb
pushf
xor
rcl
mov
push
dec
add
popa
cs
mov
xchg
fwait
cmc
cmps
mov
fistp
repz
clc
ror
scas
or
cwde
lds
call
fwait
pop
push
ja
adc
mov
mov
xor
sub
mov
test
sub
ja
les
sbb
adc
aam
push
cmps
stc
inc
js
cdq
mov
mov
enter
ficom
pusha
sbb
enter
(bad)
mov
fcomp
fdivr
xchg
(bad)
adc
and
adc
mov
cmp
jmp
fucomi
cmp
jno
xor
sar
or
mov
fmul
rcr
jle
inc
pop
pop
adc
bound
push
cmps
mov
test
inc
mov
pop
(bad)
int3
xchg
jl
pop
hlt
dec
cmp
sbb
cmp
push
mov
mov
dec
mov
inc
inc
mov
adc
and
scas
(bad)
call
rol
mov
mov
pop
cmc
jge
test
add
inc
ret
call
lock
jp
cmp
jmp
xchg
fwait
add
mov
sbb
jge
fisub
and
call
xchg
jb
dec
sti
add
xor
es
dec
leave
push
test
sub
lahf
(bad)
mov
fchs
(bad)
jns
sbb
sbb
out
push
sbb
dec
(bad)
sahf
xor
and
jp
add
cs
add
sub
(bad)
mov
cmp
movs
aaa
aam
push
es
or
pushf
test
push
cli
dec
out
push
adc
cmps
in
or
je
repz
popf
or
ds
(bad)
push
or
cdq
mov
jmp
sbb
ins
out
std
mov
cs
push
dec
xchg
je
or
ins
jge
loop
push
cwde
or
arpl
(bad)
jp
jnp
scas
and
xchg
jmp
push
cmp
stc
ror
pusha
movs
sbb
sbb
mov
ins
or
xchg
jl
dec
scas
mov
rcl
cmc
inc
addr16
push
jo
mov
dec
pop
cmp
std
repnz
push
cmp
push
push
or
sahf
scas
loop
test
retf
push
fcomp
mov
daa
jmp
das
add
ror
test
lods
lods
rol
xchg
cmp
and
xchg
mov
and
xchg
dec
aam
pop
xor
enter
jne
sbb
jp
pop
enter
rcl
dec
adc
push
adc
cdq
sar
push
fwait
outs
pop
jnp
dec
mov
inc
hlt
cmc
test
shl
mov
xchg
ficomp
push
xchg
mov
mov
mov
mov
mov
(bad)
mov
dec
aam
xor
adc
pop
(bad)
pop
mov
sub
mov
movs
mov
dec
xbegin
dec
shl
adc
fsubr
lods
mov
xor
and
jge
imul
and
and
or
aam
pop
cmp
push
out
rol
push
dec
jecxz
sub
or
push
fdiv
mov
mov
adc
test
xor
sbb
push
loope
adc
pop
lods
pop
xchg
add
adc
push
sub
popa
mov
enter
pushf
jmp
mov
add
mov
jp
dec
imul
daa
and
xchg
sub
pop
fild
clc
int3
je
shl
into
pusha
cmp
popa
cmp
shl
dec
ins
in
sar
mov
jl
add
call
mov
sbb
adc
push
dec
aaa
cmp
fcom
movs
pop
mov
adc
fidiv
int
cmps
ins
or
push
nop
xchg
sbb
inc
in
lods
cmps
mov
and
push
(bad)
int
into
jmp
mov
mov
ror
mov
xor
jmp
and
mov
or
cmc
jg
jmp
mov
aad
data16
xchg
adc
push
shr
jecxz
test
cs
movs
add
sub
xchg
mov
xlat
jae
sbb
push
and
(bad)
pop
push
mov
test
jge
pop
addr16
push
or
test
fiadd
test
and
pop
pop
push
lahf
sub
mov
xor
or
lods
stos
popf
cmp
and
jp
lods
nop
adc
pushf
imul
mov
frstor
inc
inc
sahf
nop
xor
adc
scas
jge
sub
ss
mov
or
dec
aad
cmp
push
and
xor
inc
dec
in
(bad)
and
pop
fwait
sub
mov
dec
je
ret
stc
add
xor
or
adc
xor
xchg
xchg
jle
sub
lock
in
jp
jnp
inc
popf
or
mov
pop
jo
retf
das
and
es
std
sbb
jno
or
mov
sub
mov
out
push
mov
loop
or
(bad)
pop
scas
je
pushf
mov
sub
cld
ror
mov
nop
fnstcw
mov
pop
daa
popf
jns
xlat
sub
je
cdq
push
jl
call
dec
dec
into
(bad)
xor
jns
or
mov
les
sti
into
es
add
pop
adc
lea
or
inc
xor
dec
ss
mov
aad
fld
addr16
sar
jb
sub
xor
jbe
imul
in
leave
cmp
std
xchg
mov
sub
mov
jb
jmp
enter
push
jbe
mov
lds
int3
cdq
push
(bad)
or
xlat
loop
pop
jbe
jns
das
sub
xchg
sub
dec
je
mov
ins
dec
lea
cdq
mov
popf
fdivrp
psrad
stc
jge
cmp
dec
or
xor
rcr
jecxz
add
repz
movs
jmp
retf
inc
inc
and
sbb
mov
retfw
shl
sbb
dec
pop
push
bound
mov
mov
pop
mov
inc
xor
add
mov
stos
pop
sbb
and
xor
test
add
aam
out
push
jbe
mov
xor
or
mov
sub
sub
dec
shr
xchg
cmc
pop
or
cdq
lds
pop
addr16
cmp
shr
mov
mov
movs
jb
jge
mov
scas
xchg
add
imul
xchg
sahf
xor
mov
xlat
daa
mov
stos
aas
jne
ins
test
mov
and
push
push
dec
repz
cmp
push
and
out
out
ret
cmp
jle
cmps
ss
jecxz
retf
shl
sar
jno
lds
adc
jg
mov
icebp
add
stos
mov
popa
pop
dec
pop
pop
imul
(bad)
das
(bad)
mov
(bad)
loopne
out
add
inc
push
xchg
or
lods
das
ror
xchg
cli
icebp
add
pusha
lea
jecxz
jns
call
cmps
popf
repz
xor
inc
and
daa
cwde
xchg
push
cmp
push
daa
xor
cmps
aaa
cld
je
popf
dec
cmp
retf
stos
mov
mov
xor
xchg
lods
inc
fmulp
dec
xchg
rcr
imul
loopne
iret
jb
mov
dec
jle
in
dec
add
mov
inc
fs
cmp
xchg
jp
cld
jnp
pop
and
(bad)
jl
aam
pcmpgtw
adc
(bad)
out
aas
ror
es
dec
(bad)
sti
cwde
stc
mov
push
mov
and
inc
cs
push
mov
add
outs
shr
push
mov
dec
inc
jge
inc
in
nop
dec
test
add
and
add
mov
add
xor
and
xchg
bound
jmp
leave
mov
arpl
inc
xchg
xor
jecxz
stc
inc
or
mov
pop
xchg
push
or
sub
fdivrp
fmul
xor
jbe
stc
js
mov
pusha
pop
pop
outs
shl
add
adc
retf
adc
ds
and
in
xchg
mov
or
loop
add
mov
mov
dec
ss
imul
jnp
retf
cmp
movs
fidivr
adc
mov
xchg
bound
test
lds
in
fst
stos
mov
iret
inc
lock
adc
jl
(bad)
dec
into
sbb
xlat
cmp
cwde
js
test
jge
or
dec
mov
xor
or
jmp
gs
mov
pushf
call
inc
jnp
stc
inc
adc
xchg
bound
jb
das
mov
aaa
cwde
nop
mov
mov
xchg
lods
fist
sub
sub
ds
enter
cmps
lds
or
xchg
cld
push
into
pop
xor
leave
int3
adc
imul
stc
in
jg
imul
pop
fld
mov
dec
imul
push
sbb
and
inc
fdiv
ficom
jb
out
movs
jmp
pop
stc
mov
jecxz
sbb
or
ret
call
pop
ror
aas
sbb
imul
ins
repnz
outs
jp
js
std
fstp
push
in
movhps
and
and
xchg
or
(bad)
sub
scas
fistp
inc
cli
lahf
stos
pop
ror
call
call
mov
ins
or
out
stos
mov
stos
outs
dec
push
sub
mov
test
js
or
jo
mov
addr16
test
hlt
mov
mov
sub
ja
imul
imul
les
ja
imul
lods
dec
or
(bad)
push
test
mov
pop
mov
inc
shl
or
call
xchg
gs
movs
mov
(bad)
mov
loopne
lds
es
push
stos
cdq
xchg
jo
das
mov
mov
pop
push
jo
jnp
loopne
push
mov
or
(bad)
std
push
inc
sbb
lds
rcpps
mov
loopne
sti
add
popa
jecxz
adc
fldcw
and
js
ds
add
cs
data16
(bad)
mov
cli
loope
or
clc
add
dec
je
pop
jnp
xor
jge
in
cmp
adc
out
(bad)
mov
loope
popa
jae
inc
dec
hlt
mov
sbb
into
in
cmp
cmp
popa
push
and
jecxz
mov
inc
enter
test
sbb
adc
xor
lds
dec
lock
test
and
inc
fldenv
mov
jg
mov
mov
cld
xor
pmullw
and
test
mov
cmps
das
lds
inc
jmp
sti
add
push
jns
jo
jl
je
in
inc
sar
outs
mov
cli
out
iret
loopne
gs
cmps
pop
dec
dec
jns
aam
stc
lods
rol
inc
sub
inc
xor
ins
sub
cmps
and
cmp
mov
pop
rcl
mov
es
cli
(bad)
fisub
(bad)
out
repnz
pop
out
xor
jno
xchg
aas
push
(bad)
mov
ins
call
push
aam
pop
and
aaa
icebp
push
dec
jnp
adc
push
and
fnstcw
lds
test
fimul
mov
scas
sti
add
sahf
mov
daa
mov
popa
gs
mov
in
mov
icebp
cwde
icebp
mov
pop
ja
lods
loope
(bad)
test
cmp
mov
popf
xchg
inc
popf
add
add
pop
int
adc
outs
fwait
push
inc
sub
xlat
neg
push
(bad)
mov
mov
or
push
mov
or
mov
adc
sbb
div
xor
mov
or
dec
js
pop
mov
popf
xchg
push
lods
mov
mov
bound
ins
fcom
adc
gs
mov
test
dec
adc
retf
fsubrp
ins
mov
sbb
xor
loope
pop
mov
movs
jg
add
(bad)
mov
frstor
cmc
mov
mov
pop
sub
xlat
out
mov
jl
jge
ins
push
push
xchg
icebp
push
aam
aas
repz
loope
cmp
dec
push
or
or
ror
out
rcr
ins
test
imul
jmp
outs
dec
xchg
pop
ja
sbb
ds
das
(bad)
jge
add
daa
shl
push
xor
je
dec
call
pop
pop
adc
cmp
out
(bad)
cdq
sbb
loopne
(bad)
sub
add
cmps
loope
call
out
icebp
daa
xchg
xchg
pusha
xchg
loopne
jecxz
pop
mov
adc
mov
jne
mov
mov
test
adc
into
mul
sub
in
adc
fstp
mov
lods
ficomp
test
dec
ror
inc
mov
shl
cmps
(bad)
adc
mov
shl
mov
sbb
jle
pop
out
movs
mov
push
leave
mov
mov
(bad)
cmp
movzx
mov
mov
sbb
pop
mov
cmp
pop
adc
jl
adc
dec
mov
in
push
iret
stos
dec
test
test
cmp
sbb
adc
xor
hlt
pop
xor
imul
lahf
clc
inc
mov
retf
fnstcw
dec
loope
in
mov
push
and
sub
sti
pop
cli
clc
stc
jbe
cwde
or
mov
lods
je
(bad)
mov
mov
inc
fild
stos
ss
(bad)
int
or
xor
push
cdq
pop
mov
loope
rcl
fsub
jg
or
mov
xchg
test
pop
mov
stc
pop
push
xchg
das
mov
int3
fidivr
mov
rcr
imul
cld
adc
sbb
mov
jle
mov
mov
mov
(bad)
rcr
fnstsw
mov
ds
sbb
add
xchg
push
aam
jmp
fst
pushf
jne
jo
pushf
icebp
adc
or
aas
cmps
sub
sbb
jle
not
sbb
pop
mov
ror
xchg
test
push
out
mov
push
test
rol
cmp
cmp
ret
cmps
xchg
sub
shr
loopne
ss
in
mov
int
lock
int3
and
shl
repnz
ret
dec
mov
std
jg
mov
in
(bad)
loop
and
pop
push
inc
pop
dec
stos
mov
xor
cld
sub
add
test
xlat
inc
inc
xor
in
pushf
scas
adc
aad
and
scas
dec
sub
jp
mov
fnstcw
sbb
mov
ret
fstp
mov
fdiv
adc
and
xchg
xor
pop
addr16
(bad)
in
sar
pushf
cwde
lds
jle
lahf
jle
stos
fmul
enter
aam
in
or
loope
pop
icebp
cld
pop
push
xlat
mov
ret
xor
sbb
fadd
lock
xor
push
pop
loopne
pop
inc
xor
adc
je
aam
and
pop
syscall
scas
repnz
ins
sub
adc
inc
mov
mov
mov
pop
in
cmc
sbb
out
and
add
rcr
hlt
out
push
out
push
cmp
fsubr
mov
ds
ss
repnz
fnsetpm(287
mov
ins
in
xchg
xchg
loopne
dec
add
in
sub
dec
(bad)
sar
nop
sahf
out
xor
push
add
in
ret
out
(bad)
in
push
xor
pop
xchg
adc
and
call
pop
jle
pop
cmp
pop
retf
cld
int
inc
and
inc
pop
push
cwde
push
ins
dec
jmp
fidiv
cmps
mov
xor
retf
push
retf
retf
scas
xor
fidiv
test
iret
movs
sub
mov
stc
(bad)
mov
add
aam
inc
pop
or
xor
mov
loope
sub
and
cld
sub
fwait
add
mov
xchg
pop
test
movs
inc
aad
(bad)
or
clc
movs
xchg
ins
stos
or
loope
pop
xchg
jmp
fwait
sbb
test
jecxz
out
les
aam
push
mov
ret
in
mov
xchg
dec
es
(bad)
stc
sbb
and
push
call
or
fwait
dec
jo
xor
push
call
jp
sbb
(bad)
add
push
sbb
sbb
out
xor
or
test
jbe
in
xchg
pop
int
mov
inc
jg
mov
enter
outs
xchg
into
cdq
(bad)
inc
or
pop
imul
xchg
jmp
sbb
mov
inc
inc
and
mov
mov
adc
mov
jmp
mov
add
mov
dec
sub
addr16
sbb
and
push
sbb
aaa
dec
ret
fstp
or
nop
les
jmp
nop
int
test
jb
pushf
jmp
adc
cs
into
sbb
inc
int
inc
dec
and
sti
(bad)
imul
sbb
inc
cmovae
stc
call
xlat
push
add
lea
jmp
popf
test
lock
imul
adc
dec
pop
pushf
test
out
cdq
sub
pop
arpl
gs
retf
ret
jo
in
xor
mov
mov
adc
rol
int3
retw
add
mov
pop
cmp
mov
jl
sub
shl
into
sahf
xor
cmp
and
mov
jmp
lods
jl
mov
fxch
pop
in
mov
popf
stc
nop
in
in
ror
test
aaa
add
fisubr
(bad)
push
push
sbb
lods
jbe
inc
aaa
inc
xor
fcmovnb
mov
test
ja
xor
call
hlt
out
in
out
loop
or
inc
das
arpl
pop
test
add
ins
nop
jmp
push
(bad)
cld
int3
jge
push
jecxz
inc
and
pushf
std
pop
push
imul
aaa
jb
or
sbb
repnz
jmp
(bad)
fcomp
xor
ror
push
and
sbb
jns
mov
xchg
xchg
call
data16
lock
aad
repz
sbb
popa
cmps
inc
test
sub
sub
pop
pop
inc
inc
adc
adc
sbb
out
sub
inc
cld
in
sbb
jns
push
pusha
inc
xchg
dec
jmp
gs
mov
call
mov
pop
(bad)
cmp
xchg
mov
aas
nop
pop
(bad)
rcl
inc
mov
sar
sbb
adc
test
test
xor
icebp
mov
pop
push
dec
adc
jp
cmp
cmps
fcom
test
shl
setnp
add
mov
iret
cmp
(bad)
pop
inc
pop
xchg
stos
xor
stc
aas
iret
and
adc
jo
mov
cmp
inc
and
dec
or
rcr
sbb
inc
jae
dec
xchg
in
adc
movs
jmp
out
mov
inc
mov
daa
std
and
(bad)
inc
and
or
cli
cmp
sub
add
inc
repnz
jle
pop
jmp
add
(bad)
inc
test
cli
add
pop
and
mov
jp
dec
scas
(bad)
jle
neg
into
sbb
lock
pop
addr16
test
bound
mov
cmp
xor
inc
jbe
and
push
cld
loop
and
pop
jl
xor
(bad)
and
shr
rol
mov
call
sub
dec
aas
xchg
mov
and
(bad)
aad
and
xor
in
loope
movs
mov
bound
add
jb
and
adc
call
mov
shr
fild
jg
pandn
xchg
sbb
mov
jb
push
mov
(bad)
cld
ja
inc
push
inc
sbb
mov
adc
outs
inc
jbe
xor
popa
loopne
(bad)
clc
(bad)
xlat
sub
inc
cs
das
and
add
data16
(bad)
dec
mov
daa
xor
pop
test
dec
xor
mov
pop
mov
jmp
(bad)
cmc
inc
mov
shl
sbb
xor
in
daa
arpl
scas
test
jno
(bad)
jbe
int3
into
sub
cmp
pop
add
imul
in
std
retf
(bad)
loopne
dec
cmps
movs
inc
dec
sub
cdq
and
add
or
shl
outs
sbb
imul
leave
jmp
enter
adc
enter
xchg
rcr
stos
int
retf
xchg
dec
frstor
les
add
jmpw
sti
loop
stos
rcr
call
scas
cmp
xor
add
and
test
shl
mov
call
add
mov
pop
jae
popa
loope
inc
call
(bad)
xchg
rcr
xor
jb
(bad)
mov
lock
xor
add
push
or
repnz
push
pop
cdq
imul
or
push
loopne
jge
in
out
xor
and
je
into
in
dec
cmp
cmp
lock
push
icebp
and
cmp
sbb
lock
mov
cmps
ret
aas
test
jg
sbb
test
push
mov
addr16
adc
(bad)
mov
popf
enter
shl
xor
aas
xlat
data16
pop
test
sbb
mov
push
push
rol
add
and
dec
scas
add
mov
fnstsw
push
in
scas
adc
fwait
adc
in
mov
ins
test
dec
aam
mov
repz
fnstsw
jnp
or
rol
movs
out
mov
and
pop
ds
xchg
test
(bad)
leave
add
movs
mov
inc
iret
js
mov
call
je
(bad)
in
mov
add
fadd
arpl
jle
pusha
adc
inc
int3
in
(bad)
push
xlat
sbb
ficom
adc
cmp
ret
test
mov
cld
and
jmp
xchg
mov
lods
(bad)
lock
(bad)
cmp
js
lock
cld
or
mov
pop
fmul
neg
stos
(bad)
cs
jne
mov
pmovmskb
or
cmc
cmp
adc
xchg
cmp
cmp
(bad)
mov
jecxz
and
xor
ds
call
stc
fld
mov
arpl
(bad)
(bad)
mov
inc
shr
jg
mov
scas
pop
jb
fidiv
jnp
sbb
fs
pop
int3
mov
inc
sti
aas
or
or
(bad)
or
ret
hlt
sub
sbb
int
popf
pusha
adc
and
enter
js
jmp
jb
imul
inc
rcr
inc
xchg
sahf
lock
pop
lds
mov
js
fistp
sti
(bad)
xchg
stos
popa
ja
out
add
xor
cli
jno
cmc
adc
pop
xor
adc
push
sbb
lods
jbe
cld
fiadd
cmp
dec
test
ficomp
cdq
mov
mov
mov
test
jnp
mov
jle
lahf
cmp
or
cld
xor
pusha
aam
inc
and
(bad)
xchg
jle
lds
jmp
add
jge
icebp
jle
out
pop
push
aad
pop
xor
or
mov
mov
inc
dec
inc
retf
ret
cmp
cwde
push
sahf
in
sub
and
pushf
vsqrtsd
inc
imul
in
pop
jmp
mov
jmp
add
mov
shl
mov
push
nop
mov
add
jg
inc
inc
mov
pop
xor
jns
push
mul
test
lahf
(bad)
loopne
test
shl
rcr
push
pop
loop
sub
test
das
mov
jle
call
scas
jl
in
mov
or
pop
mov
adc
pop
out
fadd
push
cmp
xchg
and
cli
fs
add
call
xlat
or
movs
inc
ret
lea
enter
xchg
outs
hlt
or
popa
push
iret
mov
sub
ins
data16
in
jp
mov
mov
xor
jns
sbb
retf
inc
adc
xor
test
sar
xchg
sbb
fsubr
cmp
pop
inc
lea
xchg
mov
ds
das
lea
cld
imul
xor
sbb
push
mov
das
mov
lds
in
int
cmp
ins
dec
pop
out
sbb
data16
sti
pop
mov
xchg
mov
cmc
imul
ja
pushf
mul
std
or
inc
les
(bad)
fmul
mov
js
out
push
sbb
jle
and
mov
js
pop
stos
cmps
push
aas
add
inc
xchg
aas
es
sbb
jns
mov
jno
sub
test
pop
retf
sub
hlt
dec
pop
pusha
and
dec
or
ds
dec
sub
imul
daa
cmp
jae
repnz
xor
pusha
cs
cmps
lds
or
sbb
or
xor
push
je
dec
ds
cmc
popa
sub
mov
loop
add
lea
fwait
sahf
aam
mov
push
cdq
xchg
xor
jne
and
cli
adc
js
pop
cmps
mov
pop
cli
pushf
neg
jl
mov
adc
fsubr
hlt
ret
in
movs
rcr
int3
mov
popf
sahf
add
mov
jb
xor
ss
xchg
xchg
cmps
sbb
inc
fcom
test
mov
fcom
js
pop
cmp
test
adc
iret
and
std
mov
gs
pop
cmc
es
fnstenv
dec
cmp
into
push
shr
jp
push
add
retf
loop
add
adc
sbb
adc
cmp
scas
cmp
push
xchg
in
aam
int
(bad)
mov
cmc
fisttp
in
cwde
mov
xchg
push
test
fnstsw
add
add
cmp
fist
inc
push
dec
std
xchg
popf
loopne
jle
dec
mov
cmp
inc
dec
dec
pop
jno
or
test
aam
adc
lahf
sbb
cdq
pop
lock
mov
adc
movs
pop
movs
dec
inc
cwde
scas
add
mov
xor
addr16
or
mov
iret
js
mov
or
or
stos
or
xor
jnp
cld
fstp
mov
jle
pop
mov
rcr
rcl
add
ret
sbb
mov
test
dec
mov
cmp
push
jg
addr16
inc
dec
dec
sbb
fld
icebp
sbb
popa
addr16
out
mov
or
rcl
adc
mov
test
mov
mov
enter
(bad)
sahf
fcmovb
cli
mov
stc
lahf
out
mov
push
mov
mov
stos
cld
or
(bad)
mov
call
and
repz
and
fstp
xchg
ss
or
xchg
pop
sbb
and
or
adc
jl
or
adc
(bad)
call
adc
push
(bad)
mov
jge
and
add
add
lock
push
mov
fs
ret
mov
adc
sub
add
sahf
ret
mov
mov
dec
outs
mov
add
push
adc
movs
xchg
(bad)
fsub
ins
jne
lods
push
bound
adc
sbb
cwde
sbb
sbb
sti
pop
sbb
cmp
jmp
add
dec
sub
xor
out
imul
std
cmp
out
xchg
jl
loopne
sbb
xor
movs
pop
sti
sahf
ins
jg
jae
outs
inc
jmp
shr
sbb
xor
xchg
and
xchg
fcmove
aad
xor
sub
or
jmp
push
into
cmp
ds
mov
jbe
scas
inc
xor
mov
pop
loop
add
daa
stos
mov
out
xchg
test
and
gs
pop
and
fld
adc
int
xchg
fdivr
mov
push
adc
cmp
std
mov
mov
cld
xchg
mov
leave
add
jge
ret
call
sbb
int
mov
mov
mov
clc
fwait
popf
push
or
xor
inc
xor
cmp
bound
sbb
adc
stos
in
xor
iret
xchg
repnz
retf
sbb
xchg
ror
sub
mov
push
xchg
ds
in
mov
out
cld
xchg
cmps
es
mov
xchg
push
pushf
jno
push
push
sub
jmp
mov
ja
mov
in
fidiv
mov
jb
xor
ror
test
sbb
jae
fsubr
pop
sbb
inc
inc
adc
xchg
cs
push
add
sub
and
mov
mov
dec
bound
ds
adc
cmps
add
outs
aam
ja
retf
inc
push
gs
push
icebp
mov
nop
xor
dec
repnz
movs
adc
pushf
sub
outs
push
add
hlt
ret
mov
mov
jo
dec
pop
repnz
and
in
mov
jb
ss
jns
leave
and
fwait
adc
test
mul
xchg
aam
xchg
lahf
cli
daa
hlt
cdq
mov
mov
jae
in
sub
xlat
(bad)
and
hlt
sbb
jmp
push
cmp
btr
rol
and
(bad)
icebp
sbb
pop
mov
fwait
scas
out
or
ins
adc
pop
mov
cld
mov
or
mov
loope
mov
nop
loopne
lds
shl
sahf
aad
xchg
push
fsub
in
or
xlat
(bad)
jmp
addr16
pop
shr
mov
imul
pop
jecxz
call
inc
pop
outs
clc
cmps
xchg
dec
sbb
adc
popf
pop
inc
pop
hlt
cwde
sbb
lods
xor
test
aas
nop
pop
out
jge
mov
fidivr
xor
ret
cs
fild
add
popa
and
xor
jge
(bad)
push
mov
addr16
cmp
jl
cmp
test
loop
fadd
or
out
sahf
sbb
adc
inc
add
push
ret
push
loop
dec
test
xchg
ret
ret
in
mov
aam
pop
mov
jecxz
xchg
mov
daa
jmp
jbe
mov
adc
pop
enter
push
ret
cdq
xor
into
mov
push
mov
mov
mov
cmps
cdq
or
test
adc
stc
adc
int3
pop
bound
mov
inc
popa
cmc
retf
stos
test
cmp
dec
out
xchg
loopne
jae
lea
inc
dec
mov
or
mov
icebp
cld
or
out
add
not
jmp
cwde
(bad)
int
push
mov
push
call
add
mov
in
jbe
aam
in
jae
inc
ror
sbb
xor
cmp
jnp
bound
jecxz
test
xchg
fdiv
dec
addr16
cmps
cs
and
repnz
mov
mov
xchg
sub
mov
out
(bad)
loopne
pushf
ja
inc
hlt
cmp
jmp
sbb
fiadd
xchg
call
cdq
sahf
adc
dec
xor
dec
push
sub
fcmovb
dec
adc
add
mov
jle
push
or
lahf
push
mov
jmp
je
inc
fist
popa
add
add
imul
aad
mov
into
xor
out
ja
adc
xor
push
xrelease
data16
ret
pop
cld
ja
inc
jns
sbb
icebp
fsub
mov
sub
lods
add
adc
cdq
cld
in
mov
enter
jmp
mov
or
push
je
mov
mov
adc
repnz
xor
jb
mov
jmp
in
ret
dec
mov
(bad)
cmp
neg
(bad)
fdivr
mov
gs
jae
movs
in
xor
int
sub
nop
add
xor
mov
std
mov
and
mov
outs
xor
es
aas
inc
std
sar
cmp
xchg
das
push
mov
rol
repz
scas
xchg
pop
das
ss
(bad)
add
(bad)
test
call
dec
xchg
cld
cmp
mov
sub
out
push
cmps
xor
call
nop
or
and
sbb
fisub
(bad)
fisub
rcl
ror
popf
add
cmps
xor
ret
jae
fiadd
jecxz
movs
xchg
inc
sub
cs
cmp
cmp
scas
iret
cwde
push
popf
sahf
mov
in
lods
hlt
cmp
dec
fsub
(bad)
mov
pop
pop
xchg
lea
lods
test
or
jns
xchg
cmp
xchg
adc
dec
jno
cmp
dec
mov
pop
out
cwde
lahf
mov
push
imul
mov
outs
mov
and
and
data16
loopne
adc
cmp
lods
jp
fwait
cld
adc
pop
out
push
sar
(bad)
cli
push
sbb
sbb
sbb
stos
pop
mov
mov
or
xchg
mov
lds
adc
ficom
mov
sbb
(bad)
fist
(bad)
pop
ins
mov
cmc
pop
cli
dec
out
adc
mov
js
sbb
pusha
sbb
inc
int3
mov
or
dec
mov
ret
loop
pop
cdq
fldcw
sbb
adc
pop
push
imul
inc
pusha
fisubr
out
xor
cmp
call
or
and
mov
push
daa
add
(bad)
scas
lods
aaa
mov
ror
dec
xchg
rcl
les
cmps
xor
mov
add
pushf
mov
or
sub
and
cmps
mov
hlt
mov
xor
ja
into
add
cld
or
xchg
fwait
dec
jmp
cmp
sub
jmp
mov
pop
sub
pop
movs
mov
pop
ins
xchg
mov
jle
sub
in
aas
lds
mov
call
mov
aam
jmp
ins
mov
rcl
xchg
adc
jge
mov
add
mov
idiv
out
repnz
test
jbe
inc
dec
int
add
inc
shrd
add
push
jmp
in
stos
sar
or
cmp
nop
pushf
std
out
mov
(bad)
jmp
cmc
sahf
and
stos
mov
adc
(bad)
loope
lea
sub
jmp
daa
jecxz
sub
das
int3
dec
lods
inc
rol
fmul
push
shr
ret
arpl
lea
cli
les
mov
aaa
outs
loope
jno
sbb
retf
cmp
in
and
add
jl
mov
cld
pop
cmp
xor
shl
ins
test
xchg
xor
fcomp
dec
adc
in
test
jecxz
rcl
or
jp
into
or
das
xchg
ins
mul
aaa
sbb
sbb
inc
xchg
test
stos
movs
(bad)
jns
imul
jns
pop
ds
jmp
add
add
add
mov
shr
mov
mov
test
mov
cwde
add
cmps
dec
rcr
pop
(bad)
cmp
adc
sti
mov
push
lods
icebp
aam
sbb
push
or
pmaxub
inc
stos
cmc
test
aas
cwde
mov
xchg
sbb
inc
jg
mov
movs
loope
imul
jge
jnp
dec
xor
adc
pop
pop
sub
jmp
loope
fsubp
pop
and
pop
sbb
jmp
clc
mov
loope
inc
call
pop
push
rcl
cmp
jl
jge
and
retf
jl
cmp
jnp
dec
mov
clc
inc
movs
inc
outs
hlt
test
inc
hlt
sbb
push
or
add
loopne
jnp
imul
sbb
mov
xchg
out
mov
nop
xor
(bad)
xchg
mov
out
call
xchg
jbe
arpl
and
fadd
add
sbb
xlat
sub
sub
mov
pop
jmp
ret
push
sub
sbb
stos
mov
jmp
mov
inc
ror
push
dec
frndint
jg
or
and
cdq
addr16
mov
mov
or
xor
je
mov
enter
sbb
aaa
(bad)
cmps
dec
(bad)
lea
rol
dec
xchg
ja
ins
xor
mov
fcom
mov
daa
popa
mov
and
mov
xchg
ret
and
cmp
icebp
movs
mov
push
inc
mov
jnp
je
push
xor
push
cdq
pop
xchg
sub
mov
cmp
pop
mov
lea
xor
mov
arpl
lds
and
add
mov
sub
mov
pop
inc
mov
shl
aad
jmp
and
or
cmp
xchg
cmp
mov
pop
stc
fistp
cmp
fcomp
mov
xor
xlat
fldcw
dec
mov
dec
inc
in
aaa
shufps
lods
xchg
push
out
lods
mov
pop
mov
pop
movs
(bad)
mov
inc
dec
inc
and
lods
pop
xchg
jle
add
mov
ja
adc
shr
es
cmp
mov
inc
pop
pop
iret
(bad)
cdq
popf
stc
addr16
sbb
dec
outs
imul
(bad)
adc
(bad)
push
pop
in
mov
imul
add
adc
push
cmp
les
add
adc
push
ins
pop
mov
cmp
xchg
fisttp
dec
repnz
cs
jge
cmps
or
fisubr
xchg
cmps
xchg
call
xor
ret
mov
fld
rol
dec
mov
and
jmp
bswap
mov
ds
shl
and
mov
leave
add
push
retf
push
outs
cs
test
mov
and
(bad)
sbb
jecxz
adc
out
pop
in
ja
ins
clc
dec
sbb
sub
nop
inc
jmp
fidivr
ret
jmp
enter
jp
add
mov
js
cli
push
nop
int3
xor
pop
add
cdq
dec
cmps
outs
mov
movs
stc
les
or
pop
jmp
add
repnz
xchg
call
mov
add
clc
inc
mov
fstp
mov
or
scas
fdiv
ret
inc
lods
push
xchg
sbb
add
inc
into
inc
sbb
outs
dec
(bad)
(bad)
xlat
js
inc
fcomp
ficom
leave
cli
mov
inc
inc
xchg
cmp
int
mov
push
aas
push
and
cs
(bad)
or
xchg
movlps
ins
sub
aam
mov
ret
or
call
lods
jbe
mov
fiadd
out
mov
mov
clc
push
cs
xor
push
leave
out
jmp
pop
ret
sub
sahf
icebp
cmc
or
sahf
dec
push
sar
xchg
xchg
push
dec
dec
xlat
lock
fild
jb
dec
(bad)
cmp
(bad)
call
fldenv
mov
push
fimul
xchg
xor
xor
xchg
in
and
push
lahf
sub
adc
mov
xchg
out
std
push
les
adc
neg
adc
mov
sbb
gs
into
mov
pop
pop
push
test
push
jmp
lock
push
jecxz
(bad)
mov
and
inc
movs
int
inc
pushf
mov
fbstp
sbb
push
pop
and
call
xor
test
dec
cmp
adc
inc
inc
lods
shl
es
ins
out
sbb
mov
mov
ins
mov
xor
inc
and
push
mov
outs
xchg
movs
push
sti
push
enter
cmp
mov
jg
gs
in
cmp
jmp
or
xor
hlt
das
js
pop
lods
mov
pop
xor
fsubr
sub
xchg
adc
shr
icebp
mov
jl
fwait
icebp
popa
(bad)
test
fsub
xor
xor
jp
unpcklps
xor
aas
aam
cmp
push
cmp
sbb
inc
loopne
mov
pop
stc
adc
out
jl
or
add
div
aad
adc
cmp
rcl
test
xor
sbb
ret
lods
fs
rcl
sbb
aad
out
jmp
fld
push
and
mov
push
outs
(bad)
mov
std
sti
sub
lods
add
out
mov
leave
mov
sti
xor
and
cmp
clc
push
xor
jbe
fisubr
int
and
js
adc
shl
mov
fsub
inc
cmp
mov
outs
in
in
fxtract
das
sbb
lahf
jns
pop
popf
scas
popa
mov
(bad)
or
xchg
mov
call
xchg
clc
and
loop
jne
cmc
mov
test
popf
ins
fisttp
fmul
dec
xor
fisttp
(bad)
(bad)
cmp
push
repz
lods
mov
ret
or
(bad)
xchg
scas
jbe
jmp
xor
or
push
pop
daa
cmps
mov
jge
into
adc
sub
aaa
sbb
scas
icebp
xchg
xchg
call
cmp
pop
bnd
sub
adc
mov
sar
mov
cmps
mov
mov
sti
das
mov
sbb
(bad)
dec
lods
cmp
imul
dec
test
dec
outs
xchg
adc
xchg
mov
sbb
lock
inc
stos
test
lea
inc
add
dec
ret
jmp
mov
ret
and
adc
clc
lahf
mov
rcr
xchg
dec
or
jmp
or
fucom
popa
cmc
sar
lahf
and
jmp
sub
sti
ins
mov
cmp
pop
mov
adc
jbe
mov
add
pop
sbb
mov
or
sbb
mov
pop
xchg
xlat
sub
dec
dec
dec
sub
in
(bad)
xchg
movs
push
and
push
sbb
add
mov
imul
mov
rol
or
fist
mov
xlat
rcr
and
mov
test
sub
mov
aad
mov
adc
push
mov
lahf
and
dec
ret
hlt
jmp
push
paddsb
js
out
cmp
mov
fcomp
ss
lahf
jbe
xchg
mov
jmp
stos
cmp
inc
mov
les
pop
int3
fnstsw
sbb
icebp
ds
shl
mov
xor
in
mov
mov
bound
test
icebp
in
xlat
mov
sub
mov
push
data16
cmp
clc
pop
jmp
xchg
in
retf
movs
cli
pop
ds
(bad)
sub
sub
sahf
daa
dec
lods
fild
push
jmp
out
aas
mov
loop
or
xchg
aam
ins
cli
fst
bound
mov
shl
add
xor
fxam
sbb
rcr
mov
imul
js
and
rol
stos
pop
dec
jo
inc
js
pop
xor
push
sbb
and
jne
pop
ins
call
enter
aaa
dec
push
fld
ror
push
sbb
xor
xchg
fnstenv
push
jmp
jp
push
add
cs
loope
in
(bad)
lods
push
scas
xchg
push
jb
push
sbb
into
gs
out
imul
dec
mov
scas
jge
and
jbe
mov
cmps
adc
pop
mov
inc
das
inc
int3
jp
call
call
cmps
loopne
pushf
mov
pop
hlt
adc
int
mov
mov
loopne
cmc
test
pop
call
add
aaa
jno
js
retf
adc
push
popa
xchg
lods
mov
ins
xchg
out
fldenv
push
add
jmp
lods
lds
(bad)
call
or
sbb
push
sbb
lahf
xlat
cmp
jecxz
or
jno
xchg
dec
data16
mov
das
out
movs
mov
icebp
addr16
int
loop
push
sub
ja
xor
int
mov
je
imul
call
ja
inc
add
lods
xor
fidivr
or
jnp
cmp
scas
sbb
lods
jne
ss
push
shl
cdq
adc
(bad)
(bad)
aad
or
mov
mov
lods
push
pop
jns
(bad)
(bad)
in
scas
call
dec
sub
push
mov
sar
sbb
mov
sub
cmps
dec
xchg
int
stos
and
add
or
jge
jns
repnz
call
inc
(bad)
js
ret
pop
jmp
lods
cmp
jb
cld
mov
mov
test
push
arpl
jne
inc
(bad)
pop
sar
rcr
nop
(bad)
jge
push
ja
outs
add
pop
or
dec
mov
add
sbb
iret
movs
cmc
mov
ficom
fwait
mov
cmp
push
jne
xor
cmps
das
stos
popa
add
mov
repz
retf
imul
loop
mov
inc
mov
jle
jno
dec
clc
ror
xchg
push
mov
add
xor
or
sub
pusha
add
mov
jmp
cdq
mov
gs
jp
es
fucom
xor
mov
imul
sub
ins
stos
xor
sub
mul
ret
clc
or
adc
daa
fistp
fnstenv
das
mov
cld
inc
xchg
cmp
inc
push
mov
or
mov
pop
or
xchg
sbb
(bad)
cmps
mov
dec
inc
call
add
sub
ja
push
cmps
xchg
shl
adc
call
push
clc
ins
call
mov
mov
inc
xor
pop
arpl
mov
adc
addr16
and
sahf
out
cli
sbb
xchg
jecxz
(bad)
popa
leave
sbb
jp
mov
mov
out
fstp
push
nop
adc
out
fstp
fdiv
pop
cmp
repz
jg
ret
jbe
push
xor
xchg
or
jmp
xor
jge
and
sbb
call
pop
jg
mov
fld
loope
call
sbb
loope
out
div
pop
gs
lock
imul
push
mov
mov
cmp
pop
into
daa
sub
jecxz
jne
dec
push
fsub
add
xor
js
pushf
and
inc
or
outs
pop
addr16
(bad)
xor
and
push
push
movs
add
push
cli
loopne
neg
bound
sub
loopne
test
in
inc
jne
aas
ja
call
hlt
sbb
(bad)
(bad)
adc
mov
cmp
loope
call
jns
movs
mov
imul
retf
int3
cmp
(bad)
mov
mov
xor
push
stos
inc
pop
jne
(bad)
iret
and
into
dec
mov
xchg
push
sub
mov
dec
shl
mov
pop
mov
jge
into
das
dec
out
mov
add
js
push
in
clc
sbb
inc
fnstcw
jbe
sbb
push
push
scas
jmp
sti
and
adc
xor
ret
imul
or
inc
sar
adc
push
mov
mov
xchg
push
push
dec
xchg
dec
fsub
add
push
call
pop
fwait
mov
mov
test
pop
mov
mov
pop
int3
cli
loopne
push
fadd
ja
jl
or
sub
out
into
add
mov
lds
jmp
jns
dec
dec
retf
push
mov
mov
or
jnp
inc
jp
push
outs
sbb
ret
push
mov
mov
jmp
xchg
leave
jle
sbb
mov
lock
xchg
jecxz
fwait
inc
(bad)
rcl
mov
mov
push
js
inc
mov
xor
xor
sar
push
jns
add
pushf
xchg
or
arpl
pop
and
movs
mov
loop
jge
dec
pop
and
cdq
stos
xor
ins
mov
sbb
xor
xor
push
push
(bad)
cmp
mov
or
es
and
lock
xor
xchg
push
(bad)
mov
ss
fadd
push
and
fcmove
into
fs
push
ja
sbb
call
cmps
(bad)
mov
pusha
outs
sbb
jnp
mov
jg
or
ret
imul
adc
repnz
ret
adc
xchg
retf
push
repnz
mov
mov
or
sar
es
ja
pushf
mov
xor
in
pop
xor
cmp
out
push
aad
jo
fsub
test
mov
inc
and
xchg
jl
jnp
fs
xchg
fstp
push
movs
mov
fsub
mov
fisubr
mov
(bad)
push
xor
fldenv
xchg
or
add
out
push
jg
push
and
aas
jnp
cmps
adc
out
fisub
loope
pop
repnz
lods
loope
add
pop
out
mov
jge
mov
fsubr
and
and
add
adc
sub
ss
clc
test
jmp
mov
sub
jmp
data16
fdiv
add
mov
jl
cmps
inc
es
pop
xor
mov
repnz
(bad)
adc
inc
lods
rol
mov
imul
imul
and
jae
ret
add
add
push
lock
inc
sub
mov
inc
retf
add
jl
fild
outs
neg
out
xchg
in
push
cmp
out
out
stos
ja
pop
icebp
int3
and
sub
push
lock
mov
addr16
pop
std
cmp
jnp
push
inc
aaa
fld
jp
(bad)
rcr
(bad)
loop
aas
cmp
(bad)
mov
push
and
push
sbb
xor
mov
pop
sub
call
in
pop
pushf
pop
(bad)
imul
mov
push
dec
or
pop
test
mov
das
test
add
pop
bound
mov
jne
xchg
jp
retf
mov
ds
push
jmp
shr
fisubr
or
adc
clc
lea
gs
push
out
add
and
xchg
out
(bad)
cmp
or
add
jle
in
or
dec
mov
dec
(bad)
pop
jb
lahf
fst
aam
aas
pushf
jmp
js
popa
jo
clc
xor
and
mov
cmp
mov
loop
out
popf
cwde
ss
test
shr
jg
sub
ss
xchg
and
test
mov
mov
jbe
leave
inc
je
(bad)
stos
(bad)
cmps
xchg
sub
ret
dec
cmps
shr
add
into
loopne
fisttp
jns
shl
in
mov
mov
ficomp
push
xchg
xchg
mov
sub
mov
pop
jecxz
bound
sbb
in
adc
adc
adc
add
push
fnstenv
dec
jne
fidiv
ss
ret
push
mov
cwde
xchg
out
pusha
inc
mov
sbb
mov
sub
sti
or
in
test
mov
scas
adc
xchg
jo
je
(bad)
xlat
mov
xor
sbb
cld
repz
add
aas
xor
dec
push
and
jnp
call
retf
(bad)
and
mov
scas
pop
xchg
pop
scas
arpl
ret
icebp
jl
fdivr
and
out
sub
jo
xor
adc
pop
xor
or
lea
repz
aad
push
mov
jbe
imul
pushf
pop
xchg
ficomp
call
cmp
enter
vshufps
sub
cmp
push
cmp
and
lds
sti
ror
aaa
sub
and
movs
push
xor
popa
popf
cdq
adc
outs
das
mov
call
add
add
mov
test
sbb
and
gs
fld
pop
mov
sbb
leave
adc
inc
cmp
push
xor
xor
outs
mov
int
sub
mov
rol
mov
pop
cwde
call
adc
scas
mov
mov
adc
hlt
mov
dec
inc
and
loopne
adc
sbb
(bad)
push
push
or
add
mov
push
xor
hlt
ss
xchg
fsub
and
push
(bad)
lea
jmp
das
inc
push
paddb
fist
fcom
hlt
xchg
xchg
mov
jl
ret
(bad)
mov
or
jge
push
repnz
loope
xor
outs
pop
mov
xchg
mov
es
outs
or
mov
cmp
ins
bound
imul
mov
retf
pop
mov
and
int3
push
dec
pop
mov
outs
mov
sahf
imul
or
push
popa
mov
xchg
push
ins
(bad)
push
out
out
pop
cmps
popa
imul
mov
jp
(bad)
out
fiadd
or
or
cwde
xchg
movs
pop
pop
xchg
push
push
pop
dec
cld
fidiv
jae
dec
(bad)
fistp
out
cmp
sbb
mov
or
adc
call
popa
mov
test
(bad)
push
sahf
cmps
sbb
ins
in
inc
inc
fs
ins
add
pop
std
mov
lods
mov
aaa
sbb
xchg
les
dec
retf
xchg
push
and
dec
push
xor
mov
add
scas
mov
xlat
lock
xchg
mov
add
or
push
xchg
cmp
pop
data16
outs
xchg
or
es
shr
jmp
pop
int3
add
fsub
jnp
imul
mov
mov
xor
cld
retf
mov
mov
dec
jecxz
mov
shr
pop
xadd
cmp
cmp
sbb
popf
xchg
(bad)
call
and
test
test
lock
sbb
call
clc
cmp
mov
sub
add
add
call
call
and
into
mov
jbe
mov
out
cmp
daa
mov
test
ja
add
stos
loope
mov
mov
xchg
in
enter
mov
xchg
pop
adc
adc
cmp
push
out
and
or
pop
cmp
cmp
out
into
cmp
or
xor
push
(bad)
cld
rol
addr16
cs
push
and
jmp
std
dec
stos
cld
jo
sbb
pop
pop
test
xor
adc
out
dec
mov
or
sbb
sahf
int
pop
retf
gs
or
je
push
inc
in
or
je
in
fistp
iret
and
addr16
bound
and
aaa
xor
xchg
adc
loope
dec
xor
in
sub
xor
adc
push
jg
mov
retf
adc
mov
push
in
add
jmp
mov
or
sbb
es
and
aad
mov
inc
test
push
inc
sbb
xchg
pushf
outs
imul
push
sbb
repz
stc
sub
cld
scas
adc
mov
addr16
out
sub
hlt
and
(bad)
mov
or
loop
push
lds
add
mov
and
jne
pop
(bad)
sub
xchg
out
mov
push
fstp
mov
xchg
sub
xchg
repnz
pop
rcl
push
push
test
add
mov
sub
push
addr16
inc
jle
sub
xchg
xchg
or
adc
adc
adc
sbb
lahf
jp
ja
loop
inc
cmp
xor
push
or
lods
pop
imul
stc
add
or
lahf
inc
add
dec
daa
cmp
aam
call
xchg
test
loope
in
adc
lahf
loop
mov
mov
jmp
imul
repz
sub
nop
aam
cmp
dec
sub
shl
sub
mov
call
shl
mov
js
shl
sbb
out
int
cmp
popa
lods
les
dec
shr
push
add
fbstp
dec
imul
sar
dec
ins
movs
stos
enter
test
xor
mov
push
sub
lods
movs
xor
jnp
shr
(bad)
lods
lea
jb
mov
pop
sbb
push
mov
push
add
xlat
dec
cmps
in
hlt
sar
test
sbb
jg
shr
test
mov
cli
pop
or
or
push
cmp
cmp
mov
pop
arpl
fiadd
push
xlat
and
sub
jmp
mov
dec
push
ins
push
lds
mov
sbb
lahf
mov
bound
or
cld
fcom
inc
(bad)
frstor
add
out
add
cwde
cmps
pop
add
push
jns
sbb
inc
sub
outs
mov
inc
xor
(bad)
fdiv
loop
scas
(bad)
push
push
cmps
mov
mov
dec
add
je
add
mov
pop
add
push
call
fdivr
xor
out
sub
scas
imul
xchg
cmps
fwait
xor
adc
or
test
arpl
movs
lock
inc
jl
mov
xchg
(bad)
push
add
adc
push
stos
mov
pop
inc
data16
and
fisttp
cmp
sbb
out
xor
dec
dec
or
mov
sbb
push
pop
das
loopne
xchg
push
push
pop
xchg
(bad)
jbe
mov
data16
mov
test
dec
jae
psubq
jb
out
xchg
xor
push
daa
xchg
lahf
addr16
add
mov
xchg
ja
mov
xlat
sar
mov
mov
adc
out
movs
popa
push
mov
add
int
out
(bad)
mov
mov
test
int3
adc
sbb
and
mov
ror
xlat
mov
jg
cmc
mov
cmc
jae
jmp
mov
test
mov
adc
out
mov
push
inc
call
jo
mov
test
xchg
loope
mov
out
or
mov
push
pop
or
call
fcom
test
repnz
pop
jne
(bad)
out
mov
sub
jp
rcr
mov
cmps
cli
fcomp
dec
push
xor
gs
div
stos
dec
test
lock
dec
jns
sbb
mov
addr16
ins
cmp
inc
sub
adc
inc
xor
std
inc
sbb
sbb
ins
sub
dec
je
pop
aam
xchg
jmp
pop
(bad)
loopne
sti
fwait
push
in
or
sub
cmp
push
mov
popf
sub
xor
mov
add
out
ins
mov
mov
imul
xor
ja
xchg
and
pop
scas
xor
pop
push
pusha
mov
test
int3
mov
or
inc
cmps
mov
scas
mov
ins
cmp
ret
add
sub
shr
xchg
pop
cs
xor
jp
ret
xor
pop
js
fnstsw
mov
xchg
push
sbb
xor
mov
fs
sub
xlat
xchg
mov
add
cmp
pop
cmc
hlt
mov
fcomp
into
daa
aaa
aas
inc
sti
jmp
arpl
(bad)
nop
push
xchg
jp
inc
xor
ins
je
daa
call
mov
and
ins
aam
cdq
test
das
es
jp
cmp
mov
(bad)
push
(bad)
and
shl
mov
sahf
xchg
or
test
mov
(bad)
adc
out
jb
mov
imul
jp
dec
in
jge
or
retf
push
sbb
xor
into
pop
mov
sbb
popw
pop
xchg
pop
(bad)
cmp
adc
lea
mov
les
fld
jnp
cld
popa
and
sbb
mov
sbb
and
sub
jmp
outs
mov
and
push
sub
push
jne
add
jg
mov
mov
mov
addr16
pop
jo
lea
xchg
pop
popf
or
outs
and
rol
lea
icebp
mov
cmp
xchg
rcr
addr16
cmp
jo
in
in
sbb
inc
daa
cmc
ins
xchg
xchg
int3
fist
repz
mov
mov
movs
ins
push
in
sbb
mov
iret
mov
(bad)
mov
and
cmp
popa
sub
jp
loope
push
hlt
loope
mov
out
jg
xchg
inc
movs
subps
jmp
sub
cmc
pop
test
lea
lods
jmp
imul
lock
(bad)
mov
not
jmp
pop
outs
mov
jo
(bad)
fsub
cdq
test
jne
mov
je
sbb
leave
fadd
adc
dec
dec
(bad)
adc
lods
fst
jbe
mov
sar
(bad)
xor
mov
mov
lahf
pushf
jmp
sub
(bad)
rcl
stc
sbb
mov
mov
scas
into
cmp
test
or
out
retf
push
jno
rol
push
xchg
pop
sub
arpl
arpl
sahf
pop
xchg
jmp
adc
fstp
dec
cmc
leave
je
inc
call
cmp
sbb
xor
cmp
std
lock
popa
bound
ins
jge
mov
daa
popf
dec
je
xchg
sub
push
aaa
sbb
sub
push
jg
or
ja
jle
int
lods
sub
cs
xchg
aaa
in
cmps
in
movs
sbb
sahf
out
cmp
aad
mov
jbe
inc
jecxz
cmp
lahf
sbb
icebp
xor
cli
mov
inc
push
stos
es
xor
adc
or
xchg
jmp
int3
js
(bad)
es
mov
cs
and
ja
xlat
inc
outs
pop
leave
inc
sti
lods
nop
cmp
push
mov
xchg
in
(bad)
stos
cld
xor
popf
shr
mov
sbb
cmps
in
jb
mov
cmp
mov
dec
jb
sub
cmp
fs
pop
ret
lds
push
xchg
fs
(bad)
cmp
sti
test
aaa
aam
push
or
jns
fstp
or
adc
ror
cmps
and
in
es
sbb
sahf
mov
fisubr
mov
pop
js
(bad)
mov
clc
xchg
mov
scas
mov
xor
pop
std
(bad)
mov
xchg
mov
mov
xchg
push
adc
xchg
popf
jne
mov
jae
pushf
aaa
xchg
cmp
ss
(bad)
xchg
or
sub
test
push
jne
dec
adc
in
shr
mov
xor
xor
add
sbb
xor
pop
and
push
outs
cmps
mov
gs
sub
fadd
call
fcom
fmul
mov
jno
xchg
mov
lahf
mov
mov
loopne
dec
jle
dec
daa
imul
sub
cli
mov
jmp
jmp
lahf
lods
xchg
push
outs
adc
je
fs
pop
jle
jl
and
jecxz
loopne
adc
xor
in
push
test
sbb
jno
arpl
pop
pop
scas
dec
or
mov
(bad)
movs
(bad)
ja
adc
test
mov
xor
ss
mov
jmp
mov
push
data16
mov
cmp
fldl2t
xchg
inc
shl
or
jecxz
cmc
cmp
ret
cwde
int3
loop
fwait
out
lods
jecxz
dec
sub
pop
retf
xlat
fwait
pop
inc
jb
pushf
cmp
mov
jecxz
movs
and
int
pop
pop
int3
imul
rcr
jae
mov
loopne
push
jecxz
js
pop
(bad)
popf
test
icebp
pop
jmp
out
js
jp
sbb
sahf
icebp
push
icebp
leave
sub
cli
pusha
dec
popa
xchg
inc
sub
imul
aaa
push
inc
(bad)
les
pop
cmps
loop
jmp
in
shl
cmps
sbb
into
enter
xchg
mov
scas
ror
leave
cdq
ins
mov
je
dec
or
scas
adc
iret
enter
adc
leave
inc
mov
mov
aaa
je
in
pushf
mov
repz
inc
sub
not
jg
fnsave
xchg
push
call
cmp
pushf
(bad)
adc
jg
jo
dec
mov
mov
std
int
mov
cli
pop
not
mov
dec
mov
ds
ja
jl
loop
mov
or
scas
xor
das
in
retf
movs
adc
int3
xchg
add
stos
pcmpeqb
mov
fnstenv
cdq
fs
ja
sub
mov
sbb
dec
mov
xchg
(bad)
std
in
and
mov
(bad)
lods
push
cmp
xchg
dec
stos
jp
adc
mov
and
clc
loopne
sbb
sub
inc
cmp
mov
fs
shr
mov
xchg
loopne
(bad)
aas
adc
dec
xchg
sbb
push
xchg
sub
mov
iret
not
stos
xchg
les
mov
mov
mov
mov
shr
pushf
les
fsubr
add
dec
out
mov
mov
xchg
sbb
sbb
mov
cmc
shl
sub
dec
das
ds
jns
lea
cmps
bound
mov
daa
jae
jl
cmp
or
and
repnz
mov
push
loope
sbb
cli
retf
mov
movs
cmc
sbb
cdq
pusha
mov
push
aas
out
jecxz
pop
aas
lods
icebp
push
jmp
cmps
daa
pop
and
stos
test
dec
inc
test
push
push
add
jp
frstor
jo
aaa
or
and
dec
and
adc
xchg
cs
pushf
lods
inc
adc
jmp
rcr
sub
cmp
rcl
mov
cmp
cld
push
nop
push
sbb
gs
pop
xchg
inc
into
popf
rol
pop
xchg
scas
loop
aam
or
xchg
sub
cmps
fwait
sub
or
leave
mov
(bad)
sub
sbb
inc
sbb
mov
daa
add
sub
mov
mov
or
cmps
xchg
aam
sar
pop
mov
rcl
pop
in
dec
xor
aaa
aaa
pop
std
cmp
out
push
retw
mov
(bad)
cwde
loop
(bad)
repnz
jmp
and
or
sub
sub
push
movs
add
dec
hlt
and
enter
jg
std
ins
xchg
pop
in
xchg
adc
lea
xchg
cld
jl
cdq
mov
outs
(bad)
mov
add
pop
sbb
xor
movs
or
dec
fsubr
push
dec
pop
jmp
mov
mov
test
xchg
adc
jge
jae
loop
push
pop
cmp
jl
les
sbb
mov
mov
pushf
jge
es
mov
push
jns
imul
fsubr
or
mov
loopne
nop
xor
nop
jne
in
inc
frstor
mov
or
push
xchg
push
pop
cmp
pop
xchg
jecxz
xchg
ret
lahf
stos
outs
push
pop
sti
pop
fst
jp
adc
sbb
popf
int
cmp
test
dec
(bad)
shl
or
arpl
in
fwait
test
movs
mov
push
dec
mov
in
inc
pop
fcomp
sub
xchg
in
xchg
jg
sahf
cmps
call
pop
cmp
cmp
adc
cmps
xchg
cli
or
add
ss
adc
jne
test
out
mov
jno
mov
xchg
jne
xchg
and
leave
ret
push
dec
inc
or
sub
jmp
out
pop
movs
lahf
jnp
lock
inc
cmp
cmp
sbb
cmp
outs
jmp
lods
daa
sbb
fdivr
and
pop
xchg
ret
push
shl
test
popf
mov
lods
(bad)
aaa
mov
lea
ror
add
sti
addr16
ss
in
and
push
push
repz
jo
xor
adc
add
sti
clc
push
sbb
push
or
mov
bound
nop
inc
pop
arpl
int3
add
jmp
dec
adc
stc
mov
push
shl
rcr
xor
xor
cmp
adc
sbb
repz
lahf
int
test
mov
jg
push
cmp
or
xchg
cmc
in
call
mov
enter
jns
lock
dec
ss
and
mov
push
jg
pop
and
fstp
sub
loopne
jecxz
mov
outs
mov
pop
add
retf
sub
jmp
fwait
push
cmps
sbb
loop
mov
cmps
repnz
pop
dec
scas
dec
dec
and
jp
vpaddb
mov
xor
movs
pop
sub
cwde
lock
fist
xchg
xchg
pusha
add
aam
or
test
mov
gs
out
gs
cmp
retf
sub
cld
movs
adc
imul
loop
aaa
cmp
adc
inc
gs
fisttp
les
cmp
jb
aas
push
xchg
int
dec
fldz
lahf
cmp
or
mov
mov
mov
add
lahf
imul
shr
jbe
loopne
jl
lods
hlt
and
in
pop
xchg
cmps
hlt
mov
mov
push
dec
jp
sbb
mov
adc
sbb
aad
and
mov
clc
(bad)
mov
in
scas
xlat
pop
pop
cmp
imul
mov
jmp
sub
shl
stos
jp
addr16
mov
in
inc
mov
int3
add
mov
rcr
push
into
push
adc
inc
aad
pop
pop
les
aam
aam
hlt
adc
and
stos
and
or
pop
and
pop
test
mov
jecxz
imul
lahf
addr16
sbb
loop
xlat
retf
mov
xor
xchg
xchg
clc
adc
cmps
test
ds
lahf
mov
out
lods
inc
sub
pop
mov
std
mov
mov
popa
into
push
dec
xchg
inc
jge
xchg
gs
fisubr
cld
scas
es
es
not
(bad)
loopne
jns
pop
cmc
loope
adc
xor
mov
lea
test
dec
imul
sub
or
out
jo
aam
mov
pusha
ret
and
xor
stos
sbb
mov
and
test
xchg
xchg
ins
and
lock
pop
imul
jge
cmp
cmps
and
inc
pop
addr16
pop
pop
adc
hlt
mov
aam
sub
imul
daa
shl
xlat
in
and
daa
jb
aas
fdiv
cmps
rol
or
aaa
mov
add
push
imul
test
leave
cmp
jb
sub
pop
sub
inc
clc
pushf
inc
loop
out
add
dec
shl
jno
and
and
adc
(bad)
(bad)
cli
add
fdiv
shl
xchg
jnp
push
jmp
ins
mov
div
aad
adc
pop
mov
cmp
in
pop
jl
pop
jmp
js
sbb
sub
cld
cmp
cmp
cmp
inc
mov
test
shl
je
mov
adc
jne
sub
xchg
cmp
add
test
jg
inc
jno
in
inc
sub
fnstcw
inc
imul
push
pop
cli
in
outs
out
mov
(bad)
in
mov
ret
imul
or
sar
pop
out
fidivr
and
stos
xor
jmp
push
sub
aaa
sub
test
inc
lock
mov
cmps
fstp
jmp
popa
loopne
push
dec
dec
dec
pusha
sub
enter
mov
jns
mov
call
or
lods
xchg
sti
sbb
push
(bad)
fnstenv
test
mov
mov
hlt
mov
pop
(bad)
jl
retf
push
lock
add
cmp
dec
int
pop
gs
cmp
mov
and
into
mov
jnp
ret
lahf
mov
arpl
cmp
cmp
mov
jp
aaa
call
lods
fcomp
pop
sahf
imul
jp
in
adc
fadd
call
adc
imul
xchg
jnp
call
jae
(bad)
cmp
enter
xlat
sbb
xor
outs
adc
cmp
xchg
xchg
dec
call
pop
mov
and
dec
(bad)
aaa
xor
scas
pop
xor
lods
mov
push
test
mov
push
cmc
adc
movs
test
or
mov
mov
lods
inc
xchg
jbe
jmp
push
add
adc
sbb
xor
iret
xchg
retf
aad
push
scas
mov
xor
or
clc
xchg
ins
stos
lock
es
inc
aaa
sub
cmp
sbb
xchg
test
cdq
sub
mov
push
loop
push
mov
and
in
rcl
add
xor
xchg
arpl
jns
imul
aam
or
clc
fs
(bad)
dec
loope
pop
stos
jnp
inc
mov
sti
sub
movs
shl
sbb
sub
xchg
jo
out
clc
popf
mov
push
maxps
cmp
shl
mov
and
adc
enter
pop
fsubr
imul
outs
mov
scas
xchg
sbb
jns
ret
pop
in
loope
sub
(bad)
outs
inc
repz
and
sub
cld
inc
sti
pushf
push
add
xor
and
aaa
dec
daa
jo
adc
mov
mov
ins
mov
or
jno
add
inc
xchg
push
adc
vfrczss
cmp
and
outs
fidivr
inc
add
pop
adc
(bad)
mov
cmp
jns
outs
adc
dec
lahf
dec
pop
fwait
inc
xchg
pop
dec
cmp
ret
push
adc
test
imul
stc
jl
out
push
mov
addr16
into
loopne
push
es
cli
cwde
jb
pop
or
xor
mov
pop
cmp
call
call
sbb
scas
cwde
push
push
mov
cmp
pop
mov
add
cvtps2pd
rcl
lods
mov
pop
mov
test
sub
or
bnd
movs
xor
mul
mov
cwde
sbb
data16
jl
xor
fidivr
xchg
imul
sub
pop
sbb
xchg
outs
leave
dec
leave
mov
leave
mov
dec
jle
push
mov
dec
mov
rol
scas
rcr
arpl
inc
push
loopne
push
xor
mov
xchg
add
inc
bnd
cmp
sbb
mov
pop
mov
mov
or
call
ret
or
movs
or
out
xchg
loope
stc
and
inc
inc
call
stc
push
pop
imul
jmp
xchg
dec
inc
mov
or
cmp
imul
jb
sub
push
fwait
stos
jmp
mov
ds
pop
mov
call
jp
and
les
sub
lea
sbb
imul
sub
loopne
shr
loope
mov
xor
mov
mov
add
stc
cs
add
js
push
xchg
test
mov
shr
sbb
adc
mov
push
cmp
inc
inc
outs
dec
jmp
jmp
xchg
lods
pusha
fldenv
bound
sti
daa
sub
rcl
xor
jmp
pop
lods
loope
add
dec
aad
and
outs
push
pop
and
mov
stos
in
cmps
js
mov
cs
mov
xchg
clc
mov
sbb
in
in
fsubr
push
std
add
(bad)
lods
mov
aad
aam
xchg
mov
mov
scas
jecxz
dec
les
jo
idiv
test
std
sbb
add
or
and
mov
outs
es
arpl
rcl
mov
jmp
inc
stos
sbb
push
fwait
push
dec
fimul
mov
shl
mov
add
sbb
fist
push
sbb
leave
cmp
call
cld
pushf
lahf
sbb
shl
inc
push
jge
jmp
adc
scas
jge
push
jmp
mov
arpl
gs
stos
pop
or
or
sahf
mov
or
fldcw
and
push
jl
cld
add
inc
scas
inc
inc
inc
test
rcl
retf
(bad)
repnz
mov
mov
(bad)
push
stos
mov
lds
pop
cdq
and
movs
or
ficomp
pop
cmp
movs
inc
xchg
pop
dec
xor
xchg
sbb
(bad)
xlat
aam
push
dec
outs
fdiv
sub
call
rcl
xor
pushf
popa
shl
nop
jp
mov
aad
lock
fistp
push
mov
and
push
fwait
xchg
jae
loop
mov
mov
cdq
mov
pop
test
pop
mov
icebp
scas
imul
shl
mov
mov
popf
inc
lods
and
adc
mov
js
cld
jae
cmp
mov
cdq
lock
mov
in
push
inc
push
outs
mov
lods
sub
(bad)
sub
adc
sbb
sbb
icebp
push
mov
mov
jp
call
xor
add
fnstcw
xchg
pop
pop
xor
out
dec
cdq
outs
data16
mov
(bad)
aam
repnz
mov
xor
mov
cmc
lock
sub
cmp
xor
fnstcw
mov
jns
aas
icebp
sub
pushf
push
push
push
call
dec
mov
push
sub
xchg
fs
scas
call
cmp
push
sar
push
mov
xchg
sub
mov
sbb
push
pop
sbb
loop
pop
fiadd
pop
xor
in
dec
sar
pop
in
pop
in
xchg
push
shr
lods
mov
push
mov
ret
stos
inc
mov
jmp
xlat
push
fs
xchg
mov
icebp
fcomp
mov
cmp
inc
mov
dec
pop
xor
enter
inc
jmp
sub
jb
in
inc
push
call
xchg
sbb
stc
(bad)
mov
fwait
retf
sub
or
dec
sub
ja
imul
sbb
mov
xchg
bnd
xchg
(bad)
push
(bad)
pop
xor
dec
jns
repnz
push
mov
ud2
pop
rcl
pop
or
test
dec
or
pop
add
fist
ins
sar
ja
xor
xchg
in
push
pop
pop
jno
adc
(bad)
mov
ins
es
jnp
xor
xchg
mov
in
mov
rcl
data16
sub
mov
nop
pop
sbb
(bad)
add
adc
loope
ins
xchg
ds
push
push
mov
mov
mov
leave
scas
arpl
pusha
into
mov
adc
pop
int3
jg
jne
mov
enter
gs
jg
cwde
dec
add
sbb
sbb
inc
ror
or
das
ss
mov
jmp
call
and
sahf
inc
enter
mov
out
jmp
xchg
add
ins
add
or
dec
fucom
pop
push
inc
test
dec
addr16
jne
out
les
xchg
cld
pop
xchg
add
jae
cmp
or
mov
nop
xor
mov
ret
adc
enter
pop
mov
scas
stos
dec
mov
cmp
sub
xchg
inc
push
mov
and
adc
jmp
mov
mov
mov
outs
ret
adc
sub
fimul
add
pop
sbb
retf
xchg
call
pop
pop
push
shl
push
fs
dec
arpl
sahf
out
adc
inc
dec
pop
xchg
xor
pop
sbb
retf
mov
push
(bad)
jmp
aas
mov
push
dec
or
shr
add
test
cmp
test
cmp
popa
xchg
sub
in
pop
(bad)
inc
pop
and
sub
xchg
or
jmp
pop
mov
shr
sbb
(bad)
mov
dec
add
repz
fmulp
pusha
dec
loope
push
fnstsw
and
arpl
mov
aas
jno
dec
cdq
inc
and
lock
imul
pop
jo
mov
mov
dec
in
stc
(bad)
cmp
cmp
call
fiadd
jle
mov
pop
jge
inc
ret
lea
or
mov
gs
mov
popf
mov
mov
xor
cmp
adc
inc
cmc
add
pop
xchg
push
cdq
push
pop
pusha
push
ds
sbb
pop
dec
xchg
aad
dec
mov
add
push
movs
xor
js
pop
inc
jbe
push
(bad)
inc
sub
lea
ret
jmp
and
fsubr
and
cdq
rcl
mov
pop
inc
cdq
inc
and
mov
and
push
xchg
or
js
adc
or
xchg
xor
js
dec
xor
test
retf
fidiv
ss
fimul
sbb
mov
mov
cmps
jne
mov
sub
jns
ins
cmps
add
or
sbb
test
ret
or
adc
inc
jbe
xchg
dec
mov
out
retf
mov
fldcw
adc
repz
retf
(bad)
mov
cmp
xchg
inc
inc
xor
jmp
xchg
int
ins
push
xchg
cdq
lds
sbb
clc
lods
outs
jb
movs
retf
jbe
(bad)
call
dec
int3
fwait
push
and
dec
xor
and
push
fistp
outs
mov
pop
(bad)
out
lock
test
(bad)
les
pop
push
mov
les
dec
popf
iret
sub
scas
(bad)
jp
inc
iret
sub
aaa
xchg
cs
xchg
iret
ss
adc
fimul
jno
arpl
inc
xchg
gs
cmc
fist
inc
mov
jbe
stc
loope
cmc
outs
and
out
jne
add
mov
cmps
(bad)
xchg
mov
call
jnp
stc
sub
sub
gs
outs
jne
mov
ss
retf
ss
lods
jle
or
adc
and
jns
scas
mov
popf
or
in
stos
psubq
jmp
sub
cdq
ja
jp
sub
cmps
jno
jle
jo
shl
sbb
loope
rcr
push
in
jmp
stc
xor
(bad)
adc
dec
mov
repnz
lock
inc
dec
sbb
aas
push
jp
fwait
cmp
cld
jge
ins
movs
mov
sahf
das
fistp
xor
mov
add
push
add
nop
xlat
cwde
fist
cmp
xor
adc
out
cmp
test
add
std
cmp
loope
jg
jmp
jge
call
retf
shl
push
stos
rcl
mov
outs
cmc
xchg
mov
aas
daa
cli
xchg
jle
ret
dec
(bad)
mov
jge
mov
in
inc
aaa
dec
mov
popf
daa
inc
pop
sub
adc
adc
or
xchg
iret
loope
loop
pop
xchg
cmp
push
fstp
jne
(bad)
js
or
adc
scas
icebp
xchg
cmp
loopne
or
and
mov
call
shl
pushf
sbb
jecxz
ja
imul
addr16
mov
jne
dec
push
std
js
mov
scas
fiadd
in
xlat
stc
add
mov
(bad)
adc
out
jle
mov
adc
adc
lds
test
lds
enter
aas
scas
push
pop
or
dec
test
mov
call
dec
xchg
int3
retf
outs
(bad)
ins
retf
sbb
loope
and
dec
mov
push
push
mov
inc
jg
shr
cmp
jae
mov
and
sub
pop
push
scas
aad
fucomi
in
shr
push
fisttp
or
push
(bad)
movs
fidiv
gs
arpl
ins
dec
lock
and
push
outs
cdq
jno
mov
inc
(bad)
bt
hlt
mov
inc
or
call
dec
jge
jp
hlt
(bad)
pusha
in
jmp
scas
int3
mov
dec
outs
mov
sub
mov
ret
and
mov
in
mov
in
cwde
pop
div
lds
scas
pusha
pop
mov
aaa
add
fild
nop
jecxz
fisub
repnz
and
into
stos
mov
adc
sub
sti
(bad)
js
cmc
push
jmp
fwait
inc
xor
(bad)
in
mov
adc
pop
pop
aam
lods
out
aaa
push
arpl
test
sbb
aam
out
mov
mov
icebp
ret
jo
inc
sti
retf
lods
mov
sub
pop
call
xchg
mov
inc
lock
cld
inc
into
aas
cmp
into
push
push
xlat
retf
(bad)
les
fst
shl
mov
mov
xchg
outs
mov
mov
push
lds
cmps
sar
xchg
jge
xor
test
lahf
cmp
cmps
sbb
out
mov
and
inc
fwait
test
inc
xchg
adc
icebp
dec
push
cmc
nop
xchg
cmp
inc
jmp
sub
(bad)
es
je
xlat
popa
stos
retf
dec
xor
loop
aad
cwde
jecxz
pop
not
mov
sub
lods
adc
cli
cwde
push
mov
mov
enter
pop
xor
cmp
jb
jno
out
and
daa
in
clc
xchg
fmul
mov
ins
dec
pop
pop
aam
mov
xlat
movs
cmps
rcl
(bad)
push
stc
adc
test
add
mov
daa
mov
dec
adc
push
das
popa
fwait
sbb
dec
jb
lock
push
mov
nop
and
fst
pop
fs
je
scas
mov
enter
cwde
sbb
inc
ja
ja
fiadd
cmp
leave
call
rol
pop
ss
mov
pushf
pushf
(bad)
(bad)
jmp
sbb
fcom
push
movs
arpl
aas
jbe
mov
lock
leave
sbb
loopne
mov
test
cld
pushf
xor
les
int3
inc
pop
or
scas
sbb
cmps
inc
mov
dec
mov
pushf
jbe
mov
pop
pop
and
in
jl
add
outs
pop
jb
into
jb
test
mov
rcr
test
dec
mov
cmp
out
daa
loope
add
jp
imul
jns
dec
and
jns
leave
push
cdq
sub
mov
aad
mov
xchg
cmp
mov
leave
nop
sar
ror
out
cmp
inc
push
movs
pushf
adc
or
jb
dec
push
push
rcl
cmp
jg
inc
sub
test
xor
les
je
jnp
jo
lds
jmp
jmp
sbb
xchg
mov
(bad)
and
cmp
test
xchg
fst
fwait
jg
adc
sbb
lahf
in
mov
push
add
mov
pop
imul
xchg
dec
dec
jl
popa
pop
sar
(bad)
jge
inc
(bad)
adc
shl
pop
int
sub
mov
dec
push
add
push
xor
pop
mov
mov
push
in
xchg
push
(bad)
sub
xchg
dec
pop
fidiv
add
jbe
leave
sub
jle
cmp
ret
je
pop
das
pop
inc
test
and
fild
sub
cwde
or
cmps
fdivr
cli
sbb
arpl
jo
hlt
rcr
adc
loop
mov
fidiv
repz
pop
out
fisttp
ins
jne
mov
cwde
shl
pop
nop
fst
or
push
jp
xchg
sub
inc
cmp
jge
out
pop
(bad)
outs
ret
repnz
cmps
xchg
gs
pop
(bad)
xor
cs
push
dec
cmp
arpl
lahf
cmp
push
sbb
inc
fcom
mov
xchg
test
out
inc
inc
jmp
aad
call
test
pop
push
xchg
outs
pushf
gs
sahf
pop
imul
sub
cmps
xor
and
dec
cmc
stos
(bad)
ins
sbb
or
lock
push
sbb
dec
movs
add
mov
xlat
js
call
pop
fst
mov
push
loopne
(bad)
mov
lea
add
fld
mov
push
mov
pop
outs
mov
(bad)
cld
ins
daa
cmp
xchg
mov
outs
jb
loop
mov
xlat
es
daa
scas
mov
cli
loop
jnp
cs
pop
jg
aaa
lods
(bad)
into
sbb
imul
arpl
cmp
repz
cmp
iret
lods
push
jns
mov
or
and
popa
xor
dec
movs
jmp
mov
sub
out
sub
mov
lea
pop
mov
pop
fsub
icebp
arpl
jne
aaa
add
push
adc
daa
jb
stos
xchg
pop
jnp
mov
xchg
mov
test
test
mov
sti
fst
dec
xlat
sub
inc
mov
in
out
pop
ins
lds
pop
idiv
jg
call
mov
ss
(bad)
inc
cmp
movs
mov
imul
jg
jecxz
xchg
dec
dec
addr16
fsub
adc
imul
push
xor
mov
loopne
and
je
mov
neg
and
and
or
xchg
(bad)
fdivr
inc
dec
jo
pop
add
(bad)
xor
pop
retf
lods
sub
mov
scas
push
jns
xchg
lods
dec
mov
sub
push
les
add
xchg
sbb
arpl
and
sub
iret
pop
sub
dec
ins
movs
stos
add
mov
(bad)
sbb
call
xlat
fld
mov
push
jge
inc
jmp
and
ins
lds
xor
imul
inc
xchg
sub
or
sbb
cmp
sbb
out
cs
dec
sbb
add
daa
lds
into
gs
sub
dec
aaa
mov
mov
and
pop
ja
cwde
xor
mov
sbb
jmp
movs
or
mov
mov
fs
sub
loopne
lods
adc
fs
cs
inc
dec
pop
and
and
icebp
or
ins
add
pusha
cmp
les
jle
sbb
mov
ins
(bad)
cmc
dec
cmp
ficom
mov
dec
jge
cmp
push
adc
in
mov
fidiv
inc
cmp
in
xor
xlat
(bad)
sub
imul
data16
call
jns
ins
iret
dec
sbb
mov
(bad)
xchg
mov
pop
jo
shl
lods
jl
movs
outs
loopne
and
lods
aas
adc
adc
int
push
dec
jmp
retf
sbb
push
dec
daa
cmc
pop
cmps
xlat
xchg
mov
cmp
popa
mov
mov
add
add
js
and
or
ss
gs
test
adc
cmp
leave
inc
mov
xor
pop
es
sbb
cmp
cs
dec
cmp
jns
les
adc
hlt
or
add
out
stc
add
lahf
xor
push
int
cmp
sub
pop
mov
ds
stc
mov
inc
xor
stos
loop
imul
popf
stos
(bad)
xchg
dec
out
jge
or
ret
mov
in
add
sbb
mov
cmp
aam
mov
xor
and
mov
inc
fcom
jecxz
repnz
clc
cmp
sub
(bad)
xor
nop
imul
test
mov
xor
mov
out
and
aad
push
adc
push
add
push
arpl
sub
int3
adc
iret
pop
xchg
adc
lea
or
arpl
pop
jle
aaa
add
mov
mov
mov
xor
fs
ret
call
outs
pop
test
popf
retf
jbe
inc
sbb
in
jns
mov
or
mov
cmps
call
ror
push
adc
xchg
lahf
add
inc
retf
add
shr
mov
mov
enter
imul
outs
push
cmps
aas
sbb
movs
dec
push
adc
scas
sbb
aam
(bad)
nop
in
fld
add
mov
mov
jb
popa
fnsave
sub
pop
(bad)
dec
test
mov
xchg
inc
mov
ror
xor
adc
mov
daa
(bad)
imul
push
test
mov
mov
cs
retf
pop
(bad)
pop
jg
in
cdq
mov
mov
js
je
pop
out
jg
add
inc
inc
lods
push
sub
push
or
mov
mov
pop
xchg
cmp
push
std
push
mov
fisubr
add
mov
stos
cmp
jns
pop
mov
dec
cli
inc
hlt
hlt
int3
jp
data16
lods
mov
imul
in
jno
cmp
inc
pop
push
xchg
jae
xor
mov
add
outs
aaa
cmp
shrd
fstp
cmp
ret
repz
fstp
dec
inc
xlat
and
jmp
sub
mov
cmp
and
fstp
mov
push
fwait
add
pusha
pop
rcl
sahf
gs
dec
imul
outs
cmp
cmp
and
das
jg
inc
adc
inc
in
out
lds
sbb
mov
inc
movs
jge
mov
push
rol
fld
sbb
(bad)
out
mov
pop
or
mov
mov
cmp
das
dec
push
leave
mov
ss
rcr
push
sub
aaa
popf
push
push
push
inc
inc
inc
test
and
add
cld
faddp
mov
dec
aam
stos
or
pop
pusha
mov
mov
das
inc
mov
jl
dec
scas
popa
rol
loope
jnp
arpl
shl
fsubr
jmp
loope
mov
mov
ret
cmp
test
stc
add
pop
mov
ja
adc
in
not
lods
test
dec
xchg
mov
std
xor
jmp
push
fs
not
xchg
dec
cld
xchg
lods
sub
mov
mov
add
into
dec
rol
loop
repz
js
pop
daa
out
ins
ja
sub
neg
add
addr16
mov
fiadd
push
adc
imul
gs
sub
inc
aas
or
mov
lahf
adc
loop
test
scas
repnz
shl
dec
cmps
mov
jmp
or
xchg
inc
(bad)
fs
push
or
jb
call
arpl
xchg
sub
inc
jnp
mov
stos
xchg
pop
mov
add
push
test
imul
int
pop
pop
or
push
cmp
dec
push
jns
push
or
pop
push
ins
rcr
int
dec
pop
xchg
(bad)
jge
jne
mov
push
jmp
popa
fcomp
(bad)
aad
pop
push
xchg
cli
hlt
scas
sbb
aad
sbb
mov
push
pop
ficom
loope
add
fistp
fcom
jo
jno
aas
ficom
cmc
(bad)
jne
pop
jb
jle
es
aaa
jge
lock
mov
cli
adc
daa
jmp
clc
fs
jmp
push
nop
jg
sbb
jg
mov
mov
pushf
lods
call
xor
mov
cmp
outs
xor
jnp
inc
(bad)
in
xor
sub
xchg
xchg
xor
movs
pop
dec
loop
fwait
jge
out
add
pusha
xlat
loop
jl
pusha
jge
call
pop
outs
pop
xchg
sbb
lds
stos
mov
inc
cmps
rol
xor
sbb
and
add
pop
jmp
outs
outs
lea
clc
inc
xor
syscall
fld
retf
cmp
gs
add
jne
repnz
sbb
inc
inc
add
in
lods
hlt
stos
cmp
lahf
shr
sub
int
(bad)
pop
aas
mov
jmp
sbb
mov
xchg
and
or
test
aas
xchg
ins
rcl
add
ja
lods
aaa
xchg
popa
jmp
test
(bad)
and
fld
or
in
adc
xor
mov
add
repnz
mov
ins
fild
cs
aas
fsqrt
es
stos
xor
iret
adc
ror
add
cmp
cwde
in
xchg
or
sub
(bad)
mov
or
sub
daa
jle
xor
push
mov
and
push
out
outs
pop
ss
add
int3
xchg
cli
dec
add
mov
sbb
ds
inc
sub
dec
daa
mov
push
xor
or
pop
xchg
shr
repz
pop
cdq
sbb
icebp
jecxz
xchg
adc
jle
fcmovnbe
(bad)
loope
fwait
cmp
outs
mov
addr16
or
dec
xchg
std
cmp
loopne
sti
fist
dec
ja
or
dec
imul
out
or
sbb
xchg
retf
pop
in
pop
cmps
inc
mov
mov
fadd
sub
xchg
aam
(bad)
sti
scas
test
jmp
add
inc
clc
movs
or
bnd
dec
fnstsw
aaa
adc
sub
xchg
jne
xor
jae
out
rcl
xor
retf
dec
cmp
cmp
call
adc
sbb
push
jbe
inc
iret
xor
dec
ss
dec
inc
push
sub
sbb
push
xor
iret
lds
mov
movs
imul
sti
sbb
push
idiv
push
into
jmp
jp
(bad)
mov
push
rcl
mov
mov
js
dec
xchg
xchg
add
mov
push
jmp
aad
xchg
sub
xor
pop
int
pop
mov
ficomp
in
bound
out
ret
sbb
std
add
in
jnp
ins
enter
push
sub
sti
xor
jmp
aad
sub
jne
xchg
push
pop
movs
sbb
xchg
lods
fwait
jo
sub
hlt
push
mov
icebp
jns
xor
xlat
mov
out
and
cmps
(bad)
mov
stos
pop
cmp
(bad)
pushf
lahf
fwait
pop
out
fmul
xor
js
fsub
dec
cmp
jb
and
ds
sub
add
(bad)
addr16
mov
sahf
inc
lea
push
mov
icebp
test
add
xchg
mov
(bad)
popf
jg
jne
cmc
sub
inc
in
setnp
es
cmps
xchg
pop
or
xor
jmp
retf
lods
mov
inc
xchg
pop
out
cmp
(bad)
aas
out
inc
scas
je
sub
int3
rol
cwde
hlt
imul
jmp
lds
mov
pop
int3
push
inc
and
mov
adc
leave
add
pop
aas
fldenv
inc
mov
aaa
xchg
fadd
dec
pop
xlat
cmp
retf
iret
push
fst
and
jp
jmp
mov
xchg
mov
loopne
outs
mov
mov
push
addr16
mov
lods
(bad)
mov
dec
iret
xor
lods
or
jmp
inc
push
daa
inc
cli
iret
jmp
ins
jns
ins
pop
stos
mov
jmp
sbb
std
into
adc
jl
and
and
cmc
aad
dec
cwde
and
jmp
xor
mov
push
movs
and
mov
sar
dec
addr16
cmp
mov
repz
repz
fist
and
cld
pop
cli
sbb
out
pop
fmulp
dec
cmp
aam
jle
addr16
outs
addr16
pusha
adc
inc
jno
xchg
dec
clc
pop
and
push
and
xor
es
adc
cmp
mov
fild
push
xchg
mov
sub
jae
out
xor
mov
mov
add
push
je
cmps
jmp
imul
mov
stos
mov
jge
ret
mov
cmp
test
movs
add
(bad)
(bad)
mov
retf
sbb
pushf
(bad)
loopne
out
sar
lock
repz
ins
cmp
aam
mov
jg
not
xlat
shl
pop
pop
and
adc
cmp
or
adc
(bad)
fild
fild
lea
jo
mov
not
jle
mov
jmp
aaa
cmps
imul
fistp
out
mov
ja
cdq
(bad)
sbb
pop
(bad)
pop
push
ss
repnz
stos
sbb
inc
inc
or
test
mov
mov
sti
mov
scas
adc
out
lds
test
gs
jb
scas
loopne
inc
xchg
mov
cmps
cwde
rol
cdq
xchg
or
xchg
jnp
sar
mov
mov
(bad)
mov
(bad)
fs
nop
jne
into
cmc
enter
and
dec
pop
pop
rcl
mov
or
add
or
cmps
(bad)
xchg
(bad)
es
arpl
leave
lods
shr
iret
xor
lahf
sub
hlt
sti
and
xor
xor
jg
xchg
sub
adc
aam
inc
push
add
inc
int
mov
ret
bswap
test
jb
xor
and
pop
push
mov
shl
mov
add
ds
rcl
shl
inc
jae
xchg
fisub
(bad)
and
add
jg
jns
cs
mov
inc
stc
(bad)
js
add
adc
sbb
int
sbb
(bad)
in
mov
mov
cmp
(bad)
xchg
aas
cdq
push
repz
js
jb
pusha
sub
hlt
cld
(bad)
cli
and
fisttp
mov
stos
push
cmp
loop
out
mov
adc
xor
add
imul
add
push
sub
aas
in
cli
and
loope
dec
mov
imul
ja
test
xchg
test
imul
clc
mov
repz
jae
clc
retf
pop
adc
mov
out
and
sar
(bad)
and
xchg
xchg
enter
mov
mov
pop
sbb
and
in
mov
fisttp
inc
pop
and
and
ficomp
retf
(bad)
pop
(bad)
and
jns
inc
mov
aam
jecxz
xor
int
jo
gs
fdivr
daa
mov
push
jge
pop
push
or
aad
lods
aad
xchg
fstp
add
jmp
hlt
out
add
jmp
xor
or
js
xchg
jle
dec
cwde
and
sub
mov
js
icebp
push
mov
cmp
inc
stos
and
or
scas
ins
pop
fnstsw
inc
push
sbb
jp
sub
nop
or
ret
mov
into
push
shl
aad
dec
call
in
inc
scas
cmp
jge
jecxz
push
cdq
push
inc
push
adc
mov
les
imul
ret
cdq
sahf
retf
push
mov
xchg
jae
adc
xor
mov
ret
push
cmp
into
jmp
and
pop
sbb
push
sbb
neg
mov
aas
xchg
mov
xchg
cmp
in
cdq
mov
or
push
(bad)
xlat
jno
rcr
push
dec
add
dec
mov
sbb
pop
xchg
mov
cmp
cmc
out
loopne
pusha
loop
jbe
xor
mov
or
nop
fnstcw
out
and
call
jnp
jge
ror
adc
rol
inc
inc
shr
jl
push
gs
imul
sub
out
fwait
lea
cld
sub
ror
sbb
icebp
sbb
and
mov
fmul
sub
shr
shl
pop
(bad)
mov
add
ins
or
and
pop
xor
and
sbb
xchg
mov
cmps
xchg
push
jbe
or
mov
add
or
mov
push
jmp
lock
sub
sub
dec
scas
retf
test
inc
loop
add
mov
mov
mov
dec
aad
and
or
mov
push
(bad)
sbb
push
pop
add
iret
jg
pop
ret
(bad)
mov
ret
mov
mov
out
mov
sbb
and
or
or
cmc
cmp
ror
add
test
std
push
mov
add
inc
xchg
cmps
into
mov
xor
and
mov
nop
test
push
mov
or
ss
mov
ss
sbb
jmp
dec
push
mov
jnp
pop
imul
aam
inc
and
push
aaa
cmp
(bad)
imul
adc
xor
in
lahf
xchg
into
push
sahf
and
pop
iret
jl
mov
mov
mov
inc
loope
jae
mov
sbb
xor
xor
daa
retf
push
into
idiv
sbb
and
pusha
xor
dec
jb
jb
es
add
jno
mov
setne
inc
aam
es
sti
jb
inc
xor
dec
sub
cmps
jbe
pop
mov
daa
scas
mov
xor
and
mov
sub
mov
mov
idiv
sbb
sbb
lods
cld
sbb
push
aad
inc
out
sbb
or
push
jne
inc
iret
inc
sub
push
aam
stc
adc
mov
lods
and
mov
out
aas
out
sub
push
std
xchg
push
lods
sbb
loop
(bad)
mov
xchg
enter
push
std
xchg
lahf
pop
jnp
jecxz
or
mov
fsin
and
stos
sahf
lods
xchg
les
adc
or
jbe
inc
sti
test
ficom
sub
xor
call
xchg
push
jle
push
addr16
xlat
es
sti
arpl
or
popa
jecxz
mov
pusha
jge
ret
or
mov
stos
pop
cmps
fcmove
adc
dec
add
or
sbb
(bad)
mov
xchg
adc
inc
push
mov
cmp
imul
test
xor
fdiv
push
lods
ins
sbb
dec
sub
lds
out
mov
adc
cdq
test
cmc
test
imul
aad
stos
(bad)
sbb
je
mov
cmc
iret
push
adc
outs
xchg
(bad)
mov
xchg
aam
and
aaa
push
dec
or
(bad)
jb
sar
mov
fdiv
adc
inc
outs
xchg
add
fldenv
cmp
fsubr
inc
iret
pop
fadd
ds
sub
sub
push
outs
in
mov
sub
fadd
retf
inc
mov
or
fnstsw
push
push
aad
sti
push
daa
ret
mov
mov
jg
pop
(bad)
or
adc
xor
repnz
pminub
out
mov
inc
idiv
out
cmp
int3
push
dec
mov
push
mov
out
mov
sbb
mov
cmp
pop
int
pop
mov
loope
mov
sub
xor
cmp
or
and
dec
pop
xor
rol
or
scas
sbb
inc
inc
out
cmp
(bad)
fs
rol
cwde
mov
or
mov
call
add
inc
pop
dec
pop
and
test
gs
int3
retf
xchg
(bad)
popa
add
outs
outs
add
sub
clc
movs
cld
daa
icebp
inc
cs
fistp
inc
xchg
leave
test
mov
ss
mov
fst
inc
mov
pop
lahf
push
sbb
push
data16
push
pop
fistp
and
sbb
je
mov
aam
cmp
(bad)
hlt
repz
xchg
xchg
sub
shl
add
sub
sbb
push
dec
imul
leave
shr
xchg
mov
rcr
mov
les
lock
loop
aas
cmps
sbb
test
mov
jb
arpl
push
(bad)
mov
add
add
inc
hlt
pusha
adc
(bad)
mov
and
stos
in
sbb
xchg
push
pop
mov
call
add
adc
ss
bound
sub
or
jae
daa
cmp
adc
jae
in
sbb
test
jb
sub
ins
int3
cmp
sti
mov
mov
xor
rol
jmp
jp
push
scas
push
ja
call
(bad)
dec
aam
pushf
push
push
les
das
xchg
stos
movs
add
es
push
adc
xor
sbb
pop
jl
mov
mov
xor
xor
mov
jne
cli
push
jbe
call
fsub
pop
imul
aad
cld
mov
dec
lods
push
je
retf
sub
and
push
sub
mov
mov
icebp
xchg
push
aas
and
je
push
aad
cwde
fwait
sub
sub
scas
sbb
or
test
shr
xor
adc
fwait
lds
jae
and
push
popa
push
in
and
lods
shl
gs
lds
jecxz
das
push
data16
pop
adc
jmp
add
pusha
mov
aas
xchg
jb
icebp
xor
test
mov
pop
xor
arpl
sub
mov
shr
in
and
push
(bad)
xchg
sbb
ror
sbb
push
adc
das
ja
push
(bad)
in
loope
cmp
xchg
pop
jecxz
sbb
xchg
adc
fld
in
imul
push
retf
push
adc
jb
lahf
sti
fmulp
loope
retf
icebp
xor
div
sti
inc
push
push
xchg
push
mov
nop
jp
push
loopne
out
xchg
jnp
in
movs
aam
test
mov
loope
cmp
scas
mov
rol
mov
jb
adc
mov
and
push
ror
push
(bad)
outs
jnp
sub
ficom
int
popa
shl
retf
cmps
xchg
xor
mov
mov
stc
mov
cmp
cmps
and
lea
in
push
mov
ror
test
mov
inc
push
ror
and
dec
and
sar
dec
fistp
out
jno
mov
pop
mov
lahf
pop
out
and
inc
sub
push
inc
mov
scas
cdq
fsub
scas
fwait
xchg
mov
call
mov
scas
call
lods
mov
or
movs
xchg
dec
fbstp
pusha
sbb
pop
nop
(bad)
(bad)
std
jnp
mov
inc
xchg
mov
into
sub
pop
aam
add
mov
sbb
jp
test
(bad)
push
(bad)
shr
imul
mov
inc
push
jb
or
out
push
pop
(bad)
in
mov
jmp
mov
fsubr
sbb
mov
pop
sub
movs
lahf
hlt
test
mov
repnz
add
adc
loop
mov
lods
xor
imul
leave
pop
mov
les
push
cmp
sub
std
jnp
sbb
cmp
dec
enter
out
mov
mov
mov
add
mov
mov
(bad)
rep
sub
ins
push
mov
icebp
outs
ror
test
test
xor
fistp
ins
sub
mov
add
adc
scas
fisubr
imul
dec
xor
call
push
xchg
and
nop
cmp
and
jmp
(bad)
mul
jecxz
not
ffree
lds
mov
mov
cmp
inc
sti
xor
fwait
mov
test
outs
out
das
dec
xchg
pusha
imul
jg
lods
aad
push
jae
mov
sub
or
adc
dec
mov
inc
inc
ds
les
cmp
mov
push
mov
(bad)
sahf
cmp
jg
pop
in
dec
fwait
mov
(bad)
mov
xor
push
sub
inc
inc
add
les
adc
mov
push
push
ja
ja
ins
jle
cmp
mov
pop
inc
loop
sub
cmps
fild
daa
sbb
mov
mov
loop
pop
sub
enter
add
cwde
ins
xor
ins
push
stc
jmp
xchg
int3
stc
in
xchg
das
add
xchg
push
push
cmps
pop
mov
dec
mov
mov
and
ror
mov
imul
inc
and
in
xchg
xchg
add
ins
leave
les
dec
in
jge
or
(bad)
test
cmp
xchg
and
sbb
enter
xor
cmc
adc
cmc
imul
cdq
jp
test
call
sub
(bad)
mov
inc
enter
push
pop
sbb
stc
pop
stos
ja
add
mov
mul
adc
adc
arpl
sub
add
push
or
adc
scas
into
sub
out
test
ja
out
dec
mov
imul
ror
or
xor
mov
inc
xchg
xor
mov
cmp
jae
inc
mov
(bad)
aaa
out
icebp
inc
dec
jle
test
ret
sub
jge
punpckhbw
xchg
pop
jmp
and
inc
enter
ins
mov
mov
sbb
and
iret
or
pop
pop
xchg
sbb
xor
jno
jecxz
imul
ins
jbe
or
sub
sbb
mov
icebp
cdq
xor
out
cmps
xor
cs
and
dec
add
shl
inc
sub
das
dec
rol
cli
jg
lea
call
lahf
mov
(bad)
std
orps
in
sub
loop
pop
(bad)
aas
sub
cmps
in
mov
cld
call
call
mov
mov
movs
into
es
xor
icebp
and
inc
invd
dec
mov
clc
(bad)
arpl
mov
and
pop
std
xchg
sub
or
xchg
repz
adc
xor
sbb
mov
arpl
test
ficomp
pop
sub
dec
sbb
inc
jnp
jbe
iret
mov
bound
mov
loope
sti
clc
push
movs
add
test
xor
ret
mov
(bad)
jbe
rcl
lods
add
jo
clc
mov
mov
iret
inc
lods
retf
jmp
int
xor
mov
popf
and
arpl
clc
add
adc
cmp
sbb
inc
int3
lea
cmc
ret
test
xor
xor
outs
xchg
xchg
pop
leave
cwde
xchg
popa
push
cld
push
sub
cmps
pop
in
test
mov
xchg
(bad)
pop
jne
icebp
shl
cmc
aad
pop
add
out
adc
sbb
daa
jp
mov
shl
out
dec
xchg
xchg
pop
(bad)
cli
nop
mov
xchg
dec
ins
pop
add
jnp
enter
mov
test
in
int3
xchg
hlt
and
mov
push
ret
clc
shr
sub
xchg
inc
inc
dec
xchg
jnp
xor
into
cmp
out
mov
jecxz
retf
fldcw
mov
mov
cs
dec
shl
push
sar
xchg
inc
adc
(bad)
into
cmp
movs
fdivr
cmp
shl
bnd
dec
popa
movs
rol
mov
inc
lods
out
dec
lea
xchg
push
fnstenv
add
(bad)
shr
test
cmp
and
push
fdivr
sub
retf
pushf
push
and
retf
ror
mov
into
xor
pop
sub
adc
lods
iret
shl
lds
fistp
fwait
mov
(bad)
cdq
cmps
call
bndldx
jg
or
popa
cmp
sub
jmp
aaa
push
pop
je
jno
not
and
mov
(bad)
inc
push
(bad)
cli
jmp
mov
and
ret
cmp
adc
jo
mov
test
ss
neg
pop
pop
popf
mov
ds
dec
xchg
inc
dec
xchg
(bad)
dec
or
and
in
pop
or
mov
push
dec
dec
out
adc
(bad)
mov
xor
mov
(bad)
dec
dec
in
movs
setg
sub
js
mov
sbb
mov
sub
mov
push
xor
in
sahf
test
jno
inc
gs
and
fstp
(bad)
fcmovb
std
mov
push
cmp
xchg
ret
pop
(bad)
rol
pusha
mov
or
out
ror
cmp
dec
cmp
test
mov
rcl
pusha
stos
icebp
dec
ja
aaa
mov
cmp
add
or
outs
or
pop
mov
cli
retf
jge
sahf
pop
inc
lods
sbb
sbb
mov
cmp
aam
aad
in
mov
dec
dec
leave
push
mov
pop
je
out
enter
sar
ins
test
ror
ss
jo
adc
fs
test
sub
jmp
loope
push
mov
mov
add
mov
inc
cmp
cli
lahf
adc
fdivr
iret
mov
out
xchg
iret
or
xchg
push
cmp
pop
and
lods
sti
je
(bad)
mov
repnz
rcr
cmp
arpl
xchg
mov
mov
push
sbb
or
cmp
sti
gs
fistp
mov
ss
push
scas
push
mov
push
mov
aas
outs
push
mov
das
sbb
pop
imul
or
(bad)
push
test
sahf
inc
fnstenv
cmc
outs
add
sub
mov
or
and
mov
inc
xchg
jbe
add
je
mov
or
cmp
mov
and
mov
cmp
jne
mov
inc
push
in
pop
or
pop
(bad)
test
pop
cs
or
shl
xor
cld
mov
gs
jge
sahf
cld
out
cld
cmps
shl
rol
in
push
sbb
rcr
mov
test
pop
sub
xchg
push
and
hlt
cmp
loop
xchg
push
xor
cmp
sbb
push
mov
hlt
xchg
(bad)
xchg
pop
mov
ret
retf
test
sahf
scas
push
sub
jbe
fs
(bad)
out
pop
and
cdq
add
and
push
jns
in
xchg
imul
sti
stos
jmp
xchg
cmp
in
xchg
test
pop
rcl
jbe
lods
in
out
cmp
repz
xchg
clc
or
xor
jbe
pop
adc
or
pop
mov
xchg
popw
xchg
pop
jnp
out
or
inc
dec
mov
ins
sub
push
ins
cmp
fld
out
pop
dec
push
pushf
aam
ss
xor
pop
fild
push
adc
cld
xchg
icebp
lahf
push
in
jns
xchg
leave
jge
es
cs
popf
je
ret
stc
mov
call
iret
mov
mov
mov
push
movs
sub
imul
(bad)
mov
test
push
or
mov
addr16
lods
std
mov
js
inc
adc
cmp
ret
fidivr
aas
inc
daa
push
cmp
sti
das
lea
mov
fcom
jg
pop
test
lods
xor
pop
pop
or
nop
sti
pushf
test
lahf
dec
sbb
cmovo
popa
jbe
loopne
sub
dec
sub
shl
fbld
and
mov
les
fist
cli
cmps
test
inc
sti
icebp
ins
mov
movs
push
or
mov
inc
ficom
mov
repz
pop
lods
mov
mov
ror
dec
cmp
fidivr
xchg
in
sub
sub
mov
adc
pop
add
ds
dec
inc
mov
rol
mov
sti
int3
movsx
push
(bad)
rcr
cwde
std
lea
pop
and
bound
cmp
cmp
fnstsw
mov
sub
aad
push
or
mov
xchg
push
(bad)
je
xor
ins
jge
sti
mov
mov
jae
retf
or
(bad)
mov
nop
rol
aas
retf
(bad)
cmc
add
sahf
mov
add
mov
mov
div
in
js
mov
inc
imul
fild
add
lea
mov
sub
inc
inc
cli
movs
mov
cmps
xor
int
and
cmp
fcmovb
dec
jo
adc
cmp
push
or
adc
cmps
xor
mov
add
sbb
xor
out
ja
mov
cmp
inc
dec
and
movs
test
inc
aad
(bad)
mov
sbb
mov
dec
aam
mov
lahf
mov
popa
adc
push
(bad)
jecxz
inc
dec
push
mov
js
lods
shr
xchg
scas
cld
(bad)
aad
imul
or
xor
mov
jecxz
dec
mov
inc
aas
sbb
sbb
js
sub
mov
addr16
push
cmp
xchg
cmp
test
xchg
jns
mov
add
shr
(bad)
fdiv
repz
lock
punpckhdq
fnstcw
pushf
add
sub
dec
enter
ins
scas
pop
int3
jge
jns
not
inc
jecxz
ds
dec
test
and
and
inc
dec
mov
mov
or
shr
mov
loop
add
mov
cli
test
js
cdq
stos
aam
xor
cmc
cli
cdq
pop
sub
cli
xchg
repnz
xor
or
outs
nop
push
popf
push
js
xchg
(bad)
jp
mov
mov
aam
aaa
ror
and
add
dec
adc
or
pop
cwde
mov
repnz
loopne
into
xor
outs
fiadd
in
aaa
mov
sahf
lahf
es
sti
dec
cmp
push
out
or
mov
push
mov
aam
push
sbb
jl
and
loopne
sar
enter
aas
hlt
xlat
int
aad
call
sub
cmp
xchg
jle
into
dec
jno
pop
xor
aad
push
in
xor
gs
loope
and
jle
repnz
dec
repnz
mov
and
cmp
fsubr
int
sbb
test
cmps
stc
xchg
push
sbb
pop
xchg
jne
cld
ja
jne
mov
mov
pop
ret
xchg
clc
std
pop
loope
imul
sahf
cli
out
sahf
adc
push
in
pop
sbb
xor
xor
xchg
cdq
jmp
das
mov
dec
push
inc
xlat
out
mov
inc
inc
mov
or
mov
lahf
hlt
je
dec
xor
repz
jae
jnp
int3
or
les
cmp
dec
or
inc
pop
mov
mov
mov
jne
xchg
mov
push
scas
mov
and
out
int
enter
je
inc
popa
hlt
nop
mov
cwde
ins
cmps
xchg
clc
(bad)
aad
push
sub
repnz
jo
sbb
mul
mov
out
aas
movs
mov
or
in
mov
adc
mov
sbb
enter
push
sbb
xchg
mov
mov
hlt
clc
loop
pop
or
sti
mov
inc
dec
sbb
jl
xor
adc
inc
mov
cmp
or
pop
out
in
mov
inc
xchg
jo
sahf
sub
adc
cmc
movs
inc
sbb
mov
stos
mov
fstp
push
mov
jb
sub
fmul
bound
jns
call
ins
out
inc
out
sub
dec
pop
add
mov
sub
inc
in
movs
push
jnp
sub
push
jecxz
mov
inc
or
mov
mov
dec
mov
popf
int3
pop
xchg
mov
das
mov
sub
fsub
mov
mov
cwde
(bad)
jl
fld
cwde
mov
cmp
mov
(bad)
mov
adc
enter
sub
mov
sub
pop
ins
jp
std
mov
lods
mov
push
sar
pusha
mov
xor
add
or
test
xchg
aaa
push
push
jmp
fistp
sub
or
enter
xchg
jg
push
mov
xor
cmp
jbe
sub
pop
outs
pop
sar
sbb
pop
xchg
jnp
jle
sbb
xchg
mov
cld
and
ficom
das
pop
pop
les
popa
sbb
aas
mov
add
lods
aaa
aam
das
and
aaa
movs
mov
jl
push
xor
das
fisub
cmp
test
popa
pop
cmp
stos
pop
push
jmp
lds
or
test
es
fstp
mov
push
sbb
pop
retf
in
test
dec
ja
stos
push
fmulp
push
(bad)
loope
cld
jbe
lock
scas
into
rcl
out
xchg
lahf
cmp
test
pop
pop
out
aam
call
mov
sub
out
xor
or
push
dec
int
es
(bad)
hlt
add
xor
sub
mov
dec
push
js
xor
jmp
dec
stc
cld
or
mov
sub
ficom
xor
dec
arpl
xchg
mov
in
in
cmp
mov
les
inc
addr16
int3
jno
jle
outs
or
sbb
cmps
shl
bound
or
loope
pop
xchg
popa
out
pop
sub
enter
add
stos
mov
(bad)
fs
aas
fisubr
jmp
je
outs
mov
sbb
pop
inc
lods
inc
mov
aaa
loopne
jne
push
push
push
cs
sub
movs
fisubr
mov
or
jg
pop
jmp
das
pop
sbb
loop
loopne
popa
jno
pusha
jbe
pop
ins
jg
dec
psllq
in
push
imul
sub
lds
push
xor
jnp
pop
fwait
adc
lods
add
cdq
mov
jmp
cmp
fadd
pop
xchg
aad
dec
or
lea
in
dec
repz
mov
adc
scas
repz
cmp
icebp
test
loopne
mov
out
mov
std
cmp
pusha
add
call
pusha
and
in
or
cmp
in
mov
std
xchg
mul
add
cdq
pop
retf
jge
push
sbb
or
enter
xchg
jge
fstp
and
mov
sahf
adc
js
f2xm1
and
jns
push
pop
icebp
cli
sar
es
mov
outs
mov
push
icebp
xchg
and
sub
xor
mov
fsubr
retf
dec
into
jp
push
xadd
ret
sbb
add
push
clc
cmp
cmp
mov
cwde
mov
pop
mov
cs
mov
mov
cmp
cmp
pop
repz
xchg
popf
add
adc
push
push
ret
pop
jno
ja
repz
jge
idiv
lock
xor
bound
cwde
retf
and
mov
push
imul
lea
cmp
test
push
mov
mov
mov
ror
addr16
xchg
scas
fiadd
leave
cmp
aad
scas
in
mov
data16
adc
pop
mov
inc
xlat
or
inc
adc
sbb
and
push
sub
mov
ret
mov
or
fmul
mov
sbb
mov
scas
pop
les
adc
push
push
mov
lods
dec
mov
pop
in
xchg
fs
fwait
jns
aas
sub
sub
loope
adc
mov
inc
fs
push
and
xor
xor
(bad)
xor
push
ret
sbb
push
xchg
dec
ret
xor
sbb
adc
(bad)
out
repz
fidivr
fisub
iretw
mov
push
cmp
test
out
xchg
sub
jmp
and
call
mov
cmp
stos
call
xor
sti
sahf
mov
sbb
fldenv
push
in
push
(bad)
shl
jo
jae
sar
ret
adc
add
ror
clc
jbe
or
jmp
mov
dec
ins
dec
jmp
push
push
outs
fcomip
dec
int3
aam
jae
stos
jl
fstp
and
popa
cs
push
ror
int
gs
jns
jp
inc
inc
cld
push
neg
leave
sbb
inc
and
stc
inc
mov
sbb
adc
pop
neg
test
mov
int
jbe
cmps
dec
ins
sub
iret
outs
cld
repnz
or
retf
loop
das
push
inc
(bad)
les
cmp
inc
mov
mov
cmps
inc
mov
ja
cmp
scas
mov
pushf
jp
dec
out
push
jmp
cmps
xor
pop
pop
test
jne
add
or
jns
mov
dec
out
sti
jmp
iret
test
jmp
rcl
repz
inc
mov
jl
imul
in
int3
sbb
rcr
xchg
ss
adc
push
pop
movs
inc
adc
test
aas
nop
inc
xchg
out
bound
push
cmp
call
dec
inc
inc
and
(bad)
cwde
repz
in
ins
sbb
xor
jo
out
sbb
push
push
fld
cmp
das
pushf
adc
in
(bad)
mov
push
fs
push
cmp
div
xchg
cmp
int
inc
test
xor
mov
test
(bad)
jg
test
cs
cmps
adc
sbb
mov
mov
ins
inc
cmps
cmc
fsub
xchg
cmp
scas
out
int3
xchg
aam
test
xchg
pop
popa
and
sti
rol
inc
adc
in
push
sbb
pop
in
mov
neg
loope
jae
neg
dec
adc
call
push
dec
pop
imul
pop
fucomi
icebp
js
(bad)
xchg
push
cld
iret
xchg
mov
adc
mov
addr16
pop
pop
fdivp
daa
mov
in
stc
sub
adc
and
aam
sub
jbe
pop
sub
or
popf
movs
lods
lods
pop
mov
(bad)
out
and
cmp
inc
mov
pop
test
movs
mov
sbb
mov
dec
aad
push
or
in
out
lock
pop
ret
mov
push
mov
adc
dec
fdiv
add
out
ja
adc
xchg
loop
shl
push
push
jae
call
cwde
aam
sbb
sub
mov
xlat
or
pushf
ret
or
xchg
push
mov
adc
inc
bound
or
xchg
add
or
fcom
inc
push
(bad)
fiadd
jl
dec
outs
(bad)
mov
in
xchg
push
lahf
test
cmp
push
pop
dec
lahf
pop
jo
scas
xor
ror
call
dec
mov
fild
inc
loopne
lock
inc
fadd
int3
movs
cmp
fnstcw
(bad)
clc
loopne
js
cdq
cmp
shl
xor
mov
in
jne
push
bnd
mov
cmps
push
or
inc
xor
jmp
push
test
ins
(bad)
(bad)
in
fld
sub
add
sbb
js
retf
ficom
dec
out
ret
sbb
mov
arpl
xor
repz
pop
push
stos
lea
xchg
xor
mov
mov
jae
lock
cmp
dec
in
jae
xor
xor
or
push
pop
and
cli
jo
aas
mov
dec
and
(bad)
call
dec
into
repnz
sub
outs
aad
sub
xchg
or
sub
fisub
xchg
pop
int
inc
mov
stos
test
or
add
inc
push
xor
jle
cmp
jl
dec
retf
fsub
dec
mov
cmp
push
ins
icebp
clc
dec
add
adc
pop
(bad)
xor
les
jl
adc
ror
and
mov
push
dec
cli
mov
sar
sti
mov
arpl
daa
in
pop
retf
push
mov
bound
push
mov
iret
movs
call
hlt
shl
cmp
ds
jno
sub
mov
(bad)
call
imul
push
xchg
xor
pushf
fldl2t
inc
hlt
jae
push
(bad)
cdq
ficom
sbb
imul
and
test
fimul
pop
sahf
lahf
mov
(bad)
fcom
aad
sub
cld
xchg
sub
xchg
and
test
fs
loopne
push
and
and
push
sbb
bound
xchg
pop
movs
(bad)
daa
mov
aam
repnz
push
push
aas
xor
lea
xchg
and
add
adc
rcr
cmp
mov
cmp
push
xor
cwde
lea
push
sub
jmp
mov
call
(bad)
sti
mov
(bad)
xor
into
pop
dec
mov
aam
mov
xor
push
aad
aas
ficomp
pop
xchg
scas
dec
sbb
push
lea
enter
xchg
out
push
cld
fcomip
mov
dec
popf
pop
fisub
int
gs
sbb
mov
xchg
xchg
lock
pop
stc
mov
popa
iret
rcr
sbb
and
lock
icebp
into
pop
bound
sti
or
fsub
cmps
jle
outs
mov
sqrtps
xchg
jmp
stos
xchg
jo
sub
arpl
into
nop
out
(bad)
das
sub
mov
rol
cmp
and
into
xchg
sub
push
or
aaa
div
mov
imul
into
(bad)
gs
(bad)
jne
jne
(bad)
mov
outs
icebp
test
mov
addr16
jns
ret
add
stos
clc
pop
(bad)
outs
jmp
jle
xor
retf
lahf
(bad)
addr16
mov
leave
ds
fwait
or
std
jle
fdivr
sbb
push
aam
dec
pop
jne
cmps
inc
sbb
test
jmp
jns
sbb
cmp
mov
mov
or
sub
cwde
pop
icebp
loopne
hlt
push
leave
repz
cwde
xchg
movs
add
int3
pop
scas
pop
in
inc
xor
fwait
jmp
call
rcr
call
mov
pmullw
(bad)
mov
dec
lahf
and
into
jmp
adc
leave
ror
jae
stos
jno
jmp
loopne
mov
push
hlt
mov
iret
push
xchg
jle
jne
shl
pop
mov
leave
out
into
adc
mov
jnp
pop
add
mov
dec
mov
int
dec
inc
rcr
outs
gs
sub
inc
jp
xchg
or
iret
in
out
std
jg
jae
add
pop
aad
and
inc
mov
dec
out
mov
addr16
jmp
mov
add
pop
mov
int3
dec
and
or
test
data16
dec
inc
(bad)
rcr
pop
xchg
rol
fld
out
test
jg
xor
stos
inc
and
stos
mov
gs
test
or
js
das
or
rep
push
lods
or
adc
add
addr16
sbb
out
out
jno
into
outs
stos
and
fwait
ds
push
(bad)
sbb
loop
test
dec
arpl
(bad)
jnp
dec
scas
cdq
pop
jbe
sbb
add
mov
stos
out
or
inc
cmp
sub
cmp
and
adc
xchg
stc
xor
inc
(bad)
loope
jp
jmp
push
mov
jecxz
pushf
aam
aam
adc
jecxz
sbb
dec
shl
outs
mov
xchg
xchg
cmps
repnz
es
outs
mov
mov
into
shl
pop
pop
jle
out
out
jecxz
pop
test
cmp
push
mov
adc
cs
mov
aas
mov
aas
push
ins
pop
jne
movs
fisub
test
sbb
pushf
into
popf
mov
not
xchg
dec
out
cmps
dec
inc
movs
pushf
scas
cmp
pushf
cmps
xlat
cmps
push
adc
add
mov
repz
inc
(bad)
lds
out
xchg
lods
aad
sub
xchg
push
push
mov
or
xchg
jnp
and
jg
and
xchg
shl
sahf
clc
cmp
jl
es
mov
fwait
cmp
cmp
int
and
pop
jo
inc
hlt
mov
inc
movs
in
cs
inc
sub
push
or
sub
iret
jb
sbb
stc
sti
(bad)
dec
(bad)
out
cmp
cmp
adc
pusha
je
fisubr
psubsw
mov
push
inc
or
dec
sbb
cmps
pop
jge
add
(bad)
rol
sub
call
push
add
das
nop
mov
add
cdq
enter
mov
lds
in
lods
sub
cmp
retf
nop
xlat
pop
push
outs
sbb
sti
ins
jp
pop
mov
inc
test
lods
fwait
pop
and
fmul
imul
jmp
or
outs
mov
push
lock
clc
push
add
and
out
or
pop
sub
cmp
retf
popf
push
add
sahf
sub
clc
aad
loope
ss
cmps
xchg
or
jp
xchg
push
addr16
loope
mov
xchg
add
inc
mov
repnz
out
les
test
sbb
adc
push
popa
int3
and
movs
xor
pop
xchg
shl
fist
xchg
pop
popa
xchg
mov
test
outs
cmp
ret
aad
ret
mov
aam
cs
dec
(bad)
mov
push
adc
(bad)
dec
jns
test
xchg
addr16
mov
out
sbb
mov
sub
mov
scas
adc
mov
jb
mov
sub
aas
jb
outs
xchg
jecxz
dec
mov
cmps
repz
cwde
mov
mov
mov
call
push
cdq
cwde
and
sti
neg
xor
and
dec
sub
leave
cmp
mov
cmp
sbb
repnz
shl
pop
inc
fidivr
mov
stos
xchg
mov
ret
cmp
das
mov
sbb
shr
or
icebp
(bad)
stc
lods
xor
int
in
pop
fild
xchg
or
jmp
test
rol
ins
jnp
stos
jae
stos
ds
mov
(bad)
int
inc
cld
lods
ja
add
fadd
test
jns
imul
push
lods
pushf
pop
xlat
stos
adc
ds
je
adc
pushf
adc
jo
pop
out
in
cmp
imul
mov
jle
jmp
cmc
fst
call
push
or
in
push
jp
inc
in
inc
movs
(bad)
sbb
jecxz
dec
sbb
mov
mov
arpl
cld
lods
mov
mov
shl
and
cmp
push
xor
xchg
dec
stos
sbb
and
idiv
mov
div
hlt
dec
xlat
lods
jmp
pop
lock
dec
adc
sar
xor
sbb
adc
dec
fcomp
xor
pop
enter
xor
int3
add
ss
loopne
das
imul
push
stos
xchg
jns
xor
add
jnp
or
lock
fucomp
mov
mov
sar
outs
or
outs
mov
(bad)
js
sbb
cmp
xchg
mov
xchg
loop
mov
ds
xchg
lds
mov
(bad)
mov
das
aam
rol
fidivr
daa
inc
out
test
cmp
stos
and
inc
push
inc
mov
adc
inc
jp
fdivp
add
cdq
enter
cmp
dec
test
xchg
xchg
fadd
cmps
push
jae
sub
jns
nop
shl
sub
ret
jmp
xchg
adc
gs
rol
add
mov
shr
add
in
xchg
into
ffreep
push
xor
rol
xlat
das
and
mov
sahf
(bad)
adc
cdq
ja
mov
(bad)
mov
cmp
sub
or
mov
xor
jne
in
lds
inc
and
(bad)
mov
inc
loop
pop
repnz
inc
xor
inc
fs
mov
inc
mov
dec
dec
xor
scas
(bad)
pop
pop
popa
int3
outs
pop
popf
fcmove
jne
pop
mov
dec
xlat
movs
cmc
fisttp
cmps
mov
cmc
pop
mov
mul
mov
in
les
mov
adc
stc
pop
bound
je
gs
push
daa
xor
push
aas
sub
mov
pop
cld
pop
or
outs
shr
or
das
mov
inc
enter
stc
xchg
outs
add
test
ret
jge
lods
cli
rep
push
pop
xchg
loop
adc
cmp
push
cmp
bound
ins
sbb
in
fs
jno
mov
adc
sub
sub
dec
push
pop
mov
lock
add
pop
mul
sbb
or
jmp
in
pop
out
adc
dec
cli
adc
(bad)
sbb
or
sub
pop
inc
adc
pop
add
xlat
sbb
frstor
inc
dec
inc
stos
inc
dec
push
fld1
sub
lahf
jle
sbb
jge
loopne
sub
mov
xchg
lods
and
pop
jmp
push
ss
sub
out
out
(bad)
icebp
repz
(bad)
xchg
jno
jecxz
or
(bad)
sub
arpl
mov
out
not
out
scas
xor
dec
inc
sbb
les
inc
mov
(bad)
scas
sbb
loope
pop
dec
mov
cwde
and
or
sub
xchg
xchg
jl
inc
pop
jl
jo
fmul
arpl
(bad)
retf
xor
(bad)
lods
cmps
push
inc
and
sub
out
sbb
(bad)
into
adc
or
into
les
(bad)
pop
or
xchg
pop
sbb
mov
push
sbb
(bad)
add
jbe
xchg
sub
fild
xlat
test
mov
adc
xchg
add
movs
cld
imul
cmp
aas
jg
pop
(bad)
sbb
js
test
mov
sub
mov
test
pop
xchg
mov
rol
cmp
int
inc
dec
inc
add
into
or
fisub
adc
sbb
pop
inc
push
movs
fwait
sub
ret
inc
add
outs
pop
mov
mov
rcl
ins
in
outs
push
pop
js
sub
push
sbb
push
cmp
dec
xchg
add
or
dec
adc
xor
xchg
je
mov
xlat
ins
aam
sbb
mov
push
sbb
jo
addr16
sbb
adc
xor
and
push
sbb
push
mov
cmp
inc
imul
mov
sbb
in
fild
mov
xchg
pusha
je
call
push
fcmovnu
fst
neg
out
mov
xchg
ret
fisubr
fwait
lahf
ss
and
hlt
adc
jmp
or
xchg
adc
stos
push
in
jp
mov
fidivr
fldenv
cld
dec
int3
shr
les
mul
aaa
mov
in
lea
jno
iret
sub
jle
and
jg
shr
cmp
das
push
loope
pop
jbe
icebp
fwait
mov
jno
retf
or
out
mov
mov
scas
imul
fidiv
rcl
je
shr
bound
fdiv
fiadd
add
call
js
sar
push
int3
fbstp
cmps
mov
loope
and
add
hlt
repnz
mov
cld
sti
ins
mov
fnstsw
sar
or
pusha
add
xor
mov
dec
mov
sub
iret
pop
mov
add
test
push
xlat
jp
dec
imul
leave
mov
in
fucomp
sub
jmp
or
test
sar
cmp
scas
(bad)
in
jnp
xor
retf
sahf
mov
xchg
fs
pop
jo
mov
mov
ret
in
or
xchg
xchg
jne
jno
fistp
icebp
pop
dec
jg
movd
cmp
or
xchg
idiv
cmp
inc
or
clc
sbb
and
sbb
jno
mov
hlt
cmc
jbe
out
inc
repnz
lods
repz
mov
rcr
(bad)
fwait
loope
aas
xchg
in
push
ret
xchg
les
cmps
mov
jae
inc
jg
shl
cmc
aaa
out
popf
loop
jecxz
xor
pushf
or
and
lea
or
nop
adc
fistp
push
(bad)
cmp
pop
es
jle
je
data16
sbb
adc
adc
or
sti
ret
pusha
cld
xchg
aam
test
nop
jb
cmc
repz
ds
scas
cmp
push
add
jo
outs
xchg
pop
out
or
in
test
xchg
ss
repnz
add
out
sub
stos
lea
sahf
in
inc
aas
das
ret
loop
mov
and
fwait
fwait
jns
loope
cmp
das
xchg
scas
and
push
xchg
popa
sub
aaa
dec
and
sbb
loope
test
daa
xchg
push
imul
push
fbld
sbb
push
fld
pushf
rol
loop
cmp
popa
ficom
sub
bound
sbb
mov
sub
jl
xor
sub
xchg
jg
ss
mov
dec
jle
icebp
icebp
mov
sti
clc
fs
sub
loopne
xor
(bad)
or
je
lds
xchg
lods
or
std
aas
mov
loope
out
shl
test
call
ins
push
aaa
div
or
nop
pop
(bad)
out
and
lock
je
dec
arpl
lds
or
cmp
mov
scas
outs
mov
(bad)
cmp
test
lds
cmp
sub
add
xor
push
mov
sahf
mov
adc
inc
mul
xor
neg
dec
out
or
inc
in
cld
cmp
ins
push
js
or
sub
and
mov
(bad)
call
push
mov
sbb
xchg
cmc
mov
pop
jbe
mov
xchg
mov
push
xchg
dec
jle
mov
leave
mov
aam
mov
or
rcr
mov
sar
mov
movups
call
xchg
and
mov
stc
div
hlt
icebp
lods
push
cld
adc
add
sbb
pop
int3
movs
fcompp
stos
stos
data16
in
popa
or
test
sub
test
xor
dec
xor
sbb
jb
imul
ret
out
mov
sub
jne
aam
ja
mov
cld
jnp
jb
fcomp
or
lods
(bad)
(bad)
int
stc
test
sbb
out
fstp
cmps
sub
pop
jmp
scas
adc
xor
cmp
pop
in
jmp
xchg
aad
out
test
inc
xchg
int3
(bad)
jecxz
jmp
mov
and
dec
or
ds
popa
in
xchg
popa
rcr
fimul
mov
xchg
push
mov
xchg
dec
sub
adc
sub
push
sbb
mov
lods
xchg
ins
xlat
pop
mov
cmp
(bad)
data16
fdivr
idiv
pusha
sub
movs
loopne
mov
cwde
and
mov
mov
pop
stos
adc
adc
or
pop
call
sub
enter
ret
jbe
popf
ror
movs
xchg
sbb
adc
dec
ins
mov
jb
lahf
cmp
and
test
clc
sahf
sbb
xchg
fst
push
data16
jmp
mov
repz
in
push
push
outs
push
es
call
jno
or
jo
repnz
jae
and
inc
fadd
dec
nop
inc
imul
push
push
test
sub
sbb
sbb
xchg
retf
and
out
rcr
popa
mov
xchg
mov
cmp
lods
or
adc
adc
mov
call
out
mov
mov
mov
fwait
push
xlat
(bad)
and
pop
or
shl
jae
dec
cmp
(bad)
loop
push
sbb
mov
xchg
mov
fwait
xchg
adc
jmp
cmps
inc
push
xchg
enter
sbb
stc
mov
sub
and
stos
fcmovnbe
or
rcr
sub
pop
sub
daa
adc
enter
mov
popf
fidiv
cmp
iret
sbb
inc
es
lea
mov
imul
lods
ja
cmp
push
adc
pop
stos
aad
pop
jmp
jp
push
push
push
adc
pop
inc
nop
pop
movs
aas
cmp
pop
hlt
jmp
and
cs
or
test
loopne
add
imul
repz
int
sti
mov
sbb
adc
movs
mov
and
scas
outs
push
ins
sub
test
pop
sti
add
cs
mov
ins
pop
cmps
aad
inc
cmps
sub
mov
jnp
and
mov
sub
(bad)
out
sbb
or
cmps
ret
in
nop
mov
jne
scas
aad
xchg
mov
sub
(bad)
push
jmp
dec
ret
in
push
add
test
mov
test
loope
sbb
(bad)
mov
fist
jnp
pusha
cwde
push
daa
neg
sbb
inc
inc
xor
imul
inc
mov
shl
and
push
sbb
out
loopne
inc
fwait
xchg
jg
jl
push
push
lea
mov
push
adc
pop
loop
(bad)
bswap
dec
(bad)
test
(bad)
out
and
jecxz
inc
pop
xor
(bad)
stos
js
xor
push
adc
mov
mov
in
xor
leave
nop
dec
repnz
dec
pop
mov
pushf
inc
pushf
stc
push
xor
add
xchg
mov
cmp
add
and
sbb
out
cmpxchg
hlt
std
mov
jg
xchg
mov
fild
adc
retf
shl
and
xor
add
out
adc
lea
stc
(bad)
adc
daa
das
push
pop
and
scas
cmps
pop
fimul
push
adc
mov
sbb
scas
cmp
lods
pop
mov
aaa
dec
mov
rcl
loope
add
mov
sub
xor
xor
pop
dec
mov
mov
cs
test
int
xor
or
(bad)
sti
je
inc
ss
inc
cmps
aad
clc
js
sub
and
mov
fwait
jbe
xchg
sbb
xchg
cli
lea
or
inc
inc
xchg
mov
test
ds
add
mov
jno
push
aas
(bad)
into
push
jns
icebp
adc
xor
mov
outs
retf
sbb
aas
mov
inc
dec
js
lods
ja
pop
rcl
or
push
adc
jae
inc
xchg
add
sub
adc
sub
pushf
and
fistp
in
push
pop
pop
dec
sbb
jle
xchg
lods
push
jp
imul
shl
rcr
std
ins
lea
sbb
inc
(bad)
mov
xchg
nop
sahf
popa
repnz
les
pop
push
pop
inc
mov
mov
add
cld
sahf
mov
dec
push
xchg
ret
(bad)
call
pop
add
inc
das
fisttp
add
mov
std
add
sub
pop
fwait
or
xor
cmc
and
mov
sti
mov
and
mov
retf
xchg
scas
mov
cmp
pushf
pushf
sub
cmp
fld
js
mov
cdq
das
int3
and
cmp
fdiv
add
jns
mov
jb
mov
sti
xor
mov
mul
push
cmps
rcl
push
pusha
push
adc
retf
cmp
enter
mov
or
and
mov
(bad)
cmp
out
gs
out
mov
push
mov
shl
outs
cmovno
test
cmps
push
jecxz
sub
and
pop
or
(bad)
frstor
(bad)
pop
call
data16
inc
dec
sub
fidiv
icebp
inc
push
dec
(bad)
xchg
xchg
sub
dec
xchg
sub
enter
xor
fsubr
pop
out
mov
test
fnstenv
lea
xor
mov
in
test
in
ins
retf
sub
mov
test
mov
(bad)
loop
int3
push
out
aaa
sar
mov
lods
(bad)
in
and
jle
ficom
or
pop
(bad)
fneni(8087
push
cmp
cmp
and
pop
cmps
(bad)
repnz
sub
icebp
pushf
nop
mov
aam
mov
mov
inc
mov
or
xor
mov
xchg
and
int
pushf
fcomp
add
cmp
inc
pop
cmp
add
retf
mov
push
je
int
sbb
call
in
jecxz
leave
jl
popf
mov
js
dec
sub
or
jno
mov
cmp
xor
cmps
push
jg
xchg
mov
fimul
das
jp
push
push
shl
stc
call
sahf
call
nop
scas
fld
lock
jns
xchg
sbb
jbe
push
and
cmps
fiadd
push
mov
xchg
(bad)
movs
cmp
sub
sub
stc
push
mov
xchg
in
xlat
aas
loope
push
sub
inc
inc
sti
mov
or
sar
add
pop
mov
fimul
test
xor
call
fidivr
shl
ss
cwde
jae
in
xchg
mov
adc
push
je
jg
loope
loopne
fcmove
xchg
stc
sti
imul
or
test
dec
mov
stc
fadd
mov
jge
adc
sub
pop
push
add
inc
in
inc
pushf
outs
outs
dec
push
mov
in
xlat
mov
pop
ror
dec
dec
stos
cmps
xor
sbb
jmp
mov
jne
out
mov
(bad)
pop
push
call
mov
nop
sub
mov
lds
dec
fs
les
clc
cmp
sbb
je
and
xchg
or
imul
loope
sub
xchg
pop
arpl
adc
sub
int3
push
test
xor
mov
cmp
inc
xchg
inc
xchg
jb
push
pop
shld
cmp
cmp
push
repnz
enter
iret
inc
sbb
stc
fucomp
jo
test
arpl
push
ss
cmp
jne
data16
pop
pop
les
lock
push
shr
(bad)
fldenv
mov
mov
xor
out
mov
test
js
cmp
cmps
push
sub
adc
or
add
jge
jnp
fidiv
inc
clc
pop
daa
adc
jne
arpl
fucomip
and
sub
shl
int
lods
dec
das
jbe
test
mov
push
(bad)
retf
push
mov
lods
pop
xchg
jne
les
fistp
stos
ja
clc
and
add
fwait
push
sub
push
jns
jmp
mov
mov
loope
out
xchg
sbb
call
iret
imul
ds
out
test
inc
xor
call
xor
shl
cmp
dec
jecxz
adc
stos
pop
sar
fisub
cmp
loop
mov
cmc
mov
push
xchg
inc
sbb
pop
icebp
sahf
cwde
test
jge
add
stos
ins
sub
hlt
(bad)
les
call
jmp
jmp
je
dec
out
icebp
jmp
cmc
ds
daa
mov
cmp
shl
sbb
into
mov
inc
imul
jp
dec
or
test
mov
inc
std
fcomi
push
mov
dec
into
sub
(bad)
mov
lock
icebp
pop
test
ss
push
aad
xor
jns
sbb
push
iret
sbb
loope
jbe
mov
mov
push
xor
jno
scas
cmp
and
mov
cwde
push
sti
les
adc
jle
int
xchg
data16
xor
sti
clc
jmp
hlt
mov
xchg
cmp
out
mov
pinsrw
push
pop
int
pop
popa
inc
nop
pusha
(bad)
push
hlt
inc
jecxz
jae
lahf
scas
std
fs
in
cmp
cwde
cmps
mov
pop
inc
add
fs
clc
out
cwde
mov
push
pushf
ror
push
add
dec
icebp
dec
lea
outs
pop
jbe
cmps
and
test
and
cmp
jnp
(bad)
mov
xor
dec
daa
push
xchg
jmp
mov
loop
into
or
sar
sbb
mov
pushf
xchg
mov
xchg
sbb
popa
in
xor
cld
cmp
ds
add
push
jnp
and
mov
push
cmp
or
lods
movs
dec
xchg
dec
or
call
pop
sbb
jg
xor
fistp
call
mov
xor
fistp
fcmove
retf
xor
call
loop
sti
(bad)
pop
mov
loop
(bad)
call
fcomp
add
pop
and
shl
or
add
xchg
mov
and
or
daa
scas
in
(bad)
sbb
pusha
mov
xchg
lock
sbb
mov
clc
test
(bad)
inc
mov
into
and
cmp
cmps
jo
jns
pop
fs
test
out
mov
mov
xchg
nop
add
jno
fs
aam
push
pop
inc
dec
test
arpl
jo
fcmovnb
mov
xlat
repz
pop
int3
mov
adc
out
dec
push
and
dec
push
clc
rol
pop
mov
add
call
stc
fist
xchg
rol
inc
xor
retf
push
das
movlps
push
and
or
add
sub
mov
in
xchg
mov
scas
or
call
sub
loop
dec
mov
and
test
mov
icebp
in
sbb
mov
fistp
mov
mov
jnp
imul
mov
sar
pop
loopne
push
push
fwait
and
lahf
push
call
mov
lahf
aam
and
push
dec
sbb
popf
add
js
mov
jae
push
mov
jl
add
add
mov
imul
not
jmp
pop
cdq
mov
xchg
sbb
outs
xchg
xchg
ret
add
gs
pop
sub
aad
mov
in
lahf
(bad)
mov
add
lds
fstp
pop
loope
mov
mov
dec
sub
push
test
pusha
imul
cmp
mov
retf
jg
lods
inc
xor
ss
in
pop
mov
mov
lods
je
xchg
loopne
(bad)
push
les
mov
repz
es
mov
mov
inc
(bad)
fistp
popa
sbb
outs
push
sahf
pusha
push
inc
int3
je
pushf
push
jo
(bad)
and
retf
pop
push
and
adc
mov
dec
cmps
das
mov
xor
sbb
xchg
push
loop
jmp
pop
ds
jmp
jg
fidiv
mov
xchg
scas
pop
out
test
adc
out
mov
mul
stos
inc
xor
push
dec
push
inc
inc
or
leave
mov
out
dec
cmp
pop
ds
mov
pop
cmp
push
fimul
push
jg
xor
fisub
(bad)
aas
rcl
fsub
int
inc
push
jmp
pusha
and
or
or
cld
test
popf
push
das
nop
fcmove
pop
dec
pop
pop
pop
push
sub
push
push
xchg
dec
fistp
sbb
mov
jbe
cmp
and
mov
mov
nop
int
daa
xor
or
inc
or
inc
jns
and
mov
imul
push
retf
cwde
in
repnz
and
mov
mov
mov
or
stos
mov
hlt
add
adc
adc
or
or
stc
(bad)
mov
pop
in
xor
mov
pop
pop
dec
test
test
xor
retf
push
cmp
bound
sbb
cmp
push
std
sbb
pop
cmp
nop
inc
in
(bad)
fdivr
inc
jae
cli
xor
mov
mov
push
jo
pminsw
aas
mov
(bad)
stos
mov
imul
jecxz
or
dec
arpl
imul
lds
jb
jmp
and
sbb
xor
add
inc
push
or
adc
mov
sub
stc
inc
push
(bad)
mov
xor
jg
jns
retf
mov
mov
and
(bad)
movs
xor
cmc
fwait
or
sbb
push
imul
add
sahf
adc
call
mov
cli
les
mov
leave
pop
mov
lds
outs
sbb
int3
add
shl
mov
(bad)
out
jle
sub
inc
or
test
sub
mov
enter
jnp
clc
adc
and
call
popa
loope
jo
int3
rcl
jg
(bad)
adc
mov
aaa
mov
movs
pushf
scas
stc
outs
test
adc
popf
xchg
idiv
sti
out
aas
inc
cmp
inc
in
mov
mov
test
add
cmps
in
push
inc
mov
xchg
sbb
mov
lods
leave
and
xor
mov
cmp
clc
and
dec
shl
xchg
adc
das
sbb
icebp
inc
inc
cmp
outs
adc
mov
stos
out
in
xchg
sub
out
xor
dec
dec
movs
sbb
add
adc
mov
cld
mov
pop
bound
les
rcr
(bad)
test
or
mov
out
mov
and
sbb
stos
leave
sbb
add
call
cmp
movs
popa
(bad)
fld
xor
pop
imul
push
sub
xchg
jmp
cmp
xor
adc
mov
push
jns
ja
cld
mov
fs
mov
movs
xlat
sahf
inc
mov
cmc
sbb
ins
adc
mov
(bad)
pop
ja
xor
pop
fldenv
aaa
lea
mov
mov
push
adc
test
dec
movs
mov
call
mov
push
in
push
dec
retf
icebp
adc
in
cmp
push
pop
mov
push
lds
cmps
adc
push
out
loope
repz
jno
ds
out
mov
xchg
xor
xor
sbb
outs
or
push
adc
inc
dec
adc
adc
cmp
add
sub
lods
dec
sahf
sar
sub
dec
adc
cmc
cmp
mov
mov
or
cmps
(bad)
or
jp
(bad)
sahf
cmc
outs
dec
into
jnp
inc
in
add
cmp
scas
aam
repz
jnp
dec
cli
fidivr
pop
js
fcmovne
inc
push
nop
cdq
mov
rol
loope
mov
push
and
add
sbb
cmp
fwait
and
sbb
aas
mov
(bad)
cmps
adc
push
mov
pop
data16
jb
cmc
xchg
push
test
idiv
push
or
rep
and
call
mov
imul
mov
idiv
loope
pop
rcl
mov
shr
adc
push
mov
fistp
mov
sbb
in
jbe
(bad)
mov
pop
les
js
in
xchg
fs
pop
cmp
dec
test
(bad)
jns
jne
inc
lods
or
xchg
adc
mov
popa
jmp
cmc
inc
pop
cdq
push
jbe
dec
sbb
cwde
push
xor
mov
ret
push
jnp
pop
inc
fcomp
ja
iret
out
shl
mov
and
sti
shr
push
jae
mov
inc
inc
ret
sbb
stos
cld
adc
xchg
aam
enter
and
xchg
add
enter
sbb
sbb
cli
jmp
push
lods
mov
cmp
call
jbe
mov
addr16
icebp
lea
cmp
addr16
adc
cmp
cmp
xor
mov
xchg
sbb
xor
imul
ss
pop
cmp
mov
inc
push
mov
shl
loopne
xor
call
das
cli
inc
sub
sbb
es
shr
xchg
loopne
xor
(bad)
sbb
adc
(bad)
sbb
ror
add
inc
(bad)
push
addr16
lods
pop
jecxz
and
push
fmul
retf
push
sbb
pop
mov
sbb
loop
inc
out
cmp
pop
push
jae
mul
in
lods
jecxz
loope
retf
in
je
mov
sub
in
sahf
int3
aad
and
push
out
add
lds
jl
(bad)
test
adc
aam
push
pop
sbb
dec
pop
stc
cmp
jns
xor
adc
pop
xchg
and
adc
cs
outs
aam
and
pop
sbb
adc
std
xchg
and
sub
push
js
sub
or
pop
pop
sub
mov
xchg
pop
fnstenv
(bad)
aaa
jle
arpl
mov
or
lods
inc
les
cli
push
fld
enter
retf
cmp
ins
test
dec
cmc
pop
jmp
xchg
loopne
jae
fdiv
cmp
push
mov
xor
ror
xor
inc
scas
ss
(bad)
ja
out
xchg
(bad)
mov
out
dec
or
test
adc
aas
xchg
xor
retf
xor
aaa
test
mov
int
dec
cmp
mov
in
rcl
pop
movs
in
and
sar
xlat
xchg
jae
repnz
popf
scas
repz
or
or
movs
sbb
mov
pop
sub
mul
mov
es
push
sub
mov
jg
inc
mov
push
stc
dec
push
push
mov
(bad)
popa
ja
aam
fidivr
ja
cmp
cmps
sub
dec
push
push
pop
bound
dec
jg
sub
xchg
sahf
std
cwde
inc
inc
sbb
mov
push
scas
aam
xlat
or
dec
pop
mov
pop
xchg
jns
dec
call
loop
xor
sub
mov
inc
push
cmc
sub
add
inc
or
sbb
data16
mov
cmps
adc
daa
jae
dec
lds
add
add
in
mov
xchg
enter
sub
(bad)
xchg
loop
aas
loope
xor
inc
jecxz
jg
sbb
jge
fistp
cmp
pop
leave
add
mov
cmp
push
xchg
inc
push
(bad)
clc
xchg
imul
xchg
mov
mov
popa
test
sbb
and
iret
retf
mov
test
xor
in
sbb
dec
ds
cmc
dec
(bad)
push
and
cld
sub
adc
clc
pop
fs
out
inc
cmp
test
ret
ins
mov
js
std
adc
push
leave
xchg
push
lahf
pop
clc
sub
pop
loopne
leave
mov
mov
adc
pop
and
xchg
scas
pop
pop
into
in
xchg
add
sbb
xor
cmp
ror
and
imul
call
aam
inc
in
adc
ins
test
mov
adc
mov
arpl
out
push
mov
or
add
adc
lods
push
jl
std
xchg
pop
mov
dec
neg
sub
dec
ins
mul
pop
pop
sahf
call
dec
jmp
mov
rol
data16
push
loop
jno
mov
and
inc
xchg
fst
(bad)
icebp
fs
dec
push
xchg
(bad)
daa
push
jle
mov
xchg
sub
sti
inc
adc
ins
mov
mov
add
and
and
adc
aam
mov
shr
std
mov
mov
mov
mov
or
push
rcr
enter
add
pushf
out
sub
fwait
jnp
jl
mov
adc
sub
or
mov
cmp
mov
pop
inc
call
fs
dec
repz
iret
dec
pop
jns
mov
icebp
fst
fs
and
out
ret
xchg
jo
xor
in
aas
or
loopne
cdq
sti
ret
push
mov
jp
inc
sub
lahf
mov
dec
adc
push
aas
and
in
mov
mov
jnp
and
hlt
or
outs
cli
outs
pop
and
scas
cmp
or
pop
pushf
xchg
pop
in
mov
(bad)
enter
mov
das
jno
imul
scas
cwde
pop
aaa
inc
pop
xor
mov
(bad)
out
imul
add
and
mov
sub
xor
pop
test
inc
mov
sbb
jp
pop
and
xchg
cmps
pop
lock
in
add
pop
inc
add
into
add
lods
aas
mov
cmc
nop
xchg
xchg
inc
ror
mov
rol
xchg
mov
adc
aad
lods
fs
push
(bad)
and
jne
or
inc
inc
xlat
cmp
pusha
and
pop
vunpckhps
imul
stc
adc
mov
cmp
pushf
adc
cdq
push
xlat
jecxz
(bad)
arpl
inc
mov
xchg
lahf
shl
adc
xchg
scas
out
mov
adc
int
hlt
mov
pop
arpl
adc
pushf
(bad)
daa
(bad)
add
mov
cmp
cs
mov
sub
int3
jbe
fist
and
in
ins
sbb
movs
clc
sbb
cmp
stc
push
dec
cwde
dec
sub
pop
jae
neg
shr
jg
(bad)
pop
jl
cmp
mov
ret
xor
mov
pop
and
fst
int
adc
xchg
push
pop
adc
lods
ds
ins
jmp
ja
lahf
push
cmp
pop
jmp
xchg
leave
jne
mov
add
lods
push
and
lods
test
xlat
adc
call
popf
outs
xor
inc
sbb
sbb
dec
sub
cmp
add
out
aaa
jb
pop
cmp
ds
sub
xchg
daa
pusha
psllq
addr16
add
pop
outs
push
inc
pop
les
paddw
cmp
rol
pop
jmp
mov
adc
mov
pop
mov
mov
sbb
sar
pop
cmps
adc
xchg
(bad)
bsr
das
loopne
bound
or
cmp
inc
data16
je
enter
out
or
repnz
rcr
inc
push
or
cmp
and
jo
fstp
mov
enter
add
jmp
das
mov
dec
jmp
mov
(bad)
shl
push
push
xchg
push
mov
je
es
icebp
mov
pop
xchg
adc
mov
jno
push
add
cmp
dec
inc
cmp
push
aam
mov
xchg
bound
ror
inc
stc
je
stc
xchg
xchg
popa
mov
cmp
jne
sub
sub
add
dec
fs
mov
fnstsw
adc
mov
pop
rcr
dec
sti
fs
or
sti
icebp
test
aam
jbe
add
jne
aad
int3
ret
retf
add
cwde
aad
adc
iret
sub
je
aas
mov
dec
inc
mov
or
push
int
call
jb
lahf
inc
push
out
cwde
mov
ja
jge
les
frstor
lahf
inc
mov
mov
mov
adc
sbb
jb
pop
fnstenv
sub
xchg
ret
call
jmp
inc
cmps
pushf
jne
sub
xchg
cmps
fcomp
mov
pop
cdq
fsub
iret
mov
setae
aam
jno
or
pop
inc
je
movs
or
arpl
arpl
out
fcmovnb
mov
sti
mov
aaa
mov
inc
pop
pusha
or
(bad)
clc
clc
sbb
les
loopne
dec
xor
push
in
mov
push
mov
sub
jb
adc
push
push
ins
mov
les
jno
and
movs
push
mov
dec
jne
cmps
frstor
add
(bad)
sti
and
jmp
sub
loopne
fwait
jne
pusha
sbb
in
adc
loop
adc
jmp
sbb
adc
mov
mov
lea
sar
jmp
jmp
xchg
(bad)
ficomp
push
sbb
push
mov
call
cld
mov
jmp
cmp
and
test
xchg
imul
mov
clc
jbe
das
fwait
and
jg
leave
jo
clc
dec
(bad)
mov
mov
jno
(bad)
es
es
mov
pop
mov
inc
pushf
loope
push
fwait
loopne
dec
sub
jns
jb
test
hlt
(bad)
mov
call
inc
inc
jnp
and
pushf
pop
jle
cmp
test
cmp
fdivr
rcl
jl
cmp
or
xor
sub
sub
sar
inc
inc
and
das
lock
xor
cmp
jp
inc
push
sti
jae
push
pop
mov
scas
or
push
push
cwde
mov
ret
cmp
dec
cmp
mov
cmps
or
sbb
adc
scas
mov
sub
popf
fst
retf
rol
scas
push
mov
adc
mov
xchg
pop
jb
mov
jb
fcmovnbe
inc
ja
(bad)
movs
sbb
jno
popa
push
add
ins
repz
cmp
sbb
popf
jo
rcr
in
icebp
aam
xchg
imul
jmp
ins
out
mov
adc
mov
cmp
cld
daa
and
and
xchg
icebp
inc
leave
xor
imul
test
mov
fldl2t
cld
(bad)
mov
xchg
jmp
or
jle
cmc
mov
dec
lods
pop
mov
xor
loopne
cmps
(bad)
cmp
push
or
push
loop
mov
and
and
daa
out
inc
test
push
dec
popa
sub
sbb
sub
ret
xchg
lods
dec
adc
inc
sub
pop
clc
scas
stos
sahf
jge
cdq
loope
ss
mov
jns
je
aaa
and
adc
push
mov
fnsave
pop
pop
aam
mov
jnp
inc
dec
clc
js
mov
mov
jae
add
fsubr
stc
jmp
sti
repnz
fldcw
ins
int
repz
sar
out
dec
push
push
dec
xchg
sub
push
scas
aam
lock
jns
adc
es
mov
mov
or
xor
jmp
imul
mov
lea
enter
scas
xor
call
jmp
adc
sbb
movs
loope
xchg
outs
push
mov
inc
cdq
adc
psubq
xchg
sti
add
jle
movs
repz
mul
icebp
in
ja
dec
sub
lea
fimul
xchg
or
pop
outs
mov
xchg
dec
dec
or
dec
jne
jecxz
(bad)
js
push
(bad)
xlat
clc
add
adc
mov
pop
fistp
outs
and
pop
in
outs
loop
and
(bad)
stc
fsubr
dec
scas
fadd
sub
push
scas
push
sar
in
sbb
pop
pop
int3
sub
stos
jmp
mov
mov
pop
arpl
dec
push
test
fwait
xor
jle
bound
dec
inc
fst
movs
test
ret
cmps
retf
adc
sbb
scas
ss
daa
mov
mov
jmp
ins
xor
sahf
sub
out
pop
call
pop
out
lock
movs
ret
loop
mov
sub
cmp
and
fcomp
inc
push
bound
push
shr
aam
pop
fcomp
out
nop
sub
popf
xor
pop
mov
pop
das
push
mov
mov
lods
dec
push
ins
jb
sbb
mov
int3
neg
mov
adc
ror
pop
or
stc
ret
xchg
adc
push
add
inc
in
adc
int3
leave
mov
into
mov
cmp
add
movs
jne
mov
fcom
jmp
arpl
push
fadd
push
and
clc
jmp
xchg
and
adc
out
call
jbe
das
pop
mov
sbb
pop
xchg
and
stos
sub
test
movs
test
inc
sbb
ins
seta
xchg
and
stos
xor
aaa
sub
loope
dec
fcomp
mov
icebp
cs
lock
adc
adc
je
jmp
test
outs
(bad)
iret
mov
fmul
jns
gs
pushf
dec
shl
push
fldenv
pop
outs
and
sbb
pop
(bad)
test
(bad)
sub
jecxz
popa
loopne
pop
jmp
sti
or
jno
(bad)
or
lea
movs
(bad)
mov
adc
sub
push
int3
nop
ds
(bad)
lods
scas
popf
hlt
add
adc
xor
inc
mov
pop
jmp
lods
xchg
mov
adc
add
jecxz
aaa
fsub
mov
sbb
lea
call
pop
mov
imul
push
adc
retf
ins
aad
xchg
add
popa
mov
adc
dec
add
xchg
gs
push
xchg
sbb
adc
lahf
out
mov
mov
inc
out
jae
or
mul
add
dec
jl
cmps
gs
aas
and
into
jns
test
and
dec
xchg
push
ret
aam
jmp
pop
pop
add
cmp
adc
data16
stos
rol
sub
int3
mov
retf
js
js
xchg
adc
bnd
adc
cmp
push
cwde
int
in
xchg
push
lods
xor
jne
dec
xor
adc
std
adc
leave
sti
les
mov
jp
movs
pop
mov
pop
mov
aas
idiv
sub
dec
(bad)
xor
outs
cmps
and
pushf
pusha
jp
clc
jns
and
fld
lock
lea
pop
dec
add
inc
dec
scas
push
mov
fadd
test
adc
pop
je
fstp
fst
cwde
lahf
neg
imul
dec
rcl
call
adc
stos
push
and
imul
popa
add
or
scas
xor
add
ins
out
addr16
mov
mov
push
mov
adc
cwde
dec
pop
loopne
mov
add
data16
push
stos
shl
out
jmp
xor
and
sub
repz
pushw
test
sub
das
fstp
and
cmp
mov
pop
jno
loop
inc
fs
xchg
mov
mov
inc
sahf
cmps
dec
pop
mov
addr16
xor
jne
aas
stos
xchg
xchg
pop
ret
mov
xchg
cli
rol
cdq
(bad)
fcmovnb
das
pusha
jmp
outs
ss
cmp
and
jmp
imul
or
gs
fisub
mov
mov
(bad)
pop
push
test
mov
cld
(bad)
fsubr
dec
(bad)
sub
adc
mov
jns
mov
outs
pop
mov
mov
int3
mov
paddusb
dec
mov
pop
mov
cdq
enter
adc
pusha
add
je
popf
sbb
jecxz
stos
loope
adc
movs
push
inc
iret
or
dec
xchg
dec
push
add
dec
push
mov
mov
(bad)
cs
jle
adc
sbb
lock
leave
mov
jmp
xchg
lods
lods
in
leave
cmc
push
mov
xchg
inc
xchg
sub
pop
mov
ret
dec
pop
push
sbb
sub
push
aam
icebp
jmp
js
inc
push
xor
mov
movs
add
mov
icebp
jge
jmp
cdq
push
(bad)
xchg
adc
mov
lods
outs
test
ss
mov
ins
push
lds
sbb
jo
cmc
aad
push
ret
cmps
push
adc
imul
mov
pop
inc
out
ret
cld
jbe
mov
fimul
sbb
add
out
xor
mov
add
pop
mov
dec
fist
inc
lahf
arpl
pop
in
inc
and
das
add
jae
pusha
inc
pushf
ret
sbb
sub
jne
jg
lock
test
pop
jns
mov
test
test
jae
mov
xor
dec
push
or
xor
popf
rcr
jnp
mov
push
lahf
(bad)
add
push
sbb
test
jecxz
xchg
in
push
and
sbb
pop
push
inc
addr16
lods
mov
mov
sub
into
inc
fdivr
dec
sub
dec
ds
nop
dec
enter
cdq
fneni(8087
in
clc
push
cmc
outs
cmp
push
mov
out
jp
aam
jmp
sbb
shl
mov
cmp
xlat
test
aam
dec
sub
xchg
cmp
mov
pusha
repnz
test
shl
jbe
jo
adc
jae
cmp
pop
addr16
retf
adc
adc
jae
pop
(bad)
and
rol
dec
lea
imul
dec
imul
popa
add
add
imul
add
sub
adc
call
cmp
sub
stos
cli
test
cmp
push
or
int
ds
sbb
mov
mov
ja
fidiv
movs
mov
mov
ss
sbb
jnp
dec
out
jge
sub
iret
sar
lock
mov
push
inc
inc
call
mov
jge
shr
lods
(bad)
(bad)
movntq
out
xchg
js
mov
inc
es
iret
or
push
cmp
les
cwde
lds
sub
js
loope
popf
dec
dec
dec
adc
or
jle
jns
jmp
jg
jge
sub
adc
sub
(bad)
or
(bad)
rol
cmps
adc
jg
mov
cdq
enter
lahf
pop
inc
mov
stos
cwde
mov
je
xchg
xor
leave
xchg
add
test
adc
dec
ret
xor
dec
pop
add
add
push
push
in
cmps
in
and
sub
mov
cwde
push
cdq
push
lahf
xlat
pop
out
shl
push
vmwrite
fdiv
je
push
retf
dec
jmp
fld
jecxz
mov
jns
push
cmc
mov
and
mov
add
fidiv
retf
pop
test
xor
and
dec
push
and
pushf
adc
repnz
cmp
jg
lods
stos
retf
or
(bad)
mov
dec
xor
cmc
mov
adc
cld
sub
cmps
cmp
add
aad
inc
add
sbb
mov
mov
ret
ins
dec
ja
out
shl
and
xchg
cmc
sub
adc
or
cmps
(bad)
sub
loope
bound
pop
or
add
jmp
jbe
pop
xchg
das
dec
shl
test
mov
shr
std
ja
jge
push
xor
mov
lods
xchg
ins
int
dec
shl
xchg
pop
jno
pop
cmps
add
(bad)
mov
pop
sbb
call
inc
call
lds
and
inc
mov
sub
imul
in
pop
gs
xchg
or
inc
and
mov
cmps
aam
jo
(bad)
pop
mov
sar
cli
mov
dec
cmp
sbb
adc
std
mov
call
mov
enter
(bad)
arpl
shl
aas
faddp
mov
imul
fsub
aad
mov
scas
sbb
dec
retf
inc
scas
xchg
cli
lods
adc
mov
(bad)
imul
and
pusha
imul
xor
leave
enter
je
mov
sub
mov
scas
mov
je
add
cmps
or
hlt
(bad)
sbb
popf
mov
fcom
retf
data16
inc
out
ror
iret
xchg
mul
les
test
test
adc
aad
push
fcomip
sbb
sbb
call
mov
or
mov
popf
jmp
push
fistp
inc
loopne
popa
jmp
in
ins
sbb
push
mov
xchg
add
dec
add
push
xchg
(bad)
push
popf
inc
push
xchg
aam
sub
push
sub
and
xchg
cmp
sub
or
inc
jg
movs
sbb
jbe
inc
xchg
out
fist
mov
mov
adc
fwait
int
mov
push
js
ror
push
movs
pop
add
and
sub
mov
add
bound
push
cmp
rol
cmp
stc
pop
sbb
jo
imul
add
add
loope
(bad)
fist
or
and
or
cs
push
ret
jecxz
dec
rol
cwde
aad
in
aaa
cs
and
stc
fcomi
mov
pop
rcr
push
rcr
fidivr
(bad)
push
lods
ret
jp
cmp
add
call
lahf
popf
xor
sub
inc
int
call
and
sbb
xor
sbb
mov
fild
neg
fwait
mov
loopne
adc
pop
add
pop
call
xchg
dec
dec
dec
jecxz
clc
jp
mov
arpl
push
rol
fnstcw
in
int3
push
jbe
gs
aad
fidivr
jb
inc
in
sub
rol
xchg
adc
xchg
sub
sbb
or
mov
jo
jmp
jl
aam
outs
push
fwait
mov
mov
out
rcl
mov
pushf
sbb
mov
(bad)
in
add
xchg
mov
pushf
pop
sbb
daa
mov
in
sahf
jl
aaa
ror
push
fild
adc
push
add
imul
xor
and
les
(bad)
pusha
push
mov
imul
jle
repz
and
push
imul
push
(bad)
cmp
test
cmp
out
mov
into
cld
or
jno
push
fs
into
inc
cmc
jb
mov
sub
shufps
fild
ror
(bad)
test
enter
adc
mov
jae
je
cmps
adc
pop
cli
cld
xor
inc
enter
lds
inc
call
push
mov
pop
outs
or
cmp
ror
arpl
dec
mov
sub
mov
nop
int3
je
inc
scas
js
add
sbb
pop
(bad)
shl
fwait
cmp
cdq
cwde
enter
(bad)
push
clc
bound
in
adc
dec
jae
push
or
ins
sub
out
inc
push
mov
fidivr
dec
fisubr
xor
adc
lock
ffree
add
adc
mov
adc
push
arpl
inc
mov
adc
loope
fwait
or
fisttp
add
retf
cwde
and
int3
cwde
cmp
and
cs
test
ficomp
bound
cs
jmp
xadd
dec
test
push
out
push
outs
and
xchg
loop
pop
in
pop
(bad)
mov
retf
pop
mov
fsubrp
xchg
rcl
sbb
jb
les
shr
call
sbb
jo
mov
xchg
adc
jle
xchg
outs
test
out
mov
sbb
stos
adc
fmul
leave
cmp
sbb
cmp
mov
cmp
fisub
daa
push
add
push
lods
lods
sbb
push
lods
scas
int3
lock
add
and
outs
mov
popa
xchg
mov
stos
lods
sub
cdq
mov
sub
into
data16
mov
xchg
pop
and
mov
loopne
(bad)
fcmovb
ins
aaa
jg
js
cmc
xchg
adc
mov
cld
fucom
push
mov
mov
inc
data16
xor
jnp
loopne
pop
mov
add
xchg
pop
add
mov
movs
popf
aaa
into
xchg
sub
dec
push
lods
repz
or
lea
xor
xor
test
dec
loop
test
xor
cs
in
test
icebp
xor
ins
out
les
ins
or
xor
ja
stos
mov
jge
imul
fmul
jle
jp
push
sub
ret
cmp
sbb
push
(bad)
fldenv
ins
push
mov
sub
cwde
inc
dec
dec
push
fisubr
dec
jo
hlt
cld
pop
rcl
mov
lea
push
test
pop
mov
mov
xchg
cli
sub
hlt
retf
sub
fld
cdq
jae
sbb
in
mov
mov
sahf
pop
mov
xor
cmc
fldenv
sbb
xor
and
and
mov
ins
adc
ss
xor
lock
outs
in
repnz
int
test
fcomp
int
jmp
mov
mov
and
push
je
aad
or
into
paddq
pop
inc
and
popa
pop
lods
pusha
outs
ffreep
xchg
ja
frstor
int
adc
in
mov
mov
cwde
(bad)
cwde
mov
xor
hlt
fiadd
dec
addr16
jb
jmp
(bad)
xor
cmp
adc
retf
test
popa
clc
mov
mov
retf
jmp
xor
mov
or
dec
repz
jnp
fdivr
mov
jmp
mov
test
jne
pop
mov
jne
mov
loop
mov
cmp
dec
int3
adc
imul
or
out
push
fs
pop
adc
ja
test
test
ss
adc
adc
add
dec
hlt
mov
fstp
out
ret
das
push
shl
pop
fdiv
adc
cwde
add
jge
scas
fcmovnb
pop
adc
out
ss
int
call
cmc
rcl
imul
mov
dec
cmc
jg
mov
add
mov
cli
mov
jbe
pop
pop
push
in
or
cwde
std
mov
mov
xlat
mov
(bad)
aas
lods
ret
pop
(bad)
xor
mov
fs
inc
or
rcr
outs
ds
mov
ja
or
js
aad
mov
outs
pop
aas
push
add
push
jge
inc
add
cli
mov
lahf
cmp
fdivr
push
push
(bad)
repnz
cmps
bound
mov
icebp
in
movs
adc
aas
scas
(bad)
mov
and
dec
addr16
inc
jmp
mov
mov
leave
stos
jo
sub
js
sahf
mov
mov
or
das
xchg
call
scas
sub
enter
inc
ins
or
je
jo
or
cmp
push
cmp
out
stos
cmp
ds
jge
push
sbb
jg
icebp
mov
ss
mov
cmps
jnp
sbb
in
pop
ret
cmp
adc
pop
lds
xchg
push
push
sub
pop
xchg
mov
add
xor
cmp
retf
inc
mov
arpl
inc
outs
add
jns
or
out
jmp
cmps
scas
jg
xchg
xchg
jmp
mov
mov
leave
and
pop
push
jl
push
or
loopne
movs
in
jbe
pop
sub
dec
sub
jmp
pusha
int
mov
jecxz
mov
sbb
dec
fucomp
cmps
or
ror
rol
mov
into
std
arpl
jno
in
jp
cmps
aaa
lods
ins
or
push
jbe
pop
jnp
mov
mov
push
xchg
call
outs
jae
jae
and
inc
sar
das
sbb
cmp
repz
gs
cdq
(bad)
ds
pusha
push
scas
cli
pop
(bad)
mov
jl
adc
rcr
rcl
push
stc
add
and
clc
jl
mov
xor
pop
pop
cmp
xchg
cdq
cdq
xor
aas
cmp
push
shl
es
pop
fisub
and
dec
mov
leave
(bad)
(bad)
sbb
dec
and
xchg
rol
retf
(bad)
jg
jge
sbb
sar
add
cld
jae
pop
in
add
lods
dec
xchg
xor
fmulp
push
sub
imul
std
sub
jae
pop
ds
retf
(bad)
fisubr
adc
mov
xor
pop
test
leave
mov
xlat
pop
sbb
std
inc
or
jns
int3
mov
sub
loopne
out
mul
sub
iret
push
ins
pop
pop
add
out
scas
mov
jg
je
pop
rcl
jge
xor
pop
mov
in
into
jecxz
mov
push
scas
loopne
jg
fidivr
lods
ret
addr16
out
in
mov
pop
outs
cwde
push
fucomp
xchg
test
xchg
cdq
cmp
sbb
ins
xchg
pop
xor
dec
sbb
pop
push
jp
jnp
pop
stc
loopne
xor
jecxz
ins
shl
ja
(bad)
xchg
pop
aad
inc
sbb
sbb
xor
fnclex
aaa
cmp
shl
inc
xchg
cmp
sub
push
or
push
fwait
je
rcr
push
mov
test
pop
xor
jae
(bad)
lods
ret
out
jge
sahf
xor
mov
jne
stc
xor
fidivr
jnp
adc
push
jbe
jne
dec
mov
mov
jl
xchg
jo
lahf
es
bound
adc
cs
call
sub
xor
gs
leave
outs
or
(bad)
ficom
push
popa
push
fld
mov
mov
sbb
idiv
sub
(bad)
mov
lea
imul
mov
or
adc
cmps
xlat
pop
cld
popa
bound
add
rcl
shr
adc
test
pop
gs
cli
xor
(bad)
cwde
fwait
lds
js
jne
add
ds
aas
lods
mov
repz
fsub
mov
inc
ror
cli
push
daa
pop
in
xchg
and
mov
mov
dec
in
daa
icebp
xor
xchg
and
icebp
daa
cmp
cmps
repz
push
or
jo
pop
in
pop
and
out
dec
jge
sbb
push
mov
jle
mov
mov
ss
mov
xchg
dec
mov
dec
dec
mov
ins
pop
inc
fwait
xchg
adc
or
xchg
sub
jg
push
cmp
push
xchg
sbb
push
in
mov
jnp
loope
or
fbstp
pop
hlt
add
sub
popa
mov
and
femms
les
pop
sub
es
loope
mov
push
and
in
inc
mov
cdq
pop
jle
mov
cld
cli
cwde
jno
add
adc
or
inc
out
mov
repz
lods
jns
cmps
push
sbb
sub
je
and
xor
ja
jne
xor
xchg
inc
ret
clc
sti
fmul
out
sbb
or
push
dec
mov
cmp
test
xchg
inc
inc
das
adc
test
mov
mov
fbld
retf
sub
div
and
stc
mov
xchg
jg
cmps
adc
mov
jne
ins
fst
xchg
jb
test
or
and
xor
outs
outs
lods
jecxz
pop
js
stc
mov
xchg
loop
add
dec
sahf
xchg
push
rcr
(bad)
(bad)
and
cmc
push
test
and
mov
mov
stos
ds
xor
(bad)
mov
mov
fmul
add
loopne
adc
sub
icebp
add
pop
mov
mul
mov
and
xchg
jo
scas
ror
push
fdivr
scas
jae
lds
sar
or
ret
(bad)
push
call
fwait
pop
sub
pusha
add
mov
dec
repnz
out
outs
retf
(bad)
push
sbb
(bad)
mov
aam
sub
xchg
dec
into
enter
jo
outs
out
shl
dec
loop
and
adc
xor
pusha
mov
inc
and
add
mov
sub
leave
push
sub
or
jg
sbb
icebp
mov
xor
xchg
scas
aad
cmc
cmp
add
cmc
cli
fld
lods
mov
mov
fld
add
jns
dec
retf
xor
jle
shl
lods
jl
std
int3
dec
stc
xchg
sub
adc
or
mov
pop
jns
fcom
dec
sub
clc
(bad)
mov
xor
nop
sbb
xor
jo
and
repnz
jns
(bad)
and
lahf
addr16
adc
pop
div
sub
sbb
jno
cmp
mov
sar
stos
rol
dec
fsub
dec
dec
sub
sbb
leave
push
push
test
cmp
add
idiv
call
pop
sbb
popa
xlat
retf
cmp
in
ins
loope
stos
mov
and
pop
dec
mov
js
cmps
add
fwait
mov
shr
cwde
pushf
xor
cmp
and
retf
push
pop
pop
(bad)
inc
(bad)
loopne
pop
mov
popa
sbb
sti
push
xor
cmc
ss
sub
pop
shl
cmp
(bad)
daa
ficom
ins
pop
retf
int
sbb
pushf
xchg
add
xchg
sub
xchg
jmp
(bad)
out
test
mov
outs
iret
cmp
push
xor
inc
iret
jle
in
cmps
adc
retf
mov
cdq
sbb
pop
adc
mov
pop
jns
pusha
xor
push
loope
repz
sahf
test
bound
sti
push
mov
adc
or
neg
adc
iret
ret
pushf
pop
aam
fstp
lods
fisub
mov
jbe
push
cwde
ss
je
mov
mov
and
push
sbb
xchg
lods
pusha
popf
sub
add
out
cmp
retf
sub
lock
xlat
xor
xchg
push
mov
add
mov
pushf
mov
jg
cwde
aaa
(bad)
lea
dec
xchg
jl
cmp
mov
pusha
in
or
stc
mov
lds
push
fcom
(bad)
int3
add
mov
xchg
push
sub
cmps
sbb
aaa
jno
loope
and
xor
fsubr
inc
push
ret
jge
sbb
adc
iret
xchg
mov
ins
shl
fisttp
mov
retf
jg
inc
stos
cmc
dec
inc
or
shr
stos
popa
jne
or
lahf
repz
sbb
lods
pop
dec
jnp
movs
mov
fnstenv
sbb
jl
les
inc
lods
xchg
jb
bound
jge
xchg
nop
xor
push
ret
int
shl
xor
movs
push
jmp
in
mov
mov
dec
or
add
leave
xlat
push
jge
pop
sbb
and
das
bound
ret
out
scas
call
mov
adc
rcl
inc
inc
cld
leave
rep
mov
inc
out
push
sti
stc
in
sbb
add
cmp
call
inc
xchg
and
sub
(bad)
xchg
mov
and
mov
jns
or
ror
rol
jge
popa
lock
sbb
push
aad
movs
imul
mov
pop
push
outs
les
mov
xlat
xchg
mov
repnz
int3
xlat
mov
jnp
push
in
stos
fwait
sub
fsubr
retf
sahf
dec
dec
pop
iret
int
inc
sub
xor
in
adc
cmps
call
stos
dec
lahf
jb
test
mov
test
inc
pop
fmul
and
ret
scas
mov
int
lahf
or
xchg
and
pop
adc
das
and
sbb
aad
int3
cli
aas
xchg
outs
mov
gs
sbb
into
or
mov
mov
ins
or
fs
jl
pushf
fld
rol
(bad)
call
or
ds
cmp
xor
popa
or
sti
scas
jo
sti
mov
addr16
pop
cmps
or
test
outs
mov
add
or
jnp
cwde
scas
lock
mov
push
inc
jge
test
mov
mov
dec
or
add
test
test
push
call
adc
arpl
ja
in
stos
mov
mov
dec
add
mov
scas
addr16
dec
push
fwait
inc
cmp
pusha
test
mov
sub
mov
sbb
je
sar
xchg
test
mov
bound
xchg
push
mov
mov
popf
cli
push
pop
pop
add
xchg
arpl
cmp
mov
sbb
rcl
mov
repnz
mov
aad
push
adc
cmp
push
cmc
jbe
xchg
stos
cmp
test
mov
stos
psrlq
add
data16
xchg
add
shr
xor
ret
(bad)
shr
lods
xor
push
mov
jnp
sbb
add
mov
xchg
or
pop
mov
(bad)
inc
inc
mov
dec
stos
cmp
cmc
add
add
mov
icebp
pop
push
or
(bad)
fst
lea
jle
xor
push
dec
fwait
je
dec
test
mov
movq
and
scas
mov
fld
(bad)
out
fcom
xchg
shl
pop
imul
movs
pop
test
int
jl
jmp
pop
dec
push
cmps
gs
lods
add
mov
(bad)
hlt
aas
jmp
inc
pop
jecxz
mov
push
pop
cmp
pop
mov
imul
out
dec
inc
adc
mov
sbb
jbe
or
jns
aaa
or
pusha
jmp
jo
push
cmps
out
adc
mov
xor
push
mov
pop
dec
out
in
sar
mov
jge
pop
cmp
xor
hlt
xor
fild
movs
jb
xchg
push
jecxz
xor
movs
inc
inc
mov
int
ret
dec
(bad)
rcr
std
xchg
xor
mov
push
sub
or
jno
and
xor
call
and
or
sub
test
aaa
or
ret
mov
inc
cmp
(bad)
fadd
js
xchg
pop
ror
add
mov
je
ins
cmovnp
or
jmp
mov
sub
cmc
push
jl
es
jmp
ficom
sar
jp
sub
je
shr
push
das
xchg
add
das
outs
cmp
aam
and
push
ds
pop
push
fadd
stos
iret
fisub
mov
cld
fs
cmps
xchg
gs
add
loopne
fnstcw
add
test
test
call
sub
rol
popa
push
jne
add
shr
mov
sub
out
xchg
and
and
and
xchg
ret
outs
jecxz
fild
and
imul
sub
in
mov
ds
loope
add
cld
mov
mov
fstp
sbb
mov
push
jle
or
or
jp
lock
sbb
cmp
jnp
xor
out
imul
add
lock
sub
jne
xor
xor
push
push
add
sahf
cwde
ds
inc
test
std
mov
lock
mov
std
loop
test
pop
sub
ins
xchg
pop
sub
pop
adc
ret
inc
popa
(bad)
push
mov
and
push
ret
dec
mov
mov
aaa
movs
pop
imul
out
xor
cmp
in
ret
sub
jae
jg
push
pop
leave
push
mov
(bad)
jae
test
jnp
dec
pop
in
(bad)
ret
mov
adc
and
pop
pop
sbb
jmp
sbb
sbb
jle
ror
and
imul
sbb
sub
pusha
sbb
js
push
xor
repnz
lock
inc
dec
out
add
std
mov
xchg
popf
mov
loope
dec
cmp
mov
clc
rcr
pop
push
call
sti
mov
dec
aam
cli
add
sbb
sub
gs
xor
aam
ja
dec
inc
inc
adc
push
sub
xor
cmps
mov
(bad)
sub
jp
mov
cmp
das
(bad)
lock
add
mov
ins
cmp
push
je
cmp
cmc
xor
ds
mov
pop
pop
sub
mov
les
mov
mov
repz
jo
mov
cld
jge
fnstcw
jmp
es
cmp
fdivr
mov
push
xrelease
fcmovbe
inc
mov
pop
cmc
aas
repnz
sbb
sub
daa
dec
div
in
sar
cmp
jmp
leave
jae
sahf
jle
hlt
sbb
add
cmp
dec
dec
les
pop
inc
shl
adc
cmp
jbe
sar
mov
mov
mov
ins
bound
mov
push
sbb
push
dec
and
dec
jp
imul
into
ins
push
dec
pusha
cmp
les
inc
ret
adc
(bad)
adc
xchg
jbe
cwd
je
jge
fnstcw
ins
(bad)
out
inc
popa
data16
fcom
add
ror
mov
inc
adc
and
mov
cmp
inc
lods
jae
pop
scas
inc
dec
ficomp
inc
adc
sbb
jecxz
push
rol
mov
ds
xchg
outs
loopne
mov
idiv
or
or
aad
(bad)
mov
gs
dec
ds
daa
push
jmp
call
adc
icebp
add
stos
pop
mov
mov
pop
(bad)
dec
xchg
ins
out
lock
das
test
jge
pop
xchg
jl
std
loopne
and
mov
cmp
fs
aam
xchg
les
not
lods
and
jmp
jecxz
test
dec
aas
out
icebp
cmps
sub
sbb
mov
test
dec
add
fld
jle
stos
mov
call
dec
test
inc
dec
sti
stos
mov
fmul
mov
loopne
cld
mul
sbb
jbe
adc
pop
aaa
and
dec
mov
xor
repz
cmp
idiv
and
cmp
pop
adc
pop
push
mov
and
adc
pop
loope
jge
(bad)
ins
jae
les
mov
add
test
pop
dec
pop
pop
xor
mov
sbb
inc
and
sahf
jbe
push
nop
lds
hlt
ficom
bound
jmp
mov
ins
xor
ret
jbe
or
xor
xchg
addr16
and
lock
mov
add
sub
adc
leave
cmp
inc
cmp
xchg
fist
out
xor
sub
jmp
mov
(bad)
out
ror
or
arpl
(bad)
xor
jb
fwait
xchg
scas
and
cmp
jg
call
pop
sub
pop
jp
mov
ins
cmp
ins
pop
cmc
(bad)
mov
add
push
and
out
leave
ret
(bad)
mov
rol
adc
mov
stos
dec
mov
pop
ins
xor
nop
pop
popf
out
outs
fnstenv
inc
ret
retf
xchg
das
(bad)
div
mov
push
xlat
jge
fs
xchg
cmps
or
aas
mov
loop
aad
fisub
dec
ret
and
adc
mov
lods
lods
repz
push
or
xor
mov
add
scas
xor
stos
pop
xor
aam
and
movd
jl
xchg
pop
jmp
jg
movs
add
mov
sub
mov
inc
mov
inc
in
inc
shr
mov
pop
add
in
fwait
pushf
dec
clc
xchg
shl
xchg
cld
(bad)
xchg
retf
fsin
jno
adc
into
sbb
fisubr
repnz
dec
enter
adc
dec
mov
xchg
and
xchg
adc
mov
(bad)
and
jmp
cli
fadd
dec
rol
inc
cmps
mov
sbb
loopne
jns
xchg
xor
nop
push
pop
push
mov
out
pop
sub
sti
sbb
mov
pop
pop
(bad)
mov
cmps
in
mov
mov
fisubr
jns
arpl
ins
aad
js
dec
jae
mov
(bad)
jae
ds
aas
mov
rol
cld
scas
mov
jp
movs
jae
shl
adc
bound
mov
fs
popa
jge
ficom
call
inc
jecxz
(bad)
and
fiadd
xor
cwde
popa
mov
rcl
cmps
adc
push
jo
xchg
sbb
aaa
jg
int
mov
fucom
cmp
stos
(bad)
(bad)
dec
sub
outs
fidivr
sbb
adc
(bad)
out
inc
scas
jl
xchg
lock
sub
mov
popf
and
and
ffreep
add
clc
mov
xor
inc
or
add
xor
cs
ins
cwde
push
fdiv
not
test
inc
sub
scas
add
ins
jns
jo
std
push
or
mov
scas
xchg
mov
and
mov
ins
xchg
jmp
in
mov
ss
cdq
(bad)
(bad)
loopne
fisttp
push
sbb
scas
xchg
push
xor
scas
sub
sub
and
rcl
push
cwde
stos
pop
arpl
aas
mov
iret
aam
(bad)
call
ret
int
lds
inc
mov
nop
outs
jmp
(bad)
jmp
mov
(bad)
mov
push
rcl
cld
push
movs
adc
sub
jmp
push
mov
or
or
inc
lea
pop
(bad)
iret
call
pushf
in
cld
imul
mov
popf
mov
fwait
push
cwde
fidiv
mov
cmps
jae
fst
movs
loopne
cdq
test
xchg
sub
daa
call
test
jbe
repz
out
mov
dec
(bad)
lds
fidivr
mov
mov
pop
test
clc
adc
lahf
nop
xor
sbb
pop
leave
lea
test
inc
out
out
sub
and
push
aad
mov
jo
xor
jmp
dec
or
mov
fisttp
sti
retf
test
mov
rcl
push
ins
xchg
xchg
rol
cli
clc
out
jmp
cli
je
popa
cmp
pop
mov
retf
mov
loopne
mov
imul
xchg
jl
add
xchg
clc
inc
jecxz
lahf
(bad)
push
popa
mov
mov
and
mov
add
mov
mov
mov
je
adc
mov
jge
std
cmp
jecxz
xor
pop
fwait
int
daa
mov
sub
mov
leave
sub
add
(bad)
movs
dec
aaa
ds
push
dec
pop
into
mov
pop
pop
push
ret
movs
mov
rol
dec
data16
push
cli
cmp
cmps
test
jns
xchg
push
cmc
push
dec
jne
xor
and
std
jmp
push
fnstsw
rcl
fs
movs
aam
inc
push
arpl
jg
movs
jae
fstp
mov
sbb
outs
pop
scas
mov
xor
fxch
out
in
imul
xchg
aas
stos
xchg
and
test
mov
rcl
cdq
mov
fadd
inc
pop
jb
mov
imul
push
dec
and
jno
mov
stos
dec
push
mov
lods
mov
fndisi(8087
leave
ins
mov
sti
xor
lahf
inc
and
bound
test
stc
sub
mov
mov
repnz
outs
(bad)
mov
add
not
ds
mov
sar
imul
fldcw
pop
fisubr
add
out
mov
fisubr
push
jmp
call
mov
and
(bad)
mov
add
fs
inc
sbb
enter
ret
xchg
bound
cmps
jl
cmp
ret
jbe
adc
movs
jge
cmp
(bad)
mov
cmp
adc
dec
out
imul
dec
(bad)
fsubr
xchg
sbb
cmp
(bad)
sbb
pop
jmp
push
sbb
mov
fcom
pop
sub
stos
sahf
and
push
sbb
sub
pop
jo
dec
xchg
jecxz
inc
inc
add
mov
call
xlat
fsubr
ds
jl
addr16
dec
adc
and
mov
das
nop
mov
xor
mov
and
(bad)
and
dec
outs
push
jmp
movs
push
push
mov
fnstcw
jbe
cmp
mov
xsavec
add
std
fs
push
daa
jno
ins
retf
and
aaa
xor
mov
sbb
xchg
repz
inc
adc
iret
xor
movs
push
sbb
and
mov
fld
cmp
adc
mov
jmp
jecxz
sbb
sub
lods
js
leave
sbb
adc
and
push
sub
jmp
fst
cwde
rcr
xor
loope
shl
test
dec
cld
fcomp
fs
hlt
xchg
xchg
addr16
ja
push
mov
inc
mov
fistp
pop
add
xor
or
add
ret
mov
mov
loop
(bad)
les
inc
fst
push
fsub
in
popf
fimul
xchg
pushf
xchg
mov
jmp
mov
push
test
add
jg
sub
cmp
mov
xor
cmps
fwait
bound
js
pop
call
imul
jl
in
mov
mov
fistp
stc
and
sbb
enter
loope
imul
aad
rcl
sub
gs
inc
hlt
imul
inc
dec
dec
pop
es
xor
ret
push
xor
push
adc
fidiv
out
fs
sub
int
sbb
fsub
rcl
arpl
sub
iret
pop
mov
daa
inc
push
outs
jnp
daa
(bad)
and
jmp
mov
rcl
cmps
mov
xor
and
call
out
push
rcr
inc
fwait
jnp
xor
xchg
and
or
dec
pop
retf
jmp
xchg
push
in
or
scas
dec
clc
fld
and
loopne
xor
lods
inc
xchg
xchg
stos
sub
pop
gs
repnz
mov
mov
enter
cdq
rol
jno
test
imul
jb
in
idiv
pmaxub
dec
xor
fcmove
and
movs
cmp
sub
xor
(bad)
retf
add
cmps
ins
loop
in
jo
push
push
ins
pop
lods
cmp
add
xor
sub
js
jg
mov
std
pop
xchg
pop
sub
jae
dec
(bad)
mov
xchg
add
outs
cmps
sub
shr
movs
rol
mov
dec
fild
cli
bound
mov
pop
lods
xchg
ret
xor
dec
mov
lock
fucom
or
inc
inc
push
movs
lea
out
sbb
cmps
fs
ins
ret
mov
inc
inc
gs
xchg
add
js
sub
cs
xchg
mov
jns
xchg
aad
sar
hlt
push
xchg
pop
dec
mov
lods
pop
cmp
lds
pushf
cmp
sub
dec
add
loop
mov
lods
add
shl
jnp
push
xor
push
jno
lds
push
rcr
sti
out
cdq
sub
fistp
ret
pushf
lock
test
cmp
adc
add
xor
in
add
jo
ds
or
xor
mov
cwde
adc
mov
and
mov
dec
mov
sahf
pop
mov
les
jo
add
cmp
or
jns
add
dec
jno
mov
mov
dec
stc
push
jno
sbb
jecxz
mov
push
pop
repnz
sbb
ins
fcomp
or
das
stos
test
loopne
ja
mov
lds
iret
int
fcmove
xchg
mov
push
sbb
mov
jmp
or
mov
ja
out
or
sub
mov
mov
cmp
and
dec
fdiv
paddq
repz
xsha1
cmps
or
jge
in
(bad)
out
out
push
cmp
loop
fisttp
cmps
mov
icebp
mov
dec
fcomp
call
adc
(bad)
or
sbb
inc
jnp
popa
xor
(bad)
test
pop
sbb
test
dec
jecxz
(bad)
fnop
mov
mov
sbb
sub
and
es
mov
xchg
lahf
sahf
(bad)
aas
push
inc
pop
stos
mov
cmc
add
mov
lds
mov
mov
cmp
pop
push
pop
push
adc
dec
ja
clc
out
add
jb
mov
push
sub
call
lods
ds
in
mov
lea
ja
and
mov
movs
rcl
or
mov
adc
loop
leave
(bad)
stc
test
rcr
sbb
(bad)
and
xchg
push
xchg
cdq
sbb
loope
pop
stos
test
and
inc
jo
dec
outs
pop
js
enter
and
arpl
xor
popa
jge
lods
in
mov
mov
(bad)
pop
outs
mov
mov
int3
out
inc
in
inc
leave
repz
ret
div
cmp
outs
nop
sbb
push
and
jle
push
inc
loope
sbb
pushf
add
sti
loope
dec
setle
std
sahf
scas
pop
popf
mov
test
out
xchg
aaa
jnp
sbb
add
sbb
js
neg
push
ds
inc
or
dec
mov
cld
and
sbb
les
jge
pop
(bad)
jmp
sti
pop
sub
add
outs
or
xor
mov
pop
imul
sub
aaa
mov
adc
jbe
add
pushf
jg
push
(bad)
(bad)
xchg
icebp
xchg
mov
push
mov
(bad)
test
add
dec
cdq
xor
xlat
inc
dec
xchg
fcmovnu
sub
cmps
frstor
enter
sub
arpl
xchg
inc
jmp
xlat
into
popf
inc
xor
test
push
adc
call
mov
inc
rcl
push
dec
jge
nop
dec
push
mov
mov
push
push
out
jmp
test
and
in
cli
jae
cmp
daa
nop
mov
ss
pop
aam
jae
inc
dec
loope
fisttp
lea
loopne
ret
or
xlat
jg
es
int3
pop
add
mov
mov
jmp
add
arpl
inc
push
pop
stc
mov
test
inc
cdq
arpl
xor
jmp
ret
mov
out
loopne
mov
and
sub
rol
mov
push
repz
jmp
xor
sbb
aaa
jl
sub
movs
pop
fnsave
adc
arpl
cmc
sbb
pop
dec
pop
mov
push
add
add
mov
imul
lock
push
jecxz
lea
in
cmps
cmp
xor
mov
mov
les
push
jb
popf
int3
cmp
loope
ss
add
ja
pop
das
jle
popf
stos
sbb
push
mov
inc
mov
in
fdivr
sti
scas
cmp
jbe
push
cli
dec
mov
popf
push
mov
outs
xlat
and
push
xor
pop
or
mov
sti
push
loope
pop
mov
jnp
mov
add
push
movs
fcomp
jmp
loopne
hlt
call
adc
and
fisttp
fld
fnstsw
mov
mov
mov
mov
mov
xor
dec
loope
retf
sbb
std
mov
(bad)
push
popa
pop
inc
retf
xor
sub
outs
xor
push
out
imul
adc
and
mov
sbb
cli
jp
push
clc
mov
xchg
mov
jmp
jae
inc
pusha
pop
and
pop
or
inc
sar
sbb
push
fsubr
push
imul
adc
or
mov
push
mov
mov
in
inc
push
stos
push
sti
adc
mov
jo
popa
in
and
jae
std
dec
lds
dec
or
cmps
fsub
or
push
bound
pop
mov
lock
aaa
aad
scas
xchg
fmul
add
mov
leave
in
mov
fadd
hlt
frstor
sar
sbb
rol
jns
sub
sbb
movs
je
(bad)
ss
cmps
(bad)
int3
inc
cli
lock
gs
xchg
pop
dec
(bad)
ds
cdq
push
and
ror
jecxz
movs
jnp
xor
dec
das
in
popa
jmp
push
lds
inc
ror
out
mov
mov
bound
dec
call
or
lods
gs
popa
or
xor
xchg
sbb
lds
arpl
pop
jmp
sbb
loop
cwde
sub
xchg
cmp
xchg
loop
mov
inc
xor
movs
(bad)
enter
pop
mov
sbb
sbb
mov
movs
ret
jg
pop
sub
lods
push
rol
cs
addr16
in
xchg
dec
fldcw
lahf
xor
fstp
add
or
jo
inc
pop
push
mov
sar
or
or
push
sub
adc
mov
push
pusha
dec
mov
fld
push
enter
idiv
lods
sbb
pushf
mov
push
fcmovne
mov
imul
inc
mov
or
nop
lds
pop
daa
inc
add
xchg
cdq
shr
cmc
ret
xchg
push
test
cmp
loope
sbb
jb
fmul
or
sub
nop
sbb
sbb
ficom
push
adc
leave
jmp
cmp
adc
lahf
push
lahf
mov
push
dec
jns
and
movs
push
icebp
and
push
mov
jns
ins
mov
ins
and
jge
out
xchg
jmp
cmp
fisubr
pushf
adc
inc
sub
push
inc
xchg
jl
jge
push
vpand
je
mov
popa
sub
fdivr
out
pop
outs
add
pop
scas
jbe
adc
mov
xor
les
push
push
addr16
sbb
adc
mov
cmps
pushf
sub
imul
call
les
and
mov
and
in
mov
xor
sub
fcom
js
loop
push
sub
nop
fwait
test
int3
xor
imul
stc
xor
jmp
cmp
ret
and
xlat
xchg
and
sub
or
push
xchg
arpl
repnz
aaa
mov
and
mov
test
lods
mov
clc
or
fbstp
jp
or
mov
dec
retf
in
repnz
push
cmp
and
stos
add
es
mov
mov
fstp
pop
fiadd
(bad)
lahf
outs
into
xor
out
and
cmp
icebp
mov
cmc
mov
ficomp
retf
mov
fs
retf
in
xor
inc
or
or
out
adc
push
or
sar
cmps
gs
cmp
dec
inc
ret
or
jl
dec
sub
or
pop
ror
call
push
in
mov
sbb
(bad)
fsubr
xchg
xor
xchg
jne
xchg
mov
sbb
in
(bad)
call
sbb
mov
mov
and
mov
xor
int3
sbb
mov
xor
add
mov
aas
inc
or
and
jnp
push
mov
cmp
cld
push
xor
push
imul
fstp
sahf
lds
mov
ficomp
cmp
cdq
sbb
lea
push
icebp
xchg
push
test
cmp
cmps
das
cdq
mov
fcomi
test
aad
dec
iret
mov
xor
rol
retf
fsubr
idiv
loopne
sbb
xchg
mov
sahf
ret
mov
add
pop
rcr
pop
js
xor
ret
sub
xor
sbb
ror
xchg
cmps
sub
fnstsw
test
ds
inc
xor
rcr
imul
les
inc
outs
xor
jmp
imul
stos
inc
stos
aam
aaa
jge
stos
dec
pusha
cdq
fwait
sbb
in
in
xchg
mov
jle
inc
adc
dec
into
rcr
or
add
(bad)
outs
or
ficom
sbb
adc
or
pop
iret
dec
inc
push
imul
imul
js
popa
es
or
dec
push
ins
xchg
or
in
sbb
and
add
add
mov
mov
add
fidiv
aad
or
adc
retf
pushf
jbe
lods
xor
arpl
mov
jmp
loopne
mov
and
dec
outs
xchg
int3
jb
je
enter
aaa
add
fcomip
call
xor
daa
(bad)
fld
ret
and
cwde
ror
sub
inc
inc
cmp
mov
xor
cmp
scas
rcl
das
jecxz
out
les
fnstenv
mov
mov
sub
test
cmp
jp
inc
arpl
call
xlat
sbb
loop
add
in
stos
add
inc
call
aas
mov
ja
pop
test
mov
test
call
sub
shl
sub
fmul
push
loope
push
adc
inc
and
xchg
or
out
shl
cwde
xor
xchg
push
xor
je
int
repnz
daa
es
jo
and
dec
popf
cs
mov
mov
mov
push
dec
xor
fistp
add
fild
or
add
fistp
(bad)
fst
cmp
jnp
mov
ret
das
mov
dec
mov
add
in
jb
push
es
cmp
repz
dec
mov
pop
aad
mov
xlat
jmp
cmc
inc
daa
pop
inc
adc
lods
call
push
mov
jnp
pushf
retf
js
jns
fnstcw
fadd
cmps
icebp
fs
hlt
call
(bad)
jne
dec
pop
xchg
icebp
arpl
aam
add
pop
fld
mov
scas
pop
xor
dec
lock
dec
or
mov
retf
sub
mov
outs
jg
sub
pop
aam
or
jp
pusha
(bad)
stc
cmp
std
fsubr
cdq
outs
fwait
inc
mov
test
push
in
lea
sbb
mov
mov
lahf
cmp
jno
push
test
mov
loope
push
sub
jmp
jnp
push
xchg
dec
and
adc
mov
les
es
data16
aam
jae
rcl
mov
jnp
and
dec
mov
lea
cmp
in
mov
add
adc
ds
repz
test
inc
mov
mov
jno
or
hlt
and
mov
pop
ds
pusha
mov
mov
xchg
cmp
retf
adc
adc
clc
js
retf
pop
mov
mov
inc
mov
shl
mov
neg
push
lock
xor
lahf
mov
(bad)
aaa
shr
nop
sub
jnp
xchg
or
xor
xchg
xchg
fsubr
icebp
fwait
pop
dec
mov
sbb
dec
adc
sbb
and
push
xchg
dec
or
loop
mov
stos
inc
test
jno
inc
cdq
or
enter
xchg
push
mov
xor
xchg
cmps
inc
add
fimul
xchg
lahf
(bad)
jmp
cli
cmp
cmps
cli
cs
lock
cmp
into
cwde
lock
fidivr
adc
inc
and
iret
loop
jmp
xchg
hlt
sbb
fisub
pusha
pop
stos
ret
iret
push
pusha
sub
cmp
cmp
add
rcr
nop
fiadd
fcom
cmc
sbb
(bad)
bound
pop
js
mov
cmp
out
arpl
xor
and
sub
fs
cmc
retf
or
test
aad
sub
addr16
sub
cwde
jb
(bad)
cmp
sti
lods
xor
test
xchg
jmp
arpl
sub
(bad)
icebp
cli
or
pusha
cmc
icebp
mov
xchg
inc
pop
iret
and
fcmovnu
test
js
mov
push
shl
aaa
cmps
nop
push
mov
pop
dec
iret
cmps
push
in
cwde
out
fmul
mov
shl
repnz
lods
mov
xor
xlat
mov
int
mov
les
test
fbld
cmps
jle
ret
xchg
imul
ins
fsub
pop
add
in
or
stc
sbb
pop
push
jl
sahf
mov
sbb
sub
mov
daa
out
vsqrtsd
push
int
ret
daa
ins
mov
xlat
push
dec
pusha
movs
inc
es
rcr
xor
cmp
dec
cmps
cmps
or
ficomp
jg
push
mov
jns
push
loope
sub
loopne
pushf
xor
mov
scas
mov
pop
jle
ficom
sahf
in
inc
outs
lahf
pop
cmps
imul
sub
(bad)
mov
and
mov
aam
ret
ja
push
loopne
sbb
hlt
scas
sar
mov
xor
and
imul
pop
and
out
les
push
out
mov
out
frstor
push
dec
sub
or
xchg
hlt
not
daa
or
imul
js
test
mov
dec
mov
adc
dec
arpl
sub
jmp
sub
xchg
cli
mov
ins
mov
push
inc
xchg
add
(bad)
mov
test
shr
gs
pop
outs
jge
sbb
pop
or
and
mov
add
pop
stc
mov
in
fdivr
in
lds
xchg
out
add
cld
in
dec
push
sahf
cmp
test
pop
inc
call
push
nop
mov
mov
dec
sbb
jg
xor
pop
loop
imul
sti
pop
pop
jl
jae
cmp
cmp
(bad)
push
adc
lods
iret
push
adc
pop
dec
fwait
outs
loope
jmp
xlat
inc
dec
jns
jmp
push
mov
jmp
and
lea
out
cwde
cmp
push
cmp
adc
xlat
shl
mov
outs
into
fidiv
and
(bad)
cmp
push
sub
(bad)
not
pop
inc
jmp
arpl
sbb
mov
enter
xchg
sahf
and
push
mov
in
push
pop
scas
repnz
dec
cmps
popf
aaa
jmp
pop
jne
push
push
rep
xchg
push
inc
nop
add
scas
add
mov
mov
jnp
push
fld
add
mov
sti
adc
pop
mov
jmp
adc
xchg
and
cmp
lock
aad
mov
or
jp
call
inc
dec
jmp
jl
(bad)
pop
(bad)
sti
sbb
adc
inc
jbe
cmp
call
fist
pushf
cmc
arpl
adc
push
daa
ins
call
and
addr16
adc
aaa
(bad)
mov
sub
push
jg
clc
lea
dec
test
fwait
push
fcom
xchg
mov
mov
mov
adc
mov
push
and
adc
aad
pushf
sbb
cmps
fidiv
inc
xor
std
mov
cmps
test
jg
jns
sub
jmp
out
clc
sbb
pop
mov
add
(bad)
sbb
jle
outs
test
mov
mov
retf
adc
(bad)
lock
addr16
inc
cmc
imul
retf
mov
jmp
and
xchg
sti
cmp
push
out
imul
ret
or
cwde
rcr
xchg
(bad)
xor
xor
cmp
mov
pop
mov
ds
(bad)
cmp
sbb
mov
xor
fbstp
sub
pop
cdq
dec
(bad)
push
adc
es
int3
mov
jmp
lods
cs
into
out
daa
fnstenv
retf
dec
adc
in
imul
add
ret
aaa
repz
(bad)
std
ins
push
hlt
imul
ror
add
push
mov
xor
lea
test
cdq
xchg
mov
sets
dec
xchg
aad
fcmovbe
test
or
sar
and
sti
(bad)
and
pop
jbe
adc
cmp
mov
out
pop
inc
push
dec
daa
mov
arpl
xor
popf
mov
movs
gs
xor
clc
push
mov
lea
mov
fld
xchg
cwde
push
or
mov
nop
dec
out
jne
jbe
jb
pop
mov
add
dec
adc
add
hlt
loop
(bad)
fnstcw
or
xchg
pop
lods
cmp
mov
fcmovbe
xchg
or
or
pop
test
and
sti
(bad)
out
mov
pop
jae
pop
mov
mov
stos
mov
movs
add
jp
stos
pop
mov
mov
sub
and
ss
jp
fild
js
or
or
rcr
or
sub
std
out
retf
mov
das
inc
aaa
pushf
loop
mov
out
dec
pop
cwde
and
mov
mov
shl
stos
inc
retf
loop
scas
inc
popf
nop
sub
(bad)
adc
hlt
imul
mov
fcomip
call
adc
sbb
cmp
inc
mov
data16
test
jmp
push
call
or
pop
cmp
ret
je
je
ror
scas
dec
ret
leave
daa
adc
pop
(bad)
pop
cwde
fmulp
xchg
dec
sub
jb
xchg
xchg
pop
inc
in
retf
push
pop
cmp
inc
fcom
fwait
sub
retf
sbb
xor
or
mov
lock
mov
inc
cwde
jno
or
rcl
into
sbb
pop
ret
enter
pop
sub
test
xlat
xchg
and
fs
movs
clc
mov
xlat
xchg
shl
cmc
lock
add
dec
and
(bad)
fimul
jg
sahf
aad
mov
pushf
push
adc
jb
xchg
jb
mov
nop
xor
fistp
xchg
aas
mov
imul
ret
and
lds
jae
mov
shr
push
jb
push
pop
sar
cld
sbb
sub
jno
repz
cmp
mov
pushf
fldenv
mov
ins
in
jg
push
lahf
jmp
cmps
add
adc
adc
cmp
or
aas
sub
jmp
push
add
popf
pop
pop
mov
cmp
or
inc
in
add
pop
pop
inc
cmp
pop
fisub
and
mov
stc
inc
test
sub
xchg
das
daa
cmc
popa
popa
retf
test
popa
cwde
fdivr
xlat
sbb
in
pop
mov
dec
daa
imul
dec
into
ins
shl
mov
cwde
xchg
sub
popa
lods
xchg
rol
pop
mov
mov
lds
jl
ds
scas
jae
sub
jle
xchg
sbb
sub
cmp
(bad)
mov
retf
pop
push
mov
call
cmp
jns
sub
pushf
and
adc
adc
stc
mov
adc
sbb
cmp
cld
cmp
mov
or
jnp
test
jbe
sti
inc
jmp
rdmsr
fld
jle
test
dec
(bad)
imul
mov
es
cdq
fiadd
rol
xor
push
rcr
mov
or
jle
pop
aaa
cmp
xchg
jmp
push
(bad)
mov
add
pop
dec
sub
mov
call
mov
push
push
mov
fimul
popa
cld
add
pop
retf
push
repz
dec
pop
add
lea
add
icebp
dec
push
in
cli
pop
adc
clc
lea
test
cmp
push
add
jg
jmp
xor
stc
fiadd
mov
cs
in
popf
jp
fadd
sub
fcomi
cld
retf
push
pop
movs
inc
hlt
bound
mov
mov
jl
ja
xor
clc
inc
stos
push
cmp
jg
mov
push
xlat
xchg
mov
cmp
or
push
sub
mov
adc
mov
mov
sbb
lea
adc
cmp
into
pop
xchg
sbb
je
xlat
mov
stos
pop
mov
mov
adc
icebp
rol
stos
out
shl
xor
cmp
inc
sub
mov
sub
mov
cmps
mov
ror
bound
cmp
mov
jno
cmp
pop
bound
cmps
add
loopne
lods
rol
jmp
jge
mov
mov
mov
sahf
(bad)
cmps
call
test
dec
sti
pusha
ja
test
cmps
mov
lock
mov
or
or
and
cmp
adc
mov
and
js
es
mov
jp
dec
xchg
cli
dec
into
push
(bad)
jmp
mov
mov
popa
dec
imul
pop
hlt
seto
jns
aas
fwait
or
mov
in
or
(bad)
test
xchg
fldenv
cmp
imul
and
sahf
xor
int3
shl
retf
adc
push
scas
push
mov
jmp
mov
in
cmps
int3
xchg
std
pop
push
lods
mov
scas
ins
push
js
movs
mov
adc
stc
cmp
out
sub
pop
out
mov
xor
lods
mov
scas
push
jmp
xchg
es
(bad)
out
je
xchg
jo
movs
mov
rol
xchg
adc
adc
fwait
pop
xchg
mov
xchg
add
rcr
ror
jne
sub
or
xchg
stos
test
in
dec
sar
stos
mov
movs
inc
iret
sub
adc
mov
and
dec
pop
cmps
rol
dec
jmp
pop
dec
add
nop
xchg
add
mov
adc
xor
jmp
movs
or
ret
sbb
xchg
shl
imul
pushf
(bad)
inc
mov
repnz
xor
mov
push
shl
rcl
add
mov
xor
pop
cmp
adc
fisubr
aas
repnz
pop
rcl
and
inc
dec
jp
outs
shl
into
jo
push
test
and
nop
xlat
nop
or
inc
sbb
jmp
mov
mov
mov
out
mov
dec
sar
sbb
mov
out
xchg
fistp
movs
lea
lea
mov
ficomp
sbb
jnp
int
jae
sahf
test
push
cmp
call
jmp
push
call
je
or
jo
ds
push
xor
jo
push
repz
sub
lahf
pop
add
inc
(bad)
movs
inc
mov
fiadd
sub
ret
and
imul
sbb
jl
mov
adc
rol
or
dec
and
cmp
movs
adc
or
loope
out
ret
std
adc
jp
arpl
mov
push
mov
(bad)
or
jmp
add
movs
inc
add
xlat
(bad)
xchg
js
dec
adc
jle
int3
ret
cmp
(bad)
push
mov
and
and
push
not
popf
lock
mov
loope
push
mov
ja
ins
sub
xchg
jecxz
inc
imul
xlat
test
retf
xchg
dec
mov
adc
push
fist
loopne
mov
xchg
movs
add
cmp
arpl
stos
xor
lds
sub
and
jge
sbb
cmp
ja
xor
test
jo
mov
and
xlat
jae
add
pushf
mov
in
lds
aad
push
sahf
sahf
fwait
add
pop
xchg
cdq
cmps
sbb
int3
pusha
xchg
rol
ss
loop
out
xchg
stos
outs
hlt
jns
loopne
test
dec
or
pop
in
shl
dec
push
ss
mov
and
xchg
adc
mov
mov
xor
(bad)
push
push
test
or
ffree
or
add
(bad)
js
scas
or
ret
cmc
mov
je
cli
scas
fucomip
mov
sub
sub
test
aam
ds
dec
fsub
mov
pop
xlat
dec
cs
add
pop
enter
add
inc
test
imul
fisubr
nop
sub
add
mov
cmp
sbb
(bad)
push
add
sub
push
add
adc
jg
xor
(bad)
movs
jbe
jno
mov
sub
mov
dec
loope
cmp
int3
mov
lods
outs
lock
lahf
adc
adc
sbb
cmp
fidivr
inc
fwait
mov
mov
xchg
das
mov
jmp
arpl
(bad)
fld
mov
ret
sub
lods
fisub
cmp
(bad)
pop
cmp
jecxz
movs
loopne
dec
or
add
fwait
pop
mov
mov
pop
pop
add
dec
jns
xchg
imul
popa
mov
sub
out
sub
mov
mov
dec
or
and
cli
dec
push
xor
mov
mov
pop
test
jecxz
daa
add
in
loopne
outs
lds
dec
pop
pop
mov
sub
xchg
ja
addr16
call
jl
js
push
cmp
mov
push
jl
push
loop
mov
dec
call
aaa
jmp
movs
mov
jl
daa
(bad)
push
mov
ja
ins
inc
and
pop
push
dec
adc
dec
mov
nop
cdq
and
or
in
cmp
jo
hlt
cwde
fsub
aad
dec
mov
adc
mov
mov
add
mov
call
imul
and
movs
jl
sbb
das
inc
xor
int3
lea
retf
sbb
fnstsw
push
aas
nop
rol
gs
lds
das
aas
daa
lock
fisub
mov
mov
popa
push
inc
test
(bad)
addr16
fdiv
cmps
mov
loope
or
out
xchg
stos
retf
mov
push
pop
je
imul
xor
int
stc
xor
xchg
push
adc
pop
dec
cs
and
pusha
and
test
mov
fs
fimul
dec
push
into
ins
cmp
mov
push
sbb
xchg
(bad)
out
and
fadd
push
and
imul
cmc
xchg
daa
mov
xchg
push
fucomip
sti
shl
mov
sbb
daa
shrd
in
mov
(bad)
aas
movs
jne
mov
xchg
pop
sub
loopne
mov
dec
mov
test
popf
mov
iret
pop
aaa
(bad)
cmp
pop
sti
out
push
repnz
js
pop
jbe
pop
push
ins
cmps
std
fwait
xchg
fucomi
enter
popf
dec
xchg
sbb
cwde
cmp
push
adc
mov
and
(bad)
mov
into
ret
ja
mov
jo
pop
(bad)
dec
jmp
push
call
mov
xor
mov
mov
sahf
enter
and
xor
out
ret
test
xlat
ins
inc
into
gs
cmp
or
fcom
add
jmp
std
mov
shr
(bad)
inc
imul
in
inc
pop
add
mov
mov
in
cmps
pop
sbb
jns
int
inc
ret
shl
ret
je
cmp
dec
ja
jmp
jb
and
sub
inc
retf
cmp
jo
dec
dec
cmp
sbb
jno
dec
and
mov
lahf
(bad)
inc
(bad)
lods
inc
fstp
sbb
adc
jb
stos
adc
es
ret
push
popa
jl
ja
xchg
imul
popa
cmp
mov
cmp
add
imul
dec
pop
push
pop
or
adc
adc
mov
pop
in
mov
push
in
pusha
push
lahf
pop
(bad)
adc
mov
dec
adc
mov
pop
ds
jne
jnp
lds
shl
arpl
or
aaa
xchg
sahf
daa
lods
inc
cwde
add
cld
sub
add
and
and
and
retf
pop
pop
mov
jno
jne
lock
mov
mov
fisttp
in
and
add
popa
stos
jne
(bad)
pop
fmul
fsubr
(bad)
fisubr
clc
xor
xlat
aad
out
jnp
(bad)
and
outs
pop
xchg
dec
sbb
and
mov
jo
jmp
or
je
and
xlat
test
movs
or
or
repnz
adc
pop
fwait
dec
pop
push
adc
out
pop
add
sti
or
jo
cmp
sti
sti
rol
scas
sbb
test
movs
lahf
mov
retf
outs
ret
aam
arpl
dec
call
inc
jecxz
ror
test
xchg
mov
xor
mov
hlt
inc
ret
jmp
jl
mov
jnp
in
(bad)
lods
stos
dec
scas
cld
cmp
fwait
mov
fiadd
lds
cmp
in
add
pop
inc
lea
pop
mov
out
mov
shl
add
pop
adc
sub
outs
or
rcr
fsub
jmp
push
cmps
inc
push
cmp
inc
lea
mov
mov
popa
mov
int3
cmps
addr16
xor
fisub
inc
mov
mov
(bad)
(bad)
adc
jl
mov
stos
dec
retf
and
movs
mov
mov
rol
lds
test
rcl
rol
adc
into
sbb
cli
jecxz
adc
jb
aam
mov
ror
push
dec
test
mov
cmp
je
mov
and
repz
jno
push
mov
or
push
mov
and
push
gs
scas
mov
xchg
jle
dec
mov
pop
cmp
add
and
ret
sbb
std
(bad)
(bad)
jg
lea
push
mov
add
addr16
cmps
fwait
call
and
cmp
sub
inc
add
movs
ins
cmp
inc
ins
imul
cmc
cmps
adc
dec
test
mov
lea
rcl
dec
lods
sub
nop
push
mov
call
push
jl
fsubr
inc
nop
in
sbb
in
pusha
inc
cmc
adc
mov
into
add
mov
bound
jb
lds
out
jbe
adc
adc
sub
popa
out
mov
ins
repnz
xchg
movs
add
cmp
stos
sbb
pop
(bad)
(bad)
mov
fld
cli
popa
add
cld
push
push
mov
cmps
lea
push
data16
mov
dec
xor
dec
mov
ds
(bad)
jmp
hlt
loope
pop
out
jg
push
mov
pop
imul
cmps
push
imul
dec
push
pop
mov
xchg
(bad)
lock
xor
push
pop
push
cs
adc
out
sub
add
test
cmp
out
inc
aam
sub
push
and
iret
pusha
mov
sahf
fcomp
repnz
xchg
push
xchg
ret
push
aad
push
(bad)
fidivr
cmp
push
mov
sti
add
mov
push
outs
ret
xchg
cwde
fisttp
adc
push
push
xor
ins
mov
inc
jg
pop
xlat
add
test
add
ds
fidiv
push
in
stc
rcl
clc
adc
aam
repz
jno
popf
bound
sahf
jle
pop
jmp
(bad)
fucomip
loope
jp
and
aad
push
popa
add
and
add
xor
inc
pop
movs
push
ss
fcom
addr16
and
mov
out
pop
mov
mov
(bad)
push
sahf
and
xor
leave
adc
retf
or
push
icebp
sub
test
mov
mov
addr16
push
cwde
fucomp
fmul
pushf
xchg
pop
enter
in
mov
add
mov
xchg
and
push
cmp
and
stc
and
jnp
sub
lock
shl
imul
cmp
or
inc
pop
sub
popf
xlat
fistp
sub
inc
fwait
mov
xor
into
jl
cmp
mov
mov
enter
dec
and
or
ins
dec
and
js
sub
jae
push
push
mov
mov
fcmovbe
push
bnd
fcmovnb
dec
out
inc
pop
jle
jge
mov
ins
out
add
aad
and
lods
mov
cli
das
sahf
mov
jbe
test
or
dec
vpinsrw
dec
xchg
push
jp
dec
loop
lock
pushf
imul
dec
and
dec
adc
mov
jecxz
lock
dec
sub
xchg
sbb
push
add
inc
sbb
jne
leave
jl
cmp
imul
fdivr
sub
pop
loopne
scas
dec
lods
leave
cs
rol
ja
hlt
rcr
fidiv
inc
xchg
into
mov
js
sbb
mov
jl
ret
sar
retf
(bad)
repz
inc
add
rcr
dec
add
xor
xchg
and
pushf
ja
mov
(bad)
ins
or
stos
or
ins
aad
call
nop
ret
push
xor
pop
aas
lods
repnz
imul
dec
sub
icebp
popa
xchg
js
mov
hlt
jns
mov
push
fwait
test
psllw
std
xor
pop
add
pop
mov
movs
xor
mov
jne
loopne
add
mov
jns
mov
pop
cmp
arpl
and
jge
movs
jo
mov
in
mov
adc
popf
jmp
inc
leave
mov
jmp
and
in
movs
int3
stos
and
inc
xchg
ror
arpl
pop
fdiv
inc
mov
in
test
inc
mov
mov
and
xchg
mov
pop
add
movs
pop
retf
arpl
sbb
xor
mov
aas
and
add
ja
jnp
dec
mov
add
xor
push
fs
out
fadd
jne
dec
ds
int
test
dec
pop
lods
lea
and
sbb
xchg
push
daa
push
fld
test
cmp
pop
not
jmp
mul
ret
mov
outs
repz
ds
add
push
cdq
jecxz
mov
bnd
repz
stos
loop
aas
mov
fidiv
mov
jne
jg
fdivr
or
cmp
aam
dec
mov
add
cmp
pusha
pop
leave
push
xor
sub
and
inc
ss
sti
jo
inc
add
sahf
cli
pop
push
in
ins
dec
loop
xchg
(bad)
adc
pop
or
cs
enter
jmp
fxch
add
fdivr
imul
in
hlt
nop
aad
retf
and
outs
cmps
xor
jmp
push
retf
adc
call
pop
shr
cmps
(bad)
dec
test
pop
jp
dec
mov
mov
xchg
mov
mov
iret
pop
jo
stc
pushf
retf
mov
mov
lds
ja
sbb
sub
adc
pushf
mov
sbb
mov
cmp
fst
xchg
sub
cmps
cmp
int3
into
stc
fld
bound
imul
leave
(bad)
push
xor
pop
add
daa
rcl
sahf
icebp
dec
outs
shl
lods
inc
ins
addr16
pop
scas
pop
mov
lea
sbb
(bad)
ds
mov
jle
retf
jp
lock
stc
xchg
pop
int
jmp
mov
sub
loopne
std
jae
mov
aaa
aad
jns
push
cmp
je
mov
test
jno
repnz
sub
cmp
shl
mov
mov
sbb
data16
iret
inc
dec
movs
cmps
inc
inc
call
into
mov
xchg
std
jmp
push
jmp
add
cmp
push
sub
jg
mov
sbb
jbe
fisubr
ins
inc
dec
out
in
jb
push
rcr
int3
aaa
jmp
aas
cmp
adc
iret
push
lds
dec
mov
mov
les
xchg
xor
out
mov
cmps
jecxz
push
xlat
std
fs
cdq
jmp
lea
pusha
inc
aas
xchg
xchg
popf
lock
mov
sbb
or
test
call
pop
test
ret
ja
fmul
pop
or
mov
xchg
or
(bad)
fimul
(bad)
pop
push
bound
(bad)
outs
daa
inc
adc
inc
aaa
and
(bad)
out
push
inc
adc
push
sbb
sub
push
xor
imul
sub
dec
mov
inc
popa
adc
xchg
data16
mov
add
out
dec
add
sbb
xchg
mov
push
jb
xor
mov
mov
imul
sbb
sub
sti
mov
adc
mov
mov
sbb
add
inc
adc
push
dec
adc
and
fdiv
mov
sti
das
or
jne
inc
fs
out
push
sub
pop
js
push
mov
adc
inc
cmc
push
mov
cs
dec
gs
scas
xchg
xchg
clc
rcl
sbb
sub
clc
lock
sbb
pushf
lds
xchg
retf
adc
dec
fs
push
stc
or
jp
pop
adc
mov
out
push
xchg
mov
aad
adc
jmp
out
mov
rol
pop
test
add
cdq
cmps
ins
std
inc
sbb
mov
inc
or
dec
push
imul
xchg
sbb
dec
xchg
pop
fbstp
xor
xchg
dec
sar
and
sbb
mov
in
and
es
push
test
pop
popf
dec
add
push
cwde
xchg
iret
int3
mov
cmp
scas
sub
mov
std
mov
lahf
mov
cs
pusha
std
jmp
mov
xor
sbb
jo
into
and
es
js
imul
mov
test
lods
(bad)
adc
mov
mov
ja
adc
sub
and
or
out
sbb
fist
and
push
jp
in
cmp
and
xchg
dec
je
(bad)
into
jo
imul
in
or
fs
nop
mov
or
or
pop
push
fild
and
stc
add
jmp
jno
fidiv
std
scas
(bad)
(bad)
cld
cld
test
test
mov
imul
dec
adc
xor
push
movs
fisub
aas
xchg
fisttp
int
mov
and
jnp
mov
mov
sub
jmp
mov
leave
fidivr
int3
xchg
outs
lahf
arpl
xchg
and
pushf
push
pop
out
mov
mov
jnp
iret
bound
into
sahf
test
test
jo
pusha
ficom
cmp
cli
das
ror
pop
mov
loop
and
add
jmp
(bad)
div
pop
pop
call
jge
mov
(bad)
imul
inc
scas
enter
push
sub
jns
das
ds
cmp
leave
data16
pop
inc
add
daa
pop
outs
icebp
enter
xchg
cwde
jmp
fs
fisttp
push
in
(bad)
loop
mov
cmp
sub
adc
mov
inc
cmp
cdq
in
mov
(bad)
push
cwde
pop
imul
mov
cmp
clc
leave
cli
mov
pop
cmc
add
dec
push
sbb
bt
addr16
dec
sub
addr16
cmp
hlt
and
sub
push
add
jns
push
or
daa
push
outs
add
and
pop
movs
pusha
aaa
or
sub
push
and
inc
cmp
add
iret
fsub
xor
inc
inc
sub
mov
rol
mov
push
cmp
mov
mov
adc
xor
push
mov
mov
dec
and
dec
test
lahf
popf
mov
xor
xchg
add
mov
lds
test
fimul
mov
jmp
pushf
push
ret
xor
jmp
popf
les
mov
(bad)
push
mov
test
call
stos
jmp
jmp
stos
enter
fst
shr
mov
cmp
jl
cmp
lds
sbb
lods
out
xchg
call
cs
int3
and
add
cmp
rcl
add
je
pop
fst
iret
mov
ror
mov
cli
mov
js
jae
fsub
cmp
push
add
in
mov
je
inc
mov
xor
(bad)
fs
test
cwde
loop
push
jne
loope
cmp
dec
ret
xchg
jle
jg
mov
push
push
sub
jecxz
cmp
mov
pop
fild
cs
dec
dec
pushf
push
cld
stos
xchg
mov
ja
out
aas
cmp
in
jge
pop
cmp
xchg
sub
pop
(bad)
adc
mov
ss
inc
inc
jmp
movs
cmps
cmp
icebp
jo
pusha
retf
or
das
stos
mov
mov
sbb
imul
adc
sbb
inc
outs
or
ja
jge
xor
les
pop
es
xor
jecxz
pop
add
add
leave
(bad)
mov
adc
and
aas
dec
mov
movs
xchg
inc
sahf
shl
adc
lahf
xchg
or
or
sub
fldcw
mov
mov
pop
pop
movs
push
pop
push
inc
stc
clc
(bad)
pop
mov
inc
int3
xor
rcl
xchg
sub
push
aad
xchg
inc
or
inc
in
cmp
pop
mov
iret
cmps
xchg
dec
mov
adc
jae
iret
dec
xchg
lods
push
and
in
cwde
sbb
push
inc
xor
loope
xchg
cmp
push
pop
jp
xchg
xor
sub
out
jmp
pop
lahf
cmp
jp
mov
adc
cmp
jmp
push
aad
mov
xor
ins
data16
jnp
scas
popa
mov
pop
fstp
in
ins
test
sbb
test
add
or
(bad)
cmp
or
xor
and
gs
jp
fidivr
addr16
outs
pop
jl
push
lahf
mov
clc
daa
push
(bad)
test
rsqrtps
pop
popa
mov
xchg
leave
cmps
outs
sbb
push
test
test
fdivr
and
cdq
(bad)
cld
ins
popa
inc
mov
sbb
ins
popf
sub
mov
cli
cdq
lds
inc
jb
xchg
fs
les
push
imul
retf
inc
push
mov
add
pop
cmps
iret
fadd
fwait
int3
mov
mov
icebp
xor
pop
ds
in
mov
xor
jmp
aad
imul
sub
xor
add
ret
enter
out
xchg
cmp
lods
dec
or
adc
xor
nop
inc
jnp
in
lock
dec
ds
popa
stos
fcmovbe
cwde
push
out
(bad)
aam
data16
mov
cs
push
adc
inc
adc
dec
jbe
pop
mov
xchg
pusha
push
sbb
sahf
or
mov
cli
xchg
retf
xchg
std
pop
inc
in
seta
cmp
ror
es
mov
cmc
es
jno
adc
inc
jmp
out
push
loope
push
push
mov
dec
bound
mov
pop
hlt
pusha
mov
dec
bound
fs
pushf
aam
xor
in
es
in
dec
sti
xor
cmc
xchg
xchg
movs
sub
jecxz
push
sbb
cs
fsub
mov
fisub
jo
cmp
(bad)
inc
in
jae
rcl
clc
xchg
xchg
(bad)
xchg
rol
pushf
jb
pop
inc
jmp
and
adc
xor
lods
cmp
popa
sub
dec
xor
sti
movs
push
ficom
ss
lahf
mov
fwait
mov
sub
dec
xor
or
loopne
loopne
xor
sub
xor
inc
cmp
jmp
jb
fst
loopne
pop
int3
mov
sbb
int3
mov
pop
adc
or
int
push
mov
sbb
stos
fsub
je
inc
stos
dec
mov
mov
add
movs
js
lock
sti
mov
(bad)
ja
inc
jge
shl
dec
ds
mov
push
jne
cmp
je
test
and
rcl
dec
inc
cmp
lahf
sub
mov
pop
dec
sbb
in
ret
xchg
jnp
mov
mov
cmp
xchg
imul
shl
adc
fwait
imul
xchg
in
ja
push
mov
and
test
inc
stos
aas
adc
and
pop
jne
dec
pop
data16
mov
push
pop
add
pusha
bound
adc
ss
pop
jbe
not
dec
daa
push
jne
xor
cmp
scas
mov
add
push
mov
aaa
stos
lea
daa
aad
dec
push
imul
enter
or
inc
je
cdq
imul
shl
cmc
mov
fisttp
scas
ins
pop
lods
vcvtsi2sd
jmp
jb
pop
or
dec
enter
es
arpl
(bad)
jae
loop
mov
(bad)
cwde
and
pop
fwait
push
add
pop
mov
fcom
ja
enter
inc
ror
jae
shl
inc
rcr
xchg
out
jno
cmp
scas
or
pop
jb
test
aad
push
sbb
sub
leave
cmc
cdq
push
dec
popf
mov
lds
js
xchg
add
ins
dec
sub
and
fild
shl
std
push
or
out
je
repnz
fistp
cmp
sbb
lock
jge
and
cmps
test
mov
dec
sub
fs
(bad)
pop
mov
and
fiadd
and
rcr
adc
into
es
aad
pop
cmp
xchg
cdq
(bad)
retf
ja
or
inc
mov
sub
add
sbb
sub
std
sbb
das
jge
out
or
aaa
inc
mov
repz
scas
loope
mov
outs
push
inc
retf
and
aam
pop
in
cld
dec
xchg
xchg
xchg
or
pop
adc
ins
scas
xor
mov
fs
add
xchg
mov
xchg
cwde
div
pop
xor
cs
fnstsw
dec
or
leave
nop
aam
stc
push
push
or
out
in
mov
sub
pop
jle
lock
ret
xchg
fdivr
(bad)
out
adc
cmp
jecxz
fwait
pop
mov
(bad)
mov
xchg
or
jge
xor
outs
in
or
xchg
mov
jmp
mov
mov
add
(bad)
clc
mov
inc
(bad)
in
fiadd
aaa
data16
shr
sub
sub
adc
push
sbb
add
push
xor
add
xchg
mov
sub
sub
popf
and
test
lock
mov
pop
out
jnp
sub
mov
push
dec
fstp
in
push
inc
call
outs
mov
cmp
mov
imul
les
outs
add
aas
shr
ins
mov
pop
xor
push
imul
movs
es
test
(bad)
dec
and
mov
fiadd
call
rcl
or
aas
mov
or
mov
sub
mov
scas
or
cli
in
test
ficomp
sub
sub
sbb
pop
pop
sbb
pop
int
and
sub
test
sbb
sbb
mov
stos
push
and
dec
les
dec
mov
std
cmp
scas
stos
jl
jle
retf
push
mov
xchg
mov
or
lods
ins
dec
out
dec
popf
ins
jno
sbb
cmp
xchg
shl
sub
ins
xor
push
test
xchg
and
int3
movs
test
sti
lds
push
or
xchg
call
test
xor
mov
cdq
(bad)
mov
cli
in
outs
xchg
out
pop
cli
mov
jl
pop
or
jg
into
add
push
repz
loopne
mov
into
(bad)
ror
ins
cmp
sahf
rcl
hlt
sbb
mov
xor
mov
sub
or
or
cmp
dec
xchg
nop
pop
daa
pop
mov
dec
and
jno
mov
mov
jmp
stc
cmps
xor
adc
aaa
sbb
and
loopne
pop
out
dec
pop
xchg
jo
xchg
pop
daa
stc
mov
sub
mov
loope
adc
pop
xor
adc
fild
mov
add
dec
shl
add
add
xchg
sub
rcl
or
pop
inc
aaa
push
mov
scas
mov
sub
jnp
xlat
and
add
push
jae
neg
dec
or
adc
mov
loop
call
dec
adc
pushf
pop
jmp
cmps
lods
pop
ss
leave
fisubr
sbb
push
pop
ds
adc
add
inc
mov
jns
(bad)
cli
mov
mov
add
mov
fs
popa
call
push
nop
sbb
mov
or
jne
scas
mov
or
out
jns
jns
xor
inc
push
ret
mov
and
shl
je
push
dec
or
or
xlat
das
retf
pusha
xchg
pop
rcr
add
pop
push
pop
or
xchg
shr
stos
ss
movs
push
jno
and
and
cmp
jg
loopne
mov
pop
cld
inc
mov
jg
cmps
cs
das
out
xor
scas
xchg
(bad)
fwait
add
xor
push
std
jmp
fcomip
nop
imul
lods
jg
std
push
inc
cmp
ret
pop
fisttp
inc
aaa
test
pop
fisttp
imul
ror
ins
iret
js
sub
xor
int
int3
xchg
dec
scas
enter
jb
jbe
cmp
lahf
ja
xlat
sbb
jbe
sahf
or
ss
or
xchg
aaa
dec
cmp
or
xchg
in
ret
mov
aaa
mov
and
lock
bnd
test
mov
sbb
mov
jb
outs
scas
mov
ret
jmp
xchg
ficomp
cmp
fsub
and
repnz
loop
inc
mov
out
ficomp
pop
dec
push
es
in
(bad)
jp
lods
fwait
dec
jmp
call
add
scas
ficomp
or
test
(bad)
repnz
(bad)
std
int3
push
iret
pop
add
mov
xor
push
popf
scas
leave
jno
sbb
cmp
mov
cmps
cwde
and
sub
test
add
test
inc
inc
and
push
sub
jno
pop
adc
jns
xlat
stos
xchg
loope
mov
lea
test
adc
sub
out
pop
inc
xchg
ficomp
adc
mov
xchg
add
out
fst
movs
hlt
or
test
ret
je
fmul
(bad)
jns
(bad)
mov
repnz
ror
je
int3
mov
or
or
cmp
ret
mov
cmc
jne
ins
dec
inc
sub
loopne
sub
sbb
fmul
fadd
ret
rcl
loope
pushf
jae
mov
pop
mov
jbe
inc
sbb
fst
fild
push
cmc
and
mov
xlat
sbb
xchg
xchg
mov
out
mov
sti
in
sub
ins
shl
push
mov
aas
js
adc
js
les
sbb
sbb
dec
add
je
xor
jbe
call
xor
out
ss
jmp
jle
sub
push
and
js
mov
rol
xlat
aam
sti
fnstcw
neg
shl
sbb
mov
and
sbb
sti
mov
leave
add
push
outs
je
add
movs
fs
pop
int
cdq
xchg
out
mov
in
mov
jge
ret
shl
ins
test
inc
cmp
jle
adc
sar
or
mov
repz
mov
dec
jge
je
mov
sub
and
and
sti
or
bound
ds
inc
cmp
xor
cmp
ins
adc
ins
gs
addr16
nop
jne
movlps
cmp
sub
push
xor
dec
call
cmp
scas
pusha
outs
jp
mov
cwde
movs
dec
call
call
jl
mov
mov
push
mov
fadd
mov
inc
gs
jmp
or
adc
cmp
iret
pop
mov
dec
mov
scas
call
xchg
cli
jnp
dec
movs
pusha
(bad)
in
jbe
lock
adc
xor
dec
(bad)
iret
es
ds
mov
jmp
jmp
fadd
mov
push
xchg
retf
into
and
enter
sbb
add
sbb
out
test
sub
xchg
adc
addr16
jle
mov
xchg
xchg
inc
fldpi
mov
lock
jns
adc
mov
mov
es
jmp
add
inc
(bad)
lods
mov
jne
retf
jle
popf
add
cmps
mov
test
mov
fs
jge
or
mov
imul
jmp
inc
mov
add
stc
jmp
or
out
pop
cmp
lock
stc
inc
and
jnp
movs
fild
dec
aaa
mov
adc
test
ror
sub
or
(bad)
repnz
div
movs
jl
or
fwait
inc
sbb
fsub
dec
or
sti
aas
push
arpl
(bad)
xor
sub
dec
in
mov
rcl
xor
int
in
std
mov
push
(bad)
jmp
hlt
sub
pop
mov
adc
sub
sub
mov
rol
stos
pop
xor
jg
xor
xor
adc
and
lock
dec
es
int3
repz
ja
pushf
mov
pop
les
loopne
stos
out
loopne
jo
mov
retf
aas
push
xor
pop
je
sub
cmp
adc
jae
ins
and
(bad)
and
scas
pushf
adc
lds
sub
movs
and
out
sub
sub
movs
fidiv
inc
cmp
jmp
push
sbb
jb
imul
out
scas
ror
lods
add
sub
cmc
imul
xchg
mov
pop
mov
add
cmps
call
ins
fsubr
mov
xchg
push
mov
imul
inc
daa
mov
adc
bound
rcl
cmc
inc
add
popf
mov
(bad)
pop
push
mov
aaa
inc
test
inc
clc
adc
mov
jno
pop
repnz
jl
jbe
fisub
mov
ret
aas
(bad)
rcl
loope
xlat
mov
arpl
and
add
dec
(bad)
(bad)
sub
add
add
mov
pop
cdq
mov
and
inc
pop
xchg
mul
jo
sub
push
or
jno
int
aaa
or
or
mov
dec
mov
xor
cli
jmp
xchg
jno
mov
xor
cmp
imul
add
mov
sbb
aaa
pop
test
mov
call
cs
bound
fcmovnbe
rol
push
out
pusha
or
cmps
push
test
jbe
pop
cmp
add
dec
or
jo
repnz
add
or
gs
in
mov
lods
xchg
xchg
js
pop
jae
cmp
xchg
scas
sbb
hlt
arpl
push
sub
in
arpl
or
pop
inc
inc
cmp
jns
les
dec
retf
mov
arpl
clc
push
fcom
pop
rcl
cli
adc
sbb
mul
xlat
clc
push
and
mov
xor
imul
mov
cmp
push
push
and
test
lds
not
loop
cli
fwait
jge
pop
cmp
(bad)
outs
das
popf
sub
and
push
retf
add
(bad)
neg
cmp
mov
dec
mov
aas
xor
push
push
out
xor
jp
push
stos
mov
lea
daa
mov
ins
popa
and
ror
dec
ins
add
sbb
add
and
xor
lods
add
xor
cmps
mov
sub
cmp
mov
stos
mov
test
sbb
sbb
test
add
in
xor
pop
xchg
sbb
(bad)
cmp
aam
std
fild
pop
(bad)
cmp
popf
push
cmp
leave
pop
ror
pop
xlat
push
cmp
adc
enter
xchg
stc
inc
jp
arpl
cdq
enter
jbe
js
dec
dec
mov
int
aas
in
xor
addr16
cld
pop
mov
sbb
sbb
not
call
not
in
mov
cmp
cmp
jb
pop
int3
out
pop
sbb
ret
dec
popf
retf
pop
push
dec
sar
sub
xchg
int3
arpl
cmp
mov
cmc
xor
mov
inc
inc
int3
mov
fs
mov
jb
imul
jecxz
sti
and
push
or
xor
push
imul
iret
pop
ins
jae
dec
jmp
xor
(bad)
mov
jl
data16
into
sbb
out
jp
das
mov
or
js
sbb
sub
mov
dec
movs
pop
mov
nop
jns
jecxz
dec
sbb
xor
and
stc
or
push
sub
inc
(bad)
push
sub
adc
sub
rcl
xor
test
loop
pop
call
jae
ins
pop
imul
xor
ins
jl
stos
cmp
and
sbb
icebp
mov
rol
cmp
pushf
cmp
sub
les
cmc
jmp
jnp
imul
mov
xor
xchg
hlt
push
icebp
mov
les
sahf
sbb
cmp
sbb
test
addr16
push
test
popf
dec
xlat
cmp
(bad)
(bad)
inc
movs
cs
scas
dec
mov
inc
(bad)
pop
adc
cdq
or
adc
movs
cmps
inc
mov
add
lea
stc
out
xor
mov
cwde
mov
cmps
push
pushf
ret
cmc
and
leave
lea
mov
popf
xor
repz
leave
cmc
movs
xor
xor
imul
jb
pop
adc
cmp
push
ds
cld
xchg
xor
xchg
into
fdiv
jne
dec
pop
dec
data16
push
mov
int
push
inc
repnz
dec
push
and
adc
cs
loop
fwait
xchg
shr
xchg
mov
mov
mov
pop
dec
xchg
call
mov
ffree
jns
scas
pop
popf
daa
lods
sub
mov
fwait
arpl
mov
sub
xchg
inc
int
mov
arpl
(bad)
adc
sbb
push
xchg
ss
xor
mov
adc
repz
dec
mov
push
mov
scas
lods
pop
(bad)
fst
sbb
push
push
mov
repz
mov
inc
mov
dec
mov
fcomp
sub
sahf
imul
inc
sub
sbb
push
test
pop
aam
imul
sbb
scas
fisub
test
call
sbb
adc
mov
push
enter
jo
xchg
aas
ret
loope
push
mov
sub
icebp
mov
cli
fisubr
sub
jl
and
sub
fcomp
ret
(bad)
sub
stos
js
sbb
loop
leave
cmp
das
mov
xor
and
scas
fadd
jg
imul
mov
jge
fprem1
pop
sahf
cld
push
sub
jecxz
push
(bad)
ds
cli
fmul
adc
mov
test
sub
add
cwde
jp
jno
cmc
adc
into
sub
or
in
xor
mov
push
outs
fcmovu
dec
lods
pusha
pop
dec
or
daa
jno
push
ds
cld
(bad)
pushf
not
in
pushf
int
sub
xchg
stos
pop
push
cmp
inc
call
(bad)
dec
or
(bad)
push
das
jmp
loope
or
adc
jl
sub
xchg
mov
pop
adc
push
sbb
mov
lea
or
in
imul
psubq
inc
dec
test
test
and
pop
jecxz
jp
cmp
and
jg
sub
inc
aaa
lea
xchg
call
retf
repnz
dec
xchg
lods
icebp
mov
or
iret
repz
jl
mov
xchg
lea
daa
and
jbe
call
add
sbb
jo
shl
push
mov
bswap
pushf
dec
cdq
xlat
add
je
dec
sahf
add
out
cmp
movs
addr16
nop
scas
ret
stos
push
or
inc
adc
imul
ins
out
or
inc
lahf
iret
sar
imul
xor
fld
clc
aas
or
lock
pop
xor
cli
xor
mov
xchg
push
and
push
add
les
jp
stos
cs
sar
in
add
jg
enter
repz
jmp
cmp
loope
test
gs
stc
js
sub
in
push
xchg
add
mov
jmp
push
mov
imul
ds
jne
cmp
enter
xor
add
xor
fisubr
dec
addr16
retf
add
inc
imul
xchg
adc
pop
xchg
xor
mov
test
daa
sbb
xchg
mov
add
xchg
xchg
iret
(bad)
ins
loope
vpshuflw
push
jo
mov
xchg
les
ds
fwait
add
scas
sahf
sti
test
jmp
cwde
jge
aas
jg
retf
pop
jmp
das
jle
(bad)
push
arpl
(bad)
ja
(bad)
fisubr
adc
ror
shl
icebp
mov
adc
or
and
leave
mov
cmp
ja
ror
imul
mov
data16
add
xlat
add
mov
mov
call
icebp
dec
loopne
mov
inc
sub
mov
sub
out
int
addr16
xchg
xor
fsubr
rcl
je
outs
out
jb
push
and
jno
push
mov
bound
test
adc
inc
je
cmp
cmp
cmps
and
enter
(bad)
ffreep
or
pop
sar
es
es
popa
pop
or
ja
push
lock
mov
lds
fsubr
add
inc
mov
mov
sar
sbb
mov
jns
jmp
jl
lea
icebp
push
add
ror
jg
test
pop
xor
clc
ds
jmp
dec
bound
icebp
inc
push
imul
popa
dec
repnz
repz
pushf
push
sub
cmp
or
repz
cld
mov
fistp
mov
sub
iret
fcmovb
neg
(bad)
cmps
pushf
dec
aaa
jno
pop
dec
xchg
shl
xor
xchg
movs
sub
mov
mov
push
or
xor
loop
push
mov
pop
ins
xor
push
cdq
pop
icebp
test
clc
add
pop
cli
cmp
xchg
push
sti
mov
cli
ins
mov
popf
mov
xchg
add
push
adc
jnp
outs
jecxz
movs
xor
cmp
pop
stos
jg
clc
dec
sbb
adc
jmp
mov
loop
push
pop
and
xor
dec
movs
push
(bad)
sub
pop
jno
xor
inc
aad
xor
pop
imul
into
(bad)
daa
cwde
mov
push
les
jmp
jns
pop
stc
xchg
inc
or
push
mov
push
jmp
retf
push
aad
mov
fadd
mov
js
stos
dec
or
fcmovne
sub
aaa
mov
aad
fistp
stc
rol
(bad)
dec
in
push
mov
jns
es
cdq
and
cmp
cli
xacquire
adc
xor
mov
cmp
aad
mov
pop
adc
rcr
and
cmps
pop
sbb
and
outs
push
inc
mov
xor
test
jle
cs
addr16
bts
inc
cld
outs
inc
cmc
inc
xchg
sub
stc
and
lock
ror
test
add
gs
loopne
inc
cmp
xor
add
pushf
pushf
push
and
cmp
sti
sbb
mov
fs
or
out
lods
push
or
cli
test
push
std
js
xor
pop
rcr
jne
and
(bad)
xor
or
xchg
xchg
xor
ss
sub
icebp
add
adc
mov
jmp
push
jne
ficomp
jns
hlt
cmp
mov
gs
sub
test
outs
pop
call
imul
icebp
push
sub
js
cmp
ins
in
ja
sbb
sbb
ret
idiv
xor
addr16
sbb
xor
ret
in
dec
dec
sbb
inc
xchg
or
rcr
sbb
xchg
mov
nop
jb
call
mov
fprem1
fcomi
int3
xchg
mov
cwde
js
push
add
mov
fild
mov
pop
pushf
xlat
pop
push
adc
rol
into
sbb
cwde
mov
inc
movs
xor
pop
push
mov
out
cmp
pop
dec
clc
mov
cmp
xor
into
push
loop
inc
ins
xchg
xchg
add
cdq
outs
mov
fstp
ret
in
(bad)
mov
sub
test
pop
and
adc
jg
imul
iret
mov
cwde
adc
and
cmc
cmp
jle
outs
lea
inc
sub
sub
int3
inc
loop
cmp
data16
fldcw
mov
push
or
sbb
imul
xchg
imul
jae
test
inc
push
sbb
out
sub
mov
out
imul
rol
cdq
retf
gs
adc
out
add
push
enter
xchg
or
test
leavew
xor
fiadd
popf
call
pop
jbe
outs
(bad)
jge
lock
mov
add
aad
inc
xchg
cwde
push
xor
outs
mov
enter
inc
sar
adc
jbe
jno
adc
ss
adc
out
(bad)
dec
fwait
add
retf
and
(bad)
icebp
int
or
in
std
test
cmp
xchg
and
in
add
mov
xchg
sar
mov
pmulhw
int3
pushf
mov
add
retf
dec
loope
jmp
sbb
xchg
mov
mov
xor
adc
mov
xor
mov
adc
popf
dec
push
push
pop
dec
in
out
pusha
fnstsw
cmp
or
pop
loopne
pop
xor
cmp
nop
jno
fs
jbe
mov
jecxz
mov
aas
add
(bad)
dec
push
test
and
enter
ss
cld
pushf
adc
add
fld
push
jno
dec
jmp
pusha
cli
les
mov
mov
popf
fisubr
mov
out
xor
test
push
or
retf
push
or
adc
push
stc
in
adc
mov
and
xchg
xor
push
sti
and
mov
xchg
fdivrp
sub
dec
aad
pop
loopne
mov
stos
jecxz
pusha
adc
out
pusha
and
mul
dec
and
pop
inc
or
sahf
movs
(bad)
outs
dec
fs
outs
and
jo
icebp
cmp
push
jge
sbb
inc
jp
outs
loop
dec
stos
jns
ror
adc
inc
aam
popf
sbb
fimul
dec
dec
xchg
mov
outs
mov
push
mov
retf
mov
cmp
test
xchg
movs
das
push
adc
ds
push
ret
gs
ror
adc
push
jecxz
lds
aam
outs
mov
push
popf
adc
pop
(bad)
ins
sbb
jp
cwde
mov
fisttp
mov
xchg
outs
pop
pop
aaa
movs
pop
aad
xor
pop
in
pop
stos
sbb
in
pop
int3
js
mov
and
(bad)
arpl
xchg
pop
scas
and
ins
cmp
retf
in
mov
clc
adc
sub
cmp
push
psubusw
pushf
pop
push
adc
ins
mov
and
movs
(bad)
test
mov
inc
cdq
mov
or
rcl
cmp
out
adc
dec
push
cmp
fsub
push
into
pop
sbb
cmc
cmps
ror
mov
fsub
or
in
jbe
xchg
nop
shl
adc
jo
stos
dec
add
leave
int3
jmp
mov
add
dec
sbb
shr
cmp
rcl
ins
jl
push
pop
(bad)
or
sbb
call
fld
lods
ds
push
out
pop
jle
xchg
inc
test
(bad)
inc
sbb
imul
(bad)
pop
(bad)
int
ins
pop
lahf
mov
(bad)
in
add
jbe
popa
(bad)
mov
sub
and
cld
call
xchg
retf
xchg
push
cmps
mov
dec
push
jge
shl
ja
cmp
jo
lock
jne
push
mov
sar
mov
inc
adc
popf
jmp
cmp
and
jae
into
int
cmp
adc
xchg
sahf
sbb
lods
loop
retf
(bad)
pop
leave
push
mov
(bad)
mov
xchg
sbb
out
cli
jns
les
mov
imul
inc
fdivr
(bad)
fwait
es
cmp
xor
call
xor
aad
scas
lds
ins
dec
imul
pop
loop
or
gs
sbb
mov
dec
jo
fwait
sbb
push
std
(bad)
and
jmp
loopne
mov
arpl
movs
and
and
pop
inc
or
adc
mov
pop
fistp
jmp
xchg
cmps
pop
xchg
cli
(bad)
jmp
les
jae
int3
fcom
add
push
xchg
sbb
pusha
rcl
out
das
push
pop
fdiv
scas
fbld
enter
mov
cmc
data16
pop
into
xchg
mov
jecxz
lds
or
pop
mov
jnp
retf
out
mov
lahf
inc
jge
sahf
(bad)
test
rcl
and
sub
nop
mov
cdq
mov
stos
push
mov
ss
mov
out
mov
cmc
jmp
mov
cmp
les
mov
jne
jb
xchg
xor
pop
jne
js
and
add
sbb
mov
push
test
imul
mov
jmp
jecxz
jb
cmp
nop
ins
aad
in
xor
jne
test
inc
cld
xchg
data16
sub
enter
dec
mov
cli
idiv
sbb
and
jnp
mov
add
push
jg
popa
mov
mov
mov
lea
jne
push
ins
jmp
hlt
xchg
ja
aas
div
rol
xchg
ins
test
pop
imul
push
xchg
cmps
call
aad
arpl
(bad)
jp
ja
push
les
jmp
push
and
jle
in
js
gs
aaa
mov
cli
cmps
cmp
push
pop
dec
dec
push
into
or
jecxz
inc
fstp
pop
dec
cmp
std
cwde
movs
movs
inc
lods
xchg
sbb
bnd
inc
mov
ins
sub
arpl
sub
rcl
aaa
dec
xchg
div
pop
cmps
push
dec
iret
aas
mov
or
add
jb
lock
retf
loop
aam
mov
sahf
aaa
js
adc
mov
int
push
int
and
leave
icebp
sbb
movs
aaa
mov
or
jl
movs
sub
fcom
sub
adc
or
adc
stc
jns
xchg
(bad)
cmp
rcl
mov
dec
shl
dec
dec
push
xor
push
into
and
adc
pop
add
mov
xchg
jbe
in
pop
lods
jb
aaa
jne
mov
xchg
and
shr
mov
es
dec
in
sbb
sbb
(bad)
fisttp
inc
(bad)
xchg
jo
in
test
add
rcr
dec
call
sub
lock
adc
xor
fsub
adc
rcl
fs
push
into
stc
iret
outs
jmp
sub
pop
loop
or
and
js
fst
mov
sub
rcl
das
in
popa
and
daa
fild
mov
shr
cmp
cld
xchg
(bad)
pop
jae
rcr
sbb
jmp
dec
test
shr
cdq
mov
add
mov
mov
mov
pslld
dec
pop
mul
dec
mov
std
mov
add
scas
test
mov
xor
or
mov
into
fxam
push
xor
pop
jmp
mov
scas
push
shr
aas
inc
jecxz
dec
mov
jmp
jnp
movs
and
inc
and
leave
push
adc
pop
aas
adc
adc
push
ins
adc
mov
xor
mov
add
ja
add
mov
mov
jge
xchg
jle
xor
push
or
mov
push
and
leave
ret
cmp
stos
fwait
jbe
mul
loope
test
and
stos
xor
nop
adc
jle
push
call
sub
xor
es
push
popf
int3
cmp
push
jmp
(bad)
jge
ins
jmp
mov
jnp
sub
cmps
jge
dec
pop
clc
sbb
jle
mov
inc
mov
test
mov
shl
and
loop
push
out
pop
dec
add
fdiv
ror
test
fisub
xor
or
mov
mov
pop
das
call
mov
lahf
out
mov
jno
or
dec
out
mov
push
cmc
push
mov
jns
test
sahf
aaa
xchg
xlat
clc
in
sub
aas
jmp
int3
clc
icebp
mov
lds
scas
nop
(bad)
gs
or
xlat
mov
add
dec
iret
cmc
cld
mov
pop
sbb
cli
jmp
mov
test
xor
inc
ror
in
(bad)
xor
popa
jo
inc
mov
mov
out
pop
or
aam
and
fcmovnb
rcr
mov
jne
stc
sbb
jle
mov
rcr
orps
jno
and
inc
fsub
in
xor
enter
pusha
call
add
mov
push
or
adc
fcomp
(bad)
pop
cmp
mov
sbb
scas
ins
rol
mov
push
sti
mov
xor
add
das
pop
jns
or
ins
sbb
dec
lods
hlt
jnp
xor
mov
add
sahf
cmps
mov
(bad)
and
in
pop
sub
sub
push
lods
out
nop
js
sbb
ins
aad
in
fwait
and
(bad)
cli
inc
jmp
fs
fcomi
cdq
bound
dec
out
xchg
mov
mov
mov
add
out
rol
add
push
xchg
ins
stos
sbb
xor
ins
mov
and
shl
mov
jne
out
or
test
jno
out
hlt
loope
scas
mov
and
sar
inc
mov
add
mov
xchg
cdq
fs
add
jecxz
mov
sar
shl
push
cmp
cli
idiv
fdiv
aam
and
push
ret
je
inc
pop
pushf
push
imul
push
(bad)
xchg
dec
je
sub
lahf
out
jp
jge
fs
les
mov
mov
pusha
icebp
fiadd
sub
xchg
dec
xor
jge
jnp
mov
ss
xor
loop
and
lahf
or
aad
outs
push
loop
push
push
mov
ret
jp
mov
xor
mov
sub
dec
add
xchg
pushf
pop
and
add
mov
pop
call
icebp
inc
outs
mov
cmp
jecxz
repz
test
xor
in
fstp
cdq
sbb
push
dec
call
mov
data16
jecxz
sbb
test
ins
in
jecxz
ja
leave
mul
sbb
mov
and
int
push
jmp
stos
mov
sbb
jecxz
movs
jo
iret
or
cmp
shl
inc
pusha
neg
cmp
xchg
pop
xor
int
add
into
mov
cmps
mov
mov
lea
inc
les
add
dec
mov
int
ret
add
push
cmps
push
data16
pushf
cmp
mov
xchg
push
add
pop
das
or
xor
js
stc
cdq
nop
aad
rol
adc
add
cmp
mov
dec
stos
mov
stos
cmc
xor
(bad)
daa
jg
aas
lea
jge
xor
test
dec
dec
pop
fild
fimul
xor
push
imul
push
(bad)
adc
sub
xor
arpl
mov
movs
scas
xor
sbb
xchg
pop
movs
mov
fadd
(bad)
stc
sbb
push
sbb
ins
pop
sti
(bad)
sub
nop
adc
ss
jle
and
xchg
(bad)
dec
in
xchg
mov
call
push
lahf
daa
mul
mov
int
rol
cmp
or
lahf
adc
arpl
jne
(bad)
mov
adc
push
mov
ror
and
sbb
ss
mov
ret
mov
mov
leave
call
shl
out
std
stos
or
(bad)
sbb
test
jmp
addr16
into
push
lock
inc
mov
test
xchg
mov
inc
xchg
dec
inc
std
dec
out
in
leave
shr
adc
or
cmp
cmp
cmc
ja
inc
or
sar
sahf
lods
and
test
sub
sub
dec
sub
rol
jb
sbb
stos
(bad)
mov
movs
sbb
xchg
inc
int
fwait
jmp
pop
push
iret
cld
mov
mov
xchg
rcr
push
xor
cmp
cmp
xchg
imul
stos
bound
popf
aaa
retf
loope
sti
ds
imul
lods
jg
jno
aam
pop
aaa
xor
mov
shl
pop
xchg
ret
or
data16
push
call
cld
sub
cdq
jb
xchg
shr
jbe
push
stos
pushf
mov
mov
mov
inc
addr16
mov
sti
mov
adc
mov
lods
repz
pop
jae
and
inc
data16
das
mov
lock
call
fild
in
inc
cld
cmp
stos
into
push
inc
xor
dec
in
ins
fcomp
sub
xchg
cmp
inc
sub
(bad)
cld
jae
rcl
jmp
pop
add
mov
or
repz
dec
imul
adc
mov
shl
adc
rcl
inc
xor
icebp
std
adc
ss
xchg
(bad)
scas
std
mov
pop
sbb
and
push
push
xor
shr
push
je
or
adc
inc
or
int3
push
sbb
and
push
leave
cmp
inc
cmp
idiv
xor
ins
jp
ins
mov
jp
leave
in
fadd
xor
inc
loop
sbb
pushf
or
aad
xor
sub
mov
cmp
sub
fcmove
aad
push
adc
daa
jmp
leave
push
mov
mov
push
inc
mov
cmc
ds
retf
push
mov
sub
(bad)
adc
pop
cmp
icebp
mov
adc
nop
mov
push
push
push
xchg
imul
rol
xor
mov
std
rcr
and
jnp
repnz
and
or
dec
out
out
scas
pusha
imul
xlat
cmp
add
arpl
popf
or
mov
fbld
dec
(bad)
call
fst
ja
ret
jnp
pop
mov
cmps
dec
mov
out
sbb
xchg
push
lods
into
outs
sbb
sub
lahf
aaa
(bad)
and
push
xor
lea
cmps
mov
out
hlt
push
test
das
ror
ds
int
pop
mov
push
and
push
ins
add
xchg
loopne
add
test
repz
aaa
pushf
setb
cwde
cwde
cmps
pop
dec
std
ret
add
mov
adc
sub
in
nop
aas
sub
test
(bad)
and
fsub
rcl
jmp
ror
(bad)
(bad)
loopne
dec
aaa
retf
(bad)
and
pop
lock
dec
daa
enter
cmc
dec
sti
jno
add
xor
call
add
jmp
shr
cli
push
push
fild
xchg
daa
sar
rol
jnp
dec
dec
cmp
ss
in
xchg
add
(bad)
pop
jge
sar
pop
cmp
dec
adc
jns
mov
jge
repnz
call
retf
lods
mov
aam
mov
fdiv
mov
movs
ja
dec
out
mov
jbe
popf
mov
cmp
push
xchg
out
inc
pusha
add
jmp
adc
dec
push
sub
xchg
(bad)
mov
addr16
js
rcr
je
sbb
add
(bad)
push
sbb
shl
mov
in
mov
push
scas
nop
fs
je
call
jmp
mov
jo
adc
jecxz
test
pop
iret
xchg
mov
or
xor
mov
test
int3
or
xchg
push
pop
repz
inc
and
rcr
add
jno
push
ja
(bad)
stc
out
xchg
adc
inc
int
(bad)
scas
mov
jae
xchg
sbb
adc
pop
mov
pushf
mov
or
shl
mov
in
add
fwait
mov
jb
enter
cmp
sub
dec
jmp
jnp
lods
add
push
xchg
in
inc
pop
adc
cmp
and
icebp
xor
cmp
shl
lock
repnz
inc
sti
test
jo
jmp
vcmpngess
inc
push
das
xor
xchg
sti
adc
mov
(bad)
jns
stos
jno
sub
inc
bound
test
mov
push
movs
mov
clc
jp
cmp
mov
hlt
stos
mul
pop
ds
fsub
push
push
pop
mov
dec
cdq
cld
aaa
push
cld
add
mov
add
mov
adc
mov
or
xchg
mov
retf
sub
fs
mov
mov
out
xchg
or
ret
xchg
iret
fimul
mov
cli
and
pop
dec
mov
mov
daa
les
stc
enter
jmp
sub
outs
stos
lods
sub
dec
pusha
add
sbb
ins
test
adc
ja
cmp
retf
adc
icebp
aam
push
sbb
stos
mov
jg
adc
pop
mov
xor
mov
nop
jp
dec
xor
scas
xchg
stc
es
fidiv
xchg
jg
or
adc
ror
fldenv
dec
lods
adc
fidiv
in
mov
xchg
cld
sahf
and
add
lods
add
neg
mov
cli
loope
mov
test
pop
add
test
pop
gs
test
stos
lods
mov
cmc
fwait
repz
xlat
loope
scas
pop
into
adc
jge
ss
movs
push
pop
loope
pop
addr16
sub
cmp
or
mov
xor
sar
pushf
xor
and
je
or
pop
cmp
add
enter
xor
cmp
lea
push
mov
sahf
out
cmp
imul
xchg
add
mov
jmp
jle
and
mov
iret
test
jg
retf
les
jl
call
xchg
push
leave
sub
stos
ret
jmp
pop
jge
mov
ins
icebp
popf
mov
call
int
ret
cmp
loopne
push
pop
es
aaa
jl
fst
xlat
pop
in
sbb
je
jl
adc
in
test
xor
popf
dec
cmp
sbb
out
popf
and
fwait
jae
cwde
out
sahf
push
mov
test
ror
out
xchg
sbb
jp
or
push
or
in
imul
popa
cs
pop
aas
ret
jmp
and
retf
cmp
nop
fwait
bnd
imul
popf
mov
rol
(bad)
lock
pusha
jae
add
sub
adc
push
and
cmps
inc
xchg
push
repz
inc
test
test
pop
arpl
mov
fwait
mov
scas
ins
push
inc
jl
dec
movs
scas
and
pop
mov
adc
outs
cmps
sti
inc
fmul
(bad)
retf
arpl
jecxz
push
jp
jmp
mov
into
je
stc
in
shl
push
mov
mov
mov
xor
clc
mov
xchg
push
sti
adc
call
cmp
add
push
inc
es
leave
or
sti
or
jg
cdq
inc
push
and
(bad)
popa
mov
fidiv
les
sub
sbb
dec
and
inc
adc
sti
xchg
pop
lods
add
jne
das
icebp
addr16
dec
shl
and
lds
sti
jmp
jmp
dec
cmp
add
pop
(bad)
xlat
pop
mov
sub
cmp
or
sub
mov
movs
push
jl
mov
inc
or
ds
(bad)
add
xchg
ret
push
cmc
or
xor
xlat
scas
sub
(bad)
adc
fwait
mov
outs
fidivr
jb
(bad)
jb
outs
daa
pmuludq
aas
cli
push
cmps
add
jbe
fnstsw
gs
fwait
sbb
jmp
push
jbe
jo
pop
sub
push
mov
leave
mov
aas
xchg
idiv
pop
adc
xchg
cmp
scas
jl
lods
pop
xor
das
leave
pop
mov
ins
test
sti
loopne
ins
cmp
add
in
jmp
(bad)
cdq
popa
les
inc
xor
and
mov
out
adc
ret
pushf
and
inc
test
and
jno
mov
mov
movs
int3
dec
mov
movs
cmc
fwait
gs
add
xor
inc
repz
add
rol
or
push
loope
aad
or
push
lods
jmp
dec
xchg
loop
(bad)
jmp
mov
pop
shl
xchg
(bad)
pop
mov
mov
jno
(bad)
pop
popf
dec
adc
sbb
(bad)
mov
repnz
outs
xor
push
push
lock
out
inc
push
xor
cmp
xor
push
push
in
ins
js
out
and
movs
daa
add
cmp
test
jecxz
test
jle
imul
rcl
into
mov
(bad)
xor
sbb
mov
mov
test
cmp
fisubr
inc
cld
xchg
inc
xor
or
ret
rcl
xor
sub
es
mov
enter
shl
jne
mov
stos
mov
jecxz
or
xor
rol
(bad)
jp
das
shl
adc
sahf
ret
test
(bad)
sbb
or
add
xor
sub
fdivr
stc
jp
ds
dec
aas
cmp
jecxz
dec
sub
xchg
loop
push
push
movs
push
and
and
loopne
inc
cmps
mov
sbb
in
jmp
js
cmp
dec
(bad)
aam
inc
jbe
push
call
jo
xor
loope
ins
cmps
xor
cld
add
ins
jge
cmp
std
pop
xchg
adc
mov
mov
fisubr
repz
and
movs
pop
aam
stc
sbb
in
mov
cld
stc
rcl
sti
loopne
stos
cmc
or
cmp
ret
imul
jnp
dec
fnsave
xchg
and
xchg
inc
into
push
shl
data16
(bad)
jg
push
dec
iret
mov
lods
inc
adc
(bad)
jl
cwde
fs
repz
sbb
mov
rol
fwait
pushf
mov
mov
movs
add
cld
retf
inc
fstp
ret
adc
mov
and
sub
and
mov
cmp
lods
popf
mov
sbb
xlat
nop
lds
and
pop
fwait
dec
mov
mov
adc
test
data16
(bad)
outs
lock
xchg
inc
pop
cli
fdiv
and
js
cmps
scas
jmp
inc
mov
dec
stos
in
xor
iret
fnsave
add
pop
neg
movs
cli
xchg
inc
out
mov
mov
lock
not
pop
lods
fbstp
loop
dec
add
and
inc
movs
xlat
or
add
mov
ja
jns
jns
int3
in
stc
mov
mov
pop
dec
clc
rcl
and
push
test
pop
movs
outs
repz
addr16
add
mov
ss
push
and
mov
jecxz
retf
stos
cli
fmul
jne
fs
lock
movs
mov
stos
movs
adc
(bad)
jbe
jnp
mov
loop
or
adc
mov
call
jl
les
jns
add
outs
clc
test
add
push
push
(bad)
or
xor
loope
and
inc
pop
xor
push
mov
or
les
xlat
mov
icebp
adc
into
dec
mov
test
pop
and
xor
rcr
out
inc
mov
(bad)
and
jmp
repz
adc
(bad)
mov
sub
out
test
sbb
add
mov
dec
jb
icebp
stos
mov
jmp
leave
xchg
(bad)
sti
sub
shr
aas
neg
push
adc
sub
rcl
sar
jns
js
call
or
jns
fstp
pop
mov
sub
mov
sub
mov
push
pop
(bad)
div
jl
(bad)
loopne
cld
add
sbb
cmp
fimul
out
(bad)
out
ins
dec
sbb
mov
and
ret
mov
xchg
je
mov
in
cmp
hlt
clc
sbb
push
jne
cmps
cs
add
fmul
fldcw
dec
mov
pop
sub
fwait
or
xchg
pop
scas
(bad)
jp
sbb
clc
in
inc
cmp
add
aam
stos
cmp
out
call
cmc
and
jge
mov
push
sar
jge
xchg
stc
or
sbb
shl
hlt
mov
fdivr
sub
and
xchg
aam
arpl
stc
add
xchg
shl
jns
jns
add
daa
test
sub
push
mov
into
das
xor
cmp
retf
pop
and
test
adc
into
sahf
inc
and
or
add
lock
and
std
mov
xor
xor
enter
xor
mov
xchg
test
outs
repz
push
(bad)
xor
mov
xor
pop
pop
fadd
cmp
(bad)
daa
enter
stc
jl
int3
stos
(bad)
repz
cmp
jbe
cmp
jmp
out
inc
pop
je
fs
test
movs
sbb
out
loop
push
and
ret
push
xchg
xchg
mov
sbb
retf
xchg
ret
movs
loope
nop
pop
fs
shl
add
lahf
loop
inc
bound
inc
sbb
add
aaa
jg
pop
and
hlt
mul
jl
sti
ffree
shl
adc
mov
shl
xor
pop
dec
and
cmp
inc
scas
cld
xchg
jmp
ficom
add
mov
cdq
cs
push
push
(bad)
addr16
test
cmp
push
cli
mov
add
or
cld
(bad)
out
inc
(bad)
jo
push
popa
adc
mov
hlt
repz
add
movs
ficom
push
test
sbb
fisubr
pop
mov
push
inc
std
pop
mov
out
dec
xchg
pushf
mov
sbb
ss
cmps
jb
sahf
push
mov
arpl
and
fwait
sub
adc
push
(bad)
pusha
fs
es
mov
jge
ins
fs
aaa
or
nop
mov
ja
push
mov
push
pop
sti
scas
hlt
inc
stos
xchg
(bad)
arpl
sbb
mov
push
(bad)
jno
cmps
fwait
std
pop
sub
jbe
fld
stc
leave
out
lods
add
(bad)
mov
and
inc
pop
sbb
std
out
or
mov
shr
test
test
ret
in
pop
aam
(bad)
pop
loope
cmp
mov
push
into
xchg
test
fdivr
mul
push
lahf
addr16
test
mov
(bad)
xor
pop
out
nop
xchg
sbb
dec
xor
dec
(bad)
xchg
lds
mov
pop
lods
cmps
(bad)
out
fwait
in
popa
loopne
(bad)
jno
sub
xor
mov
mov
lods
xchg
inc
sbb
cmps
sbb
shl
imul
scas
stos
sar
stos
jnp
mov
xchg
mov
sub
push
or
fsub
inc
xor
inc
or
mov
jle
retf
call
popf
pop
and
nop
cwde
ins
and
ins
or
ins
add
outs
cmp
mov
arpl
out
movs
pop
pop
dec
and
dec
pop
ror
retf
mov
dec
fsin
dec
bound
out
(bad)
sar
ins
adc
test
(bad)
push
clc
fstp
jo
fdiv
or
jmp
adc
cmc
inc
jne
sub
mov
push
popf
jnp
xchg
sub
xor
push
mov
out
lods
icebp
jg
jns
inc
(bad)
fnstenv
into
cld
icebp
push
or
test
sti
xor
push
inc
dec
add
test
add
xchg
xlat
iret
lock
fptan
add
jecxz
pop
(bad)
out
(bad)
std
mov
sti
mov
loop
sub
xchg
scas
inc
test
jmp
popf
nop
mov
pop
push
mov
cdq
(bad)
hlt
ret
outs
cmp
push
ror
cmps
scas
cmps
outs
je
push
jge
xchg
and
push
xlat
fisttp
cmps
shl
dec
inc
int
pusha
add
inc
pop
fnstcw
fisubr
pop
cli
push
sti
lock
fwait
dec
jmp
inc
rol
add
ficomp
xchg
inc
adc
fisttp
out
jnp
or
adc
and
dec
sbb
jl
or
xor
adc
movs
push
xlat
xchg
jl
ins
dec
(bad)
sbb
repz
aam
xor
push
adc
std
test
mov
sahf
pop
cwde
aaa
mov
dec
cmps
in
mov
dec
pop
es
ret
xchg
scas
dec
mov
sub
outs
mov
xor
xor
test
leave
ins
add
imul
push
pop
adc
mov
xor
mov
movs
stos
pop
jmp
add
mov
mov
in
mov
xor
mov
pop
ds
inc
push
test
fld
adc
and
stc
popa
neg
mul
in
out
inc
montmul
cmps
inc
imul
jno
(bad)
push
imul
fstp
fistp
push
sti
std
xchg
mov
pusha
sbb
add
retf
adc
cmc
adc
pop
add
ja
out
pop
xchg
inc
or
out
cmp
lahf
leave
fidiv
les
stos
push
ror
xchg
movs
inc
mov
xchg
pop
fwait
stc
add
mov
sub
cld
out
pop
das
call
out
pop
outs
or
pop
je
aas
(bad)
mov
mov
popf
sbb
mov
add
or
mov
loop
cwde
out
icebp
fcom
test
cmp
call
nop
or
mov
pop
add
inc
stos
js
je
pop
inc
jecxz
xor
lods
rcr
or
mov
dec
xor
and
cmp
push
xlat
push
cmp
sbb
push
mov
push
sub
mov
xchg
ins
dec
or
mov
(bad)
dec
sbb
push
enter
call
arpl
xchg
jns
sbb
cmc
and
movs
rcl
or
sub
inc
movs
xor
bound
push
pop
sub
pop
add
xlat
mov
sub
out
cdq
loope
xchg
js
ror
test
fimul
sbb
ja
in
xor
sbb
fisub
cmp
fwait
imul
xor
xchg
fnsave
jbe
add
out
lds
mov
fistp
hlt
pop
(bad)
hlt
outs
adc
mov
iret
dec
mov
push
mov
jbe
(bad)
lea
and
in
retf
scas
and
inc
xchg
mov
or
adc
xor
dec
fld
retf
adc
jp
adc
test
jecxz
inc
fnstsw
ret
and
fs
ror
imul
mov
push
pcmpgtw
fbld
lahf
and
out
add
mov
xchg
inc
inc
repz
pop
inc
rol
je
imul
sar
xchg
or
dec
and
push
adc
pop
sbb
in
dec
idiv
or
jmp
cli
sbb
data16
mov
mov
push
movs
and
fsubr
cmp
sub
js
push
cs
ins
xor
test
push
(bad)
shl
movs
mov
fimul
retf
cmp
dec
or
mov
inc
adc
loopne
xchg
sbb
pop
fisub
fadd
jg
push
jmp
sbb
nop
mov
ret
fwait
or
push
xchg
lahf
mov
pushf
fnstenv
add
push
pop
ror
inc
lods
ja
dec
add
gs
inc
jne
lods
outs
xor
xor
pop
into
inc
or
sbb
ss
int3
jbe
sbb
push
mov
movs
daa
das
sti
push
into
push
sbb
push
popa
mov
mov
inc
arpl
cmps
push
add
cld
addr16
and
add
das
jmp
pusha
mov
sbb
or
in
setbe
inc
hlt
inc
mov
xor
pop
arpl
sub
popa
nop
inc
sti
sar
inc
push
lods
adc
stos
xchg
scas
or
mov
mov
inc
pushf
mov
mov
cs
push
xor
mov
or
push
leave
push
mov
mov
adc
xor
mov
retf
xor
lds
nop
add
inc
inc
pop
push
ret
push
neg
std
aam
jae
fwait
add
aaa
mov
mov
xchg
mov
dec
(bad)
cmp
sbb
jg
mov
daa
jle
jecxz
jle
adc
ja
xchg
push
mov
std
mov
or
out
jne
std
add
out
pop
push
retf
ins
ds
or
(bad)
aas
outs
dec
xchg
(bad)
repnz
in
mov
(bad)
or
xchg
fild
mov
int
ror
and
rol
push
add
sbb
add
test
mov
jecxz
and
shl
xlat
sub
and
and
jnp
push
jmp
xchg
push
iret
adc
push
inc
fisub
sbb
dec
and
(bad)
rcl
mov
ja
xchg
mov
hlt
xlat
out
inc
mov
jecxz
mov
out
ins
or
std
add
add
jge
inc
in
(bad)
out
bound
ret
out
dec
into
psubusw
test
add
gs
pop
rcr
sub
sub
add
add
mov
jmp
xlat
cmp
mov
cmp
movs
dec
sub
lods
mov
nop
test
out
xor
mov
repz
out
cmp
cwde
stos
sub
or
cmp
stc
lods
clc
mov
ror
pop
or
ret
push
sbb
into
adc
lods
add
int3
push
fadd
jo
mov
ja
vmovntps
clc
movs
fmul
cmp
push
add
mov
sbb
pop
shr
lahf
push
aas
das
mov
icebp
das
adc
scas
test
xchg
dec
je
cmp
mov
inc
scas
jmp
test
xchg
xchg
jno
adc
leave
sub
xor
aam
mov
lods
test
iret
sar
lods
out
inc
sbb
cwde
lds
int3
aas
push
je
(bad)
xchg
sbb
out
fprem
jo
push
icebp
cmp
(bad)
push
ret
cmp
sbb
adc
sub
pop
pop
xchg
loopne
aas
sub
(bad)
outs
call
and
jmp
out
mov
ins
sub
cld
push
ror
mov
sbb
clc
(bad)
call
ds
repz
sub
mov
(bad)
test
ins
xchg
das
aaa
jecxz
pop
fcom
jo
rcl
stc
hlt
cmps
mov
shl
mov
sub
inc
hlt
push
out
popf
mov
mov
mov
push
out
cmp
xor
and
ret
add
das
ror
aad
sub
cmp
retf
pop
cmp
shl
xlat
loop
aaa
xchg
dec
jb
jge
dec
call
pop
dec
shl
adc
dec
bound
mov
enter
cmp
mov
cli
push
das
mov
mov
adc
mov
aam
jecxz
dec
inc
inc
fs
push
scas
fbstp
lods
sub
jg
push
popf
lds
sub
mov
xor
cmp
dec
sub
nop
adc
fnsave
call
mov
jnp
int
xor
in
jl
outs
mov
push
loope
sub
or
jl
sbb
test
push
sub
pop
push
mov
nop
sub
jl
test
adc
lods
ret
xchg
cwde
enter
call
xchg
leave
pop
fimul
sbb
movs
ins
repz
mov
clc
lock
test
jmp
pop
shl
add
sbb
mov
popf
sub
jne
(bad)
cmp
or
(bad)
sub
dec
mov
sbb
dec
test
pop
jmp
mov
cwde
dec
mov
cli
enter
jno
cmp
xchg
int
sub
sar
outs
(bad)
(bad)
xor
sbb
jae
pop
add
in
stc
adc
lds
popa
out
int3
(bad)
pushf
mov
stos
das
icebp
in
out
and
mov
pop
and
pop
mov
movs
cmp
int3
leave
pop
or
mov
popa
xor
lods
mov
addr16
test
push
retf
js
call
retf
dec
pop
(bad)
pop
das
push
pop
cmps
mov
inc
in
rcl
push
push
sbb
adc
scas
mov
shr
push
xor
and
xchg
je
inc
sub
mov
stc
imul
lds
jo
fsub
inc
mov
(bad)
mul
sbb
aaa
mov
ja
adc
repz
jle
enter
sbb
lahf
inc
push
rol
mov
ret
pop
imul
sub
(bad)
sti
ret
out
push
inc
test
in
adc
fisttp
fbld
out
sbb
mov
inc
sub
int
scas
sub
jns
movs
fdivr
bound
ins
sbb
sbb
in
mov
aam
ja
mov
jmp
and
ss
xor
jnp
call
pop
int3
xor
addr16
test
pop
add
xor
out
les
inc
xchg
iret
in
loopne
jnp
dec
fidiv
fwait
stc
fcmovbe
jmp
aam
shl
sar
push
enter
jl
(bad)
call
jmp
mov
sbb
icebp
imul
shl
jge
mov
jnp
pusha
ins
jns
lods
lods
hlt
mov
pop
bound
add
mov
lds
push
stc
mov
aas
dec
mov
cmp
ja
jnp
movups
es
outs
pop
inc
scas
adc
and
mov
ins
cmp
loopne
lock
daa
or
xchg
mov
enter
mov
fidivr
scas
inc
rcr
movs
push
pushf
mov
xchg
mov
add
jns
jo
jnp
dec
ins
ret
mov
or
mov
cmp
jmp
sbb
mov
sub
xchg
sub
aas
out
sbb
or
xor
xchg
ret
add
xor
out
addr16
out
int3
sub
sar
cld
cmp
or
jmp
dec
in
jecxz
mov
or
jl
shr
dec
mov
pop
jbe
mov
mov
in
mov
(bad)
(bad)
mov
or
popf
adc
daa
jae
ficom
adc
cmp
aam
mov
mov
xchg
cmp
or
aad
bswap
sbb
push
ds
and
sub
cmc
mov
stc
dec
mov
ret
inc
pop
cmp
xor
test
and
shl
clc
ret
push
push
mov
mov
mov
sub
dec
push
jp
sti
dec
icebp
call
rol
enter
mov
jle
xor
adc
xor
cmp
(bad)
in
cmps
and
mov
fs
push
arpl
(bad)
pop
xchg
xchg
mov
not
jnp
arpl
push
test
mov
sub
sub
pushf
jbe
adc
pop
imul
les
popf
adc
push
add
stc
inc
test
sbb
ror
adc
nop
xor
pop
bound
pop
mov
inc
and
or
fcmovnu
fmul
scas
in
into
push
lods
es
popf
xor
inc
movs
mov
(bad)
mul
push
test
es
and
xor
js
add
push
mov
aam
add
sbb
inc
jbe
xchg
xchg
mov
(bad)
out
pusha
pop
out
push
xor
mov
cmp
arpl
dec
loopne
sub
pop
mov
cmp
push
mov
fs
mov
fcomp
mov
xchg
(bad)
in
jae
in
xor
mov
cmps
out
cmp
push
jae
jo
sub
cmp
adc
and
iret
xor
and
inc
test
(bad)
mov
not
lea
add
sub
leave
add
sub
fsub
or
js
cmp
xchg
push
inc
mov
or
mov
mov
aas
jb
sub
lods
cmps
add
push
mov
or
mov
mov
cmps
mov
lock
mov
mov
jge
xor
xchg
es
dec
jb
xchg
shr
and
imul
inc
pop
adc
addr16
nop
jmp
sub
sub
mov
addr16
ins
js
sbb
dec
fstp
cld
aam
aad
scas
shl
inc
lds
daa
xchg
(bad)
jnp
cdq
fcmovu
inc
out
es
fld
ins
jmp
scas
push
inc
or
push
stos
icebp
mov
fsubr
or
adc
pop
mov
or
pop
outs
pop
sbb
pushf
cmp
mov
sti
outs
out
sub
fs
sub
bound
or
out
stos
inc
mov
js
dec
xor
or
fwait
mov
nop
push
pop
outs
xor
rol
aaa
push
in
adc
mov
shl
stc
add
leave
je
dec
pop
mov
int
pusha
daa
std
inc
sub
mov
in
fisubr
test
(bad)
mov
and
xchg
ins
call
or
in
jle
lods
mov
retf
sub
aas
adc
sbb
mov
mov
mov
jg
daa
in
add
jne
std
push
mov
xchg
xchg
or
push
in
in
inc
call
xchg
or
out
sub
mov
fdiv
push
punpcklbw
and
js
add
xor
add
cmp
aaa
jno
or
push
push
add
sbb
(bad)
jle
jge
mov
push
or
push
or
aaa
push
push
and
mov
(bad)
es
pusha
add
repnz
jae
addr16
mov
xchg
fwait
ds
lods
cs
xchg
fs
les
ja
(bad)
das
push
imul
call
mov
mov
or
push
add
lods
idiv
mov
icebp
or
fsubrp
lds
(bad)
push
push
out
dec
dec
dec
adc
xchg
lahf
(bad)
push
in
pusha
movs
out
jbe
lods
mov
frstor
(bad)
xchg
cli
or
cmp
sbb
iret
ja
hlt
mov
push
rol
shl
scas
ds
fsubr
data16
mov
rol
jnp
popa
push
push
sar
xchg
arpl
js
cmps
push
test
out
pop
and
or
outs
cmp
xor
jp
jecxz
mov
mov
ss
(bad)
or
cli
jmp
addr16
sub
mov
lea
push
sub
inc
sub
cmps
clc
call
mov
cdq
jo
fstp
aaa
sbb
or
cwde
fnstcw
cmc
adc
xchg
jno
sbb
push
mov
ins
or
xor
cmps
xchg
(bad)
cwde
mov
dec
add
loopne
bound
mov
shl
sub
(bad)
inc
push
mov
je
outs
xor
jl
(bad)
fimul
mov
nop
cmp
xchg
mov
mov
mov
aaa
mov
pop
out
jl
cwde
int
or
hlt
es
imul
clc
fwait
mulps
sbb
bound
dec
stc
pushf
out
lods
imul
pop
ret
movs
cmp
ins
or
xor
add
jo
push
mov
cli
das
in
rcl
ds
and
lock
test
adc
xchg
fs
test
outs
jne
add
in
pusha
add
in
ins
paddd
ret
xlat
cmp
and
pop
out
cdq
ror
test
pusha
jecxz
jno
xchg
scas
std
js
pop
loope
pop
fcom
into
mov
adc
cs
ret
test
inc
mov
mov
loop
and
(bad)
push
dec
jae
fisub
stc
jo
jp
ret
loopne
and
ja
xchg
ficomp
sbb
push
add
jg
lea
lea
outs
and
sbb
fstp
push
jge
repz
ss
ret
mov
call
sub
sub
gs
xor
call
inc
int
sbb
icebp
dec
(bad)
xchg
leave
ror
jmp
dec
gs
movs
xchg
mov
inc
aas
inc
pop
mov
cli
push
pop
rol
int3
call
cdq
push
add
mov
or
aam
sahf
adc
or
js
adc
jecxz
inc
test
dec
mov
mov
dec
xchg
shl
xchg
push
fidiv
cmps
dec
mov
(bad)
hlt
mov
cld
jle
mov
mov
jmp
or
inc
call
(bad)
adc
jmp
popf
adc
dec
jecxz
aam
sbb
ret
or
mov
dec
pop
dec
jns
mov
neg
das
adc
test
inc
cmc
test
les
inc
mov
rcr
inc
push
ret
inc
pop
xor
xor
or
mov
dec
aam
push
inc
stos
pop
pop
inc
push
test
clc
push
les
mov
jns
pop
mov
jno
test
scas
inc
jecxz
mov
pop
(bad)
stos
xor
dec
das
cli
inc
or
(bad)
mov
lods
xchg
into
jae
test
in
mov
cmc
xchg
in
outs
or
cdq
hlt
sub
mov
jne
and
mov
ja
sbb
inc
xchg
mov
mov
or
xchg
(bad)
xor
sbb
dec
push
scas
mov
mov
sub
popa
mov
sbb
stos
movs
popf
in
mov
into
mov
inc
fcom
fstp
push
mov
fwait
dec
push
pop
inc
mov
shl
mov
xchg
or
sub
or
mov
out
mov
psrlq
cmp
stc
dec
xchg
mov
out
clc
cli
and
cmp
daa
xchg
or
mov
test
addr16
inc
test
addr16
dec
inc
std
inc
add
xchg
outs
or
mov
loope
loope
cdq
cmp
rol
jmp
retf
xor
test
dec
stc
lods
and
aaa
inc
cmp
in
lahf
in
lea
out
enter
cmp
push
cmp
inc
push
sbb
lods
add
cmp
push
iret
jp
mov
push
xchg
adc
imul
les
mov
(bad)
in
sub
add
mov
imul
mov
pop
jle
mov
cmp
int
lds
(bad)
gs
sbb
es
pushf
sahf
push
js
test
pop
cwde
push
movs
inc
lods
jmp
mov
int3
pop
pop
test
inc
sahf
in
cdq
add
push
js
mov
cld
out
sbb
pusha
mov
repz
push
inc
push
xchg
pop
sbb
stos
mov
jne
lods
into
or
out
scas
into
sbb
push
inc
out
push
sub
aas
in
in
call
cmps
xor
cdq
inc
loope
sub
test
test
lods
add
lds
mov
movs
inc
test
push
pop
iret
xlat
mov
popf
pop
xchg
pop
aaa
out
xchg
push
test
and
mov
adc
test
jae
xchg
vpcmpgtd
or
hlt
fmul
xchg
imul
cmp
retf
call
inc
and
pop
adc
fsubr
fisttp
inc
inc
xchg
fchs
xchg
dec
iret
mov
adc
ins
bound
dec
and
lods
sbb
add
imul
aam
jae
test
pop
repz
lods
shr
jo
pop
les
jo
xchg
int
(bad)
sub
movs
scas
daa
jmp
loope
scas
js
cmp
xchg
nop
jg
mov
dec
mov
adc
jb
imul
gs
retf
enter
leave
pop
les
mov
xor
and
xor
fstp
js
jecxz
iret
es
cmc
rcr
lods
lods
movs
push
loope
pop
jg
jge
loop
and
adc
ins
mov
mov
shl
into
mov
(bad)
mov
jbe
pop
pop
aad
fwait
mov
or
push
imul
in
mov
sub
jo
sub
stos
pop
pop
arpl
xlat
jmp
aam
cdq
retf
cld
xor
jbe
hlt
add
push
shr
sub
addr16
dec
fisttp
cmp
cmc
push
shr
inc
loopne
push
(bad)
push
or
sbb
mov
fadd
xchg
(bad)
aad
hlt
jno
out
cmp
xchg
ror
mov
cmps
retf
mov
pop
lds
fidiv
or
adc
fisttp
xchg
pop
loop
xor
cmp
jp
stos
xor
sti
and
ins
dec
sub
mov
xor
test
push
or
stos
aad
cmp
movs
xor
cli
movs
aad
loop
xor
mov
js
cs
xchg
imul
or
jp
outs
jp
or
mov
ins
fs
stos
ret
push
dec
idiv
test
daa
mov
xchg
mov
mov
pop
cdq
fwait
sub
add
fs
sbb
jecxz
or
jle
sub
scas
icebp
(bad)
out
les
pusha
jnp
(bad)
into
iret
fld
and
jmp
cmc
shr
fadd
sub
cli
push
data16
dec
ins
inc
sub
(bad)
das
pop
repnz
stos
(bad)
(bad)
lds
adc
jp
dec
mov
sahf
xchg
pusha
sbb
out
cdq
and
fisubr
push
inc
jg
fucomip
push
add
enter
icebp
mov
add
mov
jbe
daa
dec
add
enter
loop
and
bound
pextrw
add
or
jo
lea
and
scas
jo
inc
adc
lods
sbb
or
shr
xchg
xor
push
aas
adc
cmp
out
dec
js
pop
arpl
jo
out
add
or
add
fcomp
sbb
mov
(bad)
cmp
push
jno
mov
movs
repz
hlt
pop
push
dec
pcmpeqd
fisubr
jne
sub
repnz
sub
jo
sbb
mov
js
test
jmp
pop
aas
jecxz
and
jp
ss
add
movs
mov
xchg
test
fld
or
fist
repz
fwait
aam
test
pop
cmps
dec
pop
mul
fdiv
push
pop
xchg
cmp
mov
jns
sub
pushf
dec
es
push
add
mov
sbb
jne
cmp
mov
push
ffree
in
mov
jmp
(bad)
imul
jg
dec
adc
stos
push
xchg
add
mov
movs
fisubr
enter
repnz
(bad)
push
or
popf
(bad)
jge
pop
jnp
sbb
pop
pop
mov
(bad)
(bad)
pop
inc
xchg
pop
mov
fcom
mov
(bad)
pop
out
xor
fld
hlt
stc
jge
sbb
mov
pop
cli
add
clc
gs
jecxz
test
lahf
jmp
add
aas
mov
push
push
je
int
dec
rcr
sbb
(bad)
sub
or
jno
gs
bound
arpl
es
inc
sbb
and
and
outs
outs
push
mov
sub
dec
xor
(bad)
ins
and
aad
shl
and
dec
inc
sar
inc
lods
dec
pop
lds
jg
ins
enter
out
inc
enter
call
test
xchg
dec
retf
imul
imul
pop
loop
fist
pop
sahf
mov
and
clc
scas
aam
sbb
aas
repnz
sub
loope
xlat
xchg
daa
cmp
jl
xor
dec
fcomp
leave
push
mov
xchg
or
cmp
jbe
cmp
xor
sar
addr16
mov
aam
dec
or
jp
adc
imul
das
aam
fwait
push
xchg
hlt
fnstenv
popa
mov
push
sbb
inc
pop
sbb
mov
jae
pop
imul
dec
jno
sti
adc
pop
push
lds
(bad)
out
popa
imul
sub
fiadd
jle
or
xchg
ret
xor
jns
stos
ja
std
lahf
xor
pop
loop
cdq
or
add
aas
arpl
adc
cmp
aad
lods
in
fnstenv
mov
loop
es
popa
jge
int3
push
and
mov
stos
dec
jmp
repz
icebp
je
dec
pop
sbb
ss
jno
ins
shr
push
mov
lock
cmc
mov
or
mov
in
sbb
push
ss
mov
jno
xchg
iret
jnp
add
mov
or
adc
pminsw
icebp
pop
adc
and
test
and
and
mov
pop
cmc
mov
adc
xchg
push
punpcklwd
mov
out
jne
aas
dec
jecxz
dec
(bad)
(bad)
cmp
xor
aam
outs
ins
mov
inc
nop
mov
call
lds
xchg
shl
jge
push
xchg
mov
jle
push
(bad)
jl
xlat
add
stc
push
sbb
addr16
nop
sbb
popf
test
jmp
dec
cmp
sbb
pop
je
mov
push
xchg
pop
lea
sub
xor
jmp
cmp
xchg
add
sub
das
out
xchg
and
cmp
lods
fwait
sbb
sbb
push
add
mov
mov
mov
cmp
and
or
push
mov
cmp
les
or
mov
dec
inc
fwait
push
and
loope
movs
jb
std
fcom
out
mov
push
pop
cwde
pop
call
fld
and
sbb
sub
xchg
dec
and
mov
cs
cmps
xchg
pop
(bad)
aaa
xchg
std
inc
in
fisttp
add
cdq
mov
adc
(bad)
mov
jns
mov
stos
push
fwait
jns
or
clc
fadd
ins
pop
scas
inc
inc
mov
jnp
fs
fist
(bad)
addr16
mov
ret
(bad)
fucomip
inc
cmp
sbb
aaa
jge
data16
and
not
call
xchg
sub
movs
scas
jmp
stc
mov
jg
mov
sbb
ja
test
mov
inc
pop
cmp
in
imul
enter
retf
pushf
sbb
inc
enter
inc
push
mov
scas
push
cmps
or
xchg
dec
push
jecxz
or
cli
jle
jge
sar
mov
ja
mov
jg
popf
iret
pop
fld
lods
sub
dec
jae
test
pop
out
xor
xchg
nop
inc
cwde
mov
or
mov
push
inc
movs
inc
leave
mov
sahf
cmp
xchg
mov
shl
repz
mov
cmp
add
fstp
mov
repnz
inc
(bad)
loop
ror
ins
imul
dec
das
int
lahf
in
push
aad
(bad)
pop
cwde
loope
or
mov
push
jo
pop
cmp
xor
cmp
sub
lahf
js
std
adc
mov
dec
and
test
ss
sub
es
cmp
mov
dec
cmps
sbb
fnstsw
lods
mov
add
mov
mov
mov
ds
xchg
push
test
or
shl
ss
or
(bad)
call
dec
call
push
stos
ficomp
xor
sub
ret
cmp
aam
bound
cli
ss
js
pop
pop
mov
jo
cdq
and
repz
mov
sub
sahf
dec
cmps
xor
ret
mov
pop
rcr
shl
xchg
test
test
or
jo
popa
iret
push
mov
cmp
mov
push
cdq
cmps
out
aad
es
xchg
xor
out
xlat
daa
xchg
out
push
pop
out
fist
mov
adc
ins
fs
or
das
sar
adc
and
fldpi
sti
sbb
pop
add
test
inc
sbb
fdiv
lock
inc
cld
leave
add
xchg
fadd
(bad)
rcl
leave
retf
repnz
fld
adc
mul
xchg
push
jl
out
fisubr
call
popf
icebp
popa
jmp
dec
mov
xor
and
fistp
sub
jb
pop
adc
push
(bad)
fbld
bound
push
ins
add
pop
sbb
jg
dec
xchg
out
xor
adc
xor
std
push
add
arpl
mov
scas
xchg
mov
aam
dec
fwait
ret
adc
mov
sub
shl
sbb
jg
mov
xor
je
cli
cmp
sbb
mov
xor
mov
jns
pushf
ds
(bad)
adc
out
mov
pop
inc
push
xor
xor
loope
push
pop
fstp
out
fnsave
int
outs
xor
mov
rcl
in
jg
nop
loop
xor
xchg
cmp
mov
push
jae
dec
mov
clc
aas
push
xor
repz
in
aas
fild
push
(bad)
(bad)
jns
cmps
stc
sahf
scas
jo
sub
sbb
cld
fptan
pop
cmp
xor
aad
gs
fld
xchg
cli
or
movs
inc
lahf
test
pop
push
in
rcr
pop
jg
and
sub
dec
ror
add
shl
cs
push
movs
push
or
sahf
add
adc
clc
mov
sbb
or
inc
mov
aam
movs
cs
xchg
mov
daa
mov
xchg
sub
mov
addr16
out
repz
sub
cmps
test
xchg
xchg
xor
mov
loop
lea
in
jbe
fabs
cmp
pop
or
mov
xlat
pop
mov
cmp
xor
cmp
jmp
cmps
scas
nop
push
jbe
dec
scas
lock
sti
sbb
adc
xchg
push
rep
ja
movs
repnz
in
xchg
add
test
xlat
inc
test
add
mov
fiadd
in
mov
xor
ror
int
add
int
retf
daa
(bad)
push
add
clc
or
(bad)
push
xor
lahf
mov
ror
pop
retf
pop
push
aas
push
fimul
cmp
jne
scas
inc
dec
repz
mov
xchg
mov
lods
and
push
jmp
ret
out
jg
sbb
jl
test
rol
sqrtps
mov
addr16
bound
sub
mov
ins
xchg
and
imul
test
and
inc
cmp
jecxz
pop
sbb
and
rcr
aas
and
pop
inc
push
test
and
pop
add
cmps
jb
shr
mov
arpl
sbb
push
repz
std
xchg
xchg
out
pop
adc
cdq
and
pop
dec
popa
push
pop
inc
sub
clc
add
adc
pop
ja
xchg
pop
je
adc
xor
pop
cmps
lods
out
js
das
call
fs
xor
pop
fmul
mov
jle
fcomp
call
mov
cmp
(bad)
in
mov
or
cwde
out
pusha
mov
leave
xchg
xchg
shl
adc
xor
les
pop
and
jae
xchg
bound
mov
das
add
cld
jb
inc
cmp
or
push
cmp
loopne
mov
adc
pop
call
(bad)
xlat
popf
and
fs
cmc
pop
push
sub
mov
int
(bad)
or
daa
jo
adc
std
inc
adc
mov
nop
add
sub
retf
in
cs
ja
push
movs
ins
xor
or
mov
(bad)
push
arpl
scas
push
adc
nop
pop
pop
ss
mov
movs
aas
mov
add
sbb
in
pop
mov
xlat
out
add
loope
mov
or
cmc
push
jmp
jb
loopne
mov
loope
lea
out
sahf
out
xlat
sti
jbe
fwait
pop
cmc
push
rcr
mov
mov
das
lahf
xor
mov
and
cli
adc
mov
int3
jo
push
adc
or
mov
call
addr16
movs
pop
int
jb
mov
pop
out
in
shl
inc
mov
adc
rol
and
movs
jecxz
and
dec
int
mov
dec
es
cmc
mov
cmp
xor
mov
and
not
(bad)
xor
mov
mov
or
jmp
pop
sbb
ret
mov
jns
retf
mov
ds
ds
push
xchg
outs
xchg
xor
adc
adc
adc
mov
test
cmp
in
push
clc
mov
cmp
or
shr
add
rcr
popf
jmp
dec
push
lahf
mov
scas
jno
popf
mov
retf
out
cli
ds
push
jmp
pop
in
loop
mov
push
or
adc
out
push
mov
inc
xchg
xor
stc
sbb
mov
push
push
sub
lds
fstp
in
xchg
repnz
js
lods
imul
xchg
std
inc
aaa
mov
xor
outs
pop
movs
repnz
into
fs
pop
scas
setne
stos
jae
jmp
call
mov
fidivr
xchg
cmc
iret
shr
mov
inc
hlt
popf
sbb
and
aas
adc
dec
push
leave
cmp
xchg
out
loopne
test
(bad)
ins
shl
in
pop
mov
int
lahf
push
es
aas
call
jle
fbld
(bad)
inc
ins
test
dec
dec
mov
mov
sti
or
pop
and
iret
jle
int3
push
jge
std
add
fbstp
jmp
pop
das
dec
push
fiadd
cwde
out
cmp
or
lds
repz
push
xchg
dec
call
fisub
pop
inc
(bad)
into
ret
(bad)
loop
movs
jae
addr16
adc
pop
xor
mov
gs
inc
mov
nop
push
aam
cmp
loopne
std
iret
lods
dec
add
test
add
les
inc
(bad)
inc
push
dec
mov
adc
mov
mov
into
adc
jne
ja
mov
jl
jb
sti
out
nop
mov
mov
retf
push
cmps
mov
dec
xchg
xchg
test
or
in
idiv
pop
jb
cmp
je
xchg
sub
push
dec
xlat
add
push
xlat
sub
and
jmp
cmp
outs
inc
cmc
add
xor
loope
push
arpl
outs
add
sub
push
test
nop
(bad)
xchg
int
add
xor
xor
push
or
fiadd
fld
xor
stos
xchg
add
inc
pop
dec
sbb
pop
cmc
xor
loope
push
push
test
mov
or
(bad)
jmp
jne
loopne
xor
je
and
stos
lss
adc
and
test
dec
dec
(bad)
jecxz
dec
loope
int3
iret
test
add
add
int3
lahf
aam
dec
add
test
jge
xor
mov
adc
xchg
adc
add
stos
mov
jge
mov
xchg
out
cmp
cwde
es
fistp
cmps
rol
inc
in
std
sti
mov
aam
dec
out
popf
fld
mov
mov
rol
sbb
adc
mov
inc
or
xchg
mul
call
add
pop
or
add
and
data16
es
sbb
loopne
(bad)
fmulp
sub
and
stc
lods
push
hlt
dec
or
mov
inc
dec
mov
je
adc
popa
mov
fxch
jb
sbb
cmp
les
aad
mov
idiv
out
ret
lods
push
mov
jns
sub
cmp
dec
pop
add
lods
imul
daa
xchg
adc
push
pop
inc
lahf
add
ret
iret
cmps
jmp
pop
fsubr
jns
push
sbb
fcom
(bad)
mov
stos
cmp
cld
sub
dec
inc
add
gs
or
xchg
mov
neg
or
fild
xchg
adc
mov
in
jne
add
inc
outs
rcr
push
mov
dec
adc
shl
pusha
cmp
pop
rcr
add
arpl
js
adc
push
jae
inc
and
mov
in
dec
pop
je
sub
inc
and
repz
pop
popf
sbb
push
aam
pop
jnp
jmp
ficom
icebp
test
movs
pushf
add
pop
loop
mov
pop
sub
push
in
sbb
push
inc
(bad)
or
addr16
scas
jno
pop
pop
test
(bad)
mov
pop
movs
mov
mov
js
jne
cwde
call
ror
repz
mov
xor
inc
pop
sbb
fidiv
dec
loopne
sbb
and
popf
in
sub
cmps
out
or
imul
push
lea
or
jecxz
inc
xor
cmp
je
mov
xrelease
ret
adc
(bad)
js
fs
inc
int
nop
sbb
outs
mov
addr16
and
sub
push
adc
rol
sti
mov
das
mov
xor
test
cmps
gs
xchg
loope
frstor
push
mov
loopne
mov
jl
dec
cmps
std
test
outs
jle
dec
test
pop
pop
repz
leave
outs
cmps
jbe
mov
cmp
and
(bad)
ins
pop
enter
jae
(bad)
and
fcomp
not
mov
gs
cmp
out
adc
jmp
mov
or
jae
inc
test
pop
repnz
mov
inc
ss
imul
fisubr
sar
add
std
pusha
inc
mov
lods
mov
in
and
fisubr
(bad)
push
repnz
pshufw
cmp
ret
pop
fwait
(bad)
fnsave
out
stc
(bad)
mov
push
mov
mov
stc
lods
push
int
test
jp
push
fimul
sti
test
mov
stos
push
xor
mov
mov
out
dec
or
push
mov
or
and
retf
call
rol
hlt
mov
jae
outs
mov
adc
out
push
dec
fsubrp
lods
or
lods
xchg
aad
addr16
imul
pushf
call
push
cwde
test
or
cdq
xor
loop
ja
sbb
gs
lods
(bad)
jmp
cwde
pop
shl
pop
cdq
pop
pop
pop
cmp
hlt
sbb
jge
cmps
cmp
rcr
cwde
pop
mov
in
push
ret
repz
mov
sbb
popf
lds
cmps
mov
pop
or
fcmovbe
out
mov
sbb
mov
je
xchg
adc
pop
idiv
and
sbb
retf
xchg
mov
pop
call
cmp
mov
push
or
test
jmp
push
pop
aam
xor
repz
shl
cmp
adc
cmp
mov
in
and
add
xor
data16
adc
inc
repz
cmp
aad
retf
hlt
pop
xor
mov
or
cld
pop
pop
imul
adc
push
inc
dec
mov
inc
inc
repz
pop
(bad)
jns
outs
add
jmp
inc
in
into
imul
cli
dec
ds
push
mov
dec
retf
fnstsw
jle
test
mov
dec
lods
pop
pop
or
cmp
xchg
(bad)
in
je
mov
daa
jp
sbb
inc
nop
call
nop
or
call
cli
and
jl
pop
jae
push
fmul
jns
fbstp
clc
or
lods
jae
mov
call
in
pop
mov
pop
jnp
inc
adc
push
add
push
pop
cmp
xor
cs
mov
inc
dec
rol
xchg
mov
(bad)
iret
dec
jg
dec
mov
cdq
data16
push
cmp
push
push
pop
ins
lds
dec
or
cmp
mov
loope
dec
push
xchg
or
ret
psrlw
cmp
iret
adc
add
imul
inc
fstp
mov
fbstp
jne
mov
jmp
push
sti
dec
sub
fwait
leave
xlat
das
cmp
jmp
dec
inc
out
loop
mov
or
data16
mov
push
jg
aam
mov
jmp
ret
mov
and
jg
mov
xchg
int3
lds
cdq
sbb
pop
js
loop
rol
aaa
dec
mov
inc
sub
retf
mov
arpl
inc
ja
sahf
lea
or
jno
xchg
lahf
dec
sbb
test
cmps
pop
fwait
mov
mov
add
in
es
mov
pop
clc
jbe
dec
xchg
push
les
xor
push
vmovlps
out
jl
mov
pop
(bad)
add
xor
rcr
dec
xchg
mov
or
sar
sbb
fmul
lods
dec
repz
pop
mov
rol
cmp
sti
cmp
mov
aas
sbb
mov
stos
rcl
ror
or
xchg
or
push
clc
aad
pop
dec
out
lahf
scas
sbb
aad
int3
jge
mov
pop
xor
push
addr16
mov
dec
imul
in
sub
inc
iret
fwait
mov
aas
sub
imul
rcl
mov
int3
xchg
cdq
or
mov
push
jo
iret
cmp
mov
add
repz
sbb
mov
push
xor
inc
ds
mov
dec
cmc
jl
mov
xchg
enter
xlat
inc
(bad)
sbb
cld
outs
push
add
jo
lea
fwait
rcl
xor
push
out
movs
or
pop
idiv
push
outs
xor
sub
jmp
gs
jno
and
inc
data16
pop
xchg
jle
dec
std
lods
(bad)
fidivr
pop
call
sub
jmp
sbb
mov
cs
pop
push
push
fsubr
leave
mov
or
rcl
sub
add
scas
nop
test
lods
push
push
inc
pop
aad
add
loopne
pop
imul
outs
(bad)
outs
and
inc
xor
int
cli
dec
sub
cmps
push
lds
cdq
dec
mov
jge
dec
jle
cmp
sahf
sub
mov
loope
in
mov
aaa
shl
mov
xor
hlt
or
out
xchg
add
lods
sbb
pop
dec
sbb
xchg
test
loope
xor
pop
adc
jo
daa
cmp
bound
inc
dec
pop
sub
mov
ja
fist
dec
cmp
sahf
push
mov
pop
mov
(bad)
out
pop
dec
xchg
mov
pop
mov
paddq
lock
test
retf
pushf
mov
push
fcmovu
mov
cmp
(bad)
mov
sub
repnz
xchg
cld
cmp
push
test
sbb
aad
adc
push
test
pop
test
cmp
(bad)
xchg
lahf
cmc
mov
xor
(bad)
aas
pop
lods
mov
push
ins
jp
sbb
in
loop
(bad)
arpl
jmp
add
and
out
pop
cmp
mov
xchg
cwde
jmp
nop
into
aaa
pop
clc
cs
(bad)
cwde
xor
adc
adc
and
jle
loop
cmp
push
xor
js
hlt
mov
scas
sbb
push
pop
inc
test
into
jb
test
sbb
int
xchg
push
mov
(bad)
sbb
or
jg
in
sub
jp
mov
outs
jno
aad
or
pop
push
retf
out
rcl
lea
xchg
sahf
rol
xor
ror
mov
imul
cdq
out
push
adc
repnz
inc
(bad)
ins
mov
ja
inc
iret
arpl
cmp
xchg
cmc
add
pushf
jecxz
jbe
cmp
push
and
jmp
cmc
cmps
fisub
jbe
leave
jge
aad
outs
cmp
mov
inc
int
clc
adc
add
mov
sar
mov
sbb
enter
cli
sub
sbb
jne
xor
or
out
pusha
push
jns
leave
add
mov
and
stos
mov
sbb
aaa
jg
jmp
sub
mov
daa
xor
int3
add
jae
pushf
int3
mov
cld
xor
jge
push
pop
in
mov
sbb
hlt
sti
sub
hlt
jle
iret
sbb
adc
cmp
mov
sub
sbb
xor
lea
and
lahf
loop
push
mov
out
dec
sti
outs
popf
popf
ret
fwait
dec
fwait
ds
mov
mov
rcl
sti
fnstsw
sub
je
sub
sti
adc
and
retf
cmp
stos
adc
data16
mov
sbb
cmp
push
dec
fimul
lods
adc
adc
push
jb
outs
sub
mov
dec
in
les
sbb
(bad)
push
stos
das
test
mov
fs
dec
jnp
ds
push
pushf
mov
mov
push
shl
aad
mov
mov
jbe
mov
pop
(bad)
retf
cld
icebp
shl
nop
dec
dec
or
ins
in
and
sub
sub
mov
rcl
sub
xor
hlt
cmp
(bad)
pop
lahf
adc
xor
fbld
inc
(bad)
xor
mov
add
or
das
nop
into
or
aas
push
popa
repz
adc
jno
ds
gs
add
ret
nop
repnz
sub
sub
xchg
sub
je
sti
and
sub
test
out
jp
(bad)
jnp
mov
stc
xchg
mov
test
and
jg
std
mov
push
fdivr
js
lock
js
lods
xchg
mov
inc
lods
aad
cmps
mov
pop
jle
xstore-rng
cmps
inc
cmp
imul
sbb
xor
sub
lock
mov
(bad)
cmp
shl
cdq
dec
cs
or
or
and
add
movs
popa
ds
movs
cmps
xor
mov
pop
sar
cwde
sub
jge
pop
push
push
sub
inc
push
push
and
jl
cwde
pusha
dec
aaa
movs
daa
clc
pop
pushf
adc
dec
(bad)
pop
pop
pop
int3
cmp
push
jmp
jb
jae
adc
lds
popa
and
sahf
fcom
pop
ror
stos
clc
xchg
and
and
icebp
cmp
mov
mov
por
cmp
out
(bad)
imul
sbb
aam
sub
mov
in
adc
(bad)
jnp
call
cmp
dec
cdq
xchg
dec
fidiv
cmp
lahf
mov
outs
shl
jmp
out
dec
movs
aaa
add
movs
cwde
sbb
add
imul
outs
test
adc
and
push
in
xor
pop
hlt
dec
fimul
cmp
jecxz
fsub
cmc
xor
jp
pushf
inc
jb
add
xor
cdq
cmp
mov
es
adc
aam
adc
sbb
cmps
mov
cwde
xlat
or
ja
mov
jmp
or
nop
out
pop
leave
aaa
icebp
jb
lea
mov
add
hlt
cmps
sbb
mov
dec
xor
mov
dec
or
ja
out
mov
adc
jmp
sbb
jmp
push
mov
mov
fwait
leave
int
fidiv
mov
and
pop
lods
adc
test
jae
or
mov
mov
sbb
fisub
call
scas
das
push
gs
push
xchg
add
sbb
ins
jns
scas
retf
and
retf
retf
arpl
sub
xchg
or
pop
add
jl
push
js
(bad)
jbe
push
bound
(bad)
neg
popf
movs
inc
jne
mov
loope
cs
aas
sub
aam
inc
cmps
pop
and
xchg
xlat
mov
adc
js
pop
call
into
(bad)
mov
ins
repnz
sbb
fidiv
jnp
ja
sub
sti
jp
push
(bad)
mov
mov
pushf
adc
fidivr
mov
mov
mov
popf
(bad)
xchg
xor
test
imul
mov
int3
or
jl
lds
sbb
imul
loopne
stos
test
inc
inc
dec
mov
xor
mov
jp
in
and
mov
xchg
or
add
mov
cld
sar
mov
xchg
or
and
gs
sar
add
pop
retf
pop
hlt
or
aad
ror
test
out
in
iret
lods
dec
ret
xchg
pop
or
inc
loope
push
add
test
mov
mov
xor
mov
imul
push
push
push
jmp
push
mov
adc
xor
pop
jae
imul
imul
jp
(bad)
and
fnsave
and
sbb
dec
fild
pop
aad
xchg
into
xchg
and
stos
pop
mov
in
jne
xchg
adc
leave
xor
ror
cmps
les
mov
mov
stc
iret
pop
jae
lahf
dec
lea
into
mov
in
sbb
fcom
mov
bound
cdq
xchg
cwde
jmp
or
dec
fnstcw
dec
mov
(bad)
xchg
imul
cs
jg
sbb
cld
fild
add
and
jno
push
in
lods
(bad)
in
xor
int3
rcl
mov
js
clc
dec
push
mov
jg
sbb
push
fs
imul
retf
cwde
icebp
shl
mov
mov
mov
sub
xabort
mov
adc
repz
adc
push
sub
rcr
es
iret
cdq
imul
jae
jns
inc
fnstsw
pop
in
in
ficom
inc
inc
adc
mov
(bad)
dec
outs
out
and
aad
jg
imul
mov
stos
loop
mov
jno
or
loope
sbb
test
mov
pop
cmp
jecxz
pop
xor
inc
std
hlt
fs
aas
scas
pusha
fisttp
retf
jae
ins
mov
aas
mov
sub
ins
cmp
pop
jle
sahf
dec
xchg
or
fidiv
shr
pop
in
daa
aam
stc
push
pop
lods
in
xor
mov
test
cmps
or
dec
cmp
imul
mov
cmps
test
daa
sub
push
leave
pop
mov
or
xor
scas
add
or
and
cmp
lahf
jbe
mov
jb
leave
sti
out
add
inc
sub
or
mov
mov
xor
das
jne
cmp
push
mov
retf
enter
jbe
inc
push
lahf
jnp
cwde
retf
call
adc
pop
push
sbb
dec
cmp
mov
push
xor
mov
xchg
call
dec
mov
fdivr
(bad)
ss
mov
push
pushf
dec
int
out
add
shl
in
pop
and
loopne
cmc
adc
mov
iret
loope
jg
push
jno
daa
mov
inc
rcl
adc
jno
dec
adc
ins
popa
test
jmp
movs
scas
cmc
jecxz
arpl
jnp
pop
cmp
mov
into
out
fcmovbe
in
adc
imul
add
dec
leave
push
pop
out
jbe
in
xor
inc
sbb
mov
xor
push
into
mov
nop
jecxz
aam
mov
das
and
xor
mov
jle
jae
inc
push
in
fdiv
dec
vfmsub132ss
jmp
sbb
adc
add
(bad)
mov
mov
repnz
pop
popf
out
cmp
mov
je
or
inc
in
cmp
sub
dec
nop
shr
dec
jno
cli
adc
in
pop
add
xchg
ret
fadd
jmp
mov
sbb
iret
ja
shl
popf
imul
mov
jg
dec
lock
jle
push
cmp
in
fwait
jmp
test
push
mov
ja
sub
pop
adc
adc
scas
jle
adc
test
ret
ins
ins
inc
loope
jb
in
jbe
push
jecxz
int3
push
cmp
mov
cmps
xchg
xchg
pop
nop
shl
xchg
xchg
adc
xchg
or
pop
jmp
jns
jae
inc
push
sbb
test
repnz
pop
mov
pusha
adc
and
arpl
cmp
fcomp
iret
in
lods
ret
cmp
fldcw
mov
mov
loope
pop
daa
sub
outs
fisubr
mov
aam
or
mov
xor
dec
xchg
cdq
daa
sub
push
aam
fsubr
pop
dec
cmps
ror
mov
mov
mov
sub
dec
test
push
push
test
ret
gs
pop
or
leave
or
aaa
sbb
cmps
fstp
and
sbb
mov
popf
das
cmp
dec
mov
int
clc
and
aam
dec
mov
into
add
xchg
pop
je
in
retf
dec
xlat
cmp
xchg
and
push
and
js
xor
rcr
or
aam
int
dec
push
cdq
jmp
xor
cmp
fistp
popa
sbb
dec
adc
sti
pop
shl
fnstsw
outs
push
ins
pusha
cmc
sub
loop
or
sbb
pop
ret
jns
(bad)
pop
xchg
cmps
add
sub
jo
fisttp
mov
and
and
retf
rol
cmps
shl
push
lds
sbb
lea
jns
sbb
mov
inc
dec
out
xchg
jmp
frstor
rcr
in
das
pop
data16
adc
repz
adc
push
outs
frstor
arpl
daa
inc
mov
push
sbb
fs
or
jl
pop
dec
sbb
sub
shl
jne
pop
scas
mov
pop
jne
and
(bad)
adc
outs
sar
in
cdq
(bad)
cmp
pop
sahf
cmp
loop
jmp
packsswb
outs
pandn
add
js
mul
cmp
fsub
(bad)
mov
add
stos
mov
pop
sub
je
mov
clc
(bad)
je
push
data16
sub
das
(bad)
or
cs
sub
ficom
das
jb
outs
ret
cdq
pop
pusha
clc
int3
and
iret
mov
std
jno
rol
cmp
xor
or
jae
leave
jnp
adc
dec
mov
lea
shl
scas
icebp
xchg
jmp
xchg
cld
pop
sbb
fisttp
adc
rcl
adc
xor
dec
cwde
in
pusha
fmulp
(bad)
cmp
mov
test
sbb
stos
sub
pop
push
mov
and
add
jmp
pop
cs
scas
popf
scas
retf
pushf
sti
dec
mov
out
imul
cld
sub
xor
dec
lds
ins
sub
sub
adc
add
sbb
mov
mov
jp
in
jg
gs
jge
or
xor
or
adc
xchg
ffree
scas
push
ja
inc
dec
add
add
pop
dec
cmp
xchg
push
fild
push
call
repz
fmul
gs
add
std
imul
pop
jg
movs
xchg
jp
lea
xchg
js
pop
nop
or
jne
xchg
sbb
mov
std
popf
pop
or
shl
icebp
cmc
push
int
mov
or
xor
inc
ret
(bad)
push
int
fbld
jge
lea
and
into
bound
popf
jb
adc
mov
and
adc
idiv
jecxz
out
add
mov
lds
inc
mov
push
xor
in
sub
scas
(bad)
mov
fld
out
stos
fiadd
ficom
loope
pop
xchg
jbe
mov
shl
mov
sti
hlt
cmp
sahf
mov
push
std
adc
xor
xchg
dec
cmp
or
lods
and
les
test
xchg
fidiv
sbb
sar
(bad)
out
adc
jo
pop
mov
into
push
inc
outs
or
popf
push
dec
mov
psrlq
mov
cli
adc
movs
cs
lea
shr
dec
sub
xchg
or
int3
ja
and
jb
sbb
ds
adc
mov
mov
fidiv
xor
sub
jns
aam
daa
enter
jbe
out
lods
in
mov
sahf
pop
cmp
daa
or
cmp
mov
mov
cmp
(bad)
outs
popa
mul
fs
push
stos
repz
mov
jmp
sub
ds
jbe
into
mov
mov
fidiv
push
adc
pop
movs
xor
sub
paddusw
dec
or
nop
xor
inc
inc
adc
loope
lods
imul
jns
stos
call
lods
sub
enter
and
mov
xchg
cmp
inc
and
mov
jge
push
dec
fmul
retf
push
test
call
scas
sbb
mov
jg
and
mov
mov
dec
fidiv
mov
test
inc
dec
imul
repnz
and
xchg
or
aas
lea
shl
xchg
pop
pop
aaa
sub
fwait
sahf
lea
add
data16
inc
xchg
or
test
xor
(bad)
push
frstor
mov
(bad)
pop
jne
pop
adc
pop
push
shl
(bad)
lods
movs
cmp
mov
xor
pop
shl
add
xor
jo
adc
ficom
int
retf
mov
arpl
xchg
sti
mov
mov
(bad)
ret
mov
mov
gs
sar
mov
lahf
sbb
push
push
outs
push
dec
or
loope
push
int
dec
push
fist
mov
jmp
aam
pop
add
cmp
stos
adc
retf
cmp
xchg
xor
mov
jmp
pop
add
int
iret
or
inc
cs
jge
leave
sti
adc
ja
lea
clc
or
jbe
xchg
mov
lahf
pop
adc
mov
retf
lods
push
mov
or
add
loop
fbld
cmps
sbb
movs
xchg
cmp
fisttp
mov
call
xor
ret
sbb
inc
cmp
mov
xor
xor
test
add
cmp
mov
jo
call
or
ins
sbb
out
aaa
das
dec
dec
mov
mov
mov
and
and
mov
ins
popa
pushf
icebp
imul
push
mov
adc
adc
popf
(bad)
retf
dec
push
or
shr
js
clc
int3
outs
arpl
mov
adc
loopne
stc
in
dec
mov
dec
fwait
sub
ret
or
add
jecxz
test
or
sub
xlat
xor
xchg
dec
or
shr
cmp
sahf
nop
jp
xchg
adc
cmp
adc
out
dec
adc
jmp
pop
pop
dec
sbb
mov
aad
inc
add
fcmove
adc
test
jge
sbb
es
loop
shr
shl
mov
(bad)
adc
out
in
cmps
mov
adc
mov
inc
and
push
mov
fs
mov
mov
mov
sub
out
pop
fcom
xchg
cs
push
iret
je
mov
(bad)
les
repz
sub
adc
inc
or
cmp
mov
fimul
inc
cmc
mov
ja
push
mov
pusha
xchg
adc
in
sar
out
rcl
(bad)
sti
jecxz
mov
dec
bt
pop
jns
test
movs
fstp
test
pop
sbb
sti
pop
in
adc
mov
fucomip
in
fld
jae
pop
sbb
test
repz
adc
push
in
mov
jne
jae
rcl
push
pop
adc
and
inc
addr16
pusha
aaa
sbb
jno
mov
in
cwde
lods
push
mov
stos
sbb
aam
dec
es
cli
jmp
push
xor
test
jnp
cmp
aam
jno
jmp
cmp
fmul
dec
hlt
dec
es
js
(bad)
loopne
dec
jecxz
cmp
push
sbb
imul
xchg
adc
dec
mov
lahf
lods
mov
mov
jo
leave
push
sbb
ret
xchg
div
and
or
mov
leave
jl
rol
into
(bad)
cmps
xor
jbe
or
(bad)
lahf
and
js
test
(bad)
loope
mov
mov
xlat
(bad)
ds
push
lahf
xor
and
cmp
movs
xor
xchg
test
jecxz
(bad)
mov
test
test
(bad)
mov
cdq
int3
(bad)
in
mov
cmc
xlat
jp
inc
in
sub
call
dec
data16
icebp
or
and
ror
xor
ficom
pop
test
sbb
sbb
inc
daa
jmp
frstor
sbb
mov
lock
sbb
pop
mov
das
call
xchg
in
xlat
mov
scas
jns
rol
das
cmp
mov
xor
cmps
dec
inc
xor
push
icebp
stc
shl
daa
pusha
idiv
arpl
mov
sbb
ss
xchg
sbb
cmp
pop
lods
(bad)
pop
cwde
pop
js
fcomp
out
xor
push
fstp
adc
mov
retf
pop
fistp
std
sbb
mov
jae
fcmovb
mov
(bad)
hlt
mov
je
push
rol
test
dec
sub
(bad)
daa
mov
xor
sbb
mov
xchg
and
dec
outs
js
jbe
imul
call
das
or
and
sahf
mov
pop
mov
xchg
test
xchg
mov
jg
mov
clc
enter
and
in
pop
sub
fwait
mov
(bad)
lahf
push
rcl
fs
or
fcomp
imul
jmp
ins
jp
xchg
ss
(bad)
fild
cld
push
call
repz
and
jg
xchg
push
iret
xchg
push
les
jb
and
stos
fbld
adc
outs
int3
cmp
pushf
ds
sbb
dec
into
jae
push
xchg
movs
jmp
aad
mov
mov
js
(bad)
ja
bound
repnz
jmp
cdq
push
jmp
and
std
jle
rcl
cdq
pop
mov
xchg
fsubrp
out
dec
fdivrp
lock
inc
mov
pop
retf
mov
retf
add
dec
aam
jo
aam
shr
lahf
test
cli
aam
outs
push
(bad)
out
xchg
mov
add
fcomi
xor
(bad)
dec
sbb
ja
inc
call
sbb
sub
outs
pop
push
jle
mov
mov
cmp
cmps
sti
call
mov
mov
push
xchg
sub
inc
sbb
into
arpl
pop
outs
jb
sbb
mov
xchg
(bad)
mov
enter
(bad)
setne
mov
pop
lea
repnz
push
dec
adc
push
pop
adc
je
cmp
jmp
xchg
sub
pushf
xor
not
push
or
retf
jns
out
lea
leavew
push
mov
push
sub
fist
jns
push
mov
dec
jo
pusha
test
imul
add
inc
push
jne
xchg
aas
loopne
cmps
imul
dec
mov
fild
mov
or
pushf
imul
std
adc
mov
retf
xchg
out
imul
call
mov
daa
pop
push
sar
out
and
xchg
xchg
sub
push
sub
mov
stos
sub
pop
mov
pop
sbb
ret
sti
inc
lock
adc
mov
add
jmp
enter
jbe
inc
push
cmp
in
sbb
sti
int3
adc
adc
ja
jmp
pop
rcl
call
jo
dec
repz
mov
mov
inc
push
add
jmp
retf
mov
jp
lock
dec
repnz
enter
and
sub
dec
push
rol
sub
rol
add
rol
imul
xchg
clc
add
mov
and
add
xor
call
popa
out
outs
(bad)
dec
sub
sbb
and
and
sub
adc
jmp
jb
out
add
cmp
add
sub
xchg
fwait
test
popf
xchg
aad
clc
sahf
outs
icebp
ffree
xor
aam
add
mov
add
and
nop
inc
mov
fild
bound
cmp
in
mov
call
add
loop
mov
lahf
sbb
loope
lods
(bad)
lods
pop
sti
mov
outs
(bad)
popf
rol
or
fdiv
add
pop
cmp
pop
in
jge
je
add
sbb
jno
sub
lea
add
mov
call
mov
dec
mov
stos
sub
adc
(bad)
push
(bad)
shl
cmp
or
add
mov
ins
sbb
and
fsub
outs
mov
mov
dec
mov
mov
popa
fwait
jb
xor
add
jne
imul
loop
in
in
js
sahf
popa
inc
aaa
cdq
inc
imul
mov
adc
jae
loopne
in
dec
inc
scas
dec
dec
mov
jne
loop
sbb
out
leave
je
gs
adc
or
pop
test
(bad)
das
adc
mov
daa
fs
mov
test
popf
xchg
cs
push
ds
add
or
mov
rcr
stos
sub
fmul
fcos
cmp
inc
fstp
or
movs
leave
in
jne
(bad)
in
enter
int
pusha
sar
and
int
push
xlat
scas
sbb
mov
ins
nop
xor
loopne
cmp
idiv
mov
cmps
pushf
xor
or
dec
jmp
rol
sbb
lock
mov
dec
dec
dec
leave
add
fimul
cmp
jle
test
loop
rcr
cdq
call
loop
popf
sub
nop
lea
adc
ins
mov
mov
jno
xor
pop
xchg
dec
les
push
push
sti
lds
lahf
pop
sub
ret
fs
dec
(bad)
pop
stos
lahf
loope
sbb
pop
into
cs
test
out
sub
jl
bound
popa
jp
pusha
sbb
xor
and
sub
or
bound
xor
movs
cdq
addr16
xchg
xchg
mov
retf
fild
push
inc
pop
sbb
repz
sbb
cwde
paddusw
ss
inc
das
in
push
repnz
mov
fdiv
cmp
inc
movsx
cmc
and
shl
outs
push
sbb
pop
mov
call
das
imul
jp
adc
test
(bad)
and
or
test
aaa
movs
sti
cmp
cmp
les
dec
mov
ret
test
cmp
add
rcr
sahf
push
call
cs
xor
sub
hlt
fs
jb
shl
loopne
mov
fdiv
xor
dec
pop
cmp
ins
in
(bad)
shl
pop
out
outs
popa
retf
mov
sbb
sub
push
jbe
fdivr
cmps
call
loopne
xchg
dec
or
call
mov
repz
ja
xor
pusha
aad
cdq
shl
xor
retf
sbb
lock
sar
inc
int
cmp
pop
dec
loope
scas
scas
repz
(bad)
sbb
jecxz
pop
push
mov
test
mov
outs
inc
ss
xchg
mov
xor
cmps
mov
enter
enter
sub
daa
mov
arpl
pop
retf
xor
inc
adc
test
adc
retf
or
cmp
and
dec
add
aad
ja
jmp
or
add
ja
(bad)
jne
or
jge
inc
mov
(bad)
mov
sub
iret
sti
mov
dec
push
(bad)
cld
es
shr
repnz
inc
jl
(bad)
pusha
into
popf
push
push
int
xlat
sub
enter
sub
lea
xor
enter
aaa
mov
mov
pop
lock
dec
adc
xchg
or
xor
aam
lock
loop
hlt
jb
mov
in
xlat
cli
outs
push
aas
mov
popf
test
rcr
fwait
sub
movs
adc
xchg
jne
enter
sbb
loop
jno
jl
les
mov
imul
sbb
mov
in
out
add
aad
jbe
scas
add
mov
cli
inc
push
push
je
cld
xchg
leave
je
cdq
mov
lods
cmps
or
dec
push
aaa
and
rcr
lods
xor
xor
leave
int
adc
std
mov
retf
call
pop
rcl
pop
dec
popf
push
pop
sub
imul
lods
icebp
sub
ror
add
nop
ret
test
cmp
(bad)
cmps
and
lods
mov
xchg
xchg
loop
sbb
xchg
dec
xor
dec
stos
stc
aas
fdiv
test
call
xchg
sbb
add
inc
(bad)
sahf
aad
and
inc
inc
js
fwait
test
ret
jecxz
push
popf
int3
je
shl
ror
outs
mov
cmp
cwde
(bad)
xchg
pop
ss
adc
(bad)
xchg
adc
push
jne
pop
mov
leave
adc
mov
in
out
xchg
fs
mov
fsubr
push
jle
mov
xchg
sub
jmp
sub
out
dec
mov
popf
pop
sub
xchg
or
pop
pop
sbb
sahf
rcl
fimul
push
jnp
sbb
xchg
call
mov
sub
cmp
inc
pusha
mov
not
adc
ins
push
dec
fst
std
(bad)
pop
xchg
cmp
jb
cld
mov
push
or
xchg
sahf
push
outs
xchg
push
mov
cmp
dec
xchg
ins
fs
cli
and
mov
stc
inc
push
cdq
aas
jp
mov
(bad)
jb
pop
push
out
out
cmp
test
adc
ret
mov
jecxz
pop
pop
shld
(bad)
test
mov
mov
jmp
scas
rol
add
and
add
pop
xor
inc
mov
or
cli
inc
aas
fcmovnb
jl
jp
(bad)
cli
dec
clc
mov
mov
imul
dec
jmp
arpl
aaa
ret
loopne
ins
ss
or
push
(bad)
int3
mov
repz
adc
hlt
repnz
push
dec
fimul
add
mov
xor
push
icebp
jb
mov
add
push
sub
jae
shl
test
sub
lock
lds
push
sbb
(bad)
iret
mov
and
cwde
je
imul
out
je
cmp
and
test
cli
sbb
loopne
xchg
shl
inc
call
cmp
adc
inc
rcl
inc
pushf
mov
fadd
je
or
push
jbe
out
div
in
lds
and
pop
jo
sbb
mov
imul
lods
mov
mov
jnp
cmc
xchg
cs
test
stos
mov
add
ja
add
popa
and
dec
bswap
cwde
inc
les
ins
fsub
data16
cmp
inc
clc
jb
jns
add
hlt
lods
(bad)
push
cmp
xor
retf
pushf
pusha
hlt
mov
aad
pop
(bad)
(bad)
(bad)
sar
add
and
out
aaa
stos
(bad)
in
(bad)
xlat
in
dec
mov
call
mov
dec
retf
sbb
dec
scas
ja
aam
ja
retf
and
lea
mov
lahf
pop
fbstp
loope
cmp
cmps
mov
or
imul
cmp
jae
push
lahf
imul
sub
das
cmps
int3
inc
pop
xchg
mov
inc
imul
cwde
call
adc
(bad)
jg
inc
jp
xor
icebp
lods
stos
sub
mov
cwde
mov
or
mov
fnstcw
mov
sbb
inc
cmps
and
adc
push
cld
jge
mov
fimul
add
scas
sbb
cs
aas
fidivr
mov
jp
jg
and
sbb
push
adc
fbstp
out
jae
fwait
mov
cmp
fistp
aas
dec
cmps
shr
(bad)
sbb
cmp
nop
call
addr16
push
push
sub
mov
add
mov
stc
das
inc
push
out
sar
pushf
inc
sti
lock
ins
(bad)
(bad)
jmp
dec
popa
mov
out
into
movs
int3
xchg
mov
mov
les
ins
adc
mov
dec
xchg
push
and
xor
mov
and
loop
ficom
sbb
dec
dec
pop
xor
test
inc
rcl
or
xchg
ret
(bad)
lods
cmp
aam
mov
xor
sub
sar
jb
xchg
fsub
pop
repz
(bad)
packssdw
cdq
aad
jno
js
out
inc
jge
mov
stc
sahf
push
jl
(bad)
into
lods
iret
call
mov
call
lock
in
retf
repnz
movs
adc
cmp
lahf
mov
aas
xchg
mov
mov
xchg
adc
icebp
mov
cmp
sub
scas
out
sbb
sbb
nop
or
pop
inc
jecxz
push
mov
fs
mov
cmc
movs
inc
xor
mov
and
xor
je
add
ret
jb
in
fsubr
mov
in
(bad)
hlt
mov
inc
repnz
out
pop
mov
in
shl
stos
(bad)
mov
xor
push
jg
mov
sub
and
data16
sub
xchg
cli
push
(bad)
das
push
cmp
sub
movs
(bad)
xor
fldenv
out
ret
lods
or
cmp
cmps
ret
lahf
fwait
or
jnp
jo
(bad)
and
sar
sahf
(bad)
pop
pusha
shl
cmp
and
xchg
stc
je
in
dec
jmp
cmp
mov
rcl
inc
js
add
push
ror
mov
jns
clc
test
int3
stc
sub
adc
retf
mov
imul
fild
mov
push
test
loope
inc
(bad)
ins
loopne
xchg
mov
adc
cmp
cmps
in
sub
or
jo
jmp
jmp
sbb
push
and
push
jge
mov
mov
bound
jl
(bad)
adc
aas
xchg
push
sbb
mov
push
add
sbb
xchg
jae
(bad)
pop
xchg
in
add
int
repz
inc
jp
mov
clc
sbb
movs
mov
pop
cmp
sub
sbb
add
out
js
or
js
mov
jae
mov
dec
fs
rcl
sbb
fcomi
xchg
inc
movs
nop
mul
jo
mov
mov
cdq
or
pop
loope
imul
adc
push
popf
and
fiadd
in
jns
pop
mov
sbb
push
ja
sti
mov
je
jo
fstp
sti
ss
out
adc
xchg
dec
inc
stc
sbb
cmp
dec
adc
stos
cmp
adc
lock
xor
mov
cmp
mov
xchg
pusha
retf
jmp
adc
or
hlt
mov
es
test
xchg
xchg
and
push
jmp
and
mov
or
jl
cmp
sbb
dec
fwait
xchg
push
int
xor
adc
mov
(bad)
in
dec
and
add
(bad)
pop
ins
idiv
inc
add
jnp
aam
aad
sbb
imul
shr
in
sub
or
fsubr
mov
in
mov
retf
shl
inc
push
repz
dec
mov
pusha
imul
dec
aam
jae
push
js
(bad)
into
movs
push
pushf
sub
cmp
jmp
test
pop
cld
out
jns
mov
ins
inc
dec
push
mov
pop
test
mov
sub
mov
or
movs
dec
in
fwait
sub
jne
leave
pop
les
sbb
or
in
xor
jecxz
cld
test
test
cli
xchg
xchg
jnp
retf
icebp
mov
jecxz
and
ret
jmp
mov
fcomp
icebp
rol
cmps
add
fiadd
and
test
pop
test
pop
inc
cmp
add
sub
dec
fcmovnbe
mov
pop
dec
pop
js
mov
xchg
adc
ja
push
pop
jge
mov
aas
jmp
xchg
js
test
inc
retf
or
and
push
xor
inc
sub
inc
out
daa
cmp
sbb
addr16
rcr
ja
test
jo
cld
pop
cmp
sahf
sar
jg
dec
rcr
(bad)
mov
movs
xor
retf
fidivr
mov
mov
pop
fs
mov
pop
adc
mov
mov
stos
mov
bound
cdq
repz
popa
mov
icebp
les
and
into
mov
test
shr
sub
mov
inc
arpl
scas
(bad)
gs
rcr
outs
push
popa
repnz
fsub
jb
xchg
push
ins
popf
pushf
mov
leave
cmps
sub
mov
fs
push
jge
popf
xor
dec
push
loop
jecxz
push
movs
test
dec
xchg
lea
fisub
inc
sub
or
stos
les
adc
test
sbb
jbe
out
sub
aas
cmps
lea
and
mov
inc
sbb
loop
stos
adc
push
push
cmps
outs
pop
in
and
adc
jp
adc
and
mov
jo
je
cld
or
pop
and
xchg
fxam
adc
or
jno
or
sub
and
lds
enter
fsubr
loop
stc
jnp
les
leave
or
add
jg
(bad)
adc
xchg
pop
jmp
or
icebp
xor
pusha
js
pop
popa
cmps
pop
in
mov
sub
mov
and
call
ret
int3
stos
lahf
rcr
mov
add
add
hlt
test
pushf
cld
adc
xor
add
fidivr
add
or
arpl
pop
adc
aas
sub
js
les
pusha
jns
mov
inc
ds
mov
cwde
mov
mov
inc
arpl
sbb
mov
frstor
loopne
repz
mov
fidiv
sub
out
cmp
icebp
cmc
sub
push
push
out
jp
mov
adc
jno
mov
mov
test
stos
pushf
cdq
ja
jno
push
imul
sbb
xchg
mov
pop
test
adc
jp
pop
pop
pop
mov
sbb
pop
adc
inc
hlt
sbb
mov
test
push
cmp
iret
jle
sub
loop
push
sti
hlt
cld
hlt
mov
push
cmp
pop
cmps
and
push
in
fisub
pop
jnp
inc
xor
cmps
rol
dec
leave
sub
mov
push
les
cmp
mov
sbb
popf
out
retf
cmps
mov
inc
dec
mov
or
mov
fistp
addr16
pop
mov
sbb
mov
icebp
pop
adc
rcr
stos
mov
sbb
cmp
scas
pop
add
pushf
fsub
bound
inc
cs
xor
pop
es
xor
push
imul
dec
add
jle
pop
pop
push
lods
in
cmps
lods
out
retf
fcom
ja
adc
mov
mov
adc
ins
das
cmp
sbb
pop
mov
mov
fsub
push
jmp
fdivr
pop
sub
push
jg
jb
push
adc
push
iret
xchg
mov
sbb
and
inc
rcr
gs
stc
pusha
int3
mov
(bad)
xor
out
and
lock
das
sub
jae
popf
pusha
mov
mov
xchg
dec
addr16
mov
daa
outs
scas
repnz
xchg
pushf
xor
in
adc
push
pop
mov
cmc
aas
sbb
xchg
daa
das
clc
cld
sbb
sbb
imul
mov
retf
jl
dec
loopne
adc
int3
jne
mov
adc
cwde
dec
test
gs
mov
add
sbb
jl
test
enter
mov
cmps
push
cmps
and
(bad)
sub
push
movhlps
push
daa
fsubr
inc
jno
mov
mov
add
loope
dec
mov
xor
test
sbb
icebp
jecxz
mov
fs
or
add
les
cmp
retf
jns
dec
or
les
fisubr
stos
xlat
(bad)
xchg
neg
jnp
mov
pop
fmul
pop
jbe
test
aaa
sar
sti
jmp
jl
xchg
push
or
jo
pop
lods
xor
fs
jnp
(bad)
jl
fsubp
fidiv
mov
mov
xor
dec
movs
adc
sub
cwde
stos
and
ins
jl
push
pop
int3
xlat
or
pushf
fsub
loope
cdq
data16
fisttp
scas
retf
ret
(bad)
cmp
imul
mov
in
fdivr
das
gs
mov
push
add
sub
test
inc
inc
push
pop
mov
repnz
scas
sbb
push
sub
inc
inc
add
aaa
jmp
or
fist
js
sbb
pop
pop
push
mov
fdivp
jne
out
jbe
hlt
stos
cmps
push
ja
aam
call
and
leave
ret
push
mov
sbb
fstp
xchg
cmp
mov
popf
pop
retf
dec
sub
cmp
xor
inc
and
sub
sbb
sub
adc
and
jo
imul
push
add
mov
mov
sahf
mov
inc
fdivr
xchg
jle
sub
adc
jnp
dec
xor
in
movs
xor
jb
dec
xor
dec
bound
fild
shl
mov
pop
lods
sub
mov
jb
call
mov
xchg
push
jae
fnstenv
and
js
jbe
and
xor
xor
push
push
mov
xor
les
mov
cmp
add
sti
push
(bad)
imul
jb
test
bound
call
jg
jb
ret
call
movs
push
bnd
fld
fstp
imul
push
dec
pcmpgtw
dec
xchg
addr16
movs
jl
aam
mov
mov
test
xor
aad
clc
add
sbb
mov
add
imul
test
mov
inc
pop
aaa
xchg
or
lods
imul
aam
add
xchg
call
outs
fmul
loop
xor
add
and
outs
jnp
adc
pop
cmp
in
xor
outs
neg
push
jmp
sub
push
xor
jle
shl
iret
(bad)
dec
arpl
sbb
or
int3
inc
adc
cmp
fxch
sub
mov
addr16
mov
push
push
adc
(bad)
xchg
pop
loope
mov
in
jp
sbb
cmp
enter
shr
rol
xlat
adc
(bad)
sbb
fstp
fucomp
cmp
in
call
mov
mov
cmp
mov
add
shl
loop
cmp
push
pusha
sub
inc
sub
mov
sbb
jecxz
mov
(bad)
cmps
sub
or
xchg
bound
xchg
mov
xchg
dec
mov
xchg
fld
ins
rcr
cmc
xor
xchg
bound
shl
cmc
mov
push
or
sub
mov
push
inc
jg
(bad)
xchg
add
mov
movs
daa
es
mov
add
inc
icebp
dec
push
daa
pop
(bad)
xchg
pop
push
ret
sub
mov
leave
xor
pop
xlat
sbb
sar
jbe
pop
in
arpl
movsx
and
bound
pop
mov
je
lods
jecxz
pop
mov
inc
retf
xor
iret
jl
pushf
sbb
dec
fidivr
sub
cmc
pop
xlat
adc
loope
inc
test
je
arpl
mov
sbb
mov
ror
sub
and
sbb
xchg
and
scas
dec
cmp
daa
xchg
dec
lods
lea
mov
out
cmp
lahf
xchg
or
test
call
sbb
mov
jmp
jecxz
cld
add
imul
push
pop
repz
rcl
and
jns
push
mov
jmp
pslld
mov
cmps
fwait
cmp
xor
adc
mov
rol
imul
cmp
lods
pop
mov
mov
push
bound
test
(bad)
std
ficom
lods
xchg
or
fstp
hlt
ins
addr16
cmp
add
or
ss
adc
or
push
jl
mov
inc
add
fst
div
dec
aas
xor
ins
xchg
mov
or
call
pushf
cdq
cli
and
cmp
jecxz
(bad)
jmp
sahf
mov
fst
or
(bad)
add
mov
push
mov
inc
(bad)
out
aas
mov
aam
(bad)
std
pop
iret
jle
shr
test
inc
ins
mov
pop
imul
push
jo
cs
ret
push
test
enter
rol
fsubr
adc
rcl
inc
jo
add
jmp
pop
sub
inc
fld
adc
push
popf
mov
pop
mov
jg
pushf
or
lods
jnp
mov
retf
lea
push
fcmovb
inc
mov
and
ins
and
sub
fcomp
mov
(bad)
lea
into
adc
(bad)
in
ret
stos
out
test
int
mov
in
push
leave
pop
push
in
and
ins
mov
push
sbb
fisttp
iret
pop
xor
and
test
xor
arpl
inc
add
(bad)
loopne
iret
sub
int3
lds
add
xor
lea
out
inc
fmul
jl
scas
add
cmps
test
adc
rcl
out
sti
imul
ins
test
mov
cmps
fwait
mov
dec
call
aaa
ss
fs
retf
dec
mov
sbb
push
cmp
mov
fs
sbb
shl
mov
ds
fsubp
and
fldenv
rcl
mov
(bad)
(bad)
fadd
dec
arpl
loopne
mov
aad
and
test
fld
pop
icebp
push
sahf
scas
je
(bad)
lods
sbb
mov
nop
mov
aam
data16
in
shl
inc
(bad)
fs
fdiv
je
xlat
jns
cwde
or
inc
mov
dec
ss
shl
xchg
lods
addr16
xchg
xchg
rol
mov
and
sbb
mov
and
adc
push
mov
(bad)
sbb
pop
loopne
push
pop
popa
scas
popf
inc
xchg
repz
or
push
sub
xor
xchg
pop
aam
inc
xchg
nop
mov
xchg
pop
mov
clc
icebp
cmp
sub
push
stos
xor
int
fs
test
add
xor
into
lock
mov
ret
dec
jb
ins
or
lods
loop
scas
dec
(bad)
cs
pop
mov
arpl
aad
sub
jne
(bad)
push
push
sub
(bad)
sbb
sub
cs
mov
dec
mov
mov
cmp
inc
mov
mov
mov
adc
jmp
(bad)
stos
dec
fcom
mov
ins
fild
xchg
lods
mov
pop
out
mov
pop
pop
ins
pop
jmp
lea
cmps
imul
mov
stos
std
push
test
mov
mov
xchg
mov
or
jo
inc
jmp
fdivr
inc
in
inc
leave
adc
es
repnz
jl
(bad)
repz
call
xchg
loop
fwait
push
cs
jl
add
xchg
mov
cmc
mov
mov
gs
shl
cld
push
leave
lds
pusha
ds
clc
sar
pop
pushf
xchg
pop
gs
and
stos
mov
jle
xchg
fst
pop
sbb
imul
adc
add
fnstsw
stos
scas
shr
push
dec
adc
push
retf
popf
aaa
xchg
xchg
cld
scas
mov
mov
adc
int
mov
mov
pop
push
div
ror
fbstp
ret
fld
lods
sbb
movs
nop
int
cmp
mov
into
sub
nop
xor
jno
and
(bad)
push
lods
sti
fwait
jp
clc
test
aad
xor
inc
andps
mov
mov
or
and
mov
and
lock
imul
adc
mov
(bad)
stc
mov
xchg
aam
in
xor
lods
mov
mov
adc
mov
sub
mov
cli
test
sbb
adc
sti
ins
and
outs
add
les
inc
in
in
mov
or
push
add
mov
ss
and
std
xor
addr16
push
iret
fcmovb
fs
sub
push
sub
cmc
mov
pop
adc
fsubr
push
jne
cmps
jae
out
xchg
sbb
inc
pop
inc
call
out
and
lock
fcmovne
jg
sub
test
hlt
dec
test
cdq
fwait
mov
shl
jno
mov
dec
jo
push
inc
mov
sub
sub
push
adc
push
pop
push
mov
stos
dec
and
add
jge
fdivr
lea
or
pop
call
jle
xor
cmp
mov
cs
movs
outs
lods
dec
add
adc
enter
add
ror
jbe
pop
lods
jmp
xchg
jecxz
in
stos
jns
and
sbb
les
xchg
test
idiv
mov
daa
out
imul
cmp
add
or
in
push
pop
xchg
xor
sub
cmps
cld
add
add
data16
or
xor
sbb
jmp
jg
sub
mov
mov
int3
gs
push
bound
int
movs
or
mov
inc
and
pop
inc
lea
jns
in
sbb
iret
push
popa
jns
xor
add
add
sub
push
cmp
push
mov
xor
lods
inc
ffreep
push
arpl
inc
ret
stos
fwait
xor
out
sbb
sar
xchg
sub
mov
fadd
clc
and
xchg
aam
icebp
fiadd
fldenv
adc
rcl
retf
js
adc
mov
test
dec
(bad)
lods
cdq
pop
imul
retf
lahf
popf
rcr
daa
cdq
and
aam
sub
sti
xchg
nop
xchg
dec
push
xchg
cmp
iret
in
cmp
js
popf
cmps
iret
sub
dec
jl
mov
mov
fisub
inc
out
fild
xchg
in
sub
jmp
pop
mov
and
nop
stos
rol
ret
lds
ret
sahf
in
fld
jne
mov
xchg
jge
je
cmp
stc
fisubr
sbb
cmp
repz
or
pop
idiv
ret
xor
(bad)
scas
nop
push
xchg
sets
mov
mov
adc
(bad)
sbb
dec
xchg
xchg
xor
dec
push
push
sbb
jl
lods
aaa
push
int3
xlat
inc
test
sbb
cmps
mov
jmp
xor
dec
inc
imul
mov
movs
ret
mov
push
rcl
pop
jmp
sar
and
movs
call
jge
adc
xchg
sbb
mov
xchg
clc
and
test
pop
pop
stos
push
sbb
cwde
jb
cs
add
cmp
std
pop
mov
(bad)
cmp
retf
push
lds
jb
rcr
clc
(bad)
rcr
push
xor
sahf
pop
push
iret
std
xor
(bad)
sub
stos
pop
imul
dec
es
push
scas
ficom
push
aam
bnd
aad
imul
daa
call
xor
lock
pop
jp
jbe
and
jae
jno
or
pop
fs
es
js
push
fst
xchg
fcomp
mov
not
or
jmp
mov
mul
cli
(bad)
jmp
add
clc
out
pusha
pop
dec
sub
movs
mov
pushw
cmp
imul
(bad)
fsubr
sub
dec
and
data16
(bad)
jno
out
(bad)
xchg
adc
push
xchg
pop
outs
pusha
xor
cmp
js
dec
rcr
inc
sti
sbb
push
and
aaa
loop
dec
(bad)
imul
mov
cdq
or
popf
ins
add
mov
push
push
mov
mov
rcl
mov
inc
ret
in
pusha
repnz
sbb
mov
stc
das
loopne
mov
pushf
mov
pop
(bad)
loop
das
jmp
sub
sbb
jmp
in
or
xor
shl
sbb
sti
jae
xor
aaa
std
mov
sbb
icebp
ror
jmp
daa
push
adc
not
not
and
in
lods
push
daa
xor
int3
punpckhdq
loope
push
loop
jle
nop
xchg
mov
dec
mov
(bad)
jl
lea
and
add
add
xor
dec
sub
jne
sub
xor
stos
jb
push
mov
sub
xchg
cld
bound
jae
push
imul
push
and
je
stc
enter
xchg
push
fisttp
jge
dec
sbb
cdq
push
push
dec
int
ins
outs
adc
inc
mov
jno
mov
call
adc
mov
pop
inc
idiv
xor
and
js
xor
pop
jns
dec
movs
or
into
hlt
pushf
adc
scas
adc
push
pushf
add
arpl
jo
popf
sbb
and
mov
cdq
pop
jg
jnp
imul
pop
push
mov
pop
sub
cmps
dec
and
mov
and
popa
(bad)
cld
and
pop
jne
neg
mov
lods
in
and
(bad)
jne
lahf
cmp
dec
iret
repnz
cmp
arpl
xlat
cmc
outs
mov
adc
cmp
mov
pop
imul
push
neg
push
outs
push
add
mov
les
call
xchg
add
mov
lds
sub
(bad)
mov
push
repz
jo
cmp
jae
mov
int
push
jmp
out
adc
jge
sbb
cmp
adc
cmp
sbb
mov
dec
(bad)
cmps
pop
jecxz
jae
dec
xchg
jbe
push
pop
add
mov
mov
fwait
sub
sub
fucomi
inc
cwde
xchg
push
add
jb
pushf
cmps
inc
mov
jbe
xchg
mov
icebp
mov
sub
cmp
xor
sub
mov
(bad)
jp
stos
adc
leave
loop
jmp
lods
rcr
stos
push
aas
jl
cs
lods
mov
sub
(bad)
fild
mov
inc
ins
loope
cld
std
cdq
pop
xor
mov
and
repz
push
sbb
mov
outs
neg
mov
adc
in
fs
fild
fwait
jne
sti
stos
mov
pop
add
aad
inc
mov
pop
sti
add
mov
jbe
push
rcl
test
mov
xchg
fstp
in
push
mov
adc
adc
(bad)
pop
mov
xor
push
jl
shl
add
inc
lahf
jno
aad
test
movs
mov
pusha
movs
cmp
push
pushf
inc
pop
movs
repnz
jbe
das
mov
mov
push
inc
mov
lds
in
fst
mov
pop
sbb
dec
bound
fcomp
out
out
jne
mov
xchg
inc
je
mov
pusha
adc
and
xlat
das
ins
lods
and
arpl
pushf
mov
or
adc
test
dec
adc
ins
pop
dec
jb
add
fistp
push
outs
jne
add
cmps
jbe
stc
pop
arpl
je
sub
sub
xchg
cld
dec
repnz
mov
mov
dec
push
addr16
lahf
das
push
xchg
sahf
sub
outs
or
jg
jbe
pop
aaa
mov
(bad)
pusha
loop
daa
dec
push
jp
sbb
xchg
pusha
mov
mov
(bad)
mov
xchg
test
add
hlt
cs
add
jmp
xor
in
xchg
inc
adc
test
inc
cvtpi2ps
and
add
in
xchg
xchg
adc
xor
test
iret
sub
popf
std
loope
cld
ret
inc
push
jmp
cmp
in
mov
push
xor
add
xor
sub
xchg
std
scas
inc
sub
mov
scas
data16
push
inc
jmp
jle
pop
aad
mov
nop
ins
mov
xchg
sbb
cmps
test
inc
dec
ret
sbb
mov
adc
out
test
imul
retf
js
adc
es
inc
pusha
(bad)
and
mov
(bad)
xor
loope
and
pop
pop
leave
std
push
mov
pop
or
inc
jmp
shl
sub
fsubp
push
add
fwait
dec
sar
sbb
mov
shl
or
call
lds
shl
ins
push
mov
sbb
jmp
into
inc
xchg
dec
inc
inc
mov
nop
mov
jle
mov
xchg
(bad)
lea
in
(bad)
js
movs
and
fs
jbe
mov
jl
loop
shl
dec
xchg
fwait
loopne
jns
cmc
cld
into
mov
mov
fcom
out
adc
adc
lods
cmp
add
repz
pop
push
mov
sub
out
pop
les
mov
movs
cmovne
dec
enter
retf
pop
stc
jbe
lods
dec
aad
jg
cmp
loopne
aad
ss
inc
inc
test
push
dec
cld
ss
(bad)
les
jmp
sbb
and
sbb
fstp
and
and
bound
inc
inc
fnstsw
pop
clc
cmp
push
jl
sbb
stos
pop
dec
in
imul
fdiv
add
sar
mov
mov
jmp
dec
mov
xchg
xchg
scas
jmp
xchg
mov
pushf
mov
lds
cld
daa
jp
hlt
mov
sub
inc
out
lock
scas
enter
not
mov
stos
mov
pop
sbb
repz
cmp
popf
xchg
cdq
sub
ds
scas
ror
mov
jno
add
or
lock
rol
mov
ins
sub
jmp
mov
out
dec
add
or
sbb
fimul
or
inc
nop
sub
mov
outs
or
mov
adc
inc
retf
sub
xchg
mov
leave
nop
mov
mov
out
lods
push
popf
jns
lods
in
add
or
test
jo
inc
repz
fimul
test
lds
icebp
data16
cmp
dec
push
pop
call
aas
xor
jg
rcl
aam
jp
mov
pop
xchg
sub
dec
lods
push
and
and
mov
out
cs
push
mov
or
loop
push
inc
and
cmp
pop
lea
xor
js
mov
or
js
push
fisub
xchg
adc
btr
dec
mov
mov
or
add
scas
push
add
sub
push
xchg
add
mov
sub
mov
push
arpl
mov
jge
ja
out
fsincos
fnstenv
loopne
ins
sar
mov
sbb
fsubr
cld
jp
inc
dec
push
rol
test
jnp
arpl
adc
scas
imul
xchg
ret
xchg
dec
retf
mov
sub
mov
call
(bad)
push
mov
shl
xor
and
mov
jne
in
ret
(bad)
outs
sti
mov
sbb
xlat
add
or
jb
ins
push
mul
mov
iret
push
sti
jl
out
daa
cwde
mov
add
imul
jmp
ja
add
sbb
mul
adc
test
xor
and
jno
int3
or
xchg
xchg
add
push
out
div
cmp
mov
in
rcl
xchg
xchg
xchg
sbb
popa
inc
loop
fs
test
repnz
pop
dec
dec
imul
mov
(bad)
in
outs
pop
jb
ror
nop
retf
pop
fcom
cmp
adc
mov
mov
stos
xor
icebp
fsubr
adc
int
repnz
imul
sub
add
(bad)
ficom
mov
xchg
and
cdq
fistp
mov
jo
jnp
inc
aaa
or
mov
mov
mov
sub
mov
jp
ds
ror
push
mov
les
leave
test
(bad)
jecxz
loopne
addr16
ss
rol
cmc
clc
ret
ficomp
xor
fld
pop
sahf
adc
call
rcr
mov
lods
sub
push
cmp
sub
ins
xor
ss
dec
jmp
jnp
shl
loope
xchg
cmp
add
push
jge
ins
jnp
jae
fsub
ftst
mov
lahf
mov
mov
ds
(bad)
sbb
xchg
cmc
test
mov
test
clc
or
mov
inc
sub
in
out
add
std
cdq
dec
cmp
pop
mov
js
and
cmp
and
dec
mov
cmp
int3
cdq
xor
mul
dec
and
rcr
dec
(bad)
or
mov
push
mov
cs
retf
add
push
lods
fdivrp
or
add
dec
(bad)
push
mov
ins
or
add
push
sbb
mov
imul
aam
jno
xchg
xor
addr16
or
ja
ret
pop
jle
and
jmp
jo
xchg
ss
in
xlat
push
aad
add
cdq
dec
and
scas
dec
add
mov
(bad)
ss
dec
adc
xor
cmp
inc
sub
pop
xchg
je
push
add
scas
inc
mov
je
out
rol
(bad)
mov
pop
mov
ja
fsub
lds
mov
xchg
sbb
test
ds
add
test
sbb
adc
popa
cmp
hlt
cwde
retf
(bad)
rcr
xchg
mov
cmps
ficomp
cmp
jp
fprem1
test
and
jmp
pop
dec
add
adc
sbb
imul
add
inc
push
call
xchg
sbb
mov
sti
rol
pop
fs
add
xchg
movs
xchg
popa
or
jmp
inc
repnz
inc
pop
jns
fwait
pop
jmp
cmp
adc
jp
mov
mov
inc
rcr
sbb
jb
xlat
fcomp
add
int
pop
mov
stc
jb
movs
into
aas
popf
dec
cmp
jmp
dec
not
and
and
pusha
movnti
or
jbe
mov
addr16
cli
jb
int
lods
inc
aad
jp
adc
stc
jp
enter
aas
mov
leave
inc
stc
adc
fstp
cmp
ins
inc
cld
sub
add
jmp
pop
mov
mov
and
out
pop
cwde
out
push
mov
xchg
sahf
xchg
mov
inc
add
(bad)
lods
mov
mov
fimul
cmps
fwait
lea
push
dec
fcom
mov
test
jne
je
pop
mov
xchg
sahf
rcr
sbb
or
int3
mov
and
gs
mov
adc
pop
xchg
dec
arpl
in
or
cld
iret
cld
xlat
lock
pop
sar
in
inc
sbb
out
outs
scas
stos
loopne
addr16
(bad)
jo
inc
sbb
adc
ror
mov
jo
push
jmp
mov
xor
lock
push
cmp
cmp
sub
ror
and
cdq
or
jle
fwait
ins
sbb
inc
mov
into
int3
arpl
sbb
mov
xchg
mov
cmps
out
out
imul
dec
bound
in
sbb
cmp
pop
mov
cmp
sbb
push
mov
mov
les
dec
out
pop
ficomp
mov
mov
inc
(bad)
push
out
lds
dec
shl
dec
jp
xchg
pusha
pop
push
pop
push
aaa
sub
int3
jae
inc
addr16
xchg
xchg
test
push
or
cmp
xchg
or
out
jp
movs
push
sub
ror
ins
popf
inc
hlt
mov
test
std
loope
push
sub
in
mov
fistp
ins
icebp
scas
test
or
mov
jbe
dec
mov
shl
neg
aaa
jns
(bad)
jns
outs
jne
xor
pop
enter
inc
inc
pop
dec
push
(bad)
xchg
inc
in
pop
inc
ret
fisttp
leave
(bad)
mov
mov
xchg
ret
inc
retf
mov
cmp
cs
pushf
(bad)
mov
(bad)
mov
mov
dec
mov
sub
xor
and
xchg
bound
mov
stos
sub
sbb
cmp
push
addr16
movs
pop
jg
(bad)
and
add
add
mov
xchg
mov
sbb
loop
(bad)
retf
push
ss
(bad)
xchg
inc
cmp
call
jecxz
loop
xlat
jns
gs
fdivr
jl
loop
addr16
popa
les
retf
sbb
xor
movs
or
or
jmp
mov
dec
and
push
outs
test
pushf
test
ins
loop
out
(bad)
push
sub
cld
mov
mov
icebp
fwait
cdq
sbb
pop
cmc
sti
push
(bad)
sti
adc
out
aam
clc
mov
jle
add
repz
test
fadd
dec
pop
ins
mov
jbe
ja
rol
out
into
pushf
pusha
inc
fisttp
repz
jp
je
imul
ja
(bad)
adc
js
mov
stc
fisttp
sbb
(bad)
jmp
xchg
scas
scas
sub
mov
sbb
std
lea
jae
cmp
and
or
jb
out
fs
loope
das
push
pop
or
xchg
xchg
leave
and
pop
sub
jne
mov
cmc
cmc
icebp
stos
mov
fisttp
ja
sbb
add
psrlw
fnsave
(bad)
fwait
sbb
inc
fcmovnu
mov
cmp
sub
jnp
lods
cmp
fwait
sti
int3
mov
mov
imul
lahf
mov
cmc
lea
cmp
jp
inc
push
push
fidivr
jno
dec
sbb
cmp
mov
movs
inc
jmp
aam
push
ins
push
add
mov
and
(bad)
ins
jmp
xor
mov
or
leave
jns
into
mov
pusha
repz
retf
adc
rcl
pop
fwait
(bad)
or
xchg
inc
test
adc
mov
mov
push
xchg
dec
inc
fsub
fstp
pushf
inc
loopne
in
outs
jle
dec
in
jo
push
sbb
cld
cdq
iret
push
outs
xchg
push
inc
mov
mov
or
cmp
push
jecxz
dec
fwait
jbe
sub
adc
dec
jne
sti
les
out
(bad)
push
cmp
stos
ret
sbb
pop
pop
add
(bad)
mov
jb
adc
and
jns
push
fcomip
pop
aaa
aaa
enter
mov
lock
test
push
ficomp
mov
retf
cmp
xchg
ss
xchg
ins
cmp
pop
push
pushf
mov
mov
sbb
or
lods
adc
jo
bound
sub
adc
push
pop
stos
fisttp
fldenv
or
je
add
push
mov
pop
xchg
mov
pop
adc
and
mov
mov
jle
out
je
imul
cmp
fs
adc
sub
push
pop
(bad)
add
movs
(bad)
sub
retf
jb
imul
outs
jns
cmps
loopne
test
xchg
pop
leave
xor
push
xor
adc
ds
mov
jmp
aad
inc
(bad)
js
mov
cmc
pusha
xchg
loop
pop
and
imul
inc
popa
into
jp
or
lds
into
cmp
ror
scas
out
retf
shr
test
pandn
nop
int3
fldenv
pusha
mov
mov
add
adc
push
jecxz
xor
cli
pop
jp
mov
inc
push
sub
fld
pop
arpl
movs
nop
ret
dec
imul
ins
mov
dec
imul
movs
xlat
push
popf
add
outs
aad
(bad)
fadd
(bad)
retf
test
mov
fnstenv
push
push
mov
sbb
je
inc
clc
mov
push
cld
and
int
in
jns
inc
cmp
push
xor
sub
out
xor
cmpxchg8b
shr
loop
xor
scas
mov
mov
in
imul
inc
mov
mov
push
fld
leave
in
sar
add
out
repz
add
cdq
and
xchg
aaa
dec
jmp
xchg
popf
cmps
ss
cmp
or
ror
inc
inc
loope
(bad)
fcmovbe
jmp
xchg
retf
xor
iret
enter
push
jb
fdivr
cdq
in
fist
inc
ja
mov
mov
aad
xchg
xlat
push
jae
jmp
daa
loop
adc
into
dec
cmp
or
retf
xlat
adc
inc
pop
cdq
inc
scas
sub
xchg
fsub
js
stos
or
jnp
jmp
fst
sbb
dec
jno
cmc
sbb
(bad)
arpl
sti
sub
shl
mov
cmp
mov
lods
ds
cmp
lock
mov
and
jle
push
dec
fsubr
mov
les
rcl
out
mov
mov
xor
sub
cmp
ins
push
fcomp
xchg
lds
add
and
sub
and
jo
push
mov
push
aas
test
xchg
or
call
pop
inc
sbb
(bad)
sbb
call
fucomp
xor
pop
pop
inc
cwde
outs
sub
jl
cmp
mov
test
jmp
sub
(bad)
xlat
es
or
xor
sub
jb
inc
adc
and
les
dec
(bad)
not
pop
mov
retf
adc
cwde
inc
dec
repnz
imul
mov
(bad)
neg
(bad)
pop
shr
mov
and
bound
adc
mov
retf
lahf
push
cli
and
sbb
pop
icebp
jmp
cmp
dec
(bad)
outs
es
in
mov
or
xor
xchg
(bad)
int
dec
inc
imul
xchg
push
std
push
(bad)
mov
movs
cmp
retf
cmp
push
test
xchg
sub
and
pop
xlat
jae
es
push
iret
sub
jo
outs
in
lahf
addr16
fs
mov
loop
or
clc
mov
outs
mov
fcom
mov
mov
sub
xchg
inc
mov
icebp
outs
sub
fidiv
cli
jnp
or
pop
in
push
stos
push
repz
cld
pop
(bad)
dec
xchg
test
imul
jno
jo
mov
mov
pop
xchg
jmp
fild
es
(bad)
idiv
hlt
xlat
cld
adc
pop
shl
les
dec
mov
daa
sub
sub
dec
inc
jno
cld
jmp
push
test
out
and
lds
sahf
loop
test
fdivrp
ds
ja
ficom
mov
jno
sbb
es
call
jo
xchg
xchg
sahf
inc
jmp
xchg
push
(bad)
ja
xor
pop
mov
mov
mov
xor
push
movs
lods
ja
stc
mov
lea
pop
or
pop
sub
mov
enter
pop
inc
imul
dec
cmp
mov
call
and
cmp
jns
pop
(bad)
in
xor
enter
xchg
push
cld
sbb
dec
addr16
pop
push
pop
and
ins
aad
(bad)
(bad)
(bad)
imul
stc
pop
sbb
ss
mov
mov
stos
xor
xor
les
bound
pop
jo
push
adc
sahf
xor
ins
xor
ja
sti
div
jge
leave
loopne
shl
jne
clc
pop
lea
pusha
rol
and
daa
loope
mov
jae
inc
cmps
jle
pop
test
test
inc
xchg
xor
dec
lahf
in
cmc
or
and
enter
mov
jmp
xchg
push
push
sub
(bad)
(bad)
lahf
imul
es
stos
and
lds
push
pop
or
adc
clc
fwait
iret
mov
add
addr16
dec
dec
adc
push
(bad)
fisubr
stos
out
iret
out
stos
test
mov
mov
cmp
xor
ror
shr
lds
ror
xchg
shl
or
fs
loop
int
push
ja
push
sub
int
inc
push
ins
loope
jbe
int
(bad)
cld
sar
stc
leave
cmp
push
jb
adc
lea
inc
test
and
mov
inc
and
xchg
fidivr
xchg
pop
arpl
and
rcr
or
adc
pop
jl
addr16
(bad)
jno
dec
fsub
imul
xchg
stos
and
idiv
cmp
ins
test
add
mov
je
adc
cmps
(bad)
adc
add
cli
xchg
imul
int3
out
cmp
movs
out
fldenv
das
and
jecxz
push
mov
imul
(bad)
push
push
mov
bound
adc
add
push
inc
lods
xchg
or
stos
(bad)
stc
jno
hlt
sbb
adc
ret
push
and
das
int
in
icebp
push
je
or
stos
cli
push
add
adc
es
lds
dec
pop
aaa
mov
lods
xor
sbb
pop
xchg
out
or
ss
jmp
dec
mov
xor
(bad)
call
dec
dec
push
xor
or
cmc
hlt
imul
aaa
or
push
sbb
jns
stos
js
jns
and
out
mov
sbb
mov
repnz
(bad)
leave
nop
loope
in
sbb
push
or
iret
frstor
push
inc
pop
sbb
push
fadd
cli
push
addr16
cli
pushf
push
out
es
add
out
out
(bad)
xchg
sbb
clc
dec
pop
jle
test
cmps
iret
stos
leave
inc
stos
or
jle
cmps
arpl
pop
sar
jo
or
ds
inc
fld
sub
and
rol
pop
xor
jb
push
dec
rol
inc
cmps
test
in
xchg
mov
inc
mov
and
ins
fcmovnu
and
adc
and
std
cs
nop
call
out
lock
fnstenv
(bad)
test
shr
call
aas
test
fmul
mov
je
popa
mov
jl
dec
adc
(bad)
jae
mov
cmc
dec
xchg
cmp
jns
movs
sbb
lods
(bad)
xchg
(bad)
(bad)
cmps
jbe
in
(bad)
(bad)
xchg
cmc
cmp
inc
neg
jo
sbb
idiv
out
mov
sub
or
push
pop
in
sub
sar
sub
mov
(bad)
scas
inc
adc
sbb
mov
lea
adc
inc
stc
cmp
xchg
push
pop
xchg
push
sub
cld
outs
mov
(bad)
xchg
adc
dec
fsubr
gs
mov
cdq
push
test
mov
jae
dec
push
popf
xchg
data16
int
sub
xchg
mov
mov
inc
int3
lea
ins
addr16
retf
sub
pop
and
xchg
add
sub
xor
stc
arpl
(bad)
mov
push
pop
mov
leave
pop
cmp
dec
push
mov
inc
push
mov
inc
mov
sub
aad
add
cmp
(bad)
and
rcl
jno
stos
in
adc
or
hlt
jmp
ror
sub
inc
fidivr
outs
xor
pop
stos
stos
adc
pushf
clc
adc
push
jl
mov
or
mov
xor
arpl
sbb
pop
xor
out
add
push
les
sbb
repz
loope
push
push
repz
cmc
sar
out
mov
rol
dec
retf
outs
cld
pop
rol
adc
jg
xor
data16
daa
stos
fld
push
loopne
mov
dec
std
jbe
hlt
and
in
cmp
nop
pop
inc
lds
call
lock
test
dec
xchg
movs
fs
imul
pop
adc
sti
and
out
push
sub
sub
mov
stos
xlat
dec
fbld
pop
cli
imul
dec
outs
add
aad
mov
xor
aas
pusha
in
jmp
cmps
mov
cmc
fidivr
mov
fnstsw
cmp
adc
ins
jmp
sub
imul
lahf
outs
or
ins
or
neg
inc
jle
sub
xor
data16
(bad)
(bad)
cmps
outs
push
iret
nop
sub
mov
in
adc
cmp
stos
mov
int3
push
jmp
rcr
and
fs
cmp
sub
jno
adc
ins
or
mov
mov
push
mov
push
adc
inc
mov
and
jg
sub
push
sbb
imul
mov
pop
mov
(bad)
cwde
sub
ins
inc
inc
mov
adc
inc
popa
xchg
sbb
push
or
pop
sub
outs
mov
push
jl
retf
int3
jmp
cli
and
fcomp
mov
arpl
lahf
sub
pop
push
jnp
pop
jecxz
sbb
in
mov
adc
(bad)
retf
dec
fnsave
push
scas
and
pop
mov
push
ins
(bad)
aas
retf
je
in
mov
push
pop
scas
data16
and
(bad)
(bad)
in
popf
sub
mov
std
pushf
jmp
add
dec
mov
mov
xor
cwde
or
iret
adc
dec
dec
mov
jbe
jnp
xchg
sbb
ret
test
add
sbb
das
and
movs
mov
icebp
dec
pop
push
xchg
mov
mov
dec
jle
push
xor
jo
cmp
test
test
add
pop
aas
jmp
les
xchg
je
fsubr
out
dec
outs
jae
jle
test
iret
lock
push
xchg
repnz
std
cs
xor
ins
dec
lods
addr16
movs
mov
imul
pop
jmp
(bad)
not
xlat
jo
push
call
mov
mov
pop
stc
or
push
(bad)
out
ins
ja
ss
loop
pusha
outs
nop
fwait
jae
sub
jae
mov
or
bt
icebp
push
cmp
jo
cmp
mov
movs
push
dec
icebp
mov
in
push
mov
cwde
jns
sub
dec
mov
add
int
pop
retf
xchg
xchg
int3
sbb
jle
(bad)
mov
test
jp
or
push
xor
sahf
int3
dec
(bad)
hlt
fisttp
cmp
mov
enter
add
add
jp
ins
xchg
(bad)
mov
push
repz
cmp
fsub
and
cmp
xchg
jbe
into
xor
in
xchg
xchg
adc
retf
mov
push
scas
add
pop
sub
mov
push
sbb
mov
xchg
xlat
dec
cmps
push
pusha
adc
mov
ret
mov
mov
bswap
call
mov
push
fs
add
cmp
into
outs
ret
mov
pop
mov
scas
sub
push
dec
(bad)
dec
outs
lds
aam
cwde
xchg
pop
cmps
mov
into
loop
push
(bad)
sti
mov
mov
imul
into
ret
adc
cli
mov
cmp
push
jb
fdivr
inc
(bad)
push
cmps
in
adc
int3
cmp
mov
out
retf
out
loopne
fnstenv
push
jne
mov
or
pop
fimul
cmp
jmp
ss
jp
cmp
imul
test
cmp
or
enter
repz
jmp
lock
and
jl
fist
sbb
std
into
or
or
xor
sub
push
shl
add
sahf
sub
adc
xchg
jnp
sbb
cmp
lea
aad
lock
pop
mov
dec
adc
cdq
push
call
cdq
sbb
inc
fild
and
adc
retf
cmp
sbb
pushf
hlt
std
sub
cmp
add
pop
out
into
out
stos
push
out
inc
push
stos
sub
sbb
mov
add
mov
gs
mov
lds
inc
(bad)
in
inc
push
movs
adc
mov
inc
mov
push
mov
inc
and
or
xchg
push
icebp
xor
and
jmp
shl
stos
les
mov
sbb
xor
xor
adc
sti
(bad)
std
scas
retf
and
pop
(bad)
xor
xor
push
mov
aad
js
arpl
iret
xchg
stc
dec
(bad)
in
lock
mov
sahf
ds
cmc
imul
jae
inc
stc
or
(bad)
loop
mov
push
test
mov
jmp
jmp
scas
xchg
jmp
xlat
frstor
loope
sub
data16
repnz
mov
xchg
xor
mov
inc
or
das
icebp
mov
pop
mov
gs
call
(bad)
neg
push
lea
jb
pop
cmp
pop
lahf
cmc
loopne
adc
jno
mov
or
cld
call
jns
retf
call
sub
mov
jne
int
in
sbb
xchg
inc
mov
fsubr
icebp
jg
pop
adc
movs
(bad)
test
stc
mov
addr16
fldenv
lea
mov
outs
cmp
cmp
shr
retf
cmp
ret
sbb
test
mov
lock
(bad)
(bad)
popf
xor
sub
jle
std
int
lock
ins
jno
in
add
adc
sub
les
repnz
sub
loop
mov
stos
movs
rol
scas
adc
test
sbb
mov
and
and
enter
popf
pushf
jo
test
loopne
xchg
cld
imul
outs
cmp
gs
mov
sar
cdq
shr
push
pop
ret
xchg
cli
xchg
sahf
loop
jmp
repnz
and
or
hlt
lods
into
sti
push
out
add
pop
inc
and
mov
inc
push
mov
ins
xchg
or
les
test
add
jecxz
in
xchg
add
rol
sbb
inc
(bad)
cdq
and
test
lds
inc
fbld
mov
dec
dec
xchg
and
leave
jmp
and
pop
sub
enter
push
ss
retf
arpl
loope
fisub
sub
movs
xor
icebp
xchg
xor
aad
mov
pusha
sub
and
loop
mov
push
pop
stos
sub
les
data16
loop
or
dec
outs
sar
cmc
loop
(bad)
cmp
push
sub
inc
cld
and
jno
lds
in
imul
inc
mov
add
pop
jno
icebp
test
loopne
cld
call
push
loop
das
and
lods
add
popa
inc
sub
mov
rcr
add
inc
outs
inc
or
data16
fidivr
or
(bad)
clc
xor
popf
dec
mov
sbb
add
mov
mov
clc
fdiv
mov
scas
daa
cmp
sti
sub
repz
sbb
mov
cmps
not
ja
(bad)
adc
fidivr
jo
jnp
into
cmp
mov
call
xor
push
mov
cdq
adc
imul
push
dec
sub
mov
mov
mov
push
adc
mov
mov
jge
inc
(bad)
into
inc
xchg
pop
jne
cmp
and
movs
ret
mov
stos
cmp
dec
adc
jmp
test
rcl
and
xchg
xchg
fsub
inc
fldcw
loop
out
outs
sbb
or
pop
jne
mov
sub
xor
sub
adc
dec
inc
pop
adc
sub
xchg
cmp
xchg
shr
xor
pusha
(bad)
pop
push
in
icebp
jecxz
or
jns
sar
dec
mov
push
jbe
ficom
mov
or
add
imul
mov
push
jo
jnp
push
cmp
pop
mov
sub
sbb
clc
fsub
xor
out
push
pop
dec
fimul
test
dec
mov
and
cdq
push
push
inc
mov
mov
cld
push
mov
lock
or
and
popa
or
les
jmp
ror
les
sbb
gs
xor
shr
fist
push
je
adc
int
das
cmp
xchg
dec
outs
mov
shl
push
push
outs
movs
cld
push
ss
repnz
add
scas
sub
pop
cmp
xchg
(bad)
in
adc
mov
shr
repz
jmp
cdq
mov
jo
aam
leave
pop
add
(bad)
fistp
sahf
(bad)
lods
jg
dec
xchg
pop
in
fild
inc
sub
shr
in
test
or
arpl
inc
outs
or
pusha
test
retf
jns
xor
inc
imul
jecxz
inc
xchg
mov
mov
mov
jl
cwde
gs
js
imul
mov
lods
adc
cmp
inc
pop
cdq
loope
loop
rcl
ror
mov
mov
jo
mov
mov
xchg
pop
jg
imul
gs
xlat
xor
and
xchg
sbb
push
cli
mov
imul
sub
pop
cmp
lahf
push
inc
cmovae
(bad)
loop
dec
das
sub
lds
cs
or
mov
and
dec
add
inc
lds
call
adc
fcmovne
lods
mov
dec
pop
cld
popf
mov
push
aaa
push
mov
add
cmp
(bad)
fcmovb
jcxz
call
jle
ins
mov
lahf
jg
adc
and
out
test
retf
ins
mov
pop
xor
fs
sbb
enter
jmp
mov
sub
cmp
fst
push
pop
stos
fstp
fcom
inc
inc
xor
or
mov
xor
stos
sub
mov
pushf
fstp
stc
rcr
or
sub
ins
mov
or
leave
jb
enter
(bad)
xor
adc
jecxz
push
push
mov
dec
hlt
dec
(bad)
lods
push
frstor
(bad)
(bad)
push
addr16
ror
sti
sbb
retf
shr
xlat
popa
xchg
mov
test
add
mov
daa
inc
cwde
dec
push
jge
je
inc
rcr
inc
in
mov
ins
dec
fld
mov
in
popf
mov
mov
mov
cwde
fbstp
dec
stc
imul
xchg
test
adc
outs
jno
sbb
mov
sub
fist
jmp
jecxz
push
pop
pop
(bad)
inc
adc
repnz
xor
xchg
repnz
inc
(bad)
sti
ds
or
xor
imul
xor
pop
gs
les
sub
imul
call
push
sbb
inc
pop
and
retf
and
mov
mov
mov
lods
cmp
or
mov
hlt
adc
or
inc
aad
adc
push
mov
lock
in
jecxz
daa
arpl
outs
data16
inc
lds
xchg
dec
cli
jg
(bad)
dec
loope
add
mov
mov
cmps
lahf
stos
wrmsr
mov
sbb
pop
dec
sbb
fdiv
pop
aad
stos
inc
jle
sub
or
addr16
test
daa
mov
sbb
and
(bad)
adc
push
add
sub
idiv
or
and
int3
adc
out
add
lds
xor
bound
dec
ins
add
fidiv
push
not
sbb
adc
scas
(bad)
xchg
jns
je
push
popf
(bad)
in
adc
mov
call
or
out
mov
es
fwait
sub
gs
mov
sbb
dec
ds
hlt
dec
pop
push
(bad)
jp
mov
fwait
pop
out
sub
adc
dec
push
sar
into
xor
les
add
repnz
xchg
pop
cmp
ror
jo
push
and
xchg
sbb
dec
lock
ds
mov
jns
jbe
scas
sbb
imul
outs
shr
mov
ins
pop
adc
dec
and
dec
pop
xlat
push
mov
(bad)
(bad)
ret
das
mov
out
addr16
pop
inc
xchg
call
cdq
pop
mov
call
es
add
scas
lods
sub
or
aas
fsubr
out
push
inc
addr16
bound
outs
sbb
pop
jge
mov
inc
call
sahf
ror
int
xchg
and
inc
retf
xchg
das
cld
ret
loope
add
or
push
lods
mov
mov
fistp
lods
adc
mov
not
iret
jnp
xchg
xor
pop
ja
popa
push
push
push
cmp
clc
mov
retf
jb
ins
fwait
adc
daa
mov
inc
sub
outs
out
js
cmp
mov
inc
sub
jmp
repnz
mov
bsr
xchg
into
test
repz
es
rcl
pop
pusha
cmp
pop
mov
cmc
jg
fadd
movs
push
adc
xchg
int3
movs
fst
sub
cmp
fst
inc
dec
sub
or
leave
stos
mov
stos
into
dec
loopne
pop
outs
or
enter
mov
add
outs
mov
nop
push
mov
stc
outs
mov
jmp
push
jmp
int
into
enter
scas
mov
jb
mov
bound
or
sub
jne
aam
pop
aad
dec
(bad)
ins
jo
daa
nop
dec
dec
loope
out
aaa
add
call
xor
call
pop
int3
push
and
leave
sbb
push
mov
fdivr
jmp
ja
sbb
xor
daa
xchg
leave
sbb
dec
cmp
gs
xlat
(bad)
rcl
cdq
hlt
and
pop
jmp
sbb
mov
rol
cmp
out
(bad)
sbb
stc
and
jge
push
inc
(bad)
cmp
xlat
jg
mov
lahf
inc
dec
jns
mov
jge
les
scas
dec
outs
adc
retf
mov
jge
sbb
dec
push
or
push
ret
ficomp
les
movs
out
mov
das
mov
js
enter
les
(bad)
in
sahf
dec
das
and
lahf
lock
jle
into
inc
pop
fstp
icebp
mov
ins
ficomp
clc
pop
ret
add
push
mov
mov
adc
ds
lds
inc
mov
ror
jne
(bad)
call
sub
ins
scas
sub
movs
sub
mov
push
popf
rcr
xor
in
sub
sub
jae
pushf
mov
cmp
fsubr
nop
cmps
adc
sti
jmp
test
pop
push
push
mov
into
and
jg
adc
lock
mov
ds
out
inc
mov
or
in
xor
pop
inc
sub
push
movs
add
test
or
pop
push
out
(bad)
adc
dec
test
mov
inc
lahf
push
and
mov
sti
ins
xchg
ret
cmp
sub
or
movs
inc
leave
in
mov
xor
cmp
stc
inc
les
sub
je
pusha
int
mov
jns
jp
xor
jl
mov
add
int3
mov
je
inc
dec
out
mov
aas
and
fmul
push
test
mov
int
or
mov
mov
sbb
stos
sub
lahf
outs
out
imul
inc
add
xchg
js
xor
aas
or
outs
lds
jg
pop
jg
mov
xor
loop
nop
add
mov
cmc
clc
pop
aaa
xchg
ja
retf
int3
mov
mov
repz
sub
mov
or
mov
rol
cmp
xchg
mov
pop
cmc
iret
loop
scas
or
jp
adc
sbb
cmp
mov
pop
faddp
push
cmp
jo
xchg
popf
(bad)
ins
sub
add
mov
mov
xor
lods
cmp
clc
stos
dec
(bad)
jae
lods
jl
and
mov
xchg
bound
mov
retf
ret
push
xchg
inc
(bad)
int
pop
jecxz
repnz
test
xor
add
or
(bad)
outs
push
pop
mov
ja
call
aas
mov
jo
mov
xor
and
sahf
outs
inc
jg
pop
cmp
cmp
or
mov
cdq
int3
adc
fld
lds
and
cli
jbe
or
dec
jo
out
dec
push
or
jl
mov
aam
mov
imul
push
push
mov
and
mov
jae
adc
mov
push
inc
and
data16
sbb
out
sub
(bad)
dec
std
test
jae
mov
inc
ret
sub
adc
inc
ss
loop
retf
and
sbb
ds
xchg
repz
mov
movs
sub
test
xchg
lods
shl
pushf
nop
mov
sbb
test
sbb
push
add
mov
int3
jne
test
xchg
inc
shl
sti
xor
or
pop
sbb
push
ins
js
sub
mov
cmc
std
jmp
or
xchg
inc
fimul
ret
dec
jmp
mov
push
jle
or
or
pop
adc
pusha
out
pop
jbe
jne
push
and
jne
inc
push
aaa
adc
mov
int3
mov
inc
stos
jecxz
(bad)
jecxz
jno
push
test
inc
je
js
and
ss
sub
enter
cmp
or
or
call
(bad)
pop
out
add
repnz
loopne
(bad)
out
or
out
and
pop
inc
data16
inc
dec
inc
in
fcom
repnz
inc
pop
xor
dec
xor
and
imul
rcr
or
xchg
mov
daa
(bad)
fldcw
divps
sbb
mov
stos
and
dec
out
push
in
and
leave
cmp
mov
mov
xor
pop
data16
jns
loop
mov
xor
and
pop
bound
dec
sbb
fbld
jge
jmp
enter
jecxz
pop
sti
test
std
jne
mov
pop
popf
jnp
xor
rol
or
push
lods
sub
in
jns
sbb
shr
sti
and
(bad)
jnp
dec
ret
push
mov
mov
cmp
cmp
scas
nop
inc
ss
mov
xor
xor
or
test
xor
sub
push
push
mov
lahf
dec
lods
mov
les
shl
push
test
sbb
jno
pop
lods
push
aas
aad
cmp
add
adc
js
or
pop
aam
aam
imul
scas
(bad)
ins
inc
sbb
adc
mov
xchg
in
and
ja
neg
mov
loopne
adc
mov
ds
adc
test
hlt
iret
test
dec
mov
pop
cmp
sub
and
retf
sbb
jg
ins
inc
pushf
mov
push
cmps
jp
xor
inc
(bad)
push
outs
lea
aas
inc
ins
mov
jne
test
adc
aaa
mov
dec
sub
dec
cmp
add
sbb
fcomp
stos
cli
addr16
xchg
adc
ins
out
xchg
add
sub
hlt
jmp
mov
jne
and
std
push
pop
mov
sbb
loop
loop
rcl
mov
ins
sbb
xor
mov
sar
out
mov
cld
test
test
in
push
pop
ja
pop
inc
xchg
push
test
or
cmps
sub
cmp
xchg
fcmovnu
push
jl
ds
xchg
xchg
or
adc
pop
mov
cmp
dec
in
dec
loope
mov
sbb
xchg
test
rcr
imul
lea
fs
push
dec
cmp
in
loop
jecxz
sub
stos
aam
cmp
in
fsub
je
popf
retf
ret
sub
inc
test
sub
jne
frstor
xchg
gs
xor
mov
fstp
xchg
xor
shl
dec
xlat
enter
jle
inc
test
and
(bad)
outs
cmp
fwait
xchg
push
sbb
adc
add
aaa
cmps
sub
jmp
jb
push
xor
arpl
outs
cli
xchg
pushf
and
enter
jne
mov
retf
inc
hlt
add
test
mov
adc
inc
fadd
repnz
ret
pop
xlat
gs
out
data16
clc
popf
js
shl
fs
adc
adc
lahf
test
cld
jno
mov
ins
movs
push
je
sbb
fcom
inc
popa
fistp
adc
mul
in
cmp
cmps
dec
addr16
xchg
in
sub
int
jl
ret
gs
jns
mov
dec
sub
jb
push
cdq
aam
aas
push
movs
movs
jp
into
mov
retf
adc
pop
cld
mov
mov
std
pusha
dec
jecxz
sar
movs
mov
push
adc
xchg
cwde
(bad)
fisttp
xor
and
fisub
pusha
xchg
cmp
add
xchg
pop
dec
sub
cmp
add
or
shr
int3
dec
not
popf
jmp
mov
inc
retf
sub
pop
(bad)
adc
shr
loop
mov
into
aad
xchg
mov
ins
ins
push
sahf
bound
inc
jp
adc
or
neg
aam
xchg
addr16
rcl
jp
aaa
xor
jg
or
rol
scas
dec
les
mov
add
js
pop
movs
xchg
mov
jg
ins
loopne
loop
sub
and
adc
adc
jecxz
popa
in
lock
ins
js
inc
add
or
xor
loopne
adc
shr
rcl
sub
out
cdq
cmc
in
loop
mov
and
xlat
inc
out
es
mov
sub
mov
cmps
jae
cdq
leave
xchg
(bad)
mov
sbb
mov
in
in
mov
push
cmp
lahf
loopne
adc
mov
setle
call
fnstcw
ins
pushf
clc
fidiv
ja
ficomp
and
mov
mov
dec
mov
push
mov
stos
mov
adc
xchg
sbb
std
stos
cdq
or
sub
ins
hlt
xchg
rcr
sar
je
push
jg
test
add
mov
mov
mov
into
or
mov
aad
and
push
test
leave
mov
leave
and
in
add
jle
fidivr
inc
sar
in
or
mov
fs
xchg
mov
shl
shr
test
cmp
jno
or
jg
fisttp
or
out
mov
nop
ds
mov
cmps
jmp
mov
add
js
or
test
enter
adc
adc
dec
or
int3
enter
or
das
pop
cmp
shr
inc
mov
arpl
adc
ror
cmp
xchg
lds
repz
daa
out
pop
mov
mov
jno
in
cmp
dec
xor
jno
dec
push
movs
push
pop
push
xchg
cwde
mov
movs
push
lds
pusha
or
and
sub
xchg
aam
das
xor
dec
int3
cmp
sub
dec
pushf
push
adc
outs
or
mov
push
or
sbb
lea
inc
and
pusha
(bad)
ret
test
jo
rcr
sbb
xor
fdiv
bound
xchg
push
stos
mov
fwait
inc
push
and
xchg
pop
mov
add
movs
dec
jnp
push
mov
add
add
and
push
xchg
ror
movs
repnz
dec
add
lods
clc
and
fidiv
scas
sti
lahf
rcr
inc
mov
or
mov
idiv
movs
xor
test
ror
in
cs
icebp
mov
sub
call
mov
jno
mov
xchg
mov
cmps
inc
rcl
and
add
and
inc
das
push
in
packsswb
(bad)
das
xor
add
xor
shr
mov
in
cli
add
pop
push
popf
leave
lods
jb
cwde
inc
sbb
shr
aas
hlt
sti
or
test
mov
xchg
cmp
movs
test
mov
rcr
imul
pop
mov
pop
sub
rol
in
sub
mov
add
mov
sbb
and
push
adc
dec
sbb
ins
mov
cwde
inc
mov
xlat
out
jno
xor
(bad)
retf
xor
xor
stc
sbb
xor
ret
add
xchg
jnp
push
scas
xchg
cdq
xchg
cmps
(bad)
(bad)
xor
(bad)
cmp
addr16
fstp
and
sub
jl
shr
add
dec
xor
inc
sbb
sbb
cmp
in
out
movs
adc
test
sbb
cmp
ror
in
inc
push
mov
fstp
mov
pusha
and
and
movs
mov
ss
outs
popa
rcr
rcr
lods
cli
lods
jnp
jg
jmp
leave
in
(bad)
into
jmp
in
jg
sbb
scas
xor
ss
shl
scas
push
jge
xchg
xor
sub
stc
jb
cmp
js
imul
and
sbb
mov
xchg
(bad)
sahf
out
out
add
cld
sub
out
inc
jecxz
inc
repz
xchg
dec
clc
or
fcmovbe
sbb
popa
mov
adc
jg
jae
fcomp
inc
jle
mov
mov
ins
into
pop
in
xchg
fld
hlt
dec
(bad)
sahf
fsubr
pop
inc
xor
mov
test
pop
xor
lahf
cmp
movs
retf
mov
push
out
sti
or
fisttp
or
push
push
inc
dec
and
xor
and
ins
mov
dec
in
and
mov
out
lahf
cmp
and
jae
push
adc
cwde
fcom
call
sub
aas
cs
rcl
mov
test
push
ss
push
jmp
retf
add
cld
cli
xchg
xor
and
sub
repnz
test
adc
adc
in
dec
(bad)
loopne
dec
jae
push
je
shl
shr
mov
shl
sub
jae
call
lock
push
jns
jg
xchg
es
mov
stc
add
movs
sbb
cmc
paddq
add
sar
push
imul
scas
mov
cmp
mov
cwde
add
mov
push
int3
outs
xlat
popf
inc
or
jle
popa
inc
or
mov
repz
out
ss
dec
or
adc
test
popf
mov
mov
out
mov
test
pop
mov
cmps
mov
dec
fwait
sbb
or
mov
add
sti
ins
or
mov
push
leave
adc
push
das
(bad)
mov
sbb
cs
sbb
mov
test
pop
clc
xor
mov
daa
and
pop
dec
dec
std
dec
xor
push
mov
mov
shl
mov
and
lods
mov
adc
mov
ficom
lds
rcl
cli
das
push
xor
rcr
cli
gs
pop
rcl
es
mov
out
shl
in
ds
sar
fnstsw
pop
idiv
pop
sahf
sbb
cmps
dec
out
dec
fbstp
mov
xor
clc
ins
and
dec
sbb
iret
es
in
inc
popf
out
ins
lahf
and
leave
mov
out
scas
and
in
scas
ins
add
into
xchg
aam
cs
outs
stos
mov
leave
sbb
ja
lahf
sbb
ret
sti
fsubr
mov
inc
(bad)
dec
pop
xor
jae
pop
test
inc
mov
mov
push
and
jle
outs
idiv
mov
pop
push
arpl
enter
push
(bad)
(bad)
aas
push
aas
cs
xchg
scas
movs
div
mov
mov
jns
push
(bad)
fnstenv
mov
cld
in
and
lods
iret
jecxz
dec
aam
je
jmp
sub
mov
ja
inc
or
adc
cmp
in
mov
xor
dec
popf
sub
in
sub
ret
mov
push
cdq
lds
mov
jle
lods
addr16
imul
dec
lahf
test
and
xlat
aam
mov
jmp
and
or
in
sub
sar
pop
jmp
int
jb
and
adc
xor
fld
aas
push
adc
hlt
jge
cvtpi2ps
es
out
mov
dec
sbb
jae
clc
cmp
mov
sub
or
ss
retf
mov
cli
add
cmp
xchg
push
mov
lods
es
inc
adc
adc
jae
fld
lods
jge
dec
and
sub
sub
dec
(bad)
(bad)
ins
sbb
jmp
cs
inc
and
gs
jp
push
add
pushf
lds
js
sub
adc
jecxz
repz
or
mov
fsub
cwde
mov
sbb
dec
push
fnsave
cmp
sub
sub
test
leave
xchg
sbb
sub
rcl
push
ror
int3
rol
imul
add
mov
xchg
std
cmp
repz
cmp
fdivr
scas
repnz
sbb
es
jae
push
pop
sub
lock
pop
or
stc
mov
in
mov
xlat
pop
mov
mov
adc
pop
dec
jp
pop
dec
iret
jae
(bad)
scas
mov
ds
cdq
(bad)
dec
div
(bad)
jns
pop
iret
loope
mov
out
addr16
cmps
pop
mov
aam
in
cmp
sbb
aas
sahf
jmp
jg
rol
xor
add
mov
add
stos
dec
or
movs
hlt
test
mov
addr16
test
mov
lods
shl
mov
cdq
aaa
inc
sar
fdivr
les
add
jp
mov
fcomp
xor
sahf
lea
sbb
xor
popf
sbb
cld
ins
cmp
pop
outs
loope
add
aas
xor
lods
pop
mov
mov
add
outs
hlt
in
out
inc
sub
mov
aas
xor
or
jle
sti
(bad)
ret
dec
jbe
xor
cdq
imul
(bad)
cwde
add
ja
mov
repnz
in
and
xor
dec
test
push
push
xor
mov
pushf
outs
in
jo
outs
retf
jmp
shr
jne
shl
xor
call
and
movs
rcl
dec
popf
sub
out
push
bound
jmp
sbb
push
sbb
xor
lahf
repnz
push
daa
out
(bad)
push
xchg
pusha
jle
int
pop
lock
sub
bound
mov
push
inc
sub
aas
jae
mov
popa
leave
rol
iret
pop
scas
and
ret
test
sbb
iret
imul
icebp
call
add
pop
fstp
test
cmp
jno
push
lock
(bad)
cmp
fild
ficomp
test
push
xchg
mov
mov
shl
xor
(bad)
mov
push
out
push
cmp
push
rol
dec
add
ret
mov
dec
mov
xor
mul
aas
(bad)
push
pop
sub
lods
stc
mov
scas
sti
and
pop
push
jne
imul
add
cmps
mul
aam
mov
fwait
call
pop
daa
aam
lods
nop
ficom
je
mov
mul
test
test
ss
idiv
out
jg
jle
in
add
mov
jg
ret
pop
push
mov
rcl
stos
push
inc
xchg
push
out
enter
out
push
jle
mov
das
mov
or
lock
pop
and
add
jmp
scas
jmp
pop
neg
xor
fst
xchg
xchg
mov
adc
pop
mov
stos
or
shl
outs
pop
dec
push
cmp
or
inc
(bad)
or
leave
sub
pop
pop
inc
daa
xlat
sub
mov
xchg
mov
inc
cmp
imul
or
or
mov
pop
addr16
xchg
outs
je
xor
jg
cmc
cld
mov
pushf
xchg
sti
pop
mov
and
fstp
jmp
sbb
gs
and
ret
inc
xor
jge
xor
test
xor
fucomip
out
inc
cmp
(bad)
into
xchg
jle
push
adc
movs
je
mov
mov
fild
inc
adc
xor
scas
gs
lahf
sbb
dec
dec
mov
add
mov
sub
push
and
and
lahf
les
inc
shl
out
ins
mov
push
out
fild
push
lock
add
dec
icebp
(bad)
dec
fwait
mov
or
pusha
and
pop
psllq
adc
adc
and
or
rcr
cmps
fwait
jnp
mov
add
pop
mov
push
cmp
out
push
push
cwde
popf
mov
pop
cs
xor
imul
test
retf
push
jb
inc
stos
mov
mov
lds
xchg
jbe
or
in
and
jns
dec
dec
xor
shl
jmp
inc
add
enter
xor
mov
lods
bound
loopne
dec
lods
mov
or
sub
inc
lea
stc
out
or
dec
xor
sti
jo
xchg
push
inc
lds
inc
and
push
mov
sbb
cmp
loop
or
icebp
push
loope
sti
or
jmp
xchg
and
push
push
pop
aad
push
dec
xchg
push
xchg
icebp
mov
jmp
outs
hlt
mov
xor
xor
cmp
xlat
xor
xlat
sahf
push
not
idiv
sbb
mov
push
push
arpl
xchg
xlat
nop
loope
ja
sub
pop
shr
shl
pusha
inc
out
jecxz
retf
data16
lea
dec
or
xchg
retf
xor
add
sub
inc
inc
pop
xchg
dec
(bad)
jbe
popf
mov
mov
ret
fisubr
mov
sti
test
idiv
inc
ss
iret
stos
jmp
xlat
mov
dec
xchg
and
inc
test
adc
out
dec
inc
adc
push
fmul
push
(bad)
ss
js
pop
push
out
push
bound
dec
pop
out
daa
jno
ja
fidivr
or
dec
icebp
mov
int3
pop
stc
push
fstp
mov
push
inc
mov
repz
add
inc
ss
shr
scas
mov
push
mov
sbb
ds
inc
dec
jno
je
lock
mov
(bad)
stos
jnp
jb
int
jle
lods
jae
sahf
push
in
loopne
xor
fidiv
das
aaa
bound
inc
test
mov
dec
(bad)
imul
test
cmps
stc
les
ja
ss
daa
push
cmps
and
ds
(bad)
mov
push
sub
fbld
das
xor
inc
rcr
or
imul
xchg
sub
loope
movs
dec
mov
adc
cmp
mov
je
call
fs
lods
jb
adc
xchg
loop
jbe
fucomi
and
mov
mov
sub
scas
push
fisubr
cli
fdivr
jo
test
nop
xchg
mov
xchg
mov
jmp
inc
rcr
lahf
out
scas
and
sbb
mov
fdiv
sub
xlat
pop
or
ins
mov
icebp
dec
aam
dec
sub
pop
mov
mov
xchg
xor
lock
cmp
test
dec
ja
inc
and
xor
adc
adc
test
arpl
hlt
xor
mov
lods
out
cld
jae
mov
and
dec
mov
adc
jg
fsubr
mov
pop
add
rol
je
addr16
in
xor
mov
mov
cmp
jl
mov
jmp
sub
retf
cli
out
mov
dec
enter
jne
sbb
cdq
jmp
shl
add
add
mov
fs
dec
mov
out
ret
dec
and
in
mov
gs
jbe
out
push
mov
mov
icebp
xor
scas
push
jbe
and
daa
or
xor
loop
ja
cmps
loopne
int
outs
sti
aam
lods
pusha
cs
lods
jae
pop
mov
fnstsw
cmp
jno
pusha
popf
mov
jmp
les
(bad)
imul
inc
sbb
mov
pop
adc
dec
push
sbb
mov
lds
push
adc
retf
jo
leave
push
outs
out
jge
inc
push
loope
(bad)
ret
jl
aad
add
xchg
inc
and
push
daa
pop
and
dec
cmp
cli
fld
fnop
data16
sub
fs
cmps
inc
fisttp
clc
mov
pop
jp
dec
clc
or
mov
nop
mov
test
test
and
cmps
outs
icebp
pop
in
addr16
gs
adc
push
(bad)
sar
or
adc
cwde
aam
cmp
inc
pushf
mov
scas
and
in
stos
add
(bad)
retf
cwde
(bad)
fisub
cwde
add
inc
int3
ja
addr16
out
dec
mov
sbb
shl
sub
and
jge
ins
call
dec
cmp
scas
cwde
sbb
retf
push
xchg
lea
or
out
mov
cmp
or
cmp
retf
test
in
xchg
dec
xchg
gs
dec
lods
mov
inc
sti
out
and
loope
mov
sahf
dec
pop
or
test
cmp
jne
inc
mov
call
or
pop
je
loopne
call
scas
dec
push
stos
(bad)
jne
shl
stos
jo
xchg
or
aas
xchg
or
test
popf
fwait
mov
inc
stc
and
movs
mov
mov
push
aam
cmp
sub
aad
in
sbb
adc
mov
mov
inc
(bad)
mov
lods
pusha
out
xchg
add
sbb
mov
sbb
test
pop
mov
in
(bad)
and
(bad)
retf
xchg
pop
out
(bad)
icebp
inc
xchg
scas
(bad)
push
mov
iret
mov
out
ins
cmp
mov
jle
adc
not
jp
inc
jns
call
or
add
jbe
aad
seto
div
inc
dec
mov
je
and
cmc
retf
jo
sub
not
outs
loopne
lea
and
stos
mov
mov
rol
mov
xor
dec
gs
cwde
push
iret
mov
mov
pop
leave
and
add
push
xchg
inc
rol
test
xchg
push
mov
les
int
dec
call
aas
imul
cdq
and
aaa
pop
xchg
(bad)
pop
or
jl
sub
pop
jb
es
call
adc
aam
push
jne
repz
repnz
arpl
cmp
cmp
mov
jae
mov
jb
into
mov
loopne
or
rcr
enter
(bad)
call
pop
(bad)
lods
add
push
inc
data16
lahf
push
aas
gs
(bad)
repnz
push
loope
fs
arpl
lock
jg
add
sbb
push
mov
gs
shr
mov
fnsave
xor
test
in
mov
hlt
push
rcr
(bad)
ror
test
xchg
push
movs
outs
fsubr
sbb
std
sbb
mov
sub
sbb
lods
inc
int
stc
add
cmp
das
pop
enter
push
sub
movs
xor
psllw
fwait
pop
loopne
cmps
xor
fsubr
mov
jnp
dec
jmp
ja
jo
call
inc
mov
cdq
mov
push
push
mov
aad
push
xor
loopne
mov
dec
push
mov
mov
outs
js
mov
leave
and
ret
mov
push
lock
in
or
inc
cmp
xor
repnz
cmc
xor
and
mov
aaa
cli
(bad)
and
(bad)
pop
and
add
mov
gs
mov
sub
jp
sbb
xchg
retf
shl
popa
jmp
shl
adc
repnz
mov
iret
jp
loope
enter
data16
sahf
icebp
adc
(bad)
ins
pop
cmc
and
adc
lods
std
dec
jecxz
shr
adc
dec
mov
xchg
in
cmp
popa
es
std
dec
jecxz
je
shl
in
int
mov
and
enter
dec
and
dec
retf
call
sub
and
and
or
jno
ins
mov
ret
mov
test
push
movs
mov
push
stc
push
movntq
jns
lock
or
es
adc
push
scas
or
xchg
sub
movs
lock
jno
lock
out
push
xchg
push
mov
xchg
lods
sub
xchg
push
mov
push
js
xchg
or
outs
ds
or
test
push
add
retf
lods
sub
int3
mov
mov
cdq
push
sahf
cmp
xor
cmp
adc
or
jns
xor
loop
mov
in
cmp
push
icebp
sbb
dec
gs
fldcw
jmp
mov
jp
into
outs
and
mov
dec
xchg
mov
sub
rol
call
dec
push
dec
lahf
add
sahf
ret
std
adc
(bad)
lods
mov
imul
out
sub
rol
cmp
ja
dec
mov
fisubr
imul
imul
xor
sahf
and
adc
mov
mov
xlat
and
pop
test
rcr
dec
pop
push
and
or
stc
adc
inc
fdivr
mov
cmps
xchg
pop
mov
outs
lods
push
pop
xchg
gs
leave
in
int
adc
(bad)
sub
dec
leave
aam
fisubr
in
imul
shl
pop
stos
and
xchg
lea
aad
inc
add
cmc
cmp
mov
mov
arpl
add
jp
mov
fdivr
data16
call
push
(bad)
das
xchg
cdq
mov
dec
mov
cmp
or
call
pop
sub
cmp
inc
xchg
cmps
enter
aam
in
push
pop
loop
(bad)
xchg
fwait
cmp
int3
adc
push
(bad)
mov
sub
scas
enter
sbb
xlat
mov
ja
mov
shr
daa
stos
push
(bad)
lods
scas
inc
xlat
adc
jge
call
dec
inc
sub
mov
jo
aad
mov
repnz
pop
loopne
outs
push
icebp
dec
sti
xchg
fwait
popa
popf
sbb
mov
mov
jecxz
and
sbb
cmp
sbb
sbb
inc
data16
or
mov
cmp
jmp
les
cmps
mov
(bad)
sbb
mov
retf
retf
les
in
popa
or
dec
push
cmp
inc
jmp
lds
(bad)
and
(bad)
pusha
dec
jne
inc
mov
push
pop
sbb
iret
xchg
pushfw
call
in
daa
stos
ror
push
dec
jno
(bad)
dec
fist
into
fstp
jmp
cmp
not
jmp
ss
fisttp
pusha
inc
outs
inc
(bad)
out
xchg
xchg
cmps
adc
cmp
add
xchg
xor
adc
add
pop
arpl
inc
jmp
mov
aad
push
aam
push
and
mov
pop
fwait
adc
icebp
add
mov
scas
clc
mov
push
sbb
div
hlt
jbe
pop
in
ret
lods
cli
repz
xchg
mov
xor
or
jp
dec
xor
stos
nop
and
mov
mov
pusha
and
call
gs
cmp
shr
inc
push
mov
ins
push
add
push
cmp
clc
fcmovbe
or
inc
in
aas
and
pushf
xchg
mov
xor
pcmpeqb
pushf
out
(bad)
pop
jg
inc
out
fst
call
scas
mov
lods
mov
loop
adc
inc
sbb
retf
mov
arpl
pop
push
jge
sbb
xor
dec
mov
std
into
sub
jne
imul
mov
xlat
repz
in
outs
shl
adc
das
or
lds
aas
mov
call
or
test
ss
or
add
call
or
(bad)
call
mov
(bad)
outs
cmc
popf
pop
xchg
jg
xor
shr
fwait
dec
or
mov
mul
push
add
sti
stc
xlat
(bad)
imul
cmc
and
push
(bad)
mov
popf
sbb
sbb
adc
xchg
das
jl
push
(bad)
mov
xor
adc
cmps
out
retf
xor
mov
scas
inc
in
scas
push
stc
stos
mov
stos
hlt
les
fsub
xor
sbb
or
add
daa
aad
mov
scas
std
jns
cmp
mov
or
cmp
test
xchg
(bad)
jg
dec
and
cmp
popf
jbe
pop
sub
push
xor
xchg
out
test
repnz
lahf
or
std
xchg
ja
sahf
xlat
push
cmp
xchg
adc
or
in
aaa
or
out
mov
xchg
sbb
xor
dec
in
inc
(bad)
out
leave
shr
sbb
ret
movs
retf
dec
aas
fwait
mov
test
fdiv
fcmovbe
pop
ins
test
fmul
clc
shl
xor
paddusw
das
jle
das
cdq
dec
pusha
jbe
mov
cli
push
lods
leave
ins
xchg
xor
dec
pushf
scas
das
push
jp
or
cdq
pop
daa
pop
jge
ins
add
sbb
or
ds
div
in
int
jp
cmp
xchg
arpl
aas
or
xchg
pop
push
int3
xchg
mov
inc
inc
pusha
rol
or
inc
jecxz
cmp
(bad)
cmps
xor
add
pop
xor
repz
pop
push
push
sahf
lds
mov
or
dec
mov
xchg
loope
and
popf
jns
jecxz
inc
(bad)
jge
pop
dec
out
jae
in
in
fiadd
dec
jb
shr
std
into
and
and
test
dec
and
sahf
sbb
dec
cmp
add
dec
ja
stos
and
mov
icebp
fld
clc
les
mov
cmp
and
mov
and
mov
aad
dec
lea
bound
ds
dec
clc
out
inc
(bad)
clc
test
jae
xchg
adc
test
cmp
add
ss
sub
mov
out
adc
xchg
ret
or
jnp
loope
(bad)
fistp
imul
out
cs
cli
cmps
xchg
xor
outs
mov
dec
rol
stc
fisub
daa
test
mov
popa
fsubr
and
shr
pushf
sbb
scas
neg
dec
ins
push
mov
or
cmps
movs
repnz
loop
adc
jbe
add
adc
repnz
inc
push
jnp
xchg
jns
out
fdiv
icebp
push
xchg
into
hlt
push
push
push
stos
or
nop
push
retf
(bad)
or
popf
repz
sbb
jmp
mov
fst
cmp
and
hlt
or
neg
movs
sbb
into
mov
repz
and
sbb
movs
pop
cmp
sub
leave
movs
cmp
std
cmc
jae
xchg
xchg
cli
cmc
ins
movs
aas
or
xchg
mov
test
test
add
adc
bound
mov
lahf
mov
jb
mov
push
pop
xchg
stos
aad
adc
std
aaa
aaa
and
jo
out
xchg
dec
jne
(bad)
pop
popa
pop
cmc
or
(bad)
xchg
out
cdq
cmp
mov
push
ss
sbb
int3
aas
int3
cmp
test
(bad)
je
xor
mov
sbb
fsub
mov
pop
rcl
lods
(bad)
pop
and
into
push
movs
sub
mov
aas
stc
stos
mov
jecxz
mov
pop
(bad)
jmp
hlt
retf
push
dec
ds
mov
(bad)
sar
sub
dec
jno
icebp
xchg
ror
ja
into
lods
pop
mov
icebp
and
sti
fistp
mov
pusha
mov
inc
sbb
aad
out
aam
cdq
mov
out
ins
dec
mov
(bad)
out
out
cmp
cmp
dec
fsub
mov
mov
or
push
shl
daa
cmps
push
rcr
cdq
dec
push
retf
xlat
jecxz
out
sub
lds
pushf
mov
jbe
push
mov
out
mov
jmp
jle
(bad)
scas
out
and
daa
ds
push
mov
hlt
and
divps
jae
ss
fwait
push
pop
cmp
fucom
ret
pop
or
loop
mov
mov
iret
or
(bad)
fstp
fstp
jl
pop
sbb
fldenv
mov
jb
sub
mov
xor
sub
xor
jmp
push
int
stos
or
ja
fimul
scas
shl
lock
ds
ds
sbb
push
jecxz
xchg
into
stos
retf
(bad)
mov
shl
and
retf
ja
jno
inc
jno
pop
repnz
xchg
popf
and
loop
fldenv
sbb
mov
out
stc
(bad)
jmp
stos
jge
add
aas
aad
xchg
repnz
push
sub
iret
and
xlat
inc
cld
add
inc
cs
mov
pop
int
ds
inc
mov
sub
mov
test
mov
mov
into
test
icebp
(bad)
dec
div
cmps
add
call
mov
mov
in
retf
pop
mov
call
and
dec
xchg
mov
jo
loop
loopne
cli
rcr
stos
push
inc
imul
(bad)
mov
fwait
ret
pop
outs
push
data16
in
push
out
cdq
cmc
jno
push
or
jmp
sub
stos
sar
mov
fld
call
clc
scas
xor
and
jo
push
adc
sub
out
and
scas
or
lods
cmp
mov
repnz
cmp
dec
mov
jecxz
pop
xchg
inc
cli
mov
push
les
jmp
jno
mov
jne
push
sahf
jecxz
push
rcl
inc
jae
stos
sub
xor
loopne
scas
xchg
adc
ror
and
ja
jae
pop
sbb
mov
push
mov
das
inc
sub
std
xor
jbe
loope
(bad)
xchg
and
jnp
(bad)
cli
je
int
adc
jnp
call
pop
push
jmp
jmp
push
sbb
push
nop
ds
test
sbb
pop
jmp
ins
test
inc
aaa
cmp
cli
cwde
stc
(bad)
ins
jns
fiadd
mov
ja
movs
fwait
add
jle
cmp
fmulp
mov
stos
pushf
cmps
push
inc
mov
or
nop
inc
js
data16
mov
jb
add
and
or
push
jnp
test
xor
imul
pop
out
les
xor
cli
arpl
adc
cmc
lahf
mov
mov
js
xchg
outs
mov
out
sar
adc
fnop
and
call
pusha
stos
repnz
lods
rcr
retf
sub
pop
push
ja
cmps
in
xchg
dec
push
push
pop
(bad)
adc
mov
inc
adc
push
cmp
aad
bnd
ror
mov
push
xor
inc
pop
mov
enter
mov
push
test
cli
ss
and
cmps
stos
xor
cmp
push
pushf
push
pop
jno
push
retf
xor
lea
sbb
mov
push
mov
pop
pop
shl
rcl
mov
sub
sbb
cld
push
sub
in
test
add
cmps
push
push
loop
mov
sbb
enter
adc
sti
retf
xor
adc
enter
inc
mov
jns
cmc
push
dec
(bad)
pop
push
in
jecxz
stos
repnz
inc
mov
stos
push
dec
cmp
xchg
test
jo
jb
adc
and
and
and
in
retf
nop
push
int3
or
pop
dec
adc
mov
inc
dec
jmp
arpl
mov
dec
test
push
add
and
cmps
or
xor
adc
into
push
pop
mov
loopne
push
sbb
scas
xchg
pop
or
mov
xchg
dec
stc
dec
jle
inc
push
rol
ror
mov
std
jo
sbb
and
jne
inc
pop
(bad)
(bad)
inc
rcl
sti
add
loopne
retf
(bad)
jno
pop
and
fxch
inc
inc
push
jne
ret
shl
call
les
ja
xor
and
aaa
mov
push
retf
shl
adc
push
lods
push
push
adc
mov
or
jbe
dec
in
pop
jp
cmp
push
(bad)
repnz
movs
inc
and
cmc
pavgb
inc
push
ds
fld
iret
dec
in
and
lods
imul
sub
mov
and
inc
and
(bad)
xchg
(bad)
jno
and
aad
mov
test
mov
inc
jle
mov
sbb
fs
sub
ret
xlat
add
mov
jns
int
xchg
rol
pushf
retf
in
je
mov
cmp
cmp
mov
ins
out
pop
inc
das
xchg
outs
mov
inc
shl
mov
int3
xchg
pop
xchg
ret
mov
sub
scas
daa
int
adc
sub
cld
stos
adc
movs
cmp
dec
mov
dec
sbb
mov
push
lds
fild
adc
xor
xchg
or
push
sub
mov
sbb
stos
jecxz
xchg
lods
lahf
jecxz
add
fs
mov
xchg
inc
sub
and
inc
add
in
mov
and
cmp
shl
or
(bad)
cmc
hlt
int3
mov
xchg
dec
pop
daa
sbb
std
jle
jnp
push
lea
(bad)
cdq
cwde
mov
or
sbb
push
repz
stos
cmp
movs
mov
iret
fnsave
addr16
jnp
fiadd
xchg
add
push
and
es
ds
jnp
aas
cmp
jp
mov
pop
xchg
std
pushf
mov
dec
xor
lods
pushf
pop
dec
or
mov
jmp
int3
push
add
ins
imul
mov
pop
ss
dec
pop
cli
cmp
cmps
pop
mov
push
jecxz
dec
dec
xlat
leave
xchg
into
leave
xor
into
imul
in
in
pop
std
mov
push
and
leave
xchg
cwde
xor
nop
enter
in
sbb
fimul
mov
sbb
loop
out
mov
jno
pop
stos
scas
cmc
push
(bad)
lock
stos
js
ret
repz
jmp
adc
inc
jns
mov
and
es
or
xchg
loopne
or
or
sbb
add
xchg
js
mov
xchg
or
jns
je
adc
and
push
sbb
push
add
jo
push
jle
repz
and
add
cs
lea
cmps
mov
jne
sahf
enter
popa
xchg
jno
dec
(bad)
sti
fptan
xchg
imul
(bad)
test
add
loop
inc
idiv
sub
test
mov
jmp
xor
sub
push
cmp
cmps
mov
jno
leave
aam
rcl
pop
inc
outs
aad
retf
div
call
jg
xchg
adc
div
adc
push
adc
xor
aam
out
push
sbb
push
cmc
sbb
inc
jae
in
fimul
test
mov
sti
mov
mov
test
fisttp
popa
push
sbb
mov
scas
jge
in
mov
mov
push
sub
(bad)
sub
xlat
scas
push
cmp
movs
mov
jo
mov
and
sbb
or
sub
icebp
fiadd
fldenv
faddp
aad
popf
push
or
adc
push
(bad)
or
pop
dec
push
jne
imul
(bad)
repz
mov
jp
xlat
xchg
mov
enter
xchg
ss
jp
into
ret
addr16
and
ret
imul
in
mov
jno
push
or
sub
mov
cli
lods
adc
outs
addr16
cmp
jne
sar
ret
repz
jp
xor
jno
cdq
xor
push
ss
sbb
mov
and
and
(bad)
adc
dec
imul
and
sub
sub
and
in
and
push
rep
jnp
push
repz
ins
popa
fbld
xchg
ins
mov
add
rcl
jg
das
sbb
imul
lock
cmp
call
xchg
dec
push
(bad)
in
mov
shr
and
lahf
xchg
xor
sar
dec
add
add
dec
shl
pop
add
push
mov
sahf
loop
out
dec
adc
pushf
pop
fld
mov
xlat
mov
add
pop
movs
or
retf
sahf
mov
adc
push
pop
int3
sbb
mov
xchg
xchg
mov
mov
data16
sub
cdq
mov
inc
push
xchg
inc
mov
adc
enter
push
pop
cmp
mov
es
(bad)
scas
and
xchg
push
push
das
xchg
or
mov
jnp
and
sbb
mov
push
scas
or
(bad)
xchg
mov
dec
fistp
aam
in
popa
bound
push
xchg
xchg
icebp
mov
sub
ds
data16
in
das
sub
ret
(bad)
xchg
xor
mov
icebp
jb
stos
ins
xchg
push
jg
cmp
movs
dec
repnz
xchg
mov
inc
clc
or
jns
retf
inc
push
add
inc
gs
and
mov
lds
mov
push
aaa
cdq
loope
retf
mov
mov
inc
movs
dec
mov
lods
das
fs
mov
inc
adc
xlat
mov
push
dec
jecxz
rcr
or
cmc
jg
adc
inc
dec
mov
push
fistp
frstor
or
lahf
xchg
or
imul
out
ror
loop
loope
or
(bad)
fdivr
xchg
inc
and
gs
or
(bad)
sbb
icebp
(bad)
dec
sbb
pop
mov
mov
cdq
and
in
dec
imul
push
sub
fnstenv
cmp
outs
retf
adc
mov
mov
jl
push
in
fadd
add
mov
dec
je
xchg
not
dec
mov
mov
mov
fimul
inc
or
loopne
pop
sti
push
inc
aad
cwde
stos
fs
enter
fwait
cmps
rol
xor
xchg
xchg
in
inc
cmp
out
dec
jno
call
hlt
jmp
dec
addr16
ret
push
sti
inc
lods
retf
lahf
jg
add
and
add
pop
push
jo
mov
daa
inc
int
fwait
(bad)
jge
repz
jb
ds
xchg
push
jno
xchg
and
jmp
sbb
xchg
inc
xor
sub
mov
and
shr
aam
mov
jmp
jns
xchg
iret
sbb
imul
and
mov
adc
in
push
sub
and
leave
sub
or
mov
(bad)
cmp
sub
sti
mov
out
jge
aam
mov
mov
scas
mov
addr16
inc
mov
in
dec
ds
out
ror
scas
or
cmp
imul
sub
add
movs
mov
adc
xor
iret
shl
(bad)
sub
sbb
repz
ins
pop
aaa
dec
pop
popf
jne
dec
leave
mov
lahf
fucom
adc
mov
sub
out
nop
retf
mov
test
jp
adc
push
in
aaa
shl
data16
daa
xchg
inc
jbe
push
outs
and
dec
ret
movs
push
jmp
cmc
push
icebp
and
xchg
pop
gs
pop
lods
lock
dec
xchg
sbb
sbb
jae
(bad)
mov
pusha
sbb
ret
mov
pop
clc
push
xor
test
sub
mov
jmp
jo
in
mov
repnz
pop
or
(bad)
rol
loope
inc
sbb
sub
add
push
mov
mul
test
add
lods
call
aad
adc
enter
jno
push
test
cmp
bound
cmp
pusha
dec
jns
jmp
or
mov
or
cmps
mov
jp
sbb
lods
cmp
fldcw
pop
ss
xor
xor
and
mov
jnp
loope
out
push
push
add
mov
or
xchg
inc
outs
mov
inc
mov
push
push
rcr
fwait
hlt
out
xor
or
imul
mov
fisub
int
inc
mov
retf
mov
into
sbb
pop
xchg
xor
xor
xchg
adc
rcl
mul
imul
jno
fdiv
sbb
pop
add
test
loop
mov
or
dec
mov
sub
dec
fiadd
fld
das
mov
jecxz
ja
stos
in
fstp
sub
xchg
mov
adc
fld
retf
std
push
push
arpl
and
es
cmps
ss
icebp
xor
and
icebp
pop
dec
mov
aaa
movs
cwde
mov
repz
sub
add
or
neg
movs
movs
cmps
or
outs
lea
aas
in
cmp
lock
sub
sub
jo
rcr
fnsave
or
cs
jmp
push
sahf
test
jns
scas
cmps
add
mov
pop
in
adc
xchg
arpl
mov
leave
xchg
aaa
push
sti
rcl
jmp
jp
jbe
push
mov
aaa
mov
pop
jp
je
xchg
xor
cdq
add
es
mov
inc
inc
mov
mov
pop
push
repz
xor
rcl
sbb
mov
jmp
repz
cmp
pop
or
inc
pop
push
mov
scas
xchg
add
icebp
fdiv
(bad)
jns
mov
sub
or
aaa
mov
xchg
jmp
or
loope
loop
jmp
push
(bad)
push
cmc
cmp
ins
(bad)
lods
sbb
mov
push
imul
sub
mov
sti
jnp
std
in
sbb
inc
xlat
push
add
ds
jecxz
sbb
jo
sub
cmps
add
test
push
inc
aam
retf
fwait
jmp
mov
lahf
jl
dec
ja
inc
cmp
pop
sub
fidivr
jge
fidiv
push
dec
dec
mov
cmp
mov
push
jno
cmc
xchg
lds
fldcw
jge
push
dec
xor
(bad)
pop
mov
out
mov
xchg
jnp
or
popa
imul
scas
mov
es
dec
cmp
loop
loope
push
leave
push
cmp
push
adc
arpl
xor
jo
int3
mov
aas
add
mov
sub
call
mov
cdq
int3
mov
gs
aas
cmp
cmp
dec
add
(bad)
lods
popa
jl
je
arpl
mov
mov
sub
mov
add
stos
sahf
dec
outs
mov
sahf
mov
dec
into
mov
mov
das
int
dec
and
mov
shl
sbb
xor
jp
idiv
daa
sbb
loopne
mov
dec
sti
aad
push
mov
push
(bad)
fld
movs
or
or
mov
cmp
jmp
cdq
movs
mov
fcom
enter
out
bound
fldcw
idiv
dec
fisubr
add
dec
jnp
inc
sbb
ds
test
inc
stos
mov
push
and
xchg
js
cmc
mov
mov
adc
ror
fwait
gs
sbb
pop
aas
mov
push
ds
(bad)
scas
dec
and
add
jmp
adc
lea
fld
ret
mov
data16
dec
xor
lea
xchg
in
xlat
fistp
mov
repz
dec
cmp
xchg
aas
and
dec
sub
push
ins
sbb
jae
add
inc
sub
jmp
or
add
arpl
jp
pop
sub
mov
int3
das
jge
add
iret
jns
cdq
loop
and
inc
mov
or
sub
js
movs
pop
sub
cmc
inc
ins
xchg
jmp
inc
jo
and
test
in
sbb
xor
aad
and
cld
ja
push
xor
hlt
in
aas
dec
mov
push
xor
or
rol
ins
ins
enter
push
dec
mov
mov
(bad)
pop
repz
mov
out
addr16
push
pop
sbb
dec
xor
callw
mov
(bad)
mov
fsubrp
adc
iret
addr16
inc
lods
hlt
xchg
repz
inc
ins
cmp
sahf
repnz
and
xchg
mov
mov
add
repnz
sar
pushf
int3
cmc
jecxz
ins
sbb
loope
call
jmp
pusha
pusha
mov
iret
xchg
cwde
cmps
or
in
or
xor
xchg
inc
(bad)
cs
add
mov
ds
cmps
sub
cmp
add
jle
fld
jo
gs
dec
mov
cwde
push
sub
rcl
lods
mov
adc
jecxz
and
cmc
repnz
sti
jmp
call
popf
jo
or
jnp
nop
push
xchg
fnstsw
test
cmp
or
(bad)
sbb
out
loop
and
cdq
aad
call
repz
mov
push
cmp
sti
aas
mov
sub
mov
push
popa
in
sbb
mov
jae
in
cmp
sub
xchg
xchg
and
(bad)
inc
ficom
cmp
jmp
and
pusha
in
sar
mov
dec
xchg
dec
repnz
lahf
push
cmovl
aas
not
xlat
xchg
add
xor
mov
cmp
lds
(bad)
pop
pop
sub
push
mov
into
daa
fild
(bad)
or
adc
jmp
inc
sub
ret
neg
dec
retf
stos
mov
nop
jns
mov
lods
ins
movs
das
sbb
fmul
cmp
push
mov
sbb
out
out
sar
sbb
sub
aam
cmp
push
add
rcr
(bad)
sbb
retf
sbb
jnp
mov
add
adc
sub
je
jns
mov
iret
out
test
cmp
or
dec
xchg
xlat
pop
xchg
sbb
jne
shl
inc
aas
sti
dec
add
ss
loopne
dec
pop
adc
or
jge
push
push
inc
cmps
pop
outs
adc
mov
pop
das
jbe
call
stos
pop
add
fs
jno
jge
xlat
mov
sbb
mov
mov
daa
jae
add
in
fadd
push
in
fcmovnb
(bad)
ret
sbb
sbb
dec
sub
mov
test
inc
rcl
ja
pop
sbb
mov
js
into
movs
sti
retf
pop
add
not
aam
add
ret
mov
pusha
fnsave
ss
mov
iret
mov
xor
mov
sub
mov
xor
and
cwde
sub
orps
push
repnz
fnstcw
pop
push
pop
fdivr
xchg
das
aad
stos
jne
ret
and
lods
fcmovnb
push
inc
aad
rol
out
pushf
pop
sub
xchg
clc
or
fld
aam
push
ror
jg
inc
pop
xor
mov
pop
sbb
sahf
mov
sbb
neg
jo
inc
xlat
inc
adc
call
xchg
and
dec
cmp
xlat
neg
(bad)
push
pop
fwait
jns
jg
dec
in
mov
mov
fyl2x
dec
cli
inc
xacquire
mov
mov
es
repz
adc
in
jg
mov
xor
xchg
out
test
xchg
cld
and
xchg
mov
xor
mov
cdq
push
jp
(bad)
mov
xchg
mov
xchg
add
push
adc
fnstcw
loopne
nop
push
sti
xor
arpl
test
sbb
and
lahf
outs
ror
sub
cwde
xor
or
jnp
add
jmp
jle
mov
mov
sbb
jo
ror
or
inc
div
stc
cmp
cmp
stos
add
aas
mov
adc
add
dec
cld
push
(bad)
pop
mov
adc
in
sbb
fld
nop
bound
movs
dec
leave
xchg
or
jb
add
cs
ret
sbb
scas
scas
push
and
fwait
adc
push
xor
xchg
sbb
fcom
jb
sahf
xor
dec
jae
test
xor
ins
lds
stos
es
clc
repz
add
enter
inc
jno
jo
jb
mov
sbb
push
jmp
es
test
pop
mov
cmp
mov
(bad)
daa
shl
push
push
les
push
loop
mov
mul
pushf
sub
adc
mov
adc
retf
push
inc
(bad)
jecxz
jo
xchg
add
adc
repz
in
dec
jl
adc
stos
ror
xor
fmulp
sub
adc
pop
or
cmp
imul
push
inc
inc
jge
leave
or
pop
lods
push
ja
pop
loope
leave
ss
sbb
push
jl
shl
js
retf
or
sub
sub
enter
xor
mov
popf
cwde
sub
sbb
loope
and
scas
retw
xor
push
daa
pushf
imul
and
fsubr
and
aad
mov
or
xchg
cld
sub
les
jge
(bad)
(bad)
push
pushf
call
lock
fcom
adc
rol
js
sub
jl
xchg
mov
jl
pop
xchg
mov
aaa
push
sbb
out
shl
sub
out
pop
jp
inc
push
mov
imul
mov
cmp
sub
scas
pop
xor
mov
mov
xor
xchg
jp
xor
or
cmp
cli
pusha
adc
int
xchg
sub
(bad)
shl
cs
int
rcr
sub
mov
iret
jle
in
cmp
sub
out
mov
mov
push
nop
dec
adc
pop
fisttp
ds
add
sbb
popf
arpl
fwait
into
ins
xchg
arpl
push
mov
sbb
pop
shl
ret
movs
and
and
ror
lock
adc
sub
ins
push
mov
retf
inc
xor
mov
loopne
jnp
mov
popf
and
pop
scas
int3
mov
and
and
inc
add
test
retf
dec
push
scas
lds
in
adc
xor
inc
pop
mov
and
lods
add
aam
mov
adc
enter
pushf
in
es
lods
das
cdq
(bad)
int3
imul
dec
push
mov
stos
pop
and
mov
mov
test
outs
pop
cli
or
or
inc
cmps
cmp
jo
out
pop
sbb
into
out
out
jo
and
lock
dec
mov
cdq
not
lods
inc
out
cmp
fild
xchg
and
enter
into
or
and
cmps
pop
adc
cmc
in
inc
test
xchg
clc
or
xor
dec
and
pop
mov
inc
addr16
fsub
call
rcl
mov
cld
push
adc
aaa
pop
adc
mov
iret
cmp
movs
gs
cs
test
into
jle
(bad)
mov
mov
sbb
scas
xor
gs
xor
(bad)
and
int3
jno
lds
add
mov
retf
std
pop
out
dec
xchg
jp
fld
xor
sub
push
(bad)
(bad)
icebp
arpl
and
push
or
imul
and
ins
pop
xchg
pop
xor
push
xchg
std
mov
cdq
loope
movs
(bad)
cwde
test
ins
into
pop
sub
mov
xor
imul
xchg
push
mov
ret
out
inc
inc
jle
pushf
fld
outs
ret
and
std
xchg
cmps
arpl
mov
adc
scas
add
mov
icebp
mov
dec
mov
rol
mov
(bad)
push
or
mov
test
cmc
cli
and
nop
cmp
mov
inc
pop
ds
mov
xchg
and
sbb
shr
hlt
test
mov
pushf
dec
sub
lea
sub
cmp
fimul
imul
jmp
cmps
hlt
and
inc
push
mov
sbb
inc
ret
sti
sbb
jnp
mov
into
cmps
retf
mov
iret
sub
dec
xchg
rcr
inc
mov
jge
jae
mov
push
ss
mov
loop
outs
fisub
mov
fild
movs
cmps
cmp
inc
push
fcom
cmp
adc
adc
cdq
mov
ret
jne
or
mov
repnz
mov
mov
sub
dec
push
daa
and
mov
add
cmp
adc
or
dec
test
mov
xor
xor
fmul
jg
mov
mov
pop
dec
xlat
arpl
xor
repnz
fiadd
mov
stos
sbb
sub
push
jle
into
pop
int3
xchg
and
xchg
jg
je
aas
mov
sbb
sbb
jmp
test
mov
dec
cwde
retf
adc
imul
test
retf
jge
into
call
adc
xor
mov
out
adc
add
jle
and
iret
rcl
int3
sub
pushf
cmp
ja
inc
js
inc
pop
out
mov
adc
add
adc
stc
and
rol
add
jmp
xor
mov
push
mov
push
xchg
inc
rol
inc
fisubr
pop
inc
into
dec
mov
pop
ror
daa
(bad)
pop
xchg
cmp
lods
out
or
pop
into
push
push
push
inc
dec
retf
dec
popa
sub
mov
and
test
jo
sar
jno
cmp
inc
loop
enter
aad
mov
int3
cmp
xchg
sbb
push
xchg
js
out
test
jo
xchg
mov
add
adc
mov
sahf
jecxz
cmp
mov
daa
adc
idiv
ss
fmul
jbe
or
outs
mov
xlat
xor
cmps
retf
mov
or
xor
adc
or
movs
in
and
jp
jl
repz
add
hlt
call
lahf
xor
mov
pop
stos
scas
add
(bad)
xchg
lock
sbb
je
jg
popf
or
aaa
pop
add
retf
mov
pop
cld
cmp
or
add
xor
adc
sar
mov
(bad)
adc
out
imul
fmul
dec
sbb
sub
sar
emms
adc
stos
add
xor
cwde
ficom
push
bound
jbe
inc
daa
rol
push
pop
inc
mov
daa
adc
add
je
sub
ret
dec
outs
mov
push
mov
inc
ins
loop
inc
retf
call
jmp
adc
in
pop
in
dec
pop
pop
js
mov
dec
stos
xlat
push
lahf
push
dec
movs
mov
lods
mov
mov
mov
ds
xchg
cmc
add
mov
ror
add
(bad)
(bad)
shl
cmp
cmp
or
dec
xchg
push
lds
push
cmp
dec
dec
nop
stos
sub
ins
frstor
pusha
cs
repz
pop
test
test
mov
fdiv
movs
add
js
cld
popf
dec
js
scas
push
jb
clc
cmc
loope
leave
arpl
push
test
call
mov
xchg
jo
xchg
scas
add
out
fmul
(bad)
std
mov
cld
xchg
popf
push
jae
data16
xchg
cwde
data16
out
ds
jns
sbb
sub
(bad)
and
cmp
enter
test
cmc
je
test
xor
or
loop
fwait
int
icebp
fst
fs
push
xchg
call
sub
pop
(bad)
cmp
cmp
jle
cli
movs
jno
push
in
int
addr16
inc
adc
test
cmp
push
cmp
repnz
test
std
fist
pop
loope
adc
enter
jbe
dec
stos
dec
bound
aas
jo
pop
push
jne
pop
jg
leave
mov
outs
mov
adc
jl
movs
cli
ss
into
pop
or
add
ret
scas
jmp
fiadd
ret
dec
imul
dec
sub
jbe
mov
loop
ins
add
ret
leave
mov
xor
or
fidivr
(bad)
(bad)
pop
mov
inc
jp
dec
xchg
jecxz
push
jae
jnp
push
lahf
adc
(bad)
push
or
retf
dec
xchg
retf
fdivr
stc
out
push
mov
pop
inc
int3
jae
xchg
arpl
sub
popa
into
cmps
push
add
xchg
cmp
div
pop
out
mov
fld
pop
cmps
aam
(bad)
(bad)
ja
aas
mov
cmp
hlt
fcomp
xchg
cmps
int
mov
ret
or
arpl
cmps
add
mov
pop
sub
add
loop
inc
scas
pop
push
lds
mov
shl
cmp
arpl
push
sbb
fdivr
add
or
pop
scas
dec
retf
cmp
retf
repnz
cmps
clc
fwait
ret
leave
adc
dec
ds
dec
and
lock
push
pop
in
cmp
xchg
mov
das
jnp
(bad)
imul
fistp
(bad)
fisttp
fwait
add
mov
sbb
mov
jg
sar
in
pop
sti
xor
cmp
pop
and
mov
or
and
dec
inc
sbb
in
cmp
mov
std
js
fdiv
fnstenv
xor
stc
inc
mov
xchg
popf
(bad)
iret
sub
fadd
mov
icebp
sbb
xchg
sub
and
mov
or
xchg
or
das
ds
jle
adc
jne
adc
pop
shl
or
std
mov
fisubr
popf
dec
movs
push
mov
fld
ret
xor
movs
repz
mov
mov
fdivr
mov
shl
ficomp
inc
(bad)
jno
aam
in
xor
fwait
cld
mov
mov
or
push
cmps
mov
rcr
mov
popf
cdq
sub
movs
xchg
xchg
push
xchg
or
aad
ret
inc
jns
cmc
push
out
rol
int3
imul
cdq
rol
gs
mov
popf
mov
mov
mov
and
sub
stc
lods
and
addr16
mov
inc
stos
mov
mov
jns
jecxz
(bad)
fnstsw
sbb
call
or
pushf
(bad)
sti
aad
push
cmp
movs
popa
mov
sbb
push
shl
inc
ror
lock
push
test
std
enter
mov
and
aad
mov
call
cwde
xchg
dec
pop
fnstsw
int
ret
inc
push
pop
and
xchg
out
data16
ficomp
outs
adc
push
jmp
xor
shl
ins
push
addr16
and
push
inc
xlat
and
das
fild
test
dec
shl
and
adc
or
mov
push
mov
mov
mov
sub
out
push
out
mov
cmc
mov
or
(bad)
repnz
scas
dec
or
int
add
adc
aaa
sub
int
adc
mov
push
in
inc
push
loop
in
xchg
rcl
xor
mov
pop
adc
inc
das
repz
cmc
(bad)
adc
scas
pop
pop
add
fisubr
jecxz
(bad)
xor
mov
dec
push
cs
pushf
add
repz
inc
scas
dec
dec
test
sbb
mov
out
rol
popf
adc
sbb
dec
shl
and
pop
outs
call
cwde
adc
in
js
icebp
pop
sbb
in
pop
inc
jecxz
sbb
ret
add
sbb
fwait
jae
cld
sbb
mov
mov
fsub
scas
sbb
idiv
sti
xor
movs
or
div
call
out
add
(bad)
shl
mov
mov
in
outs
ror
add
sbb
sbb
aas
call
add
cld
(bad)
inc
shr
outs
outs
xchg
repz
mov
(bad)
push
pop
lock
jg
test
mov
es
pop
mov
enter
cmp
push
lea
fsub
test
repnz
mov
les
leave
jno
je
inc
call
cmp
jmp
xlat
mov
xchg
mov
icebp
inc
inc
sub
jns
es
lahf
(bad)
loopne
push
xchg
xchg
xchg
xchg
jl
mov
lea
push
stos
hlt
imul
push
mov
fimul
jb
call
popf
cdq
inc
adc
(bad)
mov
xor
(bad)
inc
inc
jno
outs
bound
adc
xchg
stos
in
dec
daa
fs
fldz
fwait
dec
xor
call
inc
test
(bad)
sbb
test
xor
mov
mov
loop
aam
in
sbb
adc
daa
pop
xchg
into
test
shl
jno
xor
cmp
shl
jecxz
fmul
add
out
aad
aaa
jge
and
mov
and
jp
mov
sub
mov
and
inc
or
push
aas
das
sbb
lahf
outs
and
aam
out
in
xor
add
inc
jae
into
out
push
push
mov
pop
add
ror
jb
iret
pop
fcomp
in
xchg
enter
push
je
xchg
(bad)
gs
mov
fwait
jbe
hlt
fisubr
mov
dec
xchg
pop
xchg
aad
aaa
xchg
imul
mov
ins
(bad)
je
sbb
mov
push
xor
lods
sbb
xor
outs
popf
cmp
call
pop
lock
dec
movs
jmp
pop
js
test
jmp
cld
clc
das
sbb
cdq
outs
xchg
lahf
jle
adc
mov
push
add
int3
dec
scas
and
out
or
daa
mov
xlat
call
mov
pop
xor
repz
sbb
dec
mov
jno
fistp
mov
jp
les
repz
jae
mov
jbe
xchg
loope
inc
iret
pop
loop
aas
adc
test
xlat
xchg
push
xor
sbb
or
jg
jnp
sar
mov
sub
mov
mov
xchg
dec
adc
mov
push
lahf
popa
sbb
pop
inc
pop
rcl
pop
loop
inc
js
fisubr
pop
ret
aaa
loope
repnz
ret
sbb
test
pusha
adc
jecxz
lods
lods
inc
push
mov
xor
xor
aam
repnz
inc
test
dec
outs
mov
out
inc
mov
cmp
movs
movs
stos
jmp
jge
pop
cmp
clc
es
or
fisttp
in
push
xchg
sbb
fs
jo
mov
arpl
dec
xchg
rol
outs
cmp
pushf
out
ret
aas
jg
dec
repz
(bad)
cmp
adc
cmp
dec
sahf
shl
(bad)
sbb
jne
dec
mov
aas
mov
and
push
inc
fnstsw
mov
cdq
pusha
jl
or
sbb
fs
sub
stc
sti
outs
jns
shr
push
ins
add
pop
cmp
xchg
stos
cmc
ja
out
mov
inc
or
adc
aam
into
push
mov
les
add
imul
pop
aad
mov
inc
jl
pop
scas
loope
mov
inc
pop
sub
rcl
scas
fs
xchg
push
cmps
push
mov
pusha
xchg
mov
mov
scas
in
inc
inc
adc
mov
fdivr
jl
mov
test
xor
sbb
repz
inc
push
mov
adc
jecxz
xchg
int3
xor
jae
add
mov
cld
rcl
stos
mov
jo
mov
push
dec
inc
bound
adc
shl
cmp
and
jmp
aas
(bad)
(bad)
ror
xchg
lea
push
push
repnz
aaa
or
and
pop
fild
jmp
in
les
data16
call
jnp
js
pop
outs
cmp
jns
cmps
mov
or
leave
nop
add
inc
sbb
add
lods
sbb
out
sahf
ss
(bad)
push
ins
adc
push
test
cmp
cmp
jno
adc
(bad)
mov
mov
cmp
and
pop
mov
arpl
xchg
sub
adc
xor
adc
cmp
shl
popf
or
clc
add
mov
dec
(bad)
scas
call
or
jg
sbb
push
jno
ds
lods
cmps
push
(bad)
ds
and
lods
ins
rcr
dec
(bad)
jb
mul
retf
jle
outs
jno
sub
scas
test
pop
hlt
in
sahf
xchg
jp
lods
jp
imul
dec
dec
repz
xchg
cmps
mov
retf
stos
lea
mov
mov
or
sbb
out
cmps
push
sub
push
jle
mov
(bad)
dec
xor
mov
sbb
std
adc
(bad)
cmp
cmp
dec
mov
mov
adc
fucom
inc
into
fs
mov
pop
movs
push
data16
sar
std
jmp
outs
scas
jmp
pop
lea
mov
(bad)
push
push
jmp
fsubr
or
sub
and
int3
leave
cmp
test
jg
xor
out
lds
push
in
rcl
push
push
fisttp
and
or
push
daa
or
mov
cmp
inc
sbb
inc
add
mov
sahf
(bad)
das
test
bound
dec
fucomip
or
push
dec
pop
dec
cmps
leave
sub
sub
adc
xchg
sbb
xchg
imul
outs
cmp
ret
ja
adc
rcr
and
dec
sbb
mov
jl
inc
sbb
mov
mov
mov
dec
sub
mov
add
xchg
xor
and
pop
fnstenv
fsubp
inc
sti
in
jmp
jnp
data16
mov
adc
inc
push
xor
das
leave
mov
or
pop
stos
aad
je
sahf
retf
pop
and
int3
xchg
jmp
add
inc
jmp
xlat
rcr
cmp
or
test
shl
fwait
into
sbb
nop
dec
add
or
xor
es
xchg
jl
cmp
push
dec
cwde
push
jno
pusha
or
js
hlt
shl
(bad)
xor
jg
std
fadd
fidiv
repnz
leave
pop
shr
bnd
push
jle
popf
aam
ss
into
sbb
push
sub
mov
(bad)
cwde
fild
mov
lock
sub
and
mov
inc
xchg
int
fnsave
dec
add
out
lods
nop
dec
stos
imul
test
cmps
movs
in
pop
(bad)
faddp
sbb
lds
cmp
xchg
daa
(bad)
sub
ret
cmps
mov
out
fwait
cmp
ds
push
arpl
ja
ds
fistp
ror
jmp
lahf
rol
pop
loope
jno
vfnmaddpd
fcmovb
leave
cdq
out
jnp
scas
jb
sub
mov
jl
mov
inc
inc
jmp
popa
(bad)
ins
test
inc
fstp
pushf
push
loope
ins
pop
xor
popf
xlat
push
dec
shr
mov
(bad)
ret
mov
shr
pop
std
mov
push
js
test
mov
jmp
inc
sbb
cmp
pop
aas
ins
and
jmp
jno
ss
aaa
xchg
dec
jmp
stos
xchg
in
mov
pop
pusha
jmp
push
cmc
ffree
ror
cmp
push
xchg
and
clc
xchg
(bad)
arpl
jne
add
inc
ficomp
or
cwde
or
call
and
mul
sbb
cmps
xor
pop
rol
cmp
pushf
cmp
xor
lods
adc
imul
mov
outs
or
out
icebp
adc
sub
pushf
jmp
jno
loope
nop
test
xchg
push
mov
adc
mov
cmp
bound
inc
fcomp
cmps
mov
popf
iret
popf
lahf
push
push
fdivr
inc
in
jno
ss
stos
retf
dec
adc
pop
add
dec
mov
sub
loopne
aas
loopne
retf
jno
adc
fidivr
out
imul
dec
sub
leave
xchg
pop
adc
xor
into
sub
pop
lds
out
dec
(bad)
cld
mov
call
sub
xchg
add
stos
xor
jno
in
add
push
out
test
push
frstor
into
cdq
pop
add
add
data16
mov
ins
(bad)
pop
jp
icebp
jns
push
add
fprem1
inc
xor
and
cmp
leave
ins
enter
fnstcw
daa
shl
sbb
dec
bound
or
mov
xchg
inc
or
add
push
fnsave
jecxz
mov
pushf
mov
mov
scas
jg
retf
loope
cmp
fdiv
movs
jo
outs
out
cdq
cmp
push
add
or
ins
add
shr
inc
inc
dec
xchg
mov
push
inc
nop
repnz
or
aaa
lock
jno
stos
push
mov
sub
inc
inc
std
lock
call
in
jae
cmc
and
clc
xchg
fwait
lods
xor
scas
jne
lahf
jle
push
push
(bad)
or
dec
shl
call
mov
daa
shl
repnz
dec
in
(bad)
adc
jno
adc
lea
push
aaa
lds
mov
or
nop
js
retf
sbb
push
sar
cmp
aam
ins
mov
imul
cmp
iret
lock
or
fst
outs
cld
sub
iret
and
cmps
ins
sti
dec
mov
and
pop
xchg
jnp
inc
and
sbb
xchg
jbe
sti
js
push
ror
mov
cs
push
jmp
jb
fisttp
lea
fld
mov
sar
jl
inc
stos
mov
je
movs
test
xchg
aaa
add
call
xor
xor
mov
add
fs
mov
stos
imul
mov
adc
pop
mov
lds
mov
or
xchg
xchg
push
shr
and
push
mov
adc
dec
call
mov
loope
div
cmp
test
sbb
xor
or
xor
sub
nop
xor
fld
inc
sub
mov
movs
dec
inc
sub
xor
into
js
and
loope
jmp
pop
scas
sub
test
(bad)
or
and
or
(bad)
cli
sbb
ror
(bad)
push
call
add
mov
cmp
lock
dec
cdq
shl
out
cmps
(bad)
push
jae
pop
das
ror
xor
mov
or
inc
cmps
jbe
cmp
cmp
mov
movs
add
sub
fld
lds
cld
dec
xchg
push
cmp
adc
mov
out
leave
inc
fsubr
dec
push
icebp
mov
adc
out
or
pop
jo
push
inc
jecxz
sbb
mov
daa
fistp
dec
jno
and
xor
lods
jmp
bound
push
sub
out
ja
loopne
sbb
xor
xchg
dec
in
mov
jp
outs
ss
scas
and
pop
ins
push
jbe
jnp
pop
mov
ja
mov
sub
mov
push
test
ror
jg
mov
xchg
xchg
sar
push
sbb
sbb
mov
fild
push
ja
xchg
sub
jbe
out
jo
mov
jle
ins
loopne
mov
push
retf
test
inc
mov
xchg
xchg
xor
loop
test
cs
lods
fistp
mov
jne
dec
adc
dec
push
xor
sbb
adc
pushaw
jne
xor
sub
mov
fcmovbe
jno
add
pop
adc
popa
cmp
jg
mov
in
cmp
aad
movs
aam
inc
cmp
mov
jae
mov
leave
adc
imul
mov
idiv
mov
add
jge
mov
inc
push
sbb
adc
push
push
add
jg
mov
outs
(bad)
sbb
xchg
xchg
lds
pop
outs
mov
popa
push
add
mov
pop
loope
(bad)
shr
arpl
jl
xor
cmp
sub
shl
and
mov
pusha
mov
or
cmps
cmp
jmp
cmp
cli
mov
mov
fcomp
call
xchg
and
mov
adc
dec
in
jns
bound
in
dec
in
fdiv
jp
movs
ds
nop
or
je
and
test
jmp
in
mov
mov
jg
jmp
cld
xchg
test
push
jns
(bad)
xor
das
jne
(bad)
xchg
(bad)
jp
xlat
inc
jb
jge
dec
iret
dec
mov
(bad)
ins
push
jecxz
sahf
mov
pop
imul
jne
push
inc
mov
jmp
fwait
ds
mov
adc
ds
(bad)
mov
sahf
cmp
retf
jmp
dec
ror
jbe
loope
sub
adc
adc
push
add
dec
out
pop
stc
mov
sub
sti
and
fst
fbld
ret
idiv
gs
aad
adc
add
mov
daa
(bad)
nop
hlt
loope
outs
jmp
or
in
fidiv
or
jno
jle
xor
mov
adc
lods
or
mov
dec
and
jle
inc
push
sub
add
mov
mov
popa
cmp
or
cmp
std
pop
pop
fld
inc
mov
shr
mov
stos
mov
ins
scas
std
fsubp
enter
nop
mov
out
into
dec
(bad)
pop
shl
call
inc
push
popa
mov
bound
mov
dec
call
test
xchg
arpl
add
adc
dec
jle
pop
inc
or
rol
inc
icebp
add
mov
add
cli
pop
retf
pop
jecxz
xchg
push
test
mov
mov
(bad)
(bad)
cld
das
cmc
inc
or
fist
xchg
rcl
bound
inc
inc
test
in
mov
xchg
xor
lds
call
cmp
mov
inc
sbb
js
adc
out
push
adc
mov
jp
mov
add
inc
(bad)
xor
leave
call
and
popa
stc
cmps
dec
jmp
jp
bnd
sar
push
cmp
sbb
xchg
sub
iret
sub
dec
cmps
inc
or
dec
out
adc
mov
aad
stos
popf
(bad)
sar
adc
jo
push
or
ds
add
retf
sbb
ss
fsub
jmp
mov
and
dec
enter
mov
cmp
dec
in
enter
push
pop
jle
push
imul
std
pop
lods
mov
mov
cld
push
xor
xchg
sbb
scas
jb
out
jnp
jo
cmps
push
dec
add
cmp
sti
jne
test
mov
jg
xlat
pop
int3
pop
jp
movs
push
pop
aas
(bad)
push
jecxz
les
into
mov
pop
ja
(bad)
enter
stc
dec
jne
cwde
ja
inc
xor
mov
shl
xchg
sar
pop
imul
push
rcl
rcr
daa
mov
(bad)
push
or
cdq
in
(bad)
fst
(bad)
std
div
mov
jbe
cmp
inc
and
sub
inc
sti
xor
xor
iret
inc
jl
and
(bad)
dec
xchg
push
sub
sbb
shl
pop
adc
sub
mov
dec
jmp
stos
and
mov
call
push
repnz
and
loop
ss
pop
mov
dec
dec
adc
(bad)
inc
and
mov
adc
and
and
sti
fwait
push
mov
add
cld
pushf
mov
jo
shr
aas
sub
test
add
fisub
es
add
lods
iret
aam
leave
lds
push
dec
out
addr16
adc
sub
push
cmp
push
xchg
es
cmp
loope
out
les
xchg
mov
nop
call
dec
sub
sub
paddusb
shr
imul
lea
movs
pushf
sbb
sbb
stos
cmp
jo
xchg
or
(bad)
sub
(bad)
inc
(bad)
xchg
retf
add
xor
mov
sbb
inc
xor
xchg
test
aaa
movs
aad
lock
jbe
jns
dec
pop
mov
movs
ins
sbb
adc
xor
aas
loopne
ins
push
add
cmp
jg
and
test
add
ret
sub
cmc
xchg
out
cmps
mov
es
test
or
sar
idiv
aas
stos
inc
sbb
sbb
mov
xor
mov
pop
test
or
fsub
in
push
lods
call
pop
push
mov
pop
adc
test
adc
add
shl
jmp
jg
adc
jp
jmp
add
add
aad
push
je
lahf
les
setl
out
retf
xor
xlat
xchg
and
inc
leave
or
mov
pop
add
lds
pop
xor
mov
popa
dec
cdq
mov
mov
xor
push
push
call
pop
iret
scas
je
ret
stos
in
add
lods
jp
fs
arpl
jmp
scas
push
add
cwde
popf
and
jne
cmp
(bad)
mov
mov
(bad)
add
pusha
aam
imul
jle
test
sbb
outs
xchg
test
fbld
mov
sub
adc
lea
mov
add
jge
pop
ret
pop
(bad)
sar
mov
sub
cmp
push
stos
je
test
aam
jge
cmc
(bad)
xor
and
std
jp
jnp
xor
ins
(bad)
in
ficomp
xchg
or
add
push
and
cmp
xchg
cmps
(bad)
cdq
rcl
cmps
push
adc
leave
add
sub
repnz
push
fmul
or
mov
dec
inc
adc
jae
or
sub
pop
jno
lods
mov
ja
jb
mov
std
iret
inc
adc
fistp
cmp
or
cld
xchg
push
packsswb
cmp
les
and
sub
mov
mov
jmp
or
cwde
mov
(bad)
dec
sub
mov
jne
add
or
repnz
adc
push
cmp
push
ja
fs
xchg
or
in
jg
ja
lods
data16
lea
xacquire
enter
ret
dec
pop
pop
or
mov
(bad)
arpl
das
add
xor
push
aam
jae
xor
shl
push
in
loope
cdq
repnz
std
in
push
pop
cmp
xchg
and
or
add
fild
addr16
div
fiadd
shl
cmp
sub
icebp
jp
loop
mov
sbb
dec
scas
jmp
ja
shl
xor
mov
ins
std
lods
ret
xchg
jl
inc
scas
fsubr
jae
cmp
movs
inc
retf
and
icebp
test
sub
mov
jmp
mov
mov
rdpmc
pushf
loopne
push
add
mov
jne
imul
pop
mov
xor
pop
not
test
xlat
add
nop
jmp
sbb
jecxz
mov
sub
push
in
movs
int
add
xor
adc
clc
lods
lahf
les
add
dec
shr
das
add
add
retf
jmp
cmps
mov
sbb
pushf
loope
jns
enter
addr16
imul
test
dec
jp
adc
adc
lods
cmc
lahf
aad
and
xchg
mov
sub
das
or
push
imul
adc
cmp
cdq
pop
js
jle
popa
out
xchg
dec
(bad)
loop
in
xchg
jno
push
push
push
mov
push
or
addr16
enter
jns
jp
xchg
xchg
popa
or
mov
(bad)
ins
cmps
mov
inc
pushf
cmp
stos
outs
push
mov
loop
cld
or
mov
mov
add
rcl
sub
outs
push
iret
jge
icebp
lahf
xor
imul
jnp
mov
inc
ror
ja
inc
add
fild
jno
rol
jbe
stos
cmps
and
jecxz
sbb
jmp
push
inc
jg
xor
xchg
mov
jb
fs
(bad)
cmp
adc
(bad)
push
xor
popa
push
das
mov
or
adc
js
jbe
ror
mov
inc
(bad)
jp
pop
mov
addr16
cmps
add
gs
out
dec
mov
in
out
push
call
pop
dec
enter
and
pop
shl
pop
in
or
int
(bad)
push
sub
sub
cwde
movs
aaa
call
cmp
pop
dec
mov
jno
mov
jge
stos
and
xor
jns
and
mov
xchg
leave
out
cmp
add
mov
lds
out
pop
xchg
jg
mov
in
or
inc
dec
ja
cdq
pop
aas
inc
cmp
outs
inc
push
adc
and
mov
dec
jmp
mov
retf
call
mov
jmp
imul
ret
pop
stc
jmp
jbe
sbb
mov
stos
call
xchg
loopne
sub
push
dec
xchg
in
hlt
mov
fnstcw
sbb
loop
bound
cdq
aad
outs
and
cmp
outs
sbb
jns
xchg
daa
xchg
xor
jno
shl
jmp
push
out
and
fldln2
test
push
xchg
jl
ret
mov
cmp
out
aaa
mov
or
out
retf
or
jmp
dec
xchg
imul
and
xchg
sbb
add
push
out
enter
dec
adc
jno
cmps
daa
loopne
or
aad
dec
mul
aad
sub
and
mov
mov
cmps
and
mov
mov
cli
test
pop
(bad)
ins
stos
mov
shl
mov
add
sbb
fcomp
ins
pop
cdq
push
inc
push
fstp
xchg
jmp
clc
ss
adc
test
inc
inc
(bad)
into
int3
xor
sbb
inc
push
add
fisttp
mov
inc
ins
mov
mov
jne
mov
ret
fwait
inc
je
xor
mov
mov
int3
stos
rcl
cmps
jmp
mov
leave
fisttp
das
retf
arpl
mov
inc
rol
in
fadd
loope
cmp
mov
scas
cmova
and
sub
rcr
fisub
inc
mov
mov
inc
mov
jp
ficom
push
lea
mov
inc
sbb
or
jmp
sub
aas
mov
mov
push
adc
jae
outs
in
shl
scas
mov
idiv
adc
and
jae
cdq
mov
mov
xlat
lods
mov
push
call
lahf
push
cwde
fiadd
into
in
ins
and
clc
cdq
ret
mov
jo
les
dec
xchg
jmp
sahf
aaa
push
inc
jb
test
int
sar
fst
stos
add
fsubr
adc
and
test
adc
cdq
inc
cmp
cmps
jno
dec
push
aaa
jle
retf
movs
lock
fistp
fidiv
sbb
xor
repnz
adc
mul
retf
xor
pop
mov
push
mov
push
jg
mov
(bad)
xlat
dec
ret
mov
mov
dec
push
fcom
out
cdq
mov
xchg
mov
inc
mov
or
dec
stos
add
pcmpgtw
xor
pop
nop
retf
jg
cs
xor
jmp
and
ins
jae
xchg
and
xor
idiv
bound
mov
adc
leave
fwait
dec
push
(bad)
pop
adc
mov
jmp
cmc
dec
adc
(bad)
jmp
mov
cli
lock
out
mov
inc
cmp
mov
mov
dec
(bad)
cmp
ds
hlt
mov
jmp
movs
mov
ja
les
fucomi
stc
ret
aaa
inc
stos
adc
cmps
movs
mov
pop
jmp
call
mov
ret
and
add
loopne
std
push
aad
repz
sar
sub
aaa
retf
jns
add
lds
aaa
adc
adc
ret
pushf
adc
test
or
cmps
or
aad
pop
mov
sbb
add
pop
imul
test
in
scas
inc
popa
or
inc
adc
ret
cmp
jae
pop
cmc
push
push
sbb
or
add
inc
mov
outs
les
and
sbb
pop
test
mov
js
addr16
dec
add
ss
pop
jmp
jbe
xor
cmp
ret
(bad)
sbb
pop
xchg
sar
xchg
jmp
adc
push
push
dec
aad
pop
lahf
sub
test
sbb
xor
mov
and
cmp
jecxz
arpl
xchg
jg
xchg
lock
xor
jge
dec
or
out
addr16
push
ins
in
outs
xor
inc
sub
jecxz
mov
adc
jl
pop
or
pop
out
pushf
mov
cs
push
(bad)
retf
jecxz
jns
and
jne
pop
test
jae
and
xlat
mov
cld
test
into
repnz
mov
loop
pusha
xchg
pop
aam
jns
add
test
push
in
aaa
jmp
jne
mov
push
(bad)
mov
sbb
ror
rcr
push
cdq
push
int
fist
pop
dec
mov
dec
adc
or
out
mov
mov
jp
ss
pop
xor
(bad)
into
imul
add
pop
mov
ss
leave
cli
and
push
fwait
xchg
ja
lods
dec
rol
xor
imul
sub
mov
clc
int3
cdq
sub
jp
cmp
adc
or
test
imul
or
and
or
adc
je
lock
sbb
sbb
dec
cld
pop
lahf
scas
aas
push
ffree
sbb
ficomp
push
test
pop
bswap
jmp
test
mov
dec
ret
push
mov
push
and
cmp
les
clc
stos
push
inc
hlt
xchg
movs
push
icebp
in
dec
or
cld
ss
sbb
sbb
mov
pop
mov
or
mov
outs
pop
imul
das
test
fadd
mov
rol
sbb
xor
imul
xchg
leave
jle
pop
mov
(bad)
sahf
mov
xchg
xor
jae
lds
and
les
es
nop
pop
mov
pop
outs
les
and
in
push
imul
xchg
fiadd
sub
fistp
mov
inc
scas
das
pop
ja
pop
sub
and
std
pop
cmp
sub
xchg
push
mov
add
cmp
(bad)
movs
into
jno
add
(bad)
scas
ret
sbb
ins
xchg
cmps
inc
dec
push
dec
dec
imul
ror
aam
add
je
test
dec
mov
sar
shl
lds
push
sub
outs
mul
hlt
dec
xchg
mov
sub
xchg
pop
push
addr16
jbe
iret
dec
xchg
pop
mov
and
inc
inc
pandn
cwde
and
sbb
rol
and
dec
popa
imul
ret
aaa
pop
loopne
pop
xlat
cdq
mov
shr
gs
lds
sbb
pop
cmp
sub
icebp
outs
xchg
or
cmp
je
pop
xchg
jbe
or
fimul
(bad)
icebp
push
pop
adc
sbb
sub
jecxz
xchg
nop
xchg
cs
in
mov
mov
push
adc
sub
shr
jmpw
push
dec
xchg
add
pop
stc
inc
mov
and
loop
lock
outs
jbe
mov
cmp
mov
add
leave
inc
inc
mov
mov
fild
xchg
fwait
jbe
addr16
xchg
sar
jne
xchg
mov
mov
lds
add
out
sbb
retf
sub
out
cmp
cld
stos
jl
cmp
in
out
repnz
or
daa
cmp
cwde
sbb
pop
fcom
mov
sbb
mov
inc
adc
xor
and
pop
mov
add
jmp
xchg
int
mov
cmp
jnp
mov
mov
cmp
popf
push
mov
test
les
sbb
in
xor
sub
imul
adc
sbb
cdq
push
cmp
add
outs
xchg
out
mov
icebp
inc
pop
fdivr
sub
test
cmps
popa
ret
mov
xor
inc
push
adc
sub
and
es
jl
sub
push
stos
xor
loope
mov
stos
lahf
mov
mov
sbb
inc
sbb
mov
jbe
js
sub
add
inc
int
mov
add
leave
pop
test
out
add
fcomp
mov
js
xor
sbb
lods
xchg
jmp
loope
adc
sbb
mov
and
(bad)
out
fiadd
jecxz
lds
test
mov
js
xchg
lds
repnz
dec
out
xor
push
retf
cmp
push
pop
cmp
repnz
jne
je
bound
push
movs
or
push
les
call
out
(bad)
sub
call
cwde
cmp
mov
cmps
mov
and
sbb
ins
add
ss
or
aas
lock
add
xchg
js
xchg
in
cmp
test
popa
or
add
jae
xor
(bad)
shl
push
adc
dec
mov
pop
xor
loope
xor
outs
push
test
scas
popa
pop
aaa
adc
mov
stc
pop
sbb
add
cmp
pop
cwde
or
xchg
ds
push
(bad)
mov
xor
vunpcklps
lds
xchg
adc
ficomp
test
mov
sbb
mov
out
f2xm1
sar
dec
adc
pcmpeqd
add
mov
add
and
lock
add
mov
cmp
aas
jae
dec
sti
fild
dec
hlt
scas
inc
shl
call
pusha
jnp
stos
in
cld
ds
mov
xchg
sar
div
mov
adc
mov
lods
sbb
out
iret
cmp
dec
outs
(bad)
in
cdq
push
add
loop
fwait
pusha
pop
or
push
jno
nop
fwait
leave
std
cmp
pop
enter
out
mov
rol
sub
jo
xor
int3
jbe
jmp
test
gs
mov
repz
dec
pop
inc
fld
pop
jmp
push
push
and
adc
jae
jo
jp
inc
add
js
sbb
jge
imul
xchg
jae
mov
mov
mov
push
daa
push
mov
retf
mov
test
push
xchg
xchg
(bad)
cli
and
scas
test
int
sub
push
or
inc
jne
mov
pusha
pop
jns
inc
add
push
mov
xor
test
mov
mov
xchg
cdq
pusha
mov
bound
push
sbb
div
cmp
mov
mov
ret
jge
mov
cmp
adc
pop
mov
in
xlat
sbb
cld
leave
fadd
cs
lods
je
sub
lahf
cwde
gs
push
in
das
aad
jbe
call
and
stos
push
fwait
pop
or
cmc
sbb
xor
xor
sub
jns
call
mov
push
test
sbb
cmp
(bad)
ret
xor
in
frstor
mov
jo
jge
pop
ds
or
stc
add
jns
clc
clc
(bad)
lods
lods
test
bound
nop
ins
mov
stc
xor
neg
(bad)
push
mov
xchg
cmp
and
idiv
aad
mov
mov
mov
scas
mov
hlt
pop
sub
xlat
out
jp
mov
lea
ss
mov
xchg
xor
cmp
in
cdq
(bad)
neg
jmp
mov
xlat
cld
sahf
in
adc
mov
pop
and
sbb
push
les
inc
test
cmps
adc
xchg
jb
cmp
(bad)
leave
sar
(bad)
jns
add
stc
add
push
aam
es
js
or
lahf
mov
sub
push
ins
fcmovne
add
pop
jno
outs
cmps
inc
movs
stos
xchg
sbb
and
xor
cmp
sub
lods
or
lahf
mov
sahf
dec
imul
mov
das
fs
sbb
push
adc
imul
fst
pusha
mov
inc
or
add
lods
dec
pop
je
and
pop
cld
jle
stos
das
mov
mov
push
xor
div
mov
into
pop
sbb
mov
pop
jne
mov
mov
jno
and
mov
push
into
sub
test
mov
jge
push
xchg
popf
popa
call
mov
cmps
xchg
(bad)
mov
leave
not
repz
xor
pop
xlat
mov
popf
shl
mov
pop
xchg
(bad)
outs
loopne
jae
xor
jbe
mov
and
jmp
push
sbb
imul
or
pop
push
in
jno
dec
and
test
xlat
shr
inc
push
xor
test
sahf
sbb
pop
neg
push
fnsave
jne
stc
mov
pushf
(bad)
mov
js
push
inc
jmp
sub
or
ret
mov
inc
clc
retf
or
fisttp
sub
lods
push
cmps
push
mov
retf
test
stos
int
pop
and
stc
jbe
xor
or
lods
xchg
adc
cmp
sub
sbb
call
xor
mov
icebp
scas
rol
xor
sahf
addr16
dec
int3
jne
icebp
repnz
sub
std
or
and
sub
loop
and
pop
pmaddwd
push
cmp
out
jno
adc
int3
movhps
rol
push
test
jns
icebp
pop
mov
mov
mov
aaa
dec
test
xchg
xchg
xlat
scas
or
cmps
pop
jbe
sahf
pop
retf
jno
jg
punpckldq
(bad)
int3
adc
mov
xchg
inc
or
aam
cmp
or
aad
popa
push
mov
mov
jne
mov
stos
jle
jae
mov
push
and
jge
push
push
cdq
sahf
or
add
(bad)
test
add
retf
push
xlat
mov
dec
sbb
fnstsw
test
or
das
les
pop
and
and
add
les
inc
mov
daa
aaa
adc
(bad)
test
cmp
cwde
dec
shl
adc
push
shr
add
add
pop
arpl
pop
shl
inc
(bad)
dec
shrd
sub
sbb
mov
or
or
push
push
call
movs
stos
lock
cmp
ins
out
mov
jae
mov
retf
stos
jns
mov
je
or
sub
xchg
xchg
inc
xor
(bad)
js
xor
fldenv
xor
cli
rcl
add
outs
fadd
jne
stos
cs
sub
or
mov
fwait
loope
inc
and
and
jb
jo
hlt
repz
shr
adc
sahf
in
sub
mov
data16
xor
mov
out
xor
jp
packsswb
add
dec
add
jge
push
ins
ret
ror
dec
inc
ret
test
xchg
xchg
xchg
and
fs
sub
xor
pop
dec
mov
inc
push
pop
movs
sub
xor
enter
pop
xor
out
sub
daa
ss
or
retf
test
into
retf
pop
pop
movs
ins
mov
xchg
push
outs
out
(bad)
push
jne
pushf
out
int3
cs
inc
cmp
pop
and
mov
enter
je
loopne
xchg
pusha
ja
das
sbb
test
out
in
mov
shl
sbb
cwde
push
je
addr16
sub
jp
adc
mov
fs
mov
adc
mov
mov
nop
and
jo
gs
rol
or
mov
(bad)
mov
pushf
add
cmc
std
xchg
mov
and
adc
push
push
sbb
pop
scas
cmc
fisttp
dec
xor
or
fild
call
in
mov
add
xor
cmps
popf
ror
mov
inc
sbb
gs
movs
and
mov
push
in
retf
add
dec
add
adc
xchg
lock
dec
jp
and
fcomp
jge
sar
mov
xor
sar
scas
push
xchg
ret
ret
push
leave
xor
stos
or
xlat
jle
push
and
sar
jge
lea
add
and
scas
add
mov
repz
out
lea
cmc
xchg
or
push
cmps
jl
(bad)
mov
sbb
jmp
jae
pop
mov
mov
aam
jle
mov
jmp
test
jl
fidiv
mov
sbb
shl
repnz
add
ror
retf
add
inc
dec
daa
ja
pusha
nop
shl
mov
dec
xor
stos
ins
adc
cmp
inc
addr16
ins
pop
push
shr
mov
mov
xchg
and
cmp
lods
shl
dec
mov
je
fld
in
mov
xchg
push
scas
aad
xor
popa
mov
popa
mov
and
mov
inc
mov
imul
xor
jbe
call
test
in
bound
int3
mov
pop
xchg
push
push
call
dec
mov
pusha
or
mov
sub
pop
dec
mov
movs
sub
push
or
jbe
in
lods
cmp
retf
sbb
add
out
or
jle
lea
popf
mov
xchg
mul
xor
out
jmp
jmp
push
pop
fwait
inc
add
adc
call
cs
mov
dec
hlt
sbb
pop
test
pusha
fwait
in
pop
enter
mov
fldenv
lods
stc
xor
sbb
ins
lods
mov
outs
cli
in
nop
stos
push
enter
jg
add
int
or
in
or
call
imul
pop
retf
sub
push
xor
sbb
or
fidiv
jg
int3
adc
or
scas
int
fldenv
and
push
push
cmp
mov
mov
popa
cmp
outs
sub
pusha
test
cmp
test
das
sti
push
jle
data16
xchg
fisubr
or
(bad)
fdivr
syscall
scas
data16
call
add
mov
scas
int
mov
popf
jle
mov
adc
std
hlt
dec
pop
mov
sbb
mov
push
movs
mov
outs
test
sub
popa
ds
jns
call
repz
and
out
loop
out
test
inc
arpl
jo
push
cs
jle
fidivr
rcr
fwait
mov
pop
sub
cmp
push
inc
xor
mov
sbb
lods
out
das
rcr
sbb
add
jb
fs
mov
call
in
fbld
xor
sti
push
leave
mov
jbe
outs
cmp
fwait
jo
test
xor
mov
repz
mov
sbb
movs
int
std
movs
leave
retf
mov
in
add
sub
push
sub
ins
xchg
inc
jae
in
cmp
lock
adc
fild
int
rcl
(bad)
xchg
pop
mov
cmps
jle
nop
push
dec
sahf
sahf
fisub
aaa
cwde
add
sbb
dec
cmps
ss
mov
out
lods
scas
and
mov
into
(bad)
jl
mov
xor
stos
mov
sbb
mov
pusha
std
shr
loop
xor
add
mov
inc
fsubr
pop
pop
and
test
rcl
dec
sbb
inc
mov
push
sub
jle
mov
mov
je
sar
xchg
push
jge
mov
mov
aad
push
cmp
sub
sub
xor
add
dec
pop
mov
test
imul
fld
(bad)
aaa
sub
inc
ret
lods
jp
jno
and
hlt
sbb
pop
push
xor
mov
lods
aad
adc
and
sub
sub
data16
inc
pop
ins
ret
mov
jmp
cmps
int3
out
sbb
scas
jmp
(bad)
sar
jl
fild
gs
push
call
mov
adc
mov
and
cli
dec
xchg
mov
pop
shl
inc
dec
jne
neg
(bad)
mov
repnz
jo
jo
mov
jge
mov
mov
pop
push
cli
not
sub
imul
(bad)
scas
rcr
sub
loopne
push
xchg
bound
adc
mov
jns
mov
das
cmp
inc
push
jg
sbb
pop
mov
ins
scas
mov
adc
cs
sbb
cmp
cdq
sar
dec
je
sub
imul
imul
nop
pop
stc
dec
ror
cmp
mov
xchg
cs
sub
shl
xor
xchg
in
dec
das
pop
enter
sub
cli
cmp
mov
outs
push
xchg
mov
loope
mov
mov
sub
xor
mov
arpl
cmp
pop
popf
xor
std
mov
add
mov
inc
mov
(bad)
std
add
test
pop
xchg
or
jnp
mov
repnz
jecxz
and
sub
ins
fucomip
retf
je
retf
sbb
adc
mov
mov
icebp
fcmovnb
int
inc
mov
jecxz
test
scas
movs
xchg
mov
mov
ins
lea
lods
xor
cmp
pop
jbe
cwde
test
(bad)
leave
mov
inc
lds
push
iret
out
cmp
jge
lods
xchg
mov
nop
cmps
loop
(bad)
jnp
mov
and
scas
inc
add
idiv
in
ds
syscall
adc
mov
add
add
fwait
pusha
cmps
std
(bad)
das
das
add
ins
mov
aam
loope
mov
cmp
shld
sbb
outs
and
ror
arpl
add
pop
call
in
cdq
icebp
pop
int
mov
push
(bad)
dec
sub
sar
in
ss
(bad)
or
inc
mov
pop
pop
ret
jo
xchg
loop
dec
sbb
sub
xor
cwde
inc
push
loopne
jmp
bound
std
cmp
loope
xor
retf
adc
mov
push
jnp
cmps
sbb
dec
jno
cdq
mov
fdivr
ds
dec
mov
out
out
cmp
mov
cs
test
pop
loop
inc
pop
add
pop
xchg
mov
outs
scas
pop
pop
fldcw
jle
sbb
xor
push
aaa
cmp
fisub
push
cmp
mov
jl
add
jl
in
cli
icebp
inc
cdq
push
sbb
out
mov
iret
push
(bad)
cmc
jns
(bad)
jmp
fs
xor
fimul
xchg
jo
les
mov
enter
retf
aad
push
in
fwait
mov
and
mov
in
pop
cmp
mov
xchg
add
sahf
(bad)
stos
je
mov
push
bound
dec
in
inc
sbb
aad
xor
jg
outs
dec
fiadd
mov
js
mov
add
int3
clc
enter
jg
inc
shl
xchg
les
and
daa
daa
out
pop
mov
cmc
addr16
mov
jmp
mov
(bad)
setb
test
or
ror
inc
into
movs
test
mov
push
das
mov
xor
jg
dec
cmp
cmp
stos
inc
mov
mov
mov
sbb
push
(bad)
data16
xor
jno
sub
pushf
dec
cmp
ins
cmp
cmps
outs
outs
mov
lods
inc
xchg
fadd
popa
cli
mov
jne
jno
push
ins
and
xchg
push
xchg
pop
clc
or
and
pop
mov
jno
jl
retf
sub
ret
xor
push
mov
addr16
enter
sub
inc
imul
test
aaa
mul
stos
je
push
and
retf
loope
dec
and
pop
or
lahf
mov
mov
cmc
adc
mov
pop
sahf
aad
fst
repz
cmp
ja
jle
cmp
fs
repnz
daa
bound
imul
popa
pop
xor
iret
cmps
loopne
mov
sub
push
jmp
arpl
xchg
mov
mov
addr16
(bad)
cmp
ror
cmp
fbld
mov
add
mov
es
jmp
dec
dec
lods
stc
push
push
int3
push
push
pop
popf
and
leave
sbb
push
add
addr16
imul
fxtract
retf
adc
iret
stos
xchg
push
mov
pop
ins
mov
push
jbe
add
and
stc
popa
cmps
push
push
and
inc
je
(bad)
xchg
out
mov
xchg
call
push
lds
dec
mov
push
xor
outs
mov
dec
jno
nop
icebp
push
jne
out
add
pop
adc
or
or
ret
stc
mov
cdq
xor
lahf
fsub
retf
scas
jb
xor
dec
or
pushf
cmp
dec
xchg
dec
repz
xchg
sub
aas
aas
sbb
in
cmp
jmp
add
xor
jo
clc
mov
nop
xor
dec
mov
mov
jae
jnp
rol
sar
jbe
push
push
dec
jo
xchg
ds
inc
push
mov
ins
ret
lds
lock
mov
mov
pop
pop
mov
jbe
inc
mov
test
iret
fmul
push
stos
push
das
inc
xor
cld
stos
pop
push
jno
xchg
pop
jo
dec
outs
mov
mov
aam
xchg
cmp
and
jle
adc
mov
pop
push
stos
sub
out
lahf
jnp
inc
lahf
popf
mov
cmp
ds
xor
mov
xor
fisubr
test
sub
test
pop
push
xchg
pop
fs
cdq
sbb
add
xchg
popa
jae
aad
lahf
xchg
inc
in
mov
sub
pop
mov
push
xchg
xor
jl
sti
pop
jae
xor
aad
rcl
in
repnz
pop
and
pop
fidiv
push
dec
xor
std
pop
mov
arpl
adc
aas
(bad)
adc
daa
sub
or
fimul
lea
call
loope
sahf
std
pop
cs
rcr
push
outs
stos
sub
add
mov
daa
pop
add
push
xor
call
mov
pop
inc
mov
lock
mov
stos
imul
sbb
mov
ja
adc
sub
les
imul
or
std
mov
dec
rol
inc
int
jl
mov
mov
cs
cmp
shl
(bad)
movs
and
sar
jns
in
xor
inc
jne
sar
ss
popf
scas
inc
mov
add
and
mov
sbb
add
fmul
mov
adc
push
pop
or
lock
inc
sub
fstp
shl
xchg
aaa
cmovl
nop
jl
hlt
sub
test
cmp
xchg
sbb
mov
das
mov
jbe
fbld
sbb
push
push
xchg
pop
(bad)
pop
in
cmps
inc
sbb
ret
adc
pop
cmps
add
bound
mov
retf
aas
leave
les
adc
mov
in
fisubr
jmp
push
dec
sbb
add
cmp
cmps
(bad)
cmps
xor
adc
sub
xchg
aaa
xor
xchg
data16
(bad)
pushf
ret
jo
xor
dec
jbe
retf
mov
xor
aam
cmp
xor
fldcw
cmp
jg
pop
fwait
lock
mov
and
xchg
pop
pop
inc
js
(bad)
mov
jge
adc
mov
cmc
push
cmp
mov
and
leave
add
lea
(bad)
jb
js
jns
pop
add
or
inc
(bad)
pop
pop
not
mov
xchg
mov
dec
jnp
adc
or
imul
test
movs
jg
and
cmps
dec
rcr
into
hlt
inc
ss
aam
dec
dec
mov
cld
push
in
dec
xor
es
xor
sar
bound
jmp
xchg
jge
das
(bad)
adc
ret
(bad)
sub
lock
aad
pop
movs
push
loopne
xor
pop
fistp
mov
fcomp
bound
sub
or
sub
cmps
mov
push
je
mov
fwait
repz
mov
and
pop
scas
cs
aas
or
(bad)
jl
sub
ins
cmp
mov
mov
jg
inc
rcl
call
jp
xor
pop
jg
ret
cmp
test
ds
jle
xchg
cmp
pop
sub
push
aaa
inc
or
jmp
adc
test
xchg
or
imul
xchg
addr16
js
pop
shl
xchg
dec
lock
mov
adc
xchg
in
call
jle
clc
inc
jge
hlt
fwait
in
je
adc
in
mov
mov
cmps
mov
loopne
ror
adc
inc
fstp
ins
jmp
mov
stc
(bad)
loopne
mov
sbb
aam
fst
aaa
push
aaa
(bad)
dec
fcomp
fld
or
dec
in
in
in
inc
add
loopne
push
aam
dec
cmp
push
sahf
inc
pop
call
repz
lahf
jecxz
xlat
push
out
cwde
cmp
les
imul
jmp
div
inc
push
adc
gs
inc
hlt
lock
cdq
lods
mov
mov
fst
mov
sub
(bad)
cmp
arpl
out
in
sti
cmp
sti
or
mov
scas
call
fwait
jp
sbb
mov
mov
addr16
in
cmp
out
push
add
aaa
xchg
out
scas
cmc
jg
mov
shl
clc
pop
scas
pop
fsubr
into
inc
test
cld
push
push
pop
(bad)
and
inc
aam
mov
ror
inc
icebp
push
bound
sbb
lods
shr
rol
xchg
xchg
fcomp
shl
adc
cmp
jl
adc
add
cmps
cli
sub
mov
mov
cmps
ja
fimul
sbb
pusha
aas
jecxz
dec
cld
retf
mov
dec
jo
and
inc
push
cmp
not
push
outs
iret
(bad)
sbb
push
bound
rol
call
inc
jb
ds
dec
bound
jp
popa
fimul
xchg
clc
sbb
enter
xlat
jmp
sbb
jnp
enter
fsubr
or
add
pop
jg
push
jle
sub
mov
mov
(bad)
cmc
mov
test
mov
cwde
pop
ja
or
cmps
popf
mov
and
mov
dec
rol
stos
test
dec
loope
aam
xchg
add
mov
gs
mov
sbb
jg
cmps
add
xchg
fdiv
leave
rcr
sub
mov
jle
or
(bad)
jno
mov
cs
(bad)
or
rcr
lds
loop
jns
sbb
mov
popa
lds
or
(bad)
dec
mov
or
sub
add
into
pop
out
adc
pop
or
jo
sbb
popa
mov
aam
stos
and
pushaw
sbb
jbe
mov
pop
mov
pop
ds
pushf
test
mov
mov
outs
mov
ficomp
push
add
loope
mov
js
sub
inc
cli
in
add
sub
push
es
fcomi
xchg
movs
(bad)
push
ret
push
sbb
add
mov
mov
dec
sbb
mov
imul
mov
(bad)
sbb
dec
(bad)
pop
mov
xchg
jb
fsubr
sub
and
addr16
jmp
and
inc
mov
jmp
int
imul
inc
mov
loop
jmp
push
jmp
outs
dec
icebp
xchg
scas
push
inc
push
and
jp
lods
lea
cs
jl
imul
lock
cmp
add
mov
int3
xchg
mov
dec
leave
jae
sub
(bad)
clc
movs
xor
xchg
jne
out
jmp
imul
addr16
add
mov
call
jecxz
add
gs
xor
or
gs
mov
mov
inc
mov
xor
inc
lahf
pop
mov
jbe
jmp
cmp
arpl
mov
jmp
div
mov
inc
jnp
ret
mov
mov
loopne
mov
test
fist
cmp
push
jl
push
push
pop
ds
aas
mov
aad
mov
sub
inc
cs
mov
adc
push
cld
and
movs
retf
add
test
add
xchg
loop
mov
push
aam
sub
leave
stos
fdiv
ds
retf
jp
push
push
sar
rcl
mov
iret
adc
pop
adc
mov
das
sub
pop
sbb
xchg
push
jno
mov
out
lock
clc
mov
in
stc
mov
fidiv
mov
sub
dec
mov
addr16
dec
les
std
in
(bad)
out
in
xlat
rol
fwait
inc
pop
push
outs
sub
jg
xchg
push
movs
and
pop
scas
test
inc
dec
jge
shl
inc
jle
retf
enter
adc
fistp
mov
jge
in
das
push
sub
xor
(bad)
aaa
loopne
inc
mov
inc
inc
cdq
sbb
in
mov
sub
(bad)
into
mov
push
aas
sbb
pop
xor
and
add
dec
retf
cmp
mov
outs
fld
shl
out
test
mov
and
cmps
jle
ins
in
or
add
pop
or
cs
cmp
lahf
(bad)
mov
stc
fistp
lahf
sub
push
push
mov
je
sub
nop
adc
mov
mov
cs
lods
dec
xchg
jle
std
add
xchg
inc
cmp
rcr
fidivr
sbb
dec
cmp
lock
add
(bad)
and
je
and
push
mov
stos
xchg
loope
adc
add
out
adc
mov
pop
int3
(bad)
nop
pop
pop
loope
test
push
out
out
dec
sbb
aam
inc
cmps
xor
pop
or
xor
cmps
jg
mov
or
sub
cmps
ins
cmovp
leave
mov
scas
jae
repz
and
push
mov
fwait
and
pop
jnp
mov
dec
xchg
push
mov
in
sti
push
or
addr16
iret
jle
out
das
js
xchg
cld
add
mov
sub
dec
mov
sbb
pop
mov
or
inc
xor
sub
in
stos
test
xor
push
dec
das
dec
sti
repz
call
fsub
jns
repz
shr
xor
pusha
enter
lds
lock
jns
sbb
or
shl
push
jnp
popa
cmp
ret
lods
sub
xor
aaa
fbstp
sar
xor
ret
lods
idiv
rcr
test
repz
mov
pushf
or
mov
xlat
push
cmps
and
and
mov
xchg
push
cmp
xchg
lods
test
or
mov
xchg
add
hlt
clc
in
adc
div
mul
ret
xchg
ins
mov
mov
loope
adc
fild
fst
mov
jns
(bad)
clc
or
call
rcr
xor
(bad)
cs
xchg
and
mov
mov
out
(bad)
aad
cmp
ror
call
rol
stos
bound
movs
data16
xchg
inc
ja
enter
aas
or
push
or
les
inc
xchg
aad
jge
das
jns
sahf
or
xchg
je
adc
test
inc
inc
dec
push
in
sbb
push
(bad)
and
mov
add
pop
aas
xchg
fsub
jmp
dec
or
es
test
mov
clc
fadd
inc
int3
push
nop
dec
out
or
fstp
push
inc
sar
sub
lea
cmp
jne
cld
cli
mov
in
ja
ja
fild
sahf
or
dec
inc
pushf
out
mov
adc
clc
ret
rcl
es
sub
scas
xor
call
ins
ficomp
push
dec
shr
arpl
mov
cmp
pop
add
sub
inc
rcl
arpl
cwde
jb
mov
add
add
mov
into
xor
je
sub
adc
repnz
dec
dec
pop
pop
mov
mov
xchg
clc
jle
imul
imul
pop
and
cld
add
cmp
out
loopne
test
call
push
jecxz
xchg
push
push
sti
jp
jecxz
jp
lds
shl
adc
faddp
adc
gs
jbe
sbb
jg
jnp
pop
and
ret
iret
or
or
jle
mov
std
js
gs
mov
push
cmp
(bad)
mov
and
inc
outs
xchg
sahf
lods
xor
mov
fidiv
pcmpgtw
dec
stos
leave
std
std
mov
in
jo
jmp
fwait
hlt
fdiv
cmp
shl
inc
pop
mov
stos
into
mov
in
lock
in
xchg
dec
lea
mov
(bad)
sub
dec
mov
cmps
shr
ret
bound
push
or
cwde
jecxz
inc
es
xchg
ja
rcr
and
bound
hlt
push
iret
jg
inc
test
iret
into
pop
fldenv
lods
pavgw
push
sti
(bad)
stos
push
sti
sub
in
cmovb
test
mov
adc
pop
outs
mov
mov
js
push
mov
jnp
sbb
xor
fs
clc
pop
mov
xor
sub
or
jecxz
jg
mov
in
pop
js
dec
enter
shl
outs
movs
xor
aam
loopne
cmp
sub
push
pusha
test
fs
ins
push
inc
in
in
xchg
and
fsub
nop
sbb
ucomiss
das
mov
mov
xchg
cmc
adc
cmc
mov
mov
cmps
mov
test
xchg
xlat
or
fmul
fst
in
sahf
pop
xor
bound
pop
rcl
jecxz
int
(bad)
sub
test
dec
jecxz
push
cmp
xchg
mov
mov
jo
pop
sub
pop
rcl
jp
add
xor
jno
add
aad
mov
xor
xor
adc
sbb
jno
in
arpl
repnz
inc
cld
bound
jp
xchg
cmp
les
cmc
mov
scas
mov
sbb
mov
in
std
gs
and
sbb
push
(bad)
pop
push
ja
aad
movs
dec
jge
ja
stos
hlt
cmp
movs
test
lahf
adc
stos
mov
xor
push
lods
push
mov
adc
xchg
jb
test
xchg
pop
dec
jnp
call
sbb
adc
into
sahf
mov
push
(bad)
cmp
in
scas
pop
inc
enter
jle
pop
mov
mov
ins
push
mov
push
in
cmp
dec
mov
xor
fsub
out
mov
not
ins
mov
(bad)
push
xchg
leave
test
dec
loopne
mov
xchg
and
mov
jbe
xchg
xchg
jecxz
sbb
ins
das
cmp
frstpm(287
mov
push
sbb
in
fisttp
int3
cs
inc
fdiv
js
push
fs
sub
adc
scas
int3
push
adc
iret
daa
sub
es
push
call
not
icebp
or
cmp
add
sub
mov
pushf
and
sub
pavgb
sbb
into
xchg
and
dec
adc
(bad)
xchg
repz
or
cld
pop
sbb
aam
in
ret
(bad)
nop
jmp
dec
dec
les
mov
mov
jle
push
push
xchg
les
jmp
test
lods
iret
popf
xor
pop
lods
cwde
mov
retf
pop
sahf
mov
cld
hlt
fmul
fcmovnu
mov
fistp
call
aaa
out
imul
pop
cwde
jp
mov
mov
popf
mov
popa
sub
xchg
pop
push
popf
or
cmps
jg
(bad)
js
xor
xor
mov
call
jmp
mov
ret
inc
pushf
pop
ja
mov
in
mov
leave
push
inc
and
and
outs
pop
(bad)
lahf
dec
outs
or
mov
sbb
popf
add
lds
in
xor
jl
fisttp
imul
sub
and
iret
pop
dec
add
aad
xchg
or
pop
add
cmp
or
repnz
xlat
ret
and
ss
in
loope
mov
retf
fs
fwait
cmp
cmp
or
cmp
test
or
daa
mov
cmp
jmp
jmp
into
cmps
and
jb
fs
lock
lock
mov
into
loop
lea
sub
adc
adc
in
sub
push
cwde
jne
inc
rol
test
cli
lods
dec
xchg
pop
addr16
jmp
xor
pop
push
cmp
stos
cmp
fldcw
loope
scas
mov
add
xor
mov
mov
std
mov
or
adc
sbb
imul
repz
mov
hlt
jns
xchg
mov
mov
aaa
inc
scas
sbb
call
les
scas
mov
mov
movs
xor
mov
jnp
mov
cmps
nop
push
mov
fxch
mov
dec
test
sar
push
cmps
sbb
jns
std
jp
jmp
out
sub
out
push
retf
sbb
and
xchg
adc
add
aaa
cli
add
cwde
cmovae
xor
test
push
cmp
pop
out
or
push
outs
sbb
mov
xchg
hlt
into
dec
add
int
mov
ds
mov
repnz
aam
shr
rol
scas
add
(bad)
std
cmc
mov
je
push
sahf
push
dec
push
movs
xchg
mov
scas
int3
dec
test
fsub
pushf
add
ss
jae
not
out
ror
lock
adc
in
xchg
mov
icebp
or
pop
mov
jno
mov
and
lahf
in
fmul
test
and
cmp
loope
(bad)
jmp
ss
and
pop
fist
test
mov
repnz
gs
xchg
jo
jb
or
pushf
lods
daa
(bad)
imul
shl
mov
inc
cmp
inc
(bad)
out
sbb
ror
outs
or
mov
popf
fistp
out
call
or
push
jecxz
and
sar
xchg
cli
mov
cmp
mov
sbb
cld
shr
cli
and
enter
or
mov
jl
mov
pop
loopne
mov
jns
cmc
repnz
adc
push
jecxz
mul
add
push
int3
sar
cmp
clc
test
mov
sti
into
dec
mov
pop
xchg
xor
pop
dec
shr
and
sub
pop
popa
xlat
cmp
into
pop
(bad)
xor
or
push
loopne
mov
dec
imul
mov
xchg
movs
push
out
jmp
mov
shl
fcomip
pop
popf
in
call
ret
xchg
sub
js
jmp
and
mov
fcmovu
sub
test
jmp
fdivr
stos
cmp
imul
mov
add
iret
bound
mov
push
test
mov
movs
stc
mov
fwait
pop
adc
dec
mov
ficomp
dec
int3
(bad)
(bad)
or
adc
aas
dec
add
gs
iret
jae
cmp
mul
xchg
or
cmp
sbb
cmp
adc
add
mov
repz
push
dec
movaps
ret
test
sbb
pop
xor
cdq
add
push
movs
das
(bad)
push
mov
(bad)
mov
mov
jae
jo
pusha
out
in
cmp
out
gs
pop
enter
fist
dec
pop
pop
scas
lock
outs
xor
retf
shl
inc
stc
mov
mov
mov
pop
jg
push
shr
mov
iret
loop
xor
ja
(bad)
ret
fcom
add
scas
fsub
pop
and
push
dec
out
scas
ins
mov
jg
or
sbb
call
mov
xchg
repnz
dec
mov
and
pop
adc
xchg
adc
ins
jecxz
loopne
mov
(bad)
inc
loope
nop
xchg
xchg
mov
ds
jo
pop
repnz
out
shr
hlt
sbb
movs
xor
addr16
mul
mov
push
call
xchg
push
adc
sbb
add
add
loopne
jno
and
in
loopne
pushf
inc
call
mov
and
or
retf
add
aaa
sbb
jno
mov
(bad)
sbb
pop
sbb
in
add
iret
jmp
mov
cmp
add
push
sbb
cmps
jae
call
push
xchg
outs
mov
mov
push
push
xchg
jnp
dec
into
enter
push
das
jmp
inc
or
sbb
xor
inc
out
iret
cmp
pushf
in
sub
xchg
pusha
out
bound
mov
fistp
dec
mov
fdivr
aaa
int3
xchg
adc
int3
popf
pop
mov
dec
dec
xchg
inc
arpl
(bad)
pop
mov
outs
shl
mov
cmp
jecxz
sub
push
loopne
enter
rol
call
jmp
(bad)
mov
in
mov
sahf
scas
cdq
rol
cmc
xchg
loope
fisub
sbb
add
jnp
jg
sar
inc
cmp
dec
mov
push
sbb
inc
mov
mov
lahf
imul
ins
sub
das
aam
xchg
pop
mov
test
cs
pop
stos
jbe
iret
jmp
xor
or
fs
sar
daa
fsubp
lahf
pusha
lds
xor
pop
jno
pusha
mov
push
pop
scas
sub
fistp
cli
mov
and
pop
mov
fwait
icebp
(bad)
je
xor
push
sub
repnz
pop
xor
xor
stos
mov
js
repz
es
jmp
mov
icebp
mov
data16
adc
jle
dec
push
push
call
scas
repz
out
fistp
mov
adc
mov
dec
mov
lds
out
mov
xchg
push
pop
jge
pop
das
adc
ss
xlat
dec
stos
xor
mov
or
or
not
inc
pusha
pop
repz
push
jae
push
addr16
ss
(bad)
(bad)
cwde
into
repz
cmp
and
sbb
mul
mov
jo
or
cmp
bound
jmp
icebp
xchg
jns
xchg
rcl
dec
xor
and
fdivr
sbb
call
dec
movs
xor
or
mov
in
push
add
test
xchg
jg
cmp
push
pop
stc
sbb
outs
add
sub
clc
lea
sub
les
repnz
(bad)
cmp
cdq
push
jne
test
cmp
mov
repnz
ror
push
call
mov
push
cs
sbb
pop
push
enter
xchg
sbb
fist
xor
into
test
sahf
(bad)
push
outs
es
mov
loopne
jecxz
sub
popf
les
out
cdq
xchg
out
mov
cmp
repnz
pop
xchg
jmp
pcmpeqb
jmp
push
repnz
mov
pop
xor
int
mov
mov
xlat
jae
dec
add
test
loopne
cmp
dec
pop
jp
cmp
add
lock
ins
aaa
in
push
jno
xor
lock
sahf
adc
mov
push
stos
aad
scas
arpl
sub
outs
jne
ja
jns
adc
mov
int3
or
inc
data16
pop
in
leave
xchg
mov
rol
out
jmp
adc
inc
ret
sub
pop
and
ins
push
dec
mov
cmp
stos
sbb
inc
mov
cmp
cmp
inc
scas
mov
jnp
dec
cld
fsub
(bad)
aad
je
fcomp
rcl
mov
pop
pop
pop
aaa
push
(bad)
scas
add
adc
fs
mov
mov
les
test
scas
xchg
sbb
mov
or
inc
in
dec
mov
and
push
xor
inc
retf
mov
test
(bad)
sub
cmp
mov
adc
(bad)
out
xlat
les
je
ret
jbe
lods
push
icebp
aaa
stos
mov
retf
xchg
lods
mov
stos
mov
dec
push
retf
sbb
int3
push
sbb
inc
loopne
ret
mov
and
xchg
and
add
sub
mov
sti
push
in
cmp
push
sbb
std
inc
out
dec
fucomp
add
pop
push
adc
fnstenv
sbb
cmp
or
push
jmp
push
add
dec
scas
mov
inc
fwait
sub
cmp
push
(bad)
sbb
inc
cmc
or
loopne
inc
aam
ja
jb
std
cmp
add
ret
int
imul
jecxz
sbb
stos
dec
add
ret
jmp
jge
mov
sub
jne
mov
push
adc
scas
das
mov
(bad)
pop
cwde
aad
sbb
lods
jo
in
push
leave
xor
mov
shl
sbb
cmp
in
std
inc
jnp
sub
scas
out
imul
jg
sbb
popa
xor
adc
fadd
out
lea
push
jno
mov
dec
mov
xchg
sbb
add
adc
or
loop
stc
xlat
movs
mov
pushw
arpl
enter
(bad)
xor
div
xor
(bad)
out
mov
jle
jg
sub
test
jmp
stos
ret
pop
pusha
mov
mov
pop
mov
xchg
das
sub
inc
mov
(bad)
pop
jne
inc
pusha
into
fcmovbe
cmp
loop
sahf
stos
add
mov
sbb
(bad)
mov
sub
adc
xor
fistp
movs
test
jp
or
push
addr16
call
push
addr16
xchg
pop
sti
rol
xor
mov
mov
aam
dec
mov
push
mov
sti
jmp
push
and
sbb
push
push
outs
mov
call
xor
cmp
sub
mov
inc
nop
outs
push
add
in
add
stc
test
dec
(bad)
cmp
cmps
pop
push
fwait
cmp
and
mov
repnz
and
mov
fild
out
ret
mov
dec
jecxz
scas
push
cmc
(bad)
(bad)
sub
loope
and
in
mov
pop
push
mov
mov
rcl
clc
jnp
push
sub
movs
shl
sub
mov
ret
pop
sub
jge
(bad)
jmp
je
jnp
mov
jmp
adc
clc
loop
addr16
loopne
int
lock
pop
mov
and
inc
cmp
(bad)
mul
lock
dec
int
inc
test
pop
in
mov
rcr
aaa
pop
fnstcw
rol
call
stos
and
je
stos
adc
cld
or
adc
dec
inc
std
mov
sub
js
in
and
sub
ret
aam
xor
fwait
test
jne
sub
jmp
enter
add
cmps
cmp
add
xchg
xor
push
dec
pop
push
or
imul
sub
push
jecxz
bound
cmp
lods
je
pop
pusha
popa
push
dec
push
xchg
add
imul
shl
stos
dec
das
adc
xchg
xchg
hlt
movs
clc
xchg
pop
xchg
lds
add
pushf
das
mov
push
shl
mov
cmps
push
call
fwait
aaa
test
and
sbb
mov
je
daa
aas
aam
loope
jno
pop
xchg
aad
or
ret
adc
int
dec
inc
xor
daa
fxtract
retf
or
fbstp
iret
mov
fbld
out
mov
sbb
daa
outs
loop
jno
dec
js
ret
mov
sbb
dec
in
pop
pop
mov
mov
jmp
jne
mov
sbb
fld
xor
sahf
jb
pushf
xor
add
pop
cld
xchg
fldenv
retf
outs
xchg
and
out
shr
(bad)
push
inc
or
stos
arpl
retf
pop
fsub
pop
fisttp
loope
test
test
cs
inc
inc
jl
ror
loop
sbb
xchg
je
outs
cmp
jbe
(bad)
popf
jle
sahf
mov
shl
ret
loope
fcmovu
sbb
adc
pop
fbstp
inc
lea
movs
cld
test
add
outs
or
jbe
rol
sahf
(bad)
nop
sahf
into
add
mov
shl
fcom
mov
cmp
inc
xchg
cld
js
outs
xchg
int
mov
mov
popa
fdiv
dec
sbb
jmp
mov
inc
mov
call
sar
mov
inc
mov
mov
out
or
mov
push
xlat
bound
xchg
into
mov
xchg
jl
jae
lock
out
aas
jne
pop
push
arpl
mov
sub
sub
stos
or
inc
jle
xor
ror
dec
out
lea
pusha
sub
or
adc
pop
mul
int3
aas
aad
cmp
sahf
and
cmp
bound
data16
shr
movs
push
bound
movs
push
xor
jmp
pop
fcom
dec
dec
leave
neg
jne
mov
xor
out
mov
mov
std
inc
ret
pop
jae
outs
popa
mov
pop
test
fsubr
cmp
scas
sbb
inc
add
inc
in
xor
cdq
dec
adc
mov
pop
mov
mov
dec
lods
mov
or
mov
dec
loopne
ins
inc
cli
mov
enter
aam
cld
popa
mov
adc
std
sub
ins
mov
adc
movs
addr16
adc
aam
or
mov
bound
repz
sub
iret
bound
pop
sub
adc
jecxz
sub
test
push
or
retf
push
in
out
mov
xor
sbb
xor
or
jne
cmps
out
(bad)
rcl
or
outs
popa
ins
inc
movs
mov
pop
inc
fsub
jns
out
ror
sub
sti
sub
xor
mov
retf
cmp
sbb
call
jl
cmp
(bad)
out
shl
push
retf
out
jg
add
(bad)
xchg
or
into
out
dec
sbb
cli
dec
mov
in
cmove
xor
addr16
xchg
outs
xchg
(bad)
and
xlat
cli
jne
sub
not
call
and
(bad)
fstp
pop
mov
stos
xor
add
inc
push
sbb
sbb
out
sbb
jbe
enter
adc
out
retf
sub
mov
adc
stos
test
pop
cmps
xchg
ficom
mov
and
and
pop
inc
aad
arpl
xor
mov
addr16
loope
fdiv
shl
xor
jns
sti
jne
cli
and
sbb
push
and
div
loop
sub
ins
(bad)
outs
cmps
xchg
test
push
dec
push
into
pop
push
out
fwait
jae
mov
pop
jae
sub
shl
pop
sbb
dec
inc
mov
lds
sbb
inc
fs
xchg
mov
pop
cmps
cmp
bound
mov
shl
sti
icebp
lock
bound
data16
icebp
lods
sbb
jle
scas
or
gs
ins
xor
jbe
pop
mov
sbb
fimul
enter
pop
push
rcl
inc
fst
inc
inc
psubusw
call
stos
ror
add
sub
(bad)
push
test
jg
adc
scas
or
add
cmp
xchg
rcr
mov
(bad)
retf
sbb
ret
inc
aam
das
sbb
sub
sub
push
jmp
mov
inc
xor
test
mov
out
call
mov
rol
xlat
mov
movs
or
ja
mov
dec
nop
add
in
xchg
push
lea
cmp
sti
repz
ins
inc
jbe
rcl
cmps
xor
or
or
addr16
xchg
xor
dec
icebp
mov
std
pop
test
pop
pop
shl
(bad)
(bad)
shl
fs
add
in
pop
mov
frstor
cmp
add
repz
jmp
std
iret
adc
ja
js
pop
jno
iret
sbb
ret
leave
cs
lods
daa
xlat
jae
mov
retf
pop
xor
int
mov
sub
push
mov
ret
loopne
and
scas
sub
ja
adc
(bad)
(bad)
call
repz
scas
adc
or
inc
cmps
sbb
dec
faddp
add
(bad)
jo
aad
jnp
mov
xchg
mov
push
test
enter
dec
retf
mov
lods
bound
adc
adc
fwait
mov
addr16
outs
sbb
sub
test
int
adc
mov
(bad)
ror
in
adc
push
(bad)
fmul
xor
stos
mov
iret
jmp
xor
xchg
fidiv
dec
push
pop
dec
ins
imul
imul
into
mov
ins
mov
adc
add
out
bound
in
out
adc
push
dec
sbb
call
push
fst
push
stos
cld
or
mov
dec
es
push
inc
xchg
icebp
xor
repz
jns
es
das
mov
xchg
pop
fmul
mov
test
and
aas
retf
mov
jne
xor
sub
stos
push
dec
jmp
jne
hlt
mov
icebp
rol
mov
fbstp
mov
jmp
push
dec
jp
sbb
mov
sahf
sub
(bad)
stc
dec
(bad)
bound
fsub
enter
stos
dec
inc
jb
mov
or
pop
fnsave
push
test
jbe
mov
adc
add
push
push
(bad)
in
call
dec
(bad)
sar
imul
rcr
and
jge
pop
or
in
pop
jo
sbb
xchg
jae
aas
adc
sti
jmp
int
stos
cmp
ror
icebp
push
out
or
rcl
clc
repz
into
mov
fwait
pop
push
sbb
xchg
ja
sbb
call
repnz
fxch
cld
lods
bound
add
mov
push
sub
das
inc
add
cld
cli
cs
in
(bad)
in
cmp
sti
fidiv
inc
xchg
repnz
int3
outs
hlt
or
(bad)
lds
sbb
add
or
cld
stc
call
mov
fdiv
mov
enter
inc
push
out
popa
fstp
ins
sub
dec
out
shl
mov
fnsave
mov
pop
mov
daa
(bad)
jbe
cmp
pop
dec
ja
cmp
jmpw
push
pop
inc
(bad)
imul
mov
push
adc
jecxz
and
outs
xchg
pop
call
sub
out
push
in
es
mov
into
cmp
pop
movs
push
movs
jb
xchg
sub
fcmovnb
push
lds
jmp
imul
imul
inc
cmps
xchg
xchg
jp
gs
mov
adc
popf
leave
pop
clc
and
mov
push
dec
sub
in
js
loopne
inc
inc
xchg
int3
data16
or
pop
cmp
nop
je
shl
mov
out
mov
adc
inc
jl
sbb
jmp
and
jae
dec
sbb
mov
mov
mov
data16
sti
mov
test
rcr
fst
iret
push
shl
mov
mov
(bad)
pop
push
imul
popa
mov
push
dec
shl
mov
sar
out
aam
fiadd
sub
aam
pop
lahf
jg
stc
imul
inc
jg
jmp
jbe
call
popf
cmovge
daa
mov
pop
out
int3
loopne
nop
cwde
add
cmp
iret
in
cmp
es
and
mov
fldl2t
mov
jmp
fdivr
sub
scas
sbb
add
clc
push
dec
jbe
xor
cli
repz
mov
jg
sub
aaa
test
loopne
shl
xchg
retf
xor
repnz
or
inc
cld
jno
xor
enter
push
cmp
pop
adc
xchg
aam
gs
and
out
mov
adc
cwde
shl
push
in
mov
pop
mov
pop
xor
aas
push
dec
adc
push
scas
retf
outs
arpl
lods
sbb
mov
scas
int
jle
scas
add
retf
pop
jbe
adc
and
mov
or
inc
stc
ficomp
int3
and
(bad)
int3
ds
inc
xchg
xchg
add
pop
adc
xchg
cmps
aaa
sar
test
xchg
or
inc
push
std
(bad)
cmp
add
ins
mov
in
ins
push
seta
sbb
popf
dec
lods
lods
and
ss
mov
dec
pop
jg
xchg
sbb
hlt
mov
jge
int3
adc
ja
enter
lock
and
in
and
xchg
mov
mov
inc
and
cmp
jbe
out
outs
lahf
mov
dec
ja
std
jge
dec
jmp
cmp
mov
mov
xchg
ss
(bad)
popaw
(bad)
jbe
imul
outs
mov
ds
and
retf
in
sbb
dec
imul
in
pop
call
iret
adc
add
es
inc
ds
cmp
inc
loop
sbb
out
push
jecxz
mov
mov
push
int
aaa
xchg
jmp
pop
cmp
test
or
inc
fisubr
clc
dec
mov
cmp
push
(bad)
fbstp
shr
mov
stc
jnp
fadd
xor
xchg
jg
adc
scas
gs
pop
cmp
push
push
js
fcomp
arpl
xor
sbb
(bad)
jmp
fild
out
mov
imul
and
adc
xor
outs
jo
rcl
jae
mov
adc
popf
in
mov
(bad)
mov
test
(bad)
mov
scas
lahf
in
(bad)
jb
mov
dec
mov
rcr
dec
mov
outs
inc
(bad)
jmp
out
jg
leave
(bad)
imul
jmp
cwde
jp
icebp
scas
xor
xor
gs
adc
movs
jecxz
add
in
xchg
push
inc
push
call
loopne
in
in
sbb
pop
pop
lahf
mov
adc
jle
jb
ins
xchg
pop
addr16
lea
sbb
mov
push
cld
out
jmp
inc
jl
fwait
in
inc
in
jp
and
outs
test
aas
add
fld
sub
pop
icebp
pop
add
stc
adc
add
mov
pusha
ret
addr16
repz
(bad)
ficom
in
aad
in
or
xchg
push
dec
add
or
js
rcl
jecxz
xchg
cmp
xchg
lods
xor
loop
ins
scas
jo
inc
out
pop
sbb
fst
je
jmp
cmp
pushf
pushf
repz
sub
xor
dec
jmp
ss
addr16
adc
(bad)
std
cmc
push
push
lods
cmp
repnz
stos
sahf
mov
out
jg
dec
lahf
pop
or
mov
cmps
repnz
repz
xor
and
or
xor
(bad)
icebp
loop
xchg
and
(bad)
jl
lock
pop
fs
cld
cmp
shr
fnsave
(bad)
mov
(bad)
std
cmc
aad
rcr
nop
push
or
xor
dec
mov
jmp
or
xor
out
jb
cmp
fwait
out
ret
imul
add
add
in
sar
dec
stos
cdq
(bad)
push
enter
sahf
(bad)
into
push
jns
stos
loopne
xor
outs
fild
cmp
mov
mov
cmp
xchg
inc
jg
stos
adc
lahf
mul
cld
jne
pop
mov
add
jnp
imul
jecxz
sbb
xchg
clc
cmp
xor
aaa
cs
in
or
xor
cmc
stc
lea
inc
fidivr
jle
adc
test
(bad)
lea
fistp
pop
sub
and
push
test
push
push
fs
icebp
mov
fistp
sahf
pop
cmp
ins
cs
dec
imul
stos
mov
mov
pushf
pop
(bad)
jne
xchg
(bad)
test
lods
push
fdivr
cmp
xchg
lods
inc
icebp
and
or
jmp
push
(bad)
stos
fwait
inc
jno
jecxz
in
mov
push
out
out
and
sbb
out
test
sahf
lods
jp
pop
pop
cli
aad
and
addr16
push
repz
push
xchg
mov
pop
mov
jae
mov
icebp
xchg
pop
sbb
xchg
lea
and
inc
ins
ja
pop
outs
(bad)
lea
hlt
gs
xchg
xchg
imul
sub
loop
add
pop
xchg
add
mov
mov
dec
test
div
frstor
mov
js
lds
iret
aaa
out
jg
pop
push
into
cs
lods
sub
add
ds
unpckhps
(bad)
mov
cwde
setb
mov
dec
cmc
mov
ins
mov
pop
fld
fmul
push
(bad)
stc
pusha
rcl
scas
shr
mov
pop
cmp
or
mov
mov
xor
push
lahf
push
push
add
(bad)
jb
sub
dec
addr16
into
push
push
mov
repnz
or
outs
push
call
pop
je
inc
scas
sbb
in
cmp
sar
xchg
mov
enter
(bad)
cld
xchg
xchg
adc
and
in
xchg
dec
add
mov
lods
out
(bad)
out
mov
mov
push
mov
mov
ds
lahf
pop
out
add
fs
add
movs
ret
fld
scas
mov
(bad)
sbb
jae
mov
fbld
(bad)
shl
xchg
cld
jl
ja
mov
es
cld
inc
movs
mov
movs
and
and
sub
popa
xchg
test
ret
dec
(bad)
fdiv
xor
mov
sar
sbb
and
mov
mov
push
fld
lahf
mov
test
test
fidivr
rcr
lods
or
scas
lods
fist
inc
fcom
iret
and
adc
in
mov
or
cmp
mov
mov
ret
out
ss
xchg
sti
jecxz
and
add
ds
and
sub
cmp
adc
ret
(bad)
cmp
pushf
mov
data16
cmp
jmp
cld
movs
mov
adc
dec
sub
sub
jp
lods
les
mov
and
push
xor
(bad)
enter
cmps
scas
xchg
(bad)
dec
push
jg
mov
(bad)
in
inc
xor
sbb
aad
data16
mov
pushf
je
ror
sbb
sbb
xlat
cmp
adc
test
cli
and
push
(bad)
push
jnp
or
xchg
mov
les
mov
das
push
call
hlt
iret
dec
retf
ja
cmp
adc
bound
movs
mov
xchg
adc
ret
jne
test
mov
mov
or
std
mov
pop
inc
test
shl
(bad)
mov
mov
or
or
movs
xor
xchg
fdivr
or
xor
mov
aaa
pusha
xchg
sub
adc
pushf
ja
mov
xor
loop
data16
ja
les
sub
iret
push
jnp
inc
mov
fstp
jne
out
dec
jnp
dec
es
cmp
int
cld
in
push
fs
jecxz
lock
or
mov
dec
fst
or
(bad)
jmp
mov
shl
es
add
lods
adc
aas
pop
movs
pusha
sbb
mov
into
inc
aad
sub
push
data16
sbb
and
jbe
cmp
adc
loop
pop
mov
fsubp
dec
in
aaa
add
arpl
inc
out
movs
out
mov
sbb
mov
cmp
inc
ror
sub
(bad)
lea
jo
push
mov
sahf
clc
pop
into
sub
jecxz
push
sbb
xor
mov
test
mov
push
mov
adc
jnp
pusha
mov
add
arpl
cli
or
clc
ficom
arpl
adc
sbb
jo
movs
jg
or
mov
mov
adc
sub
mov
inc
cmp
add
out
jns
dec
add
push
sbb
xor
pop
jecxz
lods
mov
add
mov
(bad)
adc
jg
add
aaa
and
faddp
jne
sbb
popa
push
add
scas
dec
xor
das
ja
push
(bad)
push
or
rcl
mov
fld
jecxz
and
xor
(bad)
mov
(bad)
lods
ja
test
loop
sub
mov
mov
mov
xchg
xor
fsub
cwde
xchg
or
loopne
stc
xor
shr
jp
mov
test
popa
jg
ins
sbb
into
jmp
adc
xchg
retf
fnsave
(bad)
xor
sub
sbb
sub
push
jmp
pop
adc
adc
out
xor
aam
inc
or
jbe
sub
leave
push
sub
popf
outs
push
jp
mov
aas
sbb
xlat
mov
add
rcr
push
aaa
bound
adc
loopne
pop
sub
cdq
jle
cmp
sub
shl
pushf
mov
sub
xchg
xor
xchg
cmps
mov
xchg
dec
pop
add
xchg
(bad)
xchg
sub
ss
inc
jecxz
and
repz
scas
repnz
xchg
out
dec
aam
cmp
daa
xchg
daa
and
cld
cwde
in
ret
mov
mov
and
mov
pop
outs
cmps
add
cli
mov
cmp
inc
aam
add
mov
cmc
sbb
call
rcr
jle
push
inc
mov
inc
scas
imul
xchg
xchg
rol
in
loop
out
das
or
cwde
fxtract
xchg
mov
xchg
mov
pop
adc
out
and
fwait
pushf
(bad)
call
aas
les
mov
in
inc
in
xor
ins
fsub
cdq
ins
mov
and
mov
or
sti
dec
inc
fisubr
sub
push
bound
add
movs
sub
test
movs
pop
or
sar
clc
jnp
xlat
popf
mov
mov
shl
xchg
pusha
sbb
rol
dec
icebp
mov
fcomp
in
mov
pop
lock
cmp
add
dec
(bad)
(bad)
xchg
jmp
xchg
xchg
cmp
xor
cmps
ins
mov
int3
popa
add
sbb
and
pop
aad
loopne
popf
sub
xchg
(bad)
push
(bad)
jmp
das
push
dec
pop
mov
mul
xor
jns
or
out
enter
das
pop
jae
pushf
je
ins
and
adc
cmp
lods
mov
mov
or
and
pop
xor
aad
sub
dec
cmp
mov
jg
jno
jle
shr
and
aam
sub
repz
cwde
xchg
adc
mov
and
mov
cmps
in
xor
mov
pop
stos
mov
mov
cmp
jns
aas
pushf
test
imul
retfw
outs
test
inc
sbb
ficom
dec
jmp
adc
jne
xchg
shl
jo
neg
jmp
cmp
fcom
mov
call
(bad)
rcl
(bad)
cmp
xor
ss
(bad)
fimul
inc
retf
in
mov
inc
xlat
xor
mov
dec
xchg
int3
call
push
aaa
shl
mov
mov
dec
ss
cdq
leave
outs
ins
cwde
sub
sbb
outs
imul
and
sub
push
mov
popf
mov
in
enter
pop
cmp
dec
jae
ja
inc
push
add
jecxz
mov
lock
mov
retf
jb
mov
rcr
xchg
test
(bad)
push
sahf
aad
jnp
cli
mov
sbb
mov
js
(bad)
(bad)
jecxz
mov
cmp
jmp
mov
mov
mov
xchg
mov
jbe
sub
lds
mov
mov
sub
(bad)
pop
mov
(bad)
scas
or
cmp
enter
push
xchg
xchg
mov
inc
push
(bad)
sub
cmps
push
add
fisub
mov
pop
sub
popf
mov
or
es
lds
call
cmp
and
mov
xchg
outs
push
mov
outs
test
dec
inc
bnd
dec
fwait
fs
cmps
sub
xchg
ror
cmp
push
stc
or
xlat
sar
lea
xchg
cmp
cwde
lock
out
(bad)
shr
and
into
lds
ja
cmp
jmp
(bad)
ins
add
icebp
fnstenv
in
inc
mov
mul
mov
mov
sbb
and
(bad)
imul
data16
xor
fimul
mov
add
sar
shl
mov
inc
icebp
fsub
scas
inc
sub
xchg
xchg
in
jne
addr16
pop
mov
dec
mov
inc
cmp
push
jg
cmps
cmp
clc
jne
add
cld
inc
or
adc
mov
dec
xor
sbb
mov
pop
jb
addr16
xor
pushf
xor
dec
add
aas
idiv
shl
int
sub
in
inc
or
inc
scas
das
sub
mov
repnz
push
mov
out
inc
inc
push
push
sub
lods
xor
ins
jl
and
sub
hlt
inc
push
mov
push
push
ins
cmp
mov
jo
into
xchg
and
mov
stos
mov
or
push
mov
adc
inc
(bad)
pop
sbb
aad
sub
fimul
sbb
push
dec
popa
sub
ret
mov
loop
add
retf
pop
call
xchg
jecxz
dec
sbb
jmp
rcl
push
pop
ins
clc
pop
sub
mov
or
test
mov
sbb
shl
cmp
outs
lahf
iret
aam
ja
popa
jne
push
mov
jg
sahf
mov
fs
and
and
jl
retf
cmp
loop
pop
ja
sti
fnstcw
cld
and
cmp
ss
mov
xor
call
jmp
and
pop
jecxz
cmp
jns
jmp
(bad)
jne
sbb
mov
jnp
aaa
fdiv
dec
shr
xchg
cdq
(bad)
loopne
lea
cmc
pop
jae
jb
jb
push
mov
jne
ret
jnp
dec
sbb
aas
sti
push
lock
std
loope
sbb
xor
push
icebp
and
into
mov
sub
sub
pushf
daa
jp
push
scas
fmul
mov
add
pushf
push
push
movs
mov
call
ret
mov
inc
sbb
das
scas
pushf
cmps
pusha
(bad)
mov
rol
cmp
or
fcom
mov
stos
cs
imul
jl
aam
and
test
sub
retf
and
rol
xor
popa
pop
call
sub
repz
inc
in
mov
ret
fdivr
sbb
mov
cdq
inc
dec
and
test
stos
cmp
add
jle
sbb
sti
scas
cmp
bswap
(bad)
cmp
iret
cmp
xchg
cmp
leave
das
hlt
sub
shr
sub
mov
xor
retf
sbb
loopne
test
sub
cli
cmp
push
push
test
not
int
out
aad
mov
iret
int
adc
imul
outs
cmps
outs
adc
(bad)
loop
popa
cwde
adc
movs
popa
xchg
into
popf
adc
mov
jle
xor
scas
cmps
daa
mov
or
pusha
dec
adc
sar
cli
in
or
out
jae
push
mov
in
mov
add
xchg
mov
out
push
fidiv
pop
add
and
jle
mov
push
cmc
cli
scas
into
neg
and
xchg
aas
sub
test
jnp
dec
int
jl
fmul
push
push
in
popa
xchg
jb
enter
shr
hlt
add
movs
lea
xor
shr
mov
std
adc
dec
aad
xchg
cmp
sbb
mov
dec
rol
sbb
shl
ins
or
stc
int
stos
(bad)
fst
pop
and
es
jle
outs
call
inc
and
mov
cdq
inc
xchg
push
clc
mov
jmp
mov
(bad)
inc
add
(bad)
mov
test
mul
rcr
sar
push
aam
push
sbb
loop
cmps
mov
pop
ror
mov
dec
shl
jne
lock
mov
xor
pop
das
jp
xor
push
imul
test
mov
mov
push
ret
cmp
dec
movs
and
xor
fwait
lods
dec
popa
or
jo
sbb
ret
sbb
sbb
pop
lods
jae
dec
sar
cs
inc
mov
(bad)
mov
jo
dec
dec
test
jo
pop
in
mov
adc
in
mov
jo
dec
fdivr
icebp
fmul
mov
ins
ins
xor
xchg
jbe
add
pop
xchg
mov
xchg
cmp
loopne
cmp
sbb
sti
mov
hlt
add
lods
cli
mov
pop
in
xlat
cmps
or
mov
aam
retf
pusha
daa
test
mov
cmp
adc
jle
xchg
mov
rdpmc
and
xlat
mov
cmps
cmc
mov
or
cmp
push
push
lea
mov
je
stos
pop
jmp
shr
aad
gs
jae
shl
push
pop
inc
dec
fucom
push
in
add
xor
sub
push
icebp
xchg
mov
pushf
sub
mov
mov
add
push
adc
push
sub
or
pop
lea
xor
jge
mov
mov
jae
or
xor
inc
or
adc
jns
or
inc
mov
ins
out
dec
fistp
int
cmp
lahf
scas
clc
jns
fnsave
and
fdiv
jge
mov
push
and
cld
xchg
push
int3
cmp
mov
aam
aad
jns
into
into
imul
(bad)
les
popa
mov
and
sub
sub
dec
xchg
sbb
call
ins
lods
lahf
mov
cmp
icebp
or
cli
outs
les
pop
push
jmp
iret
stos
out
xor
je
add
sub
outs
xchg
mov
push
sub
mov
inc
mov
push
dec
lds
gs
adc
xor
(bad)
arpl
xchg
ret
repnz
data16
xor
sub
sbb
fmul
or
lahf
outs
cmp
hlt
xchg
repz
fcomp
(bad)
fistp
inc
out
or
jno
(bad)
ins
and
xor
repnz
out
(bad)
retf
scas
out
sbb
xabort
sub
fwait
mov
mov
mov
mov
xchg
fadd
out
pop
jae
test
push
mov
mov
add
or
rcr
inc
sti
cld
mov
popf
cdq
push
js
push
xor
mov
fdivr
cwde
popa
dec
dec
(bad)
shr
xchg
in
clc
mov
push
xlat
les
and
(bad)
lahf
jmp
push
cmc
lods
cmp
mov
xor
mov
add
sub
ja
push
dec
dec
mov
scas
mov
ss
or
outs
iret
or
popa
stc
add
(bad)
inc
add
and
(bad)
mul
arpl
or
jle
jecxz
in
pop
test
pushf
mov
ret
rcr
loopne
cmps
and
into
xchg
jae
int
sub
and
out
out
ds
mov
mov
ret
xchg
dec
retf
push
sub
adc
jge
xchg
cmps
sub
fwait
xor
sbb
imul
add
mov
inc
xchg
xor
jne
fisubr
mov
hlt
jae
cs
sbb
inc
pop
test
adc
dec
ins
(bad)
fisttp
dec
into
fcom
xchg
hlt
sbb
dec
lods
add
adc
pop
mov
mov
mov
shr
icebp
dec
(bad)
pop
push
mov
jnp
pop
pop
push
xchg
lahf
mov
fistp
push
sbb
or
inc
cmp
in
rcr
enter
jp
inc
in
adc
fmul
and
fs
dec
lods
loope
int
xchg
add
mov
push
mov
repz
in
sbb
je
adc
loope
mov
pop
je
jo
js
fisttp
add
stos
imul
(bad)
sahf
stos
dec
xor
sub
mov
xor
dec
dec
mov
jge
sar
je
in
lahf
loop
jecxz
cmp
movs
and
push
pushf
cmp
cmp
push
sbb
xchg
jno
dec
into
stos
div
xchg
push
pop
lea
cmp
fldcw
movs
aam
jno
xchg
inc
push
cmp
ins
jmp
in
fwait
mov
scas
je
inc
jne
stc
aaa
sbb
push
mov
aaa
imul
into
test
xor
mov
mov
push
shr
pusha
aaa
and
data16
cs
pop
xchg
pop
dec
xchg
cmp
cdq
push
movs
daa
adc
mov
lods
mov
mov
cld
mov
add
xchg
inc
in
in
sbb
shr
pop
adc
imul
call
test
or
inc
add
xchg
dec
popf
mov
(bad)
xor
or
nop
jg
xchg
cmc
out
xor
or
dec
out
rcr
cmp
loopne
and
mov
cs
xchg
xchg
push
push
mov
jl
movs
loope
sbb
loopne
loop
cmp
daa
dec
mov
lods
stos
dec
inc
dec
sbb
pop
or
test
or
cmp
pushf
sub
xchg
mov
test
inc
fstp
gs
sbb
mov
fstp
pop
mov
push
rcl
popf
xor
cld
pusha
sub
rcr
movd
mov
icebp
iret
iret
jl
imul
or
inc
and
dec
lock
mov
or
aaa
jmp
mov
clc
jmp
or
scas
in
push
shl
sub
sub
mov
push
fst
stc
fisubr
jnp
dec
fst
les
inc
pop
mov
push
mov
into
call
push
add
js
loopne
aas
jge
cmp
cmp
mov
push
rol
pop
and
mov
(bad)
mov
add
mov
and
xor
push
test
push
mov
pop
pop
mov
xchg
js
(bad)
fnstenv
neg
movs
int3
in
cmp
aam
push
jmp
loopne
(bad)
sub
loope
push
sbb
lea
out
adc
arpl
stos
popa
and
lods
loope
out
and
std
aam
inc
mov
mov
clc
sti
call
ins
popf
lods
int3
push
mov
or
sahf
push
and
adc
cmp
out
push
mov
cld
out
xchg
cdq
js
mov
call
popa
out
(bad)
push
jno
mov
std
shl
(bad)
int3
cmp
(bad)
shl
or
cmp
sbb
inc
mov
push
stos
shl
xor
add
xchg
adc
push
jo
xor
std
fwait
rcl
cmp
leave
sbb
stos
std
cmp
add
inc
mov
div
pop
jp
pop
dec
pushf
ja
mov
out
xchg
sbb
scas
fmul
(bad)
xor
in
mov
pop
loope
cmp
sti
inc
cld
in
mov
(bad)
jno
icebp
retf
out
sub
les
(bad)
xlat
fdivr
fldcw
int3
mov
inc
outs
aam
mov
add
mov
xchg
or
or
popf
adc
fistp
shr
repz
ja
cs
jno
call
jns
push
pop
or
jb
push
ins
xchg
out
in
rcr
fsub
cmp
cwde
ja
xchg
test
call
push
shr
stc
nop
sub
xor
aaa
sbb
xlat
dec
mov
shl
push
mov
data16
xchg
shr
sub
xchg
mov
scas
mov
mov
adc
mov
push
mov
jo
xor
les
lock
jg
xor
fst
cmp
push
cs
fist
jmp
in
in
or
shr
and
enter
cmp
(bad)
mov
inc
adc
pop
inc
std
cmp
dec
idiv
int3
jmp
cmp
push
jbe
int3
popa
inc
push
aad
jge
mov
lods
push
repnz
bndldx
mov
and
push
inc
pop
retf
dec
xor
outs
mov
and
leave
mov
add
adc
daa
(bad)
stc
adc
push
cmp
inc
xchg
and
jbe
push
fdivr
or
jg
cwde
stc
(bad)
in
cmp
push
push
enter
xor
sub
jge
xchg
sub
jl
dec
aaa
scas
inc
sbb
push
neg
jns
pop
(bad)
jae
repz
ins
fcmovu
pop
lods
rep
jmp
xlat
xor
and
or
cmp
push
jno
xor
mov
call
scas
adc
shl
push
clc
sbb
(bad)
and
or
xchg
and
mov
rcl
loop
add
xor
ficom
xchg
and
fdivr
mov
sub
fsubp
movs
cmps
std
adc
mov
inc
push
shl
aam
repnz
cwde
cli
inc
inc
mov
mov
arpl
xchg
call
cmps
fwait
or
push
and
iret
or
xchg
pop
mov
mov
in
js
fist
mov
leave
test
ret
adc
ret
pop
push
adc
adc
loopne
inc
retf
pushf
mov
or
in
mov
retf
push
adc
cmp
mov
mov
sub
xchg
mov
push
stos
push
into
(bad)
rol
inc
xor
sbb
repz
(bad)
sahf
jmp
retf
add
movs
aad
push
jle
xchg
push
enter
rol
dec
in
int
sub
stos
mov
add
sbb
test
addr16
les
jle
inc
ror
push
es
stc
int3
dec
aam
in
xor
adc
inc
xchg
sub
(bad)
out
xor
cli
enter
dec
pop
into
cmp
(bad)
in
push
dec
fst
push
cmp
push
sbb
sub
aam
retf
sub
aas
push
cs
cmp
dec
ret
sub
ja
enter
dec
retf
jmp
icebp
add
or
sbb
sbb
or
push
cs
arpl
repnz
add
shl
pop
shl
das
clc
inc
mov
mov
or
sbb
jno
push
add
jmp
lock
imul
mov
mov
jbe
mov
popf
push
cld
idiv
stc
cmc
dec
xchg
pop
xor
dec
dec
cmps
outs
pop
xchg
push
mov
sub
sub
sub
pop
dec
ins
sub
and
adc
call
call
(bad)
out
push
xchg
je
bswap
jno
xor
dec
movs
cwde
movs
imul
push
cmp
(bad)
in
jno
mov
ins
push
in
mov
adc
aaa
(bad)
(bad)
cmp
mov
sar
fistp
cmps
inc
dec
cwde
(bad)
ds
sub
xchg
mov
xlat
nop
xchg
imul
adc
clc
add
mov
and
(bad)
jmp
sub
xchg
mov
jbe
push
lods
aad
adc
push
lahf
ret
jmp
cmc
cmps
mov
cmp
iret
retf
fst
mov
adc
clc
jbe
add
cmps
inc
inc
mov
retf
int
or
pop
cdq
retf
pop
icebp
push
mov
(bad)
loope
mov
cmp
arpl
ins
fst
int3
jns
fs
pop
fdiv
pop
cdq
ret
stos
xor
stos
push
shl
cmp
mov
mov
sbb
and
test
ja
shl
paddb
jbe
je
xor
(bad)
div
inc
in
push
add
es
add
sub
neg
cwde
mov
stos
bnd
aaa
enter
into
icebp
mov
mov
pop
add
out
inc
frstor
cmp
inc
sbb
test
fistp
or
aam
cmp
lods
mov
xchg
dec
xchg
sub
push
in
jno
repnz
jecxz
popf
mov
cmc
sbb
popa
pop
inc
mov
out
iret
pop
call
bound
and
jmp
cld
mov
in
or
push
gs
cmp
cwde
(bad)
lahf
(bad)
jmp
dec
in
xchg
mov
and
iret
jge
push
or
sbb
imul
cdq
add
out
jmp
and
pop
jo
inc
fnstsw
cmp
punpckhwd
mov
das
xchg
idiv
arpl
rcl
ins
shl
lods
pop
test
push
fmul
push
pop
xchg
push
mov
jge
mov
test
xchg
jg
iret
pop
add
or
sub
fnstenv
or
jbe
into
add
dec
jle
add
and
data16
std
jns
dec
mov
xor
lea
adc
aam
or
push
mov
inc
or
mov
sbb
pushf
cmp
inc
lock
lds
mov
xchg
add
lds
pop
inc
neg
fxch
adc
jne
imul
cld
shl
push
mov
pop
pop
inc
adc
das
mov
ficomp
das
and
mov
or
inc
push
shr
jle
mov
mov
or
sti
sub
push
push
xor
xchg
and
xor
cmp
in
sub
aad
sbb
retf
arpl
movs
mov
inc
outs
mov
scas
fistp
cs
outs
inc
es
ret
sub
cwde
xchg
sbb
sbb
out
add
sbb
cmc
or
jp
and
loopne
mov
data16
sub
sub
push
(bad)
sti
les
(bad)
jg
ja
call
mov
retf
push
cs
jno
adc
out
out
inc
sti
ds
cs
push
cmp
mov
mov
outs
scas
gs
icebp
inc
in
inc
nop
jne
mov
and
inc
inc
cmp
fiadd
adc
pop
mov
mov
dec
lea
jg
test
inc
and
sbb
xor
xlat
xchg
xchg
fdiv
and
inc
inc
add
fnstsw
mov
ss
scas
cmps
sbb
mov
xchg
jns
sub
mov
mov
ins
lea
mov
push
fist
inc
ins
pop
cmp
mov
cld
aad
mov
or
sub
pop
imul
in
sbb
or
sbb
pop
in
outs
or
pop
sbb
in
jns
fs
pop
or
daa
in
dec
rcr
cmp
sbb
push
adc
jmp
dec
rcl
(bad)
in
push
jo
mov
push
mov
popa
bound
push
pop
(bad)
dec
stos
add
add
inc
inc
xchg
js
or
loop
call
xchg
sub
lds
pop
loopne
sbb
add
rcl
push
aad
pop
(bad)
pop
shl
inc
mov
pop
dec
push
cmp
sbb
int3
mov
addr16
shr
adc
repz
sbb
cmp
gs
lods
cwde
dec
clc
or
or
into
add
(bad)
enter
int3
push
pop
adc
cmps
call
arpl
lea
cmp
inc
sub
mov
push
push
pop
retf
sub
clc
pop
and
test
hlt
inc
popf
(bad)
xor
pop
ror
mov
(bad)
ret
daa
dec
sbb
mov
ret
repnz
je
jmp
sbb
pop
xor
lds
mov
std
loop
xchg
aas
ins
pop
jno
dec
out
mov
push
jbe
mov
iret
sbb
ss
xchg
inc
ror
mov
in
xchg
out
dec
xor
lods
mov
sub
gs
or
ror
je
in
or
or
or
cdq
and
jge
ret
cwde
rcl
pushf
ins
and
lods
or
cmp
adc
sar
xchg
xlat
adc
and
imul
mov
xor
sub
cmp
or
inc
ss
out
mov
retf
mov
pop
dec
fdivr
pop
push
push
hlt
fs
xchg
jmp
or
pop
stos
jl
pop
repz
ds
or
ins
loopne
inc
popa
xor
xor
data16
stos
shr
jl
mov
shl
mov
sbb
xor
ror
cld
inc
dec
jg
mov
pop
je
inc
sar
or
xor
sti
xchg
cld
(bad)
movs
repz
pusha
fld
loopne
mov
mov
js
stc
mov
xor
and
jg
xchg
retf
xor
(bad)
push
rol
stos
icebp
jmp
cmps
sbb
adc
aas
pop
mov
cwde
or
xor
pusha
sub
or
pusha
mov
cmp
cmp
fild
xchg
push
shr
gs
movs
jecxz
adc
jle
clc
mov
dec
dec
mov
lea
xor
std
mov
inc
mov
icebp
mov
sub
aam
dec
push
icebp
xchg
aad
bound
mov
in
iret
pop
jmp
adc
add
sahf
push
les
xor
into
push
xor
cmp
scas
arpl
stos
(bad)
jecxz
mov
inc
pop
fdiv
and
lea
mov
jo
(bad)
retf
and
mov
and
dec
cs
push
(bad)
call
or
add
mov
cmp
icebp
inc
icebp
stos
push
cmp
xchg
inc
pop
inc
fwait
sub
push
repz
add
lds
jmp
jge
shl
xor
mov
mov
pop
lds
cmp
adc
add
xlat
cdq
(bad)
test
(bad)
out
or
ret
add
pushf
adc
icebp
mov
retf
rol
imul
lods
mov
mov
out
out
out
jg
std
int3
mov
leave
loopne
mov
pop
cmp
sub
mov
jns
xor
or
jge
fucomp
stc
xchg
mov
je
in
leave
push
or
sbb
jmp
jnp
xchg
dec
jg
loop
movs
and
sbb
lds
(bad)
mov
pusha
jae
add
shl
call
cmp
and
sub
mov
dec
mov
cli
shl
rcl
push
adc
pavgb
scas
mov
mov
adc
sahf
in
or
or
add
div
jmp
push
xor
int3
pop
fnstenv
into
loope
push
mov
retf
pop
push
fucomp
push
jle
jp
into
int
bound
out
sbb
loopne
arpl
push
fisttp
cmp
pop
jbe
push
std
sub
std
ret
sub
xor
popa
into
lahf
dec
inc
mov
out
clc
dec
lock
inc
dec
test
pushf
push
gs
sbb
mov
mov
sbb
push
retf
dec
lahf
cld
div
call
(bad)
pop
imul
dec
push
add
daa
cmp
add
call
test
pop
xchg
je
ret
push
lea
push
(bad)
and
call
repz
xchg
sub
add
inc
iret
sub
dec
daa
jbe
sub
sub
pop
push
jne
or
pop
rcl
shl
sub
fdivp
cmp
sub
adc
jbe
pop
sub
(bad)
and
aas
fild
(bad)
push
adc
les
es
les
in
in
push
scas
adc
cli
lods
(bad)
int
mov
cmp
pop
in
xor
cld
std
lds
pop
and
pop
ins
cmps
stc
loop
je
repz
shl
iret
push
pop
jge
pusha
in
jmp
jge
xor
addr16
daa
lods
jge
into
jmp
out
das
xchg
lods
xchg
inc
int
call
lahf
mov
les
cmp
cmp
dec
mov
mov
xchg
dec
xchg
fadd
xlat
xchg
bound
pop
mov
add
cmp
pop
(bad)
cmp
mov
(bad)
or
xor
mov
adc
ds
xchg
cmps
(bad)
xchg
ja
stos
rcr
adc
xchg
or
mov
mov
fs
push
push
aad
loop
test
sbb
pop
mov
aas
mov
dec
jge
pop
mov
sub
clc
mov
je
mov
dec
jge
jmp
push
add
sub
sub
repz
test
cmp
dec
cs
lahf
mov
mov
ret
sub
imul
loopne
sub
push
sbb
ss
loop
mov
dec
xor
push
or
test
and
and
outs
pop
gs
enter
inc
pop
test
jecxz
(bad)
(bad)
int
push
jb
arpl
inc
cmp
inc
jle
mov
push
aad
ja
(bad)
mov
popf
popa
adc
popa
jb
(bad)
aad
jle
adc
sar
retf
mov
fsubr
mov
xor
test
scas
je
bound
inc
popa
sti
pop
or
jmp
inc
xchg
sbb
push
sub
and
xchg
int3
(bad)
pusha
leave
fcom
pop
(bad)
shr
(bad)
push
enter
inc
xor
xor
les
fsubr
lds
xchg
stos
xlat
cdq
push
pop
inc
add
xor
scas
xchg
call
sub
xchg
(bad)
and
daa
mov
icebp
int3
fstp
je
mov
mov
sbb
fldenv
adc
xchg
movs
movs
sbb
lds
jp
inc
pop
and
adc
adc
or
or
scas
cmp
in
hlt
adc
mov
adc
mov
out
mov
mov
dec
add
vdivsd
and
inc
mov
data16
mov
into
test
sub
mov
sbb
repz
xchg
sar
mov
jecxz
popa
inc
call
data16
pop
mov
fwait
cmp
pavgw
mov
lds
pop
inc
fs
mov
jge
push
aas
ss
adc
fsubp
aam
popf
int
jge
dec
adc
dec
inc
out
fnstsw
fisttp
ja
inc
aam
test
mov
sub
div
cdq
mov
xor
mov
sub
jno
gs
(bad)
push
aaa
cmp
icebp
add
mov
ins
fs
out
xchg
arpl
and
sub
adc
loope
(bad)
sbb
and
jnp
inc
mov
mov
cwde
jp
cmps
mov
xchg
outs
imul
sub
in
xchg
push
neg
repz
je
jle
aas
mov
sahf
sahf
sub
sub
mov
push
or
js
sahf
adc
sti
mov
rcl
daa
xchg
xor
push
mov
loopne
dec
push
jp
int3
mov
pop
retf
dec
jecxz
int3
mov
call
push
scas
arpl
add
jle
(bad)
sar
push
and
test
cmp
popf
fisttp
xchg
out
cdq
lds
bound
mov
les
lods
jno
into
mov
push
js
iretw
in
out
retf
or
ins
gs
mov
jnp
inc
int
pop
xor
cmps
rol
pop
mov
loope
dec
jb
test
pushf
xchg
mov
loop
and
neg
or
in
xchg
xor
xchg
outs
push
out
repz
js
fs
mov
jle
xlat
popf
inc
aas
mov
sub
js
dec
outs
into
fadd
out
or
clc
popa
cli
jl
call
es
scas
cmp
cmps
ret
ins
mov
imul
sub
hlt
or
ins
jle
int3
jecxz
mov
dec
sbb
in
ja
loop
stos
in
ds
jnp
cmp
cdq
cwde
xor
std
fist
sub
cwde
ds
in
das
dec
pop
sub
lea
dec
leave
and
pmaddwd
ret
js
jmp
fld
cwde
push
test
sub
sbb
mov
pop
add
push
jb
and
popf
mov
lahf
sbb
push
mov
imul
(bad)
fdiv
sbb
mov
cdq
jmp
jmp
mov
and
daa
xchg
cmp
inc
imul
rcr
ins
jge
out
jg
push
mov
lods
cs
lock
push
(bad)
mov
scas
sub
pop
mov
gs
add
jge
rol
in
cs
jbe
test
mov
push
fwait
jne
dec
adc
outs
mov
rcr
and
hlt
jp
and
retf
fld
into
mov
je
xor
retf
aas
jnp
xor
jnp
push
mov
lea
mov
xchg
jp
mov
mov
sahf
leave
and
mov
lahf
stc
in
xor
dec
loopne
pop
mov
ret
imul
push
mov
fisub
xor
sub
inc
dec
aad
int3
out
adc
popf
or
mov
inc
cmp
pushf
scas
pop
cs
test
add
and
add
fprem1
test
cmp
sti
pop
sbb
mov
popf
leave
retf
add
push
mov
xor
icebp
nop
add
popa
dec
mov
rol
jp
inc
pop
clc
fdecstp
or
push
pop
sub
inc
repz
sub
push
push
lahf
jns
test
dec
imul
cwde
gs
xchg
into
inc
scas
gs
pop
pop
jnp
mov
pop
xchg
inc
cmp
jae
ret
inc
loopne
movs
(bad)
out
movs
aaa
lds
test
imul
dec
icebp
jge
movs
or
bound
add
inc
sbb
adc
mov
out
push
test
push
out
cdq
out
push
mov
pop
jb
xor
sub
pop
popf
icebp
adc
push
js
push
jmp
mov
add
aas
add
mov
ret
mov
aaa
pop
(bad)
mov
mov
lock
cmp
push
and
jmp
gs
push
leave
and
(bad)
and
js
int
test
gs
adc
mov
xchg
stos
rcl
retf
inc
push
jmp
into
in
adc
inc
fcom
or
adc
or
cmp
ins
rol
aas
ret
aaa
test
(bad)
(bad)
xor
fwait
mov
ins
jmp
int3
icebp
imul
outs
push
ja
dec
xchg
pop
cmp
adc
in
pop
imul
xchg
mov
sti
or
pop
sub
jge
ins
popa
mov
mov
jmp
movs
mov
pop
scas
icebp
push
pop
or
aaa
push
aas
es
xchg
or
pop
jns
gs
neg
fcomp
aam
leave
sbb
adc
inc
lods
fsubr
repnz
das
imul
mov
pop
or
mov
xchg
push
or
sahf
mov
and
fs
mov
arpl
into
xchg
mov
ja
ret
adc
jb
pushf
jns
push
je
push
sbb
push
(bad)
or
dec
add
dec
out
div
pop
lea
ret
sub
popa
(bad)
push
xlat
inc
cmc
mov
xor
shl
mov
pop
mov
cmps
hlt
mov
jl
cmp
or
dec
lea
fwait
cmp
fwait
cs
aas
rol
dec
adc
jle
jge
shl
mov
mov
fldcw
jmp
or
push
jne
inc
push
adc
dec
std
test
test
push
fmul
xchg
adc
sub
mov
jp
adc
enter
rol
push
mov
cmp
es
pop
std
sahf
inc
pushf
mov
pop
mov
test
icebp
and
ja
sbb
int
ss
jbe
movs
int3
cmp
jne
loope
and
and
fsubr
sub
icebp
call
or
in
push
adc
data16
pop
into
inc
repnz
dec
fs
jno
lods
dec
int
mov
out
jb
xor
imul
test
stos
xchg
push
aaa
pushf
mov
in
adc
iret
cmps
xchg
push
and
outs
not
shl
mov
std
mov
dec
ret
call
xor
cwde
nop
jp
xor
test
or
pop
ret
cld
or
adc
cmp
jmp
pop
sub
stos
add
out
and
adc
ret
jns
loope
pop
push
mov
cmp
js
idiv
cmp
mov
or
pop
scas
xchg
outs
in
shl
add
pop
inc
lea
ins
inc
sub
es
and
or
xor
add
les
mov
(bad)
sub
cwde
inc
cmps
mov
add
clc
leave
jbe
sahf
ret
(bad)
loopne
ins
aam
xor
mov
mov
es
jge
out
pop
movs
dec
jmp
pop
sahf
pop
pop
psubw
dec
mov
dec
or
fimul
and
or
fst
dec
int3
test
scas
xchg
loop
cmps
outs
push
leave
and
js
xor
test
hlt
mov
push
or
inc
sbb
fidiv
addr16
mov
stos
jb
pop
cmp
call
cmps
mov
push
data16
lock
scas
mov
repz
jo
push
out
mov
xchg
add
das
repz
dec
mov
and
sbb
cmps
retf
jb
daa
movs
dec
fcomp
aad
sub
cmp
cmps
cmp
stos
xor
repnz
sub
cmp
fbld
mov
xor
ret
push
fmul
in
stos
das
and
into
mov
out
dec
mov
stc
dec
add
xchg
movs
mov
sub
and
out
mov
lods
js
outs
push
(bad)
cmp
adc
das
and
and
pop
fsubr
pushf
mov
out
cwde
cli
jmp
dec
das
add
loope
test
mov
pop
pop
(bad)
push
clc
adc
movs
(bad)
mov
sub
shl
mov
xor
in
dec
adc
adc
xor
add
adc
cmp
xor
add
data16
jbe
fsubp
push
ret
hlt
mov
push
xchg
cmp
cmp
dec
ficom
jecxz
pusha
shl
pop
(bad)
mov
aas
bound
xor
sub
mov
add
mov
jg
cmc
fsub
dec
call
mov
jne
sub
and
in
inc
push
das
mov
cli
enter
pop
push
fdivr
pushf
or
mov
aam
leave
fsubr
sub
mov
lods
dec
ret
jmp
and
rcl
inc
xor
inc
test
(bad)
xor
pop
stos
ret
out
inc
mov
sbb
xchg
add
(bad)
(bad)
jnp
mov
das
bound
dec
xchg
pop
xor
test
mov
sub
imul
mov
sub
or
inc
sbb
mov
sub
stc
addr16
outs
(bad)
dec
fistp
ret
xor
mov
aas
adc
repnz
or
fwait
jmp
pop
push
push
fild
pop
aad
sub
pop
int
ret
or
or
scas
push
sbb
sbb
scas
clc
mov
jb
cli
retf
dec
daa
mov
or
xchg
ds
div
inc
rcr
test
jecxz
int3
(bad)
push
sahf
push
loop
test
cmp
cmp
mov
out
fld
add
stos
les
test
sub
mov
mov
pop
loope
dec
lea
stos
mov
dec
shr
inc
push
push
and
xchg
sub
jg
fs
inc
out
mov
idiv
adc
sub
push
push
mov
lock
jle
out
gs
xchg
dec
(bad)
dec
adc
push
fisttp
gs
push
xor
not
jmp
xchg
xor
xchg
dec
jmp
push
aad
in
add
xchg
push
inc
out
sbb
sbb
sub
icebp
daa
push
js
shr
xchg
addr16
icebp
shl
mov
mov
and
mov
int3
inc
test
cli
mov
xchg
and
fld
out
cmp
arpl
scas
movs
push
pop
dec
sub
pop
xor
stc
cli
push
mov
loop
add
add
retf
add
mov
xchg
pusha
and
aaa
pop
ret
iret
xor
sub
ss
adc
jb
jne
in
or
test
mov
and
test
daa
ins
adc
xor
mov
test
mov
add
cwde
xor
xor
dec
(bad)
stos
jne
xor
aaa
clc
or
fiadd
pop
(bad)
jl
jmp
stos
loopne
push
call
push
fld
xor
int
cmp
nop
shr
or
fcmovu
loope
mov
push
sbb
sub
outs
sbb
or
pop
test
vcmppd
das
test
lods
jnp
push
out
mov
movs
mov
setae
mov
mov
dec
mov
adc
or
mov
scas
xchg
sbb
hlt
add
ins
xchg
mov
sbb
into
in
lods
dec
fsubp
scas
mov
idiv
push
or
test
ins
(bad)
rcl
shr
les
pop
xchg
in
push
loope
rol
mov
stc
fst
lock
data16
ss
cmp
outs
dec
pop
loop
movs
in
mov
mov
mov
loope
pop
dec
test
mov
(bad)
and
mov
pop
mov
test
js
jp
lods
push
push
mov
pop
es
out
xor
mov
mov
test
movs
imul
(bad)
shl
mov
dec
inc
movs
dec
xor
push
cmps
push
loopne
xchg
jp
loopne
fstp
scas
fstp
inc
jp
or
call
mov
pop
out
lods
aad
adc
adc
xchg
or
xor
cdq
pop
push
cli
in
shl
cmps
arpl
sti
aam
aas
jbe
mov
dec
aas
rcl
out
rcr
ins
dec
jns
cmp
mov
(bad)
fild
xchg
(bad)
lock
xor
xchg
xchg
in
sub
xchg
enter
cmp
adc
(bad)
lock
icebp
in
stos
jnp
sub
push
mov
lock
pusha
xchg
push
shl
test
sub
sbb
jno
fisttp
and
in
push
(bad)
data16
xlat
sub
test
sbb
int3
daa
add
cmp
xor
jge
out
pop
dec
xchg
inc
jae
popf
push
jb
(bad)
mov
sbb
and
adc
test
aaa
mov
dec
out
mov
fwait
pop
mov
jbe
jg
push
rol
(bad)
dec
jp
fnstenv
sar
xor
es
jae
adc
inc
pop
(bad)
(bad)
ror
sub
adc
ins
jmp
out
pop
push
aas
iret
adc
sbb
and
test
jp
or
push
movs
and
jno
shl
cmp
or
cmp
nop
test
iret
xor
pop
pop
div
jmp
(bad)
mul
add
xlat
hlt
test
cmp
gs
fstp
inc
ffree
or
mov
and
ret
add
ret
stos
daa
das
mov
pop
jmp
(bad)
fidiv
lea
or
and
cli
fwait
rcl
out
mov
dec
cmp
popf
test
jno
xor
xchg
xchg
add
pop
ss
test
cld
test
les
(bad)
scas
out
pop
adc
pop
inc
call
icebp
mov
daa
mov
xor
sahf
mov
shl
movs
neg
cmp
in
inc
retf
jmp
lods
rcl
out
ror
xchg
pushf
fs
and
xor
fmul
xlat
sti
test
ds
push
fmul
jl
(bad)
dec
popf
not
stos
fcom
sub
sti
jae
add
test
out
pop
add
xchg
or
cmc
xchg
shl
add
rcl
stc
pop
dec
push
retf
pop
icebp
cmc
ds
movs
cmp
sbb
shl
add
outs
lea
xchg
popf
inc
aaa
div
jge
stos
xlat
in
push
and
inc
(bad)
retf
jmp
mov
xlat
sbb
mov
push
push
inc
jecxz
in
cmc
dec
lods
push
xchg
mov
jle
loop
xor
dec
cwde
adc
ss
jp
xor
add
fadd
push
je
pop
imul
shl
dec
mov
mov
sbb
jbe
repz
test
fcmovne
clc
jae
jns
stos
(bad)
mov
or
and
cmp
nop
fisttp
mov
push
out
sbb
icebp
dec
inc
jecxz
xlat
jl
jmp
stos
jnp
or
mov
repnz
push
mov
add
and
jo
add
int
cs
xchg
aad
xchg
pop
jg
fmul
xchg
push
inc
fnsave
pop
mov
ja
sub
dec
mov
sub
push
push
jb
inc
clc
sbb
imul
and
sub
cli
out
call
movs
and
push
inc
inc
xor
cwde
xchg
sbb
pop
push
adc
je
sbb
dec
push
cmovns
xor
aaa
jb
fwait
adc
mov
imul
jmp
xor
mov
loop
cmp
dec
sbb
push
push
mov
xchg
les
push
hlt
sbb
hlt
jl
ret
ds
and
or
test
les
push
xchg
in
dec
in
scas
dec
adc
sbb
cmp
xor
repnz
inc
(bad)
int
daa
mov
mov
enter
push
dec
scas
adc
xchg
lock
leave
mov
pop
or
and
pop
cdq
sbb
jl
sahf
ins
pop
in
dec
jp
mov
mov
pop
xchg
out
sti
jnp
ret
aaa
cmp
test
adc
ret
lea
sbb
pusha
test
jns
cwde
fmul
(bad)
popa
(bad)
xor
add
in
popa
sbb
jae
inc
or
and
mov
imul
and
push
xor
je
repnz
mov
(bad)
pushf
lahf
fld
int3
cmc
jb
push
xchg
aam
iret
and
mov
sub
out
cmps
sbb
fstp
stc
xchg
ret
ins
push
push
sbb
cmc
pop
vcvtdq2pd
pop
shl
(bad)
mov
loope
mov
pop
rol
add
sbb
jne
jle
cmp
push
mov
pop
dec
mov
push
dec
aad
xchg
fstp
dec
mov
sahf
sti
inc
mov
icebp
sub
(bad)
fwait
adc
stos
pusha
pushf
dec
test
mov
ficom
pop
je
mov
daa
gs
daa
dec
test
mov
ret
shl
adc
stc
iret
neg
shl
mov
xor
adc
ret
add
cs
pusha
jp
mov
sbb
imul
addr16
out
call
iret
dec
pop
dec
pusha
or
mov
cdq
or
leave
push
dec
jmp
push
cmp
test
and
in
test
cmp
call
inc
outs
dec
pop
inc
test
in
sar
and
pushf
loop
ins
lahf
or
dec
in
jp
arpl
call
imul
xor
fidiv
cmps
adc
pop
jl
rol
or
add
mov
nop
xchg
jno
sub
mov
sbb
out
add
mov
push
das
pusha
gs
pop
pop
sbb
clc
ret
or
xor
push
ins
icebp
push
xchg
mov
div
xor
cmps
fs
or
movs
bound
aam
(bad)
push
mov
sub
inc
xchg
jge
add
cmp
pushf
dec
or
cmps
addr16
call
das
and
aaa
mov
mov
sub
mov
out
mov
or
sbb
inc
inc
fwait
imul
xor
cmp
inc
mov
cmc
mov
bound
jmp
xchg
pusha
inc
movs
inc
movs
mov
pusha
das
mov
or
pushw
mov
push
jae
push
push
imul
mov
sub
xchg
cmp
jg
mov
addr16
jp
ins
test
sbb
push
popf
shl
push
mov
int
pushf
neg
sbb
ftst
mov
mov
icebp
mov
xchg
sub
xor
xor
dec
adc
mov
add
and
lods
int
jns
outs
daa
adc
iret
fst
mov
xchg
mov
pusha
leave
je
sub
in
cmp
rcr
sub
out
and
fstp
jmp
jo
jne
mov
add
js
sbb
jl
aad
xchg
inc
popf
cmp
lock
mov
clc
mov
loope
push
mov
jnp
leave
mov
in
cli
push
mov
xchg
pushf
repnz
push
sbb
retf
mov
mov
fdivr
shr
add
mov
sbb
ret
int3
push
mov
cmp
in
sub
repnz
jge
cmps
retf
shl
jecxz
pop
push
inc
mov
mov
sbb
iret
mov
jp
adc
int
fnstcw
mov
pop
push
popf
cdq
cmp
sbb
cmp
or
loop
lea
dec
jne
push
das
test
sub
adc
shr
mov
jnp
xchg
push
adc
mov
sbb
push
push
or
jo
add
and
pop
xor
pop
mov
xor
inc
push
lahf
out
int
mov
fadd
push
push
(bad)
xchg
jmp
imul
ret
sbb
adc
(bad)
xchg
mov
dec
mov
(bad)
mov
xchg
imul
stos
sar
and
pop
pop
mov
stos
pop
int3
add
cmp
fst
inc
out
inc
lds
data16
pop
push
ins
push
mov
dec
movs
arpl
lahf
add
pop
rol
push
retf
in
out
jns
mov
sub
mov
adc
(bad)
daa
cwde
xchg
or
rcr
push
int3
push
mov
fbstp
mov
loopne
jge
mov
cmp
popa
dec
cmc
pop
pop
add
cmp
lods
inc
jge
pop
adc
jp
ret
jo
adc
jecxz
pop
add
xchg
mov
or
cmp
retf
sti
jle
stc
mov
mov
repnz
sub
cmp
dec
add
sub
mov
data16
or
push
cli
cdq
js
or
jl
sbb
mov
jno
mov
mov
fisubr
popf
and
add
call
dec
dec
repnz
mov
mov
mov
cmp
outs
cmp
inc
out
scas
xlat
fstp
dec
push
pop
gs
or
out
rcr
mov
xor
je
out
je
push
popf
push
dec
js
push
pop
pop
cld
push
ins
dec
xchg
hlt
xchg
cmps
je
cmc
cmp
je
pop
or
leave
mov
out
inc
mov
xor
xor
cli
inc
xchg
ret
iret
add
(bad)
adc
cmp
xor
(bad)
(bad)
add
pop
mov
cmp
outs
repnz
(bad)
enter
pop
mov
xchg
cmc
fiadd
push
dec
or
jl
ja
xchg
add
push
movs
jae
mov
pop
jb
adc
pop
jmp
inc
loopne
sub
push
xchg
movs
ror
pop
(bad)
cmp
push
in
and
pusha
adc
inc
jbe
fstp
push
inc
adc
xchg
imul
cmp
or
ins
sahf
ins
retf
stos
mov
pop
cs
cmp
lods
sbb
mov
jle
xor
sub
cdq
arpl
push
test
imul
inc
and
jmp
ror
pop
pop
jne
repz
add
or
xor
jae
imul
int
xchg
mov
out
aam
(bad)
iret
dec
push
std
xor
stc
add
xchg
sbb
xchg
jmp
add
push
(bad)
fisub
sub
inc
jmp
dec
shr
adc
cs
pop
or
pop
rcl
(bad)
mov
leave
or
fiadd
(bad)
or
pusha
and
pop
ss
fbld
call
es
push
sti
loope
jecxz
sbb
inc
and
call
js
(bad)
cmp
xchg
repz
outs
sti
mov
push
jmp
and
mov
add
leave
retf
push
push
mov
push
div
cmc
or
cmp
popf
aad
mov
and
dec
dec
jp
cld
test
es
popa
popf
sub
js
popf
and
mov
mov
or
je
mov
sub
jns
les
and
(bad)
in
mov
arpl
outs
lahf
gs
enter
repnz
lods
retf
hlt
fwait
mov
jnp
ret
fidivr
sub
cwde
jmp
repnz
jno
shl
inc
cmp
mov
adc
add
mov
mov
scas
cdq
je
add
dec
je
sub
adc
inc
adc
int3
imul
in
dec
ins
pop
shl
imul
scas
mov
mov
jmp
movhps
mov
cwde
sub
rcr
gs
xor
cmp
dec
push
push
sub
repnz
jecxz
test
mov
repnz
xor
mov
das
and
push
leave
movs
mov
(bad)
fwait
retf
dec
pusha
and
in
(bad)
sub
mov
mov
push
shl
call
hlt
retf
fstp
scas
(bad)
arpl
pop
je
sbb
movs
cmp
arpl
sbb
(bad)
(bad)
xlat
cmp
jnp
add
in
popf
ds
dec
pop
in
xchg
in
add
enter
adc
retf
lea
jle
lds
enter
out
sbb
daa
iret
bnd
jg
inc
mov
shr
mov
sub
mov
addps
stos
inc
outs
sbb
jp
jnp
add
js
clc
ret
mov
adc
and
pop
jl
and
xor
push
and
dec
pop
shl
outs
push
call
cmc
nop
pop
xor
sahf
xor
inc
add
xchg
gs
fst
cld
repz
push
cmps
mov
pop
dec
mov
sbb
dec
push
add
or
outs
movs
(bad)
mov
scas
hlt
cs
or
dec
loopne
and
xlat
stc
dec
rcr
xor
data16
js
mov
cmp
inc
call
aas
ins
fld
leave
cmp
in
retf
xchg
in
pop
mov
clc
push
dec
or
inc
int
fidivr
cmps
mov
add
pop
adc
test
jnp
sbb
pop
jne
add
call
pop
vhsubps
pop
fld
mov
cmp
add
cmp
pop
ss
xchg
idiv
fdiv
data16
cmps
retf
or
mov
push
and
xor
adc
inc
cmp
mov
mov
int3
add
inc
(bad)
mov
or
scas
xlat
enter
jo
test
hlt
adc
popa
aad
ss
dec
outs
push
cmps
in
mov
lahf
fcmovne
mov
or
and
call
or
push
pop
rcr
mov
nop
cmp
daa
mov
mov
mov
or
xor
fisub
lods
push
cmp
xchg
dec
scas
les
or
jmp
inc
cmp
imul
ds
adc
fs
out
mov
and
push
adc
sbb
mov
mov
mov
and
cli
test
mov
aad
mov
das
pushf
repz
mov
aad
lods
vmovshdup
inc
adc
lock
test
gs
jp
movs
enter
dec
xchg
gs
cli
dec
test
sub
xchg
mov
mov
jns
js
pushf
dec
dec
push
xor
dec
inc
je
rol
sbb
pop
sbb
loop
gs
retf
lds
add
jmp
mov
mov
retf
daa
mov
rcl
mov
js
add
pop
dec
aad
cwde
mov
retf
test
(bad)
dec
cmps
test
pushf
mov
aam
(bad)
shl
sbb
out
aam
jmp
aam
leave
out
stos
push
dec
pop
mov
test
inc
jb
mov
dec
pop
dec
(bad)
(bad)
cmc
ffree
int
addr16
lods
pop
push
out
pop
xchg
in
fimul
dec
neg
call
pusha
je
cmps
ror
mov
into
leave
xor
add
into
jl
mov
mov
xchg
sub
xchg
punpckhdq
push
in
aas
or
xchg
aad
dec
push
out
mov
loopne
pop
pop
dec
jnp
mov
xchg
popf
mov
mov
xchg
jb
fisub
mov
and
xor
scas
cdq
cmp
cmp
ss
pusha
push
popf
mov
xlat
jecxz
mov
mov
xchg
or
addr16
icebp
ret
es
rcl
push
sbb
sub
nop
cmps
and
mov
pop
call
jo
es
out
aad
push
jbe
ret
and
adc
mov
xchg
imul
(bad)
lahf
xchg
retf
dec
(bad)
push
cli
mov
adc
inc
mov
jnp
fwait
mov
test
cmp
push
mov
sbb
xchg
jb
into
div
mov
(bad)
int3
aam
jmp
sub
add
push
add
mov
cmp
les
push
repnz
jecxz
(bad)
sub
xor
mov
cmps
inc
adc
pop
cmps
fbstp
mov
mulps
xor
sbb
xchg
push
mov
enter
(bad)
(bad)
rol
arpl
test
fld
sub
ja
jo
shl
cli
div
sbb
mov
jg
adc
sub
je
outs
cmc
ucomiss
mov
lahf
dec
jmp
stc
lahf
pop
and
adc
sbb
in
ja
es
push
sar
xchg
call
pushf
loope
imul
and
dec
cmc
jl
inc
cmp
jb
jmpw
out
out
das
ss
(bad)
int3
lahf
gs
mov
dec
aaa
imul
bound
xchg
or
mov
sbb
jae
ja
sub
cmps
or
(bad)
cmp
pusha
aas
xchg
dec
je
mov
xchg
or
ret
push
shr
lods
xor
push
pop
mov
inc
push
sbb
retf
mov
xor
scas
jae
mov
pop
ficomp
dec
and
aas
pop
jo
fs
test
and
and
test
fwait
dec
jle
mov
sar
aad
inc
push
lds
sub
inc
or
jecxz
xor
rcl
sbb
xchg
loop
mov
mov
imul
sar
daa
sbb
scas
call
xchg
lods
fdivr
ret
mov
fisub
cmc
sti
es
or
mov
jbe
mov
push
addr16
push
jns
pop
mov
cwde
nop
repz
shl
mov
jmp
jb
jle
push
cmp
mov
add
imul
jecxz
jbe
pop
nop
mov
sbb
push
push
loop
in
loope
xlat
mov
and
push
aad
movs
cmc
jnp
push
arpl
push
mov
test
sar
lock
and
push
aaa
sub
loopne
ret
mov
outs
pop
das
shl
mov
jmp
jns
es
cld
(bad)
(bad)
neg
jmp
xor
cmc
adc
ror
mov
xchg
(bad)
xchg
sub
ja
push
sub
movs
adc
mov
cmps
mov
inc
inc
icebp
lock
rol
push
sbb
adc
and
jp
pop
push
ret
add
in
sbb
adc
test
add
out
add
pop
in
and
icebp
or
nop
adc
mov
jns
ins
and
sub
scas
test
ins
imul
xchg
clc
stc
mov
push
and
les
fdiv
cmp
iret
jle
xchg
or
adc
mov
fsub
dec
rcl
fs
int3
(bad)
dec
and
ror
or
aad
fwait
xchg
div
pop
daa
dec
cwde
shr
mov
stos
arpl
push
(bad)
in
mov
sbb
xchg
rcr
add
or
ins
add
xchg
jmp
jmp
out
fldenv
pavgb
xchg
push
push
adc
mov
pop
aad
inc
inc
stos
dec
dec
dec
push
lods
mov
fbld
cs
lock
je
xchg
cmp
not
mov
push
cmps
scas
cmp
(bad)
cmps
cld
push
(bad)
das
mov
in
or
cmp
ret
mov
jmp
cli
int3
retf
sar
xor
fisttp
outs
adc
mov
cmp
adc
inc
cmp
inc
dec
outs
frstor
and
repz
adc
mov
repz
imul
jmp
xlat
(bad)
mov
sub
pop
mov
dec
iret
cmp
outs
jmp
jmp
add
jo
jge
in
test
xchg
adc
imul
bound
ss
and
icebp
je
mov
fwait
das
cmp
lea
clc
xor
leave
lock
adc
movs
inc
sub
inc
mov
cld
cld
test
popa
cmp
retf
fld
mov
adc
adc
pop
arpl
adc
jge
addr16
jb
push
(bad)
in
jmp
and
aam
int3
stos
mov
out
or
pop
jmp
das
xor
and
repnz
inc
xor
pop
(bad)
and
in
cmps
or
jo
outs
mov
sub
cdq
mov
push
hlt
xor
jns
jne
cs
outs
stc
shl
lock
sub
mov
in
into
dec
sbb
mov
sar
xchg
int
pslld
adc
scas
lock
fstp
scas
and
cmc
sar
push
leave
arpl
jne
hlt
enter
xchg
dec
add
inc
ret
sub
push
es
sahf
std
lea
aam
jne
pop
xchg
pop
jbe
dec
add
or
lds
push
call
xchg
xchg
and
or
imul
mov
sbb
mov
adc
shl
mov
sbb
int
js
leave
outs
jl
nop
ret
xchg
fwait
dec
push
rcl
daa
das
ret
lea
cmp
adc
or
pop
ss
xchg
add
and
push
cmp
mov
pop
fld
(bad)
fisub
or
xchg
xlat
loope
cmc
into
bound
dec
push
mov
sbb
mov
int
and
mov
cmps
add
mov
(bad)
jp
arpl
js
loop
xor
jbe
data16
jg
pop
dec
jns
adc
out
push
mov
and
test
shl
push
(bad)
into
punpckhdq
sbb
xor
icebp
cmp
(bad)
mov
mov
sbb
add
add
mov
xor
sub
das
jg
add
test
in
fnsave
fidiv
dec
bound
ror
shr
icebp
jmp
adc
outs
add
clc
(bad)
aaa
enter
dec
and
adc
jl
push
stos
imul
das
fisub
jmp
mov
sar
daa
mov
ret
les
jo
jl
xchg
setle
jl
push
icebp
dec
dec
jbe
enter
xlat
mov
lea
ss
(bad)
sti
push
mov
aam
cmps
pop
shl
pop
cmp
fdivr
push
cmp
in
ja
fcmovnbe
mov
xor
lds
fs
cs
neg
test
inc
xor
push
call
out
cmp
aaa
xor
lods
call
je
fdiv
dec
cwde
mov
fistp
add
inc
push
hlt
repz
xor
mov
into
sar
cmc
test
mov
adc
push
cmp
sub
call
fnsave
xchg
(bad)
cld
mov
jle
das
(bad)
(bad)
das
jg
aas
gs
scas
imul
jae
or
pop
and
repnz
int
cmp
adc
inc
xor
push
je
das
jecxz
ins
inc
dec
(bad)
mov
ja
jl
mov
sti
stos
nop
jne
fwait
lds
scas
lock
leave
dec
xor
retf
pop
and
cmc
test
jb
int
stc
cli
pop
jmp
push
ret
and
mov
dec
ret
enter
cmp
or
mov
data16
pop
jl
adc
and
js
push
mov
inc
lods
mov
push
and
or
adc
push
mov
ficom
cdq
pop
cmps
icebp
mov
xchg
xor
pop
mov
loopne
mov
(bad)
loop
mov
mov
xor
pop
push
inc
mov
cmc
(bad)
xchg
stos
and
leave
adc
sahf
jns
sahf
jg
call
lock
js
ret
stos
das
cmp
ds
int
xchg
jbe
add
ja
lods
mov
adc
addr16
or
aas
dec
(bad)
arpl
xor
xchg
fild
xor
dec
lods
jmp
mov
outs
pop
jl
cmp
lods
or
sti
mov
out
in
push
(bad)
jmp
and
sbb
pop
stos
push
or
ficomp
pop
ret
inc
rol
or
push
mov
push
pop
js
ss
dec
pop
imul
scas
xchg
outs
and
inc
mov
mov
push
inc
dec
pop
enter
stos
popf
cmp
jo
pushf
xor
fs
loopne
jne
addr16
and
popa
daa
xchg
push
push
xchg
(bad)
pushf
stos
out
push
inc
xor
sub
(bad)
cld
cli
cmps
jp
jl
jl
sub
or
shl
movs
loopne
jle
inc
and
pop
or
paddsb
stos
inc
or
mov
aaa
xor
mov
nop
fadd
and
dec
cmp
push
stc
dec
ror
pop
xlat
and
inc
pop
mov
retf
mov
(bad)
pusha
xlat
int
gs
push
inc
fcomp
loopne
int3
pop
ja
jno
push
cmp
push
ds
retf
push
mov
les
xchg
sbb
fucomp
sbb
adc
xor
or
(bad)
neg
(bad)
xor
sbb
cmps
sbb
das
in
and
add
and
sti
test
jp
inc
sti
mov
mov
xlat
ror
leave
mov
out
push
cmpxchg
sbb
cmp
mov
xchg
mov
imul
sbb
ja
pop
pushf
jle
pop
sub
pushf
cld
dec
cli
sub
popf
(bad)
iret
mov
dec
jle
add
mov
mov
movs
call
sbb
pop
xor
fnsave
jecxz
inc
es
movs
test
jno
lods
loopne
in
ret
stos
mov
loop
push
loopne
xchg
dec
in
test
sub
dec
jp
mov
jns
and
fisttp
out
and
test
mov
mov
sti
lods
(bad)
fwait
adc
stc
sub
ss
or
push
int
dec
fucomip
pop
jl
lds
add
and
lds
rcr
push
das
jae
imul
retf
add
arpl
or
or
call
(bad)
sub
iret
test
xchg
imul
mov
and
cdq
push
jmp
mov
lock
lahf
mov
movs
test
pop
push
pop
enter
test
mov
pop
fcom
call
push
adc
push
mov
lock
repz
leave
cld
scas
pop
leave
div
cld
sbb
sub
mov
push
les
into
or
pop
test
hlt
inc
sbb
test
sub
lock
stc
aad
push
dec
fwait
pop
(bad)
enter
cli
retf
add
cdq
(bad)
in
pushf
ror
out
cmp
test
sbb
jmp
add
inc
scas
inc
adc
popa
pop
repnz
loop
push
fsub
stos
ret
cmp
sbb
pop
outs
push
shl
test
or
push
sub
clc
pop
bound
ficom
ror
pop
movs
test
mov
je
dec
lods
xchg
ficomp
and
imul
xchg
sub
ret
stc
pop
xchg
cmps
or
mov
pop
imul
push
and
xchg
sub
imul
in
sbb
push
inc
enter
xchg
loopne
div
push
push
sub
mov
shl
pushf
icebp
pop
cli
jns
adc
das
jl
jmp
push
add
add
sbb
xor
sub
xchg
push
mov
out
adc
jmp
mov
xchg
or
in
std
inc
iret
fwait
cmps
sub
fbstp
sbb
aaa
jmp
xor
inc
stos
adc
ret
sbb
or
pop
fdivr
and
icebp
cwde
pop
push
ins
into
shl
mov
inc
call
lods
unpckhps
adc
mov
neg
jge
jmp
or
mov
gs
add
push
dec
and
in
movs
sub
add
mov
push
cmp
push
mov
mov
lods
(bad)
neg
outs
dec
dec
push
mov
jge
call
sbb
dec
mov
jmp
iret
or
pop
daa
out
(bad)
adc
cdq
fwait
scas
xor
js
inc
xor
pop
mov
fxch
es
cmp
(bad)
push
and
es
(bad)
inc
arpl
stos
and
inc
nop
or
ds
call
(bad)
pop
xchg
jmp
xor
inc
bound
fidiv
add
gs
fsub
cli
cli
aaa
das
call
sub
jmp
mov
sbb
jmp
sub
sub
movs
in
rcr
mov
out
sub
in
fld
pop
mov
clc
sub
aaa
test
adc
ins
xor
mov
jge
hlt
xor
test
aas
inc
sbb
in
shl
ins
jnp
movs
xor
dec
outs
pmullw
shr
xchg
mov
cmp
cmc
cmp
xchg
in
movs
sbb
jno
arpl
jg
addr16
dec
fadd
mov
mov
outs
pop
ins
sbb
or
lahf
pop
pop
sbb
loope
std
xchg
es
mov
mov
adc
icebp
mov
cmp
mov
and
and
or
pop
push
or
jo
cmp
push
aas
jbe
mov
or
fcom
pop
mov
cmps
inc
retf
mov
push
fld
jge
push
int
mov
lods
inc
and
mov
and
loope
jns
dec
inc
cmps
sbb
jnp
add
dec
sahf
mov
stc
pushf
loope
add
pop
daa
arpl
mov
push
push
push
push
loopne
es
mov
cwde
mov
and
xor
jecxz
clc
add
mov
lock
sub
jle
pop
call
inc
inc
mov
movs
aad
ret
les
outs
jmp
aad
push
ja
data16
dec
(bad)
jno
sbb
xor
pop
push
stos
arpl
adc
repnz
dec
sti
ja
(bad)
ins
mov
add
loope
shl
pop
cmp
(bad)
retfw
mov
scas
retf
jb
inc
lock
stos
sub
cmp
pop
sub
data16
push
xlat
fcmovnb
mov
mov
inc
(bad)
xchg
cld
xchg
mov
jns
adc
cmps
repnz
or
xchg
ss
sahf
or
(bad)
sub
push
cmp
push
xlat
add
push
and
jl
ja
call
(bad)
imul
mov
cmps
mov
cld
fs
in
div
inc
mov
mov
fidivr
sub
aad
outs
pop
pop
xchg
imul
xchg
addr16
xchg
imul
pop
fsubr
pop
jno
push
push
xor
xchg
clc
ficom
adc
sar
inc
fist
xchg
mov
mov
cmps
fcmovnbe
or
jge
dec
mov
mov
inc
mov
sbb
cld
push
pop
sti
scas
rcl
jmp
and
out
mov
xchg
je
or
ret
dec
fistp
dec
hlt
xor
fdivp
movs
in
popf
or
sub
mov
repz
in
inc
mov
dec
xor
outs
adc
mov
adc
adc
lods
test
xor
loop
and
inc
pop
xchg
(bad)
pop
not
leave
mov
or
jno
xchg
pushf
in
fiadd
es
inc
les
dec
sbb
or
clc
jmp
inc
inc
mov
xchg
and
and
in
call
adc
push
jecxz
push
pop
and
lds
popf
out
test
mov
stos
add
aad
lahf
mov
mov
aaa
dec
leave
popa
sbb
push
hlt
xchg
ret
hlt
jle
gs
add
in
cmps
aam
push
mov
in
int
mov
cmps
dec
cmp
in
xchg
enter
mov
sub
jnp
jmp
xchg
loopne
out
xlat
dec
cdq
pop
mov
and
cmp
les
jb
xor
into
or
jae
into
and
popa
in
(bad)
cdq
mov
mov
mov
movs
push
xchg
clc
dec
stc
aam
sub
mov
aaa
imul
jmp
xchg
add
(bad)
std
and
stos
sahf
sbb
fsub
gs
lock
or
mov
add
clc
fdivrp
xor
mov
sub
loope
sar
xor
rcl
in
es
cmp
test
fwait
stos
cmps
in
adc
ss
pop
gs
loop
pop
and
and
imul
fsubr
(bad)
inc
lock
iret
mov
cmp
enter
sub
or
(bad)
aaa
addr16
mov
int3
fsub
xchg
iret
sbb
pop
in
jecxz
in
jge
xor
imul
into
enter
pop
mov
push
push
pop
add
sub
cs
mov
retf
dec
xchg
ins
pop
fnstenv
outs
repz
fistp
push
sbb
or
pop
ins
dec
lea
add
mov
shl
(bad)
repnz
aas
or
sahf
or
adc
mov
stc
jns
cmps
mov
mov
push
add
mov
icebp
jge
(bad)
das
mov
cmc
cmp
mov
pop
mov
(bad)
std
add
mov
mov
gs
loopne
ds
push
in
and
daa
std
test
jae
push
test
xchg
(bad)
mov
mov
fistp
mov
mov
fcmovnu
adc
add
pushw
jne
stos
push
test
retf
in
pop
enter
mov
cmps
sbb
int
dec
stos
push
adc
out
jge
popf
lds
pop
cmp
lds
popf
xchg
sub
call
cmc
pop
push
sbb
cmp
iret
retf
(bad)
push
sbb
loop
in
dec
xchg
sti
push
loope
dec
arpl
jnp
mov
mov
xor
and
push
inc
cmp
push
pop
mov
mov
mov
cmp
mov
sub
mov
scas
and
push
iret
sub
pop
pop
je
dec
xor
fwait
cmps
popf
dec
adc
dec
call
pop
(bad)
test
and
(bad)
out
hlt
(bad)
call
jb
lods
mov
push
adc
ffree
mov
push
and
cmps
pop
ret
sub
jne
aad
mov
mov
add
leave
cmp
jp
cwde
mov
jl
xchg
loope
and
jecxz
sub
cwde
mov
out
mov
sbb
repnz
pop
dec
cwde
mov
mov
fld
out
and
ds
cmp
shr
sbb
or
scas
popa
pusha
jecxz
popf
cmp
cdq
ror
mov
push
out
pop
fcomi
cwde
shl
in
push
fbld
jecxz
or
inc
mov
int
sahf
js
jo
pop
inc
sub
hlt
xlat
or
dec
add
xchg
out
data16
push
push
je
and
and
mov
mov
xchg
cwde
adc
(bad)
ret
std
int
adc
and
les
pop
mov
sbb
pop
retf
jno
mov
jg
pop
mov
add
sub
popf
mov
sub
pop
test
pop
pop
mov
lahf
add
movs
sbb
mov
mov
mov
mov
fwait
jmp
pop
pop
xor
adc
and
push
mov
dec
jl
xchg
sub
aaa
mov
adc
mov
mov
add
ficom
sar
xchg
adc
push
jl
rcr
mov
fisttp
imul
fcmovne
cmp
fmul
and
pop
push
out
aam
mov
add
fld
sbb
add
cmp
lds
adc
xchg
sub
lods
adc
in
sahf
adc
lods
xor
push
int
dec
mov
les
ret
or
add
std
pushf
add
pop
jmp
je
hlt
in
mov
add
jnp
jnp
mov
aaa
mov
xchg
outs
xor
or
mov
pop
loope
or
daa
xor
pop
xchg
mov
rol
ss
adc
jmp
mov
add
or
pop
sub
or
out
mov
and
mov
mov
sbb
cmps
fisubr
ret
xlat
imul
push
sbb
popa
std
inc
cmp
lea
int3
mov
add
lahf
sub
or
fbstp
inc
mov
sbb
(bad)
cdq
jae
xor
hlt
mov
sub
adc
mov
xchg
adc
sub
mov
aam
in
xchg
repnz
pop
(bad)
enter
cli
push
sub
rcr
push
mov
pusha
loope
out
pusha
aad
inc
push
cmp
cmps
in
test
fld
arpl
inc
fsubr
rcr
inc
repz
(bad)
xor
cmps
(bad)
jae
push
push
rcl
cwde
adc
call
push
fwait
push
out
push
jno
xor
dec
xor
bound
les
push
dec
cmp
xor
cli
jmpw
push
mov
add
adc
(bad)
fcom
pop
jl
stos
lock
into
and
je
xchg
mov
cmp
adc
popf
mov
fwait
or
daa
in
ds
nop
fmul
inc
cmp
xchg
mov
test
sbb
push
rol
xchg
(bad)
adc
into
dec
or
std
std
loop
stos
dec
and
les
inc
ss
(bad)
cli
sbb
in
or
push
pop
movs
fiadd
and
inc
es
sub
inc
xor
or
fst
xchg
push
dec
pop
dec
and
into
imul
int3
fstp
fstp
in
cmp
jp
pop
lock
mov
dec
add
inc
leave
(bad)
mov
pop
jo
outs
stos
sub
or
cld
mov
in
(bad)
std
mov
inc
repz
dec
cmp
mov
imul
and
jl
stc
pop
clc
mov
jne
pop
inc
adc
add
xchg
fsincos
mov
jmp
dec
out
fs
fwait
les
pop
lods
jns
or
lahf
xlat
push
mov
out
call
(bad)
scas
arpl
mov
add
aam
jne
imul
xor
cmp
cli
fs
shl
test
cmp
in
nop
dec
adc
mov
dec
pop
or
mov
icebp
cdq
sub
ins
fld
adc
or
push
jne
idiv
test
arpl
aaa
xor
pop
mov
jno
nop
push
test
xchg
adc
mov
ret
loopne
mov
bound
int3
call
popa
jecxz
xchg
(bad)
mov
stc
xor
(bad)
xchg
movs
jno
xchg
inc
cmp
lods
or
and
mov
xchg
ss
addr16
test
jle
repnz
push
shl
shl
push
jl
dec
cdq
mov
inc
xchg
adc
loop
inc
add
mov
(bad)
es
test
mov
leave
sbb
push
push
not
inc
ja
loopne
mov
sbb
add
loop
sahf
xor
jb
mov
test
arpl
fwait
inc
shl
and
int3
add
and
cmp
repnz
nop
not
xchg
aas
jp
pop
inc
push
ret
inc
sbb
sub
or
jnp
pop
shr
clc
sub
jmp
test
hlt
scas
inc
lods
adc
xor
push
or
jge
sub
popa
inc
or
and
mov
pushf
aam
add
pop
mov
or
cmp
xor
mov
or
imul
mov
test
pop
(bad)
nop
xchg
push
lock
out
push
and
(bad)
dec
add
fs
mov
cmp
xchg
ret
mov
sti
push
add
clc
mov
lds
ror
cmp
dec
sub
or
or
imul
fsubr
test
into
push
(bad)
into
into
popf
mov
icebp
pop
lahf
sbb
iret
xchg
push
ds
xchg
cmp
fwait
popf
loope
retf
xchg
sahf
ja
mov
mov
xor
jp
pop
outs
mov
lock
pop
inc
inc
std
add
(bad)
fimul
mov
not
stos
call
mov
inc
out
dec
js
outs
dec
add
adc
fimul
pop
dec
fwait
pop
jmp
or
lock
dec
lea
jae
addr16
inc
xchg
lods
xor
mov
sbb
cmp
xor
cmp
clc
fwait
inc
sbb
jl
loope
fild
repz
ret
xbegin
popa
mov
and
mov
push
cli
repz
shr
cmp
pop
jns
sbb
dec
xbegin
pop
daa
clc
xor
addr16
mov
inc
rcl
cmps
and
fs
call
rcl
lds
and
mov
sub
push
mov
inc
fnstcw
xor
neg
ror
retf
cli
jge
jg
aas
movs
call
ins
lds
or
gs
pushf
bswap
push
ja
and
inc
xor
shr
xchg
sub
pop
popf
lds
inc
ficom
jmp
mov
lea
adc
mov
inc
ins
cmp
inc
push
jb
sbb
fistp
sar
adc
or
mov
retf
dec
dec
(bad)
jl
jno
sti
ss
push
cmp
lods
call
push
dec
push
loop
(bad)
retf
ret
add
bound
push
popf
fldcw
sar
jp
adc
mov
mov
jg
outs
(bad)
mov
int
fwait
mov
inc
(bad)
jno
push
cdq
add
pop
repz
mov
xor
(bad)
mov
mov
std
jbe
in
aaa
mov
outs
mov
push
call
movs
pop
shl
std
cwde
xchg
xor
daa
movs
add
out
adc
pusha
push
in
je
adc
icebp
lea
jle
call
loop
(bad)
rol
xchg
dec
aaa
int
push
fisttp
pop
(bad)
xchg
sub
jae
popf
cli
ror
movs
sub
pop
in
inc
pop
add
inc
mov
outs
enter
pop
(bad)
fisubr
cs
inc
sti
sbb
cmp
sub
pop
inc
inc
pop
jle
mov
adc
sbb
cld
push
cdq
fdiv
dec
push
sbb
inc
fstp
inc
pop
cdq
cmp
repz
aas
xor
fld
jnp
imul
cmp
in
jae
xchg
jb
adc
mov
stos
or
loope
mov
push
sub
movs
push
xchg
sub
xchg
(bad)
aad
xchg
lea
sub
mov
pop
mov
test
jle
gs
cld
xchg
lds
(bad)
sbb
ffreep
push
scas
pop
jp
pop
pop
imul
push
dec
(bad)
lods
popf
adc
and
fsub
mov
cdq
mov
lea
dec
pop
rcr
cmps
mov
into
adc
mov
fsub
fs
iret
shl
out
sub
pop
bnd
sahf
std
sub
das
push
and
mov
fwait
sbb
call
inc
ret
aas
mov
rol
lahf
pop
addr16
sbb
das
mov
inc
(bad)
mov
in
mov
(bad)
push
cs
dec
mov
lock
fisub
in
sbb
adc
sbb
cdq
push
dec
jmp
push
out
jmp
inc
(bad)
ins
imul
rcl
(bad)
cs
pop
mov
or
outs
or
inc
outs
sar
cmps
mov
pop
mov
call
sbb
iret
push
mov
add
mov
or
jmp
push
test
pop
adc
out
fstp
pop
fld
dec
dec
repnz
nop
in
shr
cmp
mov
inc
std
bnd
daa
inc
sbb
rcl
popa
or
jmp
sahf
pop
xor
or
movs
je
and
pop
sub
xor
push
in
mov
jle
aaa
test
xor
movs
loopne
pop
paddusw
cmp
jne
jb
adc
push
xchg
pusha
ja
out
scas
fsubr
(bad)
push
sahf
or
inc
cmp
push
add
lahf
sbb
out
mov
inc
(bad)
aad
retf
jg
add
xor
push
bound
(bad)
mov
mov
fwait
pop
loop
jg
pop
jns
ret
iret
out
gs
pop
mov
test
fwait
ins
mov
outs
pushf
sbb
cdq
add
outs
xchg
hlt
and
mov
dec
popa
pop
sub
inc
inc
push
pop
fwait
pop
mov
xchg
mov
sbb
je
push
cmp
pop
push
and
idiv
into
aad
adc
or
test
push
inc
sti
jge
ins
inc
adc
or
xor
xchg
(bad)
mov
and
movs
clc
retf
cmp
shr
dec
push
sub
or
sub
repnz
add
mov
dec
push
dec
cdq
stos
jb
inc
pop
or
shl
push
cmp
mov
cmps
les
cld
fnstsw
call
aad
ins
scas
mov
(bad)
mov
add
jns
cli
or
mov
nop
sub
mov
dec
dec
imul
ds
jge
cmps
pop
add
daa
mov
outs
sub
es
jnp
imul
ss
mov
or
push
xlat
inc
inc
(bad)
pop
fbstp
push
and
stc
and
mov
cwde
jle
fidivr
jno
fucomp
jle
mov
xor
jmp
test
mov
mov
sub
mov
cmp
mov
or
ins
scas
bound
aaa
aas
pop
jmp
and
jb
dec
or
in
daa
mov
xor
mov
imul
and
jmp
repz
ss
movs
mov
jg
fs
or
test
in
sub
les
add
fwait
stos
popa
fmul
cwde
test
lock
or
xchg
dec
in
daa
jl
jge
std
pushf
inc
mov
pop
inc
cmp
mov
xchg
push
(bad)
xlat
mov
jmp
call
mov
cmp
fisub
(bad)
ds
int3
pop
ror
inc
in
sbb
inc
das
xchg
repz
mov
je
or
fild
test
cmp
push
pop
ins
jb
mov
jg
out
dec
sbb
dec
popf
mov
mov
sbb
sbb
std
sbb
mov
ss
sti
and
loopne
dec
mov
mov
repz
cmps
push
lahf
pop
cdq
sbb
stos
jecxz
add
jns
scas
out
inc
inc
or
gs
lods
jge
xlat
fs
outs
sub
mov
jmp
inc
int
imul
and
pop
push
enter
call
daa
loope
mov
inc
inc
add
test
pushf
nop
jb
iret
pop
mov
inc
or
push
pop
in
out
pop
in
jl
test
add
pop
push
adc
out
scas
sub
dec
mov
mov
pop
pop
add
out
retf
es
jb
mov
jb
and
xor
cmp
imul
cmps
adc
int
or
push
mov
outs
jb
jl
imul
lahf
gs
(bad)
scas
xchg
mov
fbld
in
and
cmp
stc
jp
xor
add
bound
mov
(bad)
pop
xlat
in
mov
pop
stc
test
sbb
movs
push
dec
sbb
jns
mov
or
xor
pop
cdq
cmps
sbb
cmps
jp
ret
xchg
lods
fidiv
pop
arpl
inc
popa
retf
xor
scas
or
cmp
rol
push
and
repz
inc
cmp
add
xchg
sub
jno
rcr
and
pop
mov
fnstcw
test
and
add
pop
das
sahf
xchg
imul
and
out
lods
nop
pop
(bad)
or
into
and
dec
and
enter
ja
dec
jecxz
mov
aad
add
pushf
dec
into
mov
sbb
mov
test
(bad)
pop
push
jg
or
jne
cld
xlat
push
add
or
int3
adc
(bad)
fwait
pop
mov
jno
bnd
xor
ficom
aaa
mov
stc
sbb
in
les
mov
scas
push
cdq
push
adc
sbb
dec
mov
push
mov
les
loop
jne
test
sbb
lods
mov
movs
adc
mov
call
sbb
adc
adc
cmp
and
sub
stos
mov
mov
dec
push
xchg
pop
pop
in
icebp
push
mov
mov
cmp
lods
pop
(bad)
adc
in
pop
pusha
push
leave
jl
pop
pop
data16
test
mov
movs
aam
call
or
push
mov
imul
add
fmul
sub
mov
xchg
jp
(bad)
jb
mov
addr16
xor
or
mov
dec
push
test
inc
sub
sbb
xor
shl
sub
adc
jnp
xor
jne
jbe
mov
push
jmp
cli
nop
gs
dec
xchg
pop
les
and
jo
dec
mov
out
cmp
pop
xor
sar
mov
sub
pop
inc
dec
push
xchg
addr16
or
push
xchg
add
fnclex
mov
js
dec
xlat
sbb
(bad)
sbb
push
jae
in
sub
stos
outs
and
(bad)
lods
out
or
call
pop
ret
repz
movs
mov
ins
add
inc
aas
dec
add
sbb
fild
rcr
clc
mov
mov
push
xchg
ins
pop
push
scas
add
xor
inc
popa
into
lahf
cmps
cmps
lds
inc
mov
fsub
fild
push
in
adc
leave
fwait
in
ja
cmc
aam
add
xor
call
add
jle
fidivr
movs
hlt
pop
push
xlat
ret
add
mov
or
call
mov
cmp
sub
mov
pop
mov
sub
retf
jnp
xor
in
inc
pop
js
int3
jne
les
out
icebp
outs
cmp
cmps
dec
mov
int3
add
adc
dec
cmp
movs
out
movs
inc
nop
mov
fld
call
lea
jno
jecxz
sub
push
cmps
mov
cld
cwde
pop
mov
mov
xchg
aad
mov
inc
jp
and
mov
or
dec
sbb
mov
mov
in
stos
aam
xchg
mov
adc
stc
mov
adc
cmp
xchg
sbb
aam
mov
inc
mov
mov
imul
scas
test
leave
jnp
ins
or
cmp
inc
mov
mov
loope
stos
les
cdq
imul
sub
jb
aas
sbb
mov
aam
xchg
xor
repnz
push
fcom
loop
sbb
pop
retf
out
pop
or
test
jns
shl
lea
cmp
outs
mul
mov
and
mov
cmp
pop
dec
pop
daa
adc
and
adc
popa
dec
lods
outs
jle
pop
and
cmp
push
loope
mov
repnz
lds
adc
add
sahf
mov
(bad)
mov
jae
sub
cmp
fnstcw
inc
ss
fidiv
pusha
jp
test
push
mov
retf
sub
pop
jge
ins
cmc
fcomi
sub
jnp
test
inc
dec
nop
iret
enter
test
gs
mov
lock
dec
adc
rcr
push
push
mov
lods
mov
dec
cmp
in
inc
mov
cmp
add
pop
mov
sub
sub
into
cmp
mov
stc
in
scas
retf
mov
sbb
into
cmp
and
inc
xchg
xchg
lods
mov
in
es
jle
pop
retf
pop
add
movs
mov
hlt
and
add
cmp
daa
lods
loop
sub
mov
mov
sbb
cli
add
push
leave
dec
fcmovu
call
enter
adc
movs
mov
bound
fnstsw
add
push
les
movs
and
jmp
ds
xchg
mov
sub
push
outs
lahf
in
sbb
xchg
aas
add
pushfw
sti
dec
aam
sub
or
add
pop
ficomp
bound
bound
sbb
mov
std
jns
sbb
fwait
mov
add
add
or
mov
dec
and
gs
pushf
(bad)
ss
xchg
xor
xchg
mov
repnz
xor
xchg
mov
dec
cmps
rol
sub
lea
jo
pushf
mov
jns
enter
das
outs
cld
into
pop
inc
(bad)
shr
div
sub
mov
sbb
iret
mov
pop
dec
arpl
pop
stos
fxch
cmp
stc
fiadd
xor
dec
lods
inc
into
mov
push
dec
jmp
je
(bad)
lods
inc
neg
ins
sub
xor
into
out
in
sti
dec
sbb
push
fcmovnu
and
jp
sahf
aas
xchg
shl
and
clc
push
pop
xor
fnstcw
pop
movs
xchg
mov
push
sbb
retf
inc
cld
and
in
(bad)
or
int
jmp
sbb
into
and
retf
cmp
loopne
icebp
mov
xlat
xor
push
out
stc
sbb
repnz
leave
xor
scas
inc
sub
pop
push
es
addr16
jnp
ins
jae
dec
jecxz
cs
retf
mov
sub
xor
xor
dec
adc
mov
pop
xlat
out
stc
into
and
test
mov
lea
mov
shl
ja
ds
adc
lock
jbe
scas
jmp
add
add
imul
loopne
sbb
cmp
xlat
stos
xchg
dec
xchg
jae
cmp
xor
sar
xor
into
sti
pop
dec
daa
push
pop
dec
int3
test
sub
(bad)
into
les
inc
test
aaa
jmp
push
(bad)
pop
pop
out
mov
and
mov
dec
mov
dec
std
es
or
stc
dec
add
jae
add
not
mov
fdiv
xchg
loop
cld
and
xor
lock
jb
arpl
push
or
or
adc
ret
pop
outs
(bad)
add
add
mov
mov
fild
mov
dec
sub
mov
jmp
mov
out
add
mov
neg
sub
mov
mov
out
xchg
ins
xchg
jg
sti
aad
cmp
and
dec
sub
mov
arpl
pop
push
pop
adc
jns
lock
xchg
icebp
inc
and
imul
mov
gs
ja
cli
nop
xor
stos
cmp
jns
sub
xor
pusha
pop
xor
(bad)
int
clc
dec
add
mov
mov
leave
les
jge
mov
shr
test
setne
mov
and
jle
imul
cmc
aam
or
cmp
mov
mov
jnp
add
out
out
add
mov
and
stos
add
test
pop
jg
jae
out
jbe
cld
xor
jae
nop
adc
ja
push
dec
outs
jle
data16
push
pop
loope
loope
cwde
cmp
push
and
(bad)
rcl
fistp
pop
push
fld
mov
cmps
stc
push
pusha
push
pop
jmp
shl
cmp
push
ds
cmc
std
push
fistp
cdq
pop
xlat
push
add
push
test
xor
sub
retf
and
xor
dec
outs
lods
into
div
not
or
sti
sub
pop
sub
bound
push
test
jecxz
shl
mov
repnz
jo
mov
sahf
jae
arpl
sbb
sbb
nop
jnp
jecxz
sub
cmp
fmul
(bad)
jne
in
jae
jmp
pop
in
or
cmp
jo
loope
xchg
leave
mov
es
cdq
stos
jb
sbb
mov
stos
pop
inc
repnz
jmp
addr16
mov
mov
or
jmp
stc
das
enter
push
jbe
xchg
jl
repnz
jg
or
sub
mov
aad
call
mov
cmps
repnz
sahf
enter
sbb
cmp
or
(bad)
call
movs
mov
mov
inc
sbb
xchg
aad
gs
jmp
cmc
popa
adc
sub
mov
and
mov
nop
push
mov
xor
mov
(bad)
jae
jne
in
sub
test
mov
inc
xchg
inc
loopne
stc
push
mov
movs
mov
inc
fsub
add
pop
into
imul
add
mov
in
pop
cmc
das
xchg
jae
(bad)
jmp
mov
push
jnp
dec
push
push
bound
push
xor
cmp
imul
dec
push
scas
cli
push
ror
cmps
push
mov
dec
jnp
sub
sub
add
out
pop
in
push
std
std
lahf
fcmove
adc
ficomp
das
and
(bad)
ja
pop
jmp
adc
mov
out
mov
dec
test
push
mov
push
or
lods
in
sbb
mov
xchg
ds
fs
mov
and
jge
fwait
int
add
sub
or
jb
syscall
clc
pusha
mov
fild
test
loopne
add
rol
dec
ss
in
xchg
je
dec
call
mov
imul
mov
adc
aaa
sub
jmp
mov
add
icebp
jge
(bad)
sub
repz
rol
sbb
test
repnz
and
cs
out
mov
cld
jmp
and
lea
mov
push
cdq
repz
adc
add
movs
loopne
jno
sbb
loopne
xor
push
jmp
std
and
nop
sbb
xchg
pop
mov
cmp
push
mov
sahf
jle
mov
lock
cmp
outs
adc
stos
push
xchg
sbb
(bad)
jne
stos
fucomi
mov
cmp
dec
xor
rcl
leave
mov
inc
cwde
test
hlt
in
out
imul
push
cwde
cmp
sbb
cwde
pop
inc
push
cli
stos
mov
mov
in
jnp
dec
fcom
jbe
mov
mov
dec
ins
je
pop
int
pop
std
inc
stc
cmp
mov
jae
push
dec
and
test
push
mov
aad
ret
sbb
lds
dec
stc
outs
xchg
js
mov
mov
xchg
inc
mov
aas
add
lds
int
dec
add
cmc
push
popf
xchg
mov
jmp
std
cmp
inc
or
sub
test
sub
xor
sahf
mov
xchg
leave
test
in
int3
xor
xor
cmp
test
mov
movs
pop
das
inc
iret
lods
(bad)
xor
mov
(bad)
or
mov
mov
ins
ins
sub
mov
imul
lods
fidivr
pop
out
ret
fimul
mov
sub
cmp
retf
repz
jb
inc
xchg
shl
mov
sub
cli
rcl
sti
cld
mov
pop
test
ret
loop
push
sbb
push
pop
pop
dec
mov
lods
popf
out
test
sti
mov
dec
jbe
ret
cmp
mov
mov
fistp
bound
mov
mov
and
scas
push
or
cld
lds
mov
jno
or
sbb
push
outs
sub
inc
jmp
jns
ds
push
jno
ss
sbb
int3
gs
inc
(bad)
mov
lock
cmp
fmul
pop
mov
add
dec
mov
xor
push
sti
jnp
xchg
add
clc
bound
pop
es
arpl
imul
dec
xchg
jle
push
xor
ins
mov
mov
pop
les
pushf
add
inc
rcl
jg
pop
bound
or
ret
sub
sbb
inc
icebp
inc
lods
shr
or
and
jae
cmp
aaa
(bad)
lods
ret
mov
mov
and
add
iret
dec
jmp
gs
out
scas
daa
lds
jmp
cmps
dec
xor
jbe
jo
sbb
out
outs
sub
xor
in
movs
xchg
jle
mov
and
pop
in
imul
loopne
add
sub
cli
push
pop
mov
sbb
ror
lods
push
arpl
xchg
stos
inc
xchg
mov
cmp
pushf
sbb
cmp
sbb
or
push
ror
adc
xchg
mov
cmp
add
shl
aam
push
mov
rcr
cmp
ret
adc
mov
pop
fidiv
xor
in
adc
int3
aas
dec
lods
fwait
shl
dec
mov
mov
repz
fld
sbb
sbb
mov
lea
test
outs
jecxz
in
das
xchg
jbe
sbb
jbe
int
inc
xor
sbb
leave
cdq
dec
push
dec
add
movs
jno
sbb
adc
icebp
add
in
leave
jo
lar
adc
sbb
mov
and
outs
in
inc
xor
push
add
arpl
aam
rcl
adc
ret
sti
stc
call
sbb
pop
add
and
mov
mov
jo
(bad)
mov
xchg
out
sbb
stos
inc
mov
scas
fldenv
jge
outs
mov
adc
std
pop
loope
fidivr
sub
loope
add
sti
out
leave
clc
pop
add
dec
or
(bad)
ins
xor
pop
(bad)
das
xchg
sub
int3
(bad)
int
mov
imul
shl
repz
scas
cmps
jmp
(bad)
(bad)
push
inc
xchg
inc
(bad)
sti
movs
loopne
(bad)
inc
or
mov
aam
(bad)
xor
addr16
push
sub
inc
in
push
loop
ficom
je
xchg
adc
mov
test
mov
aaa
or
lds
pushf
loope
or
test
test
push
cmc
cmp
jnp
sub
aad
sub
push
iret
push
adc
(bad)
retf
push
mov
mov
sahf
xchg
ja
xor
aaa
ret
retf
xor
lods
mov
(bad)
out
xor
jne
int3
and
jecxz
mov
and
sbb
shl
inc
ins
jns
and
mov
pop
adc
and
(bad)
sub
std
test
out
test
pop
add
sub
jnp
cli
xchg
rol
xchg
pushf
and
xchg
pop
(bad)
jnp
cmp
bts
retf
adc
sbb
cmps
nop
xor
(bad)
out
cli
daa
mov
lds
add
adc
enter
cmp
jmp
push
fs
lock
(bad)
adc
push
xchg
cmc
imul
mov
pushf
lods
push
or
retf
dec
adc
mov
xchg
ja
jns
pop
jmp
(bad)
scas
sti
jp
push
and
xchg
cs
in
ins
sub
or
adc
mov
push
sbb
jo
inc
mov
loopne
mov
in
jnp
jle
mov
out
sbb
push
sub
(bad)
push
gs
and
(bad)
cmps
in
inc
jbe
call
fwait
push
mov
ss
adc
outs
adc
pop
push
popa
fcmovne
adc
lods
jae
lods
inc
bound
ds
xchg
cwde
addr16
js
lock
dec
fwait
push
jae
fadd
stos
adc
mov
cmp
(bad)
jne
and
mov
cmp
inc
inc
movs
push
aad
xor
fadd
fstp
and
ret
fild
or
mov
cmp
cmp
shl
int3
mov
sbb
push
inc
cmp
(bad)
in
or
sub
xchg
fist
mov
sub
cmp
ret
ret
sti
imul
sub
pop
xchg
cwde
outs
cwde
push
sub
shr
(bad)
or
or
xchg
bound
pushf
aam
cs
cmps
sbb
int3
aaa
cmc
aas
mov
adc
je
stos
pop
and
cmp
shr
mov
xchg
jmp
dec
(bad)
fcomp
out
dec
inc
je
test
or
je
aaa
pop
mov
(bad)
push
enter
sbb
rcl
mov
sbb
std
ffreep
aad
cmp
fist
repz
sbb
mov
cmps
test
xchg
mov
cmp
call
xchg
push
mov
dec
jns
test
jae
int3
sub
stos
(bad)
cmps
jns
imul
xor
inc
jae
mov
imul
rcl
into
mov
scas
pop
or
xor
repz
repz
sbb
std
in
je
cmps
gs
inc
xchg
cld
mov
mov
dec
push
sbb
test
fist
dec
out
mov
and
dec
mov
das
jmp
fnstenv
imul
mov
dec
mov
sub
sbb
mov
jbe
or
xor
inc
dec
test
icebp
(bad)
jne
push
inc
retf
nop
cmp
cmps
mov
repz
les
out
cli
add
xchg
sbb
bound
mov
out
pushf
das
mov
cmp
jge
scas
fnstcw
push
retf
or
mov
dec
mov
aaa
dec
mov
or
stos
aas
jne
inc
and
add
jl
xor
adc
ror
loope
scas
adc
dec
sub
retf
rcl
jecxz
in
rol
mov
sbb
(bad)
cmp
and
movs
jg
aam
cld
fs
add
inc
push
and
int3
scas
fstp
xlat
mov
dec
outs
xchg
lds
dec
push
or
push
jecxz
inc
push
sahf
push
push
xor
fadd
mov
mov
call
push
das
ficom
ror
and
cdq
popa
dec
mov
mov
lock
into
push
test
movs
cmp
fs
adc
(bad)
pop
pushf
mov
pop
cmp
(bad)
lds
or
loop
push
push
mov
add
fld
cmp
shr
js
test
jecxz
mov
add
aaa
push
cmp
sbb
or
xor
push
leave
stos
loop
mov
imul
loop
clc
je
pop
mov
xor
sbb
adc
sbb
cmps
jns
push
dec
fcom
test
pop
xchg
in
sub
jp
xchg
ins
icebp
cmp
adc
bound
mov
ins
js
(bad)
mov
sahf
mov
das
add
pop
jns
dec
sub
div
jle
ja
add
scas
ret
fist
mov
mov
and
dec
jns
adc
imul
out
rcl
sbb
repz
push
gs
mov
dec
or
pop
sbb
jl
outs
sbb
fst
arpl
mov
or
(bad)
jno
shl
sub
ins
mov
stos
xchg
jp
pop
push
cld
cmps
mov
popf
mov
adc
add
mov
nop
aad
mov
mov
add
mov
mov
cmps
je
dec
imul
push
in
sbb
in
jmp
xchg
mov
movs
pop
fstp
lea
outs
test
lea
push
mov
outs
cmps
or
ja
jg
jmp
cmp
jmp
imul
dec
movsx
sub
xchg
jmp
dec
aaa
cmps
aad
or
popa
mov
ror
dec
push
inc
adc
sub
data16
xchg
cmp
xchg
xlat
dec
dec
int
imul
cmps
mov
faddp
lods
push
sbb
addr16
push
xchg
lods
loope
in
scas
lea
jbe
mov
jmp
jnp
stos
sub
hlt
push
pop
xchg
inc
ret
jg
add
lods
cwde
popf
mov
mul
(bad)
js
(bad)
fiadd
add
inc
imul
xchg
shl
xor
adc
mov
pop
sar
shl
sub
pop
lock
adc
push
xor
aaa
or
sti
dec
mov
into
mov
sbb
pop
hlt
mov
push
aaa
xor
push
js
adc
mov
sbb
adc
outs
mov
cld
popf
pop
fwait
mov
or
xor
xor
ins
xor
dec
jb
dec
fbstp
cmp
and
ja
push
(bad)
mov
add
push
mov
xor
cmp
loope
out
popf
cmp
cld
add
ds
or
mov
adc
scas
mov
lock
(bad)
jg
in
jmp
add
adc
adc
cli
or
adc
mov
jle
add
hlt
push
loope
adc
jmp
xor
and
sub
cmps
cmps
jl
aas
mov
sub
inc
pop
inc
push
mov
and
jle
push
gs
add
arpl
imul
push
mov
pusha
int
mov
sti
repz
pop
iret
pop
dec
inc
mov
xor
repnz
aaa
push
mov
jecxz
scas
movs
out
ja
mov
fsub
jg
fsubp
lods
sub
xchg
int3
cld
mov
je
jle
mov
jbe
fisubr
and
inc
in
dec
cld
mov
push
or
add
ret
push
fistp
jmp
arpl
data16
lods
push
retf
xor
pop
ja
in
loopne
(bad)
cmp
or
pop
adc
out
test
retf
(bad)
mov
mov
pusha
inc
cmps
adc
mov
jae
clc
push
movs
jp
loopne
stc
outs
jno
ss
xchg
fld
xchg
out
(bad)
and
pop
in
jmp
(bad)
pop
aaa
xchg
mov
idiv
repz
aas
adc
popa
bound
jne
bound
cmp
cmp
cmps
cli
cmp
inc
arpl
xor
or
mov
adc
jmp
imul
adc
fnstenv
inc
sbb
cmp
mov
mov
add
xlat
add
ret
dec
add
retf
js
ins
std
lds
(bad)
in
cmp
div
xchg
into
cwde
xor
mov
cmp
call
sti
(bad)
mov
scas
sbb
lock
pop
cmp
rol
int3
cmp
(bad)
mov
aaa
int3
or
push
inc
dec
je
cmp
cmps
sub
fwait
xchg
sbb
push
or
xor
mov
push
es
pop
imul
mov
cmc
test
shl
sub
out
xchg
jb
adc
jmp
sbb
inc
or
retf
jae
repz
(bad)
sub
xchg
hlt
sub
dec
or
xchg
pop
neg
jecxz
mov
gs
fild
leave
lock
xor
xlat
and
add
inc
add
push
imul
jae
add
fst
jne
cmp
fcmovnu
int
mov
stos
call
out
shr
fist
mov
pop
jecxz
outs
jno
mov
shr
xchg
mov
es
dec
cmp
inc
dec
sbb
outs
fsubr
daa
sbb
xchg
daa
xchg
sub
push
lds
mov
mov
mov
lods
ja
mov
pop
fsub
mov
add
dec
stos
int
mov
fsub
mov
(bad)
jge
sub
icebp
and
rol
and
dec
dec
jns
sub
int
aam
lds
imul
sbb
mov
fwait
pop
fldcw
fistp
and
mov
or
fwait
push
fdivr
mov
scas
mov
enter
out
mov
imul
xor
or
pop
pushf
js
sbb
ret
test
add
imul
jae
adc
mov
push
or
stos
jge
scas
dec
(bad)
das
lods
test
fcomp
sar
xchg
sub
jnp
(bad)
int
mov
shl
ins
les
xchg
jmp
adc
xor
stos
in
mov
or
push
std
jecxz
xchg
fisttp
mov
xor
jl
js
ins
xchg
cs
xchg
mov
aaa
jo
mov
and
cdq
inc
js
loop
dec
mov
hlt
fwait
jb
fisttp
cmp
daa
lea
ror
cdq
adc
mov
sbb
mov
repz
repz
adc
aas
cmp
xchg
jae
mov
sar
arpl
adc
loopne
add
sbb
jmp
gs
jnp
sub
imul
into
inc
cmp
cmps
mov
cli
adc
sbb
dec
icebp
dec
mov
cmp
xchg
xlat
xchg
fidivr
retf
pop
or
aas
loopne
sbb
into
psubd
mov
sar
adc
jnp
fwait
cmp
push
jbe
icebp
cmp
(bad)
or
xor
cmp
(bad)
fild
test
adc
stos
jg
sub
gs
imul
pop
mov
arpl
xchg
jne
mov
or
stos
leave
movs
rol
xchg
mov
fstp
adc
sbb
add
mul
leave
push
ds
adc
in
xor
inc
outs
mov
lock
retf
in
bound
jecxz
jmp
inc
sbb
into
pop
xor
or
ja
push
adc
pusha
arpl
cmp
retf
(bad)
nop
or
xchg
sub
cmps
aam
retf
and
pop
sub
je
mov
xchg
fwait
scas
inc
mov
pop
sub
enter
push
movs
jle
dec
xchg
stc
mov
mov
addr16
push
push
mov
in
lods
emms
mov
std
loop
cmps
sbb
sub
jg
in
mov
or
xor
adc
mov
ret
xrelease
aad
scas
mov
mov
or
sub
pinsrw
arpl
shr
mov
fmul
std
jp
cmps
cmp
xchg
add
xchg
nop
mov
or
aad
sub
xchg
(bad)
jae
cld
leave
imul
test
in
xor
add
pop
rcr
xor
pop
pop
jb
sub
arpl
mov
ds
pusha
lea
xor
(bad)
fild
fucomp
punpckhbw
scas
fnclex
adc
or
fucomp
push
fisubr
div
lea
je
into
out
pop
jb
cmc
mov
and
jmp
push
or
aam
xor
mov
lock
fsubr
and
xchg
push
cmc
int
pop
gs
inc
iret
mov
sub
(bad)
or
adc
dec
sbb
mov
jmp
daa
mov
das
mov
or
push
loop
or
bound
xchg
test
mov
cmp
inc
push
inc
adc
xchg
loop
dec
sub
mov
or
mov
in
xor
pop
mov
inc
aas
or
arpl
pop
inc
xor
ja
inc
rol
cli
fistp
das
xor
sbb
jno
stos
jne
add
sbb
(bad)
daa
jge
stos
leave
jg
sbb
stc
movs
into
mov
inc
idiv
adc
int
sbb
or
or
pop
or
or
adc
loop
into
push
(bad)
sub
dec
push
jb
adc
push
push
push
inc
push
xor
push
aad
xchg
aas
movs
or
push
fild
push
xor
pop
cmc
not
or
movs
sub
icebp
adc
push
stos
mov
push
pop
mov
dec
cmp
adc
addr16
xor
add
fcmovb
out
push
aas
jmp
adc
daa
push
jmp
push
cmp
cmp
hlt
std
(bad)
fimul
mul
int
fidiv
repnz
lahf
or
sub
es
push
xchg
and
mov
adc
mov
mov
ins
sbb
je
hlt
cmp
add
dec
and
(bad)
sbb
ins
pushf
jp
loope
adc
jnp
out
sar
aas
adc
lds
out
std
mov
jb
jb
popa
pushf
ins
ret
lods
movs
or
sbb
retf
imul
mov
lods
call
sub
stos
xor
jecxz
lahf
in
stos
retf
cmp
retf
or
pop
jmp
not
seto
js
xlat
nop
ss
jbe
mov
sub
shr
movs
in
adc
jae
js
retf
fwait
cmp
sbb
aad
pusha
adc
sti
(bad)
fwait
lods
nop
push
sub
pop
mov
cs
and
stc
std
sar
dec
test
or
xchg
cli
sub
xor
daa
xor
sub
jl
in
imul
js
aaa
(bad)
jnp
or
pushf
lea
out
jb
and
test
mov
push
pop
inc
loope
push
iret
cmps
mov
test
or
mov
push
xchg
push
mov
addr16
mov
js
cmp
lea
sbb
pop
mov
mov
inc
fist
pop
jb
js
add
lods
sub
pop
jmp
out
mov
or
push
out
push
mov
lahf
js
lock
dec
dec
cli
mov
mov
xchg
xacquire
cmp
sub
xchg
popa
mov
or
mov
call
enter
dec
call
shl
cli
imul
mov
call
rol
mov
dec
push
adc
mov
fwait
sub
repnz
ja
addr16
adc
(bad)
aaa
fs
rcl
and
out
xor
mov
mov
scas
mov
jg
xlat
jmp
imul
mov
pop
pop
mov
mov
pop
adc
repnz
xor
push
jp
xor
mov
out
pop
out
add
add
inc
add
xor
and
mov
stc
int
sub
in
data16
test
lock
retf
lea
sbb
fisubr
dec
test
imul
popa
retf
fnstsw
mov
and
stos
xchg
idiv
push
push
aas
jo
leave
mov
popf
rcr
xlat
mov
sub
aam
or
mov
push
xor
or
inc
lock
and
mov
shl
ret
(bad)
idiv
or
dec
xor
or
loope
push
repz
xor
cmc
dec
aas
add
ret
xor
es
mov
daa
aaa
movs
inc
adc
jg
xchg
retf
mov
inc
lock
pop
fdiv
or
out
xor
push
add
cdq
sub
ins
cmovp
push
mov
movs
outs
sub
test
fnstsw
mov
adc
or
repnz
pusha
or
lock
adc
jnp
xchg
lods
cmps
in
mov
xor
imul
xchg
imul
in
add
hlt
pop
xchg
adc
jnp
mov
stos
movs
out
and
ins
jmp
popf
or
cwde
inc
(bad)
inc
addr16
mov
xor
sbb
jno
test
pusha
out
mov
jg
cmp
xor
mov
mov
stos
jo
mov
cmps
and
push
inc
iret
xchg
out
out
pusha
cs
push
push
les
xor
xchg
iret
dec
lahf
jno
daa
and
sub
adc
sahf
hlt
fild
push
jns
xchg
fcmovu
cmps
push
fisttp
cmp
popa
cmp
pop
fst
xchg
xchg
pop
je
pop
jge
xchg
inc
sub
add
add
shr
aam
cmps
out
mov
push
idiv
sbb
test
sbb
(bad)
cli
ins
sahf
sahf
pushf
mov
xor
add
sbb
adc
dec
imul
(bad)
adc
popf
rcr
idiv
(bad)
imul
add
call
xchg
cmp
dec
imul
cmp
outs
jae
sub
pop
inc
je
aaa
cwde
pusha
stc
repnz
cmp
cwde
(bad)
cmp
or
mov
push
(bad)
(bad)
push
in
xchg
cmp
mov
pop
inc
push
push
jmp
ja
ins
jl
push
scas
ror
out
pop
cmps
pop
leave
dec
ret
pushf
adc
pop
jb
sbb
test
mov
mov
dec
data16
mov
mov
cmp
jbe
ret
add
movs
mov
add
adc
dec
jbe
imul
int
add
sub
jp
inc
ret
fist
(bad)
test
loop
dec
lahf
or
icebp
int3
fs
adc
mov
adc
ret
(bad)
and
push
mov
repz
sub
pushf
pop
aam
fcom
push
jbe
mov
mov
cwde
retf
xor
xchg
cmovp
test
cmp
lahf
cli
in
fisttp
fsubp
pop
and
das
aad
movs
icebp
xchg
xchg
std
inc
push
or
test
ja
sub
repz
not
in
cld
mov
sbb
xor
jns
cmp
std
ss
js
mov
ficomp
push
mov
xor
adc
mov
mov
mov
scas
push
out
pop
popf
pop
inc
push
cli
mov
xlat
sub
xchg
jae
aas
add
mov
daa
imul
jp
add
pop
loope
adc
(bad)
ror
inc
outs
mov
mov
stc
cmp
daa
loopne
mov
jmp
sbb
inc
mov
push
mov
pop
mov
(bad)
xlat
lods
ss
cmp
mov
enter
lahf
or
sbb
out
jl
inc
inc
call
add
mov
inc
stos
pop
jmp
lds
aas
and
pop
mov
sbb
or
scas
das
mov
test
dec
std
loope
inc
jb
aad
int3
clc
das
enter
cmp
push
inc
mul
push
ins
mov
leave
ins
and
cli
cs
pop
sbb
adc
test
scas
(bad)
mov
retf
icebp
cmp
mov
cmp
test
mov
imul
cmp
dec
mov
sub
and
cmp
and
out
mov
dec
arpl
adc
inc
enter
xor
adc
xor
movs
inc
xlat
mov
mov
inc
in
pop
(bad)
es
cld
imul
pop
scas
fsub
inc
push
in
arpl
shl
movs
jb
hlt
cmp
mov
pop
inc
loop
in
sbb
jmp
add
sbb
push
mov
lea
or
pop
adc
(bad)
mov
nop
lods
repz
sbb
daa
out
push
sbb
arpl
pop
es
(bad)
mov
jmp
aaa
add
ss
or
out
mov
cmp
push
push
pop
push
call
cmc
ins
stc
add
cmps
jns
jmp
cdq
push
mov
enter
cmp
pop
push
and
inc
(bad)
(bad)
shr
fst
xchg
dec
lahf
push
data16
jmp
outs
adc
pop
call
fdivp
add
pusha
pop
hlt
push
lods
pop
dec
mov
ss
inc
jo
push
push
imul
and
add
ficomp
in
inc
dec
loope
mov
or
adc
fist
out
push
outs
neg
dec
fiadd
mov
fsub
mov
imul
mov
aaa
add
adc
adc
jmp
push
inc
push
mov
gs
mov
stos
ffreep
ja
pop
push
dec
fsubrp
mov
push
gs
sub
push
sub
hlt
or
test
ins
into
mov
dec
scas
mov
xlat
hlt
or
repnz
je
lods
mov
aaa
sub
push
adc
es
fstp
(bad)
clc
arpl
xchg
(bad)
mov
sbb
je
test
push
pop
jle
inc
sub
cdq
call
or
sar
repz
and
sbb
gs
or
jo
in
xchg
adc
out
dec
mov
mov
out
les
inc
adc
ja
mov
jnp
ds
pushf
fidiv
lods
pop
dec
jge
popa
xchg
pushfw
imul
leave
sahf
rol
xchg
mov
sbb
mov
iret
(bad)
fisub
test
sub
dec
inc
xchg
lds
jge
xor
xor
enter
mov
rcr
push
ss
pop
dec
mov
cld
das
test
sub
sbb
test
and
sar
xor
hlt
cmp
mov
inc
aad
iret
cmp
iret
fwait
mov
cmp
and
in
sub
call
cwde
fisubr
xor
push
pop
mov
adc
cmp
cdq
jne
shl
cmp
popf
pushf
add
in
(bad)
icebp
push
dec
test
scas
ds
out
inc
mov
movs
or
mov
test
xchg
sbb
outs
adc
movs
leave
dec
outs
sub
push
jns
mov
and
leave
bound
pop
mov
ret
fistp
movs
push
iret
add
ins
xchg
pop
jl
dec
sbb
movs
cdq
lahf
ror
sub
and
sbb
jnp
add
xchg
imul
fsubr
xchg
or
(bad)
pop
mul
cmp
jecxz
pop
not
(bad)
xor
add
dec
data16
(bad)
movs
cwde
shl
test
jnp
adc
push
cs
jp
xchg
loopne
cmps
or
inc
stc
shl
adc
push
aas
push
stos
adc
popf
int3
xlat
inc
fdiv
cmp
jl
xor
inc
xor
mov
ja
div
scas
lea
sbb
push
mov
dec
(bad)
out
shr
inc
mov
jno
rol
gs
fisubr
or
mov
cmp
rcr
cmp
sbb
jo
(bad)
push
or
jmp
dec
jp
test
imul
mov
retf
ins
jne
scas
ret
and
cmp
mov
repz
ror
stc
adc
out
xor
push
pop
bound
mov
leave
into
mov
(bad)
in
sub
xor
pop
jmp
dec
jp
jbe
enter
outs
inc
pop
add
mov
and
jb
repz
std
push
xchg
pop
outs
mov
loope
fs
jae
dec
add
dec
push
pop
jmp
js
mov
test
push
push
or
mov
push
movs
cwde
sbb
cmc
pushf
jo
sbb
into
pop
jne
aad
lea
mov
scas
push
sbb
sbb
ss
daa
and
add
add
fmul
leave
sub
sub
hlt
xchg
mov
jo
or
out
mov
shr
add
ror
ja
icebp
mov
cmc
pop
push
popf
dec
lods
push
xor
sub
cmps
dec
mov
inc
push
xchg
xor
inc
rcr
xchg
and
test
pop
jns
loope
fdivr
cmps
retf
fs
adc
stos
dec
jmp
mov
xchg
or
mov
js
xor
pop
jno
dec
fld
xchg
cs
xchg
add
(bad)
cmp
js
sahf
(bad)
dec
mov
jmp
imul
xchg
enter
movaps
call
arpl
jecxz
mov
mov
(bad)
mov
fld
and
iret
mov
stc
jne
pop
mov
ss
pop
add
xor
and
es
ffree
push
mov
dec
jo
xor
arpl
cdq
sti
xor
sub
gs
ss
mov
outs
push
(bad)
(bad)
and
mov
xor
out
push
leave
adc
test
cwde
add
mul
add
fsub
dec
sub
xor
pop
and
stc
out
(bad)
dec
mov
jl
repnz
repnz
cwde
addr16
fistp
mov
or
ins
jle
inc
call
lock
dec
es
sub
xor
ins
sub
pop
lea
stos
pop
or
ret
stos
sbb
bound
sub
pop
aad
ret
xchg
xor
pop
test
in
fiadd
or
push
rol
loope
jne
or
int
push
jecxz
ds
outs
ss
push
iret
scas
xor
mov
and
cli
mov
xchg
sub
scas
test
iret
sti
call
cwde
shr
jae
sbb
test
sar
ins
fadd
jo
mov
xchg
xchg
or
dec
xor
stos
mov
pop
pop
push
cmc
push
out
xchg
ds
lock
imul
repz
xchg
jg
xchg
inc
out
mov
out
xchg
mov
push
and
pusha
adc
xor
or
adc
aad
scas
enter
sbb
ins
jno
test
sti
mov
pop
nop
mov
xchg
mov
sbb
xor
iret
xchg
jmp
hlt
ret
pop
xchg
jo
fild
jb
rcr
mov
mov
xor
test
int
or
push
adc
repz
push
cli
outs
or
in
sub
ja
aas
clc
xor
xchg
mov
inc
mov
add
ds
lods
push
mov
in
(bad)
ror
mov
ror
sbb
stos
pop
or
movs
sbb
ss
add
mov
pushf
or
or
adc
xor
mov
nop
jecxz
adc
(bad)
hlt
leave
pop
stc
inc
in
clc
es
repnz
sbb
cdq
sbb
mov
lock
and
addr16
hlt
sar
bound
sub
not
ja
or
std
call
aam
inc
lahf
cld
popf
jl
pop
mov
xor
iret
xchg
sbb
outs
aas
icebp
dec
leave
nop
xor
(bad)
push
retf
ds
mov
loope
pushf
shl
sbb
push
jbe
jl
repnz
mov
mov
mov
jge
sbb
popa
sbb
mov
call
ret
call
sub
test
lahf
inc
mov
sbb
xchg
imul
mov
jl
das
adc
enter
div
int3
pop
loope
xor
jb
dec
jp
imul
ins
xchg
inc
int
hlt
int
sub
jo
movs
xlat
jecxz
hlt
mov
loopne
retf
mov
stos
imul
xchg
mov
adc
ficomp
stc
or
arpl
(bad)
adc
or
jmp
sbb
fisubr
jl
out
inc
sub
(bad)
mov
mov
jnp
fcomp
sub
mov
xlat
mov
aad
shl
dec
add
jp
and
or
jecxz
ins
mov
out
cmc
mov
and
push
outs
leave
pop
pushf
enter
xor
pop
pop
mov
push
dec
jecxz
or
test
adc
movs
adc
sbb
mov
dec
sbb
hlt
cmp
call
in
je
in
adc
jns
adc
(bad)
movs
sahf
mov
ret
cmps
lea
jb
adc
nop
data16
daa
mov
iret
js
push
lea
mov
mov
pop
and
int
push
push
xor
cli
xlat
adc
dec
or
adc
call
imul
inc
or
ror
ins
pop
shl
ja
pushf
push
scas
xor
std
cmp
inc
loop
xor
loope
(bad)
adc
test
leave
test
outs
sub
cmp
mov
dec
inc
movs
stos
inc
aad
or
sub
das
xor
push
std
inc
inc
add
mov
(bad)
jg
cmc
jle
ja
mov
jno
outs
add
xchg
stos
mov
adc
lock
(bad)
pusha
mov
mov
xchg
mov
gs
(bad)
push
stos
arpl
add
mov
mov
loopne
mov
jge
jle
inc
imul
push
xor
repnz
sub
push
jle
mov
and
gs
sbb
sub
sbb
pushf
push
das
repnz
jmp
fcom
loop
loopne
mov
out
enter
jae
push
dec
ret
xchg
adc
adc
pop
in
mov
pop
imul
in
pop
rcr
imul
rcl
xchg
xchg
fwait
ret
and
push
sbb
cmp
div
inc
push
fdiv
push
sbb
dec
pop
jle
test
xor
(bad)
jnp
sub
in
repz
(bad)
(bad)
mov
aaa
adc
push
dec
rcl
int
and
jnp
mov
enter
cmp
add
jae
mov
pop
and
jecxz
repnz
dec
mov
(bad)
out
inc
push
test
jae
jnp
bound
sbb
daa
pop
xor
add
cmp
mov
mov
daa
loopne
scas
jnp
add
gs
sub
repz
dec
cmc
mov
xlat
(bad)
mov
dec
mov
js
inc
add
ds
mov
(bad)
repnz
lds
mov
ss
xlat
cmp
jns
dec
mov
mov
lods
call
inc
add
ins
mov
pop
cmps
add
dec
mov
out
or
jnp
arpl
cdq
push
(bad)
sti
mov
stos
adc
pop
lods
xor
xor
and
pop
outs
loope
cmp
push
sub
scas
push
and
cmp
mov
mov
xchg
cmp
add
inc
add
jne
mov
xchg
leave
out
adc
fwait
movs
retf
aas
scas
push
les
cmp
popf
adc
cmp
in
push
dec
xlat
push
mov
std
mov
test
and
sbb
xor
cdq
repz
and
push
sub
pop
es
loope
mov
fdecstp
cmp
cmp
dec
xchg
sbb
jnp
mov
sbb
cmc
dec
push
enter
jmp
xor
mov
pusha
cmp
mov
dec
movlps
xchg
es
pop
sub
mov
jbe
fisubr
cmp
push
data16
js
push
fiadd
mov
xchg
shl
mov
cmc
fcom
inc
sar
push
ss
inc
dec
push
or
ror
call
jo
xchg
lock
inc
cmp
pop
scas
cmp
ret
or
test
call
mov
lods
fs
mov
scas
inc
sbb
push
push
mov
push
daa
pop
fsub
jnp
push
pop
xchg
clc
cmc
adc
pop
or
add
jb
jae
fisub
popf
xchg
pop
out
adc
mov
mov
scas
inc
mov
jns
mov
sbb
mov
push
repz
nop
das
and
cs
inc
and
add
scas
jmp
lea
mov
imul
je
cmp
cmp
aaa
inc
movs
dec
rol
pop
mov
mov
mov
push
jecxz
push
dec
and
cmp
jge
aad
fs
dec
call
or
jno
cmp
push
je
xchg
inc
loop
repnz
cmp
out
sub
daa
pop
mov
jns
popa
es
pop
hlt
cmp
dec
sbb
ss
movs
movs
dec
arpl
les
xchg
test
pop
imul
sahf
push
enter
pop
dec
mov
xor
sub
push
shl
mov
mov
test
dec
pop
add
jg
add
std
or
icebp
div
scas
pop
stos
bound
mov
mov
aad
fdivp
mov
adc
xchg
mov
inc
test
dec
call
mov
mov
std
cmps
inc
dec
sbb
sbb
mov
and
inc
adc
jae
(bad)
pop
lahf
fsubp
mov
in
sub
mov
lahf
mov
mov
fstp
pop
addr16
stc
push
jp
cmp
adc
stos
add
fbstp
sub
gs
jne
test
inc
std
jmp
ss
dec
dec
shl
sub
fldcw
mov
xor
retf
pop
fs
add
pop
and
mov
rcl
xor
xor
sub
mov
test
jns
sbb
call
hlt
xor
or
leave
out
xchg
or
(bad)
movs
popaw
jmp
out
fcom
mov
dec
scas
sbb
and
cmp
fs
sub
adc
dec
sbb
xchg
lock
les
rcr
jno
not
sbb
pop
(bad)
movs
pop
add
inc
sbb
dec
call
call
pop
cdq
jle
push
mov
clc
mov
mov
outs
xchg
ss
and
mov
cmps
popf
or
rcl
mov
mov
jp
cwde
movs
fistp
push
pusha
xchg
or
lods
in
xchg
inc
je
adc
xlat
xor
popf
out
lea
outs
add
ret
cmps
inc
into
(bad)
fcom
(bad)
cmp
(bad)
outs
jno
and
lea
and
hlt
(bad)
loopne
mov
cmps
popa
ins
cmp
ffreep
mov
jbe
je
inc
lods
mov
push
mov
xor
out
mov
push
ds
movs
xor
in
dec
sub
pop
jmp
dec
or
pop
pushf
addr16
call
dec
imul
into
xor
pop
ficom
ja
pop
fldenv
outs
push
retf
jecxz
stos
push
xor
test
or
mov
inc
add
arpl
sbb
cmp
mov
push
pop
inc
inc
test
outs
add
pop
and
xor
popa
jb
les
inc
into
bound
jmp
or
pop
or
sbb
ret
leave
mov
int
in
sahf
push
xor
out
loop
dec
mov
fld1
loopne
test
pop
and
icebp
test
add
loop
jno
adc
sub
dec
(bad)
fwait
sti
mov
jg
rcr
in
cmp
push
ret
sbb
in
dec
out
je
inc
loop
cmp
dec
inc
xchg
add
xor
lods
pop
retf
pushf
out
mov
imul
sub
test
or
jb
pop
xor
xor
sub
pop
dec
cli
xchg
mov
jmp
or
nop
and
pop
loope
xor
int3
js
xchg
out
pop
mov
mov
test
je
fcom
cmovg
mov
or
dec
fucomi
retf
xchg
int
inc
rcl
xchg
shl
std
js
pop
mov
or
not
dec
jae
cmps
sub
push
push
push
sub
and
pop
xchg
ror
fnsave
mov
std
sahf
or
call
inc
fisttp
mov
jmp
ins
push
mov
cmp
adc
push
dec
or
out
xchg
mov
pop
enter
test
idiv
push
fldcw
lahf
lock
jbe
inc
stos
mov
test
mov
sbb
test
xchg
fs
jo
mov
inc
mov
push
add
ret
sub
retf
shl
xchg
jns
xchg
inc
imul
pop
xchg
inc
into
mov
pop
sbb
mov
(bad)
enter
les
mov
jg
nop
or
addr16
repnz
mov
pop
cwde
mov
mov
mov
lods
sbb
pop
mov
mov
pop
imul
add
mov
push
(bad)
std
adc
add
mov
add
cmps
mov
rep
mov
mov
test
cmps
push
repnz
inc
bound
(bad)
imul
dec
fcmovbe
loop
rcr
or
dec
pusha
imul
in
into
and
ins
sbb
sub
rol
xor
push
xchg
(bad)
lea
inc
sbb
in
cmp
fdivp
add
or
jae
retf
and
ss
mov
xchg
sahf
outs
aam
and
int3
and
adc
mov
xchg
and
jne
outs
xor
add
mov
jae
int3
hlt
call
dec
jecxz
in
xor
mov
pop
cmp
fs
fidiv
mov
pop
pop
outs
test
xchg
arpl
dec
jl
pop
jle
and
push
cwde
xor
mov
xchg
popf
mov
test
outs
ror
enter
and
jl
mov
xchg
loopne
aaa
and
imul
pop
push
jmp
mov
addr16
add
sub
icebp
jo
xor
sbb
cli
sbb
in
div
cld
xlat
add
shr
cmps
and
jl
sub
lods
mov
scas
in
aam
into
jb
inc
pop
xchg
ret
retf
add
pop
cdq
add
fist
imul
push
ret
mov
adc
push
jg
or
rep
loope
push
xor
inc
in
sbb
mov
sub
xor
push
dec
sbb
cmp
cld
or
fsubr
int3
js
inc
sbb
fwait
jl
mov
out
push
mov
lahf
sub
and
dec
sbb
sub
arpl
pop
std
mov
xchg
rcl
xchg
(bad)
fdiv
add
push
(bad)
or
xor
sub
pop
and
push
cmc
inc
scas
lods
dec
mov
nop
loopne
in
shl
mov
and
les
sbb
push
or
xchg
xchg
add
and
sar
inc
test
lds
jo
call
ds
sub
xor
(bad)
es
xor
call
repz
pop
xchg
repnz
cmp
aaa
es
shl
adc
xchg
sti
push
out
or
inc
retf
mov
retf
ss
inc
lods
out
mov
jmp
ret
jp
cmp
xchg
aas
out
fsub
dec
fld
inc
pop
sub
fwait
shl
scas
icebp
pop
mov
and
mov
jo
pop
dec
push
jp
ja
fstp
mov
outs
iret
imul
cld
sbb
not
hlt
add
pop
xor
mov
pop
mov
out
mov
dec
out
or
fimul
ins
out
jle
dec
mov
ins
shl
sti
dec
pushw
adc
ret
sar
loopne
and
cs
lock
push
adc
lahf
sbb
movs
mov
ret
or
out
mov
cmp
sbb
and
xchg
mov
dec
jg
loop
xor
aaa
and
rol
mov
int
in
loope
push
dec
ins
sbb
cli
sbb
lar
fild
mul
sbb
or
ret
cmc
xor
adc
pop
sub
outs
sub
xchg
(bad)
js
scas
jecxz
jno
stos
lahf
sub
dec
jno
jmp
mov
adc
pop
cmp
jo
jnp
in
mov
jmp
jbe
into
dec
in
add
sbb
push
inc
out
outs
enter
jmp
and
push
ja
stos
cmp
test
aas
movs
sbb
jbe
dec
jg
out
jmp
or
or
cmps
inc
inc
scas
lea
or
in
xchg
neg
sub
pusha
jb
push
jo
fldenv
or
xchg
or
sbb
push
jmp
or
lods
lods
cmp
xchg
mov
test
mov
xchg
retf
push
ins
mov
cmp
movs
sbb
pop
imul
dec
scas
leave
into
adc
and
mov
or
imul
and
iret
popf
mov
jno
out
push
or
mov
xchg
push
bound
push
xor
mov
inc
mov
sar
pushf
test
shr
add
into
mov
mov
or
shl
add
add
mov
sbb
mov
ret
(bad)
push
jnp
out
sbb
jae
test
jp
sub
test
nop
ss
mov
stos
les
cs
aaa
jmp
xchg
fs
push
and
add
in
jp
xrelease
mov
push
cs
lds
ret
mov
push
dec
addr16
mov
adc
jle
cmps
pop
xchg
adc
and
ret
inc
cwde
adc
xchg
dec
mov
clc
dec
mov
pop
adc
aad
cmps
js
pop
shl
pop
bnd
xchg
adc
inc
test
sbb
fdivr
add
xor
pop
mov
push
adc
neg
cmp
and
int3
stc
cs
pop
div
mov
ja
jne
add
cmp
adc
ins
(bad)
pop
jp
or
pop
lods
(bad)
jecxz
push
pop
test
mov
bound
xchg
aas
sbb
leave
push
mov
xor
xchg
mov
sbb
(bad)
adc
push
fst
scas
jmp
lods
push
cli
pop
les
xor
in
adc
das
push
xor
lods
imul
mov
mov
daa
sub
sbb
lds
sub
jl
jne
inc
dec
xchg
pop
aad
inc
sub
adc
fisubr
push
sbb
adc
push
mov
fisttp
dec
mov
lods
sub
dec
sbb
js
shr
div
mov
adc
(bad)
in
repnz
jbe
inc
jbe
push
mov
test
fmul
pop
sub
xlat
cwde
movs
push
ret
dec
movs
adc
test
mov
or
cmp
int3
out
push
cmp
nop
xor
or
pop
jmp
lock
dec
outs
cmc
stos
lods
and
movs
jmp
and
lea
(bad)
loopne
loopne
sub
add
or
sub
adc
shl
xor
das
movs
sub
and
call
adc
arpl
pop
mov
xor
rcl
test
pop
mov
inc
inc
add
mov
and
add
test
cld
mov
mov
sbb
int
cs
push
mov
jmp
push
xchg
xchg
sti
sub
xor
cdq
inc
dec
jmp
mov
sub
ins
in
fistp
inc
bound
adc
scas
jo
adc
ror
pusha
xchg
jecxz
das
jae
inc
nop
inc
mov
test
pop
pop
and
(bad)
or
fadd
jo
dec
mov
mov
or
xchg
aaa
ret
neg
aaa
inc
xor
sub
shl
mov
push
mov
cmp
cmp
xor
jns
jge
loope
push
jno
jne
sar
push
out
neg
scas
mov
xor
add
scas
or
xchg
int3
loope
dec
lahf
cs
mov
push
mov
mov
inc
pop
mov
push
ror
test
push
mov
jecxz
bound
pop
pop
fnstenv
add
sbb
mov
dec
pop
add
jns
js
pop
cmp
and
push
mov
imul
rcr
loope
outs
mov
xchg
adc
das
inc
cs
mov
pop
xchg
retf
cmp
pop
std
setno
dec
and
push
nop
lods
xchg
test
jecxz
cmp
jmp
clc
les
sub
in
xor
adc
sti
pop
shl
outs
mov
popf
ja
pop
repnz
(bad)
out
dec
je
xor
jle
loopne
imul
stc
lea
xor
or
xor
dec
pop
cmp
shr
in
pop
add
mov
add
fs
xchg
mov
mov
xchg
shl
mov
cdq
(bad)
ins
in
aas
rcl
jecxz
js
pop
mov
gs
xchg
jg
rol
jne
movs
xor
adc
js
push
mov
add
scas
mov
cmp
clc
xlat
repz
fwait
cmps
dec
or
jbe
aad
mov
sub
sar
lock
data16
cmc
inc
sub
and
sub
and
psubusw
sub
inc
out
sbb
cmc
popf
or
xchg
adc
push
cmps
into
cmp
pop
mov
or
fwait
clc
add
jmp
xor
sbb
jmp
test
outs
xchg
xor
cmp
sbb
or
stos
push
and
or
outs
sbb
test
ds
sbb
fnstcw
add
add
jb
inc
jecxz
xor
movs
xchg
int
xchg
aad
mov
rol
push
pushf
ins
and
dec
imul
sbb
pop
xchg
loopne
aam
pop
enter
xor
inc
jnp
adc
lea
and
adc
sbb
ficomp
sub
imul
ja
stos
fld
pusha
imul
cwde
inc
je
push
cwde
shr
fst
lahf
(bad)
enter
test
jo
nop
mov
sub
movs
fbld
pop
les
loopne
add
push
mov
mov
dec
sub
and
jecxz
lea
call
cdq
(bad)
retf
cmp
cmp
(bad)
sub
jae
jae
lea
test
mov
cmps
mov
mov
es
fimul
mov
aad
or
sub
dec
icebp
mov
xor
xor
or
sbb
or
lock
jb
xlat
xchg
repz
int3
test
sbb
add
xchg
jnp
push
pop
aam
mov
xor
movs
mov
ret
sub
out
outs
sub
fidiv
and
mov
mov
xor
aas
xchg
(bad)
call
mov
ins
or
repnz
cmps
icebp
mov
movs
loope
pop
cmp
jne
call
test
push
adc
scas
rcl
pop
int
sub
test
mov
or
push
sbb
stc
or
test
cs
adc
sbb
popa
outs
mov
mov
arpl
add
push
or
xor
or
js
jmp
sbb
pop
sub
stos
push
mov
ds
popf
sub
sub
sbb
sahf
jmp
jl
add
cmps
xor
movs
cdq
xor
stc
jg
and
jge
push
hlt
dec
loope
test
ins
movs
sbb
inc
inc
cwde
pop
adc
xchg
mov
sbb
jmp
cmp
repnz
nop
add
push
test
xlat
xchg
pop
cs
pop
cmp
call
addr16
aam
cdq
pop
push
in
add
outs
cld
lods
ret
mov
jecxz
xchg
xchg
dec
jmp
sbb
or
jnp
call
adc
push
dec
cmps
xchg
outs
and
and
fistp
dec
dec
call
rcl
loope
xor
push
adc
retf
mov
mov
int
sbb
xlat
(bad)
sub
not
mov
add
icebp
dec
in
in
scas
loopne
adc
mov
xor
mov
and
inc
dec
xchg
jae
mov
mov
(bad)
popf
scas
mov
hlt
mov
ret
xchg
fist
cmc
loopne
cli
out
sahf
test
cmp
inc
sub
pop
sbb
sti
mov
pusha
mov
imul
stc
mov
lds
pop
jmp
aas
loop
cmp
mov
mov
sahf
pusha
push
sbb
(bad)
shl
inc
fisttp
cli
mov
sar
sbb
aam
mov
sub
pop
xor
test
test
jmp
sbb
push
neg
push
or
outs
jo
mov
xlat
inc
pop
sub
push
cmps
inc
orps
push
inc
mov
fucomip
add
xor
leave
dec
add
int
(bad)
movs
popf
lods
aas
mov
add
test
push
fnstcw
pop
xchg
inc
dec
mov
adc
dec
jne
sbb
push
cmp
pop
mov
inc
jecxz
cli
imul
mov
(bad)
int
xchg
fdivr
mov
push
out
push
and
inc
jecxz
nop
movs
movs
mov
or
aad
pop
xor
retf
dec
xchg
mov
xchg
nop
pop
push
fwait
cli
xchg
out
xchg
push
or
cli
mov
jl
jl
enter
(bad)
arpl
sbb
je
neg
sub
test
js
dec
sbb
(bad)
xchg
movs
popf
sbb
jge
jle
sbb
rcl
cli
loop
gs
repnz
fisubr
cmp
jge
xchg
cli
out
and
mov
xor
cli
leave
in
into
imul
rcr
inc
add
aad
cld
sub
push
pop
xor
push
cwde
outs
sub
adc
inc
dec
ja
shr
xchg
cmp
add
fnstcw
loope
push
sbb
ja
dec
paddusw
fcom
mov
pop
movs
shl
jmp
cmp
in
mov
popa
(bad)
out
rol
repnz
fstp
inc
je
icebp
outs
sti
pop
test
add
jecxz
std
mov
ins
ja
add
sbb
loopne
cmp
xchg
pop
iret
ja
fild
int
test
sub
inc
out
cmc
xor
pop
inc
cdq
xchg
(bad)
lods
push
inc
or
cli
jl
mov
ins
(bad)
and
mov
in
in
fisubr
movzx
jp
add
fcomp
enter
dec
push
mov
in
call
bound
xor
rcl
ja
std
imul
sbb
mov
jl
inc
mov
xchg
sahf
sbb
xor
adc
fld
js
and
js
rol
mov
sbb
jbe
xchg
test
popa
scas
cmps
xchg
jg
(bad)
sub
push
lods
in
ror
nop
jl
and
or
mov
in
out
retw
popf
pushf
lahf
ds
inc
or
retf
and
rcl
out
jmp
test
jl
sub
mov
in
fisub
mov
(bad)
pop
stc
lods
je
pop
pop
fistp
push
xchg
xor
aad
stc
nop
jae
mov
jbe
mov
neg
pusha
or
stos
loop
xchg
xor
rcr
leave
dec
sub
mov
dec
add
popa
mov
ins
test
sahf
cmp
sub
adc
int3
xchg
retf
xor
popf
shl
or
nop
in
mov
enter
mov
shl
(bad)
cld
inc
retf
scas
pop
mov
not
std
push
push
mov
pop
xlat
jb
test
ins
nop
sub
or
test
jecxz
aaa
imul
pop
int
inc
loop
cmps
and
(bad)
or
xor
lds
aaa
and
and
sahf
xchg
mov
loopne
lds
cmps
aas
dec
out
mov
jg
pop
loopne
sar
cmc
or
arpl
add
xchg
pop
inc
xchg
stc
jle
(bad)
call
aam
mov
out
lods
int3
pop
popa
aas
nop
aam
out
xor
jp
gs
icebp
out
in
push
pop
adc
scas
xor
ret
sbb
in
scas
dec
fnsave
ins
jmp
sbb
and
inc
retf
inc
rol
aaa
pushf
movs
adc
mov
mov
jb
mov
xchg
shl
ret
xchg
(bad)
pop
mov
pop
push
aaa
add
xor
nop
add
pop
neg
test
neg
jno
(bad)
fstp
inc
xor
in
jo
and
lock
xchg
xor
pop
cmc
mov
push
push
xor
imul
pop
out
ret
bound
or
xchg
xor
lds
adc
jmp
add
pop
mov
aad
icebp
(bad)
(bad)
xchg
inc
fld
mov
sbb
mov
aad
out
jl
xor
jb
mov
mov
pushf
fadd
cmp
mov
jg
std
psubb
pop
inc
enter
ins
pop
imul
and
stc
outs
xchg
sahf
movs
xor
retf
xor
ficom
jle
xor
rcr
les
inc
out
sub
mov
dec
in
pushf
cmp
rcr
imul
test
ins
push
pop
hlt
std
mov
in
xor
psllw
retf
xchg
mov
test
jnp
sahf
mov
xchg
push
neg
sbb
stc
mov
pop
push
dec
xor
xchg
inc
popa
jbe
mov
sbb
loopne
mov
inc
mov
inc
leave
icebp
inc
in
out
test
imul
repnz
imul
data16
xor
rcl
ins
retf
(bad)
out
test
imul
out
mov
mov
dec
out
cmc
cmp
xchg
pop
stos
jo
mov
or
rcr
add
and
add
xchg
and
jle
(bad)
cs
dec
(bad)
or
fisttp
adc
cmps
push
popa
lods
jnp
pop
dec
pop
mov
in
ins
xor
rcr
or
or
dec
outs
loope
dec
jno
ja
sbb
dec
mov
adc
mov
lods
xchg
icebp
xchg
sahf
mov
jns
adc
cmp
data16
jg
into
pop
sub
(bad)
mov
scas
ficomp
dec
out
dec
cmp
jno
movs
enter
xchg
int
mov
push
mov
push
jmp
hlt
lahf
sahf
lock
test
mov
out
jns
xchg
jp
mov
mov
adc
xor
jno
lds
test
jo
pop
test
cs
and
les
cwde
xchg
(bad)
mov
fs
xlat
mov
cmp
sahf
sbb
add
or
ins
aaa
popa
das
lods
in
inc
icebp
mov
inc
pop
out
arpl
outs
adc
mov
(bad)
mov
mov
je
sbb
repnz
pop
push
inc
out
pop
mov
std
xor
lock
pop
add
scas
mov
sbb
cmc
pop
sub
jno
aas
jmp
mov
push
xlat
pop
or
jb
add
loope
mov
lock
inc
stos
pop
dec
mov
rol
inc
not
pop
int3
push
dec
stc
sbb
mov
mov
jne
lods
repz
stos
fdivr
xor
ins
mov
mov
es
dec
push
das
mov
shr
push
(bad)
and
mov
and
ins
outs
out
and
cwde
out
or
jnp
fdiv
sub
mov
adc
(bad)
in
or
ja
fsub
xchg
vmread
lea
mov
js
jbe
push
movs
mov
aas
ins
in
xchg
dec
ret
adc
mul
inc
dec
bound
xor
arpl
lods
or
and
test
mov
je
out
and
jae
loopne
xor
pop
lds
push
xor
jne
out
mov
jo
bound
fwait
jne
jne
sbb
pop
dec
call
inc
lods
add
jo
lods
ja
outs
mov
mov
sti
pusha
sti
movs
mov
outs
(bad)
aaa
push
je
in
add
add
sub
bnd
imul
pushf
js
pop
out
mov
adc
pop
loop
inc
rol
pop
pop
push
mov
pop
pop
cmc
cdq
(bad)
jp
inc
xchg
xor
enter
mov
shl
ret
lods
push
loopne
data16
test
ds
mov
push
(bad)
push
mov
push
bound
push
sbb
pop
in
ret
sub
pop
test
inc
test
cmps
cmp
in
movs
sub
jmp
push
and
and
mov
cmp
or
mov
je
mov
xor
mov
jo
push
and
test
xor
mov
pop
sub
cli
mov
inc
sbb
test
sub
sbb
inc
nop
mov
loope
mov
jmp
stos
popa
dec
fsubr
xchg
jecxz
add
add
mov
adc
inc
cli
cmps
sub
dec
call
sbb
fldcw
mov
mov
push
fld
cmp
add
and
pop
push
test
mov
or
mul
xchg
call
xchg
in
mov
or
pop
mov
stos
dec
push
push
push
pop
cdq
or
and
mov
add
aad
push
inc
adc
test
test
stos
mov
fld
push
(bad)
fisttp
retf
mov
fadd
xor
movs
add
jg
inc
scas
mov
mov
and
push
sbb
pop
stc
push
bound
sahf
fist
retf
sub
mov
mov
call
addr16
shl
call
stos
test
iret
push
or
mov
scas
mov
mov
cmps
jne
and
fstp
add
lods
bound
adc
pop
inc
cmps
mov
pop
cmp
out
sub
jg
test
xor
mov
mov
inc
pop
sub
lods
vcvtsd2si
or
and
loop
out
clc
popf
mov
mov
addr16
mov
frstor
or
fimul
sub
dec
dec
dec
inc
int3
sti
push
sub
fidiv
pusha
enter
jg
sub
mov
pop
mov
inc
xor
ret
mov
push
movs
test
pop
push
repz
sbb
push
add
mov
(bad)
sub
push
add
inc
xchg
xlat
cmp
cdq
sbb
jl
add
out
cwde
mov
dec
rcr
or
mov
xchg
arpl
dec
xor
cmps
jo
mov
jge
fidivr
fnsave
cld
in
or
js
mov
es
fs
hlt
(bad)
int
inc
call
mov
mov
or
jnp
shl
pop
js
leave
int
xor
jo
jmp
jp
das
mov
in
mov
push
sbb
pop
aad
stos
xchg
xchg
sti
inc
hlt
mov
retf
out
cmps
int3
fsub
dec
out
leave
inc
(bad)
in
xchg
or
imul
mov
jmp
sbb
pop
xor
or
repz
sub
and
inc
cs
add
scas
imul
fwait
ja
cmps
sub
dec
pusha
out
mul
jl
cmps
mov
push
cmp
test
jle
out
and
popa
mov
out
inc
xchg
mov
mov
(bad)
ror
xor
inc
sbb
nop
or
xor
fmul
cdq
cmp
add
sub
mov
rol
call
pushf
xor
scas
add
out
fs
sti
test
add
mov
sbb
in
hlt
sbb
mov
push
cmp
cmovbe
inc
enter
cmp
dec
sti
inc
push
mov
(bad)
inc
cmp
sub
mov
jmp
popa
mov
hlt
push
xchg
xchg
test
stos
mov
mov
pop
mov
jmp
retf
add
and
cmp
or
int
push
gs
fstp
xor
sti
and
cmps
sbb
ds
xor
xor
inc
imul
(bad)
clc
fsubr
(bad)
mov
cs
xchg
mov
lods
adc
shl
or
in
sahf
xor
hlt
and
leave
xor
push
or
jmp
inc
into
not
xlat
jmp
in
mov
mov
popa
cmp
movs
fist
aas
sbb
cmps
clc
mov
test
jmp
shl
lods
scas
and
jle
test
hlt
xor
mov
pushf
xor
cmp
nop
in
and
(bad)
fidiv
xchg
mov
cwde
movs
push
pop
and
pusha
dec
xchg
xchg
pop
xchg
adc
sbb
add
mov
push
outs
sub
xor
push
add
mov
lea
and
push
aaa
add
xor
aam
xor
fwait
in
jg
xchg
mov
mov
aaa
or
push
cmp
lahf
(bad)
aad
jmp
cmp
push
push
xchg
stos
comiss
popa
sub
mov
add
push
xor
shl
pop
xchg
daa
push
mov
sar
and
mov
mov
sub
add
sub
pop
stc
mov
pop
scas
test
nop
(bad)
jno
pop
lea
xchg
or
xor
push
imul
int
pusha
test
pop
push
mov
mov
jle
jae
push
lock
mov
jecxz
repnz
in
mov
sti
int3
fldenv
xchg
and
mov
jo
sbb
(bad)
dec
hlt
test
jle
popa
loopne
xchg
js
(bad)
fs
stc
ror
int
fs
ss
lock
out
rcr
add
ss
aaa
inc
cmp
shr
xchg
dec
call
jne
ins
call
push
repz
gs
or
jb
clc
or
adc
(bad)
stc
fldenv
push
fisub
xlat
stos
mov
sar
pop
int3
lds
fs
push
jge
add
fwait
dec
cdq
test
(bad)
ins
cmps
in
xchg
xor
mov
outs
jg
neg
repz
lds
cwde
dec
mov
(bad)
push
stc
sub
sbb
mov
xchg
pop
out
sbb
cmp
ss
call
or
cs
cmps
fwait
inc
mov
inc
cmp
nop
and
test
and
jae
in
sbb
stos
mov
inc
jnp
lea
jecxz
inc
cs
sub
imul
xor
jp
sbb
jno
out
push
fistp
mov
push
stos
jno
inc
mov
mov
inc
ret
clc
and
pop
add
ret
sub
enter
fmul
push
mov
mov
sbb
jle
inc
xor
mov
addr16
rol
jmp
xor
gs
jp
add
mov
outs
lds
sbb
push
(bad)
or
mov
sub
sti
jecxz
mov
test
leave
jge
(bad)
dec
call
jbe
dec
ss
dec
(bad)
gs
or
sahf
hlt
cmp
pop
ret
add
inc
ja
push
mov
adc
es
in
jnp
push
nop
pop
adc
sbb
xchg
test
and
cmp
imul
sbb
shl
and
xchg
movs
sti
dec
or
jns
gs
imul
outs
(bad)
dec
mov
mov
in
mov
mov
sub
outs
adc
inc
in
jb
jmp
push
aas
cld
fistp
idiv
cmc
inc
fcomp
jle
jecxz
push
int
push
xor
xchg
sbb
sub
nop
pop
in
mov
jae
ret
pop
test
xlat
sbb
cmp
push
jnp
(bad)
or
arpl
sub
push
dec
stc
pop
icebp
and
pop
add
xchg
inc
mov
pop
pop
pop
adc
push
xchg
pop
lea
lods
retf
fild
(bad)
mov
jae
mov
cmps
pusha
mov
mov
jne
(bad)
daa
push
push
scas
mov
ds
aas
sbb
sbb
fnstenv
(bad)
jo
sbb
mov
lds
movs
pushf
addr16
cmp
xor
adc
cmp
out
ja
stos
jne
pop
mov
inc
fs
fidivr
scas
pop
cdq
pop
addr16
cdq
mul
jg
cmp
pop
(bad)
xchg
shr
fxch
sub
rcl
ficom
sub
cmp
push
shl
add
scas
iret
push
mov
and
mov
enter
popf
and
rcl
adc
out
jnp
jmp
push
mov
push
mov
ffree
cli
ja
aad
je
cmp
retf
xchg
xchg
xchg
in
scas
ins
pop
aas
loop
mov
mov
jne
addr16
mov
jge
dec
cmp
add
pop
cwde
and
adc
cmp
out
pop
cmp
retf
sub
fsubrp
mov
or
inc
mov
repnz
mov
inc
in
nop
mov
in
sbb
jbe
nop
mov
data16
rcl
push
add
mov
pop
jl
push
outs
and
xchg
mov
jmp
adc
pusha
adc
rol
adc
cmp
cmps
sahf
sub
pushf
jecxz
scas
retf
in
stc
jle
and
in
sbb
out
xchg
arpl
jecxz
enter
mov
call
ins
add
xor
scas
leave
sbb
push
pop
add
dec
leave
movs
adc
mov
and
call
dec
jbe
std
aad
push
or
std
in
sub
(bad)
retf
int
and
scas
sub
fs
das
and
pop
jecxz
jne
rcl
fs
fmul
mov
pop
cld
ret
fdiv
mov
les
cmps
sub
pop
mov
pop
push
inc
sub
add
pop
icebp
(bad)
out
pop
adc
ss
push
shr
outs
pop
xchg
out
dec
push
dec
outs
sbb
sub
jg
les
push
(bad)
mov
test
retf
dec
sub
dec
les
out
test
out
mov
test
or
iret
jl
xchg
push
xchg
cdq
arpl
mov
jb
dec
jnp
fbstp
rcl
ss
ss
xor
call
and
jecxz
outs
cwde
push
lahf
add
jg
xchg
cmp
rol
aaa
or
jp
mov
imul
xchg
and
lds
pop
jl
fdivr
fs
add
int3
adc
xchg
retf
jb
mov
dec
mov
mov
sar
pop
sub
enter
xchg
jl
aaa
test
rcr
mov
or
cmp
jns
js
inc
or
xor
mov
mov
sub
fnstsw
xchg
cmp
cmp
add
cmp
pop
mov
and
inc
xor
fimul
sbb
cmp
shr
popf
xchg
(bad)
jae
js
(bad)
mov
repnz
xchg
push
mov
jle
xchg
int
jmp
sbb
sub
pop
xchg
add
adc
pushf
lods
pop
adc
pop
bound
mov
movs
mov
or
fisub
push
icebp
div
push
pop
fbld
dec
mov
cs
xchg
ror
adc
and
shr
dec
ins
stos
leave
xchg
dec
pop
sbb
stc
nop
jne
ss
clc
ins
(bad)
or
mov
sbb
push
int
and
jnp
stos
cmp
dec
jbe
pop
hlt
xor
sbb
dec
push
call
add
pop
mov
push
cmp
mov
iret
jge
mov
call
inc
or
popf
gs
les
push
xor
sbb
sbb
cmp
ficom
xchg
mov
add
add
out
sub
(bad)
mov
inc
mov
stos
jecxz
sub
dec
ja
test
fcmovnbe
std
add
push
or
pop
mov
ds
mov
xchg
adc
mov
retf
inc
cs
mov
xor
sbb
call
fsub
push
pop
sahf
mov
xor
mov
lods
fstp
mov
fs
jg
fsub
jae
mov
mov
sub
mov
mov
sub
xchg
pop
cmp
(bad)
mov
push
xor
pushf
loope
sahf
retf
and
pop
test
or
loopne
sahf
xor
pop
add
je
mov
and
outs
mov
jnp
out
pop
and
mov
mov
mov
ins
cmp
int3
cmps
fidiv
mov
pop
jo
sar
pop
in
push
fnstenv
frstor
xchg
cmp
sbb
shl
clc
inc
jo
jecxz
inc
cmp
adc
in
jmp
mov
mov
test
lods
das
mov
into
mov
out
add
les
jb
(bad)
je
adc
mov
xor
mov
retf
inc
sbb
add
pop
int
push
dec
adc
mov
icebp
and
dec
push
test
and
jp
out
cld
xchg
fiadd
inc
pop
out
lods
repnz
iret
mov
fld
cwde
outs
xor
sub
pushf
mov
mov
jns
je
cmp
push
stos
sub
(bad)
mov
aaa
cmps
jno
rcr
sahf
sbb
jbe
idiv
stc
pop
add
std
in
pop
imul
xchg
xchg
jle
fld
inc
fwait
lock
inc
and
push
outs
jno
jb
and
movs
inc
jns
xchg
cdq
pop
neg
retf
mov
pop
xlat
add
idiv
and
push
mov
push
jb
mov
imul
inc
call
out
or
stos
xor
or
sar
ins
js
fst
mov
pop
inc
dec
push
scas
call
jo
ja
sahf
repz
push
mov
into
cmp
aad
shl
add
mov
out
in
inc
(bad)
stc
out
lods
mov
adc
push
add
pop
in
dec
push
aad
test
adc
jecxz
cmp
cmp
mov
cli
popa
push
in
aaa
mov
jo
xor
dec
pop
pop
mov
mov
mov
out
dec
imul
sar
ds
xor
inc
inc
mov
inc
and
mov
mov
jmp
(bad)
mov
ins
push
loope
jg
das
pop
shl
jns
xor
sbb
imul
pop
mov
test
cmps
mov
icebp
movs
pop
(bad)
hlt
syscall
cld
push
xchg
push
lahf
mov
mov
mov
ret
or
(bad)
(bad)
std
std
dec
stos
cli
cmp
nop
pop
cmp
pusha
repz
imul
push
xchg
int3
es
ss
pop
cli
and
dec
outs
cmp
dec
mov
xchg
ffreep
aad
xchg
or
ins
xchg
pusha
pop
push
sbb
jb
xor
add
fcom
cmovge
pop
adc
mov
je
sbb
gs
jnp
shl
add
sub
pop
push
aas
dec
in
sbb
jbe
xor
daa
ror
push
jge
jle
lock
push
outs
into
sbb
jns
outs
cs
jnp
(bad)
cwde
sti
ins
gs
mov
jnp
mov
cmp
(bad)
adc
dec
das
jl
mov
stos
xor
pusha
imul
cmps
ret
out
out
out
jb
out
pop
int3
and
fnstenv
cmp
inc
lods
dec
stc
xchg
pop
push
mov
fld
jbe
call
add
shl
cmp
mov
lods
lods
xor
bound
lods
rcl
jae
add
ret
ins
imul
int3
inc
retf
xchg
cmp
pop
pop
jecxz
jle
pop
dec
int
inc
jmp
xchg
xor
xor
pop
dec
(bad)
fisttp
inc
cmp
call
sbb
xchg
mov
lds
aad
mov
fiadd
rol
je
mov
add
push
adc
int
rcr
lods
jne
inc
push
outs
fimul
cmp
pop
int3
test
mov
fidiv
push
or
fs
xor
retf
mov
add
xchg
(bad)
rol
or
mov
call
pop
add
push
sti
or
(bad)
inc
dec
mov
ret
mov
inc
enter
mov
pop
ror
inc
add
lock
push
mov
xchg
pushf
mov
xchg
retf
cli
mov
loop
out
cld
frstor
inc
push
or
dec
dec
jno
aam
cs
arpl
mov
gs
ins
xchg
hlt
cmp
sub
mov
push
adc
jb
add
lea
ret
xchg
outs
cmp
mov
std
mov
cmp
pusha
(bad)
test
push
push
mov
lea
and
add
into
mov
es
cdq
bswap
mov
xor
dec
ins
fcom
(bad)
std
imul
mov
enter
sbb
pop
pusha
pop
mov
repnz
push
pushf
adc
push
mov
test
jmp
jl
inc
loope
mov
cld
stos
inc
(bad)
fwait
adc
call
and
mov
aad
or
int3
mov
xchg
jb
inc
lods
imul
dec
ins
cmp
xchg
and
popf
stc
pop
mov
or
rcl
sar
lods
jl
push
sub
pop
mov
dec
aaa
pop
movs
gs
pop
mov
int3
pop
test
ja
imul
push
lahf
jp
push
mov
inc
cmps
and
xchg
loope
pop
add
nop
ret
sti
fwait
retf
pop
mov
das
stos
xadd
fisubr
jne
jle
retf
sbb
pop
adc
pop
xchg
lock
icebp
jae
shl
inc
fwait
jbe
jg
dec
push
xor
hlt
mov
sub
mov
xchg
cwde
cmps
fst
xchg
or
inc
lds
inc
sub
(bad)
ds
mov
bound
out
scas
stos
cmps
xchg
push
mov
enter
out
mov
sub
test
arpl
mov
cmp
mov
push
mov
out
xchg
retf
clc
dec
xlat
pushf
mov
mov
xchg
xor
cmp
lds
mov
in
mov
push
lods
mov
cmps
out
fwait
shl
push
in
mov
dec
add
sti
sahf
xor
mov
pop
xchg
retw
movs
and
call
jg
loop
cmp
mov
push
idiv
loopne
xchg
xor
out
cmp
shr
and
lds
clc
pushf
add
push
adc
adc
jb
or
cmc
in
stc
mov
and
cwde
push
test
adc
ror
add
and
push
clc
out
adc
ja
push
jno
in
(bad)
fcomi
add
dec
call
ret
arpl
jl
and
xchg
hlt
mov
int3
jmp
lock
enter
dec
aas
push
xchg
out
adc
loope
mov
lods
test
test
bound
rcr
in
stos
ss
mov
sbb
lea
mov
cmc
sbb
mov
dec
pusha
in
pop
loopne
jns
(bad)
mov
out
imul
jns
jle
mov
xchg
adc
pop
pop
nop
add
outs
add
pop
dec
icebp
mov
out
pop
dec
gs
mov
xor
inc
sbb
(bad)
cld
imul
test
push
cli
movs
jmp
test
mov
mov
outs
jo
jmp
movs
retf
ja
jbe
arpl
cmp
stos
js
rcr
dec
aam
and
xchg
xor
or
xchg
cmp
push
adc
sub
outs
out
int
fdiv
adc
jmp
sbb
imul
arpl
jg
mov
sbb
test
lds
xchg
adc
call
popa
mov
les
and
adc
inc
xchg
clc
cmc
test
dec
aad
sahf
hlt
xor
mov
mov
inc
and
adc
fucomi
pop
xchg
std
fs
clc
adc
call
hlt
icebp
in
jno
inc
icebp
mov
enter
or
cmps
add
inc
shl
inc
jb
jae
push
add
int
pop
iret
mov
fstp
sbb
add
in
sub
cs
sar
jbe
loope
pushf
xor
jecxz
and
in
sub
jb
dec
pusha
fnstsw
stos
sahf
mov
push
xor
push
or
inc
sub
push
push
xor
fisub
jns
fidiv
xchg
leave
adc
lds
out
int
or
nop
leave
adc
fsub
aaa
pushf
iret
mov
cmp
imul
in
inc
adc
movs
inc
neg
jb
sti
clc
in
(bad)
hlt
or
mov
jno
out
cmp
sbb
cli
lods
jo
dec
cmp
push
int3
fwait
inc
cmp
loopne
fldcw
stos
aam
neg
lods
bound
out
stc
push
stc
jmp
jl
shr
cmp
xor
sub
hlt
(bad)
jmp
retf
mov
mov
pop
sbb
jmp
inc
xor
dec
fs
jo
pop
mov
inc
push
jae
nop
dec
xchg
aam
cdq
push
push
jle
ss
dec
push
jno
leave
sbb
fdivrp
mov
xchg
cmp
add
enter
inc
aaa
mov
fstp
outs
jp
inc
ret
int3
mov
push
add
and
rcr
fisub
sub
sbb
stos
or
cmc
ins
iret
gs
imul
and
movs
cld
mov
cdq
stc
cs
ja
dec
lods
sub
sub
add
nop
sub
aam
push
or
retf
(bad)
aad
push
jmp
sbb
pop
mov
popf
fisub
rcl
jae
sub
aas
cmps
repnz
pop
(bad)
enter
ds
aad
cmp
push
scas
addr16
fdivr
jl
movs
xchg
xchg
lods
inc
popf
xor
jmp
xchg
jae
fs
add
cdq
ja
loop
push
stos
sub
outs
fstp
lahf
inc
add
inc
xchg
jne
jnp
push
cwde
xor
shl
push
mov
lods
pop
adc
push
dec
xchg
pushf
test
pop
sbb
jl
sub
in
push
shl
dec
pushf
jo
or
adc
arpl
out
sar
xchg
mov
mov
dec
pop
ja
fwait
mov
out
xchg
mov
int
xlat
int3
loope
push
aam
xlat
int
(bad)
lods
mov
adc
or
dec
js
js
pop
ds
mov
mov
loope
mov
sahf
call
mov
sbb
pop
les
sub
in
loopne
sbb
fnsave
pop
dec
fwait
cmp
mov
test
lods
movs
rol
ret
icebp
or
sbb
jmp
xchg
(bad)
mov
adc
mov
mov
repz
mov
dec
sub
pop
xchg
sqrtps
ror
icebp
leave
or
ja
adc
mov
push
and
push
mov
and
sub
into
pop
inc
xor
mov
push
pushf
in
shl
mov
push
retf
add
cmp
dec
cmps
jmp
or
shr
popf
mov
push
or
out
imul
nop
adc
cmps
inc
add
push
(bad)
jle
mov
test
or
test
mov
ret
(bad)
jp
xchg
rcr
fidivr
test
mov
or
in
stos
mov
call
pop
xchg
loopne
jo
dec
jmp
clc
add
inc
adc
and
pop
(bad)
push
inc
aaa
pop
mov
into
(bad)
xor
mov
ret
push
mov
repnz
loopne
sbb
add
sub
loop
ds
jno
mov
xchg
sub
fs
out
cld
mov
dec
loop
fst
(bad)
in
mov
xor
mov
sbb
neg
add
adc
mov
inc
stc
(bad)
fxch
and
inc
sub
mov
dec
arpl
inc
xchg
(bad)
xor
push
jns
xchg
dec
xor
add
fldenv
mov
jns
clc
add
sahf
movs
dec
not
add
fcos
not
cmp
stos
xor
outs
and
sti
dec
cmp
test
sbb
cmps
push
xchg
add
movs
addr16
fmulp
inc
or
mov
xor
mov
ror
push
xor
ret
ficomp
or
pop
inc
std
push
lods
cs
dec
jmp
out
and
sub
push
jmp
jno
and
imul
xor
jae
inc
mov
push
and
or
sub
and
stc
in
shl
in
cmp
xlat
(bad)
push
mov
cmc
jmp
xchg
or
push
int3
push
add
inc
ret
mov
jmp
xchg
out
ss
and
cmp
test
dec
int3
int3
outs
(bad)
lds
cld
adc
into
in
mov
mov
mov
dec
dec
cli
fld
stc
lock
gs
push
and
scas
in
call
retf
lea
sbb
mov
push
xchg
pop
push
ret
cmp
sbb
mov
xor
jns
fisttp
inc
hlt
nop
cmp
fisub
sub
ja
stos
mov
lock
jmp
clc
scas
clc
ja
add
ficomp
cli
dec
call
mov
fimul
push
mov
xor
push
cmp
xlat
adc
jne
lods
sahf
jbe
mov
pop
ins
ret
xchg
nop
push
sti
dec
leave
in
(bad)
dec
inc
jb
popf
push
jb
sbb
leave
pop
dec
jecxz
sbb
cmp
inc
daa
in
adc
scas
pushf
or
aaa
add
fdiv
loope
inc
stos
fwait
push
outs
lods
sbb
xchg
mov
mov
(bad)
repz
sub
push
bound
mov
cmps
xor
mov
mov
push
push
js
sbb
cs
pop
add
adc
in
pop
push
(bad)
ins
in
push
scas
cmp
and
adc
xchg
test
enter
push
inc
mov
(bad)
das
sbb
jbe
loop
iret
aad
sbb
std
or
dec
js
pop
sbb
xchg
or
inc
xchg
test
cli
int3
mov
mov
xchg
jbe
outs
cmc
pop
call
xor
jmp
sbb
dec
in
jmp
shl
int3
out
push
dec
xor
call
or
sti
or
(bad)
dec
(bad)
call
mov
ins
sbb
outs
aad
enter
adc
inc
aaa
imul
mov
mov
retf
xor
or
bound
mov
or
push
sbb
push
dec
sub
ffreep
pusha
mov
push
out
cmp
pop
ret
push
lods
shl
mov
rcl
pop
mov
xchg
popf
xchg
mov
mov
push
icebp
mov
rcl
rol
movs
xor
out
icebp
sbb
rol
out
inc
push
test
pusha
(bad)
sub
pop
dec
out
mov
pop
jo
call
fwait
rcl
cmp
add
mov
xor
sub
loopne
xor
pop
mov
jecxz
lds
in
and
movs
fs
scas
(bad)
pop
or
cwde
push
(bad)
xchg
sub
push
adc
add
add
adc
xchg
aad
cmp
ins
or
outs
stc
cdq
jo
ret
dec
or
cmp
test
add
push
lock
jmp
xor
adc
xchg
popa
mov
aaa
call
jne
fcomip
test
stc
push
xor
in
cmc
add
pop
out
adc
lds
std
xchg
retf
fistp
shl
out
adc
aas
jae
xchg
lds
aas
jb
inc
mov
in
inc
cs
adc
inc
imul
sub
cli
adc
int
cwde
xchg
dec
sub
mov
jl
retf
push
ss
outs
xchg
hlt
jmp
push
mov
inc
sbb
hlt
add
xchg
inc
xchg
or
jl
xor
xor
popa
(bad)
pusha
nop
jmp
leave
dec
xchg
arpl
cs
aaa
cwde
xchg
out
push
out
or
out
or
mov
outs
sub
cli
pop
cmp
pop
test
popf
fs
(bad)
popf
adc
shl
das
xor
mov
dec
rcr
pop
sbb
jno
push
in
adc
mov
call
sahf
aad
je
jo
mov
call
and
mov
dec
loopne
mov
dec
sbb
in
sbb
test
jo
gs
add
dec
mov
add
not
lahf
fidivr
stc
(bad)
mov
mov
adc
icebp
push
ss
out
scas
inc
sbb
cmps
pop
mov
push
push
stos
sub
fs
sub
xor
dec
sahf
pop
fucomip
jecxz
fistp
or
push
push
leave
add
inc
xlat
rcr
and
jae
mov
out
pop
adc
xor
cmp
add
icebp
xchg
fld
retf
jb
pop
or
and
aam
push
sub
lods
or
xchg
pop
adc
mov
sub
in
rol
pop
inc
push
push
mov
sub
imul
pop
(bad)
gs
icebp
xchg
mov
sub
add
jl
not
jge
mov
outs
adc
jne
push
fidivr
or
xor
pop
jns
ret
cmp
pop
add
data16
cmp
xchg
inc
pop
adc
adc
fsubp
mov
les
icebp
js
fcmove
or
sahf
test
sub
fstp
mov
xchg
jmp
sbb
adc
mov
cwde
jge
(bad)
repnz
pop
in
popa
add
or
retf
outs
pop
stc
push
jnp
cmp
leave
push
sub
iret
test
or
pop
out
aas
icebp
dec
imul
pop
(bad)
sbb
sbb
cmp
pushf
loopne
stc
jnp
xor
mov
stc
je
dec
xchg
call
inc
int3
sti
(bad)
aam
test
test
(bad)
mov
mov
inc
jge
xor
das
retf
mov
out
push
pop
sbb
pop
cmps
packsswb
jb
leave
les
inc
loope
stos
pop
inc
loop
repz
test
call
cmp
dec
lahf
jp
call
mov
imul
rol
xor
mov
inc
mov
pop
(bad)
push
es
stos
sbb
loopne
mov
movs
js
sbb
jmp
inc
pushf
dec
xchg
movs
pop
jle
js
pop
push
mov
fisubr
imul
inc
dec
xlat
dec
inc
adc
in
retf
sub
test
push
pusha
cmp
inc
scas
pop
retf
mov
and
jl
jbe
fimul
jmp
sub
lahf
xchg
mov
cmps
jge
movs
sub
cmp
inc
sub
and
leave
mov
outs
jae
out
neg
jno
sahf
dec
pop
popf
inc
enter
(bad)
mov
vmovsd
imul
add
sub
add
pop
je
xlat
mov
cli
(bad)
movs
imul
or
fiadd
dec
sbb
pop
je
shl
push
push
add
das
(bad)
popf
(bad)
retf
xor
movs
and
(bad)
std
inc
add
inc
xor
fiadd
jmp
mov
mov
sub
jmp
fwait
mov
js
adc
nop
xor
outs
aam
test
pop
dec
stos
xchg
sub
sbb
cmp
daa
mov
mov
(bad)
lahf
sbb
movs
sub
push
aaa
in
jno
mov
clc
jmp
lds
test
jno
jg
push
into
test
xor
aad
adc
mov
xchg
pop
pop
jbe
(bad)
stos
mov
loopne
pop
call
xlat
mov
or
jg
add
push
mov
mov
out
add
inc
xchg
daa
ret
outs
iret
xchg
mov
mov
xor
call
and
push
jmp
ret
lods
pop
into
and
xor
add
cs
push
in
js
xchg
mov
add
fmul
outs
sar
gs
lea
pop
mov
mov
pop
push
sub
in
mov
data16
xlat
jns
test
(bad)
hlt
sbb
shr
sar
jo
dec
fmul
mov
out
mov
inc
sti
fs
faddp
jb
gs
cmp
pop
fisttp
jp
jo
fsubr
add
popa
imul
cmp
movs
sbb
push
xchg
add
aad
pushf
cmp
xor
pusha
fchs
cld
pop
xlat
pop
mov
xlat
inc
push
adc
mov
adc
or
adc
jp
mov
mov
xlat
mov
jmp
loop
fisub
push
sbb
imul
dec
add
scas
les
aam
stc
cmp
jae
rcl
repz
call
loope
imul
sub
bound
sub
sub
(bad)
fcmove
ins
stos
stos
pusha
and
js
jle
ins
and
std
cmps
aam
aam
enter
cmp
pop
add
mov
add
sahf
lods
cwde
jnp
or
ins
add
push
add
pop
mov
jno
inc
jbe
cmp
out
sub
enter
stc
mov
sbb
fdiv
lds
nop
fs
cmp
push
sti
or
xor
jmp
add
jmp
dec
sbb
inc
sbb
sbb
popf
xchg
jns
cmc
push
rol
aas
pop
test
movs
pop
ins
mov
push
cmp
xor
pop
ror
push
and
in
jecxz
add
pusha
xor
loope
xchg
mov
jb
mov
mov
(bad)
in
mov
imul
cmps
jne
pop
test
loop
fsubr
jl
add
cmp
inc
rcr
or
inc
cmp
sbb
stos
(bad)
mov
dec
sbb
je
inc
jle
jns
mov
jmp
inc
cmp
push
out
fisttp
jle
repnz
test
mov
stos
sub
test
adc
jmp
dec
ret
inc
jmp
std
push
mov
outs
test
adc
jne
fisubr
lds
dec
xlat
adc
pop
mov
dec
sahf
push
pop
push
loop
inc
pop
mov
(bad)
int
les
in
cmp
sbb
cmp
dec
ficomp
test
(bad)
mov
imul
jnp
mov
cmp
out
jno
xor
clc
enter
fnstenv
add
in
or
inc
mov
in
mov
shl
inc
(bad)
movs
jp
imul
inc
xchg
push
es
lds
adc
and
cli
mov
repz
ins
xor
sbb
sbb
scas
out
adc
mov
daa
pop
psrad
mov
sub
aaa
adc
dec
mov
jg
dec
push
pop
cmps
in
lea
sbb
or
not
push
jge
push
xor
mov
pop
scas
dec
and
pop
mov
cld
push
inc
dec
aaa
scas
sbb
fcomip
and
fwait
rcr
pop
jns
xchg
loopne
in
div
(bad)
movs
cmp
(bad)
xlat
ret
sub
xchg
test
pop
pushw
jg
movs
jg
inc
loop
mov
jl
in
sub
dec
sbb
adc
or
cdq
xchg
out
(bad)
adc
fwait
mov
inc
cmps
push
pop
mov
push
mov
mov
cmp
mov
(bad)
mov
sar
mov
shr
sub
or
lds
mov
inc
mov
pushf
push
shl
dec
jne
not
push
sbb
ds
pusha
push
inc
push
out
pusha
and
sub
mov
jb
out
aas
retf
loop
sub
pop
or
inc
xchg
fwait
dec
test
or
das
mov
aas
jg
ret
mov
retf
mov
cmp
push
and
daa
cld
arpl
sar
mov
(bad)
into
push
sub
adc
jnp
adc
fiadd
jne
loope
movs
(bad)
mov
fwait
fwait
cmp
dec
jb
jno
pop
jno
xor
aas
sub
fld
jg
add
mov
xor
lahf
cmc
js
int3
or
stos
es
adc
sar
call
(bad)
sbb
retf
mov
mov
inc
cmp
ficom
jp
jno
mov
pop
bound
aam
cli
adc
stc
out
sub
and
(bad)
or
or
mov
inc
sub
dec
xchg
clc
arpl
sbb
push
xlat
xor
daa
data16
(bad)
cmp
inc
jmp
enterw
dec
sbb
into
cmp
lods
fcom
mov
loopne
inc
fldz
jp
mov
pop
sub
cmp
(bad)
mov
or
repz
in
mov
pop
(bad)
jg
and
lea
(bad)
fld
cmps
pop
movs
cdq
xchg
rcr
sub
sti
cmps
xchg
and
dec
(bad)
(bad)
jbe
xor
fwait
cmps
movs
or
retf
ret
(bad)
mov
ret
outs
into
push
xchg
iret
cli
retf
popa
adc
mov
int
or
aad
xchg
jmp
lahf
and
call
mov
ins
push
test
jmp
adc
pop
mov
mov
cli
cli
iret
or
push
je
aad
ins
cmp
push
ror
inc
inc
add
or
popa
push
push
test
adc
push
mov
mov
out
jno
arpl
pop
add
dec
xchg
inc
aad
repz
pop
and
or
repnz
in
xchg
(bad)
out
lock
mov
aam
fs
js
pop
add
mov
movs
sti
and
inc
test
pushf
mov
retf
or
retf
out
popf
bound
add
jg
sub
or
retf
test
dec
test
sub
add
mov
call
fmul
mov
into
adc
cmp
sbb
std
nop
je
lds
adc
jb
dec
mov
push
das
mov
pop
mov
jmp
ins
repnz
jne
fcomp
mov
adc
in
movs
xchg
daa
jl
test
fdiv
xor
mov
clc
or
push
into
and
int3
mov
(bad)
ins
jnp
rol
popf
nop
stos
movsx
sbb
inc
or
xlat
(bad)
int
iret
sets
jb
pop
sub
add
or
test
pop
sahf
adc
dec
fs
add
ja
jne
shl
xchg
rcr
add
ja
test
and
and
int
mov
jae
inc
out
lahf
or
in
outs
dec
arpl
sub
jl
mov
shl
jb
cdq
in
jae
add
xchg
jge
not
ror
mov
mov
scas
cmp
mov
mov
ins
retf
inc
inc
mov
loopne
daa
aaa
mov
xchg
xchg
mov
lock
xchg
lahf
imul
je
sbb
jecxz
push
add
inc
inc
fld
sub
mov
in
les
cli
mov
push
add
(bad)
mov
cmp
sub
xchg
pushf
dec
sti
add
loope
cs
push
or
mov
ret
or
cwde
jg
rol
sub
sahf
jns
retf
neg
jno
dec
push
dec
xchg
adc
aaa
pop
mov
or
into
jbe
movs
mov
pop
loop
push
leave
das
add
xchg
add
cli
lock
mov
xchg
jae
jb
repz
aaa
test
mov
fdivr
push
or
or
cs
mov
aad
adc
and
push
xor
cmps
mov
push
xchg
or
sbb
fsubr
je
mov
lds
mov
inc
pop
xchg
cld
fild
popa
mov
mov
sub
stos
add
ins
push
test
lds
stc
cmc
(bad)
fdivr
rol
int
add
push
jne
xchg
rcl
test
inc
into
scas
mov
in
and
fstp
mov
mov
in
push
xlat
addr16
popa
bound
arpl
fistp
cmp
sbb
jg
cmp
and
or
inc
dec
mov
test
jbe
outs
sub
or
inc
movs
push
mov
pop
inc
xor
pop
jecxz
push
xchg
xchg
or
push
or
aaa
mov
ss
mov
pop
sub
ror
fst
call
adc
ret
sahf
mov
repnz
mov
je
std
scas
lds
daa
dec
arpl
rol
jo
xor
add
push
hlt
loop
xchg
inc
std
sahf
mov
in
dec
sbb
pusha
push
push
xchg
rol
xchg
jae
std
ds
fstp
add
ins
shr
(bad)
fcomi
xchg
fmul
mov
push
in
sub
icebp
mov
test
cmp
pushw
mov
pop
repnz
cld
cmp
sub
int3
push
rcr
mov
rcr
retf
xchg
ficomp
xchg
push
dec
ja
mov
call
cmps
out
nop
stos
xchg
cdq
or
adc
jne
push
lods
ins
or
push
jmp
jge
cmp
stos
cmp
mov
jl
cmp
fdivr
scas
cmps
mov
jl
inc
loopne
leave
jge
mov
inc
mov
sub
out
(bad)
and
mov
in
lods
outs
adc
jbe
sub
(bad)
jbe
or
cmps
pusha
add
cdq
daa
das
dec
loop
js
xor
retf
mov
jbe
xor
cmp
imul
in
stos
xchg
fisttp
mov
shl
fdiv
test
or
inc
sub
and
inc
adc
les
cli
pop
mov
push
sbb
sbb
pushf
sbb
int
loopne
leave
sbb
icebp
cmps
or
leave
pop
add
jns
std
and
jecxz
fldlg2
adc
mov
sub
ret
rcl
add
mov
cmp
push
and
xor
cld
xor
nop
ds
jns
fmul
loop
(bad)
and
jle
sti
push
movs
mov
cmps
rcl
ror
pop
mul
sub
pop
push
sti
pushf
mov
adc
xchg
ja
sub
aad
adc
cmp
aas
inc
mov
mov
call
sub
mov
xor
mov
and
inc
jp
ret
sbb
movs
imul
sahf
ret
xlat
outs
xchg
ins
push
jne
rol
cmp
scas
cmps
jg
leave
aaa
sahf
inc
and
into
inc
sub
mov
aas
(bad)
cwde
mov
lods
sti
sbb
cmc
dec
mov
dec
loopne
pop
push
es
mov
xchg
dec
sub
push
test
mov
clc
and
and
shr
loop
movs
ins
add
sbb
mul
hlt
sub
in
inc
ins
jecxz
mov
ins
sub
scas
push
pop
and
movs
mov
mov
leave
std
jb
cli
sbb
stc
lahf
test
out
pop
add
sbb
cmps
test
(bad)
sub
outs
das
loopne
inc
xor
das
sysexit
or
sub
mov
mov
cmp
pop
jno
xor
jl
jmp
rcr
xchg
(bad)
call
cmp
jns
(bad)
push
push
mov
dec
outs
fild
cmps
dec
dec
ret
aaa
rcr
add
and
clc
cwde
pop
pop
mov
inc
add
sbb
call
pop
fwait
sbb
sbb
push
lods
or
mov
adc
dec
pop
stos
pop
add
sub
adc
xor
pop
or
inc
and
shl
in
or
mov
xor
aaa
pop
loopne
loop
adc
scas
test
das
scas
sub
fwait
and
std
ins
push
aaa
stc
jno
mov
ja
push
sbb
mov
test
popf
jae
and
call
adc
pop
rcr
adc
test
outs
or
mov
scas
cli
cli
mov
mov
in
test
stos
pusha
pusha
out
test
mov
repnz
(bad)
mov
xchg
jmp
cmps
pop
cwde
fwait
mov
test
nop
cmp
mov
inc
adc
imul
sbb
mov
(bad)
paddusb
(bad)
out
test
dec
outs
xchg
in
mov
jmp
mov
mov
and
les
sub
push
mov
jecxz
adc
dec
(bad)
loopne
add
sbb
mov
lea
loope
jb
lds
and
test
fmulp
outs
jae
mov
push
retf
xchg
mov
fimul
push
imul
lods
test
lea
aad
bound
pop
jb
cmp
xor
jo
dec
fs
jb
jno
or
jl
or
loope
jg
inc
data16
movs
call
cmp
and
pop
lock
dec
push
bound
(bad)
std
mov
pop
dec
pop
test
retf
push
fist
pushf
push
add
ret
cmps
add
push
mov
hlt
call
xchg
push
and
div
fadd
sbb
neg
movs
das
es
xchg
push
mov
iret
dec
mov
pop
jmp
(bad)
mov
pop
push
jecxz
jge
cmp
rcl
pushf
dec
sub
jb
xchg
mov
idiv
clc
mov
loop
jnp
inc
dec
daa
iret
les
push
push
loop
add
pop
cmp
scas
aam
jl
or
and
pop
les
xchg
pushf
add
xor
or
adc
ret
or
adc
(bad)
fsubr
jmp
repnz
sub
add
sar
leave
movs
mov
adc
xchg
add
mov
mov
cmp
in
inc
aaa
pop
add
sub
sub
sbb
sbb
das
sbb
push
mov
call
jne
jl
loopne
(bad)
int
cmp
dec
loopne
mov
into
loopne
bound
ins
outs
cs
sub
xor
mov
adc
push
rcl
and
popf
mov
push
mov
jecxz
imul
ret
je
sti
mov
retf
data16
ins
or
cmp
sub
test
rcr
jmp
and
fcmovne
fild
cs
(bad)
jno
xchg
jne
fldcw
hlt
push
lahf
push
mov
xchg
lods
jle
enter
adc
sbb
scas
cmp
sar
ret
jb
inc
arpl
ins
sbb
or
and
pop
mov
bndstx
or
(bad)
and
cdq
jb
fnstsw
test
mov
out
inc
ficomp
(bad)
das
repz
xchg
stos
jecxz
gs
inc
xchg
sub
push
pop
push
aas
xor
(bad)
icebp
or
gs
fidiv
mov
push
(bad)
loop
xchg
xchg
sub
jle
dec
movs
fadd
inc
cmp
lock
and
mov
movs
and
shl
stos
int
dec
cmp
lock
les
fnstenv
mov
icebp
fmul
sar
call
xor
mov
sbb
or
aad
mov
ins
or
add
inc
shr
mov
and
push
daa
dec
rcr
shl
das
inc
add
rcr
into
dec
leave
mov
sbb
mov
add
cmp
xor
adc
rol
adc
cs
std
pusha
std
jmp
sbb
retf
mov
sbb
push
sub
inc
dec
push
in
ins
and
add
or
sub
jmp
sub
and
call
loopne
jne
cmp
ret
dec
gs
cmp
inc
ror
int3
add
push
fisub
push
dec
adc
cmc
jp
mov
shr
add
push
shl
in
sub
pop
les
aad
xchg
into
pop
cwde
cmp
fisubr
jb
dec
jno
mov
lahf
hlt
mov
or
or
push
mov
inc
sub
or
div
repnz
fs
push
xor
push
mov
(bad)
lods
movs
sbb
or
sbb
jne
or
pop
shr
pushf
scas
mov
aaa
sbb
mov
jns
and
cmp
(bad)
jae
xchg
or
daa
ror
lods
mov
and
stos
shr
cdq
icebp
xchg
or
sub
adc
and
les
rol
push
pop
sbb
lock
data16
pop
fs
in
push
pop
jo
sahf
sbb
out
test
in
add
into
cld
xchg
out
stos
push
stos
xor
adc
jb
and
pop
pop
or
std
add
sbb
dec
mov
cmp
aaa
dec
pop
clc
movs
pop
fnstenv
js
stc
xchg
push
mov
pop
ror
cmc
mov
clc
inc
inc
mov
das
xchg
in
aad
push
retf
(bad)
add
das
scas
test
fwait
jmp
cwde
dec
ret
ror
fisubr
xor
bound
push
mov
fwait
push
loope
movs
scas
sub
sahf
pop
xchg
pop
push
repnz
fldenv
jb
mov
jae
mov
aaa
outs
jo
imul
dec
shl
ret
pop
push
jnp
pusha
test
out
add
mov
int3
fs
pop
enter
pop
xchg
lds
(bad)
sub
jno
cld
xor
xchg
sub
and
cmp
das
add
jne
js
or
dec
je
loopne
jo
popf
loope
jne
(bad)
xchg
cmps
out
dec
and
xchg
in
xchg
call
jmp
imul
ss
jns
mov
adc
mov
addr16
xchg
imul
cmp
inc
into
xchg
(bad)
mov
xchg
fmul
cmp
inc
outs
ja
pop
adc
mov
add
test
shr
sub
sbb
jae
adc
xor
imul
sub
mov
pop
call
sbb
sbb
mov
add
ret
(bad)
ins
loopne
xchg
in
in
(bad)
daa
aaa
inc
xchg
call
inc
jecxz
push
push
xchg
mov
cmps
(bad)
loop
nop
and
dec
dec
sbb
inc
dec
imul
dec
sbb
pop
cmp
fsubr
push
shl
xor
xor
sub
xor
xor
rol
mov
cdq
jmp
mov
sbb
push
add
push
fild
nop
cli
mov
push
fbld
add
enter
imul
cmp
and
pushf
sti
mul
popf
mov
jne
pop
into
or
lock
mov
retf
sti
jl
cli
cdq
cmp
fadd
test
sbb
add
(bad)
push
lods
jmp
jecxz
xor
and
gs
and
daa
test
iret
lds
push
jmp
loopne
hlt
push
pop
push
dec
mov
out
pop
push
xlat
std
push
dec
and
xchg
cmp
pop
repz
repz
cmp
inc
dec
xor
adc
out
bound
jo
ins
inc
jmp
aas
loop
jno
ror
lods
movs
sbb
movs
mov
rcl
aam
jb
clc
repnz
cdq
test
dec
in
adc
cld
out
jnp
(bad)
push
in
in
mov
out
ret
cmp
aaa
jae
xchg
aam
fs
or
rol
fimul
fwait
mov
sub
ds
push
and
ret
and
test
mov
push
jmp
push
add
rol
jb
xor
xchg
mov
ins
enter
add
mov
shl
iret
mov
aaa
test
xor
jo
into
sub
cmp
les
int3
adc
movs
hlt
outs
adc
inc
bound
outs
cmp
leave
into
imul
jg
outs
add
mov
pop
int3
dec
or
ds
aaa
nop
je
leave
adc
ins
dec
mov
and
push
mov
repnz
cli
pop
fwait
sub
shr
or
in
xchg
es
adc
xlat
sub
outs
rol
loopne
cld
mov
adc
int
push
shl
jmp
test
xlat
jmp
stos
xlat
push
repnz
gs
xchg
jecxz
test
xchg
sub
adc
jnp
and
pop
scas
imul
out
inc
fisubr
ret
movs
mov
pop
shl
mov
jno
int
add
dec
mov
lock
pop
dec
adc
mov
inc
cmp
adc
lds
xor
jnp
and
jmp
cwde
enter
jbe
(bad)
push
shl
(bad)
add
test
pusha
xchg
or
cmp
out
jle
nop
cmps
sbb
and
jp
int3
xchg
xchg
sbb
mov
jbe
push
pop
dec
add
mov
xor
mov
test
(bad)
inc
sub
jge
test
int
or
jge
into
push
(bad)
sub
outs
cdq
(bad)
cmp
std
sbb
je
and
xchg
lahf
dec
addr16
and
pop
mov
ds
ret
cmp
adc
cmp
xchg
and
push
mov
fs
rol
sub
mov
int
sbb
mov
sub
dec
xor
jmp
jns
test
jns
cmp
push
repnz
(bad)
dec
cmps
mov
mov
jmp
mov
mov
lds
push
mov
push
mov
push
call
mov
fmul
fisttp
dec
and
ret
fcomi
enter
xchg
mov
enter
jno
fdivr
stos
leave
mov
scas
inc
mov
jmp
hlt
xlat
imul
sub
inc
add
jp
inc
jns
xchg
or
int3
xchg
sbb
mov
enterw
pusha
paddb
mov
cdq
jmp
fdivr
(bad)
mov
jl
sbb
pop
and
pop
xor
cmps
xchg
add
fisubr
xor
fs
xchg
mov
in
out
iret
xchg
stc
icebp
push
lods
in
sub
jecxz
pop
push
xor
hlt
pop
out
(bad)
fistp
in
repz
jmp
pop
dec
mov
xchg
jmp
pushf
outs
and
cwde
imul
mov
stos
push
cdq
(bad)
aas
and
stos
fstp
push
cmp
jmp
daa
sahf
(bad)
mov
xchg
jo
fs
sub
inc
jl
pushf
mov
sbb
rol
and
pop
retf
jmp
scas
cwde
test
mov
pop
xor
or
mov
in
xchg
cmp
data16
sbb
mov
push
pop
pop
fld
mov
mov
shl
les
inc
mov
jg
adc
or
dec
out
repz
iret
les
icebp
pop
fcom
test
test
call
test
adc
adc
fbstp
mov
cmp
mov
adc
dec
jecxz
div
ror
scas
mov
iretw
mov
mov
pop
inc
pusha
cmp
inc
std
rcr
fs
pop
clc
add
stos
hlt
sub
mov
mov
movs
push
jnp
inc
add
jecxz
jbe
mul
adc
cmp
sub
(bad)
nop
push
pushf
xor
xchg
xchg
cmp
xchg
push
jecxz
xchg
aas
cli
test
xchg
out
mov
xor
or
cmp
sub
ret
imul
(bad)
call
adc
sub
mov
xchg
sub
out
jmp
adc
sub
xchg
xchg
sahf
jbe
or
mov
push
xchg
sub
or
rcl
das
xlat
xchg
cmp
xor
adc
pop
pop
mov
neg
dec
mov
jg
lea
or
inc
fmul
adc
neg
jge
inc
fdivr
div
test
popa
in
(bad)
pop
cwde
or
dec
in
js
push
push
mov
enter
neg
mov
imul
ffree
iret
mov
inc
scas
rcr
psubw
dec
in
retf
movs
adc
mov
xor
mov
mov
mov
jnp
push
push
je
imul
sti
ss
xchg
mov
sub
es
sub
add
add
imul
jg
int3
xchg
aam
add
retf
popa
mov
xchg
adc
sub
es
xor
adc
adc
ror
inc
jecxz
cmp
xor
xchg
pop
jns
mov
jmp
mov
mov
inc
pop
cdq
movs
inc
inc
jmp
int3
sub
dec
les
xchg
or
in
loope
push
fcom
mov
jnp
cli
cli
je
hlt
push
jae
pushf
sbb
jge
iret
int3
jns
rcl
cmp
jmp
cmps
cmc
mov
sbb
(bad)
out
test
aad
mov
dec
adc
xchg
outs
xor
xchg
fmul
cmp
mov
cdq
lea
punpckldq
sbb
xchg
sti
shl
(bad)
and
sub
(bad)
clc
pop
cmp
mov
add
jg
and
lock
jb
dec
push
lods
daa
mov
mov
loopne
mov
pop
xor
stos
(bad)
fsubr
sub
shl
ja
leave
add
mov
mov
inc
ins
outs
stos
jl
inc
push
cmps
loope
inc
out
inc
das
scas
push
adc
mov
sbb
fs
push
rcr
retf
fs
aad
jp
inc
(bad)
call
push
shl
retf
and
cmp
xchg
rcr
push
aas
xchg
mov
fstp
movs
xor
push
rcl
int
iret
push
(bad)
outs
shr
and
mov
std
dec
ins
mov
xchg
lock
out
push
and
(bad)
jmp
pushf
add
inc
enter
cdq
mov
call
dec
xchg
jl
push
push
or
in
out
pop
or
(bad)
cmp
out
movs
movs
stc
ds
in
fs
jb
sbb
mov
mov
fsubr
cmp
jbe
mov
pop
pop
adc
les
cmp
xchg
fst
test
jg
push
imul
jno
sbb
cdq
ins
out
or
mov
clc
jmp
xor
mov
loopne
sbb
dec
imul
loopne
xchg
gs
jbe
sbb
mov
les
and
or
add
jge
push
or
call
inc
inc
jnp
shl
adc
sub
jp
or
mov
xor
jl
pop
xor
imul
pop
rcl
xchg
add
push
loopne
dec
in
cwde
(bad)
dec
jne
dec
dec
movs
int3
xor
mov
mov
xor
std
add
repz
push
mov
sbb
or
scas
retf
retf
shl
inc
push
or
xor
cmc
mov
scas
ja
xor
cmp
dec
and
xchg
sub
jb
(bad)
fwait
movs
icebp
imul
imul
je
pop
push
and
scas
add
int
adc
neg
jmp
or
push
adc
icebp
xor
mov
xor
or
cmc
popf
pop
mov
xor
sub
out
xchg
mov
scas
out
mov
lods
sbb
dec
cs
shr
aaa
inc
test
mov
pop
(bad)
(bad)
clc
push
(bad)
xlat
fucom
retf
in
mul
push
aaa
es
ja
add
or
or
jno
jle
push
in
fimul
adc
push
push
repnz
outs
mov
sub
icebp
push
mov
jno
loopne
xchg
mov
loop
fild
retf
mov
xchg
or
push
out
xor
mov
cmc
scas
push
inc
(bad)
cdq
mov
dec
shl
ins
dec
pop
push
adc
mov
dec
jne
(bad)
or
pop
sub
push
pop
push
jmp
repnz
cmc
addr16
retf
and
dec
add
sub
mov
dec
test
mov
or
jl
ror
and
add
sub
or
fucom
iret
jg
mov
ret
into
in
nop
xor
cdq
xchg
jmp
std
addr16
jle
(bad)
into
daa
mov
adc
adc
push
or
cmp
leave
mov
mov
retf
loope
iret
cmc
mov
data16
ins
(bad)
sbb
pop
pop
cmp
mov
add
(bad)
aaa
mov
jle
loop
jge
push
popf
cmp
rol
add
imul
test
popa
push
inc
inc
sbb
clc
dec
add
jge
mov
test
jl
xor
enter
in
mov
shl
inc
add
inc
dec
xor
pusha
and
out
mov
lods
sbb
(bad)
int3
icebp
pop
sub
je
das
div
mov
pop
or
sti
sub
jo
push
xchg
test
pop
and
sub
std
dec
xchg
loop
dec
and
dec
inc
and
xchg
inc
ja
adc
cwde
cmps
inc
xchg
or
and
jo
sub
imul
cs
aas
mov
(bad)
push
mov
xor
movs
sub
in
stos
out
arpl
ja
pop
inc
(bad)
sub
dec
(bad)
and
out
loope
xchg
es
(bad)
or
push
movs
mov
stos
push
adc
(bad)
mov
pusha
xor
(bad)
into
cmp
lods
mov
(bad)
sbb
mov
mov
jmp
sbb
mov
dec
inc
cmp
sub
add
jbe
jo
ffree
hlt
push
aam
in
jns
or
stos
retf
out
outs
test
adc
sahf
pop
fistp
mov
mov
inc
mov
cdq
xor
inc
jnp
mov
adc
inc
mov
xchg
out
xchg
inc
aam
add
pop
bound
mov
jo
and
call
sub
pop
push
ret
cmp
es
cmp
fdivr
and
ret
scas
loop
mov
leave
idiv
mov
(bad)
or
inc
call
gs
dec
add
in
cwde
call
mov
aam
aad
(bad)
adc
test
jp
and
ins
cli
ja
call
ss
dec
mov
mov
inc
aad
sbb
jo
lahf
jb
pushf
sub
cmps
mov
loopne
inc
retf
inc
cmp
lds
sub
inc
inc
out
cmp
pop
ja
add
aad
add
push
cli
mov
in
out
mov
sbb
mov
or
ss
leave
xchg
and
mov
mov
push
jmp
jg
in
(bad)
mov
jp
les
push
movs
in
test
mov
sub
loop
cmp
mov
mov
pop
jmp
cld
mov
add
push
xor
jo
pop
xchg
lea
xor
call
std
xchg
pop
xor
mov
push
popf
jge
push
push
push
and
clc
(bad)
out
in
loop
sbb
aam
dec
addr16
stc
mov
and
inc
sbb
(bad)
test
(bad)
push
xchg
jb
mov
pop
repnz
pusha
and
sbb
mov
add
clc
adc
sbb
scas
adc
cmp
sub
test
or
adc
sub
cmp
cmp
(bad)
pop
sub
jbe
movs
and
jbe
xchg
shl
sub
add
xchg
xor
add
fnstsw
and
cmp
fisttp
in
mov
out
or
cwde
dec
nop
jb
and
cwde
mov
inc
pop
jecxz
mov
lods
xor
dec
pop
pop
pop
clc
sub
mov
mov
jo
jmp
int3
jmp
in
sahf
or
arpl
pop
jg
mov
sub
pop
ins
mov
pop
mov
or
mov
adc
pop
(bad)
sub
test
pop
rcr
cmp
sbb
imul
mov
jae
data16
cli
sbb
(bad)
into
out
nop
lock
loop
xor
ins
fisttp
in
outs
fs
add
cmp
xor
nop
jae
mov
adc
mov
mov
dec
jmp
pop
ins
xor
call
mov
test
pop
cdq
dec
int
iret
pop
nop
dec
sbb
or
add
jp
pop
int
cld
mov
jae
cmps
out
arpl
lods
je
(bad)
fisttp
call
xchg
dec
mov
inc
adc
jae
mov
es
xor
mov
mov
bound
pop
fild
div
(bad)
cmp
aad
mov
mov
cmp
xchg
jmp
push
fbld
add
sub
je
out
dec
lods
iret
adc
dec
inc
cmp
and
shl
mov
mov
inc
lahf
addr16
xor
inc
jnp
or
inc
loopne
xor
and
adc
(bad)
sbb
push
mov
test
dec
mov
sub
call
sti
xchg
add
arpl
mov
gs
pop
fisttp
xchg
xchg
xchg
jno
pop
ret
mov
xchg
mov
lahf
pop
cs
ins
das
mov
les
sub
and
out
dec
ja
xchg
popf
ds
sbb
dec
adc
lds
in
lea
mov
xor
cmp
add
mov
(bad)
call
jne
inc
js
cmp
iret
add
ficomp
inc
ret
sub
xor
scas
stos
mov
cmp
xchg
jg
add
sub
out
lds
sbb
inc
test
mov
xor
mov
mov
inc
out
ret
es
mov
dec
push
call
(bad)
movs
push
shr
in
in
push
jmp
das
xchg
(bad)
adc
pop
cli
sub
cmp
jp
xor
lock
loope
mov
outs
dec
mov
icebp
int3
loope
stc
lahf
inc
push
test
cld
mov
out
push
in
jmp
imul
sbb
setbe
and
data16
int
pop
xlat
out
jbe
pop
mov
inc
bound
xchg
xchg
fdiv
repz
(bad)
and
seto
gs
pop
add
sti
popa
sbb
icebp
pusha
repz
push
or
loopne
fimul
(bad)
je
(bad)
jns
imul
pop
cli
enter
mov
gs
mov
retf
adc
lock
mov
pop
sub
push
fsubr
sbb
pop
test
pop
pop
sub
mov
stos
outs
push
xchg
(bad)
sub
pop
stos
call
cli
pop
or
pop
jo
into
inc
ja
sahf
loop
lea
xchg
jge
adc
les
xchg
aas
dec
loopne
iret
mov
loope
and
xor
cmp
dec
stc
mov
jmp
js
nop
jae
test
cmp
push
retf
int3
inc
mov
retf
lock
sub
mov
jg
cmps
scas
lahf
gs
test
xlat
in
outs
addr16
mov
jl
cmp
push
jo
nop
and
push
ja
adc
and
pop
dec
enter
push
leave
imul
adc
dec
jns
adc
sub
out
and
push
sub
pop
out
leave
cdq
je
mov
push
clc
xchg
loop
push
pop
pop
std
(bad)
arpl
push
callw
and
inc
lock
jl
fiadd
fs
dec
xchg
and
sub
nop
or
xchg
test
repz
retf
and
xor
xor
sub
ja
lds
and
repnz
mov
jle
aas
inc
jp
shl
outs
int3
imul
and
xor
mov
or
xchg
je
arpl
inc
call
mov
adc
bound
ins
sub
adc
inc
aaa
cmp
jno
sahf
ins
xchg
loop
xchg
mul
xor
jmp
pop
mov
inc
add
sbb
int
and
push
ror
jle
scas
ja
rol
mov
aas
pushf
xchg
shr
jae
js
mov
mov
ficomp
test
mov
aas
dec
and
jmp
jne
mov
out
mov
pop
and
adc
mov
lods
inc
xor
mov
pop
test
ins
int3
add
imul
addr16
mov
cmp
push
push
push
ss
adc
movs
dec
and
cmp
imul
hlt
jmp
sub
sti
ins
mov
jbe
je
xchg
out
lods
cdq
test
sbb
jbe
outs
and
push
out
mov
jae
in
pop
sbb
push
(bad)
retf
adc
adc
sub
movs
add
aad
das
xchg
mov
cmp
sbb
lods
pop
daa
mov
popf
jmp
fidiv
sub
fmul
mov
movs
je
dec
jp
mov
sahf
aad
out
adc
mov
icebp
mov
inc
pop
sbb
and
jno
sbb
ret
pop
mov
ds
xor
ja
fld
jae
js
inc
mov
lods
inc
jmp
repnz
adc
idiv
retf
int
pop
adc
and
(bad)
adc
cli
mov
int
push
leave
repnz
aas
test
iret
mov
fcomp
xchg
xchg
jb
or
add
add
pop
leave
and
mov
add
pushf
xor
enter
add
xlat
push
xor
popf
inc
retf
xchg
call
movs
sub
std
or
test
jb
or
pop
adc
xor
(bad)
mov
dec
cmp
sub
pop
je
xchg
xor
inc
rol
pop
cmps
push
out
push
or
mov
xchg
mov
ret
xchg
dec
movs
cmp
xor
lock
sbb
add
add
inc
shl
jae
add
daa
add
popa
retf
pop
dec
enter
cs
xchg
xor
jno
and
nop
aas
dec
fnstenv
and
push
xor
add
inc
cmps
movs
ss
dec
push
loopne
ret
mov
movs
loop
and
movs
and
std
cld
jmp
in
in
mov
test
push
mov
jmp
cwde
lahf
leave
addr16
xchg
mov
sub
fmul
fidivr
pop
dec
ins
(bad)
hlt
ret
mov
je
sbb
imul
sbb
and
and
push
sar
mov
imul
xchg
js
arpl
and
jns
xor
pop
jbe
mov
int3
(bad)
xchg
jg
or
(bad)
retf
jmp
sbb
outs
dec
ror
inc
adc
rcr
push
inc
push
sbb
and
or
xchg
push
ja
add
sbb
repz
push
pop
and
adc
lds
fimul
mov
ret
pop
(bad)
mov
lds
sahf
test
jbe
fisubr
mov
push
int3
es
and
xlat
push
imul
xor
ds
pushf
push
fld
dec
(bad)
mov
adc
push
xchg
div
(bad)
jge
push
mov
mov
ss
sahf
fcmovnb
cmp
cmps
mov
nop
add
mov
sbb
fiadd
aam
mov
fst
mov
pop
pusha
ja
xor
shl
xchg
or
mov
scas
pushf
xor
outs
or
cld
push
dec
js
push
jno
popf
ja
or
xor
pop
imul
sub
jle
icebp
rcl
push
mov
and
adc
push
mov
sub
pop
push
mov
mov
mov
out
cs
dec
je
jns
es
stos
scas
xchg
addr16
mov
mov
in
cli
neg
adc
inc
mov
mov
cmp
lahf
(bad)
push
clc
push
arpl
test
fimul
push
xor
aas
mov
mov
adc
iret
inc
(bad)
repnz
mov
dec
cli
sbb
add
cmps
enter
sbb
bound
test
inc
sub
mov
aam
in
xchg
ror
ja
data16
ins
arpl
jp
lahf
adc
lock
pushf
mov
out
clc
cmp
mov
inc
inc
sti
and
sub
add
push
sbb
sub
loope
in
mov
cmp
pop
out
xchg
inc
push
or
lahf
stc
or
dec
pop
push
pop
(bad)
out
dec
aaa
cmp
cmc
into
mov
repz
shr
mov
or
nop
das
inc
lea
pusha
aas
or
cmps
jg
or
cwde
jecxz
repz
nop
inc
jmp
aas
dec
(bad)
cld
or
sub
sub
call
stos
arpl
in
out
mov
mov
dec
setno
and
dec
enter
in
jnp
xchg
outs
or
cli
cmp
retf
into
xchg
xchg
mov
xor
sti
push
inc
jmp
jmp
jp
test
mov
sbb
xchg
sbb
and
dec
adc
std
bound
outs
scas
mov
cmp
dec
cmp
xlat
mov
loop
test
pop
sub
fmul
call
daa
clc
jbe
jmp
(bad)
test
shl
pop
or
xor
fs
je
retf
cwde
mov
mov
xchg
(bad)
ja
cmp
pop
cmp
fnstcw
in
int
mov
bound
aas
mov
pop
jmp
mov
push
retf
inc
or
jmp
ins
pop
stos
ins
aaa
leave
out
sti
imul
fst
ror
dec
rcl
sub
add
scas
test
outs
cli
cmp
jmp
push
mov
jb
and
pop
push
repz
mov
sahf
xor
imul
fwait
cld
outs
mov
movlps
movd
test
stos
stos
test
fistp
stc
imul
inc
into
sbb
loopne
in
stos
stc
xchg
adc
shr
mov
lds
pop
fs
iret
shr
aas
dec
push
pop
sub
leave
xchg
xlat
les
mov
adc
inc
or
mov
cmp
jno
ficom
lahf
pop
hlt
outs
mov
pop
inc
mov
adc
cli
inc
sti
push
or
lahf
shr
jmp
pusha
pop
das
outs
and
xchg
(bad)
ja
test
loopne
jnp
mov
add
icebp
push
sbb
shl
xor
cmps
adc
cli
inc
pop
scas
fnstenv
aam
pop
fcomp
call
cli
aam
imul
fsubp
fmul
das
mov
mov
fmul
cmp
sub
pop
stos
lahf
push
cmc
push
mov
int3
and
ins
popa
dec
inc
test
enter
jo
and
mov
mov
mov
clc
sub
imul
arpl
push
into
and
push
xchg
inc
ret
push
out
loopne
pop
rol
(bad)
lock
mov
data16
ficomp
sub
imul
std
mov
push
test
add
fwait
jp
xchg
sbb
lea
ds
stc
push
or
mov
pop
std
out
neg
fisub
(bad)
cs
cwde
dec
xchg
jne
or
lods
pop
mov
popa
ja
and
movs
scas
mov
loopne
aaa
mov
sahf
lock
mov
jl
lahf
pop
pop
mov
adc
cdq
mov
lock
push
xor
stos
pop
dec
xlat
pop
fs
sbb
sub
adc
jecxz
xor
xor
mov
and
push
add
xchg
sub
daa
xchg
mov
out
add
jmp
cs
dec
push
loop
enter
add
inc
ret
iret
retf
dec
rol
jae
xchg
mov
call
push
call
pop
shr
leave
mov
jne
bound
sub
jnp
or
pop
repnz
scas
jge
call
(bad)
cli
test
or
addr16
(bad)
retf
xchg
ss
call
shl
xor
outs
mov
aaa
fnstsw
push
iret
add
popf
data16
rcl
xlat
pop
xchg
add
pop
iret
das
call
aam
cmps
loope
std
and
or
jbe
cmp
nop
adc
cmc
xchg
mov
test
jmp
fmul
mov
xor
or
test
xchg
pop
scas
mov
inc
ret
shl
shld
mov
arpl
mov
xchg
ins
imul
pop
inc
push
mov
jmp
fbld
loopne
mov
pushf
call
mov
mov
sbb
cdq
stos
outs
or
or
jns
sub
or
xchg
push
mov
dec
pusha
xchg
ret
movs
and
fwait
dec
sbb
push
or
data16
rcl
popa
aaa
and
or
ror
in
pusha
test
inc
dec
inc
jae
pop
push
add
add
cwde
es
rcr
icebp
mov
dec
stc
arpl
leave
pop
xchg
push
stos
in
cld
push
fiadd
fiadd
push
inc
dec
sub
shl
pop
dec
aad
and
test
push
cmp
mov
retf
enter
mov
sbb
imul
inc
adc
xchg
jae
loopne
jno
pop
inc
cmp
mov
add
xor
mov
xchg
pop
inc
loopne
fst
sbb
ja
nop
jbe
jae
sar
ror
aam
add
mov
mov
mov
imul
retf
adc
shr
sbb
dec
fwait
out
inc
xor
cld
(bad)
mov
jecxz
pushf
inc
(bad)
cmc
push
jne
pop
sbb
fs
scas
mov
sbb
pop
mov
jne
mov
mov
test
mov
add
ja
and
xchg
cmp
and
dec
fwait
pop
and
retf
or
mov
jbe
les
mov
jo
inc
loopne
pop
popa
aaa
pusha
mov
ins
push
add
pop
push
(bad)
pop
or
mov
mov
jl
add
mov
and
xchg
movs
xchg
jnp
jns
test
inc
and
imul
sbb
and
daa
push
adc
adc
add
fs
iret
mov
sub
mov
xor
sbb
out
es
cmp
cmp
lahf
xchg
jae
cli
sbb
jge
inc
lock
popa
in
(bad)
inc
enter
(bad)
mov
sub
jno
(bad)
adc
ficomp
inc
mov
pusha
add
xchg
add
cwde
clc
pop
test
into
(bad)
mov
push
cmp
pop
pusha
add
add
jnp
jae
aas
lahf
rol
mov
mov
fisub
ror
rcl
daa
push
mov
sub
aaa
fdivr
cdq
rcl
or
icebp
out
or
or
fst
pop
pop
xlat
mov
cmps
in
or
mov
iret
adc
mov
dec
cmp
push
rcl
jmp
(bad)
sti
inc
xchg
and
cli
outs
adc
xor
sbb
sbb
retf
fdiv
lods
pop
aaa
sti
mov
mov
jae
adc
mov
inc
stos
(bad)
cld
adc
stos
outs
lock
addr16
xlat
sti
popa
adc
push
loopne
jo
pop
dec
xchg
inc
arpl
cli
fwait
jbe
push
mov
lahf
jae
test
pop
aad
mov
xchg
pop
mov
sbb
and
dec
imul
jmp
add
dec
test
jmp
push
clc
rcl
adc
test
jmp
std
not
mov
ror
into
sbb
retf
movs
xor
loopne
push
pop
sbb
(bad)
popf
daa
fisub
mov
sbb
popa
xchg
pop
adc
retf
add
gs
or
sti
ud0
icebp
shr
int
push
xor
dec
test
jmpw
shl
and
push
dec
adc
out
xchg
xchg
ret
jmp
inc
cmp
test
push
push
lahf
scas
mov
icebp
lahf
adc
test
mov
xchg
push
out
test
pushf
repnz
mov
movs
sbb
mov
push
repz
mov
outs
or
fstp
dec
pop
ja
shl
cmps
fdiv
aaa
sub
shl
pop
xchg
fnstcw
aas
xchg
mov
sub
icebp
mov
inc
dec
xchg
js
pop
xor
mov
std
add
cmps
ss
adc
std
jecxz
lea
jo
push
test
sub
dec
sahf
push
rol
lods
and
mov
rcr
out
xchg
shl
xor
mov
dec
(bad)
push
xchg
adc
in
cmp
mov
push
xchg
hlt
add
jmp
dec
in
xchg
mov
les
scas
popf
dec
xchg
mov
ins
mov
push
fcom
and
movs
nop
fidiv
sub
sbb
jle
xor
and
lods
jge
rol
jbe
jnp
(bad)
in
lahf
(bad)
mov
inc
mov
dec
loope
das
lods
push
sbb
les
fcmovu
mov
in
or
mov
xchg
in
mov
push
stos
ds
sbb
call
bound
push
stc
cmp
aaa
sbb
sub
xlat
push
mov
repnz
jo
in
sbb
adc
lahf
sub
inc
mov
sub
cs
dec
cmp
mov
in
xor
add
push
inc
cmp
xchg
inc
test
xor
ins
sub
pop
xor
or
popf
xchg
or
pushf
jns
pop
push
sbb
and
mov
ror
sub
lock
mov
xchg
push
stos
sti
inc
pop
in
add
sbb
js
adc
mov
mov
out
sub
cbw
and
push
xlat
inc
frstor
stos
jb
stos
jns
(bad)
jae
das
xchg
scas
mov
das
out
in
daa
inc
sbb
push
retf
test
fcmovne
push
mov
pop
push
pop
jb
jno
repnz
mov
rol
ror
fsub
cmc
lahf
mov
dec
adc
adc
add
aam
push
cmps
popa
mov
mov
mov
call
add
test
mov
jns
and
push
das
add
mov
mov
inc
pop
(bad)
mov
jge
jg
sbb
xor
mov
aad
scas
and
pop
bound
mov
xor
mov
ror
js
popa
ins
sahf
test
test
repnz
xchg
mov
ds
jmp
or
(bad)
dec
popa
jae
int
data16
inc
pop
cmp
lea
fstp
or
pop
leave
mov
or
mov
push
xchg
jb
in
mov
sub
sub
sahf
push
nop
in
std
push
or
mov
nop
cdq
(bad)
cmps
xchg
nop
mov
inc
aas
xor
push
lahf
pop
or
leave
sbb
xor
cdq
ror
jmp
fbld
dec
xchg
fist
ror
inc
int
(bad)
out
add
fdiv
pop
sbb
in
mov
mov
dec
sbb
xor
xor
jmp
mov
push
cmp
jl
jbe
inc
ja
test
push
unpckhps
sbb
inc
bound
ret
scas
jnp
or
or
sbb
and
lds
cmovne
cmp
push
shl
inc
ret
cmp
loope
xchg
cmc
enter
sub
test
dec
(bad)
dec
rcl
retf
scas
aam
jne
in
dec
test
(bad)
in
cmp
mov
cmps
dec
cmp
mov
sahf
add
pushf
add
bound
sar
dec
xor
mov
mov
jmp
jmp
pop
add
aad
dec
aam
inc
adc
xchg
jecxz
adc
or
push
pop
cld
adc
xor
cmp
mov
inc
push
fdiv
xchg
cmp
jmp
enter
fst
out
movs
adc
rcr
rol
(bad)
xor
adc
cmp
mov
dec
mov
xchg
(bad)
sti
sub
xor
clc
js
pop
(bad)
pop
mov
fs
xchg
data16
bound
lock
mov
adc
loopne
(bad)
outs
sbb
xchg
sub
pop
cmc
add
in
add
aad
pop
push
js
dec
inc
lock
mov
das
sub
data16
das
lods
pop
test
ins
out
mov
add
xor
popf
iret
cmp
mov
mov
adc
xor
inc
inc
lea
sub
je
fidivr
xor
cmp
mov
xchg
pop
mov
(bad)
or
mov
adc
and
jns
test
ret
mov
cwde
popf
sub
jecxz
and
jp
fwait
retf
ss
inc
rcr
ins
inc
sbb
leave
test
pop
test
loop
scas
adc
jb
dec
vsqrtps
(bad)
dec
mov
mov
loop
and
mov
mov
cmp
mov
fwait
push
ror
xchg
shl
xchg
xlat
in
push
stos
cmp
jnp
in
jl
in
cmps
inc
xor
cs
lds
addr16
and
ins
cmps
adc
icebp
dec
jge
cmp
fisttp
inc
les
add
div
(bad)
dec
int
dec
ds
adc
not
hlt
push
inc
fisttp
out
xchg
push
jmp
retf
mov
xchg
mov
jmp
jns
xchg
cdq
pop
pop
fidiv
call
sub
shl
mov
fcom
cmc
sbb
jmp
std
mov
loop
les
adc
pop
push
bts
mov
dec
add
sahf
cmp
repnz
or
lds
popa
loop
int
fiadd
ins
xchg
out
adc
aaa
ds
push
sub
push
jge
or
sbb
inc
cli
push
mov
pop
inc
dec
(bad)
xchg
clc
mov
push
or
or
aaa
popa
je
sbb
jle
inc
or
fs
inc
addr16
ds
push
aaa
cmps
fbstp
ins
sub
mov
xchg
in
rcr
pop
mov
mov
sahf
dec
sahf
inc
push
push
mov
xor
xor
out
stc
out
in
pop
push
mov
mov
fdiv
stos
pop
sub
push
in
pop
es
jne
cmp
outs
mov
xchg
ds
loopne
call
adc
lock
xor
jnp
ficom
lahf
xchg
ja
in
mov
fcomp
dec
dec
add
std
mov
sahf
inc
xchg
out
lea
(bad)
(bad)
sbb
pop
iret
mov
pop
push
lea
jmp
gs
xchg
xor
out
push
sub
cmp
fwait
cmps
pushf
int3
clc
mov
push
into
xor
mov
je
(bad)
rcl
jae
test
jmp
mov
les
dec
mov
mov
rcl
add
lods
adc
pop
jo
stos
sbb
jno
push
and
fwait
jl
mov
push
imul
lods
adc
fwait
xchg
in
imul
or
jge
dec
sub
push
mov
outs
in
adc
pop
mov
or
(bad)
ins
xchg
ins
cmp
pusha
lods
sub
dec
loopne
pop
mov
cld
inc
lods
ja
lods
sub
sbb
enter
sbb
pop
add
out
or
rcl
or
pop
jb
sbb
movs
imul
cmp
stos
sub
xor
shl
mov
out
and
ins
call
loop
inc
sbb
icebp
popa
push
mov
push
add
xchg
mov
scas
and
mov
pop
(bad)
jo
or
pop
mov
jecxz
pushf
and
mov
fisubr
xchg
adc
push
push
pop
xchg
in
inc
stos
jl
jle
or
mul
fsub
push
retf
shl
add
(bad)
lods
fwait
mov
sbb
pushf
add
sub
jo
out
jbe
scas
jb
sbb
jge
xchg
pop
push
jae
and
pop
fldenv
lock
aam
leave
in
add
and
ins
push
cmp
lahf
retf
xor
ror
pop
jbe
fstp
cmc
adc
jecxz
xchg
cmp
pop
inc
xor
(bad)
pusha
mov
sahf
pusha
dec
ins
cmps
mov
or
jl
sub
push
fwait
lahf
xchg
rol
rcr
(bad)
call
mov
outs
add
mov
sahf
aas
retf
loope
lods
lds
out
mov
mov
mov
retf
lds
mov
xchg
iret
inc
cs
icebp
call
sub
(bad)
add
fsub
dec
jg
scas
jl
das
in
loop
in
rcl
xchg
test
(bad)
and
inc
(bad)
adc
jae
add
aas
xchg
ja
bound
(bad)
push
sub
cdq
jg
push
sub
adc
lock
sub
mov
(bad)
adc
jg
call
cmps
icebp
repz
adc
push
stos
adc
or
lods
xchg
lahf
or
push
xor
xchg
outs
hlt
push
pop
xlat
adc
leave
push
and
repz
mov
add
mov
lds
cli
or
xchg
sub
test
mov
cmp
xor
mov
dec
dec
iret
dec
xchg
fild
enter
ret
lods
adc
fsubr
and
data16
mov
jmp
adc
mov
mov
xchg
jecxz
sub
outs
enter
in
pop
cmp
push
mov
ins
bound
dec
pop
pop
push
mov
test
aad
dec
push
mov
imul
call
das
xor
or
mov
stc
and
test
es
jle
sub
xchg
mov
addr16
jl
call
xor
in
inc
and
pusha
fidiv
cdq
jno
push
fst
or
xor
or
icebp
int
mov
addr16
aas
and
dec
and
adc
sub
jmp
mov
push
push
sub
jo
jb
repnz
ret
aad
aam
jb
int3
add
mov
jns
imul
xor
cmp
fcom
pop
in
xchg
repz
into
mov
(bad)
jo
(bad)
sti
push
dec
stos
xor
jge
xchg
cmp
je
outs
xor
neg
xchg
dec
scas
jno
cmp
push
(bad)
rol
sahf
inc
pop
sbb
cmp
inc
pop
aas
sbb
pop
or
jns
push
mov
mov
stos
shl
add
inc
out
pop
clc
mov
ins
or
push
test
and
mov
test
inc
push
mov
imul
nop
or
pop
and
cmp
pushf
inc
sbb
push
push
sbb
jne
pop
pop
rol
in
leave
or
out
ins
repnz
mov
dec
scas
add
cmc
xor
outs
mov
es
ss
xchg
push
(bad)
inc
dec
jno
and
jnp
add
sub
jbe
add
fild
loope
ins
loope
cmp
imul
inc
test
cwde
pop
mov
kxorw
dec
and
hlt
mov
xchg
jae
xor
mov
pop
cld
mov
repnz
outs
or
outs
(bad)
es
sub
cmp
sar
out
nop
sbb
push
fs
ror
rol
out
mov
(bad)
ficom
adc
hlt
and
xchg
sbb
outs
sub
add
or
fisttp
je
cmp
iret
sbb
jbe
push
stos
mov
cmp
cld
cmp
in
bnd
mov
or
aaa
inc
stos
ficomp
mov
cmc
arpl
daa
pushf
data16
jmp
cli
or
retf
dec
xlat
das
sahf
cli
popa
cmps
(bad)
jg
add
dec
lods
inc
dec
dec
movs
aam
and
out
inc
mov
mov
pop
(bad)
and
add
xchg
fist
add
add
mov
inc
add
add
rol
loope
jp
mov
mov
mov
cmps
fst
sub
fs
xor
jo
mov
in
xor
(bad)
(bad)
ins
dec
inc
cmp
and
add
dec
or
cwde
inc
xchg
repnz
aaa
ins
fisub
mov
xor
sbb
and
adc
into
or
mov
xchg
xchg
out
in
scas
sbb
jno
leave
mov
push
pusha
imul
dec
cmp
repz
cmps
dec
(bad)
mov
cli
mov
and
push
xchg
xchg
jmp
pop
addr16
rol
js
inc
xor
jmp
(bad)
mov
xchg
jmp
test
or
dec
test
or
inc
js
mov
arpl
pop
or
nop
pop
fldcw
out
arpl
bound
xchg
jmp
sub
mov
test
or
out
jecxz
push
lods
pop
cwde
idiv
outs
pop
test
fs
loop
dec
add
push
jle
adc
push
cmp
inc
cli
push
jns
mov
push
out
es
fild
mov
mov
jnp
adc
mov
ins
mov
pop
pop
loope
in
push
out
mov
xor
and
mov
mov
movs
and
test
jp
int
inc
xor
ja
(bad)
fdivr
xor
movs
pushf
gs
pop
lahf
ds
push
xchg
or
movs
cmp
jne
push
xchg
fisttp
aad
xchg
cmps
inc
ins
push
imul
cmp
mov
jno
(bad)
push
push
out
inc
sub
jp
les
push
jp
cmps
ja
neg
xchg
sbb
fs
cwde
gs
cwde
add
jae
jecxz
sub
push
mov
jae
es
enter
cmp
mov
lods
retf
jnp
lahf
or
cld
(bad)
adc
fimul
ret
aam
sbb
or
imul
aas
add
in
cmp
mov
or
test
std
ds
icebp
fdivr
jecxz
cs
mov
mov
lods
fld
(bad)
fnstcw
jl
sbb
sub
scas
call
pop
sti
jb
cli
inc
mov
sbb
xor
or
scas
inc
retf
and
hlt
xor
xchg
call
test
sbb
pop
xor
inc
mov
inc
pop
iret
or
cmps
or
push
and
iret
push
movs
out
or
jne
adc
inc
xor
inc
loop
out
into
mov
jecxz
jnp
jmp
mov
add
mov
jno
jmp
in
jle
dec
xor
jae
mov
add
or
sub
imul
popa
mov
(bad)
xlat
out
jle
push
mov
sbb
jle
in
lea
adc
movs
mov
jmp
sub
fs
mov
cmp
xlat
pop
cmp
cmp
inc
mov
fs
les
test
jmp
dec
stos
cmp
pop
in
fmul
ror
addr16
(bad)
outs
adc
mov
je
imul
mov
or
mov
into
push
fs
jp
mov
dec
add
xchg
ret
rep
aaa
cmc
mov
fisubr
or
cwde
cmp
xchg
into
ins
ja
xchg
inc
mov
mov
push
gs
mov
jl
sbb
or
clc
lock
cmp
gs
mov
pop
and
ret
push
imul
shl
xor
pushf
pop
aaa
ds
sub
ss
xchg
dec
test
jne
fwait
mov
inc
into
fnstcw
dec
sbb
sub
mov
adc
cld
lods
scas
not
fadd
sbb
and
mov
je
retf
add
daa
mov
or
jo
and
es
sbb
or
adc
mov
daa
adc
jle
daa
dec
je
dec
xlat
mov
or
push
sbb
(bad)
loop
ror
xchg
jne
and
(bad)
inc
enter
pop
sub
ds
inc
sbb
sub
jmp
inc
jnp
outs
mov
sub
xchg
lods
pusha
and
adc
das
hlt
xor
repz
push
jmp
jne
out
xchg
stos
ss
and
push
test
jae
or
mov
xlat
jg
sub
mov
ret
jbe
faddp
xor
mov
test
out
loopne
jns
jns
jmp
(bad)
(bad)
test
ins
movs
add
pop
mov
fcom
pop
xor
or
jge
xchg
cld
mov
inc
call
hlt
ror
gs
(bad)
repnz
mov
mov
sbb
jne
cmp
inc
push
adc
dec
stc
es
out
sbb
inc
or
pop
dec
mov
lds
mov
or
test
push
imul
lods
enter
add
xchg
pop
jns
rol
cs
cmp
ret
aaa
xchg
leave
xor
xor
stc
imul
sub
in
jg
(bad)
(bad)
div
je
pop
daa
in
and
fld
js
mov
adc
mov
mov
ds
lods
lea
sub
cmps
(bad)
cli
fist
mov
(bad)
in
inc
nop
in
push
pop
xor
repnz
pop
das
push
pop
les
xor
(bad)
or
lods
inc
sbb
mov
pop
xlat
xlat
idiv
and
lds
jl
loop
call
rol
jg
dec
sar
ret
std
dec
cmp
out
adc
mov
push
scas
xor
sti
std
push
mov
mov
and
lea
cli
or
or
add
pop
sub
jb
lds
ds
add
mov
mov
cmp
call
mov
es
and
jnp
xor
rcl
jb
test
dec
aas
daa
xor
ret
mov
cmp
jmp
(bad)
dec
sub
ret
push
sub
dec
out
nop
loop
dec
cmps
pop
pusha
sub
fdivp
out
bound
mov
and
xchg
pop
call
test
push
std
xor
mov
in
lahf
cmp
adc
pop
call
adc
push
jns
sahf
mov
mov
pop
push
jl
dec
pop
or
jle
sbb
dec
cmp
popf
inc
lods
add
stos
pop
push
shr
(bad)
imul
test
es
mov
mov
inc
xor
fcom
sahf
and
jp
sub
aad
lds
and
add
ror
fsub
imul
rcl
dec
je
ret
mov
(bad)
or
shl
jecxz
jmp
jmp
es
cs
jecxz
mov
add
jl
adc
out
loope
xor
jmp
(bad)
loope
pop
jbe
fs
int3
test
cwde
push
test
mov
es
pop
loopne
(bad)
xor
push
adc
call
lods
das
aaa
add
add
mov
std
scas
push
or
mov
sub
jmp
push
pop
dec
icebp
pop
pop
cmp
xor
xor
cmc
int3
jp
(bad)
ja
adc
adc
mov
iret
adc
push
xor
test
mov
xchg
movs
add
(bad)
stos
xchg
fsubr
ins
dec
dec
push
pop
aas
outs
icebp
jmp
cmp
cmp
movs
xor
push
rcr
jmp
loope
jbe
fisub
hlt
popa
xchg
sbb
into
pop
imul
test
(bad)
stc
inc
and
outs
or
iret
mov
and
test
jo
sti
shl
aam
and
leave
mov
mov
pop
push
pop
push
pop
cmc
shl
adc
jnp
neg
adc
jmp
cmp
ret
shr
sub
das
fnsave
add
xor
out
jne
jp
sub
cld
mov
pop
mov
imul
pop
xor
sti
addr16
or
cmps
mov
dec
and
outs
pop
cmp
adc
fwait
mov
jbe
je
lahf
dec
cmp
sbb
jne
in
jns
sbb
xor
pop
push
xor
lahf
enter
fld
in
inc
cs
pop
pop
loope
jbe
pop
out
fimul
xchg
xlat
ret
mov
mov
mov
add
inc
and
xlat
jnp
repz
outs
dec
adc
movlps
jo
mov
jno
xchg
outs
pusha
ret
fmul
fidivr
mov
jno
sub
jno
fwait
mov
fisubr
fcom
shl
jbe
push
sar
add
into
mov
pushf
jge
or
add
fs
lds
add
enter
rcr
aad
sbb
sbb
mov
xor
add
div
ret
retf
scas
xor
sub
mov
daa
mov
adc
shr
jp
mov
mov
adc
xchg
fs
pop
push
rcr
pop
pop
test
rcl
add
mov
retf
jns
imul
stos
pop
mov
or
mov
dec
repz
out
mov
scas
stos
inc
popa
scas
pop
and
push
test
cmp
mov
sub
bnd
test
mov
cwde
mov
inc
mul
mov
inc
mov
lods
or
and
cmp
repnz
in
icebp
aas
sbb
jmp
push
(bad)
int3
(bad)
repnz
pop
mov
and
sahf
rcr
fs
sbb
add
dec
movs
into
sbb
cmp
jnp
fdivr
loope
mov
xor
das
cld
inc
sbb
jno
mov
xchg
das
jo
loop
gs
sbb
ret
fadd
and
and
sbb
pop
inc
nop
push
inc
jne
sar
cdq
call
mov
add
jae
xchg
adc
movs
adc
sbb
das
xor
mov
xor
xchg
add
stc
out
jmp
call
stos
loop
xchg
(bad)
fnsetpm(287
inc
cmc
lds
stc
cmc
cwde
loop
in
and
(bad)
pop
pushf
or
cmp
adc
sub
retf
dec
addr16
mov
xchg
inc
mov
inc
sub
mov
and
add
retfw
jo
xor
add
cmp
in
xchg
xor
bound
fwait
mov
(bad)
mov
jnp
xor
call
test
icebp
mov
and
cwde
icebp
fidivr
inc
xchg
clc
ficom
movs
adc
mov
jge
sbb
daa
les
pop
iret
movs
and
cs
addr16
mov
push
stos
mov
leave
mov
out
push
in
pop
int
jmp
pop
pop
dec
hlt
sub
inc
pushf
sub
iret
adc
mov
mov
jecxz
mov
push
retf
(bad)
arpl
lds
call
pop
mov
mov
mov
cmps
pop
sbb
fist
mov
outs
dec
xchg
fldcw
dec
adc
inc
mov
int3
mov
retf
xor
pushf
adc
arpl
scas
jle
xor
sbb
call
mov
in
(bad)
sti
push
push
sub
inc
addr16
adc
cmp
lock
inc
inc
and
mov
(bad)
(bad)
push
add
sbb
adc
add
fs
std
into
jns
test
lods
popf
inc
repnz
retf
out
mov
or
xchg
xor
inc
xor
add
inc
std
mov
add
popa
inc
push
or
xor
mov
push
pop
mov
mov
pop
xor
jae
jb
fst
dec
fwait
xor
int3
jae
pop
dec
loope
test
cmp
hlt
leave
sbb
xor
xor
push
(bad)
cmc
int3
push
(bad)
ja
lods
mov
in
push
stos
push
adc
mov
fcomp
xchg
test
icebp
xor
(bad)
ror
clc
stos
mov
pop
stos
loope
lock
leave
lds
mov
jnp
movs
jmp
mov
imul
push
adc
lds
mov
sbb
add
ss
cmp
fcomp
je
inc
imul
ins
pop
in
xchg
stos
ret
sar
daa
(bad)
fcomi
mov
jl
sub
pop
xor
andps
or
lock
dec
movs
into
xchg
jno
pop
xchg
dec
div
push
sahf
and
jns
nop
dec
xchg
pop
addr16
scas
and
pushf
adc
push
push
shl
or
out
ins
outs
pop
xchg
dec
jmp
ja
sub
jg
repnz
data16
fisttp
and
das
call
dec
adc
mov
xor
sub
loop
jne
inc
push
icebp
pusha
dec
scas
and
xchg
stos
cmp
stc
cs
sbb
dec
mov
sbb
nop
mov
jae
js
popf
mov
lea
push
and
js
xor
inc
rcr
or
pop
push
call
inc
mov
shr
add
fild
mov
cmp
jbe
rcl
mov
rcr
das
(bad)
jl
test
shl
pop
xlat
stc
add
fdivr
jo
scas
and
cwde
loopne
int
retf
arpl
mov
sbb
xchg
xor
and
sbb
pop
adc
sbb
outs
aaa
xor
pop
jns
test
sbb
adc
and
out
repz
cmp
mov
ror
dec
stos
pop
mov
std
cli
mov
frstor
int3
mov
mov
mov
cmp
jne
mov
stos
jnp
mov
mov
loope
and
mov
cmp
loope
inc
push
icebp
mov
mov
jle
xchg
ret
or
iret
fbstp
jno
or
les
lds
xor
jle
pop
(bad)
adc
add
mov
out
sbb
ja
sbb
pop
icebp
in
iret
inc
pusha
or
push
arpl
and
jnp
and
mov
hlt
mov
pusha
jmp
xor
xchg
xchg
test
call
jg
es
int3
inc
adc
mov
mov
sbb
jecxz
sbb
mov
cld
mov
pop
jecxz
lsl
in
sbb
stos
mov
xchg
pop
xchg
xchg
xchg
and
sub
stos
inc
mov
mov
inc
inc
stos
xchg
loop
mov
ffreep
leave
inc
mov
ins
int3
sub
aam
or
std
rcr
in
push
or
test
add
jno
xor
and
push
xor
aam
std
xchg
xlat
scas
mov
sbb
repnz
enter
and
cmp
aam
mov
aad
(bad)
retf
rcr
mov
loopne
pop
pushf
pop
push
cwde
(bad)
pop
div
dec
dec
xchg
rcr
(bad)
mov
fbstp
add
mov
pusha
push
sub
add
xchg
rcl
and
adc
stc
jl
mov
shl
movs
pop
jno
call
cld
mov
dec
add
mov
cmp
(bad)
mov
loopne
inc
in
push
jbe
mov
xchg
jb
je
mov
pop
adc
push
sub
or
je
push
add
hlt
mov
and
pop
loopne
jp
xor
fsub
adc
cld
sbb
xor
cli
pop
repnz
and
out
sbb
xlat
out
push
stos
loope
xlat
jmp
and
std
pop
and
daa
retf
adc
adc
sbb
or
stos
push
mov
stos
sbb
xchg
movs
out
ret
xor
xor
test
ss
xchg
ja
inc
mov
jle
mov
xchg
xor
xchg
ret
out
popa
sahf
xchg
test
pop
cs
and
mov
push
mov
inc
cwde
sbb
shr
cmps
add
sbb
cmp
xor
jmp
cmp
sbb
mov
xor
xor
sbb
dec
sbb
lods
dec
mov
mov
icebp
fs
movs
nop
cwde
nop
call
daa
mov
jb
or
push
push
mov
fimul
inc
mov
dec
jae
pop
popa
cmps
loop
imul
out
fcmovb
push
outs
test
lahf
loopne
xchg
and
adc
cmc
and
add
add
cdq
iret
xchg
pop
or
cmc
hlt
cmp
add
or
imul
dec
dec
rol
mov
sub
mov
mov
xor
stos
data16
stc
push
ss
aas
pop
jg
add
in
ds
fstp
daa
mov
mov
or
ins
cmp
loop
in
test
pop
cmp
xchg
pop
cdq
icebp
stos
scas
stos
add
add
jge
jne
sbb
mov
cdq
out
call
mov
aas
iret
aam
cmps
cli
(bad)
ffreep
mov
xor
pop
pop
test
int3
bound
pop
fild
pop
(bad)
movs
push
jae
mov
fcom
mov
mov
inc
sahf
adc
call
jno
xor
fwait
add
cmp
pop
inc
inc
add
test
jp
popf
mov
(bad)
xor
pop
mov
cmp
mov
sub
inc
pop
xchg
repz
mov
mov
ror
xor
xchg
add
mov
jne
scas
dec
sbb
push
push
pop
idiv
test
xchg
push
es
cld
(bad)
push
adc
and
mov
add
sbb
xlat
adc
add
pusha
mov
and
cwde
loopne
iret
pop
mov
xchg
mov
loopne
fstp
nop
stos
stc
inc
jne
sub
retf
call
mov
ret
(bad)
jp
int3
pop
daa
dec
in
ins
xor
lods
jge
ret
mov
adc
jmp
clc
mov
fild
in
stc
cmc
dec
mov
add
aaa
mov
loopne
js
jl
mov
int
or
(bad)
cmp
out
arpl
adc
jge
aam
push
out
ins
repz
sbb
out
shl
sub
jmp
mov
(bad)
(bad)
push
loop
cwde
jmp
int3
adc
cmp
dec
sbb
test
fidivr
adc
(bad)
into
in
and
repz
cmp
fild
ins
enter
nop
popa
nop
mov
shrd
mov
fadd
inc
rcl
je
clc
imul
mov
sar
enter
pusha
add
ss
popf
out
and
cld
loope
cmp
pop
mov
and
cdq
jmp
or
scas
push
add
adc
nop
fisub
xchg
mov
loop
(bad)
fmul
xchg
daa
xchg
sbb
jb
mov
loope
mov
shl
shl
aad
adc
(bad)
adc
loopne
pop
(bad)
imul
mov
add
shl
or
cmps
aad
jmp
mov
fdivr
cs
push
pop
sub
pop
pop
(bad)
retf
jnp
add
push
ds
das
in
xchg
mov
pop
scas
jp
das
into
xchg
jmp
in
gs
mul
ja
xchg
lods
mov
or
push
cdq
push
push
jne
call
inc
or
cmp
pop
loopne
mov
xor
pop
shrd
sub
jne
ja
pushf
and
lods
adc
push
(bad)
mov
ins
mov
in
cmps
test
jg
push
pop
ret
sbb
outs
inc
cs
lods
into
xchg
adc
retf
or
loope
adc
adc
and
mov
adc
xor
rol
cmp
adc
push
adc
xor
je
mov
mov
push
jmp
and
aad
cld
ficom
fadd
lock
test
lods
ins
pop
lods
dec
dec
xchg
(bad)
int3
movs
cmps
stos
repnz
jg
sbb
add
xchg
adc
xor
lea
fs
xchg
mov
sbb
fdiv
mov
jne
and
pop
inc
xchg
(bad)
mov
xchg
xor
xchg
scas
loopne
push
inc
aam
or
cld
iret
or
(bad)
mov
xor
xchg
pop
inc
mov
cmp
pop
ret
dec
pop
push
stos
push
add
popf
shl
mov
xchg
lock
cwde
jbe
inc
les
in
ins
mov
enter
mov
mov
mov
mov
push
sub
cmp
cmp
(bad)
cdq
push
sbb
stc
imul
mov
(bad)
jle
cmc
add
xlat
mov
popa
pop
test
clc
outs
das
add
or
ret
rol
xchg
add
ins
data16
pusha
jge
imul
xchg
mov
test
fcom
dec
test
in
push
sub
sub
call
mov
sbb
nop
(bad)
addr16
mov
mov
mov
rcl
xlat
mov
add
fwait
cmp
inc
inc
and
fisub
aam
sbb
inc
mov
in
pop
ret
repz
dec
add
cmp
jns
xor
movs
dec
rcl
jle
sti
push
imul
inc
callw
inc
cmp
mov
repnz
mov
aaa
sub
pop
inc
mov
call
pop
cmp
xor
cld
out
adc
sbb
mov
(bad)
xor
jp
js
inc
push
dec
xchg
pushf
xchg
fcomp
out
pushf
retf
mov
jmp
xor
fdivrp
call
sub
call
add
sbb
mov
push
imul
push
xchg
add
cmp
jmp
add
bound
out
mov
(bad)
hlt
mov
(bad)
xlat
jmp
inc
xor
imul
fisub
sbb
cmp
xor
popa
jle
shl
gs
and
sub
out
push
retf
gs
test
stos
jno
inc
cmps
fistp
ja
aaa
push
cwde
pushf
outs
pop
and
jmp
xor
mov
loope
pop
jmp
inc
icebp
adc
jo
stc
loope
shl
sbb
pop
fs
push
lock
sbb
(bad)
and
jmp
retf
cs
lahf
cmp
xor
cmp
push
dec
iret
jo
adc
shl
and
xchg
inc
mov
daa
pushf
xor
dec
(bad)
shl
lods
call
push
add
and
xchg
mov
je
addr16
ds
xor
std
add
pushf
sub
xchg
mov
sbb
and
mov
and
retf
lods
jmp
(bad)
push
xor
(bad)
call
pop
or
mov
mov
(bad)
pop
sub
mov
stos
arpl
push
cmp
inc
cmp
xchg
and
int3
mov
sbb
dec
int3
dec
mov
aam
cmp
push
inc
(bad)
mov
test
adc
jg
mov
mov
dec
mov
pusha
pop
inc
sub
popf
(bad)
mov
mov
mov
push
out
mov
mov
lods
jecxz
push
repz
push
xor
fst
cld
dec
jmp
call
gs
inc
shl
push
and
sub
push
xor
out
fsub
mov
cmp
push
lods
dec
xor
push
push
mov
mov
or
push
sti
retf
dec
sbb
jb
lods
stc
inc
clc
jge
sbb
retf
dec
push
scas
sbb
mov
inc
mov
pop
in
rcr
retf
adc
sbb
std
clc
popf
xor
pop
xchg
or
mov
sub
fcomp
jmp
mov
add
rcl
rcr
mov
pushf
push
sub
clc
jp
push
mov
cmp
pop
inc
stos
into
inc
sub
push
ret
sub
mov
call
or
(bad)
loop
push
mov
jp
bswap
push
dec
(bad)
fwait
jg
cmps
movs
xchg
fsubr
pop
repz
test
scas
xor
and
inc
and
push
scas
out
retf
jb
pop
cmp
jg
addr16
dec
add
or
fsub
or
stos
cld
outs
inc
jne
mov
fst
in
jb
repnz
stc
das
jbe
enter
lods
into
adc
clc
xchg
sbb
or
mov
aad
xor
cmp
stc
sub
jle
stc
adc
pop
leave
inc
inc
push
push
in
cli
popf
rcr
cmp
adc
retf
push
lock
ds
clc
sti
xor
pop
dec
push
ja
pop
push
repnz
adc
sbb
ds
clc
pusha
rcr
in
mov
call
dec
mov
dec
push
ja
push
push
push
mov
pop
int3
movs
sbb
sahf
ins
sbb
adc
pop
cli
jmp
cmp
test
cli
add
cdq
shl
fstp
xchg
stc
clc
xchg
test
inc
xor
(bad)
scas
mov
push
(bad)
rol
out
jno
(bad)
fild
xchg
dec
push
cmp
xchg
les
sub
ins
ret
in
jle
fstp
pop
mov
shl
inc
pop
int3
mov
into
cmps
dec
jae
cmp
out
inc
mov
sub
add
scas
jmp
sti
mov
xor
jmp
stc
push
aad
sbb
or
fwait
mov
loope
cld
in
retf
mov
fisub
sti
xor
adc
pop
(bad)
aam
test
push
mov
sub
push
pop
push
mov
jp
cwde
mov
cmc
xchg
mov
retf
pop
and
lods
aaa
jg
repz
fsubr
push
in
push
inc
xchg
push
inc
xor
xchg
sbb
sub
and
sub
inc
gs
jb
hlt
test
mov
sub
shr
jge
pop
mov
jge
cmp
mov
xchg
into
inc
and
sbb
dec
test
arpl
stos
std
lds
xchg
xor
test
repnz
and
pop
mov
jle
pop
push
or
push
push
into
pop
inc
push
push
mov
mov
call
cs
jnp
ds
sub
jl
cmps
nop
mov
vpaddsb
iret
add
adc
xchg
cmps
jne
ret
hlt
dec
and
fbstp
push
out
mov
push
mov
int
out
test
ret
dec
loopne
add
xchg
icebp
sbb
push
sub
jno
fimul
scas
arpl
call
cmp
imul
pop
cmp
mov
data16
mov
adc
pop
mov
into
xchg
sub
pop
push
loopne
add
fistp
push
pushf
and
pop
sub
nop
repnz
inc
fldenv
inc
data16
xacquire
cmp
std
in
mov
xor
(bad)
sub
adc
cmp
(bad)
stc
jno
jno
or
test
in
jns
push
add
mov
add
xchg
jl
lods
ret
push
or
mov
enter
inc
inc
pop
mov
dec
sub
dec
jo
cli
std
pop
fucomp
shl
add
push
sub
sbb
popa
addr16
out
xchg
jecxz
out
push
imul
adc
sub
movs
stos
pop
xchg
(bad)
pop
adc
sub
push
xchg
mov
xlat
mov
scas
aam
push
mov
xor
sub
xchg
es
sub
hlt
rol
data16
dec
(bad)
and
nop
or
cmp
jmp
mov
test
cmc
xor
dec
sub
jl
jge
cmp
stos
fst
xchg
pop
jle
scas
es
rep
mov
jg
dec
mov
cmp
in
ja
jbe
cmp
adc
rol
inc
dec
loop
xlat
stos
sbb
cld
sub
outs
mov
movs
mov
or
test
popa
inc
cli
push
inc
outs
jmp
loop
test
sti
or
xor
call
mov
sahf
lods
sbb
mov
ret
mov
cld
adc
loop
push
mov
cmp
mov
js
fstp
jbe
mov
in
mov
cmp
shr
(bad)
jo
dec
addr16
aas
jg
mov
push
(bad)
fs
cmp
enter
and
scas
popa
xchg
mov
rcl
ja
cmp
stos
fwait
fwait
xchg
enter
sahf
mov
scas
fxch
std
pop
shr
pop
ffreep
adc
push
adc
add
mov
ja
push
test
ins
adc
out
sbb
fwait
jp
dec
cli
(bad)
jg
dec
aaa
jno
ins
ja
mov
jp
pop
mov
outs
sbb
(bad)
sbb
out
(bad)
mov
ss
sbb
or
adc
ins
jg
das
dec
pop
arpl
sbb
push
jnp
cmp
cmp
js
cld
pop
push
fnsave
lods
in
pop
push
dec
mov
xor
and
lahf
mov
mov
sub
adc
iret
mov
mov
pop
popf
(bad)
fcmovne
adc
jno
test
out
push
rol
mov
jge
repnz
add
push
sti
adc
mov
jne
or
and
or
xor
or
cmp
and
mov
(bad)
das
add
sti
clc
push
pop
iret
fdivr
jne
inc
jbe
push
popf
in
ds
test
or
sbb
sti
loope
xchg
xor
stos
call
mov
test
arpl
add
or
adc
test
imul
sar
sub
loop
pop
clc
enter
add
pop
cmps
mov
mov
inc
jl
mov
xor
hlt
or
push
(bad)
rcl
cmp
pop
js
into
xor
mov
imul
cmps
hlt
jmp
pop
sub
mov
pop
aas
and
data16
(bad)
cmp
xor
call
popa
push
rol
inc
(bad)
adc
repz
sbb
jb
(bad)
(bad)
cli
jecxz
dec
ficom
mov
jl
icebp
test
push
nop
xor
or
fist
in
out
jge
loop
ins
mov
push
dec
das
je
int3
xchg
out
dec
pop
int3
cmc
mov
dec
mov
adc
lahf
xlat
cmp
dec
(bad)
hlt
rol
das
adc
inc
pop
inc
sub
jae
retf
xchg
xchg
loopne
fstp
sbb
imul
push
pusha
or
in
pop
jns
jge
sti
cld
loopne
out
cdq
sbb
mov
adc
repnz
loop
out
sti
in
lock
retf
mov
sbb
inc
mov
sti
mov
jmp
push
sbb
xor
mov
adc
cwde
fidiv
or
pop
mov
xor
cs
test
adc
or
mov
in
addr16
dec
pop
dec
out
call
pop
arpl
mov
sar
aas
jno
sub
cmp
push
mov
adc
jnp
pop
cmp
cli
jb
out
imul
test
dec
lods
arpl
xchg
push
mov
test
ror
mov
and
jbe
fwait
and
inc
or
fmul
outs
and
push
aad
mov
ins
or
or
ds
fild
xchg
pop
outs
fcmovnu
es
jge
ss
das
mov
xor
add
popf
(bad)
dec
jle
jmp
(bad)
xlat
sar
ins
or
mov
inc
mov
clc
dec
sub
pop
in
scas
pop
movs
cli
xor
ret
cwde
(bad)
sbb
xchg
dec
mov
fwait
loop
adc
lock
std
adc
nop
and
jne
sub
sbb
or
mov
loopne
add
popf
nop
dec
cli
pop
leave
jecxz
mov
clc
outs
(bad)
dec
in
add
pop
pop
ins
int
scas
add
ret
ret
std
hlt
push
mov
sub
push
add
xlat
jae
dec
xchg
outs
inc
mov
jbe
mov
sub
cmp
add
(bad)
xor
or
arpl
shl
add
in
mov
xchg
pushf
sbb
pop
mov
xchg
fsub
adc
out
loope
scas
and
add
aam
inc
ret
xor
adc
movs
inc
cmp
mov
add
dec
xor
je
icebp
rcl
xchg
xor
dec
cmp
adc
call
scas
sbb
cwde
mov
add
push
and
mov
pop
repz
push
pusha
mov
stc
mov
sbb
in
stc
outs
adc
add
into
pop
div
pop
add
pusha
lahf
xchg
aas
mov
int
je
inc
push
int3
adc
xor
lods
xor
jb
inc
popa
push
and
fs
(bad)
jmp
cmp
pusha
ins
movs
(bad)
repnz
nop
fwait
retf
adc
in
mov
movs
ss
shl
inc
std
popf
sahf
not
sbb
push
jbe
pop
or
sub
jle
adc
mov
sub
cmc
mov
mov
add
dec
mov
dec
mov
cdq
enter
xor
ds
jbe
fisubr
lods
cmps
ins
dec
les
xchg
mov
sbb
mov
aas
and
in
xchg
sbb
jne
mov
or
je
pop
stos
sub
aaa
out
pushf
adc
pushf
cmc
sub
dec
bound
fcmovne
loopne
in
movs
outs
out
jmp
mov
mov
and
in
cmps
inc
xchg
dec
mov
stos
cwde
and
jno
dec
cdq
mov
lods
xchg
jecxz
sub
ins
dec
movs
xor
push
imul
or
add
mov
ja
push
test
xor
daa
adc
ins
js
dec
adc
mov
cli
xor
sti
lds
jo
adc
and
sub
sbb
test
ins
cmp
jl
xor
iret
sub
(bad)
jle
out
push
hlt
fdivr
mov
cmp
dec
xor
push
cmp
pop
inc
mov
mov
fcomp
in
sbb
xor
lock
aaa
cvttps2pi
jae
test
jp
out
sub
outs
xadd
sub
pop
std
adc
xor
and
std
fild
cdq
pop
clc
jp
add
shr
pop
jae
push
shr
xchg
xchg
je
jg
movq
or
shl
sub
push
in
adc
cmp
inc
push
mov
jmp
or
fcmovnbe
sub
push
stos
and
dec
outs
jmp
mov
xchg
cld
iret
pop
xor
dec
jmp
push
sub
out
mov
shr
ror
sub
shl
push
xchg
test
push
movs
lock
jl
cli
mov
pop
push
xchg
push
daa
cdq
xchg
pop
sbb
dec
mov
mov
retf
add
add
stos
ret
sub
push
adc
and
dec
in
mov
in
fdivr
mov
jbe
push
jp
outs
stc
add
mov
aam
imul
in
fwait
loopne
pop
or
fbstp
enter
into
mov
fsub
mov
rol
mov
jno
jmp
int
adc
jne
adc
shl
inc
pop
out
sbb
mov
sbb
pop
js
add
cmps
ins
xchg
repz
add
inc
repz
mov
push
push
gs
out
and
(bad)
(bad)
mov
dec
les
push
(bad)
dec
rcl
adc
push
mov
fst
retf
sar
dec
stos
pop
je
pop
ja
inc
cmp
fnsetpm(287
pop
(bad)
jmp
and
mov
outs
call
push
jae
xlat
retf
pop
push
repz
imul
mov
inc
cmp
sub
push
repnz
sub
pusha
inc
shr
xchg
lds
daa
dec
std
pop
fistp
nop
idiv
mov
out
xchg
mov
xchg
xadd
mov
add
cmp
pushf
xor
aaa
mov
mov
dec
out
nop
jo
ds
xor
ret
leave
pop
sub
test
dec
gs
(bad)
mov
out
std
fbstp
repnz
jb
push
in
(bad)
cmp
cmc
jle
test
daa
sar
jmp
mov
xchg
and
or
sbb
pop
mov
mov
cmp
add
xlat
mov
sbb
cmp
movs
pushf
xchg
mov
sahf
jae
jl
dec
adc
stc
retf
jnp
fwait
arpl
je
sar
test
scas
outs
imul
xchg
inc
xchg
add
cmp
loope
pop
in
iret
cmps
call
push
sub
ins
jecxz
movs
lahf
jle
int
in
xchg
pop
add
sbb
push
imul
cmps
ds
add
in
adc
idiv
mov
mov
lods
adc
inc
enter
dec
lahf
lea
cmps
retf
xchg
ins
mov
ret
mov
gs
mov
dec
rol
sbb
repz
jno
mov
aad
xor
in
icebp
stos
lods
aam
(bad)
sbb
cdq
cwde
jmp
fsubr
xchg
xor
test
adc
pop
cmp
inc
and
shl
xchg
add
sbb
cmc
xor
mov
or
xor
pop
add
jae
jb
movs
mov
mov
jns
lods
pop
sub
adc
sub
popa
rcl
inc
jb
mov
imul
xchg
lds
push
ins
xchg
or
add
ss
icebp
or
imul
dec
shl
(bad)
in
ds
mov
dec
mov
aad
ficomp
push
push
add
jae
xchg
or
fsubr
ret
nop
cmp
movs
xchg
dec
dec
add
xor
or
std
mov
jns
xchg
imul
xor
mov
push
jo
mov
add
iret
cmp
aas
aad
dec
pop
call
sbb
jp
fisttp
lods
lea
shl
jle
jmp
pushf
jae
xor
movs
jbe
mov
or
mov
sbb
stos
mov
jg
sbb
sbb
ins
mov
cmp
add
pop
cmc
icebp
icebp
push
sub
rcl
ins
mov
pop
ror
mov
test
(bad)
cdq
(bad)
sub
sbb
jge
xchg
push
sub
(bad)
jmp
stos
repz
push
inc
int
sbb
rcl
inc
leave
jns
dec
das
add
hlt
lock
pop
pop
pop
lods
push
icebp
jmp
xchg
loop
stos
aaa
mov
push
xor
stos
dec
loope
pop
mov
xchg
xchg
out
cmp
test
push
and
adc
sahf
inc
jl
add
in
inc
or
sbb
in
push
mov
pushf
popa
cmc
sti
data16
movs
mov
dec
loopne
out
pop
popa
mov
int
cmp
mov
dec
pop
test
arpl
xor
mov
les
jle
ror
cmp
lea
fcomp
retf
dec
sub
out
stos
push
fidivr
test
push
popa
cld
arpl
inc
cli
mov
sar
push
nop
dec
sub
cs
stos
and
daa
pop
aas
(bad)
int3
xor
xchg
xchg
mov
mov
jnp
push
dec
add
in
jmp
adc
outs
ins
xchg
sub
push
push
jge
xchg
xchg
scas
or
outs
xchg
sub
dec
mov
pushf
in
leave
add
adc
das
xchg
fild
int
push
pop
pop
mov
test
clc
add
jle
cli
mov
sbb
mov
mov
push
and
mov
xchg
mov
cs
inc
sub
fcomp
jnp
add
jp
cdq
out
stos
pop
shr
pop
loop
add
bound
or
inc
ins
xor
jbe
add
mov
sbb
daa
scas
dec
jmp
xchg
jb
pop
cmc
sub
fmul
and
fmul
cmp
sub
jecxz
imul
dec
push
cli
mov
cmc
sub
(bad)
fmul
cmp
popf
xor
dec
dec
add
jg
data16
js
jns
retf
mov
and
mov
iret
popf
push
sbb
std
sbb
ds
inc
(bad)
mov
mov
jnp
adc
stc
into
adc
imul
mov
gs
jge
popa
mov
cmp
jmp
lahf
add
jl
ins
xor
mov
dec
outs
frstor
enter
stos
pusha
push
jns
stos
xlat
dec
ins
sbb
dec
leave
xchg
xchg
dec
xor
(bad)
ficom
mov
sub
mov
js
inc
dec
das
push
outs
or
inc
ds
je
or
cmps
mov
pop
cs
and
and
lods
loope
push
fidivr
cs
pop
sar
call
retf
faddp
int3
mov
push
into
lock
aaa
repnz
cmps
(bad)
(bad)
or
aam
or
je
add
mov
jb
dec
mov
inc
jge
mov
inc
movs
(bad)
jg
cmps
xchg
push
mov
pop
or
jns
jnp
aad
mov
cmc
and
neg
arpl
dec
inc
loope
or
xchg
mov
xchg
rcl
lods
push
mov
sbb
mov
ret
int3
inc
adc
movs
inc
aas
adc
xchg
shr
add
pushf
inc
ss
xor
outs
mov
push
adc
jnp
neg
cli
sub
popf
sti
das
or
out
fimul
sbb
cmp
inc
pop
call
call
dec
mov
ja
jmp
imul
or
clc
and
aaa
mov
int
mov
and
clc
nop
mov
jle
jne
comiss
inc
lock
pop
xchg
mov
(bad)
cmp
inc
ins
out
jecxz
mov
outs
xor
mov
push
mov
sbb
sub
inc
(bad)
push
out
es
out
test
(bad)
and
inc
retf
dec
addr16
cmp
das
pop
adc
jae
(bad)
das
sbb
inc
fnstcw
mov
sti
sbb
adc
add
imul
ja
xchg
pop
add
mov
adc
jle
div
dec
js
setbe
cmps
or
and
push
pusha
sti
leave
cmp
jmp
xchg
xor
cmps
dec
mov
ds
(bad)
scas
and
stos
ins
pusha
mov
cld
cwde
(bad)
dec
mov
ins
dec
adc
pop
lea
push
dec
cmp
xchg
rcr
push
shl
es
aam
int3
dec
jp
ja
mov
outs
xchg
or
mov
out
shr
inc
adc
shl
mov
outs
jge
sbb
dec
jae
pop
push
xor
enter
rcr
sbb
push
or
xor
hlt
jbe
pop
xchg
mov
sub
mov
xor
fwait
pop
or
nop
fisub
imul
fbstp
jb
loope
fidivr
and
add
mov
cdq
mov
ficom
and
out
(bad)
pop
aaa
repnz
pop
add
fcomp
icebp
hlt
ins
dec
sub
and
repnz
sar
out
lods
jp
dec
retf
fs
dec
ja
add
push
loop
stos
push
mov
retf
sbb
dec
and
adc
mov
outs
(bad)
sti
adc
inc
and
add
adc
popa
inc
or
cmp
add
(bad)
adc
mov
stos
popf
fild
lea
(bad)
sbb
sub
jns
add
enter
jecxz
or
push
lods
jge
inc
jns
aam
outs
enter
js
pop
pop
pop
int
mov
ret
jp
cdq
mov
jnp
dec
data16
fst
and
xor
xor
addr16
dec
cli
js
nop
pop
xchg
retf
test
sti
jmp
(bad)
std
dec
ja
(bad)
sub
cwde
lock
xlat
adc
and
pop
xchg
mov
lods
xlat
or
out
outs
inc
add
lds
xchg
cs
sub
ins
jnp
add
iret
push
mov
push
fdivr
adc
pusha
mov
enter
sub
cmp
ss
xor
pop
call
adc
ins
inc
xchg
xchg
stos
mov
jno
in
mov
ret
mov
xchg
les
bound
jo
ss
repnz
cmp
loope
dec
outs
cld
icebp
cmps
retf
loop
(bad)
mov
cli
sub
inc
int
pmulhuw
pop
hlt
xor
add
adc
loopne
sbb
bound
ins
pop
mov
sub
mov
and
xchg
es
push
xchg
xor
imul
call
dec
jmp
das
ins
pop
xor
dec
cmc
(bad)
add
inc
fnsave
jge
push
loopne
mov
sti
adc
push
push
aas
mov
iret
mov
aad
outs
fwait
stc
mov
sbb
clc
(bad)
ds
xor
push
das
cmovae
push
mov
out
add
imul
mov
cwde
mov
xor
mov
test
ret
cdq
(bad)
scas
mov
fwait
scas
dec
sub
inc
mov
mov
sti
jg
daa
pop
shl
jp
push
bound
mov
xlat
popf
or
imul
mov
mov
test
mov
cmp
out
xor
test
ss
fwait
push
inc
cmps
mov
jp
int
mov
xor
jl
push
outs
ins
int
fadd
js
sbb
cdq
sub
mov
add
jo
push
call
das
lods
aas
popa
push
sub
(bad)
fs
or
test
cmp
frstor
imul
or
gs
add
jne
inc
cwde
lahf
xor
mov
jmp
or
es
push
int3
xchg
mov
iret
lock
loope
lea
xchg
(bad)
test
push
pop
xor
mov
fwait
adc
xchg
fistp
jnp
std
retf
xchg
inc
pop
inc
ret
mov
ss
outs
clc
imul
add
and
cmp
gs
cmp
cmp
bound
cs
mov
cmp
aam
push
cdq
jb
jns
cmp
mov
pop
outs
push
mov
and
mov
sbb
adc
or
jge
sub
pop
mov
xor
pop
not
sbb
pop
pop
shl
pop
mov
leave
test
mov
in
sub
in
cmps
ss
popf
(bad)
xor
call
call
bound
rol
mov
mov
rcr
inc
push
push
out
test
mov
call
jne
call
or
call
rol
mov
mov
xchg
mov
bound
retf
rcl
adc
and
aas
mov
leave
scas
mov
or
mov
xchg
dec
mov
sub
outs
rcr
sub
jns
push
test
xor
lock
rol
dec
add
je
or
adc
push
xor
fld
repz
mov
xchg
fsubrp
and
inc
dec
adc
push
jl
scas
push
and
rcl
movups
fsubr
xchg
mov
inc
mov
push
and
sahf
aas
adc
jnp
ror
sbb
and
sub
fidivr
pop
cli
cmps
xor
mov
sar
adc
rol
dec
push
in
ds
shr
jmp
fs
and
setbe
jge
xchg
icebp
dec
xor
adc
mov
es
and
dec
xchg
add
(bad)
adc
pop
gs
bound
arpl
inc
push
xchg
xchg
pop
in
and
nop
arpl
cmp
add
lods
jae
ja
push
pop
jle
mov
mov
in
cmp
jns
aaa
push
stos
jbe
sub
mov
out
inc
and
cwde
mov
sbb
clc
imul
fst
mov
cmp
ins
cmp
sti
jle
adc
and
pop
aad
jl
push
xchg
fiadd
push
xchg
mov
mov
std
mov
loop
es
jmp
arpl
mov
popf
imul
pop
sub
add
dec
dec
int
cmp
xchg
pop
aam
je
in
mov
jecxz
hlt
imul
jl
xchg
jmp
xchg
retf
in
rcr
xchg
(bad)
mov
mov
mov
shl
fist
mov
pop
scas
outs
int3
sar
out
in
nop
cmp
jbe
rcr
adc
cmp
xchg
lahf
and
fiadd
xor
sub
das
cmp
mov
pop
mov
mov
pop
xor
fs
cmps
nop
mov
dec
mov
xchg
scas
sti
push
out
retf
add
or
jp
inc
dec
xchg
mov
gs
fcmovnu
push
repz
lds
or
std
lods
and
push
fidivr
hlt
jb
dec
cmp
adc
scas
xchg
adc
lds
add
pop
leave
lods
add
(bad)
push
jo
jecxz
jbe
(bad)
inc
clc
adc
mov
hlt
sbb
es
arpl
or
fist
les
dec
shl
scas
stos
xchg
ds
sub
jmp
sub
out
jbe
fdivr
popa
sub
lods
mov
mov
xchg
addr16
mov
mov
ja
data16
cmp
ret
sbb
xchg
push
not
inc
pop
popa
dec
push
sub
fld
pop
or
and
(bad)
jno
retf
or
and
sbb
xchg
pop
xchg
inc
sub
jns
mov
(bad)
jbe
aam
mov
push
adc
dec
mov
xchg
push
and
add
xchg
cmp
or
pop
outs
cld
and
hlt
ror
cld
out
cmps
aam
(bad)
movs
(bad)
xor
les
fbstp
jnp
mov
mov
cwde
out
jecxz
ret
mov
movs
push
outs
push
xchg
fild
addr16
pop
outs
inc
jns
sub
push
push
test
outs
ja
stos
scas
lods
outs
pop
mov
into
pop
sub
ror
push
xor
data16
jecxz
inc
cmp
call
xchg
xor
mov
in
and
stc
pop
mov
xchg
jg
jge
xchg
mov
cmp
lods
pop
xor
jmp
pop
jmp
adc
xchg
enter
dec
or
gs
addr16
pop
cmp
iret
fsubr
jno
mov
push
mov
in
sar
and
mov
sub
mov
lea
and
sub
and
cmp
and
retf
mov
dec
adc
dec
fisubr
out
sub
xor
jmp
mov
(bad)
dec
mov
jecxz
sub
dec
shr
xor
sub
pop
imul
mov
pop
push
dec
or
sub
es
in
hlt
dec
out
mov
mov
mov
aad
mov
sbb
lahf
push
ds
mov
inc
or
stc
test
jmp
pop
daa
jmp
pop
mov
mov
sbb
mov
icebp
inc
sub
jo
xor
cmps
sbb
or
rcr
mov
icebp
jmp
lds
mov
repz
sbb
(bad)
push
or
std
mov
jg
dec
dec
and
inc
mov
dec
mov
fcomp
mov
mov
fs
xchg
xchg
xlat
jg
push
xor
retf
enter
mov
mov
sub
aad
movs
ja
inc
das
(bad)
out
or
out
ret
and
call
sub
mov
inc
ja
fld
push
pop
pop
rol
bound
push
(bad)
loop
lahf
push
stos
mov
loopne
push
and
mov
dec
inc
inc
xchg
push
pop
(bad)
jnp
dec
sbb
cli
jne
xchg
arpl
repnz
in
inc
scas
lahf
sub
or
into
fdivr
cmp
ins
mov
outs
cmp
push
sbb
dec
jl
sbb
ror
mov
or
xor
xor
imul
push
add
pop
mov
and
in
and
push
jg
push
dec
ret
lods
xchg
leave
out
jl
lock
or
call
inc
or
out
shr
not
adc
leave
add
xchg
xor
sbb
mov
movs
and
mov
shl
and
nop
pop
not
mov
arpl
push
push
das
out
ins
ficom
adc
cmps
out
mov
mov
mov
or
cli
inc
add
leave
adc
out
cmp
mov
xchg
aad
(bad)
inc
inc
mov
push
scas
lds
xor
stos
and
cmp
push
push
cmc
cmp
jne
mov
xchg
lods
inc
hlt
je
cmp
std
mov
(bad)
lods
imul
inc
pop
iret
cdq
pop
stos
mov
cs
not
or
pusha
fldcw
stos
arpl
sbb
es
dec
iret
out
xor
daa
xor
clc
lock
aad
mov
into
mov
je
mov
mov
cld
dec
mov
jno
dec
std
jnp
(bad)
sbb
test
loop
scas
xchg
imul
ins
in
ja
test
or
loope
in
adc
jnp
nop
pop
dec
ins
pop
outs
shl
and
dec
(bad)
cmc
dec
outs
gs
jno
inc
sahf
mov
sbb
push
pop
xchg
rcr
sbb
int
scas
and
(bad)
push
push
mov
sahf
loop
out
sub
ret
test
lods
dec
sbb
aam
mov
cs
shl
cmp
add
loope
lock
sbb
in
sar
icebp
cmps
icebp
pop
adc
pop
retf
sbb
int3
or
fbld
inc
xchg
idiv
dec
fdivrp
std
cmps
pop
shl
push
sbb
nop
jmp
ja
jae
pop
into
cmp
ja
dec
mov
in
je
or
dec
sub
mov
dec
add
cwde
jo
(bad)
fwait
inc
out
mov
and
xchg
mov
jge
dec
fcomi
push
enter
xchg
fistp
mov
mov
inc
adc
scas
mov
or
sbb
stos
pop
fimul
xchg
and
pop
xchg
xchg
fucomip
ds
pop
sar
cmp
mov
inc
mov
mov
mov
sbb
int3
fldcw
call
daa
xor
cmc
mov
add
iret
fmulp
add
inc
arpl
and
js
dec
sub
dec
aaa
test
push
inc
pop
inc
in
and
xchg
inc
bound
jnp
jp
mov
inc
(bad)
jp
daa
jp
retf
imul
mov
and
push
mov
into
push
movs
adc
mov
shl
dec
int
in
sub
and
aas
jo
jge
call
cs
cmp
dec
stos
mov
iret
cmp
stc
cmp
add
dec
icebp
ficom
aad
ss
movs
(bad)
sub
sahf
bound
pop
out
mov
shl
sahf
pop
push
pop
js
ret
jecxz
aaa
jno
stos
stos
adc
sub
mov
push
shl
mov
test
repz
pop
fild
out
cli
jo
daa
pushw
mov
int3
push
xchg
daa
dec
mov
sub
addr16
arpl
movs
leave
push
adc
mov
out
push
scas
push
(bad)
(bad)
sti
ja
mov
js
mov
jnp
aas
cmp
jge
scas
inc
dec
dec
xor
leave
lahf
call
and
or
mov
mov
add
xor
mov
jns
fwait
outs
sahf
movs
jge
retf
lock
xlat
mov
out
leave
jl
aas
push
mov
in
add
fcomi
sbb
scas
push
mov
push
xlat
loope
(bad)
test
push
shl
clc
add
stos
leave
cmps
lock
xchg
pusha
scas
data16
sub
inc
aad
cmc
mov
inc
(bad)
scas
or
arpl
js
icebp
imul
into
retf
and
dec
push
iret
(bad)
dec
xor
movq
int
xchg
out
data16
dec
dec
sbb
div
rol
cmp
lea
push
add
pop
ror
dec
test
rcr
dec
movs
push
sub
push
add
add
xchg
jb
and
bound
das
mov
ins
sti
adc
clc
lahf
fwait
shl
mov
mov
or
mov
cmp
sub
or
xlat
bound
push
sti
pop
rcr
and
ret
test
and
repz
mov
xlat
push
push
add
clc
jge
mov
inc
cdq
cmps
fist
ds
dec
div
xor
adc
or
fwait
pushf
pop
mov
sub
in
stos
xchg
mov
pushf
dec
loopne
fs
fld
pop
add
cmp
div
inc
rcr
inc
mov
mov
add
rol
push
outs
jge
or
cwde
xor
repnz
inc
aas
inc
dec
adc
and
ds
dec
inc
mov
push
ins
xchg
clc
loop
sbb
mov
push
ds
sbb
mov
inc
in
jbe
sbb
pop
in
add
aam
push
jg
push
dec
jnp
and
cmc
iret
xor
mov
jae
enter
jle
pop
das
(bad)
shl
ret
iret
loope
pop
mov
xlat
and
jnp
jne
adc
lods
pop
mov
jb
in
les
rcl
stos
and
into
mov
xchg
push
mov
pop
(bad)
in
cmp
pop
sahf
rcr
fwait
or
adc
and
ret
aam
and
in
inc
movs
mov
adc
int
test
sub
mov
leave
jno
pop
push
es
inc
or
fldenv
mov
cmps
xchg
xor
mov
dec
ret
imul
stos
dec
std
or
push
test
sti
xor
sub
xor
popa
inc
jle
(bad)
sbb
nop
jo
mov
shl
xor
shr
pop
jecxz
mov
jne
popa
mov
fs
mov
(bad)
dec
popf
int3
mov
push
mov
xchg
bound
sub
mov
sahf
jge
push
mov
and
add
pop
lea
mov
repz
push
push
outs
cmps
inc
xadd
xchg
adc
inc
fistp
mov
xor
and
push
or
inc
addr16
jmp
adc
cmp
fdivr
push
fcmovnb
ins
nop
dec
push
xchg
pop
inc
ins
dec
stos
push
bound
xor
stc
xchg
outs
mov
loop
jno
fimul
lods
into
mov
or
mov
sti
frstor
call
ror
iret
sub
add
loope
push
out
xchg
xor
inc
das
jne
movs
call
or
iret
push
xor
loopne
mov
sbb
and
loope
sbb
stc
jle
call
std
mov
xor
mov
into
inc
mov
or
pop
mov
int3
sbb
dec
dec
scas
clc
rcr
xchg
ffreep
cmp
xor
cmp
sahf
sbb
mov
ja
lock
std
mov
sbb
fst
and
out
scas
adc
pop
hlt
out
cdq
mov
sub
jecxz
(bad)
fild
lea
test
aas
xor
shl
push
mov
fsubr
div
outs
addr16
xlat
cwde
in
push
aaa
cmp
push
cmps
aam
int
mov
or
int3
and
jns
dec
retf
sbb
and
jle
mov
add
ret
in
jno
mov
mov
inc
fxch
test
ins
cmp
fwait
xchg
iret
lea
sbb
or
sbb
cs
cmc
mov
sub
mov
call
repnz
loop
push
jp
ret
in
rcl
mov
(bad)
sub
jae
imul
mov
je
push
sbb
mov
mov
loop
sub
xlat
lock
call
or
xlat
aad
push
lods
mov
jmp
or
sub
inc
out
fcom
pop
pop
ss
lods
inc
mul
fadd
jg
mov
mov
jne
ret
cmp
leave
pop
xchg
ins
mov
(bad)
and
(bad)
jbe
ret
lea
sbb
adc
jl
sub
push
dec
jmp
imul
mov
cmp
dec
pop
jg
or
mov
pop
dec
retf
test
dec
xchg
aas
xor
adc
dec
sub
xchg
adc
ja
or
pusha
inc
mov
pop
es
out
cmc
and
cmp
fs
ds
dec
jmp
cs
scas
jl
mov
movs
xor
jmp
jo
mov
jecxz
dec
popa
and
pop
sub
push
xor
pop
mov
adc
es
mov
test
dec
add
push
jnp
mov
fmul
add
jecxz
stc
repz
in
call
sti
or
dec
push
lahf
ret
pop
sub
inc
sbb
jmp
mov
int3
icebp
ss
sbb
jns
mov
mov
cmc
pop
push
inc
jmp
cmp
lds
push
cmp
adc
dec
dec
and
int3
dec
pop
or
cmps
call
in
popf
jp
jno
repz
lock
mov
aaa
and
out
cwde
test
data16
mov
mov
rcl
push
mov
add
or
cmp
mov
jge
mov
push
pop
neg
leave
hlt
mul
xlat
mov
icebp
les
xchg
sbb
arpl
mov
outs
mov
mov
or
mov
jb
jp
dec
mov
add
push
mov
xchg
xchg
out
push
aaa
sub
mov
add
jle
jo
ja
sbb
sar
daa
and
ins
dec
mov
or
sbb
das
inc
jge
test
leave
hlt
fbld
je
retf
popf
into
bound
std
lods
cmp
iret
sub
xchg
jb
push
aas
sbb
sbb
inc
adc
xor
mov
(bad)
mov
adc
mov
sbb
(bad)
jecxz
lea
aam
das
or
pop
adc
cmp
cld
hlt
fisttp
jecxz
jl
inc
or
push
es
mov
push
jl
jp
shl
xchg
or
popa
and
mov
cmp
and
movs
shl
or
int3
icebp
xchg
mov
sbb
push
fbstp
ret
fst
movs
stc
fcomp
adc
inc
xor
loop
adc
fisttp
ror
call
xchg
cmps
add
into
xchg
imul
mov
pop
and
mov
idiv
xlat
mov
out
imul
out
push
push
push
jbe
retf
popa
jge
mov
std
bound
add
out
rcl
jo
(bad)
xchg
cmp
push
cwde
mov
push
and
cmp
push
frstor
and
sub
shl
movs
pop
hlt
or
test
cmc
jo
in
sbb
ins
fbld
mov
xor
mov
lods
pop
jg
popf
xchg
xor
adc
ins
cmps
mov
mov
and
dec
xchg
mov
(bad)
adc
or
loope
xchg
jl
xchg
mov
hlt
mov
lea
lock
inc
mov
xchg
das
cmps
sub
subps
lds
retf
int
cmp
xchg
push
lock
rcl
dec
stos
iret
xchg
lea
sbb
out
dec
dec
inc
mov
add
add
mov
xchg
mov
clc
call
shl
call
push
iret
xor
and
in
in
mov
jmp
and
fnstcw
cmp
and
aaa
adc
dec
push
dec
outs
pop
pusha
popa
pusha
and
aaa
push
sbb
dec
sub
cld
imul
mov
shl
or
jmp
in
std
xor
pop
sub
dec
icebp
dec
push
cs
xchg
mov
imul
push
inc
mov
cdq
mov
imul
and
sahf
pop
sbb
and
fcmovnu
add
fidiv
fcom
clc
out
repnz
push
sbb
imul
pop
fdivp
test
scas
jno
(bad)
mov
sbb
cmc
stc
pop
cwde
adc
ret
mov
rcl
das
fimul
mov
test
mov
inc
out
aad
xlat
out
imul
jo
or
inc
push
xchg
add
sub
jp
mov
addr16
jns
(bad)
push
rol
xchg
not
mov
sbb
pop
scas
icebp
retf
add
stos
out
jge
or
jg
mov
mov
cld
cli
data16
xchg
aad
mov
sbb
shr
sar
test
addr16
jg
push
in
lea
adc
fdivr
cmps
dec
dec
test
pop
and
stc
test
fldcw
mov
pop
mov
int
loope
mov
bound
je
xor
jns
ror
aas
jecxz
neg
aam
jae
data16
dec
xlat
test
push
mov
arpl
imul
mov
aad
retf
fs
jbe
cmp
ds
mov
arpl
loop
retf
mov
and
xchg
or
out
adc
adc
mov
aas
xor
push
cmc
sub
movs
loop
jnp
pop
push
xchg
shl
cmp
int3
loope
pop
xchg
stc
dec
dec
(bad)
sub
popf
loope
push
or
cmc
mov
mov
sub
sbb
mov
adc
jmp
ss
push
and
fisttp
pop
push
push
imul
cwde
cmp
mov
pop
mov
loop
mov
outs
mov
iret
pop
push
inc
inc
mov
mov
inc
xchg
dec
shl
or
cwde
stc
and
mov
jnp
movs
std
push
cmps
and
(bad)
inc
sub
sub
sub
int3
push
fdiv
nop
dec
jmp
pop
cs
push
mov
xchg
jmp
das
retf
lahf
dec
inc
pop
xor
sbb
push
xor
(bad)
clc
lods
xchg
and
mov
sbb
je
nop
push
and
sbb
es
(bad)
mov
das
out
inc
pop
jp
sbb
or
jmp
mov
mov
stos
xor
xchg
or
data16
cdq
adc
jae
int
dec
xchg
scas
fisubr
adc
test
push
xchg
xor
(bad)
cmps
jp
iret
in
sbb
in
pop
and
mov
retf
sub
pop
pop
das
ror
and
arpl
shr
and
and
sbb
mov
pop
add
or
mov
int
jecxz
push
mov
jnp
stos
xchg
dec
enter
cdq
fucomip
arpl
or
outs
(bad)
mov
jo
mov
add
cmps
daa
mov
push
jno
jle
mov
sub
ds
mov
sbb
jp
les
scas
cli
pop
je
sub
add
jg
mov
loop
jmp
inc
cmp
outs
cld
int
pop
scas
sbb
adc
pop
int3
clc
jecxz
lea
mov
scas
les
mov
in
xchg
inc
cmp
fisubr
test
ja
cmps
jl
xchg
adc
imul
jmp
mul
jno
aas
call
jo
push
neg
and
xor
mov
lahf
push
xor
js
das
push
pop
mov
adc
add
sbb
pop
inc
fimul
scas
mov
mov
in
rol
ins
mov
push
and
push
leave
pop
cmps
jns
mov
mov
adc
syscall
loop
data16
xchg
xor
adc
xor
mov
sbb
out
cmp
jb
xchg
add
das
xchg
xor
pop
mov
shl
cmp
movs
xor
test
cmp
(bad)
movs
(bad)
cmp
jbe
cmp
mov
inc
adc
in
mov
push
xchg
or
(bad)
loopne
popf
sti
add
xor
fdivr
and
jg
adc
mov
mov
sti
pop
mov
inc
imul
dec
into
cmp
sbb
or
adc
sbb
pop
and
dec
add
mov
std
jbe
dec
cs
les
mov
sub
cmc
jbe
sub
movs
es
or
ss
aas
pop
jb
push
cmp
push
or
popa
mov
scas
jg
pushf
(bad)
outs
enter
pusha
inc
es
cmp
gs
dec
repnz
inc
push
sbb
shl
sbb
cmps
jmp
inc
mov
sbb
or
data16
mov
jnp
pop
cmp
rol
mov
push
or
(bad)
or
jge
mov
ret
and
push
cmp
pop
adc
or
mov
ins
enter
adc
int3
inc
sbb
lock
es
add
repnz
out
inc
mov
inc
lods
sbb
pushf
jbe
sbb
pop
lea
push
xlat
mov
push
sbb
rcl
(bad)
lods
sub
mov
cmp
es
xor
mov
push
test
repnz
jl
dec
(bad)
sahf
out
std
lds
jle
push
xchg
enter
and
repz
add
sbb
jns
loopne
mov
loopne
stc
cmp
into
lahf
jns
xlat
adc
jb
add
scas
adc
sbb
add
int3
xchg
mov
int
test
aas
retf
mov
into
pop
pop
in
jl
pop
out
out
inc
mov
popf
xor
imul
add
and
sbb
ja
push
sbb
lods
dec
dec
sub
cmp
add
fwait
xor
cmp
push
out
push
push
imul
sti
inc
xchg
cmc
(bad)
mov
fcmovbe
je
repnz
ror
frstor
sub
(bad)
repnz
fdivr
aas
xchg
pop
rcl
js
dec
mov
mov
scas
nop
cmps
(bad)
cmp
jns
xor
fiadd
push
lahf
inc
sub
ficom
jecxz
test
inc
sti
test
add
xchg
lea
lea
imul
push
mov
aam
xor
ins
dec
mov
add
neg
icebp
mov
xor
ret
iret
cmp
xchg
mov
xchg
sbb
les
sbb
xchg
(bad)
pusha
inc
xor
(bad)
mov
cmp
lods
out
jo
jne
pop
xchg
std
mov
adc
mov
xor
xor
jg
icebp
mov
cs
mov
mov
sub
sub
sbb
mov
movs
xchg
sbb
mov
jne
addr16
cs
pusha
jg
mov
stc
jmp
sub
(bad)
xor
into
fnsave
dec
pop
mov
ret
mov
test
fstp
inc
pop
jge
into
or
inc
sub
mov
dec
loope
imul
mov
mov
push
mov
in
cmp
clc
mov
lahf
aas
retf
and
test
mov
icebp
or
pop
mov
push
daa
mov
dec
retf
cmps
lods
jmp
pop
cld
pop
test
adc
repz
mov
vmulss
and
repz
inc
rcl
ins
pop
mov
pushf
lods
cdq
mov
test
retf
fwait
in
sub
xor
dec
dec
retf
shl
add
cmp
mov
imul
push
sbb
shl
sbb
lock
lods
mov
enter
xchg
sbb
jecxz
ror
adc
scas
mov
jmp
stos
out
push
dec
mov
jns
mov
das
push
in
sbb
inc
inc
add
test
sbb
jp
fdivr
pop
cli
or
aas
(bad)
mov
imul
pop
test
imul
push
and
mov
cwde
retf
(bad)
fld
push
jo
gs
pop
push
adc
sbb
push
test
and
lock
mov
std
and
xor
pop
pop
scas
(bad)
sbb
or
ret
mov
gs
sbb
push
jb
adc
push
sbb
and
push
sub
xor
retf
sbb
mov
outs
inc
mov
std
cmp
retf
scas
lahf
cs
xor
mov
enter
sbb
dec
cmp
mov
movs
inc
pop
(bad)
mov
push
jle
push
leave
dec
dec
sub
xor
cli
jmp
adc
pop
or
jmp
(bad)
push
ret
jnp
aam
loop
jmp
sub
add
movs
push
mov
outs
nop
xchg
jle
xchg
mov
div
stos
das
(bad)
fild
mov
xchg
mov
and
add
dec
call
mov
pop
retf
inc
xor
scas
call
dec
pop
js
or
aam
adc
xchg
pusha
ins
fld
push
mov
mov
add
rcr
xchg
xor
jl
adc
mov
adc
movs
xchg
sti
cmps
test
jbe
in
dec
ins
ds
push
jbe
mov
jae
xlat
in
mov
pop
cmps
test
cmc
inc
xor
pop
mov
in
cmp
mov
mov
jno
jae
loope
rcl
hlt
sub
sti
and
and
mov
pop
jne
dec
xor
repz
fild
fist
imul
sub
xchg
out
jmp
sbb
add
adc
or
out
nop
daa
mov
push
dec
jg
imul
icebp
push
mov
or
inc
and
imul
ret
stc
dec
adc
push
pop
in
or
sar
sbb
and
jmp
pop
or
pop
mov
xchg
imul
hlt
and
in
push
xchg
or
fmul
mov
add
scas
ins
dec
test
inc
fistp
test
leave
out
into
push
in
cwde
call
(bad)
int3
xor
xchg
sub
loope
pop
repnz
fs
jl
mov
inc
movs
dec
pop
mov
push
scas
sub
push
sub
dec
xor
fnstcw
out
inc
test
dec
jno
mov
stos
cmp
sbb
test
pop
dec
xlat
jge
cdq
ret
inc
sbb
xor
push
mov
dec
xchg
and
rcr
ds
ror
dec
xor
fwait
sbb
out
inc
xor
sti
sub
jge
mov
dec
adc
popf
in
js
jp
mov
shr
cdq
mov
push
add
jp
mov
popf
cmp
movs
repz
(bad)
aaa
fst
adc
and
fucom
test
pop
dec
sub
ror
or
jecxz
adc
stos
push
cs
mov
(bad)
aas
push
jns
mov
push
xor
ror
es
pop
push
enter
mov
(bad)
cs
jnp
push
fucomp
pop
or
out
mov
(bad)
aas
call
loope
dec
sar
mov
bound
clc
lea
cmc
add
icebp
mov
or
aas
jne
jl
xchg
mov
lea
cli
js
enter
jle
(bad)
push
movs
popa
pop
es
ds
cmp
ss
mov
xor
(bad)
lock
aas
lods
push
retf
push
sub
stc
popa
lock
lods
shr
pop
int3
push
xchg
add
into
pop
ror
and
mov
or
je
add
inc
and
push
pop
xchg
and
xor
sahf
or
pusha
pop
shr
pop
mov
cmp
rep
fbld
pop
(bad)
cmps
in
inc
cs
int3
cmp
push
or
mov
popf
dec
jb
pusha
leave
call
cmp
sub
xor
pop
xchg
pop
pop
pop
fwait
dec
cmp
or
out
xor
or
js
jmp
mov
jmp
mov
mov
mov
test
jns
loope
ss
test
mov
sbb
jmp
scas
icebp
mov
jmp
inc
pop
int3
sub
cmp
das
xor
stc
jne
inc
cmp
xchg
pop
adc
xchg
mov
mov
jne
dec
cmps
test
arpl
mov
xlat
xchg
punpckhbw
mov
mov
and
push
sbb
in
mov
stc
xor
jbe
add
jno
fwait
jo
and
xor
and
repnz
repnz
xchg
imul
aam
loop
lahf
mov
movs
idiv
imul
rol
ins
or
cmc
in
cmps
xlat
call
jns
xchg
push
popf
leave
add
xor
in
mov
retf
cs
mov
jg
mov
jp
adc
xchg
scas
pop
xor
jge
xor
in
ins
pop
add
sar
into
xchg
push
mov
mov
dec
and
fbld
pop
xchg
movs
ins
cmp
(bad)
mov
enter
push
jns
call
repnz
(bad)
retf
lods
mov
loop
push
stos
dec
or
out
xchg
inc
fidiv
mov
aas
in
jg
add
ins
sbb
shr
sbb
stos
xchg
into
fwait
inc
and
push
push
pop
and
retf
addr16
rcr
xchg
jmp
push
mov
stc
pop
popf
xchg
dec
shl
xlat
xchg
jo
loopne
jnp
sti
cmp
lds
(bad)
mov
cmp
shl
dec
mov
mov
sub
sar
adc
jp
adc
or
mov
xor
pop
into
imul
adc
and
cmp
add
mov
inc
gs
push
dec
ins
imul
loope
es
int
push
loop
or
sub
pusha
lods
push
push
jo
jb
pop
fdiv
(bad)
(bad)
in
jecxz
and
or
inc
(bad)
mov
stos
hlt
in
pop
dec
cmp
lahf
xchg
fs
push
shr
or
scas
(bad)
pop
aad
mov
sub
xor
les
iret
mov
pop
ret
push
sub
adc
(bad)
jmp
mov
jae
nop
fisub
jns
fld
loope
les
es
jg
cs
int
and
cdq
loop
push
sti
cli
stos
test
(bad)
fdivr
pop
(bad)
lods
and
mov
out
nop
mov
jns
or
into
je
stos
aam
pop
aam
push
inc
xchg
xor
movs
jbe
pop
jp
cmc
jmp
dec
icebp
push
scas
and
xor
jnp
jmp
xchg
scas
imul
xor
daa
scas
adc
ins
xor
lds
lods
pop
and
sti
jge
into
push
iret
pushf
push
ret
cwde
and
jge
dec
xor
fstp
into
lods
mov
push
xchg
sbb
shl
mov
mov
loope
scas
das
pop
or
jmp
inc
jne
sub
inc
test
sub
js
jnp
leave
dec
(bad)
or
mov
or
test
fcom
call
pop
inc
js
retf
stos
pop
dec
cmps
cdq
shl
(bad)
nop
mov
(bad)
push
ds
adc
pop
fidiv
or
shl
jge
sub
call
mov
inc
dec
js
stc
pop
dec
sar
jno
mov
xchg
nop
xor
psubsw
cdq
test
scas
xchg
xor
iret
push
mov
push
sub
mov
call
push
dec
sub
and
loope
lahf
jno
add
in
or
adc
jo
ficom
sbb
pusha
push
imul
push
mov
dec
lods
or
mov
outs
mov
out
inc
int
push
stos
push
and
nop
xchg
imul
imul
sub
dec
ins
or
jmp
jmp
clc
test
icebp
je
ins
pop
mov
shr
or
pop
ffree
ds
inc
and
in
inc
mov
lock
sub
bound
jmp
add
mov
dec
or
xor
test
icebp
cmp
dec
mov
test
adc
shl
add
sbb
jb
jp
shl
mov
jb
mov
shld
pop
sahf
adc
and
call
mov
pop
add
cwde
or
idiv
mov
and
add
dec
je
mul
sub
pop
fnstcw
pop
mov
mov
(bad)
pusha
pusha
test
dec
ror
jg
xlat
ss
les
sub
mov
iret
dec
scas
stc
sub
rcr
push
popf
mov
stc
mov
iret
sub
sub
fcmovnu
jl
ja
adc
sti
xchg
inc
jmp
daa
out
fisttp
push
dec
cmps
or
jne
or
push
sbb
leave
push
push
cmp
pushf
xchg
pop
sub
push
jmp
in
xor
fdivr
pop
xor
jmp
fwait
mov
xchg
pop
xchg
cmp
cld
push
es
imul
ds
(bad)
das
js
adc
mov
cmp
(bad)
cmp
sub
cmp
adc
dec
fstp
fstp
lahf
fcom
je
mov
xchg
shr
stc
shr
or
fist
repz
mov
xchg
push
xchg
gs
xlat
int
cmp
pusha
test
sub
pop
shr
push
push
stos
adc
bound
aam
(bad)
dec
ja
mov
push
iret
and
push
out
adc
retf
in
sahf
call
shl
lahf
ror
adc
pop
fst
mov
test
cli
dec
out
sub
call
pop
cmp
pushf
mov
dec
cmp
add
es
mov
rcl
inc
pop
fisttp
xchg
ficom
inc
adc
in
xchg
daa
retf
jns
inc
call
lahf
mov
scas
aas
test
or
sbb
(bad)
push
inc
outs
adc
cdq
mov
push
sar
jbe
xor
mov
cmp
push
mov
add
pop
add
jmp
sub
sbb
(bad)
push
and
push
mov
rcl
ins
cmp
cs
aaa
push
sub
or
in
xor
add
fist
xor
jae
pop
fild
pop
jmp
or
fisttp
mov
inc
and
pushf
outs
in
test
arpl
adc
leave
fptan
rol
lock
mov
dec
mov
popa
cmp
jl
adc
jne
and
pop
scas
cmp
and
bound
mov
ds
fcmovnbe
movs
jmp
pop
xchg
inc
push
movs
jno
inc
cld
lahf
jp
shl
lock
(bad)
fistp
lds
cdq
xor
arpl
inc
int3
add
das
test
fdiv
jmp
jge
jmp
cmp
fwait
sub
push
cmp
jo
mov
sbb
push
shld
sti
leave
cmp
lods
mov
data16
test
frstor
sbb
jle
shr
xor
pop
cmp
jl
pop
test
imul
out
pop
dec
push
xchg
mov
aas
arpl
dec
push
inc
jle
arpl
outs
int
pushf
aad
jge
sahf
cmp
retf
xlat
outs
fadd
xor
stc
fwait
add
cmc
test
xor
cmc
mov
sub
movs
call
lods
and
add
jbe
sub
mov
and
out
sub
xchg
mov
mov
pop
mov
cmp
sub
fisubr
test
std
mov
sbb
in
dec
push
sahf
mov
xlat
xor
mov
xchg
popf
sub
loopne
aas
sbb
lods
dec
int3
lock
add
push
jg
out
dec
xor
call
xchg
xor
cmp
xchg
xor
jb
out
fisub
pop
out
and
sub
pop
cmp
pop
mov
lods
inc
imul
stos
test
imul
enter
jp
push
push
loopne
mov
cmp
loop
ja
dec
sbb
inc
xlat
aam
rcl
push
cmp
lods
mov
cs
js
mov
mov
jmp
jle
xor
mov
clc
fbstp
repnz
ins
lds
dec
out
cld
gs
add
push
cmc
iret
cmps
or
jp
xlat
add
jns
adc
addr16
jle
pop
inc
(bad)
cmps
push
push
xor
xor
aaa
loop
jns
fisttp
xor
rcr
inc
adc
ror
inc
fstp
in
xor
test
shr
test
int3
jbe
push
outs
ins
imul
or
les
xchg
adc
or
push
scas
mov
cli
adc
and
cmp
into
in
cmp
or
outs
frstor
jmp
les
push
loop
dec
jmp
dec
xor
in
adc
inc
in
pop
inc
sbb
loope
pop
xlat
mov
fimul
add
push
add
jb
test
mov
repz
cmp
(bad)
pusha
inc
dec
fnstenv
mov
mov
iret
or
sahf
cmps
mov
inc
sbb
es
pusha
xchg
adc
pop
inc
mov
xchg
test
mov
dec
movs
inc
inc
xor
pcmpeqd
add
inc
scas
repz
xchg
fnstcw
push
and
xlat
pop
push
jg
mov
mov
cli
cld
mov
adc
or
iret
and
fisttp
or
popf
jno
sbb
test
in
loope
repnz
(bad)
push
ins
cli
out
into
int3
cmp
in
std
aas
mov
not
dec
mov
outs
xchg
cmp
idiv
jnp
dec
xchg
movs
rol
pusha
jge
fistp
ret
fidivr
dec
std
adc
jge
xchg
scas
jp
std
repz
call
shl
inc
mov
mov
rcr
nop
jecxz
aam
sub
pop
mov
sbb
sbb
mov
stos
dec
jbe
dec
fisttp
sar
int3
(bad)
loopne
movs
fs
pop
dec
xchg
or
and
or
popa
sahf
pop
jo
aaa
mov
dec
sbb
mov
xchg
jmp
fimul
sub
jnp
cld
inc
in
aaa
(bad)
sub
sti
xlat
cmc
mov
je
or
add
dec
enter
sub
jg
xor
icebp
leave
lods
add
add
xchg
pop
xchg
jle
add
mov
sbb
jne
pop
call
test
pop
mov
mov
sbb
inc
les
adc
sub
xchg
ins
sub
fmul
daa
mov
in
rol
outs
and
inc
mov
jae
or
cmp
mov
aad
pop
pop
jecxz
mov
and
je
cmp
or
dec
loopne
and
cmp
push
dec
mov
sub
aad
pop
mov
jecxz
mul
adc
mov
add
add
jae
arpl
shr
shl
pop
mov
loop
cwde
cs
dec
sub
loope
gs
pop
pop
jge
push
ficomp
mov
lock
int
sub
test
out
shr
(bad)
loop
or
push
inc
(bad)
cmps
xchg
jmp
jg
push
mov
faddp
icebp
pop
cdq
mov
popf
dec
mov
imul
and
mov
push
sub
out
fld
mov
xchg
and
imul
clc
ret
push
xchg
sub
out
inc
mov
cs
rol
pushf
cwde
test
bound
popf
push
mov
sbb
dec
jmp
ja
cmp
(bad)
fdivr
pop
je
jp
mov
cld
jl
(bad)
cmp
or
sub
std
sbb
gs
jne
xchg
(bad)
xchg
icebp
and
shr
nop
stos
mov
ret
pop
cmps
xchg
jo
mov
inc
icebp
mov
jns
test
sub
lds
ror
or
mov
sub
or
(bad)
cmp
jo
push
and
loopne
push
inc
mov
push
adc
push
jns
es
cmp
loope
jb
test
or
jmp
jle
rol
xchg
add
or
and
aas
aam
cmp
mov
push
and
jmp
int3
shl
out
mov
mov
inc
push
outs
and
mov
mov
lods
cmp
push
lahf
outs
xor
cld
cmps
dec
cdq
(bad)
test
dec
div
pop
daa
adc
xor
aas
fstp
xchg
das
inc
js
adc
sub
aas
ja
pop
mov
xor
mov
inc
dec
push
xchg
lods
pop
je
ret
lea
jns
inc
call
iret
jnp
aaa
iret
call
cmc
jmp
adc
arpl
into
in
push
retf
dec
scas
popw
les
cmp
in
mov
mov
repnz
sbb
lds
ins
cmps
les
aaa
sbb
xchg
out
mov
dec
cmp
adc
xlat
div
jg
lods
xchg
jle
jns
fist
dec
push
cmp
cmp
pop
outs
mov
enter
and
xor
out
sbb
ins
dec
popa
adc
mov
fs
outs
lahf
and
mov
ins
mov
les
(bad)
and
push
ss
addr16
fsubrp
stos
cwde
lods
sahf
adc
fisubr
mov
mov
sub
cmp
int3
scas
es
dec
or
pop
repz
cdq
(bad)
and
out
scas
hlt
ror
pop
jecxz
jmp
pop
xor
in
(bad)
mov
or
add
pop
div
pop
mov
sub
fwait
jns
(bad)
pushf
shl
(bad)
mov
sar
pop
in
xlat
into
push
jl
shl
into
mov
sbb
inc
shl
cmc
pop
mov
or
mov
aas
inc
adc
push
lahf
pushf
test
or
xchg
push
sar
pop
test
jae
and
sahf
sub
int3
mov
add
and
push
sbb
fsubrp
and
push
ror
mov
into
jge
jae
sub
or
xor
cmp
add
int
and
and
mov
xor
(bad)
push
loopne
add
cmp
and
xor
jbe
sub
push
enter
or
or
pop
pusha
cmps
push
scas
xchg
mov
sub
out
scas
sbb
imul
sbb
test
ins
xor
xor
dec
movs
sti
dec
(bad)
cmp
enter
sub
movs
xor
sub
and
mov
in
adc
add
aaa
mov
or
jge
mov
hlt
jnp
push
(bad)
out
sub
push
loope
mov
adc
popa
add
pop
mov
pop
sub
dec
repnz
scas
popf
js
test
sub
retf
mov
xchg
sbb
jns
pop
push
jne
shl
or
int3
cwde
inc
jno
pop
icebp
cmp
jbe
jmp
dec
dec
mov
cli
xchg
pop
cwde
sbb
or
out
les
xchg
xlat
addr16
enter
cmps
loopne
pushf
sub
in
xchg
sub
cvttps2pi
cli
mov
cmp
popa
shl
and
or
jp
mov
mov
inc
add
push
mov
mov
icebp
inc
adc
(bad)
out
cmp
ds
loope
dec
mov
ins
rcr
lock
push
dec
jecxz
cdq
shl
retf
fst
mov
pop
mul
lds
mov
xor
xor
xchg
dec
or
mov
jnp
fistp
pop
retf
ret
push
push
les
add
xchg
ds
or
imul
cmp
clc
sbb
sbb
xor
adc
add
cdq
mov
cwde
cli
es
sbb
ret
dec
xchg
mov
cmp
out
jg
ret
jno
mov
fld
mov
mov
repz
jp
lahf
dec
xchg
aad
pushf
pop
loopne
(bad)
jo
retf
retf
div
call
fiadd
mov
push
mov
lods
shl
xor
(bad)
push
adc
outs
cmps
pop
dec
(bad)
je
stc
(bad)
cdq
sbb
add
fcmove
cdq
sbb
cmp
xlat
ret
pop
aaa
(bad)
fnsave
shl
pop
adc
adc
jb
not
sbb
ror
sbb
adc
adc
cmp
(bad)
adc
ds
pop
call
jno
jmp
scas
xchg
leave
adc
out
div
xchg
xchg
popf
stos
test
fsub
dec
lods
jg
ja
jg
dec
pop
cmp
xlat
mov
in
xor
std
inc
cdq
adc
mov
xor
pop
jnp
sbb
inc
not
pop
aam
retf
xchg
push
(bad)
fild
xchg
mov
ret
cmc
stos
daa
cmp
in
nop
mov
sbb
pushf
icebp
mov
jmp
test
mov
cmp
pop
inc
and
mov
aaa
adc
push
or
or
cmp
ins
xchg
mov
xor
push
cli
add
stos
xchg
data16
dec
jle
sub
outs
add
inc
mov
push
loope
xchg
dec
shl
call
les
pop
stos
pop
in
loopne
mov
(bad)
sbb
xor
push
ja
daa
in
sub
jp
iret
outs
retf
inc
imul
lahf
scas
cmp
out
sub
sbb
in
stos
and
mov
call
sub
or
(bad)
out
xchg
sub
pop
icebp
mov
mov
jno
imul
push
jb
shr
cmp
out
inc
in
adc
push
into
scas
cmps
jbe
movs
mov
sbb
int3
or
xchg
mov
xor
xchg
sbb
movs
into
push
sbb
shl
jo
mov
syscall
outs
mov
and
mov
clc
adc
cmp
sub
sbb
int3
cmc
push
sub
xchg
outs
jl
test
fnstsw
dec
xchg
xor
jle
inc
sbb
cmps
call
addr16
and
movs
int
xor
push
cli
pusha
retf
push
retf
xor
mov
fdiv
dec
sub
loope
jo
add
pop
mov
adc
shr
sbb
mov
movs
sub
les
push
push
cs
fisubr
adc
sti
js
fmul
stos
push
fabs
loopne
mov
cmp
ds
xor
pop
or
pop
cmp
xchg
fild
push
lds
js
jo
push
pushf
mov
dec
mov
ret
mov
ficom
and
retf
out
mov
adc
inc
adc
dec
jno
push
push
jnp
std
inc
mov
push
push
(bad)
xchg
add
mov
popf
adc
sbb
sub
or
sub
cli
jnp
jecxz
adc
nop
push
in
fmul
shr
movs
dec
fcmove
fimul
jp
or
sbb
mov
es
call
push
imul
je
mov
sub
adc
das
jae
addr16
addr16
dec
es
pop
jno
icebp
sub
mov
stos
push
dec
sbb
sbb
mov
(bad)
xchg
mov
movs
shl
cmp
test
and
mov
es
mov
(bad)
js
lods
sub
lock
sbb
xchg
xor
sub
jg
push
jo
inc
cmp
mov
jmp
sahf
jae
jge
leave
mov
jecxz
sbb
jecxz
and
scas
movs
adc
sub
cmp
push
loope
call
daa
cmp
loop
cwde
sbb
popf
add
mov
pushf
push
mov
loop
push
mov
xor
fs
idiv
aam
jmp
jne
dec
mov
cwde
add
xor
xchg
jmp
cmps
mov
lods
(bad)
cmp
inc
cli
mov
call
mov
xchg
popa
shl
clc
mov
pusha
and
push
fstp
int
mov
or
jp
loop
inc
in
sub
pop
add
xor
cmp
jl
test
rol
mov
pop
jl
mov
mov
mov
or
sbb
outs
mov
push
leave
inc
jb
stos
scas
xor
dec
xchg
sub
rol
mov
ret
fst
mov
(bad)
leave
js
and
pop
out
dec
add
jp
and
and
pop
jbe
jb
sahf
dec
mov
js
xor
dec
lods
ror
and
ja
push
imul
jge
out
sbb
pop
jnp
push
imul
and
sahf
popa
sub
jp
inc
xlat
or
adc
or
mov
or
aaa
loope
cmps
dec
sahf
cmp
or
arpl
push
ret
into
pop
ins
push
xor
cmp
imul
mov
js
xchg
cmp
test
fcmove
push
movs
aam
(bad)
and
mov
pop
mov
push
fild
inc
shl
stos
aad
fldcw
in
in
mov
xor
xor
mov
sbb
xchg
mov
div
aaa
popa
jecxz
inc
fstp
repnz
xor
xchg
or
xchg
mov
pop
adc
xchg
rol
in
xchg
xlat
jnp
jnp
shl
cld
stc
(bad)
jo
pop
xor
rcr
loop
retf
adc
jg
das
movs
push
(bad)
std
mov
or
jl
add
and
inc
fsub
test
xlat
mov
stos
vpsubsw
lea
cld
cmp
popf
sub
and
into
dec
sub
(bad)
call
pop
mov
cmc
mov
call
mov
adc
mov
(bad)
mov
and
stos
cmp
and
out
ss
mov
or
or
pop
or
mov
(bad)
mov
repz
jg
add
retf
ja
scas
scas
(bad)
std
cmp
paddw
mov
pop
shl
add
xchg
test
push
push
push
xor
shl
adc
(bad)
in
xchg
jnp
enter
inc
mov
aad
daa
jmp
xchg
sub
lock
jle
adc
loope
pop
test
xchg
add
and
xor
sbb
dec
cld
push
cmp
dec
push
sub
add
jns
push
retf
sub
inc
shl
add
sbb
out
or
mov
dec
pop
sbb
daa
push
aas
mov
and
jmp
in
jecxz
mov
div
in
(bad)
and
(bad)
lock
dec
push
mov
retf
dec
or
sbb
aaa
popf
xor
stos
sub
jle
shr
sbb
mov
outs
jne
stc
std
and
cli
and
mov
popf
cmc
aam
stos
mov
rol
or
push
ror
fbstp
jns
cmp
ins
loopne
jno
sar
aaa
icebp
in
add
out
lds
jmp
aaa
add
ficom
sub
adc
adc
arpl
dec
in
(bad)
sub
sub
mov
ja
cmp
inc
inc
mov
pop
pop
pop
and
ss
retf
mov
pop
push
fisub
lods
mov
push
fmul
das
sbb
dec
retf
jo
mov
sbb
call
lock
jle
out
in
icebp
iret
mov
dec
jmp
mov
pop
sbb
fsubr
push
xor
adc
mov
fnstsw
imul
out
fdiv
imul
xchg
xchg
iret
jb
(bad)
in
inc
or
mov
(bad)
sub
push
inc
test
push
(bad)
sbb
je
mov
cmp
cmc
mov
pop
in
pop
ss
fisub
jbe
and
int3
sahf
mov
enter
push
xchg
cmps
mov
xor
push
cmp
and
jnp
adc
mov
or
shl
sbb
jne
pop
add
or
pop
addr16
repnz
lock
add
fstp
mov
jg
outs
mov
pop
mov
mov
(bad)
adc
pusha
and
shl
imul
and
repz
push
je
pop
push
cmp
or
push
pusha
add
retf
jo
gs
cld
mov
aaa
push
mov
pop
repz
fisubr
dec
pushf
into
cld
pop
inc
fdivr
add
jmp
and
jo
cdq
not
push
sbb
movd
dec
xor
mov
pop
push
pop
je
xchg
imul
xor
test
and
dec
retf
adc
or
xor
mov
lahf
and
div
mov
adc
call
psubw
and
fcmovu
or
push
dec
aaa
jge
mov
mov
or
jbe
mul
div
push
movs
les
jl
sahf
popf
cs
das
(bad)
fs
xor
add
clc
cs
cmp
mov
xchg
pop
and
mov
scas
push
sbb
mov
pop
pop
mov
sbb
sbb
les
add
and
push
fcomp
jmp
in
imul
jae
aas
ins
cs
jge
sub
test
int3
ja
sbb
shl
cmps
shr
(bad)
inc
enter
ja
xor
adc
cmp
movs
fadd
inc
and
push
adc
fnstsw
test
test
fdivr
xor
pop
xchg
add
mov
shl
pop
movs
mov
outs
push
fsubrp
imul
not
and
(bad)
pop
into
int
ret
mov
stc
jmp
in
and
mov
mov
mov
sti
xchg
std
cmp
pushf
sub
stos
(bad)
icebp
push
test
movs
addr16
cmp
mov
pop
sub
mov
popf
push
adc
lods
xchg
mov
sub
arpl
int
(bad)
cmp
sub
cmc
xor
pop
cmp
test
cmps
mov
xor
pop
ja
xchg
aas
mov
rol
pop
das
sub
fwait
inc
pop
add
xchg
loopne
popf
hlt
cmp
js
dec
jne
movs
mov
sti
cdq
and
js
cmp
into
int
adc
and
std
scas
iret
push
loopne
pop
es
or
and
pop
sbb
test
mov
jmp
jo
jmp
lods
or
xchg
mov
ror
xchg
add
imul
and
lods
enter
sbb
daa
mov
push
adc
stc
inc
cmp
mov
addr16
mov
mov
and
xlat
and
mov
jb
popa
xor
xchg
inc
sbb
div
hlt
(bad)
sbb
aas
mov
inc
nop
add
mov
inc
inc
and
mov
push
retf
jne
mov
sub
int
icebp
push
cmp
push
fild
dec
fidiv
pop
(bad)
ins
push
enter
cvtps2pd
es
shr
mov
ins
mov
stc
sub
fmul
xchg
stos
push
mov
bound
or
fist
stos
pop
mov
jp
xlat
js
pop
adc
arpl
test
xor
or
scas
sub
add
or
ins
ss
imul
push
cmps
push
and
jmp
lahf
add
mov
loope
sub
fistp
jp
xchg
dec
in
pop
cmc
aas
mov
push
mov
push
mov
fadd
jo
adc
aaa
push
fsub
cmpxchg
ja
and
push
xchg
pop
loope
lahf
jge
test
hlt
sub
popa
push
mov
out
out
pop
xchg
sbb
pop
push
fldenv
sti
push
pop
sub
pop
les
in
cmp
div
pop
fs
arpl
data16
jo
dec
jg
sbb
mov
push
jnp
fistp
sbb
cmp
and
adc
inc
sbb
loop
adc
mov
mov
mov
outs
mov
xor
inc
mov
mov
pushf
mov
js
test
mov
movs
loop
in
in
imul
cmp
xor
jl
xchg
dec
cwde
add
ds
add
fmul
push
inc
sub
(bad)
enter
daa
jns
test
nop
dec
(bad)
dec
cld
or
mov
sahf
(bad)
in
jb
lea
repz
in
stc
test
push
ds
dec
lods
cs
loope
cmp
pop
out
out
push
jmp
inc
iret
sbb
sbb
jno
or
inc
push
push
mov
mov
retf
push
cmp
mov
call
mov
(bad)
icebp
xor
fst
test
and
aam
pop
and
or
jmp
cmp
add
jno
jmp
cdq
cmps
ret
xchg
push
mov
aad
mov
and
scas
cwde
cwde
mov
sti
mov
dec
sub
or
(bad)
scas
sbb
and
xchg
cld
push
aam
dec
imul
xor
out
adc
pop
fidivr
dec
test
retf
pop
repnz
movs
je
call
adc
and
outs
mov
pop
push
pop
sbb
cmp
cmp
cdq
push
jmp
inc
js
test
mov
call
mov
jle
(bad)
cmp
and
dec
xor
stos
out
xor
test
sbb
mov
data16
mov
inc
add
sub
jbe
mov
addr16
xor
leave
loope
rol
jge
push
and
(bad)
xor
rol
inc
jge
jle
cmps
int3
push
loop
mov
call
pop
icebp
push
nop
add
jne
repnz
enter
sub
iret
add
iret
jl
icebp
jae
dec
icebp
ins
in
mov
(bad)
xor
mov
int3
mov
int
outs
dec
pop
das
adc
popa
mov
das
fsub
fmul
out
out
outs
dec
pop
xchg
dec
push
add
std
mov
jbe
mov
mov
inc
sub
fs
test
fisttp
es
cs
push
pushf
adc
sbb
rcl
xor
and
gs
and
push
imul
lods
retf
sti
sbb
(bad)
cli
inc
inc
pop
xor
sbb
or
stc
inc
icebp
inc
rdpmc
lods
dec
mov
mov
xchg
add
add
pop
ja
scas
xchg
dec
dec
sub
lock
and
xchg
rcl
and
or
jmp
mov
popf
int
or
or
inc
lods
mov
dec
push
and
retf
and
jbe
mov
xor
cmps
cmp
mov
lods
into
push
mov
dec
pop
mov
mov
lock
je
sub
sub
stos
sbb
and
mov
icebp
mov
dec
sub
inc
imul
rcr
in
mov
push
adc
adc
ja
test
or
loop
jbe
cwde
and
and
xor
lods
aad
xor
cmp
cmp
lods
dec
or
xchg
iret
test
mov
retf
pop
popa
(bad)
jl
leave
or
jbe
add
inc
repz
es
cdq
jmp
int3
and
adc
push
(bad)
(bad)
dec
and
jae
jno
dec
aam
retf
sbb
stc
or
repz
sbb
jecxz
cmc
cdq
aad
xor
inc
in
or
rol
cli
outs
out
push
jle
test
xor
icebp
ret
in
ret
int3
ds
ds
or
ret
mov
call
pop
pop
and
fidivr
sub
jg
pop
sbb
and
aas
mov
fbld
and
cmp
ja
bnd
aas
retf
and
out
aad
bnd
adc
mov
ja
xchg
push
push
jbe
pop
sti
and
ja
movs
out
out
shl
in
jmp
xor
inc
ja
ret
mov
imul
sub
es
sub
mov
adc
sub
mov
je
jecxz
sbb
jb
mov
xchg
push
push
dec
jmp
rol
mov
mov
mov
pop
jnp
call
in
lods
pop
cmp
cmp
popa
hlt
mov
stos
pop
inc
dec
scas
cmps
dec
nop
shl
cli
push
add
dec
mov
push
mov
sub
fimul
sbb
into
add
push
stc
push
lds
sbb
mov
fild
push
sub
repz
or
push
mov
in
fwait
dec
sub
movs
push
jp
inc
fisttp
stos
outs
pop
retf
inc
sub
call
xor
or
push
retf
jg
mov
retf
ret
cmp
leave
shl
imul
inc
lea
mov
cwde
mov
repnz
jmp
add
icebp
adc
out
jle
xor
lods
arpl
pop
sub
jo
xor
or
push
xchg
(bad)
sbb
stc
retf
sar
clc
pushf
in
pusha
stc
dec
dec
or
and
xchg
lods
fisttp
rcl
loop
iret
arpl
mov
jmp
setns
enter
jp
jge
jne
xchg
jmp
iret
test
sar
jns
loop
sub
ret
test
xchg
mov
pop
push
xor
mov
adc
daa
inc
jae
pop
sbb
test
sub
sub
cdq
push
test
push
xor
adc
data16
popf
sbb
push
test
and
push
shl
mov
push
jbe
fidivr
pusha
mov
in
jo
sub
fld
adc
mov
fnstsw
pop
js
clc
xor
pop
outs
sbb
and
int
adc
cmps
outs
aad
scas
and
ja
arpl
(bad)
fidivr
pushf
daa
dec
in
push
xor
jmp
or
or
cmp
pushf
rcl
faddp
ins
gs
iret
pop
in
hlt
les
dec
neg
mov
test
push
stos
div
sub
and
add
int3
mov
cdq
mov
pop
into
jae
rcr
sub
mov
dec
leave
leave
icebp
jbe
ja
hlt
sbb
push
xor
add
jg
jb
stos
aad
shl
push
or
ds
rcl
push
dec
inc
mov
cwde
pop
(bad)
dec
xchg
pop
lods
mov
push
shl
sbb
mov
mov
xor
addr16
test
outs
outs
cmp
rcl
dec
cmp
call
xchg
pop
mov
jns
pop
push
not
aad
inc
or
and
ss
mov
(bad)
stos
push
pop
mov
jecxz
mul
and
mov
shufps
dec
lea
cmp
dec
mov
out
jb
or
mov
aas
psrad
scas
cmc
xor
xchg
adc
push
mov
or
push
dec
or
xchg
inc
call
push
call
xor
les
sbb
outs
adc
jns
and
push
(bad)
cmp
push
inc
(bad)
cmp
bound
scas
repz
fsubp
mov
xchg
cmp
stos
inc
cmps
adc
ja
and
dec
inc
hlt
and
imul
sbb
jns
cld
jle
adc
sub
aam
cmp
popa
jl
jmp
xor
jns
push
xchg
push
xor
mov
cdq
cmp
sahf
cmp
out
enter
retf
adc
std
push
cmp
push
fucomi
xchg
xor
jo
inc
leave
push
mov
(bad)
call
mov
add
mov
jp
and
neg
sub
fsubr
test
test
or
inc
or
int3
inc
jno
(bad)
sti
das
jne
data16
pusha
dec
xchg
es
sub
pop
mov
cmp
rdtsc
sbb
mov
mov
std
mov
or
dec
daa
mov
cwde
cmc
imul
stc
adc
(bad)
sub
jg
cmc
je
dec
mov
lea
loope
call
test
dec
add
test
jl
mov
cmps
xchg
getsec
repnz
sbb
pop
ins
adc
(bad)
(bad)
shl
fsub
jmp
in
lds
pop
adc
add
sbb
hlt
mov
imul
or
sar
(bad)
cmp
movs
sbb
int3
push
test
sbb
and
or
shl
cmp
loope
push
inc
std
jl
lahf
imul
call
mov
xchg
and
mov
retf
test
ja
push
xor
dec
push
ds
popa
jno
add
imul
mov
int
xor
test
inc
imul
adc
and
mov
test
ja
push
into
push
jecxz
hlt
sub
add
rcl
mov
(bad)
in
cli
xlat
mov
shl
lock
adc
cmp
aad
lea
jo
fcmovnb
inc
shl
mov
retf
inc
cmc
jmp
or
mov
sbb
dec
daa
(bad)
dec
jg
pop
mov
push
add
mov
push
inc
out
dec
mov
mov
into
loopne
mov
jno
(bad)
in
and
test
push
push
fild
lods
mov
cmp
inc
(bad)
push
movs
xor
iret
mov
fcmovne
bound
les
aad
sbb
shl
push
ret
sbb
std
test
push
jne
cmp
add
outs
(bad)
xchg
jns
out
je
sub
stos
leave
lock
mov
dec
bound
jno
int3
mov
pop
or
adc
popf
add
je
in
pop
jle
out
loope
mov
jnp
mov
and
fsub
sub
xor
jno
int3
mov
push
add
sbb
bound
sub
nop
lods
outs
cmps
jae
(bad)
ret
push
mov
dec
jne
jmp
push
cmp
xchg
fsub
pop
sbb
mov
rcr
rcr
loopne
(bad)
jnp
test
pusha
pop
lock
cmp
into
jl
cld
jecxz
jecxz
nop
push
pop
jno
xor
mov
cwde
mov
rol
jmp
inc
fistp
test
dec
mov
pop
jbe
test
imul
cwde
js
and
int
add
pop
call
les
jmp
stc
mov
stos
adc
cld
pushf
add
aam
push
mov
xchg
add
xor
out
push
jecxz
jno
jmp
cbw
bound
test
inc
mov
sbb
mov
mov
sbb
sar
mov
ja
lds
(bad)
and
jns
cmp
mov
loopne
cdq
loope
sbb
adc
cmps
fs
in
test
xor
jg
in
or
cmp
push
pop
(bad)
cli
mov
xchg
dec
bound
gs
ds
adc
repz
dec
push
sbb
cmp
shl
mov
fst
inc
es
ins
or
dec
outs
icebp
and
das
mov
out
ss
js
pusha
jno
fisttp
mov
sub
aam
lahf
sub
and
adc
lahf
sub
int
popa
or
das
test
cwde
je
(bad)
xchg
stos
xor
bound
mov
ss
inc
pop
outs
inc
pop
mov
jmp
mov
inc
out
or
test
mov
ins
enter
xlat
cdq
push
and
loopne
movs
popa
inc
test
or
aad
lock
paddusb
cs
cmps
cwde
outs
bound
xchg
xchg
mov
in
cmps
cld
cmp
inc
adc
je
mov
ins
lahf
mov
jecxz
faddp
mov
repnz
js
jnp
mov
jmp
or
pop
cmp
fadd
retf
gs
add
enter
sbb
and
push
add
popa
stos
pushf
and
inc
sbb
in
xchg
ja
push
jo
jecxz
jmp
call
pop
lds
push
loop
out
fnstcw
inc
and
adc
scas
xchg
pop
div
test
cwde
pop
scas
clc
and
stos
leave
popf
and
xchg
test
sbb
(bad)
mov
ret
xor
jb
iret
mov
cmp
push
add
mov
fld
push
xchg
ss
fwait
mov
mov
sbb
ror
popf
jmp
adc
inc
int3
fisubr
in
lock
cld
xor
out
movs
lock
mov
test
jne
lods
sbb
jecxz
jnp
mov
(bad)
xchg
je
aam
std
ins
jge
test
sbb
ins
lds
inc
test
mov
sub
cwde
jmp
sub
(bad)
push
xor
daa
repnz
pop
pop
mov
dec
dec
ret
mov
cwde
es
popf
mov
ins
pop
ret
fsub
push
push
int3
ins
js
iret
push
std
add
sti
(bad)
or
mov
pop
add
rcr
les
or
cmps
popf
popf
ins
jne
punpckldq
pop
xchg
int3
or
add
xor
pmulhw
in
pop
call
out
dec
mov
iret
jle
pop
dec
stos
lds
cmp
fnstcw
aaa
adc
jl
and
jp
jmp
mov
cwde
cmc
(bad)
frstor
out
xor
pop
mov
(bad)
push
inc
mov
ds
mov
dec
stc
fdivr
add
sub
fld
push
ror
cmp
int
inc
(bad)
sub
in
ja
retf
add
pop
ins
enter
dec
test
pusha
mov
cmps
pop
mov
mov
fidivr
xlat
push
cmp
dec
fcomp
daa
xor
imul
lods
pop
cwde
mov
dec
es
std
(bad)
popf
movs
lds
push
or
mov
fiadd
sub
dec
push
mov
das
mov
in
xchg
ins
jbe
cmp
sub
retf
jbe
sub
sahf
in
or
in
cmp
dec
call
sub
es
xlat
push
sub
lea
mov
fnsave
mov
ja
pop
mov
add
adc
enter
mov
in
lea
fwait
repz
push
stc
xchg
inc
jmp
dec
dec
inc
jnp
icebp
inc
or
aaa
mov
dec
in
sbb
mov
in
sub
mov
add
(bad)
scas
stos
jo
cld
xchg
or
and
mov
aas
(bad)
call
retf
sbb
out
inc
pop
pop
rol
fs
jmp
cwde
lods
shr
dec
repz
jl
pop
cld
(bad)
in
fld
in
sbb
test
imul
not
into
mov
imul
rcl
jl
cmps
fucomip
cmp
test
mov
mov
loop
out
inc
icebp
pushf
push
ds
popa
repnz
fs
das
xchg
pop
out
test
push
cdq
sub
(bad)
pop
add
mov
push
add
cmp
(bad)
inc
lds
dec
pushf
push
addr16
loop
call
mov
popa
mov
out
fsub
or
mov
cmp
movs
loop
jbe
or
pop
enter
fs
push
jne
sbb
loop
sbb
push
shl
jmp
movs
rol
pop
and
add
mov
jl
lahf
in
and
jl
xchg
ds
xchg
and
es
mov
or
fwait
dec
in
mov
jae
(bad)
mov
push
sbb
adc
add
adc
xchg
sbb
xchg
adc
sti
lods
mov
adc
les
fdiv
mov
push
inc
das
ret
test
jmp
lods
mov
pop
lods
push
stc
call
into
es
ds
cmc
lock
dec
pop
or
neg
push
mov
jmp
adc
(bad)
dec
and
test
pop
pop
adc
ja
pop
(bad)
jp
mov
adc
adc
daa
mov
cmps
jae
and
or
mov
dec
push
fild
jmp
mov
jmp
rol
jbe
mov
dec
repnz
xchg
clc
mov
test
xor
pop
mov
sbb
daa
imul
sbb
mov
movs
scas
push
dec
adc
sub
retf
push
pusha
inc
hlt
mov
cwde
mov
xchg
ret
ja
fidiv
xchg
cs
jo
ja
mov
pushf
scas
das
cmp
xchg
stos
aas
jae
dec
test
xchg
daa
fs
or
cmp
add
fwait
es
dec
retf
ret
xor
not
fyl2xp1
mov
dec
repz
in
add
mov
fistp
sbb
test
sti
shl
aaa
lods
adc
data16
fcom
fsubrp
loopne
ret
mov
retf
aam
push
mov
ins
push
cmc
sar
and
pop
push
mov
clc
cmp
xor
and
hlt
mov
inc
add
sbb
fldenv
es
add
cld
mov
rcr
cld
mov
cmp
inc
adc
out
or
ret
test
jnp
scas
jae
pop
inc
rcr
pop
retf
xor
mov
pop
arpl
cmp
mov
dec
mov
test
mov
sub
xchg
into
pop
movs
push
jns
push
and
pop
add
dec
jne
(bad)
das
hlt
mov
das
and
xor
lea
bound
mov
popa
outs
aas
aas
imul
loopne
xchg
xor
daa
inc
push
in
aas
mov
mov
arpl
pop
scas
daa
out
and
test
loope
ret
pop
mov
jg
outs
and
mov
lods
lods
sbb
test
js
mov
cwde
je
rol
mov
inc
std
ins
sub
pushf
scas
cmps
or
pushf
jmp
adc
(bad)
rol
jle
mov
xor
ins
jp
movs
push
test
and
maxps
mov
adc
or
push
push
fwait
loopne
sub
ret
lods
mov
or
cmps
into
out
in
jno
sub
ins
int
scas
jecxz
jmp
pushf
cmc
pushf
pop
jp
dec
dec
add
movs
lods
xchg
mov
pop
test
jecxz
jge
pop
xor
ror
add
pop
push
inc
jb
imul
lahf
push
data16
jns
push
bound
out
jmp
lea
aas
mov
popa
inc
std
pop
jbe
mov
fdivr
mov
hlt
jae
pop
out
xchg
dec
scas
aaa
jl
cmp
je
imul
fidivr
sbb
(bad)
ins
cmp
int
adc
add
ja
add
cmp
je
mov
ds
out
jns
mov
cwde
mov
fwait
pop
test
or
inc
int
mov
adc
aam
inc
jbe
aas
int
xchg
imul
repnz
stos
sbb
lods
jno
and
lds
mov
add
mov
or
jb
push
retf
xchg
adc
mov
xor
aaa
mov
pop
jp
iret
push
leave
stos
pop
shr
cmp
out
pushf
push
bound
rcl
xchg
loope
stc
(bad)
stos
hlt
mov
jns
(bad)
sbb
mov
lods
adc
add
xchg
(bad)
pop
or
mov
outs
arpl
sbb
pusha
dec
aaa
cdq
xchg
push
pop
jle
stos
pop
mov
mov
daa
dec
shl
mov
xchg
sar
xchg
fcom
dec
push
inc
cmp
pop
outs
pop
popf
push
lock
scas
sub
retf
sahf
inc
inc
shl
test
fcomp
out
lods
jo
mov
and
cmp
je
cmp
aam
push
ins
rcr
push
sahf
hlt
or
mov
sbb
push
jle
cmp
sub
mov
jge
cli
leave
pop
xchg
nop
pop
sbb
fcmovne
or
ins
sub
cld
inc
sub
jno
adc
pop
retf
sbb
jne
dec
and
push
push
in
hlt
leave
xchg
xor
and
mov
or
addr16
cmp
in
cmps
daa
xor
inc
or
aad
outs
aam
pop
mov
ret
jle
push
cs
inc
jge
js
xlat
es
(bad)
fsub
stos
pop
sbb
mov
adc
(bad)
push
pop
push
dec
or
fidivr
loopne
mov
scas
aam
into
int3
adc
fmul
int
cmp
hlt
mov
das
xchg
addr16
std
sbb
daa
dec
loope
push
call
gs
mov
push
vpsubw
xor
enter
rcl
mov
outs
cmps
push
jb
mov
push
imul
stos
adc
jl
jb
cmp
fs
mov
or
mov
adc
popa
jl
jns
loop
dec
adc
ss
inc
cmps
add
cwde
enter
pop
pop
pop
or
stos
in
hlt
mov
ds
xchg
lods
lods
test
pop
les
js
push
push
xor
pop
repnz
add
retf
imul
into
lahf
lods
sbb
push
mov
sbb
mov
xchg
mov
fild
enter
movs
mov
jg
es
pusha
xor
int3
cwde
jne
sbb
sub
pop
sub
loope
or
mov
std
push
adc
arpl
mov
mov
jmp
cs
push
adc
dec
sub
loop
xor
sbb
push
jmp
call
pushf
hlt
mov
mov
push
jbe
dec
repnz
jb
cwde
lock
or
sub
mov
or
push
std
popf
fldenv
sub
mov
and
push
inc
push
xchg
in
sub
js
push
div
sbb
mov
loope
sbb
ret
nop
clc
das
xchg
and
lds
repz
xor
mov
pop
sbb
lods
dec
xchg
xor
push
pushf
div
ret
int
fdivr
fdivp
xchg
mov
or
mov
ret
jp
cmps
xchg
inc
mov
jbe
iret
sbb
sub
aad
frstor
xor
mov
push
das
aam
jecxz
and
cli
stos
mov
sub
leave
cwde
push
sub
ss
out
sbb
dec
movs
sbb
mov
aad
sbb
paddq
retf
repz
mov
or
lods
iret
inc
mov
dec
je
pop
and
out
mov
sub
mov
imul
shr
cs
mov
lea
inc
scas
pop
leave
mov
fs
sub
fild
lods
adc
cmps
push
mov
bound
ret
jb
mov
scas
(bad)
cmps
adc
das
lea
xchg
xchg
and
xchg
outs
cld
jle
outs
iret
jle
repnz
js
mov
iret
dec
add
mov
sub
pushf
add
rcr
xchg
dec
or
inc
ja
(bad)
cmc
mov
jnp
adc
xchg
mov
adc
in
sbb
jecxz
mov
xor
inc
push
call
dec
push
test
arpl
out
lea
cmp
ds
mov
pop
aaa
ja
mov
les
mov
cmp
addr16
scas
cdq
cmp
cmp
sub
out
xchg
push
das
test
into
pop
pop
jne
mov
or
cmp
scas
or
sub
fcomi
ss
or
adc
add
or
out
xlat
mov
ins
xchg
xchg
cmp
jmp
(bad)
outs
or
repnz
xor
ins
stos
test
cli
jne
dec
jl
std
inc
repnz
test
mov
hlt
stos
call
call
sbb
ret
jmp
push
bound
scas
(bad)
rcl
pop
out
push
sub
inc
js
push
inc
mov
rcl
not
xchg
popa
or
js
popf
xchg
(bad)
cmp
and
add
test
das
push
ins
cmc
les
jmp
push
imul
lods
fist
call
lahf
into
xchg
or
mov
xchg
das
(bad)
(bad)
out
scas
jo
clc
scas
into
xlat
fs
pop
(bad)
mov
mov
in
mov
adc
sbb
sbb
push
mov
xchg
retf
pop
or
out
or
into
(bad)
pop
add
imul
arpl
add
addr16
ror
rcr
call
dec
je
dec
sub
fs
dec
push
mov
movs
cmps
mov
or
fiadd
popf
pop
test
ds
sahf
rcr
push
loopne
inc
cmps
mov
push
in
lds
inc
xchg
mov
loop
or
push
stos
sahf
cli
ds
hlt
xlat
push
cmp
pop
and
pop
or
sbb
push
push
add
add
rcl
cmp
leave
ror
aam
sti
daa
inc
xchg
mov
push
clc
add
jecxz
jge
or
cmps
cli
push
loope
sbb
inc
push
(bad)
mov
rol
pop
fucomip
movs
into
or
popf
int
cs
repz
xor
nop
push
(bad)
xchg
cmps
mov
cdq
mov
call
mov
in
mov
stos
mov
cdq
int3
sahf
mov
rol
cmps
mov
push
sub
cmp
ds
push
shl
int3
sbb
rcl
retf
pop
push
cli
pusha
add
rcr
mov
(bad)
je
add
add
or
inc
lea
inc
xchg
jbe
push
xchg
mov
call
jnp
mov
jp
clc
sub
fst
mov
jl
(bad)
hlt
sahf
dec
dec
outs
mov
and
(bad)
in
jne
cmp
ds
jmp
lock
movs
ins
das
cmp
dec
mov
popa
push
fiadd
cwde
arpl
js
stc
push
jg
out
popa
inc
mov
add
push
lds
fist
pushf
retf
sbb
sub
cmc
jl
jno
test
xlat
dec
pusha
icebp
repz
sbb
dec
sub
xor
iret
xchg
cwde
mov
or
jp
fistp
clc
ror
lds
movs
retf
(bad)
jmp
cli
repnz
out
call
(bad)
rcl
das
pop
pop
or
and
leave
ret
xchg
add
call
pop
pushf
addr16
xchg
push
out
jbe
push
jl
mov
or
and
jo
adc
in
add
arpl
and
icebp
call
xor
pusha
and
cwde
jnp
mov
push
ins
mov
or
(bad)
sti
retf
jnp
inc
sti
cmovae
imul
jb
xchg
cli
xchg
xchg
ss
fcmovb
movs
jns
sub
xchg
and
(bad)
push
jae
scas
add
arpl
nop
ins
out
cli
mov
mov
loopne
out
push
fistp
and
mov
add
sar
adc
add
mov
in
jns
adc
test
mov
cmps
fsub
pop
call
aad
cmp
xor
lahf
shr
sub
dec
ja
stos
mov
xor
inc
adc
fwait
lods
jmp
fdivrp
loopne
rcr
stc
outs
sub
in
cmp
inc
cwde
hlt
add
aaa
sub
jle
pop
test
jae
cwde
retf
push
push
jge
retf
dec
test
loopne
jb
(bad)
or
stos
push
xor
gs
pop
imul
xor
sahf
add
pop
mov
hlt
ficom
ret
js
cmp
cmps
xchg
je
imul
adc
cmps
jg
push
xor
leave
bound
repz
lock
or
jp
xor
sbb
mov
out
jne
test
or
push
pop
xor
movs
(bad)
dec
add
cmovs
jl
(bad)
inc
lods
xchg
pop
mov
mov
fst
push
mov
mov
mov
jp
push
jno
fwait
jecxz
or
nop
in
push
mov
repz
pusha
jp
cwde
mov
mov
jns
aam
bound
mov
out
jno
jbe
or
clc
mov
je
mov
into
jp
(bad)
xor
xchg
inc
dec
lock
movs
xchg
and
or
pmulhuw
cmps
loopne
adc
nop
(bad)
(bad)
mov
lea
les
jmp
inc
cmp
sbb
pop
mov
cmp
movs
push
and
xor
and
mov
ds
fbld
sub
(bad)
mov
imul
mov
push
pusha
mov
xor
and
ds
jb
mov
adc
sub
ss
and
adc
push
out
rcr
ins
cmc
and
jge
test
test
cld
mov
pop
sub
in
mov
aam
add
aad
popa
jmp
adc
jae
adc
xchg
fsubr
loopne
je
popa
sahf
add
cli
loope
es
inc
or
pop
arpl
and
pop
aam
es
sbb
enter
add
clc
sub
mov
mov
mov
pop
sbb
dec
add
into
call
pop
bound
ficom
les
pop
fistp
xor
jae
pop
sbb
xchg
add
mov
inc
mov
pop
inc
push
rcl
fcom
test
mov
(bad)
and
sbb
sti
mov
pop
bound
pmuludq
scas
mov
push
xor
or
out
mov
lock
int
daa
push
or
out
nop
pop
mov
cwde
jmp
ins
add
cmp
(bad)
dec
in
add
mov
daa
cmc
mov
sbb
aaa
mov
into
dec
adc
mov
push
je
enter
cmps
or
scas
repz
cli
mov
(bad)
std
cdq
fs
aam
mov
rol
xor
fiadd
fwait
push
retf
push
out
add
jo
pushf
dec
es
sbb
sbb
jl
(bad)
(bad)
sub
cmps
pop
or
mov
xchg
ret
stos
jmp
jle
cwde
out
xchg
call
or
mov
mov
inc
dec
outs
mov
adc
jnp
and
dec
mov
xchg
ja
out
mov
loop
daa
mov
adc
xor
mov
ja
sub
shl
ss
xchg
pop
pop
scas
rcl
sub
push
ret
ss
ins
call
lods
ins
(bad)
aas
mov
sbb
mov
js
sahf
fcom
rcl
add
call
or
xchg
stos
inc
test
inc
dec
inc
push
scas
mov
mov
push
sar
(bad)
es
idiv
adc
adc
push
shl
scas
xor
dec
dec
popf
sub
nop
cmp
out
in
repnz
pop
sbb
mov
cmp
call
adc
push
loopne
test
addr16
outs
mov
outs
sub
and
inc
push
sahf
mov
cmps
sti
sahf
dec
jge
enter
xchg
fdivrp
popf
xchg
cmp
dec
fwait
mov
rcr
and
cli
dec
js
ret
inc
mov
push
push
cld
pop
lock
jne
inc
or
neg
mov
sbb
into
mov
int
dec
pop
and
cmp
call
sar
push
in
add
or
ds
xchg
xlat
push
daa
(bad)
pop
cmp
jo
xor
fwait
jmp
xor
cmp
mov
ss
fstp
outs
sbb
push
mov
out
movs
pop
dec
into
sbb
stos
xor
jle
rol
push
cmc
(bad)
xlat
dec
int3
jne
mov
ins
jecxz
jno
test
in
xor
setp
xlat
mov
stos
imul
jmp
and
lea
mov
sub
inc
call
mov
pop
mov
mov
es
mov
mov
jne
push
pop
xchg
sti
pushf
cmps
icebp
mov
xor
loopne
and
popa
cmp
mov
hlt
pop
loopne
jb
or
jge
cmp
scas
cmps
xchg
mov
fsub
ret
data16
stc
repnz
jg
mov
(bad)
shl
fldenv
or
and
adc
mov
repnz
jge
sbb
jbe
sbb
and
or
cwde
cwde
pop
shl
xchg
pop
jns
fnstsw
daa
jbe
mov
loope
dec
gs
inc
fld
sub
idiv
add
lds
(bad)
inc
(bad)
js
cmp
inc
push
dec
fxtract
repz
call
adc
je
pop
pop
xchg
jmp
stc
popa
push
fdivr
pushf
add
cdq
inc
scas
inc
inc
pop
or
push
loopne
inc
je
mov
sbb
mov
pop
xor
inc
stos
pop
cmp
mov
call
xchg
cmp
sbb
adc
loope
cmp
jl
cld
xor
ins
xchg
shl
dec
mov
mov
inc
xchg
xor
push
fdivr
and
pop
nop
xor
aam
push
mov
sbb
mov
xor
fstp
xlat
adc
aad
xor
xor
cdq
cmp
and
dec
sti
pushf
movs
outs
jmp
(bad)
int
loopne
je
jmp
mov
mov
or
add
dec
ins
into
sub
pushf
sub
jno
inc
and
je
ror
push
add
mov
xor
out
and
sbb
jge
ins
push
aas
das
and
cld
mov
cmp
cmp
jle
sub
cmp
lahf
lods
pop
arpl
inc
(bad)
sahf
dec
push
repnz
outs
ss
out
loop
int
out
jns
pop
ficom
ins
pop
mov
mov
adc
fist
daa
dec
pop
nop
adc
enter
out
stos
sub
imul
mov
xchg
push
or
addr16
mov
cwde
dec
stos
mov
or
jb
inc
adc
mov
mov
fldenv
fcomip
scas
loopne
in
(bad)
icebp
jnp
cdq
ficom
adc
sub
push
stos
imul
sub
fist
push
mov
push
loopne
inc
call
cdq
dec
leave
cmp
sbb
mov
push
outs
and
aad
data16
mov
mov
clc
dec
jb
xor
pop
mov
arpl
cdq
(bad)
out
mov
mov
lds
push
jl
adc
mul
push
mov
add
sar
ja
lahf
or
aam
push
call
cmp
mov
xchg
icebp
leave
(bad)
xchg
lods
rcr
cwde
(bad)
sub
loop
sar
scas
and
add
xor
cmps
add
enter
xchg
das
pop
mov
lock
into
(bad)
(bad)
fist
cs
int
inc
ds
mov
cmps
cli
ret
idiv
sub
aas
cwde
pop
mov
fild
xchg
rcl
push
pop
xor
fistp
cdq
sbb
dec
je
add
inc
pop
loope
test
mov
out
cmps
bound
mov
in
xchg
shr
xchg
push
sar
add
xor
push
cwde
push
add
jne
and
mov
stc
cwde
dec
jmp
inc
or
add
ret
out
mov
aas
dec
jo
int
addr16
int
sbb
dec
movs
xor
jmp
(bad)
pusha
(bad)
fdiv
push
ins
inc
mov
push
cmp
xor
xor
mov
lock
push
(bad)
fimul
arpl
aad
cmp
or
jbe
or
test
adc
adc
mov
mov
das
jne
shl
xchg
std
jg
push
pusha
push
es
stos
cmc
shl
ss
in
pop
jns
mov
in
mov
adc
pop
push
inc
iret
sbb
out
sbb
dec
mov
rol
jno
fdivr
mov
inc
pop
stos
call
adc
rol
xor
sahf
push
pop
and
test
push
push
arpl
mov
out
les
or
jns
jne
or
dec
dec
pop
inc
push
or
imul
inc
xor
mov
add
sahf
mov
xor
push
pop
ds
jbe
rcr
mov
sub
loop
and
mov
(bad)
sub
ror
mov
retf
adc
jl
iret
dec
icebp
(bad)
push
mov
cmp
dec
mov
cmps
jae
push
popa
jle
les
and
je
sbb
xchg
cwde
aaa
mov
sub
mov
popa
movs
or
push
jp
stc
or
ficomp
dec
adc
stos
data16
sub
push
xchg
fadd
and
jno
shl
movs
sub
jne
inc
cmp
popf
rol
sar
es
pinsrw
push
sub
in
(bad)
outs
iret
nop
xor
fdiv
ror
mov
shr
xchg
or
mov
outs
lods
and
retf
mov
pop
mov
int3
xor
int
movs
call
stos
and
data16
into
xor
push
cmp
loopne
test
cmp
mov
xor
mov
es
adc
jp
jae
rol
loopne
jmp
and
daa
shr
ret
fcomp
popa
fstp
daa
data16
fcmove
ins
mov
arpl
leave
push
int
leave
push
ret
jns
dec
stos
iret
cmps
outs
or
lods
mov
cmp
cmp
inc
lods
(bad)
push
and
in
ret
pop
pop
lds
push
mov
add
test
das
sar
adc
jmp
(bad)
in
fsubr
sub
adc
cmp
jmp
fisub
mov
cld
mov
stc
inc
ins
in
les
xor
loop
xchg
jae
xchg
sub
sbb
aaa
pop
outs
stc
aaa
jmp
lock
add
or
sub
and
in
in
pop
out
xchg
push
lds
(bad)
pop
jle
inc
mov
ror
stos
jno
or
dec
mul
mov
mov
adc
ret
mov
mov
out
dec
mov
xor
imul
out
ret
in
fild
pop
mov
pop
not
aam
outs
jno
adc
ret
push
pop
out
push
sti
pop
repnz
sub
out
dec
sbb
pop
add
(bad)
sub
mov
adc
int
sti
add
les
jge
inc
and
popf
bound
push
pop
les
sub
fidiv
nop
rcl
fwait
dec
test
int
into
aam
call
(bad)
pop
xor
sub
adc
pop
mov
test
push
push
sbb
les
push
icebp
mov
shl
adc
scas
inc
rcr
aad
sti
ret
xchg
rol
jne
cmp
fdiv
mov
xchg
adc
cmps
or
sbb
and
iret
out
or
adc
retf
and
xchg
dec
in
(bad)
jg
aam
ins
jmp
mov
fiadd
xchg
fcomp
daa
mov
mov
and
mov
cmp
jmp
enter
and
adc
repnz
test
sub
rcr
push
sbb
cwde
aam
push
ret
pop
sub
push
in
arpl
mov
mov
jnp
push
loope
loopne
dec
pop
in
shl
sub
xchg
cmps
out
adc
das
adc
add
mov
mov
or
in
sub
sar
xor
add
mov
daa
(bad)
adc
mov
xor
loop
in
push
sbb
sub
out
xchg
pop
aaa
fwait
xor
stos
dec
xor
shr
mov
push
(bad)
cmp
lea
mov
sbb
or
lock
(bad)
test
xchg
retf
xchg
mov
and
xchg
data16
std
sbb
xor
mov
ret
xchg
mov
outs
sbb
ret
inc
sbb
lea
jge
lods
cmp
(bad)
div
jge
rcl
xor
test
sub
rcl
push
fnstsw
jle
mov
xchg
andnps
fstp
pop
push
in
mov
(bad)
fstp
jb
stos
xchg
mov
jmp
xor
jne
sub
push
test
lods
push
dec
xchg
call
mov
fnstcw
dec
jp
dec
adc
mov
sbb
popa
ret
cli
fist
lds
mov
dec
xchg
shl
jp
xor
ret
dec
mov
mov
dec
mov
popf
push
test
pop
ror
sub
arpl
add
cmp
(bad)
cmp
jns
jge
jne
sub
ds
sbb
push
jg
inc
ss
hlt
imul
arpl
jl
mov
std
addr16
mov
in
inc
sbb
pop
inc
xchg
gs
sbb
dec
jle
and
mov
jl
lds
jmp
retf
xchg
ss
xchg
and
xor
inc
(bad)
nop
mov
or
cmps
cs
adc
nop
popa
sbb
mov
mov
mov
xor
addr16
fistp
inc
out
call
movs
jge
fwait
ret
and
cdq
xor
and
(bad)
ficom
std
or
popa
jl
push
int3
mov
int
fsubr
mov
sbb
jecxz
sub
js
adc
sbb
mul
jmp
mov
pop
sbb
mul
push
mov
imul
repz
hlt
mov
enter
push
into
mov
not
cmc
mov
scas
push
pop
mov
pop
cmp
xchg
sub
or
push
sub
dec
inc
pop
ja
xchg
and
sbb
mov
push
mov
jge
xor
daa
dec
aaa
and
inc
hlt
jns
in
xchg
dec
ins
push
jecxz
dec
pop
push
popa
sub
clc
jnp
mov
sub
jp
lahf
sar
ja
(bad)
mov
inc
adc
lods
sbb
jecxz
cli
loop
repz
lods
pop
adc
pop
adc
sub
pop
jne
xor
test
aam
stos
scas
repz
aad
xchg
cmp
sbb
jge
jns
adc
stos
lock
mov
sbb
sbb
shl
stos
ret
fsubrp
loope
push
or
and
sbb
mov
dec
xor
dec
mov
iret
sti
aaa
dec
dec
(bad)
in
les
or
mov
inc
ror
dec
and
aad
inc
jae
sbb
stos
pop
call
inc
stos
sbb
mov
push
dec
inc
and
push
in
retf
cwde
pop
outs
imul
sub
xchg
mov
jmp
out
sbb
mov
test
xor
jmp
inc
xchg
dec
mov
jns
xlat
cmp
inc
inc
aad
mov
lahf
addr16
sbb
xchg
pop
aad
inc
test
xchg
(bad)
nop
popf
(bad)
mov
jnp
jns
imul
xor
sar
or
nop
add
stos
pop
sahf
sar
jmp
sar
aam
lahf
and
daa
mov
test
in
inc
ret
into
xchg
jle
push
sub
add
mov
jmp
sbb
sbb
inc
dec
arpl
into
lahf
dec
lahf
stos
add
adc
xor
jb
mov
cmp
jb
mov
pop
sub
mov
mov
mov
pop
or
into
xchg
and
dec
jecxz
sbb
loopne
cmp
in
fistp
test
fstp
ror
dec
adc
sub
mov
stos
fs
ss
outs
and
test
push
popf
jo
sub
dec
cld
scas
mov
int
aad
fldenv
js
cmc
mov
or
dec
sbb
addr16
sahf
adc
mov
retf
inc
cwde
std
mov
ja
(bad)
cs
jl
aaa
test
cmps
into
(bad)
inc
cmp
jae
sahf
pop
push
enter
bound
xchg
dec
ins
mov
jg
js
fwait
ds
xor
push
xchg
fistp
and
loop
mov
sub
cmps
outs
jle
adc
pop
les
xlat
cmp
mov
ja
nop
xchg
wrmsr
into
push
cmp
mov
in
test
in
adc
lods
xchg
call
ins
out
sbb
fcmovbe
add
je
retf
das
mov
daa
mov
(bad)
cwde
stos
ret
fiadd
and
and
(bad)
fdiv
jecxz
test
cmps
and
fcmove
xlat
scas
dec
ja
lds
mov
stc
pop
mov
dec
and
mov
lods
and
dec
fwait
mov
imul
fadd
xor
cdq
push
xor
cmp
pop
cli
pop
out
inc
imul
enter
mov
sub
mov
jg
pop
or
iret
xor
push
cmp
mov
mov
dec
jmp
sub
shl
daa
je
xor
sub
jl
sar
call
pusha
inc
arpl
push
push
add
add
push
icebp
mov
imul
(bad)
adc
in
sub
(bad)
out
sar
call
int3
repnz
jg
xchg
mov
jecxz
pop
cmp
test
lea
push
jecxz
loope
mov
in
ins
test
pop
(bad)
cmps
mov
sub
aam
dec
jns
mov
xor
inc
fldenv
xchg
inc
fadd
jg
fwait
stos
pop
popa
mov
int3
scas
mov
sti
loopne
fucom
scas
popf
loope
xor
jg
mov
add
add
sbb
mov
test
and
mov
pop
test
jbe
popf
lods
sti
push
cmp
popf
xor
cdq
jge
retf
inc
pop
cmc
test
pop
jb
jecxz
test
xchg
mov
jmp
adc
popw
adc
and
xor
xor
jb
mov
mov
clc
movs
cdq
(bad)
ss
mov
jecxz
pop
xchg
add
dec
ins
jle
cmp
cmc
rcl
jle
mov
jae
lds
aaa
sbb
jle
pop
ins
mov
ret
adc
aad
jnp
jle
cdq
in
mov
xlat
out
sub
arpl
xor
sahf
cmp
sbb
jo
stos
push
mov
jae
in
je
inc
or
xchg
add
fisub
sbb
scas
popa
(bad)
pop
adc
call
push
cmp
cld
shl
clc
xchg
ret
cli
jae
cmp
fldenv
ror
jae
test
ins
ffree
clc
dec
test
xor
fisub
jl
jle
mov
and
rcr
jmp
into
jecxz
mov
retf
enter
mov
fwait
xor
stos
fld
fbld
daa
mov
and
jl
les
push
adc
aas
addr16
inc
dec
mov
sbb
cmp
dec
jmp
xchg
movs
xchg
aad
(bad)
fild
int3
js
data16
stc
xor
adc
scas
std
jae
hlt
das
pop
int
xor
mov
xchg
leave
push
sub
xchg
mov
xlat
and
dec
sub
add
mov
mov
js
push
inc
test
sub
cwde
adc
outs
or
retf
or
push
(bad)
sahf
test
aas
or
push
and
push
jno
(bad)
rcl
push
daa
and
xor
sbb
aaa
into
inc
dec
stc
shl
mov
mov
std
ins
ficomp
ins
and
xlat
ret
xor
xor
sub
pop
jl
data16
icebp
fninit
dec
scas
outs
stos
and
push
cdq
lfs
pop
xchg
aam
push
mov
mov
in
cwde
pop
mov
sub
cli
sbb
hlt
nop
popf
rol
mov
adc
xchg
mov
call
xchg
cmp
lahf
cmp
mov
ins
adc
sub
pop
retf
and
inc
push
or
xor
add
inc
push
fs
xor
dec
leave
mov
sbb
adc
pushf
jmp
ds
sti
inc
xchg
int3
dec
xor
mov
stos
cmp
push
data16
popf
push
test
stos
jb
ss
pop
jbe
mov
imul
imul
sub
mov
or
test
xor
ins
call
das
pushf
daa
ret
ins
push
stc
push
mov
push
in
je
ins
mov
xchg
dec
aas
out
add
dec
mov
stc
icebp
push
repz
mov
imul
and
adc
sbb
xlat
or
call
sub
fisubr
inc
pop
sbb
jns
outs
ds
(bad)
jl
out
xor
xchg
mov
lock
adc
ins
mov
pop
jbe
(bad)
sbb
ss
xlat
sbb
dec
pop
sub
out
sbb
jmp
dec
ja
dec
add
(bad)
aam
retf
push
nop
cmc
xchg
mov
in
add
push
mov
push
lock
cmp
das
mov
int3
fst
adc
xchg
out
icebp
push
and
or
aad
cmp
cli
mov
jle
fs
test
sti
cwde
imul
xchg
or
loop
xchg
in
fwait
jle
cs
scas
mov
xchg
cwde
mov
cmp
stos
xchg
popf
rol
fs
mov
in
out
cmp
clc
hlt
dec
jne
int3
out
inc
call
and
cmp
aaa
xchg
nop
cmp
mov
sqrtps
cmps
cwde
sbb
sbb
std
xor
jne
adc
cld
add
in
adc
mov
fcom
int3
xor
cmp
aad
dec
call
icebp
test
bound
jae
clc
repnz
push
sbb
(bad)
sbb
inc
fwait
sbb
es
data16
mov
inc
sti
lock
cmc
scas
adc
inc
cmps
jno
push
sbb
mov
lods
ins
xchg
not
and
mov
cwde
dec
retf
cli
pop
(bad)
xchg
push
stc
xlat
mov
ret
out
and
xor
enter
pop
dec
adc
mov
dec
xor
sti
jnp
sar
cmp
lds
push
and
jnp
mov
aam
dec
mov
rep
mov
sbb
xchg
xor
pop
push
int
scas
sti
inc
mov
sbb
jae
(bad)
mov
cmp
fist
outs
xchg
mov
sub
in
fsub
add
sti
jl
mov
out
or
stc
test
jle
add
and
ret
xchg
imul
pop
stos
mov
jge
push
xchg
stos
cs
lea
fmul
hlt
imul
dec
mov
adc
xchg
int3
(bad)
out
in
jbe
jge
jbe
mov
aad
pop
add
loope
jnp
pusha
mov
loopne
mov
mov
in
test
out
lea
ja
adc
jp
call
nop
dec
out
inc
shr
adc
neg
pop
sub
xchg
mov
mov
out
cmp
sub
dec
aam
sbb
push
mov
pop
clc
bts
cmp
and
push
inc
enter
sbb
cld
pop
mov
sub
(bad)
out
cmp
or
pop
(bad)
jne
inc
sbb
and
pop
mov
add
cdq
scas
retf
shr
mov
lahf
out
and
inc
cmp
adc
lods
sbb
mov
aad
cmp
jne
cmp
leave
stos
dec
push
push
jle
push
pmullw
adc
cdq
mov
pop
pop
ret
and
jl
ja
repz
mov
xor
sbb
jecxz
adc
pushf
imul
xchg
pop
js
jmp
sbb
cld
xchg
mov
push
xchg
cmp
test
cmp
jg
into
or
test
mov
inc
jecxz
imul
sub
in
enter
xchg
hlt
popa
lds
mov
cmps
neg
retf
gs
mov
hlt
mov
int3
inc
retf
pop
sbb
push
push
pop
pop
or
int3
adc
cmp
fstp
repnz
leave
call
mov
xchg
in
push
std
int
mov
add
jnp
in
fistp
aam
mov
mov
iret
mov
lock
jo
mov
push
mov
push
push
jmp
push
jb
and
cmp
sub
add
fucomp
and
adc
pop
push
adc
leave
ret
pop
mov
mov
ret
ret
cmp
iret
mov
sbb
std
pop
inc
jge
xlat
jecxz
jge
pop
adc
cmp
pop
cli
add
dec
adc
sahf
inc
xchg
retf
test
pop
jno
mov
add
out
iret
sub
test
push
mov
and
in
and
mov
inc
cwde
cwde
push
or
add
bound
test
jae
mov
xlat
dec
bound
xchg
add
and
and
add
jmp
dec
add
and
push
cmp
gs
repz
xor
push
add
(bad)
scas
or
jo
stos
sbb
xor
loopne
pop
cmp
das
or
sbb
xor
xchg
or
sub
dec
jne
fs
es
shl
xor
mov
out
in
push
adc
adc
adc
dec
xchg
sti
vmwrite
jnp
stos
hlt
dec
push
retf
cmc
into
cmps
mov
mov
mov
(bad)
sbb
retf
xchg
movs
dec
xchg
jne
jae
pop
movs
mov
ror
push
je
leave
jmp
fiadd
xor
sbb
sbb
adc
and
pop
jb
pop
cmc
mov
(bad)
push
neg
jecxz
adc
nop
sahf
and
mov
xchg
out
cmc
inc
test
jl
repnz
idiv
rcr
sub
xchg
push
lea
fadd
mov
mov
or
cmp
test
mov
jno
cmp
nop
les
adc
sbb
mov
setns
inc
xor
add
test
jg
cmp
lods
popf
lods
push
xchg
pop
div
sbb
(bad)
fmul
sbb
call
icebp
adc
aaa
icebp
es
jl
ss
stos
xor
xor
and
fild
jg
push
jmp
loop
cld
cmp
xchg
adc
sbb
xchg
jno
cmps
push
inc
loope
(bad)
and
push
mov
push
stos
std
dec
daa
in
test
pop
cmp
or
test
mov
fld
jbe
sub
daa
cmps
inc
enter
pop
inc
fdivp
push
push
xor
mov
sbb
shr
cli
les
scas
sbb
add
loop
dec
adc
test
mov
call
or
mov
sub
mov
inc
pop
mov
or
das
rcr
push
mov
mov
lock
ror
push
call
jbe
out
xor
lea
jl
add
arpl
xor
test
inc
fs
sbb
clc
sbb
mov
cmp
inc
or
xchg
popf
xor
(bad)
mov
or
cmps
pop
lods
mov
push
xor
in
nop
pop
(bad)
in
sbb
push
pop
cmp
fistp
test
push
push
sbb
retf
push
ja
call
je
inc
sub
hlt
or
sub
jno
mov
dec
dec
push
dec
in
mov
dec
dec
push
inc
and
icebp
test
retf
dec
mov
cmp
push
cs
push
fnstenv
out
clc
or
and
cmp
mov
or
mov
pop
mov
xor
out
fstp
ret
push
jnp
loop
xchg
push
leave
ret
inc
cmp
dec
xchg
adc
jge
sbb
(bad)
mov
mov
arpl
outs
ss
ins
xchg
cmp
shl
xchg
pop
xor
sub
out
and
jb
aas
cmc
mov
jmp
pop
sub
inc
ja
cmp
ins
jnp
sahf
ret
push
(bad)
cmp
mov
xor
mov
sub
dec
xlat
cwde
mov
pop
xchg
and
xor
stos
outs
mov
mov
cdq
jne
out
arpl
imul
sbb
leave
push
xchg
fisttp
xor
pop
call
cmp
dec
xchg
add
push
ret
test
push
sub
mov
cs
out
adc
test
xor
adc
inc
push
or
rep
xor
outs
push
shr
imul
fist
mov
sbb
jge
jg
rcr
xchg
les
sahf
cmc
sbb
ds
xchg
dec
sub
sti
xor
dec
out
mov
jecxz
leave
jae
jmp
push
adc
sub
xchg
cmc
movs
clc
gs
and
inc
xor
ja
loope
xor
fsubr
mov
js
(bad)
movs
push
in
arpl
sub
in
in
jae
jno
and
pop
jle
into
jmp
or
(bad)
inc
add
rol
or
icebp
mov
and
ins
mov
pop
call
lea
dec
jmp
or
mov
dec
adc
jmp
aaa
jne
jae
or
jno
lock
js
fnsave
and
xor
and
imul
retf
int3
lds
mov
cmp
or
cmps
imul
or
test
daa
das
cs
outs
fcomp
dec
dec
dec
outs
sub
in
add
jecxz
in
icebp
movs
enter
repnz
and
jmp
inc
cli
inc
loopne
shr
loop
fs
xor
pop
jmp
pop
lea
mov
ret
pop
xchg
neg
inc
pop
xchg
pop
out
pop
sub
cmps
xor
pop
pop
xchg
rcr
nop
mov
out
adc
sub
pop
cmp
fsubr
sbb
rcr
aad
push
or
sbb
mov
outs
pop
mov
cmps
adc
mov
sbb
stc
pop
leave
mov
mov
(bad)
fucomip
adc
push
ret
je
or
fldenv
mov
and
or
push
rcl
repz
test
push
dec
pushf
mov
push
xor
cmp
or
std
ja
cmp
fwait
mov
xor
shl
das
outs
mov
or
mov
call
lock
test
mov
enter
stos
int
xor
jp
ins
push
inc
xchg
leave
(bad)
rol
sbb
fisub
lea
sbb
sub
mov
and
xor
add
movs
in
jae
sub
push
pop
fisub
sar
jp
lds
sbb
add
test
movntq
out
cmp
sbb
mov
lods
mov
mov
and
leave
lods
aaa
xor
cwde
ins
pop
sub
jl
adc
push
xchg
mov
lock
clc
cmp
lds
cmps
mov
call
xor
adc
push
in
fs
xor
js
mov
mov
das
aas
cld
es
mov
push
xchg
xchg
xor
mov
movs
mov
push
mov
out
in
pop
add
xor
daa
dec
dec
cmp
repz
mov
rcr
cmp
cmp
and
mov
lock
or
ss
aas
daa
pop
mov
in
cmp
and
pop
ror
outs
mov
cmp
jle
dec
and
fnsave
and
jg
cli
jle
addr16
xchg
mov
mov
test
ja
out
loopne
lods
scas
add
and
jge
arpl
xchg
cmp
cmp
xchg
lods
test
aam
out
cdq
into
es
lods
imul
das
in
sub
cmc
add
sub
pusha
or
aas
jb
in
or
add
inc
mov
(bad)
cmp
rcl
sub
mov
outs
repnz
cwde
pop
add
into
jge
lds
xchg
inc
enter
(bad)
mov
xchg
xor
seta
mov
xor
xor
mov
push
jp
std
inc
push
or
fstp
int3
adc
jmp
mov
(bad)
cmp
xchg
inc
mov
xor
ret
xor
out
js
leave
or
sub
sub
dec
and
sub
sub
inc
adc
xor
or
or
mov
stc
jb
nop
gs
pop
jp
adc
imul
pusha
ins
mov
out
in
je
out
cs
pusha
lahf
push
mov
jne
(bad)
aaa
adc
xchg
add
js
jb
arpl
pop
pop
add
fwait
push
fidivr
cmp
mov
inc
or
fwait
add
xor
mov
imul
push
xor
add
push
or
ret
dec
dec
inc
and
jmp
seto
adc
fidiv
jle
sbb
jmp
and
fidiv
aad
into
je
dec
out
stos
push
in
js
and
push
add
xor
dec
(bad)
pop
xor
push
js
hlt
iret
and
pop
outs
scas
rcr
xchg
mov
fwait
iret
cmp
lock
add
popa
ror
inc
int
fdiv
or
xlat
sti
test
es
lods
sub
sbb
loop
je
popf
test
add
ror
iret
jb
push
call
dec
add
cmp
inc
lods
mov
cmc
jecxz
sbb
dec
(bad)
mov
ins
push
cli
addr16
cmp
xchg
jg
xor
lods
cmp
dec
xor
dec
cdq
gs
push
(bad)
pop
mov
jg
sbb
sahf
std
stc
nop
popf
sub
div
dec
lea
xor
or
pop
rcl
stos
fs
movs
lea
ret
xor
pop
out
push
ins
push
pop
and
std
sbb
into
inc
(bad)
mov
ins
jle
sbb
hlt
xor
(bad)
and
sbb
mov
mov
xchg
repz
mov
mov
scas
cwde
ins
hlt
inc
inc
mov
aaa
lods
cmp
icebp
and
xchg
ret
push
xchg
loop
ds
push
mov
pop
push
pop
fsub
fwait
repnz
daa
lock
out
scas
mov
test
dec
sub
xchg
mov
mov
js
mov
and
sbb
jecxz
out
add
or
jg
push
or
push
inc
mov
and
movs
es
mov
push
dec
mov
retf
mov
push
mov
ins
mov
(bad)
push
inc
ins
gs
loopne
mov
jle
gs
cmps
mov
sbb
push
dec
das
cwde
ins
jns
sbb
xchg
ins
enter
inc
retf
xor
xchg
add
mov
int
xchg
add
pop
add
aas
sti
popa
mov
jmp
push
fs
sar
cmp
inc
sub
fs
bound
mov
sub
inc
and
mov
call
inc
fsub
inc
fsub
cli
mov
xchg
call
sub
mov
scas
jo
sbb
sbb
xlat
jo
inc
push
inc
sub
icebp
and
shr
ins
addr16
outs
out
retf
fs
xor
xchg
outs
pop
inc
out
adc
into
jne
xchg
add
(bad)
push
cmp
adc
pop
jge
stc
cmp
pop
mov
fild
dec
mov
pop
sub
pop
mov
lds
out
jnp
mov
and
cmc
xor
paddq
adc
icebp
push
push
inc
pop
pop
push
fld
inc
call
mov
fs
adc
pop
(bad)
jl
daa
push
cmps
mov
mov
aam
shr
or
adc
xor
xchg
push
lahf
cmp
shl
adc
xor
loope
cmp
pop
mov
or
push
imul
call
jo
pop
cmp
cli
fsubp
ins
vmovntps
leave
adc
cmp
sbb
stos
jae
xor
outs
in
lea
inc
mov
jno
xor
fdiv
jg
leave
push
clc
pop
sub
shl
nop
stos
cmps
mov
mov
jmp
cmp
idiv
dec
or
xchg
xchg
movs
cli
or
sar
dec
arpl
pop
data16
mov
hlt
mov
out
fisttp
aam
in
rcl
cld
push
jmp
rol
hlt
lahf
cmps
rol
ret
cmp
retf
or
or
das
push
fs
and
(bad)
and
fsubp
sar
shl
dec
push
pop
or
sti
outs
cwde
xor
arpl
lods
sub
enter
scas
scas
inc
xor
mov
jno
mov
add
je
hlt
fisubr
xchg
sub
sub
cmp
jecxz
mov
mov
fs
adc
inc
sbb
bound
nop
fadd
mov
jo
xchg
repz
(bad)
and
aam
daa
add
outs
jmp
clc
xor
push
sub
mov
xor
ror
sbb
mov
out
in
call
mov
fnstenv
dec
dec
pop
add
stos
cmps
adc
push
mov
and
pop
mov
dec
ins
dec
and
sub
inc
stos
mov
outs
xchg
aam
fld
sub
mov
jae
(bad)
out
jno
mov
jns
and
adc
jae
stc
sbb
pop
in
pop
gs
xor
sub
inc
pop
dec
push
hlt
icebp
lea
pop
push
jns
neg
adc
adc
mov
into
fidiv
lods
aas
(bad)
dec
test
dec
aas
xor
inc
push
out
inc
(bad)
jb
jge
stos
mov
cmp
ja
shl
imul
jne
add
vmread
xor
lods
fcomip
mov
mov
jp
sbb
lds
out
mov
sar
jl
not
push
les
inc
push
jmp
fwait
repnz
ja
imul
cmp
dec
imul
sub
popa
or
retf
je
pop
mov
mov
cmp
xor
test
jns
xor
xor
lea
jmp
call
mov
rcr
sub
in
cmp
das
jle
stc
sti
mov
jmp
mov
mov
ja
stc
push
push
fwait
mov
sub
push
fist
inc
cli
stos
clc
fs
(bad)
(bad)
inc
(bad)
int3
push
xchg
shl
lea
cwde
or
sbb
je
sbb
adc
cmps
pop
jmp
jmp
mov
jecxz
sbb
loope
xchg
shl
or
lods
loope
fild
inc
pop
dec
(bad)
in
jns
cli
dec
shr
in
pop
and
mov
call
or
dec
push
and
int
shl
pushf
mov
cmps
add
xor
jle
arpl
sbb
dec
in
and
ins
ja
shr
ins
dec
jno
js
push
ins
in
mov
jmp
shl
xchg
das
sbb
xchg
fimul
loopne
sahf
stos
mov
ret
or
and
xor
inc
or
bound
cmp
hlt
cmp
and
(bad)
cdq
mov
daa
leave
sbb
ficomp
xchg
jo
inc
test
or
jb
inc
xor
inc
mov
icebp
shl
popa
retf
test
stc
in
or
neg
stos
jl
push
sbb
push
sbb
xchg
repnz
and
push
xor
mov
cmps
dec
mov
fwait
pop
xlat
push
jne
pushf
repnz
xchg
jb
adc
xlat
xor
cmp
jl
(bad)
loop
jmp
js
jmp
outs
ror
mov
repz
addr16
push
retf
dec
mov
pop
scas
pop
pusha
movs
jmp
aam
retf
push
(bad)
dec
loopne
push
les
adc
jmp
cmc
in
dec
(bad)
cmp
loope
fld
adc
jb
add
pop
ins
icebp
aas
nop
push
jb
cmp
cmps
es
pop
(bad)
mov
addr16
sbb
fld
retf
sbb
(bad)
cmp
or
mov
ret
push
fsubp
jge
and
mov
sbb
dec
hlt
cmp
inc
add
xor
loop
aam
mov
pop
data16
sub
rcr
mov
or
jp
cmc
mov
push
mov
push
pop
or
adc
adc
or
sub
cdq
dec
retf
(bad)
xchg
xor
ret
jne
jb
push
lods
mov
adc
test
and
add
mov
xchg
jne
imul
sbb
movs
fdiv
sbb
in
test
add
mov
test
not
jle
add
cmp
jo
cmp
push
cmp
mov
jnp
imul
mov
neg
sahf
mov
push
pop
fsub
sub
ret
dec
pop
push
fnstenv
pop
xchg
out
mov
ss
push
pop
cmp
stos
cwde
mov
pushf
push
inc
cmp
retf
int
mov
and
movs
movs
movs
ins
mov
sub
sub
mov
ss
scas
adc
repz
jmp
add
push
loopne
push
sub
xor
push
sbb
jmp
and
faddp
jge
int
fdiv
mul
push
imul
(bad)
aam
iret
pop
mov
cmp
fmul
lahf
imul
movs
test
dec
sbb
cmp
(bad)
jmp
mov
push
xchg
fcmovu
mov
add
push
sahf
adc
adc
or
jb
push
and
scas
dec
neg
push
cmp
mov
cmps
jge
xor
daa
inc
jle
jmp
xor
add
mov
aaa
xchg
into
popa
xchg
xor
out
xchg
or
add
cmps
adc
pop
fst
out
mov
(bad)
xor
pop
jl
dec
sub
inc
jl
cmps
mov
fdiv
icebp
sub
ret
lea
sub
int
xor
in
iret
enter
gs
into
ret
stc
jne
mov
(bad)
xchg
and
jae
icebp
sub
xchg
push
std
or
mov
adc
imul
out
pop
retf
jnp
dec
sub
arpl
fs
push
jge
dec
push
adc
in
pop
mov
daa
xor
out
and
push
inc
repz
xor
dec
fadd
push
pop
fadd
movs
loop
movs
call
scas
and
adc
add
sbb
pusha
arpl
rcr
mov
mov
push
mov
sbb
leave
lock
mov
and
sbb
sub
jmp
addr16
shl
jns
fsubr
pop
call
popa
int
mov
cmp
pop
mov
pop
jle
jne
pop
jne
xor
cwde
out
fistp
ds
adc
bound
loope
jnp
repnz
pop
stos
pop
int3
or
sub
inc
fiadd
and
fdiv
test
sub
dec
outs
dec
out
pusha
jg
xor
sub
je
popf
or
pop
xor
into
mov
pop
ins
pop
pop
jae
aaa
in
loope
sti
jecxz
pop
add
shr
sub
xchg
daa
fadd
cmp
clc
in
xchg
push
in
push
add
cwde
sbb
xchg
aad
lahf
jbe
push
mov
inc
pop
sar
faddp
push
mov
faddp
icebp
xor
push
das
cmp
or
scas
loope
int3
or
aam
jno
sbb
xchg
adc
lahf
fild
lahf
jo
mov
ja
mov
mov
mov
jns
mov
ror
js
or
fs
or
test
mov
loope
cmp
dec
ins
retf
push
lock
mov
cmps
addr16
and
push
dec
jge
in
nop
adc
xchg
das
test
xlat
sbb
fadd
stos
inc
sub
inc
push
out
cmp
or
push
adc
pop
ret
dec
fnstenv
movs
inc
mov
adc
stos
enter
out
xor
imul
push
pusha
cmp
xor
fadd
cmp
out
add
loop
cmc
clc
ins
pushf
fdivr
popa
imul
xchg
jmp
call
data16
push
push
rol
imul
fsubr
call
fidiv
adc
jmp
(bad)
sbb
test
test
in
outs
push
inc
xchg
pop
stos
xor
adc
jle
test
adc
inc
mov
mov
imul
test
rol
add
in
add
popa
loop
imul
cmp
sub
adc
scas
pop
add
cli
dec
or
and
pushf
jne
inc
imul
out
cld
shl
jmp
xor
mov
test
mov
bnd
xchg
mov
jne
popf
arpl
add
arpl
ins
scas
sti
mov
inc
push
mov
imul
lods
dec
mov
xlat
inc
rcr
ss
pusha
inc
loopne
xor
lods
xor
pop
jno
int
je
test
mov
pop
dec
mov
out
(bad)
in
pop
cs
cmps
xor
(bad)
addr16
dec
sbb
stos
stos
and
test
jbe
loopne
daa
ficomp
sbb
jl
neg
push
pop
mov
dec
and
scas
fisubr
fnstenv
xor
pop
fisttp
or
gs
push
mov
stos
not
(bad)
inc
dec
rol
repnz
push
imul
jno
in
ss
mov
mov
fsub
pop
mov
mov
repnz
jmp
adc
in
dec
out
adc
sbb
enter
xor
inc
jne
or
outs
addr16
scas
daa
inc
mov
dec
pushf
cmps
inc
(bad)
and
in
dec
inc
sbb
jl
or
std
sbb
mov
push
push
add
xchg
cdq
and
cmovne
ret
inc
call
ins
int
scas
cmp
add
xor
fisttp
sbb
loopne
adc
lea
repz
stos
mov
ins
lahf
cld
lods
stc
jae
jle
fisttp
fld
fcompp
pop
xor
cdq
and
mov
pusha
shl
(bad)
mov
adc
dec
dec
pop
pusha
cmc
xrelease
cmp
fwait
jmp
fbstp
icebp
ja
loopne
mov
aas
and
mov
cmps
out
stos
in
sub
sbb
leave
jns
popa
retf
popf
mov
(bad)
in
out
adc
out
pop
movs
ins
push
in
xchg
stos
sub
(bad)
fldenv
mov
jge
xchg
cmps
push
(bad)
shl
pop
pop
push
gs
dec
xor
loopne
pushf
or
jp
adc
retf
cmp
in
jns
in
or
mov
or
xor
adc
(bad)
inc
sbb
test
ja
or
mov
xchg
push
sbb
fsubrp
xchg
cwde
mov
popa
inc
xchg
repnz
mov
scas
push
xor
inc
and
test
pushf
pop
ret
shr
dec
sub
push
fadd
sahf
mov
pop
fdivp
mov
mov
mov
(bad)
pusha
outs
adc
mov
test
dec
mov
in
mov
shl
push
xor
pop
loopne
in
dec
icebp
(bad)
and
jbe
and
rcl
sar
pop
add
aad
fs
mov
mov
fst
jmp
mov
jmp
shl
jmp
mov
mov
loopne
cwde
clc
lock
dec
lods
push
and
add
xor
cmps
xor
mov
pushf
arpl
pushf
jns
xor
fcom
jl
jo
in
paddd
xor
pop
ror
jle
mov
or
call
inc
inc
addr16
stos
xchg
icebp
cld
xchg
pop
int
scas
mov
dec
push
ds
hlt
xchg
lods
xchg
and
xor
pop
inc
dec
cdq
sub
or
dec
arpl
and
sub
cmp
mov
pop
sub
xchg
(bad)
(bad)
sbb
adc
mov
xchg
and
xchg
out
ret
cmp
adc
cmp
add
xchg
push
add
rol
les
rol
mov
sahf
js
mov
jp
push
sti
xor
(bad)
xchg
shr
mov
add
sbb
aaa
pusha
icebp
or
fmul
sbb
pushf
out
sub
dec
adc
mov
push
cmp
dec
or
cmp
pop
xchg
adc
popf
pop
in
push
jne
scas
mov
add
into
inc
loopne
dec
dec
out
or
pushf
xchg
or
leave
mov
sub
inc
jno
ffree
in
dec
popf
xor
push
jmp
cmp
sub
xchg
xchg
pop
inc
int
es
into
xor
movs
jg
nop
fdivr
jne
xchg
std
mov
fimul
ins
jmp
sub
pushf
xor
inc
jl
fwait
call
aad
out
aam
xor
xchg
leave
out
adc
ins
sub
dec
adc
add
adc
push
dec
fimul
mov
cdq
sti
inc
mov
dec
jns
push
retf
out
xchg
xor
data16
sbb
std
sbb
(bad)
out
cmps
jg
cli
stc
mov
mov
sbb
imul
mov
test
jb
cmp
idiv
xor
jnp
test
inc
mov
ds
pop
fist
cmps
and
push
mov
icebp
push
sub
jno
mov
daa
mov
adc
cmp
jb
xor
fld
cmp
jp
cmp
mov
mov
dec
(bad)
mov
loope
movs
popa
lods
test
stos
les
clc
adc
mov
dec
inc
in
mov
dec
jle
mov
loop
push
or
jmp
ror
in
ins
(bad)
repz
fdiv
dec
inc
jge
nop
inc
stc
loopne
sbb
or
dec
push
sbb
and
jnp
mov
cld
or
pop
push
adc
imul
daa
pop
mov
cs
js
sub
or
(bad)
mov
rcl
in
mov
loope
(bad)
xchg
les
xchg
aam
fild
inc
stos
xor
jecxz
mov
inc
mov
dec
and
inc
out
xor
das
in
retf
jl
sub
mov
les
scas
mov
xchg
pushf
xchg
ja
mov
scas
push
add
fsubrp
fldcw
lods
adc
imul
pop
loopne
js
js
dec
fsubrp
mov
in
aad
jns
cmp
jl
push
xchg
ss
out
push
int
out
and
dec
cmp
imul
and
cld
xor
push
adc
les
push
aad
sbb
jo
movs
fimul
jg
xchg
daa
mov
cs
fadd
loope
adc
sbb
repz
shr
xchg
pop
fisttp
loope
push
rcl
int3
cli
cdq
dec
iret
(bad)
std
or
xlat
mov
inc
xchg
mov
sub
inc
sbb
iret
jae
retf
(bad)
fist
mul
jno
cmc
adc
gs
enter
jne
(bad)
mov
push
mov
xchg
push
in
inc
pop
inc
std
icebp
mov
jl
push
clc
jae
cwde
or
scas
outs
aas
(bad)
lds
out
xor
jecxz
fcomp
jle
mov
push
pop
stos
sti
mov
nop
jge
in
adc
or
mov
shl
ror
dec
push
cmp
push
dec
dec
inc
pop
pop
xor
pop
xchg
jb
mov
jg
hlt
dec
rol
out
lds
ins
cmp
dec
jnp
adc
adc
mov
ins
jbe
pop
and
movs
lahf
xlat
pop
inc
add
(bad)
std
sbb
lea
icebp
pop
add
shl
clc
jmp
pop
scas
fst
aas
movq
imul
cld
std
js
xlat
mov
fst
or
pop
hlt
movs
sbb
mov
mov
cs
fild
xor
xchg
inc
xchg
iret
sar
mov
lahf
jns
mov
lods
push
push
pop
in
ja
outs
xchg
and
and
push
xchg
xchg
imul
or
inc
jecxz
call
vpcmpgtw
cmp
outs
stc
xchg
popa
mov
fimul
es
out
jp
lock
pop
and
fldenv
les
sti
aam
cmps
ds
inc
sar
ja
or
dec
cmp
scas
sbb
ja
ja
clc
test
neg
shl
mov
cmp
or
mov
mov
imul
int3
shr
sub
and
icebp
nop
call
in
pop
(bad)
lds
pusha
pop
arpl
out
xor
mov
call
ret
pop
les
dec
enter
sbb
leave
lahf
mov
aas
pop
push
outs
dec
push
xchg
loope
ss
pusha
mov
ja
rol
les
push
arpl
in
(bad)
mov
arpl
stos
mov
jno
lds
cmp
lods
mov
fisubr
test
xchg
xchg
iret
mov
dec
std
mov
in
dec
mov
push
jecxz
add
mov
(bad)
mov
loop
push
or
inc
aad
and
ret
sub
pusha
sbb
fwait
inc
mov
(bad)
push
dec
fadd
ret
icebp
push
fistp
and
or
pop
ror
(bad)
sti
fcmovne
and
arpl
nop
cwde
addr16
jge
sbb
or
sbb
sbb
mov
push
or
cmp
cwde
xchg
pop
jns
dec
cmp
cmps
push
lods
sar
bound
int3
test
outs
fcmovnb
push
rep
(bad)
mov
mov
aas
iret
mov
pop
cmps
and
push
and
push
jmp
pop
jl
sbb
sub
popa
jb
pop
test
imul
inc
lea
pmaxsw
js
or
repz
mov
inc
inc
inc
ffree
xchg
lods
xlat
scas
ins
jle
imul
push
mov
sbb
mov
and
jp
cld
dec
icebp
push
xor
mov
popa
xor
cmc
in
push
cli
jne
and
js
aam
cli
mov
cmp
push
ds
test
addr16
not
ss
fbstp
inc
popf
scas
icebp
cmp
sub
cmp
pushf
popf
sub
adc
sub
les
leave
dec
dec
mov
(bad)
inc
push
jecxz
xchg
enter
adc
lods
(bad)
ficom
push
inc
popf
or
and
cdq
xor
ja
aad
jbe
mov
mov
lea
inc
pop
xor
dec
dec
fldenv
shr
mov
fimul
call
(bad)
stos
or
ror
sub
pop
(bad)
xchg
sar
das
xlat
pusha
retf
out
sub
ficomp
icebp
sub
popf
xor
(bad)
jl
out
push
push
std
jecxz
ss
scas
pop
sbb
mov
(bad)
mov
stos
push
mov
and
ret
xchg
and
jecxz
mov
mov
daa
mov
and
enter
dec
in
jecxz
imul
test
std
pushf
inc
ja
sbb
in
or
mov
sbb
les
mov
shl
jmp
pop
clc
jmp
cmps
(bad)
and
(bad)
icebp
adc
(bad)
jge
jl
gs
ja
jns
sti
jno
mov
pop
lods
pop
jle
mov
push
movs
sbb
adc
aaa
and
xchg
pop
jl
cmps
repz
dec
outs
jno
jp
sub
leave
push
push
add
xchg
jecxz
mov
xchg
outs
aam
push
jb
or
push
sbb
out
add
aam
(bad)
lods
or
ret
pop
aas
cmp
xor
xor
add
or
sbb
outs
pushf
inc
fisttp
addr16
(bad)
sub
xor
dec
adc
ret
adc
scas
inc
pop
outs
jo
mov
pop
jb
mov
adc
shl
pushf
xchg
xchg
cmp
adc
and
and
mov
lods
repz
into
and
cmps
(bad)
lods
cmps
fistp
or
pop
ins
or
retf
adc
xor
mov
xor
call
fisubr
xchg
(bad)
mov
or
jno
push
int3
or
out
or
loop
sbb
sahf
and
xchg
mov
mov
xor
ret
mov
(bad)
repz
pop
pop
leave
outs
push
mov
(bad)
pop
gs
scas
mov
test
mov
xchg
inc
imul
test
jbe
aas
pop
retf
pop
mov
jmp
inc
mov
inc
pop
xchg
push
sbb
fwait
add
jmp
stos
mov
in
popf
fsubr
lods
fiadd
mov
fwait
inc
push
lea
xor
cmp
and
fnstsw
mov
cmp
and
(bad)
lahf
mov
das
outs
mov
adc
jmp
fiadd
dec
(bad)
mov
mov
aam
cdq
stc
pop
mov
xchg
imul
nop
not
jne
pop
mov
add
sub
sar
jl
mov
lds
nop
mov
xchg
mov
addr16
scas
fs
sub
mov
test
fsubr
aad
(bad)
xchg
xchg
dec
stc
mov
fiadd
je
inc
jnp
repnz
aaa
add
add
outs
or
jns
adc
sar
pop
mov
retf
xor
imul
inc
lods
mov
jae
jl
push
push
or
test
sbb
in
jo
fwait
mov
jge
in
repz
movs
stc
mov
cmc
idiv
aas
mov
ret
pop
(bad)
out
mov
movs
xor
pop
xlat
pop
in
inc
xor
jne
sub
mov
push
scas
sub
nop
push
stc
dec
mov
inc
mov
call
imul
xor
adc
out
cmp
xor
dec
xchg
ins
repz
pushf
fucom
jno
lods
cld
stos
sbb
das
and
daa
sbb
sbb
mov
fnstcw
dec
(bad)
out
nop
mov
retf
sub
fs
mov
pop
gs
aad
and
es
shr
loope
xchg
stc
fcmove
arpl
push
sahf
cmps
push
jae
test
mov
or
mov
jno
pop
sahf
cmps
cmp
je
adc
sbb
cmps
pusha
jle
dec
sbb
out
in
inc
js
xchg
fld
mov
xor
nop
fidiv
mov
sbb
or
in
addr16
inc
jae
mov
cmp
xchg
cmp
dec
add
push
(bad)
fstp
jmp
ret
gs
out
xor
add
jae
jae
movs
test
mov
fisttp
daa
imul
in
mov
xor
push
push
sar
popf
aas
mov
loop
jmp
mov
xchg
mov
push
adc
or
adc
int3
xor
add
push
pop
xor
es
imul
bound
sbb
cli
mov
and
mov
push
and
loope
inc
inc
addr16
call
not
pop
loope
push
js
inc
call
mov
les
retf
retf
dec
movs
xchg
mov
jae
shl
rol
aaa
jl
lds
xlat
mov
dec
les
popa
cmp
cmps
jnp
inc
sub
cdq
mov
ds
scas
or
clc
xchg
fisubr
add
hlt
in
fnstcw
repz
push
and
mov
adc
mov
sub
fs
imul
lock
cmc
lods
push
sub
fstp
call
fwait
lds
adc
or
add
pushf
dec
cld
xchg
cmp
nop
(bad)
pop
stos
movs
js
pop
add
mov
add
xchg
fist
ss
mov
mul
push
inc
push
aaa
aam
sub
xchg
xchg
movs
imul
sub
jae
sti
push
jg
cmps
imul
clc
jno
sbb
pop
pop
push
retf
mov
rol
into
and
pop
jbe
loope
or
xor
rcl
mov
nop
push
test
push
test
je
out
xlat
jp
mov
xor
inc
xor
cmp
cmps
pop
lea
push
in
mov
imul
je
nop
stc
push
push
mov
cmp
stos
es
inc
pop
mul
stc
in
nop
push
popa
cmp
aaa
ja
pop
and
pop
mov
fstp
repnz
add
fisttp
out
icebp
add
mov
adc
xor
mov
sbb
inc
(bad)
mov
sbb
fisttp
fwait
cdq
push
cdq
pop
scas
(bad)
cmc
dec
loope
inc
(bad)
cmp
inc
in
xchg
sbb
mov
push
add
cmp
inc
je
pop
ret
pushf
movs
jo
in
cmp
push
sahf
call
adc
dec
mov
mov
push
sub
adc
fs
retf
mov
das
xchg
jp
pop
xor
in
mov
mov
fnsave
mov
fcmovb
fistp
loope
jae
jle
jne
es
add
jo
xchg
jae
mov
add
hlt
xchg
scas
inc
pop
int
retf
stos
xor
sti
mov
push
test
test
xchg
xchg
inc
mov
pop
jmp
mov
js
cmps
call
inc
retf
lods
mov
sub
pop
adc
sub
xor
or
ficom
xchg
xor
out
adc
repnz
inc
cmps
push
(bad)
ds
cmps
fimul
pop
or
mov
dec
sub
test
out
cmps
dec
imul
rol
ins
test
pop
sbb
and
ret
pop
adc
push
jbe
in
icebp
push
xchg
adc
pop
pop
inc
fwait
call
sar
jmp
(bad)
jmp
sub
jp
sar
pavgw
push
fwait
repz
(bad)
out
mov
xchg
inc
sub
retf
jle
es
fwait
xchg
jae
ret
dec
inc
(bad)
cs
dec
in
mov
lods
push
mov
ficom
jl
test
je
and
ret
cmp
int3
inc
xor
inc
xor
sar
sbb
imul
pop
stos
fsub
outs
xchg
jle
mov
idiv
stc
and
and
xor
push
dec
pop
and
fsubr
jmp
test
(bad)
cmp
adc
arpl
into
(bad)
mov
dec
mov
jl
jno
das
popa
mov
bound
dec
xchg
and
std
cld
or
sbb
push
ss
mov
std
xchg
fidiv
(bad)
(bad)
mov
xchg
jne
dec
sbb
mov
cmp
or
dec
dec
push
lea
push
jmp
(bad)
fmul
movs
stos
jno
mov
out
push
rcr
dec
in
imul
popa
mov
lea
push
scas
or
ins
cmp
push
loopne
mov
popa
cmp
aam
call
push
ja
adc
outs
cbw
dec
mov
or
ja
add
pop
les
mov
xchg
mov
out
call
loope
ret
xor
popf
popa
loopne
inc
push
call
or
push
cwde
(bad)
cdq
and
(bad)
cli
push
(bad)
pop
ret
int
xchg
cdq
rcr
retf
ffreep
dec
cdq
leave
push
ins
sbb
push
mov
or
xor
repnz
daa
jecxz
or
pop
and
xchg
call
xor
xchg
shl
jo
xchg
inc
cmps
popf
dec
cmc
clc
pop
add
mov
fld
and
cmp
pop
movs
inc
jge
mov
push
pushf
xor
(bad)
sub
cmps
pop
mov
cli
or
add
push
imul
pop
pusha
push
add
mov
cwde
ret
setl
pop
fs
not
(bad)
mov
clc
sar
or
mov
and
adc
lods
dec
je
inc
push
gs
jge
xchg
in
sbb
push
pop
and
int
rcl
xlat
out
hlt
jns
mov
aas
gs
jp
cmp
cmp
jmp
sbb
into
adc
mov
popa
or
iret
iret
aas
loop
leave
in
xchg
mov
dec
fcmove
cli
push
mov
test
imul
adc
mov
imul
aas
jecxz
cmp
and
pop
movs
mov
inc
test
lahf
push
jno
bound
or
shl
add
hlt
xchg
movs
and
jo
(bad)
in
mov
sbb
adc
ins
jo
fstp
(bad)
jae
call
xlat
je
arpl
enter
mov
jl
pop
pop
mov
push
test
or
mov
and
pop
nop
pop
sbb
xor
test
cmp
xchg
jae
dec
shl
aam
retf
pop
mov
movs
inc
sbb
mov
cli
mov
push
xor
shl
lods
mov
jmp
push
pop
mov
mov
or
xor
pop
rol
rcl
cmp
push
int3
mov
push
je
out
icebp
cmps
mov
push
or
mov
movs
sahf
jno
add
stos
cld
das
add
inc
(bad)
push
shl
pop
or
lods
cmps
mov
shl
sub
in
(bad)
lock
aam
movs
mov
aam
mov
add
sub
jno
ja
fimul
sub
loope
in
call
push
push
int3
cli
sti
lahf
jno
(bad)
dec
xor
ret
jo
rcr
sub
aad
inc
push
or
dec
adc
idiv
add
stc
ins
out
mov
xchg
cmps
rcr
mov
ss
cmp
pusha
mov
mov
xchg
daa
scas
cmp
mov
jno
push
lods
repz
mov
mov
adc
lock
movs
pop
ja
xor
mov
daa
mov
jae
pop
pusha
or
sub
cs
iret
pushf
retf
add
clc
xlat
add
fnstenv
xor
inc
(bad)
dec
call
xor
imul
arpl
sub
loopne
aas
cmp
jbe
cmp
xchg
dec
cli
std
nop
sbb
jo
mov
mov
cmp
imul
pop
call
mov
jp
cmps
into
xchg
dec
jle
mov
jle
ja
ficomp
jb
out
xchg
mov
cmp
xor
xchg
inc
imul
jmp
enter
push
pop
sbb
pop
sub
hlt
stos
xchg
pop
shr
out
pop
js
test
adc
pop
es
and
push
ret
mov
loopne
mul
jl
imul
pushf
dec
inc
jo
adc
imul
mov
or
jle
arpl
aam
movs
cmps
gs
pop
ja
and
adc
pop
ss
out
jg
out
fs
inc
xchg
pop
sub
mov
clc
xchg
xor
mov
inc
nop
std
cld
clc
xor
lods
or
xchg
enter
mov
movs
ins
jb
outs
(bad)
aam
jbe
loopne
call
push
pusha
or
sub
sbb
cmp
(bad)
sahf
mov
mov
xor
push
xor
sar
call
mov
sbb
loope
xor
and
sbb
push
scas
cmps
mov
repnz
push
pop
sete
sub
call
in
xor
cdq
xor
daa
sub
sub
aam
cdq
xchg
pop
pusha
retf
repz
cmc
mov
xchg
fsubr
jle
jle
mov
inc
stc
and
or
enter
xchg
jns
adc
cmps
or
sub
xor
inc
dec
aad
daa
mov
mov
push
or
shr
add
push
push
psubb
in
xchg
dec
xor
dec
or
loopne
mov
cmps
into
dec
out
shr
mov
cwde
dec
push
stc
dec
cld
loop
(bad)
cld
dec
js
inc
xchg
add
mov
xlat
(bad)
pop
or
aas
jnp
mov
test
aas
mov
nop
jmp
inc
rol
adc
xchg
cs
xchg
jge
das
test
cwde
jl
add
ja
mov
jmp
inc
xchg
xor
mov
ds
cmp
dec
call
jg
aas
xor
and
cmps
xchg
mov
push
(bad)
mov
xor
mov
fwait
(bad)
and
cmc
cmps
xchg
mov
mov
adc
sbb
inc
test
jnp
and
xor
push
sbb
add
aad
cli
pop
ret
outs
add
aad
jg
dec
movs
bnd
aad
outs
in
xchg
cmps
xor
icebp
cli
imul
push
jmp
mov
jo
das
xor
in
in
sub
sub
push
push
cdq
mov
adc
enter
outs
push
inc
idiv
retf
stos
leave
pushf
imul
sti
and
icebp
ins
adc
mov
cli
test
xor
pop
jae
call
push
test
mov
sti
pusha
mov
imul
cmp
sti
push
loopne
mov
mov
gs
cmp
(bad)
push
mov
jmp
xchg
push
or
aaa
cmp
pop
mov
pushf
repnz
xchg
sahf
ds
addr16
nop
data16
or
dec
mov
or
inc
fimul
scas
out
dec
jmp
add
jo
mov
sub
nop
jae
dec
cmc
cmp
pop
ss
in
jmp
adc
push
mov
es
xchg
push
retf
fdiv
cdq
hlt
jecxz
inc
sbb
daa
and
or
or
in
push
jbe
lods
sbb
or
stc
scas
cmps
mov
dec
or
repnz
add
fidiv
popa
jno
pop
jl
or
sbb
push
stos
or
and
test
div
xchg
fs
cld
out
ret
mov
pushf
add
dec
mov
mov
mov
mov
dec
movs
lock
call
popf
(bad)
mov
lock
mov
add
stc
icebp
test
cmp
add
mov
or
add
mov
inc
xor
in
cld
xchg
(bad)
push
add
mov
and
or
push
xchg
mov
nop
or
mov
addr16
add
aad
pop
pop
xor
call
mov
leave
jge
gs
ror
sub
in
lahf
mov
out
(bad)
rcr
pop
fnstsw
add
je
jne
adc
mov
in
add
pop
jbe
test
jecxz
(bad)
sub
div
dec
sub
jo
aad
mov
das
sbb
push
mov
mov
pop
push
cmp
sub
hlt
and
sub
ret
cmp
outs
mov
fs
sbb
cwde
icebp
test
mov
add
jmp
and
pop
sub
adc
or
dec
loopne
ins
dec
jb
fsubp
test
sbb
mov
inc
les
mov
pop
aaa
fwait
mov
nop
popf
xchg
jmp
mov
out
hlt
pop
(bad)
fsubr
aam
fmul
jp
mov
ins
addr16
sub
or
jg
xor
adc
ins
sbb
int
inc
xor
xor
mov
sbb
add
in
xchg
pop
inc
push
lock
dec
xchg
sub
pop
cmp
push
sbb
lods
ret
adc
rol
stc
lea
hlt
add
retf
xchg
push
inc
repz
in
call
stos
xchg
test
mov
inc
xchg
fistp
movs
ror
add
push
dec
pop
hlt
test
imul
xchg
mov
sub
pop
das
or
into
retf
scas
enter
lods
data16
push
retf
retf
or
data16
mov
mov
or
aad
add
shr
(bad)
shl
or
call
pop
pop
fidiv
out
and
jmp
and
call
data16
clc
lods
adc
stc
stos
dec
xchg
ror
add
add
shr
mov
loope
aad
imul
pop
(bad)
repnz
jge
push
jnp
bound
xor
sbb
jbe
jnp
dec
cmp
adc
retf
loope
and
stos
cmps
movs
retf
retf
xchg
stos
fdecstp
scas
inc
push
mov
loop
lds
dec
xor
sbb
imul
(bad)
sub
mov
mov
(bad)
inc
into
hlt
mov
enter
fstp
aam
add
mov
call
mov
movs
mov
adc
and
sub
(bad)
fld
xchg
mov
daa
push
stos
aaa
dec
outs
in
mov
jno
test
mov
cmc
ins
inc
outs
pop
pop
dec
ss
loopne
fistp
out
xor
arpl
push
mov
(bad)
xchg
cdq
mov
leave
inc
push
fnsave
jmp
lods
and
in
cdq
dec
jo
mov
fcomp
icebp
push
fcomp
loope
loop
and
and
xchg
push
jnp
sub
adc
test
pop
cmp
retf
test
cmp
and
ins
inc
push
and
inc
mov
imul
mov
movs
jl
pop
iret
and
aaa
mov
inc
(bad)
mov
mov
jmp
(bad)
jbe
leave
xchg
pop
jo
lods
repz
retf
add
movs
add
es
xchg
inc
loopne
in
xor
int3
sub
sbb
pop
retf
cwde
sbb
fmul
or
jae
pop
mov
iret
mov
fmul
xchg
movs
or
mov
add
jmp
inc
sbb
inc
mul
shl
sub
or
inc
jae
cmp
retf
jno
add
lds
adc
ss
mov
fstp
cli
add
mov
inc
add
cmps
sub
cdq
pusha
out
pushf
push
mov
into
into
dec
add
xchg
mov
sbb
adc
jl
in
mov
mov
or
test
mov
sub
lods
or
mov
call
lods
cmps
xchg
cmp
pushf
add
dec
mov
push
push
jmp
or
in
jge
push
in
mov
adc
add
lods
adc
mov
push
(bad)
adc
pop
xchg
shl
jmp
or
shr
cwde
lds
ret
mov
in
xor
cmp
stos
in
imul
inc
xchg
scas
imul
cmps
in
mul
sub
mov
push
jnp
add
(bad)
push
mov
and
jbe
push
or
sbb
mov
or
push
xor
jl
imul
mov
add
movs
pop
dec
fptan
jle
pop
push
jno
ror
mov
aas
clc
mov
xor
jmp
jecxz
stos
lahf
(bad)
xchg
dec
ja
out
add
pop
adc
popf
cmp
loop
jo
pop
(bad)
(bad)
cmp
xor
retf
daa
sbb
ja
movs
mov
call
(bad)
std
dec
mov
movs
add
fwait
daa
cmps
sub
xchg
dec
sti
or
mov
cmc
pop
(bad)
jno
and
inc
(bad)
std
cmp
or
dec
clc
cmps
int
hlt
popf
pusha
loop
xor
(bad)
jb
cmp
call
push
outs
pop
xchg
xor
(bad)
fdivr
jle
iret
(bad)
push
mov
in
test
xor
sbb
push
sub
pop
punpcklbw
push
mov
scas
daa
dec
repz
mov
mov
sub
jnp
(bad)
shr
push
mov
sub
cmp
outs
push
pop
js
and
push
cmp
cmp
std
xchg
scas
mov
xchg
xlat
out
ja
jmp
add
inc
out
js
mov
stos
xchg
rol
in
dec
dec
add
neg
std
inc
iret
sti
popa
add
push
mov
pop
(bad)
cli
loopne
mov
sahf
imul
mov
push
xor
cmps
jb
iret
xchg
jg
sti
pop
adc
jl
inc
push
pop
jb
ret
pop
aaa
add
in
out
add
daa
out
pop
jne
sbb
ins
jmp
out
adc
jge
add
and
into
sti
pusha
mov
das
mov
cmp
or
gs
movs
push
pusha
es
xchg
stc
loop
push
je
out
jmp
cmp
imul
pop
xchg
js
mov
and
add
loop
mov
jmp
pop
arpl
inc
popf
retf
mov
add
and
and
popf
arpl
xchg
(bad)
sbb
jge
add
and
jge
das
mov
mov
mov
jb
mov
mov
ret
test
retf
jg
lock
lods
xor
inc
xor
mov
inc
sbb
mov
outs
aas
out
mov
mov
sub
(bad)
(bad)
(bad)
adc
xor
int3
cmp
pop
xor
add
fs
stc
shr
mov
pop
loope
(bad)
out
mov
cmps
(bad)
not
cld
pop
es
addr16
adc
repnz
pop
sbb
repnz
mov
xchg
stos
and
inc
mov
out
pop
je
jnp
lods
sbb
pop
cmp
out
jns
jns
repnz
(bad)
dec
mov
pop
mov
sbb
iret
paddusb
mov
dec
and
xchg
pop
adc
ret
es
dec
jno
mov
in
inc
(bad)
std
push
mov
mov
scas
loope
test
test
(bad)
adc
push
rcr
pushf
adc
test
call
ss
jb
not
xchg
nop
push
push
(bad)
das
jo
out
add
inc
ror
mov
mov
pop
fimul
lock
ret
ss
adc
pop
dec
jp
jo
xor
jle
das
call
loope
xchg
out
cmp
or
xchg
and
push
cmp
sub
in
pusha
sbb
xor
jnp
call
push
jl
call
dec
xchg
ds
and
ins
xor
sub
dec
sbb
lds
jmp
ror
cmp
imul
pop
not
je
mov
pop
clc
out
xchg
outs
out
push
int3
dec
stos
cmps
fwait
adc
rol
sub
ins
inc
mov
cwde
aaa
cmc
retf
dec
push
rcl
jecxz
ins
pusha
sbb
mov
pop
sbb
mov
(bad)
mov
cmp
mov
idiv
fwait
xor
pop
mov
sbb
pop
bound
pop
in
adc
out
or
and
std
std
mov
sti
rol
add
pop
jecxz
jg
enter
addr16
out
dec
mov
cmc
mov
cmp
xchg
das
call
mov
push
in
jecxz
faddp
test
inc
fisttp
in
sar
mov
jl
adc
mov
mov
lods
or
sub
jne
xchg
and
dec
rol
or
ds
dec
in
dec
cmps
(bad)
sub
ds
cmp
ja
mov
lods
(bad)
(bad)
cmp
cdq
pop
scas
pop
sahf
stos
addr16
add
xor
mov
add
push
es
sbb
cmp
add
mov
(bad)
sbb
mov
(bad)
cli
sbb
xchg
arpl
test
jnp
and
jae
loop
jns
push
xchg
dec
and
sub
call
outs
(bad)
pop
punpckhbw
cmp
sahf
jp
or
push
jae
fs
bound
cmc
fwait
push
call
inc
push
cli
fbld
adc
mov
int3
loope
cmp
add
repz
sbb
aaa
push
pop
push
mov
push
inc
fisttp
enter
scas
je
aaa
in
bound
inc
cld
fbld
pop
test
cwde
cld
(bad)
aam
push
cmp
xabort
cld
leave
jl
test
sub
push
push
jle
and
retf
add
scas
sub
(bad)
test
bound
inc
loop
test
mov
movs
adc
jnp
add
jmp
dec
shl
movs
call
sub
cmovo
push
mov
lods
mov
or
adc
inc
out
cmps
mov
and
mov
sub
sbb
sbb
pop
mov
dec
enter
lods
and
pop
add
iret
js
arpl
pop
xchg
inc
xor
stos
pop
icebp
dec
dec
sbb
and
jns
ins
sbb
sub
das
shl
rcl
dec
repz
cmps
push
bound
xor
lock
lods
mov
adc
add
cmc
push
lea
mov
or
push
jp
popa
adc
enter
int
test
add
psllq
fwait
sbb
sub
aaa
or
sbb
jno
out
mov
sti
fnsave
cmps
mov
test
push
nop
loope
xchg
push
div
mov
xor
fnstcw
and
and
xchg
outs
js
das
mov
dec
nop
mov
xor
call
mov
ret
jnp
mov
add
cmp
cs
ins
loope
fs
lock
int
data16
xchg
mov
daa
shl
xchg
pop
push
mov
mov
leave
jg
dec
jecxz
std
call
mov
daa
fcom
out
and
add
sbb
(bad)
sbb
movs
pop
cwde
xchg
fs
push
retf
xchg
aam
jbe
push
inc
mov
mov
mov
(bad)
in
ins
push
jecxz
loopne
dec
add
aad
jo
add
mov
aam
push
aam
mov
(bad)
mov
mov
aad
lahf
sub
test
mov
dec
add
test
or
mov
dec
xchg
sbb
pop
out
ins
dec
(bad)
xor
mov
dec
inc
les
push
dec
mov
stos
mov
mov
popa
sbb
imul
push
daa
add
add
iret
es
iret
xor
add
cmp
xchg
jbe
cmp
pop
inc
add
pop
mov
lock
out
call
(bad)
fs
shl
ja
leave
and
push
call
lock
call
or
sbb
lock
sub
mov
sbb
dec
scas
(bad)
rol
cdq
xor
inc
mov
sbb
je
mov
mov
mov
add
ret
add
push
repnz
clc
xor
rcr
loope
push
jae
test
mov
scas
stc
sub
adc
out
mov
sub
dec
and
ret
pop
cld
jo
pop
add
jle
ret
dec
pop
pop
(bad)
fidiv
aas
xor
mov
or
mov
stc
adc
mov
loop
aam
dec
shl
shl
push
cmp
sub
jl
pop
xor
jl
scas
jge
fisubr
test
mov
pop
in
mov
mov
cmp
jbe
out
in
cli
sbb
jmp
or
or
pop
ins
ror
in
cdq
fist
fld
or
cmc
cs
cmp
and
dec
adc
sub
dec
jmp
shr
imul
in
bound
dec
mov
call
fdiv
sbb
into
lods
sbb
repz
mov
gs
das
icebp
rcr
xor
or
movs
stos
iret
adc
in
fld
pop
mov
push
add
cmp
iret
retf
cmc
dec
dec
push
sbb
(bad)
cmps
out
mov
mov
leave
pop
lds
clc
les
daa
fmul
fisttp
js
stos
ficom
inc
mov
adc
aam
pop
push
xor
(bad)
leave
sub
fst
add
stos
icebp
cmp
js
dec
push
in
jge
sar
lds
repnz
sub
xlat
mov
es
test
sub
cmp
call
push
cld
sub
retf
addr16
pop
jmp
mov
in
mov
stos
(bad)
lock
(bad)
mov
ldmxcsr
popa
xlat
mov
adc
daa
bound
push
cmps
cmp
pop
inc
es
sar
add
or
ja
pop
std
retf
lods
adc
aad
xor
mov
fsubr
push
aad
aaa
scas
out
jle
cmp
cmps
pop
in
and
mov
hlt
fcomip
mov
dec
xchg
mov
mov
adc
inc
int3
lds
repz
sub
lods
sub
jle
aad
push
out
and
mov
mov
or
and
sar
inc
mov
pop
jp
(bad)
cmp
mov
push
add
pop
jne
cwde
sbb
out
je
ins
test
adc
dec
mov
mov
mov
outs
ins
(bad)
adc
sub
xchg
inc
push
lahf
dec
jo
jge
mov
gs
mov
pop
inc
mov
dec
cld
scas
xor
cmp
stos
sbb
mov
mov
aas
dec
test
xchg
ret
js
mov
mov
(bad)
xor
or
mov
add
jecxz
mov
in
fs
lods
(bad)
ja
xchg
dec
jmp
add
dec
stos
aas
xor
mov
cmp
cli
je
mov
xchg
add
call
cs
xor
(bad)
mov
mov
push
mov
shl
mov
mov
ud0
sti
leave
aad
imul
pop
enter
lods
in
inc
or
pop
or
lahf
iret
mov
xchg
push
cmc
xor
scas
arpl
pop
pop
js
push
fwait
dec
jns
xchg
aaa
jg
test
jle
sub
fisubr
ret
and
sbb
mov
(bad)
bnd
pop
js
stos
adc
out
scas
inc
jecxz
jae
sub
mov
jne
repnz
test
dec
nop
fisub
popf
inc
popa
pop
push
scas
hlt
push
std
repnz
mov
repnz
hlt
pushf
mov
jle
mov
xor
mov
or
sbb
cli
fild
cmc
cmps
jge
cmp
or
movs
sub
fistp
pop
inc
push
imul
add
mov
push
xchg
inc
ficom
add
bound
adc
arpl
data16
sbb
sub
hlt
or
fs
dec
xor
add
add
sbb
mov
pop
movs
jge
sbb
in
test
pop
push
pop
and
jo
imul
rol
or
inc
lahf
clc
dec
jne
mov
dec
je
push
popa
sti
sub
xor
popf
ffree
pop
mov
in
imul
ins
xchg
inc
nop
lds
jbe
addr16
call
into
sbb
ins
scas
imul
arpl
push
mov
(bad)
cmp
in
push
push
xor
or
push
cmp
dec
sub
mov
pop
(bad)
mov
fbstp
xor
xchg
aas
jmp
push
test
shl
rdtsc
adc
cmp
jo
mov
mov
or
mov
add
js
sbb
jmp
loope
retf
(bad)
idiv
cmp
(bad)
mov
jg
ins
ret
das
repz
adc
repz
call
push
push
pop
pop
and
scas
adc
adc
cmp
sub
cmp
es
xor
or
sub
aas
and
xchg
in
fst
ins
rol
pop
xor
mov
and
jle
fld
add
mov
jnp
xor
ret
sbb
rol
dec
pop
out
ror
jae
pop
ret
mov
adc
addr16
jbe
fstp
fld
xchg
jnp
cld
vpaddusb
pop
sti
movs
mov
push
jp
leave
mov
popf
loopne
inc
leave
adc
cwde
ret
aam
leave
lods
sbb
scas
call
pop
dec
mov
jb
ja
into
imul
adc
int
add
adc
(bad)
dec
push
inc
mov
scas
or
fwait
mov
rol
adc
mov
xchg
sub
sub
and
enter
adc
jns
sar
xor
sbb
stos
out
sbb
cs
xlat
pop
mov
cs
in
cmp
dec
inc
ret
repz
in
dec
sbb
aad
mov
pushf
fcmovu
ins
call
xchg
or
leave
mov
iret
jge
sub
mov
xor
aam
gs
inc
xchg
push
add
jno
and
loope
cmc
sbb
or
hlt
iret
nop
inc
shr
mov
stos
fidiv
sub
stos
call
xchg
rol
dec
or
cwde
aaa
(bad)
pop
aas
test
mov
jne
das
ins
je
retf
mov
test
and
inc
jg
jb
xchg
stc
xchg
jp
inc
jl
inc
out
rcr
dec
icebp
add
and
movs
sub
addr16
fimul
xor
lods
xchg
repnz
ins
cmp
nop
fbstp
push
jo
inc
mov
outs
push
adc
sbb
cmp
sub
mov
cdq
(bad)
jg
shl
sub
jg
js
add
fs
xor
dec
mov
fwait
ds
arpl
xchg
fcmovb
mov
movs
and
clc
pop
adc
fisttp
sub
or
test
mov
dec
adc
cdq
das
push
shr
sub
pop
movs
je
push
ins
mov
jb
imul
arpl
loopne
in
pop
mov
aad
cwde
jmp
shl
mov
inc
cmp
or
inc
cwde
xor
out
push
lods
inc
dec
xor
cmp
inc
sub
repnz
sub
gs
add
retf
adc
pusha
movs
cwde
out
jo
outs
push
jne
(bad)
and
jbe
pop
add
aaa
stos
cwde
or
sbb
pop
sub
cmp
xchg
sbb
cmp
push
xchg
mov
daa
xor
mov
cmp
and
bndldx
jmp
mov
or
shl
in
imul
jecxz
and
or
adc
xchg
mov
dec
jno
xchg
cmps
xor
repz
jb
jg
push
dec
mov
in
icebp
cli
xchg
clc
mov
add
js
mov
pop
bound
fs
xchg
clc
outs
movs
mov
inc
scas
es
shl
dec
mov
out
adc
add
mov
mov
jge
fild
outs
sti
cmps
addr16
jae
sub
gs
lahf
mov
lds
sahf
jmp
push
adc
xchg
mov
cmp
aas
xchg
pop
in
test
inc
jmp
cmp
and
mov
addr16
sbb
push
pushf
push
mov
push
mov
ins
fs
and
mov
xor
push
and
inc
cld
xor
outs
mov
inc
jg
push
mov
(bad)
add
(bad)
fistp
(bad)
push
mov
xor
sar
test
mov
sub
(bad)
mov
fisubr
adc
loop
imul
aam
cmps
fsubr
lods
dec
add
cmp
shl
dec
mov
cmp
mov
ret
lds
(bad)
mov
push
test
sub
push
push
cmp
jnp
mov
stos
cmps
jns
cld
sub
mov
add
aaa
enter
sbb
pop
mov
xchg
inc
loope
or
mov
add
xchg
xchg
dec
mov
jmp
aaa
inc
stos
xchg
xor
sub
xchg
jae
in
sbb
and
into
jno
arpl
iret
push
outs
ret
jmp
inc
xor
js
cwde
repnz
pushf
sbb
imul
test
ins
push
jno
repnz
dec
iret
adc
adc
test
xor
sub
adc
mov
mov
ins
dec
sar
imul
jno
xchg
jmp
shl
xchg
icebp
xor
stos
adc
jecxz
(bad)
ss
xor
push
into
and
cmc
sub
sub
pop
xor
mov
xchg
inc
nop
mov
shr
retf
sbb
mov
adc
push
jbe
out
xor
xchg
and
jae
int
or
adc
mov
xchg
xchg
sbb
int3
adc
mov
and
mov
fstp
scas
push
adc
jl
jns
fsubr
and
jl
(bad)
addr16
xor
sbb
mov
add
jno
push
outs
and
pop
mov
or
or
jnp
pushf
add
stc
test
sbb
shl
jg
lods
in
adc
iret
inc
inc
mov
in
scas
add
add
adc
movs
gs
push
ds
pushf
inc
dec
xor
fs
data16
ret
push
push
push
int3
stos
cli
cld
iret
js
repz
add
dec
cmp
sub
ds
xor
push
cmp
dec
xchg
and
sub
jno
xchg
mov
mov
aas
xchg
adc
dec
cmps
call
fs
pop
movs
data16
addr16
hlt
imul
push
mov
mov
retf
jp
jnp
add
cmp
jl
pop
mov
inc
xor
push
sub
(bad)
lock
sbb
push
addr16
or
pop
cld
pop
adc
rol
retf
clc
clc
push
dec
xchg
or
cmps
movs
loope
dec
xor
loop
jnp
mov
sti
jp
popa
sub
push
push
and
call
sbb
fwait
pop
into
mov
dec
jmp
fnclex
daa
jne
jne
test
add
outs
cli
(bad)
in
pop
shl
sbb
cmp
xor
cmps
add
push
(bad)
(bad)
int3
xor
daa
jg
test
test
xlat
ret
add
aaa
pop
push
push
and
push
and
fisubr
pop
mov
rcr
(bad)
fsubr
cmp
pop
clc
jae
mov
adc
mov
test
sbb
ud2
out
mov
push
xchg
xchg
sbb
pop
lea
cmp
psubb
mov
add
jge
push
cwde
sahf
mov
mov
xchg
and
jecxz
mov
int
or
outs
and
mov
rcr
ss
cmp
(bad)
cdq
sbb
dec
push
nop
stc
repnz
rcr
push
xchg
into
inc
push
ins
inc
or
(bad)
jg
xchg
imul
cmc
lock
ins
ins
cmps
pop
pushf
or
pop
mov
int3
scas
sub
xchg
xlat
mov
fucomp
adc
(bad)
cmp
and
cmp
add
or
mov
adc
mov
dec
mov
adc
push
addr16
xchg
sbb
lock
(bad)
or
xor
shl
jecxz
lods
mov
sahf
pop
mov
outs
sub
inc
sbb
outs
inc
aaa
mov
inc
test
repz
mov
bound
ficom
inc
mov
shr
clc
cs
mov
aam
sub
add
mov
pop
push
out
mov
leave
pop
pusha
add
inc
cmp
mov
out
add
mov
retf
fdiv
mov
(bad)
sub
inc
xchg
aad
mov
sahf
cmp
js
mov
xor
int3
retf
and
ja
xchg
mov
std
cli
mov
hlt
shl
in
dec
(bad)
out
int3
push
or
es
pop
mov
dec
mov
jbe
popa
rol
push
and
xor
and
pop
cmps
mov
inc
popa
or
sub
pop
je
push
pop
mov
jg
(bad)
jp
xlat
push
mov
fwait
(bad)
not
sbb
cmp
dec
xlat
sbb
leave
pop
xchg
fwait
retf
xchg
test
fdiv
xor
jb
push
adc
(bad)
xor
repz
and
push
push
mov
mul
(bad)
or
xchg
sbb
test
xchg
or
lods
loopne
dec
outs
mov
stos
add
cdq
sub
push
inc
pop
std
clc
sub
adc
test
inc
mov
or
int3
int
mov
les
pop
sub
mov
pop
mov
in
rol
dec
jmp
sbb
pusha
stc
out
mov
push
data16
mov
mov
int
scas
das
dec
retf
fwait
xchg
or
(bad)
and
das
mul
jmp
imul
mov
pop
dec
(bad)
cmp
pop
scas
shl
outs
(bad)
push
add
aam
fadd
sub
add
inc
enter
xchg
dec
inc
add
ins
hlt
jle
data16
jle
(bad)
pop
mov
xchg
int3
aas
in
data16
ja
mov
adc
inc
inc
icebp
imul
adc
clc
or
lods
test
sbb
mov
push
dec
cmp
dec
xor
nop
mov
add
arpl
mov
mov
sub
mov
(bad)
das
pop
je
push
push
repnz
data16
scas
dec
push
mov
enter
nop
rcr
push
es
adc
xor
mov
sub
pushf
sbb
cmp
scas
clc
outs
mov
aam
repz
inc
mov
js
or
je
test
add
xor
mov
jo
sbb
iret
pop
mov
push
and
adc
or
cdq
in
jmp
xchg
adc
sub
icebp
fadd
add
movs
dec
and
pop
outs
jmp
cmps
dec
sub
lods
scas
push
jns
stos
jg
dec
stos
dec
or
repnz
loop
je
(bad)
dec
mov
aad
or
push
mov
xchg
cmps
addr16
mov
imul
shl
adc
test
sbb
add
ss
mov
sbb
les
mov
dec
sub
pop
push
test
lahf
xor
dec
lock
fcmovnu
mov
aad
cmp
sbb
stos
dec
shr
aad
mov
pop
or
adc
jle
aas
mov
jg
adc
add
or
lock
arpl
aas
shl
sar
out
pop
lods
inc
fcmovne
xlat
stc
in
cmp
xchg
sbb
sub
mov
fwait
sbb
cmps
push
mov
dec
lock
out
stos
cmp
aad
adc
jge
imul
cmp
lahf
or
pop
xor
outs
push
push
dec
fdiv
ja
arpl
jecxz
jge
push
retf
fiadd
xchg
mov
push
ror
push
pushf
mov
test
jle
pop
xchg
in
lea
add
add
(bad)
mov
pop
sahf
into
push
mov
or
mov
popa
mov
sbb
push
ins
inc
pop
jecxz
push
cmp
ins
mov
cmp
aaa
xor
jp
inc
int3
fmul
jmp
add
add
pushf
push
inc
dec
pushf
and
mov
fcmovnb
inc
ins
or
ja
inc
push
pop
push
cmps
adc
or
cmp
cmp
mov
es
ror
in
aad
loopne
dec
(bad)
mov
pop
push
shr
pop
jg
xor
pop
and
mov
mov
sbb
test
fnsave
mov
inc
sbb
into
lock
cmp
rcl
xchg
popa
push
lock
xchg
cmp
or
(bad)
loopne
push
movs
pop
mov
push
jmp
jp
mov
leave
mov
or
dec
(bad)
push
out
push
enter
push
add
sahf
popa
and
mov
xlat
push
jmp
dec
push
js
lock
fistp
xor
(bad)
jae
adc
sti
scas
mov
cmp
push
inc
ins
and
xchg
jmp
push
jp
bound
cdq
pop
test
jle
fdiv
movs
(bad)
fdivr
mov
dec
fstp
cld
pop
out
cmp
cmp
jp
lds
pop
jge
out
inc
and
sub
in
cmps
push
sti
(bad)
cdq
lods
sbb
and
ror
pusha
stc
xchg
popa
out
xor
movs
sbb
jb
(bad)
out
int
push
mov
lock
ins
xchg
daa
in
push
ss
add
xor
add
shl
scas
pop
mov
out
jo
fnstsw
sti
mov
and
xchg
aaa
loopne
add
inc
cmp
(bad)
jmp
out
into
je
imul
movs
pop
pop
call
push
adc
mov
cs
not
jle
retf
and
adc
adc
arpl
rol
cmp
jno
dec
adc
ds
hlt
(bad)
xor
es
iret
cmp
scas
sub
sub
jecxz
test
xchg
add
inc
sar
or
inc
cld
call
sub
sub
iret
or
sub
jecxz
cdq
(bad)
jg
push
retf
push
jmp
idiv
xor
jo
ret
leave
pushf
imul
push
inc
lods
dec
fnstcw
sbb
sub
mov
cmp
push
sti
jmp
out
stos
xchg
jo
mov
sbb
aaa
repz
into
lock
outs
retf
mov
push
ins
or
mov
cmps
in
lock
cmps
std
mov
or
mov
pop
in
mov
adc
pop
and
or
je
mov
cmp
and
ja
xchg
cwde
mov
xlat
adc
xor
data16
int
lea
sub
push
mov
mov
cmps
xor
ss
das
dec
call
adc
pop
and
jbe
scas
push
sbb
lods
add
sbb
jne
(bad)
push
dec
repnz
(bad)
test
push
dec
jl
shr
jg
call
daa
sbb
popa
ret
pop
xor
mov
pusha
imul
mov
cwde
aam
push
adc
adc
jb
push
popf
popa
add
jns
(bad)
out
or
mov
clc
shl
nop
xchg
cli
xor
pop
pop
(bad)
xor
inc
dec
sbb
repnz
in
inc
xor
dec
or
ret
movs
test
lods
xor
mov
cmp
xchg
or
pop
in
test
sbb
les
push
and
aaa
sar
pop
rol
sub
aam
out
cmps
call
mov
mov
outs
std
mov
push
ror
das
jne
test
imul
test
in
push
pop
test
jmp
js
add
adc
popa
adc
(bad)
cmp
pusha
xchg
push
mov
adc
out
arpl
fidiv
out
or
aad
push
ss
fwait
add
imul
jmp
pop
or
pop
jne
cdq
sub
aas
add
call
or
cdq
mov
fsubr
clc
out
repz
nop
sub
mov
jbe
xor
lods
mov
(bad)
out
mov
push
xlat
cld
sub
cmp
xor
push
sbb
jmp
fdivr
fbstp
addr16
xor
test
push
icebp
stos
sub
jmp
xchg
popf
lock
inc
(bad)
imul
adc
loopne
ror
inc
inc
xchg
iret
nop
cmp
add
xchg
xor
mov
sub
mov
adc
ins
mov
std
sar
retf
jo
in
cmc
mov
in
mov
push
cwde
je
outs
rcl
sub
mov
lahf
stos
mov
mov
js
xor
inc
scas
cmp
mov
jo
jg
in
popf
sbb
retf
iret
call
ja
call
iret
sub
fsubrp
cmp
adc
(bad)
sahf
aaa
fild
mov
enter
jb
mov
call
mov
movs
mov
push
xor
ins
ret
adc
mov
retf
push
sbb
mov
aas
xor
mov
pushf
adc
aam
shr
inc
pop
mov
rol
(bad)
push
dec
and
je
jg
xor
fldcw
clc
or
jmp
pop
add
ins
shl
dec
loope
mov
pop
out
jno
jne
jns
pop
icebp
xor
adc
(bad)
in
dec
aad
dec
xor
sub
(bad)
jo
out
pop
adc
cmc
leave
mov
ins
sub
cld
push
scas
in
inc
stos
fwait
loopne
ins
mov
dec
mov
retf
mov
inc
cmps
mov
cmp
fidivr
dec
xchg
loop
cmp
cdq
jp
mov
mov
or
xchg
sahf
mov
dec
test
ret
dec
sti
gs
mov
dec
adc
je
fstp
hlt
cmp
lods
cdq
outs
push
retf
add
mov
jo
sub
xor
mov
jmp
xor
stos
mov
aas
ret
xor
cmp
pop
pop
and
movs
shl
push
pusha
and
cld
hlt
cmp
cmp
add
mov
call
(bad)
bound
sub
and
xchg
cmps
mov
shl
sub
pcmpeqb
mov
scas
push
sub
or
ret
inc
call
aam
mov
sahf
mov
sbb
stc
mov
outs
and
dec
lahf
and
add
jo
movs
repz
push
iret
(bad)
into
pusha
(bad)
push
outs
mov
add
sbb
mov
(bad)
mov
xchg
aad
or
cmp
data16
stos
call
pop
(bad)
xor
sub
add
(bad)
repnz
inc
iret
mov
sub
mov
and
fidiv
push
test
imul
jmp
cwde
cmc
sbb
retf
shr
mov
bound
cwde
pusha
loopne
fadd
call
push
mov
mov
adc
push
push
pop
lods
or
(bad)
repz
lods
adc
test
dec
mov
pop
mov
sub
nop
test
push
cmp
mov
pop
pop
sub
jae
shr
add
lods
xchg
dec
pop
add
dec
call
pushf
movs
adc
(bad)
dec
sub
(bad)
rol
fisubr
xchg
cmp
inc
fcomi
les
pop
out
mov
and
gs
or
fldenv
inc
ficom
push
cdq
xor
push
cmp
pusha
adc
icebp
stc
ins
add
(bad)
or
in
sbb
pusha
(bad)
loope
test
retf
or
sub
jle
push
cmp
rol
daa
push
shl
es
adc
js
(bad)
fnsave
retf
mov
inc
dec
jle
fcomp
and
inc
ins
retf
mov
jmp
jmp
mov
into
cmp
or
js
xchg
cmp
jmp
xchg
ja
inc
leave
arpl
call
mov
not
mov
push
pushf
push
mov
icebp
sbb
idiv
push
shr
test
movs
test
jno
out
inc
inc
mov
mov
sti
mov
in
dec
and
pop
popa
arpl
sti
mov
test
jnp
into
imul
dec
cwde
inc
cld
add
pushf
mov
iret
xor
pop
sub
cmp
loop
test
xchg
jns
aaa
jmp
arpl
nop
inc
jne
push
xchg
leave
add
ins
out
xor
sub
cli
scas
mov
aaa
lds
pop
lahf
sbb
mov
fild
retf
xchg
adc
popf
sub
(bad)
and
lahf
add
mov
leave
add
jne
sub
icebp
fcmove
add
dec
xchg
push
inc
xchg
fmul
jnp
sbb
rcr
ret
lods
sbb
rol
push
neg
jg
shr
sbb
sub
dec
fist
add
les
leave
sbb
mov
jno
fnsave
cmps
xchg
ja
out
mov
call
jle
bound
jne
jb
or
(bad)
mov
out
retf
(bad)
je
pusha
leave
aaa
sahf
sbb
jp
mov
xor
xchg
hlt
mov
lea
xor
push
inc
pop
mov
mov
stos
out
jns
test
dec
lea
cwde
aas
xchg
xchg
test
or
inc
pop
hlt
sahf
or
ins
rcr
inc
sbb
cdq
inc
xor
icebp
mov
or
(bad)
mov
lds
sub
call
outs
cmp
and
inc
xor
mov
ss
shr
and
push
add
iret
dec
jns
pop
(bad)
je
cmp
ret
(bad)
fidivr
xchg
adc
dec
(bad)
jmp
push
inc
sub
pop
ss
add
xchg
imul
loop
hlt
push
ror
jmp
rcl
dec
cmp
xor
or
movs
mov
idiv
imul
push
jmp
ja
cmp
out
xchg
call
pushf
xlat
fisttp
sbb
ja
popa
or
iret
imul
fst
repz
sub
in
pushf
cmp
and
xor
mov
mov
cs
jmp
inc
cs
cmp
pop
imul
add
xlat
cmps
xor
and
(bad)
cmc
pop
inc
xor
xchg
mov
push
mov
out
cdq
mov
ss
(bad)
xchg
sub
sbb
scas
aas
ins
ins
and
push
and
cwde
fst
je
mov
sti
dec
mov
inc
mov
fdivr
cdq
push
inc
(bad)
fiadd
into
fs
fnstsw
int3
adc
xor
mov
fs
int3
jl
repnz
ins
jb
ret
and
or
imul
lahf
and
cmps
jo
ret
sbb
call
es
loopne
iret
int3
popa
xor
in
(bad)
cmp
out
scas
mov
mov
inc
(bad)
aam
adc
sti
scas
dec
cs
int
jp
(bad)
hlt
out
fdiv
pop
cli
aam
imul
rcl
xor
std
and
cmps
and
jle
xchg
or
(bad)
lea
into
mov
mov
data16
xchg
rol
sbb
in
outs
int3
push
jp
(bad)
xchg
ss
nop
add
push
shl
mov
push
mov
shr
cdq
(bad)
int
push
int
push
inc
push
mov
movs
pop
add
add
pop
mov
cmc
inc
ja
mov
hlt
mov
mov
imul
dec
icebp
ins
jbe
dec
adc
shl
xchg
int3
dec
pop
mov
in
inc
inc
add
dec
cdq
mov
cld
xor
ds
sub
mov
dec
aad
mov
fs
adc
mov
add
aam
mov
cmp
inc
loopne
fcmovb
mov
mov
fsub
mov
adc
gs
pop
aas
addr16
nop
push
xor
dec
sub
lds
repnz
and
(bad)
shl
gs
or
loopne
out
in
in
in
pop
call
sbb
fs
jo
rcl
adc
adc
sahf
pop
loope
pushf
mov
xor
out
shr
jne
hlt
jnp
loop
cld
add
loopne
mov
pushw
add
mov
inc
neg
pusha
aas
je
sub
rol
cmps
jns
ja
das
jo
scas
xchg
or
out
jecxz
lea
jo
pop
adc
xor
dec
out
stc
movs
cdq
lds
push
mov
sub
xchg
ficom
mov
pop
neg
ss
test
mov
fimul
or
(bad)
mov
ins
dec
push
fldenv
push
cmps
xchg
retf
arpl
mov
cmp
add
cmp
sub
mov
clc
repnz
pop
pushf
mov
inc
in
movs
mov
inc
test
rcr
jmp
repz
loop
loopne
dec
push
fdiv
ins
dec
sti
fsub
inc
pop
out
push
push
outs
out
in
push
mov
add
and
neg
xchg
cmps
or
test
mov
xor
lds
jno
aad
nop
aas
adc
push
sahf
push
fs
pop
daa
dec
inc
jno
mov
lds
add
jns
pop
out
cmp
mov
xchg
sbb
inc
xchg
push
out
out
and
mov
sahf
jmp
or
(bad)
sbb
jmp
inc
mov
and
xchg
mov
sbb
je
sahf
ins
ffreep
rcl
dec
mov
loopne
dec
pop
xor
sbb
jecxz
inc
xchg
mov
cmp
dec
jbe
out
mov
add
jb
fidivr
and
pusha
rcl
ficom
dec
push
out
lds
adc
sbb
adc
xchg
fist
cmp
push
xor
and
test
xor
xchg
push
call
xor
retf
popf
cmps
cmc
adc
rol
cli
add
pop
das
out
sbb
jl
pushf
scas
jecxz
jle
in
sub
cmp
jmp
pushf
xchg
inc
mov
cmc
jecxz
icebp
push
dec
add
mov
adc
push
or
and
fwait
mov
pusha
mov
fst
cwde
lock
cli
cmp
out
iret
fisubr
cmp
sbb
push
pop
shl
add
pop
jns
sub
xor
pop
mov
das
push
fisubr
fwait
in
push
loopne
pop
adc
add
mov
jno
rcl
ret
and
sbb
ret
xchg
(bad)
jp
pop
add
mov
inc
or
xchg
adc
loopne
mov
cdq
jmp
push
imul
vxorps
(bad)
inc
mov
adc
push
xchg
pop
mov
inc
arpl
and
fsub
push
mov
and
push
mov
es
jno
dec
jmp
fs
imul
sbb
jnp
mov
pushf
or
add
or
bnd
aaa
stc
xor
aaa
test
dec
push
out
js
je
popf
jae
lea
scas
mov
or
int3
(bad)
loopne
test
cmp
ret
data16
xchg
ret
test
int
inc
or
push
loope
or
mov
add
movs
xlat
imul
icebp
mov
loop
xor
xlat
mov
pop
shl
les
mov
(bad)
sbb
rcl
or
xor
(bad)
pop
mov
jo
fld
aam
and
xchg
xor
sub
jno
aaa
jo
mov
dec
ja
jbe
sbb
mov
jo
mov
push
shl
mov
test
mov
leave
ret
int3
mov
xor
ror
repnz
inc
aas
mov
mov
paddusw
fdivr
or
cwde
inc
sbb
sar
sub
lock
std
cmp
inc
pop
es
rol
push
retf
into
daa
fcomi
sbb
(bad)
cmp
(bad)
pop
xor
jp
push
jns
or
jge
cmp
dec
aas
cmps
setno
imul
sbb
xor
dec
loop
ja
and
and
mov
mov
arpl
mov
xchg
or
and
add
push
outs
lea
pop
add
add
in
(bad)
mov
xor
nop
fdivr
loopne
aas
(bad)
out
pop
mov
mov
mov
mov
pusha
rcl
imul
xchg
popf
dec
sar
lods
dec
jp
cmc
cmp
popa
cmp
xchg
aad
pushf
mov
jb
sub
pushf
ss
adc
in
movs
inc
sahf
retf
push
in
mov
jle
add
lahf
mov
outs
mov
lock
xor
xor
enter
aas
cmp
xor
adc
jno
cmps
inc
cwde
mov
je
xchg
mov
daa
add
pop
loopne
xchg
ss
enter
mov
add
adc
jae
lea
sbb
call
sub
mov
and
popf
or
inc
retf
add
dec
mov
push
push
push
pop
inc
mov
sub
push
fsub
daa
hlt
mov
sbb
jecxz
ss
sar
mov
div
xchg
clc
jno
push
dec
mov
enter
xchg
repz
ja
pandn
imul
(bad)
fisub
xchg
xchg
mov
cdq
aam
mov
lahf
repz
mov
int
vpmaxub
mov
sub
push
push
mov
and
pusha
es
mov
fucomp
cs
out
iret
aad
or
pop
test
into
mov
jl
rcl
push
(bad)
mov
fstp
iret
push
mov
xchg
call
cmc
add
or
sub
push
pop
add
(bad)
sub
lea
mov
pop
sahf
add
stos
popf
jo
sahf
sbb
add
xchg
not
cmp
pop
jns
xor
cmp
pop
push
cmp
jns
push
xor
test
es
or
int3
iret
fidiv
loop
and
adc
and
mov
xchg
test
fmul
int3
ror
cmp
fs
xor
(bad)
jp
and
fdiv
retf
outs
hlt
dec
adc
test
rol
mov
jecxz
pusha
jns
sub
enter
ins
adc
mov
mov
mov
aad
loopne
pop
lahf
pop
inc
mov
mov
lea
mov
es
in
aam
push
syscall
sti
pop
or
in
in
icebp
sub
cld
das
adc
cld
test
ret
ds
gs
rcl
jmp
daa
push
aad
adc
mov
add
fs
mov
xor
sub
outs
daa
xchg
dec
sub
inc
jmp
(bad)
jp
xchg
sti
or
and
das
mov
push
push
dec
dec
cmp
pop
das
(bad)
ss
mov
shl
fwait
pop
enter
(bad)
fcomp
out
inc
cmp
mov
or
scas
fcomp
sahf
dec
xchg
(bad)
addr16
add
pop
dec
inc
or
add
(bad)
(bad)
jmp
adc
pop
out
dec
cmp
add
sbb
cs
inc
push
pop
mov
int3
mov
cwde
mov
jnp
pop
out
pinsrw
or
inc
push
int
clc
cmps
xlat
shl
mov
add
sbb
xor
cmp
retf
xor
out
dec
fwait
push
(bad)
ins
xchg
mov
stos
xor
popf
aas
imul
(bad)
sbb
cmp
push
pop
mov
push
ins
test
mov
jl
sbb
js
pushf
add
ds
test
hlt
ror
enter
mov
out
push
pop
xor
sub
scas
fst
add
test
cmp
xchg
aam
test
xchg
pop
adc
or
jb
movs
jns
or
cdq
dec
(bad)
int3
out
(bad)
mov
sbb
mov
outs
dec
add
int3
in
and
xchg
movs
push
adc
xor
adc
xor
sti
inc
nop
imul
cmp
retf
sbb
push
fild
pushf
mov
daa
int3
icebp
or
dec
retf
test
sbb
sub
pop
xlat
push
sbb
cli
(bad)
sbb
jno
pusha
ds
jmp
adc
add
push
std
or
jo
loope
xor
push
inc
iret
jl
pop
in
and
shr
loop
jmp
sti
cwde
and
mov
daa
int
and
push
daa
arpl
dec
mov
xchg
pop
lods
addr16
retf
xor
rol
pop
xor
rsqrtps
retf
pop
stos
out
xor
push
es
sub
or
cld
dec
outs
lds
adc
les
sub
jge
(bad)
fucomp
cmp
pop
frstor
in
push
xchg
dec
xor
lock
in
adc
nop
mov
jae
movs
(bad)
leave
daa
mov
mov
fdivr
stos
and
push
fld
(bad)
call
pop
std
xchg
xchg
aas
adc
rdtsc
pop
imul
test
mov
and
push
ja
add
jae
sub
ret
xchg
mov
jl
xchg
pushf
out
jmp
neg
aam
sub
imul
add
push
sub
push
inc
dec
inc
test
push
ffree
pushf
int3
mov
pushw
xor
jmp
mov
jae
push
jno
mov
popf
add
push
dec
call
pushf
pop
inc
push
iret
mov
adc
pop
mov
jns
or
and
cli
arpl
dec
pop
cmps
pshufw
xlat
test
cmp
or
fimul
lds
fcomp
lods
gs
xchg
xor
retf
pop
(bad)
mov
push
mov
push
outs
ret
push
daa
jbe
pop
call
fadd
jge
(bad)
out
loop
movs
inc
fnstcw
mov
retf
(bad)
aas
(bad)
scas
push
icebp
push
(bad)
add
or
int
sahf
push
jl
add
arpl
call
and
push
int3
sbb
cdq
(bad)
out
in
aam
xchg
xchg
push
sbb
dec
dec
jno
test
mov
add
movs
xchg
add
out
addr16
cld
push
jle
pop
xchg
cmps
add
inc
mov
or
xchg
pop
xor
jmp
push
aad
jle
sbb
fst
fs
and
ja
shr
mov
clc
jl
dec
call
jno
fs
aas
mov
ins
xchg
cmps
cmp
movs
mov
adc
loop
xchg
je
xchg
movs
pop
and
add
mov
lods
sub
idiv
xlat
fmul
cdq
pop
les
js
fsubr
sub
clc
push
pop
frstor
jecxz
aaa
adc
loope
shl
pop
xchg
sbb
or
aam
inc
inc
ins
into
pop
test
(bad)
hlt
es
mov
call
inc
adc
mov
into
and
ins
(bad)
pop
into
jns
(bad)
xor
dec
pop
mov
aas
mov
xchg
push
pop
add
mov
call
fisubr
cli
push
jecxz
mov
es
inc
lods
jmp
xchg
stc
je
push
cmc
stos
loope
cmp
test
scas
push
sbb
cmp
xchg
(bad)
cmp
ror
scas
repnz
fcmovnb
add
jmp
sahf
out
sbb
in
test
or
out
mov
dec
mov
sti
int3
jne
cli
test
dec
shr
inc
jl
jl
pushf
xchg
sti
jne
cwde
xchg
js
loope
dec
jl
(bad)
xor
jne
jnp
(bad)
fidivr
aad
pop
nop
adc
dec
test
sub
push
push
test
aaa
mov
mov
ss
mov
jnp
call
mov
xor
shr
ins
pop
pusha
xchg
ss
icebp
imul
cmp
xchg
pop
and
mov
jmp
call
xchg
jmp
sub
je
ficom
mov
div
inc
or
outs
dec
mov
in
dec
popa
lock
test
out
mov
mov
sbb
cmps
popf
aam
sbb
cli
(bad)
ss
loopne
ss
test
gs
sub
and
cmp
fdiv
adc
push
add
push
mov
pop
mov
pusha
out
sub
enter
cmc
dec
xor
push
jl
out
loopne
sbb
and
adc
je
xor
aaa
das
outs
xchg
inc
jne
and
sub
test
jae
xor
scas
shl
mov
sbb
dec
inc
ret
in
pop
xchg
mov
adc
add
movs
movups
lahf
dec
add
mov
jb
out
imul
push
inc
mov
sbb
leave
or
fs
hlt
cmc
xchg
mov
cdq
push
cli
xchg
lahf
(bad)
jnp
test
out
les
mov
mov
push
dec
stos
xchg
or
pop
xor
push
and
stos
jbe
inc
cmp
or
xchg
inc
les
sbb
pop
jg
or
movs
test
pop
jbe
cli
or
ret
ret
mov
lds
lock
pop
ret
mov
pop
cmps
out
mov
sbb
dec
test
(bad)
mov
dec
pop
cmp
push
xlat
aas
cli
loopne
cmp
dec
movs
dec
inc
sub
not
neg
sbb
fcom
jecxz
test
xchg
xor
aaa
sub
mov
ret
jo
leave
es
data16
jae
stc
adc
mov
mov
pop
mov
xor
cmp
mov
xor
inc
pop
cmp
add
retf
mov
xchg
mov
pop
jbe
jo
in
push
pop
sbb
call
aaa
pop
(bad)
pop
outs
fwait
or
aam
dec
add
mov
or
mov
push
in
stos
retf
cmps
icebp
int
inc
sub
cmp
sub
pop
mov
sub
mov
push
cmps
inc
call
xor
aas
add
jp
push
mov
fsub
jecxz
ret
push
cmps
mov
ret
cmp
push
lds
mov
adc
or
add
div
cmp
stc
pop
mov
stos
sbb
sub
aaa
imul
sbb
adc
or
aaa
mov
out
inc
dec
inc
(bad)
mov
mov
sahf
inc
or
cmp
nop
je
or
jecxz
and
test
retf
jae
lds
les
add
sub
bound
dec
or
ins
cmps
jne
dec
cmp
xor
fs
pop
inc
mov
aam
xchg
adc
loopne
ret
aad
push
icebp
fistp
mov
adc
push
xor
xchg
xchg
lods
push
and
jo
or
push
adc
mov
ret
jae
in
sub
jl
push
sti
sbb
test
push
jmp
int3
imul
fsub
cmp
mov
loopne
cdq
add
xor
mov
push
jae
(bad)
fcmovu
xchg
adc
or
sub
mov
mov
mov
pop
in
pop
movs
jns
cld
(bad)
les
stc
shl
clc
sub
jb
fs
fcom
rol
ss
(bad)
mov
jmp
push
inc
xchg
pop
out
inc
xchg
inc
cmp
fucompp
cmp
ds
retf
push
pushf
icebp
mov
fstp
xchg
fdiv
lds
xchg
jbe
inc
dec
repz
test
call
inc
pop
stos
mov
and
mov
push
(bad)
cli
push
pushf
pusha
fld
push
or
scas
inc
scas
fidivr
not
cmovs
jne
inc
outs
imul
pop
aaa
jle
xchg
loop
mov
cmp
rcl
popf
lock
jbe
or
out
(bad)
push
add
leave
dec
cmp
fcomp
inc
cmp
sbb
fdivr
popa
in
fwait
pop
jl
sub
fimul
sahf
cmps
mov
repnz
mov
mov
mov
ss
fcomp
lods
lods
dec
adc
mov
xor
mov
outs
push
sub
test
xchg
and
enter
and
xchg
cmps
mov
mov
and
mov
adc
cmp
imul
jg
push
mov
dec
leave
pop
fiadd
sbb
sub
mov
popa
mov
hlt
cmc
ret
sbb
inc
adc
arpl
sub
ror
adc
out
add
pop
push
sar
pop
push
mov
sub
test
jno
loope
and
pop
mov
or
bound
imul
dec
lods
jb
or
mov
jns
(bad)
loopne
cmc
ret
mov
xor
inc
dec
adc
push
cli
sub
add
les
or
xor
push
xor
fidivr
push
lea
ret
inc
xchg
pop
(bad)
loop
sbb
inc
and
rcl
rcl
hlt
inc
rcl
test
fnstenv
jmp
or
or
xchg
jle
inc
repz
mov
aam
and
mov
popa
sbb
push
sub
adc
cdq
and
stc
sti
dec
jg
aas
ja
aaa
inc
ficom
and
dec
jecxz
jbe
mov
xor
jg
add
jne
leave
xchg
cmps
xor
lds
sbb
push
inc
fistp
data16
jo
adc
pushf
xchg
sbb
push
pop
sahf
gs
jno
xor
cmp
das
pop
push
push
jmp
and
mov
add
add
or
dec
bound
xchg
fist
xor
pop
adc
jo
mov
jnp
cmps
sub
fsubr
fsub
lods
daa
daa
movzx
cmp
(bad)
pop
sar
mov
mov
outs
gs
push
popa
inc
add
aad
sub
ins
mov
cs
cmps
pop
jne
ds
movs
retf
sub
push
retf
xchg
jecxz
popf
jp
jns
movs
shr
stos
enter
mov
rol
and
mov
dec
jbe
adc
inc
ds
test
nop
push
test
xor
mov
mov
lea
movs
call
push
dec
les
xchg
lar
arpl
aaa
dec
jno
repnz
loopne
pusha
fidivr
mov
imul
call
sbb
pop
sbb
fimul
cmp
mov
cmp
mov
push
add
mov
(bad)
mov
adc
inc
shl
add
sub
dec
mov
fidiv
(bad)
jecxz
mov
scas
out
popa
or
bound
jecxz
jg
push
cli
test
test
fbstp
cmps
adc
adc
mov
jo
shl
das
jns
mov
into
out
ror
mov
mov
inc
retf
push
adc
jmp
or
jmp
or
test
cmps
imul
call
or
lods
sub
ror
jne
stos
adc
scas
hlt
fstp
shr
dec
jae
xchg
imul
xchg
jns
stc
outs
and
fnstenv
pop
cmp
rol
movs
mov
leave
(bad)
outs
mov
fs
dec
aaa
lahf
push
scas
in
in
inc
pop
push
xor
mov
scas
push
adc
xchg
mul
in
sahf
xchg
push
jge
pop
dec
push
icebp
and
xor
inc
gs
mov
int
std
push
push
inc
mov
aaa
mov
inc
adc
aam
jae
inc
rcr
mov
mov
sub
bswap
jmp
push
dec
ret
pop
xchg
ins
imul
ret
and
xlat
adc
stos
cmp
or
sub
pop
pop
jl
cmps
add
adc
inc
xor
mov
or
jl
cmp
cmp
adc
dec
(bad)
adc
adc
lods
sub
sub
pop
pop
inc
fistp
repnz
xor
js
in
or
inc
inc
mov
and
and
data16
jae
fwait
loopne
and
clc
std
push
mov
add
and
sbb
es
inc
jg
stc
fmul
mov
stc
out
pop
jae
out
dec
jbe
mov
out
cld
mov
fdivr
dec
mov
jns
xlat
dec
dec
push
fwait
or
sbb
lds
and
dec
mov
clc
out
mov
dec
shl
jg
fdiv
push
fld
cmp
add
rol
popaw
pop
and
inc
jmp
ins
daa
jns
fbstp
pusha
pop
rcr
and
fwait
sub
mov
jno
mov
sub
sub
shl
sub
fsub
inc
dec
and
jbe
xchg
mov
cmps
adc
pop
pop
jnp
adc
(bad)
cmc
fwait
sbb
adc
cwde
add
jo
mov
rcl
mov
push
push
ficom
cmp
jbe
icebp
mov
mov
push
mov
mul
vpsrld
sub
inc
mov
sbb
fucomip
push
popf
icebp
sti
cdq
or
jns
sbb
xchg
sti
sbb
jp
push
pusha
aas
call
push
push
add
rol
or
add
call
ins
sub
in
dec
adc
in
cld
inc
mov
push
loop
xchg
mov
xchg
add
dec
mov
xor
push
and
pop
xor
dec
cwde
call
sar
mov
ficom
xor
push
jmp
les
fxch
pop
es
add
rol
inc
xor
pop
in
ins
mov
push
jmp
mov
cmp
xlat
add
outs
cmps
stos
xor
cmp
push
cdq
bound
mov
cld
les
fisub
popf
pop
xchg
jmp
lock
pusha
stos
stos
push
daa
clc
les
jle
aam
nop
mov
aam
rcr
push
mov
push
mov
(bad)
stc
mov
jg
mov
jl
or
mov
mov
cdq
jo
mov
dec
adc
jecxz
int
cmps
cwde
dec
pop
rcr
test
loop
sar
pop
ins
shr
or
push
sbb
mov
nop
xchg
out
mov
dec
pop
jae
mov
sti
pushf
out
xor
mov
xchg
xor
(bad)
(bad)
icebp
iret
cmp
push
push
dec
neg
mov
xor
(bad)
mov
dec
fld
nop
cmp
or
jo
pop
js
cmp
gs
aaa
retf
adc
ja
push
ins
jo
lods
or
mov
push
xchg
in
push
sbb
mov
push
adc
mov
movs
sbb
lds
pop
aaa
pop
inc
push
imul
test
sbb
inc
dec
mov
jg
adc
cld
cmp
cwde
dec
add
sub
test
pop
ret
add
sbb
add
cs
lock
rcl
lods
and
xor
mov
jmp
xchg
hlt
pop
or
pop
outs
test
xchg
mov
enter
cmp
movs
sti
push
enter
iret
and
sub
cmp
jge
fwait
pop
loop
cmp
sbb
dec
inc
sub
call
repnz
sbb
sbb
cmc
xlat
inc
add
addr16
fisttp
xor
je
mov
jo
xchg
dec
pusha
pop
pop
mov
mov
std
mov
mov
lods
xor
dec
dec
pop
push
cmp
shr
test
maxps
mov
out
int
ficomp
ds
dec
in
push
jno
or
mov
mov
push
add
aam
add
jmp
jnp
js
sti
leave
hlt
loop
cmps
daa
sti
sbb
jns
sti
out
lods
push
inc
test
dec
cli
fidiv
or
and
out
aad
cmps
cmp
in
mov
mov
je
or
inc
sbb
ins
(bad)
js
mov
push
inc
jns
pop
dec
cmp
push
lahf
or
outs
inc
add
lods
pop
dec
xchg
movs
out
clc
mov
arpl
mov
and
call
add
xor
imul
dec
cmc
fwait
push
retf
js
fisttp
add
mov
rcl
movlps
arpl
in
mov
jne
or
or
ret
pusha
pop
xor
mov
mov
push
fwait
neg
dec
and
push
and
shl
dec
lods
cmc
jno
xchg
adc
push
inc
sete
movs
mov
shl
stos
cli
arpl
jo
jl
es
(bad)
mov
shl
adc
fnstcw
mov
mov
aam
adc
(bad)
push
addr16
mov
jg
and
pop
sbb
out
addr16
movs
(bad)
rcr
ja
aas
mov
dec
ins
mov
pop
call
call
aaa
(bad)
retf
and
call
pusha
cmps
(bad)
pop
jp
add
enter
ja
jo
dec
inc
push
rol
ds
add
movs
jecxz
sti
movs
movs
push
popf
stc
inc
and
nop
ja
and
enter
sbb
add
mov
leave
retf
push
js
mov
gs
outs
add
test
mov
sahf
fsub
sbb
mov
push
sti
xchg
data16
shr
out
jmp
cmp
mov
xor
push
mov
jmp
pop
pushf
ja
out
dec
adc
fldenv
jne
sbb
fcomp
mov
mov
enter
cmp
ja
pop
cmc
push
and
retf
outs
in
mov
add
push
mov
imul
mov
or
mov
dec
jecxz
mov
jne
mov
aad
push
xor
mov
or
mov
pop
es
inc
shl
jp
xor
cmp
fdivr
mov
movs
push
mov
push
out
pushf
or
lds
das
lods
jecxz
leave
xchg
repz
inc
mov
cmp
pushf
call
push
jnp
or
fldcw
scas
daa
fdiv
sub
jp
cmp
mul
int3
add
push
mov
or
fst
sub
popa
jmp
rcr
adc
inc
xor
out
outs
repnz
enter
or
ja
jle
push
les
sbb
movs
xchg
leave
popa
pop
mov
xchg
inc
push
or
or
ret
or
push
fist
sub
(bad)
jle
cdq
imul
mov
cli
movs
cmp
pusha
mov
mov
fld
adc
call
adc
mov
jb
enter
inc
rep
sbb
(bad)
rcr
mov
popf
imul
adc
mov
and
loop
mov
cli
call
(bad)
out
call
or
mov
xor
push
std
push
sbb
inc
(bad)
jl
mov
xor
icebp
popa
push
or
loope
js
mov
mov
pop
dec
xchg
sbb
cmp
or
test
ror
cld
or
adc
mov
(bad)
lods
cwde
sbb
out
imul
add
in
xor
pushf
cld
adc
jb
mov
gs
call
iret
mov
aaa
pop
leave
jl
xchg
test
js
push
fdiv
mov
xchg
addr16
jo
or
outs
dec
or
(bad)
jmp
enter
cmps
push
jge
sub
mov
aas
pop
fmul
mov
adc
cmp
add
sbb
mov
jne
dec
push
retf
adc
out
jecxz
lods
xor
or
sbb
xchg
fdivr
imul
adc
cmc
fisttp
dec
and
in
pop
repnz
and
mov
ds
cmps
ins
dec
mov
mov
ins
jl
loopne
out
mov
dec
fnsave
lods
push
jnp
sub
and
mov
dec
xchg
xchg
add
dec
sar
mov
clc
imul
stc
idiv
gs
outs
fisubr
and
div
gs
std
(bad)
call
iret
mov
sub
shl
push
call
(bad)
cmps
jb
retf
test
loope
scas
icebp
repnz
nop
jb
add
ror
dec
dec
or
leave
adc
sbb
xchg
or
das
sbb
mov
mov
cwde
(bad)
sub
in
loop
adc
mov
aaa
jno
in
cmp
int3
jb
in
arpl
int3
hlt
pop
lock
stos
fwait
add
jno
retf
and
or
outs
mov
lods
lahf
stos
leavew
sbb
popa
mov
lods
lods
fldcw
mov
mov
fadd
fs
inc
fisub
ret
sbb
(bad)
into
ror
and
push
daa
in
call
cwde
sub
cmp
popa
jg
je
into
cmp
sub
out
clc
fisttp
inc
daa
xor
iret
inc
icebp
movs
jno
dec
jp
repnz
aas
fcomp
cmp
xchg
ja
mov
cmp
xchg
inc
lock
sahf
hlt
sub
dec
sbb
(bad)
and
dec
mov
fwait
xchg
and
data16
xchg
mov
cmps
fst
cmp
outs
ficom
lea
out
lods
int
ins
(bad)
retf
call
sub
xchg
jmp
pop
dec
sahf
inc
mov
lods
cmp
pop
xor
or
jb
lock
(bad)
sbb
sbb
push
sub
cdq
xchg
stos
test
int3
rcl
outs
xor
iret
jecxz
or
add
sahf
out
shufps
repz
mov
dec
test
ins
pop
push
sub
(bad)
call
hlt
add
or
lds
mov
bound
pop
inc
test
test
sti
add
popa
pop
retf
mov
mov
jle
cld
fsub
(bad)
repnz
enter
inc
push
in
call
rcr
mov
sbb
jne
int3
scas
aaa
mov
fmul
mov
fmul
fcom
sbb
(bad)
cwde
test
(bad)
xor
lea
cmp
scas
xor
retf
cmp
mov
test
mov
jmp
rcr
xchg
in
nop
das
jo
cmps
xchg
enter
leave
and
clc
jle
test
int3
mov
mov
in
xchg
daa
adc
adc
cmp
out
mov
add
cld
(bad)
fdiv
loope
xor
loop
xor
mov
fnstenv
cwde
movs
add
shl
call
repz
ss
in
pusha
cmc
xchg
pop
xor
or
outs
std
pop
push
jge
push
jbe
or
cli
jge
inc
jnp
lea
loopne
(bad)
xchg
in
stos
jl
rcr
sbb
test
jo
gs
add
add
mov
scas
and
jnp
std
retf
clc
sub
sub
sahf
test
push
jge
int
lds
inc
cmp
(bad)
cmp
push
fisubr
mov
add
aas
push
jns
fist
fwait
jmp
inc
cmps
mov
stos
loop
in
cmp
jno
in
adc
(bad)
push
sar
mov
jae
pop
adc
or
cmps
sub
mov
stos
arpl
cdq
rcr
imul
xor
stc
popa
jge
and
pop
push
pop
lods
cmp
and
test
adc
pop
add
lods
(bad)
cmp
fild
xchg
dec
sub
mov
mov
adc
add
mov
mov
(bad)
mov
push
xor
adc
out
or
das
xor
stc
mov
jmp
push
jne
stos
int
sbb
bound
or
scas
les
adc
mov
movs
sbb
or
fst
or
jbe
sub
pusha
mov
test
push
cwde
dec
pop
frstor
jnp
je
daa
adc
test
repz
cdq
mov
stc
into
or
aad
test
aas
cdq
fldenv
dec
fsub
xchg
adc
out
xor
xchg
call
cmp
mov
mov
mov
sbb
xchg
out
cmp
add
pop
leave
xchg
daa
ss
cmp
pop
mov
or
xchg
adc
ds
dec
dec
xor
xchg
inc
push
out
jg
add
cmp
inc
jmp
push
jl
inc
xor
mov
ss
retf
inc
cmps
enter
arpl
push
and
push
xor
ret
iret
lea
ret
sbb
cmp
jb
in
lds
mov
sbb
jg
jecxz
sbb
mov
sbb
test
pushf
xor
aam
mov
dec
(bad)
sar
das
xchg
fst
pop
pop
add
outs
lea
sbb
mov
movs
jns
mov
xchg
icebp
(bad)
mov
mov
iret
repz
cmc
add
and
mov
imul
in
push
and
gs
jb
pop
push
ror
hlt
jae
jp
pushf
movq
mov
mov
clc
shl
aad
jns
jmp
stc
sub
nop
popa
das
sub
test
jb
inc
ja
sbb
push
aaa
retf
or
or
xchg
ins
inc
int3
sahf
pop
lods
fsqrt
inc
push
lods
fwait
inc
(bad)
or
dec
icebp
lahf
jmp
pop
xor
cmp
cli
dec
pop
and
hlt
xchg
lock
(bad)
scas
jle
leave
xor
mov
adc
adc
ror
and
loopne
pop
cmp
or
pop
jae
out
xchg
inc
jne
fisub
rsm
jb
dec
mov
jnp
div
iret
push
mov
cmp
aas
cmp
pop
mov
or
std
mov
inc
add
cli
loopne
outs
loopne
pop
push
loopne
mov
test
push
cmps
add
mov
jmp
sti
stos
sbb
lock
mov
inc
sub
cs
pop
sub
cmp
(bad)
jecxz
add
ja
imul
call
enter
inc
fild
dec
xchg
ss
ror
sti
je
imul
inc
mov
imul
or
push
sub
jl
scas
add
retf
xchg
es
stos
stc
aaa
or
lock
es
not
daa
lahf
push
pop
(bad)
push
cwde
push
xor
jno
sbb
mov
sbb
jle
mov
cmp
cmc
retf
mov
sti
xchg
mov
cs
neg
mov
pop
aad
add
cmp
sbb
clc
hlt
push
sub
or
das
(bad)
xchg
retf
(bad)
daa
jge
sub
xchg
mov
xor
(bad)
js
fcomip
xlat
cmp
into
jnp
imul
sub
lahf
out
pop
stc
dec
outs
iret
xor
arpl
add
adc
mov
into
inc
xor
pushf
cdq
jge
pop
in
ss
cwde
mov
push
stc
sahf
imul
mov
add
pop
jg
inc
push
mov
jg
scas
ficomp
imul
test
mov
iret
fisttp
std
int
dec
mov
cmc
aam
push
shl
push
icebp
call
aaa
xor
bnd
add
cmp
push
pop
jb
mov
(bad)
or
add
xchg
push
iret
push
jb
(bad)
popf
add
inc
mov
push
imul
pop
jmp
push
mov
enter
scas
cmp
push
cmps
retf
mov
sbb
inc
xchg
mov
inc
rcl
inc
call
jo
sub
sbb
lahf
xchg
int3
das
and
pushf
mov
stos
xor
outs
mov
mov
fisub
out
cmc
cmp
push
in
stc
enter
sub
mov
sub
pop
or
sbb
mov
out
and
xor
xchg
push
dec
sub
pop
jmp
and
inc
out
pop
fcomp
stc
mov
aaa
adc
mov
sub
(bad)
movs
or
in
push
cmps
pop
lods
add
add
retf
retf
cwde
inc
mov
enter
cmp
mov
jno
push
jne
cmp
pop
pop
mov
xor
sub
push
mov
sub
out
lods
pop
sbb
fidivr
cmps
add
cmp
outs
das
aaa
je
shl
imul
xor
or
adc
sbb
fidivr
pop
cmp
repnz
cdq
mov
push
out
jae
leave
bound
xor
pop
sub
and
lods
mov
ret
pushf
cwde
enter
or
push
mov
mov
jbe
(bad)
(bad)
js
test
pushf
sar
lods
adc
and
mov
fnsave
cld
out
xor
cmp
shl
call
je
xchg
int
or
and
mov
pop
les
out
push
and
mov
or
xchg
into
xor
mov
scas
enter
sub
ins
mov
add
ret
sti
dec
iret
jecxz
add
jns
aas
jbe
and
movs
xor
cmps
daa
sbb
push
and
push
mul
mov
repnz
mov
dec
aam
es
out
xchg
add
sbb
cmp
loop
adc
push
mov
lock
mov
mov
push
(bad)
call
lods
nop
sub
or
sbb
lea
or
(bad)
xor
pop
fstp
sub
jmp
sbb
mov
cmp
or
xchg
ror
mov
push
test
outs
std
lds
repnz
cmp
or
hlt
(bad)
shl
pop
lods
inc
in
in
push
cmp
adc
push
cwde
jmp
retf
mov
mov
clc
ins
rcl
sar
retf
or
xlat
gs
or
pop
add
pop
stc
aam
push
cs
dec
sbb
pop
fild
stc
(bad)
es
jp
lods
dec
jg
or
mov
enter
pop
popa
xchg
sub
cmp
dec
mov
or
aam
xor
inc
add
clc
xchg
adc
pop
icebp
outs
aam
div
pop
dec
js
jae
xchg
dec
loope
psubb
adc
xor
cs
iret
adc
inc
dec
xchg
push
sti
aad
bound
mov
mov
push
test
push
sbb
mov
push
shr
sub
pop
lahf
leave
xchg
push
jge
inc
xchg
xlat
iret
fnstenv
pop
gs
jns
fwait
dec
test
push
lods
jo
rcr
xchg
(bad)
aad
xchg
test
inc
(bad)
pop
scas
scas
and
sar
cmps
addr16
stc
call
mov
adc
fbstp
mov
stos
arpl
mov
cmc
and
xor
mov
add
aas
iret
dec
les
(bad)
jns
mov
dec
es
cmp
int3
mov
hlt
mov
hlt
adc
push
push
push
mov
push
in
shr
hlt
leave
test
not
mov
lea
adc
cmc
shl
xchg
mov
fild
sbb
mov
xchg
ins
fmul
xor
out
test
mov
stos
jecxz
popa
ds
mov
or
aad
(bad)
call
std
sub
sub
shr
ins
cmp
imul
mov
cmovno
cmp
lahf
jge
xchg
(bad)
add
pop
sub
mov
mov
das
dec
imul
push
ficomp
mov
xchg
outs
popa
or
lock
fst
adc
dec
ss
and
inc
lods
call
push
cld
outs
fnsave
frstor
dec
add
inc
pop
push
xchg
add
mov
std
ins
add
nop
dec
or
xor
ficomp
xchg
jne
xchg
adc
jge
mov
out
aaa
jmp
jle
sub
cmp
(bad)
sar
aad
sahf
jl
jne
(bad)
fs
ins
cmc
sti
adc
out
call
push
inc
push
cld
lock
inc
(bad)
mov
jl
leave
retf
and
retf
movs
cs
scas
and
fsubp
stc
cmp
test
arpl
push
repz
mov
out
sbb
cwde
cmp
fs
cmp
stos
xchg
ret
dec
mov
xchg
xchg
adc
xchg
inc
inc
adc
and
xlat
lock
in
jnp
pop
pop
dec
push
adc
and
fsub
add
adc
cmp
mov
in
shr
push
lock
popf
pop
lods
add
adc
test
xor
nop
jle
leave
out
add
add
iret
pop
xchg
push
dec
jmp
mov
(bad)
push
add
push
fld
into
push
adc
pop
ds
loop
not
xor
xchg
cmc
sub
hlt
jo
push
sbb
inc
icebp
and
xchg
out
sbb
mov
test
pop
in
scas
in
ret
nop
imul
sbb
inc
jne
pop
cwde
cmps
pusha
and
mov
push
mov
aaa
int3
nop
leave
mov
stos
xor
sbb
loopne
xor
test
test
ja
jl
popa
dec
ins
cmovne
pop
or
call
adc
cs
dec
imul
xchg
cmp
inc
jle
cmp
mov
jnp
sub
and
pop
js
adc
inc
dec
mov
gs
mov
enter
aas
mov
pushf
js
adc
cli
sub
fisttp
inc
fcom
ret
xchg
mov
or
xchg
mov
dec
mov
test
xchg
add
ficom
out
mov
jnp
mov
out
xor
aas
mov
push
int3
imul
cmp
push
jp
lock
scas
fisubr
sbb
mov
inc
lahf
jp
stos
pop
xchg
fdivr
xchg
inc
push
add
mov
push
inc
xchg
imul
xor
icebp
cmps
push
daa
mov
xchg
mov
scas
je
push
dec
inc
(bad)
test
pop
push
cmp
fmul
cs
mov
and
call
(bad)
addr16
push
fld
jbe
into
scas
aad
sub
cmc
fwait
inc
push
repz
pop
nop
fdiv
jp
jo
sub
dec
scas
adc
push
into
push
inc
mov
fstp
out
or
ss
dec
fcom
mov
push
les
bound
push
out
cwde
movs
add
cmc
xchg
out
gs
and
inc
and
mov
mov
cmp
pop
jmp
dec
scas
sbb
or
inc
jbe
and
(bad)
(bad)
push
test
(bad)
push
sar
xchg
cdq
cmps
inc
aam
hlt
jo
push
push
stos
out
mov
rcl
out
jg
push
jg
scas
aad
xor
dec
dec
mov
mov
sbb
jns
add
lds
xchg
cmp
fldz
or
push
xchg
dec
cdq
inc
pop
mov
mov
ins
jns
ror
cmovle
mov
or
jno
ret
gs
mov
sbb
iret
jbe
rol
xchg
ror
ret
or
dec
push
inc
test
jo
(bad)
jge
mov
mov
icebp
fwait
(bad)
hlt
or
sbb
das
add
call
out
sub
fld
adc
jno
adc
adc
in
xchg
push
popa
mov
add
in
xor
jbe
(bad)
mov
stc
cmp
sbb
mov
push
fidiv
jle
pop
sbb
push
pop
movs
and
jecxz
mov
cld
inc
sbb
push
mov
and
xchg
test
aad
sub
pushf
pop
popf
bound
dec
mov
pop
xchg
push
jge
dec
pop
leave
mov
dec
outs
cmp
add
xchg
enter
mov
pop
inc
retf
jp
sub
sub
push
out
mov
push
push
add
call
mov
sbb
out
cmps
inc
in
sub
mov
lock
fwait
cmp
jmp
loop
popa
or
fcom
sbb
sub
xchg
outs
cmps
lahf
retf
in
test
mov
popf
movs
mov
scas
sub
stos
icebp
mov
xchg
ins
(bad)
jmp
outs
loopne
in
adc
out
popa
mov
pop
or
aam
xor
scas
jbe
sub
xor
and
xor
daa
mov
cmp
je
jo
push
ins
jb
xchg
pop
imul
or
jns
ins
(bad)
pop
stos
not
in
ins
xor
or
mov
inc
popf
loope
adc
lods
sbb
(bad)
jecxz
xor
sub
or
in
scas
jnp
mov
test
arpl
push
add
or
and
out
push
xor
das
fwait
ins
int
mov
sar
jle
movs
(bad)
or
daa
xor
sub
pop
and
pop
or
movs
ins
mov
or
cmp
sub
and
leave
push
ss
aad
inc
mov
push
mov
jge
scas
pop
cld
jle
loopne
or
in
xchg
call
xchg
adc
call
pop
xchg
cmp
sub
mov
repnz
jmp
shl
xor
cmp
cdq
or
test
fst
cmp
cld
and
cmp
fistp
xlat
sbb
xchg
add
iret
mov
pop
ins
lahf
mov
pop
jo
ror
js
jl
adc
and
mov
xchg
pop
out
or
cdq
pop
push
adc
mov
or
cs
test
adc
lock
sub
add
dec
lahf
jnp
loopne
(bad)
bound
push
pop
inc
add
lods
and
in
rol
inc
aam
push
out
mov
mov
pop
fnsave
cmc
xchg
test
fbstp
jmp
dec
lds
inc
cmp
push
cdq
inc
js
push
inc
movs
loope
xor
in
pusha
mov
iret
rol
push
mov
add
aam
sbb
into
das
int3
adc
fs
dec
in
repz
jmp
xchg
shl
or
repz
das
stc
xchg
jl
mov
add
in
fsub
in
jp
xchg
inc
push
mov
push
pop
push
jg
and
out
add
or
cmp
inc
dec
jp
inc
mul
call
jg
popa
mov
or
pop
cdq
lahf
mov
mov
mov
push
jmp
pop
jle
xor
cmps
outs
jg
test
push
jmp
and
jp
adc
sub
mov
push
inc
or
loop
lahf
clc
inc
mov
scas
enter
xchg
push
xchg
and
jge
xchg
mov
sbb
fidivr
stos
xor
nop
stc
push
rol
xchg
jle
out
jae
sbb
cs
(bad)
in
push
stos
push
xchg
cmp
mov
in
mov
pusha
es
dec
js
cmp
call
jo
or
rol
mov
aad
movs
jbe
ret
push
mov
dec
shl
jmp
clc
push
aaa
and
mov
retf
sub
sub
adc
fwait
aas
stc
sbb
stos
pop
xlat
pop
pop
mov
push
jno
inc
cmp
daa
jns
add
push
xchg
xor
add
mov
jecxz
bound
div
mov
shl
dec
in
cmp
repnz
test
xchg
xor
fdivrp
loop
mov
fwait
out
cmp
jne
ja
dec
pop
jne
xor
jmp
stos
xor
dec
fwait
sbb
call
push
mov
lds
sahf
mov
sub
dec
int
push
pop
das
inc
inc
add
ja
sti
adc
popa
jnp
jnp
popa
out
in
or
lahf
or
dec
xchg
cmp
or
cs
out
out
mov
cmp
unpckhps
adc
lods
outs
sbb
dec
les
jnp
push
jmp
test
inc
test
mov
pop
sub
sbb
push
pop
and
inc
jnp
mov
and
push
ucomiss
mov
rcr
mov
jge
out
sub
mov
aas
pop
(bad)
sbb
push
inc
and
dec
dec
push
add
rcr
inc
aaa
adc
outs
into
icebp
sti
cdq
imul
push
mov
test
leave
aas
cli
popa
pop
in
hlt
cmp
or
cwde
push
rcr
pop
xchg
push
pop
mov
mov
pop
movs
daa
test
mov
addr16
aaa
cmp
cmp
fisub
xchg
rol
pop
push
icebp
ja
push
mov
call
dec
in
adc
aas
cmp
or
push
int3
outs
lahf
(bad)
add
xchg
dec
inc
in
repz
xor
jmp
add
pop
adc
jnp
test
cmc
call
dec
cmp
pop
lahf
outs
(bad)
iret
fiadd
inc
pop
fisub
and
push
xor
mov
mov
mov
cmp
stos
addr16
fld
cmc
outs
mov
ss
in
jb
mov
or
sub
into
mov
dec
mov
call
and
js
mov
or
and
add
mov
mov
iret
fmul
inc
jle
xchg
inc
test
sub
les
ret
xchg
sub
jnp
ror
mov
xor
cmc
sub
or
sub
mov
mov
inc
push
das
adc
or
scas
or
push
xchg
xor
loop
sub
mov
out
jnp
or
(bad)
push
int
mov
add
adc
clc
fld
add
imul
loopne
sti
sbb
std
repnz
ret
retf
jne
or
xchg
xor
push
scas
stos
fisttp
ds
jecxz
adc
fwait
add
push
mov
adc
mov
jns
sub
call
inc
adc
cli
test
adc
jbe
xor
mov
mov
cmp
jge
es
mov
ror
pop
sub
std
ds
pop
sub
test
addr16
pusha
jne
push
lds
pop
and
repnz
push
in
ret
pop
aam
mov
xlat
enter
xchg
push
mov
ss
xor
aas
cmp
and
adc
addr16
jecxz
ror
(bad)
in
cwde
stos
pop
ss
push
add
adc
ror
std
cmps
ficom
sub
test
sbb
xlat
dec
and
mov
or
sbb
aas
cmp
xchg
pop
adc
adc
inc
jg
dec
into
cmp
dec
cdq
mov
hlt
push
test
inc
sbb
rcr
xor
jnp
std
mov
fld
ss
mov
test
lea
aaa
xlat
call
xchg
scas
in
pop
popa
stos
mov
mov
and
and
scas
loop
inc
int
xchg
add
inc
cs
loopne
add
push
call
test
out
mov
and
or
inc
lea
lahf
jl
jb
jmp
mov
std
fs
dec
mov
loop
out
int
retf
sub
push
push
les
and
jnp
pop
jg
stc
pop
les
mov
cmp
mov
mov
out
ds
outs
sbb
mov
push
jecxz
pop
sbb
imul
lods
adc
jae
mov
mov
bound
mov
sbb
and
div
loope
(bad)
hlt
cli
loopne
mov
pop
jmp
jne
xchg
(bad)
or
in
ss
pushf
fst
(bad)
sub
sbb
ins
mov
icebp
in
cdq
scas
jbe
cmp
add
push
mov
dec
xor
aaa
scas
jns
pop
xlat
adc
and
mov
hlt
xor
fmul
xor
jnp
pop
cld
call
scas
jge
xor
adc
into
jl
sbb
retf
cmp
mov
xchg
mov
pop
pop
push
sub
mov
leave
ss
out
xor
ds
dec
jns
std
mov
int3
les
mov
aad
push
movs
add
inc
dec
mov
out
jle
inc
mov
adc
mov
stos
in
dec
lahf
jbe
mov
jle
out
cmp
or
dec
rcr
jne
add
clc
sub
mov
mov
outs
mov
mov
in
or
inc
push
inc
sbb
and
adc
stc
push
outs
sbb
adc
push
xchg
cmp
test
add
ret
ds
int
mov
icebp
and
mov
inc
fs
or
jg
push
stos
scas
mov
jae
cmp
shl
jae
or
repz
in
movs
pop
movs
xor
inc
rcr
cdq
xor
rcl
or
je
dec
and
inc
jle
sub
iret
sar
fucom
pop
outs
jge
pop
jge
xadd
mov
and
push
jecxz
inc
push
fstp
out
sbb
sub
jecxz
ret
xor
gs
jmp
jno
mov
push
sub
cmp
push
jae
inc
xor
xor
popf
das
pop
loop
mov
daa
idiv
adc
sti
iret
call
enter
and
mov
gs
mov
mov
jne
sub
fstp
inc
pcmpeqw
sub
push
mov
mov
pop
mov
mul
repz
mov
lods
mov
xchg
mov
nop
cli
hlt
movs
mov
lock
sub
mov
retf
les
push
int
jb
push
sbb
push
inc
jmp
or
dec
xchg
adc
call
cmp
sub
jmp
daa
jb
arpl
ficom
ins
mov
into
jle
inc
xchg
add
test
push
cdq
pusha
(bad)
sub
add
loope
jnp
mov
mov
call
stos
inc
std
pop
(bad)
xor
adc
adc
fwait
and
xor
or
mov
dec
dec
(bad)
adc
xor
call
mov
pop
inc
pop
pop
mov
in
dec
stc
repnz
xchg
(bad)
sub
movs
aam
out
add
and
jmp
cmp
gs
call
test
or
stos
sbb
adc
repz
cmp
sbb
das
and
mov
cwde
jmp
and
pop
out
mov
mov
jge
call
sbb
popa
xchg
test
xchg
(bad)
mov
mov
xor
sub
pusha
mov
retf
inc
fadd
inc
lea
fidivr
sbb
sahf
cmp
mov
inc
mov
mov
test
pop
or
add
sub
pop
cmps
and
jno
iret
xchg
cli
adc
lods
dec
stc
outs
aam
movs
xor
(bad)
jb
inc
(bad)
outs
push
nop
mov
inc
add
fcom
pop
loopne
enter
sub
scas
dec
and
bound
pop
push
ins
outs
aam
pop
imul
adc
lock
repz
dec
xor
dec
pop
mov
imul
or
jnp
push
inc
repnz
outs
inc
cmp
xchg
outs
stos
je
dec
in
es
scas
add
mov
stc
mov
cmp
mov
arpl
push
cwde
(bad)
push
xchg
sub
les
sahf
in
xchg
or
push
loopne
cmp
push
adc
dec
mov
jns
int3
xchg
inc
adc
inc
repz
jnp
fimul
xchg
xchg
mov
push
fisubr
xchg
shl
xchg
scas
and
cli
das
mov
lahf
xor
pop
dec
outs
push
test
ds
or
leave
cmps
cmp
pop
jmp
jmp
repnz
test
dec
xchg
stos
ficom
sti
(bad)
and
dec
mov
mov
jmp
pop
loopne
test
sub
xor
mov
dec
mov
enter
sbb
adc
mov
bound
(bad)
sti
push
sbb
fist
and
shl
(bad)
shr
enter
ds
mov
cmp
call
jnp
jmp
jle
mov
jle
cli
push
pop
push
push
mov
jmp
mov
call
add
hlt
pop
loop
adc
jne
mov
lds
stos
push
lds
inc
xchg
shl
pop
mov
xchg
scas
jb
lds
push
shl
mov
cmp
iret
push
cld
and
or
mov
popf
retf
popf
pushf
cmp
sahf
outs
lahf
popf
ss
ret
(bad)
mov
fadd
adc
sub
mov
into
stos
pop
jbe
cmps
mov
popa
inc
sbb
fcmovbe
ret
cmp
in
daa
shr
popa
mov
mov
or
(bad)
addr16
(bad)
xchg
or
sub
push
adc
push
test
or
dec
shl
imul
mov
sbb
je
xor
and
ja
pop
and
sub
mov
imul
jp
sub
adc
pop
jbe
xchg
inc
neg
ds
push
loope
daa
and
aas
cmp
and
xchg
pop
jmp
and
jp
push
inc
jmp
inc
jmp
push
fbld
and
push
iret
push
aam
test
mov
push
pop
push
fld
pusha
pop
cmp
mov
sahf
xchg
cmps
fisttp
mov
inc
and
(bad)
data16
(bad)
and
sub
pop
in
mov
push
ret
add
test
ds
dec
loope
add
ror
call
cli
push
sahf
mov
inc
dec
shl
mov
xor
lds
lahf
mov
xchg
in
jo
mov
mov
test
xor
sub
or
in
popa
sbb
retf
stos
pop
adc
jnp
xchg
fs
ds
lds
cli
fstp
jmp
test
xchg
mov
pop
cdq
xchg
jns
repz
inc
movs
(bad)
adc
nop
cmp
retf
sar
ret
outs
fwait
sbb
xchg
popf
inc
pop
inc
inc
lahf
cmp
test
adc
cdq
mov
call
xlat
sub
retf
pop
or
in
addr16
sahf
pop
pop
push
ret
inc
inc
mov
mov
cmc
sub
jmp
cmps
and
mov
xor
mov
cmp
leave
push
hlt
stos
aas
and
nop
jl
pop
pop
(bad)
and
or
dec
call
add
sbb
aaa
mov
ftst
clc
pop
lock
ja
pop
(bad)
sub
cmc
sub
fnstsw
inc
mov
imul
pop
jno
out
pop
dec
lods
ror
mov
ds
popf
mov
xor
or
mov
in
mov
test
dec
in
push
imul
sbb
std
adc
cld
or
ficom
ficomp
jge
xor
js
mul
cwde
loopne
mov
inc
repnz
mov
xchg
retf
cmp
in
cwde
mov
imul
ss
aas
push
outs
(bad)
stc
ins
adc
inc
cmc
scas
ds
mov
(bad)
inc
sbb
push
push
jge
cmp
push
or
dec
dec
jnp
and
fwait
add
dec
cmp
outs
jmp
mov
adc
ds
loope
out
add
jg
cmp
sti
popa
mov
xchg
lea
cdq
fwait
xor
lods
sbb
into
scas
cmp
popf
stos
mov
jae
mov
aad
jne
icebp
imul
push
sti
inc
lods
lahf
xlat
mov
in
xchg
adc
test
adc
add
mov
xor
inc
hlt
and
mov
repz
xor
pop
icebp
jae
fistp
das
(bad)
xchg
std
mov
mov
leave
imul
nop
daa
adc
stos
sahf
jmp
dec
(bad)
cmc
sbb
jmp
push
mov
inc
jmp
mul
lods
out
sahf
sbb
ds
inc
mov
out
sbb
clc
xor
dec
mov
div
inc
lods
dec
xor
(bad)
repnz
push
(bad)
xchg
or
bound
sti
test
push
cmp
inc
sbb
jmp
dec
xchg
sbb
jge
mov
and
(bad)
stc
inc
push
test
sbb
ss
shl
pop
mov
(bad)
in
jge
test
jb
mov
xor
(bad)
add
call
mov
fmul
call
sbb
rcl
sbb
xchg
xchg
ds
sbb
cdq
jae
(bad)
bound
xor
sub
mov
and
scas
push
push
ds
sahf
test
repnz
mov
loope
retf
mov
(bad)
out
push
pop
mov
div
adc
aaa
test
sub
adc
stc
enter
sbb
aas
inc
jae
cmps
push
rcl
retf
adc
cmc
xor
in
ret
scas
mov
fbstp
in
sub
nop
or
repnz
and
icebp
nop
pop
call
mov
adc
dec
rol
inc
jle
mov
xlat
shl
int3
pop
jns
iret
xchg
cli
dec
jae
test
cmps
cld
mov
cmp
test
sub
mov
imul
jbe
nop
mov
repnz
sti
mov
xor
out
lea
popf
retf
pop
sub
pop
aaa
shl
mov
cli
int
push
or
or
lods
xor
inc
cli
int3
push
rcr
fwait
add
mov
ret
jo
sub
add
mov
xor
out
mov
and
lds
or
aad
ja
mov
ins
icebp
mov
sub
out
inc
cdq
cs
lahf
stc
shl
inc
jnp
pop
push
adc
dec
lods
mov
pop
mov
xchg
cli
pop
ja
lea
js
add
xor
cmps
jge
fwait
ds
sti
aad
xchg
std
jge
lds
dec
ins
and
(bad)
in
cmp
jae
pop
sub
jl
cmp
arpl
imul
pusha
mov
ins
test
pop
outs
aas
fdivr
ret
and
mov
pushf
ror
cmps
push
idiv
xor
mov
dec
push
scas
mov
xor
dec
mov
rcr
sbb
push
dec
in
imul
cmps
push
lahf
fcom
inc
xor
push
xor
and
jne
nop
repnz
shl
push
jno
xchg
(bad)
xchg
outs
or
push
mov
dec
out
push
pop
stos
xchg
fisttp
mov
mov
mov
mov
rcl
nop
js
aas
js
xor
and
push
jnp
fisttp
dec
adc
pop
pop
dec
mov
setns
inc
repz
cld
fnstsw
lea
xor
in
adc
rcl
dec
xlat
mov
push
out
mov
enter
arpl
jmp
cmp
pusha
add
push
mov
sbb
sbb
or
cwde
pop
or
lds
ret
sub
das
aas
jno
nop
nop
les
jnp
sub
xor
and
int3
xchg
test
xlat
imul
or
stc
dec
sub
or
shl
jg
fstp
jne
ret
sbb
test
xchg
cmp
out
add
addr16
and
pop
(bad)
(bad)
adc
out
pop
or
push
adc
inc
jge
inc
dec
cwde
mov
mov
leave
in
dec
in
mov
sbb
xor
mov
fisubr
lock
inc
xor
popa
shl
xchg
es
jo
out
jg
xchg
pop
scas
dec
mov
(bad)
adc
std
into
iret
mov
not
jg
scas
xlat
cmps
mov
repnz
pop
std
xlat
add
cwde
xchg
pop
xor
scas
lahf
test
or
xor
aaa
pop
and
and
mov
inc
mov
in
mov
xchg
fidiv
gs
(bad)
mov
xor
dec
(bad)
clc
xor
stos
sbb
pop
out
cs
cld
xchg
sub
push
ja
repz
(bad)
cmp
movs
mov
mov
mov
hlt
sar
jb
dec
adc
jno
out
xchg
sti
sbb
jne
test
jbe
jne
xor
call
pslld
mov
cmp
dec
push
dec
xchg
mov
and
popa
(bad)
(bad)
dec
jbe
xor
fidiv
dec
(bad)
fstp
push
and
and
add
(bad)
inc
mov
mov
cdq
ret
jae
jns
mov
aam
loope
dec
sbb
xor
add
mov
jno
outs
int
xlat
(bad)
mov
inc
xlat
test
not
std
or
mov
aad
sub
jbe
jno
out
pop
neg
rcr
fisttp
das
pusha
scas
int3
and
push
xor
and
fstp
cli
push
imul
movs
mov
mov
and
int3
out
dec
clc
aaa
js
and
sub
mov
imul
dec
jns
mov
mov
inc
rcl
clc
jo
push
push
jo
mov
or
or
pop
lods
mov
test
aaa
push
scas
or
cmp
or
or
movs
or
or
cdq
aaa
push
xchg
stc
adc
movs
xor
retf
jno
call
push
test
dec
bound
out
daa
clc
and
sbb
stos
js
push
pop
cld
jmp
movs
push
xchg
lods
or
mov
jo
or
rcr
or
dec
mov
pushf
retf
mov
add
mov
xchg
pop
pop
loope
adc
push
mov
add
not
in
mov
sar
push
inc
jecxz
mov
ins
sbb
adc
imul
fs
and
xor
cli
pop
jae
mov
cmc
sbb
or
jp
cmp
push
dec
out
fadd
xchg
cli
test
mov
dec
jne
fdivr
fild
adc
shr
cmc
or
stos
shl
and
adc
in
idiv
mov
adc
mov
aas
outs
cmp
xchg
add
xchg
dec
(bad)
ret
(bad)
stc
pop
mov
add
test
sti
sub
xchg
ror
jb
or
mov
in
sbb
sbb
mov
cli
and
xchg
jae
jg
sbb
mov
lahf
and
xchg
pop
aam
loopne
sub
pop
ror
jno
cmp
loope
(bad)
int3
cs
popf
cmp
adc
xchg
jge
je
push
ror
shr
nop
mov
fnstsw
push
nop
fmul
cmc
dec
or
loopne
outs
cmp
pop
int3
cmps
sbb
dec
mov
imul
xchg
fistp
outs
shr
sbb
ins
popf
push
dec
ret
or
stos
sbb
dec
push
(bad)
cdq
adc
sbb
ins
dec
pop
les
leave
inc
sub
jmp
add
(bad)
in
mov
daa
xchg
mov
(bad)
jge
or
add
add
mov
fistp
outs
push
dec
mov
jg
mov
sub
mov
xor
inc
mov
xchg
out
sbb
in
cdq
repnz
pop
das
(bad)
xor
xor
sbb
aas
xchg
xchg
and
xor
mov
ret
mov
ss
fnstenv
mov
aam
mov
jmp
cmp
mov
adc
dec
pusha
pop
ja
sub
enter
les
adc
sar
sbb
inc
nop
mov
loop
in
xchg
jp
cmp
addr16
je
jle
dec
or
iret
cwde
inc
movs
das
std
loop
sub
sub
mov
ret
rol
inc
dec
test
fild
adc
jmp
mov
jae
js
loop
mov
jg
xchg
add
xchg
ror
pop
mov
xchg
test
(bad)
icebp
mov
dec
mov
in
call
sti
call
inc
and
lods
dec
cmp
push
loopne
cmp
popf
inc
push
mov
xchg
ins
jnp
xchg
pop
shl
add
jmp
jecxz
push
cli
psllw
aam
hlt
imul
inc
(bad)
shl
push
jmp
adc
mov
cmp
scas
shl
pop
jns
ds
cmp
sub
call
loopne
sbb
clc
jg
ins
push
jl
lahf
dec
je
shl
jb
lea
inc
call
js
hlt
popaw
pushf
and
push
in
jmp
mov
pop
cmp
ins
mov
data16
outs
xchg
stc
pop
xor
xor
lods
xchg
push
mov
xchg
cmp
sbb
lods
cwde
mov
cmc
cli
and
movs
sbb
inc
scas
or
push
xor
shr
or
lea
dec
stos
lods
adc
mov
imul
mov
add
in
or
or
mov
push
and
mov
outs
cmps
mov
mov
xlat
jl
mov
(bad)
jge
mov
mov
test
not
dec
sahf
jb
cmp
jo
jp
pop
aad
fcom
inc
mov
push
movs
xor
popa
je
neg
icebp
push
cs
dec
loope
cmps
shr
jmp
pop
push
xchg
jae
sahf
cwde
in
xchg
aas
sub
pop
sub
les
xor
sar
mov
es
push
out
xor
cdq
xchg
shl
push
xchg
cmp
daa
xor
jb
mov
imul
adc
rol
sbb
(bad)
sbb
adc
cmps
rol
mov
data16
jnp
mov
rcr
call
in
dec
das
test
add
and
not
mov
sub
jp
cmp
inc
or
cdq
mov
dec
cdq
sub
sbb
inc
mov
out
fisttp
pop
enter
sbb
or
xchg
jl
retf
loop
add
adc
mov
mov
and
jo
inc
mov
pop
jmp
scas
xchg
iret
jle
inc
add
fild
and
mov
inc
mov
test
je
nop
sti
mov
or
cld
jmp
retf
in
scas
xor
ret
(bad)
or
imul
mov
ret
stos
mov
sbb
cmp
xor
mov
loope
sbb
add
in
aam
enter
enter
je
loopne
lea
imul
pop
imul
imul
je
fs
aaa
cwde
arpl
inc
mov
sahf
not
sbb
push
pusha
and
stc
jmp
push
jg
jnp
jmp
js
pop
adc
xor
popfw
sub
mov
xor
movs
xor
loop
loope
cmp
xchg
inc
mov
enter
inc
dec
fcmovne
es
sar
pusha
aas
mov
outs
or
fstp
mov
pushf
popaw
fnstsw
rcl
jge
jp
loopne
stc
popf
jae
dec
mov
sbb
cdq
and
in
mov
mov
add
fcmove
in
sti
jnp
xchg
xlat
jp
adc
arpl
jb
and
jle
test
fst
jp
pop
stos
pop
rol
div
sbb
shr
fdivp
sub
shl
scas
or
lods
dec
mov
daa
icebp
mov
popf
xor
cmp
aad
fistp
out
scas
cs
(bad)
fcom
xchg
mov
(bad)
outs
inc
xor
jbe
add
cmp
mov
xlat
push
push
add
mov
es
and
bound
xor
mov
dec
inc
rcr
cmps
xchg
mov
push
push
ret
sub
mov
shl
mov
outs
inc
push
inc
ins
call
sub
test
shr
mov
lods
push
shr
dec
mov
(bad)
shl
stos
fisttp
dec
clc
dec
dec
not
mov
test
adc
(bad)
cs
nop
inc
adc
rcl
(bad)
fstp
jg
xchg
cmps
lock
pop
movs
mov
int3
(bad)
enter
cmp
(bad)
addr16
idiv
call
shl
pop
or
sar
repz
popa
mov
std
dec
mov
cwde
out
mov
stos
sub
and
push
iret
inc
xor
xor
(bad)
pusha
call
jmp
in
outs
movs
loope
xchg
test
leave
sub
push
mov
or
imul
in
xchg
sub
dec
stc
mov
mov
pop
and
jl
inc
jmp
dec
or
call
or
call
aad
outs
pop
xor
add
jae
pop
mov
mov
into
retf
push
les
lahf
add
test
mov
dec
and
mov
sbb
cmps
mov
test
pop
inc
add
lea
sbb
mov
std
xor
sub
cli
aam
test
nop
call
push
imul
adc
imul
xchg
cmps
push
das
dec
pop
(bad)
retf
fld
call
jno
push
inc
sub
mov
lahf
inc
and
xor
mov
dec
inc
scas
push
js
ret
clc
sar
hlt
pusha
mov
in
dec
lods
push
push
inc
outs
push
jmp
jp
stos
push
dec
push
mov
sub
in
push
xchg
and
mul
and
movs
hlt
mov
cmp
mov
(bad)
fld
mov
add
adc
iret
mov
imul
adc
and
mov
xor
cmp
jns
adc
add
jmp
sub
xor
dec
adc
scas
xchg
loope
cmp
int3
push
cmps
fisttp
adc
dec
mov
push
ins
pop
xchg
loop
test
bound
dec
jecxz
cmp
repnz
iret
sti
sbb
ins
in
nop
add
or
nop
adc
cmp
hlt
jae
push
inc
mov
xchg
outs
xchg
and
cmp
dec
inc
retf
call
(bad)
dec
out
inc
dec
fcmovnbe
xor
ror
jnp
pop
adc
adc
movs
jge
and
popf
mov
push
xor
imul
jae
pop
out
xlat
fdivr
pop
sbb
push
adc
dec
pop
in
cwde
sub
mov
xchg
ret
or
in
xchg
jl
mov
sbb
pop
sbb
repz
stos
ja
(bad)
cld
adc
movs
loop
in
aad
sbb
cmp
adc
imul
jmp
xlat
inc
(bad)
out
mov
rol
pop
mov
and
sar
push
sub
repnz
stos
mov
not
sub
push
push
int
stos
push
mov
add
add
push
(bad)
jae
nop
xchg
dec
push
dec
jne
mov
popa
add
xor
sub
(bad)
or
jecxz
lds
jmp
leave
and
add
cmp
(bad)
and
enter
pop
pushf
push
aam
and
rcl
ja
xor
addr16
hlt
ret
sbb
mov
mov
ret
pop
(bad)
stc
pop
push
pop
and
stc
mov
enter
mov
cmp
es
call
jecxz
pop
in
leave
jns
xor
jecxz
inc
jp
mov
cmc
aam
daa
mov
sub
dec
mov
push
(bad)
inc
sar
fidiv
sub
cmps
add
mov
pusha
out
adc
or
pop
mov
sbb
mov
loop
popf
mov
adc
daa
das
inc
scas
sub
adc
xchg
pop
inc
into
sub
and
rcr
jno
xor
jp
lods
xor
mov
cmp
gs
xlat
(bad)
fxam
shr
rcl
in
outs
jp
outs
stc
(bad)
int3
adc
mov
ror
mov
jmp
nop
mov
outs
repz
dec
es
mov
fnstcw
icebp
shl
adc
ficomp
sbb
and
pop
dec
add
adc
push
inc
sbb
mov
mov
lods
mov
ret
mov
sbb
(bad)
scas
ret
push
mov
lods
bound
retf
ds
cmps
sub
pusha
push
xchg
or
dec
in
push
jmp
and
outs
cmp
ss
mov
and
push
repz
mov
or
in
or
xchg
lock
pop
mov
inc
cdq
mov
hlt
push
xor
in
shr
sbb
inc
xchg
dec
jns
xchg
outs
repz
or
or
pminsw
mov
mov
and
sub
add
pslld
fisub
fistp
scas
call
pop
lea
add
dec
add
mov
cdq
loope
adc
outs
loopne
sbb
adc
ins
sbb
push
sbb
addr16
dec
ins
or
mov
adc
cmp
jg
mov
dec
daa
jo
xor
stc
xor
mov
nop
mov
cmp
mov
pop
std
xchg
mov
popa
mov
jb
sub
test
inc
pop
push
mov
push
mov
out
out
pop
mov
add
(bad)
adc
mov
push
cld
and
lds
retf
cwde
imul
jnp
mov
int3
clc
outs
push
outs
nop
repz
(bad)
js
push
daa
sub
cmp
mov
xchg
mov
sub
inc
call
or
push
or
adc
fsubr
jae
push
or
sbb
cmp
stos
mov
popa
lods
mov
mov
dec
xor
xor
(bad)
stc
loope
push
add
pop
push
xor
and
fs
xor
or
ror
mov
and
sti
and
(bad)
movs
hlt
mov
adc
mov
or
jne
hlt
cmc
ror
sbb
js
jmp
imul
xchg
cmps
in
je
mov
mov
xor
add
scas
ins
sar
dec
push
iret
mov
mov
pop
push
push
ins
scas
aam
rcl
inc
and
fs
mul
mov
pusha
sar
or
pop
fdivr
outs
test
push
jge
imul
mov
pop
sub
stc
fs
test
ss
(bad)
cmps
scas
xor
mov
and
jmp
cmp
dec
int3
adc
cmp
xlat
mov
rol
pop
mov
sbb
mov
cwde
add
mov
clc
or
out
lahf
mov
push
ficomp
leave
neg
in
jg
ja
cmp
jmp
dec
push
push
ja
jg
imul
and
pop
dec
xchg
add
mov
test
mov
add
jbe
or
sbb
out
xor
gs
retf
leave
shl
scas
ss
sub
jl
cs
jo
pop
sti
mov
jae
and
popf
ds
adc
les
add
dec
loop
push
add
out
add
adc
mov
mov
jmp
mov
sbb
pop
pop
movs
push
push
icebp
dec
clc
ret
inc
xor
mov
mov
fild
aas
hlt
in
add
popa
jmp
cwde
add
stos
into
retf
xor
push
push
dec
mov
xchg
xor
sub
mov
mov
xchg
int3
out
jge
mov
pop
aaa
inc
or
xchg
(bad)
shl
xchg
rcr
imul
add
inc
inc
(bad)
fadd
(bad)
inc
mov
adc
fs
mov
dec
das
jo
daa
mov
sub
sub
lods
fnstsw
push
aaa
lods
inc
clc
and
scas
mov
fst
mov
dec
push
rcr
sub
imul
scas
jl
int
sbb
shl
lods
dec
test
fistp
test
ret
int
jmp
dec
enter
cmp
add
or
pop
dec
stos
inc
sbb
dec
out
not
push
cmps
mov
ins
inc
mov
mov
mov
xchg
fs
test
lea
jb
leave
fs
add
cmp
mov
stos
fwait
sub
push
ret
aas
aas
int
mov
les
jl
imul
mov
fcmove
mov
mov
xchg
add
dec
sar
lahf
daa
jno
loop
pop
ins
das
cmp
pushf
jl
test
mov
push
rcr
dec
cld
mov
xor
mov
xchg
inc
popa
xchg
(bad)
xchg
scas
mov
adc
pop
cmps
imul
or
xchg
mov
stc
add
cld
push
xchg
bound
daa
in
movs
push
sbb
gs
test
loope
mov
lock
div
dec
js
lds
sbb
(bad)
push
in
test
jb
jb
data16
std
mov
sbb
int
xchg
push
fidivr
popa
ss
shl
lods
retf
inc
cmps
mov
rol
rcr
mov
push
scas
icebp
das
xor
test
das
lds
xchg
push
adc
pop
fcomp
push
add
or
xor
inc
add
loope
xchg
mov
inc
jmp
aam
push
dec
retf
cdq
enter
in
aas
dec
in
push
mov
jecxz
cmp
jge
push
(bad)
cmp
cdq
add
sbb
dec
push
push
push
pop
test
sub
sbb
call
mov
pop
pop
mov
fisubr
js
(bad)
xor
mov
cld
aas
jp
push
pushf
dec
aas
and
fnsave
push
pop
mov
fidivr
mov
xor
(bad)
adc
jge
mov
shr
adc
xchg
mov
cmp
test
cmp
pushf
fisub
cmps
call
ins
mov
out
xlat
jmp
ret
pop
stos
popf
mov
data16
mov
cmc
lods
(bad)
sub
xchg
jae
xlat
and
pop
adc
mov
pushf
push
jl
cmps
dec
jne
test
or
(bad)
xor
mov
jns
cmp
hlt
mov
push
cmp
pop
bound
jne
test
push
les
in
cmp
sbb
out
adc
xchg
arpl
scas
lds
xor
mov
xchg
push
inc
pop
xchg
jge
and
and
cmps
inc
jnp
mov
mov
mov
ror
mov
fdecstp
dec
mov
jo
lods
jle
ror
or
mov
aas
sar
dec
lock
push
cmp
jecxz
in
sub
outs
pop
stos
mov
xchg
add
ds
pop
aas
in
jb
push
out
adc
adc
and
push
mov
mov
iret
mov
inc
clc
pop
in
icebp
sahf
fs
xor
imul
shr
jno
push
int
lahf
add
pop
in
xor
mov
(bad)
dec
jecxz
int
fcomip
push
(bad)
loopne
jnp
not
or
pop
test
xchg
pop
rcl
cmc
mov
ins
pop
xor
inc
shr
pop
mov
jo
das
mov
mov
cmps
push
jbe
pop
aam
ins
jmp
enter
mov
inc
xor
jmp
or
dec
mov
push
xor
jge
ret
aaa
push
pop
movs
push
inc
xor
xlat
je
dec
or
dec
xchg
xor
mov
jnp
aas
(bad)
jns
add
and
cli
rcr
sub
xor
movs
in
cli
sahf
inc
(bad)
ror
adc
iret
mov
and
push
pop
mov
add
xchg
pusha
into
iret
fsubrp
dec
call
dec
cmp
xor
or
lods
jbe
pop
sar
mov
call
push
lea
pop
dec
inc
inc
cdq
add
hlt
pop
test
or
add
mov
fdivr
cld
imul
movs
movs
mov
adc
add
test
aaa
arpl
mov
ja
cmc
aam
popf
out
or
add
add
fstp
aam
shr
addr16
xlat
and
dec
repz
or
cmp
jle
cwde
(bad)
mov
xlat
xor
test
mov
dec
fadd
add
add
popf
adc
mov
sub
enter
jmp
and
and
xchg
retf
test
stos
lods
push
stc
movs
adc
int3
out
ret
movs
jno
jno
out
pop
and
jnp
dec
inc
mov
adc
fnstenv
dec
data16
xor
sti
push
dec
dec
add
clc
mov
clc
cmp
in
mov
js
mov
inc
sahf
addr16
pop
jl
icebp
dec
pop
pop
scas
jle
push
xchg
sub
mov
xlat
pop
jbe
push
repnz
pop
sub
fwait
push
pop
mov
or
and
ins
push
and
std
inc
bound
cmp
fstp
adc
fst
int3
(bad)
(bad)
cld
cmp
aam
sub
push
add
imul
lock
daa
repnz
sahf
mov
xchg
xor
iret
lds
fcomp
pop
fnstcw
cli
ds
push
int3
jge
xor
and
shl
iret
mov
daa
sahf
mov
dec
mov
pop
int
imul
jbe
leave
pop
pop
mov
mov
jnp
std
mov
inc
xor
jbe
pop
lea
test
sub
ja
mov
inc
gs
dec
stc
pop
shl
rol
or
xchg
jmp
imul
jmp
mov
enter
sbb
test
out
xchg
ret
pop
int
cmp
test
ret
cld
bound
aad
imul
(bad)
fisttp
jmp
inc
arpl
push
fisttp
repz
or
(bad)
jmp
mov
jno
pop
test
addr16
stos
adc
movs
cmps
arpl
in
pop
retf
push
sbb
enter
fild
das
dec
(bad)
aad
rol
and
sbb
icebp
fnstsw
mov
aaa
out
or
sbb
sbb
mov
sub
mov
lods
jg
nop
or
adc
xchg
cmp
dec
cmp
jbe
and
sbb
add
jp
fnstsw
gs
popa
cdq
pop
pop
pop
xchg
bound
sahf
adc
outs
fs
dec
xchg
cmp
mov
mov
jp
(bad)
mov
jbe
add
repz
test
hlt
das
mov
fsubr
mov
jge
lea
addr16
or
sbb
scas
pop
jp
jno
scas
das
xchg
movs
ja
mov
jmp
daa
sti
loop
mov
(bad)
cmp
or
push
aad
mov
rcr
push
and
les
enter
push
cmp
sub
pop
mov
scas
push
pop
ds
cmp
sbb
sbb
in
xor
adc
loopne
gs
xor
(bad)
div
fisttp
add
cmp
mov
arpl
xor
shr
cmps
cs
add
js
out
repnz
sbb
cmp
test
out
dec
push
pusha
cmp
lods
cmp
adc
and
aad
stc
push
test
in
mov
stc
jp
inc
enter
pusha
jno
mov
adc
outs
test
in
cdq
int
and
adc
push
loop
sar
adc
inc
stos
and
int
int3
iret
dec
adc
out
popf
cld
sub
xchg
xor
push
test
jg
or
jno
mov
inc
adc
(bad)
jmp
jnp
call
lahf
mov
mov
lahf
daa
mov
int3
inc
clc
fld
jb
xor
pop
xchg
jmp
int
mov
cld
call
mov
lahf
js
jbe
movs
enter
xchg
jmp
call
mov
inc
movs
inc
ret
icebp
lods
ret
push
iret
mov
jb
fwait
pusha
mov
xor
mov
mov
sbb
cmps
mov
or
mov
xor
test
fs
lock
cli
cdq
(bad)
hlt
test
shl
cmp
(bad)
mov
jnp
arpl
in
push
dec
hlt
(bad)
sub
xor
test
retf
enter
fist
mov
jmp
pop
push
push
add
mov
add
pop
(bad)
(bad)
daa
lds
shl
movs
call
cmps
xchg
inc
ror
jmp
int
test
pusha
sahf
(bad)
mov
aaa
ds
aam
mov
adc
add
xchg
fs
mov
dec
adc
iret
sbb
mov
add
xlat
lock
repnz
xchg
mov
jne
adc
and
cmps
pop
add
shl
sub
jbe
push
mov
movs
lods
inc
mov
mov
(bad)
sar
xchg
lods
inc
mov
push
pop
jecxz
outs
neg
in
lock
fidiv
adc
jl
rol
inc
xchg
xor
call
mov
lods
dec
inc
fbld
fs
shl
imul
xor
jbe
(bad)
dec
pop
sbb
loopne
sub
pop
outs
popf
stc
xor
(bad)
mov
addr16
xor
rcr
cs
addr16
std
repnz
sbb
jb
(bad)
dec
ss
call
stos
add
test
movs
add
inc
or
sub
clc
push
xlat
mov
sbb
test
xor
mov
jg
mov
repnz
mov
lea
mov
inc
mov
dec
add
jnp
(bad)
jae
push
or
sar
out
jg
and
ja
daa
lea
xchg
mov
aaa
cdq
jmp
outs
es
leave
test
or
loopne
inc
jge
ja
ret
add
scas
lods
rol
pop
mov
bnd
mov
dec
sbb
mov
std
sub
jo
xchg
add
mov
not
fiadd
mov
enter
iret
sti
and
into
out
fcmovu
sub
and
xchg
stc
or
and
or
in
popf
inc
dec
outs
lahf
xor
adc
addr16
aaa
call
sar
add
jl
add
and
les
mov
pop
mov
adc
mov
push
(bad)
icebp
sbb
repnz
cmp
ret
xor
xor
inc
pop
pusha
ret
out
sbb
aam
fwait
mov
mov
dec
jp
cld
push
add
imul
std
call
or
jmp
dec
adc
xchg
and
sbb
(bad)
push
(bad)
xchg
cmps
shr
adc
in
cmps
adc
in
xor
pop
dec
std
loop
cmp
sbb
addr16
mov
xor
inc
(bad)
pop
mov
imul
aaa
test
daa
nop
cmps
cld
inc
pop
cmp
inc
ficomp
jg
ss
rcl
jne
inc
xchg
dec
mov
ins
dec
or
jno
dec
fs
or
inc
daa
inc
lods
cmps
jmp
or
enter
cmp
push
sahf
xor
out
imul
pop
sub
xor
xchg
rcr
in
inc
mov
movs
in
xor
add
mov
stos
sar
aas
push
(bad)
call
into
stos
add
fwait
xor
mov
outs
fdiv
int3
cmp
xchg
cmp
ror
repnz
sbb
jns
in
out
fild
mov
xchg
mov
mov
out
inc
xchg
sub
movs
push
pop
push
or
mov
int3
cmps
mov
pop
jne
lea
inc
xchg
ins
mov
int3
ror
inc
dec
ja
sbb
nop
out
xor
jb
pop
fdivr
sti
add
jb
jmp
call
ds
cmps
dec
sub
mov
or
shl
push
jnp
inc
dec
push
mov
pusha
fmul
xor
sub
lock
sti
push
mov
stos
in
fwait
mov
push
dec
je
stos
fidiv
inc
mov
pop
jns
adc
gs
adc
xchg
outs
aam
mov
(bad)
dec
add
mov
mov
scas
icebp
jl
add
ins
mov
pop
nop
ja
test
push
dec
add
mov
loopne
mov
push
aad
jmp
mov
lods
out
adc
(bad)
mov
add
mov
fs
inc
popf
loopne
mov
lods
jmp
pop
jp
add
shl
adc
in
adc
dec
mov
icebp
mov
and
test
xor
push
test
leave
inc
adc
call
jb
pop
cli
hlt
fild
mov
or
(bad)
in
lds
fld
in
call
xor
pop
sbb
in
jmp
jecxz
push
xor
mov
mov
out
clc
xor
ror
neg
stos
or
sbb
icebp
es
jne
inc
stos
loopne
mov
dec
ds
or
xchg
mov
jno
sbb
mov
jns
movs
shl
jecxz
les
mov
out
loope
pop
inc
mov
and
dec
mov
mov
sub
out
mov
std
jne
pop
sbb
inc
mov
inc
stos
loope
pop
dec
lea
cmp
daa
pushf
in
call
jp
sbb
push
and
fs
cld
push
sti
mov
mov
imul
stc
lods
shl
gs
sbb
or
es
imul
test
mov
ss
fs
mov
shl
mov
int3
push
pop
mov
shr
rol
xchg
das
xor
cli
mov
inc
cdq
js
aad
mov
ret
fnstenv
bound
fcomp
sub
outs
pop
sbb
cli
mov
dec
dec
push
outs
sub
mov
jb
mov
sub
arpl
aas
pop
fwait
pusha
shr
retf
test
popf
jge
push
repz
outs
xchg
or
shl
call
ffreep
jne
push
test
mov
in
cmc
jp
xchg
ret
pusha
mov
xchg
mov
mov
dec
arpl
push
retf
nop
(bad)
(bad)
cs
mov
fnstsw
jns
push
push
loopne
fldenv
punpcklwd
add
neg
loop
cdq
mov
adc
ds
pop
call
mov
ficomp
jns
adc
add
mov
(bad)
out
out
scas
movs
mov
mov
sub
mov
mov
(bad)
sbb
stos
sbb
pop
or
outs
mov
jl
adc
add
sub
fwait
ret
ds
and
mov
enter
sbb
ins
pop
mov
push
pop
inc
call
sub
mov
and
int
cmps
jp
sub
pop
pusha
cmc
xlat
addr16
repz
jae
xor
stc
add
bound
popa
jno
jle
jmp
pusha
shl
mov
adc
stos
vcvtsi2sd
cmp
cmps
leave
and
mov
push
lods
call
dec
cmp
jge
adc
cmp
inc
inc
push
add
(bad)
adc
jl
jg
mov
jmp
(bad)
(bad)
into
fist
ss
xchg
sbb
jae
sbb
sub
adc
pop
inc
hlt
iret
loope
sbb
loop
adc
or
rcl
pop
vpshaw
stos
retf
xor
sub
call
loopne
push
sbb
stc
leave
jecxz
cld
data16
xchg
(bad)
clc
inc
enter
fisubr
into
lahf
push
cmc
pop
fisubr
mov
pop
dec
sub
cmp
dec
sbb
jp
std
lods
cmps
imul
mov
sub
xbegin
mov
mov
mov
inc
addr16
scas
mov
cmp
push
jnp
cmps
addr16
xchg
sub
and
xchg
push
xchg
(bad)
adc
ss
nop
inc
test
ins
in
dec
mov
in
push
call
ja
in
push
xlat
and
push
mov
xchg
fstp
in
push
fstp
xlat
ja
push
dec
cmps
mov
sub
xchg
add
dec
in
xor
mov
cmps
in
add
sahf
mov
aas
xchg
test
ja
add
adc
ja
jns
dec
push
cmps
repnz
stos
test
cmc
dec
ja
and
iret
sbb
add
xor
pop
sbb
jge
pop
pop
push
data16
jbe
jb
sbb
adc
rcr
mov
call
sbb
jmp
pop
mov
(bad)
jbe
into
popf
je
rcr
sbb
sbb
in
rol
das
dec
xchg
ins
adc
and
fcomp
fsubr
gs
push
xor
fild
retf
pushf
imul
mov
push
sub
(bad)
test
lock
cmp
mov
in
cmp
test
adc
stos
cmp
sbb
movs
jnp
test
mov
mov
push
jecxz
jnp
or
test
add
jle
mov
ins
adc
fidivr
jbe
xor
pusha
inc
ins
jl
popa
mov
push
leave
cs
push
in
loopne
add
fldenv
fld
pop
mov
jmp
call
mov
mov
lods
mov
xor
mov
sbb
sti
jmp
sub
and
retf
mov
neg
(bad)
lea
inc
test
push
stc
gs
xchg
push
xor
jp
mov
pop
mov
mov
cmp
fld
sub
call
dec
push
(bad)
xchg
fdivr
or
xchg
dec
dec
movs
mov
add
ja
mov
jmp
pop
cmp
xor
ds
sti
adc
rcr
adc
or
mov
pop
push
imul
in
int
fild
xchg
call
jmp
mov
test
jns
mov
cmp
test
add
sbb
jl
or
sub
lock
cmps
mov
xchg
sahf
or
jmp
jo
mov
jb
ss
push
xor
xchg
dec
inc
or
add
cld
call
shl
in
fcom
(bad)
pop
repz
mov
lods
jmp
or
or
dec
mov
inc
mov
mov
fwait
into
mov
movs
or
add
dec
ins
fcom
or
add
std
fsub
adc
ins
ss
aad
fild
sbb
cmp
push
pop
adc
or
or
xor
mov
outs
mov
pop
xchg
xchg
xchg
adc
call
xchg
xor
dec
pop
or
sbb
inc
or
cmc
aad
shr
xchg
dec
out
push
pop
pop
jb
push
out
or
jp
scas
repz
jecxz
dec
fsub
out
sbb
retf
in
and
inc
mov
call
dec
iret
xchg
aam
mov
pop
mov
push
mov
pop
xchg
xor
fdivp
loopne
adc
rol
shl
mov
xchg
fbstp
inc
gs
rcl
sub
add
add
(bad)
sub
jg
sbb
add
cmp
jg
inc
or
in
xchg
add
ret
xchg
mov
lods
push
out
sub
push
push
aaa
jns
mov
mov
push
xchg
inc
shl
adc
mov
out
in
sbb
sbb
outs
sub
cld
sub
je
stc
(bad)
add
out
mov
sub
lock
cmc
call
pop
mov
cmovs
sub
in
popa
sub
fwait
movs
aam
adc
ss
sbb
cmps
mov
lods
pop
push
xor
jae
outs
jne
jle
sub
cmp
pop
jbe
js
mov
stc
(bad)
dec
cmp
sti
mov
cwde
fistp
cmc
fbstp
sub
add
mov
cli
mov
push
out
cli
test
(bad)
popa
fnstcw
push
shl
xchg
je
pop
xor
or
sub
mov
add
pop
pop
jne
sbb
mov
cmp
mov
cmp
push
mov
cli
call
jge
jl
dec
or
push
cdq
and
repz
loopne
mov
jg
ror
xchg
ins
arpl
fidiv
rol
mov
pop
lods
into
retf
aam
call
es
sub
into
hlt
ds
aam
jns
call
sub
test
out
and
push
jge
xchg
(bad)
mov
mov
and
addr16
ins
test
dec
sub
icebp
xor
or
sbb
push
jne
int
jl
or
jge
loopne
movs
cmp
(bad)
cmc
sbb
adc
call
into
ins
leave
lods
dec
in
inc
in
xchg
outs
jp
call
ret
and
inc
inc
les
adc
or
push
jmp
sar
fwait
jg
add
hlt
inc
sub
dec
xlat
mov
(bad)
dec
pop
adc
das
cmp
mov
ret
mov
in
inc
push
fdivr
lods
pushf
and
dec
add
cmp
test
jnp
mov
ins
push
imul
cwde
xchg
xchg
dec
or
call
xchg
cmp
mov
mov
dec
inc
gs
int
dec
pop
mov
sub
jge
xchg
(bad)
scas
sub
xor
xchg
les
pop
mov
pop
sub
js
push
jl
ja
or
js
mov
adc
sub
enter
cmp
pusha
xor
call
cmp
scas
xor
pop
outs
mov
cmp
arpl
xor
pop
loop
push
cmp
mov
jecxz
shr
mov
mov
cwde
popa
mov
loope
js
xchg
shr
lods
rcl
int
fstp
sbb
ins
jo
push
dec
out
push
xor
jle
xor
mov
push
and
lock
mov
mov
mov
xchg
mov
std
xchg
push
jmp
sahf
mov
jg
cmp
popf
cdq
lock
cdq
icebp
lds
sub
inc
idiv
and
aas
ret
xchg
movs
movs
dec
stos
pop
push
xchg
push
hlt
or
xor
mov
xchg
mov
or
push
and
or
loopne
icebp
mov
and
rol
add
retf
dec
nop
mov
xor
nop
mov
shl
imul
and
psubq
push
shl
and
scas
(bad)
icebp
stc
push
xor
cmp
mov
sub
test
sar
arpl
jp
ja
pop
cs
dec
push
sbb
cmp
jmp
mov
call
sub
xor
sub
ds
mov
sub
jle
pop
lods
outs
movs
xchg
jo
aaa
lods
xor
fsub
cmc
stos
push
lea
out
pop
stos
cmp
sti
fimul
mov
push
les
sub
das
jp
or
shr
mov
mov
call
lahf
mov
(bad)
rol
pop
xchg
scas
leave
in
in
std
or
cmp
adc
aaa
xor
cmp
cmp
sar
(bad)
push
ins
sti
scas
push
out
cmp
dec
or
ss
jecxz
add
cmp
mov
xchg
pop
hlt
pop
push
mul
sar
jmp
pop
sahf
cmp
sbb
jno
loop
(bad)
xor
dec
mov
inc
leave
xor
rcr
aaa
adc
cwde
sub
mov
rcr
neg
pushf
inc
icebp
repnz
popa
ja
xchg
sbb
dec
stc
sub
nop
out
adc
mov
cmp
jmp
ins
data16
mov
neg
rol
aas
push
ds
dec
push
in
iret
inc
scas
mov
nop
jne
ds
jae
or
scas
and
push
aas
fisubr
aas
leave
push
push
enter
jo
repnz
loop
test
cdq
out
mov
icebp
(bad)
imul
add
cmp
cwde
jnp
movs
pop
clc
fidiv
sub
pop
sbb
inc
(bad)
push
nop
fild
xchg
mov
xchg
sub
mov
pop
add
adc
jmp
inc
and
pop
paddq
and
ds
(bad)
sti
call
mov
jae
aaa
lea
xchg
dec
cdq
sub
xor
xor
jg
mov
pop
xchg
and
(bad)
sbb
dec
push
push
xchg
imul
add
sub
mov
push
sar
pop
mov
mov
pop
cwde
shl
rcr
outs
jl
jg
lock
jmp
cmp
mov
sub
fld
and
mov
enter
div
aaa
fnsave
mov
dec
ret
inc
jo
adc
clc
jle
jmp
aaa
inc
mov
xchg
push
sub
gs
test
push
mov
adc
push
add
leave
jno
nop
jmp
sub
jns
es
mov
and
pop
sbb
(bad)
movs
push
push
fwait
dec
daa
sub
les
jne
scas
in
inc
sub
pop
enter
xchg
xchg
or
push
jne
outs
imul
adc
sbb
loope
mov
clc
arpl
lock
push
rcl
shr
sub
scas
repnz
lock
js
lods
mov
inc
jmp
pop
push
xor
sub
mov
movs
inc
inc
xchg
ret
push
cld
mov
dec
aas
fdivr
lock
mov
pop
sti
sub
rcl
adc
pop
rcr
mov
popa
int
xchg
rcl
mov
sbb
dec
jnp
cmc
addr16
push
xchg
es
jbe
xchg
inc
xchg
adc
push
(bad)
xor
sub
pop
mov
mov
push
inc
cdq
sub
push
jb
xor
pusha
cmp
mov
push
sub
pop
push
mov
call
adc
(bad)
push
and
sub
inc
add
call
scas
(bad)
jns
push
stos
xchg
sub
lds
nop
cld
(bad)
out
xlat
sbb
xchg
in
ret
sbb
fld
clc
adc
and
jns
stos
repnz
retf
jmp
mov
lods
dec
js
sbb
mov
or
(bad)
mov
lock
or
sub
aas
sbb
aam
hlt
jge
mov
ja
xchg
test
bound
xor
push
fidiv
out
gs
and
add
cmp
xchg
push
aam
and
fistp
mov
mov
mov
stc
in
inc
add
pop
dec
push
jno
call
(bad)
cmc
lea
mov
aaa
ds
retf
sbb
mov
repz
dec
out
push
mov
and
add
cwde
xor
data16
inc
sub
hlt
mov
in
xchg
pop
mov
push
ret
cwde
in
cmc
sti
retf
push
ja
dec
pmaddwd
in
jp
repz
fnstcw
jp
adc
fnstenv
or
not
or
mov
push
(bad)
jo
into
xchg
shl
push
fidiv
jnp
jbe
sbb
bound
js
pop
sub
adc
sbb
xchg
mov
fstp
xchg
cmp
aaa
push
daa
jns
sbb
dec
outs
adc
sub
sbb
push
mov
loopne
ret
inc
das
cs
xchg
cwde
jp
bound
xchg
sub
and
enter
hlt
push
jg
popf
retf
test
xor
add
adc
repz
xchg
(bad)
jmp
and
ror
and
sub
xchg
mov
pushf
loopne
test
push
loope
xchg
xchg
adc
loop
sub
aad
cmp
fwait
pop
rcr
pop
add
lahf
scas
pop
add
jbe
(bad)
add
mov
inc
rol
out
lods
ss
ins
test
mov
scas
cmps
adc
loop
clc
push
test
mov
add
in
leave
mov
mov
fdivr
cmp
add
into
jno
mov
cmp
inc
mov
push
push
push
std
(bad)
(bad)
mov
cmp
jge
and
pop
mov
nop
into
mov
in
add
lods
test
mov
loopne
jae
xor
dec
imul
ret
cmp
push
jge
jecxz
mov
mov
stos
pop
stc
sub
into
test
bound
cmp
and
ret
push
xlat
sub
out
mov
jo
jns
loop
xor
or
and
sbb
or
sub
fst
mov
cdq
dec
xchg
mov
jbe
lahf
adc
jno
(bad)
ds
adc
sbb
sar
cmp
ins
fmul
push
mov
jb
or
or
movs
aaa
jg
movs
add
dec
aad
inc
nop
sbb
pushf
adc
mov
mov
jbe
mov
or
shl
add
lock
sub
cmp
cld
pop
out
sbb
mov
dec
add
repz
hlt
sub
retf
pusha
mov
popa
add
stos
mov
dec
push
aam
xchg
popf
mov
rol
out
inc
jl
jmp
xor
jno
ds
fcomp
aaa
mov
mov
push
out
ret
or
loop
div
add
xchg
das
pusha
lds
pushf
scas
xchg
scas
mov
std
fcom
in
jne
(bad)
xchg
xchg
dec
es
movs
sub
fsubp
add
jp
sub
pop
aad
push
in
ss
cmp
jmp
mov
fild
jb
adc
into
test
sub
jecxz
pushf
cdq
(bad)
out
sbb
in
xchg
sahf
xor
add
shl
and
sar
hlt
clc
push
mov
int
test
js
test
bound
dec
fcmovnbe
(bad)
push
sub
xchg
add
clc
jmp
push
add
imul
pop
xor
pop
cwde
(bad)
push
mov
pop
push
mov
loop
xchg
lds
xchg
push
(bad)
dec
popf
push
adc
mov
push
test
out
inc
cld
rol
mov
clc
rsqrtps
cmps
int
mov
movs
mov
(bad)
push
retf
outs
lock
enter
xchg
push
mov
data16
or
lahf
dec
cmp
xchg
adc
idiv
ret
outs
xchg
or
hlt
push
dec
nop
dec
enter
push
xchg
addr16
hlt
je
syscall
sbb
hlt
sbb
rol
adc
imul
jns
fistp
jb
sub
xchg
mov
sahf
aas
ja
and
mov
loop
xor
push
jmp
jp
(bad)
xchg
xchg
mov
jno
adc
xchg
dec
inc
pop
add
nop
sub
lahf
mov
pop
cmp
ror
(bad)
ins
cmc
imul
add
xor
adc
push
dec
fimul
dec
push
aaa
stos
clc
stc
fild
or
inc
aam
pop
out
inc
div
inc
jl
and
stos
mov
or
dec
jge
sahf
mov
rcr
(bad)
mov
bound
dec
xlat
scas
mov
cs
les
inc
dec
cmp
xchg
cs
cld
mov
cmp
sub
adc
dec
adc
inc
xor
jl
add
or
and
mov
xor
push
jo
movzx
aad
lock
add
xchg
push
ficomp
xchg
aaa
adc
xchg
jnp
repz
call
pop
jmp
mul
jns
cwde
loopne
jl
push
pop
lds
or
sbb
add
pop
inc
int
jecxz
mov
sub
cmps
iret
bound
jo
mov
xchg
test
scas
mov
push
cli
jne
and
ficomp
dec
rol
jmp
(bad)
js
movs
not
xlat
or
xchg
lahf
outs
cli
inc
mov
shl
xor
leave
cmp
mov
ds
xchg
pop
lahf
push
bound
fsubr
fstp
mov
dec
loop
leave
enter
or
add
cmc
retf
bound
mov
mov
cmc
loope
ret
jmp
cmp
push
nop
pop
leave
jne
add
cdq
daa
mov
std
add
mov
mov
adc
xchg
add
test
push
fisubr
in
hlt
inc
loop
inc
jl
je
inc
dec
xor
mov
daa
dec
sbb
cmps
pusha
repnz
mov
fsub
sbb
dec
aas
push
icebp
jo
inc
pop
and
add
pop
mov
cmps
in
jmp
(bad)
cmc
pop
xor
mov
xor
fiadd
(bad)
or
xor
arpl
mov
mov
jl
adc
push
or
xchg
popa
fstp
xchg
add
ret
and
sti
add
or
pop
push
icebp
ins
cmp
(bad)
daa
pusha
cmp
aaa
jno
movs
(bad)
enter
xor
(bad)
jmp
jmp
mov
mov
ret
sbb
xor
cmp
or
mov
dec
dec
mov
rol
push
xchg
mov
scas
enter
ret
cmp
das
jl
and
xchg
loope
sti
fstp
dec
imul
mov
je
jl
hlt
mov
jl
or
popf
(bad)
out
fbld
sbb
inc
(bad)
out
retf
ja
sub
xor
cmp
or
int3
mov
nop
shr
mov
popf
or
push
cmp
jne
pop
adc
sub
out
jne
add
rcr
fwait
push
xchg
push
mov
data16
stc
lahf
stos
pop
jecxz
les
imul
lods
arpl
mov
push
jp
fwait
pushf
mov
push
push
jmp
sbb
cmps
imul
or
add
sbb
jb
loopne
(bad)
and
imul
int
shl
sub
jg
mov
adc
pop
cs
xchg
xor
cmc
ins
cmp
xor
inc
cmps
push
cwde
dec
retf
xor
sti
nop
aaa
dec
test
call
in
stos
dec
mov
int3
dec
inc
loopne
mov
ins
add
jo
jns
adc
sbb
lods
ret
clc
or
and
mov
repnz
xchg
(bad)
mov
adc
stos
pop
cmp
xor
jo
or
xchg
mov
jnp
cmp
push
arpl
je
sbb
mov
xlat
adc
adc
dec
xchg
dec
scas
inc
jns
dec
sbb
pop
cmp
fisubr
jp
fnstsw
movs
mov
fs
add
fisttp
and
mov
loope
xchg
push
movs
pop
pop
jo
enter
xchg
xchg
fimul
popf
lahf
mov
mov
mov
clc
xor
out
add
fs
mov
push
add
ins
sbb
ins
mov
xchg
and
cmps
cs
mov
test
pop
cmp
mov
jg
mov
mov
leave
pop
repz
ss
add
xchg
push
cmps
xchg
imul
cmp
mov
add
push
mov
inc
sub
popa
stc
gs
mov
mov
and
addr16
xor
dec
stos
xchg
jle
add
or
jg
jmp
adc
inc
idiv
mov
inc
jl
jnp
add
adc
gs
or
lahf
out
fwait
add
(bad)
hlt
arpl
aad
mov
mov
and
inc
and
jge
cmp
std
inc
push
push
in
addr16
jo
(bad)
jecxz
sub
(bad)
pusha
dec
scas
aaa
and
sub
inc
mov
cmps
loope
test
xor
icebp
push
dec
arpl
rol
retf
mov
sbb
push
cmp
shl
xchg
inc
mov
mov
adc
adc
mov
and
jne
std
jns
jecxz
call
ret
sti
(bad)
outs
add
in
popf
jmp
lods
js
pop
pusha
sub
sbb
cmc
imul
adc
lds
or
les
inc
xchg
push
faddp
rcr
in
call
jo
mov
push
inc
xor
sahf
mov
addr16
leave
call
push
fcmove
cmc
mov
or
(bad)
test
fadd
mov
mov
inc
(bad)
icebp
push
mov
ds
hlt
cmp
sub
sbb
jns
nop
movs
cs
sbb
les
inc
fcomp
(bad)
pop
adc
push
and
(bad)
movs
arpl
jecxz
mov
jmp
and
pop
test
jns
jmp
in
pop
xchg
add
or
mov
add
push
mov
(bad)
ror
(bad)
outs
mov
(bad)
mov
rcl
sbb
mov
into
scas
ror
mov
shr
inc
cli
xchg
clc
scas
pop
mov
(bad)
(bad)
mov
loop
sbb
cmp
fisttp
imul
xor
leave
sub
or
xor
jns
xor
and
xor
test
(bad)
push
push
stos
movs
sar
pop
fistp
sbb
clc
out
xchg
enter
cmps
sub
xor
mov
xor
pop
jbe
push
pop
or
aad
jp
add
ret
jo
rol
and
mov
sub
xor
call
pop
lea
pop
leave
pop
icebp
scas
sub
call
leave
pop
sub
int
sub
sub
out
repz
dec
dec
push
inc
add
cs
test
in
or
push
adc
dec
add
popf
jge
sub
lahf
fucomip
pop
shr
(bad)
cmps
imul
out
test
push
mov
xchg
xchg
cld
(bad)
call
jp
in
fbld
pusha
stos
in
lock
test
cwde
inc
xor
test
repnz
add
dec
lods
mov
xchg
or
imul
mov
outs
push
(bad)
jb
cmp
hlt
xchg
data16
adc
inc
call
inc
cmp
mov
leave
in
loop
ror
in
in
adc
sub
aaa
mov
and
rcl
and
adc
mov
cmp
pop
in
and
in
and
fadd
jmp
mov
and
sar
js
shl
add
inc
movs
ds
xor
ins
mov
add
outs
sbb
dec
push
retf
out
sub
sub
pushf
and
addr16
push
push
mov
cmp
jae
xor
out
jecxz
or
int3
cmps
data16
pop
stos
dec
and
outs
sbb
pop
mov
sub
gs
out
pop
ret
(bad)
mov
dec
cli
movs
push
and
mov
sti
js
in
xchg
(bad)
dec
test
fwait
test
iret
mov
cmp
fwait
add
pop
dec
push
cmp
pop
mov
jmp
daa
je
lea
mov
stc
push
dec
js
xchg
jbe
fdiv
jp
mov
out
rcr
add
ret
or
jnp
dec
test
push
aas
jg
std
(bad)
pop
xchg
ret
int
dec
jg
mov
sub
jle
inc
cmp
push
sbb
cmp
jle
shl
(bad)
(bad)
xor
pop
xor
nop
sbb
outs
xchg
jb
xchg
es
mov
and
pop
and
aam
(bad)
sub
nop
sub
cs
mov
sub
pop
int3
cmp
push
mov
add
add
mov
sbb
xchg
sbb
call
and
mov
adc
cmpxchg
imul
pop
adc
cmc
stos
retf
cmc
and
hlt
xchg
and
pop
inc
mov
retf
mov
mov
pop
xchg
jns
mov
and
int
mov
iret
pop
retf
jae
jl
ret
mov
or
push
adc
or
inc
xchg
inc
ror
xor
aas
or
rcl
cdq
adc
pop
gs
pushf
mov
lahf
movs
inc
pop
leave
repz
xchg
popf
and
jmp
call
sub
add
ret
cmp
cli
ds
cmps
dec
movs
test
mov
lds
pop
int3
test
pop
in
out
stos
imul
jmp
xor
enter
cmps
dec
idiv
fld
out
adc
jns
mov
jg
adc
repz
sbb
int3
jl
jle
cwde
add
retf
mov
dec
mov
rol
aaa
push
daa
push
cmp
aad
inc
push
in
pop
lock
or
leave
ror
push
cmp
stc
stos
cs
cmc
aam
add
mov
ds
jg
lods
inc
xor
repz
add
ds
xchg
mov
mov
into
ficomp
jle
imul
pop
mov
outs
xor
dec
pop
pop
aad
mov
ror
shr
jmp
adc
fstp
test
sti
pop
xchg
loopne
inc
and
and
or
push
sbb
lea
inc
mov
loop
push
xchg
rcr
retf
imul
cld
mov
imul
ror
fdiv
cmp
inc
add
jge
sub
(bad)
pop
packssdw
popf
dec
popa
push
in
scas
pop
lock
mov
jae
push
push
leave
push
jp
push
fdiv
mov
adc
xor
call
add
arpl
clc
pushf
push
fdivr
lock
push
stos
pop
jae
jno
stc
push
imul
mov
fidiv
sar
repnz
(bad)
xlat
push
mov
fwait
mov
fild
movs
xchg
mov
jnp
shl
inc
movs
sbb
or
ja
out
cmc
outs
mov
push
test
mov
repz
sbb
add
dec
sub
stos
cs
cmp
push
test
in
imul
outs
out
xor
retf
jl
into
ret
in
test
ins
rcl
das
jns
icebp
add
popf
xchg
mov
push
sub
enter
mov
rcr
xchg
fsubr
mov
inc
xor
mov
inc
dec
test
ja
scas
shl
cld
mov
scas
mov
sti
push
fprem1
lods
(bad)
(bad)
lods
test
rol
push
out
or
add
or
xor
(bad)
dec
push
scas
cmp
xchg
retf
pop
std
mov
cmp
cmps
mov
push
xor
fwait
cmps
jbe
or
mov
(bad)
stc
cmc
push
inc
mov
xlat
mov
and
pop
add
out
aad
sub
mov
sub
bnd
imul
mov
mov
jp
enter
mov
push
cmc
push
arpl
adc
inc
pop
mov
xchg
div
inc
or
aam
sub
push
movs
jb
es
lahf
cmp
mov
leave
enter
inc
jnp
and
sub
retf
test
add
scas
jns
out
icebp
in
js
imul
ja
pop
push
xor
xor
sub
xchg
xchg
jecxz
fnsave
inc
nop
cwde
retf
jge
mov
std
cmp
inc
pop
dec
or
adc
pusha
mov
xchg
jecxz
mov
sub
xor
pop
inc
jbe
xor
lock
imul
jae
jmp
push
adc
int3
xchg
fdiv
mov
ror
jl
cli
inc
add
enter
sbb
leave
fadd
and
in
sub
push
pop
inc
add
(bad)
mov
mov
jns
and
aad
push
fsubr
test
arpl
hlt
lock
cmps
in
stc
xchg
call
add
movs
icebp
cmp
aam
xor
popa
inc
test
gs
in
or
mov
sbb
repz
loope
nop
retf
scas
push
mov
inc
popf
cwde
pop
inc
rcr
xlat
shr
push
xchg
nop
sub
nop
ins
outs
lods
pop
popf
pop
movs
cmp
and
inc
jb
pop
loopne
movhps
fisttp
test
sbb
sbb
outs
test
dec
scas
outs
sbb
sbb
jno
(bad)
aad
mov
mov
xchg
xchg
cmp
inc
xor
and
popa
out
aaa
sti
cmp
adc
movs
data16
pop
jp
fs
retf
nop
cli
jecxz
or
push
scas
sahf
fcom
jae
sbb
dec
or
mov
clc
mov
ret
adc
lahf
icebp
(bad)
out
jmp
pop
fldcw
movs
adc
mov
pop
pop
aam
stos
test
popa
mov
push
sbb
xchg
fisub
sbb
pop
out
enter
neg
ins
mov
sub
push
rcl
scas
mov
enter
gs
ret
repnz
loope
movs
rol
rcl
out
mov
leave
pop
mov
rcr
inc
and
ficom
ins
xchg
test
je
jecxz
dec
(bad)
int3
xor
mov
test
(bad)
call
dec
fstp
ja
mov
dec
mov
movs
les
xchg
repz
dec
fld
adc
or
cmp
fimul
sub
or
mov
stc
daa
adc
mov
popf
mov
adc
mov
cdq
leave
cmps
cmp
xchg
shl
push
and
mov
push
rol
and
xchg
aam
lea
mov
push
xchg
fisttp
and
ins
(bad)
and
ja
mov
ds
adc
call
fstp
mov
push
cmp
adc
fst
pop
nop
scas
jns
in
in
nop
inc
in
sbb
adc
jns
push
or
push
enter
hlt
pop
ret
inc
mov
cwd
ds
inc
or
jbe
dec
imul
sbb
movs
test
add
mov
fs
push
add
call
jg
add
shl
mov
cli
push
pop
mov
jecxz
arpl
addr16
adc
scas
pop
call
xchg
xchg
sub
pop
cmp
mov
cdq
bound
scas
ficomp
popa
and
jge
clc
fwait
ror
pop
loopne
ret
(bad)
cmps
(bad)
cmps
ret
das
sahf
mov
ret
shl
pop
retf
aaa
mov
sahf
mov
push
add
adc
add
enter
push
sub
test
jg
xchg
mov
outs
test
(bad)
mov
movs
test
inc
ins
in
sbb
into
test
mov
enter
imul
ficomp
aas
in
mov
or
out
or
pop
scas
fwait
jp
xchg
jo
xchg
push
adc
push
sbb
jl
mov
fs
loopne
(bad)
mov
jno
shl
ins
inc
scas
movs
mov
fcom
jae
push
mov
daa
lahf
push
push
ror
(bad)
cmps
je
and
movs
mov
dec
sbb
sub
(bad)
adc
jp
jmp
js
adc
(bad)
lds
imul
not
cdq
sbb
cmp
xchg
and
mov
add
icebp
dec
sbb
fild
imul
xchg
or
out
stos
scas
jecxz
les
(bad)
xchg
mov
mov
mov
cmps
in
pushf
cld
cli
ins
outs
jo
cmps
test
bound
ds
mov
and
or
xor
inc
sbb
or
xor
mov
(bad)
mov
cmp
repnz
jle
lea
inc
(bad)
cmp
push
ss
sub
or
out
retf
or
mov
call
hlt
mov
cdq
popf
jecxz
daa
and
jge
dec
jno
icebp
mov
lds
add
inc
arpl
pushf
and
ret
ja
sub
int
lahf
xchg
fdiv
sbb
mov
push
scas
lods
(bad)
mov
pop
dec
rcr
es
pop
(bad)
push
jns
cmps
adc
jge
stos
mov
or
mov
aam
pop
sbb
add
rol
iret
jo
retf
or
ret
push
loope
adc
jmp
jg
test
push
ins
(bad)
(bad)
out
std
cmp
in
neg
inc
pop
push
stc
sbb
enter
cld
inc
pusha
(bad)
scas
shr
(bad)
push
mov
adc
inc
cld
inc
adc
bound
xchg
pushf
lods
daa
(bad)
mov
and
mov
ja
xor
mov
lds
and
leave
icebp
sub
push
mov
jle
sub
sbb
sub
scas
addr16
aam
mov
and
cmp
pop
(bad)
jg
aam
pop
int3
dec
inc
ja
loop
out
mov
mov
pushf
mov
mov
inc
and
jecxz
mov
cli
jns
iret
push
call
jmp
push
(bad)
fcom
stc
retf
daa
repz
retf
cmps
inc
mov
fidivr
mov
sahf
dec
lea
inc
ret
push
xchg
repnz
popf
mul
hlt
stos
push
pop
in
push
xchg
adc
cmp
ret
add
and
out
or
jae
bound
mov
das
loop
push
inc
and
int3
or
mov
dec
pop
sbb
and
sub
(bad)
fadd
dec
sbb
inc
enter
jno
test
scas
adc
das
push
xlat
jo
bound
fst
sbb
out
daa
das
rol
adc
stos
ficom
dec
xor
retf
push
fcmovb
cmc
add
push
jl
dec
in
or
in
fcmovb
xor
dec
mov
add
jns
dec
jns
les
pop
imul
mov
or
movs
(bad)
fldcw
inc
pop
xor
mov
mov
aam
dec
test
cmp
sub
into
add
adc
sbb
add
outs
mov
xchg
jecxz
or
push
sub
adc
inc
or
into
stos
jp
cmp
mov
jmp
aam
imul
enter
(bad)
jb
xchg
loope
pop
leave
xor
mov
outs
jmp
aam
lock
lods
inc
imul
test
push
int3
push
das
add
jnp
cmps
pop
popa
jmp
stc
mov
fnstenv
dec
cdq
cmp
or
sti
jmp
jg
aaa
loopne
pop
adc
pop
jb
inc
leave
xchg
cmp
mov
ins
movs
xchg
fild
or
lods
dec
and
vcvtsd2ss
jmp
add
js
adc
jnp
add
clc
out
mov
pop
fwait
cs
fild
jle
and
jp
fist
adc
popf
dec
add
add
std
cdq
and
leave
cmp
xor
inc
mov
push
fwait
test
mov
cmp
loope
iret
jns
adc
out
(bad)
test
and
inc
data16
push
inc
cmps
in
aas
iret
jb
mov
or
jne
cmp
popf
jnp
pop
lds
push
pop
js
(bad)
je
and
lods
lods
pop
push
or
adc
js
test
and
mov
jmp
retf
std
adc
adc
or
(bad)
lods
(bad)
push
aas
mov
cmc
push
cmp
add
mov
hlt
dec
addr16
mov
jl
sbb
add
sub
pop
mov
aad
jno
dec
rol
or
and
cmps
movs
mov
cs
scas
sub
inc
xor
int3
pop
cmp
dec
xchg
xchg
repz
push
cmp
cmp
shl
lahf
fsub
aaa
fnstcw
data16
ficom
sti
sar
and
pop
push
test
retf
sbb
jno
adc
jno
imul
sbb
and
mov
bnd
xchg
pusha
mov
add
pop
xchg
idiv
stc
mov
pushf
pusha
xchg
cld
mov
retf
push
mov
inc
in
les
sbb
call
outs
pop
and
add
push
inc
scas
pop
xchg
mov
jecxz
or
push
xor
sub
push
and
leave
inc
stos
int
push
cmp
repnz
test
or
outs
mov
mov
pop
inc
ins
xchg
mov
xchg
mov
in
icebp
dec
mov
out
gs
cmp
push
ja
sti
mov
jbe
stc
push
loopne
fnstcw
arpl
and
cmp
cmps
jl
sub
push
pop
aas
int
push
xchg
popa
sbb
xor
fiadd
je
mov
xchg
(bad)
pop
aam
test
pop
fwait
data16
sbb
xchg
fsubr
repnz
lahf
sub
out
clc
add
push
leave
je
xor
addr16
out
js
pop
popa
sbb
fnstcw
xor
pushf
(bad)
cld
dec
add
xor
pop
pop
sbb
pop
sub
xor
inc
push
rcr
scas
sbb
sbb
jo
mov
pop
ins
dec
ins
cmp
stos
call
scas
add
cmp
call
cld
aad
loop
imul
movs
out
cmps
sbb
imul
cmps
(bad)
cmp
cmp
and
call
mov
popw
loopne
or
inc
xchg
cli
popf
mov
and
cmp
int3
and
stc
push
fistp
adc
retf
inc
inc
cmp
gs
scas
leave
xchg
mov
xor
cmp
xor
loopne
inc
sahf
data16
xor
mov
mov
sahf
adc
pop
pop
mov
mov
mov
or
pop
fstp
sbb
mov
push
lds
jge
mov
mov
sub
or
mov
ret
cmc
test
sub
movs
sbb
inc
aas
sub
cdq
je
loopne
inc
ficomp
cmp
push
inc
int
mov
int
movs
pop
fdivr
cmp
out
test
repnz
sub
arpl
rcr
int3
mov
mov
mov
stos
arpl
dec
popa
mov
(bad)
mov
cmp
outs
popf
or
daa
inc
(bad)
pop
jg
arpl
xor
call
std
fcomp
test
js
push
pop
pop
mov
cmp
jne
mov
loopne
fwait
aaa
or
pop
in
push
es
repnz
icebp
rcl
push
inc
jl
fidivr
pop
cmc
ja
sbb
add
dec
xor
xor
inc
outs
adc
movs
add
jmp
bsr
cmc
add
adc
dec
add
adc
lods
mov
daa
adc
repnz
mov
push
es
adc
movs
outs
fadd
(bad)
cmp
fisttp
push
fsincos
push
mov
push
mov
js
test
(bad)
mov
repnz
sbb
and
add
dec
aas
mov
lods
stos
add
xor
scas
mov
aas
cmp
or
int3
dec
pop
push
jp
sub
pop
mov
sbb
dec
or
pop
xbegin
in
and
imul
mov
xor
pop
fisubr
hlt
push
ins
pop
push
inc
movs
retfw
into
lock
sub
rcl
call
shl
sub
(bad)
out
inc
jno
(bad)
mov
fcomp
ss
call
sahf
pop
(bad)
and
cli
cmp
sbb
mov
jmp
ins
pop
dec
mov
leave
dec
and
clc
test
addr16
arpl
adc
push
push
or
(bad)
ffreep
int3
aas
cmp
sub
stos
mov
add
(bad)
adc
mov
or
and
loopne
xor
inc
retf
pop
shl
cld
push
mov
xor
sub
or
pop
ins
dec
push
mov
jmp
jnp
xor
loop
cmc
(bad)
dec
ret
mov
mov
jo
push
mov
leave
jmp
sbb
inc
xchg
cmps
call
adc
imul
adc
push
fwait
pop
jmp
pop
repnz
dec
mov
out
jb
mov
popa
rcr
aaa
push
ja
jae
mov
mov
outs
stc
cmp
adc
push
mov
sti
(bad)
push
mov
sti
push
cmps
int3
call
in
xchg
dec
adc
sub
jo
dec
inc
pop
and
pop
sub
lea
nop
dec
ret
hlt
jge
cmp
fstp
mov
xchg
ficom
jmp
or
aam
es
mov
mov
jb
fbld
je
daa
retf
xor
sub
outs
ins
mov
popa
out
leave
jno
sub
adc
inc
xor
sbb
mov
popa
jg
iret
add
and
(bad)
aad
shr
or
sar
bound
lock
test
lock
dec
jnp
cmp
(bad)
icebp
in
xor
and
cmc
jbe
push
retf
cmps
nop
push
jne
popf
push
sub
nop
xor
sub
scas
fst
push
xor
cmp
ret
push
sar
stos
mov
(bad)
cli
movs
push
and
cld
add
xor
xor
ret
adc
jne
std
aaa
cmps
pop
outs
fs
(bad)
mov
in
fistp
mov
mov
clc
int3
outs
inc
shr
jle
sub
repz
loop
dec
push
dec
es
je
(bad)
jb
out
sbb
mov
pop
fs
aaa
xor
arpl
mov
test
xor
inc
repnz
shl
inc
mov
sahf
sbb
xchg
pop
add
sbb
in
mov
xchg
jo
aaa
pushf
pop
adc
cmp
pop
xor
dec
pop
icebp
fadd
add
jecxz
and
cmp
sahf
or
int
test
cmp
mov
sub
(bad)
pop
xchg
imul
mov
(bad)
dec
popa
mov
jae
adc
jae
adc
outs
mov
fcom
mov
xor
(bad)
sub
sub
jnp
add
std
push
test
js
xor
stc
add
inc
movzx
ins
and
cmps
cmc
sub
inc
out
pusha
fsub
jne
shr
stc
fxam
enter
mov
popf
xor
stc
dec
mov
std
adc
mov
out
xor
mov
jecxz
cmp
out
sbb
lea
jg
hlt
sbb
test
pop
dec
add
(bad)
inc
test
stos
hlt
movs
loope
sbb
mov
xchg
iret
dec
mov
mov
pop
mov
iret
fwait
(bad)
popa
outs
pop
mov
(bad)
push
add
pushf
scas
addr16
call
in
sub
enter
pop
into
les
gs
dec
aam
or
popf
movs
sbb
pop
mov
mov
test
call
or
lahf
stos
fist
lds
lods
in
jge
mov
fcmovbe
inc
jo
mov
nop
add
mov
fdiv
fnstcw
push
js
push
iret
or
shl
xchg
jbe
dec
inc
les
dec
add
outs
push
inc
sbb
lds
(bad)
imul
int
cli
xlat
aad
ss
jecxz
sub
jmp
dec
test
mov
cmp
ins
add
dec
retf
bnd
je
jnp
pop
sub
cmp
retf
je
pop
inc
adc
jb
push
shr
xchg
sbb
pop
sbb
fdiv
(bad)
add
ficomp
cwde
sbb
mov
in
fstp
loope
push
mov
jecxz
loopne
cmp
je
and
rcl
xchg
popa
(bad)
jmp
cmp
pop
dec
(bad)
jp
adc
lds
sbb
jae
out
xlat
out
mov
lods
mov
or
pop
sub
stos
inc
ds
push
lods
adc
fidiv
cmp
add
retf
push
or
test
and
add
std
sub
add
mov
jne
jbe
shr
add
dec
inc
dec
pop
rcl
mov
dec
and
mov
test
lods
mov
fs
call
sub
loopne
mov
loope
push
dec
mov
lea
icebp
push
into
xchg
daa
test
(bad)
cmp
(bad)
sbb
xchg
stos
pop
push
loop
stos
retf
aaa
ret
jle
es
xchg
push
cmp
mov
add
pop
retf
(bad)
jmp
test
hlt
lahf
imul
ins
dec
aas
or
(bad)
sahf
dec
(bad)
aas
inc
cmp
xor
sub
in
les
xchg
cld
leave
aaa
jns
pop
jbe
fs
(bad)
aad
push
mov
pusha
shr
and
es
push
pop
loopne
adc
and
rol
add
in
lahf
nop
out
jnp
and
push
dec
imul
mov
dec
xchg
nop
push
push
(bad)
push
xlat
out
das
frstor
xor
sbb
dec
lea
mov
pop
iret
mov
xchg
jg
add
push
push
lods
jo
dec
imul
pusha
rol
fnsave
add
das
int3
shr
test
jbe
add
jmp
sbb
lods
lods
dec
push
dec
sbb
clc
fstp
xchg
lahf
out
arpl
ror
add
ins
sahf
xchg
mov
pop
mov
lds
xor
adc
jne
stos
test
sub
retf
ja
push
push
mov
add
jno
push
mov
dec
fld
es
and
xchg
push
add
jle
dec
call
dec
dec
and
mov
inc
sbb
fld
adc
cmp
imul
scas
cmps
aas
stos
xor
lahf
cld
mov
sub
mov
mov
scas
sbb
jne
mov
aad
dec
fwait
mov
sbb
xor
mov
shr
sub
fidivr
push
xchg
addr16
ficomp
(bad)
retf
fcomip
outs
jmp
mov
push
push
push
clc
fs
setne
inc
call
jbe
(bad)
clc
jg
jmp
mov
cmp
lea
fcmovnbe
push
mov
mov
outs
ret
xor
mov
mov
sbb
push
rcl
in
and
push
clc
rcl
ror
mov
mov
je
popa
ret
fisttp
mov
mov
sbb
frstor
sahf
xchg
adc
pop
scas
fisttp
sub
leave
bound
add
test
jo
das
fdiv
jbe
lea
mov
bound
pop
and
loop
sbb
pop
ror
and
fwait
xor
adc
inc
sub
add
pop
add
mov
(bad)
out
mov
pop
push
sbb
cmp
xor
mov
shl
rcr
in
(bad)
xor
enter
cmp
add
sbb
jbe
cld
xor
retf
outs
adc
lahf
mov
mov
jae
ins
retf
and
cmc
sub
out
aaa
addr16
(bad)
dec
jg
fadd
xchg
ins
mov
cli
inc
(bad)
arpl
fsub
les
dec
pop
pop
call
lods
adc
sar
jle
aaa
mov
xchg
shl
mov
pop
adc
lea
add
or
(bad)
fwait
cmp
shl
call
cmc
push
dec
and
rol
std
cmps
pop
and
cmps
(bad)
arpl
add
or
nop
sti
mov
out
test
int
(bad)
aam
test
adc
inc
inc
mov
ins
jecxz
xor
push
inc
sbb
movs
je
ror
add
pop
jmp
inc
iret
out
push
dec
rep
fwait
adc
xchg
sub
loopne
icebp
adc
rcl
daa
dec
inc
into
mov
loop
std
jmp
xor
sub
outs
pop
loope
fcmovnb
xchg
jb
lods
outs
inc
push
xchg
adc
outs
out
cmp
sub
push
or
or
retf
and
pop
adc
cs
pop
cmp
sub
imul
ret
pop
sub
out
mov
jno
xchg
loopne
sbb
mov
mov
mov
adc
ss
out
jg
sbb
xchg
or
jmp
and
jns
dec
sub
lock
jecxz
fs
jbe
mov
movs
lea
jmp
pop
cmp
fmulp
dec
in
pop
aad
mov
sub
aad
out
mov
push
test
xlat
test
loop
push
les
retf
addr16
jp
ror
loop
mov
push
push
adc
js
ret
xlat
adc
jle
addr16
inc
mov
fstp
sbb
rcl
jg
dec
or
push
les
retf
into
jne
bound
dec
dec
adc
pop
aaa
scas
inc
adc
enter
cmps
test
call
inc
(bad)
aad
das
and
neg
sti
leave
js
push
mov
out
add
in
add
cmp
fcom
in
jp
xchg
cmp
xchg
fucom
sub
addr16
cmps
rcl
ret
cmpxchg
jmp
mov
inc
vpsrlw
and
fisubr
adc
mov
ret
aam
push
(bad)
sub
inc
xchg
fmulp
mov
cmp
fstp
(bad)
inc
xchg
gs
daa
adc
jg
imul
lds
lods
mov
xchg
clc
jno
mov
in
and
dec
sbb
outs
jae
xor
dec
scas
inc
rcl
in
and
sbb
ret
mov
or
test
(bad)
push
lahf
push
or
enter
add
adc
lods
pop
fstp
fisub
sub
aas
jo
loop
lock
and
sub
jle
aam
outs
sbb
aam
dec
shl
fcomi
data16
cmps
loopne
cli
jg
lea
test
adc
adc
add
mov
inc
gs
mov
jl
cmp
rsm
jb
ret
aam
lahf
dec
mov
loope
xchg
test
aad
xchg
leave
jecxz
enter
xor
(bad)
adc
cmp
iret
cmps
in
ss
pop
out
inc
cmp
mov
es
sbb
xchg
mov
mov
mov
outs
xchg
mov
adc
in
add
test
out
retf
and
clc
mov
mov
in
add
retf
pop
xchg
inc
mov
aas
aas
or
das
loope
pop
test
int
hlt
xchg
pop
and
jo
retf
and
xor
sete
les
xor
fldpi
mov
cmp
rcr
dec
xchg
adc
dec
fisub
ss
mov
(bad)
jns
xor
inc
lods
fcomip
cmc
cwde
mov
add
push
int
dec
out
push
mov
js
fwait
xlat
loop
retf
inc
add
xchg
and
lods
push
(bad)
mov
out
fcmovnu
lods
jge
popa
xor
cld
in
adc
xor
mov
popf
in
stos
int
mov
inc
add
cmp
jbe
xor
mov
jns
ret
enter
cmp
outs
mov
or
stos
jno
xchg
icebp
or
test
dec
jmp
xchg
push
add
ficomp
pusha
sbb
xor
loop
dec
mov
push
push
xchg
test
cwde
ficomp
mov
push
dec
mov
push
std
mov
or
xor
jle
xchg
pop
leave
out
xchg
icebp
lds
xor
mov
jmp
sub
mov
jg
cmps
mov
cmps
jae
cs
jge
cmps
or
push
ds
sbb
mov
mov
dec
retf
fmul
loope
mov
out
jp
mov
rcl
(bad)
pop
jo
in
and
fcomp
mov
in
jo
outs
jb
inc
addr16
jne
movs
push
fadd
dec
(bad)
std
imul
jmp
sar
jge
jge
xchg
jecxz
outs
cli
cmp
dec
and
lds
out
inc
test
push
daa
nop
add
rcr
push
jg
push
dec
sar
fsubr
xor
mov
(bad)
fimul
adc
(bad)
push
mov
pusha
pop
xchg
aad
bnd
arpl
cmps
cmp
adc
cld
sti
dec
enter
or
xchg
arpl
dec
ins
mov
push
pop
int3
ret
pop
mov
je
mov
mov
mov
add
jbe
xor
dec
daa
cdq
dec
fs
ins
scas
mov
sbb
hlt
ds
pop
or
jp
out
rep
mov
js
lahf
movs
inc
das
std
inc
repz
cmc
lahf
mov
scas
mov
fs
cmp
les
call
or
adc
adc
cmp
mov
add
lds
idiv
sub
mov
adc
cs
sub
mov
test
ror
movs
(bad)
adc
movs
jne
jbe
call
mov
sub
cmp
jmp
cmps
pop
mov
mov
les
loope
or
mov
xor
jb
inc
sahf
pop
jl
mov
cwde
dec
popa
mov
shl
and
xchg
movs
add
les
out
nop
mov
cmps
xor
ins
and
xor
xchg
ficom
pop
jb
mov
test
movs
sbb
movs
jg
jp
mov
scas
xor
shl
sub
mov
add
cmp
dec
call
mov
clc
int3
out
fsub
jb
mov
mov
test
adc
nop
mov
jne
pop
sti
cdq
add
pop
shl
xchg
fisubr
cld
(bad)
arpl
ins
ins
push
add
jl
frstpm(287
(bad)
popa
in
std
pop
fwait
ret
lahf
aaa
sub
push
dec
cmp
push
cmp
or
ins
adc
(bad)
pop
xor
mov
mov
imul
pop
sub
jno
and
inc
out
leave
mov
sbb
lea
xlat
sbb
fcomp
push
fsubr
and
jmp
ret
shl
push
push
push
retf
jne
push
jno
and
in
xor
pop
in
push
adc
sub
xor
dec
sbb
jge
ret
xlat
leave
mov
gs
out
add
jg
lahf
outs
or
leave
fidivr
or
cmc
push
fs
cmc
enter
xchg
(bad)
pop
cmps
bound
in
sub
cmps
push
mov
or
or
pop
(bad)
retf
sub
hlt
(bad)
xchg
cmp
es
shl
sbb
add
aaa
fst
ficomp
xchg
and
mov
test
leave
mov
ss
stos
fcmovnu
cs
outs
test
sbb
lea
sub
test
movs
int
and
repz
adc
adc
mov
xor
loopne
xchg
out
shl
sbb
sbb
sub
jl
jns
jmp
jo
inc
mov
jbe
cmp
mov
gs
pusha
xlat
sahf
dec
xchg
sbb
fs
jmp
and
jg
mov
inc
add
gs
cdq
test
xchg
fs
jl
mov
popf
addr16
sbb
sbb
test
mov
or
mov
mov
push
stos
(bad)
mov
test
call
inc
mov
das
mov
inc
sub
rcl
dec
mov
loop
ins
imul
outs
mov
loop
adc
fdiv
or
imul
mov
out
jmp
lods
add
push
movs
and
cmps
(bad)
cmp
jg
mov
pop
retf
mov
popa
push
or
mov
leave
inc
pop
fmul
jp
inc
dec
lods
es
rcr
test
or
xchg
sbb
cmp
sub
dec
add
mov
pop
mov
jecxz
das
dec
push
gs
push
or
sbb
dec
push
mov
ins
dec
xchg
scas
and
sbb
and
(bad)
mov
jae
jae
mov
dec
and
cmp
sahf
inc
cmps
xchg
retf
xchg
or
pop
sbb
sub
loopne
ja
sub
ret
cmc
(bad)
fs
xor
pop
jns
add
add
and
adc
xchg
call
fld
xchg
hlt
cmp
aad
lahf
dec
lods
xchg
les
sub
scas
or
xchg
jge
repnz
fsubr
pop
lds
daa
add
mov
daa
jae
loop
mov
inc
sbb
inc
inc
std
push
out
call
jecxz
push
pop
in
mov
xor
popf
fisttp
out
(bad)
loope
(bad)
out
xlat
dec
sub
test
xchg
int
out
xor
leave
mov
bound
mov
imul
push
sbb
cmps
pop
mov
pop
jecxz
cdq
scas
and
cli
loopne
sti
lahf
jge
(bad)
ret
mov
jmp
add
fstp
pop
and
hlt
dec
push
cmp
push
leave
push
mov
hlt
in
ins
xor
mov
fxch
sub
sub
mov
(bad)
in
sub
scas
sub
mov
data16
sub
cdq
movs
add
cmc
bound
es
retf
inc
(bad)
ds
lahf
sbb
xlat
into
(bad)
(bad)
rcl
call
add
clc
or
stc
mov
aam
mov
cmp
idiv
dec
mov
ror
xchg
mov
mov
into
push
cwde
cdq
xor
ror
imul
imul
fucomi
jbe
retf
mov
imul
pop
mov
lods
fst
nop
adc
inc
inc
imul
cmp
mov
xchg
pop
repz
prefetch
pop
or
or
mov
jmp
pop
scas
pop
cld
push
inc
mov
fs
in
into
lahf
cmps
inc
inc
int
sbb
movs
in
push
pushf
rcr
(bad)
popa
je
movs
xchg
mov
shr
loope
lahf
outs
fld
mov
jg
aaa
ret
jg
mov
sub
dec
das
sub
jno
mov
mov
jnp
mov
test
clc
and
mov
sub
js
inc
mov
mov
pop
push
popa
mov
lea
push
add
sub
addr16
add
movs
adc
loopne
add
jae
popa
xchg
out
out
imul
js
mov
jle
pop
dec
mov
jno
js
je
cmp
lds
and
xor
add
cmp
jmp
pop
das
push
mov
in
aaa
icebp
mov
mov
xchg
lds
push
outs
and
sub
sbb
js
pop
mov
ds
pop
inc
adc
cmp
sbb
xor
and
rol
jge
push
and
pop
push
in
or
outs
call
push
adc
ffreep
push
inc
aaa
mov
inc
imul
imul
fst
cmp
je
ror
in
jg
add
daa
mov
jnp
xor
cmc
or
sub
sahf
adc
and
mov
cmp
sahf
add
scas
push
and
call
xor
or
call
sbb
cmp
ins
clc
pop
mov
out
fcom
mov
int3
inc
xor
pusha
mov
in
ds
xchg
gs
sub
clc
in
sub
es
sub
adc
adc
push
push
movs
ja
mov
sub
idiv
mov
call
fadd
xchg
daa
dec
sti
jns
(bad)
pusha
xchg
dec
(bad)
cmps
popf
xchg
popa
fs
adc
repnz
fadd
dec
sbb
test
jecxz
sbb
sbb
ss
addr16
jno
movs
mov
inc
pop
and
rol
and
nop
or
pushf
dec
cmps
inc
adc
ret
ja
leave
mov
pop
test
lods
popf
aam
push
mul
inc
(bad)
mov
fisubr
scas
push
jno
jnp
dec
shl
cmp
add
pushf
cld
inc
nop
and
movs
leave
in
jg
pop
fnsave
pop
xor
test
outs
nop
jo
add
mov
pop
mov
popf
dec
iret
xchg
mov
inc
xchg
pop
push
loop
ret
and
pop
cmp
ficom
ins
xchg
xor
loope
xchg
jmp
frstor
add
mov
not
in
sahf
and
push
dec
add
les
dec
mov
test
dec
sub
retf
loopne
int
adc
cdq
cmp
push
jp
mov
in
adc
mov
inc
or
gs
fcom
lahf
mov
dec
sub
or
movs
loop
fwait
xor
inc
pop
fdiv
dec
outs
sbb
jg
aam
rcr
enter
inc
or
sbb
cmp
out
or
outs
adc
dec
cmp
cs
sub
pusha
outs
mov
mov
sahf
inc
inc
sub
bound
hlt
lods
or
jno
add
push
in
hlt
mov
mov
loopne
mov
lock
shl
pop
jecxz
pop
cwde
adc
lods
add
gs
xor
add
das
dec
dec
gs
mov
retf
cli
jp
test
or
iret
int3
in
xchg
mov
push
out
and
mov
pop
ins
mov
mov
add
xor
div
cld
mov
jbe
stc
mov
mov
jge
mov
push
mov
repz
and
mov
imul
jmp
mov
cmp
ins
xor
xor
cmp
pop
dec
mov
xor
jbe
push
mov
fs
int3
jl
sbb
mov
shl
dec
inc
pop
xchg
mov
test
out
aam
cmp
sub
cwde
sbb
adc
add
jmp
ins
mov
cmc
xor
in
or
mov
or
jae
push
adc
or
frstor
or
cmc
retf
mov
or
pusha
xchg
push
(bad)
ins
rol
sahf
or
dec
in
jmp
add
and
inc
sub
jecxz
movs
mov
sub
and
mov
jbe
cli
xor
sub
and
xchg
dec
xor
ins
pop
clc
(bad)
adc
rcl
ret
mov
adc
ror
adc
inc
outs
popf
stos
xchg
xor
or
adc
push
xor
mov
test
inc
jmp
pop
xor
das
ja
pushf
pop
cmp
dec
(bad)
jmp
lods
mov
fiadd
int3
xor
dec
fsubr
loop
pusha
add
movs
mov
xchg
aaa
cld
jne
outs
daa
stc
mov
xchg
icebp
push
add
test
jmp
mov
and
jo
mov
js
ret
into
loop
mov
sbb
mov
pop
ret
mov
or
inc
sahf
pop
mov
bound
or
pop
mov
xor
lock
and
(bad)
pop
or
(bad)
scas
arpl
sub
stos
aas
arpl
mov
mov
lahf
mov
aas
bnd
adc
sub
aaa
in
mov
push
inc
mov
in
inc
xor
outs
jl
push
xchg
(bad)
jae
dec
lea
ss
xchg
and
sbb
test
jle
xchg
es
jo
adc
es
test
push
cmp
fmul
sub
rol
fidivr
ins
and
adc
call
aaa
loopne
bswap
cmp
loop
mov
out
xchg
cmp
out
icebp
mov
jp
mov
jle
sbb
push
mov
loope
test
mov
test
test
mov
mov
fldenv
xchg
or
gs
cld
push
cmp
call
fwait
push
jl
or
xchg
int3
and
xlat
(bad)
dec
mov
shl
scas
add
loopne
jne
imul
cmp
ss
sti
sbb
fsubr
xchg
jmp
and
fcmovne
and
push
out
mov
mov
sbb
aaa
je
stos
aam
cmps
int3
ja
sbb
pop
mov
push
and
loop
jns
movs
hlt
imul
mov
mov
ins
in
aam
sbb
xlat
fs
adc
jl
jno
push
jl
pushf
repz
inc
and
jbe
dec
fdivr
cmp
mov
xor
mov
dec
imul
inc
inc
inc
div
jae
js
bound
or
ror
mul
scas
xchg
nop
mov
dec
mov
data16
xchg
nop
fdiv
adc
aam
je
adc
cmp
test
les
fcmovnbe
cmp
stos
sahf
mov
fcomi
ja
ret
fwait
jmp
mov
xor
cs
ret
sti
fadd
mov
or
or
loopne
inc
dec
aam
mov
mov
or
jmp
clc
adc
gs
ret
sub
enter
(bad)
jmp
retf
dec
dec
sub
dec
lock
shl
sub
(bad)
enter
(bad)
mov
pop
test
outs
hlt
and
pop
and
shr
and
adc
xchg
pop
add
addr16
in
adc
ins
loope
add
clc
push
lock
aad
inc
pop
(bad)
dec
xor
pop
ror
jmp
loop
xor
mov
dec
retf
movs
cmp
add
jbe
sbb
add
(bad)
pop
lods
xchg
test
cmp
retf
imul
dec
or
dec
dec
into
into
sbb
and
lods
mov
imul
inc
mov
js
xor
popa
icebp
xchg
je
dec
les
enter
and
ror
push
mov
cld
adc
jae
jnp
or
into
or
push
cmp
xor
cld
xchg
and
push
scas
lods
sbb
add
cmps
xor
add
repz
rcl
mov
in
popa
jl
ds
cmp
push
shl
je
retf
push
rcr
sub
cmc
mov
dec
imul
lahf
inc
cmp
jmp
inc
ins
ins
ins
cli
cld
stc
adc
sub
shl
and
mov
mov
ss
add
jbe
mov
cwde
xor
sbb
mov
retf
es
fnstenv
mov
stos
out
push
cs
lds
stos
scas
sub
in
pop
shr
pop
xor
mov
sbb
daa
rol
jmp
pop
push
rcl
jmp
add
int3
in
sub
pop
fst
ret
jle
sbb
jmp
xsha1
cmps
int
movs
mov
or
add
xchg
xchg
add
je
sbb
sbb
pop
inc
inc
loopne
ret
mov
push
movs
(bad)
push
bound
mov
lock
pop
pop
sbb
push
pushf
jmp
and
nop
inc
mov
das
lds
xlat
adc
adc
fisttp
stos
jmp
neg
out
fstp
pop
lods
addr16
push
xchg
mov
arpl
jle
fstp
push
mov
mov
leave
dec
sbb
sub
sbb
lahf
bound
mov
daa
bswap
rcl
or
(bad)
jl
gs
adc
daa
lods
loopne
xchg
or
fist
sub
push
cdq
pop
loopne
outs
sub
(bad)
lock
les
test
push
mov
imul
pop
rcr
stc
test
sahf
mov
push
dec
mov
outs
lds
mov
adc
sub
or
pop
into
(bad)
rcr
add
pop
sbb
push
jae
ins
xchg
xchg
cmc
lahf
popa
ja
cmps
or
inc
or
mov
inc
mov
inc
bound
retf
int3
in
push
and
pop
jg
xchg
inc
jg
jmp
fcmovbe
jge
mov
push
nop
cmp
pushf
outs
cdq
mov
jo
mov
aas
mov
add
mov
lods
sti
addr16
arpl
or
jae
dec
retf
je
je
int3
and
or
xchg
retf
jne
mov
adc
jo
mov
int3
aam
jg
lds
mov
(bad)
rcl
test
xchg
cmps
popa
push
xlat
mov
gs
lock
loopne
iret
mov
jae
rcl
sbb
push
in
push
xchg
adc
xor
ror
dec
sbb
mov
xor
ja
ficomp
or
mov
sbb
pop
push
loop
in
fisttp
and
in
call
int3
mov
enter
sub
inc
mov
sub
xchg
enter
dec
pop
jae
scas
pop
(bad)
mov
out
mov
cli
jg
inc
out
jbe
stos
cmp
sbb
retf
mov
fisttp
adc
sub
or
fisubr
push
pusha
test
mov
inc
xor
enter
icebp
bswap
sub
pop
fs
imul
pop
cdq
jmp
jo
mov
inc
and
mov
mov
push
mov
mov
push
inc
mov
jbe
outs
sub
xor
test
test
fld
call
xchg
es
jmp
inc
fdivp
xchg
sub
fild
cmps
popf
jg
stos
push
mov
add
jmp
push
sub
xchg
and
jmp
jmp
ja
sub
fwait
ins
frstor
pop
(bad)
mov
test
cdq
push
sbb
add
ins
jnp
xchg
cmp
(bad)
jmp
lods
movs
repz
lds
fist
adc
jnp
js
bound
dec
xchg
adc
dec
call
push
scas
mov
test
mov
cli
pop
cs
push
sub
xor
rcr
stc
test
mov
inc
or
mov
and
inc
addr16
push
sbb
aas
inc
loope
call
fs
and
push
ss
popf
adc
ins
dec
mov
stos
add
xchg
fstp
test
dec
das
sub
dec
das
(bad)
imul
jns
(bad)
pop
dec
out
cwde
jno
repz
retf
and
loop
pop
or
cmp
scas
dec
adc
sbb
aam
jl
iret
setnp
aas
jne
mov
clc
inc
mov
lock
in
mov
xchg
loopne
xor
push
or
add
jne
mov
lods
adc
mov
aad
xor
push
jns
xchg
and
xor
cmps
jl
in
pop
dec
lods
in
pushf
jno
jno
jo
push
inc
(bad)
inc
mov
loop
mov
js
icebp
cmps
xor
xor
stos
fisubr
dec
cmps
iret
sub
inc
(bad)
shl
ds
ins
xchg
fnstenv
(bad)
(bad)
rol
jle
test
xor
add
cmp
xchg
pop
mov
push
sub
data16
pop
adc
es
adc
cdq
(bad)
stos
cdq
rcpps
call
sbb
sub
jg
test
lahf
jmp
push
lahf
jge
scas
pop
repnz
push
aad
push
test
in
add
mov
inc
mov
out
ins
mov
jle
call
jb
jp
sbb
adc
lahf
rcl
out
and
movs
dec
jge
cmc
push
inc
sbb
(bad)
cmc
call
fiadd
cs
fsubr
push
cmp
dec
(bad)
xchg
xor
cwde
cs
push
adc
call
mov
retf
mov
sbb
push
ret
pop
rol
jbe
loopne
jle
(bad)
pop
adc
iret
mov
(bad)
test
loop
pop
cmps
inc
scas
xlat
sbb
cmps
(bad)
cs
mov
dec
bswap
pop
or
aad
mov
outs
add
mov
js
or
mov
and
popf
mov
push
push
cmp
mov
clc
inc
(bad)
pop
cs
aaa
jmp
mov
enter
and
jo
jmp
enter
dec
sbb
pop
push
cmp
sbb
data16
ret
hlt
or
adc
sub
xchg
xor
jno
inc
bound
(bad)
pop
push
div
mov
cwde
int
in
xchg
inc
xchg
push
pop
bound
pop
fld
inc
(bad)
fisub
repz
pop
pop
inc
sbb
sbb
sub
sub
pop
into
pop
arpl
retf
ret
retf
mov
int
ds
push
outs
mov
sub
mov
xor
mov
(bad)
pusha
push
sub
and
outs
cdq
pop
fs
ins
add
fild
retf
inc
pop
mov
into
and
fwait
cmp
lods
mov
loope
mov
lahf
xor
data16
sbb
out
jne
iret
jecxz
sub
xchg
mov
lods
cmc
fwait
xor
add
xor
mov
sbb
mov
sbb
inc
movs
mov
bound
call
pandn
(bad)
jg
push
rcr
pop
shr
sbb
sti
mov
mov
loopne
cmp
ficomp
and
ret
in
mov
inc
lock
imul
jnp
add
lea
imul
sbb
or
or
cmp
cwde
push
icebp
(bad)
mov
mov
pushw
or
ret
and
inc
or
data16
mov
iret
imul
xor
mov
stc
ficomp
xor
inc
adc
retf
retf
or
mov
fild
(bad)
out
or
shr
or
xor
dec
mov
mov
jo
xchg
inc
cmp
in
xchg
nop
pop
cmps
dec
test
cmp
out
xchg
sbb
cmp
aaa
fwait
pop
inc
inc
fcomp
xchg
jae
pop
ja
hlt
scas
ja
daa
cmps
neg
stc
leave
cmc
or
pop
add
and
sub
aas
cmp
int
js
test
mov
jmp
cmp
pop
sub
enter
sbb
vcvttss2si
(bad)
xchg
mov
push
fcmovnb
dec
or
mov
cmps
(bad)
jmp
(bad)
sub
shr
icebp
adc
xchg
cmp
or
add
dec
xchg
out
loopne
les
add
loop
leave
lea
adc
sub
xchg
cmp
cmps
and
fidivr
fisubr
add
adc
jmp
cli
adc
cmp
dec
mov
cmp
rcl
mov
retf
or
push
pop
js
dec
or
loop
int
sub
movs
jmp
cmp
or
push
adc
and
inc
or
fild
repz
xor
gs
jno
or
sahf
in
fsubr
imul
dec
push
and
fst
cld
out
jne
rcr
jle
push
xor
iret
pop
cs
fwait
and
aad
(bad)
loopne
in
mov
ins
cmps
adc
mov
cmp
lock
jmp
sti
sti
movs
or
jno
test
dec
pop
mov
xor
cwde
jl
mov
jo
lods
or
cmp
neg
call
fwait
ins
add
daa
out
mov
fadd
lds
sbb
ret
retf
dec
arpl
xchg
push
popa
(bad)
adc
je
sub
sub
rcr
pop
push
cdq
jmp
push
addr16
push
ficom
test
mov
mov
sbb
xchg
xchg
es
jle
test
shl
lods
or
xlat
xchg
int3
(bad)
fst
(bad)
xor
adc
test
ret
ror
push
imul
aaa
test
xchg
pop
bound
pop
mov
sbb
int3
xchg
mov
outs
pop
(bad)
and
pop
stc
mov
fmul
xchg
or
fwait
push
lea
aad
retf
dec
jb
xchg
lahf
mov
add
mov
sub
jb
push
add
push
imul
xor
test
in
cmp
cwde
mov
jno
dec
mov
pop
mov
repz
cs
out
mov
pop
js
and
push
xor
xchg
or
das
movs
cmp
shl
xor
bound
retf
push
clc
push
or
loope
cmp
cld
popa
std
mov
lods
in
stc
xchg
or
jnp
pop
xchg
push
mov
nop
ror
jo
or
mov
cmps
daa
mov
mov
jg
or
daa
adc
sbb
pusha
cli
shl
mov
scas
mov
ret
lods
dec
mov
adc
mov
cmc
aaa
and
dec
inc
push
adc
push
and
fwait
mov
or
xchg
iret
ins
push
xchg
mov
lea
jbe
and
jl
pop
test
std
lock
push
xchg
fwait
or
pop
(bad)
push
and
adc
jmp
push
daa
pop
jle
adc
mov
add
stc
or
adc
adc
cmp
push
jecxz
enter
stc
push
cld
and
xchg
das
stc
enter
cdq
stc
retf
jmp
jg
xchg
fistp
aaa
mov
sbb
loope
int3
loop
xchg
sbb
lgs
push
adc
cmps
push
call
mov
mov
jno
aaa
sub
imul
sub
and
(bad)
cmp
jp
jecxz
(bad)
(bad)
ja
dec
mov
pop
fnstenv
adc
add
pop
mov
test
cdq
xchg
cs
lods
jmp
int
mov
das
pop
inc
(bad)
leave
mov
jge
xor
cmp
or
jmp
mov
addr16
mov
in
fnsave
int
addr16
or
data16
cli
neg
stos
out
xchg
fistp
loopne
xor
sbb
loopne
or
cmp
inc
mov
and
(bad)
xlat
int3
mov
push
in
mov
fcmovnbe
imul
add
xchg
out
cmp
pop
or
mov
mov
push
xor
repz
out
imul
jnp
jp
loop
lahf
call
xor
pop
shr
sbb
mov
jecxz
in
pop
push
add
test
ret
sbb
rcl
int3
jp
in
scas
outs
shr
cli
pushf
lods
push
xchg
inc
push
push
fisttp
and
cmp
out
aaa
push
stos
retf
inc
out
icebp
pushf
push
push
xor
rep
sbb
aam
push
jecxz
mov
adc
mov
(bad)
cwde
push
pop
inc
rcl
mov
jmp
sub
in
mov
pusha
or
ffreep
dec
or
and
mov
pop
mov
pop
fsubr
push
or
push
jb
retf
fstp
ror
mov
sbb
cli
test
ficom
ins
and
jo
fsubr
adc
stc
add
fist
ins
sbb
sar
cmps
sbb
push
add
jg
ja
mov
(bad)
das
(bad)
sbb
mov
push
cmp
inc
and
arpl
xor
int
stos
int
inc
ret
arpl
jg
aaa
clc
mov
fadd
jle
mov
mov
sbb
or
outs
jecxz
inc
adc
lods
ret
push
pop
jmp
or
jbe
cmps
pop
shl
dec
pop
add
mov
and
dec
aam
int3
pop
jg
dec
or
in
pop
stc
(bad)
mov
sbb
mov
ins
cmp
icebp
jo
ss
cdq
mul
nop
mov
ds
ins
inc
cmp
(bad)
sahf
mov
pop
add
inc
push
movs
or
mov
or
smsw
xor
jne
btc
mov
mov
ins
rcl
into
pop
add
inc
shr
push
andnps
mov
aas
mov
ffree
cmc
dec
xchg
idiv
mov
adc
cld
adc
in
dec
in
jg
leave
xor
data16
mov
mov
fs
std
ret
jg
test
sub
push
arpl
repnz
xor
or
inc
rcr
pop
jb
cwde
xor
call
(bad)
fld
outs
adc
loopne
in
and
shr
inc
aas
in
pop
inc
lock
mov
xchg
rcl
or
sub
and
cmp
cmp
leave
aaa
aam
icebp
sbb
and
popf
fisubr
inc
call
mov
dec
sti
push
adc
and
adc
add
out
stos
into
clc
dec
es
cmps
adc
lock
daa
xor
xor
jb
pop
aaa
lods
scas
adc
movs
adc
jnp
shr
or
sub
push
ret
jge
sbb
add
xor
mov
xor
dec
out
mov
lock
mov
fsub
or
mov
mov
adc
add
jae
inc
dec
out
xchg
ja
lock
push
mov
sbb
xlat
iret
rcl
cli
jl
test
mov
retf
jl
mov
mov
js
mov
or
inc
nop
ret
jbe
cmp
nop
push
inc
(bad)
and
int3
leave
mov
lods
outs
lods
arpl
ficom
(bad)
(bad)
stos
(bad)
pop
jle
(bad)
fwait
sbb
pop
push
dec
sub
test
mov
mov
lea
or
nop
cmc
xchg
adc
retf
mov
push
loope
cwde
cmps
pop
jmp
sub
dec
sub
inc
sar
fwait
dec
sbb
mov
and
cmp
sub
and
inc
sub
add
inc
fst
mov
mov
or
nop
cs
cli
dec
imul
push
fwait
(bad)
xor
pop
call
sbb
mov
dec
shr
leave
inc
out
jno
mov
loope
ins
mov
mov
ror
imul
push
scas
lds
adc
add
add
rol
xchg
loopne
cmp
inc
pop
stc
mov
push
in
push
mov
(bad)
in
outs
lods
push
push
jnp
lods
cld
dec
cwde
pop
sbb
loopne
js
sub
not
daa
push
mov
pop
pushf
or
sbb
jne
inc
js
pop
call
jno
nop
sbb
popf
(bad)
cmp
pop
imul
pop
push
stos
dec
mov
das
stos
push
lods
push
and
test
dec
inc
add
rcl
stos
cld
push
fs
fsub
add
sub
xor
test
dec
adc
das
jl
int3
mov
xor
aas
sbb
sbb
xchg
ret
xlat
(bad)
jo
pop
in
mov
xchg
mov
mov
test
xchg
add
xor
push
mov
ja
fnstcw
fadd
(bad)
stc
push
into
jge
xor
inc
sbb
xor
adc
(bad)
push
and
inc
ins
rcr
cs
inc
(bad)
sbb
jecxz
popf
dec
(bad)
movs
push
sbb
add
mov
scas
jmp
cmp
mov
mov
adc
pop
inc
adc
retf
xchg
mov
shl
lds
xor
retf
cmp
push
dec
mov
inc
xor
add
sub
aad
mov
call
cmp
pop
dec
call
jmp
aad
xchg
mov
jge
pop
sahf
in
pop
xor
jge
sbb
and
(bad)
stos
dec
call
sti
(bad)
jge
addr16
dec
push
inc
or
mov
xchg
inc
pop
loop
enter
test
or
jl
shr
push
xchg
scas
mov
mov
bound
pushf
push
mov
mov
(bad)
mov
mov
mov
cmp
inc
or
mov
add
mov
les
(bad)
das
cs
dec
mov
dec
add
cmp
out
dec
cmp
inc
scas
xor
fcomp
mov
sub
cmp
test
jne
push
rcr
mov
fld
sub
std
mov
pop
xchg
jge
dec
shl
add
push
fsub
mul
imul
push
xor
xchg
mov
je
cmc
out
sahf
outs
cmps
jle
call
sub
mov
sbb
outs
mov
pop
movs
aaa
xor
aaa
or
mov
ret
sub
shr
in
imul
xchg
inc
sahf
shr
(bad)
cld
rcl
cmp
mov
pop
sbb
in
in
xor
sbb
and
adc
xor
xchg
mov
in
jo
or
ret
dec
rol
or
les
int
mov
dec
iret
shr
ret
mul
cmps
add
sbb
test
call
push
or
jno
cwde
hlt
mov
cmp
dec
pop
or
and
push
pop
int3
dec
mov
sub
adc
jnp
jae
fld
inc
test
xor
add
fucomip
fwait
test
and
cmp
mov
je
test
pop
and
xor
xchg
and
add
jg
inc
sbb
mov
out
xor
imul
pop
in
cmp
add
cmc
repnz
leave
xor
and
adc
mov
push
ja
dec
ficomp
aas
out
pop
pusha
pop
add
mov
fsub
fidiv
ss
cmp
fdivr
not
data16
jmp
js
or
mov
jae
push
das
(bad)
sub
mov
xchg
sub
xchg
xchg
dec
xchg
repnz
cld
jno
xchg
xchg
pop
outs
(bad)
int3
sti
popf
cmp
int3
retf
lock
xchg
mov
aas
or
test
fsub
das
fiadd
cmps
dec
xor
loope
outs
call
sbb
pop
fwait
xor
frstor
in
jg
mov
add
sbb
dec
sub
push
(bad)
fistp
cs
ds
out
inc
into
adc
xor
mov
jmp
mov
test
stos
jnp
mov
mov
xor
div
je
lahf
imul
jmp
out
push
ret
lods
leave
stc
mov
aad
sub
and
and
push
jno
repnz
add
push
lock
ret
fcom
in
and
mov
mov
ins
rcl
inc
mov
mov
pop
sbb
adc
ja
cmp
jge
aam
fisub
inc
nop
or
loopne
ss
test
icebp
fdivr
mov
fild
cmp
pop
pop
aaa
ja
jns
out
jmp
pop
adc
aaa
fisub
popa
ja
ret
sub
add
cli
div
lods
jmp
xchg
xlat
lahf
push
mov
pop
popf
dec
clc
inc
scas
dec
jle
cmps
jmp
push
push
test
xchg
dec
test
mov
sbb
(bad)
fisub
fiadd
(bad)
aam
scas
pop
mov
jbe
sbb
cmps
loop
mov
push
add
fxch
sub
imul
in
cmp
cmp
push
mov
cmp
rcr
inc
sub
fisub
push
or
adc
inc
inc
mov
inc
cmps
xchg
jae
mov
pop
push
es
pop
enter
cmp
push
mov
mov
jmp
mov
pop
cmc
mov
pop
jbe
into
xchg
jge
das
xor
fsub
cmp
xchg
das
das
push
cmp
(bad)
sbb
sub
jp
jb
popf
call
(bad)
iret
add
in
test
rcl
pop
in
inc
(bad)
xor
pop
std
push
jmp
imul
jno
xchg
cmp
pop
call
scas
pop
adc
mov
sar
cdq
pop
sbb
dec
addr16
dec
jae
xlat
stc
fs
arpl
cmp
cld
shl
call
inc
lds
jb
inc
mov
jge
mov
fwait
xor
inc
sbb
loope
add
ss
jl
(bad)
(bad)
aam
adc
pushf
fsub
aam
bound
sub
repnz
cld
loopne
cmp
aaa
push
mov
ret
mov
mov
jecxz
pop
retf
push
jmp
aam
stos
nop
sub
mov
xor
push
(bad)
pushf
pop
sub
(bad)
cdq
add
xchg
lock
jecxz
aaa
add
lods
add
icebp
dec
stos
cmps
bound
mov
push
sahf
jo
or
adc
fs
or
sahf
je
xor
lods
jae
loope
mov
sub
loop
gs
daa
std
repz
cmp
hlt
mov
xchg
cmps
inc
pop
inc
fadd
jne
adc
out
mov
cli
je
(bad)
cmps
mov
push
cld
mov
inc
bound
cmp
aaa
xchg
stc
addr16
add
push
call
xchg
jnp
mov
sub
jno
scas
rol
mov
inc
div
and
xor
scas
jmp
das
xor
adc
xchg
xor
scas
rcr
add
aas
jmp
sar
test
mov
add
xchg
stos
jo
pop
xchg
dec
pop
(bad)
fnstsw
cmps
out
repz
ins
dec
(bad)
xor
dec
nop
les
fs
(bad)
inc
es
cmp
out
cmc
mov
xor
fwait
jno
or
sbb
shl
(bad)
(bad)
ror
out
xchg
int3
jno
ror
int3
shl
adc
fmul
jecxz
and
pop
cmp
mov
hlt
mov
mov
push
inc
push
jl
jecxz
jl
dec
mov
lea
scas
pusha
cs
out
shl
sti
scas
mov
cmps
int3
shl
mov
mov
inc
pop
cmp
fistp
js
inc
xchg
mov
dec
int
cwde
pavgb
bswap
retf
push
and
mov
pusha
or
lods
jg
scas
(bad)
addr16
movs
mov
mov
leave
push
sti
or
test
jl
aaa
mov
rcr
cmp
jne
lahf
pop
jg
add
or
in
outs
add
and
jp
sbb
lahf
adc
xlat
mov
call
stos
add
aas
ret
popa
stc
stos
push
hlt
sbb
mov
push
sub
dec
xchg
popa
test
sbb
cmp
std
shl
or
jmp
fucom
icebp
daa
sbb
les
inc
enter
pop
jmp
call
fdivr
inc
add
jae
jmp
retf
pop
shl
inc
mov
add
dec
retf
cmp
or
ins
cld
loopne
and
popf
repnz
inc
cmp
sbb
(bad)
icebp
pop
loop
mov
sub
jnp
mov
pop
jae
ret
sbb
out
les
pop
loop
cmp
add
mov
jg
adc
mov
retf
pop
adc
mov
add
test
push
es
sub
(bad)
mov
(bad)
sbb
stc
repnz
and
loop
std
pop
(bad)
in
sar
imul
and
or
clc
inc
(bad)
test
dec
(bad)
repnz
xchg
(bad)
movs
mov
inc
sub
int3
and
cmc
pop
jbe
jno
loop
or
mov
adc
sbb
mov
xchg
jne
sub
shl
ret
mov
cmp
push
sub
mov
test
mov
pop
scas
mov
ret
pop
pop
mov
iret
retf
mov
mov
(bad)
js
and
sub
pushf
nop
das
movs
push
je
std
neg
retf
cmps
mov
push
and
rcr
rcl
(bad)
retf
xor
dec
fdiv
pop
outs
inc
pop
addr16
shl
rcr
pushf
jl
push
mov
pop
push
cmps
dec
mov
cmp
xchg
ret
push
pop
fwait
test
cmp
ss
add
repz
cmc
push
cmps
ins
or
movs
outs
imul
and
sub
cmp
data16
add
into
and
jmp
mov
xor
cmp
dec
aaa
jp
adc
ins
(bad)
push
jmp
xchg
pop
dec
out
push
add
das
test
ins
push
mov
stos
fidivr
in
ror
pop
pop
idiv
cmps
cmp
and
mov
ja
rol
in
mov
fmul
jp
xchg
inc
jl
push
dec
in
out
cmp
push
mov
or
(bad)
ja
xchg
fild
fdivr
xchg
dec
jno
nop
repz
xchg
fwait
mov
mov
ret
mov
stos
fidivr
inc
cli
xchg
nop
pop
(bad)
push
dec
fnstcw
pop
stos
ficom
gs
jb
arpl
gs
out
(bad)
(bad)
mov
dec
adc
mov
jmp
mov
repnz
shl
popf
add
je
jmp
lahf
iret
into
jp
sub
or
or
shl
inc
mul
push
pop
out
dec
(bad)
(bad)
loop
mov
cld
call
ja
in
jecxz
jns
xor
sub
not
or
push
rol
cmp
shr
scas
ss
pop
xor
dec
in
mov
adc
ja
and
cmp
xor
pop
movs
sbb
das
xchg
movs
fdivr
sub
jmp
lea
mov
mov
or
xor
jp
or
sub
outs
xchg
push
call
mov
out
addr16
mov
outs
push
scas
fsubr
adc
or
jae
jo
mov
jle
stc
cs
xchg
pop
push
pop
cdq
jnp
mov
stc
in
adc
xor
enter
aas
enter
lods
popa
sub
mov
sti
jb
inc
xor
mov
and
call
or
retf
push
push
in
or
adc
and
out
in
(bad)
dec
(bad)
lahf
daa
push
push
fwait
sti
out
cwde
ret
dec
mov
add
mov
call
fdivp
sbb
mov
mov
jmp
xor
lods
in
sti
xchg
int
xchg
repz
fistp
mov
push
cmps
inc
mov
cld
or
xor
push
repz
data16
jbe
das
std
jo
add
pop
sub
jns
xor
add
pusha
mov
jnp
push
mov
and
mov
ror
mov
dec
fdiv
ret
and
jge
movs
inc
cmps
xchg
fdivp
mov
adc
jo
cs
aaa
jg
cmps
adc
inc
inc
stc
inc
add
push
jnp
pop
sub
ins
clc
xchg
push
or
fist
add
and
inc
pop
fs
es
push
pop
iret
ja
js
aam
movs
jl
fstp
mov
dec
in
mov
neg
lds
test
and
cmp
adc
dec
in
mov
fcmovb
cli
xchg
lds
push
xchg
cwde
cli
test
push
addr16
fld
out
(bad)
and
dec
jmp
mov
je
lds
xchg
sar
mov
xor
sub
retf
xchg
(bad)
mov
pop
fcom
sbb
test
adc
test
xor
jnp
mov
mov
cmp
imul
push
sbb
dec
cld
jle
stc
mov
enter
(bad)
fidivr
sbb
add
mov
jecxz
sar
push
mov
sbb
fld
dec
test
fnstcw
aaa
test
sub
sti
mov
jbe
loope
mov
ror
xchg
jae
cmc
lea
fucomi
xchg
sbb
fcom
dec
addr16
add
push
fs
xlat
pusha
call
icebp
inc
pop
and
pushf
jp
mul
mov
loopne
in
adc
sub
enter
scas
stos
loopne
jbe
leave
lahf
iret
jg
inc
add
push
mov
push
repz
mov
shr
sub
repz
test
xor
aaa
jmp
(bad)
jo
xor
mov
pop
pop
dec
nop
mov
(bad)
jo
sahf
inc
in
int3
push
je
ja
fs
mov
or
cmp
test
out
fs
cli
aaa
xor
loop
sar
fcmovne
mov
mov
sub
lods
add
div
jnp
push
inc
enter
xlat
or
push
mov
icebp
popf
movs
sbb
scas
(bad)
int
jmp
sbb
pop
div
test
shl
je
pop
push
rcl
xor
add
jmp
pop
cmc
retf
scas
add
pop
inc
mov
sti
mov
sahf
retf
add
add
cdq
shr
ja
enter
push
cmps
in
fwait
cmp
xlat
adc
je
ror
push
int
ja
inc
pop
out
xchg
and
xchg
stos
sahf
mov
es
cmp
icebp
dec
mov
mov
dec
enter
mov
or
and
aas
movs
ret
mov
(bad)
mov
or
call
sub
pop
xchg
jecxz
in
out
sar
adc
retf
dec
ins
icebp
inc
aad
xor
cld
inc
pop
repnz
sbb
ss
sub
push
js
div
pop
or
and
dec
and
xchg
jg
or
mov
pushf
mov
clc
stos
es
stos
or
addr16
in
mov
cld
jne
repnz
scas
mov
call
mov
pop
sub
sar
aad
loopne
dec
and
ss
cmp
jp
push
(bad)
inc
loop
ds
dec
xor
adc
in
out
xchg
sub
mov
dec
mov
cmp
cmp
ds
mov
dec
test
gs
pop
or
add
sbb
xor
popf
or
xor
mov
adc
xchg
sub
mov
cli
ins
jnp
daa
pop
dec
leave
and
push
push
retf
pop
dec
enter
sbb
(bad)
cpuid
xchg
je
dec
or
scas
push
jge
mov
mov
jno
inc
jl
push
bound
adc
or
movs
add
xchg
es
xchg
mov
imul
dec
cmp
fimul
adc
xchg
dec
mov
adc
pop
ja
std
mov
dec
add
pop
jmp
jmp
movs
ret
jmp
loop
cmp
pushf
or
gs
sbb
mov
fst
aas
mov
or
push
pop
rcl
dec
bound
xor
mov
daa
inc
ds
test
aad
call
cwde
imul
out
mov
shl
bound
imul
or
dec
idiv
cmp
dec
mov
fld
out
gs
cmc
push
mov
dec
jae
loopne
jnp
mov
pop
xchg
scas
movs
shr
addr16
js
dec
outs
mov
push
xchg
rol
jae
cld
int
arpl
push
std
jge
jns
je
aam
and
cmps
sub
and
pop
adc
xchg
imul
(bad)
call
mov
sub
clc
mov
loopne
mov
push
inc
scas
sbb
jae
sub
mov
cmp
cmc
add
call
(bad)
loope
mov
loope
movs
data16
test
sub
xor
pop
or
call
pushf
ss
call
xchg
xchg
push
dec
mov
add
mov
das
xor
jecxz
movs
jl
not
xchg
hlt
les
test
outs
mov
dec
sub
and
sub
push
push
xor
inc
mov
rcl
call
stos
adc
ret
in
jae
pop
jmp
leave
add
addr16
jae
daa
jmp
outs
cmp
mov
jne
and
push
dec
and
mov
adc
and
add
or
shr
xor
cwde
push
push
jmp
bound
call
shr
dec
data16
cli
dec
lods
inc
outs
movs
pushf
shr
(bad)
fist
mov
sub
fstp
jmp
int
and
ins
cmps
jmp
outs
test
pop
aad
ror
pop
sbb
mov
loop
ds
inc
les
ins
xor
(bad)
imul
xchg
or
jb
jl
ret
or
(bad)
and
stc
xchg
popa
push
aas
xchg
jle
mov
idiv
add
loop
jle
ss
je
ret
bound
mov
jl
mov
pop
shl
adc
popa
or
cmp
and
stos
inc
or
fistp
push
inc
out
clc
xor
ror
clc
(bad)
push
cwde
imul
outs
test
and
mov
stos
repz
in
jmp
lea
mov
ins
xchg
or
sub
mov
stc
and
adc
pop
push
xlat
retf
popf
xchg
sbb
lahf
stos
mov
and
xchg
out
sub
shl
sar
pop
call
xor
jne
test
loope
sub
jns
jg
fldenv
xlat
jle
or
jmp
cmp
icebp
pop
mov
mov
out
sub
movs
sbb
or
call
in
xor
les
sub
adc
clc
into
loope
xchg
mov
sub
jmp
into
pop
push
cmp
push
xchg
push
jl
out
pusha
lahf
fs
les
cmp
mov
add
push
jl
data16
adc
adc
cmp
mov
mov
retf
ss
pop
xor
xchg
inc
(bad)
fwait
push
push
and
leave
xor
out
push
(bad)
push
lock
sahf
cmp
pop
jl
sub
add
push
cmp
cli
add
mov
inc
mov
movs
pop
jae
mov
cmps
ficomp
cmc
jg
nop
iret
idiv
iret
xchg
mov
in
(bad)
sub
mov
ins
loop
dec
shl
sbb
mov
jae
and
jmp
adc
aas
mov
(bad)
cmp
or
and
push
mov
mov
mov
aad
inc
pop
stos
jecxz
clc
out
fwait
cmp
cmp
inc
sub
jo
pop
pop
mov
cli
pop
cmp
mov
outs
jge
out
ret
jge
mov
xchg
mov
pop
outs
fst
fldz
mov
and
and
stos
jmp
imul
add
push
pop
scas
xchg
xor
inc
mov
mov
xlat
xor
sbb
mov
loop
popf
shl
jnp
push
mov
mov
and
sbb
pop
or
xchg
ins
inc
cmps
cmp
mov
mov
into
sbb
stos
ret
lods
jmp
push
pop
xor
out
jne
sbb
jp
test
call
or
mov
cmp
pop
sti
out
jo
bound
push
xchg
cwde
push
xor
(bad)
xor
or
fsub
and
mov
mov
jp
mov
push
sbb
pop
push
cmp
and
cld
mov
inc
daa
mov
pop
mov
jl
jo
shr
push
xchg
jg
pushf
lds
rcr
pop
cmc
mov
or
add
pusha
sub
mov
lahf
stc
lahf
pop
arpl
jae
cmp
xor
test
push
mov
pop
fsub
mov
xchg
cmp
sbb
lock
dec
sub
fimul
cmc
ja
dec
jns
loopne
arpl
movs
ret
xor
retf
int3
jno
movs
jb
push
repz
adc
inc
xor
push
add
cmp
dec
inc
mov
fist
fimul
pop
mov
and
rcl
rcr
scas
clc
dec
adc
mov
mov
call
cmc
fwait
sub
loope
rcr
mov
clc
iret
iret
icebp
push
mov
pop
xor
lds
push
fcom
and
jecxz
mul
mov
scas
out
jge
mov
and
and
div
popf
inc
std
mov
out
cmp
fxtract
pop
push
push
mov
(bad)
ffreep
arpl
xor
add
test
sub
loopne
lds
xor
fadd
ret
xchg
pop
xor
jae
clc
sub
add
aad
js
imul
mov
sub
sbb
shl
cmp
inc
fucom
pusha
and
pop
cld
fcom
and
js
dec
cmp
cdq
data16
in
loopne
imul
repnz
in
dec
out
outs
add
and
cmp
aam
bound
not
adc
aaa
(bad)
out
call
inc
loopne
pop
fmulp
cs
xor
sub
mov
movs
inc
mov
and
or
jae
loope
jb
mov
in
adc
mov
inc
push
cs
add
add
mov
mov
add
je
cld
mov
dec
sub
push
cwde
lods
dec
xchg
call
sub
les
ret
cld
into
add
stos
jns
lahf
arpl
cmp
fucompp
inc
test
idiv
dec
or
pusha
cmp
or
mov
(bad)
sub
add
pop
mul
clc
xchg
lea
push
jmp
ins
repz
repz
mov
out
mov
in
push
in
sub
jo
pushf
sbb
jbe
inc
adc
jecxz
xor
jbe
data16
test
mov
sbb
jno
mov
int
cmp
sub
(bad)
push
fstp
aas
inc
fs
jmp
fadd
scas
test
xor
add
aad
pop
cmps
sub
and
mov
fst
(bad)
arpl
ss
sbb
pop
mov
push
mov
pop
movzx
mov
pop
out
retf
out
add
(bad)
push
adc
pop
rcl
jg
jnp
xchg
cs
jmp
jmp
in
mov
jg
adc
pushf
popf
scas
add
or
sbb
outs
pop
fptan
ret
mov
sbb
inc
ret
mov
leave
add
test
push
test
cwde
sub
fmul
stos
in
cmp
jnp
sti
cdq
movs
inc
(bad)
adc
hlt
shr
jp
lea
fiadd
or
lds
call
rcl
(bad)
das
pushf
sub
xor
xchg
nop
xchg
repz
push
sub
dec
pop
push
inc
push
repnz
out
fdiv
jg
fistp
push
in
xchg
fistp
clc
aaa
jns
xchg
test
lock
sbb
adc
dec
pop
cmp
nop
jo
inc
inc
ficom
push
xchg
push
shl
ret
out
scas
imul
adc
mov
mov
mov
dec
stc
icebp
fs
test
es
mov
hlt
sub
or
mov
dec
xlat
cmp
clc
(bad)
outs
sar
mov
cmp
xor
push
cmp
inc
cmp
mov
in
pop
fdivr
(bad)
daa
out
call
mov
ret
das
pmaxub
das
enter
add
cli
push
ror
sub
xlat
bound
add
rcr
fs
mov
clc
xor
clc
push
inc
mov
out
adc
sbb
pop
or
retf
dec
sbb
push
pop
xchg
scas
adc
out
loopne
scas
mov
cli
pop
(bad)
cmp
xor
mov
sub
push
add
retf
scas
pop
out
retf
lds
jb
add
cmp
sub
mov
xor
sub
ja
jns
push
sbb
jp
nop
(bad)
or
xor
mov
hlt
sub
mov
or
dec
mov
mov
jo
retf
gs
js
sbb
test
inc
test
in
jmp
rol
or
mov
mov
call
cmp
mov
jb
mov
sub
fcmovnb
je
mov
xor
add
adc
inc
repz
movs
dec
mov
cmps
and
sub
mov
jo
xor
cmovns
mov
adc
sub
fidiv
lea
add
(bad)
out
fstp
fsubr
arpl
pop
pop
outs
loop
je
ss
dec
repnz
lahf
test
cmp
ss
fdiv
aad
pop
xor
push
inc
adc
daa
imul
scas
xchg
and
outs
inc
push
(bad)
pop
dec
cmp
int3
es
jnp
mov
or
shl
out
(bad)
cmp
les
call
icebp
pop
push
sahf
mov
dec
lods
mov
mov
sub
xchg
mov
frstor
call
mov
or
jg
xor
cmp
int3
sub
outs
mov
mov
enter
aad
mov
sub
xchg
div
les
ss
mov
retf
test
dec
lods
aas
add
xchg
jbe
mov
sbb
xor
fisubr
test
jae
sub
cmp
cmp
pop
push
(bad)
shl
clc
mov
imul
cmp
stos
cmp
cs
ja
ins
add
dec
leave
jle
ror
xchg
mov
sub
sub
retf
rol
cmp
popa
loope
pop
xor
mov
inc
cmp
dec
(bad)
or
or
scas
sub
jmp
(bad)
into
sti
xchg
xchg
sub
sar
push
xchg
cmc
int
pop
adc
imul
mov
xchg
out
aam
bound
arpl
fsubrp
das
push
shr
jp
inc
adc
push
cwde
jle
or
mov
inc
nop
mov
mov
jp
sbb
data16
fstp
sbb
and
mov
jno
push
jge
jae
mov
adc
mov
out
cli
pop
loopne
inc
inc
adc
pop
xchg
jg
xchg
rol
(bad)
pop
pop
fisttp
mul
fs
test
mov
xor
bound
ss
xchg
push
dec
(bad)
cmp
and
pop
push
iret
movs
adc
(bad)
jns
aad
pop
in
sub
fcomi
(bad)
push
aad
test
pop
cmp
pop
int
dec
popa
pop
std
xor
cld
cmps
(bad)
sbb
adc
add
sar
mov
repz
xlat
pop
jg
in
fst
push
mov
adc
xor
add
das
(bad)
stos
stos
cmp
jmp
pop
add
aas
xchg
sahf
mov
inc
and
mov
jle
(bad)
sbb
pop
out
pop
push
scas
or
cmps
lds
pop
jne
mov
mov
xor
xchg
jmp
adc
popa
pusha
mov
outs
out
retf
fisttp
xchg
outs
or
nop
call
aam
mov
xchg
sbb
cmp
dec
clc
in
movs
sbb
icebp
or
xor
push
test
dec
leave
div
pushf
mov
fcmovb
mov
cwde
or
loope
sub
fidivr
call
dec
ret
daa
inc
mov
add
add
clc
es
retf
add
xchg
pop
cmp
lds
jns
loop
xlat
clc
pop
xchg
ja
sub
or
push
pop
inc
outs
ds
dec
call
adc
jbe
ins
mov
jmp
cld
push
jmp
lds
mov
(bad)
and
fild
mov
mov
jg
fdiv
xor
lods
jmp
fwait
mov
call
ficom
mov
loop
in
pop
js
push
nop
inc
js
cmps
pusha
add
shr
out
push
inc
ficom
and
fwait
outs
jecxz
iret
aaa
pop
das
icebp
or
xchg
and
into
add
pop
pop
mov
icebp
xor
dec
push
xor
adc
and
dec
ret
xchg
sub
sub
stc
iret
mov
test
jmp
cli
(bad)
mov
xor
push
adc
push
jp
dec
fptan
xlat
ds
bound
mov
add
push
dec
sbb
sub
cmp
sar
test
or
sub
jno
adc
(bad)
test
repz
mov
xor
xchg
or
cmps
ins
mov
cmp
xchg
jae
shr
cld
mov
sbb
adc
mov
adc
movs
out
inc
test
ins
imul
cld
outs
pop
stc
in
push
fidiv
push
neg
mov
jl
cmp
inc
gs
push
ds
mov
repz
xchg
stos
push
adc
fs
ins
in
fcmovnbe
or
dec
cmp
jno
scas
jne
in
pop
jmp
lods
aad
mov
ss
leave
clc
pop
and
jne
daa
ret
ret
aad
jmp
jmp
fld
push
iret
sub
ret
repz
jg
das
fs
fcmovu
into
icebp
(bad)
in
icebp
into
mov
xchg
xlat
mov
fldenv
pop
fcomp
shl
scas
movs
out
cdq
rol
sbb
imul
aaa
sub
lea
movs
jne
ins
aaa
das
ret
cmps
out
popa
aad
inc
xor
inc
adc
jb
clc
shr
arpl
jo
jb
into
dec
xor
inc
or
retf
loop
jle
and
sub
js
mov
mul
pop
sti
shl
jecxz
jno
dec
in
dec
jl
push
inc
ss
cld
xor
sahf
or
pop
and
shr
int3
xor
cmp
push
loope
cmps
inc
xor
adc
dec
das
iret
cli
aad
cwde
nop
inc
pop
cmp
dec
cmp
xor
pop
inc
inc
jge
(bad)
adc
xchg
push
ror
pop
sbb
aam
adc
shl
cli
pop
push
push
xor
bound
cmp
sub
lods
push
lods
fsubp
fist
out
adc
mov
mov
cmps
fxtract
cmc
sub
sbb
js
jle
mov
ror
adc
call
pop
das
lods
out
out
inc
jg
fs
pop
cmps
push
push
xchg
add
or
int3
or
fistp
or
inc
adc
push
mov
clc
add
jg
pop
imul
(bad)
mov
sub
jno
dec
push
(bad)
xor
sub
in
sbb
out
addr16
into
sub
inc
ds
dec
rcr
inc
out
or
ret
out
cmp
dec
shl
mov
cmps
mov
inc
pop
(bad)
xchg
jnp
jle
adc
lahf
pusha
repnz
mov
loope
sbb
jnp
xlat
inc
jge
arpl
popf
xor
push
xchg
jb
mov
adc
mov
sbb
add
sub
cdq
test
mov
sbb
xor
call
aaa
repz
mov
popa
mov
inc
std
aad
mov
xchg
and
inc
bound
ror
and
xchg
nop
pushf
pop
in
cmp
mov
sbb
out
es
adc
fpatan
retf
call
rol
mov
and
xchg
mov
icebp
or
out
add
sbb
out
dec
add
inc
in
in
arpl
xor
cmp
xchg
and
popa
sbb
mov
jne
inc
std
fdiv
jo
dec
pop
add
dec
leave
popa
dec
adc
in
jmp
xchg
je
sub
sub
aad
(bad)
mov
sti
xchg
sub
xor
or
inc
vunpcklpd
mov
iret
outs
ret
inc
cdq
adc
loop
jge
adc
icebp
push
ins
in
xor
in
xor
call
mov
shl
adc
mov
pop
ja
repnz
cld
and
mov
addr16
push
in
mov
test
retf
mov
mov
ja
xor
outs
rcr
(bad)
cli
jbe
out
inc
lock
data16
ja
mov
dec
retf
adc
inc
mov
mov
bound
xchg
add
fisub
inc
sbb
dec
add
jmp
add
inc
add
jmp
neg
not
(bad)
push
xor
inc
cmp
addr16
push
outs
and
mov
xchg
cld
mov
push
into
xor
retf
cld
aas
loope
mov
arpl
jno
mov
dec
call
xchg
jmp
mov
ror
or
fucomi
xor
xchg
push
mov
add
and
or
inc
add
inc
push
push
retw
and
movs
ja
dec
fdivr
repz
push
enter
and
add
icebp
es
sbb
fmul
adc
jl
sub
jl
fiadd
daa
nop
lods
std
xor
mov
pop
adc
pop
adc
push
neg
int
lds
add
push
rol
mov
(bad)
mov
js
(bad)
(bad)
xchg
jb
(bad)
clc
sub
nop
icebp
or
(bad)
cmc
adc
aaa
ret
mov
sub
pop
jmp
or
ret
movs
add
addr16
daa
push
cmp
xor
test
cmp
cld
mov
jno
dec
loope
fsubr
fsubr
cmps
adc
ss
add
push
sbb
sub
xor
shr
jb
ja
mov
mov
adc
push
jecxz
sbb
or
daa
mov
dec
inc
movs
cmp
loop
jae
shl
cld
push
mov
fisub
xchg
xchg
push
mov
inc
mov
int
cmp
adc
jmp
sbb
out
test
xchg
aas
xchg
mov
sar
cwde
pop
add
and
enter
sahf
mov
js
adc
movs
push
sar
xchg
cmp
xchg
jb
and
imul
mov
lds
mov
xchg
data16
out
hlt
hlt
sub
jb
mov
sar
loope
inc
jmp
inc
out
rcr
mov
ficom
dec
dec
imul
mov
or
or
les
push
xchg
cmp
cmp
(bad)
das
sub
aam
inc
push
adc
mov
fcom
mov
(bad)
push
jmp
adc
int
pop
int
xchg
jns
xlat
out
and
jge
jb
les
xchg
mov
or
mov
ror
pop
sbb
dec
(bad)
cmps
jno
(bad)
add
dec
inc
pusha
xchg
dec
jne
lock
pop
inc
mov
mov
inc
lea
sbb
xor
xchg
stc
test
pcmpgtd
dec
jmp
sti
pop
xor
idiv
adc
mov
mov
jo
cmp
inc
cmps
add
leave
stc
push
dec
aaa
mov
bound
pop
fsubp
outs
outs
int3
aad
xchg
pusha
es
inc
jbe
retf
gs
in
int3
cmps
push
jo
inc
out
xchg
idiv
dec
lock
adc
mov
js
std
data16
out
ucomiss
data16
cdq
mov
jmp
inc
(bad)
(bad)
and
sahf
mov
sahf
inc
or
mov
gs
push
test
retf
xor
dec
mov
mov
inc
loope
test
cmp
and
push
jecxz
int
(bad)
rcr
dec
cmp
int3
ins
jns
adc
cmps
adc
(bad)
sti
ss
mov
sub
push
jbe
cli
into
cmps
retf
pusha
push
movs
sbb
int3
adc
or
retf
sbb
mov
sub
pop
cwde
xlat
and
int
or
mov
jns
inc
add
cmps
pop
int
adc
and
dec
scas
test
mov
push
ds
add
mov
fnstcw
retf
mov
sbb
xor
iret
xchg
xlat
call
add
xbegin
sbb
dec
sub
xchg
push
fcom
aad
call
jmp
fnstsw
push
call
mov
xchg
std
stc
ja
and
div
mov
call
pop
add
imul
push
lock
gs
jge
cmp
jb
xor
popf
inc
hlt
pop
call
and
repnz
or
leave
jg
int
dec
mov
outs
push
sbb
into
jno
mov
cmp
mov
(bad)
mov
stos
adc
clc
dec
lock
inc
call
(bad)
mov
stos
inc
sub
int3
std
adc
xor
mov
inc
jb
call
ins
adc
inc
mov
xchg
sub
rol
or
xchg
imul
mov
out
xchg
test
sbb
xor
mov
or
ja
pop
in
js
in
dec
add
and
xchg
outs
inc
or
mov
sub
mov
mov
lods
inc
popa
pop
nop
dec
and
scas
ins
adc
push
mov
loope
mov
sbb
mov
popa
xchg
mov
or
daa
mov
xchg
les
popa
dec
or
shl
in
push
aas
popa
sub
or
sub
mov
push
mov
pop
inc
loope
in
popa
sbb
pop
data16
fstp
aaa
jns
jmp
arpl
ja
call
adc
adc
sub
mov
pop
mov
imul
loop
mov
jg
jo
xor
pop
cmps
mov
mov
mul
push
push
sbb
mov
ss
adc
dec
fsubr
jge
push
sbb
cwde
mov
sub
movs
(bad)
inc
mov
loopne
dec
and
mov
cmp
mov
jecxz
inc
std
fisttp
add
(bad)
dec
jbe
pushf
rcr
cmp
test
into
mov
test
xchg
loopne
cmp
call
fprem
mov
fcom
nop
stc
data16
cmps
pop
push
jns
mov
inc
mov
icebp
mov
(bad)
xchg
mov
sbb
add
adc
stos
or
ja
inc
or
jae
jo
mov
lds
pop
bound
ins
std
pop
aaa
dec
loopne
retf
fdivr
pop
ins
cmp
aas
xchg
retf
fwait
(bad)
sub
or
jmp
xchg
sbb
scas
popf
aas
push
orps
int3
(bad)
inc
les
jns
cwde
xor
xchg
mov
inc
setnp
mov
sahf
mov
call
in
and
or
mov
stc
push
push
es
cmp
lahf
shr
scas
cmp
dec
jb
call
or
pop
push
push
dec
jno
scas
mov
xchg
jge
inc
mov
or
sbb
mov
sub
rcr
adc
neg
shr
pop
jbe
inc
addr16
xor
out
dec
int3
(bad)
lock
repnz
leave
mov
xor
xor
bound
adc
cmp
aam
ror
mov
sbb
repz
iret
xchg
add
xor
push
fwait
jo
ret
and
emms
and
ret
push
pusha
cs
stos
cwde
jno
rcl
push
cmp
push
xchg
js
fdiv
push
xor
push
pop
movups
pop
lea
retf
jno
jmp
icebp
leave
xchg
mov
add
dec
inc
cmp
jge
test
mov
inc
dec
pop
cmp
fld
push
pop
leave
jecxz
adc
ret
dec
out
test
out
das
dec
pusha
and
iret
sub
aad
xor
out
sbb
sbb
cmps
mov
(bad)
cmp
or
cs
mov
sbb
lds
leave
sub
add
sbb
ins
out
mov
out
lahf
int
enter
cmp
frstor
fidivr
adc
out
xor
test
imul
mov
mov
inc
xor
xchg
dec
mov
xor
iret
mov
pop
jg
aad
fistp
mov
in
or
mov
xchg
bt
mov
sub
push
leave
xor
or
call
fstp
(bad)
hlt
cmps
xor
jl
cmp
jge
cmp
out
mov
movs
jns
mov
stc
inc
adc
mov
mov
push
aam
aaa
add
cmp
jmp
and
aas
stos
dec
out
cmc
ret
es
cmc
test
jecxz
movs
mov
movs
adc
mov
xor
adc
popa
sahf
add
sub
es
movs
or
iret
cmp
test
repnz
loope
add
je
add
or
loop
data16
fisttp
xlat
xlat
or
stos
ins
jl
scas
daa
jb
leave
scas
fistp
aaa
and
into
mov
adc
lock
ret
fcom
int3
sbb
shl
push
mov
movs
xor
ret
cmp
pop
lods
iret
sbb
cwde
aaa
or
dec
mov
mov
sub
jnp
mov
repnz
mov
es
in
movs
push
cmp
sub
adc
xor
push
fdivr
lock
stos
sub
imul
mov
add
dec
pop
inc
pop
movs
inc
mov
adc
out
outs
dec
imul
loop
xchg
mov
pop
test
sbb
and
mov
call
mov
inc
xor
mov
cmp
push
add
ficomp
mov
cld
je
adc
and
xchg
jbe
out
push
popf
iret
and
or
sub
lds
fld
sbb
fcomp
jl
xor
inc
inc
div
jne
sti
sub
mov
jb
push
cmc
push
cli
hlt
and
sbb
adc
and
lds
inc
jne
mov
and
mov
test
inc
or
dec
js
pop
cli
popf
push
jns
loop
shl
or
jae
cld
arpl
fimul
jp
inc
push
and
retf
cmp
div
shl
mov
push
and
movs
ja
addr16
xchg
cmp
dec
idiv
add
imul
mov
es
int3
dec
les
cmp
movs
in
jb
jge
pushf
jno
fnstenv
adc
sti
aas
xor
push
imul
pop
mov
cmp
cmp
in
push
add
inc
loop
and
scas
inc
hlt
lock
jmp
ds
add
int3
and
push
ins
inc
xchg
dec
out
jmp
dec
stc
xor
out
ja
outs
xor
retf
jmp
xchg
or
and
lea
mov
cmps
and
cmps
add
push
jp
arpl
out
sti
adc
ins
(bad)
mov
mov
add
xor
outs
or
mov
call
call
call
xor
jmp
cmc
mov
jmp
mov
xchg
frstor
add
ins
sbb
xchg
pop
dec
sti
shl
mov
pop
mov
adc
mov
mov
mov
fild
ror
arpl
daa
cwde
or
bound
hlt
(bad)
arpl
sbb
(bad)
stos
or
mov
xor
fs
out
inc
mov
mov
pop
in
add
push
xchg
ins
or
jno
dec
into
push
pop
mov
scas
(bad)
(bad)
sbb
mov
or
mov
mov
test
stos
jno
dec
in
xchg
inc
inc
int
int3
popf
or
xor
ror
outs
or
repz
test
ficom
inc
inc
jge
or
lds
sub
sbb
arpl
es
inc
mov
jmp
jle
dec
or
jge
and
adc
push
ins
fst
daa
nop
movs
retf
add
pusha
pop
int
jb
mov
mov
(bad)
das
mov
mov
jae
rol
cli
mov
push
pcmpeqw
pop
ja
xor
jne
mov
inc
fbld
in
xchg
inc
push
jge
xor
sub
pop
jbe
jge
jle
rol
std
xchg
and
pop
test
test
ja
int
out
retf
add
push
jmp
sahf
fbstp
and
ror
pop
cmc
bsr
iret
sbb
shr
aad
mov
inc
jmp
jl
out
clc
neg
add
nop
add
cmps
xor
(bad)
out
mov
pop
mov
stos
xor
lods
add
je
fs
and
out
sub
daa
cmps
les
dec
or
push
in
mov
adc
inc
or
aaa
hlt
mov
(bad)
push
mov
add
(bad)
loop
(bad)
push
in
xchg
fs
lds
es
xor
xchg
adc
jae
loop
cwde
rcl
sub
sub
outs
icebp
mov
sbb
fwait
pop
sbb
xchg
jmp
ins
or
add
mov
mov
ins
retf
cmp
xlat
call
adc
cmps
jns
les
les
mov
mov
lods
push
stos
and
xor
cmp
outs
jmp
pop
jnp
jno
jae
das
lods
pop
call
add
(bad)
loope
ret
bound
mov
add
pop
or
cs
iret
xchg
push
loope
mov
retf
jp
and
es
push
xor
lods
sbb
or
lods
push
(bad)
enter
jge
adc
dec
pop
inc
cli
pop
jne
mov
in
add
or
jecxz
pop
std
mov
cld
stos
int3
sub
aaa
push
das
jl
add
out
fcmovnb
add
mov
imul
mov
add
xor
and
ins
inc
xchg
aaa
sbb
mov
push
fsubr
inc
call
aas
frstor
mov
lods
or
push
or
outs
fs
jmp
xchg
and
push
add
popf
addr16
pusha
(bad)
fimul
mov
outs
ss
lock
mov
xor
jb
lods
and
cmp
or
jae
cmp
jbe
and
ja
xchg
fldenv
mov
xchg
into
push
loopne
pop
ins
push
mov
aad
push
add
pop
push
daa
popa
add
mov
xchg
mov
loope
test
(bad)
dec
mov
repz
cmp
cmps
popf
and
xor
lock
outs
ss
jl
test
fisttp
jecxz
sahf
push
pop
add
mov
lods
pop
add
data16
outs
jecxz
dec
sbb
out
sahf
push
in
ins
es
cld
inc
xor
addr16
dec
(bad)
enter
popa
(bad)
(bad)
mov
push
fsubrp
jmp
ins
jecxz
mov
imul
mov
out
jp
aad
ins
cmpxchg
sub
cld
stos
cmc
push
push
dec
js
or
(bad)
das
push
aaa
sbb
movs
les
stos
(bad)
cmc
shl
xchg
sahf
adc
xlat
pop
xchg
addr16
es
sbb
mov
adc
jno
add
jno
pop
nop
mov
mov
mov
lahf
adc
ficomp
mov
mov
cmc
mov
clc
mov
add
aad
jmp
loope
outs
push
data16
add
mov
test
mov
push
out
loopne
and
rol
adc
into
sti
inc
or
pop
jo
dec
leave
sbb
push
sti
fwait
cmp
sub
mov
xchg
je
sbb
jns
sbb
repnz
sbb
jnp
aaa
(bad)
in
push
fist
lock
nop
mov
jge
pop
test
ins
scas
ss
and
dec
sub
inc
mov
sti
ins
(bad)
xchg
mov
(bad)
js
push
imul
loope
add
pushf
jmp
dec
fmul
push
xor
daa
test
push
xchg
aas
mov
(bad)
shl
xchg
loope
add
lock
sub
(bad)
or
aam
push
pop
inc
out
shl
aaa
pop
inc
ja
cld
(bad)
jg
add
push
aam
(bad)
loop
push
inc
repz
lock
(bad)
aam
out
loopne
sub
pop
fsubr
inc
lea
loop
fstp
add
retf
cmp
imul
pop
fwait
jle
imul
adc
test
push
shl
push
test
adc
std
aaa
js
pop
ds
and
imul
sub
in
jl
push
or
push
cmp
daa
cli
jecxz
in
jp
in
repnz
adc
push
pop
fs
jnp
bound
inc
cmp
dec
stos
cmp
mov
cmps
stos
pop
push
adc
inc
ins
xchg
push
jno
stos
aad
clc
xor
retf
sahf
push
jno
arpl
mov
inc
rol
fld
xchg
xchg
add
or
mov
pop
into
pop
lahf
ror
jmp
jge
ss
xchg
jg
popf
fdivrp
aas
mov
add
and
xchg
es
ret
cmp
push
or
pusha
sbb
ficomp
jle
in
fdiv
dec
push
jb
cmp
and
je
fwait
jg
jnp
cmps
out
xor
fadd
jo
iret
push
shl
aam
adc
sbb
sub
and
out
adc
jb
or
sub
jb
jnp
pop
stc
(bad)
out
jle
push
sbb
(bad)
lahf
fxch
cmp
mov
mov
mov
(bad)
arpl
pop
lds
push
ud1
inc
nop
(bad)
xor
jmp
fild
dec
pop
sar
sbb
or
jmp
ret
jne
lock
daa
push
push
cld
sub
xchg
(bad)
fisttp
movs
ja
pop
loopne
add
inc
xor
shr
push
movs
ret
mov
fsub
cmp
push
(bad)
mov
sub
sti
and
mov
cwde
ret
cdq
xchg
movs
outs
add
std
fiadd
xchg
(bad)
icebp
stos
xor
pop
loop
xchg
cmp
out
repz
js
adc
xchg
aam
repnz
add
scas
mov
call
xchg
mov
mov
aaa
cmp
mov
leave
test
aad
test
mov
rol
mov
scas
jge
push
ror
push
test
ins
fsub
mov
push
loop
cs
xchg
jp
dec
push
ja
repz
out
or
in
int
inc
cmp
or
push
push
mov
push
mov
dec
pop
push
js
jg
inc
adc
(bad)
out
je
idiv
aas
je
aam
inc
cmp
test
fcomp
in
das
push
dec
sahf
scas
mov
rcr
sbb
(bad)
jb
pop
jmp
mov
rol
popa
(bad)
push
ds
in
or
movs
int
ds
(bad)
leave
adc
inc
and
xor
inc
cmp
pop
loopne
(bad)
jbe
xchg
xchg
call
mov
mov
sti
shl
fst
pushf
xchg
xchg
xchg
jp
notrack
adc
sahf
sbb
int
inc
aam
out
mov
fcmove
in
ror
mov
sub
dec
mov
mov
fisub
adc
jl
daa
outs
mov
xor
std
movs
jo
fmul
inc
inc
mov
and
push
xlat
daa
cld
ja
mov
test
dec
push
mov
inc
out
aaa
imul
sbb
int3
dec
xor
push
dec
jmp
into
xchg
adc
xchg
sbb
pop
mov
xchg
popa
(bad)
fadd
or
aad
scas
and
imul
adc
ror
dec
mov
add
cwde
je
push
jecxz
int3
adc
hlt
pop
(bad)
jle
dec
mov
mov
jp
sar
int
sub
ret
pop
mov
cli
nop
xchg
push
push
pop
inc
ins
lods
dec
xchg
shl
pop
xchg
cmp
(bad)
cmp
in
jecxz
dec
add
pop
jecxz
fsubr
js
jno
in
jmp
in
jnp
xor
mov
xor
stos
cmp
jle
mov
mov
(bad)
mov
outs
rol
sbb
add
jns
add
es
cmps
pop
jl
or
dec
ins
pcmpgtd
add
adc
mov
sub
or
push
out
into
xor
inc
lods
stos
dec
fisubr
(bad)
inc
dec
mov
pop
jle
loope
pop
lds
call
mov
das
hlt
in
pusha
mov
test
cmp
ret
imul
or
push
inc
jge
adc
in
and
pusha
jecxz
fwait
lock
fistp
add
mov
test
and
or
mov
aas
sbb
sbb
push
pop
fimul
and
imul
and
jnp
cli
dec
cmp
jno
dec
leave
push
ret
mov
sbb
xchg
test
or
cmp
jae
test
cli
enter
leave
xchg
mov
or
clc
mov
cdq
add
cdq
mov
mov
jp
push
jle
xchg
sahf
mov
dec
call
daa
cmp
and
mov
rcl
pushf
push
rcl
mov
pop
sbb
jl
(bad)
xor
add
jge
xchg
jp
stos
test
inc
adc
ret
push
sbb
mov
cmp
not
inc
loop
cmp
xor
add
sub
das
sub
mov
jecxz
sar
int
fild
adc
or
cmps
data16
popa
dec
inc
sbb
pop
les
in
mov
fs
jmp
int3
sahf
sbb
xchg
call
mov
bnd
addr16
scas
mov
mov
out
adc
mov
loopne
jbe
nop
out
mov
out
test
sub
adc
cmps
popa
mov
outs
adc
jnp
pushf
and
into
rcl
call
out
cmp
jno
call
jo
inc
mov
sub
movs
stc
add
fistp
jl
stos
add
call
jae
sub
adc
push
sub
push
(bad)
hlt
sub
xor
div
mov
pop
sti
ss
adc
and
cwde
xor
je
mov
fsubr
fwait
or
jne
into
sub
jle
loope
push
cld
vmovlps
cwde
sbb
(bad)
pop
shl
pop
fwait
adc
(bad)
clc
test
fisttp
clc
gs
outs
mov
aaa
in
mov
ins
int3
outs
sbb
jecxz
lods
cmc
mov
pop
sti
cmc
dec
mov
cmp
adc
xor
cld
inc
push
imul
call
test
mov
call
adc
xchg
pop
sbb
pusha
cmp
pusha
xchg
(bad)
inc
bound
xchg
push
dec
loopne
dec
test
fst
cwde
hlt
jbe
mov
mov
inc
sbb
lock
inc
fstp
push
xchg
rol
jle
inc
push
pop
mov
ror
pop
adc
dec
adc
lea
movs
and
cli
(bad)
test
dec
mov
and
push
(bad)
mov
jmp
das
fdiv
adc
pop
inc
and
scas
rcl
clc
(bad)
mov
cmp
aam
pop
lea
test
inc
std
fist
enter
xor
cmp
imul
or
pop
out
mov
cmp
hlt
mov
mov
icebp
call
out
pop
inc
push
mov
mov
adc
pop
cdq
ds
rcl
jmp
test
loop
mov
sub
cwde
data16
push
ja
mov
lods
pop
inc
sbb
test
fsubrp
xchg
cwde
lods
cld
(bad)
popa
push
add
xchg
cs
and
adc
lods
test
addr16
sbb
dec
jecxz
fidivr
pop
cmps
sub
pop
das
int3
mov
jne
jne
lods
xchg
mov
imul
les
ror
fmul
hlt
push
jg
jo
cli
retf
jb
test
jb
pop
sub
inc
outs
int
(bad)
xor
push
(bad)
lahf
mov
(bad)
arpl
mov
pop
pop
xchg
push
loopne
adc
loope
xchg
push
sub
je
enter
sbb
sahf
(bad)
ss
jmp
xor
shl
inc
jecxz
dec
adc
dec
nop
es
inc
jne
rcr
call
hlt
mov
push
daa
or
xchg
mov
loopne
(bad)
arpl
xchg
sub
jmp
add
jle
leave
cwde
ja
or
pop
jno
test
lods
sbb
(bad)
call
push
jp
mov
mov
cmp
imul
ret
int
inc
cwde
push
nop
test
dec
(bad)
enter
dec
ss
jo
mov
dec
push
xchg
jae
mov
(bad)
cmps
iret
inc
clc
scas
inc
mov
ja
adc
ror
ror
adc
pop
pop
arpl
adc
adc
add
xchg
inc
das
mov
adc
sub
xchg
cmps
adc
in
dec
sbb
es
and
movs
inc
in
into
in
push
pop
adc
call
push
sbb
pop
mov
pop
(bad)
sbb
pushf
sbb
jmp
inc
or
xchg
sti
stos
fs
mov
daa
addr16
test
mov
sbb
mov
or
(bad)
(bad)
add
push
rcr
dec
jne
jmp
cld
pusha
movs
mov
lods
imul
test
mov
mov
test
cli
or
out
pop
enter
or
mov
dec
cdq
cmp
mov
stos
dec
xor
inc
fwait
bts
mov
add
mov
mov
scas
ins
rol
les
mov
push
cwde
cmp
loope
fisub
mov
jb
mov
adc
cs
(bad)
ss
cmp
xor
and
or
push
aaa
js
add
je
mov
mov
inc
dec
pop
cmps
mov
push
xchg
mov
int3
jmp
sub
push
xchg
push
ds
sbb
loopne
imul
mov
mov
retf
ret
sub
dec
pop
pop
arpl
in
jmp
mov
ins
frstor
and
outs
mov
enter
int3
mov
cwde
bound
xchg
dec
inc
sar
stos
jcxz
movs
nop
push
push
sub
xchg
inc
mov
inc
mov
add
bound
leave
mov
pop
adc
cs
not
dec
lods
dec
div
repz
inc
xor
outs
retf
sub
mov
push
popa
inc
mov
mov
loopne
adc
dec
add
repnz
outs
xor
or
cmp
and
es
leave
clc
xchg
xchg
fstp
dec
lds
dec
jbe
inc
cmps
sbb
lds
adc
scas
outs
outs
jo
ret
int
lds
es
rol
mov
xchg
and
lock
fs
repnz
mov
ficomp
push
cdq
xlat
dec
arpl
jns
out
mov
(bad)
and
repnz
stos
xor
pop
adc
aaa
and
adc
imul
popf
mov
inc
inc
call
int3
fs
push
sbb
rcl
jecxz
mov
sub
rol
push
call
js
arpl
jbe
or
xchg
dec
mov
and
adc
(bad)
push
(bad)
(bad)
lods
std
dec
loope
lods
mov
rol
leave
pop
jno
jge
jns
inc
cmps
mov
sub
mov
out
adc
and
leave
inc
std
inc
sub
dec
aas
xor
sub
jbe
jp
jmp
xor
lock
inc
cld
sub
pop
aaa
fldenv
pop
jl
aas
aad
jg
in
cmps
sbb
dec
stos
add
std
push
jb
imul
icebp
test
cwde
fucomip
rcl
pop
idiv
pop
and
push
sbb
sahf
push
inc
mov
js
(bad)
xchg
call
and
ret
cli
pop
je
test
add
push
aad
hlt
inc
cmp
push
(bad)
int
popa
mul
lock
xor
fistp
adc
cmc
cs
pop
pop
sbb
movs
add
je
arpl
cld
xchg
repz
push
ds
push
push
mov
outs
adc
call
push
ficom
sti
and
xchg
mov
jge
dec
mov
pop
pop
imul
inc
out
fbld
dec
in
add
fwait
ror
adc
mov
stos
and
popa
movs
(bad)
hlt
int3
sbb
mov
cld
pop
mov
fst
jmp
in
cld
pop
mov
popf
xor
add
aas
lods
sub
repnz
arpl
or
outs
sub
test
sbb
inc
xor
sub
jno
cmp
(bad)
or
add
dec
xchg
push
ret
jo
clc
loopne
xchg
and
imul
add
add
cmp
test
inc
loop
or
sub
push
mov
enter
fwait
xchg
ins
imul
cmc
xchg
fadd
inc
leave
shr
mov
femms
sub
(bad)
loopne
ret
in
pop
sbb
lods
inc
cmp
lods
cld
sub
dec
cmp
jo
rcr
arpl
outs
ficom
adc
in
cmps
out
cmps
pop
push
xchg
(bad)
sbb
in
inc
sbb
sbb
rol
int
sub
in
cld
scas
xlat
lods
test
leave
sar
inc
jp
jmp
or
aas
mov
dec
lods
cdq
in
fisttp
inc
dec
push
jae
jmp
fldenv
and
adc
sub
hlt
jmp
mov
sahf
jg
cs
dec
mov
or
fwait
mov
ds
and
jecxz
(bad)
arpl
fstp
adc
dec
scas
test
push
xchg
retf
mov
retf
lea
loop
mov
sbb
test
mov
mov
mov
stc
outs
dec
shl
push
imul
cld
cdq
rcl
sbb
mov
fsubr
jnp
jo
nop
xor
dec
cwde
xchg
sar
push
js
adc
out
fidiv
jmp
mov
or
(bad)
in
mov
or
cmps
mov
lods
pop
imul
sbb
mov
xchg
adc
cmp
movs
std
push
jae
and
jg
jnp
and
(bad)
sbb
cmp
fist
adc
repnz
push
in
adc
cli
or
jmp
sub
leave
mov
add
pop
(bad)
xchg
iret
xor
add
or
popa
jne
bound
dec
gs
push
mov
cmp
add
sti
xchg
jmp
dec
(bad)
psadbw
jge
cmps
and
sti
sti
jle
inc
icebp
adc
pop
repnz
or
mov
(bad)
jmp
adc
adc
adc
adc
push
outs
add
dec
push
fbstp
and
fs
ins
pop
sbb
sbb
push
mov
mov
stos
arpl
repnz
jp
jmp
mov
pushf
rcr
xchg
daa
mov
pop
test
fsubr
cdq
add
mov
jle
cmp
mov
mov
xchg
xor
rcl
pop
sub
mov
pop
dec
mov
inc
(bad)
sahf
popf
leave
mov
ds
or
xor
loop
aas
fbld
imul
mov
iret
ret
cdq
mov
scas
vpackuswb
jmp
clc
push
sahf
or
data16
pop
popf
idiv
in
cmp
and
outs
jmp
and
dec
mov
outs
push
(bad)
mov
add
pop
add
sub
fdivr
movs
fdivrp
sbb
jecxz
lock
arpl
scas
mov
stos
call
clc
push
jmp
lock
sbb
push
push
popa
sub
dec
fcmovbe
pop
jmp
mov
mov
dec
adc
in
enter
aam
jae
movs
idiv
push
call
jbe
loopne
dec
or
in
aam
lock
mov
out
xchg
in
mov
jp
inc
enter
jmp
cs
inc
(bad)
out
pop
adc
aam
mov
rcl
xor
outs
retf
sbb
aaa
fs
xor
mov
outs
fst
movs
cdq
(bad)
sbb
and
dec
imul
or
or
mov
cmc
cmc
imul
loop
push
call
xchg
and
stos
and
ss
xchg
fcmovnu
data16
sti
jnp
pop
pop
dec
ja
mov
shl
xor
add
pushf
gs
in
cmp
sar
sbb
cmp
inc
fisttp
inc
or
daa
mov
push
jge
sub
test
cmp
sub
lea
cwde
fld
out
loopne
sti
and
add
adc
or
clc
outs
dec
push
and
xor
pusha
aas
add
cmp
cmp
(bad)
xor
repnz
adc
sub
adc
pop
(bad)
mov
jb
es
retf
mov
loope
xchg
lds
repz
add
xchg
jmp
test
xchg
pusha
sbb
inc
arpl
or
jp
mov
and
xlat
pop
lea
mov
in
bound
and
retf
jg
ja
mov
inc
jl
int3
(bad)
icebp
dec
je
add
add
and
jbe
fistp
es
je
push
push
cwde
popa
xchg
pop
loopne
out
(bad)
lds
mov
repz
inc
dec
pushf
fsubr
dec
jp
xor
das
(bad)
sub
sbb
int
jne
js
scas
inc
movs
inc
pop
sub
fild
call
dec
test
xor
sub
xchg
outs
xchg
mov
add
nop
(bad)
(bad)
rol
sbb
addr16
dec
mov
jl
(bad)
pop
add
pushf
push
repz
inc
add
ficomp
bnd
jne
inc
call
cmp
inc
mov
pop
xor
cmp
push
movs
pop
sbb
popa
imul
rcl
imul
pop
mov
or
xchg
dec
mov
test
stos
sbb
xchg
or
stos
jecxz
mov
push
xchg
dec
push
or
shr
xchg
cli
call
call
or
(bad)
jns
cmp
jp
mov
sub
ss
add
vpshufhw
push
pop
fmulp
push
push
xchg
add
dec
movs
pushf
pop
(bad)
ja
scas
mov
into
hlt
sbb
mov
cmp
sahf
pop
movs
loope
inc
scas
add
inc
jno
fwait
jnp
mov
fidivr
aas
int
iret
iret
sub
xor
sub
mov
cmp
or
leave
adc
jl
jmp
aaa
dec
(bad)
and
cmp
xchg
jle
mov
pop
add
mov
arpl
push
inc
(bad)
lock
test
(bad)
ins
or
or
adc
ss
dec
in
xor
out
jmp
clc
push
test
call
cmp
sub
sahf
stos
fmul
dec
pop
adc
mov
mov
sbb
add
mov
xchg
dec
xchg
xchg
xor
jnp
je
push
call
sahf
inc
and
mov
xchg
xor
jl
sti
repz
cli
jl
push
stc
sahf
push
test
jno
push
outs
bound
inc
jb
test
call
retf
std
es
je
mov
and
aas
mov
pop
push
imul
fisub
pop
adc
fnstcw
mov
mov
out
jp
in
mov
gs
or
(bad)
cmc
push
dec
cmps
sub
pop
push
jge
rol
jbe
(bad)
adc
retf
pop
fadd
test
cwde
push
jno
imul
dec
cmp
mov
push
add
(bad)
in
cmp
scas
push
fiadd
scas
test
loope
scas
call
inc
bound
push
xchg
jmp
push
fst
rol
lahf
adc
and
js
pop
aaa
add
dec
fnsave
(bad)
jmp
pop
fnstsw
mov
sub
outs
or
ins
loopne
mov
les
shl
cmp
push
push
adc
jnp
cmc
push
aam
dec
int
arpl
cs
cmps
into
xchg
xor
pop
and
push
leave
xor
gs
pop
loop
jl
test
loopne
mov
jmp
sub
lods
ret
fwait
mov
ss
xchg
std
in
xchg
test
push
hlt
in
sub
fidivr
cdq
ins
cli
aas
push
dec
mov
sub
mov
pop
xor
inc
mov
sbb
leave
scas
jmp
jae
dec
add
jnp
retf
mov
sub
mov
test
fwait
loope
imul
lahf
retf
sub
cmp
xor
add
cld
mov
jns
and
fwait
inc
xor
das
into
and
addr16
sahf
push
aaa
add
pop
cmp
aas
nop
xchg
xchg
cmp
aaa
sbb
mov
sahf
add
push
inc
ins
in
cmp
pop
jmp
sub
or
hlt
inc
loopne
ss
sahf
(bad)
out
stos
dec
les
sub
dec
pop
or
popa
(bad)
dec
(bad)
sub
inc
add
movs
and
mov
imul
int
inc
sub
cmp
mov
rol
sub
std
scas
test
adc
jbe
xor
out
mov
xlat
fwait
mov
call
sub
push
jns
mov
xlat
inc
and
(bad)
fst
gs
out
add
dec
jne
inc
add
jb
jno
ror
mov
iret
inc
lods
jns
out
mov
(bad)
adc
mov
les
adc
adc
and
ins
or
sub
add
scas
stos
mov
dec
retf
scas
ja
gs
mov
adc
fwait
and
inc
(bad)
inc
(bad)
jle
mov
daa
xor
repz
push
gs
loopne
loope
pop
jbe
fnstsw
push
cwde
mov
lock
das
lahf
popf
das
mov
jbe
push
loop
(bad)
fsub
sub
cmp
sbb
push
adc
xorps
mov
xlat
enter
bnd
pop
test
(bad)
or
aad
ret
or
jmp
les
fs
gs
push
mov
mov
ret
aas
je
and
sub
test
int
in
cld
out
cwde
mov
sub
inc
or
leave
into
shl
xor
fistp
push
repnz
jnp
and
adc
cmp
or
icebp
cmp
lds
xor
pushf
stos
int
mov
cmp
xor
leave
add
cli
mov
imul
ins
test
frstor
and
int3
sti
or
mov
outs
(bad)
into
and
mov
dec
cdq
popa
(bad)
sti
movnti
in
xchg
in
loope
push
inc
inc
and
into
push
fistp
addr16
inc
pushf
dec
div
push
or
jg
and
push
or
adc
int3
pop
sub
call
xor
xchg
xor
mov
xor
imul
add
jno
fcmovu
int
push
mov
add
xor
mov
sbb
xchg
sar
ss
xchg
out
xor
sbb
sbb
sahf
cmps
and
dec
stos
xor
sar
nop
aam
xor
mov
or
imul
mov
movs
mov
sti
scas
add
repnz
clc
xor
mov
dec
movs
call
pop
pop
loop
cmp
mov
pop
pushf
inc
jl
call
jne
mov
and
jl
push
lods
dec
leave
mov
push
inc
fcmovbe
enter
ficom
push
loop
into
add
pop
add
mov
push
fcomp
xor
mov
xchg
push
inc
cmc
int
test
test
ins
daa
es
enter
imul
xchg
xor
pop
mov
mov
loope
pop
jae
call
jne
and
in
cdq
mov
mov
dec
pop
pop
inc
and
mov
mov
aaa
mov
xor
lods
popf
pop
lds
inc
push
mov
sub
jecxz
fistp
imul
pop
mov
lea
cld
mov
add
movd
imul
jne
adc
ret
pop
pop
inc
loope
mov
neg
arpl
inc
je
xor
xor
add
mov
outs
repnz
stos
fdivr
sub
sahf
arpl
jnp
iret
xlat
ins
mov
inc
mov
leave
aas
xor
sub
xchg
out
jns
xchg
pop
outs
mov
scas
mov
mov
mov
sub
leave
dec
clc
jnp
xchg
mov
pop
sub
xor
push
jmp
jp
out
and
push
dec
sub
push
mov
movs
jno
pop
push
cli
(bad)
jbe
xchg
jne
or
int3
das
ret
xchg
idiv
lock
add
rep
call
xor
mov
xchg
(bad)
out
sbb
movs
inc
nop
push
in
loop
jno
sbb
repnz
and
daa
pop
mov
sbb
ins
mov
daa
inc
push
xor
and
test
push
mov
(bad)
jg
mov
xor
adc
dec
in
fs
jecxz
loope
sbb
ror
retf
out
add
cmp
and
add
fiadd
imul
arpl
rcr
shr
adc
mov
mov
xor
test
cmp
sub
jmp
adc
rcr
adc
shl
scas
mov
dec
stos
mov
in
pop
stos
jb
xchg
sbb
sbb
mov
aam
xchg
or
mov
jo
fisttp
or
repz
(bad)
mov
imul
and
pusha
jge
xlat
leave
xor
je
test
into
mov
jmp
mov
cmp
push
add
aam
ror
fldcw
or
or
es
scas
push
cwde
scas
(bad)
push
imul
mov
dec
adc
mov
inc
dec
fadd
(bad)
sbb
lock
dec
inc
jge
jecxz
icebp
jbe
cld
jge
mov
ds
sub
rol
hlt
dec
loop
test
ret
mov
push
loope
pop
xor
int
sub
mov
or
push
push
imul
mov
pop
pop
je
jp
adc
imul
scas
and
ror
ret
jmp
dec
bound
cmp
loopne
dec
pop
out
popf
add
inc
cmps
sbb
test
out
add
pop
jg
cmp
xor
sbb
mov
or
ret
imul
add
stc
call
sub
test
idiv
in
scas
lods
ror
mov
movs
sub
dec
sub
jnp
ja
xor
test
into
imul
sub
out
xor
dec
xchg
test
cmp
mov
mov
retf
xor
clc
adc
inc
retf
fwait
xchg
add
outs
or
fldenv
hlt
add
adc
xor
sbb
call
add
cmp
ins
add
hlt
sahf
mov
rcr
cmp
cwde
sub
mov
jg
and
rcl
dec
add
and
mov
sub
adc
jne
adc
xchg
jne
ret
shl
sar
xchg
pop
sbb
fmul
inc
aad
std
add
and
ja
or
shl
xlat
push
icebp
repnz
sub
jp
jns
cmps
sub
test
dec
cwd
pop
(bad)
adc
fld
xchg
add
inc
push
(bad)
sbb
test
fdiv
mov
sbb
sahf
push
cwde
dec
dec
pop
ja
jo
mov
lods
into
add
aad
sub
and
xchg
adc
shr
jo
push
jge
sbb
out
(bad)
clc
cmc
jg
popa
in
idiv
jp
fwait
xchg
ins
call
pop
rdmsr
mov
or
push
jae
adc
mov
rcr
sub
mov
mov
xor
add
mov
ror
aad
ret
xchg
fstp
mov
(bad)
iret
pop
jnp
mov
pushf
push
cmp
adc
imul
mov
rol
or
das
ror
dec
cmp
push
out
ja
adc
mov
shr
loopne
repz
sti
adc
lea
mov
sub
xchg
in
xor
push
xor
jmp
mov
and
fbstp
mov
loope
pusha
push
push
sub
data16
adc
cmps
int3
loop
pop
test
inc
sub
dec
cmps
push
movlps
xor
cmp
aas
pop
and
out
xor
sahf
adc
in
sub
aas
inc
xchg
mov
pop
sub
and
aaa
pop
dec
cmp
pop
jp
inc
jmp
jge
xchg
ja
sbb
inc
fs
push
dec
add
jmp
jl
js
aas
aad
scas
mov
mov
popf
push
ficom
loop
jmp
push
add
(bad)
(bad)
mov
mov
pop
cmp
imul
mov
push
loop
aam
lea
jne
mov
shr
mov
ror
fs
mov
xchg
push
jmp
mov
dec
loope
jmp
push
xchg
jae
test
mov
aam
inc
dec
push
push
pop
xchg
cmps
cs
xor
xchg
jb
xchg
inc
adc
in
mov
icebp
gs
out
mov
push
push
retf
jmp
xor
dec
cld
daa
cmp
(bad)
xchg
sub
jne
inc
or
adc
ret
fisubr
in
out
adc
test
push
dec
dec
nop
mov
or
and
pop
retf
sar
retf
in
and
mov
adc
dec
retf
pop
and
outs
rol
dec
sti
retf
mov
and
xchg
cwde
outs
dec
add
add
cmp
lods
push
mov
cmp
inc
dec
ret
imul
idiv
xchg
xor
ror
ret
enter
adc
dec
sbb
xor
imul
shl
jns
fs
lea
inc
fsubr
push
inc
or
xor
cmp
or
push
sub
cmp
bnd
leavew
movs
push
or
pusha
mov
scas
div
loop
xchg
es
sub
fnstsw
not
push
rol
mov
jp
and
scas
(bad)
sbb
xchg
popf
and
sbb
loope
test
xor
aad
mov
out
sub
cmps
imul
dec
out
cmps
inc
cmp
std
and
bound
cs
ins
call
sbb
stc
div
repz
gs
xchg
xchg
and
jmp
or
jo
rcr
addr16
mov
dec
(bad)
cmp
push
mov
gs
inc
or
adc
pop
popf
pop
fimul
repnz
push
cmp
fnstenv
cld
int3
jbe
movs
xchg
rcl
jbe
(bad)
jge
sti
sbb
sbb
xor
xor
lods
push
test
sahf
pop
(bad)
outs
and
pop
ins
push
push
and
nop
imul
jns
sub
push
pushf
ss
outs
lock
into
adc
faddp
push
shl
mov
jne
shl
in
xchg
adc
cmp
mov
fisubr
or
leave
mov
fwait
or
or
shl
jmp
or
mov
ins
aas
mov
mov
dec
scas
loopne
fist
enter
or
push
dec
xchg
aam
enter
ret
dec
pop
stos
pop
fsub
jecxz
mov
cmp
mov
call
aam
rcl
sbb
mov
ret
or
mov
mov
fcomp
and
mov
cmc
fiadd
xor
mov
inc
and
and
adc
pusha
xchg
pushf
push
out
fs
dec
jp
sub
xchg
sub
loop
cmp
test
clc
sbb
call
jge
xor
fadd
shl
pushf
sbb
fcmovu
lahf
cmp
mov
sub
push
xor
enter
adc
jns
xchg
mov
unpckhps
outs
pop
pop
add
jns
gs
icebp
sub
dec
mov
xchg
cmp
cmp
xor
xor
and
dec
add
pop
push
sub
lahf
lock
push
sbb
test
aad
imul
les
sar
mov
jnp
sbb
sub
test
inc
leave
mov
sbb
adc
cs
adc
push
and
pop
and
aad
jecxz
ror
(bad)
pop
add
dec
mov
xor
xchg
pop
mov
and
add
mov
mov
inc
mov
cli
mov
or
push
sbb
pop
(bad)
xor
ja
xor
out
sbb
pop
test
pop
hlt
stos
adc
loope
mov
or
pop
pop
xor
cmp
add
cmp
in
sbb
cmps
aam
gs
(bad)
cli
aam
jbe
or
xchg
and
push
cwde
cmp
es
and
pop
sbb
das
mov
pop
add
inc
popf
pusha
xor
in
retf
sub
out
jp
mov
ror
or
xchg
cmp
stos
(bad)
outs
push
mov
cmp
inc
jbe
out
aaa
frstor
icebp
dec
sub
pop
test
in
iret
jno
cmps
fldenv
cmc
adc
jae
inc
mov
push
sbb
aam
xchg
rcr
(bad)
jp
les
xchg
(bad)
jecxz
ror
frstor
sbb
movs
into
in
xor
ret
(bad)
sbb
xchg
mov
hlt
mov
xor
dec
mov
mov
sti
mov
cmp
hlt
xchg
shl
aaa
pop
add
sub
inc
lods
push
(bad)
leave
hlt
sbb
movs
pushf
sbb
shl
add
sub
icebp
(bad)
fnstenv
mov
outs
xchg
jne
sub
push
(bad)
xchg
jmp
out
aaa
mov
mov
ins
std
inc
cmp
int3
pop
ret
aas
int
jns
xchg
adc
vmread
es
mov
ret
sbb
ficom
xchg
and
cmps
pop
jb
pushf
cmp
(bad)
xor
fwait
loopne
loope
stos
movs
(bad)
and
or
call
cmc
sahf
and
push
pinsrw
imul
sub
ja
cmp
fcmovbe
push
add
xor
mov
cld
enter
adc
mov
bound
iret
neg
mov
xchg
adc
out
ins
cmp
sub
out
cmc
jge
in
jmp
scas
sub
push
neg
stos
mov
ins
inc
or
ins
lods
mov
jo
iret
out
test
cmp
adc
mov
or
add
and
xchg
scas
push
pushf
aaa
inc
cmp
neg
inc
pop
mov
pop
inc
or
sbb
mov
add
retf
popf
lods
cmp
cmps
pusha
cmp
pop
jnp
pop
xor
retf
inc
test
enter
xor
mov
push
loop
loopne
outs
xor
mov
fist
hlt
and
shr
xor
mov
add
pop
imul
stos
or
imul
xlat
jmp
sub
jb
aam
jo
and
das
aad
inc
inc
cmps
push
dec
shl
(bad)
and
add
repz
(bad)
rcl
pop
xlat
ss
dec
pop
and
bound
(bad)
and
js
jg
rcr
sti
mov
mov
and
adc
jge
inc
scas
out
cmps
test
in
shr
or
jns
in
int
mov
sub
iret
inc
outs
loop
add
and
fwait
stc
dec
jns
lods
xor
lds
xchg
xor
fs
std
cmp
adc
inc
xchg
test
(bad)
pop
je
mov
outs
bound
mov
arpl
test
retf
enter
adc
push
pop
xor
test
leave
jge
lock
std
es
cs
mov
mov
push
popa
jecxz
(bad)
cs
xlat
jns
mov
inc
aad
mov
push
cmc
xor
pop
lods
js
adc
cmps
inc
out
test
sti
cmp
sub
inc
in
into
push
clc
mov
lods
sbb
mov
dec
lods
push
jns
xor
push
xchg
ja
dec
aam
lock
jne
push
mov
(bad)
stc
sbb
inc
ret
or
mov
adc
in
test
stos
and
fisttp
or
mov
int3
aas
out
imul
push
inc
sbb
(bad)
xor
(bad)
lods
or
gs
xchg
imul
mov
cmp
dec
fidiv
fisubr
pop
(bad)
pop
jae
push
push
xchg
jle
and
enter
hlt
push
(bad)
jae
mov
(bad)
cmp
clc
cli
movs
(bad)
sti
fs
lahf
je
aam
or
mov
sar
stc
clc
cwde
add
js
bound
das
lds
add
mov
and
(bad)
jmp
lods
movs
es
xchg
or
mov
mov
xor
push
pushf
xchg
sti
inc
or
sbb
dec
and
adc
push
mov
inc
xchg
out
adc
sub
mov
xor
dec
ret
inc
push
jmp
xchg
es
or
sub
scas
dec
pop
xchg
icebp
mov
mov
out
cmps
and
cmc
ins
in
retf
dec
enter
and
out
lods
int3
cs
ins
mov
inc
addr16
push
mov
addr16
mov
icebp
fbstp
add
mov
test
(bad)
add
add
jne
scas
xchg
jmp
fcom
call
data16
fcom
xor
(bad)
out
adc
(bad)
lods
fld
jmp
mov
jb
iret
popf
cmp
(bad)
(bad)
xchg
mov
rol
mov
lock
js
mov
pushf
aas
jb
stos
sti
xor
inc
push
outs
xor
cmp
test
fcmovbe
add
dec
pop
clc
and
fldenv
or
sub
mov
retf
aam
jno
jnp
push
out
sbb
cdq
sub
mov
ret
or
lods
mov
sbb
xor
dec
xchg
and
push
ror
call
cmps
cli
push
(bad)
push
and
inc
das
stc
dec
call
(bad)
call
enter
sub
lds
rol
leave
xchg
stos
iret
adc
jns
jb
sahf
xor
ret
mov
sub
arpl
fldenv
out
mov
sbb
inc
in
fild
fdiv
or
and
adc
sbb
inc
pop
dec
push
out
sti
sbb
mov
shl
mov
sub
push
in
cmp
cs
fdivr
les
jecxz
mov
mov
sub
pop
or
adc
ret
loop
mov
ins
pusha
ins
pusha
iret
push
aad
out
cs
or
xchg
xor
cli
repnz
dec
cmp
push
push
popw
or
mov
xchg
retf
xchg
cdq
mov
out
adc
xchg
rcl
arpl
loope
clc
(bad)
pop
inc
cld
sbb
int
lds
sar
xor
mov
mov
xchg
jnp
jmp
and
mov
(bad)
int
call
push
cld
xchg
out
xor
or
dec
test
fmul
in
or
(bad)
cld
test
dec
xchg
sbb
and
imul
jge
ret
movs
or
ficom
mov
mov
jmp
adc
retf
out
aaa
pop
add
add
lock
popa
in
stc
gs
mov
sti
es
and
jle
jge
aad
jne
dec
dec
push
leave
popf
ds
aam
(bad)
push
cmp
and
fadd
add
inc
in
or
mov
mov
aam
pop
imul
leave
ret
out
jp
sub
lds
in
add
push
outs
fs
push
adc
aam
mov
pop
(bad)
xchg
adc
imul
dec
push
fs
dec
rcl
das
ins
xchg
sub
test
jnp
adc
arpl
push
shl
cmps
mov
xor
and
pop
cli
pop
out
cmps
sbb
(bad)
push
fmulp
jmp
ficom
xchg
adc
imul
xchg
movs
(bad)
cs
jb
enter
inc
dec
in
adc
mov
push
dec
or
push
mov
push
repnz
cwde
mov
jmp
idiv
sbb
cmp
out
inc
stos
out
nop
retf
mov
pop
lock
and
mov
inc
iret
dec
into
pop
fldenv
mov
bound
js
in
(bad)
cmc
jbe
lahf
adc
nop
pop
lods
les
and
jo
xor
xor
xchg
out
fiadd
ins
ins
adc
lock
cmp
jne
sbb
sbb
jmp
jp
push
mov
adc
dec
aad
int3
jne
popf
pushf
push
int3
fistp
cmp
add
shl
jmp
sub
sub
int
frstor
or
test
adc
adc
loop
pushf
xchg
cli
iret
jb
test
mov
int3
inc
push
or
xor
dec
or
rol
add
fld
int3
mov
mov
aad
mov
and
jmp
mov
cmp
test
iret
push
js
mov
sbb
sbb
shr
xor
mov
daa
dec
call
inc
push
xchg
in
mov
retf
xlat
sbb
mov
push
push
sub
xchg
xchg
adc
xor
shl
pop
(bad)
inc
bound
inc
and
pop
loop
in
dec
sbb
adc
inc
rcl
in
jmp
xor
sub
adc
das
xchg
push
ret
jns
dec
and
pop
push
lods
pop
push
xchg
aaa
add
jmp
fild
xchg
cmc
inc
mov
pop
jg
jae
cmp
xchg
into
dec
nop
stc
(bad)
test
(bad)
lea
popa
adc
push
jae
data16
or
add
fwait
sbb
inc
ss
call
das
int
mov
sbb
and
cdq
adc
ins
mov
sub
pop
xchg
add
jo
sti
into
inc
jnp
cmp
mov
js
pop
(bad)
add
ret
cmp
shr
pop
lahf
shl
out
daa
shl
pop
stc
jbe
xchg
inc
mov
mov
sbb
or
(bad)
cmp
sbb
fistp
das
sbb
sbb
jb
sub
sub
adc
les
adc
mov
pusha
mov
xor
jp
mov
cmp
ret
sbb
movs
out
jns
fld
add
fwait
gs
je
add
cmp
fnstenv
rcr
mov
test
cmps
mov
add
rol
mov
cmp
push
in
cld
xor
dec
(bad)
fwait
add
cmp
cmp
pop
mov
and
xchg
test
dec
clc
pop
pushf
xor
into
mov
loopne
inc
daa
pop
retf
push
nop
ret
inc
mov
mov
cmp
out
mov
add
std
scas
pop
jle
outs
cmp
jp
test
repz
push
mov
(bad)
iret
daa
ja
(bad)
pop
push
mov
push
add
add
ss
cmp
and
pushf
out
jb
jle
pop
rol
inc
or
xor
addr16
stc
sub
xor
jmp
dec
loopne
add
sbb
mov
aam
frstor
lahf
mov
(bad)
std
jecxz
adc
jns
adc
sub
jle
cmps
iret
mov
mov
xchg
mov
lods
fnsave
jo
xchg
outs
xor
out
push
xlat
outs
arpl
jns
loopne
cmc
adc
jns
jnp
hlt
lea
xor
cmp
mov
lods
dec
mov
jnp
cmp
xlat
into
fldl2e
cmp
in
(bad)
jg
test
dec
and
out
inc
push
jmp
push
and
xor
and
pushf
ror
lea
add
call
loopne
xchg
pop
ror
movhps
sbb
inc
enter
into
add
in
ret
push
fwait
mov
jno
jae
push
mov
dec
scas
jle
mov
aad
inc
sub
scas
add
inc
cmp
push
pop
add
aam
test
int
out
std
cmp
aaa
mov
push
int3
sbb
mov
mov
cs
xchg
dec
sub
mov
cmp
inc
(bad)
mov
xchg
add
je
adc
dec
dec
es
call
mov
retf
and
(bad)
mov
add
cmp
jl
pop
aam
aas
fiadd
movs
mov
rcr
push
outs
mov
xchg
jns
sub
popf
dec
dec
ficomp
idiv
ficomp
minps
push
cdq
fwait
(bad)
or
add
jne
mov
test
addr16
imul
lea
mov
jae
pop
pop
retf
lds
imul
xor
push
repz
cwde
ret
cmp
cmps
lahf
xor
mov
push
add
xor
outs
cmp
xchg
jle
push
ins
loopne
dec
leave
sub
fisubr
adc
mov
es
dec
sub
lds
aas
mov
push
adc
adc
ret
push
xchg
rep
jns
pusha
lods
mov
fdiv
jae
ins
and
pop
addr16
shl
lods
adc
movs
or
in
lea
dec
lods
pop
bound
inc
cmc
sahf
fild
ret
xlat
or
push
mov
daa
aas
inc
cmps
je
add
pop
mov
and
push
lahf
mov
ins
xor
mov
aas
dec
stc
imul
in
mov
sub
div
pop
jp
xchg
pop
jb
inc
imul
dec
cdq
or
mov
frstor
and
loope
movs
ds
lock
movs
retf
xlat
pop
inc
sbb
les
adc
fs
cmps
pushf
mul
cdq
test
dec
ja
sahf
mov
and
push
jmp
jb
shr
daa
xchg
stos
pop
push
popf
imul
and
xchg
aaa
xor
adc
pop
add
pushf
(bad)
fisubr
popf
cmps
(bad)
jne
mov
dec
neg
jle
clc
iret
cwde
ret
std
popa
mov
and
imul
sbb
and
cdq
cmp
or
push
test
inc
icebp
cmp
test
mov
retf
aaa
stc
shl
cmovp
call
into
xor
retf
xor
xchg
sbb
(bad)
cmps
aad
or
iret
push
push
fisttp
pop
fimul
mov
nop
mov
and
jecxz
mov
mov
xchg
loop
enter
popf
ja
iret
out
xor
or
pop
jl
retf
push
jmp
and
inc
aad
pop
and
push
std
int3
mov
sbb
dec
repnz
sbb
push
sbb
cmp
jecxz
mov
ret
or
clc
mov
xchg
xchg
dec
or
aam
inc
cmp
pop
push
push
in
daa
dec
cli
fmulp
imul
dec
lods
out
adc
pusha
out
sbb
iret
leave
fmul
sahf
cmp
dec
aad
push
fcmove
mov
in
xor
mov
mov
mov
out
(bad)
jecxz
aam
mov
cmp
bound
(bad)
mov
or
int3
mov
xchg
push
cli
jns
pop
push
cmp
xchg
cwde
cmp
rcl
mov
enter
std
pop
fsub
movs
inc
call
sti
dec
mov
sub
adc
iret
mov
rcr
pop
xor
outs
push
fcom
add
fs
jo
icebp
test
xchg
pop
mov
imul
mov
lods
push
push
sub
call
cld
popa
loop
and
sahf
enter
sbb
sub
shr
mov
adc
adc
jle
xor
adc
mov
push
or
aaa
adc
es
cmps
jno
movs
fisub
ror
(bad)
mov
dec
scas
add
adc
mov
mov
mov
lahf
jb
jl
cmc
mov
arpl
jno
dec
xchg
xchg
pop
fimul
mov
bound
std
fmulp
pop
jo
jne
pop
inc
out
mov
lods
add
es
in
in
xchg
imul
mov
jmp
scas
and
sub
xor
or
xchg
ins
and
hlt
inc
ins
pusha
aam
push
popf
mov
push
xchg
imul
jmp
popa
arpl
fisub
imul
shl
sub
mov
lods
ret
xchg
inc
jbe
nop
inc
stc
data16
std
ret
(bad)
rcr
popa
ja
ins
xor
push
retf
je
dec
jno
push
aad
stc
scas
fs
mov
es
lock
push
pop
sub
test
mov
inc
iret
adc
cmp
cmp
xchg
pop
pop
pop
add
xchg
mov
xchg
rcl
nop
pop
in
xchg
add
push
lods
cmp
cmp
scas
jp
push
jp
add
add
jge
cs
lea
in
fist
pop
aam
in
push
ficomp
push
add
repz
adc
add
pop
and
push
mov
fidiv
jb
jae
lds
(bad)
sub
repnz
loope
and
in
dec
pushf
and
in
cmps
jg
mov
dec
adc
icebp
add
lahf
in
test
fs
outs
add
push
hlt
xor
fmul
jmp
ror
cmps
jle
adc
adc
push
push
dec
pushf
mov
ins
(bad)
jle
add
and
rol
inc
xchg
mul
ins
mov
nop
mov
stc
ins
sbb
inc
test
push
loope
dec
dec
leave
out
jle
xchg
inc
shl
mov
clc
sub
xchg
xchg
pop
rol
icebp
jl
std
bound
sub
jecxz
adc
xchg
inc
xor
outs
or
lods
bound
mov
xchg
add
add
cmps
mov
sub
jb
out
jp
sbb
xor
sbb
sub
or
mov
mov
rcl
mov
jb
idiv
mov
rol
mov
out
lahf
mov
push
in
js
sub
jne
adc
sbb
sti
xor
hlt
sbb
add
pushf
stc
bnd
push
(bad)
test
or
scas
out
mov
in
inc
xchg
(bad)
pusha
cld
adc
adc
das
lods
aaa
inc
sub
push
lods
jl
sti
push
je
pop
mov
test
(bad)
aam
dec
gs
adc
mov
cmps
pop
dec
pop
add
mov
inc
fist
nop
dec
sbb
repnz
lock
jle
jl
mov
daa
pop
cmp
out
mov
fcmovnb
movs
lock
jmp
and
jb
sub
pusha
sbb
imul
cmp
add
mov
outs
sbb
push
test
add
pop
adc
mov
pushf
adc
addr16
jnp
sar
retf
scas
jge
pop
cmovae
aaa
addr16
mov
lock
das
lock
sub
adc
ror
bnd
pop
pop
fs
cmps
imul
mov
mov
jmp
lods
mov
pop
dec
fldcw
or
stos
cs
inc
push
jo
punpcklwd
mov
inc
cmps
das
in
pop
or
or
lea
scas
push
(bad)
cmp
pop
shr
shl
mov
cmp
je
jle
push
fistp
dec
ror
fwait
loope
xchg
cmp
jno
xchg
sub
dec
add
(bad)
enter
xor
loopne
or
jnp
ins
add
or
sbb
xor
aaa
pop
mov
mov
inc
mov
out
je
dec
mov
fs
push
mov
aad
es
cmp
in
mov
arpl
xor
stos
cmps
push
and
mov
and
fstp
in
mov
shr
es
add
mov
mov
dec
ins
adc
(bad)
fld
jb
sbb
add
or
pcmpeqd
shl
ret
adc
pop
pop
cmc
inc
cmc
cmp
xor
dec
pop
into
jecxz
nop
mov
jp
xor
add
aaa
jmp
stos
adc
cmp
jo
ja
sub
cvtpi2ps
push
or
push
dec
dec
xchg
mov
dec
sbb
fucomip
(bad)
aas
fcom
es
ret
adc
not
or
sub
retf
and
cmps
fcomp
pop
imul
idiv
sub
push
sti
and
sub
mov
cwde
jle
cmp
loopne
rcl
les
lods
push
sub
loopne
jle
and
repnz
inc
aaa
adc
jbe
pushf
inc
cmp
and
(bad)
xchg
inc
inc
data16
xor
sbb
out
les
adc
enter
shr
nop
scas
mov
mov
mov
push
in
mov
test
mov
movs
rcl
pop
jb
pop
and
outs
sub
in
pop
mov
xchg
adc
retf
xchg
fucomi
sub
lea
sub
or
das
push
ss
js
fs
cmp
pusha
sub
nop
cmp
cdq
sar
pop
xchg
(bad)
(bad)
call
inc
pushf
sub
adc
ss
ror
js
and
call
es
xor
rol
pushf
mov
or
push
xor
je
pushf
pop
push
ins
loopne
scas
jb
nop
or
add
rol
sar
mov
pop
scas
icebp
inc
dec
jmp
addr16
sub
in
call
loopne
sbb
jnp
ja
in
daa
and
out
popa
push
popf
sub
cmp
ins
enter
add
xchg
push
pop
push
mov
adc
or
sahf
out
sti
frstor
pop
popf
out
add
ror
clc
cmp
sub
push
and
push
and
in
jmp
pushf
aas
lods
dec
dec
adc
sbb
loopne
loope
jmp
push
xor
cld
sub
outs
lods
mov
dec
out
push
mov
add
xchg
jmp
adc
loope
ins
out
or
test
mov
ss
in
xchg
mov
jmp
bound
lock
push
dec
sbb
fcom
aad
retf
mov
jmp
(bad)
sub
dec
mov
popf
dec
std
cmp
in
mov
xchg
(bad)
lds
jg
push
into
push
pmaddwd
fild
repnz
xor
aas
and
jmp
stos
inc
add
imul
sbb
icebp
sub
or
ror
sbb
jne
inc
jmp
lds
call
sub
mov
test
cmp
push
(bad)
xchg
lock
mov
mov
push
cmc
adc
imul
mov
xchg
push
stos
imul
shr
sub
mov
ss
or
xor
movs
pop
adc
jb
ret
or
mov
jb
mov
mov
in
jg
test
dec
or
sub
mov
mov
mov
pop
out
mov
xchg
mov
popf
xor
add
test
cmp
add
add
dec
cli
mov
mov
mov
xor
cmc
jmp
mov
imul
xchg
xchg
pop
ror
mov
ja
(bad)
jl
packuswb
inc
or
leave
jge
mov
aad
or
stos
out
pop
and
rcr
push
inc
xchg
lahf
mov
adc
aam
in
in
add
sub
or
jmp
sub
jge
out
popa
hlt
xlat
imul
les
jge
lahf
dec
push
add
mov
out
lock
(bad)
in
dec
sub
fwait
call
lods
ss
rep
mov
sbb
xor
mul
inc
xchg
iret
add
aaa
ds
cmps
push
cdq
dec
je
rol
mov
mov
xchg
sub
mov
lods
adc
fild
cmp
cmp
push
daa
lods
enter
ficom
(bad)
icebp
int3
xor
iret
rol
cmp
push
scas
push
mov
ret
into
or
adc
mov
scas
test
out
sbb
mov
or
jo
(bad)
sub
add
pop
das
ret
and
xchg
aaa
movs
jb
int3
add
adc
mov
inc
inc
mov
mov
add
fnstenv
xchg
(bad)
sbb
and
ss
jno
enter
add
icebp
inc
int3
sahf
fnstenv
pop
dec
mov
jbe
sbb
pop
sbb
shl
sti
and
pop
mov
movs
pop
cmps
jecxz
adc
xor
rol
shl
popa
popf
push
gs
cmps
(bad)
ret
add
mov
icebp
cmps
or
aam
jns
xchg
mov
xchg
scas
sbb
adc
jl
xchg
ficomp
inc
mov
cmp
pushf
test
in
jne
dec
aaa
pop
imul
cld
adc
in
jmp
cmp
mov
cli
out
shl
ins
ja
sahf
stc
pop
pushf
add
and
add
mov
adc
xor
stos
xor
jo
push
in
dec
lahf
mov
shl
shl
test
xchg
ffreep
mov
stos
push
sbb
inc
jge
adc
jmp
xchg
lds
xlat
push
xchg
in
outs
sub
stos
not
dec
out
aaa
cwde
aad
sub
or
inc
clc
jge
pop
or
dec
inc
ins
fisttp
lock
sbb
outs
mov
lods
mov
or
xlat
inc
sbb
(bad)
(bad)
mov
adc
movs
addr16
or
fisttp
repnz
mov
add
push
aas
sbb
ror
outs
pushf
and
dec
mov
imul
shr
inc
xor
xor
addr16
inc
dec
or
sbb
mov
jg
or
iret
ds
inc
mov
dec
jmp
mov
xor
dec
jge
pop
add
mov
lods
rcl
pop
pop
push
push
js
push
mov
dec
jmp
xchg
test
sbb
out
inc
stc
imul
xor
movs
stos
dec
dec
ret
rol
inc
leave
and
ins
push
cmps
cmps
jl
push
clc
xchg
imul
xor
in
int3
push
nop
nop
pop
out
adc
and
inc
ins
jb
push
mov
test
jb
mov
int
sbb
pop
mov
retf
pop
pusha
data16
push
retf
dec
dec
and
mov
repz
shl
data16
in
inc
jg
pusha
inc
adc
sbb
jmp
xor
sub
add
push
loope
and
mov
int3
mov
cs
repnz
fnstsw
(bad)
test
sar
sub
cmps
mov
pop
in
outs
jne
dec
daa
cdq
jb
pop
retf
cld
push
lods
mov
leave
repz
stos
fcom
in
imul
pop
rcr
mov
adc
or
sub
xchg
mov
mov
cs
daa
fs
pushf
cdq
loop
push
sub
mov
fld
xchg
inc
ins
inc
add
or
dec
pop
rcl
sub
(bad)
cmp
out
add
dec
ret
lods
adc
inc
sbb
jae
pop
mov
call
nop
inc
pop
gs
lds
in
cli
dec
sbb
loope
fidiv
cmp
mov
into
test
cmp
and
mov
or
adc
xchg
stc
pop
call
mov
sti
ds
mov
fwait
push
mov
push
lock
adc
sbb
or
cmp
xor
adc
fs
stos
xlat
xor
inc
xchg
out
outs
imul
inc
popf
sbb
ret
sbb
sbb
mov
(bad)
mov
rol
in
xor
xchg
add
iret
outs
(bad)
lock
(bad)
pop
mov
mov
mov
add
in
test
inc
das
rcl
rcr
mov
retf
xlat
adc
mov
cmp
inc
fcom
inc
loop
(bad)
int3
inc
enter
pop
xchg
movs
rol
push
shl
call
sahf
shr
into
dec
into
js
add
pop
sbb
or
sahf
push
test
inc
inc
repnz
or
dec
dec
add
pop
push
mov
(bad)
enter
in
in
mov
sahf
xchg
sub
xchg
js
push
hlt
adc
cmp
int3
stc
stc
dec
fdiv
rcl
sub
mov
clc
int3
out
rol
mov
mov
jg
(bad)
repnz
push
mov
sbb
sbb
cmp
xor
inc
fwait
adc
call
jno
fiadd
cld
(bad)
xchg
lods
mov
es
add
js
mov
push
inc
or
lods
bound
mov
cmps
xchg
out
cs
adc
gs
add
sub
add
jecxz
or
sahf
mov
outs
jl
sahf
cmp
jecxz
cs
test
fwait
inc
dec
sbb
add
data16
sbb
dec
inc
mov
xchg
test
xor
repz
xchg
xor
dec
jns
sub
test
mov
mov
lock
push
popa
in
jle
mov
aam
jnp
mov
popf
adc
outs
push
test
sub
jp
jns
or
mov
dec
aaa
ss
out
mov
leave
mov
popf
in
sub
sti
cmps
and
sub
inc
mov
retf
int
mov
push
cld
jl
hlt
fwait
cld
bound
rol
pop
xor
cdq
xchg
pop
add
adc
inc
xchg
int
imul
jl
mov
lods
ror
test
fs
dec
shl
cmp
bound
push
or
fwait
(bad)
iret
pop
push
ds
pop
sbb
inc
rcl
or
or
cmps
jne
mov
inc
mov
mov
and
es
mov
fadd
test
ins
popf
enter
xor
rcl
pop
gs
mov
sbb
sbb
test
dec
data16
sbb
sub
xchg
xor
pop
div
es
out
fcom
or
mov
fstp
idiv
cld
(bad)
mov
inc
jne
jo
sub
int3
outs
ror
push
cld
jg
es
jg
jge
xor
mov
mov
adc
les
dec
jge
cs
cli
into
and
or
push
sub
adc
jne
icebp
shl
inc
les
xchg
inc
dec
mov
(bad)
and
nop
jno
xchg
cdq
es
clc
jecxz
fsubr
add
pop
adc
push
pop
sub
cmp
mov
and
je
ror
dec
call
(bad)
mov
and
lods
inc
push
jb
push
pusha
sahf
cmps
sub
clc
cwde
or
sub
gs
cmp
gs
fst
or
fwait
jne
pop
lods
inc
stos
iret
aad
jl
sbb
inc
cmp
ror
icebp
call
sub
sbb
push
ja
mov
aam
rdmsr
mov
jmp
jmp
test
ret
adc
jo
push
mov
or
adc
retf
es
(bad)
cmp
inc
jno
not
xlat
push
xor
or
add
fs
scas
fdivr
sbb
jge
dec
and
shl
jb
lahf
in
xchg
jmp
dec
gs
or
and
mov
jns
inc
inc
outs
cmp
pop
mov
stc
adc
inc
pop
sbb
xor
mov
ja
sbb
xchg
retf
test
(bad)
jge
hlt
movs
stos
je
(bad)
fdivr
push
add
pop
mov
dec
(bad)
stc
and
ss
mov
ss
dec
or
sahf
mov
push
mov
lea
sub
mov
(bad)
sbb
(bad)
xchg
dec
ret
inc
loope
mov
xchg
test
lahf
fnsave
pop
fwait
imul
fisub
jo
inc
fsubr
cdq
xor
bound
cmp
or
cwde
daa
loopne
mov
sub
sbb
(bad)
xor
(bad)
sbb
inc
add
ds
ins
stc
je
mov
and
xchg
rcr
or
sbb
xchg
scas
sub
adc
pop
jmp
loope
dec
cmp
and
cmps
lahf
inc
aaa
cmp
push
loop
retf
jg
xchg
icebp
data16
xor
xchg
out
cmp
cmp
inc
inc
outs
fsubr
enter
(bad)
cwde
cmps
push
dec
push
icebp
cmps
cmp
mov
outs
push
mov
mov
mov
rcr
cmc
jecxz
and
mov
sbb
out
sbb
mov
push
mov
in
iret
push
xchg
mov
sbb
jnp
lds
movs
dec
inc
out
arpl
bound
sub
ss
push
popa
(bad)
fnsave
mov
xor
dec
lds
repnz
adc
mov
int3
in
lahf
fs
(bad)
aas
xchg
jmp
movs
(bad)
xchg
push
mov
out
mov
pop
inc
out
iret
in
repz
xor
jnp
cmps
loop
ins
(bad)
stos
rcl
jp
dec
add
outs
and
dec
pop
xor
sub
adc
sub
aam
gs
xchg
(bad)
xor
xchg
lahf
pop
(bad)
outs
cmp
or
gs
rcr
jmp
dec
stc
xchg
pop
or
mov
add
cmc
mov
pop
pop
icebp
(bad)
fcomp
jmp
mov
dec
mov
std
jne
es
adc
xchg
jns
push
or
jb
inc
jle
xor
out
scas
shl
in
data16
dec
loope
sbb
adc
mov
in
test
outs
jne
mov
pop
jl
mov
mov
add
int
cdq
push
aas
mov
mov
sub
ds
adc
cld
xor
adc
stos
push
sub
lods
(bad)
(bad)
dec
ret
dec
dec
jne
mov
pushf
cmp
fwait
pop
ss
bound
int3
mov
aad
fistp
cmp
aad
in
movs
scas
mov
iret
or
movs
mov
inc
xchg
pushf
xchg
xor
add
in
add
mov
fsubrp
or
lea
cmp
outs
test
add
xchg
fiadd
or
and
hlt
test
retf
xchg
push
in
enter
out
ins
inc
imul
xor
pop
aam
fldenv
and
push
fldenv
pop
pop
add
popa
xchg
jle
adc
pop
scas
jecxz
cmp
jmp
jp
pusha
push
out
mov
or
arpl
int3
stos
aaa
push
sbb
cmps
pop
nop
dec
pop
imul
fadd
lods
or
cmps
mov
inc
pop
test
xor
mov
and
cmp
daa
fst
push
mov
mov
fidivr
test
ds
sbb
cmp
clc
movs
(bad)
push
xor
jmp
sub
jo
ja
add
rol
or
sub
fcmovnb
cmp
add
out
mov
adc
bound
jp
(bad)
mov
inc
fdivr
pop
dec
shl
inc
inc
dec
xor
pusha
mov
ja
pop
repnz
popf
bound
jg
adc
pop
aas
data16
cdq
cmp
sub
xchg
iret
inc
lahf
(bad)
fidivr
cmp
sub
inc
inc
mov
xor
or
xchg
fmul
sbb
bnd
es
jbe
ins
cmp
(bad)
xchg
sub
dec
enter
xlat
xchg
pop
cdq
mov
dec
scas
gs
or
scas
cld
pop
shl
mov
and
and
push
mov
jne
loop
cdq
ja
retf
add
mov
xor
jge
and
loope
arpl
push
shl
mov
jb
mov
iret
imul
out
adc
push
ss
(bad)
jmp
jns
imul
cld
ror
add
mov
mov
mov
icebp
hlt
popf
or
xchg
add
jmp
test
push
shl
(bad)
dec
loope
xor
enter
retf
jno
loop
inc
imul
in
jl
loopne
outs
mov
shr
sub
add
cli
ds
pop
inc
xchg
iret
xchg
or
jmp
in
aad
dec
xchg
lds
sub
push
pop
jno
jg
jae
xor
iret
cmp
dec
sbb
dec
in
mov
dec
jmp
sub
lods
out
scas
ins
cdq
pop
mov
sar
ds
int3
mov
into
mov
mov
xor
adc
fdiv
dec
hlt
sub
cmp
mov
dec
scas
push
add
loop
cwde
push
pop
adc
mul
mov
inc
nop
push
imul
xor
and
dec
dec
xlat
movs
pop
out
pop
xor
push
push
jo
xchg
cmp
cs
cmp
xchg
punpckldq
inc
pop
ret
pop
out
in
cmc
retf
mov
(bad)
ss
dec
push
retf
dec
sub
dec
hlt
mov
shl
inc
nop
icebp
inc
and
pop
xor
adc
and
adc
mov
ret
sub
mov
jbe
out
pop
xor
sbb
in
ds
pushf
mov
pop
and
sub
call
and
xor
push
xchg
nop
les
cmp
and
pop
mov
shl
mov
je
pop
(bad)
outs
scas
mov
ds
aad
xchg
aas
sbb
mov
lock
jg
or
sub
inc
inc
jmp
imul
std
or
cmp
dec
xchg
(bad)
out
nop
xor
gs
pop
cld
popf
mov
imul
arpl
aam
push
mul
mov
jmp
sbb
mov
arpl
pop
jp
push
jno
mov
sub
mov
(bad)
outs
xor
ins
mov
cs
fwait
(bad)
jmp
test
shl
addr16
cs
fistp
out
out
push
and
xlat
cmp
xor
pop
fld
fimul
pop
cmps
push
push
mov
sbb
sbb
test
sbb
jo
push
repnz
aad
arpl
add
shr
push
cmc
mov
fnstenv
push
out
xchg
mov
jns
or
add
push
fadd
inc
jle
in
add
lds
xchg
xchg
push
int
movs
inc
stc
pop
push
or
dec
fisub
dec
fcmove
(bad)
mov
(bad)
shr
call
(bad)
adc
mov
xlat
addr16
push
retf
(bad)
clc
sub
or
mov
sub
lock
cmps
cli
hlt
out
je
mov
jne
inc
push
push
test
das
mov
or
cld
fwait
sub
out
adc
sbb
mov
dec
push
jnp
stos
test
mov
pop
jmp
jecxz
xchg
dec
movs
ss
mov
jne
push
jb
jbe
sub
dec
push
mov
repz
(bad)
pop
dec
and
cmp
addr16
inc
hlt
sbb
retf
lahf
je
push
and
fimul
int3
cld
test
inc
adc
mov
daa
sbb
cmps
mov
dec
repz
(bad)
lods
jns
push
adc
push
or
cmc
sti
das
inc
sti
cmp
jb
cmp
sub
pop
push
and
cli
mov
retf
(bad)
mov
jne
jle
mov
dec
sub
pop
cmps
xchg
arpl
popa
(bad)
out
std
pusha
mov
(bad)
mov
icebp
(bad)
mov
dec
mov
adc
pop
dec
inc
cmp
fsub
repnz
rcl
shl
outs
xlat
add
push
push
push
mov
jmp
pop
les
mov
dec
cmc
test
jae
int
dec
mov
add
fcomi
fidiv
ds
or
call
sub
loopne
and
scas
mov
xor
jns
loop
loopne
stos
add
pusha
dec
sub
and
xchg
in
hlt
movs
(bad)
rol
retf
jp
stos
aad
das
mov
jp
xchg
adc
call
adc
cmps
sbb
cmc
adc
loope
fdiv
lods
dec
push
inc
inc
aaa
add
push
daa
rcr
fsubr
xor
push
fcom
xlat
jecxz
pop
nop
aaa
mov
and
(bad)
not
jp
add
dec
test
push
popa
lock
cli
sub
cmp
xchg
out
rcr
mov
data16
ja
fld
popa
lods
ins
test
sub
and
std
mov
imul
mov
mov
fstp
or
push
or
xchg
and
shl
test
lea
addr16
aad
push
test
jo
sub
bound
xchg
in
imul
call
push
lahf
pop
pop
imul
aam
not
sbb
xor
add
xor
outs
xchg
adc
sti
pop
pop
or
cmp
inc
dec
and
inc
mov
hlt
or
adc
xor
xchg
sub
add
cmps
fs
adc
adc
mov
and
pop
sub
leavew
fidivr
fild
fucom
dec
das
stc
pop
add
pop
in
addr16
mov
loop
inc
mov
pop
sub
pop
push
pop
icebp
sbb
aad
mov
adc
out
cld
pusha
sahf
fild
push
jmp
mov
mov
sub
sub
inc
je
sbb
push
pop
aaa
pop
and
pop
xchg
push
fsubr
push
cmp
or
sub
or
push
cld
int
or
fwait
lea
es
pop
(bad)
repnz
es
cmc
sahf
gs
and
inc
call
jno
inc
jae
cmp
push
pop
jmp
in
xor
repz
movs
or
cmp
lock
fimul
nop
push
fadd
call
cmp
out
mov
sub
mov
sahf
hlt
in
sub
push
hlt
fist
nop
jne
cli
popa
push
gs
sbb
mov
inc
mov
pop
xchg
jge
and
fcomp
add
mov
loopne
loop
dec
push
cld
ds
jns
sbb
out
mov
fwait
int
lds
dec
xchg
sub
push
jb
iret
sub
jne
mov
add
in
xchg
retf
mov
xchg
(bad)
scas
or
es
pop
jmp
cmp
mov
dec
xchg
add
xor
push
call
addr16
dec
ret
rcl
and
call
or
cmc
push
or
mov
add
add
pop
sub
dec
jnp
jge
xor
fld
popa
push
outs
bound
inc
cmc
(bad)
xchg
outs
imul
or
inc
xchg
cwde
pop
push
imul
gs
or
pop
push
mov
jno
cmps
in
(bad)
adc
mov
push
shl
mov
jecxz
ds
mov
xchg
inc
adc
fldcw
(bad)
push
mov
adc
cdq
xor
sbb
mov
xchg
ss
retf
sub
jge
jae
test
in
sub
mov
pop
shl
ja
pop
jp
pop
pop
mov
mov
dec
and
sbb
jmp
xor
mul
xchg
cld
vandnps
popa
ret
add
mov
stos
stos
test
mov
jg
dec
imul
pop
sub
sbb
inc
mov
mov
xor
aas
inc
in
ds
push
lahf
mov
rcl
jl
adc
hlt
sub
and
pop
jae
jno
(bad)
das
cmp
mov
enter
dec
pop
xor
sbb
lods
dec
jbe
pushf
aas
pop
xchg
cmc
adc
jp
sub
cmp
into
jmp
scas
jmp
into
fldln2
fdivr
mov
xchg
pop
retf
out
mov
cmp
mov
movs
add
repz
out
pop
cld
addr16
fnstenv
mov
popf
jg
adc
test
push
ficom
cdq
push
dec
pop
push
add
xor
loop
xchg
cs
dec
fs
jno
loope
dec
std
jecxz
xchg
repz
add
test
lock
or
inc
inc
jmp
or
loopne
iret
mov
mov
nop
rcr
jp
mov
je
daa
ret
imul
cmp
pop
pop
das
and
es
mov
mov
fsubr
xor
dec
add
cmp
(bad)
sbb
scas
pop
and
sahf
cmp
dec
retf
push
retf
aam
cli
or
fs
cmp
inc
out
movs
xor
stos
(bad)
loopne
cwde
xchg
popa
sti
retf
mov
movs
push
jl
push
mov
dec
sub
shl
imul
add
dec
push
lahf
out
pop
mov
mov
jmp
jmp
(bad)
mov
outs
push
int
push
mov
fcmovnbe
push
mov
sbb
pop
jbe
or
dec
or
aaa
jno
out
std
movs
cld
or
cmp
sahf
pop
add
stc
xor
call
add
rcl
xchg
push
and
ficom
or
nop
into
mov
das
pop
add
out
daa
aad
jnp
mov
loope
sbb
add
push
(bad)
adc
adc
ret
xor
pusha
in
data16
inc
pushf
cli
in
pop
or
cmps
mov
pushf
cmps
aam
sub
daa
sbb
shr
mov
in
clc
or
xor
xchg
in
push
pop
cli
or
inc
or
pop
cmp
cmp
fisub
and
dec
add
jecxz
in
retf
jl
mov
push
cmp
and
xor
inc
jmp
scas
or
shl
xor
jns
adc
rcr
inc
add
and
mov
sbb
dec
mov
cmp
scas
dec
ds
xor
in
push
jmp
fadd
sub
push
repz
call
call
ror
push
cld
adc
out
call
out
sub
add
mov
mov
push
adc
out
adc
add
mov
stc
mov
push
ins
mov
xlat
sbb
dec
push
(bad)
int
arpl
add
test
adc
movs
out
jbe
or
in
pop
push
cwde
inc
into
out
pop
repz
sbb
mov
mov
inc
mov
fsubr
in
in
outs
push
sbb
and
inc
mov
inc
adc
pop
outs
pop
in
add
fdiv
or
inc
cdq
or
pop
scas
les
cmp
cs
mov
daa
jl
idiv
aas
fild
lahf
int3
(bad)
pop
aas
sbb
call
test
fimul
push
mov
inc
adc
jb
nop
pop
mov
lds
jb
repnz
packsswb
cli
xor
cmp
push
add
mov
cs
mul
cmp
mov
xchg
shl
push
pop
mov
pushf
inc
adc
mov
sbb
jle
mov
sub
xchg
xor
ins
pop
loopne
mov
push
xchg
aaa
jns
sub
xchg
leave
push
ins
cmp
mov
ja
shl
sbb
imul
imul
mov
sahf
mov
xchg
out
outs
adc
dec
stc
jmp
out
mov
inc
xchg
test
neg
loop
mov
mov
(bad)
daa
neg
sar
scas
inc
jae
mov
pushf
sbb
sub
sbb
sub
push
mov
jle
fidiv
fidivr
out
in
aas
or
push
ror
mov
push
adc
movs
xchg
sbb
add
adc
mov
mov
test
pop
add
test
popf
inc
xor
ror
(bad)
shl
dec
cmps
clc
pop
in
mov
int3
pop
jp
jge
daa
sbb
fild
push
cmp
ins
push
fbld
std
js
nop
jmp
dec
jnp
(bad)
push
aam
out
jbe
aam
mov
iret
sub
aad
mov
das
cdq
cld
push
into
ins
jg
or
pop
adc
aas
test
data16
xlat
add
adc
aam
jb
xchg
aaa
jns
cmc
loop
repnz
push
push
bound
jno
or
mov
lods
or
imul
jbe
mov
(bad)
std
out
cli
xor
adc
(bad)
sbb
jl
mov
fld
pop
js
push
jne
jb
lods
sbb
jmp
ds
cmp
inc
add
and
and
dec
xor
fdiv
jl
enter
gs
mov
inc
or
push
push
cs
cmp
mov
div
add
mov
fdivr
ret
retf
neg
out
xchg
jnp
pop
pop
nop
push
dec
xor
jae
stc
push
or
mov
fmul
pop
(bad)
mov
sti
and
adc
and
and
scas
cmp
les
enter
fsubr
addr16
jmp
and
stos
fldenv
lods
fistp
in
cmp
(bad)
mov
fs
inc
inc
xchg
mov
sbb
iret
push
jmp
scas
inc
lds
dec
dec
sub
jmp
xor
ja
repz
inc
or
or
jo
scas
inc
in
arpl
call
pop
push
rcl
mov
inc
ror
cmps
out
sbb
mov
add
lods
ins
mov
mov
fidivr
cmp
test
xor
jbe
pop
pop
adc
rcr
push
push
xchg
or
push
mov
fdivr
sbb
mov
retf
add
clc
jns
into
sti
cmp
adc
adc
loopne
xchg
cmp
test
cmp
out
(bad)
out
jecxz
pop
xlat
jo
call
out
aas
ins
dec
sub
dec
int3
int3
mov
(bad)
(bad)
jno
adc
add
inc
sub
sub
pop
fsub
nop
mov
push
movs
sub
jge
in
xchg
cmp
xchg
out
ret
shld
aad
cdq
out
sbb
call
daa
xor
fsub
iret
test
add
fisubr
or
xor
ret
arpl
outs
das
ret
rol
pop
stos
lods
dec
clc
inc
inc
or
push
cmps
int3
push
sub
mov
cmp
xchg
pop
pop
cmp
repnz
xchg
call
push
jae
sub
dec
in
mov
out
adc
mov
xchg
shl
mov
out
lahf
aam
and
lds
int3
call
add
adc
xchg
jnp
or
adc
sub
rol
mov
add
cmps
dec
jg
or
call
outs
jae
ret
mov
add
jmp
xor
cwde
fsubr
cmp
xor
mov
les
jne
rol
retf
dec
loopne
loop
mov
(bad)
sub
add
xchg
mov
pop
mov
pop
inc
cmp
and
mov
xchg
stc
add
pop
mov
xchg
cs
lahf
mov
cdq
in
cmp
adc
adc
xor
jge
clc
mov
xchg
xor
imul
mov
pusha
popf
or
fsin
add
rol
(bad)
(bad)
aam
sub
popa
adc
or
dec
adc
stos
in
dec
inc
sbb
add
stc
not
push
jae
ds
addr16
mov
mov
pop
jno
xchg
shr
cmp
mov
outs
out
dec
push
sbb
pop
pusha
jg
sub
int3
push
aas
enter
pop
rcr
pop
jg
or
and
shl
bound
mov
pop
or
xchg
setbe
sbb
(bad)
push
pop
xchg
stos
inc
test
pop
in
shl
ret
loopne
xchg
inc
shl
mov
jmp
imul
movs
inc
inc
mov
add
mov
aad
out
lds
mov
push
lods
repz
lds
or
jmp
cmps
push
sar
sbb
dec
(bad)
outs
sbb
xchg
fsubr
push
aam
lahf
sbb
adc
imul
adc
inc
out
cmp
test
ja
mov
push
or
adc
cmp
outs
rcr
push
cmp
mov
pop
repz
push
sbb
mov
ja
sbb
xchg
mov
scas
data16
cmc
bound
les
mov
jno
pop
cs
test
xor
add
xor
cmp
dec
xor
sbb
int
outs
sbb
popw
mov
push
pusha
cmp
call
rcl
sahf
and
push
mov
loopne
stos
jmp
pop
(bad)
popa
das
sub
cdq
out
cld
retf
dec
mov
les
ja
or
fsubr
mul
mov
sub
push
xor
xor
dec
jl
mov
push
add
inc
js
loopne
mov
leave
enter
mov
out
jge
mov
rcl
jp
pop
dec
xor
sahf
lahf
out
or
mov
icebp
int
mov
sub
and
push
sahf
in
sub
not
xor
mov
jl
mov
sub
aad
jmp
xchg
dec
sbb
dec
ss
stc
pop
stos
mov
jl
je
test
shr
aas
out
dec
popf
mov
je
loop
mov
lock
add
es
mov
mov
es
popa
sub
or
sub
ret
xor
sub
mov
stos
cmp
popf
pusha
das
cmp
in
pop
pushf
push
xlat
mov
lea
out
cmp
fwait
xor
lods
sub
inc
aas
mov
iret
pop
pushw
jnp
repz
arpl
mov
ret
inc
mov
dec
jb
iret
cmp
jb
adc
inc
sub
mov
fbld
cmp
test
dec
repz
cmp
mov
stos
fld
sbb
repnz
mov
call
call
movs
and
pop
das
dec
rol
mov
adc
xchg
shl
arpl
xlat
test
xchg
jb
sub
mov
sub
test
bound
sbb
cli
push
xor
adc
dec
push
inc
mov
cmp
or
add
adc
cli
pop
aas
(bad)
ja
inc
es
mov
out
dec
outs
jb
xor
jmp
xchg
inc
imul
imul
cmp
not
test
stos
fldcw
sub
sbb
inc
adc
inc
aam
int
shr
cwde
stc
(bad)
jb
pop
fnstcw
int
push
int
jg
dec
mov
jg
adc
jmp
dec
fldcw
mov
aaa
inc
mov
loope
rol
push
shld
dec
xor
aaa
addr16
xor
into
or
ins
test
dec
jmp
mov
mov
push
ins
push
sti
out
arpl
gs
inc
adc
into
pop
pop
mov
push
movups
inc
jmp
pop
mov
outs
adc
inc
sub
(bad)
jnp
add
xchg
pusha
fs
inc
outs
xchg
imul
add
adc
test
pop
shr
mov
movs
cdq
pop
cmp
es
pusha
test
adc
repnz
xor
lahf
outs
cli
dec
or
add
dec
cmps
not
push
mov
jmp
int3
lds
imul
ja
mov
shl
loopne
inc
pop
fild
outs
mov
fbld
pop
inc
jb
movs
or
adc
sbb
xor
ja
push
xor
sbb
push
pop
fs
and
adc
push
cmp
xor
fimul
iret
mov
xchg
(bad)
jmp
add
in
cld
movs
pop
ret
lahf
mov
and
xchg
int
lahf
stos
ror
lods
pusha
xor
out
fwait
pusha
or
shl
push
ficom
mov
xchg
out
ins
std
neg
xchg
jmp
ror
(bad)
fbld
inc
xchg
jl
mov
pop
gs
loope
adc
retf
sub
jno
icebp
or
jle
cdq
movs
jbe
jmp
enter
dec
stos
int3
mov
dec
mov
mov
sti
ds
int3
push
inc
add
in
xchg
(bad)
xchg
out
int3
sub
call
sbb
pop
pop
jg
(bad)
cwde
lods
sbb
mov
sub
add
xchg
je
jge
add
lock
dec
cmp
pop
push
and
or
ror
pop
mov
mov
dec
xchg
fisub
inc
cmc
sub
fadd
jl
es
adc
sbb
scas
(bad)
repz
(bad)
or
pop
aam
pop
ja
sub
popa
in
rol
jne
push
dec
fiadd
mov
ja
lea
inc
or
sub
pop
push
pop
or
lods
add
popf
sbb
pop
arpl
dec
cmp
test
cmp
arpl
mov
xlat
shl
inc
data16
icebp
repnz
or
or
mov
sbb
mov
nop
repnz
adc
sub
inc
or
popa
jge
aad
fdivr
fbstp
fmul
adc
pop
add
jno
sahf
(bad)
stos
inc
popf
or
inc
pop
fisttp
dec
aaa
mov
sub
adc
shl
cmp
add
mov
xor
inc
adc
or
call
push
(bad)
push
das
and
out
xchg
dec
mov
jmp
stc
jb
and
cmps
dec
xchg
pop
int
fisttp
mov
rcr
test
push
inc
shl
cld
sub
inc
hlt
jae
jmp
ins
popa
mov
mov
cmp
shl
and
mov
push
scas
mov
pop
pushf
jne
sbb
pop
xor
sbb
xor
je
sahf
ret
pop
or
mov
xor
mov
sub
ret
movs
lds
retf
(bad)
and
inc
(bad)
test
fisttp
pop
in
mov
dec
mov
xchg
push
mov
mov
inc
(bad)
scas
leave
add
bound
dec
jp
enter
sahf
push
stc
jmp
or
out
aaa
jmp
dec
jns
xchg
in
mov
jno
jmp
jbe
lea
dec
push
sbb
adc
add
jnp
or
add
shr
retf
(bad)
out
test
adc
xor
neg
hlt
push
xor
xor
(bad)
push
push
and
or
xor
loope
stc
out
jecxz
pop
into
iret
outs
popa
xchg
std
adc
sub
cli
fild
loopne
jnp
sub
daa
pop
jle
jo
xchg
mov
sbb
push
int3
or
push
push
jmp
mov
mov
sub
pushf
les
mov
cwde
loopne
call
fiadd
loopne
cli
aaa
pop
jmp
xchg
and
inc
(bad)
icebp
add
js
cli
ret
(bad)
lock
push
inc
inc
inc
jmp
sub
lea
xchg
shl
aam
sahf
rcl
jno
mov
mov
les
jge
cmp
aam
ret
jecxz
and
stos
cdq
test
std
jl
add
das
gs
sub
push
pop
xor
ins
mov
es
out
in
jae
adc
inc
mov
sti
call
xor
mov
aam
dec
pop
hlt
ja
js
and
pop
int3
xor
ds
and
add
pushf
(bad)
es
sar
jne
push
stos
dec
xor
dec
lock
fidiv
mov
addr16
icebp
int
bound
adc
rcr
mov
push
bound
jge
addr16
scas
dec
(bad)
push
xor
aam
pop
sbb
scas
lods
shl
rol
pop
stos
inc
data16
fsub
push
outs
mov
cld
pop
sub
lock
(bad)
dec
movs
int3
cli
jg
push
xor
push
adc
push
mov
sub
push
pop
add
push
leave
lock
cs
fild
lock
push
ja
push
adc
loope
fwait
out
pop
fwait
xor
not
aad
jl
(bad)
cdq
aas
xor
out
and
push
jl
cmp
(bad)
dec
neg
add
dec
test
sbb
mov
push
shl
inc
xchg
add
sbb
out
jb
cmp
add
scas
loope
test
cmps
push
add
clc
mov
dec
inc
retf
add
ficomp
jae
jno
cmp
push
(bad)
inc
addr16
data16
cmp
push
push
pop
inc
repnz
and
fwait
imul
ins
sub
(bad)
xchg
stos
loopne
add
js
inc
rcl
mov
nop
es
xor
(bad)
in
fs
cmp
xchg
mov
xchg
push
lods
fcmovnu
imul
scas
adc
cwde
cmp
jb
clc
cmps
or
data16
push
scas
sub
call
mov
inc
mov
jo
cmp
ins
ficomp
jecxz
mov
outs
ds
sbb
(bad)
xor
stc
xor
add
mov
xor
pop
data16
cmp
xchg
push
repz
push
dec
lea
stos
mov
inc
lock
mov
jmp
cmp
sbb
cmc
test
xchg
mov
cmc
data16
aaa
imul
lea
(bad)
fbstp
or
add
(bad)
daa
rol
xor
scas
(bad)
(bad)
sti
fwait
shl
cmps
cmp
popf
mov
cmc
shr
lods
cld
pop
bound
or
mov
cli
mov
push
jle
fdiv
fs
sbb
fsubr
pop
ins
lea
int
mov
leave
xchg
xor
mov
push
xchg
mov
(bad)
jmp
cmp
fnstenv
icebp
scas
test
cmps
or
retf
loop
mov
inc
in
jne
sbb
inc
(bad)
loopne
and
sub
shl
js
sbb
aam
dec
xchg
push
adc
adc
push
outs
call
(bad)
out
jno
mov
js
clc
std
dec
cmp
ror
mov
movs
mov
push
adc
test
lock
cmp
test
push
dec
mov
inc
pop
inc
jnp
aas
xchg
pop
rcl
mov
jmp
popa
and
and
xchg
pusha
xchg
dec
js
pop
or
addr16
mov
jno
sub
repnz
outs
sbb
cmp
js
mov
and
lea
sahf
mov
out
adc
add
lahf
xchg
and
gs
xor
mov
jp
call
sbb
mov
pop
das
mov
popa
cli
or
pop
add
add
js
movs
inc
pop
ret
out
clc
pop
mov
inc
ins
out
pop
mov
je
mov
adc
popf
scas
test
add
inc
jp
mov
mov
mov
mov
or
fs
scas
pop
shl
jo
cmc
ins
lahf
mov
sub
jmp
jnp
mov
in
fst
push
imul
call
inc
ret
mov
nop
loope
cmp
jns
movs
cmpxchg
aas
inc
sub
test
xchg
xchg
push
movs
outs
aam
jmp
inc
ficomp
out
mov
fld
xor
or
fistp
sti
xchg
sub
xchg
icebp
test
dec
scas
dec
jmp
ror
cwde
dec
lahf
mov
jle
movs
popf
ins
push
mov
scas
mov
cmp
push
popa
adc
mov
test
movs
call
gs
or
xchg
dec
repz
call
call
pop
jae
(bad)
push
or
push
outs
push
mov
add
push
fist
or
xor
xor
sbb
mov
cmp
in
pop
cwde
(bad)
pop
pop
jmp
push
movs
aas
cmp
sub
sbb
(bad)
xchg
leave
leave
dec
inc
popa
inc
push
mov
dec
mov
mov
(bad)
mov
sbb
cld
loop
cmp
mov
retf
daa
jne
mov
div
inc
xor
xor
retf
xchg
or
ins
xchg
es
cli
outs
add
mov
or
dec
add
adc
cmc
ss
into
inc
pop
ror
data16
call
push
mov
ins
jle
shl
xor
push
push
shr
inc
dec
call
mov
data16
stos
dec
mov
retf
ds
rcl
inc
rcr
dec
in
int3
dec
sub
lds
sub
mov
je
std
nop
dec
ret
fwait
das
add
push
clc
out
add
xchg
leave
hlt
adc
push
fmul
(bad)
push
sub
call
addr16
dec
push
push
in
mov
and
imul
aad
dec
fild
loop
mov
mov
jp
aaa
lahf
icebp
lds
adc
pop
cld
push
cld
test
mov
ficomp
sub
mov
pop
mov
inc
stos
mov
ins
fbld
mov
out
fst
dec
xor
mov
pop
(bad)
sbb
inc
lods
mov
loopne
push
into
dec
push
ror
xor
call
(bad)
xor
clc
stos
in
repnz
cld
lock
test
out
outs
ror
(bad)
or
or
test
cdq
sub
in
mov
data16
and
lahf
dec
jge
shr
push
out
mov
icebp
scas
pop
push
cmp
pop
and
stos
lods
mov
cmp
scas
xchg
sbb
sbb
pusha
repnz
xlat
shl
icebp
in
das
ins
push
popa
sbb
mov
dec
pop
push
or
mov
cmp
ret
cmovle
and
mov
(bad)
mov
icebp
in
aad
jne
mov
xor
(bad)
xor
into
mov
imul
xchg
inc
push
fisttp
or
add
daa
(bad)
out
btc
outs
std
adc
shl
aad
ins
loope
xor
sbb
cmp
inc
push
jno
xchg
xchg
adc
scas
ins
ds
jge
push
cmc
jae
in
loope
lea
push
repz
shl
sub
add
mov
push
outs
push
jb
mov
sub
xchg
xor
mov
push
rcl
call
jo
cmp
inc
jns
(bad)
loop
cmps
pop
jne
sbb
push
xor
std
push
std
and
mul
mov
push
(bad)
jno
adc
and
xchg
push
sub
pusha
les
inc
cmps
push
add
inc
pop
sbb
cmps
xor
mov
add
add
scas
add
in
inc
imul
ficomp
int3
cmp
int
aam
and
hlt
shl
jae
or
mov
push
push
inc
xor
pop
dec
imul
jae
icebp
inc
push
xchg
sbb
dec
sbb
sub
retf
sahf
push
pusha
je
sub
pop
ret
or
jecxz
sbb
or
dec
out
push
dec
mov
pop
pop
out
xchg
imul
stos
pop
out
aad
mov
not
xchg
jno
fwait
cwde
in
idiv
sbb
out
mov
gs
test
into
sar
stc
icebp
push
test
or
or
mov
fldenv
cli
and
mov
xor
sbb
mov
xor
mov
test
fld
(bad)
cld
add
xor
add
lahf
jmp
mov
outs
lds
mov
sbb
out
inc
mov
cmps
jmp
fist
inc
fidivr
fs
mov
adc
stos
fldenv
xor
pushf
ret
mov
jno
xchg
dec
cmp
(bad)
mov
outs
stos
inc
imul
lods
mov
lock
cmps
xor
cmp
aaa
imul
nop
in
jo
lds
sub
ja
jns
scas
jae
shl
inc
popa
dec
aas
mov
push
test
or
loope
add
ret
out
sub
xchg
out
sbb
mov
gs
leave
mov
sub
dec
or
adc
shr
loopne
xor
clc
jecxz
popf
and
retf
add
sub
or
sbb
int
xchg
mov
add
pusha
and
or
or
or
neg
jnp
mov
lods
dec
adc
les
sbb
aas
ret
xor
iret
inc
xor
not
jno
push
push
stos
xchg
fs
pop
hlt
cmp
sub
hlt
xchg
xor
inc
rcl
repz
xchg
push
(bad)
fwait
or
sti
jmp
sub
fistp
leave
jmp
fstp
ins
lods
dec
jg
jne
dec
call
mov
daa
sti
push
pop
or
leave
cmp
out
mov
and
pop
rol
iret
xor
sbb
imul
popa
and
out
mov
mov
add
mov
jb
jb
pushf
(bad)
jle
arpl
push
pop
jmp
fs
jmp
fst
ins
neg
mov
ret
add
cmp
in
test
scas
mov
mov
or
cmps
pop
retf
aam
dec
ja
lea
pop
add
sub
or
or
fistp
xchg
and
mov
mov
pop
and
loop
or
xor
add
jnp
fnstcw
scas
fild
in
xor
add
test
rcl
dec
aam
outs
hlt
fstp
aaa
shl
cmp
mov
jns
out
es
int
mov
call
cmp
pop
ds
movs
add
adc
test
cmp
or
xchg
mov
dec
pop
sub
jnp
fldcw
add
bound
adc
in
aam
push
xor
mov
mov
mov
ds
jecxz
pushf
jp
std
repz
pop
adc
push
outs
sbb
sub
stos
or
gs
jno
(bad)
jmp
pop
dec
xor
in
pop
fs
and
stos
pop
push
mov
jne
jmp
cmp
push
sbb
test
arpl
jno
pop
jno
test
inc
jb
jl
cs
inc
cmps
shl
fmulp
ss
(bad)
dec
jb
xor
or
push
cld
push
push
rcl
cli
sub
imul
dec
and
sbb
loop
pop
and
mov
aam
not
out
test
mov
cmp
call
or
popf
xor
ins
xchg
and
jecxz
inc
cmps
lods
lods
lahf
je
add
push
loop
fs
or
not
popf
sub
mov
jae
in
loope
dec
(bad)
(bad)
mov
into
repz
dec
mov
cwde
ror
lock
or
xor
cmps
psllw
in
or
scas
xchg
push
repz
test
xchg
inc
iret
in
push
mov
or
add
mov
ret
dec
xchg
adc
mov
adc
pusha
dec
out
ret
or
aam
aaa
add
jnp
js
adc
bound
je
icebp
sub
mov
mov
out
mov
sti
ins
sbb
pushf
stos
mov
pop
or
add
add
ja
sub
inc
adc
popa
push
dec
pop
mov
fcmove
cmp
push
ss
imul
pop
lods
bound
cmp
xor
and
mov
push
jle
(bad)
cmp
add
mov
jmp
(bad)
lods
fsub
rol
adc
mov
add
adc
jne
retf
(bad)
mov
push
jmp
xor
xlat
sbb
add
sub
push
loop
(bad)
mov
mov
loopne
clc
imul
cmp
cmps
test
inc
les
xchg
xchg
adc
mov
cmps
cmp
mov
adc
ds
sub
mov
mov
mov
fwait
xchg
or
and
dec
jmp
outs
cmp
aas
jnp
mov
(bad)
sbb
rcr
mov
add
into
stos
mov
xchg
loop
cld
ret
cmp
jae
sbb
cdq
sbb
(bad)
xor
or
cmp
mov
test
stos
push
add
enter
xchg
sbb
scas
adc
lea
mov
adc
movs
mov
enter
fld
test
je
adc
dec
pop
ja
fs
add
ror
cld
daa
push
sbb
fld
and
xor
adc
pop
cmp
pop
daa
mov
jp
ret
cmp
inc
ror
adc
movs
xchg
loope
dec
outs
dec
jne
adc
pop
cmps
leave
js
ins
cmc
jb
xchg
call
dec
vunpckhps
adc
dec
popf
xchg
and
xor
add
loopne
sbb
adc
add
popa
cmp
add
sar
mov
pop
(bad)
ins
pop
in
mov
out
xor
in
movs
mov
sub
sub
cmps
shr
mov
mov
add
loop
pop
fiadd
hlt
movs
ins
test
jns
imul
(bad)
and
(bad)
js
jp
and
fstp
push
adc
out
rcr
mov
mov
movs
aam
cmps
mov
loop
stc
arpl
dec
mov
jg
lock
pop
pop
jnp
ins
fidivr
in
pop
mov
addr16
out
in
push
mov
push
and
stos
mov
pop
jnp
cmp
adc
lods
clc
or
sub
and
mov
fisub
push
and
iret
cmp
dec
lea
clc
popf
push
add
call
cmp
pop
rcr
jne
dec
jnp
mov
pslld
out
loopne
jge
in
ds
popa
mov
fild
push
jl
sbb
lock
jl
sbb
and
inc
sub
(bad)
repz
mov
mov
or
dec
mov
inc
mov
jl
xchg
adc
jl
xor
jmp
icebp
push
cmp
sub
jns
pop
shr
imul
popa
pop
inc
out
sbb
xchg
repz
and
repnz
call
xor
cmp
fcomp
cdq
ins
aas
add
(bad)
jbe
aam
sbb
and
jmp
hlt
scas
pop
ins
pop
movs
sub
call
stos
jae
neg
jne
and
test
jge
data16
mov
mov
pop
mov
in
retf
loop
dec
jb
and
inc
and
ror
pop
mov
pop
fwait
nop
pop
sub
mov
stos
inc
cmp
or
loope
add
push
mov
or
mov
push
xor
scas
fcomip
sbb
es
mov
movs
adc
and
adc
sbb
mov
aad
lahf
mov
fcomp
clc
pushf
(bad)
cli
or
dec
in
out
jmp
jge
rcl
jmp
push
out
mov
pop
push
add
jle
in
fisubr
jge
mov
cmp
ror
int3
imul
iret
pop
out
sub
(bad)
cmp
rcr
shl
dec
mov
add
in
mov
js
in
stos
mov
bnd
(bad)
mov
popa
push
add
and
inc
dec
mov
lea
fcomp
dec
pop
mov
and
popa
mov
int3
lods
push
daa
xchg
mov
push
mov
in
(bad)
int3
and
enter
fidivr
xor
push
cmc
xor
cmp
jle
add
xchg
xchg
cmp
stos
cwde
sahf
jmp
nop
outs
repnz
cdq
and
addr16
cmp
xlat
mov
jle
jae
mov
or
jne
jp
imul
cmc
cdq
out
cdq
push
cmps
dec
cmc
ficom
mov
adc
sti
jns
pop
or
mov
mov
rol
fsub
mov
cmp
test
mov
xchg
mov
and
jl
dec
les
out
pop
push
xchg
repnz
cmp
inc
mov
xor
icebp
xlat
xor
or
lods
adc
neg
sbb
or
dec
dec
add
mov
adc
cld
sbb
xchg
test
cs
sub
add
sbb
jno
out
mov
in
push
leave
gs
push
scas
sbb
xor
cwde
and
and
dec
and
xchg
hlt
pop
sbb
add
aas
jecxz
or
dec
mov
scas
xor
fist
mov
inc
dec
sar
ds
mov
in
mov
mov
cmps
xchg
shr
push
repz
mov
adc
jae
enter
stc
mov
add
dec
in
push
cmp
jle
popa
push
mov
or
stos
(bad)
fsubr
call
sbb
inc
jnp
pop
pop
mov
pop
ja
iret
sbb
push
fisub
push
mov
xchg
pusha
ret
addr16
cdq
shl
mov
push
xor
dec
out
addr16
imul
cmp
pop
imul
and
lock
xchg
pop
shr
mov
jns
movs
fiadd
fdivrp
cmps
aas
sub
ins
lahf
mov
jo
outs
cmps
mov
cli
sbb
in
mov
(bad)
repnz
or
fist
adc
lahf
mov
cmp
mov
inc
cld
mov
xchg
jnp
dec
mov
sbb
adc
mov
icebp
dec
cmc
or
imul
jnp
icebp
(bad)
xchg
inc
xchg
retf
ins
arpl
lea
add
jbe
and
sub
leave
pushf
mov
push
mov
push
xor
xchg
movs
inc
jb
mov
push
pop
add
mov
aam
push
movs
pop
push
cmp
pop
call
cdq
push
push
aaa
push
jae
data16
or
ja
(bad)
movs
inc
xor
mov
mov
adc
ret
in
jnp
adc
and
push
sbb
jmp
out
ds
jne
aam
call
pushf
dec
cmp
mov
cdq
mov
pop
dec
loop
dec
ins
inc
sbb
icebp
jmp
and
xor
cmp
mov
fs
ja
push
sti
in
leave
in
sar
pop
jmp
mov
push
dec
add
test
pop
mov
cmp
iret
mov
clc
push
in
push
mov
and
or
adc
out
data16
(bad)
cmp
add
pushf
and
ds
mov
repnz
mov
call
ret
cmc
fist
aaa
ins
inc
and
movaps
mov
jo
rol
(bad)
repz
pop
(bad)
xchg
in
retf
add
xchg
(bad)
es
fbstp
sbb
adc
mov
adc
push
cmp
mov
mov
mov
cwde
popa
fsubr
sub
iret
retf
pop
sub
cld
push
(bad)
xchg
pop
sub
std
add
pop
jp
out
sbb
aaa
inc
std
pop
jns
mov
jle
mov
ds
adc
out
ja
icebp
mov
adc
jne
aas
jmp
test
int
pop
dec
xlat
sti
cmp
in
jo
(bad)
call
push
add
lods
jo
loopne
inc
add
mov
xor
jne
inc
cs
in
iret
enter
addr16
add
push
call
adc
popf
sbb
jnp
(bad)
xchg
stos
jl
ffree
pop
js
jno
pop
adc
aad
iret
cdq
pop
div
lods
and
retf
loop
ds
or
movs
xor
inc
test
pop
mov
dec
sbb
in
movs
ds
(bad)
shl
jno
mov
pop
inc
pop
aas
push
aaa
(bad)
je
(bad)
push
mov
inc
inc
into
cmp
xor
mov
jns
add
aas
mov
xor
dec
cld
aaa
fwait
xchg
xlat
sbb
pop
outs
nop
jmp
jae
cmp
inc
pushf
sar
add
lahf
pop
fmul
aaa
fild
lods
lock
pop
mov
in
fiadd
jns
adc
dec
out
test
push
jb
ins
mov
ror
mov
or
shr
cmp
fstp
adc
dec
xchg
popf
push
add
push
daa
pop
mov
aas
push
nop
or
and
cmp
outs
gs
or
push
loop
nop
cdq
push
aaa
test
rcr
inc
lods
pop
jns
pop
cmp
pop
mov
mov
fs
fst
mov
cwde
movs
and
and
xchg
or
pushf
add
dec
or
inc
lods
or
test
fwait
push
test
shr
xchg
and
mov
and
jp
ins
jle
enter
or
mov
iret
sbb
mov
les
lahf
mov
cmp
mov
xor
pop
push
pop
test
fsub
adc
jge
dec
sar
push
cld
xchg
mov
sub
leave
adc
loopne
repnz
dec
jbe
movs
lock
dec
test
in
int
sbb
or
imul
iret
iret
cmc
push
sbb
in
xlat
cld
adc
pusha
push
imul
cmp
arpl
in
bound
lock
(bad)
int
je
shl
push
mov
cmp
jo
mov
es
jl
sti
cmp
into
push
mov
xchg
stos
mov
mov
xchg
fst
mov
fbld
ins
add
jge
(bad)
mov
loope
jmp
mov
fld1
movs
adc
push
push
imul
mov
in
cwde
ss
fidiv
mov
addr16
mov
jnp
cmc
shl
jns
out
(bad)
data16
push
loopne
push
push
xor
push
rcl
jg
lahf
adc
mov
out
jecxz
cli
and
sbb
sbb
cdq
xor
push
daa
inc
(bad)
lea
pmaxsw
loope
sbb
(bad)
pop
sbb
mov
add
pop
std
enter
iret
jl
inc
sub
add
jmp
push
shl
and
fisttp
out
xchg
pop
bound
cli
sub
out
cdq
sbb
(bad)
lahf
pop
add
xchg
and
cmp
fistp
cs
stos
add
or
jg
les
sub
pop
mov
shl
jl
mov
or
mov
sub
push
dec
lods
mov
shr
mov
mov
in
repz
or
repnz
ret
cmp
xchg
xor
sub
shl
mov
ret
hlt
push
inc
out
dec
nop
or
or
adc
push
gs
fisttp
jmp
clc
test
es
adc
cli
pop
or
jne
mov
mov
pop
rcl
call
sub
(bad)
mov
pop
and
add
inc
pop
sahf
push
adc
fld
cmp
jecxz
sar
push
sub
mov
cmps
shl
sti
retf
js
ds
cmp
nop
fmul
and
sbb
or
dec
(bad)
mov
cmp
mov
std
mov
cmp
sub
mov
test
xchg
and
lahf
aas
dec
repnz
pop
loope
xchg
movs
in
inc
dec
adc
jmp
out
cs
leave
test
je
mov
call
jb
sahf
mov
pop
stos
rol
movs
jnp
push
loop
pop
(bad)
mov
(bad)
push
lock
adc
das
add
xchg
xchg
jmp
mov
jae
ret
push
push
sbb
mov
and
(bad)
outs
push
arpl
mov
adc
pop
xchg
mov
jae
rcl
mov
mov
jno
mov
jbe
jg
xchg
arpl
mov
sub
mov
jl
fisttp
push
push
dec
jecxz
icebp
push
repz
ror
cmp
mov
shl
(bad)
pop
mov
iret
fidivr
test
loope
mov
jge
ja
pusha
cli
cwde
and
lods
dec
mov
in
push
sbb
addps
add
push
fwait
xor
lea
mov
xchg
test
aas
repz
push
mov
jno
pop
jmp
adc
outs
dec
mov
pop
jmp
ins
push
or
repnz
cmp
jns
jb
ror
pop
sub
xor
out
outs
into
out
sub
sbb
std
and
test
adc
xchg
jl
(bad)
and
icebp
loop
repnz
cs
dec
cmp
lds
pusha
push
xor
imul
aad
test
xor
fdivr
mov
aaa
out
je
cs
cs
jl
push
lahf
jecxz
xchg
aas
xor
ficomp
mov
test
add
data16
jmp
xor
jle
pop
push
inc
push
ds
push
hlt
mov
pushf
cmp
dec
push
or
lock
shl
movs
pop
jbe
mov
mov
push
pop
jo
pop
sub
cli
xchg
mov
cwde
sub
inc
mov
outs
or
repnz
popf
xchg
cdq
inc
xchg
int
pop
repz
sbb
test
movs
test
jno
and
xchg
mov
or
cmp
push
dec
sahf
ds
xor
xchg
(bad)
adc
sub
xor
enter
test
movs
dec
pushf
jmp
scas
scas
mov
pop
cmp
or
out
ins
(bad)
repnz
sar
aad
arpl
rol
and
stc
outs
mov
mov
lods
jne
mov
hlt
push
repnz
xor
pop
mov
jge
cmp
fidivr
push
daa
xchg
std
les
neg
movs
jae
out
out
mov
mov
stc
imul
scas
jmp
xchg
repz
sbb
dec
pop
rcl
imul
adc
add
(bad)
in
pop
push
add
test
pop
push
movs
je
xor
xor
rcr
mov
(bad)
sbb
inc
jle
add
call
lods
lods
repz
inc
sar
nop
sub
ins
mov
repz
fldenv
ins
push
mov
add
inc
mov
jnp
ret
inc
test
dec
pop
mov
paddsb
mov
push
add
push
cmps
scas
sbb
call
jg
xchg
cmc
fcomp
xor
clc
or
xlat
jg
shl
xchg
in
in
pop
pop
sub
jbe
pop
mov
mov
nop
adc
pop
mov
pop
xchg
not
mov
mov
loop
ret
push
aaa
mov
dec
sbb
xchg
or
jno
and
mov
jb
fisttp
jg
data16
pop
xchg
xchg
xor
rcl
test
or
je
fcmovnu
cmp
or
xlat
test
push
mov
jbe
int
mov
or
sub
sbb
js
adc
jmp
in
jmp
mov
in
(bad)
(bad)
inc
and
pop
ds
outs
iret
lea
mov
(bad)
test
int
cmps
lds
ret
lock
jmp
jb
je
pop
mov
out
(bad)
div
mov
pusha
das
add
add
or
and
dec
std
or
(bad)
mov
mov
aaa
xchg
ins
jecxz
scas
or
add
cld
jnp
in
jl
xor
outs
mov
mov
xor
fdivp
xchg
in
fisttp
scas
jne
xchg
sbb
movs
int3
or
mov
stos
adc
push
imul
frstor
daa
cmps
pop
push
sub
sbb
scas
mov
fdivr
sti
fcmovb
(bad)
xor
mov
jmp
stc
xchg
daa
out
inc
xchg
jmp
sub
sub
ror
or
pop
mov
ds
pop
jmp
dec
push
pop
(bad)
iret
pop
inc
or
gs
iret
sbb
aaa
retf
div
(bad)
lods
xchg
mov
adc
test
mov
sub
mov
mov
inc
inc
(bad)
jl
stos
mov
call
(bad)
jmp
ins
xor
outs
mov
sbb
and
fisttp
and
mov
push
cmps
mov
xor
sbb
or
rcl
sbb
push
test
xchg
fst
rol
lock
outs
out
jne
leave
cli
pop
and
nop
repz
call
fisubr
sahf
ficomp
add
cmps
test
cmp
inc
or
pop
inc
loopne
xchg
cmp
inc
fwait
push
ror
jbe
sub
daa
ret
push
xchg
push
sub
fcmovbe
sub
retf
clc
sub
adc
fdiv
mov
js
sbb
sbb
out
(bad)
mov
outs
mov
cmc
aam
movs
push
int3
or
cmps
xchg
pop
jb
push
push
test
cmp
mov
xor
call
jp
mov
mov
jle
sbb
and
adc
mov
(bad)
stc
dec
punpckhbw
dec
mov
dec
pop
out
dec
pushf
loope
pop
xchg
js
and
(bad)
icebp
int
inc
in
xor
sbb
jns
sar
push
xlat
imul
iret
test
femms
jbe
ja
push
push
cmp
pusha
lods
(bad)
sbb
xor
push
inc
push
pop
pop
jns
add
pop
mov
push
arpl
inc
sbb
push
pop
or
mov
mov
fnstenv
push
rol
mov
and
lahf
(bad)
test
lock
pop
ror
pop
jbe
push
mov
inc
xor
cwde
dec
fs
xchg
add
aam
arpl
push
les
xchg
loopne
mov
mov
pop
out
je
fimul
mov
into
xchg
mov
xor
xchg
retf
inc
sti
inc
inc
test
fsubr
xchg
push
and
fs
or
sbb
dec
test
xor
xchg
or
shl
xor
adc
test
mov
je
call
repnz
mov
cmp
leave
add
ins
(bad)
iret
into
es
mov
mov
mov
cdq
sbb
jg
stc
fsub
pop
je
sub
js
or
out
scas
ret
sub
inc
daa
jle
sub
pop
cli
cdq
ret
adc
xchg
rcr
push
addr16
sbb
outs
add
dec
daa
jge
cli
pop
push
mov
pop
mov
retf
jno
imul
stos
xor
hlt
mov
mov
inc
cmp
mov
loope
fidivr
retf
mov
xor
xchg
arpl
xchg
dec
push
(bad)
jae
adc
and
cmp
add
and
and
and
nop
or
fld
xchg
sub
and
cmp
int3
adc
sti
inc
loop
and
sub
sub
mov
in
dec
popf
mov
mov
xchg
ins
pop
pminsw
mov
pusha
lahf
sbb
and
jae
in
rcl
and
sbb
das
or
and
fisubr
xor
pushf
cmp
xor
sbb
sahf
into
mov
test
jl
push
scas
dec
out
into
stos
add
mov
sbb
outs
stc
add
inc
xor
(bad)
adc
mov
xlat
pop
mov
and
cli
and
ja
test
mov
loopne
inc
sar
dec
pop
push
ins
dec
in
mov
dec
adc
push
xchg
push
inc
movs
mov
jp
rcr
call
dec
cmp
dec
lahf
test
jle
sub
and
bound
leave
pop
or
pusha
nop
sbb
sti
push
jns
mov
in
imul
mov
push
test
pop
leave
dec
repnz
push
fcmovb
mov
inc
and
mov
and
and
ins
xlat
inc
cmp
(bad)
shl
xchg
lods
lds
add
iret
dec
or
(bad)
shr
or
fnsave
hlt
and
jb
imul
jmp
xor
fist
xchg
add
dec
add
cmp
sub
mov
and
inc
aad
psubusw
aaa
in
ficomp
in
inc
sub
or
and
pop
mov
sub
push
bound
xchg
dec
or
mov
ins
mov
mov
jge
sub
dec
cli
sahf
stos
daa
mov
add
shr
js
xor
test
in
mov
lods
pop
inc
cmp
cld
repnz
mov
push
in
dec
mov
mov
fcomp
movs
mov
xor
outs
push
shr
mov
(bad)
fwait
mov
pop
pop
sub
hlt
sub
mov
xchg
mov
sbb
add
idiv
outs
(bad)
js
stc
pop
xor
pop
or
push
jb
push
push
push
popa
jnp
jecxz
xor
in
cdq
fiadd
xor
xchg
xchg
inc
loope
in
add
lea
mov
xchg
mov
fdivr
xchg
cli
mov
xchg
(bad)
movs
in
jp
cmp
mov
mov
push
add
cdq
adc
loope
pop
xor
push
mov
pop
xor
jne
sbb
add
scas
dec
movs
xchg
sub
les
imul
add
jmp
loop
call
jmp
sbb
jmp
cdq
shl
dec
and
sub
cmp
and
repz
repnz
fadd
inc
and
jne
cs
inc
and
push
and
and
sub
push
scas
gs
dec
ins
ret
lock
inc
dec
std
dec
lods
jns
pop
popa
mov
int3
cmp
pop
bound
push
or
dec
sbb
ins
outs
outs
ins
cdq
cmps
arpl
stc
xchg
pop
cli
ins
fsub
iretw
inc
hlt
pop
inc
call
pop
mov
leave
add
fs
lahf
sbb
adc
retf
xor
and
mov
mov
cmp
push
xor
lea
add
mov
mov
mov
mov
(bad)
lahf
mov
adc
mov
mov
inc
clc
sar
fidivr
sub
add
aam
add
cwde
cmp
ins
loop
movs
stos
mov
jecxz
cmp
add
aam
fild
jle
rcl
push
jne
pusha
adc
in
add
cmp
push
ja
gs
jp
mov
(bad)
mov
push
stos
pop
push
imul
push
push
icebp
fild
mov
clc
add
add
ret
push
dec
cmp
fwait
in
jmp
stc
push
mov
bnd
add
push
and
mov
cmc
pop
push
cmc
sbb
ja
mov
or
xor
jmp
lds
aad
add
sbb
xor
pop
fistp
test
adc
sub
mov
jo
enter
scas
add
dec
cli
mov
sysexit
bound
popa
jnp
cmps
ret
xor
sti
sbb
out
xlat
and
sub
faddp
dec
retf
pop
shl
mov
jbe
push
push
mov
hlt
push
sti
(bad)
retf
add
cs
mov
sbb
adc
pushf
out
rcr
pop
inc
mov
ja
stc
bnd
aam
aam
mov
push
(bad)
fstp
dec
jge
sub
jmp
push
or
arpl
pop
xor
shl
cmp
xor
dec
pop
push
add
add
push
mov
out
sbb
enter
into
mov
stos
mov
adc
jae
div
lods
inc
mov
clc
int
dec
fimul
dec
arpl
rol
fistp
jb
enter
and
loop
dec
mov
movs
das
sub
jle
sbb
push
int
int
cli
dec
adc
(bad)
je
xlat
mov
jbe
aam
cmc
pusha
sbb
(bad)
shr
push
xor
mov
pushf
aad
dec
retf
xchg
adc
bound
pop
and
sti
cmp
dec
imul
pushf
jge
xchg
or
cmp
aam
xchg
and
xchg
pop
jo
mov
sbb
call
imul
jns
or
movs
pop
pop
xor
mov
test
push
sti
cmp
or
inc
sbb
and
sub
stos
test
sti
mov
jno
out
adc
jns
stos
dec
jne
mov
(bad)
iret
xchg
sar
aaa
pusha
int
clc
int
mov
mov
shl
xchg
xor
jbe
in
cmp
test
and
aas
mov
adc
mov
movs
mov
jge
shl
pop
movlps
mov
mov
(bad)
ds
test
loopne
loope
dec
lahf
and
xchg
adc
jmp
cmp
movs
adc
adc
pusha
sbb
cdq
xchg
inc
(bad)
cli
sbb
mov
xlat
jmp
scas
lahf
imul
mov
add
pop
pop
jmp
mov
sub
dec
and
and
add
popa
mov
cmc
sbb
mov
and
shr
das
lods
cmp
mov
ror
xchg
fsubrp
lods
pop
mov
jno
jge
test
or
adc
adc
pop
ret
pushf
mov
sbb
hlt
push
xor
popa
loop
jo
pop
ss
cs
pushf
enter
fisubr
mov
loope
clc
mov
das
xchg
xlat
(bad)
es
mov
and
mov
cmps
shr
add
add
loopne
in
cmp
lock
addr16
out
call
(bad)
neg
jne
in
pop
lds
repz
out
ret
push
dec
repz
and
and
mov
push
mov
dec
data16
and
lock
adc
mov
cmc
lds
push
mov
pusha
int3
jbe
push
mov
mov
cwde
mov
in
cmp
mov
data16
(bad)
in
loopne
mov
adc
jmp
movs
shl
xor
and
imul
(bad)
fisttp
inc
gs
dec
pop
sub
enter
movs
dec
inc
jne
dec
jno
or
lea
add
repnz
inc
retf
or
jno
sar
add
mov
sub
retf
xor
in
pop
mov
adc
jns
rcr
dec
mov
cmp
jp
push
mov
in
cmp
fist
dec
xchg
test
fimul
sbb
pop
mov
sub
ret
sbb
lods
ins
sbb
cmp
jmp
out
xchg
ins
imul
test
mov
ja
and
imul
jb
(bad)
ds
sbb
xlat
mov
xchg
jecxz
dec
(bad)
mov
and
add
call
test
xchg
addr16
fld
scas
dec
lods
cmp
jl
push
imul
test
sub
call
xor
xor
lea
lds
mov
pusha
pop
ins
sub
into
pushf
jge
jl
xchg
repz
push
and
pop
sbb
jl
pop
retf
jae
inc
in
sbb
repnz
popa
cmps
inc
sbb
in
mov
and
faddp
shl
fist
int3
push
(bad)
fbld
aaa
and
push
and
mov
cmp
dec
cmp
and
xor
pop
pop
cmp
sub
and
daa
pop
mov
mov
push
ins
jle
popf
pusha
imul
in
dec
jo
xchg
cmp
loop
movs
outs
std
mov
xor
popf
aaa
inc
pusha
inc
add
cmps
sar
test
xchg
stc
fnsave
rcl
push
shr
push
inc
inc
add
(bad)
push
rcr
and
lea
dec
mov
mov
dec
mov
scas
pop
push
call
xchg
xchg
popf
fwait
mov
mov
loopne
(bad)
xor
popf
not
or
out
cdq
sub
add
je
mov
daa
scas
mov
sub
inc
popa
cmp
dec
(bad)
lods
lds
jnp
int
out
pop
jnp
add
ss
adc
and
dec
bsf
and
imul
mov
xchg
rcl
push
and
jnp
mov
lods
out
sub
fst
sahf
ror
movs
in
fsub
xor
mov
sub
jno
pop
test
mov
xchg
jno
or
xchg
out
and
jnp
or
les
add
jle
pop
adc
xchg
and
push
loop
xchg
cmp
aad
adc
out
mov
nop
xchg
xchg
sbb
ins
shl
sub
outs
xchg
je
adc
dec
or
jle
xor
lods
xor
dec
dec
(bad)
lock
inc
test
cmp
int
push
mov
pop
push
in
add
test
mov
ds
sbb
and
push
dec
sar
mov
jbe
(bad)
dec
xchg
push
stos
fadd
fs
and
ins
xor
jae
nop
cmp
fiadd
and
das
fbld
mov
push
imul
inc
repz
xchg
or
test
sub
sahf
js
das
pop
popf
mov
push
xchg
mov
mov
or
fstp
(bad)
mov
jne
jbe
cli
stc
sub
cmp
std
adc
inc
mov
rcl
jae
fst
pop
jae
les
jne
pop
popa
leave
test
je
cld
fsub
jno
pop
leave
or
mov
dec
imul
push
test
repz
inc
mov
lahf
dec
adc
sbb
retf
(bad)
sbb
inc
cdq
mov
ins
out
dec
pushf
imul
aas
loopne
or
jg
push
test
outs
icebp
addr16
pop
imul
pop
mov
pop
add
stc
xchg
fwait
cmp
outs
xchg
fdiv
mov
push
fistp
bnd
mov
xchg
cli
(bad)
jnp
icebp
xor
repnz
lea
xor
mov
(bad)
push
xchg
inc
popf
pop
push
inc
adc
test
adc
lock
std
mov
(bad)
pop
(bad)
test
inc
mov
stos
in
aas
jne
adc
or
repz
push
mov
sub
pusha
jp
sbb
jns
icebp
xchg
clc
cmp
ret
fnsave
or
cmps
aaa
sub
add
lods
lds
adc
mov
add
outs
shl
inc
sub
inc
ja
jecxz
add
shr
inc
test
icebp
test
jno
push
jmp
jb
cmp
jecxz
outs
out
fldcw
movs
and
inc
mov
jns
inc
js
mov
dec
jg
cmps
push
fiadd
leave
add
in
mov
call
jmp
cmp
xor
dec
mov
idiv
or
xchg
lods
xchg
jo
push
test
les
in
xchg
mov
or
jmp
das
pushf
das
sti
jl
jecxz
jl
dec
inc
aaa
dec
pop
cwde
push
out
unpcklps
cdq
inc
cmps
jg
int
(bad)
jp
fild
pop
jae
scas
mov
lea
das
lods
mov
ds
mov
add
pop
mov
int
stos
ds
and
(bad)
push
pop
xor
xor
inc
movs
pop
ror
js
xchg
mov
hlt
daa
es
dec
mov
mov
sbb
cmp
or
test
push
cmc
and
and
movd
and
movs
fistp
adc
xchg
and
(bad)
jmp
xchg
jae
cmp
(bad)
pop
dec
add
add
xchg
scas
fdivr
and
xchg
bound
mov
std
push
inc
sub
sub
addr16
lea
rcl
jmp
test
sub
add
cmc
leave
jns
loopne
nop
pusha
xor
push
mov
(bad)
push
mov
push
pusha
pop
sub
and
pop
dec
mov
jge
fmul
push
es
inc
pop
pushf
mov
(bad)
xchg
inc
inc
jl
test
stos
mov
pop
mov
hlt
dec
cmc
xchg
pop
inc
icebp
rcl
jmp
dec
popf
mov
jnp
ror
retf
push
push
jb
shl
shr
jg
jecxz
xchg
loop
and
pop
inc
push
into
outs
cmp
jb
push
adc
jnp
aaa
cmp
es
test
lea
popa
jmp
add
lahf
hlt
push
call
mov
xchg
xchg
jnp
pop
inc
push
jg
ds
cmps
and
sbb
mov
in
mov
mov
sub
aaa
add
adc
xor
shl
rcl
pop
mov
cs
xor
(bad)
inc
or
out
adc
cs
inc
add
loop
retf
(bad)
mov
jnp
dec
xchg
sahf
mov
cmp
nop
(bad)
adc
bound
mov
sbb
dec
lods
add
xor
sub
ins
inc
adc
cwde
out
adc
(bad)
dec
jo
lods
movs
inc
mov
dec
xchg
ins
fisttp
pushf
test
test
lmsw
aas
jns
int
push
data16
mov
ins
xor
cmc
ror
les
mov
stc
and
fucom
shl
adc
sub
push
fs
cwde
(bad)
movs
jge
xor
xchg
mov
adc
ficom
loope
xchg
sub
sbb
and
cli
bound
lahf
mov
pushf
sub
sbb
jmp
int3
cmps
mov
enter
cli
outs
mov
js
push
scas
inc
inc
jno
inc
inc
js
and
mov
in
or
push
xlat
xchg
stos
fs
test
lds
adc
cli
fdiv
push
in
ins
push
sub
inc
mov
aaa
jnp
cld
leave
add
xor
call
xchg
out
clc
inc
arpl
xchg
inc
data16
loop
out
test
pusha
js
dec
mov
add
jge
pop
xchg
daa
js
test
ins
in
ds
jae
or
cmp
dec
fisttp
fwait
cdq
out
and
enter
cmp
(bad)
cld
inc
test
pop
and
nop
cmp
ja
dec
jnp
ins
mov
jmp
gs
sbb
pop
das
xacquire
jno
scas
mov
daa
xor
ss
stc
scas
push
mov
sbb
pmaxsw
stos
add
fwait
test
push
sub
add
or
inc
jmp
dec
test
mov
enter
(bad)
clc
out
mov
les
push
and
push
and
stc
sti
retf
mov
jae
test
or
and
jns
xchg
fcomi
push
mov
js
xor
in
test
push
movs
in
test
jmp
imul
xchg
mov
cmp
iret
mov
cmp
cld
fmul
aam
and
sub
jle
loope
test
ds
sti
mov
xchg
mov
jge
out
jmp
xchg
icebp
push
sbb
mov
rcr
popf
xchg
sub
add
inc
ss
leave
stos
jo
jecxz
xchg
cwde
jmp
pop
ins
into
dec
inc
popa
sbb
inc
jno
shl
sbb
push
xchg
(bad)
push
daa
mov
jns
jbe
test
outs
jge
out
mov
shl
sub
xor
mov
icebp
imul
push
aas
xor
imul
xchg
arpl
outs
bound
ret
std
movs
int3
(bad)
xchg
sub
sbb
test
clc
xchg
aaa
mov
bnd
repnz
frstor
sti
popa
jbe
mov
cmp
inc
jb
loope
jb
arpl
inc
dec
cmp
and
cmp
sahf
push
enter
out
mov
pop
movs
xchg
sbb
(bad)
inc
into
and
(bad)
and
out
sbb
into
push
sbb
sahf
aad
loopne
andnps
mov
sub
xchg
outs
sbb
adc
jae
adc
cmp
ffreep
xchg
mov
les
mov
jb
cwde
sbb
clc
mov
and
lahf
jge
mov
fwait
dec
mov
and
jb
jl
xor
jl
repnz
cmp
xchg
stos
pop
lods
mov
ror
pop
inc
scas
rcl
scas
(bad)
dec
ja
repnz
mov
rcr
push
push
fisttp
push
out
icebp
sbb
inc
repnz
and
scas
ret
pop
and
xchg
xchg
imul
loopne
mov
cmc
gs
rcl
loopne
jns
call
cmc
les
ret
ficomp
fxam
mov
adc
sbb
fucom
sub
in
cmp
cli
and
fwait
xor
rol
jl
fwait
ins
xor
inc
jmp
mov
and
dec
lock
les
mov
call
jnp
inc
push
add
loope
out
in
cmp
lahf
imul
and
cmp
push
lea
adc
lea
mov
or
sbb
mov
mov
loope
ss
jo
pop
iret
or
sub
mov
mov
lahf
push
cmps
enter
addr16
xchg
pop
in
or
mov
loope
jnp
mov
push
mov
mov
mov
hlt
or
cmp
int3
add
dec
mov
daa
aaa
fsub
push
icebp
imul
adc
push
xor
jg
(bad)
icebp
xchg
loopne
mov
data16
int
ja
mov
in
cdq
iret
mov
movs
and
ret
pop
pop
cwde
ins
movs
jmp
popa
inc
mov
xor
outs
cli
xlat
add
cmps
jp
push
sub
jne
lds
lds
mov
jmp
repnz
lods
and
sbb
pusha
ss
jmp
test
inc
dec
stos
xchg
or
jge
mov
xlat
das
push
jne
mov
clc
sbb
sub
nop
retf
pop
fs
jmp
imul
(bad)
inc
pusha
and
ror
les
sub
es
(bad)
(bad)
das
pop
dec
repz
sahf
push
add
out
movs
pop
jp
or
xchg
dec
je
and
sbb
add
outs
fmul
int3
ja
mov
lods
add
sub
fdivr
bound
iret
mov
jge
pop
adc
mov
ss
jbe
adc
jno
adc
inc
xchg
push
push
mov
pop
pop
sub
mov
jmp
adc
push
mov
and
or
xlat
mov
sbb
dec
add
fldcw
cmps
mov
push
cs
mov
push
call
xor
jns
icebp
sub
jge
mov
sub
add
dec
ja
stos
popf
cmps
mov
rcr
fwait
call
inc
hlt
ins
jge
hlt
ja
mov
jne
das
push
stos
in
ds
xor
repz
fmulp
push
sub
lods
add
in
imul
es
jge
xlat
aas
cmp
retf
pushf
imul
dec
sbb
je
xor
jne
or
jo
xor
arpl
ror
mov
xor
dec
pop
mov
mov
(bad)
sar
xor
test
push
repnz
xchg
lods
fcomp
fs
repz
rcl
dec
shr
mov
add
jmp
les
mov
scas
mov
das
jno
mov
out
mov
push
in
inc
(bad)
push
repnz
cmp
add
and
gs
ja
inc
repz
test
pop
pop
xor
bound
jnp
and
mov
dec
outs
loope
dec
stos
idiv
fisttp
(bad)
mov
push
jg
aad
dec
daa
mov
aaa
shr
push
and
adc
mov
mov
sub
push
jmp
xor
sbb
sar
rcl
mov
pop
aas
sbb
add
add
push
mov
bound
jns
(bad)
mov
cmps
imul
scas
sahf
adc
sub
sbb
icebp
(bad)
cld
aaa
push
sahf
les
jo
lea
jge
gs
fstp
aad
push
xchg
fsubr
(bad)
mov
js
mov
cmps
int3
cs
ins
pop
adc
adc
mov
(bad)
jnp
(bad)
aas
mov
fcmovnbe
div
call
aas
aam
neg
dec
push
sti
cmp
lahf
ror
mov
xchg
enter
mov
scas
jle
mov
dec
sub
sbb
sub
add
fcom
mov
jp
push
mov
lock
xchg
mov
jnp
test
shl
lods
sub
jecxz
hlt
loop
cmps
pop
xchg
push
inc
xor
adc
xchg
div
add
jno
hlt
enter
add
in
mov
xor
adc
in
mov
movs
adc
jo
push
cmp
div
int3
push
inc
jmp
inc
mov
jmp
push
jno
(bad)
ss
std
inc
pop
adc
loope
addr16
fwait
mov
jg
inc
or
push
adc
jns
ds
jge
aas
retf
in
push
mov
pushf
jae
leave
pop
xor
add
hlt
ret
ins
fadd
mov
jbe
mov
and
cwde
mov
jnp
bound
ins
mul
or
fcomp
lods
sub
rdmsr
es
fisttp
sub
popa
cmps
push
and
jne
ins
push
adc
ss
mov
xchg
scas
ja
sub
xchg
cld
add
mov
xchg
pushf
mov
dec
fisubr
scas
dec
or
pop
loopne
clc
xchg
stos
in
xor
popa
push
pop
mov
lahf
adc
int3
mov
sbb
aaa
out
dec
das
mov
pop
push
push
xor
add
out
xchg
sub
ja
add
cmp
sub
in
loope
push
mov
adc
xor
mov
adc
stos
mov
cmp
xchg
xor
mov
int
pop
icebp
(bad)
xchg
push
scas
fstp
pop
xchg
loopne
adc
inc
mov
cmp
and
pop
cmps
xor
mov
xchg
xor
pusha
pop
cmp
push
neg
push
adc
push
ins
sub
imul
inc
pop
pop
rcr
shl
pushf
cmp
add
adc
daa
cmp
dec
xchg
retf
js
sbb
jmp
xchg
pop
cmc
das
les
popa
shr
mov
hlt
jecxz
or
out
std
push
xor
dec
lods
inc
cmp
adc
fisttp
in
push
push
or
jmp
cmps
js
and
cli
ins
dec
repz
adc
push
int3
or
dec
scas
sbb
mov
dec
repnz
inc
test
not
(bad)
jl
mov
mov
daa
sbb
jl
neg
add
sbb
lds
cmps
add
or
sar
imul
mov
ins
lds
rcl
cmp
iret
lock
cdq
xchg
xlat
popf
cmpxchg
outs
push
push
imul
ret
repnz
popa
inc
cmp
test
fisttp
outs
fld
call
push
stc
int3
cmp
cmp
into
and
push
mov
int3
pop
fidivr
adc
mov
repz
popa
bound
or
and
dec
inc
aad
cmps
mov
and
shl
mov
sbb
push
mov
scas
push
xchg
push
mov
add
repnz
push
repnz
popf
sub
pop
call
xchg
and
adc
test
pop
jns
inc
pop
das
loopne
and
xor
iret
repz
jecxz
cmps
cmp
icebp
push
jns
jae
mov
push
inc
or
scas
rcr
push
lods
adc
fwait
loope
int3
ja
leave
cmc
cwde
scas
ret
fwait
mov
mov
adc
repnz
mov
adc
(bad)
jl
inc
mov
jbe
call
mov
and
iret
sahf
mov
push
xchg
fst
pop
repnz
mov
int
push
mov
xchg
xor
mov
sub
rcr
clc
sub
retf
push
sbb
mov
cmp
xchg
xchg
das
in
cdq
pop
xor
cs
and
hlt
cmps
add
mov
push
in
rol
push
jne
test
gs
or
cmp
pop
add
in
sub
ret
xchg
int
mov
out
leave
xlat
pop
sub
popa
jae
pushf
pop
dec
leave
xchg
dec
ins
inc
retf
out
lock
test
jne
popf
cmp
push
mov
stos
jl
sbb
mov
fxch
jmp
cld
jp
les
adc
lahf
dec
movs
lock
mov
pop
je
pop
call
jmp
jg
scas
mov
cdq
mov
test
hlt
xchg
es
jae
gs
ror
mov
push
adc
repnz
neg
mov
dec
icebp
adc
xor
mov
ret
push
sbb
mov
imul
out
fwait
aam
dec
mov
arpl
sub
xor
jp
pop
cmp
ins
(bad)
shr
cmp
(bad)
sub
and
aam
mov
cmc
mov
pop
cld
pusha
xor
jle
cmc
sub
or
lds
movs
out
cmp
mov
int
es
and
fcomp
lods
adc
scas
mov
gs
cmps
xchg
mov
or
inc
(bad)
mov
or
or
loop
fsub
inc
out
hlt
or
push
icebp
or
sub
iret
lods
cmp
iret
push
test
fdivr
push
outs
sub
loopne
jle
pushf
jns
out
mov
ss
sub
pop
jp
dec
push
xchg
arpl
mov
into
das
es
or
mov
inc
or
je
arpl
das
cmp
cmps
push
xor
push
xor
and
mov
mov
bound
xchg
push
stos
jl
push
retf
pop
jmp
and
pop
mov
xchg
les
sbb
mov
inc
popf
or
sbb
outs
sbb
(bad)
jge
mov
(bad)
iret
adc
add
scas
test
jl
test
mov
dec
sub
add
movs
mov
test
mov
rcr
mov
or
dec
add
mov
pop
stos
or
cmp
lock
out
push
add
sar
mov
imul
dec
and
std
xor
mov
adc
and
in
sahf
or
cmp
pop
jnp
cmp
pop
jmp
dec
add
mov
int
mov
or
loope
jne
mov
or
pop
or
jns
jbe
xchg
movs
scas
test
int3
jno
mov
pop
sub
fild
lods
sbb
cmp
mov
push
xchg
movs
pop
mov
mov
(bad)
xlat
mov
add
(bad)
bound
push
inc
dec
ja
inc
pop
mov
outs
add
jns
fstp
sub
jo
jne
jle
retf
xchg
loope
inc
sahf
push
and
scas
sahf
cmp
out
sbb
movs
inc
jbe
enter
outs
cmp
cs
clc
lods
outs
mov
ins
push
pop
sub
adc
jecxz
cmp
fldenv
xchg
and
ficomp
out
inc
push
rcr
fistp
mov
push
sbb
aam
sub
adc
pop
or
gs
xor
mov
inc
and
and
icebp
push
mov
xor
sbb
and
fist
test
jbe
cmp
dec
aam
push
fsubr
scas
call
sti
mov
inc
jo
sbb
in
lods
gs
jnp
pop
fwait
pop
mov
data16
inc
jl
je
add
in
ins
jmp
call
mov
adc
xor
push
(bad)
adc
push
xor
clc
xlat
push
sbb
and
push
push
loop
mov
push
outs
push
data16
mov
call
add
sub
jg
iret
pop
mov
lds
sub
fistp
out
add
data16
in
inc
mov
das
mov
movs
cmp
mov
pusha
adc
sbb
call
aad
cmp
jns
in
ins
dec
lods
xchg
and
leave
iret
scas
sahf
je
nop
dec
aas
int3
enter
fild
push
pop
lds
jo
test
and
outs
pop
leave
and
mov
xchg
sub
xor
sub
mov
jne
and
cmp
sbb
arpl
lahf
mov
mov
ret
jg
sub
mov
out
lods
sub
leave
or
hlt
or
mov
icebp
rol
sbb
or
dec
inc
adc
pop
and
jmp
dec
mov
pop
xor
jbe
test
sti
fild
(bad)
in
ficom
(bad)
loope
push
jmp
adc
inc
jae
sbb
hlt
stos
push
mov
mul
icebp
or
and
outs
and
popf
jmp
jo
shr
bound
and
xchg
and
in
sub
and
sbb
repnz
jno
xlat
add
fild
mov
jnp
pop
add
xor
je
dec
loopne
and
pop
ss
cmp
xchg
mov
jmp
mov
pop
push
push
rcr
mov
scas
jl
add
fwait
arpl
aas
sti
add
jb
(bad)
mov
test
js
cmp
(bad)
mov
les
mov
cmp
popf
test
cwde
push
imul
push
jecxz
mov
cs
es
int
lahf
loop
inc
xchg
test
and
mov
push
mov
sub
pop
mov
add
aas
adc
loopne
inc
clc
fidiv
bound
and
dec
cdq
js
xchg
imul
xor
(bad)
cld
xchg
int
xchg
cmp
xchg
and
pusha
pop
jnp
sbb
mov
and
add
rcr
or
ss
fist
scas
and
and
repz
adc
mov
sahf
or
fiadd
jo
(bad)
mov
pusha
dec
stos
xor
sar
sti
xor
bound
pop
mov
xor
jno
das
push
imul
jmp
call
gs
cmp
push
pop
xchg
inc
mov
cmps
out
jo
sub
shl
mov
push
cli
xor
jns
or
sub
outs
lods
leave
push
xor
(bad)
or
dec
adc
popf
sub
jnp
aad
in
ror
out
scas
in
ja
mov
xchg
rol
dec
loopne
test
pushaw
and
test
jo
mov
xchg
sbb
push
cmp
mov
popf
pop
mov
add
in
call
ins
xor
push
fldenv
enter
ret
push
mov
cld
jns
test
stos
in
sbb
jle
or
loopne
xor
ds
jmp
cld
mov
jne
mov
xor
fwait
push
dec
mov
outs
dec
xor
das
lea
push
mov
rol
pop
ret
sar
imul
push
or
dec
add
cmps
hlt
rol
xchg
mov
lea
pop
stc
(bad)
call
and
icebp
adc
add
pop
enter
push
dec
mov
and
gs
call
jne
aad
int3
leave
mov
jecxz
mov
cmp
mov
mov
adc
and
adc
jbe
in
cmp
movntq
sub
sbb
mov
mov
fcom
sahf
sub
pushf
fisubr
dec
ja
adc
fs
pop
mov
jb
mov
arpl
mov
push
jmp
aam
jp
call
dec
pop
sbb
xchg
pop
stos
mov
movs
(bad)
cmps
push
test
call
push
ja
mov
pop
cwde
idiv
jns
xchg
xchg
in
inc
aam
push
dec
adc
in
leave
inc
and
xchg
outs
outs
(bad)
es
mov
into
out
push
pop
xchg
cmp
inc
inc
js
adc
xor
in
lahf
call
pop
lea
(bad)
fld
test
and
mul
outs
pop
pop
aaa
cmps
add
adc
stc
pop
push
xlat
imul
leave
dec
sub
sahf
mov
push
mov
cdq
les
imul
call
cmp
mov
pop
shl
xchg
call
xchg
icebp
fist
retw
push
shl
nop
cmp
lahf
fwait
or
push
fisub
lods
test
ret
inc
inc
ins
adc
out
xchg
xor
loopne
stc
mov
test
push
lods
je
lods
(bad)
rol
das
add
or
outs
out
cmps
adc
out
pop
adc
jmp
and
xchg
mov
fisubr
lods
push
xchg
leave
aad
add
xor
jbe
cmp
adc
ret
je
(bad)
loopne
adc
push
mov
jo
dec
call
adc
and
ins
jno
add
cmps
lds
cmc
scas
call
xor
div
mov
cli
in
dec
xlat
std
xor
mov
push
lods
aaa
or
cs
(bad)
popa
jne
mov
shl
loopne
dec
cdq
dec
mov
arpl
or
xor
mov
sahf
inc
xchg
daa
lods
jmp
js
pop
jns
adc
es
aaa
test
pop
repz
imul
(bad)
movs
push
add
mov
sbb
repnz
xchg
lods
dec
jns
enter
clc
xchg
cdq
sbb
xchg
sbb
adc
lahf
dec
add
xchg
idiv
lods
cmps
lea
rol
mov
fwait
scas
aam
dec
push
jbe
retf
cwde
jge
das
aad
movs
sub
rcr
mov
ins
bound
pop
push
cdq
out
jo
jae
cwde
fdiv
sub
push
ret
fdiv
cmps
mov
out
ss
sahf
scas
movs
int3
sbb
into
int
push
inc
and
xchg
inc
imul
mov
ror
push
xchg
mov
(bad)
lods
push
fucomi
add
cli
nop
or
mov
test
popf
sbb
inc
jg
js
in
lods
or
xchg
xchg
stos
adc
out
dec
popa
dec
in
adc
nop
push
mov
jns
jnp
pcmpeqw
loopne
loop
in
test
(bad)
cwde
push
sub
stos
xchg
jns
xor
mov
jmp
sti
retf
shr
pop
mov
pop
inc
dec
xchg
loope
pop
or
test
mov
or
push
inc
out
aam
icebp
jl
outs
lock
sub
xchg
aas
aad
pop
imul
nop
cli
inc
out
cld
sub
mov
lds
add
aam
jns
out
lods
adc
int3
mov
and
sbb
mov
inc
in
or
movs
pop
loope
fsubr
ja
pop
setnp
sbb
les
push
repnz
aas
xchg
cmp
pushf
mov
mov
mov
inc
test
mov
mov
out
xor
ret
out
and
test
xchg
dec
dec
pop
mul
test
pop
fwait
(bad)
xor
retf
dec
xchg
xchg
add
aas
push
and
fiadd
xor
sbb
call
pop
pop
shr
add
stc
sete
inc
jne
mov
pop
lahf
pop
sahf
and
and
xor
retf
sbb
pop
in
fstp
imul
xlat
xchg
mov
cld
and
gs
add
jnp
(bad)
fcmovu
add
test
mov
mov
popa
jns
fs
dec
inc
stos
test
jecxz
out
xchg
inc
inc
mov
cs
adc
in
pop
sub
jmp
cmp
call
imul
cli
jp
xor
iret
cs
xchg
retf
xor
sub
cmp
pop
or
call
dec
xor
jge
loope
or
cmp
imul
pop
into
xor
mov
push
mov
lods
and
into
dec
add
fs
js
(bad)
push
cmp
gs
rcr
bound
mov
pop
cld
out
push
pop
frstor
mov
cmp
xchg
aad
and
mov
ret
inc
and
(bad)
jge
sub
cli
jne
inc
mov
sub
mov
dec
nop
mov
sub
push
sahf
test
mov
les
push
sub
test
jns
push
xlat
xor
push
(bad)
out
mov
fidivr
test
xor
sbb
cmc
std
imul
call
mov
mov
arpl
and
mov
sub
xchg
pop
add
push
mov
mov
mov
add
enter
cmp
cmp
int
sbb
jo
mov
enter
daa
pop
add
test
or
cmps
xor
xchg
mov
(bad)
fs
jbe
push
loop
out
lds
out
sub
gs
(bad)
(bad)
mov
jp
das
cmp
js
into
test
pop
ud0
movs
mov
(bad)
xchg
jge
xchg
mov
cld
push
jns
mov
adc
imul
in
test
leave
sbb
rol
pop
xchg
leave
gs
out
sbb
out
mul
ret
daa
fistp
ror
popa
sub
jne
outs
scas
ja
pushf
in
and
add
jl
xchg
sub
(bad)
dec
pushf
mov
call
jp
mov
jnp
dec
mov
test
cmp
icebp
dec
and
loopne
jg
pop
push
inc
sbb
cld
inc
call
sbb
shr
(bad)
hlt
mov
inc
aam
mov
mov
jmp
mov
sbb
add
mov
loopne
arpl
add
loope
mov
ficom
xor
sub
push
jp
rcr
mov
push
scas
outs
or
aaa
pop
in
inc
arpl
sub
popa
stos
xchg
pop
dec
push
cmps
(bad)
call
icebp
fcomi
test
push
pushf
int3
dec
pop
ret
hlt
inc
push
jmp
xor
repz
(bad)
jge
lea
pop
jmp
fcmovnbe
aam
adc
inc
or
call
xchg
call
jae
mov
stos
or
ins
pop
fcomp
aas
into
mov
jle
push
cmp
add
add
mov
stos
popa
arpl
mov
test
and
iret
sbb
jle
fist
js
dec
mov
js
loope
in
mov
and
xchg
and
xchg
imul
out
jo
icebp
imul
inc
inc
daa
mov
adc
in
jl
(bad)
cmp
cmc
add
push
cmps
loop
xlat
push
int
in
xor
scas
into
cmps
mov
lods
std
add
and
test
mov
out
aas
rol
mov
repnz
push
hlt
aas
outs
and
sbb
pop
mov
fsub
pop
enter
lods
sub
in
or
ins
nop
(bad)
xor
js
movs
xchg
inc
aam
dec
cmp
adc
jmp
push
sub
out
ins
xor
js
mov
or
rol
or
inc
loope
out
mov
dec
sub
jmp
in
cmp
std
and
sub
sbb
jp
stos
mov
icebp
xchg
shr
inc
push
outs
pop
out
cmp
nop
push
mov
mov
mov
push
xor
stc
sbb
pushf
mov
in
dec
mov
(bad)
jmp
push
lods
jae
push
push
adc
fwait
int
mov
pop
daa
mov
sahf
push
call
mov
xor
xchg
out
or
pop
add
mov
ret
div
xchg
outs
xor
(bad)
push
sub
(bad)
xor
push
adc
mov
lods
sub
lods
xchg
scas
jle
(bad)
in
cmps
cmp
push
repz
mov
inc
add
push
in
movs
xchg
lods
inc
movs
leave
jae
pop
call
push
stc
push
jge
cmps
cmps
sti
xor
xor
es
lock
in
adc
inc
addr16
mov
pop
int
mov
dec
sub
mov
jbe
add
jbe
bound
cmps
cmp
mov
aam
leave
jmp
dec
mov
push
out
cwde
aas
push
fs
add
jne
popf
outs
mov
lahf
repz
push
lock
cmp
dec
rol
dec
leave
mov
(bad)
xor
cmp
xlat
mov
iret
adc
mov
pusha
pusha
sti
movs
(bad)
cmps
lods
int
cmp
cmp
(bad)
out
inc
mov
cmp
or
dec
push
xor
jne
test
sbb
lods
imul
pop
push
fidiv
adc
and
push
and
jb
pop
jb
mov
dec
mov
push
fcom
pop
fimul
inc
pop
adc
inc
xchg
icebp
jge
dec
pushf
pop
out
out
lds
lea
ds
or
pop
ds
test
push
mov
jg
dec
pop
sub
mul
aaa
cwde
test
sub
mov
mov
leave
or
jecxz
push
pop
adc
push
push
shl
jns
adc
movs
dec
into
sbb
nop
addr16
lahf
mov
add
cmps
or
pop
rcl
push
lds
cmc
pop
popa
leave
call
mov
and
and
(bad)
nop
movs
jmp
cmp
sbb
jmp
in
mov
pusha
pushf
jmp
push
adc
rcr
fstp
into
sub
jge
mov
out
popa
in
adc
xchg
into
cmp
mov
jb
dec
add
(bad)
sub
lods
jecxz
dec
mov
push
out
lods
int
pop
hlt
outs
cs
and
mov
cmc
icebp
jmpw
pop
sub
retf
mov
inc
(bad)
ins
leave
adc
nop
pop
rcr
and
cli
mov
stc
(bad)
and
std
cmc
xchg
fisttp
push
and
shl
jge
lahf
pop
aam
sti
into
or
mov
pop
shl
outs
jae
shl
xchg
test
mov
sub
pop
mov
jp
or
aad
mov
dec
rcl
sub
xchg
ds
cmps
jb
in
xchg
and
ror
int3
or
test
fdivr
jo
sub
inc
or
enter
scas
pop
cwde
sub
ss
fdivr
cmp
mov
or
inc
(bad)
sub
stos
scas
mov
test
inc
dec
or
push
mov
(bad)
dec
sbb
push
xor
mov
test
pop
das
mov
pop
rol
sub
aad
ins
imul
bound
ret
adc
pop
fcmovne
add
fld
je
out
push
cdq
mov
or
cmp
jp
ins
add
aas
lods
nop
inc
mov
fldenv
mov
xchg
in
and
fbstp
in
imul
not
je
(bad)
xor
ss
push
xchg
lahf
xchg
add
or
push
repnz
and
sbb
xchg
pop
add
jmp
sub
cmp
inc
xchg
jmp
cmps
add
mov
iret
in
rcl
aam
jmp
pusha
mov
jmp
mov
push
scas
sbb
jge
and
sbb
jns
cmp
out
ror
stc
mov
mov
ret
or
call
xlat
dec
scas
xchg
pop
xchg
push
cmp
sbb
(bad)
fst
xchg
dec
mov
and
or
(bad)
stc
mov
add
mov
inc
mov
(bad)
(bad)
js
mov
(bad)
in
repz
daa
cmps
or
push
cmp
xor
loop
int3
and
(bad)
sub
shl
je
(bad)
(bad)
lods
xchg
mov
fidiv
and
in
aas
dec
shl
mov
std
psubsw
ds
ret
leave
mov
push
ins
push
mov
add
xor
mov
popf
mov
add
dec
mov
lahf
jge
xchg
fst
adc
retf
in
mov
xchg
or
jg
and
push
jae
lods
cmps
dec
(bad)
mov
push
or
pop
imul
loop
mov
xchg
fs
gs
xor
call
jl
xchg
jbe
mov
xchg
test
dec
imul
fsubr
pop
fld
das
sbb
or
sbb
add
call
push
in
mov
or
(bad)
(bad)
cmp
jl
dec
or
loop
add
jmp
fst
jmp
cmp
arpl
dec
adc
inc
stos
and
rcl
sbb
xchg
add
test
vpcmpgtd
lods
pop
push
cmps
push
lods
ins
movs
mul
fadd
xor
pop
cmp
popf
dec
test
fistp
(bad)
mov
mov
int3
jns
addr16
sbb
mov
das
dec
ds
pop
arpl
aad
xchg
les
clc
or
mov
sbb
push
call
xor
(bad)
and
hlt
push
int
jns
xchg
add
mov
inc
inc
add
cmp
leave
cmp
std
pop
inc
jl
add
inc
jne
push
mov
icebp
out
mov
or
sbb
int
jae
push
inc
dec
mov
xor
js
push
dec
(bad)
sbb
loope
sbb
ret
stos
popa
shl
sub
jmp
sbb
jle
movs
in
sub
dec
adc
loop
and
aaa
fsub
and
(bad)
xor
add
xchg
jb
ja
mov
jne
cld
push
adc
imul
in
xor
or
es
xor
sub
retf
pcmpeqd
not
xor
mov
outs
and
aam
sbb
cmp
rcl
mov
loop
and
loope
imul
jb
div
mov
dec
loop
pusha
xchg
aaa
nop
inc
xchg
jge
aas
xchg
xchg
call
fwait
pop
bound
push
test
aam
stc
cmp
or
and
mov
add
jae
retf
loope
cmps
ja
pop
rcr
cmps
cmp
or
aas
adc
je
and
mov
xchg
add
fistp
cmp
push
cmp
sar
int3
add
call
fldl2t
push
mov
mov
fadd
sbb
xchg
sahf
mul
xchg
mov
lock
push
stos
mov
jmp
test
fisttp
mov
jl
cmps
add
mov
scas
jb
sbb
fstp
es
xor
cmp
or
adc
dec
pop
sub
call
mov
sbb
adc
xchg
mov
jbe
pushf
jge
sti
mov
push
arpl
push
push
inc
cmp
add
es
gs
bound
neg
add
jmp
add
push
imul
push
push
add
(bad)
mov
mov
push
ffree
add
fnstenv
adc
pushf
sbb
xor
and
dec
xor
cli
call
into
leave
test
push
mov
xchg
loopne
xor
mov
mov
pop
cmp
scas
loopne
ret
add
loopne
(bad)
into
xchg
push
sub
push
retf
xchg
and
cmp
mov
fwait
adc
bound
fbstp
inc
stos
mov
cmps
jnp
add
mov
cmp
ficom
fiadd
dec
popa
ret
adc
aad
clc
iret
jle
shr
hlt
loop
add
pop
sbb
das
adc
xor
inc
loope
cld
push
add
sbb
scas
stos
or
outs
lea
mov
jmp
cmps
inc
pop
nop
aaa
sbb
(bad)
ret
or
lods
xchg
mov
stos
xor
hlt
sbb
jecxz
mov
and
lods
and
ret
inc
inc
movs
call
scas
inc
mov
add
cmp
fs
sbb
mov
cmp
and
ss
fst
mov
fwait
je
movs
jmp
les
xlat
cmps
(bad)
xchg
jle
hlt
movs
cmp
and
iret
popf
leave
or
div
ret
adc
in
pop
dec
xor
xor
inc
sahf
xchg
or
jnp
in
fild
js
test
retf
adc
inc
ins
pop
cmc
aad
add
div
(bad)
ins
and
lea
pop
add
mov
pop
jbe
ja
sbb
inc
gs
fnstsw
repz
cmps
rcl
(bad)
out
adc
shr
pop
and
mov
cld
jmp
jl
lock
cmp
cdq
xchg
dec
inc
clc
cli
aam
movs
xchg
mov
cmp
push
jle
popf
cs
inc
adc
add
mov
popf
adc
icebp
imul
outs
icebp
mov
inc
mov
jno
aam
enter
add
stc
test
xchg
inc
jle
sti
rol
inc
in
nop
jmp
inc
mov
push
dec
dec
gs
and
test
push
jo
push
cmc
cmc
jne
lods
pop
sub
adc
cmp
cwde
or
movs
sti
dec
hlt
hlt
iret
add
mov
scas
(bad)
stc
rcr
mov
imul
or
or
pop
popa
mov
add
or
jo
add
pop
xchg
sub
pop
loope
je
(bad)
movs
xlat
clc
mov
push
jl
mov
and
gs
into
mov
into
xor
mov
outs
and
gs
popa
dec
jns
outs
sbb
jle
or
ins
stos
jmp
dec
call
lods
jmp
push
fs
repz
fdivr
(bad)
(bad)
fdiv
mov
out
mov
(bad)
loopne
adc
add
mov
cmp
jle
cdq
pushf
hlt
or
and
pop
mov
cmp
push
das
iret
leave
sbb
mov
in
adc
frstor
add
push
mov
dec
hlt
dec
mov
dec
jbe
repz
lods
mov
xchg
or
fimul
rol
gs
repnz
lds
xor
push
adc
pop
fmul
mov
fdivp
sub
es
jge
repnz
add
mov
fnstcw
add
cmp
or
cmp
pop
and
daa
lea
push
jne
push
dec
cmp
jne
jnp
div
les
repnz
imul
mov
xchg
into
rcl
sar
mov
sbb
mov
and
or
out
mov
(bad)
data16
mov
fwait
dec
nop/reserved
cmp
mov
test
push
pop
mov
int
inc
sub
mov
cmp
mov
push
outs
gs
outs
rcl
inc
int3
xchg
push
cld
or
call
and
call
stos
test
lods
xor
mov
hlt
dec
cdq
(bad)
lea
outs
mov
and
shl
lea
les
iret
cs
shl
aad
rcl
xchg
xchg
cs
(bad)
in
lods
dec
cmp
add
and
std
call
xchg
aam
rcl
cdq
dec
outs
pop
adc
arpl
pop
push
xor
gs
mul
mov
out
retf
jns
pop
or
cdq
add
outs
scas
shl
jmp
pop
or
xchg
stos
ss
leave
adc
jne
stos
cmp
enter
adc
jnp
push
mov
sti
retf
mov
call
stc
lahf
(bad)
pop
rcr
xor
les
lods
bound
and
inc
xor
int
(bad)
adc
out
xchg
adc
push
pop
pop
mov
in
cmps
jecxz
xor
mov
cmp
sub
fst
add
and
loope
push
aas
adc
out
jge
cmp
hlt
aam
fisub
mov
inc
jno
aas
cmp
(bad)
pop
push
inc
call
or
and
test
or
mov
ds
imul
sbb
xchg
in
inc
cdq
icebp
in
pushf
scas
cmp
imul
hlt
pop
pop
out
fist
(bad)
leave
mov
inc
lods
out
cmp
repz
imul
pop
jmp
xchg
int3
mov
rcpps
addr16
into
dec
les
or
test
push
cli
dec
dec
sbb
shr
dec
scas
adc
les
push
push
scas
call
push
and
push
inc
adc
fcomp
retf
scas
push
mov
out
push
pop
xchg
fistp
xor
ds
inc
dec
pop
lea
push
sub
in
call
mov
cmp
and
fisttp
inc
cdq
inc
add
cmps
mov
fisttp
repnz
fcomp
jp
jmp
call
cmps
lods
imul
fnsave
cwde
pusha
js
fcom
loop
push
pop
push
and
mov
sub
xor
mov
lahf
mov
mov
jmp
dec
inc
jns
inc
rcr
xchg
cmp
shl
mov
pop
movs
ins
push
(bad)
out
lods
lock
nop
cld
imul
dec
lea
cmc
xor
and
sti
(bad)
push
outs
xchg
or
xor
push
or
(bad)
lods
mov
in
pop
int3
push
leave
scas
dec
addr16
(bad)
aas
adc
dec
mov
or
rcl
and
enter
cdq
xor
jecxz
jo
push
or
imul
scas
xchg
movs
cmp
xor
sub
adc
jo
mov
mov
add
fisttp
mov
inc
fnstenv
(bad)
int3
xor
push
and
out
rcl
aam
dec
inc
out
retf
int3
pop
imul
or
ins
out
jl
(bad)
and
mov
nop
mov
ins
jo
and
pushf
test
cmp
inc
aad
out
or
add
fdivr
fld
cmp
mov
pop
out
jne
add
dec
xor
ficom
call
jmp
xchg
add
jbe
adc
mov
pop
ret
ret
or
in
scas
jae
sub
mov
pop
pop
cwde
in
fstp
les
(bad)
frstor
cmp
imul
adc
test
das
(bad)
mov
(bad)
sub
cmp
fs
in
fidiv
dec
out
mov
mov
xchg
pop
xor
(bad)
push
inc
xor
jns
or
push
dec
bound
push
adc
lea
nop
pop
inc
(bad)
and
mov
cld
push
push
jl
push
xchg
mov
jecxz
int
lods
loope
sub
sbb
dec
adc
int
outs
inc
or
jae
scas
and
(bad)
adc
jbe
mov
xor
pop
mov
xor
cmp
jg
or
es
addr16
sub
sub
xor
lds
sar
cli
sub
scas
sub
jecxz
fisubr
adc
mov
mov
pop
jae
push
xchg
adc
xlat
out
imul
(bad)
lea
in
call
test
mov
cmp
cmp
ins
mov
jae
sahf
sbb
inc
jmp
and
cld
pop
test
movs
(bad)
adc
(bad)
cmc
popf
and
mov
movs
icebp
xchg
jecxz
adc
fisttp
inc
jmp
push
dec
cmc
and
xchg
jns
cdq
outs
push
fadd
clc
je
mov
(bad)
lods
fld
popf
mov
mov
icebp
push
in
movs
icebp
mov
aam
jbe
push
xor
and
dec
inc
int3
lea
test
cmps
repz
std
iret
mov
push
xchg
fs
test
fnstsw
out
jns
add
imul
pop
sub
call
ja
cmps
dec
out
rol
cdq
xor
sub
iret
addr16
jp
cmps
das
mov
rol
and
sub
dec
dec
jl
dec
inc
rcr
add
aaa
in
pop
mov
fnsave
xor
ret
in
arpl
int3
and
add
xor
inc
popa
push
and
dec
arpl
jne
ror
lds
dec
sti
xlat
call
xor
xor
xchg
aam
pop
add
ret
push
jl
or
enter
ja
cmp
data16
ss
shr
lods
inc
jo
dec
data16
jnp
sahf
rol
mov
repnz
pop
pop
sahf
inc
fdivr
ds
arpl
push
dec
jb
add
jae
mov
dec
cmp
test
lds
cmp
ins
mov
sbb
push
mov
stc
mul
pushf
or
enter
mov
push
and
push
add
cli
lock
imul
test
mov
in
iret
adc
xchg
fabs
mov
repnz
or
pop
es
aas
push
and
sub
push
sahf
(bad)
and
add
adc
call
adc
xor
inc
mov
mov
rcl
cmp
mov
fxch
fadd
movs
xor
cmp
mov
lock
repz
nop
mov
mov
(bad)
mov
dec
or
cld
leave
loopne
mov
add
dec
imul
inc
mov
dec
(bad)
adc
dec
mov
fld
mov
lahf
sbb
xchg
mov
mov
ds
mov
ja
retf
lods
xor
sbb
bound
inc
icebp
inc
jp
xor
das
jbe
hlt
pop
xchg
jnp
in
retf
clc
es
cdq
outs
push
ins
pop
mov
pusha
mov
dec
lock
xchg
mov
ret
sbb
jae
out
arpl
int3
retf
aam
clc
mov
inc
das
jmp
es
push
mov
call
xchg
mov
xchg
in
xchg
push
or
je
xchg
fwait
hlt
mov
in
adc
mul
out
not
xchg
pusha
lds
inc
js
or
sub
sbb
ret
jmp
ja
push
lds
sub
xchg
cmps
push
sbb
shr
call
clc
or
and
add
cmp
in
sub
sbb
loopne
loop
rcr
xchg
cmp
cmp
add
or
dec
cwde
add
add
inc
aaa
(bad)
mov
jns
popa
scas
push
push
jno
xchg
push
es
cwde
sbb
into
imul
xchg
les
cmp
arpl
gs
sbb
neg
jo
mov
ss
les
and
and
pop
sbb
fcomp
sub
jmp
jne
inc
mov
int
test
arpl
stos
ins
mov
(bad)
and
and
dec
and
in
js
fbstp
add
hlt
cmp
(bad)
loopne
jb
inc
jne
(bad)
sub
add
inc
and
test
int3
inc
or
in
xchg
jl
div
ret
jae
push
lods
popf
pusha
push
and
jl
mov
pop
clc
mov
pop
dec
ret
fdiv
stos
mov
cli
jns
(bad)
iret
arpl
mov
mov
mov
stos
push
dec
jmp
inc
test
pop
xor
aaa
and
cs
iret
out
test
add
jp
xchg
sbb
in
add
mov
aam
inc
iret
ret
cmp
push
xor
sub
fldcw
inc
cmps
adc
xlat
mov
jmp
sbb
lea
shl
pop
jge
mov
mov
in
call
mov
jmp
cmc
pop
cli
mov
pushf
popa
xor
mov
push
push
js
and
iret
jmp
cmp
clc
call
and
jg
jmp
stc
gs
fcmovnb
fbstp
or
ror
and
or
jl
sbb
mov
or
ds
rol
mov
adc
xor
cdq
and
ret
xlat
outs
pop
daa
sbb
mov
lahf
push
gs
jbe
push
adc
pop
jp
cmp
pop
ret
sbb
xchg
fs
(bad)
fidivr
mov
mov
das
ds
cwde
out
(bad)
cmp
pusha
xchg
and
fdivr
sub
sub
adc
mov
frstor
dec
loopne
sahf
mov
push
jnp
or
add
xor
mov
add
cmp
mov
mov
cmp
daa
sar
repnz
js
inc
adc
push
mov
push
frstor
xor
ins
mov
aaa
or
and
cwde
js
inc
shl
pushf
add
fld
jge
loope
out
scas
cmp
adc
call
cdq
inc
fnstcw
mov
cli
je
jle
sbb
cs
fadd
das
cmp
lods
xor
sbb
add
test
xor
(bad)
repnz
js
loopne
cmc
and
mov
pop
out
mov
xor
push
and
pop
jle
stos
and
retf
or
scas
test
cmp
movs
call
rcr
mov
push
inc
adc
(bad)
and
dec
cld
mov
loop
add
xchg
fmul
mov
loopne
add
(bad)
cs
into
push
cwde
or
adc
sar
jle
pop
or
xchg
gs
ss
test
mov
rol
xchg
inc
adc
adc
repz
loop
test
imul
inc
out
jle
imul
int
scas
mov
aas
pop
mov
cmp
in
push
fistp
pop
sub
scas
lea
sbb
jmp
adc
ja
mov
je
nop
outs
lods
mov
or
push
scas
add
xor
int3
pop
and
dec
cmp
jns
aas
(bad)
fisub
imul
and
adc
sbb
out
pushf
aas
mov
les
inc
scas
jno
ins
xchg
push
pop
int
and
add
push
mov
push
inc
call
xor
mov
jmp
mov
cmp
xchg
dec
out
cmps
or
inc
mov
fimul
push
and
jo
movs
imul
sar
mov
dec
push
in
popa
push
mov
mov
popf
add
add
xor
(bad)
mov
push
into
mov
push
aad
mov
or
fsubp
mov
pop
aam
test
pop
inc
in
jle
movs
dec
jno
jmp
sub
fidiv
fsub
dec
push
fnsave
scas
mov
ret
add
xchg
and
pop
inc
inc
pop
ds
mov
cmp
aad
popa
std
sbb
adc
test
scas
dec
pusha
or
data16
cmp
mul
(bad)
sbb
cmp
sub
pusha
or
sbb
fnstcw
or
movs
ror
cmp
push
or
push
inc
mov
adc
mov
inc
scas
les
mov
or
in
fild
xchg
int3
fidivr
push
mov
pop
sub
xlat
xchg
(bad)
push
pop
(bad)
xchg
pop
push
push
and
xchg
out
popa
pop
add
mov
and
cmp
push
mov
push
int
ins
(bad)
cmc
cdq
mov
jae
jns
cmp
mov
add
sbb
sar
dec
scas
ror
aam
mov
call
push
cmp
(bad)
cli
test
stos
inc
idiv
aam
ret
dec
inc
dec
mov
outs
scas
aaa
fstp
stc
test
sub
inc
data16
in
sub
cmp
frstor
mov
or
mov
lahf
mov
mov
or
call
xchg
jne
sub
jnp
dec
outs
jne
ins
pop
mov
sbb
je
xchg
clc
test
enter
cmp
pop
shl
sbb
test
ds
adc
addr16
pop
daa
mov
es
jo
in
mov
sbb
and
hlt
mov
sti
mov
in
mov
jl
gs
mov
push
dec
xor
inc
jge
cmp
or
and
sub
call
mov
add
stos
retf
movs
xchg
jne
jnp
fistp
aas
push
call
cwde
mov
clc
cmps
(bad)
(bad)
cs
xor
out
xor
nop
xor
es
xchg
mov
fwait
pop
sub
jl
std
lods
push
mov
inc
ins
out
sub
jmp
rcr
xor
arpl
cdq
and
je
cmp
(bad)
enter
cdq
push
outs
push
inc
xchg
pushf
mov
int
bound
jne
jbe
das
inc
jbe
jecxz
xchg
jg
and
cmp
or
aaa
retf
mov
dec
xchg
pop
mov
ss
jno
out
xor
lods
imul
mov
dec
xchg
dec
ret
adc
dec
std
jmp
das
cdq
lods
lahf
int3
push
push
add
loopne
int3
leave
mov
not
clc
fmul
stos
xchg
xchg
mul
inc
add
sub
or
out
sahf
movs
rol
adc
enter
add
cmp
sahf
fst
movs
repnz
mov
or
shl
ins
adc
push
cmps
daa
loop
dec
loope
push
ret
and
add
ret
or
jo
sbb
scas
movs
add
cmps
iret
push
mov
lahf
stos
popf
sbb
mov
and
outs
and
cld
jno
lods
xor
sbb
xor
nop
ins
push
push
jae
ret
and
sub
and
aas
fld
cmp
xchg
ret
lea
and
movs
je
inc
mov
les
stos
shr
frstor
shl
fisttp
stos
popf
es
ins
mov
dec
dec
inc
enter
cmps
xchg
and
xor
push
jnp
leave
sub
scas
mov
and
hlt
xor
neg
repnz
push
pop
mov
cmc
into
sub
mov
push
adc
cmp
jnp
xchg
xchg
sbb
and
add
sbb
mov
loop
outs
outs
xchg
push
mov
aam
adc
mov
jbe
sbb
repnz
popf
gs
mov
sbb
aaa
fiadd
hlt
sti
jg
aad
mov
enter
push
or
(bad)
mov
cmp
out
aam
add
fwait
call
add
movs
mov
or
jo
mov
mov
jmp
clc
scas
and
pop
lock
fst
mov
aaa
outs
js
aaa
sar
inc
mov
stos
push
mov
int3
jl
and
mov
mov
dec
push
mov
push
gs
jp
jns
adc
(bad)
mov
lds
mov
es
sbb
outs
push
xchg
mov
or
mov
add
es
cmp
mov
sbb
cmp
push
push
add
scas
lods
push
fistp
mov
add
jl
sub
ss
arpl
shl
aaa
adc
inc
cli
leave
push
nop
pop
in
cli
ss
jg
stos
add
xor
and
sub
popf
imul
mov
mov
clc
add
fcom
jmp
adc
lods
fdivr
pop
jmp
int
mov
dec
sub
xor
xchg
dec
pop
cmp
jmp
mov
dec
arpl
pop
mov
or
push
xor
push
jns
jb
push
jg
sub
cmp
mov
add
movs
mov
das
aad
sahf
mov
jmp
fiadd
popa
mov
pop
das
xor
idiv
or
dec
imul
sbb
xor
xchg
sub
push
int3
xchg
popa
inc
arpl
lods
sbb
outs
pop
inc
ret
pop
sbb
add
pop
sub
push
xchg
dec
fstp
xor
dec
(bad)
addr16
pop
rcl
mov
sub
dec
sub
cmp
cs
adc
js
jae
xchg
int3
xor
jecxz
js
add
mov
daa
in
inc
sbb
fwait
jecxz
add
or
lock
popf
sbb
sub
outs
xchg
cdq
mov
pop
add
test
xor
pop
mov
shr
(bad)
xor
aaa
inc
cmps
mov
push
dec
not
inc
popf
push
shl
adc
pop
dec
scas
xchg
and
in
ror
leave
mov
ins
xor
mov
fldcw
les
pop
adc
outs
push
jnp
sub
ror
mov
les
out
xadd
adc
rcr
ss
not
ret
cmp
lds
popa
cmp
pop
scas
sbb
add
pushf
fcomip
xor
rol
sub
icebp
cmp
ss
cmc
inc
mov
dec
sbb
aaa
mov
pushf
cmps
ja
jge
(bad)
sti
sub
push
adc
sub
push
mov
mov
inc
ficom
loop
aas
es
in
ds
mov
adc
leave
push
sbb
aam
js
repz
add
sbb
jecxz
jl
cwde
iret
sahf
sub
sub
das
xor
dec
xchg
clc
popf
addr16
aaa
dec
inc
sub
and
repz
mov
add
adc
ror
xlat
xor
or
ins
jb
pop
mov
int3
(bad)
cmc
(bad)
in
leave
mov
jecxz
add
and
or
inc
sti
loopne
movs
and
ror
fucomip
clc
dec
cmp
cmps
adc
ret
and
pop
sub
clc
aad
std
lds
aas
inc
mov
clc
mov
push
jecxz
jns
gs
out
loopne
in
retf
adc
movs
inc
push
mov
jecxz
mov
and
mov
in
add
ja
iret
ds
and
push
jecxz
xchg
push
test
sbb
adc
pop
adc
dec
sbb
lea
iret
test
and
jg
sbb
xchg
daa
imul
out
xor
jae
mov
lea
adc
sub
mov
cmp
ins
sbb
scas
cmp
push
les
inc
inc
add
xor
pop
(bad)
adc
icebp
xchg
out
addr16
loop
jmp
test
xchg
retf
push
inc
test
inc
adc
xchg
sbb
mov
mov
repz
sub
mov
push
mov
fild
or
jnp
out
sbb
adc
std
sub
stc
mov
aaa
imul
adc
cdq
es
outs
fadd
fiadd
dec
cmp
mov
int3
inc
lods
sbb
push
arpl
cmc
xchg
test
dec
sar
or
ret
mov
mov
xchg
inc
jp
sbb
inc
mov
mov
add
cmp
scas
mov
pop
scas
pop
rol
into
lods
out
popa
ins
xchg
and
pop
push
xor
xchg
retf
sub
test
fistp
into
adc
adc
cld
test
pop
dec
cmp
icebp
push
sub
test
lahf
mov
clc
(bad)
std
je
mov
stos
jno
mov
sub
or
aaa
(bad)
(bad)
and
xor
sbb
xchg
sar
mov
(bad)
xor
sub
aam
and
in
(bad)
outs
clc
dec
jb
jo
mov
cwde
ret
(bad)
test
shr
loop
fwait
mov
(bad)
std
(bad)
icebp
aad
aad
arpl
lahf
jle
outs
push
or
xor
xor
neg
fdivr
stos
das
addr16
rcr
lahf
shl
cmps
xchg
cmp
xchg
jbe
call
and
lock
xor
inc
fwait
test
mov
rol
dec
shl
cmc
jo
push
jno
popf
ficomp
adc
fist
dec
sub
mov
mov
push
test
xchg
dec
sub
nop
mov
xchg
jae
sbb
das
in
xor
xor
cmp
xor
mov
lahf
ss
aaa
cmp
or
test
aas
push
sbb
test
push
cmp
add
xchg
std
mov
mov
mov
rcl
aaa
inc
mov
cdq
pop
sbb
iret
or
sbb
dec
xor
int3
pushaw
dec
rol
bound
mov
inc
jne
adc
cld
adc
sub
push
inc
shr
add
mov
mov
fcom
mov
clc
jge
(bad)
fsub
cdq
inc
inc
xor
mov
mov
ret
jg
lds
push
test
popa
and
mov
or
xor
repnz
lahf
jecxz
lahf
mov
mov
rol
rol
pushf
pop
icebp
cmp
es
pop
stos
or
call
in
pop
mov
fstp
sbb
dec
mov
lahf
jno
out
std
ins
lods
jp
adc
cld
add
cmc
leave
sub
and
pop
enter
pop
fild
fisubr
mov
outs
add
not
rol
test
push
pop
popf
dec
shr
fmul
enter
sbb
push
inc
dec
jne
push
call
cmp
push
add
sbb
pop
lea
mov
jp
xor
jmp
outs
imul
outs
nop
dec
(bad)
push
adc
dec
cwde
or
imul
ins
sub
aad
test
pop
stos
and
lds
pop
cmp
inc
outs
scas
sbb
jns
out
jmp
retf
sub
pop
(bad)
mov
mov
leave
jmp
gs
mov
hlt
hlt
int
clc
in
sub
das
mov
(bad)
retf
lods
push
dec
xchg
push
push
xchg
add
adc
outs
loop
(bad)
imul
jecxz
mov
sti
stc
shl
add
jecxz
adc
xor
inc
fwait
jb
sbb
mov
shr
dec
mov
cmp
fdivr
xor
dec
aaa
std
imul
add
scas
jl
xor
movs
xor
xchg
jecxz
sti
in
test
mov
ja
int3
lock
jecxz
jno
inc
imul
adc
out
aas
mov
add
lahf
ins
call
inc
aaa
sub
das
mov
jae
mul
test
push
shl
xchg
js
jmp
inc
sub
jmp
and
jle
fsubr
pop
xor
lea
and
fs
and
dec
pop
arpl
push
mov
and
retf
lds
loope
xchg
(bad)
fstp
cld
mov
stc
dec
and
(bad)
ffreep
cmc
shr
ficomp
idiv
jne
out
ins
enter
fadd
cld
xchg
or
jnp
neg
push
jge
jns
inc
fwait
xchg
mov
rcr
pop
into
inc
push
cdq
jbe
jmp
sub
sub
xchg
movs
call
jo
out
loop
sub
inc
xor
mov
jge
mov
cs
push
or
repnz
pop
push
call
mov
lds
fnstenv
adc
sbb
fwait
add
adc
add
(bad)
fxch
dec
dec
cmp
mov
fistp
xchg
in
jbe
add
ret
xor
xchg
jae
ret
ficomp
int3
push
dec
jne
or
or
movs
ss
xchg
retf
mov
xor
cmp
dec
jo
hlt
test
pop
fsubr
push
in
inc
cwde
dec
jns
mov
pusha
dec
push
push
ret
or
mov
lea
pop
lods
inc
and
fidiv
pop
jo
jne
aam
sar
push
leave
inc
js
jg
mov
jle
push
jmp
lds
icebp
pop
xor
cmp
inc
or
push
and
xor
and
mov
call
clc
add
xor
lock
push
dec
ins
leave
scas
xchg
cmps
cdq
imul
dec
(bad)
xor
inc
out
shl
pop
add
rcl
adc
pushf
add
jmp
push
inc
cmp
pushf
cmp
mov
and
in
and
jbe
arpl
mov
lahf
xor
movs
fmul
cmp
pop
mov
je
test
pop
add
or
ins
rcl
mov
sub
pop
cmp
in
mov
or
push
jecxz
push
out
shr
sub
cmp
out
pop
(bad)
adc
xlat
pop
aam
jp
mov
test
mov
inc
mov
clc
ins
std
inc
jae
fidiv
or
ins
cmp
dec
ins
jge
into
fmul
add
ret
adc
pop
cmp
shr
mov
pop
leave
fistp
sub
push
imul
xchg
cwde
ror
int3
enter
std
ficomp
int3
dec
repz
xchg
sbb
arpl
jnp
ins
cmp
movs
inc
pop
xor
stos
fisub
xor
dec
jno
push
push
or
mov
cmp
dec
mov
mov
cli
sbb
lds
pushf
dec
cmps
loope
cli
xor
aam
ror
fcomp
sbb
sub
js
fadd
in
xchg
inc
cmp
repz
repnz
add
push
cli
mov
(bad)
fdivr
(bad)
ds
and
sub
leave
scas
or
ins
fmul
xchg
pushf
std
out
mov
clc
sti
inc
mov
bound
loop
fiadd
pop
stos
shl
iret
repnz
gs
(bad)
sbb
jp
sub
adc
cmp
push
(bad)
sub
xchg
es
sahf
mov
mov
scas
push
ss
js
push
sbb
sbb
bound
pusha
mov
dec
ds
(bad)
je
pop
push
xchg
mov
leave
lahf
fnstcw
imul
(bad)
sti
fabs
loope
test
frstor
out
iret
cmp
mov
inc
fwait
mov
fcmovnu
or
andnps
pop
shl
mov
in
jge
cli
mov
retf
pusha
or
aam
mov
mov
add
test
xor
pop
arpl
add
js
push
mov
add
hlt
stc
bound
fadd
mov
lock
mov
jo
xor
sub
mov
dec
sbb
orps
imul
jmp
icebp
and
cmp
ja
(bad)
les
sub
xchg
out
test
in
jp
pop
mov
loop
test
enter
out
fwait
or
mov
test
xor
push
sbb
sub
out
repz
test
mov
cli
sub
push
mov
leave
xor
pop
cld
xchg
ret
loop
cld
jl
lds
mov
push
clc
sub
dec
dec
(bad)
sbb
sbb
shl
scas
imul
sub
and
sub
sub
test
fiadd
stos
mov
adc
dec
fisttp
mov
mov
pop
mov
imul
push
and
or
inc
imul
jle
sub
mov
aad
mov
push
dec
cmp
(bad)
shr
(bad)
popf
popf
inc
ret
aam
imul
int3
mov
jp
dec
mov
mov
mov
adc
cld
cld
mov
dec
mov
add
das
push
int
jnp
push
lahf
jb
xor
mov
ret
in
psubusw
adc
xor
adc
pop
dec
mov
call
fisubr
cmp
lea
(bad)
ds
push
push
inc
je
stos
data16
mov
xchg
mov
sbb
rol
ret
test
pop
xchg
jb
data16
outs
pusha
rcr
inc
cdq
fs
xlat
call
and
ret
mov
pusha
ret
shl
fadd
push
hlt
fs
gs
fld
jne
dec
adc
pop
(bad)
jae
push
dec
sub
cmps
scas
aas
xchg
adc
pop
icebp
or
push
xor
ja
pop
push
outs
or
mov
cmp
int
mov
dec
and
add
mov
xchg
lea
out
sti
test
xor
sbb
sbb
pop
xchg
push
(bad)
pop
jl
add
inc
call
arpl
cmp
mov
push
and
add
mov
(bad)
inc
push
std
(bad)
jne
mov
lods
xchg
inc
movs
into
ds
and
nop
aas
mov
call
mov
xor
cmp
fdiv
pop
cmp
inc
cmp
dec
inc
mov
xlat
popf
lea
retf
sbb
test
sub
mov
cs
xor
pop
cmp
jae
xor
pop
out
into
mov
jbe
sbb
inc
jbe
jl
adc
repz
mov
sbb
and
add
mov
lods
pop
mov
adc
out
ss
sbb
mov
push
or
es
pop
je
inc
jle
sbb
(bad)
push
inc
jo
sar
cmps
cdq
mov
and
inc
push
pop
call
int
ret
(bad)
sbb
and
clc
aam
cmps
mov
pop
jns
out
jp
fisubr
shr
mov
icebp
mov
inc
add
loope
or
test
inc
xchg
jno
(bad)
shl
cmp
das
xor
xchg
push
inc
xchg
scas
ret
push
xor
ins
sub
arpl
pop
xchg
ins
stos
jp
(bad)
cmovs
mov
je
dec
fiadd
mov
aam
sub
cld
add
inc
pop
nop
mov
add
rcl
push
or
int3
inc
push
mov
push
mov
mov
cmps
and
mov
sub
dec
add
in
xchg
stos
push
enter
ins
inc
std
pushf
imul
lock
push
cmp
mov
stos
sub
xchg
pop
and
aas
mov
mov
jbe
xor
fwait
lods
jae
fs
add
and
aad
scas
stos
push
dec
std
cmp
inc
mov
dec
addr16
xchg
iret
pushf
xchg
adc
fisttp
sbb
or
nop
mov
and
mov
je
aad
rol
add
sbb
sbb
test
sub
ror
sbb
pop
mov
push
adc
shl
push
call
pop
sbb
xchg
or
mov
mov
shl
js
jae
cs
loope
pop
movs
jne
mov
jl
jns
sbb
cmp
(bad)
mov
sbb
les
rol
add
xchg
cmp
aad
or
mov
fnstsw
mov
dec
pop
das
in
imul
sub
sqrtps
dec
lods
sub
xchg
or
inc
mov
and
mov
lock
loope
out
test
arpl
inc
lahf
xchg
jmp
push
(bad)
ret
data16
inc
je
loopne
hlt
cmp
fimul
fidivr
cld
aam
ss
inc
rcl
gs
sub
out
and
mov
loopne
sub
mov
sub
adc
and
pop
int3
sub
sbb
fidivr
adc
pop
out
mov
pusha
sbb
mov
hlt
dec
jbe
push
scas
xchg
mov
inc
test
fld
test
jbe
arpl
shr
mov
inc
pusha
fucomip
and
fadd
pop
and
(bad)
dec
xlat
dec
test
mov
sbb
jl
xor
inc
rol
inc
mov
lds
push
or
imul
pop
and
adc
xor
ds
xor
jp
(bad)
mul
push
imul
and
jb
cmps
pop
movs
in
push
mov
pushf
or
inc
imul
imul
jne
push
push
pusha
adc
frstor
shr
and
ja
mov
mov
xchg
pop
in
jmp
popa
xchg
push
fscale
repnz
and
jmp
test
mov
mov
add
lahf
out
fs
add
out
mov
adc
pusha
xchg
nop
pushf
mov
sub
sub
loope
cmp
push
je
(bad)
xchg
sub
stc
lock
outs
xor
cli
retf
fist
add
fmul
mov
push
cs
sbb
mov
(bad)
jle
ja
pop
daa
inc
jmp
(bad)
add
mov
mov
sub
call
sbb
jbe
mov
movs
jo
(bad)
mov
xchg
mov
jns
cmps
push
adc
cmp
dec
mov
les
movs
frstor
scas
iret
and
pop
push
adc
add
sahf
lods
mov
shr
xor
call
sub
enter
popa
inc
stos
call
jmp
and
jns
xor
call
std
inc
and
mov
fs
mov
inc
mov
jnp
mov
xor
test
stos
scas
add
mov
and
mov
faddp
mov
inc
xor
adc
pop
(bad)
xchg
mov
aad
nop
xchg
mov
lahf
push
push
outs
repnz
(bad)
mov
sbb
sbb
loopne
retf
inc
shr
sar
add
cmps
sahf
fwait
stos
pop
ins
sub
ds
add
xor
sbb
rcr
xchg
push
mov
cmp
xor
jmp
cwde
sub
jl
sbb
icebp
sub
push
fnstsw
mov
add
add
sbb
xor
jmp
inc
mov
pushf
ror
retf
retfw
cld
sbb
pop
mov
jge
push
cmp
mov
sbb
mov
jae
popf
and
aam
cld
out
shl
or
pop
loopne
js
js
mov
sub
sti
fs
call
retf
scas
aad
pop
sbb
dec
in
in
xchg
adc
ret
xor
into
mov
mov
mov
xchg
adc
je
das
scas
rcr
inc
inc
xor
push
jae
sbb
dec
mov
(bad)
stc
xchg
test
sar
mov
xchg
fs
and
test
mov
ret
int3
xor
inc
cmc
ret
or
sbb
or
push
aam
xchg
ss
jmp
or
dec
adc
loopne
xor
mov
cmp
dec
cmp
jno
rol
mov
sub
les
test
jbe
push
push
sub
test
lock
cmps
xchg
iretw
int
jl
call
fcmovnb
cmc
push
(bad)
mov
lods
ret
lahf
lods
mov
rcl
hlt
sub
andnps
into
ret
jns
mov
xor
scas
sbb
push
stc
and
xchg
leave
les
lods
mov
jmp
ins
rcr
mov
jb
cmp
outs
pop
fadd
adc
mov
outs
add
outs
imul
ds
push
stos
or
mov
add
or
cs
add
jns
sbb
or
fsubr
cmc
ja
imul
adc
mov
pop
stc
mov
push
sub
(bad)
out
data16
inc
pop
and
dec
add
xor
aad
xchg
ds
cmps
xchg
aas
mov
mov
add
ins
hlt
lods
test
stc
xor
push
dec
arpl
mov
ret
sbb
ds
test
out
aas
cmp
shr
ja
jo
jge
cmp
inc
push
lock
mov
loop
cmp
shr
dec
sbb
pop
out
jne
and
cmps
jmp
stos
jl
or
ds
hlt
dec
mov
dec
mov
(bad)
pusha
ficom
pop
pusha
mov
cwde
inc
retf
inc
pushf
dec
cmp
jge
cmp
loopne
push
mov
push
dec
and
sub
mov
and
(bad)
repz
cdq
ret
jo
push
mov
data16
gs
repz
ret
test
mov
or
pop
adc
(bad)
test
lahf
push
inc
pop
jecxz
cwde
test
sbb
frstpm(287
cld
jns
cmps
push
repz
pusha
pop
(bad)
adc
aas
ins
pop
push
jl
dec
pop
push
adc
unpcklps
or
(bad)
rcr
add
adc
shr
mov
int
jge
ret
pop
add
aaa
sbb
sahf
(bad)
(bad)
adc
dec
out
les
adc
mov
cmc
adc
dec
cs
or
and
imul
pop
mov
mov
push
push
je
jg
aaa
cmp
sub
mov
mov
data16
aam
loope
repnz
push
mov
sbb
pop
push
aam
lds
fld
sub
mov
jne
arpl
jb
js
daa
dec
and
(bad)
js
addr16
imul
cmps
(bad)
jecxz
mov
sbb
int3
sbb
mov
mov
(bad)
xor
adc
test
stos
test
pop
cmc
jl
and
cmp
call
jmp
cmp
jmp
sub
jge
into
int
sub
pop
dec
push
test
push
add
fisub
lds
in
ins
stc
sbb
ja
fcomp
sub
mov
rol
gs
or
call
jbe
mov
shl
fiadd
les
mov
ret
push
pop
cmp
outs
sub
push
retf
pop
pop
lds
xchg
and
cs
mov
dec
cmps
mov
push
push
inc
jae
pop
cmp
lods
and
test
mov
movs
mov
aam
cmps
pop
fnsave
mov
shl
cmp
cmp
mov
sub
or
or
push
and
cmp
add
daa
sbb
idiv
es
push
push
mov
sub
arpl
add
xchg
add
xor
test
cmp
loop
fdivr
cwde
cmc
jl
mov
iret
arpl
push
hlt
mov
and
mov
inc
sub
add
add
push
cmps
or
repz
or
into
mov
pop
outs
or
adc
out
and
ror
cmc
movs
xchg
(bad)
mov
test
(bad)
mov
adc
mov
stos
or
aaa
repnz
(bad)
mov
jl
call
sar
(bad)
push
fs
ficom
and
nop
rcl
clc
(bad)
push
xchg
jbe
push
mov
or
jo
inc
repz
stos
outs
pop
repnz
fidivr
repz
xor
cmp
xchg
adc
popf
hlt
sub
sbb
or
mov
adc
imul
dec
jmp
and
xor
add
psrlq
test
xor
jmp
pop
ret
inc
int
pop
loop
dec
lds
xlat
push
cmp
xchg
lds
xchg
pop
(bad)
std
das
iret
popf
xchg
outs
add
mov
mov
or
test
(bad)
jb
icebp
or
sub
xchg
test
xchg
ja
mov
ds
sub
retf
sahf
int
pop
adc
mov
std
popa
imul
mov
dec
out
jp
fwait
not
(bad)
push
inc
fmul
or
in
push
and
dec
push
aaa
(bad)
mov
and
pushf
(bad)
in
mov
add
xchg
enter
fidiv
xchg
leave
pop
test
push
inc
jge
jo
mov
fisub
pop
cmps
or
test
dec
push
addr16
inc
dec
and
sbb
js
push
add
movs
js
pop
adc
cmp
iret
sbb
pop
xchg
xchg
mov
subps
pop
mov
movs
iret
add
mov
das
inc
or
div
sbb
push
jns
loopne
sti
mov
ret
mov
pushf
cmp
and
pop
sbb
jle
sahf
ins
fwait
shr
xor
das
push
les
and
imul
push
push
push
jbe
and
dec
mov
mov
mov
es
in
push
cs
into
mov
cmps
jecxz
test
pop
sahf
sbb
clc
gs
xchg
(bad)
mov
ds
adc
outs
mov
lea
gs
in
or
xchg
(bad)
jnp
pop
test
push
mov
push
lock
mov
push
data16
dec
cmp
and
cmp
cs
nop
and
mov
push
adc
in
imul
jl
xchg
sar
mov
mov
add
ss
(bad)
lea
inc
imul
test
retf
pusha
enter
inc
mov
aas
mov
mov
fwait
fs
push
inc
fidiv
mov
or
cmc
pop
pop
add
mov
adc
les
ins
fisttp
xchg
jp
or
mov
cwde
mov
pop
jmp
dec
cs
inc
loop
in
cdq
mov
pop
fwait
mov
mov
sub
fisttp
cld
rcl
or
cmp
mov
cli
cmps
and
div
mov
ror
pop
test
scas
test
js
xchg
sbb
cmps
cmc
in
mov
retf
hlt
jb
or
clc
mov
sbb
es
fdiv
xor
sbb
jmp
mov
das
test
push
dec
fstp
sbb
ds
xchg
push
inc
jg
(bad)
pusha
fwait
aam
sbb
(bad)
lahf
jae
mov
shl
inc
and
sbb
jo
dec
jle
jbe
adc
sbb
cmp
cmps
push
xor
adc
scas
repnz
loopne
adc
jg
sahf
dec
dec
add
jmp
mov
jmp
outs
aaa
inc
sub
mov
xchg
xor
daa
pop
jmp
fdiv
movs
mov
ss
cmp
push
add
ret
stos
xchg
fldenv
push
shl
pushf
ins
push
shr
ret
les
fs
std
sbb
pop
jmp
jae
mov
add
ret
test
popf
mov
into
jmp
add
pop
jecxz
fisub
inc
or
mov
jle
ficomp
aas
outs
mov
or
jnp
pushf
test
xor
repz
mul
pop
jl
sbb
adc
dec
add
xchg
jbe
jle
cmp
xchg
in
outs
js
fbld
in
xor
ss
nop
sbb
jecxz
(bad)
cmp
push
xchg
arpl
loopne
in
mov
mov
and
out
out
icebp
pop
xchg
or
enter
xlat
jmp
add
fst
repz
pop
mov
jb
jecxz
jle
sbb
fcom
sbb
pop
out
mov
sub
push
mov
movs
in
dec
icebp
inc
dec
dec
(bad)
stc
test
pop
dec
or
xchg
adc
ror
leave
mov
xor
mov
fwait
movs
das
push
cmp
aas
jae
or
add
xchg
test
push
sbb
icebp
dec
imul
jo
mov
sbb
retf
loopne
test
jbe
movs
cli
mov
pop
outs
and
fs
shl
popf
sbb
pushf
jo
jge
outs
dec
(bad)
iret
or
test
int
sub
inc
inc
mov
mov
ins
inc
cmp
sub
ins
ret
jl
popa
das
call
sub
push
sub
repz
jmp
inc
sub
es
sub
fnstenv
cdq
repz
cwde
loope
cli
or
mov
or
jmp
lds
fst
das
(bad)
fbstp
mov
pop
push
mov
cmc
or
dec
movs
mov
cs
in
popa
mov
in
push
adc
sub
imul
js
mov
imul
jecxz
pop
or
jns
test
sbb
pop
enter
sub
psrad
dec
cwde
or
cmp
inc
shl
test
pop
xor
or
or
sub
and
lds
mov
mov
inc
std
aaa
std
pop
push
sti
add
or
mov
call
and
retf
mov
jno
dec
add
cs
dec
mov
in
inc
(bad)
dec
mov
mov
jmp
cmp
jns
sti
repnz
jns
jmp
xchg
lock
sub
add
movs
(bad)
leave
sbb
cmp
push
fs
sub
adc
imul
mov
jmp
add
nop
cmp
enter
mul
mov
dec
aas
and
arpl
ja
pop
mov
push
xchg
rcl
cdq
add
(bad)
setb
mov
pop
shl
pusha
ret
loopne
arpl
mov
daa
mov
jge
cli
les
inc
outs
das
mov
std
iret
mov
sub
(bad)
cmp
je
and
(bad)
jle
adc
sbb
inc
inc
mov
enter
inc
inc
sar
jno
dec
loope
inc
jb
sbb
mov
scas
cmp
nop
xchg
cmp
bound
and
call
adc
and
dec
loop
xchg
and
xchg
pop
gs
movs
mov
or
movs
shl
inc
push
xor
push
or
add
adc
popa
pop
lods
add
add
pop
or
cmc
sbb
aam
adc
(bad)
fdivr
add
adc
ja
rol
pop
in
jp
dec
repnz
mov
push
mov
mov
test
xchg
stos
ret
mov
mov
adc
lock
mov
mov
push
jle
jle
cmp
cdq
je
out
xor
pop
push
pop
dec
es
dec
or
mov
out
je
(bad)
cmc
test
shl
in
arpl
daa
pop
enter
test
aad
lods
cwde
addr16
or
sub
into
stc
rcr
mov
test
or
jmp
xchg
bound
add
inc
mov
jmp
test
push
shl
cmps
stc
sub
frstor
rcr
bnd
int
push
adc
push
daa
xchg
shl
jo
cmps
push
lahf
jecxz
adc
inc
test
mov
jmp
mov
ret
mov
jns
ins
xlat
call
dec
mov
push
xor
xchg
jbe
xlat
dec
mov
mov
add
in
mov
mov
or
std
call
adc
mov
sub
dec
outs
dec
std
(bad)
or
inc
cmp
or
xor
iret
lods
xchg
push
xchg
sbb
and
iret
loope
cld
repnz
into
mov
adc
dec
out
(bad)
sbb
adc
xor
aam
cld
inc
nop
jbe
and
lods
mov
fwait
mov
mov
push
or
dec
push
dec
fidivr
xor
aad
rcl
cmps
ins
inc
ret
sub
gs
jg
cwde
xchg
lods
add
in
(bad)
push
sbb
jmp
or
mov
mov
mov
adc
lahf
(bad)
imul
popa
cwde
mov
sub
mov
in
inc
adc
out
jnp
into
add
mov
pop
aas
xor
outs
cmp
xchg
lahf
sbb
sub
pop
stc
das
ja
adc
rcr
xlat
call
sbb
push
push
inc
call
inc
into
dec
add
out
cmp
call
lds
mov
sti
fsubr
stos
or
stc
or
jl
mov
inc
retf
or
into
pushf
lock
fdivr
les
jnp
test
push
(bad)
mov
fisttp
arpl
movs
imul
jo
push
stos
fs
jle
call
aas
cmc
mov
push
iret
sub
movs
mov
js
jmp
push
mov
jo
ins
iret
data16
cmps
jne
dec
ret
lahf
cmps
sub
mov
sbb
jnp
mov
cmp
sub
adc
hlt
mov
arpl
xor
lea
in
leave
mov
pop
push
cmp
ret
(bad)
div
sbb
mov
xchg
sub
mov
sub
(bad)
ja
rol
ret
mov
imul
or
loopne
jmp
ror
mov
in
ficom
lahf
aas
std
cld
movs
cmps
jg
mov
into
enter
jnp
loop
icebp
sbb
sbb
push
or
sub
xor
jl
fsubr
jl
out
pop
sub
mov
xchg
je
cdq
test
xchg
loopne
std
and
push
(bad)
cs
aam
push
leave
sub
call
cmp
clc
mov
je
mov
push
sub
loop
or
imul
push
dec
dec
mov
in
or
daa
mov
add
out
lods
add
icebp
push
adc
aam
xchg
adc
inc
fnstsw
xchg
cmp
cli
add
(bad)
ror
push
not
jae
and
pusha
add
jmp
mov
dec
adc
sub
pushf
or
xchg
adc
add
lods
int3
fsubr
sbb
cwde
inc
fwait
call
jne
fiadd
call
loope
push
in
call
inc
mov
scas
jmp
jno
sub
and
addr16
jns
(bad)
cmp
icebp
sub
pop
lods
cmp
and
or
add
test
push
jmp
pop
test
dec
call
test
stos
out
addr16
cmp
mov
cmp
enter
pop
(bad)
jnp
cmp
add
clc
xchg
nop
into
push
push
pop
aaa
aaa
lahf
pop
jp
mov
cmps
jo
xor
sub
and
ds
ins
imul
cmc
int3
xor
jae
pop
pop
xor
bound
cdq
cmp
mov
stc
dec
rcr
sub
test
pusha
jl
push
nop
test
cld
fbstp
jp
dec
rcl
pop
mov
repz
js
cwde
mov
jmp
(bad)
sub
jmp
(bad)
imul
ffreep
ffree
adc
dec
test
xchg
dec
jb
out
mov
outs
jo
ins
sub
iret
jb
movs
sbb
add
xchg
cs
nop
dec
(bad)
or
je
pop
ret
lods
cli
imul
(bad)
mov
loopne
push
dec
add
scas
jns
cdq
jbe
in
repnz
cs
mov
mov
retf
aam
cmp
dec
shr
js
out
push
jl
inc
mov
push
lea
gs
pop
sub
jnp
and
add
cmp
cmps
lods
sbb
push
jge
or
or
std
in
pushf
jge
xor
mov
jb
call
sbb
dec
daa
retf
neg
jo
push
scas
loop
dec
adc
push
mov
or
push
cmp
sub
xchg
pusha
test
xchg
or
or
xor
pop
inc
bound
out
adc
mov
adc
cmp
out
ss
push
sub
sub
push
(bad)
pop
popa
aas
gs
xchg
add
jb
jbe
and
out
sar
iret
cmp
scas
bound
cmp
jmp
mov
pop
push
addr16
push
xchg
cli
adc
mov
pop
xor
xchg
sahf
daa
adc
jno
dec
mov
xchg
pop
and
pop
retf
in
xor
cld
mov
and
inc
and
xor
loopne
dec
push
cmp
in
or
cmps
imul
xchg
push
in
sub
cmp
cdq
sti
retfw
pushf
retf
jmp
jae
fmul
pop
mov
icebp
sbb
push
dec
mov
pushf
outs
dec
lods
adc
in
and
push
shr
dec
loopne
adc
(bad)
sub
ss
pop
inc
jmp
cs
xchg
dec
cdq
test
fld
rcl
adc
xchg
jmp
in
dec
adc
adc
fcmovbe
popf
adc
push
shl
mov
lea
or
js
lds
movs
xlat
xor
cdq
adc
leave
sbb
and
lahf
inc
inc
jp
cmc
iret
(bad)
shrd
and
push
pop
dec
push
push
jb
cmp
js
xlat
jbe
jmp
sub
dec
xchg
and
xlat
mov
sub
leave
mov
enter
in
xchg
push
jmp
ds
mov
ror
out
mov
fld
gs
in
dec
fs
jno
rcr
xor
(bad)
fnsave
(bad)
loop
sbb
in
inc
sahf
jl
xor
ins
lock
(bad)
ja
adc
ror
mov
pushw
test
or
inc
sub
repz
dec
cld
les
sahf
retf
outs
(bad)
shl
imul
xchg
test
js
call
or
jbe
cdq
clc
mov
sbb
int
mov
cmp
stc
ins
dec
xchg
adc
daa
jns
ja
push
jnp
adc
out
imul
loopne
mov
nop
dec
in
mov
mov
mov
jno
sbb
repz
mov
cmp
adc
add
cmp
adc
xchg
clc
test
mov
call
es
push
(bad)
mov
int3
(bad)
gs
arpl
(bad)
jae
mov
and
jmp
rol
popf
cld
pop
inc
fist
add
stc
shr
bound
pop
sub
and
gs
in
jmp
push
cwde
movs
and
push
imul
movs
xor
xor
push
xor
(bad)
jmp
jb
and
stc
xor
sub
jmp
pusha
fst
pop
gs
fwait
dec
es
mov
pop
stc
cmp
sbb
fs
loop
fcmovnbe
sbb
push
and
dec
lods
or
pop
jb
test
xlat
das
cmp
sbb
push
jne
adc
mov
pushf
call
mov
test
jno
mov
(bad)
jmp
or
pop
jae
push
cmp
adc
data16
mov
or
push
sbb
out
or
adc
sbb
mov
(bad)
retf
mov
repz
dec
mul
daa
sub
sub
clc
stc
sub
or
sbb
shr
jge
cmp
or
mov
or
es
int
xchg
inc
loopne
(bad)
lock
and
das
and
lods
push
add
in
loope
(bad)
sar
sub
cmp
pop
xor
fs
(bad)
aad
test
aas
add
pop
jbe
scas
xchg
push
mov
lods
and
adc
cwde
ja
mov
imul
hlt
and
xchg
pusha
lahf
inc
int
sub
call
adc
pop
dec
xchg
cwde
std
nop
dec
arpl
mov
popf
xchg
and
in
dec
mov
call
dec
das
or
inc
xor
fdivr
ror
sahf
rcl
shl
or
cmp
mov
add
pop
adc
inc
cmp
or
mov
and
ins
push
scas
dec
and
sub
inc
push
lahf
lea
adc
mov
jnp
or
(bad)
in
mov
push
mov
adc
cmp
fsubp
fldenv
ja
push
adc
mov
mov
dec
push
(bad)
xchg
xchg
dec
xor
xor
inc
fwait
imul
cdq
and
or
cwde
add
cmp
mov
test
or
and
inc
sbb
jecxz
popf
call
stos
test
dec
xchg
loopne
pop
dec
cs
or
jmp
inc
(bad)
sti
sti
dec
(bad)
cmp
test
call
inc
daa
jo
mov
sbb
lods
ret
pop
scas
inc
cmp
push
adc
aam
sbb
sub
(bad)
mov
rol
les
and
nop
imul
pop
add
mov
mov
lahf
mov
dec
shr
jmp
in
out
push
pop
sahf
out
mov
pushf
sahf
arpl
mov
out
lods
movs
xor
jge
cdq
add
loop
mov
fidivr
int
xchg
or
out
push
sub
xchg
sub
js
movs
sbb
ss
xor
jmp
inc
fsub
xor
jl
aad
je
adc
fiadd
fcomp
push
ror
sahf
sbb
in
mov
aad
dec
stos
xor
mov
cdq
add
inc
test
pop
adc
xlat
add
add
or
popf
jne
push
adc
mov
mov
test
fwait
loop
cmps
gs
imul
xor
int
mov
xchg
xor
inc
mov
mov
cmps
pushf
lds
sbb
xor
sbb
in
pop
in
div
inc
jne
lea
mov
sub
inc
addr16
pop
mov
enter
pop
jmp
clc
adc
or
xor
push
pushf
stc
hlt
mov
jne
repz
pop
or
loop
sub
mov
mov
cmps
cwde
int3
cli
or
cmc
jmp
and
ins
icebp
or
lea
pop
loop
jle
push
jbe
in
shl
add
and
mov
push
inc
dec
enter
aam
dec
jbe
leave
xlat
and
hlt
xchg
ins
jbe
scas
mov
stos
out
into
fcom
jl
repnz
(bad)
adc
cmp
out
pop
mov
jae
xchg
xor
jle
loope
(bad)
gs
(bad)
push
jge
mov
loopne
mov
mov
push
or
jle
xchg
push
cmp
(bad)
fmul
xchg
mov
aad
add
in
inc
xor
add
inc
jbe
dec
popa
fimul
mov
xor
daa
ja
jmp
addr16
scas
sub
hlt
push
jmp
pop
xchg
jbe
mov
rol
add
mov
test
sub
cmp
sahf
pop
or
sbb
(bad)
mov
ret
clc
inc
and
xchg
addr16
xor
out
sub
arpl
shr
add
jo
push
mov
gs
lock
ss
loopne
xlat
lds
les
adc
sub
add
pop
shufps
push
inc
movs
out
cwde
cmc
inc
out
into
pushf
inc
dec
xor
sbb
xchg
fwait
hlt
mov
fwait
movs
or
dec
jmp
sbb
arpl
mov
push
dec
jo
imul
mov
nop
sti
mov
jae
mov
imul
repnz
sbb
cmp
lods
iret
xchg
cmp
lock
push
sub
adc
sar
aaa
and
or
dec
retf
in
or
cmps
and
outs
lods
pop
std
mov
mov
mov
mov
mov
loop
xchg
adc
pop
and
(bad)
das
and
push
aas
mov
mov
sbb
in
or
jno
mov
adc
xor
push
mov
add
dec
jp
call
fsubp
cmp
inc
adc
and
popa
cmp
shl
jl
jae
clc
mov
fwait
sbb
aam
(bad)
cmps
jns
addr16
movs
push
adc
sbb
movs
and
adc
repnz
adc
mov
lods
pop
ins
and
push
mov
cmc
xor
cmps
neg
and
jae
fcomp
push
push
daa
ret
xor
shr
jg
je
push
jp
mov
sbb
(bad)
sar
inc
adc
xchg
mov
inc
mov
pop
or
jmp
out
popf
or
std
lods
fild
push
aaa
add
arpl
adc
bound
adc
adc
jns
push
inc
sti
ret
popf
imul
sub
jbe
lds
jae
(bad)
shr
(bad)
hlt
pop
(bad)
enter
jmp
sub
jp
push
lods
push
jbe
xor
popa
mov
dec
inc
test
mov
je
jno
dec
pusha
sub
sar
(bad)
das
js
mov
hlt
dec
xlat
sub
rcl
and
aad
sub
push
jmp
adc
adc
pushf
rol
or
arpl
ins
ins
pop
mov
pop
out
push
mov
jecxz
and
jae
mov
fs
jl
leave
fst
scas
pop
add
scas
cmp
push
mov
fild
xlat
arpl
jae
test
retf
in
lods
mov
jge
in
test
fimul
jmp
mov
sub
adc
mov
adc
popf
popa
mov
movs
loopne
outs
cmps
in
mov
ror
bound
lahf
mov
bswap
and
mov
xor
sbb
in
lock
test
sub
jno
add
jnp
mov
xchg
inc
lds
adc
ficom
dec
jb
mov
mov
ret
jp
rep
push
sbb
push
cld
into
xchg
addr16
and
mov
pop
int3
and
mov
add
stos
pop
mov
mov
dec
jno
inc
xchg
or
inc
or
das
push
inc
xor
(bad)
jle
pop
cmp
adc
fsub
dec
(bad)
call
sbb
jge
or
rol
xor
pop
jle
int
add
jmp
push
stos
add
sub
shl
jmp
out
mov
imul
sub
mov
or
jg
mov
(bad)
out
add
pop
add
shl
push
adc
and
test
pop
xchg
sub
in
lahf
cmp
mov
mov
packsswb
jmp
aaa
mov
pop
sub
jo
inc
mul
fst
shl
mov
cmp
or
mov
call
push
lock
mov
shr
fs
sar
aam
movs
call
(bad)
into
ret
popa
enter
pusha
mov
fdivr
(bad)
loopne
lahf
je
xor
xor
and
mov
repnz
xor
dec
jbe
fild
cmp
imul
jbe
sti
(bad)
(bad)
xchg
test
data16
popa
mov
data16
cli
pop
jl
icebp
in
xabort
cmp
and
sub
mov
xor
push
or
les
cdq
push
add
cmp
dec
adc
dec
out
and
or
cmp
stos
shl
retf
jo
sahf
dec
ds
aad
pop
and
iret
jns
push
cmp
jns
push
xchg
jmp
test
mov
ja
add
adc
push
mov
out
push
xor
mov
call
cmp
push
movs
movs
lods
or
fwait
in
fdivr
test
sub
and
repz
jle
pop
enter
ror
aaa
cld
cmp
int
hlt
jb
popf
push
test
mov
cmc
movs
mov
dec
adc
and
or
lds
or
push
push
push
sbb
sub
or
retf
pushf
in
or
xor
inc
imul
inc
push
sar
xchg
repnz
push
addr16
loope
and
adc
ret
and
shr
popa
push
or
adc
mov
dec
test
inc
mov
addr16
call
jmp
sbb
mov
pop
push
and
cmp
dec
mov
cmp
add
(bad)
shr
(bad)
shl
jmp
mov
pop
into
add
test
inc
div
lahf
fcom
lds
xchg
mov
sbb
jp
out
xor
pop
ja
iret
pop
pop
xchg
adc
sub
push
arpl
stos
xchg
out
cwde
loopne
retf
popa
(bad)
cmp
repz
rol
scas
push
dec
sub
or
hlt
test
push
cld
inc
cld
mov
(bad)
jae
sti
aaa
and
inc
sti
push
pushf
jmp
xchg
dec
xor
movs
call
div
call
shr
call
add
(bad)
repnz
retf
test
dec
scas
scas
ins
xchg
rcl
fadd
js
cmp
inc
dec
(bad)
and
test
add
or
mul
pop
sbb
inc
mov
jecxz
popf
arpl
adc
fisttp
xchg
lea
dec
push
mov
movs
and
jmp
mov
push
inc
repnz
pushf
xchg
add
fistp
push
cmp
cdq
shr
xchg
gs
add
inc
xor
mov
retf
mov
repz
dec
int3
push
mov
sahf
jns
aaa
sub
je
rcr
jmp
or
stc
lea
and
movzx
xchg
adc
retf
bound
push
and
add
sub
imul
(bad)
aaa
push
int
mov
cmp
je
pop
jl
sbb
push
aam
sub
xchg
jnp
xchg
pop
nop
cwde
(bad)
push
imul
clc
mov
rcl
(bad)
pmaddwd
and
or
loop
xchg
mov
xchg
dec
pop
mov
mov
mov
rol
push
or
neg
push
loopne
mov
adc
xchg
adc
jg
lea
arpl
pop
pop
push
cmp
pop
pop
jo
and
add
in
mov
cwde
or
jns
jmp
enter
lods
add
mov
mov
nop
or
push
pop
mov
mov
adc
fisubr
dec
retf
imul
mov
xchg
inc
sbb
mov
inc
mov
mov
ret
or
stos
adc
stc
jecxz
lahf
xchg
push
inc
cdq
rcl
or
neg
cld
loope
test
adc
xor
or
cmp
jecxz
jnp
lds
pop
mov
xchg
inc
fnsave
cld
imul
xchg
xor
(bad)
or
dec
sub
rcr
push
ret
retf
fnstenv
sub
pushf
adc
sub
inc
cld
mov
imul
imul
sbb
add
shl
les
inc
pop
imul
dec
jb
cli
or
or
hlt
jg
iret
movs
clc
aaa
xchg
pop
retf
jmp
stos
mul
cmps
mov
leave
push
jg
mov
add
sbb
and
loope
push
call
inc
out
(bad)
and
or
enter
(bad)
sbb
inc
out
sub
pop
sbb
(bad)
(bad)
pop
enter
dec
ror
test
loop
pop
pop
add
out
dec
mov
sbb
cdq
nop
loop
aaa
outs
pop
(bad)
aad
xlat
cdq
xlat
stos
push
dec
ret
add
cld
xor
addr16
adc
out
pop
dec
lods
mov
jbe
sub
(bad)
or
jmp
mov
mov
sub
fmul
xlat
jo
inc
outs
ror
sar
xor
push
fs
pop
in
jg
(bad)
jecxz
fisub
inc
sub
fwait
and
xor
jnp
cwde
stos
mov
stos
or
jl
and
mov
mov
das
xchg
retf
push
rcr
sahf
push
jb
mov
mov
ret
jecxz
(bad)
(bad)
aam
and
in
cmp
pop
dec
or
jb
mov
xor
and
icebp
sub
adc
jno
movs
jle
icebp
data16
push
and
dec
jmp
fisubr
and
inc
xor
push
pushf
fdivr
mov
jge
sbb
xor
jmp
adc
ret
test
jg
les
or
and
dec
and
pop
mov
adc
ins
das
imul
and
xchg
inc
adc
lods
test
cs
test
cld
xor
fcmovnu
xlat
xchg
cmc
jb
aaa
mov
xor
adc
pop
add
outs
mov
lahf
pop
cs
popa
and
js
out
add
jle
pop
addr16
or
mov
retf
cmp
popf
mov
xchg
enter
pop
out
xchg
leave
or
sbb
sbb
daa
xlat
inc
xor
sbb
sub
cli
int3
mov
out
(bad)
das
jmp
pop
sub
jae
jo
popf
repz
mov
jns
ficomp
xchg
shl
call
ins
xlat
push
push
sub
inc
sub
mov
sbb
mov
mov
mov
pop
adc
xor
rcr
mov
lahf
(bad)
mov
xchg
inc
cmp
lock
cwde
fld
fisttp
sub
popa
push
cmps
jg
rol
test
inc
mov
pushf
inc
inc
dec
adc
rcl
adc
inc
call
outs
rcr
pop
mov
xor
mov
mul
xor
dec
xchg
push
jnp
pop
push
jo
fist
out
inc
(bad)
stos
and
fwait
mov
mov
jne
pop
pop
pop
mov
pusha
pop
outs
test
(bad)
mov
in
mov
dec
loop
push
(bad)
ins
movs
jbe
push
push
lods
fwait
dec
or
aam
mov
mov
sub
test
and
mov
pop
add
test
xor
jb
(bad)
xchg
out
jecxz
jo
fimul
(bad)
jmp
adc
and
xchg
mov
pop
cs
and
inc
mov
pop
imul
add
int3
or
out
ret
clc
sbb
mov
inc
cmc
jbe
add
pop
lea
xor
rol
test
cmc
push
xchg
clc
lods
rcl
call
lahf
jge
pop
fs
popf
sub
jle
pusha
and
or
out
add
adc
cmc
push
fdiv
sbb
sub
in
and
cmp
xor
mov
rcl
mov
xchg
out
rcl
cmps
jmp
clc
pop
pop
mov
xchg
adc
xor
cmp
ds
bound
rol
dec
enter
daa
fwait
pop
mov
xchg
aas
cs
jae
test
sbb
test
rdtsc
test
inc
cmc
sahf
cmp
aam
pop
add
ffree
aad
ins
in
dec
adc
push
sub
cmps
test
add
cmp
cmp
cli
call
adc
jb
push
loop
jge
(bad)
adc
and
xor
xor
inc
mov
jne
mov
dec
int
js
and
lods
imul
jp
ret
inc
pop
mov
push
into
jae
stc
cmp
pop
push
fnstsw
add
push
into
push
cmp
repz
mov
gs
cmc
mov
stos
jmp
sub
(bad)
ficomp
xor
mov
add
sbb
scas
rol
and
jl
add
or
js
jbe
inc
or
lock
lods
dec
div
sbb
xchg
aam
imul
stos
jg
sub
in
fistp
outs
js
push
mov
adc
imul
mov
inc
jmp
cld
xor
lds
jne
mov
dec
add
ins
add
das
xor
push
stc
es
ins
add
mov
mov
cli
inc
pop
stc
add
inc
prefetch
adc
std
lock
popa
jmp
aam
or
scas
xor
int
mov
scas
loopne
xchg
adc
adc
sub
pop
repz
iret
jmp
xor
mov
sqrtps
lock
or
aaa
fcom
repz
mov
mov
pushf
mov
sti
popa
jmp
cmp
les
xchg
ins
jb
pop
(bad)
loopne
out
add
push
pop
in
iret
ss
gs
fdivr
dec
mov
or
mov
je
fidivr
mov
shl
ror
cli
pop
clc
xchg
(bad)
xchg
and
loope
ins
jne
(bad)
ds
push
xor
cmps
mov
ss
add
jmp
mov
movs
movs
aad
cmp
dec
pop
pop
addr16
cmc
iret
jmp
inc
nop
cmp
sub
clc
add
jnp
dec
add
cmps
or
mov
xor
outs
xchg
sbb
or
jno
push
cmp
sub
out
jge
jb
jne
shr
xchg
xchg
nop
shl
(bad)
mov
les
mov
pop
adc
adc
call
cld
out
fs
in
rol
ds
loope
pop
jmp
push
add
mov
push
cmp
xchg
xor
jne
or
jb
cmp
movs
stos
xchg
outs
ror
sbb
jmp
jo
fdivr
scas
(bad)
jns
leave
into
(bad)
call
jnp
jno
ins
shl
mov
jmp
mov
or
xchg
add
mov
jb
dec
outs
sti
inc
push
mov
cwde
mov
cs
add
xchg
rcr
jg
iret
aam
outs
jns
sbb
push
enter
dec
mov
lds
inc
movs
mov
inc
call
cmc
aas
fidiv
ret
rcr
sbb
sbb
repnz
mov
mov
pop
or
adc
dec
jl
mov
dec
ds
clc
mov
(bad)
xchg
retf
and
mov
stos
fsub
fs
push
cmp
je
cld
mov
sub
inc
xor
enter
sub
es
repnz
test
mov
push
xor
fs
into
inc
int3
ret
in
cs
stc
aas
ins
cs
dec
arpl
es
int3
xor
sti
and
mov
jo
and
inc
(bad)
call
jmp
sub
test
push
jmp
pop
or
popa
inc
ins
jbe
xlat
rol
pop
hlt
aaa
ss
or
repnz
frstor
cmp
xchg
iret
loopne
xchg
add
fsubr
popf
xor
pop
sbb
jecxz
sub
cmc
mov
sbb
adc
push
scas
push
mov
pop
fwait
push
sub
inc
popf
jecxz
cld
add
pop
std
repz
ds
mov
out
lahf
mov
pop
sub
cmp
jae
ds
push
add
fstp
sbb
in
cmp
add
cmp
test
sbb
movs
(bad)
psrad
adc
push
jno
mov
jmp
adc
xchg
das
add
popa
mov
jle
call
mov
push
sar
(bad)
mov
mov
test
call
dec
cwde
cmps
mov
pop
jle
jmp
sahf
mov
addr16
sub
pop
jae
popa
inc
adc
push
(bad)
daa
sbb
or
call
stos
add
sub
out
mov
add
pop
(bad)
push
rep
and
adc
inc
cld
pop
inc
add
icebp
loopne
or
bound
sub
out
nop
push
mov
int
int3
inc
lea
cld
cmp
push
mov
stos
daa
(bad)
ins
(bad)
outs
push
cmp
lods
jns
in
mov
add
inc
data16
or
sar
pop
setae
add
(bad)
retf
inc
cdq
scas
pop
fcomp
daa
je
pop
iret
mov
ror
push
popa
icebp
mov
icebp
test
scas
push
test
ds
push
mov
adc
push
pop
cmp
neg
(bad)
stc
not
or
(bad)
dec
push
mov
pop
dec
push
cmp
retf
enter
aam
add
push
dec
es
fdivr
mov
xchg
out
push
dec
add
pop
or
sbb
dec
repz
sub
sub
mov
imul
(bad)
outs
mov
sti
out
dec
push
xlat
test
inc
ins
popf
mov
lods
fucom
pop
outs
pop
adc
mov
xchg
adc
rcr
lds
xor
and
sbb
addr16
add
xchg
pop
cmp
or
inc
sbb
push
mov
dec
fcmovne
mov
out
jo
push
add
popf
in
in
sub
mov
ja
xchg
std
push
add
inc
fcomp
clc
dec
jbe
cwde
stos
pop
cmps
pop
pop
dec
sub
xor
sub
test
push
dec
scas
popa
jne
mov
mov
xor
leave
sbb
pop
add
push
cdq
jne
mov
iret
ins
aam
int
jnp
lahf
add
sub
sub
xchg
cwde
inc
pop
shr
pop
push
add
fcmovnu
adc
pop
xlat
jno
(bad)
lods
retf
or
mov
add
lods
in
mov
scas
hlt
xor
sbb
sbb
or
ins
js
ss
fldenv
pop
out
outs
xchg
lea
sbb
lea
pop
jae
xchg
scas
jl
fs
lahf
sub
iret
stos
sbb
jo
mov
jnp
jnp
scas
cs
mov
(bad)
repz
lds
jbe
mov
rcr
int3
cld
(bad)
fst
or
adc
sbb
mov
in
jmp
call
push
js
iret
add
jae
add
cli
bnd
(bad)
pop
sar
cmps
lahf
and
int3
inc
jae
je
mov
xor
cmp
and
sub
xchg
lods
or
ss
popf
add
out
push
cmp
and
out
test
or
inc
sbb
mov
imul
xchg
cs
in
mov
push
je
xchg
push
ins
loope
pushf
scas
sub
out
push
outs
scas
in
jno
mov
adc
retf
xchg
test
(bad)
shr
bound
shr
add
movs
in
cmp
jne
or
jne
stos
repz
adc
not
inc
dec
ins
test
dec
xor
push
outs
jno
dec
adc
fwait
or
jg
and
sub
bsr
mov
nop
sub
fldcw
or
xor
inc
mov
pop
adc
sbb
jne
inc
push
sbb
bound
lods
movs
dec
cwde
imul
lds
in
fidivr
leave
or
leave
jge
in
mov
cld
cmp
loope
push
inc
loope
int3
jge
shr
xchg
sar
lods
shr
pop
loop
jae
int
mov
aaa
outs
lahf
jno
cmp
dec
aas
mov
push
(bad)
push
fidiv
ret
add
sub
xchg
or
sbb
pop
scas
call
frstor
ins
lds
mov
in
rol
pusha
xor
xor
fidiv
clc
dec
and
cmc
call
push
and
xchg
stc
aas
sub
mov
dec
lea
dec
outs
cmp
mov
and
or
retf
(bad)
(bad)
mov
push
xor
mov
lods
push
pop
cmps
stos
and
imul
pop
and
xor
loope
cmps
es
je
pop
daa
dec
mov
cwde
sbb
in
nop
jg
cmp
stos
inc
(bad)
imul
pop
or
jecxz
push
scas
dec
mov
add
jmp
(bad)
cmp
data16
sub
push
test
imul
fild
mov
xchg
test
jl
cdq
jae
xchg
popa
or
sub
xor
or
dec
in
rol
mov
add
push
popa
inc
mov
add
nop
sar
xor
adc
sbb
mov
dec
push
outs
mov
inc
xchg
xchg
xor
pop
or
mov
jmp
ret
mov
mov
jp
push
sub
push
pop
mov
jl
jns
imul
jne
adc
ficom
mov
pop
jp
pop
sub
sti
ins
inc
mov
mov
sub
daa
sub
(bad)
ja
add
mov
push
daa
cmps
inc
fist
and
adc
push
sub
mov
out
xor
repnz
add
or
addr16
aaa
lea
out
add
js
or
(bad)
scas
or
jmp
push
push
retf
pop
pushf
push
mov
push
xchg
mov
stos
mov
inc
jecxz
inc
cdq
enter
xchg
int3
pop
daa
aas
aas
jle
xchg
loope
fdivr
enter
stc
sti
ret
les
dec
repz
js
aam
hlt
rcl
loop
mov
data16
retf
loop
push
neg
sbb
not
aaa
mov
xchg
sbb
or
cmp
jbe
aas
mov
xor
inc
cmp
xor
in
push
mov
xor
jg
push
ja
or
push
jecxz
mov
bound
sub
mov
retf
dec
popa
adc
scas
add
lahf
adc
jmp
xor
movs
mov
push
fwait
je
stc
pop
jle
and
or
pop
dec
cmovns
xchg
les
sub
mov
push
clc
retf
and
add
sub
out
jnp
jge
mov
call
lods
imul
fbstp
daa
(bad)
sub
mov
mov
js
sub
mov
jmp
popa
ds
xor
inc
add
cwde
or
cmp
sub
mov
mov
mov
xor
sbb
jo
push
movs
sbb
lea
into
inc
ins
pop
dec
fucomp
idiv
(bad)
mov
sahf
out
rol
lds
dec
xlat
ffree
or
in
ror
mov
sub
sub
cmp
push
mov
cmc
mov
xlat
adc
mov
or
pop
jl
js
punpckldq
sar
es
xchg
mov
lock
call
fstp
xchg
push
cmp
xor
or
push
retf
hlt
scas
sbb
les
dec
xor
clc
dec
adc
mov
addr16
fs
xor
push
lea
mov
pop
icebp
mov
xor
jns
js
shl
adc
enter
adc
data16
or
cmps
xor
in
cli
dec
pop
outs
mov
adc
lods
outs
mov
xor
stos
out
test
cli
stc
pop
inc
mov
add
int
xchg
fadd
jo
jns
jnp
and
cmp
pusha
es
js
shl
(bad)
cmps
cmp
retf
and
sub
data16
fidiv
jae
mov
jo
dec
shl
shl
sub
mov
jmp
out
les
mov
dec
ja
pusha
pop
nop
retf
sbb
cmp
loope
and
pop
inc
inc
or
rcl
sahf
push
add
sub
arpl
into
iret
repz
cdq
test
repnz
imul
xor
hlt
cs
stos
xor
mov
daa
mov
test
jns
jno
jecxz
inc
jecxz
mov
jg
cli
jmp
dec
jae
cdq
shr
pop
jl
(bad)
jecxz
xchg
out
mov
cmps
push
into
sar
add
imul
ret
aad
adc
jne
xchg
jl
xchg
fdivp
out
int3
ds
(bad)
pop
addr16
jmp
adc
mov
jne
scas
lahf
gs
or
xor
pop
cmps
lock
push
push
xlat
mov
sub
or
xor
shl
fld
jno
xchg
aaa
icebp
cmp
sub
loopne
mov
jnp
pop
stc
mov
sbb
pop
idiv
mov
popf
inc
loope
sub
or
pop
mov
sub
gs
pop
jp
cmp
in
mov
cmps
xchg
xor
push
fstp
cmp
(bad)
aad
sti
mov
lods
jecxz
or
enter
xor
jecxz
loopne
outs
aas
(bad)
mov
(bad)
(bad)
outs
call
xor
add
(bad)
mov
add
test
mov
push
dec
cmp
div
adc
lds
mov
or
jmp
hlt
outs
rcr
repnz
mov
xchg
js
ja
(bad)
in
fwait
xor
pop
mov
mov
ret
push
xchg
test
and
xchg
cmps
jne
push
adc
jmp
xor
call
call
pop
test
add
mov
xor
mov
or
in
shl
adc
fistp
inc
sbb
lea
jno
movs
cwde
test
adc
mov
jle
push
xchg
movs
lock
sbb
lea
jl
out
xchg
xchg
pop
mov
xor
icebp
sub
inc
or
rcr
or
push
cli
daa
jno
xchg
fwait
ds
fs
pop
in
(bad)
out
push
jmp
fwait
push
aad
js
outs
sub
aam
in
shl
sbb
sahf
pushf
ins
mov
push
movs
xchg
inc
mov
mov
or
push
inc
aad
add
daa
nop
nop
sbb
out
add
jne
xchg
mov
xor
sub
enter
aas
ret
mov
push
or
push
std
jp
hlt
or
mov
(bad)
jle
loopne
xchg
cmp
out
loop
sub
out
test
arpl
jae
xchg
inc
cmp
push
pop
ficom
xchg
fadd
fnstcw
into
xor
adc
pop
fdiv
mov
js
nop
push
js
add
push
and
ds
sti
and
neg
push
fs
loope
mov
xor
in
loope
rol
or
or
cmp
dec
mov
rcl
mov
imul
lods
add
int
add
push
lea
(bad)
xchg
call
jmp
test
lds
movs
and
sbb
pop
nop
or
loope
jge
nop
fcom
ins
push
in
mov
test
jle
lods
stc
mov
dec
sbb
in
ror
(bad)
call
pop
mov
cmp
lahf
jl
outs
nop
xlat
mov
push
pop
(bad)
retf
inc
mov
pushf
mov
fsub
xchg
or
mov
push
fstp
(bad)
dec
in
es
idiv
aaa
mov
and
add
mov
cmp
sbb
inc
daa
cli
in
bound
pop
in
inc
pop
fwait
cmp
push
pop
mov
sbb
adc
mov
inc
add
add
ret
shl
cmp
push
xchg
pop
adc
add
cmp
mov
rol
loope
mov
test
nop
sub
lahf
jmp
mov
fbstp
js
inc
leave
sub
dec
sub
aam
dec
or
aas
mov
lods
mov
mov
pop
in
mov
mov
sub
mov
lock
cld
movs
xchg
movs
into
add
adc
xchg
pop
icebp
enter
in
shr
jne
dec
pop
jo
ret
push
xchg
sbb
push
call
div
xor
cwde
push
and
mov
cmps
clc
popa
jb
pop
cld
cmps
pushf
rcr
or
imul
sbb
dec
and
fild
lock
dec
or
or
adc
mov
jg
call
test
xchg
data16
ss
mov
xor
adc
int3
imul
ss
out
ror
icebp
push
popa
push
jl
cmps
dec
mov
xchg
fxch
out
inc
mov
not
xrelease
cmc
bound
push
arpl
add
pop
pop
mov
hlt
sbb
mov
sub
cmps
jbe
mov
push
dec
sbb
loop
add
mov
clc
(bad)
cwde
retf
push
push
inc
popa
adc
jo
adc
test
mov
sti
lods
mov
iret
les
mov
inc
mov
cmp
mov
xchg
scas
mov
sahf
ss
jl
jno
dec
push
push
sub
mov
sar
std
ret
push
in
xchg
sbb
pushf
cmp
cmp
das
mov
outs
into
xlat
push
mov
test
shr
movs
mov
add
inc
ja
pusha
popa
jbe
mov
mov
loopne
test
mov
sbb
sbb
outs
cmp
dec
lahf
loope
in
cld
in
imul
jmp
sbb
sar
retf
retf
jge
or
outs
ja
retf
and
jl
xlat
ds
mov
pop
and
xor
push
pop
mov
test
in
mov
call
pop
cmc
jle
das
scas
mov
pop
lods
cli
mov
fcmovb
icebp
scas
jne
cmp
fwait
adc
popa
stmxcsr
jnp
ja
leave
aad
add
cld
push
add
sub
popf
ins
lahf
ss
mov
add
jbe
and
xor
adc
mov
and
dec
cmc
jb
dec
adc
xor
adc
int3
ins
pop
lods
jnp
fcomp
mov
shl
and
lods
(bad)
in
stos
and
jmp
shl
or
icebp
jge
fucomip
push
nop
iret
cli
scas
shl
adc
pop
jbe
mov
div
lock
sbb
add
stos
scas
test
dec
imul
mov
scas
cmps
mov
pusha
mov
jp
jae
mov
add
icebp
retf
aas
mov
inc
dec
arpl
repnz
imul
test
jbe
(bad)
cmp
jmp
xchg
inc
mov
lds
je
out
dec
xchg
mov
lods
jl
icebp
retf
mov
cs
and
mov
mov
test
push
fwait
xchg
jne
je
xchg
mov
icebp
call
jno
mov
mov
jmp
cmps
add
push
inc
nop
mov
push
stos
repz
stos
and
xchg
jo
add
adc
sbb
pusha
rcl
cmp
inc
inc
cdq
jp
xchg
jae
push
add
push
pop
xor
inc
shl
sbb
jo
mov
add
sar
inc
movs
fadd
loop
int3
adc
adc
stos
(bad)
pop
in
dec
dec
lds
fcmovnu
mov
scas
xor
sub
iret
stos
aad
fisub
xor
mov
dec
sub
sbb
mov
mov
cs
sbb
mov
add
fwait
ret
lock
lods
push
fcom
int3
xor
repnz
push
push
xchg
mov
xchg
inc
or
pop
ror
mov
fucomip
bound
mov
dec
js
inc
fcomp
inc
pop
mov
and
sub
mov
rol
jnp
cmp
mov
(bad)
cmp
dec
sub
adc
in
cli
push
push
mov
mov
xchg
jae
mov
adc
sub
sub
push
loope
lds
ffree
mov
xor
xchg
inc
mov
mov
daa
mov
in
jl
inc
ja
push
call
inc
fistp
lock
dec
loopne
int
fs
push
mov
jecxz
cwde
xlat
das
js
call
loop
mov
fwait
dec
or
push
mov
rcr
cmps
or
popa
call
jecxz
and
loope
stc
cmp
(bad)
push
gs
xchg
dec
sar
enter
inc
mov
loopne
inc
pop
ss
jno
jmp
and
push
std
loope
inc
push
sub
repz
(bad)
pop
cmps
cli
movs
pop
popf
addr16
cmp
inc
sbb
test
int3
mov
jmp
frstor
and
mov
mov
loopne
xchg
push
add
jecxz
jnp
pop
out
mov
or
(bad)
lds
ja
shr
inc
nop
add
adc
add
repz
sub
icebp
pop
shl
sbb
pop
test
or
adc
inc
test
shl
loopne
adc
and
mov
dec
ffreep
or
sar
and
push
inc
mov
or
jnp
out
(bad)
pop
inc
iret
loopne
jmp
mov
les
sbb
popf
loop
mov
ja
ins
repz
stc
pop
pusha
push
fdivr
mov
test
pushf
(bad)
aad
pop
and
jno
sbb
adc
xchg
cmp
xchg
(bad)
or
jmp
ret
test
xchg
call
fs
mov
dec
sub
sar
das
mov
adc
push
dec
jns
cld
mov
ret
sub
es
mov
adc
pop
ds
fst
inc
(bad)
xor
inc
loope
push
inc
pop
add
push
sbb
sub
int3
fs
push
add
jmp
pop
mov
push
repnz
or
jge
out
outs
add
mov
out
movs
adc
xchg
int3
sbb
in
dec
test
out
xor
(bad)
mov
jb
ror
ss
cmp
and
pop
test
mov
les
fld
in
ret
enter
cwde
push
sbb
cmp
push
jl
dec
adc
in
dec
mov
cmps
repnz
jmp
out
dec
div
in
loop
push
lock
popf
icebp
add
push
jne
das
fiadd
dec
or
sbb
int3
pop
mov
cmp
hlt
in
lahf
call
fcmovnbe
jg
sbb
mov
or
dec
sahf
and
shl
cmp
shl
dec
sar
out
or
mov
mov
loope
out
rcl
clc
sub
cld
cmp
jbe
mov
mov
lea
daa
das
aas
pop
mov
pop
inc
test
xchg
movs
push
and
push
outs
and
mov
es
mov
aaa
sub
outs
push
or
call
pop
test
add
adc
movs
je
fadd
or
stc
or
ret
dec
cmp
push
rol
enter
shl
ror
test
xchg
jl
add
mov
pusha
pop
push
lahf
ja
pop
inc
xor
lods
inc
pop
xchg
xchg
cmp
popf
sbb
adc
jbe
jb
es
in
jecxz
pop
xchg
leave
or
retf
faddp
mov
js
int
lock
pusha
push
mov
xchg
jae
out
jecxz
pusha
or
xchg
or
in
cmp
mov
adc
fmul
inc
test
arpl
inc
mov
mov
jae
(bad)
(bad)
xchg
out
dec
imul
out
mov
stc
mov
push
stos
adc
fstp
mov
shl
dec
retf
sbb
cld
jmp
fs
sub
pop
sahf
fistp
mov
rol
out
add
inc
dec
shr
dec
dec
iret
jp
mov
sub
les
xchg
cmps
aad
ret
call
sub
imul
push
push
(bad)
cmps
pop
inc
fist
or
xchg
or
mov
cmp
into
movs
outs
inc
or
jle
pop
mov
fcomp
scas
mov
iret
fdivr
adc
dec
sub
dec
lock
jns
fstp
pop
fadd
test
mov
sub
pop
out
fadd
inc
lock
ror
push
jg
ret
mov
mov
cwde
jo
inc
cmc
data16
push
sti
dec
jb
je
mov
daa
hlt
cs
pop
cs
rcl
and
mov
push
inc
and
xchg
in
lock
into
add
iret
pop
fldenv
jmp
xchg
sub
sti
mov
and
setno
pushf
jbe
fimul
retf
add
pusha
lods
dec
leave
mov
cld
fadd
adc
push
fst
repnz
jo
shr
movs
rcr
sbb
sub
fs
adc
push
add
mov
push
bound
out
test
dec
push
sti
call
movs
loopne
in
and
cdq
pop
push
mov
adc
rcr
or
push
xchg
mov
push
mov
cmc
cmp
xchg
xor
adc
popa
cdq
shl
(bad)
fmul
pop
add
ins
arpl
mov
lods
cmp
fbld
out
jge
nop
iret
mov
pop
cmps
mov
xchg
pop
sub
xchg
inc
push
push
pop
aad
sbb
das
(bad)
push
dec
pusha
cmp
dec
sbb
ja
fsubr
xlat
cs
or
adc
pop
adc
cdq
lahf
cwde
mov
shl
mov
test
sbb
or
les
rcr
ins
ret
cmp
(bad)
in
jmp
retf
frstor
mov
je
int
movs
jno
cmp
lock
xchg
cmp
pop
mov
push
cdq
mov
lahf
sbb
fs
inc
fbstp
inc
mov
mov
cmp
inc
xchg
fist
add
jno
sar
pop
call
das
sar
retf
mov
lods
or
outs
lea
cwde
add
aas
shl
sahf
mov
cmps
ss
mov
pop
out
sbb
fist
mov
jmp
jns
(bad)
mov
pop
mov
inc
imul
cmp
and
popf
mov
out
lods
out
and
(bad)
daa
jno
pop
or
push
pop
mov
ss
aad
jl
inc
adc
fs
pop
cmp
xchg
pop
adc
repnz
(bad)
mov
cmp
push
push
into
rol
add
stos
popf
and
xor
add
adc
icebp
pop
out
push
jecxz
mov
into
out
xlat
out
mov
dec
fndisi(8087
pop
fs
ins
mov
cmps
xlat
addr16
scas
(bad)
inc
xchg
cmc
jg
pop
cwde
sbb
sbb
outs
push
and
sar
push
ins
ins
xor
aad
test
(bad)
mov
shl
jmp
sub
aad
cmc
mov
js
repnz
(bad)
cmp
pop
stos
icebp
xchg
adc
(bad)
mov
xchg
sbb
push
xor
mov
mov
out
mov
cmp
dec
out
scas
pop
ins
(bad)
mov
sbb
push
xchg
into
sbb
stos
ret
cwde
or
mov
sar
and
dec
lock
rcl
dec
ror
xchg
sar
xor
inc
jp
and
les
xchg
iret
pop
adc
xor
shl
pusha
mov
aaa
(bad)
cli
cmps
inc
aaa
xchg
rol
cmp
(bad)
ss
ins
or
mov
outs
popa
sub
jnp
inc
das
dec
ret
sbb
mov
fwait
scas
adc
jmp
mov
adc
repnz
inc
aaa
push
pop
icebp
add
sub
dec
adc
jecxz
mov
int3
(bad)
mov
inc
push
cmp
cmp
mov
adc
adc
sub
rcl
mov
or
ins
rol
arpl
test
sub
mov
aaa
sbb
test
call
fld
pop
mov
pop
dec
sti
sub
push
sbb
mov
retf
mov
les
sub
xchg
push
dec
xchg
sbb
aad
or
imul
dec
inc
imul
and
push
adc
icebp
dec
cmc
int
in
nop
es
rol
jbe
cmp
dec
xlat
sub
je
push
loopne
repz
add
cmp
cmp
in
cwde
adc
scas
xchg
cmc
dec
addr16
inc
ds
jmp
clc
inc
arpl
lock
shl
aas
pushf
int3
outs
cld
dec
aam
add
pop
pop
add
mov
cmp
and
push
test
add
mov
loopne
sub
sti
mov
pop
int
add
in
xchg
mov
sub
cwde
mov
inc
mov
jmp
data16
and
pop
and
inc
test
(bad)
movs
mov
push
xchg
push
jecxz
jne
pushf
int
jecxz
arpl
cmp
pop
cmps
push
add
adc
jg
inc
ins
sub
loopne
scas
(bad)
adc
sub
and
test
sub
addr16
repz
sbb
in
dec
shl
push
in
mov
mov
clc
inc
fst
add
pusha
mov
mov
xchg
cwde
data16
and
jmp
mov
in
xchg
adc
outs
push
lods
and
add
pusha
sub
ret
add
jnp
nop
out
jl
add
idiv
mov
dec
das
push
sbb
(bad)
fstp
mov
imul
mov
xchg
xchg
outs
div
sahf
rol
and
inc
mov
loope
loopne
cmp
pop
stc
jmp
iret
imul
out
push
adc
fdivr
or
movs
cmp
jae
push
mov
cs
pop
test
adc
and
xor
xchg
pop
and
mov
xchg
jns
xchg
nop
aaa
ds
sahf
adc
dec
mov
retf
es
cmps
adc
repnz
jmp
cmc
xchg
nop
scas
std
mov
cld
arpl
xlat
scas
movs
inc
inc
xor
test
ss
mov
sub
rcl
fs
cdq
imul
pop
dec
xor
in
sbb
fcmove
inc
push
sub
test
jb
cmps
xchg
xor
stc
push
or
xchg
xor
and
cmp
fcmovnb
push
iret
and
sub
cdq
jae
jmp
das
retf
cmp
in
adc
aad
test
and
mov
add
xchg
jmp
out
sub
and
jb
shl
fld
push
push
call
stos
loopne
retf
sbb
and
add
xlat
jg
seta
retf
add
jmp
inc
vmread
cmp
add
and
inc
pop
add
mov
adc
pop
jb
dec
xchg
sti
add
pop
push
pop
adc
retf
cmps
or
pop
pop
or
outs
or
jmp
cmp
dec
jno
lea
xchg
jmp
cwde
add
cmp
dec
loope
fimul
imul
jo
and
mov
dec
data16
sbb
mov
and
test
sar
push
lea
cmp
jnp
mov
push
test
dec
add
and
and
or
mov
mov
and
and
xlat
ss
imul
jbe
add
call
mov
jmp
repnz
inc
jmp
cmovg
pop
(bad)
(bad)
pop
scas
mov
jmp
sub
mov
jne
ins
pop
test
lahf
or
(bad)
bound
daa
movs
addr16
and
inc
nop
fwait
popa
and
or
mov
inc
mov
dec
mov
cli
mov
data16
dec
(bad)
cmc
scas
pop
and
pop
push
jbe
jo
and
fstp
sahf
neg
repz
popf
nop
and
add
or
loope
shr
xlat
fstp
and
pop
xchg
sub
cwde
add
pop
cmc
jmp
mov
and
jge
movs
repz
pop
xchg
jnp
xchg
add
adc
rol
cwde
xlat
xchg
ret
mov
push
dec
clc
add
mov
push
shl
fldenv
pop
imul
in
adc
out
mov
popa
cwde
cli
jl
shl
pop
jae
aam
lea
cmp
cdq
aam
call
mov
pop
je
dec
mov
dec
mov
popf
lahf
jge
in
retf
fsubr
jge
test
or
jo
test
inc
aad
inc
mov
mov
addr16
outs
mov
and
addr16
or
push
sahf
pop
out
push
mov
sub
add
ins
push
hlt
cmp
cmp
sub
pop
ins
cmc
dec
mov
pop
xor
xor
add
mov
mov
imul
xor
or
sub
pusha
fisub
es
rol
xchg
sub
xor
sbb
or
xor
test
and
xor
xchg
dec
or
out
xor
sub
and
fucomi
out
pop
jmp
jmp
push
stos
outs
push
hlt
pushf
outs
dec
aam
push
inc
mov
aas
scas
sbb
dec
mov
xor
gs
sbb
jne
shl
mov
dec
out
add
cmc
sub
mov
pusha
data16
mov
ss
inc
xor
add
sbb
ins
push
(bad)
mov
pop
ss
in
ret
jmp
mov
pop
mov
jb
xchg
neg
xor
push
pop
adc
xor
enter
movs
adc
cmp
into
cmp
sbb
lock
int3
jge
ficomp
jae
int
fnstenv
jbe
xchg
cmp
inc
sbb
lahf
mov
push
dec
outs
add
outs
adc
fstp
mov
call
retf
sub
stc
popf
or
inc
sub
cmp
sbb
ins
cli
ss
ror
add
icebp
test
imul
aam
mov
inc
ins
mov
dec
(bad)
mov
and
or
sar
test
cwde
iret
mov
hlt
xor
pop
push
cmp
cmc
fwait
rcl
dec
test
mov
iret
rcr
inc
(bad)
js
movs
push
push
cmps
xor
pop
es
cmp
dec
mov
and
adc
mov
lahf
mov
dec
pop
inc
or
lods
pop
loop
pop
xchg
or
pop
mov
mov
and
and
adc
and
(bad)
xchg
xlat
xor
mov
xchg
or
int
shr
not
dec
pop
sbb
pushf
cmps
loop
and
mov
pusha
mov
call
sub
xlat
sar
add
fs
clc
mov
mov
fiadd
pop
fild
adc
push
nop
xchg
inc
sub
retf
xchg
lds
sbb
inc
cmp
mov
mov
sub
push
dec
das
inc
mov
mov
sar
mov
in
mov
jle
cmp
mov
jg
pop
inc
jl
(bad)
push
imul
cs
dec
repz
push
lods
cmp
jae
mov
push
sbb
dec
mov
or
xor
jns
push
outs
add
mov
cmp
xchg
xor
in
mov
fiadd
jne
jo
mov
(bad)
and
cmp
int3
dec
ret
cdq
test
fnsave
ror
and
or
cld
add
cld
loop
cmp
imul
jp
xchg
in
and
ret
repnz
push
test
lock
pushf
dec
mov
push
and
ror
sbb
test
adc
jmp
mov
inc
ds
cdq
lds
add
mov
pushf
cmps
js
xchg
lds
mov
pop
or
mov
or
cmc
addr16
xchg
ret
mov
aad
xor
sub
mov
aas
fstp
sub
(bad)
ds
sub
icebp
hlt
mov
mov
pop
cwde
cmps
push
rol
add
pusha
lds
or
data16
add
xor
and
hlt
cmps
clc
push
repz
dec
shl
fiadd
loope
call
inc
jge
xor
test
mov
jecxz
pop
js
mov
jbe
adc
fbld
pushf
and
adc
cmp
mov
or
push
inc
mov
lahf
pop
dec
(bad)
mov
jle
mov
imul
ja
inc
ret
xchg
add
jne
fisub
add
mov
jp
or
mov
jnp
inc
sti
pop
gs
fisubr
pusha
mov
jl
das
xchg
mov
repz
mov
pop
stc
or
or
xlat
aas
add
jo
rcr
les
mov
mov
loope
mov
mov
push
xchg
pushf
cmps
pushf
test
cmp
jge
ror
push
test
xor
pop
mov
dec
ja
popa
mov
std
sub
ret
adc
ins
sbb
fiadd
and
movs
ror
sub
cwde
inc
movs
xor
mov
retf
mov
inc
out
cdq
mov
popf
jmp
aam
add
mov
gs
add
or
push
or
pop
pushf
rcl
pop
jae
and
mov
pop
inc
fnstenv
and
dec
lds
repz
sbb
jae
xor
fidiv
xchg
push
call
sar
pop
bound
lods
sti
adc
ss
outs
inc
and
sahf
js
clc
sub
mov
ret
lods
mov
cmps
inc
lea
ins
loope
xchg
stos
pusha
adc
(bad)
sbb
enter
xchg
jge
cmp
xor
mov
sti
fisttp
cmps
cmp
adc
call
test
dec
mov
pop
jo
out
pop
mov
xchg
loopne
aam
mov
cmps
mov
sbb
out
dec
add
xchg
pop
pop
mov
stc
ins
scas
xor
push
retf
or
dec
int
mov
shl
shl
and
mov
pop
(bad)
mov
or
and
aad
jo
sbb
popf
sub
arpl
out
add
lods
or
rcl
adc
cwde
or
adc
push
retf
dec
cs
stc
sub
mov
aad
pop
add
pop
pusha
or
pop
rol
and
retf
sub
xchg
adc
mov
iret
inc
lods
movs
add
int3
mov
inc
cmp
mov
or
jno
cmp
xlat
inc
popa
cmc
icebp
int3
cmps
std
leave
jmp
dec
repnz
(bad)
shr
frstpm(287
out
stc
add
push
mov
shr
iret
push
ret
out
jl
jecxz
es
cmps
cmp
lahf
push
fsub
cld
inc
jo
stos
mov
dec
dec
cmps
jp
cmp
cmp
sbb
dec
lods
sahf
enter
sub
int
test
jnp
mov
add
mov
sub
xor
xchg
clc
cmps
cmps
leave
shl
in
mov
clc
mov
or
jo
ja
pusha
jne
xchg
dec
(bad)
paddsb
fisttp
dec
xchg
dec
mov
fwait
jo
inc
jb
mov
lds
ficomp
jl
push
push
jp
cmps
xchg
xor
or
mov
retf
in
xchg
cld
xor
xor
jo
jmp
imul
inc
mov
fwait
jno
jmp
rcr
mov
std
hlt
xchg
pop
and
cmc
xchg
rol
xchg
psllq
jmp
xor
sbb
and
nop
jns
or
mov
imul
lea
std
sbb
inc
xchg
inc
loop
int
push
or
cmp
shl
call
jnp
icebp
adc
mov
sub
mov
test
scas
mov
xchg
clc
mov
sub
loopne
and
jg
lods
inc
std
pop
mov
lods
ret
mov
test
mov
push
dec
jecxz
sbb
arpl
dec
push
mov
pop
das
in
lods
std
lods
fcom
and
repnz
inc
movs
cdq
xor
ror
dec
lahf
sar
cld
in
div
sub
and
mov
test
cmc
and
sar
retf
sub
movs
inc
mov
icebp
sbb
ins
xor
cdq
adc
dec
jmp
ss
(bad)
push
icebp
adc
sbb
mov
jmp
mov
jp
add
mov
iret
int
mov
cdq
mov
add
sbb
jne
cmp
inc
inc
movs
dec
push
dec
xchg
adc
sub
mov
jne
shl
mov
cmp
inc
lock
rcl
dec
xchg
repz
fwait
enter
pop
mov
sar
jl
ins
stos
ror
push
cmp
out
xlat
cld
jmp
pop
jmp
xor
cmps
sahf
xor
test
sahf
mov
mov
dec
scas
div
in
xchg
jo
retf
or
aam
dec
daa
mov
out
nop
icebp
test
in
mov
adc
ja
jo
mov
repnz
(bad)
mov
sub
push
inc
mov
lods
mov
sub
add
jbe
xlat
test
cmp
ret
fiadd
enter
xor
repz
mov
jo
and
nop
sti
or
jbe
or
mov
push
int
retf
push
push
fidivr
xchg
cmovp
mov
or
ins
cmp
mov
mov
mov
ss
mov
fucomip
fild
xchg
jg
outs
push
xchg
aaa
mov
lods
mov
sub
pop
aas
(bad)
sar
pop
out
jmp
sbb
add
or
test
add
jp
mov
out
loopne
lods
xor
pop
jecxz
sub
in
cmp
fcom
push
jmp
hlt
cmps
push
xchg
mov
xchg
mov
je
mov
nop
test
in
cmps
test
mov
cmp
pop
adc
mov
std
movs
xor
daa
test
(bad)
jp
sub
jg
stos
pop
shl
pop
sub
iret
cli
xor
shl
cmp
imul
test
xor
adc
cwde
leave
pop
aam
cwde
aam
popa
rcl
jb
test
or
sar
sahf
loope
mov
mov
dec
pushf
cmc
xor
xchg
adc
je
push
shl
call
scas
mov
add
stc
push
mov
loop
jbe
xor
add
outs
les
pop
daa
icebp
enter
dec
and
jge
inc
cmp
mov
(bad)
out
(bad)
xchg
push
sbb
sbb
mov
sub
fnstsw
cmp
jge
dec
jbe
popf
neg
xchg
sbb
xor
movs
pushf
sar
mov
lock
call
and
in
icebp
fidiv
mov
ret
daa
jmp
add
xor
pop
xchg
xchg
dec
pop
push
add
stos
rcr
mov
cld
loopne
dec
jmp
mov
push
mov
and
inc
repz
jns
dec
jns
jmp
add
bound
test
push
and
(bad)
pusha
adc
mov
push
adc
pop
rcr
and
jmp
xchg
mov
iret
mov
push
cmp
lock
inc
jns
(bad)
loop
ins
pop
pop
or
aam
mov
sub
daa
add
stos
clc
cmp
or
add
push
or
out
pop
out
inc
mov
js
movs
inc
jne
(bad)
xlat
jecxz
aaa
jnp
pop
inc
icebp
lods
stos
sub
sbb
fs
mov
add
dec
(bad)
or
out
fisttp
dec
(bad)
sahf
mov
(bad)
pop
pop
call
xor
cli
pop
add
sub
in
jns
call
add
push
pop
jle
fdivr
shr
jg
mov
out
fbstp
sub
sar
jmp
mov
adc
or
fs
adc
cmps
icebp
dec
test
or
mul
dec
dec
call
sub
mov
mov
gs
aam
xchg
and
mov
retf
mov
sub
ds
xor
jmp
dec
outs
stos
int
je
in
mov
lock
pop
cmp
sbb
scas
call
xor
dec
nop
push
ror
jnp
pop
fcom
xchg
sar
test
sbb
cmps
mov
loope
xchg
and
pop
rcr
mov
dec
or
pop
lahf
mov
push
or
pushf
jge
ins
pop
jno
enter
or
xchg
ins
das
xchg
fidivr
xchg
jle
cli
push
sub
nop
and
clc
xchg
loope
or
bound
ret
inc
xchg
pop
push
jp
dec
add
fadd
sbb
dec
ins
dec
in
adc
repz
cld
dec
loope
inc
mov
enter
dec
mov
(bad)
push
lock
add
and
pop
loope
cmp
shl
stos
mov
cmc
sar
fwait
push
mov
nop
xchg
movs
mov
clc
sbb
xchg
push
js
pop
xchg
test
mov
aas
pop
std
outs
inc
cmps
iret
retf
ds
sub
mov
gs
cs
and
jnp
lods
nop
and
mov
jge
or
push
loopne
int
add
add
sti
sbb
div
fdivrp
mov
fisubr
shr
lock
push
sub
mul
inc
push
mov
repz
sbb
mov
xchg
cmp
dec
mov
repz
mov
mov
in
adc
js
push
scas
xor
in
jo
cmp
inc
push
pop
cmc
add
add
into
out
aam
fmul
addr16
in
aam
pop
shl
push
adc
scas
test
icebp
xor
pusha
dec
mov
pop
jne
ret
(bad)
in
test
sub
push
jmp
outs
mov
sar
mov
push
inc
jb
js
ja
sbb
in
stos
js
retf
push
mul
fwait
xor
mov
ja
or
dec
push
push
sbb
sub
pop
jae
sti
mov
mov
inc
iret
in
call
cmp
out
pop
unpcklps
mov
mov
mov
dec
sbb
test
push
or
pop
xchg
enter
cmps
rol
sahf
dec
lock
or
mov
jcxz
mov
mov
mov
adc
and
mov
retf
jg
bound
mov
jmp
mov
sbb
xchg
cwde
mov
cmp
(bad)
dec
mov
mov
mov
sti
xchg
dec
cmp
leave
scas
or
es
adc
ins
mov
into
loope
sub
xor
mov
inc
test
mov
ins
xchg
jp
sbb
sub
push
neg
lds
fst
and
mov
push
xor
test
call
pop
mov
ins
retf
xchg
pop
sub
jo
jmp
les
xchg
das
xchg
(bad)
and
scas
jmp
jmp
stos
gs
jno
gs
mov
adc
scas
sub
and
xor
test
neg
stos
pusha
popa
jmp
pop
xchg
les
push
gs
data16
retf
addps
xchg
paddq
test
retf
jne
mov
jmp
in
popf
adc
cld
iret
xchg
xor
sub
add
push
inc
jle
push
push
int
popa
and
aas
imul
fwait
iret
into
hlt
sti
outs
adc
jnp
lods
mov
and
stos
(bad)
add
pop
ja
aam
dec
and
movs
adc
cmps
jmp
in
sbb
mov
pop
pop
inc
dec
arpl
inc
loopne
mov
adc
idiv
mov
mov
ja
jp
rcl
pop
(bad)
out
xchg
popf
or
push
add
lock
jge
and
mov
jle
lods
jb
in
sub
loop
lahf
cmps
pop
movs
push
adc
cmp
add
push
sar
inc
inc
inc
pop
add
fsubp
cmp
pop
or
in
sbb
jne
neg
fist
movs
and
ds
nop
arpl
cmp
dec
cld
mov
or
and
es
outs
aam
pop
pusha
cld
and
clc
cmp
inc
neg
mov
shr
mov
mov
rcr
or
jg
or
cli
push
xor
js
sbb
jge
mov
leave
shl
dec
aam
jl
pop
cdq
fild
push
xor
jmp
jb
das
enter
cmps
or
pop
xchg
repz
(bad)
ss
xor
cmp
or
jb
hlt
sbb
cs
cmp
jnp
push
das
out
cmp
ja
inc
and
dec
jmp
pop
neg
movs
inc
outs
sbb
out
and
imul
dec
jmp
push
arpl
movs
jmp
mov
sets
and
push
outs
inc
(bad)
sub
pop
sar
or
mov
sub
aaa
xor
xchg
fild
mov
jno
inc
mov
adc
sub
scas
jae
iret
fcmovnbe
sbb
jne
or
lahf
or
push
inc
loope
test
hlt
in
stos
loope
scas
inc
dec
jg
rcr
adc
imul
call
pusha
repnz
push
std
push
dec
retf
(bad)
push
inc
cmp
push
xchg
ja
rol
or
dec
hlt
cmp
or
daa
jp
sbb
test
cmps
push
ret
sub
sti
sbb
dec
mov
cmp
xchg
jecxz
xor
mov
push
fisub
test
imul
or
sbb
movs
lahf
mov
shr
outs
pop
inc
mov
aas
sub
(bad)
in
sar
ins
sub
(bad)
stc
arpl
jno
stos
sub
nop
adc
(bad)
lea
lea
ds
mov
inc
ins
stos
aas
dec
repnz
adc
rcr
imul
or
data16
icebp
jo
xchg
xchg
pop
dec
(bad)
bound
imul
sbb
leave
jno
xor
rcr
inc
mov
push
out
das
clc
imul
adc
pop
or
push
sub
ret
fmul
dec
mov
data16
push
or
mov
mov
push
jb
je
sub
and
mov
les
inc
add
xchg
sub
mov
jnp
mov
mov
fwait
in
mov
push
lahf
mov
fisubr
xchg
lds
dec
fidiv
or
mov
call
mov
dec
test
popf
and
fistp
xor
add
mov
adc
test
ret
rol
jmp
pop
xchg
or
push
inc
cmp
popf
test
adc
(bad)
fsubp
sbb
nop
adc
mov
std
add
loop
cdq
aas
mov
or
stc
adc
dec
sbb
ds
addr16
mov
cmc
hlt
sbb
xchg
inc
and
pop
popf
test
sbb
cmp
sub
sti
(bad)
sbb
enter
call
jo
jae
dec
mov
and
pop
outs
mov
xchg
popf
add
and
hlt
imul
mov
(bad)
cdq
stc
mov
xor
xchg
pop
in
pop
dec
lods
add
adc
dec
mov
cmp
mov
sbb
outs
xor
adc
and
cmp
ins
inc
mov
mov
out
xchg
out
xor
cmc
adc
push
cmp
adc
mov
xchg
jecxz
lahf
jnp
cmp
xchg
mov
sbb
inc
lea
inc
std
xchg
int3
sub
shl
push
scas
sahf
xchg
lds
or
test
push
sbb
fmul
dec
jmp
fs
retf
fdiv
and
mov
inc
jne
repnz
pop
add
jg
pop
mov
inc
pop
xchg
outs
leave
push
cdq
or
cmp
mov
loopne
jae
jne
pop
clc
push
addr16
out
sub
rcl
mov
mov
and
jp
sti
add
adc
sbb
ret
out
mov
jmp
pop
imul
jp
out
cmp
ss
aaa
jl
aam
es
retf
and
retf
(bad)
fisttp
test
mov
imul
mov
jnp
dec
or
shl
mov
int
leave
lds
inc
out
adc
shr
mov
int3
inc
or
adc
into
jl
mov
push
push
test
push
fisttp
scas
in
enter
cwde
or
pop
int3
das
and
scas
ss
inc
cdq
pop
push
in
jnp
scas
loope
mov
outs
dec
out
mul
out
jg
int3
ja
pop
add
enter
fist
jae
aas
mov
cld
cs
mov
outs
pop
xchg
dec
fcmovne
rol
dec
pop
jb
ja
repz
or
outs
dec
test
xchg
dec
adc
stc
push
pop
test
pushf
or
loop
ja
daa
mov
dec
sub
adc
(bad)
cmp
call
gs
mov
(bad)
or
adc
nop
or
mov
jbe
or
std
jg
dec
and
in
scas
adc
pop
mov
jbe
dec
pop
inc
movzx
out
in
cmp
idiv
lods
add
sub
xchg
inc
and
test
sub
fidivr
add
stc
mov
gs
dec
sub
cli
cmc
adc
cmp
test
sbb
jecxz
xor
stc
add
mov
shl
push
inc
push
repz
or
je
inc
pop
or
mov
inc
les
mov
fistp
leave
int3
dec
outs
or
inc
inc
mov
int
popa
cwde
sub
test
inc
inc
push
pop
cmp
jg
std
repz
outs
mov
stc
shr
aaa
je
in
xor
int
ret
iret
ret
ret
or
lea
mov
test
mov
clc
icebp
push
enter
jo
or
mov
in
ja
fcmovnb
sub
ja
push
fs
jo
dec
cmp
or
push
imul
outs
mov
pop
js
arpl
mov
push
push
shl
sbb
aaa
sbb
adc
pop
std
cmp
jmp
fimul
pop
mov
xchg
(bad)
movs
push
cmp
aas
jmp
dec
int3
mov
arpl
mov
jae
pop
(bad)
lods
psubsw
mov
xor
in
cs
sbb
mov
aam
or
ins
and
aad
lea
sbb
mov
les
out
jnp
sbb
outs
jp
(bad)
iret
mov
ret
bound
cmp
mov
or
pop
int
sahf
cs
cmc
popa
cli
mov
cmp
jbe
loopne
stc
xor
push
cwde
jecxz
gs
cmp
imul
std
aam
mov
add
test
aaa
into
xor
sbb
mov
cmps
pop
outs
loop
push
stc
popf
call
and
arpl
xchg
sbb
and
dec
mov
jb
add
sub
js
fild
out
sahf
dec
xchg
out
push
lahf
add
mov
sub
cmps
jl
adc
ret
(bad)
icebp
xor
lock
dec
jmp
imul
mov
sub
xchg
mov
in
mov
mov
pop
cmp
in
push
pop
loope
stos
push
cld
inc
inc
mov
mov
in
sub
(bad)
inc
lock
cmp
pop
inc
(bad)
pop
rol
dec
pop
inc
fs
pop
cdq
mov
les
sbb
mov
cmp
ds
data16
bound
add
sub
jg
(bad)
adc
test
mov
push
out
mov
ins
jo
mov
adc
or
fild
pop
sbb
je
aam
stc
sbb
sbb
fldl2t
lods
in
and
scas
aam
push
movs
sbb
push
jb
fimul
ds
add
lds
or
imul
enter
push
dec
jo
pop
pop
xchg
jl
popa
rol
hlt
jnp
loop
cdq
std
lods
fstp
daa
cmp
div
std
or
or
pusha
sub
outs
dec
cmp
outs
stos
js
imul
cli
push
mov
ja
mov
mov
arpl
es
mov
push
xchg
inc
inc
ds
or
shr
retf
loop
dec
cmps
data16
pop
daa
addr16
fstp
add
out
dec
inc
xchg
in
loop
lods
es
mov
sub
sar
icebp
popa
cmp
je
pop
dec
adc
push
inc
jo
jecxz
mov
xor
xor
cmp
cld
jmp
pop
daa
repnz
adc
(bad)
mov
(bad)
stos
scas
mov
inc
fiadd
mov
and
aas
popw
scas
sub
mov
push
shr
out
jns
push
mov
push
test
xchg
push
pop
(bad)
out
pushf
jg
daa
repnz
pop
dec
jno
xchg
jae
ss
inc
push
daa
iret
repz
mov
in
das
movs
xor
cmp
jno
cmp
adc
add
jnp
jnp
addr16
adc
adc
iret
sub
pop
shr
cmc
bound
pop
inc
(bad)
add
and
push
push
mov
xchg
cmp
sbb
or
or
adc
jb
ja
fsub
rol
sbb
sub
aam
push
jp
mov
cwde
xchg
addr16
popa
fcmovnbe
jne
test
add
xchg
aas
jg
lods
out
inc
jmp
sbb
(bad)
adc
fwait
jmp
add
push
dec
jnp
jne
cmc
scas
mov
scas
into
mov
int3
es
mov
xchg
mov
cmp
lds
sti
jns
test
xchg
out
mov
bound
pop
pop
xchg
mov
sub
lea
jae
or
jle
sbb
into
movs
bound
inc
jne
pop
jb
pusha
rcr
mov
stos
ins
sub
rol
mov
outs
mov
div
cmps
imul
inc
test
pop
and
mov
cs
aaa
aaa
in
sbb
pop
dec
push
out
jae
push
test
cld
or
push
mov
fcom
cdq
sub
or
lds
jg
push
push
add
cmc
cmps
xor
xlat
inc
cld
xor
hlt
ins
xchg
loop
pop
fmul
push
ja
fwait
and
(bad)
movlps
cmp
mov
popf
or
cwde
sbb
sub
in
jbe
or
test
test
adc
loope
test
mov
leave
sbb
push
shl
push
mov
std
xor
and
xchg
mov
or
cwde
int
sub
jo
outs
sub
sub
adc
retf
sub
mov
sub
sbb
imul
es
hlt
sbb
xor
movs
ins
into
(bad)
xchg
mov
stos
cdq
mov
add
call
mov
push
mov
cmp
xor
add
mov
xchg
push
call
sbb
aam
xor
pop
mov
and
stos
push
repz
sub
sti
lods
xor
push
pop
pop
push
adc
bound
popa
and
outs
push
push
xlat
xchg
mov
lds
and
mov
sub
data16
xchg
test
imul
fwait
mov
push
aad
aas
cmp
enter
ins
xchg
push
outs
enter
mov
hlt
add
rol
out
xor
jae
xchg
in
neg
sub
ret
add
or
setnp
mov
adc
sbb
xor
movs
mov
gs
cmps
in
push
push
nop
sbb
add
push
cmp
sub
lods
(bad)
outs
sbb
or
adc
lds
mov
imul
sahf
rcr
jbe
repz
adc
test
aam
and
frstor
fidiv
(bad)
jmp
les
inc
fistp
inc
xchg
lahf
mov
push
test
retf
mov
or
pop
movs
adc
jne
popa
cmp
imul
les
ja
add
int3
ret
fs
xchg
sbb
dec
cmc
push
xchg
jns
jmp
movs
xchg
pop
nop
fwait
in
sub
push
daa
stc
sbb
mov
mov
mov
aas
fs
mov
pop
push
js
shr
adc
ret
iret
jae
cmp
daa
cmps
or
std
inc
or
ret
movs
mov
das
jae
popa
shl
rcl
mov
iret
inc
mov
mov
imul
adc
sbb
inc
ja
push
out
out
test
dec
sti
adc
test
iretw
call
repz
ins
stc
imul
jb
das
ja
sahf
push
push
repz
and
sbb
mov
arpl
sub
pop
pop
test
and
leave
mov
pop
mov
fiadd
push
lods
sub
jecxz
out
cmp
pop
mov
mov
shl
mov
out
add
into
addr16
or
aad
xchg
pop
push
mov
mov
cs
adc
ja
psrlq
or
inc
xor
loop
out
xor
add
jmp
daa
cs
mov
mov
jb
mov
cmps
xlat
in
xchg
add
je
fst
ins
push
outs
fild
cwde
shr
dec
or
or
test
push
push
int3
js
and
stc
jb
mov
(bad)
popf
push
iret
jmp
add
inc
cmp
repz
xchg
test
ret
sub
pop
jns
and
bnd
pop
inc
aad
cs
xor
pop
or
mov
pop
jo
adc
xlat
nop
dec
cmp
ds
and
fsin
out
jo
out
fidiv
ss
xchg
lds
dec
mov
or
test
scas
scas
sbb
pop
adc
(bad)
loopne
push
mov
xchg
xchg
push
pusha
outs
in
in
test
push
sahf
loop
mov
pop
add
movs
aas
aam
gs
fwait
pop
test
je
adc
fwait
cmp
ins
pop
adc
mov
xor
fmul
leave
ja
jae
data16
call
sbb
fwait
jae
fneni(8087
imul
in
jne
aas
dec
sbb
lahf
pop
jno
push
(bad)
push
loopne
mov
xchg
into
and
sbb
ins
not
sbb
jge
pop
lahf
pop
inc
in
push
or
aas
add
shl
bound
sub
(bad)
inc
in
jl
jbe
ror
outs
fisttp
clc
aas
or
fs
pop
adc
and
mov
je
ss
test
mov
gs
clc
add
inc
(bad)
clc
retf
add
enter
jp
call
into
xchg
aaa
ror
ins
out
repnz
or
aas
xchg
popf
lahf
in
mov
cwde
call
pop
inc
pop
sub
xchg
add
inc
fadd
in
stos
fwait
or
and
in
enter
sbb
(bad)
mov
outs
mov
mov
mov
jg
shl
mov
icebp
xor
hlt
jmp
jmp
sbb
pop
fs
ror
and
fadd
inc
xor
adc
es
mov
add
daa
hlt
pushf
ss
dec
sub
stos
nop
jne
xor
lds
sub
jge
or
mov
mov
stc
ror
push
push
cld
addr16
in
xchg
ins
inc
pop
inc
cli
ds
out
test
or
cmp
fcomip
or
pop
addr16
nop
shl
add
fs
stos
popf
and
xchg
sahf
cmp
mov
imul
and
fs
inc
loop
aam
arpl
inc
and
push
aad
addr16
ins
and
pop
mov
mov
punpckldq
ret
sbb
sub
pop
das
push
fistp
cwde
shr
mov
or
sbb
in
and
jae
inc
sub
inc
sub
js
add
mov
add
(bad)
mov
cmp
add
dec
dec
lods
push
and
loope
mov
arpl
jo
push
and
fwait
cs
mov
(bad)
push
inc
cs
sub
pop
push
sbb
xchg
call
in
mov
xor
nop
sbb
sub
out
or
popa
push
pop
in
cwde
cli
or
push
pushf
fwait
mov
(bad)
(bad)
push
jmp
cmp
mov
or
mov
xor
inc
add
add
jge
test
(bad)
arpl
adc
in
mov
iret
shl
push
adc
addr16
or
ins
aaa
std
xchg
pop
out
mov
fstp
or
xchg
out
cmp
js
je
out
(bad)
ja
jb
call
(bad)
cwde
add
mov
jae
stc
cld
shl
clc
pop
push
inc
mov
jl
mov
stos
scas
in
jg
push
adc
add
ins
das
(bad)
push
adc
ja
jge
or
xor
outs
(bad)
mov
jle
fild
sub
leave
or
movs
and
in
inc
jmp
fcomp
int3
ret
mov
or
cmp
inc
mov
data16
dec
shl
mov
ins
xchg
int
cmp
cmps
rol
icebp
sbb
jo
dec
inc
imul
retf
ds
cmps
or
cmp
loope
call
imul
adc
fild
aad
call
jp
sub
mov
daa
icebp
jae
test
test
pop
or
in
xor
or
pop
fisub
adc
ror
movs
pop
stos
and
ss
div
mov
jp
inc
test
aad
mov
jno
call
cmps
cmp
or
push
adc
fsub
sub
addr16
movs
je
ins
sub
scas
sbb
push
inc
push
push
cs
inc
ds
jns
leave
mov
outs
scas
fbstp
lahf
les
push
(bad)
fmul
arpl
mov
fisttp
mov
shl
stos
sbb
test
and
std
add
push
push
aad
clc
add
repz
dec
and
push
xorps
sar
cmp
loopne
aam
mov
or
push
xchg
(bad)
fwait
leave
into
mov
dec
mov
popf
dec
test
jmp
jl
movs
sbb
(bad)
in
fld
in
and
sub
or
js
daa
shl
shl
in
dec
pusha
repnz
mov
add
mov
hlt
fidivr
dec
scas
mov
jmp
(bad)
sti
xchg
in
aas
mov
test
fst
xor
xchg
push
dec
xor
rcr
mov
or
stos
int
pop
pop
push
fld
push
jne
addr16
jle
mov
sub
mov
mov
pop
jecxz
mov
scas
xchg
cmps
cdq
aas
sbb
cmp
popf
lea
lds
outs
nop
sbb
in
shr
fs
mov
sub
pop
loop
or
dec
movs
(bad)
inc
mov
adc
jle
popf
mov
pusha
repnz
movs
cdq
je
(bad)
std
pop
push
scas
sbb
and
xor
call
fisttp
sar
addr16
stos
in
jb
ror
sbb
rcr
push
jmp
mov
xchg
adc
in
mov
inc
push
test
sbb
js
and
mov
push
adc
xor
adc
in
and
mov
aaa
fbstp
pop
inc
in
lock
std
sub
xchg
add
mov
mov
mov
mov
sub
popf
mov
idiv
push
out
aam
add
sbb
add
pop
and
jae
jns
(bad)
sbb
test
bound
fst
dec
or
ret
xor
push
or
dec
pop
pushf
ins
jb
stos
cmps
mov
test
xor
and
cmp
out
xor
daa
out
ret
pop
mov
dec
shr
pop
sub
aas
cmps
sbb
jmp
scas
push
leave
xchg
mov
popa
xor
push
cdq
aaa
(bad)
fisub
sub
inc
and
pushf
retf
sbb
enter
and
mov
data16
xchg
and
xchg
xchg
push
cmp
(bad)
stos
mov
add
ror
dec
inc
cmps
push
mov
ins
je
cmp
fs
sub
dec
add
aam
mov
sub
push
ret
pop
pop
xor
jl
lock
add
nop
ja
in
add
xchg
int
fsub
(bad)
in
xor
jno
pop
sbb
out
cmp
pop
jo
adc
push
xchg
fs
xor
shl
popf
jno
sbb
mov
in
cli
jnp
xchg
jmp
(bad)
in
mov
mov
push
cmp
push
xchg
in
div
push
and
jl
jg
pop
es
js
push
adc
dec
sub
sub
mov
xchg
call
xchg
xor
into
repnz
pop
mov
mov
inc
add
in
push
loope
and
push
js
repnz
test
inc
pop
cmp
dec
jbe
or
jbe
cmp
pop
aaa
ret
pop
mov
daa
xchg
dec
dec
aas
fidiv
cmp
je
imul
jns
xchg
mov
mov
xchg
fdivr
jg
cmp
sub
and
int
sub
pop
and
add
inc
lock
mov
iret
dec
cli
call
mov
push
aam
pop
call
jmp
popa
fldenv
xor
fs
call
pop
retf
add
pop
bound
adc
icebp
cs
or
push
dec
pushf
lods
loope
mov
cdq
mov
(bad)
rol
or
xor
jl
(bad)
xchg
add
jge
pop
push
or
push
sar
jg
inc
mov
pop
mov
jo
xchg
mov
xor
lods
mov
or
mov
xor
outs
sub
std
and
or
adc
in
les
es
mov
rcr
data16
and
push
pop
lods
les
inc
and
nop
jb
jns
bound
mov
or
aad
pushf
mov
add
inc
dec
or
pop
inc
mov
div
gs
in
pop
cld
ret
mov
mov
dec
inc
aad
adc
stc
aaa
mov
pop
(bad)
data16
icebp
ret
imul
hlt
sub
cli
lods
call
bound
call
ins
fs
inc
sahf
cld
cdq
pop
(bad)
arpl
pop
mov
xchg
lds
lock
aad
xchg
cmp
in
mov
pop
outs
mov
int
out
dec
sub
int3
loop
out
dec
or
jbe
sbb
add
fisub
jb
test
ret
cld
stos
xor
mov
adc
cmp
push
leave
cmps
dec
dec
jns
dec
pushf
cmps
xor
(bad)
lods
mov
or
mov
cmps
cmps
dec
cmps
ja
and
in
dec
mov
fimul
out
ss
aaa
sub
and
inc
pop
test
outs
popf
xchg
fcomp
inc
setge
sbb
hlt
xor
inc
cdq
pop
and
movs
sub
faddp
into
(bad)
lahf
loop
cld
das
and
jnp
pop
cmps
pop
fdiv
push
inc
ss
in
and
aaa
les
mov
test
iret
scas
push
jbe
js
test
mov
xor
fisub
jo
(bad)
and
sub
ins
and
addr16
iret
psrad
call
mov
add
adc
adc
pop
rol
pop
mov
jb
or
nop
jge
aad
push
jno
and
jg
sbb
xchg
push
pop
dec
outs
js
mov
push
mov
adc
inc
sbb
mov
iret
arpl
sbb
jns
add
out
sbb
push
xor
cmp
enter
outs
cld
into
xlat
xchg
bnd
push
bound
out
mov
mov
xchg
stos
movs
xor
adc
test
or
and
push
hlt
scas
and
and
dec
or
inc
xchg
sub
xchg
or
and
popa
retf
arpl
adc
loop
lds
(bad)
cld
cmp
nop
loop
pop
popa
mov
hlt
xchg
enter
mov
leave
lahf
add
dec
arpl
jmp
bound
sbb
pop
jbe
mov
icebp
shl
fs
call
mov
push
sbb
nop
xor
xor
or
out
sub
push
cmp
cwde
mov
add
adc
out
lds
pop
movs
jno
mov
mov
mov
ds
leave
clc
shl
dec
and
out
out
and
cmp
cmp
shr
mov
inc
jge
mov
cmp
xchg
cwde
adc
fs
loop
push
test
xchg
xchg
xchg
xchg
mov
inc
cwde
inc
sub
(bad)
jno
push
xchg
or
out
xor
les
pop
jge
cli
jo
xlat
xchg
and
xchg
lods
test
adc
add
lock
fmul
repnz
fistp
repnz
pop
js
shl
into
xor
loop
sbb
test
ret
sahf
(bad)
mov
loopne
pushf
dec
je
adc
sub
mov
shr
movs
std
arpl
mov
push
push
mov
pop
lods
pop
loope
xchg
or
push
loope
fist
hlt
mov
mov
pop
inc
sbb
mov
push
cmp
loop
call
cld
(bad)
(bad)
fsub
jo
sbb
adc
and
mov
dec
xor
jl
mov
retf
mov
pop
imul
stos
xchg
daa
sti
and
cmp
(bad)
jae
sbb
stos
or
test
jl
test
jne
mov
mov
dec
mov
mov
push
lahf
mov
cdq
pop
rol
jno
jg
ss
cmps
push
inc
or
scas
mov
icebp
mov
xchg
out
repz
and
mov
leave
jmp
mov
ins
xor
and
dec
(bad)
and
imul
shl
adc
pop
sbb
cs
std
xchg
sbb
push
xlat
xchg
test
fadd
popa
lds
mov
pop
out
psllw
lock
xchg
inc
ds
mov
scas
inc
pop
test
loope
mov
ror
cdq
sub
xchg
test
cmp
jecxz
mov
mov
or
push
mov
jo
adc
push
ror
cmp
mov
bnd
mov
repnz
aaa
sub
callw
push
(bad)
dec
or
xchg
loopne
mov
mov
fist
repnz
shl
xchg
push
lea
cmp
leave
inc
aaa
(bad)
xchg
out
(bad)
je
push
neg
sub
stos
in
mov
ins
fisttp
wrmsr
sub
push
das
cld
pop
pusha
outs
std
push
and
fiadd
inc
add
xor
js
mov
inc
das
sbb
(bad)
ss
jle
lds
add
popf
or
or
loop
add
movs
iret
das
pushf
mul
(bad)
cmp
enter
(bad)
cld
ss
inc
mov
hlt
imul
into
cwde
pop
mov
jl
or
bound
push
sar
dec
jmp
loope
add
push
push
mov
(bad)
mov
adc
xchg
fiadd
push
sbb
adc
(bad)
aam
pop
stc
cwde
mov
xchg
data16
aad
outs
inc
retf
clc
or
neg
sub
popa
aam
pop
and
mov
movs
mov
adc
inc
fcomp
(bad)
sbb
daa
gs
loopne
mov
les
les
mov
jmp
dec
cmp
sahf
(bad)
sbb
cmp
xchg
in
dec
xchg
loope
cmc
shl
pop
aad
retf
mov
mov
call
jae
icebp
add
adc
mov
not
in
xchg
mov
call
push
ins
neg
pop
clc
or
xchg
retf
sbb
fwait
dec
mov
rol
repz
das
add
and
fwait
push
push
ja
jne
cmp
call
mov
loopne
jle
sbb
push
mov
xor
cvtps2pd
xor
add
js
inc
adc
xlat
push
loop
mov
into
cmp
sbb
cmp
cld
and
inc
add
pop
cs
cdq
lods
pop
add
lds
xchg
push
dec
shl
mov
sbb
pop
inc
and
fist
push
js
into
sub
jns
aaa
shl
ss
jo
or
or
mov
sbb
mov
add
(bad)
mov
arpl
mov
lock
sub
adc
pop
or
xlat
push
cmp
int3
sbb
pop
imul
pusha
cld
and
xor
mov
cmc
test
adc
out
(bad)
push
mov
xchg
or
jnp
sbb
stos
mov
ds
fldz
mov
retf
retf
mov
push
or
inc
jmp
jp
scas
lods
loop
push
fadd
leave
lea
push
pushf
xchg
add
and
out
int3
movs
scas
pop
add
ds
pop
add
sbb
cmps
sbb
(bad)
xlat
out
inc
in
rol
test
aam
sub
in
adc
jne
std
jnp
es
retf
mov
ja
xlat
outs
jmp
dec
leave
mov
sahf
xor
inc
movs
test
fs
mov
sub
jecxz
shr
jp
and
jl
cmc
fcmovnb
sub
mov
xor
popf
inc
dec
pushf
icebp
xor
jo
je
fadd
lds
(bad)
stos
mov
ss
adc
repnz
mov
and
xchg
stos
stc
adc
cwde
in
push
sub
sub
lods
jb
jecxz
fisub
push
shl
sbb
cmp
mov
push
pop
pop
adc
test
or
sub
cld
clc
pushf
test
sar
and
mov
add
mov
movs
je
popf
rcl
pop
(bad)
stos
aaa
sub
(bad)
mov
and
movups
int3
dec
loope
imul
lahf
pushf
or
jecxz
or
dec
movs
jmp
sbb
loop
lds
push
bound
cmp
test
cld
mov
cmc
jmp
dec
ja
mov
and
lds
xor
lods
cwde
pushf
les
fld
pop
out
mov
sar
cmp
pop
cmp
dec
and
mov
mov
pop
mov
adc
sbb
mov
mov
jmp
mov
xchg
sbb
movs
jmp
(bad)
pop
outs
sbb
cmp
rcl
sbb
pop
xchg
add
cmps
pushf
out
mov
outs
pop
arpl
xchg
loop
fwait
mov
dec
xor
jne
push
push
adc
mov
shl
imul
fwait
call
imul
mov
cmc
mov
pop
xchg
sbb
pop
(bad)
fild
jo
ret
aas
push
jmp
jb
je
popa
lahf
test
gs
je
pop
pop
fldenv
add
or
jmp
inc
inc
or
fisub
ficomp
jo
int
push
stc
dec
jnp
movs
stc
test
jb
inc
shr
jge
add
dec
test
jecxz
jp
adc
add
(bad)
cwde
cmps
xchg
push
lods
mov
sti
int3
ds
inc
adc
in
jbe
mov
repnz
outs
mov
out
jmp
mov
push
mov
fcomp
push
popf
rcl
nop
push
or
enter
inc
mov
imul
enter
daa
and
push
jp
mov
out
scas
adc
dec
mov
frstor
inc
stc
ror
cmp
imul
lea
test
fisubr
inc
pop
fidivr
icebp
cwde
adc
out
imul
js
dec
push
mov
popf
sbb
pushf
lods
sub
in
mov
xor
sti
cwde
push
mov
pop
jg
call
pop
retf
sub
pop
clc
imul
or
cmps
shr
add
test
js
cdq
mov
pop
mov
sti
xcrypt-ofb
cmps
das
iret
push
inc
call
pop
dec
test
sbb
call
pop
mov
and
(bad)
rol
enter
and
mov
cli
pop
jbe
and
fwait
mov
inc
scas
jmp
loopne
xlat
fdiv
rcl
rcl
fimul
dec
xchg
mov
xchg
jmp
pop
sbb
int3
pop
pop
adc
xchg
out
add
icebp
cs
lds
and
pop
push
adc
fs
cmp
add
and
test
enter
xor
icebp
or
push
mov
in
adc
retf
cwde
push
and
sbb
pusha
loop
popa
loop
mov
push
mov
xor
retf
movs
mov
call
movs
and
and
xor
ja
sub
mov
mov
jge
lds
cmps
leave
jnp
xchg
pusha
sti
lock
arpl
cmp
jecxz
jp
fild
(bad)
xor
xor
dec
sbb
push
movs
arpl
sti
adc
sbb
mov
add
or
sub
ss
push
test
push
or
ja
loop
mov
popf
dec
xchg
scas
mov
rcl
aam
fucomi
jae
jg
pushf
pop
mov
das
push
dec
push
xchg
jbe
(bad)
cmp
adc
pop
das
outs
fild
fmulp
scas
jne
fadd
jbe
pushf
scas
mov
xor
into
movs
popf
cs
fld
xchg
imul
mov
pop
jne
sub
and
jmp
dec
(bad)
movs
scas
inc
pop
loop
scas
mov
mov
sbb
cmp
pop
daa
jl
cli
jle
call
and
adc
fimul
sar
mov
jge
fmul
pop
js
call
scas
and
ret
aaa
or
(bad)
repz
xchg
dec
jecxz
mov
and
mov
(bad)
mov
pushf
cmp
arpl
xchg
ret
lds
cmps
es
inc
jb
int
push
ja
daa
cmp
push
rol
cmp
enter
dec
imul
xor
outs
inc
xor
pop
mov
mov
je
mov
loope
lds
lods
gs
call
dec
shl
push
push
inc
sbb
jl
and
sar
sbb
jno
aas
(bad)
repnz
mov
int3
sbb
sbb
dec
and
iret
pop
pop
fcom
mov
add
pop
mov
scas
mov
psubsb
push
pop
jg
repnz
add
les
cmp
movs
ret
das
cwde
pop
sub
pop
fild
push
hlt
daa
push
sub
in
movs
jb
(bad)
xchg
adc
dec
push
data16
add
or
cs
sar
sub
gs
les
sti
push
dec
ret
add
jp
movs
shr
mov
push
jb
xchg
add
and
rcl
test
cwde
aam
iret
jle
sbb
dec
mov
shl
pop
aaa
add
(bad)
sub
mov
in
xchg
call
stos
push
xor
and
lea
(bad)
push
pop
xor
push
aaa
fld
or
sub
stc
(bad)
mov
ret
sub
mov
push
dec
and
add
and
add
ins
pop
jmp
xchg
ret
mov
mov
imul
mov
ins
cli
shl
mov
lods
(bad)
std
out
sbb
stc
and
dec
add
lods
pusha
push
das
xor
xchg
push
mov
mov
(bad)
ror
cwde
inc
mov
out
dec
mov
push
xlat
push
mov
sbb
pop
shl
lahf
add
jo
or
pushf
jp
popa
pushf
(bad)
(bad)
add
jo
add
xor
arpl
push
inc
lahf
mov
pop
jo
icebp
mov
push
dec
iret
inc
std
push
imul
std
and
outs
or
test
inc
aas
cmp
daa
nop
pusha
(bad)
shl
clc
dec
popa
call
push
test
xor
js
pop
xor
clc
inc
pop
adc
adc
cmp
daa
inc
lock
jg
lods
punpckhwd
add
adc
outs
sahf
rcl
psllq
je
in
push
add
xchg
fnstenv
mov
sbb
or
mov
aaa
sub
fcom
xor
js
cmp
loopne
jp
cmp
add
imul
je
pop
sbb
ds
or
retf
or
int
and
pop
inc
inc
jmp
and
(bad)
pop
jecxz
dec
outs
add
push
jb
hlt
inc
or
clc
and
mov
or
sub
in
fmul
aad
sbb
jbe
sbb
sub
and
stc
add
pop
sub
aad
movs
adc
dec
push
and
xor
add
out
in
and
cmp
bound
mov
ret
sti
cmc
popa
add
jmp
push
int3
packuswb
inc
mov
cmc
cmp
dec
stc
cmp
inc
mov
fnsave
mov
loop
jecxz
(bad)
cmp
(bad)
fldenv
jo
mov
push
jl
xor
fild
bnd
fsubr
jno
xchg
jmp
cmps
fsubr
ja
jmp
ja
mov
and
or
mov
adc
dec
sub
mov
inc
dec
adc
inc
pop
or
push
dec
(bad)
jne
lods
daa
xlat
mov
outs
into
data16
outs
add
push
je
mov
jae
out
sbb
adc
pop
mov
push
or
mov
mov
sahf
mov
sahf
or
outs
mov
shl
dec
ss
js
adc
or
fist
test
(bad)
ficom
aad
pop
mov
sbb
sbb
hlt
out
jae
push
enter
push
xor
push
leave
popa
lock
lds
mov
xor
ffree
push
dec
pop
and
or
shr
ret
inc
jge
hlt
cld
stos
mul
ds
ds
nop
call
ja
mov
inc
mov
and
cmp
or
dec
cld
or
rcl
mov
(bad)
sbb
imul
push
and
arpl
enter
push
leave
repz
bound
stos
inc
pop
loop
out
cld
dec
fs
inc
lds
adc
cwde
stc
mov
xchg
xlat
out
jmp
loope
cmp
cmp
mov
jge
mov
cmp
repz
mov
lods
mov
mov
dec
add
xor
bound
mov
(bad)
adc
pop
jle
xor
(bad)
fcmovu
cmp
es
repnz
scas
or
push
scas
xchg
jno
add
ror
adc
push
xchg
xor
out
fadd
loop
test
xor
pop
and
sub
or
shr
pop
mov
sbb
cmp
sub
xchg
inc
xor
pop
or
lahf
sbb
jns
(bad)
mov
stos
movs
daa
mov
sub
icebp
mov
lods
aam
adc
fwait
mov
push
aaa
pop
retf
mov
add
jmp
ss
push
and
xor
sbb
xor
scas
jmp
es
or
cld
fs
sbb
jmp
mov
mov
daa
mov
xlat
test
fadd
stc
aam
jo
inc
mov
dec
inc
loop
mov
sbb
jmp
xor
mov
xchg
aas
cmps
dec
mov
push
out
mov
jnp
in
scas
(bad)
rol
add
push
adc
mov
daa
call
sub
imul
cmp
jo
cmp
push
xchg
rcr
adc
dec
test
mov
fistp
mov
sbb
cmp
(bad)
cmp
pop
xchg
stos
cdq
or
aas
ds
cmp
aad
sbb
sti
scas
mov
out
jmp
mov
cmp
mov
call
jg
(bad)
in
les
mov
pop
pop
inc
xor
mov
mov
fmul
inc
add
jb
and
pop
push
out
ret
xchg
lods
dec
stos
pop
aam
rcr
sahf
imul
mov
xchg
aas
fs
ss
xchg
sbb
xchg
fcmovnu
out
fs
out
push
movs
lds
fstp
ror
iret
xor
mov
icebp
mov
inc
je
ficomp
inc
inc
sub
mov
stc
push
jle
(bad)
and
push
mov
adc
push
mov
xor
dec
imul
mov
cld
ret
test
wbinvd
mov
inc
test
enter
mov
inc
or
cdq
daa
sub
adc
adc
sar
test
mov
retf
mov
fidivr
sbb
pushf
outs
jo
cmp
jmp
pop
add
jl
cmps
and
push
fisub
mov
sub
or
jp
and
cmp
ds
push
add
stos
cmp
jbe
out
js
jle
scas
lds
pop
xchg
sahf
(bad)
cmp
scas
lds
or
sub
retf
sbb
imul
add
sbb
mov
js
outs
inc
pop
sbb
push
cmc
call
jp
hlt
js
in
fistp
test
inc
mov
pushf
call
loop
and
xchg
cmp
and
clc
leave
jns
mov
lods
push
mov
adc
es
mov
adc
cmps
mov
mov
lea
xchg
pop
ss
sub
in
dec
add
or
jl
mov
xchg
xchg
xchg
lods
(bad)
loop
dec
xlat
test
and
inc
scas
in
stc
ins
scas
es
pop
mov
ins
push
fldenv
xor
sbb
add
(bad)
mov
or
adc
rcl
inc
dec
sahf
sub
fwait
mov
mov
dec
jo
xor
ss
xchg
sub
ins
cmps
or
dec
sub
icebp
mov
jl
call
popf
retf
popa
mov
movs
imul
sub
adc
icebp
mov
xor
cmp
sbb
or
jmp
mov
inc
fnstsw
or
lods
jl
(bad)
mov
int3
mov
movs
sbb
and
mov
repz
xor
or
test
repnz
out
movs
or
jmp
pop
mov
jmp
add
xor
aas
add
add
mov
push
ret
nop
mov
xchg
mov
xchg
inc
scas
repz
ins
mov
scas
in
inc
fmul
or
push
mov
cmp
and
mov
mov
xchg
push
xor
jle
mov
call
xchg
xor
(bad)
push
mov
sbb
int
jmp
dec
dec
mov
jmp
pcmpeqd
fidivr
mov
or
xchg
test
xor
xchg
jnp
adc
xor
aad
mov
stos
jecxz
mov
or
stos
mov
jge
not
pop
es
ret
cmc
mov
and
and
sub
bound
(bad)
(bad)
bound
lds
and
and
push
mov
adc
push
jle
dec
mov
push
mov
xchg
inc
xchg
pop
fst
adc
jmp
push
out
and
ret
lea
aam
mov
das
push
pop
mov
in
add
adc
xchg
cmp
jnp
neg
imul
mov
xor
inc
(bad)
test
mov
fstp
iret
cmps
test
clc
xor
push
das
xchg
movs
stc
gs
fs
outs
pop
jb
jne
test
adc
mov
imul
push
stc
cwde
fldcw
pop
mov
lds
cmp
mov
push
pop
pusha
int
xor
fstp
fcmovu
into
mov
es
mov
or
mov
adc
sub
jo
dec
adc
jo
xor
dec
mov
mov
ss
xchg
mov
dec
xor
or
mov
rcl
movs
popf
xchg
fisub
mov
lods
test
add
mov
add
js
cli
cmp
mov
push
or
jge
adc
adc
sbb
out
std
inc
jg
jmp
and
xchg
cmp
icebp
xor
std
call
xchg
sub
idiv
movs
lock
shl
fnstcw
adc
cmp
loop
test
fist
xor
aam
pop
in
sub
pop
pop
rol
fsubr
push
outs
in
and
xchg
or
in
ret
or
cmp
inc
sub
neg
and
mov
xchg
pop
xchg
add
daa
dec
int3
push
xlat
sbb
test
scas
imul
pop
and
imul
push
cs
jge
nop
fwait
pop
and
movs
jo
xchg
xchg
out
mov
push
inc
cmp
mov
ds
push
fs
mov
cmp
mov
and
sbb
daa
dec
sbb
rcl
or
sti
(bad)
jnp
call
stc
sbb
fistp
call
sub
cmp
jge
inc
dec
push
mov
pusha
push
std
or
push
loop
jmp
mov
or
out
stos
mov
dec
jecxz
jnp
push
jmp
jecxz
stc
int3
adc
sub
sahf
push
sub
lock
popa
or
imul
sbb
sub
pusha
xor
pop
aaa
stos
ret
inc
jmp
popa
rcl
mov
out
mov
imul
je
or
js
pop
adc
pop
out
jge
sub
mov
(bad)
jp
inc
loope
stos
mov
nop
mov
lahf
repnz
test
pushf
dec
js
dec
lahf
stos
imul
sub
push
mov
push
cmp
cmp
or
or
shr
icebp
(bad)
in
mov
(bad)
mov
mov
pusha
test
popf
mov
dec
pop
fxch
xor
pop
pop
jne
xchg
inc
stos
pop
dec
xor
mov
xor
sahf
sbb
push
adc
pop
dec
fidivr
cld
or
fs
in
ror
mov
std
add
adc
xchg
les
mov
lock
push
mov
and
xchg
(bad)
xchg
and
push
adc
sub
aas
xchg
pop
adc
aas
ret
pop
dec
rol
sahf
mov
jb
sahf
xchg
or
aad
mov
inc
sub
push
shl
out
iret
stos
ret
sar
pop
adc
xchg
lods
dec
lods
mov
push
lea
mov
sar
std
add
loopne
adc
icebp
out
cmp
gs
mov
jo
retf
jbe
dec
ret
imul
or
jno
xor
or
popa
jb
push
imul
mov
mov
std
sub
std
nop
adc
jge
cmp
jbe
mov
xchg
xor
repz
ds
adc
lock
(bad)
lahf
or
push
xor
sbb
inc
out
jns
push
in
arpl
sub
out
lds
ja
xor
cmp
dec
xchg
push
pop
fwait
pop
adc
xlat
mov
nop
pop
inc
push
mov
inc
nop
and
add
ret
comiss
xor
outs
ret
cmp
jg
ins
clc
dec
(bad)
imul
cmp
scas
sbb
mov
mov
movs
jbe
movs
es
lock
mov
dec
gs
xchg
cli
adc
xchg
xchg
ja
and
cmp
mov
mov
add
cmp
std
es
leave
test
les
ja
dec
jns
cmc
shl
xor
push
inc
and
shr
or
xor
popa
pusha
cdq
jo
in
outs
add
add
lea
mov
mov
movq
jns
mov
jne
aam
int
add
jmp
jo
push
out
dec
pusha
pop
cmp
clc
mov
sbb
sub
push
test
sub
mov
pop
ror
add
lods
inc
into
xlat
pop
mov
mov
push
das
xchg
retf
aas
stos
imul
jmp
cld
hlt
cli
mov
mov
cli
cli
js
dec
jne
gs
pop
jge
mov
daa
cmp
jp
sti
loop
or
cmp
sbb
rol
imul
xlat
sahf
fdivr
pop
ins
inc
cdq
pop
shr
out
mov
aad
mov
retf
stc
hlt
(bad)
dec
xchg
or
mov
jnp
movs
(bad)
aam
fldenv
xlat
ret
fisttp
into
fcomp
test
(bad)
into
repz
enter
pop
cmps
push
fsub
push
into
data16
jg
mov
sub
xchg
mov
fst
jecxz
mov
test
and
fstp
jl
bound
xchg
add
rol
adc
aam
jae
ret
(bad)
sbb
dec
shr
inc
popa
fidivr
mov
dec
fst
cli
sbb
lds
or
scas
mov
in
jbe
pop
cmp
or
and
jmp
out
lsl
cmp
int3
mov
jno
aas
or
(bad)
jmp
mov
inc
mov
mov
enter
sub
xor
in
minps
mov
mov
and
add
cmp
xchg
enter
outs
mov
mov
add
xbegin
jle
scas
call
lods
xchg
pusha
push
imul
cli
test
jne
mov
int3
cmp
add
push
and
enter
int3
lds
pop
pop
aaa
pop
cdq
jns
push
jmp
push
in
fwait
xchg
push
and
push
xor
std
adc
mov
dec
test
push
pop
xchg
paddq
mov
mov
test
ins
cmps
cmp
or
pop
icebp
aas
xor
jg
pusha
and
pusha
sahf
mov
sar
loopne
push
imul
into
sar
sub
lods
icebp
inc
cdq
jg
fsincos
sbb
dec
sub
(bad)
int
add
adc
mov
sub
and
xchg
cmp
ds
jl
iret
sub
(bad)
push
inc
std
xchg
inc
scas
call
in
ficom
out
xor
mov
cdq
mov
je
sub
xchg
fiadd
adc
out
adc
xlat
adc
dec
sub
fsubr
add
xlat
cmp
mov
in
sbb
mov
pop
hlt
cmp
dec
popa
sub
mov
push
shl
cs
test
iret
fild
bound
movs
add
sub
add
add
(bad)
sbb
sbb
push
cmp
push
les
lds
not
dec
aad
fcmovne
pushf
fild
(bad)
lods
lock
xor
out
pop
cli
aas
pop
xor
fidiv
pop
out
pop
stos
cs
push
popf
add
lss
and
push
xor
cdq
ret
fbstp
in
jp
or
xlat
(bad)
xor
mov
cmp
leave
hlt
push
jnp
add
dec
popf
push
scas
fwait
and
pop
add
mov
dec
pop
xchg
retf
gs
xor
stc
and
xlat
call
call
adc
clc
pop
jcxz
mov
dec
pop
xlat
push
ds
sub
push
push
push
ins
int3
cs
mov
movs
std
sbb
add
dec
pop
ins
je
mul
ds
ror
cmp
and
(bad)
cmp
rol
out
sub
arpl
popf
out
jnp
in
fistp
hlt
jmp
xchg
mov
(bad)
lahf
test
push
cmp
bound
push
pushf
imul
pop
sbb
hlt
jbe
sti
sub
dec
adc
push
fwait
ss
nop
add
sti
(bad)
add
js
out
pop
adc
inc
xchg
(bad)
ss
inc
dec
jbe
and
mov
int3
lods
ret
xor
popf
js
ins
jmp
push
std
pop
aaa
sub
jmp
idiv
push
sbb
sbb
lea
sub
aam
xor
(bad)
cmp
jmp
jmp
aam
jge
pop
enter
adc
cmp
repnz
aaa
and
test
stos
bound
sub
mov
cmp
xchg
sub
daa
rol
daa
xchg
add
xor
mov
pop
xchg
mov
xor
mov
repnz
cdq
push
mov
push
mov
xor
into
sbb
jb
inc
mov
jge
test
(bad)
cdq
xchg
or
call
inc
add
add
popa
lods
movs
int3
cmp
dec
addr16
(bad)
mov
cdq
pop
mov
das
xor
cmps
adc
ds
jg
je
dec
pop
lods
mov
pop
jecxz
dec
sub
add
dec
push
movs
cmp
(bad)
stc
sub
push
xchg
int3
adc
das
scas
daa
cmp
or
xchg
xor
jmp
sbb
xor
fisub
cmp
call
add
xchg
stos
xchg
xor
and
jl
(bad)
out
loop
ja
mov
push
or
outs
xor
pushf
mov
pop
mov
test
sbb
lds
sbb
xor
push
sub
fdivr
mov
dec
shl
push
sbb
loop
pusha
xor
leave
xchg
cmp
fistp
pop
(bad)
push
loopne
shr
shl
in
jmp
in
stc
lock
data16
das
jge
mov
(bad)
mov
jb
sar
dec
jns
dec
mov
out
push
jg
imul
stc
out
minps
repz
nop
push
enter
lods
xchg
outs
retf
sub
(bad)
cmovo
push
call
pop
xchg
in
mov
daa
(bad)
dec
enter
add
jge
mov
sub
xchg
mov
fcmove
add
fdivrp
inc
jg
test
pusha
pop
je
test
lea
inc
bound
test
pop
imul
pushf
mov
test
mov
ss
bound
scas
push
mov
inc
pop
jecxz
jbe
xchg
fadd
fnsave
and
retf
push
xor
stos
push
push
fwait
inc
mov
mov
dec
cdq
imul
or
rcl
add
mov
je
pop
adc
dec
mov
cmp
sub
or
mov
mov
mov
xchg
mov
pop
loope
retf
outs
jl
fld
popa
cdq
arpl
push
xchg
sub
xor
and
sbb
cmp
jl
add
pushf
mov
mov
lds
dec
inc
movs
mov
sub
push
and
push
jge
ins
fs
dec
adc
sub
jecxz
mov
push
dec
(bad)
movs
imul
xchg
stos
aaa
push
retf
repnz
jo
enter
fist
xchg
fisub
add
sbb
int
rcl
js
add
aam
mov
push
shr
cdq
dec
xchg
jo
jp
sub
xchg
ds
rcl
jnp
ins
push
mov
call
imul
and
loope
imul
addr16
sub
jnp
push
fadd
jmp
gs
pop
fiadd
pop
pusha
sub
call
sub
js
inc
inc
es
dec
push
fcom
add
adc
(bad)
pop
mov
dec
push
int3
mov
xor
mov
lods
jmp
das
jae
push
push
repz
bound
dec
lahf
cmp
lock
out
aam
sbb
out
ja
daa
aam
dec
sub
jo
fwait
xchg
mov
jbe
pusha
repz
popw
push
mov
inc
inc
cwde
(bad)
pusha
xor
scas
in
mov
jo
call
jg
push
xlat
mov
lds
nop
rcl
arpl
inc
sub
icebp
jo
test
dec
mov
and
sbb
xchg
or
movs
jmp
jge
aaa
cwde
dec
in
inc
div
(bad)
cld
in
pop
dec
repnz
mov
xchg
cmp
xchg
sahf
xchg
ins
inc
loopne
jae
lock
xchg
cmps
and
sub
pop
mov
xlat
xor
popf
and
xor
add
xlat
cmps
inc
lock
loopne
inc
jns
fstp
retf
add
ss
out
dec
ss
scas
inc
rcl
sbb
lods
xchg
cli
push
sub
loopne
mov
mov
xor
dec
mulps
inc
enter
ja
or
shr
push
push
cmp
movs
lahf
or
in
adc
int
or
lahf
sbb
pop
xchg
fwait
scas
das
call
or
ins
fsub
ss
stc
out
xchg
xor
xchg
cmc
adc
jmp
lock
das
test
dec
test
dec
scas
fwait
js
idiv
xchg
lahf
inc
popf
clc
xchg
hlt
outs
add
sub
jg
popa
push
fiadd
daa
dec
shr
or
outs
pop
aas
mov
mov
push
sub
cmp
mov
ds
mov
xor
xlat
imul
test
cmp
jmp
mov
ja
jmp
clc
inc
jl
das
sub
mov
sub
or
daa
scas
mov
sub
test
mov
push
(bad)
pushf
das
pushf
adc
lods
pop
push
and
in
lea
jl
cmp
test
sub
das
dec
lock
(bad)
data16
test
or
mov
cmp
cmp
and
or
movs
xor
xchg
fisub
pop
outs
fistp
enter
lds
xchg
mov
pop
push
in
test
cmp
pop
test
out
call
test
shl
push
jae
adc
(bad)
stc
popa
push
int
bound
pushf
loope
je
mov
sbb
(bad)
loopne
hlt
retf
lea
xor
sahf
loop
fadd
mov
cdq
mov
xchg
scas
pop
jcxz
scas
call
inc
stc
mov
add
sti
sbb
addr16
pop
sar
or
or
gs
imul
cmc
adc
fimul
in
rol
test
dec
aaa
loope
xor
outs
mov
inc
out
pop
cmps
shl
das
je
adc
xchg
sub
sub
(bad)
sbb
cmp
mov
push
jl
dec
cld
and
cmps
les
jmp
fnstenv
cmps
(bad)
pop
pop
outs
mov
cmp
add
xlat
movs
dec
jge
inc
cmp
jmp
push
mov
rcr
xchg
ret
adc
fist
adc
sbb
(bad)
popf
(bad)
mov
sub
(bad)
cmp
xor
bound
imul
pop
sub
shr
mov
dec
repz
and
cmp
mov
pop
sub
or
jmp
arpl
or
into
mov
lock
call
(bad)
jl
rol
scas
add
mov
movs
test
cmp
sti
sbb
nop
retf
jne
and
fwait
shl
jo
daa
cwde
pop
ret
mov
jmp
xor
std
or
push
mov
pop
push
and
push
sbb
add
push
mov
jmp
retf
or
lock
push
xchg
or
lods
jnp
pop
daa
stos
movs
jg
ins
pop
inc
sub
test
adc
in
aaa
(bad)
xor
ja
xor
sub
fist
push
mov
sti
mov
mov
xchg
inc
repz
fistp
or
dec
sbb
sahf
sub
movs
fcmovb
pop
das
psllq
adc
cs
stos
or
jl
push
pop
mov
sub
ins
xchg
or
retf
inc
pop
into
or
pushf
add
test
movs
in
je
fnstcw
inc
jmp
fsubr
add
out
test
sbb
push
xor
out
loope
sub
jg
jns
sub
jns
ins
sbb
loop
out
cmp
sar
sub
outs
lahf
or
mov
jmp
pop
dec
(bad)
mov
xor
loope
fwait
pusha
imul
int
cli
imul
cmps
adc
sbb
cwde
pop
pop
inc
dec
dec
jae
rcr
jae
cmp
int3
xchg
mov
inc
ror
daa
repnz
xor
(bad)
sub
cld
mov
push
mov
push
xchg
mov
mov
xchg
(bad)
push
xor
ss
nop
add
call
adc
cdq
jg
adc
popf
push
jbe
adc
add
pop
iret
jge
shl
mov
je
xchg
pushf
cmp
test
lahf
push
sbb
sbb
mov
(bad)
sbb
and
out
cwde
out
fst
push
and
sti
mov
jnp
or
mov
sub
ins
cmps
imul
inc
sbb
inc
cmp
rcr
test
jecxz
(bad)
adc
xchg
in
mov
or
or
xchg
aad
mov
add
cmp
pop
push
xchg
int3
jge
iret
aam
push
jl
fwait
or
or
dec
(bad)
dec
ins
mov
pop
cwde
pop
retf
fcmovnu
call
push
aas
mov
xor
or
dec
adc
retf
inc
push
repz
lock
push
and
inc
pushf
mov
arpl
mov
in
fdiv
scas
inc
fdiv
jg
in
dec
iret
xor
addr16
mov
mov
mov
shl
imul
out
js
(bad)
cmps
jno
pop
fst
mov
bound
cli
ss
or
pop
push
retf
fs
xor
aas
out
push
arpl
neg
(bad)
repnz
sub
cdq
out
(bad)
ins
inc
jo
fwait
adc
sub
add
pop
pop
sbb
je
daa
int
xchg
jg
dec
sub
pop
sar
in
dec
cmp
inc
mov
int
ja
out
push
aas
xor
and
sahf
sbb
paddusb
mov
cmp
pop
idiv
and
mov
pop
mov
out
out
jge
aaa
bound
retf
cwde
xchg
cmp
cmp
xchg
adc
loopne
xchg
jmp
in
out
sbb
xor
pop
loope
or
cmp
test
xor
ret
sub
sti
shl
ss
daa
mov
cmp
jg
xchg
pop
movs
je
enter
sub
popf
mov
mov
mov
popa
mov
call
imul
cmp
iret
add
sbb
repnz
pop
cmc
mov
xor
lods
dec
lds
mov
test
cli
in
call
gs
in
js
outs
into
push
into
sahf
arpl
hlt
(bad)
call
stos
enter
and
jne
(bad)
stos
mov
sbb
xor
cmp
cmp
sbb
jo
outs
push
adc
in
mov
adc
loopne
retf
push
mov
push
or
add
cmp
pop
mov
cmp
pop
movs
ret
aad
dec
push
lods
cmps
movs
rol
aaa
test
jbe
gs
cmps
mov
cmp
js
pop
add
lock
jbe
pop
aam
es
jg
push
mov
cmp
fldcw
ror
stos
xchg
stos
(bad)
and
dec
pop
and
mov
push
mov
(bad)
push
(bad)
out
pop
ja
(bad)
cwde
ror
cmp
adc
jmp
mov
and
popf
nop
lea
push
push
mov
or
and
xchg
mov
push
je
sbb
out
ja
push
data16
daa
fmul
pop
out
and
dec
add
fnstenv
cli
push
popf
movs
pop
shl
ins
push
mov
mov
jle
mov
xchg
imul
pop
sbb
or
and
outs
sbb
lock
out
adc
mov
push
bound
add
ret
retf
fsubr
adc
xor
push
push
adc
jecxz
mul
xchg
(bad)
leave
jb
or
sub
pop
lock
pop
gs
les
popa
mov
(bad)
test
jns
dec
adc
xor
sbb
and
xor
imul
jecxz
add
sbb
push
jg
sub
test
sub
pop
mov
test
(bad)
scas
stos
push
add
scas
sbb
out
je
ret
cmc
mov
imul
or
add
cmp
repnz
jmp
dec
movs
ret
xor
jmp
ret
jbe
push
pop
mov
ror
and
les
push
bound
jnp
jnp
jg
mov
leave
fisub
jmp
(bad)
sub
add
xchg
(bad)
das
and
scas
stos
cmc
retf
sub
das
or
adc
or
imul
mov
inc
or
fistp
sbb
adc
and
cmp
sar
cmp
mov
in
(bad)
popf
cmp
mov
in
xor
retf
add
xchg
jmp
pop
jns
sti
push
out
mov
aas
imul
popf
loopne
adc
sbb
pushf
(bad)
jmp
out
jmp
out
or
push
inc
(bad)
pop
push
hlt
sbb
cmp
and
push
shld
adc
sbb
ss
cmps
imul
inc
ret
(bad)
(bad)
xchg
pop
xor
xlat
fidiv
mov
adc
in
jbe
out
and
pushf
jl
and
xor
in
push
push
pop
jl
and
outs
jmp
pop
cmps
cmc
pop
xor
cmps
mov
and
shl
pop
aaa
les
xchg
nop
(bad)
xor
adc
in
outs
mov
xor
mov
test
ins
xchg
(bad)
xchg
cs
xor
inc
cmp
popf
jb
and
mov
not
les
in
(bad)
cdq
mov
jbe
adc
jmp
lds
pop
inc
pusha
or
jmp
ret
mov
xor
inc
jno
push
lds
jmp
scas
test
iret
xchg
lods
ret
cmp
and
mov
adc
je
das
jae
in
test
movs
iret
mov
ror
iret
or
gs
je
adc
movs
xor
scas
or
lahf
mov
aad
xchg
nop
sub
push
xor
sbb
and
fld1
movs
mov
retf
mov
pop
and
ja
push
cmc
and
sbb
cdq
dec
retf
mov
cli
inc
mov
xor
jmp
sbb
jmp
add
push
in
es
pop
scas
loope
push
retf
stos
mov
jmp
int3
repz
or
clc
adc
sub
jb
and
or
inc
xor
leave
add
mov
add
add
imul
je
push
jge
sub
sbb
(bad)
pop
jg
fwait
adc
stos
and
adc
mov
xchg
cmc
pop
bswap
sub
imul
out
sbb
fmul
leave
test
or
pop
sub
mov
arpl
dec
scas
pop
scas
(bad)
pop
inc
ds
push
test
into
mov
call
stos
shl
push
dec
jno
push
cmp
mov
or
aaa
jbe
(bad)
out
mov
aas
pop
mov
dec
mov
in
ss
outs
xor
jmp
add
aam
push
in
jmp
(bad)
hlt
mov
push
std
shl
xchg
cli
jmp
push
sbb
xchg
mov
and
leave
aad
sbb
adc
sub
lock
push
call
push
inc
pop
shl
dec
stc
shl
imul
jge
cmps
push
mov
sub
in
test
imul
mov
in
and
mov
xchg
add
add
iret
jle
jmp
aad
jmp
dec
(bad)
int3
or
push
mov
into
in
sub
scas
movs
icebp
mov
push
shl
cmp
stc
mov
(bad)
jmp
and
stos
xor
mov
cmp
cld
into
mov
adc
xchg
mov
push
sub
in
stos
mov
pop
jle
imul
ret
mov
cld
call
mov
(bad)
(bad)
lods
adc
and
rcr
fwait
bound
popf
popf
mov
or
inc
jne
out
push
lods
mov
mov
jmp
retf
icebp
push
inc
jmp
xlat
mov
xor
xor
mov
adc
pop
jge
in
sbb
sbb
push
sbb
shr
jmp
adc
je
nop
sub
mov
fst
fs
push
mov
lods
push
call
dec
rol
mov
mov
gs
xlat
mov
sub
je
sbb
and
pop
sub
mov
sub
cmps
aas
pop
outs
js
mov
adc
sub
adc
lea
push
(bad)
lock
pavgw
mov
ins
mov
and
fucomp
js
adc
inc
or
pop
in
lods
out
or
jl
fdivr
aaa
mov
je
(bad)
and
xchg
lods
fnstsw
lds
mov
jbe
shl
inc
and
rcr
mov
mov
daa
dec
push
jbe
je
push
and
bound
pop
push
push
xor
pop
movs
xlat
mov
dec
and
adc
pop
icebp
mov
cmp
mov
adc
or
sbb
pop
aad
jae
mov
or
xor
cs
out
inc
and
test
adc
lock
mov
test
(bad)
xor
dec
stc
jne
in
mov
lds
mov
sub
and
adc
jge
mov
xchg
repz
outs
cmp
mov
mov
lahf
mov
add
loop
loopne
jb
xor
cli
pop
or
xor
dec
sbb
lods
push
aam
pop
or
test
movs
jl
ret
ror
nop
inc
mov
xor
adc
mov
xor
ret
xor
jmp
aas
mov
sahf
jge
adc
and
jge
jno
push
pop
hlt
mov
adc
scas
fidivr
push
imul
outs
and
cmps
sbb
out
mov
adc
arpl
pop
xchg
gs
(bad)
jle
jno
pop
(bad)
cdq
(bad)
mov
sub
outs
adc
push
pop
or
stos
cmps
push
mov
iret
js
clc
out
pop
sti
and
in
lahf
rol
inc
add
outs
push
and
jno
or
cwde
jae
pushf
mov
cld
xchg
outs
push
mov
pop
mov
xchg
hlt
test
xor
dec
add
(bad)
cmp
movs
or
add
scas
frstor
retf
adc
imul
adc
xchg
cs
loopne
xor
push
leave
push
jno
scas
jge
xor
pop
pop
out
cld
adc
add
adc
and
enter
push
add
stos
inc
mov
fisttp
and
jg
jbe
adc
pop
call
shl
or
jmp
add
pop
mov
xor
dec
dec
push
inc
dec
dec
add
add
jb
mov
push
jge
es
xchg
pusha
outs
mov
(bad)
sub
cmps
ss
scas
enter
ins
mov
bound
xlat
leave
out
pop
xchg
inc
clc
movs
cmp
and
outs
mov
jb
sbb
xor
dec
das
sar
(bad)
in
mov
enter
push
mov
pop
les
jno
pop
add
addr16
pop
cs
or
mov
arpl
ss
dec
pop
mov
mov
adc
jnp
dec
jmp
sbb
jbe
dec
enter
xchg
es
mov
movs
pop
shr
pop
fldenv
xor
pop
call
mov
adc
inc
xchg
xchg
fstp
mov
loope
pushf
loop
pop
add
aam
(bad)
sbb
outs
je
jp
loopne
je
stc
fwait
stos
(bad)
pop
popa
aaa
and
lods
loop
out
inc
jne
or
xlat
rol
sahf
add
test
fst
lock
fistp
jne
fsubr
jecxz
popf
add
dec
inc
inc
add
movs
mov
ficom
(bad)
mov
ins
imul
out
or
cmp
arpl
scas
popa
pop
inc
mov
cld
lea
pop
mov
inc
ret
repz
cli
jl
div
add
dec
test
mov
xchg
cwde
fistp
cdq
and
ins
pop
cmp
pop
js
lock
jne
push
cmp
mov
test
cmc
hlt
ds
mov
pop
retf
icebp
imul
sub
addr16
ja
xchg
xchg
mov
das
xchg
mov
in
inc
pop
xor
adc
in
dec
pushf
push
fst
fdivr
fstp
mov
jbe
or
xchg
mov
mov
je
div
pop
lods
repnz
mov
xor
mov
clc
les
and
movs
inc
push
jge
and
call
test
shl
lods
xor
sub
imul
mov
aaa
ret
ja
mov
mov
test
pusha
push
mov
jns
dec
inc
arpl
mov
xchg
and
inc
(bad)
fistp
out
jecxz
cmc
out
das
add
and
sbb
fs
(bad)
repnz
sub
mov
loop
loope
jno
iret
aam
int
inc
push
or
(bad)
push
sbb
enter
jle
or
sbb
mov
xor
lock
fnstsw
aam
cmp
ret
push
aas
stos
out
ds
fild
cdq
dec
retf
xchg
xor
sbb
sbb
mov
mov
or
pop
scas
mov
ins
loop
sahf
mov
fcomip
sar
daa
in
xor
sbb
out
mov
aad
inc
pop
sbb
cmps
fwait
xor
sbb
std
xchg
xchg
cmp
call
xchg
inc
sub
adc
and
pop
mov
pushf
jns
loopne
out
dec
sbb
dec
enter
push
jle
rep
xchg
fimul
mov
pusha
or
in
ins
in
and
mov
jl
arpl
mov
inc
xor
mov
jne
pusha
mov
fst
into
cmp
inc
mov
cmp
xor
mov
sbb
aaa
sbb
fld
jmp
and
add
(bad)
sbb
and
cwde
sub
int
mov
adc
movs
ror
outs
mov
mov
dec
dec
xlat
sub
stos
in
fstp
cli
pop
xchg
or
imul
mov
add
ins
pop
das
out
add
mov
es
and
repnz
aaa
pop
xchg
outs
pop
sbb
inc
fsub
and
mov
retf
push
imul
into
sti
inc
sbb
inc
ror
cmp
or
inc
(bad)
and
adc
mov
ja
jnp
arpl
adc
inc
push
not
pop
sub
pop
jl
pop
fisttp
xor
sub
ret
or
sub
sbb
sub
mov
sbb
(bad)
cli
fwait
cmc
mov
push
inc
xor
jb
push
mov
fsubr
cmp
loop
add
test
dec
loopne
scas
jge
dec
in
test
ret
push
test
fsub
cmps
shr
mov
dec
imul
iret
mov
fistp
and
mov
repz
pop
mov
sub
fwait
mov
fistp
add
lock
cld
daa
xchg
out
mov
xchg
dec
hlt
adc
in
rcr
jno
scas
push
pop
jne
test
jp
or
cmp
aad
test
std
ret
jmp
fidiv
ja
jns
mov
jp
or
dec
nop
cli
mov
sub
retf
aaa
jmp
mov
dec
sub
jns
adc
popa
inc
arpl
sbb
dec
xor
clc
push
push
xchg
lea
mov
xchg
pop
dec
adc
aad
add
and
std
outs
xchg
jp
(bad)
cmp
cmp
mov
and
int3
neg
sbb
inc
addr16
dec
aam
lds
cdq
faddp
xchg
xor
sub
idiv
dec
dec
mov
adc
lods
ret
(bad)
xchg
lea
mov
pop
je
dec
in
sub
dec
and
test
outs
xchg
mov
push
pop
(bad)
sbb
cmc
ja
mov
jecxz
jl
mov
fld
mov
fcomp
outs
dec
cmp
xlat
xchg
xchg
xor
add
mov
adc
xor
xchg
es
das
cmp
cmp
xlat
mov
mov
pop
dec
sbb
out
aas
sub
pushf
enter
call
sbb
ds
dec
dec
xor
xor
es
repz
sahf
pop
(bad)
xor
dec
jmp
ss
es
ss
push
in
adc
cwde
inc
ret
mov
test
adc
dec
int3
les
cmp
hlt
mov
(bad)
add
mov
pop
outs
vmaxsd
loope
arpl
dec
xor
test
or
inc
push
mov
mov
mov
cmps
stos
test
(bad)
fs
mov
test
xchg
cld
sub
mov
add
sbb
xchg
sbb
aam
inc
cli
inc
inc
test
ss
pop
sub
sub
cmps
xchg
lahf
mov
and
jle
sbb
dec
retf
mov
ret
or
fnstcw
jae
mov
enter
(bad)
imul
cmp
jg
fcmovne
jb
add
adc
push
jb
ins
or
pop
ins
mul
out
jne
xchg
in
daa
cwde
push
or
or
icebp
data16
or
sbb
cmp
int3
lahf
aas
sub
mov
psubw
(bad)
lock
jmp
cwde
cmp
lods
jg
in
or
or
pushf
sbb
jecxz
iret
dec
mov
scas
retf
add
inc
pushf
xor
test
push
int3
int3
arpl
jge
adc
or
movs
push
aad
clc
out
dec
outs
mov
xor
sti
sbb
dec
xor
mov
or
imul
retf
sub
mov
jmp
add
jmp
js
push
cmp
cmp
inc
sub
cld
add
xor
stc
aad
mov
adc
dec
mov
mov
mov
push
mov
mov
ds
sahf
cdq
xchg
or
cmc
mov
sbb
ins
xor
dec
aas
call
mov
adc
xor
add
pusha
int
imul
jns
cmc
lahf
shl
jb
int
push
xor
xor
loopne
dec
movs
sub
push
pminub
mov
inc
cmps
add
xchg
hlt
cmp
push
or
dec
add
mov
fs
outs
mov
dec
pop
clc
idiv
mov
mov
dec
dec
sub
sbb
(bad)
clc
mov
fnsave
pusha
ja
mov
push
dec
cmp
movs
pop
sub
pusha
mov
adc
sub
and
xor
(bad)
retf
mov
sbb
in
cs
sub
cmp
cmp
mov
or
xor
(bad)
mov
pop
jmp
xchg
or
mov
ret
out
test
adc
ror
test
jle
or
push
sbb
ret
call
push
mov
call
adc
cmp
jbe
les
cdq
pop
fsubr
or
out
clc
sbb
mov
inc
int3
(bad)
daa
movs
add
pop
ret
mov
rcr
das
hlt
adc
stos
ins
sbb
(bad)
jecxz
add
mov
enter
jne
mov
add
xchg
or
mov
and
dec
fisubr
xor
pop
cmps
sbb
nop
pop
cdq
nop
rcl
sub
repz
add
icebp
scas
inc
cmp
mov
cld
xchg
inc
inc
test
(bad)
movs
(bad)
fcmovnu
and
movs
jmp
sti
repz
hlt
fdivr
fsub
lock
dec
xchg
xchg
ret
mov
aad
aas
idiv
aam
jnp
pusha
nop
pop
ja
xchg
or
jo
inc
jo
scas
lea
repz
jg
mov
add
sub
jecxz
mov
lahf
imul
sti
sub
(bad)
jmp
cmp
adc
cmps
rcr
inc
and
je
lahf
pop
sub
sub
inc
popa
and
scas
fiadd
lds
faddp
xchg
dec
push
test
jmp
add
(bad)
cmps
dec
rcr
repz
out
adc
adc
fcom
test
cmp
push
sbb
jp
mov
addr16
ins
dec
jmp
pop
pop
jo
ds
jns
xlat
jb
(bad)
cmp
(bad)
jmp
pop
inc
lock
mov
stos
lods
inc
mov
inc
xchg
in
clc
adc
and
call
push
loopne
(bad)
retf
call
xchg
les
lods
call
sar
shl
sub
ficom
imul
retf
lahf
jne
dec
aaa
call
adc
daa
sub
mov
test
mov
movs
and
out
push
test
out
(bad)
jnp
cs
mov
ret
pushf
push
jbe
inc
daa
sbb
dec
std
pop
cmc
pop
add
add
rcl
loop
xor
mov
pop
ror
fs
cld
das
push
sub
lods
pop
js
sub
mov
sti
cmps
mov
mov
jb
stos
mul
add
std
sub
inc
call
pop
outs
dec
addr16
mov
fstp
xchg
sar
xchg
cwde
stos
lods
mov
inc
popf
ins
frstor
gs
inc
xor
shl
call
sub
mov
pop
enter
mov
scas
mov
sub
push
xor
pop
ins
aam
cmp
inc
outs
sbb
inc
cli
lods
add
push
inc
xchg
adc
mov
out
dec
mov
push
cdq
fst
lock
das
bnd
sbb
cwde
(bad)
dec
int
cld
xchg
mov
(bad)
out
mov
push
outs
arpl
sub
cmp
aam
dec
and
mov
stc
lds
inc
sbb
jmp
xor
dec
movs
dec
dec
dec
sbb
or
and
mov
sbb
ja
pop
xor
iret
int
jl
sbb
clc
ret
xchg
sub
dec
xchg
xchg
dec
ror
inc
in
pop
and
lods
dec
or
push
or
mov
mov
mov
adc
sub
adc
rcl
arpl
lock
fisubr
or
cmp
fadd
stc
adc
adc
mov
fnsave
add
inc
push
jmp
push
test
dec
inc
jmp
jmp
or
es
mov
or
xchg
pop
push
mov
jns
mov
jno
mov
and
mov
lea
scas
xchg
in
mov
pop
repz
inc
push
fcomp
sbb
adc
rol
fcomi
js
fcom
lds
and
sub
enter
out
(bad)
and
add
or
dec
cdq
sub
mov
mov
repnz
sub
ss
ja
jmp
jno
in
push
cmps
jmp
xchg
cdq
xchg
jmp
(bad)
imul
dec
xor
add
aas
add
mov
fcomi
inc
mov
fwait
jbe
mov
or
movs
mov
sar
xchg
mov
sub
xchg
stos
neg
jno
add
mov
adc
dec
out
retf
mov
scas
sbb
adc
pop
int3
js
pop
out
jecxz
and
lods
or
fstp
xchg
loope
dec
adc
imul
sbb
xlat
push
push
sbb
sbb
retf
mov
rcr
inc
push
adc
jle
ret
fwait
retf
or
xor
ret
div
mov
pop
(bad)
loope
in
int
xor
clc
ret
sub
xchg
push
push
xchg
arpl
adc
movs
pop
adc
clc
test
or
jecxz
adc
stos
or
imul
or
enter
mul
jbe
lods
pusha
cmp
jecxz
sub
inc
jae
sub
std
mov
inc
aad
pop
lds
cmp
cmps
mov
scas
xchg
loop
cmp
gs
les
push
cmps
cmps
int3
fisubr
in
leave
pop
cs
sbb
mov
push
mov
mov
mov
pop
add
push
fiadd
adc
jge
les
sar
mov
and
and
mov
and
div
cmps
stc
sub
dec
add
jle
jge
rol
jl
mov
inc
cmps
(bad)
hlt
hlt
sub
jl
mov
movs
mov
pop
xlat
push
lea
(bad)
aad
mov
sub
rcl
call
js
out
pusha
clc
add
std
out
jo
inc
sbb
xlat
push
icebp
fs
sub
(bad)
in
sub
inc
xchg
mov
out
xor
scas
es
retf
and
or
and
sar
jmp
cmp
mov
mov
xor
sbb
sub
or
xor
pop
rcr
fsub
mov
test
push
inc
push
adc
mov
sahf
push
(bad)
cld
jg
sub
rol
jmp
xor
inc
mov
out
pop
cdq
mov
fsubr
push
pop
test
fcom
mov
js
fnstcw
stos
and
adc
ds
in
fwait
and
mov
and
loope
mov
mov
push
mov
adc
add
inc
mov
rcl
retf
mov
jle
jp
add
lods
cwde
xor
push
gs
push
and
or
imul
les
cmc
in
or
pop
out
in
call
ret
mov
ror
jl
mov
mov
cmp
add
sbb
xor
inc
cwde
mov
retf
jo
into
(bad)
cmp
jl
inc
pop
scas
(bad)
inc
xor
in
cmp
imul
retf
in
shl
fisttp
mov
(bad)
xor
push
xchg
mov
pop
pop
mov
mov
out
es
mov
daa
pusha
add
aam
leave
xchg
fs
cwde
xchg
mov
out
rcr
les
pop
sbb
or
xchg
dec
push
xchg
jmp
inc
pop
outs
aam
test
mov
xor
arpl
xor
aad
mov
ret
out
and
cmp
sbb
inc
addr16
adc
cmp
stos
mov
adc
mov
xor
cmps
std
aas
jnp
and
enter
inc
addr16
retf
cli
jmp
retf
xor
add
push
out
push
inc
aas
mov
lods
scas
fcomp
shl
(bad)
rcr
aam
adc
clc
adc
test
xor
mov
xor
clc
xchg
sub
mov
mov
xor
mov
pusha
loop
dec
pop
jecxz
out
lock
out
jne
test
lods
shl
sti
mov
inc
std
xchg
stc
dec
dec
mov
lods
pop
rol
dec
jb
sub
mov
xchg
cmp
bound
aas
pop
pop
int
ja
in
xor
inc
and
push
jecxz
xor
fwait
inc
mov
push
ja
les
add
stos
pop
mov
mov
out
das
xchg
pop
rcl
ja
xlat
and
lahf
pusha
imul
push
cli
jmp
and
int
fld
push
mov
mov
jg
cdq
retf
push
xchg
pop
dec
and
xchg
push
push
jnp
out
mov
aaa
push
(bad)
fcmovnb
fmul
cmps
and
aaa
rol
pop
jnp
xor
jbe
movs
jmp
dec
loope
cld
nop
pop
pop
add
dec
scas
and
or
or
push
add
mov
jbe
imul
jmp
pop
jb
xchg
add
cmc
ja
xor
daa
mov
cmps
cmp
cmp
mov
push
cmps
push
rsqrtps
mov
les
pop
lds
jp
inc
cli
cld
ins
cmp
xor
mov
jl
jbe
xchg
xchg
ins
int3
xor
inc
fcom
sub
sbb
jns
mov
mov
xor
xor
out
add
mov
adc
pop
or
mov
sbb
imul
rol
(bad)
pop
repnz
cmp
push
xchg
and
jbe
outs
fs
jnp
(bad)
stc
inc
and
mov
xor
test
call
xor
jo
push
stos
xor
clc
adc
or
in
lahf
xchg
sub
inc
xlat
jmp
xor
push
sub
ja
xchg
movs
idiv
in
jb
repz
mov
pop
jae
hlt
or
std
outs
mov
stc
scas
scas
jp
std
and
jne
cmc
mov
inc
jb
mov
ins
inc
sub
shl
dec
adc
mov
dec
jns
fwait
xor
in
addr16
addr16
fwait
ins
(bad)
mov
push
or
inc
push
fwait
dec
mov
dec
sahf
cmp
push
wbinvd
mov
adc
mov
pushf
cmp
jecxz
imul
and
and
in
aaa
dec
mov
in
fist
in
mov
popa
and
or
ss
nop
loopne
loope
jle
retf
xchg
call
inc
push
add
test
inc
push
or
dec
dec
fild
sbb
sbb
movs
cwde
test
clc
and
into
daa
mov
sbb
sbb
dec
ss
ret
sub
add
xlat
in
push
cwde
mov
push
popf
cmps
lds
mov
retf
scas
scas
fwait
pop
movs
xor
and
(bad)
pop
gs
clc
jns
and
add
pop
push
mov
push
push
das
mov
data16
test
adc
popa
(bad)
mov
xor
rcr
jecxz
mov
pop
sub
push
ja
cmp
mov
retf
adc
push
xor
sub
aam
pop
inc
mov
adc
ins
je
sar
retf
data16
mul
call
in
adc
shl
ja
stos
jns
push
sbb
ret
pop
mov
sub
xor
jl
inc
cmp
leave
xor
xchg
sar
out
add
jmp
lods
jmp
jp
mov
pop
sub
arpl
mov
mov
or
xor
lods
adc
jl
mov
lock
inc
mov
cmp
inc
cmp
sub
mov
out
retf
sbb
push
inc
adc
push
ret
pop
add
sbb
and
test
sar
mov
stc
pop
sbb
jge
or
xchg
sbb
mov
(bad)
out
daa
jmp
adc
cdq
hlt
div
test
popf
mov
dec
cmp
mov
inc
jns
js
mov
jp
fnstenv
mov
mov
or
xchg
int3
jnp
test
loopne
stos
pusha
xchg
les
cmc
pop
ret
outs
or
cmps
gs
fs
pop
sahf
push
(bad)
int
or
cdq
popf
push
(bad)
hlt
pop
mov
dec
inc
jo
mov
enter
inc
aaa
out
cmps
iret
sub
out
fs
sub
mov
push
mov
add
test
cmc
push
iret
sti
sbb
sub
jnp
sar
xor
retf
sub
lds
mul
leave
push
ret
xchg
adc
jp
int3
mov
int
pop
in
or
xchg
mov
jae
rcl
mov
jnp
and
inc
sbb
enter
sub
mov
xchg
and
mov
cmc
dec
xchg
jmp
cmp
jbe
pop
out
in
mov
push
xchg
dec
xchg
mov
cmp
cmps
mov
int3
and
and
add
inc
movs
cdq
fst
gs
xchg
pop
and
ror
and
jo
xchg
cmc
daa
mov
sub
test
stc
ss
jb
mov
pop
lea
enter
div
mov
imul
outs
adc
add
test
(bad)
mov
fcmovu
xor
fnstenv
gs
lea
(bad)
(bad)
cmp
xchg
aaa
add
dec
cli
mov
cmp
jp
sub
loop
xor
ins
outs
nop
or
xchg
test
gs
mov
out
bound
lock
sbb
popf
mul
shr
sti
out
lods
fisubr
aas
in
sar
mov
ret
inc
mov
jbe
xor
add
loopne
cmp
popf
mov
retf
mov
into
shl
mov
retf
dec
bound
cli
xchg
fdivr
xlat
or
loop
or
fimul
push
mov
mov
cld
ins
in
fimul
loop
lea
iret
cmp
adc
and
pop
out
jbe
jae
push
test
mov
add
push
loope
sub
jmp
pusha
sbb
pop
out
xlat
mov
es
icebp
shl
pusha
mov
ror
sub
int
add
into
ret
lahf
mov
out
inc
inc
or
push
imul
les
repz
jle
int
cmps
call
loope
loope
out
std
cld
xchg
fsub
(bad)
mov
add
aas
sub
mov
or
pop
mov
shl
int
and
fld
jmp
xchg
xchg
push
(bad)
cmp
or
int
mov
xor
movs
push
ss
cdq
imul
and
inc
sbb
push
pop
or
mov
xchg
pop
pop
mov
mov
aaa
xor
mov
aaa
push
es
or
rcr
scas
xchg
sbb
xchg
jle
scas
push
sbb
rcl
xor
push
daa
adc
sub
adc
lock
lods
aas
inc
into
cmp
fs
mov
ret
push
fsub
jae
js
and
sub
adc
das
rol
sti
retf
add
mov
aaa
enter
pop
dec
ret
es
in
xor
dec
cld
popf
cmp
add
imul
push
ins
out
fistp
popf
add
xchg
pop
add
sub
add
push
fwait
data16
leave
xchg
pop
(bad)
out
out
(bad)
(bad)
mov
fwait
sbb
idiv
sahf
dec
iret
rcl
movs
sbb
pop
jg
dec
cmp
inc
sub
mov
dec
inc
fwait
stc
push
jne
pop
in
fs
fistp
sub
ins
pop
mov
cmp
push
xchg
sti
fbstp
dec
inc
std
and
cmp
aaa
cld
sbb
sbb
sub
mov
cld
dec
sbb
jl
jns
pop
xor
dec
inc
scas
xor
nop
loop
dec
dec
or
xor
int
mov
pop
js
mov
mov
movs
xchg
pusha
pop
scas
or
or
scas
push
(bad)
jmp
aas
sub
minps
es
xchg
sub
mov
leave
sbb
sub
or
cmp
dec
jl
aam
shl
jl
or
add
add
enter
in
mov
xor
inc
mov
jecxz
lods
ins
mov
outs
sbb
imul
inc
jb
mov
add
cwde
ror
or
push
nop
mov
xchg
mov
mov
arpl
aad
xchg
shr
popf
icebp
mov
les
push
jnp
mov
cmp
xlat
(bad)
or
jg
sub
leave
or
sbb
aam
xor
or
addr16
test
popf
(bad)
jge
stos
movs
daa
lds
push
sub
mov
call
sub
in
adc
xchg
mov
fwait
xor
mov
mov
shr
inc
or
imul
test
cmp
loopne
mov
hlt
cld
cmc
imul
pop
dec
shl
mov
popa
mov
shl
or
sbb
sbb
or
lock
xchg
xchg
mov
cwde
and
lock
pushf
fistp
in
sub
movs
mov
ror
ss
mov
sbb
enter
jnp
cs
cmp
pusha
ins
cli
jmp
in
dec
jl
mov
cmp
(bad)
fnstsw
lods
test
cli
dec
sbb
or
pop
scas
dec
jnp
dec
push
add
adc
dec
call
push
movs
xchg
pop
sbb
push
fdiv
js
mov
stc
retf
rcr
js
retf
dec
mov
adc
aas
fwait
cmovae
mov
test
loopne
(bad)
cmc
loope
sbb
hlt
cmp
mov
or
xchg
(bad)
das
pop
add
test
cmps
arpl
push
inc
test
mov
lock
dec
cdq
mov
xchg
adc
test
or
dec
adc
out
pop
inc
rep
or
pop
mov
adc
in
xchg
jmp
leave
sbb
xor
fsubp
and
or
or
or
ja
adc
add
fdivr
push
xchg
js
jmp
shr
aad
inc
adc
jne
mov
mov
dec
mov
jl
xchg
js
cdq
loope
push
xchg
mov
sub
shr
ret
pop
lock
sbb
dec
mov
and
clc
xchg
lods
pop
push
cwde
jo
les
test
or
cmps
popf
or
inc
imul
push
sbb
imul
xchg
test
jae
stos
inc
ja
pusha
add
jo
test
sbb
outs
push
mov
and
es
sub
cmp
jp
test
xlat
shr
xchg
jo
inc
add
adc
dec
stos
jnp
in
sbb
data16
retf
push
adc
sar
ret
imul
clc
(bad)
ins
and
xor
nop
iret
mov
push
cmps
mov
popf
jmp
cmp
cmps
sub
jg
or
jp
jecxz
sbb
cmp
in
sub
rcr
icebp
out
rol
nop
cmc
jb
test
adc
mov
(bad)
fisttp
fistp
jmp
adc
iret
dec
shl
pop
out
test
or
movs
inc
movs
ins
in
and
adc
lds
pop
pop
cmp
mov
aas
sub
cli
call
sub
mov
pop
(bad)
shl
fcmovnb
cmp
xor
adc
sbb
add
leave
mov
sbb
or
cs
test
jp
inc
dec
add
and
sahf
cmps
sbb
jmp
and
lahf
jle
stc
adc
ds
pop
sub
adc
mov
lahf
inc
inc
push
xchg
in
push
scas
out
xor
fcom
out
jmp
lods
int
fidivr
adc
je
cwde
stos
ins
xor
movs
arpl
jp
push
dec
std
jg
jo
nop
sbb
pop
jmp
dec
mov
aas
adc
pop
ret
idiv
sbb
jg
call
adc
repz
pop
in
aad
cmp
pop
fidivr
adc
ins
mov
xchg
mov
or
les
(bad)
stc
pop
inc
pop
push
popa
jnp
mov
pop
aas
loopne
mov
and
shr
and
sub
pop
push
mov
aad
packuswb
mov
jne
into
scas
adc
pop
mov
cmp
ret
mov
pop
jbe
in
js
sar
les
dec
rcl
mov
sbb
mov
shl
dec
jb
in
push
mov
mov
lock
jl
out
and
or
mov
out
popf
test
mov
cmp
cs
lds
cmp
push
pop
pop
adc
xchg
lods
sti
(bad)
mov
shl
shl
jne
xor
outs
adc
gs
cmp
iret
jno
push
jmp
add
pop
sub
inc
and
mov
or
dec
leave
retf
test
mov
fsubr
jmp
fsubr
inc
lods
jg
stos
les
jo
mov
dec
or
pushf
mov
or
mov
jns
dec
aad
ret
(bad)
mov
nop
dec
push
xchg
adc
leave
jle
cmc
lods
jnp
dec
je
jmp
gs
cdq
dec
push
ins
add
dec
mov
dec
inc
lds
xchg
lahf
test
mov
popa
movs
aas
mov
mov
cmp
sbb
stc
pop
call
ret
clc
into
sti
mov
sahf
cmps
inc
xor
push
pop
cli
adc
dec
xchg
fld
cmp
hlt
mov
mov
aam
gs
adc
jle
in
(bad)
popf
mov
jbe
dec
xchg
imul
mov
adc
cld
mov
mov
(bad)
in
cmps
(bad)
cmp
pop
scas
cdq
jmp
push
mov
xchg
add
in
inc
mov
int3
retf
mov
xchg
push
pop
int
or
fist
sub
imul
push
movs
adc
pop
sar
int3
lods
(bad)
mov
cmp
aas
xchg
into
(bad)
ror
ja
ds
ror
jmp
js
dec
xor
jns
in
cli
jb
test
jg
jge
aas
jmp
xlat
loope
xor
addr16
dec
fistp
out
shl
mov
mov
cmp
in
inc
pop
jo
fiadd
fdivr
adc
cmp
data16
cmps
retf
push
cwde
dec
pop
out
nop
inc
vfrczps
stos
sbb
adc
mov
dec
jne
inc
sub
adc
mov
test
mov
test
dec
cwde
sub
jl
pop
loop
xor
push
cmp
xor
sbb
mov
lahf
nop
dec
jmp
xchg
clc
aas
fnstsw
cwde
(bad)
dec
pop
inc
mov
adc
xlat
dec
mov
jp
or
jge
repz
cli
stc
jge
ret
(bad)
nop
stc
lock
(bad)
aad
inc
bound
in
push
dec
popf
mov
dec
and
or
test
xor
pop
xor
mov
mul
inc
push
push
sub
js
and
mov
pop
dec
pop
or
cmp
mov
xchg
call
std
dec
and
dec
out
mov
and
(bad)
movs
jecxz
outs
scas
mov
dec
fs
in
out
xor
mov
push
dec
cli
jecxz
sub
call
mov
mov
ins
jnp
ins
in
pop
inc
data16
retf
in
mov
hlt
jb
lahf
jne
rcr
loope
add
sbb
dec
cwde
xchg
inc
mov
test
in
popw
outs
dec
pop
fadd
push
lods
inc
ficomp
pop
jg
fiadd
jp
mov
push
scas
int3
xlat
pop
jbe
hlt
rcl
mov
push
mul
add
enter
mov
jns
leave
pushf
add
xor
fist
mov
dec
pop
fnstcw
ret
cvtps2pi
mov
cmp
or
lock
mov
sbb
addr16
clc
stos
pop
int3
int
pop
xchg
xlat
cmp
je
jecxz
mov
(bad)
in
and
inc
mov
push
rcr
loopne
xor
cmp
bound
popf
and
pop
adc
ja
and
adc
mov
dec
jbe
mov
lock
push
pop
jmp
sar
mov
popf
xor
cmp
mov
shl
dec
in
cwde
ins
scas
jp
inc
repnz
inc
loop
fidiv
cmp
push
and
sub
push
push
xlat
lahf
sbb
loopne
jge
sbb
enter
sbb
cmp
pop
mov
gs
gs
mov
sbb
add
jge
adc
sahf
push
mov
imul
data16
out
xor
enter
mov
fwait
in
(bad)
push
and
sub
xor
push
outs
cmp
rol
inc
adc
push
cmp
cmp
aas
adc
enter
jle
pushf
fwait
cdq
fiadd
xor
jbe
mov
push
xchg
and
sub
xlat
or
cs
xchg
shr
dec
fisub
leave
inc
cs
xchg
ss
inc
fsub
stos
pop
mov
inc
(bad)
push
xchg
lods
and
mov
sub
sbb
smsw
ins
xchg
in
xor
ins
xor
fist
iret
cmp
pop
jae
sub
mov
mov
sbb
test
jne
test
fwait
rol
inc
jae
mov
loope
aam
cmp
adc
sub
xchg
into
ffreep
sbb
add
sbb
out
mov
out
cmps
mov
mov
fwait
nop
inc
xchg
call
or
sti
pusha
dec
daa
and
sahf
arpl
(bad)
js
inc
(bad)
jbe
mov
stos
(bad)
cmp
and
dec
cli
push
fstp
ret
(bad)
cmp
sbb
xchg
dec
(bad)
fnsave
adc
or
dec
std
jno
push
or
jbe
lock
ins
xchg
scas
mov
pop
icebp
aas
dec
push
jno
dec
retf
ret
fcom
cmp
and
cmp
and
ret
lods
sahf
mov
cmps
xchg
pop
out
cmp
outs
or
rcr
dec
fdiv
mov
xor
mov
repnz
mov
jmp
rcr
cwde
into
mov
xchg
(bad)
cmp
clc
pop
inc
not
ret
dec
jo
pusha
push
(bad)
pop
sar
jno
mov
idiv
xchg
push
xchg
sub
push
repz
cld
sbb
jno
pop
or
(bad)
(bad)
in
push
mov
not
lods
into
and
mov
pushf
fcom
xor
xchg
inc
mov
jp
adc
mov
push
xchg
dec
cs
mov
dec
cdq
ins
jb
xchg
mov
sub
pop
hlt
icebp
xchg
mov
aas
xor
(bad)
cmp
mov
jae
sahf
xor
sbb
retf
icebp
adc
je
mov
sar
mov
ds
and
and
add
loopne
pop
int3
add
dec
mov
cmc
in
std
cld
adc
(bad)
inc
clc
loopne
push
mov
cli
pop
pop
cmp
and
ins
rcl
ror
pop
test
lock
xchg
mov
mov
neg
retf
out
jae
fbstp
cmp
pop
fistp
fs
and
imul
ins
hlt
jae
loopne
in
mov
jns
adc
mov
aad
mov
push
stos
sub
retf
mov
jne
in
das
lahf
fild
inc
js
std
gs
add
xchg
jp
pop
xor
cwde
pop
xor
jne
or
jl
xor
lods
pop
es
inc
push
push
ror
ret
pop
rol
inc
stos
jo
lods
inc
adc
in
mov
es
out
xor
dec
psadbw
imul
add
cmc
add
iret
mov
cmp
and
jnp
mov
(bad)
mov
sub
test
cmp
scas
call
sub
cmp
stos
das
jmp
pop
add
jecxz
or
mov
inc
rol
pop
stos
push
mov
xchg
mov
inc
or
and
jnp
call
pop
inc
ins
xchg
sub
xchg
dec
mov
ret
or
bound
les
stos
sub
call
nop
repnz
out
mov
shl
je
jp
loope
push
sub
mov
mov
cmp
cmp
mov
sbb
shr
in
push
int
xlat
shl
cmp
(bad)
add
icebp
jmp
inc
xchg
lea
loop
jl
loope
sub
(bad)
scas
push
xor
bound
mov
pop
popaw
cmp
aad
mov
cmp
lahf
push
ins
or
popf
lods
lahf
push
arpl
pop
ja
pop
sbb
sbb
dec
popf
int
mov
fsubrp
in
or
xor
sbb
sar
addr16
iret
lods
mov
xor
xchg
adc
pop
aam
enter
mov
inc
sub
into
clc
and
and
aad
pop
push
mov
clc
inc
mul
xchg
inc
rol
mov
pop
cwde
mov
cmp
lods
in
or
add
aas
sbb
mov
sti
stos
push
jno
cdq
ins
imul
xchg
(bad)
loop
pop
movs
sahf
xchg
lahf
mov
push
adc
or
nop
int3
adc
xor
jge
lea
test
shr
shl
loopne
add
push
push
popa
mov
mov
rcl
sub
repnz
fdiv
inc
test
fild
jb
jp
cmps
push
inc
pop
stos
jmp
xor
out
jp
and
ss
mov
jbe
cmps
cwde
inc
push
cmp
ja
adc
push
call
out
xor
fwait
sbb
frstor
aam
inc
aas
push
sahf
scas
stos
push
jae
sbb
and
cdq
jae
ins
and
dec
arpl
aam
sbb
aaa
iret
retf
fdivp
imul
rcl
jge
dec
adc
mov
stos
add
repnz
loop
(bad)
push
dec
and
xor
sbb
aas
test
(bad)
pop
out
(bad)
mov
or
into
fucomp
push
out
push
cmc
xchg
inc
(bad)
addr16
lea
mov
cmp
pop
imul
mov
mov
cmp
push
sbb
(bad)
adc
out
cmc
xchg
push
test
shl
es
std
push
xor
scas
push
sahf
sub
mov
xchg
mov
loopne
pop
push
mov
jb
pop
pop
add
mov
int
sbb
fistp
or
and
(bad)
in
movs
int
sub
mov
ja
xor
adc
and
rcr
stos
mov
popf
pusha
dec
sbb
sub
or
push
movs
test
xor
jg
xor
cmp
mov
add
cmp
je
and
aaa
stos
dec
push
fmul
mov
cmp
fwait
jb
mov
and
nop
mov
dec
aaa
arpl
mov
or
loopne
mov
loop
stos
stos
xor
sbb
rcl
jbe
cmc
inc
je
add
ds
dec
mov
pop
or
daa
lds
push
dec
mov
inc
nop
sub
inc
mov
daa
les
dec
jge
push
pop
dec
adc
and
sti
mov
sub
jle
adc
mov
dec
sub
popf
repnz
cmp
lods
cmp
pop
(bad)
lods
ficomp
mov
mov
pop
lahf
leave
cmps
ja
xor
xor
inc
mov
ror
and
mov
xchg
ds
xor
dec
mov
test
(bad)
daa
cld
out
add
mov
push
loopne
out
icebp
mov
xchg
jmp
lods
fwait
pop
pop
jo
pop
fwait
and
pop
add
and
mov
pop
xlat
sahf
lds
sbb
(bad)
scas
inc
aam
cmp
jecxz
sbb
scas
xchg
jmp
jle
in
shl
push
inc
lds
mov
pop
push
sbb
push
test
pop
bound
or
ins
lods
sbb
mov
iret
push
xchg
ror
cli
cmps
and
call
mov
dec
pushf
pop
pop
inc
adc
cmp
sbb
movs
leave
mov
fwait
push
(bad)
xlat
jb
mov
idiv
sub
push
xchg
jnp
ins
je
mov
(bad)
outs
mul
bound
add
push
mov
and
xchg
imul
or
inc
sbb
and
pusha
fiadd
retf
lock
bswap
cwde
and
push
retf
jb
dec
retf
mov
and
(bad)
shr
push
inc
out
in
iret
sahf
pop
jo
jo
ret
out
jge
test
ins
mov
jmp
pop
ror
dec
cmp
call
(bad)
dec
sbb
jecxz
mov
and
adc
mov
(bad)
dec
shl
cdq
jne
repnz
dec
xchg
scas
add
jmp
jle
cmp
push
xchg
loope
(bad)
sbb
clc
cmp
rol
push
imul
pop
sub
pusha
retf
add
jb
aad
or
mov
aad
inc
fild
sub
pop
ret
and
cmps
inc
cmp
inc
lock
inc
push
inc
mov
xchg
push
sbb
mov
out
mov
lea
outs
xchg
sbb
retf
arpl
leave
or
int
xchg
fwait
(bad)
mov
sub
xor
jmp
push
shl
mov
cdq
pop
(bad)
scas
lods
fwait
add
ror
lods
jnp
mov
and
mov
inc
cmp
inc
jecxz
cdq
(bad)
jnp
adc
and
stos
or
pusha
cld
inc
jne
jbe
popf
scas
out
pop
dec
adc
(bad)
xor
(bad)
fcom
loope
(bad)
out
sub
out
push
(bad)
xor
xlat
test
dec
bound
xor
xor
xor
enter
test
xor
sar
sub
(bad)
rol
out
cmps
bound
cmp
cmps
(bad)
xor
xor
scas
sbb
sbb
rcl
pop
push
ror
ss
add
xchg
dec
scas
shr
or
clc
scas
cmps
inc
arpl
iret
inc
sbb
stos
call
push
fcomp
inc
and
movs
ret
pop
inc
daa
jae
data16
fwait
xchg
sbb
fsubr
lods
push
fmul
mov
add
sbb
mov
pop
out
add
aaa
imul
cld
mov
(bad)
or
sub
(bad)
shl
imul
xor
test
push
div
dec
sub
xlat
and
fstp
mov
dec
and
sahf
outs
pop
cmp
addr16
repnz
cmps
call
imul
movs
push
sbb
inc
pop
ss
fld
and
icebp
add
add
and
std
fnstenv
pusha
xor
pop
stc
jo
outs
lods
mov
sbb
pop
mov
xchg
push
repnz
mov
mov
(bad)
sahf
xchg
mov
xor
mov
ror
or
retf
and
jb
push
mov
outs
ror
sbb
leave
cld
and
mov
push
xchg
push
repz
push
jmp
adc
push
stos
add
jmp
mov
mov
shl
or
cmc
ds
mov
and
pop
loopne
sahf
sbb
clc
cdq
fdivr
mov
mov
push
movs
pusha
pop
xlat
add
mov
lea
test
push
mov
add
mov
out
xchg
add
outs
out
shr
hlt
jge
and
dec
push
cwde
fmul
jo
or
shr
mov
or
jge
fld
hlt
lds
dec
fs
jle
fisubr
or
mov
dec
in
out
pop
push
ja
stos
retf
out
(bad)
fidiv
sbb
dec
inc
ds
mov
and
xchg
sahf
adc
pop
and
test
mov
arpl
in
cmc
add
sub
xchg
jecxz
xchg
cmp
push
lea
cmp
cmp
pop
pop
mov
sti
ss
mov
mov
xor
popf
push
shl
mov
inc
xor
sti
jno
test
push
js
or
fild
es
out
mov
mov
and
xchg
jbe
hlt
nop
xchg
(bad)
aad
xchg
mov
xchg
add
adc
mov
mov
jp
add
repz
xor
and
dec
out
(bad)
xor
call
out
jnp
or
mov
xor
out
inc
les
xchg
mov
test
loopne
mov
xor
or
loope
lods
fidiv
add
mov
cmps
dec
leave
inc
rcl
add
lock
ja
mov
loopne
out
shl
stos
mov
sti
adc
mov
aas
je
pop
cmp
(bad)
gs
movs
les
xor
adc
(bad)
(bad)
aas
and
mul
daa
in
inc
inc
test
push
xchg
and
(bad)
lds
ss
cmp
inc
ja
pop
jge
pop
das
test
cmp
cwde
fadd
inc
jbe
lock
iret
add
cmps
and
out
mov
repz
loope
cmp
loop
sub
ins
adc
pop
sub
xchg
push
int3
sahf
mov
xchg
add
xor
out
mov
mov
dec
mov
xor
mov
push
xor
dec
and
fist
lahf
xor
in
sub
mov
jl
pop
inc
sub
enter
es
bound
or
or
int
or
test
call
cdq
xor
jmp
imul
mov
int
sbb
ret
jbe
push
cmc
jg
inc
xchg
cmp
popa
jmp
xlat
or
outs
or
in
sti
test
movq
sbb
sahf
push
pop
sbb
xor
sbb
mov
pmullw
or
mov
mov
or
addr16
idiv
fistp
lahf
leave
or
lods
sbb
sbb
adc
xchg
jno
sub
sub
fisubr
xor
xchg
xchg
loop
ins
cmps
stos
(bad)
movs
jmp
leave
jge
jmp
bound
jnp
xor
xor
icebp
cmc
jg
xor
jmp
(bad)
mov
mov
sub
mov
xchg
popa
push
fisub
scas
or
mov
loopne
xchg
push
fmul
test
dec
mov
pop
mov
out
push
push
or
jae
xor
loope
fadd
je
(bad)
dec
lods
inc
xchg
add
mov
hlt
shr
gs
and
cmp
cmps
out
xor
ds
rcl
jmp
jge
nop
call
test
push
mov
lods
movs
and
cdq
or
mov
test
jg
mov
fisttp
in
or
mov
add
adc
xor
adc
xchg
pop
sub
add
call
(bad)
fldcw
pusha
xchg
fwait
ror
push
mov
pop
test
jle
mov
dec
mov
adc
push
jno
cmp
fidivr
push
mov
sbb
mov
and
fmul
fnop
fiadd
stos
mov
dec
fs
dec
pop
rcl
xchg
(bad)
push
jmp
das
cmp
retf
xchg
nop
sar
in
enter
test
pop
ins
pop
lahf
jnp
aad
jl
mov
std
pop
popa
call
out
ficomp
jmp
fistp
daa
cwde
or
jge
fnstsw
retf
cmps
mov
cmp
pop
repnz
pop
pop
loop
and
movs
fidiv
ds
mov
lock
push
fsub
ret
test
xchg
jmp
ja
ficomp
jle
and
inc
aam
fdiv
jae
stos
push
aas
loop
adc
test
(bad)
fcom
hlt
sub
outs
jg
push
(bad)
stc
stos
jge
dec
int
ins
jne
cmp
xor
stos
(bad)
enter
dec
into
(bad)
cld
out
test
mov
fld
add
call
xchg
sti
fcom
lock
push
adc
mov
cld
neg
out
test
enter
xor
out
(bad)
call
mov
sti
lock
cwde
outs
pop
add
sbb
mov
pop
cmp
scas
push
outs
lds
add
jns
and
stc
push
dec
enter
add
loopne
cmp
mov
lods
rep
push
push
nop
pop
pop
lods
pop
or
jge
std
inc
cld
jge
stos
popa
mov
xchg
cmp
cmp
lods
cmp
add
imul
mov
xor
aam
pop
pop
sbb
lds
push
outs
and
mov
lock
adc
inc
adc
iret
push
ret
xor
or
inc
xor
sub
cld
cmps
sete
dec
push
mov
xor
adc
or
(bad)
lods
mov
cmp
std
bnd
in
xchg
movs
sar
cwde
adc
dec
aad
mov
sub
sub
push
es
arpl
ret
fwait
and
xor
std
xlat
pop
inc
shr
int
enter
push
push
bound
xchg
inc
loop
fisubr
icebp
loope
jno
adc
mov
int3
mov
dec
cs
sbb
popf
sbb
sti
in
mov
fidivr
add
mov
popf
pop
dec
xor
sahf
pop
add
add
mov
out
mov
fnstsw
push
fidiv
inc
arpl
stos
or
push
dec
mov
mov
sub
imul
nop
clc
enter
xchg
push
lds
sahf
das
inc
mov
pop
ins
mov
in
or
xor
adc
inc
and
mov
dec
dec
arpl
xlat
adc
gs
jl
cli
les
nop
shr
xchg
cmps
fwait
mov
pop
shl
sub
je
loop
xchg
inc
push
ins
(bad)
ret
jle
nop
jp
in
push
mov
mov
jnp
pop
in
mov
out
xchg
mov
mov
mov
push
push
cli
mov
daa
mov
mov
in
mov
jne
fstp
into
add
dec
leave
aaa
cli
mov
popa
hlt
imul
add
add
or
aad
jl
test
dec
inc
sub
pop
out
mov
fistp
jg
adc
outs
mov
sbb
push
jl
sbb
(bad)
fst
retf
mov
int
mov
inc
mov
addr16
pop
inc
sub
nop
sbb
shl
out
jns
addr16
sbb
retf
sti
arpl
and
xchg
xor
ror
mov
lea
inc
jle
push
sbb
les
xchg
or
jp
jle
pusha
inc
mov
add
push
imul
sahf
inc
sbb
call
repnz
push
push
sub
dec
lock
dec
icebp
fcomp
adc
xchg
pop
jle
mov
add
aaa
xlat
mov
fs
icebp
sbb
dec
fdiv
push
ss
xchg
mov
or
dec
sbb
pushf
pop
bound
iret
loopne
lea
and
mov
movs
jl
mov
(bad)
mov
xchg
cmp
pop
add
jg
sub
mov
add
jle
cli
add
mov
xchg
ds
dec
iret
iret
sub
sub
int
hlt
jp
aaa
imul
cs
sbb
rcl
adc
pop
ja
sahf
addr16
mov
daa
cmc
jbe
cmp
inc
jle
rol
and
outs
aaa
shl
ja
outs
xor
cs
adc
and
sub
ficomp
mov
mov
inc
paddusb
lds
push
rcr
jmp
adc
dec
test
mov
movs
mov
or
mov
mov
dec
rcl
outs
xchg
sbb
out
ret
cdq
jl
inc
jbe
xor
mov
out
jecxz
pop
cmps
and
retf
push
push
jnp
scas
aas
pop
mov
push
fld
adc
mov
mov
adc
mov
inc
xor
push
call
movs
into
leave
pop
int
and
rcr
repz
push
adc
xchg
mov
aas
inc
fbld
xor
scas
mov
js
pop
jge
(bad)
cmp
add
mov
mov
and
inc
pop
fst
addr16
inc
leave
dec
das
mov
pop
les
add
push
inc
mov
out
xor
adc
arpl
test
hlt
sqrtps
imul
es
push
dec
jmp
sbb
fldl2e
pop
repz
or
inc
nop
cli
mov
sbb
xor
fisubr
push
inc
fstp
iret
test
sbb
loope
jb
mov
jecxz
cli
loope
inc
jo
outs
mov
xor
mov
out
sahf
(bad)
fdiv
lds
pop
jnp
sub
sub
retf
sti
and
push
enter
add
jge
cs
daa
inc
shr
pop
jno
jne
outs
or
mov
(bad)
(bad)
cmp
(bad)
cld
(bad)
mov
add
jb
xchg
int3
push
stos
mov
xor
lock
adc
mov
cmp
inc
mov
cwde
xor
pop
xchg
xchg
outs
cli
arpl
xchg
sahf
jbe
xor
xor
je
int
push
inc
fst
mov
mov
std
add
rcl
and
xor
(bad)
xchg
mov
cdq
cmp
fnstsw
cwde
sbb
movs
xor
lahf
adc
repz
cmps
dec
xchg
jge
jg
mov
stos
rcl
mov
adc
aas
aam
stc
cmps
cmps
das
push
in
mov
jge
and
ret
jne
inc
loopne
scas
in
sti
mov
pop
mov
mov
or
jne
xchg
ja
sub
inc
xchg
bound
ja
sub
mov
dec
sbb
inc
xor
pop
scas
cmc
addr16
add
lea
mov
test
cmp
pop
lea
xchg
mov
push
and
xchg
xor
inc
out
adc
dec
std
mov
pop
mov
adc
pop
imul
mov
stos
adc
(bad)
and
adc
mov
and
and
mov
adc
and
and
mov
mov
push
jle
pop
push
out
mov
addr16
lods
test
jo
iret
xor
cdq
adc
movs
adc
test
cli
sahf
jmp
jecxz
push
and
mov
push
inc
stc
repz
outs
jns
xchg
cli
mov
push
jge
xchg
ins
push
leave
out
loop
std
lock
sub
retf
int
ins
add
inc
push
dec
adc
cmps
pop
mov
or
aam
test
lods
mov
fldenv
test
in
xor
pop
push
jne
push
jns
repnz
aas
leave
or
jb
cli
scas
pop
outs
xchg
mov
fisubr
mov
mov
mov
push
lods
mov
ins
aaa
push
shl
clc
add
mov
sub
pop
cld
mov
inc
(bad)
rcl
mov
inc
mov
pop
cmp
fisub
dec
sub
test
push
mov
push
repnz
aas
ret
sub
outs
sbb
in
loopne
pop
sub
jmp
cli
loop
movs
mov
mov
in
outs
test
mov
test
(bad)
push
or
push
in
out
mov
push
sti
xor
shr
xor
leave
cdq
nop
xchg
in
inc
push
and
push
ds
(bad)
mov
movs
(bad)
std
inc
jb
adc
repnz
xchg
clc
loopne
mov
jb
dec
or
retf
arpl
gs
sub
repz
pop
stos
adc
cwde
(bad)
not
test
dec
lahf
loop
(bad)
pop
sbb
xor
xor
fmul
pushf
push
addr16
push
lea
dec
ss
mov
enter
jno
nop
lea
xor
lea
sar
stos
and
jl
mov
cdq
sub
jo
outs
jp
rcl
mov
gs
movs
fwait
mov
lods
add
outs
cmp
mov
mov
aam
push
fnstsw
bound
cmp
xchg
cld
push
xchg
fst
out
out
dec
push
rcl
imul
jne
call
in
iret
das
sub
fwait
jp
and
popa
imul
aas
inc
out
sar
pushf
repnz
rol
xchg
mov
push
pushf
ins
retf
or
call
pop
dec
push
fisub
push
push
mov
lds
je
jg
movs
aaa
fwait
mov
cmp
fstp
xchg
je
das
or
mov
std
test
or
inc
test
jbe
push
fwait
call
push
sbb
pop
cmc
xchg
cmps
js
std
mov
add
test
retf
or
pop
leave
inc
mov
inc
inc
inc
aas
in
add
xor
sub
aas
or
dec
sub
or
sbb
mov
cmp
mov
jnp
inc
and
cmp
sub
xchg
sti
out
and
xchg
adc
pop
in
dec
push
fs
mov
jmp
call
test
push
adc
mov
dec
pop
aam
sahf
push
mov
xchg
cmp
cmc
scas
xor
cdq
rol
push
sub
adc
sbb
in
dec
adc
mov
movs
aam
xchg
ja
pop
jns
hlt
inc
out
ins
fsubr
lgs
pop
add
push
pop
mov
ret
mov
in
mov
test
enter
push
or
popf
pop
pop
push
fwait
hlt
into
mov
repz
ds
les
enter
inc
aam
mov
dec
pop
dec
jb
rcl
and
add
sub
(bad)
addr16
push
call
push
pop
loope
out
(bad)
xchg
in
cmp
mov
stc
out
enter
inc
loopne
bound
push
retf
mov
pop
daa
sbb
and
mov
sahf
sahf
mov
stos
imul
in
adc
leave
(bad)
inc
jbe
imul
push
icebp
pop
dec
sahf
cmp
xor
mov
and
adc
xor
xchg
and
xchg
xchg
aad
push
scas
ja
sub
adc
push
icebp
mov
jl
jns
jl
popf
clc
repz
imul
xchg
xchg
jo
xor
push
and
test
std
xor
bnd
clc
pop
mov
xchg
adc
jmp
jl
rcl
leave
xchg
sub
(bad)
js
add
dec
dec
fimul
aas
test
mov
sti
mov
mov
pop
and
adc
xor
test
dec
pop
test
nop
xchg
jbe
out
repnz
sbb
add
push
jbe
mov
or
push
xor
loopne
(bad)
adc
aaa
push
pop
adc
addr16
fsubr
in
arpl
jmp
ret
jge
ins
mov
dec
mov
dec
std
adc
or
repz
cld
adc
xchg
ss
out
mov
or
adc
lods
neg
inc
vmovaps
popf
pushw
fiadd
add
dec
sahf
dec
nop
xchg
(bad)
imul
rcl
mov
popa
add
ins
mov
mov
loop
xchg
aaa
inc
or
dec
or
xchg
add
cbw
mov
jmp
cmps
ret
push
addr16
cmp
mov
xor
retf
loope
mov
add
inc
daa
and
xor
fcom
(bad)
add
mov
cmp
jmp
shr
dec
(bad)
mov
iret
add
sbb
and
push
jl
ss
and
lahf
rcl
in
scas
push
loopne
pop
(bad)
mov
xor
sar
outs
mov
adc
and
aaa
pop
dec
(bad)
std
or
jmp
jae
(bad)
xchg
lods
in
mov
mov
and
sbb
mov
aam
repnz
dec
(bad)
das
xor
(bad)
fstp
push
adc
pop
js
cli
out
fsub
aam
and
add
pop
ins
and
cmps
jnp
inc
mov
fcmovb
or
push
in
cs
scas
mov
aaa
cmp
ins
push
or
pop
in
dec
jnp
ror
inc
stos
retf
ss
xor
gs
dec
in
mov
shl
inc
cmp
and
pop
mov
scas
sbb
pushf
adc
xor
outs
in
inc
enter
frstor
cmc
and
adc
retf
out
ror
cwde
xor
inc
test
xor
jmp
inc
dec
jp
jle
cld
xor
dec
xchg
pusha
xor
push
xchg
sbb
and
arpl
scas
mov
pushf
and
fs
inc
add
inc
aas
lds
sbb
ss
in
in
test
push
outs
fcom
fnstenv
sbb
in
jmp
in
imul
(bad)
rcr
imul
cmc
cmps
push
jne
aas
fdiv
inc
or
add
dec
test
cmp
xchg
mov
imul
sbb
add
mov
lods
cs
mov
mov
xor
xchg
aam
dec
or
sub
jmp
(bad)
loopne
xchg
pop
inc
aaa
mov
les
xchg
cmps
pusha
movs
dec
pushf
pop
sub
pop
mov
sub
mov
push
pop
stc
enter
sub
shl
or
xor
ret
jnp
cmps
add
stos
out
pop
push
push
cs
(bad)
adc
jnp
mov
or
add
adc
push
jmp
dec
mov
scas
inc
adc
dec
adc
loopne
xchg
jmp
push
hlt
and
cmp
arpl
aaa
or
xchg
fidivr
mov
out
mov
ins
mov
ja
sbb
xor
adc
mov
inc
(bad)
jmp
nop
xor
scas
sub
aad
int
cmc
cwde
and
mov
push
xor
stc
call
jns
mov
sub
das
loopne
push
inc
(bad)
mov
aas
jmp
cmp
jne
sub
sub
(bad)
in
(bad)
int
sti
dec
(bad)
mov
test
sti
cwde
lea
inc
pushf
in
xor
stos
ds
jae
neg
fld
push
(bad)
jb
and
scas
jns
inc
gs
add
mov
push
fdiv
xchg
mov
shl
retf
imul
ds
icebp
mov
imul
fsubrp
mov
cmp
add
aam
(bad)
repnz
jp
sub
ins
or
jno
das
nop
xor
push
push
daa
or
cmp
stos
arpl
pop
inc
div
cmps
inc
push
inc
adc
cmp
mov
fsub
dec
mov
out
fild
sahf
popa
jbe
js
int
push
mov
fsubr
js
add
imul
mov
xor
adc
dec
xor
mov
stos
imul
inc
mov
xor
push
(bad)
into
in
out
test
sbb
xchg
je
or
test
sub
sahf
inc
out
push
int
mov
push
ror
and
stos
jmp
add
add
mov
sbb
lds
dec
inc
ss
shl
push
sbb
and
pop
jno
mov
add
dec
xchg
ss
jae
sub
(bad)
push
push
icebp
retf
rol
out
(bad)
pop
jge
gs
pop
fnstsw
dec
mov
and
xor
xchg
lock
sahf
sti
dec
dec
lods
jmp
adc
loop
add
cmps
ins
pop
xchg
jbe
push
hlt
push
or
mov
adc
xchg
cwde
cmc
xor
mov
fwait
loope
pop
pop
jb
pop
mov
in
mov
and
mov
add
lods
cmc
imul
add
iret
in
pop
xor
pop
(bad)
mov
or
cmp
cmp
div
test
inc
mov
fcomi
pushf
mov
(bad)
nop
add
xchg
push
cs
pop
jge
or
mov
add
push
loop
lahf
xor
call
ret
cdq
pop
mov
cmps
adc
push
mov
dec
shr
or
mov
and
mov
fcom
addr16
js
sbb
cdq
pop
sbb
imul
xor
fwait
out
das
ins
(bad)
call
sub
sub
lods
mov
shr
dec
push
stos
enter
dec
adc
pop
(bad)
cmovs
lock
cmps
sub
loopne
jle
lea
xor
mov
sbb
adc
xor
pusha
or
in
cwde
lods
dec
hlt
int3
push
fwait
inc
shl
inc
ins
in
popa
rcl
stos
inc
lock
and
imul
jmp
outs
mov
add
sub
fcomp
cmp
xor
or
mov
mov
ss
loopne
sbb
test
fcom
hlt
sbb
mov
es
shl
inc
ja
(bad)
imul
pop
or
mov
stc
daa
gs
cmp
adc
dec
mov
dec
mov
jnp
cwde
dec
xchg
xchg
dec
std
lods
arpl
aas
aam
ins
in
add
sbb
pop
pop
jb
jb
and
adc
mov
and
adc
les
aas
repnz
addr16
push
lods
and
mov
lahf
ins
sahf
xchg
enter
mov
imul
sub
repnz
cmp
adc
cmp
(bad)
push
rol
je
retf
mov
cmp
and
lods
out
jle
xor
fsubr
sub
leave
stos
inc
add
mov
cmp
add
mov
adc
cmp
dec
fdivr
out
xor
call
in
dec
int
imul
test
and
mov
sbb
jmp
mov
inc
cmps
btc
clc
pop
pop
lds
jae
pop
and
std
push
clc
lea
pop
shl
test
add
std
test
(bad)
cdq
sti
jae
inc
sbb
scas
add
repz
test
jecxz
shl
fcmovb
aam
or
bound
leave
int
fiadd
retf
mov
mov
cld
add
jecxz
add
mov
dec
xchg
cs
pop
jle
fnstcw
dec
js
cmps
push
leave
dec
sahf
es
xchg
mov
ja
retf
movs
adc
xchg
(bad)
adc
pushf
adc
xor
popf
inc
push
cmp
pusha
fmul
sub
mov
dec
mov
stos
adc
adc
jno
mov
lock
push
je
pop
fdivr
push
or
out
xor
jae
pop
std
mov
sbb
xchg
xchg
push
call
stos
dec
cmps
adc
mov
mov
or
aas
cmc
(bad)
jp
sar
or
cmps
inc
scas
jecxz
xchg
xchg
shr
scas
cld
mov
or
xlat
into
or
mov
or
push
pop
jmp
repz
shl
in
lds
out
jp
xchg
repz
test
cmp
jb
inc
movs
fisttp
lods
out
xchg
sbb
mov
adc
call
stc
adc
and
sti
mov
pop
mov
and
xor
loopne
je
mov
or
inc
outs
mov
xor
push
lds
ins
add
push
pop
and
jno
xlat
push
adc
stos
fidiv
in
push
push
pop
xor
out
repz
retf
adc
in
(bad)
adc
dec
outs
xchg
sub
mov
xor
xlat
ret
div
sub
ins
jl
push
lds
jl
outs
pop
jb
sub
daa
iret
lock
stos
in
stos
cwde
(bad)
mov
inc
test
test
adc
movs
jecxz
sahf
pop
xchg
imul
xor
pop
jmp
out
or
and
aas
adc
xchg
cld
retf
test
iret
sbb
aad
int
jne
mov
xchg
scas
loope
test
mov
in
ins
cld
lahf
or
xchg
jge
test
pop
shr
pop
scas
adc
cmp
dec
or
sub
ins
cmp
movs
xor
mov
pop
mov
pop
cmc
cmp
mov
movs
lods
aas
or
mov
jno
dec
cld
test
fdiv
sub
std
cld
outs
or
mov
push
(bad)
aam
adc
mov
jno
sar
call
push
call
ret
adc
int
or
sub
add
fadd
lock
(bad)
in
lea
xchg
sub
iret
shl
dec
outs
xchg
pop
aaa
aam
pextrw
mov
pop
pop
jnp
outs
and
or
out
mov
inc
aaa
lods
mov
das
inc
fbld
push
imul
sub
dec
jnp
mov
imul
inc
hlt
(bad)
pusha
dec
or
adc
dec
inc
and
lea
sbb
test
std
retf
sbb
nop
fimul
push
ret
push
call
jbe
neg
push
ret
xchg
jp
fstp
stc
ins
out
mov
adc
mov
or
xor
imul
dec
inc
cmp
test
out
retf
es
cdq
adc
xchg
mov
and
stos
cmovp
cmps
push
sbb
lea
jae
mov
and
and
(bad)
xor
dec
mov
in
jmp
mov
mov
stos
or
add
jmp
nop
xlat
mov
fcmovu
sub
loop
je
or
icebp
sub
lods
sbb
in
mov
cmp
jecxz
pushf
mov
push
gs
pop
std
imul
pop
mov
pop
dec
(bad)
fild
lds
mov
jno
jb
fcomip
jle
jp
cmp
ja
ja
mov
jnp
and
pop
or
test
sub
add
fs
sahf
lods
inc
inc
test
jg
jno
not
push
xchg
xchg
add
push
mov
mov
adc
outs
xchg
cs
add
movs
ins
dec
mov
mov
bound
aam
retf
pop
adc
shr
ss
add
inc
dec
lahf
scas
sti
jae
cmp
in
mov
adc
jecxz
xchg
(bad)
gs
div
(bad)
fcmove
or
xor
mov
pop
push
mov
dec
jle
jecxz
into
das
xchg
jnp
(bad)
repnz
lods
lea
fisub
jae
icebp
js
xchg
xchg
lods
fnsave
mov
movs
jmp
jns
mov
jno
pop
movs
je
jecxz
loopne
pop
mov
in
cwde
sbb
fild
movs
adc
test
es
mov
add
ret
mov
fwait
and
push
arpl
adc
or
out
fsubr
mov
lods
shr
out
enter
or
push
add
mov
pop
test
cmp
cli
jb
imul
mov
sub
dec
add
out
mov
fisttp
jmp
out
mov
and
adc
pop
test
loope
jnp
clc
xor
push
addr16
cmp
sub
int
adc
mov
xchg
mov
fcomp
mov
adc
out
cmp
pusha
mov
or
scas
xchg
es
ins
or
test
outs
jo
pop
jmp
jle
int3
add
xor
add
shr
dec
test
or
sbb
cmc
ror
scas
shr
ret
cmp
ficom
push
sbb
jne
or
jl
adc
ret
(bad)
std
pcmpgtw
lods
xchg
(bad)
mov
ds
sti
test
ss
xchg
imul
fwait
les
sti
cmps
xchg
test
aas
jo
fs
cmp
push
adc
call
ret
add
daa
jecxz
out
ins
retf
leave
repnz
in
test
arpl
int3
cli
ret
and
pop
and
ud2
outs
lods
dec
mov
sbb
loope
lock
aam
les
jecxz
xchg
jge
div
jno
ficomp
bound
pop
jecxz
xor
push
call
test
xchg
fisubr
inc
ins
jbe
dec
push
aas
sbb
mov
ret
pusha
dec
loope
pop
mov
and
das
dec
cmp
dec
rcl
sub
ror
mov
pop
cmp
mov
arpl
cmp
xor
call
jl
jne
rcr
js
outs
push
jmp
arpl
or
into
adc
mov
sub
rol
dec
out
inc
(bad)
sbb
scas
retf
iret
rcl
clc
test
xor
mov
fiadd
les
mov
xchg
retf
je
push
xchg
(bad)
test
pusha
enter
dec
mov
mov
pop
xlat
call
cli
xchg
rcl
mov
neg
ret
xchg
jno
aam
sub
sub
data16
(bad)
mov
(bad)
mov
(bad)
(bad)
sbb
adc
dec
lods
(bad)
jbe
leave
ja
addr16
fld
(bad)
fld
push
sahf
mov
pusha
or
jecxz
gs
fdiv
popf
rol
or
or
or
fmul
sub
jge
cmps
cmp
rcl
fs
push
and
cmps
loopne
ins
fidiv
arpl
pop
repz
fucomip
sub
mov
xor
sub
and
mov
cmp
je
mov
sbb
mov
(bad)
arpl
cmps
adc
mov
pop
div
lds
test
jle
test
rcl
ret
jle
cmp
mov
data16
fdivr
sbb
scas
add
lahf
pusha
xor
inc
enter
clc
outs
int
hlt
out
mov
mov
sub
xchg
mov
pop
aam
xchg
xchg
jp
cmps
fiadd
mov
or
lahf
popa
inc
call
(bad)
dec
fiadd
popf
push
shl
iret
add
push
pop
daa
repnz
dec
(bad)
out
jnp
clc
mov
mov
aaa
push
cmp
test
push
sub
xlat
sahf
and
and
je
std
call
mov
ret
mov
pushf
imul
imul
sub
lods
and
in
pop
test
xor
and
sub
js
sub
push
sub
repz
js
cli
sti
push
fsub
xor
adc
add
mov
and
iret
jne
inc
xor
xor
push
hlt
adc
repz
adc
cli
or
jmp
pop
xchg
fild
leave
outs
push
lods
ds
popa
jno
aam
sbb
xchg
or
fs
loopne
xchg
clc
jp
call
pop
cld
out
mov
add
pop
lahf
popf
adc
call
jp
shr
jg
ins
pop
enter
lea
dec
cmc
std
fadd
or
jns
cli
imul
or
inc
or
xchg
out
scas
mov
or
sub
js
rol
adc
cmp
dec
xchg
fwait
enter
ret
adc
mov
push
mov
xchg
sub
sbb
test
stc
ret
xor
outs
sar
in
out
in
push
(bad)
sub
or
fst
in
lds
lock
imul
push
retf
add
add
mov
ret
fsubp
jmp
dec
pop
mov
loop
sbb
or
push
cmp
cli
xor
or
xchg
add
push
test
mov
mov
cmp
out
jmp
neg
and
mov
inc
jecxz
(bad)
sbb
neg
jle
pusha
inc
inc
mov
xlat
sub
mov
lock
sbb
inc
lods
sbb
push
ins
push
mov
aas
xlat
xlat
loopne
adc
mov
mov
adc
in
xchg
mov
push
popf
and
and
aam
jnp
pop
fisubr
js
fidivr
or
cmp
std
retf
mov
in
push
pop
rcr
mov
xchg
push
jl
loopne
in
lods
icebp
ja
shl
cmc
push
js
jbe
fisttp
push
cmp
add
push
mov
fcmovnb
dec
cmp
cmp
cmc
mov
je
inc
imul
addr16
popf
cmp
ret
je
pop
sbb
jnp
cli
jbe
xchg
adc
mov
mov
pop
push
push
(bad)
mul
test
inc
jno
dec
xlat
mov
pushf
inc
mov
fsubp
lea
lds
mov
hlt
(bad)
clc
sbb
push
call
(bad)
adc
fld
jnp
js
pop
popa
xor
inc
movs
xchg
cmp
add
xor
push
pop
ror
or
xchg
aaa
lock
dec
jmp
mov
and
push
push
mov
xor
(bad)
(bad)
pop
add
push
(bad)
into
aad
and
push
(bad)
je
adc
push
pcmpgtb
(bad)
jmp
mov
and
fidiv
inc
jnp
dec
cli
shl
clc
jmp
int
and
std
rcr
js
mov
fidivr
push
cmp
in
mov
test
xor
test
out
test
call
jmp
xlat
dec
mov
lods
mov
test
dec
ja
aaa
and
cmp
pop
pop
int
js
dec
pop
mov
shr
loope
push
mov
(bad)
fst
and
retf
je
fnstcw
call
cmp
or
test
dec
and
push
stos
cmp
push
xor
scas
and
or
jno
jmp
dec
retf
lds
lods
imul
gs
aaa
mov
sbb
sbb
jnp
dec
jno
sbb
cmp
xchg
fucomi
ss
ss
inc
aas
fist
sar
clc
jge
push
add
ficomp
mov
xchg
dec
mov
push
or
cld
test
cmc
push
jge
push
ins
xlat
out
dec
push
dec
hlt
int3
pop
or
adc
dec
pop
mov
jle
mov
daa
not
leave
pop
sbb
xchg
mov
mov
stc
(bad)
loope
ins
adc
movs
xchg
retf
(bad)
lods
xor
ins
cmp
je
mov
xchg
into
cwde
test
and
iret
jge
lahf
inc
inc
rcl
push
mov
add
clc
lahf
(bad)
(bad)
sti
jae
sbb
mov
pop
xchg
push
mov
ja
push
pop
call
push
cmc
sub
mov
inc
mov
in
fs
and
push
cmc
jb
xchg
int
test
mov
xor
or
sub
out
add
jl
clc
push
sbb
fisubr
adc
(bad)
mov
mov
or
pusha
movs
or
in
jbe
js
jp
sbb
test
sbb
lods
and
imul
mov
pushf
or
adc
pop
adc
std
dec
xlat
aaa
int3
adc
and
pop
sub
or
add
fild
and
and
ja
xchg
inc
dec
fs
push
jp
fcmovnbe
cmps
xchg
sbb
sahf
out
push
mov
push
adc
xchg
push
stos
mov
aad
xor
ss
and
xor
cwde
ss
cmp
je
jmp
popf
mul
lods
std
retf
fs
bnd
adc
iret
xchg
(bad)
sub
and
jae
mov
push
xchg
popf
mov
lahf
fsubr
mov
or
nop
cmc
dec
aad
std
jmp
sub
mov
and
mov
fxch
pop
stos
sbb
push
in
ffreep
xchg
add
dec
gs
or
mov
jae
cmp
and
xchg
rcl
add
arpl
arpl
xor
mov
test
jp
ds
adc
cmp
mov
mov
xchg
outs
jle
ret
add
(bad)
imul
iret
call
mov
push
cli
mov
jmp
add
inc
dec
in
jmp
cmp
xor
cli
ret
leave
adc
xor
popa
mov
into
mov
or
scas
shl
(bad)
int
repz
xor
mov
iret
enter
int
inc
mov
ss
fstp
inc
ins
pop
js
and
fwait
push
mov
outs
ins
lea
es
push
in
test
push
sub
mov
jp
sub
mov
ret
cmps
fbstp
adc
push
push
mov
aad
lea
outs
fwait
cmp
les
stos
or
xchg
aas
std
int3
mov
ja
ror
aam
(bad)
(bad)
bswap
sbb
inc
leave
inc
push
xlat
ins
add
dec
adc
fnsave
(bad)
in
pop
imul
xor
sbb
jl
lods
lock
aad
mov
rcr
jl
les
fst
daa
or
mov
mov
sbb
mov
jbe
sub
(bad)
int3
scas
leave
into
mov
ret
mov
jb
ret
(bad)
ret
mov
out
xchg
pusha
or
cmc
sti
daa
call
fnstenv
pusha
xor
mov
adc
rcl
jne
js
test
mov
jecxz
sub
hlt
pop
push
pusha
sub
sub
xchg
imul
pop
inc
cmc
pop
mov
push
outs
ins
rcl
cmp
and
adc
add
jae
xor
sar
mov
mov
ins
retf
pusha
and
repnz
jb
xor
(bad)
arpl
ds
lods
pop
jl
jmp
mov
fcom
and
sub
sbb
ins
pop
push
mov
sar
or
scas
cld
lds
int
in
(bad)
in
xlat
cwde
pop
push
mov
dec
cmps
movs
retf
mov
jmp
mov
push
ds
mov
sbb
sub
push
stos
xchg
sti
pop
jae
ss
jecxz
adc
std
xchg
ret
fs
jae
pop
mov
push
mov
cs
movs
mov
or
inc
pushf
ror
mov
push
dec
stos
stc
jnp
shr
movs
xchg
or
and
xchg
push
scas
stos
push
push
mov
fcmovne
int3
mov
das
add
jmp
call
inc
data16
dec
cdq
mov
push
in
fdivr
pop
xchg
scas
jecxz
sahf
xchg
loopne
pop
in
movs
mov
fstp
pop
mov
sub
cmp
pop
lahf
xlat
popa
mov
cmc
xor
jecxz
xor
xchg
cld
adc
cli
fild
adc
mov
cwde
(bad)
sbb
add
in
jmp
popf
mov
push
adc
cmc
push
enter
sub
push
jge
mov
adc
shr
cwde
cli
pop
ss
(bad)
add
stos
out
test
xor
xchg
cwde
hlt
xchg
xchg
xor
sbb
push
sub
xchg
ror
into
adc
ss
imul
cli
xchg
mov
clc
cs
rol
adc
mov
aas
retf
fs
stos
mov
nop
push
jge
adc
sbb
lods
test
push
icebp
sbb
shr
popf
adc
ins
dec
mov
mov
fisubr
cmps
xchg
cmc
fidiv
push
xchg
sbb
iret
push
jbe
adc
xlat
bound
jae
mov
xor
jmp
nop
push
dec
cmp
pop
mov
fisubr
sbb
arpl
ins
or
jne
sbb
stc
mov
inc
loopne
inc
aam
test
mov
inc
daa
(bad)
jns
es
and
outs
xchg
aad
mov
jg
xchg
loope
xchg
mov
aam
inc
cmp
mov
xchg
xchg
jne
or
dec
sbb
push
adc
mov
mov
aad
pop
pop
sbb
sbb
push
stos
sbb
daa
lock
imul
cmp
add
pop
dec
add
jp
xor
neg
call
in
mov
jge
inc
sub
test
mov
cmp
fcom
adc
add
sub
loop
movs
push
adc
sahf
retf
ds
icebp
cdq
je
out
mov
jnp
xchg
aam
sbb
mov
dec
div
push
xchg
retf
push
in
or
aas
mov
repz
or
int
push
jo
out
daa
add
jns
push
jmp
or
xchg
pop
push
sbb
jg
cdq
pop
push
pop
xor
and
cmps
test
ja
sub
add
inc
add
cmc
cmp
push
adc
adc
xor
retw
aam
or
retf
(bad)
pop
pop
stos
bound
retf
stc
xchg
xchg
adc
pop
pop
addr16
repnz
jle
adc
stos
dec
xchg
mov
out
xchg
inc
cmp
cmc
adc
inc
push
xor
and
mov
std
js
sub
lea
mov
mov
das
add
and
into
dec
mov
cmp
mov
xchg
mov
pop
mul
cmp
cmp
test
add
lock
jno
adc
ffreep
mov
add
fisubr
cld
xor
unpcklps
outs
test
inc
inc
lds
test
out
inc
inc
(bad)
mov
xchg
pop
cmp
cmp
frstor
push
and
xor
dec
jg
pop
or
push
jb
push
in
cdq
lods
mov
aad
cmp
and
mov
add
xchg
fldln2
int
dec
add
adc
add
(bad)
(bad)
int
shl
arpl
jg
add
pop
push
stos
add
(bad)
std
cmp
mov
push
xor
and
xchg
or
push
push
pop
std
add
pop
inc
test
adc
xchg
jo
jg
xchg
xchg
adc
inc
call
addr16
lods
push
pop
test
sub
push
cmp
daa
xchg
out
mov
inc
out
aas
ret
push
mov
cmp
and
mov
xchg
push
pop
mov
in
and
cwde
push
mov
lods
mov
cdq
aas
cmp
repnz
(bad)
icebp
pop
test
test
mov
push
push
sbb
popf
cli
stc
or
shl
or
cs
ins
xor
mov
sub
repz
sahf
pop
out
gs
outs
std
ficom
inc
xor
fucomp
cs
outs
mov
xchg
cmp
ja
inc
mov
rcl
inc
mov
(bad)
or
jne
in
lea
xor
jb
loopne
mov
sbb
mov
arpl
call
sub
repnz
imul
(bad)
push
add
aas
mov
jmp
xor
mov
enter
push
pop
xor
(bad)
(bad)
not
clc
ret
xchg
jbe
imul
mov
scas
push
not
outs
mov
rcl
shr
fild
adc
mov
jno
and
push
jb
mov
xor
inc
enter
mov
cmp
adc
fiadd
and
retf
(bad)
dec
into
inc
pop
outs
add
pushf
in
cmp
cmp
call
cmp
cli
inc
js
ins
dec
pusha
and
lea
out
out
repnz
mov
arpl
sub
sub
retf
xchg
cmp
test
imul
inc
stos
iret
in
daa
mov
jmp
sub
imul
and
pop
cmp
int3
mov
push
lea
cmc
cmp
fs
mov
cmps
pop
je
xlat
sbb
(bad)
mov
jmp
repz
sahf
push
xlat
add
push
xchg
lds
outs
xchg
out
aam
loope
cmps
shr
mov
xchg
call
popf
repnz
jmp
popa
aaa
das
dec
out
adc
popf
iret
sbb
or
pop
or
xor
call
inc
dec
inc
jo
mov
movs
push
(bad)
mov
cs
dec
int
stos
(bad)
pop
dec
pop
mov
push
lahf
popa
popf
sub
and
add
push
lods
(bad)
imul
aas
call
sti
lods
fst
cmp
sti
mov
adc
outs
leave
nop
fstp
stc
(bad)
lds
fstp
xchg
and
mov
cmps
xchg
scas
outs
icebp
test
mov
dec
add
imul
popf
adc
not
(bad)
mov
push
jbe
out
lea
jmp
stc
xchg
adc
pushf
adc
mov
data16
das
loopne
or
outs
push
sub
dec
xor
cmps
sbb
push
push
icebp
stos
rol
mov
inc
aam
mov
test
or
stos
push
cmp
pop
ret
scas
and
mov
lahf
ret
movs
mov
lods
xchg
sub
mov
cmps
cmc
arpl
mov
push
jl
xor
xchg
adc
repnz
sub
push
adc
pop
push
lods
lock
lahf
add
xor
std
push
neg
lods
pop
movs
inc
cdq
fsubr
pop
aad
inc
jnp
iret
push
mov
ret
jno
mov
mov
test
add
loopne
loop
cmp
movs
nop
push
stc
cwde
popf
loope
xlat
cmp
xchg
pop
add
push
gs
xchg
jmp
enter
sbb
inc
sbb
xor
ins
mov
stos
xchg
fisub
popf
(bad)
out
jl
int3
jp
int3
jno
add
shr
pop
pusha
lds
out
jbe
je
cli
stc
mov
mov
lock
bound
or
or
mov
rcl
cmp
inc
mov
int3
push
jmp
repnz
icebp
push
ss
movs
pushf
cmps
hlt
adc
push
jnp
push
cmps
mov
push
or
fnstcw
aaa
jg
mov
iret
or
ror
data16
shl
shl
adc
and
cmps
pop
inc
es
xchg
jnp
or
mov
and
mov
lods
ja
xchg
ror
mov
mov
xchg
mov
jge
sbb
mov
sub
xchg
clc
pop
outs
in
push
pmullw
lea
mov
(bad)
jo
mov
cmc
jno
jne
and
int
ret
sbb
inc
mov
dec
call
ror
inc
xor
test
addr16
push
and
pop
dec
ss
shl
repnz
out
cli
pop
xchg
popw
jl
adc
in
cmps
or
(bad)
jnp
stos
and
xchg
push
cmp
sub
pop
shl
pop
mov
out
lea
int3
xor
cmps
and
mov
mov
sbb
stos
add
push
scas
fs
pusha
inc
aam
jecxz
push
and
je
sub
sub
mov
and
sub
push
mov
test
inc
lods
xchg
sub
mov
loopne
xchg
(bad)
mov
sahf
pop
div
stos
adc
inc
cmps
add
xchg
and
imul
in
cmps
mov
jmp
neg
xor
mov
adc
adc
loop
iret
jnp
mov
and
xchg
(bad)
es
mov
mov
scas
repz
jmp
rol
dec
dec
mov
and
loopne
outs
fisttp
out
je
push
shl
jb
sbb
scas
femms
cs
lods
movs
jns
mov
stos
jae
and
push
jl
pop
ja
jno
lock
inc
jg
inc
stos
les
in
inc
xor
out
and
and
sub
xor
sub
push
mov
test
xor
(bad)
add
xor
cli
jmp
fsubr
mov
mov
lods
mov
(bad)
loopne
push
ins
push
mov
cmp
inc
js
jle
cdq
pop
inc
xor
mov
cmps
fsubr
dec
adc
or
out
je
mov
in
push
retf
lods
(bad)
mov
stos
xlat
or
test
jmp
sub
pop
jo
(bad)
mov
loop
pop
mov
mov
push
loop
adc
sbb
fcom
cmp
pop
cmps
fisub
popa
rcl
(bad)
sbb
dec
jle
fiadd
jns
fadd
push
sub
sub
push
int3
mov
mov
pop
dec
pushf
xchg
lea
jo
jno
push
inc
fnsave
adc
jg
dec
mov
inc
addr16
pop
inc
cld
(bad)
push
mov
push
icebp
out
mov
push
push
cmps
add
mov
xor
addr16
adc
pop
rcl
fsubp
aaa
(bad)
adc
and
push
or
stos
adc
outs
fxch
int
fisub
sahf
in
and
adc
mov
(bad)
gs
push
push
dec
in
and
jo
lods
sub
mov
fsubr
cli
add
pop
add
out
mov
xchg
dec
xor
iret
pop
adc
jnp
sbb
pop
int3
jl
repz
loopne
jno
rcl
js
xchg
mov
rol
aaa
sub
outs
fld
jne
mov
js
mov
ret
push
mov
(bad)
imul
call
repz
sbb
mov
es
inc
aam
js
inc
xchg
(bad)
jo
call
add
jecxz
push
retf
ins
adc
cmps
cmp
repnz
lea
dec
push
mov
or
xchg
xor
rcr
push
jb
push
mul
lahf
and
repz
mov
and
jbe
out
xor
scas
aad
ret
fwait
cdq
(bad)
mov
fisubr
or
retf
fdiv
rcr
pop
loope
lock
dec
inc
jo
sub
add
stc
scas
in
cmps
(bad)
cmp
mov
fcomp
das
jne
hlt
pop
leave
jmp
jbe
movs
xchg
loope
in
mov
icebp
fwait
outs
bnd
adc
adc
or
call
or
xchg
inc
inc
cmp
cmp
pop
mov
jecxz
shr
jae
mov
sbb
add
mov
jle
inc
cmp
daa
xor
mov
adc
pop
les
stc
or
mov
jne
jb
add
les
hlt
mov
test
cmp
and
cmp
addr16
jnp
sub
jecxz
push
jge
das
cdq
or
in
or
into
fld
adc
cmp
cs
inc
xor
inc
cdq
rcl
mov
mov
pop
cmp
dec
int
scas
cmp
inc
out
adc
mov
mov
in
dec
dec
lods
rcr
pop
lods
nop
call
pop
bound
dec
inc
adc
sub
aad
cld
(bad)
fbld
adc
xchg
xchg
push
pop
movs
pop
xchg
pop
add
scas
and
rcl
dec
loopne
dec
or
pop
(bad)
mov
jge
push
adc
fidiv
lods
lock
aaa
ins
or
mov
fcmovbe
ficom
leave
rcr
and
jmp
sbb
xchg
addr16
loopne
pop
cmp
repz
test
jmp
sub
dec
int
(bad)
dec
mov
les
stos
mov
movs
hlt
adc
cmps
movs
cmp
dec
push
movs
add
mov
outs
mov
je
dec
or
jno
cld
das
xor
adc
mov
jns
movs
xchg
rcr
cs
test
push
sbb
sbb
mov
jne
fdivp
(bad)
cli
fnstenv
inc
sbb
das
imul
sub
push
dec
adc
push
not
jmp
and
push
inc
mov
push
jl
xchg
xchg
adc
test
cmp
pop
loope
or
mov
xchg
pushf
cmp
xor
sahf
jmp
fdivr
cmp
sub
cmp
ja
out
(bad)
pushf
mov
repz
sub
xor
sub
dec
mov
fs
adc
js
dec
xor
adc
icebp
sub
cmp
cmc
popa
int3
mov
mov
mov
ud0
loopne
inc
jo
ins
hlt
push
adc
jmp
push
sahf
imul
call
leave
sbb
out
mov
xchg
scas
cmp
jecxz
cmp
in
fimul
icebp
cmp
fldenv
jl
js
fsub
mov
xchg
mov
and
dec
into
add
dec
jnp
aaa
jmp
jbe
gs
test
dec
das
inc
mov
add
fsubr
out
sub
xor
and
nop
inc
data16
(bad)
sahf
cwde
imul
or
loop
loopne
mov
jmp
pop
or
cmps
dec
test
fidivr
jmp
cmc
xor
inc
lods
pop
cwde
cmp
or
mov
or
mov
into
shl
fistp
mov
rcl
push
mov
jbe
hlt
pop
arpl
cmp
inc
aad
inc
mov
loopne
xchg
ret
mov
push
jnp
cmp
inc
jle
jecxz
bound
sub
adc
dec
cmps
mov
je
js
sbb
sub
cmp
mov
into
adc
and
mov
call
jne
and
pop
test
test
jle
sub
cmp
mov
nop
or
add
cli
test
shl
movs
and
pop
push
push
fcmovne
adc
aad
cmp
or
jg
test
loope
jecxz
scas
rcl
in
or
push
mov
push
cmp
popf
add
mov
or
leave
cmps
shr
mov
aas
inc
sbb
loope
mov
mov
lahf
sub
(bad)
pop
xor
adc
add
ret
sub
cmp
iret
inc
inc
inc
(bad)
sbb
push
fild
sub
stc
sbb
call
daa
stos
call
stc
mov
mov
sar
mov
add
mov
pop
repnz
xchg
dec
inc
je
cld
pop
lea
leave
cmps
out
ret
pop
add
stos
cmps
xchg
imul
das
int3
dec
movs
xor
mov
(bad)
jmp
ret
or
xchg
out
adc
sahf
into
cli
add
push
mov
cmp
outs
pushf
pushf
cmp
in
retf
sbb
push
or
mov
es
fisttp
into
hlt
push
retf
jns
dec
bound
xchg
cwde
dec
addr16
(bad)
or
adc
scas
sub
imul
pushf
popa
inc
or
mov
call
mov
daa
(bad)
lds
inc
iret
imul
adc
test
push
dec
adc
scas
popf
sbb
push
xchg
cli
(bad)
lods
pop
mov
std
mov
sub
icebp
push
int3
in
data16
sub
call
lea
xor
push
lds
sub
lds
mov
add
rcr
das
mov
sbb
cdq
shl
cli
(bad)
jno
lods
push
mov
push
pop
cwde
imul
add
jmp
push
dec
inc
sbb
out
dec
jnp
mov
out
push
les
jp
in
and
cld
call
inc
mov
adc
sbb
cmps
fs
imul
test
mov
stos
test
mov
jecxz
adc
aaa
fs
pop
loope
or
cmp
push
popf
xor
shl
aam
movs
jns
sbb
add
out
pop
push
sub
test
sub
jmp
ret
fistp
aam
jecxz
jnp
jo
in
add
popa
xchg
inc
fst
inc
aaa
sub
subps
and
dec
pcmpeqb
adc
or
xchg
jb
inc
scas
add
iret
fld
xlat
xchg
sbb
xor
dec
jp
stos
out
mov
int
jb
mov
fistp
pop
pop
test
mov
movs
mov
sbb
mov
fisttp
clc
sub
xchg
push
jmp
pop
xchg
xchg
jmp
adc
jecxz
fnstenv
pop
shl
dec
pop
mov
and
cmp
mov
add
add
cmovl
or
xchg
adc
sahf
mov
dec
mov
jl
scas
out
inc
lods
xchg
mov
sub
push
je
cmps
or
cmp
mov
adc
jnp
add
in
mov
enter
adc
ja
pop
jl
movs
mov
sub
fwait
(bad)
leave
mov
mov
mov
das
jp
mov
arpl
xor
retf
sbb
mov
dec
mov
ret
movs
ja
mov
or
xchg
pop
repz
test
rol
inc
adc
xchg
add
repz
retf
loopne
sar
out
pop
scas
in
(bad)
out
dec
or
xchg
loop
or
rcl
mov
shr
retf
jg
xchg
or
cmp
mov
jg
jmp
in
pop
lock
mov
ja
mov
mov
aas
push
cli
loopne
cmp
mov
arpl
mov
nop
mov
mov
gs
stos
into
aad
jmp
mov
dec
mov
sub
popf
ror
or
mov
sahf
out
fnstsw
pop
jo
mov
mov
and
xchg
gs
test
test
aad
add
stc
and
cmp
mov
ficomp
sub
out
int
xchg
loopne
aad
fcom
cwde
outs
mov
and
inc
add
icebp
shl
stos
fcmove
(bad)
mov
cmp
lock
or
push
lea
push
ret
push
pushf
js
in
pushf
fimul
sub
imul
or
sub
inc
adc
mov
shl
dec
jmp
dec
dec
mov
cmp
test
jns
cdq
fcom
jg
in
repnz
leave
sbb
adc
bound
loop
push
pop
sahf
xchg
retf
or
cli
sbb
not
sbb
pop
ret
sbb
xor
cmp
pop
mov
fbstp
sbb
sub
call
call
loopne
push
push
mov
ins
mov
retf
mov
cmps
sub
arpl
jmp
xchg
pop
sbb
xor
aas
push
or
outs
and
push
add
mov
imul
loopne
outs
mov
jp
jbe
test
sub
mov
adc
fst
lahf
std
add
idiv
(bad)
add
xor
stos
hlt
jle
out
popa
scas
jmp
adc
inc
iret
aaa
dec
mov
sbb
data16
or
xchg
rcl
(bad)
(bad)
js
fidiv
test
bound
jp
stos
out
xor
test
sar
stos
std
out
push
xor
icebp
lahf
xchg
add
inc
mov
imul
arpl
sub
sbb
sbb
jnp
inc
pop
ror
lea
(bad)
lds
call
imul
dec
xor
push
enter
push
enter
add
mov
cwde
jno
shrd
push
imul
cld
xor
xor
mov
mov
sub
inc
ss
mov
mov
movs
sub
fist
rol
push
adc
push
out
imul
mov
bound
xor
mov
imul
push
ins
test
xchg
sbb
dec
lds
call
dec
das
xor
fstp
pop
push
mov
sbb
cmp
lds
push
out
arpl
adc
data16
dec
adc
mov
jecxz
or
add
inc
nop
fldln2
push
sub
inc
add
add
sahf
lods
push
xor
in
mov
push
out
mov
sti
sbb
add
sub
xor
sub
cmp
retf
(bad)
mov
rcr
aaa
imul
bound
aad
call
dec
popa
mov
repz
inc
push
pop
mov
loopne
clc
ins
mov
bswap
out
mov
xchg
sbb
retf
imul
push
sbb
add
add
and
aad
xor
adc
push
test
scas
iret
mov
ins
movs
jbe
mov
inc
push
frstor
cmp
iret
jl
dec
aad
outs
or
mov
test
sbb
mov
dec
pop
not
movs
push
push
stc
sub
or
mov
push
and
mov
mov
out
push
sbb
ins
jecxz
and
mov
aad
or
int3
mov
lock
es
les
lea
test
inc
pop
std
jnp
jmp
pop
fisub
mov
clc
in
test
sub
xchg
push
into
out
jmp
(bad)
pushf
clc
fsub
lahf
adc
fist
fucomip
mov
xchg
ret
data16
psllw
in
pop
(bad)
fdivr
mov
pop
mov
add
jne
stc
scas
lea
rcr
aaa
int3
sbb
arpl
and
pop
dec
pop
xchg
push
cmp
adc
jbe
fcmovnbe
fnstcw
stos
jbe
call
mov
xchg
inc
push
sub
adc
inc
out
cmp
adc
lea
mov
jns
retf
mov
xor
mov
pop
fs
int3
jp
(bad)
imul
jo
sub
sbb
mov
nop
nop
(bad)
mov
imul
mov
cmp
jmp
mov
gs
xchg
jg
xchg
adc
hlt
jmp
(bad)
dec
aaa
xor
cmp
xchg
out
loope
ror
mov
mov
gs
stc
mov
ja
push
xchg
sub
cli
nop
cli
fidivr
pop
pop
sbb
and
repnz
adc
inc
or
je
xor
sahf
pop
jmp
idiv
lahf
leave
mov
das
mov
mov
cmps
pop
inc
mov
mov
mov
push
iret
sbb
and
xlat
imul
cwde
out
(bad)
cmps
ins
sub
xor
sub
outs
retf
inc
stos
mov
movs
mov
cmp
xor
jmp
hlt
(bad)
mov
cmp
fldcw
frstor
mov
or
out
aad
jno
xchg
out
jne
clc
psubsb
retf
out
add
out
xor
add
add
cwde
fdiv
(bad)
(bad)
sbb
mov
lock
xchg
fs
mov
adc
popa
stc
inc
and
pushf
add
sub
sbb
mov
(bad)
inc
out
mov
(bad)
jne
loopne
mov
sbb
or
jle
hlt
clc
sub
and
sub
lds
or
xchg
mov
inc
mov
(bad)
mov
pop
lds
loope
mul
(bad)
jmp
cmps
in
jle
mov
or
mov
mov
ror
mov
mov
sahf
adc
test
dec
mov
adc
ins
sbb
push
imul
push
mov
inc
nop
(bad)
fcomp
sbb
jne
mov
fstp
mov
mov
xchg
dec
jge
mov
ins
cmps
ja
add
push
(bad)
pop
iret
jg
cmp
mov
(bad)
mov
in
nop
push
push
fwait
mov
push
xchg
mov
pop
add
das
fst
sbb
retf
xchg
xor
rcl
ss
push
loopne
and
stos
imul
into
scas
adc
jno
inc
push
mov
mov
dec
adc
inc
sbb
dec
outs
data16
stos
add
mul
jl
hlt
adc
mov
push
dec
push
iret
cmps
std
popa
movs
add
xchg
imul
push
lods
push
dec
sti
ins
int
sub
in
fcmove
(bad)
loope
push
popa
dec
btr
loope
xchg
(bad)
mov
adc
lods
movs
test
imul
xchg
inc
mov
mov
fcmovbe
push
rcl
add
mov
scas
pop
repnz
jne
(bad)
mov
ret
add
adc
add
dec
xlat
pop
ror
div
mov
mov
call
in
sbb
jne
xor
xchg
dec
loope
mov
ja
lock
nop
int
loopne
push
jns
push
ss
pop
adc
mov
cwde
mov
scas
js
or
call
in
push
cdq
mov
mov
jne
dec
test
scas
test
cdq
leave
xor
loope
xor
push
in
jb
pop
icebp
idiv
pop
ds
inc
adc
imul
sbb
and
bound
hlt
out
mov
jnp
clc
push
daa
sub
cwde
xor
ins
stos
in
xor
mov
call
push
xor
dec
rcl
add
dec
mov
jmp
aas
xor
mov
addr16
or
hlt
mov
fsubr
mov
(bad)
fcmovnb
jno
mov
sub
pusha
jecxz
mov
lock
fiadd
adc
adc
les
sub
sub
jg
enter
push
hlt
sbb
dec
mov
jecxz
and
das
xchg
je
and
lock
or
sbb
mov
dec
push
int3
mov
sub
repnz
sub
ds
jp
xor
sbb
dec
mov
sbb
jns
xlat
push
xor
sbb
ss
in
pushf
or
inc
xor
mov
push
mov
icebp
sbb
in
xchg
inc
icebp
mov
pop
and
mov
cwde
and
mov
js
cmp
clc
xchg
cli
sti
loop
or
mov
mov
std
add
mov
sbb
mov
push
adc
jecxz
fcomp
out
inc
int3
push
sub
jb
imul
cli
or
loope
call
sbb
cmp
fistp
repnz
(bad)
(bad)
jp
xor
cld
or
pop
jge
sbb
popf
push
sbb
repz
cmp
xchg
loope
(bad)
in
mov
and
jg
scas
aaa
push
jle
push
pop
adc
call
push
gs
pop
jno
out
mov
jno
jb
out
hlt
xchg
repnz
(bad)
pop
mov
lds
lock
loopne
das
into
scas
pushf
cmp
pop
mov
xor
mov
mov
dec
jmp
fcom
fsubr
loope
loopne
adc
call
test
lahf
dec
int3
lds
sbb
imul
loop
dec
ins
add
push
jnp
stos
mov
sbb
loopne
inc
sbb
popa
mov
xor
sub
and
leave
mov
xchg
xchg
je
cs
nop
call
clc
xchg
sahf
xchg
cmp
lss
xchg
neg
mov
std
fisttp
mov
out
sub
(bad)
cli
dec
dec
mov
jecxz
call
mov
xchg
or
xor
loope
jecxz
icebp
sar
push
push
outs
xchg
and
aaa
sub
xor
mov
lods
jle
ret
lock
sar
sahf
outs
or
add
enter
rcl
or
je
in
(bad)
in
mov
js
mov
aas
dec
call
pop
mov
fidiv
out
aaa
adc
or
cmc
cmp
out
jle
xor
mov
xchg
pusha
push
xchg
fs
mov
dec
lods
add
ss
mov
pop
push
push
xlat
pop
loop
lods
sbb
jbe
mov
stos
out
jge
shl
push
retf
js
dec
clc
out
lods
iret
push
not
adc
call
add
shl
xchg
lock
mov
push
mov
adc
xchg
xchg
repnz
aas
sbb
xchg
and
fimul
jmp
inc
xchg
add
test
loop
imul
fistp
add
push
jp
inc
push
ror
loopne
sub
ret
xchg
xor
cld
jae
data16
ds
mov
push
rcr
ret
xchg
push
or
mov
or
adc
lahf
pop
xchg
out
aaa
je
xor
lds
js
popa
jmp
inc
cld
pusha
ret
adc
adc
xchg
ds
cmp
or
mov
(bad)
mov
xor
retf
pop
test
cmp
aaa
pusha
mov
jle
test
push
sbb
pop
pxor
iret
in
cmp
jmp
push
icebp
lods
xchg
aam
sahf
pop
add
xchg
jae
mov
outs
jno
xor
(bad)
data16
jo
cs
out
adc
(bad)
lds
outs
int
icebp
sahf
jle
xor
xor
mov
test
push
enter
pop
ret
push
(bad)
cmp
pop
out
add
sub
or
jo
push
inc
pop
jae
mov
cli
xchg
js
and
jecxz
daa
mov
pop
inc
xor
mov
loopne
jle
leave
xor
add
xor
stos
imul
jmp
enter
out
xor
int3
neg
nop
and
ret
out
and
pop
cmc
mov
adc
cmp
mov
add
imul
inc
mov
pop
ja
dec
adc
jnp
and
mov
(bad)
dec
xchg
xchg
pop
sbb
jne
rcl
sub
cmp
loopne
ret
push
fmulp
sub
or
push
cmp
out
jmp
sbb
out
int3
adc
mov
cmp
pop
(bad)
movs
dec
test
sub
dec
sbb
dec
lods
gs
imul
mov
(bad)
retf
loopne
retf
stos
fimul
aaa
mov
call
aaa
and
pop
fcmovnb
push
mov
dec
idiv
mov
lock
jne
outs
adc
rcr
fnsave
xchg
or
sar
stc
push
inc
xor
push
je
retf
pop
mov
push
imul
xor
(bad)
lahf
movs
and
xor
test
push
mov
mov
sbb
and
xor
scas
(bad)
xchg
aam
je
fist
call
test
xchg
hlt
sbb
push
inc
adc
jo
or
push
(bad)
leave
push
sub
enter
fisttp
xor
push
addr16
arpl
cmp
dec
jae
push
sar
xchg
mov
pop
dec
mov
cmp
push
mov
mov
push
pop
push
pop
or
mov
xchg
test
test
xchg
lahf
sbb
outs
ss
in
int3
inc
add
fsubr
popa
sub
mov
mov
mov
retf
mov
mov
mov
scas
or
or
std
mov
pop
outs
xchg
sub
fstp
dec
fwait
psubsb
cld
ror
jecxz
fild
add
adc
aaa
mov
adc
push
sbb
in
mov
in
leave
fdivr
shl
in
mov
das
jp
fs
ret
daa
adc
mov
mov
dec
sub
mov
dec
movs
or
fidiv
inc
jl
sbb
mov
xchg
mov
cmps
sbb
stos
out
lahf
add
push
aas
pop
lock
mov
fild
and
xor
in
stos
test
jb
mov
or
adc
or
push
push
aam
adc
outs
gs
je
adc
inc
int
cmp
in
repnz
cmps
jl
xchg
inc
xor
xor
enter
ret
pop
sub
jp
call
(bad)
push
pop
jns
jmp
hlt
test
sti
dec
mov
mov
idiv
ret
ja
div
mov
pop
dec
mov
sbb
xor
and
or
arpl
sub
pop
je
xchg
jmp
retf
ficom
arpl
not
mov
inc
repz
iret
mov
outs
cmp
mov
push
outs
dec
es
in
out
ror
fnsave
out
xor
pushf
out
jmp
add
inc
loope
imul
int
jmp
mov
movs
sub
add
cmp
sub
aas
leave
jno
xchg
out
inc
push
dec
loop
xchg
mov
inc
fwait
pushf
mov
adc
adc
jo
test
mov
call
xor
jnp
mov
stc
mov
sbb
shl
add
push
and
sub
(bad)
rcr
fdiv
jnp
(bad)
jns
imul
sti
gs
mov
(bad)
scas
xlat
cmp
(bad)
(bad)
pop
push
cmps
paddsb
sbb
aaa
cwde
or
enter
jmp
dec
push
scas
and
mov
jecxz
adc
imul
cmc
or
inc
xchg
shl
or
aad
gs
daa
cmps
sbb
out
adc
jns
fdivp
cmp
mov
test
jns
jne
sbb
sub
call
dec
add
mov
into
sub
mov
ins
or
add
ds
ins
cs
mov
mov
(bad)
xor
les
mov
cli
popf
lock
xor
repz
cmps
sub
repz
idiv
cmp
add
outs
cld
je
imul
mov
add
sbb
pop
adc
repz
daa
(bad)
adc
mov
or
or
adc
ret
xor
dec
and
imul
mov
retf
sahf
adc
cmps
mov
fmul
sti
iret
(bad)
into
ss
and
jbe
jno
fsubr
retf
jmp
push
mov
mov
stos
int3
(bad)
push
addr16
mov
sar
and
movs
mov
inc
cmp
int
dec
xor
xchg
mov
not
shl
pusha
fisttp
adc
pop
mov
xchg
inc
mov
sub
fsubr
call
xor
and
mul
sbb
jb
mov
out
adc
pxor
inc
(bad)
mul
pop
fidiv
jns
sbb
idiv
in
add
imul
cmc
mov
xor
and
sub
sbb
jg
mov
dec
repnz
fsub
enter
outs
pop
and
dec
dec
and
xor
sub
and
push
mov
retf
add
addr16
iret
xor
mov
sub
ins
leave
in
jo
add
outs
jmp
dec
xor
mov
repz
jp
ror
and
cmp
scas
inc
or
lods
xchg
test
nop
mov
ss
xchg
pop
xchg
mov
jbe
mov
xlat
mov
clc
inc
or
mov
cmovs
fsub
js
loopne
xchg
pop
sbb
jp
or
xlat
in
push
jl
test
ja
add
enter
imul
or
sbb
pop
cmp
int
ds
aad
hlt
sbb
in
scas
xchg
add
cmp
jl
mov
imul
cmp
mov
out
mov
mov
imul
add
mov
loopne
xchg
jmp
mov
fisttp
xor
out
(bad)
mov
dec
(bad)
loope
adc
imul
je
xor
(bad)
les
mul
aad
mov
and
adc
sub
imul
pop
cmp
push
fist
pop
mov
ret
(bad)
fimul
movs
mov
sahf
jb
mov
jp
dec
mov
and
loopne
and
mov
xchg
fsub
das
push
pop
sub
fnstenv
xchg
pop
in
std
cdq
mov
wbinvd
(bad)
fild
gs
ficomp
dec
neg
ins
leave
sbb
inc
inc
es
dec
(bad)
xchg
ins
arpl
mov
cmc
in
jno
xchg
or
jo
mov
mov
jmp
add
fild
push
push
es
sub
jl
in
mov
aad
arpl
adc
sahf
and
into
push
mov
loopne
ins
rol
jecxz
in
aam
jnp
mov
pop
rol
daa
jge
xchg
ret
and
and
and
add
sbb
dec
mov
lahf
popf
mov
jns
repnz
rol
or
mov
xor
push
ror
dec
scas
and
sahf
add
pop
das
pop
cmp
jmp
sub
jp
inc
dec
push
lahf
jb
in
pop
add
xor
push
cmps
adc
loope
jle
push
cmp
push
mov
std
je
mov
shr
or
fwait
pop
cmp
cmp
and
dec
jmp
mov
scas
jl
and
movaps
ds
lahf
fs
lods
pop
sbb
fwait
xchg
adc
push
cmps
jge
sti
jne
push
sub
(bad)
xchg
push
push
xor
adc
fcmovnbe
dec
inc
xor
inc
pop
add
int3
(bad)
rol
fbstp
dec
sbb
jl
sti
push
inc
ss
out
sub
mov
(bad)
iret
cmp
ficomp
jbe
cmc
cdq
mov
dec
xchg
dec
aad
bound
cdq
jmp
sbb
loope
mov
jecxz
popa
jns
into
test
sub
cs
sbb
jmp
call
pop
mov
push
adc
xor
ins
mov
cmps
inc
test
fld
push
retf
cld
out
addr16
push
nop
cmps
jno
daa
scas
mov
push
fstp
add
inc
rol
mov
retf
fldenv
outs
out
add
xchg
fs
into
test
lahf
pop
js
mov
out
stos
cmc
inc
pop
ret
jle
xor
xchg
adc
inc
rcl
and
xchg
inc
sub
jmp
inc
icebp
daa
dec
pop
pop
dec
rcr
jbe
mov
lods
sti
sahf
pop
into
icebp
sbb
fcmovu
mov
call
sbb
shr
in
es
cmp
imul
test
or
and
(bad)
jecxz
imul
sar
xchg
inc
outs
cmp
mov
add
jp
fidivr
mov
inc
retf
out
jne
inc
test
pushf
mov
sub
fbstp
xor
icebp
adc
popa
sbb
mov
std
or
sbb
jmp
and
retf
push
add
xchg
jne
iret
das
jbe
push
fnsetpm(287
int
xchg
scas
mov
dec
mov
adc
add
jae
adc
sar
mov
popa
fimul
mov
in
repz
jmp
xor
jl
sti
mov
retf
push
pop
arpl
call
cs
mov
test
popa
mov
fcos
or
imul
enter
sbb
cmps
out
mov
adc
out
xor
or
sti
in
rcr
push
push
aad
into
das
and
xor
adc
pusha
sbb
lea
int3
jo
fisttp
push
leave
pop
inc
inc
dec
ret
jmp
(bad)
out
jg
and
imul
push
jnp
into
repz
adc
pop
je
mov
cmps
retf
pop
pushf
add
loope
call
jg
jecxz
repnz
in
out
popf
pop
dec
add
cwde
xchg
loop
nop
stos
jae
add
in
inc
xchg
pop
mov
xor
repz
mov
pop
cmp
pusha
ja
loope
pop
fsubr
jmp
push
repnz
add
xchg
dec
pop
cmp
in
ds
adc
sbb
xor
mov
pop
pop
retf
lahf
cmp
mov
pop
ret
xchg
cdq
arpl
lods
xor
lahf
pop
call
mov
mov
push
jbe
movs
test
ja
jecxz
cli
mov
xchg
push
pop
cmp
aad
and
mov
scas
jbe
dec
sub
mov
imul
dec
nop
xor
aas
adc
pop
jl
xor
jle
vandps
fld
fnstcw
fucomi
and
mov
mov
fiadd
fucomp
push
mov
pop
dec
push
dec
fs
push
ror
stos
push
fisttp
sbb
jge
daa
sbb
hlt
aad
mov
jb
sub
cmp
add
and
ins
dec
dec
xor
and
cdq
and
cmp
sahf
sbb
sbb
ficomp
(bad)
sub
jg
jbe
repnz
adc
inc
(bad)
mov
sbb
and
mov
adc
dec
jns
dec
lods
repnz
jnp
sbb
cmps
cmp
cld
mov
and
mov
fstp
xchg
sub
mov
sti
mov
psubb
lods
movs
in
sub
cmp
sbb
sbb
dec
mov
adc
jg
jo
ret
pusha
lds
fbstp
in
mov
sbb
movs
mov
or
pop
enter
jb
push
cmp
add
add
jle
mov
addr16
push
sub
adc
stos
mov
xchg
mov
jae
popa
mov
scas
sbb
aad
jmp
xlat
jo
lods
sub
jno
cmps
add
hlt
in
inc
in
push
pushf
push
mov
push
in
push
addr16
and
call
les
shr
sbb
iret
or
push
in
push
test
rol
mov
push
mov
xor
sub
and
adc
mov
(bad)
fstp
lds
mov
stc
mov
pop
les
ds
ret
dec
div
xor
pop
jle
adc
pushf
mov
inc
inc
jmp
sbb
repz
aaa
cmp
out
leave
cmp
or
push
xlat
mov
cmp
or
cld
cmp
in
sahf
popa
jbe
shl
imul
movs
aas
mov
in
lods
dec
retf
scas
les
fdecstp
inc
or
dec
jmp
fwait
pop
dec
mov
sub
mov
out
or
xor
jno
cmc
cmp
jmp
cmp
mov
movs
mul
jecxz
mov
movs
xchg
cli
mov
pop
sub
push
aam
sub
pop
test
push
fs
retf
out
jmp
pop
call
rol
and
xchg
inc
jmp
xor
ret
shl
fisttp
dec
ins
enter
lods
(bad)
mov
push
call
(bad)
dec
jp
sub
xchg
pop
lock
js
cmp
cmps
xor
dec
sub
jecxz
add
add
imul
adc
stos
cmp
adc
pop
jbe
(bad)
push
into
test
sub
pop
jg
arpl
cmc
or
imul
aad
push
pop
add
inc
out
cmp
sub
ror
(bad)
fwait
xor
pop
mov
and
stos
hlt
out
and
dec
inc
mov
push
xchg
test
push
jmp
or
mov
push
shl
mov
push
aas
loop
leave
ds
sub
retf
sbb
(bad)
xlat
push
mov
cmp
enter
mov
in
mov
pop
mov
mov
mov
push
dec
inc
mov
retf
hlt
mov
pushf
lea
mov
push
jp
sti
cs
mov
sbb
daa
push
dec
cld
xchg
sub
lock
test
sub
push
and
adc
jns
fs
xchg
dec
pop
jmp
test
dec
cli
int3
andnps
dec
inc
pop
push
mov
mov
retf
cmp
jl
xchg
and
repz
out
push
push
mov
cs
in
out
or
or
ins
mov
adc
xor
xchg
iret
hlt
cmp
pop
jg
(bad)
jb
rcr
aam
iret
jle
dec
inc
jge
retf
add
fwait
(bad)
bound
repz
movs
stos
xchg
imul
adc
ins
pop
gs
cmp
std
mov
xor
xor
popa
sub
scas
push
jge
retf
dec
jecxz
cmp
mov
test
jmp
cwde
mov
or
jnp
jecxz
ds
jg
out
ror
out
dec
xor
mov
cmp
mov
ja
sahf
gs
jae
(bad)
icebp
cmp
repnz
push
push
push
jne
retf
jnp
cmps
pop
out
xor
mov
into
loopne
and
in
cmps
push
add
jg
mov
outs
xchg
cmc
in
mov
jbe
fldenv
mov
cmp
not
adc
xchg
gs
call
sbb
adc
in
cmps
cmp
jb
pop
cld
jecxz
fisub
adc
movs
add
cmc
jnp
sbb
and
xchg
adc
out
stos
jnp
mov
fiadd
xchg
scas
jge
leave
in
scas
ds
pop
popa
std
push
jns
imul
icebp
pop
dec
out
in
add
jp
xchg
aad
movs
jnp
sub
or
(bad)
xor
dec
aam
call
js
mov
aas
repnz
addr16
xchg
movs
out
inc
jmp
lahf
out
xlat
pop
daa
leave
mov
and
fs
adc
test
mov
jo
out
into
xchg
retf
xor
xchg
sbb
mov
push
pop
add
(bad)
(bad)
inc
dec
xor
sar
and
dec
mov
int
adc
clc
cwde
add
push
push
jb
cmp
pop
jl
mov
inc
add
xchg
push
sbb
inc
jo
fadd
(bad)
mov
dec
and
mov
jae
adc
inc
mov
adc
push
mov
fdivr
mov
cmp
js
lods
xor
mov
dec
cmp
jp
imul
bound
int
fist
sub
pop
xor
sbb
in
sbb
xchg
mov
outs
cmovne
popa
bound
bound
push
mov
(bad)
int
gs
mov
(bad)
pop
dec
sbb
xchg
or
xlat
xchg
in
and
ins
bound
jmp
cld
daa
sbb
fsubp
pusha
aam
movs
mov
or
pushf
xchg
or
or
scas
or
pop
enter
dec
cmp
inc
jge
jle
or
repnz
jne
aad
shl
outs
lea
loopne
mov
or
jbe
clc
push
push
mov
cmp
sub
cmp
sub
mov
and
mov
adc
pop
call
adc
mov
or
popf
addr16
fimul
ror
pop
hlt
mov
stos
inc
sbb
sub
push
or
jmp
mov
push
ss
fs
pop
fild
imul
mov
mov
dec
aas
xchg
stos
sub
bound
push
jne
retf
popa
test
push
jbe
je
shl
jae
sub
and
(bad)
sbb
and
dec
push
dec
les
cmp
fnstenv
push
adc
mov
sub
in
lahf
push
sub
shl
sahf
cmp
popf
movs
jge
fwait
mov
sub
mov
js
pop
retf
aas
(bad)
cmp
push
addr16
and
pop
xor
ins
cmp
lods
mov
fs
stc
mov
nop
fdivr
imul
dec
cld
mov
(bad)
icebp
pop
adc
or
jne
(bad)
pushf
call
mov
and
xchg
retf
pop
xchg
int
inc
clc
daa
xchg
fstp
mov
hlt
je
js
xor
lea
retf
inc
sti
jbe
call
adc
retf
and
and
or
int3
and
jnp
push
mov
pop
imul
sti
dec
test
lods
add
jo
lahf
mov
pop
out
leave
push
test
dec
xchg
int3
loope
fbld
push
hlt
jg
jmp
sahf
or
xchg
retf
nop
dec
xlat
dec
leave
imul
adc
mov
and
mov
push
cs
jb
jl
iret
ret
mov
mov
xor
icebp
and
or
es
jo
pop
push
add
test
(bad)
adc
push
sbb
pop
jbe
mov
arpl
jecxz
mov
imul
movs
jp
test
(bad)
gs
push
call
pop
loopne
mov
sub
int3
in
mov
rol
add
and
stc
jmp
fld
sbb
sub
xor
dec
mov
ss
mov
sbb
call
push
nop
jno
arpl
jno
fwait
mov
inc
jecxz
jbe
mov
fcmovnb
jns
in
add
xor
shl
fwait
and
or
pop
fisub
pop
sar
or
mov
push
loop
mov
and
sbb
push
lods
sub
shl
stc
mov
sbb
adc
arpl
sti
vpmaddwd
ficom
inc
mov
and
out
adc
loop
push
mov
push
stos
jg
icebp
xor
pop
dec
repnz
jmp
retf
inc
and
(bad)
add
and
mov
mov
mov
push
inc
ja
mov
(bad)
pop
mov
xchg
or
push
or
retf
sbb
fstp
jg
repnz
mov
push
pop
nop
mov
lock
push
mov
and
out
stos
call
jae
mov
mov
adc
sar
shr
leave
(bad)
lock
shl
cdq
neg
adc
jo
stc
lds
adc
dec
gs
xor
ficom
das
jle
cmp
aad
sub
repnz
pop
sbb
push
rcl
in
push
cld
mov
mov
js
mov
sti
fldcw
add
es
nop
mov
mov
xor
dec
mov
cmp
call
imul
clc
(bad)
fs
mov
jecxz
lds
ins
int
mov
push
test
push
and
mov
(bad)
xor
jbe
jl
sbb
jl
mov
cmp
icebp
xor
adc
neg
rcr
out
les
jmp
sahf
mov
mov
adc
pop
fld
push
sti
and
push
xor
cmp
pop
mov
xchg
dec
or
retf
ficomp
fisttp
daa
and
cmp
inc
pop
xor
int3
or
jge
xchg
movs
sbb
push
sbb
outs
mov
daa
loope
jno
in
jle
ds
adc
mov
dec
outs
dec
inc
xor
dec
inc
(bad)
enter
dec
xor
jmp
dec
jae
or
xor
jmp
mov
dec
dec
and
pusha
sar
push
inc
stos
push
fidiv
jl
xor
jge
sbb
sbb
push
cmp
lods
xor
(bad)
lds
gs
inc
in
mov
ror
aas
fsub
cs
xor
pop
adc
xlat
xchg
ins
(bad)
(bad)
mov
test
sub
push
dec
adc
cli
fidiv
push
iret
ret
xchg
and
pop
push
push
mov
xlat
mov
add
je
mov
adc
std
jo
pop
test
fwait
sub
out
cs
inc
push
addr16
sbb
stos
ret
push
cmp
add
popa
mov
sub
mov
add
out
js
jb
fcmovbe
stc
xchg
sub
aad
cdq
test
adc
into
jb
sub
repz
(bad)
sub
mov
cld
aaa
sahf
retf
fisttp
in
ret
enter
rol
xchg
sub
lods
push
cmp
mov
in
jecxz
mov
and
das
out
pop
aad
fst
bound
xor
mov
ror
ror
add
fisub
ffree
out
je
mov
or
iret
out
sub
or
fmulp
mov
das
sub
ret
lea
xchg
and
aam
add
lods
add
popf
movnti
(bad)
cmp
jb
adc
ja
inc
fucomp
cdq
outs
add
mov
pusha
or
mov
mov
popf
jne
push
and
clc
int3
push
xor
mov
aaa
inc
fwait
clc
ins
aas
push
push
ja
push
jge
inc
push
pop
mov
aad
adc
int3
mov
jbe
stc
cmp
sub
sub
mov
ds
mov
pop
xchg
and
add
add
aam
xor
pop
xor
xchg
inc
cmp
push
es
or
loopne
loop
adc
xchg
(bad)
int3
mov
loop
ds
(bad)
out
add
push
js
sub
add
pop
dec
outs
sub
in
stos
jns
inc
mov
dec
push
movs
dec
(bad)
jno
add
das
fisubr
iret
out
das
fsub
xchg
bound
mov
push
enter
bound
push
add
jo
sbb
push
or
mov
loopne
or
outs
xchg
add
(bad)
cmp
stos
(bad)
sbb
fcomp
dec
sub
(bad)
cs
fdivr
adc
(bad)
movs
jo
rcl
shl
or
leave
int3
add
xor
push
or
adc
int
cmps
pushf
xchg
outs
push
xchg
push
retf
sub
stos
icebp
pop
ins
dec
test
fsub
and
cmps
lds
inc
push
dec
ret
xchg
enter
or
inc
int3
out
outs
jns
iret
retf
int
stc
push
push
mov
repnz
js
or
jnp
dec
add
xlat
pop
sbb
pop
jp
jne
loope
retf
jl
in
lods
iret
adc
mov
outs
mov
push
mov
pop
imul
inc
enter
test
into
fimul
xchg
imul
out
inc
ret
loop
push
pop
push
add
sbb
sub
repnz
sub
retf
ds
sbb
push
leave
jno
loope
cdq
imul
dec
test
jge
add
jecxz
xchg
jb
jb
push
push
xor
aaa
adc
mov
ss
pop
dec
mov
fsubr
xor
(bad)
fdivr
outs
aas
jmp
rcr
xchg
lods
inc
ret
cs
sar
sbb
gs
clc
jecxz
mov
mov
mov
jg
arpl
ds
std
mov
jl
mov
repz
fsub
cmp
xchg
pop
(bad)
xor
add
mov
loope
sti
in
jecxz
mov
or
inc
pop
fld
cmp
jl
jae
adc
xchg
inc
sbb
sbb
dec
outs
jno
rcl
push
add
imul
fsubr
scas
cmp
mov
sar
in
(bad)
out
jmp
and
out
(bad)
sti
sub
xchg
push
mov
gs
jp
mov
les
aam
(bad)
xor
cwde
inc
jmp
pop
movs
or
mov
xor
enter
push
nop
xchg
mov
imul
rcr
adc
or
aas
mov
fcom
out
cmps
jle
cmps
in
and
mov
repnz
cmps
jle
push
or
dec
dec
xchg
or
mov
fild
mov
lahf
mov
fisttp
aaa
cmp
bnd
leave
push
inc
dec
in
xlat
mov
push
jl
inc
arpl
mov
and
mov
and
push
inc
inc
mov
adc
jp
jne
mov
lea
push
pop
movs
sbb
inc
addr16
sub
adc
pop
and
mov
pop
(bad)
mov
cmp
push
mov
test
(bad)
push
inc
push
aad
std
lods
cmp
cwde
popa
data16
call
sbb
iret
jecxz
mov
int
mov
xchg
sub
cdq
cwde
test
add
xchg
retf
leave
xchg
popa
mov
cli
fiadd
jb
out
add
clc
mov
outs
inc
int3
nop
in
(bad)
pop
ja
mov
jo
fistp
lea
mov
xchg
pop
or
cmps
aaa
ja
fild
aas
dec
nop
push
mov
enter
pusha
cmp
rol
mov
mov
mov
sahf
clc
test
pop
mov
mov
pop
pop
and
dec
sti
inc
lahf
dec
lock
or
loop
shl
jge
cmp
imul
sbb
std
or
fstp
out
jo
or
xchg
outs
aaa
cmp
adc
daa
xor
into
pop
push
shr
push
and
jecxz
push
or
cli
out
fwait
jmp
dec
arpl
out
jecxz
push
adc
inc
cdq
xor
ds
jns
jp
repz
push
jnp
cs
mov
out
loopne
outs
push
mov
scas
(bad)
xchg
enter
ss
loop
cli
cmp
jmp
pusha
popa
fldenv
jp
adc
lahf
mov
mov
rcr
(bad)
mov
jecxz
push
sbb
push
retf
push
push
xchg
add
popf
dec
lahf
jmp
and
scas
and
mov
stos
int
push
push
mov
mov
add
and
inc
leave
adc
in
add
dec
sub
clc
bound
fldcw
cli
rol
fwait
add
leave
cmp
arpl
mov
out
aam
push
shl
call
add
dec
loopne
cmp
pop
sub
out
sar
sbb
jle
cmps
movs
and
loope
adc
(bad)
or
and
xchg
mov
hlt
add
jle
push
arpl
xchg
cld
jmp
mov
in
fs
xchg
mov
cmp
dec
jmp
mov
cmps
cmps
and
sub
je
leave
int3
mov
test
lock
adc
sub
stos
pop
dec
popa
jne
movs
imul
mov
cmp
jae
lahf
inc
push
pop
xor
sbb
aam
cs
mov
(bad)
(bad)
cs
loopne
call
hlt
jno
dec
sub
and
sbb
fdiv
cmp
icebp
jnp
mov
les
into
daa
jb
add
test
jbe
nop
enter
mov
add
jecxz
dec
(bad)
cmp
sub
cmp
rol
mov
cmps
jg
lea
jae
(bad)
add
or
mov
stos
push
mov
js
dec
cld
xor
mov
ja
lahf
imul
addr16
pop
sbb
ret
fnstsw
addr16
jecxz
xchg
fstp
aaa
cmp
or
and
add
les
out
not
xchg
les
jae
(bad)
mov
mov
adc
mov
popf
push
adc
xchg
ror
cmp
pop
add
cwde
sub
addr16
xor
pop
out
loope
aas
cli
pushf
xchg
and
sti
imul
cmp
hlt
add
mov
xchg
std
xchg
cmp
inc
inc
pop
mov
iret
mov
adc
gs
sbb
out
fisub
mov
(bad)
test
mov
xchg
adc
movs
push
mov
into
pop
in
add
sbb
pop
pop
repz
xchg
data16
jge
cmp
xchg
add
dec
lahf
ss
(bad)
push
fwait
outs
mov
pop
xor
jmp
stos
aam
mov
sbb
loope
rol
stos
call
and
fnstcw
cmp
outs
mov
mov
jecxz
scas
movs
jae
and
(bad)
frstor
add
push
xchg
inc
hlt
out
in
adc
cmps
je
out
sbb
dec
cdq
aas
xlat
ja
fiadd
retf
pop
sahf
jno
ss
retf
sub
mov
idiv
jb
cmp
xor
leave
call
xor
pusha
imul
in
arpl
jo
aad
data16
sbb
mov
or
dec
retf
into
bound
fidiv
mov
fimul
test
inc
aad
push
inc
cld
cmc
jmp
ror
push
inc
mov
push
hlt
int3
fsubr
dec
das
imul
lods
out
loope
push
and
adc
dec
dec
loop
mov
(bad)
std
jbe
sbb
xor
daa
or
fs
dec
dec
in
(bad)
mov
add
pop
dec
pop
scas
ins
sbb
data16
aas
fcomp
add
inc
enter
or
data16
jecxz
into
enter
lds
cs
cmps
lods
and
pop
in
or
jb
fild
and
ficomp
adc
xor
sti
js
push
mov
(bad)
fcomp
adc
xor
fs
into
mov
xor
fadd
lock
inc
or
push
sub
dec
cmc
pop
rcr
lods
mov
mov
clc
xor
dec
mov
sub
mov
and
ds
dec
mov
dec
xlat
imul
mov
pop
mov
aaa
mov
jg
mov
lock
ret
mov
jle
pop
test
xor
push
xor
mov
fmul
test
pusha
test
movs
mov
cmp
hlt
dec
ror
push
xor
lods
std
lock
mov
scas
push
jne
loope
mov
fstp
mov
add
outs
cmc
data16
xlat
addr16
rol
pop
lods
mov
inc
shl
ss
(bad)
and
jbe
js
movs
jmp
mov
xor
out
clc
into
repnz
call
(bad)
fdivrp
jecxz
sbb
and
lea
mov
mov
push
push
cs
call
sar
xor
loope
rcl
inc
loopne
mov
popa
and
shr
mov
pmuludq
cmp
or
xchg
(bad)
ror
add
dec
add
lea
adc
fisubr
sahf
mov
call
dec
add
and
push
hlt
pop
(bad)
aam
movs
xchg
scas
inc
xor
fnstsw
jne
push
(bad)
(bad)
retf
lea
icebp
lahf
pop
test
inc
inc
fs
inc
pop
popa
xor
fst
sbb
xor
inc
rcr
fnstcw
inc
ins
js
movs
aas
or
es
in
je
cld
outs
mov
loope
sub
scas
or
fbstp
fidivr
mov
test
pop
pop
and
ins
xor
inc
push
aas
cwde
sub
inc
xlat
sub
mov
mov
xchg
inc
rcr
and
scas
mov
jp
je
inc
jne
fistp
(bad)
rcr
cmp
pop
pop
leave
mov
cmps
dec
xlat
(bad)
jmp
ret
push
inc
loop
fild
adc
fwait
pop
cmp
pop
in
ins
popf
or
js
lea
fwait
pop
cmp
pop
add
xor
dec
cmp
int3
sub
jmp
xor
(bad)
mov
xor
out
scas
movs
sbb
xor
clc
lahf
cmp
std
xchg
and
and
sub
ret
jecxz
mov
test
sbb
and
(bad)
ins
or
pop
push
(bad)
lahf
sbb
(bad)
loope
push
jecxz
add
mov
dec
jbe
xchg
mov
mov
mov
shr
mov
jmp
inc
leave
jmp
mov
stc
cmp
sbb
and
mov
cmp
sub
iret
out
mov
jns
mov
add
pop
push
adc
idiv
jmp
jbe
and
pop
dec
cli
pop
push
scas
sub
data16
bound
mov
movs
scas
stos
push
xor
mov
jge
ins
(bad)
pop
test
push
pushf
js
nop
movs
sbb
ret
xor
mov
mov
mov
xor
shr
in
sbb
sti
sub
ins
ja
adc
js
sub
add
test
loop
xlat
repnz
loopne
pushf
add
scas
pop
mov
or
es
ss
xor
(bad)
mov
in
inc
fucomi
add
xchg
jge
into
ins
pop
jmp
cwde
cmc
push
mov
sub
push
int
lock
shl
frstor
mov
add
push
inc
enter
pop
sbb
aaa
pop
aaa
mov
shl
and
push
and
pushf
mov
pop
dec
xor
int
fisttp
or
jl
mov
lods
add
pop
iret
stos
int
lahf
in
xchg
inc
mov
push
iret
test
mov
adc
cmp
fscale
xchg
inc
in
sbb
and
shl
std
retf
shl
aaa
out
sahf
cld
(bad)
leave
std
jns
jle
fwait
mov
jb
aas
mov
cmp
loopne
or
pop
push
in
and
pop
xchg
retf
inc
in
dec
fwait
inc
inc
or
and
inc
arpl
jns
inc
sti
rcl
inc
sbb
sbb
mov
mov
xor
mov
sbb
sub
outs
ret
pop
call
and
rol
stos
cmp
sahf
rcl
push
or
adc
jno
jle
pop
int
in
call
pusha
dec
call
pop
jne
mov
pop
call
ins
sti
sahf
push
cwde
out
scas
mov
xchg
iret
add
stos
jb
pop
jp
outs
sbb
std
into
popa
pop
dec
pushf
(bad)
aad
outs
outs
retf
push
add
jmp
adc
sub
pop
push
mov
ins
add
mov
addr16
add
sbb
adc
mov
fs
push
rcl
push
(bad)
adc
icebp
stc
jp
loop
mov
adc
aaa
or
push
loop
jmp
sub
xchg
pop
xor
mov
adc
mov
add
pop
inc
dec
aad
mov
mov
js
and
pop
cmps
cmp
bound
mov
pop
and
(bad)
pop
add
pop
add
sti
aad
pop
shr
aam
mov
mov
inc
adc
xor
xor
ds
push
out
xor
jbe
xchg
jns
pop
push
fdivr
and
shl
adc
mov
enter
mov
in
sbb
lock
call
pusha
and
jl
aas
outs
pop
push
loope
sub
sub
out
retf
stc
(bad)
in
cwde
fisttp
(bad)
sar
and
imul
cwde
(bad)
jo
repz
jae
or
dec
mov
jg
ja
or
(bad)
fldcw
jnp
mov
div
clc
iret
out
mov
or
push
paddq
sbb
das
ret
rcl
xchg
lea
pop
sub
mov
addr16
movs
pop
mov
stos
call
fsubr
fwait
test
mov
fucomip
clc
leave
mov
cmp
add
adc
push
mov
popa
pop
call
jae
add
mul
xchg
outs
nop
aad
and
retf
xor
and
push
out
loope
(bad)
mov
(bad)
push
sub
cmp
xor
push
shl
sub
loope
cmp
xor
add
xor
or
das
push
addr16
xchg
xchg
dec
mov
xlat
jmp
hlt
(bad)
sbb
loope
and
jno
adc
sbb
std
lods
sub
mov
or
cmp
or
and
mov
arpl
sub
pop
and
sbb
xchg
mul
enter
push
adc
mov
jge
add
push
shr
push
retf
xchg
clc
or
and
jb
dec
(bad)
and
inc
inc
cmp
jno
call
(bad)
scas
in
cmp
adc
mov
xor
and
push
sbb
outs
push
pushf
inc
xor
out
fwait
scas
and
lods
or
sahf
aaa
jmp
inc
data16
div
xchg
gs
cmp
shl
fisttp
loopne
sub
mov
mov
clc
sbb
mov
push
sub
jg
retf
je
adc
add
sbb
cmp
or
scas
mov
enter
push
aam
retf
sbb
pop
js
loope
dec
(bad)
cmp
pop
cdq
dec
lods
sbb
push
cli
jns
inc
lods
jbe
dec
jns
loop
pop
push
xor
pop
popa
pushf
mov
loope
cld
jnp
inc
lahf
pop
out
out
jbe
fidivr
shl
mov
pop
ret
pop
sbb
fsub
and
lahf
sub
js
gs
(bad)
iret
xor
ins
sbb
inc
cli
xor
push
rcl
push
mov
or
dec
jp
cld
ja
mov
ret
sbb
imul
in
or
in
xchg
mov
stos
jmp
push
lock
les
mov
adc
cwde
fcmovnb
inc
push
sbb
pop
push
dec
sahf
into
movs
xchg
cmc
add
leave
pop
cmp
dec
lds
test
fscale
fs
loope
scas
cld
dec
lods
pushf
arpl
stos
lock
and
or
adc
jae
out
dec
cmps
xchg
hlt
jne
fisubr
mov
xchg
xor
test
pop
fs
mov
sub
or
pop
test
stc
and
movq
rep
sbb
push
push
cmc
pop
pop
xor
push
les
enter
std
ins
mov
xchg
jo
dec
fs
push
and
inc
les
retf
sub
pop
add
sbb
add
pop
sbb
mov
daa
cmp
bound
mov
retf
and
or
test
sub
movs
ja
adc
loop
mov
xor
xchg
mov
sahf
ins
lea
loop
adc
adc
sbb
test
mov
sbb
add
pop
cmp
cli
movs
stos
sub
jae
mov
mov
or
mov
fisttp
and
or
mov
sbb
xor
dec
fadd
push
or
mov
fst
push
aaa
mov
test
addr16
into
jbe
repz
adc
mov
fnstenv
jnp
nop
out
stc
jns
jle
mov
inc
adc
je
neg
clc
loope
lds
mov
scas
adc
inc
fisttp
sub
scas
ds
dec
mov
cmp
pop
or
nop
mov
push
mov
in
add
push
je
or
pop
pop
dec
jnp
pop
test
sbb
xchg
and
jmp
scas
pop
sub
ret
pop
adc
mov
std
dec
stc
mov
xor
aam
test
pushf
add
jmp
dec
push
shl
inc
stos
mov
inc
movs
stos
ins
push
arpl
mov
(bad)
push
leave
adc
cli
into
adc
rcl
or
xchg
add
cld
jae
(bad)
fidivr
xchg
sub
mov
xlat
cwde
test
scas
stos
push
mov
pop
test
stos
pushf
cmp
mov
movs
cmp
ins
pop
add
shl
inc
ins
imul
mov
cmps
xchg
enter
sti
in
xchg
sub
cli
bound
ins
add
mov
inc
jne
xchg
cmps
sbb
xor
inc
out
enter
outs
adc
pop
adc
fistp
sbb
mov
jg
cs
mov
shl
xor
aas
lahf
xchg
add
push
loopne
rcl
jb
inc
cli
mov
and
pop
les
mov
jmp
mov
add
bt
loop
aad
call
jo
daa
mov
fld
out
cmps
jge
mov
inc
adc
in
retf
lds
xchg
(bad)
xchg
jae
cmps
push
sar
inc
int
add
cs
pop
push
(bad)
xlat
call
sahf
das
rcr
pop
or
fwait
idiv
gs
push
mov
pushf
outs
(bad)
mov
and
iret
mov
jns
jp
fs
or
ret
fcmovne
sub
aam
adc
adc
push
pop
jg
xchg
xchg
inc
or
and
fnsave
scas
cmp
xchg
(bad)
retf
inc
into
xor
mov
pop
imul
outs
add
cmp
(bad)
(bad)
jbe
inc
mov
sub
movs
sub
out
and
mov
sbb
push
xor
pop
dec
leave
sahf
retf
fistp
pop
int
jmp
aas
in
mov
stc
loop
xchg
sub
jecxz
push
out
ins
(bad)
ficom
test
or
ins
xor
ins
ror
xor
scas
test
mov
sbb
add
mov
xchg
test
inc
mov
ret
imul
cs
pop
lds
repnz
ret
or
adc
adc
sbb
pusha
aad
or
push
bound
dec
or
cmp
and
(bad)
cmp
sub
dec
push
popa
sbb
(bad)
push
xchg
jecxz
xchg
call
in
inc
xchg
inc
rcr
ss
xorps
push
call
icebp
push
pushf
out
mov
dec
imul
js
xor
inc
lea
repnz
arpl
mov
clc
std
repz
pop
into
xor
push
cli
and
in
or
adc
adc
movs
out
jle
xchg
aam
pushf
popf
mov
nop
(bad)
std
popf
mov
sahf
add
add
popf
lea
(bad)
aam
cmps
dec
xor
push
inc
mov
stc
push
out
call
or
or
mov
pop
mov
scas
pop
imul
repnz
push
pop
mov
cmp
mov
pop
fs
fldcw
xlat
mov
call
(bad)
add
xor
mov
push
add
fs
data16
call
push
fcmovnb
add
int3
hlt
ins
add
jno
shl
push
inc
jl
push
pop
mov
or
add
adc
xchg
fwait
(bad)
mov
push
add
xchg
movs
cwde
imul
mov
dec
lea
(bad)
nop
sti
daa
mov
push
(bad)
lock
mul
repnz
loopne
xor
cwde
repnz
mov
arpl
test
int
jecxz
stos
pop
data16
je
sbb
rcl
or
push
call
pop
(bad)
popa
repnz
pop
fldcw
add
(bad)
cmp
or
sub
fs
je
mov
fiadd
add
les
fldcw
mov
push
addr16
fsubr
mov
mov
call
jl
add
retf
pop
stos
inc
fsub
inc
add
test
xor
int
pusha
push
mov
es
out
dec
imul
(bad)
jne
into
or
pusha
mov
sub
inc
mov
or
out
ficomp
(bad)
(bad)
lea
pop
xor
mov
arpl
inc
jmp
adc
push
cmp
stc
aas
mov
movs
aad
stc
pop
adc
data16
mov
retf
push
pop
lock
fist
daa
mov
mov
mov
mov
add
and
and
and
and
cmp
sahf
fdivr
clc
pop
xchg
mov
push
cmp
cdq
xlat
loopne
in
xchg
bound
xor
mov
rcl
inc
sub
lods
jp
in
mov
ja
mov
cmp
mov
xor
adc
sub
test
call
and
push
mov
aaa
(bad)
jge
inc
test
pop
fstp
jmp
sbb
test
sub
mov
lock
jg
outs
jecxz
stos
cmc
(bad)
xchg
sbb
std
push
ds
inc
or
fdivr
cld
sub
loope
rol
xchg
call
mov
imul
fmul
pop
les
or
mov
xor
xor
jle
in
mov
jne
add
and
jne
jle
inc
cli
add
xchg
mov
adc
(bad)
cmp
fnsave
mov
popa
and
or
nop
retf
push
int
mov
xor
out
test
jb
xor
mov
shr
cmp
ds
dec
push
cmp
or
mov
sar
out
popf
rol
adc
aad
or
test
pop
fldcw
add
stos
adc
test
aam
bound
adc
out
adc
pop
adc
xor
(bad)
in
adc
mov
(bad)
xchg
jle
sub
mov
mov
enter
push
imul
cwde
cdq
sbb
cmp
xchg
or
cmp
imul
push
imul
shl
jb
aad
add
add
pop
pusha
cmps
scas
dec
pop
lea
add
nop
sbb
mov
sbb
cmp
clc
dec
int
lahf
inc
shl
jp
repnz
addr16
call
jmp
daa
pop
(bad)
int
mov
(bad)
ror
push
jge
das
out
jne
inc
in
jmp
ret
inc
mov
mov
xchg
pop
cmc
or
iret
ins
das
in
popa
daa
xor
ror
mov
iret
inc
add
adc
mov
scas
sbb
push
rcl
es
sbb
fldcw
dec
inc
push
mov
mov
mov
int3
dec
push
or
movs
fst
repz
xor
lock
cmp
scas
call
mov
outs
sti
in
sub
in
mov
add
ds
addr16
dec
pushf
pop
xchg
fist
ror
sbb
add
mov
or
aaa
(bad)
pusha
aaa
mov
dec
aaa
(bad)
int
add
iret
aas
pop
cs
movs
popf
js
mov
xor
cmp
retf
pop
jne
pop
push
add
mov
push
mov
int3
(bad)
add
(bad)
int
mov
fdivr
aas
gs
fnsave
mov
popa
in
dec
lahf
jp
cmc
ja
std
aas
stc
in
in
fstp
sbb
mov
imul
adc
fisubr
jmp
jnp
mov
fs
pushf
jmp
mov
xor
xchg
ins
or
mov
mov
xchg
rcr
sub
xchg
adc
or
sar
je
add
inc
xchg
mov
add
xchg
sbb
sub
inc
jo
pop
out
dec
pop
fistp
das
sbb
daa
xchg
(bad)
jb
test
sub
popf
pop
in
gs
xor
push
sbb
dec
mov
ret
add
push
test
in
test
adc
fsubr
pop
adc
xor
jmp
in
pop
je
and
outs
xor
out
or
cmp
add
sub
mov
daa
enter
push
or
xor
push
ss
mov
jb
(bad)
stos
popa
stc
(bad)
in
mov
fucompp
adc
(bad)
mov
fadd
gs
lds
mov
shl
fwait
push
cmp
xor
test
adc
inc
call
adc
add
cdq
cs
jecxz
and
push
jmp
loop
mov
sbb
shr
std
xor
adc
xor
cmp
mov
xchg
imul
adc
mov
xchg
outs
add
dec
stos
ret
push
add
aas
stos
movs
push
jb
icebp
adc
adc
mov
addr16
jg
dec
cmp
jl
es
push
repz
movs
stos
dec
add
das
out
(bad)
movs
pop
(bad)
out
scas
or
adc
call
outs
ror
add
loop
mov
and
inc
mov
inc
inc
push
adc
pusha
inc
and
iret
pop
stos
stos
in
dec
je
sbb
push
inc
pop
cmp
xchg
sub
shr
push
mov
pushf
aas
xlat
out
mul
mov
lods
ret
fcmovb
sub
xor
cmp
dec
div
ja
mov
(bad)
push
cdq
mov
(bad)
sahf
ficomp
aas
ror
jg
sub
cdq
or
lahf
out
add
pushf
jae
retf
mov
(bad)
mov
mov
mov
mov
(bad)
add
xchg
sub
mov
dec
ja
test
(bad)
mov
test
mov
mov
push
inc
push
jne
scas
mov
in
mov
pop
xor
mov
mov
dec
stc
test
jb
sbb
mov
or
fdiv
jns
loope
cmps
adc
xchg
mov
jae
push
sub
adc
(bad)
stc
fimul
sub
sub
in
jnp
mov
xchg
sub
mov
pop
(bad)
mov
arpl
loope
lahf
stos
and
jmp
xlat
loope
fiadd
xor
mov
add
push
jp
das
jp
outs
cmps
adc
sub
xchg
adc
pop
enter
je
sub
retf
ret
sbb
test
cmc
fnstsw
inc
cmp
loope
gs
cld
add
cli
jmp
inc
and
leave
int3
maxps
jmp
mov
out
mov
aam
inc
imul
add
ins
mov
xchg
dec
(bad)
adc
popf
or
div
xchg
(bad)
call
cdq
je
shl
cmc
inc
int3
mov
add
push
test
xlat
addr16
mov
sbb
int
dec
mov
fdiv
inc
pop
or
push
in
dec
stos
and
js
sub
je
outs
call
int3
and
xchg
push
adc
mov
aas
xor
push
dec
pop
or
(bad)
cs
push
jmp
ret
cmp
xor
sub
int
lods
cli
int
bound
cld
mov
shl
pop
lds
or
cmps
lods
sar
call
out
dec
rol
ficomp
stos
adc
mov
aad
outs
out
add
xchg
ins
clc
int
inc
jl
xchg
mov
rcl
and
jmp
dec
sbb
sub
sub
push
jo
fstp
lods
jo
mov
push
cmps
xchg
jmp
aam
dec
mov
xchg
sti
enter
dec
hlt
jp
jmp
sbb
fbstp
ins
in
cmp
enter
push
jae
sub
mov
sub
sub
shr
int3
shr
es
sbb
call
add
sub
inc
ret
addr16
or
push
add
aad
mov
or
cmp
std
pop
out
mov
iret
adc
adc
(bad)
in
adc
mov
cdq
mov
adc
mov
and
sub
aas
and
in
fsubr
int3
sub
scas
nop
loop
cwde
ds
test
pop
push
xor
adc
push
out
xlat
ret
add
rcl
test
jbe
fcom
xchg
mov
lods
sub
or
add
push
push
std
xchg
rol
lods
jae
test
sub
ficomp
push
sbb
popa
rcr
fdivr
out
mov
add
lods
or
mov
ins
mov
(bad)
sbb
(bad)
int3
and
pop
xchg
aad
add
add
daa
mov
dec
cmp
addr16
cdq
mov
push
sbb
xchg
popa
dec
add
or
mov
push
mov
mov
jge
adc
pusha
xor
push
xchg
cmp
jbe
add
sbb
xor
pop
xor
or
retf
lahf
xorps
dec
xchg
lea
fidiv
sub
push
push
imul
les
jb
pop
(bad)
mov
fsubr
ins
ret
add
mov
and
jbe
xchg
rol
fs
rcr
mov
cld
ins
cwde
repz
or
fild
(bad)
fsubr
out
in
xchg
fild
in
push
(bad)
xchg
imul
loop
pop
mov
lods
adc
outs
push
or
fwait
add
cmps
loopne
pop
sbb
mov
popf
xchg
add
loop
or
mov
sub
retf
sbb
dec
leave
test
popf
ror
imul
jp
mov
aam
jae
add
and
dec
dec
lods
cs
xchg
adc
dec
push
mov
imul
(bad)
fsub
in
aaa
iret
jnp
add
loop
bound
movups
scas
dec
pop
dec
hlt
mov
sbb
loope
in
pop
jle
adc
ror
jne
sbb
jg
or
mov
mov
or
mov
jae
mov
repz
in
call
jp
lahf
inc
(bad)
(bad)
cmp
cmps
stc
aas
bound
xor
and
cmp
iret
push
xchg
dec
outs
fdiv
(bad)
pop
adc
push
inc
lods
mov
fisttp
dec
cmp
xchg
leave
ins
mov
dec
add
out
sbb
in
mov
xor
cmp
rcr
add
pushw
test
and
jmp
shl
add
stc
xor
push
cmp
mov
xor
hlt
icebp
and
xor
out
call
shr
int
ds
dec
mov
inc
ret
sbb
jge
pop
cmp
push
add
imul
dec
lods
cmovge
mov
push
fadd
adc
xchg
adc
jne
adc
xchg
fisubr
js
repz
sub
lock
mov
test
fimul
xor
(bad)
cs
fcmovnbe
pushf
(bad)
mov
daa
mov
(bad)
mov
push
je
fdivr
add
das
sbb
(bad)
xor
cmp
jno
adc
ret
popa
mov
fadd
(bad)
int
and
outs
mov
or
mov
push
mov
out
fmul
pop
popa
pop
shr
nop
lods
mov
dec
in
dec
fs
ret
push
jmp
inc
or
mov
pop
aaa
mov
aam
sar
cmps
das
icebp
inc
xchg
or
jge
pop
jbe
adc
into
icebp
mov
into
mov
out
push
and
cmps
adc
sbb
adc
cwde
adc
mov
dec
inc
ficomp
jnp
push
sbb
push
dec
or
cs
fst
test
outs
sub
cmp
jbe
(bad)
std
fwait
repz
xlat
ds
and
fs
clc
xor
lds
sbb
sub
ins
add
pushf
(bad)
dec
in
(bad)
jg
pop
add
cmp
or
adc
jns
nop
inc
fisub
xchg
pop
cmp
cmp
pop
push
jmp
out
fsub
ins
cwde
retf
pop
ja
xlat
sbb
not
push
loopne
int3
push
das
xchg
lock
mov
or
mov
mov
mov
rol
dec
jo
imul
cmps
xor
and
das
xchg
popa
ror
and
sub
mov
fwait
mov
icebp
jbe
je
test
daa
adc
xchg
mov
sub
shl
cmp
adc
add
pop
xchg
and
sbb
xchg
(bad)
loopne
add
mov
cli
cli
pop
repnz
inc
es
add
dec
cmc
fdivr
sbb
int
xor
je
cmp
ret
(bad)
mov
pop
jg
(bad)
icebp
sub
add
lds
aam
sbb
sbb
sub
dec
mov
sti
ins
ds
out
je
rol
xor
out
adc
and
fild
add
test
loopne
pop
icebp
loope
inc
ror
adc
sbb
int3
or
pop
aaa
dec
mov
add
outs
cmp
dec
pop
push
rol
or
(bad)
jae
je
add
ror
out
not
jns
sub
sub
je
fisub
adc
mov
mov
adc
mov
jle
pop
mov
mov
lods
sub
fdiv
inc
sbb
inc
cmp
xor
(bad)
ins
cmp
or
aaa
es
je
cmp
xlat
mov
cmps
mov
(bad)
jb
test
mov
addr16
mov
repz
inc
jp
inc
or
ss
pushf
in
retf
out
and
inc
out
cmp
add
pusha
pop
pop
jae
mov
ds
adc
pop
xchg
pop
(bad)
sti
fild
cmc
sbb
int
jl
mov
jns
je
ds
cmp
add
xchg
cmp
call
xlat
(bad)
jo
out
ret
jl
push
cmp
pop
scas
mov
repz
imul
sbb
xlat
jns
pop
ins
ins
pop
cmp
jmp
cmpps
mov
push
xchg
stos
xor
mov
or
test
sub
push
test
bound
std
jmp
popa
xchg
(bad)
sub
xlat
lahf
jmp
mov
out
jbe
aas
ins
sbb
jno
scas
cmp
pushf
xchg
xchg
fwait
xchg
push
sub
inc
mov
fidiv
repz
mov
sub
mov
imul
or
pop
xchg
jge
mov
and
mov
mov
jmp
sub
jns
xor
repz
xor
fsub
push
test
dec
fsubr
mov
push
mov
mov
stos
mov
test
xor
outs
fcmovb
lea
mov
cmp
jbe
or
pop
pop
dec
fiadd
pop
mov
xchg
adc
pop
test
ss
stos
mov
test
jmp
and
sub
sbb
dec
or
jp
lods
ja
lds
fsub
or
shl
je
jl
dec
or
pop
jg
das
out
std
xchg
jle
jb
adc
cmc
pop
scas
adc
mov
push
nop
push
pop
inc
rol
outs
lock
je
cli
not
es
mov
mov
mov
movs
(bad)
(bad)
ins
xchg
shl
mov
lea
aas
js
test
sbb
jmp
mov
and
sbb
or
mov
pop
jae
jle
push
push
xchg
mov
hlt
addr16
inc
mov
ficom
loope
push
push
stos
daa
inc
xchg
mov
pusha
test
jecxz
adc
mov
shr
hlt
jg
cmps
push
sbb
push
movs
mov
dec
pop
in
jnp
and
js
lock
jge
jo
push
aas
cwde
add
(bad)
sub
das
sub
mov
push
aas
sahf
sub
pop
sahf
and
cmp
dec
xor
pop
adc
push
(bad)
imul
lods
and
js
or
inc
(bad)
jmp
fsub
inc
push
je
retf
add
stos
fcmovnbe
shr
fild
mov
jp
sahf
or
jbe
sbb
repnz
ja
int
imul
cs
jo
or
rcr
pop
int
div
and
push
adc
xor
dec
or
and
adc
bound
cmp
movs
pop
sub
outs
sahf
cwde
movs
pop
mov
cmp
repnz
pop
mov
adc
stos
xor
push
cmps
out
repz
out
jg
rcr
inc
sub
inc
cli
mov
or
xchg
jno
or
pop
dec
pop
xor
sbb
mov
dec
adc
mov
mov
jnp
xchg
mov
ds
jb
jg
pop
push
ror
sbb
sub
pop
mov
mov
outs
movs
imul
cmp
add
and
mov
dec
fild
ds
xor
ja
jg
dec
xchg
(bad)
call
jns
bound
inc
rcr
xchg
cmp
arpl
aad
popf
xor
(bad)
add
pop
icebp
in
daa
(bad)
in
fs
rcr
or
mov
fwait
movs
stos
push
inc
mov
pop
and
stos
mov
mov
jmp
sahf
mov
cmps
adc
cmps
jmp
fwait
rcr
dec
push
cmp
cdq
push
outs
sti
cli
push
lock
mov
mov
add
lds
sar
pop
cld
fild
inc
inc
movs
mov
inc
out
cwde
or
xor
fild
enter
mov
fisub
out
popa
repz
mov
lds
int
call
and
pop
out
scas
loopne
dec
mov
pop
cli
pop
sbb
jmp
scas
mov
mov
mov
(bad)
(bad)
not
ficomp
sbb
mov
pop
clc
enter
cmp
jecxz
cmp
dec
std
leave
cmp
sbb
xchg
scas
ficom
jne
mov
and
es
push
and
pop
jl
icebp
mov
movs
xor
(bad)
loope
mov
inc
fstp
into
pusha
xchg
inc
xchg
cmc
ja
jno
in
adc
cwde
jle
pop
imul
or
sub
add
in
push
bound
fnstcw
adc
or
push
adc
xor
(bad)
mov
xchg
add
fbstp
test
pushf
fist
fsub
lods
rcr
in
ins
jo
inc
loopne
add
sub
adc
das
retf
jmp
mov
inc
cmp
call
add
jl
aad
pop
add
dec
mov
dec
jbe
sahf
jb
sub
das
cmps
fwait
jle
test
mov
ins
lods
int3
inc
imul
mov
pop
fwait
sbb
out
inc
sub
mov
xchg
gs
test
or
mov
sub
xor
pusha
inc
sbb
aad
dec
shl
popf
sub
cld
cmps
pop
outs
fs
in
mov
mov
js
out
outs
ds
icebp
gs
push
mov
sbb
or
cwde
dec
push
push
loope
sub
lock
jg
mov
xchg
dec
xchg
add
in
jo
xlat
mov
dec
and
jbe
mov
pop
leave
sbb
ins
lds
scas
cmp
inc
in
fist
jb
add
inc
imul
cmp
in
sub
ja
jp
adc
inc
adc
xchg
pop
xchg
cld
sbb
pop
(bad)
rcl
inc
jo
sub
cmc
dec
popa
sbb
mov
adc
mov
push
and
mov
cwde
adc
movs
test
inc
or
daa
jbe
fwait
push
push
pop
jmp
cmp
xor
in
xchg
out
neg
add
push
mov
fmulp
mov
xchg
adc
addr16
add
ss
popa
shr
and
leave
sbb
or
jne
ret
dec
leave
jecxz
dec
adc
dec
push
in
mov
ja
add
lea
lahf
stos
icebp
in
xlat
adc
jge
jecxz
ds
(bad)
xlat
adc
sub
cmp
mov
jo
and
test
sub
jnp
mov
jge
sub
mov
stc
sahf
call
mov
mov
jno
jl
idiv
xor
sub
popf
or
xor
pop
clc
xor
ds
(bad)
sti
add
jns
loopne
cwde
call
retf
out
fcmovnu
jb
pop
and
xchg
mov
jno
bound
clc
sub
cmp
stos
jns
mov
int
inc
stc
jmp
mov
sbb
rcl
jb
xchg
push
pop
test
mov
inc
cmp
sbb
pop
and
lods
bound
movs
pusha
mov
in
push
std
or
popa
shr
(bad)
stc
push
mov
adc
mov
adc
jecxz
mov
cmp
xchg
daa
inc
mov
cmps
mov
jbe
(bad)
cmp
stos
push
or
add
sub
sub
inc
lds
sbb
mov
shr
test
cmp
fisub
push
pop
add
cmp
cmc
push
xor
cmp
push
dec
repnz
mov
jmp
or
fsubr
sbb
(bad)
jb
into
imul
dec
enter
pop
arpl
dec
inc
loop
iret
cmp
cmp
cmps
loop
jmp
mov
fdecstp
es
sbb
test
fdiv
mov
mov
sbb
push
sub
idiv
pop
hlt
xchg
out
mov
test
leave
ds
adc
sahf
push
adc
mov
sub
cmc
enter
sar
adc
push
test
cmps
dec
test
mov
adc
cwde
cmp
push
pop
or
mov
outs
and
(bad)
and
outs
pop
jne
cmps
pop
inc
sub
mov
jg
fdiv
mov
dec
nop
adc
cmps
mov
mov
sbb
adc
pushf
inc
pop
aad
mov
pop
mov
imul
scas
xchg
xor
or
retf
outs
mov
popw
fild
or
js
dec
imul
mov
cdq
fcom
out
adc
xchg
sbb
fs
xchg
xchg
aam
jp
sbb
mov
or
push
or
mov
gs
mov
iret
outs
iret
add
mov
ret
repnz
and
mov
push
add
repnz
popa
(bad)
(bad)
adc
push
push
jg
pop
jg
mov
xor
in
inc
cmp
push
repnz
popa
test
xchg
int3
aam
pop
call
test
add
xor
inc
or
arpl
inc
imul
and
and
ins
cmovge
xchg
push
inc
(bad)
outs
sbb
push
popf
lods
xor
pop
jne
mov
jl
bound
jg
xor
push
out
and
pop
mov
mov
es
outs
scas
mov
and
fisubr
jle
xor
popf
clc
xchg
sub
into
and
pusha
pop
sbb
and
xor
stos
arpl
retf
mov
mov
pop
cs
mov
pop
pop
mov
or
outs
push
xchg
movs
sbb
lock
adc
outs
fwait
jne
(bad)
cdq
or
aad
pop
icebp
and
jle
mov
int
cmp
dec
fs
sub
imul
or
ror
and
add
test
aas
hlt
pop
ror
ss
xor
pop
pop
inc
cmp
ins
mov
jmp
jbe
jno
sbb
pusha
out
mov
mov
push
jmp
mov
sub
fnstcw
inc
pop
mov
mov
pop
or
gs
shl
test
or
pop
or
imul
or
mov
das
cld
test
pop
push
or
adc
xchg
nop
repz
imul
popa
and
adc
xchg
aam
dec
ficomp
cmp
pop
jmp
add
mov
adc
lahf
fst
cli
enter
xchg
inc
fdivr
adc
imul
ins
dec
mov
ret
ds
bound
mov
lock
adc
scas
fwait
(bad)
jno
jmp
inc
leave
sbb
cmp
rcr
pop
(bad)
xchg
clc
xchg
sub
mov
lods
out
mov
sar
retf
mov
(bad)
cmp
mov
fcom
in
xchg
mov
aas
es
inc
cmp
inc
cdq
mov
sbb
mov
hlt
fldcw
test
outs
cmp
lea
in
fnsave
or
mov
push
mov
aaa
sbb
mov
and
xor
jbe
cmps
fstp
ja
jb
cvttps2pi
retf
scas
dec
jmp
imul
dec
jbe
add
sub
mov
sub
shr
pop
rcl
jmp
dec
in
push
jb
data16
ja
outs
cwde
mov
or
out
arpl
pop
jl
aad
mov
sub
movs
xor
cmp
cmc
jmp
cmp
inc
mov
lds
fdivr
adc
(bad)
loopne
rcl
mov
pop
inc
inc
lea
fs
mov
sar
jl
mov
pop
mov
test
test
cmc
daa
add
jne
mov
scas
dec
or
sbb
jns
jne
adc
cld
mov
mov
push
imul
xlat
jmp
ja
dec
(bad)
xor
jecxz
(bad)
mov
into
fisub
xor
dec
jbe
dec
mov
pushf
loope
inc
lahf
xor
or
sub
dec
fld
mov
add
cmp
sub
pusha
mov
or
fidivr
xchg
icebp
inc
gs
push
ss
shr
adc
fldcw
jmp
icebp
cmp
mov
aad
dec
mov
mov
shr
push
lods
imul
jb
in
adc
les
mov
adc
pop
retf
jb
or
inc
mov
cld
sti
mov
cwde
pop
div
push
call
in
mov
jns
adc
sub
sbb
test
mov
push
jns
adc
mov
mov
call
sub
retf
aad
adc
ficomp
imul
mov
push
jo
xchg
rol
cmp
or
call
aad
pop
inc
shl
mov
jae
jns
ret
pop
ret
aad
inc
xchg
bound
push
ss
jne
iret
in
cmc
inc
fimul
inc
out
shl
imul
sbb
cmp
mov
lahf
pop
cmp
stos
ret
test
mov
xchg
push
or
mov
mov
mov
jp
xchg
xchg
rcl
mov
fwait
int3
pop
jl
in
scas
mov
popa
inc
inc
(bad)
test
and
into
sub
or
clc
push
cli
adc
adc
shr
or
test
(bad)
push
ret
jge
add
dec
test
jb
popf
pop
loope
xor
dec
cmp
shl
adc
inc
test
and
mov
(bad)
push
fisttp
mov
xchg
(bad)
jle
popa
shl
inc
popf
call
clc
sub
mov
test
ins
fwait
jl
imul
js
and
rcr
mov
push
scas
or
cmp
inc
es
push
jne
lods
jbe
retf
pop
dec
out
jnp
mov
in
xor
mov
loop
push
iret
das
xchg
mov
test
adc
(bad)
cmp
mov
int
repnz
jns
sbb
(bad)
out
mov
mov
sbb
push
inc
ja
(bad)
lods
rol
xchg
fs
xchg
mov
ss
fldenv
push
in
fsub
or
pop
or
inc
test
mov
aad
mov
bound
pushf
add
stos
cdq
inc
(bad)
rol
add
push
xor
xchg
in
lods
lock
jbe
dec
(bad)
push
pop
pop
loopne
ss
adc
xchg
sub
loopne
pop
sbb
sahf
cmps
xchg
out
fs
mov
or
aam
mov
mov
ror
hlt
sub
mov
push
push
sub
mov
test
adc
sbb
lock
retf
jbe
ds
test
lock
data16
mov
push
inc
inc
out
js
sub
mov
sub
xor
or
popf
xchg
xchg
cmps
pusha
out
jle
xchg
mov
sbb
jge
sub
mov
mov
rol
lods
lock
xchg
mov
mov
imul
adc
ret
fdiv
sub
and
xlat
jno
cmp
rol
shl
mov
dec
add
imul
sbb
pop
fld
outs
xchg
cmp
inc
mov
push
cmp
push
dec
cmp
push
mov
(bad)
movs
push
arpl
inc
aam
or
rol
dec
nop
adc
fcom
and
ds
jmp
or
jp
frstor
cmc
xchg
pop
xchg
xchg
pop
in
in
dec
and
push
mov
stos
mov
gs
and
es
sahf
adc
gs
cs
in
xchg
jno
dec
jle
ret
or
mov
mov
adc
dec
lea
call
movs
add
sbb
in
es
jmp
rcl
scas
xor
fwait
adc
js
push
mov
imul
xor
fxch
test
push
jl
pop
enter
jl
and
xor
pop
rcl
outs
ds
mov
xchg
xor
jne
ss
imul
(bad)
push
out
ins
jmp
mov
sub
pop
cli
push
sbb
cdq
push
jns
dec
faddp
mov
cmps
and
xchg
mov
int
(bad)
lods
out
popa
inc
push
or
xor
and
pop
sub
lods
in
jl
pop
adc
in
fist
xchg
ss
popf
bound
push
pop
inc
xchg
xlat
mov
rcl
not
xor
(bad)
outs
xor
and
mov
mov
jle
js
sbb
mov
call
push
scas
mov
addr16
jo
fstp
lds
inc
out
dec
stc
cs
mov
push
movs
movs
jmp
in
pop
sub
sbb
aas
movs
pop
xor
ja
jmp
ret
lock
pushf
and
loop
and
scas
call
jo
sbb
mov
xchg
aas
in
push
(bad)
xor
sti
call
sub
or
push
daa
push
fsubr
fwait
jl
mov
xchg
inc
mov
or
(bad)
mov
inc
inc
aam
sub
xor
popf
scas
sbb
fwait
scas
cmpxchg
fisttp
js
mov
cmp
dec
ds
cwde
xor
addr16
not
sub
lock
mov
pinsrw
cld
pushf
and
sbb
clc
pushf
rcl
cs
popa
inc
sbb
inc
push
lahf
sar
jp
lahf
adc
out
xchg
xor
adc
adc
mov
hlt
inc
push
xchg
ds
mov
mov
add
or
mov
gs
test
xor
shl
loope
stc
and
jne
xor
stos
pop
imul
data16
push
imul
std
jl
or
jecxz
or
mov
inc
icebp
movs
add
in
es
mov
and
call
mov
stos
ret
fwait
movs
nop
inc
xchg
cli
sub
fwait
mov
in
shr
jg
mov
hlt
mov
fcmovne
mov
repnz
loopne
push
xor
cmps
dec
inc
push
mov
mov
dec
(bad)
mov
pusha
das
es
nop
inc
xchg
pop
add
jg
iret
xor
cdq
pop
in
jge
jg
mov
sub
dec
in
mov
scas
fcomp
or
loopne
enter
jne
dec
scas
jb
in
jbe
jmp
out
pushf
sahf
shl
stc
cmps
sar
out
test
sahf
or
pop
bnd
pop
and
sub
and
loop
std
adc
sub
inc
push
outs
scas
mov
out
jecxz
lods
cmp
sar
cmp
std
sub
(bad)
and
jno
add
retf
and
mov
mov
cmps
jmp
in
mov
pop
loopne
mov
sbb
inc
push
aaa
scas
repnz
sahf
push
pop
fist
dec
xlat
lahf
shl
adc
adc
xchg
mov
mov
push
push
sbb
imul
add
cli
push
xchg
jecxz
adc
je
xchg
lods
adc
push
ins
inc
cmps
and
loop
inc
xchg
nop
mov
xchg
nop
scas
inc
sub
dec
mov
adc
in
ret
adc
(bad)
int3
jle
xchg
out
xchg
adc
xor
outs
imul
loopne
aad
or
stc
out
call
or
ds
test
xchg
xor
mov
push
daa
sti
lods
leave
cdq
loop
adc
fild
adc
xchg
mov
stos
lea
or
inc
ss
dec
xchg
leave
or
mov
rol
jae
shr
pop
int
pop
mov
lock
jp
mov
xchg
xchg
sbb
outs
lods
cmps
addr16
jbe
cli
xor
repnz
mov
fwait
mov
pop
aad
and
outs
movs
pop
inc
frstor
fcom
out
test
jno
mov
sbb
dec
jne
jne
stos
add
adc
adc
adc
xchg
into
xor
pop
mov
or
loop
out
dec
pop
out
adc
mov
mov
jg
sub
mov
imul
scas
sti
mov
pop
(bad)
jge
cmp
mov
or
inc
push
push
push
or
sbb
push
(bad)
cmps
sub
fbld
mov
in
pop
test
sub
scas
pop
scas
mov
pop
mov
mov
out
popa
xchg
inc
xchg
or
push
out
push
imul
call
ins
adc
adc
sbb
retf
jo
and
shr
lods
(bad)
call
cmps
jge
pop
pop
xchg
jnp
je
sbb
nop
cmp
addr16
std
xchg
or
cli
pop
fwait
daa
test
pop
push
adc
pop
repnz
push
movs
xor
add
clc
(bad)
ds
ficomp
test
jbe
enter
push
dec
pop
icebp
aam
xor
out
std
sbb
gs
(bad)
out
hlt
push
push
aad
ins
or
dec
aas
cmp
int
ss
pushf
push
scas
imul
xor
sbb
aam
stos
xor
ret
outs
pop
and
cmc
ins
or
loope
xor
mov
pop
test
sub
fwait
ret
mov
jge
xchg
xchg
sbb
fdiv
bound
inc
(bad)
push
pop
mov
out
mov
sbb
clc
pop
out
aaa
test
test
adc
mov
cmp
xor
dec
ret
push
ret
or
pop
inc
pop
sahf
cs
or
je
and
jns
(bad)
outs
pop
mov
pop
popa
push
mov
(bad)
sbb
add
jmp
mov
call
loope
jl
push
xchg
xchg
outs
pop
sbb
push
sbb
daa
(bad)
les
out
pop
fs
sub
mov
sbb
bound
es
aaa
pusha
cmp
clc
add
mov
adc
mov
mov
sub
int3
jb
or
ror
mov
push
cmps
inc
ja
mov
pop
xchg
adc
stos
lock
mov
ja
sbb
jmp
les
ret
cmps
mov
mov
scas
sub
call
adc
repnz
lods
(bad)
sbb
loop
mov
push
imul
jo
fst
jb
pop
mov
fimul
fidivr
scas
sbb
pop
cmp
(bad)
dec
xor
xchg
out
push
adc
and
loop
and
pop
push
and
xchg
sub
es
push
mov
aas
push
inc
push
rcl
icebp
call
sub
shl
inc
sub
or
repz
pop
sbb
imul
sub
inc
(bad)
clc
aam
jns
loop
jns
leave
dec
inc
das
mov
fldz
ja
xor
mov
push
add
outs
cmp
fsub
add
xchg
mov
es
lods
xchg
les
xchg
and
cmp
pop
adc
cs
sbb
mov
mov
lds
cmp
aam
call
(bad)
daa
call
(bad)
repz
comiss
and
push
std
scas
sar
or
sub
adc
inc
or
jae
addr16
jg
loop
push
pop
pop
pusha
or
jl
dec
push
dec
fadd
xchg
lods
mov
aam
cmp
push
and
cmp
scas
xchg
daa
dec
lahf
rcl
jmp
aad
jecxz
cdq
sbb
mov
dec
add
dec
mov
lock
je
les
or
addr16
mov
mov
ins
enter
loopne
hlt
addr16
repz
daa
push
lock
scas
dec
dec
or
ret
and
xor
in
mov
inc
stos
sub
retf
gs
cmp
push
imul
popa
and
in
stos
sbb
bound
adc
lods
mov
gs
cmp
pop
mov
sbb
(bad)
dec
fld
jne
adc
push
arpl
push
or
mov
pop
outs
bound
pop
mov
jne
inc
mov
xchg
aad
(bad)
mov
std
out
(bad)
xchg
lahf
fdivp
push
push
(bad)
repnz
add
mov
or
mov
xor
aad
nop
sub
push
mov
dec
gs
pop
adc
mov
cs
xchg
and
mov
pop
lea
rol
enter
cmps
fprem
xchg
pop
mov
mov
jnp
sar
aas
sub
or
push
mov
pop
lods
push
xor
lock
mov
pop
(bad)
push
mov
xor
xor
loop
cmp
sbb
cmp
dec
js
and
jb
es
push
inc
mov
adc
inc
push
rcl
nop
mov
ror
(bad)
sbb
ja
std
ror
loope
cmp
mov
push
clc
ss
push
loope
fwait
and
outs
jne
scas
push
add
imul
test
xchg
inc
test
and
les
inc
popa
dec
inc
xor
sub
shr
mov
sub
xlat
push
and
pop
sub
and
lock
aam
inc
pop
xchg
dec
pop
adc
pop
ds
out
lods
push
jo
xchg
inc
sub
xor
mov
pop
(bad)
mov
mov
xchg
into
fld
imul
leave
jl
ret
mov
inc
test
mov
jne
push
push
push
ds
std
in
add
or
call
push
dec
add
xchg
aam
daa
xchg
sbb
mov
fsub
fnstcw
cli
mov
pop
xchg
xor
into
mov
out
ins
or
lods
dec
inc
retf
jb
jecxz
sub
cmp
fs
add
push
psubusb
jmp
punpcklwd
lock
loopne
(bad)
test
mov
test
push
mov
out
push
bound
into
into
mov
push
out
out
inc
js
ret
mov
bswap
push
ror
xchg
inc
adc
loop
loope
or
stc
xchg
jne
out
jo
sub
fistp
and
jmp
fld
icebp
xlat
push
pop
sahf
std
cmp
push
xchg
out
add
ss
loop
mov
push
sub
sub
mov
mov
sub
pop
mov
loopne
stos
or
jg
fwait
pop
push
jns
xor
pop
sbb
shrd
push
inc
xchg
mov
lods
(bad)
fdivr
ss
imul
sub
add
shl
ins
out
sub
aad
xor
movs
adc
pop
(bad)
xchg
loope
jb
je
pop
jecxz
push
pop
adc
mov
cmp
cdq
mov
push
adc
daa
add
(bad)
call
sub
ins
sbb
(bad)
cli
fsubp
xlat
cdq
dec
outs
in
popa
nop
mov
icebp
shl
jbe
add
jge
ret
lods
jns
(bad)
(bad)
xor
test
in
and
add
pop
call
pusha
dec
pop
mov
imul
mov
push
inc
movs
ds
jmp
fisttp
inc
cwde
jg
inc
add
popf
stc
adc
cmp
sbb
mov
sub
mov
retf
aas
mov
repnz
cmp
movs
sub
outs
pushf
jmp
retf
jns
mov
out
pop
jmp
scas
mov
push
pusha
aas
jns
cmp
pusha
inc
adc
dec
or
dec
cs
push
add
cmp
or
das
push
ret
lods
push
push
cli
mov
mov
add
xchg
sub
(bad)
les
jmp
xchg
jl
sub
lock
std
pop
xchg
(bad)
cmp
outs
in
in
jle
jnp
aas
pop
lock
dec
(bad)
xchg
jnp
call
push
icebp
test
fisttp
scas
push
xor
or
jo
inc
jb
inc
daa
fistp
dec
jecxz
call
xor
test
out
adc
mov
jo
inc
pop
mov
loop
xchg
sar
je
mov
daa
lods
sub
mov
push
test
cmps
test
mov
pusha
shr
(bad)
adc
ficomp
dec
pop
sub
sub
fs
jle
push
movsx
cmc
cdq
xchg
push
addr16
jl
push
stc
xor
and
mov
fbld
aad
pop
sbb
dec
push
movs
in
movs
hlt
add
(bad)
ins
sub
jmp
mov
fild
shl
dec
sub
pop
or
in
repnz
fldcw
mov
add
cmc
and
mov
mov
test
cmp
setle
shl
xchg
add
imul
pop
xchg
ja
pop
sub
icebp
dec
nop
(bad)
dec
(bad)
pop
aam
fisubr
sub
lods
jno
inc
retf
repnz
imul
stos
(bad)
pop
mov
out
mov
test
lea
call
and
sbb
adc
sahf
inc
sbb
out
(bad)
fbld
xchg
stos
repnz
jno
cmps
hlt
xchg
dec
fidivr
dec
fwait
mov
(bad)
sub
sbb
lds
xor
stc
leave
sbb
and
outs
lds
cs
jge
ror
ror
lock
adc
outs
(bad)
cdq
inc
cmp
jnp
call
push
or
sbb
push
and
out
sbb
rcl
stos
sub
jne
sar
adc
jbe
adc
imul
add
and
adc
ins
imul
mov
das
mov
xor
cld
sbb
pop
xchg
inc
mov
pop
xchg
aas
gs
imul
mov
jmp
mov
mov
cwde
adc
jno
sbb
ins
ins
and
lea
enter
das
mov
inc
push
push
ret
rcr
adc
cmc
jmp
mov
movs
fist
mov
add
daa
sbb
scas
test
popf
not
popf
lea
mov
fcmovnb
and
cmps
nop
ret
shl
pushf
(bad)
xchg
sbb
lds
push
outs
cmps
test
sar
xor
and
imul
pusha
fild
adc
icebp
dec
mov
and
cwde
sub
jge
sbb
inc
into
loopne
sar
mov
(bad)
mov
gs
xor
cmps
shl
xchg
mov
test
cmps
ins
nop
div
es
out
sub
call
ret
adc
pop
sub
fisub
mov
xor
push
or
add
int
loope
mov
and
dec
mov
xchg
mov
jb
xlat
shl
push
je
dec
and
sbb
jae
ja
jge
adc
push
icebp
out
icebp
sub
loop
sub
rcr
or
or
imul
sahf
out
cdq
mov
xchg
pop
fsubr
dec
(bad)
in
(bad)
inc
mov
mov
mov
sub
fwait
jmp
inc
lock
mov
inc
je
mov
mov
sub
sbb
xchg
sahf
sbb
sub
call
cld
add
cmp
push
jge
dec
or
es
xor
sti
sbb
inc
cld
xchg
je
mov
fwait
cmp
shl
cmps
sbb
mov
popf
inc
push
xchg
mov
mov
cmp
jbe
add
jne
(bad)
xor
aad
pop
(bad)
js
xor
(bad)
xchg
inc
jnp
jo
inc
add
and
sub
mov
xchg
sub
and
scas
xchg
clc
scas
cmps
mov
push
addr16
jmp
fmul
dec
rcr
mov
cmp
fild
xor
test
movs
pop
gs
xor
outs
mov
sti
test
je
cs
mov
fisub
rcl
cmp
push
fsub
xchg
xchg
inc
or
mov
or
jmp
sub
je
add
lock
jmp
inc
pushf
or
fnstenv
scas
hlt
cwde
mov
loope
jmp
into
movs
dec
push
jmp
jmp
in
mov
mov
fmulp
xor
dec
aaa
mov
or
xchg
ror
dec
rcr
sti
mov
sbb
sbb
pop
es
push
or
push
dec
aas
int
xor
pop
jo
xchg
inc
ret
ret
xchg
jns
addr16
jge
aaa
mov
dec
lock
adc
xor
int3
dec
(bad)
mov
outs
or
or
adc
je
jmp
sbb
cwde
movs
inc
dec
push
pop
inc
push
xchg
add
scas
xchg
inc
or
mov
fdiv
ret
es
xchg
js
int
lods
jg
xchg
xchg
jne
jp
inc
add
and
shl
(bad)
popf
ror
jmp
xchg
mov
mov
lock
cmp
push
rcl
xlat
cwde
inc
mov
pop
mov
add
inc
jl
cmp
jae
loopne
jo
and
(bad)
jmp
jbe
push
test
js
mov
dec
adc
mov
mov
sbb
push
int
repnz
pop
mov
call
in
xor
fsubrp
or
pop
fwait
lods
iret
jae
xor
xor
ss
mov
xchg
mov
inc
mov
nop
push
xchg
repnz
push
mov
jp
xor
jnp
cmp
sar
stos
data16
jge
mov
cld
add
mov
push
cli
sub
(bad)
call
retf
sbb
std
or
sub
rol
test
or
jne
xor
loopne
movs
pop
shr
cmp
xchg
sub
xor
or
xlat
ds
imul
cmp
into
stos
push
ss
sar
(bad)
pop
push
sbb
in
jg
jae
inc
dec
das
jns
pop
push
cmp
mov
fild
std
mov
jg
xchg
xlat
dec
int
pop
ret
fmul
out
cmp
sar
add
or
mov
mov
mov
push
retf
sub
ret
(bad)
jns
scas
pop
push
mov
mov
outs
dec
and
out
shr
mov
or
cdq
pushf
out
push
dec
dec
mov
pop
or
lods
or
sub
jne
mov
add
pushf
push
icebp
test
ret
dec
xchg
mov
or
pusha
mov
mov
jns
nop
out
inc
fstp
jno
inc
pop
aaa
aaa
push
repnz
and
adc
mov
(bad)
in
pop
xor
inc
bnd
jle
mov
mov
push
mov
pop
jmp
fwait
push
xchg
pop
xlat
std
jmp
adc
xchg
sub
mov
add
(bad)
cmps
shr
add
sbb
imul
cmp
or
(bad)
fidiv
cli
adc
lods
fld
xchg
add
and
stos
aaa
mov
(bad)
outs
sahf
hlt
popa
sahf
cmp
add
adc
pop
lea
push
pop
pushf
shl
mov
in
pop
pusha
add
push
or
shl
push
in
stc
into
pop
add
and
ds
ficom
xchg
test
int
mov
add
mov
jmp
test
adc
ror
or
xor
and
retf
les
or
cmps
test
xlat
adc
test
lahf
(bad)
xchg
mov
adc
fs
sub
fisttp
jecxz
xchg
xchg
retf
stos
cmps
mov
push
mov
pop
sbb
add
out
xor
(bad)
pop
jo
inc
pop
enter
lods
mov
add
cld
mov
xchg
clc
js
cwde
cwde
jo
pop
sbb
scas
sub
mov
aad
gs
jmp
pop
cmps
std
(bad)
loope
in
push
dec
outs
loope
inc
cmp
out
inc
call
nop
test
movs
pop
or
push
sbb
dec
cld
fstp
call
out
loop
push
les
sub
sbb
dec
ret
adc
add
call
(bad)
(bad)
js
mov
sbb
out
(bad)
sbb
std
xchg
das
out
inc
je
xor
stos
push
mov
enter
jns
mov
movs
lods
popf
push
inc
sbb
repz
cmc
fdivr
mov
push
add
fisubr
(bad)
sar
retf
xor
pop
rcr
pop
xor
repz
push
cmp
pop
push
div
in
fist
and
xchg
rol
xchg
jmp
(bad)
sbb
add
je
mov
retf
out
pop
pop
fisub
(bad)
xchg
int
int3
sub
pop
out
mov
aaa
add
shl
push
test
cmp
pushf
std
out
sahf
xchg
xor
dec
cmp
and
div
or
inc
adc
test
xchg
ret
add
(bad)
(bad)
pop
lock
call
xor
ins
lds
pop
fcmovbe
jo
jo
clc
jnp
stc
lahf
mov
sbb
ror
inc
inc
inc
popa
add
xchg
loopne
ror
sbb
push
sub
ja
push
cmp
ret
inc
mov
in
sbb
aaa
nop
xchg
loope
movs
or
push
pop
fmul
pop
sbb
loop
pop
jge
mov
pusha
pop
or
sub
jb
int3
ret
cs
outs
dec
adc
mov
xor
mov
or
in
mov
mov
adc
add
pop
enter
mov
icebp
stos
adc
inc
das
xchg
mov
jmp
cli
xchg
add
xchg
adc
nop
add
aad
nop
sub
push
hlt
cmp
push
pusha
mov
(bad)
fdiv
mov
adc
mov
adc
es
bound
xor
sysexit
nop
ja
mov
cwde
mov
test
pop
repnz
iret
jmp
push
mov
adc
add
dec
cld
aam
ficomp
jmp
cmp
xor
sub
pop
imul
mov
sbb
pop
scas
lds
aad
cmp
gs
push
(bad)
adc
adc
dec
adc
adc
in
cmc
xlat
add
scas
out
(bad)
xchg
aas
cmp
dec
or
in
pop
mov
xor
rol
cmps
fcmove
mov
leave
mov
xchg
sub
mov
jno
mov
cld
jg
leave
repz
dec
xor
aas
jle
jecxz
mov
jnp
cdq
mov
ins
outs
cmps
or
jns
rol
pop
fadd
inc
pop
or
push
std
adc
sbb
test
and
aam
dec
jo
cmp
bswap
lds
test
dec
or
and
and
cmps
or
pop
or
(bad)
jmp
addr16
bound
cmp
xchg
xchg
sti
push
inc
dec
pop
pop
stos
push
mov
inc
sbb
or
clc
jno
xchg
mov
(bad)
pop
ins
rol
daa
mov
pop
sbb
xchg
jne
push
mov
mov
jge
mov
cdq
pop
stc
push
push
retf
call
xchg
lock
jmp
push
push
lods
adc
loopne
mov
call
pop
jg
stos
or
jns
je
adc
dec
inc
fnstenv
inc
cmp
jle
sahf
xchg
push
inc
std
es
cmps
cld
fs
xlat
jge
dec
fiadd
xor
inc
stos
in
in
adc
jmp
inc
mov
pop
enter
repnz
and
and
movs
push
add
mov
sbb
jmp
mov
in
sub
dec
hlt
bound
and
inc
out
mov
mul
push
fist
jno
sbb
inc
loopne
adc
or
inc
or
mov
add
jmp
enter
mov
shl
js
adc
jl
adc
shl
int3
mov
mov
(bad)
outs
xor
or
aaa
and
adc
fsubr
aaa
mov
dec
ror
in
push
stc
lea
jns
icebp
jnp
jle
sbb
pop
cmp
jae
mov
inc
test
sub
shl
outs
aam
add
bound
aas
movs
mov
pop
sbb
push
dec
in
and
pop
xor
je
xchg
cmp
out
stos
rcr
cmp
pop
test
xor
dec
jge
sbb
lahf
pop
cmp
pop
mov
or
cs
scas
ins
stos
sub
push
pop
mov
jns
in
addr16
lods
loopne
ins
dec
das
jp
jl
jp
mov
int
push
mov
adc
xor
mul
adc
cmc
cs
adc
retf
dec
or
pushf
push
inc
xchg
jmp
sbb
inc
fidivr
and
mov
shl
(bad)
stos
ret
loope
sahf
mov
pop
test
and
dec
stc
adc
push
xor
mov
(bad)
clc
jns
push
adc
icebp
mov
sbb
test
rcpps
mov
add
test
mov
loope
das
cmp
add
daa
push
addr16
movs
sub
into
push
cs
out
dec
lock
leave
in
push
push
rol
out
in
inc
mov
xchg
call
pop
test
mov
cld
jns
and
cmp
sub
xchg
xor
sti
adc
xor
cmp
or
test
dec
push
rcl
xlat
call
movs
(bad)
xor
pop
inc
test
test
fisubr
mov
push
les
push
mov
cld
and
hlt
js
and
aas
xchg
mov
aas
imul
(bad)
popf
lahf
enter
mov
int3
shl
sub
imul
and
jne
cmps
pop
push
xor
mov
cmp
push
data16
sbb
lahf
mov
fild
out
dec
add
scas
(bad)
mov
push
sub
mov
cdq
inc
jmp
ins
xor
mov
cdq
jns
aaa
test
(bad)
xor
gs
cmp
mov
sub
int3
dec
jae
push
xor
cli
xlat
js
outs
retf
stos
pop
xchg
mov
fmul
jo
imul
jg
and
add
inc
sbb
mov
mov
shl
frstor
aam
jno
xchg
sbb
sub
pop
daa
fld
mov
popf
cmp
xchg
popf
scas
icebp
movs
enter
nop
nop
mov
push
ins
inc
xor
mov
sbb
cli
sar
std
adc
stc
shr
outs
lahf
sti
and
add
dec
sbb
mov
or
add
push
mov
dec
ret
adc
retf
mov
ficom
xchg
aas
in
add
jl
sub
xchg
sub
ror
fisttp
jp
xor
or
ret
add
test
add
push
jo
xchg
mov
inc
(bad)
jle
jno
scas
adc
fild
xlat
xchg
cmp
int3
jb
test
jns
jae
shl
xlat
fsubr
xor
scas
aad
cli
addr16
lahf
mov
jl
mov
leave
pop
(bad)
retf
out
ss
cmp
cmp
leave
loopne
and
into
test
mov
push
dec
jle
mov
jnp
fcmovne
pushf
shr
test
test
jnp
sub
fs
loopne
pop
jo
(bad)
cdq
es
movs
push
bound
adc
xchg
or
sbb
sub
jmp
pop
test
mov
mov
add
out
jno
icebp
outs
ret
mov
mov
ins
fidiv
in
pusha
faddp
dec
sbb
push
xchg
fsubr
outs
mov
xor
push
mov
xor
pushf
into
gs
clc
pop
adc
mov
int
push
jbe
and
enter
addr16
add
cmp
xchg
out
jbe
leave
push
and
dec
or
les
cli
rol
or
sbb
paddsw
in
fdivr
and
in
jmp
dec
cmc
inc
xchg
xchg
mov
sbb
shr
movs
mov
mul
and
out
rcl
cmc
adc
pop
inc
out
xchg
scas
adc
in
shr
add
test
dec
mov
rol
ss
and
inc
cmp
test
jbe
cmp
loop
js
sahf
pop
arpl
mov
sub
shr
in
or
push
int
aam
lods
pop
sub
xsaves
rol
jo
ficom
pop
push
std
add
xchg
mov
popf
in
scas
shl
pushf
xchg
jle
push
(bad)
popf
les
and
adc
push
mov
or
push
in
sub
xchg
cmp
rol
push
out
inc
jo
mov
xchg
hlt
ss
cdq
sbb
xchg
pop
add
jnp
sar
xlat
xchg
jns
int3
pop
(bad)
call
and
xchg
adc
outs
sbb
mov
ret
push
in
push
and
bound
loopne
in
inc
add
push
sub
test
(bad)
in
jnp
aaa
and
cmp
lods
sub
adc
in
dec
mov
mov
ficomp
stos
data16
rsqrtps
mov
rol
xor
mov
cwde
call
jns
pop
jns
adc
add
mov
and
dec
mov
aas
jmp
dec
cmp
sbb
(bad)
in
xor
xchg
loopne
and
pusha
fld
leave
mov
adc
in
sbb
aaa
rol
lods
lahf
jl
gs
mov
mov
icebp
and
adc
sub
mul
lock
popf
dec
mov
in
add
push
repnz
ror
pop
test
cmp
pop
lods
adc
cmp
ins
lock
cmp
sbb
cmp
dec
lods
lods
inc
ins
push
call
and
shl
pusha
or
call
data16
repnz
dec
adc
shr
ror
mov
xchg
cdq
sub
out
mov
cmps
inc
rol
xchg
imul
push
les
mov
mov
mov
fmul
fisttp
loope
xor
pop
mov
mov
jbe
push
fst
dec
(bad)
jno
je
xlat
ficom
mov
add
and
push
hlt
mov
(bad)
push
daa
mov
adc
repnz
mov
mov
adc
add
pop
jo
movs
movs
(bad)
test
xor
test
and
or
inc
xchg
dec
pop
fidivr
mov
sub
mov
fist
push
sub
jle
leave
lahf
mov
loope
adc
sub
(bad)
fimul
mov
icebp
enter
and
icebp
stos
jecxz
out
data16
lahf
mov
jbe
addr16
psubsb
rol
pop
add
jle
mov
in
ud1
ret
mov
retf
inc
sbb
test
push
lahf
adc
cmp
cmp
shl
lahf
jns
mov
std
or
dec
fnstenv
inc
mov
jp
jb
mov
sub
ror
mov
out
sub
add
add
aas
out
sbb
fidiv
mov
das
adc
ds
and
int3
cmps
gs
sub
cwde
iret
(bad)
cli
add
into
fsubr
or
xor
aaa
lds
ja
jne
inc
ss
mov
inc
adc
mov
adc
sub
mov
cmp
jnp
movs
xchg
sub
add
xor
out
mov
mov
jl
push
push
shl
pop
out
sub
jg
bound
js
scas
mov
test
mov
cmp
mov
sbb
enter
ss
iret
or
das
imul
adc
mov
bound
mov
fwait
es
cmc
jmp
pop
ret
into
sub
ja
fdiv
pop
test
inc
xchg
jle
push
(bad)
mov
fdiv
cmp
mov
arpl
(bad)
mul
test
xchg
ror
leave
ja
lods
je
cdq
sbb
shl
mov
mov
ficom
push
push
sbb
mov
std
sti
div
fnstsw
xor
and
mov
sbb
pusha
or
shl
jp
jmp
mov
aam
mov
out
xchg
lea
sbb
inc
daa
sbb
xchg
xchg
and
mov
mov
jmp
cmp
fmulp
cmc
fiadd
adc
mov
sub
icebp
mov
pop
or
pause
iret
pop
mov
sub
xor
gs
sbb
and
loope
cld
cmp
push
cs
sbb
fs
aam
mov
fwait
ins
mov
inc
test
call
(bad)
push
adc
loopne
sub
cmp
test
mov
dec
mov
pusha
repz
mov
bound
aam
inc
and
rcr
test
jg
jl
add
add
hlt
stc
mov
in
(bad)
jns
mov
xor
adc
xchg
je
push
xor
outs
scas
(bad)
pusha
mov
fstp
iret
outs
lea
mov
call
mov
call
inc
sub
dec
push
retf
mov
cmp
dec
ds
xchg
shl
xchg
cmp
jle
adc
jne
jmp
inc
and
pop
stos
jo
xor
scas
fstp
jecxz
(bad)
pop
sbb
dec
sub
mov
shl
fmul
add
mov
inc
sti
mov
mov
pop
out
dec
adc
dec
or
add
or
mov
ror
mov
sub
not
mov
sub
movs
sub
inc
pop
sub
pop
fcmovbe
or
sub
std
mov
enter
clc
xor
cli
mov
in
xchg
xchg
push
dec
cdq
adc
and
test
sbb
mov
mov
movs
jge
push
jns
sub
sub
inc
and
sbb
xchg
pusha
mov
dec
or
sbb
sub
or
jp
or
out
push
fs
aad
jbe
pop
outs
and
mov
pop
sar
test
aaa
in
sub
mov
dec
jecxz
int
dec
in
jecxz
rcl
xchg
ins
cmp
out
loope
outs
mov
call
std
loopne
enter
iret
pop
mov
iret
mov
adc
cmp
movs
cdq
adc
outs
(bad)
sub
lock
lods
leave
movs
adc
dec
icebp
jb
cmp
push
add
fadd
ja
mov
call
jecxz
dec
dec
in
pop
add
mov
or
xchg
ret
or
imul
popf
out
call
mov
jmp
fwait
cli
pop
shl
cdq
cmp
cmp
dec
sbb
mov
sub
xor
mov
sub
mov
nop
lock
sub
xor
push
arpl
in
mov
stos
test
and
mov
jne
or
mov
inc
std
adc
sub
or
push
dec
adc
je
call
mov
jnp
push
pop
inc
push
cld
jmp
and
cld
mov
add
jne
cs
push
popf
mov
xor
stos
sbb
(bad)
pushf
mov
add
test
jp
mov
and
mov
pop
sbb
fcmovne
or
mov
xor
ret
add
cmp
sahf
mov
aas
dec
push
mov
xchg
loop
ds
call
sti
inc
xchg
pop
or
xor
stc
fcmovnu
cmp
inc
inc
arpl
sub
ret
cmp
xchg
mov
hlt
pop
adc
inc
js
and
xor
test
out
push
fld
fst
aam
xchg
push
xchg
xor
fisubr
out
fisttp
inc
inc
jo
arpl
icebp
mov
add
mov
sub
aas
imul
push
int3
inc
fwait
lods
into
nop
lods
push
sbb
enter
xor
mov
fbstp
cld
lahf
inc
(bad)
mov
fs
jb
fs
repnz
stc
rcl
add
cli
test
call
mov
icebp
dec
aam
fdiv
cmp
rol
dec
cmp
mov
repz
xchg
add
dec
push
arpl
lock
loope
icebp
jl
push
in
or
adc
mov
add
mov
ins
cmp
repnz
fs
xchg
or
add
jmp
push
stc
sbb
fist
mov
add
cmp
xchg
lock
pop
inc
add
les
stos
mov
aaa
mov
retf
xor
(bad)
mov
(bad)
out
in
call
icebp
jne
sbb
jge
(bad)
bnd
dec
dec
lods
jge
push
jg
in
xor
retf
and
stc
push
cdq
add
xor
lods
rcr
(bad)
cwde
adc
in
jns
addr16
sbb
and
(bad)
(bad)
in
aam
imul
xor
aas
loope
xor
mov
push
outs
outs
rcl
sub
shl
inc
mov
ja
push
add
hlt
aaa
jae
sti
jo
or
inc
stos
inc
mov
sbb
in
clc
jo
push
or
inc
retf
inc
lea
call
shr
pop
and
mov
push
or
sub
hlt
mov
mov
outs
mov
lock
dec
fild
jne
cwde
shr
xchg
sbb
dec
rol
xchg
fsub
leave
xchg
add
gs
sbb
(bad)
mov
cdq
cmp
xchg
and
inc
pop
hlt
(bad)
int
mov
inc
mov
xor
and
dec
fistp
push
fidiv
cmps
xchg
xchg
inc
pop
sbb
test
ins
call
add
stos
ins
iret
fs
jmp
sbb
(bad)
out
loop
or
inc
jnp
cmp
out
int3
scas
cmp
fcomp
xchg
js
mov
add
imul
mov
or
cmp
fild
int3
ror
lock
cmp
(bad)
mov
nop
sbb
(bad)
loopne
xchg
fistp
scas
icebp
pop
icebp
or
outs
jmp
push
test
and
add
inc
jmp
mov
or
sub
adc
pop
imul
mov
pop
shr
hlt
cmp
ret
sub
pop
jnp
(bad)
gs
add
lods
ins
mov
and
stos
dec
leave
mov
cmps
mov
cld
adc
mov
mov
bound
or
inc
jb
push
je
(bad)
sub
ins
mov
inc
xor
fwait
jns
cmp
dec
add
shl
into
jo
jmp
or
inc
sbb
push
pusha
outs
xchg
pop
mov
arpl
or
repnz
mov
cmp
pop
lds
js
push
add
mov
(bad)
sub
sahf
xchg
pop
cmp
ficomp
mov
xor
push
(bad)
inc
dec
retf
mov
ror
jne
sbb
(bad)
sbb
and
mov
imul
lahf
jmp
out
or
int3
popa
out
cld
pusha
pop
ins
lea
jle
dec
add
retf
dec
ins
dec
jns
iret
out
inc
dec
mov
cmps
mov
(bad)
ficom
test
inc
iret
ds
cmp
retf
in
xchg
stc
lods
iret
mov
retf
gs
aas
retf
xchg
sti
popf
jge
cmp
icebp
bound
shl
pop
out
fnsave
mov
fnsave
dec
xchg
cdq
mov
inc
xchg
cmps
loopne
nop
mov
repz
xchg
loope
sar
xchg
cwde
leave
aas
out
push
sahf
mov
xor
jl
sqrtps
das
jmp
add
ror
sub
out
mov
adc
jbe
mov
cmps
inc
stc
sbb
call
pushf
jo
jno
int
or
aaa
icebp
push
repnz
outs
call
inc
xor
imul
fbstp
imul
loopne
or
adc
add
cwde
je
ss
dec
ds
fucom
xchg
cmp
pop
pusha
sbb
test
fs
call
jmp
cmp
add
adc
or
adc
sub
repz
arpl
aaa
cmp
pop
xchg
add
mov
(bad)
or
sbb
loop
stos
icebp
gs
test
pop
dec
sub
iret
mov
fs
dec
pusha
test
jecxz
or
or
and
and
pop
call
in
dec
xchg
rcr
jo
int
mov
mov
jbe
imul
jnp
cmp
inc
sbb
std
push
xor
mov
test
cmp
aad
imul
xchg
in
mov
addr16
pop
fidivr
jo
dec
pop
gs
push
in
arpl
int
jecxz
pop
int
je
bound
mov
mov
movs
adc
fdiv
call
out
pop
rol
and
add
inc
jne
mov
div
movs
cli
mov
int
push
xchg
mov
cmps
xor
sub
push
inc
sub
scas
xchg
mov
pushf
jge
and
icebp
and
push
sub
ret
fstp
mov
and
loopne
inc
mov
int
sbb
daa
call
xor
and
or
jmp
add
pop
lock
dec
add
imul
shl
in
jp
or
pop
repz
out
xchg
or
mov
inc
adc
ficom
adc
xchg
loope
and
push
scas
or
xchg
or
dec
sub
sub
dec
cs
scas
sub
sub
sbb
out
inc
jecxz
pop
pop
and
push
pop
sbb
sbb
sub
retf
gs
cs
jae
adc
cmp
and
jl
mov
push
scas
jae
sbb
retf
fmul
push
mov
mov
rol
pusha
bound
fnstcw
add
test
hlt
rcr
adc
cmc
mov
push
jg
nop
rcl
xchg
cmps
and
in
test
cmp
push
mov
in
xor
ror
movs
cmp
cmps
fdiv
jnp
out
ins
ins
mov
xor
js
xor
or
ins
ficomp
inc
(bad)
adc
mov
(bad)
mov
sbb
mov
sar
leave
retf
jmp
jns
pop
stos
test
xor
sub
adc
xor
and
pop
jg
add
xor
and
idiv
push
nop
mov
xor
or
test
push
inc
push
into
ror
add
sbb
and
inc
and
mov
jbe
out
imul
sbb
and
shr
mov
sahf
jp
cmp
pop
pop
mov
ds
loope
sub
imul
mov
add
out
lds
push
mov
pop
cli
rcr
add
(bad)
dec
adc
imul
push
xor
cmp
add
jmp
imul
pop
bound
out
lea
hlt
dec
repz
mov
mov
jno
xor
in
xchg
in
push
into
(bad)
mov
dec
pop
adc
pop
test
cmp
ds
aas
jno
inc
xor
sub
nop
arpl
mov
sub
push
iret
daa
xchg
mov
sub
fstp
in
imul
movs
sbb
aad
jne
and
pop
in
mov
lahf
push
mov
dec
pop
pop
pop
adc
and
fisub
aad
dec
xchg
push
ret
sbb
lea
shl
xchg
pop
clc
sub
lahf
sub
inc
rcl
enter
mov
jbe
pusha
inc
push
adc
add
cmp
push
push
sbb
xor
adc
mov
cmc
aad
mov
ror
fisttp
imul
jb
mov
cs
je
jae
outs
sub
cs
fadd
sbb
cdq
test
mov
inc
cmp
mov
rcl
jae
movs
push
and
and
(bad)
adc
xchg
push
dec
aaa
pop
movs
(bad)
retf
outs
int3
jp
neg
in
(bad)
jmp
in
mov
inc
fst
xlat
in
jmp
loopne
xlat
int3
out
out
or
mov
mov
pop
ret
cmps
test
hlt
dec
inc
and
add
sub
fstp
and
sti
cdq
inc
add
cdq
mov
jno
shl
call
popf
xor
jle
and
sahf
repnz
cmps
popf
mov
test
pushf
icebp
and
addr16
jno
push
fwait
sbb
outs
jmp
out
movs
inc
sbb
and
dec
pop
add
jo
fistp
mov
sub
mov
lahf
int
pop
xor
jmp
xchg
popf
out
imul
lods
cmp
aaa
jae
fld1
int
adc
dec
mov
jmp
enter
aad
sub
leave
(bad)
into
hlt
(bad)
pushf
lods
out
mov
mov
sar
jmp
ins
xor
mov
add
fiadd
mov
add
push
adc
jo
and
xchg
stos
test
ret
retf
pop
inc
adc
xor
lea
and
shl
cmp
inc
xlat
sub
popa
cmps
out
fild
push
and
sbb
out
push
sar
dec
inc
adc
loopne
jp
mov
stc
imul
and
cmps
pushf
jl
neg
fcomp
shr
xor
mov
fld
mov
pop
mov
or
ins
out
jae
dec
pop
inc
rcr
(bad)
jo
mov
jmp
cmp
lock
jl
retf
pop
mov
jnp
test
jge
div
jl
shl
jmp
mov
shl
punpckhdq
jp
pop
xlat
lds
aad
inc
mov
stc
cmp
sti
adc
xor
jae
sbb
or
stos
jne
and
int
pushf
dec
test
mov
in
push
movs
add
shr
mov
das
jge
xchg
sar
xchg
aas
call
push
(bad)
cwde
pop
mov
mov
inc
enter
mov
jge
xchg
daa
inc
mov
pop
dec
inc
imul
test
jecxz
mov
hlt
mov
call
(bad)
addr16
sub
jne
mov
adc
cmps
add
xchg
(bad)
jmp
psubusb
xor
mov
push
(bad)
enter
repnz
ror
cmp
mul
push
aad
cs
dec
push
push
popa
mov
dec
cmp
mov
pushf
sub
pop
stos
nop
int
and
jecxz
std
adc
dec
cwde
call
addr16
mov
lock
sbb
xor
mov
leave
outs
in
sub
sub
stc
sbb
add
in
sub
mov
cs
retf
add
xor
cmps
jnp
seto
pop
inc
jmp
pop
jae
jl
ja
or
repz
xor
fs
pop
push
out
add
test
pop
and
dec
ins
pusha
pop
fmul
pop
push
adc
call
mov
xor
pusha
add
cmp
out
in
jecxz
xchg
push
lea
sbb
data16
cs
fistp
ret
xor
cdq
mov
and
push
or
cs
mov
outs
push
adc
sti
or
mov
inc
push
iret
jge
ds
xchg
call
sbb
in
ja
outs
pop
xor
mov
int3
mov
mov
jl
cs
scas
pop
movs
cs
jmp
xor
xor
xor
xchg
xchg
sbb
stos
jne
imul
shr
stos
adc
xchg
and
or
cli
dec
cmp
fs
adc
inc
mov
(bad)
mov
popa
movs
jmp
xor
std
gs
cdq
(bad)
(bad)
inc
fiadd
jae
mov
sub
adc
push
jecxz
loop
and
xor
rol
or
xchg
mov
and
arpl
xchg
xlat
dec
adc
dec
out
mov
mov
dec
daa
repz
mov
jge
ins
rol
mov
icebp
xor
push
dec
jl
jb
bnd
loope
movs
adc
pop
(bad)
movs
cmp
or
push
data16
loop
xor
sbb
(bad)
and
jno
shl
(bad)
hlt
inc
pop
sbb
addr16
sub
push
xchg
add
imul
inc
pop
or
or
hlt
cmp
xchg
lds
dec
jae
and
jmp
cmp
dec
mov
aad
push
movs
jle
cli
mov
test
pop
out
jb
(bad)
retf
call
scas
mov
pop
jecxz
cmp
mov
rol
push
inc
cmps
mov
xchg
and
cmp
adc
pop
mov
int3
sar
sbb
test
sti
in
outs
adc
and
movs
dec
lock
dec
pop
push
add
sub
outs
hlt
fstp
int3
mov
sub
cdq
cmp
sti
adc
xor
push
cmp
fldenv
sub
sub
or
daa
cmp
mov
lock
pop
push
push
bound
pop
in
xchg
inc
lock
pushf
pusha
and
or
mov
adc
test
stos
pop
pop
std
jno
mov
lock
(bad)
outs
and
push
xchg
mov
inc
daa
in
std
push
dec
or
push
std
sbb
push
scas
adc
pop
xchg
aam
jbe
adc
arpl
xchg
fs
jmp
sahf
leave
jmp
leave
mov
inc
(bad)
or
and
sete
xchg
rcr
mov
fisttp
daa
dec
and
fcomp
repnz
inc
xor
cmp
(bad)
mov
xchg
in
daa
xor
sub
out
aad
push
rcr
xchg
mov
xchg
and
add
(bad)
push
repz
inc
jecxz
test
dec
ins
sub
dec
xor
pop
push
cmp
or
enter
inc
mov
fs
cli
sbb
jbe
fwait
ret
inc
jno
pop
cmps
cdq
dec
or
rcr
shr
xor
mov
push
retf
mov
(bad)
stos
scas
ins
repz
mov
sbb
pop
lock
adc
fcomi
imul
inc
div
fistp
jnp
mov
jl
pop
(bad)
mov
jno
les
pushf
cmps
or
loope
in
xor
pop
std
mov
sbb
pop
and
sbb
mov
sahf
adc
push
out
xor
test
dec
out
jl
pop
add
pushf
std
imul
pop
cli
test
xlat
mov
lods
add
xchg
mov
push
test
inc
aas
jge
int3
jns
shr
mov
mov
in
das
cld
mov
rdmsr
push
es
scas
in
pop
cmp
cmp
xor
iret
cmp
mov
lods
push
(bad)
fdivr
repz
and
cmc
mov
jg
pushf
jnp
pop
push
and
(bad)
cwde
mov
add
sub
test
(bad)
(bad)
xchg
jg
and
stos
mov
pop
mov
adc
cld
fidiv
gs
jl
push
iret
pop
fimul
movs
adc
inc
jne
sub
inc
cmc
leave
jp
sub
dec
and
fs
scas
retf
retf
mov
push
pop
aam
into
shl
les
out
pop
inc
and
lea
test
sbb
(bad)
js
aam
push
fwait
pushf
dec
or
pop
je
outs
cmp
lods
xchg
xor
adc
stos
imul
mov
pop
adc
xor
mov
fist
in
(bad)
call
jmp
int3
xchg
push
or
fabs
mov
push
hlt
sbb
jg
mov
pop
mov
inc
aas
rcl
jno
xchg
out
sub
xchg
jnp
jg
clc
mov
out
inc
lock
push
(bad)
mov
fstp
jg
mov
mov
jno
jns
pop
xchg
cli
xchg
adc
sbb
xor
xor
xchg
adc
xor
dec
adc
xchg
dec
sub
jb
popa
hlt
outs
bound
aam
pop
inc
fwait
push
hlt
hlt
mov
jle
aaa
test
inc
pop
pop
inc
ds
xor
movs
push
jo
and
inc
fdiv
or
movs
xchg
jl
in
and
push
dec
jns
and
push
into
inc
hlt
inc
jmp
adc
nop
scas
fimul
les
imul
mov
pushf
mov
push
cmp
and
push
mov
pop
add
in
imul
pop
cmc
(bad)
and
push
mov
sbb
icebp
sbb
xchg
cmp
dec
fnstcw
and
pop
in
fild
or
xchg
stos
into
movs
sub
jmp
push
inc
push
scas
adc
int3
sbb
sub
sub
test
sub
pop
shl
mov
(bad)
jne
mov
pusha
and
push
dec
in
popa
and
repnz
jno
inc
out
mov
fstp
xor
pop
mov
xor
sbb
int3
mov
dec
cli
cmc
pop
push
aas
movs
sbb
lods
shl
icebp
xchg
dec
fmul
(bad)
xor
add
aas
jne
ds
movs
pop
mov
ja
inc
xor
jns
(bad)
pop
mov
cdq
loop
mov
mov
xchg
test
jne
ins
cmp
enter
mov
sub
int
add
mov
repz
sbb
lds
mul
sub
cmps
sub
daa
lds
call
cmc
mov
in
sub
jle
xor
mov
pop
out
ins
inc
push
popf
test
xchg
test
loop
dec
xor
jp
dec
dec
jecxz
sub
rol
sahf
mov
mov
and
pop
aam
pop
leave
ret
cmp
enter
pop
ficom
lds
nop
daa
jecxz
pop
dec
xlat
std
cmp
je
ret
add
leave
and
ins
cs
ja
ins
cmp
frstor
inc
push
mov
add
xchg
lods
into
cli
mov
ds
mov
sti
rcr
push
mov
aas
inc
or
cld
outs
sbb
lea
xor
pusha
xor
sar
ret
loop
in
mov
cmps
mov
mov
add
push
mov
dec
push
fmul
sbb
inc
popf
std
pop
mov
ret
sbb
shl
icebp
adc
mov
dec
xor
popf
scas
ds
(bad)
xchg
and
ins
ror
sbb
aaa
into
outs
xchg
iret
into
lea
and
ret
xchg
xchg
rol
and
data16
mov
gs
jno
sbb
ds
xchg
pop
(bad)
fs
and
leave
sub
add
sub
aad
cdq
push
sar
ret
in
loope
daa
jne
adc
retf
cmps
outs
mov
inc
icebp
jne
mov
stos
daa
and
adc
in
aam
sbb
or
push
bound
leave
shl
mov
or
mov
inc
pop
xchg
movs
dec
adc
loopne
or
cli
cdq
dec
sbb
nop
rcr
fwait
ret
test
xchg
mov
adc
mov
aaa
xchg
sbb
jl
lahf
mov
out
cmp
push
je
aam
add
jp
and
push
xchg
clc
popa
(bad)
out
and
push
imul
stos
daa
pop
pop
fdivr
cmps
ficomp
cmp
es
jg
dec
add
xchg
icebp
xchg
and
xor
pop
sbb
and
mov
sub
stos
inc
lahf
or
out
mov
mov
test
std
xor
cwde
cwde
sub
data16
shr
jge
and
sub
lods
xchg
fld
adc
or
dec
cmp
jno
jg
adc
call
pop
xchg
jb
call
ret
xchg
stc
pop
mov
add
clc
pop
dec
sbb
mov
xchg
and
bound
outs
outs
aas
(bad)
cmp
jle
pop
sub
jmp
fpatan
xor
outs
mov
arpl
nop
lds
mov
xor
repnz
cmp
jl
lods
mov
aaa
fsubr
or
or
imul
xchg
mov
push
ret
add
mov
pop
pop
and
ds
cdq
sbb
jp
xchg
gs
out
mov
outs
ret
ins
shl
push
repz
out
lods
sub
push
stc
test
mov
xor
in
mov
call
sbb
sub
rcl
sbb
fcmovu
stos
dec
ret
(bad)
shl
add
adc
ret
fimul
mov
xchg
outs
(bad)
sbb
ret
aam
in
xlat
push
xchg
cmp
ror
mov
jno
dec
sbb
pop
(bad)
ins
div
mov
inc
lock
and
push
jae
xor
aad
push
iret
fisub
xchg
int
push
ret
iret
or
sbb
loope
xor
jne
lock
mov
(bad)
inc
cmps
outs
xor
clc
cmp
icebp
jg
jmp
sbb
xchg
sbb
adc
and
pop
sub
sub
dec
mov
cmp
or
fld
in
bound
sub
cli
sub
jle
fldcw
mov
add
arpl
add
or
(bad)
mov
(bad)
repz
add
adc
adc
pop
cmc
pop
fisub
lea
sub
dec
cs
idiv
int3
mov
repz
push
mov
je
arpl
fld
pop
mov
cmc
sub
dec
mov
push
mov
pop
repz
xchg
gs
mov
mov
in
out
pop
rcr
cmps
dec
xchg
fcmovnu
out
inc
cmps
xchg
stc
fcmovb
pop
frstor
rol
out
repz
(bad)
repz
mov
mov
dec
shr
rcl
xor
call
pop
xchg
repz
xor
pop
aad
fs
inc
and
test
dec
aad
or
lock
fld
sub
das
mov
ss
add
je
xor
in
call
scas
dec
mov
sbb
dec
mov
les
dec
std
sub
movs
pop
xor
mov
mov
jmp
xchg
jbe
xchg
into
scas
inc
jl
aaa
xchg
push
call
cwde
pop
sub
in
stos
outs
int
mov
dec
je
adc
sub
and
pop
mov
mov
pushf
sub
and
dec
sbb
outs
cmp
pushf
or
inc
call
out
jg
(bad)
or
aad
loopne
push
rol
jmp
retf
jo
jo
(bad)
nop
aam
lods
mov
je
cmp
daa
mov
mov
lds
mov
mov
call
sub
sbb
pop
in
mov
jno
inc
ins
adc
xchg
dec
pop
sti
(bad)
packuswb
fld
cmp
sbb
bnd
fadd
cmp
xchg
pop
addr16
add
(bad)
fstp
cdq
push
or
dec
(bad)
stos
lods
cmp
arpl
mov
push
cmps
nop
outs
cmp
sar
jmp
mov
sbb
mov
addr16
mov
pop
arpl
push
dec
push
mov
dec
push
ins
or
jnp
jl
js
sub
scas
popf
mov
fstp
xchg
pop
pop
mov
psraw
call
in
push
(bad)
push
cmps
das
inc
out
sub
(bad)
stc
mov
jle
sub
sub
lock
das
cwde
inc
jno
and
lock
retf
aam
xchg
mov
jle
push
call
and
jbe
push
repnz
stos
je
add
push
inc
(bad)
adc
in
inc
(bad)
mov
retf
cmps
test
xchg
inc
call
jb
xor
sub
jne
mov
add
lahf
retf
jmp
pop
ins
aas
ins
ret
xchg
mov
mov
sar
xor
scas
adc
(bad)
(bad)
xor
xchg
sub
pushf
je
or
loope
mov
scas
loopne
dec
scas
pusha
and
int
call
repnz
adc
add
mov
cmps
and
push
jecxz
and
push
rol
imul
mov
fbstp
push
movs
inc
and
xchg
cs
inc
cs
(bad)
dec
xor
mov
mov
cmp
inc
adc
pusha
nop
aam
pop
mov
repnz
inc
add
fild
lahf
stc
push
dec
aad
xor
or
cmp
out
fwait
jbe
iret
or
(bad)
repz
mov
pop
adc
jle
mov
ja
fistp
nop
add
rol
out
inc
inc
out
popa
ss
pop
jno
in
sbb
jo
add
cwde
test
inc
xor
out
pop
xchg
ins
ja
mov
push
ja
push
int3
sbb
stos
pop
leave
sub
pusha
cdq
mov
stos
mov
pushf
cmp
mov
xor
aam
push
fwait
test
loopne
pop
push
adc
xchg
out
je
popa
inc
mov
xchg
xchg
adc
(bad)
ss
cmp
mov
jmp
cwde
lods
ror
and
jge
rcl
cmps
xor
pop
addr16
outs
xor
int
mov
mov
add
leave
shl
sbb
lahf
jae
scas
imul
jae
jne
dec
push
jbe
add
or
mov
das
movs
push
push
fwait
xor
out
das
dec
stos
xor
dec
int
jge
mov
es
mov
xchg
pop
into
daa
sub
pop
or
sub
lahf
addr16
adc
jle
repnz
inc
xchg
push
xchg
and
adc
arpl
push
push
sub
sub
mov
lahf
int
cmps
sub
dec
adc
jg
js
dec
in
cmp
mov
cmp
movs
not
ds
jge
out
mov
pop
retf
pop
dec
jae
jns
inc
(bad)
pushf
(bad)
movs
jb
(bad)
jae
pop
(bad)
(bad)
xchg
mov
mov
and
mov
jp
pop
xchg
fst
out
lds
adc
pop
and
jl
hlt
fsub
push
mov
mov
retf
loop
nop
dec
jge
mov
push
mov
push
pop
jg
stc
adc
inc
stos
out
mov
jle
cmp
in
(bad)
xchg
xor
mov
loop
sbb
fsub
inc
xchg
adc
push
ja
sbb
pop
jo
popa
cli
or
push
and
sbb
jle
pop
inc
lods
ja
pop
test
stos
jmp
jbe
retf
adc
fild
push
lods
jno
jbe
test
pop
inc
push
test
je
dec
sti
xchg
add
hlt
push
bound
xchg
hlt
jns
cmps
cmp
jne
mov
and
xchg
xchg
iret
jmp
sub
sub
pop
int3
cs
jp
and
shr
(bad)
jno
xchg
mov
jnp
mov
fidiv
pop
pushf
mov
xor
add
ret
cdq
div
test
(bad)
mov
mov
stc
mov
ret
push
pusha
in
sub
scas
imul
inc
retf
out
fmul
jo
(bad)
aas
push
loop
mov
xchg
jl
push
lahf
mov
into
xchg
cdq
outs
pop
push
mov
add
in
or
add
mov
push
sti
pop
(bad)
leave
mov
lock
and
xchg
inc
xchg
inc
das
bound
sub
mov
pop
ins
fstp
dec
lods
scas
(bad)
jbe
cwde
xor
test
xchg
sti
mov
dec
in
mov
cmps
mov
es
xor
jb
fstp
xlat
xchg
data16
cmp
jnp
and
(bad)
or
mov
mov
rcl
shl
in
arpl
lods
cli
jle
push
mov
push
and
int3
mov
jl
mov
mov
std
jl
dec
stc
in
daa
aaa
data16
inc
and
xlat
inc
adc
mov
cmps
inc
out
or
pop
push
pop
mov
rcl
ret
int
add
clc
nop
and
adc
and
mov
test
dec
repnz
scas
mov
loop
fist
xchg
ja
sbb
pushf
int
in
movs
nop
dec
and
xor
pushf
(bad)
jbe
fild
push
jmp
fldenv
rcr
ss
loope
dec
jmp
adc
mov
into
lahf
pop
xor
dec
and
or
adc
not
popa
xchg
pop
jbe
mov
sahf
and
pop
add
mov
scas
push
xor
dec
xchg
in
(bad)
retf
sbb
mov
cwde
call
gs
cmp
mov
mov
fst
mov
retf
aaa
and
jp
add
and
add
adc
add
sub
push
xchg
or
in
mov
and
or
cmp
cmp
xor
mov
loop
push
sbb
mov
pop
cmp
stos
push
push
fild
pop
movs
in
jns
cmc
mov
or
mov
iret
mov
enter
ins
jle
daa
addr16
adc
pop
jmp
push
repnz
fimul
iret
inc
dec
test
je
int
or
fs
fiadd
enter
sub
fsub
ficomp
ds
add
out
and
xlat
add
test
lock
or
fmul
clc
inc
in
popa
pop
sbb
adc
stos
mov
fwait
mov
outs
fcomp
pop
pop
xchg
push
ss
mov
push
jmp
call
jnp
test
mov
test
add
ss
out
or
push
out
mov
mov
test
mov
movs
jae
jmp
retf
fisubr
stc
push
in
xchg
lea
or
xchg
or
mov
or
int3
push
mov
xor
sub
aam
retf
mov
gs
and
repnz
fisttp
mov
jae
xchg
aam
fcom
lea
loope
(bad)
cli
push
cmp
scas
cwde
xchg
adc
adc
loopne
in
or
xchg
bound
cmp
retf
cwde
loopne
fiadd
dec
gs
loop
dec
inc
adc
inc
add
ficomp
and
push
cmps
and
dec
pusha
sub
adc
push
sbb
stos
pop
aad
inc
fimul
lds
into
fbld
xchg
jmp
sar
mov
sti
je
or
lea
les
int3
cli
sub
or
retf
and
nop
ds
push
sbb
pop
aas
sahf
add
fstp
adc
sbb
les
or
mov
sbb
loopne
call
mov
(bad)
lahf
push
pop
mov
imul
std
push
add
mov
mov
and
xlat
nop
xor
or
lahf
fsubr
push
sti
mov
pusha
cmc
adc
mov
sti
loope
and
mov
dec
sub
hlt
in
stos
mov
stc
push
jno
add
and
in
dec
int3
fs
xchg
mov
clc
jmp
cmp
(bad)
ja
jmp
or
dec
cli
mov
jmp
inc
dec
repz
and
sub
ret
push
or
sti
jg
loopne
test
out
adc
fadd
push
jg
push
inc
xchg
pop
pop
inc
dec
ret
int
xor
fnstcw
les
mov
mov
or
pop
lods
loope
xor
xchg
xchg
mov
sahf
sbb
movs
into
inc
bound
lods
sub
or
iret
in
ret
(bad)
les
mov
xchg
pop
mov
in
leave
inc
mov
out
pushf
push
dec
adc
sbb
in
mov
ss
dec
cmp
or
jnp
jbe
aas
shr
jne
fldcw
ss
dec
cmps
bsf
inc
out
inc
mov
ja
dec
xor
ins
les
and
sahf
sti
adc
and
scas
in
and
fild
xchg
arpl
or
lds
mov
movs
aaa
pop
push
ror
mov
imul
lods
std
dec
scas
adc
mov
ss
and
xchg
xchg
rcl
dec
inc
lods
out
into
fistp
cmovp
jb
sti
cli
inc
cmp
mov
inc
mov
std
cmc
iret
or
cmp
bound
xor
sbb
lds
xchg
pusha
call
daa
xchg
add
lds
cmp
jo
je
pop
push
inc
ss
push
sub
inc
dec
mov
push
sbb
imul
out
pop
push
mov
sbb
jns
fild
dec
push
sub
jb
inc
jl
xchg
adc
scas
sbb
dec
mov
retf
ror
out
jmp
xlat
lahf
push
and
out
daa
imul
sbb
or
and
jns
push
inc
adc
(bad)
jno
fsub
sub
fcmovbe
jne
push
pusha
fwait
pusha
push
mov
(bad)
stc
xchg
es
sahf
pop
and
inc
mov
test
scas
ss
cmp
adc
leave
call
rcl
les
jle
mov
xlat
iret
sbb
push
sub
sub
or
out
push
stc
mov
(bad)
lods
add
xchg
xor
enter
iret
das
push
dec
rcr
pop
fsubp
dec
sbb
lods
pusha
inc
in
jg
cmp
ror
aas
lds
jle
lock
icebp
jp
lea
xchg
adc
inc
jnp
mov
aas
popf
mov
outs
jp
scas
loopne
call
add
cld
sub
and
push
out
sbb
mov
sub
push
cmp
pop
xchg
xchg
sbb
call
jg
fdivrp
movs
imul
in
pusha
mov
repz
dec
int
cmps
sbb
aam
outs
lea
xchg
xchg
jg
std
iret
pushf
or
imul
xor
jns
in
clc
cld
or
retf
adc
test
shl
or
cwde
fiadd
inc
push
xor
popf
mov
mov
mov
adc
in
xor
out
xor
adc
ret
ins
les
movs
xchg
fld
test
xchg
out
pop
shl
addr16
cmp
call
test
std
jmp
adc
push
sbb
fwait
pusha
xor
stos
pop
std
push
sub
and
fadd
mov
dec
cmp
inc
push
loope
and
mov
mov
jne
jge
outs
repz
mov
sti
inc
add
adc
in
pop
sub
xchg
int3
and
push
inc
fs
fisttp
mov
stos
sbb
(bad)
lahf
iret
dec
es
aad
rol
ds
inc
sti
jbe
jp
call
cs
bound
and
dec
xchg
adc
add
ficom
fcomp
or
and
stc
nop
out
fs
jo
mov
div
xor
push
push
dec
mov
stos
imul
cmp
ins
idiv
pop
mov
outs
or
aas
and
adc
fmul
or
aam
data16
test
and
(bad)
adc
lar
jno
sbb
mov
cld
cmp
(bad)
aaa
jle
mov
add
je
lods
pop
ins
iret
aam
fdivr
(bad)
mov
xor
dec
call
add
xlat
mov
cmps
(bad)
shr
repz
lods
call
in
ja
adc
outs
adc
mov
xlat
cdq
stc
mov
sti
mov
or
mov
cdq
(bad)
loop
out
(bad)
mov
loope
(bad)
movs
jp
std
jl
(bad)
int3
retf
xchg
sahf
jge
call
call
add
fwait
stos
cmp
push
pop
mov
mov
mov
dec
and
push
enter
and
fwait
xchg
mov
cmps
sar
mov
xor
mov
shl
jno
fidiv
add
sbb
fwait
popa
add
fistp
jbe
in
imul
mov
fwait
or
int
cmps
mov
(bad)
and
sub
push
stos
std
lea
mov
adc
out
pop
sub
les
lods
add
inc
pop
stc
shr
adc
pop
mov
inc
test
jecxz
mov
xchg
pop
nop
out
add
cmc
mov
xchg
mov
jecxz
push
xor
enter
sbb
xchg
pop
sub
pop
jno
mov
daa
xor
nop
cmp
sub
pop
call
add
mov
loop
pop
jecxz
in
cs
cmps
in
(bad)
or
dec
and
scas
mov
pop
aam
fimul
lea
adc
cmp
shl
repz
xor
jp
jns
xchg
loopne
or
outs
push
jle
pop
iret
retf
inc
ins
push
dec
aam
or
dec
sti
and
mov
push
retf
lock
mov
retf
es
loope
(bad)
cmp
push
(bad)
pusha
sub
jmp
and
adc
dec
loopne
adc
(bad)
pop
pusha
idiv
pop
in
in
cmps
das
fld
cli
ficomp
mov
add
std
popa
add
aaa
mov
test
lods
out
mov
(bad)
mov
xchg
mov
fdivr
xchg
test
fcmovne
push
rcl
push
aas
cmps
dec
popa
mov
pop
mov
sub
mov
push
test
dec
int
cli
ins
xor
xor
jmp
cs
fild
repnz
sahf
xchg
sub
and
repnz
mov
pushf
daa
enter
repz
out
cmps
or
cmp
jmp
and
inc
mov
clc
fst
repz
std
push
sbb
rol
fcom
into
in
lahf
in
leave
scas
sub
mov
es
in
repnz
loop
fsubr
shl
add
xor
push
data16
jecxz
test
scas
pop
sahf
popa
pop
inc
stos
shl
movs
fs
inc
mov
test
pop
outs
ins
aaa
cmps
les
outs
add
scas
out
or
dec
movs
ds
lods
inc
pop
pop
das
fidivr
movs
test
enter
stos
sub
pop
cmp
(bad)
fld
ror
mov
popf
fsubr
sbb
jnp
(bad)
jp
(bad)
xor
(bad)
cmc
xor
lods
aas
scas
or
mov
and
mov
test
in
pop
ins
fbstp
mov
mov
aad
jns
and
cs
mov
fst
std
mov
and
mov
push
loope
hlt
push
inc
test
ins
and
add
adc
scas
mov
adc
hlt
dec
mov
icebp
fisub
mov
dec
or
mov
cmp
push
fsin
pusha
aam
sub
jg
mov
mov
pop
clc
sub
and
sbb
in
call
add
jno
sbb
sbb
adc
cld
dec
xchg
xchg
xchg
xor
(bad)
jg
mov
bnd
data16
sub
mov
push
int3
hlt
jecxz
pop
ja
retf
mov
xchg
addr16
cmp
jl
dec
pop
daa
in
loop
adc
push
add
cmp
enter
cmp
adc
cmps
xorps
nop
loopne
xchg
jmp
retf
outs
cmps
loopne
cmp
or
loope
mov
(bad)
xor
jb
push
sub
(bad)
lock
das
mov
or
stc
es
adc
dec
addr16
sbb
dec
out
xchg
shl
dec
push
xchg
or
jp
outs
pop
cli
shl
cmps
shl
or
jmp
push
inc
xchg
xor
pop
cmp
inc
add
cli
pop
jmp
(bad)
hlt
jnp
pop
enter
imul
and
ins
sub
movs
push
mul
sbb
ret
xor
mov
sbb
stos
stc
in
test
pop
es
sbb
in
movs
jo
mov
mov
loopne
dec
in
adc
lds
mov
rol
sbb
ins
mov
xchg
in
lea
sbb
ss
in
cld
xor
inc
outs
push
aad
call
or
or
mov
mov
and
jnp
mov
retf
push
sub
xor
outs
int3
mov
shr
sbb
pop
adc
fdiv
push
and
in
sub
into
hlt
push
dec
(bad)
mov
mov
aaa
adc
or
mov
inc
sub
(bad)
and
dec
xchg
inc
jge
neg
ins
loopne
mov
cmp
push
popa
pop
fidivr
sbb
mov
fcmovne
aad
fcom
pop
lds
fcomp
rcl
push
arpl
mov
inc
movs
outs
pop
in
in
nop
xchg
movs
xchg
jl
add
xchg
and
std
xlat
jp
outs
sbb
mov
adc
adc
popa
leave
xchg
jmp
add
dec
xchg
pop
xor
popf
shr
ins
or
(bad)
repz
inc
retf
leave
and
stc
and
pop
in
std
shl
out
pusha
out
mov
sub
lahf
cmps
(bad)
lahf
pop
and
cmps
mov
pop
and
xchg
mov
mov
es
jp
nop
fistp
int
imul
cmp
xchg
out
xor
adc
sbb
adc
sub
aaa
xchg
js
add
lahf
bound
push
inc
stos
into
sbb
add
and
mov
sub
fnstsw
and
push
mov
adc
inc
inc
xor
push
cmp
call
xchg
retf
iret
or
xor
jmp
fild
sti
cmp
lahf
pop
movs
cmp
mov
or
ret
push
push
std
cmp
lock
add
retf
adc
imul
pusha
out
in
icebp
sbb
push
adc
sbb
xor
push
sub
div
pop
aad
(bad)
push
add
into
xor
fs
jbe
push
push
xchg
test
aaa
ins
pop
mov
cmp
and
repnz
pop
xchg
mov
adc
cmp
rcl
xchg
cmp
xor
pop
enter
adc
inc
add
aas
dec
enter
sbb
sub
or
jnp
add
out
pop
shr
std
fwait
lock
sbb
jnp
(bad)
pop
mov
scas
xor
xchg
mov
and
and
enter
ins
xor
dec
ror
or
pop
pop
stos
out
outs
sub
sub
aam
rcl
push
aad
jmp
icebp
pop
or
xor
test
repz
and
inc
mov
in
xchg
add
loopne
retf
icebp
xor
mov
jbe
adc
xchg
mov
retf
and
pop
or
js
xchg
inc
pop
call
add
pop
sub
mov
dec
mov
sub
aam
pushf
cmps
mov
ficomp
pushf
rcr
cmp
adc
mov
ins
dec
(bad)
jno
pop
add
cwde
mov
cmp
xor
das
push
pop
pop
inc
scas
mul
jnp
jg
das
or
mov
xchg
loop
pop
les
(bad)
jmp
fs
adc
adc
jmp
dec
xchg
cmps
repnz
stos
mov
pop
fnstsw
cmp
(bad)
enter
rol
mov
adc
fwait
jae
bound
stos
jecxz
lock
mov
sbb
arpl
xor
jl
test
in
mov
int
stos
stos
pop
mov
mov
sbb
or
ret
xchg
mov
pop
fcom
psubsb
je
and
xor
pop
add
popa
rcl
sbb
sahf
mov
or
mul
xchg
or
adc
xor
xchg
out
call
xchg
cmp
out
shl
jno
and
test
int
xlat
inc
xor
adc
sub
call
sub
sub
aaa
xchg
or
jno
jno
mov
je
or
leave
out
xchg
int3
rcr
sbb
in
jne
adc
hlt
sub
or
sahf
fcmove
push
mov
jmp
xchg
cmps
mov
nop
int3
jmp
js
stos
lods
ja
push
jmp
jo
pop
jmp
pop
and
mov
imul
mov
int
(bad)
fnstsw
adc
inc
iret
out
loope
jno
pop
dec
jg
arpl
addr16
xchg
sti
jge
dec
sbb
repz
sub
call
xor
ret
iret
data16
data16
icebp
push
cmps
enter
test
ret
std
sbb
add
je
popf
ret
cmp
jns
xchg
sub
mov
inc
adc
lods
xchg
and
int3
inc
mov
test
xor
rcr
cli
sbb
rcr
cmp
mov
adc
sub
hlt
mov
cmp
adc
pop
jp
std
out
dec
pusha
retf
sbb
into
aam
pushf
lods
mov
jle
push
sti
(bad)
ss
test
scas
ret
sysret
dec
dec
push
std
aad
cmp
xchg
loope
mov
push
icebp
push
pushf
call
repnz
or
lods
xchg
adc
rol
je
and
jo
cdq
icebp
push
xlat
das
cs
pop
inc
mov
mov
ss
cs
inc
stos
fld
push
outs
xor
test
arpl
popf
fistp
div
in
jnp
pop
mov
call
mov
out
outs
inc
div
popf
out
add
mov
pop
pop
sbb
scas
mov
js
ss
icebp
xor
ret
pop
enter
inc
dec
rol
xor
pusha
cmps
test
mov
ficom
in
and
sti
push
ss
lds
loopne
lahf
xor
xor
pop
leave
inc
jmp
mov
or
dec
sbb
sbb
push
push
and
loope
jecxz
sub
pop
sub
mov
out
out
jno
xor
mov
outs
stos
les
aam
push
xchg
and
call
mov
cmp
push
jmp
nop
adc
clc
enter
inc
es
test
repz
cmps
or
ret
ret
or
mov
xchg
jnp
pop
sbb
cmp
add
inc
daa
in
stos
push
mov
loopne
jle
cmp
inc
adc
outs
dec
sbb
pop
push
add
sbb
enter
(bad)
addr16
aad
add
xchg
shl
xchg
fidivr
xchg
mov
mov
(bad)
int
in
adc
inc
int
pavgw
cmps
mov
jbe
adc
cwde
je
shl
sub
mov
mov
movs
mov
push
xchg
cmp
push
add
call
xchg
ficom
ins
je
ficom
sbb
pusha
sub
shl
ins
fdivr
mov
or
fdiv
or
les
cs
adc
and
pop
mov
push
add
scas
xchg
mov
fdiv
outs
mov
fcom
xchg
or
int3
jno
ret
mul
imul
mov
outs
sub
jmp
dec
push
clc
xchg
inc
sbb
shl
cli
rcl
jl
or
xor
les
inc
dec
push
or
iret
xchg
outs
arpl
sahf
sti
and
or
jo
mov
pop
call
div
(bad)
pop
mov
inc
lods
or
outs
adc
mov
jbe
mov
call
or
mov
into
movs
and
sbb
shl
jmp
call
inc
mov
bound
cvtpi2ps
mov
and
(bad)
pop
mov
rcl
iret
cmps
push
(bad)
push
xchg
push
pusha
mov
pcmpeqb
mov
outs
ror
push
mov
jns
add
cmp
sbb
shl
add
xchg
movs
xor
fisttp
outs
mov
imul
(bad)
jmp
cmp
sub
sub
inc
dec
fimul
jae
adc
loop
inc
and
popf
lds
pop
mov
jp
repnz
jecxz
imul
call
fsub
div
loope
fimul
lahf
mov
adc
aas
xchg
sbb
or
sti
sbb
shr
cmp
sub
jns
(bad)
out
mov
cmp
adc
lods
xor
cmps
jns
mov
out
rol
pop
sub
fistp
das
jp
xor
jmp
xor
mov
lea
pop
repz
cwde
je
inc
out
xor
scas
dec
mov
push
pop
mov
sub
jg
scas
shr
ss
in
shl
fiadd
inc
outs
mov
dec
out
mov
or
sub
pushf
adc
je
ret
inc
push
(bad)
mov
test
scas
popa
and
imul
jb
add
mov
push
add
mov
push
push
dec
pop
jmp
xchg
sub
shl
int3
pop
out
xor
repz
mov
clc
jne
jbe
and
sub
xchg
adc
or
add
test
mov
out
xchg
push
icebp
sub
mov
pop
xor
into
ret
aad
jp
jl
out
jae
leave
adc
adc
mov
cli
add
dec
pop
adc
js
jmp
cwde
push
push
stos
jnp
fidivr
sub
sub
bound
push
loopne
and
dec
in
adc
ins
jmp
das
sti
inc
jle
xchg
cld
mov
cmp
in
repz
xlat
jmp
out
std
js
stos
xor
jnp
rcr
and
pop
dec
bnd
xlat
sbb
mov
or
ja
fwait
sub
call
aas
addr16
aaa
dec
dec
jl
pop
sub
out
mov
fidiv
push
adc
push
xchg
ins
test
xor
mov
pop
xchg
mov
clc
cld
push
ds
pop
in
xchg
iret
scas
pop
out
jbe
sbb
mov
call
push
mov
xor
or
imul
in
pop
call
imul
xor
xchg
push
fcomp
dec
das
mov
adc
out
jnp
jmp
pop
and
addr16
inc
dec
xchg
jp
dec
fcomip
movs
push
cld
cmps
and
imul
aas
outs
mov
fwait
and
xchg
and
sar
xor
mov
cmps
mov
sbb
and
mov
hlt
inc
dec
mov
adc
std
in
ss
mov
out
call
shl
sub
sbb
int3
adc
fwait
inc
or
xchg
or
rcr
vmovlps
out
jp
bnd
mov
call
push
push
xchg
jo
popa
adc
pushf
push
xchg
mov
mov
out
and
clc
cmps
jmp
pop
xchg
ror
rcl
jmp
arpl
jnp
push
retf
pop
push
xchg
mov
hlt
inc
cld
dec
pop
gs
imul
pop
adc
pop
pop
xor
jmp
ret
adc
mov
dec
rcl
push
fst
push
push
(bad)
movs
mov
sbb
sahf
pop
repnz
fisub
sub
push
ds
xchg
into
ds
test
enter
ficom
pushf
lds
sar
and
dec
lock
and
push
cmp
sar
add
in
enter
xchg
sti
lods
adc
shl
aas
and
(bad)
shr
loope
xchg
stos
cmp
and
sbb
dec
in
inc
(bad)
jle
stos
daa
je
in
(bad)
icebp
fwait
or
adc
mov
cli
push
pop
cmp
pushf
out
popf
pop
fld
sub
jp
movs
call
cwde
inc
push
in
mov
retf
fcom
pop
sti
lea
stos
iret
pop
pop
pop
and
push
int3
arpl
outs
and
ins
sahf
add
fst
cwde
cwde
lods
cmp
mov
inc
cmp
or
and
les
adc
dec
or
xor
gs
pop
hlt
(bad)
and
loop
sub
cli
mov
fs
(bad)
sbb
adc
adc
sub
enter
in
fnstenv
dec
pop
push
add
inc
enter
ss
outs
rol
inc
stc
pop
ret
aam
mov
sahf
pop
push
imul
aad
dec
adc
ficomp
repnz
push
icebp
jg
in
push
or
pop
sti
inc
imul
ja
fstp
ins
fcomip
jnp
mov
movs
cs
xor
add
mov
cdq
and
inc
in
outs
cmp
mov
lahf
rol
test
aas
popa
out
sbb
add
shl
stc
mov
push
cmp
pop
or
jae
rcr
push
pop
mov
jl
xchg
mov
fstp
mov
inc
sbb
gs
ficomp
jbe
dec
mov
jbe
dec
and
mov
mov
jnp
push
mov
mov
sbb
sub
aad
shl
pop
xor
or
cld
sbb
jmp
and
jo
aas
pop
cdq
aaa
cwde
pop
push
mov
inc
(bad)
imul
cmp
mov
lds
inc
ror
sub
ror
xor
(bad)
dec
or
and
retf
add
xchg
cmps
fistp
ss
jns
je
fs
inc
xor
stc
fwait
stc
cmp
test
shl
sahf
inc
std
out
shl
mov
repz
adc
mov
out
xchg
rcr
mov
dec
cs
push
xchg
lock
iret
push
xchg
add
pop
je
scas
ds
loopne
mov
cmp
fwait
push
sbb
aaa
xor
and
loop
cdq
pop
jg
pushf
mov
or
add
cmp
add
xor
or
gs
rcr
cmp
fwait
mov
jge
jno
movs
test
in
js
cmp
push
cmps
jns
cmc
div
(bad)
dec
iret
mov
xchg
pop
mov
or
jno
imul
and
pop
add
add
and
ret
sub
out
imul
pop
push
inc
push
adc
dec
cs
sub
fistp
aaa
rol
leave
stc
in
loopne
ret
inc
or
or
pop
fnstsw
inc
in
mov
push
repnz
xlat
dec
pop
pop
sbb
mov
mov
push
scas
jl
popf
fdivr
in
push
push
in
jp
dec
xchg
inc
xlat
outs
scas
and
enter
xor
push
hlt
loop
push
sub
pop
jbe
scas
xor
nop
lock
push
sub
add
in
outs
pop
mov
lea
cmp
cwde
nop
rcl
pop
call
(bad)
push
test
and
les
mov
dec
sbb
pop
pushf
jae
mov
push
call
in
outs
dec
add
mov
push
jle
pop
repnz
daa
out
lock
mov
mov
scas
mov
pop
inc
sbb
push
adc
loop
sbb
jnp
mov
xchg
in
aaa
(bad)
or
popa
(bad)
mov
aad
cmps
and
cmp
(bad)
sbb
mov
add
dec
sub
push
clc
ficom
shr
or
mov
sub
ret
fld
sbb
and
mov
xor
pop
inc
stos
dec
dec
adc
clc
fnclex
xor
dec
dec
cwde
ret
push
repnz
stos
pop
mov
xchg
cmps
int
rcr
loope
push
and
cld
xchg
shl
int
(bad)
or
sbb
sub
xchg
xchg
mov
dec
mov
mov
mov
pop
aam
inc
xchg
ins
js
ret
cld
call
mov
add
test
in
sub
ja
xor
call
in
rol
cmp
xchg
dec
leave
mov
retf
jo
cmp
xchg
jl
jmp
adc
fs
cmc
ins
mov
mov
stos
jnp
imul
or
ret
(bad)
cmp
pop
sub
fisttp
adc
xchg
xchg
pusha
xchg
mov
push
rcl
lods
xchg
movs
fdivr
ret
jmp
xchg
(bad)
in
test
sbb
jbe
fstp
popf
(bad)
movzx
test
and
jno
cmp
fwait
imul
cmps
pop
xchg
int3
inc
mov
lods
hlt
push
aam
sbb
inc
ins
mov
mov
sub
adc
loop
imul
dec
int3
and
inc
inc
in
das
jbe
cli
mov
fcomp
movs
lods
cmp
inc
repz
shl
fidiv
cli
imul
cmp
push
mov
push
add
and
dec
cmps
and
mov
leave
loopne
sub
enter
mov
push
jmp
popf
mov
dec
cwde
xor
nop
fwait
dec
xchg
aad
cs
repz
das
retf
sub
xor
test
aad
add
mov
mov
cmp
xor
pop
movs
repnz
mov
test
cwde
push
inc
ret
adc
repnz
xor
stc
jns
(bad)
adc
lods
call
add
cwde
loope
call
xor
push
stc
(bad)
aad
das
(bad)
push
pop
sbb
int3
add
(bad)
outs
pop
lock
fst
xor
inc
mov
mov
adc
lods
push
xor
push
and
xlat
sbb
(bad)
sbb
mov
ins
pop
sub
jecxz
or
loope
pushf
mov
jb
jmp
mov
jge
mov
xchg
stos
push
cmp
cld
push
push
jnp
inc
icebp
xchg
adc
scas
add
jge
dec
pop
stc
ret
sub
pop
dec
jg
and
fistp
shr
mov
mov
fsubr
sbb
inc
les
movs
aaa
cmp
loopne
outs
jge
aas
fst
mov
fnsave
sbb
stc
cmp
and
pop
mov
xchg
mov
push
hlt
dec
adc
retf
or
das
out
jmp
loop
mov
inc
cmp
cli
adc
in
sub
das
fcom
mov
cmp
jmp
push
push
jnp
jmp
out
cmp
ficom
jmp
mov
(bad)
sbb
mov
xor
fnsave
cmc
sbb
arpl
xor
stos
push
push
and
sti
add
sbb
dec
mov
inc
sub
jle
jae
sbb
in
(bad)
push
in
and
adc
imul
iret
xchg
or
fist
add
movs
sar
movs
push
cdq
cmp
das
xor
adc
push
cmps
xor
mov
stos
dec
inc
adc
jmp
push
jle
push
xlat
xchg
jno
inc
and
mov
sbb
or
push
scas
fs
aad
ret
mov
mov
jno
dec
in
shr
stos
cmps
ret
fwait
jge
mov
pop
stos
idiv
push
dec
arpl
mov
inc
imul
out
loop
loop
out
rcl
xor
addr16
mov
aaa
pmuludq
xchg
and
add
aas
pusha
in
xor
in
push
sbb
test
into
movs
adc
rcl
add
fdivr
aam
pop
and
repz
imul
test
enter
jns
in
sbb
dec
mov
push
xchg
jae
and
call
mov
(bad)
pop
loop
inc
cmps
imul
sbb
xor
stos
jae
std
sbb
pop
les
stc
or
bnd
in
xchg
mov
inc
lods
addr16
push
(bad)
mov
push
dec
lock
or
call
in
add
xchg
aaa
push
inc
ds
aad
cdq
into
fld
jge
ror
mov
sbb
fcmovnbe
add
mov
xor
push
jnp
xchg
mov
mov
and
hlt
ins
cmps
shr
test
or
add
or
in
sbb
call
fstp
into
bound
(bad)
xchg
sbb
repz
or
inc
or
fnstsw
jge
ja
mov
sahf
inc
push
fsubr
mov
test
in
movs
or
shl
mov
sahf
iret
pop
jmp
retfw
jecxz
or
mov
repnz
aam
lods
pusha
fiadd
inc
bound
push
cwde
jge
(bad)
movs
cmps
rcr
into
cmp
mov
pop
jmp
pushf
add
fcmovu
mov
jno
bound
push
pop
sub
lds
mov
not
mov
in
pop
dec
int
jle
(bad)
aad
xor
mov
(bad)
ins
fist
lods
mov
div
or
dec
test
ds
inc
add
lea
or
ror
cmp
in
daa
je
jg
push
mov
test
dec
pop
inc
cli
(bad)
or
retf
(bad)
inc
xchg
pop
add
push
mov
mov
push
(bad)
out
pop
and
mov
aad
fisttp
sub
(bad)
int
or
xchg
xor
dec
lea
stos
cli
sub
mov
jmp
cli
call
push
in
inc
dec
push
adc
mov
idiv
popf
mov
enter
lods
neg
loopne
inc
dec
or
cmp
jno
cs
imul
loope
cmps
sbb
loop
cmp
cmp
stos
jns
pop
jmp
pushf
fsubr
pop
push
popa
neg
out
cdq
pop
cmp
nop
daa
cwde
out
out
xchg
sbb
daa
xchg
xor
lea
in
mov
int
xchg
push
mov
das
outs
mov
iret
or
xor
in
xlat
retf
push
push
xchg
sbb
mov
mov
inc
xchg
cmp
ret
(bad)
(bad)
in
mov
in
shr
jge
imul
push
(bad)
dec
cmps
jl
in
aas
mov
sbb
push
xor
arpl
fcmovbe
mov
dec
outs
sub
fidivr
cmp
das
ja
shr
add
out
adc
in
and
sbb
sbb
push
pop
popa
add
push
add
add
add
(bad)
dec
pop
inc
shr
outs
into
ror
cmp
pop
push
xlat
fisubr
jmp
pop
add
js
sar
loopne
(bad)
clc
and
lock
mov
xchg
adc
inc
in
retf
jle
jno
enter
ja
pusha
in
pop
sbb
inc
popf
imul
mov
push
adc
mov
dec
xor
retf
add
les
add
ins
mov
or
cmp
xor
pop
inc
shr
sub
mov
xchg
mov
pop
out
jl
jno
adc
fwait
movs
mov
mov
xchg
jecxz
jg
(bad)
and
adc
(bad)
push
or
aaa
sub
cmp
push
xchg
sub
imul
cmp
jge
push
mov
jge
adc
or
mov
and
mov
pop
fdivr
push
jae
out
test
sti
push
fiadd
mov
pop
retf
fs
sub
mov
ficomp
lds
push
sub
dec
or
pop
sbb
call
pop
popa
mov
test
ds
repz
and
mov
xchg
pop
cmp
in
add
pop
int
inc
push
inc
sbb
mov
out
add
dec
ret
dec
out
dec
in
cmp
jecxz
scas
push
sbb
shl
cmp
rcr
mov
mov
into
cmp
add
and
loop
push
pop
adc
mov
lahf
push
movs
pop
dec
dec
mov
xor
jle
xchg
xor
push
mov
outs
xor
adc
cli
aad
movs
idiv
jp
test
mov
popa
xchg
mov
loopne
adc
sti
sub
pusha
lds
outs
jge
mov
fbld
sbb
push
in
aas
stc
pop
aam
mov
and
mov
add
adc
test
push
dec
test
inc
nop
jg
sub
mov
add
jmp
mov
test
fucomi
and
inc
mov
repnz
jno
shl
add
jns
rcl
mov
xchg
rcr
(bad)
(bad)
or
mov
imul
mov
call
inc
adc
cmp
push
xor
dec
ss
ficom
mov
sub
aam
ds
hlt
out
fmul
int3
inc
ret
imul
retf
repz
in
mov
mov
xchg
out
xor
test
sbb
mov
(bad)
ds
nop
pop
pop
xchg
mov
xchg
retf
sub
jae
dec
and
jmp
jnp
imul
xchg
mov
pop
cdq
sar
xchg
mov
mov
mov
jl
std
jmp
fidiv
inc
or
push
cmp
pop
pushf
dec
lds
lock
mov
push
shl
adc
out
push
pop
jg
jge
cmp
aad
stos
icebp
push
es
call
and
adc
loope
inc
call
inc
cmp
push
or
jbe
sub
popf
cmps
pop
in
int3
int3
(bad)
in
add
and
mov
scas
cs
fidiv
(bad)
fcmovb
leave
pop
mov
jns
inc
jle
or
cmc
mov
sbb
or
dec
jne
add
jo
ins
sbb
out
lea
adc
test
xchg
mov
sub
lock
leave
in
outs
cmp
aas
dec
jae
push
loope
add
cwde
adc
cmps
sahf
popf
inc
retf
dec
mov
bound
jp
fisub
cmp
cdq
cli
inc
bound
pop
adc
push
(bad)
stos
jae
xchg
mov
lock
mov
sar
pop
stc
pop
fwait
jne
les
mov
add
adc
cmp
sbb
mov
push
nop
movs
and
idiv
push
int3
add
lods
enter
ret
mov
jecxz
xchg
pop
outs
mov
push
pop
inc
xchg
sub
sub
jne
cmps
gs
jo
inc
js
push
nop
lea
adc
dec
inc
push
adc
loopne
pop
xchg
jl
mov
dec
les
sar
sbb
lods
dec
sbb
push
mov
leave
xor
pop
shr
cmp
js
add
pop
in
xchg
sub
sbb
es
mov
xchg
push
dec
shr
(bad)
rcr
or
pop
add
cmc
xor
fwait
push
push
or
test
adc
inc
cmp
fwait
retf
mov
scas
or
dec
sbb
push
cmp
cwde
test
cmp
scas
push
adc
pop
dec
push
cs
(bad)
add
xor
repnz
xor
rol
fsubr
mov
rol
xlat
ror
push
loopne
jnp
cmp
or
es
cld
mov
jmp
push
div
xor
pop
stc
sub
sub
mov
xor
daa
adc
pop
(bad)
ins
inc
retf
fstp
(bad)
jmp
lds
jge
cmps
and
outs
pop
into
and
mov
es
outs
cmp
pop
pop
push
scas
in
sbb
xchg
imul
dec
add
enter
dec
sub
(bad)
fisub
ss
test
in
jmp
mov
sub
dec
aas
dec
jle
pop
push
or
xchg
mov
fs
loope
test
leave
aad
push
push
jbe
lds
lods
or
ds
push
aas
mov
xlat
xchg
pop
(bad)
and
sbb
mov
mov
mov
push
mov
xor
xor
mov
pop
pop
jbe
xor
adc
das
push
sbb
bound
cmp
shr
xchg
(bad)
sbb
inc
mov
fwait
sti
mov
gs
push
je
xchg
sub
idiv
mov
add
cmp
or
lahf
sbb
mov
test
mov
shl
sbb
out
(bad)
enter
sub
dec
cs
xchg
pop
pop
mov
pop
jg
dec
mov
xchg
lahf
ret
mov
sub
pop
mov
xchg
test
sti
jae
adc
aaa
cmps
xor
push
and
push
shl
rcr
adc
push
and
arpl
fs
enter
xor
push
(bad)
jl
stc
scas
jl
aam
fimul
(bad)
std
inc
add
mov
jge
lods
loope
xchg
out
(bad)
dec
jbe
out
lods
mov
sbb
dec
dec
jp
bound
fwait
jne
cmp
int3
jnp
enter
fisub
mov
leave
into
sub
pop
mov
out
cmc
imul
retf
jg
xchg
aam
or
cmp
lock
jmp
imul
dec
scas
xor
push
dec
pop
and
push
cmp
jnp
mov
pop
lahf
and
mov
mov
push
mov
inc
and
xchg
adc
in
cli
(bad)
sub
loopne
mov
push
and
outs
xor
(bad)
iret
xchg
loop
fcomip
loope
imul
cmp
fldenv
pop
js
aaa
fstp
fs
adc
scas
das
in
xchg
(bad)
int3
mov
mov
mov
das
cs
fbld
mov
add
jb
mov
mov
inc
aas
sahf
mov
cld
scas
aaa
fisub
int
mov
cmps
or
das
std
in
cdq
icebp
les
dec
mov
addr16
fwait
fs
jg
dec
or
pop
out
inc
mov
xchg
mov
loop
dec
and
mov
mov
push
add
js
pop
nop
or
xlat
not
and
retf
stos
mov
cmp
jnp
scas
sub
inc
sub
(bad)
or
and
call
test
aas
repnz
and
dec
mov
bound
jge
lods
jmp
gs
xor
xchg
jl
dec
xchg
jl
sahf
ret
add
inc
movs
ja
fsub
add
mov
(bad)
imul
mov
push
ret
cmp
call
mov
jge
jecxz
aas
retf
(bad)
call
adc
out
movs
iret
inc
cmp
adc
pop
test
sub
xchg
add
int3
sti
inc
lds
mov
loop
adc
inc
sub
pop
sub
int
in
sahf
and
jo
sbb
lea
out
cmp
pop
sbb
gs
out
add
sub
lea
in
xor
call
scas
fxam
pop
push
(bad)
sub
adc
push
add
cmps
xchg
(bad)
mov
xchg
jmp
repz
iret
loop
(bad)
test
imul
jecxz
add
ins
sub
ja
in
scas
call
adc
lea
ins
or
jecxz
dec
jne
es
mov
out
(bad)
push
in
std
cmp
inc
dec
xor
mov
mov
ds
mov
loope
in
or
stos
mul
xor
push
out
push
fwait
ret
add
shl
imul
pop
mov
sti
lods
push
add
icebp
cmps
jge
or
push
add
cld
cmps
(bad)
mov
mul
mov
ficom
sbb
mov
mov
push
and
push
xor
dec
cmp
pushf
js
addr16
adc
stos
outs
or
fwait
(bad)
(bad)
jp
dec
adc
cmp
cmps
jge
sbb
gs
cmp
xor
add
pusha
sbb
mov
add
jl
mov
das
dec
jmp
mov
xchg
or
sti
lock
(bad)
cmp
iret
dec
and
out
mov
or
xor
popa
mov
xor
out
adc
ret
shr
cld
sub
add
pop
adc
adc
mov
imul
cmp
mov
inc
jbe
pop
iret
hlt
xor
xchg
popa
fucomip
and
call
test
ins
push
(bad)
xchg
sub
fld
sbb
imul
lds
fsub
out
int3
sbb
and
into
int
xchg
div
dec
jmp
jno
push
test
jmp
aam
rcl
fimul
fisub
shl
stos
mov
imul
pop
(bad)
jnp
ins
ficomp
dec
test
fwait
stos
cmps
dec
mov
inc
fmul
inc
sbb
les
lds
inc
dec
sbb
mov
fisubr
sub
ds
xor
or
fwait
push
push
pop
je
mov
cld
out
or
sbb
ss
mov
dec
out
push
mov
pop
xchg
scas
mov
xor
cld
das
aaa
jae
dec
adc
inc
pop
push
mov
mov
std
sahf
push
mov
lods
xchg
xchg
push
mov
hlt
popf
les
int
dec
pushf
xchg
mov
cmp
mov
cs
ins
fidivr
push
push
mov
data16
les
aam
mov
cmp
cwde
sub
js
mov
les
inc
js
icebp
cmp
pavgw
push
push
inc
push
scas
pop
in
(bad)
rol
fdivrp
ja
mov
(bad)
jg
mov
mov
(bad)
push
lock
push
or
push
test
add
stc
xor
leave
add
inc
push
jge
sub
pushf
lods
mov
ret
pop
je
xchg
bound
sub
push
mov
loop
int
inc
add
cmps
add
dec
fnstsw
mov
push
rcr
fistp
xor
pop
fdiv
fadd
xchg
mov
mov
dec
rol
fst
or
enter
sub
pop
jb
inc
add
cld
jno
push
fwait
jb
(bad)
into
xchg
adc
push
push
ins
mov
data16
push
sub
pop
retw
adc
jmp
adc
mov
in
sahf
inc
sbb
mov
scas
std
rol
(bad)
cdq
push
sub
adc
or
dec
inc
pop
jno
cmp
jl
push
repz
cmp
dec
sbb
fst
(bad)
loop
mov
mov
popf
(bad)
mov
push
mov
fdiv
aas
pop
(bad)
cmp
inc
popa
xor
out
cmp
push
mov
sub
adc
mov
or
mov
(bad)
xchg
jne
out
cli
jb
add
xor
sar
enter
xchg
movbe
call
call
in
call
xchg
mov
fs
call
dec
cmc
(bad)
ins
adc
cmp
call
fwait
cmc
in
out
aad
cmp
jo
test
xor
mov
enter
push
dec
nop
and
call
cmps
pop
push
sbb
mov
(bad)
in
and
movs
aas
and
adc
pusha
retf
or
mov
mov
mov
repz
push
fbstp
shl
xor
jo
mov
jge
aas
cld
mov
xchg
or
adc
gs
imul
ret
dec
fwait
jg
out
jecxz
dec
push
fsub
xchg
jbe
lock
push
cmp
test
and
cdq
adc
inc
imul
xchg
jno
cld
and
cmc
pop
push
fadd
sbb
cmp
retf
xchg
in
push
fdiv
call
ins
cdq
inc
sub
popf
int3
bound
push
imul
aad
out
stos
mov
int3
mov
loopne
push
mov
pusha
loope
dec
or
adc
sub
stos
test
push
daa
xor
mov
imul
cmp
ficomp
mov
pop
xchg
int
movs
popf
sbb
pop
je
sbb
mov
fstp
xchg
icebp
ficomp
mov
or
pop
sbb
int3
xor
mov
mov
je
test
cmps
cmc
cmp
je
es
cmps
or
(bad)
in
jmp
arpl
sbb
jmp
ds
xor
call
and
int3
sbb
sub
lods
sbb
enter
push
pop
jmp
xor
sub
sbb
movs
dec
xor
icebp
pop
mov
or
sub
repz
pop
out
(bad)
(bad)
jnp
sbb
je
sbb
test
ins
cwde
ins
lods
test
cmp
dec
sub
enter
fist
mov
or
shr
add
mov
xchg
(bad)
xchg
jmp
pop
or
xor
jo
mov
push
xchg
inc
iret
sub
inc
pop
fldenv
ficom
arpl
cmps
sar
or
mov
ja
jne
sub
arpl
or
sbb
vmwrite
and
scas
hlt
pop
or
cmp
jp
ret
mov
mov
jo
xor
xor
xor
jle
out
dec
push
out
test
or
xchg
xchg
sahf
pop
fucomp
or
pop
or
lock
inc
mov
pop
out
js
mov
jbe
movs
xlat
xchg
cmp
nop
add
movs
ja
jae
fidivr
ss
cld
add
jg
pop
jns
outs
cmp
sti
sbb
inc
mov
push
mov
adc
mov
test
retf
inc
jne
ins
add
mov
mov
pop
repz
ja
sahf
fstp
cmps
xor
sbb
int3
push
jb
or
popa
sbb
lods
mov
cmp
sub
ds
ret
int
pop
cmp
shl
push
mov
pop
push
push
je
mov
std
cmp
jecxz
enter
push
ficomp
pop
popa
daa
push
mov
cmp
loop
scas
sub
in
push
mov
sub
sub
mov
outs
into
push
mov
movs
mov
mov
jne
pop
cmp
mov
and
push
ins
jno
inc
ins
nop
mov
repz
dec
mov
xchg
mov
sub
adc
xchg
iret
kmovw
lock
jo
loope
loop
push
xchg
enter
(bad)
aam
out
mov
mov
mov
call
adc
push
mov
xchg
inc
jle
ja
(bad)
std
mov
jp
dec
jge
aas
dec
daa
xlat
popa
movs
sbb
movs
jmp
cmp
sub
cwde
mov
hlt
daa
pop
jb
inc
loope
or
sub
(bad)
cmp
push
mov
pop
mov
leave
sahf
jp
xlat
mov
or
popa
pusha
repnz
out
shr
sbb
push
in
push
and
mov
cmps
jg
movs
out
loopne
push
ret
iret
sbb
or
ret
jns
out
cmc
and
dec
xor
retf
mov
jae
ins
push
mov
jecxz
adc
cmp
xor
shl
xchg
mov
pop
mov
out
dec
sub
(bad)
xor
call
iret
mov
test
push
outs
and
movzx
fild
sub
stc
out
fist
dec
adc
sub
mov
xor
xchg
(bad)
push
mul
push
xchg
sbb
retf
lods
or
sub
sbb
sub
test
ds
cmp
ja
adc
cwde
adc
xor
aam
movs
aaa
nop
mov
mov
jmp
xchg
or
jb
or
mov
jl
mov
mov
jb
popa
inc
jge
icebp
jmp
icebp
mov
imul
pop
cmp
xchg
push
push
jae
adc
fwait
or
xchg
adc
fcmovne
sub
inc
dec
xor
test
fwait
or
xor
mov
sti
cmp
fstp
cmp
bound
int3
inc
or
cmp
mov
ins
loopne
aad
jns
sti
jge
mov
sbb
sub
sbb
inc
fidivr
sub
xor
int3
rcl
mov
stos
jmp
push
xlat
lods
out
push
mov
fiadd
mov
not
dec
pop
cmp
sub
sbb
sbb
shl
out
into
sub
sub
jmp
popf
sub
dec
cmp
leave
cdq
add
inc
add
jl
stos
and
(bad)
xor
test
gs
cmp
aas
xor
sub
xchg
xchg
xchg
ficomp
pop
lahf
cmp
imul
cld
or
sahf
mov
jle
xchg
in
ds
mov
lahf
hlt
dec
popa
sti
pushf
jecxz
daa
add
div
pop
sub
js
shl
mov
sbb
cmp
idiv
in
js
stc
fistp
xchg
xor
aas
ja
dec
mov
sbb
jl
ds
or
out
push
pop
cmp
(bad)
and
repz
and
fisttp
or
mov
dec
cmp
fstp
les
add
add
shl
ss
cmp
aad
cmp
outs
ins
and
retf
jmp
aam
dec
push
addr16
mov
inc
inc
sbb
leave
jbe
ins
push
retf
gs
int
lds
jp
push
xchg
xor
xchg
xchg
mov
or
jno
movs
jmp
test
imul
mov
in
jle
jmp
iret
pushf
inc
inc
dec
scas
test
xchg
test
push
jne
out
sti
pop
stc
adc
jl
movs
mov
mov
loop
xor
xor
hlt
ins
(bad)
ins
sbb
sub
lea
xchg
fisttp
fldenv
push
imul
daa
or
dec
iret
xor
mov
and
cmp
add
enter
mov
js
pop
std
inc
jmp
sub
call
jae
sub
cmc
jp
mov
inc
and
stos
not
adc
cmps
mov
push
push
rcr
xor
test
cmp
fmul
push
add
ret
cmp
call
sbb
cmps
jmp
sbb
or
xor
dec
enter
test
pop
jp
mov
inc
jmp
jnp
ret
push
xor
adc
jp
sub
jbe
pop
shr
inc
fidivr
jmp
test
and
mov
daa
in
lods
jmp
jp
mov
push
inc
mov
and
pop
xor
sbb
sub
movs
add
test
dec
out
mov
mov
pusha
imul
sbb
dec
pop
retf
shl
add
adc
add
inc
fild
cdq
fnstenv
jecxz
ror
add
pop
sub
pop
jo
sar
add
test
pop
fnsave
xchg
fsub
adc
sbb
add
ins
mov
adc
pop
or
cwde
sbb
mov
mov
pop
fst
outs
int3
(bad)
sbb
es
pushf
xor
cld
inc
ins
rcl
push
hlt
jmp
push
ja
in
ret
push
push
cld
inc
stos
pop
xor
xor
and
xor
iret
jo
retf
mov
stos
xor
mov
xor
mov
(bad)
inc
pop
push
fild
pop
sbb
test
adc
aaa
daa
rcl
xchg
add
pop
sub
gs
shl
clc
cmps
mov
jp
gs
aam
cld
jnp
dec
and
adc
mov
add
push
repz
jns
js
jl
mov
stos
mov
push
test
pusha
int
shl
stc
mov
in
and
pop
aaa
mov
dec
adc
outs
and
pop
out
retf
mov
cli
outs
jmp
cmp
mov
in
out
jns
mov
enter
mov
sahf
sbb
and
xor
ja
mov
jecxz
out
mov
popa
pop
fild
fiadd
xor
add
cld
cmpxchg
cmps
mov
jp
cmps
and
mov
imul
loopne
dec
ret
mov
xchg
les
cs
inc
cmp
(bad)
dec
std
retf
or
rcl
cmp
fisttp
imul
jl
mov
ins
mov
frstor
push
mov
jae
pushf
inc
push
das
paddb
jne
xor
into
mov
movs
inc
in
inc
jns
(bad)
in
push
xchg
stos
pop
scas
cmp
and
les
push
jg
push
jmp
or
mov
cwde
out
add
data16
inc
(bad)
and
pop
adc
mov
cli
pop
loope
or
out
cmp
inc
fisubr
shl
test
pop
pop
ss
in
dec
pop
lods
pop
cmp
call
popa
lea
das
adc
imul
mov
pop
pop
pop
gs
mov
add
mov
lods
push
adc
cmp
xor
mov
fdiv
mov
(bad)
xchg
cli
jp
pop
movs
mov
push
popf
push
scas
dec
jae
xor
add
push
imul
gs
mov
cmc
out
push
mov
std
lahf
ret
sub
pusha
ins
push
pushf
dec
adc
or
push
in
sti
test
sbb
push
in
stos
sbb
jnp
jl
jge
xchg
lock
mov
lock
loopne
sbb
inc
cmp
push
xchg
gs
mov
sub
mov
mov
out
inc
js
cmp
pop
sub
rol
push
or
inc
lods
mov
and
in
or
add
add
jno
push
imul
(bad)
(bad)
xlat
or
jmp
fstp
mov
outs
xchg
adc
enter
rcr
ret
xchg
add
mov
push
mov
int3
push
retf
sub
adc
sti
push
iret
cmp
jno
cs
clc
shl
jns
push
imul
and
pop
lahf
xchg
sahf
das
push
retf
int3
outs
or
cmps
jae
pop
mov
add
adc
push
test
inc
mov
inc
push
popf
xchg
pop
inc
out
pusha
sahf
in
popf
sub
mov
mov
inc
ficom
jge
add
loop
ffree
sub
push
lea
mov
les
(bad)
mov
icebp
rcr
add
daa
js
imul
aad
or
outs
cmc
or
fsubr
scas
pop
mov
pop
out
pop
xchg
adc
push
popf
out
xchg
hlt
cmp
movs
sbb
sar
dec
psrlw
xchg
push
dec
mov
sub
sar
inc
idiv
aam
xchg
test
xor
(bad)
imul
sti
je
push
ins
ja
xor
repz
stc
lods
mov
jmp
adc
sub
aad
fs
sbb
stc
add
or
or
pop
test
repz
pop
mov
push
hlt
mov
bound
inc
ror
rol
and
(bad)
(bad)
adc
and
jb
inc
fistp
or
stos
aaa
ins
xchg
add
xor
mov
xlat
adc
fnsave
stc
ror
emms
movs
(bad)
(bad)
sbb
jge
dec
xor
dec
ret
call
inc
push
jecxz
cmp
addr16
add
pop
push
mov
mov
sub
daa
cdq
ds
cmp
in
adc
xchg
xor
outs
mov
in
in
mov
(bad)
shr
dec
call
jno
xor
aaa
and
ins
push
clc
mov
in
inc
lods
and
fwait
pop
shl
bound
sbb
jne
ins
test
sub
xlat
(bad)
repz
test
sbb
push
sbb
repnz
scas
call
jmp
int3
sti
jl
mov
(bad)
sub
xlat
pop
inc
cmp
cwde
mov
mov
jo
jmp
cmp
cmp
mov
jnp
mul
dec
jo
and
push
ror
lock
xchg
cmps
xor
xor
jns
fcmovnbe
jno
inc
xor
sbb
sub
in
cmp
mov
imul
dec
inc
and
pop
stos
and
xor
mov
popa
std
scas
stc
movs
popa
adc
arpl
jmp
pop
movs
mov
mov
add
or
gs
and
call
xor
xchg
inc
xchg
maxps
and
mov
adc
leave
dec
inc
pop
xchg
cmp
fstp
loope
xchg
(bad)
jg
dec
xchg
and
mov
xchg
call
xchg
add
mov
jb
push
inc
or
stc
fild
lods
and
movs
in
push
retf
sbb
xor
(bad)
aas
adc
jo
in
ja
mov
repnz
xor
test
push
pop
mov
idiv
or
inc
(bad)
push
out
inc
in
cdq
adc
jo
enter
mov
stos
mov
pop
scas
mov
cmc
jbe
outs
fdiv
lods
or
lods
push
mov
(bad)
xchg
or
pop
sub
fstp
rcl
test
pop
xchg
or
gs
mov
jb
adc
dec
enter
and
pop
add
push
outs
aas
mov
into
data16
(bad)
fisub
mov
shr
dec
pop
mov
lock
pop
adc
(bad)
push
add
lea
pop
pusha
in
or
cld
and
shl
test
mov
pop
cmp
out
adc
adc
mov
sbb
dec
aaa
adc
es
scas
out
dec
fimul
and
xor
aad
movs
push
adc
iret
adc
fld
xchg
enter
xor
(bad)
adc
outs
loope
and
ror
sub
lea
push
xchg
cli
cmp
jns
dec
imul
lods
call
push
add
jnp
test
xchg
lahf
lods
adc
sbb
shr
sub
neg
arpl
repnz
imul
cmps
in
shl
test
push
cs
lods
outs
pushf
mov
xor
push
stc
imul
test
fcmovbe
xchg
pop
arpl
push
cmp
into
sbb
xor
je
fs
mov
inc
push
fdivr
call
pop
and
mov
add
fldenv
sbb
cdq
jg
sub
hlt
jns
mov
dec
sbb
int3
test
nop
sbb
out
jle
sbb
clc
popf
mov
and
jp
lds
sbb
add
or
aaa
cld
pushf
xchg
sbb
movs
inc
sub
mov
cmp
aaa
xchg
and
fisttp
ins
and
jne
mov
push
arpl
sub
pop
iret
(bad)
es
(bad)
dec
ror
lock
jle
push
cmp
shr
mov
sub
sbb
inc
fisttp
pop
push
add
lds
cdq
or
scas
addr16
into
and
imul
jmp
cmp
pushf
cmp
cmc
cld
test
push
(bad)
mov
mov
or
int3
pop
lahf
xchg
shr
xchg
push
add
cwde
add
sub
xchg
sbb
fsubrp
in
push
jge
imul
out
sti
push
sub
imul
jmp
in
nop
mov
gs
pop
popf
retf
push
aad
mov
xor
pop
mov
inc
xor
hlt
rcr
scas
ret
xor
sub
and
push
imul
and
(bad)
xor
mov
ror
dec
pop
mov
adc
dec
inc
std
ds
jmp
xlat
popf
in
sbb
sbb
mov
sbb
or
mov
lds
loope
inc
mov
jnp
mov
push
lahf
inc
mov
enter
xor
into
nop
mov
pop
push
inc
mov
mov
cwde
push
dec
jns
push
mov
hlt
or
mov
and
pop
cmps
hlt
inc
data16
inc
push
std
aam
push
jge
xchg
sub
sbb
push
xlat
push
mov
jecxz
add
movs
jge
mov
mov
xor
addr16
les
test
xor
fdiv
mov
or
xchg
and
cmc
ins
sub
push
push
sub
jbe
push
movs
(bad)
fwait
xor
mov
or
ffree
fwait
into
cmp
out
dec
xchg
jmp
mov
add
xor
neg
sub
arpl
jge
test
jecxz
popa
js
jmp
add
push
jp
stos
mov
mov
(bad)
neg
dec
add
mov
cmp
add
aas
xchg
dec
pop
frstpm(287
xor
mov
mov
leave
mov
pop
or
inc
lds
and
div
or
dec
iret
cmp
dec
pop
or
dec
add
(bad)
adc
jl
jbe
es
or
shl
jb
mov
push
(bad)
dec
cmps
mov
in
xor
inc
cld
xor
enter
push
inc
or
mov
xor
cmp
imul
push
xchg
movs
sti
xor
push
ins
dec
and
pop
mov
jmp
std
jne
sbb
jecxz
out
repz
pop
pop
jmp
ficomp
xor
stc
(bad)
adc
nop
lods
push
inc
pop
mov
cmp
push
call
(bad)
inc
mov
jge
xor
mov
adc
mov
loop
repnz
imul
jno
xor
rcl
xchg
and
pop
(bad)
in
xlat
(bad)
push
aam
xor
retf
jle
pop
mov
loop
cmps
mov
push
cli
int3
push
sahf
loope
dec
jl
inc
bound
pop
mov
(bad)
and
mov
int
loop
imul
mov
cmps
dec
sahf
mov
xor
pop
stos
sbb
or
popa
sahf
jae
jp
add
jns
fstp
cmc
gs
retf
popa
mov
sti
js
or
mov
mov
imul
sub
push
or
push
or
fdiv
loop
std
ja
aaa
jl
pop
(bad)
dec
mov
push
push
into
mov
(bad)
retf
sahf
repz
outs
(bad)
ds
call
mov
jmp
popa
out
xchg
mov
jae
xchg
xor
jmp
jmp
adc
test
imul
daa
xchg
jmp
pop
jp
and
loop
jmp
test
test
pop
arpl
mov
ret
mov
movs
je
mov
retf
mov
push
push
adc
rol
xchg
add
mov
xchg
in
ud2
fs
mov
mov
loope
mov
sub
test
adc
jge
pop
xchg
sbb
popf
mov
outs
cmps
bound
jl
dec
inc
out
daa
and
push
popf
adc
aas
mov
or
xchg
movs
adc
pop
aas
push
pop
bound
and
icebp
pop
lahf
add
add
in
and
stos
repnz
inc
sbb
mov
jl
outs
or
jge
loope
jnp
lock
cmps
(bad)
bound
sub
and
stos
test
push
mov
nop
push
mov
push
pop
lods
and
sub
mov
or
jle
lock
gs
jmp
retf
mov
mov
cs
gs
push
push
or
not
add
cli
dec
inc
aas
jno
in
inc
mov
js
jo
ret
arpl
push
mov
invd
std
pop
fld
or
dec
into
popa
dec
mov
inc
sub
in
es
shr
adc
lahf
jecxz
in
push
pushf
imul
dec
cld
pop
shr
hlt
xor
push
xor
jecxz
jbe
mov
scas
sbb
push
pop
add
movs
int
sti
jo
imul
and
retf
sahf
sahf
cmp
jmp
pusha
inc
ins
(bad)
fisub
xchg
add
pop
js
sbb
sti
or
inc
iret
sub
mov
adc
inc
mov
add
sbb
rol
mov
sbb
mov
jo
in
mov
cmp
rcl
and
jge
jl
and
es
int
mov
cmp
sar
retf
shl
cmp
movs
idiv
cmp
jne
fwait
push
mov
cmp
push
add
inc
xchg
or
and
xlat
in
pop
xchg
cdq
out
sbb
int3
jb
aam
pusha
jbe
mov
pop
push
dec
sbb
mov
mov
jle
jae
jmp
jge
lods
mov
xor
shl
mov
arpl
push
out
ds
cmp
mov
xchg
movs
and
dec
cli
in
sub
inc
iret
inc
jb
jmp
aas
out
les
es
shr
mov
cmp
pop
mov
push
push
movs
test
push
xlat
inc
daa
pop
jae
mov
dec
lods
pop
jecxz
pop
mov
jne
mov
popa
mov
sbb
jo
jmp
ret
das
sub
xchg
sbb
retf
xor
iret
jg
jg
ret
cwde
cmc
cmp
sub
mov
xor
(bad)
std
jp
or
inc
cmp
sub
fmul
(bad)
lea
mov
push
ret
and
mov
mov
cld
pop
in
xor
(bad)
add
mov
adc
call
aaa
pop
(bad)
cmps
rcl
adc
das
test
sbb
(bad)
add
scas
jmp
sub
test
fwait
and
sbb
fwait
movs
mov
test
pop
add
and
jo
sub
movs
stc
jl
idiv
int3
push
std
and
mov
imul
cmp
test
or
call
je
sub
nop
neg
fs
jge
pop
imul
nop
cmp
cmp
mov
adc
loopne
popa
in
test
cmp
mov
and
jne
cld
test
xor
xor
mov
test
mov
fild
aaa
xor
mov
or
imul
adc
sub
push
repnz
stc
lods
sbb
or
xchg
sub
nop
mov
(bad)
fs
fist
test
ds
sbb
es
push
add
shl
pop
outs
aas
jg
les
sysret
sbb
pop
adc
lods
jmp
rol
gs
mov
add
or
(bad)
sub
cdq
fnstcw
xor
adc
mov
cmc
test
rcr
jmp
push
shl
ds
jmp
bound
xor
push
(bad)
inc
add
xchg
mov
neg
sub
mov
in
mov
fcmovbe
ja
scas
into
push
xchg
jns
push
pop
sub
adc
ror
sbb
popa
icebp
clc
sub
stos
sub
mov
jns
dec
int
outs
fs
lahf
call
dec
imul
push
sahf
push
imul
or
mov
adc
dec
hlt
(bad)
xor
in
out
inc
inc
mov
mov
and
mov
push
movs
xor
cmps
jmp
in
shl
mov
or
dec
data16
retf
lods
mov
ins
mov
dec
fisubr
cmp
test
stc
mov
ret
jno
jecxz
movs
idiv
mov
xor
in
mov
jmp
loopne
mov
or
mov
movs
in
xor
push
add
mov
aaa
inc
inc
jg
mov
out
mov
or
adc
rol
sub
xor
es
cmps
cmp
cmp
adc
push
notrack
lods
clc
jmp
mov
mov
lods
out
push
adc
pop
adc
js
dec
jbe
inc
test
or
ins
jae
mov
mov
pop
push
test
leave
or
push
out
jae
xor
mov
xchg
xor
cmp
sub
pop
mov
add
cmp
(bad)
or
dec
or
std
push
pop
pushf
jle
cmp
pop
outs
xor
das
add
push
aaa
fcomip
nop
adc
jmp
(bad)
aas
mov
lock
mov
out
push
mov
xchg
sahf
jns
xchg
fst
mov
fild
inc
mov
aaa
(bad)
jp
and
inc
mov
xchg
mov
inc
mov
bound
mov
cmc
dec
retf
xchg
pop
xchg
jg
xchg
enter
sub
push
push
jae
mov
inc
inc
jge
push
mov
inc
cmps
push
shl
sahf
pop
fisttp
xchg
adc
neg
repz
fstp
icebp
mov
call
add
jo
es
les
addr16
and
mul
es
lods
dec
sahf
aas
push
inc
ins
aas
not
mov
dec
(bad)
jnp
push
out
jmp
sub
ficom
lock
xor
cmc
cli
clc
mov
xchg
sti
jg
lahf
sti
jp
and
xor
mov
xor
test
add
(bad)
cdq
loopne
(bad)
mov
outs
inc
add
lods
add
fisub
outs
sub
daa
and
inc
xor
mov
mov
pushf
jg
mov
push
push
call
movs
mov
test
mov
rol
push
lahf
gs
mov
push
dec
and
mov
add
cli
push
fs
add
add
mov
cli
shl
scas
add
(bad)
pop
sbb
iret
(bad)
sub
rcl
cmp
mov
push
pop
xor
ss
test
push
pop
cmp
sub
lods
and
mov
xchg
rol
inc
sbb
mov
or
test
test
cmp
lock
dec
mov
xchg
(bad)
cmp
dec
pop
popa
popf
jae
or
stos
xchg
jl
jo
xchg
or
ja
aaa
nop
sub
lea
push
cmp
stos
test
push
adc
xchg
ret
xor
sbb
arpl
and
push
and
add
arpl
movs
pop
aaa
mov
jmp
add
movs
xor
aas
ror
cs
not
cmc
cs
fcomp
mov
(bad)
jnp
outs
sub
or
(bad)
mov
enter
xor
addr16
ss
ds
inc
mov
dec
push
scas
add
push
xchg
or
repz
mov
pop
sbb
fist
aaa
adc
xor
mov
or
pushf
(bad)
out
sub
popa
xor
aaa
js
pop
scas
popa
mov
stos
int
cmp
mov
in
lea
ja
jmp
sub
cwde
jl
(bad)
loop
stos
inc
aaa
adc
retf
jnp
data16
pop
imul
stos
sub
test
add
cwde
mov
scas
imul
push
and
sbb
mov
mov
mov
cmp
jl
stos
cmp
outs
fdiv
out
pop
call
shl
fldenv
sbb
scas
pop
push
inc
cmc
sub
push
ds
push
test
mov
adc
fs
repnz
fisttp
fwait
pop
pop
adc
out
and
out
retf
xchg
out
lahf
cmp
push
clc
sbb
cmp
nop
lds
xor
inc
(bad)
jmp
add
imul
scas
adc
mov
and
test
cmp
jns
arpl
mov
and
or
mov
mov
out
adc
inc
cmp
cmps
mov
mov
ds
xchg
stc
sar
lock
adc
dec
sbb
mov
js
cmp
pop
add
jge
cwde
cmp
add
push
popf
int3
add
fsub
rol
retf
sub
fs
test
mov
and
cdq
jg
add
loopne
mov
and
add
jl
mov
mov
sub
push
adc
push
adc
jnp
leave
ret
(bad)
adc
icebp
ds
jno
test
lea
mov
pusha
ret
sbb
push
pop
les
mov
mov
cmp
mov
push
addr16
pop
out
cmp
pop
in
xchg
nop
push
test
std
idiv
add
add
mov
lods
push
add
or
loop
imul
mov
aaa
xchg
mov
addr16
xchg
adc
push
mov
add
mov
push
movs
xchg
mov
mov
popa
sub
fbld
and
arpl
call
fs
pop
push
std
adc
daa
pop
xchg
cmp
inc
outs
jnp
sub
(bad)
jecxz
xchg
hlt
jno
xor
stos
inc
lods
leave
xchg
aas
or
cmp
int3
mov
add
(bad)
dec
leave
stc
aas
cmc
mov
push
call
and
jns
aam
enter
scas
add
xchg
sbb
test
out
cmp
and
adc
cmp
sbb
push
je
in
pop
inc
sahf
(bad)
adc
push
pop
mov
adc
jb
(bad)
movs
adc
xor
jno
jmp
xchg
test
and
daa
or
shl
jge
enter
shl
test
icebp
mov
mov
mov
xchg
sahf
pop
mov
loope
pop
inc
(bad)
sbb
mov
sub
jle
xor
bound
sbb
and
jae
jnp
es
add
dec
loope
aas
mov
cli
jle
push
pusha
enter
int3
rcl
or
out
xchg
lods
movs
clc
cmp
jp
xor
fadd
imul
icebp
fs
int3
dec
cmp
cmp
push
inc
xlat
dec
ja
movs
push
push
(bad)
lahf
or
loopne
sub
mov
loope
pop
jbe
cmc
imul
cmp
into
cmp
movs
mov
pusha
cdq
pop
lock
repnz
hlt
pop
push
cmps
push
add
adc
mul
bound
jmp
das
adc
mov
mov
jae
cld
and
dec
sub
sub
(bad)
stc
aaa
sub
xor
sub
cs
nop
(bad)
and
mov
xor
or
push
push
and
sbb
or
push
inc
sbb
pop
push
dec
lds
retf
sbb
sbb
sub
movs
je
or
push
and
add
inc
or
mov
fstp
sub
aad
pop
repz
jno
xchg
scas
cmp
mov
xchg
push
mov
hlt
sahf
(bad)
push
fmulp
mov
push
cmps
stc
lock
sbb
sti
cmp
jmp
push
cmp
and
and
retf
inc
and
sub
adc
cmps
mov
mov
inc
sbb
(bad)
retf
js
mov
sbb
rcr
xor
adc
(bad)
dec
mov
stc
dec
inc
mov
imul
mov
and
sbb
pushf
das
cmps
mov
xchg
sub
dec
and
mov
mov
pop
into
add
jmp
xchg
mov
mov
xor
cwde
dec
dec
in
push
mov
add
pop
jge
or
out
mov
dec
xor
sub
xchg
bound
sbb
adc
sub
adc
pop
mov
mov
cmps
fidiv
loop
nop
aam
inc
mov
aam
out
mov
fst
xchg
and
imul
sub
pop
sub
jl
add
sbb
fwait
ret
xor
jo
leave
sti
push
out
xchg
xor
loopne
sbb
leave
test
mov
inc
mov
xlat
push
mov
jae
or
cmps
stos
mov
dec
lea
jno
xlat
rcr
mov
cs
into
iret
jg
pushf
xor
cld
cld
xor
dec
push
call
sub
(bad)
lea
push
push
mov
xor
in
pop
adc
sub
mov
rol
aad
bnd
repnz
ret
sub
add
xchg
cwde
cmp
inc
adc
cmc
xchg
popf
repnz
imul
(bad)
mov
jle
outs
cmp
loop
mov
xchg
mov
xor
push
rcr
push
lea
ror
cdq
xor
jb
cwde
mov
inc
cmc
and
pop
call
cld
js
fwait
dec
ds
and
jae
aaa
lods
jge
cmp
jmp
out
jno
and
push
loopne
xor
fwait
push
cvtpi2ps
(bad)
fisttp
mov
scas
push
xchg
dec
mov
sub
add
inc
fwait
xchg
jge
mov
mov
imul
dec
sbb
sbb
stos
dec
mov
ss
popa
sbb
sahf
mov
mov
pusha
pop
das
popf
xchg
in
pop
out
inc
xor
mov
xor
push
or
cmc
jmp
cmc
idiv
pop
mov
dec
pop
adc
or
in
xchg
call
out
mov
popa
cdq
stc
mov
mov
(bad)
retf
pop
pop
out
mov
(bad)
jno
(bad)
or
(bad)
fcom
packuswb
pop
mov
int3
inc
cmps
mov
pop
jne
or
mov
sub
lea
jae
leave
mov
out
fwait
adc
stos
out
xchg
fadd
push
dec
or
add
sahf
or
jp
rcl
push
mov
mov
(bad)
and
mov
jno
ds
sbb
gs
sbb
out
jo
pop
cwde
push
leave
cmp
outs
js
cmc
dec
lods
sub
scas
or
adc
mov
stc
push
ja
leave
add
mov
or
and
ret
jmp
jg
mul
pop
push
and
dec
das
dec
mov
mov
fidivr
add
mov
inc
leave
or
mov
aam
idiv
mov
cmp
in
inc
mov
scas
push
jecxz
leave
mov
inc
xor
jge
sar
cmp
mov
inc
cmp
push
mov
cmps
cmp
inc
jno
adc
dec
mov
jne
nop
push
retf
fs
test
mov
mov
adc
repz
inc
and
dec
jl
mov
xchg
jmp
mov
leave
jl
sbb
(bad)
push
cmp
in
fadd
fcomp
inc
lds
mov
outs
ror
sti
mov
push
jns
stos
test
mov
ins
mov
push
cld
pop
mov
sub
mov
dec
das
sbb
and
sti
jo
push
jnp
cmps
iret
leave
pop
ins
imul
push
push
xor
jnp
cmps
(bad)
iret
scas
fsub
dec
or
jecxz
punpckhdq
xchg
sub
jo
bound
adc
std
lds
repz
out
mov
xlat
les
(bad)
push
jnp
mov
inc
push
into
in
sbb
jne
or
xor
mov
leave
aam
fstp
(bad)
and
mov
int3
(bad)
xor
mov
adc
ins
sub
retf
sbb
jg
mov
sbb
cmc
cmps
addr16
xchg
in
lahf
(bad)
outs
loopne
in
lahf
mov
sub
(bad)
jle
arpl
fadd
retf
pushf
cli
xchg
add
xor
mov
pop
jp
lods
repnz
sahf
es
lock
imul
add
fimul
mov
icebp
ins
mov
or
test
out
mov
or
mov
pop
jo
adc
mov
rol
lods
std
rcl
mov
repz
in
rcr
pop
and
into
mov
pop
sub
ror
in
xchg
or
jge
into
addr16
pop
jb
leave
pop
call
push
in
xor
push
pop
aas
xor
pop
push
bound
jge
sub
ds
mov
dec
push
ja
shl
test
or
fsubrp
inc
cmp
cs
fstp
xchg
lods
or
lods
icebp
movs
xor
inc
test
xchg
pop
les
xor
ds
leave
(bad)
push
cdq
mov
xchg
in
jnp
push
lea
pop
fldcw
popf
inc
arpl
xchg
sti
cmp
sar
push
dec
rcl
es
and
adc
loopne
and
call
sbb
(bad)
pop
(bad)
test
daa
xor
push
ret
mov
jno
or
sahf
aam
sub
mov
mov
cmc
xchg
jge
mov
adc
fucomp
mov
dec
int3
aam
popf
aas
loopne
adc
ds
int3
jecxz
xchg
xchg
outs
ja
jo
pop
adc
add
cdq
push
vunpcklpd
fucomip
add
or
sub
push
push
jmp
lods
dec
in
pop
ficomp
mov
ret
add
pop
jge
inc
pop
add
fwait
jnp
ins
jmp
sbb
fxch
xchg
sub
jge
retf
mov
cmp
out
pop
arpl
or
sbb
bound
sbb
out
push
xor
lds
jecxz
dec
out
pop
das
ins
(bad)
ja
inc
fxtract
mov
xchg
ror
scas
iret
jp
arpl
adc
add
and
push
inc
xor
adc
inc
xchg
push
in
and
mov
and
call
and
sbb
mov
jl
push
mov
jmp
jae
(bad)
sbb
jl
mov
pop
dec
jmp
lahf
aaa
inc
sbb
(bad)
nop
in
ins
inc
mov
xchg
mov
dec
mov
jnp
jb
inc
and
shl
stos
pop
out
sub
in
lock
pop
push
push
pusha
xor
jl
push
scas
es
and
leave
sbb
dec
test
dec
sbb
pop
push
adc
in
fcmovnbe
repz
lahf
(bad)
pop
stos
scas
cwde
xchg
inc
(bad)
mov
out
(bad)
mov
cmp
(bad)
in
dec
mov
add
(bad)
adc
scas
popa
or
mov
push
cmps
or
pusha
(bad)
imul
daa
sub
sbb
mov
jmp
inc
xchg
push
(bad)
sub
or
in
mov
cmp
mov
dec
adc
cmps
std
adc
or
xchg
mov
cmp
aam
daa
popf
mov
dec
aam
mov
xor
push
inc
cmp
(bad)
out
and
gs
(bad)
pushf
push
sbb
clc
test
xor
sub
fwait
add
ret
xchg
loopne
cmp
adc
mov
nop
xchg
sub
int
mov
popa
mov
dec
push
sar
or
sti
mov
fs
mov
ins
clc
jno
sub
imul
pop
add
push
pop
sbb
jge
xor
lock
aaa
inc
xchg
iret
pop
mov
mov
stos
pop
mov
movs
sar
je
cdq
sbb
into
mov
test
aas
inc
xor
sub
out
std
or
rcl
es
push
imul
sub
cwde
neg
aas
in
fisub
retf
(bad)
test
clc
cs
lahf
fwait
push
outs
out
loopne
loop
cmp
call
jbe
adc
daa
pop
dec
mov
and
sub
jae
imul
mov
clc
in
cmp
fldcw
loopne
and
cmp
test
xchg
jmp
xchg
aas
in
fistp
jmp
pop
mov
in
inc
(bad)
xor
movntq
call
(bad)
adc
mov
push
iret
pop
lods
xchg
inc
lock
dec
rol
sbb
mov
push
ja
stos
ds
pop
test
cli
js
iret
xchg
inc
scas
pop
pop
jne
pop
fcom
push
stos
mov
lahf
push
cmp
jg
mov
adc
adc
lea
ss
or
xchg
pop
jno
cwde
mov
adc
push
sub
gs
push
cdq
pop
and
dec
cld
enter
jnp
xor
mov
fs
mov
xchg
cwde
mov
sbb
and
push
out
(bad)
movs
inc
adc
pop
lds
mov
inc
xchg
popa
or
and
jp
add
xchg
movd
repnz
jno
adc
(bad)
fxch
mov
out
out
std
daa
adc
inc
add
das
pop
jl
mov
push
scas
fisttp
stos
xlat
xor
adc
cmp
repz
and
imul
pop
sub
out
leave
adc
data16
xchg
inc
rcl
loopne
test
push
lods
or
outs
hlt
mov
popa
mov
inc
lods
xchg
xchg
sbb
out
mov
dec
xchg
dec
and
aad
arpl
push
shl
sbb
movs
adc
loope
and
mov
mov
xchg
sahf
and
pop
pop
xchg
sub
movs
add
xchg
jmp
jp
addr16
inc
daa
aas
aas
iret
cld
mov
pop
js
mov
xchg
out
xlat
lds
shr
(bad)
aad
add
inc
add
sub
or
les
shr
scas
out
call
adc
test
xchg
mov
enter
inc
dec
scas
sar
add
adc
xchg
jno
outs
or
mov
fs
dec
(bad)
mov
mov
push
inc
push
xchg
sbb
sub
nop
fild
movs
test
inc
jbe
or
daa
ins
scas
int3
aam
fs
inc
jb
retf
mov
cwde
mov
addr16
pop
in
in
pop
fmul
repnz
push
jp
lods
mov
push
cmp
ret
push
shr
xchg
mov
in
push
mov
cmp
add
cli
mov
xor
xchg
enter
push
fisub
add
imul
push
icebp
adc
xor
(bad)
cmp
pop
sub
adc
and
fimul
xchg
in
mov
pop
cmc
in
inc
xchg
js
hlt
test
xchg
mov
ja
mov
fild
xlat
(bad)
mov
repz
in
pop
push
mov
sti
pop
mov
inc
adc
mov
inc
add
xchg
and
iret
stc
repz
sub
pop
pop
pop
pushf
stos
nop
mov
daa
cdq
adc
adc
adc
and
call
pop
cmps
xchg
pop
sub
inc
cld
lahf
pop
call
pop
shl
jmp
mov
lahf
(bad)
aas
lahf
adc
packsswb
sub
test
xchg
sar
fs
inc
jne
loope
shl
jae
mov
pop
mov
jb
out
mov
jno
pushf
jge
and
sub
ror
mov
cmp
arpl
cwde
sbb
mov
mov
cmp
aaa
mov
add
out
xor
lock
add
daa
inc
retf
adc
out
pop
outs
(bad)
xor
push
or
ror
sbb
jne
jnp
dec
xor
fisttp
add
push
fdiv
add
jnp
pop
xlat
cmp
in
push
add
(bad)
jo
stc
inc
lock
cmps
movs
push
dec
mov
sbb
mov
jns
cmp
stc
mov
imul
pop
add
cmp
sbb
rcr
popf
jno
dec
pop
test
pop
mov
push
mov
int3
fsubr
mov
and
cmps
idiv
and
test
mov
push
xchg
dec
in
mov
jns
test
lds
aas
int3
fstp
daa
xor
(bad)
xchg
push
lods
pop
jl
les
int3
in
mov
push
lahf
jne
sbb
pop
rcl
jg
xchg
and
ins
or
popf
sub
mov
sbb
xchg
sahf
or
dec
add
sub
dec
mov
fcomp
retf
sub
ds
jae
inc
cmp
push
mov
xor
mov
out
movs
mov
je
mov
fs
in
dec
loopne
or
imul
fcomp
lods
xor
js
jns
sbb
pop
adc
dec
sti
inc
inc
xchg
mov
adc
sub
in
jecxz
(bad)
xchg
push
retf
push
movs
aam
dec
sub
push
or
scas
scas
sahf
ins
dec
inc
push
ret
fsub
add
jg
push
pop
(bad)
icebp
cs
xchg
inc
imul
cwde
call
push
cmp
and
inc
out
cmps
pop
in
in
cli
or
xchg
fmulp
push
cli
sub
cmp
pcmpeqd
mov
pop
sbb
mov
jle
jge
ja
dec
xor
sar
(bad)
leave
test
aaa
popf
and
ds
fld
shl
loop
in
adc
mov
push
into
daa
adc
loope
xchg
mov
test
add
call
inc
sbb
outs
jmp
hlt
fild
(bad)
rol
movs
mov
or
and
xor
(bad)
pop
loopne
lahf
push
add
pop
fidiv
movs
addr16
out
dec
dec
jmp
stc
imul
push
or
mov
jle
mov
pop
jle
pop
adc
enter
test
mov
inc
test
imul
or
in
js
test
loope
js
sbb
adc
rcl
shr
add
xchg
arpl
(bad)
jmp
pop
xlat
dec
call
or
in
ror
test
cmp
std
cmp
bnd
push
test
lods
inc
mov
mov
push
mov
xchg
aaa
es
mov
ins
add
stos
(bad)
in
(bad)
enter
les
pop
loop
push
cs
call
cmps
fstp
jae
ins
popf
es
into
cli
add
fwait
dec
mov
xchg
aam
sub
dec
push
push
(bad)
int3
xor
dec
push
mov
int3
fdiv
dec
ss
dec
stc
pop
out
inc
sbb
enter
int3
push
push
and
mov
dec
mov
loope
mov
stos
cmp
sbb
jmp
xlat
cs
aam
and
mov
lds
dec
pop
(bad)
fidivr
pop
cmps
inc
imul
inc
retf
fsubr
mov
mov
xor
mov
fwait
dec
std
push
jg
sbb
test
out
loope
jmp
and
pop
imul
pop
push
mov
(bad)
jnp
rcl
cmp
adc
es
inc
or
cmp
lock
in
ficom
inc
jbe
call
outs
ins
pop
retf
sbb
(bad)
outs
jne
xchg
pop
adc
mov
aaa
push
rcl
outs
ror
dec
mov
popf
mov
add
popf
cwde
test
pusha
mov
imul
pusha
aad
pop
por
dec
pushf
mov
adc
push
cmp
out
fmul
jnp
mov
mov
jle
rcr
push
ss
jns
lods
fadd
xbegin
in
(bad)
lods
(bad)
enter
mov
or
jmp
test
xchg
iret
ret
cli
int3
test
mov
enter
test
sub
retf
push
ins
enter
mov
pop
int3
call
loopne
aaa
push
xor
arpl
mov
pop
jb
clc
xchg
xor
push
in
xor
shl
out
sbb
lods
js
fst
mov
adc
ins
int
jmp
pop
clc
loopne
jg
je
sub
fs
xchg
test
retf
mov
cs
pop
(bad)
cmp
dec
xor
mov
jmp
test
push
adc
pushf
pop
pusha
push
jg
mov
and
push
mov
mov
enter
inc
inc
xor
push
test
in
popf
inc
les
pushf
inc
loopne
shl
mov
lods
das
js
dec
lock
mov
push
sbb
and
outs
ins
mov
out
fiadd
or
inc
stos
mov
enter
leave
sub
mov
aad
add
sub
sti
bnd
sub
fimul
push
mov
push
xor
mov
adc
int3
sub
movs
sbb
sbb
push
mov
movs
sub
rcl
out
movs
push
sbb
and
xor
rol
pop
test
shl
push
push
dec
jle
retf
out
repnz
mov
aas
in
ja
push
lock
dec
adc
cld
pop
aas
and
ds
sar
nop
mov
dec
adc
in
cmps
test
neg
les
xchg
das
fwait
push
add
repz
mov
inc
pop
lock
in
and
aad
pop
shl
cld
into
out
push
push
in
ret
mov
xor
stos
std
inc
ins
pop
sub
sub
mov
xor
fs
out
aam
cdq
mov
cdq
adc
dec
lds
xor
and
je
mov
xlat
cmp
and
aad
push
in
hlt
jb
jp
adc
add
fwait
popf
add
jmp
dec
push
shl
sbb
sub
js
mov
cs
je
mov
fcmove
mov
mov
dec
xlat
mov
bound
dec
sahf
pop
and
mov
inc
stc
adc
call
popf
imul
dec
xor
push
jg
stos
sub
test
jl
sbb
inc
inc
jmp
xor
mov
adc
mov
mov
shr
pusha
mov
push
mov
mov
fld
sub
ffree
jbe
pop
and
push
mov
pop
lods
test
jno
xor
(bad)
xchg
das
enter
ret
pushf
es
adc
cwde
sub
dec
xchg
xor
push
or
mov
jns
sbb
imul
push
int3
mov
shr
mov
fcmove
adc
in
dec
or
aad
lods
daa
inc
aaa
aas
pop
les
jne
xchg
or
jmp
icebp
idiv
xor
mov
mov
call
int
xchg
add
mov
movs
adc
test
stc
cmp
in
jp
dec
arpl
mov
mov
or
mov
dec
sub
cmps
test
mov
call
fdiv
retf
retf
xor
pop
push
push
popa
inc
or
inc
test
and
add
sbb
inc
scas
into
push
std
jbe
das
jecxz
cs
mov
xchg
int3
cdq
jb
mov
inc
or
inc
mov
push
dec
jns
jge
sbb
(bad)
addr16
sub
jmp
pop
cmps
shl
push
(bad)
dec
jne
ja
jecxz
rcl
fcomi
pop
jmp
test
jbe
and
bound
push
jecxz
mov
xor
hlt
(bad)
cmp
fidiv
xchg
inc
xchg
push
sbb
in
inc
sub
sub
idiv
jle
imul
in
pop
mov
push
mov
mov
add
btr
push
fisttp
ja
pop
pop
pop
adc
pushf
adc
sbb
mov
pop
adc
push
mov
fild
imul
test
xor
ret
ja
or
movs
mov
mov
mov
out
mov
xlat
inc
retf
repz
jmp
dec
mov
loop
mov
inc
outs
fld
arpl
mov
cmp
call
fbld
stos
mov
xchg
lahf
cld
jne
scas
ret
ror
hlt
jg
jmp
or
sub
retf
fwait
dec
adc
bswap
mov
stc
js
ret
push
or
imul
repz
mov
xchg
jno
inc
pop
sub
adc
adc
movs
jnp
sub
dec
ins
push
push
pop
or
cmc
cld
(bad)
lods
sahf
jmp
int
mov
dec
retf
inc
stos
xor
inc
and
sub
push
mov
pushf
dec
loopne
sub
test
dec
cmp
pop
sti
sub
jnp
dec
js
ins
test
imul
jne
dec
retf
xchg
dec
mov
imul
cs
adc
(bad)
fchs
ja
mov
adc
popf
mov
xor
dec
sub
jge
push
imul
xor
ret
test
das
sbb
sti
out
pushf
sbb
mov
and
sub
mov
shl
jle
mov
dec
call
sub
jne
(bad)
sub
test
pop
sbb
call
push
rcl
jo
cwde
data16
repnz
mov
es
jmp
movs
aad
imul
jb
cdq
sbb
ss
call
call
or
mov
push
gs
aad
xor
pop
mov
jecxz
dec
inc
je
adc
enter
cmp
cs
pop
push
pop
pop
jae
pop
jmp
mov
cmp
test
jno
fs
pop
add
mov
mov
cmp
pop
dec
cmp
fwait
repnz
jmp
into
(bad)
popf
mov
idiv
push
mov
or
or
std
push
dec
jno
(bad)
hlt
test
daa
sbb
adc
cmp
push
push
pushf
inc
adc
les
sbb
cli
into
clc
xchg
fild
or
popa
xchg
lods
push
daa
xchg
iret
cld
(bad)
fmul
call
and
push
test
adc
cmp
jmp
mov
push
push
push
xchg
mov
cmovle
sub
ins
xchg
ret
pop
pushf
inc
xchg
xchg
or
jp
stc
fst
lock
sbb
rcl
adc
scas
pop
inc
mov
mov
fsub
push
retf
add
or
xchg
retf
mov
icebp
mov
sti
xor
push
mov
xchg
sbb
fldcw
jge
fdiv
fisubr
call
dec
cmp
or
bound
jge
fild
lahf
and
mov
(bad)
mov
fucomip
loope
(bad)
pop
fsub
mov
ss
push
cwde
mov
ror
test
mov
dec
dec
lea
std
jmp
or
pop
sbb
sub
push
mov
pop
int
sub
movzx
jmp
jl
mov
jl
mov
jmp
push
jno
cs
sbb
test
add
cmp
cmc
stos
jno
mov
adc
scas
std
xacquire
popf
pop
enter
xchg
and
push
mov
stos
aam
mov
repnz
popa
xchg
outs
sub
and
pop
mov
ffree
sti
xor
loop
dec
leave
jle
sbb
sbb
xor
push
(bad)
int
mov
stos
(bad)
xor
mov
call
add
shr
das
adc
fild
neg
add
(bad)
pop
not
clc
imul
dec
test
call
sti
cld
jge
mov
and
mov
and
push
pop
rol
pop
dec
fiadd
xor
add
scas
out
xor
call
sub
fs
scas
ins
mov
xor
mov
aaa
ja
leave
mov
push
sub
repz
daa
xor
add
rol
mul
mov
cmps
data16
push
in
sti
mov
repz
in
icebp
out
aaa
loope
sbb
sub
mov
test
push
sbb
push
lock
add
sub
cmp
fld
cli
aad
sti
shl
(bad)
popa
push
cmp
rcr
mov
imul
rcr
mov
or
jb
pushf
rcr
pop
pop
jne
or
scas
sub
pop
sahf
dec
leave
lea
jle
lods
or
popf
test
jno
xchg
inc
call
or
sub
xchg
test
out
jne
sub
arpl
test
pushf
popa
test
or
pusha
lahf
lds
pop
fild
jae
loop
mov
jo
jnp
xor
dec
(bad)
lods
jp
or
jp
adc
dec
inc
sbb
xor
out
in
sub
mov
add
push
pop
lar
jo
inc
mov
sub
(bad)
xor
(bad)
cmp
inc
mov
(bad)
ja
mov
sbb
sub
gs
fisttp
sbb
adc
fbstp
or
and
xchg
aad
out
out
es
sbb
mov
or
test
or
daa
mov
mov
shl
movs
inc
not
dec
cmp
out
ret
mov
and
adc
xchg
in
sub
dec
bound
addr16
shr
stos
fisubr
daa
pop
leave
je
aas
test
rcl
imul
add
pop
cmp
arpl
mov
dec
ins
xchg
and
or
adc
bound
mov
xchg
dec
mov
ret
fild
bswap
cs
sbb
shl
add
(bad)
and
and
stos
hlt
mov
xor
jp
icebp
out
ss
rcl
in
cwde
sar
cwde
subps
add
jno
in
aam
ret
neg
xor
hlt
mov
push
scas
(bad)
in
jbe
lahf
jp
pop
pushf
lahf
inc
int3
jl
test
rcl
pop
push
int3
jb
sub
hlt
push
mov
out
push
pop
or
(bad)
cmp
aaa
stc
sahf
jno
wbinvd
shl
call
pop
mov
into
arpl
and
xchg
sbb
arpl
xlat
adc
push
test
cmp
es
lock
loopne
retf
movs
out
cs
mov
scas
shl
inc
fcomp
adc
lea
sub
sbb
into
adc
sub
push
ins
sbb
fsubr
sbb
mov
arpl
dec
enter
jae
leave
jbe
leave
jmp
popf
out
int
(bad)
dec
std
in
neg
movs
imul
lods
pop
push
test
xchg
push
dec
push
daa
lahf
sbb
mov
cli
call
xchg
or
pop
xchg
imul
fdivr
scas
test
shr
cdq
movs
mov
push
out
xchg
fld
xchg
add
mov
pop
push
sub
mov
fwait
call
dec
dec
test
adc
mov
fadd
leave
into
pop
dec
(bad)
mov
popf
js
pop
out
cmp
es
push
adc
jp
dec
push
sub
jno
test
dec
cmps
push
cli
push
cmps
aas
addr16
aam
inc
imul
or
xlat
and
movs
xchg
enter
test
sub
pop
fmulp
mov
mov
fimul
or
and
xchg
loop
jl
push
test
jnp
cmps
pop
mov
dec
mov
mov
or
push
add
or
movs
out
arpl
push
repz
cs
sbb
bound
sti
jno
stos
xor
aaa
pmaxsw
stc
sbb
mov
sub
aaa
push
push
call
repz
and
ins
or
jg
mov
mov
pop
xor
sbb
and
es
mov
out
imul
xor
loopne
cwde
inc
rol
outs
clc
cmp
sbb
pop
xchg
ret
mov
push
add
std
sbb
sbb
cs
movs
(bad)
xchg
ss
cwde
aam
scas
adc
pop
lea
xor
add
cmp
loop
popa
pop
mov
js
lock
repnz
(bad)
sub
jp
ds
jge
mov
aad
xchg
scas
jl
adc
jmp
mov
push
es
cld
xchg
xchg
mov
mov
jmp
out
jae
sub
dec
retf
stc
dec
or
scas
fmul
mov
pop
fwait
mov
cld
pop
lds
std
(bad)
outs
push
adc
outs
xor
pop
lds
call
jp
jbe
jns
sti
xlat
mov
loop
(bad)
lahf
fcom
arpl
and
push
sub
loope
xchg
test
jne
xchg
xchg
inc
dec
adc
jmp
inc
and
inc
popf
push
pop
cmc
clc
adc
push
out
clc
mov
or
adc
dec
repz
loopne
mov
adc
clc
mov
inc
fsubp
out
push
jnp
daa
mov
push
std
cmp
and
jns
cmps
sub
bound
pop
dec
imul
sbb
dec
fidiv
push
jge
clc
push
lock
es
mov
sub
movs
ins
dec
mov
ss
sbb
enter
xor
scas
mov
sbb
push
mov
(bad)
sti
imul
stos
sbb
fnstcw
add
ds
ins
ds
xchg
scas
fisubr
repnz
push
daa
das
arpl
cmp
jle
mov
jp
xchg
mov
xchg
push
jns
xor
js
hlt
aas
rcl
inc
fs
cdq
ss
mov
arpl
lock
hlt
sahf
repnz
xor
add
xor
push
pop
jl
jl
imul
jne
adc
movs
pop
sbb
sbb
adc
xchg
push
xor
mov
movs
sbb
gs
(bad)
add
mov
inc
add
ret
mov
sbb
adc
dec
xchg
adc
or
stos
(bad)
movs
xchg
in
hlt
repnz
(bad)
fdivr
sahf
ds
jbe
pusha
add
retf
mov
cmp
sbb
ins
scas
das
pop
cmp
cmp
or
ins
mov
jle
jae
push
xor
ret
idiv
loopne
lock
sub
dec
das
cld
jl
jns
adc
sbb
pop
sub
popf
lahf
mov
leave
adc
stos
mov
xor
in
mov
xchg
jl
adc
cli
or
fcmove
push
xor
ficomp
rcl
jne
xchg
lock
xor
xchg
pop
dec
add
mov
add
pop
aam
pop
jae
xchg
jecxz
pop
call
jle
(bad)
push
repz
rcl
inc
xchg
ins
test
call
pusha
and
push
nop
leave
call
xchg
call
ss
jnp
clc
lds
out
stc
mov
gs
sub
fdivr
and
scas
jns
cmc
adc
fdivp
outs
out
xchg
pusha
add
movs
sbb
jmp
and
push
mov
int
js
out
pop
popa
adc
outs
cli
mov
sub
sbb
jb
ja
jmp
push
and
repnz
mov
movs
scas
mov
ss
add
imul
cmp
jno
jl
or
jno
jo
xchg
scas
inc
push
xor
lahf
test
call
or
in
hlt
pop
stos
retf
setge
arpl
pop
mov
mov
loop
adc
jmp
mov
scas
inc
cmps
hlt
xor
and
xor
test
daa
(bad)
pusha
jl
push
jbe
scas
and
push
jecxz
and
out
push
loopne
cmps
inc
iret
pushf
movs
outs
call
cmc
fs
xor
sbb
rcr
and
xor
mov
push
int
jmp
inc
fild
mov
ins
mov
mov
xchg
repz
stos
(bad)
xor
not
push
cmc
inc
(bad)
jae
addr16
jne
ftst
aam
pop
inc
js
mov
push
cmps
sbb
cmp
jl
or
adc
clc
movs
mov
mov
(bad)
xor
cmp
cmp
push
mov
push
cmps
fwait
sbb
lods
lods
adc
mov
cmps
ret
mov
xor
icebp
je
ds
push
and
xchg
loop
ret
cld
mov
cmp
lods
loop
xchg
fwait
or
xchg
mov
lock
and
(bad)
(bad)
pop
int
in
mov
xor
pop
xchg
clc
pop
cmp
push
fidiv
xchg
rcr
fnstcw
cmp
hlt
jne
push
dec
loope
xor
xor
push
pop
stos
rcr
or
sub
out
mov
cmp
sub
in
je
jo
lea
mov
(bad)
pusha
ds
hlt
pop
cmp
fwait
sbb
pop
jge
xchg
pop
movs
push
in
popa
pusha
scas
inc
subps
int
mov
add
sar
xlat
cmps
sub
setnp
and
outs
xor
push
adc
in
or
dec
xchg
pop
out
fstp
xor
dec
mov
movs
ret
test
jmp
xchg
pop
pop
hlt
ins
jo
jle
add
dec
fstp
ja
pop
addr16
rcl
dec
aas
(bad)
test
add
inc
scas
(bad)
out
sbb
imul
popa
cmps
sar
xor
pusha
repz
jmp
pop
aam
scas
xor
cmps
and
adc
push
pop
stos
pop
add
(bad)
sub
mov
pushaw
test
jns
adc
xchg
xchg
sbb
jns
ror
ss
scas
mov
mov
add
test
cmp
cmp
pop
mov
test
jne
cmp
daa
dec
fild
stos
xchg
add
dec
cwde
stc
out
in
repz
ins
clc
xor
retf
dec
fs
jge
adc
mov
pop
aad
out
scas
or
cmp
icebp
xlat
inc
iret
in
dec
mov
pop
cdq
fild
sub
ret
loop
mov
sub
in
shl
(bad)
xchg
les
xor
stos
loop
mov
cli
mov
enter
add
out
or
push
call
xor
(bad)
mov
cmp
xor
push
and
fdiv
pop
dec
pusha
stc
inc
(bad)
or
hlt
fwait
stc
ds
imul
jg
cmps
mov
jno
xor
cmps
and
nop
sub
nop
cmp
mov
mov
jle
les
in
and
daa
sahf
mov
shl
enter
test
into
mov
pop
sbb
imul
fwait
call
pushf
nop
fdivr
(bad)
std
addr16
fild
neg
out
mov
scas
cmps
mov
jg
mov
adc
xor
adc
jmp
test
jp
jl
pusha
xchg
dec
inc
mov
outs
pop
xor
mov
std
lock
xor
push
and
dec
cmp
pop
neg
call
stos
aad
or
sbb
test
(bad)
jmp
outs
dec
(bad)
jmp
mov
test
jbe
mov
shl
adc
inc
loop
cmp
and
bound
aam
add
loopne
scas
pop
dec
and
inc
aam
gs
and
stos
mov
sub
test
shr
nop
daa
sub
pop
out
sti
pop
jo
test
stc
push
nop
sbb
pop
xor
sahf
and
mov
es
inc
sbb
in
sbb
cmp
daa
xchg
cmp
xchg
outs
xchg
jmp
in
xchg
xchg
or
ins
mov
mov
enter
pop
dec
mov
add
jmp
xchg
or
xlat
loop
jo
cmc
mov
xchg
sub
fisub
xchg
das
jle
adc
pop
sbb
test
(bad)
popf
sub
jbe
pop
movs
mov
cmp
sbb
mov
iret
(bad)
ins
add
mov
xor
mov
xor
sub
jo
repz
outs
or
or
inc
sub
cmp
or
xor
cmps
ret
rcl
adc
cmp
mov
movs
ja
cmp
outs
mov
pop
add
stos
push
and
xor
test
out
push
popf
je
jl
ss
js
retf
mov
dec
inc
cmps
and
add
xchg
and
sub
push
push
inc
(bad)
and
cmp
loope
fsub
test
out
pop
sbb
stc
iret
fistp
daa
pop
mov
lods
sub
mov
fiadd
cs
fistp
shl
dec
inc
retf
cmp
or
dec
sti
dec
fwait
sar
fs
or
pop
pusha
fwait
outs
jl
pop
mov
icebp
add
leave
es
sbb
add
adc
add
jmp
call
lock
inc
inc
ror
or
out
leave
add
neg
xor
and
popa
or
into
mov
mov
cs
adc
shl
inc
jl
cmp
hlt
(bad)
aam
aad
xchg
pop
mov
aas
imul
xor
scas
aad
dec
add
jle
into
fstp
jns
xlat
push
lods
mov
cmps
or
out
pushf
sbb
int3
shl
imul
or
dec
dec
retf
lds
(bad)
in
inc
clc
sub
mov
mov
mov
push
aam
cdq
aas
inc
xchg
pop
cmp
int3
cmc
dec
pop
out
push
repz
mov
test
(bad)
icebp
and
sbb
jns
sub
sbb
movs
xorps
sbb
sbb
movs
or
push
mov
aas
stc
jmp
ss
(bad)
dec
pop
sub
inc
pop
mov
push
aad
jae
mov
jl
mov
cmp
add
mov
mov
leave
xchg
icebp
shr
mov
push
adc
dec
sub
dec
pusha
dec
stos
sbb
add
in
leave
pop
movs
inc
call
inc
mov
mov
and
adc
out
and
jo
cmp
push
xchg
jecxz
xor
adc
call
mov
xor
lods
aas
movs
call
mov
dec
in
inc
vandnps
in
rcr
mov
inc
adc
js
ret
ret
or
pop
fs
mov
pop
mov
dec
mov
fild
adc
adc
mov
or
push
(bad)
mov
retf
jmp
xor
stos
sub
jo
cdq
cmp
add
inc
out
add
aam
in
jp
and
imul
push
ins
mov
jmp
out
xchg
js
xchg
mov
mov
test
mov
push
jge
aaa
mov
jecxz
pop
aad
retf
or
stos
add
sub
aam
lahf
sub
or
rcr
sbb
cmp
rol
test
mov
adc
div
jbe
in
mov
and
mov
icebp
cmc
fdiv
sbb
pop
pop
sub
pop
xchg
rcl
jno
lds
xchg
or
inc
mov
cmc
arpl
cmp
fmulp
data16
cmp
into
push
into
data16
cmp
sbb
fsub
ds
mov
cmp
xchg
adc
add
test
mov
xchg
cmp
dec
and
clc
inc
adc
(bad)
data16
adc
arpl
sbb
push
sbb
xor
js
fist
sahf
sub
repnz
ret
lea
dec
cmp
rcl
in
and
add
in
clc
stc
mov
sub
ds
dec
imul
push
push
sub
and
lahf
in
push
pop
jmp
xor
aaa
mov
jmp
inc
jb
xor
add
rcr
ror
aas
adc
data16
mov
xor
push
add
xchg
jg
push
sbb
xchg
lock
jae
mov
in
imul
xchg
shl
rol
es
setbe
adc
and
jge
pop
inc
out
jg
pop
xchg
or
call
in
sub
jmp
inc
push
fild
push
sbb
daa
jmp
aaa
xchg
jne
mov
ins
dec
inc
cmp
sbb
das
mov
dec
cmp
test
xor
push
mov
pop
shl
or
jmp
inc
inc
dec
sub
outs
sbb
add
mov
ja
sub
pop
fstp
mov
fmul
out
dec
sbb
repz
adc
xchg
rcl
jno
fnstcw
add
test
shl
inc
cmps
pushf
mov
pop
test
jbe
(bad)
out
jecxz
ins
add
dec
or
push
pop
xchg
fsub
(bad)
inc
cmps
cmps
and
or
std
sbb
mov
push
js
nop
jmp
pop
sub
fcom
mov
(bad)
jmp
cwde
push
adc
lods
dec
in
sbb
xor
or
jmp
lea
pusha
outs
adc
ss
xor
pop
pop
cld
sti
xlat
and
call
dec
pushf
leave
sub
iret
and
(bad)
nop
mov
mov
outs
in
stos
sti
mov
aas
cmp
mov
aam
dec
into
push
in
out
(bad)
out
das
xchg
lahf
push
jmp
fsubr
das
pop
fistp
or
add
popa
leave
cmp
neg
lods
aas
push
inc
test
dec
outs
es
adc
into
mov
push
sahf
push
ror
pop
mov
lock
pop
cmc
push
dec
hlt
aas
xor
add
rcl
mov
leave
mov
pop
push
stc
mov
inc
fs
pop
cmp
xchg
cli
adc
sub
and
or
mov
lods
sub
cmp
call
repz
and
movs
movs
and
mov
and
leave
sub
or
hlt
inc
cli
test
xchg
mov
pop
ficom
xchg
sub
out
jecxz
pop
cmp
lods
push
fstp
inc
inc
stos
hlt
cli
aaa
jns
sub
repz
jae
test
mov
scas
jecxz
mov
gs
icebp
ret
fdivp
mov
test
pop
aam
push
dec
rol
xor
test
aas
jecxz
or
fwait
nop
xchg
jmp
xor
div
mov
xchg
and
pop
pop
(bad)
jmp
or
cwde
enter
ins
out
pusha
in
lahf
push
int3
dec
xchg
cs
addr16
jp
inc
std
jno
iret
test
(bad)
cwde
sbb
adc
adc
and
cmp
mov
jl
sub
jmp
test
dec
cmp
add
mov
movs
cmp
(bad)
fcom
push
shr
cdq
adc
pusha
push
clc
movs
jns
pop
inc
sbb
inc
xlat
repz
xlat
repz
popa
xchg
frstpm(287
cmps
mov
ja
push
inc
jno
mov
into
push
push
jo
mov
loop
xchg
cs
(bad)
addr16
js
or
jb
inc
jb
std
retf
xor
mov
or
ss
adc
inc
pop
or
sbb
sbb
mov
repnz
sbb
scas
push
xchg
int
sti
xor
shl
jl
sbb
push
(bad)
shr
jmp
and
mov
pusha
add
add
ins
inc
mov
inc
sahf
lods
jnp
adc
inc
cwde
ds
mov
push
xchg
inc
push
and
add
and
push
add
sub
mov
enter
fistp
cmp
mov
imul
mov
call
ds
or
xchg
xlat
push
jp
add
sbb
or
xor
xchg
jns
stos
je
lods
sbb
add
fs
sbb
loope
jbe
cli
mov
faddp
shl
imul
xor
leave
mov
jae
push
ficomp
dec
xchg
inc
pop
neg
cdq
mov
(bad)
fld
mov
push
push
sub
pop
add
clc
pop
or
mov
mov
cmp
sti
xor
xchg
push
mov
imul
stos
cld
jp
(bad)
imul
icebp
sub
push
fdivr
popa
hlt
(bad)
push
xchg
in
into
mov
push
dec
mov
pop
add
in
cmp
push
fnsave
push
in
inc
loope
xchg
sub
xor
mov
mov
loop
lds
jle
ficomp
rep
test
adc
add
fstp
xchg
sbb
sub
inc
je
pand
repz
inc
inc
adc
(bad)
gs
ror
or
out
xchg
lods
sahf
xor
stos
adc
mov
pop
push
cli
mov
or
dec
int
out
mov
fwait
mov
out
push
mov
nop
mov
inc
xchg
mov
mov
lds
rcr
idiv
lods
xor
dec
loope
push
mov
jmp
mov
jl
mov
adc
mov
out
xor
mov
or
fdivrp
loop
add
fld
push
aaa
mov
repnz
lahf
loop
cmp
shl
pop
and
jb
or
fisttp
or
push
test
(bad)
push
daa
sti
aam
or
jmp
adc
arpl
and
mov
icebp
or
push
mov
sbb
or
jge
daa
and
xchg
mov
ins
jle
xor
mov
sti
or
daa
mov
lock
lahf
test
jp
mov
xlat
scas
div
mov
inc
ja
bound
retf
out
mov
adc
aad
add
in
push
daa
ret
add
rol
push
sub
stc
out
jne
add
push
and
std
add
and
push
scas
xchg
aad
pop
or
(bad)
out
xchg
fiadd
inc
cmp
jmp
out
in
std
ja
adc
jg
les
leave
leave
jg
ss
ret
dec
mov
pop
movs
shl
scas
xchg
jb
inc
call
fdiv
aaa
xchg
inc
out
inc
fdiv
cmp
gs
cmp
rcl
push
sbb
stos
in
in
xor
mov
loope
lea
loop
or
adc
xor
fsub
rol
add
or
cs
push
repnz
movs
or
dec
mov
aad
jl
hlt
fiadd
in
dec
ins
call
mov
cmp
mov
mov
push
cmps
ins
or
sub
cmp
sbb
loopne
pop
dec
stc
jnp
cmp
inc
pop
sbb
dec
mov
sub
(bad)
js
shl
jge
inc
push
ds
inc
dec
dec
adc
dec
mov
ins
jbe
fwait
jnp
mov
int
mov
dec
pop
ror
mov
push
data16
je
outs
xchg
adc
sub
cmp
push
jne
dec
(bad)
mov
aam
stos
hlt
aam
rol
xchg
scas
fstp
pop
nop
cwde
jecxz
add
xchg
sbb
fld
add
and
cmp
in
int
enter
fcomp
je
push
sub
mov
sub
pop
retf
jp
sbb
icebp
rcr
xlat
add
lahf
mov
mov
xchg
das
xchg
mov
imul
push
fsubr
out
pop
retf
adc
xchg
loop
fnstcw
sbb
pop
or
xchg
lods
outs
pop
pop
outs
dec
loope
sar
push
pop
xchg
push
pushf
push
jg
xor
cdq
fcomp
pop
(bad)
lds
dec
(bad)
add
sbb
bound
in
data16
addr16
popa
ja
push
mov
mov
push
add
add
adc
mov
xchg
mov
fwait
jp
pop
push
pop
mov
push
add
inc
or
loope
aas
inc
ss
mov
mov
cmp
xchg
clc
es
std
jnp
jno
mov
push
push
ror
nop
xchg
inc
inc
fstp
cmp
int
or
jne
inc
lods
pop
nop
sbb
xor
xor
sub
dec
out
shl
inc
sub
add
xor
mov
int
cdq
add
jmp
movs
xchg
cli
(bad)
lea
and
pushaw
pop
pop
push
pusha
dec
push
movs
jp
addr16
jg
out
int3
dec
sub
mov
movs
enter
jge
mov
fisttp
cmp
mov
xor
div
fld
fsubr
mov
fadd
jnp
or
loop
cmp
sbb
shl
in
pop
imul
and
mov
test
jno
pushf
mov
(bad)
mov
dec
jle
xchg
or
daa
pop
icebp
pop
aaa
pushf
pop
lock
jno
stc
sbb
outs
(bad)
cmp
inc
mov
out
jmp
add
sub
mov
mov
sbb
cmps
adc
xchg
sbb
or
icebp
loope
in
(bad)
adc
int
idiv
loop
push
sub
rol
dec
ficom
shl
xchg
and
sbb
xchg
push
scas
inc
in
jo
or
bound
or
jge
imul
iret
fnstsw
mov
mov
sub
or
das
iret
pop
xchg
pop
mov
repnz
iret
jae
dec
and
les
pop
push
cmp
ja
clc
cmp
mov
xchg
loope
gs
or
shl
mov
ds
in
fisubr
dec
xchg
fidiv
pop
loope
mov
clc
jb
xchg
mov
dec
outs
rol
and
mov
mov
xor
retf
sbb
daa
jae
push
loopne
push
xchg
mov
jp
pop
inc
push
outs
in
dec
into
call
dec
setbe
rcr
mov
movs
and
aaa
push
mov
iret
sub
cmovne
xchg
add
sbb
mov
int3
xchg
mov
dec
push
call
ret
xchg
aad
pop
aaa
movs
inc
icebp
sbb
dec
jnp
pop
xchg
mov
add
ret
out
popf
adc
pop
xor
inc
jbe
icebp
jno
pop
lods
inc
dec
pop
in
in
data16
out
or
enter
call
dec
test
mov
ds
mov
jmp
fldenv
xor
mov
pop
test
pop
stos
into
xchg
imul
mov
jo
sbb
vpcmpgtb
inc
cmc
out
mov
sbb
shl
ins
cdq
inc
loop
ds
sbb
std
call
push
(bad)
int
add
mov
aaa
ret
sub
dec
push
fidiv
mov
or
xor
in
cmps
jle
rcr
sbb
mov
adc
jmp
mov
scas
fwait
sbb
mov
and
jle
ins
repz
mov
pop
lods
retf
mov
sub
pop
pop
cmp
push
mov
mov
out
mov
fisub
or
daa
cmp
or
add
xchg
adc
out
fs
add
pop
sbb
(bad)
jg
ret
dec
fisubr
jns
repz
ret
js
xchg
lock
mov
bound
sub
out
mov
mov
es
les
fist
and
jmp
xor
sbb
ficomp
xor
call
cs
xor
pop
mov
lock
sbb
lods
xchg
sub
and
in
xor
jmp
mov
cmc
lea
scas
dec
fst
pop
adc
mov
into
ss
rcr
mov
fild
jle
(bad)
loope
cmp
adc
daa
mov
xchg
add
xor
movs
jo
sub
jb
popa
xor
ror
push
adc
add
xor
mov
test
pop
sbb
or
sub
jne
cli
xchg
push
mov
xchg
pop
retf
test
pop
aam
fstp
mov
(bad)
out
movs
push
inc
xchg
mov
add
mov
jecxz
jmp
adc
std
mov
gs
cmp
and
sbb
mov
popa
sub
jg
xchg
push
retf
mov
lock
mov
scas
xor
push
out
mov
aaa
sub
aas
or
dec
aad
dec
jb
mov
sbb
nop
jb
(bad)
fbld
push
shr
(bad)
adc
cs
and
jle
std
push
inc
aad
xor
jbe
ret
or
and
xor
push
cmc
mov
ins
inc
and
jo
ret
(bad)
add
jmp
fld
mov
cmc
addr16
mov
pusha
lds
in
xor
xor
outs
(bad)
aad
cmps
fbld
call
cmc
xchg
xchg
and
pop
in
sub
cld
push
aad
add
out
xchg
inc
push
loope
mov
mov
je
popa
sbb
xchg
test
mov
bound
jmp
mov
popa
sbb
inc
fdiv
out
sub
ins
scas
pushw
fnstenv
ret
sbb
and
repz
mov
rol
pusha
xor
imul
sbb
(bad)
sub
ja
js
push
push
xchg
in
push
inc
popa
sbb
ins
sbb
stos
icebp
fadd
leave
mov
push
stc
std
mov
imul
pop
loop
add
push
imul
mov
dec
add
and
mov
push
adc
cmps
lods
push
push
adc
jo
cs
xchg
mov
imul
push
lea
sahf
stc
xchg
jecxz
repz
(bad)
jns
adc
cmps
adc
in
es
xchg
push
aas
mov
sti
daa
std
jg
paddb
push
jb
add
(bad)
shl
sbb
pusha
inc
ss
push
jecxz
cmp
jnp
hlt
mov
jge
sahf
xchg
add
mov
retf
daa
fcom
mov
push
xchg
or
sti
inc
hlt
jnp
adc
cmp
js
cdq
ret
imul
(bad)
rcl
sub
(bad)
fisub
sahf
retf
pop
mov
dec
push
pusha
aam
xor
popa
cs
mov
sub
pop
xchg
imul
test
xchg
(bad)
pop
adc
shr
retf
icebp
inc
cmp
(bad)
push
cmc
pop
mov
inc
xor
pop
pusha
pushf
dec
aam
sub
enter
mov
int3
cmp
sbb
jbe
pusha
and
out
push
aas
cmp
cmp
push
cmp
sbb
pop
stc
fstp
mov
mov
dec
cwde
push
jmp
hlt
jecxz
xor
dec
and
(bad)
adc
xchg
mov
mov
and
adc
add
lock
cmp
out
mov
and
xor
push
mov
jmp
fmul
arpl
push
popf
and
push
cdq
jns
retf
mov
fdivp
jl
push
aas
fmul
ror
sub
dec
fwait
dec
ficomp
and
call
add
mov
xor
repz
mov
int3
dec
and
inc
call
push
sub
cmp
dec
mov
sbb
imul
xor
repz
cli
ss
jae
sbb
fucomi
inc
hlt
pop
push
out
jb
xor
and
aaa
fisubr
shl
dec
dec
cmp
xchg
popa
pushf
xchg
icebp
add
mov
lea
fwait
jmp
retf
push
dec
cmp
jae
(bad)
pop
shl
inc
pop
push
add
imul
rcl
adc
and
imul
addr16
push
mov
in
sub
sahf
dec
std
dec
push
push
mov
mov
dec
(bad)
jg
test
std
and
js
cs
mov
bound
add
mov
fwait
adc
mov
ds
inc
out
pop
ret
jecxz
addr16
(bad)
mov
jge
nop
repz
push
mov
mov
fidivr
push
xchg
push
jno
xor
cs
and
and
jmp
and
push
(bad)
popf
icebp
ret
inc
pop
cmp
pop
cmps
shl
xchg
pop
dec
sub
dec
out
add
ins
aad
cmp
xchg
add
test
cmp
mov
shr
sub
sbb
scas
loopne
test
sub
cmc
std
rcr
ret
cmp
add
call
rcl
sbb
mov
dec
fisubr
xchg
jecxz
mov
add
adc
and
aad
pop
ret
clc
jae
rep
out
adc
out
dec
add
xor
in
mov
sbb
fsub
add
(bad)
ins
int3
add
ret
inc
mov
dec
pop
push
adc
pop
clc
call
idiv
sub
out
cmp
jno
ret
mov
enter
es
jg
inc
mov
call
cmps
arpl
or
jp
or
push
fstp
je
xchg
(bad)
jne
pushf
or
xchg
aas
jp
ret
data16
add
dec
xor
jnp
push
imul
js
mov
in
movs
aad
test
push
pop
dec
mov
inc
fnstenv
fbstp
(bad)
jno
inc
cld
sbb
popa
and
xchg
mov
into
dec
stos
cs
call
pop
push
sbb
xlat
aam
sub
jno
rcl
pop
sub
inc
jae
in
rol
and
and
xchg
cdq
test
(bad)
cld
pop
mov
jle
loop
or
jns
or
cli
imul
push
xchg
in
cmp
sbb
jecxz
movs
add
fst
pop
aaa
aam
aas
hlt
icebp
inc
sbb
mov
mov
and
js
stos
jp
push
push
ret
hlt
and
test
in
mov
xor
test
ret
mov
mov
fwait
jl
and
pop
sub
movs
sbb
inc
xchg
fnstsw
jge
push
xchg
or
cmp
mov
lods
out
pop
mov
and
mov
div
lds
daa
bound
jo
mov
push
mov
iret
rol
pop
mov
enter
ins
retf
xor
fist
rcl
xchg
shr
outs
and
ds
inc
adc
and
xchg
sbb
repz
inc
mov
das
and
mov
cs
xchg
inc
jns
test
and
sbb
push
sbb
(bad)
mov
cmp
outs
pop
iret
xor
cmps
cmp
(bad)
imul
loope
dec
add
(bad)
repz
and
loopne
mov
cmp
xchg
jg
dec
sub
stos
mov
cmp
mov
add
inc
sbb
(bad)
push
jecxz
push
push
jecxz
es
sbb
jge
(bad)
(bad)
xor
hlt
mov
jne
retf
cs
cli
out
out
xchg
test
mov
pop
(bad)
jae
fdiv
push
out
push
es
mov
jne
test
mov
imul
in
call
out
dec
jo
aaa
xchg
push
and
adc
jnp
ds
in
and
jno
repz
mov
inc
sub
call
mov
jo
not
int
sub
jne
call
dec
cs
int
test
mov
mov
pop
xchg
and
js
repnz
xchg
retf
xor
div
repz
dec
int
dec
jno
gs
call
sub
pop
push
lds
dec
mov
rcl
mov
or
mov
aaa
arpl
pusha
push
or
movs
mov
push
sbb
dec
je
lock
and
sub
push
mov
sub
int
xchg
js
fwait
mov
push
outs
mov
addr16
jmp
fs
scas
push
dec
test
test
mov
mov
popf
sub
and
ret
xchg
cmp
fs
pop
pop
and
adc
in
adc
ins
xchg
jmp
call
hlt
xor
mov
lahf
push
neg
cmps
mov
push
shl
(bad)
hlt
cmp
xchg
cmps
sub
sub
xchg
dec
jnp
xor
movs
fistp
fist
enter
push
out
jo
sbb
adc
fisubr
push
inc
jg
xor
lahf
fs
inc
outs
shl
enter
jp
mov
lahf
loop
push
inc
add
push
std
fmul
mov
data16
adc
cmc
cmp
jge
mov
lahf
add
pop
jmp
add
xchg
stos
xor
sti
(bad)
retf
mov
jge
dec
mov
jge
cli
popa
mov
in
(bad)
lods
and
pop
push
ja
jo
sti
jmp
icebp
pextrw
xchg
cwde
inc
(bad)
call
aaa
push
dec
sub
aad
retf
mov
(bad)
jae
pop
(bad)
mov
or
and
(bad)
dec
sub
les
jns
cwde
ins
push
cmp
adc
sub
pop
out
ret
jmp
jo
aaa
clc
ror
into
inc
jle
out
call
leave
test
cli
push
into
ja
push
dec
stos
pop
or
lahf
jb
push
mov
sbb
adc
adc
dec
fstp
sbb
(bad)
and
movs
retf
jmp
mov
jnp
add
or
mov
cmp
mov
pop
lock
add
cmp
fstp
xchg
dec
sub
push
or
or
cld
aad
in
add
sbb
cwde
and
sub
pusha
mov
mov
inc
rcl
jo
sahf
arpl
mov
inc
pop
xor
push
cmps
add
repnz
inc
sbb
fidiv
fidiv
lea
leave
mov
jne
dec
push
or
fwait
cmp
sar
adc
inc
cwde
push
movs
in
adc
jo
dec
pop
adc
arpl
popf
sbb
aas
ret
jecxz
push
adc
inc
cmp
je
ss
arpl
push
fidiv
pop
xor
jle
cwde
retf
xchg
xchg
jne
mov
inc
sbb
ins
imul
(bad)
cdq
mov
sub
sar
xchg
out
mov
push
std
mov
push
out
and
pop
xor
iret
mov
stos
mov
in
ror
push
mov
fwait
ror
sub
mov
jb
(bad)
retf
push
bound
or
out
push
and
or
(bad)
es
adc
popa
xor
mov
or
(bad)
pop
xchg
rcr
adc
dec
mov
jno
std
mov
ret
shr
aad
mov
jge
push
mov
fwait
and
xchg
adc
out
arpl
cwde
fcomp
xchg
mov
(bad)
and
ror
ss
adc
cs
or
test
dec
and
mov
adc
and
dec
inc
jne
dec
adc
inc
mov
pushf
add
cmp
ins
pop
mov
adc
jecxz
or
pop
xor
add
ror
jbe
dec
adc
iret
ret
sub
and
mov
and
imul
loopne
pop
test
mov
mov
jecxz
loopne
jmp
cli
adc
xchg
add
aam
add
mov
cmp
dec
int3
or
(bad)
mov
sahf
mov
fcom
push
fdiv
add
push
pop
pushf
hlt
aas
cmp
sbb
push
loop
push
mov
and
jae
cdq
add
push
sar
cdq
out
mov
pop
mov
std
dec
les
fstp
xchg
data16
pop
scas
mov
hlt
or
mov
dec
push
jae
dec
out
sub
sahf
adc
jp
xchg
repz
mov
and
punpckldq
ja
inc
dec
cmp
imul
lods
lahf
es
frstor
loopne
daa
addr16
pop
repz
or
pop
push
mov
xchg
stc
ret
xchg
pop
xor
push
push
(bad)
cmp
outs
repnz
xchg
js
(bad)
sub
ret
outs
sbb
jp
sahf
cli
mov
out
and
mov
inc
push
push
shl
inc
addr16
aaa
pop
js
mov
int3
sbb
mov
xchg
fld
adc
clc
or
push
jecxz
xor
adc
or
pop
test
mov
xchg
rcl
mov
repz
or
(bad)
xchg
xor
add
cmp
gs
mov
nop
sbb
lock
aaa
or
add
dec
adc
cdq
sub
xchg
add
cmps
xor
mov
retf
sbb
nop
sbb
(bad)
out
(bad)
xor
repnz
sub
mov
popf
add
rol
jo
dec
xchg
scas
(bad)
ins
xlat
loope
daa
cdq
add
sbb
mov
sbb
mov
and
daa
push
jo
mov
ins
gs
fld
xlat
cwde
jmp
retf
or
fidivr
ret
push
or
mov
mov
xchg
repnz
sub
shr
pop
push
pop
int
enter
cmc
ret
jl
sub
push
out
xor
sbb
jae
ds
ds
cmp
(bad)
movs
xchg
jp
ror
and
loop
fcmovnb
mov
push
retf
in
in
push
daa
hlt
popf
mov
xor
call
fwait
pushf
xchg
push
inc
adc
inc
mov
jns
test
fs
int3
int3
cmc
scas
pop
adc
sub
out
in
mov
cwde
fbstp
cmp
aad
xor
or
add
adc
mov
mov
retf
cwde
dec
inc
xor
int3
mov
jmp
loope
cwde
fwait
aam
jbe
into
les
pop
retw
push
(bad)
or
ja
sub
int3
push
xchg
addr16
jle
shr
adc
pop
icebp
shl
jge
call
not
jmp
jne
xchg
hlt
jno
push
fst
bound
jno
(bad)
out
(bad)
sbb
mov
sahf
mov
mov
gs
mov
test
(bad)
xchg
(bad)
and
loop
xchg
cli
nop
jg
arpl
xchg
mov
inc
hlt
mov
loope
push
pop
push
inc
xchg
ss
mov
shl
loopne
xor
pop
mov
jmp
inc
sbb
outs
in
jge
jmp
inc
out
jno
call
(bad)
fiadd
les
in
retf
arpl
ins
pop
inc
sub
cmp
or
lahf
jbe
dec
iret
mov
je
popf
adc
mov
pushf
mov
cmp
loop
sub
add
add
sar
idiv
rcr
xor
inc
fld
adc
mov
in
push
rol
jmp
ins
shl
shr
leave
jp
mov
jmp
xor
sub
je
rol
mov
sub
and
mov
scas
mov
adc
imul
mov
int3
in
popa
inc
adc
mov
ins
aas
jp
xchg
outs
jle
sar
cmp
shr
xor
dec
stos
cdq
in
mov
cmp
shr
add
jo
cmp
stos
div
and
mov
jmp
jns
dec
pop
out
shl
pop
outs
cld
mov
in
mov
mov
add
pop
sbb
outs
test
push
push
fsubrp
pusha
mov
daa
pusha
inc
imul
adc
dec
aad
pop
and
imul
mov
fucomip
or
pop
retf
jle
jne
jmp
clc
outs
lea
inc
xlat
mov
pshufw
dec
idiv
jp
hlt
jbe
lahf
lock
out
mov
dec
jmp
lock
loop
inc
int
sbb
add
test
inc
jno
js
xchg
mov
inc
out
xchg
mov
outs
jns
jecxz
add
jbe
sbb
mov
aam
test
xchg
in
nop
sti
jp
lea
cmps
push
sbb
fisub
inc
adc
loopne
ret
std
(bad)
inc
jb
scas
sbb
sub
cmps
dec
jl
mov
out
ja
shl
sbb
out
imul
aas
or
fdivr
push
inc
adc
push
xchg
inc
and
cmp
sbb
and
popf
aad
shr
stc
test
push
add
aaa
test
shl
cld
cld
or
jbe
jp
push
(bad)
mov
xor
sbb
popa
jmp
push
das
imul
ret
mov
ins
or
bound
mov
iret
repnz
mov
push
stos
leave
test
rol
pusha
cwde
pop
or
lea
cmp
stc
jmp
icebp
inc
int
sbb
shl
dec
stos
stos
jl
inc
xchg
pop
xchg
cdq
dec
mov
sbb
fbstp
mov
fimul
xor
cmp
outs
loop
push
inc
fcomp
jns
xor
imul
xchg
inc
ret
aad
jae
sbb
cmp
fldenv
int3
dec
jno
dec
add
mov
xchg
in
push
xchg
sbb
sub
fdivr
fcompp
js
or
sar
dec
lock
xchg
or
ffree
sub
sbb
mov
and
or
das
ins
xchg
in
sub
ss
cli
mov
sub
sbb
gs
stos
out
fs
fidiv
pop
add
sub
vpmaddwd
sbb
arpl
mov
dec
or
or
loope
jo
cmp
fstp
cmps
xchg
inc
and
jnp
cdq
mov
pushf
push
mov
jno
jg
cmp
(bad)
pop
jecxz
test
out
inc
(bad)
cmp
ss
data16
push
std
mov
jo
ret
scas
pop
(bad)
fist
xchg
int3
inc
ror
(bad)
(bad)
xchg
and
sub
test
push
xchg
push
push
test
jg
lods
jns
(bad)
gs
mov
mov
xor
(bad)
pop
xor
movs
andps
adc
dec
sbb
inc
popa
aam
sbb
jb
icebp
and
lock
movs
int
and
mov
sbb
hlt
sub
dec
mov
mov
adc
ins
xlat
movs
dec
fsubr
mov
cli
out
jno
ss
push
fld
adc
aas
(bad)
jge
sub
sub
dec
shl
and
sbb
sub
mov
push
xchg
je
rsqrtps
mov
jge
mov
rcr
inc
push
add
cmp
cdq
fisub
jmp
add
dec
adc
stos
mov
xchg
aas
out
or
out
cmp
mov
sbb
dec
cmps
test
inc
leave
add
ror
push
ret
in
setbe
jbe
cmp
movs
push
or
sti
xor
jo
dec
test
loopne
(bad)
icebp
js
call
sbb
or
(bad)
clc
mov
aas
(bad)
sbb
loope
clc
in
and
lds
frstor
mov
or
sbb
jp
xchg
je
dec
mov
push
cdq
xchg
push
fsub
cmps
cli
cs
and
jge
mov
sbb
push
mov
pop
mov
or
jnp
(bad)
adc
movs
bound
ins
mov
dec
mov
loopne
mov
cmp
mov
or
loope
cld
inc
xlat
mov
inc
push
inc
pop
or
pop
repz
mov
sub
jmp
in
mov
cmps
int
fcomp
xlat
inc
jae
mov
ret
dec
movs
inc
or
rol
mov
and
cmp
and
push
(bad)
push
icebp
dec
mov
sbb
lods
jmp
jo
jo
inc
jae
loop
push
shr
in
ja
sub
mov
cmp
inc
mov
sar
movs
ret
inc
mov
ret
iret
outs
dec
jne
aas
pop
jl
mov
repnz
daa
or
(bad)
lock
cld
and
xchg
dec
(bad)
ret
inc
repz
scas
pop
fs
jne
sbb
dec
pop
mov
pop
outs
in
loop
inc
and
and
fdiv
in
rcr
jo
xchg
mov
inc
adc
mov
imul
jecxz
arpl
pop
xor
mov
(bad)
enter
and
icebp
xchg
add
retf
push
clc
pop
push
pop
jmp
aad
js
dec
push
add
test
mov
imul
loop
lods
cli
mov
xchg
(bad)
push
and
aaa
xchg
mov
inc
fild
xchg
out
sar
xor
xchg
xchg
fs
aas
and
mov
or
test
ror
inc
jno
imul
or
or
fst
les
outs
arpl
or
js
mov
xchg
ins
jo
adc
mov
sub
popf
and
and
vorps
jmp
or
xor
sub
mov
scas
xchg
cmc
loop
sub
pop
push
pop
xor
add
cld
ja
inc
jp
js
repz
(bad)
outs
inc
retf
mov
pop
xor
lea
imul
pusha
cmp
and
cmc
push
xchg
int3
adc
(bad)
loop
imul
mov
(bad)
mov
retf
mov
ja
and
scas
ja
daa
ficomp
sbb
sub
mov
mov
mov
dec
jae
adc
mov
pushf
sbb
scas
repnz
stos
mov
movs
add
iret
ficomp
mov
cmps
jmp
or
(bad)
mov
ficomp
repnz
xchg
rol
add
or
lock
movs
cwde
std
add
jno
cmp
jns
(bad)
xor
clc
sub
push
sbb
shr
xor
jo
jge
test
push
loopne
mov
bound
xchg
xchg
les
push
movs
addr16
out
xor
mov
ret
mov
push
fnstsw
mov
cmc
pop
mov
add
(bad)
hlt
mov
addr16
in
sub
inc
or
push
jl
sub
lods
mov
cmps
cmps
xchg
mov
mov
mov
imul
test
cmp
pop
outs
jbe
stc
mul
jb
std
mov
in
push
xor
pop
lock
mov
into
fmul
sub
js
arpl
push
scas
ror
push
jb
mov
ins
xchg
xchg
xchg
pop
inc
xor
and
lock
out
ins
mov
cmp
mov
jbe
mov
add
dec
aas
xor
mov
(bad)
mov
aas
and
push
stos
out
push
imul
sub
cmp
not
je
and
in
inc
fistp
lea
xchg
fistp
jo
test
pop
mov
sahf
lahf
jne
jg
jns
xchg
pop
and
sub
mov
mov
shr
mov
test
xor
xchg
add
(bad)
fwait
(bad)
lods
jne
cmp
and
dec
or
xor
sbb
adc
or
cmp
pop
mov
out
jg
out
mov
mov
rol
add
addr16
add
cmp
repz
or
ret
push
cmp
sbb
pop
push
and
loop
shl
and
bound
and
cmp
ret
imul
push
and
sbb
ja
(bad)
std
nop
sub
in
pop
inc
add
(bad)
xor
mov
pop
xor
mov
test
lods
inc
pop
hlt
out
test
test
inc
fs
dec
test
xor
dec
push
inc
push
pop
and
sub
push
fidiv
inc
test
mov
retf
dec
rcr
fimul
rcl
imul
push
jp
(bad)
xlat
sub
imul
or
jns
aad
and
xor
mov
sbb
mov
xor
out
dec
fwait
mov
(bad)
xlat
xchg
and
loop
push
add
cmp
sahf
inc
or
xor
push
jecxz
cmp
jmp
push
jmp
repnz
loop
fs
lahf
inc
push
stos
push
jg
xor
mov
cmp
xor
xchg
in
iret
pop
and
and
add
rcr
add
stc
lock
mov
and
xor
jo
sbb
pop
jge
pop
or
sbb
call
retf
sub
pop
pusha
xor
adc
jno
fs
mov
(bad)
jmp
dec
jecxz
xchg
sbb
rol
push
outs
dec
std
loop
push
mov
and
xchg
arpl
(bad)
test
in
push
mov
cmp
aad
inc
scas
push
dec
inc
jae
dec
(bad)
lods
push
xor
ds
lea
jle
jne
pop
mov
fcmovu
xor
mov
mov
sub
iret
add
xchg
xchg
icebp
int
movs
push
sub
mov
dec
and
mov
push
movs
pop
fwait
inc
mov
or
push
mov
push
cmp
lea
inc
mov
jne
fbld
xor
push
sub
mov
xchg
add
pop
sub
mov
cmp
ins
hlt
ss
and
mov
fnstcw
repnz
jns
or
not
sbb
mov
cmps
add
or
xchg
or
(bad)
js
jp
mov
xchg
push
data16
and
lahf
test
mov
adc
out
ret
popf
in
inc
adc
or
xor
pushf
js
shl
fstp
cmp
loopne
or
xchg
pop
or
push
adc
lock
jecxz
sbb
sub
int3
xor
xchg
je
scas
jle
sub
jnp
inc
(bad)
push
mov
add
pop
(bad)
cmp
mov
add
mov
sbb
or
cmps
mov
cmp
lds
scas
hlt
jns
sub
arpl
pop
fisub
div
lea
add
sbb
ror
test
mov
sub
ret
cwde
stc
push
push
loopne
(bad)
mov
mov
(bad)
xlat
or
test
sbb
jb
ja
in
loop
movs
dec
ja
cmp
push
push
cmp
or
clc
mov
and
xchg
lea
dec
mov
push
xchg
enter
fisttp
push
dec
scas
xchg
int3
push
data16
fldenv
cmp
sub
std
dec
inc
sbb
test
ins
fcmovb
inc
test
ficomp
out
data16
ret
fdiv
js
or
cmc
xor
lea
dec
jae
lea
mov
les
aad
push
push
ret
push
lds
and
aam
sbb
fimul
test
jmp
mov
mov
sbb
shl
inc
call
test
repnz
cmp
in
pop
and
xor
push
xor
add
dec
stos
dec
leave
aas
in
mov
add
push
mov
jmp
enter
or
push
inc
push
cmp
push
rcl
mov
jecxz
cmps
mov
fnstenv
lds
test
daa
or
pop
adc
or
out
leave
mov
in
adc
test
clc
out
stos
daa
cmp
inc
pop
mov
aaa
push
iret
sbb
call
div
(bad)
jno
inc
test
loop
pop
ss
lock
outs
xchg
arpl
sub
loopne
mov
push
adc
je
hlt
mov
loopne
gs
cdq
jecxz
xchg
pop
cmps
push
(bad)
in
lods
ss
leave
sub
xchg
call
mov
xchg
dec
leave
jno
(bad)
mov
pop
call
jnp
pop
sbb
pop
enter
or
fdiv
cmp
fucom
jnp
jne
lock
adc
sub
(bad)
call
js
in
sbb
and
adc
xchg
lods
fisttp
and
(bad)
xor
popf
and
fwait
pop
add
jne
pushf
or
mov
lods
ins
out
enter
mov
add
or
cmp
sbb
test
inc
jo
adc
bound
sar
cmps
xchg
clc
test
and
push
sub
xor
lock
and
stc
mov
sub
rol
or
std
loopne
jbe
(bad)
or
fiadd
mov
clc
out
fisttp
push
not
test
adc
gs
ret
sbb
fnstsw
dec
cmps
and
(bad)
add
aaa
xchg
in
xor
or
adc
mov
bound
pop
(bad)
into
les
xchg
arpl
cmc
sbb
loop
aaa
mov
pushf
xchg
clc
push
aam
jmp
sub
daa
push
or
adc
pop
dec
ja
adc
repz
in
mov
loop
lods
retf
mov
addr16
xchg
dec
sub
mov
call
das
or
jge
(bad)
popf
clc
cmp
mov
int3
mov
dec
fwait
cmp
sbb
(bad)
gs
(bad)
xor
(bad)
fiadd
sub
ret
daa
ficomp
jge
je
sbb
mov
stos
mov
ins
lods
(bad)
xor
xchg
cmps
div
inc
fdivr
mov
jmp
sti
pop
fmul
sbb
jmp
fist
add
scas
mov
gs
cmp
ins
xchg
shl
fisttp
aad
push
and
in
aam
mov
push
pop
dec
loope
or
imul
hlt
push
jmp
add
js
add
cmps
and
sbb
and
push
iret
cmps
inc
loopne
mov
loopne
cwde
cmp
mov
dec
sahf
or
and
dec
leave
pop
cmp
rcl
or
leave
push
je
fadd
sti
sti
cmp
mov
icebp
sbb
jb
xor
cld
mov
add
or
aas
(bad)
scas
hlt
in
push
daa
cmp
test
iret
cmp
lods
stc
int3
and
push
mov
pop
push
add
mov
dec
inc
ja
mov
sub
lock
pop
jae
xchg
and
mov
sti
repnz
mov
or
pop
int
push
push
test
mov
nop
add
xor
pop
aad
mov
imul
push
sbb
js
adc
cli
dec
aad
cdq
nop
(bad)
xchg
mov
dec
sar
or
loop
cmp
xchg
(bad)
retf
leave
icebp
pop
xchg
cld
cmp
or
inc
scas
pop
xchg
and
retf
and
scas
popa
je
call
push
jb
mov
test
jecxz
pop
cmp
(bad)
das
iret
icebp
xchg
scas
cs
pop
scas
pop
dec
inc
test
and
lds
mov
adc
and
outs
pop
popf
shr
add
int
jle
aad
jmp
leave
jb
sti
retf
adc
mov
jg
addr16
and
je
stc
or
cdq
aad
or
mov
popa
mov
mov
xlat
outs
outs
std
movs
jb
ss
mov
cmps
dec
adc
loop
push
fs
push
and
pusha
nop
jecxz
movs
push
push
sbb
sbb
xchg
dec
mov
cmp
mov
cld
fstp
push
xchg
pop
jo
std
nop
pop
cmps
movs
mov
sub
or
je
sbb
lds
dec
enter
sbb
jmp
loop
jmp
dec
hlt
lahf
cmp
xchg
add
xor
mov
mov
orps
push
mov
mov
mov
aaa
dec
push
and
rcl
push
aam
ins
lods
out
cmp
add
popf
or
push
xor
push
pop
xchg
ins
stos
inc
dec
jmp
jo
repnz
mov
xor
xchg
jbe
jmp
inc
(bad)
out
mov
jmp
xor
les
retf
jl
add
push
pop
and
movs
dec
xor
jp
push
xor
xor
jae
test
pop
or
mov
pop
sub
jp
adc
pop
les
pop
int
loopne
movs
mov
add
pop
mov
mov
es
push
push
pop
cmp
mov
sbb
pushf
imul
push
push
sbb
es
xchg
mov
sti
mov
pop
add
xor
pop
jmp
cmps
fsub
repz
mov
jg
pop
or
mov
mov
iret
(bad)
cmc
jle
imul
push
push
pop
adc
sbb
stos
adc
mov
sti
xchg
movs
adc
dec
mov
sbb
mov
std
or
in
(bad)
fld
pop
sar
mov
call
add
push
in
mov
retf
ja
fld
sar
aas
stos
retf
leave
mov
stos
test
addr16
cld
xchg
cld
pop
dec
push
cmp
clc
sbb
sbb
xor
shl
je
rol
jmp
add
outs
lods
mov
jo
jecxz
retf
push
xchg
ins
ss
daa
stos
xchg
jmp
in
lds
retf
test
mov
repz
push
fidivr
mov
inc
ret
icebp
sti
scas
loope
add
push
jae
sub
adc
aad
out
sub
mov
cwde
rol
retf
inc
jg
or
mov
pop
inc
dec
fistp
lods
cmp
jno
pushf
mov
dec
stos
in
mov
push
pop
push
push
aad
std
jno
cmp
jl
push
(bad)
jle
ds
and
(bad)
call
mov
sub
mov
jnp
leave
push
cmp
(bad)
add
cmc
xchg
sbb
scas
or
in
push
bound
lahf
shl
jb
push
xchg
retf
stos
sub
les
push
nop
punpcklbw
test
(bad)
ficomp
xor
jb
sub
xchg
in
add
add
xchg
sbb
enter
jno
jno
cmps
dec
dec
cdq
pusha
adc
xchg
lods
into
fwait
cmp
dec
inc
inc
(bad)
sub
sbb
jmp
xchg
xlat
hlt
pop
xchg
scas
dec
push
push
sti
sub
inc
adc
aam
cmp
inc
cmps
neg
ss
pop
imul
fldenv
lahf
addr16
std
lock
imul
mov
mov
fwait
sub
cmp
mov
adc
inc
xchg
cmp
loope
stos
xchg
(bad)
mov
imul
cdq
jno
ins
mov
push
mov
mov
enter
add
nop
int
inc
popa
jnp
rcl
les
or
and
sub
pop
test
adc
inc
cmp
lods
in
loopne
adc
sub
mov
std
sub
fistp
inc
mov
scas
popa
repz
hlt
inc
les
push
les
pusha
icebp
inc
inc
mov
mov
sbb
fcomp
fisubr
cs
arpl
cwde
pop
mov
mov
inc
fnstenv
sub
rcr
retf
dec
outs
movs
rcr
and
mov
ds
fs
inc
ins
inc
add
aam
in
popa
ficomp
xor
in
mov
outs
mov
je
jb
je
icebp
imul
movs
sti
mov
call
in
stos
xlat
sbb
scas
stos
or
dec
rol
or
les
sub
cmp
adc
imul
rcl
mov
xor
stc
sbb
jmp
leave
mov
add
sbb
cmp
pop
fsub
and
xor
in
cmp
scas
xchg
inc
dec
(bad)
daa
nop
popa
xlat
leave
clc
xor
xchg
pusha
cwde
mov
jp
mov
and
sub
cmps
ret
mov
push
cwde
pop
popf
lods
(bad)
fcomp
and
imul
dec
pop
jae
mov
aaa
push
fistp
push
addr16
adc
stos
sub
dec
cmp
cmp
and
fisttp
shr
fild
clc
movs
xor
xor
pop
popa
and
xchg
and
inc
mov
adc
xchg
imul
fs
pop
cmp
enter
inc
sahf
push
imul
adc
pop
sahf
mov
xor
mov
add
aas
js
ins
xchg
out
(bad)
in
adc
test
pop
adc
dec
sbb
aad
cli
gs
or
push
ins
(bad)
pop
xor
push
enter
jmp
xor
or
lock
cmp
movs
sahf
es
or
or
xor
jmp
test
push
mov
pusha
retf
xchg
mov
out
inc
lds
js
sub
out
rcr
cmp
mov
xor
xchg
mov
xor
leave
pop
(bad)
xor
ss
mov
xor
hlt
jae
pop
ror
fmul
popf
lods
sahf
aam
push
addr16
jbe
je
bound
fwait
xor
into
pop
mov
bound
sbb
and
cmp
sub
dec
mov
mov
loope
stos
adc
cmp
ficomp
cs
inc
outs
mov
dec
cs
shl
mov
push
fucomp
jb
wbinvd
pop
test
pop
inc
std
aas
hlt
mov
movs
add
out
das
lea
dec
add
inc
sbb
sub
not
out
jne
scas
loopne
inc
addr16
retf
or
and
mov
mov
jnp
and
xchg
fs
and
xchg
test
repz
push
pop
push
aas
jmp
xlat
cmp
push
jb
ins
out
les
arpl
cmps
push
jno
mov
mov
daa
cmp
stc
jmp
push
cdq
mov
lock
mov
xor
call
nop
repz
push
bound
mov
push
psllq
or
mov
pop
or
jge
ret
adc
add
jmp
aad
push
cmp
les
cmp
jbe
test
jmp
mov
retf
movs
or
mov
cmps
push
mov
mov
jp
mov
jle
sub
ficom
std
call
bound
mov
adc
inc
push
mov
fisttp
fimul
push
or
movs
std
out
out
and
lds
int3
xchg
jb
clc
pop
jae
adc
pushf
mov
mov
in
sbb
(bad)
pop
sar
push
imul
and
out
(bad)
aad
push
out
std
mov
in
pop
nop
fs
aas
push
icebp
test
repz
jmp
cmp
ret
mov
movs
das
cmps
popa
xchg
shl
ret
movs
je
adc
sbb
gs
int3
and
fisub
xchg
jmp
call
cli
or
jmp
xor
xchg
sar
retf
loopne
push
pop
ror
neg
adc
inc
add
add
shl
fidiv
dec
jecxz
mov
int
jns
sbb
dec
inc
pop
icebp
mov
ret
test
mov
pop
cmp
xchg
fmul
movs
es
fstp
pop
jp
and
aas
sub
inc
lods
movs
pusha
and
add
int
movs
sub
and
fincstp
(bad)
adc
fdivr
push
or
outs
es
lea
rcl
pop
in
rcl
push
pop
push
xlat
push
pop
(bad)
aad
pushf
push
iret
cmp
in
cmps
jmp
into
mov
test
jmp
sub
pop
pop
addr16
push
pop
cmp
and
in
mov
scas
retf
rcr
jg
sar
loop
cmp
inc
or
out
lods
dec
sub
ret
and
mov
push
clc
jno
and
fst
loopne
mov
into
inc
arpl
lods
xor
std
cli
sub
mov
xchg
jmp
mov
mov
test
popf
bswap
dec
movs
test
in
imul
(bad)
ins
sub
jb
pop
ror
fild
sub
fmul
sbb
ror
aad
cdq
mov
sbb
jae
les
mov
inc
cmps
mov
push
xor
jno
outs
jg
das
jle
xchg
sbb
scas
fstp
movs
shr
jne
cld
mov
or
pushf
test
in
sbb
das
fnstenv
mov
push
stc
sub
lods
mov
fld
data16
xchg
inc
ds
dec
aad
cmp
(bad)
enter
movs
push
mov
xor
jnp
pop
data16
push
and
std
push
gs
mov
dec
in
push
push
jb
jmp
in
and
xlat
repz
pop
xor
inc
retf
aad
mov
mov
add
sbb
push
and
sbb
inc
sub
aad
or
sbb
arpl
(bad)
adc
dec
push
push
fadd
sub
mov
add
adc
imul
out
aas
xchg
enter
jb
mov
inc
cmc
aas
mov
(bad)
cmp
jmp
outs
pop
scas
dec
mov
cmps
mov
stos
or
push
xchg
aam
push
inc
daa
push
sbb
bnd
cmp
js
and
inc
mov
(bad)
cmp
inc
mov
lods
dec
or
mov
xchg
out
xchg
ret
sub
into
test
jl
in
mov
addr16
jnp
ds
pop
and
mov
inc
pusha
xor
sbb
scas
adc
rol
out
dec
lock
sbb
cmp
lock
or
and
jnp
sub
inc
push
add
xchg
fiadd
push
fsubp
(bad)
dec
adc
std
retf
int
pop
cmc
mov
cmps
retf
loope
and
int
and
enter
fnstsw
cmps
call
test
js
(bad)
cli
sub
jle
not
mov
movs
(bad)
cs
scas
cmp
jbe
push
cmp
mov
xlat
mov
pushf
fcmovb
call
leave
lahf
fcom
test
jge
(bad)
in
jnp
ficomp
push
xchg
sub
push
adc
int3
test
mov
sub
aaa
or
and
icebp
js
adc
mov
aam
ins
mov
mov
mov
push
retf
loope
sbb
and
test
or
push
arpl
mov
aaa
and
xchg
adc
sbb
bnd
mov
daa
gs
push
out
je
xchg
mov
pop
xchg
hlt
jmp
push
mov
sbb
dec
fldlg2
jbe
aad
stos
sub
int3
addr16
mov
lods
jl
mov
push
in
js
jge
iret
jle
ds
or
mov
test
out
frstor
stos
push
std
movs
shr
fbstp
mul
daa
push
mov
inc
xor
jmp
xchg
nop
scas
ins
sbb
mov
mov
loope
and
add
mov
(bad)
fadd
int3
ret
xor
xchg
or
jmp
ja
ret
adc
ror
jae
clc
jbe
add
cwde
addr16
dec
jae
retf
dec
push
mov
(bad)
retf
(bad)
rol
rcr
sahf
fwait
js
stos
hlt
ins
add
test
sar
not
fidiv
into
dec
xor
fnstcw
sti
(bad)
sub
icebp
cmp
push
xchg
dec
xchg
sbb
psubq
pop
fbstp
cmp
mov
jmp
push
push
xchg
sub
jge
mov
push
repz
sbb
and
int3
clc
push
dec
or
cmps
ror
add
addr16
sub
in
rcr
xchg
sbb
lgs
cld
loope
shl
fs
ins
sub
loopne
cs
std
hlt
dec
leave
rol
pop
std
mov
inc
cld
fs
and
iret
je
jae
add
add
aam
das
fisub
inc
xor
rcl
adc
ss
jnp
ja
repz
mov
inc
adc
sub
jno
in
ret
add
jle
iret
push
ins
jmp
pop
das
fcomp
mov
inc
aas
dec
mov
pop
add
ss
fisttp
inc
das
lds
das
(bad)
jb
xor
xor
push
mov
out
ins
jnp
popf
rcl
mov
das
dec
in
cmp
out
jbe
inc
aam
adc
retf
ret
arpl
add
fwait
cmc
lds
lahf
loop
sub
daa
xchg
les
inc
or
and
lds
jp
inc
imul
jl
xor
rol
retf
xchg
neg
or
clc
fst
out
loopne
popf
bound
sbb
shl
call
pop
jb
adc
adc
in
adc
lods
fild
mov
sar
pop
icebp
wrmsr
cmps
pusha
push
sbb
fcmovnb
cmp
cmp
push
stos
pop
cmps
xchg
push
dec
repnz
mov
adc
inc
adc
outs
shr
adc
xor
inc
stc
jae
pop
mov
imul
nop
jmp
jmp
cmps
out
sbb
push
push
nop
and
push
in
and
or
sahf
mul
iret
cs
out
inc
rcr
dec
push
std
xchg
adc
adc
stos
mov
ret
icebp
fisub
mov
fisttp
inc
pop
fist
pop
loope
lahf
inc
dec
adc
je
dec
dec
pop
out
aaa
fsubr
or
mov
lea
fwait
daa
dec
cld
nop
stc
mov
lahf
pop
add
int3
pop
inc
jns
inc
xor
std
push
sub
es
(bad)
push
xchg
scas
dec
lock
add
pop
ret
ficomp
not
sub
popf
ficom
and
mov
push
jecxz
sbb
mov
sbb
adc
hlt
jbe
jne
sbb
mov
mov
lods
xor
cmp
pusha
and
push
mov
bound
sbb
push
in
xor
push
cmp
or
div
dec
sub
(bad)
mov
in
inc
(bad)
cmp
into
add
test
pop
jmp
jmp
retf
arpl
cmp
xchg
inc
jp
mov
fsincos
push
push
retf
popf
lea
mov
pop
loop
sub
pop
daa
or
(bad)
test
mov
xchg
movs
leave
cmc
sub
cmp
leave
jmp
and
sbb
mov
ins
dec
cli
adc
test
stos
inc
int
or
or
and
aad
dec
and
cdq
cmp
(bad)
call
mov
dec
pop
fistp
ret
stc
adc
inc
push
mov
sbb
add
xchg
mov
cmp
mov
ror
add
popf
push
or
fsubr
test
pop
es
cmp
shr
jl
outs
mov
and
movs
retf
cld
jmp
mov
ds
data16
aad
xchg
or
inc
repz
test
xchg
pusha
inc
out
cmp
fadd
adc
inc
sub
jp
adc
jle
arpl
enter
push
sub
ss
cmp
dec
test
adc
sbb
xor
inc
cmp
je
ins
jge
mov
adc
call
in
xor
jl
bound
loop
ins
jbe
pusha
xor
push
in
fld
sti
sub
or
xchg
dec
popa
add
inc
dec
jno
push
movs
in
in
movs
push
fbld
mov
dec
add
sahf
and
sahf
push
cmp
mov
hlt
jge
out
ins
mul
mov
add
pop
cmp
sbb
retf
popa
mov
fs
or
dec
in
dec
fisubr
repz
mov
jge
sub
(bad)
rep
outs
lods
out
clc
pop
mov
mov
sub
sub
xchg
cmp
inc
add
dec
(bad)
mov
nop
push
and
pop
(bad)
pop
xor
xor
popa
jmp
inc
enter
jecxz
not
fdivr
xchg
and
test
ja
pop
jns
adc
sub
call
fwait
ins
mov
popf
xor
inc
mov
cmps
jae
(bad)
paddd
popf
out
pop
mov
push
es
ins
jmp
ins
sbb
jge
(bad)
fisub
test
mov
fimul
adc
(bad)
xchg
xor
and
sbb
rdmsr
out
jo
sbb
ret
sar
add
dec
or
cdq
jns
rcr
xchg
inc
lods
in
ret
gs
and
movs
repnz
(bad)
add
cmps
jp
inc
rol
inc
test
out
movs
pop
sbb
mov
lock
stos
push
jae
popa
ret
les
repnz
clc
out
in
jecxz
add
test
scas
push
xor
and
pop
add
jmp
and
and
je
div
add
rol
loop
test
pop
or
into
sub
in
push
dec
inc
or
(bad)
sbb
pop
pop
retf
pop
jns
stc
xchg
mov
pushf
ret
jbe
cs
mov
xchg
in
add
(bad)
xor
out
dec
mov
cmp
mov
adc
cmc
aam
or
sub
push
(bad)
mov
mov
aad
cdq
mov
pop
fwait
sub
shr
mov
mov
dec
xor
out
mov
mov
test
inc
pop
mov
ja
bound
mov
popf
pop
jecxz
pop
daa
fsub
inc
dec
scas
xchg
iret
loopne
adc
ins
add
jmp
imul
xchg
hlt
mul
xor
sub
mov
inc
jne
nop
das
repnz
jcxz
cdq
sbb
pushf
stos
hlt
(bad)
sbb
push
cmp
sbb
add
and
inc
mov
scas
icebp
or
xchg
icebp
push
push
iret
inc
mov
and
fnstenv
jmp
sbb
jnp
movs
cdq
mov
jns
push
jnp
fnstenv
fist
lahf
dec
jnp
aad
pop
test
inc
stos
popa
and
aam
cmp
xchg
and
ss
ins
xchg
fisubr
xchg
adc
adc
xchg
cmps
jmp
pop
out
push
cvttps2pi
mov
retf
mov
cmp
sar
xchg
cdq
push
je
clc
cmp
jmp
or
fisubr
sub
shl
and
ins
fiadd
xchg
jecxz
idiv
hlt
mov
das
fisub
add
enter
loope
fldlg2
push
and
lods
pop
test
call
or
cmp
jno
xchg
mov
(bad)
popf
push
push
xchg
push
push
adc
call
inc
data16
aad
and
shl
dec
push
sub
jmp
push
or
cwde
lock
cmp
sbb
sahf
les
bound
add
sbb
and
daa
movzx
sbb
add
test
jae
xor
pslld
push
int3
sub
ficom
mov
loopne
jmp
stc
jno
mov
in
pop
dec
sbb
les
jmp
(bad)
jecxz
pop
neg
fnstcw
cmps
(bad)
fisub
dec
xor
fwait
cli
clc
mov
dec
call
movs
cdq
sub
mov
inc
popf
mov
add
adc
popa
push
xchg
sbb
icebp
push
mov
jnp
mov
pop
mov
ss
push
sti
xchg
xor
shl
(bad)
mov
cmp
pop
sub
mov
dec
sub
and
arpl
cmp
add
add
pop
sbb
mov
mov
repz
sahf
loopne
mov
jmp
stos
out
push
scas
(bad)
scas
iret
movs
cmp
pushf
jae
scas
and
std
inc
mov
retf
stc
adc
cmp
add
sub
mov
cwde
inc
sub
mov
mov
call
adc
push
xchg
fild
add
pop
in
inc
repnz
mov
push
dec
(bad)
popa
es
gs
push
pop
test
dec
pop
or
fdivr
cmp
xchg
mov
push
push
jl
dec
dec
data16
fwait
in
fisubr
clc
(bad)
mov
dec
mov
loopne
jnp
fidiv
sub
dec
movs
dec
jae
leave
mov
inc
call
and
movs
ss
inc
fxch
xchg
shl
adc
ror
cmps
mov
xchg
popw
pop
fwait
dec
adc
sti
sbb
mov
inc
mov
lea
retf
xor
mov
daa
push
movs
dec
fist
sub
inc
sbb
iret
pop
dec
call
(bad)
popf
enter
xor
adc
and
mov
push
mov
or
mov
fldenv
sub
inc
pushf
xchg
mov
(bad)
inc
retf
jmp
push
mov
das
xchg
mov
inc
cmp
adc
push
mov
jo
iret
cmc
mov
push
sbb
(bad)
jp
mov
adc
mov
stos
or
jne
call
ror
and
adc
inc
js
aas
ss
xor
nop
clc
push
jmp
test
mov
adc
fsubr
and
movs
outs
xlat
mov
jnp
ror
js
mov
emms
mov
pop
fbld
(bad)
int
jecxz
lea
inc
jnp
arpl
icebp
fs
lods
cmp
in
or
push
xor
mov
cli
cwde
aaa
pop
mov
stos
aas
js
fwait
jg
sub
xchg
sar
aas
jne
push
pusha
pop
(bad)
push
idiv
jb
sub
imul
inc
popa
(bad)
inc
pop
push
mov
pop
es
stc
out
add
aas
and
fild
in
dec
adc
and
pmaddwd
js
mov
jns
mov
iret
mov
in
xor
sbb
pop
pop
sar
pop
sbb
shr
loopne
jecxz
mov
adc
dec
lods
ins
cld
repz
sar
xor
fbstp
jb
xchg
std
retf
add
pop
ds
mov
rcpps
lock
out
test
mov
pop
scas
dec
imul
push
pop
std
jg
push
lahf
pop
xchg
test
dec
dec
push
sub
mov
cmp
xor
xchg
movs
test
dec
stos
rol
mov
sbb
push
xor
lods
stos
sub
xor
cmp
inc
lahf
xlat
fist
lods
cmp
fst
and
(bad)
stos
or
fwait
shr
xor
ja
stc
call
cmp
(bad)
loopne
mov
out
mov
jae
retf
push
mov
jmp
in
push
xchg
pop
sbb
inc
fwait
mov
push
daa
sub
mov
frstor
xchg
addr16
cmp
dec
jb
test
sub
scas
xchg
mov
je
out
aam
sbb
or
and
inc
stos
xor
popa
mov
popf
mov
mov
enter
add
hlt
leave
mov
fbld
and
fsubr
or
jl
pop
cmp
sub
jge
jle
sahf
(bad)
xor
xchg
jo
mov
int
cmp
out
xchg
dec
aas
inc
(bad)
ret
in
xchg
mov
push
mov
push
jo
xchg
jb
dec
test
fidiv
add
fmulp
lahf
fidivr
mov
cld
push
add
fisub
(bad)
into
push
push
nop
ret
pop
sahf
cld
mov
push
adc
mov
pop
xor
add
push
inc
lods
push
mov
push
jns
jmp
and
and
addr16
ja
jl
sbb
ds
mov
popf
inc
mov
xchg
or
fwait
div
mov
pop
ins
ret
cmp
dec
pop
das
ins
and
mov
aas
ins
add
fdivrp
cld
sbb
and
dec
movs
pusha
jmp
aaa
setnp
mov
sbb
leave
pop
jmp
jmp
stos
inc
push
ins
repz
out
sbb
pop
push
xor
xor
(bad)
sti
mov
sub
sub
sbb
pcmpeqd
mov
movs
adc
or
sahf
scas
and
push
push
mov
add
(bad)
cwde
xor
xlat
retf
add
popa
(bad)
cdq
icebp
gs
bound
push
mov
shl
inc
call
pushf
xchg
fcmovu
jp
dec
push
or
retf
mov
push
fcomp
stos
sub
adc
movs
call
(bad)
adc
fs
pop
das
(bad)
(bad)
or
stc
test
cmc
push
mov
jns
repnz
iret
jbe
inc
mov
repz
add
cwde
jle
(bad)
out
(bad)
and
ror
lahf
cmp
xor
cmp
movs
pop
movs
inc
cld
mov
mov
mov
mov
ins
outs
mov
imul
adc
mov
pop
ds
mov
mov
pop
sbb
je
add
fild
sbb
mov
xchg
cdq
out
lods
push
sub
mov
xchg
lods
repnz
mov
enter
scas
les
jmp
daa
add
cdq
std
cdq
add
inc
inc
scas
movs
and
cwde
ret
std
stos
repz
jp
jns
clc
mov
pop
loopne
sub
std
xor
bound
mov
inc
fcomp
test
sbb
add
daa
pop
lods
repz
dec
pop
jno
je
(bad)
frstor
or
(bad)
lods
dec
dec
jle
xchg
mov
push
adc
(bad)
loop
or
fnstenv
inc
mov
jnp
fcomp
popf
fnstenv
dec
pop
and
or
fnstcw
xchg
sbb
sub
adc
pop
inc
and
mov
adc
(bad)
hlt
fild
cwde
pop
dec
ja
test
mov
into
scas
(bad)
ins
(bad)
cmc
push
dec
into
sub
xchg
mov
mul
(bad)
mov
cli
or
in
jmp
adc
xor
imul
int3
popa
adc
(bad)
xchg
push
push
ins
or
sub
cmps
(bad)
lock
add
lock
stc
and
cmp
ss
(bad)
popf
cdq
add
jbe
movs
dec
pop
mov
mov
and
std
pop
mov
xchg
imul
aam
xchg
sbb
adc
pop
push
shl
inc
xor
cs
adc
aam
sbb
pop
push
pop
xchg
mov
data16
cld
pop
outs
push
call
push
daa
cli
mov
jecxz
fild
and
call
push
inc
pushf
in
sub
and
mov
pop
cmp
retf
shr
push
dec
push
in
add
jl
test
shr
retf
test
mov
scas
jne
mov
sbb
inc
retf
pop
repz
cli
adc
pop
mov
xchg
fst
fmul
dec
jp
mov
jns
xchg
stos
loop
add
(bad)
pop
vandps
mov
aad
pusha
iret
es
retf
cwde
mov
stos
ins
inc
pop
aas
es
test
nop
out
ret
adc
add
xor
stc
pcmpgtw
cli
mov
cmps
adc
push
ud0
push
imul
fsubr
dec
xor
push
sub
nop
mov
sahf
lods
call
sar
les
arpl
retf
fidiv
mov
xor
cmp
push
lods
jecxz
pop
dec
pop
loope
sub
dec
sti
(bad)
fidivr
clc
inc
xchg
dec
je
test
gs
mov
test
xor
dec
sbb
dec
push
jle
dec
sbb
pop
inc
push
int3
cmps
push
pop
or
int3
xor
movs
inc
leave
jecxz
call
daa
xchg
mov
xor
test
sahf
call
mov
push
sub
retf
cs
mov
inc
bound
(bad)
js
stos
inc
std
and
push
out
jne
mov
or
lods
xchg
xor
ins
(bad)
mov
jno
or
inc
xor
lock
adc
adc
in
aas
jno
(bad)
call
mov
jmp
std
ficomp
add
leave
rcr
jge
push
fidivr
mov
gs
daa
nop
repz
mov
pusha
mov
sub
sti
add
into
sar
into
gs
sub
arpl
mov
mov
lahf
xor
mov
fld
jge
es
aam
push
dec
fsubr
int3
add
sub
inc
mov
cmps
jns
retf
aad
(bad)
js
enter
cwde
push
arpl
lods
inc
add
dec
pop
inc
push
xchg
es
pop
xor
push
mov
inc
ffree
pop
mov
xchg
sbb
stc
mov
jmp
out
inc
sbb
scas
add
es
add
loopne
std
mov
xchg
jp
mov
stos
movs
cs
dec
mov
pop
push
sub
mov
iret
jmp
inc
loopne
cmp
sbb
mov
(bad)
sub
ins
hlt
lock
cld
out
xlat
xchg
add
add
and
cdq
sar
rol
ins
pop
fcom
mov
pop
add
and
cmp
(bad)
add
(bad)
pop
pop
ret
in
cmp
in
inc
aaa
and
mov
or
cli
add
movs
cmp
ror
lahf
inc
mov
jg
in
outs
cwde
retf
ret
test
jmp
or
repz
es
daa
std
int3
pop
test
add
cmp
adc
fisub
stc
xchg
adc
shl
sub
test
fstp
out
pop
ror
or
push
mov
mov
fisub
imul
out
dec
int
push
packsswb
enter
adc
inc
call
test
inc
push
out
clc
jae
xor
push
in
movs
mov
mul
jp
arpl
jns
jecxz
add
enter
call
sub
popf
xchg
or
fistp
ror
jge
popa
add
inc
(bad)
xchg
or
xchg
rcr
mov
push
lods
push
mov
enter
adc
push
mov
bound
mov
add
mov
jmp
in
(bad)
sbb
stos
mov
das
mov
cdq
sub
xor
jae
mov
pop
and
sbb
dec
test
ret
adc
dec
mov
and
or
loope
rcr
xchg
gs
sbb
xchg
inc
cmps
(bad)
sbb
loop
movs
outs
xor
bndldx
mov
cmp
sbb
mov
xchg
repnz
test
or
movs
xor
call
mov
daa
out
push
or
cmp
(bad)
and
je
scas
pop
jo
push
mov
inc
sbb
jbe
xor
push
mov
xchg
push
test
neg
adc
and
mov
mov
mov
ss
jmp
mov
cmp
mov
xor
adc
ja
imul
and
or
loopne
sbb
pusha
adc
cmp
jno
push
mov
sbb
add
outs
mov
adc
adc
mov
in
jnp
xor
add
das
addr16
ret
loope
leave
pop
std
push
mov
es
push
popf
lds
xchg
dec
ret
mov
pop
push
lods
les
fistp
inc
int3
mov
mov
and
int
push
mov
mov
add
lahf
and
sub
arpl
mov
and
out
mov
add
ficomp
in
sub
adc
sub
add
jnp
rcl
or
mov
adc
(bad)
(bad)
mov
mov
shr
xchg
stc
ss
mov
or
pop
sbb
ds
sti
cmps
loop
mov
and
inc
and
adc
sub
nop
les
adc
(bad)
cli
cmp
jb
push
xchg
iret
add
cld
xchg
add
cmps
cmps
xchg
cld
mov
arpl
imul
dec
sub
(bad)
push
xchg
pop
mov
xlat
pop
cmp
cmp
mov
(bad)
cli
(bad)
les
jmp
dec
cli
sti
loopne
leave
mov
jl
inc
jo
into
inc
adc
(bad)
jl
push
cmp
das
inc
mov
ror
popf
jbe
daa
sub
jle
mov
retf
rcr
test
mov
bound
scas
cmp
loope
out
lahf
add
or
js
jle
push
sub
int
dec
pop
xchg
das
mov
jmp
rep
shr
xchg
sar
jbe
scas
cwde
cli
sbb
into
hlt
push
aad
mov
fwait
popf
pop
cmp
test
or
inc
cli
or
cmps
mov
and
or
dec
sti
inc
push
jbe
loop
int3
mov
pop
dec
fsubr
icebp
fdivr
repz
mov
xor
jae
ja
inc
adc
ret
push
std
jecxz
scas
sbb
leave
adc
cmp
mov
fadd
mov
mov
(bad)
cmps
dec
or
das
add
xchg
or
(bad)
adc
scas
inc
lahf
sbb
iret
inc
in
dec
sub
sbb
jo
test
xchg
enter
imul
sub
mov
inc
clc
(bad)
fimul
xchg
dec
aas
cmps
test
inc
adc
jo
ret
aam
js
mov
adc
shl
aas
ror
add
pusha
test
out
jmp
test
add
stos
jae
aad
out
add
cmp
adc
aas
test
or
pop
pop
fcom
jmp
idiv
popf
je
jo
repz
pop
xchg
push
popf
in
lahf
pushf
ins
into
add
xor
sti
ss
pop
mov
or
mov
outs
movs
jl
out
stos
mov
and
pop
xchg
inc
mov
xchg
xchg
push
inc
mov
ficomp
mov
jg
scas
idiv
add
cmc
adc
fcom
mov
cwde
outs
mov
cdq
nop
inc
mov
lahf
mov
cmps
xor
ja
xchg
dec
pop
cmp
(bad)
cli
in
fucomp
xor
into
and
or
pop
xor
or
call
sub
push
sti
movs
scas
adc
pop
pop
add
pop
ins
add
xor
sbb
sti
ficom
in
aam
or
loopne
fdiv
fistp
not
push
(bad)
in
aad
mul
jp
sub
push
sar
xchg
push
daa
fisubr
scas
les
mov
shl
sub
mov
push
int
aam
ins
or
xchg
jo
pushf
cmp
fild
int
mov
pop
sbb
sti
enter
aas
mov
addr16
cmp
inc
call
out
inc
not
xchg
test
mov
ins
fldenv
sub
sbb
inc
sub
imul
call
test
fwait
mov
loop
and
test
or
inc
push
(bad)
int
lahf
mov
into
mov
pop
xchg
push
xchg
pop
mov
push
bound
dec
(bad)
outs
sar
xchg
adc
aaa
dec
ss
ds
int
in
xor
and
xchg
imul
lea
test
out
(bad)
cld
mov
arpl
mov
in
ins
hlt
test
lock
xor
or
fst
lock
stos
shl
sub
test
and
gs
(bad)
jne
cwde
(bad)
xor
pop
(bad)
push
test
call
xor
xchg
cwde
xchg
clc
mov
sub
fimul
mov
xor
mov
push
push
sub
scas
xchg
stos
push
and
add
or
or
dec
cld
push
pop
xchg
push
call
sahf
mov
mov
in
jns
push
dec
leave
mov
in
lock
fwait
xor
xchg
lea
out
or
or
arpl
adc
or
neg
int
sbb
not
ins
dec
pop
out
(bad)
dec
(bad)
jecxz
and
and
iret
call
push
adc
retf
sahf
xlat
loopne
stos
adc
test
mov
mov
js
pop
push
jne
enter
xor
mov
mov
mov
push
cmc
call
cs
push
dec
cmp
xchg
pop
stc
push
sub
fstp
jns
aas
cdq
add
xor
jae
xchg
les
repnz
inc
cwde
mov
call
xor
add
scas
adc
sbb
cmps
jbe
jns
in
mov
jno
dec
cmp
and
repz
mov
push
loope
rol
ins
or
cs
into
cmp
pop
jno
mov
loope
mov
dec
pop
in
jmp
mov
push
call
inc
inc
xchg
jno
call
cmp
fstp
push
xor
loop
into
mov
out
movs
cmp
jae
loope
xchg
push
fwait
mov
cmp
mov
xor
int3
adc
xor
rcr
push
cmp
loope
shl
sbb
mov
sub
inc
out
rol
test
mov
mov
leave
loope
daa
mov
jp
mov
jmp
push
pop
xor
mov
add
cld
xor
sub
imul
or
adc
cld
ret
push
jmp
loop
je
sub
icebp
in
mov
retf
push
push
fdivr
arpl
test
pop
enter
pop
and
inc
imul
push
mov
(bad)
out
popf
pop
and
jno
test
bound
inc
mov
retf
les
movs
sub
out
mov
(bad)
cmps
test
push
ins
adc
les
add
push
adc
pushf
mov
push
push
dec
cmc
imul
fwait
cmp
cwde
cmp
inc
xor
mov
push
jmp
add
xor
pop
cld
adc
push
lahf
mov
fld
mov
adc
ds
in
inc
and
mov
adc
xlat
fidiv
nop
ss
jo
mov
sbb
add
mov
loope
arpl
mov
gs
cmc
ja
and
add
addr16
daa
pop
ja
jbe
retf
jnp
loop
iret
retf
test
pop
cmps
out
addr16
or
add
adc
mov
jns
dec
cmp
nop
mov
daa
cmp
dec
jl
jle
mov
cmp
addr16
or
lods
mov
sbb
jge
ficom
gs
pop
xor
pop
xlat
mov
and
sar
mov
mov
sub
jne
add
and
xchg
sahf
arpl
in
mov
xchg
push
xchg
xchg
js
shl
sbb
bound
xor
mov
cs
cwde
jecxz
out
push
mov
outs
pushf
imul
or
xor
out
cmp
xor
pop
sbb
or
push
or
shr
js
cmp
aaa
push
ficomp
mov
fadd
jp
and
pop
shl
mov
nop
in
scas
xchg
test
test
es
les
dec
add
pop
aas
push
rcr
mov
aad
mov
fsubr
mov
push
push
pop
push
jo
test
stos
xchg
js
dec
sti
retf
sub
mov
jne
loope
inc
in
jmp
loope
dec
daa
retf
into
push
(bad)
push
aad
and
sbb
jae
push
push
ins
pop
or
cli
shl
add
sbb
lea
out
(bad)
push
jne
jecxz
in
mov
pop
push
(bad)
xchg
(bad)
repz
lea
int3
mov
jg
jle
pop
out
mov
add
mov
movs
xchg
jge
popf
test
(bad)
or
sbb
jmp
pop
push
xchg
ins
cwde
jmp
mov
pop
xor
jmp
jle
aam
sbb
jne
jle
daa
xchg
repnz
adc
xchg
fsubp
repz
adc
jne
xor
mov
arpl
push
adc
sti
and
sti
shl
mov
inc
xchg
mov
retf
inc
jnp
(bad)
icebp
dec
call
inc
jo
jb
pop
inc
aad
shl
loopne
and
stos
sbb
and
dec
arpl
les
pop
pushf
dec
repnz
stos
retf
push
sbb
mov
loop
xchg
sbb
fdivr
mov
pop
in
ins
imul
stos
iret
jg
iret
dec
mov
and
fistp
mov
mov
push
xchg
mov
mov
and
in
fldenv
push
repnz
sub
popf
imul
fldcw
ins
push
test
push
or
das
(bad)
cmp
repnz
sbb
lahf
xor
xchg
data16
push
ror
mov
inc
fimul
(bad)
cmp
imul
dec
inc
push
pusha
sub
add
hlt
and
mov
imul
jbe
cmp
cmp
stc
test
inc
xor
jae
dec
xchg
or
(bad)
adc
or
or
xchg
jo
or
pop
xchg
mov
inc
xchg
and
cmps
jmp
ja
push
les
xor
and
inc
daa
push
shl
and
sub
jl
xchg
xchg
push
jo
ss
inc
xchg
stc
enter
push
dec
fld
mov
jge
test
es
ins
repz
cld
in
or
stos
xor
and
inc
loop
cmp
and
mov
movs
imul
xlat
or
iret
mov
out
call
mov
jnp
fwait
in
mov
pusha
pushf
cwde
gs
daa
fsub
xchg
mov
nop
ror
mov
(bad)
adc
aaa
aad
xor
cmp
fwait
pop
xchg
xchg
sub
mov
xchg
push
(bad)
pop
cmc
les
call
sbb
popa
dec
imul
sub
inc
jno
jnp
xchg
xchg
movs
lea
scas
xchg
mov
retf
bound
xchg
mov
push
test
inc
mov
inc
scas
sub
push
xchg
and
sub
mov
cmp
inc
or
inc
not
xor
cdq
cld
mov
retf
outs
(bad)
inc
pop
popa
lea
sub
clc
mov
sahf
daa
cs
enter
out
shr
mov
jo
stos
(bad)
fdiv
fist
pop
rol
cli
out
xchg
fs
jmp
inc
(bad)
hlt
jle
icebp
ja
cmp
mov
mov
not
lea
push
lea
(bad)
int3
add
mov
adc
aaa
fcom
(bad)
repz
pop
sbb
popf
js
rol
jge
fsubr
sub
sbb
mov
xchg
pop
pop
inc
cmps
pop
xchg
in
out
lods
iret
aaa
fs
es
add
cmc
lods
add
or
movnti
cmps
repnz
ja
inc
mov
jp
arpl
pop
add
lds
cli
add
sub
pop
icebp
dec
outs
add
mov
mov
fsub
icebp
add
and
jne
rol
jl
xchg
dec
pop
mov
sbb
mov
xchg
and
xchg
lea
ror
pop
jmp
push
sti
sub
ss
stos
fcom
(bad)
(bad)
xchg
mov
mov
push
repnz
fimul
ja
aad
(bad)
cmps
in
aaa
sub
push
pop
stos
into
xor
adc
jno
vpaddsw
lods
test
shl
sbb
adc
ficomp
loopne
outs
pop
adc
mov
add
xchg
fnstsw
jge
ds
pop
ins
pusha
mov
push
dec
jge
mov
rol
sti
or
shl
pusha
xchg
scas
adc
mov
call
xchg
ss
mov
push
and
hlt
jmp
xchg
xor
into
push
into
sbb
popa
ja
pushf
fmul
pop
push
mov
scas
and
shr
xor
stos
jl
xchg
jae
push
xchg
and
(bad)
fcmovbe
es
in
popf
mov
js
retf
aad
sbb
lahf
jle
test
popa
hlt
fisubr
lods
mov
fisub
jge
mov
scas
cmc
jmp
dec
cmc
call
add
call
add
cmc
xor
add
adc
jp
repz
fisubr
and
and
ret
xchg
lds
push
add
or
push
mov
icebp
nop
sbb
sub
add
test
jecxz
les
pop
out
add
and
enter
jae
jp
sahf
idiv
jg
xchg
sbb
pushf
xlat
mov
dec
pop
pop
xchg
nop
aas
pop
loope
and
adc
inc
fadd
mov
jmp
push
int3
xor
push
dec
xchg
fs
daa
call
cmp
ret
jo
lock
inc
imul
inc
inc
or
push
ds
push
and
dec
sub
sbb
das
inc
aad
popa
pop
jge
(bad)
test
std
das
in
add
icebp
or
adc
mov
mov
test
stos
test
ss
xchg
cwde
push
jecxz
into
cmp
arpl
push
ret
adc
cmps
dec
fdivr
pop
sbb
jp
rcl
movs
mov
sbb
inc
cs
or
fnstcw
test
push
fld
sbb
(bad)
jmp
outs
sub
cmp
ins
not
xor
inc
loop
pop
pop
pop
or
imul
jl
xor
dec
xor
pop
mov
sahf
mov
call
xchg
bound
mov
iret
jb
cdq
cmp
sub
sbb
fdivr
adc
movs
sub
or
xchg
mov
jnp
mov
inc
movs
dec
stos
mov
xchg
clc
and
out
stos
mul
ret
mov
shr
mov
inc
adc
scas
out
nop
repz
fistp
movs
mov
pushf
addr16
pop
call
into
xchg
sbb
mov
leave
dec
imul
addr16
xchg
inc
test
stos
inc
iret
mov
das
test
adc
hlt
or
cmc
shl
add
mov
test
pop
(bad)
sub
push
jle
enter
mov
dec
add
cmp
(bad)
pushf
add
sbb
xor
and
cmp
cmp
es
lahf
mov
or
(bad)
(bad)
mov
nop
retf
jb
cmp
fs
inc
adc
pop
mov
mov
inc
cmc
ret
std
fild
sbb
cmc
mov
or
(bad)
cmp
outs
jmp
pop
xor
into
mov
mov
fldenv
xlat
and
cmp
inc
int
scas
inc
cmp
into
dec
arpl
mov
adc
mov
mov
mov
js
or
aam
xchg
jmp
and
mov
mov
xchg
jb
cmp
jl
mov
and
mov
icebp
test
mov
mov
cmp
pushf
pop
xchg
adc
pop
outs
imul
sbb
outs
adc
cmp
nop
sbb
out
jl
(bad)
xor
push
retf
pop
jge
mov
daa
jno
(bad)
hlt
sub
sbb
mov
lods
sub
mov
in
stos
aad
xchg
inc
pop
push
pop
les
inc
sub
les
mov
mov
into
outs
inc
add
xchg
xchg
int
pop
mov
xor
enter
out
mov
pop
in
(bad)
int3
fnstsw
popf
adc
mov
dec
xor
pop
cmp
cmp
shufps
imul
mov
mov
outs
or
repz
mov
aad
sbb
mov
cmp
mov
cmp
push
mov
leave
pop
xchg
mov
push
push
cmp
retf
mov
aaa
inc
pop
es
cld
sub
popa
lds
iret
addr16
sbb
cmps
cmc
jecxz
jl
jp
jmp
movs
enter
fcomp
stc
loopne
mov
jno
jnp
pusha
and
ror
(bad)
jmp
fiadd
fmulp
je
mov
push
add
mov
(bad)
ret
test
out
or
sub
int
adc
mov
out
cdq
jo
dec
int3
mov
pop
test
int
es
imul
pop
mov
inc
cmps
fisubr
mov
or
sub
push
push
pushf
fsubr
mov
xor
stos
adc
hlt
scas
mov
(bad)
jp
cli
mov
repnz
push
cdq
test
add
cmp
mov
cmp
pop
addr16
sub
aad
fild
jne
xor
mov
inc
enter
sub
cwde
dec
push
ror
out
add
mov
mov
(bad)
pop
(bad)
outs
jmp
mov
ret
cmps
mov
ficomp
arpl
mov
(bad)
xchg
ja
ret
(bad)
test
in
das
stos
int
out
push
call
mov
or
pop
push
(bad)
iret
pop
inc
aas
movs
retf
adc
mov
out
push
das
clc
xchg
cld
add
test
imul
fst
jecxz
inc
dec
dec
and
or
lods
int3
push
adc
mov
xchg
nop
sub
sbb
out
and
arpl
iret
mul
icebp
pop
sbb
dec
sub
and
mov
push
outs
aaa
in
ja
jnp
repnz
mov
lods
or
fsubr
inc
sbb
outs
or
inc
pop
rcl
add
idiv
mov
ja
jmp
stos
test
test
xchg
sub
dec
dec
dec
imul
sub
add
bound
push
fdiv
call
jb
pop
sub
lods
pushf
sbb
sti
mov
ss
push
repz
xchg
push
imul
aaa
ror
and
pop
sahf
in
imul
jb
loop
adc
mov
popa
mov
dec
test
adc
pop
and
(bad)
imul
scas
arpl
test
cmp
mov
imul
xchg
pop
inc
fsub
sub
out
pop
mov
jae
retf
mov
add
ficomp
and
aaa
scas
test
sbb
adc
arpl
sub
adc
jmp
fisubr
mov
jle
je
das
mov
test
enter
jecxz
pop
sahf
fld
aam
mov
jns
sub
scas
inc
sub
xor
push
into
mov
xchg
push
mov
dec
pop
jnp
sbb
jno
inc
scas
push
(bad)
sbb
jno
jp
or
mov
out
jmp
mov
(bad)
pop
not
push
jg
add
cmps
mov
fdiv
out
pop
xchg
mov
adc
fwait
mov
clc
mov
mov
pop
mov
test
enter
cmps
jg
repz
add
ret
cmps
sub
xor
add
cmc
in
jbe
or
pushf
bnd
jb
jecxz
js
mov
mov
and
repz
(bad)
fmul
inc
push
mov
sub
add
ins
fadd
inc
cmp
cmp
push
push
jmp
fcomip
cmp
adc
ins
ret
push
mov
dec
xor
ins
ja
loop
fiadd
mov
dec
loopne
imul
ja
je
jnp
dec
jmp
daa
mov
mov
dec
mov
imul
mov
addr16
jns
scas
jns
push
pop
and
aaa
jl
mov
shl
lods
sub
jge
add
ss
add
repz
pop
xchg
xor
push
jno
int3
(bad)
sbb
add
and
push
cmp
add
es
inc
mov
enter
push
sbb
in
out
movs
dec
stos
jae
stos
mov
and
jle
mov
popf
adc
(bad)
fbld
mov
fadd
rcr
push
ja
sub
pushf
mov
adc
pop
mov
into
lods
jge
jns
loop
dec
(bad)
imul
rcr
dec
xor
dec
sbb
and
sbb
or
retf
int3
loop
mov
test
repz
inc
jle
adc
xor
fld
and
fstp
ret
mov
sbb
fmul
sub
dec
clc
push
mov
(bad)
je
daa
adc
cmps
add
jno
addr16
popa
jo
cmp
test
std
loope
fs
enter
ss
mov
mov
sbb
sub
xchg
aad
das
mov
or
jle
adc
icebp
jle
test
ins
push
or
out
jno
cmp
push
jg
push
jns
or
shr
les
(bad)
sbb
int
mov
pop
mov
add
xchg
pop
scas
imul
xchg
xchg
or
nop
ds
fmul
sub
shl
mov
mov
inc
jns
pop
or
mov
movs
out
daa
push
dec
fs
xchg
popa
cmp
pop
call
jg
cmp
aas
hlt
ja
dec
fcom
repz
adc
mov
mov
cmps
ins
fmul
mov
and
aad
xchg
daa
pop
ret
in
xor
xchg
cli
pop
aam
es
not
fiadd
mov
hlt
jb
add
mov
jbe
jns
mov
mov
add
out
sbb
cmp
popf
fld
int3
mov
fist
pusha
cmp
mov
and
outs
jge
retf
jne
ss
stos
sub
mov
mov
cld
and
aam
mov
aad
arpl
inc
or
mov
lods
mov
sar
dec
mov
sub
popf
ja
adc
inc
or
xchg
inc
mov
in
xchg
test
or
js
int
jbe
adc
std
call
fdivr
int
jge
jns
jae
xor
cmp
jnp
add
push
cmp
adc
push
maskmovq
test
je
pusha
cmp
fwait
add
pop
imul
out
sti
mov
cmps
jmp
or
movs
bnd
mov
btr
and
mov
mov
das
and
mov
and
inc
cli
cdq
adc
cmc
sahf
and
jb
mov
mov
cs
cmp
push
cmps
sbb
nop
push
shl
sub
mov
jnp
test
aad
dec
xor
pop
dec
push
sbb
(bad)
ss
cmps
gs
repnz
adc
sbb
(bad)
jmp
jae
jge
bound
adc
out
inc
adc
xor
jmp
test
pop
lods
mov
push
pop
push
pushf
out
mov
pop
mov
pop
in
jo
fs
scas
xor
movs
sub
mov
mov
xor
stos
inc
in
jmp
sbb
sbb
hlt
lods
or
bnd
fistp
xchg
push
jmp
sbb
ror
pop
and
arpl
inc
push
into
(bad)
aam
popf
and
push
loopne
add
sbb
adc
xor
fiadd
gs
sub
scas
int3
mov
add
sub
xchg
ins
pop
repnz
and
mov
out
jno
pop
mov
ins
(bad)
stc
js
add
popa
push
cmp
cmps
dec
jp
push
pop
imul
loopne
push
mov
gs
cmps
retf
pop
xchg
pop
mov
scas
sbb
jbe
or
loope
push
mov
sub
mov
or
jno
dec
movs
push
add
pop
dec
fisttp
pop
sbb
ret
into
ins
xchg
sub
in
ret
lock
movs
mov
jo
dec
xchg
(bad)
jae
clc
mov
pop
stc
add
fisttp
cmps
or
pusha
sub
cmp
jnp
pop
(bad)
es
push
cmp
loop
cld
call
cmps
sbb
xchg
mov
movs
inc
sub
xor
pop
pop
mov
push
inc
pushf
retf
mov
sti
sbb
das
inc
dec
pop
sub
sub
mov
(bad)
push
xor
leave
dec
or
ins
in
lds
mov
retf
das
repnz
stos
push
mov
inc
aad
jne
fadd
adc
test
dec
add
pushf
call
push
xchg
pop
movs
and
sub
fscale
add
push
sub
movs
loopne
std
out
sbb
cwde
test
jg
outs
iret
mov
add
push
mov
clc
or
jmp
or
movs
push
movs
dec
dec
cmp
retf
sbb
add
out
jge
jl
dec
sti
cmp
stos
sbb
nop
and
adc
or
sbb
xchg
rcr
mov
inc
cmp
stc
mov
stos
push
into
lock
stc
std
or
pop
(bad)
fxch
pop
adc
and
xchg
imul
jmp
mov
adc
stc
and
dec
mov
add
add
adc
cmc
lods
jne
add
scas
stos
cmp
mov
mov
mov
stos
bound
stos
cmp
not
mov
test
int
ins
pop
call
sub
push
dec
add
sbb
cmp
test
push
mov
(bad)
retf
pop
xchg
sbb
arpl
pop
imul
rcr
xchg
mov
into
mov
add
ds
in
sbb
adc
data16
out
outs
add
mov
repz
cs
and
in
jge
ss
cmp
jle
xchg
mov
cmp
ror
jo
mov
pop
or
inc
xchg
add
add
stos
(bad)
outs
jl
into
sbb
xchg
mov
push
xor
adc
shr
jno
pop
mov
loopne
lock
ins
pop
cmp
jns
inc
cld
movs
pusha
xchg
leave
test
cmp
push
mov
test
pop
leave
sbb
sub
and
dec
popa
es
xchg
mov
and
adc
shr
add
ret
adc
int
pop
out
(bad)
inc
cmps
and
enter
fadd
nop
push
data16
clc
retf
mov
jmp
jns
sbb
nop
and
fucomip
test
(bad)
fdiv
dec
sahf
mov
dec
shl
pop
pusha
jnp
mov
inc
xor
ds
add
mov
jo
push
jae
(bad)
rcr
out
outs
stc
dec
je
retf
fs
outs
neg
mov
sbb
jge
rcl
arpl
cmp
sbb
push
mov
enter
ins
das
mov
fisubr
pop
jl
lahf
div
(bad)
stos
push
outs
scas
iret
pop
jecxz
mov
add
jae
je
inc
or
mov
mov
fwait
lock
leave
push
ror
mov
jecxz
fimul
out
mov
mov
aas
or
(bad)
push
setns
mov
fld
inc
imul
mov
adc
add
stc
push
mov
fdiv
(bad)
addr16
lea
adc
push
or
push
out
mov
shl
mov
xor
mov
stos
add
cmp
arpl
(bad)
(bad)
repnz
xor
mov
push
ins
inc
mov
dec
pop
add
ins
jno
daa
xchg
fisttp
int
aam
and
mov
lock
fmul
(bad)
out
jne
jg
int
shl
ss
aas
sub
add
mov
sbb
leave
xor
xchg
sub
ja
dec
dec
inc
in
test
test
cmp
dec
sar
out
and
je
jge
xchg
add
imul
xor
add
jmp
jg
adc
outs
sbb
pop
mov
in
loop
sti
dec
dec
imul
ja
(bad)
loop
nop
ss
popf
mov
test
mov
or
outs
dec
fdivr
mov
inc
push
ins
sbb
(bad)
shl
pop
pusha
(bad)
int
push
and
bound
fs
xchg
adc
js
inc
pmulhuw
test
pop
xchg
xchg
mov
test
sub
in
icebp
(bad)
sete
dec
pushf
enter
jmp
xchg
arpl
mov
leave
ja
xchg
dec
movs
adc
xchg
inc
das
(bad)
fdiv
dec
out
aas
mov
movs
pop
les
dec
ds
xchg
xchg
sub
sbb
test
cmp
add
jnp
icebp
div
ss
mov
(bad)
mov
ja
xor
aam
push
sbb
nop
(bad)
icebp
and
ja
add
adc
sub
stos
dec
(bad)
repnz
jmp
out
jbe
pop
retf
mul
adc
ss
out
pop
scas
inc
xlat
loop
push
test
or
inc
div
popa
xchg
js
mov
add
pop
and
out
loop
out
or
popf
mov
pop
jle
mov
pop
and
and
adc
jecxz
test
clc
mov
pop
ret
push
fnsave
xor
sbb
add
stc
sbb
xchg
aaa
loope
push
stos
sbb
fsub
lods
inc
xchg
inc
ss
sub
add
leave
cmp
aaa
fwait
aas
fild
jecxz
xchg
jecxz
test
int3
xchg
enter
jg
xchg
test
imul
movs
xor
mov
lahf
inc
push
mov
add
retf
cmp
dec
imul
fwait
cs
movaps
xchg
repnz
(bad)
xor
fcomip
pop
sbb
fbld
aas
shl
ja
sub
test
les
in
inc
cmp
dec
test
fild
js
push
daa
jb
mov
sub
int
sbb
push
shr
jns
push
cmc
xor
sub
jns
jo
stc
pop
test
jae
and
mov
aam
xor
adc
pop
(bad)
push
(bad)
cld
push
and
dec
mov
rcl
or
inc
sbb
(bad)
xchg
scas
mov
or
popf
aas
sahf
or
add
out
rcl
jb
push
sub
aaa
cmps
pop
repz
jbe
mov
gs
xor
jne
fnsave
jne
and
aad
dec
dec
lock
dec
popa
sbb
loopne
dec
dec
into
sbb
out
ja
outs
pop
rol
mov
mov
lea
and
imul
cld
loop
test
jle
or
and
(bad)
retf
xchg
std
idiv
jae
call
xchg
mov
ret
xchg
lds
fild
sbb
xchg
cmp
shl
push
cld
mov
jle
bound
adc
sbb
sbb
mov
and
mov
adc
pop
sub
test
shld
cmp
push
test
cmp
pop
jnp
test
inc
and
xchg
pop
loope
(bad)
dec
xchg
push
push
ins
jmp
retf
inc
jge
sbb
(bad)
xlat
fimul
fcmovnb
or
cmc
push
and
data16
dec
mov
xlat
mov
rcl
cmp
lahf
xchg
pushaw
mov
data16
sbb
not
cmp
sub
xor
daa
jno
aam
loop
jb
ds
jp
scas
mov
lea
or
mov
aam
fs
aas
dec
test
mov
fidivr
add
lahf
push
and
or
jno
in
mov
mov
add
mov
jae
jmp
sub
mov
jmp
cmps
sti
push
xor
xor
mov
lods
push
push
rol
in
fs
mov
and
ins
into
popf
push
push
and
sub
add
xchg
jmp
jecxz
ret
ret
xor
mov
dec
sbb
mov
popa
imul
add
aas
aaa
or
jle
push
je
test
aad
push
mov
imul
push
dec
sti
cld
sbb
mov
mov
xor
pop
test
mov
test
cdq
dec
mov
jecxz
cmps
call
sub
pop
sub
sub
xchg
gs
mov
add
mov
int3
js
sub
mov
test
pop
pop
(bad)
jmp
test
cmp
mov
or
das
pushf
cmp
(bad)
ja
mov
xlat
sti
or
mov
mov
mov
mov
pop
out
mov
adc
push
or
retf
pop
pop
fsubr
mov
call
cmp
aad
sar
and
and
scas
mov
mov
les
int3
push
aaa
mov
(bad)
popa
xchg
ret
pop
sbb
hlt
cmp
cmp
mov
mov
inc
aaa
in
ror
and
mov
sbb
inc
out
loope
repnz
clc
dec
mov
jae
mov
push
pop
outs
cld
ja
push
sbb
adc
add
xor
xchg
sahf
or
jmp
xchg
(bad)
sbb
mov
mov
or
xor
xor
pop
cmps
sub
sub
and
or
xchg
add
push
fs
lods
bound
pop
mov
sbb
stc
mov
stos
mov
inc
mov
or
mov
push
mov
neg
int3
test
arpl
cmp
stos
cmp
loope
popf
or
aad
pop
jge
sbb
or
mov
out
jmp
adc
push
jp
out
mov
mov
leave
cmp
cmp
sbb
inc
test
shl
sub
shl
dec
pop
enter
push
into
cs
jle
scas
jl
cmps
adc
or
lods
jnp
jne
test
lea
mov
xchg
iret
out
arpl
fdivr
jmp
out
push
clc
mov
(bad)
mov
mov
fwait
out
mov
fst
nop
icebp
lods
push
lods
mov
je
inc
pop
mov
sbb
loope
out
pop
cld
cli
push
aam
sbb
xchg
outs
movs
and
mov
add
or
jl
lods
shl
arpl
add
test
push
js
enter
sbb
call
adc
es
jecxz
or
xlat
mov
cdq
add
jmp
cs
push
jae
push
push
pusha
push
jbe
sub
cwde
jp
(bad)
ror
mov
pop
cmc
aaa
xchg
jge
or
out
pop
push
and
ret
push
pop
sti
aaa
cwde
inc
iret
fisttp
loopne
jp
xchg
call
xchg
ret
sahf
cmp
imul
xchg
push
repz
in
stos
jmp
cdq
fisub
mov
cmp
mov
daa
and
pop
mul
frstor
sub
jmp
out
pop
ficomp
add
sbb
xor
into
cmps
fsubp
test
push
outs
lahf
mov
lahf
aam
adc
adc
and
inc
pop
call
aad
add
mov
js
cmc
dec
add
out
inc
in
xchg
ins
cmp
(bad)
mov
jns
in
push
xchg
into
sub
cmps
iret
sbb
dec
jmp
mov
jl
out
dec
daa
push
add
adc
xor
or
dec
dec
jp
push
xchg
lahf
inc
jle
imul
out
sbb
xchg
jbe
lods
cmp
push
push
mov
adc
mov
or
jnp
ror
mov
push
or
lds
les
nop
mov
xchg
xchg
sub
and
push
add
test
pcmpeqw
jl
shl
push
or
xor
ja
adc
mov
adc
or
xchg
xchg
adc
cs
jbe
and
xchg
std
pop
fdiv
jp
push
jae
stc
dec
loope
sbb
mov
xor
enter
out
test
adc
mul
push
cmp
ds
pop
and
cli
loop
es
fxch
aad
pop
or
xchg
call
scas
jle
or
int3
mov
mov
out
sbb
fwait
mov
push
enter
inc
pop
ins
cmp
repnz
xor
jnp
dec
arpl
leave
mov
mov
jecxz
(bad)
fs
dec
fcom
ret
cli
cmp
lds
nop
in
cli
rcr
or
hlt
sub
mov
cmp
pop
ja
push
sub
cmp
test
sub
int3
jnp
pop
iret
push
add
test
ret
xchg
sbb
add
stos
mov
push
shl
mov
pusha
mov
mov
push
jne
mov
add
(bad)
pop
push
xchg
jecxz
add
mov
xor
retf
bound
js
sbb
and
jbe
sbb
test
pop
fdivr
mov
leave
hlt
es
push
xchg
stos
push
imul
mov
xchg
mov
cs
pop
push
or
loop
arpl
pop
mov
sub
in
(bad)
push
mov
mov
xor
cli
clc
out
mov
sahf
(bad)
or
pop
jno
rcr
fist
loope
mov
xor
adc
int
pop
rcr
rdmsr
mov
idiv
push
cmp
ror
gs
ret
and
sbb
popf
aaa
scas
push
xchg
loop
cmp
cmps
cs
test
fmul
mov
pop
fsubr
jmp
sbb
jge
xor
cmp
jne
call
mov
cmps
mov
pop
movs
stos
dec
cmp
cmp
bound
ss
dec
mov
mov
xchg
test
push
or
cmp
dec
mov
sar
mov
stc
mov
imul
xor
mov
mov
adc
in
jnp
popa
sti
pop
push
shr
imul
das
sub
sbb
push
movs
sbb
js
(bad)
(bad)
outs
adc
jnp
scas
and
mov
pop
mov
(bad)
dec
add
dec
ins
or
ror
jne
xchg
xor
pop
test
out
ins
ror
arpl
mov
test
imul
loop
retf
inc
ret
cmp
ds
cmp
xchg
das
cmp
jbe
inc
hlt
popa
push
sbb
arpl
adc
loope
arpl
fwait
cmps
or
nop
std
cdq
lds
xchg
sbb
and
repnz
jmp
sahf
xor
inc
mov
sbb
mov
sti
push
push
int3
push
mov
movs
(bad)
or
jl
fbstp
and
mov
in
add
mov
mov
dec
inc
sbb
mov
stc
cmps
rcl
dec
loop
sbb
mov
lods
jo
je
sahf
jo
add
cmc
js
adc
mov
xor
movs
pusha
bnd
xor
jnp
pop
rol
adc
in
mov
or
in
sahf
shr
out
xor
mov
add
jp
ja
and
repnz
test
jle
in
mov
or
pop
sbb
ret
lock
add
inc
cmp
cs
mov
pop
sub
fstp
dec
stc
xchg
ins
(bad)
adc
or
sahf
adc
mov
add
jne
cdq
call
jecxz
scas
cmc
mov
aad
adc
mov
and
push
push
lods
mov
or
pop
and
push
mov
fild
test
cmp
jmp
jmp
and
sbb
(bad)
mov
cmp
mov
dec
hlt
mov
mov
cmp
jle
mov
mov
mov
je
inc
leave
mov
por
pop
sub
push
jle
or
sub
test
lds
fucom
(bad)
fild
out
mov
cmc
(bad)
and
pop
sahf
push
call
into
xlat
add
push
daa
jl
or
inc
clc
daa
in
jl
cmc
stc
ja
jmp
jg
jl
inc
xor
lea
adc
ins
fwait
fs
sbb
push
push
sbb
or
out
test
jne
loop
ins
or
add
sbb
or
cmp
inc
and
and
adc
pop
rcr
adc
(bad)
sbb
mov
push
int
daa
dec
retf
lods
mov
inc
stos
and
dec
jbe
dec
pop
pop
sbb
retf
and
test
jno
mov
mov
push
cmp
xchg
ret
mov
sub
ins
bound
retf
cmp
movs
pop
js
push
fidiv
adc
add
add
ficom
mov
pop
jge
pushf
into
or
jmp
mov
pop
rcl
xchg
icebp
dec
push
iret
xor
or
ror
adc
mov
or
sub
icebp
pop
push
xchg
out
inc
cmp
fcmovne
mov
pop
or
rcl
imul
aam
sahf
mov
jno
mov
cld
cmp
add
addr16
outs
retf
xchg
push
hlt
popa
enter
retf
ds
xchg
pop
mov
cmps
jmp
and
jl
push
je
mov
mov
je
idiv
lods
aam
outs
fxch
cmp
jmp
xchg
in
ficom
fisubr
retf
cmp
add
addr16
sub
aad
push
inc
out
fmul
lods
push
lsl
imul
dec
out
fadd
sbb
loop
jnp
sub
pop
and
ret
jl
ret
jle
fistp
jg
dec
inc
cmps
jl
sub
add
mov
jl
jecxz
sbb
mov
into
mov
sub
ds
inc
jl
push
and
ss
mov
fstp
cld
sbb
inc
sub
jb
jmp
jae
(bad)
and
mov
or
sub
nop
icebp
fdivp
pop
pop
in
sub
and
and
xchg
adc
in
push
ss
pop
mov
stos
gs
sahf
push
pop
dec
adc
pushf
pusha
test
stos
mov
rcl
jp
mov
sbb
loopne
mov
fld
sar
ins
pop
nop
out
sti
pop
sbb
xor
daa
or
jle
dec
(bad)
ror
aaa
adc
es
cvtps2pi
(bad)
push
xor
pop
and
jb
(bad)
adc
jmp
aam
ss
mov
pop
push
sub
mov
nop
mov
pushf
ss
call
(bad)
rol
sub
mov
int3
cmc
pop
and
and
mov
call
adc
pop
scas
cmps
mov
ds
xchg
punpckhwd
retf
or
cmp
and
pusha
imul
add
sub
mov
ins
xor
cmp
xchg
fwait
xchg
and
dec
xlat
sbb
xor
inc
or
popf
sbb
cmova
add
fdiv
leave
mov
add
dec
mov
add
(bad)
push
lods
xchg
mov
fcomp
adc
mov
pop
mov
add
ror
xchg
call
sbb
adc
dec
or
fcom
push
ror
jl
sub
mov
jmp
jo
cmc
push
inc
add
test
cmp
stos
clc
data16
pop
loopne
or
push
push
dec
push
and
inc
xor
jecxz
lahf
ins
jno
pusha
mov
add
jb
hlt
inc
pop
pusha
int
ds
dec
mov
and
jne
imul
dec
cs
aad
into
push
cmp
inc
inc
sub
mov
push
xor
jb
push
loopne
neg
mov
fnsave
pop
xchg
inc
or
ror
mov
sahf
cmp
jb
jle
(bad)
mov
stos
xchg
jne
ins
inc
mov
es
adc
in
stos
or
cmp
aaa
jl
jno
cli
aaa
inc
xor
push
iret
les
enter
sahf
shl
cwde
jmp
xor
pop
call
pop
clc
jae
pop
mov
jmp
pop
adc
into
pusha
aam
ret
mov
loopne
cmc
pushf
pop
cmp
cmps
ret
fisttp
movs
xchg
cmp
into
sub
jne
xchg
mov
fcmovu
adc
dec
lods
dec
push
pop
mov
idiv
fcmovb
(bad)
jo
add
push
stc
in
pop
ret
xor
inc
fild
dec
and
cmp
push
lock
fbstp
into
cs
fcmovnbe
iret
repnz
mov
or
loope
jle
pop
daa
pop
mov
inc
out
scas
push
in
pop
xor
cwde
lahf
or
push
loopne
test
scas
pop
pop
pusha
sbb
sub
not
jbe
ss
pop
aad
add
repz
hlt
push
pop
add
dec
movs
mov
fdivp
(bad)
pop
and
or
repz
inc
jmp
test
ja
cs
loope
mov
dec
movd
cmp
push
push
jecxz
cmp
push
ror
sahf
pop
cmp
mov
mov
jl
mov
push
dec
ins
xchg
stos
(bad)
and
test
adc
call
lods
je
loop
jmp
inc
push
mov
jmp
ror
and
adc
cmp
pop
inc
(bad)
mov
out
dec
or
cmp
or
daa
mov
push
xor
stc
inc
xlat
aaa
out
call
xchg
xchg
xchg
aas
jmp
pop
pusha
lahf
imul
sar
leave
sub
out
fcomi
push
sbb
and
push
ja
mov
jbe
scas
xchg
ins
shl
ss
shl
mov
sub
repz
mov
rol
dec
add
cld
cwde
shl
push
lea
aas
fst
mov
stc
aaa
xor
data16
lock
sub
aam
cld
bts
test
push
adc
push
mov
lds
into
mov
bound
bound
push
cmovge
xor
sub
in
push
mov
aad
pop
xchg
fsub
cs
mov
mov
ret
inc
sbb
inc
xchg
xchg
jae
adc
sub
and
pop
mov
mov
std
jns
mov
adc
sub
sub
add
jno
sub
mov
jge
shr
mov
fs
ret
mov
sub
push
js
mov
fst
adc
push
pushf
mov
fnstsw
or
xchg
mov
(bad)
pusha
call
leave
stos
inc
repz
jge
xor
cmp
mov
imul
sub
xchg
mov
leave
mov
cmp
hlt
pop
push
adc
push
pop
sar
(bad)
loopne
imul
add
cdq
movs
shr
outs
fdiv
ins
(bad)
outs
repnz
mov
loopne
mov
rcr
sbb
nop
inc
test
dec
mov
arpl
sbb
sub
popf
mov
fimul
cli
sbb
mov
or
add
mov
dec
inc
inc
in
pop
nop
push
fcmovbe
and
call
daa
rcl
out
cld
fist
and
or
xchg
hlt
ret
dec
mov
std
push
addr16
mov
aas
ss
icebp
sub
movs
jne
and
cdq
(bad)
push
mov
or
dec
sti
ret
test
or
and
mov
fsub
cmps
rol
sub
xchg
pushf
bound
mov
xchg
dec
std
fisubr
lea
aad
mov
call
mov
pop
ror
dec
push
retf
shl
aaa
cs
jmp
jne
pop
inc
jmpw
imul
popa
ror
cmp
xchg
or
leave
sub
and
rcl
mov
mov
push
ins
aaa
retf
addr16
sbb
loop
push
cmp
sbb
loope
fcmovne
(bad)
and
rol
jns
mov
pop
sub
lods
dec
cmp
push
int3
xchg
cmc
jns
mov
test
push
out
popf
push
mov
les
lods
(bad)
(bad)
(bad)
dec
push
ss
fstp
(bad)
clc
js
(bad)
rcl
mov
jo
xor
fnstcw
inc
mov
into
in
mov
dec
aas
stos
test
xchg
ret
mov
add
push
in
rol
loopne
mov
dec
loopne
jmp
fisttp
xchg
xchg
mov
mov
mov
rcr
sub
movs
in
push
popf
mov
adc
clc
cmp
loop
jnp
ds
jmp
in
jmp
push
add
xchg
jbe
leave
shl
iret
push
pop
xchg
test
cdq
addr16
icebp
xchg
shl
sbb
loope
es
imul
sbb
add
pop
(bad)
cld
or
sbb
jle
inc
loop
sbb
cmp
jg
outs
adc
add
or
jbe
pop
(bad)
stc
jmp
and
xor
pop
jne
xlat
(bad)
in
push
push
adc
or
mov
popf
dec
cmc
mov
(bad)
ret
and
shl
sahf
nop
mov
adc
ins
lahf
and
push
fsub
pop
enter
(bad)
les
add
(bad)
cli
call
sub
neg
in
scas
(bad)
xchg
enter
add
into
je
sbb
and
xor
faddp
push
cs
aam
sbb
scas
pop
rcr
pop
(bad)
xlat
dec
jge
fisub
movs
stos
push
adc
mov
jnp
arpl
pop
push
(bad)
std
mov
jl
push
add
xchg
dec
add
xor
mov
or
or
outs
ins
fisub
push
add
iret
or
mov
ja
int3
adc
ins
jnp
push
(bad)
in
xor
imul
jle
sub
xchg
les
in
clc
scas
jbe
sbb
push
stc
cmp
retf
mov
pop
xchg
test
xchg
hlt
sub
sbb
call
scas
mov
jno
mov
jo
sti
xor
mov
mov
test
in
inc
jp
(bad)
adc
sti
inc
mov
mov
and
and
dec
out
sub
les
xor
sbb
mov
(bad)
pop
sub
xchg
mov
dec
sub
xlat
addr16
push
or
sbb
add
(bad)
add
add
nop
fs
ins
sub
sbb
cli
cmp
sbb
popf
push
pop
inc
dec
test
add
jmp
pop
shr
sub
and
push
inc
pop
dec
xchg
lock
push
repz
or
(bad)
outs
movs
fmul
fstp
jae
add
fmul
rol
shl
push
jnp
shl
sbb
push
xchg
xchg
mov
push
dec
shl
adc
adc
ret
xchg
or
out
std
dec
adc
pusha
and
add
xchg
mov
xor
push
or
xlat
fcmovnu
or
ret
inc
sbb
jo
cmp
(bad)
fwait
mov
push
push
(bad)
sbb
ins
ds
push
cmp
jmp
mov
dec
in
(bad)
jne
out
mov
mov
nop
nop
(bad)
es
adc
push
dec
pop
shl
out
movs
fnstsw
jl
inc
xchg
ret
loope
mov
imul
call
out
cmp
imul
cmc
fcomp
movs
jmp
rol
je
dec
retf
dec
nop
test
pop
cwde
rol
imul
lahf
int
or
or
xlat
pop
fisub
call
xor
test
cmc
push
fimul
shl
aaa
push
jnp
and
add
ret
add
test
dec
in
idiv
xchg
and
or
neg
mov
mov
xlat
les
lods
dec
mov
sbb
mov
dec
arpl
push
daa
aad
je
cmp
adc
jg
(bad)
xchg
xchg
mov
ficom
and
int3
movs
stos
shr
xchg
add
(bad)
idiv
inc
push
clc
es
adc
call
fisubr
cmp
outs
imul
mov
(bad)
out
mov
jecxz
enter
div
loopne
sbb
push
adc
popf
les
jmp
mov
adc
cmp
je
jnp
int3
dec
push
jns
mov
hlt
(bad)
and
dec
inc
in
stos
pushf
cmp
mov
push
popa
movs
sbb
mov
enter
dec
and
add
lea
pop
sar
jns
jbe
dec
je
cld
cmc
mov
ret
and
lahf
sub
stos
pop
cwde
leave
aas
cmp
outs
inc
xchg
mov
jp
xchg
lahf
adc
jge
or
and
leave
xor
cmp
jns
(bad)
loop
sahf
sbb
rol
outs
scas
and
cmp
push
shl
nop
(bad)
adc
mov
or
mov
(bad)
jge
mov
std
popf
mov
(bad)
xchg
mov
jnp
fs
loope
push
fwait
daa
cmps
cmps
fidiv
repnz
mov
cmps
into
aad
shl
dec
push
xor
mov
mov
fimul
cmps
loop
cdq
inc
pusha
enter
es
push
inc
push
dec
sbb
push
das
adc
mov
or
push
leave
and
mov
and
xchg
iret
enter
mov
and
xchg
ins
cmp
cli
mov
sbb
cwde
add
cmp
ss
test
mov
cdq
pop
ins
ss
mov
mov
in
push
sub
cwde
movs
movs
retf
sub
loope
test
adc
mov
pop
movs
mov
test
pop
dec
push
das
ret
lahf
cmp
sbb
movs
minps
xchg
jns
ins
jno
or
(bad)
fs
dec
out
fidiv
es
out
std
jp
stc
out
in
pop
pop
or
push
sub
jne
inc
test
fwait
jl
xchg
mov
xor
scas
mov
(bad)
lock
inc
(bad)
je
mov
dec
pop
dec
sbb
adc
or
dec
lds
push
mov
icebp
push
xor
pop
nop
mov
pop
ins
cmp
jmp
nop
ret
(bad)
pop
or
cli
lea
add
adc
mul
xchg
sbb
sub
js
cmps
xchg
in
mov
pop
and
lock
retf
scas
test
stos
aaa
pop
push
dec
iret
mov
mov
mov
mov
lods
jo
mov
xor
stos
or
rcr
mov
and
aas
cs
adc
cmp
push
shr
dec
pop
hlt
out
popf
imul
inc
fcomip
imul
mov
xor
push
and
and
sahf
inc
or
bound
test
ret
idiv
sub
add
add
mov
add
mov
repz
retf
push
add
in
rcr
mov
aad
mov
movs
clc
in
pop
mov
or
stc
sub
fdiv
jo
mov
sub
fbstp
icebp
adc
call
xchg
xchg
int3
mov
mov
shr
in
loope
mov
add
jo
and
and
sahf
int3
push
es
sar
mov
(bad)
js
xchg
pushf
dec
gs
stos
aam
pop
mov
inc
inc
lds
dec
lods
stos
cmp
shl
and
mov
cmps
pop
hlt
jo
mov
loopne
jmp
jle
xchg
pop
cli
out
fsub
sbb
add
xor
adc
stc
leave
jmp
stos
cmp
aaa
jns
jmp
mov
repz
retf
cmp
mov
jae
stc
jbe
cmp
mov
cmp
add
inc
or
push
lock
sbb
int
xchg
jl
retf
mov
es
dec
daa
mov
pop
test
jne
jmp
stc
sub
mov
mov
pop
fdivr
push
pop
or
sbb
(bad)
out
and
fisub
pop
push
jne
add
scas
aad
ja
pop
(bad)
out
sbb
cmp
mov
out
push
lea
pop
pop
push
(bad)
fcmovbe
out
xor
js
and
jg
aaa
popa
es
test
fsubp
push
icebp
and
adc
bound
jg
pop
sub
icebp
popf
mov
cmp
xchg
ins
js
push
cdq
or
pop
movs
popf
mov
mov
push
sbb
sub
jle
imul
inc
iret
call
movs
or
fs
xchg
xor
xor
xchg
mov
jno
test
scas
jmp
rol
and
jo
sbb
(bad)
jp
dec
rcl
sbb
in
pop
xor
not
(bad)
push
stos
shl
lods
inc
outs
sbb
add
add
ret
and
imul
lods
fild
add
jmp
ret
mov
ja
pop
ret
cmp
adc
sub
leave
push
add
test
push
cld
sbb
dec
mov
hlt
adc
sub
or
fsubr
(bad)
arpl
cmp
and
sti
xor
push
xlat
push
xlat
dec
cmp
and
call
xor
pop
ins
pusha
mov
pop
jmp
jmp
scas
push
push
jmp
or
pushf
shl
fidivr
pop
mov
rcl
or
loope
js
(bad)
fmul
aaa
and
aam
(bad)
dec
ret
sbb
push
lds
cs
mov
ja
aaa
cli
jle
mov
test
das
mov
js
jl
xchg
or
mov
sub
enter
add
push
mov
test
dec
rcr
adc
movs
fisttp
pop
cs
jbe
sahf
dec
jmp
add
shl
cli
stc
jbe
fs
rep
push
das
xchg
aad
mov
into
xchg
ins
int3
or
push
add
inc
and
mov
mov
xchg
outs
ja
mov
test
pop
stc
push
xchg
add
lods
fs
sbb
call
xchg
adc
pop
fbstp
call
cmp
xor
jmp
movs
jns
call
test
aad
jg
jne
sbb
mov
sahf
imul
stos
cmp
sbb
pop
fidivr
jno
call
ins
jg
cwde
les
arpl
fnsetpm(287
mov
leave
mov
adc
mov
int
mov
stos
xchg
xor
fisubr
inc
retf
add
sti
stos
jmp
mov
lods
ret
sub
das
adc
pop
xor
movs
ja
or
aaa
and
cli
jl
test
pop
add
enter
mov
ss
push
fstp
scas
xor
pop
jl
pop
inc
xor
arpl
cli
mov
jl
mov
jae
push
ds
or
imul
xor
arpl
push
or
clc
jge
or
xor
repnz
pop
cmp
fsubr
mov
ins
add
sub
inc
adc
lahf
out
push
dec
push
loope
stc
lea
jne
cld
push
push
jnp
mov
dec
int3
test
push
pop
ds
inc
jp
xchg
inc
mov
(bad)
mov
iret
mov
aas
outs
sbb
es
pop
mov
xchg
pop
pop
adc
mov
adc
dec
mov
enter
sub
call
(bad)
retf
and
inc
sbb
dec
loop
ins
lds
ins
or
mov
and
xchg
rcr
test
leave
pop
cmp
mov
sub
fcmovbe
pusha
mov
(bad)
lock
int3
mov
inc
test
lods
add
jmp
and
dec
and
jp
mov
out
sub
iret
xchg
jmp
mov
mov
inc
ror
aad
pop
fucomp
pop
icebp
cli
aaa
ja
sbb
arpl
es
inc
jo
ficomp
(bad)
out
fisttp
xchg
data16
in
int3
jmp
ret
in
out
sbb
int
leave
jmp
(bad)
fild
retf
loop
aam
nop
gs
mov
ins
xor
lea
dec
jecxz
adc
xchg
add
sbb
inc
push
lds
adc
mov
ret
ret
adc
sub
add
das
repz
sbb
fcomp
cmc
loop
xor
cwde
add
rcr
adc
shl
test
fcomp
pushf
mov
lods
xchg
and
and
lods
frstor
xchg
jne
pusha
pop
addr16
leave
push
test
ja
mov
adc
test
out
add
shl
sbb
repz
test
push
mov
data16
mov
sub
cmp
loope
enter
call
xor
(bad)
dec
lea
(bad)
and
int3
je
cmp
mov
in
addr16
mov
lods
cld
push
inc
in
xor
pop
retf
jp
jmp
jmp
jae
dec
daa
clc
fdivr
das
lahf
loop
mov
adc
dec
mov
push
sahf
shl
(bad)
cmp
ins
xor
pop
stos
push
dec
outs
mov
mov
mov
(bad)
add
xchg
jns
xchg
cmp
fmul
adc
out
jae
mov
xchg
imul
addr16
cdq
ret
sbb
je
daa
push
mov
mov
ret
stos
pop
dec
pop
inc
sub
pop
jmp
cmp
mov
mov
dec
xchg
jmp
out
dec
inc
dec
cmp
cmp
(bad)
xor
loopne
ja
adc
jmp
xchg
push
aam
jge
aaa
cmp
out
push
cmp
add
lea
aad
jecxz
(bad)
sti
ror
retf
outs
pop
or
inc
xor
inc
lea
(bad)
cmps
push
xchg
out
in
xchg
inc
fisubr
addr16
imul
jnp
push
sbb
ror
into
shl
stos
or
outs
movs
rcr
mov
sbb
jbe
jmp
and
aas
cmps
movs
add
jb
ds
mov
xor
mov
dec
cmps
rcr
lds
idiv
jp
inc
enter
sub
dec
in
jecxz
push
cmp
aam
and
inc
cmp
xchg
cmp
jb
lock
neg
add
test
jmp
xchg
adc
jo
inc
push
sbb
test
cmp
jp
int
fs
imul
shl
gs
mov
test
inc
or
or
sbb
test
jp
sub
mov
jmp
pushf
aad
pop
push
in
cmps
xchg
loop
jno
xchg
inc
(bad)
pop
std
mov
pop
fiadd
pusha
jnp
dec
inc
sub
mov
cmp
shl
out
das
mov
dec
repnz
rcl
bound
in
inc
pushf
sub
dec
stc
or
xlat
or
rcr
mov
mov
fldcw
sub
push
pop
mov
mov
mov
daa
adc
div
pop
fwait
sbb
mov
fld
xor
ja
loopne
dec
mov
cmp
shr
dec
mov
mov
std
ss
jns
scas
push
or
cli
imul
push
xchg
push
fcomp
jb
jge
mov
movs
daa
or
push
je
loope
in
(bad)
stos
mov
jnp
imul
push
jle
fnstcw
inc
dec
mov
pop
add
xor
inc
or
jb
fwait
cs
sbb
repz
dec
fistp
test
or
pop
xor
out
(bad)
ins
add
or
xchg
retf
adc
aas
inc
loopne
sbb
and
call
jmp
cld
in
addr16
ss
pop
retf
xchg
aam
into
test
pop
js
(bad)
in
pop
mov
out
sub
jno
xchg
push
fld
cld
pop
aam
mov
ret
dec
fwait
inc
nop
jb
daa
or
js
inc
sbb
jl
sbb
xchg
adc
pop
adc
inc
ja
and
sub
dec
inc
mov
and
xchg
mov
inc
add
repz
ficomp
cmps
fcmovne
xor
push
sub
aaa
mov
ds
cmp
sbb
jl
cwde
outs
cmp
jbe
sub
jo
or
add
mov
movs
dec
jmp
xor
jecxz
ss
xor
out
sbb
cmps
mov
hlt
mov
inc
push
jmp
sti
pop
imul
lahf
fisubr
lea
ins
xor
jns
sub
xchg
inc
mov
imul
jbe
rcl
and
movs
or
xchg
add
cmps
or
mov
or
movs
(bad)
sub
push
or
pop
bound
ret
popa
inc
test
push
xchg
int3
shr
adc
mov
enter
(bad)
arpl
aad
movs
sub
dec
stc
jmp
jg
and
leave
nop
jns
mov
test
out
jae
jo
pop
xchg
push
jge
iret
cmc
push
pop
not
jmp
popf
fld
imul
adc
cwde
pop
lock
mov
cmp
mov
out
or
popf
jl
movs
adc
repnz
les
outs
adc
int
pop
dec
and
out
test
aad
push
jmp
call
jecxz
cmp
pop
fucom
xor
jae
fcmovnb
test
xchg
and
and
popa
xor
pop
in
fpatan
mov
xchg
pop
dec
fld
jmp
out
scas
in
or
sub
out
outs
mov
aaa
cwde
add
mov
hlt
retf
loopne
inc
pop
dec
mov
clc
inc
gs
fcmovnb
and
inc
mov
imul
cmps
test
lock
popf
mov
and
lds
push
fnstsw
jmp
cmp
pop
jns
jno
test
push
mov
fcom
pop
mov
imul
repnz
ss
push
js
jns
loope
ret
fidivr
std
addr16
xchg
dec
push
iret
(bad)
(bad)
arpl
mov
sub
mov
movs
lods
push
inc
sbb
aam
dec
icebp
or
addr16
push
ja
or
popa
loop
or
test
mov
mov
fcomi
fsubrp
js
lock
and
adc
test
ret
pop
inc
stos
outs
mov
pop
inc
or
push
inc
es
enter
pop
push
dec
inc
cmc
xlat
cdq
and
popf
inc
iret
dec
pcmpgtw
int
pop
add
enter
cmovp
sub
cmp
ins
xchg
inc
lods
push
stos
mov
dec
cld
pop
and
add
arpl
lds
add
dec
loopne
retf
jmp
in
fisubr
test
fcmovb
cs
int
imul
sbb
aas
daa
outs
adc
scas
outs
cld
and
out
fsubr
repz
and
mov
cmps
fisttp
adc
mov
dec
sub
add
int3
sti
mov
ss
mov
(bad)
or
pop
jmp
rcl
push
push
mov
cmp
sbb
fnstcw
icebp
rcr
imul
(bad)
mov
nop
or
je
jmp
test
inc
div
lods
mov
sub
or
or
inc
push
int3
mov
adc
fbstp
xor
lahf
push
movs
test
jmp
mov
sub
mov
jl
dec
pop
adc
stos
sub
sub
outs
stos
mov
loopne
sub
push
pop
inc
pop
inc
inc
push
sahf
leave
mov
inc
inc
ins
xor
pop
mov
and
or
mov
xchg
adc
fmul
push
ss
inc
cmc
jb
sbb
lea
sbb
adc
loope
(bad)
fwait
cmp
jo
stos
or
push
add
jbe
pop
cmp
mov
ins
cmp
pushf
lock
adc
dec
adc
dec
gs
xor
sbb
mul
mov
test
scas
mov
fs
jmp
xchg
mov
pop
addr16
sbb
pop
and
dec
cwde
pop
repz
arpl
push
dec
cwde
mov
and
dec
rol
and
js
inc
lods
stos
inc
mov
push
(bad)
pop
push
inc
mov
mov
or
sub
enter
loopne
cwde
hlt
jae
cmp
xchg
and
or
add
repnz
push
or
test
sti
sti
sub
fist
inc
sbb
fldenv
and
aam
movs
cmps
mov
shr
jne
mov
fnstcw
test
popa
test
sub
(bad)
ins
pop
(bad)
mov
jg
jge
pop
movs
mov
retf
loopne
dec
pusha
mov
and
xchg
imul
pop
push
mov
call
test
stc
ins
cld
push
dec
jno
sub
xchg
add
(bad)
cmp
inc
cli
faddp
dec
call
add
mov
pop
pop
aas
xor
push
dec
jb
dec
mov
bound
push
or
outs
and
mov
cmp
mov
adc
push
scas
lock
jg
arpl
lea
mov
cmp
icebp
mov
sub
inc
push
cmp
ins
pop
adc
mov
rcl
rcl
fiadd
(bad)
mov
jle
test
ret
jne
ja
push
cmp
adc
mov
and
pushf
sub
imul
or
call
dec
sahf
pop
xchg
enter
ins
push
in
fs
dec
stc
pop
xchg
int3
in
jno
(bad)
cwde
mov
xor
add
or
ret
or
outs
add
mov
movs
xchg
out
cmp
imul
xlat
ja
mov
inc
jbe
push
jecxz
std
in
inc
sbb
pop
shl
push
std
mov
add
out
cmps
in
cs
pop
cmp
iret
pop
mov
mov
mov
aas
aaa
cdq
enter
mov
in
(bad)
xchg
popf
fist
arpl
movs
push
cmp
pushf
int3
mov
mov
dec
xchg
lea
movs
xchg
jb
xlat
pop
mov
arpl
mov
or
add
fs
ins
icebp
cmp
pop
enter
cld
out
mov
cmc
jb
daa
inc
in
mov
push
pop
test
pop
add
retf
cmp
xchg
rcr
mov
movs
xor
lahf
ss
bound
jo
pop
or
mov
idiv
ret
jp
cmp
adc
int3
dec
lahf
dec
jno
push
add
cwde
pushf
push
mov
sbb
jmp
jno
cld
xor
sub
inc
jecxz
sahf
mov
add
or
fdivp
loopne
xchg
out
push
pop
xchg
mov
sbb
or
sub
push
jg
ret
lahf
mov
push
lock
push
pushf
les
or
ss
lahf
outs
hlt
lea
js
(bad)
cld
jp
fisubr
inc
or
cs
ins
call
add
(bad)
scas
mov
cmp
inc
mov
mov
inc
xchg
and
outs
mov
jge
sub
push
sbb
cmp
mov
mov
repnz
cmp
push
shl
movs
shl
dec
test
pop
out
pop
xchg
je
add
sbb
imul
lock
inc
pop
pop
cmp
je
cmp
and
inc
(bad)
push
sub
addr16
jl
jno
ret
outs
addr16
inc
into
rcr
mov
mov
mov
fs
pop
mov
mov
(bad)
push
pop
push
mov
out
pop
shl
sub
dec
aam
adc
lods
nop
xchg
xchg
dec
add
je
adc
lods
lds
repz
and
(bad)
push
cld
jno
cmp
aas
xchg
pop
daa
je
dec
jae
ins
(bad)
in
inc
bound
leave
push
and
in
adc
gs
jmp
mov
ret
dec
dec
and
mov
add
sahf
dec
arpl
mov
push
js
sub
hlt
or
cmp
out
push
adc
mov
(bad)
cli
or
push
int3
ds
dec
mov
stos
cmp
adc
loopne
dec
imul
sub
xor
out
je
mov
dec
jae
cld
jecxz
sub
inc
lods
mov
fimul
mov
lea
push
pusha
push
add
(bad)
cmp
stc
mov
mov
repz
xor
jnp
in
mov
pop
aam
test
xchg
or
ret
sub
in
loopne
cdq
sbb
inc
and
popf
cmps
repnz
ds
mul
ss
jle
movs
loop
sub
popa
loop
jnp
jg
div
aad
shl
xchg
not
xchg
loopne
and
sub
inc
mov
mov
aad
or
das
imul
mov
shr
aaa
div
(bad)
xchg
movs
stos
leave
push
pop
jbe
xor
div
cmps
mov
lods
jbe
push
stos
add
lods
outs
mov
enter
pop
fld
cwde
cdq
xor
repz
ins
das
xchg
scas
call
iret
xor
popf
jne
xchg
jg
js
mov
movs
stos
jmp
mov
les
inc
ret
mov
jmp
inc
aas
mov
inc
jo
pop
fadd
aad
es
outs
inc
bound
mov
fisubr
aas
data16
out
dec
(bad)
fsub
xor
jnp
out
pop
xchg
pop
stc
fidiv
xchg
or
adc
fdiv
and
add
jae
leave
mov
push
nop
addr16
call
jo
fstp
add
xchg
lea
retf
ins
cmp
push
test
popa
test
cld
fld
sub
add
adc
push
ret
xor
xor
inc
in
out
pop
imul
sti
stc
inc
test
adc
push
sbb
xchg
xchg
cmc
sub
popa
in
retf
push
cli
cmps
mov
sbb
popa
push
loopne
inc
or
out
cld
jns
not
cmp
test
data16
add
out
push
test
mov
and
sti
add
inc
xchg
cld
pop
(bad)
push
inc
addr16
or
push
sbb
test
int
pop
jl
mov
push
push
sub
add
inc
push
xor
das
test
stc
(bad)
stos
clc
mov
mov
inc
fcmovnb
loopne
aam
cld
call
jo
mov
das
sbb
dec
cmp
cmc
and
hlt
fstp
mov
push
jo
fst
hlt
sub
mov
(bad)
aaa
dec
cmpxchg
fimul
mov
arpl
outs
sub
mov
idiv
xor
xchg
and
mov
icebp
retf
pop
push
dec
icebp
dec
sbb
inc
fadd
xchg
out
scas
cmps
mov
jge
outs
dec
push
cmp
data16
aad
es
in
jae
imul
icebp
pop
les
jne
add
hlt
xlat
mov
mov
and
cmp
xchg
push
mov
fisub
ret
sbb
jo
cmp
pop
sub
xchg
(bad)
es
sar
fs
jle
cwde
shl
push
cdq
add
xchg
push
in
sub
ss
popf
jmp
mov
sub
fwait
rol
hlt
dec
shl
in
enter
inc
ret
cs
adc
sbb
mov
mov
movs
or
pushf
dec
retf
mov
loopne
fs
repz
std
loop
inc
sbb
xchg
mov
in
jns
and
outs
dec
inc
(bad)
(bad)
jmp
pop
(bad)
pop
add
popf
inc
mov
iret
cmp
fwait
sub
(bad)
jmp
test
ins
fisubr
mov
or
(bad)
int3
repnz
jmp
iret
cmp
cmp
gs
into
sub
sub
sbb
les
xor
jl
(bad)
jg
adc
ret
cli
xchg
scas
mov
cdq
mov
and
push
dec
fldcw
mov
sbb
push
mov
mov
stos
or
mov
cmc
pop
and
sbb
mov
mov
push
jmp
mov
call
js
mov
jl
aas
mov
stc
dec
or
inc
mov
rcl
jb
std
nop
sbb
add
(bad)
push
mov
and
pop
pop
mov
xor
mov
jmp
mov
ret
cmp
xchg
mov
std
fs
jno
mov
adc
mov
inc
pop
dec
je
outs
frstor
adc
les
mov
pop
loop
push
adc
jecxz
loop
jns
sbb
(bad)
fnstsw
sub
sbb
sub
push
mov
outs
bound
dec
mov
in
nop
sub
mov
imul
clc
dec
enter
mov
mov
push
lea
xchg
jmp
xchg
push
and
fsubrp
loopne
pop
push
cwde
pop
bnd
daa
lds
(bad)
sub
xchg
aad
sbb
add
out
and
repnz
dec
jo
sbb
shl
mov
(bad)
push
int3
dec
jmp
test
and
nop
push
inc
lods
adc
xor
mov
out
das
mov
sbb
lods
add
(bad)
push
outs
pop
mov
mov
ucomiss
repz
push
in
repz
sar
in
xor
pop
inc
out
movs
in
mov
inc
dec
mov
fadd
inc
test
dec
int3
jno
retf
push
jbe
fild
mov
adc
mov
mov
lock
aas
neg
jle
mov
sbb
pushw
fimul
imul
jbe
or
jle
out
outs
add
and
push
or
or
mov
(bad)
add
adc
xchg
loop
and
xor
(bad)
std
scas
cmp
inc
xchg
sub
popf
dec
dec
and
rol
cmp
ins
or
mov
xor
dec
(bad)
jbe
jle
ret
sbb
sar
mov
shr
stc
sub
loop
mov
(bad)
lods
mov
cmp
arpl
mov
jp
xlat
mov
push
mov
cmp
daa
mov
inc
push
out
xchg
je
mov
retf
pusha
shl
ret
in
cmp
sbb
clc
ret
xchg
ror
jns
mov
std
cmps
fdivrp
ins
and
pop
jne
cmc
cwde
mov
cmps
sahf
jnp
(bad)
jae
adc
jns
xchg
xchg
aas
xor
cs
stos
retf
add
pop
cmp
clc
sub
(bad)
out
ds
movs
xchg
mov
mov
sbb
hlt
add
or
sub
ret
stos
xchg
fsub
pushf
xchg
mov
retf
add
arpl
in
rol
jne
loop
push
push
cmp
in
ins
dec
test
movs
inc
das
mov
call
push
adc
jo
dec
gs
mov
mov
clc
pop
les
inc
jl
jg
mov
int3
adc
fst
lods
ror
fcmovne
jno
jg
xor
jbe
repz
mov
into
loopne
xchg
movs
leave
test
dec
sbb
test
addr16
xor
cmps
das
lock
ret
addr16
lahf
test
ins
ds
aas
in
fstp
jns
out
adc
int3
or
dec
push
repz
cmp
mov
cmp
inc
ja
mov
in
jno
adc
jmp
xchg
shr
or
outs
mov
push
dec
gs
push
enter
or
movs
cmp
fnsave
mov
pop
cmp
push
nop
xor
in
pusha
sub
imul
daa
pop
xchg
cdq
push
jg
inc
xchg
fbld
popa
cld
xchg
pop
test
in
cmp
adc
fs
stos
push
mov
cmc
push
and
dec
push
pop
xor
ss
pop
mov
and
xor
mov
mov
movs
mov
push
retf
and
add
jmp
call
fnstcw
mov
and
push
inc
aad
sbb
sbb
mov
mov
pusha
adc
mov
push
div
imul
aam
lea
daa
push
sbb
popa
pop
popa
mov
ins
test
mov
jl
outs
jge
mov
scas
test
push
inc
pop
pop
mov
shl
outs
mov
mov
sti
movs
ret
mov
and
(bad)
pop
xchg
sub
imul
pop
neg
xor
lods
dec
clc
repnz
(bad)
mov
jge
ror
and
fdivr
add
sbb
push
sbb
sbb
cmp
pop
gs
and
push
lahf
daa
call
jmp
mov
inc
pop
arpl
xchg
mov
mov
cmovle
lahf
push
or
std
push
add
fild
xchg
push
leave
sbb
out
push
add
cmp
test
and
jle
pop
push
pop
inc
arpl
stos
mov
jl
jge
cmp
xchg
mov
out
add
xor
ja
dec
fadd
jmp
mov
jecxz
movs
rol
inc
xchg
adc
jns
mov
int
sahf
pop
iret
jge
inc
fsubrp
mov
div
and
ins
imul
push
int
adc
(bad)
adc
push
mov
cmp
sub
jmp
mov
mov
cmp
mul
loop
cmp
es
jbe
sbb
(bad)
out
mov
imul
mov
div
mov
jb
cs
cmp
mov
sti
pop
lds
cmc
in
fiadd
jo
push
neg
leave
ret
gs
mov
cmps
mov
int
int
cmp
(bad)
xchg
sub
adc
mov
jge
test
adc
test
aad
mov
mov
shl
movs
aad
mov
neg
fnstcw
and
into
push
jmp
xchg
sub
stc
loope
lods
jmp
mov
mov
xor
push
rol
ret
push
or
pop
pop
les
rcl
data16
not
push
sbb
(bad)
jle
cmp
shl
jb
loopne
scas
hlt
or
jb
in
jbe
imul
(bad)
in
test
cmp
jp
lods
inc
adc
(bad)
sbb
retf
push
xchg
and
(bad)
jge
pop
sub
out
inc
xchg
pop
pop
sti
mov
and
jmp
adc
cdq
pop
sahf
pop
push
cmps
mov
push
fs
repz
aad
jp
sahf
mov
xor
bound
popf
mov
jo
out
adc
mov
jne
xor
sbb
call
xchg
and
add
xlat
icebp
out
mov
daa
xlat
mov
xchg
jecxz
sub
xor
jp
xlat
dec
push
gs
dec
sbb
inc
jo
add
and
call
in
xor
in
dec
add
mov
xchg
mov
jns
inc
sti
or
jnp
xchg
out
dec
test
jns
and
ins
inc
adc
mov
sbb
dec
jmp
push
arpl
and
jae
imul
fiadd
jbe
in
lea
ins
(bad)
popa
pop
push
sub
or
repnz
xor
adc
js
sbb
jp
sbb
mov
jno
mov
daa
sub
jo
ror
jp
xchg
mov
mov
bound
in
fisub
in
pop
mov
xor
ins
cmp
call
movs
nop
mov
test
nop
ins
movs
xchg
push
loope
mov
(bad)
xchg
repnz
xor
push
fwait
push
or
dec
leave
sub
adc
jno
jno
jo
jp
stos
mov
or
xchg
mov
mov
jne
lock
pop
jnp
iret
cwde
test
sbb
dec
inc
or
sub
pop
repnz
sahf
out
xchg
imul
jg
xchg
mov
add
and
lea
cs
call
inc
test
ret
jge
mov
mov
icebp
out
and
rep
std
rcl
lahf
scas
clc
jmp
lods
pop
dec
aad
stos
pop
out
enter
stc
out
fmul
in
jbe
mov
pop
fcomp
js
push
movs
or
loopne
lahf
sub
sbb
into
outs
jmp
rcl
ins
jmp
fwait
pop
push
(bad)
aas
popf
pop
pushf
mov
(bad)
jecxz
imul
aas
cmp
rcr
stc
add
sub
inc
mov
jb
test
retf
fimul
dec
mov
or
imul
sbb
push
mov
fisub
rcl
je
adc
ret
pop
cmc
cs
fisubr
mov
hlt
cmp
js
repz
arpl
imul
jle
mov
mov
into
ins
adc
ss
adc
les
pop
lock
mov
cmp
push
and
cmp
int
push
fs
fnop
pop
es
cmp
xchg
aam
lea
push
enter
jecxz
hlt
and
popf
aam
aaa
or
mov
lods
in
push
repnz
fadd
popa
ja
call
pushf
mov
sub
imul
mov
pop
stos
outs
call
push
push
sub
xor
sub
repz
inc
jl
mov
in
leave
leave
jne
cmc
mov
mov
mov
lahf
jmp
push
cli
mov
test
push
jmp
or
out
loop
pop
add
xor
retf
push
fist
fsubrp
sahf
lock
rcl
jg
xchg
jmp
inc
pop
sbb
sbb
call
jmp
leave
or
sti
add
rcr
out
lods
mov
mov
adc
add
call
mov
dec
cmp
jp
fs
add
dec
fist
xchg
or
in
push
int
sbb
jns
imul
gs
aaa
cmp
push
(bad)
int3
sbb
je
pop
int3
out
scas
xchg
je
push
dec
clc
lods
mov
mov
mov
add
push
push
jg
dec
dec
ins
cli
xchg
mov
hlt
mov
fst
loopne
adc
mov
ja
out
xchg
test
xchg
adc
xor
mov
cmp
sbb
sbb
sti
push
mov
stos
mov
mov
scas
cmp
add
test
stos
es
dec
retf
push
stos
xchg
dec
xor
sbb
fstp
xchg
xor
adc
fbstp
ds
mov
stos
inc
xor
push
lahf
inc
cmp
mov
pop
jnp
push
loop
and
stos
retf
dec
jmp
cwde
fwait
jnp
out
jmp
xor
ins
call
sub
and
inc
lods
aam
push
test
xlat
mov
mov
mov
add
cmp
jb
push
(bad)
mov
or
(bad)
mov
les
dec
xchg
pop
cmc
cmp
ins
jl
inc
xchg
mov
jge
mov
fstp
mov
or
mov
loope
scas
montmul
cmps
xchg
adc
push
and
ins
ja
ins
sub
out
sbb
add
dec
mov
pop
and
dec
fcom
sub
jae
jl
push
lahf
sbb
mov
int3
sub
in
dec
aas
sbb
add
mov
ins
push
lahf
shr
ret
sub
cs
loop
dec
sbb
rol
loopne
mov
mov
or
cmps
xchg
lds
xlat
aam
push
mov
faddp
push
in
outs
bound
(bad)
int3
jmp
shl
sbb
dec
jecxz
test
test
iret
ja
das
sub
jb
test
or
repz
data16
adc
ins
mov
xor
push
in
add
mov
dec
adc
xchg
je
scas
xchg
push
hlt
not
pop
push
movs
fucom
stos
push
ret
test
in
mov
ss
dec
sbb
out
dec
ins
or
test
cmc
adc
push
sub
push
jmp
imul
mov
push
push
test
jnp
jne
push
jmp
call
inc
jmp
hlt
sbb
mov
clc
mov
jp
xor
fadd
mov
loope
fs
adc
daa
jno
push
xor
mov
sub
inc
push
pushf
dec
ret
adc
mov
sbb
les
movs
mov
dec
or
nop
sbb
cmp
mov
jno
mul
fwait
hlt
dec
dec
pusha
jae
shl
push
shr
push
iret
rcr
jbe
push
int
mov
xor
int
mov
jl
sub
(bad)
and
lock
aad
add
je
mov
ins
ret
mov
out
movs
cmp
xor
inc
mov
xchg
je
mov
inc
mov
adc
xor
(bad)
(bad)
mov
or
pop
push
xchg
in
sbb
mov
inc
imul
or
xchg
aaa
je
push
in
push
mov
mov
pop
jb
cmc
adc
xchg
shl
jecxz
shr
xchg
shl
xor
paddd
pop
dec
retf
iret
pop
mov
pop
imul
punpcklwd
inc
cmps
cmp
imul
test
out
or
lods
ins
cmps
outs
sbb
adc
jb
add
clc
fimul
js
int
mov
jbe
mov
pop
mov
xchg
out
movs
or
ja
push
and
mov
or
jmp
mov
mov
sar
or
xor
jge
rol
fistp
mov
aaa
mov
mov
int
movs
shl
outs
iret
mov
lds
push
lds
xchg
into
add
cwde
stos
jmp
cmps
mov
ret
xor
repz
jge
ins
in
ja
xchg
movs
sbb
ret
xchg
pop
mov
ret
dec
sub
sbb
int
aad
fsub
movs
and
fist
mov
shl
rcl
in
rcr
jae
inc
pop
outs
loopne
fcmove
repz
jns
inc
sbb
rcl
mov
and
mov
push
ret
fstp
std
mov
push
jo
or
rcr
outs
mov
adc
call
sub
sbb
mov
(bad)
xlat
adc
mov
adc
or
ret
in
add
lock
sub
mov
(bad)
setl
loopne
inc
and
dec
or
or
push
hlt
sbb
and
int3
cmp
out
(bad)
cld
sbb
rcl
cmp
mov
push
out
fs
icebp
xchg
inc
in
(bad)
push
add
mov
xor
repz
movs
xchg
or
push
or
mov
aam
and
push
mov
out
inc
ficom
in
jl
add
imul
pusha
imul
jns
out
add
imul
jns
ror
loopne
cdq
push
push
lea
iret
imul
std
mov
adc
sbb
idiv
or
or
aad
dec
push
lea
outs
xchg
and
movs
dec
in
mov
and
and
add
and
es
xchg
popf
icebp
maxps
xchg
mov
call
loop
adc
pop
jnp
popa
sub
out
mov
in
sub
mov
mov
arpl
jnp
arpl
lods
inc
or
cmp
into
or
(bad)
out
add
fdivr
not
(bad)
outs
push
xor
(bad)
jge
shl
retf
leave
je
push
dec
adc
pop
mov
sahf
(bad)
xor
mov
cwde
or
jnp
sbb
push
test
add
pop
pop
mov
rol
cwde
fcomip
stos
retf
test
add
cmp
aaa
sbb
ror
je
inc
inc
push
mov
jbe
mov
push
inc
mov
fidivr
loop
stos
lock
cld
adc
in
cmp
or
sub
sub
test
adc
inc
arpl
sbb
jne
pop
jmp
add
xor
loopne
xchg
sub
popf
dec
xor
cs
mov
popa
js
retf
pop
test
mov
(bad)
pop
jns
js
xchg
leave
sub
pop
cld
cmp
outs
outs
cmc
mov
in
cdq
(bad)
mov
pop
cwde
sub
push
dec
or
mov
inc
sub
xchg
std
cmp
popa
scas
cwde
pushf
add
mov
(bad)
mov
cmp
mov
mov
stos
ret
adc
clc
dec
dec
dec
rcl
mov
xor
cmps
clc
mov
fldenv
or
xchg
and
fsubr
repz
adc
mov
inc
sub
pop
or
mov
jmp
iret
add
add
ret
xchg
test
adc
jg
(bad)
mov
and
stos
xchg
stos
sbb
ins
pop
push
(bad)
xor
mov
scas
je
mov
packuswb
hlt
enter
stos
jb
jbe
cmc
imul
xchg
outs
repz
in
mul
and
test
mov
test
xor
mov
add
icebp
outs
test
popa
inc
addr16
inc
jb
sti
stc
pushf
mov
jno
rcl
add
mov
loop
cmps
cmc
push
or
addr16
xor
pop
sbb
rcl
sbb
dec
cmp
enter
leave
dec
and
jecxz
test
dec
inc
das
sbb
stos
add
sub
xchg
jg
fsubp
fsubr
pop
sar
xlat
pop
popa
inc
cmps
cmp
xchg
ret
xchg
sub
pop
fcomp
inc
push
clc
adc
fistp
push
or
inc
jg
enter
sub
mov
fmul
inc
inc
add
cmps
outs
mov
retf
shr
and
cmp
push
add
jge
sbb
xchg
clc
adc
fsubr
add
das
dec
pop
aas
xor
add
sbb
or
mov
and
mov
xor
mov
repz
stc
dec
lods
int3
push
fbstp
mov
or
pop
adc
cmps
ret
mov
mov
loope
rcl
adc
fcomp
mov
adc
ss
xor
lea
mov
mov
inc
sub
std
popf
jo
sub
xlat
push
push
imul
or
rcr
pop
in
xchg
cmp
ins
imul
mov
xlat
jp
stc
cs
mov
imul
pushf
scas
jp
inc
mov
gs
pop
loope
mov
nop
loop
add
mov
repnz
mov
lahf
outs
mov
(bad)
dec
jp
xchg
inc
ins
rcr
popa
jne
ror
data16
dec
and
outs
js
adc
iret
jmp
pop
lods
cmp
sti
xchg
fsubp
push
mov
sub
(bad)
push
(bad)
mov
leave
mov
push
jmp
ret
mov
sbb
jbe
xor
je
cli
sub
popf
fnsave
sub
mov
rol
mov
int
push
inc
xlat
fild
outs
out
push
cmps
test
arpl
nop
daa
jo
cmp
or
cld
mov
cdq
popa
iret
jo
jae
jnp
popa
div
cli
inc
outs
push
mov
and
sub
fcom
lock
jb
shl
scas
cwde
dec
mov
nop
jo
sub
loop
xor
popa
xor
enter
nop
pavgb
jae
daa
lods
lahf
scas
pushf
stc
xor
lods
ins
or
retf
repz
add
outs
lahf
adc
add
cmc
and
ja
int
add
mov
jb
xchg
pop
in
add
lahf
test
add
ror
or
sahf
jmp
sbb
stos
outs
jp
mov
repnz
out
hlt
xchg
jg
push
fs
std
pop
fisubr
push
jmp
nop
push
xchg
mov
iret
out
mov
fcom
ins
adc
mov
mov
cdq
arpl
inc
mov
jbe
push
xor
inc
fld
or
cmps
sahf
sub
mov
aaa
mov
or
mov
sahf
jb
dec
jno
ds
push
inc
je
shl
or
out
fldcw
in
mov
movs
mov
push
rol
push
aam
inc
push
and
scas
add
sub
xor
sbb
or
fidiv
(bad)
cmp
test
mov
fdiv
retf
std
outs
xchg
retf
dec
jecxz
in
cli
shl
or
in
cmps
(bad)
cld
jge
mov
retf
shr
mov
jmp
jae
sbb
and
loope
sub
ins
push
test
cmp
scas
push
cmp
cmp
das
xchg
jge
xor
and
retf
pusha
xor
and
jg
pop
repz
cmp
mov
push
or
pop
add
mov
and
sub
push
mov
movs
jp
jbe
sbb
add
popa
or
jmp
mov
pop
(bad)
ss
and
mov
jb
add
cmp
pop
lods
dec
cmp
call
in
xor
rcl
cwde
out
jmp
cmp
inc
pop
pop
cwde
mulps
pop
mov
mov
add
jmp
lahf
or
and
push
shr
fimul
sahf
ret
push
arpl
fstp
call
xchg
movs
add
add
dec
jecxz
pushf
pcmpeqd
jmp
inc
scas
lods
movs
push
push
sub
and
hlt
hlt
inc
(bad)
in
pop
out
fimul
bound
sub
mov
push
mov
and
stc
mov
(bad)
jns
scas
push
int
xor
rol
lods
mov
adc
sbb
repnz
cmp
lahf
lahf
or
ins
leave
retf
mov
xor
push
lock
cmps
ds
sub
icebp
push
mov
fnsave
hlt
movs
and
push
sub
cmp
shl
cmp
push
mov
int
dec
mov
scas
cmps
pop
test
push
inc
and
es
xlat
inc
or
push
or
xor
add
test
inc
mov
es
fwait
or
mov
shl
rol
jle
inc
mov
lods
pop
clc
fild
mov
sbb
test
mov
mov
xchg
xor
ss
mov
push
and
repnz
sub
pop
xor
cmp
pop
xchg
inc
cli
cli
add
shl
push
cmp
xor
mov
push
sar
and
(bad)
(bad)
mov
ds
adc
pushf
loop
movs
add
xchg
es
lea
adc
cmps
mov
or
pusha
pop
cmps
add
jecxz
test
cmp
push
fstp
mov
movs
icebp
hlt
sub
movs
test
cmps
or
mov
sbb
pop
cmp
mov
mov
ret
(bad)
int
mov
mov
sar
and
jns
movs
not
inc
lahf
test
(bad)
jbe
test
inc
clc
dec
sub
pusha
inc
(bad)
or
cmp
(bad)
jae
pop
add
cwde
out
das
shl
mov
pop
adc
aas
stos
and
jmp
cmp
adc
push
dec
dec
xor
nop
fs
das
jg
sub
xchg
add
jb
js
or
add
mov
mov
jmp
sub
jg
mov
and
or
jmp
jg
leave
lods
adc
fisubr
cmp
push
add
cwde
xchg
loope
ret
add
push
imul
push
add
mov
sub
stos
xor
pusha
mov
push
inc
sar
adc
loop
xor
push
int
lds
add
rcr
xchg
xchg
push
sbb
int
mov
add
jg
pop
push
test
jnp
xor
test
repnz
xchg
pmuludq
jp
scas
sub
test
mov
cmps
ss
call
cmps
xor
xchg
cmp
js
arpl
retf
push
xor
mov
xchg
push
scas
cmp
out
or
sbb
lar
cmps
in
adc
into
sbb
fs
mov
lds
aad
pop
ror
sub
xchg
xor
or
dec
in
fwait
data16
dec
dec
in
out
jmpw
push
out
and
inc
jg
inc
sub
mov
xchg
adc
inc
push
dec
pop
adc
pop
cmp
fsub
aam
std
icebp
cli
hlt
cmp
test
xor
sbb
cmp
jp
sub
mov
or
jmp
call
xchg
adc
cld
xchg
adc
jmp
pushf
loopne
cmp
bound
pop
pop
push
pop
(bad)
fwait
leave
mov
test
xlat
pop
in
pop
dec
cmps
fimul
aad
stc
mov
ret
lea
xchg
pop
mov
or
cmps
mov
dec
pop
pop
shl
add
rcr
sub
int
cmps
push
enter
xchg
dec
push
mov
mov
cmp
dec
retf
(bad)
cmp
fucom
repnz
div
shr
ret
jge
or
push
out
fsubr
adc
inc
ins
ret
xchg
mov
nop
jo
adc
movs
dec
xor
pop
adc
xor
mov
sbb
outs
sti
push
sar
xchg
sar
mov
iret
int3
data16
sbb
enter
mov
sbb
sbb
cdq
or
sbb
mov
(bad)
addr16
push
or
fld
js
add
gs
pop
xchg
push
(bad)
loope
mov
aad
inc
out
jae
xchg
dec
add
test
movs
push
mul
shl
repz
lea
and
stos
mov
pop
dec
inc
adc
(bad)
jg
leave
xchg
repz
sub
dec
push
push
dec
hlt
ins
mov
sbb
push
xchg
gs
dec
adc
sub
lock
xchg
inc
cs
or
rol
retf
or
dec
and
jge
sbb
dec
fisub
mov
adc
lods
cmp
xchg
sbb
mov
xor
test
rol
cs
inc
hlt
push
xor
jmp
dec
sub
bound
aad
sti
jge
outs
mov
stc
rol
push
dec
(bad)
inc
prefetch
jmp
pop
lods
push
sub
std
and
fbstp
fbld
jo
in
loope
jl
xor
add
cmp
pop
and
loop
sub
and
mov
mov
xor
jp
je
hlt
sub
cdq
in
std
inc
fs
pop
popf
push
jge
cmp
cmp
mov
pop
add
push
xor
daa
inc
enter
std
xor
mov
scas
movs
pushf
and
fisttp
lods
clc
es
(bad)
ins
stos
dec
enter
sbb
ficomp
ret
ins
push
ins
je
jae
(bad)
and
inc
mov
pop
mov
xor
shl
aas
jmp
fsubr
dec
scas
fmul
xchg
sbb
aad
out
ret
dec
rcl
int
(bad)
call
arpl
mov
dec
faddp
jp
(bad)
jg
scas
add
jg
gs
outs
in
or
dec
pop
popa
sub
jnp
inc
aam
loop
xchg
rol
mov
loop
mov
jl
push
sub
in
jp
mov
mov
push
into
pop
pop
(bad)
cmp
stos
sbb
mov
dec
or
addr16
mov
jb
add
mov
fsubr
ret
xor
jmp
imul
push
pop
dec
ret
cmp
jne
xor
dec
inc
mov
push
adc
dec
mov
add
ins
pop
bound
sub
in
jecxz
in
add
aam
mov
inc
pop
aas
test
dec
push
loop
mov
test
fcmovbe
xchg
lods
and
xchg
pusha
movs
jnp
mov
mov
mov
sbb
pushf
hlt
xchg
inc
adc
pop
mov
shl
int
inc
jnp
inc
stos
out
popf
stc
pop
pop
sub
loopne
push
clc
dec
retf
(bad)
std
clc
js
loopne
imul
int
out
cmp
add
xchg
pusha
jecxz
out
outs
pop
popa
icebp
repz
stos
call
and
mov
adc
retf
push
cdq
cmp
adc
xor
push
ror
push
add
sbb
jnp
test
cld
les
jge
jge
mov
xor
in
shr
das
sahf
ja
fadd
pop
shl
mov
jb
out
call
clc
fs
mov
cld
in
scas
add
mov
sar
enter
cmp
cmp
lock
inc
mov
adc
aaa
retf
or
dec
jae
push
in
add
jae
and
call
mov
dec
dec
cmp
in
cmp
enter
out
mov
stos
pcmpgtw
test
mov
sar
popa
and
ret
xchg
cwde
mov
data16
xlat
fstp
out
jl
ret
pop
mov
imul
mov
icebp
xor
cmp
shl
pop
movs
nop
ds
or
sbb
outs
imul
imul
jb
test
fneni(8087
pusha
hlt
movs
out
sub
xor
mov
out
xor
mov
push
(bad)
pop
mov
push
adc
int
mov
mov
mov
mov
nop
adc
inc
xor
inc
xor
push
cli
adc
loop
and
mov
xor
data16
xor
(bad)
popf
xor
sbb
sub
pop
inc
sbb
cmp
add
xor
jg
jle
bound
imul
maxps
jle
mov
inc
shl
fdivp
sar
test
fcmovu
push
movs
ret
mov
jmp
(bad)
adc
rcl
aam
dec
lods
cmp
loop
fbld
aad
jnp
call
pop
cmps
pop
sbb
fimul
sbb
std
inc
fistp
mov
dec
mul
mov
push
dec
in
mov
fs
(bad)
sub
xchg
iret
retf
sbb
add
xchg
arpl
icebp
cmp
imul
out
lds
out
mov
in
rcl
mov
ret
or
or
pop
inc
push
adc
jle
fisub
mov
or
ins
adc
add
and
mov
and
(bad)
push
or
fwait
mov
test
or
dec
in
or
cmps
jo
xchg
shl
shl
ja
push
or
and
fwait
neg
jle
push
pop
stos
push
adc
lahf
leave
loop
cmc
pop
call
cmc
inc
mov
scas
dec
(bad)
mov
sbb
pop
inc
mov
div
pop
push
jle
std
fmul
inc
lahf
dec
or
out
std
jge
jns
sub
push
pop
int
les
inc
mov
fdiv
sbb
adc
inc
rol
sti
xor
xchg
test
lods
jle
in
pop
nop
dec
ja
(bad)
retf
js
mov
pusha
addr16
inc
dec
es
add
call
cmps
and
mov
mov
sar
mov
shl
shr
mov
jnp
outs
mov
mov
shr
xor
sub
lahf
mov
mov
(bad)
repz
outs
mov
jge
adc
push
fwait
into
aam
cmp
shl
stc
pop
adc
je
mov
xchg
pop
repnz
retf
cmp
(bad)
adc
mov
loope
call
icebp
pop
sahf
int
fwait
aas
pop
xchg
push
jle
xchg
fistp
pop
mov
mov
repz
inc
pop
pushf
cmp
(bad)
dec
add
int3
jecxz
test
push
push
cmp
sbb
mov
ror
adc
cmp
bound
sub
test
leave
rcl
mov
adc
(bad)
xor
popf
and
mov
cdq
xchg
jmp
jmp
out
mov
adc
mov
jnp
retf
imul
push
fwait
lds
in
rcr
adc
es
sbb
test
mov
bound
lds
fstp
dec
jb
dec
(bad)
int
inc
mov
push
popf
outs
adc
arpl
sbb
rcr
pop
xor
dec
mov
xor
cmps
dec
in
icebp
add
inc
sahf
mov
sbb
sbb
sbb
sub
push
out
push
add
mov
mov
inc
mov
xchg
jmp
pusha
neg
jge
je
pop
mov
add
pop
add
add
icebp
dec
mov
xchg
add
jmp
pop
pop
aam
out
sbb
jne
mov
sub
shl
adc
add
shr
retf
push
fadd
popf
aad
mov
call
sub
imul
sbb
adc
(bad)
in
xchg
iret
sub
or
xor
ja
idiv
test
outs
into
inc
mov
jne
mov
inc
gs
adc
faddp
or
or
aad
stc
xchg
sar
or
or
mov
sbb
mov
adc
(bad)
fisubr
add
xchg
out
xchg
xor
pop
sbb
mov
adc
push
cmp
or
out
and
or
jae
loopne
loopne
mov
in
adc
mov
lods
movs
inc
mov
sbb
cmp
mov
data16
rcl
inc
cmps
jno
cs
fucomi
js
retf
into
jae
jg
jns
xor
push
inc
ret
(bad)
gs
add
arpl
mov
in
(bad)
fisttp
or
call
repz
push
outs
int
sub
xchg
dec
mov
out
fcom
push
int
xchg
xchg
push
sbb
popf
xor
mov
stos
test
pop
push
shl
pop
mov
push
dec
xchg
and
nop
int3
dec
inc
inc
cmp
imul
pop
mov
into
loopne
mov
push
add
cmps
mov
cmp
arpl
pop
lea
scas
mov
sbb
sbb
push
mov
jae
jae
ss
shl
push
rol
addr16
call
leave
stos
imul
cwde
dec
mov
mov
mov
mov
xchg
sub
test
cs
or
out
add
xor
xlat
mov
jmp
sbb
lods
mov
retf
nop
mov
rcr
fisttp
mov
add
(bad)
pop
cmp
test
pop
pusha
xchg
mov
dec
popf
and
fwait
sbb
mov
mov
fadd
adc
fcmovnb
imul
mov
sub
fld
imul
fistp
dec
mov
push
(bad)
jmp
mov
sbb
mov
jl
push
inc
fidivr
ins
and
rol
aas
pop
jo
dec
cdq
push
and
push
dec
stos
xor
mov
push
push
lods
or
and
jg
jp
shr
sub
jmp
(bad)
shr
popa
add
lds
pop
mov
test
fist
pushf
sahf
cli
movs
mov
fist
les
inc
push
cmp
inc
fcom
adc
xchg
outs
dec
mov
pop
dec
sbb
movs
imul
cmp
cld
retf
pop
scas
sbb
adc
in
je
test
inc
fnstcw
loop
jbe
sbb
jg
push
xchg
cwde
push
in
push
fsub
sahf
cmp
cmp
mov
adc
in
or
adc
pop
xchg
sbb
adc
push
mov
mov
mov
inc
js
outs
loope
fsubr
adc
ds
pop
ror
ja
(bad)
push
add
add
sub
pop
addr16
ins
out
imul
jns
adc
in
xchg
das
data16
call
cmp
adc
je
jb
cmp
stos
jbe
popa
push
add
iret
stc
fistp
cmp
imul
test
xor
outs
xlat
inc
stos
je
shl
mov
jno
lock
or
mov
dec
fwait
xor
push
ss
jp
mov
gs
pushf
inc
pop
push
add
inc
arpl
lock
or
rol
add
(bad)
pop
cmp
cmp
(bad)
fisub
mov
nop
mov
push
dec
cmc
jbe
mov
out
outs
int3
test
push
mov
clc
pop
pop
push
pusha
in
stc
push
popa
pop
push
xchg
sbb
cmp
add
lods
push
xor
fwait
pop
inc
lods
dec
and
xor
mov
inc
test
cmps
sbb
int3
repz
movs
dec
xchg
sbb
out
and
and
cdq
sub
ins
fs
ret
jp
mov
daa
bound
js
jbe
jns
xor
jmp
jne
call
sar
test
dec
aas
and
push
sub
in
adc
(bad)
icebp
or
popa
mov
fnstcw
loopne
xor
shl
push
xor
pop
add
(bad)
stc
popa
retf
mov
stc
push
jmp
cwde
es
stos
push
cwde
xchg
sub
imul
inc
jns
mov
add
dec
rcl
or
das
shr
inc
in
sbb
cmp
cmp
sub
inc
and
xor
jmp
fwait
cmp
mov
stc
or
test
(bad)
xchg
xlat
and
outs
or
pop
sbb
mov
movs
sahf
xor
mov
push
fld
dec
or
jecxz
add
sub
jbe
aad
call
pop
mov
sub
lds
add
cmp
daa
sbb
cmp
lahf
jl
fist
retf
aas
and
lock
popa
lea
mov
test
ret
mov
sbb
stos
mov
jecxz
inc
pusha
jmp
xlat
inc
push
ret
or
inc
adc
std
push
arpl
in
in
push
pop
push
inc
inc
jl
jl
stos
jae
adc
sub
mov
xor
repnz
inc
and
or
push
pop
push
add
leave
mov
pop
mov
fistp
stos
mov
xor
mov
jecxz
stos
cli
pusha
imul
sti
cmps
jo
test
fst
jge
mov
inc
cmp
adc
data16
mov
mov
and
cmc
xor
std
push
mov
loop
int
out
xor
adc
icebp
cdq
jnp
jl
in
or
pop
xor
mov
mov
aas
fdiv
jl
fs
in
sahf
ror
xor
lds
fs
adc
aaa
lds
adc
sub
mov
les
add
jg
call
xor
hlt
jbe
push
out
mov
push
jg
jmp
jp
int
leave
mov
fxch
leave
fild
pop
sbb
or
add
stos
cmps
shl
aaa
(bad)
int3
adc
mov
sub
adc
retf
mov
adc
mov
retf
mov
inc
pop
push
cmp
retf
jae
adc
jnp
sub
lds
rol
and
test
mov
xor
sub
lahf
pop
adc
stos
dec
sbb
lahf
test
mov
outs
jbe
(bad)
inc
out
dec
cmp
movs
(bad)
call
and
jne
(bad)
and
rcr
cmp
xchg
jo
sbb
aam
cwde
push
xor
dec
cmp
loope
shr
dec
cwde
pop
dec
sbb
pop
jge
sbb
mov
add
(bad)
lock
sbb
stos
(bad)
sbb
sub
sub
test
sub
hlt
xchg
push
pushf
cmp
mov
dec
jecxz
hlt
sbb
fsub
jle
mov
mov
idiv
mov
push
pop
loopne
hlt
jmp
jecxz
mov
dec
add
xor
repnz
cmp
mov
inc
rol
jge
or
push
pmulhw
inc
loop
(bad)
fbstp
(bad)
aas
adc
adc
adc
popf
jecxz
xchg
fs
fst
loope
xor
jmp
pushf
(bad)
push
mov
pusha
fstp
scas
xor
adc
and
mov
retf
fptan
adc
das
cmp
mov
dec
mov
in
push
(bad)
sbb
test
in
or
in
mov
cmp
jle
inc
sbb
(bad)
call
aad
mov
mov
fcomp
in
ja
dec
push
cld
xor
shr
data16
sub
sub
xchg
cmc
xor
pop
cmps
inc
mov
iret
adc
pushf
sub
ret
and
out
imul
(bad)
mov
mov
mov
scas
adc
mov
sbb
xchg
jo
pop
add
int3
adc
into
test
out
and
xchg
out
(bad)
mov
adc
push
iret
push
mov
inc
fwait
inc
mov
add
in
sub
adc
mov
lods
dec
lea
test
aam
pushf
dec
adc
ror
sbb
fadd
fsubp
mov
xlat
pop
cmp
(bad)
rcr
push
pop
pop
(bad)
leave
adc
ret
adc
mov
cmp
cdq
gs
icebp
sbb
sbb
std
inc
hlt
in
cmc
sbb
jl
add
pop
jmp
and
cmp
call
adc
jnp
cmp
cmp
xor
mov
cwde
aas
xlat
inc
aaa
xchg
test
xchg
mov
(bad)
inc
and
cmp
lock
jecxz
sahf
jl
jge
cwde
shl
xor
and
cmp
cmps
jmp
mov
sar
popf
sub
aam
mov
in
xchg
pusha
ret
stos
ret
stc
push
(bad)
mov
mov
sti
(bad)
in
push
iret
popf
ins
sub
and
mov
or
das
stc
inc
xor
out
retf
xchg
mov
fdiv
pusha
repnz
cmp
pop
inc
int
ficom
bound
call
pushf
cmp
adc
pushf
pop
fiadd
out
inc
test
mov
mov
jmp
aas
imul
mov
and
(bad)
int3
xor
push
xor
cmp
push
jb
adc
imul
sbb
add
pop
xor
sahf
in
xlat
(bad)
pop
jno
je
retf
outs
loop
movs
jecxz
das
add
cmp
repz
mov
xchg
aas
in
add
and
jp
sub
sub
nop
cmp
ja
push
dec
pop
dec
das
jmp
mov
imul
inc
outs
jns
mov
push
jge
out
test
dec
shl
pop
inc
mov
imul
es
int
sbb
fistp
imul
mov
jmp
sahf
fwait
loope
movs
dec
xchg
jmp
mov
ret
popa
cli
mov
mov
inc
xchg
mov
cmp
xor
jle
pop
mov
adc
mov
pop
xchg
std
add
cli
daa
dec
bnd
add
fs
loope
push
xlat
inc
pop
adc
adc
xor
loopne
inc
adc
jle
aaa
gs
ds
jmp
push
cmp
movs
add
dec
cmp
add
les
and
lahf
sub
xor
retf
sub
mov
adc
mov
popf
sahf
xor
jb
xchg
pop
cmps
js
retf
aad
mov
adc
xor
(bad)
mov
mov
pop
int3
jb
mov
fwait
in
cmps
push
pop
aas
pushf
clc
mov
fisub
mov
aam
cs
jp
pop
inc
lea
lods
les
mov
sbb
add
mov
cmps
add
sub
aaa
pop
inc
mov
push
pop
xor
call
sbb
mov
dec
push
mov
mov
jo
fsubr
ins
call
mov
in
cmp
test
bound
fcmovne
add
inc
lock
imul
inc
mov
jnp
cmp
out
xor
jb
pop
push
add
cmp
dec
imul
sub
icebp
cli
sub
ins
ret
sar
leave
sub
je
scas
push
push
les
btr
cs
lea
stos
cmp
mov
les
jbe
xlat
xor
retf
js
xchg
mov
stos
adc
mov
mov
scas
lods
pop
icebp
or
stos
jge
pop
or
ss
inc
xchg
sbb
push
and
add
dec
and
or
add
rcl
movs
mov
les
mov
retf
fld
popf
daa
dec
xchg
stos
push
sti
mov
lahf
push
repz
ret
pop
fidivr
push
jbe
mov
or
or
add
fwait
aaa
add
pop
push
ins
dec
mov
(bad)
std
jp
xlat
push
fyl2x
pusha
jl
push
movs
push
adc
scas
hlt
cmps
in
push
cmp
test
xchg
mov
pop
dec
xchg
jmp
ds
stc
jne
jmp
enter
idiv
adc
loope
pop
sar
cmps
xchg
addr16
retf
xchg
inc
fidiv
in
mov
add
test
lea
or
push
push
jge
pop
call
pop
in
sbb
mov
popa
pop
cmp
lds
jb
out
(bad)
push
xchg
pop
jo
vmread
fmul
cmp
inc
cli
mov
mov
mov
xlat
loop
stos
stos
inc
cmp
test
jge
jl
je
inc
push
push
sbb
sub
lods
outs
popf
or
or
fs
sti
xchg
pop
out
sub
mov
scas
adc
mov
repnz
lahf
sub
int
psrlw
push
mov
fidivr
add
mov
sbb
out
ja
inc
or
nop
and
cmp
call
cmp
das
lock
mov
loop
jmp
(bad)
mov
mov
gs
out
lods
in
mov
add
das
sti
std
clc
dec
gs
aad
sub
mov
fld
shl
dec
sbb
dec
movs
and
mov
sahf
dec
mov
pop
or
icebp
push
retf
push
and
xchg
or
addr16
(bad)
loop
xchg
call
aas
dec
idiv
hlt
test
adc
inc
aaa
and
aad
cwde
or
stos
into
xchg
daa
inc
ret
push
and
popf
inc
jmp
ins
xor
cmc
fstp
and
add
sub
xlat
cwde
mov
dec
add
(bad)
fcomp
fistp
add
push
sti
jmp
int3
mov
add
xchg
cwde
xor
in
jg
push
xor
mov
lea
xchg
imul
loopne
cmp
jo
sbb
xchg
in
fisttp
outs
icebp
ret
xrelease
sub
jl
adc
call
xor
mov
pop
scas
fadd
mov
mov
bound
div
in
xor
jbe
scas
je
imul
ror
icebp
xchg
popf
(bad)
fwait
mov
pop
jmp
enter
push
xor
rsm
sub
mov
push
stos
lods
(bad)
in
or
(bad)
(bad)
iret
or
dec
xchg
(bad)
adc
cmp
mov
out
into
sbb
aas
adc
rol
xor
and
add
xchg
enter
fwait
test
xchg
adc
mov
pop
jo
aad
jl
push
mov
sbb
push
jne
retf
cmp
dec
adc
bound
jg
inc
and
leave
rol
fcmovnb
(bad)
out
fldcw
inc
cmp
pop
adc
pusha
mov
cmps
mov
xor
(bad)
fs
cmp
mov
idiv
fwait
ror
xor
rol
std
mov
push
jno
push
sub
mov
jge
jns
pusha
jp
jo
nop
sub
frstor
adc
xor
ins
outs
jg
stos
jl
les
int
or
scas
repz
cwde
jno
in
outs
(bad)
dec
and
fild
bound
inc
mov
out
push
movs
dec
loopne
push
addr16
cmp
push
imul
adc
nop
pop
stc
mov
rol
fnstenv
aas
push
mov
mov
add
cmp
ret
fwait
js
pop
pop
in
dec
pop
pusha
loop
push
ja
cdq
mov
sub
shl
popa
js
sub
es
inc
retf
sbb
add
popa
pop
inc
stc
cli
in
iret
rcr
pop
pusha
cmp
mov
xor
mov
mov
int
sub
sub
cdq
jmp
adc
cmp
mov
jle
test
adc
sub
(bad)
push
mov
mul
pop
popf
mov
je
dec
sbb
mov
hlt
dec
xchg
js
pop
push
aas
stos
xor
jmp
in
(bad)
jl
xchg
sbb
leave
outs
xchg
and
mov
outs
es
daa
jae
pop
lods
pop
daa
and
out
sub
inc
add
ficom
outs
nop
dec
ficom
out
in
or
imul
cmps
sub
outs
lds
and
mov
adc
nop
aam
jl
test
scas
jg
sub
mov
sub
in
in
cmps
es
push
movs
clc
and
ja
aam
pop
pop
outs
cmp
inc
imul
and
aam
mov
adc
bound
jnp
mov
mov
sbb
fdivr
push
sbb
mov
jno
dec
ret
push
scas
sbb
lea
loop
mov
mov
lahf
and
sti
adc
out
push
je
xchg
push
cdq
je
xchg
and
xor
shr
neg
ret
punpckldq
mov
mov
sub
movs
push
lods
pop
inc
mov
cmp
dec
add
xor
or
leave
arpl
add
dec
sub
hlt
inc
push
mov
cli
(bad)
retf
pusha
jbe
jg
add
std
test
aam
imul
not
xchg
push
(bad)
lods
dec
push
mov
gs
popa
and
mov
fadd
add
pop
neg
scas
mov
jl
les
lods
and
jp
jo
adc
and
movs
ins
cmp
mov
inc
pop
test
test
int
out
cmc
iret
xchg
pop
jge
fs
jl
jecxz
mov
mov
pop
iret
cmps
icebp
or
gs
leave
pop
das
shr
mov
mov
das
xchg
mov
xchg
cmp
das
clc
mov
mov
push
xor
js
push
xchg
cdq
jmp
xchg
lea
inc
cmp
mov
cs
add
fnstenv
popf
pop
pop
jne
add
call
xchg
jae
xor
bound
mov
add
dec
inc
test
adc
adc
out
out
fwait
and
cmp
loop
shr
leave
cld
inc
test
shl
and
dec
or
xor
sub
fcom
mov
sahf
and
les
loopne
mov
jne
xchg
adc
bound
mov
test
nop
fst
pop
ret
and
rcr
ror
cld
inc
in
lds
sbb
(bad)
cs
push
ret
adc
aaa
icebp
cmps
popa
fadd
repnz
lods
leave
jmp
stc
mov
cmp
xchg
or
sbb
xchg
jno
mov
rcr
mov
xor
mov
loope
pop
jp
nop
mov
push
xchg
aas
vpslld
mov
mov
pop
and
das
dec
(bad)
jno
aas
sbb
xor
lea
ret
in
(bad)
jecxz
(bad)
(bad)
jmp
arpl
jl
xchg
add
push
mov
sub
lock
daa
movs
xlat
not
pop
xor
push
ins
clc
popa
xchg
ja
in
or
add
test
fidivr
test
test
inc
jnp
ds
(bad)
mov
sbb
adc
mov
cwde
and
mov
daa
cmps
mov
sbb
pop
aas
sbb
daa
push
mov
sub
int
adc
lds
imul
hlt
dec
adc
mov
daa
or
cmps
jle
sub
into
fdiv
enter
push
lock
sub
sbb
and
xchg
and
dec
stos
push
or
leave
jmp
add
enter
pop
js
bound
inc
ss
sub
adc
mov
fs
lock
adc
pop
outs
mov
pop
xchg
adc
mov
cmc
mov
pop
out
ficomp
in
inc
pop
xchg
cmc
xchg
in
clc
(bad)
repz
ja
aaa
and
daa
add
fstp
sub
cmp
sbb
sub
sbb
or
xchg
cmps
shl
adc
popa
jns
push
mov
push
pushf
mov
push
ins
xchg
int3
or
mov
int3
cmp
inc
aam
into
pop
ss
hlt
jo
dec
in
bnd
out
test
ret
xor
int
or
and
(bad)
fisubr
hlt
pop
and
xor
fwait
daa
fwait
pop
cmp
xor
jno
add
sub
aad
adc
sub
xor
aad
jb
sub
bound
pop
cmc
xchg
jno
(bad)
xchg
inc
fnsave
or
sahf
fidivr
mov
mov
fist
xor
mov
xchg
jnp
aam
mov
sti
cmp
inc
test
clc
fdivr
pop
push
(bad)
retf
and
retf
jl
leave
je
aam
mov
sbb
daa
inc
(bad)
mov
push
(bad)
daa
push
pop
dec
xchg
in
mov
call
pop
cdq
stos
sub
jmp
inc
std
retf
mov
sub
cld
cmps
cmc
cmp
test
jnp
cmp
cli
xchg
pop
rcl
mov
push
aad
mov
push
lea
adc
and
dec
aas
mov
test
jmp
mov
mov
pop
push
cwde
test
mov
sub
mov
ret
xchg
lods
fsubr
ins
iret
jge
sbb
sbb
inc
jp
out
repz
add
call
aas
mov
retf
inc
sub
push
push
mov
jmp
imul
sub
mov
add
(bad)
lds
jae
lahf
pop
loop
xor
xor
(bad)
adc
mov
(bad)
inc
cmp
push
jb
fdivr
jnp
mov
fs
pushw
jbe
das
fsub
outs
loope
(bad)
sbb
push
mov
push
fld
inc
not
sti
outs
imul
(bad)
xor
mov
xor
sub
xor
pusha
lods
mov
scas
imul
jecxz
sahf
push
(bad)
sahf
cmps
jmp
loopne
xor
mov
add
sub
dec
mov
mov
mov
scas
add
sbb
call
pop
ins
imul
jns
push
cdq
dec
cmc
aaa
fstp
push
shl
cmp
mov
lods
repnz
inc
rol
nop
out
push
pop
jp
(bad)
or
out
and
mov
xor
xchg
add
call
mov
das
gs
xchg
xor
and
xchg
and
movs
ins
mov
sbb
gs
(bad)
push
pushf
or
cmp
test
mov
pushaw
ds
mov
jg
cmp
xor
jle
rcr
retf
fdiv
cmp
imul
jle
or
xor
lahf
ror
cmp
bound
scas
sbb
add
mov
and
aad
dec
jbe
test
dec
add
or
inc
shl
jbe
repz
sahf
retf
mov
ds
fld
gs
sbb
inc
cmp
push
push
iret
cmp
lods
jns
mov
sub
sub
xchg
or
mov
mov
or
cmp
imul
mov
imul
mov
arpl
fcomp
aam
retf
sti
cmp
mov
test
addr16
stc
fsub
fwait
push
mov
jecxz
jmp
retf
adc
mov
imul
adc
sbb
mov
sub
ds
adc
call
mov
stc
adc
repz
pop
cli
movs
dec
vmread
or
pop
sub
mov
fdivr
xchg
pushw
add
mov
fimul
test
dec
out
sar
dec
lahf
cmps
or
cmp
int
xchg
es
and
pop
es
scas
sub
out
mov
pop
and
xchg
ja
jge
mov
pop
jo
repnz
fcomi
add
(bad)
sub
jge
clc
sbb
push
ror
aam
mov
das
cmp
pop
and
test
jb
cs
mov
cmp
nop
mov
adc
mov
and
xor
(bad)
pop
neg
mov
or
jnp
jne
jl
cmc
or
mov
popf
into
jmp
outs
adc
mov
repnz
jmp
dec
ror
test
aas
push
add
pushf
pop
cdq
jnp
aas
fiadd
sbb
ret
pop
adc
mov
call
jbe
lea
push
pop
mov
dec
xor
ret
stos
xchg
iret
repnz
xchg
pop
pop
lahf
pop
(bad)
aad
cmps
adc
jo
stos
out
lods
scas
popa
icebp
mov
push
or
xchg
lods
jae
cmc
or
jo
sahf
and
(bad)
jns
outs
enter
shr
or
jb
xchg
sub
pop
cli
pop
jmp
cmp
add
mov
arpl
or
sbb
xchg
mov
cmps
sub
mov
iret
xchg
pop
dec
(bad)
cmp
mov
loope
mov
movs
mov
(bad)
repnz
cdq
and
repnz
fmul
mov
mov
sub
call
pop
and
cmp
cs
mov
jge
sub
pop
inc
cmp
mov
and
jecxz
popf
not
aam
jmp
xor
js
(bad)
xlat
rol
push
cmps
or
dec
jle
push
add
sbb
pop
jg
enter
clc
cdq
fmul
adc
js
add
xchg
dec
inc
movs
add
imul
stc
rcl
mov
pushf
adc
xlat
fcom
mov
fistp
adc
cs
jge
test
out
push
mov
push
imul
mov
lods
pop
inc
and
push
cli
shl
add
retf
sub
ds
test
test
and
push
mov
xchg
les
pop
daa
jno
mov
jnp
out
cvtdq2ps
push
fwait
cmp
sub
pop
push
inc
dec
xchg
xor
test
jl
imul
out
mov
inc
or
jecxz
cmps
jecxz
aas
xor
jb
jp
ja
xchg
int
data16
xchg
sbb
mov
test
aam
adc
add
jge
push
enter
aam
test
aad
lock
bound
inc
jb
pushf
xchg
ror
fst
sbb
or
xchg
(bad)
popf
jo
mov
outs
or
lods
das
push
icebp
in
or
aaa
and
clc
neg
pop
mov
int3
lds
(bad)
push
sub
push
jp
xchg
cmp
fbstp
and
or
jbe
sahf
and
ss
mov
aad
loop
xor
retf
sub
(bad)
nop
inc
test
cmp
repz
ss
into
mov
jg
jp
xlat
pop
cmp
mov
add
aas
push
hlt
jecxz
mov
xchg
ss
dec
sub
fidiv
sub
bound
int3
sub
cs
xor
add
mov
call
(bad)
stos
loope
inc
movs
ds
iret
ss
pop
xchg
push
push
xor
dec
sub
or
popf
jp
fld
push
mov
sahf
xchg
aas
xor
mov
pushf
xor
push
jp
aaa
pop
data16
sbb
sbb
aas
and
ss
hlt
sbb
add
rcl
lahf
sub
dec
aad
add
add
repnz
sub
add
xchg
push
mov
jne
pop
dec
lods
stc
dec
mov
fimul
scas
addr16
in
cli
mov
jnp
xchg
fld
call
std
jb
lea
push
cdq
xchg
pop
cwde
aam
fidivr
shl
enter
rol
mov
and
sub
jns
pop
ds
push
dec
mov
shl
sbb
mov
mov
cmp
or
gs
pop
sahf
cmp
sbb
out
bts
into
aam
push
sbb
mov
jmp
adc
sub
push
clc
in
dec
stos
mul
and
movs
add
add
cli
lahf
test
pushf
cwde
aad
and
adc
push
mov
fisubr
iret
fwait
mov
(bad)
int
daa
push
out
or
mov
add
ss
call
imul
xor
push
cmp
dec
clc
push
jmp
aad
adc
add
sbb
fist
test
lock
or
add
xchg
xor
mov
mov
shl
mov
and
fnstenv
loope
jns
jbe
imul
scas
outs
pop
sub
mov
mov
push
neg
popa
mov
dec
and
scas
jp
or
mov
mov
mov
sbb
pop
jl
pop
xlat
jae
adc
test
retf
aam
dec
sbb
xchg
adc
cs
cli
clc
rcr
jo
push
sbb
stos
ss
ss
sbb
clc
cli
push
lock
stos
cmc
pop
mov
es
sahf
cmp
aam
fadd
push
mov
leave
sbb
xlat
pop
push
lea
and
int
aam
cli
xchg
jle
neg
add
dec
popa
xchg
movs
or
idiv
ret
aas
mov
loope
jl
add
add
or
sbb
ret
mov
jae
jno
sbb
xchg
mov
push
mov
push
mov
adc
add
pop
adc
jge
push
(bad)
cmp
sbb
inc
mov
(bad)
mov
xor
sbb
jge
ins
sti
xchg
mov
gs
arpl
sub
jnp
mov
lods
idiv
xchg
or
and
mov
div
arpl
add
pop
loop
lds
dec
imul
cdq
in
xor
and
(bad)
sti
mov
mov
fwait
mov
clc
mov
pushf
retf
sub
sub
xchg
loope
pushf
or
push
mov
sti
sub
and
fld
mov
adc
lods
fwait
pop
iret
dec
das
test
ret
or
es
cmp
fs
mov
push
push
aam
out
jo
add
stc
jbe
sub
fld
cmpxchg
jns
fisub
repz
iret
pop
mov
mov
cmp
and
fimul
fsubr
mov
fidivr
mov
imul
fild
push
sub
(bad)
in
icebp
and
fcom
out
test
mov
sahf
and
inc
push
mov
inc
out
call
outs
sub
je
ins
dec
aaa
cwde
cld
leave
mov
fld
stc
xor
test
(bad)
in
mov
sbb
xchg
xchg
jge
or
lods
shl
inc
loope
lea
jmp
push
push
add
out
fist
inc
or
cmp
mov
mov
and
fs
inc
push
ret
xchg
cmp
push
adc
sbb
adc
push
cmp
pusha
push
inc
cmps
loopne
adc
sbb
or
add
cmc
add
ficomp
outs
mov
movs
mov
div
movs
mov
dec
lods
mov
jle
dec
xor
xchg
cmps
inc
pop
xor
pop
das
in
jge
lahf
and
jmp
xchg
cmps
fld
inc
sub
fcomip
mov
push
ja
mov
adc
push
xchg
or
dec
inc
mov
xor
jmp
mov
cld
xor
mov
in
cdq
div
or
outs
andps
pop
arpl
jle
fisttp
in
shl
rcl
rcl
or
pushf
cmp
fidivr
mov
or
rol
sti
clc
sar
mov
lds
call
push
loope
call
dec
pop
movs
dec
inc
ret
lea
dec
(bad)
jmp
jmp
bound
loope
and
jge
ror
clc
mov
mov
push
and
cs
ret
retf
mov
sti
sbb
push
mov
data16
(bad)
mov
or
pop
stos
nop
(bad)
sbb
data16
imul
(bad)
lods
cld
pop
rol
fwait
lods
adc
retf
iret
hlt
imul
sub
rcr
add
inc
xchg
das
arpl
dec
mov
jp
adc
sbb
ja
arpl
scas
mov
bound
shr
cmps
dec
mov
pop
dec
repz
mov
aam
xor
jl
sbb
rcl
clc
mov
sub
sub
mov
es
xchg
mov
shl
call
pop
dec
rcr
ins
ins
lods
jb
push
adc
cmc
and
mov
ins
mov
arpl
or
aad
mov
push
es
and
cmp
test
(bad)
jg
sbb
sbb
call
sahf
jecxz
push
jg
(bad)
jo
pop
adc
add
push
lds
repnz
mov
or
add
push
mov
ins
imul
js
or
lods
cli
push
loop
inc
pop
inc
pop
mov
popa
(bad)
jg
cmps
jae
(bad)
mov
call
call
(bad)
mov
popf
inc
jbe
jmp
push
mov
sub
mov
test
or
mov
jmp
adc
jns
sbb
fbstp
jmp
ja
pop
jmp
inc
shl
mov
ficom
inc
cmc
jg
aam
pop
adc
push
cmp
jge
test
pop
pop
add
jle
rcr
stos
es
xor
dec
jp
sub
push
mov
xchg
cmps
add
daa
push
jecxz
inc
addr16
push
mov
iret
fst
push
xor
or
push
shl
inc
sub
icebp
test
mov
out
ss
adc
ficom
ja
test
jmp
dec
(bad)
pop
test
cwde
xchg
dec
adc
jns
sub
ins
scas
outs
ins
loopne
add
test
mov
jmp
pop
mov
pop
adc
retf
cwde
dec
out
adc
pusha
dec
movs
dec
adc
pop
adc
pusha
add
repz
aaa
cmp
aas
cwde
scas
shr
or
mov
cld
xor
data16
fisubr
cmp
jmp
iret
add
push
out
and
test
pop
ss
and
ss
jecxz
lahf
fst
sahf
jb
xchg
mov
jne
mov
mov
push
lahf
int3
ss
xchg
inc
sbb
inc
jne
fs
mov
pop
imul
fcomi
cmp
mov
aaa
mov
jo
call
mov
lahf
xchg
retf
(bad)
test
leave
fisubr
xchg
fwait
xor
or
loopne
jle
imul
jmp
pop
cmps
icebp
or
in
xchg
pop
fptan
cmc
fwait
(bad)
int3
push
shl
mov
out
sbb
stc
and
add
push
mov
imul
adc
out
push
xor
fistp
(bad)
ja
jecxz
rol
add
inc
jle
push
les
call
(bad)
cli
mov
xchg
mov
cmp
xchg
in
xchg
jne
loop
mov
shl
inc
xchg
pop
ins
test
out
iret
dec
mov
pop
repz
mov
imul
sbb
adc
out
loop
adc
or
aad
popf
fwait
pusha
xor
out
mov
sub
lods
fidiv
xlat
sbb
fs
daa
movs
mov
addr16
imul
mov
or
aas
mov
jae
rol
and
lock
mov
push
ret
mov
cmp
cmp
fdiv
or
dec
test
xchg
out
(bad)
(bad)
mov
(bad)
std
pop
pop
out
jle
je
fisub
fsub
sbb
or
and
nop
shl
ret
stos
adc
dec
push
pushf
cmp
arpl
cdq
aas
cmc
add
jnp
sbb
call
test
(bad)
cmp
dec
xor
jl
xor
xchg
scas
jge
out
jg
adc
adc
mov
jmp
push
pusha
imul
inc
icebp
fadd
pushf
push
mov
xchg
push
mov
movs
ret
push
push
push
(bad)
repz
out
jmp
dec
lahf
push
les
and
icebp
ret
leave
mov
push
push
jle
out
movsx
imul
push
adc
cmp
fsub
mov
not
xor
pop
pop
add
out
ret
jo
pop
dec
repz
fs
cli
fucomip
bound
xchg
mov
movs
inc
jmp
mov
int
mov
ss
retf
imul
add
rol
cmp
and
add
arpl
in
dec
push
(bad)
pop
jne
mov
lods
outs
mov
(bad)
(bad)
xor
(bad)
pop
lods
out
out
movs
sub
in
add
retf
or
mov
nop
std
pop
sar
(bad)
or
push
or
pop
cdq
dec
fxch
and
sub
fsub
ins
mov
xor
(bad)
call
dec
mov
push
dec
lea
shl
and
or
or
sbb
addr16
dec
test
mul
in
sahf
pop
sahf
inc
pusha
lock
or
inc
cs
js
(bad)
arpl
pop
inc
lods
hlt
jle
xchg
shl
pop
sub
jmp
(bad)
cmp
mov
movs
jnp
stos
enter
movs
add
inc
inc
mov
sub
cmp
dec
pop
(bad)
dec
jo
pop
aas
mov
or
leave
retf
add
popf
sti
cmp
test
scas
stc
jl
into
xchg
mov
xchg
xor
mov
pop
sbb
sub
call
aad
shl
mov
sbb
jns
xlat
jle
pop
sbb
pop
mov
fisttp
push
xor
jmp
cmps
pushf
pop
xchg
add
iret
xor
in
mov
inc
cmps
scas
je
cdq
(bad)
cdq
or
jmp
xchg
push
xor
and
mov
cmp
repz
test
adc
jp
jle
ret
add
jmp
inc
push
in
test
push
arpl
add
mov
mov
bound
pushf
popf
mov
inc
fs
adc
inc
dec
push
and
mov
or
in
adc
jmp
or
mov
jg
and
call
and
mov
dec
adc
test
xchg
dec
adc
(bad)
sar
mov
retf
sub
sbb
loopne
(bad)
mov
(bad)
sar
cmp
cmp
test
pop
push
mov
xrelease
jo
aam
sbb
adc
aam
pushf
mov
stos
pop
xchg
retf
push
mov
inc
sahf
popa
mov
inc
mov
out
stos
dec
jne
icebp
(bad)
xchg
xchg
pop
pop
mov
aad
sti
fstp
xlat
in
and
fcom
imul
or
jmp
xor
lahf
cmp
hlt
aad
sub
pop
into
jmp
outs
adc
mov
push
cmp
arpl
retf
cdq
push
cmps
jecxz
xor
(bad)
push
inc
(bad)
mov
cmp
pop
mov
fidiv
or
test
fstp
loopne
push
mov
iret
mov
outs
inc
and
daa
mov
mov
andps
call
xor
jb
or
mov
sub
out
lods
xchg
cmp
out
sub
add
xor
or
push
in
dec
xchg
dec
pop
mov
adc
loopne
push
out
and
push
dec
xchg
lea
or
dec
call
xchg
aaa
sub
loop
jnp
rcr
xlat
adc
int3
ja
call
xchg
sub
sub
int
inc
push
iret
out
pop
popa
and
ins
push
repnz
pop
out
stos
adc
push
fst
shr
stos
cmp
and
pop
jmp
dec
out
loopne
inc
and
xor
lds
dec
addr16
(bad)
rcl
xor
lds
cmp
dec
mov
stos
inc
ret
daa
pop
pop
(bad)
cmps
(bad)
sub
in
mov
sub
nop
movs
or
pop
out
dec
rol
sub
retf
push
gs
mov
or
pop
f2xm1
retf
retf
push
out
addr16
xchg
adc
movs
add
test
les
xchg
sbb
repz
inc
sub
je
push
pop
pop
or
cmp
mov
xchg
gs
inc
add
loopne
mov
jp
pop
loop
sbb
rcl
pop
xchg
push
dec
(bad)
mov
repz
sbb
cmp
or
inc
mov
test
cmp
pop
mov
stc
mov
nop
not
lock
and
dec
popa
xor
imul
inc
inc
adc
nop
in
dec
adc
xchg
es
or
cmovnp
and
xor
sub
mov
dec
aad
call
xchg
adc
aas
xchg
out
out
xchg
xor
shl
adc
(bad)
jecxz
call
je
(bad)
pusha
inc
mov
mov
call
jno
ja
push
mov
add
mov
js
sbb
push
xor
ret
cmp
and
dec
or
mov
mov
or
out
mov
push
cmp
call
jbe
and
xor
test
test
sub
call
ja
cmps
cmp
out
in
fsub
out
sub
stos
add
and
add
pop
or
repnz
dec
cmp
je
sub
xor
test
out
add
out
lahf
das
(bad)
sbb
pushf
dec
dec
out
inc
mov
sahf
and
pop
ficomp
push
mov
add
cli
daa
push
hlt
ja
bound
xchg
les
out
dec
movs
das
fcmovne
les
dec
xchg
cmc
in
xor
ret
xor
inc
(bad)
xor
mov
loope
mov
aaa
outs
mov
xor
out
out
xchg
movs
imul
or
pop
pop
aas
dec
sbb
jbe
jge
mov
mov
mov
in
loopne
jnp
popf
inc
xchg
shr
xchg
lock
stos
xchg
sahf
dec
popf
inc
repnz
xor
push
mov
xchg
dec
sar
xor
sbb
(bad)
jno
cmc
adc
pop
mov
out
ror
dec
outs
mov
adc
cmps
dec
dec
pop
sbb
add
push
aam
les
mov
fimul
lods
xchg
call
mov
aad
jne
mov
cld
and
pop
outs
iret
or
inc
mov
sub
rcr
dec
(bad)
jp
inc
rcr
pop
pop
pusha
inc
ss
imul
pop
xchg
fidiv
rol
sub
xchg
imul
inc
adc
and
xor
push
into
retf
movs
add
adc
fadd
pop
out
int
ins
gs
icebp
leave
outs
pop
adc
(bad)
(bad)
call
inc
dec
push
and
cmp
ss
push
outs
out
movs
int
lods
push
mov
adc
out
or
dec
mov
repz
cmp
aam
outs
pop
push
popf
scas
cwde
mov
mov
fdiv
repnz
arpl
nop
add
dec
xchg
inc
data16
jl
sbb
out
sub
(bad)
cmc
jns
js
cmp
jecxz
sbb
inc
mov
imul
xor
adc
mov
fadd
xor
cmp
jnp
lods
xlat
test
idiv
sbb
into
dec
adc
or
repnz
jb
inc
xchg
xor
mov
push
scas
jge
ret
ins
push
lods
pop
dec
push
pop
jmp
idiv
cmp
sti
call
jmp
aad
out
mov
cld
mov
call
or
ret
into
retf
add
rol
add
daa
lea
idiv
dec
pop
push
and
mov
js
add
aam
pmulhw
loope
sahf
stos
xchg
les
hlt
sahf
retf
f2xm1
pop
aam
pop
out
pop
mov
dec
mov
and
xchg
(bad)
repnz
aam
lahf
sbb
aas
mov
shl
mov
mov
nop
push
and
adc
pop
fcmovne
and
cmp
jg
push
int3
(bad)
mov
pop
sub
cld
cmp
mov
shl
retf
rcr
sbb
inc
stc
mov
sti
jae
inc
(bad)
jae
push
xchg
aas
pop
xor
push
mov
fwait
aad
or
cmp
xchg
sar
in
sbb
fwait
inc
arpl
sbb
xchg
lods
cs
stc
inc
mov
mov
daa
adc
sub
fnstenv
cmps
sbb
iret
and
(bad)
mov
dec
and
xchg
add
mov
scas
neg
mov
dec
inc
jmp
add
gs
jae
sti
jo
push
inc
call
jecxz
xor
cmp
(bad)
mov
jns
xor
ret
mov
ror
popf
jno
push
loopne
retf
push
aas
or
outs
xchg
push
mov
sub
mov
in
push
cmp
cmp
stos
test
cmc
inc
push
retf
sub
(bad)
push
mov
(bad)
(bad)
das
pop
push
add
icebp
dec
rol
push
shr
xchg
adc
lahf
or
dec
jmp
adc
out
mov
mov
xor
inc
dec
pop
lods
add
mov
sbb
jno
popa
inc
sbb
lods
fmulp
lahf
outs
mov
xor
push
in
push
push
mov
gs
pop
int3
jb
(bad)
out
(bad)
loope
pop
xchg
xchg
lods
test
add
in
xor
mov
and
sti
in
scas
nop
sub
leave
xor
loope
gs
test
or
mov
enter
test
sbb
popf
in
int3
into
pop
out
inc
mov
shr
jb
inc
jmp
pop
mov
imul
shl
dec
(bad)
and
jl
inc
out
dec
test
imul
adc
sbb
daa
push
enter
xchg
imul
dec
std
xchg
mov
lds
psllq
mov
pop
xlat
loope
jb
mov
dec
inc
xchg
push
cmp
cmp
jbe
and
xlat
stos
fcomp
ins
aaa
pusha
jle
xor
push
push
call
scas
sub
pop
into
lock
movs
shr
xchg
(bad)
add
inc
or
cmp
add
out
jmp
addr16
idiv
repnz
repz
call
jmp
sbb
popf
and
enter
cdq
xor
sub
cmp
mov
rcl
je
int3
or
mov
jge
mov
mov
cmc
mov
xchg
sbb
jo
out
addr16
scas
mov
mov
dec
cdq
fsubr
(bad)
and
mov
add
dec
aaa
cs
xlat
imul
stos
mov
aad
les
into
(bad)
xor
mov
sub
dec
adc
mov
or
loop
and
sub
enter
sbb
mov
js
nop
dec
push
fist
mov
mov
mov
rol
jg
lods
mov
out
mov
lds
or
pop
in
sar
fwait
cmp
gs
mov
push
lds
add
sahf
mov
jnp
(bad)
push
jecxz
inc
mov
pop
call
or
bnd
popa
jl
push
in
fwait
cmp
jge
cmp
push
stos
dec
jmp
sub
(bad)
rol
movs
rol
xchg
test
adc
in
xchg
in
mov
test
inc
leave
mov
xchg
or
mov
xchg
arpl
out
pop
sbb
scas
dec
shl
call
(bad)
jne
jmp
push
mov
mov
adc
cmp
je
adc
jnp
loope
ins
dec
stos
jb
sahf
cmp
and
in
addr16
push
pop
push
inc
mov
lods
shr
inc
sub
push
xor
daa
jnp
outs
in
out
add
mov
dec
lahf
aas
(bad)
mov
retf
push
jge
xchg
cmp
dec
arpl
sar
mov
(bad)
cs
sbb
pop
mov
jb
(bad)
into
lahf
loope
fsub
dec
pop
add
xor
(bad)
int
stc
sbb
pushf
push
and
jbe
add
fstp
jmp
push
not
sub
add
inc
mov
jns
push
mov
xor
xchg
dec
jbe
popa
add
retf
arpl
fwait
outs
es
jp
jg
(bad)
sbb
adc
je
iret
ror
jo
and
adc
sub
pop
test
fwait
mov
loope
inc
mov
jnp
movs
cld
loop
aad
je
ret
das
addr16
pushf
jmp
jmp
hlt
sbb
dec
xor
stos
dec
and
cdq
cmp
xor
pop
fldln2
jge
or
and
jmp
inc
loope
inc
pop
mov
int
mov
pushw
mov
movs
jmp
push
loopne
test
mov
jle
xlat
aas
rcl
cmp
(bad)
loopne
jl
mov
push
pusha
mov
or
cmp
pop
out
dec
push
mov
jb
test
fadd
push
pop
xchg
adc
or
pop
and
lds
or
shl
iret
inc
loope
cmp
js
inc
stc
mov
je
sub
hlt
out
sub
pop
pminsw
add
jl
mov
clc
jmp
cmp
add
call
fcom
mov
lods
or
aad
nop
jno
add
fimul
not
leave
jne
cli
gs
fmul
xor
scas
mov
inc
pushf
sahf
hlt
daa
ins
inc
sbb
iret
test
xor
dec
stc
push
mov
cmc
test
mov
inc
aas
mov
pop
sbb
mov
push
and
push
mov
js
jmp
scas
daa
xchg
popa
fs
pusha
pop
jge
lds
aam
xor
lods
and
fs
mov
jge
and
xor
jecxz
(bad)
pop
lods
cmc
jnp
mov
push
mov
ret
jo
in
jo
nop
and
addr16
mov
outs
iret
dec
mov
dec
push
sbb
movs
aam
addr16
push
(bad)
mov
aad
outs
and
mov
mov
es
jmp
test
in
adc
loope
es
loope
xchg
fcomp
sub
stos
dec
repnz
std
mov
(bad)
jno
cs
jns
loop
fstp
nop
add
xor
hlt
call
cmp
ds
lods
fwait
jp
mov
aad
faddp
stos
xor
mov
cmp
inc
fadd
xchg
jb
pushf
lahf
sbb
push
cmp
cmps
lea
fcmovu
adc
sub
jne
call
sub
add
ins
mov
sbb
mov
out
test
adc
pop
xor
or
cmc
inc
fnstsw
cld
test
push
cmp
push
mov
bound
ss
cdq
mov
sub
pop
push
ins
dec
mov
mov
mov
adc
pop
icebp
push
aam
pop
imul
shl
cmc
lods
pop
inc
jle
repz
jb
jp
adc
test
std
test
sub
mov
ret
dec
adc
int
inc
inc
ja
cmp
popa
xor
mov
mov
inc
pop
jno
inc
call
imul
inc
ret
int3
mov
push
and
or
push
lock
xor
xlat
push
jnp
pop
sub
adc
push
xor
push
adc
ds
inc
fsub
mov
pop
(bad)
or
(bad)
hlt
js
cli
xor
push
adc
and
ja
and
int
xchg
and
jmp
popa
adc
les
ret
rol
test
cli
or
mov
jno
jnp
in
jne
fs
xchg
or
pop
pop
cmp
repz
xchg
jp
cdq
inc
xchg
cmp
(bad)
inc
xor
bound
aaa
sar
aas
outs
push
mov
inc
sub
lods
pop
daa
jno
mov
outs
ins
ret
pop
sbb
test
rol
addr16
inc
jbe
xor
mov
mov
xchg
addr16
jnp
aas
xor
dec
adc
inc
jecxz
jns
pop
and
xor
test
mov
dec
inc
fcmovbe
rol
jnp
repnz
mov
test
clc
das
jge
xor
adc
xor
int3
cmp
cmp
cmps
xor
ss
clc
ins
aas
adc
mov
mov
stos
outs
cli
inc
jne
loopne
sub
shl
and
pop
(bad)
mov
and
int3
adc
jmp
cmps
push
inc
lods
mov
pop
ror
sti
push
dec
pop
stos
dec
movs
popf
ret
mov
ss
outs
out
outs
mov
dec
cdq
xor
mov
stos
pop
dec
loope
aam
pop
sbb
outs
jae
(bad)
pushf
sets
jnp
dec
addr16
xor
loopne
push
lods
fs
popa
jo
dec
cwde
pop
and
pop
or
rcr
cmps
(bad)
xor
pop
les
and
dec
push
push
jo
(bad)
jbe
add
dec
mov
xlat
jnp
scas
or
jbe
push
mov
jl
jmp
push
cwde
or
xor
(bad)
loopne
hlt
stc
imul
outs
jl
jne
adc
icebp
test
jl
or
test
int3
loope
xor
lahf
xlat
outs
mov
inc
test
or
add
cmp
mov
arpl
aaa
rol
fisttp
xor
push
(bad)
and
stos
cld
imul
test
xor
jmp
and
gs
lds
jae
cmp
iret
jmp
add
lock
xchg
pop
jecxz
and
cmps
outs
popa
mov
and
out
mov
mov
mov
cli
fnstenv
movs
add
xlat
pop
mov
adc
popf
fsubr
mov
sub
inc
mov
adc
mov
es
out
xor
mov
imul
inc
pop
out
jmp
lds
dec
popf
cmp
push
mov
fdiv
push
fild
mov
lds
imul
push
aaa
bound
add
or
repz
(bad)
clc
dec
lods
mov
sbb
mov
jb
adc
push
sub
fs
fwait
imul
adc
loopne
push
lods
inc
xor
mov
js
mov
into
out
bound
es
or
mov
lds
outs
mov
inc
jbe
mov
js
jnp
popf
xlat
jp
sti
out
cmp
inc
sbb
sti
mov
dec
hlt
ficom
ins
clc
repnz
xor
dec
mov
mov
out
jo
fstp
mov
push
xor
stos
and
or
xchg
(bad)
ret
popa
sbb
dec
jo
xchg
pop
aad
(bad)
jmp
add
scas
out
xchg
dec
mov
hlt
xchg
pop
lock
fs
out
movs
and
or
xchg
call
addr16
adc
nop
shl
aad
sbb
pop
xor
push
lahf
imul
add
mov
mov
or
aas
jecxz
mov
cmc
dec
(bad)
sar
xor
xor
jle
out
sbb
sub
pop
push
loop
xor
or
retf
cmp
fistp
cmp
lahf
cs
and
nop
aaa
leave
pop
test
arpl
and
fisttp
mov
int
sub
sbb
xchg
jbe
cmps
loopne
sub
in
mov
fbld
cdq
dec
add
sbb
add
out
push
call
dec
sbb
fldenv
stc
popf
mov
pop
mov
inc
add
inc
popa
and
sahf
mov
mov
scas
push
in
fdiv
mov
inc
fwait
rcl
mov
nop
iret
sub
inc
jecxz
jne
rcr
(bad)
sbb
fidivr
dec
in
mov
or
pop
push
into
jp
pop
mov
mov
pop
js
jne
push
fwait
adc
cmp
aam
jp
jl
add
dec
repnz
mov
mov
jecxz
pop
push
push
push
and
xchg
sub
mov
xchg
clc
je
into
inc
shl
sub
icebp
fwait
dec
xchg
inc
mov
sbb
cld
loop
adc
(bad)
sbb
ds
inc
call
adc
cmp
mov
dec
sbb
daa
ss
and
pop
fwait
hlt
pop
sub
push
lock
dec
pusha
sbb
push
and
adc
jle
xlat
mov
sbb
std
fisubr
in
mov
stc
add
stos
mov
(bad)
pop
loopne
mov
jle
sbb
cld
sbb
and
test
data16
imul
gs
out
mov
dec
sbb
ret
dec
das
jae
mov
cmp
call
aad
jecxz
push
out
add
sub
ss
leave
jne
add
jbe
sub
and
mov
or
push
xchg
jbe
shl
cld
mov
cmp
sub
or
xchg
adc
mov
inc
sti
aaa
das
adc
mov
push
scas
fs
add
les
hlt
cmp
mov
jle
and
mov
push
sub
or
pop
repz
sub
add
mov
dec
mov
and
fdivr
dec
gs
dec
push
pop
(bad)
outs
pop
pop
add
mov
cmp
fcomip
mov
push
mov
lods
test
mov
xor
add
xor
in
mov
adc
or
and
aad
and
xchg
inc
cld
call
dec
lods
and
fisttp
lahf
and
daa
mov
sahf
cmp
add
pop
jp
nop
xchg
push
dec
fcmovnbe
mov
iret
das
mov
pop
push
shl
loopne
les
enter
stc
pop
shl
test
sbb
cwde
mov
push
add
jo
fist
add
add
sbb
lods
mov
in
push
pop
aam
lock
iret
aam
int3
push
mov
cmp
adc
and
xor
bound
mov
and
dec
out
adc
retf
cmp
inc
adc
sub
jne
inc
pop
pop
je
(bad)
outs
mul
lods
xchg
inc
jmp
imul
cmp
popa
inc
fistp
and
daa
add
test
xor
add
sbb
mov
fxch
mov
ins
retf
neg
and
sbb
adc
out
lock
add
add
sub
push
sub
icebp
push
sbb
cmp
adc
mov
xor
mov
in
lds
sbb
sti
loope
mov
xchg
cld
xchg
adc
xchg
aaa
pop
or
iret
stc
dec
or
xor
add
(bad)
in
push
lahf
fdiv
and
stos
push
test
pop
int3
hlt
xlat
lahf
(bad)
mov
sbb
jb
mov
fs
xchg
cmp
jg
cmp
or
(bad)
lods
fcomp
adc
or
or
int3
adc
inc
jno
(bad)
aas
mov
imul
or
sar
sub
push
outs
les
popa
hlt
(bad)
dec
dec
mov
add
test
cld
shl
push
and
scas
pop
adc
mov
mov
aam
inc
icebp
pop
inc
stos
or
(bad)
enter
repz
int3
imul
cmps
arpl
cmp
mov
fwait
cmp
sbb
fld
popf
xor
and
xchg
shl
sub
ret
int
in
jle
das
int3
mov
sub
cs
call
dec
fld
rol
sbb
and
(bad)
cs
lea
push
xchg
ds
in
jae
dec
push
mov
call
mov
sbb
test
cmp
push
or
fild
xchg
fcomp
push
imul
add
mov
push
xlat
fst
inc
out
adc
jl
xchg
jle
mov
lahf
mov
add
fnstenv
push
jmp
dec
(bad)
push
(bad)
adc
mov
dec
in
add
sbb
pop
xchg
mov
fisubr
fld
xchg
jge
dec
fisub
pop
sub
or
rol
jns
call
scas
mov
dec
fsub
mov
sub
xchg
out
pushf
in
into
stos
neg
lock
or
cmc
inc
ins
sbb
pop
xchg
xchg
sub
inc
out
inc
fist
js
in
int
mov
mov
mov
hlt
xlat
test
adc
or
push
push
push
ins
jo
pop
sar
add
jl
jle
sbb
aam
movs
popa
push
cmps
cli
xchg
mov
int3
jle
jne
add
cmp
call
mov
dec
mov
jnp
cld
imul
mov
push
cmps
xlat
je
out
sar
jnp
hlt
push
in
push
aam
std
pop
in
into
jge
xor
add
ret
stos
lea
and
test
xchg
pushf
dec
dec
sub
or
jbe
xchg
jg
mov
in
xor
and
idiv
jne
in
push
add
sbb
and
dec
fld
adc
sub
adc
jne
imul
arpl
rol
push
jo
jb
call
and
fsubr
xor
test
xor
or
inc
test
div
loop
test
xchg
xchg
mov
cmp
mov
xchg
movs
push
jecxz
outs
cs
sbb
mov
cmc
loop
out
push
dec
fcomp
mov
and
sbb
cmc
and
xor
jno
std
pop
pop
out
mov
pop
mov
push
inc
jmp
leave
add
cmps
pusha
icebp
jns
retf
adc
enter
or
mov
dec
xchg
iret
pop
adc
mov
adc
jmp
add
test
mov
mov
pop
xchg
mov
push
es
cwde
mov
mov
cmp
es
cmp
pushf
mov
std
outs
mov
inc
mov
(bad)
xor
shl
sysexit
push
call
mov
jle
sbb
enter
adc
stc
pusha
cli
jne
adc
add
retf
(bad)
xchg
jb
test
test
xchg
ror
and
sar
fsubr
fdiv
imul
cmps
ror
sbb
jne
sub
lods
push
(bad)
fdivr
scas
mov
mov
xchg
sub
inc
push
xor
mov
dec
aam
mov
js
cdq
xchg
call
aad
and
pop
mov
jmp
dec
pop
or
jg
mov
sbb
mov
inc
lods
adc
mov
and
adc
dec
dec
push
clc
out
pop
mov
mov
mov
cmp
movs
dec
inc
loope
jo
(bad)
mov
imul
jbe
dec
setns
mov
sub
sahf
jg
mov
mov
retf
in
shl
dec
(bad)
cmp
mov
sub
sbb
scas
outs
mov
fnstcw
cmp
inc
test
(bad)
call
ds
ss
mov
pop
push
aaa
rcr
jmp
mov
push
out
outs
cmp
xlat
leave
and
test
mov
loop
dec
movs
push
pop
retf
loop
ins
xor
popa
sbb
dec
pop
in
aas
jge
mov
ja
sbb
push
jge
and
jno
jns
repnz
iret
mov
pop
fiadd
or
cdq
pop
sar
cmps
shl
retf
pop
or
mov
xor
add
add
push
sub
adc
mov
and
in
mov
sub
inc
mov
mov
pop
ins
mov
out
shl
cs
out
xchg
daa
sub
xor
xchg
data16
cmp
mov
push
push
pop
arpl
je
push
adc
dec
or
scas
and
outs
into
je
sub
rol
sub
stos
sbb
jns
jl
stc
popa
out
sti
mov
icebp
and
push
adc
das
push
cwde
pusha
(bad)
cli
rcr
cwde
xchg
cdq
aaa
aas
pop
les
dec
mul
movs
test
cli
mov
cmps
mov
pop
scas
mov
jae
enter
aad
push
dec
lahf
scas
daa
dec
mov
mov
jmp
dec
ror
fcmovnb
bound
mov
push
jnp
in
test
jle
shr
add
out
mov
and
mov
jbe
adc
jno
push
inc
jmp
mov
ficomp
push
xor
js
cmc
jae
jg
clc
mov
scas
pusha
js
mov
mov
rcl
retf
dec
iret
shl
pop
cs
ret
mov
jge
out
mov
lods
sahf
inc
mov
cmp
and
jno
dec
mov
fld
loope
sbb
add
push
mov
sub
cld
add
jmp
test
inc
fbstp
and
jne
jbe
loopne
call
hlt
js
and
pop
mov
or
jmp
fistp
xlat
mov
(bad)
icebp
mov
and
outs
xchg
cmp
mov
xchg
test
test
inc
out
(bad)
cli
ins
lods
loop
sub
push
mov
add
pop
into
mov
sbb
jb
out
sub
test
outs
mov
imul
ins
fldcw
jbe
cld
or
fnsave
xchg
jne
jbe
dec
sbb
es
jle
dec
jmp
bound
lahf
push
dec
and
test
inc
outs
add
clc
enter
mov
into
adc
push
cmps
mov
and
rcl
cmps
adc
mov
addr16
scas
popa
jecxz
inc
push
jmp
push
sbb
test
test
pop
repnz
js
push
pop
cs
sbb
jo
or
pop
inc
popa
xchg
cmp
test
(bad)
bound
mov
cmc
mov
sub
sahf
ret
daa
mov
loop
xor
icebp
cmp
push
push
dec
cmp
sbb
add
adc
jmp
loope
leave
jg
nop
pop
gs
push
cmps
sub
add
pop
out
mov
cmp
mov
xchg
idiv
and
push
jnp
cs
jge
stc
out
(bad)
xor
in
stos
jno
pop
jb
arpl
scas
jo
pop
and
and
inc
shl
adc
(bad)
cmps
add
xor
sbb
inc
lods
fistp
int
mov
fcomp
jp
or
jnp
xor
mov
dec
or
sti
jnp
xor
jecxz
leave
mov
mov
cmp
ins
add
aam
mov
pop
push
loope
sbb
jmp
popa
cld
mov
inc
fsubr
div
cmp
pop
sbb
jg
in
enter
pop
sub
pop
pop
sti
jmp
mov
ror
mov
fwait
mov
and
(bad)
(bad)
loopne
pop
cmp
jp
inc
mov
mov
lock
test
jbe
in
iret
xchg
test
push
or
iret
mov
jecxz
or
das
mov
pop
sbb
mov
push
jge
xor
sub
dec
and
pop
push
ror
shl
clc
fs
sub
add
pop
add
out
and
aas
clc
mov
mov
adc
les
ja
cmp
push
inc
and
xor
jl
(bad)
sahf
jg
repnz
pushf
ss
and
test
mov
(bad)
pop
mov
scas
iret
ja
sar
gs
popf
rol
retf
aad
loopne
(bad)
out
stos
sub
mov
pop
sub
in
retf
pop
nop
dec
xchg
fisubr
retf
mov
repnz
dec
mov
sti
or
inc
hlt
dec
test
mov
retf
ins
mov
lea
(bad)
(bad)
push
cwde
dec
test
jge
ins
sub
push
and
xchg
sbb
pop
mov
xor
ja
pop
imul
add
test
cld
(bad)
lods
ss
dec
ds
and
xchg
push
push
fistp
mov
jne
repnz
movs
out
movs
dec
loope
add
icebp
js
xchg
xor
lods
test
jne
dec
inc
xchg
fscale
or
ins
lea
(bad)
rcr
sti
dec
mov
mov
add
leave
ja
mov
jnp
les
(bad)
out
mov
xor
jle
jmp
lods
mov
push
cmp
and
mov
ins
push
ins
mov
inc
std
cdq
adc
daa
inc
aad
and
cmp
cld
fcmovnu
hlt
xchg
sbb
jp
xor
stc
pop
xor
retf
test
imul
shl
mov
das
cmp
es
icebp
mov
xlat
jge
popf
retf
pusha
enter
xor
push
leave
outs
pop
das
cli
sbb
mov
sbb
je
daa
xchg
pop
xchg
mov
je
cmps
cmc
cmp
push
ror
cmp
add
push
add
imul
mov
outs
mov
sahf
pop
add
sub
adc
enter
popa
dec
test
aam
retf
xchg
fistp
lods
imul
lea
jbe
cmps
retf
mov
mov
std
aam
popa
and
fnstsw
pop
push
inc
or
(bad)
cmps
mov
or
sbb
stc
jmp
(bad)
jecxz
(bad)
pop
mov
dec
icebp
inc
push
ficomp
arpl
gs
test
iret
mov
pop
test
jmp
cmp
push
in
test
mov
xor
sbb
inc
das
iret
sti
lahf
mov
inc
pop
push
pushf
sar
cmp
jge
sub
mov
mov
inc
cmp
movs
xor
or
push
call
and
pushf
(bad)
jmp
mov
fsub
jle
std
das
xchg
call
leave
mov
out
clc
and
pushf
cmp
(bad)
std
repz
and
lods
pop
push
or
mov
sub
mov
jae
lods
ficom
push
int3
fwait
neg
or
retf
xchg
lea
fdiv
(bad)
fisttp
mov
sub
adc
out
nop
xchg
les
cmc
stos
in
jae
jp
fiadd
cmp
loope
shr
fmul
xchg
mul
or
sbb
cs
or
jnp
xchg
nop
test
pop
add
pop
call
sub
add
push
lahf
fwait
(bad)
and
adc
test
mov
loopne
int3
mov
fwait
rol
leave
adc
rcl
adc
jl
fdivr
adc
call
in
sbb
or
adc
jmp
addr16
aam
pop
lds
cs
xchg
inc
xor
or
inc
jecxz
test
xor
pop
dec
sbb
les
aaa
scas
clc
scas
int
mov
div
sub
xor
jl
mov
call
cmp
pop
jl
movs
push
inc
cmp
loopne
inc
mov
in
es
xchg
ds
jl
inc
(bad)
mov
xor
push
or
ret
mov
jl
inc
jmp
in
fild
inc
mov
and
jbe
inc
push
mov
xor
loope
les
cmp
test
rcr
shl
push
adc
das
mov
adc
inc
mov
stos
push
jmp
inc
mov
xor
iret
add
mov
pop
popa
mov
ret
stos
and
adc
in
push
jmp
or
push
xchg
ins
cmp
daa
dec
sub
push
xchg
push
cdq
scas
(bad)
stc
dec
inc
mov
push
add
test
jle
je
dec
mov
ret
das
rol
push
xor
push
out
adc
jbe
lahf
cmps
xchg
out
das
mov
(bad)
push
loopne
inc
pop
movs
xor
pop
inc
pop
addr16
mov
lods
iret
int
cld
call
jo
xchg
cs
hlt
(bad)
mov
and
xchg
jmp
adc
out
jne
xchg
mov
sbb
das
iret
mov
addr16
inc
dec
loopne
lods
scas
jmp
retf
mov
xchg
mov
shl
adc
je
(bad)
cmc
popa
dec
inc
adc
je
rcl
repnz
cmp
pop
mov
bound
outs
mov
jnp
dec
fwait
dec
mov
pop
(bad)
pushf
jne
mov
adc
rep
jecxz
pop
cli
test
cdq
ds
xor
es
out
stos
cld
mov
or
(bad)
cli
lods
lods
adc
sar
jge
jmp
sahf
pop
mov
int
(bad)
jmp
inc
pop
std
jns
mov
loop
shr
(bad)
dec
repnz
rcl
rol
test
arpl
iret
sub
neg
cmp
cmp
dec
xor
(bad)
fiadd
adc
mov
fild
mov
leave
ficomp
and
and
cmp
stos
shl
mov
mov
adc
push
fist
add
bt
xchg
xchg
ret
aaa
in
inc
and
ret
and
sub
xlat
cmp
mov
fisttp
lahf
mov
push
adc
pop
jns
xchg
mov
sti
jne
loop
leave
outs
xchg
scas
sub
inc
adc
add
call
pusha
jb
xchg
xchg
and
in
cmp
sar
clc
adc
out
or
xchg
mov
aas
cmps
stos
jnp
inc
jno
cs
adc
mov
data16
mov
jmp
add
je
inc
add
bound
(bad)
stos
mov
das
popa
jbe
sbb
sub
dec
cmp
loop
mov
jae
jmp
cmp
scas
rcl
cmps
(bad)
push
test
xchg
mov
lods
ficom
mov
or
inc
xchg
call
fidiv
stos
imul
mov
repnz
jmp
pop
inc
mov
dec
xchg
out
das
mov
bound
ds
xor
xchg
xor
push
add
stc
push
dec
iret
mov
test
inc
push
not
xor
sub
cmps
out
mov
or
and
(bad)
fwait
push
or
pop
into
jmp
icebp
cli
push
jns
cmp
mov
shl
mov
mov
add
push
cmp
ins
sbb
or
dec
inc
cdq
mov
sbb
call
xchg
push
in
mov
and
std
addr16
lods
push
rcl
sub
add
call
jecxz
cmc
aam
cmp
je
xchg
out
and
pop
ret
add
xchg
icebp
jne
and
movs
add
test
push
mov
xchg
ss
xchg
sbb
mov
in
push
mov
aad
xchg
pop
imul
mov
inc
jb
loope
arpl
shl
std
adc
cmp
xchg
cmps
add
int
in
dec
sub
push
ret
jg
xchg
mov
xchg
popa
cmp
out
movs
test
popf
or
leave
cmp
fstp
cmp
mov
leave
scas
ins
mov
adc
mov
rcl
mov
shr
jmp
sar
aam
shl
lods
ins
and
shl
sbb
sbb
sub
in
sar
jae
or
enter
inc
in
xor
cmc
arpl
jecxz
add
shl
ficom
cdq
iret
xor
lds
pusha
pop
les
pop
mov
inc
(bad)
dec
push
jne
sub
or
adc
(bad)
jmp
jnp
push
movs
and
imul
out
pop
icebp
mov
inc
cmc
int
dec
jecxz
in
mov
dec
clc
jge
enter
rol
and
mov
not
cmps
pop
add
int
cmps
cmc
push
pop
mov
and
and
fwait
ret
ret
test
pop
std
gs
jno
or
jnp
xchg
mov
aad
cmc
addr16
mov
das
mov
int
ss
fcmovu
or
xchg
dec
(bad)
xchg
int
ins
movs
pushf
and
cmp
dec
inc
push
and
(bad)
mov
xchg
sbb
fwait
js
push
ret
inc
out
adc
mov
pop
ss
push
jle
mov
dec
das
inc
lds
cmp
pop
mov
ss
mov
call
in
push
inc
xchg
xor
mov
sbb
aam
fmul
mov
ficomp
(bad)
cmc
pop
jge
cs
sbb
std
pop
aam
and
ins
push
rcr
xor
add
sahf
scas
(bad)
repnz
inc
icebp
inc
or
adc
push
sub
pusha
rol
mov
mov
je
call
shl
mov
inc
test
push
sbb
dec
xor
movs
scas
inc
add
arpl
repz
jo
cmp
and
lock
and
or
sbb
inc
test
movs
imul
(bad)
add
mov
mov
pop
aas
mov
mov
xlat
es
sbb
push
ret
fiadd
sti
retfw
jecxz
jge
dec
out
mov
add
sbb
xchg
xchg
fsubr
test
(bad)
jns
dec
mov
mov
jbe
add
mov
and
adc
out
cmp
inc
lock
call
loop
test
inc
push
ins
mov
mov
loope
fucomip
aam
addr16
adc
outs
in
jno
dec
xchg
or
sbb
jo
dec
pop
scas
in
xchg
jle
(bad)
xor
std
sub
pop
out
add
xchg
(bad)
mov
fnsave
mov
fs
shl
jno
lahf
push
or
jb
pop
cmp
mov
xchg
or
jl
xchg
cmp
bound
xor
fild
sbb
aad
jb
jno
ins
(bad)
jmp
jns
in
cmp
shr
sahf
mov
sbb
mov
mov
or
mov
jmp
sub
retf
lock
xor
adc
mov
movs
adc
(bad)
ja
push
and
xchg
push
xchg
stc
xchg
pop
dec
or
dec
retf
xor
ret
arpl
scas
lahf
test
lock
push
movs
push
push
mov
ins
add
xchg
fwait
pop
jnp
xchg
mov
out
xchg
aaa
retf
add
pop
popa
je
inc
rcr
and
xchg
hlt
xchg
push
sbb
push
(bad)
lahf
ret
mov
lahf
pop
add
pop
xchg
pop
mov
mov
rcl
xchg
and
cmp
js
aam
bound
inc
test
in
addr16
jo
mov
enter
or
jbe
int
scas
push
retf
sbb
sub
repnz
xor
es
cmps
sbb
xor
test
sub
scas
stos
push
inc
mov
mov
xor
inc
call
adc
mov
imul
cmp
pop
jg
xchg
cmp
adc
sub
cmp
mov
jne
mov
ret
cmp
out
mov
clc
je
mov
iret
cmp
jne
sbb
cmp
cmc
fistp
(bad)
loopne
(bad)
fst
mov
xor
ja
test
fstp
nop
stos
retf
in
dec
daa
mov
stos
in
push
ds
mov
mov
retf
pop
int
arpl
in
sbb
aas
mov
cmp
jp
mov
int3
add
jge
mov
popf
into
cdq
jb
jnp
push
mov
xor
movs
fs
add
mov
sub
(bad)
movs
add
xor
jae
pop
es
dec
repz
sub
fdiv
xor
rol
lods
(bad)
scas
jmp
ret
xor
(bad)
(bad)
(bad)
neg
retf
dec
retf
out
push
(bad)
repnz
and
xlat
or
aad
(bad)
pop
shl
cmps
jg
in
test
ficomp
mov
jmp
aam
je
aam
sbb
int3
inc
mov
pop
pop
or
dec
push
pop
enter
xchg
sub
inc
add
jnp
mov
out
pop
add
mov
(bad)
cmp
outs
xor
jge
imul
out
out
ins
popa
rcr
aad
and
loop
pusha
cmp
adc
dec
xchg
add
mov
scas
ds
xor
xchg
sub
es
jp
out
xor
mov
(bad)
aas
add
stos
sub
movs
imul
push
arpl
(bad)
mov
cmp
jae
dec
aaa
jnp
je
sub
repz
mov
movs
xchg
mov
push
lock
pop
push
pop
push
repz
clc
sbb
dec
xchg
movs
call
nop
jecxz
push
sti
cmp
push
arpl
jo
inc
xor
(bad)
(bad)
mov
cmp
call
in
inc
hlt
in
aam
ins
ret
bound
pop
sti
ret
push
ror
sbb
mov
add
test
bound
xor
xor
out
dec
sbb
scas
shr
inc
pop
xor
push
xor
inc
mov
jo
dec
(bad)
or
inc
mov
in
adc
cmps
aad
fs
in
pop
les
cdq
add
jg
xor
cs
push
or
pop
dec
shl
mov
xor
add
inc
enter
imul
sub
out
rol
mov
out
cmp
cmps
cmp
cdq
xchg
or
in
dec
lock
loop
call
cld
in
mov
xchg
ds
daa
jbe
mov
nop
xchg
push
jbe
popa
clc
clc
and
enter
push
sbb
lock
sub
dec
pop
xor
data16
jmp
stos
cli
mov
loopne
mov
test
loopne
or
outs
jle
or
sar
inc
cmp
mov
ins
xchg
and
aaa
mov
mov
fadd
jmp
cmp
cmp
pusha
sub
call
sub
pop
dec
fwait
sbb
fst
dec
sti
mov
(bad)
int
pop
dec
movs
aaa
push
ret
in
ret
cdq
and
inc
out
mov
mov
lods
and
jno
popf
ins
jle
add
es
jb
je
mov
mov
test
out
mov
fidiv
enter
sbb
xor
(bad)
call
push
inc
(bad)
jbe
cs
rcl
repnz
and
bound
pop
mov
outs
scas
xor
stos
mov
pusha
sbb
xchg
imul
leave
fucomip
ss
data16
jns
int
adc
clc
fimul
xchg
sar
xor
fwait
sbb
(bad)
sbb
arpl
pop
inc
shl
stc
and
push
and
das
arpl
ret
cmps
adc
pop
jbe
xor
(bad)
jl
sbb
call
fisub
cmps
loop
pop
xor
ret
or
inc
out
inc
movs
call
xchg
test
pop
das
push
test
and
jl
sub
(bad)
fild
or
fstp
push
std
push
aas
aaa
mov
repnz
jb
mov
out
(bad)
xor
data16
xchg
push
loop
outs
aam
push
cmp
sub
ins
imul
sbb
mov
jmp
mov
call
jbe
mov
mov
dec
outs
mov
sbb
push
lods
ja
out
jne
jne
mov
and
push
inc
in
sub
fld
into
scas
shl
outs
lea
add
xor
jle
mov
int3
xor
adc
xor
les
mov
mov
pop
inc
cmps
pop
movs
stos
pop
cld
cmp
repnz
jo
(bad)
in
ja
(bad)
adc
sub
sub
cwde
cmp
add
and
pop
pusha
sbb
jp
and
adc
shr
das
fbstp
pop
(bad)
adc
sbb
ds
stos
push
(bad)
int3
pop
aas
cmc
(bad)
pop
or
mov
(bad)
sub
jo
cmp
jb
inc
jp
xadd
es
fcmovu
iret
loopne
jp
cs
dec
loope
xchg
mov
(bad)
call
shl
retf
jl
adc
dec
push
mov
push
(bad)
cdq
outs
pushf
jmp
xor
sti
jae
add
jo
adc
sar
push
fadd
pop
mov
mov
repnz
xchg
or
dec
cmp
jl
sti
adc
aas
xchg
cli
sti
stos
push
lea
das
in
test
pop
push
xchg
lock
dec
iret
xor
sbb
jp
cwde
push
jmp
push
cmp
shr
dec
lock
add
jg
dec
jmp
mov
xchg
and
ret
and
pusha
dec
push
pop
dec
shr
or
or
jns
lds
push
leave
xor
mov
sbb
mov
push
fisub
pusha
test
outs
pop
ss
js
mov
stc
sti
xchg
pop
lds
push
jg
out
aas
jnp
gs
push
jl
mov
dec
adc
mov
cmps
jg
cmp
pop
xchg
jge
addr16
or
adc
repz
cmp
dec
int3
mov
adc
lods
adc
mov
std
test
ret
xlat
jge
xlat
xor
aad
inc
pop
sbb
inc
ss
sbb
xor
adc
repz
aam
xor
fs
call
and
mov
cld
sti
lods
ins
jbe
add
mov
jb
sbb
dec
retf
jne
push
data16
mov
test
clc
xchg
pushf
sti
repnz
(bad)
aas
push
sub
or
mov
cmp
mov
lock
stc
add
in
mov
pushf
in
in
call
xchg
daa
icebp
pop
cmps
das
cli
inc
mov
pop
mov
mov
cmp
push
shr
cmps
fnstenv
cs
aas
mov
mov
in
fmul
and
fld
add
ins
xor
lahf
inc
inc
pop
cmps
pushf
add
stos
pop
mov
xor
jge
ror
test
jb
xchg
mov
or
xor
and
les
or
adc
lahf
mov
and
mov
cmps
jmp
sbb
jno
xchg
cmp
and
test
cli
xchg
pop
adc
ss
fmul
fwait
xchg
push
fmul
stc
inc
and
inc
nop
adc
inc
and
mov
sar
aam
and
dec
daa
dec
mov
dec
int3
dec
mov
push
push
xor
in
scas
lock
push
pop
test
cld
in
xor
and
imul
sbb
mov
sub
rol
xchg
xor
stc
xlat
inc
push
inc
pop
xchg
mov
test
inc
dec
jne
mov
repz
pop
xchg
fistp
popa
xor
loope
mov
shl
mov
jge
sbb
(bad)
pusha
xor
cwde
sub
jno
stc
cmp
dec
dec
xchg
std
ficom
int3
dec
lds
mov
push
jnp
(bad)
push
pop
push
aaa
pop
jne
mov
pusha
js
in
pop
(bad)
mov
add
fcom
(bad)
cld
fstp
add
pop
movs
push
cld
mov
(bad)
pop
xor
push
mov
cmp
nop
lds
xchg
mov
mov
jnp
and
pxor
cli
call
je
shl
jmp
jnp
sbb
fsub
fcom
inc
mov
xor
pop
iret
je
loopne
jae
adc
pop
mov
push
in
mov
mov
mov
or
dec
and
push
and
or
pusha
jg
jmp
es
clc
pop
mov
ins
ins
cmp
(bad)
out
jnp
iret
jae
out
mov
sbb
push
scas
xor
stos
mov
out
clc
pop
cwde
aaa
xor
leave
je
leave
movd
add
ficomp
(bad)
pop
push
test
and
jl
sbb
mov
cmps
aad
rol
xor
push
xor
jmp
(bad)
ret
add
retf
imul
jecxz
enter
lahf
pop
imul
xchg
repz
adc
sub
fnsave
add
xor
ja
adc
rol
jecxz
cli
and
aaa
xor
xchg
ficomp
repnz
retf
adc
mov
push
out
mov
mov
sbb
je
pop
push
push
loope
fcom
dec
hlt
jmp
cmps
xor
jne
sar
enter
mov
call
in
mov
cli
push
out
pop
fidiv
dec
outs
pop
jo
push
dec
fdivrp
gs
jmp
pusha
xchg
dec
dec
lods
call
sbb
lock
in
jl
mov
xor
in
sbb
mov
add
xlat
enter
ret
pushf
sbb
push
(bad)
retf
add
push
fsubr
xchg
and
pop
mov
ss
jnp
add
xchg
sti
mov
pop
inc
cmp
inc
jge
sub
pop
push
push
cli
jb
mov
das
push
sbb
mov
or
mov
jbe
dec
scas
stc
stc
std
ret
cmps
les
mov
jle
call
mov
fld
adc
jae
ins
sti
mov
cli
jmp
movs
mov
mov
shl
aam
adc
pop
clc
xchg
xlat
cmp
mov
scas
popa
jbe
push
push
clc
shl
sbb
loope
hlt
loope
jno
ret
inc
leave
and
scas
mov
adc
mov
push
jge
in
out
add
not
lods
mov
aas
sbb
test
push
push
xchg
adc
outs
(bad)
rol
call
(bad)
mov
xchg
cmps
mov
and
es
mov
add
sbb
ins
add
rsqrtps
dec
xchg
ret
mov
dec
pop
retf
bound
cmp
adc
(bad)
jl
fisttp
cmp
stc
jecxz
sbb
mov
xchg
call
fs
jge
dec
fadd
xor
jmp
inc
push
mov
or
xchg
sti
mov
mov
dec
es
xchg
stos
or
jns
push
xor
fldl2e
pop
or
add
jo
enter
xchg
out
adc
lds
movs
push
adc
xor
xor
arpl
adc
mov
cdq
or
jnp
inc
aas
push
mov
les
push
hlt
or
iret
add
out
in
in
sbb
cmp
into
lods
mov
jns
call
cmp
pop
xchg
xchg
out
inc
repz
stc
das
xor
jno
sbb
pop
mov
(bad)
mov
push
mov
and
adc
inc
cmps
(bad)
xchg
cli
pop
mov
dec
pop
das
pop
dec
fnsave
push
aad
cmp
mov
sub
sbb
add
aas
push
bound
int
cmp
stc
sbb
(bad)
jb
pop
jmp
inc
lock
bound
fcmovu
add
test
xchg
jb
dec
push
add
xchg
call
jmp
jle
xchg
jne
push
retf
cmp
sbb
or
(bad)
xor
mov
es
cmp
push
xchg
or
pusha
pop
xor
inc
cwde
arpl
xlat
mov
out
mov
mov
fcom
enter
sub
ret
inc
fdivr
imul
cmp
pop
xor
push
cmp
inc
jns
or
and
inc
or
or
cmp
jge
cmp
in
in
push
(bad)
js
(bad)
mov
add
dec
cdq
cmp
xor
ret
imul
retf
inc
pop
(bad)
in
sub
ja
push
jecxz
aaa
xchg
cmp
cwde
push
je
mov
mov
sbb
popf
std
(bad)
push
lock
jb
popa
inc
and
mov
or
setl
mov
xor
jno
retf
dec
f2xm1
ds
ud1
jne
push
ficomp
das
fstp
push
int3
fdiv
sti
xor
pusha
inc
adc
xchg
mov
mov
mov
icebp
(bad)
iret
cmp
fmulp
inc
xchg
retf
mov
push
adc
pop
data16
aad
xchg
push
pop
ss
dec
fistp
xchg
and
lods
push
test
mov
pop
mov
les
cld
test
dec
int
xchg
xchg
sub
adc
xchg
fwait
sub
scas
rcr
movs
dec
sbb
add
popa
cmp
aas
test
mov
div
and
ret
loopne
push
call
or
add
adc
pop
or
(bad)
out
mov
test
push
data16
ja
cmp
and
mov
inc
shl
(bad)
(bad)
ins
cli
das
repz
fisubr
dec
in
xchg
sahf
adc
sbb
jecxz
or
imul
cmps
jl
xchg
mov
dec
jmp
lock
dec
dec
imul
mov
xor
add
enter
cmp
dec
aad
test
adc
dec
jmp
neg
fiadd
dec
xchg
rcr
add
sbb
loopne
in
icebp
rcr
push
xor
xchg
pushf
jns
pop
mov
cld
stc
enter
mov
div
sub
retf
sub
leave
adc
stos
sbb
jno
jmp
in
ss
nop
or
aad
or
ja
leave
push
ds
test
dec
xor
test
sub
mul
ds
div
xor
xchg
mov
pushf
lea
lea
sbb
outs
leave
pop
iret
xchg
xchg
push
push
push
(bad)
xor
stc
mov
imul
cmp
push
inc
sub
sub
xchg
lods
lock
imul
das
aam
out
push
hlt
xor
das
pop
das
vcmpeq_osps
mov
ins
inc
mov
lods
std
dec
add
ins
pop
retf
movs
add
in
ss
xor
test
push
mov
dec
jge
popa
cwde
cmp
push
mov
pop
(bad)
outs
je
hlt
repnz
push
or
and
jl
sub
inc
movs
pop
sub
scas
bound
loope
icebp
sbb
(bad)
out
push
cmp
fstp
push
fbld
xor
lods
in
add
push
lahf
mov
mov
inc
dec
and
stos
sub
fs
adc
lods
cld
push
arpl
xchg
stos
and
out
int
xor
jmp
push
jmp
outs
cld
sti
fwait
sub
lea
out
out
xor
rol
ds
movs
outs
or
push
aas
out
mov
ja
test
lea
js
mov
or
iret
cmp
out
into
aad
and
loopne
pop
dec
push
sbb
inc
mov
mov
es
repnz
fstp
adc
dec
mov
dec
xor
das
test
les
mov
into
mov
sbb
sbb
in
repz
ins
scas
fidivr
mov
xor
sbb
inc
add
clc
bound
jnp
pop
jge
lods
dec
or
mov
rcl
xor
adc
retf
js
mov
sub
sbb
xor
shl
add
mov
inc
gs
lods
out
cli
and
inc
dec
sub
loop
dec
fabs
xchg
jne
or
mov
adc
popa
xor
and
das
jno
xchg
js
push
pushf
pop
retf
retf
imul
push
mov
fild
imul
clc
ret
hlt
test
int
outs
(bad)
sti
call
cmp
mov
lds
adc
aad
mov
xor
sub
cwde
mov
add
inc
pop
retf
rol
and
ss
pusha
imul
adc
and
cmp
test
test
inc
enter
ror
movs
idiv
jl
ret
add
hlt
or
(bad)
mov
(bad)
dec
xchg
out
or
and
jmp
test
cdq
inc
retf
add
sbb
nop
cmp
pop
retf
sahf
inc
stos
xor
(bad)
jae
xlat
cmps
das
stos
inc
sbb
pop
hlt
repnz
popf
dec
dec
xchg
adc
sti
push
mov
lahf
dec
adc
add
lods
dec
sub
adc
stos
xor
mov
and
inc
mov
adc
xor
dec
ror
(bad)
jge
mov
jmp
(bad)
jmp
mov
enter
adc
fdiv
and
jo
pop
sbb
aaa
popa
and
mov
stos
cs
cmps
or
or
ret
mov
(bad)
mov
ficom
cmp
fcomp
js
das
(bad)
or
mov
stos
xor
and
rol
sbb
loope
sub
inc
sbb
sbb
xchg
shr
sub
mov
call
stos
add
dec
xchg
push
dec
mov
jge
dec
std
std
jecxz
push
dec
mov
dec
mov
mov
shl
bound
adc
pop
or
cmp
jl
rcl
sub
in
loop
sub
pop
stos
pusha
push
and
push
test
in
dec
mov
out
mov
add
mov
cld
cwde
into
and
and
dec
ss
jns
jmp
add
mov
or
lds
bound
imul
push
nop
xor
and
stos
popf
cmp
mov
or
lods
outs
inc
and
hlt
lods
imul
lods
rcr
outs
inc
mov
cmps
jecxz
lock
pop
and
dec
icebp
dec
sub
xchg
sub
xchg
lods
inc
sbb
dec
dec
cmp
ja
jge
test
bound
and
mov
dec
mov
jnp
cmp
out
cmp
iret
mov
jle
adc
int
mov
jmp
mov
dec
fldcw
pop
push
xor
mov
inc
int
mov
pop
mov
out
sub
imul
pop
ss
fwait
adc
lahf
pushf
inc
in
dec
pop
jge
ds
lock
retf
in
cmp
call
jnp
adc
dec
push
lods
cwde
push
jbe
lds
cmp
pop
daa
fucom
jno
imul
mov
add
loop
cwde
jecxz
out
retf
xor
into
and
frndint
frstor
(bad)
fdiv
push
cmps
shl
mov
daa
aaa
xor
in
ret
adc
cmp
inc
push
pop
inc
loope
adc
scas
retf
stos
je
out
push
das
dec
mov
mov
mov
sahf
push
fcomp
mov
(bad)
xchg
and
adc
xor
jmp
ret
mov
cmp
lahf
pushf
pushf
sbb
cs
push
mov
inc
cli
xor
xchg
mov
popa
pop
cmp
jb
jnp
hlt
ds
(bad)
xchg
xchg
xchg
cmp
sub
pushf
pop
mov
es
mov
mov
sub
aam
jmp
lea
sub
scas
repz
rcl
cli
out
pushaw
les
(bad)
mov
push
jg
mov
mov
sti
std
fisttp
lods
mov
mov
ins
rcr
out
xchg
adc
mov
out
cmp
out
std
pop
add
std
jmp
not
cwde
js
cs
cli
popf
mov
fistp
mov
sub
jo
(bad)
vmovdqa
push
cmp
mov
inc
push
(bad)
jle
mov
mov
out
jnp
das
in
cmp
mov
inc
into
ins
je
shl
fild
jle
mov
jge
jbe
movs
pop
movs
dec
repnz
lahf
sub
push
sub
rol
je
jo
js
cwde
dec
loope
jmp
jp
or
xchg
sbb
jmp
clc
scas
sbb
inc
aaa
xchg
fwait
js
inc
loope
retf
pop
in
inc
jns
push
jbe
retf
bound
aad
cmovs
sbb
call
adc
inc
out
sti
je
mov
adc
mov
repnz
xchg
loopne
adc
push
pop
fwait
movs
lods
mov
jmp
jbe
aam
scas
adc
bound
imul
mov
jb
xor
cwde
cmp
gs
pop
(bad)
je
pop
pop
dec
pushf
xor
fwait
lea
sti
out
inc
xchg
and
mov
mov
scas
pop
or
sbb
mov
mov
push
into
call
sub
aas
cmp
mov
into
dec
push
xchg
cs
scas
lock
addr16
cli
mov
sar
(bad)
pop
lds
outs
loopne
pop
add
and
jecxz
mov
dec
mov
rcl
or
(bad)
ins
jno
sub
sub
fwait
pop
cmp
mov
xchg
fcmovnbe
sub
mov
inc
jge
test
pop
jo
aad
add
(bad)
les
sub
xlat
xor
and
xor
mov
sahf
fstp
int
push
sbb
sbb
inc
adc
xchg
add
fwait
in
std
cmp
es
scas
pop
mov
cmp
sub
test
mov
sub
out
loope
push
ret
rcr
sar
lock
lea
adc
inc
push
pop
push
xor
ret
cli
pop
aaa
inc
dec
stos
pop
adc
xchg
retf
sbb
mov
cmps
imul
fwait
ror
push
cmps
jno
test
sub
sar
aaa
push
xchg
hlt
adc
sbb
sub
sub
jo
cmp
mov
xor
es
dec
mov
sub
fidivr
push
mov
jnp
in
or
mov
popf
mov
lock
xor
sbb
leave
cld
add
jle
mov
jb
push
imul
and
push
cmp
ss
fisub
jp
out
cmc
call
pop
inc
inc
and
movs
mov
or
dec
sti
pushf
out
int
push
xor
xchg
add
jp
fcmovnu
jmp
and
xchg
push
test
idiv
(bad)
cs
aas
gs
mov
movs
ffreep
test
fldcw
mov
adc
mov
sbb
ret
mov
pop
retf
fmul
retf
inc
mov
jle
sar
mov
push
inc
add
sbb
iret
in
(bad)
jecxz
push
sub
(bad)
mov
cmp
mov
mov
out
out
add
dec
nop
(bad)
add
mov
and
mov
stc
push
cmp
icebp
enter
adc
std
or
pop
retf
jno
lods
lea
xor
les
jnp
in
cmc
inc
mov
inc
pop
jmp
dec
push
push
pop
sub
push
test
(bad)
xor
adc
not
stos
bnd
push
into
sti
mov
aaa
pop
retf
mov
and
pusha
cmps
lahf
ret
cmp
fsubr
inc
mov
jns
movs
stc
pop
shl
push
inc
les
mov
xchg
data16
pop
and
ins
daa
cmps
cmp
xchg
ja
std
pop
xchg
retf
outs
jge
jae
add
fidiv
(bad)
and
jno
mov
push
repnz
pop
scas
xchg
(bad)
cmp
xchg
mov
int
arpl
clc
in
mov
jno
fst
shl
or
add
pop
and
xor
push
cmps
push
mov
xchg
adc
mov
mov
inc
imul
dec
in
add
(bad)
in
mov
adc
mov
cmps
fcmove
cmp
mov
jg
xchg
mov
jne
(bad)
fild
test
add
loopne
jmp
mov
stos
push
push
popa
push
sub
mul
pop
jecxz
mov
sahf
add
ret
add
das
mov
mov
lock
in
lods
cmp
mov
mov
dec
into
loopne
mov
cwde
mov
jo
fisub
pop
mov
dec
cmps
clc
jae
push
hlt
test
retf
inc
(bad)
fst
sbb
enter
fdivr
add
and
mov
inc
add
fidiv
jae
pop
ds
shr
in
ror
ja
mov
cmp
push
and
clc
and
jmp
outs
sbb
inc
mov
xchg
xor
rcl
inc
cwde
jmp
jo
cvtpi2ps
and
in
jbe
cs
repnz
fnsave
mov
or
inc
icebp
je
or
stc
cmp
scas
in
hlt
mov
out
frndint
xchg
scas
inc
nop
ret
or
mov
jg
dec
push
pop
jecxz
cdq
mov
cs
aad
(bad)
or
add
sbb
cmp
mov
jo
lods
push
das
clc
retf
sub
jl
push
ror
clc
movs
and
dec
pop
lods
cld
mov
ja
repnz
retf
dec
xchg
and
call
xor
popa
cmp
pop
pop
jno
push
adc
inc
je
(bad)
stc
pop
xchg
fbld
rol
sar
ss
outs
(bad)
into
xchg
fild
rcl
gs
and
sub
cmp
push
les
xchg
inc
hlt
repnz
out
jecxz
int3
lock
xchg
(bad)
lock
push
sub
push
mov
push
dec
rcl
stos
stos
jo
adc
ror
loope
jns
movs
sbb
sahf
loope
(bad)
mov
and
inc
retf
iret
mov
push
mov
dec
dec
test
adc
shl
add
cmp
retf
nop
or
sbb
mov
loop
adc
and
add
scas
cld
movs
lods
js
jmp
xlat
dec
or
cmps
mov
pop
jne
add
in
and
adc
outs
call
mov
adc
movs
or
sbb
fisub
inc
(bad)
fdivr
cmp
frstor
or
mov
xchg
call
mov
stc
cwde
imul
xlat
xchg
push
lds
sahf
popf
mov
cmc
call
adc
lock
in
shl
mov
adc
in
inc
xchg
xor
pop
and
inc
lahf
cmp
retf
test
inc
movs
ffree
xchg
xchg
cmp
test
rcl
out
lods
ins
or
xchg
jo
jb
out
int3
lods
xchg
sti
movs
cs
cmp
jne
inc
out
les
sbb
sub
and
mov
popa
aas
mov
push
add
or
sub
jl
add
sar
mov
mov
pop
movs
push
dec
leave
imul
jae
xlat
mov
outs
pop
mov
in
jae
jle
repnz
sub
mov
mov
xchg
lahf
push
add
ss
sub
jno
add
mov
stos
sub
fwait
clc
add
and
push
mov
pushf
mov
push
jp
xor
(bad)
sbb
push
pop
add
pop
imul
xchg
in
pop
pop
(bad)
jmp
mov
pop
aas
pop
retf
sar
mov
icebp
cs
dec
mov
sbb
cmp
push
mov
aaa
in
aam
or
jecxz
or
sahf
sub
mov
cmps
dec
js
retf
sbb
cmp
mov
fadd
push
ds
cmp
jp
push
adc
adc
jno
repnz
jle
or
or
rol
xchg
jb
add
rcr
scas
inc
jmp
adc
mov
leave
inc
push
loopne
out
push
jp
jo
and
nop
ret
sti
(bad)
outs
inc
inc
loopne
aaa
hlt
jb
inc
fisttp
inc
mov
ins
fisub
das
mov
xor
pop
push
jge
sub
push
popf
vmwrite
call
fisttp
adc
jmp
retf
fdiv
jp
jg
in
(bad)
xor
(bad)
in
mov
lods
push
pop
jecxz
rcr
or
fwait
lods
jmp
sbb
fstp
xor
(bad)
jnp
mov
mov
in
lds
xchg
or
push
dec
cmc
out
retf
lea
lods
je
sbb
dec
scas
pop
add
sbb
adc
cdq
inc
jg
bound
cli
scas
or
icebp
inc
xchg
adc
inc
adc
retf
push
or
push
cmc
loope
mov
cmp
cmp
push
jl
pop
(bad)
sar
les
mov
pop
lahf
out
mov
(bad)
scas
fstp
xchg
or
je
adc
fwait
push
inc
idiv
or
inc
xchg
pop
lods
shl
dec
sub
push
(bad)
xchg
mov
pop
adc
adc
jmp
add
push
(bad)
in
out
inc
push
sbb
sar
(bad)
mov
pop
jmp
ficom
popa
repz
fst
rcl
lods
addr16
scas
repnz
fs
push
xor
mov
lds
out
sbb
shl
(bad)
dec
xchg
xor
push
jae
pop
cdq
das
adc
inc
jne
xor
fcmovnu
repnz
stc
outs
enter
mov
xlat
add
sti
pop
xor
pop
mov
jl
cmps
xchg
mov
cs
movs
test
xchg
adc
test
sti
cmp
mov
fdiv
or
jne
iret
xchg
dec
js
imul
cs
data16
les
pop
sub
xor
xlat
pop
jb
and
mov
push
or
or
xchg
stos
sub
cmp
pop
sbb
push
sbb
lds
pop
sub
outs
(bad)
out
cmps
jne
sbb
sbb
icebp
mov
lods
daa
push
pop
xor
cwde
pop
cmps
movs
cli
push
hlt
adc
sar
shl
jb
rcl
dec
push
into
jmp
xor
aaa
mov
mov
sub
cmp
fucomip
xor
int
(bad)
sbb
lea
mov
in
lock
inc
neg
dec
enter
sub
data16
mov
test
add
cmp
jecxz
lds
push
pop
adc
stos
data16
mov
cmps
jnp
aad
aad
jno
cmps
test
push
imul
jle
retf
and
int
dec
pop
test
mov
mov
(bad)
xchg
nop
jp
or
jbe
sub
(bad)
lods
mov
movs
inc
movs
shr
or
pushf
inc
sti
jae
adc
mov
in
imul
push
(bad)
jp
(bad)
pop
loop
mov
in
jmp
pop
mov
pop
sub
or
adc
clc
popf
iret
lahf
inc
push
push
push
adc
lods
adc
lahf
pop
xchg
dec
jl
mov
jp
fisttp
(bad)
push
scas
cwde
cmps
int
push
scas
test
lds
(bad)
icebp
push
mov
int3
push
daa
lea
and
mov
test
out
stc
repnz
es
jge
pop
repnz
lea
lahf
mov
adc
mov
xor
out
mov
pop
(bad)
cdq
xor
aaa
pop
jns
or
xchg
add
xchg
out
jbe
test
out
aad
pop
fsubr
adc
in
add
cmp
lock
xor
cmp
xor
pop
bound
sub
or
inc
push
imul
fs
cmc
mov
jnp
cwde
add
das
inc
mov
mov
clc
sub
test
adc
mov
std
push
int
sub
sahf
mov
repnz
add
(bad)
aad
xor
fistp
ficomp
and
jecxz
pop
or
mov
jmp
mov
mov
fisubr
lds
cmp
xlat
mov
dec
aas
aaa
mov
jmp
pop
add
xor
xchg
js
out
fs
lods
dec
xchg
scas
sahf
pushf
psubusb
mov
add
rol
inc
mov
push
cmp
in
leave
scas
dec
cmps
push
push
push
adc
mov
stc
pop
aad
pop
dec
jne
sub
repnz
cld
sbb
inc
xchg
or
mov
ins
in
(bad)
jl
movs
in
test
pop
test
add
into
fiadd
lahf
jno
test
fidiv
js
ror
fiadd
cwde
cvtpi2ps
(bad)
bound
(bad)
fninit
cmc
cmp
cli
jns
sub
add
add
test
(bad)
jecxz
mov
out
adc
push
add
or
fsubrp
outs
dec
pop
dec
sbb
nop
pop
sbb
pop
sub
iret
cmp
pusha
pop
push
or
es
ret
sbb
or
std
scas
and
inc
mov
aas
adc
jo
push
sbb
cmp
mov
push
aam
aam
movs
xchg
push
jnp
add
mov
cmp
inc
loope
je
add
cli
dec
and
cmp
adc
inc
bound
ja
popa
pushf
mov
shl
stos
daa
nop
lock
xor
add
jl
mov
mov
jmp
ror
dec
sbb
xor
sbb
cld
pop
adc
mov
rol
dec
popw
(bad)
push
popa
(bad)
sbb
cmc
pop
jmp
lds
das
fwait
xor
hlt
loope
and
mul
outs
mov
test
sub
scas
ins
push
jmp
adc
mov
fstp
add
pushf
pop
fnstcw
les
(bad)
xor
xchg
iret
add
sbb
cli
inc
(bad)
xor
mov
pop
stc
or
dec
pop
rcr
cmp
sbb
mov
jno
and
ja
fs
push
out
out
stc
sbb
pop
fcmovbe
js
test
out
in
lods
jge
xlat
push
outs
mov
or
loop
mov
sub
dec
scas
das
(bad)
sub
inc
xchg
push
dec
mov
cdq
int3
bound
(bad)
mov
sbb
mov
cmp
cdq
push
add
dec
inc
cmp
das
ret
int
jbe
ror
fsub
test
jge
lea
or
ret
les
jmp
jp
rcr
inc
xor
mov
add
mov
jo
std
int3
out
sbb
xor
in
dec
cli
xchg
test
add
cmc
aas
pop
pop
inc
or
cs
mov
jns
cdq
inc
stos
(bad)
inc
rcr
xchg
hlt
cli
and
cmp
pop
mov
xchg
pop
mov
nop
stos
adc
sbb
jg
pop
out
repnz
jne
and
clc
adc
inc
dec
cmc
mov
in
add
xchg
push
push
mov
push
push
adc
int3
fsub
lods
mov
sbb
jmp
pushf
fld
mov
jl
in
loopne
xchg
shl
xchg
enter
pushf
adc
xlat
mov
add
mov
pushf
mov
sub
sub
ss
imul
mov
(bad)
fadd
pusha
or
or
call
add
ret
sbb
test
(bad)
in
dec
pop
imul
mov
adc
xchg
pop
dec
add
rol
sbb
push
cmp
mov
sbb
iret
inc
pop
mov
mov
xor
daa
rcr
inc
fwait
pop
outs
mov
gs
adc
mov
or
xor
cs
mov
and
repnz
xor
sbb
cwde
inc
(bad)
push
adc
xchg
aaa
xchg
jg
jmp
scas
clc
addr16
mov
inc
ret
add
adc
std
adc
mov
call
dec
or
inc
ja
or
and
mov
inc
mov
or
add
int
push
adc
xor
mov
test
mov
sbb
adc
xchg
push
push
push
pop
mov
leave
jae
hlt
xchg
out
lock
movs
stos
jb
stos
mov
cwde
shl
pop
cmps
pcmpeqd
push
aam
scas
repz
add
push
or
jle
adc
(bad)
(bad)
sbb
ja
inc
xor
mov
mov
data16
mov
movs
mov
dec
mov
jns
or
test
push
or
retf
retf
mov
call
(bad)
cld
scas
loopne
pop
pop
fwait
xchg
scas
jmp
stos
mov
and
out
fstp
add
out
mov
jne
inc
dec
jmp
mov
push
mov
imul
in
int3
in
dec
xor
test
jne
or
xchg
out
stc
(bad)
inc
push
mov
dec
std
mov
jmp
imul
jge
or
or
cld
ins
and
enter
popa
test
cwde
xor
fwait
sub
aaa
pop
inc
test
mov
push
repnz
xor
fisubr
out
fisubr
out
(bad)
in
adc
test
fld
test
cmp
iret
mov
(bad)
pop
mov
add
cmp
push
out
es
adc
jb
mov
mov
xchg
clc
mov
adc
cli
xchg
mov
xchg
add
cdq
(bad)
loopne
icebp
popa
pop
movs
xor
mov
fsubr
cli
in
ret
mov
push
cdq
les
and
in
loopne
xlat
sub
xor
aad
ret
cdq
sbb
jns
xchg
mov
arpl
mov
aas
mov
sbb
into
ja
ins
xor
in
jbe
cmps
push
iret
cmps
inc
int3
cdq
std
push
cmp
call
loop
scas
ror
jns
mul
sar
adc
loop
imul
(bad)
into
not
cmp
retf
in
mov
imul
push
scas
repnz
out
lods
push
out
daa
xor
xor
(bad)
and
pop
add
neg
pushf
pop
sub
inc
cld
cld
mov
stos
popa
pop
not
stc
inc
push
movs
shl
dec
sbb
xor
mov
inc
mov
retf
ficomp
aaa
mov
mov
jecxz
aas
xor
dec
cmps
aad
pop
and
hlt
test
sub
jmp
in
pop
imul
sub
xor
add
mov
dec
movs
ss
mov
daa
cmps
sbb
loope
cmp
adc
dec
fstp
adc
mov
in
push
loop
xor
sub
push
sbb
test
sbb
mov
cmp
retf
int3
and
dec
or
or
mov
and
and
lods
repz
push
xor
pushf
dec
push
adc
shl
rcl
xor
xor
daa
push
in
xor
push
cmp
shufps
js
scas
div
or
int
xor
call
jle
fwait
js
(bad)
mov
movs
inc
das
aas
int
push
xchg
xchg
pop
imul
retf
ret
dec
daa
pusha
arpl
rol
cmp
xchg
test
adc
or
jge
gs
ins
into
scas
arpl
mov
mov
and
jg
aad
cs
jmp
fnsave
xor
jnp
jecxz
stc
pop
mov
jns
fdivr
mov
mov
mov
sub
pop
repz
stc
clc
jg
aad
mov
add
(bad)
mov
xchg
call
sub
add
sbb
and
cdq
leave
jb
push
cmc
out
stos
and
fcomp
jmp
push
dec
popf
fwait
add
ret
mov
sbb
in
sub
dec
jp
pop
jo
fs
lods
repnz
shl
mov
jl
(bad)
xlat
das
shl
mov
xchg
leave
add
xchg
cmp
outs
xchg
dec
mov
inc
ja
pop
pop
xor
scas
fsubr
pop
cmp
iret
imul
call
movs
popa
mov
fidiv
loop
xchg
jmp
movs
retf
pusha
out
into
push
out
bound
mov
mov
pop
nop
jg
ret
xchg
lods
jmp
adc
movs
dec
add
popa
push
xchg
or
dec
test
dec
(bad)
xchg
pop
mov
test
test
movs
scas
xchg
rcr
loope
mov
and
dec
dec
add
cmp
sub
(bad)
mov
pop
mov
sbb
test
adc
xlat
enter
sub
je
pop
out
arpl
xor
mov
push
mov
adc
(bad)
ja
xor
mov
sub
sbb
and
pop
les
jns
cli
or
mov
mov
jp
ret
adc
dec
inc
scas
jae
sub
mov
and
daa
int
or
or
mov
inc
or
push
jno
mov
add
call
mov
and
stc
int3
push
dec
out
push
(bad)
pusha
xor
cmps
jl
sbb
jne
push
jno
sti
mov
test
mov
dec
into
push
bound
das
rcr
and
inc
mov
icebp
aaa
mov
and
loop
mov
mov
repz
inc
les
inc
stc
xchg
xlat
add
mov
clc
jmp
mov
iret
std
pusha
sub
sbb
fs
dec
jne
rcl
cmp
fsubrp
jne
(bad)
cdq
cmps
imul
test
enter
stos
std
movs
scas
cwde
inc
fwait
sub
cmp
repz
movs
ret
mov
out
xchg
sbb
retf
loop
and
fdiv
popf
xchg
mov
inc
lahf
cmp
or
cs
mov
cmp
jne
int
rcr
call
test
and
pop
sbb
popf
adc
imul
fisttp
ins
sbb
mov
test
add
mov
(bad)
mov
popf
movs
out
(bad)
dec
and
jp
jnp
add
mov
xchg
push
jno
mov
leave
out
dec
cmp
push
pushf
cmc
popa
int
dec
jmp
(bad)
mov
inc
mov
jmp
mov
sub
mov
dec
js
cmps
or
and
xchg
adc
repnz
add
cmps
rcl
data16
sbb
push
xor
js
add
pushf
mov
mov
xchg
push
mov
out
sti
mov
ss
sti
xchg
gs
inc
cmc
in
cmps
add
sti
pusha
cs
xchg
stos
mov
sahf
inc
arpl
mov
sbb
or
add
mov
popf
lods
(bad)
idiv
loope
add
arpl
xor
pop
inc
outs
jb
lds
mov
nop
lock
out
test
sub
mov
jns
retf
out
mov
mov
and
cmc
xor
das
or
push
call
push
dec
push
test
xor
nop
movs
arpl
in
jmp
pop
mov
and
cli
jl
cmpxchg
push
dec
sahf
dec
lds
(bad)
sub
fs
call
out
inc
call
or
lock
pop
daa
dec
scas
retf
gs
lahf
sub
ss
sbb
cmp
jns
das
pop
xchg
cmc
div
push
cmps
in
jg
sbb
sbb
aam
test
sub
add
mov
test
add
ja
test
pop
xchg
and
sub
dec
jle
repnz
inc
dec
dec
mov
loopne
push
pushf
call
pop
adc
adc
inc
mov
pop
in
cmc
sbb
and
jno
dec
xor
addr16
scas
call
nop
mov
ret
cmp
cmp
lea
mov
xor
bound
icebp
dec
adc
jbe
ret
mov
test
adc
xor
cwde
jae
std
xor
and
aas
fisttp
mov
and
iret
js
adc
jg
fnstenv
or
inc
sbb
(bad)
xor
jnp
sub
std
and
pop
sbb
cld
cmp
push
mov
xor
dec
pop
push
shl
mov
out
mov
inc
test
fs
jg
enter
lahf
adc
leave
daa
mov
ds
fnsave
je
adc
sub
aaa
xchg
push
xchg
xchg
rol
in
sar
dec
in
inc
mov
inc
imul
and
add
xor
shl
push
sbb
std
fisttp
call
xor
shl
ss
movs
(bad)
mov
out
xchg
in
adc
int3
lods
shl
arpl
retf
mov
sub
out
xchg
and
aad
sbb
mov
(bad)
or
pop
sub
sbb
jmp
mov
call
mov
xchg
(bad)
dec
dec
cmp
xor
add
mov
jb
xor
jmp
jecxz
jae
ds
cmc
jmp
pop
outs
pop
or
adc
scas
mov
shr
adc
mov
push
leave
adc
shr
lds
sub
fidivr
pop
cmp
ret
dec
repz
fwait
sub
mov
mov
aaa
push
loope
leave
mov
cmc
dec
and
inc
pusha
pop
or
or
add
neg
fcomp
push
jecxz
out
test
retf
sbb
sahf
pop
(bad)
mov
and
xchg
mov
inc
int3
sbb
enter
xchg
enter
cmp
push
pop
dec
mov
int
(bad)
jmp
sbb
rol
and
and
add
xchg
xchg
dec
cdq
xchg
jae
xchg
mov
div
into
out
and
pushf
ins
in
cld
mov
sbb
out
inc
dec
scas
mov
sbb
mov
mov
mov
jecxz
(bad)
(bad)
(bad)
push
or
adc
rcr
jns
addr16
repnz
and
fnstcw
js
jmp
dec
pop
ins
scas
add
call
sbb
pop
nop
pop
iret
neg
je
ret
int3
push
jo
pop
dec
nop
push
pop
jmp
mov
add
outs
clc
mov
pop
mov
dec
and
gs
sbb
lea
cmp
stc
mov
xor
mov
(bad)
das
mov
jmp
test
cmp
xor
cmp
nop
inc
dec
and
bound
ffree
add
xchg
mov
mov
push
cmps
push
pop
and
nop
fwait
mov
cmp
pushf
jo
or
cdq
or
push
inc
push
push
mov
pop
add
pop
jl
adc
push
mov
mov
jnp
push
sbb
or
pop
mov
jge
or
cmp
ret
adc
cwde
retf
sbb
fs
dec
aas
fs
cwde
pop
xor
push
sub
fstp
or
jmp
ret
mov
xchg
stos
inc
in
jo
test
pop
mov
mov
leave
sub
out
pop
inc
stc
ja
add
lahf
(bad)
jmp
mov
cld
cs
ficom
xor
xor
and
or
enter
lods
iret
ss
aas
cmps
inc
mov
pop
cmc
xchg
pop
mov
jmp
xchg
sti
sub
or
sub
ins
sahf
mov
ins
hlt
(bad)
nop
loope
lods
aas
mov
xlat
stc
xchg
test
scas
and
cld
jns
ret
stos
pop
push
iret
ss
hlt
pop
mov
out
mov
popf
movups
rcl
push
mov
dec
daa
stc
es
retf
mov
test
mov
xchg
xor
adc
pop
xlat
call
add
jno
sub
and
sbb
popf
ss
push
add
pop
in
adc
int3
inc
push
jle
imul
cmps
mov
mov
adc
inc
inc
push
inc
inc
push
xor
dec
repz
out
hlt
mov
jl
dec
inc
mov
inc
and
imul
pop
push
fcomp
ins
sub
jge
xchg
mov
jl
shl
adc
pusha
mov
cmp
cmp
xlat
sbb
adc
xchg
dec
int
imul
idiv
cmp
xor
fdiv
xor
push
add
popa
nop
adc
cmps
popf
xchg
(bad)
jle
cmp
shl
in
(bad)
cmc
pop
and
jae
push
push
sbb
mov
ja
push
retf
ret
and
sbb
test
inc
rcr
sub
ins
jns
cmps
inc
aas
pusha
test
inc
cmc
xor
aas
xor
cmp
std
nop
or
ss
push
cli
adc
cmc
jp
mov
sbb
lock
sahf
(bad)
jmp
push
psllw
cwde
dec
sub
movs
inc
jle
add
pop
xor
popa
mov
imul
sub
jp
ret
jae
call
ret
pop
or
fs
retf
push
(bad)
xchg
xchg
div
dec
mov
js
xor
rcr
cmp
neg
imul
test
xchg
sub
or
arpl
imul
xor
mov
cmp
call
xchg
clc
call
div
mov
cmovne
(bad)
sar
retf
mov
(bad)
out
sub
iret
xor
sbb
adc
pushf
dec
mov
aam
xchg
mov
fisub
ror
mov
inc
mov
packsswb
mov
ja
cld
push
cdq
jbe
fs
xchg
fstp
addr16
inc
ds
jne
in
inc
or
jmp
int3
int3
push
int
xchg
js
test
jp
int3
aad
imul
stc
aad
ins
repnz
inc
xchg
ror
clc
imul
adc
cmc
vprotd
mov
jge
std
es
push
repnz
das
js
imul
inc
cmp
cmp
pop
js
and
jo
daa
jnp
ds
or
jl
jmp
(bad)
and
sahf
add
inc
dec
cmp
jbe
call
adc
and
mov
jmp
xchg
pushf
mov
push
sbb
in
enter
mov
sti
clc
hlt
dec
loope
gs
jp
dec
loope
int3
cs
add
jmp
xchg
mov
sub
mov
fldcw
pop
mov
dec
mov
cmp
dec
or
inc
pop
xor
pop
popa
inc
ins
jmp
into
push
fdivr
and
push
imul
mov
ins
loopne
bound
dec
jno
lods
and
cmc
out
sbb
rcr
sbb
add
outs
enter
mov
xchg
mov
or
dec
cmp
pop
push
jg
scas
adc
les
or
pop
mov
iret
stos
(bad)
outs
shl
les
push
lock
pop
cmp
sbb
(bad)
(bad)
fist
retf
sub
dec
ror
cmp
and
iret
call
add
sub
ins
loope
push
test
ja
mov
dec
xchg
stos
(bad)
int
pop
fild
(bad)
setno
adc
xor
mov
imul
mov
pop
retf
call
push
jbe
jb
fimul
dec
xlat
in
push
mov
aas
pop
in
jmp
int
mov
mov
and
(bad)
pop
jp
pop
cmp
pop
rep
jnp
icebp
jns
or
dec
sti
adc
inc
pop
in
xchg
sub
fild
stos
addr16
or
mov
mov
mov
std
(bad)
jmp
pop
mov
push
sub
nop
dec
test
pop
cmp
mov
dec
or
sti
cmps
test
or
sar
jo
aaa
xchg
jg
or
cmp
(bad)
jb
retf
neg
mov
fwait
xor
ret
loope
loop
movs
(bad)
cmps
rol
jne
(bad)
pop
fsubp
cmp
icebp
push
scas
push
push
mov
xchg
adc
add
sahf
shr
adc
cmp
repz
(bad)
fsubr
iret
lahf
je
nop
sahf
sub
push
jo
xor
push
call
xlat
lds
outs
punpckhdq
clc
xchg
inc
retf
jne
(bad)
xchg
xchg
fcom
popa
repnz
jge
sub
inc
les
add
mov
mov
dec
sbb
jmp
add
in
not
popf
push
call
mov
cmc
xchg
xor
(bad)
sbb
adc
adc
push
mov
(bad)
repz
push
scas
adc
movs
test
loope
jns
test
std
shr
std
jecxz
mov
dec
shl
xlat
rol
jg
cmps
mov
mov
(bad)
mov
mov
cli
mov
imul
xchg
(bad)
adc
jmp
and
add
jns
enter
push
adc
sub
sar
mov
adc
shl
arpl
adc
lea
pop
inc
jae
adc
in
hlt
lds
add
stos
cdq
adc
out
sbb
cmp
inc
push
pop
mov
sub
aas
fbld
add
lea
pusha
shl
popa
xchg
inc
and
inc
jno
idiv
dec
dec
in
repz
repnz
ds
loopne
adc
push
test
fisubr
popf
ret
shr
inc
pusha
sbb
rol
ins
xlat
sub
mov
xchg
outs
in
das
mov
push
pushf
jae
fsubr
mov
pop
pop
dec
inc
lea
ins
mov
js
cmp
stos
outs
sbb
or
jecxz
repz
sub
jp
push
dec
pop
push
inc
scas
jg
xchg
pop
rcl
cmp
data16
jecxz
data16
std
mov
pop
xor
jnp
inc
dec
mov
mov
jl
fsub
jmp
pop
cmps
jns
cld
and
dec
mov
jg
fwait
push
push
or
and
sub
xchg
test
push
mov
loopne
inc
xchg
jnp
fst
sbb
mov
dec
ficom
sub
push
add
push
xor
lock
push
arpl
out
sar
mov
out
mov
retf
ds
inc
scas
cmp
icebp
enter
in
ds
pop
loop
add
outs
cmp
cmc
sub
jecxz
ret
xchg
sub
jg
cmp
mov
mov
aad
daa
cwde
das
mov
dec
cmp
pop
add
scas
retf
add
mov
jg
add
ret
sar
jl
jp
mov
(bad)
cmc
clc
ja
mov
add
shr
adc
xor
scas
ss
test
leave
xchg
push
pop
mov
fsubr
jno
dec
and
pop
push
inc
mov
and
repz
dec
sbb
jecxz
int
inc
sbb
add
jle
lods
mov
(bad)
xor
popf
mov
mov
dec
out
jo
stc
imul
and
pop
sbb
push
(bad)
int3
mov
pop
cmp
loope
movs
and
pop
sub
or
in
jns
push
sbb
frndint
imul
cld
jnp
rol
pop
test
push
shr
cli
loope
into
add
inc
pop
rcl
mov
xchg
inc
fsub
mov
jns
pop
xchg
into
xor
mov
leave
mov
inc
ss
or
jno
sbb
stos
mov
jbe
jg
push
mov
cmp
and
outs
das
jecxz
pop
inc
(bad)
mov
jmp
dec
bswap
or
and
mov
xor
jbe
lock
xchg
fist
xor
fild
repnz
jmp
jl
cmp
in
pop
fdiv
fst
xor
jne
pop
mov
cmp
mov
in
jge
dec
xchg
cli
hlt
adc
pop
mov
dec
dec
test
loope
in
push
push
not
and
adc
jmp
(bad)
jno
cmp
popf
dec
test
sbb
jge
push
cmp
aam
pop
pop
adc
stos
xchg
popf
cmp
jns
add
hlt
cdq
mov
mov
adc
scas
(bad)
(bad)
mov
dec
push
jo
aad
jle
add
xchg
adc
cwde
jmp
pop
xor
mov
sti
dec
and
movs
sbb
faddp
mov
ficomp
movs
das
mov
ror
dec
fisttp
pop
aaa
push
adc
add
lods
fdiv
rcl
pushf
ins
pusha
fidivr
xor
jne
mov
jle
fmul
jb
pop
test
and
inc
inc
ds
adc
fs
cmp
cmp
push
jns
mov
jno
push
or
jl
push
cmp
cmp
(bad)
cdq
xchg
jecxz
push
enter
shl
jmp
push
fsubp
mov
jb
in
in
loopne
cmps
or
rcl
mov
push
cmps
jle
adc
lds
mov
xchg
lock
(bad)
add
sbb
sbb
out
aad
pop
neg
cmp
cli
fstp
rol
xor
sbb
cmps
adc
push
dec
sub
std
pop
mov
sub
mov
pop
xchg
out
xchg
iret
cmp
aas
loopne
lea
push
cli
fwait
dec
mov
test
or
xchg
jmp
mov
aas
test
adc
mov
repnz
inc
pop
sbb
ds
adc
push
mov
and
ror
jge
ins
imul
jae
xchg
add
mov
xchg
cmps
outs
shl
push
mov
cdq
lods
xlat
stos
adc
shr
cmps
or
arpl
fmul
retfw
fldenv
stos
(bad)
jne
xor
ins
push
pop
iret
das
ins
fimul
imul
mov
aaa
fdiv
xor
jbe
adc
dec
mov
sbb
xchg
ds
sbb
add
(bad)
in
enter
fadd
test
cli
xor
icebp
cmp
(bad)
pop
add
in
jae
sub
or
shl
mov
cmps
idiv
jno
or
xchg
in
and
mov
(bad)
dec
cmp
or
iret
(bad)
stc
sti
cmp
sub
dec
xchg
xchg
or
push
sbb
dec
or
daa
mov
dec
jecxz
pushf
popf
sub
pushf
push
es
lock
cmp
add
(bad)
mov
jnp
cmps
jno
sub
(bad)
das
es
inc
add
add
in
in
daa
jmp
xchg
iret
aad
add
aas
out
arpl
mov
mov
dec
push
pop
mov
sbb
push
or
rcl
test
pop
repz
into
push
mov
call
ins
fs
adc
adc
or
xchg
push
js
pop
cmp
push
push
aad
mov
(bad)
jo
std
in
mov
rol
les
add
hlt
xor
ins
pop
test
(bad)
xchg
or
ja
in
adc
inc
xor
jae
xchg
pop
or
daa
out
pop
loop
in
and
repnz
jmp
push
(bad)
enter
sbb
cmp
or
sub
sbb
pop
fmul
hlt
mov
pop
push
mov
ret
call
call
or
jmp
mov
push
sub
cld
push
xchg
and
dec
loope
imul
retf
mov
or
arpl
mov
out
hlt
cmps
xchg
cmp
push
shl
inc
retf
sahf
push
and
ja
mov
(bad)
icebp
jbe
fs
arpl
imul
dec
lock
js
push
or
jns
mov
aam
retf
pop
iret
aaa
std
lea
je
mov
xor
lahf
iret
(bad)
mov
cmp
sub
xor
jno
xchg
jb
cmp
(bad)
push
pop
pushf
xor
(bad)
into
shl
fwait
jecxz
test
retf
and
rol
nop
mov
out
sti
push
sti
add
(bad)
mov
dec
mov
mov
xor
cmp
arpl
js
jne
inc
sub
(bad)
push
ins
adc
div
cmp
or
ins
lods
rcr
cdq
lahf
xchg
xchg
add
add
cld
push
pop
adc
js
jg
sar
add
or
cmp
mov
sbb
adc
and
jl
and
int
sahf
adc
rcl
stc
push
jae
rcl
sub
pop
int
jle
nop
inc
push
cbw
add
add
mov
nop
stc
jle
mov
not
xlat
lea
jnp
inc
and
gs
add
aad
cmp
loopne
sar
popa
outs
adc
jbe
sub
cmps
pop
int3
xor
cwde
sbb
mov
adc
dec
add
cwde
inc
inc
mov
adc
mov
mov
sub
fstp
(bad)
addr16
icebp
dec
lea
mov
repz
xchg
cmp
add
lock
or
xor
cmp
mov
fnstsw
add
xchg
bnd
inc
shl
test
sub
call
test
dec
cmp
mov
je
mov
dec
fwait
or
jae
outs
inc
js
test
adc
pop
or
idiv
retf
arpl
or
add
shl
mov
mov
loopne
cmps
cmc
mov
sub
cmp
pusha
push
cmps
sbb
ja
int3
data16
call
mov
mov
pop
xor
test
adc
cmc
push
xchg
add
jb
cmp
loopne
loope
sbb
out
popa
scas
popf
in
(bad)
stos
push
neg
rcl
add
jmp
adc
mov
jne
sbb
aam
(bad)
shl
and
xlat
pop
adc
xlat
mov
jmp
add
outs
push
xchg
adc
dec
push
jmp
pop
dec
mov
dec
fcomp
lods
arpl
icebp
ret
cld
xchg
pop
cmp
cld
pop
aas
mov
dec
pop
stos
dec
mov
pop
xor
sti
dec
jbe
add
lds
pop
js
xor
ficomp
rcl
test
movs
test
test
(bad)
mov
xchg
into
bnd
push
stos
and
hlt
test
sbb
adc
les
inc
inc
ror
popa
sbb
das
les
or
jnp
mov
add
or
sub
aas
add
or
outs
inc
rcr
jne
in
xor
mov
dec
and
xlat
pop
sub
sbb
imul
sbb
pop
mov
sub
ret
or
cs
xor
xchg
pop
xchg
or
and
aad
mov
adc
sbb
pop
fs
adc
daa
outs
fs
mov
cmp
(bad)
mov
(bad)
div
rol
xor
mov
push
add
sbb
jno
mov
call
push
pushf
fidivr
and
sub
mov
cmps
bnd
cld
pop
inc
pop
es
les
jnp
aam
mov
retf
cli
jl
inc
xor
ds
sbb
inc
fisub
stos
rol
jle
cmp
add
sti
inc
test
iret
mov
(bad)
data16
add
sahf
out
push
push
adc
inc
add
lock
outs
cmovno
inc
mov
test
jnp
icebp
jmp
scas
sbb
and
xor
sub
scas
and
push
sahf
add
xor
inc
dec
push
pop
mov
lea
add
rcl
clc
jne
sub
sbb
dec
add
and
push
mov
lea
jnp
inc
bnd
xchg
bound
pop
dec
jg
jl
dec
fwait
cmp
neg
sahf
cmps
push
out
stos
mov
add
jge
repz
sbb
lods
fnstcw
jecxz
repnz
sbb
push
test
(bad)
iret
cmp
push
cmp
jg
test
pop
jecxz
outs
sahf
xchg
xchg
call
fmul
into
les
jl
push
bound
movs
mov
pusha
sub
push
stc
or
adc
mov
jbe
cmp
cs
out
adc
sub
push
nop
sub
adc
gs
mov
add
int
mov
pop
addr16
or
(bad)
nop
lods
fistp
int
and
or
mov
inc
jmp
es
sub
push
mov
loop
aam
sub
imul
cdq
test
push
(bad)
stc
loop
cmp
adc
sub
inc
int3
(bad)
fisubr
scas
or
xlat
aas
pop
pop
loope
pusha
out
cmps
jmp
repz
jmp
in
jmp
push
push
inc
xchg
pop
or
jecxz
inc
dec
or
dec
call
mov
xlat
(bad)
pop
dec
aam
pop
xchg
add
into
dec
sbb
pushf
sbb
clc
mov
scas
jbe
into
outs
loopne
mov
mov
add
(bad)
adc
adc
cmp
arpl
shl
push
xchg
sub
fisttp
enter
ins
sbb
call
sbb
mov
adc
pop
mov
ins
dec
mov
les
cmp
ja
jmp
inc
push
pop
(bad)
add
mov
out
add
(bad)
mov
in
(bad)
hlt
pop
mov
pop
sbb
ss
jmp
mov
push
xchg
add
mov
or
push
push
mov
test
fld
pop
cmp
pushf
and
pop
lods
retf
es
fs
jb
jmp
shl
adc
fstp
sbb
popa
mov
(bad)
jmp
int3
add
adc
jo
cmp
jmp
fnstcw
push
(bad)
addr16
or
or
jecxz
and
out
sub
neg
add
fdiv
jmp
aam
dec
jl
cmp
fistp
ret
pusha
(bad)
out
shl
xor
or
pop
loop
ja
inc
jle
out
sub
sahf
mov
jae
test
aam
mov
leave
aad
jmp
jg
out
mov
push
push
xlat
das
or
scas
shl
fwait
hlt
enter
call
imul
dec
adc
sar
xchg
dec
xchg
fsub
(bad)
xor
jecxz
aad
jne
adc
push
fwait
dec
and
in
cs
mov
fadd
xor
int3
outs
push
and
aad
inc
add
test
add
out
mov
pop
repnz
popa
and
adc
repz
xrelease
adc
and
out
aaa
bound
ins
and
cmp
outs
aad
aaa
add
sbb
test
dec
in
mov
(bad)
cld
pop
add
mov
ror
jb
gs
push
push
mov
mov
mov
(bad)
stos
retf
stos
pop
shl
imul
xlat
fwait
fs
aas
mov
cmps
out
das
fisub
pushf
pop
(bad)
xlat
push
cmp
dec
and
xchg
ins
push
fs
adc
js
add
fisub
js
aad
rol
push
in
retf
jmpw
pop
repnz
lahf
sub
dec
xor
shl
xchg
dec
mov
mov
cs
loop
fist
sbb
call
xchg
call
inc
push
icebp
stc
repz
jo
fst
call
sub
popa
xchg
sahf
mov
ins
mov
pop
xchg
sub
xchg
sub
sbb
jno
cmp
(bad)
fstp
ins
mov
mov
jbe
popf
push
out
push
sbb
pop
dec
xor
xor
pop
cdq
ja
or
mov
jmp
loopne
pop
icebp
mov
into
mov
test
ja
and
addr16
jae
pop
pusha
dec
adc
lods
arpl
push
cmps
hlt
nop
cdq
push
xchg
adc
test
mov
leave
jmp
cmp
xor
test
sbb
dec
(bad)
je
pop
rcr
mov
lahf
mov
pop
pop
pop
xchg
xchg
in
push
imul
push
loopne
lahf
and
add
aas
xchg
hlt
cmps
in
dec
add
frstor
mov
cmp
(bad)
jmp
or
sub
jbe
aaa
push
aam
popa
retf
push
not
pop
dec
and
imul
pop
(bad)
das
pop
pushw
xchg
(bad)
jnp
fs
aaa
mov
retf
inc
adc
jp
iret
pop
(bad)
cmp
jmp
cmps
jno
es
mov
xor
hlt
fst
rep
or
das
adc
jno
pop
xor
stc
inc
jge
xor
test
pop
and
jae
mov
lds
pop
das
lahf
mov
jp
cld
dec
shr
and
aad
inc
xor
cmp
mov
dec
push
gs
lods
dec
xchg
cmp
mov
ret
(bad)
sub
mov
sbb
push
mov
mov
pop
int3
arpl
cmp
dec
cmc
fst
fld
fdivr
int3
sbb
loop
jbe
test
dec
or
inc
arpl
call
push
pusha
shr
retf
inc
aad
out
out
mov
mov
push
idiv
push
xchg
enter
mov
dec
dec
pop
or
test
inc
mov
imul
mov
add
pop
inc
push
add
jl
movsx
dec
popa
sub
xchg
icebp
and
mov
clc
or
(bad)
xchg
pop
xchg
pop
pop
or
mov
mov
hlt
jnp
sbb
or
mov
fucomp
jne
test
out
inc
cwde
mov
pusha
retf
and
jns
mov
sub
xor
mov
sub
pop
add
int3
cmp
xor
xchg
or
or
jb
out
enter
xchg
sub
inc
mov
out
shr
pop
mov
sar
es
lock
daa
cld
scas
scas
push
stc
push
scas
jl
jge
ja
pop
add
lock
test
sub
cs
mov
push
add
addr16
pop
jmp
(bad)
push
push
xor
dec
cli
pusha
lods
out
out
ins
jecxz
ja
mov
cmps
hlt
pusha
test
pop
mov
sbb
jge
les
in
jge
sbb
pusha
or
(bad)
mov
add
pop
xchg
pcmpeqd
pop
out
jg
mov
stos
xor
mov
pop
imul
mov
mov
xchg
aad
cmps
dec
dec
repz
in
xor
sbb
push
mov
pushf
call
int
mov
push
loop
mov
push
push
pop
hlt
jne
repz
sub
(bad)
jp
mov
add
jne
add
pop
in
out
mov
pop
xor
mov
pop
aad
outs
cwde
test
jb
cmps
movs
popf
inc
dec
and
retf
inc
push
out
enter
and
stos
add
push
sub
sub
cmps
arpl
mov
sbb
mov
mov
shr
mov
test
loope
pop
dec
scas
in
icebp
pop
add
ret
adc
scas
repz
push
adc
es
push
push
cmps
mov
(bad)
aam
add
inc
imul
into
jmp
shl
sbb
mov
(bad)
dec
jg
cmp
pop
(bad)
fcmovu
call
xor
cmp
into
aam
(bad)
stc
out
xchg
sbb
mov
dec
pop
por
movs
das
pop
in
pop
je
add
cmc
cli
mov
daa
add
loop
in
daa
scas
pop
or
call
stos
test
jmp
xchg
sahf
dec
cmps
retf
fwait
lea
cmps
mov
std
ins
xchg
push
jbe
scas
in
sub
imul
cmc
imul
dec
cmp
fsubr
adc
jle
sub
mov
aam
jne
scas
(bad)
sar
outs
pop
out
pop
mov
arpl
loope
push
sar
dec
daa
xor
leave
mov
jne
(bad)
and
aaa
dec
pusha
repnz
mov
xlat
bound
xor
sbb
and
cmp
mov
fwait
out
pusha
loop
add
push
out
pop
les
aaa
shl
retf
fiadd
fldenv
adc
pop
repz
imul
(bad)
sub
retf
sub
out
and
mov
and
mov
or
int
mov
jg
cli
scas
mov
test
jno
jg
mov
sbb
adc
and
pop
jmp
jmp
jmp
adc
mov
mov
iret
push
std
cmp
fsubr
std
neg
sbb
mov
mov
es
sar
and
in
dec
xchg
rol
sti
pop
lods
or
or
mov
sbb
push
mov
icebp
enter
dec
out
dec
mov
imul
mov
scas
jne
lea
pop
cmp
push
mov
push
cwde
ds
jno
sar
inc
jl
xor
xor
jge
jb
fsubr
imul
movs
mov
cmp
push
jecxz
mov
add
adc
cs
in
imul
fisttp
mov
adc
mov
xchg
dec
das
push
xchg
test
mov
add
mov
(bad)
shr
add
add
add
out
adc
lods
stos
mov
xchg
and
push
or
je
mov
mov
and
cdq
out
nop
xchg
aad
sbb
or
sub
dec
fwait
test
stc
hlt
cmps
sub
jns
jo
shr
out
(bad)
sbb
aaa
xor
cmp
(bad)
mov
xlat
sar
or
push
pop
cli
xor
call
inc
sbb
cdq
call
sub
mov
setne
ret
das
or
inc
ror
fidiv
test
stos
nop
ss
bound
call
call
clc
pop
jmp
mov
adc
or
addr16
movs
cmp
sub
xchg
retf
jmp
jns
cld
jle
jo
dec
mov
retf
in
dec
mov
jbe
ins
mov
cmps
call
stos
mov
jecxz
jb
jnp
sahf
sub
inc
aas
data16
arpl
sub
pop
xlat
movs
mov
out
cmp
adc
adc
int
push
jnp
cmp
xor
mov
shl
push
(bad)
and
inc
fs
jmp
call
and
dec
adc
out
out
popf
scas
mov
(bad)
jl
jbe
mov
sub
jne
fbld
dec
xor
icebp
inc
sbb
mov
int
pop
mov
push
mov
and
or
mov
adc
and
sbb
sub
jns
daa
mov
add
stos
ret
pop
dec
push
(bad)
cs
jnp
xchg
inc
fild
sahf
iret
imul
jae
or
call
enter
dec
fwait
cmp
jbe
jb
mov
push
jl
pop
and
jmp
cwde
jmp
std
mov
xchg
jno
push
pop
adc
shr
and
cmc
imul
mov
push
mov
loopne
loopne
enter
mov
pushf
cld
fs
xchg
push
jo
mov
sbb
retf
ins
and
out
cmp
inc
sar
popf
and
repz
mov
pop
fsubr
data16
fcmovnu
mov
repnz
xchg
cmp
ds
cmps
(bad)
mov
cmp
jg
repz
add
xchg
ss
push
and
mov
pusha
fsub
popa
(bad)
push
scas
push
fsubr
outs
adc
and
mov
push
jbe
aam
jp
inc
fs
add
xor
sbb
lods
les
ror
and
mov
mov
js
iret
fistp
jmp
je
or
clc
push
das
mov
ror
mov
(bad)
in
jae
popf
fs
add
dec
jle
pop
dec
std
add
push
hlt
stos
push
mov
jmp
out
std
inc
repz
add
lds
jns
test
mov
inc
pusha
xchg
ss
ins
jnp
loope
dec
aam
aas
fidivr
aas
mov
mov
sbb
xor
(bad)
nop
stc
cwde
mov
sbb
es
mov
cwde
xchg
repnz
into
repnz
(bad)
in
repz
xchg
out
outs
test
cdq
mov
fisubr
push
pop
enter
inc
loope
adc
mov
pop
cmp
call
and
test
out
xchg
dec
or
hlt
ss
push
cmp
ret
xchg
fbstp
popa
sbb
aad
gs
lods
cld
xlat
jb
mov
xchg
cmp
jne
ficom
jnp
push
(bad)
daa
push
add
add
test
push
add
pop
(bad)
imul
cs
(bad)
shl
inc
stc
dec
inc
jp
test
mov
nop
outs
ds
fld
fdivr
jnp
cmp
mov
pop
ins
in
outs
lods
mov
int3
scas
test
into
push
xor
jb
sbb
in
sbb
mov
bnd
out
xlat
shr
push
pop
pop
adc
mov
jp
pop
push
add
(bad)
xchg
push
cmp
stos
sub
and
ja
test
and
add
xchg
outs
test
add
sbb
faddp
loop
xor
pop
push
xchg
aaa
sub
pop
fs
sar
push
ror
xchg
(bad)
in
scas
jmp
in
sar
or
aaa
cmc
in
sar
ja
sbb
loope
fwait
adc
arpl
inc
data16
je
mov
jp
int
movs
and
fldcw
test
mov
pushf
ds
pushf
mov
stc
aam
fisttp
adc
fst
or
push
cmps
xchg
out
daa
cmp
fiadd
enter
test
call
pop
frstor
lea
mov
out
mov
sub
mov
xchg
xor
arpl
cli
ror
adc
push
gs
les
(bad)
div
fs
hlt
push
sahf
sbb
push
loop
stc
rcr
adc
(bad)
inc
lods
adc
xor
mov
loope
cmp
or
jbe
and
enter
repz
ss
sub
push
fidiv
hlt
push
loopne
push
repz
sbb
adc
fwait
das
jmp
mov
das
call
lahf
jl
out
pop
inc
xor
iret
stc
fstp
jp
hlt
(bad)
loope
daa
pop
stos
hlt
(bad)
outs
xor
mov
inc
sub
sar
gs
dec
fadd
inc
lahf
ret
mov
je
push
dec
inc
jo
(bad)
adc
mov
or
dec
das
xchg
add
jbe
jne
scas
test
pop
rcr
dec
ins
sbb
fnstsw
gs
hlt
mov
xor
cmc
icebp
aam
xchg
test
mov
adc
push
fcom
dec
in
pop
lea
cmp
jg
jbe
fnsave
add
mov
fwait
scas
in
dec
clc
mov
shr
sub
jl
mov
scas
aaa
or
and
xchg
loopne
jg
adc
pop
cmp
mov
adc
ins
mov
aaa
pop
add
shr
jge
xor
fisttp
sbb
dec
cmp
jl
jbe
jne
in
jecxz
or
sub
jp
jmp
call
pop
cdq
push
mov
je
cmp
xchg
test
movs
mov
cmp
inc
outs
pop
fidivr
fucomi
sub
retf
clc
pop
mov
test
loopne
push
scas
jns
dec
adc
adc
rcl
int3
arpl
jmp
je
cmp
cmp
inc
shr
add
popf
or
or
dec
adc
cmp
pop
push
add
push
ret
mov
ja
test
scas
or
jnp
inc
mov
jmp
mov
dec
jmp
push
and
ret
xchg
cmp
mov
mov
jns
test
ds
js
dec
gs
mov
jmp
adc
push
add
cdq
sbb
dec
dec
jo
mov
inc
push
cmp
push
jecxz
popf
call
ss
jmp
mov
dec
jecxz
push
push
(bad)
xchg
push
mov
in
push
ds
push
cmp
jg
add
mov
push
pop
mov
adc
sub
test
add
cmps
idiv
push
ret
xchg
and
jbe
pop
in
cwde
cmc
enter
dec
mov
retf
push
xchg
jb
push
ins
icebp
jg
dec
jecxz
mov
jle
mov
xor
and
add
and
xor
sbb
inc
loope
test
jmp
sahf
out
jo
fucom
pop
push
and
add
(bad)
mov
ud1
push
push
and
push
mov
data16
sar
and
cmps
int
int3
push
ja
mov
mov
fs
(bad)
push
ins
pop
das
add
push
mov
call
scas
icebp
and
and
out
loope
sahf
cmps
adc
mul
jo
jmp
dec
mov
dec
clc
int3
push
adc
cwde
jno
inc
std
(bad)
or
pushf
push
mov
inc
adc
hlt
scas
fcomp
pop
cmp
pushf
sbb
pushf
dec
dec
adc
mov
ror
dec
or
inc
in
sbb
test
adc
jecxz
jecxz
cmc
xchg
outs
icebp
sub
push
mov
sbb
lods
(bad)
cmp
cmc
pusha
xchg
pop
cli
int
or
xchg
nop
mov
call
xchg
dec
xor
inc
sbb
inc
jge
in
neg
adc
adc
xor
mov
sub
mov
jmp
adc
xlat
movs
arpl
dec
into
sub
neg
lds
ret
call
and
jno
mov
mov
sub
rcr
outs
arpl
mov
arpl
pop
hlt
out
lods
es
fs
xchg
or
mov
enter
sub
inc
push
repz
mov
aam
enter
aam
push
inc
mov
cli
xchg
xchg
test
scas
add
jl
sub
cs
mov
xchg
pop
xor
mov
movs
mov
std
inc
out
push
mov
mov
pop
or
(bad)
xor
popa
dec
sahf
and
in
dec
adc
inc
and
loopne
fist
xor
jno
shl
jmp
mov
inc
inc
iret
add
(bad)
aaa
dec
shl
cmc
push
in
cmp
repnz
dec
or
scas
imul
ret
mov
test
ins
jp
and
pop
test
aad
rcl
pop
sbb
inc
mov
jecxz
mov
(bad)
fcomp
movs
pop
ficom
xchg
dec
fcmove
loop
cdq
outs
ret
addr16
sub
les
mov
dec
daa
push
jle
fcomp
lahf
stos
push
mov
sbb
pushf
shr
jns
(bad)
scas
stos
or
stos
aaa
add
cld
sbb
fidiv
adc
xchg
imul
pop
lock
push
dec
pop
stos
inc
jp
sub
jmp
xchg
movs
add
xchg
mov
or
pushf
dec
shr
cli
cld
movs
cmp
jmp
xchg
mov
js
(bad)
leave
mov
aad
movs
inc
movs
fsubrp
and
mov
shl
mov
mov
xchg
rcl
stc
stos
jbe
int
mov
jp
lahf
test
or
int
div
fadd
sbb
in
inc
xchg
and
aas
inc
sbb
pop
adc
sahf
mov
cmp
in
aaa
(bad)
xchg
arpl
add
pushf
es
mov
and
nop
inc
adc
(bad)
xchg
pop
mov
sub
loopne
adc
ja
or
mov
test
sub
(bad)
push
or
stc
push
in
rcr
push
pop
pop
xchg
sbb
in
cmp
out
sbb
gs
shl
jg
push
xchg
cli
jns
and
fcmovnbe
push
ror
out
stc
rcl
adc
repnz
dec
rol
stos
pop
jno
and
fxch
cli
call
xchg
sar
retf
push
mov
dec
inc
ss
icebp
mov
fldenv
clc
xchg
movs
adc
imul
les
adc
push
(bad)
mov
mov
mov
loopne
jmp
xchg
call
cmp
and
xchg
fisubr
call
cdq
inc
mov
mov
aad
jmp
or
sbb
xor
jns
pop
nop
mov
jbe
sahf
jl
mov
fst
ja
aad
jae
fwait
push
aad
push
jno
inc
dec
nop
xchg
call
ins
les
pop
scas
sub
je
add
push
aad
out
imul
dec
pop
inc
pop
jg
test
and
sbb
int
daa
shl
and
(bad)
sbb
push
jne
xor
sub
mov
lock
xlat
and
inc
js
iret
jmp
fwait
arpl
xchg
pop
xchg
mov
shl
es
rol
mov
pop
adc
scas
ins
mov
and
or
mov
sbb
jbe
pop
sbb
add
ins
inc
arpl
mov
fisub
outs
push
fsubr
push
inc
mov
lods
addps
adc
(bad)
push
cmp
dec
nop
ret
inc
add
mov
loop
jne
test
xchg
inc
jnp
mov
and
mov
jmp
mov
xchg
imul
fs
fstp
(bad)
jg
mul
sbb
rcl
inc
dec
in
pusha
test
mov
push
jno
call
test
push
lock
mov
dec
xchg
cmp
mov
inc
popa
and
mov
push
push
xor
add
jp
jno
xor
mov
and
jbe
fwait
aad
shl
and
pop
sahf
mov
mov
sbb
pushf
mov
retf
inc
retf
dec
test
xchg
out
fdiv
bound
addr16
ret
sub
or
es
inc
xlat
jecxz
or
pop
jge
mov
cwde
shl
mov
dec
dec
inc
xchg
stos
jge
inc
ret
jmp
je
or
je
jmp
xchg
push
cmps
xor
ror
rcl
mov
test
sbb
cmp
ror
sub
mov
sub
cld
mov
(bad)
ficomp
sub
dec
and
push
jno
xchg
ficomp
xchg
call
push
adc
sbb
adc
sbb
sub
cmps
jmp
mov
cli
fdivr
adc
mov
add
cmp
pop
pop
sub
loope
rcr
lods
add
gs
call
jno
call
pusha
pushf
inc
push
stc
dec
inc
pop
xor
adc
cwde
and
add
hlt
lods
retf
outs
ret
fistp
in
mov
pop
push
lock
jge
inc
cmps
pop
jmp
add
(bad)
frstor
jmp
popf
test
push
data16
loop
(bad)
in
int
add
xchg
cmp
sub
pop
mov
mov
int
push
pop
pop
xchg
adc
and
mov
jle
cmps
mov
add
or
stos
leave
out
and
xchg
repnz
lods
jg
in
movs
es
(bad)
mov
lea
clc
std
and
movs
push
dec
dec
leave
pop
mov
call
xchg
push
inc
inc
xchg
test
ss
stos
jbe
(bad)
cmp
mov
nop
xchg
push
mov
out
adc
call
mov
fs
clc
cwde
mov
pop
ins
inc
pop
lds
ficom
sub
adc
es
jns
or
leave
mov
mov
inc
sahf
out
pop
pushf
jge
je
jbe
fstp
xor
push
fmul
sub
push
jnp
xchg
sbb
cmps
sbb
push
adc
out
call
int3
in
inc
mov
fsub
xchg
mov
pop
and
push
sbb
sbb
dec
lods
(bad)
fldenv
or
ins
push
mov
lods
inc
lods
sti
mov
add
pop
dec
mov
mov
js
imul
fistp
adc
jmp
aas
mov
outs
inc
xchg
(bad)
int3
js
and
mov
sbb
inc
mov
mov
leave
cdq
(bad)
clc
mov
fnsave
cmps
les
pop
dec
xchg
ja
jge
lahf
mov
rcl
aam
mov
dec
jl
pop
or
nop
jnp
adc
push
mov
ret
sahf
push
ret
ins
or
jg
dec
xchg
pop
mov
cmp
xchg
xchg
push
cmp
and
xor
call
mov
xchg
xor
dec
cmc
jbe
lea
mov
pop
add
loope
call
mov
icebp
pop
jmp
mov
repz
sub
in
arpl
shr
mov
push
sub
test
push
sub
scas
stos
inc
aam
mov
dec
(bad)
push
movs
add
adc
stc
cmps
repz
inc
sub
or
jnp
fwait
xchg
into
inc
in
pop
mov
cmp
fadd
rol
call
jle
ret
mov
jns
mov
mov
xlat
or
fbld
add
fwait
mov
sti
sub
arpl
in
sahf
and
pop
cs
popa
sbb
or
sub
call
clc
or
push
jle
cmp
imul
jae
imul
inc
out
mov
sbb
dec
sbb
into
sbb
push
cmp
aad
jno
jmp
call
(bad)
and
mul
cmc
and
inc
mov
or
lock
jbe
imul
jno
xor
and
sbb
leave
fcomp
inc
in
and
adc
rol
popf
jp
jmp
sti
lea
iret
push
addr16
pusha
mov
cmp
retf
sub
cmp
sub
jnp
ja
arpl
jno
sbb
lods
mov
xchg
mov
mov
xchg
or
sbb
adc
xchg
mov
xchg
sbb
aas
pop
jmp
scas
cld
mov
movs
ror
adc
cmp
sub
push
adc
icebp
cmps
leave
and
imul
and
push
sbb
rol
jne
cli
add
mov
arpl
and
test
push
je
sub
pop
or
cdq
icebp
inc
push
mov
pushf
adc
jns
jo
and
pushf
mov
inc
into
retf
inc
retf
pop
pop
sbb
mov
fwait
jns
imul
adc
jmp
add
xlat
lds
add
sub
jo
(bad)
pop
mov
leave
pop
jle
out
sub
or
xchg
xchg
rcl
mov
xchg
jle
mov
pushf
lock
fs
or
addr16
push
stc
popa
cld
dec
inc
pop
fwait
sbb
dec
sbb
dec
add
ss
xlat
push
inc
xchg
or
popf
ds
hlt
jbe
rcr
mov
or
into
push
fldl2e
sbb
adc
push
rol
sahf
fnstcw
in
call
lods
ja
in
les
or
mov
les
(bad)
shl
imul
outs
mov
sbb
cmp
ror
in
jb
push
mov
addr16
mov
mov
sbb
xor
jg
(bad)
rep
mov
adc
sbb
mov
mov
int3
cmp
mov
or
dec
ss
jmp
gs
mov
dec
cmp
in
aaa
outs
adc
cdq
inc
mov
push
push
cmp
and
iret
dec
or
repnz
cwde
sbb
pop
adc
fbld
adc
cmp
mov
sub
fistp
ret
xchg
pop
push
inc
jne
lods
pslld
stos
cmp
aaa
pusha
aad
mov
test
js
jnp
or
mov
arpl
sub
jbe
mov
or
jmp
nop
push
sub
add
or
pop
je
fnstsw
sub
mov
test
(bad)
stos
fld
mov
addr16
addr16
and
ror
cmp
fcom
clc
mov
jns
jp
mov
imul
loopne
sbb
mov
(bad)
push
or
outs
movs
leave
(bad)
out
out
cmp
mov
cmp
cld
cs
adc
xchg
jecxz
(bad)
mov
cli
adc
sbb
adc
push
fisttp
pop
sbb
lods
jecxz
jne
inc
jp
frstor
sub
fidivr
ret
inc
mov
mov
mov
or
mov
push
pop
jp
repz
inc
repnz
fdiv
pop
test
xchg
dec
call
mov
mov
dec
clc
cdq
fcmovb
xor
inc
push
nop
lods
inc
stos
push
xor
push
push
cs
xchg
mov
push
rcr
dec
lods
jg
stc
xchg
jg
pop
into
imul
xor
mov
inc
cdq
add
jl
dec
pop
enter
pop
fmul
daa
push
jno
or
icebp
jo
push
and
aad
jle
(bad)
sar
inc
(bad)
(bad)
lods
add
bound
iret
dec
mov
and
out
test
push
imul
dec
rcr
push
fimul
nop
xor
nop
ficomp
mov
and
pop
ins
mov
out
aas
jo
sub
ret
pop
sub
mov
pop
jmp
lds
test
stos
stos
js
jp
jmp
and
ja
or
pop
xlat
inc
stos
sbb
xchg
cld
inc
cmp
hlt
sub
adc
cmp
xchg
(bad)
call
(bad)
mov
test
pop
loope
mov
pushf
cmps
and
pop
push
and
push
pop
xor
mov
cmc
sub
mov
shr
mov
lods
jmp
jo
adc
loope
adc
mov
rep
sub
aam
jecxz
add
aad
popa
clc
fdivr
addr16
jecxz
jb
in
mov
iret
enter
dec
cmp
cmp
inc
xchg
xchg
mov
out
and
adc
out
jae
sub
push
jno
leave
fprem1
jg
or
stos
adc
rcl
jp
ds
bound
pop
in
pop
add
adc
repz
outs
push
test
jmp
pop
push
repnz
jno
mov
aas
cmp
pop
lock
(bad)
rol
scas
inc
leave
adc
push
mov
xchg
push
mov
push
add
mov
mov
out
ficom
sbb
inc
repnz
xor
jns
shl
sub
imul
add
push
inc
inc
cmp
mov
das
test
(bad)
and
pop
sbb
out
xor
out
add
imul
popa
jbe
xchg
jp
xor
jp
cmp
in
cmp
aas
cmc
inc
mov
jle
pop
arpl
sub
das
and
enter
push
and
cmp
ds
out
jg
adc
enter
aas
mov
gs
jp
clc
mov
pop
mov
dec
dec
mov
add
sbb
hlt
dec
xchg
ss
movs
daa
mov
sub
add
mov
pop
pop
push
jp
sbb
call
mov
into
cmps
(bad)
fisttp
and
clc
rcl
sub
pop
push
popa
adc
cdq
mov
sbb
test
mov
mov
scas
inc
pop
fldcw
call
movs
adc
rcr
push
sub
pop
data16
retf
jae
push
in
js
mov
in
call
cmp
stos
add
dec
add
fld
push
or
(bad)
loope
push
adc
pop
jmp
pop
mov
jno
xchg
lods
out
div
rol
inc
cmp
out
adc
rol
and
push
pusha
pop
sub
xchg
fst
inc
xor
das
xchg
(bad)
movs
inc
fstp
ins
aad
shl
pop
jl
sbb
xchg
scas
pop
aam
in
out
fsubp
test
repz
jle
popa
add
stos
adc
(bad)
cmp
adc
pop
cmp
xchg
retf
inc
in
shl
add
adc
ret
xchg
sbb
push
ret
pop
ins
fmul
mov
into
jp
outs
dec
movs
dec
sbb
xchg
adc
or
fucomi
sbb
mov
mov
push
push
(bad)
xor
mov
test
retf
sub
mov
mov
repz
and
jg
call
cmp
push
push
xchg
call
aas
jmp
dec
and
mov
inc
out
xchg
fstp
push
aad
xor
out
dec
popa
sbb
or
jmp
adc
push
xchg
loop
xor
dec
loop
xor
aam
cmp
inc
mov
ds
jae
loop
mov
push
jg
and
fadd
popf
(bad)
cld
cmp
or
(bad)
(bad)
and
xchg
inc
aaa
sti
ret
mov
rcr
sahf
pop
inc
(bad)
imul
int3
sub
nop
fst
push
jno
je
loope
fadd
ror
mov
mov
stos
(bad)
bound
out
fistp
xchg
and
neg
addr16
repnz
and
loop
mov
loope
sub
les
jmp
fs
das
leave
fiadd
add
mov
les
(bad)
mov
adc
mov
mov
cmp
jmp
or
adc
add
pop
pop
sub
or
sbb
add
fst
outs
push
xchg
js
jge
jmp
jmp
sub
or
xchg
jmp
lahf
pop
jnp
(bad)
xor
sub
xor
inc
lods
dec
leave
xchg
sbb
adc
lss
mov
iret
or
dec
cmp
stc
clc
out
or
xor
jl
retf
and
cmp
mov
mov
les
sahf
mul
outs
xchg
mov
fxch
mov
mov
jo
cmp
add
jle
mov
call
in
sahf
in
mov
out
mov
(bad)
mov
movs
mov
dec
push
push
and
test
xchg
sub
add
sub
dec
and
mov
push
fwait
push
push
scas
mov
cdq
lahf
int
jmp
pusha
lds
lods
adc
dec
sbb
int3
and
cs
and
pop
sar
repz
xor
cmps
pop
(bad)
repnz
retf
pop
pop
adc
push
and
and
cli
rol
shl
retf
mov
div
call
jno
push
inc
xchg
jge
lods
push
cmp
dec
iret
mov
sub
inc
add
js
inc
xchg
mov
test
test
mulps
pop
cmc
mov
or
jecxz
ja
pusha
std
(bad)
adc
out
adc
lods
jmp
add
cmp
sbb
dec
imul
ja
mov
jg
sbb
mov
mov
cmp
mov
test
int
xchg
int
pop
jmp
jne
pop
std
imul
jb
lock
xlat
fwait
xlat
push
outs
popf
mov
add
(bad)
xor
push
shl
cmc
and
mov
rcr
jle
push
jmp
mov
dec
push
adc
mov
out
lea
cmp
out
pushf
pop
xor
cmps
mov
iret
and
adc
push
mov
dec
cmp
in
adc
enter
pop
or
out
xchg
aaa
inc
test
dec
mov
inc
and
fsub
fild
fwait
mov
or
or
dec
add
std
add
mov
jne
fsubr
push
push
mov
ror
jns
movs
adc
mov
(bad)
ds
mov
sbb
xor
pop
in
push
dec
push
call
pop
stos
cmp
pop
out
sbb
sbb
mov
mov
and
mov
nop
jle
enter
sahf
xor
ja
cmc
dec
mov
(bad)
push
xchg
xor
dec
jle
cmp
scas
loop
sahf
call
jmp
repnz
mov
and
fst
fs
retf
add
imul
test
or
xor
jns
xor
xor
js
lods
xor
mov
jp
pop
outs
sbb
push
ss
daa
jp
arpl
cli
mov
in
add
pop
jae
cmps
or
imul
jo
enter
in
aas
or
push
pop
js
cli
mov
xchg
ds
jp
cmp
in
ret
cmps
fisttp
pop
iret
dec
call
sub
popa
xlat
xchg
add
and
pushf
inc
cld
call
mov
rcr
sbb
mov
add
scas
cmp
cmp
or
xor
mov
cs
adc
push
or
push
(bad)
fldcw
mov
cmps
scas
push
push
int3
addr16
pop
push
test
inc
(bad)
xlat
inc
xor
mov
rep
(bad)
cmc
mov
fcomp
jns
jnp
stos
sbb
rcl
sbb
sbb
mov
xor
fs
loop
fist
dec
fiadd
pop
push
test
mov
data16
ss
sbb
adc
sbb
cli
and
inc
mov
mov
dec
call
lea
add
inc
inc
ins
mov
push
sti
jns
stc
pop
pop
lods
ficomp
movs
jbe
fiadd
cmp
fscale
(bad)
int3
fs
add
add
lds
push
retf
lods
outs
mov
and
xchg
mov
and
fisttp
sbb
adc
scas
mov
or
xchg
js
fld
das
sahf
jmp
ret
xor
dec
push
mov
xchg
cmp
stos
dec
int3
stos
arpl
pminsw
sar
int
fst
lods
movs
or
mov
jmp
push
sti
cld
xor
shr
mov
mov
adc
ins
and
scas
retf
fdiv
or
adc
jp
repz
popa
dec
outs
stos
scas
pushf
test
ins
scas
inc
push
or
std
sub
stos
stos
imul
jo
enter
ret
or
hlt
mov
dec
out
cmp
stos
cmps
movs
push
movs
sub
mov
repnz
mov
(bad)
in
push
jnp
jno
fld
mov
fcmovnbe
add
sbb
xchg
adc
xchg
push
call
or
repnz
xchg
pop
jbe
or
adc
cwde
add
in
adc
cmc
int3
scas
jg
sbb
lods
(bad)
call
call
xchg
mov
in
lods
ins
mov
inc
pusha
jo
inc
jae
mov
cmp
std
aad
and
or
xchg
test
adc
jb
cmps
in
xchg
(bad)
bound
mov
ficomp
xor
mov
mov
pop
mov
(bad)
cmp
mov
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
