inc
mov
add
add
add
add
add
add
add
add
sbb
add
cmp
sub
add
or
rol
add
push
sub
sub
add
push
sub
add
add
sub
add
xor
add
add
add
add
sub
push
inc
or
add
add
add
or
add
add
add
and
add
and
add
sub
add
and
add
and
add
rol
add
push
es
or
rol
popa
pop
or
inc
add
add
add
add
sbb
sub
or
mov
outs
add
add
sub
or
stos
add
xor
add
add
add
add
sub
push
inc
or
add
add
add
or
add
sub
add
sub
add
and
add
and
add
add
add
or
add
rol
add
es
or
rol
popa
pop
pop
pop
inc
add
add
add
add
sbb
sub
or
mov
sub
add
sub
or
stos
add
xor
add
add
add
add
sub
inc
or
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sub
add
popa
pop
jae
inc
add
add
add
add
pop
add
add
or
mov
sub
push
sub
sbb
sub
add
sub
outs
push
add
or
sbb
sub
xor
add
add
add
add
adc
or
inc
add
add
add
add
add
add
add
add
add
call
fcom
add
add
sub
add
or
add
sbb
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
add
add
add
or
xlat
push
sub
pop
add
add
or
add
adc
push
dec
add
push
jae
add
or
add
or
or
mov
pop
push
sub
add
fcom
or
add
add
add
push
add
add
add
add
add
sbb
add
push
sbb
push
add
push
sub
adc
add
add
add
add
add
add
adc
add
sbb
add
add
add
add
popa
pop
jg
inc
add
add
add
add
sub
add
outs
or
sub
add
add
sldt
or
ror
add
push
sub
sub
add
push
sub
or
add
sub
add
xor
add
add
add
add
sub
push
inc
or
add
and
add
and
add
and
add
and
add
add
add
or
add
sub
add
and
add
ror
add
push
sbb
sub
add
popa
pop
inc
pop
inc
add
add
add
add
push
or
mov
or
mov
sub
add
or
sbb
sub
add
add
add
add
sub
push
inc
or
add
add
add
and
add
and
add
and
add
sub
add
or
add
and
add
and
add
ror
add
push
sbb
sub
add
pop
inc
add
add
add
add
sbb
sub
or
mov
add
add
or
sbb
sub
sbb
add
add
add
add
pop
inc
add
add
add
add
sub
add
add
adc
add
sub
in
xor
and
add
add
add
push
add
inc
pop
inc
add
add
add
add
sub
add
add
or
sub
adc
add
sbb
add
add
add
add
popa
pop
dec
pop
inc
add
add
add
add
sub
add
outs
adc
add
sub
in
adc
add
ins
add
add
add
adc
push
add
push
pop
or
push
inc
adc
add
mov
add
add
add
mov
add
xor
add
add
add
add
add
jns
add
cmp
add
or
add
les
add
jmp
add
add
add
add
cmp
add
and
add
xor
add
and
lea
jae
add
or
jge
add
and
add
add
sbb
add
sub
sbb
sub
push
add
or
mov
loop
add
sub
add
push
and
xor
ror
jae
add
or
ret
add
lods
add
add
sbb
add
sub
sbb
cmp
(bad)
call
add
or
or
add
and
add
xor
add
and
or
sti
rcl
add
or
and
add
and
add
sub
add
push
sub
sbb
cmp
(bad)
call
sub
jae
add
or
pop
add
or
push
sub
push
inc
add
add
or
add
or
add
sldt
add
or
(bad)
call
(bad)
neg
sub
pop
or
out
sbb
cmp
(bad)
(bad)
push
add
or
pop
sub
jae
add
or
sbb
mov
or
sbb
scas
sub
sldt
push
sub
add
adc
add
data16
add
add
adc
xor
inc
or
add
adc
add
add
add
xor
add
or
add
add
add
add
add
add
add
add
add
add
adc
add
es
sub
pop
sub
push
sub
add
and
fild
add
sub
add
sub
push
or
stos
sub
sbb
sub
or
sahf
push
sub
add
xor
add
add
add
add
sub
inc
or
add
or
add
add
add
add
add
add
add
or
add
sub
add
and
add
add
add
rcl
add
push
sbb
sub
pop
sub
push
sub
add
push
add
or
sbb
sub
sub
or
scas
push
sub
add
xor
add
add
xor
inc
or
add
xor
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
sub
pop
sub
sub
rol
add
add
or
add
and
add
sub
add
or
or
lods
sub
sbb
sub
sbb
sub
add
push
add
add
add
adc
xor
inc
or
add
add
add
or
add
adc
add
add
add
and
add
and
add
sub
add
or
add
add
adc
add
es
or
int3
pop
sub
push
sub
add
pop
add
or
sbb
sub
sub
or
scas
push
sub
add
add
and
add
sub
adc
add
sub
sub
add
push
sub
adc
sub
add
add
and
add
sub
push
add
push
sub
sub
add
push
sub
pop
add
push
sub
add
xor
add
add
add
add
adc
push
add
push
sbb
or
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
add
mov
add
mov
add
into
add
add
add
add
add
add
add
add
add
add
cmps
add
add
add
mov
add
xor
add
cmp
add
mov
jmp
add
and
xor
add
and
pop
mov
or
add
or
dec
pop
and
sbb
add
sub
pop
adc
call
sbb
div
add
or
sub
add
and
add
sub
add
push
and
xchg
ror
jae
add
or
mov
into
add
add
sbb
add
sub
sbb
call
or
div
add
or
add
add
ret
add
add
xor
add
and
ror
jae
add
or
mov
iret
add
add
sbb
add
sub
pop
or
call
sub
jae
add
or
(bad)
xchg
inc
sbb
sbb
add
and
jecxz
add
dec
add
push
and
add
sub
add
push
pop
sub
add
push
and
add
sub
add
push
cmp
and
add
add
add
add
and
xchg
xor
sub
add
and
add
sub
add
and
add
sub
add
push
sbb
xor
add
and
add
sub
add
push
sub
add
push
cmp
add
and
add
and
add
sub
sub
push
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
call
or
neg
or
sub
pop
push
sub
pop
or
out
or
loop
or
jmp
add
jp
and
imul
add
push
pop
and
add
add
outs
add
add
or
add
and
add
add
add
mov
and
add
cmp
cmp
(bad)
jmp
call
sub
add
and
cmc
add
sub
add
and
jmp
add
push
push
sub
add
push
and
out
add
sub
add
push
and
stc
add
add
add
xchg
add
add
loope
add
sub
not
sbb
add
and
out
add
dec
add
push
and
call
add
push
sbb
xor
add
and
add
sub
add
push
pop
and
xchg
xor
sub
add
and
in
add
dec
add
push
and
in
add
sub
add
push
sbb
xor
add
and
loop
add
pop
add
push
and
add
add
aam
add
sub
add
push
or
nop
add
add
xchg
add
sub
add
sbb
call
cmp
sbb
dec
cmp
pop
or
jmp
sti
xchg
xor
sub
add
and
dec
add
push
and
test
add
sbb
xor
add
and
out
add
sub
add
push
sub
push
add
or
test
sbb
add
and
out
add
dec
add
push
and
cmp
add
push
sub
add
push
and
add
sub
add
push
pop
and
sub
add
and
repnz
sub
add
and
jmp
add
cmp
add
pop
sub
add
push
and
loop
add
pop
add
push
sub
add
sbb
adc
or
pop
adc
dec
pop
adc
call
cmp
std
(bad)
call
push
or
dec
sbb
mov
or
jmp
add
or
lods
std
(bad)
jmp
rcr
add
push
sub
xor
add
add
adc
mov
pop
inc
and
add
add
add
inc
add
add
add
into
add
add
add
cmp
add
add
add
aad
add
enter
mov
add
add
add
add
pop
add
add
add
xchg
add
fld
add
xor
add
mov
add
xor
add
jmp
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
sbb
add
es
sbb
pop
cmp
(bad)
jmp
add
pop
add
add
push
add
push
add
enter
and
add
add
or
add
cmp
add
pop
jo
cmp
mov
add
add
sti
add
add
add
push
cmp
sub
push
inc
or
add
or
add
or
add
add
add
pop
add
add
add
add
add
add
add
add
sbb
pop
cmp
(bad)
(bad)
call
adc
cmc
push
sub
pop
pop
sub
pop
sub
pop
(bad)
out
adc
jecxz
sub
pop
adc
fcom
adc
cmp
or
pop
cmp
adc
or
adc
popa
mov
in
add
add
sub
mov
add
and
add
add
pop
fisubr
cmp
sub
sbb
outs
(bad)
(bad)
call
sbb
pop
cmp
(bad)
call
add
(bad)
adc
sbb
pop
cmp
(bad)
call
add
and
pop
cmp
(bad)
call
add
sbb
pop
cmp
(bad)
push
or
adc
pop
cmp
sbb
cmc
pop
adc
(bad)
(bad)
call
cmp
(bad)
(bad)
call
or
pop
cmp
(bad)
(bad)
dec
sbb
ud0
call
push
adc
cmp
(bad)
(bad)
call
add
sbb
pop
cmp
(bad)
(bad)
call
sub
pop
pop
adc
cmp
std
(bad)
call
or
pop
cmp
std
(bad)
dec
(bad)
call
std
(bad)
inc
je
add
add
mov
lea
add
add
clc
add
add
out
add
sub
add
push
je
add
sbb
pop
or
pop
cmp
pop
sbb
std
(bad)
call
xchg
(bad)
(bad)
call
pop
cmp
sbb
call
adc
pop
cmp
or
push
adc
cmp
call
add
cmp
(bad)
call
cmp
(bad)
inc
sub
xor
add
add
adc
or
inc
or
add
xor
add
add
add
add
mov
add
mov
add
add
add
sub
add
ins
add
add
push
add
push
and
or
lea
add
add
add
sub
add
or
add
lea
add
add
sbb
sub
das
add
popf
push
push
and
sbb
add
add
popf
sbb
sub
add
popf
push
sbb
xchg
sub
add
add
or
jne
(bad)
inc
sbb
add
sub
add
add
add
sbb
cmp
(bad)
inc
or
add
rcr
add
push
sub
add
xor
add
add
add
add
sub
push
inc
or
add
add
add
and
add
add
add
sub
add
and
add
sub
add
or
add
and
add
rcr
add
push
es
sub
add
pop
inc
add
add
add
add
sbb
sub
or
mov
add
sub
add
sub
sub
sbb
add
or
add
sub
or
add
add
add
add
add
add
add
add
add
sbb
add
mov
add
add
add
add
js
add
push
add
add
add
add
add
and
sbb
add
es
adc
sub
cmp
add
jle
add
add
or
xchg
or
or
jle
add
add
call
adc
sub
add
or
pop
pop
xchg
or
push
sbb
pop
adc
pop
or
or
or
imul
dec
lea
add
add
add
add
push
adc
mov
pop
push
sbb
pop
or
or
dec
(bad)
(bad)
call
adc
sbb
or
ds
(bad)
call
add
adc
pop
xchg
adc
adc
pop
pop
adc
pop
xchg
popa
rcr
pop
(bad)
(bad)
call
adc
pop
adc
sbb
or
adc
(bad)
call
or
inc
cmp
(bad)
(bad)
call
jae
add
or
add
or
add
adc
adc
adc
add
add
add
add
sbb
push
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
sbb
sub
sbb
cli
sbb
sub
sub
add
or
sbb
pop
inc
add
add
add
add
add
add
add
add
add
add
add
sbb
sub
fwait
add
add
xor
pop
add
add
add
adc
xor
inc
or
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
sbb
sub
push
add
xor
add
add
add
add
push
or
mov
or
mov
add
or
sbb
sub
nop
add
add
add
adc
xor
inc
or
add
pop
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
pop
add
push
es
or
int3
pop
sub
push
sub
sbb
sub
sbb
cli
and
add
and
add
add
xor
add
and
ins
sub
ret
xchg
ror
jae
add
or
push
add
add
jns
add
sub
add
push
sub
sbb
sub
push
add
or
push
add
add
add
add
push
sub
add
sub
xor
xor
add
or
add
sub
inc
adc
add
pop
add
add
add
add
add
add
add
lds
add
pop
add
add
add
add
add
add
add
or
add
dec
add
add
add
add
add
add
add
add
add
shl
add
push
es
int3
xchg
inc
sbb
push
and
add
sub
add
and
test
sub
add
push
sbb
xor
add
and
add
add
call
cmp
add
cmp
mov
cmp
sub
push
sub
push
or
gs
(bad)
call
sub
sbb
pop
(bad)
(bad)
call
or
push
(bad)
(bad)
inc
pop
push
pop
xchg
and
gs
rcr
cmp
(bad)
dec
sbb
xor
(bad)
inc
and
push
or
and
sbb
popa
and
xchg
fimul
popa
and
int3
mov
and
shr
data16
sub
popa
and
dec
push
movs
popa
das
pop
sbb
clc
(bad)
(bad)
call
not
or
out
(bad)
(bad)
call
push
or
out
(bad)
dec
pop
cmp
(bad)
call
or
cmp
(bad)
(bad)
inc
jae
add
or
add
cmp
sub
add
or
shl
add
push
sub
sub
add
push
sub
and
add
sub
add
xor
add
add
add
add
sub
push
inc
or
add
or
add
and
add
or
add
add
add
sub
add
and
add
and
add
add
add
shl
add
push
sbb
sub
add
popa
pop
cmp
add
add
add
pop
or
mov
or
mov
sub
sbb
sub
add
add
add
add
add
pop
inc
add
add
add
add
sub
add
add
add
or
sub
adc
add
sbb
add
add
add
add
popa
pop
sub
add
add
add
add
sub
add
or
add
sub
out
add
xor
add
add
add
add
add
pop
inc
add
add
add
add
sub
add
add
add
or
sub
adc
add
push
add
add
add
add
add
popa
pop
push
pop
inc
add
add
add
add
sub
add
add
xor
add
sub
loop
add
sub
add
push
sub
sub
add
sub
add
xor
cmp
add
add
add
sub
add
push
sbb
push
inc
push
add
add
add
jnp
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
add
and
add
add
push
add
add
xor
add
and
mov
or
add
or
add
add
and
add
sub
add
push
sub
pop
or
sub
jae
add
or
pop
add
add
push
add
add
xor
add
and
(bad)
jecxz
xchg
ror
jae
add
or
or
add
and
add
sub
add
push
sub
push
or
push
(bad)
(bad)
call
sub
jae
add
or
int3
add
add
mov
add
sub
add
push
and
idiv
or
add
or
movs
add
add
retf
add
sbb
add
sub
sbb
cmp
(bad)
(bad)
call
sub
jae
add
or
inc
and
add
jae
add
push
or
add
sub
push
or
jmp
(bad)
call
or
cmp
(bad)
(bad)
push
add
push
or
add
sub
sub
sub
sub
xor
or
add
adc
cmp
add
add
mov
pusha
add
add
jge
add
sub
add
sub
push
jle
add
add
sub
add
and
add
and
add
add
xor
add
or
sub
sub
(bad)
mov
push
retf
popa
and
je
add
out
xchg
fld
gs
and
pushf
call
das
stc
xor
and
and
push
aam
popa
data16
(bad)
add
add
jl
(bad)
(bad)
cmp
(bad)
inc
and
test
data16
dec
test
lods
(bad)
(bad)
popa
and
sti
mov
data16
jge
mul
lea
add
add
sldt
add
jge
add
add
or
and
add
cmp
(bad)
(bad)
inc
add
add
add
add
call
or
gs
add
add
add
imul
sub
add
push
sub
add
adc
pop
add
add
or
push
or
add
add
add
or
add
mov
add
inc
add
xor
add
inc
add
add
add
or
add
inc
add
xor
add
test
add
or
add
dec
add
add
add
add
add
shr
add
push
es
and
popf
add
add
add
add
cmp
add
add
and
add
add
iret
add
add
cmp
add
sub
sub
push
sub
sbb
jl
(bad)
call
or
cmp
(bad)
call
or
push
(bad)
inc
push
pop
push
xchg
add
add
add
add
and
and
mov
popa
and
mov
sub
pop
xchg
add
popa
rcr
(bad)
(bad)
dec
sbb
cs
(bad)
inc
and
jl
(bad)
and
test
and
pop
adc
fisub
shl
cmp
inc
sbb
data16
gs
and
and
and
data16
and
add
sbb
sub
dec
in
popa
data16
test
popa
and
jle
popa
das
or
or
(bad)
(bad)
(bad)
call
sub
push
or
mov
or
mov
(bad)
dec
pop
cmp
(bad)
(bad)
call
or
cmps
(bad)
(bad)
inc
jae
add
or
sub
add
sub
xor
add
add
push
add
adc
bound
add
adc
add
ret
add
add
or
add
in
add
add
add
add
add
pop
add
aas
add
add
add
aad
add
sbb
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
xor
add
sbb
add
sahf
and
pop
cmp
sub
push
inc
add
add
or
add
or
add
sldt
add
adc
jne
(bad)
call
adc
cmc
sbb
repnz
adc
out
pop
or
(bad)
(bad)
inc
and
add
and
add
sub
add
push
sub
sub
pop
mov
add
or
adc
add
cmp
(bad)
call
or
cmc
sbb
(bad)
(bad)
call
adc
and
(bad)
dec
or
add
sbb
(bad)
inc
or
or
add
add
and
push
bound
push
arpl
and
shl
popf
push
adc
lock
(bad)
dec
pop
adc
out
(bad)
call
cmp
(bad)
dec
pop
pop
or
adc
aad
(bad)
dec
pop
movlps
retf
(bad)
(bad)
call
cmp
(bad)
(bad)
call
or
add
mov
jae
add
or
sub
add
sub
add
xor
add
add
sldt
adc
lea
add
add
add
sub
add
adc
add
lea
add
add
push
pop
and
add
adc
add
sub
sbb
xchg
adc
add
add
popf
push
sbb
push
adc
add
xor
sbb
xchg
xor
add
add
adc
add
adc
add
push
add
push
sub
xor
add
sub
adc
add
push
add
add
add
adc
xor
inc
or
add
add
add
or
add
and
add
and
add
and
add
or
add
and
add
sub
add
shl
add
push
es
or
rol
add
inc
pop
inc
add
add
add
add
sbb
sub
or
mov
xor
add
sub
or
lods
add
adc
add
pop
add
add
add
adc
xor
inc
or
add
sub
add
and
add
sub
add
add
add
and
add
and
add
and
add
or
add
shl
add
push
es
add
pop
adc
add
add
add
add
pop
or
mov
or
mov
add
add
or
sbb
xor
add
add
add
add
sub
push
inc
or
add
add
add
sub
add
and
add
and
add
and
add
or
add
and
add
or
add
shl
add
sbb
sub
add
popa
pop
jns
inc
add
add
add
add
sbb
sub
or
mov
sub
add
or
sbb
sub
add
add
adc
add
les
popa
or
add
add
or
xchg
or
add
add
call
add
add
push
pop
pop
xchg
or
push
sbb
pop
adc
pop
or
lea
add
add
add
add
push
adc
mov
pop
push
sbb
push
adc
sub
add
add
adc
pop
xchg
adc
adc
pop
pop
adc
pop
xchg
popa
rcr
adc
add
or
inc
sub
add
adc
adc
add
adc
adc
add
add
xor
add
sub
add
push
sub
sub
add
push
sub
aaa
add
push
sub
add
xor
add
add
add
add
sub
inc
or
add
sub
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sbb
sub
add
popa
pop
sbb
add
add
add
add
pop
add
add
sub
push
sub
sbb
sub
add
sub
sub
add
sub
or
cdq
add
add
xor
add
add
add
add
sub
push
inc
or
add
and
add
and
add
sub
add
or
add
and
add
or
add
sar
add
push
es
add
pop
pop
pop
inc
add
add
add
add
sbb
sub
or
mov
add
xor
sbb
xor
and
add
add
add
push
add
pop
pop
inc
add
add
add
add
sub
add
add
or
sub
adc
add
jnp
add
add
add
sub
inc
pop
add
add
add
or
add
add
add
aas
add
add
add
add
add
add
add
add
cmp
add
sbb
sub
and
add
add
push
add
add
xor
add
and
lods
mov
or
add
or
cld
add
add
xchg
add
add
sbb
add
sub
sbb
sub
push
add
or
pop
add
add
add
add
push
sub
add
sub
adc
add
add
add
adc
cmp
inc
or
add
stos
add
add
add
or
add
xchg
add
add
add
add
add
add
add
cmp
add
cmp
add
pop
add
add
cmp
add
sbb
les
mov
add
push
and
dec
add
push
and
fwait
add
add
cmp
add
sub
mov
pop
or
xchg
push
pop
push
pop
xchg
and
gs
dec
lock
rcr
je
(bad)
inc
and
dec
sbb
stos
fadd
push
popa
and
data16
gs
and
or
and
jbe
ins
popa
gs
pop
sbb
cmp
(bad)
call
sub
push
or
xor
(bad)
call
or
sub
(bad)
dec
sbb
cmp
(bad)
(bad)
inc
jae
add
or
add
cmp
sub
add
or
sar
sub
sub
add
push
sub
add
push
sub
add
xor
add
add
add
add
sub
push
inc
or
add
add
add
sub
add
add
add
or
add
and
add
and
add
and
add
and
add
sar
add
push
sbb
sub
add
popa
pop
jl
inc
add
add
add
add
sbb
sub
or
mov
cmp
add
sub
or
lods
add
adc
add
add
add
add
push
or
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
inc
add
add
add
add
sbb
sub
sbb
cli
push
or
enter
cmp
add
sub
or
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
sub
cdq
add
xor
add
add
add
add
add
popa
pop
dec
pop
inc
add
add
add
add
sub
add
outs
cmp
add
sub
in
sub
add
push
sub
inc
add
push
sub
add
xor
leave
add
add
add
adc
push
add
push
sbb
push
inc
or
add
jns
add
jns
add
jns
add
jae
add
xor
add
add
add
add
jp
add
and
add
add
xor
add
and
xchg
ror
jae
add
or
pop
add
add
xor
add
sub
add
push
sub
sbb
sub
jae
add
or
rol
add
add
add
xor
add
and
xchg
ror
jae
add
or
sub
add
and
add
sbb
add
sub
sbb
cmp
(bad)
call
sub
jae
add
or
inc
cmp
add
jae
add
push
adc
add
dec
add
push
adc
add
rol
add
sub
add
adc
add
or
add
or
add
add
mov
aam
add
and
add
add
push
add
push
sub
push
jle
add
add
inc
add
push
and
mov
add
sub
add
push
or
sub
sub
(bad)
or
gs
repnz
add
int3
popa
and
gs
and
pop
adc
and
dec
loop
popa
and
push
popa
gs
out
push
call
or
popa
and
jecxz
mov
mov
add
mov
and
add
xchg
popa
and
data16
lock
mov
and
add
or
sbb
add
jge
add
add
or
and
add
cmp
(bad)
(bad)
inc
add
add
add
add
jecxz
jle
gs
test
jae
data16
mov
data16
add
add
add
imul
sub
dec
add
push
sub
add
xor
add
add
add
cmp
inc
or
add
imul
add
or
add
pop
add
add
add
add
add
add
add
xor
add
fwait
add
add
dec
add
push
sbb
les
and
add
add
cmp
add
add
cmp
outs
add
add
jbe
add
sub
add
push
or
or
call
jl
add
add
add
add
and
jmp
pop
fdivr
popa
gs
pop
cmp
pop
xchg
add
popa
rcr
(bad)
(bad)
inc
sbb
data16
and
cmps
icebp
and
and
data16
pop
sbb
cmp
(bad)
(bad)
call
or
neg
or
xor
(bad)
call
or
sub
(bad)
dec
sbb
and
(bad)
inc
jae
add
or
sub
add
sub
adc
add
outs
add
add
add
adc
sub
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
push
es
sub
pop
or
dec
sub
add
push
and
in
inc
aaa
stos
xchg
ror
jae
add
or
nop
sbb
add
sub
sbb
sub
push
add
or
sbb
add
add
add
push
sub
add
sub
adc
add
add
add
adc
cmp
inc
or
add
sub
add
or
add
or
add
xor
add
mov
add
mov
add
sub
add
add
add
add
add
add
dec
add
push
sbb
les
mov
add
push
and
add
and
add
sub
add
push
cmp
mov
push
or
popf
push
pop
push
pop
xchg
and
int3
gs
xor
and
rcl
push
or
jbe
(bad)
inc
and
mov
data16
popa
data16
jnp
popa
gs
and
and
ds
inc
push
push
popa
pop
and
mov
and
lods
(bad)
popa
gs
sub
popaw
data16
data16
pop
sbb
and
(bad)
call
neg
or
push
(bad)
(bad)
call
or
ud0
dec
push
or
pop
(bad)
(bad)
inc
jae
add
or
add
cmp
sub
add
or
ror
push
sub
sub
add
push
sub
dec
add
push
sub
add
xor
add
add
add
rcr
add
add
push
add
add
inc
sub
add
sub
xor
add
add
add
adc
push
adc
inc
adc
add
add
add
sub
add
or
add
jecxz
add
mov
add
add
add
add
add
dec
add
add
add
add
add
add
add
clc
add
add
add
add
add
ror
add
sbb
push
sub
add
add
or
push
sub
add
sub
push
add
push
or
and
out
add
sub
add
push
push
and
add
add
mov
and
add
sub
pop
or
push
cmp
(bad)
call
(bad)
cmc
adc
add
inc
sbb
push
and
rol
add
or
add
or
(bad)
(bad)
jmp
test
add
fld
add
sub
or
add
adc
add
sub
add
push
je
add
sbb
cmp
(bad)
dec
cmp
add
add
adc
cmp
(bad)
(bad)
push
add
or
movs
add
add
repz
add
daa
add
push
add
and
add
adc
(bad)
(bad)
(bad)
call
add
add
and
push
add
push
push
adc
pop
push
adc
cmp
add
add
add
add
push
push
add
and
add
add
popa
rol
pop
adc
cmp
push
pop
pop
adc
pop
push
adc
cmp
(bad)
call
push
add
or
adc
cmp
(bad)
call
sub
jae
add
or
pop
adc
or
pop
jae
add
or
or
adc
adc
inc
or
add
or
add
adc
add
dec
add
add
add
add
add
add
add
add
adc
sbb
adc
adc
push
adc
and
or
add
sub
add
push
adc
adc
push
adc
mov
inc
add
add
add
add
sub
adc
push
xor
(bad)
sbb
stc
fidivr
sbb
adc
adc
add
add
add
add
add
add
add
adc
sub
sbb
adc
aam
sub
adc
outs
aas
add
or
pop
adc
adc
inc
or
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
pop
and
add
add
imul
add
push
adc
and
add
add
mov
add
sub
add
push
and
add
add
push
add
push
adc
adc
sub
outs
xor
add
adc
inc
add
or
or
adc
cmp
(bad)
call
or
or
adc
adc
outs
inc
add
or
or
pop
or
adc
dec
(bad)
(bad)
call
or
xor
pop
or
adc
ds
(bad)
call
adc
cmp
(bad)
(bad)
dec
pop
outs
das
add
or
add
adc
or
adc
sbb
(bad)
dec
add
add
or
add
or
pop
or
adc
add
(bad)
call
not
add
adc
add
add
add
stos
add
add
add
add
adc
add
push
add
add
add
adc
xor
inc
or
add
add
add
sub
add
sub
add
or
add
or
add
and
add
or
add
and
add
rcl
add
sbb
sub
add
popa
pop
sbb
add
add
add
sbb
sub
sbb
sub
or
sbb
sub
add
add
add
add
sub
push
inc
or
add
sub
add
or
add
and
add
add
add
and
add
add
add
sub
add
and
add
rcl
add
es
or
rol
add
pop
pop
inc
add
add
add
add
sbb
sub
pop
or
mov
inc
add
or
pop
or
lods
add
adc
add
push
add
add
add
adc
xor
inc
or
add
add
add
and
add
add
add
sub
add
and
add
and
add
sub
add
or
add
rcl
add
es
add
push
pop
inc
add
add
add
add
sbb
sub
or
mov
sub
add
sub
adc
add
sbb
add
add
add
add
popa
pop
adc
add
add
add
add
sub
add
inc
add
or
sub
add
adc
add
sbb
add
add
add
add
pop
inc
add
add
add
add
sub
add
add
sub
add
sub
in
xor
add
add
add
add
add
add
popa
pop
pop
pop
inc
add
add
add
add
sub
add
add
inc
add
or
sub
add
sub
add
push
sub
pop
add
push
sub
add
xor
add
add
add
adc
push
add
push
sbb
push
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
test
add
and
add
add
xor
add
and
xchg
ror
jae
add
or
inc
add
and
sbb
add
sub
sbb
sub
push
add
or
inc
dec
add
push
jae
add
push
sbb
add
pop
add
push
sbb
add
rcr
add
sub
adc
add
mov
add
add
add
jns
add
and
add
add
inc
add
sub
add
sub
push
jle
add
add
push
add
push
and
fwait
add
add
xor
add
or
sub
sub
(bad)
push
je
and
je
popa
data16
and
mov
push
data16
mov
push
popa
data16
and
mov
dec
data16
dec
push
mov
lea
add
add
sbb
add
jge
add
add
or
and
add
cmp
(bad)
inc
add
add
adc
push
cdq
sub
dec
mov
popa
and
sub
gs
add
adc
imul
sub
pop
add
push
sub
add
xor
add
add
add
cmp
inc
or
add
sub
add
add
add
fld
add
add
add
rol
add
leave
add
add
add
add
add
add
add
add
add
sub
add
rcr
add
es
pop
sub
and
push
cmp
pop
push
pop
dec
sub
add
push
or
or
movs
pop
push
pop
push
xchg
add
add
adc
and
sub
data16
and
lahf
popa
and
dec
xchg
adc
and
sbb
data16
retf
pop
xchg
add
popa
rcr
pusha
(bad)
(bad)
inc
and
ret
outs
or
popa
and
(bad)
popa
and
and
and
and
lods
popa
gs
and
cmp
and
rcl
stos
in
jne
popa
and
lahf
imul
sbb
cmp
(bad)
(bad)
call
sub
sbb
add
or
std
(bad)
(bad)
dec
push
or
cmc
(bad)
(bad)
inc
jae
add
or
sub
add
sub
add
add
add
add
push
sbb
das
dec
add
add
int3
or
jmp
leave
add
add
add
jmp
add
lock
add
add
or
iret
aad
mov
mov
mov
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
fld
(bad)
repz
mov
aad
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
inc
(bad)
push
inc
jl
xor
dec
aad
aas
pop
div
inc
in
mov
test
outs
in
cmovno
inc
addr16
adc
ins
cmc
jae
or
adc
gs
add
xchg
movs
jne
xchg
mov
mov
mov
and
jo
inc
scas
movs
mov
mov
rcl
mov
cld
xlat
out
not
mov
icebp
(bad)
lds
rcl
xor
jecxz
lods
jbe
not
add
dec
fbstp
rcl
lahf
leave
xchg
sub
aaa
test
shr
sbb
arpl
jo
daa
cmc
sub
push
mov
aaa
push
movs
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
adc
les
ja
pop
inc
inc
lds
das
jp
jae
addr16
and
push
jno
pop
aas
imul
add
inc
in
pcmpeqb
and
pop
hlt
adc
dec
cmc
dec
pop
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
xchg
jmp
and
jo
inc
lods
movs
cdq
and
xchg
adc
fisttp
inc
lods
adc
and
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
test
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
dec
aad
aas
outs
div
in
mov
test
pop
in
cvtps2pd
push
addr16
hlt
or
push
cmc
arpl
dec
push
rcl
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jns
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
maxps
pop
addr16
hlt
adc
js
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
movs
mov
and
jo
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
cld
push
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
add
cmp
adc
jl
add
cmp
jae
daa
cmc
and
sub
dec
lock
lds
dec
sbb
push
loopne
aad
xor
(bad)
push
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
cmovb
cs
hlt
inc
mov
ins
cmc
jne
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
fdivr
scas
movs
mov
and
jo
inc
lods
movs
xchg
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
mov
aam
cld
push
mov
mov
push
cmp
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
and
add
cmp
jl
and
or
sub
inc
lock
(bad)
pop
movs
jg
add
push
loopne
aad
xor
or
jbe
outs
les
inc
popa
lds
das
jp
push
inc
fs
and
push
dec
aad
aas
outs
mul
in
mov
test
inc
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
into
aad
push
sti
mov
leave
xchg
aam
stc
in
gs
out
je
and
adc
mov
pop
das
test
xor
sub
cmp
jo
daa
cmc
add
das
mov
aaa
or
or
push
lds
add
push
daa
cmp
xor
(bad)
dec
push
je
and
(bad)
lds
das
jnp
inc
inc
ins
aam
and
push
pop
aad
aas
jo
push
ja
in
mov
test
addr16
cvtps2pd
addr16
hlt
push
pop
xchg
inc
jne
cmc
das
pop
dec
push
test
mul
test
push
iret
xchg
mov
(bad)
out
ss
mov
and
jo
inc
(bad)
movs
and
cmps
fnstenv
pusha
xchg
mov
xor
mov
out
inc
lods
adc
and
sahf
scas
mov
push
mov
in
call
rcl
mov
aam
xor
add
cmc
(bad)
fbld
out
je
and
adc
out
enter
adc
in
add
aas
xchg
sbb
adc
sub
add
push
lds
pop
cmps
pusha
daa
ds
loopne
aad
xor
(bad)
inc
push
ins
les
nop
jo
or
lds
das
cmp
sbb
and
push
push
aad
aas
sub
in
mov
test
pusha
in
mulps
addr16
hlt
push
mov
pop
cmc
inc
pop
push
push
nop
xchg
scas
add
push
mov
retf
add
add
jne
xchg
out
adc
test
mov
jmp
iret
(bad)
mov
xchg
xor
pusha
rcl
xchg
xor
jmp
adc
and
jecxz
fadd
(bad)
repz
in
add
push
sar
fs
xor
add
mov
fbld
out
je
and
jne
lahf
xlat
xchg
ds
add
xor
add
cmp
shl
sbb
aaa
adc
and
add
adc
xor
or
les
nop
outs
movs
dec
inc
dec
lds
js
inc
inc
pusha
aam
sbb
push
push
(bad)
outs
mul
in
mov
test
inc
in
cvtps2pd
inc
addr16
hlt
adc
pop
xchg
inc
jne
cmc
jg
dec
push
test
lods
gs
test
push
xchg
xchg
jne
xchg
test
xchg
mov
mov
jo
inc
mov
iret
popf
es
mov
lea
push
test
fist
inc
out
adc
and
(bad)
scas
iret
inc
rol
ret
add
xor
icebp
mov
xchg
fs
int3
add
mov
sahf
out
test
adc
lahf
ficom
data16
in
add
js
pop
pop
and
adc
outs
mov
aaa
or
and
cmp
(bad)
pop
mov
loopne
aad
xor
dec
(bad)
push
nop
movs
push
inc
lds
js
inc
inc
js
sub
push
aad
aas
imul
add
jno
ss
inc
addr16
hlt
sbb
pop
xchg
push
jne
cmc
arpl
dec
push
ficom
mov
mov
mov
push
iret
xchg
jne
xchg
xchg
adc
repz
and
jo
inc
(bad)
movs
and
cmps
mov
push
mov
fisttp
inc
repnz
and
fild
clc
push
out
in
call
repnz
test
shl
xlat
add
dec
icebp
je
and
adc
mov
pop
and
add
and
xor
adc
sub
movs
dec
lock
movs
jo
pop
cmps
pusha
daa
es
loopne
aad
xor
or
push
push
push
movs
dec
inc
inc
lds
popa
(bad)
push
inc
jg
cmp
addr16
push
jne
dec
aas
ins
mul
in
mov
test
inc
in
maxps
je
pop
hlt
jno
pop
xchg
ins
jne
cmc
and
dec
push
nop
xchg
xchg
add
push
lods
gs
out
mov
adc
inc
movs
jne
xchg
mov
(bad)
ss
and
xchg
inc
xchg
movs
cdq
and
xchg
adc
(bad)
push
jmp
and
lahf
scas
jecxz
fld
cld
push
mov
aad
push
cmp
fs
xor
add
test
je
and
adc
movs
lahf
retf
pop
add
in
add
cmp
adc
and
or
jg
mov
aaa
movs
sbb
adc
(bad)
add
and
or
adc
xor
xor
push
push
inc
les
xor
jl
lds
jp
jge
pusha
aam
sbb
push
pop
aad
aas
sub
inc
ja
in
mov
test
pop
in
mulps
pop
addr16
hlt
adc
jae
jle
or
mov
mov
mov
test
push
mov
inc
movs
jne
xchg
mov
lea
mov
movs
mov
mov
cmps
test
mov
xor
ret
inc
into
adc
inc
shr
fst
loope
int
xlat
push
mov
xchg
xor
add
jecxz
ret
data16
int3
je
and
adc
lds
add
add
xchg
pop
cmp
adc
cmp
push
lock
movs
jb
cmp
push
loopne
aad
xor
dec
(bad)
inc
push
jae
jne
xor
jno
jg
push
inc
jl
jl
push
aad
aas
push
push
ja
in
mov
test
in
nop
and
hlt
adc
jo
popa
pop
dec
push
lods
xchg
test
lods
push
mov
test
push
nop
xchg
jne
xchg
adc
mov
and
jo
inc
mov
iret
cdq
es
push
cli
mov
xor
not
iret
inc
icebp
adc
and
int
inc
(bad)
movs
push
hlt
add
xor
loope
sti
jbe
imul
lds
aam
sti
in
ror
fbstp
adc
sub
add
add
jg
push
pop
add
adc
aaa
mov
aaa
shld
push
aas
movs
sub
cmps
and
add
xor
or
push
nop
ja
jae
jns
pop
das
js
push
inc
push
aam
cmp
jno
add
outs
div
adc
js
dec
test
gs
in
mulps
and
hlt
sbb
pop
xchg
cmp
cmc
pop
pop
dec
push
adc
gs
test
push
ret
xchg
mov
push
and
jo
inc
xchg
movs
cdq
and
mov
pusha
pushf
push
mov
fisttp
inc
mov
lds
aam
cld
push
mov
loope
(bad)
cmc
push
sar
xor
add
test
je
and
adc
movs
lahf
rcl
add
sub
or
outs
cmp
jb
and
sbb
sub
pop
lock
lds
and
or
adc
xor
or
jbe
outs
les
nop
ins
movs
jae
cmp
jb
data16
jp
fs
and
push
jbe
pop
aas
data16
ja
in
mov
test
push
out
addr16
hlt
sbb
inc
xchg
cmp
cmc
popa
pop
dec
push
test
repnz
popf
adc
inc
mov
mov
jmp
and
jo
inc
mov
iret
xchg
movs
cmps
test
pusha
test
mov
xor
xchg
xlat
out
inc
fcom
mul
xchg
scas
stc
inc
out
call
std
xor
jecxz
div
not
xor
add
mov
ret
data16
popf
je
and
adc
mov
pop
sub
add
cmp
sbb
cmp
xchg
dec
jg
mov
aaa
sub
and
add
adc
push
aad
xor
dec
(bad)
inc
push
inc
les
movs
pop
inc
imul
push
inc
and
cmp
push
dec
aad
aas
sub
push
ja
in
mov
test
pop
in
cvtps2pd
fs
hlt
push
mov
jg
jnp
jne
lods
xchg
mov
mov
mov
adc
inc
mov
adc
mov
stos
and
jo
inc
mov
cmps
and
out
cmps
cwde
xor
pusha
test
mov
xor
(bad)
xlat
ret
inc
loopne
jmp
inc
retf
scas
fild
(bad)
ficom
in
out
rcl
mov
iret
fidiv
rol
(bad)
lahf
data16
out
je
and
jne
lahf
leave
xchg
sub
xor
sub
add
aas
xchg
cmp
adc
ins
mov
aaa
sub
lds
dec
push
cmps
pusha
daa
add
xor
dec
(bad)
dec
push
sub
and
dec
lds
jns
js
push
aam
and
push
jno
dec
aas
sub
in
mov
test
pusha
in
cmovae
pop
addr16
hlt
jno
pop
xchg
jge
dec
cmc
and
dec
push
xchg
xchg
mov
in
lods
gs
lea
xchg
xchg
adc
inc
lahf
jne
xchg
mov
movs
mov
and
jo
inc
mov
iret
popf
es
pusha
adc
fist
inc
mov
(bad)
ret
inc
add
push
inc
stc
xor
(bad)
mov
retf
test
rol
test
je
and
adc
iret
lahf
iret
xchg
add
sub
sub
add
test
outs
cmp
xchg
xor
daa
cmc
push
adc
sub
movs
inc
lock
lds
and
add
adc
xor
or
jbe
outs
les
nop
xor
adc
jns
jp
push
aam
and
push
jbe
add
das
div
jb
add
push
out
addr16
hlt
sbb
inc
xchg
cmp
cmc
jl
inc
push
xchg
xchg
mov
loopne
mov
mov
mov
push
xchg
xchg
jne
xchg
test
mov
jo
inc
stos
movs
lea
call
push
sti
mov
xor
(bad)
xlat
in
inc
in
adc
and
repz
jecxz
out
(bad)
out
mov
aad
push
sti
mov
nop
fs
xor
add
mov
out
je
and
adc
iret
lahf
xlat
xchg
ss
das
test
in
add
and
jo
es
sbb
xor
and
or
adc
sbb
adc
xor
or
push
push
push
les
je
outs
inc
(bad)
lds
inc
jo
dec
and
push
imul
bound
in
mov
test
in
mulps
pop
addr16
hlt
pop
mov
inc
cmc
inc
pop
push
push
test
mov
mov
mov
adc
inc
cmps
jne
xchg
lock
movs
mov
and
jo
inc
xchg
mov
xor
pusha
xchg
push
mov
fisttp
inc
lods
adc
and
fild
rcl
xor
test
les
into
add
ror
je
and
adc
mov
pop
jno
pusha
shl
adc
xchg
pop
xor
adc
sub
ds
cmp
dec
pop
cmps
bound
or
push
loopne
aad
xor
or
push
push
jl
gs
je
dec
inc
jge
or
cmp
push
inc
cmp
mov
push
push
aad
aas
jnp
dec
ja
in
mov
test
dec
in
maxps
je
pop
hlt
pop
mov
jae
pop
pop
dec
push
leave
xchg
lods
add
push
mov
mov
mov
push
xchg
xchg
mov
mov
movs
mov
and
jo
inc
scas
movs
mov
repnz
call
pusha
adc
fisttp
inc
rcl
hlt
and
xchg
scas
mov
push
mov
out
jecxz
fcom
mov
iret
mov
aad
sti
in
gs
fldenv
out
je
and
adc
ret
lahf
int
add
sub
arpl
xor
adc
xchg
pop
aas
xchg
jl
and
and
sub
mov
aaa
adc
and
cmp
outs
daa
xor
xor
or
push
push
xor
ja
push
movs
adc
outs
lds
das
inc
mov
aam
adc
push
pop
aad
aas
ja
fs
in
mov
test
inc
in
punpckhdq
das
addr16
hlt
mov
push
cmc
pop
pop
or
mov
mul
test
push
mov
inc
xchg
jne
xchg
mov
mov
mov
and
jo
inc
mov
movs
lods
cmps
fnstenv
mov
xor
(bad)
xlat
rol
and
xchg
scas
into
inc
rol
push
out
add
aad
test
lea
lea
jecxz
call
and
adc
ret
lahf
mov
pusha
shl
in
add
cmp
imul
cmc
cmp
xor
adc
mov
aaa
shld
adc
cmp
add
sub
ds
xor
adc
fs
jg
sub
inc
push
inc
das
inc
(bad)
push
inc
arpl
cmp
push
push
aad
aas
sub
jb
inc
in
mov
test
in
cmovno
pop
addr16
hlt
mov
push
cmc
jnp
push
push
mov
xchg
add
push
cwde
lea
fwait
push
mov
mov
adc
xor
inc
out
and
cmps
xchg
xor
pusha
rcl
mov
ret
inc
cmc
adc
and
iret
scas
out
aad
rcl
mov
push
sar
aam
ret
xor
add
loopne
fsub
out
je
and
adc
les
jno
add
or
sbb
cmp
jae
daa
cmc
and
es
aaa
adc
and
sbb
push
loopne
aad
xor
or
inc
push
pusha
les
ja
jae
jns
pop
das
cmp
sbb
aam
and
push
push
aad
aas
push
dec
ja
in
mov
test
push
out
addr16
adc
dec
cmc
and
dec
push
test
push
xchg
mov
push
test
movs
jne
xchg
in
adc
cmps
mov
and
jo
inc
fwait
movs
mov
es
push
lods
mov
xor
aam
retf
adc
and
repz
cmps
inc
aam
cld
push
mov
loope
ret
push
lock
iret
mov
(bad)
add
dec
les
les
mov
pop
sub
sub
sub
xor
cmp
xor
xor
xchg
add
mov
aaa
xor
and
add
push
loopne
aad
xor
or
jbe
outs
les
nop
jno
push
push
lds
das
mov
aam
and
push
jb
(bad)
outs
mul
in
mov
test
sbb
xor
inc
out
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
test
mov
mov
adc
inc
xor
mov
ss
mov
and
jo
inc
scas
movs
test
call
push
mov
fisttp
inc
mov
(bad)
fisubr
(bad)
push
hlt
add
xor
xchg
aam
stc
xor
add
mov
out
je
and
adc
mov
pop
aas
test
das
in
add
cmp
pop
shl
jg
mov
aaa
or
inc
lock
sub
dec
pop
cmps
and
pop
mov
loopne
aad
xor
or
push
je
aas
nop
outs
movs
jb
cmp
(bad)
push
inc
and
push
xor
push
imul
jb
gs
mov
test
inc
in
cmova
fs
hlt
adc
je
pop
pop
dec
push
rcl
mov
mov
mov
push
add
jne
xchg
lahf
adc
mov
xchg
inc
stos
movs
scas
and
mov
pushf
xor
pusha
adc
fist
inc
cmc
adc
and
retf
scas
mov
push
icebp
add
xor
cmp
xlat
add
std
(bad)
fldenv
out
je
and
adc
mov
pop
and
and
cs
add
aas
xchg
popa
xchg
jl
cmp
aas
adc
sub
and
dec
lds
add
and
adc
aad
xor
or
inc
push
jno
push
nop
ja
gs
ins
lds
js
jl
jo
xor
popa
mov
push
jno
dec
aas
inc
test
in
mov
test
push
in
maxps
pop
outs
hlt
sbb
jne
cmc
pusha
pop
dec
push
mov
scas
add
push
mov
add
xchg
xchg
mov
push
and
jo
inc
lods
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
fild
cld
push
mov
out
in
cmc
push
(bad)
mov
into
fs
xor
add
mov
fisub
out
je
and
adc
mov
pop
sub
popa
shr
in
add
cmp
adc
and
or
jg
mov
aaa
and
and
sbb
add
xor
cmp
ins
push
ja
jl
jo
or
lds
cmp
inc
inc
js
cmp
jl
dec
push
cs
aas
dec
test
in
mov
test
gs
cmovb
ja
jp
push
mov
or
push
pop
outs
push
(bad)
xchg
xchg
add
push
icebp
gs
push
mov
mov
jne
xchg
mov
movs
dec
and
jo
inc
fwait
movs
mov
test
mov
xor
in
xlat
mov
rcl
leave
and
out
scas
fld
(bad)
repnz
rol
xor
(bad)
mov
cld
fs
xor
add
ret
(bad)
clc
data16
icebp
je
and
adc
rcr
aas
test
in
add
and
or
(bad)
cmc
sbb
or
xor
push
lds
and
push
cmps
xor
inc
mov
loopne
aad
xor
or
inc
push
push
les
movs
je
inc
lds
arpl
jp
ins
aam
and
pop
aad
aas
imul
outs
mov
test
pop
in
pcmpeqb
push
outs
hlt
outs
mov
dec
cmc
daa
pop
push
push
nop
xchg
mov
gs
mov
push
cmps
xchg
jne
xchg
mov
ss
and
jo
inc
mov
mov
es
pusha
mov
xor
lock
in
inc
rcl
shl
scas
fiadd
mov
xor
xchg
loop
lds
aam
shl
frstor
(bad)
fldenv
out
je
and
adc
in
mov
add
ja
push
add
cmp
outs
sar
daa
adc
xor
daa
lock
lds
sbb
cmps
or
push
mov
loopne
aad
xor
dec
(bad)
or
nop
jae
pop
inc
cmp
dec
das
ds
jns
arpl
xor
popa
aad
aas
sub
imul
test
push
out
addr16
hlt
adc
jne
cmc
dec
pop
outs
push
mov
lods
gs
lods
add
test
out
mov
mov
ss
leave
and
jo
inc
stos
movs
lea
lahf
cmps
xchg
xor
pusha
adc
fisttp
inc
in
mul
shr
cld
push
cld
add
xor
cmp
shl
add
mov
frstor
out
je
and
adc
aam
iret
xchg
push
pop
sub
arpl
xor
xor
cmp
xchg
pop
pusha
xchg
xor
adc
ins
mov
aaa
sub
lds
and
add
push
loopne
aad
xor
or
or
nop
xor
adc
jns
jp
push
aam
xor
jo
pop
aas
and
in
mov
test
pop
in
addps
pusha
addr16
push
mov
or
inc
pop
push
push
stos
xchg
mov
gs
test
push
xchg
xchg
mov
stos
ss
mov
and
jo
inc
scas
movs
test
cmps
cmps
xor
ret
push
mov
(bad)
push
(bad)
xlat
rol
leave
and
(bad)
scas
fadd
(bad)
out
mov
aad
push
(bad)
mov
xchg
shl
rol
repz
fsub
out
je
and
jne
lahf
ficom
ins
shl
in
add
and
cmp
and
jo
es
push
adc
das
mov
aaa
or
inc
lock
push
and
sbb
xor
add
aas
xor
or
push
je
ins
nop
ja
dec
inc
outs
lds
jg
push
inc
jl
jl
arpl
arpl
jne
arpl
in
mov
test
gs
in
cmovae
and
hlt
pop
mov
or
push
rcl
mov
stos
test
push
add
jne
xchg
mov
(bad)
mov
xchg
inc
nop
movs
movs
and
loope
pushf
xor
pusha
adc
fisttp
inc
cmps
adc
and
shr
cld
push
mov
in
loopne
(bad)
push
sar
xor
add
dec
(bad)
rcl
lahf
retf
pop
xor
add
aas
xchg
sbb
adc
sub
sbb
pextrw
push
dec
sbb
mov
loopne
aad
xor
(bad)
inc
push
ins
les
ja
jae
jns
push
das
outs
(bad)
inc
arpl
cmp
popa
mov
push
imul
dec
ja
in
mov
test
dec
in
maxps
je
pop
hlt
pop
mov
push
cmc
inc
pop
or
xchg
xchg
xchg
add
push
mov
pop
sahf
push
les
mov
lods
xchg
mov
ss
mov
and
jo
inc
call
mov
pusha
cmps
push
mov
fisttp
inc
std
adc
and
ret
scas
loopne
fadd
out
push
xlat
add
xor
repz
lea
retf
in
ror
les
les
repz
test
pop
sar
in
add
cmp
and
cmp
and
movzx
movs
cmp
xor
sub
pop
cmps
sbb
loopne
aad
xor
or
jbe
outs
les
xor
pop
inc
lds
popa
(bad)
ins
inc
cs
adc
push
jb
(bad)
outs
mul
in
mov
test
pop
in
nop
and
je
pusha
mov
pop
cmc
push
pop
or
mov
push
hlt
gs
test
add
xchg
xchg
movs
xchg
scas
adc
in
mov
and
jo
inc
mov
iret
cdq
es
cmps
xor
pushf
push
pushf
mov
xor
enter
rcl
shl
out
scas
mov
push
repnz
xor
repz
(bad)
fs
jmp
(bad)
fldenv
out
je
and
adc
mov
pop
and
add
add
add
add
sbb
or
adc
and
pop
cmps
jns
pop
mov
loopne
aad
xor
adc
jno
jle
dec
nop
jnp
pop
inc
inc
lds
das
jg
push
inc
jl
xor
ins
aad
aas
outs
mul
gs
mov
test
pop
out
addr16
push
mov
jo
outs
pop
push
push
stos
xchg
movs
add
push
mov
mov
mov
adc
inc
mov
adc
test
xchg
movs
sahf
and
mov
pusha
test
mov
xor
rcl
inc
lods
adc
and
nop
scas
stc
inc
stc
(bad)
rcl
out
loopne
not
mov
(bad)
fs
rol
dec
fbstp
fcom
fistp
aas
test
ror
in
add
jg
pop
pop
sbb
cmc
pop
adc
sub
inc
lock
pop
cmps
and
xor
xor
cmp
les
inc
pop
lds
jg
push
inc
jnp
jge
pusha
mov
push
popa
aad
aas
push
in
mov
test
pusha
in
movq
pop
addr16
hlt
or
dec
cmc
gs
dec
push
test
push
test
add
rol
jne
xchg
mov
ss
(bad)
and
jo
inc
test
iret
fldenv
cwde
cmps
lahf
xor
pusha
fst
mov
xor
ret
xlat
leave
inc
not
mov
fcmovb
inc
scas
jecxz
cli
mov
xor
cmp
xor
add
test
les
movs
lahf
aad
push
pop
jno
arpl
aaa
in
add
adc
ds
add
adc
sub
movs
xor
adc
sub
sbb
adc
inc
aad
xor
or
les
nop
xor
adc
inc
fs
cmp
push
push
aad
aas
outs
mul
in
mov
test
pop
in
nop
cmp
mov
ja
jne
pop
push
xchg
jmp
add
rol
jne
xchg
mov
fdivr
lods
ss
xchg
and
jo
inc
scas
movs
cmps
and
cmps
cmps
xor
mov
(bad)
xlat
call
and
xchg
scas
cli
inc
out
sti
push
lock
xor
sar
lea
xchg
add
jmp
je
and
adc
out
in
xchg
add
aaa
test
in
add
cmp
and
and
inc
adc
sub
or
sub
sub
sbb
adc
sub
sub
pop
or
ins
push
dec
les
movs
outs
inc
(bad)
lds
das
jns
add
jl
jl
addr16
push
imul
dec
ja
in
mov
test
addr16
minps
pop
addr16
push
mov
push
cmc
and
xchg
lea
push
mov
enter
shr
mov
adc
inc
mov
adc
movs
mov
and
jo
inc
nop
movs
movs
and
call
push
test
mov
xlat
out
in
icebp
and
nop
scas
jecxz
add
in
(bad)
repnz
(bad)
mov
in
test
xlat
add
dec
popf
je
and
adc
in
lahf
into
xchg
push
pop
sub
add
sbb
adc
and
jae
daa
cmc
and
adc
pop
aaa
pop
movs
dec
lock
cmp
dec
sbb
mov
loopne
aad
xor
(bad)
inc
push
ins
les
movs
pop
inc
outs
lds
jp
inc
inc
jg
cmp
arpl
add
imul
inc
mov
test
sbb
aas
pcmpeqd
je
pop
hlt
adc
imul
pop
dec
push
test
push
mov
lea
mov
adc
inc
movs
jne
xchg
mov
(bad)
ss
mov
ret
jo
inc
xchg
movs
test
xchg
iret
call
pusha
rcl
lea
lock
jecxz
into
adc
and
hlt
scas
inc
(bad)
into
push
fiadd
push
test
call
add
ret
data16
ret
je
and
adc
cmps
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
sub
and
xor
jg
mov
aaa
sub
and
add
push
loopne
aad
xor
sub
les
push
movs
dec
inc
dec
lds
jg
ins
inc
gs
add
push
and
dec
aas
jns
arpl
in
mov
test
gs
in
divps
jo
jno
adc
add
cmp
cmc
outs
pop
dec
push
test
mul
test
push
xchg
xchg
jne
xchg
lods
adc
push
mov
mov
(bad)
es
cwde
xor
pusha
sahf
push
stc
mov
xor
in
xlat
jmp
call
sti
and
loope
fld
(bad)
int3
push
rol
xor
out
mov
shl
repz
ret
(bad)
clc
data16
(bad)
ret
adc
out
iret
xchg
add
add
add
cmp
sbb
adc
or
aaa
lock
(bad)
sbb
adc
cs
loopne
aad
xor
dec
(bad)
push
nop
aaa
movs
jo
jle
pop
das
arpl
jp
pop
aam
xor
jge
pop
aas
dec
neg
in
mov
test
arpl
jbe
pop
out
addr16
hlt
outs
mov
(bad)
cmc
jb
movlhps
xchg
mov
push
mov
enter
mov
inc
cmps
xchg
jne
xchg
xchg
adc
mov
nop
and
jo
inc
jmp
es
cwde
xor
pusha
lahf
push
xor
mov
not
(bad)
and
cmc
scas
sti
inc
ret
(bad)
fst
mov
push
cmp
fs
rol
ror
je
and
adc
mov
pop
aas
test
jp
das
add
cmp
xor
daa
cmc
and
cs
aaa
xor
pop
lock
adc
sbb
sbb
add
xor
(bad)
inc
push
jl
gs
je
pop
inc
dec
lds
das
jge
inc
inc
pop
aam
and
jns
arpl
and
in
mov
test
push
out
addr16
hlt
pop
mov
inc
cmc
dec
pop
push
push
mov
scas
add
push
mov
retf
add
movs
xchg
jne
xchg
cwde
adc
movs
mov
and
jo
inc
mov
iret
cwde
es
cmps
mov
push
mov
fbstp
inc
mov
(bad)
std
scas
sti
inc
std
(bad)
in
mov
out
jecxz
in
push
iret
mov
xchg
fs
int
shl
in
aad
cwde
data16
cmc
je
and
jne
lahf
mov
(bad)
shl
in
add
cmp
ja
and
sbb
das
mov
aaa
adc
and
cmp
xor
push
aad
xor
or
jbe
outs
les
outs
movs
inc
pop
lds
das
jns
jp
push
aam
and
push
jb
(bad)
outs
test
jl
push
test
pop
in
cmovbe
cmp
hlt
jno
inc
xchg
inc
jne
cmc
and
dec
push
xchg
xchg
hlt
add
push
mov
rol
mov
adc
inc
mov
adc
mov
jo
inc
mov
iret
lahf
es
push
test
fist
inc
rcl
lock
xchg
scas
cli
inc
stc
(bad)
fst
out
aad
iret
push
cmp
fidiv
into
add
mov
out
je
and
jne
lahf
enter
sub
add
cmp
rcr
aas
adc
das
mov
aaa
movs
sbb
adc
sub
aas
movs
jb
sbb
push
loopne
aad
xor
or
push
push
push
les
nop
je
outs
inc
(bad)
lds
inc
and
popa
and
push
imul
aas
ja
in
mov
test
sbb
xor
pop
out
addr16
hlt
adc
jo
das
pop
dec
push
xchg
mov
enter
shr
mov
adc
inc
mov
adc
lock
and
jo
inc
(bad)
movs
cmps
and
out
cmps
xchg
xor
pusha
ret
push
scas
mov
xor
ret
inc
not
jmp
(bad)
korw
scas
ret
(bad)
in
mov
cld
xor
(bad)
mov
repz
xor
add
iret
pop
data16
out
je
and
adc
rcr
adc
add
cmp
sub
and
pop
adc
sub
and
pop
movs
and
push
lds
and
daa
cmps
and
add
ds
aad
xor
das
(bad)
arpl
les
push
movs
cmovne
das
js
cmova
jae
jne
dec
push
das
aad
aas
pop
div
ja
in
mov
test
gs
in
punpckhdq
push
addr16
hlt
push
mov
dec
cmc
and
dec
push
test
stos
add
push
mov
movs
test
push
mov
inc
movs
jne
xchg
mov
pushf
push
and
jo
inc
out
les
xchg
ret
mov
xor
iret
xlat
xlat
inc
rcl
shl
jecxz
fadd
(bad)
sti
push
rol
xor
cmp
fs
add
in
(bad)
cli
iretw
out
je
and
adc
rcr
sub
add
cmp
jae
fs
pop
adc
das
mov
aaa
adc
and
add
adc
xor
or
pop
push
imul
nop
imul
jne
dec
aam
xor
push
outs
aad
aas
jno
jae
jle
inc
mov
test
pop
in
cmovae
outs
hlt
dec
mov
push
cmc
and
dec
push
lods
xchg
mov
loopne
lods
gs
test
push
popf
xchg
jne
xchg
xchg
adc
jmp
jo
inc
xchg
movs
test
mov
lds
pusha
xchg
mov
xor
jmp
adc
and
retf
inc
in
(bad)
out
push
fiadd
stc
xor
fnstcw
in
shl
xchg
add
test
fldenv
out
je
and
adc
in
hlt
xchg
sub
push
test
shl
add
js
cmp
shl
push
adc
adc
inc
lock
lds
and
push
cmps
xor
cmp
aad
xor
cmp
push
push
push
les
jo
adc
lds
js
inc
inc
ja
bound
sub
inc
aas
imul
arpl
jae
jbe
pop
out
addr16
hlt
jle
inc
xchg
and
cmc
arpl
dec
push
rcl
icebp
gs
lods
add
nop
xchg
adc
inc
mov
adc
movs
mov
and
jo
inc
(bad)
movs
lods
and
mov
xchg
xor
pusha
xchg
mov
xor
iret
xlat
repz
lods
adc
and
(bad)
scas
clc
inc
fcmovb
out
mov
loopne
(bad)
repnz
(bad)
mov
shl
fiadd
mov
fisub
out
je
and
jne
lahf
into
xchg
adc
add
add
arpl
jae
and
pop
adc
sub
inc
lock
movs
ss
pop
cmps
xor
cs
loopne
aad
xor
pop
(bad)
jle
jo
gs
dec
movs
dec
inc
jb
jge
pusha
(bad)
jns
and
cmp
popa
mov
push
push
aad
aas
outs
test
in
mov
test
fs
cmovae
pop
addr16
push
mov
arpl
popw
dec
push
mov
scas
add
push
scas
gs
movs
add
mov
inc
mov
adc
lock
and
jo
inc
stos
movs
cmps
and
cmps
cmps
mov
push
xor
in
inc
mov
(bad)
shr
mov
xor
(bad)
mov
retf
xchg
repnz
int
enter
les
les
stc
lahf
rcl
arpl
aaa
in
add
cmp
jl
and
and
jg
mov
aaa
adc
or
and
sbb
sbb
sbb
push
loopne
aad
xor
dec
(bad)
or
nop
jno
pop
inc
inc
lds
js
jl
pop
aam
and
push
dec
aad
aas
outs
mul
in
mov
test
pop
in
minps
pusha
addr16
push
mov
push
cmc
push
pop
dec
push
test
mov
mov
test
xchg
xchg
movs
xchg
xchg
adc
mov
(bad)
and
jo
inc
jmp
es
push
mov
fisttp
inc
mov
(bad)
xchg
scas
cli
inc
out
call
std
xor
icebp
mov
aam
xor
add
repz
fisub
out
je
and
adc
out
lahf
into
xchg
add
pop
test
shl
in
add
and
jo
and
and
sub
and
and
sbb
pop
loopne
aad
xor
or
push
je
and
pop
lds
das
jg
push
inc
pop
aam
and
push
imul
jbe
ins
in
mov
test
pop
out
addr16
jle
push
xchg
inc
jne
cmc
dec
pop
outs
push
stos
xchg
mov
gs
xchg
ret
xchg
lahf
xchg
mov
mov
mov
and
jo
inc
xchg
movs
mov
cmps
cmps
xor
lahf
push
stos
mov
xor
icebp
xlat
retf
adc
and
in
loope
in
(bad)
cmps
push
leave
add
xor
repz
lds
nop
add
test
fst
out
lahf
retf
pop
add
add
cmp
and
aas
cmc
pop
adc
or
cmp
pop
lds
and
pop
cmps
jns
sbb
adc
pop
aad
xor
dec
(bad)
push
push
inc
les
ja
jae
jge
adc
jp
js
js
push
and
fs
pop
aad
aas
imul
add
arpl
push
inc
out
addr16
xchg
ins
jne
cmc
dec
pop
dec
push
adc
gs
mov
push
mov
jne
xchg
xchg
adc
mov
aad
test
inc
jmp
es
cmps
xor
pusha
rcl
mov
mov
xlat
(bad)
inc
int
(bad)
and
fisubr
not
out
int
test
fidivr
jmp
add
into
(bad)
in
mul
shl
adc
loope
retf
pop
sub
add
jl
adc
and
adc
sub
movs
xor
adc
cmp
sbb
push
loopne
aad
xor
inc
(bad)
jbe
outs
les
ja
or
lds
jns
jp
fs
and
push
push
aad
aas
dec
test
in
mov
test
pop
in
mulps
pop
addr16
hlt
push
inc
xchg
ins
jne
cmc
cmp
dec
push
test
mov
cdq
test
push
rol
jne
xchg
nop
adc
xchg
mov
and
jo
inc
mov
iret
cdq
es
push
test
(bad)
push
(bad)
xlat
in
inc
in
adc
and
xlat
scas
mov
mov
xor
cmp
fs
rol
mov
shl
(bad)
je
and
adc
mov
pop
aaa
test
in
add
xor
xchg
jo
and
aas
adc
xor
and
adc
cmp
dec
pop
cmps
sbb
cmp
xor
dec
(bad)
jno
outs
les
nop
jo
dec
inc
(bad)
lds
das
jg
jge
js
cmp
push
push
aad
aas
imul
add
push
in
nop
inc
addr16
hlt
sbb
pop
xchg
pop
jne
cmc
fs
dec
push
rcl
lods
gs
add
cmps
xchg
jne
xchg
xchg
adc
mov
test
movs
and
cmps
xor
cdq
push
test
mov
xlat
int
loopne
mul
aam
stc
inc
cli
(bad)
in
std
add
xor
out
mov
lahf
xchg
xlat
add
mov
fsub
out
je
and
adc
jecxz
int
add
push
test
shl
in
add
cmp
cmp
and
jae
daa
cmc
and
adc
push
aaa
xor
lds
dec
pop
cmps
push
daa
and
xor
inc
(bad)
push
push
ins
les
nop
jno
dec
inc
jge
pop
das
jge
pop
inc
arpl
das
and
push
jno
push
aas
push
test
in
mov
test
fs
mulps
jne
push
hlt
adc
dec
cmc
das
pop
dec
push
adc
gs
test
push
mov
inc
mov
adc
icebp
mov
and
jo
inc
jmp
es
cmps
lahf
xor
pusha
adc
fisttp
inc
movs
adc
and
shr
in
push
mov
out
jecxz
icebp
push
out
sti
jbe
test
add
jmp
out
je
and
jne
lahf
mov
cmp
xor
dec
add
daa
xchg
pop
sub
ja
xor
and
sub
movs
daa
lock
addr16
pop
cmps
xor
sbb
push
loopne
aad
xor
or
adc
les
ja
or
lds
ins
(bad)
jne
jns
je
jae
push
push
push
aad
aas
push
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
push
jne
cmc
outs
pop
jns
lahf
xchg
xchg
add
push
xchg
mov
cwde
push
add
jne
xchg
stos
adc
div
mov
mov
mov
popf
cmps
cwde
xor
pusha
pushf
push
lods
mov
xor
retf
xlat
mov
loopne
in
mov
inc
jmp
sti
push
cld
add
xor
fdivr
xchg
fs
xor
gs
fsub
out
je
and
adc
cmc
lahf
rcl
or
add
cmp
xchg
adc
fs
sbb
aaa
mov
aaa
or
adc
dec
lds
and
sbb
pop
loopne
aad
xor
cmp
dec
push
jno
pop
nop
push
movs
dec
inc
outs
lds
cmp
ins
inc
js
inc
sub
push
pop
aad
aas
dec
div
inc
in
mov
test
arpl
maxpd
jg
inc
hlt
inc
mov
push
cmc
das
pop
dec
push
test
mul
test
push
nop
xchg
jne
xchg
mov
(bad)
push
mov
movs
and
mov
push
test
mov
xlat
rol
out
cld
(bad)
leave
scas
ret
inc
rol
lds
loopne
adc
push
cmp
div
mov
(bad)
cdq
data16
stc
je
and
adc
out
lahf
retf
pop
aas
test
shr
in
add
cmp
and
adc
das
mov
aaa
shld
add
sub
push
movs
ins
dec
add
push
loopne
aad
xor
dec
(bad)
inc
push
pop
les
je
pop
inc
jge
adc
inc
arpl
xor
jne
add
imul
inc
mov
test
pop
in
nop
pusha
addr16
hlt
adc
jg
push
pop
pop
push
nop
xchg
scas
add
push
mov
sahf
test
push
mov
mov
mov
movs
jne
xchg
mov
into
push
and
jo
inc
lods
movs
cdq
and
cdq
cmps
fwait
xor
pusha
rcl
xchg
xor
rcl
ret
adc
and
repnz
mov
push
mov
loope
(bad)
xlat
push
fidivr
iret
xchg
int
in
in
test
je
and
adc
movs
lahf
xlat
xchg
ds
jne
and
add
and
jl
and
or
jg
mov
aaa
add
and
pextrw
cmp
sbb
adc
pop
aad
xor
adc
jg
imul
nop
jno
pop
inc
popa
lds
das
jg
push
inc
pusha
aam
and
pop
push
pop
aad
aas
sub
addr16
in
mov
test
push
in
nop
inc
addr16
hlt
sbb
jne
cmc
and
dec
push
test
mul
test
push
mov
inc
loop
mov
mov
ss
mov
and
jo
inc
mov
iret
test
call
push
cmps
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
fst
std
xor
ret
jbe
not
fs
rol
ror
fdiv
rcl
lahf
rcl
rcl
in
add
cmp
shl
and
sub
jo
or
and
cmp
mov
loopne
aad
xor
or
les
je
dec
inc
(bad)
lds
das
jge
inc
inc
push
aam
and
push
imul
dec
ja
in
mov
test
addr16
cvtps2pd
pop
addr16
hlt
inc
mov
push
cmc
das
pop
dec
push
mov
mov
mov
mov
push
fld
mov
adc
lea
nop
inc
mov
iret
ret
movs
cmps
pushf
xor
pusha
adc
fistp
inc
lods
adc
and
cmc
scas
std
inc
add
push
repz
xor
pushf
mov
int3
xchg
xlat
add
test
rcl
lahf
aam
sub
xor
pusha
shl
in
add
aas
xchg
cmp
cmp
(bad)
cmc
sbb
jg
mov
aaa
xor
and
pop
cmps
adc
pop
mov
loopne
aad
xor
or
ins
push
push
movs
dec
inc
dec
lds
(bad)
(bad)
push
inc
inc
aam
xor
push
xor
dec
aas
dec
div
jbe
jp
dec
test
jg
dec
(bad)
out
addr16
adc
dec
cmc
and
movhps
push
repnz
stos
out
mov
adc
inc
movs
jne
xchg
cwde
adc
repz
and
jo
inc
hlt
movs
and
pushf
pusha
xchg
mov
xor
(bad)
xlat
out
inc
loop
shl
jecxz
fadd
(bad)
rcl
jmp
mov
ret
xor
add
in
pop
iretw
out
je
and
adc
rcr
and
in
add
xchg
pop
pusha
xchg
jb
fs
pop
adc
sub
movs
pop
lock
lds
and
sbb
or
add
aas
xor
adc
pop
push
imul
ins
inc
pop
lds
outs
mov
js
jle
jle
sbb
aad
aas
imul
jge
push
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
push
ja
js
dec
push
rcl
mov
pop
mov
adc
inc
loopne
mov
mov
fdivr
sahf
ss
mov
and
jo
inc
mov
iret
frstor
std
cmps
xchg
pusha
ret
mov
xor
aam
(bad)
inc
in
hlt
and
sahf
scas
lds
mov
xor
fdivr
shl
int3
add
ror
je
and
jne
lahf
leave
xchg
adc
and
or
add
jl
sbb
cmp
adc
ins
mov
aaa
adc
and
or
mov
loopne
aad
xor
or
dec
push
xor
ins
nop
ins
movs
jbe
inc
lds
jp
pop
inc
jae
outs
cmp
push
pop
aad
aas
xor
xor
in
mov
test
inc
in
cmovne
and
hlt
push
mov
jns
je
ins
push
xchg
xchg
jmp
gs
test
add
add
jne
xchg
mov
mov
mov
movs
movs
and
mov
xor
fbstp
inc
loope
clc
and
int
mov
push
in
add
push
in
jmp
xor
gs
(bad)
out
je
and
adc
out
lahf
int
adc
or
add
cmp
je
daa
cmc
and
cs
aaa
pop
movs
pop
lock
adc
sbb
sbb
add
xor
(bad)
inc
push
ins
les
nop
jno
pop
inc
dec
lds
jns
jns
and
push
cmp
push
xor
popa
aas
ja
push
ja
in
mov
test
pusha
in
minps
and
hlt
adc
push
cmc
pusha
pop
dec
push
adc
gs
test
push
xchg
mov
adc
mov
xchg
inc
xchg
movs
cdq
and
cdq
cmps
shl
lahf
push
mov
fisttp
inc
cmps
adc
and
lahf
scas
inc
(bad)
movs
push
iret
add
xor
cmp
test
xchg
add
aad
cwde
data16
cmc
je
and
jne
lahf
mov
(bad)
shl
in
add
cmp
shl
or
and
push
movs
inc
lock
lds
xor
mov
loopne
aad
xor
sbb
jbe
outs
les
ja
or
das
jns
jp
fs
cmp
push
dec
aad
aas
outs
mul
in
mov
test
addr16
cvtps2pd
inc
addr16
hlt
push
mov
inc
cmc
inc
pop
dec
push
rcl
mov
mov
mov
adc
inc
pushf
jne
xchg
mov
ret
jmp
and
jo
inc
xchg
movs
test
cmps
cmps
xor
mov
nop
xlat
mov
mov
(bad)
int
inc
mov
xor
cmp
xchg
aam
iret
in
gs
shl
cdq
je
and
adc
out
leave
xchg
add
jb
xor
xor
dec
add
and
jb
and
aas
adc
xor
xor
pop
lds
dec
sbb
adc
pop
aad
xor
or
push
je
ins
nop
jo
pop
inc
dec
lds
jg
add
aam
cmp
push
pop
aad
aas
push
push
ja
in
mov
test
push
in
mulps
pop
addr16
jne
inc
xchg
jns
push
cmc
das
pop
dec
push
rcl
mov
add
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
test
mov
inc
vcmpsd
xor
cmp
shl
add
lods
pop
data16
fbstp
rcl
lahf
retf
pop
xor
pusha
shl
in
add
aas
xchg
cmp
jge
cmp
add
sub
dec
lock
lds
dec
pop
cmps
sbb
loopne
aad
xor
(bad)
inc
push
ins
les
arpl
adc
jp
inc
outs
aam
and
push
jno
add
push
jbe
(bad)
in
mov
test
add
aas
maxps
je
dec
hlt
jo
inc
xchg
ins
jne
cmc
and
dec
push
xchg
xchg
lea
push
fwait
gs
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
lods
movs
cmps
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
loop
test
cld
push
std
add
xor
(bad)
mov
shl
rol
aad
les
out
je
and
adc
mov
pop
xor
add
cmp
jb
aas
cmc
pop
adc
das
mov
aaa
adc
inc
lock
lds
and
pop
cmps
xor
sbb
pop
loopne
aad
xor
or
push
push
outs
les
jbe
gs
dec
lds
(bad)
jp
fs
cmp
push
inc
aad
aas
imul
add
addr16
cvtps2pd
inc
addr16
hlt
adc
dec
cmc
push
pop
dec
push
rcl
mov
scas
test
push
mov
inc
movs
jne
xchg
lahf
adc
xchg
mov
and
jo
inc
mov
iret
cdq
es
push
loopne
xchg
xor
xchg
xlat
retf
adc
and
xchg
scas
cli
inc
out
out
push
scas
add
xor
cmp
fs
aam
iret
in
gs
out
je
and
adc
scas
lahf
rcl
ins
shl
in
add
xchg
shl
jg
mov
aaa
adc
and
sbb
pop
loopne
aad
xor
or
push
push
je
and
dec
lds
das
jg
push
inc
jl
cmp
push
jb
jo
outs
div
dec
in
mov
test
pop
in
cmovnp
je
inc
hlt
adc
jo
das
pop
dec
push
test
mov
add
cmps
xchg
jne
xchg
mov
sar
ss
mov
inc
test
iret
lahf
es
mov
pusha
call
fisttp
inc
(bad)
adc
and
nop
scas
stc
inc
cli
(bad)
mov
xor
(bad)
mov
jmp
in
gs
fisub
out
je
and
adc
mov
pop
xor
jg
cs
add
and
xor
adc
xor
dec
lock
cmp
dec
add
mov
loopne
aad
xor
(bad)
adc
les
nop
ja
jae
jns
or
pusha
mov
aam
and
push
inc
aad
aas
ins
div
in
mov
test
push
out
addr16
hlt
sbb
jne
cmc
push
pop
dec
push
nop
xchg
scas
add
push
mov
popf
test
push
cmps
xchg
jne
xchg
in
adc
movs
mov
and
jo
inc
xchg
movs
test
xchg
adc
fisttp
inc
fist
cmc
and
lahf
scas
inc
(bad)
in
push
mov
stc
xor
cmp
fs
rol
mov
frstor
out
je
and
adc
scas
lahf
iret
xchg
add
sub
shl
in
add
xchg
pop
fs
jl
and
or
xor
or
adc
inc
lock
lds
and
sbb
push
loopne
aad
xor
dec
(bad)
jbe
outs
les
ja
or
lds
jne
inc
inc
inc
aam
and
jb
bound
sub
dec
ja
in
mov
test
pop
in
mulps
addr16
sbb
inc
xchg
ins
jne
cmc
pop
pop
or
xchg
xchg
mov
loopne
mov
nop
test
push
xchg
xchg
popf
xchg
mov
ss
and
jo
inc
mov
iret
sahf
es
cmps
mov
push
lahf
mov
xor
xchg
xlat
in
inc
sti
adc
and
xchg
scas
mov
push
mov
aad
push
cmp
xor
add
mov
out
je
and
adc
rcr
test
ja
xor
cmp
xor
adc
sub
inc
lock
lds
and
sbb
xor
inc
aad
xor
(bad)
push
push
jl
inc
nop
xor
dec
inc
(bad)
lds
das
jns
cmova
jno
addr16
push
imul
inc
ja
in
mov
test
inc
in
nop
and
hlt
adc
jg
jl
dec
push
test
scas
gs
test
add
nop
xchg
jne
xchg
(bad)
adc
mov
and
xchg
inc
xchg
movs
and
cmps
pushf
xor
pusha
adc
(bad)
push
rcl
out
inc
lods
adc
and
fild
mov
xor
loop
test
retf
xor
add
(bad)
(bad)
fisub
out
je
and
adc
mov
pop
add
add
xchg
and
adc
data16
pop
adc
sub
cmp
sbb
adc
and
xor
sub
sub
pop
dec
(bad)
arpl
les
movs
push
inc
jno
ja
aas
(bad)
jg
data16
add
push
jo
jne
push
imul
ja
in
mov
test
fs
packssdw
jo
jae
ins
mov
jge
jnp
imul
xchg
xchg
add
push
repnz
test
push
les
cwde
jne
xchg
cdq
adc
xchg
mov
and
jo
inc
out
movs
mov
es
pusha
lahf
push
cmps
mov
xor
enter
mov
lds
inc
out
(bad)
icebp
push
int3
add
push
cmp
lock
call
out
je
and
adc
jecxz
in
sub
add
add
add
outs
shl
push
adc
adc
dec
lock
and
pop
cmps
add
loopne
aad
xor
aaa
(bad)
imul
inc
nop
jb
outs
inc
dec
lds
push
(bad)
fs
pop
aam
add
push
dec
aad
aas
sub
sub
in
mov
test
popa
in
subps
jnp
inc
hlt
dec
mov
inc
cmc
push
pop
je
test
movs
add
push
cmc
gs
test
add
mov
mov
jne
xchg
hlt
adc
jmp
jo
inc
xchg
movs
pushf
and
std
cmps
mov
xchg
pusha
fst
mov
xor
not
fild
into
and
xchg
scas
mov
push
iret
add
xor
aad
call
shl
int3
add
iret
(bad)
popf
shl
icebp
je
and
jne
lahf
(bad)
xchg
aas
pop
sub
add
jl
sub
addr16
and
and
and
aas
mov
aaa
daa
movs
inc
lock
movs
add
add
ds
aad
xor
push
(bad)
ins
push
popa
les
xor
lds
dec
(bad)
ins
inc
ins
aam
sbb
push
inc
aad
aas
pop
not
push
in
mov
test
in
addps
addr16
hlt
inc
mov
jno
and
outs
push
adc
cmps
test
add
fld
loopne
mov
cmps
mov
mov
xchg
xchg
es
cmps
test
pusha
xchg
push
mov
(bad)
push
hlt
xlat
hlt
inc
(bad)
adc
and
std
scas
fadd
(bad)
stc
push
std
add
push
cmp
fs
xor
add
int3
pop
data16
out
je
and
adc
fstp
sub
sbb
push
in
add
and
adc
adc
pop
adc
jae
push
aaa
or
lds
sbb
sbb
pop
mov
loopne
aad
xor
dec
(bad)
jl
jb
jae
inc
movs
dec
inc
jns
je
push
mov
jg
dec
adc
push
jl
ins
aas
jbe
dec
ja
in
mov
test
in
nop
and
mov
adc
push
pop
gs
lods
xchg
cmc
add
push
fwait
gs
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
nop
movs
fisub
scas
cmps
xchg
xor
pusha
mov
xor
call
mov
lock
and
call
(bad)
fst
hlt
xor
(bad)
mov
mul
test
(bad)
shl
rcl
lahf
les
add
adc
push
add
and
or
adc
push
mov
aaa
push
movs
sbb
and
cmps
xor
and
cmp
pop
aad
xor
adc
jg
ja
es
ins
movs
inc
inc
push
lds
das
inc
mov
aam
xor
push
jg
sbb
je
push
ja
in
mov
test
gs
push
unpckhps
and
add
inc
mov
push
cmc
push
pop
push
push
xlat
xchg
stos
add
push
cmps
gs
mov
push
xchg
mov
adc
xchg
mov
and
jo
inc
lock
cmps
and
in
mov
push
lods
mov
xor
rcl
inc
std
adc
and
out
fild
(bad)
into
push
lds
(bad)
xor
fistp
(bad)
xlat
xor
test
je
and
adc
fstp
xor
and
jbe
add
outs
and
or
pop
cmc
sbb
jg
mov
aaa
adc
and
cmps
add
pop
mov
loopne
aad
xor
pop
(bad)
jl
push
les
xor
lds
cmp
aam
add
push
inc
aad
aas
dec
test
in
mov
test
sbb
ds
es
hlt
push
mov
inc
cmc
pop
pop
fs
adc
mov
test
fld
mov
adc
mov
lods
inc
mov
iret
fwait
test
stos
push
lea
xchg
push
loopne
jmp
and
mov
rcl
mov
push
ret
jbe
not
add
fimul
(bad)
call
out
retf
xchg
sub
sub
jg
xor
push
add
push
xchg
pop
xor
adc
ds
aaa
push
movs
inc
lock
sbb
daa
cmps
xor
loopne
aad
xor
adc
inc
push
dec
les
nop
jae
jge
cmp
adc
pop
(bad)
jg
fs
add
push
js
jge
push
div
ja
in
mov
test
jb
bound
adc
hlt
push
mov
or
push
movs
xchg
lods
add
push
fwait
gs
test
add
mov
inc
mov
adc
mov
mov
lods
movs
xchg
fwait
cmps
xor
xchg
xor
loopne
aad
lods
adc
and
mov
mov
xor
fdivr
leave
fs
add
int
retf
out
je
and
adc
ficomp
xor
add
and
sub
sbb
aas
adc
adc
movs
and
xor
cmp
sbb
adc
dec
aad
xor
or
jle
jbe
and
jno
imul
(bad)
jae
outs
aam
cmp
ja
addr16
je
pop
ja
in
mov
test
gs
in
(bad)
out
addr16
adc
inc
cmc
das
pop
or
test
lock
push
mov
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
out
mov
es
pusha
cmps
push
mov
fistp
inc
mov
(bad)
lahf
scas
mov
push
ret
xor
(bad)
mov
into
fs
xor
add
lods
(bad)
cli
shl
je
and
jne
lahf
enter
aaa
test
and
push
add
and
or
sbb
xchg
add
mov
aaa
adc
and
and
or
pop
aad
xor
push
(bad)
dec
push
outs
les
inc
jb
push
das
fs
fs
cmp
mov
push
ins
aad
aas
push
imul
adc
push
mov
test
push
in
nop
push
addr16
push
mov
imul
scas
xchg
scas
add
push
repz
out
movs
push
mov
inc
mov
adc
xor
inc
mov
pushf
and
mov
mov
mov
fild
inc
mov
(bad)
xlat
scas
loop
sti
(bad)
stc
push
out
add
xor
ret
jbe
not
fs
add
les
(bad)
je
and
adc
out
lahf
call
test
shl
in
add
je
daa
pop
es
shl
push
jg
mov
aaa
and
and
and
adc
cmp
and
adc
jl
les
jae
dec
inc
push
lds
das
inc
(bad)
ja
fs
and
sbb
aad
aas
outs
not
fs
mov
test
in
unpcklps
push
addr16
hlt
push
mov
or
push
xchg
xchg
test
gs
test
push
mov
inc
mov
adc
mov
mov
xchg
movs
mov
es
cmps
xchg
xor
pusha
xchg
push
stos
mov
xor
loopne
out
inc
mov
(bad)
icebp
scas
mov
push
repnz
push
(bad)
mov
sahf
fs
lds
fisttp
fbstp
hlt
adc
ret
lahf
out
xchg
xor
aaa
test
and
sbb
jge
push
outs
xchg
shl
aaa
adc
ds
aaa
push
movs
pop
lock
movs
sub
cmps
xor
or
sub
pop
aad
xor
adc
les
ins
movs
adc
lds
push
(bad)
ins
inc
push
aam
adc
push
arpl
inc
aas
dec
mul
push
in
mov
test
push
in
punpckhdq
pop
addr16
hlt
push
mov
dec
cmc
pop
pop
push
add
push
repz
mov
test
mov
xchg
in
adc
mov
mov
mov
iret
ret
es
cmps
mov
mov
xor
mov
retf
adc
and
shr
int3
push
icebp
add
push
sar
shl
enter
and
int
(bad)
je
and
adc
in
lahf
call
ins
ror
in
add
and
or
pop
cmc
add
push
mov
aaa
adc
and
das
cmps
sbb
loopne
aad
xor
or
push
nop
ins
movs
push
inc
push
lds
dec
(bad)
pusha
inc
jb
aaa
add
push
ins
aad
aas
push
not
ins
in
mov
test
gs
in
nop
push
addr16
hlt
adc
jle
dec
pop
pop
push
adc
gs
std
add
mov
inc
mov
adc
mov
mov
jo
inc
mov
les
xchg
cmps
test
pusha
stos
push
scas
mov
xor
ret
inc
mov
(bad)
retf
inc
sti
(bad)
rcl
mov
push
fdivr
cld
fs
xor
add
out
clc
data16
les
(bad)
adc
call
xor
add
cmp
xchg
or
sbb
xchg
cmp
cmp
movs
sub
and
and
pop
loopne
aad
xor
adc
pop
push
imul
dec
inc
and
push
das
dec
(bad)
ja
inc
aam
add
push
jl
pop
aas
pop
imul
in
mov
test
pop
in
nop
inc
addr16
hlt
adc
or
cmp
outs
push
mov
push
mov
test
push
mov
inc
xchg
xchg
in
adc
movs
mov
and
jo
inc
lods
movs
(bad)
cdq
cmps
cdq
xor
pusha
adc
fistp
inc
not
into
and
sahf
scas
mov
test
retf
xor
xchg
(bad)
fs
xor
add
out
xchg
out
je
and
adc
in
les
jnp
and
sbb
and
adc
adc
or
jg
mov
aaa
or
pop
lock
lds
and
das
cmps
daa
daa
add
adc
dec
aad
xor
adc
les
movs
adc
dec
lds
push
(bad)
pop
inc
popa
aam
add
push
arpl
inc
aas
ins
mul
in
mov
test
adc
jle
push
out
addr16
hlt
push
mov
push
cmc
and
push
add
push
mul
test
push
xchg
xchg
test
jmp
and
jo
inc
out
mov
es
pusha
adc
mov
hlt
xlat
out
inc
out
leave
and
xchg
scas
mov
push
retf
add
xor
loop
div
test
add
loop
into
mul
(bad)
je
and
adc
aam
cmc
xchg
and
aaa
test
sar
push
add
and
and
adc
push
mov
aaa
adc
and
adc
mov
loopne
aad
xor
adc
les
jbe
push
inc
pop
lds
das
pop
(bad)
addr16
addr16
add
push
sub
test
in
mov
test
inc
in
unpcklps
inc
addr16
hlt
imul
pop
push
sahf
xchg
mov
loopne
xchg
mov
fwait
push
mov
inc
mov
adc
mov
mov
lods
movs
xchg
and
and
test
push
lock
ret
adc
and
int
cld
inc
test
jmp
mov
(bad)
fs
xor
repnz
je
and
adc
fstp
sub
(bad)
shl
in
add
add
and
adc
xchg
push
jg
mov
aaa
sub
and
cmp
push
daa
push
mov
loopne
aad
xor
adc
inc
push
imul
or
lds
das
push
(bad)
pop
inc
fs
and
sbb
aad
aas
push
neg
outs
in
mov
test
jp
popa
cmovb
inc
addr16
hlt
jo
jle
ss
cmc
pop
pop
push
push
movs
xchg
test
gs
test
push
rol
jne
xchg
mov
mov
jo
inc
lods
movs
and
cmps
cdq
xor
pusha
xchg
push
(bad)
mov
xor
in
in
inc
fst
into
and
mov
mov
xor
pushf
mov
in
in
xor
add
fisttp
fbstp
les
loopne
out
xor
add
add
xor
xchg
jb
cmp
inc
adc
cmp
push
lock
lds
push
cmps
pusha
daa
add
or
xor
aas
(bad)
imul
movs
js
pop
lds
das
push
outs
inc
jg
dec
and
push
sub
js
inc
neg
pop
in
mov
test
sbb
gs
push
addr16
hlt
dec
mov
inc
cmc
pop
pop
pop
push
lods
xchg
lods
add
push
test
mov
mov
lods
xchg
fcom
mov
mov
test
movs
sahf
and
xchg
cmps
xor
xchg
push
movs
mov
xor
ret
xlat
rol
and
shr
push
int
movs
xor
fistp
aad
shl
fadd
enter
std
out
je
and
adc
out
retf
xchg
ss
aaa
test
xor
push
add
xchg
pop
addr16
adc
sbb
add
add
movs
pop
lock
xor
inc
cmps
adc
inc
mov
loopne
aad
xor
sbb
jg
imul
je
jp
dec
das
pop
(bad)
arpl
aam
xor
push
js
inc
aas
imul
ja
in
mov
test
sbb
pop
cmovbe
js
dec
hlt
imul
dec
push
adc
mov
mov
xchg
xchg
cdq
xchg
mov
xchg
in
xchg
scas
inc
mov
xchg
and
mov
mov
push
mov
fistp
inc
mov
(bad)
int
mov
push
leave
add
xor
clc
mov
in
clc
xor
add
loop
jmp
je
and
adc
fstp
sub
ror
in
add
jle
xor
rcl
ds
mov
aaa
adc
sub
and
and
pop
loopne
aad
xor
sbb
adc
les
dec
movs
dec
inc
jae
push
das
(bad)
(bad)
jnp
fs
xor
push
and
jnp
outs
test
in
mov
test
in
addps
inc
addr16
hlt
ins
mov
or
push
test
mov
sti
push
mov
test
push
mov
inc
movs
jne
xchg
mov
movs
mov
and
jo
inc
lods
movs
shl
xchg
cmps
cdq
xor
pusha
movs
push
cli
mov
xor
in
out
inc
(bad)
adc
and
lahf
scas
jmp
add
xor
sti
mov
iret
(bad)
lock
fisttp
xchg
rcl
lahf
mov
adc
xor
push
add
and
jl
pop
cmc
inc
adc
cmp
movs
pop
lock
lds
adc
xor
add
xor
push
(bad)
pop
push
inc
les
nop
cmp
popa
das
push
(bad)
jo
and
cmp
dec
mov
push
arpl
inc
aas
jp
pop
ja
in
mov
test
add
xor
pop
out
addr16
hlt
dec
mov
dec
cmc
pop
pop
outs
push
sahf
xchg
mov
mov
mov
adc
inc
mov
adc
mov
xchg
and
jo
inc
mov
call
pusha
xchg
push
lods
mov
xor
in
lds
jecxz
rol
repz
shr
push
mov
mov
push
(bad)
mov
into
shl
test
(bad)
out
mul
(bad)
je
and
adc
fcomp
aas
test
and
dec
add
and
or
or
sbb
jg
mov
aaa
dec
movs
daa
lock
xor
and
cmp
loopne
aad
xor
push
(bad)
inc
push
inc
les
inc
push
lds
pop
(bad)
push
inc
addr16
add
push
ins
aad
aas
push
idiv
in
mov
test
sbb
push
jl
push
addr16
hlt
imul
gs
mov
in
gs
test
add
mov
inc
xchg
xchg
loop
mov
jmp
(bad)
mov
and
jo
inc
mov
lahf
es
cmps
mov
push
mov
fistp
inc
mov
(bad)
into
scas
loop
sti
(bad)
ficom
mov
push
ret
jbe
not
fs
loope
lock
gs
out
data16
ret
je
and
adc
int
(bad)
xchg
push
pop
add
add
sub
add
adc
inc
adc
cmp
movs
sub
and
cmps
xor
sbb
add
inc
aad
xor
or
push
push
xor
sub
inc
lds
das
pop
mov
addr16
cmp
push
pop
aad
aas
dec
imul
dec
in
mov
test
in
unpckhps
push
addr16
hlt
push
mov
or
push
lods
xchg
test
gs
mov
test
mov
inc
mov
adc
cmps
mov
and
jo
inc
out
fsub
and
push
test
fist
inc
repz
and
xchg
scas
in
aad
mov
xor
(bad)
mov
leave
fs
xor
add
test
retf
out
je
and
adc
fcomp
xor
shl
in
add
and
or
adc
push
mov
aaa
shld
add
cmp
and
adc
adc
or
pop
adc
les
nop
je
jl
jno
or
inc
(bad)
jae
js
cmp
and
inc
aas
push
not
in
mov
test
push
in
cmovno
push
outs
hlt
dec
mov
dec
cmc
pop
pop
push
add
push
lea
test
push
scas
xchg
jne
xchg
mov
cmp
mov
mov
out
xchg
and
sahf
cmps
mov
xchg
pusha
xchg
push
div
mov
cld
xlat
test
mov
inc
out
(bad)
out
push
repz
push
(bad)
mov
into
fs
xor
add
loopne
popf
mul
popf
je
and
adc
rcr
and
in
add
xchg
cmp
or
adc
sbb
jg
mov
aaa
adc
and
and
or
dec
aad
xor
or
dec
push
aaa
les
jo
jl
cmp
or
outs
(bad)
fs
addr16
add
push
das
aad
aas
ins
test
in
mov
test
popa
in
lsl
push
addr16
push
mov
ja
pop
pop
pop
push
mov
mov
jecxz
mov
mov
out
pop
movs
xchg
jne
xchg
mov
mov
add
(bad)
and
push
div
mov
inc
mov
(bad)
shr
push
out
out
aad
loope
pushf
mov
iret
fs
add
out
leave
data16
les
(bad)
adc
fstp
xor
add
and
or
jge
sbb
cmp
movs
sub
and
sbb
pop
loopne
aad
xor
adc
inc
push
push
les
nop
jb
dec
inc
cmp
adc
push
(bad)
push
inc
fs
add
push
ins
aad
aas
outs
test
in
mov
test
pop
in
(bad)
out
addr16
hlt
push
mov
or
push
lods
xchg
mov
loopne
cwde
gs
test
lods
xchg
jne
xchg
mov
test
test
movs
fbld
xchg
cmps
xor
fistp
inc
mov
(bad)
lahf
scas
mov
push
fadd
mov
push
cld
mov
out
shl
xchg
add
(bad)
pop
je
and
adc
cli
lahf
les
jnp
sub
test
outs
or
or
adc
ds
aaa
and
and
adc
mov
loopne
aad
xor
push
(bad)
jne
jbe
pusha
nop
movs
inc
inc
imul
pop
inc
jg
inc
xor
pop
aad
aas
push
div
ja
in
mov
test
push
in
unpckhps
arpl
hlt
push
mov
or
es
fs
test
mov
xchg
gs
out
mov
sahf
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
cmps
and
in
mov
push
xchg
mov
xor
(bad)
inc
mov
lds
inc
inc
in
mov
mov
push
std
mov
into
shl
sti
add
test
std
adc
out
retf
xchg
add
or
in
add
add
aaa
pop
outs
xchg
aaa
rcr
add
jg
mov
aaa
adc
lds
and
cmp
sbb
xor
push
(bad)
jl
jno
dec
nop
jo
jbe
imul
push
inc
addr16
and
pop
push
sub
inc
aas
ins
test
jge
arpl
jg
add
push
addr16
hlt
imul
jae
fist
jmp
add
mov
inc
cwde
jne
xchg
jmp
mov
mov
movs
xchg
and
and
xchg
xor
lock
enter
shl
scas
sti
inc
xchg
icebp
push
rol
xor
pushf
mov
nop
fs
retf
add
out
(bad)
retw
out
je
and
adc
movs
lahf
(bad)
xchg
and
jae
daa
rcr
in
add
jl
adc
shl
arpl
add
push
movs
and
and
sub
adc
xor
add
jl
jb
pop
nop
dec
movs
dec
inc
dec
lds
das
dec
(bad)
push
inc
pusha
aam
adc
push
dec
aad
aas
jle
dec
ja
in
mov
test
pop
in
unpckhps
inc
addr16
hlt
pop
mov
je
outs
pop
jg
stos
xchg
mov
mov
test
push
scas
xchg
jne
xchg
mov
movs
mov
and
jo
inc
scas
movs
cdq
and
xchg
cmps
cdq
xor
pusha
xchg
push
(bad)
mov
xor
in
call
and
call
(bad)
stc
push
enter
(bad)
push
loopne
iret
jbe
not
fs
aad
stos
in
gs
retf
out
je
and
adc
aad
les
cmp
and
pop
add
daa
xchg
pop
pop
xchg
or
sbb
xchg
xor
aaa
or
and
or
add
pop
aad
xor
add
les
movs
adc
js
adc
push
(bad)
dec
inc
pop
aam
sbb
push
jl
js
push
div
mov
test
pop
in
nop
push
addr16
hlt
inc
mov
push
cmc
pop
pop
push
add
push
mul
test
push
mov
inc
xor
(bad)
mov
and
jo
inc
out
cmps
and
xchg
cmps
lahf
xor
pusha
xchg
push
stc
mov
xor
(bad)
test
mov
inc
inc
mov
xor
(bad)
mov
hlt
xlat
xor
add
loop
std
iretw
out
je
and
adc
mov
pop
xor
add
add
ds
cs
aaa
rcr
sub
jg
mov
aaa
pop
movs
ds
lds
and
cmp
xor
add
add
daa
aad
xor
push
(bad)
ins
push
pusha
les
jo
inc
inc
jae
push
das
pop
(bad)
arpl
aam
add
push
dec
aad
aas
push
test
add
ins
in
maxps
jg
add
xchg
jle
jle
pop
pop
fs
movs
xchg
mov
in
push
xchg
gs
std
add
mov
inc
mov
adc
mov
jo
inc
mov
fisub
and
push
cmps
mov
xor
rcl
hlt
inc
in
adc
and
xchg
scas
mov
push
cmc
add
push
ret
jbe
test
add
out
lds
out
je
and
adc
call
ja
aaa
shl
in
add
jns
and
es
pop
sar
sbb
cmp
movs
sub
and
sbb
pop
loopne
aad
xor
adc
jl
inc
les
arpl
ins
das
pop
(bad)
outs
inc
inc
aam
add
arpl
outs
aas
push
test
in
mov
test
push
in
unpckhps
push
addr16
push
mov
or
push
lods
xchg
test
out
add
xchg
xchg
xchg
mov
test
mov
and
jo
inc
stos
movs
mov
es
cmps
cdq
xor
pusha
xchg
push
mov
mov
inc
mov
lds
inc
rol
out
mov
aad
push
into
mov
leave
fs
xor
add
fisttp
fbstp
fcom
ret
xchg
pop
pop
xor
sub
and
xor
and
je
cmp
inc
adc
ds
aaa
add
and
or
or
pop
aad
xor
push
(bad)
jb
jbe
and
jno
inc
das
push
(bad)
jae
jb
or
push
dec
aad
aas
push
neg
push
in
mov
test
gs
in
pcmpeqb
inc
addr16
hlt
push
mov
or
popa
pop
or
test
add
test
push
scas
xchg
jne
xchg
out
adc
mov
jo
inc
xchg
movs
pushf
and
xchg
cmps
sahf
xor
pusha
mov
xor
hlt
xlat
leave
inc
les
repz
xchg
scas
mov
push
int
in
cld
aad
push
sar
xlat
xor
add
ror
les
std
adc
out
les
popa
shl
in
add
jg
sbb
ds
adc
imul
adc
sub
adc
push
movs
sub
sbb
or
add
pop
loopne
aad
xor
cmp
outs
push
xor
and
jo
or
lds
pop
(bad)
fs
addr16
xor
push
das
aad
aas
pop
imul
push
in
mov
test
gs
in
cvtdq2ps
ins
addr16
hlt
push
mov
inc
cmc
push
pop
jle
adc
mov
mov
mov
cmps
adc
inc
xchg
jne
xchg
mov
mov
mov
(bad)
movs
xchg
and
out
cmps
cdq
xor
pusha
xchg
push
mov
mov
inc
mov
(bad)
jecxz
cmc
inc
sti
(bad)
icebp
push
in
mov
push
cld
mov
out
fwait
xor
add
in
loope
repz
je
and
adc
fstp
or
add
and
adc
sbb
sbb
adc
movs
inc
lock
add
dec
pop
cmps
sbb
sbb
xor
inc
aad
xor
adc
dec
push
jle
cmp
cmp
adc
daa
(bad)
ja
jge
pop
and
sbb
aad
aas
push
imul
in
mov
test
in
nop
outs
addr16
hlt
push
mov
or
push
stos
xchg
mov
xchg
mov
adc
inc
std
jne
xchg
mov
test
in
ss
jo
inc
lods
movs
and
mov
push
mov
retf
push
in
out
inc
movs
adc
and
mov
stc
push
retf
add
push
(bad)
mov
leave
fs
aad
stos
in
gs
cld
data16
out
je
and
jne
lahf
les
add
and
sbb
sub
and
adc
inc
adc
ds
aaa
xor
and
and
adc
add
aas
xor
das
(bad)
push
nop
dec
movs
dec
inc
pop
lds
das
inc
mov
pop
aam
add
push
arpl
inc
aas
pop
imul
dec
in
mov
test
jno
gs
push
addr16
hlt
adc
or
gs
movhps
push
cmc
gs
out
pop
mov
call
xchg
in
adc
mov
fwait
inc
cmps
movs
(bad)
cdq
cmps
sahf
xor
pusha
rcl
mov
push
repnz
jmp
and
xchg
scas
std
inc
vcvtpd2dq
in
aad
lods
push
sti
mov
in
fs
xor
add
loop
(bad)
mul
hlt
je
and
adc
rcr
and
add
adc
aaa
pop
cmp
adc
ja
adc
push
movs
sbb
sbb
sub
and
adc
dec
aad
xor
cmp
ins
push
inc
les
jae
pop
inc
push
or
imul
push
add
push
das
aad
aas
dec
test
in
mov
test
imul
push
addr16
hlt
imul
push
adc
gs
test
push
mov
inc
mov
adc
mov
rol
movs
xchg
and
mov
xchg
push
mov
lods
push
rcl
int
mov
(bad)
lahf
scas
mov
push
int
fidiv
sar
lahf
shl
into
add
in
ret
data16
ret
je
and
adc
int
retf
xchg
or
adc
in
add
sbb
xchg
or
pusha
cmc
pop
adc
cmp
movs
adc
or
outs
and
cmp
sbb
add
xor
adc
pop
push
imul
dec
inc
cmp
jo
inc
(bad)
jns
js
dec
sub
sbb
aad
aas
push
test
in
mov
test
in
addps
and
hlt
jl
arpl
and
outs
push
test
mov
test
push
fld
cmps
jne
xchg
mov
movs
mov
and
jo
inc
lods
movs
shl
cmps
mov
push
(bad)
mov
xor
in
xlat
jmp
lods
adc
and
lahf
scas
mov
push
aam
ret
xor
fdivr
leave
shl
cmc
add
dec
int3
je
and
adc
out
lahf
out
xchg
xor
pop
test
shl
in
add
jp
xor
cmp
adc
adc
cmp
and
sub
mov
loopne
aad
xor
aas
(bad)
imul
movs
adc
lds
das
pop
(bad)
jo
dec
aam
or
push
ja
inc
aas
push
not
push
in
mov
test
push
in
cmovns
push
addr16
hlt
dec
mov
push
push
aad
scas
add
push
hlt
mov
mov
adc
inc
mov
adc
sahf
and
jo
inc
mov
iret
(bad)
es
cmps
sahf
xor
pusha
xchg
push
mov
fistp
inc
in
repz
lds
jecxz
jecxz
fbstp
out
stos
jbe
neg
fs
xor
add
mov
xchg
iretw
out
je
and
adc
fcomp
aaa
test
adc
sub
add
aaa
pop
and
adc
push
mov
aaa
sub
and
and
pavgb
aaa
xor
adc
les
inc
jb
pop
das
pusha
(bad)
arpl
aam
cmp
push
dec
aad
aas
jge
push
ja
in
mov
test
sbb
out
addr16
push
mov
inc
cmc
inc
pop
push
push
adc
gs
test
add
mov
inc
xchg
jne
xchg
mov
mov
mov
mov
aad
mov
xchg
push
sahf
mov
xor
loopne
hlt
inc
loopne
in
(bad)
(bad)
shr
fist
retf
aad
push
hlt
mov
iret
les
retf
add
int3
(bad)
out
je
and
adc
scas
lahf
(bad)
xchg
and
jno
aaa
shl
in
add
or
imul
cmc
or
jg
mov
aaa
adc
inc
lock
movs
aaa
dec
cmp
bound
cmp
xor
adc
jae
dec
les
nop
jp
pop
inc
push
lds
das
pop
(bad)
pusha
inc
data16
add
push
ja
inc
aas
push
test
push
mov
test
gs
in
unpckhps
inc
addr16
hlt
jl
jge
jns
jbe
popw
ins
push
mov
push
xchg
xchg
mov
adc
inc
xchg
jne
xchg
mov
ss
mov
and
jo
inc
cwde
movs
fbld
cmps
cmps
cdq
xor
pusha
retf
mov
xor
(bad)
xlat
out
inc
in
adc
and
les
xlat
push
repnz
push
(bad)
mov
leave
fs
xor
add
out
(bad)
fisub
out
je
and
adc
cmps
lahf
(bad)
xchg
add
and
add
xchg
pop
and
cmc
inc
adc
xor
aas
aaa
and
and
sub
mov
loopne
aad
xor
add
les
ins
movs
inc
inc
jno
adc
inc
(bad)
jp
push
aam
or
push
arpl
inc
aas
pop
neg
dec
in
mov
test
pop
in
lsl
dec
addr16
hlt
inc
mov
(bad)
cmc
pop
pop
push
add
push
stos
mov
mov
adc
inc
mov
adc
mov
xchg
and
jo
inc
call
iret
xchg
test
xchg
push
mov
fistp
inc
mov
lds
inc
repz
cli
push
int
fnsave
aad
div
div
fs
xor
add
loop
hlt
data16
fnstenv
les
fistp
aaa
test
ror
in
add
jne
aaa
pop
cmp
je
and
sbb
jg
mov
aaa
adc
and
cmp
jns
pop
mov
loopne
aad
xor
add
ins
push
outs
les
jo
or
lds
inc
(bad)
ja
das
aam
add
push
je
dec
aas
push
test
in
mov
test
push
in
cmovs
pop
addr16
hlt
push
mov
push
cmc
pop
pop
ins
push
aad
mov
push
mov
mov
std
add
cdq
xchg
jne
xchg
call
mov
mov
lock
and
cmps
xchg
pusha
lahf
push
mov
fistp
inc
int
enter
repz
xchg
scas
mov
push
lds
retf
aad
push
pushf
mov
fbld
retf
add
fisttp
les
fist
call
add
ins
ror
in
add
or
sar
sbb
cmp
movs
sub
and
inc
cmps
sbb
add
xor
add
jb
les
dec
movs
je
cmp
dec
das
outs
(bad)
ja
cs
xor
push
ins
aad
aas
jge
dec
ja
in
mov
test
in
unpckhps
pop
addr16
hlt
push
mov
or
push
lods
xchg
mov
mov
test
add
mov
inc
mov
adc
mov
jo
inc
lods
movs
test
test
test
clc
mov
xor
ret
inc
lods
adc
and
mov
stc
push
xlat
add
xor
lock
xchg
fs
xor
add
fisttp
shl
rcl
loop
les
aas
sar
in
add
cmp
and
pop
cmc
pop
adc
cmp
pop
lock
cmp
sbb
dec
loopne
aad
xor
adc
les
nop
push
movs
imul
(bad)
ja
inc
aam
add
push
dec
aad
aas
push
mul
jl
push
mov
test
push
in
packsswb
push
addr16
hlt
dec
mov
jp
pop
pop
push
add
push
repz
std
push
lods
xchg
adc
inc
test
cmps
xchg
lock
xchg
mov
and
jo
inc
cmps
movs
mov
es
cmps
sahf
xor
pusha
mov
xor
(bad)
xlat
mov
not
leave
and
xchg
scas
mov
push
test
int3
push
(bad)
mov
into
fs
retf
in
gs
xchg
data16
out
je
and
adc
aam
xchg
xchg
and
xor
add
and
or
or
add
jg
mov
aaa
push
movs
push
lock
xor
and
adc
pop
aad
xor
adc
je
popa
les
inc
jb
adc
pusha
(bad)
sbb
aam
sbb
push
das
aad
aas
push
test
in
mov
test
cmovg
inc
addr16
popa
mov
push
cmc
push
pop
gs
mov
mov
loop
movs
gs
test
add
mov
inc
jmp
jmp
and
jo
inc
mov
fisub
xchg
cmps
test
pusha
xchg
push
movs
mov
xor
rcl
repz
(bad)
adc
and
xchg
scas
cmc
inc
ffree
call
mov
push
sar
fs
xor
add
enter
fsub
in
in
and
adc
fistp
cmp
ins
rcl
in
add
xchg
rcr
pop
adc
ss
aaa
adc
adc
push
lds
pop
movs
or
cmps
pusha
daa
inc
mov
loopne
aad
xor
adc
push
push
dec
les
nop
inc
movs
jo
pop
lds
das
dec
(bad)
push
inc
jno
dec
cmp
push
das
aad
aas
push
test
in
mov
test
jp
bound
pop
out
addr16
hlt
inc
mov
or
push
mov
hlt
gs
test
push
mov
inc
test
xchg
in
adc
movs
mov
and
jo
inc
mov
test
xchg
cmps
test
pusha
xchg
push
sti
mov
xor
jmp
and
xchg
scas
jmp
in
(bad)
fcom
mov
push
sar
xlat
fs
xor
add
loope
out
(bad)
icebp
je
and
adc
fcomp
je
add
je
adc
outs
and
xadd
sbb
mov
aaa
sub
and
cmps
sbb
pop
mov
loopne
aad
xor
adc
les
jb
inc
inc
jae
adc
ins
(bad)
pop
inc
jg
dec
and
pop
push
sub
jo
pop
div
mov
test
dec
in
mulps
push
addr16
ins
mov
push
cmc
pop
pop
gs
mov
push
cmps
gs
push
xchg
xchg
jne
xchg
mov
ss
mov
jo
inc
out
shl
cmps
movs
xor
pusha
movs
push
test
(bad)
push
hlt
xlat
mov
les
leave
and
(bad)
scas
mov
push
enter
aad
loop
out
mov
lahf
fs
xor
add
test
fsub
out
je
and
adc
ficomp
xor
cmp
jbe
push
add
and
or
push
cmc
add
fs
aaa
pop
movs
push
lock
xor
add
mov
loopne
aad
xor
cmp
ins
push
jb
and
jo
dec
inc
pop
lds
pop
mov
aam
add
push
push
aad
aas
push
div
ins
in
mov
test
gs
in
punpckhbw
push
addr16
hlt
push
mov
inc
cmc
inc
pop
pushw
adc
mov
pop
test
mov
adc
xchg
mov
and
jo
inc
mov
mov
and
mov
push
in
xlat
inc
mov
(bad)
xchg
scas
mov
jecxz
icebp
push
rol
xor
lds
(bad)
shl
iret
add
mov
leave
mov
and
adc
ficomp
sub
popa
sar
in
add
sbb
adc
adc
add
push
movs
add
and
and
add
adc
and
adc
pop
push
popa
les
inc
and
ins
das
popa
(bad)
je
inc
aam
add
push
pop
aad
aas
push
test
in
mov
test
pop
in
unpckhps
jb
outs
hlt
push
mov
je
pop
pop
jo
lods
xchg
scas
add
push
mul
test
add
test
mov
adc
movs
mov
and
jo
inc
test
iret
cdq
movs
cmps
cdq
xor
pusha
xchg
mov
xor
loope
out
inc
lods
adc
and
shr
cld
push
lds
mov
push
lds
leave
shl
xchg
add
test
adc
lahf
(bad)
xchg
aaa
pop
xor
jg
adc
test
outs
or
and
(bad)
cmc
inc
adc
or
jno
and
and
cmp
xor
pop
aad
xor
adc
outs
push
dec
les
nop
xor
inc
das
pop
(bad)
jae
and
inc
or
push
pop
aad
aas
push
div
push
in
mov
test
gs
unpcklps
inc
addr16
hlt
push
mov
or
and
push
add
push
cmc
gs
test
push
xchg
xchg
jne
xchg
in
adc
mov
jo
inc
out
and
xchg
pusha
nop
push
mov
(bad)
push
hlt
xlat
lock
out
fisub
shr
std
push
int
(bad)
xor
(bad)
mov
into
shl
xlat
add
aad
(bad)
mul
(bad)
je
and
adc
fcomp
or
in
add
sbb
aas
pop
outs
xchg
add
adc
xchg
sbb
mov
aaa
adc
and
and
adc
xor
xor
ins
push
jl
pop
nop
jo
or
lds
outs
(bad)
pop
inc
addr16
sbb
push
je
inc
aas
dec
test
in
mov
test
jp
dec
nop
push
addr16
hlt
dec
mov
push
cmc
inc
pop
push
add
push
mov
add
mov
inc
mov
adc
mov
movs
inc
mov
pushf
and
mov
xchg
pusha
test
test
mov
inc
mov
(bad)
loop
mov
push
retf
add
xor
(bad)
mov
shl
retf
add
out
mul
out
je
and
adc
out
(bad)
xchg
and
xor
in
add
jnp
das
pop
es
jge
adc
xchg
add
mov
aaa
add
and
pop
cmps
sbb
sbb
es
aad
xor
sbb
pop
push
outs
les
nop
outs
movs
push
inc
cmp
pop
das
jge
ja
jl
inc
add
push
dec
aad
aas
push
test
in
mov
test
in
cvtps2pd
ins
addr16
push
mov
or
push
scas
xchg
movs
add
push
mul
test
add
cmps
xchg
adc
test
jo
inc
mov
mov
xchg
cmps
call
mov
xor
leave
xlat
out
inc
lods
adc
and
int
call
push
aam
mov
push
cld
mov
leave
fs
xor
add
iret
(bad)
out
je
and
adc
mov
pop
xor
daa
rcl
test
outs
and
or
adc
adc
adc
or
cs
push
cmps
jge
add
adc
sbb
aas
xor
push
(bad)
pusha
push
jbe
and
inc
cmp
inc
das
inc
(bad)
jno
jp
dec
add
push
arpl
inc
aas
dec
imul
ja
in
mov
test
dec
in
sysret
out
addr16
dec
mov
dec
cmc
pop
pop
push
add
push
sti
gs
mov
test
popf
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
popf
and
mov
(bad)
xor
pusha
xchg
mov
xor
rcl
call
and
mov
out
mov
aad
push
sar
xchg
fs
xor
add
loop
enter
fnstenv
les
lock
lds
pusha
shl
push
add
jge
das
pop
xor
adc
add
movs
adc
or
ins
and
pop
cmps
sbb
loopne
aad
xor
sbb
jne
popa
les
nop
dec
movs
push
inc
jb
or
pop
(bad)
push
inc
addr16
add
push
das
aad
aas
push
inc
ja
in
mov
test
adc
imul
pmuludq
add
jl
jle
adc
gs
out
mov
scas
xchg
jne
xchg
jmp
mov
and
jo
inc
scas
movs
mov
mov
pusha
mov
xor
not
lock
mov
(bad)
out
scas
test
in
rol
xor
aam
lock
not
fs
retf
add
mov
sahf
data16
aam
in
and
adc
fstp
sub
jg
or
test
xchg
bound
adc
movzx
aaa
adc
sub
or
sub
add
sbb
pop
mov
loopne
aad
xor
dec
(bad)
jl
xor
inc
nop
jae
jbe
inc
lds
pop
(bad)
arpl
aam
sub
add
aad
aas
jb
push
mov
test
in
andps
jg
inc
hlt
adc
inc
cmc
jbe
outs
push
xchg
xchg
xchg
push
in
gs
test
push
mov
inc
stc
jne
xchg
test
mov
mov
and
jo
inc
test
iret
lods
es
cmps
cdq
xor
pusha
ret
mov
xor
xchg
xlat
lds
call
inc
ret
inc
jecxz
stc
push
out
add
push
xchg
aad
fdiv
repz
fisttp
shl
adc
rcr
aaa
test
shl
or
xchg
pop
daa
xchg
aaa
rcl
or
jg
mov
aaa
shld
add
cmp
or
sub
pop
aad
xor
(bad)
fs
jbe
cmp
and
ins
das
push
(bad)
jno
inc
aam
sbb
push
sub
sbb
ins
neg
push
in
mov
test
push
in
andnps
jnp
inc
hlt
dec
mov
dec
cmc
push
pop
inc
push
test
mov
push
cmc
lods
test
push
scas
xchg
adc
and
fwait
and
lahf
cmps
mov
pusha
cmps
push
mov
fistp
inc
cmps
adc
and
(bad)
fcom
retf
aad
push
(bad)
mov
xchg
xlat
xor
add
out
leave
data16
std
je
and
adc
fcomp
aaa
test
sub
push
add
arpl
or
sbb
es
adc
and
push
lds
and
sub
xor
inc
(bad)
jl
popa
les
pusha
movs
push
inc
cmp
adc
pop
(bad)
jp
pop
aam
xor
push
dec
aad
aas
push
div
adc
outs
mov
test
push
in
nop
push
addr16
hlt
push
mov
add
bound
outs
push
mov
mov
in
push
scas
mov
mov
adc
inc
xchg
jne
xchg
mov
movs
mov
and
jo
inc
scas
movs
xchg
and
fwait
cmps
mov
push
cli
mov
xor
loopne
lock
int
jecxz
(bad)
(bad)
jmp
jmp
add
xor
fistp
leave
fs
xor
lods
(bad)
call
and
adc
out
(bad)
xchg
pop
pop
adc
add
and
or
ss
sbb
jg
mov
aaa
adc
sbb
and
sbb
add
adc
aas
xor
cs
inc
push
imul
or
das
push
(bad)
jg
fs
and
sbb
aad
aas
outs
test
in
mov
test
in
cmovge
ja
add
push
mov
or
push
lods
xchg
mov
popf
push
mul
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
fsub
nop
cmps
mov
push
cli
mov
xor
out
lds
cli
and
out
loopne
rol
fist
mov
push
fdivr
leave
(bad)
fiadd
ror
je
and
adc
(bad)
lahf
xchg
xchg
xor
xor
arpl
es
add
and
cmp
adc
ds
aaa
push
movs
dec
lock
sbb
and
or
ds
xor
xor
push
nop
movs
adc
pop
lds
push
mov
inc
aam
cmp
push
push
and
inc
aas
jp
xor
mov
test
sbb
out
addr16
ins
mov
push
push
test
push
cmc
gs
mov
mov
mov
scas
xchg
jne
xchg
lods
adc
mov
lods
and
jo
inc
out
pushf
and
xchg
cmps
lods
xor
pusha
test
mov
xor
cmc
xlat
xlat
inc
mov
lds
inc
test
stos
xor
cmc
mov
shl
retf
in
gs
xchg
mul
les
les
in
lds
cmp
sbb
or
jl
aaa
pop
daa
xchg
or
sbb
pop
adc
cmp
movs
sub
and
das
cmps
adc
loopne
aad
xor
adc
adc
les
jo
jo
jb
inc
das
pop
(bad)
inc
jns
push
xor
push
das
aad
aas
sub
dec
ja
in
mov
test
gs
in
lsl
push
addr16
sbb
jge
cmp
inc
cmc
inc
pop
pop
push
mov
push
mov
test
add
mov
inc
mov
adc
mov
and
movs
xchg
and
and
mov
pushf
fistp
inc
out
adc
inc
jmp
mov
xor
sar
xchg
rol
jecxz
leave
scas
out
je
and
jne
lahf
mov
ins
rcr
in
add
sbb
xor
aas
cmc
or
cmp
movs
sub
and
and
and
sbb
pop
loopne
aad
xor
adc
ins
push
push
les
jo
push
inc
inc
lds
das
dec
(bad)
jae
fs
xor
push
popa
aad
aas
pop
test
in
mov
test
in
unpcklps
jl
push
hlt
inc
mov
jo
pop
pop
pop
push
movs
xchg
test
gs
test
mov
inc
mov
adc
cmps
mov
and
jo
inc
xchg
movs
fbld
cdq
cmps
mov
xchg
pusha
cmps
push
cli
mov
xor
out
aam
out
into
and
mov
stc
push
out
shl
(bad)
mov
out
int3
xor
add
test
cli
adc
rcr
xor
arpl
je
sbb
and
sub
pop
cmc
pop
adc
ds
aaa
shld
cmp
xor
add
mov
loopne
aad
xor
adc
les
nop
push
pop
inc
jno
adc
push
aam
or
push
inc
aad
aas
push
div
in
mov
test
push
in
sysret
out
addr16
hlt
adc
inc
cmc
pop
pop
pop
push
int
mov
mov
test
push
mov
mov
jne
xchg
in
adc
xchg
mov
and
jo
inc
mov
mov
es
cmps
sahf
xor
pusha
retf
push
mov
fistp
inc
mov
(bad)
fisubr
fcom
std
xor
lds
in
shl
retf
in
gs
enter
(bad)
je
and
adc
neg
imul
outs
jl
xor
ds
or
sbb
sbb
jg
mov
aaa
adc
adc
push
lds
pop
movs
sbb
daa
cmp
xor
adc
inc
push
popa
les
inc
jb
data16
pop
(bad)
pusha
inc
and
jb
dec
mov
push
inc
aad
aas
pop
mul
push
in
mov
test
pop
in
cmovp
push
addr16
sbb
sbb
cmc
inc
pop
add
add
push
movs
mov
mov
adc
inc
mov
adc
mov
cwde
inc
scas
movs
popf
and
movs
cmps
mov
push
mov
fistp
inc
int
into
and
enter
sti
(bad)
mov
xor
xchg
call
add
out
leave
data16
les
rcl
sti
lahf
mov
data16
cmp
and
adc
adc
add
xor
and
pop
lds
adc
daa
daa
sbb
or
xor
adc
jl
jbe
jb
dec
movs
dec
inc
inc
lds
cmp
inc
inc
inc
aam
sub
sbb
aad
aas
push
not
dec
in
mov
test
pop
in
(bad)
out
addr16
hlt
jle
sbb
and
outs
push
scas
xchg
lods
add
push
mul
test
push
mov
inc
pushf
jne
xchg
loop
fdivr
lods
movs
mov
and
jo
inc
cwde
movs
test
mov
pusha
(bad)
push
mov
ret
(bad)
push
retf
inc
xlat
adc
and
mov
stc
push
into
add
xor
(bad)
mov
hlt
fs
xor
add
fimul
fbstp
ficom
(bad)
lahf
(bad)
xchg
ds
aaa
test
add
and
sbb
adc
cmp
adc
sbb
sbb
adc
add
and
xor
dec
(bad)
push
nop
inc
movs
jo
cmp
pop
das
cmp
jae
and
dec
and
add
aad
aas
push
not
push
push
mov
test
push
in
punpcklwd
push
addr16
hlt
inc
mov
push
push
mov
scas
add
push
stos
mov
mov
adc
inc
mov
adc
lea
mov
lods
movs
pushf
and
mov
pusha
fst
mov
xor
icebp
xlat
jmp
and
sahf
scas
cli
inc
inc
stc
push
scas
add
push
cmp
xlat
xor
add
lds
fnstenv
rcl
lahf
xchg
xchg
adc
aaa
test
das
in
add
sbb
push
shl
jg
mov
aaa
shld
adc
movs
and
sbb
sub
adc
aaa
xor
sbb
push
push
inc
les
inc
jb
or
ins
(bad)
push
inc
addr16
sbb
push
das
aad
aas
ins
not
addr16
mov
test
dec
in
lsl
jl
push
hlt
imul
outs
push
test
push
xchg
mov
cdq
push
cdq
xchg
jne
xchg
call
ss
mov
and
jo
inc
mov
fisub
xchg
cmps
xchg
pusha
cwde
push
cmps
mov
xor
in
enter
enter
cld
inc
xchg
scas
mov
push
retf
xor
fidivr
(bad)
fs
xor
add
fisttp
fidiv
not
out
not
jg
push
in
add
sbb
adc
aas
cmc
inc
adc
ds
aaa
and
and
push
cmps
sbb
sbb
aad
xor
dec
(bad)
pop
push
imul
js
cmp
or
cmp
ja
pusha
aam
and
sbb
aad
aas
jge
pusha
ja
in
mov
test
in
nop
inc
addr16
hlt
push
mov
push
cmc
pop
pop
ins
push
mov
mov
test
add
cdq
xchg
jne
xchg
mov
mov
jo
inc
sahf
movs
test
xchg
cmps
cdq
xor
pusha
adc
fistp
inc
lods
adc
and
(bad)
in
repnz
push
fistp
out
fs
xor
gs
fwait
data16
out
je
and
adc
(bad)
lahf
retf
xchg
push
pop
test
shl
in
add
or
or
adc
aas
mov
aaa
shld
lds
and
push
cmps
jge
add
pop
loopne
aad
xor
adc
les
nop
ja
inc
inc
dec
lds
xor
aam
or
push
dec
aad
aas
neg
adc
pop
mov
test
dec
in
unpcklps
inc
addr16
hlt
push
mov
push
cmc
pop
pop
outs
push
xchg
xchg
mov
lods
push
xchg
test
push
nop
xchg
jne
xchg
out
adc
mov
jo
inc
mov
stos
es
cmps
sahf
xor
pusha
fst
mov
xor
leave
xlat
test
mov
inc
inc
stc
push
repz
xor
stc
mov
xchg
div
out
add
jmp
je
and
adc
(bad)
lahf
sti
xchg
and
xor
add
jg
xor
adc
daa
rcl
sbb
mov
aaa
and
lds
and
push
cmps
xor
pop
mov
loopne
aad
xor
sbb
les
push
lds
inc
and
arpl
xor
push
aas
dec
imul
push
in
mov
test
inc
in
cmovle
pop
addr16
hlt
push
mov
push
cmc
pop
pop
imul
xchg
mov
loopne
mov
test
add
mov
inc
mov
adc
mov
shl
jo
inc
mov
movs
and
and
shl
xchg
xlat
out
inc
mov
(bad)
(bad)
clc
push
mov
aad
push
pushf
mov
in
test
nop
add
ror
loopne
retf
and
adc
fstp
add
ins
rcl
in
add
xchg
es
or
pop
cmc
sbb
aas
mov
aaa
adc
es
movs
add
daa
xor
xor
ds
popa
push
je
pop
nop
inc
movs
or
das
push
ja
fs
and
push
sub
jp
push
test
in
mov
test
in
unpckhps
inc
addr16
ins
mov
add
pop
pop
fs
mov
push
mov
movs
test
mov
inc
mov
adc
lods
mov
and
jo
inc
out
fbld
mov
pusha
xchg
push
mov
fistp
inc
sti
adc
inc
xchg
scas
fiadd
(bad)
in
repnz
push
(bad)
mov
xlat
xor
add
fisttp
fbstp
retf
adc
in
lahf
lea
cmp
and
sub
cmp
xchg
push
rcr
or
cmp
movs
adc
daa
lds
and
and
adc
and
mov
pop
adc
les
push
lds
inc
(bad)
jae
cmp
mov
push
push
aad
aas
push
test
pop
mov
test
jno
push
(bad)
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
push
push
test
stos
add
push
xchg
mov
mov
mov
inc
mov
adc
nop
mov
and
jo
inc
cwde
movs
xchg
and
xchg
cmps
mov
nop
pusha
cmps
push
mov
fild
inc
cld
adc
and
xchg
scas
loope
repnz
mov
xor
fnstsw
shl
fadd
mov
loop
mul
fidiv
(bad)
adc
fcomp
aaa
test
es
add
adc
aaa
pop
cmp
adc
imul
adc
movzx
pop
movs
cmp
or
movs
push
daa
xor
xor
push
(bad)
inc
push
push
les
ins
movs
push
pop
lds
das
pop
(bad)
pop
inc
pop
aam
and
push
das
aad
aas
jge
inc
ja
in
mov
test
pop
in
lsl
js
pop
hlt
push
mov
inc
cmc
inc
pop
jp
adc
pop
pop
iret
xchg
ficom
mov
xor
inc
mov
test
test
rcl
xchg
xor
out
xlat
leave
inc
lods
adc
and
retf
scas
loop
sti
mov
xor
sar
fs
xor
add
iret
(bad)
pushf
data16
lds
ficom
rcr
test
add
and
ror
cmp
or
getsec
sub
lds
and
and
and
pop
aad
xor
or
jle
dec
les
nop
inc
movs
pop
inc
pop
lds
(bad)
pop
inc
pusha
aam
xor
ins
aad
aas
push
div
ja
in
mov
test
dec
in
(bad)
out
addr16
push
mov
or
push
(bad)
xchg
mov
sti
push
mov
test
push
mov
inc
mov
adc
xor
inc
xchg
movs
shl
xchg
cmps
xchg
xor
pusha
xchg
push
mov
mov
inc
lods
adc
and
jmp
in
inc
sti
push
aam
jmp
mov
leave
fs
xor
add
out
cld
data16
(bad)
les
cmc
lahf
aam
xor
ins
test
and
adc
and
or
sub
inc
adc
adc
pop
lock
or
and
pavgb
aad
xor
add
les
movs
dec
inc
jno
imul
(bad)
jo
inc
aam
xor
pop
aad
aas
ins
not
jo
fs
test
pop
in
sysret
out
addr16
hlt
dec
mov
push
push
test
scas
add
push
mov
mov
mov
adc
inc
loopne
adc
ss
jo
inc
xchg
cwde
es
cmps
mov
cmps
pusha
cmps
push
mov
fist
mov
lds
inc
in
(bad)
out
push
jmp
mov
push
fdivr
into
div
out
add
dec
aam
shl
(bad)
adc
fistp
aaa
test
add
cmp
das
rcr
inc
adc
cmp
movs
add
sbb
push
dec
and
adc
adc
jnp
aaa
mov
pop
push
(bad)
ins
push
sub
movs
jl
jl
or
pop
(bad)
push
inc
addr16
cmp
push
das
aad
aas
aaa
test
in
mov
test
pop
in
cmovp
inc
addr16
push
mov
or
push
pop
push
push
adc
mov
lea
nop
xchg
jne
xchg
mov
mov
mov
and
jo
inc
mov
xchg
and
xchg
xor
loopne
inc
mov
inc
mov
aad
leave
add
push
ret
mov
cmc
mov
enter
pushf
gs
and
les
xchg
mov
pop
sub
adc
sbb
or
outs
xor
xchg
and
adc
sbb
sub
and
or
xor
inc
aad
xor
adc
inc
push
push
les
nop
push
push
inc
dec
lds
das
pop
(bad)
jg
fs
cmp
push
sub
ins
aas
pop
div
inc
in
mov
test
jp
bound
inc
out
addr16
hlt
inc
mov
dec
cmc
jbe
outs
push
lods
xchg
mov
loopne
cmc
mov
std
push
cmps
xchg
popf
xchg
mov
mov
jo
inc
stos
movs
fbld
xchg
cmps
cdq
xor
pusha
fst
mov
xor
in
jmp
(bad)
mov
mov
xor
sar
leave
fs
add
in
les
out
je
and
adc
fcomp
xor
jnp
pmulhw
add
cmp
sbb
cmp
adc
push
mov
aaa
shld
or
movs
sbb
daa
pop
mov
loopne
aad
xor
adc
pusha
push
jbe
and
jno
dec
das
(bad)
(bad)
jae
es
or
push
pop
aad
aas
push
test
in
mov
test
pop
in
sysret
out
addr16
dec
mov
pop
cmc
pop
pop
outs
push
leave
xchg
scas
add
push
xchg
test
push
scas
xchg
jne
xchg
lods
adc
nop
mov
and
jo
inc
test
iret
mov
xor
pusha
mov
xor
xchg
xlat
mov
lods
adc
and
enter
inc
rcl
mov
push
in
mov
retf
xor
gs
loop
int3
out
je
and
adc
fistp
or
add
and
or
sbb
sub
jg
mov
aaa
push
movs
push
lock
xor
pop
cmps
sbb
loopne
aad
xor
xor
ins
push
outs
les
movs
dec
inc
pop
lds
pop
mov
jle
dec
add
push
push
aad
aas
dec
test
ins
mov
test
gs
in
cmovns
push
addr16
hlt
adc
jp
pusha
jne
cmc
bound
outs
push
mov
test
add
mov
mov
jne
xchg
mov
mov
mov
mov
stos
and
cdq
cmps
ret
xor
pusha
stos
push
cld
mov
xor
loopne
lock
lock
and
xchg
scas
jmp
push
test
fcom
mov
in
fwait
xor
add
cmc
pop
je
and
adc
fcomp
sub
shl
in
add
or
adc
add
xchg
push
jg
mov
aaa
push
movs
inc
lock
xor
adc
push
daa
cmp
xor
ds
inc
push
jg
cmp
inc
lds
das
pop
(bad)
outs
inc
jl
dec
add
push
(bad)
aad
aas
push
not
pop
in
mov
test
gs
in
maxps
inc
addr16
hlt
pop
mov
inc
cmc
and
inc
push
test
lock
push
sti
mov
scas
push
mov
inc
mov
adc
movs
mov
and
jo
inc
stos
movs
mov
loope
cdq
xor
pusha
fwait
push
mov
fistp
inc
mov
korw
scas
mov
push
aam
out
vpsraw
mov
lea
xlat
add
retf
(bad)
loopne
fucom
fnsave
loop
div
(bad)
jne
lahf
iret
xchg
push
pop
jbe
sub
and
adc
add
aas
pop
cmp
adc
outs
mov
aaa
shld
lds
and
sbb
adc
dec
aad
xor
dec
(bad)
push
nop
ins
movs
or
das
pop
(bad)
push
inc
jg
push
and
push
ins
aad
aas
inc
neg
jb
push
mov
test
adc
unpcklpd
data16
inc
mov
inc
cmc
pop
pop
je
stos
xchg
stos
add
push
lea
test
push
scas
xchg
jne
xchg
mov
mov
mov
xchg
movs
call
cmps
iret
xor
pusha
fst
mov
xor
enter
lods
adc
and
hlt
scas
cmc
inc
stc
(bad)
loop
into
add
xor
sar
fs
lea
mov
popf
mul
out
hlt
and
adc
fcomp
jo
arpl
es
add
jne
aaa
pop
cmp
cmc
add
jg
mov
aaa
pop
movs
push
lock
xor
cmp
adc
pop
mov
loopne
aad
xor
dec
(bad)
ins
push
popa
les
nop
push
movs
dec
inc
and
dec
das
pop
(bad)
pusha
inc
pop
aam
adc
push
sub
pop
aas
push
mul
addr16
mov
test
push
in
nop
push
addr16
hlt
popa
mov
inc
cmc
push
pop
push
push
adc
gs
test
add
fld
mov
adc
mov
mov
mov
fisub
test
movs
push
mov
fist
inc
mov
(bad)
mov
icebp
push
leave
add
push
(bad)
mov
lahf
fs
retf
in
gs
cli
data16
out
je
and
adc
rcr
test
in
add
sub
or
add
xchg
push
jg
mov
aaa
sub
and
cmp
pop
loopne
aad
xor
dec
(bad)
jl
dec
les
movs
push
inc
and
adc
cmp
inc
inc
push
aam
sbb
push
dec
aad
aas
push
div
dec
in
mov
test
pop
in
subps
inc
addr16
hlt
dec
mov
dec
cmc
popw
outs
push
xchg
xchg
test
gs
mov
mov
add
xchg
jne
xchg
mov
mov
jo
inc
mov
iret
movs
es
pusha
xchg
push
xchg
mov
xor
not
mov
jmp
inc
in
hlt
push
out
add
push
(bad)
mov
leave
fs
jecxz
stos
in
dec
(bad)
je
and
jne
lahf
out
xchg
ds
and
jnp
sbb
cmp
aas
xchg
aaa
xchg
or
cmp
pop
adc
add
movs
and
push
lds
and
add
and
xor
adc
bound
les
nop
xor
inc
das
push
(bad)
jo
jns
dec
or
push
cs
aas
dec
not
(bad)
in
mov
test
push
in
cmovno
push
addr16
hlt
popa
mov
push
cmc
addr16
fs
adc
gs
test
xchg
xchg
test
jmp
icebp
mov
and
jo
inc
stos
movs
test
and
retf
xor
hlt
xlat
cld
inc
mov
korb
scas
mov
push
into
add
xor
(bad)
mov
into
push
fadd
mov
enter
stc
je
and
adc
fstp
test
shl
sub
cmp
xchg
push
rcl
add
mov
aaa
dec
movs
push
lock
xor
sub
jno
or
mov
loopne
aad
xor
push
(bad)
outs
push
sub
jg
jo
dec
inc
outs
lds
pop
(bad)
arpl
aam
cmp
push
xor
jl
push
mul
push
in
mov
test
push
in
cmovbe
pop
addr16
hlt
inc
mov
jg
push
pop
jge
xchg
xchg
cmps
add
push
cli
gs
std
add
mov
inc
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
call
and
mov
push
aad
hlt
inc
mov
lds
inc
sti
(bad)
out
push
leave
add
push
sar
mov
fild
int3
(bad)
out
je
and
adc
aam
ficom
ins
shl
in
add
sbb
xor
cmp
sbb
cmp
movs
sub
and
and
xor
cmp
mov
pop
or
jl
push
les
jae
dec
inc
jae
adc
pop
(bad)
jg
jns
dec
add
pop
aad
aas
dec
div
mov
test
pop
out
addr16
hlt
dec
mov
dec
cmc
pop
pop
ins
push
fist
and
mov
push
mov
inc
mov
adc
jmp
jo
inc
lods
movs
fbld
xchg
cmps
mov
mov
xor
out
xlat
out
inc
jecxz
repz
(bad)
scas
loopne
aad
rcl
mov
push
lds
leave
fs
xor
add
fisttp
fbstp
(bad)
adc
loope
les
jg
pop
in
add
sbb
and
or
pop
adc
adc
and
and
daa
cmps
outs
daa
sbb
xor
adc
les
nop
outs
movs
push
inc
jno
or
pop
(bad)
jae
jnp
arpl
arpl
inc
aas
push
test
in
mov
test
pop
in
nop
fs
hlt
push
mov
push
pop
pop
outs
push
xchg
xchg
scas
add
push
in
gs
test
push
ret
xchg
mov
(bad)
mov
and
jo
inc
in
movs
mov
mov
sahf
xor
pusha
les
mov
xor
sahf
xlat
test
mov
fisubr
out
int
shl
mov
jmp
add
mov
xchg
data16
out
je
and
adc
fcomp
xor
in
add
and
or
adc
sbb
add
movs
and
sbb
ins
and
and
mov
loopne
aad
xor
push
(bad)
jl
imul
pop
inc
jb
push
das
jp
arpl
aam
cmp
push
jle
inc
aas
push
test
in
mov
test
push
in
cmovp
jg
dec
hlt
imul
inc
push
test
hlt
gs
test
push
mov
mov
lea
jne
xchg
hlt
adc
mov
cmps
inc
scas
movs
mov
mov
cmps
mov
push
popf
mov
xor
loop
retf
adc
and
fild
fist
movs
xor
ret
jbe
not
fs
lds
test
je
and
adc
scas
lahf
(bad)
xchg
and
and
ins
rcr
in
add
and
daa
rcl
adc
jg
mov
aaa
or
and
or
mov
loopne
aad
xor
and
les
jae
dec
inc
push
lds
das
push
(bad)
jne
pop
aam
adc
ins
aad
aas
xor
dec
ja
in
mov
test
jg
bound
pop
out
addr16
hlt
push
mov
or
fs
jns
test
test
xchg
mov
mov
mov
jne
xchg
mov
ss
jo
inc
mov
ret
es
cmps
popf
xor
pusha
cmps
push
test
fisttp
inc
out
adc
and
icebp
scas
mov
push
retf
xor
cld
mov
xchg
fs
lds
dec
loope
shl
jecxz
jecxz
ret
jne
lahf
les
shl
in
add
sub
ja
pop
cmc
inc
adc
ds
aaa
pop
movs
pop
lock
lds
and
or
pop
aad
xor
aaa
(bad)
push
nop
ins
movs
gs
imul
add
jg
inc
xor
push
sub
jb
pop
neg
push
in
mov
test
pop
in
(bad)
out
addr16
xchg
cmp
cmc
pop
pop
ins
push
int
scas
add
push
cmc
gs
out
cmc
push
mov
inc
mov
adc
mov
fwait
jo
inc
lods
movs
cwde
and
xchg
cmps
xor
xchg
push
mov
fistp
inc
lods
adc
and
xchg
scas
mov
push
aam
fidiv
test
cld
fs
xor
add
ror
je
and
adc
rcr
sub
add
and
or
sbb
and
xor
adc
push
movs
es
xor
or
es
add
sbb
xor
sbb
pop
push
jno
sub
inc
jb
pusha
das
push
aam
add
push
push
aad
aas
ins
test
in
mov
test
in
cmovs
inc
addr16
hlt
arpl
jae
popw
outs
push
test
mov
gs
xchg
out
mov
cmps
xchg
adc
inc
movs
jne
xchg
mov
mov
cwde
inc
scas
movs
mov
es
pusha
adc
xchg
xor
call
adc
and
lahf
scas
std
inc
sti
(bad)
cli
push
out
add
xor
ret
jbe
mul
fs
xor
add
out
int
in
in
je
and
adc
fstp
aas
test
in
add
and
add
adc
add
jg
mov
aaa
pop
movs
cmp
push
lds
or
sbb
aas
mov
loopne
aad
xor
inc
(bad)
je
imul
dec
inc
jnp
jo
pop
(bad)
jb
jnp
dec
and
sbb
aad
aas
push
not
inc
in
mov
test
gs
push
dec
out
addr16
hlt
push
mov
pop
cmc
push
pop
push
add
push
mul
test
push
mov
inc
call
call
and
jo
inc
xchg
movs
and
cmps
cdq
xor
pusha
xchg
mov
xor
in
into
inc
lods
adc
and
xchg
scas
mov
in
mov
mov
push
cmp
lds
dec
popf
je
and
adc
repnz
aam
xor
and
and
sbb
push
add
add
pop
shl
inc
adc
imul
lock
lds
dec
and
adc
xor
daa
xor
or
les
ins
movs
dec
inc
aas
lds
das
jnp
jae
gs
add
push
arpl
jo
push
not
adc
popa
mov
test
pop
in
sysret
out
addr16
ins
mov
push
push
test
lods
add
push
xchg
gs
mov
push
sahf
xchg
jne
xchg
in
adc
xor
inc
scas
movs
pushf
and
xchg
cmps
call
mov
xor
hlt
xlat
mov
and
(bad)
scas
mov
push
jmp
retf
aad
push
(bad)
mov
mov
mov
aad
(bad)
mul
(bad)
(bad)
adc
fcomp
aaa
test
je
push
add
and
daa
rcr
cmp
push
mov
aaa
sub
and
sbb
cmp
dec
daa
cmps
and
loopne
aad
xor
adc
je
popa
les
nop
jnp
push
inc
pop
lds
cmp
push
inc
push
aam
sub
ja
dec
aad
aas
jne
dec
ja
in
mov
test
push
in
cvtps2pd
jnp
push
hlt
arpl
dec
cmc
bound
push
adc
mov
scas
push
lods
xchg
jne
xchg
jmp
ret
ss
mov
jo
inc
test
fisub
and
mov
push
retf
xlat
enter
into
and
mov
icebp
push
enter
call
loope
test
xchg
xor
add
test
je
and
adc
call
and
ins
shl
in
add
and
adc
(bad)
cmc
aas
adc
cmp
movs
sub
and
cmp
or
inc
mov
loopne
aad
xor
adc
je
imul
dec
inc
cmp
adc
inc
pop
aam
and
arpl
aad
aas
push
imul
dec
in
mov
test
in
unpcklps
pop
addr16
hlt
push
mov
or
push
movs
xchg
mov
gs
mov
push
ret
xchg
stos
xchg
mov
movs
mov
and
jo
inc
stos
movs
test
xchg
cmps
cdq
xor
pusha
adc
fild
inc
mov
lds
inc
aad
icebp
push
stos
add
xor
lds
leave
fnstenv
aad
stos
in
gs
leave
data16
fidiv
loop
call
lahf
retf
xchg
sub
shl
in
add
xchg
pop
cmp
xor
pop
cmc
inc
adc
add
movs
adc
and
and
or
xor
aas
(bad)
push
nop
ins
movs
pop
inc
pop
lds
aas
(bad)
jae
es
add
push
jae
inc
aas
data16
push
in
mov
test
outs
in
sysret
out
addr16
hlt
adc
jl
jnp
push
cmc
pop
pop
push
add
push
in
mov
stos
push
scas
xchg
adc
xchg
and
jo
inc
out
fisub
xchg
cmps
xchg
xor
pusha
xchg
push
mov
fisttp
lods
adc
and
xchg
scas
mov
push
int
mov
push
les
into
fs
fiadd
in
(bad)
xchg
mul
out
je
and
in
retf
xchg
and
ins
test
and
dec
add
jl
aaa
pop
cmp
adc
sub
and
add
and
and
adc
cmp
sbb
pop
add
addr16
inc
les
jo
or
lds
pop
mov
pop
aam
cmp
pop
push
and
jne
jge
inc
ja
in
mov
test
pop
in
lsl
inc
addr16
hlt
imul
imul
xchg
test
mov
fwait
push
cmps
xchg
jne
xchg
mov
lods
(bad)
jmp
(bad)
mov
and
jo
inc
mov
iret
popf
and
into
xor
call
adc
and
xlat
scas
mov
push
leave
add
push
fdivr
aad
fwait
xor
add
out
sti
repz
je
and
adc
fstp
sub
ins
sar
or
jp
daa
pop
sbb
adc
jae
jne
sbb
cmp
adc
movs
sbb
daa
sbb
adc
and
and
ds
jl
inc
les
xor
lds
(bad)
pop
inc
jae
dec
add
ins
aad
aas
jns
push
ja
in
mov
test
inc
in
cmovg
ja
inc
hlt
pusha
mov
or
push
lods
xchg
mov
loopne
mul
test
add
rol
jne
xchg
mov
movs
mov
and
jo
inc
out
movs
mov
cmps
iret
test
lods
cmps
cdq
xor
pusha
cdq
push
mov
fist
inc
lods
adc
and
xchg
scas
fiadd
mov
xor
in
fbstp
test
fisttp
hlt
je
and
adc
(bad)
lahf
rcl
shl
in
add
add
xor
cmp
inc
adc
cmp
movs
pop
lock
xor
or
or
xor
daa
xor
das
(bad)
push
nop
ins
movs
pop
inc
pop
lds
das
pop
(bad)
js
jg
dec
and
aas
sub
push
ja
in
mov
test
gs
in
cmova
cs
hlt
push
mov
inc
cmc
pop
pop
jno
xchg
xchg
scas
add
push
mov
mov
mov
popf
xchg
adc
inc
mov
lahf
xchg
adc
mov
test
movs
fsub
xchg
cmps
xor
mov
xor
lahf
xlat
mov
mov
lds
inc
stc
(bad)
stc
push
call
aad
push
iret
mov
in
xlat
xor
add
loop
int
in
(bad)
je
and
adc
mov
pop
jb
pusha
shl
in
add
and
xchg
das
rcr
and
imul
aaa
pop
movs
sub
and
and
push
loopne
aad
xor
or
les
inc
cmp
je
cmp
aam
or
push
das
aad
aas
jnp
inc
ja
in
mov
test
inc
in
nop
addr16
hlt
push
mov
jg
pop
pop
outs
push
adc
gs
out
mov
add
jne
xchg
mov
xor
inc
xchg
movs
mov
and
xchg
xor
ret
inc
mov
(bad)
xchg
scas
inc
(bad)
cli
push
jmp
aad
push
fidivr
loope
out
test
cmps
out
je
and
jne
lahf
rcl
(bad)
shl
adc
xor
aaa
pop
es
or
sbb
xchg
add
mov
aaa
adc
sub
and
pop
cmps
sbb
loopne
aad
xor
inc
(bad)
ins
push
xor
movs
jno
arpl
inc
das
pop
(bad)
pop
inc
and
dec
cmp
push
ins
aad
aas
push
dec
ja
in
mov
test
push
in
nop
inc
addr16
hlt
inc
mov
jp
pop
pop
fs
(bad)
xchg
mov
jecxz
mul
test
push
mov
inc
loopne
lahf
xchg
mov
ss
jo
inc
mov
(bad)
xchg
cmps
xor
mov
xor
(bad)
icebp
inc
lods
adc
and
nop
scas
cmc
inc
rol
movs
push
in
add
push
(bad)
mov
nop
fs
xor
add
in
xchg
out
je
and
adc
mov
pop
imul
outs
daa
xchg
pop
cmp
adc
ss
aaa
adc
and
push
cmps
xor
dec
mov
loopne
aad
xor
dec
(bad)
inc
push
dec
les
nop
jb
dec
inc
imul
inc
inc
jg
inc
cmp
push
sub
data16
ins
neg
imul
dec
gs
in
minps
push
addr16
hlt
addr16
push
jne
cmc
pop
pop
inc
push
test
mov
lahf
push
cmc
mov
mov
scas
xchg
fcom
mov
and
jo
inc
out
mov
xchg
cmps
movs
xor
pusha
(bad)
push
mov
mov
hlt
xlat
out
inc
loope
leave
and
xchg
scas
mov
push
iret
add
push
std
mov
loopne
in
xor
add
enter
jecxz
fnstenv
adc
or
or
in
add
and
or
ds
and
sub
adc
push
movs
add
sbb
pop
and
or
daa
loopne
aad
xor
cmp
ins
push
ins
les
movs
dec
inc
pop
lds
and
push
inc
addr16
add
sub
idiv
in
mov
test
in
(bad)
out
addr16
hlt
addr16
jnp
inc
cmc
jae
or
add
push
mov
add
mov
inc
loop
adc
cmps
and
jo
inc
mov
xchg
test
nop
push
mov
(bad)
push
loopne
hlt
inc
lds
retf
and
iret
scas
mov
push
leave
add
xor
lds
hlt
xlat
xor
add
aam
fbld
out
je
and
adc
fstp
das
test
imul
push
outs
cmp
imul
cmc
or
and
add
adc
adc
and
outs
and
cmp
sbb
loopne
aad
xor
sbb
push
push
imul
push
inc
cmp
push
das
daa
(bad)
ja
es
and
sbb
aad
aas
push
idiv
ja
in
mov
test
in
nop
ins
addr16
hlt
dec
mov
inc
cmc
and
inc
push
stos
xchg
mov
mov
add
mov
jne
xchg
in
adc
mov
xchg
inc
mov
fbld
popf
cmps
cwde
xor
pusha
popf
push
mov
fistp
inc
out
mov
inc
(bad)
scas
push
leave
add
xor
fistp
in
in
xor
add
fimul
fbstp
adc
lahf
aam
ds
jae
xor
and
daa
add
cmp
add
and
xchg
pop
jg
mov
aaa
adc
and
sbb
push
loopne
aad
xor
adc
push
push
xor
and
jno
adc
imul
xor
outs
aad
aas
pop
neg
pop
in
mov
test
jns
push
packssdw
push
ins
hlt
push
mov
or
pop
pop
imul
xchg
scas
add
push
movs
mov
cld
push
scas
xchg
adc
ss
jo
inc
jmp
iret
cwde
es
pusha
sahf
push
cmps
mov
xor
rcl
test
int3
inc
shr
in
test
xor
lds
lahf
shl
leave
add
int3
(bad)
lahf
mul
fnsave
cdq
adc
out
les
popa
rol
in
add
cmp
push
pop
ds
add
adc
pop
adc
xor
inc
lock
xor
inc
movs
adc
and
or
or
sub
push
(bad)
ins
push
push
push
nop
jo
push
inc
aas
lds
push
(bad)
push
inc
ja
inc
add
push
push
aad
aas
push
test
in
mov
test
push
in
divps
push
addr16
hlt
push
mov
inc
cmc
push
pop
push
adc
gs
std
add
mov
inc
mov
adc
mov
test
and
loop
xchg
pusha
mov
mov
xor
out
xlat
enter
call
inc
xchg
scas
loop
(bad)
push
mov
shl
mov
shl
add
out
and
cli
je
and
adc
fstp
sub
data16
in
add
xchg
es
push
shl
sbb
cmp
movs
sub
and
and
sbb
sbb
dec
loopne
aad
xor
push
(bad)
addr16
imul
jo
cmp
data16
pop
(bad)
jge
fs
add
push
ins
aad
aas
imul
inc
mov
test
in
unpckhps
inc
addr16
hlt
push
push
xchg
ss
cmc
jle
outs
push
xchg
xchg
mov
loopne
in
gs
call
xchg
popf
xchg
mov
movs
mov
and
jo
inc
out
cmps
and
pushf
cmps
xchg
pusha
mov
div
retf
push
in
repz
in
lock
shr
push
rol
loop
aad
mov
(bad)
mov
iret
fs
retf
in
fimul
fbstp
enter
into
jne
lahf
out
xchg
xor
and
jnp
and
push
add
and
cmp
cmp
adc
ds
aaa
push
movs
and
sub
outs
and
and
xor
add
xor
adc
les
nop
jo
jae
jno
or
jbe
pop
inc
ja
push
cmp
push
jl
push
test
in
mov
test
push
in
punpckhwd
push
addr16
hlt
push
mov
push
cmc
pop
pop
inc
push
xchg
xchg
cmc
add
push
cmc
mov
mov
into
xchg
adc
mov
mov
movs
fwait
and
scas
cmps
sahf
xor
pusha
xchg
mov
xor
hlt
xlat
inc
leave
and
xchg
scas
test
out
aam
cmps
xor
sti
mov
mul
enter
popf
gs
stc
jmp
(bad)
je
and
adc
movs
lahf
out
xchg
daa
pop
sub
pusha
shl
in
add
adc
aas
pop
cmp
adc
push
mov
aaa
add
and
cmp
push
loopne
aad
xor
push
(bad)
push
push
xor
jg
xor
lds
pop
(bad)
push
inc
addr16
adc
das
aad
aas
xor
push
ja
in
mov
test
push
in
subps
outs
addr16
push
mov
inc
cmc
push
pop
pop
push
mov
mov
xchg
push
sti
gs
out
mov
mov
inc
xchg
jne
xchg
lea
lods
mov
and
jo
inc
out
xchg
and
and
into
xor
loopne
inc
retf
and
out
scas
mov
push
jecxz
hlt
xor
fidivr
in
shl
retf
in
gs
(bad)
out
je
and
jne
lahf
(bad)
xchg
xor
push
test
in
add
and
adc
pop
cmc
pop
adc
pop
mov
aaa
adc
and
cmp
add
loopne
aad
xor
es
jl
push
and
inc
jl
adc
pop
(bad)
push
inc
pop
aam
sbb
push
dec
aad
aas
pop
div
ja
in
mov
test
in
unpckhps
inc
addr16
inc
mov
pmaddwd
pop
add
rcl
lock
test
push
mov
inc
call
jmp
ss
lea
jo
inc
out
movs
test
cdq
cmps
cdq
xor
pusha
xchg
push
clc
mov
xor
retf
inc
int
mov
(bad)
(bad)
call
(bad)
out
mov
mov
push
lds
repnz
mov
(bad)
fisub
out
je
and
adc
fcomp
xor
cmp
das
in
add
and
or
adc
cmp
push
lock
cmp
or
dec
loopne
aad
xor
adc
jbe
jbe
jle
pop
movs
adc
xor
push
das
pop
mov
aam
add
arpl
inc
aas
jo
xor
in
mov
test
ins
in
nop
pop
addr16
dec
mov
inc
cmc
push
pop
push
push
mov
push
cmc
gs
test
add
ret
adc
inc
mov
adc
xchg
mov
and
jo
inc
mov
iret
call
pusha
stos
push
xor
push
cld
xlat
hlt
inc
int3
adc
and
(bad)
scas
mov
push
out
xlat
xor
fistp
in
xlat
xor
add
(bad)
(bad)
xchg
mul
int3
je
and
adc
out
retf
xchg
add
and
add
and
adc
adc
push
mov
aaa
push
movs
sbb
or
movs
and
cmps
daa
daa
pop
mov
loopne
aad
xor
sub
push
push
popa
les
jo
dec
inc
inc
lds
pop
(bad)
push
inc
addr16
xor
push
das
aad
aas
sub
inc
ja
in
mov
test
sbb
ja
pop
out
addr16
push
mov
inc
cmc
pop
pop
outs
push
xchg
xchg
test
push
hlt
pop
test
mov
inc
xor
(bad)
adc
xor
xchg
and
and
push
cwde
mov
xor
xchg
xlat
in
loop
mov
(bad)
(bad)
sahf
scas
mov
push
leave
add
push
ret
mov
(bad)
div
jmp
hlt
in
gs
jecxz
(bad)
out
je
and
adc
(bad)
lahf
(bad)
xchg
and
test
shl
in
add
and
add
adc
xchg
inc
jg
mov
aaa
push
movs
cs
movs
or
push
cmps
sbb
sbb
xor
push
(bad)
inc
push
imul
jb
cmp
or
pop
(bad)
pop
inc
fs
sbb
ins
aad
aas
push
not
in
mov
test
in
cmovs
inc
addr16
hlt
push
mov
push
cmc
push
pop
push
push
scas
xchg
icebp
add
push
mul
test
push
cdq
xchg
test
xchg
mov
jo
inc
scas
movs
(bad)
xchg
cmps
mov
push
(bad)
mov
xor
(bad)
xlat
out
inc
mov
korw
scas
in
aad
in
mov
mov
push
(bad)
mov
leave
fs
xor
gs
xchg
out
icebp
je
and
adc
fcomp
xor
arpl
jo
cmp
jg
push
outs
and
sub
daa
cmc
pop
adc
ds
aaa
add
lds
and
and
adc
cmp
mov
pop
sbb
push
nop
ins
movs
push
inc
inc
lds
inc
(bad)
jae
inc
aam
or
push
ja
inc
aas
push
idiv
ja
in
mov
test
push
in
nop
pop
addr16
hlt
dec
mov
dec
cmc
addr16
outs
push
pushf
xchg
mov
gs
test
push
scas
xchg
adc
inc
cmps
jne
xchg
hlt
adc
xchg
mov
and
jo
inc
movs
movs
lahf
and
xchg
cmps
call
mov
xor
(bad)
xlat
mov
mov
lds
inc
inc
mov
xor
std
mov
xchg
mov
retf
add
jecxz
ret
out
je
and
jne
lahf
int
and
aaa
test
add
and
or
push
cmc
aas
adc
cmp
movs
adc
dec
lds
add
xor
es
xor
cmp
inc
push
outs
les
jo
pop
inc
jl
or
dec
mov
addr16
xor
push
sub
inc
aas
push
test
in
mov
test
sbb
je
inc
out
addr16
hlt
pop
mov
or
pop
pop
outs
push
scas
xchg
add
and
out
mov
adc
inc
mov
adc
lea
mov
mov
and
cmps
xchg
pusha
xchg
push
mov
fist
inc
mov
(bad)
xchg
scas
inc
(bad)
(bad)
push
mov
mov
push
ret
jbe
imul
shl
retf
add
aam
sti
shl
fdiv
adc
lahf
(bad)
xchg
and
and
add
and
adc
es
or
daa
cmc
add
movzx
aaa
or
and
daa
cmps
xor
sbb
adc
and
add
ds
jl
dec
les
jae
dec
inc
jns
je
pop
(bad)
inc
pop
aam
or
push
ins
aad
aas
jne
dec
ja
in
mov
test
in
nop
outs
addr16
hlt
push
mov
add
jbe
outs
push
lods
xchg
mov
loopne
cmc
gs
mov
xchg
xor
mov
movs
mov
and
jo
inc
lods
movs
xchg
and
out
cmps
lahf
xor
pusha
mov
cdq
mov
xor
in
out
inc
movs
adc
and
ret
inc
fadd
stc
push
retf
add
xor
jecxz
stos
jbe
mul
xlat
xor
add
fisttp
iret
je
and
adc
fcomp
xor
in
add
jl
sbb
sar
inc
adc
adc
inc
lock
and
sbb
xor
inc
aad
xor
das
(bad)
push
push
jb
and
jl
ja
jns
pop
inc
jns
dec
add
dec
aad
aas
inc
not
push
in
mov
test
imul
bound
hlt
adc
dec
cmc
inc
pop
outs
push
test
mov
out
cmc
mov
mov
test
in
adc
mov
inc
scas
movs
mov
xchg
iret
cwde
and
stos
xor
into
xlat
call
and
(bad)
scas
retf
(bad)
call
mov
push
(bad)
mov
into
xlat
xor
add
fisttp
shl
adc
fcomp
and
add
cmp
xchg
add
xor
pop
adc
push
mov
aaa
and
lds
and
pop
cmps
sbb
loopne
aad
xor
dec
(bad)
ins
push
popa
les
inc
movs
dec
inc
jl
adc
inc
fs
sub
pop
push
das
aad
aas
inc
test
in
mov
test
ins
in
sysret
out
addr16
push
mov
inc
cmc
push
pop
push
push
xchg
jmp
add
cdq
xchg
jne
xchg
mov
ss
mov
and
jo
inc
call
es
cmps
xchg
mov
xor
jecxz
jecxz
lds
in
rol
mov
inc
stc
(bad)
std
push
test
icebp
push
sar
repnz
gs
xchg
out
je
and
adc
fstp
sub
jnp
add
adc
push
xchg
pop
and
cmc
sbb
ds
aaa
cmp
cs
lds
adc
sbb
push
mov
loopne
aad
xor
adc
ins
push
imul
dec
inc
cmp
arpl
dec
(bad)
ja
arpl
xor
dec
aad
aas
sub
dec
ja
in
mov
test
fs
unpckhps
je
pop
hlt
push
mov
or
push
lods
xchg
mov
mov
test
push
mov
inc
mov
adc
mov
mov
and
xchg
cmps
xchg
mov
xor
xchg
xlat
lds
mul
xchg
scas
into
inc
aad
cld
push
rol
xor
ret
jbe
imul
(bad)
lds
fisttp
shl
rcl
lahf
into
xchg
add
xor
shl
in
add
and
or
adc
es
aaa
add
and
cmps
outs
daa
cmp
aad
xor
cmp
outs
push
dec
les
nop
jbe
or
jno
or
pop
(bad)
jae
arpl
ja
and
sbb
push
not
in
mov
test
jns
xor
add
arpl
hlt
dec
mov
inc
cmc
inc
pop
movhps
repz
test
push
xchg
xchg
cdq
xchg
hlt
adc
xchg
mov
and
jo
inc
mov
iret
lahf
es
pusha
xchg
mov
xor
not
out
fcom
jecxz
rol
mov
inc
fld
out
out
mov
push
sar
mov
mov
int
fisub
out
je
and
adc
fcomp
jno
pusha
shl
in
add
jnp
adc
xor
adc
add
movs
adc
pextrw
xor
pop
movs
adc
cmps
sbb
loopne
aad
xor
push
(bad)
dec
push
inc
les
imul
jb
das
aam
add
push
push
aad
aas
push
test
in
mov
test
gs
popa
cmovp
push
addr16
sbb
bound
pop
pop
ins
push
mov
mov
out
lods
mov
mov
adc
inc
mov
adc
mov
xchg
and
jo
inc
jmp
iret
cdq
es
mov
push
div
mov
out
hlt
inc
lods
adc
and
nop
scas
mov
push
leave
add
push
(bad)
mov
(bad)
fs
xor
ror
shl
adc
out
(bad)
xchg
add
sar
cmp
and
adc
adc
or
jg
mov
aaa
pop
movs
dec
lock
lds
and
pop
cmps
adc
dec
mov
loopne
aad
xor
adc
adc
les
nop
jae
dec
inc
cmp
inc
das
push
mov
aam
add
push
ins
aad
aas
dec
test
push
mov
test
push
out
addr16
hlt
push
mov
dec
cmc
pop
pop
fs
xchg
xchg
xchg
add
push
and
mov
shr
call
inc
mov
test
xchg
pushf
mov
and
jo
inc
xchg
cdq
and
push
xchg
mov
xor
in
out
inc
fst
into
and
(bad)
scas
mov
push
lock
push
fidivr
fisub
leave
add
fisttp
aam
shl
les
rcr
add
in
add
and
inc
pop
cmp
adc
adc
inc
lock
xor
add
add
add
push
loopne
aad
xor
adc
push
push
imul
dec
inc
cmp
(bad)
jnp
push
aam
and
pop
push
das
aad
aas
ins
mul
push
in
mov
test
inc
in
divps
pop
addr16
push
mov
push
push
test
test
out
call
inc
mov
adc
test
xchg
and
jo
inc
out
les
sahf
cmps
(bad)
xor
pusha
xchg
push
fwait
mov
xor
cmc
xlat
xlat
inc
mov
lds
inc
inc
in
mov
aad
push
test
enter
enter
out
lods
(bad)
iret
mul
stc
je
and
adc
fistp
add
pusha
rcr
in
add
and
jo
sbb
sbb
jg
mov
aaa
pop
movs
adc
adc
push
and
cmp
xor
adc
aaa
xor
adc
les
inc
jb
push
das
pop
(bad)
arpl
aam
add
push
ins
aad
aas
push
div
ja
in
mov
test
in
orps
outs
addr16
hlt
jno
sbb
cmc
pop
pop
ins
push
mov
mov
sahf
push
mov
add
mov
inc
xchg
jne
xchg
jmp
mov
and
jo
inc
mov
iret
test
and
xchg
xor
lock
hlt
inc
cli
adc
inc
in
loop
sti
xbegin
xor
clc
mov
xchg
shl
fadd
mov
out
je
and
adc
rcr
sub
jg
daa
in
add
daa
xchg
pop
popa
xchg
or
sub
sbb
das
xchg
inc
jg
mov
aaa
xor
and
cmp
add
add
and
es
jl
xor
outs
nop
jae
adc
lds
das
pop
(bad)
push
inc
fs
cmp
arpl
popa
aas
outs
test
in
mov
test
gs
popa
nop
inc
addr16
hlt
push
mov
or
inc
pop
inc
push
test
inc
test
add
mov
inc
loope
test
call
and
jo
inc
mov
fbld
test
mov
xor
in
rol
and
loopne
mov
push
aam
mov
push
(bad)
mov
in
xor
add
lds
fdiv
popf
adc
in
hlt
xchg
aas
pop
xor
jnp
adc
sub
jg
pop
outs
sbb
daa
sar
sbb
cmp
movs
add
sbb
xor
dec
and
adc
inc
aad
xor
sbb
les
jo
dec
inc
jno
adc
pop
mov
aam
and
pop
push
push
neg
push
in
mov
test
push
in
packsswb
push
addr16
ins
mov
outs
cmc
pop
pop
push
add
push
repnz
test
push
xchg
xchg
mov
call
and
jo
inc
out
mov
es
mov
xchg
pusha
mov
xor
hlt
xlat
jmp
les
leave
and
xchg
scas
mov
push
enter
cwde
aad
push
mov
cmc
xlat
xor
add
out
(bad)
out
je
and
adc
loopne
lds
cmp
add
and
or
sbb
xchg
add
mov
aaa
pop
movs
adc
or
sbb
push
cmps
pop
daa
pop
mov
loopne
aad
xor
ds
ins
push
push
movs
or
lds
pop
mov
aam
or
push
das
aad
aas
push
test
in
mov
test
sbb
je
jl
push
addr16
hlt
imul
inc
push
xchg
mov
add
mov
inc
lahf
jne
xchg
lock
test
lods
inc
mov
(bad)
and
push
popf
mov
xor
out
xlat
ret
adc
and
nop
scas
les
(bad)
(bad)
push
icebp
add
xor
clc
mov
nop
fs
xor
add
aam
leave
iretw
out
je
and
adc
mov
pop
push
test
shl
in
add
and
xadd
cmc
cmp
cmp
movs
es
outs
and
cmp
or
xor
pop
loopne
aad
xor
push
(bad)
jl
outs
les
xor
dec
inc
and
inc
das
pop
(bad)
ja
outs
aam
and
dec
push
sub
inc
aas
jle
inc
ja
in
mov
test
gs
bound
sbb
push
addr16
hlt
push
mov
or
and
outs
push
lods
xchg
lea
test
push
fwait
xchg
jne
xchg
mov
ss
jo
inc
lods
movs
shl
xchg
cmps
mov
mov
xor
ret
inc
mov
(bad)
loopne
aam
aad
loop
lds
mov
push
fidivr
out
fs
xor
gs
data16
out
je
and
adc
mov
pop
or
in
add
jle
add
shl
cmp
aaa
adc
and
sub
push
loopne
aad
xor
push
(bad)
dec
push
jbe
inc
nop
jno
adc
inc
lds
push
(bad)
jb
jg
dec
or
push
push
aad
aas
push
div
in
mov
test
(bad)
in
nop
jnp
inc
hlt
push
mov
pmaddwd
js
test
mov
push
cmc
lods
test
push
xchg
xchg
adc
ss
jo
inc
in
movs
popf
and
mov
pusha
cmps
push
div
nop
push
hlt
xlat
lock
std
adc
and
xchg
scas
stc
inc
ffreep
in
retf
add
xor
iret
mov
leave
test
out
in
in
gs
cli
out
je
and
adc
aam
xlat
xchg
movhps
test
rcr
in
add
add
sbb
adc
ds
aaa
sub
and
and
or
or
push
xor
push
(bad)
push
push
xor
and
jo
dec
inc
ins
lds
pop
mov
jns
ja
addr16
push
sub
inc
aas
jge
dec
ja
in
mov
test
pop
in
lsl
popa
addr16
push
mov
adc
jbe
inc
push
mov
mov
mov
mov
mov
inc
mov
adc
movs
mov
and
jo
inc
scas
movs
test
es
cmps
nop
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
imul
movs
push
rol
xor
pushf
mov
hlt
fs
xchg
add
enter
repnz
je
and
adc
mov
pop
sub
sub
add
jne
daa
pop
xor
adc
ds
aaa
adc
cs
lds
pop
cmps
sbb
sbb
xor
ds
jl
dec
les
nop
dec
movs
dec
inc
pop
lds
pop
(bad)
outs
inc
inc
aam
or
push
ins
aad
aas
pop
test
in
mov
test
js
bound
pop
out
addr16
push
mov
or
push
test
xchg
gs
test
add
mov
inc
mov
adc
div
mov
popf
movs
mov
cmps
iret
and
cmps
cdq
xor
pusha
mov
xor
in
repz
repz
and
mov
fist
loop
(bad)
push
fnstcw
aad
loopne
nop
add
jmp
retf
out
je
and
adc
(bad)
lahf
aam
xor
or
add
and
or
adc
sub
movs
ds
lds
adc
xor
add
add
pop
aad
xor
push
(bad)
bound
les
pop
movs
adc
lds
push
(bad)
ja
push
aam
add
push
arpl
push
aas
push
test
in
mov
test
push
in
mulps
push
addr16
hlt
adc
jp
pop
pop
pop
push
mov
push
mov
mov
mov
adc
inc
mov
adc
hlt
mov
and
jo
inc
mov
iret
mov
xchg
cmps
mov
push
popf
mov
xor
xchg
xlat
test
fild
scas
mov
push
int
jmp
std
aad
push
fistp
shl
add
loop
iret
data16
out
je
and
adc
ficomp
and
add
and
or
adc
xchg
dec
jg
mov
aaa
pop
movs
adc
das
lds
sbb
and
xor
or
push
popa
les
inc
movs
dec
inc
jb
jae
pusha
(bad)
arpl
aam
add
push
jp
pop
aas
push
test
in
mov
test
push
in
lsl
inc
addr16
hlt
push
mov
dec
cmc
jae
or
adc
mov
out
mov
inc
mov
adc
lahf
mov
and
jo
inc
mov
xchg
and
and
mov
push
(bad)
xlat
inc
retf
and
in
scas
mov
push
leave
add
push
cmp
fs
fild
mov
iret
data16
les
mov
call
sub
and
sbb
adc
jge
daa
pop
ds
imul
cmc
cmp
jg
mov
aaa
movs
sub
and
cmp
or
xor
adc
jl
dec
les
nop
je
dec
inc
cmp
or
pop
(bad)
outs
inc
addr16
cmp
push
js
dec
aas
push
test
in
mov
test
in
punpckhdq
inc
addr16
hlt
jo
push
xchg
jnp
jge
and
outs
push
rcl
sti
gs
test
push
mov
jecxz
add
lahf
xchg
mov
ss
jo
inc
stos
movs
frstor
loop
xchg
xor
pusha
mov
xor
in
mov
ret
adc
and
ret
inc
in
stc
push
retf
add
push
(bad)
mov
leave
fs
enter
shl
pop
data16
fbstp
popf
adc
repnz
les
jg
sbb
push
add
aas
xchg
pop
cmp
adc
push
mov
aaa
shld
push
lds
and
sbb
push
loopne
aad
xor
sbb
dec
push
ja
jne
ins
movs
inc
jno
adc
push
(bad)
jle
push
aam
add
arpl
inc
aas
dec
neg
push
in
mov
test
pop
in
sysret
out
addr16
hlt
push
mov
arpl
pop
pop
push
add
push
stos
gs
test
push
scas
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
out
fisub
sahf
cmps
mov
fsub
push
div
xchg
push
lahf
xlat
test
cld
inc
loopne
fild
mov
xor
loop
out
(bad)
not
add
loop
into
mov
je
and
adc
rcr
daa
test
or
test
outs
jg
aaa
pop
or
jb
push
cmc
sbb
jg
mov
aaa
sub
and
and
or
dec
aad
xor
cmp
les
push
lds
pop
(bad)
arpl
aam
add
push
pop
aad
aas
pop
idiv
or
test
gs
in
cmova
and
hlt
inc
mov
jg
bound
ins
push
lods
xchg
icebp
add
push
stos
gs
inc
call
jne
xchg
(bad)
adc
pushf
mov
and
jo
inc
xchg
movs
lahf
and
and
into
xor
loopne
out
inc
ficom
(bad)
std
scas
mov
push
leave
add
push
sar
xchg
loope
jmp
(bad)
mul
out
je
and
adc
fistp
add
add
jge
aaa
pop
xor
adc
ds
aaa
dec
movs
cmp
and
cmps
jge
sbb
dec
loopne
aad
xor
cs
ins
push
xor
pop
nop
imul
das
pop
(bad)
jne
arpl
dec
and
inc
push
jae
jns
push
test
in
mov
test
push
in
lsl
pop
addr16
hlt
push
mov
or
push
lods
xchg
repz
push
mul
test
push
mov
inc
mov
adc
mov
scas
and
jo
inc
test
iret
mov
and
mov
push
(bad)
out
inc
lods
adc
and
jecxz
loopne
aad
fist
mov
push
(bad)
mov
leave
fs
icebp
add
aad
retf
out
je
and
adc
fistp
xor
add
or
push
add
and
or
adc
cmp
movs
daa
lock
cmp
and
adc
dec
aad
xor
push
(bad)
push
push
jbe
jae
movs
adc
push
lds
push
(bad)
outs
inc
jno
dec
add
push
popa
aad
aas
push
imul
ja
in
mov
test
jno
bound
pop
out
addr16
ins
mov
push
pop
pop
jbe
test
scas
add
push
mov
add
mov
cmps
adc
inc
stc
jne
xchg
lock
lea
mov
out
pushf
and
xchg
cmps
call
mov
xor
hlt
xlat
test
and
(bad)
scas
mov
push
into
add
xor
aam
shl
test
add
out
shl
lds
fcom
loop
retf
xchg
adc
aaa
test
add
and
or
adc
pop
adc
sub
movs
adc
or
xor
and
or
sbb
or
pop
(bad)
inc
push
inc
les
jae
or
lds
das
xor
aam
add
push
das
aad
aas
dec
idiv
dec
in
mov
test
pop
in
nop
jge
push
hlt
push
mov
je
push
pop
outs
push
adc
movs
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
scas
movs
scas
and
jecxz
xchg
pusha
mov
xor
loopne
in
inc
rcl
and
nop
scas
mov
push
enter
(bad)
test
loop
(bad)
jbe
test
add
loope
iret
data16
les
adc
lahf
int3
xchg
and
sub
aas
shl
in
add
and
adc
adc
xchg
sbb
mov
aaa
sub
and
add
cmp
xor
push
(bad)
push
push
imul
je
cmp
push
das
daa
(bad)
ja
inc
aam
xor
dec
aad
aas
push
imul
ja
in
mov
test
pop
in
nop
inc
addr16
hlt
je
push
imul
daa
pop
ins
push
mov
lahf
add
push
mul
test
push
mov
inc
xchg
jne
xchg
in
adc
movs
mov
and
jo
inc
xchg
movs
fbld
xchg
cmps
xchg
xor
pusha
xchg
push
cwde
mov
xor
in
out
inc
fist
mov
(bad)
(bad)
mov
loope
into
add
xor
cmp
xor
add
mov
les
out
je
and
adc
(bad)
lahf
(bad)
xchg
xor
xor
jg
sub
push
add
or
sbb
adc
sbb
sub
dec
lds
and
push
cmps
aaa
daa
add
xor
or
les
jb
inc
inc
jae
adc
pop
(bad)
jnp
jno
inc
add
push
arpl
inc
aas
sub
pusha
ja
in
mov
test
pop
in
sysret
out
addr16
inc
mov
dec
cmc
pop
pop
inc
push
test
mov
lods
push
mov
mov
popf
push
fld
xchg
jne
xchg
mov
push
mov
mov
popf
es
cmps
sahf
xor
pusha
nop
push
mov
fistp
inc
mov
korb
scas
mov
push
int
call
push
lds
int3
fs
aam
in
in
dec
fdiv
ficom
fistp
imul
outs
and
or
adc
or
jg
mov
aaa
pop
movs
pop
lock
lds
and
sub
sub
dec
aad
xor
or
ins
push
outs
les
inc
movs
jbe
and
push
das
dec
(bad)
arpl
aam
and
pop
push
dec
aad
aas
ins
imul
in
mov
test
(bad)
in
unpckhps
popa
addr16
hlt
push
mov
inc
cmc
cs
pop
push
mov
push
mul
test
add
xchg
xchg
jne
xchg
mov
ret
ss
mov
and
jo
inc
mov
mov
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
leave
add
xor
xchg
in
shl
xchg
add
out
xchg
out
je
and
adc
out
jmp
test
in
add
and
xadd
aas
adc
cmp
movs
inc
lock
lds
and
sbb
aaa
loopne
aad
xor
adc
inc
push
sub
movs
pop
inc
cmp
adc
jns
ja
jl
cmp
push
jg
inc
aas
jle
inc
ja
in
mov
test
dec
in
orps
outs
addr16
hlt
inc
mov
dec
cmc
and
or
lods
xchg
lock
push
lods
gs
test
cmps
xchg
jne
xchg
mov
test
add
iret
xchg
es
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
hlt
xlat
call
and
xchg
scas
mov
push
aam
jmp
mov
out
fs
xor
add
aad
sti
out
fidiv
les
repnz
out
xchg
xor
test
sbb
adc
outs
and
and
and
pop
adc
movzx
aaa
or
and
and
adc
dec
aad
xor
dec
(bad)
push
push
jb
inc
nop
ins
movs
adc
lds
das
push
(bad)
jle
push
aam
add
push
dec
aad
aas
jge
dec
ja
in
mov
test
add
push
mulps
push
addr16
hlt
jge
jg
inc
jne
cmc
pop
pop
imul
scas
push
sti
mov
mov
scas
xchg
jne
xchg
call
mov
and
jo
inc
xchg
mov
xor
pusha
xchg
push
mov
fild
inc
mov
(bad)
loop
mov
push
test
fist
mov
in
push
xchg
add
test
mov
rcr
sub
add
sub
adc
sub
aaa
adc
sub
sbb
xor
xor
and
pusha
daa
or
add
xor
adc
inc
push
popa
les
nop
jbe
jnp
jb
or
push
(bad)
addr16
addr16
cmp
pop
push
jno
sbb
ins
not
in
mov
test
gs
in
cmovne
push
addr16
hlt
push
mov
inc
cmc
jb
inc
push
adc
mov
test
into
xchg
jne
xchg
cwde
adc
(bad)
mov
and
jo
inc
(bad)
movs
xchg
and
push
mov
fbstp
inc
mov
lds
inc
clc
(bad)
icebp
push
leave
add
xor
aad
(bad)
jbe
not
add
fisttp
les
adc
lahf
rcl
adc
and
dec
add
jge
das
pop
outs
xchg
adc
adc
xchg
add
mov
aaa
or
lds
and
pop
cmps
xor
sbb
xor
or
jg
push
les
nop
pusha
movs
adc
cmp
fs
pop
(bad)
addr16
pop
aam
add
push
sub
pop
aas
pop
test
in
mov
test
inc
in
pcmpgtd
inc
addr16
hlt
pop
mov
or
jle
outs
push
adc
gs
test
push
mov
mov
jne
xchg
mov
ss
jo
inc
lods
movs
pushf
and
xchg
cmps
lds
pusha
xchg
push
div
cwde
push
cld
xlat
out
inc
rcl
and
call
(bad)
fist
in
(bad)
lods
push
ret
mov
out
fs
xor
add
fimul
cmc
je
and
adc
fcomp
xor
add
xor
xchg
or
and
xchg
pop
jg
mov
aaa
and
lds
dec
and
adc
inc
aad
xor
cmp
inc
push
aaa
les
ins
movs
adc
dec
lds
das
inc
mov
aam
xor
push
sub
gs
je
pop
ja
in
mov
test
dec
in
nop
pop
addr16
hlt
dec
mov
push
push
mov
scas
add
push
mov
add
mov
inc
mov
adc
scas
mov
and
jo
inc
out
movs
(bad)
xchg
cmps
xor
mov
xor
out
lds
repz
shr
icebp
push
mov
mov
push
idiv
enter
loopne
cmps
in
gs
out
je
and
adc
fcomp
aaa
test
sub
test
and
or
ds
add
push
mov
aaa
and
and
and
sub
pop
aad
xor
push
(bad)
gs
popa
les
nop
jb
dec
inc
jb
dec
das
pop
(bad)
jo
push
aam
add
push
jl
dec
aas
push
neg
gs
mov
test
push
in
(bad)
out
addr16
hlt
sbb
bound
pop
pop
imul
sti
push
xchg
test
add
mov
mov
jne
xchg
out
adc
mov
mov
int3
jo
inc
test
iret
popf
movs
cmps
xchg
pusha
mov
mov
fist
inc
lds
retf
and
xchg
scas
mov
push
leave
add
xor
clc
mov
in
shl
rol
ret
pop
je
and
adc
fcomp
sub
pop
rol
in
add
and
adc
sbb
xchg
add
aaa
sbb
inc
lock
movs
sbb
daa
sbb
adc
push
aad
xor
xor
jl
push
js
xor
dec
inc
jb
jo
pop
(bad)
je
push
aam
adc
push
sub
pop
aas
push
div
dec
in
mov
test
sbb
popa
unpckhps
pop
ins
hlt
imul
cmc
pop
pop
pop
push
xchg
xchg
test
gs
mov
shr
lahf
push
mov
out
adc
inc
mov
adc
mov
jo
inc
lods
movs
fbld
xchg
cmps
pushf
xor
pusha
xchg
push
mov
fistp
inc
lods
adc
and
nop
scas
mov
stc
push
fiadd
cmps
xor
(bad)
mov
aam
(bad)
xor
add
fimul
fbstp
cld
adc
les
sub
add
and
and
pop
cmc
inc
adc
adc
and
and
and
adc
inc
aad
xor
and
push
les
imul
jo
fs
add
push
cs
aas
pop
not
push
in
mov
test
in
(bad)
out
addr16
hlt
dec
mov
dec
cmc
and
or
adc
gs
test
push
xchg
xchg
jne
xchg
xchg
adc
test
xchg
and
jo
inc
mov
iret
mov
xchg
cmps
xchg
xor
pusha
xchg
push
mov
lods
push
(bad)
xlat
test
mov
xchg
scas
stc
inc
sti
(bad)
out
in
stc
xor
pushf
mov
iret
xchg
out
jmp
call
out
je
and
adc
fcomp
aaa
test
add
and
xchg
jl
pop
cmc
cmp
cmp
add
mov
aaa
pop
movs
and
pop
lds
and
mov
loopne
aad
xor
adc
push
push
popa
les
nop
inc
movs
dec
inc
pop
lds
das
pop
mov
addr16
cmp
push
sub
not
ins
in
mov
test
push
in
sysret
out
addr16
hlt
push
mov
inc
cmc
pop
pop
outs
push
adc
xchg
into
xchg
test
jmp
and
jo
inc
mov
iret
cwde
mov
xchg
push
test
scas
push
xchg
xlat
lods
inc
out
in
and
xchg
scas
mov
push
leave
add
xor
fstp
lahf
fs
xchg
add
mov
leave
data16
out
je
and
jne
lahf
hlt
xchg
and
jb
ins
shl
in
add
and
adc
adc
xchg
add
mov
aaa
pop
movs
inc
lock
outs
and
add
adc
sbb
xor
adc
jl
xor
movs
dec
inc
push
lds
push
(bad)
jae
fs
and
push
and
jnp
push
test
in
mov
test
jp
fs
outs
addr16
hlt
push
mov
ins
cmc
cmp
outs
push
mov
push
cli
gs
test
push
mov
inc
out
test
jmp
and
jo
inc
mov
fbld
xchg
cmps
cdq
xor
pusha
stos
push
cli
mov
xor
out
loope
out
into
and
mov
stc
push
iret
add
xor
hlt
mov
xchg
fs
xor
add
fisttp
in
xlat
and
adc
ficomp
xor
add
push
xchg
pop
cmp
cmc
or
adc
inc
lock
cmp
sub
push
loopne
aad
xor
cmp
push
nop
ins
movs
pop
inc
pop
lds
das
pop
mov
jg
dec
sbb
push
arpl
bound
and
in
mov
test
sbb
bndmov
pop
addr16
outs
mov
jp
outs
pop
push
add
push
hlt
gs
mov
fucomip
xchg
cmps
xchg
adc
(bad)
and
jo
inc
call
iret
cwde
es
sahf
xor
pusha
adc
mov
cld
xlat
jmp
and
xchg
scas
ret
inc
out
(bad)
out
lds
fbstp
cmp
fs
xor
les
cld
je
and
adc
fcomp
aaa
test
shl
in
add
and
or
adc
add
jg
mov
aaa
pop
movs
sbb
and
movs
or
and
or
pop
aad
xor
ds
ins
push
popa
les
xor
lds
cmp
arpl
aam
and
pop
push
push
aad
aas
push
not
dec
in
mov
test
push
in
sysret
out
addr16
hlt
push
mov
inc
cmc
and
outs
push
adc
gs
test
push
xchg
in
rcl
mov
jo
inc
jmp
xchg
and
and
mov
push
out
xlat
hlt
inc
mov
lds
inc
sti
(bad)
fist
mov
push
ret
jbe
imul
shl
rol
in
fsub
out
je
and
adc
ret
lahf
call
test
shl
in
add
and
sbb
arpl
adc
and
movs
xor
adc
movs
aas
dec
cmp
addr16
and
pop
loopne
aad
xor
adc
adc
les
nop
ja
dec
inc
jno
inc
das
dec
(bad)
jle
jnp
push
sbb
push
ins
aad
aas
das
test
in
mov
test
inc
in
lsl
push
addr16
hlt
push
jge
dec
jne
cmc
popw
inc
push
lods
xchg
xchg
add
push
mul
test
push
mov
inc
mov
adc
mov
jo
inc
lods
movs
fbld
popf
cmps
iret
xor
pusha
mov
xor
not
rol
(bad)
lock
mov
push
loop
mov
push
(bad)
mov
leave
fs
int
lock
gs
fsub
out
je
and
jne
lahf
retf
xchg
adc
xor
ins
shr
in
add
or
or
pop
cmc
and
ds
aaa
shld
sub
cmp
or
dec
loopne
aad
xor
(bad)
jo
jbe
daa
nop
xor
adc
jb
adc
push
(bad)
jae
push
aam
add
push
arpl
pop
aas
sub
pop
ja
in
mov
test
push
in
sysret
out
addr16
hlt
mov
js
pop
pop
ins
push
scas
xchg
scas
add
push
cmps
mov
add
xchg
movs
xchg
xchg
adc
xor
inc
out
les
sahf
cmps
lods
xor
pusha
xchg
push
push
xchg
push
cld
xlat
retf
adc
and
xchg
scas
mov
push
in
add
push
fidivr
int3
fs
out
jmp
data16
std
je
and
adc
fstp
jg
aaa
rcr
in
add
cmp
add
sbb
xchg
push
jg
mov
aaa
add
and
and
or
xor
push
(bad)
push
jb
addr16
ins
movs
jle
pop
lds
das
gs
push
inc
addr16
adc
push
pop
aad
aas
push
not
dec
in
mov
test
inc
in
lsl
push
outs
hlt
adc
dec
cmc
pop
pop
inc
push
lods
xchg
mov
lea
test
test
mov
adc
mov
mov
stos
movs
xchg
and
mov
pusha
xchg
push
mov
mov
in
xlat
hlt
inc
in
adc
inc
xchg
scas
fiadd
(bad)
icebp
push
jmp
aad
push
(bad)
mov
nop
fs
xor
add
out
std
data16
les
aam
mov
lahf
mov
ins
shl
in
add
and
xadd
xchg
adc
pop
mov
aaa
and
and
or
push
loopne
aad
xor
adc
or
nop
jb
pop
inc
cmp
adc
jne
ja
fs
cmp
push
push
div
ja
in
mov
test
pop
in
cmovs
inc
addr16
hlt
push
mov
dec
cmc
pop
pop
push
push
lods
xchg
mov
mov
gs
test
xchg
jne
xchg
mov
test
movs
inc
stos
movs
pushf
and
popf
cmps
cdq
xor
pusha
stos
push
cli
mov
xor
loopne
mov
lods
adc
and
shr
clc
push
cmc
add
xor
(bad)
mov
jmp
loope
out
add
jmp
retf
out
je
and
adc
fstp
or
jnp
add
or
pop
xchg
pop
xor
adc
adc
sub
and
push
cmps
xor
sbb
xor
adc
adc
les
jb
push
inc
popa
lds
das
outs
(bad)
push
inc
jg
push
and
push
sub
jl
push
not
pop
in
mov
test
push
in
unpcklps
push
addr16
hlt
push
mov
inc
cmc
jne
dec
push
test
mov
mov
test
adc
inc
mov
adc
mov
jo
inc
jmp
es
pusha
xchg
push
test
xor
xlat
aad
lods
adc
and
ret
scas
cmps
inc
add
push
repz
push
(bad)
mov
into
shl
enter
shl
(bad)
fsub
out
je
and
adc
in
not
or
add
daa
xchg
pop
ds
or
sbb
sbb
jg
mov
aaa
aas
movs
sub
sbb
xor
and
adc
adc
aaa
xor
push
(bad)
ins
push
pop
les
inc
movs
pop
inc
and
jae
dec
(bad)
outs
inc
addr16
sbb
push
arpl
arpl
ins
test
in
mov
test
jns
pop
unpckhps
inc
addr16
hlt
popa
mov
jns
push
pop
outs
push
lods
xchg
pushf
add
push
in
gs
test
add
mov
inc
loop
fcom
jmp
jo
inc
mov
iret
lahf
and
push
sahf
mov
xor
out
xlat
lods
inc
sti
adc
and
xchg
scas
test
icebp
push
aad
ret
aad
push
aam
(bad)
jbe
neg
shl
enter
pushf
gs
pushf
data16
(bad)
je
and
adc
fstp
sub
add
push
in
add
and
adc
adc
inc
adc
cmp
movs
inc
lock
push
and
and
pop
loopne
aad
xor
xor
jno
imul
push
inc
jg
inc
das
push
(bad)
dec
inc
and
dec
xor
push
imul
aas
push
test
in
mov
test
in
nop
and
hlt
adc
or
push
pop
outs
push
mov
cmc
lods
test
push
mov
inc
mov
xchg
lods
adc
mov
mov
mov
mov
sahf
iret
xchg
es
cmps
cdq
xor
pusha
mov
mov
xor
xlat
test
and
xchg
scas
loopne
aad
ret
push
retf
add
push
cld
mov
fisub
int3
add
out
cli
data16
(bad)
les
repnz
retf
xchg
or
sbb
jg
and
test
outs
add
and
cmp
inc
adc
ds
aaa
pop
movs
pop
lock
cmp
pop
cmps
fs
sbb
or
pop
aad
xor
adc
les
nop
jb
adc
lds
(bad)
pusha
inc
pop
aam
or
push
push
aad
aas
sub
pop
ja
in
mov
test
jp
nop
inc
addr16
hlt
dec
mov
inc
cmc
and
js
test
cmc
add
push
cmc
gs
test
push
xchg
xchg
adc
lea
jo
inc
scas
movs
mov
es
cmps
sahf
xor
pusha
mov
xor
hlt
xlat
mov
and
xchg
scas
test
out
int
fidiv
aad
stos
jbe
not
xlat
xor
add
loop
mul
out
je
and
adc
loopne
lds
xor
sbb
push
add
and
or
sbb
ds
ins
mov
aaa
pop
movs
and
and
or
or
inc
aad
xor
sbb
outs
push
push
sub
jae
jge
push
lds
pop
(bad)
outs
inc
addr16
add
push
inc
aad
aas
imul
jge
arpl
xor
add
jle
outs
hlt
ins
mov
add
push
pop
outs
push
lahf
xchg
movs
add
push
jmp
add
mov
inc
jmp
push
mov
movs
fwait
and
test
xchg
push
xor
push
enter
mov
lds
inc
(bad)
push
cld
add
xor
loopne
out
jbe
not
fs
xor
add
fisttp
les
rcl
mov
pop
daa
test
in
add
add
je
pusha
cmc
sbb
sub
pop
lock
or
cmp
sbb
add
pop
loopne
aad
xor
dec
(bad)
jl
jne
pop
nop
inc
movs
dec
inc
jns
inc
das
pop
(bad)
ins
inc
fs
xor
push
ins
aad
aas
data16
in
mov
test
imul
ja
pop
hlt
dec
mov
push
cmc
push
pop
pop
push
scas
xchg
hlt
add
push
mul
test
push
mov
inc
xor
in
adc
movs
mov
and
jo
inc
mov
popf
es
pusha
adc
fistp
inc
lods
adc
and
shr
cli
push
stos
add
xor
(bad)
mov
shl
add
fimul
push
les
fcomp
xor
jnp
jno
push
add
cmp
or
adc
adc
adc
push
lds
and
and
mov
loopne
aad
xor
or
push
nop
push
lds
inc
inc
aam
or
push
jae
inc
aas
push
xor
mov
test
push
in
sysret
out
addr16
hlt
push
mov
inc
cmc
pop
pop
outs
push
aam
scas
add
push
mov
test
add
scas
xchg
jne
xchg
xchg
adc
mov
mov
and
mov
nop
push
mov
cmps
push
lock
test
fadd
scas
mov
push
int
in
std
aad
push
sar
lock
gs
(bad)
xchg
data16
cmc
je
and
adc
fistp
add
in
add
and
or
pop
cmc
daa
adc
xor
push
lock
sub
dec
pop
cmps
popa
daa
sbb
aad
xor
and
les
movs
ja
jb
push
das
jp
pop
inc
push
aam
and
pop
push
das
aad
aas
push
imul
mov
test
outs
in
addps
popa
addr16
hlt
dec
mov
inc
cmc
pop
pop
dec
push
adc
gs
fsubrp
mov
adc
inc
mov
adc
mov
mov
inc
stos
movs
xchg
loop
mov
push
test
stos
push
loopne
mov
and
xchg
scas
fild
(bad)
into
push
mov
mov
push
ret
jbe
not
xlat
xor
add
int3
(bad)
out
je
and
adc
fstp
sub
(bad)
shr
pop
outs
sbb
outs
rcl
inc
jg
mov
aaa
or
sub
and
push
cmps
sbb
sbb
xor
or
je
imul
dec
inc
pop
lds
jne
ja
jp
jae
jns
sbb
aad
aas
push
not
fs
mov
test
push
in
unpckhps
pop
addr16
hlt
push
mov
push
outs
pop
outs
push
xchg
xchg
test
gs
test
push
mov
inc
loope
test
test
movs
mov
and
jo
inc
lods
movs
mov
test
cdq
es
cmps
sahf
xor
pusha
xchg
push
test
lea
xlat
fiadd
loopne
xlat
(bad)
mov
loop
rol
lds
(bad)
mov
leave
fs
xchg
add
repnz
out
je
and
adc
fcomp
xor
pusha
ror
in
add
jle
xor
adc
adc
push
mov
aaa
add
and
and
sub
sub
aas
xor
aas
(bad)
pusha
push
dec
les
inc
movs
adc
jb
jno
aas
(bad)
jo
pop
aam
add
push
arpl
inc
aas
inc
div
mov
test
jno
push
cmovp
push
addr16
hlt
jge
jg
jg
or
push
scas
xchg
scas
add
push
call
out
call
inc
mov
adc
xchg
mov
and
jo
inc
stos
movs
xchg
and
cdq
cmps
xchg
xor
pusha
nop
push
mov
fistp
inc
movs
adc
and
in
scas
mov
push
jmp
repz
fdivr
shl
add
dec
out
je
and
adc
fcomp
add
add
cmp
pop
rcl
sbb
jg
mov
aaa
sub
and
xor
mov
loopne
aad
xor
push
(bad)
outs
push
inc
les
pop
movs
ins
inc
jl
imul
and
push
xor
push
das
aad
aas
push
test
in
mov
test
push
in
sysret
out
addr16
hlt
push
mov
inc
cmc
inc
pop
inc
push
adc
gs
out
sahf
push
mov
inc
mov
mov
test
mov
mov
mov
and
xchg
pusha
nop
push
cli
mov
xor
loopne
hlt
inc
sti
adc
and
xchg
scas
mov
push
retf
add
xor
int
clc
jbe
test
add
int
leave
data16
fdiv
lds
les
sub
pusha
ror
in
add
and
xor
sbb
push
adc
cmp
movs
sub
and
adc
adc
sbb
pop
loopne
aad
xor
adc
imul
movs
jo
cmp
pop
das
pop
(bad)
jae
pusha
aam
and
dec
push
ins
aad
aas
pop
test
in
mov
test
pop
in
andnps
and
hlt
push
mov
or
cmp
inc
push
test
movs
add
push
mul
test
push
xchg
xchg
jne
xchg
mov
movs
mov
and
jo
inc
test
iret
call
pusha
mov
div
retf
push
in
enter
fisub
loopne
jmp
jecxz
stc
push
loopne
mov
push
fdivr
leave
shl
xchg
add
les
fbstp
cli
adc
fcomp
or
jnp
es
add
sub
sub
pop
cmc
push
adc
sub
adc
lds
and
or
add
pop
aad
xor
(bad)
je
jbe
cmp
jno
push
das
jns
jae
fs
and
pop
push
pop
aad
aas
sub
pop
ja
in
mov
test
push
in
lsl
and
dec
hlt
ins
mov
push
pop
pop
fs
mov
push
scas
cmps
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
out
pushf
and
xchg
cmps
les
pusha
xchg
push
cli
mov
xor
call
lds
leave
and
(bad)
scas
fild
(bad)
out
push
aad
mov
push
fistp
repnz
loope
in
in
gs
enter
out
xchg
and
adc
neg
aaa
test
add
test
outs
and
sub
popa
cmc
sbb
jg
mov
aaa
aas
movs
pop
lock
lds
aas
cmps
aas
daa
add
add
xor
xor
pusha
push
push
les
js
or
lds
pop
(bad)
pusha
inc
push
aam
add
jl
inc
aas
push
mul
adc
ins
mov
test
push
in
(bad)
out
addr16
hlt
push
mov
ins
cmc
pop
pop
pop
push
xchg
xchg
mov
loop
mov
mov
mov
mov
in
mov
jne
xchg
hlt
adc
lea
leave
inc
xchg
popf
es
cmps
xchg
pusha
xchg
push
mov
fild
inc
in
cmc
and
sahf
scas
mov
push
leave
add
push
(bad)
mov
shl
retf
add
out
jecxz
(bad)
xchg
call
out
lahf
(bad)
xchg
and
jo
aaa
rcr
in
add
jbe
and
adc
xchg
push
jg
mov
aaa
or
daa
lock
outs
and
cmp
sbb
add
xor
adc
je
imul
dec
inc
lds
dec
(bad)
push
inc
pop
aam
add
push
sub
jns
pop
test
in
mov
test
jb
bound
adc
hlt
push
mov
or
and
jg
stos
xchg
mov
lods
test
push
ret
adc
inc
call
(bad)
jmp
and
jo
inc
stos
movs
mov
mov
mov
mov
push
lods
mov
xor
call
adc
and
shr
push
aam
mov
push
(bad)
mov
out
xor
add
aad
retf
out
je
and
adc
fcomp
xor
or
daa
in
add
je
aaa
pop
cmp
adc
sbb
movs
cs
and
aas
cmps
adc
cmp
xor
adc
inc
push
jne
and
pop
lds
das
inc
(bad)
ja
jg
ja
dec
mov
push
sub
pop
aas
push
mul
in
mov
test
add
xor
pop
out
addr16
hlt
sbb
jne
cmc
gs
push
add
push
hlt
xchg
mov
mov
inc
xor
lock
mov
xchg
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
hlt
xlat
jmp
(bad)
adc
and
xchg
scas
mov
push
(bad)
add
xor
lds
xchg
fs
xchg
add
ror
je
and
adc
fcomp
aaa
test
cmp
push
add
and
or
aas
cmc
and
push
mov
aaa
adc
and
push
cmps
adc
loopne
aad
xor
push
(bad)
jbe
imul
ins
inc
jb
or
pop
mov
aam
and
sbb
aad
aas
push
not
adc
ins
mov
test
jg
inc
(bad)
out
addr16
hlt
push
inc
xchg
jg
adc
inc
pop
gs
test
scas
add
push
hlt
gs
add
mov
inc
mov
adc
mov
mov
jo
inc
out
mov
es
xchg
pusha
fst
mov
xor
loopne
repz
cmc
adc
and
xchg
scas
mov
push
retf
xor
clc
mov
(bad)
shl
fwait
add
xlat
(bad)
fbld
out
je
and
adc
ficomp
and
in
add
jne
and
adc
adc
cmp
movs
sub
and
or
cmp
xor
inc
(bad)
je
imul
pop
inc
imul
add
adc
push
arpl
push
aas
sub
dec
ja
in
mov
test
gs
in
unpcklps
pop
addr16
push
mov
jbe
pop
pop
push
add
push
mul
test
mov
inc
mov
adc
test
mov
mov
iret
call
pusha
ret
mov
xor
in
jmp
(bad)
repnz
loopne
aad
mov
xor
(bad)
mov
in
fs
xor
add
mov
iret
out
fbstp
fcom
les
adc
add
jne
cmp
daa
xchg
push
rcl
jg
mov
aaa
shld
adc
xor
adc
xor
adc
les
ins
movs
dec
inc
push
(bad)
jle
inc
aam
adc
push
arpl
add
jle
pop
ja
in
mov
test
in
sysret
out
addr16
hlt
inc
mov
inc
cmc
dec
pop
dec
push
test
mov
mov
mov
mov
mov
into
xchg
mov
call
and
jo
inc
scas
movs
mov
repnz
lahf
es
cmps
mov
test
mov
xor
(bad)
test
repz
sahf
scas
cmps
inc
test
icebp
xor
ret
jbe
test
add
loop
xchg
retw
je
and
adc
(bad)
lahf
les
(bad)
shl
in
add
and
xadd
sbb
jg
mov
aaa
push
movs
adc
push
lds
and
and
or
aas
aad
xor
xor
les
dec
movs
dec
inc
cmp
(bad)
arpl
aam
add
push
jp
addr16
jnp
jl
pop
in
mov
test
in
unpckhps
jae
push
hlt
push
mov
or
outs
pop
outs
push
test
hlt
gs
mov
push
cdq
xchg
jne
xchg
lock
pushf
mov
and
jo
inc
mov
mov
mov
xchg
push
test
mov
inc
mov
(bad)
shr
icebp
push
int
cld
xor
ret
jbe
not
xlat
xor
add
loop
leave
data16
test
fcom
scas
lahf
clc
xchg
and
pop
test
shl
in
add
and
or
sbb
sbb
cmp
movs
sbb
and
sbb
cmp
sbb
adc
xor
adc
pop
push
imul
dec
inc
xor
pop
das
pop
(bad)
jb
inc
aam
add
push
das
aad
aas
push
test
in
mov
test
in
unpckhps
push
addr16
hlt
je
bound
inc
pop
push
push
lods
xchg
test
gs
test
mov
jne
xchg
mov
ss
mov
and
jo
inc
mov
iret
cdq
es
shl
mov
xor
in
hlt
inc
rcl
and
ret
inc
xchg
stc
push
iret
add
xor
(bad)
mov
jmp
lds
fimul
fbstp
loop
out
retf
lahf
les
daa
shl
in
add
daa
xchg
and
adc
es
aaa
or
and
and
adc
pop
aad
xor
sbb
push
push
jbe
jbe
dec
movs
adc
lds
inc
(bad)
jo
jl
dec
add
arpl
(bad)
dec
neg
push
in
mov
test
push
in
packsswb
push
addr16
hlt
jno
push
xchg
ss
cmc
dec
pop
push
push
xchg
xchg
mov
mov
cmc
mov
push
xchg
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
mov
iret
call
pusha
stos
push
call
push
in
rol
leave
and
xchg
scas
sti
inc
xchg
ficom
jmp
mov
loop
fidiv
rol
fisttp
lds
loop
jecxz
retf
jne
lahf
lds
or
add
add
or
cmp
xchg
add
cmp
es
adc
cmp
or
pop
aad
xor
push
(bad)
ins
push
imul
pop
inc
arpl
inc
das
pop
(bad)
bound
aam
add
push
push
inc
aas
dec
not
push
in
mov
test
push
in
pcmpeqb
push
addr16
push
mov
pop
cmc
pop
pop
push
add
push
call
out
mov
mov
inc
mov
adc
repz
and
jo
inc
mov
shl
cmps
mov
push
mov
fistp
inc
mov
(bad)
xchg
scas
out
inc
sti
(bad)
cli
push
enter
out
loope
fstp
jmp
shl
into
add
loope
in
(bad)
out
je
and
jne
lahf
(bad)
xchg
xor
sub
shl
add
jge
das
pop
es
or
daa
cmc
sbb
pop
mov
aaa
pop
movs
sub
and
sub
adc
xor
mov
pop
cs
jl
je
inc
nop
jae
jge
cmp
adc
inc
mov
data16
or
push
arpl
pop
aas
push
neg
fs
mov
test
pop
in
movd
inc
addr16
hlt
push
mov
or
push
lods
xchg
test
push
mul
test
push
mov
inc
xor
mov
cmp
movs
mov
and
jo
inc
mov
fisub
xchg
cmps
lds
pusha
retf
mov
xor
int
icebp
inc
lods
adc
and
lahf
scas
ret
(bad)
call
(bad)
xor
out
std
jbe
div
fs
clc
add
cmc
(bad)
out
je
and
adc
ficomp
xor
and
add
or
sbb
adc
sbb
pop
lock
and
or
adc
pop
aad
xor
adc
jb
jbe
and
(bad)
lds
push
(bad)
outs
inc
jno
dec
sbb
push
xor
inc
aas
push
idiv
ja
in
mov
test
in
punpcklwd
push
addr16
hlt
jge
jg
jp
jae
pop
pop
push
add
push
cwde
mov
add
xchg
adc
inc
out
cdq
xchg
adc
movs
jo
inc
out
and
cmps
lahf
xor
pusha
xchg
push
mov
fild
rcl
jmp
rol
cli
inc
in
mov
push
int
movs
xor
(bad)
mov
jmp
int3
add
jecxz
enter
(bad)
je
and
adc
neg
aaa
test
jno
sub
outs
and
or
adc
xchg
push
jg
mov
aaa
or
dec
lock
xor
cmps
outs
daa
xor
xor
push
(bad)
jl
jle
jnp
jo
dec
inc
dec
lds
pop
(bad)
pop
inc
push
aam
add
push
das
aad
aas
test
in
mov
test
push
pop
unpcklps
outs
addr16
sbb
jg
inc
jne
cmc
popw
outs
push
test
mul
test
push
xchg
xchg
adc
inc
mov
adc
mov
and
movs
xchg
and
and
aam
pushf
fbstp
inc
mov
(bad)
xchg
scas
mov
push
repnz
push
sar
fs
retf
add
mov
sahf
data16
ret
and
adc
icebp
lahf
rcl
cmp
pop
in
add
and
imul
cmc
pop
adc
cmp
pop
lock
add
dec
cmp
cmp
and
pop
loopne
aad
xor
cmp
jl
xor
daa
nop
jae
dec
inc
dec
lds
daa
(bad)
jnp
cmp
dec
add
push
ins
aad
aas
push
test
in
mov
test
gs
in
pcmpeqb
inc
addr16
hlt
or
dec
cmc
jb
outs
push
mov
push
mov
add
mov
inc
mov
adc
pushf
mov
and
jo
inc
xchg
movs
fbld
xchg
cmps
cmps
xor
pusha
xchg
push
stc
mov
xor
(bad)
xlat
lds
mov
cld
korw
scas
call
push
mov
mov
push
(bad)
mov
leave
shl
lds
out
(bad)
out
(bad)
fbstp
out
out
xchg
jne
lahf
aam
xor
test
and
push
add
jle
xor
xor
adc
push
mov
aaa
shld
adc
xor
sub
or
and
or
sub
dec
push
push
les
nop
xor
gs
cmp
jae
data16
sbb
push
ja
add
and
in
mov
test
outs
in
cmovns
push
addr16
adc
inc
cmc
pop
pop
ja
test
scas
add
push
cmc
gs
mov
fucomip
call
inc
xor
mov
ss
mov
and
jo
inc
out
cmps
and
xchg
cmps
xor
mov
xor
(bad)
xlat
fild
into
and
lahf
scas
mov
add
xor
lds
into
fs
add
repnz
out
je
and
adc
aam
lds
pusha
ror
in
add
cmp
or
add
cmp
or
sub
and
pop
cmps
sbb
loopne
aad
xor
push
(bad)
ins
push
les
pusha
movs
dec
inc
pop
lds
pop
(bad)
pop
inc
daa
aam
add
push
cs
aas
push
div
mov
test
gs
in
cmovo
pop
addr16
hlt
push
mov
or
inc
pop
outs
push
xchg
mov
mov
std
add
mov
inc
mov
adc
repz
and
jo
inc
mov
xchg
and
and
mov
mov
xlat
retf
inc
int
retf
and
xchg
scas
sti
inc
aad
call
(bad)
xor
ret
jbe
not
shl
in
test
fsub
vphsubwd
cdq
je
and
adc
fstp
add
add
sbb
xchg
or
adc
cmp
movs
and
and
push
cmps
push
daa
pop
mov
loopne
aad
xor
xor
adc
les
nop
jae
outs
inc
jno
adc
pop
(bad)
jb
pop
aam
add
push
ins
aad
aas
push
test
in
mov
test
pop
in
addps
dec
addr16
hlt
inc
mov
or
push
lods
xchg
repnz
push
fwait
gs
test
push
mov
inc
nop
jne
xchg
call
cmps
mov
and
jo
inc
popf
movs
mov
es
cdq
xor
pusha
mov
(bad)
mov
xor
lock
hlt
inc
fst
into
and
mov
stc
push
retf
add
xor
sar
mul
fiadd
ret
(bad)
out
je
and
adc
ficomp
jae
xor
sbb
sbb
and
or
adc
or
adc
push
lds
and
xor
xor
add
xor
(bad)
push
push
jbe
aas
nop
push
movs
adc
cmp
adc
push
(bad)
jae
push
aam
and
pop
push
js
add
ins
not
dec
in
mov
test
push
in
packssdw
pop
addr16
hlt
dec
mov
inc
cmc
gs
inc
push
test
movs
add
push
hlt
gs
test
push
rol
jne
xchg
mov
ss
mov
and
jo
inc
cmps
movs
pushf
and
xchg
xchg
push
mov
stos
xor
out
xlat
rol
and
loop
mov
push
int
mov
push
fdivr
in
fwait
xor
add
loop
clc
data16
out
je
and
adc
fcomp
aaa
test
sub
push
add
jg
xor
rol
or
jg
mov
aaa
xor
and
sub
push
loopne
aad
xor
sub
ins
push
dec
les
jo
inc
dec
lds
inc
mov
aam
or
push
das
aad
aas
inc
neg
in
mov
test
sbb
inc
lsl
push
addr16
push
mov
push
cmc
pop
pop
outs
push
leave
xchg
mov
in
push
mov
xchg
test
push
fwait
xchg
jne
xchg
call
mov
add
mov
in
scas
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
in
mov
push
lds
cld
xor
aad
fidiv
test
gs
leave
data16
out
je
and
adc
fstp
sub
jg
and
dec
add
and
daa
pop
cmp
cmc
pop
adc
push
mov
aaa
sub
and
pop
cmps
sbb
push
mov
loopne
aad
xor
xor
je
imul
push
inc
ins
lds
pop
(bad)
addr16
fs
add
push
ins
aad
aas
pop
test
in
mov
test
fs
nop
outs
addr16
hlt
adc
gs
jnp
add
and
outs
push
mov
push
(bad)
rol
fwait
push
xchg
xchg
mov
mov
cmps
mov
and
jo
inc
mov
(bad)
popf
cmps
test
mov
xor
loopne
inc
into
and
aad
into
inc
in
mov
xor
sar
fs
xor
add
in
call
je
and
adc
rcr
test
and
dec
add
sub
xchg
jbe
pop
cmc
inc
adc
imul
lock
imul
cmps
(bad)
add
adc
cmp
mov
pop
adc
les
inc
movs
adc
cmp
push
das
push
(bad)
jle
inc
aam
add
push
dec
aad
aas
pop
test
in
mov
test
push
in
punpckhdq
jp
push
hlt
jno
push
xchg
aaa
jne
cmc
pop
pop
push
add
push
lods
gs
out
mov
scas
xchg
jne
xchg
xchg
adc
test
jo
inc
xchg
call
pusha
mov
xor
(bad)
test
mov
inc
rol
out
jmp
lds
std
mov
repnz
xor
add
loop
retf
out
je
and
adc
rcr
xor
add
jle
add
add
cmc
and
imul
sub
pop
movs
sbb
daa
pop
mov
loopne
aad
xor
cs
inc
push
dec
les
xor
lds
xor
aam
and
sbb
aad
aas
push
not
adc
jne
ins
test
gs
in
pcmpgtb
pop
addr16
hlt
push
bound
bound
outs
push
xchg
sti
cmps
test
add
mov
inc
mov
adc
mov
mov
movs
lahf
and
mov
retf
push
test
mov
inc
rcl
ret
and
xchg
scas
mov
push
leave
add
push
lds
(bad)
lds
loope
clc
in
gs
sahf
data16
(bad)
je
and
adc
fstp
add
add
sub
or
adc
xchg
push
jg
mov
aaa
sub
and
cmp
and
sbb
xor
adc
les
inc
cmp
adc
jns
ja
and
imul
aad
aas
jle
inc
ja
in
mov
test
dec
in
andnps
outs
addr16
hlt
jl
jne
jnp
pop
cmc
cmp
outs
push
test
test
test
add
fld
mov
adc
icebp
mov
and
jo
inc
stos
movs
and
mov
push
mov
ffreep
push
in
in
inc
not
into
and
mov
mov
xor
(bad)
mov
leave
fs
xor
add
mov
retf
out
je
and
adc
loopne
aam
xor
or
in
add
xor
add
rol
inc
adc
or
add
push
movs
dec
lock
and
dec
cmp
or
adc
aas
xor
adc
les
ins
movs
je
jno
push
das
push
(bad)
jb
jg
jne
inc
mov
push
arpl
pop
aas
jae
pop
ja
in
mov
test
push
in
nop
push
addr16
sbb
jnp
gs
cmc
pop
pop
dec
push
mov
cmc
mov
cmc
push
scas
xchg
jne
xchg
xchg
adc
test
xchg
and
jo
inc
cwde
movs
pushf
and
and
mov
(bad)
test
fadd
scas
mov
push
int
movs
xor
(bad)
mov
in
shl
aam
int3
in
gs
(bad)
loop
mul
shl
adc
out
(bad)
xchg
push
pop
jo
popa
rol
in
add
cmp
or
adc
push
mov
aaa
cmp
and
sbb
cmp
das
cmps
sbb
loopne
aad
xor
adc
les
jbe
dec
inc
jb
push
das
cmp
aam
and
pop
push
sub
push
aas
jg
xor
mov
test
push
in
lsl
push
addr16
hlt
imul
cmc
bound
outs
push
fist
mov
mov
out
mov
mov
inc
lahf
jne
xchg
in
adc
mov
call
iret
mov
xor
pusha
mov
xor
lock
retf
adc
and
xchg
scas
aam
sti
(bad)
aad
out
mov
push
ret
jbe
imul
shl
retf
in
gs
(bad)
out
je
and
adc
aad
(bad)
xchg
xor
cmp
ins
rcr
in
add
jns
daa
pop
es
jge
adc
xchg
push
jg
mov
aaa
sbb
sub
and
cmp
mov
loopne
aad
xor
or
jl
imul
dec
inc
dec
lds
pop
(bad)
gs
data16
and
jp
ins
aad
aas
das
not
dec
in
mov
test
in
addps
inc
addr16
dec
mov
or
push
lods
xchg
test
gs
test
push
xchg
xchg
jne
xchg
in
adc
push
mov
out
fbld
xchg
cmps
cwde
xor
pusha
cmps
push
cli
mov
xor
in
int
loope
into
and
in
fiadd
(bad)
icebp
push
mov
aad
push
(bad)
mov
(bad)
les
lds
fisttp
iret
je
and
adc
aam
cli
xchg
xor
jle
add
and
adc
outs
and
sbb
shr
adc
ds
aaa
sbb
dec
lock
adc
and
outs
daa
push
mov
loopne
aad
xor
inc
(bad)
push
push
jbe
jae
jno
adc
jae
gs
push
(bad)
outs
inc
outs
aam
add
pop
aad
aas
push
div
mov
test
push
in
cmove
jnp
inc
hlt
inc
mov
jl
pop
pop
push
add
push
cmc
mov
mov
scas
xchg
adc
inc
mov
adc
mov
jo
inc
out
pushf
and
xchg
cmps
(bad)
xor
pusha
test
mov
xor
loope
int
mov
lds
inc
inc
jecxz
mov
mov
push
std
mov
fisub
rol
iret
(bad)
cmc
data16
shl
call
cmc
lahf
mov
add
add
jg
aaa
pop
xor
adc
das
mov
aaa
or
pop
lock
sub
dec
adc
mov
loopne
aad
xor
push
(bad)
inc
push
jno
ins
nop
jno
dec
inc
jb
or
pusha
(bad)
arpl
aam
xor
push
sub
idiv
ja
in
mov
test
inc
in
(bad)
out
addr16
hlt
dec
mov
or
pop
pop
push
add
push
mov
add
mov
inc
loop
fst
jmp
jo
inc
scas
movs
xchg
and
mov
pusha
xchg
push
mov
(bad)
push
jmp
and
xchg
scas
aam
sti
(bad)
cld
push
mov
mov
push
ret
jbe
imul
xlat
xor
ror
je
and
adc
out
lds
ins
rcr
in
add
and
or
jns
sbb
cmp
movs
cmp
and
and
mov
loopne
aad
xor
dec
(bad)
jl
jne
push
nop
arpl
adc
ds
push
inc
pop
aam
add
push
aad
aas
push
div
ja
in
mov
test
pop
in
addps
inc
addr16
hlt
push
mov
(bad)
cmc
popw
outs
push
aam
test
gs
test
push
call
jne
xchg
out
adc
mov
xchg
inc
lods
movs
fbld
xchg
cmps
mov
push
mov
fbstp
inc
cmps
adc
and
mov
out
mov
xor
sti
mov
xlat
fs
xor
add
fisttp
xlat
je
and
adc
fcomp
add
add
and
or
push
cmc
or
cs
aaa
aas
movs
pop
lock
push
and
add
push
loopne
aad
xor
das
(bad)
inc
push
aaa
les
ins
movs
dec
inc
pop
lds
(bad)
je
inc
aam
and
inc
push
popa
aad
aas
push
test
in
mov
test
push
in
packsswb
push
addr16
hlt
inc
mov
add
dec
pop
jb
test
scas
add
push
mov
add
xchg
xchg
jne
xchg
call
mov
and
jo
inc
xchg
mov
xchg
cmps
lds
pusha
xchg
push
mov
mov
inc
movs
adc
inc
out
mov
push
int
mov
push
fdivr
shl
add
jmp
je
and
adc
aad
rcl
adc
sub
test
outs
and
or
xor
sbb
and
ins
aaa
das
movs
adc
dec
lds
pop
movs
es
inc
cmps
pop
daa
adc
xor
cmp
ins
push
ins
les
nop
jo
push
inc
pop
lds
pop
mov
jns
outs
and
pop
push
dec
aad
aas
push
test
in
mov
test
in
pcmpgtd
pop
addr16
hlt
adc
dec
cmc
bound
push
push
mov
push
cli
mov
mov
mov
inc
jmp
(bad)
jmp
pushf
mov
and
jo
inc
lods
movs
mov
es
pusha
xchg
push
sti
mov
xor
lock
mov
mov
(bad)
xchg
scas
fadd
(bad)
icebp
push
aam
clc
xor
clc
mov
xchg
shl
int3
add
out
retf
out
je
and
adc
(bad)
lahf
lock
and
xor
add
sub
or
sbb
xchg
push
jg
mov
aaa
adc
adc
xor
outs
and
cmp
es
xor
pop
loopne
aad
xor
ds
je
popa
les
nop
xor
dec
inc
cmp
ja
ds
ja
dec
aam
xor
push
arpl
inc
aas
push
mul
fs
mov
test
cmovs
inc
addr16
hlt
pop
mov
pop
cmc
pop
pop
push
mov
mov
mov
test
rol
jne
xchg
adc
mov
and
jo
inc
lods
movs
xchg
xchg
cmps
mov
shl
push
mov
xor
xlat
out
inc
rcl
and
shr
stc
push
aam
cmps
xor
fistp
leave
fs
xor
add
test
fst
aam
ficom
sub
aaa
in
add
jle
xor
cmp
cmc
inc
adc
ds
aaa
add
lds
and
cmp
push
loopne
aad
xor
aas
(bad)
imul
and
jno
adc
imul
dec
cmp
pop
push
sub
(bad)
push
neg
push
push
mov
test
in
packsswb
push
addr16
hlt
adc
push
cmc
and
imul
xchg
scas
add
push
mov
add
scas
xchg
adc
mov
xchg
jo
inc
(bad)
movs
mov
es
test
mov
xor
(bad)
xlat
test
mov
inc
inc
(bad)
push
std
add
xor
cmp
mov
fadd
loop
enter
xor
(bad)
jne
lahf
not
sbb
add
arpl
aaa
shl
pop
adc
push
mov
aaa
sbb
adc
sbb
sub
pop
movs
and
cmps
sbb
loopne
aad
xor
adc
les
jo
or
lds
xor
aam
add
push
jb
inc
aas
dec
imul
push
in
mov
test
gs
in
cmovb
push
addr16
hlt
jno
inc
xchg
cmp
cmc
pop
pop
outs
push
rcl
sti
gs
std
add
mov
inc
xchg
jne
xchg
jmp
mov
and
jo
inc
sahf
movs
xchg
and
and
int3
xor
sahf
xlat
hlt
inc
mov
(bad)
(bad)
mov
xor
ret
jbe
not
shl
cli
add
les
out
je
and
adc
out
(bad)
xchg
and
ja
shl
in
add
cmp
xchg
sub
adc
xchg
push
jg
mov
aaa
sbb
cmp
and
pop
cmps
and
sbb
pavgb
and
adc
pop
push
push
les
nop
jbe
dec
inc
cmp
adc
imul
dec
add
push
imul
aas
push
div
jne
push
mov
test
in
sysret
out
addr16
hlt
push
mov
pop
cmc
pop
pop
imul
xchg
mov
push
hlt
gs
test
push
mov
inc
mov
cmps
xchg
mov
mov
jo
inc
lods
movs
xchg
and
mov
cdq
xor
pusha
mov
stc
mov
xor
nop
xlat
mov
lds
into
and
mov
stc
push
ret
xor
cld
mov
mul
lds
fisttp
xor
adc
rcr
xor
jnp
sbb
dec
add
sbb
push
rcl
inc
adc
ds
aaa
shld
or
push
and
cmp
sub
pop
aad
xor
adc
les
nop
inc
movs
dec
inc
push
lds
push
(bad)
dec
inc
je
dec
add
push
popa
aad
aas
push
mul
push
in
mov
test
push
in
cmovne
push
addr16
hlt
push
mov
inc
cmc
inc
pop
pop
push
test
mov
call
gs
test
push
mov
inc
mov
adc
fbld
jo
inc
call
iret
xchg
sahf
cmps
sahf
xor
pusha
xchg
mov
xor
ret
xlat
retf
inc
rcl
(bad)
imul
out
into
add
push
sti
mov
shl
add
test
fsub
out
je
and
adc
neg
aaa
test
and
dec
add
add
aaa
rcr
pop
adc
ins
mov
aaa
pop
movs
cs
cmp
inc
cmps
adc
loopne
aad
xor
push
(bad)
push
push
jbe
ja
jo
outs
inc
pop
lds
pop
(bad)
jno
addr16
and
push
dec
aas
jge
inc
ja
in
mov
test
push
in
cmovbe
push
addr16
hlt
pop
mov
or
daa
pop
outs
push
adc
gs
out
lea
popf
xchg
cmps
xchg
mov
xchg
jmp
lahf
mov
and
jo
inc
mov
iret
mov
and
stos
xor
(bad)
xlat
hlt
inc
mov
(bad)
aam
les
(bad)
loopne
mov
aad
push
ret
jbe
not
xlat
xor
add
xlat
(bad)
fldenv
out
je
and
adc
rcr
xor
in
add
xor
xchg
sbb
adc
xchg
push
jg
mov
aaa
adc
adc
and
inc
cmps
sbb
sbb
pavgb
aad
xor
adc
inc
push
dec
les
nop
jb
ins
inc
cmp
adc
cmp
push
inc
pusha
aam
sub
sbb
aad
aas
push
not
jo
push
mov
test
pop
in
pcmpgtd
outs
addr16
hlt
or
pop
cmc
jle
outs
push
xchg
xchg
mov
loopne
cmc
lods
test
push
fwait
xchg
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
lods
and
loop
mov
mov
push
call
push
in
mov
cld
inc
sahf
scas
loopne
jecxz
in
lock
xor
fdivr
(bad)
fs
xor
add
dec
(bad)
ficom
fcomp
xor
add
and
adc
outs
and
or
adc
ds
aaa
aas
movs
pop
lock
xor
daa
cmps
jge
push
mov
loopne
aad
xor
(bad)
jl
dec
les
ins
movs
jbe
jno
adc
dec
(bad)
jae
jg
push
and
pop
push
sub
inc
aas
inc
neg
adc
push
mov
test
push
bndmov
and
hlt
push
mov
inc
cmc
das
pop
js
lods
xchg
inc
push
mul
test
push
scas
xchg
adc
ss
mov
and
jo
inc
call
iret
call
pusha
xchg
push
xchg
mov
xor
lock
test
fadd
scas
mov
push
int
mov
push
(bad)
mov
enter
leave
add
lods
(bad)
out
je
and
adc
rcr
test
add
xchg
pop
ds
push
rcl
es
mov
aaa
pop
movs
inc
lock
outs
and
das
cmps
sbb
loopne
aad
xor
ss
fs
jne
and
dec
movs
dec
inc
cmp
pop
das
imul
inc
jg
inc
cmp
push
das
aad
aas
push
test
in
mov
test
outs
in
lsl
push
addr16
sbb
jge
push
jne
cmc
pop
pop
imul
sti
push
cmc
gs
test
add
mov
cmps
adc
inc
lahf
jne
xchg
mov
ret
mov
mov
scas
movs
xchg
and
and
ret
fistp
inc
mov
(bad)
lahf
scas
mov
icebp
mov
xor
ret
jbe
not
fs
xor
add
lock
je
and
adc
fstp
test
sbb
ds
sub
adc
pusha
cmc
sbb
push
mov
aaa
add
and
das
cmps
outs
daa
aaa
mov
loopne
aad
xor
push
(bad)
push
nop
dec
movs
dec
inc
cmp
adc
push
(bad)
pop
inc
addr16
xor
push
push
imul
dec
in
mov
test
in
unpckhps
pop
addr16
dec
mov
or
push
lods
xchg
mov
gs
out
test
mov
inc
mov
adc
mov
shl
jo
inc
xchg
movs
fbld
xchg
cmps
fnstenv
mov
xor
rcl
inc
ficom
into
and
ret
inc
(bad)
push
retf
add
push
repnz
shl
lds
fisttp
icebp
je
and
adc
ficomp
aaa
test
and
sbb
and
or
adc
push
mov
aaa
push
movs
inc
lock
lds
movs
and
cmps
adc
dec
mov
loopne
aad
xor
adc
push
push
jbe
and
jno
fs
push
(bad)
jo
gs
or
push
arpl
inc
aas
js
pusha
ja
in
mov
test
sbb
dec
orps
jno
push
hlt
push
mov
inc
cmc
inc
pop
push
add
push
cmc
gs
test
push
scas
xchg
jne
xchg
mov
mov
jo
inc
mov
pushf
and
std
cmps
sahf
xor
pusha
xchg
push
div
mov
hlt
xlat
lock
not
leave
and
(bad)
scas
mov
push
int
fbstp
sar
xor
add
fisttp
ret
and
jne
lahf
lds
pusha
sar
in
add
jge
aaa
pop
ds
je
or
sbb
jg
mov
aaa
and
and
cmps
sbb
loopne
aad
xor
adc
push
popa
les
nop
inc
movs
jl
cmp
push
das
pusha
(bad)
arpl
aam
add
push
jae
inc
aas
push
idiv
dec
in
mov
test
jg
pop
cmovbe
push
addr16
hlt
dec
mov
inc
cmc
jp
jbe
adc
cmps
test
iret
xchg
jne
xchg
mov
ss
mov
and
jo
inc
jmp
test
mov
xchg
mov
xor
loopne
call
and
std
scas
mov
push
leave
add
fnstsw
in
shl
retf
add
ror
div
fist
ficomp
sub
add
adc
adc
and
daa
pop
and
adc
add
movs
adc
daa
lds
and
add
dec
loopne
aad
xor
push
(bad)
push
push
jbe
jns
jno
je
push
lds
das
pop
(bad)
pop
inc
fs
and
push
(bad)
aad
aas
push
div
jle
push
mov
test
in
cmovs
inc
addr16
push
mov
inc
cmc
jno
outs
push
movs
xchg
test
xchg
test
add
mov
inc
mov
adc
xor
call
cmps
xor
mov
push
(bad)
xlat
loope
mov
(bad)
lahf
scas
retf
inc
icebp
(bad)
lock
leave
add
xor
(bad)
mov
(bad)
xor
call
data16
fbstp
(bad)
adc
mov
pop
add
add
and
or
add
aas
adc
cs
aaa
pop
movs
pop
lock
adc
adc
xor
pop
mov
loopne
aad
xor
adc
les
nop
jno
or
das
(bad)
(bad)
jae
fs
or
push
inc
aad
aas
neg
adc
pop
mov
test
(bad)
in
(bad)
out
addr16
hlt
imul
push
push
scas
xchg
scas
add
push
mul
test
push
xchg
mov
adc
mov
mov
mov
mov
xchg
cmps
sahf
xor
pusha
fst
mov
xor
in
ret
inc
mov
(bad)
lock
fiadd
(bad)
repnz
stos
add
push
(bad)
mov
into
fs
xor
gs
hlt
out
je
and
adc
out
lds
pusha
rcr
in
add
xchg
pop
cmp
cmc
add
push
mov
aaa
pop
movs
cmp
sbb
xor
cmp
popa
daa
pop
mov
loopne
aad
xor
push
(bad)
jb
outs
les
xor
lds
(bad)
pusha
inc
addr16
add
push
jp
jge
push
div
inc
in
mov
test
pop
in
nop
push
addr16
hlt
dec
mov
add
jbe
inc
push
stos
xchg
test
push
mul
test
push
movs
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
fisub
and
mov
pushf
fild
inc
mov
korw
scas
jmp
add
push
repnz
hlt
fs
loope
lock
fimul
int3
je
and
adc
ficomp
sub
pusha
shl
adc
xchg
pop
add
adc
and
movs
push
lock
sub
pop
cmps
sbb
pop
mov
loopne
aad
xor
or
je
jne
js
jnp
dec
inc
xor
adc
pop
(bad)
push
inc
fs
xor
push
ins
aad
aas
jle
dec
ja
in
mov
test
in
nop
jg
pop
hlt
jl
jne
jnp
dec
cmc
pop
pop
outs
push
lods
xchg
pop
test
scas
xchg
xchg
xchg
mov
movs
mov
and
jo
inc
call
iret
cdq
test
lahf
push
xchg
mov
xor
in
test
and
mov
stc
push
into
add
xor
(bad)
mov
shl
add
jecxz
leave
data16
fdiv
mov
(bad)
lahf
aam
xor
sub
add
or
or
adc
imul
lock
cmp
and
adc
dec
aad
xor
adc
les
nop
push
movs
adc
xor
dec
das
inc
(bad)
arpl
aam
or
push
dec
aad
aas
push
imul
push
in
mov
test
in
divps
push
addr16
hlt
jbe
ja
cmp
cmc
push
pop
gs
xchg
xchg
scas
add
push
xchg
mov
mov
lods
xchg
jne
xchg
test
mov
xchg
movs
pushf
and
xchg
cmps
sahf
xor
pusha
mov
xor
rcl
int
mov
lds
inc
inc
movs
push
jmp
mov
push
hlt
mov
shl
in
add
loope
iret
data16
je
and
adc
fcomp
xor
add
je
daa
pop
ds
adc
adc
push
mov
aaa
and
and
aas
cmps
sbb
loopne
aad
xor
push
(bad)
ins
push
sub
movs
dec
inc
dec
lds
push
mov
addr16
and
pop
push
cs
aas
dec
test
in
mov
test
gs
in
divps
pop
addr16
hlt
dec
mov
adc
jne
outs
push
test
hlt
mov
mov
mov
inc
mov
adc
lea
mov
mov
test
mov
xchg
push
fwait
mov
xor
mov
mov
fst
loope
clc
(bad)
xchg
scas
mov
push
test
jecxz
ret
jbe
imul
shl
into
add
dec
fnsave
fst
out
lahf
fst
jg
adc
cmp
jne
daa
pop
xor
cmc
sbb
bound
sub
sub
inc
lock
movs
sbb
daa
sbb
or
inc
aad
xor
ds
jg
xor
bound
pop
lds
das
inc
mov
aam
cmp
push
jl
pop
aas
pop
test
in
mov
test
push
jb
adc
hlt
push
mov
pop
cmc
pop
pop
outs
push
xchg
xchg
test
gs
test
push
cdq
xchg
jne
xchg
mov
ss
jo
inc
lods
movs
fisub
test
xchg
push
loopne
xor
xlat
icebp
inc
lods
adc
and
leave
scas
cmps
inc
aad
fist
jmp
aad
jecxz
cmp
retf
in
gs
clc
mov
je
and
adc
mov
pop
jne
xor
and
or
sbb
cmp
adc
sbb
adc
sbb
ss
and
adc
pop
aad
xor
push
(bad)
pop
push
jbe
aas
nop
jno
push
inc
jno
adc
jp
jge
dec
aam
or
push
dec
aad
aas
push
not
push
outs
mov
test
inc
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
push
pop
pop
push
mov
push
cmc
gs
test
push
les
mov
adc
mov
jo
inc
mov
iret
and
nop
pusha
pushf
push
mov
fistp
inc
mov
lds
inc
inc
fst
mov
push
fdivr
into
fs
xor
add
jmp
je
and
adc
fcomp
aaa
test
jp
push
add
push
xchg
pop
ds
adc
popa
cmc
sbb
jg
mov
aaa
sbb
adc
sbb
xor
pop
movs
push
dec
sub
push
loopne
aad
xor
adc
imul
cmp
jnp
push
das
pop
(bad)
outs
inc
push
aam
xor
push
sub
test
in
mov
test
adc
jae
dec
out
addr16
hlt
push
mov
inc
cmc
popa
pop
outs
push
mov
mov
test
push
mov
inc
xchg
jne
xchg
mov
mov
jo
inc
out
movs
xchg
and
and
lods
xor
jmp
in
inc
mov
(bad)
int3
scas
mov
push
mov
mov
push
loop
movs
jbe
neg
add
ror
in
std
and
adc
rcr
or
add
cmp
adc
cmp
sbb
push
add
add
and
cmp
push
daa
xor
adc
pop
aad
xor
add
jl
outs
les
xor
dec
inc
push
lds
das
pop
mov
aam
and
push
ins
aad
aas
xor
dec
ja
in
mov
test
gs
in
sysret
out
addr16
hlt
push
mov
adc
push
pop
ja
xchg
xchg
test
gs
test
add
lods
xchg
jne
xchg
lods
adc
pushf
mov
and
jo
inc
xchg
movs
mov
es
cmps
lahf
xor
pusha
nop
push
xchg
mov
inc
repnz
and
mov
stc
push
leave
add
xor
clc
mov
jecxz
in
xor
add
fimul
fbstp
mov
movs
lahf
les
xor
sbb
das
add
arpl
or
pop
cmc
inc
adc
push
mov
aaa
or
lds
and
cmp
outs
daa
push
mov
loopne
aad
xor
pop
(bad)
inc
push
arpl
and
popa
lds
das
cmp
jne
dec
aam
or
push
pop
aad
aas
push
test
in
mov
test
pop
in
sysret
out
addr16
hlt
adc
jns
jns
pop
push
fist
cmc
mov
cdq
push
xchg
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
mov
es
movs
xor
pusha
mov
xor
call
and
xchg
scas
mov
push
enter
vpsraw
mov
jmp
add
loope
jmp
out
je
and
adc
out
lahf
lds
or
add
jnp
aas
pop
ds
and
push
cmc
sbb
jg
mov
aaa
adc
and
and
xor
pop
cmps
sbb
loopne
aad
xor
and
ins
push
popa
les
push
movs
dec
inc
jno
or
pop
(bad)
arpl
aam
add
push
cs
aas
push
not
dec
in
mov
test
jns
pop
cmovle
push
addr16
hlt
dec
mov
add
pop
pop
pushw
test
mov
gs
add
les
out
adc
xchg
and
jo
inc
mov
xchg
and
and
mov
push
rcl
retf
adc
and
aad
test
icebp
push
enter
rcl
push
clc
mov
aad
cmc
xor
add
les
les
rcl
lahf
mov
arpl
add
or
js
cmp
shl
push
adc
or
and
xor
outs
and
sbb
pop
loopne
aad
xor
adc
popa
push
imul
dec
inc
cmp
ins
das
pop
(bad)
je
je
cmp
push
pop
aad
aas
pop
test
in
mov
test
gs
in
andnps
cmp
mov
pop
cmc
pop
pop
ja
xchg
xchg
mov
cwde
push
mov
int
stc
add
mov
inc
mov
adc
lods
mov
and
jo
inc
test
iret
cdq
es
pusha
xchg
push
xchg
lds
xlat
out
inc
out
(bad)
and
mov
xlat
push
aam
jmp
mov
xlat
xor
add
test
les
(bad)
lahf
xchg
xchg
adc
xor
and
and
push
add
or
sub
pop
cmc
push
adc
push
mov
aaa
shld
or
cmp
push
cmps
xor
cmp
xor
push
(bad)
push
nop
dec
movs
adc
lds
das
pop
(bad)
jl
jae
dec
sbb
push
sub
gs
sub
dec
ja
in
mov
test
inc
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
inc
pop
js
test
scas
add
push
cmc
mov
mov
scas
xchg
fcom
fwait
ss
mov
and
jo
inc
cmps
movs
mov
out
sahf
xor
pusha
cmps
push
mov
fistp
inc
repnz
and
(bad)
scas
mov
push
rol
cmps
xor
lds
into
fs
xor
add
repnz
out
je
and
adc
fcomp
test
rcr
in
add
sub
adc
jge
add
jg
mov
aaa
add
and
sbb
pusha
daa
sub
pavgb
aad
xor
adc
les
cmp
pop
das
pop
(bad)
arpl
aam
add
push
pop
aad
aas
pop
test
in
mov
test
push
in
cvtdq2ps
jp
ja
inc
mov
outs
cmc
pop
pop
outs
push
int
xchg
add
push
mul
test
add
mov
inc
mov
fcom
jmp
scas
mov
and
jo
inc
xchg
movs
call
cmps
cdq
xor
pusha
xchg
push
mov
fbld
cli
adc
and
fild
fcom
in
jmp
mov
aam
in
xor
add
out
iret
data16
je
and
adc
(bad)
lahf
mov
ins
shl
in
add
sub
or
adc
or
and
adc
es
outs
and
sbb
pop
loopne
aad
xor
dec
(bad)
ins
push
imul
push
inc
jnp
jb
jns
jg
fs
xor
push
cs
aas
push
test
in
mov
test
pop
in
unpckhps
inc
addr16
hlt
push
mov
dec
cmc
jle
outs
push
(bad)
xchg
mov
loopne
hlt
gs
test
push
scas
xchg
test
lods
cmps
mov
and
jo
inc
in
movs
fbld
cmps
cmps
ret
pusha
xchg
push
cli
mov
xor
in
xlat
jmp
mov
lds
inc
rol
(bad)
push
aam
les
(bad)
mov
xchg
fs
xor
ror
je
and
adc
rcr
aaa
test
and
push
add
xchg
pop
cmp
adc
adc
and
and
ins
and
cmp
xor
cs
loopne
aad
xor
cmp
push
nop
ins
movs
pop
inc
dec
lds
das
pop
mov
dec
add
arpl
jo
push
mul
(bad)
in
mov
test
outs
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
jge
lods
xchg
scas
add
push
test
mov
mov
adc
inc
xchg
jne
xchg
mov
ss
jo
inc
lods
movs
pushf
and
xchg
cmps
call
mov
xor
jmp
and
lahf
scas
lds
(bad)
loopne
icebp
add
push
lds
into
shl
jmp
pop
mul
(bad)
je
and
adc
(bad)
lahf
lds
pusha
rcl
in
add
pop
xchg
pop
cmp
adc
sbb
pop
adc
push
mov
aaa
pop
movs
xor
and
movs
adc
cmps
sbb
pop
mov
loopne
aad
xor
push
(bad)
ins
push
imul
nop
ins
movs
inc
inc
and
or
pop
(bad)
push
inc
addr16
sub
inc
push
dec
aad
aas
push
div
ja
in
mov
test
pop
in
lsl
push
addr16
hlt
push
mov
inc
cmc
inc
pop
outs
push
mov
push
mov
mov
mov
mov
cmps
adc
inc
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
xchg
and
mov
mov
xor
out
xlat
cld
inc
sti
adc
and
xchg
scas
mov
push
out
add
push
iret
mov
mov
loope
mov
leave
gs
retf
out
je
and
adc
rcr
xor
add
and
or
adc
cmp
movs
sub
and
sbb
push
loopne
aad
xor
or
jo
imul
dec
inc
aas
lds
pop
(bad)
jae
pop
aam
or
push
ins
aad
aas
imul
ja
in
mov
test
in
unpckhps
addr16
hlt
push
mov
or
push
movs
xchg
test
gs
mov
mov
call
inc
call
(bad)
jmp
and
jo
inc
mov
iret
(bad)
es
cmps
xchg
xor
pusha
mov
xor
icebp
xlat
mov
cld
inc
xchg
scas
out
aad
clc
push
int3
add
xor
lds
jmp
in
gs
pop
je
and
jne
lahf
iret
xchg
add
aaa
test
shl
in
add
and
or
adc
aas
mov
aaa
shld
sbb
xor
cmps
xor
inc
mov
loopne
aad
xor
push
(bad)
dec
push
xor
and
jno
push
das
jl
jae
jg
push
add
push
sub
js
push
mul
push
in
mov
test
dec
in
sysret
out
addr16
adc
(bad)
cmc
pop
pop
imul
out
xchg
gs
test
push
xchg
xchg
adc
test
lods
jo
inc
xchg
movs
mov
es
pusha
xchg
push
test
mov
inc
mov
(bad)
sahf
scas
jmp
rol
out
int
(bad)
xor
std
mov
fisub
rol
fimul
(bad)
je
and
adc
fcomp
jno
pusha
shl
push
add
and
sbb
push
cmc
push
adc
push
mov
aaa
pop
movs
adc
push
lds
and
adc
aaa
aad
xor
adc
bound
les
jb
dec
inc
jb
adc
jl
arpl
aam
add
push
pop
aad
aas
push
imul
in
mov
test
jno
pop
(bad)
out
addr16
hlt
dec
mov
inc
cmc
bound
or
add
push
mov
add
add
call
mov
and
jo
inc
mov
pushf
and
and
iret
xor
loopne
hlt
inc
mov
lds
inc
sti
(bad)
xlat
push
repz
xor
fnstsw
shl
repnz
repnz
je
and
adc
out
(bad)
xchg
ds
sub
ins
shl
in
add
add
add
add
xchg
push
jg
mov
aaa
push
movs
sub
and
cmps
sbb
sbb
push
loopne
aad
xor
push
(bad)
push
push
xor
jb
dec
movs
adc
js
ins
das
pop
(bad)
push
inc
fs
add
push
ins
aad
aas
data16
dec
in
mov
test
inc
in
unpckhps
das
outs
hlt
push
mov
pop
cmc
pop
pop
ins
push
mov
test
gs
test
add
mov
inc
mov
adc
mov
jo
inc
lods
movs
fbld
and
push
cli
mov
xor
in
loope
rcl
and
icebp
scas
retf
inc
mov
call
(bad)
xor
ret
mov
leave
xlat
xor
add
leave
pop
je
and
adc
fcomp
or
jnp
and
xor
xchg
pop
es
and
pop
cmc
sbb
add
movs
adc
sbb
outs
and
add
xor
sbb
xor
cmp
adc
les
nop
jae
or
lds
das
push
(bad)
jae
jnp
cmp
and
js
push
test
in
mov
test
gs
in
cmovge
push
addr16
hlt
dec
mov
jno
addr16
push
add
push
cmc
pop
mov
scas
xchg
jne
xchg
test
xor
fbld
cwde
cmps
sahf
xor
pusha
lahf
push
div
scas
push
hlt
xlat
jmp
and
lds
fcom
mov
push
test
retf
xor
add
jmp
je
and
adc
mov
pop
adc
in
add
arpl
push
shr
sbb
jg
mov
aaa
aas
movs
adc
sbb
sbb
and
sbb
loopne
aad
xor
xor
fs
ins
les
je
dec
inc
js
or
pop
(bad)
pop
inc
ins
aam
add
push
inc
aad
aas
dec
test
ins
mov
test
push
in
nop
push
addr16
hlt
inc
mov
or
and
outs
push
test
push
cmc
gs
std
add
mov
mov
jne
xchg
xchg
adc
xchg
mov
and
jo
inc
mov
xchg
and
and
lahf
xor
loope
rol
retf
and
xchg
scas
mov
push
leave
add
xor
(bad)
mov
enter
out
add
in
call
and
adc
fstp
sub
and
jne
adc
or
adc
pop
cmc
and
ds
aaa
or
sub
and
and
cs
aad
xor
adc
bound
les
nop
push
movs
adc
cmp
inc
das
pop
(bad)
ja
inc
aam
and
push
xor
add
outs
test
in
mov
test
push
in
pcmpeqd
push
addr16
hlt
inc
mov
or
push
lods
xchg
mov
test
push
mov
inc
mov
xchg
mov
mov
mov
stos
movs
fwait
and
scas
cmps
xor
xchg
push
loopne
xchg
xor
retf
xlat
mov
out
adc
and
mov
stc
push
aam
lds
sar
fs
xor
add
aam
jmp
and
adc
fcomp
xor
and
das
in
add
and
or
aaa
cmc
aaa
adc
or
movs
adc
or
cmp
and
xor
add
and
dec
aad
xor
adc
les
nop
outs
movs
pop
inc
jno
adc
(bad)
(bad)
jae
jl
popa
xor
arpl
inc
aas
push
neg
inc
in
mov
test
in
mulps
push
addr16
hlt
dec
mov
push
cmc
pop
pop
ins
push
rcl
mov
test
add
les
mov
adc
xchg
mov
and
jo
inc
mov
sahf
mov
xchg
mov
xor
hlt
xlat
jmp
out
adc
and
leave
scas
stc
inc
cld
(bad)
scas
push
jecxz
mov
push
(bad)
mov
into
fs
nop
add
in
enter
cli
je
and
adc
fcomp
aaa
test
shr
in
add
daa
xchg
ds
xor
sbb
add
sbb
ds
pop
movs
adc
or
movs
push
dec
cmp
adc
pop
mov
loopne
aad
xor
push
(bad)
ins
push
pop
les
pusha
movs
dec
inc
push
(bad)
jno
push
aam
add
push
das
aad
aas
jns
pusha
ja
in
mov
test
add
popa
lsl
push
ins
hlt
imul
push
push
stos
xchg
movs
add
push
xchg
mov
mov
movs
xchg
jne
xchg
mov
mov
cmps
inc
mov
mov
es
cwde
xor
pusha
mov
xor
ret
xlat
retf
adc
and
jmp
std
push
iret
add
push
ret
jbe
not
add
fisttp
shl
adc
int
call
test
shr
in
add
cmp
shl
jg
mov
aaa
adc
sbb
and
outs
and
and
xor
sbb
aad
xor
sbb
jl
imul
dec
inc
cmp
(bad)
ja
push
aam
add
push
dec
aad
aas
pop
imul
dec
in
mov
test
in
cmovae
pop
addr16
hlt
inc
mov
js
pop
pop
add
mov
lahf
add
push
mov
test
push
xchg
xchg
jne
xchg
mov
mov
cmps
mov
jo
inc
xchg
movs
mov
xchg
rcl
retf
fistp
inc
mov
(bad)
ret
scas
mov
push
leave
add
xor
sti
mov
sahf
fs
rol
loop
cli
data16
fdiv
les
out
lahf
not
xor
and
adc
outs
xor
sbb
rcl
es
cmp
and
and
cmp
and
sbb
inc
aad
xor
aas
(bad)
inc
push
jbe
jge
ins
movs
adc
jg
push
das
push
mov
aam
add
push
arpl
inc
aas
jg
pusha
ja
in
mov
test
gs
in
nop
es
hlt
push
mov
or
outs
pop
push
push
test
lock
push
cmc
gs
test
push
cdq
xchg
adc
int
shl
out
fsub
and
push
test
fbstp
inc
lods
adc
and
repnz
cmps
inc
inc
icebp
push
jmp
(bad)
xor
sar
xlat
xor
add
lods
vpcmov
je
and
adc
loopne
lds
or
add
cmp
imul
cmc
and
cmp
pop
lock
xor
pop
movs
cs
and
or
dec
aad
xor
dec
(bad)
ins
push
dec
les
jo
jp
jb
pop
das
pop
(bad)
jae
addr16
and
pop
push
jbe
inc
aas
push
not
jne
ins
mov
test
gs
in
sysret
out
addr16
hlt
adc
inc
xchg
jle
or
jb
outs
push
lods
xchg
repz
push
mov
mov
mov
mov
inc
mov
adc
jmp
jo
inc
mov
xchg
mov
(bad)
xor
pusha
mov
xor
xchg
xlat
fild
retf
and
xchg
scas
hlt
inc
repz
icebp
push
rol
xor
out
(bad)
jbe
not
fs
xor
add
dec
out
retf
and
adc
sti
lahf
into
xchg
and
je
ins
shl
in
add
and
xchg
or
sub
and
push
mov
aaa
or
and
cmp
or
pop
mov
loopne
aad
xor
pop
(bad)
jg
jbe
inc
nop
movs
dec
inc
push
lds
imul
xor
dec
aad
aas
and
in
mov
test
in
nop
addr16
push
mov
or
push
movs
xchg
test
gs
test
push
mov
inc
loope
test
jmp
and
jo
inc
out
mov
xchg
mov
xor
out
rol
and
mov
stc
push
in
aad
(bad)
push
hlt
mov
leave
fs
xor
add
hlt
(bad)
cwde
data16
out
je
and
adc
(bad)
lahf
not
shl
in
add
and
sub
pop
cmc
pop
adc
or
or
and
and
adc
xor
cmp
adc
push
push
dec
les
nop
ja
adc
jno
dec
das
data16
jnp
outs
aam
sbb
push
arpl
dec
aas
ins
neg
dec
in
mov
test
push
in
nop
jnp
inc
hlt
push
mov
adc
es
push
add
push
xchg
gs
inc
add
jne
xchg
lock
xchg
mov
and
jo
inc
mov
test
xchg
cmps
pushf
xor
pusha
cmps
push
div
mov
inc
mov
lds
inc
inc
loop
xlat
add
xor
out
in
mov
into
div
lds
aad
enter
(bad)
je
and
jne
lahf
fst
adc
sbb
add
outs
and
or
sub
sbb
jg
mov
aaa
or
and
or
or
dec
aad
xor
inc
(bad)
bound
les
dec
movs
dec
inc
push
pop
das
dec
(bad)
arpl
aam
add
push
jg
add
ins
test
in
mov
test
push
in
sysret
out
addr16
hlt
inc
mov
inc
cmc
jp
pop
push
xchg
xchg
scas
add
push
cmc
gs
out
add
xchg
cmps
xchg
mov
mov
mov
movs
cwde
and
loope
xchg
pusha
pushf
push
cmps
mov
xor
loopne
inc
shl
shr
push
int
hlt
xor
fidivr
(bad)
fs
fild
jmp
cmc
data16
les
std
adc
fcomp
sub
shl
in
add
sbb
daa
pop
daa
xchg
xor
xor
xchg
add
aaa
adc
sub
and
pop
cmps
jge
sbb
pop
loopne
aad
xor
push
(bad)
jl
jg
cmp
inc
lds
das
pop
(bad)
jge
fs
add
ins
aad
aas
outs
test
in
mov
test
in
unpckhps
jno
push
hlt
push
mov
pop
cmc
inc
pop
push
push
rcl
mov
add
pushf
xchg
jne
xchg
popf
adc
xchg
mov
and
jo
inc
lods
movs
xchg
and
xchg
cmps
cwde
xor
pusha
xchg
push
xor
push
into
xlat
out
inc
mov
lds
inc
rol
stc
push
repnz
xor
(bad)
mov
leave
fs
xchg
add
in
retf
out
je
and
adc
fcomp
add
add
or
sbb
adc
cs
aaa
sub
sub
and
sbb
dec
loopne
aad
xor
adc
les
dec
movs
ins
inc
inc
lds
das
push
(bad)
jae
es
or
push
(bad)
aad
aas
inc
neg
dec
in
mov
test
push
in
andnps
pop
addr16
hlt
inc
mov
or
pop
pop
inc
push
test
mov
movs
push
jmp
add
scas
xchg
jne
xchg
mov
mov
mov
and
jo
inc
out
pushf
and
xchg
cmps
(bad)
xor
pusha
xchg
push
mov
fistp
inc
int3
adc
and
xchg
scas
mov
push
iret
add
push
(bad)
mov
xchg
xlat
xor
add
ror
shl
adc
loopne
rcl
and
adc
push
add
and
sub
and
sbb
jg
mov
aaa
or
lds
and
and
push
loopne
aad
xor
push
(bad)
ins
push
inc
les
jae
inc
inc
pop
lds
das
inc
(bad)
arpl
aam
and
inc
push
das
aad
aas
push
idiv
ja
in
mov
test
gs
pop
maxps
jg
push
hlt
dec
mov
or
jb
outs
push
xchg
xchg
mov
sti
push
cli
gs
test
add
xchg
xchg
jne
xchg
mov
xor
inc
stos
movs
xchg
out
cmps
mov
push
mov
(bad)
push
loopne
mov
fst
jmp
cld
(bad)
shr
cld
push
icebp
add
xor
sar
in
fs
retf
add
out
sti
data16
les
jecxz
mov
lahf
(bad)
xchg
sub
das
test
add
and
daa
pop
es
or
pop
cmc
aas
adc
push
push
aaa
xor
and
and
adc
cmp
daa
xor
cs
jl
aaa
les
nop
jae
or
lds
das
outs
(bad)
pop
inc
fs
and
sbb
aad
aas
das
test
in
mov
test
jb
inc
punpckldq
inc
addr16
hlt
inc
mov
je
pop
pop
push
add
push
mul
test
push
nop
xchg
jne
xchg
cwde
adc
xchg
mov
and
jo
inc
lods
movs
test
es
cwde
xor
pusha
mov
mov
xor
in
enter
into
and
mov
stc
push
mov
stos
push
ret
jbe
imul
fs
xor
add
fimul
fbstp
loop
out
into
jne
lahf
les
adc
sbb
cmp
sbb
sub
pop
cmc
sbb
add
push
aaa
and
lds
adc
jge
aas
mov
loopne
aad
xor
adc
les
jno
push
inc
jno
or
js
jnp
jg
add
push
arpl
inc
aas
dec
not
push
in
mov
test
in
cmovae
pop
addr16
dec
mov
push
push
mov
lods
add
push
cmps
mov
mov
scas
xchg
adc
mov
movs
xchg
and
and
test
cwde
fistp
inc
fcom
repnz
into
scas
mov
push
jmp
mov
push
repnz
xlat
fs
xor
add
loop
leave
data16
(bad)
je
and
adc
les
sub
in
add
and
push
rcl
jg
mov
aaa
pop
movs
and
sbb
xor
sbb
ss
and
or
inc
aad
xor
push
(bad)
ins
push
jbe
pop
nop
dec
movs
dec
inc
push
or
pop
(bad)
dec
inc
and
dec
adc
push
das
aad
aas
push
mul
in
mov
test
sbb
push
jl
pop
addr16
hlt
dec
mov
ja
pop
pop
inc
push
fist
mov
add
add
jne
xchg
lods
adc
mov
lahf
and
jo
inc
scas
movs
pushf
and
mov
pusha
xchg
push
mov
(bad)
push
mov
fadd
enter
repz
xchg
scas
mov
push
leave
add
xor
ret
jbe
not
fs
xor
add
test
je
and
adc
ficomp
sub
ins
shl
or
xchg
pop
daa
xchg
and
or
pop
adc
aaa
mov
aaa
adc
and
and
cmp
xor
push
mov
loopne
aad
xor
sub
les
jae
dec
inc
lds
push
mov
and
dec
xor
push
ins
aad
aas
outs
test
in
mov
test
in
punpcklbw
jno
push
hlt
inc
mov
dec
cmc
popw
push
add
push
and
mov
int3
out
stos
push
mov
inc
mov
adc
movs
mov
and
jo
inc
out
pushf
and
mov
pusha
cdq
push
cmps
mov
xor
in
mov
and
mov
in
mov
ret
aad
push
in
in
jbe
test
add
loop
out
data16
shl
adc
fcomp
sub
add
xor
xchg
aaa
rcr
inc
jg
mov
aaa
push
movs
inc
lock
push
and
sbb
cs
aad
xor
sbb
les
ins
movs
dec
inc
dec
lds
pop
(bad)
jns
jg
dec
cmp
push
arpl
add
ja
in
mov
test
jns
bndmov
arpl
hlt
push
mov
inc
cmc
es
or
test
mov
push
cmc
gs
test
push
mov
inc
mov
adc
mov
jo
inc
lock
pushf
and
sahf
cmps
les
pusha
xchg
push
mov
fbstp
inc
mov
lds
inc
inc
out
jmp
(bad)
xor
sar
fisub
enter
clc
gs
jmp
out
je
and
adc
rcr
test
rcl
in
add
and
or
cmp
xchg
cmp
mov
aaa
sub
lds
and
and
add
push
aad
xor
sbb
outs
push
popa
les
nop
push
movs
dec
inc
jno
ins
das
push
aam
adc
push
arpl
inc
aas
dec
mul
in
mov
test
pop
in
lsl
push
addr16
dec
mov
push
bound
outs
push
test
repz
push
lods
mov
mov
adc
inc
mov
adc
mov
mov
and
out
(bad)
xor
pusha
xchg
push
test
mov
into
xlat
hlt
inc
mov
lds
inc
out
mov
xor
les
(bad)
repz
gs
pop
je
and
adc
cld
lahf
xchg
xchg
or
pop
test
cmp
sub
or
adc
sbb
aaa
adc
sbb
adc
add
movs
jo
and
adc
sbb
or
pop
cs
jl
push
movs
pop
inc
xor
inc
das
cmp
push
inc
jp
inc
add
push
popa
aad
aas
push
div
mov
test
inc
in
subps
inc
addr16
hlt
dec
mov
push
cmc
popw
outs
push
int
xchg
add
push
jmp
add
mov
inc
mov
adc
movs
mov
and
jo
inc
sahf
movs
mov
movs
iret
xchg
mov
cdq
xor
pusha
xchg
push
cli
mov
xor
in
fadd
into
and
mov
fist
out
(bad)
push
ret
jbe
neg
fs
xor
add
loopne
retf
out
je
and
adc
fcomp
xor
ins
shl
in
add
add
sbb
adc
ss
aaa
push
movs
sub
and
and
or
cmp
mov
pop
adc
les
nop
jb
jo
dec
lds
das
push
(bad)
sbb
cmp
push
arpl
pop
aas
push
neg
push
addr16
test
inc
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
pop
push
adc
mov
mov
scas
xchg
jne
xchg
adc
mov
mov
xchg
movs
pushf
and
mov
pusha
xchg
push
mov
mov
(bad)
xlat
test
mov
inc
inc
mov
xor
(bad)
mov
iret
fs
add
mov
jmp
and
adc
neg
ins
test
rcr
in
add
daa
xchg
pop
ds
or
popa
cmc
sbb
jg
mov
aaa
daa
movs
adc
or
sbb
and
or
pop
aad
xor
adc
les
inc
jno
dec
das
pop
(bad)
push
inc
pop
aam
adc
xor
push
aas
push
test
in
mov
test
pop
in
cmove
push
addr16
imul
pop
push
mov
mov
cwde
push
and
xchg
mov
popf
adc
inc
mov
xchg
mov
lea
mov
mov
xchg
and
scas
cmps
xchg
pusha
fwait
push
mov
fild
inc
int
retf
and
std
scas
inc
(bad)
loope
leave
add
xor
sar
(bad)
shl
leave
add
ror
fbstp
mov
fstp
cmp
jg
adc
sub
push
xchg
pop
and
cmc
sbb
cmp
movs
sub
and
push
cmps
adc
es
loopne
aad
xor
adc
jg
push
movs
dec
inc
imul
ja
data16
sbb
push
pop
aad
aas
sub
dec
ja
in
mov
test
adc
arpl
pop
out
addr16
push
mov
or
push
lods
xchg
test
gs
test
add
mov
mov
jne
xchg
jmp
movs
mov
and
jo
inc
lea
cdq
es
cmps
(bad)
xor
pusha
nop
push
mov
xchg
xor
into
xlat
out
inc
repz
and
repz
fadd
(bad)
ficom
mov
push
(bad)
mov
leave
fs
xor
add
ror
je
and
adc
fistp
xor
adc
add
add
or
adc
cmp
dec
lock
or
dec
pop
cmps
popa
daa
aaa
mov
loopne
aad
xor
adc
push
push
jbe
sub
inc
jno
jno
push
(bad)
jne
inc
aam
or
push
arpl
inc
aas
push
test
in
mov
test
adc
push
packsswb
push
addr16
mov
jo
pop
pop
pop
push
mov
scas
add
push
hlt
gs
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
out
pushf
and
xchg
cmps
iret
xor
pusha
xchg
push
stc
mov
xor
hlt
xlat
mov
and
xchg
scas
mov
push
out
stos
xor
fdivr
into
shl
retf
in
gs
into
mul
(bad)
je
and
adc
clc
lahf
lds
pusha
shl
in
add
sub
or
cmp
add
jg
mov
aaa
add
and
cmp
sbb
pop
mov
loopne
aad
xor
adc
ins
push
push
inc
nop
jo
dec
inc
ins
lds
pop
(bad)
pop
inc
push
aam
xor
push
das
aad
aas
ins
test
in
mov
test
inc
in
cvtps2pd
push
addr16
hlt
sbb
jge
imul
push
pushf
xchg
mov
mov
mov
xchg
xchg
jne
xchg
stos
adc
xchg
mov
and
jo
inc
out
mov
es
cmps
xchg
pusha
cmps
push
mov
fbstp
inc
mov
lds
inc
stc
(bad)
int3
push
test
mov
fdivr
shl
xchg
add
in
(bad)
data16
ret
je
and
adc
repz
mov
ins
rcl
in
add
and
adc
pusha
cmc
add
push
mov
aaa
sub
and
and
sub
pop
aad
xor
or
push
push
les
jo
jbe
popa
lds
pop
(bad)
jl
and
dec
cmp
push
(bad)
aad
aas
jbe
push
ja
in
mov
test
in
cmovs
push
addr16
hlt
or
add
and
outs
push
scas
xchg
mov
push
hlt
gs
out
mov
movs
xchg
test
test
repz
and
jo
inc
mov
shl
mov
pusha
xchg
push
test
mov
inc
lods
adc
and
sahf
scas
fadd
(bad)
out
hlt
add
push
cld
mov
int3
xor
add
ror
shl
rcl
lahf
(bad)
xchg
xor
cmp
and
sbb
or
jg
push
outs
jg
xor
and
and
jge
cmp
sbb
push
aaa
shld
push
lds
movs
and
cmps
aaa
daa
cmp
xor
or
push
nop
pop
movs
adc
inc
lds
das
pop
(bad)
dec
inc
addr16
add
push
arpl
dec
aas
sub
addr16
in
mov
test
jno
andpd
es
hlt
sbb
jne
cmc
addr16
push
add
push
mul
test
push
mov
inc
movs
jne
xchg
hlt
adc
mov
mov
and
and
mov
not
lds
enter
rol
scas
mov
push
jmp
(bad)
xor
(bad)
mov
leave
fs
xor
add
out
(bad)
out
je
and
adc
les
sub
add
or
and
and
sbb
jg
mov
aaa
or
and
aas
cmps
sbb
xor
xor
or
push
popa
les
nop
dec
movs
dec
inc
jb
fs
dec
(bad)
arpl
aam
and
sbb
aad
aas
push
test
in
mov
test
adc
dec
cmovp
push
addr16
sbb
jge
jnp
inc
cmc
jno
jle
mov
push
fwait
gs
std
add
mov
inc
mov
adc
xor
inc
jmp
xchg
and
mov
popf
xor
pusha
stos
push
cli
mov
xor
rcl
inc
mov
(bad)
xchg
scas
mov
push
mov
xor
loopne
out
fdivp
(bad)
fs
jmp
gs
(bad)
mul
out
je
and
adc
rcr
xor
ins
ror
in
add
and
or
adc
sub
xor
pop
lock
movs
or
daa
sbb
adc
push
aad
xor
adc
les
nop
pusha
movs
dec
inc
xor
inc
das
pop
(bad)
addr16
pop
aam
add
push
popa
aad
aas
push
test
in
mov
test
in
unpckhps
je
pop
hlt
push
mov
pop
cmc
inc
pop
outs
push
movs
xchg
test
gs
test
push
mov
inc
xchg
jne
xchg
mov
test
xchg
inc
stos
movs
cmps
and
xchg
cmps
xchg
pusha
adc
fist
inc
ret
and
mov
stc
push
leave
add
push
loop
(bad)
jbe
idiv
fs
xor
add
loop
and
les
les
loop
les
pop
shr
in
add
or
add
pop
cmc
push
adc
ds
aaa
and
lds
adc
xor
adc
xor
sbb
inc
push
dec
les
nop
jae
dec
inc
lds
js
jnp
jg
xor
inc
mov
push
dec
aad
aas
dec
div
jb
push
mov
test
sbb
out
addr16
dec
mov
inc
cmc
pop
pop
or
add
push
hlt
gs
test
push
scas
xchg
xchg
lea
mov
xchg
movs
xchg
and
sahf
cmps
scas
xor
pusha
xchg
push
loopne
mov
push
hlt
xlat
mov
mov
inc
cli
(bad)
rcl
mov
push
(bad)
mov
jmp
enter
jmp
out
je
and
adc
aam
jmp
test
add
add
add
adc
adc
xor
adc
and
or
push
loopne
aad
xor
adc
les
aaa
movs
pop
inc
jl
push
jnp
dec
inc
jae
push
add
push
and
inc
aas
outs
imul
in
mov
test
in
cvtps2pd
and
hlt
pop
mov
inc
cmc
dec
pop
jp
adc
mov
mov
adc
inc
mov
adc
in
mov
and
jo
inc
xchg
movs
call
cmps
mov
pusha
mov
xor
(bad)
xlat
hlt
inc
mov
(bad)
(bad)
scas
aam
sti
(bad)
in
push
leave
add
push
ret
jbe
not
shl
repz
test
sahf
data16
in
ret
and
adc
(bad)
lahf
in
xchg
ss
sub
ins
rcr
in
add
cmp
push
rcl
push
jg
mov
aaa
push
movs
pop
lock
outs
and
or
das
loopne
aad
xor
adc
push
push
popa
les
nop
outs
movs
dec
inc
cmp
push
das
push
(bad)
ja
addr16
adc
push
ins
aad
aas
push
not
jb
push
mov
test
in
cmovbe
inc
addr16
hlt
inc
mov
jae
popw
inc
push
test
mov
call
mov
scas
push
cdq
xchg
test
xchg
movs
mov
and
jo
inc
xchg
movs
mov
es
cmps
cdq
xor
pusha
mov
xor
int3
xlat
iret
inc
out
leave
and
retf
scas
mov
push
leave
add
xor
sar
shl
lds
fisttp
fnsave
rcl
lahf
rcl
xor
sbb
push
add
jle
cmp
xor
cmc
inc
adc
cs
aaa
pop
movs
pop
lock
imul
cmps
pop
daa
cmp
aad
xor
aas
(bad)
imul
and
jno
adc
inc
(bad)
jae
jg
push
adc
push
jo
push
aas
ins
test
in
mov
test
sbb
push
sysret
out
addr16
xchg
imul
inc
pop
js
test
hlt
add
push
mov
add
mov
inc
mov
adc
mov
jo
inc
test
pushf
and
mov
pusha
retf
push
mov
fist
(bad)
adc
and
xchg
scas
fild
mov
xor
lds
into
fs
xor
add
fisttp
fdiv
(bad)
adc
fcomp
aaa
test
or
sbb
and
aaa
rcr
sbb
push
mov
aaa
adc
and
and
or
or
sbb
sub
ins
push
les
inc
movs
dec
inc
inc
lds
inc
push
aam
add
push
inc
aad
aas
jge
popa
ja
in
mov
test
push
in
(bad)
out
addr16
hlt
pop
mov
dec
cmc
inc
pop
outs
push
rcl
cmc
gs
mov
push
fld
movs
jne
xchg
mov
ss
(bad)
and
jo
inc
jmp
fsub
and
into
xor
loopne
out
inc
repz
and
xchg
scas
test
icebp
push
enter
fst
loope
(bad)
mov
cld
shl
enter
pushf
gs
les
out
je
and
adc
repz
(bad)
xchg
and
push
test
in
add
arpl
imul
cmc
sbb
sub
inc
lock
outs
and
and
pop
loopne
aad
xor
dec
(bad)
adc
les
movs
jp
cmp
adc
cmp
ja
arpl
jge
inc
mov
push
jb
jge
push
imul
ja
in
mov
test
popa
in
cmovo
inc
addr16
hlt
inc
mov
jge
and
outs
push
pushf
xchg
mov
movs
push
mul
test
ret
adc
inc
mov
adc
movs
mov
and
jo
inc
scas
movs
movs
and
mov
cdq
xor
pusha
mov
mov
fistp
inc
not
into
and
mov
cmps
push
ret
add
xor
out
mov
(bad)
fs
in
call
(bad)
loopne
fucom
test
les
loop
les
jnp
and
or
and
or
adc
xor
add
shld
das
movs
jne
and
or
cmp
mov
pop
adc
ins
push
dec
les
nop
push
movs
or
das
push
(bad)
jo
cmp
mov
push
push
inc
aas
push
div
in
mov
test
push
in
andps
gs
hlt
adc
dec
cmc
jge
push
push
test
test
in
push
in
gs
mov
push
xchg
xchg
jne
xchg
mov
movs
mov
and
jo
inc
out
shl
nop
cmps
movs
xor
pusha
mov
xor
lock
test
mov
inc
ffreep
mov
xor
(bad)
mov
enter
enter
xchg
gs
mov
and
adc
fcomp
aaa
test
cs
add
and
jbe
and
sbb
jg
mov
aaa
or
add
sbb
sub
daa
cmps
fs
pop
mov
loopne
aad
xor
sub
ins
push
sub
movs
inc
inc
dec
lds
inc
(bad)
arpl
aam
add
push
das
aad
aas
jne
inc
ja
in
mov
test
gs
in
movd
push
addr16
hlt
jne
bound
jle
pushw
adc
gs
stos
add
mov
cmps
adc
inc
mov
adc
mov
xchg
and
jo
inc
mov
mov
es
fnstenv
pusha
mov
xor
in
xlat
repnz
mov
(bad)
in
scas
int
ret
(bad)
mov
xor
pushf
mov
retf
lea
retf
add
out
enter
les
adc
lahf
clc
xchg
and
xor
add
xchg
pop
es
or
adc
xchg
sbb
mov
aaa
adc
and
inc
cmps
sbb
and
xor
adc
imul
movs
dec
inc
inc
lds
das
pop
(bad)
push
inc
pop
aam
add
push
sub
inc
aas
jle
jo
dec
in
mov
test
in
divps
inc
addr16
hlt
arpl
js
and
outs
push
adc
mov
lahf
push
mov
mov
jne
xchg
lahf
adc
icebp
mov
and
jo
inc
scas
movs
test
mov
xchg
mov
xor
rcl
inc
les
int
fadd
cld
inc
sahf
scas
loopne
out
(bad)
stc
push
int3
add
xor
jecxz
call
(bad)
lds
fisttp
fbstp
popf
adc
fcomp
sub
add
xchg
pop
cmp
adc
ds
aaa
shld
push
lds
and
push
cmps
xor
inc
mov
loopne
aad
xor
or
push
push
dec
les
dec
movs
adc
lds
push
(bad)
jne
jg
dec
xor
push
arpl
pop
aas
inc
neg
pop
in
mov
test
dec
in
nop
popa
addr16
hlt
dec
mov
or
pop
pop
js
test
push
mul
test
push
scas
xchg
fwait
xchg
mov
ss
xchg
and
jo
inc
test
stos
es
cmps
sahf
xor
pusha
stos
push
mov
fild
inc
in
jmp
rol
inc
scas
cmps
inc
inc
(bad)
push
fiadd
mov
push
lds
into
shl
xchg
add
call
out
je
and
adc
out
out
xchg
push
pop
push
test
shl
cmp
jl
and
pop
xchg
jl
sbb
push
adc
push
mov
aaa
and
lds
pop
movs
pop
dec
sbb
mov
loopne
aad
xor
push
(bad)
push
push
inc
les
inc
jb
jo
pusha
(bad)
push
inc
pop
aam
sub
pop
push
and
jp
jge
inc
ja
in
mov
test
gs
jb
pop
out
addr16
hlt
inc
mov
adc
pop
pop
push
push
adc
mov
pop
xchg
movs
jne
xchg
in
adc
lea
mov
test
mov
mov
scas
xor
pusha
movs
push
mov
into
xor
loopne
cmc
inc
aad
xlat
and
imul
(bad)
push
lds
mov
push
sar
(bad)
shl
fiadd
int3
(bad)
int
shl
xor
fidiv
lahf
les
sbb
add
daa
xchg
sbb
adc
aaa
cmc
pop
adc
pop
mov
aaa
adc
and
sbb
sub
pop
aad
xor
and
fs
imul
dec
inc
cmp
dec
das
xor
ja
(bad)
aam
and
sbb
aad
aas
inc
test
in
mov
test
gs
bound
adc
hlt
dec
mov
inc
cmc
pop
pop
dec
push
xchg
xchg
test
gs
test
push
cwde
xchg
jne
xchg
mov
cmc
mov
and
jo
inc
mov
fisub
and
push
xor
push
in
repnz
not
retf
and
lahf
scas
mov
push
mov
mov
push
(bad)
mov
ret
fs
xor
add
mov
call
je
and
adc
cli
lahf
retf
xchg
add
jno
sar
in
add
xor
xchg
xor
pop
cmc
pop
adc
or
movs
sub
and
push
cmps
pop
daa
xor
xor
xor
push
nop
pop
movs
adc
dec
lds
das
push
(bad)
jns
inc
aam
xor
push
arpl
dec
aas
push
imul
push
in
mov
test
dec
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
dec
push
xchg
xchg
mov
mov
add
xchg
adc
inc
mov
adc
mov
xchg
and
jo
inc
mov
iret
stos
es
cmps
sahf
xor
pusha
lds
mov
xor
repnz
test
icebp
inc
in
scas
mov
push
cmc
add
xor
in
mov
cld
xlat
xor
add
fimul
fidiv
xlat
adc
aam
lds
pusha
rcr
in
add
daa
xchg
pop
pop
xchg
or
adc
xchg
push
jg
mov
aaa
push
movs
adc
push
lds
dec
and
adc
sub
jp
add
ins
push
popa
les
dec
movs
or
lds
pusha
(bad)
arpl
aam
and
pop
push
xor
pop
aas
push
imul
ja
in
mov
test
push
in
cvtps2pd
push
addr16
hlt
dec
mov
or
pop
pop
imul
in
push
lods
mov
add
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
fisub
and
mov
pushf
fist
inc
lods
adc
and
xchg
scas
sti
inc
ret
(bad)
in
leave
add
push
lds
les
jmp
(bad)
out
je
and
adc
aam
jmp
and
test
ror
in
add
or
and
daa
cmc
aas
adc
cmp
movs
sbb
and
cmp
xor
cmp
xor
es
jl
(bad)
les
dec
movs
or
lds
das
pop
(bad)
sbb
aam
adc
ins
aad
aas
outs
test
in
mov
test
in
divps
and
hlt
jl
inc
xchg
arpl
cmc
cmp
outs
push
test
test
gs
test
add
mov
inc
call
(bad)
jmp
and
jo
inc
xchg
movs
cdq
and
and
push
xor
push
in
cmc
inc
lods
adc
and
mov
ret
push
out
mov
push
(bad)
mov
(bad)
shl
lds
fisttp
shl
(bad)
adc
fstp
xor
cmp
daa
in
add
sbb
daa
rcl
sbb
jg
mov
aaa
and
lds
and
and
xor
pop
aad
xor
sub
les
jb
adc
jno
adc
inc
(bad)
jae
jae
xor
dec
mov
push
pop
aad
aas
ins
not
push
pop
mov
test
in
(bad)
out
addr16
hlt
push
mov
push
cmc
and
push
push
test
mul
test
push
fld
loope
test
mov
and
jo
inc
mov
and
cmps
sahf
xor
pusha
movs
push
test
into
xor
xchg
xlat
mov
lods
adc
and
iret
scas
cmc
inc
inc
out
push
aad
(bad)
xor
(bad)
mov
into
shl
les
loop
mul
out
je
and
adc
mov
pop
pop
test
sbb
or
arpl
or
sbb
and
xor
movs
dec
lock
xor
cmp
popa
daa
adc
or
inc
aad
xor
push
(bad)
inc
push
ins
les
jo
push
inc
jb
push
das
push
(bad)
push
inc
arpl
aaa
adc
push
inc
aad
aas
pop
test
in
mov
test
gs
in
cvtps2pd
addr16
hlt
pop
mov
dec
cmc
arpl
outs
push
rcl
hlt
mov
lea
movs
xchg
stos
xchg
lea
xor
inc
sahf
movs
xchg
and
and
mov
push
loopne
loopne
int
leave
and
enter
stc
(bad)
out
push
out
mov
push
ret
jbe
imul
shl
in
add
dec
out
cmc
and
adc
out
(bad)
xchg
or
add
add
sbb
sub
adc
xchg
add
aaa
push
movs
es
lds
movs
sbb
daa
xor
xor
adc
arpl
les
nop
jbe
outs
inc
(bad)
lds
inc
pop
aam
add
push
pop
aad
aas
jle
dec
ja
in
mov
test
add
jle
adc
hlt
push
mov
popa
cmc
inc
pop
dec
push
xchg
xchg
mov
gs
test
push
mov
inc
mov
adc
scas
mov
and
jo
inc
lods
movs
fbld
popf
cmps
mov
push
cli
mov
xor
loop
rol
mov
(bad)
korw
scas
aad
ffreep
fist
mov
push
sar
fbld
lds
fisttp
xor
adc
fcomp
xor
xor
adc
push
add
and
adc
es
or
adc
sub
es
aaa
dec
movs
pop
lock
cmp
and
adc
cmp
daa
xor
adc
les
ins
movs
jle
cmp
dec
das
push
jae
and
imul
push
idiv
inc
in
mov
test
push
in
minps
push
addr16
hlt
addr16
cmp
cmc
pop
pop
or
test
mov
sahf
push
mov
mov
xchg
push
scas
xchg
adc
inc
mov
adc
mov
mov
and
movs
cmps
sahf
xor
pusha
adc
xchg
xor
loop
int
mov
lds
inc
inc
in
retf
add
xor
cmp
xlat
xor
add
out
(bad)
out
je
and
adc
fcomp
aaa
test
ror
in
add
and
or
xor
pop
adc
add
movs
push
lock
sub
dec
and
adc
dec
aad
xor
sbb
ins
push
jno
sub
imul
das
push
jae
arpl
jbe
push
mov
push
push
imul
push
in
mov
test
dec
in
sysret
out
addr16
push
mov
inc
cmc
dec
pop
dec
push
adc
gs
mov
mov
cmps
adc
inc
mov
adc
movs
mov
and
jo
inc
mov
xchg
and
and
xchg
xor
(bad)
xlat
in
inc
cld
adc
and
in
scas
int
mov
rcl
mov
push
ret
jbe
not
fs
nop
add
jmp
je
and
adc
fstp
sub
add
xchg
pop
es
push
rol
pop
adc
cmp
movs
sub
and
cmp
arpl
xor
xor
push
(bad)
jg
jne
sub
inc
cmp
jo
jne
ja
jb
add
push
push
aad
aas
push
test
in
mov
test
add
je
dec
out
outs
hlt
je
bound
gs
js
mov
test
cwde
gs
test
add
mov
inc
movs
jne
xchg
mov
movs
mov
and
jo
inc
mov
fisub
xchg
cmps
test
pusha
popf
push
mov
xor
xlat
lds
aam
clc
korw
scas
mov
push
rol
xor
loopne
stos
jbe
not
fs
xor
add
fisttp
cmc
je
and
adc
rcr
test
imul
adc
cmp
xchg
or
adc
imul
lock
lds
and
cmp
push
loopne
aad
xor
adc
les
nop
ins
movs
pop
inc
jno
push
das
js
jae
js
ja
dec
mov
push
dec
aad
aas
push
idiv
in
mov
test
jno
pop
nop
jnp
inc
hlt
popa
mov
jbe
pop
pop
push
add
push
cli
mov
mov
fwait
xchg
fst
jmp
jo
inc
out
mov
and
push
xor
fild
int3
and
fisubr
std
push
std
add
push
cmc
mov
xchg
xlat
xor
add
ret
mul
int3
je
and
adc
fcomp
aaa
test
shr
test
outs
and
outs
shl
jg
mov
aaa
shld
pop
movs
es
pop
cmps
push
daa
pop
mov
loopne
aad
xor
adc
adc
les
jae
push
inc
pop
lds
das
inc
(bad)
pop
inc
jle
push
add
push
das
aad
aas
sub
inc
ja
in
mov
test
push
in
cmovne
push
addr16
hlt
push
pop
xchg
addr16
cmc
inc
pop
pop
push
int
stos
add
push
cmc
gs
test
add
cmps
xchg
jne
xchg
mov
mov
mov
hlt
movs
xchg
and
sahf
cmps
mov
push
cli
mov
xor
loop
hlt
inc
mov
lds
inc
inc
std
push
rol
xor
pushf
mov
(bad)
fs
xor
add
fimul
les
call
int
(bad)
xchg
and
adc
add
and
daa
rcl
sbb
cmp
movs
add
and
inc
cmps
sbb
add
xor
adc
jg
xor
jb
jae
push
inc
push
lds
(bad)
jne
inc
aam
add
push
ins
aad
aas
push
imul
dec
in
mov
test
in
unpckhps
jge
fs
push
mov
pmaddwd
outs
push
mov
test
gs
mov
shr
mov
test
mov
adc
icebp
mov
and
jo
inc
scas
movs
stos
and
xchg
retf
push
cli
mov
xor
in
inc
into
and
xchg
scas
mov
push
enter
cld
aad
push
(bad)
mov
leave
shl
icebp
add
out
pop
je
and
adc
(bad)
lahf
les
jnp
adc
cs
cmp
xchg
pop
rol
inc
adc
ds
aaa
and
and
adc
sbb
add
or
cmp
mov
pop
das
(bad)
imul
inc
nop
ins
movs
inc
inc
aas
lds
das
pop
(bad)
gs
addr16
sbb
push
arpl
inc
aas
je
pop
ja
in
mov
test
pop
in
sysret
out
addr16
hlt
push
inc
xchg
jnp
popa
cmc
and
push
add
push
lock
test
push
ret
adc
inc
mov
xchg
in
adc
mov
jo
inc
lods
movs
xchg
and
loope
sahf
xor
pusha
movs
push
lods
mov
xor
hlt
xlat
out
inc
loopne
jecxz
aam
mov
inc
fld
fst
mov
push
in
mov
repnz
xor
add
mov
enter
(bad)
je
and
adc
mov
pop
xor
push
sar
in
add
and
xchg
or
adc
push
mov
aaa
and
and
add
adc
sbb
mov
pop
push
(bad)
inc
push
xor
movs
adc
lds
pop
(bad)
outs
inc
addr16
cmp
jnp
pop
test
in
mov
test
jno
pop
mulps
inc
addr16
hlt
dec
mov
dec
cmc
bound
dec
push
mov
mov
test
gs
test
push
mov
loop
mov
jne
xchg
mov
ss
mov
and
jo
inc
stos
movs
fisub
movs
cmps
test
pusha
xchg
push
test
xchg
push
loopne
into
inc
mov
(bad)
xchg
scas
jmp
add
xor
pushf
mov
(bad)
lds
fiadd
out
(bad)
out
je
and
adc
mov
pop
add
in
add
and
add
and
sub
adc
xchg
push
jg
mov
aaa
xor
and
cmp
xor
loopne
aad
xor
adc
les
inc
cmp
adc
pop
(bad)
ja
push
aam
adc
push
sub
gs
push
test
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
push
push
xchg
jnp
push
cmc
pop
pop
ja
mov
push
mul
test
add
mov
inc
mov
adc
scas
mov
and
jo
inc
xchg
movs
xchg
std
cmps
mov
mov
push
mov
fistp
inc
mov
(bad)
mov
fist
fnsave
clc
mov
shl
int
stos
in
ror
je
and
adc
fcomp
test
in
add
xor
xor
and
cmc
inc
adc
adc
and
sbb
outs
and
cmps
sbb
loopne
aad
xor
sbb
addr16
dec
les
nop
inc
movs
ins
inc
jno
or
push
(bad)
jae
jnp
dec
or
push
imul
aas
ins
not
jb
inc
mov
test
pop
in
sysret
out
addr16
adc
push
cmc
gs
inc
push
lods
xchg
scas
add
push
hlt
lea
cdq
push
cdq
xchg
adc
inc
stc
jne
xchg
lock
mov
mov
and
sahf
cmps
mov
push
stos
mov
xor
in
inc
into
and
xchg
scas
inc
(bad)
out
loopne
mov
push
icebp
mov
into
fs
xor
add
loop
enter
std
je
and
adc
(bad)
lahf
in
xchg
and
aaa
test
shl
test
pop
xor
adc
add
xor
sub
and
sbb
dec
loopne
aad
xor
push
(bad)
ins
push
jae
addr16
jo
or
lds
push
mov
aam
sub
inc
push
and
add
ja
in
mov
test
gs
in
pcmpeqb
push
addr16
hlt
imul
cmc
and
xchg
mov
mov
test
add
test
mov
adc
xchg
mov
and
jo
inc
mov
iret
frstor
and
into
xor
loopne
cmc
inc
fist
icebp
and
hlt
scas
sti
inc
rol
in
out
mov
push
ret
jbe
idiv
shl
xchg
add
loop
out
shl
(bad)
je
and
jne
lahf
(bad)
xchg
push
pop
and
daa
shl
in
add
daa
xchg
pop
ds
adc
or
sub
pop
mov
aaa
push
movs
inc
lock
outs
and
cmp
adc
and
pop
loopne
aad
xor
ds
jl
inc
les
jae
or
lds
das
pop
(bad)
dec
inc
push
aam
adc
sub
pop
aas
push
not
outs
in
mov
test
in
cmovs
push
addr16
hlt
push
mov
pop
cmc
pop
pop
js
movs
xchg
test
gs
test
push
nop
xchg
adc
inc
test
xchg
test
ss
mov
and
jo
inc
xchg
movs
mov
cmps
iret
call
pusha
mov
xor
push
loop
rol
and
mov
stc
push
rol
fnsave
cwde
mov
out
fs
xor
add
test
je
and
adc
aam
out
xor
xor
shl
in
add
and
or
adc
or
pop
lock
sbb
push
cmps
xor
sbb
xor
(bad)
pusha
push
jbe
pop
nop
pop
movs
adc
js
push
das
push
(bad)
outs
inc
inc
aam
add
push
arpl
inc
aas
pop
mul
push
in
mov
test
push
in
sysret
out
addr16
bound
inc
cmc
inc
pop
or
test
scas
add
push
mov
mov
mov
xchg
out
test
pop
xchg
jne
xchg
call
mov
and
jo
inc
call
iret
fbld
xchg
cmps
xor
stos
push
mov
fbld
mov
(bad)
(bad)
scas
mov
push
into
add
push
xchg
in
fs
xor
add
retf
data16
div
(bad)
adc
les
xor
add
add
and
rcr
add
cmp
movs
pop
lock
cmp
and
pop
loopne
aad
xor
push
(bad)
adc
nop
cmp
push
das
cmp
arpl
aam
add
push
pop
aad
aas
push
imul
ins
in
mov
test
in
nop
addr16
hlt
outs
mov
inc
cmc
pusha
pop
jbe
adc
gs
out
test
mov
inc
pushf
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
lods
and
and
mov
test
mov
inc
mov
(bad)
xchg
scas
mov
push
out
mov
push
ret
jbe
not
shl
lock
fimul
les
cmc
adc
clc
lahf
repnz
pop
pop
sub
(bad)
ror
test
outs
and
push
ror
sbb
cmp
movs
inc
lock
addr16
aas
cmps
xor
loopne
aad
xor
dec
(bad)
adc
les
ins
movs
dec
inc
ins
lds
pop
(bad)
arpl
aam
add
push
ins
aad
aas
dec
not
in
mov
test
in
cmovno
inc
addr16
hlt
jbe
pop
xchg
jge
dec
cmc
jge
jp
movs
xchg
mov
mov
mov
test
add
cdq
xchg
adc
inc
mov
adc
xchg
mov
and
jo
inc
call
iret
popf
es
cmps
mov
push
mov
test
push
cmc
xlat
out
out
into
and
loop
mov
push
aad
lds
fdivr
icebp
xor
add
int
cld
data16
and
adc
scas
lahf
out
xchg
xor
xor
add
push
xchg
rcr
inc
adc
or
adc
lds
or
push
loopne
aad
xor
adc
push
push
jbe
cmp
cmp
adc
pusha
(bad)
ja
jg
imul
push
idiv
in
mov
test
push
in
addps
push
addr16
hlt
dec
mov
(bad)
cmc
addr16
push
add
push
fwait
mov
lahf
push
mov
inc
mov
adc
mov
aam
hlt
movs
fbld
cdq
cmps
call
mov
xor
hlt
xlat
mov
mov
inc
ret
(bad)
int3
push
into
add
xor
fnstsw
enter
xchg
add
ror
je
and
adc
ficomp
aaa
test
cmp
dec
add
and
sbb
ds
or
adc
cmp
cmp
sbb
ins
and
daa
cmps
gs
pop
mov
loopne
aad
xor
adc
jo
popa
les
nop
sub
dec
das
dec
(bad)
arpl
aam
and
sbb
aad
aas
push
test
in
mov
test
push
in
unpckhps
push
addr16
hlt
jne
inc
xchg
jge
push
cmc
pop
pop
fs
mov
mov
push
(bad)
mov
test
xchg
xchg
fst
jmp
xchg
mov
and
jo
inc
jmp
xchg
and
and
popf
xor
lock
xlat
inc
mov
lds
stc
(bad)
xlat
push
retf
xor
fistp
mov
retf
add
out
xchg
repz
je
and
adc
ficomp
and
add
push
xchg
pop
es
rcr
cmp
mov
aaa
or
cmp
adc
movs
sbb
daa
sbb
adc
push
aad
xor
add
inc
push
jb
bound
inc
lds
inc
(bad)
ja
fs
cmp
push
ja
pop
aas
js
sub
mov
test
jp
bound
sbb
es
hlt
push
mov
or
gs
jg
scas
xchg
xchg
add
push
hlt
gs
test
lods
xchg
jne
xchg
jmp
mov
mov
and
jo
inc
lock
fwait
and
mov
mov
stos
mov
xor
out
lods
inc
rcl
and
shr
icebp
push
mov
aad
push
sar
xlat
fs
xor
add
ror
(bad)
je
and
adc
loop
retf
xchg
ss
and
jg
adc
sub
and
pop
pop
cmp
adc
ss
aaa
adc
sbb
add
daa
and
sub
and
daa
aad
xor
sbb
les
ins
movs
or
lds
aas
(bad)
pusha
inc
and
or
push
dec
aad
aas
dec
div
ja
in
mov
test
pop
in
nop
pop
addr16
hlt
push
mov
adc
and
push
add
push
jmp
add
mov
inc
mov
adc
mov
mov
mov
(bad)
and
mov
loopne
iret
inc
mov
(bad)
xchg
scas
mov
push
leave
add
xor
cmp
fs
retf
add
enter
loop
(bad)
je
and
adc
neg
das
test
add
sub
das
ror
sbb
jg
mov
aaa
pop
movs
xor
push
lds
inc
cmps
sbb
loopne
aad
xor
push
(bad)
jno
jno
sub
aaa
movs
dec
inc
ins
lds
pop
(bad)
popa
inc
and
mov
push
je
inc
aas
jb
dec
ja
in
mov
test
outs
in
(bad)
out
addr16
inc
mov
jle
pop
pop
push
add
push
mov
pop
cdq
push
xchg
xchg
jne
xchg
mov
mov
cwde
inc
scas
movs
test
and
into
xor
xchg
xlat
hlt
inc
mov
(bad)
aam
cli
inc
mov
push
retf
xor
fistp
xlat
xor
add
fimul
xor
adc
fstp
sub
rol
dec
outs
pop
xchg
pop
and
adc
push
mov
aaa
adc
cmp
pop
lds
pop
movs
aaa
dec
cmp
xor
sbb
xor
ss
jl
jne
dec
nop
jno
push
inc
cmp
or
inc
(bad)
ja
fs
cmp
push
pop
aad
aas
push
not
dec
in
mov
test
dec
in
cmovno
pop
addr16
hlt
dec
mov
dec
cmc
pop
pop
outs
push
mov
nop
xchg
inc
mov
inc
mov
adc
mov
jo
inc
lods
movs
les
xchg
cmps
test
pusha
xchg
push
sti
mov
xor
ret
inc
loopne
into
and
lock
mov
push
repnz
push
(bad)
mov
shl
jmp
stos
in
gs
(bad)
fisub
out
je
and
adc
loopne
int3
xchg
xor
xor
xor
and
or
and
xchg
jo
pop
cmc
push
adc
aas
mov
aaa
shld
push
lds
and
cmp
push
loopne
aad
xor
adc
outs
push
dec
les
nop
inc
movs
push
inc
jno
popa
das
pop
(bad)
jae
inc
aam
or
push
and
inc
aas
push
div
push
outs
mov
test
in
lsl
push
addr16
or
dec
cmc
push
pop
push
add
push
cmc
mov
mov
mov
inc
mov
adc
xchg
mov
and
jo
inc
stos
movs
mov
es
cmps
sahf
xor
pusha
mov
xor
(bad)
repnz
mov
(bad)
xchg
scas
jmp
fld
loopne
jecxz
mov
push
(bad)
mov
(bad)
mov
retf
add
loope
enter
xor
adc
fistp
cmp
pusha
shl
push
add
sbb
xor
outs
xchg
or
popa
cmc
sbb
jg
mov
aaa
aas
movs
cmp
xor
xor
and
adc
inc
aad
xor
sub
jbe
imul
nop
xor
lds
inc
(bad)
jge
jg
push
sbb
push
das
aad
aas
jnp
inc
ja
in
mov
test
sbb
pop
unpckhps
jp
push
hlt
push
mov
inc
cmc
push
pop
add
add
push
mov
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
iret
cwde
mov
adc
xchg
xor
loopne
mov
loope
xchg
scas
mov
repz
call
hlt
xor
clc
mov
(bad)
shl
ret
add
ror
je
and
jne
lahf
call
test
shl
cmp
daa
xchg
pop
es
or
xor
inc
adc
or
adc
add
movs
adc
cmps
sbb
loopne
aad
xor
dec
(bad)
jg
dec
les
movs
ins
inc
cmp
adc
push
(bad)
ja
fs
adc
push
sub
push
aas
push
test
in
mov
test
in
unpckhps
pop
addr16
hlt
push
mov
or
push
lods
xchg
scas
add
push
fwait
gs
test
push
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
les
popf
cmps
xchg
pusha
retf
mov
xor
in
xlat
call
and
xchg
scas
fiadd
(bad)
mov
xor
std
mov
aad
std
xor
add
out
shl
fbstp
les
loop
retf
xchg
or
or
add
aas
xchg
pop
cmp
adc
cmp
cmp
sbb
aaa
and
and
adc
xor
add
pop
or
dec
push
jbe
and
jno
inc
das
push
(bad)
jae
dec
aam
or
push
arpl
pop
aas
pop
div
inc
in
mov
test
pop
in
packssdw
pop
addr16
hlt
adc
ja
ss
cmc
dec
pop
jp
lods
xchg
mov
mov
mov
adc
inc
mov
adc
sahf
mov
and
jo
inc
out
(bad)
sahf
cmps
mov
pusha
xchg
push
xchg
mov
xor
in
test
cli
inc
xchg
scas
fild
(bad)
(bad)
push
icebp
add
xor
in
mov
out
xlat
xor
add
fisttp
les
std
adc
out
call
adc
add
and
jl
sbb
cs
push
mov
aaa
or
push
lock
xor
or
adc
cmp
aad
xor
sub
ins
push
xor
and
inc
lds
push
(bad)
push
inc
fs
or
push
jl
add
push
idiv
ja
in
mov
test
gs
in
cvtdq2ps
jnp
push
hlt
push
mov
add
das
pop
inc
push
test
mul
test
push
mov
cmps
adc
inc
mov
fcom
cwde
movs
mov
and
jo
inc
mov
cwde
and
mov
pusha
xchg
push
mov
fistp
inc
out
mov
xchg
int
xchg
scas
mov
push
mov
cld
xor
clc
mov
fsub
aam
out
sahf
gs
out
je
and
adc
int
(bad)
xchg
and
pop
test
shl
in
add
and
inc
pop
sbb
adc
movzx
aaa
adc
cs
outs
and
cmp
sbb
cmp
xor
adc
les
nop
dec
movs
jo
dec
lds
pop
(bad)
outs
inc
fs
xor
push
ins
aad
aas
and
in
mov
test
in
unpcklps
fs
hlt
push
mov
or
push
lods
xchg
lods
add
push
mul
test
push
ret
adc
inc
mov
adc
xchg
mov
and
jo
inc
mov
fisub
xchg
cmps
cmps
xor
pusha
mov
xor
in
test
std
inc
call
(bad)
fst
sti
xor
iret
mov
shl
add
mov
aad
int3
out
je
and
jne
lahf
out
xchg
aaa
pop
test
rcr
in
add
or
sub
xor
inc
adc
ds
aaa
push
movs
pop
lock
lds
and
pop
cmps
jge
add
xor
adc
les
xor
ins
das
push
jae
and
pop
and
pop
push
arpl
inc
aas
push
mul
push
ins
mov
test
push
in
nop
dec
addr16
hlt
push
mov
or
pop
pop
outs
push
mov
test
test
push
movs
xchg
adc
inc
mov
adc
div
xchg
inc
out
fsub
xchg
cmps
movs
xor
pusha
stos
push
mov
(bad)
push
aam
repz
mov
lds
inc
inc
ret
push
out
mov
push
(bad)
mov
in
(bad)
xor
add
repnz
xchg
mul
xchg
(bad)
adc
mov
pop
adc
in
add
add
daa
pop
bound
adc
adc
es
xor
sbb
and
pop
mov
loopne
aad
xor
sub
ins
push
popa
les
dec
movs
dec
inc
pusha
lds
pop
mov
aam
add
push
das
aad
aas
push
imul
in
mov
test
push
in
lsl
bound
hlt
push
mov
inc
cmc
pop
pop
gs
adc
pop
mov
mov
inc
xchg
jne
xchg
mov
ss
mov
and
jo
inc
sahf
movs
xchg
and
mov
mov
push
test
retf
xlat
loopne
mov
lds
inc
out
iret
push
mov
xor
(bad)
mov
jmp
retf
add
loop
xchg
out
je
and
jne
lahf
xchg
xchg
sub
sub
add
or
add
daa
cmc
sbb
cmp
movs
sub
and
pop
cmps
sbb
push
mov
loopne
aad
xor
adc
jl
xor
movs
or
lds
cmp
jnp
fs
and
push
arpl
popa
aas
outs
test
in
mov
test
jp
popa
pcmpeqd
push
addr16
hlt
push
sbb
bound
outs
push
adc
gs
test
push
xchg
test
test
jmp
and
jo
inc
mov
xchg
es
cdq
xor
pusha
ret
mov
xor
xchg
xlat
icebp
inc
lods
adc
and
call
mov
xor
(bad)
mov
int
shl
lds
int
retf
out
je
and
adc
out
les
jnp
and
xor
sbb
xchg
jbe
pop
cmc
inc
adc
cmp
movs
adc
adc
movs
pop
dec
sub
es
aad
xor
aas
(bad)
push
push
push
les
ins
movs
push
inc
jae
adc
push
jno
jg
inc
and
aas
push
not
pop
in
mov
test
add
jo
pop
out
addr16
hlt
push
mov
inc
cmc
inc
pop
fs
test
stos
add
push
mul
test
push
xchg
xchg
jne
xchg
in
adc
mov
mov
and
test
mov
xor
hlt
xlat
out
inc
cmps
adc
and
les
std
push
cmc
add
xor
(bad)
mov
call
add
loop
cli
out
(bad)
je
and
adc
mov
pop
je
xor
jns
aaa
pop
cmp
adc
adc
adc
sbb
or
add
add
cmp
aad
xor
adc
inc
push
popa
les
nop
outs
movs
jl
jb
ins
das
cmp
aam
add
push
inc
aad
aas
pop
imul
push
in
mov
test
gs
pop
lsl
bound
hlt
push
mov
inc
cmc
pop
pop
dec
push
adc
lea
mov
pop
mov
adc
repz
and
jo
inc
xchg
movs
xchg
and
and
xchg
xor
loopne
mov
int
iret
and
out
scas
loop
sti
mov
xor
test
ret
xor
add
loope
clc
data16
out
je
and
adc
movs
lahf
clc
xchg
and
sub
in
add
jle
aaa
pop
es
add
adc
sub
sbb
adc
xor
outs
and
or
pavgb
aas
xor
adc
push
push
inc
les
xor
dec
inc
jno
inc
das
pop
(bad)
ja
pusha
aam
adc
push
jae
jne
push
not
inc
in
mov
test
in
punpckldq
inc
addr16
hlt
jne
inc
xchg
jl
jne
push
pop
push
add
push
mul
test
push
mov
inc
mov
adc
repnz
and
jo
inc
mov
fbld
sahf
cmps
lods
xor
pusha
xchg
push
mov
mov
jmp
and
shr
push
fld
(bad)
xor
cld
mov
(bad)
fs
xor
add
cmc
(bad)
out
je
and
adc
loop
retf
xchg
dec
pop
jno
jnp
or
test
outs
pop
xchg
pop
outs
xchg
das
rcl
sbb
cmp
inc
lock
sbb
cmp
das
daa
xor
xor
pop
(bad)
imul
movs
pop
inc
(bad)
lds
jnp
pop
inc
jnp
cmp
jl
pop
push
inc
aad
aas
push
test
in
mov
test
js
push
sysret
out
addr16
hlt
push
mov
pop
cmc
pop
pop
imul
xchg
icebp
add
push
cmc
gs
test
push
mov
inc
cmps
jne
xchg
out
adc
mov
test
movs
fisub
cmps
cmps
movs
xor
pusha
cmps
push
div
mov
iret
xlat
aam
repnz
and
lds
rcl
xor
(bad)
mov
into
fs
clc
add
out
(bad)
out
je
and
adc
mov
pop
sub
pusha
shl
cmp
and
cmp
rcl
adc
jg
mov
aaa
adc
and
or
push
loopne
aad
xor
dec
(bad)
inc
push
inc
les
ins
movs
je
push
inc
das
pop
(bad)
pop
inc
outs
aam
adc
push
imul
pop
ja
in
mov
test
pop
in
lsl
je
add
push
mov
inc
cmc
pop
pop
push
push
mov
scas
add
push
scas
mov
add
xchg
adc
inc
mov
adc
mov
mov
movs
and
cmps
lds
pusha
xchg
push
mov
fild
inc
not
retf
and
std
scas
test
icebp
push
retf
xor
fistp
loopne
out
xor
add
loop
xchg
out
je
and
adc
fstp
sub
and
and
adc
and
xor
adc
and
add
movs
pop
lock
movs
or
cmps
sbb
dec
mov
loopne
aad
xor
push
(bad)
imul
cmp
lds
pop
(bad)
jae
push
aam
add
ins
aad
aas
outs
neg
push
in
mov
test
sbb
jp
pop
hlt
push
mov
or
cmp
inc
push
scas
xchg
xchg
add
push
mul
test
cdq
xchg
test
lods
movs
mov
and
jo
inc
mov
cmps
es
cmps
call
mov
xor
rcl
out
inc
mov
korw
scas
mov
push
stos
add
push
hlt
mov
fsub
(bad)
add
loope
fbld
out
je
and
adc
mov
pop
xor
add
sub
adc
cmp
add
adc
ds
aaa
and
lds
and
cmp
push
loopne
aad
xor
push
(bad)
inc
push
les
popa
movs
or
lds
push
outs
inc
addr16
xor
sub
jns
sub
pop
ja
in
mov
test
adc
bound
sbb
daa
addr16
dec
mov
inc
cmc
inc
pop
push
push
test
repnz
push
xchg
gs
loopne
xlat
out
mov
adc
inc
mov
adc
xor
inc
jmp
mov
es
pusha
fst
mov
xor
ret
inc
in
adc
and
xchg
scas
cmps
inc
cld
(bad)
jecxz
jmp
mov
push
cmc
mov
hlt
fs
hlt
add
lds
ret
je
and
adc
rcr
test
ja
push
add
add
xor
xor
adc
sbb
push
lock
xor
push
movs
add
and
xor
xor
adc
les
nop
jno
inc
jb
adc
push
(bad)
fs
and
xor
ins
aad
aas
push
div
ja
in
mov
test
in
nop
jne
pop
hlt
dec
mov
inc
cmc
pop
pop
or
mov
mov
in
push
mov
add
lds
in
fcom
mov
xchg
mov
and
jo
inc
xchg
movs
xchg
and
and
mov
xchg
xlat
les
retf
and
xchg
scas
mov
push
aam
fidiv
ret
mov
(bad)
xlat
xor
add
std
(bad)
sti
data16
out
je
and
adc
out
(bad)
xchg
and
shl
in
add
sbb
daa
pop
and
cmc
sbb
push
mov
aaa
sub
and
and
or
cmp
mov
pop
adc
push
push
imul
dec
inc
and
adc
push
(bad)
gs
data16
or
push
ins
aad
aas
pop
not
dec
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
pop
cmc
pop
pop
jge
lods
xchg
test
gs
test
cmps
xchg
jne
xchg
mov
ss
mov
and
jo
inc
hlt
movs
mov
sahf
iret
(bad)
es
pusha
xchg
push
xchg
mov
loopne
out
inc
loop
(bad)
and
lahf
scas
cli
inc
inc
stc
push
rol
xor
cld
mov
out
in
xor
add
out
iret
data16
out
je
and
adc
mov
pop
xor
(bad)
rcl
in
add
jle
xor
xor
sub
pop
cmc
sub
or
adc
sbb
sub
and
adc
dec
aad
xor
cmp
inc
push
push
movs
jb
jle
jge
push
(bad)
dec
inc
popa
aam
add
push
arpl
pop
aas
sub
pop
ja
in
mov
test
popa
in
packssdw
push
addr16
hlt
inc
mov
jno
addr16
outs
push
mov
push
repz
mov
scas
xchg
adc
xchg
and
jo
inc
out
test
sahf
cmps
scas
xor
pusha
test
mov
xor
out
xlat
out
mov
(bad)
shr
out
retf
xor
(bad)
mov
int
in
xor
add
repnz
out
je
and
adc
neg
das
test
pop
in
add
sbb
cmp
jns
or
adc
sbb
jg
mov
aaa
push
movs
pop
lock
cmp
or
pop
loopne
aad
xor
adc
les
inc
lds
pop
(bad)
jle
fs
add
push
ins
aad
aas
pop
test
in
mov
test
cvtdq2ps
jg
push
hlt
push
mov
inc
cmc
pop
pop
push
push
adc
pop
mov
rol
jne
xchg
mov
mov
mov
mov
fldenv
xchg
cmps
lahf
xor
pusha
xchg
push
popf
mov
xor
rcl
hlt
inc
lods
adc
and
nop
scas
fadd
mov
xor
ret
jbe
neg
shl
lds
fimul
les
rcl
ficomp
add
add
xchg
pop
cmp
adc
push
mov
aaa
adc
and
cmp
ds
sbb
pop
loopne
aad
xor
es
jl
jle
bound
cmp
jo
dec
(bad)
fs
cmp
jne
and
ins
aas
and
push
adc
test
in
punpckhdq
inc
addr16
hlt
push
mov
pop
cmc
pop
pop
ins
push
stos
xchg
test
gs
test
push
mov
inc
mov
adc
icebp
mov
and
jo
inc
xchg
movs
fbld
xchg
cmps
call
mov
xor
cld
xlat
out
inc
lods
adc
and
lock
into
inc
pop
(bad)
push
in
add
xor
cld
mov
leave
fs
into
add
leave
(bad)
fisub
out
je
and
adc
fcomp
xor
add
and
push
shl
adc
sub
pop
lock
and
xor
daa
add
xor
aas
(bad)
imul
arpl
cmp
adc
pop
(bad)
push
inc
jg
push
cmp
push
popa
aad
aas
jnp
inc
ja
in
mov
test
in
nop
jae
inc
hlt
inc
mov
dec
cmc
inc
pop
push
add
push
cmc
pop
lea
xchg
xchg
jne
xchg
in
adc
lods
mov
and
jo
inc
out
xchg
and
mov
hlt
xlat
repz
lds
leave
and
in
scas
mov
push
int3
add
xor
(bad)
mov
out
in
xor
add
out
enter
ret
je
and
adc
fcomp
xor
adc
or
pop
add
xor
sbb
rcr
sbb
adc
aas
jg
mov
aaa
adc
add
sbb
ss
or
or
aaa
aad
xor
push
(bad)
imul
and
jb
inc
das
cmp
aam
add
push
popa
aad
aas
and
push
ja
in
mov
test
sbb
dec
nop
push
pmuludq
jle
cmp
cmc
jp
dec
push
adc
mov
mov
adc
inc
mov
xchg
hlt
adc
mov
cwde
inc
call
iret
lahf
cmps
cmps
xchg
pusha
fwait
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
out
add
push
les
cld
fs
xor
add
std
vphaddudq
loop
in
and
adc
(bad)
lahf
(bad)
xchg
and
cmp
ins
rcr
in
add
and
xchg
xor
adc
cmp
movs
add
adc
movs
or
daa
push
mov
loopne
aad
xor
sub
jl
ins
les
movs
dec
inc
jns
inc
das
push
mov
fs
add
push
ins
aad
aas
push
test
in
mov
test
in
pcmpgtw
dec
addr16
xchg
jnp
or
inc
pop
jg
scas
xchg
xchg
push
mul
test
push
cmps
xchg
cmps
xchg
mov
movs
mov
and
jo
inc
stos
movs
mov
std
cmps
cdq
xor
pusha
mov
xor
jmp
ret
adc
and
loop
mov
push
loop
mov
push
repnz
xlat
xor
add
mov
call
je
and
adc
loop
out
xchg
xor
push
test
and
sbb
and
or
adc
push
mov
aaa
shld
pop
lds
cmps
sub
push
mov
loopne
aad
xor
adc
les
nop
jbe
cmovne
adc
pop
(bad)
ja
jg
xor
push
aad
aas
push
mul
inc
in
mov
test
push
in
nop
push
addr16
hlt
popa
mov
inc
cmc
pop
pop
or
xchg
xchg
nop
add
push
test
mov
mov
pushf
xchg
jne
xchg
lods
adc
mov
jo
inc
mov
pushf
and
xchg
cmps
mov
push
in
test
cwde
fistp
inc
mov
lds
inc
inc
ret
push
int
mov
push
(bad)
mov
into
fs
fadd
enter
shl
je
and
adc
ficomp
aaa
test
in
add
sub
or
adc
es
aaa
pop
movs
push
lock
sub
sub
mov
loopne
aad
xor
sbb
inc
push
popa
les
nop
dec
movs
je
jb
push
das
dec
(bad)
arpl
aam
xor
push
sub
sbb
ins
neg
inc
in
mov
test
gs
in
packuswb
push
addr16
hlt
push
mov
inc
cmc
inc
pop
push
push
sahf
xchg
repz
push
cmc
gs
test
push
mov
inc
loop
xchg
xchg
mov
ss
and
movs
and
cmps
mov
and
sti
mov
xor
call
int
out
retf
and
std
scas
mov
push
retf
add
xor
iret
mov
in
in
xor
add
ror
out
je
and
jne
lahf
sti
xchg
or
xor
ins
shl
add
push
xchg
pop
es
and
adc
sbb
das
mov
aaa
adc
and
sbb
pop
loopne
aad
xor
push
(bad)
push
push
imul
dec
inc
lds
das
push
mov
fs
or
push
ins
aad
aas
inc
test
in
mov
test
jno
bound
adc
and
hlt
push
mov
or
push
lods
xchg
test
test
push
xchg
xchg
adc
ss
mov
and
jo
inc
out
movs
mov
es
cmps
ret
pusha
xchg
push
xchg
mov
xor
hlt
xlat
fadd
into
and
mov
stc
push
leave
add
xor
out
mov
leave
fs
xor
add
mov
retf
out
je
and
adc
fstp
sub
add
or
sub
ds
aas
adc
ds
aaa
and
pop
lock
and
and
adc
daa
aad
xor
adc
les
nop
inc
movs
or
lds
push
(bad)
jae
push
aam
cmp
push
imul
jo
jb
inc
mov
test
jl
packssdw
jnp
inc
hlt
ins
mov
or
and
inc
push
test
jmp
gs
test
push
cmps
xchg
mov
mov
xchg
(bad)
inc
out
lea
in
sahf
xor
pusha
mov
mov
fisttp
inc
repz
and
out
scas
out
inc
out
int
fnstenv
sar
int
xchg
in
shl
cwde
gs
mul
shl
adc
fstp
xor
add
daa
xchg
rcl
add
mov
aaa
or
and
and
jge
pop
mov
loopne
aad
xor
push
(bad)
ins
push
xor
pop
nop
jo
dec
inc
pop
lds
pop
(bad)
pop
inc
addr16
and
add
push
test
in
mov
test
push
in
punpckhwd
jg
add
push
mov
push
cmc
bound
outs
push
rcl
xrelease
fwait
push
mov
inc
mov
adc
test
mov
mov
pushf
and
mov
xchg
pusha
fst
mov
xor
in
test
and
xchg
scas
fiadd
(bad)
icebp
push
rol
mov
push
cld
mov
in
shl
leave
add
out
sti
data16
shl
adc
cli
lahf
(bad)
xchg
and
xor
add
and
daa
pop
es
add
pusha
cmc
sbb
push
add
das
movs
sub
and
cmp
sbb
adc
pop
loopne
aad
xor
or
adc
les
inc
popa
lds
arpl
je
outs
aam
add
push
jb
inc
aas
dec
div
dec
in
mov
test
gs
bound
add
inc
addr16
hlt
je
bound
jne
add
mov
push
mov
add
lods
xchg
adc
inc
mov
adc
icebp
mov
and
jo
inc
mov
fbld
xchg
cmps
cdq
xor
pusha
retf
mov
xor
in
xlat
inc
lods
adc
and
sahf
scas
loopne
aad
out
test
lock
cld
mov
xchg
fs
xor
add
ror
je
and
adc
mov
pop
adc
add
sub
push
add
or
sub
pop
cmc
pop
adc
cmp
movs
pop
lock
lds
dec
push
cmps
xor
pop
mov
loopne
aad
xor
cmp
arpl
les
movs
push
inc
lds
gs
jge
cmp
dec
add
push
arpl
inc
aas
pop
div
mov
test
push
out
addr16
hlt
dec
mov
adc
inc
pop
outs
push
lods
xchg
lods
add
push
mov
mov
mov
push
les
mov
adc
test
mov
in
movs
pushf
and
xchg
cmps
cwde
xor
pusha
mov
xor
(bad)
lock
loop
in
clc
korw
scas
loope
cld
(bad)
rcl
mov
push
std
mov
in
xlat
xor
add
out
out
mul
shl
adc
fcomp
aaa
test
and
sub
cmp
push
outs
jnp
aaa
pop
cmp
cmc
add
imul
sub
dec
and
adc
daa
aad
xor
push
(bad)
outs
push
push
les
jae
push
inc
pop
lds
pop
(bad)
jae
pusha
aam
add
push
das
aad
aas
push
neg
push
in
mov
test
push
in
lsl
pop
addr16
hlt
dec
mov
inc
cmc
pop
pop
jb
mov
mov
add
mov
popf
adc
inc
mov
adc
lods
mov
and
jo
inc
scas
movs
xchg
std
cmps
xchg
pusha
mov
mov
fbstp
inc
loopne
in
(bad)
(bad)
in
mov
push
leave
add
xor
fdivr
leave
fs
xor
add
mov
sahf
data16
(bad)
je
and
adc
fstp
sub
(bad)
shl
add
or
adc
sbb
cmp
add
movs
sub
and
cmp
mov
loopne
aad
xor
adc
inc
push
dec
les
arpl
adc
aas
(bad)
addr16
pop
aam
sub
push
inc
aad
aas
ins
test
in
mov
test
inc
in
sysret
out
addr16
hlt
push
mov
or
and
inc
push
lods
xchg
lea
push
mul
test
push
mov
inc
mov
lea
mov
lods
mov
and
jo
inc
lods
movs
call
cmps
popf
xor
pusha
xchg
push
cli
mov
xor
in
jecxz
out
in
and
xchg
scas
aad
inc
scas
push
icebp
add
push
(bad)
mov
nop
xor
add
dec
test
rcl
lahf
les
jnp
pop
in
add
add
or
adc
ins
mov
aaa
pop
movs
inc
lock
cmp
cmp
cmp
inc
mov
loopne
aad
xor
adc
les
jnp
adc
jno
jge
inc
(bad)
jae
jle
ja
inc
mov
push
push
aad
aas
push
div
ja
in
mov
test
pop
in
pcmpeqw
inc
addr16
hlt
dec
mov
push
cmc
pop
pop
fs
cmps
xchg
icebp
add
push
cmc
gs
out
mov
rol
jne
xchg
lahf
adc
mov
xchg
and
jo
inc
jmp
and
push
mov
fistp
inc
out
shl
scas
int
inc
loop
mov
mov
push
cmc
mov
enter
les
iret
(bad)
cmc
data16
out
je
and
adc
in
lahf
fist
arpl
add
push
add
cmp
adc
pop
cmc
pop
adc
sub
and
or
and
daa
cmps
sbb
loopne
aad
xor
sbb
adc
popa
les
nop
pop
movs
dec
inc
cmp
push
inc
pusha
aam
or
push
sub
inc
aas
push
test
in
mov
test
gs
push
nop
popa
addr16
hlt
push
mov
or
pusha
pop
inc
push
xchg
cmc
gs
test
add
lahf
xchg
mov
jmp
and
jo
inc
hlt
movs
and
cmps
xchg
pusha
xchg
push
mov
fistp
inc
mov
(bad)
mov
icebp
push
rol
cmps
xor
les
int
shl
enter
fldenv
(bad)
jmp
out
je
and
adc
fcomp
sub
add
and
jl
(bad)
cmc
push
adc
push
movs
adc
push
lds
and
and
pop
loopne
aad
xor
es
jl
outs
les
movs
jb
lds
das
pop
(bad)
jo
fs
sbb
push
ins
aad
aas
push
test
in
mov
test
push
bound
dec
out
addr16
hlt
push
mov
push
cmc
popw
jg
lods
xchg
xchg
add
push
hlt
pop
mov
adc
inc
mov
adc
mov
add
cdq
and
mov
xchg
push
mov
call
adc
and
xchg
scas
jmp
add
push
lds
shl
jecxz
stos
in
ror
je
and
adc
fcomp
and
jg
push
in
add
and
sub
pop
cmc
sub
jg
mov
aaa
add
and
and
adc
or
sbb
das
(bad)
push
nop
popa
movs
dec
inc
cmp
push
das
dec
(bad)
jnp
jg
push
or
push
sub
pop
aas
dec
neg
push
in
mov
test
in
minps
jnp
inc
hlt
jge
inc
xchg
ss
cmc
addr16
push
add
push
mov
test
push
mov
call
xchg
in
adc
mov
xchg
inc
mov
test
xchg
cmps
xor
xchg
push
mov
fistp
inc
mov
lds
inc
inc
mov
xor
(bad)
mov
loop
shl
retf
in
gs
loope
scas
out
je
and
adc
out
call
test
in
add
and
add
or
sbb
jg
mov
aaa
push
movs
sub
add
xor
pop
movs
sub
or
or
dec
aad
xor
adc
les
ins
movs
jo
jb
pop
das
jle
arpl
aam
sbb
push
das
aad
aas
ins
test
in
mov
test
sbb
jb
push
hlt
push
mov
push
cmc
pop
pop
outs
push
test
hlt
gs
test
push
fwait
xchg
jne
xchg
mov
ss
and
movs
scas
and
xchg
cmps
xchg
pusha
pushf
push
mov
fbstp
inc
mov
(bad)
xchg
scas
mov
push
test
loope
les
(bad)
xor
add
out
leave
data16
out
je
and
adc
fstp
jle
cmp
adc
push
add
and
xchg
pop
shl
push
jg
mov
aaa
adc
and
cmp
adc
ds
loopne
aad
xor
or
inc
push
imul
jo
aas
lds
das
gs
pop
inc
inc
aam
sbb
push
ins
aad
aas
sub
dec
ja
in
mov
test
jp
outs
cmovs
inc
addr16
hlt
push
mov
imul
lods
xchg
lock
push
fwait
mov
test
xchg
xchg
jne
xchg
in
adc
repz
and
jo
inc
lods
movs
fwait
and
xchg
cmps
lods
xor
pusha
adc
fist
inc
repz
and
mov
in
rol
mov
push
fidivr
fisub
retf
in
fisttp
xor
adc
fcomp
xor
jnp
or
xor
push
xchg
pop
cmp
adc
ds
aaa
xor
and
cmp
cmp
cmp
xor
cmp
pop
push
les
nop
ins
movs
push
inc
pusha
lds
outs
(bad)
jns
jg
and
pop
push
pop
aad
aas
push
imul
push
in
mov
test
push
in
movq
push
addr16
jno
jg
cmp
pop
push
add
push
and
mov
(bad)
out
mov
scas
xchg
jne
xchg
adc
cmps
jo
inc
out
fsub
xchg
cmps
popf
xor
pusha
lds
mov
xor
hlt
xlat
rol
into
and
nop
scas
in
std
(bad)
in
ret
add
xor
fdivr
out
xlat
xor
add
fisttp
std
je
and
adc
fcomp
aaa
test
and
test
outs
push
xchg
ds
or
fs
sbb
jg
mov
aaa
push
movs
add
sbb
push
dec
daa
cmps
and
pop
mov
loopne
aad
xor
cmp
push
imul
nop
jb
jae
cmp
mov
aam
and
pop
push
das
aad
aas
ins
test
in
mov
test
inc
in
unpcklps
push
addr16
hlt
adc
adc
pop
pop
outs
push
test
pop
push
hlt
gs
stos
add
mov
inc
lahf
jne
xchg
scas
adc
mov
(bad)
and
jo
inc
cmps
movs
xchg
and
and
xor
lods
adc
and
xchg
scas
les
mov
xor
ret
jbe
mul
fs
xor
add
in
out
out
les
(bad)
adc
out
clc
xchg
add
sub
add
sbb
push
sar
sbb
or
movs
and
xor
outs
and
cmp
sbb
xor
xor
adc
bound
les
nop
outs
movs
push
inc
cmp
push
das
je
ja
fs
xor
push
dec
aad
aas
push
test
in
mov
test
in
divps
jnp
jae
push
mov
or
push
lods
xchg
stos
add
push
mul
test
push
mov
jne
xchg
mov
movs
mov
and
jo
inc
lock
lods
and
xchg
cmps
movs
xor
pusha
xchg
push
lea
leave
push
loopne
out
inc
mov
korw
scas
mov
push
lds
movs
xor
ret
jbe
not
fdiv
in
add
out
(bad)
fisub
out
je
and
ret
xchg
xor
das
test
je
push
add
and
or
adc
gs
aaa
aas
movs
dec
lock
imul
add
push
loopne
aad
xor
inc
(bad)
ins
push
jbe
bound
xor
popa
das
push
(bad)
je
pop
aam
add
push
dec
aad
aas
neg
push
in
mov
test
adc
jle
arpl
push
addr16
dec
mov
js
pop
pop
outs
push
aad
test
push
cmps
mov
mov
scas
xchg
jne
xchg
mov
xchg
jmp
mov
jo
inc
mov
iret
mov
sahf
cmps
nop
xor
pusha
xchg
push
mov
enter
retf
push
hlt
xlat
cld
inc
loop
lock
call
(bad)
ficom
call
push
lds
int
stc
xor
add
loop
enter
cmc
je
and
jne
lahf
int
and
test
jbe
push
add
and
or
pop
cmc
pop
adc
push
mov
aaa
adc
cmp
push
lds
adc
pop
daa
xor
aad
xor
dec
(bad)
ins
push
popa
les
nop
xor
outs
das
dec
(bad)
arpl
aam
add
push
ins
aad
aas
push
neg
in
mov
test
push
in
lsl
push
addr16
hlt
push
mov
inc
cmc
jp
outs
push
test
mul
test
add
movs
xchg
jne
xchg
mov
mov
add
mov
and
int3
xor
int3
xlat
test
mov
inc
stc
(bad)
rcl
mov
push
ret
jbe
not
fs
int
repz
test
je
and
adc
fstp
sub
push
rcl
in
add
cmp
adc
adc
xchg
movq
sub
adc
and
or
cmp
xor
sbb
les
inc
inc
lds
das
pop
(bad)
jnp
data16
and
arpl
aad
aas
outs
test
in
mov
test
in
(bad)
out
addr16
hlt
dec
mov
push
cmc
popw
outs
push
xchg
mov
add
cmps
xchg
test
xchg
mov
jo
inc
out
movs
fbld
popf
cmps
mov
push
mov
fist
inc
fst
into
and
fisubr
hlt
push
mov
push
(bad)
mov
out
fs
xor
add
ror
je
and
jne
lahf
(bad)
xchg
xor
sub
add
and
pop
pop
cmp
adc
push
mov
aaa
and
lds
add
outs
daa
lfs
pop
aad
xor
push
(bad)
adc
nop
push
movs
or
das
jg
jae
jg
arpl
ins
aad
aas
ins
neg
je
inc
mov
test
jge
unpckhpd
outs
addr16
hlt
push
mov
dec
cmc
inc
pop
or
add
push
hlt
movs
test
push
cdq
xchg
adc
inc
mov
adc
mov
stos
inc
out
xchg
xchg
ret
push
cld
mov
xor
retf
inc
mov
lds
inc
vcvtpd2dq
cmps
xor
fistp
into
shl
into
add
loop
mul
out
je
and
adc
fstp
aaa
test
pop
in
add
xchg
pop
and
adc
imul
xor
cmp
or
inc
aad
xor
xor
jbe
pop
les
ins
movs
outs
inc
jb
push
das
inc
(bad)
arpl
aam
and
pop
push
dec
aad
aas
sub
inc
ja
in
mov
test
sbb
fs
out
addr16
hlt
dec
mov
push
cmc
jne
inc
push
test
hlt
gs
out
mov
xchg
xchg
jne
xchg
mov
ss
and
movs
and
cmps
mov
pusha
xchg
push
mov
fbstp
mov
(bad)
lahf
scas
sti
inc
cmc
(bad)
std
push
leave
add
xor
sar
xor
jecxz
loop
leave
data16
out
je
and
adc
ficomp
pop
test
and
cmp
daa
xchg
es
or
adc
or
sub
movs
sub
and
or
pop
loopne
aad
xor
ss
jl
jno
jo
imul
das
push
(bad)
jle
fs
xor
push
ins
aad
aas
and
in
mov
test
push
bound
adc
pop
addr16
push
mov
pmaddwd
outs
push
lods
xchg
mov
test
push
mov
inc
mov
adc
hlt
mov
and
jo
inc
scas
movs
mov
cmps
cmps
cdq
xor
pusha
stos
push
clc
mov
xor
not
mov
and
xlat
scas
fld
(bad)
in
fadd
sti
xor
cmp
retf
add
fisttp
fbstp
les
cli
lahf
les
jnp
es
add
and
or
pop
cmc
inc
adc
push
adc
and
lds
and
and
jge
add
adc
adc
daa
xor
adc
les
nop
jb
push
inc
pop
lds
das
push
mov
aam
xor
push
popa
aad
aas
and
in
mov
test
ins
in
nop
push
addr16
hlt
dec
mov
inc
cmc
push
pop
pop
push
test
mov
push
hlt
gs
mov
int3
out
xchg
xchg
xchg
adc
inc
mov
adc
mov
xchg
and
jo
inc
out
xchg
and
cdq
cmps
xchg
xor
pusha
(bad)
push
mov
fbstp
inc
mov
(bad)
shr
push
rol
xor
cmc
mov
nop
fs
xor
add
loop
into
jmp
(bad)
je
and
adc
mov
pop
sub
add
and
or
sbb
or
sub
and
adc
sbb
das
cmps
sbb
loopne
aad
xor
xor
outs
push
push
les
jo
pop
inc
imul
inc
inc
addr16
and
push
das
aad
aas
sub
inc
ja
in
mov
test
sbb
inc
cmovp
push
addr16
hlt
push
mov
imul
pop
outs
push
xchg
xchg
mov
mov
test
push
cmps
xchg
jne
xchg
lea
div
mov
xchg
movs
mov
mov
cmps
mov
push
mov
fist
inc
fst
retf
and
aad
mov
push
xlat
add
xor
sar
aad
shl
lds
mov
leave
in
(bad)
je
and
adc
aad
les
ins
rol
in
add
jge
and
add
or
adc
xchg
aas
jg
mov
aaa
adc
xor
cmp
outs
and
cmp
push
daa
sbb
pop
loopne
aad
xor
adc
jl
ja
push
nop
jae
dec
inc
pop
lds
ds
fs
jg
dec
or
push
dec
aad
aas
inc
div
dec
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
or
dec
pop
outs
push
mov
push
mul
test
push
cmps
xchg
test
jmp
and
jo
inc
mov
iret
mov
xor
pusha
xchg
push
sti
mov
xor
in
out
inc
loopne
mov
ffree
rol
cld
inc
aad
in
in
add
push
(bad)
mov
in
shl
add
mov
out
je
and
adc
fcomp
jbe
xor
je
push
add
and
xor
adc
sub
movs
push
lock
sub
cmp
and
add
adc
add
mov
pop
adc
les
nop
ins
movs
pop
inc
push
lds
push
(bad)
jp
jg
dec
add
push
arpl
pop
aas
das
not
in
mov
test
pop
in
cmovns
and
jne
jge
jg
jg
or
pop
pop
outs
push
mov
push
test
add
add
lock
mov
mov
mov
pushf
and
mov
pusha
ret
push
mov
fistp
inc
les
leave
and
shr
out
retf
xor
icebp
mov
fisub
retf
add
loop
cmc
data16
out
je
and
adc
fcomp
or
in
add
or
cmp
adc
adc
jg
mov
aaa
add
and
cmp
addr16
cmp
aad
xor
add
ins
push
je
pop
nop
jo
dec
inc
jl
or
pop
(bad)
jne
addr16
and
push
das
aad
aas
push
test
in
mov
test
in
pcmpeqb
push
addr16
xchg
cmp
cmc
pop
pop
outs
push
int
mov
gs
test
push
mov
call
xchg
lea
icebp
mov
and
jo
inc
mov
fisub
and
mov
cmc
xlat
test
and
xchg
scas
int
hlt
(bad)
aad
leave
add
push
(bad)
mov
iret
fs
xor
add
out
aad
cli
out
je
and
adc
fstp
add
in
add
jge
aaa
pop
cmp
adc
cmp
sub
and
and
xor
pop
aad
xor
add
adc
les
dec
movs
dec
inc
lds
das
pop
(bad)
pop
inc
and
dec
add
ins
aad
aas
inc
test
in
mov
test
in
unpckhps
pop
addr16
hlt
or
or
push
mov
push
mov
sahf
test
push
scas
xchg
xchg
movs
movs
mov
and
jo
inc
lods
movs
mov
test
test
clc
mov
xor
in
in
inc
fcom
into
and
mov
mov
xor
cmp
fs
xor
fisttp
fbstp
cdq
adc
mov
pop
xor
and
cmp
push
add
jle
ds
arpl
adc
or
adc
push
lds
and
push
cmps
xor
cmp
xor
adc
outs
push
jbe
sub
inc
jno
push
das
push
(bad)
jae
pop
aam
or
push
dec
aad
aas
dec
div
ja
in
mov
test
pop
in
mulps
push
addr16
hlt
mov
js
pop
pop
imul
scas
push
lock
test
push
mov
inc
cmps
jne
xchg
in
adc
xchg
mov
and
jo
inc
mov
xchg
and
and
push
mov
fild
les
leave
and
xchg
scas
inc
(bad)
out
retf
add
push
std
mov
into
fs
xor
gs
jmp
and
adc
fcomp
jo
cmp
and
sbb
daa
xchg
pop
ds
add
popa
cmc
sbb
jg
mov
aaa
sbb
inc
lock
xor
dec
and
mov
loopne
aad
xor
push
(bad)
dec
push
push
les
imul
das
jl
arpl
aam
add
push
dec
aad
aas
push
test
ins
mov
test
inc
in
cvtps2pd
push
addr16
imul
push
add
push
jmp
add
mov
inc
loop
fist
jmp
stos
mov
and
jo
inc
mov
xchg
and
and
mov
push
xchg
xlat
mov
out
in
and
cmc
scas
hlt
inc
sti
(bad)
icebp
push
rol
mov
push
(bad)
mov
aam
in
retf
add
out
enter
les
mov
fcomp
sub
add
adc
adc
or
xor
adc
xchg
inc
jg
mov
aaa
pop
movs
inc
lock
movs
sbb
daa
sbb
adc
inc
aad
xor
ss
jl
jl
xchg
jae
dec
inc
cmp
push
das
jns
ja
daa
aam
add
push
ins
aad
aas
pop
not
dec
in
mov
test
in
nop
inc
addr16
hlt
adc
imul
xchg
xchg
test
push
sti
gs
test
push
mov
mov
jne
xchg
lock
(bad)
mov
and
jo
inc
xchg
movs
fbld
xchg
cmps
les
pusha
xchg
push
mov
fistp
inc
mov
korw
scas
ret
(bad)
cmps
push
repnz
xor
sti
mov
in
fs
xor
add
mov
cmc
iretw
out
je
and
adc
repnz
aam
aas
pop
test
and
cmp
jp
sbb
shl
pop
jg
mov
aaa
sub
and
cmp
push
loopne
aad
xor
aas
(bad)
imul
and
pop
lds
das
push
(bad)
jae
jg
inc
xor
push
(bad)
aad
aas
push
not
pop
in
mov
test
pop
in
punpckhdq
jnp
inc
hlt
ins
mov
dec
cmc
push
pop
or
add
push
cmc
mov
mov
xchg
xchg
jne
xchg
in
adc
mov
xchg
and
jo
inc
out
pushf
and
xchg
cmps
nop
xor
pusha
xchg
push
movs
mov
xor
rcl
test
mov
xchg
scas
in
inc
fld
stc
push
fld
(bad)
xor
fistp
out
xlat
xor
add
loop
leave
cmps
out
je
and
adc
(bad)
lahf
in
xchg
and
test
add
and
or
ss
and
push
mov
aaa
sub
inc
lock
and
adc
and
or
inc
aad
xor
or
dec
push
popa
les
push
lds
pop
(bad)
jb
pop
aam
add
das
aad
aas
jge
inc
ja
in
mov
test
jnp
xor
add
pop
addr16
hlt
push
mov
inc
cmc
inc
pop
outs
push
adc
gs
test
push
mov
cmps
adc
inc
stos
jne
xchg
call
mov
jo
inc
mov
fldenv
nop
cmps
xchg
xor
pusha
nop
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
jmp
aad
push
ret
jbe
not
add
ret
data16
fbstp
rcl
lahf
mov
(bad)
shl
adc
and
adc
pop
cmc
aaa
adc
and
movs
cmp
adc
movs
aaa
dec
sub
push
loopne
aad
xor
or
les
nop
cmp
jbe
inc
(bad)
push
inc
je
dec
sbb
push
ins
aad
aas
push
test
in
mov
test
inc
in
unpcklps
inc
addr16
hlt
push
mov
or
push
lods
xchg
cmc
add
push
mul
test
add
call
ss
mov
and
jo
inc
mov
mov
xor
pusha
mov
xor
in
out
inc
(bad)
adc
and
ret
inc
inc
out
aam
jmp
jmp
lods
push
sar
int
std
xor
add
mov
leave
data16
cmc
je
and
adc
cld
lahf
lea
jnp
and
sub
add
push
outs
and
rcl
jg
mov
aaa
shld
or
cmp
and
xor
dec
aad
xor
sbb
les
nop
ins
movs
push
das
inc
mov
inc
aam
xor
das
aad
aas
push
test
pusha
mov
test
inc
in
lsl
gs
hlt
push
mov
inc
cmc
pop
pop
push
add
push
mov
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
out
lahf
and
xchg
cmps
sahf
xor
pusha
movs
push
mov
fbstp
inc
aad
leave
and
xchg
scas
mov
push
int
stos
xor
les
shl
fadd
enter
shl
std
je
and
repnz
repz
and
sub
add
and
adc
adc
sbb
jg
mov
aaa
xor
lds
sbb
or
add
aaa
xor
push
(bad)
push
sub
movs
ins
inc
jb
push
das
dec
(bad)
push
inc
arpl
dec
sbb
push
sub
mul
inc
in
mov
test
popa
in
unpcklps
jnp
ja
push
mov
inc
cmc
push
pop
inc
push
adc
test
pushf
push
mov
cmps
adc
inc
xchg
jne
xchg
in
adc
mov
mov
mov
iret
and
cmps
xchg
pusha
adc
fistp
inc
mov
(bad)
xchg
scas
mov
push
leave
add
push
fnstsw
(bad)
fs
xor
add
loop
leave
mov
je
and
jne
lahf
hlt
xchg
and
sub
add
jge
adc
and
adc
push
mov
aaa
adc
sub
and
pop
cmps
xor
sbb
add
sub
and
sub
ins
push
imul
dec
inc
push
lds
push
mov
aam
add
push
ins
aad
aas
pop
test
in
mov
test
in
unpcklps
jge
pop
hlt
push
mov
or
and
inc
push
rcl
mul
test
ret
xchg
jne
xchg
lods
adc
lahf
mov
and
jo
inc
xchg
movs
test
xchg
cmps
cdq
xor
pusha
cmps
push
cli
mov
xor
hlt
xlat
jmp
out
jecxz
(bad)
korw
scas
mov
push
loop
mov
push
(bad)
mov
leave
fs
int3
add
loop
mul
out
je
and
adc
rcr
test
xor
dec
add
adc
xchg
or
(bad)
cmc
pop
adc
ds
aaa
das
movs
pop
lock
lds
and
cmps
add
loopne
aad
xor
adc
les
nop
ins
movs
pop
inc
pop
lds
das
inc
(bad)
jg
jg
push
and
push
xor
add
ja
in
mov
test
pop
in
nop
inc
pmuludq
jg
cmp
cmc
addr16
adc
fist
test
add
scas
xchg
jne
xchg
xchg
adc
mov
jo
inc
out
pushf
and
xchg
cmps
into
xor
pusha
xchg
push
div
mov
inc
int3
adc
and
xchg
scas
mov
test
(bad)
xor
in
mov
out
mov
retf
add
in
shl
(bad)
je
and
adc
repnz
xchg
xchg
xor
aaa
test
shl
in
add
and
or
xor
and
imul
xor
cmp
add
pop
mov
loopne
aad
xor
push
(bad)
ins
push
ins
les
inc
movs
dec
inc
js
or
pop
(bad)
jp
gs
add
push
das
aad
aas
test
in
mov
test
nop
outs
addr16
hlt
push
mov
jne
pop
pop
ins
push
mov
push
mov
nop
test
add
mov
inc
mov
adc
mov
and
movs
xchg
and
xchg
cmps
movs
xor
pusha
cmps
push
xchg
mov
xor
loopne
repz
mov
(bad)
xchg
scas
mov
push
retf
xor
cmp
fild
ret
data16
in
in
rcl
lahf
(bad)
xchg
and
sub
shl
adc
jge
and
sbb
adc
push
mov
aaa
aaa
movs
cmp
and
and
adc
inc
aad
xor
adc
jl
imul
dec
inc
jl
push
das
pop
mov
aam
or
push
ins
aad
aas
dec
test
in
mov
test
in
punpckldq
js
jnp
push
mov
dec
cmc
pop
pop
pop
push
mov
push
xchg
test
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
lods
movs
shl
xchg
cmps
mov
pusha
mov
mov
xor
cld
xlat
out
inc
mov
(bad)
shr
ficom
mov
push
(bad)
mov
xchg
xor
add
fisttp
fbstp
les
cli
lahf
les
jnp
and
push
add
xchg
pop
cmp
adc
es
aaa
movs
sub
and
sbb
adc
pop
aad
xor
sub
push
nop
imul
das
js
jnp
jg
dec
or
push
cs
aas
push
div
in
mov
test
in
packsswb
push
addr16
ins
mov
outs
cmc
and
push
add
push
cmc
gs
mov
push
call
jne
xchg
test
ss
xchg
and
jo
inc
out
movs
sahf
and
mov
pusha
fst
mov
xor
lock
test
mov
inc
inc
fcom
mov
push
fdivr
into
fbstp
xchg
add
ror
je
and
adc
fstp
add
in
add
and
or
cmp
sbb
jg
mov
aaa
or
and
and
add
dec
aad
xor
sbb
push
push
inc
les
inc
aas
lds
pop
(bad)
push
inc
addr16
sbb
push
das
aad
aas
aaa
test
in
mov
test
sbb
dec
cvtps2pd
push
addr16
hlt
inc
mov
popa
cmc
pop
pop
fs
xchg
xchg
mov
sti
push
hlt
gs
out
pop
mov
inc
mov
adc
stos
mov
and
jo
inc
mov
pushf
and
and
push
std
mov
xor
loopne
hlt
inc
ret
adc
and
xchg
scas
into
inc
sti
(bad)
(bad)
push
out
fidiv
ret
jbe
idiv
shl
mov
mov
retf
out
je
and
adc
fstp
cmp
ins
rcr
in
add
sbb
and
add
xchg
das
jg
mov
aaa
pop
movs
dec
lock
outs
and
sbb
pop
loopne
aad
xor
or
les
nop
jb
jge
imul
jb
and
dec
or
push
ins
aad
aas
jle
dec
ja
in
mov
test
in
unpckhps
push
addr16
hlt
push
mov
or
push
mov
mov
aam
mov
mov
mov
mov
inc
mov
adc
mov
jo
inc
out
fbld
xchg
cmps
cwde
xor
pusha
xchg
push
stc
mov
xor
xchg
xlat
in
inc
lods
adc
and
mov
stc
push
enter
(bad)
push
in
xlat
jbe
neg
fs
xor
add
out
cmc
mov
je
and
adc
fstp
sub
add
daa
xchg
pop
cmp
adc
adc
pop
lock
daa
and
and
or
cmp
or
push
(bad)
push
nop
dec
movs
adc
lds
das
push
(bad)
fs
push
aam
or
push
arpl
inc
aas
jae
pop
ja
in
mov
test
dec
in
lsl
pop
addr16
push
mov
inc
cmc
inc
pop
je
test
mov
mov
test
push
mov
movs
adc
inc
mov
adc
(bad)
mov
and
jo
inc
stos
movs
mov
es
cmps
sahf
xor
pusha
stos
push
test
xchg
push
(bad)
int
sti
adc
and
shr
push
jmp
mov
push
(bad)
mov
xchg
fs
xor
add
loope
jmp
out
je
and
adc
fcomp
add
add
and
or
add
sub
sub
adc
push
movs
inc
lock
xor
adc
sbb
and
xor
push
(bad)
ins
push
inc
les
xor
or
inc
mov
addr16
adc
push
sub
test
ins
mov
test
push
in
(bad)
out
addr16
hlt
inc
mov
push
cmc
dec
pop
inc
push
fist
mov
test
xchg
xchg
adc
inc
mov
adc
scas
mov
and
jo
inc
mov
iret
mov
xor
pusha
xchg
push
mov
fist
inc
fst
in
and
xchg
scas
test
xlat
push
leave
add
xor
fidivr
into
fs
xor
add
out
leave
data16
loop
retf
and
adc
fcomp
sub
ins
shl
in
add
sub
or
daa
cmc
sbb
cmp
movs
sub
and
push
cmps
sbb
sbb
pop
loopne
aad
xor
adc
dec
push
pop
les
nop
outs
movs
dec
inc
cmp
push
das
popa
(bad)
ja
jns
dec
add
push
dec
aad
aas
push
mul
in
mov
test
in
cmovb
inc
addr16
hlt
dec
mov
jno
and
outs
push
adc
gs
test
add
movs
xchg
jne
xchg
mov
lods
mov
and
jo
inc
lods
movs
pushf
and
xchg
cmps
xor
xchg
push
mov
fist
inc
mov
(bad)
mov
aam
aam
mov
push
(bad)
mov
leave
shl
cmc
add
jmp
out
je
and
adc
(bad)
lahf
out
xor
sub
add
and
or
push
inc
adc
ss
aaa
pop
movs
pop
lock
and
sbb
xor
pop
aad
xor
or
push
nop
inc
movs
cmovne
adc
pop
(bad)
ja
jg
inc
and
sub
add
push
not
adc
test
pop
in
sysret
out
addr16
dec
mov
inc
cmc
pop
pop
js
test
push
cmc
gs
clc
add
les
out
adc
(bad)
and
jo
inc
call
iret
stos
mov
pusha
rcl
xchg
xor
out
xlat
jecxz
mov
(bad)
xchg
scas
retf
inc
inc
stc
push
rol
(bad)
xor
(bad)
mov
iret
test
enter
fsub
(bad)
out
je
and
adc
fistp
daa
test
sbb
adc
and
aaa
rcl
add
sub
add
mov
aaa
adc
and
sbb
xor
xor
pop
(bad)
ins
push
popa
les
nop
xor
dec
inc
xor
inc
das
dec
(bad)
arpl
aam
add
push
jp
inc
aas
dec
test
in
mov
test
sbb
out
addr16
push
mov
inc
cmc
pop
pop
or
int
test
cwde
add
mov
jne
xchg
jmp
mov
and
jo
inc
lods
movs
fldenv
mov
pusha
xchg
push
mov
fistp
inc
cli
adc
and
std
scas
mov
push
rol
stos
xor
sar
xchg
fs
retf
add
out
cmc
out
les
sti
adc
mov
pop
sub
jg
jo
adc
and
adc
and
xchg
inc
jg
mov
aaa
sub
and
inc
cmps
sbb
pop
mov
loopne
aad
xor
adc
jae
imul
dec
inc
inc
lds
das
pop
(bad)
push
inc
fs
or
push
ins
aad
aas
test
in
mov
test
in
unpckhps
arpl
hlt
push
mov
or
push
lods
xchg
stos
add
push
fwait
gs
test
push
test
mov
adc
jmp
jo
inc
test
and
cmps
cdq
xor
pusha
retf
mov
xor
icebp
xlat
lds
shl
scas
mov
push
aam
mov
push
lds
leave
div
fild
fisttp
lock
and
adc
loop
(bad)
xchg
pop
pop
xor
jnp
pop
in
add
and
xchg
or
pop
cmc
inc
adc
imul
lock
daa
and
and
adc
add
daa
xor
sbb
push
nop
ins
movs
dec
inc
popa
lds
pop
(bad)
jnp
jg
dec
add
push
arpl
pop
aas
ins
neg
push
in
mov
test
inc
in
(bad)
out
addr16
hlt
ins
mov
push
cmc
pop
pop
push
add
push
and
out
fwait
push
scas
xchg
adc
mov
inc
mov
iret
call
pusha
lds
mov
xor
loop
lods
inc
mov
lds
inc
test
fcom
mov
push
(bad)
mov
into
fs
jmp
(bad)
out
je
and
adc
fcomp
aaa
test
in
add
xchg
pop
ds
add
or
sbb
jg
mov
aaa
sub
lds
pop
movs
and
daa
pop
mov
loopne
aad
xor
push
(bad)
imul
movs
dec
inc
jb
adc
dec
(bad)
push
inc
arpl
push
cmp
push
pop
aad
aas
push
not
in
mov
test
popa
in
sysret
out
addr16
hlt
push
mov
dec
cmc
jb
jge
ficom
sti
lods
test
add
mov
inc
mov
adc
push
mov
sahf
movs
mov
and
lahf
xor
sahf
xlat
jmp
and
xchg
scas
cmc
inc
rol
push
rol
xor
hlt
mov
shl
enter
fldenv
(bad)
clc
repz
je
and
adc
fistp
jno
adc
xor
adc
and
daa
pop
and
adc
ds
aaa
adc
push
lock
add
dec
and
or
pop
aad
xor
add
ins
push
ins
les
inc
movs
adc
cmp
inc
das
ds
inc
jnp
dec
and
dec
push
ins
aad
aas
push
div
in
mov
test
in
unpckhps
inc
addr16
dec
mov
pop
cmc
pop
pop
pop
push
movs
xchg
mov
adc
add
lds
test
popf
xchg
mov
mov
mov
lods
movs
les
mov
pusha
cmps
push
test
scas
push
in
hlt
inc
lods
adc
and
call
(bad)
fist
movs
xor
(bad)
mov
lds
retf
in
gs
clc
data16
fbstp
std
adc
rcr
xor
push
rcl
in
add
and
or
adc
ss
aaa
or
and
push
cmps
or
inc
mov
loopne
aad
xor
xor
push
nop
ins
movs
adc
lds
push
(bad)
pop
inc
pop
aam
add
push
arpl
inc
aas
pop
neg
push
in
mov
test
jge
push
lsl
outs
addr16
hlt
dec
mov
inc
cmc
push
pop
jo
scas
xchg
lods
add
push
repz
out
mov
adc
inc
mov
adc
xchg
mov
and
jo
inc
out
pushf
and
mov
mov
mov
xor
lock
test
std
inc
xchg
scas
mov
push
int
jmp
sti
aad
push
lds
int
div
fadd
loop
iret
movs
out
je
and
adc
fstp
or
in
add
and
adc
adc
add
movs
pop
lock
movs
jne
cmp
es
aad
xor
cmp
jl
push
movs
pop
inc
(bad)
lds
push
arpl
aam
add
push
sub
div
push
in
mov
test
jae
aas
cmovp
inc
addr16
sbb
jge
pop
jne
cmc
pop
pop
pop
push
fist
mov
add
cmps
xchg
jne
xchg
mov
cmp
mov
cmps
inc
scas
movs
test
mov
lahf
es
pusha
mov
xor
loopne
call
and
xchg
scas
mov
push
leave
add
push
les
(bad)
fidiv
loope
lock
test
je
and
jne
lahf
call
test
in
add
sbb
rol
xor
cmp
movs
adc
xor
outs
and
cmp
xor
cs
loopne
aad
xor
pop
(bad)
adc
les
nop
arpl
jle
push
mov
aam
or
push
ins
aad
aas
push
test
in
mov
test
outs
in
unpcklps
inc
addr16
hlt
push
mov
or
jbe
inc
push
lods
xchg
sahf
add
push
mov
mov
mov
adc
inc
mov
adc
mov
mov
jo
inc
mov
shl
mov
pusha
retf
push
cli
mov
xor
in
out
inc
xlat
adc
and
xchg
scas
out
loop
xlat
push
mov
lds
fidivr
nop
fs
xor
add
fimul
fbstp
aam
out
shl
lahf
retf
xchg
adc
xor
jg
and
ds
and
jl
sbb
cmp
adc
daa
lock
and
pop
cmps
bound
pop
mov
loopne
aad
xor
adc
les
jo
push
inc
jno
adc
popa
mov
aam
cmp
jle
js
push
test
push
mov
test
jns
sysretw
out
addr16
mov
js
pop
pop
push
add
push
movs
mov
std
push
ret
adc
inc
mov
adc
mov
xchg
and
jo
inc
mov
pushf
es
cmps
xchg
pusha
xchg
push
mov
(bad)
push
hlt
xlat
test
leave
inc
cmc
scas
cmc
inc
fcmovnb
out
int
(bad)
xor
repnz
int
(bad)
xor
add
loop
into
data16
(bad)
je
and
adc
movs
lahf
aad
and
jle
sbb
add
js
sbb
ds
and
popa
cmc
sbb
jg
mov
aaa
xor
and
add
adc
adc
aaa
xor
adc
les
imul
arpl
aam
and
sbb
aad
aas
push
test
in
mov
test
jg
pop
cmovo
push
addr16
hlt
dec
mov
dec
cmc
je
inc
push
test
hlt
gs
test
push
cmps
xchg
jne
xchg
jecxz
mov
jmp
mov
mov
and
test
xchg
push
xchg
mov
xor
loopne
hlt
inc
sti
adc
and
enter
lock
cmps
push
retf
xor
fdivr
xlat
fs
add
fisttp
int3
je
and
adc
int
(bad)
xchg
push
pop
or
add
cmp
daa
pop
ds
or
add
xchg
and
mov
aaa
xor
and
and
adc
and
or
adc
jo
push
les
nop
imul
das
pop
(bad)
je
dec
aam
add
push
jl
inc
aas
pop
test
push
mov
test
in
unpckhps
inc
addr16
push
mov
push
cmc
popw
push
add
push
mov
add
cmps
xchg
test
mov
movs
mov
and
jo
inc
lods
movs
popf
and
lods
cmps
mov
mov
push
push
test
in
xlat
jmp
fst
fisub
out
mov
push
aam
mov
push
cmp
fs
xor
add
loop
(bad)
data16
(bad)
les
fcomp
ins
test
and
pop
add
daa
xchg
pop
pop
xchg
push
rcl
inc
adc
ds
aaa
push
movs
xor
sbb
imul
add
or
pop
aad
xor
adc
les
ins
movs
adc
cmp
push
das
aas
(bad)
jae
jle
dec
add
push
dec
aad
aas
dec
neg
push
in
mov
test
push
in
minps
arpl
hlt
mov
dec
cmc
addr16
inc
push
adc
mov
mov
fwait
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
mov
mov
pusha
test
fwait
mov
xor
hlt
xlat
repnz
les
sti
and
loop
mov
push
jmp
enter
jmp
jbe
imul
fs
enter
shl
(bad)
out
je
and
adc
fcomp
das
test
jne
push
add
and
or
sbb
sbb
jg
mov
aaa
adc
and
pop
cmps
adc
loopne
aad
xor
push
(bad)
push
push
xor
ja
jb
jp
pop
lds
das
cmp
arpl
aam
add
push
and
add
push
test
ins
mov
test
push
in
nop
push
addr16
hlt
push
mov
jno
pop
pop
or
pushf
xchg
stos
add
push
mov
mov
popf
adc
inc
mov
test
nop
mov
int
mov
iret
fldenv
and
test
push
lahf
xlat
jmp
and
nop
scas
cli
inc
inc
icebp
push
loope
mov
push
loopne
in
jbe
idiv
fs
in
add
enter
repnz
je
and
adc
fcomp
das
test
shl
in
add
and
and
adc
xchg
push
jg
mov
aaa
adc
adc
xor
outs
and
sbb
sub
pop
aad
xor
xor
jl
imul
dec
inc
and
outs
das
pop
(bad)
je
je
imul
aad
aas
push
test
in
mov
test
in
punpckhdq
push
addr16
hlt
or
or
push
scas
xchg
test
and
mov
push
add
jne
xchg
xchg
adc
lahf
mov
and
jo
inc
stos
movs
lahf
and
cwde
cmps
movs
xor
pusha
xchg
push
movs
mov
xor
jecxz
cld
inc
lods
adc
and
mov
stc
push
lds
lds
loopne
in
jbe
imul
fs
xor
add
in
xchg
data16
fdiv
les
loopne
les
data16
in
add
or
or
adc
ds
aaa
push
movs
adc
sbb
xor
and
adc
pop
aad
xor
or
les
dec
movs
pop
inc
xor
adc
push
(bad)
outs
inc
push
aam
add
push
arpl
pop
aas
inc
neg
dec
in
mov
test
adc
jne
dec
out
outs
hlt
ins
mov
push
push
movs
xchg
scas
add
push
mov
test
add
mov
inc
mov
adc
mov
xchg
and
jo
inc
out
cdq
and
mov
xor
mov
xor
hlt
xlat
hlt
inc
int3
adc
and
xchg
scas
mov
push
int
push
test
call
add
loop
retf
out
je
and
jne
lahf
lds
or
add
or
rcr
add
add
movs
adc
push
lds
add
or
sub
or
pop
cmp
ins
push
les
jae
pop
inc
(bad)
lds
cmp
addr16
jb
dec
add
push
xor
add
and
in
mov
test
gs
bound
jnp
pop
addr16
hlt
dec
mov
dec
cmc
bound
outs
push
ficom
icebp
mov
mov
adc
inc
mov
adc
mov
jo
inc
mov
xchg
and
and
mov
pushf
fistp
inc
mov
(bad)
into
scas
aam
sti
(bad)
mov
xor
ret
jbe
not
shl
fild
mov
out
je
and
adc
ficomp
adc
push
shl
add
and
daa
pop
and
adc
ds
aaa
push
movs
inc
lock
movs
sbb
daa
sbb
or
cmp
mov
pop
cs
jl
ins
les
nop
jae
or
cmp
adc
push
(bad)
addr16
fs
add
push
arpl
inc
aas
outs
not
in
mov
test
dec
in
unpcklps
arpl
hlt
push
mov
push
cmc
inc
pop
jns
mov
push
mul
test
push
test
jmp
dec
and
jo
inc
lods
movs
cwde
and
test
fst
mov
xor
out
rol
into
and
mov
stc
push
enter
vpsrad
mov
shl
add
fisttp
fbstp
out
out
lea
lahf
aam
xor
aaa
test
shl
in
add
cmp
adc
cmp
inc
adc
ds
aaa
and
lds
and
and
xor
pop
aad
xor
dec
(bad)
inc
push
jbe
sub
pop
movs
adc
and
jae
push
jae
jl
push
and
pop
push
and
inc
aas
push
not
push
in
mov
test
in
packuswb
push
addr16
hlt
ins
mov
pop
cmc
pop
pop
push
add
push
jmp
add
scas
xchg
jne
xchg
cdq
adc
xor
inc
in
movs
test
test
pushf
push
mov
(bad)
push
hlt
xlat
hlt
inc
repnz
and
(bad)
scas
mov
push
enter
not
loop
(bad)
mov
into
fs
add
jmp
je
and
adc
fcomp
push
test
rcr
in
add
and
xchg
or
cmp
sbb
jg
mov
aaa
pop
movs
and
sbb
or
pop
movs
es
and
or
pop
aad
xor
sub
dec
push
popa
les
je
push
inc
cmp
pop
das
dec
(bad)
arpl
aam
add
push
inc
aad
aas
sub
inc
ja
in
mov
test
nop
pop
addr16
hlt
push
mov
dec
cmc
bound
outs
push
test
cmc
xchg
scas
push
xchg
xchg
adc
inc
mov
adc
mov
jo
inc
lods
movs
lods
and
scas
cmps
xchg
pusha
mov
xor
loopne
mov
mov
(bad)
aam
mov
push
out
add
push
ret
jbe
not
shl
fild
in
vphaddudq
xor
adc
ficomp
xor
ins
rcl
in
add
and
and
aas
cmc
sbb
cmp
cs
lds
sbb
xor
xor
xor
or
je
imul
dec
inc
lds
das
pop
mov
aam
xor
push
ins
aad
aas
das
test
in
mov
test
(bad)
in
lsl
and
hlt
addr16
inc
jne
cmc
inc
pop
outs
push
lods
xchg
movs
add
push
cmc
gs
test
push
mov
mov
jne
xchg
jmp
movs
mov
and
jo
inc
mov
mov
es
cmps
nop
xor
pusha
xchg
push
stos
mov
xor
int
icebp
inc
lods
adc
and
xchg
scas
mov
in
mov
fcom
mov
fisub
lds
mov
leave
out
out
je
and
adc
lds
adc
add
adc
xchg
sub
(bad)
cmc
inc
adc
ds
aaa
aas
movs
pop
lock
lds
adc
xor
add
xor
or
pusha
push
jne
pop
nop
ins
movs
adc
dec
lds
inc
(bad)
pusha
inc
pop
aam
sbb
arpl
dec
aas
push
not
dec
in
mov
test
push
in
sysret
out
addr16
xchg
imul
js
push
add
push
mul
test
push
ret
adc
inc
test
xchg
mov
fdivr
jmp
jo
inc
cwde
movs
mov
es
pusha
fst
mov
xor
rcl
int
mov
lds
inc
inc
(bad)
push
in
add
push
int
shl
test
add
lods
(bad)
out
je
and
jne
lahf
lds
pusha
rcl
test
cmp
push
rcr
add
jg
mov
aaa
and
and
cmp
sbb
add
ds
aad
xor
adc
les
movs
pop
inc
jno
inc
das
pop
(bad)
jle
push
aam
add
push
das
aad
aas
sub
in
mov
test
push
in
cvtps2pd
pop
addr16
hlt
push
mov
inc
cmc
pop
pop
inc
push
adc
gs
test
push
lahf
xchg
jne
xchg
mov
ss
jo
inc
lods
movs
xchg
and
and
into
xor
aam
hlt
inc
mov
lds
inc
loop
cmps
push
std
add
push
ret
jbe
imul
fs
xor
add
ror
(bad)
je
and
adc
std
lahf
(bad)
xchg
and
sub
add
and
push
rcl
pop
adc
imul
outs
and
cmp
adc
push
mov
loopne
aad
xor
sub
jl
jb
fs
dec
movs
dec
inc
pop
lds
das
pop
mov
aam
and
push
ins
aad
aas
inc
test
in
mov
test
push
out
addr16
hlt
push
mov
or
push
pop
outs
push
lods
xchg
lods
add
push
mul
test
mov
mov
jne
xchg
xchg
adc
movs
mov
and
jo
inc
mov
iret
cdq
and
leave
xor
in
out
inc
out
leave
and
mov
out
repz
xor
(bad)
mov
leave
fs
xor
fimul
xchg
loop
div
cld
jne
lahf
les
sbb
and
adc
outs
and
or
adc
ds
aaa
xor
lds
and
sbb
xor
add
xor
adc
les
nop
xor
pop
das
dec
(bad)
jae
jg
outs
add
push
jb
pusha
aas
push
test
in
mov
test
adc
pop
packssdw
push
addr16
hlt
push
mov
dec
cmc
arpl
push
add
push
cli
gs
test
push
scas
xchg
adc
xchg
and
jo
inc
out
pushf
and
xchg
cmps
mov
test
mov
xor
not
test
mov
inc
inc
out
rol
div
std
mov
shl
xchg
add
jecxz
enter
(bad)
je
and
adc
aam
in
and
aaa
test
in
add
and
jl
sbb
aaa
adc
or
sub
and
sub
push
loopne
aad
xor
adc
ins
push
push
les
jo
or
lds
pop
mov
addr16
adc
push
sub
push
aas
push
test
ins
mov
test
jb
dec
lsl
inc
addr16
hlt
sbb
bound
pop
pop
outs
push
(bad)
xchg
mov
in
push
lea
test
push
mov
popf
adc
inc
mov
adc
icebp
mov
and
jo
inc
xchg
movs
cmps
and
nop
cmps
mov
push
mov
fist
inc
mov
(bad)
nop
scas
mov
push
rol
retf
aad
push
loopne
in
jbe
test
gs
enter
les
mov
aam
in
and
xor
in
add
and
xchg
xor
sbb
aaa
adc
cmp
daa
lock
lds
and
cmp
aas
daa
sbb
pop
loopne
aad
xor
adc
jl
dec
les
jae
pop
inc
cmp
adc
inc
(bad)
addr16
data16
add
inc
aad
aas
push
mul
(bad)
in
mov
test
pop
in
movd
ja
inc
hlt
dec
mov
dec
cmc
jbe
or
test
stos
gs
test
push
mov
inc
out
mov
out
movs
mov
and
jo
inc
test
iret
mov
xor
pusha
test
mov
xor
in
rol
and
mov
stc
push
leave
add
xor
in
in
jbe
div
fnsave
xchg
add
lds
loope
xlat
and
adc
hlt
lahf
iret
xchg
push
pop
sbb
jnp
adc
cmp
sbb
jge
and
inc
adc
imul
lock
lds
and
sbb
mov
loopne
aad
xor
or
dec
push
jbe
cmp
cmp
push
das
inc
(bad)
jle
push
aam
add
push
arpl
inc
aas
dec
neg
push
in
mov
test
adc
pusha
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
or
test
scas
add
push
xchg
test
push
mov
mov
jne
xchg
mov
xor
inc
out
(bad)
xchg
cmps
shl
xchg
push
mov
fistp
inc
loop
into
and
xchg
scas
mov
mov
icebp
xor
in
mov
lahf
fnsave
xchg
add
loope
ret
mov
je
and
adc
fistp
aaa
test
sbb
push
add
and
or
add
and
imul
xor
and
adc
pop
aad
xor
sub
ins
push
aas
les
jo
pop
inc
pop
lds
pop
(bad)
jg
pop
aam
adc
push
cs
aas
dec
not
adc
ins
mov
test
push
in
punpckhbw
push
addr16
hlt
jno
inc
xchg
jg
inc
cmc
jb
push
add
push
xchg
mov
clc
push
mov
inc
xchg
xchg
stos
adc
movs
mov
and
jo
inc
mov
mov
xchg
cmps
xor
xchg
push
test
mov
inc
sti
adc
and
xchg
scas
mov
push
rol
xor
sar
ret
xor
add
in
sahf
data16
les
rcl
out
call
test
and
sub
add
add
rol
and
aaa
xor
and
aas
cmps
adc
loopne
aad
xor
adc
jno
imul
js
cmp
adc
inc
addr16
adc
push
ins
aad
aas
dec
test
in
mov
test
sbb
bound
pop
out
addr16
hlt
push
mov
pop
cmc
pop
pop
or
lods
xchg
test
gs
test
push
cmps
xchg
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
fisub
scas
cmps
test
pusha
xchg
push
movs
mov
xor
cld
xlat
out
inc
cmps
adc
and
ret
inc
rol
iret
push
aam
mov
push
(bad)
mov
leave
fs
xor
add
fisttp
div
ret
adc
(bad)
lahf
repz
xor
aaa
test
ror
in
add
and
or
adc
ds
aaa
pop
movs
cmp
sbb
xor
cmps
add
loopne
aad
xor
add
les
nop
ins
movs
push
inc
cmp
adc
push
mov
aam
sub
pop
push
(bad)
aad
aas
push
not
ins
in
mov
test
imul
jae
inc
hlt
dec
mov
or
addr16
pop
push
test
scas
add
push
mov
add
mov
inc
xchg
jne
xchg
lock
mov
rol
movs
(bad)
xchg
cmps
cwde
xor
pusha
mov
xor
(bad)
xlat
out
inc
mov
lds
inc
inc
std
push
xlat
add
xor
std
mov
into
shl
xchg
add
mov
enter
fidiv
(bad)
adc
fcomp
aaa
test
jbe
push
add
xor
pop
pop
adc
or
sbb
xchg
push
jg
mov
aaa
or
and
cmps
sbb
loopne
aad
xor
push
(bad)
ins
push
jl
pop
nop
jae
jo
jb
or
dec
(bad)
arpl
aam
and
pop
push
sub
jo
push
test
in
mov
test
jns
pop
andps
pop
addr16
hlt
push
mov
adc
and
outs
push
adc
test
mov
xchg
xchg
jne
xchg
mov
mov
mov
popf
movs
xchg
and
and
mov
ret
inc
mov
(bad)
in
aam
icebp
(bad)
into
push
icebp
add
push
ret
jbe
not
(bad)
mov
icebp
out
je
and
jne
lahf
int3
xchg
and
sub
add
daa
xchg
pop
es
or
xor
sbb
jg
mov
aaa
or
and
cmp
sbb
adc
xor
adc
inc
push
xor
cmp
cmp
or
popa
(bad)
ja
pusha
aam
add
push
sub
imul
ja
in
mov
test
in
cmovs
inc
addr16
push
mov
jb
popw
outs
push
xchg
mul
test
push
mov
mov
jne
xchg
jmp
cmps
mov
and
jo
inc
out
movs
test
fwait
cmps
cdq
xor
pusha
cmps
push
mov
xor
xlat
hlt
inc
lods
adc
and
mov
xlat
push
aam
cmps
xor
cmp
div
jecxz
stos
in
fisttp
iret
je
and
adc
mov
pop
pop
test
and
adc
sub
xadd
cmc
inc
adc
ds
aaa
xor
lds
and
cmp
or
or
daa
xor
adc
les
nop
jo
jp
pop
lds
das
inc
(bad)
push
inc
jg
dec
and
pop
push
arpl
jp
push
neg
pop
in
mov
test
sbb
js
inc
hlt
dec
mov
or
addr16
js
mov
test
push
hlt
cmps
test
push
into
xchg
adc
mov
jo
inc
mov
test
xchg
cmps
popf
xor
pusha
xchg
push
mov
fistp
inc
rcl
and
xchg
scas
fild
(bad)
xlat
push
int
mov
push
(bad)
mov
into
fs
xor
add
mov
out
data16
out
je
and
adc
(bad)
lahf
lds
pusha
shl
in
add
daa
xchg
pop
ds
or
sub
sub
gs
aaa
aas
movs
adc
sbb
xor
and
push
loopne
aad
xor
cmp
imul
sub
inc
jb
adc
je
arpl
aam
add
push
imul
aas
dec
test
in
mov
test
sbb
out
addr16
hlt
push
push
xchg
jg
js
jp
outs
push
xchg
xchg
mov
push
repz
std
add
mov
inc
xchg
jne
xchg
mov
mov
mov
and
jo
inc
xchg
movs
xchg
and
and
int3
xor
in
xlat
hlt
inc
mov
lds
inc
out
loope
leave
add
push
sar
div
mov
fsub
loop
int
rcl
lahf
(bad)
xchg
add
sub
ins
shl
push
outs
jne
daa
pop
and
cmc
sbb
cmp
movs
sbb
adc
movs
aas
dec
cmp
sbb
add
xor
adc
push
push
imul
dec
inc
and
dec
das
addr16
cmova
dec
add
push
ins
aad
aas
push
test
in
mov
test
in
movq
outs
addr16
inc
mov
jg
pop
pop
outs
push
test
push
hlt
gs
out
test
cdq
xchg
popf
xchg
mov
movs
mov
and
jo
inc
in
movs
mov
mov
ret
es
cmps
cdq
xor
pusha
xchg
mov
xor
jecxz
mov
lods
adc
and
xchg
scas
mov
push
aam
movs
xor
(bad)
mov
leave
fs
xor
add
retf
data16
fbstp
adc
and
or
in
add
and
or
adc
xor
add
or
and
pop
cmps
xor
sbb
push
loopne
aad
xor
adc
les
nop
movs
adc
cmp
imul
(bad)
jo
push
aam
or
push
arpl
inc
aas
inc
imul
ja
in
mov
test
pop
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
push
push
lods
xchg
stos
add
push
mov
add
scas
xchg
jne
xchg
mov
fwait
dec
and
jo
inc
mov
pushf
and
xchg
cmps
sahf
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
(bad)
scas
mov
push
int
mov
push
ret
jbe
test
add
call
out
je
and
adc
out
les
popa
rcl
in
add
xchg
pop
aaa
xchg
or
sbb
push
adc
cmp
sub
or
sub
inc
movs
jne
inc
cmps
sbb
loopne
aad
xor
adc
push
push
popa
les
inc
jno
arpl
pusha
(bad)
pop
inc
push
aam
add
push
inc
aad
aas
jne
dec
ja
in
mov
test
pop
in
lsl
inc
addr16
push
mov
or
cmp
outs
push
(bad)
xchg
xchg
add
push
mov
mov
add
xchg
jne
xchg
mov
mov
mov
call
iret
cwde
and
push
mov
fistp
inc
mov
(bad)
fisubr
loop
loope
mov
push
ret
jbe
not
xlat
xor
add
out
in
out
les
ret
cmc
int3
jne
lahf
rcl
add
add
xor
daa
pop
and
adc
cmp
push
lock
movs
sub
cmps
sbb
lfs
aad
xor
adc
jg
ja
sub
inc
cmp
adc
pop
(bad)
pop
inc
fs
and
sbb
aad
aas
pop
test
in
mov
test
sbb
sub
jl
push
addr16
hlt
jl
inc
xchg
jns
push
push
lods
xchg
mov
gs
mov
shr
lahf
push
add
mov
cmps
mov
and
jo
inc
lods
movs
(bad)
and
xchg
cmps
ret
pusha
xchg
push
mov
cdq
push
in
xlat
out
inc
lods
adc
and
mov
rcl
xor
lds
aam
fnsave
nop
add
jmp
je
and
adc
rcr
test
adc
test
or
or
adc
ds
aaa
cmp
pop
lock
movs
and
cmps
das
daa
add
push
loopne
aad
xor
adc
les
movs
pop
inc
aas
lds
das
push
(bad)
popa
inc
inc
aam
add
push
arpl
inc
aas
jno
push
ja
in
mov
test
in
(bad)
out
addr16
hlt
dec
mov
jo
pop
pop
outs
push
mov
xchg
gs
cmps
add
into
xchg
mov
(bad)
mov
and
jo
inc
out
xchg
and
mov
mov
pusha
mov
mov
fild
mov
(bad)
xchg
scas
mov
push
into
add
push
mov
mov
enter
fbld
(bad)
iret
data16
xor
adc
repnz
out
xchg
xor
aaa
test
and
push
add
add
aaa
pop
ds
xor
or
add
movzx
pop
movs
and
sub
movs
xor
cmps
sbb
loopne
aad
xor
push
(bad)
outs
push
dec
les
jo
js
pop
lds
push
dec
inc
addr16
and
jo
ins
test
in
mov
test
inc
in
lsl
push
addr16
push
mov
inc
cmc
push
pop
push
push
mov
mov
sti
push
test
mov
std
add
test
mov
adc
xor
inc
xchg
frstor
and
(bad)
xor
(bad)
xlat
retf
adc
and
xchg
scas
clc
inc
sti
(bad)
cli
push
lds
mov
push
ret
jbe
not
add
enter
(bad)
les
out
clc
cmc
loop
rcr
test
sbb
or
and
push
rcl
adc
mov
aaa
push
movs
sub
and
add
sbb
sbb
xor
adc
jle
inc
les
nop
ja
adc
cmp
push
das
pop
mov
aam
add
push
dec
aad
aas
jnp
inc
ja
in
mov
test
jb
popa
nop
ja
pop
hlt
sbb
pop
xchg
jnp
adc
popw
outs
push
stos
xchg
icebp
add
push
mul
test
push
add
mov
test
jmp
and
jo
inc
movs
movs
mov
cmps
iret
sahf
es
cmps
test
pusha
xchg
push
div
test
int3
xlat
out
inc
repz
and
xchg
scas
mov
push
aam
jmp
leave
aad
push
(bad)
mov
leave
xor
add
int
retf
out
je
and
adc
fcomp
adc
add
and
or
adc
cmp
movs
inc
lock
and
and
adc
push
aad
xor
aas
(bad)
push
nop
dec
movs
dec
inc
xor
ins
das
push
(bad)
outs
inc
jnp
dec
add
push
arpl
pop
aas
das
neg
push
in
mov
test
dec
in
lsl
and
mov
push
cmc
pop
pop
pop
push
xlat
xchg
scas
add
push
mul
test
push
scas
xchg
jne
xchg
jecxz
xchg
(bad)
jmp
jo
inc
mov
iret
fbld
xchg
cmps
lahf
xor
pusha
xchg
push
mov
fistp
inc
lods
adc
and
in
scas
retf
inc
inc
rcl
xor
fdivr
into
fs
xor
add
int3
(bad)
loop
shl
je
and
jne
lahf
not
daa
rcr
in
add
and
xchg
xadd
add
mov
aaa
xor
and
sbb
push
loopne
aad
xor
push
(bad)
outs
push
ins
les
movs
dec
inc
cmp
adc
dec
(bad)
pusha
inc
cmp
mov
push
dec
aad
aas
push
div
dec
in
mov
test
push
in
nop
push
addr16
hlt
ja
bound
pop
pop
ins
push
mov
hlt
pop
add
xchg
adc
inc
movs
jne
xchg
hlt
adc
mov
and
movs
xchg
and
(bad)
cmps
xchg
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
shr
not
jmp
fcmovbe
loope
ret
jbe
not
fs
add
aam
fldenv
out
je
and
adc
repz
(bad)
xchg
and
test
in
add
and
xchg
add
sbb
sbb
push
push
aaa
xor
lds
and
cmps
adc
sbb
pavgb
or
pop
adc
inc
push
imul
dec
inc
cmp
inc
das
pop
(bad)
bound
aam
add
push
jl
inc
aas
push
test
in
mov
test
in
addps
inc
addr16
hlt
or
pop
cmc
pop
pop
add
movs
xchg
inc
push
mul
test
add
into
xchg
test
mov
movs
mov
and
jo
inc
mov
scas
and
mov
pusha
retf
mov
xor
in
call
and
ret
inc
mov
push
retf
add
push
fstp
fsub
lds
fisttp
fbstp
in
int
ret
jne
lahf
les
jg
jo
xor
jg
adc
jle
xor
fs
or
pop
cmc
sub
aas
mov
aaa
shld
lds
and
and
adc
pop
aad
xor
adc
je
jbe
es
ins
movs
adc
and
dec
das
push
(bad)
jno
and
dec
add
push
arpl
pop
aas
neg
push
in
mov
test
push
out
addr16
sbb
inc
xchg
jnp
push
cmc
pop
pop
push
mov
push
stos
gs
out
add
xchg
adc
inc
mov
adc
lea
mov
mov
iret
xchg
es
cmps
sahf
xor
pusha
mov
xor
ret
inc
mov
lds
inc
test
mov
push
(bad)
mov
jmp
add
loope
mul
out
je
and
adc
cmps
lahf
out
xchg
daa
pop
jbe
sbb
add
and
jae
xor
pop
adc
push
mov
aaa
push
movs
pop
lock
xor
pop
movs
sub
and
or
dec
aad
xor
adc
jbe
popa
les
nop
pop
movs
dec
inc
cmp
push
das
pop
(bad)
arpl
aam
add
push
inc
aas
dec
mul
inc
in
mov
test
pusha
in
lsl
outs
addr16
sbb
bound
pop
pop
pop
push
test
mov
mov
out
mov
adc
inc
xchg
jne
xchg
xchg
adc
mov
test
jo
inc
cmps
movs
mov
mov
cmps
test
mov
xor
retf
inc
mov
(bad)
iret
scas
mov
push
mov
mov
push
ret
jbe
not
fs
xor
add
mov
out
je
and
jne
lahf
(bad)
xchg
xor
and
aaa
shl
in
add
daa
xchg
rcl
jg
mov
aaa
push
movs
adc
and
and
adc
push
aad
xor
cs
jl
imul
dec
inc
jno
inc
das
pop
(bad)
bound
aam
add
push
ins
aad
aas
ins
not
dec
in
mov
test
in
unpckhps
pop
addr16
hlt
push
mov
dec
cmc
pop
pop
outs
push
adc
gs
push
mov
nop
adc
inc
mov
adc
pushf
mov
and
jo
inc
lods
movs
fbld
xchg
cmps
fnstenv
pusha
xchg
push
in
mov
push
rcl
test
fiadd
scas
std
inc
aad
stc
push
cld
add
xor
(bad)
mov
out
fs
xor
add
in
retf
out
je
and
adc
mov
pop
adc
add
jp
cmp
cmp
adc
ds
aaa
and
and
pop
cmps
xor
add
or
and
mov
pop
adc
les
inc
movs
push
inc
jno
adc
pop
mov
jg
dec
sbb
push
sub
inc
aas
pop
div
ja
in
mov
test
push
in
cmovns
push
addr16
push
mov
or
pop
pop
push
xchg
xchg
scas
add
push
mov
add
scas
xchg
jne
xchg
mov
mov
xchg
and
jo
inc
out
sahf
and
mov
mov
shl
push
(bad)
mov
xor
(bad)
test
loop
fild
stc
push
out
icebp
xor
ret
mov
int3
xlat
xor
add
jecxz
lds
out
je
and
jne
lahf
lds
pusha
rcr
in
add
sub
jo
adc
sub
push
mov
aaa
shld
sbb
adc
dec
aas
cmps
sbb
loopne
aad
xor
push
(bad)
inc
push
inc
les
movs
pop
inc
jns
imul
dec
aam
add
push
outs
aad
aas
push
test
in
mov
test
push
in
movd
push
addr16
hlt
ja
ja
jne
arpl
pop
pop
push
add
push
mov
add
mov
inc
mov
adc
lea
xchg
inc
mov
fisub
and
push
sti
mov
xor
loopne
hlt
inc
fist
in
and
std
scas
mov
push
leave
add
push
fdivr
(bad)
fs
xor
add
les
test
(bad)
adc
fstp
or
sub
add
daa
xchg
pop
and
or
pop
cmc
cs
sbb
xor
push
lds
and
inc
cmps
sbb
sbb
xor
adc
dec
push
inc
les
nop
jbe
dec
inc
cmp
jbe
pop
mov
dec
mov
push
ins
aad
aas
sub
dec
ja
in
mov
test
jp
sub
pop
out
addr16
push
mov
pop
cmc
pop
pop
ja
movs
xchg
pop
push
lock
test
push
mov
inc
mov
adc
lods
mov
and
jo
inc
out
fisub
xchg
cmps
cdq
xor
pusha
mov
cli
mov
xor
int
out
inc
lods
adc
inc
xchg
scas
sti
inc
sti
(bad)
stc
push
retf
add
xor
loop
in
jbe
not
fnstenv
lds
out
(bad)
hlt
mul
les
loop
in
fidiv
lahf
retf
xchg
movhps
jnp
and
adc
sbb
sbb
adc
cmp
movs
cmp
and
and
adc
xor
mov
pop
add
les
inc
movs
pop
inc
jno
dec
das
cmp
jae
(bad)
aam
add
push
arpl
pop
aas
neg
dec
in
mov
test
dec
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
jbe
js
test
mov
in
push
cmc
mov
push
lods
xchg
mov
push
and
jo
inc
out
sahf
and
and
mov
hlt
xlat
test
cli
inc
in
mov
push
int
mov
push
fdivr
into
fs
xor
add
jecxz
out
data16
and
adc
fcomp
or
in
add
xchg
rcl
add
mov
aaa
pop
movs
ss
xor
adc
xor
loopne
aad
xor
push
(bad)
ins
push
les
jo
adc
lds
pop
(bad)
push
inc
and
dec
sbb
push
inc
aad
aas
pop
test
in
mov
test
jns
bound
sbb
hlt
inc
mov
pop
cmc
pop
pop
inc
push
xchg
xchg
mov
sti
push
hlt
lea
mov
test
jmp
(bad)
mov
and
jo
inc
cdq
movs
xchg
and
mov
fst
mov
xor
loope
hlt
inc
mov
korw
scas
les
(bad)
ficom
mov
push
ret
jbe
div
fs
loope
lock
gs
leave
data16
out
je
and
adc
fcomp
sub
jnp
push
in
add
cmp
adc
adc
xchg
push
jg
mov
aaa
adc
pop
lock
sub
and
sbb
sbb
push
loopne
aad
xor
adc
push
push
imul
push
inc
cmp
or
ds
ja
jnp
dec
add
push
sub
inc
aas
push
imul
ja
in
mov
test
pop
in
lsl
arpl
hlt
push
mov
or
push
mov
push
and
stc
add
mov
inc
mov
adc
lods
mov
and
jo
inc
out
fbld
xchg
cmps
cdq
xor
pusha
cmps
push
sti
mov
xor
out
xlat
inc
int3
and
mov
stc
push
aam
mov
push
(bad)
mov
out
fs
aad
stos
in
gs
(bad)
out
je
and
jne
lahf
lds
ins
shl
in
add
and
or
adc
sbb
sub
and
and
adc
inc
aad
xor
dec
(bad)
pusha
push
jbe
jle
ins
movs
adc
cmp
(bad)
bound
aam
or
push
arpl
inc
aas
ins
neg
push
in
mov
test
dec
in
lsl
bound
hlt
push
mov
inc
cmc
pop
pop
dec
push
xchg
xchg
scas
add
push
mov
test
push
xchg
xchg
jne
xchg
in
adc
test
xchg
and
jo
inc
out
mov
and
push
mov
fild
inc
mov
(bad)
aam
mov
push
jecxz
mov
push
hlt
mov
call
add
out
(bad)
mul
shl
adc
lock
retf
xchg
adc
or
in
add
add
aaa
pop
pop
xchg
aaa
rcr
and
cmp
adc
adc
movs
push
dec
and
adc
inc
aad
xor
push
(bad)
ins
push
inc
les
jb
dec
inc
(bad)
lds
pop
(bad)
jnp
addr16
add
das
aad
aas
pop
test
in
mov
test
pop
in
cmovp
jae
outs
hlt
outs
mov
inc
cmc
pop
pop
pop
push
xchg
xchg
mov
call
gs
test
add
test
mov
adc
repz
and
jo
inc
mov
les
lods
cmps
xchg
pusha
stos
push
mov
fild
inc
mov
(bad)
xchg
scas
in
sti
(bad)
icebp
push
retf
xor
clc
mov
retf
xor
add
fimul
(bad)
je
and
adc
mov
pop
or
ins
shl
in
add
push
xchg
pop
and
adc
cmp
movs
cs
lds
movs
sbb
daa
sbb
adc
pop
aad
xor
ds
jl
ins
les
jae
dec
inc
push
push
das
dec
(bad)
addr16
pusha
aam
add
push
pop
aad
aas
push
test
in
mov
test
pop
in
pcmpeqb
inc
addr16
hlt
inc
mov
(bad)
cmc
and
outs
push
test
in
rol
cwde
push
mov
loope
xchg
inc
mov
adc
xchg
mov
and
jo
inc
mov
fbld
mov
pusha
xchg
push
cli
mov
xor
xchg
xlat
repz
lods
adc
and
mov
stc
push
enter
(bad)
push
cld
mov
fbld
mov
mov
out
je
and
adc
fcomp
or
in
add
jg
inc
pop
cmp
adc
cmp
pop
lock
push
and
and
push
loopne
aad
xor
adc
les
jb
inc
inc
jno
ja
dec
(bad)
jae
es
or
push
push
aad
aas
jbe
pop
ja
in
mov
test
pop
in
lsl
dec
addr16
push
mov
inc
cmc
jne
push
add
push
and
cld
add
xchg
xchg
adc
inc
mov
adc
xchg
mov
and
jo
inc
jmp
pushf
and
cdq
cmps
sahf
xor
pusha
xchg
push
mov
fbstp
inc
repnz
and
(bad)
scas
mov
push
into
add
xor
fistp
iret
fs
enter
in
lods
(bad)
out
je
and
adc
rcr
sub
add
and
or
jge
sbb
jg
mov
aaa
pop
movs
and
push
lds
and
or
pop
aad
xor
sub
fs
popa
les
movs
dec
inc
arpl
push
inc
pop
aam
add
cs
aas
push
test
in
mov
test
inc
in
lsl
jp
outs
hlt
push
mov
inc
cmc
pop
pop
jbe
adc
lea
mov
xchg
xchg
jne
xchg
xchg
adc
mov
jo
inc
sahf
movs
xchg
and
and
mov
push
call
adc
and
std
scas
mov
push
leave
add
push
ret
mov
shl
icebp
add
dec
xor
xchg
jne
lahf
(bad)
xchg
cs
and
add
and
or
xor
sbb
cmp
movs
add
and
sub
sub
add
and
adc
dec
push
imul
adc
lds
pop
mov
aam
xor
push
ins
aad
aas
sub
dec
ja
in
mov
test
inc
in
unpckhps
pop
addr16
push
mov
pop
cmc
pop
pop
jnp
lods
xchg
test
gs
test
push
mov
inc
mov
adc
sahf
mov
and
jo
inc
lods
movs
fisub
xchg
cmps
cmps
xor
pusha
xchg
push
movs
mov
xor
hlt
xlat
out
inc
sti
adc
and
sahf
scas
in
jecxz
in
test
xor
repz
shl
lds
test
fst
aad
out
xchg
add
cmp
arpl
je
push
add
sbb
sbb
adc
ds
aaa
das
movs
pop
lock
lds
and
sub
cmp
xor
and
fs
jbe
and
cmp
push
das
inc
(bad)
jae
and
ja
dec
mov
push
cs
aas
dec
mul
in
mov
test
push
in
cmovb
push
addr16
hlt
dec
mov
inc
cmc
push
pop
push
push
test
mov
xchg
push
cmc
pop
mov
movs
xchg
jne
xchg
in
adc
mov
xchg
and
jo
inc
jmp
iret
cdq
es
sahf
xor
pusha
movs
push
div
mov
xlat
in
inc
mov
lds
inc
inc
call
mov
push
cli
mov
xlat
xlat
xor
add
loop
iret
data16
out
je
and
jne
lahf
out
xchg
and
adc
add
and
xchg
push
sar
adc
imul
xor
cmp
xor
add
or
or
aaa
xor
or
les
nop
dec
movs
dec
inc
lds
dec
(bad)
jl
inc
aam
add
push
sub
imul
push
in
mov
test
pop
in
lsl
push
addr16
hlt
push
mov
inc
cmc
inc
pop
dec
push
test
mov
mov
mov
mov
adc
inc
xchg
jne
xchg
out
adc
mov
mov
xchg
cwde
es
pusha
xchg
push
mov
fistp
inc
fst
retf
and
xchg
scas
mov
push
test
jecxz
ret
jbe
not
fs
test
(bad)
les
(bad)
adc
fistp
sub
cmp
push
in
add
or
adc
sbb
daa
adc
push
mov
aaa
adc
ds
movs
and
cmps
xor
adc
xor
sbb
jl
imul
dec
inc
inc
lds
das
pop
mov
pop
aam
or
push
ins
aad
aas
dec
test
in
mov
test
jb
push
adc
hlt
or
pop
cmc
pop
pop
ins
push
mov
fwait
gs
test
mov
inc
mov
adc
movs
mov
and
jo
inc
stos
movs
mov
xchg
cmps
cdq
xor
pusha
retf
mov
xor
out
out
mov
(bad)
mov
cmps
push
fadd
shl
(bad)
mov
out
fs
xor
add
dec
fbstp
jmp
lahf
les
sbb
or
push
add
and
or
adc
add
movs
es
cmp
and
adc
push
aad
xor
aas
(bad)
inc
push
inc
les
push
movs
adc
xor
dec
das
inc
(bad)
jg
jl
add
push
arpl
pop
aas
inc
div
ja
in
mov
test
push
in
cmovns
push
addr16
hlt
adc
push
cmc
dec
pop
push
add
push
test
test
push
scas
xchg
jne
xchg
test
mov
mov
and
jo
inc
mov
call
pusha
sahf
push
mov
fisttp
inc
not
int
rol
enter
fild
(bad)
fist
mov
push
(bad)
mov
into
fs
xor
add
jmp
je
and
jne
lahf
out
xchg
daa
pop
xor
add
and
add
adc
push
mov
aaa
pop
movs
sub
and
and
or
pop
aad
xor
sbb
adc
nop
jp
jo
jb
push
das
je
arpl
aam
add
push
push
aad
aas
jbe
inc
ja
in
mov
test
push
in
nop
push
ins
hlt
push
mov
jo
pop
pop
imul
mov
test
add
mov
inc
mov
adc
mov
mov
inc
mov
mov
cdq
cmps
xchg
mov
xor
repnz
int3
inc
mov
(bad)
mov
icebp
push
in
add
xor
(bad)
mov
lock
retf
add
out
sti
data16
clc
je
and
adc
fcomp
sub
push
ror
in
add
daa
xchg
pop
es
or
sbb
aas
adc
or
adc
and
outs
and
cmp
sbb
and
xor
adc
bound
les
nop
sub
push
das
dec
(bad)
jne
je
dec
add
push
das
aad
aas
push
div
dec
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
inc
cmc
pop
pop
push
add
push
mul
test
add
mov
inc
mov
adc
jmp
jo
inc
xchg
movs
fbld
xchg
cmps
iret
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
repz
xor
cmp
aam
lock
ror
shl
adc
loop
les
(bad)
shl
in
add
and
jo
and
add
or
or
pop
lds
and
and
xor
inc
mov
loopne
aad
xor
adc
les
push
movs
adc
jno
jge
push
(bad)
jns
and
inc
xor
push
arpl
push
aas
push
neg
inc
in
mov
test
pop
in
andps
inc
addr16
hlt
push
mov
dec
cmc
cmp
inc
push
adc
mov
mov
add
in
adc
xchg
mov
and
jo
inc
jmp
xchg
and
test
mov
xor
hlt
xlat
jmp
and
sahf
scas
mov
push
int
icebp
xor
out
clc
jbe
test
add
loop
enter
(bad)
je
and
adc
ret
xchg
and
sbb
sbb
add
and
push
shr
sbb
jg
mov
aaa
add
and
push
cmps
cmp
sbb
add
dec
aad
xor
adc
les
dec
movs
dec
inc
jl
jbe
cmp
aam
add
sub
div
in
mov
test
imul
push
addr16
hlt
push
mov
outs
cmc
pop
pop
jb
mov
push
mov
add
movs
xchg
jne
xchg
mov
mov
cmps
inc
mov
mov
mov
pusha
xchg
push
mov
fist
inc
mov
korw
scas
mov
push
mov
xor
ret
jbe
neg
add
fisttp
(bad)
je
and
adc
out
(bad)
xchg
push
pop
sub
ins
rcl
in
add
push
xchg
pop
cmp
adc
add
movs
inc
lock
movs
sbb
daa
sbb
push
loopne
aad
xor
sbb
jl
je
jp
jb
inc
inc
push
lds
das
pop
mov
aam
cmp
push
js
inc
aas
push
div
ja
in
mov
test
inc
in
cmovle
jg
pop
hlt
push
mov
pmaddwd
push
xchg
xchg
mov
gs
out
mov
xchg
xchg
lahf
xchg
mov
ss
mov
and
jo
inc
lods
movs
xchg
mov
test
pusha
xchg
push
loopne
xor
xlat
in
inc
in
lock
ret
inc
out
stc
push
retf
add
push
fistp
int3
fs
xor
add
fisttp
shl
les
fcomp
xor
shl
test
pop
sete
rol
pop
adc
or
add
shld
sub
xor
adc
xor
sbb
aad
xor
push
(bad)
inc
push
jbe
and
jno
pusha
das
push
(bad)
jae
pop
aam
sbb
push
dec
aad
aas
mul
dec
in
mov
test
pop
in
sysret
out
addr16
hlt
adc
push
cmc
pop
pop
push
add
push
scas
gs
mov
lahf
out
mov
adc
inc
mov
adc
sahf
mov
and
jo
inc
out
lahf
and
xchg
cmps
lahf
xor
pusha
mov
mov
fistp
inc
cmps
adc
inc
xchg
scas
mov
inc
in
in
add
push
sti
mov
into
fs
xor
add
out
(bad)
out
je
and
adc
fcomp
xor
and
xor
test
and
or
adc
or
jg
mov
aaa
or
and
and
mov
loopne
aad
xor
adc
les
xor
je
dec
(bad)
arpl
aam
and
dec
push
ins
aad
aas
push
not
in
mov
test
inc
in
nop
pop
addr16
hlt
dec
mov
dec
cmc
popw
outs
push
adc
gs
std
add
mov
inc
loop
xlat
xchg
nop
adc
xchg
mov
and
jo
inc
sahf
movs
xchg
and
mov
xchg
pusha
mov
xor
xlat
xlat
hlt
inc
mov
(bad)
out
scas
les
(bad)
mov
xor
pushf
mov
in
shl
retf
in
gs
pushf
data16
les
rcl
lahf
(bad)
xchg
xor
jo
ins
shl
in
add
and
ja
adc
xchg
and
mov
aaa
dec
movs
inc
lock
movs
sbb
daa
xor
xor
sbb
jl
jo
jb
jae
dec
inc
push
mov
aam
add
push
sub
imul
in
mov
test
in
cmovs
inc
addr16
hlt
push
mov
or
push
movs
xchg
test
gs
test
push
ret
adc
inc
mov
adc
movs
mov
and
jo
inc
test
iret
cdq
es
cmps
cmps
xor
pusha
xchg
push
stos
mov
xor
loopne
out
inc
cld
adc
and
mov
stc
push
(bad)
add
push
fstp
sahf
fs
xor
add
fimul
fbstp
rcl
cld
lahf
les
xor
jno
sbb
and
or
adc
cmp
aaa
lock
cmp
or
xor
sbb
aaa
xor
adc
push
nop
dec
movs
adc
imul
add
inc
aam
add
push
arpl
inc
aas
pop
neg
push
in
mov
test
inc
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
dec
push
movs
xchg
mov
sti
push
mov
test
push
scas
xchg
adc
xchg
and
jo
inc
out
pushf
and
xchg
cmps
sahf
xor
pusha
fst
mov
xor
rcl
test
mov
inc
inc
in
mov
mov
push
fdivr
retf
xor
add
loop
iret
data16
out
je
and
jne
lahf
lds
and
sub
push
add
and
or
adc
push
adc
push
mov
aaa
push
movs
adc
and
cmp
outs
daa
inc
mov
loopne
aad
xor
cmp
ins
push
push
movs
dec
inc
inc
lds
cmp
cmova
aaa
xor
push
das
aad
aas
pop
test
in
mov
test
push
in
lsl
es
push
mov
inc
cmc
push
pop
jge
adc
lea
mov
mov
cmps
adc
inc
movs
jne
xchg
mov
mov
mov
out
fbld
and
mov
mov
xlat
mov
mov
(bad)
lahf
scas
test
icebp
push
out
fidiv
clc
mov
(bad)
shl
rol
into
(bad)
jecxz
(bad)
shl
rcl
lahf
lea
jnp
jno
adc
jge
and
adc
adc
sbb
aaa
adc
or
xor
xor
daa
and
and
push
loopne
aad
xor
or
jl
jae
inc
nop
push
movs
pop
inc
jge
adc
pop
(bad)
pusha
inc
addr16
or
push
sub
test
in
mov
test
push
bound
add
inc
addr16
hlt
push
mov
or
jbe
inc
push
scas
xchg
pop
push
cmc
gs
test
push
mov
inc
call
(bad)
jmp
and
jo
inc
stos
movs
test
mov
mov
push
popf
mov
xor
repz
inc
jmp
inc
jmp
mov
xor
loope
in
jbe
mul
fs
xor
add
fisttp
les
les
out
(bad)
xchg
xor
adc
add
and
and
pop
cmc
inc
adc
ds
aaa
xor
lds
and
add
xor
pop
aad
xor
adc
pop
push
jbe
cmp
cmp
(bad)
bound
aam
add
push
arpl
inc
aas
pop
mul
push
in
mov
test
in
mulps
pop
addr16
hlt
dec
mov
popa
cmc
cmp
push
push
test
stos
add
push
lock
cdq
add
add
in
adc
xchg
mov
and
jo
inc
mov
iret
call
pusha
test
mov
xor
in
icebp
inc
int3
adc
and
(bad)
scas
jecxz
mov
jecxz
aad
loop
test
xchg
fs
xor
add
loop
into
data16
and
adc
loop
lds
sbb
sbb
cmp
sub
push
shr
or
push
mov
aaa
pop
movs
adc
and
cmp
and
or
xor
dec
(bad)
ins
push
imul
dec
inc
jle
pusha
das
cmp
aam
or
push
je
inc
aas
pop
test
in
mov
test
adc
xor
dec
out
addr16
hlt
push
mov
outs
cmc
jne
outs
push
mov
push
hlt
gs
lea
mov
popf
adc
inc
xchg
jne
xchg
call
mov
mov
mov
mov
es
cmps
mov
xchg
pusha
xchg
push
mov
mov
call
adc
and
std
scas
aam
(bad)
push
leave
add
xor
idiv
(bad)
fs
int
lock
gs
je
and
adc
fcomp
push
test
shl
in
add
xchg
rcl
add
aaa
adc
and
xor
sub
sbb
daa
loopne
aad
xor
sbb
ja
popa
les
nop
aaa
movs
adc
cmp
(bad)
gs
je
dec
add
push
ins
aad
aas
aaa
test
push
mov
test
pop
in
unpcklps
jns
pop
hlt
push
mov
or
push
lods
xchg
test
test
add
pop
mov
adc
xchg
mov
and
jo
inc
mov
iret
cmps
es
cmps
(bad)
xor
pusha
xchg
push
xor
push
hlt
xlat
les
shl
scas
mov
push
fiadd
stc
xor
sar
fs
aad
stos
in
lds
xlat
je
and
adc
(bad)
lahf
aam
xor
sub
add
daa
xchg
pop
cmp
adc
or
sbb
and
and
adc
pop
aad
xor
add
les
ins
movs
adc
cmp
jge
(bad)
(bad)
jae
js
dec
or
push
ins
aad
aas
dec
div
inc
in
mov
test
pusha
in
lsl
cmp
hlt
mov
arpl
pop
pop
push
push
sahf
xchg
mov
mov
test
add
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
out
movs
pushf
and
mov
pusha
mov
xor
not
jmp
and
xchg
scas
mov
push
rol
fbstp
cmp
shl
ret
add
(bad)
(bad)
fsub
out
je
and
adc
(bad)
lahf
lds
pusha
rcr
in
add
cmp
outs
rol
and
ss
aaa
pop
movs
or
and
and
or
or
js
add
ins
push
push
push
nop
xor
lds
fs
push
inc
addr16
cmp
pop
push
je
inc
aas
pop
test
add
gs
addr16
hlt
dec
mov
adc
inc
pop
push
mov
push
mov
mov
fwait
push
mov
inc
mov
adc
stos
mov
and
jo
inc
mov
fsub
and
xor
xlat
test
mov
inc
mov
in
test
mov
xchg
shl
add
fisttp
les
mov
call
adc
add
and
xchg
or
adc
sbb
adc
cs
movs
and
cmps
sbb
push
mov
loopne
aad
xor
adc
adc
les
inc
cmp
inc
das
pop
(bad)
je
pusha
aam
or
push
ins
aad
aas
push
test
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
or
push
lods
xchg
mov
lea
gs
test
push
cdq
xchg
xchg
call
and
jo
inc
mov
fisub
mov
xchg
push
cli
mov
xor
ret
xlat
out
inc
mov
korw
scas
mov
push
repnz
push
cld
mov
leave
fs
xor
add
ror
ret
je
and
jne
lahf
int3
xchg
xor
test
shl
push
outs
and
push
rcl
jg
mov
aaa
adc
adc
and
or
adc
and
mov
pop
adc
les
nop
imul
jns
inc
aam
add
push
arpl
inc
aas
jge
sub
in
mov
test
pop
in
cmova
and
hlt
push
mov
or
and
xchg
mov
push
hlt
gs
pop
scas
xchg
popf
xchg
jmp
ss
jo
inc
mov
pushf
and
xchg
cmps
sahf
xor
pusha
cmps
push
mov
fistp
inc
loop
leave
and
xchg
scas
cld
inc
inc
out
cld
add
xor
cmp
xlat
xor
add
in
fsub
out
je
and
adc
(bad)
lahf
aad
sub
xor
add
add
add
adc
and
adc
push
mov
aaa
pop
movs
adc
push
lds
and
inc
cmps
sbb
loopne
aad
xor
push
(bad)
ins
push
outs
les
jp
or
lds
pop
(bad)
je
cmp
mov
push
das
aad
aas
jge
inc
ja
in
mov
test
push
in
lsl
push
addr16
hlt
push
mov
inc
cmc
pop
pop
jle
adc
mov
test
iret
xchg
jne
xchg
mov
mov
mov
scas
movs
mov
loopne
sahf
xor
pusha
mov
xor
loopne
cmc
inc
rcl
and
xchg
scas
mov
push
aam
mov
push
ret
jbe
not
fs
add
out
leave
repz
je
and
adc
fcomp
sub
add
jne
adc
and
xor
add
sub
and
movs
pop
lock
movs
or
daa
push
mov
loopne
aad
xor
sbb
push
push
xor
aas
nop
ins
movs
jl
cmp
pop
das
popa
(bad)
ja
js
ins
cmp
sbb
aad
aas
push
test
in
mov
test
sbb
popa
pcmpgtb
dec
addr16
hlt
push
mov
or
push
xchg
xchg
mov
cwde
push
fwait
gs
test
add
mov
inc
mov
adc
mov
mov
jo
inc
out
fbld
sahf
cmps
cmps
xor
pusha
xchg
push
(bad)
mov
xor
loop
jmp
lods
adc
and
mov
in
ret
xor
pushf
mov
leave
fs
xor
add
test
les
fcomp
xor
pusha
shl
in
add
cmp
or
adc
ds
aaa
shld
push
lds
and
cmps
xor
add
push
loopne
aad
xor
cmp
jbe
les
movs
adc
lds
das
push
(bad)
ins
inc
push
aam
or
push
arpl
dec
aas
sub
pop
ja
in
mov
test
gs
in
unpckhps
and
hlt
push
mov
inc
cmc
push
pop
jnp
test
stos
add
push
cmc
mov
mov
mov
call
xchg
in
adc
xchg
mov
and
jo
inc
out
fbld
mov
pusha
xchg
push
cdq
mov
xor
hlt
xlat
test
fadd
scas
mov
push
int
movs
xor
fnstcw
(bad)
fs
xor
add
fisttp
les
(bad)
adc
ret
xchg
sub
add
in
add
add
xor
es
daa
rcl
sub
pop
mov
aaa
pop
movs
inc
lock
xor
movs
es
and
or
inc
aad
xor
inc
(bad)
adc
les
movs
dec
inc
pop
lds
pop
(bad)
jle
pop
aam
or
push
push
jl
push
div
ja
in
mov
test
dec
out
addr16
hlt
inc
mov
push
cmc
jb
add
stos
xchg
mov
out
hlt
lea
mov
adc
inc
stc
jne
xchg
(bad)
adc
test
xchg
inc
mov
shl
and
push
lods
mov
xor
loopne
mov
mov
korb
scas
aam
repz
mov
xor
xchg
(bad)
lds
rol
(bad)
jecxz
(bad)
xchg
rcl
lahf
(bad)
xchg
and
sub
sub
cs
add
jge
daa
pop
outs
xchg
adc
pusha
cmc
sbb
cmp
movs
cmp
and
and
mov
loopne
aad
xor
adc
bound
les
nop
ins
movs
pop
inc
cmp
pop
das
imul
inc
adc
push
ins
aad
aas
das
test
in
mov
test
ins
in
nop
outs
addr16
hlt
push
mov
or
gs
outs
push
movs
xchg
repnz
push
mov
add
mov
inc
mov
adc
(bad)
mov
and
jo
inc
stos
movs
lahf
and
movs
cmps
mov
mov
push
cld
mov
xor
in
call
and
ret
inc
(bad)
push
cld
add
push
(bad)
mov
out
in
xor
add
fisttp
fbstp
popf
adc
fcomp
cmp
sub
and
cmp
outs
cmp
and
aaa
xchg
sub
pop
cmc
or
ds
aaa
sub
and
and
dec
loopne
aad
xor
adc
les
nop
ins
movs
jb
push
jge
push
(bad)
jle
(bad)
aam
or
push
pop
aad
aas
push
not
inc
in
mov
test
ins
in
lsl
and
mov
inc
cmc
inc
pop
push
add
push
cmc
mov
mov
cdq
xchg
xchg
div
test
jo
inc
mov
iret
mov
xor
pusha
xchg
push
lea
mov
cld
xlat
test
mov
inc
aam
xlat
push
jecxz
(bad)
xor
(bad)
mov
into
xlat
xor
add
ret
data16
out
je
and
jne
lahf
out
xchg
push
pop
test
add
and
or
adc
sbb
jg
mov
aaa
or
and
and
or
cmp
aaa
xor
cmp
outs
push
(bad)
les
jo
or
lds
pop
mov
aam
or
push
das
aad
aas
push
test
in
mov
test
imul
jne
inc
hlt
push
mov
inc
cmc
dec
pop
push
adc
lea
mov
adc
inc
mov
adc
icebp
mov
and
jo
inc
stos
movs
lea
in
xchg
pusha
mov
mov
xor
loope
iret
inc
mov
(bad)
xchg
scas
out
repz
icebp
push
rol
mov
push
les
jmp
retf
add
out
loopne
(bad)
popf
je
and
adc
fstp
test
sbb
xor
and
add
pusha
cmc
sbb
cmp
movs
inc
lock
movs
and
cmps
adc
dec
mov
loopne
aad
xor
inc
(bad)
inc
push
imul
dec
inc
cmp
(bad)
ja
and
imul
aad
aas
pop
test
in
mov
test
in
unpckhps
inc
addr16
xchg
pop
jne
cmc
pop
pop
outs
push
sahf
xchg
test
gs
test
push
mov
inc
mov
mov
jmp
scas
jo
inc
cwde
movs
mov
cmps
iret
lahf
es
cmps
xchg
pusha
xchg
push
mov
xor
xlat
out
inc
lds
into
and
aad
mov
out
(bad)
stc
push
rol
xor
cmp
fs
xor
add
fimul
(bad)
adc
and
sub
jnp
and
or
sub
xchg
sbb
adc
ds
aaa
shld
dec
lds
and
pop
cmps
xor
sbb
xor
pop
aad
xor
adc
inc
push
xor
and
jno
adc
inc
(bad)
jae
js
jne
dec
mov
push
dec
aad
aas
push
div
ja
in
mov
test
gs
jg
dec
out
addr16
hlt
ins
mov
push
cmc
pop
pop
pop
push
rcl
nop
mov
mov
adc
inc
mov
adc
xchg
mov
and
jo
inc
mov
iret
call
pusha
xchg
push
mov
ffreep
push
(bad)
test
mov
inc
out
(bad)
repnz
fld
mov
push
(bad)
mov
into
fs
xor
add
fisttp
fdiv
(bad)
adc
out
(bad)
xchg
adc
jb
arpl
sbb
xor
or
pop
ror
add
xor
inc
lock
outs
and
or
mov
loopne
aad
xor
xor
bound
les
nop
push
movs
push
inc
jae
push
das
jnp
pop
inc
addr16
and
push
and
inc
aas
push
div
mov
test
push
in
andps
push
addr16
hlt
ja
inc
xchg
jg
or
pop
pop
ins
push
test
mov
add
into
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
mov
and
cmps
test
pusha
xchg
push
xor
push
retf
inc
lods
adc
inc
nop
scas
mov
push
leave
add
push
ret
jbe
not
shl
retf
add
lods
(bad)
int
(bad)
(bad)
je
and
adc
aam
not
sbb
add
sbb
jge
adc
xchg
push
jg
mov
aaa
adc
cs
addr16
and
push
loopne
aad
xor
sub
ins
push
jne
bound
lds
push
(bad)
pop
inc
push
aam
add
push
ins
aad
aas
outs
test
in
mov
test
dec
in
punpckldq
jne
inc
hlt
push
mov
pmaddwd
ins
push
mov
and
mov
sub
push
mov
inc
mov
adc
mov
jo
inc
stos
movs
mov
es
xchg
pusha
xchg
push
mov
fild
inc
not
(bad)
and
ret
inc
in
rcl
mov
push
(bad)
mov
(bad)
fs
xor
add
out
(bad)
data16
fdiv
les
stc
lahf
in
push
pop
xor
and
je
push
add
and
add
aaa
cmc
aas
adc
ds
aaa
shld
sbb
or
push
cmps
pop
daa
dec
mov
loopne
aad
xor
adc
les
dec
movs
pop
inc
xor
adc
(bad)
(bad)
pop
inc
daa
aam
and
pop
push
jp
inc
aas
ja
push
mov
test
pop
in
nop
jnp
inc
hlt
dec
mov
pmaddwd
pop
pop
push
aam
mov
movs
test
push
cmps
xchg
adc
mov
inc
out
movs
xchg
and
mov
pusha
xchg
push
cmps
mov
xor
xchg
xlat
test
movs
inc
shr
int3
push
int
mov
push
fdivr
in
shl
rol
iret
(bad)
out
je
and
adc
rcr
or
in
add
sbb
aaa
rcr
pop
adc
add
movs
pop
lock
movs
add
cmps
sbb
loopne
aad
xor
push
(bad)
ins
push
jbe
pop
nop
jo
push
inc
cmp
or
pop
(bad)
jae
push
aam
or
push
jns
pop
aas
push
div
dec
in
mov
test
jg
sub
add
inc
addr16
hlt
push
mov
inc
cmc
pop
pop
js
adc
pop
test
mov
jne
xchg
mov
xchg
stos
mov
test
out
movs
fisub
mov
xchg
pusha
mov
xor
loope
in
sti
adc
and
nop
scas
jecxz
(bad)
push
rol
xor
(bad)
mov
shl
add
fimul
les
fst
aam
clc
xchg
daa
pop
or
add
cmp
xor
adc
sbb
push
and
lock
xor
adc
sbb
add
xor
cmp
jl
ins
les
inc
cmp
pop
das
jge
ja
addr16
cmp
push
push
aad
aas
push
imul
(bad)
in
mov
test
pop
in
unpckhps
jno
pop
hlt
push
mov
or
jbe
outs
push
lods
xchg
test
gs
test
push
mov
inc
mov
adc
xor
inc
lods
movs
popf
and
test
xchg
push
cdq
mov
xor
in
jmp
(bad)
mov
fist
stos
xor
(bad)
mov
xchg
fs
jecxz
stos
in
fisttp
fbstp
retf
cmc
ret
jne
lahf
into
xchg
xor
xor
or
sub
push
add
sub
xchg
and
cmp
inc
adc
add
movs
or
or
push
and
and
adc
dec
aad
xor
adc
les
dec
movs
adc
lds
das
aas
(bad)
jae
pop
aam
or
push
push
aad
aas
push
idiv
push
in
mov
test
in
(bad)
out
addr16
hlt
dec
mov
push
cmc
jg
push
add
push
stos
gs
push
mov
inc
mov
adc
(bad)
mov
and
jo
inc
lea
ret
es
cmps
sahf
xor
pusha
stos
push
mov
fistp
inc
cli
adc
inc
hlt
scas
cmps
inc
inc
out
repz
push
repz
xlat
fs
xor
add
repnz
out
je
and
adc
mov
pop
jne
pusha
shl
in
add
add
xor
ds
xor
sub
and
sub
and
pop
movs
adc
add
xor
cmp
add
cmp
xor
sbb
les
jb
inc
inc
(bad)
lds
das
cmp
addr16
addr16
add
push
dec
aad
aas
pop
test
in
mov
test
in
unpckhps
push
addr16
hlt
jno
bound
jl
jg
scas
xchg
mov
push
hlt
lea
mov
xchg
xchg
jne
xchg
popf
adc
repz
and
jo
inc
xchg
movs
fisub
mov
xchg
push
cdq
mov
xor
xchg
xlat
hlt
inc
cmps
adc
and
(bad)
cmps
push
leave
add
jecxz
in
jbe
not
add
dec
shl
adc
mov
pop
add
add
and
adc
adc
xchg
cmp
cmp
movs
sub
and
pop
cmps
sbb
sbb
xor
adc
les
popa
movs
dec
inc
jge
adc
pop
mov
aam
cmp
push
sub
gs
inc
test
in
mov
test
in
unpckhps
pop
addr16
hlt
push
mov
or
push
lods
xchg
mov
xchg
push
mul
test
add
ret
adc
inc
call
(bad)
in
ss
mov
and
jo
inc
lods
movs
(bad)
xchg
cmps
mov
push
sti
mov
xor
lock
inc
(bad)
and
xchg
scas
mov
push
aam
mov
push
out
bnd
test
add
ret
(bad)
out
je
and
adc
ficomp
xor
cmp
add
and
sub
pop
cmc
aaa
adc
or
push
lock
and
and
adc
inc
aad
xor
push
(bad)
push
nop
ins
movs
adc
popa
lds
pop
(bad)
dec
inc
outs
aam
adc
push
ins
aad
aas
test
in
mov
test
push
in
packsswb
push
addr16
hlt
adc
ja
dec
pop
jns
xchg
xchg
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
popf
movs
mov
xchg
cmps
shl
into
xor
hlt
xlat
retf
adc
and
xchg
scas
hlt
inc
test
enter
loop
cmc
mov
loope
in
rol
les
ret
je
and
adc
fcomp
aaa
test
sub
dec
add
and
or
sbb
push
adc
and
movs
adc
and
xor
pop
movs
jno
and
and
sbb
daa
xor
push
(bad)
jl
dec
les
jae
push
inc
jb
adc
push
(bad)
arpl
aam
add
push
ins
aad
aas
push
div
inc
in
mov
test
in
punpckhbw
push
addr16
hlt
imul
outs
push
mov
stos
movs
test
test
nop
jne
xchg
mov
movs
mov
and
jo
inc
out
movs
xchg
and
mov
rcl
into
xor
loop
test
mov
inc
fld
icebp
push
mov
(bad)
xor
les
retf
shl
mov
dec
cmc
je
and
adc
fstp
sub
shr
in
add
and
adc
adc
inc
adc
ds
aaa
shld
sub
pop
daa
xor
aad
xor
cmp
jl
inc
les
nop
jae
dec
inc
jno
adc
pop
(bad)
jg
fs
adc
push
sub
jns
push
test
in
mov
test
push
in
addps
jb
jge
adc
jne
cmc
cmp
pop
push
scas
xchg
xchg
push
mul
test
add
mov
inc
mov
adc
mov
xchg
inc
lods
movs
xchg
out
mov
mov
push
xchg
xchg
push
into
xlat
mov
lods
adc
and
mov
stc
push
iret
add
xor
(bad)
mov
into
fs
add
ror
fbstp
les
rcr
adc
in
add
and
adc
pop
cmc
inc
adc
ds
aaa
shld
push
lds
and
xor
mov
loopne
aad
xor
adc
les
nop
jo
or
lds
das
arpl
jae
jl
or
push
jb
inc
aas
push
imul
in
mov
test
push
in
cmovne
pop
addr16
dec
mov
jp
fs
or
xchg
xchg
mov
mov
cmc
mov
push
mov
movs
adc
inc
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
lods
movs
frstor
xchg
cmps
fnstenv
pusha
xchg
push
test
scas
xor
hlt
xlat
lock
rcl
and
mov
aad
out
cmps
xor
aad
(bad)
jbe
test
add
loope
mul
out
je
and
adc
fstp
or
in
add
add
cmp
jge
cmp
adc
xor
adc
pextrw
xor
pop
movs
or
sbb
push
loopne
aad
xor
push
(bad)
jl
imul
dec
inc
pop
lds
pop
(bad)
push
inc
addr16
cmp
push
xor
jl
ins
test
in
mov
test
push
in
pcmpeqb
push
addr16
hlt
pop
mov
inc
cmc
inc
pop
jle
adc
gs
test
push
popf
xchg
jne
xchg
mov
mov
mov
lods
movs
mov
and
int
scas
fistp
inc
mov
(bad)
xchg
scas
fild
(bad)
jecxz
test
in
push
loopne
in
jbe
imul
shl
lds
in
in
(bad)
les
rcl
lahf
(bad)
xchg
push
pop
test
in
add
cmp
xchg
or
aas
cmc
sbb
push
add
xor
and
and
adc
sbb
cmp
sub
jl
ins
les
jae
dec
inc
cmp
adc
pop
(bad)
push
inc
pop
aam
cmp
dec
push
(bad)
aad
aas
dec
test
in
mov
test
gs
in
unpckhps
inc
addr16
outs
mov
ins
cmc
pop
pop
pop
push
lods
xchg
pop
push
cli
gs
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
scas
movs
fbld
xchg
cmps
test
mov
xor
xchg
xlat
inc
retf
korw
scas
fiadd
(bad)
in
retf
xor
cwde
mov
shl
leave
add
mov
retf
out
je
and
adc
fcomp
imul
outs
add
xor
cmp
adc
imul
lock
ss
pop
cmps
fs
sbb
xor
adc
les
nop
outs
movs
cmovne
adc
inc
(bad)
jnp
jg
or
push
sub
sbb
push
test
in
mov
test
push
in
vmwrite
pop
addr16
hlt
inc
mov
inc
cmc
jg
push
add
push
(bad)
gs
mov
push
xchg
mov
adc
div
xchg
movs
pushf
and
xchg
cmps
sahf
xor
pusha
test
mov
xor
call
mov
mov
inc
inc
icebp
push
mov
mov
push
sar
into
fs
xor
add
icebp
(bad)
out
je
and
adc
fistp
aaa
test
add
and
or
sbb
and
push
mov
aaa
adc
add
das
lds
and
cmp
xor
adc
les
inc
cmp
push
das
xor
aam
add
push
cs
aas
push
not
push
in
mov
test
gs
jg
add
push
addr16
dec
mov
inc
cmc
pop
pop
pop
push
leave
xchg
mov
sti
push
mov
mov
add
lea
jne
xchg
mov
mov
fwait
inc
mov
mov
es
cmps
mov
push
mov
fild
inc
fst
mov
clc
(bad)
xlat
scas
jmp
ffree
fist
retf
aad
push
ret
jbe
not
xchg
fild
mov
leave
data16
out
je
and
jne
lahf
(bad)
xchg
and
sub
in
add
and
adc
jns
sbb
push
add
xor
and
cmps
adc
xor
pop
loopne
aad
xor
adc
push
jl
cmp
imul
jae
fs
or
push
ins
aad
aas
outs
test
in
mov
test
push
out
addr16
mov
inc
cmc
popw
outs
push
mov
cmps
add
push
hlt
gs
test
push
mov
inc
mov
adc
nop
mov
and
jo
inc
mov
iret
(bad)
es
cmps
(bad)
xor
pusha
xchg
push
cmps
mov
xor
rcl
inc
rcl
and
mov
mov
xor
(bad)
mov
leave
fs
xor
add
mov
les
out
je
and
adc
mov
pop
adc
add
xchg
pop
cmp
adc
cmp
xor
lds
and
and
adc
or
aas
xor
or
push
push
xor
and
jno
adc
jl
jl
and
inc
add
dec
aad
aas
pop
mul
dec
in
mov
test
jns
pop
nop
push
addr16
hlt
pop
mov
dec
cmc
jae
pop
push
mov
test
add
scas
xchg
jne
xchg
adc
mov
and
jo
inc
mov
mov
xor
pusha
(bad)
push
div
xchg
push
out
mov
int3
adc
and
hlt
scas
aad
popf
(bad)
(bad)
push
int
jmp
mov
retf
xor
add
ror
(bad)
je
and
adc
out
out
xchg
daa
pop
push
test
rcr
in
add
jne
inc
pop
ds
add
or
sbb
jg
mov
aaa
xor
lds
dec
sub
and
dec
aad
xor
or
adc
les
push
movs
dec
inc
jge
push
das
pop
(bad)
bound
aam
xor
push
inc
aad
aas
dec
div
dec
in
mov
test
gs
in
cmovp
push
addr16
hlt
push
mov
outs
cmc
pop
pop
push
adc
gs
add
test
sahf
jne
xchg
call
mov
mov
mov
fisub
and
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
mov
mov
sar
nop
fs
xor
add
lods
vphaddwd
out
je
and
adc
fstp
adc
aaa
rcr
in
add
js
aaa
pop
es
xadd
cmc
sbb
cmp
movs
and
and
cmp
outs
daa
adc
pop
loopne
aad
xor
ss
je
je
inc
nop
dec
movs
jbe
popa
lds
das
pop
(bad)
push
inc
fs
sbb
push
sub
pop
aas
outs
test
in
mov
test
jp
bound
sbb
inc
addr16
hlt
dec
mov
or
push
pop
inc
push
mov
push
nop
gs
test
add
mov
inc
mov
adc
test
mov
jo
inc
xchg
movs
fbld
xchg
cmps
pushf
xor
pusha
(bad)
push
stos
mov
xor
(bad)
rol
into
and
mov
scas
push
test
xor
(bad)
mov
leave
fs
fiadd
fisttp
fbstp
lds
rcr
xor
jg
or
cmp
jg
xor
xor
xchg
xor
adc
inc
adc
sbb
pop
lock
lds
movs
adc
cmps
sbb
add
sub
inc
aad
xor
xor
inc
push
jne
pop
nop
popa
movs
adc
jno
pusha
das
inc
(bad)
jae
inc
aam
or
push
arpl
inc
aas
dec
div
push
in
mov
test
push
in
cmove
jge
inc
hlt
adc
or
pop
pop
inc
push
mov
lea
push
hlt
xchg
add
xchg
adc
xchg
and
jo
inc
jmp
pushf
and
xchg
cmps
test
pusha
xchg
push
mov
fbstp
inc
mov
lds
inc
test
mov
push
fistp
int3
push
out
shl
in
gs
mov
and
jne
lahf
in
and
das
test
rcl
in
add
push
xchg
pop
sbb
adc
or
sub
and
or
or
pop
aad
xor
inc
(bad)
push
push
popa
les
jo
dec
inc
jle
adc
cmp
aam
and
inc
push
sub
not
push
in
mov
test
jl
xor
dec
out
addr16
inc
mov
arpl
inc
pop
jbe
adc
mov
mov
adc
inc
mov
adc
mov
xchg
and
jo
inc
lods
movs
and
cmps
xchg
pusha
mov
test
mov
inc
mov
(bad)
xchg
scas
cmc
inc
repz
icebp
push
enter
(bad)
rcl
mov
cld
shl
xlat
add
ror
je
and
adc
fstp
sub
jnp
cmp
adc
add
rcl
inc
jg
mov
aaa
push
movs
cs
movs
sbb
daa
das
mov
loopne
aad
xor
sub
jl
jg
bound
dec
lds
imul
inc
arpl
dec
sub
sbb
aad
aas
push
not
dec
in
mov
test
gs
in
unpckhps
inc
addr16
push
mov
imul
pop
jg
lods
xchg
xchg
add
push
mul
test
mov
inc
movs
jne
xchg
lock
mov
jo
inc
mov
mov
xchg
cmps
cdq
xor
pusha
mov
xor
in
jmp
xlat
adc
and
mov
fcom
mov
push
sar
fs
xor
add
fisttp
shl
les
fcomp
xor
pusha
shl
in
add
jle
cmp
and
cmc
inc
adc
ds
aaa
push
movs
inc
lock
or
push
cmps
xor
add
aad
xor
aaa
(bad)
push
nop
dec
movs
adc
jl
adc
pop
mov
outs
aam
or
push
(bad)
aad
aas
push
test
in
mov
test
gs
in
sysret
out
addr16
hlt
dec
mov
jg
pop
pop
jae
test
cmc
mov
mov
mov
in
adc
and
iret
call
pusha
xchg
push
xchg
mov
xor
hlt
xlat
test
mov
inc
inc
loop
test
test
jbe
div
xlat
xor
add
aad
loop
mul
fbstp
(bad)
adc
mov
pop
or
add
cmp
daa
sar
jg
mov
aaa
and
lds
inc
cmps
sbb
loopne
aad
xor
adc
les
inc
jb
adc
cmp
ins
inc
push
aam
add
push
je
inc
aas
dec
test
push
mov
test
inc
in
cmovne
addr16
hlt
jbe
add
bound
dec
push
xchg
xchg
mov
mov
hlt
gs
test
add
test
cmps
jne
xchg
mov
mov
cwde
inc
mov
mov
and
push
xor
hlt
inc
mov
lds
inc
clc
(bad)
xlat
push
jecxz
hlt
xor
ret
jbe
not
shl
xchg
add
ror
je
and
adc
fstp
sub
arpl
sub
or
add
xchg
cs
rcl
push
jg
mov
aaa
push
movs
cs
lds
adc
sbb
add
aad
xor
sub
jl
jbe
bound
push
lds
das
pop
(bad)
dec
inc
push
aam
add
push
ins
aad
aas
pop
test
in
mov
test
in
unpckhps
inc
addr16
hlt
je
js
arpl
cmc
pop
pop
pop
push
lods
xchg
test
gs
shr
mov
adc
inc
std
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
sahf
and
xchg
cmps
xchg
pusha
retf
mov
xor
loope
out
lods
adc
and
xchg
scas
retf
(bad)
stc
push
mov
aad
(bad)
push
cmp
lds
ror
popf
je
and
adc
fcomp
xor
arpl
pop
in
add
xor
xchg
je
jns
pop
adc
cmp
adc
and
cmp
pop
cmps
adc
or
or
xor
daa
xor
sbb
les
nop
ins
movs
adc
cmp
adc
pop
mov
aam
add
push
arpl
inc
aas
push
neg
inc
in
mov
test
in
orps
push
addr16
hlt
adc
gs
ss
cmc
push
pop
push
add
push
cmc
gs
out
xchg
push
xchg
xchg
jne
xchg
mov
ss
mov
and
jo
inc
stos
movs
mov
es
cmps
sahf
xor
pusha
xchg
push
xor
inc
jecxz
(bad)
(bad)
jmp
push
fld
shl
mov
shl
xlat
add
lock
out
je
and
adc
fcomp
aaa
test
adc
push
add
sbb
cmp
addr16
xadd
cmc
and
je
adc
mov
aaa
das
movs
adc
sbb
xor
sbb
aaa
daa
pop
mov
loopne
aad
xor
cmp
ins
push
jne
and
pop
lds
push
(bad)
jge
addr16
or
push
das
aad
aas
ins
test
in
mov
test
pop
in
punpcklwd
inc
addr16
bound
jg
bound
outs
push
adc
mov
inc
mov
inc
mov
adc
movs
mov
and
jo
inc
mov
fsub
test
nop
push
mov
ffreep
push
loopne
test
cld
inc
hlt
scas
jecxz
in
(bad)
rcl
call
push
sar
fs
xor
add
aam
retf
out
je
and
adc
aam
(bad)
xchg
and
jbe
cmp
and
dec
add
xchg
shl
adc
cmp
movs
add
adc
movs
sbb
daa
sbb
push
loopne
aad
xor
ds
jg
(bad)
les
inc
movs
jp
dec
lds
(bad)
jg
pusha
aam
sbb
and
jb
jle
dec
ja
in
mov
test
push
out
addr16
hlt
push
mov
inc
cmc
jl
outs
push
stos
xchg
mov
push
mul
test
add
mov
inc
mov
adc
(bad)
mov
and
jo
inc
movs
movs
mov
es
cmps
cdq
xor
pusha
cmps
push
cli
mov
xor
cmc
xlat
in
inc
not
leave
and
mov
stc
push
mov
xor
sar
(bad)
fs
xor
add
out
cld
data16
xor
jmp
xchg
xor
xor
shl
in
add
and
or
adc
adc
movs
cs
lds
and
and
xor
and
mov
pop
adc
les
nop
je
je
jno
pop
das
jl
jae
jnp
cmp
inc
mov
push
arpl
jae
push
test
in
mov
test
push
in
(bad)
out
addr16
dec
mov
inc
cmc
pop
pop
or
scas
xchg
mov
gs
movs
add
scas
xchg
jne
xchg
lods
adc
mov
mov
movs
(bad)
in
sahf
xor
pusha
cmps
push
mov
fild
rcl
leave
and
(bad)
scas
stc
inc
std
(bad)
rcl
shl
loope
shl
imul
xlat
xor
add
loope
in
repz
je
and
out
lahf
lds
pusha
shl
in
add
xor
adc
ds
add
push
cmc
sbb
jg
mov
aaa
sbb
pop
lock
lds
and
sbb
or
dec
aad
xor
push
(bad)
jno
push
les
jbe
jbe
cmp
or
pop
(bad)
push
inc
pop
aam
and
push
inc
aad
aas
push
test
in
mov
test
add
inc
cvtps2pd
push
addr16
hlt
sbb
push
jg
or
pusha
pop
outs
push
adc
gs
test
push
xchg
xchg
jne
xchg
mov
ss
and
movs
fbld
and
push
mov
mov
inc
aad
mov
inc
retf
scas
aam
clc
(bad)
mov
xor
pushf
mov
(bad)
shl
aam
fsub
pushf
gs
lds
out
je
and
jne
lahf
les
push
rcl
in
add
and
and
adc
xchg
push
jg
mov
aaa
adc
push
lock
push
pop
movs
push
dec
sub
mov
loopne
aad
xor
adc
ins
push
dec
les
nop
jb
dec
inc
cmp
adc
popa
(bad)
push
inc
pusha
aam
sbb
push
arpl
inc
aas
push
test
in
mov
test
gs
in
unpcklps
cs
hlt
push
mov
adc
gs
pop
push
mov
mov
gs
test
push
xchg
xchg
jne
xchg
mov
cmp
ss
mov
and
jo
inc
scas
movs
fbld
xchg
cmps
test
mov
xor
(bad)
xlat
out
inc
loope
mov
rol
out
inc
lock
mov
push
repnz
push
hlt
mov
jmp
lds
fimul
fbstp
test
lds
or
add
and
xchg
push
shl
adc
cmp
movs
pop
lock
sub
sbb
adc
dec
aad
xor
push
(bad)
push
push
jbe
es
inc
movs
cmovne
lds
das
push
jae
jg
xor
outs
aad
aas
push
test
in
mov
test
jno
pop
packssdw
jnp
inc
hlt
mov
dec
cmc
pop
pop
push
add
push
cli
gs
test
push
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
xchg
and
test
xchg
push
mov
fild
inc
rcl
and
xchg
scas
mov
push
enter
aad
loop
stc
mov
xchg
xlat
xor
add
mov
out
je
and
adc
fcomp
aaa
test
and
push
add
and
or
sbb
or
aas
mov
aaa
pop
movs
cmp
and
(bad)
daa
daa
pop
mov
loopne
aad
xor
push
(bad)
inc
push
push
les
jo
jo
(bad)
lds
das
xor
aam
adc
push
xor
pusha
aas
push
test
in
mov
test
gs
in
pcmpgtb
push
addr16
hlt
sbb
pop
xchg
jg
dec
cmc
cmp
outs
push
mov
push
cmc
mov
cmps
adc
inc
loop
fcom
jmp
jo
inc
xchg
movs
pushf
and
out
cmps
sahf
xor
pusha
cmps
push
mov
fistp
inc
std
adc
and
lahf
scas
call
push
retf
xor
out
test
fs
xor
add
fisttp
fidiv
call
fstp
or
add
daa
xchg
pop
es
or
pop
cmc
push
adc
cmp
cs
movs
das
dec
cmp
or
cmp
sbb
pop
adc
jl
imul
adc
lds
ds
ja
js
cmp
and
inc
aas
push
idiv
in
mov
test
gs
in
nop
inc
addr16
inc
mov
pmaddwd
outs
push
scas
xchg
repnz
push
mul
test
push
popf
xchg
adc
xchg
and
jo
inc
lods
movs
shl
and
push
xchg
mov
xor
in
repz
not
into
and
ret
inc
ffree
fist
mov
push
loopne
jmp
fs
add
fisttp
fbstp
aam
out
xor
les
jnp
sbb
or
push
xchg
pop
and
adc
ds
aaa
shld
pextrw
sub
sbb
sub
pop
aad
xor
inc
(bad)
dec
push
xor
and
pop
lds
das
pop
(bad)
jne
jg
dec
and
pop
push
cs
aas
ins
not
jb
push
mov
test
dec
in
lsl
inc
addr16
hlt
push
dec
xchg
imul
jg
push
add
push
hlt
gs
out
pushf
push
scas
xchg
adc
movs
and
jo
inc
mov
iret
and
cmps
mov
push
mov
xor
xlat
test
mov
out
scas
cmps
inc
cld
(bad)
rcl
mov
push
(bad)
mov
in
fidiv
fiadd
ret
(bad)
out
je
and
jne
lahf
lds
cmp
sbb
push
add
and
or
sbb
add
imul
xor
push
movs
jno
or
or
dec
aad
xor
push
(bad)
push
push
imul
nop
jo
dec
inc
pop
lds
pop
mov
aam
cmp
arpl
add
push
neg
addr16
mov
test
push
in
lsl
je
push
hlt
push
mov
or
push
pop
pop
push
fist
cmc
gs
test
add
mov
inc
mov
adc
lods
mov
and
jo
inc
mov
xchg
and
and
mov
pushf
fistp
inc
mov
(bad)
xchg
scas
mov
push
rol
xor
sar
in
shl
int3
add
in
iret
data16
les
in
mov
int3
jne
lahf
clc
xchg
and
das
test
shl
in
add
sub
or
add
aas
adc
movzx
aaa
push
movs
cmp
push
lds
adc
adc
adc
adc
adc
and
ds
jg
dec
les
nop
jo
push
das
pop
(bad)
ja
fs
cmp
push
sub
push
aas
push
test
in
mov
test
pop
in
nop
inc
addr16
hlt
push
mov
or
push
mov
lods
gs
test
push
mov
inc
mov
adc
lahf
mov
and
jo
inc
mov
iret
pushf
es
cdq
xor
pusha
mov
xor
in
jmp
in
adc
and
mov
not
ret
aad
push
out
repz
test
add
in
retf
out
je
and
adc
rcr
adc
add
jge
sbb
rcl
cmp
ds
aaa
and
and
add
push
loopne
aad
xor
or
jl
pop
les
nop
push
movs
adc
xor
adc
push
(bad)
pop
inc
pop
aam
add
push
arpl
pop
aas
push
imul
ins
in
mov
test
jno
arpl
pop
out
addr16
hlt
inc
mov
or
es
push
add
push
mul
test
push
into
xchg
adc
lods
and
jo
inc
mov
cdq
and
mov
mov
xor
retf
inc
mov
lds
inc
inc
loop
mov
icebp
xor
(bad)
mov
xchg
fs
add
enter
aad
ret
je
and
adc
fcomp
xor
add
jno
cmp
jae
push
outs
cmp
xchg
or
(bad)
cmc
pop
adc
push
mov
aaa
or
and
cmp
das
daa
pop
mov
loopne
aad
xor
dec
(bad)
ins
push
jl
and
jo
dec
inc
jno
or
pop
(bad)
jns
pop
aam
sbb
push
das
aad
aas
jge
inc
ja
in
mov
test
push
in
cmovp
push
addr16
hlt
inc
mov
pop
cmc
inc
pop
pop
push
adc
mov
mov
mov
inc
lahf
jne
xchg
mov
xchg
push
and
jo
inc
xchg
movs
xchg
and
and
push
(bad)
mov
xor
rcl
hlt
inc
cmps
adc
inc
xlat
scas
mov
push
leave
add
push
fidivr
(bad)
shl
int
fsubp
pushf
ror
shl
call
out
(bad)
xchg
or
add
add
sub
sub
adc
xchg
push
jg
mov
aaa
adc
sub
and
cmps
popa
daa
sbb
adc
adc
cmp
add
jg
imul
dec
inc
cmp
push
das
pop
(bad)
jo
data16
add
push
pop
aad
aas
dec
neg
dec
in
mov
test
nop
outs
addr16
hlt
dec
mov
add
gs
push
push
cmps
xchg
mov
xchg
add
xchg
fcom
in
movs
mov
and
jo
inc
lods
movs
xchg
and
and
push
stos
mov
xor
in
test
les
scas
jmp
add
xor
(bad)
mov
xchg
fs
xor
add
dec
bnd
and
adc
movs
lahf
les
xor
and
adc
sub
xor
sbb
sub
pop
cmc
or
sub
pop
lock
cmp
pop
cmps
cmp
loopne
aad
xor
dec
(bad)
push
nop
ins
movs
adc
lds
push
(bad)
jae
push
aam
add
push
(bad)
aad
aas
xor
pop
ja
in
mov
test
in
nop
inc
addr16
push
mov
dec
cmc
jge
inc
push
stos
xchg
test
push
mul
test
push
scas
xchg
cdq
xchg
mov
cmp
ss
mov
and
jo
inc
lock
mov
and
push
xchg
mov
xor
hlt
xlat
mov
fcom
leave
and
mov
fist
mov
push
repnz
jmp
in
gs
enter
(bad)
je
and
adc
into
lahf
lds
or
add
jge
aas
pop
aas
xchg
adc
add
sub
sbb
inc
lock
lds
pop
movs
adc
and
or
dec
aad
xor
push
(bad)
pusha
push
popa
les
nop
push
movs
dec
inc
jb
push
pop
(bad)
jnp
fs
adc
push
jbe
inc
aas
push
div
mov
test
push
in
lsl
push
addr16
hlt
sbb
bound
pop
pop
ja
test
mov
in
push
mul
test
add
xchg
xchg
fcom
mov
mov
mov
mov
test
mov
cwde
es
mov
push
div
mov
inc
mov
(bad)
jecxz
cli
inc
sti
(bad)
scas
push
fld
retf
aad
push
ret
jbe
not
shl
call
(bad)
sti
data16
out
je
and
adc
fstp
sub
jg
xor
cmp
or
adc
sbb
pop
adc
push
mov
aaa
adc
aaa
lock
outs
and
sbb
ds
aad
xor
adc
push
push
les
jo
push
das
push
(bad)
push
inc
fs
and
push
ja
inc
aas
push
imul
dec
in
mov
test
sbb
out
addr16
hlt
push
mov
or
push
pop
outs
push
mov
mov
add
mov
inc
mov
adc
mov
jo
inc
mov
fbld
xchg
cmps
xor
mov
xor
hlt
xlat
repz
out
into
and
mov
stc
push
lds
(bad)
xor
int
(bad)
jbe
test
add
fisttp
(bad)
je
and
adc
fcomp
jno
ins
rol
in
add
and
xor
pop
cmc
sbb
cmp
adc
and
sub
push
loopne
aad
xor
adc
les
nop
jb
adc
lds
das
jl
jae
jl
push
or
push
push
aad
aas
push
test
push
mov
test
in
movq
push
addr16
hlt
inc
mov
js
inc
pop
adc
test
scas
add
push
mov
mov
mov
lahf
xchg
adc
mov
inc
lea
fbld
cdq
cmps
mov
nop
pusha
nop
push
mov
fistp
inc
sti
adc
and
shr
push
int
mov
push
(bad)
mov
into
shl
jmp
(bad)
xchg
mul
(bad)
je
and
adc
fcomp
aaa
test
and
test
outs
jg
xor
adc
or
adc
and
or
push
aaa
pop
movs
sub
sbb
ss
sub
or
add
aaa
xor
push
(bad)
imul
movs
outs
inc
pop
lds
dec
(bad)
push
inc
addr16
cmp
push
jo
inc
aas
push
test
in
mov
test
push
in
lsl
push
addr16
hlt
push
mov
or
outs
pop
outs
push
test
mov
mov
mov
push
xchg
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
mov
movs
cmps
xchg
pusha
fst
mov
xor
jecxz
loopne
aad
in
and
xchg
scas
mov
push
aam
clc
xor
(bad)
mov
cmc
fs
xor
add
lds
mov
rcl
lahf
mov
jnp
push
in
add
sbb
adc
adc
xchg
push
jg
mov
aaa
and
and
and
adc
inc
aad
xor
ds
jl
xor
cmp
imul
jge
data16
and
jbe
push
aad
aas
push
imul
in
mov
test
in
punpckhbw
inc
addr16
hlt
dec
mov
pop
cmc
jbe
outs
push
test
sti
gs
mov
aad
mov
mov
inc
mov
adc
mov
mov
jo
inc
lods
movs
shl
xchg
cmps
xor
mov
xor
in
out
inc
rcl
into
and
ret
inc
rol
scas
push
retf
add
xor
cmp
retf
in
fimul
shl
ret
cmc
ret
jne
lahf
fcom
sbb
sbb
das
add
xchg
pop
cmp
adc
ds
aaa
and
lds
add
cmps
xor
add
xor
aaa
(bad)
push
push
jne
inc
nop
xor
ins
das
aas
(bad)
jae
das
aam
or
push
ins
aad
aas
push
imul
pop
in
mov
test
pop
in
lsl
inc
addr16
hlt
dec
mov
push
cmc
pop
pop
gs
sahf
xchg
scas
add
push
cmc
mov
mov
xchg
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
test
iret
call
pusha
xchg
push
sahf
mov
xor
in
test
mov
inc
test
in
aad
ficom
mov
loop
xlat
xor
add
(bad)
(bad)
(bad)
mul
(bad)
je
and
adc
fcomp
or
in
add
and
daa
rcl
cs
or
xor
push
lds
sbb
or
inc
aad
xor
adc
les
nop
xor
dec
das
je
fs
push
aam
add
push
push
aad
aas
jne
inc
ja
in
mov
test
push
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
jp
adc
lea
mov
mov
inc
mov
adc
mov
mov
cwde
movs
xchg
and
test
fwait
push
mov
fist
inc
lock
and
loope
mov
push
leave
add
xor
ret
jbe
not
add
ror
les
call
fstp
or
add
xor
xchg
adc
aas
cmc
sbb
cmp
movs
sub
and
cmps
adc
sbb
xor
adc
jl
les
push
movs
jo
cmp
inc
das
pop
(bad)
jb
cmp
mov
push
dec
aad
aas
sub
dec
ja
in
mov
test
in
unpckhps
jne
inc
hlt
push
mov
or
push
lods
xchg
mov
mov
test
push
mov
inc
mov
adc
repnz
and
jo
inc
fwait
movs
and
cmps
cmps
xor
pusha
xchg
push
movs
mov
xor
icebp
xlat
fild
int3
and
mov
aam
aam
in
not
aad
int
in
jbe
mul
fs
xor
add
fisttp
fbstp
hlt
adc
ret
xchg
ds
or
add
add
or
adc
das
mov
aaa
add
and
pop
cmps
jns
pop
mov
loopne
aad
xor
adc
pop
push
jbe
ins
nop
je
jp
pop
lds
das
pop
(bad)
push
inc
outs
aam
cmp
inc
aas
data16
adc
test
pop
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
push
push
test
mov
xchg
push
cmc
mov
mov
add
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
mov
mov
sahf
xor
pusha
rcl
mov
hlt
xlat
mov
rcl
leave
and
(bad)
scas
mov
push
int
stos
xor
ret
jbe
test
add
repnz
loopne
cli
out
je
and
jne
lahf
test
or
add
daa
xchg
pop
ds
or
data16
sbb
jg
mov
aaa
or
lds
and
sub
adc
add
aaa
xor
push
(bad)
ins
push
les
jo
addr16
pop
lds
das
pop
(bad)
push
inc
addr16
cmp
xor
jl
dec
test
in
mov
test
addr16
sysret
out
addr16
hlt
push
mov
inc
cmc
jbe
inc
push
adc
mov
mov
lods
xchg
adc
inc
mov
adc
mov
mov
stos
movs
scas
and
and
push
mov
fistp
inc
mov
(bad)
xchg
scas
aad
(bad)
push
retf
add
xor
clc
mov
retf
xor
lods
pop
data16
xor
int3
jne
lahf
mov
ins
shl
in
add
xchg
pop
aas
xchg
imul
cmc
push
adc
cmp
and
and
outs
and
cmp
xor
loopne
aad
xor
ds
jl
jbe
jne
dec
movs
ins
inc
cmp
adc
push
(bad)
addr16
fs
or
push
ins
aad
aas
jle
dec
ja
in
mov
test
in
nop
ins
addr16
hlt
push
mov
or
inc
pop
gs
xchg
xchg
test
push
mul
test
mov
inc
mov
adc
xchg
mov
and
jo
inc
lods
movs
and
lods
pusha
xchg
push
test
fbstp
inc
clc
adc
and
nop
scas
loopne
out
stc
push
into
add
xor
clc
mov
leave
fs
fiadd
lds
int3
je
and
adc
fcomp
ins
test
shl
in
add
and
or
cmp
inc
adc
imul
lock
cmp
and
xor
dec
aad
xor
dec
(bad)
bound
les
jnp
je
push
lds
das
inc
(bad)
jae
jg
arpl
arpl
inc
aas
ins
test
in
mov
test
gs
in
packsswb
push
addr16
hlt
push
mov
pop
cmc
outs
pop
push
add
push
mul
test
push
movs
xchg
adc
fbld
movs
pushf
and
xchg
cmps
xchg
xor
pusha
xchg
push
(bad)
mov
xor
(bad)
test
repz
xchg
scas
fild
(bad)
out
test
icebp
push
(bad)
mov
lahf
xlat
xor
add
jecxz
popf
mul
(bad)
je
and
adc
fcomp
das
test
and
dec
add
adc
aaa
pop
and
adc
add
movs
adc
sbb
xor
pop
movs
and
cmps
sbb
loopne
aad
xor
sbb
pop
push
popa
les
inc
jl
arpl
xor
jo
and
dec
or
push
das
aad
aas
pop
test
in
mov
test
push
in
cmovle
push
addr16
hlt
inc
mov
pop
cmc
pop
pop
imul
loopne
test
test
add
mov
inc
xchg
xchg
mov
mov
nop
inc
(bad)
movs
fsub
in
test
mov
xor
xchg
xlat
mov
mov
(bad)
xchg
scas
fadd
(bad)
in
leave
add
xor
les
fbld
cli
add
in
cwde
in
les
mov
rcr
and
in
add
daa
xchg
es
or
add
xchg
push
jg
mov
aaa
adc
daa
lock
lds
inc
movs
sbb
daa
sbb
push
loopne
aad
xor
dec
(bad)
jl
sub
inc
nop
jae
dec
inc
push
lds
das
push
(bad)
addr16
fs
xor
push
sub
jns
push
test
in
mov
test
pop
in
lsl
inc
addr16
hlt
inc
mov
push
cmc
pop
pop
gs
adc
gs
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
lea
mov
pusha
stos
push
cli
mov
xor
in
test
and
ret
inc
ffree
stc
push
aam
loopne
(bad)
push
in
in
retf
fs
xor
add
mov
retf
out
je
and
jne
lahf
les
jnp
adc
das
add
je
add
rcr
adc
jg
mov
aaa
and
and
and
mov
loopne
aad
xor
aas
(bad)
push
nop
jb
ja
pop
lds
das
push
(bad)
arpl
aam
and
push
sub
js
push
not
imul
mov
test
push
in
cmovo
jg
inc
hlt
adc
push
cmc
pop
pop
dec
push
xchg
xchg
test
push
cmc
gs
test
push
fld
mov
adc
xchg
mov
and
jo
inc
mov
iret
fbld
xchg
cmps
mov
xchg
pusha
xchg
push
mov
fist
loop
leave
and
(bad)
scas
mov
push
jecxz
mov
push
fdivr
into
shl
out
add
ror
je
and
adc
rcr
test
add
push
add
and
or
push
cmc
sub
sub
add
mov
aaa
pop
movs
add
xor
xor
movs
ds
and
or
or
sbb
pop
dec
(bad)
ins
push
push
push
nop
jo
dec
inc
inc
lds
cmp
inc
inc
and
xor
inc
aad
aas
push
div
outs
in
mov
test
outs
in
lsl
inc
addr16
hlt
push
mov
dec
cmc
pop
pop
or
mov
push
mov
test
add
mov
inc
mov
adc
mov
mov
jmp
mov
test
xchg
push
stc
mov
xor
in
xlat
into
inc
cmps
adc
and
xchg
scas
jmp
add
push
ret
jbe
not
add
repnz
sti
data16
mov
rcl
lahf
(bad)
xchg
add
sub
jg
adc
test
and
and
fs
add
or
cs
add
sub
and
push
cmps
sbb
loopne
aad
xor
ds
jg
push
les
nop
inc
movs
jl
cmp
adc
imul
imul
aad
aas
push
neg
in
mov
test
gs
in
cmovs
dec
addr16
dec
mov
or
push
lods
xchg
mov
lahf
push
mul
test
push
mov
inc
xchg
xchg
mov
movs
mov
and
jo
inc
xchg
movs
fbld
xchg
cmps
xor
retf
mov
xor
rcl
inc
int3
and
shr
push
loopne
mov
push
repnz
enter
repz
in
retf
out
je
and
adc
lds
xor
in
add
sub
adc
adc
and
jg
mov
aaa
shld
sbb
cmp
sbb
adc
dec
aad
xor
xor
push
push
jne
inc
nop
dec
movs
dec
inc
jae
jge
pop
(bad)
pop
inc
outs
aam
and
push
arpl
jo
neg
dec
in
mov
test
imul
push
addr16
hlt
adc
jnp
pop
jne
cmc
inc
pop
js
test
mov
mov
test
push
scas
xchg
jne
xchg
adc
lods
jo
inc
xchg
movs
mov
es
cmps
sahf
xor
pusha
xchg
push
mov
fist
mov
lds
inc
inc
sti
push
iret
add
xor
fdivr
into
fs
xor
add
mov
hlt
data16
and
adc
rcr
test
adc
sub
xor
xchg
or
pop
cmc
and
sub
add
mov
aaa
add
and
and
or
pop
aad
xor
xor
ins
push
jo
sub
aaa
movs
dec
inc
jno
fs
inc
(bad)
arpl
aam
adc
push
jl
inc
aas
dec
neg
in
mov
test
push
in
sysret
out
addr16
hlt
push
mov
inc
cmc
inc
pop
dec
push
mov
test
mov
add
mov
cmps
adc
inc
mov
fcom
xchg
mov
mov
scas
movs
mov
xchg
cmps
les
pusha
xchg
push
xchg
mov
xor
retf
inc
std
adc
and
retf
inc
sti
(bad)
out
push
leave
add
push
ret
jbe
not
shl
enter
popf
gs
retf
out
je
and
adc
ret
lahf
repnz
adc
shl
pop
outs
sub
xchg
sub
daa
cmc
sbb
push
add
sub
and
cmp
pop
loopne
aad
xor
adc
dec
push
inc
les
dec
movs
ja
pusha
lds
das
push
(bad)
push
inc
fs
sbb
push
jge
inc
aas
js
imul
push
mov
test
inc
in
unpckhps
and
mov
or
push
mov
pushf
add
push
mul
test
push
xchg
movs
jne
xchg
jmp
mov
cdq
xchg
mov
and
and
xchg
xor
loop
out
inc
in
adc
and
shr
ficom
lock
sar
shl
add
int
retf
out
je
and
adc
repnz
les
jnp
and
adc
xchg
rol
inc
adc
outs
mov
aaa
and
and
adc
xor
sbb
xor
push
(bad)
dec
push
jbe
and
jno
adc
outs
(bad)
pop
inc
je
or
push
cs
aas
push
mul
push
in
mov
test
push
in
sysret
out
addr16
push
mov
push
cmc
pop
pop
push
add
push
sti
mov
stos
push
scas
xchg
jne
xchg
adc
mov
and
jo
inc
mov
iret
test
xchg
cmps
sahf
xor
pusha
mov
xor
hlt
xlat
loop
mov
(bad)
xchg
scas
cmc
inc
inc
out
ret
xor
repz
shl
add
jecxz
aam
(bad)
je
and
adc
fcomp
and
add
or
daa
rcr
sbb
jg
mov
aaa
sub
lds
adc
mov
loopne
aad
xor
pop
(bad)
bound
les
nop
jae
je
jb
adc
inc
arpl
sub
and
inc
aas
push
imul
push
in
mov
test
sbb
dec
cvtps2pd
push
addr16
push
mov
outs
cmc
pop
pop
jae
fist
mov
mov
mov
add
jne
xchg
mov
ss
mov
and
jo
inc
scas
movs
xchg
and
mov
ret
pusha
xchg
push
mov
mov
pushf
fild
inc
repz
and
sahf
scas
aam
repz
in
out
fidiv
cmp
into
add
fisttp
xor
int3
jne
lahf
rcl
ins
ror
in
add
and
adc
adc
or
jg
mov
aaa
push
movs
sub
and
sbb
push
loopne
aad
xor
dec
(bad)
jl
jne
and
dec
lds
(bad)
pop
inc
addr16
add
push
dec
aad
aas
push
div
dec
in
mov
test
pop
in
nop
push
addr16
hlt
push
mov
or
gs
outs
push
scas
xchg
lahf
add
push
mul
test
push
mov
inc
jmp
test
lods
ss
mov
and
jo
inc
mov
mov
xchg
cmps
mov
push
cwde
mov
xor
in
out
inc
lods
adc
and
mov
stc
push
int
shl
cld
mov
fsub
retf
in
gs
(bad)
out
je
and
adc
neg
test
shl
add
and
push
shl
push
adc
add
movs
pop
lock
push
and
and
adc
pop
aad
xor
cmp
push
push
push
movs
dec
inc
imul
inc
inc
jno
inc
add
dec
aad
aas
pop
test
in
mov
test
sbb
sub
dec
out
addr16
hlt
dec
mov
or
push
mov
xchg
gs
test
push
movs
xchg
jne
xchg
mov
ss
mov
and
jo
inc
out
mov
popf
iret
call
pusha
mov
xor
rcl
lds
leave
and
(bad)
scas
mov
push
leave
add
xor
lds
into
xor
add
test
clc
data16
out
je
and
adc
rcr
test
sbb
dec
add
jns
aaa
pop
cmp
adc
adc
imul
push
and
xor
cmp
loopne
aad
xor
pop
(bad)
adc
les
sub
push
inc
jp
push
sbb
sub
inc
aas
push
mul
push
in
mov
test
push
in
lsl
push
addr16
imul
jb
mov
mov
in
test
test
add
xchg
xchg
mov
mov
movs
mov
and
jo
inc
mov
movs
and
xchg
cmps
xchg
pusha
(bad)
push
mov
fild
inc
mov
(bad)
xchg
scas
inc
(bad)
(bad)
push
mov
shl
(bad)
mov
out
shl
retf
in
gs
sti
data16
les
rcl
out
lahf
fist
and
jne
dec
add
and
and
sbb
pop
adc
ja
getsec
adc
add
push
lds
and
cmp
sbb
xor
xor
adc
jbe
inc
les
nop
movs
ins
inc
pop
lds
pop
(bad)
je
dec
aam
add
jl
inc
aas
pop
div
dec
in
mov
test
in
unpckhps
inc
addr16
push
mov
or
push
lods
xchg
test
gs
test
push
lds
cwde
jne
xchg
mov
call
and
jo
inc
hlt
movs
frstor
movs
cmps
xchg
pusha
xchg
push
lods
mov
xor
in
call
and
ret
inc
rol
in
loop
mov
push
cld
mov
(bad)
fs
xor
add
mov
retf
out
je
and
jne
lahf
enter
aaa
test
and
add
outs
and
adc
ds
pop
adc
cmp
xor
sub
cmp
and
adc
dec
aad
xor
cmp
push
nop
ins
movs
or
lds
inc
mov
jg
dec
or
push
xor
inc
aas
push
test
in
mov
test
popa
in
subps
addr16
hlt
dec
mov
or
pop
pop
push
add
push
cmc
mov
mov
adc
inc
xchg
jne
xchg
lahf
adc
sahf
mov
and
jo
inc
test
shl
cmps
mov
push
in
xor
xlat
test
repz
xchg
scas
cld
inc
vcvtpd2dq
cmc
xor
fstp
xchg
xlat
xor
gs
fsub
out
je
and
adc
fcomp
aaa
test
or
push
add
and
or
add
add
imul
lock
xor
and
adc
add
mov
pop
push
(bad)
fs
aaa
les
xor
pop
inc
lds
pop
(bad)
pop
inc
pop
aam
sbb
push
das
aad
aas
jnp
inc
ja
in
mov
test
jge
xor
adc
hlt
push
mov
inc
cmc
push
pop
or
adc
mov
mov
scas
xchg
adc
inc
mov
adc
mov
mov
scas
movs
mov
movs
cmps
mov
shl
push
movs
mov
xor
lock
hlt
inc
call
in
and
xchg
scas
mov
push
mov
aad
push
clc
mov
into
shl
nop
add
ret
data16
popf
je
and
jne
lahf
(bad)
xchg
and
test
shl
in
add
jg
daa
pop
es
push
rcl
cs
mov
aaa
or
and
inc
cmps
sbb
sbb
xor
adc
push
push
les
jo
jge
inc
lds
das
dec
(bad)
jne
fs
or
push
dec
aad
aas
push
test
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
(bad)
cmc
popw
ins
push
mov
test
gs
test
push
mov
inc
mov
adc
in
mov
and
jo
inc
lods
movs
fbld
xchg
cmps
mov
mov
push
mov
fistp
inc
lods
adc
and
jmp
mov
xor
in
stos
jbe
neg
add
fimul
fbstp
adc
lahf
les
jnp
jo
dec
add
and
sub
pop
cmc
push
adc
or
cs
cmp
and
daa
loopne
aad
xor
push
(bad)
push
push
jae
push
nop
pop
movs
adc
lds
das
outs
(bad)
dec
inc
inc
aam
and
pop
push
push
aad
aas
dec
test
in
mov
test
jg
dec
cmovnp
pop
addr16
hlt
pop
mov
pmaddwd
push
add
push
cli
mov
mov
adc
inc
test
xchg
jecxz
mov
mov
and
jo
inc
in
movs
pushf
and
xchg
cmps
call
mov
xor
into
xlat
repz
cmps
adc
and
aad
fadd
(bad)
xlat
push
jmp
aad
push
(bad)
mov
cld
mov
retf
add
loope
(bad)
iretw
out
je
and
jne
lahf
retf
xchg
adc
or
in
add
xchg
pop
aas
xchg
xor
adc
and
sub
inc
lock
xor
pop
movs
push
dec
sbb
push
loopne
aad
xor
push
(bad)
jo
popa
les
jo
or
lds
aas
(bad)
arpl
aam
add
push
dec
aad
aas
push
div
ja
in
mov
test
push
in
minps
inc
addr16
hlt
dec
mov
or
pop
pop
outs
push
adc
gs
stos
add
mov
mov
jne
xchg
mov
ss
mov
and
jo
inc
mov
fisub
mov
xchg
push
cmps
mov
xor
enter
sti
adc
and
iret
scas
mov
push
leave
add
push
ret
jbe
not
xlat
xor
add
ror
xor
adc
out
lds
ins
sar
in
add
and
adc
xor
cmc
or
jg
mov
aaa
push
movs
sub
and
and
mov
loopne
aad
xor
cmp
jl
xor
jb
jae
pop
inc
cmp
dec
das
jge
addr16
arpl
xor
inc
mov
push
jl
pop
aas
push
test
in
mov
test
in
unpcklps
addr16
hlt
push
mov
or
push
movs
xchg
test
push
jmp
add
mov
adc
xchg
mov
movs
mov
and
jo
inc
jmp
cmps
and
xchg
cmps
xchg
pusha
xchg
push
mov
fisttp
cmps
adc
and
lahf
scas
mov
push
aam
mov
push
lds
aad
out
leave
add
fisttp
test
ret
adc
fcomp
add
add
and
or
adc
imul
lock
xor
dec
and
pop
loopne
aad
xor
adc
les
cmp
adc
push
(bad)
jae
pop
aam
or
push
pop
aad
aas
push
neg
push
fs
test
gs
in
minps
push
addr16
hlt
dec
mov
add
dec
pop
inc
push
adc
cmps
test
push
add
xchg
adc
test
jo
inc
lods
movs
mov
es
iret
xor
pusha
test
mov
xor
repz
inc
enter
retf
scas
mov
push
into
add
push
lock
in
xlat
xor
add
loope
jmp
and
adc
mov
pop
je
cmp
and
daa
ror
push
adc
sub
adc
push
movs
sbb
sbb
and
xor
cmps
sbb
loopne
aad
xor
xor
jne
dec
les
nop
jb
jne
(bad)
lds
pop
(bad)
gs
addr16
cmp
push
imul
aas
push
idiv
adc
ins
mov
test
push
in
cmovp
push
addr16
hlt
push
mov
push
cmc
pop
pop
outs
push
nop
xchg
mov
test
pop
test
movs
xchg
jne
xchg
mov
xor
inc
mov
pushf
and
and
push
mov
lods
push
xchg
xlat
fiadd
retf
and
xchg
scas
cmc
inc
in
icebp
push
enter
rcl
push
(bad)
mov
repnz
lds
in
int
shl
les
rcl
lahf
(bad)
xchg
add
sub
add
xchg
pop
es
and
adc
xchg
push
jg
mov
aaa
push
movs
cs
ins
and
add
and
xor
sub
les
nop
jae
dec
inc
lds
das
pop
mov
fs
cmp
push
arpl
add
outs
test
in
mov
test
push
in
andnps
ja
pop
hlt
push
mov
or
inc
pop
outs
push
stos
xchg
movs
add
push
mul
test
mov
inc
jmp
test
xchg
pushf
mov
and
jo
inc
mov
xchg
es
cmps
cdq
xor
pusha
cdq
push
cli
mov
xor
cmc
xlat
rol
and
mov
stc
push
aam
out
out
aad
push
(bad)
mov
leave
fs
aad
stos
in
test
les
fcomp
xor
arpl
cmp
push
add
jle
es
cmp
adc
movzx
aaa
shld
lds
and
and
adc
dec
aad
xor
dec
(bad)
push
nop
inc
movs
adc
cmp
jne
push
(bad)
popa
inc
jg
dec
xor
push
arpl
inc
aas
neg
push
in
mov
test
pop
in
sysret
out
addr16
dec
mov
inc
cmc
pop
pop
push
push
test
in
add
push
cmc
gs
test
push
fld
loope
cmps
xchg
in
adc
lea
mov
stos
movs
pushf
and
xchg
cmps
call
mov
xor
nop
xlat
les
(bad)
and
xchg
scas
mov
push
int
in
aad
test
jbe
test
add
dec
cli
je
and
adc
fistp
aaa
test
cmp
push
add
cmp
or
push
cmc
sbb
jg
mov
aaa
sub
and
sub
sub
xor
push
(bad)
outs
push
(bad)
les
ins
movs
push
pop
lds
das
fs
push
inc
addr16
add
push
dec
aad
aas
ins
test
in
mov
test
push
in
unpckhps
push
addr16
hlt
imul
or
add
push
hlt
gs
test
mov
inc
mov
adc
lahf
mov
and
jo
inc
pushf
movs
xchg
and
xchg
cmps
xchg
pusha
fst
mov
xor
out
out
inc
mov
(bad)
xlat
scas
mov
push
leave
add
push
ret
jbe
not
xchg
xchg
add
(bad)
(bad)
jmp
(bad)
fdiv
rcl
lahf
rcl
add
push
in
add
or
sub
adc
xchg
push
jg
mov
aaa
push
movs
push
lock
lds
adc
sbb
sbb
xor
adc
jl
xor
cmp
cmp
adc
je
outs
inc
jb
inc
add
push
dec
aad
aas
push
test
in
mov
test
dec
in
unpckhps
inc
addr16
hlt
bound
push
cmc
pop
pop
dec
push
lods
xchg
test
gs
test
push
ret
adc
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
call
cmps
scas
xor
pusha
mov
xor
in
in
inc
mov
(bad)
shr
aad
aam
stos
xor
fidivr
shl
lds
mov
leave
data16
out
je
and
jne
lahf
mov
pusha
shr
in
add
and
or
adc
pop
mov
aaa
shld
lds
and
and
adc
or
cmp
dec
mov
pop
adc
push
nop
jb
push
inc
pop
lds
das
jp
arpl
aam
xor
push
arpl
inc
aas
inc
not
in
mov
test
jno
bndmov
pop
addr16
hlt
inc
mov
inc
cmc
inc
pop
js
test
xchg
add
push
cmc
gs
test
push
fld
xor
in
adc
xchg
mov
and
jo
inc
mov
iret
test
and
cdq
xor
in
xlat
iret
inc
mov
lds
ret
(bad)
in
mov
aad
push
(bad)
mov
into
shl
out
add
cmc
(bad)
loop
hlt
out
je
and
adc
fcomp
aaa
test
adc
or
add
aaa
pop
cs
daa
rcr
push
adc
sbb
xor
add
xor
and
cmps
add
inc
mov
loopne
aad
xor
sbb
outs
push
inc
les
inc
jb
push
das
pop
mov
addr16
add
push
outs
aad
aas
jg
jno
(bad)
in
mov
test
ins
in
subps
inc
addr16
je
push
jp
push
cmc
bound
jle
adc
lods
test
add
pop
lahf
jne
xchg
call
mov
mov
jmp
iret
lahf
es
pusha
(bad)
push
cli
mov
xor
jecxz
ret
adc
and
xchg
scas
hlt
inc
std
(bad)
call
mov
push
lds
xchg
xor
pushf
gs
fsub
out
je
and
adc
call
or
in
add
and
imul
cmc
pop
adc
sbb
add
xor
sub
pop
cmps
sbb
sbb
aaa
loopne
aad
xor
adc
inc
push
pop
les
nop
jb
jp
push
lds
pop
mov
dec
mov
push
dec
aad
aas
dec
neg
dec
in
mov
test
arpl
dec
unpcklps
dec
addr16
push
mov
or
push
test
test
gs
test
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
lods
movs
mov
es
pusha
xchg
push
mov
fbstp
inc
lods
adc
inc
lds
stc
push
retf
add
xor
hlt
mov
into
fs
xor
add
fimul
shl
les
loop
lds
shl
in
add
and
sub
pop
cmc
inc
adc
ds
aaa
or
pop
lock
movs
and
cmps
xor
add
push
loopne
aad
xor
adc
les
nop
xor
push
das
aas
(bad)
je
pop
aam
or
push
arpl
add
ja
in
mov
test
push
in
lsl
dec
addr16
hlt
jge
jl
inc
jne
cmc
pop
pop
pop
push
mov
scas
add
push
cwde
mov
call
inc
mov
adc
cmc
mov
and
jo
inc
out
xchg
and
xchg
cmps
sahf
xor
pusha
pushf
push
mov
fistp
inc
mov
lds
inc
add
push
mov
xor
sar
shl
add
loop
cmc
data16
fnstenv
enter
int3
jne
lahf
mov
pusha
shl
dec
add
aas
xchg
pop
ds
pop
shl
adc
push
mov
aaa
and
lds
and
add
cmp
xor
or
ins
push
popa
les
jo
dec
inc
dec
lds
pop
(bad)
pop
inc
addr16
and
pop
push
pop
aad
aas
push
div
ja
in
mov
test
push
in
divps
push
addr16
hlt
inc
mov
outs
cmc
pop
pop
imul
xchg
mov
call
gs
inc
xchg
xchg
jne
xchg
mov
xchg
out
mov
nop
inc
mov
sahf
and
xchg
cmps
mov
push
cmps
mov
xor
rcl
inc
mov
(bad)
lds
cmps
push
leave
add
push
les
icebp
fs
xor
add
out
loope
(bad)
xor
adc
int
(bad)
xchg
xor
cmp
ins
shl
in
add
sbb
imul
cmc
sbb
cmp
movs
sub
and
or
mov
loopne
aad
xor
sbb
pop
push
imul
dec
inc
and
pop
das
ds
jns
je
popa
xor
push
ins
aad
aas
push
test
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
dec
cmc
pop
pop
imul
in
push
fwait
gs
add
ret
adc
inc
test
test
jmp
and
jo
inc
xchg
movs
fbld
xchg
cmps
call
mov
xor
retf
inc
lods
adc
and
fild
stc
push
rol
mov
push
(bad)
mov
leave
fs
xor
add
call
out
je
and
adc
loop
lds
ins
rol
in
add
sub
sbb
adc
cmp
adc
or
cmp
sub
adc
pop
aad
xor
sbb
pusha
push
jbe
outs
nop
jnp
adc
cmp
data16
push
(bad)
jle
pusha
aam
add
push
popa
aad
aas
push
not
push
in
mov
test
push
in
sysret
out
addr16
push
mov
push
cmc
arpl
push
add
push
sti
gs
out
std
push
les
cdq
jne
xchg
mov
cmp
ss
and
jo
inc
test
pushf
and
cdq
cmps
sahf
xor
pusha
xchg
push
mov
fistp
inc
cli
adc
and
xchg
scas
aad
inc
in
in
add
push
(bad)
mov
into
xlat
xor
add
ror
aam
aad
rcl
lahf
rcl
pusha
shl
in
add
add
or
sbb
sbb
jg
mov
aaa
or
adc
sbb
es
sub
and
inc
aad
xor
push
(bad)
inc
push
jg
sub
jo
or
lds
push
mov
aam
add
push
das
aad
aas
push
in
mov
test
add
push
lsl
jne
pop
hlt
push
mov
inc
cmc
pop
pop
pop
push
fist
mov
test
push
fld
mov
adc
movs
mov
and
jo
inc
mov
cdq
and
xor
xlat
test
and
mov
jecxz
test
enter
repz
not
xlat
xor
add
fisttp
shl
adc
int
(bad)
xchg
ds
das
test
in
add
sbb
imul
cmc
sbb
ds
aaa
and
and
add
mov
loopne
aad
xor
adc
jno
imul
dec
inc
ins
lds
das
push
(bad)
fs
je
dec
add
push
ins
aad
aas
jge
inc
ja
in
mov
test
in
unpckhps
inc
addr16
hlt
je
jge
gs
cmc
pop
pop
imul
xchg
mov
call
add
scas
xchg
popf
xchg
mov
movs
mov
and
jo
inc
mov
iret
pushf
es
cmps
cdq
xor
pusha
mov
xor
out
retf
adc
and
mov
out
push
in
add
xor
(bad)
mov
xlat
fs
xor
ror
je
and
adc
loop
fist
add
add
jne
sbb
adc
adc
ss
aaa
push
movs
pop
lock
imul
cmps
sbb
add
adc
xor
adc
les
nop
jae
imul
adc
inc
(bad)
pop
inc
jno
data16
jae
sbb
push
test
push
mov
test
push
in
packsswb
push
addr16
hlt
inc
mov
or
push
test
mov
adc
mov
mov
add
in
adc
test
xchg
and
jo
inc
out
lods
and
xchg
cmps
call
mov
xor
rcl
inc
repnz
and
xchg
scas
mov
push
enter
aad
test
jbe
test
add
loop
enter
xlat
je
and
adc
out
lds
pusha
rcl
in
add
adc
aaa
pop
cmp
adc
push
mov
aaa
movs
inc
lock
push
and
cmp
cmp
loopne
aad
xor
push
(bad)
ins
push
xor
movs
gs
cmp
jbe
pop
(bad)
arpl
aam
add
push
arpl
push
aas
push
test
in
mov
test
pop
in
nop
popa
outs
hlt
push
mov
inc
cmc
inc
pop
jb
mov
push
mov
mov
mov
mov
inc
mov
mov
mov
mov
and
movs
shl
pushf
cmps
xchg
pusha
test
mov
fistp
inc
fst
retf
and
xchg
scas
loopne
loope
icebp
push
ret
add
xor
clc
mov
shl
add
fisttp
les
rcl
mov
pop
test
in
add
sbb
sub
add
sbb
cmp
movs
adc
xor
outs
and
add
mov
loopne
aad
xor
or
adc
les
jae
dec
inc
ins
lds
das
pop
(bad)
pop
inc
pop
aam
xor
push
ins
aad
aas
pop
test
in
mov
test
in
cmovae
inc
addr16
je
jge
push
jne
cmc
pop
pop
pop
push
mov
push
lea
test
push
mov
inc
xchg
jne
xchg
jmp
movs
mov
and
jo
inc
out
movs
pushf
and
scas
cmps
popf
xor
pusha
retf
push
mov
(bad)
push
(bad)
hlt
inc
xlat
adc
and
ret
inc
ffree
stc
push
icebp
add
push
cmp
jecxz
cmc
in
gs
int
jmp
fbstp
in
shl
jne
lahf
les
xor
and
push
add
and
push
rcr
push
adc
ds
aaa
or
and
sbb
add
pop
mov
loopne
aad
xor
adc
les
nop
inc
movs
push
das
inc
(bad)
jns
jnp
dec
adc
push
arpl
sbb
push
neg
jne
pop
mov
test
dec
in
nop
pop
ins
hlt
dec
mov
inc
cmc
pop
pop
jp
xchg
xchg
scas
add
push
in
mov
mov
xchg
xchg
cmps
xchg
nop
adc
push
mov
lods
movs
scas
and
xchg
cmps
sahf
xor
pusha
rcl
mov
hlt
xlat
aad
mov
lds
inc
inc
in
in
add
xor
(bad)
mov
into
fs
add
ror
ret
je
and
adc
fstp
das
test
adc
push
add
xchg
pop
add
adc
push
mov
aaa
pop
movs
adc
and
sbb
or
dec
aad
xor
pop
(bad)
pop
push
popa
les
movs
dec
inc
cmp
pusha
das
xor
aam
add
push
cs
aas
dec
test
in
mov
test
push
in
movq
inc
addr16
hlt
popa
mov
pop
cmc
inc
pop
imul
in
mov
test
add
call
jne
xchg
mov
mov
mov
scas
movs
mov
cmps
cmps
xchg
pusha
cwde
push
mov
fistp
inc
mov
korw
scas
fld
mov
xor
ret
jbe
not
xlat
xor
add
retf
(bad)
out
je
and
adc
fstp
je
or
sbb
xadd
cmc
adc
jg
mov
aaa
adc
and
daa
lds
or
cmps
daa
daa
sbb
pop
loopne
aad
xor
adc
jg
les
nop
jo
jno
pop
lds
das
pop
(bad)
push
inc
pop
aam
sub
add
aad
aas
data16
in
mov
test
jp
bound
sbb
ins
outs
hlt
push
mov
inc
cmc
js
push
push
lods
xchg
sahf
add
push
mul
test
xchg
mov
adc
xchg
mov
and
jo
inc
mov
fbld
xchg
cmps
into
xor
pusha
adc
mov
in
out
inc
mov
(bad)
xchg
scas
loopne
jecxz
in
mov
lds
(bad)
mov
out
fs
xor
add
in
enter
cdq
je
and
adc
rcr
test
add
push
add
and
and
cmp
sbb
and
adc
xor
and
and
pop
loopne
aad
xor
push
(bad)
ja
push
pop
nop
ins
movs
or
das
pop
(bad)
push
inc
jge
dec
or
push
arpl
inc
aas
pop
imul
ja
in
mov
test
dec
in
lsl
and
hlt
dec
mov
inc
cmc
jo
or
ficom
mul
test
push
into
xchg
adc
shl
movs
mov
mov
cmps
les
pusha
xchg
push
mov
fistp
inc
lods
adc
inc
xchg
scas
mov
push
jecxz
mov
push
icebp
mov
jmp
enter
cli
gs
sahf
data16
and
adc
fcomp
pop
test
and
sub
cmp
dec
outs
arpl
aaa
rcr
sbb
jg
mov
aaa
or
and
and
sub
xor
push
(bad)
ins
push
popa
les
dec
movs
push
inc
jle
push
das
pop
(bad)
gs
ja
push
add
push
das
aad
aas
jne
je
push
in
mov
test
pop
in
lsl
push
addr16
imul
outs
push
xchg
xchg
mov
push
xchg
mov
mov
mov
loopne
lods
inc
movs
jne
xchg
mov
test
jmp
mov
jo
inc
test
xchg
and
mov
xchg
push
cdq
mov
xor
retf
inc
mov
(bad)
out
stc
inc
mov
push
leave
add
push
sar
shl
nop
add
out
retf
out
je
and
jne
lahf
(bad)
xchg
or
cmp
ins
shl
in
add
and
or
sbb
sbb
fs
aaa
adc
and
pop
cmps
and
loopne
aad
xor
adc
jl
xor
cmp
pop
lds
das
push
jne
push
aam
add
push
ins
aad
aas
pop
mul
dec
in
mov
test
in
unpckhps
inc
outs
hlt
je
jg
jne
pop
cmc
pop
pop
dec
push
mov
test
gs
push
mov
inc
call
jmp
mov
mov
lods
movs
(bad)
(bad)
cmps
mov
push
cmps
mov
xor
in
mov
lods
adc
and
repz
inc
(bad)
out
in
add
push
(bad)
mov
les
lds
fisttp
fbstp
std
adc
cmc
lahf
lds
pusha
shl
in
add
or
or
adc
push
mov
aaa
pop
movs
add
sbb
xor
dec
and
pop
loopne
aad
xor
or
les
nop
movs
adc
jl
popa
das
push
(bad)
jo
and
pop
and
pop
push
jbe
jl
push
not
dec
in
mov
test
popa
in
lsl
pop
addr16
hlt
push
mov
or
jg
or
test
mov
gs
mov
mov
scas
xchg
mov
jmp
ss
xchg
and
jo
inc
out
les
nop
cmps
mov
pusha
test
mov
xor
into
xlat
in
mov
(bad)
xchg
scas
iret
inc
inc
mov
xor
(bad)
mov
into
fs
xor
add
repnz
data16
je
and
adc
rcr
sub
add
add
jno
sbb
sbb
jg
mov
aaa
pop
movs
adc
pop
lds
and
aas
cmps
sbb
loopne
aad
xor
sbb
push
push
popa
les
nop
xor
push
das
dec
(bad)
arpl
aam
and
inc
aas
push
mul
push
in
mov
test
push
in
cmovp
pop
addr16
pusha
mov
inc
cmc
pop
pop
dec
push
mov
mov
adc
mov
mov
adc
inc
mov
adc
lods
mov
and
jo
inc
mov
test
mov
pusha
xchg
mov
xor
xchg
xlat
icebp
inc
mov
(bad)
imul
cmps
push
rol
xor
sar
xchg
mov
(bad)
out
je
and
adc
fstp
ja
add
cmp
sub
jge
daa
pop
adc
cmc
sbb
cmp
pop
lock
movs
jb
cmps
fs
sbb
xor
ds
jl
jbe
xchg
jae
dec
inc
pop
lds
das
pop
(bad)
pop
inc
pop
aam
add
push
pop
aad
aas
pop
imul
popa
in
mov
test
pop
in
(bad)
out
addr16
hlt
push
mov
push
cmc
popw
outs
push
rcl
lock
mov
adc
inc
movs
jne
xchg
mov
xchg
xchg
movs
fbld
fwait
cmps
cdq
xor
pusha
mov
xor
jmp
and
mov
out
mov
mov
push
(bad)
mov
out
fs
xor
add
ror
je
and
adc
aam
retf
xchg
xor
aaa
test
jp
daa
add
xchg
pop
cmp
adc
ds
aaa
add
and
and
adc
dec
aad
xor
and
push
nop
dec
movs
adc
lds
push
push
inc
and
mov
push
push
aad
aas
ins
neg
jno
sbb
popa
in
nop
pop
addr16
hlt
push
mov
or
jg
jle
test
scas
add
push
in
mov
mov
mov
inc
movs
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
les
mov
pusha
mov
xor
hlt
xlat
cld
inc
mov
korb
scas
mov
push
into
add
xor
into
mov
mov
into
add
ror
loop
cld
and
adc
fcomp
aaa
test
adc
test
jne
pop
pop
xor
adc
jae
ins
aaa
push
movs
adc
add
movs
push
dec
das
cmps
sbb
loopne
aad
xor
dec
(bad)
adc
nop
jo
or
lds
pop
(bad)
push
inc
fs
or
push
sub
mul
in
mov
test
pop
in
cmova
bound
hlt
push
mov
inc
cmc
push
pop
inc
push
adc
gs
test
push
mov
mov
mov
div
movs
mov
and
jo
inc
mov
mov
es
cmps
ret
pusha
xchg
push
cmps
mov
xor
rcl
inc
mov
korw
scas
mov
push
test
iret
push
sar
div
retf
add
out
enter
std
je
and
adc
fstp
sub
(bad)
shr
adc
push
xchg
pop
es
je
pusha
cmc
sbb
cmp
movs
sub
and
and
adc
add
and
push
mov
pop
sbb
dec
push
ja
aas
nop
jp
dec
inc
cmp
or
imul
jne
inc
mov
push
ins
aad
aas
push
mul
dec
in
mov
test
pop
in
pcmpeqd
inc
addr16
hlt
push
mov
or
cmp
outs
push
lods
xchg
lahf
add
push
mul
test
push
ret
adc
inc
mov
adc
cmc
mov
and
jo
inc
test
mov
xor
pusha
retf
mov
xor
leave
xlat
out
inc
mov
korw
scas
mov
push
aam
mov
push
lds
leave
xlat
xor
gs
(bad)
out
je
and
jne
lahf
les
jnp
es
add
adc
xchg
aaa
rcr
inc
adc
cmp
movs
pop
lock
lds
and
push
cmps
add
inc
mov
loopne
aad
xor
add
les
ins
movs
jle
jno
adc
push
mov
jg
inc
cmp
pusha
aas
push
not
pop
in
mov
test
in
cmovae
push
addr16
hlt
sbb
jne
cmc
and
xchg
stos
add
push
mov
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
out
xchg
and
nop
cmps
mov
xchg
pusha
mov
xor
(bad)
xlat
in
loopne
leave
and
jmp
fild
(bad)
fcom
mov
push
sar
mov
retf
add
in
call
je
and
mov
pop
jo
pusha
rcl
in
add
push
xchg
pop
cmp
cmc
or
jg
mov
aaa
xor
and
cmp
cmp
xor
pop
(bad)
push
push
outs
les
inc
jb
push
das
inc
(bad)
push
inc
addr16
add
push
sub
imul
adc
test
push
in
pcmpeqb
push
addr16
dec
mov
outs
cmc
pop
pop
push
add
push
hlt
rol
mov
xchg
xchg
jne
xchg
mov
xor
inc
scas
movs
xchg
and
and
mov
push
xlat
xlat
hlt
inc
mov
(bad)
xchg
scas
mov
push
rol
mov
push
(bad)
mov
shl
loope
out
in
gs
leave
data16
xor
adc
aam
ficom
aas
shl
in
add
and
adc
pop
cmc
sub
outs
xchg
add
xor
add
and
cmp
cmp
loopne
aad
xor
xor
outs
push
dec
les
movs
gs
jno
adc
push
(bad)
jg
data16
or
push
inc
aad
aas
push
imul
ja
in
mov
test
pop
in
unpckhps
inc
addr16
hlt
jl
jge
popa
jne
cmc
pop
pop
or
(bad)
xchg
test
test
push
scas
xchg
test
jmp
and
jo
inc
nop
movs
fbld
xchg
cmps
popf
xor
pusha
mov
xor
ret
inc
mov
(bad)
xchg
scas
enter
rcl
mov
push
in
in
jbe
not
add
fisttp
fbstp
hlt
adc
loopne
les
xor
and
xor
and
push
outs
je
xor
cmp
adc
cs
aaa
or
and
pop
cmps
xor
loopne
aad
xor
add
les
nop
movs
adc
jno
push
das
aas
(bad)
jo
jae
inc
add
push
arpl
inc
aas
pop
idiv
ja
in
mov
test
pop
in
nop
pop
addr16
hlt
pop
mov
inc
cmc
jnp
push
add
push
xchg
test
add
xchg
xchg
fst
xchg
mov
mov
jo
inc
stos
movs
and
cmps
mov
xchg
pusha
xchg
push
cli
mov
xor
hlt
xlat
lds
sti
and
in
scas
mov
push
int
jmp
mov
repnz
xor
add
jecxz
les
out
je
and
adc
neg
sub
in
add
add
and
cmp
or
pop
cmc
or
jg
mov
aaa
and
lds
(bad)
aaa
daa
pop
mov
loopne
aad
xor
push
(bad)
arpl
les
ins
movs
push
inc
jb
adc
fs
outs
inc
and
dec
cmp
push
cs
aas
pop
test
in
mov
test
add
xor
add
and
hlt
push
mov
inc
cmc
push
pop
add
add
push
hlt
pop
mov
les
mov
adc
mov
mov
and
and
mov
cmps
fbld
inc
mov
lds
inc
loope
icebp
push
ret
xor
clc
mov
shl
retf
add
int3
pop
out
out
je
and
adc
cmps
lahf
(bad)
xchg
and
test
in
add
daa
xchg
pop
es
or
adc
sbb
push
push
aaa
sub
lds
and
cmp
adc
push
mov
loopne
aad
xor
cs
inc
push
imul
dec
inc
and
pop
das
pop
(bad)
addr16
fs
cmp
sub
inc
aas
push
neg
dec
in
mov
test
in
(bad)
out
addr16
hlt
inc
mov
(bad)
cmc
jns
pushw
mov
push
(bad)
gs
test
mov
inc
loope
movs
xchg
mov
ss
scas
and
jo
inc
nop
movs
fisub
popf
cmps
cdq
xor
pusha
movs
push
xchg
mov
xor
jmp
and
in
scas
ret
(bad)
cmps
push
mov
xor
fstp
leave
fs
xor
add
int
out
aad
(bad)
les
clc
lahf
int
push
pop
aaa
test
add
and
adc
cmp
xchg
inc
jg
mov
aaa
xor
lds
and
push
cmps
add
add
adc
cmp
mov
pop
xor
bound
les
nop
push
lds
aas
(bad)
jge
pop
aam
add
popa
aad
aas
push
idiv
or
test
pop
in
packssdw
pop
addr16
hlt
inc
mov
outs
cmc
and
imul
xchg
mov
gs
test
push
scas
xchg
jne
xchg
sahf
adc
xor
inc
out
test
out
cmps
mov
nop
pusha
mov
xor
cmc
xlat
jecxz
int3
adc
and
cmc
scas
inc
(bad)
mov
xor
sar
aam
loope
retf
add
loope
int
jmp
(bad)
je
and
adc
fcomp
add
in
add
cmp
adc
sbb
sbb
jg
mov
aaa
or
adc
sbb
ins
and
cmp
adc
loopne
aad
xor
dec
(bad)
ins
push
xor
movs
dec
inc
pop
lds
push
mov
addr16
xor
push
das
aad
aas
push
test
in
mov
test
dec
in
nop
pusha
addr16
hlt
push
mov
inc
cmc
outs
pop
outs
push
test
mov
add
mov
inc
xchg
jne
xchg
in
adc
xchg
mov
jmp
fldenv
mov
pusha
adc
into
xor
jmp
adc
and
xchg
scas
fiadd
(bad)
sti
push
out
retf
aad
push
pushf
mov
leave
fs
xor
add
int3
(bad)
out
je
and
adc
fcomp
cmp
ins
rcr
in
add
and
and
adc
xchg
push
jg
mov
aaa
xor
pop
lock
movs
xor
sbb
or
add
and
adc
inc
push
inc
les
nop
jbe
js
lds
das
pop
(bad)
jge
pop
aam
and
pop
push
je
jge
push
not
pop
in
mov
test
jp
bound
sbb
jae
pop
hlt
dec
mov
jo
and
push
mov
test
gs
test
add
mov
inc
mov
adc
mov
mov
jo
inc
lods
movs
fisub
xchg
cmps
xchg
pusha
test
sahf
mov
xor
in
out
inc
lods
adc
and
lock
fld
(bad)
stc
push
aam
lds
les
in
fs
xor
add
fisttp
mov
call
jne
lahf
fcom
popa
rcl
in
add
or
or
pop
cmc
push
adc
push
mov
aaa
shld
adc
cmp
or
add
pop
aad
xor
adc
pop
push
jbe
sub
arpl
inc
das
jl
jae
jg
push
or
push
jp
jo
push
test
in
mov
test
add
jle
pop
out
addr16
hlt
dec
mov
push
push
test
scas
add
push
mov
add
test
mov
adc
xchg
mov
and
jo
inc
out
mov
es
cmps
xchg
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
repz
out
retf
xor
cmc
mov
fisub
call
gs
(bad)
data16
and
adc
rcr
sub
add
sub
or
add
sbb
jg
mov
aaa
aas
movs
add
sbb
adc
daa
cmps
adc
loopne
aad
xor
push
(bad)
jl
jbe
sub
xor
lds
pop
(bad)
outs
inc
jg
jb
inc
mov
push
sub
inc
aas
push
div
mov
test
gs
ja
add
push
addr16
imul
outs
push
mov
test
out
mov
mov
inc
cdq
jne
xchg
xchg
adc
mov
mov
mov
and
cmps
xchg
pusha
call
fbstp
inc
mov
lds
inc
sti
(bad)
movs
push
repz
push
(bad)
mov
jmp
in
gs
retf
out
je
and
adc
rcr
test
shl
dec
add
and
adc
adc
xchg
add
imul
lock
movs
or
daa
xor
xor
adc
les
nop
ja
jo
cmp
adc
pop
(bad)
jge
jb
dec
add
ins
aad
aas
jbe
ins
ja
in
mov
test
pop
in
andps
jg
pop
hlt
push
mov
or
push
lods
xchg
mov
xchg
gs
out
mov
lods
xchg
fwait
xchg
mov
movs
mov
and
jo
inc
stos
movs
movs
and
mov
pusha
mov
popf
mov
xor
jecxz
mov
lods
adc
and
mov
stc
push
leave
add
xor
loopne
in
jbe
test
add
mov
retf
out
je
and
adc
ficomp
aaa
test
shl
in
add
je
inc
pop
and
adc
ds
aaa
shld
or
aaa
and
and
adc
add
mov
pop
cmp
push
nop
ins
movs
push
inc
popa
lds
push
(bad)
jo
push
aam
or
push
arpl
inc
aas
inc
div
mov
test
fs
sysret
out
addr16
mov
push
cmc
pop
pop
outs
push
xlat
xchg
scas
add
push
mov
mov
test
scas
xchg
adc
inc
test
xchg
lock
movs
mov
and
jo
inc
call
es
pusha
stos
push
mov
(bad)
push
jmp
adc
and
in
scas
mov
push
leave
add
push
cmp
shl
xchg
add
into
(bad)
cdq
mul
xor
fdiv
lahf
lds
adc
add
daa
xchg
rcl
sub
adc
adc
sbb
cmp
pop
movs
push
dec
and
aaa
daa
pop
mov
loopne
aad
xor
push
(bad)
jb
outs
les
ins
movs
pop
inc
jb
pop
das
dec
(bad)
push
inc
pusha
aam
add
push
je
fs
push
test
in
mov
test
in
pcmpeqb
pop
addr16
hlt
push
mov
or
pop
pop
jbe
fist
hlt
mov
mov
mov
inc
mov
adc
test
lea
movs
fisub
and
int3
xor
loopne
hlt
inc
in
adc
and
aad
mov
push
test
loop
cli
mov
jmp
icebp
add
mov
out
je
and
adc
fstp
sub
shl
add
and
and
adc
daa
adc
outs
mov
aaa
and
and
pop
cmps
xor
inc
mov
loopne
aad
xor
dec
(bad)
jbe
push
les
push
movs
dec
inc
xor
push
inc
and
mov
push
ins
aad
aas
jns
push
ja
in
mov
test
gs
in
nop
inc
addr16
push
mov
or
push
lods
xchg
mov
in
mov
enter
mov
test
nop
xchg
jne
xchg
mov
movs
mov
and
jo
inc
xchg
movs
fbld
xchg
cmps
test
mov
xor
in
mov
and
mov
stc
push
int
shl
cwde
mov
aad
fidiv
jecxz
cmps
in
gs
data16
fbstp
(bad)
adc
fstp
test
sbb
inc
add
xor
xchg
outs
rcl
jg
mov
aaa
shld
sbb
cmp
and
adc
dec
aad
xor
cmp
addr16
jg
pop
nop
jo
push
inc
jae
jbe
push
(bad)
jae
push
aam
add
push
dec
aad
aas
je
pusha
ja
in
mov
test
jns
dec
sysret
out
ins
hlt
dec
mov
js
pop
pop
imul
xchg
scas
add
push
xchg
gs
clc
add
xchg
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
lea
fisub
mov
sahf
xor
pusha
xchg
push
mov
fist
mov
(bad)
xchg
scas
cld
inc
fld
out
lds
shl
in
out
jbe
imul
mov
lds
dec
shl
adc
fcomp
or
in
add
sub
xadd
sbb
jg
mov
aaa
or
and
sbb
mov
loopne
aad
xor
push
(bad)
imul
sub
jb
dec
inc
jb
adc
daa
(bad)
arpl
aam
cmp
push
pop
aad
aas
push
mul
inc
in
mov
test
gs
in
punpcklbw
push
pmuludq
inc
xchg
jg
jp
pop
pop
outs
push
mov
mov
add
mov
inc
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
cwde
and
push
scas
mov
xor
out
xlat
retf
adc
and
xchg
scas
mov
push
int
fidiv
xchg
xchg
fs
xor
add
out
jmp
out
je
and
adc
out
call
test
in
add
daa
xchg
es
add
addr16
sub
pop
mov
aaa
push
movs
add
adc
movs
sbb
daa
sbb
adc
sub
cmp
push
(bad)
popa
push
imul
push
inc
cmp
adc
pop
(bad)
jle
jns
pop
add
push
ins
aad
aas
push
div
dec
in
mov
test
in
addps
inc
addr16
hlt
dec
mov
or
push
lods
xchg
lea
push
mul
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
stos
movs
lods
and
mov
pusha
xchg
push
lahf
mov
xor
call
adc
and
mov
mov
xor
fstp
leave
fs
xor
add
in
(bad)
fisub
out
je
and
adc
fstp
xor
in
add
pop
xchg
pop
cmp
adc
imul
lock
xor
cmps
add
cmp
xor
sbb
les
ins
movs
push
inc
jb
adc
aas
(bad)
inc
pop
aam
sbb
push
arpl
push
aas
data16
push
in
mov
test
inc
in
cmovns
bound
hlt
adc
inc
cmc
pop
pop
jo
test
lods
add
push
cmc
mov
call
inc
mov
adc
movs
mov
and
jo
inc
xchg
movs
pushf
and
xchg
cmps
cdq
xor
pusha
mov
xor
not
mov
les
into
and
nop
scas
hlt
inc
std
(bad)
stc
push
in
add
xor
(bad)
mov
into
shl
xchg
add
loope
out
hlt
out
je
and
adc
repz
test
pusha
shl
push
add
add
aaa
pop
cmp
adc
add
movs
sub
and
and
push
loopne
aad
xor
or
push
push
popa
les
jp
or
lds
inc
(bad)
pop
inc
gs
sbb
push
inc
aad
aas
and
outs
ja
in
mov
test
push
in
punpcklbw
push
addr16
hlt
push
mov
jns
push
pop
outs
push
xlat
xchg
mov
in
push
mov
test
push
add
mov
mov
xchg
movs
pushf
and
xchg
cmps
ret
pusha
xchg
push
xchg
mov
xor
loopne
hlt
inc
sti
adc
and
xchg
scas
mov
push
leave
add
push
fdivr
shl
add
int3
(bad)
out
je
and
adc
fstp
add
add
and
adc
adc
inc
adc
cmp
movs
sub
and
push
cmps
and
ds
loopne
aad
xor
sub
jl
outs
les
nop
jae
push
inc
inc
lds
dec
mov
aam
and
sbb
aad
aas
push
mul
push
in
mov
test
push
in
unpckhps
inc
addr16
hlt
je
bound
pop
pop
jae
xchg
xchg
test
gs
test
add
cmps
xchg
jne
xchg
jmp
mov
mov
xchg
movs
mov
scas
cmps
cdq
xor
pusha
xchg
push
call
push
out
xlat
mov
cmc
adc
and
sahf
scas
rol
stc
push
(bad)
add
push
hlt
mov
jmp
in
xor
add
(bad)
pop
data16
out
je
and
adc
fistp
xor
add
and
or
adc
ss
aaa
or
and
add
add
pop
aad
xor
adc
les
xor
dec
inc
jl
jge
inc
(bad)
jae
and
dec
add
push
dec
aad
aas
push
neg
push
in
mov
test
push
in
movq
push
addr16
hlt
jge
jg
ss
cmc
pop
pop
push
add
push
mov
add
rol
jne
xchg
out
adc
mov
xchg
and
jo
inc
lock
mov
es
pusha
fst
mov
xor
not
leave
inc
mov
lds
inc
fld
out
rol
shl
ret
mov
into
fs
out
add
out
(bad)
out
je
and
adc
ficomp
aaa
test
pop
in
add
and
daa
rcl
sbb
jg
mov
aaa
aas
movs
add
sbb
adc
and
or
dec
aad
xor
push
(bad)
imul
movs
jae
dec
lds
pop
(bad)
js
pop
aam
or
push
das
aad
aas
dec
test
in
mov
test
sbb
jg
add
inc
addr16
push
mov
outs
cmc
pop
pop
dec
push
fist
mov
add
mov
inc
mov
adc
test
mov
movs
cdq
and
sahf
cmps
fwait
xor
pusha
xchg
push
stos
mov
xor
loopne
hlt
inc
not
(bad)
xchg
scas
mov
push
in
xlat
xor
clc
mov
aad
shl
int3
add
fimul
ret
je
and
adc
fstp
das
test
and
sub
and
or
adc
push
adc
outs
mov
aaa
or
cs
push
and
cmp
sbb
pop
mov
loopne
aad
xor
xor
gs
pop
les
nop
jbe
jo
cmp
push
das
pop
(bad)
jo
inc
aam
add
push
ins
aad
aas
sub
push
mov
test
in
unpcklps
and
hlt
push
mov
or
push
stos
xchg
test
gs
mov
aad
test
mov
inc
loope
test
jmp
and
jo
inc
lods
movs
fbld
xchg
cmps
xor
xchg
push
cli
mov
xor
nop
xlat
inc
retf
korw
scas
jmp
add
push
sti
mov
shl
lds
fisttp
fbstp
in
out
int3
jne
lahf
les
jnp
and
das
add
add
shl
inc
adc
ds
aaa
xor
and
and
adc
sbb
pusha
xor
add
inc
push
jbe
es
ins
movs
or
das
jl
jae
jnp
dec
or
push
pop
aad
aas
push
test
in
mov
test
push
in
sysret
out
addr16
hlt
dec
mov
dec
cmc
outs
pop
push
add
push
xchg
mov
mov
cmps
xchg
test
(bad)
mov
and
jo
inc
hlt
movs
mov
es
mov
pusha
mov
xor
hlt
xlat
in
inc
ret
and
shr
fcom
mov
push
sar
fs
xor
add
loop
enter
test
les
fcomp
aaa
test
in
add
daa
xchg
pop
ds
pop
rcl
cmp
jg
mov
aaa
pop
movs
ss
movs
adc
adc
mov
loopne
aad
xor
dec
(bad)
ins
push
push
pop
nop
dec
movs
dec
inc
inc
lds
dec
(bad)
jae
cmp
je
inc
mov
push
je
inc
aas
push
div
ja
in
mov
test
add
pop
sysret
out
addr16
hlt
push
mov
or
and
outs
push
mov
pushf
add
push
mov
mov
fwait
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
cwde
and
movs
cmps
lahf
xor
pusha
xchg
mov
xor
loope
mov
mov
(bad)
xchg
scas
mov
push
call
aad
push
(bad)
mov
aad
cli
xor
add
out
(bad)
jecxz
(bad)
cdq
je
and
adc
ficomp
sub
jnp
push
in
add
sbb
adc
or
push
adc
cmp
movs
cs
movs
or
cmps
adc
and
sbb
dec
aad
xor
push
(bad)
pop
push
imul
push
inc
popa
lds
xor
ja
addr16
xor
push
sub
pop
aas
push
imul
dec
in
mov
test
in
nop
push
addr16
hlt
dec
mov
push
cmc
pop
pop
or
mov
push
lods
gs
test
add
mov
inc
popf
jne
xchg
out
adc
cmps
mov
and
jo
inc
xchg
movs
mov
es
cmps
xor
mov
xor
enter
in
adc
inc
(bad)
stc
push
aad
mov
push
sar
int3
fs
xor
add
loop
into
retw
out
je
and
adc
out
lahf
les
shl
in
add
jnp
sub
add
cmc
or
adc
getsec
shld
pop
lds
and
pop
cmps
xor
sbb
push
loopne
aad
xor
sub
ins
push
jbe
and
jno
adc
pop
(bad)
jnp
push
aam
cmp
push
inc
aad
aas
push
div
push
in
mov
test
add
jle
pop
out
addr16
dec
mov
push
cmc
push
pop
push
add
push
hlt
gs
out
inc
mov
inc
xchg
jne
xchg
mov
xchg
mov
xor
fisub
sahf
cmps
xor
xchg
push
xor
push
sahf
xlat
into
inc
rcl
leave
and
(bad)
scas
mov
push
jecxz
mov
push
cmp
xlat
xor
add
fisttp
fdiv
std
adc
out
(bad)
xchg
add
or
in
add
or
sar
jg
mov
aaa
push
movs
adc
sbb
cmp
aas
cmps
(bad)
pop
mov
loopne
aad
xor
push
(bad)
imul
and
lds
das
dec
(bad)
jae
addr16
xor
push
sub
pop
aas
xor
dec
ja
in
mov
test
jge
pop
divps
push
addr16
hlt
push
mov
inc
cmc
gs
ins
push
adc
mov
mov
mov
jne
xchg
jmp
mov
and
jo
inc
mov
iret
mov
xor
pusha
movs
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
jmp
cld
xor
fidivr
(bad)
shl
xchg
add
ror
fbstp
rcl
lahf
fst
pusha
ror
in
add
and
rcl
xor
cmp
movs
xor
push
lds
add
pop
loopne
aad
xor
adc
jl
push
les
jae
push
inc
dec
lds
das
jns
jb
and
dec
adc
push
pop
aad
aas
sub
xor
mov
test
in
unpcklps
and
mov
or
push
lods
xchg
stos
add
push
fwait
gs
test
push
add
mov
ss
mov
and
jo
inc
lods
movs
xchg
mov
pusha
ret
mov
xor
into
xlat
test
mov
inc
test
mov
push
fnstcw
shl
lds
int
retf
out
je
and
jne
lahf
retf
xchg
adc
xor
ins
shl
push
add
add
jo
pop
cmc
cs
push
mov
aaa
shld
adc
xor
inc
mov
loopne
aad
xor
adc
les
nop
ins
movs
adc
jno
adc
push
jae
jl
xor
pop
mov
push
and
inc
aas
push
test
in
mov
test
adc
jle
imul
dec
mov
inc
cmc
push
pop
push
add
push
cmc
mov
mov
adc
inc
mov
adc
mov
mov
mov
iret
scas
mov
mov
xor
hlt
xlat
loope
mov
(bad)
xchg
scas
mov
push
test
not
mov
shl
add
loop
xchg
data16
je
and
adc
fcomp
or
in
add
xchg
pop
cmp
cmc
push
adc
add
movs
adc
push
lds
pop
cmps
sbb
loopne
aad
xor
dec
(bad)
popa
push
jne
push
nop
sub
lds
cmp
aam
or
push
inc
aad
aas
push
not
push
in
mov
test
adc
pop
cmovp
push
addr16
imul
outs
push
mov
push
movs
mov
fwait
push
cmps
xchg
adc
inc
mov
adc
mov
mov
lock
fisub
test
cwde
push
cmps
mov
xor
(bad)
fild
cli
and
fild
cli
push
loope
mov
push
clc
mov
(bad)
shl
fiadd
out
leave
data16
mov
(bad)
adc
les
sub
add
and
and
push
cmc
or
adc
sbb
sbb
or
sbb
daa
loopne
aad
xor
adc
jae
imul
dec
inc
and
inc
das
ds
ja
inc
aam
add
push
das
aad
aas
inc
test
in
mov
test
in
unpckhps
inc
addr16
push
mov
or
push
xchg
xchg
test
gs
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
in
movs
shl
xchg
cmps
xchg
pusha
mov
mov
xor
in
jmp
(bad)
mov
stc
push
retf
add
xor
aam
xlat
jbe
test
add
mov
retf
out
je
and
adc
loop
retf
xchg
adc
jae
add
add
add
xor
cmp
adc
push
mov
aaa
shld
adc
adc
dec
and
adc
push
aad
xor
aas
(bad)
inc
push
inc
les
nop
aaa
movs
pop
inc
and
push
das
aas
(bad)
jae
jg
jge
dec
mov
push
push
aad
aas
push
div
ja
in
mov
test
push
in
sysret
out
addr16
pop
mov
pop
cmc
push
pop
push
add
push
repz
test
push
cdq
xchg
adc
ss
jo
inc
out
fisub
sahf
cmps
nop
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
rol
std
xor
(bad)
mov
(bad)
mov
retf
add
jecxz
loope
shl
(bad)
je
and
adc
loopne
not
daa
shr
in
add
and
add
add
es
or
push
lock
xor
dec
cmps
cmp
loopne
aad
xor
adc
les
jae
ins
inc
jb
or
dec
mov
jns
aaa
add
push
das
aad
aas
pop
mul
push
in
mov
test
pop
in
cmovb
push
addr16
hlt
inc
mov
pop
cmc
pop
pop
je
mov
lock
mov
cwde
xchg
adc
inc
mov
rcl
mov
mov
jmp
iret
cwde
es
cmps
xchg
pusha
les
mov
xor
xchg
xlat
retf
adc
and
fild
movs
push
out
mov
push
fstp
(bad)
div
retf
add
out
leave
out
xor
adc
rcr
sub
add
js
add
cmp
cmc
sbb
add
movs
adc
or
outs
and
cmp
xor
inc
mov
loopne
aad
xor
sbb
je
imul
dec
inc
cmp
or
pop
(bad)
jb
je
dec
add
push
ins
aad
aas
sub
in
mov
test
in
unpckhps
push
addr16
hlt
push
mov
imul
pop
outs
push
lods
xchg
mov
test
add
mov
inc
jecxz
mov
in
movs
mov
and
jo
inc
mov
mov
cdq
cmps
(bad)
xor
pusha
xchg
push
mov
mov
xlat
out
inc
out
into
and
fisubr
mov
xor
(bad)
mov
leave
fs
xor
add
in
les
out
je
and
adc
out
lahf
les
sbb
sbb
dec
add
xchg
pop
cmp
adc
cmp
movs
pop
lock
lds
and
xor
pop
aad
xor
adc
les
nop
dec
movs
or
das
and
jae
ja
push
or
push
sub
jo
push
not
push
in
mov
test
(bad)
in
sysret
out
addr16
ins
mov
imul
mov
scas
add
push
mov
add
cmps
xchg
jne
xchg
xchg
adc
mov
jo
inc
out
pushf
and
fwait
cmps
xchg
xor
pusha
xchg
push
loopne
int3
xor
aam
test
loop
ret
inc
out
mov
xor
fdivr
int3
fs
xor
fisttp
(bad)
je
and
adc
fcomp
aaa
test
sbb
xor
cmp
xchg
or
adc
push
mov
aaa
or
and
and
or
sbb
mov
pop
adc
ins
push
outs
les
dec
movs
pop
inc
pop
lds
pop
(bad)
push
inc
pop
aam
add
push
das
aad
aas
pop
test
jno
jae
push
lsl
push
addr16
imul
outs
push
test
cmc
gs
out
cmps
push
mov
inc
xchg
jne
xchg
mov
test
jmp
jo
inc
mov
cwde
es
xor
mov
xor
loopne
repz
int
(bad)
into
scas
mov
push
enter
(bad)
loope
repnz
(bad)
fs
xor
add
fimul
xor
adc
repz
ficom
ins
rcl
dec
outs
and
add
adc
xchg
aas
jg
mov
aaa
adc
sbb
push
lds
daa
movs
sbb
daa
and
aad
xor
adc
pop
push
imul
dec
inc
jl
push
das
imul
imul
aad
aas
jns
pop
ja
in
mov
test
in
nop
push
addr16
hlt
dec
mov
push
cmc
jbe
outs
push
rcl
(bad)
cmps
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
stos
movs
popf
and
cwde
cmps
xchg
pusha
movs
push
popf
mov
xor
in
jmp
loopne
lock
mov
stc
push
retf
add
xor
fnstsw
mov
lds
fisttp
fbstp
rcl
rcr
jae
cmp
add
cs
jle
xor
adc
adc
sbb
adc
sbb
outs
and
sbb
adc
inc
aad
xor
push
(bad)
push
nop
ins
movs
adc
lds
push
mov
push
aam
add
popa
aad
aas
ins
div
mov
test
jp
packsswb
pop
addr16
pop
mov
pop
cmc
pop
pop
ins
push
mov
push
jmp
add
scas
xchg
jne
xchg
cdq
adc
mov
cmps
and
jo
inc
call
es
cmps
xchg
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
out
(bad)
repnz
rol
mov
push
ret
jbe
test
add
loop
enter
xor
adc
ficomp
xor
cmp
or
push
add
and
or
pop
cmc
sbb
sub
pop
lock
lds
and
and
xor
xor
push
push
pusha
les
nop
jae
push
das
push
aam
add
push
das
aad
aas
dec
imul
in
mov
test
jp
ja
add
cmp
hlt
push
mov
inc
cmc
pop
pop
push
push
adc
gs
test
add
mov
cmps
adc
inc
mov
fcom
nop
mov
mov
out
mov
and
int
scas
fistp
inc
sti
adc
and
xchg
scas
mov
push
leave
add
push
fistp
xchg
shl
loope
out
in
gs
(bad)
aad
(bad)
out
aad
adc
lahf
mov
aas
shl
pop
add
and
add
cmp
sbb
cmp
movs
sub
and
sbb
pop
loopne
aad
xor
push
(bad)
jl
imul
dec
inc
and
adc
imul
dec
adc
push
je
inc
aas
sub
dec
ja
in
mov
test
js
xor
dec
out
addr16
hlt
adc
jl
pop
pop
outs
push
rcl
stos
gs
mov
mov
xchg
push
mov
inc
mov
adc
mov
jo
inc
(bad)
movs
and
mov
push
mov
fbstp
inc
lods
adc
and
call
(bad)
(bad)
push
retf
add
xor
sar
fs
xor
gs
(bad)
out
je
and
adc
fstp
xor
ror
test
and
or
adc
xor
movs
pop
lock
lds
and
and
adc
sbb
or
pop
adc
les
ins
movs
dec
inc
dec
lds
das
pop
(bad)
jae
push
aam
sbb
push
sub
je
je
pop
ja
in
mov
test
adc
inc
sysret
out
outs
hlt
ins
mov
push
push
xchg
xchg
scas
add
push
mov
test
mov
call
xchg
lock
mov
mov
stos
movs
pushf
and
cdq
cmps
sahf
xor
pusha
test
mov
xor
(bad)
mov
mov
(bad)
xchg
scas
sti
inc
add
push
fiadd
mov
push
icebp
mov
shl
add
enter
mul
les
(bad)
adc
fcomp
sbb
pusha
shl
in
add
or
sub
xor
pop
adc
es
aaa
or
and
aas
cmps
adc
add
and
inc
aad
xor
push
(bad)
push
push
popa
les
nop
xor
lds
cmp
aam
and
pop
push
inc
aad
aas
push
not
inc
in
mov
test
push
in
nop
inc
addr16
push
mov
or
daa
pop
push
push
mov
test
mov
mov
mov
inc
xchg
xchg
mov
cmp
xor
inc
xchg
movs
xchg
and
and
xchg
xor
(bad)
mov
xlat
adc
and
xchg
scas
mov
push
retf
add
xor
(bad)
mov
in
fs
xor
add
fisttp
test
rcl
lahf
fcom
adc
and
adc
and
xchg
push
rol
cmp
mov
aaa
xor
and
inc
cmps
sbb
adc
aad
xor
adc
jle
imul
push
inc
cmp
pop
das
xor
ja
arpl
jae
addr16
push
inc
aad
aas
inc
imul
inc
in
mov
test
adc
dec
unpckhps
inc
ins
hlt
or
jo
das
pop
push
push
lods
xchg
lods
add
push
mul
test
push
xchg
xchg
jne
xchg
jmp
movs
mov
and
jo
inc
mov
test
xchg
cmps
xchg
pusha
mov
xor
out
ret
adc
inc
ret
inc
out
iret
push
aam
stos
xor
fstp
shl
xchg
add
ret
(bad)
out
je
and
adc
fcomp
jae
jnp
es
add
and
xor
or
inc
adc
es
aaa
or
and
and
sub
pop
aad
xor
adc
les
nop
jno
js
jno
or
inc
(bad)
jae
pusha
aam
sbb
push
jo
inc
aas
push
imul
in
mov
test
push
in
mulps
push
addr16
jo
jnp
jne
inc
cmc
inc
pop
inc
push
test
mov
mov
test
push
scas
xchg
jne
xchg
pushf
adc
mov
xchg
and
jo
inc
out
pushf
and
xchg
cmps
sahf
xor
pusha
lds
mov
xor
in
out
inc
mov
(bad)
(bad)
scas
mov
push
int
mov
push
fnstcw
retf
(bad)
out
test
shl
(bad)
mul
out
je
and
adc
fcomp
aas
test
add
and
or
jge
sbb
add
movs
adc
pop
lds
and
pop
cmps
sbb
loopne
aad
xor
push
(bad)
pop
push
ins
les
inc
cmp
(bad)
addr16
addr16
sbb
push
sub
push
aas
jne
push
ja
in
mov
test
jns
pop
cmovb
pop
addr16
hlt
push
mov
dec
cmc
jbe
outs
push
mov
mov
test
push
cwde
xchg
jne
xchg
mov
mov
mov
mov
fisub
mov
pusha
lahf
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
fld
(bad)
xor
ret
jbe
imul
fidiv
retf
add
out
int
mov
and
adc
fstp
or
in
add
and
push
rcl
daa
adc
xor
cmp
xor
outs
and
pop
cmps
xor
pop
mov
loopne
aad
xor
adc
adc
imul
push
inc
cmp
pop
das
push
(bad)
ja
fs
add
push
ins
aad
aas
dec
test
in
mov
test
in
lsl
cs
hlt
jo
ja
inc
jne
cmc
push
pop
inc
push
scas
xchg
nop
add
push
mul
test
push
test
test
call
lea
mov
mov
fbld
xchg
cmps
test
pusha
cdq
push
cli
mov
xor
in
test
and
in
mov
push
aam
mov
push
(bad)
mov
leave
fs
xor
gs
out
je
and
adc
fcomp
xor
add
jle
xor
popa
xchg
add
adc
or
movs
cs
cmp
or
dec
loopne
aad
xor
adc
ins
push
jbe
jae
pop
movs
adc
xor
jae
push
(bad)
jo
push
aam
add
push
dec
aad
aas
dec
div
mov
test
inc
in
sysret
out
addr16
hlt
dec
mov
push
cmc
pop
pop
ins
push
rcl
xchg
test
push
mov
in
mov
jne
xchg
in
adc
xchg
mov
and
jo
inc
lods
movs
mov
es
cmps
sahf
xor
pusha
test
mov
xor
not
lds
enter
mov
inc
inc
out
lds
icebp
xor
ret
mov
xchg
les
(bad)
add
in
(bad)
out
je
and
adc
ficomp
xor
add
daa
xchg
rcr
pop
adc
or
and
push
lds
and
pop
loopne
aad
xor
push
(bad)
bound
les
nop
jae
or
lds
dec
(bad)
push
inc
arpl
dec
cmp
pop
push
das
aad
aas
jge
inc
ja
in
mov
test
jnp
jg
add
push
addr16
push
mov
inc
cmc
pop
pop
pushw
mov
mov
call
mov
mov
add
jne
xchg
mov
mov
mov
mov
fisub
and
into
xor
enter
mov
(bad)
shr
loopne
leave
add
push
ret
jbe
not
shl
loope
repz
dec
fbstp
rcl
lahf
mov
popa
shl
in
add
and
adc
adc
aas
adc
adc
cmp
adc
movs
adc
daa
push
mov
loopne
aad
xor
ss
jl
push
push
nop
jae
push
inc
dec
lds
data16
jg
pusha
aam
xor
push
imul
aas
push
test
in
mov
test
sbb
arpl
pop
out
addr16
hlt
imul
push
add
push
fwait
mov
xchg
push
mov
inc
mov
adc
mov
mov
lods
movs
mov
es
pusha
mov
xchg
mov
xor
in
mov
out
into
and
mov
mov
xor
les
leave
fidiv
lds
int3
(bad)
(bad)
data16
in
xlat
and
adc
fcomp
xor
cmp
or
test
and
or
adc
push
mov
aaa
shld
adc
push
and
cmps
xor
sbb
aad
xor
xor
arpl
les
movs
adc
pop
lds
push
mov
aam
or
push
cs
aas
push
mul
in
mov
test
inc
in
sysret
out
outs
hlt
ins
mov
inc
cmc
pop
pop
jno
mov
cmc
mov
mov
mov
popf
adc
inc
loope
mov
out
adc
mov
jo
inc
xchg
movs
pushf
and
xchg
cmps
scas
xor
pusha
xchg
push
cwde
mov
xor
in
test
rol
scas
fild
(bad)
icebp
push
loopne
(bad)
xor
(bad)
mov
fisub
int3
add
loop
and
ret
je
and
adc
fcomp
jle
add
add
sub
add
pop
cmc
sub
xor
movs
and
sbb
xor
push
movs
es
cmp
pusha
daa
pop
mov
loopne
aad
xor
cmp
imul
movs
or
jb
push
das
dec
(bad)
arpl
aam
add
push
je
add
push
not
dec
in
mov
test
push
in
orps
jae
push
hlt
push
mov
pmaddwd
outs
push
adc
gs
test
push
xchg
xchg
sahf
xchg
in
adc
mov
jo
inc
xchg
mov
and
mov
cmps
fistp
inc
mov
(bad)
xchg
scas
mov
stc
(bad)
icebp
push
int3
add
push
cmp
fs
rol
fisttp
lds
rcl
lahf
mov
ins
shr
in
add
or
adc
adc
xchg
inc
jg
mov
aaa
das
movs
sub
and
cmps
push
daa
inc
mov
loopne
aad
xor
xor
jl
imul
dec
inc
outs
lds
push
(bad)
pop
inc
push
aam
xor
push
ins
aad
aas
outs
test
in
mov
test
jp
dec
punpckldq
inc
addr16
hlt
je
bound
das
pop
inc
push
mov
push
fwait
gs
test
push
movs
xchg
popf
xchg
mov
movs
mov
and
jo
inc
lods
movs
fisub
xchg
cmps
ret
xor
pusha
xchg
push
xchg
mov
xor
loop
in
inc
icebp
adc
and
mov
stc
push
out
div
in
in
jbe
imul
fs
xor
add
in
xchg
data16
out
je
and
adc
fstp
test
shl
in
add
and
pop
shl
adc
xor
jle
push
movs
pop
lock
lds
and
pop
cmps
add
loopne
aad
xor
aaa
(bad)
jbe
popa
les
movs
pop
inc
cmp
gs
push
(bad)
ja
push
aam
or
push
push
aad
aas
push
not
push
in
mov
test
sbb
out
pmuludq
jg
and
pop
cmc
pop
pop
outs
push
stos
xchg
scas
add
push
xchg
test
push
scas
xchg
jne
xchg
mov
push
mov
xchg
call
pusha
xchg
push
test
mov
xlat
lds
repz
(bad)
scas
mov
push
into
add
xor
fdivr
iret
fs
xor
add
loop
iret
data16
(bad)
je
and
jne
lahf
lds
add
add
and
or
sbb
push
adc
push
add
push
movs
cmp
sbb
ins
and
and
adc
cmp
aaa
xor
push
(bad)
outs
push
(bad)
les
jo
imul
(bad)
push
inc
addr16
add
push
ins
aad
aas
ins
test
in
mov
test
inc
in
movq
push
addr16
hlt
jno
jle
jg
jg
inc
pop
outs
push
pushf
xchg
mov
sti
push
mov
add
xchg
xchg
jne
xchg
mov
xchg
call
jo
inc
mov
iret
mov
xor
pusha
xchg
push
push
mov
inc
mov
(bad)
xchg
scas
mov
cmc
(bad)
icebp
push
retf
add
xor
fidivr
mul
enter
leave
gs
(bad)
repz
je
and
adc
ret
xchg
and
or
aas
shl
in
add
and
xchg
jbe
cmp
and
cmp
movs
adc
pop
lds
pop
movs
sub
cmps
sbb
or
cmp
xor
sbb
jl
ins
les
movs
dec
inc
dec
lds
(bad)
addr16
arpl
dec
add
push
arpl
pop
aas
push
test
in
mov
test
dec
in
unpckhps
inc
addr16
push
mov
or
push
scas
xchg
mov
loop
movs
xchg
cmps
push
mov
inc
mov
adc
movs
mov
and
jo
inc
mov
iret
pushf
es
cdq
xor
pusha
fwait
push
cli
mov
xor
call
adc
and
mov
fist
mov
push
ret
mov
aad
loope
jecxz
stos
in
fisttp
fbstp
test
fstp
xor
in
add
jge
inc
pop
xor
or
adc
imul
lock
push
and
inc
cmps
xor
add
or
cmp
and
dec
(bad)
push
nop
inc
movs
adc
inc
lds
das
push
(bad)
dec
inc
jl
dec
and
push
sub
pop
aas
dec
imul
ja
in
mov
test
sbb
out
addr16
dec
mov
inc
cmc
inc
pop
pop
push
adc
mov
sahf
push
scas
xchg
jne
xchg
mov
test
xchg
inc
out
test
repnz
cwde
cmps
cmps
sahf
xor
pusha
ret
push
div
scas
push
hlt
xlat
int3
inc
fcom
leave
and
xchg
scas
hlt
inc
inc
stc
push
jmp
aad
push
sar
xlat
xor
add
jecxz
in
out
out
je
and
adc
fistp
aaa
test
or
dec
add
adc
aaa
pop
xor
adc
ds
aaa
pop
movs
sub
and
or
pavgb
aad
xor
push
(bad)
adc
les
jno
jbe
jb
dec
das
cmp
aam
add
push
inc
aad
aas
push
test
in
mov
test
inc
in
cmovo
push
addr16
hlt
inc
mov
inc
cmc
jb
jns
adc
mov
mov
mov
inc
mov
adc
mov
add
test
xchg
rcl
retf
xor
loopne
lock
mov
(bad)
xchg
scas
jecxz
(bad)
push
fadd
ret
aad
push
ret
jbe
not
add
ror
ret
and
adc
int
retf
xchg
add
cmp
ins
rcl
in
add
sbb
or
add
and
ds
aaa
push
movs
sub
and
cmp
pop
daa
sbb
add
xor
add
jl
les
nop
jae
inc
inc
push
lds
(bad)
push
inc
es
add
ins
aad
aas
pop
neg
dec
in
mov
test
in
unpckhps
inc
addr16
push
mov
or
push
xchg
xchg
mov
mov
test
push
iret
xchg
jne
xchg
in
adc
mov
xchg
and
jo
inc
stos
movs
fbld
test
call
fistp
inc
lods
adc
and
shr
mov
xor
(bad)
mov
leave
xlat
xor
add
aad
hlt
data16
loope
xlat
and
adc
fcomp
xor
ror
test
outs
cmp
pop
shl
inc
adc
ds
aaa
sub
lds
and
cmp
adc
cmp
sub
xor
inc
push
push
sub
inc
cmp
adc
inc
fs
or
push
dec
aad
aas
push
test
in
mov
test
push
in
sysret
out
addr16
jge
jg
cmp
dec
cmc
pop
pop
pop
push
mov
push
mov
test
push
cmps
xchg
adc
lods
and
jo
inc
mov
iret
call
pusha
stos
push
test
mov
inc
mov
lds
inc
inc
in
rol
fnstenv
stc
mov
aam
xlat
xor
add
loop
retf
out
je
and
adc
int
in
xchg
and
test
sbb
adc
and
push
rol
sbb
jg
mov
aaa
push
movs
sub
sbb
sbb
and
adc
xor
xor
ins
push
xor
movs
or
lds
outs
(bad)
ins
inc
addr16
and
push
das
aad
aas
jns
inc
ja
in
mov
test
gs
in
unpcklps
jnp
push
hlt
push
mov
inc
cmc
jle
push
adc
mov
mov
adc
inc
mov
adc
mov
test
movs
(bad)
and
push
lods
mov
xor
enter
mov
(bad)
call
(bad)
repz
test
iret
push
sar
div
nop
add
mov
leave
repnz
je
and
adc
ficomp
sub
xor
add
and
adc
adc
ss
adc
movs
adc
push
lds
and
add
or
pop
aad
xor
push
(bad)
jae
imul
push
inc
imul
jb
pop
aam
add
push
ins
aad
aas
outs
test
in
mov
test
inc
in
unpckhps
inc
addr16
je
jge
arpl
cmc
pop
pop
add
add
push
mov
leave
test
push
xchg
xchg
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
shl
xchg
cmps
xchg
xor
pusha
popf
push
cli
mov
xor
cmc
xlat
rol
shl
(bad)
scas
fiadd
(bad)
in
enter
vcmppd
in
jbe
test
add
ror
je
and
adc
loop
retf
xchg
dec
pop
jno
jnp
pop
in
add
je
xor
ds
jbe
pop
cmc
inc
adc
imul
lock
xor
add
xor
cmp
mov
pop
adc
les
pusha
movs
adc
cmp
ins
das
pop
(bad)
jae
das
aam
or
push
arpl
js
push
div
mov
test
push
in
sysret
out
addr16
hlt
inc
mov
inc
cmc
pop
pop
pop
push
sahf
xchg
scas
add
push
test
mov
mov
adc
inc
mov
adc
mov
jo
inc
lods
movs
fldenv
sahf
cmps
sahf
xor
pusha
fst
mov
xor
in
out
mov
lds
inc
stc
(bad)
repnz
in
add
xor
sar
xlat
xor
add
loop
iret
shl
je
and
in
lahf
fst
and
sbb
push
add
and
jo
sbb
pop
adc
push
mov
aaa
push
movs
cmp
xor
xor
and
or
add
cmp
sbb
ins
push
jo
addr16
jo
dec
inc
outs
lds
pop
(bad)
bound
aam
adc
push
and
outs
aas
pop
test
in
mov
test
jns
pop
nop
push
addr16
hlt
push
mov
or
jl
outs
push
adc
gs
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
call
mov
pusha
lahf
push
mov
fistp
inc
mov
(bad)
xchg
scas
jmp
add
xor
(bad)
mov
(bad)
shl
xchg
add
int3
(bad)
out
je
and
adc
out
(bad)
xchg
push
pop
test
in
add
and
add
adc
adc
push
aaa
adc
and
pop
cmps
sbb
add
adc
adc
and
push
(bad)
dec
push
xor
ja
jae
push
inc
jl
dec
das
(bad)
(bad)
ja
fs
sbb
push
ins
aad
aas
data16
jb
arpl
imul
es
adc
bound
outs
pop
outs
push
scas
xchg
lods
add
push
cwde
mov
test
mov
inc
mov
adc
movs
mov
and
jo
inc
stos
movs
mov
cmps
iret
call
pusha
xchg
push
mov
xor
xlat
jmp
mov
(bad)
repnz
mov
push
cld
add
xor
idiv
enter
retf
in
gs
fwait
data16
fbstp
loop
out
into
jne
lahf
les
xor
and
daa
add
xchg
pop
and
xadd
cmc
ds
or
xor
and
and
adc
inc
aad
xor
inc
(bad)
dec
push
jbe
jl
jno
adc
inc
lds
das
aas
mov
and
dec
and
add
aad
aas
dec
mul
dec
in
mov
test
jno
lsl
pop
addr16
ins
mov
push
push
mov
cmc
gs
mov
shr
cdq
push
scas
xchg
adc
xchg
and
jo
inc
xchg
cwde
es
cmps
les
pusha
xchg
push
mov
mov
inc
mov
lds
inc
loop
in
into
add
xor
(bad)
mov
iret
mov
fadd
ret
data16
shl
adc
fcomp
test
shl
dec
add
jl
xor
ds
shl
adc
sub
adc
lock
xor
add
and
daa
pop
mov
loopne
aad
xor
sbb
inc
push
jg
sub
jb
je
jl
pop
das
pop
(bad)
jp
addr16
cmp
pop
push
das
aad
aas
jns
inc
ja
in
mov
test
push
in
lsl
jg
addr16
push
mov
inc
cmc
inc
pop
dec
push
adc
mov
mov
rol
jne
xchg
mov
ss
mov
and
jo
inc
stos
movs
pushf
and
cmps
cmps
lods
xor
pusha
mov
xor
rcl
inc
mov
(bad)
xchg
scas
mov
push
into
add
xor
fidivr
cld
fs
xor
add
out
enter
les
loop
mov
int3
jne
lahf
(bad)
xchg
and
or
add
xchg
pop
xchg
jbe
daa
cmc
sbb
cmp
movs
sub
and
add
push
loopne
aad
xor
adc
push
nop
inc
movs
jo
cmp
pop
das
daa
(bad)
ja
fs
add
push
jl
pop
aas
pop
imul
dec
in
mov
test
in
cmove
jo
add
pusha
mov
dec
cmc
pop
pop
ins
push
test
repnz
push
lock
shr
test
test
mov
xchg
xchg
mov
ss
mov
and
jo
inc
lods
movs
shl
xchg
cmps
test
mov
xor
retf
xlat
out
inc
lods
adc
and
shr
clc
push
call
aad
push
(bad)
mov
(bad)
fs
xor
add
loop
(bad)
shl
(bad)
test
fstp
and
add
daa
xchg
cmp
adc
cs
aaa
dec
movs
cmp
push
lds
and
and
or
adc
daa
xor
push
(bad)
fs
jbe
daa
nop
jne
adc
aas
lds
push
(bad)
addr16
push
aam
add
push
arpl
inc
aas
sub
in
mov
test
pop
in
sysret
out
addr16
dec
mov
jbe
and
push
add
push
mov
add
nop
xchg
test
mov
and
jo
inc
hlt
movs
mov
es
sahf
xor
pusha
xchg
push
cld
mov
xor
into
xlat
test
sti
inc
fisubr
xlat
push
int
cmps
xor
ret
jbe
test
add
fisttp
xlat
je
and
adc
aam
lds
pusha
rcl
push
outs
jg
aaa
pop
xor
adc
or
adc
xor
imul
cmps
aaa
daa
pop
mov
loopne
aad
xor
sbb
les
jo
dec
inc
inc
lds
pop
(bad)
pop
inc
addr16
or
push
das
aad
aas
push
test
in
mov
test
push
in
sysret
out
addr16
hlt
pop
mov
dec
cmc
pop
pop
jle
mov
inc
push
lea
test
add
mov
inc
mov
adc
mov
mov
mov
xchg
and
test
xchg
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
into
add
xor
fidivr
(bad)
fs
xor
add
ror
aam
aad
call
int
(bad)
xchg
and
ins
test
shl
in
add
and
adc
sbb
xchg
add
mov
aaa
shld
adc
movs
sbb
daa
adc
xor
adc
jg
ins
les
jae
pop
inc
jp
push
das
pop
(bad)
popa
inc
pop
aam
sbb
push
pop
aad
aas
outs
test
in
mov
test
in
addps
inc
addr16
hlt
or
push
jle
inc
push
lods
xchg
test
gs
test
push
rol
jne
xchg
pushf
adc
mov
mov
jo
inc
lods
movs
fbld
xchg
cmps
lahf
xor
pusha
xchg
push
div
mov
inc
lods
adc
and
mov
in
int
sti
xor
fdivr
leave
fs
xor
add
ror
je
and
adc
cli
lahf
les
jnp
sbb
sub
outs
je
xor
cmp
adc
ds
aaa
and
and
and
adc
inc
aad
xor
adc
pusha
push
jb
and
dec
lds
pop
(bad)
pop
inc
jg
push
sbb
push
sub
inc
aas
pop
imul
push
in
mov
test
inc
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
jno
xchg
xchg
scas
add
push
mov
add
mov
inc
mov
adc
mov
xchg
and
jo
inc
out
test
xchg
cmps
pushf
xor
pusha
stos
push
stos
mov
xor
hlt
xlat
repz
(bad)
adc
and
hlt
scas
mov
push
rol
xor
(bad)
mov
into
fs
xor
add
ror
(bad)
je
and
adc
rcr
adc
add
adc
aaa
pop
ds
sub
sbb
sbb
sbb
movs
xor
sbb
xor
sub
sbb
pop
mov
loopne
aad
xor
sub
bound
les
ja
dec
inc
jb
or
cmp
aam
add
push
popa
aad
aas
push
imul
jb
ins
mov
test
in
(bad)
out
addr16
hlt
jbe
bound
pop
pop
outs
push
test
mul
test
add
cdq
xchg
jne
xchg
lods
adc
mov
mov
mov
xchg
and
mov
xchg
pusha
xchg
push
mov
fistp
inc
mov
(bad)
nop
scas
mov
push
std
add
xor
sar
(bad)
shl
iret
add
ror
icebp
je
and
adc
stc
lahf
(bad)
xchg
and
sub
add
daa
xchg
pop
daa
xchg
or
sbb
or
adc
pop
lock
movs
adc
daa
sbb
adc
or
and
or
jl
ins
les
jae
push
inc
inc
lds
pop
mov
aam
adc
push
(bad)
aad
aas
push
test
in
mov
test
pop
in
pcmpeqd
inc
addr16
hlt
ja
jge
jnp
jo
and
push
push
mov
stos
gs
test
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
stos
test
xchg
push
fwait
mov
xor
jmp
and
mov
stc
push
aam
jmp
call
jbe
imul
fs
xor
add
aam
retf
out
je
and
adc
loop
les
jg
or
xor
jg
or
xchg
pop
adc
adc
imul
lock
je
aas
movs
and
cmps
or
cmp
xor
push
(bad)
push
nop
imul
jae
jle
ja
dec
mov
push
dec
aad
aas
push
neg
dec
in
mov
test
sbb
bound
pop
out
addr16
hlt
adc
jg
and
pop
push
xchg
xchg
test
push
(bad)
mov
mov
lods
xchg
jne
xchg
test
xchg
call
and
jo
inc
out
pushf
and
xchg
cmps
(bad)
xor
pusha
mov
xor
hlt
xlat
test
and
xchg
scas
test
out
enter
aad
test
jbe
div
xlat
xor
add
loop
in
mul
(bad)
je
and
adc
out
lds
pusha
shl
in
add
xor
sbb
ds
adc
xor
sbb
jg
mov
aaa
sub
lds
and
add
adc
dec
aad
xor
push
(bad)
dec
push
inc
les
nop
push
lds
push
aam
and
inc
push
push
aad
aas
push
neg
ins
in
mov
test
push
in
lsl
push
addr16
hlt
push
mov
push
cmc
pop
pop
je
stos
xchg
mov
push
mov
add
into
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
mov
mov
cwde
test
nop
push
push
leave
push
xchg
xlat
mov
out
retf
and
jmp
mov
xor
ret
jbe
not
fs
nop
add
test
je
and
fstp
adc
ins
shl
in
add
and
xor
and
cmp
cmp
movs
inc
lock
movs
sbb
daa
sbb
adc
xor
and
ss
jl
push
les
movs
pop
inc
cmp
(bad)
dec
inc
and
mov
push
ins
aad
aas
jae
dec
ja
in
mov
test
push
in
sysret
out
addr16
hlt
push
mov
arpl
pop
pop
push
xchg
nop
gs
test
push
xchg
xchg
jne
xchg
mov
ss
jo
inc
lods
movs
shl
xchg
cmps
cdq
xor
pusha
mov
cli
mov
xor
rcl
inc
lods
adc
and
mov
jecxz
repnz
xor
(bad)
mov
leave
fs
xor
lds
bnd
and
adc
fcomp
jne
shl
push
add
and
or
adc
ds
aaa
add
and
and
adc
push
aad
xor
adc
les
ins
movs
or
lds
inc
(bad)
jae
pop
aam
or
push
popa
aad
aas
sub
jle
pop
in
mov
test
jno
lsl
dec
addr16
dec
mov
push
push
lods
xchg
scas
add
push
in
gs
test
push
scas
xchg
cdq
xchg
in
adc
xchg
mov
and
jo
inc
out
and
cmps
xor
mov
xor
repnz
test
out
(bad)
scas
out
inc
rol
push
jmp
aad
push
(bad)
mov
into
xlat
xor
add
ror
shl
(bad)
adc
fcomp
aaa
test
adc
push
add
add
add
push
cmc
sbb
jg
mov
aaa
adc
and
and
or
add
mov
pop
or
adc
les
pusha
movs
dec
inc
dec
lds
das
push
aam
add
push
inc
aad
aas
push
not
push
in
mov
test
push
in
unpcklps
inc
addr16
hlt
push
mov
or
inc
pop
pop
push
xchg
xchg
test
gs
std
add
popf
xchg
jne
xchg
mov
ss
jo
inc
mov
xchg
and
and
mov
push
nop
xlat
retf
adc
and
xchg
scas
sti
inc
mov
icebp
push
enter
rcl
push
clc
mov
xchg
fs
xor
add
ror
(bad)
je
and
adc
out
(bad)
xchg
add
test
in
add
cmp
jbe
sbb
add
movzx
aaa
push
movs
pop
lock
ins
and
and
adc
cmp
aas
xor
(bad)
jl
jne
push
nop
jae
dec
inc
and
pop
das
pop
(bad)
jne
fs
xor
push
ins
aad
aas
data16
in
mov
test
in
unpckhps
inc
addr16
je
jge
dec
jne
cmc
pop
pop
fs
mov
push
fwait
gs
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
stos
movs
mov
xchg
cmps
fnsave
pusha
retf
mov
xor
into
xlat
in
inc
into
adc
and
mov
hlt
push
stos
add
xor
ret
jbe
neg
fs
xor
add
fimul
fbstp
jmp
lahf
les
jnp
sbb
xor
jl
dec
outs
and
or
adc
imul
lock
cmp
sub
push
loopne
aad
xor
or
push
nop
dec
movs
pop
inc
jno
push
das
pop
(bad)
push
inc
jg
dec
and
sbb
aad
aas
push
idiv
in
mov
test
add
inc
mulps
push
addr16
hlt
jge
jl
cmp
cmc
pop
pop
pop
push
mov
push
movs
mov
mov
mov
inc
mov
adc
mov
mov
call
es
pusha
fst
mov
xor
rcl
inc
mov
(bad)
xchg
scas
aam
fld
out
int
mov
push
fdivr
into
fs
xor
add
int3
(bad)
fsub
out
je
and
adc
fcomp
aaa
test
jp
dec
add
jg
daa
pop
outs
xchg
or
sbb
add
push
mov
aaa
sub
lds
and
and
adc
add
aaa
xor
sub
ins
push
arpl
sub
jo
dec
inc
dec
lds
pop
(bad)
arpl
aam
cmp
push
dec
aad
aas
push
mul
push
in
mov
test
pop
in
punpckhbw
push
addr16
hlt
dec
mov
add
popw
outs
push
test
mul
test
add
lods
xchg
jne
xchg
(bad)
adc
mov
stos
and
jo
inc
stos
movs
xchg
and
xchg
cmps
xchg
pusha
xchg
mov
xor
lock
xlat
inc
sti
adc
and
xchg
scas
mov
push
aam
call
push
sar
loop
in
retf
add
in
int
fucom
les
fst
fstp
add
aaa
shl
in
add
cmp
or
fs
sbb
or
push
lock
lds
and
sbb
sub
adc
aas
xor
adc
ins
push
imul
jb
cmp
adc
inc
js
dec
and
push
ins
aad
aas
push
test
in
mov
test
inc
in
vmread
inc
addr16
hlt
push
sbb
pop
pop
or
rcl
fwait
gs
mov
test
mov
inc
mov
adc
scas
mov
and
jo
inc
lods
movs
fisub
xchg
cmps
cdq
xor
pusha
cdq
push
mov
(bad)
xor
hlt
xlat
out
inc
in
adc
inc
jmp
retf
(bad)
int3
push
aam
mov
push
aad
in
jbe
div
fs
xor
add
fimul
fbstp
les
loop
mov
jg
je
push
add
and
or
adc
sub
aas
lock
cmp
and
adc
inc
aad
xor
das
(bad)
addr16
jbe
and
jae
outs
das
ins
(bad)
pop
inc
jno
dec
add
push
dec
aad
aas
dec
div
mov
test
in
(bad)
out
addr16
hlt
dec
mov
inc
cmc
dec
pop
inc
push
test
stos
add
push
cmc
gs
test
push
pop
jmp
stos
xchg
test
sar
ss
mov
and
jo
inc
xchg
cwde
es
cmps
pushf
xor
pusha
mov
stos
mov
xor
out
lds
retf
and
xchg
scas
mov
push
int
lock
fnstcw
shl
add
lods
(bad)
iret
data16
xor
adc
rcr
test
rcr
in
add
daa
xchg
cmp
xadd
cmc
or
push
mov
aaa
xor
and
and
adc
cmp
mov
pop
push
(bad)
ins
push
outs
les
xor
lds
pop
(bad)
jle
cmp
mov
push
push
aad
aas
push
test
in
mov
test
jns
gs
pop
addr16
hlt
adc
push
xchg
jl
push
cmc
inc
pop
jp
adc
mov
mov
mov
inc
mov
adc
mov
lea
jo
inc
mov
(bad)
and
mov
pusha
xchg
push
stos
mov
xor
out
xlat
jmp
and
(bad)
scas
mov
push
lds
retf
aad
push
clc
mov
leave
fs
xor
add
mov
retf
out
je
and
jne
lahf
(bad)
xchg
and
test
shl
in
add
xchg
pop
sbb
adc
adc
xchg
sbb
mov
aaa
adc
daa
lock
outs
and
or
pop
loopne
aad
xor
dec
(bad)
inc
push
imul
dec
inc
jge
push
das
pop
(bad)
jb
inc
aam
sbb
js
add
push
test
in
mov
test
in
lsl
and
hlt
adc
inc
xchg
jl
dec
cmc
and
push
push
xchg
xchg
repnz
push
mul
test
push
mov
inc
mov
adc
(bad)
mov
and
jo
inc
stos
movs
fbld
xchg
cmps
test
mov
xor
jmp
icebp
inc
lods
adc
and
sahf
scas
jmp
out
out
(bad)
add
xor
(bad)
mov
shl
add
in
les
out
je
and
adc
(bad)
lahf
mov
sbb
add
and
or
adc
cmp
movs
adc
lds
and
and
add
pop
aad
xor
push
(bad)
fs
dec
les
nop
movs
adc
jb
outs
das
(bad)
(bad)
jae
jb
dec
or
push
popa
aad
aas
push
div
ja
in
mov
test
in
packsswb
push
addr16
hlt
addr16
ja
dec
cmc
jno
ins
push
mov
push
mul
test
push
add
jne
xchg
jecxz
xchg
mov
and
jo
inc
cwde
movs
pushf
and
xchg
cmps
xchg
xor
pusha
xchg
push
mov
mov
cld
xlat
hlt
inc
int3
adc
(bad)
scas
mov
push
int
movs
xor
hlt
mov
mul
fwait
add
(bad)
pop
mov
je
and
adc
fstp
aaa
test
shl
test
outs
and
je
sbb
or
jg
mov
aaa
or
and
adc
mov
loopne
aad
xor
push
(bad)
dec
push
popa
les
movs
or
lds
js
arpl
aam
add
push
pop
aad
aas
push
test
outs
mov
test
in
punpckhbw
push
addr16
hlt
mov
inc
cmc
pop
pop
outs
push
adc
mov
mov
mov
inc
xchg
jne
xchg
xchg
adc
xor
inc
mov
xchg
and
std
cmps
xchg
pusha
mov
xor
retf
inc
in
adc
and
nop
scas
mov
push
leave
add
push
sar
fs
add
int3
(bad)
fsub
out
je
and
adc
jecxz
les
ins
rol
in
add
and
xor
aas
cmc
push
adc
cmp
movs
cmp
and
and
adc
sbb
and
add
jl
les
jae
pop
inc
lds
(bad)
jb
js
dec
add
push
jl
inc
aas
pop
test
in
mov
test
in
unpckhps
push
addr16
je
js
arpl
cmc
gs
push
add
push
mul
test
push
into
xchg
adc
inc
loope
test
jmp
and
jo
inc
out
cwde
and
out
cmps
test
pusha
mov
xchg
mov
xor
out
in
inc
lods
adc
and
xchg
scas
mov
push
rol
mov
push
fidivr
leave
fs
xor
add
loop
jmp
and
jne
lahf
fst
and
aaa
in
add
xchg
pop
adc
adc
ds
aaa
or
and
and
and
cmp
mov
pop
push
(bad)
dec
push
jbe
and
jno
dec
das
push
(bad)
jae
jp
jno
dec
mov
push
push
aad
aas
dec
idiv
ja
in
mov
test
push
in
nop
push
addr16
xchg
cmp
cmc
pop
pop
outs
push
adc
mov
mov
adc
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
pushf
and
mov
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
inc
in
iret
add
xor
(bad)
mov
into
fs
out
hlt
in
gs
mul
(bad)
(bad)
adc
fcomp
aaa
test
or
push
add
and
daa
rcr
pop
adc
adc
adc
adc
and
cmps
jge
pop
mov
loopne
aad
xor
push
(bad)
ins
push
jg
and
jo
dec
inc
jb
inc
das
push
mov
addr16
cmp
pop
push
and
pop
aas
pop
test
in
mov
test
inc
in
cmovbe
push
addr16
hlt
dec
mov
imul
pop
ins
push
adc
lods
add
fwait
xchg
jne
xchg
mov
mov
mov
mov
cmps
and
xchg
xchg
push
sahf
mov
xor
retf
inc
in
adc
inc
std
scas
cld
inc
repz
icebp
push
rol
mov
push
pushf
mov
xchg
shl
into
add
int
fisub
out
je
and
adc
ficomp
sub
and
add
sbb
adc
adc
xchg
and
cmp
movs
sub
and
pop
cmps
pop
daa
cmp
xor
adc
les
movs
dec
inc
xor
fs
cmp
aam
xor
jl
inc
aas
pop
test
push
mov
test
in
cmovs
inc
addr16
or
inc
cmc
pop
pop
jnp
lods
xchg
test
gs
add
fwait
xchg
test
xchg
cmps
mov
and
jo
inc
hlt
movs
mov
cmps
iret
test
scas
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
in
mov
and
mov
stc
push
stos
add
xor
cld
mov
loop
int3
xor
add
repz
je
and
adc
rcr
test
and
cmp
outs
or
xchg
or
adc
ds
aaa
shld
xor
cmp
add
xor
xor
adc
imul
es
push
movs
adc
cmp
(bad)
jno
ins
aam
or
push
arpl
inc
aas
neg
dec
in
mov
test
inc
in
movd
jns
data16
dec
mov
inc
cmc
push
pop
dec
push
test
stos
add
push
mov
test
push
sahf
xchg
stos
xchg
lods
adc
mov
xchg
and
jo
inc
out
(bad)
xchg
cmps
lods
xor
pusha
xchg
push
mov
fist
inc
in
adc
and
shr
rcl
lds
lds
fisub
rol
xlat
pop
je
and
adc
fcomp
aaa
test
xor
dec
add
sbb
xor
sbb
sbb
jg
mov
aaa
xor
and
and
or
pop
aad
xor
sub
les
jo
dec
inc
pop
lds
data16
push
inc
ja
inc
and
and
bound
push
test
ins
mov
test
push
in
addps
push
addr16
hlt
pop
mov
dec
cmc
popa
pop
jbe
adc
gs
test
push
mov
jne
xchg
mov
mov
cwde
inc
mov
and
cmps
mov
push
cli
mov
xor
retf
inc
sti
adc
and
xchg
scas
mov
push
out
add
push
ret
jbe
div
shl
retf
in
lds
out
je
and
adc
fstp
jne
(bad)
shl
adc
xchg
pop
and
cmc
sbb
ds
aaa
and
cmp
and
and
adc
aaa
aad
xor
adc
jl
ins
les
movs
addr16
pop
lds
das
outs
(bad)
ja
fs
add
push
sub
jge
jle
dec
ja
in
mov
test
jp
bound
push
out
addr16
hlt
dec
mov
or
popw
outs
push
stos
xchg
inc
push
xchg
gs
out
test
mov
inc
mov
adc
repz
and
jo
inc
lods
movs
fbld
xchg
cmps
mov
and
cwde
mov
xor
in
mov
and
mov
stc
push
mov
xor
fdivr
shl
lds
int
leave
data16
out
je
and
adc
ficomp
sub
shl
add
and
push
ror
pop
adc
push
add
shld
cmp
and
adc
inc
aad
xor
adc
les
nop
inc
movs
adc
jno
popa
das
pop
(bad)
pop
inc
jg
dec
cmp
sub
push
aas
jle
pop
ja
in
mov
test
imul
push
addr16
hlt
push
mov
inc
cmc
and
xchg
mov
lods
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
cwde
movs
mov
cmps
iret
movs
es
cmps
sahf
xor
pusha
fst
mov
xor
retf
xlat
in
inc
mov
(bad)
nop
scas
mov
push
xlat
add
xor
jecxz
fdiv
not
add
loop
stc
data16
je
and
jne
lahf
lds
cmp
sbb
ss
and
daa
pop
ds
xadd
cmc
sbb
jg
mov
aaa
pop
movs
adc
adc
movs
je
add
aaa
daa
xor
xor
adc
jb
popa
les
nop
cmp
inc
das
pop
(bad)
push
inc
jae
inc
add
push
and
push
aas
sub
dec
ja
in
mov
test
push
in
cmovo
push
addr16
hlt
inc
mov
push
je
jne
aad
test
push
mov
xchg
test
add
xchg
xchg
mov
(bad)
jmp
and
jo
inc
mov
pushf
and
mov
mov
push
std
mov
xor
out
xlat
lds
out
repz
loop
mov
push
retf
xor
sar
fs
xor
add
mov
retf
out
je
and
adc
fstp
add
add
cmp
and
ss
add
jg
mov
aaa
or
lds
and
cmp
sbb
adc
pop
loopne
aad
xor
and
les
jae
or
lds
pop
(bad)
ja
fs
and
sbb
aad
aas
outs
test
in
mov
test
pop
in
pcmpgtb
jo
push
hlt
ins
mov
dec
cmc
jbe
inc
push
adc
mov
add
add
test
jmp
and
jo
inc
mov
iret
movs
es
cmps
xor
xchg
push
sti
mov
xor
(bad)
xlat
out
inc
lods
adc
and
xchg
scas
call
push
cld
add
push
cld
mov
leave
fs
xor
ror
je
and
adc
fcomp
xor
pusha
rcl
in
add
and
xchg
push
rcr
pop
adc
xor
pop
lock
lds
dec
cmps
xor
adc
xor
adc
dec
push
ja
and
imul
jl
push
aam
and
sub
not
inc
in
mov
test
jno
unpcklpd
push
addr16
hlt
dec
mov
inc
cmc
and
inc
push
test
push
mul
test
add
cdq
xchg
adc
ss
mov
and
jo
inc
xchg
movs
scas
and
xchg
cmps
sahf
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
inc
cmps
push
fld
mov
push
(bad)
mov
in
shl
aad
cmps
in
gs
jmp
and
adc
repnz
lds
add
add
and
aaa
pop
aas
xchg
aaa
sar
jg
mov
aaa
pop
movs
adc
or
xor
pop
movs
or
cmps
sbb
loopne
aad
xor
adc
outs
push
popa
les
nop
pusha
movs
jl
cmp
bound
inc
mov
aam
cmp
push
je
push
aas
ins
test
in
mov
test
dec
in
(bad)
out
addr16
hlt
imul
inc
push
leave
xchg
mov
sti
push
cmc
gs
stos
add
mov
inc
xchg
jne
xchg
adc
mov
and
jo
inc
mov
fbld
and
call
xlat
in
mov
(bad)
leave
scas
mov
sti
(bad)
(bad)
push
leave
add
push
ret
jbe
not
fs
mov
(bad)
shl
ret
adc
aad
(bad)
xchg
sub
xor
in
add
cmp
or
adc
sbb
push
adc
and
and
and
adc
sbb
and
es
jne
les
nop
jo
adc
cmp
adc
daa
(bad)
jg
pusha
aam
add
push
pop
aad
aas
push
imul
je
push
mov
test
pop
in
cmovae
inc
addr16
hlt
adc
pop
xchg
push
popa
cmc
pop
pop
ins
push
mov
repnz
push
scas
mov
test
mov
stc
adc
inc
mov
xchg
mov
movs
mov
and
jo
inc
lods
movs
mov
in
nop
xor
pusha
xchg
push
in
xor
xlat
in
inc
lds
lock
ret
inc
rol
icebp
push
retf
add
xor
repz
in
fs
xor
add
fimul
fbstp
loopne
out
mov
lahf
aam
xor
cmp
jnp
and
cmp
jns
xor
cmp
adc
sbb
movs
daa
lock
cmp
and
adc
pop
aad
xor
inc
(bad)
push
nop
inc
movs
push
inc
cmp
pop
das
pop
(bad)
jns
push
aam
cmp
push
arpl
inc
aas
push
neg
inc
in
mov
test
gs
bndmov
cmp
hlt
push
mov
or
pusha
pop
push
add
push
cmc
gs
out
sahf
push
mov
inc
xchg
xchg
lock
icebp
mov
and
jo
inc
mov
iret
and
cmps
sahf
xor
pusha
stos
push
mov
fild
inc
fcom
leave
and
xchg
scas
loope
ret
push
loop
mov
push
(bad)
mov
loopne
xlat
xor
add
in
leave
mul
shl
adc
fistp
xor
add
jg
aaa
pop
and
adc
push
mov
aaa
sub
adc
sbb
adc
xor
mov
loopne
aad
xor
push
(bad)
ins
push
push
les
ins
movs
push
inc
push
lds
gs
pop
inc
addr16
add
push
pop
aad
aas
pop
test
in
mov
test
adc
xor
pop
out
pmuludq
bound
and
ins
push
fist
hlt
lea
mov
mov
inc
mov
adc
mov
rol
movs
xchg
and
and
mov
loopne
hlt
inc
jecxz
in
(bad)
(bad)
in
scas
fiadd
(bad)
icebp
push
lds
in
rcl
push
clc
mov
leave
test
rol
(bad)
out
je
and
adc
ficomp
sub
arpl
adc
adc
add
or
adc
xchg
push
jg
mov
aaa
adc
adc
das
lds
adc
adc
cs
loopne
aad
xor
add
jg
sub
movs
dec
inc
cmp
imul
pop
aam
add
push
(bad)
aad
aas
outs
test
in
mov
test
gs
in
pcmpgtb
inc
addr16
hlt
pop
mov
push
push
xchg
movs
gs
test
add
lods
xchg
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
fbld
xchg
cmps
cdq
xor
pusha
retf
mov
xor
mov
int3
inc
not
mov
(bad)
(bad)
mov
iret
push
aam
mov
push
ret
mov
leave
shl
jecxz
stos
in
fisttp
fdiv
ret
adc
rcr
test
and
cmp
and
sbb
rcr
cmp
ss
aaa
shld
sub
cmp
and
adc
pop
aad
xor
push
(bad)
outs
push
xor
and
pop
lds
das
push
aam
and
pop
push
and
push
aas
push
not
pop
in
mov
test
pop
in
cmovns
pop
addr16
hlt
dec
mov
inc
cmc
pop
pop
dec
push
adc
mov
mov
ret
adc
inc
mov
adc
mov
jo
inc
lock
mov
fwait
cmps
sahf
xor
pusha
adc
mov
xchg
xlat
test
in
xchg
scas
mov
push
int
mov
push
in
mov
fsub
xchg
add
out
xchg
mul
(bad)
(bad)
adc
fcomp
or
in
add
add
daa
pop
popa
xchg
aaa
rcl
add
sbb
and
or
movs
es
cmps
pusha
daa
pop
mov
loopne
aad
xor
push
(bad)
arpl
les
push
movs
or
lds
pop
(bad)
pop
inc
addr16
and
inc
push
sub
push
aas
jb
push
ja
in
mov
test
dec
in
lsl
push
addr16
imul
dec
push
xchg
xchg
xchg
add
push
hlt
gs
test
add
mov
mov
jne
xchg
mov
mov
mov
scas
movs
and
cmps
mov
push
mov
fistp
inc
mov
(bad)
cmc
scas
enter
out
jmp
retf
aad
push
cli
mov
xchg
fs
xor
add
in
(bad)
data16
out
je
and
adc
fstp
or
add
adc
daa
pop
cmp
adc
cmp
movs
cs
and
dec
and
or
xor
adc
inc
push
push
les
nop
jo
js
lds
das
pop
(bad)
push
inc
and
dec
or
push
ins
aad
aas
xor
dec
ja
in
mov
test
dec
in
(bad)
out
addr16
hlt
jae
pop
xchg
aaa
jne
cmc
push
pop
pop
push
cmps
xchg
lahf
add
push
mov
test
add
mov
inc
mov
adc
xor
inc
lods
movs
xchg
xchg
cmps
movs
xor
pusha
xchg
push
cmps
mov
xor
in
out
inc
out
loopne
(bad)
lds
inc
fadd
mov
xor
fidivr
out
fs
xor
add
out
lahf
data16
(bad)
cli
adc
cld
lahf
(bad)
xchg
xor
xor
shl
in
add
add
pop
sar
inc
adc
ds
aaa
and
lds
and
sub
adc
add
daa
xor
adc
les
jb
outs
inc
push
lds
das
pop
(bad)
dec
inc
jg
dec
cmp
push
imul
aas
push
imul
in
mov
test
push
in
packssdw
push
addr16
sbb
jg
and
cmc
pop
pop
movhps
push
hlt
gs
out
xchg
cdq
xchg
adc
lods
and
jo
inc
mov
fwait
es
pusha
nop
push
mov
fistp
inc
repnz
and
xchg
scas
aam
out
(bad)
mov
xor
(bad)
mov
into
shl
int3
add
test
cli
mul
xor
xor
lds
pusha
rcr
in
add
jne
cmp
sar
adc
imul
xor
sub
add
xor
push
(bad)
adc
les
jo
or
lds
popa
(bad)
pop
inc
jns
jb
and
inc
aas
push
not
push
jne
popa
test
inc
in
lsl
pop
addr16
hlt
dec
mov
pop
cmc
jo
outs
push
lea
sti
mov
xchg
push
cmps
xchg
jne
xchg
lahf
adc
mov
xchg
inc
mov
shl
nop
cmps
call
mov
xor
repz
retf
adc
and
sahf
scas
mov
icebp
push
out
mov
push
fidivr
out
shl
retf
add
in
clc
in
bnd
and
adc
sti
lahf
not
add
adc
adc
and
adc
adc
pop
adc
sub
xor
adc
movs
aas
dec
cmp
arpl
inc
mov
loopne
aad
xor
adc
push
push
imul
push
inc
cmp
dec
das
popa
(bad)
ja
data16
add
push
push
aad
aas
push
test
dec
mov
test
in
nop
inc
addr16
hlt
je
inc
xchg
jp
push
cmc
fs
push
add
push
jmp
add
mov
inc
xor
nop
adc
mov
jo
inc
xchg
movs
stos
and
pushf
cmps
xchg
xor
pusha
mov
xor
in
out
inc
out
into
and
mov
stc
push
retf
xor
fnstcw
hlt
fs
xchg
add
jecxz
data16
shl
adc
fcomp
das
test
or
pop
add
and
push
rcl
jg
mov
aaa
aaa
movs
pop
lock
cs
pop
cmps
(bad)
and
xor
or
ins
push
jbe
sub
dec
movs
inc
inc
jno
adc
imul
inc
and
pop
push
jbe
je
push
not
je
sbb
sbb
jg
pop
out
addr16
adc
inc
cmc
pop
pop
or
test
scas
add
push
xchg
test
push
scas
xchg
jne
xchg
cwde
adc
lahf
mov
and
jo
inc
xchg
movs
fisub
pushf
cmps
(bad)
xor
pusha
pushf
push
mov
fistp
inc
mov
(bad)
call
(bad)
mov
xor
ret
jbe
test
add
mov
enter
popf
je
and
adc
fcomp
xor
daa
shr
test
outs
cmp
or
adc
xor
movs
adc
sbb
pop
and
pop
cmps
sbb
loopne
aad
xor
cmp
ins
push
(bad)
les
push
lds
das
pop
(bad)
push
inc
addr16
and
push
xor
add
jnp
inc
ja
in
mov
test
jns
pop
addps
jl
js
push
jne
cmc
pop
pop
push
add
push
cmc
xchg
mov
mov
inc
mov
adc
mov
stos
and
jo
inc
out
movs
xchg
and
and
mov
push
rcl
retf
adc
and
cmc
scas
mov
push
in
add
push
clc
mov
leave
shl
aam
jmp
pushf
gs
fldenv
out
je
and
adc
fstp
test
sbb
cmp
and
or
aaa
cmc
aas
adc
xor
movs
adc
adc
movs
sbb
daa
sbb
adc
inc
aad
xor
adc
jl
inc
les
nop
jo
pop
inc
jns
adc
inc
(bad)
jne
fs
add
push
ins
aad
aas
push
test
in
mov
test
jp
pop
nop
inc
addr16
hlt
jo
jge
jl
inc
cmc
push
pop
outs
push
mov
sti
lods
test
push
mov
inc
popf
jne
xchg
pushf
adc
movs
mov
and
jo
inc
lods
movs
mov
es
cmps
(bad)
xor
pusha
adc
mov
jmp
and
xlat
scas
std
inc
pop
mov
xor
(bad)
mov
nop
fs
xor
gs
(bad)
(bad)
data16
sti
je
and
adc
fstp
xor
and
add
push
add
and
or
adc
ds
aaa
movs
pop
lock
movs
and
cmps
xor
add
dec
loopne
aad
xor
adc
les
nop
imul
push
inc
jno
dec
sbb
push
dec
aad
aas
dec
not
push
in
mov
test
push
in
nop
pop
addr16
dec
mov
adc
pop
pop
push
add
push
cmps
gs
test
push
add
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
fsub
xchg
cmps
(bad)
xor
pusha
test
mov
xor
xchg
xlat
inc
in
rol
mov
inc
cld
(bad)
rcl
mov
push
lds
into
test
rol
(bad)
out
je
and
adc
fstp
das
test
jbe
push
add
sub
jne
sbb
inc
adc
push
mov
aaa
pop
movs
adc
sbb
sbb
cmp
adc
loopne
aad
xor
push
(bad)
ins
push
je
addr16
jo
jno
inc
lds
pop
mov
addr16
and
pop
push
arpl
pop
aas
push
div
mov
test
gs
in
cmovb
pop
addr16
hlt
push
mov
inc
cmc
jae
inc
push
adc
gs
test
push
ret
xchg
adc
inc
mov
adc
test
cmps
and
jo
inc
mov
pushf
and
mov
ret
xor
pusha
mov
movs
mov
xor
rcl
hlt
inc
movs
adc
and
cmc
scas
mov
push
leave
add
push
ret
jbe
not
fs
xor
add
int3
(bad)
out
je
and
adc
fistp
das
test
shl
in
add
sub
push
rcr
pop
adc
cmp
xor
or
movs
add
cmps
sbb
push
mov
loopne
aad
xor
push
(bad)
je
imul
dec
inc
pop
lds
pop
(bad)
pop
inc
fs
or
push
ins
aad
aas
outs
test
in
mov
test
inc
in
unpckhps
and
mov
inc
cmc
jns
or
lods
xchg
mov
gs
test
push
xchg
xchg
jne
xchg
sahf
adc
lods
mov
and
jo
inc
mov
shl
xchg
cmps
movs
xor
pusha
xchg
push
mov
fistp
inc
not
iret
and
xchg
scas
mov
add
xor
(bad)
mov
jmp
int
(bad)
in
ror
fbstp
jmp
lahf
out
xchg
add
jne
or
add
and
or
adc
adc
pop
lock
and
and
xor
pop
aad
xor
push
(bad)
or
les
nop
push
movs
adc
cmp
jne
push
(bad)
jo
jae
dec
or
push
sub
inc
aas
dec
div
jbe
push
mov
test
gs
pop
lsl
inc
addr16
hlt
jno
jg
ss
cmc
dec
pop
or
test
xchg
add
push
cmc
mov
mov
xchg
xchg
jne
xchg
mov
ss
xchg
and
jo
inc
out
shl
mov
xchg
push
div
call
adc
inc
ret
inc
rol
out
int
in
out
loop
(bad)
mov
retf
xor
gs
fsub
out
je
and
adc
(bad)
lahf
out
xchg
and
sub
add
or
or
addr16
sbb
jg
mov
aaa
xor
and
cmp
outs
daa
inc
mov
loopne
aad
xor
sbb
ins
push
jne
ja
jo
or
lds
pop
(bad)
push
inc
pop
aam
sbb
push
inc
aad
aas
push
div
push
in
mov
test
gs
in
movd
push
outs
hlt
dec
mov
push
cmc
inc
pop
or
adc
mov
mov
mov
inc
mov
adc
mov
mov
scas
movs
stos
and
cmps
cmps
lods
xor
pusha
mov
xor
loopne
mov
rcl
and
xchg
scas
out
mov
cli
push
rol
xor
repz
cmc
fidiv
retf
add
lds
les
rcl
lahf
out
xchg
push
pop
and
add
and
push
shl
jo
xor
movzx
lock
lds
and
sbb
sub
adc
and
cmp
jne
xor
cmp
cmp
pop
das
gs
ja
js
imul
aad
aas
sub
in
mov
test
add
bound
sbb
inc
addr16
or
or
push
xchg
xchg
test
gs
test
push
mov
inc
mov
adc
mov
xchg
and
jo
inc
xchg
movs
fbld
xchg
cmps
xor
mov
popf
fistp
inc
lods
adc
and
lahf
scas
mov
push
leave
add
xor
stc
mov
in
ret
xor
add
fisttp
into
je
and
adc
repnz
retf
xchg
pop
pop
or
add
and
xadd
cmc
inc
adc
or
adc
sbb
cmp
and
xor
dec
aad
xor
or
push
push
inc
les
nop
jo
ja
jno
adc
and
ja
jg
xor
jno
inc
aas
push
mul
adc
push
mov
test
push
in
cmovns
inc
addr16
xchg
bound
cmc
jge
push
add
push
cmc
mov
loopne
mov
mov
adc
div
(bad)
inc
out
xchg
and
nop
cmps
fwait
xor
pusha
xchg
push
mov
fisttp
inc
mov
lds
inc
out
out
fld
mov
push
(bad)
mov
in
cld
xor
gs
mul
popf
je
and
adc
cmc
lahf
lds
pusha
shl
in
add
adc
xchg
jl
cmp
sbb
jg
mov
aaa
or
and
cmp
add
xor
aaa
xor
push
(bad)
bound
les
jo
dec
inc
jb
or
pop
(bad)
arpl
aam
add
push
je
inc
aas
jne
inc
ja
in
mov
test
pop
in
lsl
push
addr16
hlt
push
mov
inc
cmc
and
push
push
test
sti
gs
test
add
mov
inc
loop
fcom
mov
and
jo
inc
xchg
movs
and
cmps
fwait
xor
pusha
xchg
push
mov
fild
inc
(bad)
adc
and
iret
scas
mov
push
test
icebp
push
lds
shl
add
out
retf
out
je
and
adc
lds
jo
adc
cmp
push
add
and
adc
adc
or
xor
sub
and
cmp
pusha
daa
sbb
and
pop
aad
xor
adc
je
imul
push
inc
aas
lds
push
mov
dec
add
push
ins
aad
aas
push
dec
ja
in
mov
test
inc
in
packssdw
dec
addr16
hlt
imul
fs
xchg
xchg
test
gs
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
mov
fbld
xchg
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
into
xlat
out
inc
mov
(bad)
imul
mov
xor
lds
xchg
fs
xor
add
in
and
std
je
and
adc
loop
mov
rcl
in
add
and
or
adc
xor
pop
lock
lds
and
and
xor
pop
aad
xor
adc
inc
push
imul
adc
lds
das
push
(bad)
jg
push
aam
sub
push
sub
sbb
push
not
dec
in
mov
test
in
maxps
pop
addr16
hlt
push
mov
adc
jge
inc
push
test
mov
mov
mov
xchg
mov
fist
mov
mov
test
mov
fwait
inc
out
fwait
and
mov
xchg
xor
pusha
xchg
push
mov
fistp
inc
out
leave
and
xchg
scas
hlt
inc
std
(bad)
out
int
fnstenv
(bad)
mov
into
fs
enter
(bad)
dec
cmc
je
and
adc
ficomp
aaa
test
cmp
push
add
cmp
or
adc
xchg
add
aaa
pop
movs
adc
dec
lds
and
and
adc
inc
aad
xor
ss
bound
les
push
or
das
dec
(bad)
arpl
aam
add
push
je
data16
sub
dec
ja
in
mov
test
gs
in
cvtps2pd
push
addr16
hlt
data16
jbe
pop
pop
outs
push
mov
push
lods
mov
inc
mov
inc
stos
jne
xchg
mov
mov
mov
test
iret
popf
es
xchg
pusha
cwde
push
mov
fisttp
inc
fst
mov
inc
xchg
scas
enter
icebp
push
mov
xor
pushf
mov
(bad)
fs
xor
add
in
call
je
and
adc
rcr
das
test
in
add
sbb
xchg
je
adc
xchg
pop
jg
mov
aaa
adc
and
cmp
xor
sub
pavgb
or
pop
and
les
jae
dec
inc
pop
lds
pop
(bad)
ja
cmp
mov
push
push
aad
aas
push
idiv
in
mov
test
in
cmovs
inc
addr16
hlt
bound
jbe
push
pop
outs
push
scas
xchg
mov
lea
gs
test
push
lahf
xchg
jne
xchg
mov
movs
mov
and
jo
inc
stos
movs
call
cmps
fnstenv
pusha
retf
mov
xor
(bad)
xlat
jmp
mov
korb
scas
fadd
(bad)
stc
push
int3
add
xor
aam
iret
jbe
neg
add
fisttp
shl
adc
lahf
(bad)
xchg
xor
aaa
test
shl
in
add
and
xadd
pop
jg
mov
aaa
sub
dec
lock
pop
and
das
cmps
xor
add
ss
aad
xor
adc
les
nop
jae
pop
inc
pop
lds
das
pop
(bad)
ja
jg
inc
add
push
arpl
js
outs
mul
push
in
mov
test
gs
in
vmwrite
push
addr16
hlt
pop
mov
push
cmc
jnp
push
add
push
cmc
gs
mov
enter
scas
xchg
jne
xchg
lods
adc
xchg
mov
and
jo
inc
in
movs
test
xchg
stos
push
mov
fistp
inc
movs
adc
and
xchg
scas
mov
push
int
mov
push
fdivr
into
fs
fadd
jmp
je
and
adc
fcomp
das
test
xor
push
add
add
and
adc
or
adc
xchg
push
jg
mov
aaa
pop
movs
sbb
sub
xor
pop
movs
jno
sbb
adc
adc
daa
xor
cmp
ins
push
aas
les
jo
dec
inc
dec
lds
pop
(bad)
bound
aam
xor
push
das
aad
aas
push
test
in
mov
test
ins
in
(bad)
out
addr16
hlt
push
mov
inc
cmc
push
pop
push
push
adc
xchg
clc
push
xchg
mov
adc
mov
leave
inc
jmp
and
mov
retf
inc
mov
(bad)
enter
clc
(bad)
ficom
mov
push
sar
fidiv
rol
test
je
and
adc
fstp
or
ins
ror
in
add
and
and
cmp
and
sbb
movs
and
adc
movs
sbb
daa
xor
xor
push
(bad)
adc
les
push
movs
dec
inc
xor
inc
das
ds
je
pop
aam
add
push
ins
aad
aas
data16
dec
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
or
push
stos
xchg
mov
mov
test
push
fld
stos
jne
xchg
mov
movs
mov
and
jo
inc
test
mov
lahf
cmps
cdq
xor
pusha
xchg
push
mov
stos
xor
jecxz
lds
(bad)
and
xchg
scas
fiadd
mov
xor
test
fbld
leave
add
in
popf
data16
(bad)
les
repnz
les
jg
adc
test
xchg
pop
adc
adc
ds
aaa
pop
movs
dec
lock
jo
cmp
data16
add
push
loopne
aad
xor
aas
(bad)
push
nop
jb
jb
jae
jbe
inc
(bad)
jae
and
ja
dec
mov
push
jae
inc
aas
push
neg
push
in
mov
test
push
in
cmovle
arpl
hlt
sbb
jne
cmc
pop
pop
push
add
push
and
out
mov
adc
inc
mov
adc
mov
rol
movs
shl
xchg
cmps
mov
xchg
pusha
xchg
push
cmps
mov
xor
rcl
inc
lods
adc
and
mov
stc
push
jmp
mov
push
std
mov
in
shl
xlat
add
out
popf
mul
shl
adc
out
lahf
aad
and
imul
outs
jnp
pop
pop
xor
adc
imul
xor
sbb
add
pop
mov
loopne
aad
xor
push
(bad)
ins
push
jo
jns
jo
dec
inc
pop
lds
pop
(bad)
pop
inc
and
push
sbb
push
das
aad
aas
push
test
in
mov
test
push
in
movd
push
addr16
hlt
inc
mov
dec
cmc
jb
outs
push
xchg
xchg
repz
push
mov
nop
test
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
xchg
and
in
mov
mov
mov
xor
in
xlat
retf
adc
and
loope
mov
push
out
add
xor
clc
mov
xchg
shl
leave
add
fisttp
les
rcl
lahf
into
xchg
and
jg
ins
shl
in
add
sbb
jge
adc
xchg
push
jg
mov
aaa
adc
adc
and
inc
cmps
sbb
sbb
xor
adc
push
push
imul
dec
inc
cmp
inc
das
dec
(bad)
ja
cs
add
push
(bad)
aad
aas
inc
test
in
mov
test
addr16
unpckhps
inc
addr16
hlt
push
mov
or
push
lods
xchg
test
movs
push
lods
gs
test
push
mov
inc
loop
rcl
movs
mov
and
jo
inc
cdq
movs
mov
sahf
cmps
ret
xor
pusha
mov
mov
mov
push
cmc
xlat
ret
inc
lods
adc
and
mov
out
push
mov
mov
push
(bad)
mov
leave
fs
xor
add
jmp
retf
out
je
and
adc
loope
retf
xchg
ds
test
shl
in
add
and
or
adc
or
movs
adc
lds
and
and
or
xor
or
les
nop
ins
movs
or
lds
push
aam
add
push
ins
aad
aas
sub
pop
ja
in
mov
test
gs
in
packssdw
push
addr16
hlt
dec
mov
push
cmc
pop
pop
ins
push
sahf
xchg
scas
add
push
and
mov
test
mov
adc
inc
cmps
jne
xchg
stos
adc
mov
mov
movs
cmps
and
xchg
cmps
call
mov
xor
in
lds
aad
rol
mov
inc
ffreep
out
mov
xor
iret
mov
cld
mov
repnz
ror
xlat
je
and
adc
fcomp
aaa
test
sub
dec
add
cmp
adc
ds
das
shl
adc
and
add
adc
and
cmp
and
pop
mov
loopne
aad
xor
cmp
ins
push
inc
les
jo
or
lds
pop
(bad)
pop
inc
addr16
add
push
cs
aas
push
test
gs
test
gs
in
sysret
out
addr16
hlt
push
mov
jae
bound
pop
push
test
mov
out
mov
mov
mov
nop
xchg
mov
(bad)
jmp
jo
inc
(bad)
movs
(bad)
and
and
ret
xor
lock
test
and
shr
fcom
mov
push
ret
jbe
not
fs
loope
lock
fisttp
loop
retf
and
adc
ficomp
or
add
and
or
adc
sbb
adc
daa
lock
movs
sbb
daa
sbb
adc
pop
aad
xor
adc
jbe
jbe
cmp
cmp
push
das
jge
jge
pop
aam
add
push
(bad)
aad
aas
push
imul
dec
in
mov
test
in
movd
inc
addr16
hlt
or
dec
cmc
popw
push
add
push
stos
gs
test
push
mov
inc
loope
test
jmp
and
jo
inc
mov
movs
and
fwait
cmps
scas
xor
pusha
xchg
push
lea
test
in
xlat
out
inc
in
adc
and
(bad)
scas
mov
rol
not
mov
push
(bad)
mov
leave
fs
xor
add
retf
data16
loop
mul
ficom
hlt
lahf
les
and
and
pop
add
or
or
adc
aas
mov
aaa
shld
adc
sbb
loopne
aad
xor
push
(bad)
pop
push
jbe
and
jno
push
das
push
jae
fs
or
push
dec
aad
aas
push
mul
push
in
mov
test
push
in
mulps
push
addr16
hlt
dec
mov
popa
cmc
and
pop
push
rcl
lods
gs
test
push
scas
xchg
jne
xchg
out
adc
test
jo
inc
out
test
popf
iret
lahf
es
sahf
xor
pusha
cdq
push
mov
fisttp
les
leave
and
xchg
scas
std
inc
inc
out
loop
retf
xor
(bad)
mov
mul
rol
loope
fsub
out
je
and
jne
lahf
mov
or
add
sub
or
and
sbb
jg
mov
aaa
push
movs
adc
push
lds
sub
push
loopne
aad
xor
push
(bad)
adc
les
jo
push
inc
and
or
pop
(bad)
gs
addr16
cmp
push
das
aad
aas
pop
test
in
mov
test
push
in
cmovno
jge
jo
adc
ja
pop
pop
ins
push
movs
xchg
mov
in
push
hlt
gs
popf
out
cli
push
mov
inc
lahf
jne
xchg
jmp
mov
and
jo
inc
mov
pushf
and
and
iret
xor
loopne
hlt
inc
mov
lds
(bad)
push
out
mov
push
ret
jbe
not
fs
icebp
add
int
leave
data16
std
je
and
adc
out
lds
ins
shl
in
add
jne
adc
fs
or
pop
cmc
or
jg
mov
aaa
adc
and
or
mov
loopne
aad
xor
sbb
imul
aas
nop
outs
movs
dec
inc
cmp
push
das
cmp
ja
popa
aam
add
push
popa
aad
aas
push
test
jl
push
test
push
in
unpckhps
jnp
pop
hlt
push
mov
or
push
lods
xchg
lods
add
push
xchg
gs
test
push
mov
mov
jne
xchg
pushf
adc
movs
mov
and
jo
inc
lods
movs
mov
es
cmps
cdq
xor
pusha
popf
push
cli
mov
xor
in
jecxz
lods
adc
and
mov
stc
push
repz
push
fidivr
xlat
fs
xor
add
ror
(bad)
je
and
adc
mov
pop
jne
cmp
daa
in
add
jns
xor
cmp
adc
sub
sub
and
and
pop
loopne
aad
xor
push
(bad)
jno
jbe
and
jno
push
das
push
(bad)
jae
pusha
aam
or
push
popa
aad
aas
pop
test
in
mov
test
pop
in
cmovs
gs
hlt
dec
mov
inc
cmc
cs
imul
call
mov
call
inc
mov
adc
(bad)
mov
and
jo
inc
xchg
(bad)
mov
pusha
mov
xor
hlt
xlat
test
out
sahf
scas
out
inc
test
(bad)
xor
fnstsw
repnz
xor
add
loope
in
mov
and
adc
(bad)
lahf
out
xchg
and
adc
add
sbb
aaa
pop
xor
or
xor
add
sbb
push
lock
movs
and
cmps
sbb
loopne
aad
xor
push
(bad)
jb
ins
les
je
pop
inc
jb
push
das
cmp
arpl
aam
and
inc
push
das
aad
aas
jnp
inc
ja
in
mov
test
sbb
push
addr16
hlt
push
mov
inc
cmc
pop
pop
outs
push
adc
gs
test
add
mov
inc
mov
adc
mov
mov
mov
fldenv
and
xchg
xor
(bad)
xlat
lods
inc
out
retf
and
xlat
scas
mov
push
leave
add
xor
ret
jbe
div
shl
retf
add
out
clc
data16
les
enter
loop
fstp
cmp
ins
rcl
in
add
push
xchg
pop
jns
or
adc
xchg
push
jg
mov
aaa
adc
daa
lock
lds
adc
push
daa
cs
loopne
aad
xor
adc
inc
push
imul
js
cmp
pop
das
ds
ja
addr16
adc
push
arpl
add
imul
ja
in
mov
test
pop
in
unpcklps
jns
pop
hlt
push
mov
or
push
movs
xchg
test
rol
pushf
push
test
mov
test
movs
movs
mov
and
jo
inc
mov
iret
cdq
es
cmps
xchg
pusha
xchg
push
mov
fistp
inc
lds
into
and
mov
mov
xor
(bad)
mov
leave
push
repz
fisttp
fbstp
loop
std
cmc
fnsave
lahf
mov
and
push
in
add
and
or
adc
ds
aaa
sub
and
push
cmps
sbb
sbb
xor
dec
(bad)
push
push
jbe
push
nop
inc
movs
adc
cmp
adc
push
(bad)
jno
push
aam
add
push
arpl
inc
aas
das
not
push
in
mov
test
push
cmovns
jnp
data16
dec
mov
inc
cmc
pop
pop
push
add
push
cwde
mov
mov
lods
xchg
adc
inc
mov
adc
xchg
mov
and
jo
inc
out
popf
and
xchg
cmps
xchg
xor
pusha
xchg
push
loopne
mov
hlt
xlat
repz
cmps
adc
and
xchg
scas
mov
push
jmp
call
push
sar
shl
add
loope
call
je
and
adc
fstp
xor
add
and
inc
pop
ds
or
adc
sub
adc
sbb
sub
pop
movs
es
and
push
loopne
aad
xor
ss
dec
push
inc
les
movs
push
inc
pusha
lds
cmp
aam
add
push
das
aad
aas
push
test
in
mov
test
push
in
nop
and
hlt
push
mov
adc
bound
inc
push
test
mul
test
push
cmps
xchg
jne
xchg
jmp
lea
mov
mov
iret
mov
xor
pusha
fst
mov
xor
(bad)
jmp
and
xchg
scas
(bad)
inc
out
(bad)
cmps
push
loop
mov
push
ret
jbe
not
fs
out
add
in
vphaddwd
test
(bad)
adc
fstp
sub
cmp
add
xor
xchg
or
cmp
sbb
pop
mov
aaa
or
and
and
push
loopne
aad
xor
add
inc
push
xor
bound
lds
(bad)
addr16
and
xor
dec
aad
aas
pop
div
dec
in
mov
test
push
in
lsl
inc
addr16
hlt
push
mov
adc
and
outs
push
lods
xchg
lahf
add
push
mul
test
mov
mov
jne
xchg
mov
lods
mov
and
jo
inc
call
es
cmps
mov
xchg
pusha
xchg
push
clc
mov
xor
rcl
out
inc
mov
korb
scas
fiadd
(bad)
mov
xor
cmp
lds
out
jmp
je
and
jne
lahf
les
jnp
es
add
sbb
cmp
xor
adc
aas
mov
aaa
shld
sub
cmp
add
or
xor
aaa
(bad)
push
nop
dec
movs
adc
jnp
adc
push
mov
ja
dec
add
popa
aad
aas
push
idiv
ja
in
mov
test
sbb
push
sysret
out
addr16
push
mov
inc
cmc
je
push
add
push
cmc
gs
cld
add
mov
inc
loopne
adc
mov
inc
test
mov
es
cmps
ret
pusha
mov
mov
xor
not
mov
and
xchg
scas
mov
push
int
mov
push
sar
fs
xor
add
ret
retw
out
je
and
adc
ficomp
xor
adc
or
or
add
aaa
pop
es
add
sbb
add
or
ds
xor
xor
outs
daa
add
or
inc
aad
xor
push
(bad)
adc
les
xor
lds
das
pop
mov
aam
cmp
push
and
inc
aas
pop
test
in
mov
test
add
xor
add
das
addr16
hlt
push
mov
inc
cmc
addr16
dec
push
mov
push
cmc
pop
xchg
mov
cmps
adc
inc
cmps
jne
xchg
call
mov
mov
out
movs
xchg
and
cdq
cmps
xchg
pusha
fst
mov
xor
loopne
mov
mov
(bad)
shr
repnz
repz
push
ret
jbe
test
add
mov
cdq
shl
shl
rcl
lahf
mov
ins
shl
in
add
pop
xchg
pop
outs
xchg
push
rcl
adc
mov
aaa
push
movs
cmp
and
sub
or
pop
aad
xor
adc
inc
push
push
les
movs
or
lds
pop
(bad)
inc
fs
add
(bad)
aad
aas
jne
gs
in
mov
test
inc
in
(bad)
out
addr16
pop
mov
jae
pop
pop
push
add
push
lock
test
push
mov
inc
call
(bad)
jmp
and
jo
inc
mov
iret
mov
xor
pusha
xchg
push
call
push
in
out
inc
ret
adc
and
in
scas
sti
inc
aad
stc
push
out
jmp
vpsubusb
mov
xchg
fs
xor
add
repz
fisub
out
je
and
adc
scas
lahf
in
xchg
and
and
jnp
and
dec
add
cmp
cmp
cmp
adc
imul
lock
es
and
adc
pop
aad
xor
adc
jne
jbe
and
jno
imul
jg
or
push
dec
aad
aas
neg
dec
in
mov
test
popa
in
unpckhps
cs
push
mov
push
push
test
scas
add
push
cmc
mov
out
mov
adc
jmp
adc
ss
mov
and
jo
inc
out
shl
(bad)
cmps
fnstenv
pusha
test
mov
xor
(bad)
xlat
fadd
leave
and
xchg
scas
cmc
inc
fld
out
retf
add
xor
aam
stos
jbe
test
add
ror
fdiv
(bad)
adc
std
lahf
jmp
test
sbb
sub
outs
and
add
add
xchg
and
push
mov
aaa
xor
and
sbb
or
adc
xor
pop
adc
les
jb
push
inc
jb
dec
das
dec
(bad)
arpl
aam
add
push
push
aad
aas
push
neg
push
in
mov
test
push
in
nop
push
addr16
push
mov
outs
cmc
pop
pop
pop
push
mov
mov
in
mov
add
mov
adc
mov
adc
mov
mov
movs
(bad)
mov
xchg
push
mov
cwde
push
in
hlt
inc
out
jmp
(bad)
lds
inc
stc
(bad)
aad
mov
aad
push
ret
jbe
not
fs
xor
add
mov
jecxz
(bad)
push
rcl
lahf
test
ins
shl
outs
and
sub
xor
or
jg
mov
aaa
adc
dec
lock
movs
and
cmps
sbb
sbb
xor
adc
dec
push
imul
pop
inc
dec
lds
das
pop
(bad)
js
fs
xor
ins
aad
aas
push
test
in
mov
test
pop
in
andps
dec
outs
hlt
adc
jl
jp
pop
cmc
pop
pop
push
push
lods
xchg
test
gs
test
push
cmps
xchg
adc
inc
mov
adc
nop
mov
and
jo
inc
stos
movs
fbld
xchg
cmps
cdq
xor
pusha
cdq
push
cli
mov
xor
loope
aad
lods
adc
and
xchg
scas
fiadd
(bad)
fcom
in
popf
aad
push
fdivr
into
shl
add
fisttp
stc
je
and
adc
rcr
test
and
cmp
and
pop
pop
cmp
adc
imul
lock
sub
and
adc
sbb
or
adc
push
push
pusha
les
ins
movs
dec
inc
jae
adc
pop
(bad)
pop
inc
jg
dec
adc
push
arpl
inc
aas
push
div
mov
test
adc
push
sysret
out
ins
hlt
dec
mov
(bad)
cmc
and
push
add
push
mul
test
push
xchg
xchg
adc
xchg
and
jo
inc
lods
movs
pushf
and
xchg
cmps
popf
xor
pusha
mov
xor
in
test
mov
(bad)
out
leave
add
xor
lds
into
fs
add
loop
enter
xor
adc
fstp
aaa
test
rcr
in
add
and
jb
adc
or
jg
mov
aaa
pop
movs
pop
lock
movs
or
cmps
xor
or
push
loopne
aad
xor
sbb
jb
popa
les
nop
xor
lds
pop
(bad)
arpl
aam
adc
push
das
aad
aas
push
test
in
mov
test
push
in
cmovp
push
addr16
hlt
arpl
outs
cmc
pop
pop
outs
push
aam
mov
in
push
hlt
gs
test
add
mov
inc
xchg
jne
xchg
jmp
ret
ss
mov
and
jo
inc
sahf
movs
xchg
and
and
mov
rcl
into
inc
fst
retf
and
mov
mov
xor
ret
jbe
imul
fs
xor
mov
out
je
and
adc
fstp
sub
sub
add
and
adc
sbb
and
sub
add
adc
cs
lds
cmp
and
ss
xor
ss
jl
jbe
dec
nop
jae
adc
lds
das
pop
(bad)
pop
inc
fs
sub
dec
push
sub
add
dec
div
ja
in
mov
test
in
vmwrite
push
addr16
push
mov
or
push
lods
xchg
mov
gs
repz
scas
xchg
jne
xchg
mov
movs
mov
and
jo
inc
lods
movs
mov
es
cmps
mov
push
std
mov
xor
jmp
and
mov
stc
push
rol
sti
xor
clc
mov
xlat
xor
add
fisttp
cmc
je
and
adc
les
xor
add
and
rol
sub
or
sub
and
lds
and
push
cmps
xor
sbb
xor
sub
push
nop
ins
movs
adc
lds
das
inc
mov
aam
add
push
arpl
pop
aas
inc
mul
inc
in
mov
test
pop
in
andnps
es
hlt
dec
mov
dec
cmc
inc
pop
push
add
push
mul
test
push
lds
xchg
xchg
xchg
adc
xchg
mov
and
jo
inc
xchg
movs
movs
and
mov
pusha
mov
xor
hlt
xlat
mov
repnz
and
xchg
scas
mov
push
int
mov
push
std
mov
hlt
xlat
xor
add
out
(bad)
cli
mul
shl
adc
repnz
lds
pusha
rcr
in
add
jg
aaa
pop
cmp
adc
es
aaa
sub
and
cmp
addr16
pop
mov
loopne
aad
xor
push
(bad)
outs
push
jg
and
cmp
pusha
das
dec
(bad)
arpl
aam
add
push
das
aad
aas
jno
jl
inc
in
mov
test
sbb
push
addr16
hlt
push
mov
push
cmc
pop
pop
imul
loop
repnz
mov
adc
inc
mov
adc
mov
scas
inc
mov
popf
and
mov
pusha
mov
xor
loopne
loope
in
out
cmc
(bad)
xchg
scas
test
icebp
push
leave
add
push
les
shl
add
loope
lds
out
je
and
jne
lahf
(bad)
xchg
aaa
pop
sub
ins
rcl
in
add
aas
xchg
es
or
sbb
inc
adc
sub
pop
lock
lds
and
cmp
pop
loopne
aad
xor
or
jl
jbe
bound
imul
dec
inc
push
aam
add
push
ins
aad
aas
ins
test
in
mov
test
in
(bad)
out
addr16
hlt
adc
pop
cmc
pop
pop
dec
push
lods
xchg
test
gs
test
mov
inc
test
adc
(bad)
and
jo
inc
xchg
movs
fbld
xchg
cmps
lds
mov
xor
in
lock
lds
lock
ret
inc
ffree
stc
push
retf
add
xor
(bad)
mov
leave
fs
xor
add
ret
(bad)
sahf
data16
repz
and
adc
fstp
xor
add
and
or
adc
sub
add
or
and
cmp
pusha
daa
add
adc
xor
mov
pop
or
les
nop
jbe
inc
pop
lds
das
pop
(bad)
pop
inc
jg
outs
cmp
push
je
pop
aas
ins
not
push
in
mov
test
jno
gs
push
addr16
hlt
sbb
add
dec
pop
push
add
push
mov
test
push
xchg
xchg
cwde
xchg
scas
adc
mov
xchg
and
jo
inc
out
cwde
and
out
xor
mov
test
mov
inc
cld
adc
and
mov
out
int
push
xchg
fisub
(bad)
add
ror
(bad)
je
and
adc
call
sub
add
sbb
aaa
pop
fs
jl
and
pop
adc
imul
xor
inc
movs
push
daa
cs
loopne
aad
xor
push
(bad)
inc
push
popa
les
imul
addr16
je
push
add
push
jp
outs
aas
push
test
in
mov
test
pop
in
lsl
and
hlt
push
mov
inc
cmc
push
pop
jle
adc
mov
test
ret
xchg
adc
inc
mov
adc
mov
cwde
inc
scas
movs
test
es
xchg
pusha
mov
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
leave
add
push
sar
fidiv
fild
out
shl
les
rcl
lahf
(bad)
xchg
and
adc
in
add
sbb
xchg
imul
cmc
add
push
push
aaa
add
and
and
adc
sbb
ds
sbb
outs
push
sub
movs
pop
inc
cmp
adc
outs
(bad)
dec
inc
fs
and
sbb
aad
aas
push
test
in
mov
test
dec
in
cmovs
inc
addr16
dec
mov
or
push
stos
xchg
test
gs
test
push
xchg
xchg
jne
xchg
mov
xchg
(bad)
jmp
and
jo
inc
lods
movs
fbld
xchg
cmps
sahf
xor
pusha
xchg
push
cli
mov
xor
ret
inc
mov
korw
scas
mov
push
in
add
push
cld
mov
leave
fs
xor
gs
data16
xor
adc
fcomp
xor
ins
rol
in
add
daa
xchg
shl
inc
adc
imul
lock
cmp
pop
cmps
xor
loopne
aad
xor
das
(bad)
jbe
ins
les
jnp
outs
inc
jns
adc
pop
mov
aam
xor
arpl
inc
aas
push
imul
dec
in
mov
test
push
in
unpcklps
push
addr16
hlt
adc
push
push
movs
xchg
xchg
push
test
test
scas
xchg
jne
xchg
xchg
adc
xor
inc
test
pushf
and
xchg
cmps
(bad)
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
cld
(bad)
hlt
push
jmp
mov
push
(bad)
mov
into
xlat
xor
add
ror
je
and
adc
fcomp
imul
outs
cmp
xadd
pop
adc
cmp
adc
or
adc
pop
cmps
adc
inc
mov
loopne
aad
xor
sub
ins
push
sub
sub
jo
dec
inc
dec
lds
push
(bad)
jae
pop
aam
cmp
pop
push
das
aad
aas
push
test
in
mov
test
push
in
cvtps2pd
pop
addr16
hlt
pusha
mov
dec
cmc
pop
pop
pushw
test
mov
mov
test
add
mov
inc
mov
adc
test
and
movs
(bad)
and
mov
not
test
and
xlat
scas
jmp
add
push
sar
shl
rol
out
enter
les
jecxz
mov
lahf
rcl
pusha
rol
in
add
push
xchg
pop
cmp
adc
add
movs
cs
lds
and
sbb
push
loopne
aad
xor
add
jl
dec
les
nop
jae
or
das
pop
(bad)
ja
fs
cmp
sbb
aad
aas
dec
test
in
mov
test
in
unpckhps
inc
addr16
push
mov
or
push
mov
test
gs
test
push
mov
inc
mov
cdq
xchg
mov
div
mov
mov
iret
lahf
es
cmps
cdq
xor
pusha
retf
mov
xor
in
mov
rcl
and
mov
stc
push
int
push
idiv
xchg
fs
xor
add
fimul
sti
je
and
adc
mov
pop
and
jnp
push
in
add
and
shl
adc
ds
aaa
xor
lds
and
add
mov
loopne
aad
xor
adc
les
nop
ins
movs
imul
adc
push
jae
jnp
push
cmp
push
aad
aas
pop
test
in
mov
test
adc
bound
pop
out
addr16
hlt
dec
mov
push
cmc
jge
push
add
push
test
add
scas
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
cmps
movs
cdq
and
(bad)
cmps
mov
push
mov
fistp
inc
loop
(bad)
and
xchg
scas
mov
cmc
(bad)
in
mov
loop
xchg
aad
push
(bad)
mov
iret
fs
xor
add
loop
stc
data16
out
je
and
jne
lahf
out
xchg
and
test
shl
add
outs
and
or
add
sbb
jg
mov
aaa
and
and
pop
cmps
sbb
loopne
aad
xor
push
(bad)
adc
les
jbe
ja
jb
pop
das
popa
(bad)
arpl
aam
add
push
je
jg
inc
div
ja
in
mov
test
jge
xor
pop
out
addr16
push
mov
inc
cmc
dec
pop
inc
push
adc
gs
shr
mov
mov
cmps
adc
inc
loop
fcom
mov
xor
pushf
and
and
into
xor
loopne
repnz
fst
in
and
std
scas
mov
push
retf
add
xor
(bad)
mov
leave
fidiv
jmp
gs
leave
data16
out
je
and
adc
fistp
sub
add
and
adc
sbb
sub
aas
mov
aaa
adc
aaa
lock
outs
and
cmp
sbb
and
xor
dec
(bad)
je
imul
dec
inc
jl
dec
das
pop
(bad)
jle
inc
aam
add
push
ins
aad
aas
ins
test
in
mov
test
jle
bound
adc
pop
addr16
hlt
push
mov
imul
rcl
in
gs
mov
fsubrp
mov
mov
jne
xchg
mov
movs
mov
and
jo
inc
scas
movs
mov
cmps
iret
cwde
es
pusha
mov
mov
xor
(bad)
xlat
in
inc
lods
adc
and
jecxz
mov
push
retf
add
xor
in
fidiv
neg
add
fisttp
iret
je
and
adc
fstp
xor
adc
or
push
add
and
pop
rcl
inc
adc
ds
aaa
shld
push
lds
adc
xor
sbb
xor
adc
les
ins
movs
adc
pop
lds
das
pop
(bad)
outs
inc
push
aam
sub
push
arpl
je
pop
test
in
mov
test
js
bound
sbb
hlt
jne
push
xchg
ss
cmc
addr16
push
add
push
mul
test
push
scas
xchg
jne
xchg
mov
test
mov
stos
mov
and
jo
inc
out
shl
cmps
sahf
xor
pusha
xchg
push
lahf
mov
xor
(bad)
test
repnz
fisubr
out
jmp
mov
push
(bad)
mov
into
fs
xor
add
in
cwde
mov
and
jne
lahf
lds
adc
add
and
or
push
cmc
and
sub
adc
push
movs
add
sbb
xor
xor
fs
pop
mov
loopne
aad
xor
push
(bad)
outs
push
ins
les
inc
jb
push
das
dec
(bad)
arpl
aam
add
push
imul
push
ja
in
mov
test
inc
in
nop
push
addr16
hlt
dec
mov
imul
pop
push
add
push
mov
add
fwait
xchg
jne
xchg
jmp
mov
mov
mov
cwde
and
push
cmps
mov
xor
call
adc
and
xchg
scas
mov
push
jecxz
mov
push
clc
mov
iret
fs
xor
add
mov
enter
les
in
mov
lahf
(bad)
xchg
and
jbe
aas
shl
in
add
sbb
xchg
adc
add
xchg
push
jg
mov
aaa
and
and
cmps
adc
sbb
adc
xor
add
jg
(bad)
les
nop
jae
je
aas
lds
das
pop
(bad)
arpl
aam
add
push
ins
aad
aas
je
dec
ja
in
mov
test
jnp
dec
unpcklps
ja
outs
hlt
push
mov
jo
pop
pop
push
add
push
test
test
push
cmps
xchg
jne
xchg
jmp
ss
mov
and
jo
inc
cmps
movs
shl
xchg
cmps
mov
push
xor
push
retf
xlat
leave
inc
ret
and
ret
inc
cmc
(bad)
stc
push
retf
add
xor
hlt
mov
jecxz
fdiv
lds
fisttp
cmc
je
and
adc
in
retf
xchg
sub
xor
jg
adc
xor
jle
and
xchg
aas
xchg
or
adc
sbb
pop
lock
adc
dec
and
fs
add
adc
cmp
daa
xor
adc
les
nop
dec
movs
push
inc
cmp
outs
das
push
(bad)
jl
jg
dec
xor
sub
inc
aas
push
not
addr16
mov
test
jno
gs
push
addr16
hlt
outs
mov
dec
cmc
dec
pop
pushw
xchg
xchg
scas
add
push
test
test
push
mov
inc
mov
adc
mov
sahf
and
jo
inc
mov
pushf
and
nop
cmps
mov
push
mov
fistp
inc
lods
adc
and
fisubr
rcl
mov
push
mov
jmp
xor
out
dec
xor
adc
fstp
aaa
test
add
and
or
adc
pop
adc
push
mov
aaa
adc
add
sbb
xor
and
adc
aaa
aad
xor
xor
push
push
pop
les
dec
movs
dec
inc
pusha
lds
inc
(bad)
arpl
aam
adc
push
push
aad
aas
push
div
push
in
mov
test
gs
in
unpckhps
jno
inc
hlt
push
mov
inc
cmc
pop
pop
dec
push
adc
gs
test
add
mov
inc
xchg
jne
xchg
adc
nop
jo
inc
lods
movs
xchg
and
and
cdq
xor
cld
xlat
hlt
inc
mov
(bad)
(bad)
scas
rol
in
rol
retf
aad
push
pushf
mov
retf
shl
retf
add
out
enter
les
loope
movs
cmc
leave
jne
lahf
(bad)
xchg
or
shl
in
add
daa
xchg
pop
cmp
adc
or
push
lock
or
or
pop
loopne
aad
xor
cmp
je
imul
dec
inc
and
jbe
pop
(bad)
jb
pop
aam
add
jl
inc
aas
dec
not
inc
in
mov
test
dec
in
nop
and
pop
hlt
push
mov
or
jbe
or
lods
xchg
xchg
add
push
mul
test
add
mov
movs
mov
and
jo
inc
call
es
cmps
xor
mov
xor
xchg
xlat
loope
lods
adc
and
(bad)
scas
mov
push
aam
mov
push
(bad)
mov
leave
fs
xor
add
fisttp
fbstp
lock
lock
les
jnp
or
adc
xchg
cmp
adc
outs
mov
aaa
push
movs
adc
add
cmp
cmp
adc
pop
aad
xor
adc
les
nop
jo
dec
inc
jno
adc
pop
(bad)
push
inc
jg
xor
push
mov
push
sub
fs
ins
not
imul
mov
test
push
in
andps
jnp
inc
hlt
adc
add
jae
jae
mov
mov
add
lods
xchg
jne
xchg
test
ss
xchg
and
jo
inc
out
fisub
xchg
cmps
mov
fsub
push
lea
mov
aam
test
mov
loop
mov
push
int
mov
push
idiv
aad
(bad)
xor
add
loop
and
cmc
je
and
adc
rcr
push
test
add
add
push
pop
aas
xchg
jl
sbb
cmp
or
adc
xor
xor
pop
movs
cs
or
or
dec
aad
xor
adc
dec
push
popa
les
movs
dec
inc
cmp
adc
inc
jns
bound
dec
aad
aas
push
idiv
ja
in
mov
test
push
in
pcmpgtb
pop
addr16
outs
mov
push
cmc
pop
pop
jb
mov
push
mov
add
mov
inc
mov
adc
xchg
mov
jmp
iret
cdq
es
pusha
mov
xor
loopne
loope
int
retf
and
xchg
scas
rol
into
push
loop
mov
push
ret
jbe
test
add
aam
leave
lock
je
and
adc
ficomp
sub
add
push
xchg
pop
cmp
adc
cmp
adc
lds
adc
sbb
das
mov
loopne
aad
xor
inc
(bad)
jb
imul
dec
inc
cmp
(bad)
je
arpl
dec
or
push
ins
aad
aas
sub
in
mov
test
pop
in
punpckldq
inc
addr16
hlt
inc
mov
pop
cmc
pop
pop
jge
mov
push
mul
test
add
mov
inc
mov
adc
lods
mov
and
jo
inc
lods
movs
fbld
xchg
cmps
xor
xor
xlat
out
inc
mov
(bad)
(bad)
scas
mov
push
repnz
push
(bad)
mov
leave
fs
rol
ror
ret
je
and
adc
fcomp
or
add
cmp
daa
rcl
sbb
aaa
xchg
pop
jg
mov
aaa
daa
movs
inc
lock
pop
and
sub
push
loopne
aad
xor
sbb
les
ins
movs
push
inc
imul
push
inc
pop
aam
or
push
dec
aad
aas
dec
not
inc
in
mov
test
sbb
jb
push
out
pmuludq
jle
ss
cmc
dec
pop
fs
test
lahf
add
push
cmc
gs
test
push
scas
xchg
xchg
jmp
xchg
mov
and
jo
inc
mov
iret
call
pusha
xchg
push
mov
xor
xlat
test
sti
inc
xchg
scas
mov
push
retf
add
xor
stc
mov
fsub
retf
add
loop
(bad)
data16
out
je
and
jne
lahf
lds
cmp
or
test
and
daa
rcr
cmp
jg
mov
aaa
pop
movs
cmp
xor
movs
jno
and
sub
xor
inc
(bad)
push
push
popa
les
inc
movs
dec
inc
jb
adc
pop
(bad)
outs
inc
cs
or
push
cs
aas
ins
test
in
mov
test
push
in
cmove
pusha
addr16
push
mov
inc
cmc
pop
pop
jle
adc
lea
mov
les
mov
adc
movs
mov
and
jo
inc
stos
movs
cmps
and
mov
pusha
mov
xor
loopne
in
inc
mov
(bad)
xchg
scas
mov
push
int
div
cmp
fs
xor
add
enter
(bad)
out
je
and
adc
fstp
sub
cmp
xor
adc
and
adc
cmp
inc
adc
cmp
movs
sub
and
and
adc
pop
aad
xor
cs
jl
inc
les
nop
jae
pop
inc
cmp
adc
push
(bad)
jg
fs
cmp
push
sub
data16
jbe
dec
ja
in
mov
test
in
pcmpeqw
and
mov
push
cmc
outs
pop
outs
push
lods
xchg
lahf
add
push
hlt
movs
test
push
mov
inc
mov
test
xchg
movs
mov
and
jo
inc
test
cdq
es
cmps
mov
mov
push
xor
push
hlt
xlat
out
inc
std
adc
and
ret
inc
out
icebp
push
jmp
push
cmp
leave
add
ror
fnsave
fist
fcomp
add
add
or
pop
rcl
jg
mov
aaa
xor
pop
lock
or
add
mov
loopne
aad
xor
push
(bad)
dec
push
je
and
jno
or
jl
jae
jnp
inc
and
pop
push
push
aad
aas
push
test
in
mov
test
push
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
gs
js
test
icebp
add
push
cmc
pop
mov
les
mov
adc
xchg
mov
and
jo
inc
mov
iret
mov
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
inc
loopne
cmc
add
xor
cmp
lea
enter
shl
(bad)
out
je
and
adc
hlt
lahf
in
xor
jg
and
jbe
adc
outs
and
or
add
and
imul
xor
pop
movs
pop
dec
sub
add
dec
aad
xor
sbb
pop
push
popa
les
inc
movs
dec
inc
xor
or
push
dec
inc
fs
add
push
das
aad
aas
push
test
in
mov
test
sbb
out
addr16
hlt
push
mov
or
push
pop
imul
xchg
mov
scas
push
cmc
gs
test
add
mov
inc
mov
adc
mov
mov
mov
aam
mov
xchg
pusha
xchg
push
xchg
mov
xor
loopne
repnz
fcom
les
xchg
scas
inc
(bad)
icebp
push
rol
xor
lock
shl
int3
add
in
jecxz
(bad)
(bad)
je
and
adc
out
(bad)
xchg
push
pop
add
add
xor
inc
pop
cs
or
data16
sbb
jg
mov
aaa
and
xor
and
and
pop
loopne
aad
xor
or
or
nop
jae
dec
inc
lds
push
(bad)
jns
fs
and
push
sub
popa
aas
jbe
dec
ja
in
mov
test
(bad)
in
andnps
inc
addr16
hlt
push
mov
or
push
lods
xchg
test
gs
test
push
pushf
xchg
jne
xchg
lods
adc
test
mov
movs
shl
xchg
cmps
test
pusha
ret
mov
xor
loop
out
inc
lods
adc
and
(bad)
scas
fiadd
(bad)
std
push
int3
add
push
(bad)
mov
aam
div
jmp
retf
in
gs
and
lds
les
loop
(bad)
xchg
push
pop
xor
pusha
shl
cmp
jg
push
outs
or
or
adc
cmp
daa
lock
lds
and
and
adc
inc
aad
xor
dec
(bad)
push
push
inc
les
nop
push
lds
das
pop
(bad)
jae
jg
sbb
push
xor
js
push
div
in
mov
test
push
in
cmovno
push
addr16
hlt
jge
jg
and
js
pop
pop
outs
push
xchg
xchg
scas
add
push
mov
test
push
mov
inc
cmps
jne
xchg
mov
mov
jo
inc
xchg
movs
pushf
and
cwde
cmps
fnstenv
pusha
fst
mov
xor
not
test
mov
inc
inc
movs
push
int
mov
push
(bad)
mov
into
fs
xor
add
ror
je
and
adc
fcomp
aaa
test
sar
push
add
and
or
adc
sub
sub
and
adc
and
and
push
loopne
aad
xor
or
push
nop
push
movs
dec
inc
and
push
das
pop
(bad)
jle
js
push
add
push
ins
aad
aas
push
test
in
mov
test
pop
in
lsl
push
addr16
push
mov
push
cmc
pop
pop
inc
push
fist
hlt
mov
mov
nop
xchg
jne
xchg
mov
mov
jo
inc
xchg
movs
mov
es
xchg
mov
xor
jecxz
into
inc
mov
(bad)
cmc
scas
mov
push
leave
add
push
ret
mov
leave
fs
xor
add
int3
(bad)
in
fucom
(bad)
je
and
adc
fstp
sub
add
and
adc
and
xor
pusha
cmc
sbb
xor
jb
adc
adc
and
add
or
pop
aad
xor
push
(bad)
ins
push
imul
dec
inc
cmp
adc
dec
(bad)
ja
fs
cmp
push
push
aad
aas
push
neg
in
mov
test
gs
out
addr16
or
pmaddwd
imul
sti
push
fwait
mov
mov
adc
inc
loope
test
jmp
and
jo
inc
out
fbld
xchg
cmps
cdq
xor
pusha
mov
xor
xchg
xlat
lds
(bad)
and
lahf
scas
in
aad
in
inc
lds
cmp
xor
add
fisttp
fbstp
retf
cmc
ret
jne
lahf
rcl
xor
and
inc
add
and
xchg
sub
push
cmc
inc
adc
ds
aaa
xor
lds
and
cmp
adc
dec
aad
xor
dec
(bad)
push
nop
ins
movs
adc
cmp
push
das
push
(bad)
bound
aam
or
push
arpl
push
aas
push
test
in
mov
test
sbb
bound
pop
out
addr16
dec
mov
or
cs
push
add
push
cmc
gs
push
popf
xchg
mov
dec
and
jo
inc
out
cwde
and
xchg
cmps
lds
pusha
movs
push
div
mov
inc
mov
lds
inc
inc
in
mov
xor
(bad)
mov
fisub
out
add
out
fsub
out
je
and
adc
cli
lahf
lds
sbb
add
jg
adc
cmp
adc
cmp
movs
adc
and
sub
xor
pop
aad
xor
push
(bad)
jl
popa
les
je
dec
inc
jl
or
pop
(bad)
dec
inc
jg
push
push
jne
jl
push
div
push
in
mov
test
push
in
cmovp
push
addr16
hlt
arpl
dec
cmc
pop
pop
outs
push
rcl
in
gs
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
mov
pushf
and
mov
xchg
push
mov
fbstp
inc
lods
adc
and
aad
mov
push
retf
xor
loopne
call
fs
xor
add
out
retf
out
je
and
adc
hlt
lahf
les
adc
and
adc
pop
test
outs
daa
xchg
pop
sbb
or
sbb
pop
adc
push
jne
push
movs
sub
and
sbb
sub
pop
aad
xor
sub
les
dec
movs
dec
inc
dec
lds
pop
(bad)
bound
aam
or
push
ins
aad
aas
jle
jo
dec
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
jge
pop
pop
push
push
mov
stos
gs
mov
push
ret
adc
inc
in
fwait
xchg
mov
ss
mov
and
jo
inc
lods
movs
pushf
and
xchg
cmps
lods
xor
pusha
xchg
push
cli
mov
xor
loop
icebp
inc
lods
adc
and
shr
out
push
repnz
push
lds
leave
fs
xor
add
aad
out
data16
(bad)
aam
out
leave
jne
lahf
les
xor
and
daa
add
cmp
adc
push
inc
adc
adc
sbb
cmp
cmp
and
adc
dec
aad
xor
and
les
ins
movs
dec
inc
pop
lds
das
inc
(bad)
dec
inc
inc
aam
and
pop
push
pop
aad
aas
push
imul
push
in
mov
test
push
in
sysret
out
addr16
hlt
jge
jg
jge
or
pop
pop
pop
push
test
scas
add
push
mov
test
add
scas
xchg
adc
cmps
and
jo
inc
mov
mov
es
cmps
sahf
xor
pusha
stos
push
mov
fistp
inc
repnz
and
aam
mov
push
aad
mov
push
(bad)
mov
xchg
fs
xor
add
loope
(bad)
mul
(bad)
je
and
adc
ficomp
or
add
and
adc
xor
add
jg
mov
aaa
push
movs
pop
lock
xor
dec
and
or
inc
aad
xor
es
ins
push
jbe
pop
nop
push
lds
pop
(bad)
pop
inc
das
aam
add
push
dec
aad
aas
push
test
in
mov
test
push
in
nop
js
push
hlt
push
mov
inc
cmc
jb
inc
push
aam
in
add
push
hlt
gs
add
xchg
jne
xchg
call
mov
mov
mov
cwde
and
mov
pusha
xchg
push
cld
mov
xor
loopne
repnz
fcom
call
inc
xchg
scas
mov
push
icebp
add
push
ret
jbe
not
fs
xor
add
out
pop
je
and
adc
ficomp
sub
and
sub
push
add
cmp
and
adc
xchg
inc
jg
mov
aaa
adc
sub
and
cmp
sbb
sbb
xor
xor
adc
les
jo
ins
inc
cmp
adc
jnp
inc
inc
jb
imul
aad
aas
push
not
dec
in
mov
test
in
vmread
inc
addr16
hlt
dec
mov
or
push
lods
xchg
test
gs
cwde
add
cdq
xchg
jne
xchg
mov
movs
mov
and
jo
inc
lods
movs
mov
es
cmps
call
mov
xor
into
xlat
out
inc
fst
lock
mov
out
out
add
push
cmp
into
add
ror
fnsave
fist
fstp
xor
adc
cmp
syscall
sub
add
rcl
pop
adc
cmp
push
lock
and
push
cmps
xor
pop
mov
loopne
aad
xor
adc
les
nop
xor
dec
das
push
(bad)
pop
inc
jno
ja
dec
mov
push
arpl
inc
aas
push
test
ins
mov
test
pop
in
sysret
out
addr16
ins
mov
push
push
lods
xchg
scas
add
push
cmc
gs
test
push
scas
xchg
adc
inc
mov
adc
xor
inc
out
pushf
and
xchg
cmps
mov
(bad)
pusha
xchg
push
mov
xor
xlat
inc
shl
scas
mov
push
int
call
push
fdivr
shl
add
lods
(bad)
out
je
and
adc
fcomp
aaa
test
add
push
add
and
aaa
rcl
add
mov
aaa
and
lds
pop
movs
and
daa
pop
mov
loopne
aad
xor
adc
push
ins
les
nop
push
movs
dec
inc
jb
jno
cmp
aam
xor
push
(bad)
aad
aas
ins
not
addr16
mov
test
gs
in
andnps
dec
addr16
hlt
push
mov
inc
cmc
pop
pop
dec
push
adc
gs
test
push
pushf
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
lahf
and
and
int3
xor
out
xlat
xlat
inc
sti
adc
and
xchg
scas
mov
push
rol
xor
clc
mov
jmp
in
gs
in
data16
les
xlat
adc
fstp
adc
add
and
adc
sbb
aas
adc
adc
sub
and
and
push
loopne
aad
xor
adc
je
dec
les
nop
outs
movs
js
cmp
push
das
pop
(bad)
pusha
inc
fs
xor
push
ins
aad
aas
outs
test
in
mov
test
gs
in
unpckhps
es
hlt
push
mov
or
cmp
push
push
lods
xchg
mov
test
push
lahf
xchg
adc
ss
mov
and
jo
inc
lods
movs
xchg
xchg
xchg
push
cmps
mov
xor
in
out
inc
xlat
adc
and
mov
stc
push
aad
lds
fidivr
leave
fs
xor
add
in
fisub
out
je
and
adc
repnz
les
jnp
jno
sbb
and
xor
shl
adc
cs
aaa
adc
and
cmp
xor
pop
mov
loopne
aad
xor
aas
(bad)
push
nop
movs
adc
lds
das
pop
(bad)
dec
inc
and
dec
add
push
ins
aad
aas
push
test
in
mov
test
sbb
jbe
pop
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
inc
push
test
scas
add
push
in
gs
mov
shr
xchg
push
lods
xchg
jne
xchg
in
adc
mov
xchg
and
jo
inc
lock
mov
popf
iret
call
pusha
mov
xor
in
mov
mov
lds
inc
inc
out
jmp
hlt
xor
aad
out
jbe
neg
mov
retf
add
in
leave
data16
(bad)
je
and
adc
out
mov
add
or
push
add
and
or
sbb
or
jg
mov
aaa
push
movs
adc
sbb
ins
and
and
dec
loopne
aad
xor
push
(bad)
jno
popa
les
nop
push
movs
dec
inc
jb
push
das
pop
(bad)
arpl
aam
add
push
jp
inc
aas
ins
test
in
mov
test
gs
in
pcmpgtb
outs
addr16
hlt
imul
push
add
push
hlt
gs
test
add
mov
inc
mov
adc
mov
mov
lods
movs
shl
xchg
cmps
xchg
pusha
mov
mov
fistp
inc
sti
adc
and
xchg
scas
cmc
inc
rol
(bad)
push
fadd
stos
xor
ret
jbe
not
shl
mov
(bad)
xlat
je
and
adc
fstp
adc
add
push
xchg
pop
cmp
cmc
sbb
add
cs
adc
adc
or
movs
adc
daa
sbb
aad
xor
add
ins
push
imul
dec
inc
lds
das
mov
aam
add
push
ins
aad
aas
push
imul
ja
in
mov
test
in
unpckhps
jo
ins
hlt
adc
or
push
stos
xchg
lods
add
push
cli
gs
mov
shr
test
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
fwait
es
cmps
mov
mov
push
lods
mov
xor
hlt
xlat
in
inc
lods
adc
and
mov
stc
push
aam
fdiv
fdivr
jmp
lds
fimul
fbstp
les
(bad)
lahf
les
jnp
and
sub
jg
dec
outs
and
and
push
cmc
inc
adc
push
mov
aaa
add
and
cmps
push
daa
add
xor
sub
ins
push
jbe
and
jp
jge
push
(bad)
push
inc
jnp
dec
add
inc
aad
aas
push
div
ja
in
mov
test
push
in
nop
push
addr16
hlt
ins
mov
ja
pop
pop
outs
push
adc
cmps
test
push
scas
xchg
adc
xchg
and
jo
inc
out
les
xchg
cmps
xchg
pusha
xchg
push
mov
fistp
inc
mov
(bad)
xchg
scas
cmc
inc
test
in
vpsrad
mov
cmc
fs
xor
add
mov
in
loop
stc
je
and
adc
aam
out
xchg
and
pop
test
add
sub
adc
gs
pop
adc
cmp
adc
adc
xor
pop
movs
push
dec
and
cmp
xor
adc
les
inc
jb
dec
das
js
arpl
aam
and
pop
push
xor
fs
push
mul
adc
ins
mov
test
push
in
divps
push
addr16
jne
bound
pop
pop
outs
push
xlat
xchg
mov
sti
push
xchg
test
add
mov
inc
stos
jne
xchg
mov
xor
inc
scas
movs
mov
es
pusha
rcl
aam
sahf
fistp
inc
int
in
and
xlat
scas
mov
push
leave
add
xor
lock
loop
shl
retf
add
out
mul
out
je
and
jne
lahf
ficom
or
add
and
imul
cmc
add
jg
mov
aaa
adc
adc
sub
outs
and
sbb
sub
pop
aad
xor
push
(bad)
jl
imul
dec
inc
(bad)
lds
das
pop
(bad)
pop
inc
popa
aam
xor
push
and
ins
aas
jle
dec
ja
in
mov
test
push
bound
sbb
ja
pop
hlt
dec
mov
or
popw
outs
push
mov
push
hlt
gs
out
mov
mov
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
mov
cmps
iret
cdq
mov
mov
div
cmps
push
in
jmp
int
into
and
shr
mov
xor
(bad)
mov
repnz
add
fisttp
test
les
fcomp
das
test
and
or
and
xadd
inc
adc
adc
pop
lock
sbb
and
xor
add
or
pop
aad
xor
add
les
nop
jo
outs
inc
jno
adc
inc
(bad)
pop
inc
jg
dec
add
push
ins
aad
aas
push
mul
push
in
mov
test
gs
unpcklps
addr16
push
mov
inc
cmc
jae
js
test
icebp
add
push
cmc
mov
mov
mov
inc
movs
jne
xchg
mov
nop
(bad)
jmp
nop
mov
and
jo
inc
mov
iret
and
cmps
pushf
xor
pusha
mov
xor
jecxz
rol
and
lahf
scas
cmps
inc
clc
(bad)
out
into
add
push
fdivr
int
out
test
(bad)
in
aad
ret
je
and
adc
ficomp
xor
pusha
rcr
in
add
xchg
pop
cmp
adc
gs
aaa
push
movs
adc
xor
xor
cmp
adc
loopne
aad
xor
push
(bad)
ins
push
dec
les
jo
adc
lds
pop
(bad)
cmova
dec
adc
push
and
dec
aas
sub
inc
ja
in
mov
test
push
in
cmovbe
pop
addr16
hlt
push
mov
add
pop
pop
inc
push
test
stos
add
push
hlt
gs
test
push
mov
inc
mov
adc
lea
mov
xchg
movs
xchg
and
in
xor
mov
xor
loopne
in
sti
adc
inc
xchg
scas
loop
sti
(bad)
in
jmp
retf
aad
push
loop
in
jbe
test
add
fisttp
fidiv
rcl
lahf
test
sub
sub
adc
and
daa
pop
adc
cmc
inc
adc
sub
or
and
add
pop
loopne
aad
xor
sub
dec
push
jno
jl
jae
dec
inc
inc
lds
pop
(bad)
jo
and
dec
sub
imul
inc
aas
push
test
in
mov
test
sysret
out
addr16
push
mov
or
push
lods
xchg
lods
add
push
mul
test
pop
in
stos
xchg
mov
ss
and
jo
inc
mov
lea
popf
cmps
xchg
mov
xor
xchg
xlat
jmp
cmps
adc
and
icebp
scas
call
push
lock
push
(bad)
mov
(bad)
fs
xor
test
les
in
lahf
fist
and
je
push
add
sub
add
adc
imul
outs
and
pop
cmps
cmp
xor
aad
xor
xor
dec
push
inc
les
jae
adc
js
adc
push
(bad)
je
ins
aam
cmp
inc
aas
push
not
inc
in
mov
test
push
in
movq
push
addr16
hlt
ins
mov
push
cmc
pop
pop
outs
push
xlat
xchg
scas
add
push
mov
test
push
scas
xchg
jne
xchg
out
adc
lahf
mov
and
jo
inc
jmp
xchg
and
test
lahf
push
xor
in
inc
ret
and
out
retf
(bad)
out
rol
in
aad
loope
(bad)
mov
cld
xlat
xor
add
ror
les
not
icebp
lahf
aad
and
jo
push
rcr
in
add
and
aaa
rcl
jg
mov
aaa
pop
movs
xor
push
lds
pop
movs
es
and
push
loopne
aad
xor
adc
ins
push
popa
les
inc
jb
gs
pop
(bad)
arpl
aam
add
push
das
aad
aas
pop
test
in
mov
test
inc
in
lsl
push
addr16
hlt
push
mov
outs
cmc
pop
pop
dec
push
mov
mov
mov
test
push
iret
xchg
jne
xchg
mov
ss
xchg
and
jo
inc
xchg
movs
xchg
and
mov
xchg
pusha
xchg
push
mov
fist
inc
mov
(bad)
xchg
scas
call
push
aad
in
out
jecxz
aam
push
mul
shl
lds
loope
in
(bad)
shl
adc
fstp
or
add
and
adc
ds
sbb
cmp
movs
sub
and
push
cmps
sbb
pop
mov
loopne
aad
xor
adc
les
je
pop
inc
cmp
inc
das
jge
ja
js
pop
add
push
xor
inc
aas
push
div
mov
test
pop
in
nop
inc
addr16
push
mov
adc
jb
push
push
adc
stc
add
mov
adc
mov
adc
movs
mov
and
jo
inc
stos
movs
stos
and
xchg
cmps
movs
xor
pusha
xchg
push
lahf
mov
xor
out
in
lods
adc
and
sahf
scas
call
push
leave
add
push
(bad)
mov
(bad)
fs
lds
test
fst
rcr
test
and
cmp
outs
jle
xor
and
imul
cmc
sub
aas
mov
aaa
or
pop
lock
sbb
adc
and
add
adc
pop
aad
xor
sub
les
ins
movs
jae
pop
lds
das
push
(bad)
pop
inc
jg
cmp
inc
aas
sub
inc
ja
in
mov
test
adc
jbe
push
out
addr16
jb
push
xchg
ins
jne
cmc
pop
pop
pop
push
mov
push
xchg
test
push
mov
movs
adc
inc
test
xchg
in
adc
xchg
mov
and
jo
inc
mov
test
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
faddp
cmps
push
mov
mov
push
ret
mov
into
shl
enter
out
gs
enter
out
je
and
adc
(bad)
lahf
icebp
xchg
and
aaa
test
in
add
add
aaa
pop
cmp
adc
add
movs
adc
or
outs
and
and
or
pop
aad
xor
sub
ins
push
push
fs
xor
lds
pop
(bad)
jae
inc
aam
cmp
push
jae
dec
aas
jge
inc
ja
in
mov
test
push
in
unpckhps
push
addr16
hlt
imul
inc
push
test
cmc
mov
cmps
adc
inc
loop
fcom
jmp
cmps
mov
and
jo
inc
mov
xchg
and
in
xchg
pusha
fst
mov
xor
enter
mov
lds
inc
out
in
leave
add
push
ret
jbe
mul
fs
retf
add
out
out
data16
les
jecxz
mov
lahf
call
test
shl
in
add
cmp
ja
sbb
es
cmp
push
lock
movs
add
daa
xor
aad
xor
sub
inc
push
imul
dec
inc
jae
push
das
pop
(bad)
jle
inc
aam
xor
ins
aad
aas
pop
test
in
mov
test
in
punpckldq
inc
addr16
hlt
inc
mov
add
push
pop
outs
push
xchg
sti
gs
test
push
cdq
xchg
test
xchg
ss
mov
and
jo
inc
mov
fbld
cmps
cmps
mov
push
xchg
mov
xor
out
xlat
out
inc
lods
adc
and
xchg
scas
fiadd
(bad)
(bad)
push
mov
lds
(bad)
mov
leave
fs
xor
add
int3
(bad)
lahf
data16
mov
les
fcomp
add
cmp
and
adc
outs
and
and
xor
inc
adc
ds
aaa
or
and
sbb
or
pop
aad
xor
sbb
push
push
xor
and
jno
push
das
push
(bad)
jae
jp
imul
ins
mul
addr16
mov
test
push
in
unpcklps
push
addr16
hlt
ins
mov
dec
cmc
pop
pop
outs
push
rcl
mov
mov
mov
aad
add
xchg
jne
xchg
mov
xor
inc
out
sahf
and
xchg
cmps
movs
xor
pusha
xchg
push
stos
mov
xor
cld
xlat
test
in
imul
loop
enter
aad
loop
fistp
xchg
shl
rol
pop
data16
out
je
and
adc
neg
aaa
test
shl
add
outs
and
or
cmp
xchg
inc
jg
mov
aaa
aaa
movs
adc
sbb
sub
and
or
adc
aaa
xor
push
(bad)
ins
push
inc
les
jb
ja
ins
lds
das
pop
mov
addr16
cmp
push
xor
jl
push
test
in
mov
test
sbb
sub
inc
out
addr16
popa
mov
inc
cmc
pop
pop
dec
push
xchg
hlt
pop
mov
les
mov
adc
mov
mov
mov
mov
popf
cmps
mov
xchg
pusha
xchg
push
mov
fistp
inc
mov
korw
scas
mov
push
leave
add
xor
clc
mov
in
shl
xlat
add
in
out
aad
les
call
in
sti
xchg
push
pop
imul
outs
and
and
adc
xchg
add
aaa
adc
cmp
or
movs
jo
sbb
pop
loopne
aad
xor
dec
(bad)
jo
imul
dec
inc
jg
fs
pop
(bad)
jb
jo
dec
add
push
ins
aad
aas
jle
dec
ja
in
mov
test
gs
pop
addps
and
hlt
adc
push
cmc
pop
pop
outs
push
scas
xchg
mov
loopne
xchg
gs
test
push
mov
inc
mov
adc
mov
mov
jo
inc
xchg
movs
fbld
xchg
cmps
xor
(bad)
push
stos
mov
xor
call
adc
and
xchg
scas
in
ret
(bad)
stc
push
aam
(bad)
xor
sar
shl
lds
fisttp
iret
je
and
jne
lahf
not
arpl
je
adc
outs
and
jno
pop
cmc
inc
adc
adc
pop
lock
xor
sbb
gs
push
mov
loopne
aad
xor
pop
(bad)
gs
dec
les
movs
dec
inc
pop
lds
das
push
(bad)
jl
jno
or
push
arpl
js
push
div
mov
test
adc
dec
mulps
push
addr16
hlt
adc
push
cmc
pop
pop
fs
lods
xchg
test
push
sti
gs
test
push
mov
jne
xchg
jmp
ss
jo
inc
out
pushf
and
xchg
cmps
sahf
xor
pusha
mov
xor
hlt
xlat
in
inc
ficom
retf
lds
inc
cld
(bad)
out
into
add
xor
test
aad
mov
out
jmp
into
gs
xchg
out
je
and
adc
fcomp
aaa
test
jbe
dec
add
add
aaa
pop
ds
je
cmp
push
adc
push
mov
aaa
add
and
or
or
dec
aad
xor
add
ins
push
dec
les
jo
js
pop
lds
ins
(bad)
jae
addr16
add
push
das
aad
aas
push
in
mov
test
inc
in
cvtps2pd
push
addr16
push
mov
or
inc
pop
push
mov
mov
scas
push
hlt
mov
mov
cmps
xchg
jne
xchg
(bad)
adc
mov
cwde
inc
scas
movs
scas
and
out
cmps
mov
xchg
pusha
xchg
push
xchg
mov
xor
loopne
hlt
inc
fcom
in
and
in
scas
mov
push
mov
aad
push
ret
jbe
test
add
aam
leave
data16
and
jne
lahf
ficom
ins
shl
adc
xchg
pop
fs
or
adc
xchg
push
jg
mov
aaa
adc
push
lock
outs
and
cmp
push
daa
add
xor
pop
(bad)
adc
les
nop
ja
cmovne
ja
pusha
aam
add
push
ins
aad
aas
inc
not
dec
in
mov
test
addr16
unpckhps
and
hlt
push
mov
pmaddwd
pop
fs
test
push
sti
gs
push
mov
inc
mov
adc
mov
mov
jo
inc
xchg
movs
fbld
xchg
cmps
mov
pusha
retf
mov
xor
loop
out
inc
mov
korw
scas
fiadd
mov
xor
cmp
xchg
add
jmp
std
repnz
je
and
adc
(bad)
lahf
(bad)
xchg
xor
xor
add
add
jo
pop
cmc
add
cmp
daa
lock
cmp
and
adc
dec
aad
xor
push
(bad)
push
push
jbe
pusha
nop
jnp
adc
xor
jge
push
(bad)
jae
and
add
push
jl
inc
aas
push
mul
push
in
mov
test
push
in
cmovns
push
addr16
hlt
dec
mov
outs
cmc
pop
pop
push
add
push
cmc
gs
out
xchg
push
mov
inc
mov
adc
mov
xchg
inc
xchg
movs
pushf
and
xchg
cmps
xchg
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
xchg
scas
sti
inc
mov
jmp
mov
xchg
fbstp
sti
add
loop
cmc
jmp
(bad)
je
and
adc
cmps
lahf
lds
cmp
and
cmp
cmp
push
outs
and
daa
shl
sub
sub
pop
movs
push
lock
xor
push
movs
push
dec
and
sub
xor
and
fs
popa
les
dec
movs
dec
inc
popa
lds
pop
(bad)
pop
inc
inc
aam
or
push
inc
aad
aas
jge
inc
ja
in
mov
test
gs
in
lsl
jb
pop
hlt
jle
bound
ins
pop
inc
push
mov
nop
add
push
mov
add
mov
inc
mov
adc
xor
inc
mov
xchg
and
and
iret
xor
(bad)
xlat
test
and
xchg
scas
mov
push
leave
add
push
ret
mov
jmp
in
dec
ret
je
and
adc
fcomp
sub
and
add
or
jae
aas
cmc
inc
adc
cmp
movs
sub
and
sbb
adc
pop
aad
xor
sbb
dec
push
ja
cmp
cmp
or
ds
ja
jns
xor
inc
mov
push
pop
aad
aas
push
div
mov
test
pop
in
nop
inc
addr16
hlt
push
mov
adc
and
or
lods
xchg
scas
add
push
mul
test
push
mov
inc
mov
test
lods
movs
mov
and
jo
inc
jmp
iret
cwde
es
cmps
cdq
xor
pusha
les
mov
xor
repz
rol
and
mov
fist
stos
xor
ret
mov
leave
shl
test
fucom
stc
je
and
adc
loop
les
jnp
es
add
jle
xor
es
jb
cmp
push
adc
ds
aaa
and
lds
and
cmps
xor
aaa
mov
loopne
aad
xor
add
les
ins
movs
outs
inc
lds
das
pop
(bad)
jae
jno
dec
and
js
pop
aad
aas
and
pop
ja
in
mov
test
push
in
cvtdq2ps
jnp
inc
hlt
jge
or
jg
push
add
push
mov
add
xchg
xchg
adc
mov
inc
out
pushf
and
mov
sahf
xor
pusha
rcl
cwde
xor
loop
test
mov
inc
inc
mov
xor
(bad)
mov
into
shl
mov
mul
(bad)
je
and
adc
(bad)
lahf
rcl
adc
jbe
push
add
daa
xchg
ds
or
sbb
pop
adc
cmp
adc
sbb
sub
or
pusha
daa
pop
mov
loopne
aad
xor
cmp
ins
push
popa
les
jo
or
lds
das
pop
(bad)
arpl
aam
cmp
push
sub
jl
ins
test
in
mov
test
push
in
pcmpgtb
inc
addr16
hlt
dec
mov
jge
pop
pop
outs
push
test
mov
nop
test
add
mov
inc
xchg
xchg
mov
mov
jo
inc
stos
movs
test
es
sahf
xor
pusha
xchg
push
test
mov
xlat
rol
and
loop
std
inc
mov
movs
xor
ret
jbe
not
shl
rol
dec
bnd
and
adc
fstp
sub
ror
in
add
add
xchg
or
daa
cmc
aas
adc
push
push
aaa
add
aaa
lock
movs
pop
dec
cmp
sbb
aas
mov
loopne
aad
xor
pop
(bad)
ins
push
push
les
nop
jo
js
imul
push
inc
fs
add
push
cs
aas
push
mul
dec
in
mov
test
dec
in
unpckhps
inc
addr16
hlt
je
bound
pop
pop
dec
push
xchg
xchg
test
xchg
mov
adc
inc
mov
adc
movs
mov
and
jo
inc
call
es
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
out
cld
inc
lods
adc
and
mov
out
call
aad
push
(bad)
mov
leave
shl
mov
fucom
cld
je
and
adc
fcomp
aaa
test
shl
in
add
and
push
rcr
or
sub
pop
lock
movs
and
cmps
pop
daa
cmp
aad
xor
adc
les
nop
jbe
outs
inc
jno
adc
inc
(bad)
jae
fs
or
push
dec
aad
aas
push
div
ja
in
mov
test
dec
in
unpcklps
jg
inc
hlt
dec
mov
adc
dec
pop
inc
push
cmps
xchg
lods
add
push
and
repnz
mov
inc
mov
mov
(bad)
jmp
jo
inc
xchg
movs
fbld
sahf
cmps
ret
xor
pusha
mov
xor
not
test
mov
inc
cld
(bad)
fcom
shl
(bad)
mov
shl
lds
loope
les
out
je
and
adc
fcomp
or
add
add
aaa
pop
cmp
jl
or
sbb
and
sub
adc
and
cmp
popa
daa
sbb
xor
push
(bad)
ins
push
les
xor
pop
das
imul
inc
addr16
add
push
imul
jne
ins
in
mov
test
gs
in
cmovo
push
addr16
hlt
sbb
inc
xchg
pusha
jne
cmc
pop
pop
outs
push
int
mov
call
mov
test
adc
inc
loop
fst
mov
and
jo
inc
scas
movs
fisub
movs
cmps
mov
push
mov
fild
inc
mov
lds
inc
cli
(bad)
repz
mov
xor
sar
shl
icebp
add
dec
out
retf
and
adc
fstp
add
add
and
or
jns
inc
adc
xor
movs
ds
outs
and
cmp
sbb
aaa
mov
loopne
aad
xor
inc
(bad)
jl
imul
dec
inc
cmp
adc
dec
(bad)
ja
jns
arpl
arpl
inc
aas
push
div
dec
in
mov
test
in
(bad)
out
addr16
hlt
jle
push
xchg
jle
jae
dec
pop
jns
mov
mul
test
push
xchg
xchg
popf
xchg
in
adc
movs
mov
and
jo
inc
stos
movs
mov
icebp
iret
call
pusha
mov
xor
in
inc
into
and
mov
stc
push
iret
add
xor
(bad)
mov
fsub
lds
mov
retf
out
je
and
adc
aam
in
add
xor
add
and
or
adc
pop
mov
aaa
adc
and
and
adc
add
mov
pop
aaa
(bad)
push
push
sub
movs
addr16
popa
lds
das
gs
ins
inc
and
pop
or
push
jae
pop
aas
and
in
mov
test
addr16
sysret
out
addr16
hlt
ins
mov
dec
cmc
pop
pop
outs
push
mov
test
add
cdq
xchg
jne
xchg
in
adc
mov
mov
mov
and
cmps
xchg
xor
pusha
lds
mov
xor
out
mov
mov
(bad)
xchg
scas
mov
push
int
retf
xor
lock
mov
enter
fsub
(bad)
int
mov
and
adc
neg
pop
test
and
sbb
add
aaa
pop
aas
xchg
jl
gs
sbb
jg
mov
aaa
or
and
sub
pop
loopne
aad
xor
push
(bad)
inc
push
arpl
ja
jb
jp
ins
lds
(bad)
pop
inc
pop
aam
add
push
jae
push
aas
push
imul
dec
in
mov
test
push
in
nop
push
addr16
hlt
data16
or
pop
pop
pop
push
mov
mov
loopne
icebp
mov
out
mov
inc
xchg
jne
xchg
call
ss
mov
and
jo
inc
mov
xchg
es
ret
xor
pusha
nop
push
xchg
mov
xor
loopne
mov
mov
(bad)
imul
ret
push
ret
add
push
ret
jbe
not
fs
xor
add
out
int
fucom
fdiv
test
icebp
lahf
(bad)
xchg
and
sub
add
and
or
adc
cmp
movs
add
adc
movs
jb
cmp
and
xor
xor
adc
jb
outs
les
nop
jo
ja
cmp
or
ds
ja
jg
jge
and
inc
aas
jbe
inc
ja
in
mov
test
in
nop
inc
addr16
hlt
arpl
or
push
mov
push
and
sti
add
mov
inc
xchg
jne
xchg
mov
movs
mov
and
jo
inc
mov
iret
xchg
mov
cdq
xor
pusha
retf
mov
xor
loope
out
inc
lods
adc
and
sahf
scas
jmp
add
xor
(bad)
mov
(bad)
fs
xor
add
in
(bad)
in
mul
fbstp
fcom
aad
les
add
je
pop
add
sbb
cmp
and
shl
or
cmp
movs
adc
cmp
sbb
and
cmp
pop
aad
xor
cmp
les
ins
movs
adc
lds
(bad)
jae
das
aam
or
push
popa
aad
aas
push
not
jb
push
mov
test
sbb
imul
out
addr16
hlt
ins
mov
adc
pop
pop
outs
push
rcl
lods
mov
mov
adc
inc
xchg
jne
xchg
mov
mov
mov
and
jo
inc
xchg
call
pusha
cmps
push
xor
loope
repnz
and
xchg
scas
cmc
inc
add
push
int
shl
loopne
fidiv
test
add
mov
enter
div
std
adc
mov
pop
adc
add
and
daa
rcl
dec
jg
mov
aaa
add
lds
and
adc
mov
loopne
aad
xor
push
(bad)
jg
popa
les
push
lds
pop
(bad)
arpl
aam
sub
pop
push
das
aad
aas
ins
test
in
mov
test
push
in
cmovp
push
addr16
hlt
push
mov
inc
cmc
cmp
pushw
adc
mov
lea
mov
inc
mov
adc
mov
xchg
inc
cmps
movs
mov
test
fsub
mov
lods
xor
pusha
test
xchg
mov
xor
nop
xlat
jmp
and
mov
(bad)
push
in
add
xor
repnz
aam
shl
int
stos
in
gs
clc
data16
shl
adc
fstp
adc
add
sbb
daa
pop
cmp
adc
cmp
movs
push
lock
sub
adc
sbb
aas
mov
loopne
aad
xor
or
or
nop
dec
movs
push
inc
popa
lds
das
pop
(bad)
push
inc
pop
aam
sbb
push
ins
aad
aas
dec
test
in
mov
test
gs
in
lsl
inc
addr16
hlt
push
mov
adc
popw
inc
push
movs
xchg
mov
lods
push
xchg
gs
test
push
mov
inc
mov
adc
mov
lea
movs
mov
es
pusha
xchg
push
mov
mov
push
not
into
inc
lods
adc
and
sahf
scas
fadd
(bad)
stc
push
inc
jmp
vpminub
mov
leave
fs
xor
add
ror
shl
adc
fcomp
test
and
test
or
xchg
add
adc
ds
aaa
add
and
push
cmps
xor
add
aad
xor
dec
(bad)
pop
push
jne
pop
nop
dec
movs
adc
jno
inc
das
pop
(bad)
jnp
jg
push
or
push
cs
aas
idiv
in
mov
test
pop
in
nop
push
addr16
hlt
dec
mov
dec
cmc
and
fs
adc
mov
mov
mov
inc
xchg
jne
xchg
xchg
adc
lahf
mov
and
jo
inc
call
iret
call
pusha
xchg
push
stos
mov
xor
lock
test
mov
out
fild
(bad)
cmps
push
lds
in
fcmovbe
lods
push
ret
jbe
test
add
(bad)
(bad)
out
je
and
adc
fcomp
aaa
test
aaa
in
add
add
aaa
pop
sbb
adc
cmp
and
push
lds
and
or
pop
aad
xor
sbb
ins
push
popa
les
xor
dec
inc
jb
jo
xor
aam
add
push
sub
idiv
in
mov
test
imul
jg
push
hlt
dec
mov
inc
cmc
bound
outs
push
adc
gs
test
add
scas
xchg
jne
xchg
test
mov
mov
movs
xchg
and
and
stos
xor
leave
xlat
hlt
inc
mov
korw
scas
cmc
inc
inc
icebp
push
mov
stos
push
lock
(bad)
shl
lds
in
jmp
and
adc
call
das
test
in
add
push
xchg
pop
add
add
pop
cmc
aaa
adc
push
mov
aaa
adc
and
and
cmp
add
xor
xor
dec
(bad)
jl
imul
js
lds
ins
(bad)
gs
inc
aam
and
pop
push
inc
aad
aas
outs
test
in
mov
test
pop
in
movd
inc
addr16
hlt
dec
mov
jb
pop
pop
push
add
push
mov
add
cdq
xchg
test
mov
xchg
mov
and
jo
inc
lods
movs
shl
xchg
cmps
cdq
xor
pusha
xchg
push
call
push
lock
out
inc
in
hlt
and
mov
mov
xor
les
leave
div
jecxz
stos
in
gs
retf
out
je
and
adc
ficomp
test
and
sbb
or
or
adc
aas
mov
aaa
shld
push
lds
and
push
cmps
pusha
daa
add
pavgb
aad
xor
and
dec
push
xor
daa
nop
jno
jo
jno
adc
push
(bad)
jae
jnp
jo
jl
pop
push
dec
aad
aas
push
test
add
inc
test
ins
in
sysret
out
addr16
push
mov
inc
cmc
inc
pop
push
push
scas
xchg
mov
gs
test
push
cwde
xchg
adc
inc
mov
adc
mov
jo
inc
out
les
and
scas
xor
ret
xlat
int
mov
lds
inc
inc
sti
push
jmp
mov
push
(bad)
mov
(bad)
xlat
xor
add
in
popf
data16
and
adc
fcomp
or
in
add
xor
aas
pop
cmp
adc
imul
or
and
push
loopne
aad
xor
push
(bad)
push
inc
les
nop
jo
push
inc
popa
lds
addr16
pop
inc
fs
add
push
jl
jl
push
div
in
mov
test
push
in
nop
push
addr16
push
mov
push
cmc
jl
inc
push
test
cmc
lods
test
push
mov
inc
lahf
jne
xchg
loop
xchg
jmp
mov
mov
mov
mov
xor
pusha
test
mov
xor
enter
mov
(bad)
nop
scas
mov
push
leave
add
push
(bad)
mov
(bad)
fs
nop
add
out
jmp
(bad)
shl
call
fstp
sub
add
js
daa
pop
es
add
and
sbb
cmp
movs
inc
lock
pop
and
sub
push
loopne
aad
xor
adc
jl
xor
pop
nop
dec
movs
jge
lds
pop
(bad)
jg
jl
dec
add
push
inc
aad
aas
push
not
pop
in
mov
test
in
unpckhps
inc
addr16
push
mov
or
push
lods
xchg
test
gs
test
push
mov
xchg
adc
inc
mov
adc
xchg
mov
and
jo
inc
lods
movs
fisub
out
xor
mov
xor
in
fild
into
and
mov
stc
push
enter
vpavgw
mov
shl
retf
in
dec
fdiv
rcl
lahf
mov
and
add
test
outs
add
or
pop
cmc
sub
jg
mov
aaa
shld
lds
and
and
dec
loopne
aad
xor
or
les
jbe
pop
inc
jno
adc
inc
(bad)
jae
jg
jge
cmp
aad
aas
push
test
push
mov
test
in
mulps
push
addr16
jge
jg
dec
jne
cmc
pop
pop
push
xchg
xchg
scas
add
push
mov
test
push
scas
xchg
adc
inc
mov
adc
lea
mov
test
iret
sahf
es
lahf
xor
pusha
ret
push
mov
fistp
inc
mov
lds
inc
inc
cmps
push
iret
add
push
(bad)
mov
into
shl
xchg
add
enter
hlt
out
je
and
adc
out
lds
and
cmp
push
add
and
aaa
rcl
cmp
mov
aaa
adc
pop
lock
sub
dec
and
push
loopne
aad
xor
push
(bad)
ins
push
imul
dec
inc
jb
or
ins
(bad)
jae
addr16
sub
pop
push
sub
jp
ins
test
in
mov
test
sbb
sub
add
push
addr16
hlt
imul
outs
push
adc
gs
out
pop
mov
inc
mov
adc
mov
jo
inc
mov
iret
cwde
es
xchg
pusha
mov
xor
loopne
out
inc
cld
adc
and
aad
cld
inc
aad
sti
push
rol
xor
loop
in
jbe
mul
shl
retf
add
out
retf
out
je
and
adc
fcomp
sub
shl
add
xchg
pop
or
and
adc
daa
adc
adc
sub
adc
dec
lock
outs
and
cmp
or
adc
pop
loopne
aad
xor
das
(bad)
jl
sub
and
jns
push
das
dec
(bad)
jnp
jl
push
adc
push
sub
pop
aas
push
test
in
mov
test
jb
bound
sbb
pop
addr16
hlt
push
mov
add
and
outs
push
lods
xchg
pop
push
cmc
cmps
test
ret
adc
inc
pushf
jne
xchg
mov
movs
mov
and
jo
inc
mov
iret
xchg
movs
cmps
cdq
xor
pusha
(bad)
push
cli
mov
xor
in
rol
into
and
lahf
scas
loop
clc
(bad)
rcl
mov
push
cmp
retf
add
hlt
pop
data16
and
adc
(bad)
lahf
les
or
and
sub
xchg
pop
daa
xchg
adc
cmp
xchg
pop
jg
mov
aaa
shld
push
lds
and
sbb
adc
es
xor
adc
les
nop
jb
outs
inc
pop
lds
das
pop
(bad)
jnp
jg
jae
fs
push
ins
aad
aas
pop
imul
dec
in
mov
test
addr16
vmwrite
jno
addr16
push
mov
push
cmc
cmp
dec
push
xchg
xchg
mov
adc
mov
mov
iret
xchg
call
ss
mov
and
jo
inc
xchg
movs
pushf
and
xchg
cmps
xchg
xor
pusha
stos
push
mov
fistp
inc
mov
lds
inc
inc
icebp
push
std
add
push
sti
mov
hlt
xlat
xor
add
call
out
je
and
jne
lahf
aad
daa
pop
and
add
cmp
sbb
adc
push
mov
aaa
and
lds
and
pop
cmps
sbb
loopne
aad
xor
push
(bad)
pop
push
popa
les
inc
lds
pop
(bad)
ins
inc
pop
aam
add
push
sub
mul
in
mov
test
push
in
cmovp
push
addr16
hlt
imul
pop
push
mov
push
mov
add
mov
inc
mov
adc
lods
mov
and
jo
inc
mov
sahf
and
nop
cmps
scas
xor
pusha
xchg
push
mov
into
xor
jecxz
fild
into
and
xchg
scas
fadd
(bad)
icebp
push
rol
cld
xor
ret
jbe
test
add
mov
jecxz
(bad)
out
je
and
adc
sti
lahf
lea
pusha
shl
in
add
and
shl
adc
cmp
movs
cs
lds
movs
sbb
daa
xor
xor
inc
(bad)
jl
push
movs
adc
lds
pop
(bad)
pop
inc
je
dec
xor
push
ins
aad
aas
sub
dec
ja
in
mov
test
push
out
addr16
hlt
je
inc
xchg
jp
push
cmc
popw
push
add
push
repz
test
push
mov
inc
loope
test
in
test
mov
movs
fbld
xchg
cmps
xchg
xor
pusha
xchg
push
movs
mov
xor
xchg
xlat
inc
lds
hlt
scas
mov
rol
in
push
repnz
push
(bad)
mov
leave
fs
iret
add
fimul
fbstp
(bad)
adc
fcomp
add
jnp
and
dec
add
and
xchg
adc
add
push
adc
outs
mov
aaa
shld
lds
and
push
cmps
adc
cs
loopne
aad
xor
adc
les
nop
ja
pop
inc
pop
lds
das
outs
(bad)
jle
cmp
mov
push
arpl
dec
aas
push
neg
jno
jl
popa
test
pop
out
addr16
addr16
ss
cmc
outs
pop
push
add
push
mov
test
push
xchg
xchg
jne
xchg
in
adc
jmp
jo
inc
stos
movs
mov
in
sahf
xor
pusha
fst
mov
xor
hlt
xlat
fadd
leave
and
nop
scas
jecxz
repz
stc
push
jmp
push
std
mov
into
shl
rol
(bad)
std
data16
loope
shl
repz
hlt
lahf
in
or
adc
add
xchg
pop
ds
aaa
sar
jg
mov
aaa
or
and
or
mov
loopne
aad
xor
adc
les
inc
movs
dec
inc
aas
lds
pop
mov
popa
aam
add
push
sub
imul
in
mov
test
imul
je
addr16
push
mov
inc
cmc
jae
inc
push
adc
mov
mov
cmps
xchg
adc
inc
xor
loop
pushf
(bad)
jmp
and
jo
inc
mov
xchg
and
and
cdq
xor
(bad)
xlat
test
and
xchg
scas
mov
push
retf
xor
xchg
retf
shl
retf
add
in
retf
out
je
and
adc
out
lahf
lds
shl
adc
and
adc
sbb
sbb
add
movs
adc
and
cmps
ds
and
xor
push
(bad)
jl
imul
dec
inc
jno
adc
pop
(bad)
push
inc
dec
aam
add
push
(bad)
aad
aas
jnp
dec
ja
in
mov
test
pop
in
nop
popa
addr16
hlt
adc
jne
cmc
pop
pop
outs
push
xchg
xchg
test
gs
test
mov
inc
mov
adc
jmp
jo
inc
lods
movs
shl
pushf
cmps
sahf
xor
pusha
mov
mov
fistp
inc
lods
adc
and
mov
stc
push
iret
add
xor
loopne
in
jbe
not
add
out
iret
out
fbstp
rcl
in
les
jnp
and
or
jg
push
outs
jle
xor
daa
xchg
xor
adc
ds
aaa
shld
sbb
or
xor
add
or
push
aad
xor
adc
les
inc
jno
dec
das
push
(bad)
jae
fs
or
push
cs
aas
push
div
in
mov
test
sbb
cvtps2dq
fs
hlt
dec
mov
inc
cmc
daa
pop
push
add
push
hlt
gs
out
lods
push
mov
inc
cmps
jne
xchg
in
adc
xchg
mov
and
jo
inc
test
iret
mov
in
sahf
xor
pusha
mov
xor
rcl
test
mov
inc
stc
mov
xor
lds
int
xlat
xor
add
loope
(bad)
iretw
out
je
and
adc
fcomp
aaa
test
sbb
push
add
and
or
adc
xchg
add
mov
aaa
pop
movs
push
lock
sub
pop
movs
push
dec
add
adc
adc
aaa
xor
push
(bad)
outs
push
popa
les
jae
jle
jb
or
dec
(bad)
arpl
aam
xor
push
dec
aad
aas
push
mul
outs
in
mov
test
push
in
punpcklbw
inc
addr16
dec
mov
inc
cmc
inc
pop
or
xlat
xchg
mov
in
repnz
mov
mov
inc
mov
xchg
loop
lahf
(bad)
mov
and
jo
inc
sahf
movs
mov
test
mov
xor
loopne
rol
retf
and
xchg
scas
cmps
inc
ffree
aam
fld
hlt
xor
(bad)
mov
mov
mov
enter
shl
fdiv
retf
adc
call
and
add
xchg
pop
es
push
sar
adc
pop
mov
aaa
adc
and
cmp
aaa
daa
sbb
pop
loopne
aad
xor
adc
jl
les
nop
jae
dec
inc
lds
das
jns
ja
jp
pop
and
push
push
dec
aad
aas
dec
div
jno
jl
dec
test
in
unpckhps
push
addr16
push
mov
pmaddwd
push
test
push
in
gs
test
push
mov
inc
jmp
inc
and
jo
inc
lods
movs
mov
es
cmps
xor
pusha
adc
(bad)
push
xchg
xlat
xlat
inc
into
adc
and
mov
aam
loop
mov
push
cmc
mov
out
fs
xor
add
aam
into
data16
shl
adc
fcomp
test
and
adc
outs
and
sbb
adc
sbb
sbb
or
cmp
and
adc
pop
aad
xor
or
push
nop
ins
movs
or
das
pop
(bad)
jae
jl
jge
dec
mov
push
dec
aad
aas
push
mul
push
in
mov
test
push
in
cmove
push
addr16
hlt
push
mov
adc
pop
pop
push
add
push
cli
gs
test
push
nop
xchg
jne
xchg
cwde
adc
xchg
mov
test
mov
xchg
mov
mov
fild
inc
repnz
and
xchg
scas
mov
push
int3
add
xor
std
mov
ret
xor
add
loop
in
mov
and
adc
fcomp
aaa
test
es
add
and
jl
sbb
pop
adc
push
mov
aaa
pop
movs
pop
lock
xor
pop
movs
jb
sub
or
adc
jp
add
ins
push
push
push
nop
jo
dec
inc
pop
lds
pop
(bad)
push
inc
addr16
sub
push
cs
aas
push
idiv
in
mov
test
push
in
punpcklwd
ins
addr16
hlt
push
mov
inc
cmc
pop
pop
push
add
push
scas
gs
std
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
iret
stos
and
into
xor
loopne
repz
int
leave
and
loope
jmp
add
xor
les
leave
shl
add
out
jecxz
(bad)
test
cli
adc
fstp
sub
(bad)
rcl
in
add
jge
and
rcr
aas
jg
mov
aaa
xor
and
sub
or
adc
and
adc
inc
push
dec
les
nop
je
dec
inc
jns
adc
pop
mov
fs
xor
push
sub
jns
push
test
in
mov
test
(bad)
in
nop
inc
addr16
hlt
push
mov
add
inc
pop
inc
push
scas
xchg
mov
push
scas
gs
test
push
lods
xchg
jne
xchg
(bad)
adc
mov
jo
inc
mov
fisub
xchg
cmps
test
pusha
xchg
push
sti
mov
xor
(bad)
xlat
mov
cld
inc
xchg
scas
loopne
aad
cld
push
repnz
push
fdivr
leave
fs
xor
gs
retf
out
je
and
adc
fcomp
xor
add
add
or
xor
inc
adc
ds
aaa
das
movs
dec
lock
push
dec
sub
and
xor
mov
pop
aas
(bad)
push
nop
movs
adc
lds
das
push
mov
inc
aam
add
push
arpl
push
aas
dec
neg
push
in
mov
test
imul
arpl
hlt
push
mov
inc
cmc
jg
dec
push
test
lea
push
cmc
gs
scas
add
mov
inc
mov
adc
cmc
mov
and
jo
inc
mov
mov
and
push
div
mov
inc
mov
lds
inc
add
push
int
mov
push
(bad)
mov
retf
fs
xor
add
loope
out
shl
je
and
adc
rcr
test
and
or
outs
arpl
or
adc
and
adc
or
push
lock
xor
add
xor
inc
aad
xor
and
les
pusha
movs
dec
inc
lds
pop
(bad)
ja
jae
bound
sub
not
dec
in
mov
test
in
cmovp
push
addr16
imul
ja
stos
xchg
mov
push
mov
add
mov
jne
xchg
mov
mov
mov
lock
fbld
cdq
cmps
test
pusha
retf
push
pushf
mov
xor
xchg
xlat
inc
lock
xchg
scas
mov
push
int3
add
xor
les
(bad)
shl
retf
in
fimul
ret
je
and
adc
fstp
or
ins
shl
in
add
sub
xchg
and
add
xchg
xor
cmp
movs
sub
and
and
pavgb
sbb
(bad)
push
jl
jb
jo
pop
inc
cmp
adc
inc
(bad)
jae
fs
adc
push
ins
aad
aas
dec
test
in
mov
test
push
in
lsl
pop
addr16
push
mov
dec
cmc
pop
pop
imul
xchg
test
xchg
test
add
mov
movs
mov
and
jo
inc
lods
movs
pushf
and
movs
cmps
xchg
pusha
xchg
push
cli
mov
xor
not
out
inc
lods
adc
and
shr
fcom
mov
push
lds
in
in
xor
add
out
iret
data16
fbstp
les
movs
lahf
les
and
sbb
xor
jg
push
outs
xchg
ror
pop
adc
cmp
or
and
and
or
ds
xor
add
les
dec
movs
adc
inc
lds
pop
mov
outs
aam
add
arpl
dec
aas
pop
neg
dec
in
mov
test
push
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
push
pop
or
scas
xchg
mov
mov
cmc
push
scas
xchg
adc
inc
mov
adc
mov
xchg
and
jo
inc
out
(bad)
cdq
cmps
xchg
xor
pusha
mov
mov
xor
in
mov
lock
and
xchg
scas
mov
push
int
out
popf
aad
push
(bad)
mov
into
shl
fadd
ror
je
and
adc
fcomp
aaa
test
jb
push
add
and
aaa
shl
adc
push
mov
aaa
push
movs
adc
sbb
cmp
and
or
xor
sbb
dec
mov
pop
xor
les
inc
movs
dec
inc
outs
lds
pop
mov
aam
add
push
sub
div
in
mov
test
push
in
lsl
push
addr16
dec
mov
inc
cmc
pop
pop
push
add
push
mov
add
into
xchg
jne
xchg
mov
mov
rol
movs
fisub
and
xchg
xor
call
test
int
mov
icebp
push
inc
mov
push
clc
mov
aam
shl
leave
add
fisttp
shl
adc
fstp
ins
test
shl
in
add
and
adc
adc
inc
adc
pop
mov
aaa
or
and
cmp
sub
sub
and
adc
pusha
push
jne
cmp
cmp
adc
dec
(bad)
ja
gs
add
push
dec
aad
aas
push
div
mov
test
in
punpckldq
inc
addr16
hlt
push
mov
inc
cmc
pop
pop
imul
loopne
icebp
gs
mov
nop
out
stos
push
mov
inc
call
(bad)
jmp
and
jo
inc
mov
iret
cmps
es
cmps
call
mov
xor
lahf
xlat
in
inc
mov
(bad)
mov
scas
push
fld
mov
push
cld
mov
aam
(bad)
xor
add
loope
data16
fdiv
popf
adc
fcomp
xor
jnp
sub
dec
add
and
xchg
or
adc
cs
aaa
add
lds
and
sbb
xor
push
mov
loopne
aad
xor
push
(bad)
dec
push
jbe
cmp
cmp
adc
push
(bad)
jae
push
aam
cmp
(bad)
aad
aas
ins
not
gs
mov
test
sbb
gs
js
inc
hlt
dec
mov
inc
cmc
pop
pop
or
lods
xchg
scas
add
push
xchg
test
push
ret
adc
inc
mov
adc
mov
lea
movs
sahf
and
mov
pusha
xchg
push
loopne
mov
hlt
xlat
test
icebp
inc
fisubr
rcl
(bad)
xor
mov
(bad)
shl
fiadd
fimul
shl
adc
out
(bad)
xchg
cmp
aaa
test
imul
sub
xchg
pop
arpl
adc
push
mov
aaa
adc
and
daa
cmps
aaa
daa
pop
mov
loopne
aad
xor
push
(bad)
outs
push
ja
ja
jae
push
das
cmp
jle
cs
add
push
sub
test
in
mov
test
pop
in
pcmpeqb
push
addr16
jno
bound
pop
pop
imul
xchg
mov
out
mov
mov
fwait
push
mov
inc
mov
adc
mov
mov
movs
lahf
and
and
mov
push
repz
int3
inc
ret
and
std
scas
mov
push
leave
add
push
(bad)
mov
out
shl
leave
add
out
retf
data16
fnstenv
lock
fcomp
sub
and
and
adc
and
sub
aas
cmc
sbb
adc
mov
aaa
sub
and
inc
cmps
sbb
add
xor
adc
jl
dec
les
jo
ins
inc
aas
lds
das
push
mov
fs
or
push
arpl
jns
sub
pop
ja
in
mov
test
in
(bad)
out
outs
hlt
push
mov
or
jae
inc
push
lods
xchg
mov
gs
mov
shr
out
mov
adc
xchg
mov
movs
mov
and
jo
inc
xchg
movs
mov
xchg
test
mov
xor
in
inc
loopne
(bad)
(bad)
ret
inc
repz
in
rol
loope
(bad)
push
hlt
mov
shl
in
add
(bad)
(bad)
out
je
and
adc
fcomp
or
add
adc
xor
and
jl
push
cmc
add
add
movs
cs
cmp
sbb
or
pop
aad
xor
pop
(bad)
pop
push
jbe
aas
nop
movs
cmovne
adc
outs
(bad)
jno
pop
aam
add
jae
inc
aas
pop
div
mov
test
push
in
cmovns
push
addr16
dec
mov
jno
dec
pop
push
add
push
repnz
test
push
add
in
adc
xchg
mov
and
jo
inc
out
mov
popf
iret
movs
es
popf
xor
pusha
mov
xor
retf
inc
mov
lds
inc
add
push
jmp
mov
push
fdivr
into
fs
xor
ror
jecxz
shl
les
fistp
aaa
test
and
test
pop
pusha
xchg
daa
rcr
pop
adc
add
adc
pop
movs
and
sbb
xor
pop
movs
add
and
or
add
or
pop
push
(bad)
inc
push
outs
les
jno
dec
inc
ins
lds
pop
(bad)
jge
fs
xor
push
das
aad
aas
dec
test
in
mov
test
dec
in
lsl
pop
addr16
hlt
push
mov
inc
cmc
jp
outs
push
adc
gs
out
test
into
xchg
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
mov
and
into
xor
(bad)
xlat
hlt
inc
mov
lds
inc
clc
(bad)
iret
push
leave
add
xor
ret
jbe
mul
shl
into
add
aad
retf
out
je
and
adc
jecxz
(bad)
xchg
and
and
ins
shl
in
add
daa
xchg
es
or
adc
movzx
aaa
and
lds
and
cmps
sbb
xor
pop
loopne
aad
xor
cs
pop
push
jne
and
popa
lds
pop
(bad)
push
inc
fs
add
push
das
aad
aas
push
test
push
mov
test
push
in
cmovae
push
addr16
push
mov
inc
cmc
js
push
push
mov
mov
leave
test
push
mov
inc
mov
adc
mov
and
movs
fsub
test
retf
mov
xor
xchg
xlat
out
inc
mov
(bad)
shr
into
push
repnz
push
(bad)
mov
leave
fs
rol
fisttp
loope
xlat
and
adc
fstp
xor
add
xor
pop
pop
cs
or
adc
es
aaa
shld
lds
and
or
and
pop
aad
xor
push
(bad)
jle
jbe
and
jno
pop
das
dec
(bad)
jae
jg
imul
aad
aas
push
not
jne
push
mov
test
push
in
packuswb
push
addr16
hlt
inc
mov
inc
cmc
inc
pop
push
push
mov
push
mul
test
push
ret
adc
inc
mov
adc
mov
jo
inc
out
and
cmps
sahf
xor
pusha
movs
push
mov
fist
ret
and
(bad)
scas
in
inc
clc
(bad)
mov
xor
std
mov
xchg
xlat
xor
add
les
xor
adc
movs
lahf
out
xchg
daa
pop
adc
add
and
pop
sar
adc
push
mov
aaa
or
and
adc
mov
loopne
aad
xor
cmp
outs
push
dec
les
jo
push
inc
lds
pop
(bad)
popa
inc
addr16
add
push
das
aad
aas
jne
inc
ja
in
mov
test
jp
pop
sysret
out
addr16
hlt
push
mov
inc
cmc
inc
pop
jbe
adc
gs
test
add
mov
mov
mov
jne
xchg
call
lea
nop
inc
mov
cwde
and
and
xchg
xor
lock
hlt
inc
mov
(bad)
xchg
scas
mov
push
test
loope
(bad)
mov
(bad)
lds
icebp
add
out
retf
out
je
and
adc
fistp
test
rol
in
add
and
xor
pop
cmc
pop
adc
cmp
and
adc
movs
adc
cmps
sbb
and
xor
push
(bad)
jl
jne
push
nop
jae
dec
inc
jb
ins
das
pop
(bad)
push
inc
addr16
and
sbb
aad
aas
push
div
ja
in
mov
test
jb
bound
add
and
mov
or
push
lods
xchg
mov
mov
movs
push
cdq
xchg
test
mov
(bad)
mov
and
jo
inc
lods
movs
les
xchg
cmps
xchg
pusha
xchg
push
cli
mov
xor
in
out
in
adc
inc
in
mov
push
aam
mov
push
(bad)
mov
leave
fs
loope
stos
in
gs
out
je
and
adc
(bad)
lahf
rcl
shl
add
and
or
adc
or
sbb
and
and
adc
or
cmp
pop
adc
push
push
jbe
ins
nop
push
movs
adc
cmp
adc
push
(bad)
jo
push
aam
add
push
dec
aad
aas
dec
div
mov
test
in
lsl
pop
addr16
hlt
dec
mov
inc
cmc
pop
pop
jo
test
mov
in
push
mov
add
xchg
xchg
mov
push
and
jo
inc
xchg
movs
mov
es
cmps
sahf
xor
pusha
movs
push
lahf
mov
xor
hlt
xlat
repz
out
leave
and
xchg
scas
sti
inc
rol
push
enter
sti
aad
push
fdivr
sahf
fs
xor
add
loop
iret
iretw
out
je
and
adc
mov
pop
add
add
and
or
sbb
cmp
gs
aaa
and
and
sbb
xor
adc
aaa
xor
sub
adc
les
jo
dec
inc
pop
lds
pop
(bad)
jg
pop
aam
adc
das
aad
aas
ins
test
in
mov
test
jge
push
(bad)
out
addr16
arpl
imul
movs
xchg
mov
push
(bad)
gs
test
add
mov
mov
jne
xchg
call
mov
mov
xchg
movs
mov
mov
mov
xor
loopne
mov
fst
retf
and
xchg
scas
mov
push
enter
rcl
push
aam
in
jbe
test
add
ret
(bad)
in
in
cli
je
and
adc
rcr
sub
add
pop
xchg
pop
sbb
adc
cmp
movs
sub
and
inc
cmps
and
sbb
xor
adc
push
ja
cmp
cmp
push
das
dec
(bad)
ja
gs
add
push
dec
aad
aas
push
div
in
mov
test
in
unpckhps
inc
addr16
hlt
je
pop
xchg
inc
jne
cmc
jle
pop
push
lods
xchg
test
gs
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
popf
movs
xchg
and
scas
cmps
mov
push
mov
fistp
inc
(bad)
adc
and
shr
loop
rol
clc
xor
(bad)
mov
leave
fs
leave
add
fisttp
test
ret
cmc
ret
jne
lahf
les
pusha
ror
in
add
jg
and
pop
xchg
sub
adc
sub
pop
lock
lds
and
sbb
xor
add
les
ins
movs
push
inc
pop
lds
pop
(bad)
pop
inc
push
aam
sub
push
jl
sbb
push
test
push
mov
test
push
in
packsswb
jnp
inc
hlt
inc
mov
push
pop
pop
push
add
push
mov
mov
mov
lods
xchg
adc
inc
mov
adc
test
xchg
and
jo
inc
out
fsub
xchg
cmps
mov
push
std
mov
xor
loopne
jmp
and
lock
loope
inc
out
push
int
mov
push
(bad)
mov
nop
fs
xor
add
loop
iret
data16
je
and
jne
lahf
int
sub
test
shl
in
add
sbb
or
adc
and
xor
adc
xor
xor
xor
sbb
sbb
xor
adc
ins
push
popa
les
nop
je
or
lds
das
aas
(bad)
arpl
aam
sbb
push
pop
aad
aas
dec
test
in
mov
test
inc
in
lsl
bound
hlt
push
mov
push
push
stos
xchg
mov
push
xchg
gs
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
scas
movs
and
cmps
mov
push
mov
fild
inc
out
jmp
xchg
lds
inc
out
(bad)
xlat
push
leave
add
xor
(bad)
mov
shl
loope
lock
xlat
(bad)
out
je
and
adc
loopne
fst
(bad)
rcl
in
add
xor
xchg
adc
adc
pop
adc
and
movs
xor
or
outs
and
sbb
sub
pop
aad
xor
sub
inc
push
imul
dec
inc
jb
jbe
xor
ja
fs
sub
sbb
aad
aas
push
div
inc
in
mov
test
push
dec
unpcklps
jo
add
push
mov
or
push
lods
xchg
stos
add
push
repz
out
mov
adc
inc
mov
adc
mov
mov
movs
and
cmps
cdq
xor
pusha
mov
cli
mov
xor
out
mov
movs
adc
and
mov
mov
xor
sar
leave
shl
add
fisttp
fbstp
aad
out
ret
jne
lahf
repnz
xor
sub
add
and
sub
xor
sbb
add
or
or
and
pop
cmps
xor
add
xor
adc
les
nop
sub
lds
dec
(bad)
jae
gs
sub
push
inc
aad
aas
pop
test
in
mov
test
in
cmovge
push
addr16
hlt
jno
jg
and
push
cmc
pop
pop
outs
push
mov
test
add
scas
xchg
jne
xchg
xchg
adc
xor
pushf
and
sahf
cmps
xchg
xor
pusha
xchg
push
mov
(bad)
push
rcl
inc
mov
lds
inc
cli
(bad)
out
int
movs
xor
fdivr
shl
out
jmp
cld
gs
iret
data16
out
je
and
adc
loopne
fst
daa
rcr
in
add
arpl
sbb
adc
or
cmp
movs
pop
lock
sbb
pop
movs
sbb
daa
pop
mov
loopne
aad
xor
dec
(bad)
fs
ins
les
push
je
jb
push
das
xor
aam
add
push
inc
aad
aas
push
mul
ins
in
mov
test
in
lsl
push
addr16
hlt
popa
mov
jbe
and
push
push
fist
hlt
mov
mov
mov
inc
test
mov
(bad)
mov
and
jo
inc
lock
mov
movs
cmps
test
pusha
xchg
push
cmps
mov
xor
loopne
hlt
inc
cli
adc
inc
xchg
scas
mov
push
test
test
ret
jbe
mul
fs
xor
add
in
std
retw
out
je
and
adc
out
(bad)
xchg
and
xor
add
cmp
add
adc
push
add
pop
movs
sub
and
sub
pop
loopne
aad
xor
ds
jl
jl
push
nop
dec
movs
dec
inc
pop
lds
push
mov
fs
sbb
push
ins
aad
aas
outs
test
in
mov
test
gs
in
unpcklps
inc
addr16
hlt
dec
mov
or
pusha
pop
jge
sahf
xchg
mov
gs
test
push
lahf
xchg
jne
xchg
mov
movs
mov
and
jo
inc
lods
movs
mov
xchg
cmps
cdq
xor
pusha
xchg
mov
xor
in
retf
inc
not
leave
and
les
out
aam
stos
xor
les
lds
retf
in
gs
jmp
and
adc
into
lahf
aad
and
xor
xor
adc
test
and
or
adc
es
aaa
pop
movs
and
and
and
sub
pop
aad
xor
adc
inc
push
jbe
and
and
pop
das
and
pop
inc
jnp
cmp
dec
mov
push
imul
aas
push
imul
in
mov
test
in
movq
push
addr16
hlt
jne
jg
cmp
cmc
pop
pop
ins
push
fist
mov
test
push
call
jne
xchg
in
adc
xchg
mov
and
jo
inc
stos
movs
xchg
and
mov
pusha
stos
push
mov
fistp
inc
mov
(bad)
(bad)
scas
fild
(bad)
aam
fld
lds
cld
mov
fisub
test
(bad)
out
je
and
adc
fcomp
or
add
daa
xchg
pop
ds
adc
imul
adc
or
add
xor
xor
pop
movs
ss
sub
or
dec
aad
xor
cmp
inc
push
push
les
jno
dec
inc
jb
adc
jns
bound
aam
add
push
das
aad
aas
test
in
mov
test
imul
push
addr16
hlt
push
mov
inc
cmc
pop
pop
outs
push
test
mul
test
add
mov
inc
popf
jne
xchg
mov
mov
mov
mov
xchg
and
and
push
mov
fistp
inc
int
in
and
xlat
scas
mov
push
retf
add
xor
lds
(bad)
xlat
xor
gs
sahf
data16
cmc
je
and
adc
fstp
add
add
push
xchg
pop
es
sub
add
sbb
cmp
movs
inc
lock
cmp
pop
cmps
cmp
sbb
pop
loopne
aad
xor
adc
inc
push
pop
les
nop
jo
dec
inc
cmp
pop
das
dec
(bad)
je
pusha
aam
and
pop
push
ins
aad
aas
dec
test
in
mov
test
push
bound
addr16
addr16
hlt
imul
cmc
pop
pop
outs
push
xchg
xchg
test
gs
test
push
test
mov
adc
movs
mov
and
jo
inc
mov
fldenv
out
shl
xchg
push
xchg
xchg
xlat
jmp
out
(bad)
and
nop
scas
mov
push
aam
cmps
xor
fdivr
aad
out
lds
mov
xchg
data16
and
adc
call
or
in
add
jl
cmp
daa
xchg
push
rcl
jg
mov
aaa
or
and
cmp
and
cmp
xor
adc
les
ins
movs
or
lds
das
pop
(bad)
jb
inc
aam
or
push
arpl
inc
aas
jne
inc
ja
in
mov
test
sbb
and
inc
hlt
dec
mov
or
push
pop
inc
push
stos
xchg
mov
gs
push
scas
xchg
adc
fbld
movs
fbld
xchg
cmps
sahf
xor
pusha
stos
push
mov
fistp
inc
mov
lds
inc
rol
push
int
xlat
xor
in
mov
retf
xor
add
into
(bad)
fbld
out
je
and
jne
lahf
out
xchg
and
sub
add
xchg
pop
ds
push
rcr
sbb
jg
mov
aaa
or
and
and
push
loopne
aad
xor
xor
fs
dec
les
nop
push
movs
dec
inc
dec
lds
das
pop
(bad)
pop
inc
and
dec
sbb
push
das
aad
aas
imul
ja
in
mov
test
push
in
minps
inc
addr16
push
mov
inc
cmc
and
outs
push
adc
gs
test
add
test
stc
jne
xchg
lods
adc
lods
mov
and
jo
inc
stos
movs
pushf
and
pushf
cmps
xchg
pusha
lahf
push
mov
fistp
inc
sti
adc
and
xchg
scas
mov
push
enter
rcl
push
sti
mov
call
add
ror
into
je
and
adc
fstp
sub
jnp
sub
adc
and
adc
sbb
pop
adc
sbb
aas
lock
movs
add
cmps
sbb
xor
xor
or
pop
push
imul
jo
cmp
adc
outs
(bad)
ja
jl
imul
aad
aas
push
imul
ja
in
mov
test
pop
in
unpckhps
inc
addr16
pop
mov
adc
pop
pop
push
scas
xchg
test
xchg
mov
adc
inc
mov
adc
jmp
jo
inc
lods
movs
fbld
xchg
cmps
nop
xor
pusha
xchg
push
xor
out
inc
mov
lds
inc
rol
rcl
aam
sti
aad
push
lock
leave
push
sti
add
ret
(bad)
xchg
data16
fbstp
cli
adc
loop
les
jnp
and
cmp
jg
sbb
pop
and
adc
outs
mov
aaa
sub
and
add
adc
pop
aad
xor
dec
(bad)
adc
les
nop
jno
adc
jb
push
das
pop
(bad)
push
inc
inc
aam
xor
push
arpl
pop
aas
ins
neg
push
in
mov
test
sbb
sysretw
out
addr16
hlt
push
mov
or
jb
je
fist
movs
gs
xchg
ret
adc
inc
mov
adc
mov
jo
inc
mov
and
test
mov
xor
into
xlat
test
fadd
scas
mov
push
int
mov
push
fdivr
into
test
out
add
lods
(bad)
out
je
and
adc
rcr
xor
adc
sbb
push
add
and
or
adc
sbb
jg
mov
aaa
xor
add
sbb
and
dec
cmps
and
pop
mov
loopne
aad
xor
xor
ins
push
ja
push
nop
jo
or
lds
inc
(bad)
jg
jb
adc
push
outs
aad
aas
sub
inc
ja
in
mov
test
sbb
inc
(bad)
out
addr16
push
mov
jo
pop
pop
pop
push
adc
mov
inc
mov
inc
mov
adc
mov
xchg
inc
mov
shl
nop
cmps
xchg
xor
pusha
stos
push
lahf
mov
xor
mov
retf
adc
and
out
scas
out
repz
movs
push
retf
add
push
sar
(bad)
shl
retf
add
fisttp
(bad)
je
and
jne
lahf
(bad)
xchg
and
adc
add
cmp
push
shl
arpl
add
xor
lds
and
sbb
pop
loopne
aad
xor
or
push
push
imul
jo
cmp
pop
das
jbe
ja
arpl
xor
push
mov
push
jne
add
push
idiv
ja
in
mov
test
in
maxps
inc
addr16
hlt
push
mov
or
push
lods
xchg
mov
mov
push
cdq
xchg
jne
xchg
lods
adc
lods
mov
and
jo
inc
out
xchg
and
mov
scas
xor
pusha
movs
push
popf
mov
xor
in
repnz
lods
adc
and
mov
in
cld
add
push
in
in
jbe
test
add
fisttp
fdiv
popf
adc
repnz
retf
xchg
cs
sub
add
jne
sbb
cmp
adc
imul
lock
and
and
adc
and
mov
pop
cmp
push
nop
ins
movs
jne
jae
dec
das
jge
jae
jg
xor
jge
pop
aas
jp
aas
ja
in
mov
test
fs
sysret
out
addr16
dec
mov
dec
cmc
pop
pop
pop
push
xchg
xchg
stos
add
push
test
mov
mov
mov
movs
adc
inc
xor
mov
ss
mov
and
jo
inc
jmp
pushf
and
and
lea
out
xlat
mov
and
in
mov
push
fld
sti
xor
lds
cld
fs
leave
add
fisttp
(bad)
je
and
adc
mov
pop
das
test
es
add
jne
aaa
pop
cmp
cmc
push
adc
push
mov
aaa
sub
lds
and
or
mov
loopne
aad
xor
push
(bad)
ins
push
jno
sub
jb
or
lds
xor
aam
and
push
ja
inc
aas
jnp
push
ja
in
mov
test
push
in
cmovp
push
addr16
hlt
pop
mov
jb
pop
pop
ins
push
mov
test
mov
mov
lods
xchg
jne
xchg
pushf
adc
mov
mov
movs
frstor
and
push
(bad)
mov
xor
in
hlt
inc
stc
adc
inc
(bad)
scas
sti
inc
add
push
leave
add
xor
pushf
mov
xchg
shl
lds
fimul
les
fst
fstp
sub
add
daa
xchg
es
or
sub
pop
adc
imul
lock
outs
and
cmp
sbb
inc
mov
loopne
aad
xor
or
jne
imul
adc
cmp
dec
das
push
inc
inc
data16
add
push
ins
aad
aas
jle
pop
ja
in
mov
test
pop
in
unpcklps
js
add
push
mov
or
push
lods
xchg
test
loopne
cli
gs
test
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
iret
cwde
es
cmps
test
pusha
xchg
push
in
mov
push
rcl
out
inc
mov
lds
inc
aad
out
jmp
aad
push
(bad)
mov
shl
rol
fisttp
cmc
je
and
adc
sti
lahf
(bad)
xchg
daa
pop
jb
jg
and
adc
and
sbb
cmp
adc
ds
aaa
add
and
adc
mov
loopne
aad
xor
(bad)
push
nop
push
movs
adc
cmp
push
das
push
(bad)
jo
push
aam
add
jae
inc
aas
pop
mul
push
in
mov
test
adc
bound
inc
out
addr16
hlt
adc
je
pop
pop
push
add
push
cmc
gs
test
rol
jne
xchg
out
adc
mov
and
iret
pushf
and
mov
ret
inc
mov
lds
loop
aam
into
add
xor
lds
xchg
mov
enter
loopne
lods
(bad)
out
je
and
adc
(bad)
lahf
in
sub
xor
in
add
cmp
das
pop
ds
adc
addr16
sbb
jg
mov
aaa
sub
and
adc
and
loopne
aad
xor
push
(bad)
pop
push
imul
pop
inc
jb
push
das
jl
arpl
aam
adc
push
sub
jl
push
imul
ja
in
mov
test
inc
in
nop
inc
addr16
hlt
inc
mov
dec
cmc
pop
pop
or
adc
mov
mov
mov
cmps
adc
inc
mov
adc
mov
mov
scas
movs
mov
es
ret
xor
pusha
mov
xor
call
adc
and
icebp
scas
aam
sti
(bad)
cmc
push
test
fist
mov
(bad)
repz
gs
leave
data16
xor
shl
lahf
(bad)
xchg
and
test
add
and
adc
add
cmp
pop
mov
aaa
and
and
cmp
sbb
dec
mov
loopne
aad
xor
push
(bad)
push
push
dec
les
nop
xor
dec
inc
cmp
jle
pop
(bad)
push
inc
fs
add
push
imul
inc
ja
in
mov
test
in
nop
outs
addr16
hlt
push
mov
push
cmc
gs
jg
scas
xchg
jmp
gs
test
add
mov
inc
call
(bad)
call
and
jo
inc
xchg
movs
fbld
xchg
cmps
mov
movs
pusha
xchg
push
test
fistp
inc
mov
lds
inc
add
push
into
add
xor
test
shl
add
fimul
fbstp
loop
out
ret
jne
lahf
les
xor
and
ds
pop
xchg
pop
and
adc
pop
mov
aaa
dec
movs
adc
sbb
sub
pop
cmps
popa
daa
pop
mov
loopne
aad
xor
das
(bad)
pusha
push
jne
inc
nop
pop
movs
adc
inc
lds
das
push
(bad)
outs
inc
push
aam
or
push
arpl
inc
aas
push
neg
push
in
mov
test
sbb
out
addr16
hlt
ins
mov
dec
cmc
jl
dec
push
adc
lea
mov
mov
movs
adc
inc
cmps
jne
xchg
in
adc
(bad)
mov
and
jo
inc
out
test
(bad)
cmps
sahf
xor
pusha
xchg
push
lods
mov
xor
not
retf
inc
mov
lds
inc
inc
icebp
push
mov
xor
fnstsw
jecxz
xlat
xor
add
in
fsub
out
je
and
adc
mov
pop
xor
pusha
shl
in
add
and
or
jge
adc
jg
mov
aaa
pop
movs
dec
lock
lds
and
cmp
add
adc
xor
adc
dec
push
les
jbe
dec
inc
jb
adc
inc
jae
dec
add
push
inc
aad
aas
push
test
in
mov
test
gs
arpl
pop
out
addr16
hlt
push
bound
pop
pop
pop
push
lods
xchg
mov
pushf
push
lea
test
push
nop
xchg
jne
xchg
mov
lea
mov
mov
iret
xchg
mov
xchg
pusha
fwait
push
mov
fistp
inc
sti
adc
and
xchg
scas
cmc
inc
aad
icebp
push
int
clc
xor
ret
jbe
not
add
loope
in
(bad)
les
rcl
lahf
stc
xchg
pop
pop
cmp
popa
shl
adc
arpl
or
adc
sub
movs
cmp
and
sub
pop
loopne
aad
xor
adc
ins
push
imul
dec
inc
and
arpl
daa
(bad)
ja
jno
pop
add
push
(bad)
aad
aas
push
not
in
mov
test
in
cmovs
jo
outs
hlt
adc
or
push
pushf
xchg
pop
push
mul
test
push
mov
mov
jne
xchg
mov
movs
mov
and
jo
inc
stos
movs
popf
and
out
mov
push
mov
fist
inc
out
retf
and
mov
stc
push
fadd
aad
(bad)
test
jbe
test
add
repz
in
cmps
out
je
and
adc
loop
sti
xchg
push
pop
or
add
add
adc
adc
cmp
movs
adc
adc
xor
and
cmp
xor
xor
pop
push
(bad)
ins
push
jbe
pop
nop
ins
movs
adc
push
lds
aas
(bad)
jl
jae
dec
add
arpl
inc
aas
inc
neg
push
in
mov
test
push
in
nop
push
addr16
hlt
jne
jg
cmp
cmc
addr16
imul
in
push
cmc
xchg
sahf
push
xchg
xchg
jne
xchg
test
ss
jo
inc
out
shl
and
push
test
mov
out
test
mov
lock
mov
push
int
stos
xor
clc
mov
loop
xlat
xor
add
jecxz
loop
into
out
je
and
adc
fistp
xor
add
xchg
pop
cmp
adc
push
mov
aaa
and
lds
and
adc
xor
push
(bad)
imul
movs
dec
inc
pop
lds
pop
(bad)
push
inc
addr16
and
push
and
push
aas
jne
inc
ja
in
mov
test
gs
in
(bad)
out
addr16
hlt
dec
mov
js
daa
pop
outs
push
test
mul
test
push
into
xchg
jne
xchg
mov
ss
mov
and
jo
inc
xchg
mov
mov
pusha
mov
xor
jecxz
rol
into
and
sahf
scas
loop
std
(bad)
fcom
std
xor
out
(bad)
jbe
div
fs
add
out
cli
data16
les
cmc
adc
fistp
sub
add
je
es
xor
cmc
sbb
cmp
movs
cs
and
xor
cmps
sbb
pop
mov
loopne
aad
xor
adc
outs
push
imul
pop
inc
and
adc
daa
(bad)
jo
data16
and
push
push
aad
aas
push
mul
jb
push
mov
test
pop
in
pcmpeqd
inc
addr16
hlt
je
inc
xchg
jle
push
cmc
pop
pop
imul
jecxz
xchg
gs
out
mov
mov
mov
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
and
mov
push
xchg
mov
xor
int
out
inc
mov
korw
scas
loopne
jecxz
cmps
push
retf
xor
fdivr
jecxz
lock
fisttp
in
xlat
and
adc
fcomp
or
jnp
je
or
cmp
xor
cmp
adc
xor
add
add
and
and
adc
inc
aad
xor
adc
les
jo
jo
jno
adc
(bad)
(bad)
jae
jnp
pop
xor
arpl
inc
aas
ins
div
adc
popa
mov
test
adc
ins
punpckhwd
popa
addr16
hlt
push
mov
inc
cmc
addr16
pop
push
test
stos
add
push
cmc
xchg
sahf
push
scas
xchg
jne
xchg
mov
xchg
jmp
mov
xchg
and
jo
inc
jmp
pushf
and
xchg
cmps
mov
pusha
xchg
push
mov
mov
inc
mov
(bad)
aam
cmc
inc
ret
(bad)
out
int
div
cmp
shl
mov
mul
stc
je
and
jne
lahf
mov
sar
push
add
and
add
sbb
sbb
jg
mov
aaa
xor
and
sbb
add
dec
aad
xor
push
(bad)
jno
imul
ins
inc
jb
pop
das
pop
(bad)
jae
addr16
xor
push
cs
aas
jge
inc
ja
in
mov
test
jns
push
punpckhbw
push
addr16
hlt
push
mov
adc
inc
pop
outs
push
test
xchg
add
push
mul
test
add
into
xchg
jne
xchg
call
mov
stos
inc
test
(bad)
xchg
cmps
xchg
pusha
cmps
push
test
stos
push
loopne
in
inc
mov
(bad)
xchg
scas
mov
push
retf
xor
into
mov
(bad)
shl
into
add
fimul
(bad)
je
and
adc
fstp
test
jnp
sub
jnp
pop
pop
es
or
xor
sbb
adc
pop
lock
lds
and
cmp
pop
daa
cmp
pop
loopne
aad
xor
adc
pop
push
imul
ja
lds
pop
mov
aam
add
push
inc
aad
aas
outs
imul
jl
push
mov
test
pusha
in
nop
addr16
hlt
inc
mov
outs
cmc
outs
pop
outs
push
test
in
gs
mov
push
mov
sahf
adc
inc
cmps
jne
xchg
mov
movs
mov
and
jo
inc
stos
movs
and
lods
pusha
adc
xchg
xor
out
inc
into
and
mov
stc
push
retf
xor
ret
mov
loope
xor
add
fisttp
fbstp
icebp
adc
out
lahf
mov
or
adc
adc
outs
cmp
daa
ror
inc
adc
ds
aaa
and
lds
and
sub
adc
dec
aad
xor
or
push
nop
pop
movs
adc
inc
lds
fs
push
inc
outs
aam
xor
push
sub
fs
push
not
pop
in
mov
test
push
in
sysret
out
addr16
hlt
dec
mov
dec
cmc
cs
or
adc
gs
out
cmc
push
mov
inc
out
adc
and
mov
stos
movs
and
cmps
sahf
xor
pusha
stos
push
mov
fist
mov
(bad)
mov
movs
push
xlat
add
xor
(bad)
mov
(bad)
xlat
xor
add
loop
retf
out
je
and
adc
neg
xor
add
jp
daa
pop
ds
add
cmp
sbb
jg
mov
aaa
sub
and
sbb
sub
and
or
adc
jle
or
push
push
popa
les
nop
xor
lds
pop
(bad)
jb
jg
push
cmp
push
pop
aad
aas
imul
ins
mov
test
imul
and
hlt
push
mov
adc
and
inc
push
adc
gs
test
add
mov
cmps
adc
inc
mov
fcom
jmp
(bad)
mov
and
jo
inc
mov
fldenv
movs
cmps
mov
nop
pusha
xchg
push
clc
mov
xor
loopne
mov
out
adc
and
std
scas
mov
push
leave
add
push
lds
(bad)
shl
add
out
(bad)
pushf
repz
je
and
adc
fcomp
sub
sub
add
and
xor
adc
add
jae
push
aaa
aaa
movs
sbb
adc
movs
sbb
daa
sbb
push
loopne
aad
xor
adc
jg
xor
jl
arpl
ins
das
pop
(bad)
jle
fs
add
push
ins
aad
aas
outs
test
in
mov
test
gs
unpckhps
dec
addr16
push
mov
or
push
lods
xchg
mov
loope
mul
test
push
mov
inc
popf
jne
xchg
stos
adc
icebp
mov
and
jo
inc
lods
movs
mov
es
cmps
cdq
xor
pusha
ret
mov
xor
loop
retf
adc
inc
xchg
scas
in
jecxz
stc
push
aam
mov
push
(bad)
mov
aam
out
xor
add
fisttp
fbstp
les
rcr
test
and
cmp
adc
es
fs
das
rcl
cmp
jg
mov
aaa
shld
or
cmp
or
adc
adc
cmp
adc
les
nop
imul
jae
js
dec
and
sbb
aad
aas
push
imul
ja
in
mov
test
adc
unpckhpd
jg
inc
hlt
dec
mov
dec
cmc
push
pop
js
test
scas
add
push
mul
test
push
scas
xchg
adc
xchg
and
jo
inc
xchg
movs
xchg
and
cmps
cmps
mov
pusha
mov
xor
hlt
xlat
repnz
les
leave
and
xchg
scas
mov
push
int
mov
push
ret
jbe
not
fs
xor
add
loop
retf
out
je
and
adc
fistp
ja
or
add
jl
daa
pop
xchg
or
sbb
pop
adc
push
mov
aaa
dec
movs
pop
lock
sbb
daa
cmps
sbb
add
xor
xor
ins
push
jo
aas
nop
jo
or
lds
pop
(bad)
arpl
aam
sub
push
cs
aas
push
test
in
mov
test
gs
in
lsl
pop
addr16
hlt
push
mov
inc
cmc
jb
jle
test
mov
add
mov
inc
mov
adc
test
xchg
inc
mov
pushf
and
and
mov
fbstp
inc
lods
adc
and
xchg
scas
fadd
(bad)
loop
test
(bad)
push
(bad)
mov
shl
icebp
add
out
leave
movs
out
je
and
adc
ficomp
sub
add
and
or
add
sbb
movzx
aaa
adc
lds
and
and
pop
loopne
aad
xor
or
jl
dec
les
nop
jo
pop
inc
pusha
lds
mov
data16
sbb
push
ins
aad
aas
outs
test
in
mov
test
jb
gs
inc
addr16
hlt
push
mov
jl
pop
pop
push
add
push
mov
test
add
mov
mov
jne
xchg
jmp
mov
and
jo
inc
stos
movs
stos
and
movs
cmps
mov
push
mov
fbstp
inc
lods
adc
and
jmp
retf
mov
xor
(bad)
mov
les
call
lds
cmc
je
and
adc
(bad)
lahf
leave
xchg
push
pop
xor
sub
add
and
or
adc
adc
adc
and
and
sub
inc
aad
xor
sbb
les
ins
movs
push
inc
pop
lds
das
pop
mov
jg
dec
add
push
arpl
pop
aas
push
neg
fs
mov
test
dec
in
pcmpgtd
es
dec
mov
inc
cmc
pop
pop
inc
push
test
mov
loopne
lock
movs
add
into
xchg
adc
mov
inc
mov
mov
and
push
div
test
xlat
repz
mov
lds
loopne
repnz
into
add
xor
test
loope
shl
add
loop
retf
out
je
and
adc
ret
xchg
or
aaa
test
jo
dec
add
add
aaa
pop
xor
adc
and
adc
pop
movs
inc
lock
xor
add
jns
cmp
xor
push
(bad)
ins
push
pop
les
jo
or
lds
inc
(bad)
dec
inc
inc
aam
add
push
dec
aad
aas
dec
test
in
mov
test
push
out
addr16
hlt
push
mov
pop
cmc
pop
pop
push
add
push
and
out
add
mov
jne
xchg
in
adc
lea
mov
xchg
mov
scas
cmps
xchg
mov
xor
repnz
mov
mov
(bad)
lahf
scas
fild
(bad)
icebp
push
int
clc
xor
lock
hlt
shl
jecxz
(bad)
in
gs
loope
mov
and
jne
lahf
(bad)
xchg
movhps
test
shl
or
xchg
pop
and
adc
cmp
movs
sub
and
add
pop
loopne
aad
xor
ds
jg
push
movs
jns
cmp
adc
push
mov
fs
cmp
imul
push
ja
in
mov
test
inc
in
cvtps2pd
jg
inc
hlt
push
mov
push
cmc
pop
pop
outs
push
mov
push
test
add
mov
inc
mov
adc
icebp
mov
and
jo
inc
lods
movs
mov
xchg
cmps
xchg
pusha
xchg
push
xchg
mov
xor
in
in
inc
aad
into
and
shr
push
mov
xor
(bad)
mov
shl
add
leave
(bad)
in
sti
out
je
and
adc
loop
fist
sbb
add
and
push
ror
pop
adc
sub
sbb
sbb
cmp
pop
cmps
xor
pop
mov
loopne
aad
xor
adc
push
jbe
and
jno
dec
das
aas
(bad)
jae
das
aam
or
push
jno
sbb
push
not
push
in
mov
test
sbb
push
sysret
out
addr16
pop
mov
or
outs
pop
jg
mov
scas
add
push
mov
add
scas
xchg
adc
inc
mov
adc
cmc
mov
and
jo
inc
xchg
pushf
xchg
mov
xor
xlat
xlat
mov
mov
lds
inc
inc
mov
xor
repnz
lahf
xlat
xor
add
retf
data16
loope
shl
les
fcomp
aaa
test
xor
push
add
and
xadd
cmc
or
imul
xor
dec
and
mov
loopne
aad
xor
push
(bad)
fs
imul
dec
inc
jge
jb
pop
(bad)
ins
inc
dec
aam
adc
push
das
aad
aas
push
not
outs
in
mov
test
gs
in
lsl
push
addr16
hlt
dec
mov
imul
rcl
mov
add
xchg
xchg
jne
xchg
test
mov
rol
movs
and
cmps
xchg
xor
pusha
xchg
push
test
test
xlat
repz
rcl
mov
(bad)
(bad)
xchg
scas
out
jecxz
std
push
ret
add
xor
(bad)
mov
(bad)
shl
int3
add
fimul
fbstp
mov
call
sub
ins
rcl
test
jge
daa
pop
daa
xchg
jae
aas
cmc
sbb
cmp
movs
adc
and
cmp
cmp
loopne
aad
xor
xor
push
push
imul
jo
cmp
pop
das
inc
(bad)
ja
js
xor
push
aad
aas
dec
div
mov
test
jnp
bound
adc
hlt
push
mov
or
push
lods
xchg
xchg
add
push
mul
test
add
rol
jne
xchg
jmp
movs
mov
and
jo
inc
jmp
es
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
loop
inc
leave
and
sahf
scas
jecxz
sti
(bad)
stc
push
enter
vpsraw
mov
out
xor
add
fisttp
fbstp
aam
out
int
loop
ficom
shl
add
jg
adc
rcl
add
or
pop
aaa
xor
and
and
mov
loopne
aad
xor
adc
les
ins
movs
dec
inc
jae
adc
pop
(bad)
push
inc
jg
push
add
push
jg
arpl
ins
neg
push
in
mov
test
gs
cmp
mov
or
jnp
js
test
push
hlt
gs
test
push
cmps
xchg
jne
xchg
xchg
adc
repz
and
jo
inc
mov
mov
xchg
cmps
into
xor
pusha
mov
mov
fistp
inc
mov
lds
inc
inc
scas
push
int
mov
push
std
mov
sahf
xlat
xor
add
lods
(bad)
int
repz
je
and
adc
fistp
aaa
test
rcr
in
add
and
or
xor
cmp
jg
mov
aaa
pop
movs
adc
or
or
sbb
or
pop
aad
xor
adc
dec
push
popa
les
nop
arpl
or
jge
arpl
aam
add
push
push
inc
aas
push
div
adc
ins
mov
test
in
movd
push
addr16
hlt
dec
mov
add
jl
jle
lods
xchg
mov
in
in
gs
lods
out
mov
into
xchg
jne
xchg
mov
mov
cwde
inc
mov
cmps
and
out
cmps
xor
pusha
test
stos
mov
xor
call
adc
and
out
scas
(bad)
inc
ret
(bad)
call
mov
push
sar
shl
nop
add
(bad)
(bad)
out
(bad)
fdiv
test
lds
adc
add
and
cmp
es
or
adc
sbb
movs
push
lock
imul
pop
mov
loopne
aad
xor
push
(bad)
ins
push
imul
dec
inc
and
popa
das
pusha
(bad)
pop
inc
push
aam
and
sbb
aad
aas
push
div
in
mov
test
(bad)
in
cmovnp
ja
inc
hlt
inc
mov
adc
and
or
adc
gs
test
push
ret
adc
inc
mov
xchg
mov
mov
jo
inc
lods
movs
fisub
xchg
cmps
cwde
xor
pusha
xchg
push
sti
mov
xor
into
xlat
repz
out
loopne
(bad)
(bad)
call
(bad)
stc
push
aam
movs
xor
pushf
mov
aad
fidiv
xchg
add
jecxz
retf
out
je
and
adc
(bad)
lahf
mov
add
cmp
push
add
and
and
pop
cmc
sub
jg
mov
aaa
shld
pop
movs
and
cmps
xor
add
pop
loopne
aad
xor
adc
les
ins
movs
ins
inc
jno
adc
push
aam
add
push
arpl
gs
push
not
pop
in
mov
test
in
andnps
pop
addr16
hlt
dec
mov
adc
addr16
push
add
push
mul
test
push
cmps
xchg
jne
xchg
call
ss
mov
and
jo
inc
mov
stos
and
popf
cmps
sahf
xor
pusha
mov
xor
cmc
xlat
rol
into
and
nop
scas
lds
(bad)
out
aad
cmc
xor
lds
int3
mov
retf
add
jecxz
ret
data16
mov
std
adc
into
lahf
ficom
adc
sbb
add
outs
and
or
push
cmc
sbb
sub
inc
lock
xor
and
adc
inc
aad
xor
dec
(bad)
pop
push
jb
pop
nop
inc
movs
dec
inc
cmp
inc
das
pop
(bad)
jge
fs
add
push
das
aad
aas
push
test
in
mov
test
pop
in
lsl
es
imul
pop
push
adc
gs
test
push
cmps
xchg
jne
xchg
test
mov
mov
and
jo
inc
mov
xchg
and
and
popf
xor
lock
test
mov
inc
(bad)
push
into
add
xor
pushf
mov
out
fs
xor
add
out
cmc
data16
(bad)
je
and
adc
les
imul
outs
jp
daa
pop
cmp
adc
xor
movs
inc
lock
lds
adc
sbb
adc
xor
ds
jl
jne
cmp
cmp
adc
imul
push
pop
mov
push
imul
gs
in
mov
test
in
nop
inc
addr16
hlt
addr16
jl
push
push
lods
xchg
xchg
add
push
test
mov
mov
test
mov
xchg
jmp
movs
mov
and
jo
inc
lods
movs
shl
mov
xchg
push
lahf
mov
xor
(bad)
in
inc
out
into
and
mov
in
rol
mov
push
(bad)
mov
out
fs
xor
fisttp
fbstp
icebp
adc
(bad)
lahf
(bad)
xchg
xor
adc
jnp
and
adc
cmp
xor
cmp
adc
ins
mov
aaa
sbb
pop
lock
cmp
and
xor
pop
aad
xor
adc
les
nop
jb
adc
jno
pop
das
jle
jg
addr16
sbb
push
arpl
dec
aas
pop
not
(bad)
in
mov
test
pop
in
(bad)
out
addr16
hlt
ins
mov
pop
cmc
push
pop
push
add
push
lea
test
add
scas
xchg
jne
xchg
test
xchg
jmp
and
jo
inc
mov
iret
mov
xor
pusha
xchg
push
div
mov
inc
mov
lds
inc
ffree
out
int3
add
xor
loope
shl
test
add
jecxz
hlt
data16
and
adc
neg
sub
pusha
rcr
in
add
and
xchg
xor
or
push
adc
push
mov
aaa
adc
add
add
push
and
push
cmps
(bad)
pop
mov
loopne
aad
xor
push
(bad)
ins
push
push
les
jb
pop
inc
popa
lds
arpl
jae
(bad)
aam
add
push
pop
aad
aas
push
idiv
push
in
mov
test
gs
in
(bad)
out
addr16
hlt
push
mov
or
jo
inc
push
test
hlt
gs
test
add
mov
inc
mov
adc
test
and
iret
ret
es
mov
push
mov
fistp
inc
int
enter
repz
std
scas
mov
push
leave
add
xor
(bad)
mov
leave
lea
retf
add
aad
leave
data16
lds
rcl
lahf
retf
xchg
sub
sub
jnp
xor
or
or
adc
sbb
pop
adc
or
sub
sub
daa
and
and
adc
inc
aad
xor
adc
inc
push
inc
les
jo
pop
inc
cmp
adc
inc
(bad)
pop
inc
fs
add
push
and
pop
aas
outs
test
in
mov
test
in
unpcklps
push
addr16
popa
mov
add
and
inc
push
lods
xchg
test
cmps
test
push
cdq
xchg
jne
xchg
jmp
ss
mov
and
jo
inc
out
pushf
and
xchg
cmps
scas
xor
pusha
retf
mov
xor
rcl
iret
inc
not
into
and
mov
stc
push
int
fnsave
in
in
jbe
imul
mov
repz
test
fcom
ret
xchg
add
xor
jnp
cmp
dec
add
and
adc
and
inc
adc
imul
lock
daa
and
daa
cmps
and
push
mov
loopne
aad
xor
dec
(bad)
push
push
jbe
arpl
dec
lds
push
(bad)
addr16
inc
aam
add
push
arpl
inc
aas
push
in
mov
test
popa
in
lsl
and
hlt
dec
mov
inc
cmc
pop
pop
dec
push
test
mov
cmps
push
cmc
gs
add
ret
adc
inc
lahf
jne
xchg
in
adc
mov
mov
nop
movs
xchg
and
mov
pusha
sahf
push
mov
fild
mov
(bad)
loopne
mov
push
mov
aad
push
idiv
int3
xlat
xor
add
lods
(bad)
out
je
and
adc
fistp
and
add
xor
sbb
rcl
pop
adc
add
movs
adc
cmp
xor
pop
movs
xor
daa
cmps
sbb
loopne
aad
xor
adc
inc
push
inc
les
nop
xor
lds
dec
(bad)
arpl
aam
cmp
pop
push
ins
aad
aas
push
neg
in
mov
test
push
in
nop
outs
addr16
hlt
push
mov
dec
cmc
je
outs
push
mov
push
mov
add
xchg
xchg
jne
xchg
mov
movs
(bad)
jmp
movs
mov
and
jo
inc
mov
xchg
and
in
xchg
pusha
movs
push
mov
fistp
inc
mov
(bad)
mov
ret
add
xor
fdivr
shl
retf
add
out
retf
out
je
and
adc
rcr
xor
add
and
xor
sbb
pop
adc
pop
mov
aaa
adc
cmp
adc
movs
and
cmps
sbb
pop
mov
loopne
aad
xor
adc
dec
push
ja
aas
nop
pop
movs
jb
dec
lds
pop
(bad)
ja
jp
add
push
ins
aad
aas
push
imul
je
push
mov
test
pop
in
cmove
ja
pop
hlt
push
mov
dec
cmc
push
pop
push
push
lods
xchg
mov
pushf
push
mul
test
push
cmps
xchg
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
fisub
xchg
cmps
scas
xor
pusha
xchg
push
(bad)
mov
xor
retf
xlat
aad
lods
adc
and
mov
out
fadd
mov
push
(bad)
mov
leave
fs
lds
fimul
fdiv
popf
adc
loop
les
and
and
push
add
and
push
shl
jg
mov
aaa
or
and
and
pop
loopne
aad
xor
dec
(bad)
push
nop
ins
movs
push
inc
jns
adc
pop
(bad)
push
inc
jg
dec
sbb
push
sub
add
push
not
inc
in
mov
test
jno
unpcklpd
push
addr16
hlt
dec
mov
dec
cmc
dec
pop
inc
push
stos
xchg
mov
push
cmc
gs
mov
int3
out
lods
push
scas
xchg
adc
sahf
and
jo
inc
mov
iret
ret
es
cmps
sahf
xor
pusha
mov
xor
hlt
xlat
test
mov
(bad)
out
aam
cli
xor
icebp
mov
jmp
in
gs
cmc
mul
(bad)
je
and
adc
repnz
call
pusha
rcr
in
add
and
or
adc
xchg
add
mov
aaa
pop
movs
push
lock
sub
cmp
adc
aas
aad
xor
cmp
popa
push
dec
les
push
movs
pop
inc
jb
jo
fs
arpl
aam
add
push
push
aad
aas
dec
imul
mov
test
outs
in
andps
inc
addr16
hlt
inc
mov
pop
cmc
das
pop
inc
push
test
mov
push
hlt
gs
test
push
mov
inc
mov
adc
mov
cmps
and
jo
inc
lods
movs
xchg
and
and
mov
push
repz
hlt
inc
movs
adc
inc
xchg
scas
mov
push
loope
fdiv
cmp
fs
loope
out
in
test
je
and
adc
movs
lahf
lds
ins
rcl
test
cmp
and
adc
cmp
outs
xchg
pop
jg
mov
aaa
adc
cs
lds
pop
cmps
sbb
add
xor
pop
(bad)
inc
push
dec
les
cmp
jbe
push
(bad)
ins
inc
push
aam
and
jge
push
test
in
mov
test
pop
in
punpckhdq
push
addr16
hlt
adc
ins
cmc
jae
outs
push
xlat
xchg
test
gs
test
push
mov
inc
stos
jne
xchg
mov
movs
mov
and
jo
inc
jmp
iret
sahf
es
pusha
mov
mov
lods
xor
in
xlat
out
inc
mov
lds
inc
rol
push
retf
xor
xchg
shl
add
fisttp
cmc
je
and
adc
(bad)
lahf
lea
ins
shl
pop
outs
and
sub
adc
and
or
cmp
and
and
adc
dec
aad
xor
xor
push
nop
pop
movs
or
jno
or
aas
(bad)
ja
jg
dec
adc
push
arpl
arpl
push
not
adc
sbb
(bad)
in
punpcklbw
push
addr16
xchg
push
jne
cmc
push
pop
inc
push
test
mov
in
push
mov
test
add
cmps
xchg
adc
and
mov
es
xchg
xor
pusha
xchg
push
(bad)
mov
xor
cld
xlat
test
out
xchg
scas
retf
inc
out
(bad)
movs
push
in
add
push
std
mov
cld
fs
xor
add
ror
(bad)
je
and
adc
cmc
lahf
lds
aaa
rcr
in
add
sub
daa
shr
cs
add
movs
pop
lock
xor
add
es
cmp
adc
loopne
aad
xor
push
(bad)
ins
push
ins
les
jo
pop
inc
jl
or
imul
dec
sbb
push
and
jle
jge
inc
ja
in
mov
test
push
in
divps
jg
push
hlt
dec
mov
inc
cmc
dec
pop
outs
push
fist
(bad)
mov
mov
adc
inc
xchg
jne
xchg
xchg
adc
mov
mov
jmp
xchg
and
and
into
xor
repz
test
and
xchg
scas
hlt
inc
ffree
icebp
push
fiadd
fidiv
(bad)
mov
jmp
in
fisttp
shl
adc
call
push
test
shl
in
add
or
xor
sbb
pop
adc
aaa
mov
aaa
adc
adc
or
movs
das
dec
cmp
or
sbb
pop
loopne
aad
xor
ds
jl
ins
les
nop
dec
movs
dec
inc
dec
lds
pop
(bad)
pop
inc
push
aam
add
push
ins
aad
aas
das
test
in
mov
test
js
push
cmovs
inc
addr16
hlt
push
mov
dec
cmc
pop
pop
push
add
push
mul
test
push
mov
inc
mov
adc
mov
mov
mov
and
aam
movs
push
call
push
lahf
xlat
out
inc
lods
adc
and
xchg
scas
aad
aad
stc
push
into
add
push
(bad)
mov
shl
add
fisttp
fbstp
les
fcomp
and
shl
in
add
sub
xchg
imul
cmc
pop
adc
push
mov
aaa
and
lds
and
and
xor
pop
aad
xor
or
push
push
inc
les
aaa
movs
dec
inc
pop
lds
push
(bad)
pusha
inc
jg
dec
add
push
dec
aad
aas
dec
mul
push
in
mov
test
push
in
sysret
out
addr16
mov
jbe
addr16
or
adc
gs
mov
shr
cmc
push
scas
xchg
jne
xchg
mov
stos
mov
and
jo
inc
mov
iret
ret
es
cmps
into
xor
pusha
rcl
ret
xor
repnz
repnz
repnz
and
xchg
scas
hlt
inc
in
(bad)
out
into
add
push
test
call
add
loop
enter
(bad)
je
and
jne
lahf
out
xchg
and
test
add
cmp
aaa
pop
pop
xchg
or
adc
aas
mov
aaa
daa
movs
adc
adc
imul
cmps
adc
pop
mov
loopne
aad
xor
push
(bad)
ins
push
aaa
les
nop
dec
movs
pop
inc
push
lds
pop
mov
push
aam
or
push
das
aad
aas
dec
test
in
mov
test
adc
dec
lsl
dec
addr16
hlt
pop
mov
push
cmc
addr16
inc
push
fist
mov
mov
mov
cmps
xchg
fst
jmp
jo
inc
out
movs
xchg
and
and
mov
pushf
fistp
inc
repz
and
std
scas
mov
push
rol
xor
pushf
mov
shl
retf
in
gs
into
shl
les
loope
mov
lahf
mov
aas
shl
in
add
and
or
adc
sub
pop
lock
outs
and
xor
sbb
pop
mov
loopne
aad
xor
sbb
dec
push
ja
aas
nop
xor
adc
daa
(bad)
jg
fs
cmp
push
ins
aad
aas
push
div
(bad)
in
mov
test
pop
in
packsswb
inc
addr16
hlt
pop
mov
or
outs
pop
outs
push
adc
gs
test
push
mov
inc
movs
jne
xchg
mov
mov
test
jo
inc
mov
mov
es
mov
push
lods
mov
xor
(bad)
loope
fist
sti
and
mov
stc
push
leave
add
xor
(bad)
mov
leave
fs
xor
add
leave
(bad)
out
je
and
adc
fstp
xor
add
xchg
shl
inc
adc
ds
aaa
xor
and
and
mov
loopne
aad
xor
sub
push
nop
ins
movs
adc
aas
lds
das
push
mov
aam
adc
push
arpl
pop
aas
ins
not
adc
ja
pop
test
in
lsl
pop
addr16
hlt
push
mov
inc
cmc
pop
pop
jno
mov
push
nop
test
test
cmps
xchg
adc
mov
lods
jo
inc
lods
movs
test
cdq
cmps
sahf
xor
pusha
xchg
push
mov
fist
cmps
adc
and
xchg
scas
hlt
inc
loope
out
rol
cmps
xor
fnstsw
cld
fs
xor
add
jmp
je
and
adc
fistp
and
add
xor
xor
sbb
adc
ds
aaa
pop
movs
sub
and
and
push
loopne
aad
xor
adc
les
pusha
movs
dec
inc
lds
jl
push
inc
arpl
bound
push
aad
aas
push
div
push
in
mov
test
push
in
punpckhdq
pop
addr16
imul
push
add
push
mul
test
add
mov
inc
mov
adc
pushf
mov
and
jo
inc
mov
fisub
xchg
cmps
xchg
pusha
xchg
mov
xor
in
hlt
inc
mov
(bad)
xchg
scas
mov
push
ret
add
(bad)
mov
xchg
fdiv
lds
fisttp
les
fist
(bad)
lahf
les
ins
shl
in
add
and
adc
jge
add
adc
sub
and
cmp
sbb
xor
aad
xor
ss
je
imul
dec
inc
jb
inc
das
pop
(bad)
inc
pop
aam
and
push
and
outs
aas
push
test
in
mov
test
in
cmova
ja
pop
hlt
pop
mov
pmaddwd
push
mov
push
mul
test
push
mov
inc
mov
mov
mov
ss
mov
and
jo
inc
mov
fsub
xchg
cmps
mov
push
pushf
mov
xor
into
xlat
out
inc
movs
adc
and
loop
mov
push
repnz
push
hlt
mov
int
in
lds
lock
out
je
and
adc
fstp
xor
jnp
daa
in
add
and
or
adc
ds
aaa
xor
and
and
dec
loopne
aad
xor
sbb
dec
push
inc
les
nop
imul
inc
inc
jl
ins
and
dec
push
das
aad
aas
push
neg
push
in
mov
test
inc
in
sysret
out
addr16
hlt
push
mov
inc
cmc
pop
pop
pop
push
test
mov
gs
test
push
lods
xchg
lahf
xchg
in
adc
xchg
mov
and
jo
inc
jmp
pushf
and
xchg
cmps
cdq
xor
pusha
mov
xor
hlt
xlat
rol
leave
and
lock
mov
push
int
mov
push
(bad)
mov
into
fs
test
(bad)
out
je
and
adc
fstp
aaa
test
add
and
or
sbb
inc
adc
sbb
and
push
lds
movs
push
dec
cmp
pop
loopne
aad
xor
push
(bad)
ins
push
popa
les
dec
movs
dec
inc
pusha
lds
pop
(bad)
push
inc
addr16
xor
push
inc
aad
aas
push
test
push
mov
test
gs
gs
inc
addr16
hlt
dec
mov
pop
cmc
pop
pop
outs
push
xchg
xchg
inc
push
mul
test
add
mov
inc
mov
adc
scas
mov
and
jo
inc
cwde
movs
xchg
and
and
mov
cmps
fistp
inc
mov
(bad)
xchg
scas
mov
push
rol
xor
in
(bad)
jbe
test
add
out
std
data16
out
je
and
adc
(bad)
lahf
aam
dec
pop
or
add
or
rol
and
cmp
movs
sub
and
or
sub
inc
aad
xor
ds
jg
push
les
nop
inc
movs
pop
inc
and
dec
das
pop
(bad)
ja
push
aam
cmp
pop
aas
outs
test
in
mov
test
push
in
nop
pop
addr16
hlt
push
mov
or
jbe
jg
lods
xchg
xchg
add
push
mul
test
push
mov
jne
xchg
loop
mov
mov
and
jo
inc
xchg
movs
test
xchg
cmps
mov
push
mov
fisttp
inc
lods
adc
and
xchg
scas
mov
push
stos
add
xor
(bad)
mov
out
fs
aad
stos
in
gs
and
shl
les
fcomp
xor
shr
pop
outs
sbb
sub
pop
cmc
adc
jg
mov
aaa
shld
push
movs
jg
add
push
loopne
aad
xor
dec
(bad)
push
nop
inc
movs
adc
aas
lds
jp
arpl
aam
and
pop
push
push
aad
aas
push
test
in
mov
test
gs
in
maxps
push
addr16
hlt
dec
mov
or
jae
push
add
push
cmc
gs
out
scas
push
xchg
xchg
adc
movs
and
jo
inc
out
fbld
xchg
cmps
lods
xor
pusha
mov
xor
hlt
xlat
lock
int3
adc
xchg
scas
mov
push
out
add
push
fistp
hlt
xchg
enter
and
enter
shl
enter
nop
jne
lahf
out
xchg
daa
pop
or
add
xchg
pop
ds
or
imul
adc
push
mov
aaa
aas
movs
adc
cmp
outs
and
sub
add
push
aad
xor
adc
adc
les
nop
push
movs
push
inc
push
dec
das
cmp
aam
or
push
das
aad
aas
test
in
mov
test
inc
in
lsl
push
addr16
hlt
push
mov
outs
cmc
pop
pop
or
add
push
xchg
mov
mov
xchg
xchg
jne
xchg
hlt
adc
mov
mov
scas
movs
mov
es
cmps
mov
push
movs
mov
xor
xchg
xlat
hlt
inc
rcl
(bad)
xchg
scas
mov
push
leave
add
xor
cmp
fild
int3
(bad)
out
je
and
jne
lahf
sti
xchg
and
sub
ins
sar
in
add
and
cmp
and
pop
adc
sub
push
aaa
adc
and
and
cmp
xor
inc
mov
loopne
aad
xor
or
jg
jo
jb
jae
pop
inc
lds
push
aam
add
push
jle
inc
aas
push
test
in
mov
test
in
punpckhdq
inc
addr16
xchg
and
cmc
pop
pop
push
add
push
cwde
gs
test
push
cwde
xchg
jne
xchg
mov
cmp
movs
mov
and
jo
inc
lods
movs
shl
loopne
popf
xor
pusha
popf
push
mov
fist
int
out
mov
rol
scas
retf
(bad)
repz
int
in
aad
lods
push
ret
mov
xchg
shl
add
test
les
rcr
or
add
and
daa
rcr
inc
adc
cmp
movs
adc
sbb
or
and
add
daa
aad
xor
add
les
nop
ins
movs
ins
inc
jns
adc
pop
(bad)
jg
jno
cmp
push
dec
aad
aas
push
idiv
ja
in
mov
test
push
in
nop
push
addr16
hlt
jne
jg
ss
cmc
pop
pop
outs
push
rcl
call
out
mov
lods
xchg
jne
xchg
mov
push
add
shl
nop
cmps
mov
fsub
push
mov
lods
push
(bad)
test
mov
inc
icebp
(bad)
loope
scas
add
xor
(bad)
mov
(bad)
xchg
rol
(bad)
out
je
and
adc
fcomp
sub
in
add
and
aaa
rcl
and
sub
add
mov
aaa
pop
movs
and
push
lds
pop
cmps
sbb
loopne
aad
xor
adc
jno
popa
les
inc
jb
dec
das
pop
(bad)
arpl
aam
adc
push
dec
aad
aas
push
test
in
mov
test
gs
in
unpckhps
push
addr16
hlt
arpl
or
pop
pop
push
add
push
jmp
add
xchg
mov
adc
mov
mov
mov
movs
and
cdq
cmps
(bad)
xor
pusha
fst
mov
xor
jecxz
aam
mov
(bad)
xchg
scas
mov
push
ret
xor
lock
(bad)
test
rol
out
leave
mul
loop
retf
and
adc
(bad)
lahf
(bad)
xchg
ss
sub
add
jge
daa
pop
es
adc
adc
sbb
cmp
movs
sub
and
cmps
and
sbb
adc
pop
aad
xor
adc
jg
jne
cmp
cmp
adc
inc
(bad)
push
inc
fs
add
push
push
aad
aas
push
test
push
mov
test
pop
in
divps
and
pop
hlt
pop
mov
or
pop
pop
outs
push
lods
xchg
mov
mov
mov
adc
inc
mov
adc
icebp
mov
and
jo
inc
lods
movs
cmps
and
and
push
mov
fbstp
inc
mov
(bad)
shr
mov
xor
pushf
mov
xchg
fs
xor
add
dec
fdiv
les
fcomp
add
jnp
and
cmp
daa
xchg
cmp
adc
cmp
inc
lock
cmp
and
adc
dec
aad
xor
push
(bad)
push
push
xor
inc
nop
movs
dec
inc
lds
mov
push
aam
xor
push
popa
aad
aas
push
div
push
in
mov
test
add
sysretw
out
addr16
hlt
adc
inc
cmc
pop
pop
outs
push
adc
mov
mov
xchg
mov
adc
xchg
mov
and
jo
inc
cmps
movs
(bad)
xchg
cmps
pushf
xor
pusha
fst
mov
xor
(bad)
xlat
int
lods
adc
and
retf
inc
out
(bad)
out
enter
cwde
aad
push
in
mov
xchg
mov
enter
shl
(bad)
jecxz
mov
and
adc
rcr
sub
add
and
or
es
add
push
mov
aaa
xor
and
and
daa
daa
inc
mov
loopne
aad
xor
cmp
ins
push
xor
pop
nop
jo
pop
inc
pop
lds
dec
(bad)
pop
inc
js
aaa
add
push
jns
add
push
mul
dec
in
mov
test
push
in
cvtps2pd
push
addr16
hlt
push
mov
jg
push
pop
ins
push
xchg
xchg
repz
push
mul
test
push
nop
xchg
adc
inc
test
fcom
mov
and
jo
inc
mov
fisub
and
into
xor
call
adc
and
mov
movs
push
mov
xor
in
mov
loope
in
retf
add
leave
(bad)
frstor
out
je
and
adc
mov
pop
xor
add
jge
cs
jns
aaa
rol
add
jg
mov
aaa
adc
and
pop
cmps
jge
ds
loopne
aad
xor
add
jl
les
nop
jo
addr16
jns
adc
push
aam
and
push
outs
aad
aas
push
test
in
mov
test
in
unpckhps
inc
addr16
push
mov
pmaddwd
outs
push
xchg
xchg
mov
loopne
mul
test
push
mov
inc
mov
adc
lods
mov
and
jo
inc
xchg
movs
fbld
xchg
cmps
call
mov
xor
loope
out
inc
lods
adc
and
xchg
scas
mov
jecxz
stc
push
fadd
mov
push
cmp
out
stos
in
fisttp
cmc
je
and
adc
(bad)
lahf
cli
xchg
xor
xor
jnp
add
push
add
sbb
or
adc
cmp
and
and
movs
ja
or
push
loopne
aad
xor
aas
(bad)
push
push
les
push
movs
pop
inc
cmp
ins
das
inc
(bad)
jae
das
aam
or
push
arpl
inc
aas
push
test
in
mov
test
sbb
cmovns
push
addr16
hlt
dec
mov
inc
cmc
pop
pop
dec
push
mov
push
test
mov
mov
xchg
xchg
adc
inc
mov
adc
mov
mov
shl
test
iret
lods
es
(bad)
xor
pusha
xchg
push
mov
fistp
inc
out
leave
and
hlt
scas
mov
push
int
in
sti
aad
push
lds
shl
enter
call
mul
fidiv
(bad)
adc
fcomp
xor
rcr
in
add
and
or
aas
cmc
sbb
jg
mov
aaa
pop
movs
cmp
sbb
xor
adc
outs
daa
pop
mov
loopne
aad
xor
push
(bad)
fs
popa
les
pop
movs
dec
inc
outs
lds
mov
aam
and
pop
push
pop
aad
aas
push
not
adc
ins
mov
test
gs
in
sysret
out
addr16
hlt
push
mov
jns
pop
pop
ins
push
sahf
xchg
mov
loopne
mov
add
mov
mov
inc
mov
adc
mov
cmps
inc
scas
movs
movs
and
mov
pusha
xchg
push
mov
(bad)
push
loopne
test
out
xchg
scas
mov
push
retf
xor
loopne
movs
jbe
div
shl
leave
add
aam
into
shl
je
and
adc
mov
pop
sub
ins
shl
in
add
and
adc
pop
cmc
aas
adc
movzx
aaa
adc
and
and
and
sbb
or
inc
aad
xor
adc
ins
push
dec
les
nop
jb
dec
inc
jg
adc
ds
jp
and
xor
push
ins
aad
aas
pop
test
in
mov
test
pop
in
sysret
out
addr16
hlt
push
mov
adc
jbe
outs
push
lods
xchg
mov
loopne
mul
test
push
ret
xchg
jne
xchg
mov
movs
mov
and
jo
inc
lock
fbld
cmps
cmps
cdq
xor
pusha
retf
mov
xor
hlt
xlat
into
inc
sti
adc
and
imul
stc
push
rol
xor
cli
mov
(bad)
fs
xor
add
int
jmp
and
adc
neg
test
and
adc
outs
and
or
adc
ss
aaa
adc
and
and
adc
pop
aad
xor
adc
les
nop
jae
js
popa
lds
das
push
aam
cmp
sub
pop
aas
push
test
in
mov
test
push
in
(bad)
out
addr16
hlt
push
mov
inc
cmc
dec
pop
pop
push
test
jmp
gs
add
scas
xchg
jne
xchg
in
adc
movs
mov
and
jo
inc
mov
iret
cdq
es
cmps
xchg
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
mov
loop
cli
aad
push
fistp
mul
lea
mov
enter
hlt
je
and
adc
repnz
lds
pusha
shl
in
add
jg
aaa
pop
ds
jl
popa
cmc
sbb
jg
mov
aaa
adc
and
sub
mov
loopne
aad
xor
push
(bad)
inc
push
push
les
ja
or
lds
pop
(bad)
pop
inc
addr16
or
push
das
aad
aas
dec
test
in
mov
test
push
in
unpckhps
jp
ja
push
mov
inc
cmc
inc
pop
outs
push
adc
gs
test
push
mov
cmps
adc
inc
xchg
jne
xchg
jecxz
mov
mov
and
jo
inc
mov
pushf
and
test
mov
xor
retf
inc
sti
adc
and
retf
inc
inc
not
std
xor
in
in
jbe
imul
shl
lds
mov
fsub
out
je
and
adc
fstp
sub
data16
dec
outs
and
ja
xor
or
sub
cmp
xor
outs
and
cmp
gs
push
mov
loopne
aad
xor
sbb
jl
jo
dec
nop
dec
movs
dec
inc
cmp
(bad)
ja
push
aam
add
ins
aad
aas
jg
xor
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
je
dec
pop
outs
push
lods
xchg
xchg
add
push
xchg
gs
out
mov
adc
inc
xchg
xchg
mov
cmps
mov
and
jo
inc
xchg
movs
mov
es
pusha
lahf
push
mov
stos
xor
hlt
xlat
cmc
inc
not
into
and
mov
stc
push
mov
xor
cli
mov
in
xor
add
fimul
fbstp
rcl
lahf
mov
sub
add
jle
ds
pop
xchg
or
adc
push
mov
aaa
push
movs
xor
and
and
pop
loopne
aad
xor
adc
inc
push
pop
les
nop
jbe
push
inc
jno
or
push
mov
aam
adc
push
jo
inc
aas
push
test
in
mov
test
gs
packuswb
push
addr16
inc
mov
inc
cmc
addr16
push
add
push
mul
test
push
scas
xchg
jne
xchg
xchg
adc
mov
jo
inc
out
pushf
and
xchg
cmps
(bad)
xor
pusha
fst
mov
xor
retf
inc
into
adc
and
xchg
scas
mov
push
enter
pushf
aad
push
(bad)
mov
fisub
mov
(bad)
(bad)
(bad)
out
je
and
adc
rcr
jne
rcl
in
add
adc
dec
pop
sbb
adc
push
mov
aaa
or
and
and
adc
sbb
aaa
xor
xor
ins
push
imul
nop
jo
pop
inc
jno
inc
das
pop
(bad)
jo
ja
push
push
xor
jl
dec
test
in
mov
test
push
in
mulps
pop
addr16
adc
push
cmp
outs
push
mov
push
sti
gs
test
add
lahf
xchg
jne
xchg
jmp
push
mov
xchg
xchg
mov
xchg
push
mov
fistp
inc
mov
lds
inc
rol
ret
push
test
icebp
push
ret
jbe
not
fs
add
lock
je
and
adc
fistp
or
add
or
adc
sbb
and
es
aaa
or
and
cmp
sbb
inc
mov
loopne
aad
xor
adc
outs
push
dec
les
ins
movs
adc
cmp
adc
imul
and
pop
push
pop
aad
aas
inc
neg
dec
in
mov
test
in
subps
je
push
hlt
push
mov
or
pop
pop
push
add
push
mov
test
push
mov
inc
mov
adc
mov
jo
inc
xchg
movs
fbld
xchg
cmps
xor
int
popf
fistp
inc
lods
adc
and
xchg
scas
mov
push
aam
mov
push
fidivr
in
xor
add
out
in
data16
fbstp
(bad)
adc
fcomp
jno
jnp
es
add
sub
xchg
sub
pop
cmc
push
adc
cmp
movs
adc
sbb
push
and
sbb
mov
loopne
aad
xor
push
(bad)
pop
push
jbe
and
jno
pop
das
push
jae
jge
dec
or
push
jo
inc
aas
push
div
mov
test
push
in
nop
push
addr16
hlt
data16
dec
cmc
inc
pop
push
add
push
in
mov
stos
push
scas
xchg
jne
xchg
lea
mov
jo
inc
xchg
movs
pushf
and
mov
pusha
nop
push
mov
fist
mov
lds
inc
fld
in
test
repz
ret
mov
in
mov
enter
ret
(bad)
(bad)
data16
je
and
adc
neg
aaa
test
and
cmp
cmp
push
outs
add
aaa
pop
and
cmc
push
adc
push
mov
aaa
push
movs
adc
pop
lds
das
cmps
adc
es
loopne
aad
xor
cmp
dec
push
popa
les
dec
movs
dec
inc
push
lds
pop
(bad)
jns
jg
push
or
push
das
aad
aas
jb
inc
ja
in
mov
test
push
in
lsl
jp
ja
push
mov
inc
cmc
pop
pop
outs
push
xlat
xchg
mov
sti
push
mov
test
add
mov
inc
mov
adc
repnz
and
jo
inc
cmps
movs
xchg
and
mov
pusha
xchg
push
cli
mov
xor
loopne
cmc
inc
into
adc
and
xchg
scas
mov
push
leave
add
xor
(bad)
mov
(bad)
les
fild
loopne
(bad)
data16
out
je
and
adc
sti
lahf
lea
sbb
jne
dec
add
add
xchg
add
pusha
cmc
sbb
adc
movs
and
xor
outs
and
add
sub
adc
and
dec
(bad)
ins
push
inc
les
movs
dec
inc
jl
or
pop
(bad)
push
inc
fs
xor
push
ins
aad
aas
sub
push
ja
in
mov
test
pop
in
sysret
out
addr16
hlt
push
mov
or
push
lods
xchg
hlt
add
push
mul
test
push
add
mov
movs
mov
and
jo
inc
call
iret
test
mov
pusha
mov
cli
mov
xor
in
xlat
inc
lods
adc
and
shr
fist
cmps
xor
fdivr
ret
shl
retf
in
fimul
xchg
loop
in
out
jne
lahf
lds
jg
sub
test
outs
and
or
aaa
cmc
inc
adc
ds
aaa
and
cmp
sbb
xor
and
or
sbb
mov
pop
adc
adc
les
nop
movs
pop
inc
jno
pop
das
jp
jae
inc
aam
or
push
popa
aad
aas
push
neg
in
mov
test
(bad)
in
movq
outs
addr16
push
push
xchg
ss
cmc
popa
pop
push
add
push
cmc
gs
test
push
ret
adc
inc
test
xchg
jecxz
mov
mov
and
jo
inc
xchg
movs
pushf
and
mov
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
fld
out
mov
xor
repnz
in
fs
xor
add
loop
jmp
shl
je
and
adc
lock
aad
and
aaa
test
sbb
es
and
or
push
cmc
add
jg
mov
aaa
or
lds
and
or
pop
aad
xor
xor
fs
popa
les
jo
dec
inc
push
inc
das
pop
(bad)
bound
aam
add
push
das
aad
aas
imul
ja
in
mov
test
inc
in
unpckhps
pop
addr16
hlt
arpl
inc
cmc
jno
ins
push
lods
xchg
mov
mov
mov
lds
mov
adc
mov
mov
lock
mov
movs
cmps
mov
push
mov
fild
inc
fst
retf
and
std
scas
aam
aad
fist
mov
push
ret
jbe
not
fs
xor
add
mov
xchg
out
je
and
adc
icebp
lahf
hlt
xchg
and
and
add
or
adc
adc
xchg
pop
jg
mov
aaa
adc
xor
and
cmp
sbb
sbb
xor
sbb
jl
jb
outs
nop
jae
dec
inc
push
inc
das
pop
mov
fs
add
ins
aad
aas
dec
test
in
mov
test
in
pcmpeqd
inc
addr16
hlt
jl
jge
jnp
(bad)
cmc
popw
adc
xchg
xchg
repnz
push
mul
test
push
rol
jne
xchg
mov
movs
mov
and
jo
inc
mov
fisub
sahf
cmps
xor
xchg
xor
rcl
(bad)
inc
int3
adc
and
shr
stc
push
aam
jmp
mov
aad
(bad)
xor
add
cmc
(bad)
out
je
and
jne
lahf
in
sub
rol
in
add
add
or
adc
ds
aaa
push
movs
pop
lock
push
or
xor
add
or
sbb
sbb
pop
aas
(bad)
imul
sub
inc
lds
push
(bad)
jae
outs
aam
add
push
arpl
inc
aas
inc
neg
push
in
mov
test
inc
in
sysret
out
addr16
hlt
dec
mov
dec
cmc
push
pop
outs
push
mov
hlt
lods
test
add
pop
mov
adc
mov
jo
inc
out
les
mov
pusha
adc
xor
xlat
test
repz
(bad)
scas
std
inc
test
icebp
xor
in
out
jbe
test
add
out
xchg
data16
je
and
adc
fistp
sbb
pusha
rcr
in
add
jge
aaa
pop
ds
and
xor
sbb
jg
mov
aaa
cmp
and
xor
xor
cmp
cmp
cmp
aad
xor
push
(bad)
ins
push
jbe
addr16
jo
push
inc
pop
lds
pop
(bad)
jno
addr16
xor
push
jg
inc
aas
push
div
ja
in
mov
test
push
in
lsl
push
addr16
push
mov
inc
cmc
pop
pop
outs
push
mov
push
xchg
gs
test
push
test
xor
call
and
jo
inc
mov
cwde
and
push
(bad)
mov
xor
loopne
jmp
in
adc
and
xchg
scas
mov
push
retf
xor
(bad)
mov
xchg
fs
xor
add
les
shl
adc
out
lds
ins
shr
in
add
add
ja
adc
xchg
push
jg
mov
aaa
push
movs
add
xor
pop
and
and
es
aad
xor
adc
dec
push
imul
pop
inc
cmp
push
das
inc
(bad)
ja
jge
je
inc
mov
push
dec
aad
aas
push
test
in
mov
test
pop
in
cmovbe
inc
addr16
hlt
push
mov
dec
cmc
js
pop
push
(bad)
xchg
lahf
add
push
repnz
test
add
mov
inc
mov
adc
test
xchg
and
jo
inc
mov
fbld
xchg
cmps
cdq
xor
pusha
xchg
push
sti
mov
xor
loopne
loope
lods
adc
and
shr
loopne
repnz
push
in
in
jbe
imul
fs
lds
lds
fbstp
ret
adc
ficomp
sub
add
cmp
or
adc
push
mov
aaa
daa
movs
sbb
daa
lds
and
and
adc
inc
aad
xor
cmp
les
nop
outs
movs
jno
inc
lds
das
pop
(bad)
jae
jnp
and
pop
push
push
aad
aas
push
neg
ins
in
mov
test
gs
in
sysret
out
addr16
hlt
dec
mov
or
dec
pop
js
stos
xchg
repz
push
cmc
gs
out
pushf
push
cmps
xchg
pushf
xchg
lods
adc
sahf
mov
and
jo
inc
in
movs
pushf
and
xchg
cmps
call
mov
xor
icebp
xlat
int
mov
(bad)
in
scas
mov
push
jecxz
jecxz
pushf
aad
push
hlt
mov
fsub
lds
loope
mul
out
je
and
adc
ficomp
xor
add
add
and
or
adc
xchg
add
mov
aaa
and
and
and
adc
aaa
aad
xor
xor
ins
push
dec
les
dec
movs
jle
push
pop
das
pop
(bad)
arpl
aam
cmp
push
push
aad
aas
jge
inc
ja
in
mov
test
push
in
nop
jg
push
hlt
dec
mov
inc
cmc
outs
pop
jb
mov
mov
adc
mov
out
mov
inc
mov
adc
scas
mov
and
jo
inc
mov
cwde
es
cmps
mov
push
mov
fistp
inc
fst
retf
and
xchg
scas
mov
push
enter
rcl
push
cmp
shl
enter
shl
(bad)
out
je
and
adc
int
call
test
in
add
xchg
pop
cmp
adc
push
mov
aaa
adc
cmp
xor
outs
and
cmp
xor
loopne
aad
xor
ds
je
ins
les
je
dec
inc
push
lds
inc
mov
aam
add
push
dec
aad
aas
jle
dec
ja
in
mov
test
push
in
cmovbe
push
addr16
hlt
dec
mov
jo
pop
pop
ins
push
stos
xchg
add
mul
test
push
mov
jne
xchg
loop
(bad)
inc
and
jo
inc
xchg
movs
mov
es
cmps
call
mov
xor
jmp
inc
(bad)
and
xchg
scas
mov
push
retf
add
push
loopne
fbstp
not
fs
xor
add
in
(bad)
out
fbstp
popf
adc
fcomp
and
add
jle
xor
and
cmc
inc
adc
cmp
movs
inc
lock
or
das
movs
and
cmps
gs
add
adc
xor
adc
les
jb
inc
inc
dec
lds
das
ins
(bad)
jnp
jg
push
add
ins
aad
aas
je
pop
ja
in
mov
test
push
in
unpckhps
js
jl
bound
or
push
adc
mov
nop
out
cmc
push
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
pushf
and
cdq
cmps
sahf
xor
pusha
mov
xor
loop
test
mov
inc
inc
out
rol
xor
xchg
shl
enter
(bad)
lods
(bad)
iret
data16
and
jne
lahf
not
sbb
add
sub
xchg
jae
sbb
push
adc
cmp
movs
adc
and
or
and
xor
adc
push
push
popa
les
nop
push
movs
dec
inc
jb
dec
das
dec
(bad)
arpl
aam
add
push
sub
pop
aas
push
div
gs
mov
test
push
in
cmovnp
jg
jnp
push
mov
inc
cmc
inc
pop
outs
push
mov
push
hlt
gs
xchg
mov
inc
lahf
jne
xchg
out
adc
(bad)
mov
and
jo
inc
in
movs
xchg
and
sahf
cmps
mov
push
mov
xor
xlat
hlt
inc
stc
adc
inc
cmc
scas
aam
std
(bad)
aad
test
icebp
push
ret
jbe
not
fs
fild
fimul
cld
je
and
adc
fcomp
sub
cmp
sub
adc
or
sub
adc
movzx
aaa
pop
movs
add
and
xor
pop
movs
add
daa
pop
mov
loopne
aad
xor
sbb
jno
dec
les
nop
imul
ja
outs
aam
add
push
jo
inc
aas
je
jo
dec
in
mov
test
in
unpckhps
push
addr16
hlt
push
mov
or
push
lods
xchg
mov
mov
mov
test
push
ret
adc
inc
mov
adc
mov
mov
stos
movs
mov
movs
cmps
cdq
xor
pusha
mov
xor
in
xlat
out
inc
out
adc
and
lock
fiadd
mov
xor
(bad)
mov
(bad)
fs
xor
add
ror
fbstp
loop
out
shl
lahf
les
xor
and
dec
add
and
xor
cmp
adc
ds
aaa
pop
movs
pop
lock
(bad)
adc
add
add
ss
aad
xor
adc
les
nop
imul
das
pop
(bad)
jae
jle
ja
and
pop
aas
imul
ja
in
mov
test
gs
in
packssdw
push
addr16
hlt
adc
popa
cmc
jg
push
add
push
mov
mov
out
mov
adc
inc
mov
adc
mov
xchg
and
jo
inc
jmp
pushf
and
xchg
cmps
popf
xor
pusha
stos
push
mov
fistp
inc
mov
(bad)
fild
not
mov
push
fdivr
into
shl
xlat
add
mov
xchg
iretw
out
je
and
adc
fcomp
xor
add
and
and
adc
push
mov
aaa
push
movs
inc
lock
lds
sbb
or
dec
aad
xor
adc
les
sub
lds
(bad)
arpl
aam
adc
push
das
aad
aas
sub
inc
ja
in
mov
test
jb
pop
lsl
push
addr16
hlt
push
mov
inc
cmc
push
pop
outs
push
adc
gs
test
push
mov
inc
xchg
jne
xchg
mov
icebp
mov
and
jo
inc
stos
movs
and
cmps
xchg
xor
pusha
xchg
push
fwait
mov
xor
retf
inc
mov
lds
inc
stc
(bad)
xlat
push
leave
add
push
ret
mov
(bad)
fs
xor
add
fimul
les
mov
fstp
sub
in
add
and
adc
push
cmc
aas
adc
pop
mov
aaa
shld
add
cmp
and
xor
adc
jg
xor
cmp
cmp
adc
pop
mov
aam
sbb
push
sub
inc
aas
sub
push
ja
in
mov
test
jl
xor
addr16
adc
pop
xchg
imul
popw
inc
push
scas
xchg
mov
push
xchg
gs
test
add
rol
jne
xchg
in
adc
movs
mov
and
jo
inc
lods
movs
stos
and
xchg
cmps
mov
lods
pusha
xchg
push
lods
mov
xor
cmc
xlat
in
inc
stc
adc
and
mov
fist
call
push
lds
leave
xlat
xor
add
in
retf
out
je
and
adc
fistp
je
adc
es
add
sub
sbb
and
xchg
cmp
ds
aaa
add
and
sbb
add
pop
aad
xor
adc
les
nop
ins
movs
jo
jno
push
das
push
(bad)
jae
js
ja
and
inc
aas
push
not
ins
in
mov
test
gs
andpd
inc
addr16
hlt
jno
jl
inc
jne
cmc
dec
pop
push
add
push
mul
test
mov
inc
fwait
jne
xchg
scas
adc
mov
jo
inc
out
mov
cmps
cmps
pushf
xor
pusha
cmps
push
xor
push
int3
xlat
hlt
inc
loop
leave
and
xchg
scas
mov
push
enter
cwde
aad
push
cmc
mov
(bad)
fs
enter
popf
gs
out
mul
(bad)
je
and
adc
out
lahf
out
xchg
and
aaa
test
and
push
add
sub
sub
sbb
pop
adc
cmp
movs
push
lock
lds
inc
cmps
sbb
loopne
aad
xor
sbb
dec
push
pop
les
nop
dec
movs
dec
inc
and
dec
das
dec
(bad)
arpl
aam
add
push
dec
aad
aas
push
imul
push
in
mov
test
gs
pop
unpcklps
ja
push
hlt
push
mov
inc
cmc
inc
pop
jbe
xchg
xchg
test
test
push
mov
cmps
adc
inc
xchg
xchg
scas
adc
mov
xchg
and
jo
inc
xchg
movs
xchg
and
and
mov
xchg
fbstp
inc
(bad)
adc
and
xchg
scas
mov
push
leave
add
xor
ret
mov
iret
shl
fild
int3
(bad)
out
je
and
adc
fcomp
sub
and
add
and
adc
push
cmc
and
jg
mov
aaa
push
movs
inc
lock
outs
and
and
adc
pop
aad
xor
cmp
jne
xor
dec
nop
jne
adc
cmp
push
das
pop
(bad)
ja
addr16
and
sbb
aad
aas
jbe
inc
ja
in
mov
test
in
unpcklps
pop
addr16
hlt
push
mov
or
push
test
test
gs
test
push
iret
xchg
jne
xchg
mov
ss
mov
and
jo
inc
out
fbld
xchg
cmps
mov
push
mov
fistp
inc
movs
adc
and
ret
inc
rol
icebp
push
aam
mov
push
fdivr
leave
fs
xor
fisttp
(bad)
je
and
adc
ficomp
jne
cmp
and
or
adc
and
cmp
adc
push
mov
aaa
shld
sbb
cmp
and
adc
inc
aad
xor
or
ja
jbe
aas
nop
jno
dec
inc
jno
adc
data16
jae
fs
or
push
jae
pusha
aas
push
div
popa
in
mov
test
push
in
mulps
pop
addr16
hlt
push
mov
pop
cmc
pop
pop
push
add
push
fwait
mov
call
inc
mov
adc
lea
mov
xchg
movs
pushf
and
cdq
cmps
call
mov
xor
lahf
xlat
jmp
and
(bad)
scas
mov
push
into
add
xor
repz
xchg
xlat
xor
add
ror
fidiv
(bad)
adc
fcomp
aaa
test
in
add
adc
xchg
jae
adc
xchg
sub
aaa
push
movs
adc
xor
ins
and
pop
cmps
sbb
loopne
aad
xor
adc
les
nop
xor
lds
pop
(bad)
arpl
aam
add
push
ins
aad
aas
push
test
in
mov
test
gs
in
divps
inc
addr16
inc
mov
pmaddwd
outs
push
lahf
xchg
mov
sti
push
call
out
mov
adc
inc
mov
adc
lea
mov
mov
iret
xchg
es
xchg
pusha
test
mov
xor
retf
inc
repz
and
xchg
scas
mov
push
retf
xor
sar
fs
xor
add
aad
loope
mov
and
adc
fstp
sub
jg
jne
adc
sbb
adc
adc
xchg
and
cmp
movs
xor
and
and
pop
loopne
aad
xor
es
jl
jg
cmp
dec
lds
outs
(bad)
ja
addr16
adc
push
xor
jge
push
not
inc
in
mov
test
pop
in
movd
dec
addr16
hlt
push
mov
or
push
lods
xchg
test
mov
test
push
mov
mov
jne
xchg
test
xchg
(bad)
in
ss
mov
and
jo
inc
cmps
movs
frstor
and
push
test
xchg
push
in
out
inc
fst
mov
aad
mov
(bad)
stc
push
retf
add
xor
idiv
lds
int3
add
fisttp
fbstp
lds
out
lahf
jmp
rol
in
add
and
push
sar
and
mov
aaa
xor
lds
dec
and
push
loopne
aad
xor
das
(bad)
push
nop
ins
movs
inc
imul
jno
jg
dec
and
push
sub
jae
push
not
inc
in
mov
test
inc
in
cmovle
es
hlt
dec
mov
or
push
test
mov
cdq
push
mov
add
xchg
xchg
adc
mov
lods
jo
inc
stos
movs
mov
popf
cmps
sahf
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
xchg
scas
test
out
iret
add
push
repz
fsub
enter
loopne
loop
int
out
out
je
and
adc
icebp
lahf
mov
jnp
or
pop
add
sbb
aaa
pop
gs
aaa
rcr
or
cmp
cmp
pop
movs
sub
and
sbb
sub
xor
push
(bad)
ins
push
ja
ja
jo
jbe
jb
or
pop
(bad)
push
inc
addr16
and
pop
push
popa
aad
aas
inc
div
ja
in
mov
test
push
in
cmovae
push
addr16
hlt
adc
inc
cmc
push
pop
push
add
push
hlt
mov
test
mov
jne
xchg
mov
mov
mov
lods
movs
mov
in
xchg
pusha
mov
xor
jecxz
fadd
enter
icebp
inc
in
mov
push
leave
add
xor
test
in
shl
into
add
loope
jmp
je
and
adc
scas
lahf
(bad)
xchg
cs
or
add
push
xchg
pop
cmp
adc
xor
movs
add
adc
movs
sbb
daa
sbb
adc
xor
push
(bad)
je
imul
dec
inc
and
fs
pop
(bad)
jne
push
aam
add
ins
aad
aas
das
not
dec
in
mov
test
in
cmovs
inc
addr16
hlt
push
mov
adc
jno
outs
push
lods
xchg
xchg
add
push
mul
test
scas
xchg
jne
xchg
mov
movs
mov
and
jo
inc
test
iret
pushf
es
mov
push
mov
ffreep
push
icebp
xlat
cmc
inc
lods
adc
and
sahf
scas
mov
push
loopne
mov
push
sar
mul
int3
add
in
leave
data16
fbstp
stc
adc
ret
xchg
xor
sub
add
and
or
sbb
inc
adc
ds
aaa
or
lds
cmp
jge
add
add
inc
aad
xor
adc
les
jb
push
inc
pop
lds
das
pop
(bad)
pop
inc
jg
push
or
push
pop
aad
aas
push
mul
push
in
mov
test
inc
in
sysret
out
addr16
hlt
push
mov
push
push
lods
xchg
scas
add
push
xchg
mov
stos
push
mov
jne
xchg
in
adc
mov
lods
inc
xchg
movs
mov
mov
call
pusha
xchg
push
mov
mov
hlt
xlat
repz
fist
leave
and
(bad)
scas
mov
push
int
cmps
xor
fidivr
xchg
fs
xor
add
cmc
(bad)
sahf
mul
fdiv
cdq
adc
neg
aaa
test
cmp
es
and
or
push
cmc
add
xor
adc
or
lds
movs
jno
and
or
dec
aad
xor
adc
les
xor
or
pop
mov
aam
add
push
das
aad
aas
aaa
test
in
mov
test
sbb
pop
unpcklps
and
hlt
push
mov
inc
cmc
cmp
push
push
test
stos
xchg
mov
mov
inc
mov
adc
lods
mov
and
jo
inc
test
xchg
and
and
mov
push
call
adc
and
shr
(bad)
push
leave
add
xor
lds
xlat
shl
lds
fimul
(bad)
je
and
adc
fstp
xor
ins
rcr
in
add
and
or
adc
cmp
movs
adc
adc
movs
sbb
daa
xor
xor
adc
pusha
push
pop
les
dec
movs
dec
inc
cmp
(bad)
fs
and
push
sbb
push
arpl
ins
aas
push
test
in
mov
test
in
cmovae
inc
addr16
hlt
push
mov
or
push
scas
xchg
mov
loope
in
gs
out
mov
xchg
xchg
adc
leave
and
jo
inc
out
cwde
and
nop
cmps
cmps
xor
pusha
test
cmps
mov
xor
in
lock
int
into
and
les
aad
int3
add
push
(bad)
mov
xlat
fs
retf
add
fimul
fbstp
icebp
adc
lds
or
cmp
and
dec
add
xchg
cmp
adc
ds
aaa
and
cmp
lds
pop
movs
and
cmps
data16
add
adc
xor
daa
xor
adc
inc
push
jbe
aas
nop
jne
adc
cmp
fs
push
(bad)
jo
inc
aam
add
push
jae
inc
aas
push
div
ja
in
mov
test
add
xor
pop
out
addr16
hlt
ins
mov
push
push
adc
mov
mov
mov
inc
in
xchg
jmp
and
jo
inc
out
pushf
and
xchg
cmps
call
mov
xor
ret
xlat
test
in
xchg
scas
cmc
inc
hlt
(bad)
fcom
mov
push
fdivr
shl
enter
xchg
lods
(bad)
iret
data16
xor
adc
rcr
or
in
add
add
aaa
pop
fs
sbb
adc
push
mov
aaa
pop
movs
adc
pextrw
sub
inc
movs
push
dec
sbb
mov
loopne
aad
xor
adc
push
nop
jo
jbe
jb
or
pop
(bad)
pop
inc
addr16
sbb
push
popa
aad
aas
push
test
jge
pusha
test
push
in
cmovnp
addr16
hlt
push
mov
dec
cmc
pusha
pop
imul
loop
xchg
test
add
cmps
xchg
jne
xchg
mov
xor
inc
hlt
movs
les
mov
xchg
pusha
fwait
push
movs
mov
xor
xchg
xlat
test
repz
aam
mov
push
leave
add
push
fistp
aam
lea
loope
test
(bad)
jecxz
(bad)
fdiv
(bad)
adc
fstp
sub
(bad)
shl
in
add
daa
xchg
pop
es
or
aas
cmc
pop
adc
cmp
xor
xor
sbb
cmp
daa
daa
xor
aad
xor
adc
ins
push
dec
les
nop
jo
dec
inc
cmp
pop
das
jl
ja
fs
cmp
push
ins
aad
aas
push
div
dec
in
mov
test
in
cvtdq2ps
jg
dec
hlt
pusha
mov
pmaddwd
push
test
mov
test
push
mov
inc
mov
adc
mov
(bad)
inc
xchg
movs
fbld
xchg
cmps
les
pusha
retf
mov
xor
(bad)
test
repz
in
mov
add
xor
cld
mov
leave
fs
aad
cld
in
fimul
fbstp
(bad)
adc
ficomp
pop
test
shl
in
add
xor
xchg
adc
data16
inc
adc
ds
aaa
and
and
cmps
xor
add
adc
and
daa
xor
adc
les
nop
jo
inc
dec
lds
das
pop
(bad)
pop
inc
jg
dec
sbb
push
arpl
inc
aas
pop
mul
push
in
mov
test
inc
in
cmovo
cs
hlt
push
mov
inc
cmc
inc
pop
outs
push
mov
mul
test
add
mov
inc
mov
adc
repnz
and
jo
inc
out
xchg
and
xchg
cmps
mov
push
call
push
into
xlat
jmp
and
xchg
scas
jmp
push
mov
fbstp
(bad)
mov
into
fs
xor
add
test
je
and
adc
fistp
add
add
sbb
aaa
pop
ds
xor
push
cmc
sbb
jg
mov
aaa
xor
and
and
or
daa
aad
xor
push
(bad)
push
nop
je
jo
ins
lds
pop
mov
aam
and
pop
push
das
aad
aas
push
test
in
mov
test
jns
pop
nop
push
addr16
hlt
or
push
cmc
and
pop
push
fist
hlt
mov
test
nop
xchg
jne
xchg
mov
xchg
mov
mov
test
and
int3
xor
not
hlt
inc
in
adc
and
xlat
scas
mov
push
retf
add
xor
pushf
mov
ret
shl
retf
add
icebp
(bad)
pushf
data16
shl
adc
fstp
sub
add
and
xchg
or
and
sub
and
movs
es
movs
adc
daa
pop
mov
loopne
aad
xor
dec
(bad)
jb
dec
les
dec
movs
push
inc
inc
lds
pop
(bad)
push
inc
gs
adc
push
jl
jge
push
test
in
mov
test
pop
in
cmovs
inc
addr16
hlt
pusha
mov
pop
cmc
popw
ins
push
mov
push
stos
gs
test
push
mov
inc
mov
adc
xor
inc
mov
and
xchg
pusha
mov
xor
in
out
inc
rcl
into
and
mov
rcl
lds
cmp
xlat
add
fisttp
fdiv
loop
out
cmc
jne
lahf
les
arpl
jp
push
add
jle
xor
cs
or
pop
cmc
and
ds
aaa
shld
and
cmp
and
add
adc
sbb
push
mov
pop
adc
les
nop
je
js
jno
pop
das
jle
jae
jnp
pop
add
push
js
jne
push
div
ja
in
mov
test
popa
in
nop
jle
pop
hlt
adc
inc
cmc
addr16
push
add
push
xchg
test
push
mov
movs
adc
inc
mov
adc
xchg
mov
and
jo
inc
jmp
pushf
and
in
xchg
xor
pusha
mov
xor
hlt
xlat
in
inc
cli
adc
and
iret
scas
out
inc
test
shl
(bad)
mov
into
shl
out
add
mov
enter
xor
adc
fcomp
aas
test
shr
test
outs
jns
add
rcl
xor
jg
mov
aaa
pop
movs
aaa
lock
xor
cmp
sbb
pop
mov
loopne
aad
xor
or
push
popa
les
inc
jg
jb
dec
(bad)
pusha
inc
ja
push
and
outs
push
sub
pop
aas
pop
imul
push
in
mov
test
push
in
lsl
push
addr16
hlt
push
mov
dec
cmc
popa
pop
outs
push
xchg
xchg
mov
sti
push
repz
add
test
xchg
mov
ss
mov
and
jo
inc
xchg
movs
pushf
and
mov
xchg
pusha
lahf
push
in
mov
jmp
and
shr
push
mov
retf
aad
push
ret
jbe
not
mov
retf
add
out
(bad)
data16
les
call
iret
lahf
(bad)
xchg
and
add
in
add
and
das
pop
es
sbb
pop
cmc
push
adc
cmp
movs
adc
and
cmp
sbb
sbb
sub
pop
aad
xor
adc
pop
push
pop
les
nop
outs
movs
dec
inc
inc
lds
das
pop
mov
and
push
push
ins
aad
aas
pop
test
in
mov
test
in
cmovs
inc
addr16
hlt
or
pmaddwd
dec
push
xchg
xchg
scas
add
push
mul
test
push
lods
xchg
jne
xchg
scas
adc
mov
xchg
and
jo
inc
cwde
movs
fbld
xchg
cmps
xor
xor
xlat
lock
fist
into
and
shr
mov
xor
cmp
sti
add
dec
push
fst
fcomp
or
add
sub
and
pop
cmc
inc
adc
ds
aaa
push
movs
pop
lock
movs
and
cmps
add
pop
mov
loopne
aad
xor
adc
les
nop
outs
movs
pop
inc
jno
adc
aas
(bad)
jae
data16
and
push
dec
aad
aas
dec
div
mov
test
gs
sysret
out
addr16
hlt
dec
mov
inc
cmc
push
pop
inc
push
test
stos
add
push
mov
mov
mov
xchg
movs
jne
xchg
in
adc
lea
aad
mov
mov
scas
cmps
xchg
xor
pusha
xchg
push
div
mov
sahf
xlat
test
mov
int
cmc
inc
add
push
int
mov
push
repnz
(bad)
xlat
xor
add
mov
out
repz
je
and
adc
out
xchg
xchg
movhps
or
add
add
xor
xor
adc
cmp
aaa
lock
xor
cmp
aaa
daa
add
aad
xor
adc
les
nop
pusha
movs
dec
inc
cmp
ja
pusha
(bad)
arpl
aam
xor
push
js
inc
aas
jge
inc
ja
in
mov
test
push
out
addr16
push
mov
inc
cmc
push
pop
jne
mov
push
cmps
mov
mov
mov
inc
mov
adc
stos
mov
and
jo
inc
lods
movs
mov
es
cmps
xchg
pusha
xchg
push
fwait
mov
xor
rcl
test
and
xchg
scas
mov
push
retf
add
xor
into
mov
fsub
retf
add
dec
(bad)
rcl
lahf
(bad)
xchg
pop
pop
sub
ins
rcr
in
add
push
xchg
pop
es
add
adc
xchg
push
jg
mov
aaa
adc
xor
and
sbb
mov
loopne
aad
xor
cs
jl
popa
les
nop
jae
push
inc
cmp
adc
push
pop
inc
fs
add
push
ins
aad
aas
push
test
in
mov
test
jl
bound
adc
hlt
push
mov
or
push
mov
push
xchg
gs
test
push
cdq
xchg
adc
inc
mov
adc
stos
mov
and
jo
inc
lods
movs
fbld
sahf
cmps
mov
test
stos
push
div
xchg
push
in
repz
ficom
lock
shr
out
aam
mov
push
fnstcw
retf
xor
add
int
iret
cmps
out
je
and
adc
rcr
xor
(bad)
shl
or
outs
sub
or
data16
inc
adc
cmp
or
lds
and
and
adc
inc
aad
xor
or
push
je
and
jno
adc
jbe
jae
jl
sbb
push
pop
aad
aas
dec
neg
push
in
mov
test
inc
in
lsl
cmp
mov
or
inc
pop
push
add
push
mul
test
push
scas
xchg
adc
mov
inc
mov
pushf
and
xchg
cmps
xor
xchg
push
mov
fistp
inc
mov
lds
inc
inc
loop
jmp
shl
test
leave
test
out
add
loop
cwde
mul
fdiv
(bad)
adc
fcomp
sub
add
daa
xchg
pop
adc
or
daa
cmc
sbb
push
mov
aaa
or
and
add
adc
dec
aad
xor
push
(bad)
dec
push
inc
les
inc
jb
inc
das
pop
(bad)
arpl
aam
add
push
jle
inc
aas
push
idiv
push
in
mov
test
sbb
inc
cmovp
push
addr16
push
mov
(bad)
cmc
bound
ins
push
xchg
xchg
mov
push
and
out
scas
push
mov
inc
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
shl
mov
xchg
push
mov
fbld
inc
std
adc
and
shr
push
mov
shl
mov
in
shl
ret
add
fisttp
aam
retf
and
adc
(bad)
lahf
out
xchg
and
jno
aaa
shl
in
add
sub
or
gs
add
or
movs
adc
xor
outs
and
or
pop
loopne
aad
xor
(bad)
pusha
push
imul
dec
inc
cmp
(bad)
jae
dec
aam
xor
push
sub
push
aas
push
test
in
mov
test
jp
bound
push
out
addr16
hlt
push
mov
or
jbe
outs
push
xchg
hlt
gs
test
push
mov
inc
loope
test
jmp
and
jo
inc
in
movs
frstor
mov
pusha
mov
xor
in
out
inc
xlat
adc
and
mov
in
int3
add
xor
pushf
mov
leave
fs
jecxz
cmps
in
les
fbstp
loop
out
ret
jne
lahf
out
xchg
xor
sub
in
add
xchg
pop
cmp
adc
es
aaa
and
and
add
adc
pop
aad
xor
push
(bad)
push
push
dec
les
nop
ins
movs
pop
inc
jno
pop
das
cmp
jae
jle
and
sbb
aad
aas
push
neg
push
in
mov
test
pop
in
mulps
push
addr16
hlt
dec
mov
pop
cmc
pop
pop
outs
push
scas
xchg
scas
add
push
stos
gs
mov
cmps
out
mov
mov
inc
movs
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
cmps
and
pushf
cmps
mov
xchg
pusha
xchg
push
xor
repz
icebp
adc
and
mov
in
push
int
call
push
fistp
cmc
fs
xor
add
test
shl
fbstp
hlt
adc
repz
lds
pusha
rcr
in
add
xchg
pop
ds
and
sbb
sbb
jg
mov
aaa
and
and
add
or
dec
aad
xor
sbb
inc
push
popa
les
jo
dec
inc
cmp
pop
das
pop
(bad)
pusha
inc
jns
jb
inc
mov
push
inc
aad
aas
xor
pusha
ja
in
mov
test
push
in
sysret
out
addr16
hlt
push
mov
pop
cmc
jge
gs
mov
fwait
mov
mov
adc
inc
mov
adc
mov
lods
and
jo
inc
out
xchg
and
in
xchg
pusha
ret
mov
xor
loopne
hlt
inc
mov
korw
scas
mov
push
hlt
add
xor
pushf
mov
into
xlat
xor
add
ror
loop
retf
and
adc
fstp
add
ins
shl
in
add
push
xchg
pop
cmp
adc
cmp
movs
cs
lds
movs
sbb
daa
push
mov
loopne
aad
xor
xor
les
jae
dec
inc
ins
lds
pop
(bad)
bound
aam
add
push
dec
aad
aas
sub
pop
ja
in
mov
test
push
in
nop
pop
addr16
hlt
push
mov
or
push
mov
push
cmc
lea
test
sahf
xchg
popf
xchg
mov
ss
mov
and
jo
inc
mov
iret
call
pusha
nop
push
test
mov
inc
mov
(bad)
out
loopne
aad
scas
push
repnz
push
lds
leave
fs
xor
add
int
retf
out
je
and
adc
fistp
jne
sbb
and
push
add
and
xchg
or
adc
cmp
xor
lds
and
sbb
xor
dec
aad
xor
aaa
(bad)
pusha
push
jbe
es
push
movs
adc
js
push
das
push
(bad)
jle
and
dec
add
push
arpl
inc
aas
sub
in
mov
test
adc
dec
nop
inc
pmuludq
mov
inc
cmc
and
push
add
push
cmc
gs
test
push
add
in
adc
mov
xchg
and
jo
inc
out
and
cmps
sahf
xor
pusha
mov
xor
hlt
xlat
out
inc
rcl
cmc
and
retf
inc
inc
movs
push
int
mov
push
(bad)
mov
into
shl
in
add
loopne
popf
data16
je
and
adc
fcomp
sub
add
sub
xor
adc
imul
ins
and
cmp
push
daa
pop
mov
loopne
aad
xor
push
(bad)
ins
push
dec
les
jo
inc
imul
arpl
aam
adc
push
sub
jnp
push
test
in
mov
test
in
pcmpgtb
push
addr16
hlt
popa
mov
or
jne
inc
push
adc
gs
test
push
fld
loope
fcom
stos
xor
lods
and
test
stos
push
mov
call
xlat
les
retf
and
xchg
scas
mov
push
enter
out
test
sar
hlt
shl
retf
add
enter
(bad)
xor
mov
lahf
lds
and
add
arpl
or
sbb
daa
adc
aaa
mov
aaa
add
and
cmp
mov
loopne
aad
xor
adc
imul
movs
adc
cmp
adc
ins
(bad)
jge
fs
xor
push
jge
(bad)
push
not
inc
in
mov
test
pop
in
punpckldq
outs
addr16
hlt
ins
mov
jns
and
outs
push
fist
scas
gs
push
mov
inc
call
call
and
jo
inc
mov
(bad)
es
cmps
mov
mov
xor
jmp
adc
and
retf
scas
mov
push
retf
xor
icebp
mov
jmp
retf
add
out
fisub
out
je
and
adc
fstp
adc
in
add
or
xor
sbb
xchg
pop
jg
mov
aaa
shld
pop
movs
and
cmps
xor
inc
mov
loopne
aad
xor
adc
les
nop
jo
jo
jno
adc
addr16
jae
jg
cmp
push
dec
aad
aas
push
imul
ins
in
mov
test
in
lsl
and
hlt
dec
mov
inc
cmc
dec
pop
push
add
push
mov
add
movs
xchg
jne
xchg
out
adc
mov
jo
inc
xchg
movs
pushf
and
and
push
mov
fbstp
inc
mov
lds
inc
inc
loop
jmp
mov
push
fdivr
into
fs
fadd
lods
(bad)
cli
iretw
out
je
and
adc
fstp
xor
add
and
or
adc
cmp
push
mov
aaa
pop
movs
and
and
and
push
loopne
aad
xor
adc
dec
push
popa
les
nop
push
jp
pop
lds
gs
pop
inc
cmp
mov
push
je
jl
push
test
in
mov
test
push
in
(bad)
out
addr16
hlt
jno
bound
pop
pop
imul
in
push
mov
mov
std
add
mov
inc
mov
adc
xor
inc
xchg
movs
xchg
and
and
mov
push
repz
hlt
inc
mov
(bad)
xchg
scas
mov
push
leave
add
push
sar
fs
loope
lock
gs
leave
data16
out
je
and
adc
ficomp
sub
add
xchg
pop
adc
imul
cmc
sbb
ds
aaa
or
sub
and
sub
adc
pop
aad
xor
ds
jl
pusha
les
nop
dec
movs
jo
imul
push
inc
and
dec
or
push
ins
aad
aas
push
dec
ja
in
mov
test
add
cmp
hlt
push
mov
dec
cmc
outs
pop
outs
push
test
sti
gs
test
push
cmps
xchg
adc
inc
mov
adc
mov
jo
inc
movs
movs
mov
cmps
iret
xchg
xchg
cmps
xchg
pusha
xchg
push
call
push
jmp
and
jmp
mov
aad
stc
push
aam
retf
aad
push
cli
mov
lahf
fs
jecxz
stos
in
fisttp
fbstp
lds
ret
lahf
lea
shl
test
outs
cmp
push
rol
aas
adc
cmp
sub
and
and
xor
sbb
push
xor
aaa
(bad)
push
nop
ins
movs
outs
inc
inc
lds
das
pop
(bad)
pop
inc
push
aam
sbb
push
sub
inc
aas
pop
not
inc
in
mov
test
pop
in
punpcklbw
pusha
ins
hlt
push
mov
or
inc
pop
push
add
push
fwait
gs
add
xchg
inc
mov
adc
xchg
mov
and
jo
inc
out
call
cmps
mov
push
mov
fistp
inc
cmps
adc
and
(bad)
scas
mov
push
int
jmp
(bad)
aad
push
(bad)
mov
into
fs
xor
add
retf
(bad)
loope
mul
(bad)
je
and
adc
fcomp
jbe
aaa
shl
push
add
daa
xchg
rcr
inc
adc
cmp
movs
sub
and
xor
mov
loopne
aad
xor
push
(bad)
adc
les
ins
movs
push
inc
jb
pop
das
inc
mov
aam
add
push
jl
dec
aas
push
div
ja
in
mov
test
gs
punpckhbw
addr16
hlt
adc
dec
xchg
dec
jne
cmc
pop
pop
push
add
push
mov
add
mov
inc
mov
adc
mov
cmps
inc
xchg
movs
xchg
and
and
(bad)
xor
loopne
hlt
inc
mov
lds
inc
sti
(bad)
cmps
push
std
add
push
pushf
mov
fisub
lds
fisttp
shl
fcom
fstp
sub
popa
shr
in
add
or
xor
adc
xchg
adc
mov
aaa
adc
adc
daa
lds
pop
movs
sub
cmps
sbb
inc
mov
loopne
aad
xor
ds
jl
jl
pop
nop
jae
dec
inc
push
adc
pop
mov
aam
add
ins
aad
aas
sub
inc
ja
in
mov
test
in
subps
ja
pop
hlt
push
mov
push
cmc
pop
pop
outs
push
adc
mov
mov
jne
xchg
mov
movs
mov
and
jo
inc
stos
movs
scas
and
lods
cmps
mov
push
mov
retf
fistp
inc
mov
(bad)
xchg
scas
mov
push
aam
mov
push
sar
(bad)
lds
fisttp
xchg
les
loop
aam
xor
sub
shl
in
add
sub
sub
pop
cmc
or
jg
mov
aaa
xor
lds
and
pop
cmps
xor
add
or
pop
aad
xor
adc
les
inc
movs
adc
cmp
outs
das
push
(bad)
jle
fs
cmp
push
aas
push
not
inc
in
mov
test
sbb
aas
packuswb
push
addr16
hlt
adc
dec
cmc
pop
pop
pop
push
xchg
cmc
mov
push
xchg
xchg
adc
stos
and
jo
inc
mov
mov
xor
pusha
xchg
push
mov
fisttp
inc
cli
adc
shr
stc
push
mov
stc
xor
std
mov
xchg
xlat
xor
add
jecxz
fsub
out
je
and
adc
fcomp
or
add
cmp
add
cmp
sbb
jg
mov
aaa
push
movs
pop
lock
adc
sub
push
loopne
aad
xor
push
(bad)
push
inc
les
jo
pop
inc
pop
lds
das
pop
(bad)
ja
addr16
xor
push
popa
aad
aas
push
test
in
mov
test
push
in
punpcklbw
jg
push
hlt
ja
inc
xchg
jg
dec
cmc
push
pop
outs
push
mov
xchg
push
hlt
cmps
test
mov
inc
mov
adc
mov
mov
mov
fisub
and
push
mov
fild
inc
mov
(bad)
xchg
scas
out
inc
fcmovnb
std
push
jecxz
call
push
les
(bad)
fs
xor
add
out
vphaddwq
in
je
and
adc
out
(bad)
xchg
xor
add
add
jne
adc
and
xor
sbb
xor
jg
mov
aaa
sub
and
cmp
sbb
adc
xor
cmp
push
push
jle
and
cmp
adc
inc
(bad)
pop
inc
fs
add
push
ins
aad
aas
outs
test
in
mov
test
jnp
dec
unpcklps
jae
jg
push
mov
or
push
lods
xchg
mov
in
push
lods
gs
test
push
movs
xchg
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
fbld
xchg
cmps
test
pusha
xchg
push
cli
mov
xor
mov
in
inc
mov
(bad)
mov
stc
push
out
jmp
vpslld
mov
out
fs
xor
add
cmc
(bad)
out
je
and
adc
fstp
xor
jnp
pop
in
add
and
xor
cmp
adc
push
adc
pop
movs
ss
cmp
and
adc
pop
aad
xor
das
(bad)
dec
push
jb
ins
nop
movs
push
inc
jl
je
pop
(bad)
jno
jno
dec
add
push
arpl
inc
aas
sub
in
mov
test
gs
arpl
jl
push
addr16
hlt
popa
mov
or
pop
pop
push
push
mov
push
mul
test
push
add
jne
xchg
hlt
adc
mov
fild
movs
pushf
and
xchg
cmps
mov
push
mov
fistp
inc
mov
lds
inc
inc
out
int
movs
xor
in
movs
jbe
idiv
xlat
xor
add
in
lds
out
je
and
adc
fcomp
xor
add
and
or
add
xchg
and
mov
aaa
or
and
cmp
das
daa
pop
mov
loopne
aad
xor
dec
(bad)
push
nop
xor
lds
pop
(bad)
arpl
aam
adc
push
and
push
aas
jne
inc
ja
in
mov
test
push
in
cvtps2pd
push
addr16
hlt
sbb
bound
inc
pop
dec
push
ficom
hlt
gs
test
push
mov
cmps
adc
inc
mov
xchg
mov
ss
mov
and
jo
inc
mov
iret
mov
and
push
mov
mov
mov
mov
lock
call
and
xchg
scas
mov
push
test
iret
push
sar
lea
icebp
add
out
leave
data16
out
je
and
adc
fstp
xor
add
add
sbb
adc
xchg
push
jg
mov
aaa
adc
pop
lock
cs
cmp
or
cs
loopne
aad
xor
and
les
nop
pop
movs
dec
inc
cmp
pop
das
ds
ja
jle
pop
add
push
ins
aad
aas
dec
div
mov
test
in
punpckldq
inc
addr16
hlt
push
mov
jo
pop
pop
gs
mov
push
and
sti
add
mov
inc
xor
mov
movs
mov
and
jo
inc
out
mov
scas
cmps
popf
xor
pusha
lahf
push
mov
fistp
inc
lods
adc
and
xchg
scas
fiadd
(bad)
in
in
add
xor
(bad)
mov
leave
fs
xor
add
in
fisub
out
je
and
adc
fcomp
jno
jnp
adc
sub
jle
sub
xchg
pop
bound
adc
ss
aaa
adc
and
cmps
jge
aaa
mov
loopne
aad
xor
sub
je
jbe
and
dec
movs
pop
inc
outs
lds
das
pop
(bad)
arpl
aam
cmp
ja
inc
aas
push
not
push
in
mov
test
jp
dec
nop
inc
addr16
hlt
arpl
jb
ins
pop
outs
push
mov
push
mov
test
mov
mov
xchg
inc
mov
adc
xchg
mov
and
jo
inc
out
and
xchg
pusha
mov
xor
hlt
xlat
test
mov
(bad)
scas
mov
push
loope
jmp
cld
aad
push
ret
mov
shl
retf
add
loop
out
mov
and
adc
neg
aaa
test
and
aaa
add
adc
xchg
xadd
sbb
jg
mov
aaa
and
lds
and
push
cmps
addr16
and
xor
sbb
fs
popa
les
inc
jl
adc
pop
(bad)
dec
inc
pop
aam
sbb
push
das
aad
aas
dec
test
in
mov
test
push
in
punpckhdq
pop
addr16
hlt
push
mov
push
cmc
pop
pop
jle
adc
mov
mov
mov
inc
mov
xchg
lods
adc
stos
mov
and
jo
inc
mov
xchg
and
and
iret
xor
xchg
xlat
in
int
retf
and
xchg
scas
sti
inc
fld
icebp
push
rol
xor
sar
fs
xor
add
ror
je
and
adc
call
jb
sbb
and
pop
add
arpl
push
rcl
push
jg
mov
aaa
or
and
add
sbb
sbb
xor
dec
(bad)
ins
push
sub
push
nop
jae
push
inc
cmp
push
das
cmp
push
inc
fs
and
sbb
aad
aas
push
test
in
mov
test
gs
in
pcmpeqd
push
outs
hlt
dec
mov
push
cmc
pop
pop
push
mov
push
mov
sahf
test
push
sahf
xchg
adc
inc
mov
adc
mov
xlat
and
jo
inc
mov
iret
test
mov
pusha
ret
mov
xor
loopne
cld
inc
mov
(bad)
lock
mov
push
aam
retf
aad
push
(bad)
mov
jmp
lds
in
(bad)
clc
iretw
out
je
and
adc
fcomp
test
and
xor
and
xadd
cmc
sub
push
mov
aaa
push
movs
and
sub
addr16
xor
add
loopne
aad
xor
add
les
ins
movs
or
das
dec
(bad)
arpl
aam
and
pop
push
push
aad
aas
push
not
push
in
mov
test
push
in
sysret
out
pmuludq
jg
jnp
pop
cmc
pop
pop
push
add
push
mov
add
scas
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
fisub
cdq
cmps
sahf
xor
pusha
test
mov
xor
hlt
xlat
out
inc
ficom
shl
xchg
scas
mov
add
push
fdivr
xchg
shl
xchg
add
iret
(bad)
out
je
and
adc
fcomp
xor
and
sbb
pop
add
sub
or
ss
add
outs
mov
aaa
sub
and
and
or
pop
aad
xor
push
(bad)
inc
push
inc
les
ins
movs
push
inc
pop
lds
dec
mov
popa
aam
or
push
inc
aad
aas
push
not
push
in
mov
test
push
in
andps
push
addr16
hlt
jo
pop
xchg
cmp
cmc
pop
pop
ins
push
mov
mul
test
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
frstor
mov
mov
mov
xor
loop
mov
out
ret
and
nop
scas
stc
inc
sti
(bad)
std
push
in
add
xor
les
(bad)
shl
(bad)
add
fisttp
fbstp
clc
adc
ficomp
das
test
in
add
daa
xchg
xchg
or
and
add
cmp
movs
and
and
push
cmps
sbb
sbb
or
xor
and
adc
jno
inc
les
pop
movs
jo
cmp
inc
das
pop
(bad)
jb
inc
aam
add
ins
aad
aas
dec
imul
(bad)
in
mov
test
in
unpckhps
push
addr16
hlt
je
js
jg
or
push
lods
xchg
test
gs
test
push
rol
jne
xchg
mov
movs
mov
and
jo
inc
stos
movs
test
mov
call
pusha
retf
push
xchg
mov
xor
cmc
xlat
mov
mov
(bad)
mov
loope
aam
loopne
fcmovnbe
std
push
ret
jbe
test
add
jecxz
lds
out
je
and
adc
mov
pop
and
add
or
xchg
and
pop
cmc
inc
adc
ds
aaa
push
movs
inc
lock
sub
and
adc
inc
aad
xor
adc
les
nop
js
push
inc
ins
lds
das
xor
aam
or
push
dec
aad
aas
jno
ins
ja
in
mov
test
push
in
sysret
out
addr16
push
mov
push
cmc
pop
pop
imul
in
push
mov
mov
test
mov
inc
stc
jne
xchg
in
adc
xchg
mov
and
jo
inc
call
es
pusha
mov
xor
out
xlat
test
mov
shr
hlt
push
int
mov
push
(bad)
mov
into
fs
test
(bad)
out
je
and
adc
out
(bad)
xchg
xor
or
in
add
and
adc
add
xchg
add
mov
aaa
adc
lds
movs
es
and
adc
adc
mov
pop
dec
(bad)
bound
les
outs
movs
dec
inc
ins
lds
outs
(bad)
push
inc
jns
push
push
cs
aas
dec
imul
in
mov
test
gs
in
cmova
pop
addr16
hlt
pop
mov
add
inc
pop
outs
push
mov
mov
sti
push
icebp
cmps
test
add
mov
inc
mov
adc
mov
and
movs
xchg
and
and
mov
pushf
fistp
inc
mov
(bad)
sahf
scas
aam
clc
(bad)
fcom
mov
push
ret
jbe
not
fs
xor
add
dec
les
std
adc
out
(bad)
xchg
cs
adc
in
add
and
adc
sbb
add
sbb
movs
add
and
cmp
push
daa
adc
aad
xor
dec
(bad)
ja
imul
adc
cmp
or
gs
ja
and
xor
jb
inc
aas
push
not
dec
in
mov
test
gs
in
cmovs
inc
addr16
hlt
or
or
push
mov
mov
push
sti
lea
hlt
push
mov
mov
jne
xchg
popf
adc
xor
inc
xchg
movs
fbld
xchg
cmps
xchg
xor
pusha
xchg
push
clc
mov
xor
rcl
inc
(bad)
adc
and
xchg
scas
loopne
aad
rcl
mov
push
(bad)
mov
leave
shl
jecxz
stos
in
gs
and
xlat
je
and
adc
loop
retf
xchg
or
xor
jnp
pop
in
add
and
xadd
inc
adc
xor
add
shld
sub
cmp
and
adc
adc
aaa
xor
aas
(bad)
pop
push
jae
push
nop
ins
movs
push
inc
popa
lds
das
mov
jns
dec
or
push
ins
aad
aas
push
mul
push
in
mov
test
push
in
sysret
out
addr16
xchg
inc
jne
cmc
pop
pop
outs
push
scas
xchg
test
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
lock
mov
es
mov
push
mov
fisttp
inc
repz
inc
xchg
scas
mov
push
aad
mov
push
cli
mov
int
xlat
xor
add
loop
mul
out
je
and
jne
lahf
aad
and
add
in
add
pop
xchg
outs
xchg
adc
adc
pop
adc
cmp
ds
lds
and
and
push
loopne
aad
xor
push
(bad)
jae
outs
les
movs
inc
inc
jnp
arpl
dec
(bad)
arpl
aam
add
push
das
aad
aas
dec
imul
in
mov
test
gs
aaa
lsl
jns
push
hlt
push
mov
inc
cmc
and
gs
rcl
hlt
gs
out
add
xchg
stos
xchg
mov
mov
xchg
and
jo
inc
out
xchg
and
and
(bad)
xor
jecxz
in
inc
mov
(bad)
xchg
scas
mov
push
repz
xor
out
mov
mov
retf
add
out
(bad)
data16
out
je
and
jne
lahf
(bad)
xchg
daa
pop
imul
outs
cmp
xor
sbb
pop
adc
or
push
lock
xor
inc
movs
add
cmps
push
daa
cs
loopne
aad
xor
push
(bad)
adc
les
ins
movs
je
cmp
adc
daa
(bad)
outs
inc
fs
and
push
popa
aad
aas
push
not
fs
mov
test
pop
in
sysret
out
addr16
hlt
inc
mov
or
and
jno
mov
push
mov
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
mov
mov
xor
pusha
fwait
push
test
mov
inc
not
retf
and
sahf
scas
std
inc
mov
in
rol
div
(bad)
mov
leave
fs
xor
add
(bad)
(bad)
fisub
out
je
and
adc
loop
mov
jnp
jb
push
add
sbb
or
adc
adc
and
add
xor
cmps
aaa
daa
add
pop
loopne
aad
xor
adc
les
nop
jo
jb
jno
adc
jle
jnp
jg
jne
and
inc
aas
push
neg
inc
in
mov
test
pop
in
sysret
out
addr16
hlt
dec
mov
imul
adc
mov
lea
xchg
xchg
adc
shl
jo
inc
out
mov
es
sahf
xor
pusha
mov
xor
loope
test
mov
inc
clc
(bad)
aam
in
add
push
fdivr
into
mov
enter
iret
gs
mov
and
jne
lahf
lds
pusha
shl
in
add
and
sub
pop
cmc
or
jg
mov
aaa
adc
add
or
movs
push
daa
and
xor
adc
pop
push
popa
les
nop
push
movs
dec
inc
cmp
pop
das
pop
(bad)
arpl
aam
add
push
je
inc
aas
ja
inc
ja
in
mov
test
dec
in
sysret
out
addr16
push
mov
inc
cmc
dec
pop
jbe
adc
gs
shr
mov
mov
cmps
adc
inc
mov
adc
mov
mov
lods
movs
xchg
and
mov
xchg
pusha
fst
mov
xor
loopne
hlt
inc
fst
retf
and
imul
(bad)
push
mov
shl
mov
lock
enter
lahf
gs
repz
je
and
adc
repz
(bad)
xchg
and
shl
in
add
sbb
xchg
ja
daa
cmc
sbb
cmp
movs
sub
and
cmp
xor
adc
xor
push
(bad)
jl
je
dec
nop
jno
js
popa
lds
das
cmp
jno
jae
pop
and
sbb
aad
aas
jp
xor
mov
test
in
unpckhps
push
addr16
popa
mov
inc
cmc
jns
jg
lods
xchg
repnz
push
mov
mov
cmps
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
stos
and
mov
pusha
retf
mov
xor
ret
xlat
aad
lods
adc
and
shr
stc
push
into
add
xor
cld
mov
sahf
fs
xor
add
dec
test
fst
fstp
xor
pop
shl
in
add
and
jo
and
sbb
ds
aaa
or
lds
and
cmp
push
loopne
aad
xor
aas
(bad)
push
nop
jb
jge
arpl
adc
push
(bad)
jae
jg
dec
xor
push
ins
aad
aas
dec
test
in
mov
test
push
in
nop
and
inc
hlt
push
mov
or
inc
pop
pop
push
stos
xchg
mov
push
mov
mov
test
push
lods
xchg
jne
xchg
popf
adc
xchg
mov
and
jo
inc
out
fldenv
xchg
cmps
pushf
xor
pusha
xchg
push
xor
out
inc
repnz
and
nop
scas
in
hlt
(bad)
in
int
movs
xor
lds
into
fs
out
in
in
test
je
and
adc
fistp
aaa
test
rcr
in
add
and
or
pop
cmc
push
adc
sub
adc
sbb
sub
dec
pop
cmps
sbb
loopne
aad
xor
push
(bad)
imul
movs
inc
jb
adc
cmp
aam
add
push
pop
aad
aas
push
not
push
in
mov
test
push
in
movd
jnp
push
hlt
pop
mov
or
pop
pop
push
push
ficom
mov
add
mov
inc
mov
adc
mov
jo
inc
mov
(bad)
mov
pusha
fwait
push
mov
fistp
inc
mov
(bad)
shr
in
push
leave
add
push
ret
jbe
test
add
retf
(bad)
out
je
and
adc
fcomp
xor
add
add
xor
adc
sbb
cmp
movs
and
and
add
sbb
xor
pop
(bad)
ja
imul
dec
inc
and
ins
das
pop
(bad)
ja
and
xor
ins
aad
aas
push
test
in
mov
test
pop
in
pcmpgtd
inc
addr16
hlt
data16
jp
and
outs
push
aad
lahf
add
push
nop
gs
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
xchg
movs
fisub
cwde
cmps
mov
push
cli
mov
xor
in
xlat
out
movs
adc
inc
mov
ret
add
push
(bad)
mov
(bad)
fnstenv
jmp
call
pop
je
and
adc
loop
ficom
shl
in
add
and
or
adc
ds
aaa
daa
movs
dec
lock
cmp
add
ss
aad
xor
push
(bad)
adc
les
nop
jnp
adc
jno
dec
das
and
jae
inc
aam
or
push
dec
aad
aas
dec
test
in
mov
test
push
in
divps
push
addr16
hlt
dec
mov
jns
jg
push
add
push
in
gs
out
call
inc
xchg
jne
xchg
cwde
adc
xchg
mov
and
jo
inc
out
mov
mov
pusha
test
mov
xor
rcl
inc
mov
lds
inc
inc
loop
mov
jmp
(bad)
aad
push
fnstsw
xchg
fs
xor
add
test
je
and
adc
scas
lahf
xlat
xchg
and
test
add
and
or
xor
pop
adc
add
adc
shld
lds
and
cmp
jns
inc
mov
loopne
aad
xor
push
(bad)
ins
push
les
jo
or
lds
push
mov
addr16
and
push
sub
push
aas
aaa
div
in
mov
test
gs
in
nop
push
addr16
hlt
push
mov
push
cmc
jnp
js
test
mov
test
lea
test
mov
cmps
adc
inc
in
rcl
xor
inc
mov
xchg
and
and
into
xor
call
adc
and
sahf
scas
mov
push
test
loope
sar
shl
lds
out
retf
out
je
and
adc
rcr
xor
add
daa
xchg
pop
arpl
adc
pop
mov
aaa
adc
and
and
pop
loopne
aad
xor
push
(bad)
jl
xor
pop
nop
jae
or
lds
das
pop
mov
fs
sbb
push
ins
aad
aas
push
test
in
mov
test
in
cmovs
inc
addr16
hlt
push
mov
or
push
mov
test
gs
test
push
mov
inc
call
(bad)
call
and
jo
inc
lods
movs
fbld
xchg
cmps
cdq
xor
pusha
(bad)
push
cli
mov
xor
in
jecxz
lods
adc
and
mov
in
aam
std
xor
test
(bad)
fs
xor
add
mov
mul
out
je
and
adc
aam
int3
xchg
xor
jb
adc
and
pop
add
and
adc
push
cmp
ds
aaa
daa
movs
pop
lock
je
aas
movs
and
cmps
pop
daa
add
adc
sbb
or
pop
das
(bad)
jbe
aaa
les
nop
xor
push
das
push
(bad)
jg
arpl
dec
and
push
ins
aad
aas
push
neg
jo
push
mov
test
popa
in
cmovne
push
addr16
hlt
dec
mov
push
cmc
push
pop
pop
push
xchg
xchg
lods
add
push
mov
test
push
xchg
cmps
jne
xchg
in
adc
xchg
mov
and
jo
inc
lods
movs
pushf
and
mov
sahf
xor
pusha
mov
xor
ret
inc
jecxz
mov
aad
fld
scas
retf
(bad)
mov
xor
(bad)
mov
in
shl
xchg
add
ror
je
and
adc
fcomp
aaa
test
jbe
push
add
and
and
adc
push
mov
aaa
or
and
add
mov
loopne
aad
xor
dec
(bad)
imul
push
nop
jne
inc
inc
jb
dec
das
cmp
aam
adc
push
ins
aad
aas
jge
xor
in
mov
test
push
in
unpckhps
push
addr16
hlt
push
mov
dec
cmc
pop
pop
ins
push
adc
gs
test
add
mov
inc
nop
jne
xchg
jmp
cmp
mov
mov
lods
movs
xchg
and
and
mov
xchg
xlat
hlt
inc
mov
korw
scas
mov
push
test
loope
ret
jbe
not
fidiv
nop
add
call
out
je
and
adc
fcomp
sub
add
and
adc
adc
aaa
adc
or
cmp
xor
daa
and
and
sub
pop
aad
xor
or
jl
imul
dec
inc
ins
lds
das
pop
(bad)
bound
aam
or
push
ins
aad
aas
jle
dec
ja
in
mov
test
pop
in
addps
inc
addr16
hlt
data16
imul
pop
outs
push
(bad)
xchg
cmps
add
push
test
add
mov
inc
mov
xchg
mov
cmp
ss
mov
and
jo
inc
mov
iret
aam
test
stos
push
cli
mov
xor
(bad)
xlat
out
inc
lods
adc
and
lahf
scas
retf
(bad)
(bad)
push
mov
mov
push
clc
mov
(bad)
fs
xor
add
ror
xchg
jmp
lahf
lea
ins
sar
sub
jns
push
outs
and
or
adc
ds
aaa
push
movs
pop
lock
sub
adc
mov
loopne
aad
xor
push
(bad)
pop
push
xor
sub
push
movs
jo
cmp
push
das
aas
(bad)
jae
popa
aam
add
push
inc
aad
aas
push
div
ja
in
mov
test
push
in
packsswb
push
addr16
dec
mov
or
pop
pop
jns
adc
cmps
test
push
cmps
xchg
adc
mov
shl
xchg
movs
es
cmps
sahf
xor
pusha
stos
push
mov
fistp
inc
rcl
and
xchg
scas
mov
push
int
mov
push
(bad)
mov
into
(bad)
enter
into
ror
popf
je
and
adc
neg
aaa
test
shr
in
add
sub
or
and
sub
adc
xor
sub
xor
add
cmps
and
inc
mov
loopne
aad
xor
sbb
push
push
popa
les
inc
jb
adc
je
arpl
aam
sbb
push
test
in
mov
test
pop
in
packssdw
push
addr16
sbb
jne
cmc
pop
pop
dec
push
mov
mov
mov
hlt
mov
mov
xchg
xchg
adc
inc
mov
adc
mov
nop
inc
mov
and
xchg
pusha
test
lods
mov
xor
loopne
hlt
inc
sti
adc
inc
xchg
scas
mov
push
loopne
mov
push
ret
jbe
not
xlat
xor
add
dec
loopne
retf
and
adc
fstp
sub
arpl
xor
adc
or
adc
adc
xchg
cmp
push
mov
aaa
and
and
and
adc
cmp
daa
xor
es
jl
aaa
les
jae
dec
inc
and
push
das
pop
(bad)
je
ins
aam
and
arpl
aad
aas
pop
test
in
mov
test
in
unpckhps
pop
addr16
push
mov
or
push
lods
xchg
mov
lea
gs
add
mov
in
test
jmp
lahf
mov
and
jo
inc
mov
fbld
and
push
xchg
mov
inc
lods
adc
and
mov
stc
push
retf
xor
sar
leave
fs
xor
add
fisttp
iret
je
and
adc
fistp
sub
in
add
and
or
add
inc
adc
imul
lock
cmp
adc
jge
add
cmp
cmp
daa
xor
adc
les
ins
movs
or
lds
das
push
mov
aam
add
push
arpl
inc
aas
dec
not
push
in
mov
test
sbb
jle
dec
out
addr16
ins
mov
push
push
xchg
xchg
mov
push
mov
cwde
test
ret
adc
inc
mov
adc
cmc
mov
and
jo
inc
out
movs
pushf
and
cdq
cmps
mov
push
mov
fistp
inc
mov
lds
inc
inc
stc
push
mov
xlat
xor
in
mov
in
xlat
xor
add
dec
shl
les
(bad)
lahf
hlt
xchg
and
aaa
test
rcr
in
add
and
or
add
and
ss
xor
mov
aaa
or
and
sbb
sub
xor
inc
(bad)
push
nop
dec
movs
dec
inc
pusha
lds
pop
mov
dec
mov
push
das
aad
aas
sub
in
mov
test
gs
in
sysret
out
addr16
hlt
push
mov
inc
cmc
inc
pop
inc
push
adc
gs
xchg
test
fwait
xchg
jne
xchg
mov
xchg
mov
and
and
pushf
xor
xchg
xlat
test
repnz
cmc
scas
fld
(bad)
loopne
jmp
repz
pushf
mov
aam
shl
leave
add
jecxz
jmp
shl
fbstp
rcl
lahf
test
add
push
in
add
pop
xchg
sbb
add
sub
sbb
pop
mov
aaa
sub
and
inc
cmps
sbb
add
xor
adc
inc
push
imul
pop
inc
cmp
pop
das
dec
(bad)
ja
jl
popa
and
sbb
aad
aas
push
mul
in
mov
test
in
unpckhps
inc
addr16
hlt
je
jge
inc
jne
cmc
pop
pop
imul
test
gs
test
push
lahf
xchg
call
ss
mov
xchg
jo
inc
xchg
movs
mov
test
nop
push
cli
mov
xor
in
jmp
lds
inc
aad
in
repnz
push
sar
leave
fs
xor
add
loopne
enter
cmc
je
and
adc
ret
xchg
push
pop
das
test
adc
dec
add
add
xchg
add
pop
cmc
inc
adc
cmp
movs
pop
lock
cmp
daa
cmps
sbb
pop
mov
loopne
aad
xor
or
push
nop
dec
movs
jbe
jg
jge
pop
(bad)
jl
jg
push
add
sub
jb
pop
neg
adc
inc
mov
test
jp
xor
add
jns
jp
push
mov
inc
cmc
jp
pop
push
xchg
xchg
lods
add
push
cmc
mov
push
mov
inc
mov
adc
mov
xor
cwde
movs
pushf
and
and
mov
icebp
xlat
in
xlat
adc
and
xchg
scas
ret
inc
loopne
aad
jmp
mov
push
(bad)
mov
lock
ret
gs
enter
fnstenv
adc
lahf
xchg
xchg
sub
aaa
test
add
and
or
gs
pop
adc
push
mov
aaa
pop
movs
adc
pop
lds
and
cmp
sub
dec
aad
xor
dec
(bad)
push
push
push
inc
nop
jo
or
lds
pop
mov
addr16
xor
push
das
aad
aas
push
test
in
mov
test
push
in
cvtps2pd
push
outs
hlt
jno
bound
bound
outs
push
rcl
cmc
gs
out
xchg
push
sahf
xchg
jne
xchg
xchg
adc
div
xchg
inc
mov
shl
and
mov
pushf
fistp
inc
cli
adc
and
lds
fist
in
fst
loope
(bad)
mov
aad
in
lea
ror
je
and
jne
lahf
lds
ins
shl
push
outs
jns
pop
pop
xor
xor
push
cmc
push
adc
sub
movs
or
and
cmp
daa
daa
xor
aad
xor
adc
jl
jbe
pop
nop
xor
dec
inc
inc
lds
pop
(bad)
pop
inc
data16
sbb
ins
aad
aas
outs
test
in
mov
test
pop
out
addr16
hlt
push
mov
or
push
test
push
mov
mov
test
mov
inc
mov
adc
movs
mov
and
jo
inc
mov
cmps
and
scas
cmps
xor
xchg
push
cli
mov
xor
out
loope
lods
adc
and
iret
scas
out
inc
add
push
aam
jmp
mov
leave
fs
xor
add
jecxz
retf
out
je
and
adc
(bad)
lahf
aam
add
pop
test
and
push
add
xchg
rcl
inc
adc
ds
aaa
daa
movs
pop
lock
movs
xor
cmps
xor
cmp
adc
pop
aad
xor
adc
les
nop
ins
movs
inc
jno
or
(bad)
(bad)
jae
jl
inc
xor
dec
aad
aas
push
neg
(bad)
in
mov
test
in
nop
jne
inc
hlt
dec
mov
dec
cmc
addr16
dec
push
test
stos
add
push
cmc
mov
mov
add
jne
xchg
in
adc
xchg
mov
and
jo
inc
lock
and
lods
pusha
xchg
push
mov
fistp
inc
int3
adc
and
cmc
scas
aam
fld
sti
push
jmp
mov
push
cmc
mov
in
loope
enter
fsub
(bad)
iret
data16
and
adc
ficomp
aaa
test
rcl
in
add
sbb
je
sbb
sbb
and
sub
or
and
and
and
xor
ds
ins
push
push
push
nop
movs
pop
inc
dec
lds
push
mov
pop
aam
sbb
push
sub
push
aas
push
imul
in
mov
test
push
in
nop
pop
addr16
hlt
push
mov
push
cmc
and
jbe
test
mov
in
push
mov
add
ret
xchg
jne
xchg
mov
div
mov
mov
iret
mov
xor
pusha
mov
xor
out
xlat
jecxz
lods
adc
and
xchg
scas
mov
repz
icebp
push
rol
clc
xor
ret
mov
sahf
xchg
retf
add
out
cmc
data16
out
je
and
adc
out
lahf
(bad)
xchg
and
adc
add
cmp
xchg
or
fs
sbb
cmp
movs
pop
lock
movs
or
daa
and
pop
loopne
aad
xor
sbb
jo
imul
dec
inc
cmp
popa
das
pop
(bad)
ja
jl
dec
add
(bad)
aad
aas
push
imul
dec
in
mov
test
in
unpckhps
inc
addr16
push
mov
push
cmc
and
outs
push
scas
xchg
cmps
add
push
mul
test
push
test
mov
test
in
mov
add
cmps
and
scas
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
rcl
int
mov
lds
inc
xlat
(bad)
ficom
mov
push
(bad)
mov
shl
add
fisttp
cmc
je
and
adc
(bad)
lahf
(bad)
xchg
xor
push
test
and
push
add
cmp
pop
pop
sbb
adc
xor
inc
lock
and
and
adc
sbb
and
pop
dec
(bad)
fs
jbe
daa
nop
inc
movs
adc
aas
lds
das
mov
aam
cmp
push
sub
not
jl
sbb
jno
cmovnp
arpl
hlt
ja
or
dec
pop
push
add
push
xchg
test
push
scas
xchg
pushf
xchg
xchg
adc
jmp
jo
inc
out
pushf
and
xchg
cmps
mov
push
sahf
mov
xor
hlt
xlat
test
in
nop
scas
mov
push
enter
rcl
push
cwde
mov
(bad)
fs
in
fucom
fisub
(bad)
mul
out
je
and
adc
rcr
xor
pusha
rcr
in
add
xchg
shl
adc
or
push
lock
ins
and
and
xor
xor
dec
(bad)
fs
ins
les
nop
jno
je
jl
data16
dec
(bad)
fs
push
aam
add
push
sub
inc
aas
push
div
gs
mov
test
gs
in
sysret
out
addr16
hlt
push
mov
inc
cmc
cmp
pushw
adc
gs
test
push
pop
xor
stos
adc
lea
mov
sahf
movs
and
cmps
xchg
pusha
cdq
push
mov
fistp
inc
mov
(bad)
xchg
scas
enter
in
aam
retf
aad
push
in
test
shl
lds
fimul
(bad)
rcl
lahf
lds
pusha
shl
in
add
cmp
daa
pop
and
cmc
inc
adc
cmp
movs
sub
and
sbb
cmp
sbb
push
loopne
aad
xor
ds
inc
push
pop
les
sub
or
pop
(bad)
ja
daa
aam
add
push
dec
aad
aas
push
test
in
mov
test
in
cmovs
inc
addr16
hlt
push
mov
adc
pop
pop
outs
push
sahf
xchg
test
gs
out
mov
mov
xchg
adc
inc
mov
adc
icebp
mov
and
jo
inc
mov
les
and
mov
mov
lahf
push
jmp
adc
and
mov
fcom
call
push
sar
fs
retf
add
fimul
(bad)
les
fcomp
xor
sub
add
jle
xor
adc
or
adc
sbb
movs
cmp
add
push
and
and
daa
loopne
aad
xor
sub
push
nop
push
movs
adc
cmp
pop
das
(bad)
(bad)
jae
daa
aam
or
push
arpl
inc
aas
push
div
mov
test
pop
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
inc
pop
dec
push
test
stos
add
push
mov
add
ret
adc
inc
xchg
jne
xchg
mov
(bad)
mov
and
jo
inc
lods
movs
xchg
and
xchg
cmps
xchg
xor
pusha
mov
xor
hlt
xlat
in
inc
repnz
and
xchg
scas
mov
push
enter
aad
loop
cmp
xlat
xor
add
loop
out
repz
je
and
adc
neg
or
add
and
or
push
cmc
pop
adc
imul
das
and
cmp
or
or
sbb
pop
push
(bad)
adc
les
push
push
das
inc
(bad)
arpl
aam
add
push
imul
xor
in
mov
test
gs
in
lsl
push
addr16
adc
bound
pop
pop
pop
push
adc
gs
test
add
into
xchg
jne
xchg
mov
test
cwde
inc
scas
movs
lods
and
popf
cmps
xchg
pusha
adc
retf
xor
jecxz
mov
mov
(bad)
repnz
jmp
aad
call
div
(bad)
mov
leave
xor
add
out
leave
mov
je
and
adc
ret
xchg
pop
pop
sub
ins
rcl
in
add
and
or
sbb
sbb
push
push
aaa
sub
and
and
and
sbb
adc
sbb
daa
xor
adc
jl
ins
les
dec
movs
dec
inc
inc
lds
das
pop
(bad)
jge
addr16
add
push
push
aad
aas
push
mul
dec
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
jo
pop
pop
gs
mov
push
xchg
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
frstor
xchg
cmps
cdq
xor
pusha
mov
xor
not
test
std
inc
ret
inc
ffreep
aam
aam
mov
push
(bad)
mov
leave
fs
xor
add
mov
leave
data16
out
je
and
adc
fistp
xor
add
and
add
rol
and
mov
aaa
das
movs
pop
lock
sub
das
cmps
sbb
add
and
pop
aad
xor
add
les
nop
ins
movs
dec
inc
cmp
adc
pop
(bad)
jg
jg
dec
and
aas
push
not
jl
ins
mov
test
in
unpcklps
inc
addr16
hlt
sbb
inc
xchg
ss
cmc
pop
pop
push
add
push
mul
test
push
xchg
xchg
adc
movs
and
jo
inc
mov
iret
mov
xchg
cmps
shl
xchg
push
xor
push
xchg
xlat
test
mov
in
scas
in
inc
mov
xor
(bad)
mov
repz
xor
add
mov
enter
cli
je
and
adc
fstp
aas
test
rcr
in
add
je
sysret
ds
or
sub
and
push
mov
aaa
and
and
inc
cmps
sbb
loopne
aad
xor
add
les
movs
dec
inc
and
push
das
pop
(bad)
jne
and
bound
das
aad
aas
push
imul
inc
in
mov
test
pop
in
sysret
out
addr16
hlt
push
mov
inc
cmc
push
pop
push
push
adc
pop
mov
les
jmp
dec
and
jo
inc
stos
movs
mov
es
cmps
popf
xor
pusha
rcl
lahf
xor
in
in
inc
(bad)
adc
and
fild
mov
xor
ret
jbe
not
add
fimul
xor
jmp
pop
sub
and
and
adc
and
adc
sbb
adc
jg
mov
aaa
adc
xor
and
cmp
sbb
inc
mov
loopne
aad
xor
adc
les
inc
imul
jg
fs
add
push
sub
dec
aas
push
test
in
mov
test
pop
in
nop
addr16
hlt
push
mov
or
push
mov
push
cli
gs
mov
shr
xchg
push
mov
mov
jne
xchg
mov
cmp
xor
inc
mov
fisub
(bad)
cmps
sahf
xor
pusha
nop
push
mov
fild
inc
jecxz
into
and
mov
stc
push
fadd
shl
(bad)
mov
into
fs
xor
add
out
lahf
data16
(bad)
loop
out
div
lahf
les
jg
sbb
push
add
and
or
adc
sbb
pop
lock
xor
dec
and
dec
loopne
aad
xor
push
(bad)
dec
push
jbe
daa
nop
jnp
adc
aas
lds
(bad)
(bad)
jae
cmp
dec
and
and
js
inc
not
dec
in
mov
test
gs
packssdw
inc
addr16
hlt
ins
mov
inc
cmc
pop
pop
dec
push
test
scas
add
push
cmc
mov
mov
nop
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
lock
stos
and
test
mov
xor
mov
and
xchg
scas
hlt
inc
clc
(bad)
out
enter
aad
loop
in
mov
lds
enter
lahf
gs
iret
data16
(bad)
je
and
adc
mov
pop
adc
cmp
sbb
dec
add
jnp
aaa
pop
ds
xadd
sbb
jg
mov
aaa
pop
movs
adc
sbb
add
dec
sub
push
loopne
aad
xor
adc
les
ins
movs
je
inc
lds
pop
(bad)
jne
pop
aam
and
arpl
aad
aas
inc
not
dec
in
mov
test
sbb
out
addr16
push
mov
outs
cmc
pop
pop
pop
push
mov
mul
test
push
mov
inc
mov
adc
mov
mov
(bad)
movs
mov
mov
xchg
push
xchg
mov
xlat
loopne
in
adc
inc
fild
out
test
loope
sar
div
leave
add
in
fsub
out
je
and
adc
fstp
add
ins
shl
in
add
push
xchg
pop
and
cmc
sbb
ds
aaa
sub
and
and
pop
loopne
aad
xor
adc
les
nop
jne
jo
cmp
dec
das
pop
(bad)
ja
push
aam
and
jbe
push
aad
aas
push
mul
dec
in
mov
test
gs
in
cmovs
inc
addr16
hlt
push
mov
push
cmc
pop
pop
fs
xchg
xchg
test
gs
test
push
mov
mov
jne
xchg
out
adc
icebp
mov
and
jo
inc
lods
movs
shl
xchg
cmps
xchg
xor
pusha
mov
xor
loope
int
int3
adc
and
shr
in
in
add
xor
cmp
rol
mov
ret
out
je
and
jne
lahf
les
xor
es
add
push
xchg
sub
jl
adc
xchg
pop
jg
mov
aaa
shld
or
sub
cmp
ds
aad
xor
and
push
push
aas
les
movs
adc
dec
lds
das
(bad)
(bad)
jno
and
arpl
arpl
pop
aas
sub
push
ja
in
mov
test
in
sysret
out
addr16
hlt
jge
inc
xchg
pop
jne
cmc
push
pop
inc
push
test
scas
add
push
cmps
gs
out
test
xchg
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
hlt
movs
and
cmps
sahf
xor
pusha
test
mov
xor
hlt
xlat
out
cmps
adc
and
xchg
scas
mov
push
int
cmps
xor
les
retf
xor
add
ror
je
and
adc
ficomp
aaa
test
add
and
jl
cmp
sub
imul
xor
and
mov
loopne
aad
xor
pop
(bad)
outs
push
push
les
jae
pop
inc
dec
lds
das
pop
(bad)
jnp
fs
add
push
ja
sbb
push
test
in
mov
test
push
in
cmovle
push
addr16
hlt
sbb
sbb
cmc
pop
pop
outs
push
test
mov
push
repz
test
add
mov
inc
out
rcl
ss
mov
and
jo
inc
mov
mov
xor
pusha
fst
mov
xor
call
adc
and
xlat
scas
mov
push
int
mov
push
ret
jbe
mul
fs
add
dec
les
adc
lahf
(bad)
xchg
dec
pop
test
in
add
push
xchg
pop
and
adc
cmp
movs
cmp
pop
lds
and
cmp
cmp
loopne
aad
xor
adc
jl
les
jae
push
inc
cmp
pop
das
(bad)
(bad)
ja
addr16
sbb
push
xor
popa
aas
push
test
in
mov
test
sbb
jno
adc
hlt
je
jge
jg
or
push
stos
xchg
test
gs
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
xchg
loop
mov
mov
push
mov
fistp
inc
cli
adc
and
aad
cmps
inc
aad
stc
push
into
add
xor
(bad)
mov
(bad)
fs
xor
add
jecxz
fisub
out
je
and
adc
loop
retf
xchg
and
and
add
das
xchg
xor
adc
ds
aaa
or
add
cmp
sub
push
cmps
xor
cs
loopne
aad
xor
dec
(bad)
push
nop
jne
adc
cmp
jne
aas
(bad)
jb
jg
dec
add
push
ins
aad
aas
ins
test
in
mov
test
gs
unpcklpd
inc
addr16
hlt
dec
mov
or
dec
pop
js
test
jmp
gs
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
xchg
movs
scas
and
xchg
cmps
xor
mov
xor
(bad)
xlat
loope
mov
lds
inc
icebp
(bad)
in
jmp
aad
push
in
mov
into
xlat
xor
add
enter
(bad)
out
je
and
adc
repnz
lds
pusha
shl
in
add
jp
aas
pop
xor
adc
push
mov
aaa
add
adc
pop
lds
and
or
pop
loopne
aad
xor
push
(bad)
dec
push
jno
sub
push
lds
pop
(bad)
arpl
aam
and
inc
push
je
inc
aas
push
test
in
mov
test
pop
in
lsl
push
addr16
dec
mov
pop
cmc
pop
pop
imul
xchg
mov
lods
push
lea
test
push
xchg
xchg
jne
xchg
call
ss
(bad)
and
jo
inc
cmps
movs
and
nop
pusha
movs
push
mov
fistp
inc
int
repnz
xchg
scas
mov
push
leave
add
xor
(bad)
mov
shl
enter
pushf
fimul
loope
out
and
adc
fcomp
sub
add
and
adc
pop
cmc
sbb
jg
mov
aaa
or
and
sbb
jns
cmp
aad
xor
adc
adc
les
movs
or
lds
das
pop
(bad)
jg
fs
xor
push
das
aad
aas
jle
inc
ja
in
mov
test
in
unpckhps
inc
addr16
push
mov
inc
cmc
jbe
outs
push
mov
mov
sahf
test
push
mov
xchg
adc
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
fsub
lods
cmps
mov
and
div
mov
inc
mov
lds
inc
aad
(bad)
push
out
mov
push
cld
mov
leave
fs
xor
add
ror
je
and
adc
loop
lds
jg
cmp
cmp
jg
and
jle
xor
jge
or
adc
aas
mov
aaa
shld
and
cmp
add
push
loopne
aad
xor
push
(bad)
outs
push
jbe
and
jno
pop
das
pop
(bad)
jae
jg
xor
arpl
pop
aas
and
in
mov
test
jl
dec
sysret
out
addr16
hlt
jle
inc
xchg
aaa
jne
cmc
pop
pop
pop
push
pushf
xchg
test
test
add
scas
xchg
jne
xchg
mov
ss
and
jo
inc
cmps
movs
frstor
mov
mov
xor
into
xlat
ret
inc
mov
(bad)
xchg
scas
fild
mov
xor
les
enter
iret
add
loop
cmc
data16
out
je
and
adc
repz
lds
pusha
rcr
in
add
xchg
pop
ds
or
push
cmc
add
jg
mov
aaa
shld
das
lds
pop
cmps
sbb
loopne
aad
xor
and
adc
les
push
push
inc
push
or
pop
mov
aam
and
push
das
aad
aas
pop
test
in
mov
test
gs
in
cvtdq2ps
cmp
hlt
dec
mov
inc
cmc
push
pop
jle
adc
gs
test
push
test
mov
adc
mov
and
movs
pushf
and
and
ret
xor
lock
out
inc
loopne
in
and
std
scas
into
inc
add
cld
xor
fdivr
xchg
shl
retf
add
out
sahf
data16
fidiv
rcl
lahf
lds
ins
rol
in
add
or
jae
push
cmc
aas
adc
movzx
aaa
push
movs
sub
and
and
pop
loopne
aad
xor
adc
inc
push
dec
les
nop
ins
movs
js
jns
adc
ins
(bad)
jae
jns
sub
dec
push
jbe
inc
aas
push
mul
gs
mov
test
gs
popa
nop
inc
addr16
hlt
jbe
pop
xchg
pop
jne
cmc
jns
ja
lods
xchg
test
gs
test
push
xchg
xchg
adc
inc
cmps
jne
xchg
mov
movs
mov
and
jo
inc
lods
movs
cdq
and
mov
xchg
push
lods
mov
xor
in
jmp
and
mov
fist
out
jmp
lods
push
xchg
fsub
lds
fisttp
fbstp
out
out
mov
lahf
les
and
and
or
jns
cmp
cmp
adc
push
mov
aaa
shld
cmp
sbb
and
adc
or
sbb
pop
push
(bad)
jbe
imul
jne
popa
lds
das
pop
mov
push
sbb
push
imul
aas
push
imul
(bad)
in
mov
test
push
in
movq
push
addr16
ins
mov
inc
cmc
jo
push
add
push
mov
mov
mov
push
mov
inc
mov
adc
mov
xchg
and
jo
inc
in
movs
call
cmps
sahf
xor
pusha
stos
push
mov
fistp
inc
repnz
and
xchg
scas
loopne
aad
stc
push
jmp
push
(bad)
mov
into
shl
rol
(bad)
fsub
out
je
and
adc
fcomp
das
test
add
and
or
jge
sbb
adc
add
xor
xor
sbb
cmp
xor
push
(bad)
inc
push
push
les
jo
dec
inc
jb
adc
xor
aam
adc
push
and
pop
aas
push
test
in
mov
test
popa
in
sysret
out
addr16
push
mov
outs
cmc
dec
pop
outs
push
adc
test
out
mov
cmps
adc
inc
xchg
xchg
test
mov
mov
and
jo
inc
mov
fisub
and
pushf
xor
loopne
mov
lds
retf
and
xchg
scas
sti
inc
add
push
mov
aad
push
ret
jbe
mul
shl
retf
add
loope
clc
data16
out
ret
and
adc
out
lahf
call
test
in
add
and
xchg
rcl
push
jg
mov
aaa
push
movs
inc
lock
lds
and
pop
cmps
adc
sbb
sbb
xor
dec
(bad)
adc
les
movs
dec
inc
xor
je
pop
(bad)
pusha
inc
addr16
add
push
pop
aad
aas
push
not
(bad)
in
mov
test
sbb
push
addr16
hlt
push
mov
or
push
lods
xchg
movs
add
push
mul
test
push
scas
xchg
adc
ss
mov
and
jo
inc
lods
movs
fsub
xchg
cmps
test
pusha
xchg
push
test
mov
in
xlat
jmp
stc
adc
and
shr
movs
push
mov
mov
push
(bad)
mov
leave
fs
lock
dec
shl
adc
ficomp
sub
add
cmp
xor
cmp
adc
ds
aaa
pop
movs
dec
lock
(bad)
adc
jge
pop
mov
loopne
aad
xor
adc
pop
push
jbe
cmp
jno
push
das
push
(bad)
ja
pop
aam
adc
push
arpl
pop
aas
sub
pop
ja
in
mov
test
adc
outs
sysret
out
addr16
ins
mov
pmaddwd
ins
push
xchg
xchg
test
test
push
scas
xchg
jne
xchg
jecxz
xchg
(bad)
jmp
jo
inc
out
cmps
and
nop
cmps
xor
xchg
push
mov
(bad)
push
in
jmp
and
fild
rcl
mov
push
(bad)
mov
shl
add
loop
iret
data16
(bad)
je
and
adc
loopne
lds
and
xor
or
add
xor
adc
cmp
movs
adc
push
lds
add
push
loopne
aad
xor
pop
(bad)
pop
push
popa
les
push
lds
pop
(bad)
arpl
aam
and
pop
push
dec
aad
aas
push
imul
ins
in
mov
test
push
in
cmovo
push
addr16
hlt
push
mov
or
push
xchg
hlt
gs
stos
add
mov
cmps
adc
inc
mov
adc
xchg
mov
and
jo
inc
xchg
movs
xchg
and
and
mov
push
rcl
hlt
inc
mov
(bad)
sahf
scas
mov
push
enter
rcl
push
cwde
mov
in
fs
xor
add
fisttp
loop
loope
adc
lahf
(bad)
xchg
push
pop
or
in
add
jl
daa
pop
cmp
cmc
sbb
cmp
movs
sub
and
add
mov
loopne
aad
xor
ss
jo
imul
dec
inc
xor
jo
ds
je
dec
aam
add
(bad)
aad
aas
pop
test
in
mov
test
pop
in
pcmpeqb
dec
addr16
hlt
push
mov
or
push
lods
xchg
hlt
add
push
mul
test
add
mov
stc
adc
inc
mov
test
lods
cmps
mov
and
jo
inc
cdq
movs
mov
cmps
iret
fsub
and
xor
xlat
jmp
lods
adc
and
call
(bad)
mov
xor
(bad)
mov
icebp
fs
xor
add
lds
xor
adc
fcomp
xor
sar
in
add
and
or
adc
ds
aaa
dec
movs
cs
lds
and
and
or
pop
aad
xor
push
(bad)
jl
dec
les
nop
jne
pop
inc
jno
ins
das
push
(bad)
jge
cmp
xor
arpl
jb
js
push
ja
in
mov
test
sbb
cmovne
push
addr16
hlt
pop
mov
or
pop
pop
pop
push
test
xchg
add
push
hlt
gs
test
push
movs
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
lea
lahf
cmps
mov
pusha
xchg
push
test
lods
push
(bad)
xlat
fiadd
retf
and
xchg
scas
les
(bad)
out
mov
mov
push
(bad)
mov
hlt
xlat
xor
add
lds
fdiv
(bad)
adc
out
(bad)
xchg
adc
aaa
test
imul
push
outs
and
xchg
sar
cmp
sub
sbb
sbb
aaa
and
and
adc
sub
aaa
xor
sub
jbe
aaa
les
jo
dec
inc
jb
pop
das
inc
(bad)
arpl
aam
xor
push
push
aad
aas
push
test
in
mov
test
in
lsl
gs
hlt
push
mov
or
inc
pop
inc
push
adc
gs
std
add
mov
cmps
adc
inc
mov
adc
mov
mov
mov
iret
ret
and
mov
push
hlt
xlat
iret
inc
fst
mul
shr
loope
retf
add
xor
pushf
mov
(bad)
shl
(bad)
add
ror
je
and
adc
fstp
sub
jnp
xor
adc
sbb
sub
adc
xchg
ss
mov
aaa
pop
movs
add
and
daa
cmps
jge
xor
xor
or
jg
les
jae
jne
dec
lds
dec
(bad)
ja
arpl
cmp
inc
mov
push
push
aad
aas
ins
neg
ins
in
mov
test
inc
in
cmovno
outs
addr16
hlt
push
mov
pop
cmc
pop
pop
fs
lods
xchg
test
xchg
test
mov
inc
mov
adc
test
mov
and
and
xor
xlat
(bad)
inc
lods
adc
and
lahf
scas
hlt
inc
loope
stc
push
retf
add
push
in
mov
jmp
in
xor
add
out
(bad)
out
je
and
adc
fstp
aaa
test
je
adc
xor
es
and
cmc
adc
jg
mov
aaa
add
and
and
add
pop
aad
xor
adc
gs
dec
les
nop
jb
dec
inc
cmp
push
das
push
(bad)
pop
inc
push
aam
or
push
arpl
add
push
div
mov
test
sbb
xor
pop
out
addr16
ins
mov
inc
cmc
jl
imul
in
push
call
out
call
inc
mov
adc
mov
mov
hlt
movs
lods
and
sahf
cmps
(bad)
xor
pusha
fst
mov
xor
(bad)
in
inc
mov
lds
inc
inc
stc
push
fld
mov
push
cmp
xlat
xor
add
loop
into
repz
je
and
adc
lds
add
cmp
or
dec
add
daa
xchg
pop
cmp
jno
add
add
push
mov
aaa
pop
movs
adc
dec
lds
dec
and
dec
loopne
aad
xor
dec
(bad)
ins
push
popa
les
ins
movs
dec
inc
jb
adc
cmp
arpl
aam
add
push
dec
aad
aas
ja
je
push
in
mov
test
jge
push
lsl
push
addr16
hlt
inc
mov
or
cs
outs
push
adc
gs
test
add
into
xchg
jne
xchg
mov
mov
mov
xchg
xchg
es
pusha
xchg
push
stc
mov
xor
rcl
hlt
inc
mov
korw
scas
mov
push
test
iret
push
sar
xlat
xor
add
mov
out
(bad)
ret
je
and
adc
out
(bad)
xchg
pop
pop
test
in
add
and
or
sbb
xchg
push
jg
mov
aaa
adc
and
push
cmps
sbb
add
sub
inc
aad
xor
adc
inc
push
dec
les
jo
push
inc
imul
outs
inc
fs
and
sbb
aad
aas
push
test
in
mov
test
gs
in
cmovs
ja
inc
hlt
push
mov
or
push
lods
xchg
add
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
stos
movs
and
mov
push
mov
fistp
inc
lods
adc
and
sahf
scas
fiadd
mov
xor
lds
leave
xlat
xor
add
fimul
xchg
adc
xor
and
add
jle
xor
cmp
cmc
inc
adc
cmp
movs
adc
push
lds
and
and
add
pop
aad
xor
sbb
pop
push
ja
sub
inc
popa
lds
das
push
(bad)
jae
jg
dec
and
pop
push
imul
pop
ja
in
mov
test
adc
bound
pop
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
pop
push
mov
push
cmc
mov
cmps
push
mov
mov
adc
xchg
mov
and
jo
inc
hlt
movs
test
in
test
pusha
pushf
push
mov
fist
repnz
and
nop
scas
out
jecxz
out
int
mov
push
fidivr
into
fs
xor
add
loop
lahf
mov
je
and
adc
fistp
xor
add
and
or
sbb
or
jg
mov
aaa
or
and
sbb
add
pop
aad
xor
push
(bad)
ins
push
xor
and
jl
or
ins
mov
addr16
cmp
push
cs
aas
push
test
in
mov
test
push
in
unpcklps
inc
addr16
hlt
push
mov
or
inc
pop
or
adc
gs
test
push
mov
inc
mov
adc
mov
jo
inc
mov
xchg
and
and
lahf
xor
xchg
xlat
out
inc
int
out
and
enter
aad
call
stos
xor
pushf
mov
xchg
shl
xchg
add
out
leave
repnz
je
and
adc
fistp
sub
in
add
and
adc
add
or
xor
movs
adc
and
sbb
push
loopne
aad
xor
adc
je
imul
push
inc
cmp
dec
das
dec
(bad)
ja
jns
jae
inc
mov
push
dec
aad
aas
push
test
in
mov
test
pop
in
unpckhps
inc
addr16
or
js
inc
pop
imul
xchg
icebp
add
push
fwait
gs
test
push
add
mov
movs
mov
and
jo
inc
xchg
cdq
and
push
call
push
in
xlat
out
inc
in
enter
repz
ret
inc
out
(bad)
fst
mov
push
lds
out
fs
xor
add
loop
and
(bad)
je
and
adc
repnz
les
jnp
sbb
push
add
xor
xchg
add
pop
cmc
inc
adc
imul
lock
cmp
and
adc
pop
aad
xor
push
(bad)
inc
push
sub
movs
adc
and
jne
push
(bad)
jg
jno
dec
add
arpl
pop
aas
sub
pop
ja
in
mov
test
sbb
nop
js
inc
hlt
dec
mov
pop
cmc
pop
pop
dec
push
test
nop
add
push
cmc
mov
mov
cdq
xchg
adc
inc
mov
adc
xor
inc
out
(bad)
sahf
cmps
movs
xor
pusha
xchg
push
xor
fild
leave
and
lahf
scas
leave
inc
clc
(bad)
rcl
call
push
fnstcw
retf
xor
add
lods
(bad)
out
je
and
cmps
lahf
out
xchg
and
or
in
add
and
adc
add
sbb
jg
mov
aaa
aaa
movs
adc
xor
sbb
and
or
pop
aad
xor
dec
(bad)
ins
push
ins
les
jb
dec
inc
jb
push
das
pop
(bad)
pusha
inc
ja
push
add
push
push
aad
aas
imul
ja
in
mov
test
adc
pop
sysret
out
addr16
hlt
popa
mov
jg
pop
pop
pop
push
mov
push
mov
add
mov
cmps
adc
inc
test
fcom
in
icebp
mov
and
jo
inc
mov
fisub
mov
xchg
push
cwde
mov
xor
enter
call
(bad)
iret
scas
aam
std
(bad)
xlat
push
leave
add
xor
fstp
retf
fidiv
retf
add
mov
leave
data16
(bad)
je
and
adc
ficomp
add
add
cmp
push
rcl
add
adc
cmp
adc
movs
and
daa
sbb
add
xor
adc
push
inc
les
nop
jae
push
inc
lds
dec
(bad)
pop
inc
fs
adc
push
arpl
add
pop
test
pop
mov
test
(bad)
out
addr16
hlt
bound
push
cmc
jle
outs
push
scas
xchg
mov
lea
gs
test
add
mov
inc
mov
adc
scas
mov
and
jo
inc
mov
fbld
lahf
cmps
test
pusha
test
mov
fistp
inc
icebp
adc
and
shr
icebp
push
retf
xor
test
xchg
xor
add
fisttp
fbstp
les
cli
lahf
les
jnp
and
push
add
or
xchg
adc
add
inc
adc
ds
aaa
sub
lds
pop
cmps
xor
sbb
xor
adc
push
push
je
push
nop
dec
movs
push
inc
imul
jg
arpl
dec
cmp
sub
pop
aas
ins
neg
jo
sbb
pop
in
mulps
push
addr16
ins
mov
pop
cmc
pop
pop
push
xchg
xchg
scas
add
push
and
in
fsubrp
test
scas
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
mov
iret
call
pusha
mov
xor
hlt
xlat
test
and
xchg
scas
cmc
inc
out
(bad)
out
mov
fcom
mov
leave
test
out
jmp
in
loop
enter
fbstp
rcl
lahf
std
xchg
and
and
add
xchg
pop
ds
and
jge
sbb
jg
mov
aaa
pop
movs
adc
sbb
cmp
inc
cmps
push
daa
or
and
xor
or
inc
push
popa
les
inc
and
inc
das
cmp
aam
add
push
sub
not
push
in
mov
test
sbb
xor
add
push
addr16
push
mov
inc
cmc
jns
outs
push
adc
gs
out
mov
adc
inc
xchg
jne
xchg
(bad)
adc
stos
mov
and
jo
inc
out
movs
xchg
and
and
xchg
xor
jmp
retf
adc
inc
loope
iret
inc
mov
push
enter
rcl
push
out
mov
into
shl
retf
add
mov
xchg
out
je
and
adc
fstp
sub
shl
add
and
xor
sbb
cmp
xor
sbb
sbb
cmp
adc
adc
sbb
adc
xor
or
es
jl
jo
dec
nop
jae
pop
inc
lds
das
push
mov
fs
sbb
push
sub
jle
jle
dec
ja
in
mov
test
pop
in
cmove
and
pop
hlt
inc
mov
dec
cmc
and
outs
push
stos
xchg
mov
loopne
jmp
add
mov
loop
mov
xchg
mov
movs
mov
and
jo
inc
lods
movs
call
cmps
mov
push
pushf
mov
xor
icebp
xlat
inc
repz
mov
stc
push
enter
(bad)
push
cmp
lds
fimul
fbstp
loop
out
xor
aam
xor
add
add
and
push
shl
inc
adc
imul
lock
movs
and
cmps
xor
add
dec
loopne
aad
xor
adc
les
xor
adc
data16
jae
jg
imul
push
neg
dec
in
mov
test
push
in
unpcklps
push
addr16
xchg
and
inc
cmc
pop
pop
imul
in
push
nop
gs
test
add
rol
jne
xchg
in
adc
mov
mov
out
mov
es
movs
xor
pusha
adc
popf
xor
out
inc
(bad)
and
fild
loop
jmp
mov
push
(bad)
mov
hlt
xlat
xor
add
enter
aam
xlat
je
and
adc
rcr
sub
add
cmp
xchg
add
adc
push
mov
aaa
add
and
pop
cmps
adc
loopne
aad
xor
push
(bad)
ins
push
dec
les
push
lds
pop
(bad)
pusha
inc
push
aam
add
push
pop
aad
aas
push
div
adc
ins
mov
test
push
in
minps
push
addr16
hlt
ja
pop
xchg
jg
or
bound
outs
push
scas
xchg
mov
sti
push
cli
gs
test
add
mov
inc
mov
adc
cmps
mov
and
jo
inc
mov
iret
pushf
es
cmps
xchg
pusha
adc
iret
xor
loopne
fiadd
leave
and
xlat
scas
les
mov
xor
ret
jbe
not
fs
nop
add
in
(bad)
out
je
and
adc
fstp
add
add
and
xor
adc
xchg
and
push
movs
cmp
add
movs
sub
cmp
adc
or
pop
loopne
aad
xor
adc
jl
popa
les
imul
das
ds
jb
push
aam
and
push
jbe
inc
aas
push
imul
pop
in
mov
test
pop
in
addps
inc
addr16
hlt
push
mov
popa
cmc
and
outs
push
mov
xchg
add
push
mul
test
add
cdq
xchg
test
call
and
jo
inc
mov
frstor
xchg
xchg
push
std
mov
xor
not
mov
cld
inc
shr
stc
push
std
add
push
ret
jbe
idiv
xor
add
fimul
fbstp
les
mov
pop
jne
xor
and
cmp
cmp
xor
jge
and
pop
cmc
sub
aas
mov
aaa
add
and
xor
jge
sbb
xor
add
les
je
push
inc
jno
pop
das
cmp
aam
or
push
dec
aad
aas
push
test
in
mov
test
in
nop
jnp
pop
hlt
ins
mov
push
cmc
dec
pop
ins
push
mov
mov
test
push
xchg
xchg
jne
xchg
in
adc
mov
xchg
and
jo
inc
xchg
fldenv
test
xchg
push
mov
fbstp
inc
repnz
and
nop
scas
fild
(bad)
out
enter
aad
stc
push
in
out
jbe
imul
xlat
xor
add
loop
call
and
adc
cmps
lahf
rcl
pusha
sar
push
add
and
aaa
rcl
add
mov
aaa
pop
movs
pop
lock
movs
es
and
or
pop
aad
xor
pop
(bad)
ins
push
popa
les
jo
dec
inc
ins
lds
pop
(bad)
push
inc
addr16
add
push
das
aad
aas
test
in
mov
test
jno
pop
sysret
out
addr16
hlt
push
mov
inc
cmc
popw
inc
push
adc
gs
add
scas
xchg
jne
xchg
lods
adc
mov
aad
mov
mov
cwde
cmps
xchg
pusha
mov
mov
(bad)
push
jmp
adc
and
lahf
scas
fild
(bad)
in
fiadd
mov
push
fnstsw
(bad)
fidiv
rol
ror
(bad)
rcl
lahf
mov
jg
sub
or
sub
or
adc
xchg
push
jg
mov
aaa
or
and
and
or
xor
pop
(bad)
ins
push
imul
dec
inc
cmp
or
arpl
ja
pusha
aam
and
sbb
aad
aas
outs
neg
dec
in
mov
test
in
cmovb
and
hlt
push
jne
inc
jne
cmc
pop
pop
outs
push
xchg
xchg
test
gs
shr
lods
push
mov
inc
xor
xchg
adc
div
leave
inc
mov
fbld
test
(bad)
push
stos
mov
xor
jmp
and
xchg
scas
mov
push
retf
xor
(bad)
mov
in
xor
add
fisttp
fdiv
rcl
fcomp
xor
pusha
ror
in
add
sbb
sub
pop
cmc
ds
push
mov
aaa
shld
push
lds
and
and
adc
pop
aad
xor
adc
je
jbe
ins
nop
dec
movs
adc
lds
dec
(bad)
push
inc
js
dec
xor
push
arpl
pop
aas
neg
dec
in
mov
test
ins
in
sysret
out
addr16
dec
mov
jge
cs
js
test
mov
gs
stc
add
mov
inc
mov
adc
mov
mov
jo
inc
out
pushf
and
xchg
cmps
lods
xor
pusha
xchg
push
mov
lods
push
repnz
test
std
inc
call
(bad)
out
iret
add
xor
fistp
int3
xlat
xor
add
iret
(bad)
in
mul
(bad)
je
and
adc
out
lahf
lds
pusha
shl
push
outs
add
sub
cmp
sbb
jg
mov
aaa
push
movs
pop
lock
or
sub
adc
xor
push
(bad)
ins
push
xor
ja
jo
outs
inc
imul
push
inc
dec
aam
add
push
das
aad
aas
dec
not
push
in
mov
test
sbb
pop
lsl
push
addr16
hlt
push
mov
inc
cmc
push
pop
jno
mov
mov
gs
movs
add
mov
inc
test
xchg
in
adc
mov
jo
inc
mov
iret
xchg
es
test
pusha
xchg
push
xor
push
loopne
hlt
inc
in
mov
inc
shr
loope
leave
add
xor
(bad)
mov
xlat
fidiv
loope
in
in
gs
(bad)
out
je
and
jne
lahf
ficom
add
add
sub
xor
adc
xchg
cmp
add
movs
cs
or
pop
cmps
and
inc
mov
loopne
aad
xor
adc
les
push
movs
push
inc
cmp
(bad)
ja
push
aam
add
push
(bad)
aad
aas
push
not
dec
in
mov
test
in
addps
inc
addr16
hlt
or
pmaddwd
push
movs
xchg
mov
out
mul
test
push
scas
xchg
test
stos
push
mov
out
mov
mov
pusha
xchg
push
div
xchg
push
jmp
and
xchg
scas
rol
out
int3
add
xor
cmp
xlat
add
ror
shl
popf
adc
repnz
les
jnp
adc
test
outs
pop
xchg
adc
adc
ds
aaa
shld
lds
and
sbb
dec
loopne
aad
xor
adc
dec
push
jbe
and
jno
inc
das
inc
(bad)
jae
jae
dec
sbb
push
xor
pusha
aas
push
neg
jb
push
mov
test
jno
pop
(bad)
out
addr16
dec
mov
pop
cmc
pop
pop
push
add
push
cmc
mov
mov
mov
inc
mov
adc
cmps
mov
and
jo
inc
out
movs
xchg
and
xchg
cmps
xor
mov
xor
jmp
and
(bad)
scas
mov
push
std
add
xor
(bad)
mov
into
shl
clc
add
retf
mul
out
xchg
and
adc
movs
lahf
lds
cmp
and
daa
add
and
xchg
add
sbb
sbb
adc
adc
push
lds
and
pop
cmps
sbb
loopne
aad
xor
push
(bad)
adc
nop
jbe
pop
inc
jb
adc
dec
(bad)
arpl
aam
add
push
push
aad
aas
push
div
in
mov
test
gs
in
lsl
push
outs
hlt
inc
mov
push
cmc
pop
pop
pushw
adc
gs
stos
add
scas
xchg
jne
xchg
mov
mov
mov
lods
movs
fisub
test
mov
xor
loopne
lock
mov
(bad)
xchg
scas
loop
out
icebp
push
retf
xor
repz
lock
into
add
fisttp
les
rcl
lahf
(bad)
xchg
push
pop
das
test
rcl
in
add
and
adc
sbb
sbb
cmp
movs
sub
and
and
pop
loopne
aad
xor
ss
jl
sub
inc
nop
dec
movs
dec
inc
(bad)
lds
das
pop
(bad)
je
and
outs
adc
push
push
pop
aas
aaa
div
inc
in
mov
test
in
unpckhps
jne
jge
push
mov
or
push
lods
xchg
scas
add
push
mul
test
push
mov
inc
loope
mov
stos
mov
rol
movs
mov
es
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
in
out
inc
mov
lds
inc
inc
icebp
push
aam
mov
push
(bad)
mov
leave
fs
add
repz
out
je
and
adc
ficomp
adc
add
and
push
rol
aaa
adc
adc
sub
and
add
ss
aad
xor
adc
les
inc
movs
pop
inc
cmp
jge
push
(bad)
bound
aam
and
pop
push
jbe
pusha
aas
push
not
push
in
mov
test
push
in
cmovge
pop
addr16
hlt
dec
mov
dec
cmc
cs
push
add
push
cmc
gs
test
add
cmps
xchg
adc
sahf
and
jo
inc
out
and
cmps
movs
xor
pusha
mov
xor
aam
int
mov
lds
inc
inc
out
mov
mov
push
(bad)
mov
into
fs
clc
add
lods
(bad)
xchg
mul
(bad)
(bad)
adc
fistp
aaa
test
sbb
push
add
add
aaa
pop
ds
or
adc
and
or
jno
pop
movs
adc
push
lds
and
or
pop
aad
xor
adc
les
xor
pop
das
pop
(bad)
push
inc
pop
aam
cmp
pop
push
das
aad
aas
aaa
test
in
mov
test
gs
nop
and
hlt
push
mov
inc
cmc
daa
pop
push
push
adc
gs
test
add
mov
inc
lahf
jne
xchg
scas
adc
mov
jo
inc
scas
movs
movs
and
xchg
cmps
test
pusha
xchg
push
mov
fistp
inc
mov
(bad)
mov
out
leave
add
push
ret
jbe
not
fs
rol
(bad)
out
je
and
adc
fistp
sub
pusha
shl
pop
outs
and
xor
sbb
and
push
movs
sub
and
cmp
mov
loopne
aad
xor
adc
imul
cmp
lds
jne
gs
inc
aam
add
push
pop
aad
aas
push
imul
in
mov
test
push
in
cvtps2pd
jle
outs
hlt
pop
mov
(bad)
cmc
pop
pop
push
add
push
call
out
mov
adc
inc
mov
xchg
scas
adc
icebp
mov
and
jo
inc
mov
iret
mov
xchg
cmps
xor
mov
loopne
mov
lods
adc
and
mov
stc
push
jmp
push
fnstsw
leave
fs
xor
add
jecxz
cld
data16
popf
je
and
adc
loop
mov
jg
and
test
outs
cmp
push
rcl
sbb
jg
mov
aaa
xor
and
push
cmps
xor
sbb
xor
adc
les
nop
dec
movs
push
inc
lds
(bad)
push
inc
pop
aam
or
push
arpl
inc
aas
inc
mul
push
in
mov
test
sbb
push
sysret
out
addr16
dec
mov
push
cmc
addr16
inc
push
stos
xchg
xchg
add
push
hlt
gs
out
fwait
push
mov
inc
mov
adc
mov
mov
and
xchg
cmps
into
xor
pusha
xchg
push
mov
fistp
inc
lods
adc
and
fisubr
into
push
int
mov
push
(bad)
mov
into
fs
int3
add
out
(bad)
loop
hlt
out
je
and
adc
out
lds
pusha
rcr
in
add
jg
aaa
pop
xor
adc
add
movs
adc
dec
lds
and
cmp
sbb
loopne
aad
xor
das
(bad)
push
push
jb
inc
nop
dec
movs
dec
inc
pop
lds
push
(bad)
cmova
push
sbb
push
das
aad
aas
sub
inc
ja
in
mov
test
pop
in
lsl
push
addr16
hlt
dec
mov
imul
pop
outs
push
xchg
xchg
mov
call
gs
push
add
jne
xchg
mov
mov
cwde
inc
lock
pushf
and
mov
xchg
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
(bad)
(bad)
aam
leave
add
push
ret
mov
(bad)
fs
leave
add
out
(bad)
call
and
adc
std
lahf
(bad)
xchg
and
adc
add
and
or
aas
cmc
sbb
ds
aaa
push
movs
sub
and
and
push
loopne
aad
xor
adc
inc
push
jbe
cmp
cmp
adc
pop
(bad)
ja
fs
sub
sbb
aad
aas
outs
test
in
mov
test
jp
popa
nop
inc
addr16
hlt
pop
mov
dec
cmc
pop
pop
pop
push
mov
push
and
mov
push
scas
xchg
jne
xchg
scas
adc
scas
mov
and
jo
inc
xchg
movs
fbld
mov
pusha
retf
mov
xor
out
xlat
les
retf
and
shr
out
aam
jmp
int3
aad
push
(bad)
mov
leave
fs
xor
add
fimul
(bad)
je
and
adc
ret
lahf
mov
jg
je
push
add
aas
xchg
shl
inc
adc
ds
aaa
pop
movs
cmp
sbb
xor
adc
xor
add
or
adc
daa
xor
adc
les
inc
movs
dec
inc
jno
pusha
das
push
(bad)
jo
and
or
push
arpl
inc
aas
pop
neg
push
in
mov
test
pop
in
orps
jge
pop
hlt
push
mov
jp
jl
jno
lods
xchg
scas
add
push
icebp
mov
mov
adc
inc
mov
adc
xor
inc
hlt
movs
test
popf
iret
lahf
es
cmps
sahf
xor
pusha
(bad)
push
mov
stos
push
(bad)
out
mov
(bad)
(bad)
scas
mov
push
int
jmp
std
aad
push
(bad)
mov
xchg
fs
enter
fwait
ror
fnstenv
les
fstp
aaa
test
ror
in
add
and
aaa
shl
and
push
mov
aaa
dec
movs
adc
sbb
sub
pop
movs
and
cmps
aas
daa
sbb
xor
push
(bad)
push
push
popa
les
sub
lds
pop
(bad)
js
jns
push
add
push
inc
aad
aas
dec
mul
in
mov
test
sbb
pop
nop
inc
addr16
hlt
dec
mov
inc
cmc
bound
outs
push
test
hlt
mov
std
push
mov
inc
movs
jne
xchg
jmp
ss
and
movs
pushf
and
and
int3
xor
rcl
inc
lods
adc
and
in
scas
mov
push
test
cmc
push
mov
xchg
lea
loope
mul
shl
loopne
(bad)
les
fst
fstp
xor
ins
shl
pop
outs
push
xchg
pop
cmp
adc
add
movs
pop
lock
outs
and
sbb
pop
loopne
aad
xor
sub
adc
les
movs
or
lds
inc
mov
aam
adc
push
ins
aad
aas
push
not
dec
in
mov
test
pop
in
punpckldq
inc
addr16
xchg
pop
jne
cmc
jge
outs
push
movs
xchg
lahf
add
push
icebp
gs
out
test
fwait
xchg
jne
xchg
mov
movs
mov
and
jo
inc
stos
movs
cmps
and
and
xor
xlat
out
inc
lds
into
and
ret
inc
test
push
int
in
jbe
div
fs
xor
add
fisttp
shl
lock
fcomp
and
jnp
or
test
outs
jle
xor
popa
xchg
jo
cmp
push
adc
ds
aaa
shld
xor
xor
push
cmps
xor
inc
mov
loopne
aad
xor
adc
les
nop
dec
movs
adc
xor
inc
das
aas
(bad)
jl
jb
dec
and
push
inc
aad
aas
xor
pop
ja
in
mov
test
jp
sysretw
out
addr16
dec
mov
inc
cmc
pop
pop
inc
push
test
mov
test
mov
mov
adc
inc
xchg
jne
xchg
popf
adc
test
lea
movs
pushf
and
xchg
cmps
shl
xchg
push
clc
mov
xor
xchg
xlat
jmp
and
out
fild
(bad)
loopne
fld
mov
push
(bad)
mov
xchg
shl
xchg
add
aam
out
mov
and
adc
fstp
aaa
test
pop
in
add
jge
aaa
pop
and
cmc
sbb
and
das
aaa
pop
movs
cs
lds
and
pop
cmps
sbb
loopne
aad
xor
add
pusha
push
jne
and
jb
or
jg
push
inc
arpl
push
add
push
jle
push
aas
push
div
jg
ins
mov
test
push
in
movq
push
addr16
hlt
adc
push
xchg
jg
ja
pop
pop
ins
push
xchg
xchg
repz
push
repz
out
clc
push
mov
inc
xchg
jne
xchg
mov
lea
mov
mov
stos
and
mov
pusha
xchg
push
mov
fistp
inc
mov
(bad)
xchg
scas
out
inc
sti
(bad)
sti
push
loope
cld
xor
ret
jbe
imul
shl
jmp
gs
(bad)
out
je
and
adc
fstp
or
add
xor
xchg
xor
adc
xchg
add
aaa
adc
cmp
xor
or
cmp
sbb
cmp
xor
push
(bad)
or
les
ja
dec
inc
cmp
bound
ds
je
jle
inc
and
sbb
aad
aas
push
div
(bad)
in
mov
test
gs
in
unpckhps
cmp
mov
push
cmc
pop
pop
ins
push
lods
xchg
mov
mov
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
hlt
movs
mov
es
cdq
xor
pusha
xchg
mov
xor
in
lods
inc
not
call
inc
shr
hlt
push
loop
mov
push
(bad)
mov
leave
shl
jecxz
stos
in
gs
(bad)
out
je
and
adc
loop
not
jg
sbb
ss
xchg
pop
and
cmc
sub
add
movs
pop
lock
lds
and
sbb
xor
pop
aad
xor
push
(bad)
pop
push
jbe
and
jno
dec
das
dec
(bad)
jae
jp
push
or
push
arpl
inc
aas
push
div
ja
in
mov
test
push
in
nop
push
addr16
hlt
jae
jg
ss
cmc
push
pop
push
add
push
scas
mov
mov
mov
inc
lahf
jne
xchg
in
adc
xchg
mov
and
jo
inc
xchg
movs
fldenv
nop
cmps
mov
pusha
xchg
push
mov
fist
inc
rcl
leave
and
loop
mov
push
scas
add
xor
sar
shl
add
loop
leave
data16
and
jne
lahf
in
xchg
aaa
pop
jo
pusha
rcl
in
add
add
or
adc
push
adc
ins
mov
aaa
adc
lds
and
sbb
sub
inc
aad
xor
cmp
ins
push
outs
les
jo
dec
inc
dec
lds
pop
(bad)
pop
inc
addr16
add
push
das
aad
aas
sub
inc
ja
in
mov
test
jae
pop
nop
jae
push
hlt
push
mov
or
outs
pop
outs
push
adc
gs
out
lods
push
sahf
xchg
jne
xchg
mov
mov
cmps
inc
mov
lods
and
xchg
cmps
mov
push
xchg
mov
xor
loopne
icebp
inc
mov
(bad)
xchg
scas
mov
push
jmp
mov
push
stc
mov
into
fs
xor
add
(bad)
(bad)
jecxz
(bad)
lock
and
adc
fstp
sub
add
add
daa
pop
cmp
adc
or
movs
adc
pop
lds
pop
movs
sbb
daa
lfs
loopne
aad
xor
adc
jl
outs
les
nop
jae
adc
and
adc
pop
(bad)
pop
inc
data16
add
push
ins
aad
aas
push
imul
in
mov
test
inc
in
unpckhps
jge
inc
hlt
push
mov
or
push
lods
xchg
mov
xchg
push
lods
gs
lods
out
sahf
push
pushf
xchg
jne
xchg
jmp
mov
and
jo
inc
pushf
movs
fbld
xchg
cmps
test
pusha
xchg
push
stc
mov
xor
xchg
xlat
mov
not
call
inc
xchg
scas
mov
push
aam
jmp
mov
shl
lds
mov
fisub
out
je
and
adc
fcomp
or
add
xchg
pop
cmp
adc
adc
pop
lock
xor
daa
daa
sbb
xor
or
bound
les
ins
movs
push
inc
jae
adc
pop
mov
jno
xor
inc
aad
aas
ins
not
inc
in
mov
test
gs
in
andps
cmp
mov
push
cmc
inc
pop
jo
stos
xchg
movs
add
push
cmc
gs
test
push
mov
inc
lahf
jne
xchg
lock
movs
mov
and
jo
inc
mov
iret
aad
xchg
cmps
lods
xor
pusha
mov
xor
not
test
ret
inc
(bad)
icebp
push
loopne
aad
retf
push
loopne
out
jbe
neg
xlat
xor
add
jecxz
fsub
out
je
and
adc
movs
lahf
(bad)
xchg
sub
add
in
add
add
xor
sbb
aas
adc
imul
xor
cmp
add
loopne
aad
xor
adc
pop
push
popa
les
nop
push
movs
push
inc
jnp
dec
das
push
(bad)
sbb
aam
sbb
push
das
aad
aas
ins
test
in
mov
test
push
in
cmovp
push
addr16
hlt
push
mov
outs
cmc
inc
pop
jg
mov
mov
mov
test
add
mov
inc
jmp
les
cmps
lea
mov
mov
and
cmps
xchg
mov
xor
call
adc
and
xchg
scas
aam
lock
icebp
push
retf
xor
sar
fs
xor
add
repnz
out
je
and
adc
ficomp
sub
add
and
or
xor
sbb
add
movs
sub
and
and
push
loopne
aad
xor
add
inc
push
push
les
push
movs
adc
aas
lds
pusha
(bad)
push
inc
pop
aam
xor
push
ins
aad
aas
das
test
in
mov
test
dec
in
unpckhps
push
addr16
je
jl
pop
jne
cmc
pop
pop
dec
push
test
test
gs
test
push
nop
xchg
lahf
xchg
mov
movs
mov
and
jo
inc
mov
test
xchg
cmps
scas
xor
pusha
xchg
push
mov
fbstp
inc
mov
lds
inc
fld
mov
xor
(bad)
mov
nop
xor
add
fisttp
fbstp
ficom
call
jno
jg
and
xor
jg
or
sub
xchg
or
adc
add
movs
pop
lock
movs
xor
cmps
xor
xor
xor
adc
jo
jbe
cmp
cmp
jne
inc
(bad)
jle
outs
aam
add
push
dec
aad
aas
je
pusha
ja
in
mov
test
push
in
sysret
out
addr16
adc
inc
cmc
pop
pop
ins
push
mov
push
mov
test
add
scas
xchg
jne
xchg
mov
ss
xchg
and
jo
inc
(bad)
movs
pushf
and
xchg
cmps
lahf
xor
pusha
mov
mov
xor
in
test
mov
xchg
scas
mov
push
int
mov
push
fdivr
into
fs
xor
add
repnz
cli
out
fdiv
(bad)
adc
fcomp
pop
test
shl
in
add
and
xchg
adc
cmp
pop
adc
es
aaa
xor
and
or
mov
loopne
aad
xor
push
(bad)
ins
push
les
xor
lds
push
(bad)
jnp
and
ins
sbb
push
push
aad
aas
push
div
ja
in
mov
test
push
in
lsl
push
addr16
dec
mov
inc
cmc
pop
pop
imul
xchg
mov
in
push
mov
mov
mov
mov
inc
jecxz
mov
mov
xchg
cmps
movs
mov
and
jo
inc
mov
mov
es
pusha
(bad)
push
mov
fistp
inc
fst
retf
and
xchg
scas
sti
inc
repz
icebp
push
rol
xor
les
(bad)
fs
xor
add
out
iret
repz
je
and
adc
movs
lahf
leave
xchg
ss
test
and
sbb
push
xchg
pop
es
sbb
pusha
cmc
sbb
cmp
movs
and
adc
sub
and
sbb
sbb
xor
adc
adc
les
push
movs
pop
inc
(bad)
lds
ds
outs
inc
data16
add
push
push
aad
aas
push
not
in
mov
test
inc
in
unpcklps
inc
addr16
push
mov
or
push
xchg
xchg
add
hlt
lea
mov
add
jne
xchg
mov
movs
mov
and
jo
inc
scas
movs
mov
mov
cdq
es
pusha
cmps
push
clc
mov
xor
in
loope
into
adc
and
mov
cld
push
in
add
push
(bad)
mov
leave
xlat
xor
add
ror
fbstp
enter
ret
jne
lahf
aam
xor
add
add
jg
aaa
pop
cmp
adc
imul
lock
and
cmps
xor
sbb
xor
sbb
pop
push
jbe
and
jno
jb
pop
(bad)
outs
inc
jle
dec
or
push
dec
aad
aas
jae
pop
ja
in
mov
test
popa
in
andnps
addr16
hlt
push
mov
or
and
outs
push
lods
xchg
scas
add
push
lods
gs
test
add
fwait
xchg
adc
inc
jecxz
adc
and
iret
cdq
es
sahf
xor
pusha
mov
xor
loop
test
jecxz
retf
inc
cld
(bad)
out
int
in
aad
loop
fdivr
enter
mov
mov
and
adc
out
lds
pusha
rcr
in
add
js
xor
sbb
adc
push
mov
aaa
xor
and
inc
cmps
pusha
daa
inc
mov
loopne
aad
xor
adc
bound
les
jo
or
lds
pop
(bad)
arpl
aam
add
push
inc
aad
aas
push
mul
push
in
mov
test
push
in
nop
pusha
addr16
hlt
push
mov
js
pop
pop
imul
call
gs
test
add
xchg
xchg
jne
xchg
mov
lea
mov
xchg
movs
pushf
and
scas
cmps
sahf
xor
pusha
mov
xor
(bad)
jmp
and
xchg
scas
mov
push
jecxz
mov
push
clc
mov
xchg
xlat
xor
add
ror
fdiv
rcl
lahf
mov
arpl
sbb
cmp
and
imul
cmc
or
jg
mov
aaa
adc
sub
adc
outs
and
cmp
sbb
push
mov
loopne
aad
xor
push
(bad)
jo
imul
dec
inc
cmp
dec
das
pop
(bad)
je
je
dec
add
push
dec
aad
aas
pop
not
dec
in
mov
test
in
unpckhps
push
addr16
hlt
push
mov
pmaddwd
pop
inc
push
xchg
xchg
test
lods
test
push
mov
mov
jne
xchg
xchg
adc
div
mov
xchg
movs
fbld
lahf
cmps
test
mov
xor
in
out
inc
mov
lds
inc
stc
(bad)
stc
push
retf
xor
out
mov
repz
xor
add
lds
lock
and
jne
lahf
test
aas
rcl
in
add
jle
and
pusha
xchg
or
adc
aas
mov
aaa
shld
lds
and
and
es
aad
xor
cmp
addr16
jl
popa
nop
ins
movs
push
das
and
jnp
jg
push
cmp
push
imul
aas
inc
not
push
push
mov
test
jno
pop
nop
push
addr16
hlt
ins
mov
push
cmc
and
push
add
push
stos
cmps
test
push
xchg
xchg
jne
xchg
in
adc
mov
xchg
and
jo
inc
xchg
movs
xchg
and
and
cdq
xor
hlt
xlat
lock
int3
adc
and
xchg
scas
mov
push
into
add
xor
cmc
mov
(bad)
fs
xor
add
loop
frstor
out
je
and
adc
out
ficom
and
sbb
push
add
and
or
sbb
and
xor
adc
or
and
cmp
das
daa
pop
mov
loopne
aad
xor
cmp
ins
push
jo
addr16
jo
push
inc
cmp
or
pop
(bad)
jle
inc
aam
and
arpl
aad
aas
push
test
ins
mov
test
push
in
movq
pop
addr16
push
mov
inc
cmc
pop
pop
pop
push
xchg
xchg
stos
add
push
mov
mov
mov
mov
inc
loop
cmps
xchg
scas
adc
mov
mov
stos
movs
mov
es
xchg
pusha
xchg
push
mov
fistp
inc
lock
and
xchg
scas
mov
push
aam
(bad)
xor
sar
leave
xchg
loope
out
in
gs
retf
out
je
and
adc
fstp
add
add
and
sub
add
sbb
cmp
movs
sbb
adc
adc
inc
cmps
sbb
pop
mov
loopne
aad
xor
sbb
adc
les
nop
ja
dec
inc
cmp
push
das
pop
(bad)
ja
pusha
aam
adc
push
popa
aad
aas
push
test
in
mov
test
pop
in
cmovs
inc
addr16
push
mov
or
push
lods
xchg
mov
xchg
gs
test
push
ret
adc
inc
mov
adc
movs
mov
and
jo
inc
stos
movs
mov
loope
mov
push
xchg
mov
xor
xchg
xlat
loope
lods
adc
and
xchg
scas
fiadd
(bad)
cld
push
retf
xor
sar
iret
fs
xor
add
fisttp
int3
je
and
adc
repnz
retf
xchg
sub
test
and
dec
add
sbb
rcl
cmp
aaa
aaa
movs
pop
lock
movs
sbb
daa
pop
mov
loopne
aad
xor
dec
(bad)
jle
jbe
aas
nop
dec
movs
cmovne
data16
pop
mov
aam
add
push
dec
aad
aas
push
test
in
mov
test
push
in
sysret
out
addr16
hlt
ins
mov
push
cmc
pop
pop
pop
push
test
scas
add
push
mov
add
scas
xchg
jne
xchg
in
adc
mov
call
iret
cmps
lods
cmps
iret
xor
pusha
ret
mov
xor
hlt
xlat
loope
not
leave
and
xchg
scas
hlt
inc
fld
fcom
mov
push
fdivr
lahf
fs
xor
add
mov
loop
mul
popf
je
and
adc
fcomp
aaa
test
jbe
dec
add
jge
das
pop
ds
adc
cmp
sbb
jg
mov
aaa
pop
movs
adc
sbb
xor
cmp
sbb
inc
mov
loopne
aad
xor
sub
push
push
push
push
nop
jo
dec
inc
dec
lds
pop
(bad)
pop
inc
push
aam
add
push
ins
aad
aas
push
test
in
mov
test
dec
in
unpcklps
cmp
mov
inc
cmc
pop
pop
ins
push
fist
xchg
mov
test
mov
inc
xchg
jne
xchg
mov
lea
mov
mov
and
cmps
test
pusha
nop
push
mov
xchg
push
loopne
test
rol
mov
push
leave
add
xor
sar
leave
shl
add
mov
retf
out
je
and
adc
(bad)
lahf
(bad)
xchg
and
jb
adc
add
push
add
daa
xchg
pop
and
xor
aas
cmc
pop
adc
pop
mov
aaa
push
movs
cmp
sbb
add
dec
add
xor
pop
aad
xor
push
(bad)
jg
push
les
jb
jle
cmp
adc
imul
inc
add
push
das
aad
aas
push
not
ins
in
mov
test
jp
jb
adc
hlt
popa
mov
push
cmc
inc
pop
outs
push
lods
xchg
xchg
add
push
mul
test
add
mov
inc
movs
jne
xchg
mov
cmp
ss
mov
and
jo
inc
out
xchg
and
xchg
cmps
ret
pusha
mov
xor
jecxz
inc
mov
into
korw
scas
hlt
inc
aad
repz
aam
mov
push
(bad)
mov
out
fs
rol
(bad)
out
je
and
adc
fcomp
xor
and
xor
test
jg
and
cs
or
adc
add
movs
adc
adc
cmp
sub
mov
loopne
aad
xor
sbb
les
nop
ins
movs
jo
cmp
dec
das
inc
(bad)
pop
inc
jg
imul
push
div
ja
in
mov
test
push
in
cvtdq2ps
jnp
inc
hlt
addr16
inc
jne
cmc
pop
pop
gs
mov
push
mov
test
add
scas
xchg
jne
xchg
jmp
pushf
jmp
ss
mov
and
jo
inc
out
xchg
and
mov
not
aam
repnz
and
xchg
scas
mov
push
int3
add
xor
out
out
jbe
mul
xlat
xor
add
loop
out
mov
je
and
adc
int
in
and
xor
and
sbb
or
daa
xchg
pop
ds
or
push
cmc
add
jg
mov
aaa
pop
movs
adc
push
lds
and
or
inc
aad
xor
or
adc
les
dec
movs
or
and
push
das
pusha
(bad)
arpl
aam
add
push
jp
jle
inc
not
pop
in
mov
test
push
in
nop
push
addr16
hlt
push
push
xchg
jg
add
pop
pop
outs
push
adc
stos
add
mov
cmps
adc
inc
mov
fcom
scas
ss
mov
and
jo
inc
jmp
fwait
and
and
xchg
xor
loopne
hlt
inc
cmps
adc
and
xchg
scas
mov
push
leave
add
ret
jbe
test
add
dec
ret
and
jne
lahf
(bad)
xchg
xor
sub
ins
ror
in
add
and
sbb
adc
xchg
push
jg
mov
aaa
adc
push
lock
lds
and
push
cmps
sbb
add
xor
sbb
inc
push
imul
dec
inc
cmp
dec
das
imul
jl
dec
mov
push
(bad)
aad
aas
push
test
in
mov
test
push
in
cmova
jg
arpl
push
mov
or
push
test
test
gs
test
add
scas
xchg
jne
xchg
hlt
adc
movs
mov
and
jo
inc
lock
fbld
cmps
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
cmc
xlat
jecxz
lods
adc
and
imul
stc
push
aam
mov
push
ret
mov
aad
shl
aad
out
int
fisttp
(bad)
je
and
adc
fcomp
and
add
and
or
adc
ds
aaa
or
lds
and
cmps
xor
add
pop
loopne
aad
xor
adc
les
nop
ins
movs
gs
jno
adc
inc
(bad)
jae
jl
inc
sbb
push
push
aad
aas
push
test
in
mov
test
in
punpckhwd
jae
je
inc
mov
dec
cmc
and
js
adc
mov
push
mov
inc
xor
jmp
and
jo
inc
out
xchg
and
nop
cmps
scas
xor
pusha
stos
push
test
scas
push
hlt
xlat
test
mov
(bad)
scas
push
int
(bad)
xor
(bad)
mov
into
shl
enter
shl
(bad)
(bad)
mul
iret
je
and
adc
cmps
lahf
int3
xchg
sbb
jle
or
add
and
cmp
ds
or
gs
sbb
jg
mov
aaa
pop
movs
sbb
push
lds
and
xor
and
adc
xor
push
(bad)
jae
outs
les
xor
outs
das
pop
(bad)
outs
inc
inc
aam
add
push
das
aad
aas
dec
test
push
mov
test
push
in
cmovp
push
addr16
hlt
push
mov
inc
cmc
jle
or
adc
gs
out
mov
mov
inc
mov
adc
mov
mov
cwde
movs
mov
and
nop
xor
ret
xlat
test
fild
scas
mov
push
aam
cld
xor
sar
aam
loop
lds
in
jmp
and
adc
aad
(bad)
xchg
add
test
in
add
and
adc
adc
or
jg
mov
aaa
push
movs
add
adc
movs
sbb
daa
sbb
adc
xor
and
sbb
ins
push
push
les
movs
push
inc
cmp
adc
pop
(bad)
ja
fs
sub
push
sub
jge
jle
inc
ja
in
mov
test
gs
unpcklps
addr16
hlt
push
mov
or
push
lods
xchg
cmc
add
push
mul
test
push
xchg
xchg
popf
xchg
mov
ss
mov
and
jo
inc
test
fsub
xchg
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
hlt
xlat
out
inc
lods
adc
and
aam
fld
(bad)
std
push
out
add
xor
(bad)
mov
leave
fs
xor
add
ror
je
and
jne
lahf
iret
xchg
push
pop
xor
sub
or
push
add
and
sub
xor
cmp
imul
lock
adc
and
adc
or
jle
dec
mov
pop
adc
les
nop
je
push
inc
jno
adc
inc
arpl
push
or
push
push
aad
aas
pop
idiv
inc
in
mov
test
jp
orpd
push
addr16
hlt
dec
mov
dec
cmc
pop
pop
push
add
push
mov
add
cdq
xchg
jne
xchg
xchg
adc
mov
jo
inc
out
(bad)
test
xchg
push
xchg
mov
xor
hlt
xlat
loope
loopne
repz
xchg
scas
mov
push
int
mov
push
(bad)
mov
into
fs
xor
add
lods
(bad)
out
je
and
jne
lahf
int
sub
xor
add
sub
daa
shl
sub
ins
xchg
cmp
mov
aaa
pop
movs
adc
pop
lds
and
push
cmps
sbb
loopne
aad
xor
sbb
jno
inc
les
inc
(bad)
lds
pop
(bad)
bound
aam
add
push
das
aad
aas
test
in
mov
test
sbb
pop
nop
push
addr16
hlt
push
mov
or
inc
pop
outs
push
test
mul
test
add
mov
inc
xchg
jne
xchg
out
adc
xor
mov
es
pusha
mov
xor
loopne
hlt
inc
lods
adc
and
nop
scas
jecxz
fld
icebp
push
mov
xor
clc
mov
retf
xor
gs
data16
(bad)
je
and
adc
aad
(bad)
xchg
and
test
in
add
and
adc
add
sbb
cmp
movs
sub
and
cmp
xor
pop
aad
xor
adc
les
jae
push
inc
pop
lds
das
pop
mov
aam
xor
push
ins
aad
aas
jbe
dec
ja
in
mov
test
gs
in
unpcklps
cs
hlt
jle
inc
xchg
imul
jbe
outs
push
stos
xchg
lods
add
push
mul
test
push
mov
inc
mov
adc
mov
jo
inc
stos
movs
fbld
xchg
cmps
lahf
xor
pusha
mov
xor
loopne
inc
int
nop
(bad)
mov
stc
push
rol
xor
loopne
in
jbe
idiv
fs
xor
add
loope
cld
data16
fbstp
loop
out
mov
lahf
out
xchg
xor
push
test
je
push
add
and
jl
pop
cmc
inc
adc
cmp
movs
pop
lock
lds
and
pop
cmps
xor
inc
mov
loopne
aad
xor
or
jbe
jbe
cmp
jb
ja
push
mov
jg
jae
dec
mov
push
outs
aad
aas
push
neg
pop
in
mov
test
popa
in
nop
jb
inc
hlt
push
mov
inc
cmc
pop
pop
ins
push
xchg
xchg
scas
add
push
cwde
mov
mov
mov
inc
mov
adc
xchg
mov
and
jo
inc
lock
mov
es
cmps
mov
push
xor
push
cld
xlat
test
loope
xchg
scas
mov
push
int
call
push
lds
xlat
fs
add
loop
into
data16
out
je
and
adc
cmc
lahf
lds
xor
jbe
add
outs
and
or
add
or
push
mov
aaa
push
movs
pop
lock
ins
and
sub
adc
xor
sub
ins
push
je
push
nop
jo
push
inc
dec
lds
push
(bad)
push
inc
addr16
cmp
push
push
test
in
mov
test
gs
in
lsl
pop
addr16
hlt
push
mov
inc
cmc
pop
pop
push
push
adc
mov
mov
mov
mov
jne
xchg
out
adc
mov
int
xchg
movs
pushf
and
and
xor
lods
adc
and
loope
mov
push
leave
add
xor
(bad)
mov
aad
fidiv
loope
jmp
data16
les
fst
cmps
lahf
test
and
sbb
or
outs
daa
xchg
rcr
or
jg
mov
aaa
adc
sub
or
movs
adc
cmps
sbb
and
xor
adc
les
nop
xor
je
ds
ja
fs
add
push
sub
dec
aas
push
test
or
test
jp
bound
sbb
jae
pop
hlt
dec
mov
inc
cmc
pop
pop
outs
push
test
cmc
lods
test
push
mov
mov
jne
xchg
scas
adc
test
mov
inc
xchg
mov
xchg
cmps
call
mov
xor
in
jmp
ret
and
mov
stc
push
aam
mov
push
ret
jbe
not
xor
add
int
cld
shl
div
rcl
(bad)
lahf
(bad)
xchg
xor
jbe
jnp
and
cmp
and
or
add
pop
adc
or
adc
push
lds
and
adc
pop
aad
xor
adc
les
nop
movs
adc
jno
ja
jp
jae
cs
or
push
dec
aad
aas
push
not
push
in
mov
test
pop
in
sysret
out
addr16
dec
mov
push
push
test
scas
add
push
mov
add
mov
lods
adc
inc
mov
adc
xchg
mov
and
jo
inc
out
mov
mov
pusha
mov
xor
hlt
xlat
repz
loop
leave
and
xchg
scas
mov
push
int
stos
xor
in
jmp
fcomip
int
in
xor
add
loope
enter
(bad)
je
and
adc
out
iret
xchg
adc
add
add
pop
xchg
pop
ds
sub
sbb
and
imul
xor
sbb
or
adc
aaa
xor
adc
outs
push
les
nop
dec
movs
dec
inc
dec
lds
daa
(bad)
jg
arpl
push
and
pop
push
jno
fs
ins
test
in
mov
test
dec
in
lsl
jns
pop
hlt
push
bound
pop
pop
push
add
push
mov
mov
inc
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
test
xchg
cmps
shl
stos
push
cli
mov
xor
retf
inc
clc
adc
and
xlat
scas
aam
clc
(bad)
mov
xor
ret
mov
(bad)
fs
nop
add
fimul
cld
je
and
adc
fcomp
sub
adc
cmp
or
cmp
xchg
sbb
aaa
cmc
sbb
cmp
movs
inc
lock
movs
add
cmps
sbb
sbb
xor
adc
jl
jno
jb
jae
ins
inc
cmp
adc
pop
(bad)
jae
and
dec
add
push
ins
aad
aas
push
imul
dec
in
mov
test
in
unpckhps
inc
addr16
push
mov
jl
pop
pop
dec
push
lods
xchg
mov
xchg
push
mul
test
push
ret
adc
inc
mov
test
jmp
and
jo
inc
fwait
movs
mov
es
cmps
fnsave
pusha
xchg
push
mov
fild
out
adc
inc
jmp
(bad)
stc
push
aam
stos
xor
lds
cld
xor
add
call
out
je
and
adc
fcomp
xor
cmp
adc
push
add
and
pop
rol
inc
adc
ds
aaa
add
and
xor
mov
loopne
aad
xor
adc
les
aaa
movs
jbe
pop
lds
das
pop
mov
aam
cmp
push
aas
sub
push
ja
in
mov
test
in
vmwrite
daa
addr16
hlt
data16
push
cmc
pop
pop
push
add
push
stos
gs
out
mov
scas
xchg
jne
xchg
mov
xchg
jmp
jo
inc
jmp
pushf
and
xchg
cmps
shl
xchg
push
stc
mov
xor
hlt
xlat
test
mov
inc
inc
call
mov
push
(bad)
mov
into
fs
add
lds
(bad)
je
and
adc
fcomp
aaa
test
or
push
add
adc
aaa
pop
xor
adc
push
mov
aaa
pop
movs
adc
adc
movs
pop
dec
and
or
inc
aad
xor
push
(bad)
jl
inc
les
xor
pop
das
pusha
(bad)
arpl
aam
add
push
and
jl
inc
div
pop
in
mov
test
push
in
lsl
pop
addr16
outs
mov
outs
cmc
pop
pop
ins
push
adc
gs
test
add
mov
inc
mov
adc
xor
inc
xchg
movs
xchg
and
and
mov
push
xchg
xlat
loopne
mov
(bad)
xchg
scas
mov
push
xlat
add
push
sar
in
shl
xchg
add
out
frstor
out
je
and
adc
out
lds
add
or
dec
add
and
adc
sbb
sbb
xor
movs
sbb
cmp
outs
and
cmp
adc
xor
xor
adc
push
push
jae
cmp
cmp
or
jge
ja
arpl
push
and
sbb
aad
aas
push
neg
imul
mov
test
jb
sub
adc
hlt
push
mov
or
push
mov
fwait
gs
test
push
mov
inc
mov
adc
lahf
mov
and
jo
inc
mov
iret
test
xchg
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
(bad)
mov
ret
adc
and
mov
mov
xor
(bad)
mov
int
xor
add
in
ret
data16
fbstp
les
fcomp
xor
add
add
sub
pop
cmc
pop
adc
sub
movs
pop
lock
pop
and
and
gs
add
adc
xor
das
(bad)
push
nop
jb
or
lds
das
pop
(bad)
jg
jg
inc
or
push
and
inc
aas
ins
neg
dec
in
mov
test
adc
dec
unpckhps
addr16
hlt
push
mov
dec
cmc
fs
push
push
xchg
xchg
scas
add
push
mov
add
scas
xchg
jne
xchg
lahf
adc
lea
mov
mov
(bad)
xchg
cmps
into
xor
pusha
xchg
push
mov
fbstp
inc
les
leave
and
xchg
scas
mov
push
int
jmp
jmp
jecxz
fnstsw
into
xlat
xor
add
aad
in
repz
je
and
jne
lahf
rcl
sbb
add
add
or
cmp
sbb
jg
mov
aaa
adc
and
sbb
pop
loopne
aad
xor
push
(bad)
ins
push
les
movs
dec
inc
cmp
jb
and
arpl
aam
adc
push
jp
pop
aas
pop
idiv
in
mov
test
sbb
aaa
lsl
push
addr16
ja
bound
push
pop
inc
push
adc
lea
test
ret
adc
inc
in
mov
(bad)
call
and
jo
inc
mov
mov
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
clc
(bad)
std
push
in
add
xor
lock
hlt
shl
retf
add
in
sti
data16
repz
and
adc
in
mov
ins
ror
sbb
pop
pusha
xchg
sbb
adc
xchg
push
jg
mov
aaa
sub
and
add
sub
pop
aad
xor
inc
(bad)
bound
les
dec
movs
pop
inc
popa
lds
das
push
(bad)
push
inc
fs
and
push
ins
aad
aas
jbe
dec
ja
in
mov
test
in
lsl
arpl
hlt
dec
mov
or
and
jg
lods
xchg
inc
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
scas
movs
fbld
jecxz
xchg
pusha
retf
push
cli
mov
xor
cmc
xlat
aad
lods
adc
and
xchg
scas
mov
add
xor
(bad)
mov
fsub
lds
fisttp
fbstp
cli
adc
fcomp
sub
add
aas
xchg
pop
cmp
adc
adc
adc
sbb
push
and
pop
cmps
xor
pop
mov
loopne
aad
xor
xor
adc
les
push
movs
pop
inc
pusha
lds
push
(bad)
bound
aam
sub
pop
push
ins
aad
aas
push
not
ins
in
mov
test
push
in
(bad)
out
addr16
dec
mov
inc
cmc
push
pop
inc
push
test
mov
in
mov
mov
mov
xchg
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
pushf
and
xchg
cmps
(bad)
xor
pusha
xchg
push
sti
mov
xor
lock
test
mov
inc
cld
mov
xor
(bad)
mov
into
fs
loope
in
in
gs
enter
xor
adc
mov
pop
or
in
add
xchg
pop
bound
adc
push
mov
aaa
adc
and
sub
or
adc
jl
aas
mov
pop
adc
les
inc
jb
adc
push
aam
xor
push
sub
pop
aas
push
test
ins
mov
test
push
in
lsl
inc
addr16
hlt
push
mov
or
push
test
mul
test
add
popf
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
(bad)
movs
stos
and
mov
pusha
mov
xor
loopne
hlt
inc
in
adc
and
iret
scas
mov
push
leave
add
push
idiv
xchg
shl
enter
pushf
gs
(bad)
data16
les
call
call
daa
test
in
add
sub
xchg
jne
adc
xchg
push
jg
mov
aaa
push
movs
sub
and
sbb
ds
aad
xor
ds
jl
imul
dec
inc
push
lds
das
pop
(bad)
pop
inc
and
dec
add
push
ins
aad
aas
outs
test
in
mov
test
adc
fs
dec
ins
hlt
outs
mov
pop
cmc
pop
pop
push
add
push
mov
add
mov
inc
cmps
jne
xchg
out
adc
xchg
add
fbld
xchg
cmps
mov
push
stc
mov
xor
repnz
out
inc
mov
(bad)
retf
inc
rol
icebp
push
loop
push
(bad)
mov
fisub
fadd
fisttp
fbstp
enter
ret
jne
lahf
ficom
or
sbb
xor
xor
aaa
pop
cmp
adc
cmp
pop
lock
lds
and
and
popa
daa
add
adc
sub
daa
xor
aas
(bad)
push
nop
ins
movs
jle
push
adc
pop
(bad)
pop
inc
jg
inc
add
push
pop
aad
aas
push
not
adc
push
mov
test
in
movq
push
addr16
hlt
mov
push
push
xchg
xchg
scas
add
push
mov
test
add
scas
xchg
jne
xchg
adc
lods
jo
inc
scas
movs
mov
popf
iret
cwde
xchg
fst
mov
xor
(bad)
inc
clc
adc
and
int3
scas
fild
(bad)
fst
mov
push
fdivr
into
shl
fadd
ror
je
and
adc
fcomp
aaa
test
imul
xor
xchg
pop
sub
or
sbb
inc
adc
cmp
pop
lock
adc
inc
cmps
sbb
loopne
aad
xor
adc
arpl
les
inc
movs
je
cmp
push
inc
jp
sub
inc
aad
aas
pop
neg
in
mov
test
sbb
xor
add
push
addr16
push
mov
inc
cmc
jp
outs
push
adc
gs
test
push
mov
inc
mov
adc
mov
and
movs
shl
and
push
mov
(bad)
push
iret
xlat
(bad)
inc
lods
adc
and
xlat
scas
jmp
add
push
cmp
fs
xor
add
les
xor
mov
lahf
(bad)
xchg
xor
push
test
in
add
jge
daa
pop
es
jae
xor
add
jg
mov
aaa
adc
pop
lock
lds
pop
movs
push
dec
or
pop
loopne
aad
xor
inc
(bad)
jl
imul
dec
inc
push
lds
outs
(bad)
jnp
fs
add
push
jb
pop
aas
push
test
in
mov
test
popa
in
punpckldq
inc
addr16
hlt
dec
mov
dec
cmc
pop
pop
outs
push
mov
movs
gs
test
push
xchg
xchg
jne
xchg
mov
mov
mov
(bad)
movs
mov
es
cmps
xchg
pusha
xchg
push
mov
xor
xlat
loope
lods
adc
and
mov
stc
push
retf
xor
mov
aam
shl
lds
fisttp
cmc
je
and
adc
(bad)
lahf
mov
jg
das
in
add
and
daa
sar
inc
adc
ds
aaa
add
and
and
and
sbb
aaa
xor
xor
dec
push
jle
jle
dec
movs
adc
and
adc
aas
(bad)
push
inc
outs
aam
xor
push
ins
aad
aas
and
in
mov
test
push
in
cmovne
push
addr16
hlt
inc
mov
inc
cmc
jg
inc
push
test
repnz
push
cmc
mov
mov
fwait
xchg
movs
xchg
in
adc
mov
leave
inc
mov
cmps
es
pusha
xchg
push
div
mov
inc
mov
lds
inc
inc
mov
xor
(bad)
mov
into
fs
xor
add
(bad)
(bad)
out
je
and
adc
sti
lahf
(bad)
xchg
xor
jo
pusha
rcr
in
add
xchg
pop
xor
adc
cmp
movs
adc
push
lds
and
and
cmp
xor
adc
jb
popa
les
nop
pop
movs
dec
inc
jno
pusha
das
push
aam
and
dec
push
imul
arpl
in
mov
test
imul
pop
addr16
jge
pop
xchg
addr16
cmc
inc
pop
fs
fist
sti
gs
cld
add
mov
inc
mov
adc
mov
mov
xchg
movs
mov
in
xor
movs
push
mov
fistp
inc
mov
(bad)
xchg
scas
les
(bad)
loop
jmp
aad
push
sar
(bad)
fs
leave
add
in
(bad)
out
je
and
adc
out
lds
ins
shl
in
add
jp
pop
pop
and
jge
sub
es
push
mov
aaa
sub
and
and
adc
inc
aad
xor
xor
jl
push
movs
dec
inc
jns
inc
das
pop
(bad)
addr16
fs
add
push
ins
aad
aas
sub
inc
ja
in
mov
test
in
movq
inc
addr16
hlt
dec
mov
push
push
rcl
repnz
mov
(bad)
out
jecxz
mov
inc
mov
adc
icebp
mov
and
jo
inc
lods
movs
shl
pushf
cmps
iret
xor
pusha
mov
xor
retf
inc
mov
korw
scas
retf
(bad)
out
push
loope
mov
push
sar
shl
lds
fisttp
iret
je
and
adc
(bad)
lahf
in
push
pop
push
test
add
push
add
cmp
xchg
jl
pop
cmc
push
adc
cs
aaa
xor
and
aas
cmps
add
add
add
sbb
daa
xor
aas
(bad)
jbe
jle
and
jno
adc
inc
(bad)
jae
jg
inc
add
push
outs
aad
aas
push
not
pop
in
mov
test
push
in
cvtdq2ps
pop
addr16
hlt
push
mov
inc
cmc
jp
dec
push
ficom
mul
test
push
ret
adc
inc
mov
xchg
in
adc
scas
mov
and
jo
inc
out
xchg
and
xchg
cmps
xchg
xor
pusha
xchg
push
mov
mov
cld
xlat
test
and
xchg
scas
mov
push
into
add
xor
cmp
xlat
xor
add
fimul
shl
adc
fcomp
or
in
add
jg
aaa
pop
aas
xchg
jbe
sbb
pop
adc
cmp
pop
lock
lds
and
or
dec
aad
xor
or
or
nop
ja
dec
inc
cmp
or
pop
mov
pop
aam
add
push
das
aad
aas
aaa
test
in
mov
test
ins
in
unpckhps
push
addr16
hlt
push
mov
or
inc
pop
outs
push
lods
xchg
pushf
add
push
mov
add
pushf
xchg
jne
xchg
mov
movs
(bad)
jmp
mov
mov
xchg
movs
xchg
and
out
lds
pusha
xchg
push
xor
hlt
inc
in
adc
inc
xchg
scas
mov
push
out
mov
push
out
mov
aam
test
jecxz
in
in
gs
fsub
fdiv
fist
fstp
xor
add
daa
xchg
pop
es
or
pop
cmc
daa
adc
sub
movs
inc
lock
movs
sbb
daa
sbb
adc
cmp
and
adc
jl
les
nop
jo
inc
inc
inc
lds
das
pop
(bad)
jg
fs
add
push
ins
aad
aas
pop
test
push
mov
test
gs
in
punpckldq
inc
addr16
hlt
adc
jne
cmc
pop
pop
ins
push
xchg
xchg
repnz
push
lods
gs
test
push
mov
inc
mov
adc
xor
fbld
xchg
cmps
(bad)
xor
pusha
xchg
push
in
xchg
xor
ret
inc
lods
adc
inc
repnz
loopne
aad
jecxz
aam
mov
push
(bad)
mov
leave
fs
xor
add
lods
(bad)
in
in
fbstp
cli
adc
stc
lahf
aam
xor
jne
or
and
xor
sub
or
cmp
inc
adc
ds
aaa
movs
xor
add
cmp
and
xor
pop
aad
xor
adc
les
nop
xor
lds
das
js
push
inc
pop
aam
or
push
and
inc
aas
push
neg
push
push
mov
test
jno
gs
pop
addr16
hlt
adc
dec
cmc
addr16
push
add
push
sti
gs
out
cwde
push
mov
inc
mov
adc
mov
cmps
and
jo
inc
out
shl
sahf
cmps
mov
pusha
xchg
push
mov
fistp
inc
jecxz
jecxz
rol
mov
inc
out
out
int
jmp
(bad)
loop
(bad)
mov
into
fs
add
loop
enter
popf
je
and
adc
cmps
lahf
rcl
pusha
shl
push
outs
xchg
pop
cmp
adc
imul
lock
push
and
or
mov
loopne
aad
xor
adc
les
inc
jb
ins
das
pop
(bad)
push
inc
pop
aam
add
push
das
aad
aas
push
imul
in
mov
test
gs
lsl
je
push
hlt
push
mov
inc
cmc
jo
pushw
xchg
xchg
mov
push
sti
gs
out
mov
test
lahf
jne
xchg
adc
mov
movs
xchg
and
sahf
cmps
xchg
pusha
nop
push
xchg
mov
xor
call
adc
and
in
scas
mov
push
leave
add
push
les
leave
fs
xor
add
mov
retf
out
je
and
jne
lahf
xchg
xchg
or
test
shl
add
and
or
add
sbb
ds
aaa
adc
adc
or
addr16
sbb
das
loopne
aad
xor
sbb
pop
push
imul
pop
inc
cmp
or
jne
ja
jno
jae
inc
mov
push
jl
inc
aas
push
div
(bad)
in
mov
test
pop
in
cmovo
ja
pop
hlt
dec
mov
or
push
mov
push
cmc
gs
mov
mov
inc
test
xchg
xchg
mov
in
mov
and
jo
inc
mov
fbld
xchg
cmps
test
pusha
xchg
push
sti
mov
xor
repnz
fiadd
into
and
mov
in
std
add
xor
(bad)
mov
aad
int
sti
add
lds
(bad)
aam
out
xlat
jne
lahf
les
jnp
sbb
adc
outs
cmp
xor
adc
ds
aaa
and
and
sbb
adc
inc
aad
xor
add
les
movs
adc
jb
jne
push
(bad)
pop
inc
outs
aam
add
push
arpl
inc
aas
ins
neg
push
in
mov
test
imul
es
hlt
dec
mov
inc
cmc
pop
pop
dec
push
test
scas
add
push
mov
test
push
xchg
xchg
jne
xchg
in
adc
pushf
mov
and
jo
inc
mov
iret
cdq
es
cmps
sahf
xor
pusha
rcl
mov
ret
xlat
cld
inc
call
out
and
shr
in
leave
add
push
(bad)
mov
into
shl
mov
(bad)
xchg
data16
out
je
and
adc
out
(bad)
xchg
push
pop
or
in
add
add
aaa
pop
jns
or
sbb
or
cmp
and
adc
movs
and
cmps
sbb
add
xor
cmp
outs
push
dec
les
jo
jae
imul
pop
inc
addr16
add
push
pop
aad
aas
push
mul
in
mov
test
gs
ss
push
addr16
hlt
inc
mov
jg
pop
pop
jns
mov
push
mov
test
push
lahf
xchg
jne
xchg
in
adc
mov
cmps
inc
mov
cdq
and
xchg
cmps
lods
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
out
sti
inc
xchg
icebp
push
retf
add
push
sar
shl
add
loopne
shl
test
rcl
lahf
lds
ins
shl
cmp
and
adc
adc
add
cmp
movs
inc
lock
or
and
pop
loopne
aad
xor
adc
push
nop
jbe
pop
inc
cmp
push
das
popa
(bad)
ja
jns
je
inc
mov
push
dec
aad
aas
push
test
in
mov
test
pop
in
addps
and
hlt
push
mov
push
pop
pop
outs
push
aad
mov
loopne
jmp
add
mov
inc
loope
mov
xchg
mov
jo
inc
mov
iret
xchg
es
cmps
cdq
xor
pusha
ret
mov
xor
in
out
inc
cmps
adc
inc
call
(bad)
stc
push
rol
xor
(bad)
mov
xchg
fs
xor
add
in
ret
scas
out
je
and
jne
lahf
les
jnp
and
dec
add
cmp
adc
pusha
cmc
inc
adc
imul
lock
movs
and
cmps
sbb
add
push
loopne
aad
xor
(bad)
push
push
jbe
and
and
adc
inc
(bad)
ja
pop
aam
or
push
jae
inc
aas
pop
idiv
ja
in
mov
test
sbb
push
(bad)
out
addr16
hlt
je
pop
xchg
ss
cmc
inc
pop
push
add
push
cmc
pop
test
les
mov
adc
mov
movs
jo
inc
out
shl
sahf
cmps
mov
xchg
pusha
xchg
push
xor
push
(bad)
xlat
rol
and
aam
fld
(bad)
in
jmp
mov
push
cmp
xlat
xor
add
loope
out
out
out
je
and
adc
mov
pop
xor
pusha
shl
in
add
js
aaa
pop
ds
adc
ss
push
adc
push
mov
aaa
add
adc
pop
lds
add
xor
xor
sub
jl
push
movs
dec
inc
pop
lds
pop
mov
pop
aam
cmp
push
das
aad
aas
jne
inc
ja
in
mov
test
push
out
addr16
push
mov
inc
cmc
inc
pop
jle
adc
mov
add
xchg
jne
xchg
mov
mov
mov
test
iret
aad
mov
pusha
xchg
push
mov
fistp
inc
lods
adc
and
xlat
scas
mov
push
out
add
xor
sar
fs
xor
add
test
je
and
adc
fcomp
sub
rcl
in
add
arpl
xadd
xchg
inc
jg
mov
aaa
push
movs
and
and
sub
mov
loopne
aad
xor
adc
jg
push
les
nop
jo
push
inc
cmp
adc
jge
addr16
fs
and
sbb
aad
aas
jle
pop
ja
in
mov
test
jb
bound
adc
jg
jg
dec
mov
or
push
movs
xchg
xchg
push
mov
leave
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
stos
movs
scas
and
in
shl
movs
push
cdq
mov
xor
in
test
jmp
inc
(bad)
push
aam
mov
push
(bad)
mov
int
xor
add
mov
aad
out
out
je
and
adc
out
lahf
out
xchg
xor
adc
in
add
add
or
adc
ss
aaa
xor
and
add
push
loopne
aad
xor
adc
les
ins
movs
dec
inc
jno
jne
push
(bad)
jo
pop
aam
or
push
arpl
inc
aas
inc
idiv
in
mov
test
sbb
dec
orps
addr16
push
mov
inc
cmc
and
dec
push
mov
push
mov
add
fwait
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
out
pushf
and
xchg
cmps
xor
fst
mov
xor
(bad)
xlat
test
mov
inc
inc
rcl
xor
(bad)
mov
into
fs
xor
add
in
enter
push
not
in
lahf
xlat
xchg
and
aaa
test
rcl
in
add
and
aaa
rcl
dec
jg
mov
aaa
or
and
push
cmps
sbb
loopne
aad
xor
adc
les
push
je
aas
lds
pop
(bad)
jl
addr16
xor
push
das
aad
aas
jne
inc
ja
in
mov
test
inc
in
addps
push
addr16
hlt
jno
bound
pop
pop
ins
push
mov
xchg
gs
test
add
mov
inc
mov
adc
mov
mov
call
iret
lahf
mov
xchg
push
loopne
mov
loopne
hlt
inc
out
adc
and
std
scas
aam
clc
(bad)
stc
push
leave
add
xor
les
shl
fild
test
je
and
adc
rcr
sub
in
add
and
adc
and
or
aas
xchg
or
aaa
xor
and
and
or
ss
xor
ds
jbe
dec
les
nop
jb
push
das
jns
ja
fs
add
push
push
aad
aas
push
idiv
ja
in
mov
test
sbb
out
addr16
hlt
inc
mov
js
pop
pop
outs
push
nop
xchg
test
gs
push
mov
inc
mov
adc
mov
scas
and
jo
inc
xchg
movs
fbld
xchg
cmps
(bad)
xor
pusha
xchg
push
lods
mov
xor
(bad)
retf
adc
and
mov
stc
push
iret
add
push
lds
(bad)
fs
xor
add
fisttp
iret
je
and
adc
rcr
test
and
adc
outs
and
rcl
inc
adc
xor
inc
lock
xor
dec
and
daa
loopne
aad
xor
push
(bad)
ja
xor
and
jno
push
das
jp
jae
(bad)
aam
adc
push
sub
addr16
je
pop
ja
in
mov
test
jnp
push
addr16
hlt
jno
push
xchg
aaa
jne
cmc
inc
pop
jbe
test
lods
add
push
mov
add
rol
jne
xchg
in
adc
mov
xchg
and
jo
inc
lods
movs
pushf
and
xchg
cmps
les
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
inc
mov
xor
(bad)
mov
into
shl
out
in
in
gs
je
and
adc
rcr
xor
add
add
or
jge
sbb
jg
mov
aaa
xor
lds
and
sbb
adc
sbb
jle
add
jl
popa
les
nop
xor
lds
cmp
arpl
aam
and
pop
push
jl
jl
jb
xor
in
mov
test
dec
in
lsl
dec
addr16
hlt
push
mov
or
push
mov
push
mov
test
push
mov
inc
mov
adc
xor
inc
xchg
movs
xchg
and
and
lahf
xor
ret
inc
mov
(bad)
call
(bad)
icebp
push
mov
cld
xor
mov
(bad)
fs
mov
(bad)
shl
adc
out
lds
ins
shr
in
add
jne
daa
pop
das
xchg
ja
es
adc
jg
mov
aaa
pop
movs
sbb
adc
movs
jb
and
push
loopne
aad
xor
ds
jg
pop
les
nop
ins
movs
je
imul
pop
inc
fs
and
sbb
aad
aas
push
test
in
mov
test
pop
in
nop
arpl
hlt
inc
mov
push
cmc
pop
pop
inc
push
mov
push
sti
xchg
clc
push
mov
mov
jne
xchg
mov
xchg
(bad)
jmp
and
jo
inc
stos
movs
fbld
mov
ret
pusha
ret
mov
xor
int
mov
mov
korw
scas
loopne
aad
cmps
push
out
lds
(bad)
mov
leave
fs
xor
add
mov
out
je
and
adc
fcomp
and
jnp
and
or
jnp
adc
cmp
adc
ds
aaa
and
lds
and
das
cmps
jge
add
adc
pop
aad
xor
pop
(bad)
push
push
outs
les
nop
movs
adc
jno
ja
aas
(bad)
jae
cs
or
push
dec
aad
aas
push
imul
push
in
mov
test
push
in
nop
push
addr16
hlt
dec
mov
push
cmc
pop
pop
pop
push
mov
push
scas
mov
mov
adc
inc
mov
adc
jmp
jo
inc
xchg
movs
mov
mov
cmps
xchg
pusha
mov
xor
loope
rol
in
call
scas
into
inc
loope
out
retf
xor
fnstcw
iret
fs
enter
clc
gs
retf
out
je
and
adc
neg
das
test
add
dec
add
and
add
sbb
pop
adc
push
mov
aaa
sub
lds
sbb
sub
xor
push
(bad)
adc
nop
ins
movs
or
das
xor
aam
add
push
push
aad
aas
push
mul
in
mov
test
push
in
punpcklbw
jp
push
hlt
push
mov
inc
cmc
dec
pop
outs
push
adc
gs
test
push
mov
inc
loop
cwde
xchg
mov
mov
mov
and
jo
inc
mov
mov
and
retf
fistp
inc
mov
lds
inc
clc
(bad)
loopne
leave
add
push
ret
jbe
test
add
aad
std
in
les
call
scas
lahf
(bad)
xchg
and
push
test
shl
in
add
and
or
push
cmc
sbb
cmp
movs
sub
and
cmp
ds
xor
pop
loopne
aad
xor
adc
jle
les
nop
jae
jle
cmp
adc
pop
(bad)
dec
inc
fs
and
sbb
aad
aas
pop
div
ja
in
mov
test
gs
pop
nop
jns
jg
push
mov
or
push
lods
xchg
add
sti
add
mov
inc
std
jne
xchg
mov
movs
(bad)
jmp
and
jo
inc
pushf
movs
fbld
mov
pusha
xchg
push
cli
mov
xor
retf
xlat
in
lods
adc
and
sahf
scas
loopne
aad
stc
push
fadd
lds
(bad)
mov
out
fs
xor
add
jmp
and
shl
les
fcomp
xor
jnp
pop
in
add
jle
xor
sete
adc
push
cmp
xor
and
push
cmps
xor
inc
mov
loopne
aad
xor
aas
(bad)
push
push
jae
dec
nop
ins
movs
push
inc
jno
adc
pop
(bad)
jg
jg
inc
and
inc
push
pop
aad
aas
push
not
push
in
mov
test
push
in
sysret
out
addr16
hlt
jge
push
xchg
pop
jne
cmc
je
push
push
test
scas
add
push
cmc
lea
test
adc
inc
mov
adc
lea
add
iret
call
pusha
xchg
push
mov
(bad)
push
xchg
xlat
test
fiadd
scas
mov
push
in
in
call
jbe
test
add
dec
lds
(bad)
adc
fstp
sub
add
and
or
jge
pop
adc
push
mov
aaa
adc
lds
and
daa
cmps
daa
daa
pop
mov
loopne
aad
xor
cmp
ins
push
ins
les
push
lds
cmp
aam
or
push
push
aad
aas
dec
not
push
test
inc
in
sysret
out
addr16
hlt
push
mov
or
jno
push
add
push
lods
mov
mov
adc
inc
test
mov
(bad)
mov
and
jo
inc
mov
test
mov
ret
pusha
xchg
push
mov
fild
inc
in
retf
and
xchg
scas
mov
push
retf
add
xor
iret
mov
hlt
xor
add
out
leave
data16
out
je
and
adc
fcomp
sub
add
and
add
sbb
xchg
cmp
mov
aaa
adc
xor
adc
movs
sbb
daa
sbb
pop
loopne
aad
xor
push
(bad)
adc
les
movs
jo
pop
lds
das
jge
ja
fs
add
push
push
aad
aas
push
neg
fs
mov
test
gs
in
cmove
inc
addr16
hlt
inc
mov
dec
cmc
popw
push
add
push
mov
aam
mov
(bad)
out
test
mov
inc
mov
adc
xchg
mov
and
jo
inc
lods
movs
shl
xchg
cmps
scas
xor
pusha
xchg
push
xchg
mov
jmp
and
loopne
loopne
aad
scas
push
repnz
xor
sar
leave
fs
xor
add
fisttp
iret
je
and
adc
ficomp
jbe
and
and
dec
add
sbb
xchg
and
pop
cmc
inc
adc
ds
aaa
shld
pop
lds
and
pop
cmps
xor
sbb
xor
push
(bad)
pop
push
je
and
pop
lds
das
addr16
jae
jg
pop
add
push
push
aad
aas
push
mul
ins
in
mov
test
push
in
(bad)
out
addr16
hlt
push
mov
push
cmc
pop
pop
pop
push
mov
xchg
gs
test
push
scas
xchg
jne
xchg
loop
movs
jmp
and
jo
inc
xchg
movs
pushf
and
mov
pusha
fst
mov
xor
loope
int
mov
lds
inc
test
(bad)
xor
hlt
mov
leave
fs
xor
add
loop
cmc
data16
(bad)
je
and
jne
lahf
not
and
push
in
add
xchg
pop
and
cmc
sbb
or
ss
sub
lds
and
sub
and
xor
pop
(bad)
pop
push
popa
les
nop
jae
dec
inc
jae
inc
das
dec
(bad)
arpl
aam
or
push
inc
aad
aas
dec
test
in
mov
test
gs
in
lsl
push
addr16
hlt
dec
mov
inc
cmc
pop
pop
outs
push
mov
push
mov
add
mov
inc
mov
adc
xor
inc
in
movs
mov
and
xchg
xor
loopne
retf
adc
and
lahf
scas
mov
push
leave
add
xor
loop
(bad)
jbe
test
add
dec
ret
and
adc
fstp
sub
jnp
sub
adc
and
adc
adc
xchg
add
aaa
adc
xor
adc
movs
or
daa
adc
xor
sbb
jl
imul
dec
inc
dec
lds
push
(bad)
push
inc
fs
add
push
ins
aad
aas
pop
test
in
mov
test
pop
in
punpckhbw
inc
addr16
hlt
jo
jge
jl
js
pop
pop
ins
push
(bad)
xchg
mov
push
test
xchg
add
xchg
test
jmp
and
jo
inc
in
movs
mov
xchg
cmps
test
pusha
retf
mov
xor
hlt
xlat
out
inc
not
lock
shr
stc
push
lock
push
sar
leave
fs
add
fisttp
cld
je
and
adc
fcomp
or
add
sbb
or
adc
imul
lock
cmp
add
push
loopne
aad
xor
adc
les
ins
movs
push
inc
jl
jno
outs
(bad)
jae
jge
cmp
pop
mov
push
jae
inc
aas
push
imul
mov
test
push
in
orps
push
addr16
hlt
jne
pop
xchg
ss
cmc
and
push
add
push
mul
test
push
scas
xchg
jne
xchg
mov
movs
mov
and
jo
inc
sahf
movs
pushf
and
xchg
cmps
xchg
pusha
adc
xor
xlat
mov
mov
lds
inc
add
push
int
mov
push
fdivr
into
div
mov
dec
xchg
rcl
lahf
stc
xchg
sub
aas
test
cmp
push
add
and
xchg
adc
and
sbb
jg
mov
aaa
adc
and
and
or
inc
aad
xor
push
(bad)
ins
push
je
and
cmp
(bad)
jnp
addr16
and
pop
push
arpl
fs
push
test
in
mov
test
push
in
cvtps2pd
push
addr16
hlt
dec
mov
inc
cmc
jnp
or
fist
hlt
gs
test
push
mov
cmps
adc
inc
lahf
jne
xchg
mov
mov
jo
inc
mov
fisub
and
mov
push
(bad)
xlat
retf
adc
and
sahf
scas
mov
push
repnz
push
(bad)
mov
(bad)
fs
xor
add
jmp
je
and
adc
fstp
test
add
and
xchg
or
sub
sbb
cmp
movs
aas
lock
lds
pop
movs
das
dec
aas
cmps
and
adc
xor
sbb
jo
dec
les
nop
jno
outs
inc
cmp
adc
dec
(bad)
ja
jg
xor
jg
ins
aas
push
imul
in
mov
test
pop
in
unpckhps
inc
addr16
hlt
sbb
jge
jnp
adc
jb
outs
push
lods
xchg
pop
push
mul
test
push
mov
inc
mov
adc
mov
mov
cmps
movs
fbld
xchg
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
loop
loope
lods
adc
and
xchg
scas
out
aad
out
repnz
xor
test
xchg
fs
xor
add
icebp
(bad)
mul
out
je
and
adc
rcr
test
shl
in
add
and
dec
pop
cmp
adc
sub
adc
sbb
ss
and
and
xor
adc
les
nop
jno
adc
jl
jne
dec
mov
aam
or
push
arpl
js
push
test
in
mov
test
push
in
cmovne
push
addr16
hlt
ins
mov
inc
cmc
inc
pop
je
test
mov
in
push
cmc
gs
test
push
scas
xchg
stos
xchg
out
adc
lods
mov
and
jo
inc
mov
iret
test
cdq
cmps
fwait
xor
pusha
ret
mov
xor
out
mov
mov
korw
scas
mov
push
retf
add
xor
(bad)
mov
mul
int3
add
(bad)
(bad)
fisub
out
je
and
adc
fcomp
aaa
test
jbe
sbb
outs
and
or
adc
pop
adc
sbb
ss
xor
aas
movs
ss
and
or
inc
aad
xor
cmp
ins
push
jbe
pop
nop
jo
dec
inc
pop
lds
pop
mov
aam
cmp
push
das
aad
aas
jge
inc
ja
in
mov
test
adc
push
addr16
imul
pop
push
mov
xchg
test
add
mov
inc
mov
adc
repz
and
jo
inc
popf
movs
mov
and
iret
xor
loopne
jmp
(bad)
xchg
scas
out
inc
icebp
push
leave
add
xor
cld
mov
loop
fwait
xor
add
icebp
pop
je
and
adc
fstp
test
rcl
in
add
and
adc
or
sbb
cmp
movs
sub
and
add
push
loopne
aad
xor
xor
pop
push
pop
les
nop
imul
das
ds
jne
jb
imul
aad
aas
jbe
dec
ja
in
mov
test
dec
in
addps
inc
addr16
je
jge
pop
jne
cmc
pop
pop
pop
push
mov
mul
test
push
into
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
sahf
es
mov
xchg
pusha
xchg
push
lods
mov
xor
cmc
xlat
retf
adc
and
mov
stc
push
retf
add
push
(bad)
mov
xchg
fs
xor
add
ror
fidiv
les
fcomp
aaa
test
and
inc
add
and
add
add
inc
adc
ss
aaa
or
and
and
pop
loopne
aad
xor
dec
(bad)
push
nop
ins
movs
adc
lds
pop
(bad)
pop
inc
jl
push
or
push
push
aad
aas
jae
xor
mov
test
gs
cmovns
push
addr16
hlt
ins
mov
push
cmc
pop
pop
pop
push
test
scas
add
push
icebp
mov
mov
adc
inc
mov
adc
jmp
jo
inc
mov
ret
es
cmps
mov
pusha
fst
mov
xor
hlt
xlat
iret
inc
mov
lds
inc
test
cmc
xor
cmp
xlat
xor
add
loop
loop
(bad)
je
and
adc
fcomp
sub
add
xchg
pop
ds
or
and
xchg
adc
mov
aaa
xor
and
sub
mov
loopne
aad
xor
push
(bad)
jl
jo
ja
movs
dec
inc
jb
dec
das
pop
mov
dec
cmp
push
das
aad
aas
push
test
in
mov
test
in
(bad)
out
addr16
hlt
push
mov
or
push
pop
pushw
test
hlt
mov
mov
mov
inc
mov
adc
mov
mov
movs
test
cmps
cmps
mov
push
popf
mov
xor
loopne
jmp
(bad)
adc
and
xchg
scas
mov
push
leave
add
push
sar
enter
retf
add
mov
iret
data16
(bad)
je
and
adc
aad
(bad)
xchg
and
ja
sbb
jne
push
add
or
imul
cmc
sbb
push
mov
aaa
pop
movs
inc
lock
movs
add
and
pop
loopne
aad
xor
sbb
inc
push
imul
jne
lds
(bad)
fs
inc
aam
or
push
ins
aad
aas
imul
push
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
or
push
movs
xchg
test
gs
test
push
into
xchg
xchg
xchg
mov
movs
mov
and
jo
inc
stos
movs
frstor
test
xchg
push
cli
mov
xor
out
out
lods
adc
and
mov
stc
push
fadd
shl
(bad)
mov
(bad)
fs
call
pop
je
and
adc
fcomp
xor
jnp
pop
in
add
add
xor
pop
cmc
or
jg
mov
aaa
or
and
and
adc
inc
aad
xor
sbb
push
nop
popa
movs
adc
cmp
push
das
dec
(bad)
jnp
jg
cmp
push
ins
aad
aas
push
not
jb
push
mov
test
jno
cmovne
push
addr16
hlt
bound
dec
cmc
push
pop
pop
push
adc
gs
test
add
xchg
xchg
cmps
xchg
in
adc
xchg
mov
and
jo
inc
mov
lods
and
cdq
cmps
sahf
xor
pusha
fst
mov
xor
(bad)
xlat
rol
in
clc
lds
inc
inc
aad
repz
push
repz
les
enter
cld
gs
int
out
(bad)
je
and
adc
in
lds
pusha
rcr
in
add
arpl
ja
and
and
add
movs
cs
sbb
or
mov
loopne
aad
xor
or
jl
popa
les
pusha
movs
push
inc
jle
jae
pop
(bad)
jae
pop
aam
and
push
inc
aad
aas
push
not
in
mov
test
gs
in
(bad)
out
addr16
hlt
pop
mov
jae
push
pop
inc
push
adc
lea
mov
add
jne
xchg
mov
mov
aad
mov
xchg
and
and
mov
out
xlat
les
into
and
mov
icebp
push
xlat
add
push
cmp
lds
jecxz
std
data16
les
rcl
lahf
rcl
(bad)
ror
in
add
and
and
sbb
inc
adc
cmp
movs
sub
and
cmp
sbb
loopne
aad
xor
sbb
les
arpl
adc
pop
(bad)
outs
inc
data16
add
ins
aad
aas
das
test
in
mov
test
in
(bad)
out
addr16
hlt
adc
jo
jnp
or
push
lods
xchg
mov
in
mul
test
push
mov
inc
mov
adc
xor
inc
mov
fbld
xchg
cmps
xchg
xor
pusha
cdq
push
test
mov
(bad)
repz
lods
adc
and
xchg
scas
fiadd
(bad)
stc
push
fadd
lds
sar
(bad)
shl
add
mov
jecxz
out
cdq
je
and
jne
lahf
rcl
jnp
and
dec
add
and
push
shr
adc
imul
lock
cmp
adc
mov
loopne
aad
xor
aas
(bad)
push
nop
ins
movs
push
inc
jb
adc
pop
(bad)
arpl
aam
add
push
dec
aad
aas
pop
test
in
mov
test
adc
dec
cmovns
push
outs
hlt
dec
mov
jle
jg
push
add
push
movs
mov
mov
adc
inc
xchg
jne
xchg
mov
test
xchg
and
jo
inc
mov
lods
es
cmps
sahf
xor
pusha
mov
xor
hlt
xlat
repz
loop
jecxz
aam
jmp
(bad)
cmps
push
int
stos
xor
(bad)
mov
shl
add
loop
leave
data16
(bad)
je
and
adc
rcr
xor
or
add
and
or
add
and
xor
adc
push
movs
pop
lock
xor
and
or
pop
aad
xor
cmp
pop
push
dec
les
movs
jbe
jl
or
pop
(bad)
arpl
aam
or
push
das
aad
aas
pop
test
in
mov
test
pop
in
cmovp
outs
addr16
inc
mov
pop
cmc
pop
pop
pop
push
mov
mov
loopne
mov
test
add
mov
inc
mov
adc
icebp
mov
and
jo
inc
mov
mov
es
pushf
xor
pusha
xchg
push
mov
fistp
inc
in
retf
and
xlat
scas
mov
push
leave
add
xor
sar
ret
xor
add
out
mul
out
je
and
adc
(bad)
lahf
lock
and
jbe
sbb
sbb
dec
add
sbb
add
sbb
push
adc
xor
daa
lock
movs
das
dec
cmp
add
xor
and
pop
aad
xor
push
(bad)
arpl
les
nop
cmp
je
popa
(bad)
ja
jne
jae
inc
mov
push
dec
aad
aas
push
test
in
mov
test
pop
in
addps
inc
addr16
hlt
adc
jne
cmc
pop
pop
outs
push
movs
xchg
mov
push
jmp
add
xchg
mov
adc
movs
mov
and
jo
inc
lods
movs
xchg
and
mov
pusha
mov
xor
rcl
mov
not
int
iret
(bad)
xchg
scas
mov
add
xor
(bad)
mov
loope
xchg
xchg
add
mov
lahf
data16
div
popf
adc
repnz
std
xchg
and
sub
add
and
or
adc
xor
inc
lock
cmp
and
sub
and
mov
pop
aas
(bad)
push
nop
inc
movs
pop
inc
jp
adc
push
(bad)
jo
jae
dec
or
push
popa
aad
aas
dec
neg
push
in
mov
test
sbb
sysretw
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
js
test
mov
mov
mov
mov
inc
mov
adc
xchg
mov
and
jo
inc
out
shl
sahf
cmps
call
mov
xor
ret
inc
jecxz
jecxz
rol
icebp
inc
in
mov
push
int
call
push
(bad)
mov
retf
xor
add
mov
enter
out
hlt
and
adc
fcomp
sub
add
daa
xchg
adc
cmc
pop
adc
push
mov
aaa
pop
movs
adc
sbb
xor
cmp
adc
loopne
aad
xor
add
pusha
push
popa
les
inc
cmp
or
inc
(bad)
arpl
aam
and
pop
push
inc
aad
aas
dec
idiv
push
in
mov
test
sbb
pop
nop
push
addr16
hlt
adc
inc
cmc
inc
pop
movhps
push
jmp
add
mov
inc
mov
adc
mov
mov
jo
inc
scas
movs
fsub
out
cmps
xchg
pusha
sahf
push
cdq
mov
xor
enter
call
in
and
into
scas
jmp
add
push
clc
mov
xchg
shl
retf
in
ror
je
and
adc
ficomp
add
ins
shl
in
add
je
aaa
pop
es
adc
adc
cmp
movs
add
add
movs
sbb
daa
sbb
pop
loopne
aad
xor
ds
jl
sub
jb
push
movs
jnp
dec
lds
inc
(bad)
ja
jns
pop
add
push
dec
aad
aas
push
not
push
push
mov
test
pop
in
packsswb
inc
addr16
hlt
dec
mov
push
cmc
pop
pop
outs
push
xchg
xchg
lea
push
in
gs
test
push
mov
inc
mov
adc
mov
mov
jo
inc
scas
movs
mov
es
pusha
xchg
push
xchg
mov
xor
jecxz
in
inc
lods
adc
and
xchg
scas
fiadd
(bad)
cli
push
in
mov
push
cld
mov
enter
lds
fimul
test
les
cmps
lahf
call
test
shl
in
add
and
and
pop
cmc
inc
adc
cmp
movs
adc
adc
sbb
pop
cmps
and
loopne
aad
xor
add
les
dec
movs
adc
dec
lds
das
push
(bad)
cmova
sbb
pop
aad
aas
and
in
mov
test
(bad)
in
sysret
out
addr16
dec
mov
pop
cmc
das
pop
push
add
push
in
gs
test
add
mov
loope
mov
jne
xchg
in
adc
xchg
mov
and
jo
inc
lea
call
pusha
fst
mov
xor
hlt
xlat
iret
inc
mov
(bad)
xchg
scas
jmp
in
(bad)
rcl
mov
push
(bad)
mov
in
(bad)
test
(bad)
out
je
and
adc
ficomp
aaa
test
rcr
in
add
and
or
adc
add
jg
mov
aaa
push
movs
cmp
or
xor
cmp
sbb
add
xor
push
(bad)
adc
nop
je
push
inc
jb
dec
das
push
(bad)
arpl
aam
add
push
push
aad
aas
push
div
in
mov
test
inc
in
lsl
bound
hlt
push
mov
inc
cmc
jge
dec
push
adc
gs
mov
xchg
mov
xchg
xchg
jne
xchg
hlt
adc
xchg
mov
xchg
fldenv
and
retf
fistp
inc
mov
(bad)
mov
loopne
test
retf
mov
aam
div
xchg
add
out
leave
data16
aam
retf
and
adc
cli
lahf
(bad)
xchg
and
jbe
sbb
jne
adc
daa
xchg
es
adc
sub
daa
adc
cmp
movs
adc
and
outs
and
cmp
push
daa
das
mov
loopne
aad
xor
dec
(bad)
push
imul
dec
inc
cmp
inc
das
dec
(bad)
jb
je
dec
add
ins
aad
aas
push
test
in
mov
test
in
cmovs
inc
addr16
inc
mov
jle
pop
pop
push
add
push
stos
lods
test
push
mov
inc
mov
adc
mov
mov
jo
inc
mov
fbld
xchg
cmps
call
mov
xor
(bad)
xlat
lds
lds
shr
push
test
xor
(bad)
mov
shl
jecxz
stos
in
test
loop
out
icebp
jne
lahf
les
add
and
sub
js
sub
and
push
ror
pop
adc
push
add
adc
lds
and
and
adc
pop
aad
xor
pop
(bad)
push
push
dec
les
ins
movs
dec
inc
inc
lds
das
imul
push
sbb
push
sub
push
aas
push
neg
jbe
ins
mov
test
sbb
cmova
push
ins
hlt
dec
mov
inc
cmc
pop
pop
jp
xchg
xchg
scas
add
push
mov
add
mov
movs
adc
inc
lahf
jne
xchg
in
adc
movs
mov
and
jo
inc
out
pushf
and
xchg
cmps
mov
test
mov
xor
hlt
xlat
test
mov
mov
in
loopne
mov
push
cmc
mov
icebp
xor
fsub
(bad)
out
je
and
adc
fistp
aaa
test
push
in
add
add
xor
adc
push
mov
aaa
aas
movs
adc
push
lds
and
and
or
pop
aad
xor
cmp
ins
push
push
inc
nop
dec
movs
dec
inc
inc
lds
pop
(bad)
pop
inc
addr16
add
push
das
aad
aas
jae
inc
ja
in
mov
test
gs
in
unpcklps
and
hlt
push
mov
inc
cmc
inc
pop
or
add
push
hlt
gs
test
push
iret
xchg
jne
xchg
mov
mov
mov
jmp
iret
cdq
es
pusha
mov
xor
out
xlat
mov
int
enter
jecxz
xchg
scas
cmc
inc
stc
(bad)
icebp
push
leave
add
xor
in
in
jbe
idiv
shl
lds
fimul
les
call
out
(bad)
xchg
xor
adc
and
add
and
rcl
push
jg
mov
aaa
adc
and
cmp
outs
and
or
or
pop
aad
xor
adc
or
nop
pop
movs
or
das
ds
ja
data16
adc
push
dec
aad
aas
push
div
dec
in
mov
test
jb
pop
nop
inc
pmuludq
push
xchg
popa
jne
cmc
push
pop
dec
push
lods
xchg
mov
mov
test
push
xchg
xchg
popf
xchg
mov
movs
mov
and
jo
inc
in
movs
mov
es
cmps
cwde
xor
pusha
xchg
push
mov
lahf
push
retf
inc
in
retf
lds
inc
std
(bad)
jecxz
aam
mov
push
(bad)
mov
leave
shl
aad
stos
in
gs
and
xlat
je
and
adc
fcomp
xor
popa
shl
push
add
and
sub
adc
xchg
sbb
mov
aaa
shld
lds
and
sbb
adc
pop
aad
xor
inc
(bad)
dec
push
jbe
dec
nop
ins
movs
or
lds
das
inc
(bad)
jae
jg
dec
cmp
add
push
test
in
mov
test
in
subps
dec
addr16
dec
mov
pop
cmc
pop
pop
push
add
push
mul
test
push
scas
xchg
xchg
div
xchg
mov
and
jo
inc
mov
iret
mov
xor
pusha
xchg
push
in
mov
hlt
xlat
repz
lods
adc
inc
mov
out
into
add
push
fidivr
int
mov
clc
add
retf
(bad)
xchg
mul
fnsave
(bad)
adc
out
(bad)
xchg
pop
pop
das
test
add
push
add
jge
aaa
pop
popa
xchg
jl
sbb
add
adc
add
sbb
xor
and
adc
xor
sub
les
ins
movs
jae
inc
lds
pop
(bad)
push
inc
data16
cmp
push
dec
aad
aas
je
inc
ja
in
mov
test
push
in
cmovns
push
addr16
hlt
jo
inc
xchg
pusha
jne
cmc
push
pop
ins
push
xchg
xchg
xchg
push
sti
mov
mov
add
jmp
mov
movs
inc
mov
movs
and
and
iret
xor
int
mov
mov
(bad)
xchg
scas
test
(bad)
push
mov
mov
push
ret
jbe
imul
shl
rol
in
retf
out
je
and
adc
fstp
sub
ins
sar
in
add
daa
xchg
sbb
or
sbb
xchg
and
mov
aaa
add
and
sub
or
inc
aad
xor
xor
or
nop
jb
outs
inc
cmp
adc
xor
push
inc
fs
add
push
push
aad
aas
pop
test
in
mov
test
sysret
out
addr16
hlt
push
mov
or
push
xchg
xchg
test
mov
stos
push
mov
inc
loopne
scas
xchg
xchg
adc
xor
inc
lock
mov
es
mov
push
mov
retf
fild
inc
fst
loopne
(bad)
lds
inc
stc
mov
xor
(bad)
mov
leave
fs
leave
add
ror
(bad)
in
(bad)
jne
lahf
out
xchg
xor
adc
add
and
or
adc
or
and
and
cmp
and
adc
pop
aad
xor
(bad)
push
push
jbe
jl
popa
movs
adc
xor
gs
push
(bad)
jae
push
aam
add
push
arpl
inc
aas
dec
imul
ja
in
mov
test
dec
in
vmwrite
push
addr16
hlt
popa
mov
push
cmc
fs
push
add
push
cmc
gs
int3
out
test
scas
xchg
cmps
xchg
in
adc
xchg
mov
and
jo
inc
mov
sahf
es
cmps
sahf
xor
pusha
cwde
push
mov
fistp
inc
mov
(bad)
nop
scas
loope
repnz
mov
xor
ret
mov
shl
add
ror
je
and
adc
mov
pop
xor
aaa
ror
in
add
add
and
popa
cmc
sbb
jg
mov
aaa
shld
sbb
xor
and
adc
sbb
aaa
xor
push
(bad)
outs
push
les
jae
pop
inc
inc
lds
pop
(bad)
pop
inc
fs
add
push
sub
idiv
in
mov
test
inc
in
subps
addr16
push
mov
inc
cmc
push
pop
push
push
adc
pop
test
rol
jne
xchg
mov
ss
mov
and
jo
inc
mov
iret
call
pusha
cmps
push
test
lea
xlat
repz
rcl
retf
and
xchg
scas
mov
push
retf
xor
fidivr
iret
fidiv
retf
add
int3
vphaddwd
les
ret
cmc
jmp
pop
sub
xor
adc
adc
and
jb
sub
inc
adc
cmp
movs
add
adc
movs
or
daa
sbb
pop
loopne
aad
xor
adc
jl
imul
nop
ja
or
lds
pop
(bad)
jae
fs
and
inc
push
jne
inc
aas
push
imul
push
in
mov
test
pop
in
pcmpgtw
inc
addr16
hlt
dec
mov
inc
cmc
fs
outs
push
rcl
hlt
gs
test
push
into
xchg
jne
xchg
cwde
adc
test
xchg
inc
lods
movs
shl
cwde
cmps
xchg
pusha
movs
push
cdq
mov
xor
in
jmp
(bad)
mov
stc
push
aam
mov
push
cmp
fs
xor
add
fisttp
fbstp
ret
cmc
ret
jne
lahf
les
push
shr
in
add
and
or
adc
pop
mov
aaa
adc
lds
and
add
push
loopne
aad
xor
push
(bad)
dec
push
jbe
pop
nop
ins
movs
dec
inc
pop
lds
das
pop
(bad)
push
inc
push
aam
sbb
push
arpl
jns
je
pop
ja
in
mov
test
fs
sysret
out
addr16
hlt
inc
mov
js
cmp
push
add
push
mov
add
scas
xchg
jne
xchg
mov
xor
inc
out
shl
nop
cmps
xor
stos
push
mov
fild
inc
mov
korb
scas
mov
push
int
in
aad
loop
ret
jbe
test
add
loop
fsub
out
je
and
adc
fcomp
aaa
test
rcl
in
add
and
or
xor
add
push
mov
aaa
adc
lds
and
add
and
inc
mov
loopne
aad
xor
xor
push
push
push
addr16
jo
push
inc
dec
lds
(bad)
jnp
addr16
add
push
(bad)
aad
aas
push
test
in
mov
test
push
in
nop
jg
pop
hlt
inc
mov
push
cmc
pop
pop
pop
push
ficom
mul
test
push
mov
inc
lahf
jne
xchg
popf
adc
mov
mov
xchg
jo
inc
mov
cdq
and
xchg
cmps
xor
fst
mov
xor
loopne
fadd
shl
xchg
scas
cli
inc
repz
sti
push
leave
add
xor
les
in
shl
lds
fisttp
ret
je
and
jne
lahf
lds
ins
rcl
in
add
sbb
or
adc
xchg
cmp
cmp
movs
xor
push
lds
and
or
daa
loopne
aad
xor
or
les
nop
dec
movs
dec
inc
cmp
inc
das
popa
(bad)
ja
inc
aam
add
push
jl
inc
aas
pop
test
outs
mov
test
in
nop
jnp
addr16
push
jge
jg
pmaddwd
add
mov
mul
test
push
mov
inc
in
test
mov
movs
mov
and
jo
inc
call
iret
xchg
scas
cmps
cdq
xor
pusha
mov
xor
aad
test
cld
inc
iret
scas
loopne
aad
scas
push
out
lds
(bad)
mov
leave
xlat
xor
add
test
and
popf
je
and
adc
fstp
xor
sar
in
add
cmp
adc
cmp
aas
adc
adc
adc
and
cmps
xor
add
push
loopne
aad
xor
or
pop
push
jbe
cmp
cmp
(bad)
jns
outs
aam
and
aas
push
neg
adc
dec
mov
test
add
push
dec
out
addr16
adc
jne
cmc
jns
push
add
push
mov
test
add
lds
mov
adc
scas
mov
and
jo
inc
out
pushf
and
xchg
cmps
into
xor
pusha
ret
push
mov
fbstp
inc
fcom
leave
and
(bad)
scas
mov
push
repz
push
(bad)
mov
in
shl
enter
enter
iret
data16
out
je
and
adc
fcomp
daa
test
pop
in
add
and
or
xor
and
ds
aaa
push
movs
adc
sbb
xor
dec
or
add
dec
aad
xor
push
(bad)
adc
les
inc
movs
dec
inc
and
push
pop
(bad)
popa
inc
and
push
add
push
sub
not
dec
in
mov
test
push
in
andps
push
addr16
hlt
adc
adc
bound
outs
push
test
scas
add
push
cmc
lea
clc
push
cmps
xchg
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
xchg
and
and
mov
in
cdq
push
icebp
xlat
fild
enter
leave
inc
xchg
scas
inc
(bad)
icebp
push
leave
add
xor
sar
xchg
shl
loope
mov
pushf
gs
jecxz
jecxz
into
je
and
adc
out
out
or
xor
aaa
rcr
in
add
sbb
sbb
adc
xchg
cmp
add
movs
cs
outs
and
adc
mov
loopne
aad
xor
adc
jo
jne
sub
inc
cmp
(bad)
jno
inc
aam
sbb
push
sub
pop
aas
sub
dec
ja
in
mov
test
in
unpcklps
jb
jg
push
mov
or
push
lods
xchg
stos
add
push
mul
test
push
cdq
xchg
popf
xchg
mov
movs
mov
and
jo
inc
out
movs
test
xchg
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
call
adc
and
nop
scas
mov
push
ret
xor
les
retf
fs
lds
std
(bad)
out
je
and
adc
sti
lahf
test
xor
and
adc
outs
xchg
es
push
shl
sbb
aaa
shld
pextrw
cmp
add
adc
inc
aad
xor
or
les
xor
popa
das
push
(bad)
je
jg
dec
add
push
ins
aad
aas
sub
push
mov
test
adc
bndmov
pop
addr16
hlt
push
mov
inc
cmc
inc
pop
inc
push
test
hlt
add
push
mov
add
lods
xchg
adc
inc
mov
adc
stos
mov
and
jo
inc
test
iret
lahf
es
xchg
xor
pusha
test
mov
xor
hlt
xlat
lock
clc
adc
and
xchg
scas
mov
push
int
out
sti
aad
push
in
int3
jbe
div
fs
xor
add
ror
loope
shl
rcl
lahf
hlt
xchg
and
xor
add
and
or
push
cmc
sub
ss
aaa
adc
inc
lock
xor
and
or
inc
aad
xor
push
(bad)
ins
push
ins
les
xor
lds
(bad)
push
inc
arpl
inc
adc
push
das
aad
aas
push
test
in
mov
test
js
xor
add
outs
addr16
hlt
push
mov
inc
cmc
push
pop
push
adc
pop
call
inc
mov
fcom
lods
ss
mov
and
jo
inc
stos
movs
mov
mov
lahf
xor
pusha
mov
xor
retf
inc
rcl
retf
and
fild
loop
in
add
xor
(bad)
mov
xchg
shl
retf
add
mov
leave
jmp
fbstp
(bad)
adc
ficomp
sub
add
and
sbb
and
imul
cmc
sbb
or
pop
lock
outs
and
cmp
aaa
daa
xor
pop
loopne
aad
xor
cmp
jae
dec
les
nop
ins
movs
pop
inc
cmp
pop
das
popa
(bad)
ja
jl
dec
add
push
dec
aad
aas
push
test
in
mov
test
inc
in
cmovno
pop
addr16
hlt
push
mov
or
jle
or
lods
xchg
xchg
push
and
mov
push
mov
mov
jne
xchg
mov
movs
mov
and
jo
inc
mov
iret
lea
out
fnstenv
pusha
xchg
push
xor
push
(bad)
xlat
lds
loopne
hlt
(bad)
xchg
scas
fiadd
(bad)
icebp
push
aam
cmps
xor
lds
retf
xor
add
mov
leave
data16
fbstp
aam
out
ret
jne
lahf
(bad)
xchg
xor
adc
add
or
sbb
adc
adc
or
shld
lds
and
and
adc
pop
aad
xor
adc
les
nop
jo
push
inc
cmp
push
das
cmp
push
inc
fs
and
pop
push
ins
aad
aas
pop
not
in
mov
test
jns
inc
addr16
hlt
mov
imul
test
push
hlt
gs
out
mov
xchg
loopne
adc
cmps
and
jo
inc
fwait
movs
and
xchg
push
test
mov
inc
mov
lds
inc
add
(bad)
xor
fistp
into
fs
xor
add
lods
(bad)
out
je
and
adc
aam
aad
and
shl
in
add
arpl
add
pusha
cmc
and
add
add
pop
movs
es
xor
pop
movs
sub
daa
cmps
sbb
loopne
aad
xor
push
(bad)
outs
push
popa
les
dec
movs
or
lds
(bad)
popa
inc
jae
jb
inc
mov
push
inc
aad
aas
dec
test
in
mov
test
sbb
push
lsl
push
addr16
hlt
push
mov
inc
cmc
inc
pop
je
rcl
hlt
gs
test
add
into
xchg
jne
xchg
lods
adc
mov
mov
mov
mov
es
movs
xor
pusha
mov
xor
repnz
rol
out
and
repnz
mov
push
(bad)
add
xor
sar
test
loope
out
in
gs
leave
jmp
les
xchg
rcr
jbe
or
add
xchg
pop
sbb
or
adc
pop
mov
aaa
adc
lds
pop
movs
or
daa
sbb
pop
loopne
aad
xor
adc
jl
ja
pop
nop
xor
adc
pop
(bad)
push
inc
fs
cmp
je
push
div
mov
test
in
nop
inc
addr16
hlt
je
jge
jnp
inc
cmc
pop
pop
ins
push
xchg
xchg
mov
push
cmps
gs
test
push
mov
inc
mov
adc
div
nop
inc
lods
movs
fbld
xchg
cmps
nop
xor
pusha
fwait
push
stos
mov
xor
loope
int3
inc
fst
into
and
mov
mov
xor
iret
mov
lahf
(bad)
jecxz
out
in
gs
iret
data16
je
and
adc
fistp
sub
xor
je
or
add
add
adc
or
adc
sbb
or
cmps
xor
add
push
loopne
aad
xor
sbb
push
nop
movs
adc
lds
pop
mov
aam
sbb
push
arpl
pop
aas
inc
neg
push
in
mov
test
pop
in
movd
and
hlt
push
mov
inc
cmc
pop
pop
pop
push
test
mov
cmps
push
xchg
mov
mov
mov
inc
mov
test
jmp
jo
inc
call
iret
and
cmps
sahf
xor
pusha
stos
push
mov
fistp
inc
mov
lds
inc
test
div
(bad)
mov
sahf
fs
rol
(bad)
out
je
and
adc
fstp
aaa
test
shl
test
jns
cmp
shl
adc
push
mov
aaa
and
and
or
or
xor
push
(bad)
addr16
popa
les
aaa
movs
push
inc
jb
or
push
aam
add
push
push
test
in
mov
test
gs
in
pcmpeqb
push
addr16
xchg
inc
jne
cmc
bound
dec
push
xchg
xchg
stos
add
push
hlt
gs
mov
popf
xchg
jne
xchg
call
ss
mov
and
jo
inc
lods
movs
cmps
and
cdq
cmps
mov
and
mov
fistp
inc
mov
(bad)
shr
loopne
repz
push
ret
jbe
not
shl
int3
add
retf
data16
xchg
rcl
lahf
les
jnp
sbb
adc
cmp
xchg
add
adc
push
and
lock
xor
and
and
pop
mov
loopne
aad
xor
sbb
dec
push
imul
jo
cmp
pop
das
imul
dec
adc
push
ja
sbb
inc
test
in
mov
test
in
unpckhps
inc
addr16
je
jg
cmp
cmc
pop
pop
or
adc
gs
loopne
shr
mov
adc
inc
call
(bad)
jmp
and
jo
inc
mov
fbld
fwait
cmps
xchg
xor
pusha
mov
xor
(bad)
loope
lods
adc
inc
les
iret
push
aam
mov
push
lock
retf
xor
add
fisttp
iret
je
and
adc
neg
and
add
sub
adc
adc
pop
adc
cs
aaa
sub
and
and
adc
inc
aad
xor
or
popa
push
imul
nop
ins
movs
push
inc
dec
lds
das
push
aam
and
pop
push
popa
aad
aas
ins
not
inc
in
mov
test
dec
in
sysret
out
addr16
hlt
dec
mov
jge
jbe
push
add
push
sti
mov
mov
adc
inc
mov
adc
sahf
mov
and
jo
inc
out
and
cmps
mov
xchg
pusha
stos
push
mov
fbstp
repnz
and
nop
scas
iret
inc
sti
(bad)
out
rol
mov
push
fdivr
shl
add
enter
movs
out
je
and
adc
rcr
test
in
add
add
aaa
pop
adc
cmc
cmp
aas
mov
aaa
pop
movs
sub
and
push
cmps
push
daa
inc
mov
loopne
aad
xor
ss
ins
push
push
js
pusha
movs
dec
inc
jle
dec
das
pop
(bad)
pusha
inc
arpl
push
or
push
jbe
pop
aas
pop
test
in
mov
test
pop
in
lsl
and
pop
hlt
push
mov
inc
cmc
jo
outs
push
rcl
stos
xchg
mov
mov
inc
mov
adc
stos
mov
and
jo
inc
mov
(bad)
and
push
xchg
mov
xor
xchg
xlat
in
inc
std
adc
and
xchg
scas
mov
push
retf
xor
lock
repnz
retf
add
out
iret
data16
and
adc
sti
lahf
mov
pusha
rol
in
add
push
xchg
and
adc
sbb
adc
and
pop
cmps
sbb
dec
mov
loopne
aad
xor
dec
(bad)
push
push
les
arpl
adc
pop
(bad)
push
inc
data16
xor
push
ins
aad
aas
sub
dec
ja
in
mov
test
jns
dec
unpckhps
pop
addr16
hlt
push
mov
or
push
lods
xchg
mov
popf
push
lods
gs
test
push
mov
inc
mov
adc
icebp
mov
and
jo
inc
xchg
movs
fbld
test
retf
mov
xor
lahf
xlat
mov
lods
adc
and
xchg
scas
loopne
aad
loop
mov
mov
push
(bad)
mov
out
fs
xor
add
fisttp
xlat
je
and
jne
lahf
les
jnp
or
aaa
add
cmp
xchg
add
adc
inc
adc
imul
lock
or
cmp
or
dec
aad
xor
adc
les
jb
dec
inc
cmp
adc
pop
(bad)
jl
push
aam
add
arpl
inc
aas
jo
push
ja
in
mov
test
pop
in
nop
dec
addr16
hlt
push
mov
dec
cmc
pop
pop
pushw
lea
mov
add
mov
inc
mov
adc
test
xchg
and
jo
inc
hlt
movs
fbld
xchg
cmps
xchg
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
hlt
(bad)
in
push
jmp
aad
push
(bad)
mov
mov
into
add
out
loop
(bad)
je
and
adc
rcr
test
add
cmp
add
or
sbb
or
movs
sub
and
cmps
jns
pop
mov
loopne
aad
xor
push
(bad)
ins
push
push
and
jb
or
pop
(bad)
jge
addr16
cmp
push
and
inc
aas
dec
neg
in
mov
test
gs
in
unpckhps
and
mov
inc
cmc
jl
pushw
adc
gs
test
push
test
stos
jne
xchg
xchg
adc
mov
mov
mov
xchg
loop
xchg
mov
xor
loopne
ret
inc
mov
(bad)
lahf
scas
les
(bad)
out
push
leave
add
push
repnz
lahf
fs
xor
add
jmp
je
and
adc
fstp
sub
sub
add
add
xor
adc
xchg
adc
mov
aaa
xor
and
and
adc
pop
aad
xor
adc
jg
popa
les
je
or
das
push
(bad)
jg
fs
add
push
ins
aad
aas
push
test
in
mov
test
inc
in
unpcklps
das
addr16
push
mov
or
push
movs
xchg
test
gs
test
add
test
xchg
jne
xchg
popf
adc
pushf
mov
and
jo
inc
lods
movs
xchg
and
nop
cmps
xchg
pusha
xchg
push
xchg
mov
xor
in
in
inc
out
loopne
(bad)
(bad)
call
(bad)
stc
push
retf
add
push
cmp
div
jecxz
stos
in
gs
leave
mov
je
and
adc
ficomp
or
add
and
je
pop
cmc
sbb
adc
mov
aaa
or
and
cmp
mov
loopne
aad
xor
adc
les
cmp
inc
das
and
jae
popa
aam
or
push
cs
aas
push
test
in
mov
test
push
in
sysret
out
addr16
dec
mov
dec
cmc
jl
dec
push
test
hlt
gs
test
push
movs
xchg
jne
xchg
adc
mov
and
jo
inc
out
xchg
and
xchg
cmps
sahf
xor
pusha
mov
xor
(bad)
inc
ficom
retf
and
xchg
scas
inc
(bad)
out
into
add
xor
fidivr
leave
fs
(bad)
add
repnz
xchg
repnz
je
and
adc
rcr
test
and
adc
sub
and
jge
sbb
jg
mov
aaa
adc
adc
sbb
sub
sub
pop
loopne
aad
xor
push
(bad)
ins
push
aaa
les
jo
or
lds
pop
(bad)
jg
fs
and
push
das
aad
aas
ins
test
in
mov
test
push
in
cmovle
pop
addr16
push
mov
inc
cmc
jbe
or
adc
gs
mov
mov
inc
mov
adc
movs
mov
and
jo
inc
mov
movs
and
mov
pusha
cwde
push
mov
mov
inc
mov
(bad)
nop
scas
out
sti
(bad)
(bad)
push
mov
mov
push
ret
jbe
imul
shl
xchg
add
fisttp
ret
and
adc
fstp
sub
ins
rcl
in
add
cmp
or
and
xchg
cmp
push
or
lock
or
sbb
pop
loopne
aad
xor
pop
(bad)
jl
imul
push
inc
and
adc
jl
ja
fs
add
push
jno
add
sub
xor
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
push
cmc
jp
dec
push
test
lods
add
push
mov
test
push
xchg
xchg
jne
xchg
lock
movs
mov
and
jo
inc
xchg
movs
fwait
and
mov
pusha
xchg
push
call
push
in
jmp
int3
adc
and
mov
fist
jmp
(bad)
aad
push
(bad)
mov
leave
fs
xor
add
fimul
shl
(bad)
adc
fstp
xor
add
xchg
pop
cmp
adc
imul
lock
adc
dec
aas
cmps
jge
add
push
loopne
aad
xor
cmp
les
movs
adc
jb
pop
das
inc
(bad)
jae
inc
aam
or
push
dec
aad
aas
pop
not
push
in
mov
test
adc
jb
dec
out
addr16
hlt
data16
inc
cmc
push
pop
push
add
push
(bad)
mov
mov
jne
xchg
xchg
adc
repz
and
jo
inc
out
pushf
and
xchg
cmps
ret
pusha
stos
push
mov
fistp
inc
mov
(bad)
shr
scas
push
mov
shl
xchg
shl
loopne
in
in
gs
enter
fbstp
ret
cmc
loop
ficomp
aaa
test
ror
in
add
and
or
adc
add
sub
adc
sub
lds
and
pop
cmps
sbb
loopne
aad
xor
sub
inc
push
jl
jle
jo
dec
inc
dec
lds
push
mov
and
dec
or
push
ins
aad
aas
pop
imul
ja
in
mov
test
adc
xor
dec
out
addr16
push
mov
inc
cmc
pop
pop
or
fist
mov
test
push
lds
xor
(bad)
jmp
mov
mov
cwde
movs
xchg
and
xchg
cmps
xchg
pusha
lahf
push
mov
fistp
inc
mov
(bad)
xchg
scas
cli
inc
sti
(bad)
out
mov
aad
push
clc
mov
jmp
in
gs
leave
data16
out
je
and
jne
lahf
call
test
in
add
and
sub
ds
aas
adc
sub
movs
sub
and
and
xor
xor
dec
(bad)
jl
imul
dec
inc
jl
ins
das
mov
aam
add
push
pop
aad
aas
pop
div
push
in
mov
test
in
cmovs
inc
addr16
push
mov
or
push
mov
fwait
gs
test
mov
inc
mov
adc
jmp
jo
inc
stos
movs
fbld
popf
cmps
cdq
xor
pusha
cdq
push
cli
mov
xor
rcl
inc
lods
adc
and
xchg
scas
out
aad
clc
push
repnz
xor
(bad)
mov
jmp
xlat
add
loop
fisub
out
je
and
adc
fcomp
xor
ins
rcr
in
add
xchg
pop
bound
adc
xor
push
aaa
or
and
push
cmps
xor
add
or
pop
aad
xor
adc
les
nop
je
jnp
jno
adc
jl
jae
jl
inc
add
push
arpl
pop
aas
neg
push
in
mov
test
jno
lsl
inc
addr16
hlt
push
mov
inc
cmc
push
pop
push
add
push
mul
test
push
scas
xchg
jne
xchg
lods
adc
nop
mov
and
jo
inc
out
pushf
and
xchg
cmps
mov
push
mov
fild
repnz
and
xchg
scas
hlt
inc
in
out
enter
int
loop
iret
mov
lea
repnz
out
(bad)
jecxz
(bad)
fdiv
aad
loope
(bad)
jne
lahf
(bad)
xchg
and
adc
add
xchg
pop
cmp
adc
add
movs
adc
adc
movs
and
daa
pop
mov
loopne
aad
xor
adc
adc
les
jo
dec
inc
jb
push
das
outs
(bad)
arpl
aam
and
pop
push
inc
aad
aas
push
test
in
mov
test
in
movd
push
addr16
hlt
jae
inc
xchg
pusha
jne
cmc
pop
pop
or
mov
lods
add
push
jmp
add
mov
inc
mov
adc
mov
lea
movs
xchg
and
and
iret
xor
ret
inc
mov
lds
inc
sti
(bad)
rcl
mov
push
clc
mov
aam
shl
leave
add
in
jmp
(bad)
(bad)
mov
hlt
lahf
(bad)
xchg
and
sub
in
add
add
or
xor
or
aas
mov
aaa
adc
and
sbb
outs
and
sbb
pop
loopne
aad
xor
dec
(bad)
push
push
imul
dec
inc
cmp
inc
das
ds
addr16
data16
add
push
ins
aad
aas
jle
dec
ja
in
mov
test
in
nop
and
jno
inc
mov
pmaddwd
push
lods
xchg
test
gs
out
test
mov
inc
mov
adc
test
add
iret
popf
es
mov
push
popf
mov
xor
in
jmp
and
mov
stc
push
aam
mov
push
lds
aad
shl
add
fisttp
shl
adc
aam
retf
xchg
das
pop
add
add
xchg
pop
pop
xchg
or
adc
ds
aaa
shld
pop
lds
and
cmps
xor
sbb
aad
xor
adc
les
inc
movs
dec
inc
cmp
jge
xor
aam
cmp
push
jl
inc
aas
push
not
push
sbb
jno
bound
jbe
push
addr16
hlt
push
mov
push
cmc
addr16
push
add
push
mov
add
mov
inc
mov
adc
nop
mov
and
jo
inc
mov
mov
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
clc
(bad)
fcom
cmps
xor
(bad)
mov
retf
xor
add
in
iret
data16
out
je
and
adc
fistp
aaa
test
sbb
push
add
and
or
adc
xchg
add
mov
aaa
pop
movs
adc
sbb
xor
sbb
(bad)
adc
or
pop
aad
xor
sbb
ins
push
outs
les
pusha
movs
dec
inc
dec
lds
pop
(bad)
pop
inc
pop
aam
or
push
das
aad
aas
sub
inc
ja
in
mov
test
pop
in
sysret
out
addr16
push
mov
inc
cmc
popa
pop
outs
push
mov
xchg
add
push
nop
gs
stos
add
ret
xchg
adc
inc
loope
fst
out
lea
cmps
inc
mov
iret
pushf
es
pusha
mov
mov
fild
inc
sti
adc
and
xchg
scas
mov
fcmovnb
icebp
push
rol
xor
cmp
shl
retf
add
out
cmc
repz
je
and
adc
mov
pop
add
add
and
adc
and
sbb
and
movs
es
movs
adc
cmps
sbb
pop
mov
loopne
aad
xor
adc
pop
push
imul
jo
cmp
pop
das
ds
jg
fs
cmp
ins
aad
aas
push
mul
dec
in
mov
test
inc
in
nop
outs
addr16
hlt
je
bound
pop
pop
pop
push
lods
xchg
test
gs
test
scas
xchg
jne
xchg
test
cmp
mov
aam
lods
movs
fbld
xchg
cmps
les
pusha
adc
fistp
inc
lods
adc
and
xchg
scas
mov
push
leave
add
push
out
std
jbe
div
fs
xor
add
fisttp
fdiv
call
fcomp
or
add
and
or
and
pop
adc
es
aaa
sub
lds
and
and
or
pop
aad
xor
or
inc
push
jbe
arpl
and
gs
aas
(bad)
bound
aam
add
push
dec
aad
aas
ins
imul
ja
in
mov
test
push
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
fs
xchg
xchg
scas
add
push
mov
add
rol
jne
xchg
in
adc
xchg
mov
and
jo
inc
mov
xchg
and
mov
pusha
mov
xor
not
mov
and
xchg
scas
jecxz
inc
out
leave
add
xor
fdivr
shl
add
loop
loope
iret
out
je
and
adc
lock
aad
daa
pop
aas
test
jo
sbb
cmp
jl
sbb
pop
adc
push
mov
aaa
pop
movs
sub
or
movs
jno
and
or
pop
aad
xor
push
(bad)
jl
ja
inc
nop
jo
dec
inc
imul
ja
pop
aam
add
push
pop
aad
aas
push
test
push
mov
test
push
in
lsl
push
addr16
hlt
dec
mov
pop
cmc
pop
pop
push
push
xlat
xchg
mov
cmps
push
hlt
lea
test
mov
mov
xchg
mov
ss
and
movs
xchg
and
and
scas
xor
loopne
int3
inc
int
retf
and
xchg
scas
cmc
inc
rol
icebp
push
ret
xor
les
(bad)
shl
retf
add
int3
(bad)
out
je
and
adc
jecxz
(bad)
xchg
or
test
in
add
cmp
jne
sub
sbb
adc
sbb
xor
outs
and
cmp
sbb
or
pop
loopne
aad
xor
dec
(bad)
adc
les
movs
dec
inc
lds
das
pop
(bad)
jae
jne
dec
or
push
ins
aad
aas
push
div
dec
in
mov
test
in
addps
inc
addr16
inc
mov
jp
popw
outs
push
mov
test
gs
test
push
mov
inc
loop
mov
(bad)
mov
and
jo
inc
xchg
movs
mov
es
pusha
stos
push
cli
mov
xor
out
inc
out
and
into
scas
mov
push
cld
add
push
clc
mov
ret
fs
xor
add
les
into
je
and
adc
fstp
aaa
test
shl
in
add
sub
adc
sbb
xchg
add
mov
aaa
xor
and
and
adc
pop
aad
xor
adc
pop
push
jbe
cmp
jno
adc
cmp
pop
inc
jg
pop
cmp
outs
aad
aas
push
test
js
popa
test
popa
in
packuswb
push
addr16
hlt
ins
mov
inc
cmc
addr16
outs
push
xchg
xchg
scas
add
push
mov
test
push
scas
xchg
adc
inc
mov
adc
xchg
mov
and
jo
inc
xchg
movs
and
cmps
mov
stos
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
inc
call
mov
push
(bad)
mov
into
shl
rol
in
out
data16
and
adc
mov
pop
je
add
outs
and
inc
pop
ds
adc
popa
cmc
add
jg
mov
aaa
pop
movs
pop
lock
lds
and
or
dec
aad
xor
pop
(bad)
pop
push
outs
les
movs
addr16
pop
lds
inc
(bad)
gs
jne
sub
das
aad
aas
push
imul
ins
in
mov
test
push
in
divps
push
addr16
hlt
inc
mov
jo
pop
pop
ins
push
movs
xchg
mov
test
push
mov
inc
stos
jne
xchg
jmp
mov
mov
and
mov
ret
xor
pusha
test
loopne
into
xor
loopne
call
and
xlat
scas
aad
cli
(bad)
rcl
shl
out
in
jbe
neg
add
jmp
out
je
and
adc
int
lds
ins
rcl
in
add
sub
imul
cmc
pop
adc
push
mov
aaa
or
and
cmp
sbb
xor
aad
xor
or
jl
push
movs
dec
inc
popa
lds
pop
(bad)
jae
pop
aam
sbb
push
jl
jge
push
test
in
mov
test
pop
in
cmovo
inc
addr16
hlt
ins
mov
jb
popw
outs
push
mov
scas
gs
push
cdq
xchg
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
fbld
xchg
cmps
les
pusha
xchg
push
div
mov
inc
lods
adc
and
shr
mov
xor
cmp
enter
shl
(bad)
lahf
jmp
(bad)
loop
out
mov
lahf
les
jnp
es
add
add
pop
sar
inc
adc
ds
aaa
sub
and
sub
add
pop
aad
xor
adc
les
xor
jge
pop
mov
inc
aam
and
addr16
push
div
push
in
mov
test
push
in
punpckhwd
push
addr16
hlt
inc
mov
or
push
test
stos
add
push
mov
add
lahf
xchg
mov
lahf
ss
mov
and
jo
inc
test
iret
mov
xor
pusha
adc
leave
xor
out
icebp
inc
rcl
and
xchg
scas
mov
push
int
std
xor
les
shl
add
loop
out
mov
and
adc
aam
out
xchg
and
add
in
add
add
xadd
sbb
jg
mov
aaa
or
and
and
adc
pop
aad
xor
adc
les
ins
movs
jo
jb
push
das
inc
mov
aam
add
push
jp
jg
dec
not
jg
ins
mov
test
push
in
lsl
pop
addr16
push
mov
inc
cmc
pop
pop
je
fist
repnz
test
push
mov
inc
xchg
xchg
hlt
adc
mov
mov
movs
pushf
and
and
aam
mov
xlat
ret
adc
inc
fild
rcl
mov
push
ret
jbe
not
add
mov
iret
in
cli
je
and
adc
fistp
test
shl
in
add
and
xor
adc
xchg
movq
movs
sub
and
add
pop
loopne
aad
xor
adc
les
nop
inc
movs
dec
inc
jb
adc
dec
(bad)
je
inc
aam
add
push
(bad)
aad
aas
dec
test
in
mov
test
in
unpckhps
inc
addr16
je
jge
aas
jne
cmc
pop
pop
pop
push
mov
push
mul
test
mov
inc
mov
adc
(bad)
mov
and
jo
inc
mov
call
pusha
nop
push
mov
fistp
inc
mov
(bad)
mov
mov
xor
cld
mov
nop
fs
xor
add
(bad)
(bad)
int
fucom
fbstp
adc
xor
rcr
in
add
add
jl
and
xchg
pop
jg
mov
aaa
pop
movs
pop
lock
sbb
dec
and
adc
xor
mov
pop
or
les
outs
movs
dec
inc
jno
pop
das
jle
jne
inc
aam
sub
push
popa
aad
aas
push
not
push
in
mov
test
push
in
andps
push
addr16
dec
mov
pmaddwd
push
add
push
cwde
gs
mov
push
scas
xchg
jne
xchg
mov
ss
jo
inc
mov
iret
(bad)
xchg
cmps
test
pusha
fst
mov
xor
into
xlat
test
mov
(bad)
scas
jmp
push
mov
aad
push
cli
mov
shl
enter
and
int
cmc
out
je
and
jne
lahf
mov
sbb
sbb
pop
add
and
inc
pop
cmp
or
adc
sbb
inc
lock
xor
xor
aaa
daa
pop
mov
loopne
aad
xor
push
(bad)
imul
cmp
jb
dec
das
pop
(bad)
arpl
aam
cmp
push
pop
aad
aas
push
div
adc
ins
mov
test
in
cmovp
push
addr16
hlt
inc
mov
outs
cmc
bound
push
add
push
lock
test
add
mov
inc
mov
adc
mov
aad
mov
shl
mov
cdq
xor
pusha
mov
xor
xchg
xlat
retf
adc
and
jecxz
rol
int3
push
test
jecxz
idiv
retf
fs
xor
add
int3
(bad)
cli
shl
(bad)
rcl
lahf
xchg
xchg
and
sub
shl
adc
and
xor
adc
add
movs
cmp
and
and
mov
loopne
aad
xor
adc
jl
popa
les
jae
dec
inc
push
lds
das
pop
mov
aam
sub
push
push
sub
jno
push
test
in
mov
test
inc
in
unpckhps
bound
hlt
push
mov
or
push
lods
xchg
inc
push
mul
test
add
xchg
xchg
fist
mov
mov
mov
jo
inc
lods
movs
fldenv
xchg
cmps
scas
xor
pusha
xchg
push
popf
mov
xor
loop
out
inc
lods
adc
and
shr
push
aam
mov
push
(bad)
mov
leave
fs
xor
add
in
retf
out
je
and
adc
fstp
xor
sub
add
cmp
pop
rcl
or
ss
aaa
adc
and
and
adc
pop
aad
xor
or
les
nop
ins
movs
dec
inc
push
lds
das
pop
mov
jl
inc
or
push
arpl
inc
aas
push
test
in
mov
test
sbb
unpckhpd
js
outs
hlt
dec
mov
inc
cmc
pop
pop
pop
push
xchg
xchg
scas
add
push
cmc
test
inc
scas
xchg
adc
push
add
pushf
and
xchg
cmps
les
mov
xor
ret
xlat
mov
mov
lds
inc
inc
mov
xor
(bad)
mov
into
fs
fiadd
ror
je
and
jne
lahf
les
pusha
rcl
in
add
add
aaa
pop
das
xchg
or
adc
push
movs
add
sbb
ins
and
sub
or
adc
jp
dec
mov
pop
sbb
ins
push
push
movs
dec
inc
inc
lds
inc
mov
aam
adc
push
das
aad
aas
push
test
in
mov
test
pop
in
cmovo
push
addr16
hlt
ja
bound
js
dec
push
adc
mov
pushf
push
xchg
xchg
jne
xchg
jmp
mov
add
fbld
and
into
xor
loopne
hlt
inc
rcl
retf
and
xlat
scas
mov
push
retf
xor
(bad)
mov
int
shl
retf
add
out
enter
les
out
mov
lahf
clc
xchg
and
adc
in
add
aas
xchg
push
xchg
push
rcr
sub
aas
mov
aaa
adc
adc
push
lds
push
cmps
sbb
adc
xor
adc
les
inc
movs
dec
inc
and
ins
das
daa
(bad)
ja
jne
push
cmp
inc
aas
outs
test
in
mov
test
(bad)
in
unpckhps
and
hlt
push
mov
push
cmc
pop
pop
dec
push
xchg
xchg
lahf
add
push
in
gs
test
push
mov
inc
movs
jne
xchg
lahf
adc
lods
mov
and
jo
inc
out
movs
fbld
xchg
cmps
pushf
xor
pusha
rcl
xor
xlat
mov
mov
(bad)
xchg
scas
jmp
add
xor
sar
xlat
xor
add
fimul
fbstp
cli
adc
mov
pop
add
add
and
or
adc
or
sbb
and
and
adc
inc
aad
xor
add
les
inc
jno
push
das
push
mov
jg
dec
and
pop
push
arpl
gs
push
neg
dec
in
mov
test
pop
in
cmovns
pop
addr16
ins
mov
push
cmc
pop
pop
ins
push
scas
xchg
lods
add
push
cmc
mov
mov
cmps
xchg
adc
inc
mov
adc
mov
xchg
and
jo
inc
out
pushf
and
xchg
cmps
mov
push
loopne
mov
push
rcl
test
mov
inc
repnz
(bad)
push
cld
add
xor
sar
fs
xor
add
mov
iret
iretw
out
je
and
adc
fistp
aaa
test
in
add
and
or
sbb
and
add
movs
adc
xor
sub
sbb
pop
loopne
aad
xor
cmp
les
jo
dec
inc
cmp
or
cmp
inc
inc
ins
aam
adc
push
sub
push
aas
push
idiv
ja
in
mov
test
pop
in
lsl
push
addr16
imul
outs
push
test
mov
add
sahf
xchg
jne
xchg
lods
adc
mov
and
movs
fldenv
mov
pusha
mov
xor
loopne
mov
and
xchg
scas
mov
push
aam
hlt
xor
in
in
jbe
neg
fs
xor
add
int3
(bad)
out
je
and
jne
lahf
mov
aaa
shl
ss
add
xchg
sbb
adc
sbb
sub
xor
outs
and
cmp
sbb
loopne
aad
xor
adc
or
nop
push
lds
das
pop
(bad)
push
inc
data16
sbb
push
outs
aad
aas
push
imul
dec
in
mov
test
in
unpckhps
inc
addr16
hlt
push
jle
jnp
or
push
stos
xchg
mov
push
cli
gs
mov
push
xchg
xchg
jne
xchg
in
adc
nop
mov
and
jo
inc
lods
movs
fbld
xchg
cmps
xchg
pusha
mov
mov
xor
lahf
xlat
out
inc
mov
lds
inc
rol
mov
xor
lds
xlat
(bad)
test
fucom
shl
(bad)
adc
fcomp
xor
shl
in
add
and
sub
xor
push
adc
es
aaa
or
lds
dec
sub
push
loopne
aad
xor
adc
les
ins
movs
jl
popa
lds
das
jle
jae
and
dec
cmp
push
cs
aas
inc
not
adc
sbb
push
in
cmovbe
jnp
inc
hlt
push
mov
jne
outs
pop
gs
mov
nop
add
push
test
mov
mov
mov
inc
mov
xchg
hlt
adc
xchg
mov
and
jo
inc
out
pushf
and
xchg
cmps
sahf
xor
pusha
xchg
push
mov
fild
inc
loop
repz
xchg
scas
jmp
test
cli
push
loope
loope
aad
rcl
mov
fsub
enter
fsub
(bad)
out
je
and
adc
ret
lahf
test
ins
shl
test
outs
add
aaa
pop
pop
xchg
jl
sbb
aas
adc
push
mov
aaa
pop
movs
adc
push
lds
or
daa
daa
add
cmp
xor
push
(bad)
ins
push
pop
les
jbe
jb
pop
lds
pop
(bad)
jge
addr16
sbb
push
das
aad
aas
jne
dec
ja
in
mov
test
pop
in
unpckhps
pop
addr16
hlt
dec
mov
jae
jge
outs
push
mov
push
mov
add
les
xchg
jne
xchg
mov
test
xchg
movs
test
and
push
cmps
mov
xor
call
adc
and
xchg
scas
mov
push
leave
add
xor
aam
in
jbe
imul
shl
retf
add
loope
frstor
out
je
and
jne
lahf
clc
xchg
and
pop
test
shl
in
add
cmp
jne
cmp
sbb
cmp
movs
sub
and
pop
cmps
and
adc
xor
es
jl
jbe
inc
nop
inc
movs
dec
inc
and
push
das
dec
(bad)
je
gs
add
push
(bad)
aad
aas
push
div
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
pop
cmc
pop
pop
fs
test
xchg
gs
test
add
xchg
xchg
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
popf
and
and
push
cli
mov
xor
xlat
xlat
out
inc
lods
adc
and
mov
loopne
inc
mov
push
(bad)
mov
(bad)
fs
add
fisttp
fbstp
xlat
adc
movs
lahf
cli
xchg
push
pop
jne
xor
and
cmp
cmp
sub
add
aas
adc
imul
lock
adc
cmps
jge
add
or
sbb
daa
xor
add
pusha
push
jbe
daa
nop
inc
movs
adc
cmp
adc
inc
(bad)
ja
pusha
aam
xor
push
push
aad
aas
push
test
in
mov
test
push
in
nop
push
addr16
hlt
dec
mov
dec
cmc
pop
pop
outs
push
aam
scas
add
push
nop
mov
mov
xchg
xchg
jne
xchg
mov
mov
jo
inc
in
movs
mov
es
cmps
sahf
xor
pusha
test
mov
xor
xlat
xlat
rol
retf
korb
scas
jecxz
fld
cli
push
fld
mov
push
cmp
les
int3
add
jmp
je
and
jne
lahf
out
xchg
and
jg
pusha
shl
test
pop
add
pop
rcr
sbb
jg
mov
aaa
pop
movs
adc
push
lds
and
or
adc
xor
aaa
xor
cs
push
push
xor
ja
jo
dec
inc
inc
lds
pop
(bad)
sbb
aam
adc
push
das
aad
aas
push
test
in
mov
test
push
in
sysret
out
addr16
hlt
pop
mov
ja
push
pop
outs
push
lods
xchg
xchg
add
push
hlt
gs
test
push
cdq
xchg
jne
xchg
mov
mov
jmp
xchg
mov
and
jo
inc
mov
xchg
and
and
test
push
call
adc
and
jmp
aam
out
mov
push
icebp
mov
into
push
xchg
add
enter
(bad)
mov
rcl
lahf
(bad)
xchg
and
sub
add
cmp
or
adc
cmp
movs
adc
and
cmp
push
daa
sbb
xor
adc
ins
push
imul
dec
inc
xor
pusha
das
pop
(bad)
jne
and
add
push
jb
pop
aas
push
imul
in
mov
test
push
inc
addr16
hlt
jl
push
xchg
jge
je
dec
pop
pop
push
test
mov
test
push
into
xchg
test
jmp
movs
mov
and
jo
inc
lods
movs
fisub
and
test
push
ret
inc
lods
adc
and
fild
stc
push
enter
rcl
push
out
push
not
fs
xor
add
mov
retf
out
je
and
adc
ficomp
jno
arpl
and
or
jg
push
outs
sub
imul
cmc
push
adc
cmp
pop
lock
push
and
add
adc
pop
aad
xor
sbb
push
nop
dec
movs
adc
lds
push
(bad)
js
jg
dec
or
push
arpl
pop
aas
push
test
ins
mov
test
sbb
fs
pop
addr16
dec
mov
inc
cmc
pop
pop
push
push
test
mov
mov
mov
mov
inc
mov
adc
mov
jo
inc
mov
(bad)
cdq
cmps
call
mov
xor
aam
lds
int3
and
(bad)
stc
push
mov
mov
push
(bad)
mov
fisub
aam
in
in
gs
enter
shl
adc
fcomp
or
in
add
and
or
adc
xchg
add
mov
aaa
pop
movs
and
and
and
or
pop
aad
xor
xor
inc
push
popa
les
inc
jb
inc
das
js
arpl
aam
add
push
js
inc
aas
push
test
in
mov
test
jae
push
addr16
hlt
push
mov
inc
cmc
pop
pop
jns
adc
mov
xchg
push
lods
xchg
adc
inc
mov
adc
xor
inc
sahf
movs
xchg
and
and
leave
xor
repz
retf
adc
inc
call
(bad)
cmps
push
into
add
xor
ret
jbe
not
add
int3
(bad)
out
je
and
adc
les
test
add
aas
xchg
pop
and
imul
cmc
sub
or
movs
ds
lds
add
pop
daa
cmp
pop
loopne
aad
xor
xor
je
imul
dec
inc
cmp
je
daa
(bad)
ja
inc
aam
add
push
dec
aad
aas
push
neg
in
mov
test
pop
in
cmovg
dec
addr16
jge
jge
pop
jne
cmc
pop
pop
jb
xchg
xchg
test
gs
test
push
fwait
xchg
jne
xchg
mov
movs
mov
and
jo
inc
lods
movs
fsub
xchg
cmps
mov
shl
push
xor
push
xchg
xlat
out
inc
std
adc
and
repnz
loopne
rol
fcom
shl
mov
leave
fs
xor
fisttp
fidiv
(bad)
adc
fcomp
xor
cmp
add
adc
jne
pop
pop
sbb
cmc
push
adc
ds
aaa
add
and
or
add
xor
ss
jb
jb
bound
dec
lds
push
(bad)
jae
jg
inc
sbb
push
(bad)
aad
aas
push
not
push
in
mov
test
inc
in
cvtdq2ps
push
addr16
hlt
push
mov
dec
cmc
jg
outs
push
xchg
xchg
add
cmc
gs
lea
xchg
xchg
adc
mov
lods
jo
inc
cwde
movs
mov
es
cmps
sahf
xor
pusha
pushf
push
mov
(bad)
push
xchg
xlat
icebp
inc
xlat
adc
and
(bad)
scas
mov
push
out
mov
push
(bad)
mov
repz
xor
add
loop
enter
push
retf
adc
fcomp
sub
add
and
xchg
sar
pop
adc
push
mov
aaa
pop
movs
adc
or
cmp
and
sbb
xor
push
(bad)
or
nop
ins
movs
dec
inc
jb
push
das
dec
(bad)
arpl
aam
xor
push
das
aad
aas
pop
test
in
mov
test
gs
in
(bad)
out
addr16
hlt
inc
mov
jne
pop
pop
ins
push
lods
xchg
repz
push
mov
add
mov
inc
mov
adc
mov
jo
inc
mov
iret
mov
xor
pusha
fst
mov
xor
rcl
inc
(bad)
adc
and
xchg
scas
mov
push
leave
add
push
(bad)
mov
shl
add
out
iret
repz
je
and
adc
out
lahf
(bad)
xchg
and
xor
data16
in
add
add
pop
shl
sbb
ins
mov
aaa
movs
sub
and
or
or
sub
and
adc
arpl
les
nop
jo
or
lds
das
dec
(bad)
pop
inc
fs
cmp
push
outs
aad
aas
push
imul
pop
in
mov
test
in
unpckhps
push
outs
hlt
push
mov
pop
cmc
pop
pop
pop
push
test
mov
test
mov
jecxz
scas
xchg
jne
xchg
xchg
adc
movs
mov
and
jo
inc
test
iret
cdq
and
push
mov
fistp
inc
mov
(bad)
retf
inc
rol
iret
push
aam
(bad)
xor
out
in
jbe
imul
fs
xor
gs
into
data16
lds
les
cmps
lahf
clc
xchg
and
add
add
and
sbb
adc
add
push
aaa
shld
or
cmp
and
dec
loopne
aad
xor
dec
(bad)
push
nop
inc
movs
adc
and
popa
das
xor
aam
and
pop
push
pop
aad
aas
push
test
in
mov
test
jno
arpl
pop
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
pop
push
lods
xchg
scas
add
push
mov
test
add
mov
inc
in
ficom
jmp
jo
inc
in
movs
xchg
and
mov
pusha
xchg
push
lods
mov
xor
rcl
test
mov
xchg
scas
cmps
inc
cld
(bad)
rcl
mov
push
(bad)
mov
into
test
enter
shl
leave
data16
(bad)
je
and
adc
in
int
and
je
cmp
add
push
add
xor
add
pop
xchg
or
sbb
xor
jg
mov
aaa
and
lds
daa
cmps
sbb
loopne
aad
xor
adc
les
imul
das
js
ins
inc
jge
dec
xor
das
aad
aas
ins
test
in
mov
test
push
in
pcmpeqb
push
addr16
hlt
ja
bound
jb
push
add
push
hlt
xchg
mov
mov
inc
mov
xchg
jecxz
lods
(bad)
jmp
mov
jo
inc
sahf
movs
xchg
and
and
(bad)
xor
nop
xlat
in
mov
korb
scas
mov
push
test
loope
lds
(bad)
fs
add
mov
leave
mov
je
and
adc
fistp
sub
pusha
shl
pop
outs
and
xor
sbb
cmp
or
sub
sub
outs
and
cmp
(bad)
aaa
mov
loopne
aad
xor
adc
dec
push
les
nop
jp
jo
cmp
je
popa
(bad)
ja
jno
xor
jb
inc
aas
push
imul
dec
in
mov
test
jle
bound
add
inc
addr16
hlt
push
mov
or
push
xchg
xchg
test
gs
test
push
xchg
xchg
adc
inc
mov
adc
lods
mov
and
jo
inc
stos
movs
fwait
and
lods
cmps
cdq
xor
pusha
movs
push
xchg
mov
xor
in
xlat
out
inc
movs
adc
and
call
mov
xor
ret
mov
int
out
xor
add
int
aad
mul
(bad)
test
out
les
jnp
sbb
sub
jge
push
outs
and
or
adc
cmp
movs
or
adc
movs
and
cmps
jge
sbb
adc
add
cmp
adc
les
nop
ins
movs
dec
inc
dec
lds
das
pop
(bad)
jno
jg
push
sbb
push
(bad)
aad
aas
dec
test
in
mov
test
jno
arpl
pop
out
addr16
hlt
pop
mov
push
cmc
outs
pop
pop
push
test
mov
test
add
scas
xchg
jne
xchg
hlt
adc
mov
xchg
and
jo
inc
jmp
iret
cdq
es
sahf
xor
pusha
xchg
push
lahf
mov
xor
lock
jmp
mov
lds
inc
stc
mov
xor
lds
retf
xor
add
std
(bad)
loop
mul
lds
les
fistp
aaa
test
sar
in
add
add
aaa
pop
push
xchg
or
pop
cmc
cmp
cmp
push
lock
xor
adc
sbb
loopne
aad
xor
adc
les
inc
pop
lds
pop
(bad)
push
inc
addr16
cmp
push
das
aad
aas
ins
test
in
mov
test
inc
in
nop
pop
addr16
hlt
push
mov
jg
pop
pop
push
add
push
mov
mov
mov
mov
inc
loop
fst
mov
and
jo
inc
lods
movs
and
cmps
test
pusha
xchg
push
popf
mov
xor
retf
inc
loopne
retf
and
xchg
scas
cmc
inc
std
(bad)
icebp
push
aam
cld
xor
sar
ret
mov
int3
add
fimul
les
rcl
jecxz
fst
jnp
or
dec
add
js
aaa
pop
cmp
cmc
sbb
cmp
movs
sub
and
add
xor
xor
xor
dec
push
push
les
inc
movs
push
inc
pop
lds
das
outs
(bad)
push
inc
fs
cmp
push
cs
aas
jle
inc
ja
in
mov
test
pop
in
cmovbe
inc
addr16
hlt
dec
mov
push
cmc
das
pop
push
push
lods
xchg
sahf
add
push
lods
gs
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
fbld
xchg
cmps
cdq
xor
pusha
retf
mov
xor
in
xlat
out
inc
mov
korw
scas
fiadd
(bad)
fist
mov
push
fdivr
leave
(bad)
retf
in
dec
in
jmp
cmc
ret
jne
lahf
retf
xchg
push
pop
xor
sub
add
and
sbb
adc
cmp
es
and
add
pavgb
and
sub
outs
push
inc
les
ins
movs
or
lds
pop
mov
aam
sbb
push
arpl
inc
aas
push
neg
outs
in
mov
test
orps
jns
inc
hlt
push
mov
or
ins
pop
push
add
push
mov
add
cmps
xchg
adc
inc
stos
jne
xchg
mov
xor
inc
out
fldenv
and
lea
rcl
test
out
inc
xchg
scas
mov
push
int
stos
xor
(bad)
mov
retf
test
rol
ror
aad
xchg
and
adc
repnz
lds
pusha
shl
in
add
and
das
sar
jg
mov
aaa
xor
lds
sbb
or
dec
aad
xor
push
(bad)
ins
push
popa
les
dec
movs
dec
inc
jb
dec
das
and
arpl
aam
add
push
jns
jl
push
test
in
mov
test
pop
in
lsl
pop
addr16
hlt
push
mov
inc
cmc
pop
pop
push
push
mov
mov
pushf
push
mov
test
push
fwait
xchg
jne
xchg
jmp
lods
(bad)
jmp
(bad)
mov
and
jo
inc
nop
movs
and
cmps
test
pusha
xchg
push
mov
fistp
inc
mov
korw
scas
rol
movs
push
leave
add
xor
in
mov
shl
add
out
leave
in
les
mov
into
lahf
(bad)
xchg
and
jae
adc
and
sub
outs
and
pop
shl
adc
cmp
movs
push
lock
movs
or
daa
xor
xor
ds
jl
xor
and
jg
adc
pop
(bad)
push
inc
dec
aam
add
push
aad
aas
jb
ds
in
mov
test
jae
aaa
nop
and
hlt
push
mov
or
push
lods
xchg
test
mul
test
push
mov
inc
mov
xchg
mov
cmps
mov
and
jo
inc
xchg
movs
call
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
sahf
xlat
out
inc
out
adc
and
shr
stc
push
retf
add
xor
(bad)
mov
mov
lds
fisttp
fbstp
popf
adc
loope
les
xor
and
inc
add
and
xchg
and
pop
cmc
inc
adc
ds
aaa
and
and
adc
mov
loopne
aad
xor
adc
push
nop
ins
movs
pop
inc
dec
lds
das
pop
mov
jl
push
cmp
push
dec
aad
aas
push
imul
push
in
mov
test
push
in
packsswb
push
outs
hlt
mov
push
cmc
pop
pop
imul
xchg
push
test
test
add
nop
xchg
fcom
mov
xchg
mov
and
jo
inc
lock
mov
es
cmps
sahf
xor
pusha
mov
cli
mov
xor
hlt
xlat
out
inc
lods
adc
iret
scas
ret
inc
add
push
int
mov
push
(bad)
mov
into
xor
add
int3
(bad)
popf
data16
(bad)
je
and
adc
mov
pop
je
or
and
or
jge
adc
jg
mov
aaa
shld
sbb
xor
add
or
pop
mov
loopne
aad
xor
push
(bad)
push
popa
les
push
lds
push
aam
xor
push
das
aad
aas
pop
imul
jne
ins
mov
test
push
in
cmovnp
jnp
push
hlt
adc
inc
cmc
inc
pop
outs
push
mov
xchg
add
push
mov
mov
mov
adc
inc
mov
xchg
in
adc
scas
mov
and
jo
inc
mov
fisub
xchg
mov
mov
fbstp
mov
korw
scas
mov
push
retf
add
xor
pushf
mov
xchg
shl
xlat
add
(bad)
(bad)
out
je
and
adc
fstp
sub
ins
shr
sub
pop
arpl
adc
pop
mov
aaa
adc
adc
and
add
sub
adc
and
xor
fs
imul
push
inc
cmp
dec
das
pop
(bad)
ja
inc
aam
add
push
push
jge
push
test
in
mov
test
in
cmovs
inc
addr16
hlt
push
mov
inc
cmc
and
outs
push
xlat
xchg
mov
sti
push
mul
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
frstor
scas
cmps
fwait
xor
pusha
cdq
push
lea
mov
in
repnz
lods
adc
and
int
cli
inc
test
stc
push
ret
xor
sar
shl
add
retf
(bad)
loop
mov
and
adc
loop
les
jnp
and
inc
add
xor
sbb
sar
pop
adc
add
movs
pop
lock
lds
and
and
or
pop
aad
xor
(bad)
fs
jbe
daa
nop
ins
movs
adc
and
adc
cmp
inc
inc
pop
aam
xor
push
arpl
push
aas
sub
in
mov
test
popa
in
maxps
addr16
hlt
dec
mov
add
jae
push
push
scas
xchg
test
in
push
jmp
add
scas
xchg
jne
xchg
(bad)
adc
lock
and
jo
inc
hlt
movs
xchg
and
lahf
cmps
sahf
xor
pusha
test
mov
xor
hlt
xlat
in
inc
mov
lds
inc
inc
ret
add
push
(bad)
mov
into
fs
xor
add
ret
mul
xchg
les
fcomp
aaa
test
add
and
je
sbb
pop
adc
ds
aaa
pop
movs
adc
or
push
dec
push
cmps
pusha
daa
das
mov
loopne
aad
xor
ss
ins
push
outs
les
xor
lds
pop
(bad)
pop
inc
ja
push
xor
push
das
aad
aas
jnp
inc
ja
in
mov
test
gs
addps
outs
addr16
dec
mov
inc
cmc
and
imul
sti
push
in
gs
test
add
mov
inc
xchg
jne
xchg
lahf
adc
cmps
mov
and
jo
inc
mov
xchg
and
and
xchg
xor
rcl
hlt
inc
mov
(bad)
sahf
scas
fadd
(bad)
mov
xor
ret
jbe
not
fs
xor
add
jecxz
retf
jmp
les
mov
fistp
or
add
jnp
das
pop
es
adc
adc
cmp
movs
sub
and
pop
cmps
sbb
add
xor
adc
les
inc
movs
push
inc
jg
adc
jns
push
inc
fs
add
push
dec
aad
aas
pop
div
mov
test
gs
popa
cmovae
and
pop
hlt
push
mov
push
cmc
popw
outs
push
int
mov
loopne
repnz
test
push
mov
mov
jne
xchg
stos
adc
mov
fwait
inc
stos
movs
cmps
and
lahf
cmps
cdq
xor
pusha
cmps
push
xchg
mov
xor
in
lock
lods
adc
and
mov
stc
push
retf
xor
sar
nop
fs
xor
add
ror
fidiv
loop
div
ret
jne
lahf
mov
jg
daa
in
add
daa
xchg
pop
pop
xchg
push
shl
inc
adc
ds
aaa
pop
movs
sbb
sub
imul
cmps
xor
pop
mov
loopne
aad
xor
adc
les
nop
outs
movs
pop
inc
jl
dec
das
push
aam
and
push
and
jb
inc
not
ins
in
mov
test
push
in
cmove
push
addr16
hlt
inc
mov
dec
cmc
pop
pop
pop
push
test
lods
add
push
mul
test
push
scas
xchg
adc
mov
jo
inc
mov
iret
(bad)
xchg
cmps
lds
pusha
xchg
push
stc
mov
xor
rcl
loopne
rcl
jmp
rol
fld
scas
mov
push
int
aam
clc
aad
push
out
out
jbe
test
add
jecxz
ret
out
je
and
adc
neg
jo
ins
ror
in
add
and
aaa
rcl
add
mov
aaa
adc
adc
sub
and
dec
and
sbb
pop
mov
loopne
aad
xor
inc
(bad)
ins
push
popa
les
movs
dec
inc
arpl
pop
das
pop
(bad)
jno
pop
aam
add
push
sub
inc
aas
push
test
in
mov
test
sbb
imul
push
hlt
imul
fs
adc
popf
add
mov
inc
cwde
jne
xchg
mov
mov
mov
mov
iret
mov
xor
pusha
fst
mov
xor
lock
in
inc
loopne
in
and
xchg
scas
mov
push
leave
add
push
fdivr
xchg
shl
nop
add
out
stc
data16
int3
je
and
adc
call
add
add
xchg
pop
adc
adc
adc
inc
lock
xor
cmp
mov
loopne
aad
xor
adc
inc
push
inc
les
nop
jbe
pop
inc
cmp
or
jge
ja
data16
sub
inc
push
and
inc
aas
jle
dec
ja
in
mov
test
in
cmovg
inc
addr16
hlt
jl
inc
xchg
jl
jl
pop
pop
ins
push
mov
repnz
push
xchg
test
mov
mov
adc
movs
mov
and
jo
inc
in
movs
fbld
test
retf
mov
xor
out
ret
adc
and
sahf
scas
mov
push
int
mov
push
fidivr
xchg
fs
xor
add
mov
loop
fucom
fdiv
aam
call
lahf
les
jg
adc
es
cmp
xor
pop
cmc
push
adc
cmp
movs
adc
push
lds
and
sub
push
loopne
aad
xor
adc
les
nop
ja
push
pop
lds
das
jp
jnp
push
aam
sub
jg
dec
aad
aas
push
mul
in
mov
test
in
movq
push
addr16
hlt
imul
jo
lods
xchg
stos
add
push
mov
add
lods
xchg
jne
xchg
test
ss
mov
and
jo
inc
out
lahf
and
test
xchg
push
mov
mov
lahf
xlat
test
mov
inc
add
push
leave
add
xor
loope
out
jbe
mul
fs
rol
(bad)
sti
shl
icebp
je
and
adc
neg
sub
add
xchg
pop
xor
adc
push
mov
aaa
push
movs
adc
push
lds
or
mov
loopne
aad
xor
adc
les
jae
dec
inc
jb
pop
das
cmp
aam
add
push
pop
aad
aas
push
test
in
mov
test
push
in
(bad)
out
addr16
hlt
push
mov
or
pop
pop
or
adc
mov
test
lds
loop
fist
jmp
jo
inc
xchg
movs
mov
es
cmps
xchg
pusha
stos
push
popf
mov
xor
loopne
test
mov
inc
ret
push
test
loope
sar
fs
xchg
add
fisttp
lds
rcl
lahf
lds
jg
ins
in
add
or
push
rcl
inc
jg
mov
aaa
sub
lds
and
and
sbb
loopne
aad
xor
adc
jg
dec
les
nop
dec
movs
pop
inc
jl
push
das
pop
(bad)
arpl
aam
or
push
ins
aad
aas
test
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
or
push
movs
xchg
test
mul
test
push
mov
mov
jne
xchg
jmp
movs
mov
and
jo
inc
xchg
movs
frstor
xchg
cmps
cdq
xor
pusha
stos
push
cli
mov
xor
in
call
and
xchg
scas
mov
in
out
add
xor
cmp
shl
jecxz
stos
in
fisttp
fbstp
les
fcomp
xor
shr
in
add
and
or
adc
adc
inc
lock
xor
dec
and
adc
inc
aad
xor
or
les
ins
movs
adc
jg
adc
push
mov
aam
xor
arpl
pop
aas
outs
neg
push
in
mov
test
sbb
sysretw
out
addr16
dec
mov
inc
cmc
pop
pop
outs
push
scas
xchg
scas
add
push
lock
mov
cdq
xchg
adc
shl
movs
xchg
and
xchg
cmps
mov
mov
mov
xor
rcl
loopne
in
call
inc
lahf
scas
mov
push
int
movs
xor
fidivr
enter
out
test
shl
(bad)
into
data16
(bad)
je
and
jne
lahf
lds
sbb
add
je
aas
pop
ds
pop
rcr
sbb
jg
mov
aaa
adc
adc
sbb
cmp
dec
das
cmps
push
daa
pop
mov
loopne
aad
xor
sub
ins
push
xor
pop
nop
outs
movs
js
(bad)
lds
das
je
push
inc
addr16
add
push
jl
push
aas
jge
jl
adc
ins
mov
test
gs
and
hlt
dec
mov
or
bound
inc
push
adc
gs
test
push
mov
mov
adc
mov
mov
cmps
movs
xchg
and
test
xchg
push
xor
push
retf
inc
repz
inc
sahf
scas
aam
(bad)
push
leave
add
push
ret
jbe
test
add
out
mul
out
je
and
jne
lahf
(bad)
xchg
and
and
xor
cmp
adc
xchg
pop
cmp
adc
cmp
inc
lock
sbb
and
pop
loopne
aad
xor
sbb
jl
push
movs
dec
inc
cmp
adc
pop
(bad)
push
inc
pop
aam
adc
ins
aad
aas
dec
test
in
mov
test
inc
in
cmovs
jo
popa
hlt
adc
jne
cmc
jle
ja
lods
xchg
stos
add
push
mul
test
push
lahf
xchg
jne
xchg
cdq
adc
scas
mov
and
jo
inc
lods
movs
xchg
and
and
push
stc
mov
xor
jmp
and
mov
stc
push
iret
add
xor
fidivr
shl
lds
out
(bad)
out
je
and
adc
mov
pop
xor
jnp
daa
in
add
or
xchg
or
adc
imul
lock
movs
and
cmps
pusha
daa
pop
mov
loopne
aad
xor
pop
(bad)
adc
les
nop
jnp
pop
inc
jno
push
das
and
jae
cs
or
push
sub
inc
aas
push
test
ins
mov
test
pop
in
mulps
push
pmuludq
mov
outs
cmc
pop
pop
outs
push
mov
repnz
test
push
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
lock
pushf
and
cdq
cmps
call
mov
xor
hlt
xlat
rol
leave
and
xchg
scas
mov
push
fld
mov
push
(bad)
mov
repnz
xor
add
loop
call
je
and
adc
ret
xchg
and
je
add
outs
xchg
pop
ds
push
shl
adc
cmp
and
sub
movs
jae
sub
and
sbb
aaa
xor
push
(bad)
push
imul
nop
jo
jns
pop
lds
das
dec
(bad)
addr16
addr16
add
push
dec
aad
aas
push
not
push
in
mov
test
push
in
andnps
pop
addr16
hlt
push
mov
push
cmc
push
pop
outs
push
xchg
xchg
mov
sti
push
lock
std
add
mov
inc
mov
adc
mov
add
mov
mov
pusha
movs
push
mov
fbld
inc
mov
(bad)
(bad)
in
push
mov
aad
push
fnstsw
aad
ret
add
mov
leave
data16
in
loopne
call
fcomp
das
test
shl
in
add
cmp
push
shl
sbb
push
add
xor
sub
and
cmps
sbb
sbb
or
pop
aad
xor
adc
inc
push
push
les
nop
jae
push
inc
cmp
(bad)
outs
inc
cs
or
push
ins
aad
aas
jns
jo
dec
in
mov
test
in
unpckhps
push
addr16
push
mov
adc
pop
pop
pop
push
xchg
xchg
xchg
add
push
mul
test
mov
mov
jne
xchg
mov
cmps
mov
and
jo
inc
mov
movs
es
cmps
fnstenv
pusha
xchg
push
clc
mov
xor
int
icebp
inc
lods
adc
and
xchg
scas
mov
push
fiadd
mov
push
repz
xchg
fs
xor
gs
retf
out
je
and
adc
fcomp
xor
arpl
jne
adc
and
xor
cmp
adc
cmp
and
cmp
cmp
and
dec
loopne
aad
xor
push
(bad)
outs
push
dec
les
nop
jno
adc
pop
lds
push
mov
pop
aam
sub
push
ins
aad
aas
push
not
jl
sbb
push
in
punpckhbw
pusha
addr16
jo
pop
xchg
imul
pop
pop
or
add
push
xchg
test
push
cmps
xchg
adc
inc
mov
adc
mov
mov
in
movs
mov
movs
cmps
mov
xchg
pusha
stos
push
mov
(bad)
push
hlt
xlat
mov
mov
(bad)
(bad)
scas
mov
push
jmp
out
loope
int
clc
mov
into
xlat
xor
add
mov
out
je
and
adc
mov
pop
test
xor
test
pop
pusha
xchg
cmp
adc
adc
jno
pop
movs
xor
and
and
or
pop
aad
xor
cmp
ins
push
jae
jo
dec
movs
pop
inc
and
or
dec
(bad)
popa
inc
addr16
add
push
jne
push
aas
push
test
ins
mov
test
push
in
pcmpgtb
push
addr16
hlt
jo
bound
bound
outs
push
mov
pushf
add
push
lods
mov
mov
adc
inc
mov
adc
xor
inc
mov
xchg
and
and
mov
xchg
xlat
jmp
and
std
scas
hlt
inc
xlat
(bad)
icebp
push
iret
add
xor
pushf
mov
aad
fidiv
fild
int3
(bad)
out
je
and
jne
lahf
(bad)
xchg
and
sub
add
add
xchg
add
cmp
sbb
cmp
movs
sub
and
or
aaa
loopne
aad
xor
adc
inc
push
ja
cmp
cmp
adc
cmp
pop
inc
pop
aam
add
push
ins
aad
aas
push
imul
dec
in
mov
test
pop
in
(bad)
out
addr16
hlt
jl
inc
xchg
jnp
jl
popw
push
add
push
mov
add
scas
xchg
adc
inc
call
(bad)
jmp
and
jo
inc
sahf
movs
xchg
and
mov
cdq
xor
pusha
retf
mov
xor
in
lds
enter
fiadd
scas
mov
push
(bad)
add
push
cld
mov
shl
add
out
cmc
mov
and
jne
lahf
les
arpl
and
sub
cmp
adc
cmp
adc
adc
dec
lock
cmp
adc
add
cmp
aad
xor
add
les
ins
movs
adc
(bad)
lds
das
push
mov
aam
add
arpl
pop
aas
ins
neg
dec
in
mov
test
add
xor
add
das
addr16
hlt
push
mov
inc
cmc
popw
or
test
in
gs
mov
xlat
out
out
xchg
xchg
adc
mov
movs
and
xchg
pusha
cwde
push
movs
mov
xor
in
hlt
inc
call
jmp
jmp
scas
mov
push
into
add
push
out
mov
(bad)
not
xlat
xor
add
lods
(bad)
out
je
and
adc
cmps
lahf
ficom
popa
sar
in
add
aas
xchg
pop
outs
xchg
or
adc
daa
adc
imul
das
and
cmps
add
loopne
aad
xor
push
(bad)
ins
push
jbe
sub
jbe
dec
inc
arpl
jno
jle
jae
jle
outs
adc
push
jns
add
push
test
dec
mov
test
pop
in
lsl
push
addr16
hlt
push
mov
jle
jb
push
push
adc
lea
mov
lahf
xchg
jne
xchg
mov
mov
mov
lock
test
es
pusha
mov
xor
(bad)
xlat
hlt
inc
mov
lds
inc
mov
push
into
add
xor
cmp
mov
(bad)
out
std
and
adc
fstp
jno
ins
rcr
in
add
cmp
add
and
cmc
sbb
cmp
movs
sub
and
cmp
adc
cs
loopne
aad
xor
add
jg
ja
cmp
inc
lds
das
imul
inc
fs
cmp
push
push
aad
aas
jb
dec
ja
in
mov
test
pop
in
addps
inc
addr16
hlt
adc
jne
cmc
popw
push
add
push
test
add
mov
inc
mov
adc
mov
mov
jo
inc
mov
iret
stos
and
test
push
loope
out
inc
lods
adc
and
retf
inc
aad
sti
push
repnz
push
(bad)
mov
out
fs
xor
gs
lahf
data16
xor
adc
fcomp
xor
sub
add
and
sbb
adc
ds
aaa
daa
movs
push
lock
push
and
sbb
dec
loopne
aad
xor
cmp
dec
push
jbe
pop
nop
popa
movs
or
das
inc
(bad)
pop
inc
jg
inc
xor
push
aad
aas
push
test
in
mov
test
push
in
cmovae
push
addr16
hlt
jae
jg
and
push
cmc
pop
pop
outs
push
xlat
xchg
lods
add
push
mul
test
push
xchg
xchg
adc
mov
inc
mov
iret
and
cmps
sahf
xor
pusha
xchg
push
mov
fistp
inc
(bad)
adc
and
mov
les
movs
xor
fnstcw
aam
shl
retf
in
fisttp
fbstp
cdq
adc
fcomp
or
in
add
and
or
data16
sbb
jg
mov
aaa
adc
push
lock
lds
and
pop
cmps
and
sub
pop
loopne
aad
xor
inc
(bad)
ins
push
pusha
les
movs
dec
inc
and
inc
das
cmp
aam
add
push
das
aad
aas
push
not
push
in
mov
test
sbb
inc
lsl
push
addr16
push
mov
inc
cmc
pop
pop
dec
push
mov
mov
movs
push
cmps
mov
mov
adc
inc
mov
fcom
jmp
mov
mov
test
iret
popf
and
push
mov
fbstp
inc
mov
(bad)
xchg
scas
mov
push
enter
rcl
push
les
xchg
shl
enter
leave
gs
les
out
je
and
adc
scas
lahf
(bad)
xchg
cs
and
add
and
or
push
cmc
add
sub
and
add
movs
sbb
daa
add
xor
push
(bad)
push
imul
dec
inc
cmp
dec
das
arpl
jae
fs
sbb
push
popa
aad
aas
push
div
inc
in
mov
test
in
unpckhps
push
addr16
hlt
push
mov
or
push
lods
xchg
mov
xchg
push
mul
test
add
les
mov
xchg
in
adc
movs
mov
and
jo
inc
mov
mov
es
ret
pusha
xchg
mov
xor
rcl
out
inc
mov
(bad)
mov
(bad)
push
aam
mov
push
lds
leave
div
iret
add
aad
retf
out
je
and
adc
fcomp
xor
popa
shl
in
add
add
sub
pop
cmc
sbb
cmp
movs
adc
push
lds
and
or
and
pop
aad
xor
adc
les
nop
jb
ins
inc
pop
lds
das
and
arpl
aam
or
push
sub
mul
push
push
mov
test
in
cmovb
push
addr16
hlt
jne
jg
and
push
cmc
addr16
outs
push
cmps
xchg
scas
add
push
scas
mov
test
scas
xchg
xchg
in
mov
mov
and
xchg
cmps
mov
push
mov
fistp
inc
mov
lds
inc
sti
(bad)
loop
retf
xor
cwde
mov
xchg
fs
rol
mov
in
shl
je
and
adc
aad
clc
xchg
daa
pop
sub
add
and
or
pop
cmc
sbb
jg
mov
aaa
movs
adc
sbb
imul
cmps
outs
daa
cmp
aad
xor
cmp
ins
push
jne
dec
nop
xor
or
outs
mov
jns
dec
add
push
je
inc
aas
dec
test
in
mov
test
gs
in
andps
pop
addr16
hlt
jae
push
xchg
jg
dec
cmc
push
pop
inc
push
adc
gs
out
lea
mov
inc
mov
adc
mov
mov
movs
fisub
xchg
cmps
xchg
pusha
ret
push
mov
fistp
inc
int
retf
and
enter
sti
(bad)
mov
xor
ret
jbe
not
fs
xor
add
mov
leave
data16
cld
je
and
adc
fcomp
sub
rcl
dec
outs
or
jne
adc
xchg
push
jg
mov
aaa
or
push
lock
outs
and
cmp
sbb
add
xor
ss
jl
jae
jne
xor
dec
inc
arpl
adc
pop
mov
aam
add
dec
aad
aas
pop
test
in
mov
test
in
cmovs
inc
addr16
hlt
dec
mov
dec
cmc
addr16
outs
push
adc
rol
xchg
mov
mov
jne
xchg
mov
movs
mov
and
jo
inc
stos
movs
mov
xchg
cmps
ret
pusha
xchg
push
cdq
mov
xor
not
out
inc
mov
(bad)
sahf
scas
hlt
inc
aad
stc
push
int3
add
push
(bad)
mov
shl
jecxz
stos
in
fisttp
shl
adc
ficomp
xor
and
or
adc
outs
and
push
rcr
sub
sbb
sbb
or
cmp
and
adc
dec
aad
xor
or
les
nop
jae
push
das
pop
(bad)
jnp
outs
aam
or
push
arpl
inc
aas
data16
dec
in
mov
test
dec
in
(bad)
out
addr16
hlt
push
jne
cmc
pop
pop
outs
push
test
scas
add
push
scas
mov
call
inc
mov
adc
xchg
mov
and
jo
inc
out
and
xchg
pusha
stos
push
xchg
mov
xor
rcl
test
mov
inc
cld
(bad)
cmc
push
mov
mov
push
(bad)
mov
mul
(bad)
add
fisttp
out
shl
ficom
ficomp
xor
in
add
adc
aaa
pop
jge
je
sbb
sub
jg
mov
aaa
pop
movs
push
lock
sub
pop
cmps
adc
loopne
aad
xor
push
(bad)
push
nop
sub
lds
pusha
(bad)
arpl
aam
add
push
imul
aas
push
test
in
mov
test
push
in
lsl
pop
addr16
hlt
adc
push
cmc
pop
pop
pop
push
rcl
cmps
gs
out
mov
mov
inc
mov
adc
mov
mov
mov
xchg
and
test
cmps
push
xor
inc
cmc
and
jecxz
rol
aad
test
fcom
mov
(bad)
fs
rol
in
(bad)
out
je
and
adc
ficomp
das
test
jne
adc
sbb
sbb
adc
xchg
push
jg
mov
aaa
sub
and
cmp
xor
sbb
push
loopne
aad
xor
inc
(bad)
je
imul
dec
inc
push
lds
(bad)
gs
jo
imul
aad
aas
inc
imul
dec
in
mov
test
in
cmovs
push
addr16
hlt
push
mov
or
push
stos
xchg
cmps
add
push
mul
test
add
mov
inc
jecxz
adc
mov
jo
inc
stos
movs
lods
and
mov
pusha
xchg
push
lahf
mov
xor
rcl
leave
inc
mov
(bad)
loopne
loopne
rol
rcl
mov
push
lds
leave
fs
add
ret
(bad)
out
je
and
adc
aam
les
jnp
and
adc
jg
push
outs
add
sbb
adc
adc
dec
lock
and
and
adc
pop
aad
xor
pop
(bad)
pop
push
jbe
push
nop
pop
movs
adc
cmp
adc
push
(bad)
push
inc
inc
aam
sbb
push
popa
aad
aas
outs
neg
push
in
mov
test
in
nop
and
inc
hlt
push
mov
or
inc
pop
push
add
push
mov
add
fld
stos
jne
xchg
out
adc
test
mov
cmps
movs
mov
mov
pusha
mov
mov
fistp
inc
lods
adc
and
in
scas
mov
push
jmp
jmp
(bad)
jecxz
les
in
lea
repnz
loope
jmp
out
je
and
jne
lahf
lds
and
sbb
adc
push
test
pop
cmp
or
sbb
add
push
mov
aaa
or
and
cmps
aas
daa
pop
mov
loopne
aad
xor
push
(bad)
inc
push
inc
les
je
jl
jb
push
das
jge
push
inc
addr16
cmp
pop
push
jno
fs
push
neg
inc
in
mov
test
push
in
movq
push
addr16
hlt
sbb
bound
bound
outs
push
adc
std
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
xchg
movs
xchg
and
cmps
cmps
xchg
pusha
sahf
push
cmps
mov
xor
icebp
xlat
aad
mov
(bad)
nop
scas
int
cli
(bad)
aam
leave
add
xor
ret
jbe
not
shl
cli
add
loope
shl
fdiv
rcl
mov
pop
sub
in
add
jns
das
pop
es
push
rcl
pop
adc
or
sub
adc
xor
xor
outs
and
add
and
xor
sbb
fs
imul
dec
inc
lds
das
pop
(bad)
pop
inc
fs
add
push
dec
aad
aas
push
div
ja
in
mov
test
pop
in
addps
inc
pmuludq
jge
pusha
jne
cmc
pop
pop
outs
push
rcl
xchg
gs
test
add
mov
inc
mov
adc
mov
and
mov
stos
movs
test
pushf
cmps
xchg
xor
pusha
xchg
push
mov
fild
inc
lods
adc
and
xchg
scas
stc
inc
aad
stc
push
rol
mov
push
sar
retf
lea
repnz
retf
pop
je
and
adc
fcomp
xor
rcl
in
add
and
sub
pop
cmc
pop
adc
adc
cmp
lds
and
and
adc
pop
aad
xor
adc
les
nop
jo
jb
cmp
adc
pop
(bad)
jns
outs
aam
add
push
arpl
inc
aas
push
neg
push
in
mov
test
in
orps
jnp
inc
hlt
dec
mov
or
and
inc
push
stos
xchg
mov
in
push
cmc
gs
out
mov
xchg
xchg
mov
in
adc
mov
lods
inc
cmps
movs
mov
es
cmps
xor
iret
xor
hlt
xlat
hlt
inc
rcl
jecxz
rol
rol
scas
mov
push
int
jmp
aad
loop
ret
mov
shl
enter
shl
(bad)
iret
data16
je
and
adc
movs
lahf
aad
and
adc
add
and
or
sbb
sbb
adc
adc
sub
and
dec
sbb
or
pop
aad
xor
adc
fs
ins
les
sub
lds
das
inc
(bad)
arpl
aam
add
push
jne
jl
push
test
ins
mov
test
gs
in
cmovp
push
addr16
hlt
imul
outs
push
lahf
xchg
mov
call
mov
add
xchg
jne
xchg
jmp
mov
and
jo
inc
mov
xchg
and
and
enter
mov
inc
mov
(bad)
xchg
scas
mov
push
retf
xor
cld
mov
xchg
shl
retf
add
retf
shl
les
call
fcomp
sub
sub
push
in
add
and
xor
adc
sbb
outs
xchg
pop
jg
mov
aaa
adc
cmp
and
cmps
add
inc
mov
loopne
aad
xor
ds
jl
push
les
dec
movs
dec
inc
jle
adc
ds
jle
fs
add
push
popa
aad
aas
and
pop
ja
in
mov
test
jp
bound
adc
hlt
push
mov
or
push
lods
xchg
stos
add
push
mul
test
mov
inc
call
(bad)
jmp
and
jo
inc
lods
movs
mov
cmps
iret
and
cmps
cdq
xor
pusha
mov
cli
mov
xor
out
xlat
inc
jmp
scas
mov
push
mov
mov
push
in
in
jbe
not
fs
xor
add
les
shl
les
fcomp
xor
jg
or
or
outs
sub
push
shl
adc
pop
mov
aaa
or
and
and
add
pop
aad
xor
adc
pop
push
dec
les
nop
push
movs
adc
cmp
push
das
dec
(bad)
jae
jg
dec
sub
pop
push
sub
dec
aas
push
neg
adc
push
mov
test
gs
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
jnp
test
mov
mov
call
inc
xchg
jne
xchg
xchg
adc
lock
and
jo
inc
mov
iret
mov
xchg
cmps
xor
xchg
push
loopne
nop
xor
in
test
mov
inc
inc
call
mov
push
(bad)
mov
into
shl
rol
lods
(bad)
out
je
and
adc
fcomp
and
add
sbb
aaa
pop
aaa
xchg
aaa
rcr
pop
adc
cmp
cs
sub
cmps
and
cmp
aad
xor
push
(bad)
jl
imul
dec
inc
ins
lds
dec
(bad)
jnp
arpl
push
adc
push
ins
aad
aas
je
fs
in
mov
test
add
jg
dec
out
addr16
hlt
push
mov
outs
cmc
pop
pop
jle
adc
mov
test
xchg
xchg
jne
xchg
mov
mov
mov
lock
xchg
and
mov
pusha
mov
mov
fistp
inc
mov
(bad)
(bad)
out
push
out
add
push
ret
jbe
mul
xor
add
lock
out
je
and
adc
fstp
sub
jg
jne
adc
and
adc
jns
or
and
movs
sub
and
cmp
popa
daa
or
push
loopne
aad
xor
cs
jl
jl
inc
nop
jae
dec
inc
cmp
(bad)
ja
pop
aam
add
jl
pop
aas
dec
imul
dec
in
mov
test
in
nop
jae
push
hlt
dec
mov
pop
cmc
pop
pop
outs
push
adc
rol
movs
push
mov
mov
cld
inc
popf
jne
xchg
nop
adc
movs
mov
and
jo
inc
lods
movs
mov
es
cmps
cdq
xor
pusha
retf
mov
xor
in
mov
and
mov
stc
push
int
lds
(bad)
mov
sahf
fs
rol
test
ret
adc
fcomp
xor
popa
ror
in
add
jle
xor
popa
xchg
sub
pop
cmc
pop
adc
pop
mov
aaa
shld
push
movs
or
cmps
xor
cmp
xor
dec
(bad)
push
nop
jno
adc
lds
das
push
(bad)
arpl
aam
add
push
arpl
inc
aas
pop
div
mov
test
arpl
push
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
je
test
mov
mov
mov
rol
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
shl
cmps
mov
push
mov
fist
loop
leave
and
xchg
scas
mov
push
int3
add
push
cmp
les
lock
mov
xchg
mul
shl
(bad)
adc
fistp
xor
ins
rcr
in
add
cmp
or
imul
adc
push
mov
aaa
sub
and
inc
cmps
adc
inc
mov
loopne
aad
xor
push
(bad)
jae
outs
les
jo
pop
inc
jb
push
das
inc
(bad)
jl
pop
aam
xor
push
ja
inc
aas
push
not
dec
in
mov
test
sbb
bound
push
addr16
adc
inc
cmc
pop
pop
inc
push
adc
mov
mov
xchg
mov
adc
mov
nop
inc
mov
fldenv
and
into
xor
into
xlat
cld
inc
mov
korw
scas
mov
push
rol
xor
ret
jbe
not
shl
jmp
lock
gs
out
data16
cli
je
and
adc
fstp
test
shr
test
xchg
es
adc
adc
aas
adc
movzx
aaa
or
cs
movs
sbb
daa
inc
mov
loopne
aad
xor
adc
les
pop
movs
adc
jp
adc
pop
(bad)
outs
inc
and
push
adc
push
arpl
popa
aas
jle
pop
ja
in
mov
test
pop
in
nop
outs
addr16
hlt
push
mov
or
push
lods
xchg
xchg
add
push
mul
test
add
xchg
xchg
adc
mov
mov
xchg
movs
fbld
mov
mov
xor
cld
xlat
loope
ficom
in
in
korw
scas
mov
push
repnz
push
(bad)
mov
icebp
fs
xor
gs
ret
out
je
and
adc
fcomp
xor
sub
xor
xor
cmp
sbb
pop
daa
xchg
add
adc
pop
mov
aaa
shld
sbb
cmp
add
adc
add
mov
pop
adc
pop
push
jbe
and
jno
push
das
push
(bad)
inc
data16
add
push
(bad)
aad
aas
pop
div
push
in
mov
test
push
in
sysret
out
addr16
hlt
dec
mov
push
cmc
pop
pop
outs
push
test
scas
add
push
mov
test
push
scas
xchg
jne
xchg
xchg
adc
jmp
jo
inc
in
movs
mov
es
cmps
mov
pusha
mov
xor
hlt
xlat
test
mov
(bad)
cli
push
lds
aam
aad
test
jbe
mul
shl
add
fimul
out
je
and
adc
fcomp
add
arpl
sbb
or
and
or
sbb
aaa
adc
sbb
aaa
lock
ss
cmp
adc
pop
mov
loopne
aad
xor
dec
(bad)
fs
popa
les
jo
dec
inc
jns
push
das
daa
(bad)
dec
inc
and
push
or
push
das
aad
aas
sub
inc
ja
in
mov
test
pop
in
lsl
dec
addr16
inc
mov
inc
cmc
pop
pop
dec
push
adc
lea
test
mov
mov
cmps
inc
mov
adc
mov
scas
and
jo
inc
mov
fldenv
and
cdq
xor
lock
hlt
inc
in
adc
and
std
scas
loop
sti
mov
xor
test
in
xlat
xor
add
ror
shl
rcl
lahf
test
sub
add
or
jge
adc
xchg
add
mov
aaa
adc
cmp
and
outs
and
add
or
pop
aad
xor
adc
jl
pop
les
inc
movs
pop
inc
cmp
pop
das
ins
(bad)
je
jae
inc
adc
push
pop
aad
aas
js
inc
ja
in
mov
test
in
cmovns
pop
addr16
hlt
push
mov
jbe
jg
movhps
push
mov
test
push
mov
inc
mov
adc
stos
mov
and
jo
inc
xchg
movs
mov
es
cmps
cdq
xor
pusha
mov
xor
rcl
jecxz
mov
(bad)
xchg
scas
les
(bad)
aam
aam
mov
push
cmp
xchg
add
aad
loopne
fucom
lds
loop
out
ret
jne
lahf
(bad)
xchg
push
pop
xor
ins
ror
in
add
jle
xor
add
adc
cmp
xor
and
sub
pop
loopne
aad
xor
adc
les
nop
xor
inc
inc
jb
je
aas
(bad)
jae
(bad)
aam
cmp
push
(bad)
aad
aas
push
div
mov
test
gs
in
cmovs
push
addr16
hlt
jne
arpl
jno
imul
in
push
xchg
test
push
lods
xchg
xchg
xchg
in
adc
xchg
mov
and
jo
inc
out
shl
sahf
cmps
mov
push
div
mov
inc
mov
lds
inc
inc
into
push
leave
add
push
in
clc
jbe
test
add
loop
int
mul
fnstenv
(bad)
adc
les
or
add
jbe
pop
rcl
pop
adc
ja
sub
or
and
and
or
dec
aad
xor
adc
bound
les
nop
jp
dec
inc
cmp
pusha
das
pop
(bad)
arpl
aam
add
push
das
aad
aas
push
test
in
mov
test
pop
in
lsl
push
addr16
hlt
imul
fs
adc
lea
test
mov
inc
mov
adc
mov
nop
inc
mov
xchg
and
and
into
xor
out
xlat
hlt
inc
cmps
adc
and
std
scas
mov
push
in
add
xor
fdivr
leave
fs
rol
aam
retf
out
je
and
adc
rcr
test
shl
in
add
daa
xchg
pop
sbb
or
adc
cmp
movs
cmp
daa
lds
push
movs
sbb
daa
cmp
xor
xor
jl
imul
dec
inc
pop
lds
das
pop
(bad)
arpl
aam
add
ins
aad
aas
push
test
in
mov
test
unpckhps
cmp
mov
or
push
mov
push
mul
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
fldenv
scas
cmps
cdq
xor
pusha
cmps
push
mov
xor
xlat
hlt
inc
rcl
and
ret
inc
test
out
aam
in
cwde
aad
push
aad
jmp
xor
add
fisttp
fbstp
les
mov
pop
xor
add
and
or
or
cmp
adc
aas
adc
ds
aaa
add
and
pop
cmps
cmp
adc
xor
cmp
push
push
aaa
les
movs
push
inc
cmp
ins
das
pop
mov
aam
sbb
push
arpl
jo
push
mul
dec
in
mov
test
jge
gs
jnp
inc
hlt
jb
jg
ss
cmc
jg
push
push
stos
xchg
scas
add
push
mov
mov
mov
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
cwde
es
cmps
sahf
xor
pusha
mov
xor
iret
xlat
rol
and
(bad)
scas
mov
push
int
mov
push
les
xchg
xlat
xor
add
loop
retf
out
je
and
adc
ret
lahf
fist
arpl
sbb
dec
add
and
or
pop
cmc
cmp
sbb
push
lock
sub
and
or
adc
mov
pop
dec
(bad)
adc
les
jo
or
lds
pop
(bad)
pop
inc
jns
dec
add
das
aad
aas
pop
test
in
mov
test
in
lsl
pop
addr16
hlt
push
mov
inc
cmc
gs
jae
mov
mov
add
add
jne
xchg
mov
ss
mov
jo
inc
mov
(bad)
and
and
test
push
rcl
hlt
inc
mov
korb
scas
mov
push
mov
mov
push
cmp
fs
xor
add
ror
shl
adc
out
clc
xchg
xor
sub
add
add
imul
cmc
push
adc
pop
mov
aaa
adc
and
push
lds
movs
sbb
daa
lfs
loopne
aad
xor
dec
(bad)
jl
jb
inc
nop
xor
push
das
pop
(bad)
outs
inc
addr16
add
push
ins
aad
aas
pop
imul
dec
in
mov
test
lsl
inc
addr16
hlt
or
or
jle
outs
push
xchg
cli
gs
test
push
mov
inc
mov
xchg
xchg
adc
(bad)
mov
and
jo
inc
stos
movs
fbld
xchg
cmps
lds
pusha
mov
scas
mov
xor
hlt
xlat
in
inc
cld
adc
inc
out
scas
loop
ffreep
ret
push
int3
add
xor
fidivr
lock
xor
add
mov
aad
out
test
in
out
ret
jne
lahf
les
pusha
rcr
in
add
jbe
sbb
adc
ds
aaa
adc
and
cmp
aaa
loopne
aad
xor
cmp
les
jae
jl
jno
adc
pop
(bad)
jae
jg
add
push
push
aad
aas
push
test
in
mov
test
add
push
jns
push
addr16
hlt
inc
mov
push
push
adc
mov
mov
mov
inc
mov
adc
mov
xchg
and
jo
inc
out
mov
and
push
stos
mov
xor
hlt
xlat
repnz
icebp
adc
and
enter
add
push
jmp
repz
stc
mov
enter
enter
fsub
(bad)
sti
mul
les
lds
mov
pop
xor
add
xor
xchg
cmp
adc
add
and
pop
movs
adc
xor
xor
pop
movs
jno
and
push
loopne
aad
xor
adc
fs
outs
les
jp
pop
inc
lds
pop
(bad)
jle
inc
aam
or
push
inc
aad
aas
dec
imul
in
mov
test
jns
pop
cvtdq2ps
inc
addr16
hlt
inc
mov
outs
cmc
push
pop
outs
push
adc
gs
mov
xchg
out
mov
adc
inc
mov
adc
mov
mov
lods
movs
cmps
and
scas
cmps
xchg
pusha
adc
into
xor
jecxz
rol
retf
and
xchg
scas
mov
push
aad
clc
xor
cld
mov
lock
into
add
in
lds
out
je
and
adc
fstp
pop
test
shl
in
add
daa
xchg
pop
es
or
pusha
cmc
sbb
movzx
aaa
sbb
sub
and
cmp
sbb
sbb
xor
adc
inc
push
inc
les
nop
movs
dec
inc
cmp
push
das
popa
(bad)
je
js
adc
push
and
inc
aas
jle
dec
ja
in
mov
test
sbb
gs
inc
addr16
hlt
or
ins
cmc
pop
pop
or
lods
xchg
pop
push
mul
test
add
mov
mov
jne
xchg
mov
ss
mov
and
jo
inc
out
and
mov
push
push
test
in
out
inc
rcl
into
and
mov
stc
push
aam
push
fidivr
into
test
lds
mov
aad
fucom
fbstp
popf
adc
mov
pop
push
test
shl
in
add
xchg
pop
es
ja
cmp
push
adc
ds
aaa
shld
xor
cmp
and
adc
pop
aad
xor
adc
fs
jbe
daa
nop
pop
movs
adc
cmp
dec
das
aas
(bad)
jb
jno
dec
or
push
arpl
inc
aas
push
pop
ja
in
mov
test
push
in
sysret
out
addr16
inc
mov
push
cmc
pop
pop
push
stos
xchg
test
push
icebp
gs
mov
aad
mov
adc
inc
mov
adc
xchg
mov
and
jo
inc
cdq
movs
pushf
and
xchg
cmps
xchg
xor
pusha
xchg
push
xor
push
(bad)
test
iret
inc
(bad)
scas
mov
push
fadd
stos
xor
std
mov
fsub
enter
out
gs
enter
std
je
and
adc
fcomp
test
rcr
in
add
daa
xchg
sub
or
adc
and
es
aaa
adc
adc
and
xor
sub
sbb
loopne
aad
xor
adc
les
nop
push
movs
push
inc
jb
adc
inc
fs
add
push
je
inc
aas
dec
not
push
in
mov
test
sbb
imul
jg
inc
mov
inc
cmc
push
pop
pop
push
fist
hlt
gs
test
add
mov
inc
movs
jne
xchg
xchg
adc
cmps
mov
and
jo
inc
out
and
cmps
xchg
pusha
fwait
push
mov
fistp
inc
mov
(bad)
mov
ret
add
xor
sar
fs
xor
add
out
retf
out
je
and
adc
repnz
test
ins
shl
in
add
and
adc
pop
cmc
and
sub
ss
movs
sbb
daa
sbb
adc
inc
aad
xor
or
inc
push
imul
dec
inc
cmp
(bad)
jg
fs
and
push
and
pop
aas
push
test
in
mov
test
jl
push
addr16
hlt
ja
add
inc
pop
inc
push
lods
xchg
mov
gs
std
add
rol
jne
xchg
mov
test
movs
inc
lods
movs
fbld
xchg
cmps
xchg
xor
pusha
xchg
push
cli
mov
xor
rcl
inc
loope
mov
cld
(bad)
xchg
scas
aam
popf
(bad)
icebp
push
leave
add
xor
ret
mov
shl
lds
mov
retf
out
je
and
adc
fstp
add
add
daa
xchg
pop
and
sub
push
cmc
inc
adc
cs
aaa
sub
dec
lock
add
dec
cmps
xor
add
push
loopne
aad
xor
xor
push
nop
inc
movs
pop
inc
jno
adc
inc
(bad)
jl
pop
aam
or
push
push
aad
aas
xor
ins
ja
in
mov
test
sbb
jbe
pop
out
addr16
ins
mov
push
cmc
jp
add
test
mov
movs
push
cmc
mov
mov
cmps
xchg
jne
xchg
mov
mov
mov
xchg
fwait
es
sahf
xor
pusha
test
mov
xor
repnz
lock
loop
leave
and
nop
scas
std
inc
clc
(bad)
out
into
add
xor
xchg
into
fs
rol
loop
cmc
data16
out
je
and
jne
lahf
xchg
xchg
or
aaa
test
jbe
push
add
jns
aaa
pop
ds
add
push
cmc
add
jg
mov
aaa
adc
and
add
and
xor
cmp
push
push
jne
xchg
inc
movs
dec
inc
cmp
bound
pop
(bad)
popa
inc
jg
push
add
push
inc
aad
aas
dec
imul
in
mov
test
inc
in
unpcklps
addr16
hlt
push
mov
dec
cmc
jp
imul
xchg
mov
mov
mov
adc
inc
mov
adc
jmp
jo
inc
mov
cdq
and
and
cwde
xor
not
mov
mov
(bad)
xchg
scas
loop
sti
(bad)
cli
push
mov
mov
push
ret
jbe
idiv
shl
iret
add
ror
je
and
adc
fstp
sub
pusha
ror
test
outs
sbb
adc
sbb
sbb
jg
mov
aaa
push
movs
sub
and
and
pop
loopne
aad
xor
add
jg
inc
les
nop
jae
adc
lds
das
push
mov
aam
or
push
das
aad
aas
jle
dec
ja
in
mov
test
pop
in
nop
outs
addr16
hlt
dec
mov
push
cmc
inc
pop
push
add
push
mul
test
push
mov
inc
mov
xchg
mov
movs
mov
and
jo
inc
out
mov
mov
mov
push
push
test
in
out
inc
rcl
in
mov
out
mov
repnz
(bad)
add
push
les
leave
fdiv
repz
lds
fbstp
(bad)
adc
fcomp
sub
add
and
add
adc
imul
lock
add
dec
and
adc
sbb
daa
xor
adc
outs
push
les
nop
jae
jle
jno
adc
jbe
pop
inc
jl
jne
push
mov
push
arpl
inc
aas
ins
neg
dec
in
mov
test
sbb
inc
packuswb
push
addr16
hlt
dec
mov
push
push
mov
push
xchg
mov
mov
lods
xchg
jne
xchg
cwde
adc
xchg
mov
and
jo
inc
cwde
movs
mov
std
cmps
sahf
xor
pusha
mov
mov
xor
hlt
xlat
hlt
inc
mov
lds
inc
test
stc
xor
(bad)
mov
into
xlat
xor
add
in
cmc
shl
(bad)
je
and
adc
les
aaa
test
and
es
and
or
xor
sbb
jg
mov
aaa
or
lds
dec
cmp
pop
loopne
aad
xor
cmp
push
dec
les
jae
js
ins
lds
(bad)
outs
inc
ja
inc
xor
push
imul
aas
ins
not
gs
mov
test
push
in
cmovp
push
addr16
hlt
pop
mov
inc
cmc
cmp
outs
push
adc
gs
std
add
test
xchg
xchg
test
mov
xchg
movs
xchg
and
and
into
xor
iret
xlat
mov
mov
(bad)
xchg
scas
mov
push
aam
fidiv
jecxz
in
jbe
div
shl
retf
add
in
int
jecxz
les
repz
rcr
cmp
aaa
rcr
in
add
sbb
adc
adc
cmp
jg
mov
aaa
or
and
cmp
cmp
xor
xor
dec
(bad)
adc
les
nop
jb
inc
inc
aas
lds
dec
(bad)
addr16
arpl
dec
cmp
push
ins
aad
aas
push
in
mov
test
in
pcmpgtw
popa
addr16
hlt
push
mov
or
push
scas
xchg
xchg
push
mul
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
sahf
movs
frstor
mov
pusha
retf
mov
xor
int3
xlat
loope
lods
adc
and
xchg
scas
out
xlat
mov
xor
(bad)
mov
leave
fs
xor
add
aad
and
iret
je
and
adc
fcomp
jb
jnp
sbb
sub
and
or
adc
adc
and
lds
and
or
xor
and
add
adc
les
jo
push
das
pop
(bad)
arpl
aam
xor
arpl
push
aas
push
neg
push
in
mov
test
push
in
pcmpeqb
pop
addr16
hlt
dec
mov
inc
cmc
pop
pop
fs
test
mov
xchg
push
cmc
mov
std
push
scas
xchg
jne
xchg
out
adc
mov
jo
inc
in
movs
and
cmps
mov
xchg
pusha
test
mov
fild
inc
mov
lds
inc
inc
out
fld
call
push
les
into
fnsave
out
add
loop
enter
(bad)
je
and
adc
fistp
xor
add
cmp
add
imul
adc
push
mov
aaa
push
movs
inc
lock
sbb
cmp
sbb
cmp
aad
xor
push
(bad)
ins
push
jo
inc
nop
dec
movs
dec
inc
imul
pusha
inc
cs
add
push
inc
aad
aas
push
test
in
mov
test
inc
in
lsl
push
addr16
adc
jp
jp
outs
push
lahf
xchg
test
push
in
cmps
test
add
mov
inc
mov
adc
mov
jo
inc
jmp
xchg
and
and
xchg
xor
lock
jmp
and
xlat
scas
mov
push
retf
xor
(bad)
mov
out
fs
add
out
enter
les
mov
icebp
lahf
rcl
pusha
rcr
in
add
and
adc
pop
cmc
add
sbb
adc
sbb
sub
adc
and
pop
mov
loopne
aad
xor
ss
inc
push
inc
les
xor
push
das
xor
ja
jle
jo
inc
mov
push
dec
aad
aas
push
not
ins
in
mov
test
pop
in
cmovnp
jne
pop
hlt
push
mov
ins
cmc
cs
outs
push
lods
xchg
scas
add
push
mul
test
push
xchg
xchg
mov
call
and
jo
inc
lods
movs
mov
es
ret
pusha
xchg
push
loopne
scas
xor
(bad)
xlat
out
inc
movs
adc
and
ret
inc
test
stc
push
rol
xor
sar
fidiv
int
stos
in
gs
leave
data16
out
je
and
adc
aad
out
aas
pop
pop
test
and
sbb
daa
xchg
pop
cmp
adc
ds
aaa
and
lds
and
push
cmps
sbb
cmp
xor
dec
(bad)
imul
jnp
ins
movs
pop
inc
jae
adc
pop
(bad)
cmova
dec
adc
push
sub
sbb
dec
neg
push
in
mov
test
in
(bad)
out
addr16
hlt
push
mov
or
pop
pop
pop
push
mov
push
hlt
gs
test
push
ret
adc
inc
mov
adc
lods
mov
and
jo
inc
out
movs
pushf
and
xchg
mov
xor
lock
out
inc
mov
lds
inc
jecxz
fcom
call
push
sar
xchg
xlat
xor
add
loop
aam
(bad)
shl
std
adc
les
xor
add
and
or
pop
cmc
sbb
jg
mov
aaa
pop
movs
sub
sub
push
and
adc
and
cmp
xor
xor
adc
les
movs
dec
inc
dec
lds
data16
aam
add
push
(bad)
aad
aas
push
div
or
test
push
in
sysret
out
addr16
hlt
sbb
pop
xchg
addr16
cmc
push
pop
pop
push
adc
mov
mov
mov
inc
mov
adc
test
mov
and
xchg
cmps
iret
xor
pusha
xchg
push
xchg
mov
inc
int
int
fadd
fld
scas
out
rol
rcl
xor
ret
jbe
not
shl
mov
(bad)
jecxz
(bad)
xlat
je
and
jne
lahf
ficom
daa
shl
in
add
or
ja
adc
xchg
push
jg
mov
aaa
sub
and
pop
cmps
sbb
add
xor
ds
push
push
dec
les
movs
push
inc
popa
lds
das
pop
(bad)
jg
fs
sbb
push
sub
push
aas
push
test
in
mov
test
arpl
dec
unpckhps
dec
addr16
hlt
or
or
push
mov
mov
test
add
mov
inc
mov
adc
jmp
jo
inc
mov
fbld
xchg
cmps
cdq
xor
pusha
test
mov
xor
out
out
inc
lods
adc
and
xchg
scas
jmp
add
xor
xchg
int
xor
add
int
retf
out
je
and
adc
lds
jbe
sbb
and
push
add
and
xchg
or
sbb
xchg
inc
jg
mov
aaa
add
and
and
adc
dec
aad
xor
pop
(bad)
push
nop
ins
movs
adc
(bad)
lds
push
(bad)
sbb
aam
add
push
arpl
pop
aas
dec
neg
inc
in
mov
test
jge
andnpd
pop
addr16
dec
mov
inc
cmc
pop
pop
js
test
stos
add
push
mov
add
test
mov
adc
xchg
mov
and
jo
inc
mov
shl
xchg
cmps
shl
xchg
push
lahf
mov
xor
int3
xlat
test
mov
inc
inc
out
rol
(bad)
xor
idiv
jmp
xlat
xor
add
loop
int
(bad)
je
and
adc
cmc
lahf
lds
pusha
shl
in
add
cmp
xor
rcl
jg
mov
aaa
pop
movs
xor
or
sub
pop
movs
jbe
sbb
mov
loopne
aad
xor
push
(bad)
outs
push
(bad)
les
jae
pop
inc
jb
or
pop
(bad)
arpl
aam
and
push
sub
inc
aas
push
test
in
mov
test
jns
pop
movd
push
addr16
hlt
adc
dec
cmc
push
pop
imul
mov
test
add
mov
inc
xchg
jne
xchg
lock
mov
cwde
inc
jmp
mov
movs
cmps
xchg
pusha
lahf
push
cli
mov
xor
rcl
inc
sti
adc
and
jmp
aad
int
mov
push
ret
jbe
not
fs
xor
xlat
(bad)
out
je
and
adc
fstp
sub
ins
shl
pop
outs
xchg
pop
cmp
adc
and
movs
push
lock
or
and
sbb
sbb
xor
cmp
pop
push
inc
les
inc
and
inc
das
popa
(bad)
ja
addr16
add
push
and
jge
push
imul
ja
in
mov
test
pop
in
pcmpeqd
inc
addr16
hlt
jl
jge
jle
or
push
mov
push
mov
add
cwde
xchg
jne
xchg
lock
movs
mov
and
jo
inc
out
movs
fisub
mov
xchg
xor
pusha
adc
fist
inc
not
into
and
lahf
scas
out
inc
clc
(bad)
rcl
icebp
xor
in
in
jbe
test
add
test
les
mov
pop
xor
jnp
adc
test
and
add
adc
gs
aaa
shld
or
cmp
and
adc
pop
aad
xor
adc
les
nop
ja
push
inc
jno
or
(bad)
(bad)
jae
jg
ja
dec
mov
push
dec
aad
aas
push
div
ja
in
mov
test
in
cmovno
push
addr16
dec
mov
ins
cmc
pop
pop
imul
xchg
scas
add
push
mov
add
xchg
xchg
adc
inc
mov
adc
mov
jo
inc
lods
movs
fsub
xchg
cmps
mov
fsub
push
mov
fisttp
cld
adc
and
nop
scas
cmps
inc
inc
out
loopne
in
aad
rcl
mov
call
add
aam
enter
(bad)
je
and
adc
(bad)
lahf
lds
cmp
sbb
ss
jnp
aaa
pop
ds
or
adc
push
mov
aaa
adc
and
and
add
dec
aad
xor
push
(bad)
push
push
popa
les
nop
push
movs
push
inc
cmp
je
pusha
(bad)
pusha
inc
gs
add
push
dec
aad
aas
dec
test
in
mov
test
jns
pop
nop
jl
push
hlt
push
mov
inc
cmc
inc
pop
push
push
adc
gs
in
mov
stos
push
mov
inc
mov
adc
nop
mov
and
jo
inc
mov
xchg
and
xchg
cmps
cwde
xor
pusha
stos
push
xchg
mov
xor
call
adc
and
mov
icebp
push
repz
push
clc
mov
loop
shl
into
add
jecxz
iret
data16
loop
nop
and
adc
fistp
sub
sar
in
add
cmp
adc
adc
xchg
cmp
push
mov
aaa
push
movs
push
lock
movs
sbb
daa
sbb
adc
cmp
and
adc
jl
ins
les
jae
dec
inc
dec
lds
das
push
(bad)
ja
and
dec
sub
push
push
ins
aad
aas
jb
dec
ja
in
mov
test
jb
bound
adc
push
addr16
or
arpl
pop
pop
pop
push
rcl
mul
test
mov
mov
jne
xchg
mov
mov
jo
inc
lods
movs
fwait
and
xchg
cmps
ret
xor
pusha
xchg
push
mov
fistp
inc
lods
adc
and
mov
stc
push
leave
add
xor
sar
fs
xor
add
fisttp
fbstp
rcl
cmps
lahf
in
xchg
or
jne
ins
shl
or
xchg
pop
cmp
adc
cmp
movs
and
xor
cmp
and
adc
pop
aad
xor
adc
les
dec
movs
jo
pop
lds
push
(bad)
jg
addr16
adc
push
arpl
pop
aas
jg
pop
ja
in
mov
test
pop
in
mulps
inc
addr16
sbb
jo
pop
jne
cmc
pop
pop
jo
mov
push
cli
mov
movs
push
mov
inc
mov
adc
xor
inc
out
fldenv
nop
cmps
xchg
xor
pusha
xchg
push
xor
push
(bad)
test
mov
inc
cli
(bad)
out
push
mov
xlat
xor
in
mov
repnz
xor
add
loop
shl
lds
(bad)
adc
fcomp
sub
add
cmp
or
sbb
inc
adc
cmp
sub
and
and
sub
xor
(bad)
push
push
inc
les
sub
lds
inc
(bad)
cmova
aam
cmp
push
arpl
inc
aas
push
test
ins
mov
test
push
in
cmovno
addr16
hlt
pop
mov
pmaddwd
outs
push
adc
mov
add
stos
inc
mov
adc
mov
lods
inc
xchg
movs
xchg
and
and
test
mov
mov
inc
mov
(bad)
mov
icebp
push
out
add
xor
pushf
mov
lea
int3
add
fisttp
(bad)
je
and
adc
fstp
jno
ins
shl
in
add
cmp
xor
adc
xchg
adc
mov
aaa
adc
and
or
adc
cmp
sbb
adc
jg
imul
dec
inc
dec
lds
pop
(bad)
jg
jl
push
or
push
sub
inc
aas
jns
push
ja
in
mov
test
in
unpckhps
inc
addr16
push
mov
jns
pop
pop
outs
push
(bad)
xchg
repnz
push
fwait
gs
test
push
ret
adc
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
mov
icebp
iret
fsub
lods
cmps
mov
mov
push
cli
mov
xor
repz
out
inc
lods
adc
inc
shr
loop
aam
mov
push
fdivr
leave
fs
add
icebp
(bad)
out
je
and
adc
(bad)
lahf
aam
add
xor
add
and
or
adc
aas
mov
aaa
shld
sub
cmp
sbb
adc
dec
aad
xor
adc
les
nop
ins
movs
adc
inc
lds
xor
aam
or
push
cs
aas
ins
mul
dec
in
mov
test
in
packsswb
push
addr16
sbb
jg
cmp
cmc
pop
pop
pop
push
ficom
hlt
mov
mov
fld
mov
adc
xchg
mov
and
jo
inc
out
stos
and
mov
mov
xor
lahf
xlat
test
mov
inc
cld
(bad)
cmps
push
leave
add
xor
fdivr
into
fdiv
rol
mov
enter
cld
je
and
jne
lahf
rcl
or
add
and
cmp
add
or
jg
mov
aaa
or
push
lock
sbb
and
adc
aaa
aad
xor
sub
outs
push
dec
les
jae
pop
inc
jb
or
dec
(bad)
pop
inc
jae
push
add
push
jp
inc
aas
push
not
push
in
mov
test
popa
in
minps
pop
addr16
hlt
push
mov
outs
cmc
fs
outs
push
adc
gs
mov
push
mov
inc
xor
mov
xchg
movs
ss
and
movs
pushf
and
and
xor
xlat
ret
adc
inc
xchg
scas
mov
push
mov
xor
idiv
xacquire
jmp
gs
out
je
and
adc
ret
xchg
and
jle
add
add
and
xor
aas
cmc
and
xor
cmp
and
cmp
xor
xor
xor
sub
jbe
imul
push
inc
cmp
push
das
pop
(bad)
ja
jg
add
push
je
inc
aas
push
div
dec
in
mov
test
in
cmovs
inc
outs
hlt
push
mov
or
push
xchg
xchg
test
gs
test
add
lods
xchg
adc
inc
loopne
test
jmp
and
jo
inc
out
mov
xchg
cmps
mov
push
mov
fbstp
inc
fst
into
and
ret
inc
stc
(bad)
mov
xor
fdivr
leave
fs
xor
add
jecxz
fisub
out
je
and
adc
out
lahf
les
sub
add
push
add
jle
xor
fs
and
pop
cmc
cmp
jg
mov
aaa
or
lds
adc
pusha
daa
sbb
xor
push
(bad)
inc
push
xor
jnp
pop
movs
pop
inc
pusha
lds
push
(bad)
jle
inc
aam
add
push
jae
inc
aas
inc
imul
push
in
mov
test
inc
in
nop
push
addr16
hlt
dec
mov
inc
cmc
pop
pop
inc
push
test
mov
call
mov
mov
jne
xchg
jmp
mov
and
jo
inc
fwait
movs
pushf
and
xchg
cmps
call
mov
xor
jmp
adc
and
xchg
scas
mov
push
int
stos
xor
out
(bad)
jbe
test
add
test
je
and
adc
rcr
jo
pusha
rcr
in
add
and
or
adc
and
adc
push
lock
sub
dec
and
cmp
xor
sbb
dec
push
popa
les
nop
ins
movs
push
inc
jb
push
das
jg
arpl
aam
cmp
pop
push
popa
aad
aas
push
test
in
mov
test
push
in
cvtps2pd
pop
addr16
push
mov
or
pop
pop
push
add
push
hlt
lea
test
adc
inc
loop
fcom
jmp
jo
inc
mov
pushf
and
mov
xchg
push
mov
fbstp
inc
cmps
adc
and
jmp
push
lds
mov
push
pushf
mov
loop
shl
into
add
(bad)
pop
shl
shl
adc
scas
lahf
mov
aaa
shl
in
add
daa
xchg
cmp
adc
add
movs
cs
lds
and
cmp
sbb
inc
mov
loopne
aad
xor
add
les
xor
dec
inc
jp
adc
ds
addr16
jp
imul
aad
aas
jo
xor
mov
test
jle
bound
sbb
inc
addr16
hlt
pop
mov
inc
cmc
pop
pop
push
push
xchg
xchg
mov
popf
push
xchg
gs
test
push
fld
mov
adc
mov
jo
inc
call
es
cmps
test
pusha
xchg
push
mov
fistp
inc
mov
(bad)
shr
clc
push
aam
mov
push
(bad)
mov
xlat
xlat
xor
add
out
out
out
fbstp
ficom
rcr
sub
add
and
push
rcr
pop
adc
xor
sbb
and
and
push
loopne
aad
xor
pop
(bad)
inc
push
inc
les
ins
movs
adc
lds
das
inc
(bad)
jo
jo
dec
add
push
arpl
inc
aas
dec
imul
in
mov
test
push
in
nop
push
addr16
hlt
ins
mov
(bad)
cmc
pop
pop
outs
push
movs
xchg
test
test
push
scas
xchg
jne
xchg
in
adc
mov
xchg
and
jo
inc
mov
iret
cdq
test
xchg
push
mov
fistp
inc
mov
lds
inc
inc
loopne
mov
(bad)
xor
(bad)
mov
shl
add
int3
(bad)
out
je
and
adc
fcomp
adc
in
add
and
adc
cmp
sbb
jg
mov
aaa
sub
lds
and
push
cmps
sbb
loopne
aad
xor
dec
(bad)
adc
les
je
push
inc
push
ja
dec
(bad)
pop
inc
jae
cmp
inc
mov
push
das
aad
aas
sub
jb
inc
in
mov
test
gs
in
nop
pop
addr16
hlt
adc
push
cmc
and
xchg
inc
push
mov
add
rol
jne
xchg
mov
ss
(bad)
and
jo
inc
call
iret
and
cmps
xchg
pusha
stos
push
mov
fistp
inc
rcl
(bad)
std
scas
mov
push
leave
add
push
fistp
lea
loope
out
in
gs
iret
data16
out
je
and
jne
lahf
(bad)
xchg
and
and
add
and
add
adc
xchg
push
jg
mov
aaa
xor
and
and
mov
loopne
aad
xor
dec
(bad)
jl
outs
les
jae
dec
inc
push
lds
das
cmp
add
inc
aam
cmp
push
sub
inc
aas
push
test
in
mov
test
pop
in
unpckhps
and
hlt
push
mov
pmaddwd
ins
push
rcl
mov
add
mov
inc
mov
adc
icebp
mov
and
jo
inc
mov
iret
cdq
es
cmps
cwde
xor
pusha
xchg
push
pushf
mov
xor
(bad)
out
inc
out
adc
and
xchg
scas
fld
(bad)
out
fadd
mov
push
(bad)
mov
leave
fs
xor
add
out
(bad)
data16
lds
popf
adc
loop
(bad)
xchg
push
pop
xor
ins
shr
in
add
jle
es
popa
xchg
jl
sbb
aas
adc
push
mov
aaa
shld
adc
push
and
push
cmps
jge
add
xor
pop
(bad)
dec
push
jbe
aas
nop
dec
movs
adc
jae
inc
das
cmp
pop
inc
and
push
sbb
push
and
inc
aas
push
test
inc
mov
test
adc
sub
pop
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
jo
test
scas
add
push
movs
mov
cmc
push
cmps
xchg
adc
xchg
and
jo
inc
stos
movs
pushf
and
xchg
cmps
sahf
xor
pusha
xchg
push
mov
fbld
mov
korw
scas
mov
push
stos
add
xor
out
mov
(bad)
xlat
xor
gs
enter
xlat
je
and
adc
out
lds
pusha
rcr
in
add
and
or
adc
aas
adc
cmp
sbb
sbb
sbb
cmps
and
loopne
aad
xor
push
(bad)
push
pop
les
jo
push
inc
push
lds
(bad)
addr16
jl
push
add
push
pop
aad
aas
ja
jae
adc
fs
test
inc
in
lsl
inc
addr16
hlt
adc
push
cmc
pop
pop
jg
xchg
xchg
mov
mov
test
add
mov
inc
mov
adc
cmps
mov
and
jo
inc
mov
xchg
and
and
xchg
xor
loopne
hlt
inc
rcl
mov
(bad)
(bad)
lds
mov
xor
into
mov
(bad)
fs
cmc
add
fimul
in
je
and
adc
scas
lahf
(bad)
xchg
and
or
daa
shl
add
xchg
rcl
add
aaa
pop
movs
inc
lock
and
adc
mov
loopne
aad
xor
sbb
gs
xor
pop
nop
jnp
dec
inc
cmp
push
das
ins
(bad)
ja
jno
xor
jl
inc
aas
push
neg
(bad)
in
mov
test
in
cmova
push
addr16
hlt
adc
or
jbe
outs
push
stos
xchg
mov
loopne
sti
gs
test
push
mov
inc
xchg
xchg
mov
mov
mov
fwait
movs
fbld
xchg
cmps
cdq
xor
pusha
mov
cli
mov
xor
in
mov
movs
adc
and
ret
inc
sti
(bad)
call
mov
push
(bad)
mov
xchg
shl
add
hlt
(bad)
out
je
and
adc
fcomp
xor
and
sub
push
add
or
add
adc
push
mov
aaa
add
and
sbb
push
loopne
aad
xor
or
push
nop
arpl
outs
das
inc
(bad)
jo
data16
and
add
inc
aad
aas
push
test
in
mov
test
dec
in
cmovns
inc
ins
hlt
dec
mov
push
cmc
pop
pop
outs
push
mov
mov
gs
test
push
scas
xchg
adc
inc
loopne
adc
fbld
movs
pushf
and
xchg
cmps
sahf
xor
pusha
mov
xor
rcl
mov
cmps
adc
and
sahf
scas
fld
(bad)
rcl
fidiv
(bad)
mov
into
mov
aad
shl
(bad)
(bad)
out
je
and
adc
fcomp
aaa
test
sbb
add
outs
and
or
xor
sbb
cmp
pop
lock
xor
xor
sbb
loopne
aad
xor
add
les
jb
jne
jb
pop
das
pop
(bad)
jae
addr16
and
pop
push
push
aad
aas
push
idiv
pop
in
mov
test
jns
pop
andnps
pop
addr16
hlt
imul
pop
push
xchg
xchg
mov
movs
push
hlt
mov
mov
mov
inc
mov
adc
mov
mov
xchg
jo
inc
scas
movs
xchg
and
mov
xchg
pusha
fwait
push
mov
fist
inc
mov
(bad)
xchg
scas
mov
push
leave
add
xor
ret
jbe
mul
fs
xor
add
dec
iret
je
and
adc
ficomp
sub
pusha
shl
sbb
add
adc
adc
cmp
movs
sub
and
sbb
xor
xor
adc
jo
popa
les
nop
jne
push
inc
cmp
push
das
gs
ja
jnp
jne
inc
mov
push
ins
aad
aas
inc
test
in
mov
test
outs
in
(bad)
out
addr16
hlt
push
mov
push
cmc
and
xchg
lods
add
push
and
mov
mov
mov
adc
inc
mov
adc
movs
mov
and
jo
inc
mov
mov
mov
xchg
test
adc
fistp
inc
lods
adc
and
fild
stc
push
lds
out
vpsraw
mov
icebp
fs
xor
add
fisttp
fbstp
jmp
lahf
in
xchg
or
push
test
aaa
in
add
or
jge
xor
xchg
xor
mov
aaa
pop
movs
and
adc
cmp
and
xor
pop
aad
xor
adc
inc
push
push
les
jne
dec
inc
lds
inc
(bad)
fs
inc
aam
add
push
jno
inc
aas
push
neg
push
in
mov
test
pop
in
cmovns
push
addr16
hlt
adc
push
pop
pop
pop
push
mov
push
cli
gs
test
push
cmps
xchg
adc
pushf
and
jo
inc
lock
and
mov
stos
push
div
mov
xlat
out
movs
adc
and
shr
aam
jmp
mov
push
(bad)
mov
into
fs
add
ror
je
and
adc
ficomp
sub
add
and
or
sbb
pop
adc
xor
add
sbb
sbb
pop
movs
and
daa
pop
mov
loopne
aad
xor
push
(bad)
inc
push
outs
les
jo
dec
inc
cmp
jae
dec
(bad)
arpl
aam
and
push
jbe
jl
push
not
push
in
mov
test
push
in
cmovp
push
addr16
hlt
push
mov
arpl
pop
pop
outs
push
rcl
mov
add
mov
inc
mov
mov
in
adc
mov
mov
mov
mov
cmps
cmps
lods
xor
pusha
xchg
push
cmps
mov
xor
out
xlat
rol
and
sahf
scas
mov
add
xor
ret
jbe
test
add
ror
xchg
mov
out
lahf
(bad)
xchg
movhps
aaa
shl
in
add
jnp
das
pop
and
adc
cmp
movs
sub
and
adc
cmp
sbb
add
add
and
xor
jl
imul
dec
inc
jg
dec
das
popa
(bad)
addr16
es
add
push
dec
aad
aas
push
idiv
(bad)
in
mov
test
pop
in
orps
jg
pop
hlt
or
push
outs
pop
jle
lods
xchg
test
rol
test
cmps
xchg
popf
xchg
mov
cmps
mov
and
jo
inc
cwde
movs
pushf
and
popf
cmps
xchg
pusha
mov
xor
not
fadd
loope
mov
clc
inc
lahf
scas
enter
stc
push
retf
add
push
iret
mov
(bad)
shl
repz
fisttp
iret
je
and
adc
into
lahf
les
shl
in
add
jle
xor
arpl
adc
or
and
adc
cmp
and
adc
dec
aad
xor
adc
les
nop
ins
movs
push
inc
jno
push
das
pop
(bad)
jae
js
dec
sbb
push
popa
aad
aas
push
not
inc
in
mov
test
push
in
nop
push
addr16
hlt
push
mov
ins
cmc
addr16
outs
push
mov
xchg
gs
test
push
cdq
xchg
adc
inc
xchg
jne
xchg
mov
mov
mov
and
cdq
cmps
sahf
xor
pusha
xchg
push
mov
fild
cmps
adc
and
nop
scas
std
inc
inc
out
out
movs
xor
fdivr
(bad)
shl
xchg
add
int
fisub
out
je
and
adc
scas
lahf
int
and
and
add
and
or
addr16
and
sub
adc
push
movs
pop
lock
ins
and
and
adc
sbb
sub
push
(bad)
ins
push
pop
les
jae
dec
inc
inc
lds
addr16
pop
inc
and
push
cmp
pop
push
sub
add
jge
inc
ja
in
mov
test
push
in
nop
inc
addr16
push
mov
inc
cmc
jb
inc
push
adc
gs
test
push
test
fwait
jne
xchg
mov
mov
jmp
and
jo
inc
lods
movs
xchg
and
and
xchg
xor
loopne
int3
inc
mov
(bad)
into
scas
iret
inc
(bad)
push
aam
retf
aad
push
ret
jbe
idiv
les
jmp
lock
gs
sahf
data16
ret
and
jne
lahf
ficom
and
jne
adc
and
adc
adc
or
jg
mov
aaa
adc
and
adc
movs
or
daa
and
pop
loopne
aad
xor
dec
(bad)
jl
imul
push
inc
push
lds
das
pop
(bad)
jl
pop
aam
and
push
sub
pop
aas
push
test
in
mov
test
in
cmovs
inc
addr16
hlt
dec
mov
dec
cmc
pop
pop
push
add
push
hlt
gs
test
push
cmps
xchg
jne
xchg
mov
movs
mov
and
jo
inc
movs
movs
and
cmps
ret
pusha
xchg
push
cld
mov
xor
in
call
and
imul
iret
push
mov
xor
clc
mov
leave
xor
add
jmp
and
fnsave
cld
adc
fcomp
sub
add
xchg
xchg
push
shl
or
add
movs
adc
sbb
adc
dec
and
adc
or
aas
xor
adc
push
push
les
ins
movs
or
lds
das
pop
(bad)
pop
inc
jle
push
xor
push
aad
aas
pop
neg
dec
in
mov
test
push
in
unpckhps
and
inc
hlt
push
mov
push
cmc
jl
or
mov
cmc
mov
mov
adc
inc
mov
adc
xchg
mov
and
jo
inc
xchg
movs
xchg
and
in
sahf
xor
pusha
mov
mov
fistp
inc
mov
(bad)
xchg
scas
out
sti
(bad)
int3
push
int
mov
push
(bad)
mov
retf
xor
add
repnz
iret
data16
out
je
and
adc
rcr
sub
add
adc
aas
pop
es
or
push
cmc
sbb
jg
mov
aaa
pop
movs
and
and
xor
pop
movs
and
cmps
aaa
daa
pop
mov
loopne
aad
xor
push
(bad)
ins
push
ins
les
push
lds
pop
mov
push
or
push
outs
aad
aas
push
imul
ja
in
mov
test
in
movd
push
addr16
hlt
jno
inc
xchg
arpl
cmc
pop
pop
outs
push
mov
test
push
mov
mov
inc
mov
inc
lahf
jne
xchg
call
mov
mov
xchg
movs
and
cmps
test
pusha
xchg
push
mov
fisttp
inc
cmc
adc
and
in
hlt
inc
inc
xlat
push
leave
add
push
ret
jbe
not
fs
xor
add
in
(bad)
data16
clc
je
and
adc
repnz
test
jnp
ins
in
add
jge
adc
bound
adc
push
push
aaa
or
cs
movs
sub
daa
sbb
sbb
xor
adc
inc
push
push
les
jp
pop
inc
jl
pop
das
jns
inc
inc
jae
dec
add
push
ins
aad
aas
das
test
in
mov
test
in
cmovns
and
hlt
push
mov
or
push
lods
xchg
test
gs
add
cmps
xchg
jne
xchg
mov
movs
mov
and
jo
inc
xchg
movs
mov
es
pusha
xchg
push
sti
mov
xor
iret
xlat
loope
(bad)
adc
inc
mov
in
fld
movs
xor
idiv
fisub
retf
in
fisttp
fbstp
hlt
adc
rcr
xor
add
sub
or
jns
inc
adc
cs
aaa
add
and
das
cmps
sbb
add
push
loopne
aad
xor
aas
(bad)
push
nop
ins
movs
push
inc
dec
lds
inc
(bad)
jb
jne
push
add
push
arpl
pop
aas
push
neg
push
in
mov
test
inc
in
unpcklps
pop
addr16
hlt
push
mov
inc
cmc
jnp
fs
test
lods
add
push
cmc
gs
add
mov
inc
xchg
jne
xchg
in
adc
push
lods
inc
out
movs
pushf
and
cwde
cmps
les
mov
xor
(bad)
xlat
loop
rcl
out
and
xchg
scas
loope
inc
stc
push
mov
mov
push
in
mov
loop
xlat
xor
add
aad
out
mul
fdiv
std
adc
fcomp
sub
in
add
jg
aaa
pop
push
xchg
jl
sbb
and
push
mov
aaa
pop
movs
push
lock
xor
add
mov
loopne
aad
xor
ss
pusha
push
dec
les
movs
adc
jb
pop
das
je
arpl
aam
add
push
and
jl
push
idiv
push
in
mov
test
gs
in
cmovns
pop
addr16
hlt
dec
mov
dec
cmc
pop
pop
outs
push
fist
mov
test
push
lds
fwait
jne
xchg
mov
mov
mov
xchg
movs
xchg
and
cwde
cmps
ret
pusha
adc
scas
xor
rcl
into
inc
mov
lds
clc
(bad)
fist
cld
xor
clc
mov
lahf
fs
retf
add
int3
vphaddwd
bnd
and
adc
fstp
adc
add
add
xchg
and
pusha
cmc
sbb
push
jne
sbb
adc
adc
movs
sbb
daa
inc
mov
loopne
aad
xor
sub
jg
les
nop
push
movs
dec
inc
cmp
inc
das
pop
(bad)
ja
pop
aam
add
dec
aad
aas
push
idiv
ja
in
mov
test
pop
in
cmove
inc
addr16
hlt
push
mov
or
jbe
push
push
lods
xchg
mov
popf
push
mul
test
push
lods
xchg
jne
xchg
lock
xchg
mov
and
jo
inc
mov
lods
and
stc
cmps
mov
push
mov
fild
inc
mov
(bad)
nop
scas
clc
inc
mov
std
push
aam
mov
push
cld
mov
shl
mov
(bad)
popf
data16
lds
retf
adc
(bad)
lahf
test
shl
in
add
add
sub
adc
sub
sbb
and
and
adc
es
xor
adc
les
movs
or
lds
das
push
aam
xor
push
arpl
pop
aas
pop
neg
push
in
mov
test
popa
in
cvtdq2ps
arpl
hlt
dec
mov
inc
cmc
pop
pop
or
add
push
mov
mov
mov
iret
xchg
lods
xchg
in
adc
lods
mov
and
jo
inc
lock
and
cmps
sahf
xor
pusha
mov
mov
ret
fist
repnz
and
nop
scas
mov
push
iret
add
xor
(bad)
mov
xchg
fs
add
fisttp
cdq
je
and
adc
rcr
test
shr
test
and
sub
adc
cs
imul
adc
dec
inc
cmps
sbb
loopne
aad
xor
adc
les
jo
je
jb
dec
das
and
arpl
aam
or
push
das
aad
aas
dec
test
in
mov
test
jno
push
lsl
bound
hlt
push
mov
inc
cmc
pop
pop
imul
xchg
mov
loopne
mov
test
add
mov
inc
movs
jne
xchg
call
mov
xchg
inc
mov
iret
cwde
and
stos
xor
rcl
hlt
inc
movs
adc
and
std
scas
mov
push
leave
add
push
sar
mov
loope
in
in
gs
iret
mov
and
adc
fstp
xor
ins
shl
in
add
and
adc
cmp
or
ds
aaa
sub
and
daa
cmps
add
sbb
adc
inc
aad
xor
sbb
jl
imul
outs
inc
cmp
adc
ins
(bad)
ja
fs
add
push
dec
aad
aas
push
test
in
mov
test
push
in
unpcklps
pop
addr16
hlt
push
mov
dec
cmc
popw
outs
push
leave
xchg
mov
test
mov
inc
mov
adc
mov
mov
movs
fisub
xchg
cmps
xchg
xor
pusha
retf
push
cmps
mov
xor
in
xlat
out
inc
lods
adc
and
in
scas
mov
push
int
fnsave
int
out
jbe
not
fs
xor
add
fisttp
fdiv
les
in
les
jnp
and
sub
cmp
or
sbb
inc
adc
sbb
adc
and
(bad)
xor
add
push
loopne
aad
xor
adc
les
nop
jae
jno
inc
lds
das
push
mov
jg
push
sbb
arpl
gs
ins
neg
ins
in
mov
test
dec
in
cmovno
inc
addr16
hlt
bound
dec
cmc
pop
pop
push
add
push
cmc
mov
mov
jne
xchg
mov
test
mov
and
xchg
cmps
into
xor
pusha
xchg
push
movs
mov
xor
(bad)
xlat
int
mov
lds
inc
clc
(bad)
fist
in
jmp
in
push
cmp
xlat
xor
add
loope
enter
(bad)
je
and
adc
cld
lahf
lds
cmp
sbb
xor
outs
jne
aaa
pop
ds
or
adc
xor
push
lock
xor
and
or
add
aas
xor
push
(bad)
push
push
popa
les
movs
dec
inc
xor
inc
das
inc
(bad)
arpl
aam
and
push
xor
jl
push
neg
pop
in
mov
test
pop
in
nop
inc
addr16
hlt
jge
bound
outs
pop
jle
adc
gs
inc
add
jne
xchg
call
mov
and
jo
inc
jmp
mov
es
mov
push
mov
fist
inc
sti
adc
and
xchg
scas
out
xchg
icebp
push
rol
xor
les
in
fs
xor
add
mov
jmp
(bad)
xchg
rcl
lahf
mov
jnp
cmp
cmp
sbb
adc
(bad)
cmc
or
jg
mov
aaa
push
movs
sub
and
inc
cmps
xor
cs
loopne
aad
xor
sbb
adc
les
nop
aaa
movs
dec
inc
cmp
push
das
ds
ja
jno
cmp
and
arpl
jne
sub
in
mov
test
gs
bound
pop
out
addr16
push
mov
push
cmc
pop
pop
push
add
push
mov
leave
test
add
mov
inc
mov
adc
icebp
mov
and
jo
inc
lods
movs
shl
cmps
mov
push
(bad)
mov
xor
jmp
adc
and
mov
stc
push
aam
mov
push
fistp
nop
xor
add
fisttp
fbstp
adc
xor
jbe
add
and
dec
add
xchg
pop
cmp
adc
ds
aaa
add
and
and
adc
cmp
or
aas
(bad)
imul
dec
nop
jb
jno
jae
jno
cmp
pusha
inc
cs
or
push
pop
aad
aas
push
div
adc
fs
test
pusha
in
sysret
out
addr16
hlt
adc
inc
cmc
pop
pop
pop
push
mov
scas
add
push
mov
add
mov
inc
sahf
jne
xchg
out
adc
mov
scas
and
jo
inc
lock
mov
popf
iret
call
pusha
pushf
push
div
mov
hlt
xlat
cmc
inc
fcom
leave
and
(bad)
scas
mov
push
enter
pushf
aad
push
fistp
ret
test
enter
shl
(bad)
hlt
repz
je
and
adc
ficomp
xor
add
add
or
or
adc
sub
movs
sub
sbb
xor
dec
daa
cmps
sbb
cmp
aad
xor
push
(bad)
ins
push
dec
les
jo
dec
inc
inc
lds
pop
(bad)
arpl
aam
add
push
sub
test
in
mov
test
push
in
lsl
push
addr16
hlt
push
mov
dec
cmc
push
pop
ins
push
pushf
xchg
icebp
add
push
in
gs
out
fwait
push
mov
inc
lahf
jne
xchg
out
adc
push
mov
mov
iret
mov
xor
pusha
nop
push
movs
mov
xor
xchg
xlat
retf
adc
and
leave
scas
mov
push
out
add
xor
(bad)
mov
leave
shl
int
(bad)
in
gs
fbld
out
je
and
jne
lahf
mov
sbb
and
xor
and
xchg
or
and
sbb
cmp
movs
cmp
and
cmp
push
loopne
aad
xor
adc
outs
push
imul
dec
inc
pop
lds
das
pop
(bad)
push
inc
je
dec
adc
push
ins
aad
aas
push
test
in
mov
test
pop
in
vmwrite
jne
inc
hlt
push
mov
or
push
scas
xchg
test
mov
mov
adc
inc
mov
adc
icebp
mov
and
jo
inc
out
mov
mov
pusha
fwait
push
cli
mov
xor
in
loope
rcl
and
ret
inc
sti
(bad)
loop
cld
add
xor
ret
jbe
test
add
fisttp
xor
loope
fcomp
adc
add
and
xchg
jne
adc
xchg
cmp
aaa
and
lds
and
cmps
xor
inc
mov
loopne
aad
xor
adc
les
nop
push
movs
adc
cmp
jae
inc
(bad)
jo
arpl
dec
or
push
jae
inc
aas
push
mul
push
in
mov
test
sbb
xor
addr16
push
mov
or
push
pop
ins
push
test
scas
add
push
cmc
mov
mov
scas
xchg
adc
inc
mov
adc
mov
jo
inc
jmp
(bad)
cdq
cmps
mov
nop
pusha
mov
xor
hlt
xlat
repnz
int3
adc
and
fild
cld
push
int
mov
push
(bad)
mov
shl
test
(bad)
out
je
and
adc
aam
out
xchg
aaa
pop
add
or
add
sbb
aaa
pop
ds
sub
sbb
push
adc
push
mov
aaa
or
and
adc
adc
loopne
aad
xor
push
(bad)
push
push
popa
les
jb
push
inc
jb
or
js
addr16
addr16
and
pop
push
push
inc
aas
push
test
in
mov
test
gs
in
lsl
dec
addr16
hlt
push
mov
inc
cmc
pop
pop
dec
push
adc
mov
mov
mov
loope
lea
jne
xchg
mov
mov
mov
scas
movs
movs
and
xchg
cmps
ret
xor
pusha
test
mov
xor
loopne
mov
out
xchg
scas
mov
faddp
xlat
push
leave
add
xor
fstp
shl
add
int3
(bad)
cwde
scas
out
je
and
adc
in
(bad)
xchg
and
xor
add
jae
adc
and
adc
adc
movzx
aaa
pop
movs
sbb
adc
movs
cmp
daa
and
xor
adc
adc
les
jae
dec
inc
jb
jno
cmp
inc
inc
pop
aam
xor
pop
aad
aas
jle
inc
ja
in
mov
test
push
jae
adc
hlt
push
mov
or
push
rcl
mul
test
push
scas
xchg
jne
xchg
mov
cmp
ss
and
jo
inc
stos
movs
fbld
popf
cmps
cdq
xor
pusha
mov
xor
into
xlat
lods
inc
icebp
adc
and
mov
stc
push
enter
fst
mov
loop
in
jbe
div
fs
xor
add
fisttp
fdiv
les
fcomp
sub
add
and
pop
shl
adc
sbb
or
sbb
aaa
and
or
add
pop
aad
xor
pop
(bad)
dec
push
ja
sub
inc
pop
lds
das
pop
(bad)
jae
jg
data16
push
ins
aad
aas
push
neg
push
in
mov
test
pop
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
push
add
push
mov
add
scas
xchg
jne
xchg
lahf
adc
stos
mov
and
jo
inc
out
pushf
and
xchg
cmps
xor
fild
inc
mov
(bad)
ret
inc
out
mov
xor
std
mov
lock
in
mov
(bad)
(bad)
xchg
mul
hlt
je
and
adc
fcomp
je
sub
jg
sub
xchg
pop
or
or
add
ds
cmp
adc
and
xor
mov
loopne
aad
xor
dec
(bad)
bound
les
push
je
jb
pop
das
pop
(bad)
pop
inc
addr16
cmp
push
das
aad
aas
ins
test
in
mov
test
sbb
push
nop
jg
addr16
imul
push
push
adc
mov
mov
ret
xchg
jne
xchg
lahf
adc
lock
and
jo
inc
sahf
movs
fisub
and
xchg
xor
icebp
xlat
rol
retf
and
nop
scas
out
sti
(bad)
std
push
cmc
add
xor
clc
mov
aam
shl
retf
add
fisttp
ret
je
and
adc
fstp
sub
popa
ror
in
add
sbb
adc
add
xchg
adc
mov
aaa
xor
and
cmps
sbb
push
mov
loopne
aad
xor
adc
push
push
dec
les
nop
arpl
pop
das
dec
(bad)
ja
pop
aam
add
push
dec
aad
aas
push
not
fs
mov
test
push
in
sysret
out
addr16
push
jne
cmc
push
pop
outs
push
mov
sti
gs
out
xchg
push
mov
inc
call
(bad)
jmp
and
jo
inc
mov
iret
cdq
test
xchg
push
stos
mov
xor
into
xlat
jmp
(bad)
adc
and
call
(bad)
stc
push
aam
movs
xor
(bad)
mov
xchg
xor
add
fisttp
in
je
and
adc
fcomp
adc
add
sbb
sub
pop
cmc
inc
adc
cmp
movs
pop
lock
lds
and
cmp
adc
pop
aad
xor
adc
les
nop
push
adc
jno
jne
dec
(bad)
jae
jle
xor
dec
mov
push
ja
push
aas
jbe
jne
push
in
mov
test
push
in
packsswb
jae
add
dec
mov
inc
cmc
pop
pop
fs
adc
mov
mov
xchg
xchg
jne
xchg
in
adc
mov
mov
jo
inc
out
mov
xchg
cmps
ret
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
ffree
in
scas
add
push
(bad)
mov
fisub
lds
ror
je
and
adc
mov
pop
xor
add
cmp
aaa
pop
aas
xchg
add
cmp
sbb
jg
mov
aaa
and
and
or
or
dec
aad
xor
push
(bad)
ins
push
push
les
jae
push
inc
push
or
dec
(bad)
arpl
aam
sbb
push
sub
inc
aas
dec
test
in
mov
test
dec
in
movq
inc
addr16
jno
push
xchg
jg
jge
pop
pop
outs
push
lods
xchg
mov
test
gs
test
push
cdq
xchg
jne
xchg
mov
mov
aad
mov
mov
movs
cmps
cdq
xor
pusha
xchg
push
movs
mov
xor
loopne
lock
sti
adc
inc
cmc
scas
mov
push
leave
add
push
ret
jbe
not
shl
int
clc
in
gs
lds
out
je
and
jne
lahf
call
shl
or
outs
and
and
sbb
sbb
push
movs
cmp
xor
or
pop
cmps
adc
adc
xor
cmp
gs
sub
movs
jle
lds
pop
mov
inc
mov
push
das
aad
aas
push
div
(bad)
in
mov
test
pop
in
movd
inc
addr16
hlt
push
mov
or
push
movs
xchg
mov
gs
repnz
xchg
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
mov
mov
cdq
xor
pusha
xchg
push
cli
mov
xor
cmc
xlat
lds
lock
in
scas
mov
push
enter
enter
(bad)
mov
out
fs
xor
add
int3
(bad)
iret
mul
fbstp
ficom
aam
out
xchg
xor
push
test
shl
in
add
xchg
pop
cmp
adc
ds
aaa
adc
and
and
dec
loopne
aad
xor
adc
les
nop
push
movs
or
lds
dec
(bad)
jae
and
mov
push
pop
aad
aas
push
test
in
mov
test
push
in
mulps
push
addr16
hlt
push
mov
inc
cmc
bound
push
add
push
jmp
add
cmps
xchg
jne
xchg
jmp
mov
mov
movs
pushf
and
xchg
cmps
xchg
xor
pusha
xchg
push
mov
fist
les
leave
and
fisubr
out
jmp
mov
push
lds
retf
xor
add
fimul
xor
adc
aad
repz
and
test
rcr
in
add
and
xchg
or
ds
aas
adc
sbb
add
add
xor
or
adc
add
or
pop
aad
xor
adc
ins
push
ins
les
inc
movs
dec
inc
jp
push
das
cmp
aam
xor
push
jns
inc
aas
push
neg
push
in
mov
test
push
in
unpcklps
bound
hlt
push
mov
or
popw
pushw
mov
movs
add
push
mul
test
push
test
mov
adc
icebp
mov
and
jo
inc
mov
and
cmps
xchg
pusha
xchg
push
fwait
mov
xor
(bad)
xlat
rol
and
xchg
scas
mov
push
leave
add
push
sar
retf
fs
xor
add
enter
repz
je
and
adc
fstp
sub
jnp
push
in
add
add
xchg
or
add
xchg
push
jg
mov
aaa
push
movs
sub
and
or
pop
loopne
aad
xor
sub
jl
imul
dec
inc
cmp
or
jge
jg
inc
aam
xor
push
ins
aad
aas
push
test
in
mov
test
jp
bound
add
arpl
hlt
push
mov
or
push
movs
xchg
repnz
push
in
gs
mov
xchg
out
cwde
push
mov
inc
call
jmp
ss
jo
inc
xchg
movs
fbld
xchg
cmps
pushf
xor
pusha
xchg
push
stc
mov
xor
(bad)
xlat
out
inc
lods
adc
and
jmp
(bad)
out
repnz
push
(bad)
mov
(bad)
div
test
(bad)
out
je
and
adc
ficomp
or
add
and
or
adc
ss
aaa
or
and
and
adc
pop
aad
xor
or
popa
push
jbe
and
jno
push
das
push
aam
xor
push
arpl
push
aas
push
div
mov
test
sbb
push
nop
jg
ins
hlt
dec
mov
push
cmc
push
pop
pop
push
test
mov
push
hlt
gs
test
push
movs
xchg
adc
scas
and
jo
inc
popf
movs
mov
xchg
cmps
sahf
xor
pusha
retf
push
mov
fist
mov
lds
inc
inc
mov
xor
(bad)
mov
into
shl
test
(bad)
popf
mul
(bad)
je
and
adc
fistp
test
shr
in
add
and
or
adc
or
push
mov
aaa
pop
movs
cs
lds
and
and
adc
xor
adc
ins
push
outs
les
inc
movs
dec
inc
jle
or
push
mov
aam
xor
push
xor
push
aas
push
test
in
mov
test
push
in
andnps
jnp
push
hlt
dec
mov
or
jp
outs
push
mov
stos
add
push
mov
test
mov
inc
mov
adc
mov
and
movs
fisub
mov
pushf
xor
pusha
xchg
push
lea
xchg
push
loopne
jmp
and
xchg
scas
ret
(bad)
std
push
rol
xor
clc
mov
in
xlat
xor
add
in
out
aad
les
call
jne
lahf
(bad)
xchg
xor
adc
add
arpl
or
pop
cmc
sbb
sbb
pop
lock
outs
and
cmp
push
daa
and
aad
xor
add
jg
pusha
les
movs
push
inc
jno
adc
pop
(bad)
ja
fs
sbb
push
and
gs
push
test
in
mov
test
gs
outs
cmovs
inc
addr16
hlt
push
mov
dec
cmc
pop
pop
push
lods
xchg
test
gs
test
push
mov
inc
mov
adc
mov
mov
xchg
movs
and
cmps
cdq
xor
pusha
mov
xor
leave
xlat
out
inc
mov
korw
scas
hlt
inc
sti
(bad)
stc
push
rol
xor
cmp
xchg
add
mov
retf
out
je
and
adc
in
les
jnp
sbb
ss
cmp
or
adc
cmp
ds
cmp
aas
movs
and
cmps
add
add
aad
xor
adc
les
nop
dec
movs
dec
inc
dec
lds
outs
(bad)
ja
arpl
dec
and
jg
arpl
pop
aas
ins
neg
dec
in
mov
test
in
sysret
out
addr16
dec
mov
dec
cmc
and
push
add
push
mov
add
lahf
xchg
jne
xchg
test
ss
mov
and
jo
inc
out
fisub
out
mov
push
xor
jmp
movs
adc
inc
shr
aad
int
enter
test
jbe
test
add
repnz
out
je
and
adc
fstp
aaa
test
rcr
in
add
xchg
pop
and
cmc
add
jg
mov
aaa
adc
and
add
sub
xor
push
(bad)
push
nop
jp
dec
inc
jb
push
das
fs
push
inc
fs
and
pop
push
sub
neg
push
in
mov
test
jg
pop
andnps
inc
addr16
hlt
push
mov
jae
jae
inc
push
fist
mov
add
xchg
xchg
adc
inc
mov
cdq
xchg
mov
test
rol
movs
cmps
and
scas
cmps
test
pusha
mov
xor
loopne
test
mov
(bad)
icebp
push
mov
aad
push
clc
mov
cld
xor
out
mov
leave
iretw
out
je
and
adc
out
lahf
(bad)
xchg
cs
adc
ins
rcr
in
add
daa
xchg
rcl
cmp
ds
aaa
adc
cs
lds
dec
sub
push
loopne
aad
xor
xor
adc
les
arpl
adc
pop
(bad)
push
inc
jl
dec
xor
push
ins
aad
aas
sub
dec
ja
in
mov
test
pop
in
unpckhps
push
addr16
hlt
push
mov
push
cmc
pop
pop
outs
push
leave
xchg
repnz
push
stos
mov
mov
mov
inc
loope
fcom
mov
xchg
mov
and
jo
inc
lods
movs
xchg
and
xchg
cmps
shl
xchg
push
xor
push
cld
xlat
out
inc
lods
adc
and
nop
scas
retf
(bad)
fst
movs
xor
les
fbld
lds
ror
lds
(bad)
adc
ficomp
test
ror
push
outs
and
push
rcl
inc
adc
xor
pop
lock
sbb
das
cmps
sbb
add
or
xor
cmp
push
nop
dec
movs
adc
arpl
adc
pop
(bad)
dec
inc
outs
aam
or
push
dec
aad
aas
push
imul
adc
push
mov
test
gs
in
minps
es
hlt
ins
mov
dec
cmc
jg
inc
push
test
repz
push
test
mov
mov
iret
xchg
adc
inc
xchg
jne
xchg
mov
mov
mov
xchg
mov
and
jo
inc
lods
movs
xchg
and
mov
pusha
xchg
push
cmps
mov
xor
(bad)
xlat
in
ret
and
xchg
scas
mov
push
int
mov
push
(bad)
mov
jmp
in
gs
(bad)
data16
out
je
and
adc
clc
lahf
fst
add
and
push
add
and
or
adc
xchg
add
mov
aaa
pop
movs
pop
lock
lds
and
or
inc
aad
xor
adc
les
nop
xor
lds
pop
(bad)
arpl
aam
add
push
das
aad
aas
push
div
push
in
mov
test
push
in
lsl
and
mov
inc
cmc
js
outs
push
stos
xchg
mov
sti
push
icebp
lea
mov
mov
inc
mov
adc
mov
mov
test
mov
es
cmps
xchg
pusha
adc
fistp
inc
int
retf
and
xchg
scas
in
fld
icebp
push
call
aad
push
(bad)
mov
xlat
fs
xor
add
mov
iret
data16
out
je
and
jne
lahf
(bad)
xchg
cs
sub
add
jp
adc
shl
sbb
pop
mov
aaa
movs
adc
xor
movs
add
cmps
push
daa
pop
mov
loopne
aad
xor
adc
inc
push
arpl
cmp
jns
adc
inc
(bad)
jb
fs
adc
push
ins
aad
aas
push
in
mov
test
push
in
unpcklps
push
addr16
push
mov
or
push
lods
xchg
mov
lea
gs
test
push
mov
inc
call
call
and
jo
inc
scas
movs
fisub
xchg
mov
mov
xor
retf
inc
lods
adc
and
lahf
scas
mov
push
retf
xor
out
in
jbe
idiv
fs
xor
add
fisttp
fbstp
hlt
adc
loop
(bad)
xchg
xor
jbe
sub
and
xor
cmp
xchg
and
adc
xchg
xor
aaa
xor
lds
and
and
and
xor
aaa
xor
adc
les
jnp
dec
inc
inc
lds
(bad)
jae
jg
inc
sbb
push
pop
aad
aas
push
test
in
mov
test
in
nop
push
addr16
hlt
imul
ins
push
leave
xchg
test
mov
cld
push
scas
xchg
jne
xchg
call
ss
mov
and
jo
inc
jmp
es
cmps
sahf
xor
pusha
xchg
mov
xor
cld
xlat
lods
inc
movs
adc
and
fisubr
loop
leave
add
push
lds
mul
out
add
iret
(bad)
xchg
mul
std
je
and
adc
fistp
aaa
test
in
add
pop
xchg
pop
xor
adc
and
adc
sub
and
sub
mov
loopne
aad
xor
xor
push
push
popa
les
pusha
movs
dec
inc
lds
pop
(bad)
push
inc
outs
aam
xor
push
jno
inc
aas
push
test
in
mov
test
gs
in
nop
cs
hlt
dec
mov
inc
cmc
pop
pop
push
adc
mov
mov
mov
popf
adc
inc
xchg
jne
xchg
mov
lock
and
jo
inc
mov
fsub
and
push
mov
fistp
inc
lods
adc
and
xchg
scas
hlt
inc
inc
icebp
push
rol
retf
aad
push
(bad)
mov
ret
xor
add
les
les
rcl
lahf
out
xchg
and
sub
adc
and
adc
daa
xchg
adc
adc
add
pop
adc
cmp
movs
adc
adc
movs
sbb
daa
sbb
xor
adc
push
push
push
les
nop
ja
jno
jp
push
das
pop
(bad)
outs
inc
pop
aam
add
arpl
add
dec
not
dec
in
mov
test
pop
out
addr16
hlt
push
mov
dec
cmc
pop
pop
outs
push
mov
test
gs
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
stos
movs
mov
in
cdq
xor
pusha
cmps
push
test
fistp
inc
lods
adc
and
mov
fist
fnsave
sar
fs
xor
add
fisttp
aam
xlat
and
adc
(bad)
lahf
mov
and
or
push
add
and
or
adc
cmp
movs
adc
pop
lds
and
daa
cmps
pop
daa
add
pop
loopne
aad
xor
adc
les
ins
movs
pop
inc
pop
lds
das
pop
(bad)
ja
jg
inc
add
push
ins
aad
aas
inc
neg
dec
in
mov
test
push
in
unpckhps
arpl
hlt
push
mov
inc
cmc
and
jbe
scas
xchg
mov
mov
mov
mov
inc
mov
adc
xchg
mov
and
jo
inc
lock
fldenv
xchg
cmps
xor
fst
mov
xor
cmc
xlat
mov
mov
inc
inc
out
leave
add
xor
in
mov
in
fbstp
enter
ret
lods
(bad)
fsub
out
je
and
adc
rcr
add
add
cmp
or
adc
push
mov
aaa
push
movs
and
adc
movs
and
daa
sbb
xor
push
(bad)
jb
popa
les
nop
dec
movs
dec
inc
and
bound
pop
(bad)
pop
inc
pop
aam
and
push
cs
aas
jge
inc
ja
in
mov
test
gs
jno
jb
sbb
bound
pop
pop
ins
push
mov
mov
push
mov
mov
std
add
mov
inc
mov
adc
repnz
and
jo
inc
xchg
movs
mov
loope
mov
shl
push
mov
fbstp
inc
mov
(bad)
mov
icebp
push
retf
xor
ret
mov
(bad)
fs
xor
add
ror
je
and
adc
lock
lock
and
jle
add
and
daa
add
daa
xchg
pop
es
or
add
add
sub
movs
xor
adc
movs
sbb
daa
sbb
pavgb
aad
xor
adc
inc
push
push
les
dec
movs
push
inc
inc
lds
inc
(bad)
jne
js
dec
cmp
push
ins
aad
aas
push
test
in
mov
test
gs
in
nop
jno
pop
hlt
pop
mov
or
push
movs
xchg
test
gs
test
push
mov
inc
mov
adc
mov
add
iret
mov
xor
pusha
retf
mov
xor
not
lock
not
into
and
mov
(bad)
push
ret
add
xor
hlt
mov
shl
enter
shl
fsub
out
je
and
jne
lahf
out
xchg
xor
jb
jnp
or
xor
jle
xor
adc
adc
or
sub
and
sbb
dec
loopne
aad
xor
or
les
nop
jne
or
das
push
(bad)
jo
inc
aam
or
push
arpl
inc
aas
jns
push
mov
test
push
in
pcmpgtw
pop
addr16
hlt
push
mov
inc
cmc
pop
pop
imul
jecxz
xchg
test
add
xchg
xchg
jne
xchg
lods
adc
(bad)
mov
and
jo
inc
mov
and
mov
mov
xor
hlt
xlat
test
jmp
inc
hlt
(bad)
out
int
loope
xlat
aad
push
(bad)
mov
into
fs
clc
add
call
out
je
and
adc
fcomp
imul
outs
sbb
aaa
pop
cmp
cmc
pop
adc
or
adc
sub
movs
add
cmps
(bad)
add
xor
cmp
adc
les
dec
movs
pop
inc
pop
lds
pop
(bad)
jne
and
push
or
push
inc
aad
aas
pop
test
in
mov
test
sbb
jge
dec
out
outs
hlt
push
mov
inc
cmc
jl
jle
adc
gs
test
add
mov
mov
jne
xchg
(bad)
adc
nop
mov
and
jo
inc
mov
xchg
and
mov
xchg
push
lods
mov
xor
loopne
hlt
inc
lods
adc
and
xchg
scas
call
push
out
mov
push
fidivr
out
test
jmp
test
je
and
adc
fstp
xor
add
cmp
or
cmp
sbb
movzx
adc
and
push
cmps
sbb
push
mov
loopne
aad
xor
adc
inc
push
imul
dec
inc
and
push
das
pop
mov
pop
aam
add
push
ins
aad
aas
push
dec
ja
in
mov
test
in
maxps
inc
addr16
hlt
dec
mov
adc
jae
outs
push
lods
xchg
test
and
mov
push
cdq
xchg
test
jmp
and
jo
inc
lods
movs
mov
mov
cmps
mov
push
xchg
iret
push
lock
out
inc
call
hlt
and
shr
mov
xor
ret
jbe
test
add
loope
hlt
data16
cld
je
and
adc
cmc
lahf
rcl
or
and
adc
outs
and
or
adc
aas
mov
aaa
pop
movs
pop
lock
cmp
sub
pop
loopne
aad
xor
das
(bad)
push
nop
dec
movs
outs
inc
jl
adc
pop
(bad)
jne
pop
aam
add
push
pop
aad
aas
dec
neg
push
in
mov
test
push
in
packsswb
push
addr16
dec
mov
ins
cmc
pop
pop
inc
push
mov
mul
test
push
mov
lahf
jne
xchg
in
adc
lea
rol
movs
(bad)
sahf
cmps
fwait
xor
pusha
xchg
push
mov
mov
(bad)
test
mov
inc
in
(bad)
icebp
push
int
mov
push
fdivr
iret
fs
add
(bad)
(bad)
iret
data16
out
je
and
adc
fcomp
aaa
test
pop
in
add
add
aaa
pop
sete
rcr
sub
sub
add
mov
aaa
pop
movs
push
lock
lds
and
sbb
cs
aad
xor
push
(bad)
dec
push
popa
les
xor
jle
pop
(bad)
arpl
aam
and
sbb
aad
aas
push
div
mov
test
gs
in
sysret
out
addr16
push
mov
inc
cmc
push
pop
push
add
push
xchg
mov
test
nop
xchg
jne
xchg
mov
ss
jo
inc
scas
movs
mov
es
xchg
pusha
mov
xor
lock
rol
and
xchg
scas
cli
inc
rol
(bad)
push
out
mov
push
ret
jbe
not
xlat
xor
add
hlt
(bad)
cmc
out
out
je
and
adc
movs
lahf
(bad)
xchg
and
aas
test
shl
in
add
and
xadd
cmc
aas
adc
and
movs
push
lock
or
add
cmp
xor
adc
inc
push
je
aas
nop
jo
ins
inc
imul
inc
inc
data16
add
push
ins
aad
aas
push
test
in
mov
test
in
unpckhps
popa
addr16
hlt
push
mov
or
push
mov
push
mul
test
push
mov
jne
xchg
in
adc
pushf
mov
and
jo
inc
lods
movs
xchg
and
and
push
cli
mov
xor
xchg
xlat
aad
int
into
and
mov
call
stos
xor
fdivr
xchg
fidiv
lds
out
(bad)
loop
mov
and
adc
rcr
test
and
dec
add
daa
xchg
rcr
or
cmp
pop
lock
ins
and
and
adc
and
pop
xor
dec
(bad)
push
nop
ins
movs
or
lds
das
inc
(bad)
jge
inc
aam
sbb
push
pop
aad
aas
push
imul
push
in
mov
test
jno
bndmov
push
addr16
push
mov
inc
cmc
dec
pop
push
add
push
cli
gs
test
push
scas
xchg
adc
ss
mov
and
jo
inc
mov
mov
xchg
cmps
sahf
xor
pusha
xchg
push
mov
fild
inc
mov
(bad)
xchg
scas
fild
(bad)
out
into
add
xor
fistp
shl
enter
jmp
out
je
and
adc
fcomp
aaa
test
je
dec
add
xchg
pop
ds
adc
or
add
ds
aaa
pop
movs
adc
push
lds
and
cmp
sub
xor
adc
les
nop
dec
movs
push
inc
and
push
das
dec
(bad)
push
inc
addr16
adc
push
and
jnp
imul
inc
mov
test
jp
xor
add
ins
addr16
hlt
push
mov
push
cmc
pop
pop
imul
jecxz
lods
gs
mov
push
mov
inc
lahf
jne
xchg
mov
lea
cmps
inc
jmp
fisub
and
mov
mov
retf
adc
and
out
scas
test
not
fidiv
ret
jbe
div
shl
retf
in
gs
leave
data16
(bad)
je
and
adc
fstp
sub
add
daa
xchg
es
or
push
cmc
pop
adc
cmp
movs
push
lock
lds
and
pop
cmps
sbb
sbb
xor
sbb
inc
push
imul
dec
inc
cmp
dec
das
pop
(bad)
ja
pop
aam
add
push
pop
aad
aas
push
test
push
mov
test
in
addps
inc
addr16
je
bound
pop
pop
pop
push
lods
xchg
test
gs
test
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
stos
movs
mov
mov
pusha
xchg
push
mov
test
push
xchg
xlat
repz
mov
(bad)
lds
mov
xor
(bad)
mov
leave
fs
xor
add
jecxz
and
fnsave
les
fcomp
xor
arpl
je
adc
sub
or
or
pop
adc
ds
aaa
pop
movs
pop
lock
imul
add
or
adc
aas
xor
sub
ins
push
jbe
xchg
inc
movs
adc
and
push
das
(bad)
(bad)
jae
outs
aam
and
add
aad
aas
push
not
adc
pop
mov
test
dec
in
cmovns
inc
addr16
hlt
dec
mov
push
push
lods
xchg
add
mov
xchg
test
push
scas
xchg
jne
xchg
mov
cmp
ss
mov
and
jo
inc
jmp
mov
xchg
cmps
popf
xor
pusha
mov
xor
xchg
xlat
out
mov
(bad)
xchg
scas
ret
inc
inc
sti
push
mov
retf
xor
icebp
mov
int
in
out
add
int3
(bad)
out
je
and
adc
(bad)
lahf
fcom
adc
sbb
sbb
sbb
cmp
adc
push
mov
aaa
push
movs
sbb
and
inc
cmps
and
cmp
xor
pop
(bad)
dec
push
ins
les
nop
jo
jo
pop
lds
pop
(bad)
outs
inc
jns
inc
add
push
cs
aas
push
mul
or
test
jns
gs
push
addr16
hlt
ja
pop
xchg
jg
outs
cmc
jb
outs
push
mov
push
sti
gs
xlat
out
mov
xchg
xchg
jne
xchg
mov
ret
ss
mov
and
jo
inc
mov
test
es
cmps
mov
push
cmps
mov
xor
loopne
ret
adc
and
xchg
scas
loope
(bad)
push
jecxz
clc
xor
clc
mov
out
shl
into
add
jecxz
jmp
je
and
adc
call
jne
cmp
aaa
in
add
sbb
xchg
imul
cmc
push
adc
sbb
sub
and
and
adc
cmp
and
cs
jl
push
les
nop
jae
outs
inc
pop
lds
das
pop
(bad)
dec
inc
fs
sub
sbb
aad
aas
sub
dec
ja
in
mov
test
jno
bound
sbb
cs
hlt
dec
mov
adc
popw
outs
push
lods
xchg
mov
test
add
mov
popf
adc
inc
call
call
and
jo
inc
out
fbld
xchg
cmps
mov
mov
push
cdq
mov
xor
into
xlat
out
inc
sti
adc
and
mov
in
aam
jmp
mov
leave
xor
add
std
(bad)
cld
data16
in
xlat
and
adc
(bad)
lahf
ficom
jg
xor
push
add
and
or
adc
ds
aaa
shld
sbb
sub
and
push
loopne
aad
xor
add
les
jp
dec
inc
cmp
jbe
aas
(bad)
jo
inc
aam
add
push
dec
aad
aas
and
in
mov
test
sbb
dec
sysret
out
addr16
hlt
mov
or
and
js
test
jmp
gs
out
xchg
push
scas
xchg
adc
xchg
and
jo
inc
out
mov
es
cmps
xchg
xor
pusha
mov
mov
xor
(bad)
inc
lods
adc
and
(bad)
scas
mov
push
xlat
add
xor
in
scas
jbe
test
add
mov
les
out
je
and
adc
fistp
aaa
test
rcl
in
add
sbb
aaa
pop
pusha
xchg
or
sbb
pop
adc
sub
pop
lock
adc
and
pop
loopne
aad
xor
or
arpl
les
inc
jb
pop
das
fs
arpl
aam
and
aas
push
idiv
inc
in
mov
test
sbb
jg
pop
out
addr16
hlt
popa
mov
inc
cmc
pop
pop
pop
push
sahf
xchg
mov
test
add
mov
inc
mov
adc
mov
and
movs
fbld
xchg
xchg
push
mov
fbstp
inc
lds
in
(bad)
korw
scas
mov
push
leave
add
xor
(bad)
mov
(bad)
shl
xlat
add
dec
test
rcl
lahf
jmp
pop
pop
sub
add
and
and
and
pop
adc
adc
xor
and
sbb
cmp
xor
adc
push
push
dec
les
nop
movs
dec
inc
cmp
je
pop
(bad)
jp
jno
jno
jno
arpl
aad
aas
push
test
in
mov
test
dec
in
unpckhps
dec
addr16
hlt
push
mov
or
push
lods
xchg
mov
cdq
push
mov
test
push
ret
adc
inc
call
jmp
mov
add
shl
cwde
cmps
mov
push
xchg
mov
xlat
out
inc
lods
adc
and
ret
inc
into
mov
xor
hlt
mov
xchg
fs
xor
add
mov
into
data16
(bad)
je
and
jne
lahf
out
xchg
push
pop
or
jnp
or
cmp
test
outs
cmp
jl
cmp
push
adc
ds
aaa
sub
and
sbb
daa
loopne
aad
xor
adc
les
nop
dec
movs
pop
inc
jno
adc
push
mov
jg
dec
and
arpl
sbb
inc
neg
push
in
mov
test
jle
sysretw
out
addr16
hlt
ins
mov
push
cmc
pop
pop
outs
push
xchg
xchg
mov
gs
mov
scas
xchg
adc
inc
mov
adc
mov
jo
inc
jmp
iret
mov
fwait
cmps
mov
push
cdq
mov
xor
(bad)
xlat
cmc
inc
(bad)
adc
and
(bad)
scas
call
push
rol
xor
fstp
xlat
xlat
xor
add
jecxz
hlt
data16
and
adc
fcomp
or
add
sbb
aaa
pop
and
adc
outs
mov
aaa
adc
and
sub
xor
pop
movs
sub
or
sub
dec
aad
xor
adc
les
jo
pop
inc
jb
push
das
jge
popa
inc
jns
ins
or
push
sub
inc
aas
pop
mul
dec
in
mov
test
add
push
pcmpeqw
jl
inc
hlt
inc
mov
or
pop
pop
jle
fist
hlt
pop
mov
lods
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
shl
mov
rcl
xchg
xor
xlat
xlat
mov
(bad)
adc
and
shr
rcl
fidiv
(bad)
mov
(bad)
fs
xor
add
ror
les
xchg
int
mov
aaa
ror
adc
pop
adc
adc
sub
sub
adc
and
and
adc
inc
aad
xor
adc
les
jae
push
inc
pop
lds
das
pop
mov
aam
add
push
dec
aad
aas
imul
arpl
inc
in
unpckhps
dec
addr16
push
mov
or
push
mov
push
mov
cdq
test
push
mov
inc
mov
popf
xchg
mov
movs
mov
and
jo
inc
lods
movs
cwde
and
xchg
cmps
xchg
xor
pusha
retf
push
mov
fistp
inc
lods
adc
and
les
fist
mov
push
ret
mov
leave
fs
xor
add
fimul
fbstp
les
aad
leave
xchg
add
xor
ror
in
add
and
sub
sbb
pop
adc
es
aaa
shld
lds
and
and
adc
sbb
sbb
and
les
nop
movs
adc
jno
adc
dec
(bad)
jae
jg
outs
xor
pop
aad
aas
push
test
in
mov
test
push
in
nop
pop
addr16
hlt
sbb
jne
cmc
and
push
add
push
repnz
test
push
scas
xchg
jne
xchg
xchg
adc
jmp
jo
inc
lods
movs
and
cmps
popf
xor
pusha
mov
xor
cmc
xlat
mov
std
adc
and
xchg
scas
stc
inc
inc
out
rol
sti
xor
fdivr
into
fs
enter
fwait
lods
(bad)
out
je
and
adc
les
sub
add
cmp
xor
ds
or
and
sbb
jg
mov
aaa
and
add
sbb
sub
and
mov
loopne
aad
xor
push
(bad)
jl
outs
les
xor
lds
pop
(bad)
pop
inc
fs
and
sbb
aad
aas
push
div
ja
in
mov
test
ins
in
lsl
push
addr16
hlt
push
mov
inc
cmc
pop
pop
push
add
push
cmc
xchg
test
lahf
xchg
jne
xchg
lods
adc
mov
mov
jmp
iret
popf
es
cmps
xchg
pusha
rcl
shl
jecxz
mov
cmc
adc
and
nop
scas
fadd
mov
xor
ret
mov
repnz
lds
out
jmp
(bad)
je
and
adc
fstp
add
add
add
xor
aas
cmc
sbb
cmp
movs
sub
and
and
sub
add
and
push
mov
pop
sbb
fs
pop
les
nop
ja
push
inc
cmp
pop
das
cmp
ja
jno
xor
sub
addr16
jbe
dec
ja
in
mov
test
gs
bound
pop
out
addr16
hlt
push
mov
jb
pop
pop
or
rcl
lods
gs
shr
mov
lods
xchg
jne
xchg
out
adc
(bad)
mov
and
jo
inc
stos
movs
mov
mov
cmps
xor
retf
mov
xor
out
xlat
int
lods
adc
and
ret
inc
repnz
stc
push
leave
add
xor
(bad)
mov
mul
xchg
add
ror
fbstp
out
out
ret
jne
lahf
fist
pop
shl
in
add
push
xchg
pop
cmp
adc
or
pop
lock
or
and
mov
loopne
aad
xor
aas
(bad)
inc
push
xor
and
jno
pop
das
pop
(bad)
pop
inc
jg
dec
sub
pop
push
sub
inc
aas
dec
mul
push
in
mov
test
push
in
packsswb
push
addr16
adc
imul
adc
mov
mov
mov
inc
xor
call
and
jo
inc
scas
movs
xchg
and
xchg
cmps
iret
xor
pusha
nop
push
div
retf
xlat
retf
inc
mov
lds
inc
test
loope
xchg
aad
push
cmp
lds
loop
jmp
and
adc
fcomp
xor
add
sub
or
outs
and
sbb
ds
adc
addr16
add
jg
mov
aaa
adc
lds
and
sbb
adc
aaa
aad
xor
push
(bad)
jbe
pop
les
jne
or
lds
das
inc
(bad)
arpl
aam
xor
push
cs
aas
sub
jl
dec
in
mov
test
in
lsl
ins
addr16
hlt
push
mov
inc
cmc
push
pop
or
adc
xchg
test
xchg
stos
jne
xchg
mov
mov
mov
lods
movs
mov
movs
cmps
xchg
pusha
mov
xor
jecxz
fild
retf
and
xchg
scas
mov
push
rol
(bad)
xor
(bad)
mov
(bad)
shl
iret
add
fisttp
shl
adc
fistp
sub
and
daa
in
add
and
adc
pop
cmc
pop
adc
xor
daa
lock
movs
xor
cmps
sbb
xor
xor
inc
(bad)
jl
imul
dec
inc
dec
lds
mov
xor
push
aad
aas
push
test
in
mov
test
pop
in
subps
inc
addr16
hlt
push
mov
or
push
lods
xchg
test
loop
mul
test
push
scas
xchg
jne
xchg
nop
adc
test
mov
stos
movs
fbld
xchg
stos
push
(bad)
mov
xor
in
cmc
inc
stc
adc
and
shr
stc
push
leave
add
push
fidivr
in
into
xor
add
int
retf
out
je
and
adc
fstp
xor
add
and
or
adc
sub
movs
adc
and
or
cmp
pop
aad
xor
adc
les
nop
ins
movs
push
inc
cmp
mov
and
cmp
dec
mov
push
pop
aad
aas
push
imul
ja
in
mov
test
pop
in
cmovno
push
addr16
hlt
jne
push
xchg
jnp
push
addr16
push
add
push
cli
gs
mov
shr
mov
adc
inc
mov
adc
mov
mov
inc
jmp
iret
cwde
es
pusha
adc
leave
xor
loope
fadd
leave
and
xchg
scas
into
inc
jecxz
out
push
icebp
add
xor
cmp
shl
out
add
fisttp
shl
adc
aam
lds
pusha
rcr
in
add
sub
das
shr
aas
adc
imul
xor
and
or
sbb
sbb
pop
sbb
les
jo
dec
inc
(bad)
lds
pop
(bad)
push
inc
pop
aam
adc
push
das
aad
aas
sub
dec
ja
in
mov
test
inc
in
lsl
push
addr16
hlt
push
mov
inc
cmc
inc
pop
or
mov
push
mov
mov
mov
fwait
xchg
jne
xchg
mov
mov
mov
jmp
fisub
(bad)
cmps
xchg
pusha
fst
mov
xor
not
hlt
inc
lods
adc
and
jmp
mov
push
test
fst
mov
xchg
fs
add
fisttp
les
call
ficomp
sub
add
push
xchg
pop
jge
sbb
adc
xchg
adc
mov
aaa
xor
and
push
cmps
and
sbb
dec
loopne
aad
xor
adc
inc
push
xor
cmp
cmp
adc
pop
(bad)
jg
fs
cmp
push
js
jne
push
test
push
mov
test
jno
bound
adc
hlt
push
mov
pmaddwd
outs
push
mov
push
mul
test
push
cdq
xchg
test
movs
ss
mov
and
jo
inc
lods
movs
pushf
and
lahf
cmps
cdq
xor
pusha
mov
cli
mov
xor
loop
test
cld
inc
shr
in
aam
loope
(bad)
push
hlt
mov
leave
shl
loope
scas
in
gs
lahf
data16
fbstp
jmp
lahf
les
jnp
sbb
cmp
jg
dec
outs
jl
xor
daa
xchg
sbb
adc
push
mov
aaa
push
movs
xor
and
cmps
add
add
add
pop
aad
xor
or
adc
nop
push
lds
das
outs
(bad)
jae
jnp
sbb
push
pop
aad
aas
push
mul
(bad)
in
mov
test
push
in
packssdw
push
addr16
hlt
pop
mov
js
pop
pop
ins
push
test
mov
gs
pop
scas
xchg
jne
xchg
adc
mov
and
jo
inc
test
iret
popf
es
cmps
sahf
xor
pusha
mov
xor
cmc
xlat
mov
and
leave
scas
mov
push
mov
aad
push
std
mov
fbld
enter
out
gs
out
les
cdq
adc
fcomp
or
add
jnp
aaa
pop
xor
adc
push
mov
aaa
pop
movs
adc
push
lds
pop
movs
adc
cmps
sbb
loopne
aad
xor
push
(bad)
dec
push
popa
les
jae
jae
push
or
push
(bad)
pusha
inc
addr16
xor
push
sub
not
gs
mov
test
push
in
punpckhbw
push
addr16
hlt
inc
mov
push
cmc
pop
pop
fs
pushf
xchg
mov
loopne
mov
add
mov
inc
mov
adc
mov
mov
mov
fsub
xchg
cmps
shl
xchg
push
movs
mov
xor
int
test
and
loope
(bad)
inc
pop
cmc
push
mov
aad
push
clc
mov
shl
icebp
add
out
leave
data16
out
je
and
adc
fstp
jne
pusha
shl
in
add
arpl
or
adc
sbb
jg
mov
aaa
push
movs
pop
lock
or
daa
cmps
sbb
sbb
add
xor
cmp
adc
les
jae
js
outs
lds
das
push
pop
inc
dec
aam
adc
push
cs
aas
jle
bound
in
mov
test
dec
in
maxps
jae
pop
hlt
inc
mov
inc
cmc
cs
or
add
push
mul
test
push
mov
inc
stos
jne
xchg
adc
mov
and
jo
inc
stos
movs
fsub
xchg
cmps
mov
mov
push
mov
fild
inc
not
int
mov
inc
fild
mov
xor
fdivr
leave
test
int
stos
in
fisttp
(bad)
je
and
adc
fcomp
das
test
shl
in
add
adc
sbb
sar
inc
adc
ds
aaa
add
and
inc
cmps
add
loopne
aad
xor
inc
(bad)
addr16
jno
gs
push
movs
jbe
inc
lds
push
mov
aam
or
push
popa
aad
aas
push
test
in
mov
test
adc
dec
cmovns
push
addr16
hlt
adc
inc
cmc
jno
or
add
push
mov
add
scas
xchg
adc
xchg
and
jo
inc
mov
mov
and
enter
xchg
push
(bad)
xlat
rol
and
lahf
scas
retf
inc
inc
clc
push
mov
mov
push
(bad)
mov
fisub
xchg
add
ret
data16
shl
adc
neg
add
in
add
arpl
adc
adc
xchg
add
mov
aaa
pop
movs
xor
xor
xor
sbb
es
and
or
inc
aad
xor
and
les
push
movs
dec
inc
jb
dec
das
push
push
inc
addr16
and
pop
push
sub
jnp
jae
push
ja
in
mov
test
sbb
jg
je
push
addr16
push
mov
jg
inc
pop
jo
mov
mov
mov
test
push
nop
xchg
jne
xchg
mov
xor
inc
mov
shl
cmps
xchg
xor
pusha
fst
mov
xor
xchg
xlat
jmp
(bad)
xchg
scas
mov
push
enter
rcl
push
lock
xchg
xchg
loope
stos
in
gs
(bad)
out
je
and
adc
fcomp
jne
pusha
ror
in
add
sub
xadd
cmc
sbb
aas
mov
aaa
adc
cs
cmp
adc
sbb
add
xor
dec
(bad)
jl
imul
pop
inc
jno
jo
inc
(bad)
jae
fs
xor
push
ins
aad
aas
jp
dec
ja
in
mov
test
push
bound
adc
jl
pop
hlt
push
mov
or
push
mov
xchg
add
push
mul
test
push
into
xchg
jne
xchg
popf
adc
repz
and
jo
inc
mov
fbld
xchg
cmps
iret
xor
pusha
retf
mov
xor
out
int3
inc
out
into
and
mov
scas
push
jmp
push
iret
mov
leave
fs
xor
add
mov
clc
iretw
out
je
and
jne
lahf
out
xor
ja
jnp
imul
and
jle
xor
adc
adc
es
aaa
pop
movs
dec
lock
cmp
das
cmps
daa
daa
add
push
loopne
aad
xor
aas
(bad)
imul
and
pop
lds
inc
(bad)
jae
jnp
cmp
and
dec
aas
je
pop
ja
in
mov
test
adc
outs
mulps
push
addr16
adc
push
cmc
inc
pop
ins
push
test
lods
add
push
cmc
mov
mov
rol
jne
xchg
xchg
adc
mov
jo
inc
lods
movs
pushf
and
movs
cmps
sahf
xor
pusha
stos
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
mov
aad
push
into
mov
in
fs
xor
add
loop
into
out
(bad)
je
and
adc
fstp
aaa
test
ja
dec
add
and
or
adc
and
push
movs
inc
lock
xor
sbb
pop
loopne
aad
xor
adc
adc
les
inc
jg
imul
cmp
mov
push
das
aad
aas
push
inc
ja
in
mov
test
jns
dec
nop
pop
addr16
hlt
dec
mov
or
push
pop
inc
push
adc
gs
out
clc
push
xchg
mov
adc
xchg
mov
and
jo
inc
mov
iret
mov
and
mov
push
loopne
rol
enter
jecxz
xchg
scas
mov
push
rol
xor
repnz
fbld
enter
fldenv
(bad)
out
je
and
jne
lahf
rcl
shl
in
add
and
adc
add
sbb
outs
mov
aaa
xor
and
and
pavgb
or
adc
push
dec
les
inc
movs
push
inc
cmp
adc
inc
mov
pop
aam
xor
ins
aad
aas
sub
in
mov
test
js
bound
pop
out
addr16
jb
push
xchg
jnp
inc
cmc
outs
pop
jg
mov
push
mul
test
push
les
popf
jne
xchg
mov
ss
and
jo
inc
lods
movs
fbld
xchg
cmps
xchg
pusha
xchg
push
mov
fbstp
inc
not
mov
inc
mov
lds
in
(bad)
aad
push
(bad)
mov
leave
fs
rol
int
retf
out
je
and
adc
cli
lahf
out
xor
sub
add
add
xor
gs
sbb
adc
sub
and
pop
lds
and
or
adc
pop
aad
xor
dec
(bad)
outs
push
xor
and
jp
arpl
ins
(bad)
jg
jg
or
push
and
inc
aas
sub
in
mov
test
pop
in
sysret
out
addr16
push
mov
inc
cmc
push
pop
push
add
push
cmc
mov
mov
mov
inc
test
fcom
lahf
ss
mov
and
jo
inc
(bad)
movs
mov
es
cmps
sahf
xor
pusha
rcl
lods
xor
in
cld
inc
mov
lds
inc
rol
fcom
lds
(bad)
mov
int3
mov
lds
dec
repz
and
adc
out
mov
popa
shr
in
add
and
jl
sub
add
push
mov
aaa
adc
and
adc
mov
loopne
aad
xor
push
(bad)
dec
push
push
les
jb
adc
lds
js
arpl
aam
add
push
push
aad
aas
push
test
in
mov
test
inc
in
movd
jg
push
hlt
inc
mov
or
and
outs
push
adc
xchg
pushf
push
into
xchg
jne
xchg
xchg
adc
mov
rol
movs
mov
test
xchg
push
mov
fistp
inc
into
adc
and
xchg
scas
cmc
inc
(bad)
push
ret
add
xor
fidivr
out
fwait
xor
add
in
std
out
les
mov
repz
les
rcr
in
add
xor
xchg
jno
pop
cmc
and
push
movs
sub
and
and
or
adc
and
dec
(bad)
push
push
imul
dec
inc
cmp
gs
popa
(bad)
ja
inc
aam
add
jl
inc
aas
jp
dec
ja
in
mov
test
in
unpckhps
inc
addr16
hlt
jae
jl
dec
jne
cmc
pop
pop
jo
lods
xchg
test
gs
test
xchg
xchg
jne
xchg
mov
repz
and
jo
inc
mov
fsub
xchg
cmps
test
pusha
ret
push
mov
ffreep
push
in
xlat
loope
rcl
enter
cld
inc
nop
scas
jmp
push
stos
add
push
(bad)
mov
leave
shl
clc
add
mov
jmp
and
adc
fcomp
sub
add
xchg
daa
xchg
or
sbb
and
adc
or
shld
or
cmp
and
adc
dec
aad
xor
aas
(bad)
push
nop
dec
movs
dec
inc
ins
lds
push
(bad)
popa
inc
inc
aam
sbb
push
xor
push
aas
ins
imul
jb
inc
mov
test
inc
out
addr16
hlt
push
mov
dec
cmc
addr16
imul
sti
push
mov
test
push
mov
inc
mov
adc
mov
xchg
and
jo
inc
mov
mov
es
cmps
sahf
xor
pusha
mov
xor
hlt
xlat
in
inc
loop
leave
and
xchg
scas
mov
add
xor
cwde
mov
sahf
fs
xor
add
loop
cmc
data16
(bad)
je
and
jne
lahf
mov
add
add
daa
xchg
pop
ds
or
and
adc
jg
mov
aaa
pop
movs
cmp
dec
lds
and
xor
sbb
loopne
aad
xor
sbb
gs
inc
les
nop
push
movs
inc
inc
jb
adc
dec
(bad)
arpl
aam
and
aas
ins
test
jge
dec
test
sbb
out
addr16
hlt
push
mov
inc
cmc
inc
pop
jbe
adc
mov
add
xchg
jne
xchg
call
lea
movs
inc
mov
iret
aam
(bad)
cmps
xchg
pusha
xchg
push
div
mov
inc
mov
lds
inc
clc
(bad)
lock
rol
xor
cwde
mov
shl
retf
add
int3
(bad)
fldenv
out
je
and
adc
movs
lahf
lock
and
push
test
shl
in
add
or
rcl
push
jg
mov
aaa
pop
movs
xor
xor
movs
sbb
daa
sbb
adc
and
and
pop
ds
pop
push
dec
les
nop
imul
ja
arpl
pusha
add
push
ins
aad
aas
test
in
mov
test
dec
in
unpckhps
outs
addr16
push
mov
or
push
lods
xchg
mov
gs
test
push
add
jne
xchg
jmp
xor
inc
out
fbld
xchg
cmps
shl
retf
mov
xor
jmp
ret
inc
in
adc
and
xchg
scas
mov
push
repnz
xor
in
in
jbe
imul
fs
xor
add
fisttp
fbstp
rcl
fcomp
or
add
jns
sbb
cmp
adc
ja
or
xor
and
and
adc
pop
aad
xor
inc
(bad)
push
push
jb
sub
pop
movs
adc
jb
popa
das
push
(bad)
jae
outs
aam
or
push
cs
aas
dec
mul
push
in
mov
test
gs
in
packssdw
inc
addr16
imul
cmc
jnp
inc
push
mov
push
mov
test
add
scas
xchg
jne
xchg
mov
mov
jo
inc
lods
movs
pushf
and
loope
xor
pushf
xor
hlt
xlat
cmc
inc
lods
adc
and
in
scas
mov
push
int
mov
push
lds
icebp
fs
xor
add
in
jmp
and
adc
out
mov
ins
ror
in
add
pop
xchg
pop
ds
pop
rcr
sbb
jg
mov
aaa
sub
and
sub
adc
xor
push
(bad)
ins
push
inc
les
jae
outs
inc
jb
pop
das
jne
push
inc
addr16
add
push
jl
inc
aas
sub
inc
ja
in
mov
test
add
inc
addr16
imul
outs
push
movs
xchg
mov
mov
gs
mov
shr
xchg
push
xchg
xchg
jne
xchg
(bad)
adc
stos
mov
and
jo
inc
scas
movs
xchg
and
mov
mov
xor
loopne
mov
mov
(bad)
xchg
scas
mov
xlat
(bad)
aad
leave
add
xor
(bad)
mov
into
fs
xor
add
out
enter
cli
je
and
adc
scas
lahf
(bad)
xchg
and
adc
add
and
or
fs
sbb
ds
aaa
adc
adc
add
movs
je
sbb
sub
or
sub
xor
jl
ja
jb
jae
dec
inc
inc
lds
pop
(bad)
popa
inc
pusha
aam
add
ins
aad
aas
sub
in
mov
test
dec
in
movq
push
addr16
hlt
adc
jne
cmc
push
pop
outs
push
adc
gs
mov
shr
cmc
push
mov
inc
call
(bad)
call
and
jo
inc
xchg
movs
(bad)
and
xor
xlat
aad
lods
adc
and
xchg
scas
loopne
rol
stc
push
retf
add
xor
fidivr
call
add
fisttp
cmc
je
and
adc
rcr
add
add
and
adc
cmp
adc
jg
mov
aaa
sub
and
cmp
xor
add
aad
xor
adc
dec
push
dec
les
ins
movs
dec
inc
jno
jge
pop
(bad)
sbb
cmp
push
(bad)
aad
aas
jo
ss
in
mov
test
jno
gs
jnp
inc
hlt
inc
mov
or
and
inc
push
stos
xchg
mov
push
cmc
gs
mov
push
xchg
xchg
adc
and
mov
xchg
movs
fldenv
xchg
cmps
mov
push
test
lods
push
hlt
xlat
test
mov
inc
add
push
int
mov
push
fistp
int3
xlat
xor
add
test
iret
data16
(bad)
je
and
adc
ficomp
das
test
sbb
or
and
or
adc
xchg
xor
mov
aaa
add
and
and
pop
loopne
aad
xor
cmp
ins
push
les
jo
or
lds
mov
xor
push
dec
aad
aas
and
in
mov
test
inc
in
cmovp
inc
addr16
hlt
push
mov
push
cmc
cmp
push
push
fist
hlt
gs
xchg
mov
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
mov
es
pusha
test
call
push
out
xlat
cld
inc
into
adc
and
xchg
scas
cmps
inc
sti
(bad)
icebp
push
int
lock
lock
xchg
fs
xor
add
out
sti
shl
std
je
and
jne
lahf
ficom
cmp
and
adc
jne
and
shl
sub
cmp
adc
xor
outs
and
push
cmps
adc
sbb
xor
adc
push
push
inc
les
nop
outs
movs
pop
inc
cmp
push
das
aas
(bad)
ja
jp
outs
add
push
inc
aad
aas
push
not
in
mov
test
pop
in
sysret
out
addr16
hlt
push
mov
or
outs
pop
outs
push
scas
xchg
xchg
add
push
mul
test
push
mov
mov
jne
xchg
in
adc
cmps
mov
and
jo
inc
out
movs
call
cmps
xchg
pusha
fwait
push
test
mov
inc
lods
adc
and
shr
mov
xor
fdivr
xlat
fs
xor
add
in
(bad)
(bad)
out
fbstp
jmp
lahf
les
jnp
and
adc
outs
and
or
adc
sbb
inc
lock
dec
and
adc
inc
aad
xor
dec
(bad)
push
nop
pop
movs
push
inc
dec
lds
(bad)
jne
push
aam
and
arpl
aad
aas
push
neg
pusha
in
mov
test
gs
in
nop
ja
inc
hlt
push
mov
inc
cmc
pop
pop
add
add
push
mov
mov
jecxz
scas
xchg
adc
xchg
and
jo
inc
out
movs
pushf
and
xchg
cmps
xchg
xor
pusha
xchg
push
div
lods
push
repz
test
mov
inc
cli
(bad)
movs
push
fld
mov
push
lds
into
fs
xor
add
ror
je
and
jne
lahf
lds
cmp
and
or
outs
and
or
sbb
xchg
push
jg
mov
aaa
push
movs
and
sbb
aaa
and
cmp
add
pop
mov
loopne
aad
xor
sbb
les
jne
push
das
fs
arpl
aam
cmp
pop
push
ja
push
aas
push
test
in
mov
test
jb
push
add
dec
addr16
hlt
imul
push
push
adc
gs
test
add
mov
inc
mov
adc
xor
inc
mov
xchg
and
std
cmps
xchg
mov
xor
loopne
jmp
lods
adc
and
std
scas
mov
push
retf
xor
int
in
jbe
not
shl
iret
add
xlat
(bad)
out
je
and
jne
lahf
(bad)
xchg
aaa
pop
jbe
ins
rcr
in
add
sub
add
aas
cmc
add
aaa
xchg
and
mov
aaa
adc
adc
push
lds
and
sbb
sub
pop
aad
xor
adc
les
nop
xor
push
inc
inc
aam
add
push
ins
aad
aas
pop
div
mov
test
in
addps
inc
addr16
hlt
imul
jae
lods
xchg
test
popf
push
mul
test
push
xchg
xchg
jne
xchg
mov
sar
ss
mov
and
jo
inc
lods
movs
fisub
xchg
cmps
xchg
xor
pusha
xchg
push
std
mov
xor
in
out
inc
(bad)
adc
and
lock
mov
push
jmp
push
cmp
fs
xor
add
out
pop
je
and
adc
mov
pop
xor
jnp
and
dec
add
and
sub
and
aas
adc
ds
aaa
xor
and
sub
adc
inc
aad
xor
adc
push
nop
dec
movs
dec
inc
lds
das
push
mov
aam
cmp
push
arpl
pop
aas
push
neg
pop
in
mov
test
in
packssdw
push
addr16
hlt
inc
mov
push
cmc
addr16
push
add
push
mov
add
scas
xchg
jne
xchg
xchg
adc
mov
jo
inc
(bad)
movs
frstor
xchg
cmps
sahf
xor
pusha
cmps
push
xchg
mov
inc
mov
lds
inc
inc
call
(bad)
xor
(bad)
mov
fisub
icebp
add
mov
out
mul
out
(bad)
and
adc
fcomp
cmp
cmp
sbb
xor
outs
and
or
adc
push
mov
aaa
xor
and
daa
cmps
pop
daa
cs
loopne
aad
xor
sbb
arpl
les
xor
outs
das
pop
(bad)
push
inc
addr16
add
cs
aas
push
test
in
mov
test
gs
in
punpckhdq
push
addr16
hlt
jno
or
pop
pop
inc
push
adc
gs
out
cdq
push
xchg
xchg
jne
xchg
call
lea
mov
mov
mov
xor
pusha
xchg
push
fwait
mov
xor
nop
xlat
in
mov
(bad)
les
loope
leave
add
xor
(bad)
mov
(bad)
fs
xor
add
out
(bad)
out
je
and
adc
mov
pop
add
add
add
jbe
and
pop
adc
outs
mov
aaa
adc
and
cmp
push
loopne
aad
xor
dec
(bad)
dec
push
push
les
nop
imul
jne
push
aam
add
jl
inc
aas
pop
test
in
mov
test
in
unpckhps
jl
pop
hlt
push
mov
or
push
mov
mul
test
push
cmps
xchg
jne
xchg
pushf
adc
movs
mov
and
jo
inc
xchg
movs
fbld
popf
cmps
test
pusha
lahf
push
cli
mov
xor
loop
rol
and
repz
into
inc
aad
stc
push
int3
add
xor
(bad)
mov
xlat
xor
add
int
and
fbstp
(bad)
adc
movs
lahf
test
jg
add
sub
and
xor
cmp
adc
adc
pop
lock
cmp
adc
xor
add
or
xor
mov
pop
adc
les
jno
dec
inc
jno
adc
inc
(bad)
jae
jg
arpl
je
pop
aas
push
div
ja
in
mov
test
push
in
maxps
push
addr16
hlt
jno
jg
cmp
cmc
dec
pop
push
add
push
mul
test
push
cmps
xchg
adc
movs
mov
and
jo
inc
out
popf
and
and
push
xor
push
hlt
xlat
test
repnz
in
scas
mov
push
int
stos
xor
fnstcw
shl
add
mov
enter
cmc
je
and
adc
repz
out
xchg
and
aas
test
add
adc
aaa
pop
xor
adc
adc
movs
es
movs
pop
dec
inc
cmps
sbb
loopne
aad
xor
adc
je
outs
les
jo
dec
inc
inc
lds
pop
mov
addr16
xor
push
das
aad
aas
push
test
in
mov
test
jp
pop
nop
ja
push
hlt
push
mov
dec
cmc
popa
pop
inc
push
mov
lahf
add
push
mul
test
add
cdq
xchg
jne
xchg
in
adc
test
mov
and
mov
pusha
stos
push
cdq
mov
xor
in
xlat
mov
lds
int
hlt
(bad)
mov
std
push
mov
aad
push
loop
aam
in
(bad)
fs
jmp
gs
leave
repnz
je
and
adc
ficomp
and
add
or
jae
adc
xchg
cmp
cmp
movs
push
lock
sub
add
add
inc
aad
xor
adc
jne
inc
les
push
jo
cmp
push
das
aas
(bad)
ja
jno
inc
or
push
je
inc
aas
jnp
jo
dec
in
mov
test
outs
in
sysret
out
addr16
hlt
push
mov
pop
cmc
pop
pop
ins
push
xchg
xchg
lods
add
push
hlt
gs
test
push
mov
inc
test
test
test
xchg
mov
and
jo
inc
test
mov
es
cmps
xchg
xor
pusha
retf
mov
xor
in
mov
lods
adc
and
leave
scas
inc
(bad)
icebp
push
stos
add
push
hlt
mov
(bad)
fs
xor
add
in
mul
out
je
and
jne
lahf
lea
popa
shl
test
xchg
pop
fs
rcl
add
aas
mov
aaa
shld
adc
movs
es
pop
cmps
xor
inc
mov
loopne
aad
xor
dec
(bad)
push
nop
arpl
dec
das
push
(bad)
jo
jle
dec
add
push
dec
aad
aas
dec
mul
push
in
mov
test
pop
in
packssdw
jne
pop
hlt
push
mov
inc
cmc
inc
pop
movhps
push
mov
add
xchg
xchg
jne
xchg
in
adc
mov
mov
call
iret
popf
es
pusha
(bad)
push
mov
fistp
inc
loop
into
and
xchg
scas
mov
sti
(bad)
out
aad
fbstp
cmp
les
rol
(bad)
cmc
data16
and
adc
fcomp
jo
(bad)
shl
dec
add
and
or
and
sbb
sub
and
adc
and
cmp
cmp
aas
mov
loopne
aad
xor
adc
je
popa
les
push
lds
pop
mov
aam
xor
push
das
aad
aas
outs
test
in
mov
test
pop
in
lsl
inc
addr16
push
mov
push
cmc
jl
pushw
mov
push
mov
test
add
mov
inc
xchg
jne
xchg
adc
mov
and
jo
inc
mov
xchg
and
mov
xchg
pusha
xchg
mov
xor
lock
out
inc
std
adc
and
xchg
scas
aad
ffreep
std
push
leave
add
xor
les
aam
shl
enter
out
out
into
data16
cli
je
and
adc
fcomp
xor
add
add
xchg
add
daa
cmc
sbb
push
add
adc
and
sub
push
loopne
aad
xor
adc
inc
push
dec
les
jb
jp
push
jg
jbe
ja
and
dec
add
push
pop
aad
aas
push
div
dec
in
mov
test
in
pcmpeqb
inc
addr16
hlt
push
mov
or
push
lods
xchg
mov
lahf
push
mul
test
mov
inc
call
(bad)
jmp
mov
jo
inc
mov
fbld
xchg
cmps
xchg
pusha
xchg
push
stc
mov
xor
repnz
call
and
mov
stc
push
mov
xor
fnstcw
xlat
fs
xor
gs
cmc
data16
fdiv
les
mov
pop
xor
and
das
in
add
and
or
adc
cmp
movs
pop
lock
movs
adc
daa
adc
sbb
xor
adc
les
ins
movs
push
inc
jno
adc
inc
(bad)
push
inc
jg
inc
cmp
push
outs
aad
aas
dec
test
in
mov
test
in
subps
pop
addr16
hlt
dec
mov
or
inc
pop
js
test
mov
call
mov
test
scas
xchg
jne
xchg
mov
xchg
mov
mov
leave
and
jo
inc
test
iret
and
cmps
pushf
xor
pusha
xchg
push
mov
fbstp
mov
lds
inc
inc
mov
xor
fistp
into
fs
xor
add
test
je
and
adc
out
lahf
lds
sbb
add
sbb
xor
sbb
push
adc
adc
pop
lock
xor
adc
sbb
add
xor
push
(bad)
jl
popa
les
inc
movs
dec
inc
inc
lds
imul
push
push
jle
jl
push
not
push
in
mov
test
push
in
cmovb
pop
addr16
hlt
ja
jbe
jg
add
outs
pop
outs
push
test
hlt
gs
out
add
xchg
inc
xchg
xchg
mov
mov
mov
jmp
lahf
and
sahf
cmps
mov
push
cmps
mov
xor
call
adc
and
repz
mov
push
leave
add
push
cmc
mov
in
shl
rol
out
fwait
mov
and
adc
std
lahf
(bad)
xchg
and
or
add
push
xchg
pop
es
or
sbb
xchg
push
jg
mov
aaa
sub
and
and
and
sbb
or
sub
and
cs
jl
xor
addr16
dec
movs
dec
inc
cmp
(bad)
je
data16
add
push
jb
pop
aas
ins
neg
push
in
mov
test
pop
in
nop
jg
jne
push
mov
pop
cmc
pop
pop
push
push
test
test
gs
test
add
scas
xchg
movs
xchg
mov
mov
mov
mov
fbld
popf
cmps
xchg
mov
xor
in
jmp
not
into
and
ret
inc
repnz
stc
push
leave
add
xor
fidivr
int3
(bad)
int
stos
in
gs
and
fdiv
sti
adc
fcomp
and
jnp
or
test
xchg
pop
aas
xchg
or
adc
push
mov
aaa
push
movs
inc
lock
sbb
and
add
add
or
pop
aad
xor
aas
(bad)
imul
and
jb
jne
push
(bad)
pop
inc
and
ja
inc
mov
push
arpl
inc
aas
sub
pop
ja
in
mov
test
pop
in
nop
inc
addr16
hlt
push
mov
inc
cmc
pop
pop
pop
push
mov
push
mov
add
mov
inc
cwde
jne
xchg
in
adc
mov
mov
mov
xchg
mov
pusha
mov
xor
(bad)
xlat
int
mov
lds
inc
inc
in
rol
stc
xor
les
xchg
fbstp
out
mov
fsub
(bad)
out
je
and
adc
ficomp
aaa
test
add
and
or
pop
cmc
sbb
jg
mov
aaa
push
movs
adc
push
lds
and
and
sub
dec
aad
xor
or
jl
popa
les
jo
dec
inc
lds
das
pop
(bad)
pop
inc
jle
pop
adc
jne
dec
aas
push
test
in
mov
test
gs
in
cvtps2pd
push
addr16
hlt
mov
je
bound
push
push
xchg
cmc
gs
std
add
mov
inc
mov
adc
lahf
mov
and
jo
inc
mov
iret
xchg
and
xor
mov
(bad)
shr
rcl
xor
pushf
mov
ret
xor
add
int3
vphaddwd
xlat
je
and
adc
out
les
ins
rol
in
add
push
xchg
pop
bound
adc
sub
movs
inc
lock
ins
and
and
adc
dec
aad
xor
adc
jl
(bad)
les
nop
jae
or
lds
(bad)
jne
and
dec
add
push
dec
aad
aas
push
inc
ja
in
mov
test
pop
in
lsl
outs
addr16
hlt
dec
mov
push
cmc
and
xchg
pop
push
in
movs
test
push
ret
xchg
jne
xchg
in
adc
cmps
mov
and
jo
inc
stos
movs
mov
mov
cwde
test
movs
push
xor
repnz
out
leave
and
mov
stc
push
rol
lds
into
mov
out
in
xor
add
jecxz
les
out
je
and
adc
clc
lahf
lea
shl
in
add
sub
cmp
adc
cmp
movs
adc
sbb
sub
or
push
daa
push
mov
loopne
aad
xor
push
(bad)
push
nop
dec
movs
dec
inc
imul
jae
push
aam
or
push
jl
inc
aas
dec
test
in
mov
test
add
inc
nop
addr16
hlt
dec
mov
or
pop
pop
push
add
push
hlt
gs
test
push
add
jne
xchg
in
adc
xchg
mov
and
jo
inc
in
movs
popf
and
mov
pusha
stos
push
mov
fistp
inc
repnz
inc
loop
ret
inc
inc
movs
push
icebp
add
push
cmp
xlat
xor
add
fimul
fbstp
cdq
adc
fcomp
aaa
test
push
in
add
sub
or
pop
cmc
daa
adc
push
mov
aaa
xor
and
add
adc
adc
jp
add
pop
push
popa
les
inc
jb
dec
das
inc
mov
aam
and
pop
push
ins
aad
aas
push
test
outs
mov
test
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
and
outs
push
adc
mov
mov
cmps
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
xchg
and
and
popf
xor
in
xlat
hlt
inc
jecxz
jecxz
(bad)
lds
inc
clc
(bad)
loop
mov
aad
push
ret
jbe
neg
fs
enter
shl
(bad)
jecxz
(bad)
std
je
and
adc
ficomp
sub
shl
in
add
and
adc
sbb
push
adc
imul
lock
outs
and
sbb
pop
loopne
aad
xor
xor
pop
push
imul
dec
inc
lds
arpl
ja
pusha
aam
cmp
push
ja
pop
aas
push
test
in
mov
test
in
(bad)
out
addr16
hlt
sbb
jne
cmc
push
pop
jg
lods
xchg
repz
push
mul
test
push
mov
inc
stc
jne
xchg
mov
ss
mov
and
jo
inc
stos
movs
and
mov
mov
xor
in
out
inc
mov
(bad)
out
scas
mov
push
int
jmp
vpsrad
mov
mul
rol
(bad)
pop
data16
fdiv
loop
out
(bad)
jne
lahf
retf
xchg
or
jb
add
and
adc
and
or
adc
ds
aaa
push
movs
and
lds
and
and
adc
pop
aad
xor
adc
push
push
jbe
outs
nop
dec
movs
adc
ins
lds
and
arpl
aam
xor
push
cs
aas
jne
pop
ja
in
mov
test
pop
in
cmovp
inc
addr16
hlt
pop
mov
jb
pop
pop
jo
test
mov
mov
cmc
mov
mov
mov
mov
ss
mov
and
jo
inc
out
movs
pushf
and
cdq
cmps
xor
xchg
push
mov
fild
inc
cld
adc
and
mov
stc
push
int
jmp
jmp
loop
les
into
fs
xor
add
test
je
and
jne
lahf
stc
xchg
sub
aaa
test
pop
in
add
push
xchg
pop
ds
cmp
adc
imul
xor
and
cmp
xor
inc
(bad)
adc
nop
jo
dec
inc
popa
lds
pop
(bad)
push
inc
fs
sub
push
jae
pop
aas
push
idiv
ja
in
mov
test
ins
in
maxps
pop
addr16
hlt
push
mov
outs
cmc
pop
pop
jae
sahf
xchg
mov
scas
push
in
gs
test
push
mov
inc
mov
adc
mov
aam
jmp
xchg
and
and
ret
fbstp
inc
ret
adc
and
shr
les
mov
push
fidivr
in
fs
xchg
add
into
pop
je
and
adc
mov
pop
xor
add
arpl
or
adc
sbb
cmp
movs
cmp
and
and
mov
loopne
aad
xor
ds
jg
push
les
ja
jb
cmp
or
jbe
js
ja
push
and
ja
push
aad
aas
sub
dec
ja
in
mov
test
sbb
bound
adc
hlt
push
mov
or
push
lods
xchg
mov
sti
push
movs
movs
test
push
mov
inc
mov
adc
(bad)
mov
and
jo
inc
mov
lahf
es
cmps
into
xor
pusha
retf
mov
xor
rcl
out
inc
lods
adc
and
loop
fiadd
(bad)
cmps
push
fadd
mov
push
(bad)
mov
xlat
fs
xor
add
mov
fisub
out
je
and
adc
fcomp
sub
add
and
sub
adc
and
jg
mov
aaa
and
lds
and
cmp
or
pop
aad
xor
add
les
nop
jae
or
lds
das
imul
xor
imul
addr16
in
mov
test
push
in
cmovb
push
addr16
hlt
push
mov
jge
dec
pop
outs
push
lods
xchg
lods
add
push
cmc
mov
mov
mov
movs
adc
inc
popf
jne
xchg
test
ss
xchg
and
jo
inc
out
fbld
sahf
cmps
lods
xor
pusha
xchg
push
lea
mov
xlat
rol
and
xchg
scas
mov
push
rol
aad
xlat
aad
push
sar
xlat
xor
add
loop
fwait
mul
xor
retf
jne
lahf
retf
xchg
add
aaa
test
shr
in
add
push
xchg
cmp
cmc
sbb
jg
mov
aaa
pop
movs
pop
lock
lds
and
sbb
xor
xor
or
inc
push
outs
les
outs
movs
dec
inc
jb
dec
das
inc
(bad)
jge
js
inc
add
push
jl
inc
aas
jnp
inc
ja
in
mov
test
jg
inc
lsl
push
addr16
imul
fs
mov
add
hlt
gs
test
push
mov
inc
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
iret
and
cmps
mov
push
loopne
mov
push
not
hlt
inc
in
adc
and
mov
sti
push
repnz
push
aad
out
jbe
test
add
int3
(bad)
iret
data16
les
out
mov
lahf
(bad)
xchg
pop
pop
add
add
sub
pop
shl
or
add
xor
and
push
cmps
sbb
sbb
and
sub
and
cs
jae
(bad)
les
je
inc
inc
cmp
adc
cmp
jg
addr16
add
push
cs
aas
push
neg
(bad)
in
mov
test
pop
in
pcmpgtb
jae
jno
push
mov
imul
xchg
xchg
test
loopne
mov
movs
test
push
xchg
xchg
test
jmp
and
jo
inc
mov
and
xlat
pusha
xchg
push
cli
mov
xor
rcl
inc
lods
adc
and
xchg
scas
sti
inc
aad
(bad)
push
rol
mov
push
fidivr
jmp
retf
in
fisttp
fbstp
test
in
retf
xchg
push
pop
test
and
push
add
and
push
rcl
jg
mov
aaa
shld
xor
or
and
aad
xor
adc
imul
and
jge
adc
pop
(bad)
ja
push
aam
add
push
arpl
pop
aas
sub
in
mov
test
inc
in
unpcklps
js
jb
ins
mov
inc
cmc
pop
pop
dec
push
xchg
xchg
scas
add
push
movs
mov
lea
mov
inc
mov
adc
stos
mov
and
jo
inc
out
xchg
sahf
cmps
xchg
xor
pusha
xchg
push
stos
mov
xor
xchg
xlat
loop
ficom
leave
and
(bad)
scas
mov
push
int
cmps
xor
ret
mov
lock
xor
add
loop
in
shl
icebp
je
and
adc
aam
lds
pusha
shl
in
add
jg
cmp
bound
adc
adc
adc
sbb
sbb
aas
cmps
and
sbb
xor
push
(bad)
push
push
push
les
nop
jo
dec
inc
cmp
push
inc
push
aam
or
push
das
aad
aas
dec
test
in
mov
test
in
lsl
addr16
push
mov
inc
cmc
pop
pop
outs
push
mov
push
mul
test
add
mov
inc
mov
xchg
loop
mov
scas
mov
cmps
inc
scas
movs
xchg
movs
cmps
sahf
xor
pusha
fst
mov
xor
cmc
xlat
hlt
inc
mov
(bad)
xchg
scas
fadd
(bad)
icebp
push
mov
clc
xor
loopne
out
jbe
not
shl
xchg
add
loopne
sahf
data16
fdiv
not
jecxz
(bad)
xchg
cs
xor
ins
shl
in
add
or
and
sbb
cmp
ds
aaa
adc
cmp
push
lds
aas
cmps
sbb
sbb
xor
inc
aad
xor
adc
push
push
dec
les
nop
xor
jo
cmp
or
push
(bad)
pop
inc
fs
and
sbb
aad
aas
jle
dec
ja
in
mov
test
in
sysret
out
addr16
hlt
push
mov
or
push
rcl
mov
leave
test
push
mov
inc
mov
adc
mov
fwait
inc
lods
movs
les
nop
cmps
mov
push
cmps
mov
xor
(bad)
in
lods
adc
and
jmp
fst
mov
push
lds
leave
fs
xor
gs
fisub
out
je
and
adc
fcomp
jb
add
or
test
pop
cmp
adc
xor
add
shld
push
lds
and
sbb
xor
add
push
loopne
aad
xor
push
(bad)
pop
push
push
les
dec
movs
dec
inc
dec
lds
cmp
jnp
jg
inc
xor
sub
add
push
test
in
mov
test
push
in
cvtps2pd
push
addr16
hlt
jno
push
xchg
ss
cmc
pop
pop
outs
push
adc
mov
cdq
push
scas
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
lods
movs
fsub
sahf
cmps
mov
pusha
xchg
push
xchg
mov
inc
cmps
adc
and
retf
inc
out
in
jmp
retf
aad
push
(bad)
mov
in
xlat
xor
add
les
jecxz
xchg
and
adc
fcomp
aaa
test
shl
push
add
and
das
ror
push
adc
push
movs
cmp
sbb
or
daa
cmps
cmp
pop
mov
loopne
aad
xor
push
(bad)
ins
push
arpl
sub
jo
gs
pop
lds
pop
(bad)
pop
inc
addr16
and
pop
push
imul
aas
push
test
in
mov
test
inc
in
lsl
and
hlt
ins
mov
dec
cmc
push
pop
or
movs
xchg
mov
gs
std
add
mov
inc
loopne
mov
mov
and
jo
inc
(bad)
movs
and
cmps
lods
xor
pusha
xchg
push
test
cdq
xor
loopne
hlt
inc
lods
adc
inc
in
scas
mov
push
leave
add
xor
(bad)
mov
(bad)
test
retf
add
out
leave
lock
je
and
adc
(bad)
lahf
repnz
daa
pop
jne
sbb
and
add
outs
sub
or
imul
adc
pop
mov
aaa
add
inc
lock
or
cmp
xor
adc
xor
or
inc
push
ja
jg
ins
movs
jnp
jns
adc
pop
(bad)
push
inc
fs
add
push
arpl
inc
aas
push
test
in
mov
test
in
cmovs
inc
addr16
hlt
je
bound
pop
pop
je
mov
push
mov
test
push
mov
inc
stos
jne
xchg
mov
xchg
mov
and
jo
inc
lods
movs
fsub
xchg
cmps
cdq
xor
pusha
xchg
push
mov
xor
xlat
in
inc
fst
call
inc
loopne
mov
push
aam
mov
push
(bad)
mov
shl
retf
in
fimul
jecxz
aam
les
fcomp
sub
add
and
or
adc
or
push
lock
lds
and
and
push
loopne
aad
xor
das
(bad)
pop
push
xor
jae
ins
movs
or
lds
inc
(bad)
jno
addr16
or
push
arpl
inc
aas
push
test
in
mov
test
pop
in
sysret
out
addr16
dec
mov
inc
cmc
pop
pop
push
add
push
mov
add
xchg
xchg
adc
and
mov
and
and
mov
push
hlt
xlat
mov
mov
(bad)
(bad)
scas
mov
push
int
in
aad
loop
mov
aam
sti
xor
add
lods
(bad)
popf
in
in
je
and
adc
fistp
aaa
test
rcl
in
add
sbb
aaa
pop
cmp
aaa
sar
adc
push
mov
aaa
daa
movs
adc
adc
movs
push
dec
pop
cmps
adc
loopne
aad
xor
add
push
push
popa
les
jo
dec
inc
pop
lds
pop
(bad)
pop
inc
inc
aam
or
push
inc
aad
aas
inc
div
push
in
mov
test
push
in
lsl
push
addr16
imul
ins
push
rcl
mov
add
mov
inc
mov
adc
cmc
mov
and
jo
inc
out
xchg
and
and
into
xor
loopne
lods
inc
mov
lds
inc
sti
(bad)
(bad)
push
mov
aad
push
pushf
mov
les
rol
jecxz
fisub
out
je
and
adc
call
adc
add
cmp
adc
sbb
pop
adc
cmp
movs
cs
lds
and
and
pop
loopne
aad
xor
ds
jl
jae
daa
nop
imul
das
pop
(bad)
jb
push
aam
and
dec
push
jp
inc
aas
push
test
in
mov
test
pop
in
cmovs
inc
addr16
hlt
adc
or
push
mov
push
mul
test
add
mov
inc
stos
jne
xchg
mov
mov
stos
inc
mov
fsub
test
xchg
push
call
push
iret
xlat
mov
lods
adc
and
lahf
scas
fadd
(bad)
stc
push
mov
aad
push
ret
mov
shl
lds
mov
retf
out
je
and
adc
aad
(bad)
xchg
xor
ins
test
and
adc
and
or
adc
ss
aaa
shld
cmp
or
inc
mov
loopne
aad
xor
aas
(bad)
push
nop
dec
movs
adc
and
dec
das
aas
(bad)
jne
jae
dec
or
push
inc
aad
aas
push
div
or
or
jne
js
sbb
bound
dec
out
addr16
adc
push
cmc
js
inc
push
test
xchg
push
mov
int
mov
int3
out
xchg
movs
xchg
fwait
xchg
adc
mov
and
jo
inc
out
fisub
xchg
cmps
mov
xchg
pusha
xchg
push
test
fwait
push
into
xlat
repz
loope
repz
in
scas
mov
push
int
call
push
(bad)
mov
shl
add
enter
into
out
je
and
adc
rcr
test
and
xor
or
push
rcl
sbb
jg
mov
aaa
and
lds
and
sbb
popa
daa
pop
mov
loopne
aad
xor
sbb
dec
push
les
pusha
movs
or
lds
cmp
aam
sub
push
and
inc
aas
jne
inc
ja
in
mov
test
imul
arpl
hlt
inc
mov
adc
pop
pop
outs
push
(bad)
xchg
mov
in
push
xchg
gs
test
push
nop
xchg
jne
xchg
mov
mov
mov
scas
movs
test
mov
cmps
xchg
pusha
rcl
iret
xor
loopne
cld
inc
int
retf
and
xchg
scas
mov
push
leave
add
xor
sar
fs
loope
lock
gs
out
je
and
adc
ficomp
sub
sbb
xor
push
add
sub
imul
cmc
sbb
ds
aaa
adc
cs
lds
dec
and
adc
and
or
adc
arpl
les
nop
dec
movs
je
cmp
fs
inc
(bad)
ja
das
aam
add
push
je
inc
aas
push
test
in
mov
test
sbb
arpl
inc
out
addr16
hlt
pop
mov
dec
cmc
pop
pop
push
add
push
xchg
gs
test
add
mov
inc
mov
adc
icebp
mov
and
jo
inc
mov
fbld
xchg
cmps
cmps
xor
pusha
xchg
push
sahf
mov
xor
jecxz
out
inc
in
adc
and
sahf
scas
out
icebp
(bad)
mov
xor
fistp
shl
lds
dec
in
loop
popf
adc
repnz
retf
xchg
xor
or
add
and
or
adc
adc
pop
lock
cmp
sbb
add
sbb
mov
pop
aas
(bad)
push
nop
movs
dec
inc
lds
pop
mov
push
aam
sbb
push
jle
dec
aas
jnp
push
mov
test
jno
sysretw
out
addr16
dec
mov
pop
cmc
inc
pop
push
push
fist
cmc
mov
mov
cdq
xchg
jne
xchg
scas
adc
stos
mov
and
jo
inc
test
iret
scas
es
scas
xor
pusha
xchg
push
sti
mov
xor
enter
lods
adc
and
xchg
scas
mov
push
fld
mov
push
(bad)
mov
into
xlat
xor
add
in
jmp
je
and
adc
out
lds
pusha
shl
in
add
jp
adc
daa
xchg
or
cmp
sbb
jg
mov
aaa
adc
and
sbb
or
dec
aad
xor
dec
(bad)
push
push
popa
les
inc
jb
push
das
dec
(bad)
arpl
aam
add
push
pop
aad
aas
push
idiv
pop
in
mov
test
jg
pop
nop
jno
push
hlt
dec
mov
adc
bound
jle
mov
add
icebp
lods
test
add
iret
xchg
jne
xchg
cdq
adc
mov
jo
inc
cwde
movs
xchg
and
xchg
cmps
fnstenv
pusha
xchg
push
mov
fistp
inc
mov
(bad)
retf
inc
sti
(bad)
cli
push
repnz
push
ret
jbe
idiv
shl
iret
add
loop
aad
(bad)
fdiv
rcl
lahf
(bad)
xchg
adc
sub
ins
rcl
in
add
and
imul
cmc
pop
adc
xor
xor
and
push
cmps
sbb
sbb
xor
sbb
pop
push
imul
dec
inc
jge
or
imul
inc
js
push
push
arpl
jl
push
not
in
mov
test
in
(bad)
out
outs
hlt
inc
mov
je
pop
pop
push
add
push
xchg
xchg
test
mov
inc
mov
adc
movs
mov
and
jo
inc
nop
movs
fbld
loop
cdq
xor
pusha
cdq
push
mov
mov
push
out
xlat
out
inc
lods
adc
and
mov
lock
repnz
push
lds
shl
enter
shl
(bad)
out
data16
fbstp
popf
adc
fcomp
jno
jnp
adc
cmp
or
je
pop
cmc
inc
adc
cmp
movs
adc
sbb
(bad)
add
adc
add
add
add
daa
xor
sub
inc
push
jb
jne
jbe
push
inc
jno
push
das
pusha
(bad)
jae
jl
or
push
arpl
dec
aas
pop
neg
adc
jl
popa
test
pop
in
unpckhps
and
jl
push
mov
inc
cmc
inc
pop
pop
push
mov
and
in
xlat
out
mov
adc
inc
mov
adc
xor
inc
out
xchg
lods
cmps
lods
xor
pusha
mov
mov
test
xlat
mov
sti
adc
and
(bad)
scas
mov
push
int
call
push
cli
mov
shl
add
repnz
out
je
and
adc
rcr
test
ror
in
add
add
das
rcr
sbb
jg
mov
aaa
adc
and
sbb
sub
or
or
sbb
ins
push
imul
nop
dec
movs
dec
inc
pop
lds
cmp
push
inc
outs
aam
add
push
dec
aad
aas
push
mul
push
in
mov
test
jno
pop
sysret
out
addr16
hlt
sbb
bound
pop
pop
imul
xchg
mov
loopne
xchg
mov
fwait
push
mov
inc
mov
adc
scas
mov
and
jo
inc
mov
(bad)
mov
xchg
mov
xor
icebp
xlat
fiadd
into
and
xchg
scas
out
inc
mov
xor
ret
jbe
not
add
ror
xor
jmp
pop
jle
push
shl
dec
add
daa
xchg
pop
es
adc
sbb
xchg
cmp
mov
aaa
or
sub
and
add
pop
loopne
aad
xor
push
(bad)
je
jne
pop
nop
inc
movs
dec
inc
js
inc
das
aas
(bad)
fs
outs
aam
xor
push
popa
aad
aas
push
idiv
push
push
mov
test
pop
in
cmovs
jne
fs
inc
mov
or
push
lods
xchg
mov
gs
test
add
scas
xchg
jne
xchg
nop
adc
lea
stos
inc
out
fbld
xchg
cmps
xor
mov
push
loopne
out
inc
mov
lds
inc
fld
fist
movs
xor
les
leave
fidiv
iret
add
loope
cli
out
fbstp
jmp
lahf
lea
pop
rcl
in
add
xchg
rcr
pop
adc
xor
aas
lock
cmp
sbb
push
loopne
aad
xor
or
les
nop
inc
movs
or
lds
jp
jns
dec
aam
add
dec
aad
aas
dec
neg
in
mov
test
gs
in
nop
push
addr16
push
push
xchg
push
jne
cmc
inc
pop
push
push
fist
cmc
mov
test
popf
xchg
adc
mov
inc
popf
movs
fbld
mov
pusha
xchg
push
xchg
mov
xor
in
aad
cmps
adc
and
into
scas
loope
inc
(bad)
push
jmp
icebp
xor
sti
mov
retf
xor
add
leave
pop
out
(bad)
cmc
adc
fcomp
imul
outs
jl
and
ds
or
cmp
sbb
sbb
inc
lock
xor
pop
movs
and
cmps
aaa
daa
cmp
xor
sbb
les
nop
jo
dec
inc
dec
lds
dec
mov
aam
or
push
sub
sbb
dec
not
push
in
mov
test
inc
in
unpcklps
jg
push
hlt
push
mov
or
bound
outs
push
adc
rol
fwait
push
mov
inc
loop
rcl
mov
nop
inc
mov
fbld
mov
xchg
push
cli
mov
xor
mov
mov
mov
(bad)
retf
scas
mov
push
lock
push
les
jecxz
fbstp
retf
in
gs
shl
(bad)
je
and
adc
ficomp
sub
aas
shr
in
add
jne
adc
and
cmc
sbb
ds
aaa
and
and
sub
pop
loopne
aad
xor
es
jl
popa
les
jae
dec
inc
pop
lds
mov
aam
xor
push
(bad)
aad
aas
push
imul
dec
in
mov
test
in
punpcklbw
jg
inc
hlt
push
mov
pmaddwd
ins
push
lods
xchg
test
gs
test
push
mov
inc
mov
adc
pushf
mov
and
jo
inc
lods
movs
xchg
and
xchg
cmps
cmps
xor
pusha
xchg
push
cdq
mov
xor
not
mov
and
call
(bad)
std
push
iret
add
xor
loopne
in
jbe
test
add
fimul
fbstp
jmp
lahf
mov
shl
push
add
and
sbb
adc
ds
aaa
and
and
and
adc
inc
aad
xor
adc
les
outs
movs
jo
jb
adc
push
(bad)
addr16
jno
dec
xor
push
arpl
pop
aas
dec
neg
dec
in
mov
test
dec
in
sysret
out
addr16
hlt
jge
jl
inc
jne
cmc
pop
pop
pop
push
xchg
xchg
scas
add
push
mov
test
add
lods
xchg
adc
mov
inc
out
pushf
and
xchg
cmps
call
mov
xor
cld
xlat
mov
mov
lds
inc
inc
fist
mov
push
fdivr
shl
add
loop
retf
out
je
and
adc
rcr
sub
add
and
or
adc
cmp
push
mov
aaa
adc
and
sbb
es
and
or
sbb
aaa
xor
push
(bad)
ins
push
jae
inc
nop
jo
pop
inc
lds
pop
mov
aam
cmp
push
jb
data16
push
test
in
mov
test
gs
dec
lsl
pop
addr16
outs
mov
or
pop
pop
push
push
adc
cmps
test
add
mov
inc
xchg
jne
xchg
mov
movs
mov
and
jo
inc
out
movs
mov
and
ret
fbstp
inc
cmps
adc
and
xchg
scas
out
repz
std
push
ret
add
xor
test
jmp
in
ror
les
rcl
lahf
test
ror
in
add
cmp
or
and
pop
adc
push
mov
aaa
adc
sub
and
or
add
sbb
and
adc
jg
les
nop
ins
movs
push
das
daa
(bad)
addr16
fs
add
push
push
not
dec
in
mov
test
in
nop
outs
addr16
hlt
je
sbb
pop
pop
outs
push
lods
xchg
xchg
add
push
mul
test
popf
xchg
jne
xchg
mov
ss
mov
and
jo
inc
sahf
movs
fbld
xchg
cmps
xor
retf
mov
xor
rcl
lds
fsub
imul
aad
aam
mov
push
(bad)
mov
leave
shl
repz
repz
out
je
and
adc
in
les
xor
and
adc
outs
daa
xchg
pop
cmp
adc
sbb
pop
lock
or
sbb
adc
inc
aad
xor
sub
inc
push
dec
les
nop
imul
das
jp
jae
js
dec
add
push
arpl
pop
aas
push
neg
push
in
mov
test
adc
push
sbb
push
addr16
hlt
sbb
pop
xchg
ss
cmc
addr16
js
test
mov
in
push
mov
add
xchg
mov
adc
mov
mov
call
and
mov
mov
xlat
in
inc
ficom
fsub
(bad)
movs
push
ret
add
xor
(bad)
mov
into
test
jmp
(bad)
out
je
and
adc
fcomp
and
in
add
cmp
or
sub
cmp
or
add
sbb
xor
cmp
adc
loopne
aad
xor
or
dec
push
jle
sub
jae
or
lds
das
fs
arpl
aam
xor
push
das
aad
aas
inc
test
in
mov
test
ins
in
nop
push
addr16
push
mov
inc
cmc
pop
pop
pushw
mov
push
mov
add
mov
xchg
adc
inc
mov
adc
hlt
mov
and
jo
inc
pushf
movs
xchg
and
and
mov
pushf
fbstp
inc
mov
(bad)
(bad)
scas
mov
push
leave
add
xor
ret
jbe
test
add
out
retf
out
je
and
adc
in
lahf
retf
xchg
xor
add
add
and
pop
pop
sbb
or
add
inc
adc
cmp
movs
xor
and
and
adc
ds
xor
es
jl
les
nop
jae
push
inc
(bad)
lds
pop
(bad)
je
and
imul
aad
aas
xor
xor
mov
test
gs
in
andnps
dec
addr16
hlt
imul
ins
push
mov
xchg
gs
test
push
mov
inc
loope
test
call
and
jo
inc
mov
test
mov
pusha
xchg
push
sti
mov
xor
rcl
lds
shl
fisubr
(bad)
push
rol
shl
sar
fs
out
add
fisttp
int3
je
and
adc
rcr
test
shl
add
and
push
rcr
inc
adc
gs
aaa
or
and
add
fs
add
xor
push
(bad)
dec
push
dec
les
nop
outs
movs
or
das
dec
(bad)
jnp
jg
push
add
push
das
aad
aas
ins
mul
dec
in
mov
test
pop
in
cvtps2pd
push
addr16
hlt
sbb
jne
cmc
pop
pop
push
mov
xchg
mov
mov
xchg
xchg
jne
xchg
mov
sar
mov
stos
inc
popf
movs
shl
xchg
cmps
sahf
xor
pusha
mov
xor
into
xlat
rol
repz
mov
out
push
mov
rcl
mov
into
shl
lds
repnz
xchg
data16
out
je
and
adc
fistp
aaa
test
add
test
outs
and
daa
rcl
and
jg
mov
aaa
pop
movs
and
pop
lds
add
mov
loopne
aad
xor
adc
inc
push
outs
les
movs
pop
inc
xor
inc
das
pop
(bad)
outs
inc
addr16
or
push
das
aad
aas
test
in
mov
test
in
packsswb
push
addr16
hlt
dec
mov
or
inc
pop
inc
push
xchg
xchg
add
test
push
les
mov
fcom
nop
mov
mov
cdq
movs
mov
and
mov
pushf
fistp
inc
mov
lds
inc
(bad)
push
inc
mov
push
fidivr
(bad)
shl
iret
add
ror
into
je
and
adc
clc
lahf
(bad)
xchg
add
rcl
push
outs
daa
xchg
rcr
add
jg
mov
aaa
adc
pop
lock
lds
and
or
mov
loopne
aad
xor
push
(bad)
addr16
imul
push
inc
cmp
push
das
dec
(bad)
ja
cmp
arpl
dec
aad
aas
push
imul
dec
in
mov
test
in
punpckldq
inc
outs
hlt
push
mov
inc
cmc
pop
pop
jae
mov
push
mov
add
movs
xchg
jne
xchg
mov
movs
mov
and
jo
inc
sahf
movs
mov
es
pusha
mov
xor
in
out
inc
mov
lds
inc
aad
in
repz
xor
fidivr
leave
fs
xor
ror
cdq
je
and
adc
fcomp
xor
jg
add
xor
jl
or
xchg
pop
and
or
adc
imul
lock
movs
pop
dec
and
add
pop
aad
xor
adc
inc
push
jbe
sub
imul
jae
cmp
mov
push
sub
inc
aas
pop
div
mov
test
push
in
cmovge
push
addr16
hlt
jae
jg
aaa
jne
cmc
pop
pop
ins
push
mov
push
sti
mov
popf
push
xchg
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
pushf
and
cdq
cmps
sahf
xor
pusha
xchg
push
movs
mov
xor
lock
test
les
scas
mov
push
int
mov
push
(bad)
mov
retf
xor
add
enter
std
out
je
and
adc
rcr
sub
in
add
push
xchg
shl
jg
mov
aaa
push
movs
adc
push
lds
add
or
inc
aad
xor
push
(bad)
push
imul
dec
inc
jb
adc
inc
push
aam
add
push
das
aad
aas
imul
ja
in
mov
test
pop
in
unpckhps
pop
addr16
hlt
push
mov
inc
cmc
popw
movhps
push
mov
pushf
test
add
mov
inc
mov
adc
icebp
mov
and
jo
inc
mov
fsub
mov
rcl
xor
mov
korw
scas
enter
std
push
std
add
push
lock
aam
shl
int
cld
in
gs
stc
data16
out
je
and
fstp
sub
ins
shl
in
add
add
adc
adc
xchg
push
jg
mov
aaa
and
and
and
or
cmp
and
adc
jg
imul
dec
inc
dec
lds
pop
(bad)
gs
and
push
adc
push
das
aad
aas
outs
test
in
mov
test
inc
in
sysret
out
addr16
hlt
push
mov
or
push
movs
xchg
test
xchg
lea
xchg
sahf
jne
xchg
mov
(bad)
push
and
jo
inc
mov
iret
(bad)
es
cmps
test
mov
xor
rcl
inc
lods
adc
and
xchg
scas
hlt
inc
add
push
ret
xor
in
in
jbe
imul
fs
xor
add
repz
fwait
shl
fbstp
adc
lahf
out
xchg
ds
ja
add
and
push
add
jle
ds
sbb
cmc
add
xor
ss
shld
lds
and
pop
cmps
adc
es
loopne
aad
xor
add
les
ins
movs
dec
inc
popa
lds
das
inc
(bad)
jae
jg
bound
and
inc
aas
aaa
not
jb
add
pop
in
cmova
push
addr16
hlt
jge
jg
dec
jne
cmc
pop
pop
jp
xchg
xchg
mov
push
mov
mov
mov
xchg
xchg
jne
xchg
in
adc
sahf
mov
and
jo
inc
xchg
movs
pushf
and
xchg
cmps
xor
fst
mov
xor
aam
test
mov
inc
inc
out
fld
loope
sti
aad
push
sar
in
xchg
enter
retf
(bad)
out
je
and
adc
fstp
push
test
rcl
in
add
sbb
and
or
sbb
jg
mov
aaa
push
movs
adc
push
lds
and
sbb
sub
dec
aad
xor
push
(bad)
ins
push
dec
les
pusha
movs
pop
inc
lds
pop
(bad)
popa
inc
inc
aam
add
das
aad
aas
jge
inc
ja
in
mov
test
gs
in
(bad)
out
addr16
hlt
jae
push
xchg
jg
dec
cmc
fs
outs
push
test
hlt
gs
add
mov
inc
movs
jne
xchg
mov
mov
mov
mov
mov
xor
pusha
cmps
push
mov
fild
inc
lds
mov
inc
in
mov
push
leave
add
push
ret
mov
shl
retf
add
in
iret
data16
cli
je
and
adc
ficomp
pop
test
shl
or
xchg
rcl
push
jg
mov
aaa
push
movs
adc
and
aas
cmps
cmp
loopne
aad
xor
dec
(bad)
push
push
les
nop
dec
movs
pop
inc
pop
lds
das
push
(bad)
jns
fs
and
sbb
aad
aas
push
test
in
mov
test
in
unpckhps
push
addr16
hlt
push
mov
js
pop
pop
jle
xchg
xchg
test
test
push
test
mov
adc
mov
mov
scas
movs
frstor
xchg
cmps
popf
xor
pusha
xchg
push
test
mov
push
rcl
out
inc
lods
adc
and
xchg
scas
mov
push
enter
ret
push
(bad)
mov
in
xor
add
fisttp
fbstp
cld
adc
out
out
xchg
xor
jno
or
and
and
outs
xchg
rcl
jg
mov
aaa
shld
push
lds
and
sbb
xor
dec
aad
xor
add
inc
push
jbe
bound
ins
lds
das
aas
(bad)
ja
arpl
dec
and
push
push
aad
aas
push
imul
push
in
mov
test
push
in
cmovns
push
addr16
hlt
jno
inc
xchg
ss
cmc
addr16
ins
push
test
repnz
push
scas
xchg
jne
xchg
in
adc
xor
inc
mov
iret
call
pusha
xchg
push
xchg
test
inc
mov
lds
inc
cld
(bad)
rcl
cmc
xor
sar
ret
xor
add
loop
int
out
(bad)
je
and
adc
fcomp
sub
add
jp
aaa
pop
ds
and
adc
push
mov
aaa
xor
lds
and
and
sub
xor
sub
push
push
push
sub
jb
dec
inc
jb
or
pop
(bad)
ja
addr16
xor
push
and
pop
aas
dec
test
in
mov
test
push
in
lsl
push
outs
hlt
push
mov
inc
cmc
pop
pop
dec
push
mov
push
mov
add
mov
xchg
xchg
adc
xchg
jo
inc
scas
movs
xchg
and
and
lods
xor
rcl
hlt
inc
mov
korb
scas
aam
repnz
int3
push
loope
retf
xor
jecxz
jmp
xor
add
lock
fisub
out
je
and
adc
out
(bad)
xchg
dec
pop
cmp
ins
shl
in
add
jne
daa
pop
and
and
sbb
xor
jg
mov
aaa
push
movs
sub
and
pop
cmps
sbb
sbb
xor
sbb
dec
push
jbe
inc
nop
dec
movs
dec
inc
dec
lds
dec
(bad)
jle
pop
aam
add
jp
inc
aas
push
idiv
in
mov
test
in
movd
inc
addr16
hlt
popa
mov
adc
jns
outs
push
lods
xchg
xchg
add
push
mov
xchg
test
push
cdq
xchg
jne
xchg
cwde
adc
sahf
mov
and
jo
inc
lods
movs
fisub
nop
cmps
mov
mov
push
cli
mov
xor
in
loop
out
into
and
ret
inc
ffreep
fst
(bad)
xor
(bad)
mov
jmp
out
xor
add
(bad)
(bad)
out
fucom
(bad)
xchg
aad
into
xchg
xor
and
add
and
push
rcl
pop
adc
push
mov
aaa
dec
movs
and
push
lds
and
sbb
adc
pop
aad
xor
sbb
les
ins
movs
adc
cmp
gs
push
(bad)
jno
jg
dec
add
push
arpl
inc
aas
jo
pop
ja
in
mov
test
jp
lsl
cmp
mov
imul
pop
push
mov
push
mov
xchg
test
push
scas
xchg
jne
xchg
in
adc
xchg
xchg
movs
pushf
and
xchg
cmps
xchg
xor
pusha
mov
cld
mov
xor
ret
inc
movs
adc
and
in
out
inc
fcmovnb
mov
xor
(bad)
mov
in
shl
iret
add
aad
clc
mul
ret
je
and
adc
fstp
aaa
test
rcl
in
add
and
aaa
rcr
and
add
movs
adc
push
lds
and
pop
cmps
push
daa
add
xor
adc
dec
push
outs
les
je
push
inc
jb
or
pusha
(bad)
push
inc
gs
or
push
cs
aas
imul
ja
in
mov
test
add
xor
add
and
hlt
push
mov
jp
inc
pop
outs
push
xchg
xchg
inc
push
mov
mov
mov
xchg
xchg
jne
xchg
mov
mov
mov
mov
pushf
and
mov
xchg
push
stc
mov
xor
call
adc
and
aam
mov
push
iret
add
xor
ret
jbe
not
fs
fild
out
leave
mov
je
and
adc
rcr
pop
test
shl
in
add
push
xchg
pop
xor
xor
adc
xchg
xor
aaa
adc
cmp
or
addr16
sbb
pop
loopne
aad
xor
adc
or
les
nop
dec
movs
push
inc
cmp
adc
dec
(bad)
jg
fs
add
push
sub
dec
aas
push
idiv
ja
in
mov
test
pop
in
(bad)
out
addr16
hlt
ins
mov
pop
cmc
pop
pop
ins
push
stos
xchg
lock
push
test
xchg
lea
xchg
xchg
jne
xchg
mov
movs
mov
and
jo
inc
lods
movs
fwait
and
scas
cmps
cdq
xor
pusha
fwait
push
sti
mov
xor
retf
inc
lods
adc
and
(bad)
scas
mov
push
aam
shl
mov
aad
in
xor
add
hlt
(bad)
stc
mul
xchg
fst
out
int3
xchg
xor
ja
arpl
and
cs
or
or
adc
xor
sbb
and
add
or
inc
aad
xor
sbb
pusha
push
jbe
and
jno
jae
jp
jae
cmp
pop
or
push
arpl
inc
aas
push
mul
in
mov
test
inc
in
sysret
out
addr16
hlt
push
mov
js
pop
pop
outs
push
mov
push
test
test
push
lods
xchg
adc
inc
mov
adc
mov
jo
inc
stos
movs
xchg
and
sahf
cmps
xchg
xor
pusha
rcl
call
xlat
lock
lods
adc
and
xchg
scas
cmps
inc
inc
out
retf
add
push
sar
shl
nop
add
les
int3
je
and
adc
fcomp
aaa
test
push
in
add
xchg
pop
cmp
adc
sub
movs
adc
dec
lds
and
and
xor
push
(bad)
outs
push
inc
les
inc
outs
lds
das
pop
(bad)
popa
inc
push
aam
add
push
das
aad
aas
sub
inc
ja
in
mov
test
push
in
punpckhbw
push
addr16
hlt
dec
mov
arpl
pop
pop
inc
push
mov
mov
gs
test
add
mov
inc
mov
adc
test
xchg
movs
xchg
and
fwait
cmps
xchg
pusha
movs
push
mov
fistp
inc
mov
lds
inc
cmc
(bad)
aam
loope
clc
xor
(bad)
mov
in
lds
xchg
add
retf
data16
out
aam
not
fstp
das
test
rcl
in
add
xchg
pop
es
adc
aas
cmc
sbb
cmp
movs
inc
lock
movs
sbb
daa
sbb
push
loopne
aad
xor
adc
adc
les
nop
arpl
dec
das
ds
jb
and
pop
add
dec
aad
aas
pop
test
in
mov
test
in
unpckhps
inc
addr16
je
jge
inc
jne
cmc
inc
pop
pushw
test
lahf
add
push
sti
xchg
test
pop
mov
adc
mov
fwait
inc
test
iret
cdq
es
pusha
xchg
push
cdq
mov
xor
rcl
cld
inc
lods
adc
and
xchg
scas
ret
(bad)
out
out
add
xor
cld
mov
out
(bad)
fiadd
aad
ret
out
je
and
adc
fcomp
cmp
and
and
sub
cmp
or
adc
cmp
movs
adc
push
lds
and
and
or
inc
aad
xor
adc
les
movs
adc
lds
das
pop
(bad)
addr16
jg
dec
add
push
arpl
inc
aas
push
neg
push
in
mov
test
inc
in
andps
and
inc
hlt
push
mov
ja
jae
outs
push
mov
hlt
gs
out
add
xchg
test
fwait
ss
mov
and
jo
inc
jmp
es
pushf
xor
pusha
xchg
push
stos
mov
xor
in
xlat
iret
inc
mov
(bad)
xchg
scas
mov
push
aam
mov
push
cmp
xlat
xor
add
repnz
out
je
and
adc
lds
push
test
sbb
push
add
arpl
push
sar
adc
push
mov
aaa
adc
and
inc
cmps
daa
daa
add
xor
adc
les
ja
jbe
jb
adc
inc
arpl
dec
sbb
push
das
aad
aas
push
test
in
mov
test
js
pop
lsl
ja
push
hlt
push
mov
pop
cmc
inc
pop
inc
push
test
push
mov
test
push
cmps
xchg
jne
xchg
cdq
adc
xor
inc
mov
xchg
and
and
xchg
xor
loopne
into
inc
loop
retf
and
retf
scas
hlt
inc
xlat
(bad)
aam
jmp
push
repnz
icebp
fs
xor
add
mov
leave
mov
je
and
adc
fcomp
xor
add
add
add
es
push
sar
sbb
push
push
aaa
adc
and
cmp
sbb
xor
aad
xor
adc
pop
push
dec
les
movs
pop
inc
cmp
dec
das
inc
(bad)
ja
jle
dec
adc
push
and
inc
aas
push
div
push
push
mov
test
gs
in
lsl
inc
addr16
hlt
jb
jge
jnp
pop
cmc
pop
pop
push
add
push
lock
test
push
mov
inc
mov
adc
cmps
mov
and
jo
inc
cmps
movs
mov
cmps
iret
frstor
xchg
cmps
cdq
xor
pusha
movs
push
xchg
mov
xor
in
call
and
call
(bad)
fist
mov
push
(bad)
mov
leave
shl
cli
add
out
(bad)
cld
data16
out
iret
and
adc
(bad)
lahf
xchg
xchg
or
xor
ins
rcl
in
add
or
xor
cmp
push
adc
cmp
movs
adc
xor
sbb
and
adc
adc
daa
xor
adc
les
jb
jns
dec
lds
(bad)
jae
jb
cmp
dec
mov
push
cs
aas
push
test
in
mov
test
in
punpckhwd
push
addr16
hlt
jl
inc
xchg
ss
cmc
pop
pop
push
add
push
cli
gs
mov
enter
scas
xchg
jne
xchg
mov
ss
xchg
and
jo
inc
lods
movs
pushf
and
cwde
cmps
fwait
xor
pusha
xchg
push
movs
mov
xor
hlt
xlat
test
and
(bad)
scas
mov
push
enter
vpsrad
mov
fisub
retf
in
lods
(bad)
aam
mov
and
adc
repnz
lds
pusha
shl
in
add
add
sbb
adc
add
movs
add
sbb
xor
pop
movs
or
and
sub
xor
adc
les
imul
das
inc
(bad)
arpl
aam
add
push
jae
inc
aas
push
test
in
mov
test
in
movq
pop
addr16
hlt
outs
mov
add
cmp
outs
push
test
xchg
add
push
mov
add
iret
xchg
jne
xchg
mov
mov
mov
scas
movs
xchg
and
mov
mov
push
mov
fist
inc
cmc
adc
and
fild
fcom
in
in
loope
fidivr
aad
in
xor
add
loope
shl
xchg
rcl
lahf
retf
xchg
push
pop
cmp
jnp
adc
test
outs
or
and
adc
xchg
cmp
cmp
pop
lock
adc
adc
sbb
sbb
xor
pop
(bad)
push
push
push
les
jae
jp
jno
push
das
mov
cmp
pop
mov
push
popa
aad
aas
sub
in
mov
test
pop
in
cmovs
dec
addr16
hlt
inc
mov
dec
cmc
pop
pop
push
add
push
mov
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
xchg
cdq
es
cmps
pushf
xor
pusha
xchg
push
movs
mov
xor
int
out
inc
lods
adc
inc
(bad)
scas
fiadd
mov
xor
lds
leave
fs
xor
add
repz
out
je
and
adc
(bad)
lahf
les
popa
rcr
in
add
and
xchg
add
es
pop
adc
sbb
and
lds
and
xor
pop
daa
add
xor
sbb
les
ins
movs
dec
inc
jae
adc
pop
(bad)
jo
inc
aam
or
push
ins
aad
aas
push
neg
adc
push
mov
test
in
movq
cmp
hlt
adc
adc
pop
pop
fs
mov
push
mov
add
mov
inc
mov
adc
test
xchg
and
jo
inc
out
cwde
and
loopne
sahf
xor
pusha
sahf
push
mov
fild
inc
repnz
and
nop
scas
std
inc
repz
out
xlat
add
xor
icebp
mov
lahf
shl
mov
(bad)
in
(bad)
(bad)
je
and
adc
fcomp
aaa
test
add
push
add
and
or
sbb
cmp
ds
aaa
and
and
cmp
mov
loopne
aad
xor
pop
(bad)
ins
push
outs
les
push
lds
pop
(bad)
bound
aam
sbb
push
ins
aad
aas
push
imul
push
in
mov
test
gs
in
nop
jo
pop
hlt
push
mov
push
cmc
pop
pop
outs
push
adc
mov
fwait
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
les
mov
xchg
push
mov
mov
in
hlt
inc
mov
lds
inc
clc
(bad)
icebp
push
leave
add
push
loope
jmp
xor
add
lds
in
je
and
adc
mov
pop
cmp
sbb
add
js
sbb
xor
cmc
sbb
cmp
movs
inc
lock
push
and
cmps
sbb
sbb
pop
loopne
aad
xor
es
jl
imul
nop
jae
pop
inc
push
lds
das
pop
(bad)
push
inc
jp
inc
add
push
(bad)
aad
aas
push
div
in
mov
test
in
unpckhps
inc
addr16
ins
mov
pop
cmc
pop
pop
imul
xchg
test
gs
test
push
mov
inc
mov
adc
stos
mov
and
jo
inc
mov
popf
es
cmps
test
pusha
cmps
push
popf
mov
xor
rcl
inc
rcl
and
ret
inc
hlt
(bad)
fist
lds
(bad)
mov
out
fs
xor
gs
lahf
data16
xor
adc
fcomp
xor
sub
add
cmp
xchg
or
aas
cmc
inc
adc
adc
pop
lock
push
and
and
adc
dec
aad
xor
dec
(bad)
push
nop
ins
movs
adc
lds
push
(bad)
sbb
and
jnp
sub
push
ja
in
mov
test
pop
in
nop
inc
addr16
dec
mov
push
cmc
jb
jbe
test
mov
out
cmc
gs
out
pop
mov
inc
mov
adc
mov
jo
inc
test
mov
xor
pusha
fst
mov
xor
in
xlat
mov
lods
adc
and
xchg
scas
mov
push
into
add
xor
(bad)
mov
cmc
fs
add
ror
into
je
and
adc
fcomp
or
add
and
or
adc
xchg
add
aaa
adc
and
and
add
inc
aad
xor
sbb
pop
push
popa
les
push
movs
dec
inc
pop
lds
pop
(bad)
arpl
aam
adc
push
dec
aad
aas
jne
inc
ja
in
mov
test
add
xor
dec
out
addr16
hlt
push
mov
push
cmc
pop
pop
imul
mov
test
push
into
xchg
jne
xchg
hlt
adc
mov
leave
and
jo
inc
xchg
cwde
cmps
cmps
nop
xor
pusha
stos
push
mov
fistp
inc
mov
lds
inc
fld
call
mov
push
cmc
mov
les
retf
add
dec
cld
je
and
adc
fstp
sub
ins
shl
adc
jge
and
sar
das
jg
mov
aaa
or
and
cmp
pop
loopne
aad
xor
push
(bad)
jl
ins
les
jae
push
inc
cmp
ja
xor
push
inc
pusha
aam
add
push
jbe
inc
aas
push
div
ja
in
mov
test
sbb
bound
add
ja
add
push
mov
or
push
movs
xchg
repnz
push
mov
add
movs
xchg
cdq
xchg
mov
xchg
mov
and
jo
inc
mov
iret
movs
es
mov
lods
pusha
mov
xor
hlt
xlat
aad
loope
into
and
shr
in
retf
xor
lds
leave
shl
ret
add
int
cld
data16
ret
and
adc
(bad)
lahf
xchg
xchg
xor
aaa
test
add
and
or
adc
sub
cs
aaa
or
and
and
ds
aad
xor
or
push
push
jbe
inc
nop
jne
adc
dec
lds
je
push
inc
jg
push
cmp
sbb
push
imul
dec
in
mov
test
in
pcmpeqw
push
addr16
hlt
jno
addr16
ss
cmc
jg
js
test
push
mul
test
push
rol
jne
xchg
jecxz
xchg
inc
lods
jo
inc
mov
iret
(bad)
xchg
cmps
mov
pusha
xchg
push
mov
fistp
inc
loop
leave
and
xchg
scas
cmc
inc
cmc
(bad)
out
iret
add
xor
fnstcw
hlt
fs
xor
add
loop
leave
data16
out
je
and
adc
mov
pop
aaa
test
xor
test
add
xor
adc
and
adc
adc
and
sub
adc
xor
aaa
xor
push
(bad)
outs
push
push
les
jae
ins
inc
pop
lds
das
fs
push
inc
jns
push
add
push
dec
aad
aas
dec
test
in
mov
test
popa
in
lsl
gs
hlt
push
bound
pop
pop
outs
push
mov
repz
out
fwait
push
mov
inc
xchg
jne
xchg
in
adc
lea
mov
xchg
aad
mov
pusha
cmps
push
mov
fistp
inc
int
retf
and
mov
call
icebp
xor
pushf
mov
int3
shl
retf
in
fimul
les
fst
out
(bad)
xchg
dec
pop
pop
test
in
add
cmp
xchg
das
rcl
push
jg
mov
aaa
pop
movs
dec
lock
movs
sbb
daa
aas
mov
loopne
aad
xor
sbb
ja
inc
les
nop
jbe
inc
cmp
pop
das
jnp
ja
pusha
aam
add
push
dec
aad
aas
push
test
in
mov
test
gs
popa
(bad)
out
addr16
hlt
dec
mov
push
cmc
push
pop
outs
push
lods
xchg
mov
loopne
lock
test
xchg
mov
adc
xchg
mov
and
jo
inc
in
movs
pushf
and
mov
pusha
movs
push
xchg
mov
xor
in
out
inc
fst
into
and
lock
mov
push
jmp
push
fistp
xchg
fs
enter
shl
(bad)
fisub
out
je
and
adc
fstp
xor
cmp
or
push
add
sbb
or
adc
adc
and
sbb
and
and
cmps
add
add
adc
xor
aas
xor
dec
(bad)
push
nop
jne
adc
jno
push
das
push
(bad)
jle
push
aam
add
push
dec
aad
aas
dec
mul
push
in
mov
test
inc
in
sysret
out
addr16
hlt
inc
mov
pmaddwd
outs
push
xchg
xchg
mov
gs
mov
xchg
out
mov
adc
inc
mov
adc
mov
rol
movs
pushf
and
mov
les
pusha
xchg
push
cli
mov
xor
retf
xlat
lods
inc
(bad)
adc
and
xchg
scas
cmc
inc
out
(bad)
out
mov
mov
(bad)
mov
shl
enter
cli
gs
fucom
fdiv
(bad)
adc
fcomp
aaa
test
add
jnp
xor
add
or
pop
cmc
pop
adc
xor
adc
push
movs
cs
cmp
and
push
loopne
aad
xor
aas
(bad)
push
push
push
les
dec
movs
pop
inc
lds
push
add
aam
adc
push
das
aad
aas
aaa
test
in
mov
test
gs
in
unpcklps
cmp
mov
inc
cmc
inc
pop
jle
adc
gs
push
into
xchg
jne
xchg
mov
ret
push
ss
jo
inc
xchg
movs
xchg
and
and
mov
jecxz
retf
adc
and
jmp
in
mov
ret
aad
push
fidivr
in
fs
retf
add
out
loop
repz
je
and
adc
fstp
aaa
test
add
and
or
ss
pop
adc
sbb
dec
lock
xor
daa
cmps
and
sbb
push
loopne
aad
xor
adc
jg
xor
cmp
cmp
adc
push
(bad)
jnp
fs
and
sbb
aad
aas
push
test
in
mov
test
gs
pop
unpckhps
cmp
mov
or
push
lods
xchg
mov
mov
mul
test
push
scas
xchg
jne
xchg
mov
xchg
(bad)
jmp
and
jo
inc
call
es
cmps
cdq
xor
pusha
popf
push
cli
mov
xor
out
mov
not
leave
and
mov
iret
push
aam
mov
push
ret
mov
leave
fs
xor
add
test
les
loop
les
jnp
or
sub
and
xor
pusha
xchg
or
adc
adc
cs
sub
and
push
loopne
aad
xor
adc
les
nop
js
pop
inc
push
lds
dec
(bad)
jae
js
cmp
je
pop
push
pop
aad
aas
push
test
in
mov
test
in
cmovns
push
addr16
ins
mov
add
pop
pop
imul
xchg
scas
add
push
xchg
mov
mov
adc
inc
xchg
jne
xchg
lods
adc
sahf
mov
and
jo
inc
out
les
xchg
cmps
xor
nop
push
mov
(bad)
push
hlt
xlat
out
inc
mov
(bad)
loopne
in
inc
inc
in
ret
add
xor
in
mov
hlt
xlat
xor
add
ror
fdiv
xlat
adc
aad
ficom
pusha
shl
in
add
arpl
das
rol
inc
adc
ins
mov
aaa
adc
and
cmp
and
xor
aad
xor
sub
push
push
sub
movs
or
lds
pop
(bad)
pop
inc
pop
aam
cmp
push
and
pop
aas
push
test
in
mov
test
fs
lsl
inc
addr16
push
mov
jle
bound
outs
push
xchg
xchg
pushf
add
push
mov
mov
mov
rol
jne
xchg
mov
mov
mov
xchg
xchg
in
test
pusha
xchg
push
call
push
lock
mov
and
xchg
scas
mov
push
aam
(bad)
xor
lock
cld
fs
xor
add
out
cmc
data16
and
adc
call
sub
ins
rol
in
add
push
xchg
pop
pusha
xchg
or
adc
xchg
push
jg
mov
aaa
sub
and
cmp
push
daa
and
xor
adc
push
push
inc
les
nop
jae
adc
lds
das
imul
jle
inc
mov
push
inc
aad
aas
pop
div
mov
test
in
cmovbe
inc
addr16
hlt
dec
mov
or
popw
pop
push
lods
xchg
mov
xchg
push
xacquire
test
mov
inc
mov
adc
movs
mov
and
jo
inc
mov
and
test
push
mov
mov
push
into
xlat
call
and
shr
mov
xor
les
aad
lds
aad
stos
in
gs
retf
out
je
and
adc
fcomp
and
jnp
and
cmp
and
or
adc
sub
cmp
push
lds
and
cmp
xor
inc
mov
loopne
aad
xor
push
(bad)
push
push
xor
and
ins
lds
das
pop
(bad)
push
inc
jg
dec
sbb
push
arpl
jge
ins
neg
inc
in
mov
test
add
cs
hlt
dec
mov
inc
cmc
es
js
test
mov
push
mul
test
push
mov
movs
adc
inc
loopne
adc
fbld
movs
pushf
and
mov
pusha
rcl
into
xor
hlt
xlat
mov
loop
repz
(bad)
scas
mov
push
int
mov
push
(bad)
mov
retf
xor
gs
jmp
(bad)
je
and
adc
fcomp
aaa
test
add
and
or
adc
aaa
adc
sbb
inc
lock
movs
and
daa
aas
mov
loopne
aad
xor
adc
les
push
movs
pop
inc
jb
pop
das
js
arpl
aam
cmp
push
outs
aad
aas
push
test
in
mov
test
add
pop
lsl
popa
addr16
hlt
push
mov
inc
cmc
inc
pop
gs
xchg
xchg
mov
in
push
movs
gs
out
mov
adc
inc
mov
adc
xchg
mov
and
jo
inc
xchg
movs
xchg
and
and
mov
cmps
fistp
inc
lods
adc
and
retf
inc
sti
(bad)
lock
out
add
push
ret
jbe
not
shl
icebp
add
dec
test
aad
mov
lahf
mov
sub
and
adc
and
adc
adc
or
das
mov
aaa
pop
movs
inc
lock
imul
cmps
sbb
sbb
xor
adc
dec
push
imul
push
inc
jnp
adc
outs
(bad)
pop
inc
fs
xor
push
xor
jle
push
test
in
mov
test
in
(bad)
out
addr16
hlt
imul
cmc
and
outs
push
test
mul
test
add
fwait
xchg
lods
xchg
mov
ss
mov
and
jo
inc
stos
movs
stos
and
xchg
cmps
xor
xchg
xor
in
lds
in
and
shr
cmps
push
iret
add
xor
in
std
jbe
div
fs
xor
add
fisttp
in
shl
call
jne
lahf
int3
xchg
xor
pop
test
adc
test
outs
push
xchg
pop
and
adc
movzx
aaa
shld
pextrw
sub
push
cmps
pusha
daa
add
adc
pop
aad
xor
dec
(bad)
push
nop
ins
movs
dec
inc
dec
lds
das
push
aam
sbb
push
arpl
sbb
push
neg
adc
push
mov
test
gs
sysretw
out
addr16
hlt
dec
mov
pop
cmc
pop
pop
ins
push
xchg
xchg
xchg
add
push
xchg
gs
mov
mov
test
scas
xchg
jne
xchg
mov
sar
ss
mov
and
jo
inc
mov
pushf
and
fwait
cmps
sahf
xor
pusha
adc
mov
hlt
xlat
test
out
inc
in
stc
inc
inc
std
push
mov
mov
push
cmp
fs
xor
add
jmp
je
and
adc
(bad)
lahf
retf
xchg
and
aaa
test
sbb
push
add
xchg
pop
aas
xchg
jl
cmp
pop
adc
adc
adc
adc
and
inc
cmps
sbb
loopne
aad
xor
or
dec
push
popa
les
xor
dec
inc
and
adc
inc
inc
aam
cmp
push
push
aad
aas
inc
test
push
mov
test
gs
pop
cvtps2pd
pop
addr16
push
mov
outs
cmc
pop
pop
pop
push
adc
mov
test
ret
adc
inc
cmps
jne
xchg
mov
mov
cwde
inc
scas
movs
fwait
and
mov
pusha
xchg
push
mov
fist
inc
out
in
and
xlat
scas
mov
push
aam
les
in
clc
jbe
neg
shl
add
out
enter
les
not
aad
(bad)
xchg
and
or
add
xor
daa
pop
es
adc
pop
cmc
push
adc
cmp
movs
cs
lds
and
push
cmps
sbb
add
xor
dec
(bad)
inc
push
inc
les
xor
push
inc
imul
inc
inc
fs
adc
push
(bad)
aad
aas
jle
inc
ja
in
mov
test
in
punpckhdq
cmp
hlt
push
mov
or
push
lods
xchg
mov
movs
push
mul
test
push
xchg
xchg
test
mov
and
jo
inc
call
iret
and
xchg
pusha
adc
fisttp
inc
out
mov
rol
clc
inc
sahf
scas
loopne
rol
stc
push
retf
add
xor
(bad)
mov
xchg
fs
xor
add
mov
out
je
and
adc
cld
lahf
aam
xor
or
in
add
add
xchg
and
push
cmc
or
sbb
add
adc
pop
lock
xor
and
push
loopne
aad
xor
sbb
les
ins
movs
dec
inc
push
lds
pop
(bad)
pop
inc
push
aam
xor
push
sub
pop
aas
push
not
adc
test
jb
dec
cmovno
push
addr16
hlt
adc
push
cmc
addr16
outs
push
mov
mov
gs
mov
aad
mov
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
lock
mov
es
sahf
xor
pusha
mov
xor
(bad)
test
mov
loopne
mov
push
int
movs
xor
fnstcw
into
fs
enter
shl
(bad)
int
(bad)
(bad)
les
out
(bad)
xchg
sub
and
or
add
xchg
ds
or
cmp
sbb
jg
mov
aaa
pop
movs
cmp
add
das
and
or
mov
loopne
aad
xor
or
arpl
les
jo
jno
jb
or
js
arpl
aam
adc
push
cs
aas
push
imul
push
in
mov
test
push
in
cmovp
push
addr16
hlt
jno
inc
xchg
jge
adc
push
pop
dec
push
adc
gs
test
add
mov
mov
jne
xchg
test
movs
mov
and
jo
inc
stos
movs
xchg
and
and
xchg
xor
loope
loop
mov
(bad)
mov
call
fnstenv
out
mov
(bad)
shl
nop
add
mov
out
je
and
adc
fstp
pop
test
and
and
outs
cmp
xchg
or
adc
xchg
cmp
mov
aaa
sub
and
cmp
sbb
adc
sub
pop
aad
xor
sbb
dec
push
popa
les
dec
movs
push
inc
lds
jne
ja
arpl
pusha
sub
sbb
aad
aas
and
in
mov
test
pop
in
pcmpgtd
inc
addr16
xchg
ss
cmc
popw
inc
push
test
cmc
gs
mov
fsubrp
mov
cmps
xchg
test
xchg
movs
mov
and
jo
inc
mov
iret
and
cmps
cdq
xor
pusha
mov
cli
mov
xor
in
test
and
shr
push
enter
(bad)
aad
push
(bad)
mov
(bad)
fs
xor
add
jecxz
cld
data16
fbstp
retf
cmc
ret
jne
lahf
xchg
xchg
xor
xor
sub
add
jle
ds
bound
adc
add
jno
shld
lds
and
and
adc
pop
aad
xor
add
imul
movs
adc
lds
push
(bad)
ja
jns
dec
adc
push
arpl
push
aas
and
in
mov
test
pop
in
unpcklps
gs
hlt
push
mov
or
pusha
pop
or
test
cmc
add
push
cmc
gs
mov
ret
xchg
adc
lods
and
jo
inc
xchg
movs
pushf
and
xchg
cmps
sahf
xor
pusha
mov
mov
fist
mov
korb
scas
fild
(bad)
jecxz
out
(bad)
xor
std
mov
fisub
into
add
test
(bad)
adc
fcomp
adc
pusha
rcr
in
add
sub
adc
sbb
add
add
movs
adc
push
lds
and
or
add
daa
aad
xor
sub
ins
push
jle
inc
nop
jo
dec
inc
pop
lds
das
dec
(bad)
arpl
aam
add
push
and
push
aas
ins
test
in
mov
test
in
nop
push
addr16
hlt
inc
mov
pop
cmc
inc
pop
outs
push
test
push
hlt
gs
test
push
mov
inc
mov
adc
lahf
mov
and
jo
inc
mov
iret
cwde
es
cmps
xchg
pusha
mov
mov
fild
inc
mov
(bad)
iret
scas
loop
out
in
push
leave
add
push
ret
mov
cld
shl
leave
add
fisttp
cmc
je
and
adc
rcr
sub
jnp
adc
or
jp
aaa
pop
xor
adc
sub
movs
add
adc
movs
das
dec
or
pop
loopne
aad
xor
(bad)
pusha
push
imul
dec
inc
cmp
inc
das
ds
je
data16
add
push
sub
push
aas
jbe
dec
ja
in
mov
test
pop
in
(bad)
out
addr16
hlt
addr16
jl
pop
cmc
push
pop
outs
push
mov
mul
test
push
rol
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
pushf
and
popf
cmps
cmps
xor
pusha
movs
push
xchg
mov
xor
not
jmp
loopne
into
and
mov
stc
push
leave
add
xor
into
mov
shl
jecxz
stos
in
fisttp
icebp
je
and
jne
lahf
les
xor
sbb
sub
outs
cmp
sbb
xor
inc
adc
ds
aaa
or
pop
lock
lds
and
sbb
add
pop
aad
xor
aaa
(bad)
push
nop
jne
adc
inc
lds
push
(bad)
jne
je
dec
add
push
and
inc
aas
neg
push
in
mov
test
push
in
cmovns
push
addr16
inc
mov
jb
addr16
ins
push
(bad)
xchg
test
test
push
scas
xchg
jne
xchg
hlt
adc
lahf
mov
and
jo
inc
lods
movs
shl
xchg
cmps
mov
xchg
pusha
xchg
push
loopne
mov
push
cld
xlat
test
icebp
inc
(bad)
scas
fild
(bad)
aam
int
mov
push
fdivr
into
fs
add
loop
mul
out
je
and
adc
neg
daa
test
adc
dec
add
and
add
cmp
sbb
jg
mov
aaa
or
and
sub
or
pop
aad
xor
push
(bad)
ins
push
jb
and
inc
lds
(bad)
dec
inc
pop
aam
add
push
das
aad
aas
outs
test
in
mov
test
pop
in
unpckhps
inc
addr16
imul
push
push
adc
gs
test
push
xchg
xchg
jne
xchg
call
mov
mov
test
test
es
pusha
ret
mov
xor
jecxz
fiadd
retf
and
xchg
scas
in
in
mov
xor
ret
mov
(bad)
shl
nop
add
ror
ret
je
and
adc
fstp
sub
arpl
jno
xor
xor
daa
pop
and
adc
ds
aaa
push
movs
cs
es
push
cmps
sbb
inc
mov
loopne
aad
xor
xor
jl
imul
dec
inc
cmp
(bad)
je
and
inc
add
push
jp
jge
push
div
dec
in
mov
test
in
nop
inc
addr16
or
(bad)
cmc
pop
pop
pop
push
movs
xchg
test
gs
test
push
mov
mov
test
mov
dec
and
jo
inc
mov
(bad)
es
cmps
xchg
xor
pusha
mov
xor
jecxz
rol
(bad)
and
shr
movs
push
int3
add
xor
(bad)
mov
int3
shl
lds
fisttp
fbstp
fist
fstp
sub
add
or
sub
pop
cmc
pop
adc
or
daa
lock
and
sbb
adc
pop
aad
xor
adc
push
nop
jno
adc
inc
lds
push
mov
aam
xor
push
arpl
push
aas
neg
push
in
mov
test
in
sysret
out
addr16
hlt
push
mov
outs
cmc
pop
pop
imul
xchg
scas
add
push
mov
test
add
scas
xchg
jne
xchg
mov
mov
mov
xchg
movs
pushf
and
cdq
cmps
sahf
xor
pusha
ret
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
into
add
xor
in
fdiv
test
add
repnz
xchg
repnz
je
and
adc
fistp
xor
add
or
sub
cmp
push
adc
push
mov
aaa
dec
movs
adc
adc
movs
push
dec
pop
cmps
adc
pop
mov
loopne
aad
xor
push
(bad)
pusha
push
inc
les
imul
outs
inc
addr16
cmp
push
js
inc
aas
dec
div
in
mov
test
inc
in
unpckhps
push
addr16
hlt
dec
mov
inc
cmc
jb
inc
push
test
cmc
gs
test
add
popf
xchg
jne
xchg
xchg
adc
mov
and
movs
lea
xchg
cmps
xchg
xor
pusha
xchg
push
cmps
mov
xor
loopne
hlt
inc
fist
retf
and
cmc
scas
mov
push
leave
add
xor
(bad)
mov
lahf
fs
sti
add
loop
xchg
out
je
and
adc
fstp
sub
jg
and
adc
and
adc
adc
sbb
imul
lock
lds
adc
arpl
sbb
pop
loopne
aad
xor
adc
jl
push
les
jae
inc
inc
imul
push
inc
fs
adc
push
jo
pop
aas
pop
test
in
mov
test
jg
dec
unpckhps
das
addr16
push
mov
or
push
lea
mov
add
mov
inc
mov
adc
icebp
mov
and
jo
inc
test
and
cmps
cdq
xor
pusha
xchg
push
mov
fistp
inc
rcl
and
mov
stc
push
retf
add
push
sar
shl
lds
int
retf
out
je
and
adc
ficomp
xor
add
sub
push
add
and
rol
sub
jg
mov
aaa
shld
push
lds
and
and
sbb
xor
adc
les
ins
movs
pop
inc
pop
lds
das
data16
jae
jnp
adc
push
imul
aas
push
not
inc
in
mov
test
pop
in
movd
daa
pmuludq
mov
dec
cmc
pop
pop
imul
jecxz
mov
add
mov
inc
cdq
jne
xchg
mov
mov
cwde
inc
mov
mov
es
pusha
stos
push
xchg
stos
push
cld
xlat
test
std
inc
shr
push
out
(bad)
fistp
into
fdiv
retf
add
lods
(bad)
iret
repz
je
and
adc
rcr
aaa
test
and
dec
add
adc
xor
jge
or
sbb
sbb
or
adc
sbb
pop
and
and
pop
loopne
aad
xor
dec
(bad)
fs
popa
les
movs
dec
inc
xor
or
cmp
push
inc
gs
add
push
das
aad
aas
data16
in
mov
test
gs
gs
out
addr16
hlt
push
mov
inc
cmc
pop
pop
ins
push
lods
xchg
mov
push
mov
leave
test
add
mov
inc
mov
adc
stos
mov
and
jo
inc
stos
movs
mov
mov
cmps
xchg
pusha
mov
xor
jecxz
lods
inc
int
retf
and
xchg
scas
loope
sti
(bad)
icebp
push
(bad)
add
push
aam
in
jbe
test
add
out
retf
out
je
and
adc
aad
(bad)
xchg
ss
test
in
add
sbb
adc
adc
xchg
add
mov
aaa
adc
cs
lds
and
sub
adc
add
cmp
ds
jl
jle
cmp
push
lds
das
cmp
aam
and
aas
jns
dec
ja
in
mov
test
in
cmovs
inc
addr16
push
mov
pop
cmc
push
pop
push
add
push
icebp
gs
push
mov
inc
mov
adc
push
mov
movs
mov
cmps
iret
lahf
es
cmps
mov
push
cli
mov
xor
in
xlat
out
inc
loope
into
and
xchg
scas
retf
(bad)
in
call
aad
push
(bad)
mov
into
xor
add
mov
mul
out
je
and
adc
repnz
mov
jnp
and
push
add
jp
cmp
sbb
or
adc
push
add
or
and
sbb
ss
aad
xor
aas
(bad)
push
nop
ins
movs
dec
inc
pop
lds
das
dec
(bad)
jae
jg
dec
add
push
sub
js
push
div
ja
in
mov
test
gs
in
nop
push
addr16
jno
jg
ss
cmc
dec
pop
push
add
push
mul
test
push
scas
xchg
jne
xchg
xchg
adc
mov
xchg
and
jo
inc
test
iret
cwde
es
pusha
test
mov
xor
hlt
xlat
jmp
and
xchg
scas
mov
push
into
add
xor
fnstsw
shl
add
int
shl
into
je
and
adc
fcomp
aaa
test
push
in
add
arpl
or
adc
aas
mov
aaa
pop
movs
adc
push
lds
cmp
pop
loopne
aad
xor
sbb
jno
popa
les
nop
xor
or
pop
mov
and
push
add
push
das
aad
aas
jle
inc
ja
in
mov
test
jns
pop
cvtps2pd
jg
push
hlt
inc
mov
push
push
fist
mov
lea
xchg
push
mov
cmps
adc
inc
mov
adc
mov
and
iret
cwde
and
push
mov
fist
inc
repz
and
xchg
scas
mov
push
rol
xor
fidivr
shl
repnz
out
iret
data16
out
je
and
adc
fstp
jle
sbb
cmp
dec
add
cmp
shl
sbb
sub
movs
push
lock
lds
and
and
sbb
xor
adc
adc
les
inc
cmp
fs
ds
js
jno
push
add
push
ins
aad
aas
js
push
ja
in
mov
test
dec
in
unpcklps
jl
je
je
jge
data16
cmc
pop
pop
push
add
push
cmps
gs
test
push
mov
inc
loope
test
call
and
jo
inc
out
xchg
and
xchg
cmps
xchg
xor
pusha
xchg
push
lahf
mov
xor
rcl
in
inc
lods
adc
and
nop
scas
fiadd
(bad)
stc
push
loope
repz
in
in
jbe
imul
xor
add
fisttp
fbstp
rcl
fcomp
test
sbb
sub
cmp
sub
pop
cmc
pop
adc
sub
dec
lock
push
pop
movs
and
cmps
add
add
adc
pop
aad
xor
adc
push
nop
dec
movs
or
inc
lds
das
pop
(bad)
arpl
aam
add
push
dec
aad
aas
push
not
push
in
mov
test
pop
in
cmovns
inc
addr16
hlt
dec
mov
jno
pop
pop
outs
push
leave
xchg
test
push
mov
mov
mov
scas
xchg
jne
xchg
mov
ss
lods
and
jo
inc
out
pushf
and
sahf
cmps
movs
xor
pusha
fst
mov
xor
hlt
xlat
repz
icebp
adc
and
xchg
scas
mov
push
into
add
push
(bad)
mov
into
fidiv
out
in
in
ror
je
and
adc
fcomp
aaa
test
rcl
in
add
and
and
adc
push
mov
aaa
sub
lds
or
or
cmp
(bad)
lfs
loopne
aad
xor
dec
(bad)
ins
push
pop
les
jo
dec
inc
pop
lds
ins
(bad)
push
inc
addr16
and
pop
push
das
aad
aas
aaa
test
in
mov
test
gs
in
unpcklps
das
addr16
hlt
push
mov
inc
cmc
jl
jbe
adc
gs
mov
mov
inc
xchg
jne
xchg
in
adc
mov
mov
jmp
mov
mov
pusha
rcl
int
xchg
fistp
inc
ficom
mov
call
scas
out
sti
(bad)
icebp
push
int
fidiv
aam
(bad)
jbe
not
fs
retf
add
out
mul
out
je
and
adc
std
lahf
lock
and
ins
test
in
add
and
or
add
sbb
cmp
movs
inc
lock
sbb
push
cmps
sbb
loopne
aad
xor
adc
adc
les
imul
ja
jge
jne
pop
mov
push
ins
aad
aas
outs
test
in
mov
test
in
unpckhps
inc
addr16
je
jl
dec
jne
cmc
pop
pop
dec
push
mov
test
gs
test
add
mov
inc
call
(bad)
mov
and
jo
inc
lods
movs
and
cmps
xchg
pusha
xchg
push
sti
mov
xor
in
xlat
test
mov
inc
aad
mov
xor
fidivr
nop
fs
xor
add
in
(bad)
data16
fdiv
aam
push
div
lahf
not
jnp
sbb
push
add
or
sub
adc
ss
or
xor
push
lds
and
push
cmps
fs
add
or
cmp
mov
pop
adc
les
nop
ins
movs
jl
jno
push
das
pop
(bad)
jno
inc
aam
and
add
jbe
pop
aas
jge
inc
ja
in
mov
test
in
movq
push
addr16
hlt
ins
mov
push
push
test
lahf
add
push
cmc
gs
test
push
scas
xchg
jne
xchg
in
adc
pushf
mov
and
jo
inc
mov
mov
xor
pusha
fwait
push
mov
fistp
inc
les
into
and
nop
scas
std
inc
repz
out
rol
mov
push
lds
into
shl
retf
add
ror
xor
adc
mov
pop
je
(bad)
shl
push
add
and
add
add
sbb
jg
mov
aaa
xor
lds
and
push
cmps
aaa
daa
pop
mov
loopne
aad
xor
push
(bad)
jl
jb
addr16
jo
dec
inc
jns
push
das
pop
(bad)
jae
jae
dec
add
push
sub
outs
aas
ins
test
add
dec
in
lsl
inc
addr16
push
mov
pmaddwd
xchg
cmps
add
push
hlt
gs
test
push
add
jne
xchg
mov
mov
jo
inc
stos
movs
mov
xchg
adc
ret
fbstp
mov
(bad)
in
test
std
push
out
mov
push
ret
jbe
not
fs
aam
in
in
gs
(bad)
clc
data16
les
in
mov
lahf
xlat
xchg
and
sub
xor
and
sub
xor
daa
pop
es
sub
daa
cmc
sbb
cmp
movs
add
sub
or
cmp
sbb
add
xor
or
inc
push
imul
dec
inc
lds
ds
gs
ja
push
and
sbb
aad
aas
push
div
mov
test
sbb
bound
sbb
jo
pop
hlt
push
mov
adc
dec
pop
dec
push
lods
xchg
stos
add
push
mul
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
frstor
xchg
cmps
xor
xor
xlat
rol
out
and
in
scas
fiadd
mov
xor
lds
leave
fs
lds
retf
(bad)
frstor
out
je
and
adc
fcomp
or
add
and
adc
daa
cmc
push
adc
or
sbb
das
lds
and
pop
cmps
and
pop
mov
loopne
aad
xor
adc
les
ins
movs
pop
inc
cmp
adc
push
aam
sbb
push
and
push
aas
ins
not
inc
in
mov
test
js
lsl
dec
addr16
push
mov
inc
cmc
pop
pop
or
test
xchg
add
push
in
mov
mov
adc
inc
mov
adc
mov
xchg
inc
lods
movs
mov
xchg
test
mov
mov
inc
mov
lds
inc
inc
scas
push
std
add
push
std
mov
in
shl
xchg
add
mov
out
je
and
adc
fcomp
test
shl
in
add
and
or
adc
xchg
push
jg
mov
aaa
push
movs
adc
push
lds
pop
movs
and
cmps
sbb
loopne
aad
xor
adc
les
jo
dec
inc
(bad)
lds
push
aam
and
push
sub
inc
aas
ins
test
in
mov
test
gs
in
lsl
push
addr16
hlt
push
mov
inc
cmc
pop
pop
dec
push
adc
mov
mov
mov
loop
lea
jne
xchg
test
mov
(bad)
inc
out
(bad)
and
and
xchg
xor
(bad)
xlat
hlt
inc
mov
(bad)
jmp
(bad)
in
mov
aad
push
ret
jbe
not
add
mov
leave
data16
div
rcl
lahf
(bad)
xchg
cmp
add
add
cmp
or
adc
add
movs
cs
addr16
and
adc
inc
aad
xor
or
inc
push
imul
dec
inc
cmp
adc
pop
(bad)
jp
cmp
cmp
push
ins
aad
aas
push
test
in
mov
test
pop
in
pcmpeqb
pop
addr16
hlt
push
mov
pop
cmc
jb
outs
push
test
push
in
gs
test
push
mov
mov
mov
mov
adc
mov
mov
jmp
fbld
scas
cmps
ret
xor
pusha
mov
xor
ret
xlat
aam
ficom
into
and
mov
stc
push
lds
jmp
mov
out
fs
lea
lock
in
(bad)
fbstp
ficom
fcomp
jno
xor
and
push
add
and
or
adc
xor
inc
lock
and
cmp
push
daa
inc
mov
loopne
aad
xor
push
(bad)
outs
push
jbe
arpl
jno
inc
das
push
(bad)
jo
inc
aam
or
push
pop
aad
aas
pop
imul
push
in
mov
test
push
in
(bad)
out
addr16
dec
mov
or
pop
pop
pop
push
movs
xchg
stos
add
push
mov
test
add
scas
xchg
jne
xchg
out
adc
mov
xchg
and
jo
inc
hlt
movs
lods
and
xchg
cmps
sahf
xor
pusha
lahf
push
mov
fist
fcom
leave
and
xchg
scas
mov
push
enter
not
loop
pushf
mov
shl
icebp
add
icebp
(bad)
out
je
and
adc
fcomp
adc
in
add
and
or
adc
xchg
add
aaa
adc
and
and
or
pop
aad
xor
or
dec
push
popa
les
dec
movs
pop
inc
lds
das
inc
mov
addr16
adc
push
sub
pop
aas
test
in
mov
test
gs
in
(bad)
out
addr16
popa
mov
or
pop
pop
pop
push
mov
push
fwait
gs
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
in
movs
xchg
and
mov
pusha
fst
mov
xor
call
adc
and
xchg
scas
les
(bad)
in
push
retf
add
xor
clc
mov
retf
xor
add
in
cli
data16
les
not
fcomp
add
add
sbb
and
adc
xchg
inc
jg
mov
aaa
adc
sub
and
cmp
sbb
pop
mov
loopne
aad
xor
adc
jl
imul
dec
inc
and
fs
dec
(bad)
ja
and
mov
push
jl
inc
aas
push
idiv
ja
in
mov
test
pop
in
nop
inc
addr16
hlt
je
inc
xchg
jge
pop
cmc
pop
pop
push
add
push
cmc
gs
test
push
xchg
xchg
jne
xchg
mov
ss
mov
and
jo
inc
stos
movs
mov
es
cmps
mov
push
call
push
out
xlat
lds
les
nop
scas
mov
out
out
add
push
repnz
xchg
fs
xor
add
mov
leave
repz
je
and
jne
lahf
les
jnp
jo
push
add
sbb
and
pop
cmc
and
jg
mov
aaa
sub
and
and
dec
loopne
aad
xor
adc
push
push
inc
les
nop
jae
push
inc
popa
lds
jns
outs
inc
jnp
inc
adc
push
outs
aad
aas
pop
neg
push
in
mov
test
jle
xor
pop
out
addr16
hlt
push
mov
inc
cmc
pop
pop
jbe
test
scas
add
push
cmc
mov
mov
lds
mov
cmps
xchg
in
adc
xchg
mov
and
jo
inc
lods
movs
and
cmps
mov
xchg
pusha
xchg
push
mov
fild
inc
movs
adc
and
imul
ret
add
push
(bad)
mov
into
fs
xor
add
ror
xlat
je
and
jne
lahf
into
xchg
and
and
add
and
xchg
or
sbb
pop
adc
sbb
cmp
xor
movs
push
dec
adc
mov
loopne
aad
xor
push
(bad)
push
push
jno
inc
nop
movs
or
lds
pop
mov
aam
cmp
pop
push
das
aad
aas
jns
inc
ja
in
mov
test
push
in
nop
popa
addr16
push
mov
inc
cmc
inc
pop
pop
push
rcl
mul
test
add
jne
xchg
mov
mov
mov
lods
movs
sahf
and
pushf
cmps
mov
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
test
fst
mov
(bad)
fs
cmc
add
out
iret
data16
les
rcl
lahf
retf
xchg
push
pop
add
add
and
or
adc
xchg
push
jg
mov
aaa
push
movs
sub
and
sbb
sub
and
and
cs
jbe
popa
les
inc
movs
dec
inc
jns
inc
das
pop
(bad)
sbb
aam
sbb
ins
aad
aas
outs
test
in
mov
test
inc
out
addr16
jl
inc
xchg
jnp
jo
and
jbe
test
push
mov
xchg
pushf
push
mov
mov
add
test
xchg
cmps
mov
and
jo
inc
call
iret
aad
xchg
cmps
xchg
pusha
mov
mov
xor
jmp
test
cld
inc
xchg
scas
loop
aad
movs
push
rol
mov
push
(bad)
mov
out
fs
xor
gs
fisub
out
je
and
adc
(bad)
lahf
mov
(bad)
rcl
in
add
or
je
cmp
inc
adc
push
mov
aaa
pop
movs
adc
dec
lds
and
pop
cmps
xor
add
push
loopne
aad
xor
adc
push
nop
pop
movs
adc
push
lds
mov
jns
ja
dec
mov
push
jae
inc
aas
push
neg
push
in
mov
test
adc
pusha
sysret
out
addr16
jno
push
xchg
jnp
push
cmc
and
push
push
adc
mov
cmps
push
scas
xchg
jne
xchg
mov
mov
jo
inc
test
iret
call
pusha
xchg
push
stos
mov
xor
hlt
xlat
test
mov
inc
out
out
iret
add
push
loope
jmp
xor
add
loope
jmp
out
je
and
adc
aam
aad
and
ins
test
shl
in
add
and
aaa
rcl
add
mov
aaa
pop
movs
xor
sbb
sub
pop
cmps
sbb
push
mov
loopne
aad
xor
dec
(bad)
ins
push
popa
les
ins
movs
dec
inc
jl
pop
das
pop
mov
addr16
adc
push
das
aad
aas
push
test
in
mov
test
(bad)
in
cmovae
and
hlt
inc
mov
dec
cmc
dec
pop
outs
push
adc
mov
mov
adc
inc
xchg
jne
xchg
mov
mov
jo
inc
test
xchg
and
and
xor
xlat
mov
and
xchg
scas
mov
push
rol
cmps
xor
lock
(bad)
fs
add
lods
vphaddwd
xor
adc
fstp
sub
sub
add
and
adc
adc
xchg
pop
jg
mov
aaa
sub
and
sbb
mov
loopne
aad
xor
adc
jl
push
les
nop
jae
inc
jnp
adc
ins
mov
aam
cmp
push
das
aad
aas
push
test
in
mov
test
in
addps
inc
addr16
hlt
pop
mov
adc
push
pop
jp
mov
push
lods
gs
test
push
mov
inc
cdq
jne
xchg
mov
nop
jmp
movs
jo
inc
jmp
mov
mov
pusha
(bad)
push
cli
mov
xor
in
les
int
enter
sahf
scas
mov
add
push
cmp
lea
fisttp
(bad)
je
and
adc
in
les
xor
and
ss
adc
xchg
aaa
rcl
inc
adc
adc
pop
lock
daa
and
and
add
cmp
mov
pop
aaa
(bad)
push
nop
ins
movs
jno
outs
lds
das
pop
(bad)
jnp
jg
dec
add
push
arpl
add
inc
neg
dec
in
mov
test
push
in
cmovge
pop
addr16
hlt
inc
mov
inc
cmc
pop
pop
pop
push
nop
xchg
scas
add
push
mov
test
push
scas
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
cmps
movs
mov
es
sahf
xor
pusha
movs
push
xor
icebp
inc
mov
lds
test
mov
xor
std
mov
fisub
leave
add
ror
shl
adc
fcomp
or
or
add
daa
xchg
pop
ds
adc
popa
cmc
sbb
jg
mov
aaa
xor
and
cmps
arpl
pop
mov
loopne
aad
xor
adc
les
jo
dec
inc
jb
or
push
aam
or
push
inc
aad
aas
sub
dec
ja
in
mov
test
ins
in
pcmpeqb
pop
addr16
xchg
dec
jne
cmc
push
pop
pop
push
test
cmc
gs
test
push
mov
inc
movs
jne
xchg
call
mov
mov
mov
iret
test
mov
pusha
test
mov
xor
xchg
xlat
cld
inc
mov
(bad)
xchg
scas
fadd
mov
xor
sar
fs
add
in
(bad)
int
int3
out
je
and
adc
in
(bad)
xchg
and
adc
add
and
and
adc
xchg
push
jg
mov
aaa
adc
adc
sbb
sub
daa
cmps
and
sbb
xor
push
(bad)
je
dec
les
push
movs
or
das
pop
(bad)
ja
outs
aam
add
push
popa
aad
aas
sub
xor
mov
test
gs
pcmpeqb
inc
addr16
hlt
push
mov
push
push
lods
xchg
lods
add
push
fwait
gs
test
push
mov
inc
mov
adc
cmps
mov
and
jo
inc
mov
lods
es
cmps
xchg
mov
xor
jmp
and
mov
stc
push
retf
add
xor
idiv
out
in
xor
gs
into
data16
jecxz
out
les
ficomp
aaa
test
rcl
in
add
sub
xadd
cmc
pop
adc
cmp
pop
lock
imul
push
mov
loopne
aad
xor
adc
les
inc
movs
push
inc
inc
lds
das
pop
(bad)
dec
inc
jg
dec
or
push
jg
pop
aas
sub
pop
ja
in
mov
test
pop
in
cmovns
push
addr16
inc
mov
popa
cmc
pop
pop
outs
push
xchg
xchg
scas
add
push
mov
add
add
xchg
adc
xchg
mov
and
jo
inc
scas
movs
xchg
mov
pusha
mov
xor
hlt
xlat
mov
call
in
rol
cld
inc
shr
fcom
mov
push
(bad)
mov
(bad)
xlat
xor
add
loop
loop
mul
les
fist
les
test
and
cmp
cmp
push
outs
xchg
ds
adc
add
add
das
xchg
dec
jg
mov
aaa
xor
and
push
cmps
and
cmp
xor
and
ins
push
popa
les
nop
jo
dec
inc
cmp
push
das
pop
(bad)
outs
inc
pop
aam
add
das
aad
aas
jge
dec
ja
in
mov
test
in
vmwrite
push
addr16
dec
mov
or
push
stos
xchg
xchg
add
push
cmc
gs
test
xchg
xchg
jne
xchg
mov
ss
mov
and
jo
inc
test
iret
xchg
loop
xchg
pusha
fst
mov
xor
loopne
hlt
inc
lods
adc
and
xchg
scas
in
inc
ret
push
iret
add
xor
ret
jbe
test
add
fisttp
ret
je
and
adc
mov
pop
test
shl
in
add
daa
xchg
arpl
adc
add
movs
xor
and
and
adc
cmp
and
ss
jl
outs
les
nop
jae
pop
inc
inc
lds
pop
mov
aam
adc
push
js
jge
jbe
dec
ja
in
mov
test
in
packssdw
push
addr16
hlt
dec
mov
push
cmc
and
imul
xchg
test
gs
test
push
mov
inc
mov
lahf
xchg
call
mov
and
jo
inc
lods
movs
frstor
test
xchg
push
cli
mov
xor
jmp
adc
and
shr
mov
xor
(bad)
mov
jmp
enter
fsub
pop
out
into
je
and
adc
fcomp
imul
outs
and
jne
cmp
aas
adc
ds
aaa
pop
movs
add
and
cmps
xor
and
aad
xor
push
(bad)
dec
push
jbe
cmp
inc
lds
pop
(bad)
pop
inc
outs
aam
and
push
ja
push
aas
push
imul
ja
push
mov
test
in
nop
ja
inc
hlt
dec
mov
or
dec
pop
push
push
xchg
cmc
mov
mov
mov
movs
adc
inc
cmps
jne
xchg
in
adc
mov
xchg
and
jo
inc
jmp
iret
call
pusha
mov
xor
not
rol
in
xchg
lds
inc
fadd
fcom
jmp
pushf
aad
push
fdivr
enter
out
jmp
(bad)
(bad)
data16
and
adc
(bad)
lahf
out
xchg
daa
pop
adc
add
and
or
and
sub
push
mov
aaa
and
and
or
mov
loopne
aad
xor
push
(bad)
arpl
les
je
or
das
dec
(bad)
arpl
aam
add
push
imul
jg
push
in
mov
test
add
push
lsl
push
addr16
imul
outs
push
xchg
xchg
mov
call
mov
mov
adc
inc
mov
adc
hlt
mov
and
jo
inc
test
iret
test
and
push
mov
retf
xlat
lock
mov
(bad)
call
(bad)
aad
leave
add
xor
hlt
mov
xlat
fs
xor
add
out
enter
cld
je
and
adc
fstp
sub
add
and
xchg
pop
shl
adc
cmp
movs
add
xor
sbb
sbb
pop
loopne
aad
xor
es
jl
xor
jle
jae
push
inc
pop
lds
das
pop
(bad)
dec
inc
ins
aam
add
push
ins
aad
aas
dec
div
dec
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
dec
cmc
pop
pop
imul
xchg
mov
push
test
test
push
cdq
xchg
jne
xchg
jmp
ss
mov
and
jo
inc
in
movs
mov
es
cmps
cdq
xor
pusha
xchg
push
clc
mov
xor
loopne
icebp
inc
not
retf
and
jmp
push
lds
out
(bad)
rcl
mov
out
shl
aad
stos
in
gs
retf
out
je
and
adc
into
lahf
call
pop
shl
sub
jg
push
outs
or
and
add
add
bound
or
and
lds
and
adc
mov
loopne
aad
xor
or
pusha
push
jae
jge
inc
movs
pop
inc
dec
lds
pop
(bad)
jae
outs
aam
add
push
arpl
add
ja
in
mov
test
dec
in
sysret
out
addr16
push
mov
dec
cmc
and
outs
push
adc
mov
cmps
adc
inc
mov
adc
xchg
and
jo
inc
hlt
movs
mov
es
cmps
xor
mov
xor
hlt
xlat
rol
leave
and
shr
push
into
add
push
cli
mov
into
shl
repnz
aam
in
out
out
je
and
adc
ficomp
daa
test
aaa
in
add
jnp
cmp
jge
jbe
xor
aaa
adc
push
mov
aaa
sub
lds
and
or
add
inc
aad
xor
adc
les
jo
dec
inc
xor
push
inc
and
or
push
imul
push
ja
in
mov
test
gs
in
cmovns
push
addr16
hlt
inc
mov
inc
cmc
bound
jle
adc
gs
inc
mov
inc
mov
cmps
xchg
mov
movs
mov
and
jo
inc
mov
mov
es
cmps
call
mov
xor
lock
jmp
and
xchg
scas
mov
push
repnz
xor
xchg
shl
add
out
iret
data16
out
je
and
adc
ret
lahf
(bad)
xchg
xor
add
add
jnp
daa
pop
cmp
adc
cmp
movs
cmp
and
sub
mov
loopne
aad
xor
adc
inc
push
inc
les
nop
jb
pop
inc
cmp
push
das
daa
(bad)
ja
pusha
aam
add
push
jl
pop
aas
push
test
dec
mov
test
in
unpckhps
push
addr16
hlt
push
mov
pmaddwd
pop
je
mov
push
in
lea
mov
mov
inc
in
popf
xchg
mov
mov
jo
inc
lods
movs
fisub
xchg
cmps
xchg
xor
pusha
test
mov
xor
in
inc
in
(bad)
(bad)
in
scas
mov
push
aam
mov
push
(bad)
mov
(bad)
xlat
xor
add
dec
xchg
les
fcomp
xor
data16
sbb
and
add
push
inc
adc
es
aaa
push
movs
inc
lock
es
and
mov
loopne
aad
xor
or
push
nop
dec
movs
push
inc
dec
lds
pop
(bad)
push
inc
jg
dec
cmp
push
arpl
pop
aas
push
mul
(bad)
in
mov
test
sbb
jno
dec
out
addr16
hlt
dec
mov
js
pop
pop
dec
push
mov
call
out
mov
adc
inc
xchg
jne
xchg
(bad)
adc
movs
mov
and
jo
inc
mov
iret
cmps
es
push
stc
mov
xor
int3
xlat
test
repnz
loopne
mov
push
mov
loop
fistp
jmp
enter
out
lods
(bad)
in
data16
in
shl
in
out
(bad)
jne
lahf
call
add
sbb
adc
xor
add
add
or
sbb
daa
adc
push
mov
aaa
pop
movs
pop
lock
ins
and
cmp
adc
pop
mov
loopne
aad
xor
push
(bad)
inc
push
outs
les
jb
dec
inc
jp
inc
das
pop
mov
aam
sbb
push
das
aad
aas
jns
dec
ja
in
mov
test
push
in
cmova
inc
addr16
hlt
dec
mov
adc
jp
outs
push
mov
push
jmp
add
popf
xchg
jne
xchg
mov
icebp
mov
and
jo
inc
jmp
cdq
and
and
push
mov
fistp
inc
fist
int
sti
(bad)
xchg
scas
jmp
out
loope
loope
mov
push
clc
mov
(bad)
les
retf
add
dec
in
ret
and
adc
ficomp
sub
data16
in
add
or
adc
adc
xchg
sbb
aaa
adc
adc
sbb
sbb
cmp
adc
sbb
push
loopne
aad
xor
push
(bad)
inc
push
ins
les
nop
dec
movs
dec
inc
xor
push
inc
outs
aam
and
push
xor
pop
aas
push
imul
ja
in
mov
test
pop
in
pcmpgtb
inc
addr16
hlt
adc
pop
cmc
jbe
ins
push
xchg
xchg
test
mov
scas
push
mov
mov
mov
mov
mov
call
and
jo
inc
lods
movs
fwait
and
out
pushf
xor
pusha
xchg
push
mov
retf
fistp
inc
lods
adc
and
mov
out
retf
add
xor
(bad)
mov
leave
fs
xor
add
dec
xchg
les
fcomp
xor
popa
shl
in
add
sbb
xchg
cmp
adc
push
mov
aaa
shld
add
xor
xor
xor
loopne
aad
xor
dec
(bad)
arpl
les
nop
xor
dec
das
push
(bad)
jae
jp
inc
and
pop
push
pop
aad
aas
push
mul
in
mov
test
adc
ins
sysret
out
addr16
dec
mov
push
push
test
mov
lods
test
push
movs
xchg
cdq
xchg
in
adc
test
mov
and
xchg
xchg
push
popf
mov
xor
hlt
xlat
test
in
fisubr
out
into
add
push
fistp
in
xlat
xor
add
int3
(bad)
cli
mul
(bad)
je
and
adc
les
je
xor
xchg
pop
ds
push
rcr
sbb
jg
mov
aaa
push
movs
adc
push
lds
and
or
pop
loopne
aad
xor
push
(bad)
ins
push
jle
sub
jae
cmovne
das
pop
(bad)
arpl
aam
add
push
sub
jbe
push
test
ins
mov
test
jns
pop
pcmpgtb
push
addr16
hlt
pop
mov
pmaddwd
outs
push
xchg
xchg
mov
xchg
push
xchg
gs
test
push
mov
inc
mov
cwde
xchg
mov
cwde
(bad)
jmp
jo
inc
cwde
movs
test
movs
cmps
xor
mov
xor
loopne
aam
out
clc
and
xchg
scas
out
sti
(bad)
icebp
push
lds
mov
push
fidivr
(bad)
fs
xor
gs
(bad)
out
je
and
adc
fstp
test
shl
in
add
cmp
daa
pop
aas
xchg
jae
adc
xchg
push
jg
mov
aaa
adc
push
lock
lds
adc
sbb
inc
mov
loopne
aad
xor
pop
(bad)
inc
push
imul
push
inc
and
adc
push
(bad)
dec
inc
push
aam
add
push
ins
aad
aas
inc
div
in
mov
test
in
unpcklps
push
addr16
hlt
push
mov
dec
cmc
jle
outs
push
adc
gs
shr
mov
fld
std
jne
xchg
mov
movs
mov
and
jo
inc
out
cmps
and
cdq
cmps
cdq
xor
pusha
ret
mov
xor
nop
xlat
out
inc
mov
korw
scas
call
push
loop
mov
push
ret
jbe
not
add
aad
retf
out
je
and
adc
(bad)
lahf
xchg
xchg
xor
xor
and
add
and
or
adc
ds
aaa
add
and
or
xor
or
es
dec
(bad)
dec
push
imul
nop
ins
movs
pop
inc
jb
adc
push
(bad)
dec
inc
jg
dec
add
push
arpl
dec
aas
push
imul
ja
in
mov
test
add
jbe
pop
out
addr16
hlt
mov
ins
cmc
pop
pop
pop
push
mov
push
and
stc
add
scas
xchg
mov
repz
mov
and
jo
inc
mov
iret
ret
es
cmps
xchg
pusha
xchg
push
lods
mov
xor
(bad)
xlat
test
mov
inc
inc
call
mov
push
(bad)
mov
nop
xlat
xor
add
mov
loop
hlt
out
je
and
adc
fcomp
aaa
test
shl
in
add
and
or
push
cmc
inc
adc
push
mov
aaa
push
movs
adc
sbb
ins
and
and
or
adc
aaa
xor
push
(bad)
push
nop
jo
dec
inc
pop
lds
cmp
pop
inc
pop
aam
add
push
das
aad
aas
jg
xor
in
mov
test
add
inc
cmovp
push
addr16
hlt
push
mov
push
cmc
pop
pop
jbe
adc
mov
mov
adc
inc
mov
adc
mov
and
movs
fisub
and
scas
xor
in
xlat
hlt
inc
mov
lds
inc
sti
(bad)
cli
push
scas
add
xor
fistp
xchg
xlat
xor
add
aad
in
shl
fdiv
ficom
rcr
and
add
add
pop
sar
adc
cmp
ds
movs
sbb
daa
sbb
adc
pop
aad
xor
adc
jl
inc
les
jae
dec
inc
cmp
inc
das
pop
(bad)
push
inc
fs
xor
push
jb
jge
push
test
in
mov
test
pop
in
addps
inc
addr16
hlt
push
mov
dec
cmc
pop
pop
outs
push
mov
pop
push
mul
test
push
mov
inc
test
test
jmp
and
jo
inc
stos
movs
mov
mov
pusha
stos
push
mov
test
push
out
out
(bad)
adc
and
shr
out
push
loop
mov
push
(bad)
mov
(bad)
xor
add
fisttp
icebp
je
and
adc
loop
les
and
ss
add
and
push
rol
inc
adc
ds
aaa
pop
movs
pop
lock
sub
add
pavgb
aad
xor
aas
(bad)
inc
push
les
nop
pop
movs
pop
inc
jns
adc
push
aam
add
push
ins
aad
aas
push
imul
ins
in
mov
test
push
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
pop
push
xchg
xchg
mov
gs
test
push
scas
xchg
jne
xchg
scas
adc
push
xchg
movs
pushf
and
xchg
cmps
fwait
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
cmc
(bad)
loopne
into
add
push
fdivr
iret
fs
xor
add
loop
leave
repz
je
and
jne
lahf
out
xchg
and
jle
pusha
rcr
in
add
and
das
rcr
sub
cmp
adc
sbb
sbb
adc
adc
pop
mov
loopne
aad
xor
push
(bad)
ins
push
xor
inc
nop
jo
push
inc
jae
dec
das
pop
(bad)
arpl
aam
add
push
aad
aas
push
div
mov
test
adc
push
cmovp
push
addr16
hlt
push
mov
jg
pop
pop
fs
int
mov
in
push
mov
test
add
mov
inc
mov
xchg
mov
ss
mov
and
jo
inc
xchg
movs
fbld
and
push
mov
fist
inc
mov
(bad)
xchg
scas
les
(bad)
scas
push
fld
mov
push
ret
jbe
div
shl
retf
add
loop
leave
data16
std
je
and
adc
fstp
sub
and
and
adc
and
adc
pop
cmc
sbb
and
movs
sub
and
and
add
adc
and
adc
jl
xor
bound
cmp
pop
das
dec
(bad)
ja
jno
inc
adc
push
ins
aad
aas
push
imul
dec
in
mov
test
pop
in
unpckhps
inc
addr16
hlt
push
mov
adc
pop
pop
jg
lods
xchg
icebp
add
push
mul
test
push
cdq
xchg
test
jmp
and
jo
inc
xchg
movs
frstor
mov
pusha
xchg
push
fwait
mov
xor
loopne
out
inc
lods
adc
and
call
(bad)
icebp
push
aam
cmps
xor
lds
shl
rol
mov
leave
data16
out
je
and
adc
ret
xchg
xor
sub
add
or
or
adc
and
add
adc
and
cmp
pusha
daa
sbb
adc
pop
aad
xor
dec
(bad)
push
push
jbe
pop
nop
cmp
adc
imul
dec
and
pop
push
and
add
inc
neg
push
in
mov
test
popa
in
nop
push
addr16
hlt
dec
mov
push
cmc
and
inc
push
test
mov
push
hlt
gs
mov
enter
xchg
xchg
adc
stos
and
jo
inc
lock
mov
mov
pusha
cwde
push
div
scas
push
(bad)
xlat
retf
inc
xlat
adc
and
nop
scas
mov
out
(bad)
out
(bad)
add
push
std
mov
cld
fs
xor
add
lods
(bad)
out
je
and
adc
rcr
test
sbb
adc
xor
daa
pop
ds
das
rcr
sbb
jg
mov
aaa
adc
and
sbb
sub
pop
aad
xor
push
(bad)
pop
push
popa
les
inc
jb
adc
inc
push
aam
and
push
push
aad
aas
push
test
in
mov
test
push
in
(bad)
out
addr16
outs
mov
outs
cmc
pop
pop
jbe
adc
mov
mov
mov
inc
mov
adc
(bad)
mov
and
jo
inc
test
aad
and
into
xor
(bad)
in
inc
mov
lds
inc
out
out
leave
add
push
(bad)
mov
shl
jmp
test
je
and
adc
fstp
sub
ins
rol
in
add
and
xchg
rcl
push
jg
mov
aaa
adc
push
lock
lds
and
cmps
and
xor
xor
ds
jl
imul
dec
inc
and
ins
das
pop
(bad)
ja
inc
aam
add
push
ins
aad
aas
jb
inc
ja
in
mov
test
in
unpcklps
jg
push
hlt
push
mov
dec
cmc
popw
outs
push
adc
gs
out
mov
mov
inc
movs
jne
xchg
cwde
adc
movs
mov
and
jo
inc
scas
movs
fbld
xchg
cmps
mov
push
mov
fbstp
mov
korw
scas
hlt
inc
aad
cli
push
aam
lds
(bad)
mov
leave
xchg
xchg
add
ror
je
and
adc
fcomp
xor
jg
or
push
add
add
daa
rcl
daa
adc
or
add
add
and
pop
cmps
add
sbb
xor
adc
les
jo
push
inc
jno
adc
jle
ja
pop
aam
add
push
dec
aad
aas
neg
dec
in
mov
test
pop
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
inc
push
test
lods
add
push
mov
add
iret
xchg
adc
mov
jo
inc
hlt
movs
mov
es
cmps
mov
scas
pusha
xchg
push
in
iret
xor
jmp
adc
and
aam
mov
push
enter
not
loop
cwde
mov
xchg
test
xchg
add
loope
out
mul
les
not
fcomp
aaa
test
sub
test
and
sub
and
and
sub
adc
aaa
movs
adc
daa
lds
and
cmp
adc
loopne
aad
xor
sbb
ins
push
ins
les
dec
movs
dec
inc
dec
lds
data16
pop
inc
jg
inc
xor
push
xor
jnp
push
not
ja
jnp
test
in
(bad)
out
addr16
dec
mov
dec
cmc
jp
outs
push
test
mul
test
add
mov
inc
cmps
jne
xchg
mov
mov
stos
inc
hlt
movs
(bad)
and
and
push
mov
fisttp
inc
mov
(bad)
iret
scas
mov
push
int
mov
push
sar
(bad)
fs
xor
add
ror
out
in
and
jne
lahf
call
test
in
add
aas
xchg
pop
es
sub
adc
add
movs
push
lock
or
dec
cmp
data16
sbb
pop
loopne
aad
xor
dec
(bad)
jl
imul
push
inc
cmp
push
das
cmp
ja
pusha
aam
add
push
pop
aad
aas
push
mul
dec
in
mov
test
gs
in
cmovae
outs
addr16
push
mov
or
push
(bad)
xchg
test
mul
test
push
ret
adc
inc
loope
test
lods
cmps
mov
and
jo
inc
mov
iret
mov
mov
cmps
xor
pusha
stos
push
mov
xor
xlat
out
inc
fst
in
mov
loopne
call
(bad)
cmc
push
aam
mov
push
(bad)
mov
xlat
fs
xor
add
mov
retf
out
je
and
adc
lds
sub
in
add
je
adc
rcr
inc
adc
adc
pop
lock
xor
dec
and
adc
xor
or
pop
add
les
nop
ins
movs
or
lds
das
pop
(bad)
arpl
aam
and
push
sub
sbb
push
not
inc
in
mov
test
sbb
inc
addr16
hlt
dec
mov
adc
addr16
push
add
push
hlt
xchg
xchg
scas
xchg
adc
lods
and
jo
inc
test
and
cmps
xchg
xor
pusha
mov
mov
xor
hlt
xlat
in
inc
cli
adc
and
xchg
scas
mov
push
mov
loope
aad
out
jbe
mul
fs
xor
add
loope
stc
mul
(bad)
je
and
adc
ret
lahf
mov
aas
rol
in
add
and
adc
add
cmp
and
adc
adc
and
and
or
adc
jbe
dec
mov
pop
or
outs
push
push
les
jae
pop
inc
push
or
mov
push
aam
add
push
jbe
inc
aas
dec
imul
imul
js
jns
dec
cvtps2pd
push
addr16
hlt
push
mov
inc
cmc
inc
pop
ins
push
stos
xchg
mov
sti
push
mov
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
fsub
in
mov
pusha
xchg
push
mov
fistp
inc
mov
(bad)
repnz
les
(bad)
std
push
repz
push
pushf
mov
aad
fwait
xor
add
in
jmp
and
adc
ficomp
sub
aas
shl
adc
and
sub
xor
xchg
add
aaa
adc
and
adc
movs
aas
dec
cmp
adc
cmp
and
adc
ins
push
les
nop
jb
jl
cmp
adc
imul
push
add
push
sub
add
push
mul
dec
in
mov
test
in
(bad)
out
outs
hlt
inc
mov
dec
cmc
pop
pop
inc
push
rcl
mov
add
mov
inc
mov
adc
repz
and
jo
inc
lods
movs
fldenv
xchg
cmps
xor
mov
xor
in
out
inc
mov
(bad)
mov
stc
push
aam
mov
push
lds
iret
fs
xor
add
dec
fidiv
rcl
fcomp
xor
add
add
sbb
adc
cmp
adc
sbb
push
and
or
adc
pop
aad
xor
(bad)
push
nop
inc
movs
or
lds
push
(bad)
pusha
inc
jle
dec
add
push
arpl
inc
aas
inc
not
adc
test
inc
in
sysret
out
addr16
hlt
adc
inc
cmc
and
push
add
push
call
out
mov
adc
inc
stos
jne
xchg
lock
mov
mov
inc
mov
iret
and
cmps
mov
xchg
pusha
xchg
push
mov
mov
in
xlat
out
inc
not
leave
and
in
scas
mov
push
rol
xor
std
mov
into
xlat
xor
add
in
enter
(bad)
je
and
adc
ret
lahf
lds
or
add
xor
and
cmp
adc
and
daa
aaa
and
and
and
or
dec
aad
xor
dec
(bad)
addr16
les
movs
or
lds
dec
(bad)
jno
das
aam
add
inc
aad
aas
jne
inc
ja
in
mov
test
imul
push
addr16
hlt
dec
mov
or
and
outs
push
mov
mov
test
add
mov
inc
mov
adc
mov
(bad)
and
jo
inc
mov
iret
pushf
es
cmps
mov
xchg
pusha
xchg
push
movs
mov
xor
out
xlat
hlt
inc
out
adc
and
jmp
les
cmps
xor
fnstcw
int
push
loope
lock
gs
retf
out
je
and
adc
fstp
sub
add
jns
daa
pop
cmp
cmc
push
adc
ds
aaa
adc
sub
and
inc
cmps
sbb
lfs
loopne
aad
xor
adc
imul
aas
nop
xor
push
das
pop
(bad)
ja
jl
add
push
jl
inc
aas
push
test
in
mov
test
in
unpckhps
inc
outs
hlt
je
bound
pop
pop
gs
sahf
xchg
test
gs
test
push
mov
inc
mov
adc
scas
mov
and
jo
inc
lods
movs
fbld
xchg
cmps
lds
mov
xor
rcl
out
inc
mov
lds
inc
jecxz
stc
push
ret
xor
out
mov
xchg
fs
add
aad
loopne
fucom
fidiv
les
fcomp
xor
jnp
add
test
outs
and
or
adc
push
mov
aaa
shld
or
cmp
sub
adc
pop
aad
xor
dec
(bad)
push
nop
push
movs
adc
js
imul
jl
dec
add
push
dec
aad
aas
pop
mul
push
in
mov
test
gs
push
sysret
out
addr16
hlt
push
mov
inc
cmc
jae
push
xchg
mul
test
push
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
out
movs
pushf
and
fwait
cmps
xchg
pusha
cmps
push
mov
(bad)
push
lock
test
movs
inc
imul
fcom
stc
xor
clc
mov
into
shl
out
add
mov
xchg
data16
xlat
je
and
adc
fistp
xor
add
cmp
xadd
cmc
push
adc
and
daa
aaa
pop
movs
add
sub
movs
and
and
mov
loopne
aad
xor
xor
ins
push
popa
les
jo
dec
inc
jp
push
inc
jno
dec
adc
push
das
aad
aas
push
test
in
mov
test
in
andps
push
addr16
hlt
jle
jbe
push
jne
cmc
pop
pop
outs
push
lods
xchg
mov
push
mul
test
add
popf
xchg
jne
xchg
jmp
lahf
(bad)
in
ss
and
jo
inc
mov
iret
mov
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
mov
call
cmps
xor
ret
jbe
not
shl
lock
retf
data16
(bad)
rcl
lahf
mov
jnp
push
in
add
and
or
add
xchg
inc
jg
mov
aaa
push
movs
sub
and
pop
cmps
and
adc
adc
xor
or
jg
push
les
push
movs
dec
inc
jae
adc
pop
(bad)
pop
inc
push
aam
sbb
push
ins
aad
aas
jp
dec
ja
in
mov
test
inc
in
unpckhps
outs
addr16
or
inc
cmc
pop
pop
ins
push
stos
xchg
test
gs
test
push
fwait
xchg
jne
xchg
mov
ss
jo
inc
scas
movs
stos
and
(bad)
cmps
cdq
xor
pusha
adc
fild
inc
std
adc
and
mov
ficom
div
sar
(bad)
retf
in
fimul
clc
je
and
adc
loop
(bad)
xchg
dec
pop
or
add
and
aaa
rcr
cmp
cmp
pop
lock
xor
adc
xor
pop
mov
loopne
aad
xor
xor
les
movs
adc
ins
lds
push
(bad)
jge
jns
dec
add
push
pop
aad
aas
push
div
mov
test
adc
xor
outs
hlt
mov
inc
cmc
and
add
add
push
mov
add
cmps
xchg
adc
inc
test
cdq
xchg
out
adc
scas
mov
and
jo
inc
xchg
movs
pushf
and
mov
pusha
xchg
push
mov
fist
mov
(bad)
(bad)
scas
mov
push
int
loopne
int
loop
sar
jmp
in
gs
in
mul
ret
je
and
adc
fcomp
xor
add
sub
or
push
cmc
sbb
jg
mov
aaa
push
movs
and
sbb
cmp
cmps
cmp
pop
mov
loopne
aad
xor
push
(bad)
push
jle
addr16
jo
inc
jl
or
xor
push
inc
jo
push
add
push
(bad)
aad
aas
push
mul
push
in
mov
test
push
in
unpckhps
pop
addr16
hlt
push
mov
or
pop
pop
outs
push
xchg
xchg
mov
call
gs
test
add
xchg
xchg
adc
inc
mov
adc
mov
and
iret
sahf
and
mov
push
call
adc
and
xchg
scas
mov
push
leave
add
push
ret
jbe
not
fs
retf
add
(bad)
(bad)
out
je
and
adc
fistp
and
add
xchg
add
or
sbb
sbb
jg
mov
aaa
push
movs
inc
lock
movs
es
or
pop
loopne
aad
xor
adc
inc
push
dec
les
movs
jo
inc
lds
(bad)
jo
fs
add
push
ins
aad
aas
push
dec
ja
in
mov
test
js
jb
imul
ins
hlt
addr16
inc
jne
cmc
bound
pop
push
xchg
xchg
xchg
add
push
mul
test
push
mov
inc
nop
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
mov
es
cdq
xor
pusha
cdq
push
mov
cwde
xor
in
leave
inc
movs
adc
inc
mov
out
push
call
aad
push
lds
leave
fs
xor
add
mov
retf
out
je
and
adc
fstp
ja
push
ror
in
add
and
sub
xor
and
jg
mov
aaa
shld
movs
das
dec
or
sub
pop
aad
xor
adc
les
nop
push
or
lds
imul
inc
inc
aam
or
push
arpl
dec
aas
inc
neg
or
test
pop
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
inc
pop
push
add
push
xchg
gs
out
mov
adc
inc
sahf
jne
xchg
hlt
adc
xchg
mov
and
jo
inc
mov
stos
and
sahf
cmps
sahf
xor
pusha
fst
mov
xor
cmc
xlat
int
mov
(bad)
xchg
scas
cmc
inc
cld
(bad)
out
into
add
xor
iret
mov
ret
test
loope
sti
in
gs
enter
(bad)
je
and
adc
les
sub
add
daa
xchg
cs
ja
xor
inc
adc
adc
movs
inc
lock
or
cmp
bound
cmp
aad
xor
sbb
ins
push
jb
ins
nop
jo
dec
inc
inc
lds
dec
(bad)
jae
and
mov
push
arpl
inc
aas
push
test
push
mov
test
push
in
pcmpgtb
push
addr16
jno
bound
pop
pop
outs
push
fist
xchg
gs
mov
xchg
mov
mov
inc
loop
fcom
cmps
lea
mov
movs
lods
and
out
cmps
xchg
pusha
stos
push
xor
lods
inc
mov
(bad)
xchg
scas
mov
push
leave
add
xor
int
hlt
jbe
div
shl
loope
lock
gs
leave
shl
cli
je
and
adc
int
call
test
ror
in
add
cmp
sar
sbb
push
mov
aaa
adc
cs
lds
and
add
or
adc
cmp
ss
jl
popa
les
inc
movs
dec
inc
cmp
fs
daa
(bad)
ja
dec
aam
add
push
dec
aad
aas
push
idiv
in
mov
test
pop
in
pcmpgtw
inc
addr16
hlt
jno
sbb
pop
pop
outs
push
lahf
xchg
mov
gs
mov
aam
sti
push
mov
inc
mov
adc
mov
mov
jo
inc
mov
fbld
xchg
cmps
mov
pusha
stos
push
cli
mov
xor
in
xlat
jmp
mov
(bad)
lahf
scas
fiadd
(bad)
stc
push
test
xor
lds
xchg
xlat
xor
add
out
(bad)
hlt
data16
xor
adc
loop
lds
jnp
add
test
jg
xor
cmp
adc
ds
aaa
push
movs
pop
lock
lds
pop
cmps
push
daa
lfs
xor
adc
pop
push
jbe
and
jb
adc
inc
pop
aam
or
push
popa
aad
aas
pop
div
push
in
mov
test
adc
bound
pop
out
addr16
hlt
jge
jg
inc
jne
cmc
pop
pop
push
add
push
mul
test
push
scas
xchg
jne
xchg
hlt
adc
xchg
mov
and
jo
inc
mov
iret
and
xchg
pusha
test
xor
fild
leave
and
xchg
scas
mov
push
iret
add
xor
xchg
(bad)
xor
add
lods
(bad)
out
je
and
adc
fistp
aaa
test
shl
push
add
and
or
sbb
push
adc
add
movs
adc
pextrw
xor
pop
movs
adc
cmps
sbb
loopne
aad
xor
or
ins
push
popa
les
push
lds
pop
mov
aam
or
push
cs
aas
js
jl
dec
in
mov
test
gs
pop
nop
push
addr16
hlt
push
mov
dec
cmc
inc
pop
ins
push
mov
push
lock
std
add
xchg
xchg
jne
xchg
cwde
adc
mov
nop
inc
xchg
movs
mov
es
pusha
mov
lahf
mov
xor
loopne
in
inc
fst
in
and
call
(bad)
icebp
push
retf
xor
lds
shl
retf
add
mov
popf
data16
out
je
and
adc
call
cmp
ins
shl
in
add
daa
xchg
shl
adc
cmp
movs
sub
and
sbb
adc
inc
aad
xor
sub
inc
push
xor
pop
nop
xor
inc
das
pop
(bad)
outs
inc
jl
dec
add
push
dec
aad
aas
push
inc
ja
in
mov
test
pop
in
lsl
outs
addr16
or
jb
dec
pop
jle
lods
xchg
test
gs
mov
aad
mov
mov
inc
mov
adc
xor
inc
test
iret
cdq
xchg
mov
cmps
mov
xor
in
hlt
inc
int
into
and
mov
stc
push
mov
xor
mov
shl
into
add
(bad)
(bad)
out
fsub
xor
adc
(bad)
lahf
mov
pusha
shl
add
pop
xchg
pop
sub
xor
adc
xor
movs
and
push
lds
and
and
adc
inc
aad
xor
or
push
nop
ins
movs
dec
inc
inc
lds
das
push
(bad)
push
inc
jg
dec
cmp
push
push
je
push
div
push
in
mov
test
push
in
vmwrite
push
addr16
hlt
dec
mov
pop
cmc
pop
pop
push
add
push
mov
test
push
lods
xchg
jne
xchg
stos
adc
xchg
mov
and
jo
inc
out
shl
cmps
mov
push
lahf
mov
xor
rcl
fiadd
leave
and
xchg
scas
clc
inc
out
(bad)
out
rol
xor
ret
jbe
not
add
jmp
cmc
data16
(bad)
je
and
adc
lock
lds
pusha
shl
ds
xchg
adc
adc
push
mov
aaa
dec
movs
adc
sbb
outs
and
push
cmps
sbb
pop
mov
loopne
aad
xor
push
(bad)
ins
push
ins
les
jo
jb
jl
or
pop
(bad)
pop
inc
addr16
cmp
push
and
fs
push
test
in
mov
test
push
in
(bad)
out
addr16
hlt
inc
mov
or
push
test
hlt
lods
test
add
mov
inc
mov
adc
(bad)
mov
and
jo
inc
hlt
movs
and
cmps
xchg
pusha
mov
xor
loopne
hlt
inc
mov
lds
inc
sti
(bad)
icebp
push
fadd
mov
push
fidivr
lds
xchg
add
in
iret
cmps
out
je
and
adc
(bad)
lahf
out
and
sub
add
add
add
pop
cmc
es
push
sub
adc
and
and
cmp
pop
daa
sbb
pop
loopne
aad
xor
add
jl
push
movs
push
inc
jae
inc
das
ins
mov
aam
adc
push
das
aad
aas
data16
in
mov
test
pop
in
unpckhps
dec
addr16
hlt
adc
or
push
mov
push
lea
test
push
mov
inc
mov
adc
mov
jo
inc
stos
movs
fbld
xchg
cmps
mov
push
mov
(bad)
push
in
call
and
mov
stc
push
int
stos
xor
(bad)
mov
shl
add
ror
iret
je
and
adc
fcomp
xor
jg
and
ds
and
push
shr
adc
es
aaa
push
movs
inc
lock
addr16
or
xor
xor
or
les
dec
movs
adc
push
lds
push
(bad)
gs
push
aam
add
push
pop
aad
aas
push
test
in
mov
test
adc
sub
arpl
push
addr16
inc
mov
push
cmc
pop
pop
push
add
push
mul
test
push
scas
xchg
adc
mov
jo
inc
hlt
movs
and
cmps
mov
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
lock
cli
push
mov
movs
xor
ret
jbe
test
add
lods
vprotb
je
and
adc
fistp
aaa
test
adc
dec
add
or
and
pop
cmc
and
sub
and
pop
movs
adc
pop
lds
and
and
daa
loopne
aad
xor
inc
(bad)
adc
les
inc
push
or
push
(bad)
arpl
aam
add
push
das
aad
aas
pop
not
push
in
mov
test
add
jae
add
push
addr16
hlt
push
mov
inc
cmc
pop
pop
fs
fist
mov
mov
add
xchg
jne
xchg
mov
(bad)
call
and
jo
inc
jmp
fsub
and
push
mov
mov
inc
jecxz
loope
(bad)
lds
inc
aad
stc
push
leave
add
xor
lds
sahf
test
fild
test
je
and
adc
(bad)
lahf
clc
xchg
and
imul
outs
daa
xchg
pop
jns
push
rcl
add
es
aaa
push
movs
add
adc
movs
jb
and
pop
loopne
aad
xor
dec
(bad)
jl
pusha
les
jae
pop
inc
ins
lds
pop
(bad)
jns
fs
cmp
push
ins
aad
aas
jge
dec
ja
in
mov
test
in
unpckhps
push
addr16
hlt
push
mov
(bad)
cmc
pop
pop
outs
push
xchg
mov
add
mov
inc
pushf
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
fisub
sahf
cmps
xchg
pusha
xchg
push
call
push
in
lods
inc
ret
and
mov
stc
push
int3
add
xor
cld
mov
in
in
xor
add
repz
out
je
and
adc
fstp
xor
add
je
es
sub
rol
inc
adc
imul
lock
push
and
and
adc
xor
das
(bad)
push
nop
ins
movs
pop
inc
popa
lds
das
pop
(bad)
push
inc
and
imul
push
div
push
push
mov
test
in
cmovns
push
addr16
hlt
ins
mov
jo
pop
pop
dec
push
xchg
xchg
lock
push
cmc
gs
test
push
fld
stos
jne
xchg
jmp
mov
mov
fwait
movs
mov
xchg
cmps
lods
xor
pusha
cmps
push
mov
mov
hlt
xlat
aam
out
leave
and
xchg
scas
iret
inc
test
mov
push
(bad)
mov
jmp
in
ror
(bad)
je
and
adc
(bad)
lahf
jmp
shl
test
pop
jns
jo
sbb
push
adc
ds
aaa
sub
lds
pop
cmps
sbb
loopne
aad
xor
pop
(bad)
inc
push
popa
les
nop
jae
inc
jb
adc
inc
(bad)
outs
inc
addr16
add
push
das
aad
aas
ins
test
in
mov
test
jns
pop
cmovne
jg
push
hlt
dec
mov
add
pop
pop
push
mov
mov
call
mov
mov
adc
inc
xor
call
and
jo
inc
mov
mov
es
iret
xor
pusha
xchg
push
mov
fistp
inc
sti
adc
and
nop
scas
fild
(bad)
fst
mov
push
ret
jbe
div
shl
out
(bad)
in
gs
leave
data16
and
adc
int
lds
ins
rcr
in
add
xor
daa
pop
es
and
pusha
cmc
sbb
ds
aaa
adc
sub
and
cmp
sbb
ds
loopne
aad
xor
adc
dec
push
ins
les
imul
pop
inc
pop
aam
add
push
ins
aad
aas
pop
test
in
mov
test
pop
in
(bad)
out
addr16
hlt
push
mov
add
popw
outs
push
stos
xchg
test
gs
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
popf
movs
fsub
mov
mov
push
popf
mov
xor
into
xlat
out
inc
in
retf
(bad)
shr
push
call
aad
push
cmp
lds
mov
int
mov
and
adc
out
lahf
out
xchg
xor
aaa
test
and
cmp
sub
push
rcr
cmp
push
mov
aaa
or
and
and
pop
loopne
aad
xor
adc
les
ins
movs
or
lds
das
pop
(bad)
push
inc
jg
dec
adc
push
cs
aas
ins
not
or
push
mov
test
adc
xor
push
out
addr16
hlt
inc
mov
dec
cmc
pop
pop
imul
out
mov
mov
mov
lods
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
iret
call
pusha
xchg
push
stos
mov
xor
cmc
xlat
test
mov
inc
inc
rcl
mov
push
(bad)
mov
into
fs
xor
xlat
(bad)
fsub
out
je
and
adc
fistp
aaa
test
sbb
aaa
add
and
xchg
adc
or
pop
adc
push
mov
aaa
and
and
adc
mov
loopne
aad
xor
push
(bad)
outs
push
imul
inc
inc
dec
lds
inc
(bad)
jae
fs
cmp
das
aad
aas
push
not
in
mov
test
jno
xor
add
pop
addr16
push
mov
inc
cmc
inc
pop
jb
adc
mov
jecxz
stos
inc
mov
adc
mov
and
movs
cwde
and
and
push
mov
into
xor
retf
inc
(bad)
adc
and
xchg
scas
mov
push
aam
cld
xor
lock
in
fdiv
retf
add
lods
(bad)
jmp
out
je
and
jne
lahf
(bad)
xchg
cs
test
in
add
sbb
xor
aas
cmc
sbb
ds
aaa
sub
and
and
mov
loopne
aad
xor
ss
jl
outs
les
inc
movs
pop
inc
cmp
je
pop
(bad)
ja
data16
add
push
dec
aad
aas
push
idiv
in
mov
test
in
cmovs
inc
addr16
ins
mov
or
push
lods
xchg
lods
add
push
mov
enter
xchg
out
test
mov
inc
pushf
jne
xchg
mov
movs
mov
and
jo
inc
xchg
mov
xor
pusha
xchg
push
sti
mov
xor
int3
xlat
out
inc
mov
(bad)
xchg
scas
mov
push
iret
add
push
(bad)
mov
jmp
push
jecxz
stos
in
test
aad
leave
cmc
ret
jne
lahf
into
xchg
aas
pop
push
test
and
sbb
xchg
pop
cmp
adc
outs
mov
aaa
das
movs
pop
lock
es
add
daa
loopne
aad
xor
adc
les
nop
pop
movs
dec
inc
lds
push
(bad)
jae
arpl
dec
sub
jg
das
aad
aas
ins
neg
jo
pop
mov
test
add
nop
addr16
hlt
push
mov
or
ins
pop
push
add
push
test
mov
mov
mov
movs
adc
inc
mov
xchg
mov
ss
mov
and
jo
inc
out
lods
and
and
push
div
int
hlt
xlat
jmp
(bad)
xchg
scas
mov
out
(bad)
out
ret
xor
ret
mov
loop
xlat
xor
add
mov
loopne
(bad)
je
and
adc
ret
lahf
les
pusha
shl
push
add
and
or
sbb
ss
add
movs
sub
and
and
push
loopne
aad
xor
add
les
nop
inc
movs
or
lds
dec
(bad)
outs
inc
and
xor
and
push
aas
sub
inc
ja
in
mov
test
push
in
cmovbe
pop
addr16
hlt
data16
js
pop
pop
outs
push
mov
mov
test
add
mov
inc
xchg
xchg
xchg
adc
(bad)
mov
and
jo
inc
test
iret
cwde
es
pusha
xchg
mov
xor
in
xlat
loopne
clc
adc
and
xchg
scas
mov
push
int3
add
push
aad
hlt
jbe
imul
fs
add
in
aad
fucom
shl
rcl
lahf
les
jnp
add
pop
add
cmp
or
sub
sbb
xor
push
aaa
pop
movs
sub
and
pop
cmps
cmp
inc
mov
loopne
aad
xor
ss
jl
xor
bound
pop
lds
das
pop
mov
aam
cmp
push
and
add
push
test
in
mov
test
in
nop
jno
pop
hlt
push
mov
dec
cmc
jbe
imul
xchg
mov
mov
test
add
nop
xchg
mov
(bad)
jmp
stos
mov
and
jo
inc
lods
movs
fbld
mov
pusha
xchg
push
push
call
adc
and
ret
inc
fld
stc
push
aam
cmps
xor
cld
mov
out
test
rol
int
leave
data16
out
je
and
adc
clc
lahf
les
data16
in
add
or
xor
cmp
inc
adc
sub
push
lock
aaa
and
and
adc
dec
aad
xor
adc
push
nop
movs
adc
jb
push
das
push
(bad)
jo
ins
aam
add
push
ins
aad
aas
ins
mul
in
mov
test
push
in
cmovns
push
addr16
hlt
ins
mov
inc
cmc
pop
pop
outs
push
movs
xchg
scas
add
push
cmc
mov
add
mov
mov
adc
xchg
mov
and
jo
inc
xchg
and
cmps
lahf
xor
pusha
xchg
push
test
pushf
xor
int3
xlat
test
mov
inc
rol
out
aad
icebp
xor
iret
mov
shl
enter
fsub
(bad)
xchg
retw
je
and
adc
fcomp
or
add
and
or
or
sbb
jg
mov
aaa
shld
sbb
aaa
and
and
push
loopne
aad
xor
push
(bad)
ins
push
sub
jnp
dec
movs
dec
inc
push
or
pop
mov
addr16
adc
push
inc
aad
aas
imul
pop
mov
test
imul
jl
push
hlt
push
mov
or
push
adc
gs
std
add
xchg
xchg
jne
xchg
mov
mov
xchg
inc
mov
stos
es
cmps
xchg
mov
xor
call
adc
inc
std
scas
mov
push
retf
xor
stc
mov
(bad)
shl
fadd
out
jmp
and
adc
mov
pop
xor
add
daa
xchg
pop
sbb
adc
sbb
sbb
add
movs
or
and
cmp
push
loopne
aad
xor
adc
pop
push
xor
sub
inc
movs
push
inc
cmp
dec
das
gs
ja
jle
inc
add
push
jns
inc
aas
push
div
ja
in
mov
test
pop
in
punpckhbw
inc
addr16
hlt
sbb
jne
cmc
jo
ja
lods
xchg
xchg
add
push
xchg
gs
test
add
mov
inc
mov
adc
mov
and
mov
test
test
mov
pusha
xchg
push
cld
mov
xor
not
repz
mov
korw
scas
clc
inc
aad
in
repnz
push
(bad)
mov
out
fs
xor
add
fisttp
fbstp
popf
adc
repnz
les
jnp
and
push
add
or
outs
rcl
inc
adc
ds
aaa
shld
push
lds
inc
cmps
xor
add
or
pop
aad
xor
adc
les
nop
jae
inc
inc
jae
adc
cmp
cmova
sbb
push
cs
aas
push
not
push
jg
outs
test
push
in
cmovns
pop
addr16
hlt
dec
mov
inc
cmc
addr16
js
test
mov
gs
test
push
ret
adc
inc
mov
adc
sahf
mov
and
jo
inc
test
pushf
and
xchg
cmps
popf
xor
pusha
stos
push
mov
fistp
inc
cmps
adc
and
lahf
scas
mov
push
into
add
push
(bad)
mov
retf
fs
xor
add
ret
(bad)
out
je
and
adc
fcomp
aaa
test
jno
push
add
daa
xchg
pop
add
adc
sub
inc
lock
outs
and
cmp
pop
daa
pop
mov
loopne
aad
xor
push
(bad)
outs
push
jl
addr16
jae
dec
inc
jl
or
dec
(bad)
arpl
aam
sbb
push
cs
aas
ins
test
in
mov
test
in
sysret
out
addr16
push
mov
inc
cmc
pop
pop
pop
push
rcl
cli
gs
test
add
mov
inc
xchg
jne
xchg
hlt
adc
mov
cmps
inc
scas
movs
mov
and
mov
rcl
test
and
fild
loope
retf
xor
lds
(bad)
fs
add
out
leave
data16
xor
ret
lahf
les
ins
shl
dec
outs
and
add
push
cmc
sbb
cmp
and
das
lds
inc
movs
and
cmp
pop
loopne
aad
xor
sbb
inc
push
imul
push
inc
cmp
push
das
cmp
jae
outs
aam
add
push
ins
aad
aas
push
not
dec
in
mov
test
in
pcmpeqd
inc
addr16
hlt
push
mov
push
cmc
popw
add
mov
lods
add
push
cmc
gs
mov
aad
add
xchg
adc
ss
and
jo
inc
lods
movs
mov
and
push
mov
xor
xlat
repz
lods
adc
and
lock
mov
push
jmp
push
sar
xchg
fs
xor
add
loop
shl
fdiv
loop
call
lahf
les
add
je
adc
outs
and
jo
pop
cmc
add
or
adc
add
jo
daa
movs
xor
cmps
xor
pop
mov
loopne
aad
xor
adc
pop
push
jbe
and
jno
push
das
pop
mov
aam
and
arpl
jae
ins
not
jae
jno
pusha
test
gs
pop
movq
push
addr16
hlt
imul
cmc
cs
inc
push
xchg
mul
test
push
cmps
xchg
adc
fbld
movs
fbld
xchg
cmps
scas
xor
pusha
xchg
push
lea
call
adc
and
(bad)
in
repz
xor
jecxz
movs
jbe
test
add
jmp
je
and
adc
fstp
aaa
test
rcl
in
add
and
or
sbb
pop
adc
movzx
lock
sub
pop
cmps
aas
daa
push
mov
loopne
aad
xor
adc
les
nop
pop
movs
or
das
pop
(bad)
popa
inc
pop
aam
and
push
pop
aad
aas
push
imul
in
mov
test
pcmpgtd
pop
addr16
hlt
adc
jne
cmc
bound
outs
push
leave
xchg
mov
mov
hlt
gs
test
add
xchg
xchg
jne
xchg
(bad)
adc
icebp
mov
and
jo
inc
lods
movs
mov
es
test
mov
xor
not
retf
adc
and
sahf
scas
cli
inc
sti
(bad)
in
push
int
cld
xor
cld
mov
fisub
retf
in
gs
int
ret
out
je
and
adc
fstp
sub
cmp
add
cmp
pop
sar
sbb
sub
movs
adc
adc
sub
pop
cmps
sbb
sbb
xor
xor
adc
popa
push
pop
les
nop
xor
push
das
jns
ja
js
push
add
push
sub
jge
data16
in
mov
test
jl
bound
pop
out
addr16
push
mov
push
push
rcl
and
out
cwde
push
ret
adc
inc
mov
test
jmp
and
jo
inc
stos
movs
fbld
and
push
mov
fbstp
inc
not
loopne
(bad)
(bad)
lock
mov
push
rol
repz
into
mov
shl
retf
in
gs
hlt
data16
fbstp
aam
out
mov
lahf
not
jnp
and
adc
jl
dec
outs
and
push
rcl
sbb
cmp
push
lock
lds
and
or
add
pop
aad
xor
adc
inc
push
jbe
gs
outs
movs
adc
cmp
adc
push
jae
jae
cmp
inc
mov
push
inc
aad
aas
jle
push
ja
in
mov
test
inc
in
packssdw
push
addr16
hlt
sbb
jne
cmc
pop
pop
push
push
fist
cmc
gs
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
sahf
es
cmps
scas
xor
pusha
lds
mov
xor
not
fadd
into
and
xchg
scas
loopne
sti
(bad)
out
rol
mov
push
les
into
shl
mov
lock
std
data16
and
adc
ficomp
je
xor
cmp
dec
outs
jbe
or
sbb
sbb
jg
mov
aaa
pop
movs
adc
sbb
adc
and
push
loopne
aad
xor
xor
ins
push
popa
les
je
dec
inc
inc
lds
imul
dec
xor
push
das
aad
aas
push
test
in
mov
test
push
in
nop
outs
addr16
hlt
push
jge
jns
outs
cmc
inc
pop
pop
push
mov
push
mov
mov
mov
xchg
mov
adc
mov
mov
lods
movs
fisub
out
mov
pusha
mov
xor
loopne
mov
fst
mov
call
scas
aam
cld
(bad)
aam
leave
add
push
(bad)
mov
leave
fs
xchg
add
out
(bad)
out
je
and
adc
int
(bad)
xchg
or
add
add
sbb
ja
pop
cmc
sbb
jg
mov
aaa
adc
aaa
lock
lds
sbb
adc
sbb
adc
inc
aad
xor
xor
jl
xor
movs
adc
lds
pop
(bad)
je
je
dec
or
push
ins
aad
aas
imul
push
mov
test
dec
in
lsl
inc
addr16
hlt
inc
mov
or
push
lods
xchg
add
clc
add
mov
inc
mov
xchg
loop
xchg
call
and
jo
inc
jmp
fbld
xchg
cmps
cdq
xor
pusha
mov
xor
call
adc
and
(bad)
cmps
push
call
aad
push
(bad)
mov
xchg
fs
xor
gs
data16
test
les
fcomp
xor
jg
or
cmp
jle
push
outs
or
and
pop
cmc
or
or
xor
daa
movs
pop
lock
lds
and
add
xor
adc
es
dec
(bad)
outs
push
jbe
daa
nop
sub
arpl
inc
(bad)
jae
cs
sbb
push
ja
inc
aas
ins
neg
dec
in
mov
test
sbb
lsl
ins
addr16
dec
mov
inc
cmc
push
pop
dec
push
test
lods
add
push
cmc
mov
mov
pushf
xchg
adc
inc
stos
jne
xchg
in
adc
xchg
mov
and
jo
inc
hlt
movs
test
xchg
cmps
sahf
xor
pusha
mov
cmps
mov
xor
in
jecxz
out
mov
fadd
mov
inc
(bad)
(bad)
cmps
push
mov
(bad)
xor
aam
call
shl
mov
(bad)
xchg
data16
out
je
and
jne
lahf
(bad)
xchg
push
pop
add
in
add
cmp
jo
ss
push
adc
push
mov
aaa
pop
movs
adc
push
lds
and
cmp
mov
loopne
aad
xor
adc
ins
push
outs
les
nop
jo
jns
pop
lds
das
inc
(bad)
push
inc
addr16
and
push
ja
jl
ins
imul
in
mov
test
inc
in
andps
jg
push
hlt
adc
push
cmc
je
push
push
adc
mov
mov
fwait
xchg
adc
inc
mov
adc
and
movs
xchg
and
xchg
cmps
sahf
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
retf
xor
out
(bad)
jbe
imul
xor
add
dec
les
out
mov
lahf
(bad)
xchg
add
adc
add
jg
daa
pop
ds
xadd
xchg
push
jg
mov
aaa
or
and
cmps
bound
xor
xor
adc
les
sub
lds
das
cmp
jo
dec
aam
add
push
ins
aad
aas
das
test
in
mov
test
dec
in
cmovg
ja
arpl
pop
mov
or
inc
pop
inc
push
lods
xchg
add
test
push
mov
inc
mov
adc
mov
xchg
movs
fbld
xchg
cmps
scas
xor
pusha
xchg
push
mov
fbstp
stc
adc
inc
lock
mov
push
call
aad
push
ret
jbe
test
add
jecxz
into
data16
div
call
rcr
xor
(bad)
rcr
in
add
or
sub
pop
cmc
or
add
xor
add
and
and
adc
and
mov
pop
adc
pop
push
jbe
and
jno
adc
and
jae
and
ja
pop
mov
push
and
inc
aas
pop
test
in
mov
test
push
in
cmovns
pop
addr16
hlt
adc
inc
cmc
pop
pop
pop
push
adc
gs
mov
fucomip
mov
adc
inc
test
xchg
in
adc
xchg
mov
and
jo
inc
lods
movs
test
scas
cmps
mov
xchg
pusha
cmps
push
cli
mov
xor
hlt
xlat
in
inc
(bad)
adc
and
xchg
scas
cmc
inc
out
out
enter
adc
push
lds
shl
add
ror
(bad)
je
and
adc
call
jg
add
sbb
dec
add
and
jl
popa
cmc
sbb
jg
mov
aaa
push
movs
aaa
lock
movs
ss
and
or
dec
aad
xor
push
(bad)
ins
push
xor
pop
nop
pusha
movs
or
lds
pop
(bad)
popa
inc
arpl
jb
dec
mov
push
das
aad
aas
push
in
mov
test
gs
imul
out
addr16
hlt
ja
add
dec
pop
inc
push
mov
test
test
add
mov
inc
mov
adc
lods
mov
and
jo
inc
lods
movs
and
cmps
xor
nop
push
mov
fistp
inc
not
retf
and
xchg
scas
mov
push
mov
aad
push
clc
mov
in
shl
retf
add
mov
out
je
and
adc
ficomp
and
add
xchg
pop
es
or
adc
ja
push
aaa
cmp
pop
lock
movs
adc
cmps
jge
sbb
xor
dec
(bad)
ins
push
popa
les
nop
pop
movs
dec
inc
lds
arpl
add
add
push
jl
inc
aas
push
idiv
ja
in
mov
test
pop
in
(bad)
out
addr16
hlt
jo
inc
xchg
ss
cmc
pop
pop
push
add
push
in
gs
test
push
mov
mov
jne
xchg
in
adc
pushf
mov
and
jo
inc
mov
iret
test
mov
pusha
xchg
push
mov
lods
xor
not
out
inc
mov
lds
inc
in
cmps
push
rol
xor
(bad)
mov
leave
fs
rol
pop
data16
fbstp
enter
ret
jne
lahf
not
jg
sub
adc
cmp
and
cmp
adc
sbb
aas
lock
lds
and
xor
mov
loopne
aad
xor
xor
les
dec
movs
adc
lds
das
push
(bad)
addr16
inc
aam
add
push
dec
aad
aas
je
push
ja
in
mov
test
gs
cvtdq2ps
pop
addr16
hlt
push
mov
or
pop
pop
js
mov
push
movs
gs
test
xchg
xchg
adc
ss
jo
inc
out
(bad)
mov
pusha
ret
push
mov
fbld
inc
not
leave
and
xchg
scas
mov
push
int
jmp
mov
into
fs
xor
add
loop
enter
push
(bad)
adc
jecxz
lds
or
add
pop
xchg
pop
ds
add
sbb
add
imul
sub
pop
movs
jne
add
push
loopne
aad
xor
push
(bad)
outs
push
pop
les
movs
je
and
push
das
pop
(bad)
arpl
aam
add
push
sub
test
in
mov
test
push
in
cvtps2pd
jge
add
push
mov
or
es
outs
push
adc
gs
test
xchg
xchg
jne
xchg
mov
mov
mov
pushf
movs
xchg
and
and
retf
xor
out
xlat
hlt
inc
mov
(bad)
(bad)
scas
aam
sti
(bad)
fist
mov
push
out
mov
leave
test
retf
in
lds
xor
adc
fstp
sub
jnp
and
or
sbb
or
adc
cmp
sub
and
add
xor
pop
aad
xor
adc
jl
imul
nop
jo
jl
cmp
mov
aam
add
push
ins
aad
aas
pop
test
in
mov
test
in
unpckhps
and
hlt
push
mov
or
push
lods
xchg
test
gs
test
push
mov
inc
mov
adc
icebp
mov
and
jo
inc
lea
fsub
test
retf
mov
xor
hlt
xlat
inc
int3
and
loop
inc
(bad)
stc
push
into
add
push
(bad)
mov
mul
lds
fisttp
fbstp
loopne
out
ret
jne
lahf
out
xchg
xor
adc
add
cmp
xchg
add
adc
ds
aaa
or
pop
lock
movs
and
cmps
fs
add
adc
pop
aad
xor
adc
les
nop
ins
movs
inc
inc
jno
adc
inc
(bad)
jae
jnp
pop
xor
pop
aad
aas
push
test
in
mov
test
push
in
packuswb
push
addr16
hlt
ins
mov
inc
cmc
pop
pop
js
test
add
hlt
gs
mov
push
mov
movs
adc
inc
xor
jmp
and
jo
inc
out
fwait
and
xchg
cmps
xchg
xor
pusha
xchg
mov
xor
(bad)
mov
lods
adc
and
xchg
scas
mov
push
enter
sahf
aad
push
(bad)
mov
into
shl
fadd
in
enter
xor
(bad)
jne
lahf
aad
sub
jo
pusha
shl
dec
add
add
add
es
sbb
jg
mov
aaa
pop
movs
add
push
lds
cmp
push
loopne
aad
xor
cmp
outs
push
inc
les
jo
outs
inc
imul
jae
push
aam
add
push
push
aad
aas
dec
test
in
mov
test
push
in
cvtps2pd
push
addr16
hlt
pusha
mov
outs
cmc
push
pop
outs
push
mov
push
mul
test
add
mov
inc
out
mov
jmp
xor
inc
stos
movs
cmps
and
xchg
cmps
nop
xor
pusha
xchg
push
div
mov
xchg
xlat
retf
adc
and
xchg
scas
mov
push
into
add
push
pushf
mov
shl
retf
in
gs
sti
data16
lock
and
adc
rcr
sub
adc
pop
in
add
push
xchg
pop
es
push
rcr
add
ja
push
aaa
xor
and
sub
adc
add
cmp
adc
push
push
imul
jle
cmp
adc
cmp
ja
fs
add
push
inc
aad
aas
jle
dec
ja
in
mov
test
push
in
lsl
dec
addr16
hlt
dec
mov
js
push
pop
outs
push
lods
xchg
xchg
add
push
mul
test
push
mov
mov
jne
xchg
lods
adc
xchg
mov
and
jo
inc
xchg
movs
fbld
popf
cmps
cdq
xor
pusha
mov
xor
in
aad
repz
inc
mov
iret
push
aam
std
xor
(bad)
mov
fisub
lds
fisttp
shl
adc
fcomp
xor
and
or
adc
outs
and
or
adc
cmp
xor
sbb
aaa
and
cmp
add
add
adc
cmp
jle
dec
mov
pop
adc
dec
push
jbe
and
cmp
dec
das
aas
(bad)
jnp
push
aam
sbb
(bad)
aad
aas
push
neg
inc
in
mov
test
pop
in
sysret
out
addr16
inc
mov
or
inc
pop
js
test
test
in
push
hlt
gs
test
push
mov
movs
adc
inc
loopne
adc
mov
nop
jo
inc
jmp
es
cmps
sahf
xor
pusha
mov
xor
(bad)
inc
ficom
ret
and
xchg
scas
mov
push
rol
xor
aad
stos
jbe
test
add
jmp
je
and
adc
cli
lahf
rcl
aaa
shl
in
add
and
or
adc
and
sub
add
mov
aaa
pop
movs
add
or
xor
and
adc
or
xor
pop
push
(bad)
ins
push
outs
les
nop
jo
or
lds
dec
(bad)
popa
inc
addr16
add
push
inc
aad
aas
jne
dec
ja
in
mov
test
pop
in
cmovp
push
addr16
hlt
adc
ins
cmc
inc
pop
pop
push
mov
push
mov
test
add
cmps
xchg
adc
inc
mov
adc
xor
inc
mov
xchg
and
test
xchg
push
mov
fist
inc
mov
(bad)
xchg
scas
ret
(bad)
fist
ret
aad
push
ret
jbe
idiv
fs
xchg
add
out
shl
bnd
and
adc
aad
mov
adc
and
adc
and
or
cmp
sbb
sbb
adc
sbb
outs
and
aas
cmps
and
adc
pop
loopne
aad
xor
xor
jle
les
nop
ja
push
inc
cmp
adc
dec
(bad)
jg
jns
ja
dec
mov
push
das
aad
aas
pop
imul
dec
in
mov
test
in
unpckhps
push
addr16
push
mov
or
push
movs
xchg
mov
mov
fwait
gs
test
push
lods
xchg
jne
xchg
cwde
adc
pushf
mov
and
jo
inc
lods
movs
fisub
xchg
cmps
test
mov
xor
(bad)
in
inc
lods
adc
and
(bad)
mov
xor
jecxz
clc
jbe
not
fs
xor
add
aad
retf
out
je
and
adc
sti
lahf
jmp
test
es
add
add
sub
pop
cmc
inc
adc
outs
mov
aaa
push
movs
sub
and
and
adc
pop
aad
xor
sbb
les
jb
pop
inc
popa
lds
das
push
(bad)
arpl
aam
adc
push
ins
aad
aas
sub
dec
ja
in
mov
test
push
in
andps
gs
hlt
dec
mov
or
and
push
push
test
jmp
mov
movs
adc
inc
xor
(bad)
mov
and
jo
inc
mov
iret
and
popf
pusha
xchg
push
mov
fistp
inc
out
icebp
and
xchg
scas
retf
(bad)
aam
retf
add
push
fdivr
into
fnsave
rol
lods
(bad)
out
je
and
adc
call
test
shl
in
add
push
xchg
pop
ds
jbe
push
cmc
sbb
jg
mov
aaa
push
movs
sbb
or
xor
sbb
pop
loopne
aad
xor
sbb
ins
push
ins
les
push
movs
je
arpl
pusha
das
pop
(bad)
jno
data16
add
push
dec
aad
aas
push
test
in
mov
test
push
in
divps
jg
push
hlt
dec
mov
inc
cmc
pop
pop
outs
push
adc
gs
out
mov
mov
inc
mov
adc
mov
mov
xchg
movs
shl
loopne
xchg
pusha
xchg
push
lods
mov
xor
(bad)
retf
adc
and
iret
scas
aam
add
push
leave
add
push
(bad)
mov
(bad)
fs
loope
lock
test
je
and
adc
fstp
xor
in
add
and
and
sbb
pop
adc
or
sub
adc
sbb
adc
movs
or
cmps
jge
add
xor
adc
inc
push
pop
les
nop
jb
dec
inc
dec
lds
das
pop
(bad)
push
inc
fs
and
pop
push
pop
aad
aas
push
test
in
mov
test
pop
in
unpcklps
ja
inc
hlt
push
mov
jg
popw
outs
push
xchg
xchg
mov
loope
jmp
add
mov
inc
xor
(bad)
jmp
and
jo
inc
mov
iret
call
pusha
lahf
push
cli
mov
xor
icebp
xlat
lds
retf
(bad)
mov
clc
push
inc
mov
push
sar
aad
cld
xor
add
ror
fidiv
loop
loop
ret
jne
lahf
int
push
pop
sub
add
and
or
adc
cs
aaa
and
and
or
adc
inc
aad
xor
cmp
les
ins
movs
gs
pop
lds
das
push
mov
aam
and
push
sub
jo
push
neg
jbe
fs
test
push
in
andnps
pop
addr16
hlt
jle
jg
jp
pop
cmc
pop
pop
ins
push
(bad)
xchg
mov
gs
push
scas
xchg
adc
inc
loopne
adc
stos
and
jo
inc
xchg
movs
and
cmps
xor
mov
hlt
xlat
cmc
inc
into
adc
and
xchg
scas
mov
push
into
add
xor
(bad)
mov
retf
xor
add
out
popf
data16
and
adc
les
aaa
test
rcl
in
add
cmp
xor
popa
cmc
sbb
jg
mov
aaa
pop
movs
push
lock
xor
and
add
adc
xor
pop
push
(bad)
pusha
push
popa
les
xor
ins
das
dec
(bad)
push
inc
outs
aam
add
push
dec
aad
aas
jge
inc
ja
in
mov
test
jns
cmovs
inc
addr16
hlt
pop
mov
or
push
adc
gs
stc
add
mov
inc
mov
adc
mov
cmps
and
jo
inc
mov
fisub
and
stos
xor
(bad)
xlat
test
and
xchg
scas
mov
push
rol
mov
push
(bad)
mov
shl
lds
xlat
(bad)
out
je
and
adc
mov
pop
sub
add
and
xchg
adc
adc
sbb
cmp
movs
sub
and
cmp
mov
loopne
aad
xor
cmp
push
push
push
les
nop
cmp
pop
das
cmp
jg
pusha
aam
and
sbb
aad
aas
and
in
mov
test
in
minps
inc
addr16
hlt
dec
mov
push
cmc
pusha
pop
pop
push
scas
xchg
test
gs
test
push
mov
inc
mov
adc
icebp
mov
and
jo
inc
lods
movs
(bad)
xchg
cmps
cdq
xor
pusha
rcl
retf
fistp
inc
out
adc
and
mov
ficom
(bad)
xor
out
clc
jbe
test
add
mov
retf
out
je
and
jne
lahf
les
and
and
push
add
and
shl
adc
ds
aaa
push
movs
adc
adc
cmp
xor
xor
add
or
pop
aad
xor
adc
les
ins
movs
push
das
pop
(bad)
jl
jg
dec
and
push
arpl
inc
aas
sub
pop
ja
in
mov
test
jns
dec
sysret
out
addr16
hlt
jne
jg
ss
cmc
pop
pop
push
add
push
test
xchg
test
push
lods
xchg
jne
xchg
in
adc
mov
mov
out
cmps
and
out
mov
push
lea
iret
push
ret
inc
mov
(bad)
(bad)
scas
mov
push
enter
adc
push
sar
into
mov
out
jmp
(bad)
iret
data16
(bad)
je
and
adc
aam
out
xchg
and
jae
pusha
shl
test
outs
daa
xchg
rcr
or
sbb
adc
add
adc
push
lds
and
sub
sub
pop
aad
xor
adc
les
push
lds
pop
(bad)
pop
inc
data16
add
push
sub
div
push
in
mov
test
sbb
imul
inc
hlt
popa
mov
inc
cmc
pop
pop
imul
xchg
mov
loop
mov
pop
mov
mov
inc
mov
adc
mov
aad
mov
xchg
and
mov
xchg
push
test
mov
pushf
fistp
inc
mov
lds
inc
(bad)
push
mov
stos
push
ret
jbe
not
shl
retf
add
in
jmp
out
je
and
jne
lahf
(bad)
xchg
and
shl
dec
add
jne
sbb
shl
adc
pop
mov
aaa
and
and
pop
cmps
sbb
pop
mov
loopne
aad
xor
sub
outs
push
dec
les
nop
jo
gs
jno
adc
push
aam
add
push
ins
aad
aas
jle
dec
ja
in
mov
test
in
unpckhps
cmp
mov
or
push
movs
xchg
mov
call
mov
xchg
adc
inc
mov
xchg
out
adc
mov
jo
inc
xchg
movs
mov
es
pusha
nop
push
movs
mov
xor
in
hlt
inc
xlat
adc
and
mov
mov
xor
fnstsw
leave
fbstp
retf
in
fisttp
fnsave
(bad)
adc
ficomp
xor
adc
daa
in
add
xchg
es
adc
popa
cmc
and
jg
mov
aaa
shld
and
cmp
add
dec
loopne
aad
xor
push
(bad)
ins
push
jbe
es
dec
movs
adc
jno
dec
das
push
(bad)
jle
push
aam
add
push
dec
aad
aas
je
sub
in
mov
test
pop
in
lsl
and
hlt
push
mov
inc
cmc
jnp
push
push
aad
lahf
add
push
xchg
mov
pop
mov
movs
adc
inc
mov
adc
mov
mov
and
mov
test
pusha
mov
xor
cld
xlat
out
inc
movs
adc
and
fisubr
int3
push
int
lock
(bad)
mov
int
out
rol
mov
enter
popf
je
and
jne
lahf
(bad)
xchg
and
aaa
test
rcl
in
add
and
jl
cmp
add
jg
mov
aaa
adc
and
and
push
loopne
aad
xor
push
(bad)
outs
push
jle
addr16
jae
pop
inc
jno
or
pop
(bad)
push
inc
addr16
and
dec
push
dec
aad
aas
jne
inc
ja
in
mov
test
pop
in
nop
jg
push
hlt
push
mov
inc
cmc
inc
pop
push
test
scas
mov
lahf
push
mov
inc
xchg
jne
xchg
mov
ss
mov
and
jo
inc
jmp
xchg
and
xchg
cmps
xchg
pusha
mov
lea
mov
loopne
leave
inc
fcom
mov
retf
inc
xchg
scas
mov
push
out
stos
xor
lock
repnz
xor
mov
leave
data16
fdiv
(bad)
adc
fistp
sub
sbb
jne
adc
outs
and
or
xor
pop
adc
adc
cmp
and
das
cmps
pop
daa
sbb
or
adc
and
adc
jg
(bad)
les
movs
dec
inc
dec
lds
pop
(bad)
pop
inc
fs
sbb
push
ins
aad
aas
data16
in
mov
test
jp
fs
pop
addr16
hlt
dec
mov
or
jne
or
mov
icebp
gs
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
mov
scas
cmps
into
xor
pusha
xchg
push
cli
mov
xor
(bad)
xlat
test
and
mov
stc
push
aam
lds
sar
fs
xor
add
fisttp
fbstp
ret
adc
rcr
sub
jnp
add
pop
add
add
xor
pop
cmc
pop
adc
sub
sbb
sbb
cmp
and
adc
sbb
add
pop
dec
(bad)
adc
les
nop
jb
jbe
jno
adc
(bad)
mov
aam
add
ins
aad
aas
push
imul
pusha
in
mov
test
push
in
cmovnp
push
addr16
pop
mov
dec
cmc
pop
pop
inc
push
test
scas
add
push
test
mov
mov
mov
inc
mov
adc
mov
stos
and
jo
inc
lods
movs
pushf
and
lahf
cmps
popf
xor
pusha
xchg
push
div
mov
inc
mov
(bad)
xchg
scas
mov
fld
out
retf
add
xor
std
mov
ret
fs
xor
add
loope
cli
jmp
(bad)
je
and
adc
mov
pop
sub
add
jg
aas
pop
xor
adc
push
mov
aaa
shld
pop
lds
and
adc
daa
aad
xor
adc
push
push
popa
les
inc
movs
pop
inc
and
bound
push
mov
aam
and
aas
dec
test
in
mov
test
push
in
cmovae
push
addr16
inc
mov
imul
mov
movs
mov
mov
adc
inc
mov
adc
xor
inc
mov
movs
and
and
mov
out
mov
inc
mov
(bad)
xchg
scas
mov
push
ret
xor
sar
hlt
mov
rol
(bad)
(bad)
int
shl
out
xchg
and
adc
fcomp
and
add
add
xchg
jge
adc
xchg
cmp
cmp
movs
sub
and
aas
cmps
cmp
loopne
aad
xor
(bad)
ins
push
imul
dec
inc
ins
lds
dec
(bad)
ja
and
dec
add
push
pop
aad
aas
dec
imul
ja
in
mov
test
sbb
dec
unpckhps
inc
addr16
push
mov
pop
cmc
pop
pop
outs
push
fist
cmc
gs
mov
shr
mov
adc
inc
xchg
jne
xchg
mov
movs
mov
and
jo
inc
xchg
movs
mov
cmps
iret
call
pusha
ret
mov
xor
in
jmp
and
lahf
scas
mov
push
out
add
xor
cwde
mov
xlat
lea
lds
mov
hlt
data16
(bad)
je
and
adc
fcomp
xor
pusha
shl
add
jnp
cmp
sbb
adc
ds
aaa
or
and
push
cmps
sbb
add
push
loopne
aad
xor
aas
(bad)
inc
push
xor
dec
nop
movs
jo
lds
push
(bad)
jo
data16
cmp
sbb
aad
aas
mul
pop
in
mov
test
in
cvtdq2ps
push
addr16
dec
mov
push
cmc
jae
inc
push
test
repnz
push
cmc
pop
mov
xchg
xchg
adc
inc
mov
xchg
xchg
mov
jmp
jo
inc
out
shl
cmps
mov
test
mov
xor
(bad)
test
mov
inc
popf
(bad)
(bad)
push
ret
add
xor
ret
jbe
test
add
repnz
loopne
scas
out
je
and
adc
fcomp
je
cmp
and
or
sbb
sub
jg
mov
aaa
adc
lds
movs
jno
and
or
sub
jp
add
ins
push
jle
jg
jo
gs
inc
lds
pop
(bad)
jno
jg
jb
push
mov
push
jl
pop
aas
ins
not
jne
ins
mov
test
jg
inc
divps
jl
dec
hlt
push
mov
outs
cmc
pop
pop
pop
push
xchg
xchg
mov
jecxz
jmp
add
mov
scas
adc
inc
lahf
jne
xchg
loop
xchg
cmps
ss
mov
and
jo
inc
mov
mov
xor
pusha
xchg
push
mov
fisttp
inc
in
adc
and
loop
out
aad
icebp
push
int
loope
(bad)
cmc
push
(bad)
mov
(bad)
xor
add
dec
in
retf
and
adc
ficomp
and
add
jge
and
push
xchg
adc
add
xchg
cmp
mov
aaa
adc
ds
movs
and
daa
adc
xor
and
les
nop
jno
or
lds
das
arpl
ja
addr16
sub
sbb
aad
aas
push
test
in
mov
test
gs
in
cmova
inc
addr16
hlt
push
mov
add
popw
push
add
push
mul
test
xchg
xchg
adc
inc
mov
adc
xchg
mov
and
jo
inc
lods
movs
fwait
and
mov
pusha
mov
xor
in
cld
inc
cmc
adc
inc
repnz
loopne
rol
push
fadd
stos
xor
cld
mov
leave
xlat
xor
add
fisttp
cmc
je
and
adc
ret
lahf
mov
ins
shl
in
add
jle
cmp
xor
adc
ds
aaa
pop
movs
pop
lock
movs
and
cmps
jge
add
or
cmp
daa
xor
and
push
push
aas
les
nop
inc
movs
pop
inc
inc
lds
das
push
(bad)
jae
js
dec
or
push
dec
aad
aas
dec
imul
jle
push
mov
test
popa
in
cmovno
and
inc
hlt
push
mov
or
pop
pop
push
add
push
icebp
gs
mov
mov
xchg
jne
xchg
mov
ss
mov
and
jo
inc
out
fwait
and
xchg
cmps
mov
push
mov
xor
xlat
inc
shl
scas
cmps
inc
inc
cli
push
fiadd
mov
push
out
stos
jbe
test
add
mov
out
je
and
adc
mov
pop
jbe
pusha
shr
push
add
and
or
push
cmc
and
sbb
and
sbb
xor
cmp
cs
aad
xor
adc
les
nop
dec
movs
dec
inc
xor
inc
das
cmp
aam
cmp
push
jp
je
push
test
in
mov
test
cmovne
pop
addr16
hlt
push
mov
inc
cmc
pop
pop
jb
fist
cmc
gs
loopne
shr
mov
adc
inc
mov
adc
mov
jo
inc
lods
movs
test
mov
cmps
xchg
xor
pusha
xchg
push
cli
mov
xor
loopne
repz
sti
adc
and
xchg
scas
mov
push
leave
add
xor
(bad)
mov
in
out
cli
add
ror
aam
(bad)
and
jne
lahf
(bad)
xchg
and
sub
add
and
or
adc
xchg
add
aaa
adc
xor
xor
outs
and
cmp
sbb
loopne
aad
xor
sub
je
imul
dec
inc
inc
lds
das
push
mov
aam
adc
ins
aad
aas
push
not
push
in
mov
test
sbb
out
addr16
hlt
dec
mov
dec
cmc
pop
pop
pop
push
test
lods
gs
test
push
scas
xchg
jne
xchg
mov
movs
mov
and
jo
inc
lods
movs
test
loope
xchg
pusha
xchg
push
test
fist
inc
not
lock
mov
stc
push
retf
add
xor
aad
in
jbe
mul
fs
xor
add
fimul
(bad)
cli
adc
mov
pop
and
add
and
and
xor
xchg
pop
jg
mov
aaa
add
and
and
pop
loopne
aad
xor
sbb
les
imul
das
push
jae
inc
aam
or
push
dec
aad
aas
push
test
in
mov
test
jno
arpl
inc
out
addr16
hlt
data16
inc
cmc
pop
pop
pop
push
leave
xchg
scas
add
push
cmc
mov
call
inc
mov
adc
mov
mov
jo
inc
out
mov
test
mov
xor
push
(bad)
iret
inc
repnz
and
xchg
scas
mov
push
aam
fbstp
std
mov
into
fdiv
out
in
in
gs
je
and
adc
rcr
test
shl
in
add
jne
add
fs
daa
rcr
pop
adc
cmp
adc
pop
lds
dec
add
mov
loopne
aad
xor
push
(bad)
adc
les
push
push
inc
inc
lds
push
(bad)
arpl
aam
xor
push
ja
sbb
jge
dec
ja
in
mov
test
gs
push
cmovbe
push
addr16
hlt
push
mov
dec
cmc
pop
pop
fs
stos
xchg
mov
loopne
mov
mov
xchg
push
scas
xchg
jne
xchg
jmp
ret
movs
mov
and
jo
inc
stos
movs
xchg
and
mov
pusha
xchg
push
mov
fistp
inc
mov
(bad)
nop
scas
jecxz
ffree
icebp
push
rol
mov
push
ret
mov
jmp
in
gs
(bad)
loope
shl
out
fsub
cdq
adc
int
xchg
xchg
movhps
test
cs
add
and
adc
adc
xchg
pop
jg
mov
aaa
pop
movs
adc
sbb
cmp
sbb
ds
aad
xor
sbb
adc
les
nop
push
push
cmp
pop
das
ds
jge
fs
or
push
ins
aad
aas
dec
test
in
mov
test
gs
in
nop
addr16
hlt
push
mov
or
push
lods
xchg
mov
out
cmps
gs
test
push
mov
lods
adc
inc
mov
adc
mov
mov
scas
movs
mov
cmps
cmps
cdq
xor
pusha
ret
mov
xor
in
(bad)
inc
not
enter
cld
inc
lahf
scas
loopne
repz
stc
push
in
add
xor
(bad)
mov
nop
fs
xor
add
out
mul
out
je
and
adc
mov
pop
cmp
shl
in
add
daa
xchg
pop
add
cmc
add
jg
mov
aaa
shld
adc
ss
cmp
cmp
add
adc
add
or
pop
sbb
les
ins
movs
dec
inc
(bad)
lds
das
pop
mov
jg
dec
and
push
ins
aad
aas
pop
not
push
in
mov
test
arpl
data16
out
addr16
hlt
adc
inc
cmc
dec
pop
outs
push
mov
mov
in
push
sti
gs
out
scas
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
iret
call
pusha
xchg
push
xchg
mov
xor
(bad)
xlat
leave
inc
mov
(bad)
shr
push
cmc
add
push
repnz
into
fs
xor
add
loop
enter
cli
je
and
adc
fistp
xor
add
and
or
adc
sbb
jg
mov
aaa
pop
movs
xor
adc
pop
and
and
or
pop
aad
xor
sbb
fs
popa
les
push
movs
pop
inc
and
pop
das
jg
addr16
addr16
add
push
cs
aas
jge
inc
ja
in
mov
test
pop
in
lsl
inc
addr16
push
mov
inc
cmc
fs
outs
push
movs
xchg
lods
add
push
gs
test
add
mov
inc
mov
adc
nop
mov
and
jo
inc
mov
shl
and
sahf
xor
call
adc
and
xchg
scas
mov
push
test
icebp
push
les
out
fs
xor
add
dec
shl
adc
scas
lahf
mov
daa
shl
in
add
add
outs
rcl
push
jg
mov
aaa
adc
cs
or
sbb
xor
xor
adc
ins
push
popa
les
nop
outs
movs
adc
cmp
dec
das
inc
(bad)
push
inc
and
mov
push
imul
push
ja
in
mov
test
push
in
cmovs
inc
addr16
or
dec
cmc
pop
pop
push
push
scas
xchg
movs
add
push
fwait
gs
test
push
mov
jne
xchg
lods
adc
lock
and
jo
inc
mov
fbld
xchg
cmps
xchg
pusha
xchg
push
pushf
mov
xor
rcl
out
inc
mov
(bad)
leave
scas
fiadd
mov
xor
cld
mov
leave
fs
xor
add
leave
(bad)
hlt
data16
lds
les
fcomp
xor
shl
test
outs
or
sbb
adc
movzx
aaa
pop
movs
sbb
and
and
push
loopne
aad
xor
sub
pusha
push
outs
les
nop
dec
movs
adc
xor
dec
das
inc
(bad)
jle
ja
ins
or
push
outs
aad
aas
sub
push
ja
in
mov
test
add
jle
pop
out
outs
hlt
inc
mov
pop
cmc
jg
ins
push
xchg
xchg
scas
add
push
mov
add
ret
adc
inc
mov
adc
(bad)
mov
and
jo
inc
test
shl
sahf
cmps
movs
xor
pusha
xchg
push
xchg
mov
xor
(bad)
test
fld
scas
mov
push
int
mov
push
(bad)
mov
leave
fs
nop
add
loop
xchg
data16
out
je
and
adc
fcomp
sub
in
add
cmp
xadd
cmc
sbb
jg
mov
aaa
dec
movs
cmp
xor
xor
sub
cmps
cmp
loopne
aad
xor
adc
pop
push
outs
les
dec
movs
or
lds
dec
(bad)
popa
inc
inc
aam
or
push
inc
aad
aas
push
test
in
mov
test
inc
in
lsl
push
addr16
hlt
push
mov
jb
jb
ins
push
mov
mov
add
test
mov
adc
mov
jo
inc
out
xchg
and
and
mov
loopne
hlt
inc
sti
adc
and
std
scas
mov
push
fld
mov
push
sar
shl
enter
pushf
fimul
les
xchg
std
lahf
call
test
in
add
cmp
or
add
sbb
cmp
movs
add
add
movs
sbb
daa
add
xor
ds
inc
push
xor
pop
nop
movs
dec
inc
and
adc
inc
pop
aam
add
dec
aad
aas
xor
push
ja
in
mov
test
jle
popa
nop
inc
addr16
hlt
inc
mov
imul
lods
xchg
xchg
test
iret
xchg
jne
xchg
in
adc
mov
mov
lods
movs
call
cmps
mov
push
cmps
mov
xor
cld
xlat
out
inc
mov
korw
scas
clc
inc
aad
movs
push
aam
mov
push
(bad)
mov
(bad)
fs
lds
fimul
fbstp
les
fcomp
aas
test
shl
in
add
and
aaa
rol
and
setne
jg
mov
aaa
or
cmp
and
pop
cmps
add
aas
mov
loopne
aad
xor
adc
les
nop
jno
pop
inc
cmp
data16
and
jae
gs
or
push
dec
aad
aas
push
imul
dec
in
mov
test
inc
in
sysret
out
addr16
hlt
dec
mov
ins
cmc
gs
push
add
push
cwde
gs
out
mov
adc
inc
mov
adc
(bad)
mov
and
jo
inc
mov
iret
call
pusha
sahf
push
mov
fistp
inc
cli
adc
and
xchg
scas
mov
push
retf
add
xor
(bad)
mov
int3
fs
xor
add
loope
iret
mov
and
adc
out
lahf
lds
pusha
rcl
in
add
sbb
aaa
pop
cmp
adc
push
mov
aaa
and
lds
and
and
or
pop
aad
xor
pop
(bad)
ins
push
popa
les
jo
dec
inc
(bad)
lds
pop
(bad)
jge
addr16
or
push
das
aad
aas
jge
inc
ja
in
mov
test
pop
out
addr16
hlt
push
mov
or
jge
outs
push
test
hlt
gs
shr
test
mov
inc
xchg
jne
xchg
mov
lods
(bad)
jmp
mov
mov
xchg
movs
xchg
and
mov
xchg
pusha
stos
push
mov
fild
inc
int
retf
and
xchg
scas
sti
inc
mov
icebp
push
aam
fidiv
(bad)
mov
shl
retf
add
out
clc
data16
les
enter
shl
lahf
mov
ror
in
add
add
add
aas
cmc
sbb
cmp
adc
add
movs
sub
cmps
sbb
pop
mov
loopne
aad
xor
push
(bad)
fs
dec
les
inc
and
dec
das
ins
(bad)
jno
pusha
aam
adc
push
ins
aad
aas
push
test
in
mov
test
jb
bound
sbb
pusha
addr16
hlt
push
mov
or
push
lods
xchg
mov
loop
fwait
gs
test
cdq
xchg
adc
inc
mov
adc
(bad)
mov
and
jo
inc
out
movs
frstor
std
cmps
cdq
xor
pusha
les
mov
xor
(bad)
xlat
out
inc
lods
adc
and
(bad)
scas
mov
push
aam
mov
push
(bad)
mov
leave
test
aad
stos
in
test
loop
out
retf
jne
lahf
les
jnp
adc
test
outs
and
or
adc
cmp
movs
adc
sbb
je
adc
xor
loopne
aad
xor
pop
(bad)
push
nop
inc
movs
adc
jno
jb
dec
(bad)
jae
jnp
dec
add
push
jle
pop
aas
push
test
in
mov
test
push
in
nop
push
addr16
hlt
mov
(bad)
cmc
pop
pop
pushw
xchg
xchg
scas
add
push
lock
mov
adc
inc
mov
adc
movs
mov
and
jo
inc
out
fisub
xchg
cmps
(bad)
xor
pusha
rcl
mov
cmc
xlat
int
repnz
and
nop
scas
ret
inc
inc
out
std
add
xor
mov
enter
retf
in
gs
fbld
out
je
and
adc
fistp
aaa
test
add
and
or
sbb
pop
adc
xor
adc
adc
and
cmp
xor
xor
aad
xor
push
(bad)
ins
push
push
sub
jo
dec
inc
inc
lds
imul
inc
jg
jb
and
add
push
test
in
mov
test
push
in
(bad)
out
addr16
hlt
push
mov
dec
cmc
pop
pop
outs
push
adc
mov
mov
mov
inc
xchg
jne
xchg
mov
movs
mov
and
jo
inc
mov
iret
frstor
and
xor
xlat
hlt
inc
cmc
adc
and
(bad)
cmc
push
rol
xor
ret
jbe
not
fs
xchg
add
out
(bad)
out
je
and
jne
lahf
call
test
shl
in
add
and
or
sbb
sbb
sub
pop
lock
ins
and
and
pop
loopne
aad
xor
push
(bad)
fs
imul
push
inc
cmp
adc
push
ja
fs
cmp
push
outs
aad
aas
push
neg
adc
push
mov
test
pop
in
cmovnp
inc
addr16
hlt
push
mov
push
cmc
popw
outs
push
ficom
cmc
gs
test
push
xchg
xchg
jne
xchg
in
adc
movs
mov
and
jo
inc
lods
movs
stos
and
xchg
cmps
call
mov
xor
(bad)
xlat
lds
repz
into
scas
std
inc
sti
(bad)
in
mov
aad
vpaddusw
mov
xlat
fs
xor
add
jecxz
popf
data16
loopne
int3
and
adc
(bad)
lahf
xlat
xchg
add
xor
add
and
jo
pop
cmc
inc
adc
or
push
lock
and
cmp
xor
inc
aad
xor
sub
push
nop
ins
movs
adc
cmp
ins
das
push
(bad)
jp
outs
aam
add
push
dec
aad
aas
push
imul
push
in
mov
test
push
in
andnps
pop
addr16
hlt
pusha
mov
je
pop
pop
jno
lods
xchg
scas
add
push
stos
gs
test
push
scas
xchg
jne
xchg
in
adc
lahf
mov
and
jo
inc
out
(bad)
xchg
cmps
(bad)
xor
pusha
xchg
push
lea
mov
inc
jecxz
leave
and
loopne
fild
(bad)
cld
push
int
retf
aad
push
(bad)
mov
hlt
xlat
xor
add
jecxz
cdq
mul
xor
cli
jne
lahf
(bad)
xchg
sub
aaa
test
sub
push
add
cmp
or
adc
xchg
add
mov
aaa
shld
sbb
xor
pop
movs
and
daa
pop
mov
loopne
aad
xor
or
ins
push
xor
sub
jo
dec
inc
jno
je
ins
(bad)
outs
inc
addr16
add
push
and
pusha
aas
push
test
in
mov
test
ins
in
cmovp
push
addr16
hlt
push
mov
pop
cmc
cmp
outs
push
mov
hlt
mov
jecxz
mov
inc
loop
fcom
call
and
jo
inc
stos
movs
and
cmps
xchg
pusha
sahf
push
cmps
mov
xor
loopne
hlt
inc
cld
adc
inc
int
aam
(bad)
push
jmp
mov
push
ret
jbe
not
fs
out
lock
gs
xchg
out
je
and
adc
ficomp
sub
xor
sub
adc
and
adc
push
cmc
sub
ss
aaa
or
adc
xor
outs
and
and
sbb
loopne
aad
xor
cs
jl
sub
movs
or
lds
pop
(bad)
push
inc
jp
inc
add
(bad)
aad
aas
push
test
in
mov
test
jnp
inc
unpcklps
fs
hlt
push
mov
push
cmc
jnp
ins
push
rcl
mul
test
push
cdq
xchg
test
mov
movs
mov
and
jo
inc
mov
mov
xchg
cmps
ret
pusha
xchg
push
stc
mov
xor
not
int
lods
adc
and
mov
stc
push
rol
xor
fistp
retf
xor
add
fisttp
fbstp
aam
out
mov
lahf
les
jnp
and
dec
add
and
add
cmp
adc
add
movs
xor
sbb
aaa
and
cmp
push
daa
add
adc
aaa
aad
xor
dec
(bad)
push
push
push
inc
nop
movs
adc
jno
gs
push
(bad)
ja
and
mov
push
arpl
inc
aas
push
neg
push
in
mov
test
ins
in
unpcklps
addr16
hlt
dec
mov
inc
cmc
dec
pop
js
test
stos
add
push
cmc
gs
test
push
xchg
xchg
jne
xchg
mov
xor
inc
call
iret
call
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
vcvtpd2dq
(bad)
xor
in
out
jbe
div
xlat
xor
add
in
(bad)
data16
je
and
jne
lahf
retf
xchg
sub
sub
add
js
aaa
pop
ds
das
rcr
sbb
jg
mov
aaa
pop
movs
adc
and
movs
and
cmps
xor
pop
mov
loopne
aad
xor
adc
ins
push
pop
les
jo
outs
inc
lds
pop
(bad)
push
inc
addr16
and
push
jb
data16
push
not
in
mov
test
in
cvtdq2ps
pop
addr16
push
mov
inc
cmc
pop
pop
inc
push
adc
mov
mov
xchg
xchg
jne
xchg
mov
mov
jo
inc
mov
pushf
and
and
push
mov
mov
retf
inc
out
mov
(bad)
lds
inc
stc
(bad)
cmc
push
leave
add
push
fdivr
out
shl
into
add
in
fbld
out
je
and
adc
call
sub
add
and
and
adc
xchg
push
jg
mov
aaa
adc
cs
adc
sbb
pop
mov
loopne
aad
xor
or
les
imul
push
inc
pop
aam
add
push
ins
aad
aas
imul
ja
in
mov
test
fs
unpckhps
inc
addr16
hlt
je
bound
pop
pop
jb
scas
xchg
test
gs
push
mov
inc
mov
adc
cmps
mov
and
jo
inc
lea
cdq
es
cmps
xor
mov
xor
in
jmp
fst
into
and
mov
call
xlat
xor
fnstsw
aam
shl
lds
fisttp
iret
je
and
adc
fstp
xor
xor
and
push
add
and
push
shl
jg
mov
aaa
adc
and
and
mov
loopne
aad
xor
or
les
dec
movs
adc
push
lds
das
push
(bad)
jo
jns
dec
add
arpl
pop
aas
je
pop
ja
in
mov
test
jns
lsl
dec
ins
hlt
pop
mov
or
jge
pop
push
test
mov
test
out
scas
xchg
jne
xchg
mov
mov
jo
inc
in
movs
pushf
and
mov
pusha
pushf
push
mov
fistp
inc
loope
leave
and
in
scas
mov
push
int
call
push
sar
aam
icebp
xor
add
loop
into
out
(bad)
je
and
adc
cmps
lahf
lds
cmp
sbb
or
cmp
adc
sbb
pop
adc
or
adc
sbb
adc
sub
and
sbb
aaa
xor
push
(bad)
or
les
jno
jp
jb
adc
dec
(bad)
arpl
aam
and
inc
push
push
aad
aas
push
not
adc
ins
mov
test
in
movd
push
addr16
hlt
arpl
push
cmc
jb
outs
push
movs
xchg
mov
push
cmc
gs
add
into
xchg
jne
xchg
mov
lods
mov
and
jo
inc
lods
movs
mov
es
pusha
xchg
push
div
mov
loopne
hlt
inc
cmps
adc
inc
enter
clc
(bad)
fcom
mov
push
sar
shl
out
stos
in
gs
leave
data16
out
je
and
adc
fistp
xor
cmp
add
or
imul
cmc
pop
adc
imul
lock
sbb
pop
cmps
sbb
sbb
sub
add
and
adc
inc
push
inc
les
jb
ins
inc
cmp
or
pop
(bad)
pop
inc
addr16
xor
push
jl
inc
aas
push
idiv
dec
in
mov
test
push
out
addr16
push
mov
or
push
lods
xchg
add
mov
push
ret
adc
inc
call
(bad)
call
and
jo
inc
call
es
cmps
xor
call
fistp
inc
lods
adc
and
int
mov
push
test
lods
push
lds
(bad)
fdiv
jecxz
(bad)
in
gs
fisub
out
je
and
adc
fcomp
xor
sar
in
add
and
sub
adc
xor
jg
mov
aaa
adc
and
cmps
xor
add
xor
cmp
pop
push
arpl
dec
nop
movs
push
inc
popa
lds
das
push
(bad)
jnp
arpl
dec
add
push
ins
aad
aas
push
not
dec
in
mov
test
pop
in
cmove
pop
addr16
hlt
push
mov
dec
cmc
jg
dec
push
mov
push
mov
xchg
test
push
scas
xchg
adc
inc
mov
adc
mov
xchg
and
jo
inc
out
fisub
lahf
cmps
into
xor
pusha
mov
xor
hlt
xlat
aad
repnz
and
xchg
scas
cmc
inc
cld
(bad)
out
into
add
xor
test
mul
retf
in
gs
mul
out
je
and
adc
fcomp
aaa
test
push
in
add
adc
aaa
pop
pusha
xchg
adc
xor
and
xor
ja
pop
movs
adc
xor
xor
pop
movs
jno
sbb
push
loopne
aad
xor
adc
imul
and
pusha
lds
pop
(bad)
pop
inc
push
aam
add
push
ins
aad
aas
inc
not
push
in
mov
test
add
jge
add
push
addr16
push
mov
push
cmc
pop
pop
ins
push
mov
push
cmc
mov
mov
mov
inc
mov
adc
mov
jo
inc
mov
xchg
and
lods
cmps
xchg
pusha
mov
xor
loope
int3
inc
mov
(bad)
xchg
scas
mov
mov
icebp
push
ret
add
xor
fidivr
ret
xor
add
in
leave
shl
les
(bad)
adc
ficomp
pop
test
in
add
adc
add
es
shl
sbb
and
movs
sbb
sbb
adc
cmp
mov
loopne
aad
xor
adc
push
push
jne
push
nop
arpl
adc
inc
(bad)
addr16
fs
add
push
das
aad
aas
pop
test
in
mov
test
push
in
(bad)
out
addr16
hlt
push
mov
or
push
mov
pop
push
jmp
add
mov
inc
mov
adc
movs
mov
and
jo
inc
fwait
movs
and
cmps
scas
xor
pusha
stos
push
xchg
mov
xor
loopne
out
inc
lods
adc
and
lahf
scas
rol
stc
push
fadd
jecxz
ret
aad
push
xchg
leave
fs
xor
add
ror
je
and
adc
fcomp
or
add
cmp
xadd
cmc
inc
adc
imul
lock
outs
and
cmps
xor
add
sbb
add
cmp
pop
adc
les
movs
ins
inc
jno
or
dec
(bad)
arpl
aam
and
pop
push
push
aad
aas
push
div
fs
mov
test
(bad)
out
addr16
hlt
push
mov
pop
cmc
push
pop
or
test
mov
mov
test
cmps
xchg
popf
xchg
in
adc
xchg
mov
and
jo
inc
out
mov
es
cmps
mov
nop
pusha
fst
mov
xor
(bad)
xlat
mov
ficom
loopne
call
scas
retf
inc
inc
sti
push
int
mov
push
(bad)
mov
into
shl
fadd
in
(bad)
clc
mul
(bad)
je
and
jne
lahf
lds
xor
add
push
xchg
pop
cmp
cmc
sbb
jg
mov
aaa
push
movs
adc
add
ss
or
push
loopne
aad
xor
pop
(bad)
inc
push
popa
les
nop
push
movs
dec
inc
jb
push
das
pop
mov
jo
inc
push
cs
aas
push
test
in
mov
test
outs
in
lsl
dec
addr16
hlt
push
mov
inc
cmc
popw
pop
push
pushf
xchg
mov
mov
test
add
mov
inc
movs
jne
xchg
jmp
mov
cmps
inc
lods
movs
and
cmps
mov
push
mov
mov
inc
mov
(bad)
aad
mov
push
loope
retf
aad
push
clc
mov
int3
fs
into
add
jecxz
shl
int3
je
and
adc
fstp
add
add
and
add
pusha
cmc
sbb
cmp
movs
sub
and
inc
cmps
pop
daa
das
mov
loopne
aad
xor
adc
jl
jb
push
nop
dec
movs
imul
adc
pop
(bad)
pop
inc
data16
sub
push
push
aad
aas
pop
test
in
mov
test
in
pcmpgtb
inc
addr16
inc
mov
outs
cmc
pop
pop
push
add
push
mov
leave
test
rol
jne
xchg
mov
ss
int
xchg
jo
inc
hlt
movs
mov
cmps
iret
sahf
es
cmps
test
pusha
xchg
push
cli
mov
xor
(bad)
mov
lods
adc
and
retf
scas
fild
(bad)
stc
push
stos
add
xor
cmp
fs
ret
add
in
retf
out
je
and
adc
fstp
pop
test
daa
in
add
xchg
pop
cmp
adc
adc
pop
lock
movs
es
pop
cmps
xor
add
add
xor
adc
les
nop
cmp
or
push
jae
jnp
cmp
push
pop
aad
aas
inc
div
in
mov
test
dec
in
nop
pop
addr16
hlt
push
mov
or
push
test
mov
mov
mov
scas
xchg
adc
inc
mov
adc
mov
cmps
inc
out
fsub
xchg
cmps
xchg
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
fld
fist
mov
push
fidivr
into
fs
xor
add
mov
enter
popf
je
and
adc
fstp
test
sar
in
add
push
xchg
pop
xor
cmc
sbb
jg
mov
aaa
push
movs
adc
sbb
and
dec
daa
cmps
xor
sbb
xor
push
(bad)
push
push
inc
les
jo
dec
inc
jb
push
das
cmp
aam
adc
push
jbe
inc
aas
sub
jbe
inc
in
mov
test
jp
xor
adc
hlt
push
mov
inc
cmc
dec
pop
pushw
adc
mov
mov
adc
inc
mov
adc
mov
mov
xchg
movs
xchg
and
and
stos
xor
rcl
inc
mov
lds
inc
sti
(bad)
cmc
push
mov
aad
push
ret
jbe
not
fs
xor
add
out
xchg
out
je
and
adc
fistp
sub
sub
and
adc
and
adc
add
sub
push
push
aaa
adc
lds
or
cmps
pop
daa
push
mov
loopne
aad
xor
ds
jl
les
jnp
dec
inc
dec
lds
jge
push
inc
pop
aam
adc
push
dec
aad
aas
push
not
(bad)
in
mov
test
pop
in
cmovs
inc
addr16
hlt
data16
pop
cmc
popw
adc
test
push
mul
test
push
cmps
xchg
stos
xchg
mov
ss
mov
and
jo
inc
cdq
movs
mov
xchg
cmps
cdq
xor
pusha
adc
fistp
inc
repnz
and
repz
out
ret
(bad)
icebp
push
xlat
add
xor
(bad)
mov
icebp
fs
xor
add
loop
retf
out
je
and
adc
fstp
xor
sbb
imul
add
xor
xor
cmp
adc
push
mov
aaa
pop
movs
sub
and
cmps
and
loopne
aad
xor
adc
les
nop
jbe
dec
inc
pop
lds
das
pop
mov
push
aam
add
push
arpl
inc
aas
push
not
push
in
mov
test
in
packssdw
push
addr16
hlt
jne
imul
pop
push
add
push
test
add
lods
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
mov
mov
xchg
cmps
call
mov
xor
not
ret
adc
and
xchg
scas
cmps
inc
out
(bad)
out
iret
add
xor
ret
jbe
test
add
enter
(bad)
out
je
and
adc
out
lds
add
and
adc
xchg
pop
and
adc
imul
ins
and
and
adc
inc
aad
xor
sub
ins
push
popa
les
xor
lds
pop
(bad)
sbb
aam
xor
push
das
aad
aas
push
imul
or
ins
mov
test
pop
in
lsl
push
addr16
xchg
fs
cmc
and
xchg
mov
push
hlt
gs
test
push
mov
inc
fwait
jne
xchg
xchg
adc
hlt
mov
and
jo
inc
mov
and
cmps
xchg
xor
pusha
xchg
push
fwait
mov
xor
hlt
xlat
hlt
inc
ficom
mov
xchg
fadd
scas
mov
push
mov
loope
ret
jbe
test
add
mov
retf
out
je
and
adc
iret
lahf
(bad)
xchg
and
adc
ins
shl
in
add
and
or
adc
xor
movs
sbb
adc
movs
sbb
daa
sbb
adc
adc
mov
pop
adc
jl
jg
sub
inc
cmp
inc
das
ds
jne
inc
aam
xor
push
ins
aad
aas
dec
test
in
mov
test
in
unpckhps
push
addr16
hlt
push
mov
or
push
test
xchg
add
push
hlt
gs
test
push
mov
inc
cmps
jne
xchg
mov
movs
mov
and
jo
inc
mov
mov
std
cmps
cdq
xor
pusha
rcl
retf
xor
in
mov
lods
adc
and
sahf
scas
mov
rol
rcl
mov
push
cmp
shl
in
add
aad
cld
data16
in
xlat
and
adc
(bad)
lahf
xchg
xchg
add
xor
shl
push
outs
sbb
sub
pop
cmc
sub
xor
add
aaa
movs
pop
lock
cmp
and
adc
inc
aad
xor
cmp
push
nop
movs
adc
inc
lds
pop
(bad)
push
inc
addr16
sbb
push
arpl
pop
aas
js
pop
ja
in
mov
test
dec
in
sysret
out
ins
hlt
dec
mov
inc
cmc
pop
pop
pop
push
test
scas
add
push
mov
test
push
lahf
xchg
jne
xchg
in
adc
mov
jo
inc
out
cdq
and
out
cmps
mov
xchg
pusha
mov
xor
test
movs
inc
xchg
scas
mov
push
int
jmp
mov
fsub
enter
shl
(bad)
cdq
mul
(bad)
je
and
adc
fcomp
aaa
test
and
inc
add
push
xchg
pop
cmp
adc
ds
aaa
sub
lds
and
or
dec
aad
xor
or
ins
push
popa
les
nop
inc
movs
dec
inc
cmp
push
das
pop
(bad)
ins
inc
push
aam
adc
das
aad
aas
jp
inc
ja
in
mov
test
gs
in
lsl
push
addr16
hlt
inc
mov
jo
jp
outs
push
test
push
cmc
gs
test
push
cdq
xchg
adc
inc
stos
jne
xchg
mov
ss
and
movs
xchg
and
std
cmps
xchg
mov
xor
lock
repz
stc
adc
and
fild
(bad)
push
retf
add
xor
ret
jbe
test
add
out
enter
fnstenv
rcl
lahf
call
test
add
and
xchg
xor
adc
xchg
push
jg
mov
aaa
and
lds
and
and
sub
push
aad
xor
sub
push
nop
sub
pop
das
jge
jg
jnp
dec
add
push
jl
inc
aas
inc
div
mov
test
in
unpckhps
inc
addr16
push
mov
or
push
mov
push
lods
gs
test
push
popf
xchg
fwait
xchg
lock
movs
mov
and
jo
inc
xchg
movs
fbld
xchg
cmps
sahf
xor
pusha
retf
mov
xor
in
lods
inc
mov
lds
inc
aad
fist
mov
push
lds
leave
fbstp
repz
leave
(bad)
out
je
and
jne
lahf
les
xor
jno
sbb
or
sub
adc
pop
adc
cmp
movs
and
and
sbb
add
and
mov
pop
adc
les
dec
movs
jo
js
adc
push
(bad)
popa
inc
inc
aam
or
push
arpl
inc
aas
jbe
pop
ja
in
mov
test
dec
in
sysret
out
addr16
ins
mov
push
cmc
pop
pop
pop
push
mov
push
xchg
mov
mov
mov
inc
mov
adc
mov
jo
inc
test
iret
call
pusha
rcl
xor
xlat
fild
in
and
repnz
fild
mov
xor
fistp
shl
add
loop
fsub
out
je
and
adc
rcr
sbb
adc
sbb
xor
xor
xor
adc
jno
cmp
pop
adc
add
movs
adc
adc
xor
pop
movs
adc
or
mov
loopne
aad
xor
push
(bad)
jg
dec
les
jne
addr16
inc
lds
cmp
aam
and
push
cs
aas
pop
mul
jno
inc
mov
test
sbb
inc
lsl
push
addr16
hlt
dec
mov
inc
cmc
das
pop
jle
adc
gs
test
push
mov
inc
mov
adc
icebp
mov
and
jo
inc
mov
(bad)
xchg
cmps
cmps
xor
pusha
mov
lods
mov
xor
loope
inc
retf
and
xchg
scas
mov
push
enter
rcl
push
icebp
mov
in
shl
retf
add
dec
shl
mov
scas
lahf
int3
xchg
push
pop
sub
add
and
or
adc
xchg
movq
jne
adc
and
and
pop
loopne
aad
xor
inc
(bad)
push
push
imul
dec
inc
cmp
adc
jne
ja
arpl
push
and
sbb
aad
aas
push
not
(bad)
in
mov
test
pop
in
lsl
inc
addr16
hlt
inc
mov
popa
cmc
popw
push
add
push
mov
xchg
lea
mov
inc
xchg
jne
xchg
jmp
mov
jo
inc
cmps
movs
fbld
cmps
cmps
cdq
xor
pusha
adc
fistp
inc
not
retf
and
lahf
scas
mov
push
mov
mov
push
ret
jbe
test
add
fisttp
fbstp
call
jne
lahf
les
jnp
sbb
or
and
push
rcr
daa
adc
push
mov
aaa
push
movs
inc
lock
ins
and
daa
cmps
pop
daa
cmp
xor
sub
push
nop
movs
or
lds
pop
(bad)
jns
jg
inc
xor
push
aad
aas
push
div
push
in
mov
test
add
pop
cmovbe
jb
pop
hlt
dec
mov
inc
cmc
pop
pop
push
push
test
mov
mov
test
push
ret
xchg
adc
inc
mov
fcom
mov
and
jo
inc
mov
iret
mov
in
into
xor
pusha
mov
xor
repz
fild
leave
and
xchg
scas
hlt
inc
add
push
rol
xor
ret
mov
cld
xlat
xor
add
fisttp
(bad)
cdq
adc
fcomp
xor
add
cmp
cmp
adc
sub
and
push
lds
and
cmp
pop
daa
push
mov
loopne
aad
xor
push
(bad)
ins
push
imul
nop
jo
push
das
imul
jbe
inc
mov
push
dec
aad
aas
pop
div
ja
in
mov
test
sbb
arpl
push
out
addr16
hlt
push
mov
arpl
pop
pop
jno
mov
mov
gs
std
add
mov
inc
mov
adc
jmp
jo
inc
pushf
movs
lahf
and
mov
call
mov
xor
in
mov
mov
(bad)
nop
scas
mov
push
out
ret
xor
fstp
xlat
fs
xor
gs
leave
data16
xor
adc
fstp
add
add
and
adc
adc
xchg
push
jg
mov
aaa
adc
cs
outs
and
add
pop
loopne
aad
xor
adc
jg
dec
les
nop
jo
push
das
ds
arpl
aam
adc
push
imul
aas
push
div
dec
in
mov
test
pusha
in
movq
and
hlt
ins
mov
or
jbe
inc
push
lods
xchg
mov
cdq
push
fwait
gs
(bad)
out
mov
ret
xchg
xchg
xchg
mov
lahf
mov
and
jo
inc
sahf
movs
mov
repz
mov
mov
pusha
xchg
push
mov
mov
jecxz
retf
inc
std
adc
and
mov
stc
push
int
in
(bad)
push
in
mov
nop
xor
add
dec
fbstp
popf
adc
fstp
push
test
and
sbb
jle
xor
gs
pop
shr
adc
sbb
add
and
and
xor
pop
aad
xor
adc
les
nop
inc
movs
dec
inc
jnp
push
das
push
aam
xor
push
(bad)
aad
aas
push
div
push
push
mov
test
sbb
out
addr16
hlt
adc
inc
cmc
pop
pop
outs
push
xchg
xchg
scas
add
push
xchg
mov
mov
cmps
xchg
jne
xchg
scas
adc
lahf
mov
and
jo
inc
xchg
movs
mov
call
push
lods
mov
xor
rcl
test
mov
inc
sti
(bad)
cmps
push
test
repnz
aad
shl
not
add
fimul
(bad)
je
and
adc
(bad)
lahf
call
jg
jp
push
add
je
cmp
push
xchg
or
sbb
sbb
jg
mov
aaa
push
movs
adc
push
lds
and
and
cmp
xor
or
fs
popa
les
nop
movs
push
inc
jno
or
dec
(bad)
pusha
inc
arpl
dec
and
push
pop
aad
aas
push
test
in
mov
test
gs
dec
lsl
inc
addr16
xchg
push
jne
cmc
pop
pop
ins
push
mov
push
mov
mov
out
mov
cmps
xchg
jne
xchg
mov
mov
cmps
inc
scas
movs
xchg
mov
pusha
fst
mov
xor
leave
xlat
hlt
inc
mov
(bad)
in
scas
mov
push
out
add
push
test
(bad)
shl
retf
add
out
leave
data16
out
je
and
adc
fstp
test
in
add
jp
xor
rcl
add
aaa
adc
sbb
and
outs
and
cmp
outs
daa
xor
push
loopne
aad
xor
sbb
pop
push
imul
pop
inc
jns
adc
pop
(bad)
jl
fs
add
push
ins
aad
aas
outs
test
in
mov
test
pop
in
andnps
jg
pop
hlt
push
mov
push
cmc
jbe
outs
push
lods
xchg
xchg
add
push
hlt
gs
test
push
mov
mov
jne
xchg
mov
call
and
jo
inc
xchg
movs
cmps
and
nop
cmps
cmps
xor
pusha
xchg
push
sti
mov
xor
aad
xlat
inc
lods
adc
and
mov
loop
mov
mov
push
(bad)
mov
leave
fs
xchg
add
aam
fisub
out
je
and
jne
lahf
out
xor
ja
arpl
and
push
add
add
or
(bad)
cmc
inc
adc
imul
lock
aaa
and
and
adc
dec
aad
xor
inc
(bad)
push
push
jbe
arpl
jno
adc
inc
(bad)
pop
inc
jg
das
and
inc
push
dec
aad
aas
dec
div
ja
in
mov
test
push
in
cmovp
push
addr16
hlt
pop
mov
add
and
push
add
push
in
mov
sahf
push
scas
xchg
jne
xchg
hlt
adc
mov
mov
xchg
movs
mov
es
pusha
mov
xor
hlt
xlat
mov
mov
sahf
scas
mov
push
enter
cwde
aad
push
cmp
test
enter
cli
gs
jmp
out
je
and
adc
movs
lahf
xchg
xchg
push
pop
test
shr
in
add
xchg
pop
cmp
cmc
sbb
jg
mov
aaa
sub
lds
and
cmp
push
loopne
aad
xor
adc
jo
popa
les
nop
push
lds
cmp
jnp
and
dec
xor
push
das
aad
aas
pop
div
push
in
mov
test
sbb
ss
push
addr16
push
mov
inc
cmc
pop
pop
outs
push
scas
xchg
hlt
add
push
hlt
mov
xchg
popf
xchg
jne
xchg
mov
test
xchg
movs
xchg
and
mov
nop
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
repnz
aam
sti
(bad)
repnz
retf
add
push
std
mov
lock
retf
add
xlat
(bad)
fldenv
out
je
and
adc
fstp
add
add
and
sub
add
pop
adc
and
xor
adc
pop
lock
outs
and
cmp
push
daa
pop
mov
loopne
aad
xor
push
(bad)
inc
push
imul
dec
inc
ins
lds
(bad)
ja
jle
jno
push
mov
push
push
aad
aas
je
push
ja
in
mov
test
pop
in
maxps
inc
addr16
hlt
push
jne
cmc
pop
pop
push
scas
xchg
test
gs
test
add
mov
inc
xchg
jne
xchg
mov
movs
mov
and
jo
inc
cwde
movs
stos
and
xchg
cmps
xor
cmps
push
in
mov
push
in
xlat
call
and
leave
scas
mov
push
leave
add
xor
lds
shl
lds
fisttp
cmc
je
and
adc
ficomp
sub
add
daa
xchg
pop
cmp
adc
ds
aaa
push
movs
pop
lock
push
and
cmps
add
add
push
loopne
aad
xor
add
les
ins
movs
dec
inc
pop
lds
das
pop
(bad)
jae
jg
dec
and
push
popa
aad
aas
push
test
in
mov
test
addr16
andps
push
addr16
hlt
pop
mov
adc
pop
pop
push
add
push
cli
gs
test
push
cmps
xchg
adc
mov
jo
inc
out
cmps
and
xchg
cmps
ret
pusha
test
mov
xor
cmc
xlat
aad
mov
(bad)
xchg
scas
loope
loope
cmps
push
int
mov
push
sar
mov
enter
shl
(bad)
out
je
and
adc
out
retf
xchg
and
aaa
test
add
push
add
daa
xchg
pop
push
xchg
das
rcr
and
push
mov
aaa
push
movs
adc
sbb
xor
sbb
mov
loopne
aad
xor
adc
les
jae
push
inc
jl
adc
cmp
aam
add
push
ins
aad
aas
push
test
in
mov
test
push
in
cmovo
inc
addr16
hlt
push
mov
push
cmc
inc
pop
jle
adc
gs
test
add
mov
inc
mov
adc
mov
int
xchg
mov
xor
pusha
(bad)
push
xchg
mov
xor
in
xlat
test
fiadd
scas
aad
ffree
icebp
push
retf
xor
lock
retf
xor
add
loop
out
(bad)
fnsave
rcl
lahf
lds
ins
rcl
in
add
jnp
aaa
pop
sbb
cmc
and
xor
push
jg
mov
aaa
sub
and
and
push
daa
and
xor
push
(bad)
inc
push
imul
dec
inc
jle
or
data16
pop
inc
inc
aam
add
ins
aad
aas
test
in
mov
test
in
unpckhps
cmp
mov
or
push
xchg
xchg
mov
loopne
cmc
gs
push
pushf
xchg
jne
xchg
sahf
adc
sahf
mov
and
jo
inc
call
es
cmps
les
pusha
mov
mov
(bad)
push
in
out
inc
mov
(bad)
hlt
scas
mov
push
aam
mov
push
lds
(bad)
(bad)
lds
fisttp
out
nop
and
adc
loop
mov
add
adc
add
outs
pop
xchg
popa
xchg
jb
pop
cmc
inc
adc
ds
aaa
shld
push
lds
adc
xor
pop
mov
loopne
aad
xor
dec
(bad)
push
nop
jne
adc
arpl
push
das
push
mov
push
aam
sbb
push
je
js
push
mul
push
in
mov
test
push
in
sysret
out
addr16
hlt
dec
mov
push
cmc
pop
pop
ins
push
adc
mov
pop
into
xchg
jne
xchg
scas
adc
mov
jo
inc
out
test
cmps
cmps
mov
nop
pusha
mov
xor
hlt
xlat
retf
inc
mov
(bad)
in
cld
inc
jecxz
out
xlat
add
xor
std
mov
aam
les
repnz
mov
loop
mul
repz
and
adc
fcomp
aaa
test
add
and
or
add
sbb
jg
mov
aaa
sub
and
pop
cmps
sbb
loopne
aad
xor
push
(bad)
outs
push
dec
les
jae
dec
inc
dec
lds
das
pop
mov
addr16
cmp
push
and
push
aas
push
test
in
mov
test
in
nop
jnp
push
hlt
push
mov
or
cmp
outs
push
mov
mov
test
add
cdq
xchg
jne
xchg
mov
ss
mov
and
jo
inc
stos
movs
xchg
and
scas
cmps
xchg
mov
xor
out
xlat
hlt
inc
mov
(bad)
lock
mov
push
aam
mov
push
xchg
ret
xor
add
int3
pop
je
and
adc
fcomp
jne
cmp
add
and
and
adc
xchg
add
aaa
adc
adc
push
lds
adc
sbb
and
xor
adc
jg
les
nop
jo
jl
cmp
adc
jg
bound
aam
add
push
jl
inc
aas
push
test
in
mov
test
pop
in
cmovae
inc
addr16
hlt
dec
mov
dec
cmc
pop
pop
outs
push
fist
lock
test
push
mov
inc
loope
test
mov
and
jo
inc
mov
iret
call
pusha
xchg
push
mov
xchg
xlat
in
inc
fcom
les
mov
stc
push
mov
xor
(bad)
mov
fisub
out
aad
call
out
je
and
adc
aad
into
xchg
add
sub
jg
je
push
add
and
sbb
adc
or
cmp
and
push
cmps
add
cmp
xor
or
push
nop
ins
movs
adc
inc
lds
pop
(bad)
pop
inc
and
dec
add
push
jne
jg
pop
div
ja
in
mov
test
push
in
andps
and
inc
hlt
push
mov
jle
inc
pop
js
stos
xchg
mov
push
hlt
mov
push
scas
xchg
jne
xchg
jecxz
xchg
jmp
jo
inc
out
pushf
and
xchg
cmps
popf
xor
pusha
fst
mov
xor
lahf
xlat
test
mov
inc
test
mov
push
in
out
jbe
test
add
jmp
(bad)
repz
je
and
adc
mov
pop
das
test
adc
push
add
or
daa
sar
jg
mov
aaa
pop
movs
xor
and
sbb
and
dec
aad
xor
adc
inc
push
jno
cmp
jb
pop
das
js
addr16
push
aam
add
push
das
aad
aas
inc
imul
push
in
mov
test
push
in
movd
push
addr16
hlt
imul
inc
push
test
mov
push
hlt
cmps
test
push
lds
out
mov
jmp
ss
and
movs
fisub
mov
xchg
push
mov
mov
retf
inc
in
adc
and
jmp
fst
mov
push
ret
jbe
not
fs
xchg
add
mov
frstor
out
je
and
adc
aam
call
adc
add
and
adc
sbb
xchg
inc
jg
mov
aaa
adc
push
lock
movs
jle
cmp
xor
cmp
xor
push
(bad)
inc
push
dec
les
inc
cmp
or
popa
(bad)
ja
dec
aam
add
push
arpl
inc
aas
push
not
dec
in
mov
test
in
cvtps2pd
inc
addr16
hlt
push
mov
or
jge
gs
test
cli
xchg
test
mov
inc
xchg
jne
xchg
mov
div
fiadd
movs
movs
and
sahf
cmps
ret
pusha
cmps
push
xchg
mov
xor
loop
lds
cli
and
shr
hlt
push
aam
mov
push
lds
loope
div
retf
in
fisttp
fbstp
(bad)
adc
cld
lahf
les
and
and
adc
add
xchg
shl
adc
ds
aaa
pop
movs
inc
lock
aaa
and
add
add
pop
aad
xor
aaa
(bad)
push
nop
ins
movs
or
lds
das
pop
mov
aam
sbb
push
arpl
sbb
sub
pop
ja
in
mov
test
jns
xor
addr16
adc
imul
aad
test
push
jmp
add
rol
jne
xchg
cwde
adc
test
scas
and
jo
inc
mov
iret
frstor
xchg
xchg
push
xchg
fwait
push
rcl
inc
cmps
adc
and
repnz
in
inc
loop
lds
cmps
xor
lds
iret
mov
ret
add
enter
(bad)
je
and
adc
out
retf
xchg
add
adc
add
and
or
(bad)
cmc
add
jg
mov
aaa
pop
movs
adc
sbb
push
and
adc
mov
loopne
aad
xor
push
(bad)
pusha
push
popa
les
outs
movs
pop
inc
jb
push
das
pusha
(bad)
popa
inc
jnp
dec
or
push
das
aad
aas
push
test
in
mov
test
inc
in
cvtps2pd
push
addr16
hlt
push
mov
inc
cmc
inc
pop
push
mov
mov
in
fwait
mov
mov
adc
inc
mov
adc
lods
mov
and
jo
inc
mov
fsub
mov
mov
push
mov
fist
inc
mov
(bad)
(bad)
std
push
leave
add
push
ret
jbe
not
fs
xor
add
les
cli
je
and
adc
fcomp
pop
test
add
daa
xchg
rcl
jg
mov
aaa
push
movs
cmp
xor
aaa
and
add
and
xor
cs
jl
jg
and
lds
das
pop
(bad)
jge
pop
aam
and
jge
push
aad
aas
dec
test
in
mov
test
dec
in
lsl
inc
addr16
hlt
inc
mov
je
pop
pop
dec
push
mov
mov
adc
leave
test
push
test
out
xchg
xchg
mov
mov
jo
inc
xchg
movs
fbld
popf
cmps
xchg
xor
pusha
retf
mov
xor
out
xlat
out
inc
mov
korw
scas
mov
push
repnz
push
sar
into
xor
add
loope
hlt
data16
fbstp
popf
adc
rcr
xor
ins
shl
test
sub
or
adc
aas
mov
aaa
shld
adc
add
add
xor
or
bound
les
nop
jb
pop
inc
jno
adc
push
(bad)
jae
and
ja
dec
mov
push
ja
js
push
not
pop
in
mov
test
push
in
unpckhps
inc
addr16
hlt
push
mov
dec
cmc
addr16
inc
push
mov
stos
add
push
cmc
gs
test
push
add
lea
xor
inc
out
mov
es
cmps
call
mov
xor
in
xlat
hlt
inc
lods
adc
and
nop
scas
fild
(bad)
out
ret
xor
loope
div
test
add
loop
retf
out
je
and
adc
aam
cmc
xchg
and
xor
pop
sar
in
add
and
daa
rcr
or
xor
movs
ds
xor
add
cmps
aas
daa
xor
aad
xor
push
(bad)
ins
push
imul
nop
sub
lds
inc
inc
aam
add
push
inc
aad
aas
pop
not
push
in
mov
test
inc
in
cmovb
push
addr16
ins
mov
dec
cmc
pop
pop
push
add
push
cmps
mov
fwait
push
mov
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
cdq
and
mov
pusha
xchg
push
loopne
xor
xlat
rol
retf
and
xchg
scas
sti
inc
ret
push
rol
xor
fdivr
(bad)
shl
fild
int3
(bad)
out
je
and
adc
fstp
sub
in
add
pop
xchg
es
sub
adc
xchg
add
mov
aaa
adc
and
and
or
pop
aad
xor
adc
inc
push
outs
les
nop
jb
inc
cmp
adc
push
mov
aam
xor
push
sub
push
aas
push
not
push
push
mov
test
in
addps
inc
addr16
push
mov
or
push
test
test
gs
test
add
test
mov
adc
div
mov
movs
movs
fisub
loop
call
mov
xor
in
in
lods
adc
and
retf
inc
rol
in
aam
mov
push
lds
leave
fs
xor
add
fisttp
cmc
je
and
adc
scas
lahf
(bad)
xchg
xor
or
add
daa
xchg
pop
cmp
adc
or
and
sbb
xor
dec
daa
cmps
sbb
es
loopne
aad
xor
xor
les
movs
adc
jle
push
das
aas
(bad)
jae
ja
ins
adc
push
sub
push
aas
sub
pop
ja
in
mov
test
in
nop
jns
inc
hlt
push
mov
ins
cmc
pop
pop
imul
out
mov
test
add
scas
xchg
adc
inc
stos
jne
xchg
mov
test
scas
ss
xchg
and
jo
inc
out
and
test
mov
xor
cld
xlat
retf
adc
and
nop
scas
std
inc
inc
out
int3
add
xor
std
mov
into
mov
into
add
lods
(bad)
out
je
and
adc
fstp
aas
test
shl
cmp
add
and
or
or
adc
xchg
add
mov
aaa
pop
movs
adc
dec
lds
and
adc
dec
aad
xor
adc
imul
sub
jbe
jae
jb
push
das
xor
aam
cmp
push
das
aad
aas
push
imul
in
mov
test
in
sysret
out
addr16
hlt
pop
mov
jg
bound
fs
rcl
mov
mov
std
add
mov
inc
mov
adc
mov
mov
and
mov
cdq
xor
pusha
xchg
push
mov
fild
inc
int
retf
and
in
aam
stc
mov
xor
sar
into
xlat
xor
add
in
(bad)
fldenv
out
je
and
adc
fstp
test
sbb
dec
add
cmp
rcl
sbb
cmp
movs
adc
sub
movs
xor
cmps
sbb
aaa
mov
loopne
aad
xor
pop
(bad)
jl
ja
es
inc
movs
adc
and
pop
das
ds
ja
jo
jne
jns
sbb
aad
aas
ins
neg
dec
in
mov
test
in
nop
push
addr16
push
mov
pop
cmc
pop
pop
push
add
push
mul
test
add
fwait
xchg
jne
xchg
mov
ss
jo
inc
mov
iret
mov
xor
pusha
retf
mov
xor
hlt
xlat
out
inc
mov
korw
scas
retf
(bad)
into
push
aam
mov
push
(bad)
mov
leave
fs
mov
mov
cld
data16
popf
je
and
adc
mov
pop
ja
and
and
push
add
xor
xchg
ja
adc
add
adc
add
and
and
push
loopne
aad
xor
push
(bad)
jb
xor
and
lds
pop
mov
aam
or
push
sub
pop
aas
push
imul
push
in
mov
test
adc
dec
sysret
out
addr16
inc
mov
imul
pop
push
add
push
xchg
gs
mov
push
popf
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
popf
movs
mov
es
cmps
ret
xor
pusha
xchg
push
loopne
mov
in
test
stc
inc
xchg
scas
mov
push
int
call
push
loop
sti
jbe
neg
fs
xor
add
loop
cli
out
out
je
and
adc
neg
sub
add
and
push
shr
sub
imul
lock
xor
dec
cmp
outs
daa
cmp
aad
xor
push
(bad)
push
nop
js
dec
inc
jae
push
inc
addr16
cmp
pop
push
dec
aad
aas
test
in
mov
test
inc
in
andps
push
addr16
hlt
dec
mov
pop
cmc
push
pop
push
push
xlat
xchg
mov
mov
test
push
cmps
xchg
jne
xchg
lods
adc
(bad)
mov
and
jo
inc
mov
fsub
mov
xchg
push
stos
mov
xor
loopne
test
cld
inc
xchg
scas
mov
push
retf
xor
clc
mov
loope
shl
into
add
fimul
les
(bad)
adc
ficomp
sub
add
sbb
das
pop
and
cmc
sbb
cmp
movs
sub
and
inc
cmps
and
sbb
xor
sbb
imul
cmp
cmp
push
das
imul
xor
push
mov
push
jne
jge
push
div
ja
in
mov
test
pop
in
unpckhps
inc
addr16
hlt
push
jne
cmc
push
pop
push
push
adc
cwde
add
xchg
in
popf
xchg
mov
mov
stos
inc
mov
fbld
xchg
cmps
mov
pusha
retf
mov
xor
repnz
out
inc
mov
korw
scas
call
push
rol
jmp
vpminub
mov
shl
jmp
gs
cld
mul
(bad)
je
and
adc
rcr
test
daa
in
add
or
or
adc
ds
aaa
shld
pop
lds
and
cmp
dec
loopne
aad
xor
xor
push
nop
ins
movs
adc
aas
lds
aas
(bad)
jno
and
ja
and
jge
sub
sbb
js
pop
ja
in
mov
test
inc
in
sysret
out
addr16
push
mov
inc
cmc
push
pop
adc
test
stos
add
push
cmc
mov
push
mov
inc
mov
adc
mov
xchg
inc
in
movs
popf
and
mov
pusha
mov
xor
in
test
rol
scas
mov
push
lds
xlat
xor
std
mov
loop
xlat
xor
add
fisttp
ret
je
and
adc
movs
lahf
lds
cmp
sbb
inc
add
sbb
add
or
sbb
jg
mov
aaa
pop
movs
adc
push
lds
sbb
es
aad
xor
push
(bad)
ins
push
imul
jbe
cmp
or
jl
add
aam
and
push
and
push
aas
test
push
mov
test
gs
in
lsl
inc
addr16
push
mov
dec
cmc
inc
pop
push
add
push
in
mov
mov
adc
inc
mov
adc
mov
mov
xchg
movs
mov
cmps
cmps
xchg
pusha
fwait
push
mov
fist
inc
mov
korb
scas
jmp
add
xor
pushf
mov
leave
shl
enter
shl
(bad)
int
(bad)
les
jecxz
mov
lahf
(bad)
xchg
xor
adc
add
cmp
add
adc
inc
adc
xor
movs
add
pop
lds
adc
sbb
inc
mov
loopne
aad
xor
push
(bad)
inc
push
imul
dec
inc
and
jle
pop
(bad)
je
inc
aam
add
push
push
aad
aas
push
imul
ja
in
mov
test
gs
push
pcmpgtw
dec
addr16
hlt
push
mov
or
push
lods
xchg
jmp
gs
add
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
fbld
xchg
cmps
cdq
xor
pusha
ret
mov
xor
xchg
xlat
cld
inc
not
into
and
mov
stc
push
int
jmp
cdq
aad
push
(bad)
mov
(bad)
xor
add
fisttp
fbstp
cld
adc
repnz
les
arpl
and
adc
outs
and
push
sar
inc
adc
imul
lock
outs
and
pop
cmps
outs
daa
pop
mov
loopne
aad
xor
or
les
ins
movs
jo
js
adc
push
mov
aam
and
pop
push
sub
pop
aas
ins
neg
inc
in
mov
test
pop
in
nop
and
pop
hlt
mov
jo
pop
pop
outs
push
movs
xchg
scas
add
push
mov
add
cdq
xchg
jne
xchg
mov
hlt
mov
and
jo
inc
mov
mov
es
pusha
rcl
retf
xor
retf
xlat
ret
adc
and
sahf
scas
jmp
add
xor
(bad)
mov
in
shl
aam
test
into
gs
loop
mul
in
je
and
adc
out
call
aas
rcr
in
add
xchg
pop
xor
adc
add
movs
adc
adc
sub
or
or
inc
aad
xor
and
ins
push
jne
dec
nop
jo
dec
inc
push
push
das
push
(bad)
jo
pop
aam
xor
das
aad
aas
dec
div
push
in
mov
test
push
in
cmovae
jnp
push
hlt
jno
bound
pop
pop
outs
push
aad
repnz
push
mov
test
push
mov
inc
stc
jne
xchg
mov
mov
mov
movs
xchg
and
xchg
cmps
mov
push
cli
mov
xor
in
mov
lods
adc
and
xchg
scas
loopne
repz
icebp
push
rol
xor
int
bnd
not
fs
repz
(bad)
vphaddwd
jecxz
nop
and
adc
fstp
sub
daa
shl
adc
sbb
add
aas
cmc
sbb
push
add
and
and
sbb
pop
loopne
aad
xor
push
(bad)
adc
(bad)
les
jae
dec
inc
dec
lds
pop
(bad)
pop
inc
fs
xor
push
ins
aad
aas
dec
div
mov
test
in
(bad)
out
addr16
push
mov
or
push
adc
gs
push
mov
jmp
movs
mov
and
jo
inc
test
fbld
mov
cdq
xor
pusha
rcl
int
mov
xlat
les
leave
and
ret
scas
mov
push
aam
mov
push
fdivr
out
fs
xor
add
in
(bad)
fisub
out
je
and
adc
fstp
xor
xor
and
push
add
pop
xchg
pop
and
cmc
inc
adc
ds
aaa
shld
pextrw
ss
sub
sub
xor
adc
les
cmp
imul
jp
cmp
dec
mov
push
dec
aad
aas
pop
neg
push
in
mov
test
pop
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
pop
push
test
scas
add
push
mov
add
add
jne
xchg
in
adc
mov
mov
inc
lock
pushf
and
xchg
cmps
(bad)
xor
pusha
xchg
push
cli
mov
xor
lahf
xlat
loopne
(bad)
adc
and
xchg
scas
mov
push
int
hlt
xor
ret
mov
shl
retf
add
loop
cdq
mul
(bad)
je
and
adc
rcr
daa
test
and
push
add
cmp
xor
push
cmc
or
cmp
movs
sbb
sub
xor
add
cmps
sbb
sbb
xor
dec
(bad)
fs
popa
les
dec
movs
dec
inc
inc
lds
pop
(bad)
bound
aam
add
push
je
push
aas
jae
ins
ja
in
mov
test
popa
in
unpcklps
inc
addr16
hlt
push
mov
jg
pop
pop
imul
xchg
mov
loopne
xchg
gs
test
push
cmps
xchg
jne
xchg
jmp
mov
and
jo
inc
scas
movs
xchg
and
movs
cmps
xchg
pusha
mov
mov
xor
loopne
mov
mov
(bad)
mov
(bad)
push
in
add
xor
ret
jbe
div
shl
retf
in
gs
call
and
adc
aad
(bad)
xchg
xor
rcl
push
outs
and
adc
push
cmc
add
sbb
inc
lock
movs
or
daa
cmp
xor
or
jl
jne
pop
nop
arpl
pop
das
push
(bad)
jnp
and
dec
xor
push
ins
aad
aas
outs
test
in
mov
test
pop
in
pcmpeqd
inc
addr16
hlt
inc
mov
inc
cmc
pop
pop
push
push
lods
xchg
test
gs
lods
out
test
xchg
xchg
popf
xchg
mov
ss
and
movs
call
cmps
cdq
xor
pusha
movs
push
cli
mov
xor
in
loopne
not
leave
and
mov
mov
xor
(bad)
mov
hlt
fs
xor
add
out
iret
data16
cmc
je
and
adc
ficomp
xor
xor
pop
in
add
add
adc
adc
cmp
adc
and
cmp
and
dec
loopne
aad
xor
add
les
push
jo
lds
push
(bad)
jae
(bad)
aam
add
push
cs
aas
das
div
or
jp
imul
push
addr16
hlt
dec
mov
push
jno
ins
push
xchg
xchg
mov
mov
gs
push
mov
out
adc
mov
shl
movs
xchg
and
pushf
cmps
mov
pusha
nop
push
mov
fistp
inc
mov
(bad)
loop
aam
fcmovb
loopne
lock
push
std
mov
ret
xor
add
jecxz
out
mul
(bad)
je
and
adc
iret
lahf
mov
shl
add
jnp
sub
outs
xchg
jb
adc
cmp
xor
pop
aaa
push
movs
sub
sbb
push
dec
and
mov
loopne
aad
xor
push
(bad)
ins
push
jbe
addr16
jo
cmovne
or
pop
mov
addr16
sub
pop
push
cs
aas
test
in
mov
test
imul
bound
hlt
inc
mov
push
cmc
pop
pop
push
mov
mov
in
push
and
inc
xchg
mov
adc
mov
mov
mov
fldenv
and
lods
xor
loopne
hlt
inc
cmps
adc
and
imul
lock
leave
add
push
les
(bad)
xlat
xor
add
aam
leave
iretw
out
je
and
adc
fcomp
xor
add
and
adc
pop
cmc
add
sbb
xor
push
lds
dec
push
cmps
jns
add
xor
push
(bad)
jl
imul
dec
inc
jae
adc
pop
(bad)
push
inc
jl
dec
add
push
ins
aad
aas
push
imul
dec
in
mov
test
in
cmovs
inc
addr16
hlt
dec
mov
or
push
lods
xchg
stos
add
push
mov
mov
stc
push
mov
mov
jne
xchg
mov
lea
mov
lods
movs
fbld
popf
cmps
cdq
xor
pusha
mov
xor
hlt
xlat
in
inc
lods
adc
and
mov
stc
push
int
retf
xor
loopne
xlat
jbe
imul
fs
xor
add
out
fisub
out
je
and
adc
repnz
les
jnp
sub
or
or
xor
and
cmc
inc
adc
adc
add
or
and
sbb
aaa
loopne
aad
xor
inc
(bad)
push
push
jbe
pop
nop
jnp
or
das
data16
je
je
xor
dec
aad
aas
push
div
ja
in
mov
test
jno
gs
push
addr16
hlt
push
mov
jo
pop
pop
dec
push
mov
xchg
add
push
mov
test
push
movs
xchg
adc
xchg
and
jo
inc
out
fldenv
mov
sahf
xor
pusha
les
mov
xor
hlt
xlat
jmp
mov
(bad)
xlat
scas
mov
push
int
mov
push
fidivr
iret
fs
fadd
loop
iret
data16
xor
adc
ficomp
jo
cmp
add
add
rcl
pop
adc
ds
aaa
push
movs
adc
xor
xor
push
movs
push
dec
add
das
loopne
aad
xor
sbb
jl
popa
les
nop
jo
je
jl
inc
das
xor
jp
and
dec
sbb
push
and
popa
aas
push
test
in
mov
test
jg
dec
lsl
pop
addr16
hlt
jl
imul
pop
ja
mov
mov
fwait
push
lods
gs
test
ret
adc
inc
mov
adc
mov
cmps
inc
scas
movs
lahf
and
and
push
mov
fistp
inc
mov
(bad)
lahf
scas
mov
push
retf
add
xor
pushf
mov
retf
xor
add
out
iret
data16
out
je
and
adc
in
lahf
xchg
xchg
xor
sub
(bad)
shr
and
and
imul
cmc
push
adc
add
movs
add
adc
movs
sbb
daa
adc
push
loopne
aad
xor
sbb
jl
jbe
bound
cmp
adc
push
inc
inc
pop
aam
add
push
ins
aad
aas
push
div
inc
in
mov
test
pop
in
unpckhps
pop
addr16
hlt
push
mov
or
push
lods
xchg
repz
push
mul
test
add
cmps
xchg
jne
xchg
mov
movs
mov
and
jo
inc
in
movs
mov
es
cmps
cdq
xor
pusha
fwait
push
cli
mov
xor
out
in
out
leave
and
mov
stc
push
mov
xor
loopne
in
jbe
idiv
fs
xor
add
fimul
fbstp
test
fcomp
xor
pusha
ror
in
add
or
or
adc
sbb
and
adc
xor
add
sub
pop
aad
xor
push
(bad)
jg
jbe
and
cmp
gs
inc
(bad)
jae
jae
ja
inc
mov
push
arpl
add
push
not
push
in
mov
test
pop
in
punpcklbw
cs
push
mov
inc
cmc
push
pop
dec
push
mov
push
mov
int
mov
(bad)
out
mov
adc
inc
stos
jne
xchg
lock
mov
mov
mov
iret
fisub
and
push
mov
fisttp
cmps
adc
and
imul
loopne
mov
out
aad
loope
sar
(bad)
xlat
xor
add
loop
iret
data16
out
je
and
adc
fistp
aaa
test
add
push
add
and
and
add
xchg
xor
mov
aaa
adc
and
sbb
pop
loopne
aad
xor
push
(bad)
ins
push
xor
sub
jo
push
inc
(bad)
lds
pop
(bad)
arpl
aam
and
inc
push
and
inc
aas
sub
dec
ja
in
mov
test
add
xor
add
dec
addr16
hlt
push
mov
dec
cmc
push
pop
outs
push
scas
xchg
test
push
mov
leave
test
push
mov
inc
mov
adc
mov
mov
lods
movs
lods
and
mov
pusha
rcl
test
push
rcl
inc
mov
(bad)
xchg
scas
mov
push
retf
add
push
ret
mov
jmp
shl
leave
add
out
data16
shl
adc
mov
pop
adc
ins
ror
in
add
cmp
add
adc
xchg
push
jg
mov
aaa
push
movs
sub
and
cmp
daa
daa
xor
xor
(bad)
inc
push
imul
dec
inc
jno
inc
das
pop
(bad)
je
jg
dec
add
push
dec
aad
aas
push
mul
dec
in
mov
test
jle
dec
unpcklps
jo
jge
jge
fs
jnp
inc
cmc
and
outs
push
lods
xchg
pushf
add
push
mul
test
push
mov
inc
mov
adc
pushf
mov
and
jo
inc
mov
fisub
test
xchg
push
xchg
mov
xor
in
in
inc
cmps
adc
and
call
(bad)
loop
mov
mov
push
(bad)
mov
fsub
retf
add
in
out
jecxz
fbstp
adc
lahf
les
jnp
sbb
adc
sbb
sub
pop
cmc
inc
adc
ds
aaa
or
and
push
cmps
xor
add
adc
pop
aad
xor
push
(bad)
pop
push
jbe
daa
nop
outs
movs
adc
cmp
jle
push
(bad)
jae
popa
aam
or
push
sub
inc
aas
push
imul
push
in
mov
test
popa
in
(bad)
out
addr16
dec
mov
(bad)
cmc
pop
pop
outs
push
cmps
xchg
scas
add
push
movs
gs
mov
cmps
out
mov
lods
xchg
jne
xchg
call
push
stos
inc
out
scas
and
pushf
cmps
mov
pusha
xchg
push
div
int3
push
hlt
xlat
test
mov
inc
inc
out
mov
(bad)
sar
shl
loopne
(bad)
in
gs
data16
out
je
and
adc
jecxz
lds
xor
jno
xor
je
daa
pop
xor
adc
push
mov
aaa
adc
cmp
dec
lds
inc
cmps
sbb
loopne
aad
xor
inc
(bad)
dec
push
dec
les
push
lds
inc
(bad)
jnp
pop
aam
add
push
sub
pop
aas
push
test
in
mov
test
dec
in
lsl
inc
addr16
push
mov
inc
cmc
push
pop
jle
adc
gs
test
push
mov
inc
mov
adc
mov
cmps
and
jo
inc
xchg
movs
mov
and
into
xor
loopne
cmc
inc
icebp
adc
and
std
scas
mov
push
rol
xor
clc
mov
(bad)
shl
retf
add
into
(bad)
fldenv
out
je
and
adc
mov
pop
and
add
push
xchg
pop
and
adc
and
movs
sbb
adc
movs
sbb
daa
push
mov
loopne
aad
xor
push
(bad)
je
imul
dec
inc
pop
lds
push
aam
and
pop
push
pop
aad
aas
push
imul
ja
in
mov
test
push
in
cmovbe
cmp
mov
or
push
test
lods
add
push
cmps
gs
test
push
lahf
xchg
jne
xchg
call
xor
mov
lods
cmps
cdq
xor
pusha
stos
push
cli
mov
xor
in
mov
lods
adc
and
int
mov
rol
iret
push
loop
movs
xor
fdivr
les
lds
fisttp
cmc
je
and
adc
fstp
or
add
and
or
data16
pop
adc
cmp
movs
adc
adc
push
and
sbb
dec
loopne
aad
xor
adc
les
popa
movs
adc
jb
push
das
inc
(bad)
jo
push
aam
or
push
arpl
inc
aas
push
not
push
in
mov
test
adc
imul
pop
hlt
dec
mov
inc
cmc
inc
pop
inc
push
test
stos
add
push
cmc
mov
mov
fwait
xchg
jne
xchg
in
adc
mov
(bad)
and
jo
inc
xchg
movs
mov
mov
pusha
nop
push
xor
push
rcl
inc
lods
adc
and
retf
inc
inc
aad
lds
mov
push
(bad)
mov
fisub
int3
add
fisttp
(bad)
je
and
adc
neg
aaa
test
adc
dec
add
and
or
sbb
or
imul
lock
xor
and
or
pop
aad
xor
or
push
push
popa
les
nop
inc
movs
dec
inc
and
fs
cmp
aam
and
jnp
sub
add
jne
inc
ja
in
mov
test
pop
in
unpckhps
and
jb
push
mov
push
cmc
jle
jp
adc
rol
mov
call
jne
xchg
scas
adc
scas
mov
and
jo
inc
mov
xchg
and
cdq
cmps
xchg
pusha
call
fild
inc
call
retf
and
in
scas
mov
push
mov
aad
push
sar
in
in
enter
pushf
fimul
les
rcl
lahf
(bad)
xchg
adc
or
in
add
xchg
pop
es
xor
jns
add
add
movs
inc
lock
movs
push
dec
push
cmps
push
daa
and
xor
adc
jb
xor
cmp
cmp
(bad)
push
inc
and
dec
xor
push
das
aad
aas
push
test
in
mov
test
push
in
unpckhps
inc
addr16
inc
mov
or
jp
outs
push
lods
xchg
test
mul
test
push
mov
inc
mov
adc
repnz
and
jo
inc
mov
iret
cdq
es
cmps
test
mov
xor
in
mov
out
leave
and
mov
fst
mov
push
cmp
lds
int
leave
lock
je
and
adc
rcr
test
shl
in
add
or
shl
adc
ds
aaa
add
and
sub
push
loopne
aad
xor
push
(bad)
adc
les
nop
sub
push
das
pusha
(bad)
arpl
aam
xor
imul
jno
ins
in
mov
test
gs
in
cmovns
push
addr16
hlt
sbb
jg
ss
cmc
addr16
push
add
push
lods
gs
mov
aad
mov
scas
xchg
adc
inc
mov
adc
xchg
mov
and
jo
inc
mov
iret
scas
es
cmps
call
mov
xor
cld
xlat
out
inc
loop
mov
(bad)
(bad)
nop
scas
enter
loop
int
ret
xor
fdivr
into
fs
xor
add
enter
hlt
out
je
and
jne
lahf
in
and
sub
add
and
or
add
pop
adc
xor
adc
push
movs
push
lock
xor
pop
movs
es
cmp
and
pop
mov
loopne
aad
xor
adc
push
push
popa
les
movs
dec
inc
dec
lds
pop
(bad)
jno
push
aam
adc
push
das
aad
aas
push
test
in
mov
test
arpl
jg
jnp
push
mov
inc
cmc
pop
pop
jo
rcl
mov
add
cmps
xchg
jne
xchg
(bad)
adc
lods
mov
and
jo
inc
(bad)
movs
test
and
push
mov
test
inc
aad
in
and
xlat
scas
mov
push
leave
add
push
fdivr
lea
retf
in
fimul
les
not
jecxz
(bad)
xchg
add
test
in
add
sbb
xchg
or
add
xchg
push
jg
mov
aaa
push
movs
cs
sbb
adc
and
inc
mov
loopne
aad
xor
or
les
jae
adc
lds
push
(bad)
pop
inc
fs
add
push
ins
aad
aas
data16
in
mov
test
in
unpckhps
inc
addr16
je
jge
pop
jne
cmc
je
jge
rcl
mul
test
mov
inc
mov
adc
repnz
and
jo
inc
lods
movs
popf
and
mov
pusha
mov
div
test
in
ret
adc
and
mov
stc
push
out
jmp
fwait
aad
push
fdivr
jecxz
lahf
xor
add
fisttp
(bad)
je
and
adc
rcr
xor
aas
ror
test
and
or
adc
xor
sub
shld
lds
push
cmps
add
loopne
aad
xor
or
outs
push
les
movs
pop
inc
cmp
gs
aas
(bad)
jo
pop
aam
add
dec
aad
aas
pop
test
in
mov
test
push
in
cmovle
and
hlt
mov
pop
cmc
inc
pop
dec
push
test
scas
add
push
mov
test
push
add
jne
xchg
in
adc
xchg
mov
and
jo
inc
scas
movs
xchg
and
xchg
cmps
sahf
xor
pusha
xchg
mov
xor
(bad)
xlat
call
and
xchg
scas
inc
(bad)
out
int3
add
push
sar
fs
fiadd
ror
shl
adc
fstp
xor
add
adc
adc
and
adc
push
mov
aaa
push
movs
adc
xor
es
and
adc
add
aaa
xor
cmp
push
push
xor
movs
dec
inc
outs
lds
pop
(bad)
pop
inc
and
mov
push
ins
aad
aas
jp
xor
adc
ins
mov
test
in
sysret
out
addr16
hlt
push
mov
inc
cmc
pop
pop
imul
loop
mul
test
add
cdq
xchg
jne
xchg
xchg
adc
jmp
jo
inc
scas
movs
xchg
and
xchg
lahf
push
cli
mov
xor
loopne
cld
inc
lods
adc
and
xchg
scas
mov
push
retf
xor
std
mov
(bad)
fs
xor
fisttp
les
jecxz
cmc
cmc
mov
lahf
icebp
xchg
and
sub
cmp
jne
adc
and
adc
pop
cmc
and
add
movs
cs
lds
and
sbb
pop
loopne
aad
xor
adc
inc
push
inc
les
jae
push
inc
pop
lds
das
daa
(bad)
ja
fs
adc
push
jbe
inc
aas
push
imul
mov
test
gs
in
sysret
out
addr16
hlt
ins
mov
or
push
rcl
and
out
test
mov
inc
mov
adc
movs
mov
and
jo
inc
in
movs
fwait
and
and
enter
int
in
xlat
out
inc
(bad)
adc
and
lock
jmp
push
fadd
jmp
mov
(bad)
xchg
lds
dec
fbstp
les
rcr
xor
add
cmp
sub
sub
and
sub
getsec
pop
movs
pop
lock
lds
xor
mov
loopne
aad
xor
push
(bad)
pop
push
xor
movs
dec
inc
and
adc
pop
(bad)
jg
jg
push
and
sbb
push
not
pop
in
mov
test
js
inc
packsswb
jno
inc
hlt
push
mov
inc
cmc
dec
pop
dec
push
test
mov
xchg
push
cmc
gs
test
add
ret
adc
inc
mov
adc
xchg
mov
and
jo
inc
hlt
movs
cwde
and
xchg
cmps
sahf
xor
pusha
mov
xor
hlt
xlat
call
and
lahf
scas
retf
inc
inc
in
repz
push
(bad)
mov
int3
fs
xor
add
loop
int
(bad)
(bad)
les
fcomp
aaa
test
in
add
and
aaa
ror
cmp
adc
pop
lock
movs
and
daa
pop
mov
loopne
aad
xor
cmp
ins
push
push
movs
dec
inc
dec
lds
pop
(bad)
jge
daa
aam
adc
push
cs
aas
ins
not
jne
ins
mov
test
jns
cmovnp
push
addr16
hlt
pop
mov
push
cmc
push
pop
outs
push
stos
xchg
mov
sti
push
sti
gs
test
add
mov
inc
mov
adc
mov
fild
movs
xchg
in
shl
mov
xor
xchg
xlat
ret
adc
and
std
scas
inc
(bad)
cmps
push
iret
add
push
cmp
shl
retf
add
in
out
data16
les
xchg
lds
xor
add
and
adc
sbb
aas
adc
ds
aaa
and
sub
and
das
cmps
cmp
push
mov
loopne
aad
xor
es
jl
push
les
dec
movs
adc
lds
das
pop
(bad)
jo
fs
sbb
push
ins
aad
aas
push
div
ja
in
mov
test
in
(bad)
out
addr16
hlt
push
mov
dec
cmc
jb
inc
push
stos
xchg
xchg
add
push
cmc
lods
test
push
scas
xchg
mov
call
and
jo
inc
lods
movs
mov
mov
cwde
and
xor
mov
(bad)
mov
repnz
(bad)
add
xor
ret
jbe
test
add
int
leave
data16
in
xlat
and
adc
repz
ficom
cmp
and
adc
outs
jl
sbb
rcl
and
ds
aaa
and
and
and
dec
loopne
aad
xor
sub
inc
push
inc
les
movs
jo
dec
lds
push
(bad)
push
inc
jle
outs
and
pop
push
dec
aad
aas
push
imul
push
push
mov
test
push
in
cmovno
pop
addr16
hlt
addr16
push
adc
jbe
push
push
test
inc
push
cmc
mov
hlt
push
rol
jne
xchg
in
adc
mov
xchg
and
jo
inc
out
movs
and
xchg
cmps
pushf
xor
pusha
test
lahf
mov
xor
retf
inc
mov
lds
inc
cld
(bad)
cli
push
enter
aad
lock
loope
out
jbe
test
add
jecxz
jecxz
mul
lds
aam
(bad)
(bad)
jne
lahf
mov
shr
in
add
add
xor
xor
adc
sbb
cmp
sbb
pop
and
daa
cmps
daa
daa
pop
mov
loopne
aad
xor
push
(bad)
jbe
push
les
jo
push
inc
pop
lds
das
pop
(bad)
jl
addr16
and
jb
pop
aas
push
neg
dec
in
mov
test
nop
arpl
hlt
push
mov
or
bound
jle
xchg
lea
test
add
mov
inc
mov
adc
mov
mov
mov
mov
sahf
cmps
mov
push
movs
mov
xor
jmp
adc
and
xlat
scas
les
(bad)
rcl
mov
push
pushf
mov
jmp
in
gs
leave
data16
aad
in
and
adc
ret
xchg
and
jg
daa
shl
in
add
and
daa
pop
fs
sub
adc
xchg
push
jg
mov
aaa
sub
and
add
or
or
push
xor
push
(bad)
jl
imul
push
inc
outs
lds
pop
(bad)
pop
inc
pop
aam
add
ins
aad
aas
sub
inc
ja
in
mov
test
in
punpckldq
inc
addr16
push
mov
outs
cmc
bound
outs
push
xchg
xchg
test
rol
test
mov
xchg
adc
inc
out
test
lods
ss
mov
and
jo
inc
mov
fbld
lahf
cmps
les
pusha
cmps
push
mov
fistp
inc
lods
adc
and
fild
icebp
push
call
aad
push
out
jmp
in
test
add
out
(bad)
out
je
and
adc
fstp
xor
(bad)
rcr
in
add
cmp
push
rcl
sbb
and
add
or
and
add
adc
xor
adc
les
ins
movs
jge
pop
lds
das
cmp
pop
inc
inc
aam
and
pop
push
sub
not
ins
in
mov
test
push
in
movq
inc
addr16
hlt
pop
mov
inc
cmc
push
pop
fs
test
mov
gs
test
push
scas
xchg
adc
mov
fwait
jo
inc
cmps
movs
stos
and
cdq
cmps
pushf
xor
pusha
xchg
push
cmps
mov
xor
(bad)
repz
rcl
mov
rol
rol
scas
mov
push
int
stc
xor
(bad)
mov
jmp
enter
shl
(bad)
fisub
out
je
and
adc
fcomp
xor
add
and
or
and
add
jg
mov
aaa
push
movs
sbb
sbb
or
cmps
fs
sbb
xor
push
(bad)
push
push
push
les
inc
jb
dec
das
pusha
(bad)
push
inc
jnp
dec
sbb
push
and
jl
jge
inc
ja
in
mov
test
gs
in
cmovp
pop
addr16
hlt
push
mov
inc
cmc
pop
pop
jo
test
mov
jecxz
jmp
add
into
xchg
xchg
xchg
mov
mov
mov
and
jo
inc
mov
iret
xchg
mov
xchg
pusha
test
cdq
mov
xor
loopne
hlt
inc
rcl
retf
and
(bad)
xlat
push
retf
add
xor
fistp
xchg
repnz
gs
xchg
out
je
and
adc
out
(bad)
xchg
and
sub
jnp
es
add
arpl
adc
pusha
cmc
sbb
cmp
movs
and
sub
or
sbb
or
or
jnp
add
push
push
pop
les
xor
dec
inc
dec
lds
pop
mov
fs
xor
push
(bad)
aad
aas
push
imul
mov
test
in
cmovs
dec
addr16
data16
push
push
nop
xchg
test
gs
test
push
mov
mov
inc
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
fbld
xchg
cmps
cdq
xor
pusha
stos
push
cli
mov
xor
repnz
cld
inc
lods
adc
and
xlat
scas
mov
push
aam
call
push
iret
mov
jecxz
test
aad
stos
in
gs
data16
fbstp
ficom
rcr
jg
add
and
ss
and
xchg
or
adc
ds
aaa
sub
lds
and
or
dec
loopne
aad
xor
adc
push
nop
imul
jb
inc
aam
cmp
push
dec
aad
aas
inc
div
mov
test
imul
and
push
hlt
sbb
jg
cmp
cmc
addr16
outs
push
xchg
xchg
lods
add
push
mul
test
push
scas
xchg
adc
and
xchg
and
and
push
popf
mov
xor
not
retf
inc
clc
adc
and
nop
scas
jecxz
fld
out
leave
add
push
fnstcw
aam
shl
add
loop
enter
std
je
and
adc
rcr
sub
add
and
or
adc
aas
adc
sbb
sbb
or
xor
cmp
pop
daa
inc
mov
loopne
aad
xor
push
(bad)
ins
push
ja
sub
inc
movs
jb
cmp
push
das
pop
(bad)
arpl
aam
add
push
das
aad
aas
push
test
in
mov
test
jno
pop
lsl
inc
addr16
hlt
push
mov
inc
cmc
jbe
imul
xchg
mov
loopne
hlt
gs
pop
xchg
cmps
jne
xchg
mov
xor
inc
scas
movs
and
cmps
xchg
mov
xor
hlt
xlat
in
inc
mov
(bad)
mov
call
mov
push
sar
in
shl
into
add
in
(bad)
data16
ret
je
and
adc
fstp
and
add
and
adc
es
push
shl
sbb
push
push
aaa
or
and
cmp
outs
daa
inc
mov
loopne
aad
xor
ds
inc
push
outs
les
xor
dec
inc
pusha
lds
das
jbe
dec
inc
ins
aam
xor
push
sub
test
in
mov
test
pop
in
orps
inc
addr16
hlt
dec
mov
or
push
test
mul
test
add
mov
mov
rol
movs
shl
scas
cmps
fnstenv
pusha
xchg
push
test
mov
inc
lods
adc
and
xchg
scas
fiadd
(bad)
out
push
int3
add
push
(bad)
mov
leave
shl
iret
add
mov
retf
out
je
and
adc
fcomp
xor
jg
jb
dec
add
or
or
adc
cmp
cs
adc
cmps
xor
das
mov
loopne
aad
xor
adc
inc
push
pusha
les
movs
pop
inc
jno
pusha
das
push
(bad)
jne
jae
inc
sbb
push
(bad)
aad
aas
jnp
jno
jb
push
mov
test
push
in
mulps
push
addr16
hlt
adc
pop
cmc
jg
push
add
push
mov
aam
cmps
add
mov
inc
mov
mov
stos
ss
lea
movs
pushf
and
xchg
cmps
fnsave
pusha
xchg
push
mov
test
push
call
adc
and
(bad)
scas
mov
push
iret
add
push
ret
mov
xchg
fs
enter
cli
gs
aad
mov
and
adc
fcomp
aaa
test
adc
test
pop
aas
xchg
daa
rcr
xor
jg
mov
aaa
pop
movs
cmp
dec
lds
and
sub
xor
push
(bad)
ins
push
dec
les
jo
jne
jb
or
addr16
gs
addr16
xor
push
das
aad
aas
pop
test
in
mov
test
pop
in
lsl
pop
addr16
hlt
push
mov
or
inc
pop
inc
push
test
cli
gs
test
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
test
cwde
mov
pusha
cmps
push
mov
fbstp
mov
lds
inc
sti
(bad)
rcl
mov
push
ret
jbe
not
fs
xor
add
ror
les
not
fstp
adc
ins
rcr
in
add
sub
and
and
aas
adc
cmp
movs
cmp
and
cmp
sbb
loopne
aad
xor
ss
jg
dec
les
jae
pop
inc
pop
lds
das
outs
(bad)
ja
fs
sbb
push
dec
aad
aas
pop
neg
dec
in
mov
test
in
addps
inc
addr16
je
jge
pop
jne
cmc
pop
pop
jle
mov
test
gs
test
xchg
xchg
adc
inc
mov
adc
icebp
mov
and
jo
inc
lods
movs
popf
and
sahf
cmps
xchg
pusha
test
stc
mov
xor
iret
xlat
mov
not
into
and
mov
stc
push
ret
add
xor
cmp
lea
jecxz
stos
in
gs
enter
cmc
je
and
adc
cld
lahf
jmp
rcl
in
add
and
xor
adc
ds
aaa
xor
and
and
adc
inc
aad
xor
or
pusha
push
imul
adc
push
lds
das
pop
mov
cmp
jle
push
imul
dec
in
mov
test
pop
in
(bad)
out
addr16
hlt
pusha
mov
dec
cmc
and
inc
push
stos
xchg
scas
add
push
mul
test
push
scas
xchg
jne
xchg
stos
adc
mov
test
out
fisub
mov
pusha
xchg
push
lea
lds
xlat
repnz
rcl
call
inc
nop
scas
mov
push
retf
xor
loopne
fnsave
imul
xlat
xor
add
fisttp
fidiv
ret
cmc
jmp
pop
aaa
test
sub
test
outs
and
je
or
push
adc
add
movs
adc
or
xor
pop
movs
and
cmps
sbb
loopne
aad
xor
adc
pusha
push
popa
les
nop
outs
movs
je
jb
push
das
push
aam
and
pop
push
push
aad
aas
jb
push
pop
in
mov
test
gs
pop
sysret
out
addr16
hlt
push
mov
or
push
leave
xchg
mov
push
mov
mov
mov
mov
mov
jne
xchg
mov
mov
mov
movs
mov
mov
pusha
adc
leave
xor
loopne
int3
inc
sti
adc
and
xchg
scas
retf
(bad)
fst
mov
push
ret
jbe
not
fs
fiadd
repnz
out
je
and
adc
ficomp
sub
push
rcr
in
add
sub
jne
adc
xchg
push
jg
mov
aaa
adc
cs
adc
adc
xor
xor
ds
inc
push
xor
and
jns
inc
das
ds
je
pop
aam
or
push
jb
arpl
jnp
sub
in
mov
test
in
unpckhps
and
mov
pop
cmc
pop
pop
push
mov
test
gs
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
xchg
movs
fwait
and
fwait
cmps
cdq
xor
pusha
adc
mov
in
jmp
jecxz
mov
(bad)
(bad)
xchg
scas
mov
push
retf
add
xor
fdivr
into
xlat
xor
add
fisttp
lock
and
adc
(bad)
lahf
lds
sub
add
sbb
and
pop
cmc
inc
adc
cmp
movs
pop
lock
lds
and
sbb
add
pop
aad
xor
adc
dec
push
jbe
and
and
bound
push
(bad)
jae
addr16
or
push
(bad)
aad
aas
push
test
in
mov
test
in
packssdw
push
addr16
ins
mov
jbe
pop
pop
imul
mov
mul
test
push
mov
inc
mov
adc
mov
fisub
jo
inc
mov
pushf
and
and
push
in
mov
(bad)
mov
and
lahf
scas
test
stc
push
mov
stos
xor
fistp
enter
enter
shl
(bad)
fsub
out
je
and
adc
aam
jmp
and
jb
pusha
rcr
in
add
cmp
or
push
cmc
push
adc
movzx
pop
movs
cmp
sbb
xor
adc
sbb
loopne
aad
xor
adc
les
js
dec
inc
jb
push
das
je
arpl
aam
add
push
ins
aad
aas
pop
not
push
in
mov
test
pop
in
lsl
inc
ins
hlt
push
mov
inc
cmc
gs
pushw
test
cmc
gs
test
test
mov
adc
lahf
mov
and
jo
inc
lods
movs
xchg
and
mov
xor
mov
xor
lock
mov
rol
scas
test
icebp
push
retf
xor
aam
(bad)
jbe
div
xchg
retf
add
out
iret
data16
(bad)
je
and
adc
cld
lahf
rcl
cmp
and
dec
add
and
adc
addr16
push
adc
cmp
movs
adc
push
lds
and
and
sub
add
sbb
sbb
dec
push
imul
adc
cmp
push
das
dec
(bad)
js
outs
aam
add
push
ins
aad
aas
aaa
imul
dec
in
mov
test
in
nop
push
addr16
hlt
addr16
jnp
pop
cmc
outs
pop
outs
push
test
mul
test
push
mov
inc
call
(bad)
mov
and
jo
inc
test
iret
cdq
es
cdq
xor
pusha
test
mov
xor
in
cld
inc
lods
adc
and
mov
fist
repz
lds
shl
add
fisttp
div
(bad)
adc
fcomp
add
add
and
or
adc
cmp
movs
pop
lock
or
push
cmps
outs
daa
add
push
loopne
aad
xor
sbb
push
push
jbe
sub
inc
cmp
popa
das
inc
(bad)
jo
jnp
dec
add
push
dec
aad
aas
jo
dec
ja
in
mov
test
sbb
sub
pop
out
addr16
hlt
dec
mov
js
pop
pop
outs
push
stos
xchg
stos
add
push
mul
test
push
mov
inc
mov
adc
mov
rol
movs
test
mov
pusha
mov
stc
mov
xor
mov
les
shl
xchg
scas
mov
push
int
mov
push
lds
fbld
xlat
add
fisttp
(bad)
je
and
adc
sti
lahf
retf
xchg
or
aaa
test
ror
in
add
xchg
pop
ds
or
ss
sbb
jg
mov
aaa
add
and
xor
mov
loopne
aad
xor
xor
ins
push
xor
jno
push
movs
or
lds
dec
(bad)
pusha
inc
jne
jb
and
inc
aas
jge
dec
ja
in
mov
test
jnp
pop
subps
daa
addr16
hlt
inc
mov
or
push
pop
jle
adc
gs
test
push
movs
xchg
jne
xchg
mov
mov
mov
in
movs
fisub
mov
pusha
xchg
push
div
lea
xlat
hlt
inc
not
shl
cmc
scas
mov
push
leave
add
push
sar
fs
xor
add
test
je
and
adc
ficomp
sub
add
daa
xchg
pop
adc
adc
xor
movs
sbb
and
cmps
sbb
sbb
aaa
loopne
aad
xor
sub
jl
imul
nop
jae
dec
inc
push
lds
das
pop
mov
fs
cmp
push
ins
aad
aas
push
test
in
mov
test
push
popa
nop
jg
pop
hlt
inc
mov
push
cmc
bound
outs
push
test
cmc
xchg
add
mov
mov
adc
xchg
mov
and
jo
inc
stos
movs
fisub
out
cmps
mov
cmps
pusha
mov
xor
in
repz
ret
and
ret
inc
(bad)
push
retf
xor
test
out
shl
lds
fisttp
fbstp
out
out
mov
lahf
out
xchg
xor
and
add
xchg
pop
and
adc
ds
aaa
shld
push
lds
and
sbb
sub
inc
aad
xor
adc
les
nop
xor
adc
inc
(bad)
jae
js
dec
or
push
jae
push
aas
push
not
adc
push
mov
test
push
in
nop
push
addr16
dec
mov
inc
cmc
push
pop
jle
test
mov
mov
test
push
mov
movs
adc
inc
xchg
jne
xchg
mov
ss
mov
and
jo
inc
jmp
iret
cdq
es
cmps
pushf
xor
pusha
xchg
push
mov
fisttp
mov
lds
cld
(bad)
loopne
mov
mov
push
(bad)
mov
repz
enter
shl
(bad)
iret
iretw
out
je
and
adc
fstp
aaa
test
sar
push
add
jnp
adc
xor
adc
push
mov
aaa
xor
lds
and
and
mov
loopne
aad
xor
adc
dec
push
jg
sub
imul
das
pop
(bad)
arpl
aam
adc
push
sub
inc
aas
jns
push
ja
in
mov
test
push
in
divps
push
addr16
hlt
push
mov
ins
cmc
pop
pop
dec
push
mov
push
hlt
gs
repz
call
jne
xchg
mov
movs
mov
and
jo
inc
mov
xchg
and
and
int
in
scas
push
loope
cld
inc
mov
(bad)
xchg
scas
aad
sti
(bad)
icebp
push
mov
xor
(bad)
mov
jmp
in
gs
jmp
jecxz
les
not
call
sub
add
add
daa
pop
cmp
adc
movzx
aaa
add
aaa
lock
outs
and
cmp
and
loopne
aad
xor
adc
push
nop
outs
movs
dec
inc
push
adc
outs
(bad)
popa
inc
fs
cmp
push
sub
jge
outs
test
in
mov
test
ins
in
unpckhps
jg
inc
hlt
push
mov
pmaddwd
pop
add
add
push
mul
test
push
test
mov
adc
movs
mov
and
jo
inc
jmp
iret
cwde
es
cdq
xor
pusha
cdq
push
mov
mov
out
xlat
out
inc
lods
adc
and
loop
ret
(bad)
in
push
loop
mov
push
(bad)
mov
nop
xor
add
mov
sahf
out
xchg
les
fcomp
adc
and
sbb
syscall
cmp
xor
popa
xchg
sub
adc
cs
add
movs
and
and
cmp
sbb
adc
inc
aad
xor
das
(bad)
pusha
push
jbe
es
pop
movs
adc
jg
jge
push
(bad)
jno
jg
dec
add
push
dec
aad
aas
pop
not
push
in
mov
test
pop
in
cmovns
push
addr16
adc
jo
pop
pop
outs
push
mov
test
test
test
mov
adc
mov
rol
movs
pushf
and
popf
cmps
ret
pusha
xchg
push
movs
mov
xor
aam
mov
mov
lds
inc
inc
std
push
aad
mov
push
(bad)
mov
into
fs
xor
add
out
ret
out
je
and
adc
fcomp
sub
add
adc
aaa
pop
and
adc
push
mov
aaa
push
movs
adc
xor
movs
jno
inc
cmps
sbb
loopne
aad
xor
xor
ins
push
les
ins
movs
dec
inc
lds
pop
(bad)
ja
pop
aam
add
push
aad
aas
push
test
outs
mov
test
jge
pop
orps
pop
addr16
hlt
push
mov
adc
inc
pop
outs
push
mov
push
and
inc
xchg
xchg
fst
jmp
jo
inc
mov
iret
mov
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
shr
icebp
push
in
loope
vpsraw
mov
loope
fidiv
loope
in
in
gs
lds
out
je
and
adc
ficomp
sub
arpl
ins
in
add
and
and
adc
cmp
movs
cmp
and
pop
cmps
sbb
sbb
sbb
xor
adc
bound
les
nop
jno
adc
cmp
pop
das
dec
(bad)
ja
js
push
and
push
pop
aad
aas
outs
not
inc
in
mov
test
push
in
unpcklps
pop
addr16
push
mov
or
push
lods
xchg
test
gs
test
push
mov
mov
jne
xchg
mov
mov
mov
and
jo
inc
scas
movs
fbld
popf
cmps
test
pusha
adc
fbstp
inc
mov
(bad)
xchg
scas
mov
aad
loop
rol
xor
cmp
fiadd
fisttp
les
rcl
(bad)
lahf
repz
ds
or
in
add
and
xadd
pop
jg
mov
aaa
and
lds
and
cmps
add
loopne
aad
xor
adc
les
nop
jb
inc
jae
push
inc
and
adc
push
jbe
inc
aas
push
test
in
mov
test
in
cmovg
arpl
hlt
jge
jg
ss
cmc
push
pop
outs
push
aad
scas
add
push
hlt
mov
mov
mov
inc
mov
adc
xchg
mov
and
jo
inc
out
movs
mov
es
cmps
sahf
xor
pusha
adc
cwde
xor
retf
inc
mov
lds
inc
cld
(bad)
iret
push
jecxz
mov
push
(bad)
mov
in
shl
test
(bad)
cmc
data16
les
adc
lahf
fst
shl
in
add
and
or
pop
cmc
add
xor
adc
pop
movs
aas
lock
lds
and
or
inc
aad
xor
or
bound
les
nop
dec
movs
or
lds
cmp
aam
add
push
(bad)
aad
aas
push
test
push
mov
test
gs
in
pcmpeqb
pop
addr16
dec
mov
or
inc
pop
inc
push
adc
gs
test
add
add
jne
xchg
loop
(bad)
(bad)
jmp
mov
mov
xchg
inc
mov
iret
call
pusha
les
mov
xor
hlt
xlat
hlt
inc
jecxz
in
and
xchg
scas
mov
icebp
push
int3
add
xor
les
(bad)
fs
xchg
add
loop
pushf
data16
shl
adc
movs
lahf
retf
xchg
sub
sub
rcl
in
add
and
xor
adc
xchg
push
jg
mov
aaa
adc
and
pop
cmps
sbb
pop
mov
loopne
aad
xor
dec
(bad)
je
imul
dec
inc
pop
lds
pop
(bad)
dec
inc
data16
or
push
ins
aad
aas
imul
or
jbe
je
jle
bound
adc
hlt
push
mov
or
push
lods
xchg
mov
mov
cmps
gs
out
add
xchg
adc
inc
mov
adc
movs
mov
and
jo
inc
pushf
movs
fbld
xchg
cmps
test
mov
xor
(bad)
jmp
not
leave
and
mov
stc
push
fiadd
(bad)
xor
cwde
mov
xchg
fs
xor
add
out
fisub
out
je
and
adc
(bad)
lahf
cli
xchg
push
pop
aaa
test
ror
in
add
and
add
pusha
cmc
inc
adc
or
pop
lock
ins
and
and
adc
xor
aas
(bad)
push
nop
js
ja
imul
jne
jg
dec
xor
cs
aas
inc
neg
push
in
mov
test
imul
pop
addr16
hlt
ins
mov
or
push
pop
dec
push
test
mov
mov
std
push
scas
xchg
jne
xchg
in
adc
mov
jo
inc
out
xchg
and
test
xchg
push
mov
xchg
push
(bad)
test
mov
inc
cmc
(bad)
loop
int
retf
xor
sti
mov
xchg
fs
xor
add
loop
iret
retw
out
je
and
adc
mov
pop
and
shr
test
pop
cmp
cmc
push
adc
push
mov
aaa
das
movs
adc
sbb
xor
pop
movs
push
dec
pop
cmps
sbb
loopne
aad
xor
sbb
or
les
jno
push
das
dec
(bad)
arpl
aam
add
push
dec
aad
aas
push
test
in
mov
test
push
in
unpcklps
pop
addr16
hlt
push
mov
inc
cmc
pop
pop
imul
call
gs
cld
add
mov
inc
mov
adc
(bad)
mov
and
jo
inc
jmp
iret
aad
and
mov
push
loopne
jmp
(bad)
iret
scas
cli
inc
sti
(bad)
loop
mov
mov
push
ret
jbe
idiv
fs
aam
(bad)
in
gs
std
data16
ret
je
and
jne
lahf
repz
and
shl
in
add
jg
aaa
pop
addr16
add
adc
xchg
push
jg
mov
aaa
adc
adc
pextrw
push
and
inc
cmps
sbb
pop
mov
loopne
aad
xor
adc
jl
xor
dec
nop
jae
push
inc
aas
lds
pop
(bad)
sbb
add
push
ins
aad
aas
data16
in
mov
test
in
punpckldq
inc
addr16
hlt
pop
mov
jl
pop
pop
outs
push
mov
(bad)
gs
test
push
mov
inc
call
(bad)
jmp
and
jo
inc
nop
movs
fbld
mov
pusha
cmps
push
sti
mov
xor
not
inc
retf
and
xchg
scas
mov
push
retf
add
push
cwde
mov
retf
fs
xor
add
fisttp
fbstp
rcl
mov
pop
add
add
cmp
aaa
pop
cmp
adc
ds
aaa
add
and
add
ss
aad
xor
push
(bad)
outs
push
inc
les
nop
outs
movs
inc
inc
jno
adc
arpl
jae
jg
push
sbb
push
sub
inc
aas
push
imul
push
in
mov
test
push
in
packsswb
push
addr16
hlt
popa
mov
inc
cmc
push
pop
outs
push
rcl
mul
test
push
mov
inc
mov
adc
scas
mov
and
jo
inc
out
pushf
and
xchg
cmps
mov
push
mov
fistp
inc
mov
(bad)
xchg
scas
clc
inc
rol
scas
push
int
shl
out
mov
mul
retf
add
loop
into
data16
and
adc
rcr
test
and
sbb
sbb
adc
cmp
adc
push
movs
pop
lock
or
and
daa
loopne
aad
xor
push
(bad)
jl
jo
dec
nop
jo
or
lds
pop
(bad)
jae
addr16
sub
push
sub
not
in
mov
test
push
in
nop
jg
push
hlt
adc
inc
cmc
inc
pop
dec
push
adc
gs
std
add
mov
inc
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
iret
cwde
es
cmps
mov
push
clc
mov
xor
in
xlat
lock
mov
(bad)
xchg
scas
aam
sti
(bad)
cmc
push
rol
xor
clc
mov
icebp
fs
xor
add
int3
(bad)
out
je
and
adc
aad
test
ins
shl
in
add
xor
daa
pop
and
adc
cmp
sub
and
push
cmps
sbb
add
aad
xor
adc
jl
sub
xchg
jae
dec
inc
cmp
(bad)
push
inc
pop
aam
and
push
ins
aad
aas
test
in
mov
test
in
punpckldq
jg
pop
hlt
or
push
cmc
pop
pop
ins
push
mov
test
gs
test
add
xchg
xchg
jne
xchg
call
ss
mov
and
jo
inc
lods
movs
fbld
xchg
cmps
cdq
xor
pusha
stos
push
cli
mov
xor
retf
xlat
fild
into
and
(bad)
clc
push
jmp
push
fdivr
aad
shl
jecxz
stos
in
fisttp
fidiv
(bad)
adc
fcomp
xor
jnp
daa
in
add
and
or
adc
add
add
adc
lds
dec
and
mov
loopne
aad
xor
adc
push
push
jbe
ins
nop
dec
movs
adc
cmp
ins
das
push
(bad)
jo
push
aam
add
push
dec
aad
aas
push
in
mov
test
push
in
andps
pusha
addr16
dec
mov
inc
cmc
pop
pop
dec
push
fist
cmc
gs
test
push
mov
inc
sahf
jne
xchg
mov
xchg
mov
div
xchg
movs
mov
es
cmps
mov
pusha
cmps
push
mov
fbstp
inc
mov
(bad)
xchg
scas
inc
(bad)
cmc
push
call
aad
push
(bad)
mov
into
shl
fiadd
cmc
(bad)
cdq
mul
cld
je
and
adc
repnz
lds
pusha
shl
in
add
xor
aas
pop
cmp
cmc
push
adc
push
mov
aaa
sub
lds
and
sbb
and
xor
adc
ins
push
push
movs
dec
inc
dec
lds
cmp
jg
and
push
xor
push
das
aad
aas
pop
test
gs
test
adc
dec
cvtps2pd
push
addr16
hlt
inc
mov
jae
pop
pop
jno
mov
mov
in
push
mov
mov
mov
cmps
xchg
jne
xchg
hlt
adc
mov
cwde
inc
call
iret
mov
mov
pusha
mov
cli
mov
xor
loopne
jmp
lods
adc
and
xchg
scas
test
icebp
push
aam
jmp
(bad)
stos
push
out
repz
not
add
mov
jecxz
(bad)
test
rcl
lahf
call
test
shl
in
add
cmp
xchg
or
adc
pop
adc
outs
mov
aaa
adc
and
and
sbb
ds
loopne
aad
xor
adc
inc
push
imul
dec
inc
and
jo
ds
je
dec
aam
add
push
(bad)
aad
aas
dec
test
in
mov
test
in
nop
pop
addr16
hlt
push
mov
or
push
lods
xchg
in
add
push
fwait
gs
test
add
mov
inc
mov
adc
mov
jo
inc
test
iret
and
movs
pusha
xchg
push
stos
mov
xor
loopne
icebp
inc
not
leave
and
mov
fist
cli
xor
les
aam
test
lds
fisttp
fbstp
popf
adc
rcr
jb
adc
je
adc
outs
and
or
adc
cmp
cmp
sbb
xor
sbb
and
pop
aad
xor
adc
les
ins
movs
jo
inc
lds
das
outs
mov
aam
add
push
arpl
inc
aas
sub
gs
in
mov
test
inc
in
minps
pop
addr16
hlt
dec
mov
or
pop
pop
push
add
push
hlt
gs
out
cmc
push
scas
xchg
adc
xchg
and
jo
inc
mov
pushf
and
and
int
pushf
fistp
inc
movs
adc
inc
mov
icebp
push
jmp
shl
(bad)
mov
into
fs
out
hlt
in
fimul
ret
je
and
jne
lahf
lds
or
add
and
or
sbb
pop
adc
or
aas
lock
addr16
add
push
loopne
aad
xor
sub
ins
push
xor
and
jo
dec
inc
inc
lds
pop
(bad)
push
inc
addr16
and
push
and
outs
aas
ins
test
in
mov
test
push
in
minps
pop
addr16
push
mov
ins
cmc
jg
outs
push
adc
gs
test
add
rol
jne
xchg
mov
xor
inc
scas
movs
and
xchg
pusha
movs
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
leave
add
xor
test
(bad)
fs
lds
out
jecxz
(bad)
loop
in
and
adc
fcomp
sub
arpl
jne
adc
and
jb
sub
aas
adc
push
add
push
movs
inc
lock
cmp
(bad)
sbb
sbb
pavgb
jbe
add
jl
jb
bound
cmp
push
das
inc
(bad)
ja
addr16
and
sbb
aad
aas
jle
inc
ja
in
mov
test
inc
in
addps
inc
addr16
hlt
adc
push
cmc
inc
pop
push
add
push
mov
mov
out
popf
push
mov
inc
std
jne
xchg
in
adc
icebp
mov
and
jo
inc
lods
movs
xchg
and
test
xchg
push
call
push
in
out
inc
movs
adc
inc
hlt
scas
mov
push
aam
mov
push
repnz
int
out
xchg
add
mov
retf
out
je
and
adc
(bad)
lahf
repnz
push
pop
sub
in
add
add
and
fs
or
adc
cmp
and
adc
cmp
and
dec
loopne
aad
xor
push
(bad)
push
push
jbe
inc
nop
movs
adc
aas
lds
push
(bad)
outs
inc
pop
aam
or
push
arpl
inc
aas
push
mul
push
in
mov
test
in
cmovae
push
addr16
hlt
adc
inc
cmc
push
pop
dec
push
stos
xchg
mov
in
push
xchg
mov
mov
adc
inc
mov
adc
repz
and
jo
inc
lods
movs
test
xchg
cmps
mov
fsub
push
mov
fistp
inc
out
adc
(bad)
scas
fild
(bad)
in
int
call
push
fdivr
in
shl
rol
test
je
and
adc
hlt
lahf
mov
pusha
shl
in
add
add
adc
ss
sbb
jg
mov
aaa
and
and
aas
cmps
adc
pop
mov
loopne
aad
xor
cmp
addr16
les
inc
cmp
(bad)
arpl
aam
cmp
push
xor
pusha
aas
jno
dec
ja
in
mov
test
pop
in
lsl
bound
hlt
push
mov
inc
cmc
pop
pop
inc
push
adc
lea
mov
adc
inc
mov
adc
stos
mov
and
jo
inc
xchg
movs
and
cmps
xchg
pusha
mov
xor
loopne
fiadd
shl
in
scas
mov
push
leave
add
push
ret
jbe
not
shl
loope
lock
gs
jecxz
(bad)
(bad)
rcl
lahf
mov
sub
sub
adc
or
adc
pop
cmc
pop
adc
es
aaa
adc
sbb
and
sbb
sub
inc
aad
xor
xor
adc
les
jo
jge
jp
push
das
pop
(bad)
jb
dec
aam
add
push
dec
aad
aas
sub
dec
ja
in
mov
test
in
pcmpgtb
pop
addr16
push
mov
pop
cmc
pop
pop
or
lods
xchg
test
gs
test
push
mov
inc
xchg
xchg
jmp
call
and
jo
inc
mov
test
xor
pusha
mov
xor
cld
xlat
out
inc
lods
adc
inc
iret
scas
fiadd
(bad)
mov
xor
(bad)
mov
in
fs
xor
add
fisttp
fbstp
les
out
les
jnp
sbb
or
xchg
pop
and
cmc
inc
adc
ds
aaa
shld
pop
lds
adc
xor
add
add
and
and
inc
(bad)
push
push
jbe
pop
nop
push
movs
adc
jg
inc
das
push
(bad)
dec
inc
jno
ja
dec
mov
push
(bad)
aad
aas
push
not
push
in
mov
test
push
in
packssdw
push
addr16
hlt
sbb
jg
jnp
push
cmc
jne
inc
push
test
repz
push
hlt
lods
test
push
mov
inc
mov
adc
mov
jo
inc
stos
movs
mov
es
pusha
lds
mov
xor
(bad)
xlat
lods
inc
mov
lds
inc
inc
call
mov
push
(bad)
mov
into
fs
xchg
add
lds
(bad)
fcom
fstp
aaa
test
or
pop
add
and
and
adc
push
mov
aaa
xor
lds
pop
movs
jb
sbb
cmp
xor
or
push
push
pop
les
jb
inc
pop
lds
daa
(bad)
arpl
aam
add
push
je
add
push
mul
ins
in
mov
test
push
in
andnps
pop
addr16
push
mov
inc
cmc
pop
pop
inc
push
adc
gs
test
push
into
xchg
jne
xchg
jmp
mov
and
jo
inc
xchg
movs
shl
mov
xchg
push
stos
mov
xor
loopne
hlt
inc
out
adc
inc
xchg
scas
loop
aad
movs
push
loope
mov
push
ret
jbe
test
add
icebp
(bad)
out
(bad)
int3
je
and
adc
out
(bad)
xchg
pop
pop
or
add
and
adc
adc
ss
aas
mov
aaa
adc
and
and
pop
loopne
aad
xor
dec
(bad)
dec
push
imul
dec
inc
js
je
pop
(bad)
jno
push
aam
add
das
aad
aas
pop
test
in
mov
test
in
cmovs
push
addr16
je
jge
dec
jne
cmc
pop
pop
pop
push
lods
xchg
test
gs
test
add
mov
inc
mov
adc
push
mov
and
xchg
cmps
xor
mov
xor
not
call
and
mov
out
into
add
push
cld
mov
cmc
fs
xor
add
in
fsub
out
je
and
adc
fcomp
jne
shl
in
add
and
jae
sbb
sub
pop
mov
aaa
adc
and
pop
cmps
aaa
daa
add
xor
adc
les
ins
movs
pop
inc
outs
lds
das
pop
(bad)
gs
push
aam
and
popa
push
inc
aad
aas
push
neg
push
in
mov
test
gs
in
nop
fs
hlt
push
mov
inc
cmc
inc
pop
pop
push
test
mov
cdq
push
cmc
xchg
call
inc
mov
adc
xchg
mov
and
jo
inc
out
les
xchg
cmps
mov
test
mov
xor
hlt
xlat
lock
not
repz
hlt
scas
mov
push
int
mov
push
(bad)
mov
lahf
fs
xor
add
loop
iret
data16
out
je
and
adc
mov
pop
and
add
cmp
cmp
adc
sbb
movs
sbb
sbb
xor
or
xor
lfs
loopne
aad
xor
push
(bad)
imul
movs
dec
inc
arpl
or
pop
(bad)
cmova
aam
and
aas
push
test
push
mov
test
gs
in
nop
jne
push
hlt
dec
mov
adc
and
or
adc
gs
test
push
cmps
xchg
jne
xchg
lock
mov
movs
inc
xchg
fbld
and
cdq
xor
not
test
and
fild
call
mov
push
out
repz
imul
fs
add
mov
iret
mul
les
retf
cmc
mov
lahf
ficom
shl
in
add
jne
daa
pop
add
cmc
sbb
cmp
adc
push
lds
movs
adc
cmps
jge
sbb
adc
pop
aad
xor
adc
inc
push
imul
dec
inc
pop
lds
push
inc
inc
data16
add
push
(bad)
aad
aas
push
div
ja
in
mov
test
in
cmovs
inc
addr16
hlt
inc
mov
pop
cmc
pop
pop
push
xlat
xchg
test
gs
test
push
mov
inc
mov
adc
jmp
jo
inc
lods
movs
popf
and
xchg
cmps
ret
xor
pusha
xchg
push
cli
mov
xor
in
iret
inc
out
into
and
mov
stc
push
int3
add
xor
(bad)
mov
shl
add
in
retf
out
je
and
adc
fcomp
xor
jnp
xor
test
cmp
or
adc
imul
lock
cmp
sbb
adc
pop
aad
xor
xor
dec
push
jbe
and
outs
lds
push
(bad)
jo
inc
aam
and
pusha
push
dec
aad
aas
push
div
or
push
mov
test
push
in
packsswb
push
addr16
imul
cmc
jg
push
add
push
cmc
mov
mov
adc
inc
mov
adc
mov
mov
nop
movs
mov
mov
pusha
stos
push
mov
fistp
inc
mov
lds
inc
fadd
out
push
mov
mov
push
(bad)
mov
into
shl
jmp
(bad)
out
je
and
adc
fcomp
aaa
test
cs
add
cmp
or
sbb
add
push
mov
aaa
pop
movs
cmp
and
and
mov
loopne
aad
xor
and
ins
push
xor
ja
jo
or
lds
pop
(bad)
push
inc
pop
aam
xor
push
das
aad
aas
ja
dec
ja
in
mov
test
inc
out
addr16
push
mov
inc
cmc
inc
pop
push
push
mov
mov
movs
push
mov
add
mov
inc
xor
mov
ss
jo
inc
in
movs
and
cmps
cdq
xor
pusha
mov
mov
xor
loopne
repnz
movs
adc
and
xchg
scas
out
add
push
enter
fcmovbe
loope
(bad)
mov
aad
in
xor
add
aam
leave
out
les
cdq
adc
rcr
sub
sub
jne
adc
or
xadd
cmc
aas
adc
or
movs
cmp
push
lds
push
movs
sbb
daa
sbb
sub
dec
aad
xor
or
or
les
jae
push
inc
jnp
adc
inc
(bad)
jge
fs
adc
push
(bad)
aad
aas
jge
ds
in
mov
test
pop
in
unpckhps
inc
addr16
push
mov
or
push
mov
and
out
stos
push
scas
xchg
adc
inc
mov
adc
nop
mov
and
jo
inc
lock
frstor
and
push
cdq
mov
xor
retf
inc
clc
adc
and
mov
(bad)
push
aam
stos
xor
in
std
jbe
test
add
test
fcom
neg
jne
add
je
adc
outs
sub
push
rol
ss
mov
aaa
push
movs
and
sub
push
and
add
push
loopne
aad
xor
or
ins
push
jbe
cmp
jno
push
das
push
(bad)
jae
ja
inc
add
push
sub
test
in
mov
test
pop
in
(bad)
out
addr16
hlt
jno
jg
pusha
jne
cmc
addr16
outs
push
lods
xchg
scas
add
push
mov
test
push
scas
xchg
pushf
xchg
test
ss
mov
and
jo
inc
jmp
cmps
cmps
sahf
xor
pusha
mov
xor
hlt
xlat
cmc
inc
repnz
and
xchg
scas
loop
mov
out
iret
add
push
sar
retf
xor
add
loop
mul
out
je
and
adc
(bad)
lahf
in
xchg
and
test
sbb
xor
and
push
pop
pop
xchg
or
jge
sub
imul
adc
cmps
pop
daa
add
sub
adc
or
sbb
outs
push
popa
les
nop
push
lds
cmp
arpl
aam
add
push
jp
jl
push
mul
outs
in
mov
test
gs
in
(bad)
out
addr16
hlt
imul
cmc
jb
je
xchg
xchg
nop
add
push
fwait
mov
mov
mov
mov
std
inc
movs
jne
xchg
hlt
adc
lea
mov
out
movs
and
xlat
pusha
fst
mov
xor
into
xlat
loop
mov
(bad)
xchg
scas
mov
push
retf
xor
ret
jbe
neg
add
out
leave
data16
out
je
and
jne
lahf
call
test
in
add
sbb
jb
gs
add
cmp
movs
sub
and
sbb
push
loopne
aad
xor
adc
adc
les
nop
je
pop
inc
cmp
or
dec
(bad)
ja
addr16
cmp
push
sub
jne
push
imul
(bad)
in
mov
test
pop
in
cmovs
inc
addr16
hlt
jo
jge
jp
add
jb
pop
push
rcl
mov
mov
test
xchg
xchg
test
jmp
and
jo
inc
out
xchg
and
xchg
cmps
mov
push
lahf
mov
xor
hlt
xlat
in
inc
not
retf
and
mov
stc
push
fadd
jecxz
vpsrad
mov
ret
xor
add
fisttp
fbstp
loopne
out
int3
jne
lahf
out
xchg
xor
test
shl
in
add
and
add
adc
xchg
xor
push
mov
aaa
or
lds
and
cmp
xor
add
adc
adc
daa
xor
or
les
sub
adc
push
aam
sbb
push
arpl
pop
aas
das
neg
push
in
mov
test
inc
in
vmread
and
hlt
dec
mov
push
cmc
push
pop
or
test
mov
xchg
push
cmc
gs
test
push
cdq
xchg
xchg
xchg
ss
mov
and
jo
inc
out
movs
fisub
xchg
cmps
xchg
xor
pusha
mov
stos
mov
xor
hlt
xlat
mov
repnz
and
xchg
scas
mov
push
enter
aad
loop
cmc
mov
call
add
call
out
je
and
adc
fcomp
aaa
test
ror
in
add
sbb
adc
adc
and
push
mov
aaa
pop
movs
pop
lock
sub
dec
or
mov
loopne
aad
xor
push
(bad)
arpl
les
nop
push
movs
or
das
xor
aam
add
push
push
aad
aas
aaa
mul
push
in
mov
test
jno
pop
sysret
out
addr16
hlt
push
mov
inc
cmc
pop
pop
pushw
adc
rol
mov
mov
inc
mov
adc
mov
mov
movs
mov
and
push
mov
fisttp
inc
fst
retf
and
in
scas
loop
aad
loop
leave
add
push
ret
jbe
not
shl
jmp
test
je
and
adc
fstp
sub
jg
adc
adc
jg
push
pop
addr16
add
cmp
xchg
cmp
mov
aaa
push
movs
sub
and
adc
mov
loopne
aad
xor
or
push
push
imul
push
inc
cmp
pop
das
ds
ja
fs
add
push
je
inc
aas
push
div
pop
in
mov
test
pop
in
andps
inc
addr16
hlt
je
add
cmc
pop
pop
push
push
lods
xchg
test
gs
test
mov
lods
adc
inc
mov
adc
movs
mov
and
jo
inc
stos
movs
test
mov
pusha
xchg
push
xchg
mov
xor
enter
les
leave
and
mov
stc
push
ret
add
xor
idiv
leave
xor
add
aad
leave
data16
fidiv
lock
mov
pop
or
add
and
or
adc
ds
aaa
push
movs
pop
lock
ins
and
daa
cmps
add
add
or
dec
aad
xor
aas
(bad)
push
nop
ins
movs
dec
inc
dec
lds
das
push
(bad)
pop
inc
jg
dec
and
pop
aas
push
not
push
in
mov
test
arpl
xor
pop
out
addr16
hlt
push
mov
inc
cmc
addr16
jne
fist
mov
add
pop
mov
adc
stos
mov
and
jo
inc
out
fldenv
xchg
cmps
mov
pusha
xchg
push
lods
mov
xor
in
test
mov
inc
inc
loop
mov
mov
push
std
mov
(bad)
fs
xor
add
loope
popf
shl
je
and
adc
fistp
aaa
test
imul
sub
xchg
sar
add
jg
mov
aaa
adc
add
and
or
mov
loopne
aad
xor
dec
(bad)
ins
push
xor
pop
nop
jo
adc
lds
(bad)
pusha
inc
pop
aam
sbb
push
sub
test
in
mov
test
push
in
nop
and
hlt
inc
mov
inc
cmc
es
outs
push
adc
gs
test
push
mov
movs
jne
xchg
mov
xor
inc
mov
and
cmps
mov
push
cmps
mov
xor
loopne
in
inc
fst
retf
and
xchg
scas
mov
push
retf
xor
into
mov
shl
loope
mov
retf
(bad)
stc
data16
out
je
and
adc
fstp
sub
data16
or
cmp
jne
adc
xchg
cmp
ds
aaa
push
movs
add
adc
movs
sbb
daa
or
pop
loopne
aad
xor
cmp
jl
jno
addr16
ins
movs
dec
inc
lds
gs
ja
jl
push
add
push
dec
aad
aas
push
imul
pop
in
mov
test
pop
in
cmovb
inc
addr16
hlt
ins
mov
or
cmp
inc
push
scas
xchg
mov
gs
out
mov
mov
inc
movs
jne
xchg
mov
movs
mov
and
jo
inc
test
iret
lahf
es
pusha
mov
xor
in
xlat
out
inc
mov
(bad)
imul
(bad)
push
loop
mov
push
(bad)
mov
loop
in
xor
add
fisttp
fbstp
jecxz
call
lahf
lds
jg
xor
push
add
and
and
pop
cmc
add
or
cmp
or
and
and
cmp
jns
inc
mov
loopne
aad
xor
dec
(bad)
outs
push
push
and
jno
or
dec
(bad)
jae
arpl
jae
dec
mov
push
dec
aad
aas
push
div
in
mov
test
popa
in
unpcklps
pop
addr16
hlt
push
mov
adc
das
pop
push
add
push
mov
add
xchg
xchg
jne
xchg
xchg
adc
sahf
mov
and
jo
inc
in
movs
pushf
and
xchg
cmps
xchg
xor
pusha
mov
xor
mov
test
mov
inc
inc
movs
push
test
fcom
mov
into
shl
icebp
add
out
(bad)
out
je
and
adc
rcr
je
adc
pmulhw
jnp
push
outs
and
xchg
or
push
cmc
add
jg
mov
aaa
pop
movs
ds
aaa
and
and
or
dec
aad
xor
cmp
les
jo
dec
inc
dec
lds
pop
mov
aam
add
push
das
aad
aas
jae
inc
ja
in
mov
test
push
in
cmovp
push
addr16
hlt
sbb
bound
pop
pop
push
test
mov
in
fwait
gs
test
push
xchg
xchg
jne
xchg
mov
cmps
mov
and
jo
inc
mov
mov
dec
cwde
and
mov
push
in
xlat
hlt
inc
cmps
adc
and
xchg
scas
mov
push
test
iret
push
sar
shl
leave
add
aam
aad
(bad)
fidiv
fst
fstp
test
in
add
das
xchg
sar
inc
adc
cmp
movs
sub
and
push
cmps
and
sbb
xor
adc
jbe
jbe
dec
nop
jae
dec
inc
dec
lds
das
daa
(bad)
ja
jl
cmp
push
dec
aad
aas
push
not
dec
in
mov
test
in
nop
inc
addr16
je
bound
pop
pop
outs
push
scas
xchg
xchg
push
hlt
gs
test
push
mov
inc
call
jmp
and
jo
inc
lods
movs
shl
cmps
xchg
pusha
cmps
push
sti
mov
xor
lahf
xlat
out
inc
in
lock
(bad)
scas
fiadd
(bad)
mov
xor
loopne
aad
retf
fs
call
gs
leave
cmps
out
je
and
adc
aad
out
xchg
xor
xor
add
pop
xchg
pop
xor
adc
aas
mov
aaa
shld
lds
cmp
xor
add
xor
adc
les
nop
inc
movs
gs
inc
lds
das
pop
(bad)
jge
inc
aam
sbb
push
dec
aad
aas
sub
pop
ja
in
mov
test
adc
pcmpgtw
pop
addr16
hlt
jne
jnp
ss
cmc
pop
pop
push
add
push
cmc
xchg
test
xchg
xchg
jne
xchg
xchg
adc
mov
mov
and
sahf
cmps
mov
test
push
mov
fistp
inc
ret
and
xchg
scas
mov
push
jmp
mov
push
fistp
aam
mov
lds
in
iret
iretw
out
je
and
adc
fstp
aaa
test
rcr
in
add
jne
aaa
pop
ds
and
and
sbb
jg
mov
aaa
adc
and
sbb
push
loopne
aad
xor
push
(bad)
fs
popa
les
inc
jb
push
das
and
push
inc
arpl
dec
sbb
push
das
aad
aas
push
test
in
mov
test
gs
pop
pcmpgtw
and
outs
hlt
jo
bound
bound
outs
push
pushf
xchg
mov
sti
push
mul
test
add
mov
inc
loop
fcom
jmp
sahf
mov
and
jo
inc
mov
xchg
and
and
mov
pushf
fistp
inc
mov
lds
inc
sti
(bad)
fcom
mov
push
sar
fs
xor
add
les
les
(bad)
adc
fstp
sub
shl
in
add
and
adc
adc
pop
adc
xor
sub
and
or
pavgb
and
adc
adc
les
nop
push
pop
inc
cmp
adc
addr16
ja
fs
add
push
dec
aad
aas
push
imul
in
mov
test
pop
in
nop
inc
addr16
hlt
ins
mov
or
pop
pop
ins
push
mov
push
xchg
gs
test
add
mov
inc
mov
adc
icebp
mov
and
jo
inc
lods
movs
xchg
and
mov
pusha
movs
push
cli
mov
xor
in
cmc
inc
not
into
and
mov
mov
xor
xchg
enter
lds
fisttp
fbstp
(bad)
adc
cli
lahf
int3
xchg
xor
je
shl
in
add
jne
pop
pop
add
adc
add
movs
adc
or
aaa
and
daa
cmps
sbb
loopne
aad
xor
add
les
dec
movs
adc
lds
das
pop
(bad)
ja
jno
dec
or
push
arpl
pop
aas
ins
neg
push
in
mov
test
addr16
unpcklps
arpl
hlt
dec
mov
inc
cmc
je
or
test
stos
add
push
mov
mov
mov
scas
xchg
jne
xchg
adc
mov
and
jo
inc
jmp
fisub
mov
pusha
stos
push
mov
lods
push
rcl
test
jmp
inc
faddp
out
retf
xor
iret
mov
retf
xor
add
jmp
je
and
adc
stc
lahf
lds
pusha
shl
in
add
jbe
or
es
sbb
jg
mov
aaa
adc
and
and
or
inc
aad
xor
xor
ins
push
ins
les
movs
je
pop
lds
pop
(bad)
pusha
inc
addr16
sbb
push
das
aad
aas
jne
inc
ja
in
mov
test
gs
dec
vmread
outs
addr16
hlt
sbb
bound
jb
pop
push
int
mov
mov
mov
ret
adc
inc
mov
adc
mov
cwde
inc
lods
movs
mov
xchg
test
and
mov
push
(bad)
xlat
int3
inc
mov
(bad)
mov
cli
push
std
add
xor
ret
jbe
not
fs
xor
add
leave
(bad)
loope
jecxz
out
je
and
adc
scas
lahf
(bad)
xchg
and
sub
ins
rcr
in
add
daa
xchg
pop
sbb
or
and
es
and
movs
pop
lock
movs
sbb
daa
sbb
and
xor
adc
inc
push
jne
cmp
inc
lds
dec
mov
aam
xor
push
ins
aad
aas
push
div
ja
in
mov
test
(bad)
in
unpcklps
jle
jg
push
mov
je
and
push
push
scas
xchg
add
xchg
gs
test
push
mov
inc
mov
adc
xor
inc
sahf
movs
fbld
xchg
cmps
nop
xor
pusha
xchg
push
test
mov
in
out
inc
mov
(bad)
in
scas
mov
push
aam
lds
(bad)
mov
xlat
fs
xor
gs
pop
data16
lds
popf
adc
fcomp
or
add
sub
xchg
sbb
adc
sbb
daa
lock
sub
pop
movs
push
dec
aas
cmps
sbb
sub
aaa
loopne
aad
xor
aas
(bad)
outs
push
push
les
ins
movs
adc
dec
lds
push
(bad)
jae
jg
push
cmp
push
arpl
sbb
ins
not
in
mov
test
inc
in
sysret
out
addr16
push
mov
inc
cmc
pop
pop
or
add
push
mov
xchg
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
mov
xchg
cmps
sahf
xor
pusha
stos
push
mov
fistp
inc
lods
adc
and
into
scas
fild
mov
xor
fdivr
into
fs
xor
add
loope
into
mul
(bad)
je
and
adc
out
lahf
lds
cmp
jbe
push
add
and
push
rcl
jg
mov
aaa
pop
movs
and
and
xor
pop
movs
es
sbb
or
pop
aad
xor
pop
(bad)
fs
popa
les
push
movs
dec
inc
jle
pusha
das
pop
(bad)
bound
aam
add
push
das
aad
aas
ins
test
in
mov
test
push
in
cvtdq2ps
push
addr16
hlt
push
mov
add
pop
pop
jns
adc
gs
shr
xchg
popf
xchg
jne
xchg
jmp
mov
and
jo
inc
mov
stos
es
xchg
mov
xor
lock
test
rol
mov
push
jmp
mov
push
ret
jbe
not
shl
jmp
(bad)
loopne
mov
and
adc
fcomp
jno
sub
add
and
xor
xor
sbb
or
mov
aaa
push
movs
sub
and
and
pop
loopne
aad
xor
adc
jl
inc
les
jae
pop
inc
lds
das
pop
(bad)
jno
fs
and
sbb
aad
aas
pop
test
in
mov
test
outs
in
unpckhps
push
addr16
hlt
push
mov
or
push
lods
xchg
mov
mov
test
push
mov
inc
mov
adc
mov
xchg
movs
fbld
xchg
cmps
cwde
xor
pusha
xchg
push
std
mov
xor
cld
xlat
out
inc
mov
(bad)
in
fiadd
(bad)
scas
push
stos
add
xor
sar
fs
xor
add
fisttp
fbstp
loop
push
shl
lahf
iret
xchg
xor
aaa
test
je
push
add
and
push
rcr
inc
adc
sbb
adc
sbb
outs
and
and
adc
dec
aad
xor
push
(bad)
push
push
jbe
and
cmp
adc
push
(bad)
popa
inc
push
aam
add
push
pop
aad
aas
push
test
in
mov
test
adc
dec
sysret
out
addr16
hlt
inc
mov
(bad)
cmc
and
outs
push
test
scas
add
push
mov
add
pop
movs
jne
xchg
in
adc
mov
mov
and
mov
pushf
xor
pusha
xchg
push
(bad)
mov
xor
in
test
mov
inc
add
push
int
mov
push
fdivr
call
add
repnz
out
je
and
adc
fcomp
das
test
add
push
xchg
pop
and
or
pop
cmc
cmp
or
jle
and
and
and
or
dec
aad
xor
cmp
ins
push
outs
les
pop
movs
imul
(bad)
jg
jns
cmp
push
sub
jl
test
in
mov
test
jg
pop
vmread
addr16
push
mov
inc
cmc
and
jle
adc
test
mov
adc
inc
mov
adc
(bad)
mov
and
jo
inc
mov
iret
call
pusha
xchg
push
mov
mov
retf
inc
lods
adc
and
int
stc
inc
(bad)
push
aad
retf
aad
push
loop
lods
jbe
not
fs
xor
add
jmp
je
and
fistp
sub
in
add
cmp
xchg
add
aas
cmc
sbb
jae
ja
shld
lds
and
cmp
jge
sbb
or
push
aad
xor
adc
inc
push
dec
les
jae
push
inc
imul
inc
inc
push
aam
add
push
jl
pop
aas
jno
dec
ja
in
mov
test
inc
in
cvtdq2ps
inc
addr16
hlt
or
or
push
rcl
stos
gs
test
add
pop
mov
adc
movs
mov
and
jo
inc
in
movs
pushf
and
lahf
cmps
mov
push
cli
mov
xor
in
mov
rcl
into
and
mov
in
aam
mov
push
(bad)
mov
leave
xlat
xor
gs
pop
je
and
adc
fstp
cmp
aaa
shl
in
add
sbb
pop
rcl
inc
adc
ds
aaa
add
and
and
xor
inc
aad
xor
adc
les
movs
adc
lds
dec
(bad)
dec
inc
js
inc
and
pop
push
inc
aad
aas
push
div
push
in
mov
test
in
andps
jnp
inc
hlt
inc
mov
or
push
pop
js
lods
xchg
mov
cmps
push
hlt
gs
test
push
cdq
xchg
adc
mov
shl
mov
mov
es
cmps
sahf
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
enter
aad
stos
push
stc
mov
shl
enter
fisub
(bad)
cmc
data16
out
je
and
adc
fistp
aaa
test
in
add
and
or
and
sub
adc
adc
adc
and
and
adc
xor
sub
ins
push
arpl
sub
jo
push
inc
dec
lds
pop
(bad)
arpl
aam
or
push
cs
aas
outs
imul
in
mov
test
gs
popa
nop
push
addr16
hlt
jbe
bound
pop
pop
outs
push
xchg
xchg
stos
add
push
hlt
movs
test
push
mov
inc
mov
adc
mov
and
movs
xchg
and
and
sahf
xor
mov
ret
adc
and
xchg
scas
inc
(bad)
icebp
push
rol
mov
push
loopne
in
jbe
not
shl
into
add
in
retf
shl
les
adc
lahf
(bad)
xchg
ds
sub
ins
shl
in
add
and
adc
adc
cmp
movs
inc
lock
or
or
pop
loopne
aad
xor
ds
jg
dec
les
nop
jb
cmovne
(bad)
ja
(bad)
aam
add
push
sub
ins
aas
outs
test
in
mov
test
in
cmovle
ja
pop
hlt
pop
mov
push
cmc
jbe
outs
push
mov
test
push
test
test
push
xchg
xchg
jne
xchg
call
mov
and
jo
inc
out
movs
stos
and
xchg
cmps
cdq
xor
pusha
test
mov
xor
in
jmp
and
out
scas
fiadd
(bad)
mov
xor
lds
loope
test
in
cmc
in
gs
(bad)
mul
out
je
and
adc
(bad)
lahf
xchg
xchg
sub
xor
pusha
ror
in
add
and
sbb
adc
adc
xor
lds
and
and
and
xor
push
(bad)
push
push
jbe
and
jno
push
das
outs
(bad)
jae
jl
dec
or
push
outs
aad
aas
dec
test
in
mov
test
pusha
in
sysret
out
addr16
hlt
dec
mov
or
pop
pop
or
xchg
xchg
mov
gs
push
mov
scas
adc
inc
mov
adc
cmc
mov
and
jo
inc
out
movs
fisub
xchg
cmps
xchg
pusha
xchg
push
xchg
mov
xor
rcl
inc
mov
lds
inc
test
xlat
xor
sar
ret
xor
add
fimul
shl
std
adc
aam
stc
xchg
or
aas
test
jp
dec
add
add
xchg
jb
pop
cmc
sub
imul
lock
xor
and
push
loopne
aad
xor
push
(bad)
push
push
les
ins
movs
pop
inc
jb
or
push
aam
cmp
pop
push
and
push
aas
push
test
in
mov
test
push
in
cmovp
push
addr16
hlt
outs
mov
jg
pop
pop
push
add
push
mov
test
add
add
jne
xchg
mov
ss
mov
and
jo
inc
jmp
mov
es
cmps
xchg
pusha
xchg
push
mov
fistp
inc
mov
(bad)
shr
loop
rol
retf
aad
push
pushf
mov
aam
int3
xor
add
dec
cli
je
and
adc
fstp
xor
in
add
daa
xchg
pop
es
adc
pop
cmc
sbb
cmp
movs
sbb
add
cmp
add
and
push
aad
xor
cmp
je
jb
cmp
inc
lds
pop
(bad)
gs
fs
sub
push
dec
aad
aas
push
test
in
mov
test
pop
in
cmovs
jo
jl
push
mov
or
push
mov
push
mov
add
mov
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
call
cmps
xchg
xor
pusha
retf
mov
xor
rcl
inc
lods
adc
and
xchg
scas
rol
loopne
loop
lds
into
mov
jmp
in
fisttp
fbstp
xchg
fistp
pop
test
and
and
outs
and
adc
cmp
xchg
pop
jg
mov
aaa
daa
movs
pop
lock
push
and
cmps
add
pop
mov
loopne
aad
xor
das
(bad)
inc
push
xor
pop
nop
ins
movs
push
inc
jl
adc
pop
(bad)
arpl
aam
sbb
arpl
inc
aas
ins
neg
inc
in
mov
test
gs
data16
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
fs
mov
push
mov
mov
out
cmc
push
scas
xchg
jne
xchg
nop
adc
xchg
mov
and
jo
inc
call
es
cmps
xchg
xor
pusha
test
mov
xor
into
xlat
mov
repnz
and
xchg
scas
mov
push
enter
call
jbe
test
add
ror
je
and
adc
(bad)
lahf
cmc
xchg
and
xor
add
arpl
adc
sub
pop
adc
cmp
inc
lock
or
cmps
pusha
daa
adc
or
inc
aad
xor
adc
push
popa
les
dec
movs
dec
inc
and
push
cmp
aam
add
push
dec
aad
aas
jo
outs
ja
in
mov
test
sbb
je
push
out
addr16
push
mov
inc
cmc
popw
push
add
push
mov
test
add
mov
inc
mov
adc
test
mov
jo
inc
in
movs
movs
and
scas
cmps
mov
pusha
movs
push
call
push
xchg
xlat
hlt
inc
cmc
adc
and
repz
mov
(bad)
push
fld
les
ret
jbe
div
shl
retf
add
fisttp
into
je
and
adc
ficomp
sub
xor
push
in
add
and
adc
pop
cmc
cmp
or
ds
adc
pop
cmps
and
sbb
xor
sbb
jl
imul
dec
inc
cmp
push
das
dec
(bad)
jae
fs
xor
push
xor
push
aas
push
test
in
mov
test
gs
in
unpcklps
jns
inc
hlt
addr16
imul
pop
pop
outs
push
int
mov
push
sti
gs
test
push
add
xchg
adc
movs
mov
and
jo
inc
mov
iret
test
xchg
cmps
xchg
pusha
mov
mov
fistp
inc
not
int
mov
cld
inc
sahf
scas
ret
inc
in
stc
push
retf
add
xor
(bad)
mov
shl
in
add
mov
cmc
data16
out
je
and
adc
fcomp
test
shl
sub
and
sbb
and
cmc
push
adc
or
xor
and
cmps
xor
inc
mov
loopne
aad
xor
xor
les
jnp
jp
jge
adc
inc
(bad)
pop
inc
jnp
dec
sbb
jg
push
aas
pop
not
outs
in
mov
test
dec
out
addr16
hlt
jge
jl
jl
dec
cmc
pop
pop
gs
mov
scas
add
push
mov
add
mov
inc
std
jne
xchg
lods
adc
mov
xchg
and
jo
inc
in
movs
les
and
push
div
(bad)
push
xchg
xlat
aad
ret
adc
and
retf
scas
in
inc
sti
push
iret
add
push
(bad)
mov
into
shl
repz
mov
enter
xor
jmp
pop
aaa
test
in
add
and
or
sbb
or
jg
mov
aaa
pop
movs
inc
lock
xor
push
movs
ss
and
or
inc
aad
xor
adc
push
push
popa
les
push
lds
pop
mov
aam
add
push
push
aad
aas
push
test
pop
mov
test
popa
in
mulps
push
addr16
hlt
dec
mov
dec
cmc
jno
jle
test
hlt
gs
test
push
mov
inc
mov
xchg
xchg
(bad)
adc
lods
mov
and
jo
inc
mov
mov
es
xchg
mov
xor
jmp
adc
and
imul
cld
push
ret
add
xor
std
mov
hlt
fs
xor
add
fisttp
xor
int3
jne
lahf
(bad)
xchg
xor
sub
ins
rcl
add
xchg
adc
adc
or
movs
and
and
cmp
xor
push
mov
loopne
aad
xor
adc
adc
les
nop
ins
movs
jl
cmp
adc
popa
(bad)
jns
fs
adc
push
ins
aad
aas
xor
dec
ja
in
mov
test
addr16
cmove
outs
addr16
hlt
or
ins
cmc
pop
pop
push
add
push
mov
mov
test
mov
inc
call
(bad)
jmp
and
jo
inc
lods
movs
call
cmps
sahf
xor
pusha
xchg
push
cld
mov
xor
(bad)
out
inc
mov
lds
inc
rol
fist
mov
push
lds
leave
fs
xor
gs
retf
out
je
and
adc
neg
add
add
and
xor
rcl
cmp
and
add
shld
sbb
cmp
and
adc
push
aad
xor
aas
(bad)
push
nop
ins
movs
adc
lds
pop
(bad)
jae
jg
push
or
push
arpl
pop
aas
push
imul
push
in
mov
test
in
cmova
pop
addr16
hlt
push
mov
jle
push
pop
ins
push
mov
push
mov
test
push
into
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
movs
movs
mov
xchg
cmps
sahf
xor
pusha
rcl
into
xor
hlt
xlat
lock
rcl
jmp
rol
fiadd
scas
mov
push
jmp
mov
push
(bad)
mov
into
shl
out
add
call
out
je
and
adc
call
sub
add
and
or
adc
and
add
movs
adc
cmp
or
sbb
and
aas
aad
xor
push
(bad)
imul
movs
dec
inc
inc
lds
pop
mov
aam
sbb
push
das
aad
aas
push
test
in
mov
test
pop
in
punpckhbw
push
addr16
hlt
push
mov
dec
cmc
pop
pop
outs
push
fist
cmc
gs
test
push
mov
inc
lahf
jne
xchg
mov
ss
cmps
and
jo
inc
mov
fisub
mov
pusha
nop
push
mov
fbstp
mov
(bad)
nop
scas
clc
inc
sti
(bad)
(bad)
push
mov
fdiv
loopne
fidiv
not
add
jmp
je
and
adc
fstp
sub
(bad)
ror
in
add
and
jge
sbb
xchg
add
or
push
aaa
adc
sbb
cmp
outs
and
inc
cmps
sbb
inc
mov
loopne
aad
xor
ss
jl
imul
nop
jae
adc
lds
das
pop
(bad)
addr16
cmp
mov
push
push
test
in
mov
test
push
in
movq
jle
inc
hlt
adc
jne
jl
jno
popw
outs
push
xchg
xchg
test
push
cli
mov
mov
mov
inc
loope
pushf
xchg
jmp
mov
mov
and
jo
inc
out
fbld
xchg
cmps
cdq
xor
pusha
retf
mov
xor
out
rol
into
and
mov
repz
lock
xor
sar
xor
add
fimul
test
ret
adc
ficomp
or
add
or
xadd
cmc
pop
adc
add
movs
adc
adc
movs
and
inc
cmps
outs
daa
cmp
adc
inc
aad
xor
push
(bad)
adc
nop
je
jo
jno
pop
das
pop
(bad)
jne
jae
outs
add
push
arpl
jp
neg
inc
in
mov
test
pop
in
packsswb
push
addr16
dec
mov
inc
cmc
pop
pop
jle
scas
xchg
scas
add
push
call
out
mov
adc
inc
mov
adc
pushf
mov
and
jo
inc
out
movs
and
lahf
cmps
ret
xor
pusha
mov
xor
(bad)
inc
in
adc
and
in
mov
push
fadd
mov
push
(bad)
mov
into
shl
out
add
ror
xchg
(bad)
adc
fcomp
aaa
test
in
add
add
aaa
pop
xor
add
adc
xchg
daa
jg
mov
aaa
pop
movs
adc
pop
lds
and
and
adc
cmp
aaa
xor
cmp
outs
push
dec
les
jae
push
inc
pop
lds
das
dec
mov
aam
or
push
das
aad
aas
imul
jb
push
gs
in
cmovs
push
addr16
hlt
inc
mov
inc
cmc
pop
pop
outs
push
rcl
xchg
mov
mov
test
mov
adc
test
cwde
inc
mov
shl
and
mov
mov
jmp
and
xchg
scas
fld
(bad)
aad
leave
add
push
cmp
retf
add
out
out
mov
and
adc
cmc
lahf
into
xchg
and
sub
add
add
sbb
adc
xchg
push
jg
mov
aaa
or
inc
lock
lds
and
inc
cmps
sbb
sbb
xor
dec
(bad)
jl
imul
nop
xor
adc
push
(bad)
pop
inc
fs
adc
push
cs
aas
inc
test
in
mov
test
in
unpckhps
es
je
jge
cmp
pmaddwd
push
xchg
xchg
test
gs
test
push
mov
inc
mov
adc
mov
aam
(bad)
inc
mov
fisub
xchg
cmps
cdq
xor
pusha
retf
mov
xor
out
icebp
inc
mov
(bad)
in
scas
mov
push
int3
add
push
lds
leave
div
iret
add
ror
fbstp
les
cmps
lahf
mov
and
add
jns
sbb
sar
adc
xor
adc
and
cmps
aaa
daa
pop
mov
loopne
aad
xor
adc
les
ins
movs
push
inc
jno
adc
pop
(bad)
pop
inc
inc
aam
add
push
(bad)
aad
aas
pop
neg
dec
in
mov
test
adc
jle
pop
out
addr16
hlt
inc
mov
inc
cmc
pop
pop
movhps
push
xchg
test
add
cmps
xchg
jne
xchg
lea
xchg
mov
and
jo
inc
in
movs
test
xchg
cmps
sahf
xor
pusha
lds
mov
xor
retf
xlat
in
inc
rcl
leave
and
xchg
scas
aam
out
(bad)
rcl
mov
push
(bad)
mov
int3
xchg
enter
fisub
(bad)
in
sti
out
je
and
adc
neg
jo
or
add
or
daa
sar
jg
mov
aaa
pop
movs
adc
pop
lds
and
sbb
or
add
jl
cmp
cs
adc
les
nop
inc
movs
dec
inc
jb
adc
inc
and
bound
das
aad
aas
js
inc
ja
in
mov
test
in
sysret
out
addr16
hlt
or
inc
cmc
outs
pop
ins
push
test
lahf
add
push
mov
add
mov
movs
adc
inc
xchg
jne
xchg
mov
lahf
mov
and
jo
inc
scas
movs
scas
and
and
xchg
xor
loopne
lock
clc
adc
and
cmc
scas
mov
push
leave
add
xor
sar
fdiv
loope
lock
gs
iret
data16
out
je
and
adc
lock
(bad)
xchg
sbb
pop
test
shl
test
or
sub
aaa
cmc
sbb
cmp
movs
and
pop
lds
and
cmp
add
sbb
pop
loopne
aad
xor
cmp
jl
jb
jb
xor
dec
inc
js
push
das
pop
mov
dec
aam
add
push
arpl
je
sub
pop
ja
in
mov
test
sysret
out
addr16
hlt
push
mov
dec
cmc
pop
pop
imul
xchg
test
gs
test
push
rol
jne
xchg
mov
movs
mov
and
jo
inc
stos
movs
stos
and
and
push
cli
mov
xor
in
xlat
rol
in
clc
(bad)
mov
repz
aam
mov
push
iret
mov
leave
fs
jecxz
stos
in
gs
hlt
data16
and
adc
les
jae
jnp
or
push
add
xchg
pop
xor
or
adc
sub
add
lds
and
and
adc
inc
aad
xor
adc
push
push
dec
les
nop
jne
pop
inc
jno
push
das
pop
(bad)
jae
data16
or
push
pop
aad
aas
dec
test
in
mov
test
sbb
gs
jnp
fs
dec
mov
inc
cmc
pop
pop
push
push
mov
mov
test
add
xchg
xchg
adc
inc
mov
adc
mov
mov
mov
mov
es
pusha
mov
xor
jmp
adc
and
lock
rol
iret
push
fld
mov
push
fdivr
into
shl
out
in
in
gs
(bad)
fsub
out
je
and
jne
lahf
out
xchg
and
ror
in
add
jge
aaa
pop
ds
aaa
sar
jg
mov
aaa
push
movs
or
and
and
sub
xor
adc
les
inc
cmp
jo
dec
(bad)
gs
jge
imul
aad
aas
aaa
imul
adc
ins
mov
test
ins
in
sysret
out
addr16
hlt
push
mov
inc
cmc
pop
pop
outs
push
mov
push
mov
add
mov
inc
mov
adc
lea
cwde
inc
xchg
movs
fsub
lahf
cmps
mov
mov
stos
push
popf
mov
xor
loopne
hlt
inc
xlat
adc
and
xchg
scas
mov
push
retf
xor
clc
mov
xlat
fs
xor
add
out
cmc
shl
les
adc
lahf
(bad)
xchg
aaa
pop
add
add
or
or
aas
cmc
sbb
push
mov
aaa
push
movs
add
or
cmp
sbb
or
push
aad
xor
cs
jl
imul
dec
inc
dec
lds
(bad)
outs
inc
push
aam
add
push
ins
aad
aas
das
test
in
mov
test
in
unpckhps
pop
addr16
hlt
push
mov
or
push
test
mov
loopne
xchg
xchg
stos
push
mov
inc
mov
adc
mov
jo
inc
lods
movs
shl
xchg
cmps
fnstenv
mov
xor
into
xlat
out
inc
movs
adc
inc
retf
inc
stc
mov
xor
les
shl
repz
fisttp
shl
fcom
fcomp
xor
jnp
sbb
adc
outs
xchg
rcl
sbb
mov
aaa
shld
adc
add
loopne
aad
xor
xor
dec
push
(bad)
les
nop
movs
adc
inc
lds
pop
mov
push
aam
cmp
push
sub
pop
aas
je
gs
in
mov
test
jno
pop
(bad)
out
addr16
hlt
inc
mov
jne
pop
pop
push
(bad)
xchg
scas
add
push
cmps
gs
lahf
add
lods
xchg
jne
xchg
scas
adc
in
mov
and
jo
inc
out
stos
and
test
mov
xor
hlt
xlat
lock
fcom
repz
xchg
scas
mov
push
mov
(bad)
xor
ret
jbe
test
add
loop
retf
out
je
and
adc
neg
imul
outs
cmp
xchg
or
xor
add
ins
mov
aaa
adc
and
and
or
adc
mov
pop
adc
ins
push
push
ja
dec
movs
push
inc
dec
lds
push
jae
addr16
add
push
sub
inc
aas
push
test
in
mov
test
arpl
pop
sysret
out
addr16
hlt
push
mov
inc
cmc
push
pop
imul
out
hlt
pop
add
xchg
inc
mov
adc
xchg
mov
and
jo
inc
mov
xchg
and
mov
xchg
push
mov
fistp
inc
mov
(bad)
lahf
scas
cmc
inc
ret
(bad)
icebp
push
into
add
xor
sar
aam
out
xor
add
(bad)
(bad)
jmp
(bad)
ret
je
and
adc
fstp
test
sbb
cmp
xor
and
xor
adc
or
sub
and
cmp
cmp
sbb
pop
loopne
aad
xor
dec
(bad)
inc
push
imul
dec
inc
ins
lds
das
pop
(bad)
ja
pusha
aam
and
pop
push
imul
aas
push
test
in
mov
test
gs
in
nop
inc
addr16
hlt
ins
mov
jns
popw
outs
push
xchg
xchg
mov
push
repnz
test
push
mov
inc
jmp
(bad)
out
mov
jo
inc
lods
movs
xchg
and
sahf
cmps
mov
push
cli
mov
xor
in
xlat
int
lods
adc
and
xchg
scas
(bad)
inc
out
(bad)
cmps
push
enter
(bad)
push
sti
mov
les
retf
in
gs
retf
out
je
and
adc
rcr
and
jnp
adc
xor
cmp
xchg
je
pop
cmc
push
adc
imul
lock
and
dec
cmp
xor
add
adc
sbb
daa
xor
xor
les
nop
ins
movs
push
jno
adc
gs
jge
jg
push
adc
push
arpl
pop
aas
push
mul
dec
in
mov
test
sbb
dec
sysret
out
addr16
dec
mov
push
cmc
pop
pop
jge
adc
mov
xchg
push
movs
xchg
sahf
xchg
mov
lahf
mov
and
jo
inc
mov
pushf
and
xchg
cmps
sahf
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
stc
mov
xor
(bad)
mov
hlt
fs
rol
pop
mul
(bad)
je
and
adc
fcomp
xor
add
and
aaa
rcr
cmp
push
mov
aaa
pop
movs
adc
lds
and
sub
xor
(bad)
ins
push
popa
les
push
movs
dec
inc
jle
push
das
outs
(bad)
push
inc
and
push
xor
push
das
aad
aas
dec
test
in
mov
test
push
in
(bad)
out
addr16
hlt
push
mov
dec
cmc
dec
pop
je
adc
std
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
sahf
movs
xchg
and
and
mov
loopne
test
out
fild
(bad)
push
mov
cld
xor
pushf
mov
aam
shl
enter
pushf
gs
stc
data16
fdiv
(bad)
adc
fcomp
sub
jnp
daa
in
add
and
or
add
aas
adc
pop
mov
aaa
sub
lds
or
pop
loopne
aad
xor
dec
(bad)
jo
imul
dec
inc
and
fs
pop
(bad)
pusha
inc
pop
aam
add
push
ins
aad
aas
pop
div
dec
in
mov
test
dec
in
packssdw
pop
addr16
hlt
dec
mov
inc
cmc
pop
pop
inc
push
lods
xchg
scas
add
push
mul
test
push
xchg
xchg
test
sahf
movs
mov
and
jo
inc
mov
cdq
es
pusha
xchg
push
xchg
mov
xor
rcl
lds
mul
jecxz
mov
push
rol
std
xor
fidivr
shl
add
jecxz
lds
out
je
and
adc
mov
pop
xor
add
or
sub
sub
daa
adc
sbb
adc
sbb
xor
dec
and
mov
loopne
aad
xor
or
ins
push
jbe
jp
dec
movs
adc
lds
das
pop
(bad)
jne
je
xor
arpl
inc
aas
push
neg
in
mov
test
push
in
nop
jnp
inc
hlt
push
mov
inc
cmc
inc
pop
fs
test
test
gs
test
push
scas
xchg
jne
xchg
in
adc
mov
jo
inc
xchg
movs
xchg
and
mov
pusha
mov
xor
hlt
xlat
mov
mov
(bad)
xchg
scas
leave
inc
sti
(bad)
loope
rol
mov
push
(bad)
mov
shl
add
jecxz
les
out
je
and
adc
mov
pop
or
in
add
sbb
xor
push
xchg
or
adc
xchg
add
mov
aaa
pop
movs
adc
xor
movs
pop
dec
add
xor
xor
push
(bad)
outs
push
outs
les
jo
jns
jb
push
das
gs
arpl
aam
cmp
push
push
aad
aas
push
div
inc
in
mov
test
pop
in
(bad)
out
addr16
hlt
push
mov
inc
cmc
pop
pop
js
stos
xchg
scas
add
push
mul
test
push
mov
inc
xchg
jne
xchg
mov
mov
mov
and
and
into
xor
rcl
hlt
inc
mov
lds
inc
repz
std
push
in
mov
push
ret
jbe
mul
fs
nop
add
mov
leave
mov
and
adc
fistp
sub
and
je
adc
and
adc
sbb
xchg
add
mov
aaa
adc
and
cmps
fs
xor
xor
ds
jl
xor
jp
jbe
jl
ins
lds
pop
mov
aam
cmp
arpl
aad
aas
push
neg
jbe
push
mov
test
in
unpckhps
cmp
hlt
push
mov
push
cmc
popw
adc
int
mov
mov
test
push
xchg
xchg
jne
xchg
mov
movs
mov
and
jo
inc
mov
mov
cmps
iret
and
cmps
cdq
xor
pusha
mov
xor
aam
out
inc
mov
lds
inc
aad
(bad)
push
inc
div
cmp
enter
shl
(bad)
iret
data16
out
je
and
adc
aad
fcom
shl
in
add
cmp
xor
cmp
adc
movzx
aaa
shld
sbb
cmp
or
adc
dec
aad
xor
push
(bad)
push
push
jbe
jl
pop
movs
adc
xor
jne
inc
(bad)
push
inc
inc
aam
add
push
ins
aad
aas
push
not
push
jle
popa
test
push
in
sysret
out
addr16
hlt
dec
mov
or
inc
pop
dec
push
test
scas
add
push
mov
mov
mov
lods
xchg
mov
(bad)
jmp
jo
inc
out
movs
pushf
and
xchg
cmps
xor
xchg
push
cld
mov
xor
xchg
xlat
test
stc
inc
xchg
scas
cmps
inc
lock
out
leave
add
cmc
mov
lahf
fs
xor
add
loop
retf
out
je
and
jne
lahf
rcl
pusha
rcl
in
add
arpl
sub
adc
ins
mov
aaa
or
adc
and
sbb
and
or
pop
aad
xor
adc
les
jo
jne
push
or
pop
(bad)
js
addr16
and
push
push
aad
aas
ins
test
in
mov
test
inc
in
cmovp
push
addr16
hlt
adc
jno
inc
jne
cmc
pop
pop
pop
push
mov
lods
xchg
cli
push
mov
inc
xchg
jne
xchg
mov
lods
mov
and
jo
inc
sahf
movs
mov
and
xor
xlat
loop
(bad)
adc
and
std
scas
mov
push
in
add
xor
repnz
(bad)
fs
xor
add
jmp
je
and
adc
ficomp
add
add
arpl
adc
push
cmc
aas
adc
outs
mov
aaa
movs
sub
and
and
adc
sbb
mov
pop
ds
jg
jo
cmp
inc
lds
das
outs
mov
aam
sbb
push
sub
jge
inc
idiv
inc
in
mov
test
js
punpckldq
ja
outs
hlt
push
mov
push
push
mov
test
gs
test
add
mov
inc
mov
adc
mov
movs
inc
xchg
movs
test
xchg
cmps
xor
cmps
push
sti
mov
xor
call
loope
out
aad
cld
(bad)
mov
out
retf
add
xor
out
mov
in
fs
xor
add
ror
div
fst
fistp
sub
in
add
and
xor
adc
xchg
pop
jg
mov
aaa
and
and
and
mov
loopne
aad
xor
aas
(bad)
ins
push
imul
nop
dec
movs
adc
inc
lds
push
(bad)
pop
inc
inc
aam
xor
push
arpl
pop
aas
neg
push
in
mov
test
jnp
jbe
add
popa
addr16
outs
mov
adc
pop
pop
jo
test
scas
add
push
xchg
mov
test
popf
xchg
cdq
xchg
in
adc
xchg
mov
and
jo
inc
lods
movs
fbld
scas
cmps
xchg
xor
pusha
adc
mov
push
nop
xlat
test
mov
inc
sti
(bad)
(bad)
push
into
add
push
iret
mov
in
shl
call
(bad)
cli
mul
out
(bad)
and
adc
fcomp
aaa
test
adc
test
outs
and
or
sub
and
sbb
adc
sbb
cs
daa
cmps
daa
daa
pop
mov
loopne
aad
xor
push
(bad)
jl
push
les
push
lds
das
outs
(bad)
popa
inc
inc
aam
xor
push
das
aad
aas
test
in
mov
test
gs
in
orps
ins
addr16
hlt
dec
mov
inc
cmc
gs
add
add
push
xchg
gs
push
cmps
xchg
adc
inc
mov
adc
stos
mov
and
jo
inc
xchg
mov
and
retf
xor
loopne
inc
in
and
xchg
scas
sti
inc
std
(bad)
xlat
push
leave
add
xor
ret
jbe
not
fs
xchg
add
out
pop
je
and
adc
fstp
adc
add
and
or
adc
xchg
add
aaa
adc
ds
addr16
cmp
push
loopne
aad
xor
push
(bad)
or
nop
jae
inc
inc
cmp
or
popa
(bad)
jge
(bad)
aam
or
push
sub
jno
outs
test
in
mov
test
jns
jb
inc
out
addr16
hlt
dec
mov
jl
jae
add
add
push
mul
test
push
mov
jne
xchg
cwde
adc
movs
mov
and
jo
inc
stos
movs
fsub
and
push
push
xchg
xlat
jmp
(bad)
icebp
scas
mov
push
inc
cld
xor
(bad)
mov
xchg
fs
xor
add
test
fist
rcr
xor
jg
pop
in
add
jle
xor
jns
das
rcl
inc
adc
add
movs
pop
lock
ins
and
sub
mov
loopne
aad
xor
adc
les
nop
jae
push
inc
(bad)
lds
pop
(bad)
pop
inc
jp
data16
ja
inc
aas
ins
mul
dec
in
mov
test
push
in
sysret
out
addr16
hlt
ja
push
xchg
cmp
cmc
jo
pop
push
mov
repz
push
lock
test
push
scas
xchg
jne
xchg
lods
adc
mov
xchg
movs
xchg
and
out
cmps
sahf
xor
pusha
stos
push
xor
jmp
and
out
scas
stc
inc
inc
cli
push
int
mov
push
cwde
mov
xchg
shl
aam
hlt
in
gs
(bad)
fsub
out
je
and
adc
fcomp
or
in
add
jg
add
ds
or
adc
push
mov
aaa
sbb
adc
adc
push
and
cmp
add
xor
mov
pop
push
(bad)
outs
push
inc
les
jne
or
lds
xor
aam
add
push
jl
inc
aas
push
test
in
mov
test
push
in
pcmpeqw
inc
addr16
hlt
imul
add
pushf
xchg
mov
in
push
mul
test
add
scas
xchg
jne
xchg
mov
test
mov
mov
xchg
and
and
mov
not
out
inc
mov
(bad)
out
lds
(bad)
movs
push
mov
shl
mov
shl
add
out
leave
data16
out
je
and
adc
fstp
adc
in
add
and
adc
adc
xchg
sbb
and
movs
adc
sbb
add
dec
sub
mov
loopne
aad
xor
sub
push
push
les
nop
jo
jge
cmp
adc
jns
ja
fs
cmp
push
sub
div
mov
test
in
unpckhps
dec
addr16
je
jge
jnp
or
push
lods
xchg
test
gs
shr
fwait
push
scas
xchg
jne
xchg
sahf
adc
cmps
mov
and
jo
inc
lods
movs
shl
mov
cdq
xor
pusha
test
mov
xor
xchg
xlat
out
inc
mov
lds
inc
aad
cld
push
stos
add
push
lds
leave
fs
xchg
add
fisttp
fnsave
fst
(bad)
lahf
ficom
pusha
shl
push
outs
xchg
pop
and
cmc
inc
adc
ds
aaa
sbb
cmp
sbb
cmp
and
sub
xor
mov
pop
cmp
or
les
push
movs
or
lds
push
aam
sbb
push
xor
push
aas
dec
div
jb
push
mov
test
gs
in
nop
pop
addr16
hlt
pop
mov
or
pop
pop
inc
push
nop
xchg
mov
mov
test
push
mov
inc
mov
adc
mov
stos
inc
lock
cmps
and
xchg
cmps
xchg
xor
pusha
xchg
push
test
mov
(bad)
test
mov
shr
push
mov
std
xor
loope
out
jbe
div
xor
fwait
gs
into
data16
(bad)
je
and
adc
fcomp
or
cmp
sbb
sub
outs
and
or
adc
cmp
jg
mov
aaa
pop
movs
push
lock
lds
and
aas
cmps
sbb
loopne
aad
xor
sbb
arpl
les
aaa
movs
push
inc
jb
adc
inc
(bad)
arpl
aam
adc
push
cs
aas
push
mul
pop
in
mov
test
adc
aaa
lsl
push
addr16
sbb
bound
cmp
outs
push
test
lea
push
hlt
mov
mov
mov
mov
xchg
inc
cmps
jne
xchg
mov
mov
cwde
inc
jmp
xchg
and
and
into
xor
(bad)
xlat
test
and
xchg
scas
rol
clc
push
out
add
xor
cmp
shl
retf
add
out
iret
shl
cli
je
and
adc
rcr
and
add
and
aaa
shl
add
sbb
add
and
cmp
push
daa
inc
mov
loopne
aad
xor
adc
jg
les
nop
jae
addr16
jno
adc
dec
(bad)
jae
and
dec
add
ins
aad
aas
das
test
in
mov
test
inc
in
lsl
push
addr16
hlt
dec
mov
or
push
pop
pop
push
lods
xchg
test
xchg
mov
adc
inc
mov
xchg
xchg
mov
ss
mov
and
jo
inc
lods
movs
fsub
mov
pusha
stos
push
mov
scas
xor
jmp
and
shr
stc
push
mov
lds
fidivr
out
fs
xor
add
in
shl
fbstp
cli
adc
fcomp
jo
jnp
adc
cmp
sbb
xchg
sub
push
inc
adc
ds
aaa
sub
and
sbb
adc
or
aaa
xor
adc
push
nop
movs
adc
dec
lds
das
push
(bad)
ins
inc
outs
aam
or
push
arpl
pop
aas
pop
neg
dec
in
mov
test
inc
in
cmovns
push
addr16
hlt
jno
jg
ss
cmc
addr16
push
add
push
test
test
push
into
xchg
adc
mov
shl
out
movs
mov
mov
mov
xchg
pusha
mov
xor
xchg
xlat
test
mov
inc
add
push
out
add
push
ret
jbe
test
add
ror
bnd
and
adc
fistp
xor
add
and
xor
cmp
or
jg
mov
aaa
and
lds
and
aas
cmps
sbb
and
xor
cmp
push
imul
push
inc
jb
or
(bad)
(bad)
pusha
inc
push
aam
cmp
pop
push
xor
jl
push
not
adc
arpl
push
in
packuswb
push
addr16
hlt
inc
mov
(bad)
cmc
jb
ins
push
lea
mov
mov
add
xchg
jne
xchg
mov
lea
mov
mov
and
cmps
lods
xor
pusha
xchg
push
mov
(bad)
push
xchg
xlat
hlt
inc
lods
adc
and
xchg
scas
mov
push
aam
(bad)
xor
xchg
shl
int3
add
in
call
and
adc
fstp
cmp
ins
rol
in
add
and
adc
adc
xchg
push
jg
mov
aaa
adc
adc
adc
outs
and
sbb
pop
loopne
aad
xor
dec
(bad)
je
imul
push
inc
lds
pop
mov
pop
aam
adc
push
dec
aad
aas
sub
dec
ja
in
mov
test
in
cmovs
inc
addr16
or
push
cmc
jns
jnp
adc
gs
test
push
mov
loop
xchg
jne
xchg
mov
ss
mov
and
jo
inc
jmp
fbld
xchg
cmps
xchg
xor
pusha
rcl
lods
xor
in
cld
inc
rcl
and
mov
fcom
stc
xor
cmp
jecxz
stos
in
gs
out
je
and
adc
aam
les
cmp
and
sbb
and
or
adc
cmp
movs
adc
pop
lds
and
sbb
sbb
cmp
daa
xor
aas
(bad)
imul
movs
push
inc
ins
lds
das
dec
(bad)
jae
outs
aam
sbb
push
ins
aad
aas
ins
test
in
mov
test
push
in
cmovne
arpl
hlt
push
jnp
ss
cmc
pop
pop
push
add
push
mov
test
push
mov
inc
xchg
jne
xchg
lea
stos
mov
and
jo
inc
jmp
es
cmps
xchg
xor
pusha
mov
lahf
mov
xor
jmp
adc
and
imul
fcom
mov
push
cmp
xlat
xor
add
in
fsub
out
je
and
jne
lahf
mov
sbb
sbb
dec
add
daa
xchg
pop
adc
or
push
cmc
sbb
movzx
aaa
pop
movs
and
and
and
or
pop
aad
xor
push
(bad)
ins
push
outs
les
jo
dec
inc
inc
lds
js
arpl
aam
add
push
je
inc
aas
pop
test
in
mov
test
in
(bad)
out
addr16
hlt
dec
mov
outs
cmc
inc
pop
jle
cmps
xchg
mov
gs
test
add
mov
inc
xchg
xchg
jecxz
movs
(bad)
jmp
mov
mov
pushf
movs
mov
and
nop
xor
retf
inc
lds
retf
and
xchg
scas
mov
push
iret
add
push
lock
in
shl
lds
jecxz
retf
data16
out
je
and
adc
aam
rcl
add
add
and
adc
ss
sbb
jg
mov
aaa
or
and
and
pop
loopne
aad
xor
cmp
les
jae
dec
inc
push
lds
das
pop
(bad)
pop
inc
and
dec
sbb
push
ins
aad
aas
dec
test
in
mov
test
gs
in
unpcklps
inc
addr16
hlt
dec
mov
pmaddwd
gs
xchg
xchg
mov
xchg
push
test
test
push
ret
adc
inc
call
(bad)
jmp
mov
mov
and
xchg
cmps
mov
xlat
pusha
movs
push
cli
mov
xor
in
out
inc
lods
adc
and
ret
inc
iret
(bad)
stc
push
retf
add
xor
clc
mov
xchg
fs
xor
add
fisttp
loop
cmc
and
adc
fistp
pop
test
shl
in
add
and
or
adc
cmp
adc
adc
xor
sbb
push
loopne
aad
xor
and
les
inc
dec
lds
push
(bad)
jo
jl
jb
addr16
push
inc
aad
aas
push
not
(bad)
in
mov
test
sbb
arpl
pop
out
addr16
hlt
pop
mov
inc
cmc
dec
pop
push
add
push
test
stos
test
scas
xchg
jne
xchg
out
adc
mov
jo
inc
lods
movs
fbld
mov
sahf
xor
pusha
ret
push
movs
mov
xor
hlt
xlat
test
fild
scas
mov
push
enter
aad
loop
repz
lds
enter
shl
(bad)
out
mul
(bad)
je
and
adc
fcomp
aaa
test
or
adc
and
or
add
pop
adc
push
mov
aaa
push
movs
and
sbb
xor
and
or
inc
aad
xor
xor
ins
push
ins
les
jo
dec
inc
ins
lds
cmp
aam
or
push
inc
aad
aas
push
not
adc
ins
mov
test
push
in
cmova
dec
addr16
hlt
dec
mov
pop
cmc
push
pop
outs
push
adc
mov
test
into
xchg
jne
xchg
mov
mov
mov
in
movs
fldenv
mov
pusha
adc
iret
xor
loopne
lock
mov
(bad)
xchg
scas
aam
out
cmps
push
mov
retf
aad
push
ret
jbe
imul
fs
xor
add
out
leave
data16
in
in
and
adc
fstp
cmp
jnp
add
xor
sub
pop
shr
adc
cmp
aaa
lock
movs
sbb
daa
inc
mov
loopne
aad
xor
adc
adc
les
jo
dec
inc
cmp
adc
inc
(bad)
jge
fs
add
push
jb
popa
aas
outs
not
outs
in
mov
test
in
nop
inc
addr16
hlt
push
mov
push
push
mov
xchg
test
push
cdq
xchg
test
xchg
xor
fbld
xchg
cmps
xchg
pusha
test
push
mov
inc
icebp
adc
and
jmp
mov
push
aam
mov
push
ret
mov
leave
xlat
xor
add
in
and
fbstp
les
ficomp
jne
rcl
in
add
and
add
cmp
aaa
adc
imul
lock
daa
and
and
adc
pop
aad
xor
ss
dec
push
jle
and
jl
adc
inc
(bad)
pop
inc
cmp
ja
inc
mov
push
ins
aad
aas
push
mul
fs
mov
test
sbb
nop
pop
addr16
hlt
push
mov
or
jae
js
stos
xchg
xchg
add
push
cmc
lods
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
hlt
movs
mov
es
pusha
mov
xor
hlt
xlat
repz
fcom
leave
and
(bad)
scas
mov
push
int
jmp
std
aad
push
(bad)
mov
into
shl
xchg
add
mov
loop
(bad)
out
je
and
adc
ficomp
xor
in
add
and
or
cmp
sbb
jg
mov
aaa
pop
movs
daa
lock
lds
and
or
pop
aad
xor
sub
jl
popa
les
je
dec
inc
jno
push
das
pop
(bad)
outs
inc
push
aam
add
push
das
aad
aas
jge
inc
ja
in
mov
test
gs
in
cvtps2pd
push
addr16
push
mov
push
cmc
inc
pop
outs
push
mov
repz
push
mov
add
cmps
xchg
jne
xchg
call
mov
mov
scas
movs
xchg
and
stc
cmps
mov
xchg
pusha
pushf
push
test
xchg
push
call
adc
inc
sahf
scas
mov
push
into
add
push
sar
fs
xor
add
les
xor
adc
fstp
sub
jg
or
cmp
sub
or
jns
aas
adc
push
add
pop
movs
sbb
daa
lds
and
cmps
add
push
mov
loopne
aad
xor
adc
jno
ja
aas
nop
ins
movs
or
das
push
(bad)
dec
inc
push
aam
add
ins
aad
aas
ins
not
dec
in
mov
test
in
unpckhps
inc
addr16
hlt
inc
mov
pop
cmc
pop
pop
fs
mov
push
xchg
gs
test
add
mov
inc
mov
adc
mov
shl
jo
inc
stos
movs
xchg
and
xchg
cmps
mov
push
xchg
mov
xor
in
mov
int
into
and
xchg
scas
aam
(bad)
push
retf
add
xor
cld
mov
in
shl
add
cmc
(bad)
lahf
data16
fnsave
les
cmps
lahf
iret
xchg
and
xor
adc
add
and
jb
sbb
add
cmp
movs
pop
lock
lds
and
cmp
ds
add
adc
adc
and
xor
les
jb
dec
inc
jno
adc
jp
js
jl
xor
sub
push
aas
push
not
push
in
mov
test
push
in
sysret
out
addr16
hlt
push
pop
xchg
ss
cmc
ins
pop
inc
push
mov
push
mul
test
push
scas
xchg
popf
xchg
lahf
adc
xchg
mov
and
jo
inc
out
call
cmps
mov
nop
pusha
(bad)
push
push
mov
inc
mov
lds
inc
inc
out
fld
stc
xor
fistp
hlt
xlat
xor
add
fimul
fbstp
(bad)
adc
fcomp
aaa
test
add
push
add
and
jl
sbb
add
push
movs
sbb
pextrw
xor
add
sbb
loopne
aad
xor
cs
ins
push
ins
les
nop
push
inc
inc
lds
pop
(bad)
outs
inc
addr16
add
push
das
aad
aas
data16
in
mov
test
ins
in
lsl
cmp
mov
pop
cmc
je
push
push
test
test
nop
push
hlt
mov
mov
xchg
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
(bad)
and
push
mov
movs
push
call
adc
and
retf
inc
sti
(bad)
call
mov
push
(bad)
mov
fbld
retf
add
in
and
(bad)
je
and
adc
fcomp
sub
add
and
or
data16
pop
adc
movzx
aaa
xor
and
and
push
daa
add
aad
xor
adc
push
dec
les
nop
pusha
movs
dec
inc
inc
lds
das
dec
(bad)
pop
inc
and
mov
push
ins
aad
aas
sub
dec
ja
in
mov
test
jp
bound
adc
hlt
push
mov
or
push
lods
xchg
mov
mov
cli
gs
test
add
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
xchg
and
popf
cmps
popf
xor
pusha
retf
mov
xor
loop
lds
out
and
jecxz
clc
inc
aad
aad
aam
fnsave
cld
mov
xchg
fs
xor
add
aad
retf
out
je
and
jne
lahf
les
jnp
adc
test
daa
xchg
bound
adc
cs
aaa
movs
inc
lock
sbb
cmp
adc
add
add
pop
aad
xor
add
les
dec
movs
pop
inc
jns
pop
das
aas
(bad)
jnp
das
aam
and
push
das
aad
aas
ins
not
push
in
mov
test
in
sysret
out
addr16
dec
mov
inc
cmc
inc
pop
pop
push
scas
xchg
scas
add
push
mov
mov
mov
adc
inc
mov
adc
scas
mov
and
jo
inc
xchg
(bad)
es
pusha
fst
mov
xor
hlt
xlat
test
leave
inc
xchg
scas
mov
push
int
fbstp
lds
into
fs
add
fisttp
shl
adc
mov
pop
add
add
and
or
adc
pop
adc
push
mov
aaa
push
movs
adc
push
lds
and
cmp
add
pop
mov
loopne
aad
xor
push
(bad)
pop
push
popa
les
nop
xor
lds
dec
(bad)
arpl
aam
add
push
imul
aas
dec
imul
in
mov
test
gs
in
divps
push
addr16
hlt
dec
mov
inc
cmc
jb
outs
push
mov
push
sti
mov
mov
cdq
xchg
jne
xchg
mov
xor
inc
mov
shl
and
push
cli
mov
xor
loope
int
mov
(bad)
(bad)
scas
mov
push
retf
add
xor
idiv
xchg
shl
enter
cld
gs
leave
data16
out
je
and
adc
lock
(bad)
xchg
pop
pop
push
test
in
add
sbb
pop
rcr
inc
adc
or
inc
lock
xor
(bad)
sbb
cs
loopne
aad
xor
sbb
push
push
xor
dec
nop
dec
movs
dec
inc
cmp
pop
das
pop
(bad)
je
je
arpl
push
aad
aas
jbe
dec
ja
in
mov
test
in
unpckhps
pop
addr16
push
mov
or
push
lods
xchg
stos
add
push
mul
test
push
mov
inc
mov
adc
scas
mov
and
jo
inc
mov
fsub
xchg
cmps
xor
xchg
xor
icebp
xlat
in
inc
repz
and
mov
call
mov
push
(bad)
mov
leave
fs
xor
add
out
clc
data16
(bad)
icebp
adc
mov
pop
jae
or
and
adc
or
sub
cmp
xchg
inc
jg
mov
aaa
sub
lds
and
and
or
pop
aad
xor
or
fs
je
daa
nop
jae
inc
jno
adc
push
jnp
jg
push
and
inc
push
jg
pop
aas
sub
pop
ja
in
mov
test
outs
in
nop
pop
addr16
hlt
push
mov
ins
cmc
inc
pop
push
add
push
in
gs
test
push
mov
movs
adc
inc
mov
adc
hlt
mov
and
jo
inc
out
lahf
and
and
push
fwait
mov
xor
in
test
and
xchg
scas
mov
push
loopne
mov
push
(bad)
mov
into
shl
hlt
add
lods
(bad)
out
je
and
adc
out
lds
add
or
add
outs
and
or
adc
sbb
jg
mov
aaa
pop
movs
pop
lock
xor
and
and
and
aaa
xor
push
(bad)
pusha
push
popa
les
nop
jno
pop
inc
pop
lds
das
pop
mov
aam
sub
inc
push
pop
aad
aas
push
div
push
in
mov
test
gs
pop
cvtps2pd
pop
addr16
hlt
push
mov
adc
push
pop
push
push
adc
lods
test
add
test
mov
adc
mov
jo
inc
mov
xchg
and
and
retf
fisttp
inc
out
adc
and
into
scas
loop
into
(bad)
mov
xor
ret
jbe
not
fs
iret
add
(bad)
pop
je
and
adc
loope
mov
jg
or
test
outs
xor
daa
pop
fs
ja
adc
xchg
push
jg
mov
aaa
sub
lds
and
and
mov
loopne
aad
xor
inc
(bad)
jl
je
cmp
imul
jnp
ins
aam
sbb
push
ins
aad
aas
outs
test
in
mov
test
pusha
in
packsswb
dec
addr16
hlt
jbe
inc
xchg
jnp
dec
cmc
cmp
outs
push
lods
xchg
test
cmc
gs
out
stc
push
mov
inc
xchg
xchg
out
adc
mov
mov
stos
movs
mov
es
mov
push
test
mov
inc
in
jmp
scas
mov
push
repnz
xor
cld
mov
leave
fs
xor
add
aam
(bad)
data16
shl
adc
fcomp
xor
ins
shl
sub
xchg
pop
and
adc
push
mov
aaa
shld
pop
lds
and
and
adc
pop
aad
xor
cmp
inc
push
jbe
sub
push
imul
dec
das
(bad)
mov
dec
mov
push
arpl
inc
aas
dec
test
in
mov
test
inc
in
nop
ins
ins
hlt
ins
mov
inc
cmc
pop
pop
push
add
push
lock
out
jecxz
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
cwde
movs
pushf
and
xchg
cmps
xchg
xor
pusha
stos
push
mov
fistp
inc
mov
(bad)
xchg
scas
retf
inc
test
div
(bad)
mov
cmc
fs
xor
add
mov
enter
xor
adc
fcomp
aaa
test
ror
test
pop
add
add
aaa
cmc
sbb
jg
mov
aaa
pop
movs
pop
lock
xor
pop
movs
pop
dec
inc
cmps
sbb
loopne
aad
xor
push
(bad)
ins
push
sub
push
nop
jo
or
jl
inc
das
daa
(bad)
jp
cmp
mov
push
sub
jl
jnp
inc
ja
in
mov
test
pop
in
lsl
jge
add
push
mov
inc
cmc
pop
pop
dec
push
adc
lea
mov
lds
mov
adc
lods
mov
and
jo
inc
mov
xchg
and
and
mov
push
cmc
xlat
in
inc
mov
(bad)
xchg
scas
mov
push
in
add
xor
pushf
mov
xchg
shl
enter
pushf
gs
jmp
out
je
and
adc
fstp
push
test
in
add
push
xchg
shl
adc
cmp
movs
cmp
and
or
es
aad
xor
dec
(bad)
ins
push
les
nop
imul
das
pop
(bad)
ja
jns
xor
inc
mov
push
jp
inc
aas
push
mul
dec
in
mov
test
in
punpckldq
inc
addr16
hlt
ins
mov
push
cmc
push
pop
jg
lods
xchg
test
popf
push
mul
test
push
mov
inc
sahf
jne
xchg
in
adc
mov
jo
inc
mov
mov
cmps
iret
aad
mov
pusha
xchg
push
cli
mov
xor
rcl
loopne
lods
adc
and
retf
scas
mov
push
loop
mov
push
(bad)
mov
leave
fs
xor
add
call
out
je
and
adc
fcomp
jae
jnp
add
test
and
push
rcr
pop
adc
aas
mov
aaa
and
lds
adc
xor
sbb
xor
push
(bad)
pusha
push
jbe
and
jb
pop
das
aas
(bad)
jae
je
cmp
dec
mov
push
jno
add
push
neg
push
or
gs
in
nop
cmp
mov
push
cmc
dec
pop
or
adc
mov
mov
xchg
mov
adc
xchg
mov
out
movs
pushf
and
xchg
cmps
call
mov
xor
(bad)
xlat
test
mov
inc
inc
call
mov
push
(bad)
mov
into
fs
xor
add
loop
std
data16
(bad)
je
and
adc
neg
daa
test
es
add
xchg
pop
ds
pop
sar
add
jg
mov
aaa
xor
lds
xor
mov
loopne
aad
xor
or
les
jo
dec
inc
jp
adc
cmp
arpl
aam
sub
inc
push
das
aad
aas
dec
test
in
mov
test
popa
in
andnps
pusha
addr16
hlt
dec
mov
inc
cmc
dec
pop
outs
push
test
hlt
gs
test
push
mov
inc
mov
mov
mov
xor
inc
mov
iret
and
mov
push
mov
fbstp
inc
in
adc
and
loope
mov
push
loope
hlt
xor
hlt
mov
xchg
shl
rol
(bad)
(bad)
jmp
out
je
and
adc
ficomp
sub
add
or
and
adc
cmp
movs
adc
daa
lds
sub
sbb
pop
mov
loopne
aad
xor
adc
les
nop
xor
inc
das
(bad)
(bad)
jnp
fs
add
sub
add
push
neg
jb
push
mov
test
gs
in
movd
inc
addr16
hlt
jb
jge
jp
dec
cmc
push
pop
dec
push
lods
xchg
lods
add
push
hlt
mov
mov
adc
inc
mov
adc
mov
mov
and
and
push
xchg
mov
xor
in
xlat
out
inc
in
lock
shr
push
int
lds
(bad)
mov
in
fs
rol
ret
pop
je
and
adc
fcomp
xor
ins
shl
in
add
and
add
adc
ss
aaa
pop
movs
pop
lock
pop
and
sub
or
add
daa
xor
aas
(bad)
imul
dec
nop
ins
movs
inc
jno
adc
ins
(bad)
push
inc
jg
inc
add
push
xor
add
push
not
ja
push
mov
test
inc
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
js
mov
push
mov
mov
repnz
cwde
xchg
jne
xchg
mov
mov
mov
jmp
es
cmps
mov
nop
pusha
mov
xor
cld
xlat
test
mov
inc
mov
lds
mov
in
xlat
xor
add
ror
je
and
adc
aam
lds
pusha
rcl
in
add
add
xor
adc
cmp
and
adc
adc
and
sub
adc
pop
aad
xor
push
(bad)
outs
push
les
imul
das
push
(bad)
arpl
aam
add
push
je
inc
aas
ins
test
in
mov
test
js
jg
dec
out
addr16
hlt
push
mov
inc
cmc
inc
pop
jge
fist
jmp
add
scas
xchg
adc
inc
mov
adc
mov
mov
lods
movs
xchg
and
and
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
int
retf
aad
push
(bad)
mov
(bad)
fs
xor
add
dec
into
je
and
adc
fstp
sub
ins
shl
in
add
and
jb
adc
and
outs
xchg
sbb
mov
aaa
adc
push
lock
outs
and
cmp
adc
pop
mov
loopne
aad
xor
das
(bad)
jl
imul
dec
inc
dec
lds
das
pop
(bad)
jno
jo
dec
add
popa
aad
aas
and
in
mov
test
popa
in
unpcklps
push
addr16
hlt
push
mov
or
push
lods
xchg
xchg
add
push
mul
test
push
add
jne
xchg
test
movs
mov
and
jo
inc
mov
lods
test
retf
mov
xor
not
rol
test
inc
loopne
call
push
in
add
xor
repnz
aam
repnz
add
fimul
fbstp
les
fcomp
xor
cmp
add
and
or
adc
or
es
cmp
sbb
sub
pop
aad
xor
pop
(bad)
adc
les
nop
cmp
dec
das
inc
(bad)
jae
jl
jae
dec
mov
push
dec
aad
aas
push
div
ja
in
mov
test
sbb
out
addr16
hlt
pop
mov
push
cmc
jg
or
test
mov
mov
fwait
push
ret
adc
inc
mov
adc
mov
mov
movs
mov
es
sahf
xor
pusha
pushf
push
mov
fist
les
leave
and
iret
scas
mov
push
xlat
add
xor
les
aam
xlat
xor
add
loop
jmp
and
adc
ficomp
xor
add
and
or
sbb
sbb
jg
mov
aaa
or
and
pop
cmps
sbb
loopne
aad
xor
adc
pusha
push
popa
les
inc
lds
das
pop
(bad)
outs
inc
cmp
mov
push
jo
sbb
push
test
in
mov
test
push
in
lsl
push
addr16
hlt
dec
mov
imul
xchg
xchg
mov
loop
mov
add
mov
inc
mov
adc
mov
mov
mov
xchg
and
and
retf
fistp
inc
mov
(bad)
mov
icebp
push
out
call
push
ret
jbe
not
fs
xor
add
aad
leave
data16
les
loope
mov
lahf
(bad)
xchg
and
test
shl
adc
jnp
daa
pop
es
sub
adc
cmp
movs
cmp
and
and
pavgb
aad
xor
xor
jl
push
movs
dec
inc
and
adc
push
(bad)
jns
pop
aam
or
push
ins
aad
aas
push
test
in
mov
test
in
nop
inc
addr16
hlt
adc
pop
cmc
and
inc
push
scas
xchg
mov
out
mov
mov
push
cmps
xchg
test
jmp
and
jo
inc
lea
fsub
xchg
cmps
cdq
xor
pusha
adc
fistp
inc
not
in
and
shr
(bad)
push
aam
mov
push
lds
leave
fs
lds
in
retf
out
je
and
adc
fcomp
or
in
add
jle
xor
rcr
cmp
xor
pop
lock
cmp
push
cmps
and
add
xor
adc
les
nop
xor
lds
pop
(bad)
ja
jg
dec
add
push
popa
aad
aas
push
div
ja
in
mov
test
in
cmovp
pop
addr16
sbb
jne
cmc
pop
pop
push
add
push
stos
gs
test
push
ret
xchg
jne
xchg
mov
mov
mov
movs
movs
pushf
and
mov
pusha
stos
push
mov
fistp
inc
les
into
and
nop
scas
mov
push
retf
add
xor
(bad)
mov
retf
fs
xor
add
test
enter
xor
adc
fstp
add
in
add
aas
xchg
jns
or
adc
and
ins
mov
aaa
and
lds
and
cmp
sbb
pop
mov
loopne
aad
xor
dec
(bad)
dec
push
jne
dec
nop
push
lds
dec
(bad)
jl
inc
aam
add
push
push
aad
aas
push
test
in
mov
test
pop
in
lsl
inc
addr16
hlt
imul
push
push
adc
gs
test
add
into
xchg
jne
xchg
test
sar
mov
mov
mov
iret
(bad)
in
xchg
pusha
fst
mov
xor
loop
in
inc
cli
adc
and
xchg
scas
std
inc
iret
(bad)
into
push
in
add
push
lock
mov
enter
retf
(bad)
out
je
and
adc
fstp
sub
popa
ror
in
add
and
jb
sbb
pop
adc
cmp
movs
inc
lock
je
cmp
adc
xor
xor
es
jl
push
push
nop
jae
dec
inc
inc
lds
push
(bad)
pop
inc
addr16
add
jb
pop
aas
push
imul
dec
in
mov
test
in
addps
inc
addr16
hlt
je
jge
pusha
jne
cmc
pop
pop
pop
push
stos
xchg
test
gs
test
push
mov
inc
mov
xchg
mov
nop
mov
and
jo
inc
stos
movs
frstor
call
push
cli
mov
xor
cld
xlat
loope
sti
adc
and
mov
stc
push
retf
xor
cld
mov
mul
rol
(bad)
cli
data16
fbstp
jmp
lahf
les
push
shl
ds
and
or
adc
ds
aaa
pop
movs
inc
lock
cmp
cmps
add
cmp
xor
sbb
bound
les
movs
push
inc
lds
pop
mov
aam
adc
push
dec
aad
aas
push
div
ja
in
mov
test
jge
aas
cmovbe
push
addr16
hlt
push
mov
push
cmc
pop
pop
push
push
aad
scas
add
push
jmp
add
add
in
adc
xchg
mov
and
jo
inc
out
shl
cdq
cmps
xchg
xor
pusha
xchg
mov
xor
hlt
xlat
mov
and
nop
scas
hlt
inc
out
(bad)
out
mov
repz
cmp
xlat
xor
add
in
mul
out
je
and
adc
mov
pop
xor
push
rcr
in
add
sub
or
adc
aaa
adc
ja
cmp
adc
and
add
sub
xor
push
(bad)
fs
popa
les
movs
dec
inc
jb
pop
das
pop
(bad)
arpl
aam
and
inc
push
dec
aad
aas
push
in
mov
test
jno
pop
sysret
out
addr16
hlt
push
mov
inc
cmc
pop
pop
js
adc
gs
shr
mov
xchg
xchg
jne
xchg
in
adc
mov
mov
lock
shl
mov
xchg
pusha
mov
mov
fistp
inc
mov
(bad)
xchg
scas
ret
(bad)
mov
xor
sar
nop
fidiv
icebp
add
mov
leave
data16
je
and
adc
neg
and
add
and
adc
gs
sbb
aas
xchg
pop
jg
mov
aaa
adc
cs
movs
and
daa
adc
xor
sbb
dec
push
popa
les
nop
ja
push
inc
cmp
adc
popa
(bad)
ja
gs
add
push
js
arpl
jp
dec
ja
in
mov
test
push
xor
addr16
hlt
je
push
xchg
imul
fs
outs
push
lods
xchg
mov
test
ret
adc
inc
mov
adc
repnz
and
jo
inc
movs
movs
mov
cmps
iret
mov
cmps
cmps
xchg
pusha
rcl
xor
xlat
out
inc
cli
adc
and
into
scas
loopne
rol
fist
mov
push
(bad)
mov
fbld
lds
mov
retf
out
je
and
adc
(bad)
lahf
les
arpl
cmp
cmp
push
test
or
xadd
cmc
inc
adc
cmp
movs
dec
lock
aaa
and
cmps
xor
pop
mov
loopne
aad
xor
sbb
les
nop
inc
movs
push
das
pop
(bad)
push
inc
jg
push
and
pop
push
arpl
jns
pop
neg
push
in
mov
test
inc
in
sysret
out
addr16
hlt
jge
or
gs
push
add
push
cmc
gs
int3
out
pop
pop
xor
in
adc
mov
fiadd
movs
fldenv
nop
cmps
lods
xor
pusha
fst
mov
xor
retf
xlat
out
inc
mov
lds
inc
inc
loop
rol
xor
(bad)
mov
int
fbstp
enter
fisub
(bad)
out
je
and
adc
fcomp
xor
jnp
sbb
adc
push
xchg
pop
cmp
adc
push
mov
aaa
dec
movs
adc
sbb
imul
cmps
push
daa
push
mov
loopne
aad
xor
sub
ins
push
ins
les
movs
jne
inc
lds
pop
(bad)
push
inc
fs
or
push
(bad)
aad
aas
push
div
in
mov
test
gs
in
cmovp
push
addr16
imul
pop
push
mov
mov
loope
jmp
add
mov
mov
xchg
xchg
mov
ss
mov
and
jo
inc
mov
shl
cmps
test
pusha
xchg
push
in
mov
in
fadd
leave
and
mov
icebp
push
leave
add
xor
sar
cld
shl
mov
pop
je
and
adc
fstp
das
test
and
and
outs
cmp
daa
pop
add
adc
adc
xchg
add
aaa
adc
and
sbb
cmp
pop
cmps
sbb
pop
mov
loopne
aad
xor
sub
les
movs
adc
jnp
adc
pop
mov
aam
add
push
ins
aad
aas
push
imul
ja
in
mov
test
in
lsl
outs
addr16
hlt
push
mov
pop
cmc
pop
pop
push
test
mul
test
push
xchg
xchg
jne
xchg
mov
mov
jo
inc
xchg
movs
fsub
mov
xchg
xor
pusha
mov
xchg
mov
xor
in
iret
inc
lods
adc
and
shr
cmps
push
mov
ret
xor
cmp
retf
in
fisttp
fbstp
rcl
lahf
les
aas
ror
in
add
jle
xor
rol
or
jg
mov
aaa
shld
xor
xor
push
cmps
xor
inc
mov
loopne
aad
xor
adc
les
jae
je
lds
das
pop
(bad)
push
inc
jl
push
add
push
arpl
inc
aas
push
idiv
ja
in
mov
test
sbb
sub
pop
out
addr16
hlt
jge
jg
pop
jne
cmc
pop
pop
push
push
cmps
xchg
mov
push
cmc
mov
movs
adc
inc
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
mov
iret
pushf
cmps
cmps
sahf
xor
pusha
stos
push
mov
stos
xor
(bad)
int
mov
lds
cld
(bad)
out
push
repz
xor
jecxz
div
not
add
lods
(bad)
fsub
out
je
and
adc
fcomp
add
add
and
or
xor
or
push
mov
aaa
movs
pop
lock
imul
cmps
sbb
loopne
aad
xor
push
(bad)
outs
push
popa
les
jae
push
inc
pop
lds
das
pop
(bad)
gs
push
aam
add
push
dec
aad
aas
push
test
in
mov
test
push
in
(bad)
out
addr16
hlt
push
mov
jle
push
pop
push
add
push
mul
test
add
mov
inc
mov
adc
lea
mov
mov
iret
aad
and
cdq
xor
xchg
xlat
cld
inc
xlat
adc
and
xchg
scas
mov
push
leave
add
push
idiv
nop
fs
add
leave
(bad)
stc
data16
lds
rcl
lahf
(bad)
xchg
and
xor
add
and
add
adc
xchg
push
jg
mov
aaa
adc
cs
lds
adc
sbb
sbb
aad
xor
push
(bad)
jg
imul
dec
inc
cmp
dec
das
pop
(bad)
ja
push
aam
and
arpl
aad
aas
push
not
pop
in
mov
test
pop
in
cmovs
inc
addr16
hlt
je
imul
pop
jb
test
test
gs
test
add
mov
inc
mov
adc
mov
lods
and
jo
inc
out
movs
mov
movs
iret
fldenv
lahf
cmps
cdq
xor
pusha
mov
cli
mov
xor
aam
out
inc
out
adc
inc
shr
in
std
add
xor
(bad)
mov
leave
fs
rol
fisttp
iret
je
and
adc
int
les
shl
in
add
daa
xchg
cmp
adc
ds
aaa
daa
movs
adc
and
push
cmps
xor
inc
mov
loopne
aad
xor
pop
(bad)
jbe
push
les
nop
jnp
adc
cmp
(bad)
jae
inc
aam
add
push
arpl
inc
aas
inc
not
push
in
mov
test
inc
in
(bad)
out
addr16
hlt
push
mov
inc
cmc
pop
pop
inc
push
mov
lahf
add
push
cmc
gs
mov
shr
inc
scas
xchg
adc
xlat
and
jo
inc
out
pushf
and
xchg
cmps
popf
xor
pusha
xchg
push
xor
test
mov
inc
stc
(bad)
cld
push
ret
xor
fnstsw
lahf
mov
enter
cli
gs
enter
out
je
and
adc
fstp
daa
test
or
add
outs
and
or
push
cmc
and
sbb
sbb
sbb
xor
and
or
sbb
mov
pop
sbb
pop
push
inc
les
inc
xor
inc
das
pop
(bad)
jno
push
aam
cmp
push
ins
aad
aas
push
not
inc
in
mov
test
dec
in
lsl
jne
pop
hlt
push
mov
inc
cmc
and
dec
push
test
test
cmc
gs
out
inc
mov
inc
loop
fst
jmp
mov
mov
xchg
movs
mov
mov
pusha
fst
mov
xor
out
xlat
mov
repz
and
fild
cld
push
in
fbstp
les
repz
fild
retf
data16
xlat
je
and
adc
fstp
jle
daa
shl
in
add
and
or
adc
xchg
cmp
add
movs
cs
movs
ins
dec
aas
cmps
and
loopne
aad
xor
es
jle
inc
les
jae
jae
inc
lds
das
pop
mov
jns
inc
add
push
(bad)
aad
aas
dec
imul
adc
popa
mov
test
push
in
nop
and
mov
pmaddwd
outs
push
mov
push
and
mov
test
test
mov
inc
xor
stos
adc
xchg
mov
and
jo
inc
mov
fbld
mov
pusha
xchg
push
fwait
mov
xor
in
fild
retf
and
sahf
scas
inc
(bad)
in
int3
add
push
cmp
iret
add
xlat
(bad)
fisub
out
je
and
adc
ficomp
xor
and
or
push
add
and
sbb
adc
or
cmp
and
daa
cmps
xor
add
adc
pop
aad
xor
adc
adc
nop
ins
movs
pop
inc
jae
adc
pop
(bad)
jae
jno
sbb
jg
add
push
neg
dec
in
mov
test
jle
push
sysret
out
addr16
dec
mov
inc
cmc
pop
pop
push
add
push
mov
mov
mov
fwait
xchg
jne
xchg
lahf
adc
xchg
mov
and
jo
inc
lods
movs
mov
es
cmps
xchg
xor
pusha
xchg
push
(bad)
mov
xor
(bad)
inc
stc
adc
and
(bad)
scas
mov
push
int
mov
push
(bad)
mov
hlt
xlat
xor
add
loope
xchg
data16
je
and
adc
loopne
aad
and
sbb
pusha
rcr
in
add
and
or
sbb
pop
adc
aas
mov
aaa
pop
movs
adc
adc
movs
sbb
daa
pop
mov
loopne
aad
xor
push
(bad)
imul
movs
jle
jb
adc
xor
aam
add
push
ins
aad
aas
and
jne
or
test
gs
in
lsl
push
addr16
imul
jbe
adc
lea
fwait
push
into
xchg
adc
inc
mov
adc
mov
and
movs
cwde
and
out
cmps
xor
xchg
push
movs
mov
xor
call
adc
and
xchg
scas
mov
push
leave
add
push
iret
mov
les
retf
add
out
int
fucom
les
les
rcr
test
shl
adc
and
sub
adc
push
mov
aaa
sub
and
and
or
dec
aad
xor
or
jl
les
push
jns
inc
lds
das
push
(bad)
sbb
adc
push
jb
inc
aas
push
imul
dec
in
mov
test
dec
out
addr16
dec
mov
push
push
test
test
gs
test
push
rol
jne
xchg
mov
movs
mov
and
jo
inc
out
mov
xchg
cmps
ret
xor
pusha
xchg
push
mov
mov
inc
(bad)
adc
and
mov
stc
push
leave
add
xor
(bad)
mov
enter
lds
retf
(bad)
aad
shl
je
and
jne
lahf
lea
add
add
pop
add
jle
xor
es
or
pop
cmc
inc
adc
add
movs
pop
lock
imul
inc
mov
loopne
aad
xor
adc
les
nop
jb
push
das
aas
(bad)
jae
pop
aam
sbb
push
arpl
pop
aas
je
sub
mov
test
pop
in
cmovp
jnp
add
dec
mov
pop
cmc
pop
pop
imul
loopne
xchg
mov
mov
lods
xchg
adc
inc
mov
adc
sahf
mov
and
jo
inc
out
mov
xchg
cmps
shl
sahf
push
stos
mov
xor
hlt
xlat
mov
sti
inc
xchg
scas
fadd
(bad)
out
iret
add
push
(bad)
mov
into
shl
(bad)
add
loop
sti
data16
repz
and
adc
(bad)
lahf
not
sbb
sbb
push
add
and
or
sbb
daa
adc
aas
mov
aaa
pop
movs
sub
and
and
push
loopne
aad
xor
sub
push
push
dec
les
nop
jp
pop
inc
inc
lds
pop
(bad)
arpl
aam
add
push
inc
aad
aas
test
in
mov
test
add
ja
add
inc
addr16
hlt
pop
mov
inc
cmc
inc
pop
jle
adc
mov
mov
adc
inc
mov
adc
lea
mov
and
and
mov
pushf
fistp
inc
mov
(bad)
xchg
scas
cld
inc
ret
(bad)
icebp
push
retf
xor
pushf
mov
(bad)
test
iret
add
mov
leave
data16
out
je
and
adc
int
lds
ins
shl
in
add
cmp
ror
sbb
cmp
movs
sbb
adc
movs
sbb
daa
sbb
adc
dec
aad
xor
cs
jl
push
les
nop
jae
adc
and
adc
pop
(bad)
jo
pop
aam
and
pop
push
ins
aad
aas
dec
imul
dec
in
mov
test
in
unpckhps
inc
addr16
push
mov
pop
cmc
pop
pop
imul
xchg
movs
add
push
jmp
add
add
jne
xchg
pushf
adc
mov
jo
inc
lods
movs
mov
es
cmps
cmps
xor
pusha
xchg
push
popf
mov
xor
retf
inc
int3
adc
inc
mov
stc
push
leave
add
xor
hlt
mov
int3
xor
add
fisttp
xlat
je
and
adc
fcomp
sub
shl
push
outs
and
or
sbb
sbb
jg
mov
aaa
push
movs
pop
lock
ins
and
and
xor
inc
aad
xor
sub
dec
push
aas
les
ins
movs
dec
inc
inc
lds
das
pop
mov
outs
aam
add
push
arpl
push
aas
dec
neg
push
in
mov
test
adc
popa
unpcklps
push
addr16
hlt
inc
mov
imul
pop
push
add
push
mul
test
add
lahf
xchg
jne
xchg
mov
mov
jo
inc
out
test
repnz
call
pusha
stos
push
xor
mov
lods
adc
and
shr
push
loop
aad
aad
mov
jbe
idiv
mov
retf
add
loop
retf
out
je
and
jne
lahf
lds
cmp
and
cmp
outs
cmp
push
shl
adc
push
mov
aaa
push
movs
adc
sbb
xor
sbb
or
sbb
aaa
xor
cmp
jl
jo
and
(bad)
lds
outs
(bad)
popa
inc
jns
dec
add
push
sub
test
in
mov
test
sbb
inc
(bad)
out
addr16
hlt
dec
mov
push
cmc
pop
pop
pop
push
adc
mov
mov
adc
inc
mov
adc
xchg
mov
and
jo
inc
mov
shl
mov
pusha
mov
std
mov
xor
loopne
inc
retf
and
xchg
scas
retf
(bad)
mov
xor
clc
mov
xchg
shl
rol
iret
pop
je
and
adc
neg
xor
add
and
add
es
and
daa
cmc
sbb
cmp
movs
sub
and
sbb
adc
adc
and
cmp
(bad)
jno
jbe
inc
nop
xor
inc
das
pop
(bad)
outs
inc
push
aam
and
push
je
inc
aas
pop
imul
dec
in
mov
test
in
cmovs
inc
addr16
hlt
je
jge
inc
jne
cmc
and
outs
push
test
cmc
gs
mov
shr
cmc
push
mov
inc
xor
mov
lea
mov
and
(bad)
cmps
mov
push
cli
mov
xor
int
aam
lods
adc
and
xchg
scas
retf
(bad)
out
stos
add
xor
fidivr
sahf
fs
xor
add
icebp
(bad)
fisub
out
je
and
adc
fcomp
xor
and
or
push
add
je
cmp
xor
adc
sub
dec
lock
cmp
and
cmp
pop
aad
xor
push
(bad)
jne
dec
les
nop
dec
movs
jp
inc
lds
aas
(bad)
jo
ja
dec
add
push
jbe
sbb
push
idiv
in
mov
test
pop
in
cvtdq2ps
and
mov
arpl
es
push
add
push
cmc
xchg
mov
adc
inc
mov
adc
scas
mov
and
jo
inc
jmp
xchg
and
and
cdq
xor
retf
inc
mov
lds
inc
inc
cld
push
cmc
add
xor
(bad)
mov
aam
xlat
xor
add
lods
(bad)
cmc
data16
out
je
and
adc
out
lds
and
sbb
aaa
add
or
xchg
jae
sbb
sbb
jg
mov
aaa
push
movs
adc
or
xor
cmp
or
xor
sub
adc
les
push
movs
dec
inc
js
push
das
pop
(bad)
dec
inc
ja
push
xor
push
jae
inc
aas
push
mul
push
in
mov
test
push
in
punpcklbw
push
addr16
hlt
jne
bound
pop
pop
inc
push
xchg
xchg
repnz
push
hlt
gs
test
add
mov
cmps
adc
inc
lahf
jne
xchg
mov
ss
jo
inc
xchg
movs
and
xchg
pusha
adc
int3
xor
not
retf
inc
mov
(bad)
xchg
scas
fadd
(bad)
mov
xor
loop
les
neg
add
mov
leave
data16
div
ret
cmc
jmp
xchg
xor
sub
jnp
xor
adc
cmp
push
shl
adc
mov
aaa
movs
cs
adc
and
sbb
push
mov
loopne
aad
xor
adc
adc
les
jb
push
das
pop
(bad)
addr16
fs
adc
push
sub
dec
aas
push
test
in
mov
test
pop
in
pcmpgtd
ja
pop
hlt
jo
push
xchg
jl
(bad)
cmc
pop
pop
push
add
push
mul
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
lods
movs
fldenv
xchg
nop
push
mov
scas
push
in
repz
not
into
and
mov
iret
push
aam
cmps
xor
sar
fs
xor
add
out
fsub
out
je
and
adc
cli
lahf
les
pop
shr
test
outs
and
or
adc
pop
mov
aaa
add
and
and
mov
loopne
aad
xor
pop
(bad)
push
nop
pop
movs
adc
inc
lds
push
(bad)
pop
inc
je
dec
or
push
arpl
inc
aas
and
addr16
in
mov
test
push
in
cmovs
pop
addr16
hlt
ins
mov
adc
gs
pop
push
test
test
push
hlt
mov
pop
cdq
xchg
adc
mov
inc
jmp
es
cmps
mov
push
lods
mov
xor
(bad)
xlat
test
mov
inc
test
mov
push
sar
int3
mov
enter
ret
(bad)
jmp
out
je
and
adc
(bad)
lahf
mov
pusha
rol
test
outs
sub
push
rcr
or
cmp
xor
xor
xor
adc
sbb
inc
mov
loopne
aad
xor
pop
(bad)
ins
push
les
jo
dec
inc
cmp
dec
das
xor
pusha
inc
arpl
dec
add
push
das
aad
aas
push
test
in
mov
test
dec
in
lsl
inc
addr16
hlt
imul
push
push
mov
mov
mov
gs
test
push
test
fwait
jne
xchg
lock
mov
jo
inc
mov
pushf
and
mov
xchg
push
xchg
mov
xor
xchg
xlat
hlt
inc
mov
(bad)
les
out
push
mov
aad
push
clc
mov
leave
xlat
xor
add
repz
out
je
and
adc
int
(bad)
xchg
or
das
test
shl
test
outs
sub
xor
adc
xchg
inc
jg
mov
aaa
or
and
cmp
cs
xor
xor
adc
jl
jne
inc
nop
jae
or
lds
das
pop
(bad)
pop
inc
and
dec
add
push
jns
add
pop
div
mov
test
in
cmovbe
inc
addr16
hlt
pop
mov
jle
pop
pop
outs
push
mov
push
hlt
gs
test
push
mov
inc
std
jne
xchg
in
adc
movs
mov
and
jo
inc
stos
movs
(bad)
mov
pusha
xchg
push
xchg
mov
xor
in
in
inc
in
adc
and
ret
inc
jecxz
stc
push
aam
cld
xor
sar
shl
lds
fisttp
fbstp
out
out
mov
lahf
les
and
and
sub
add
inc
pop
xor
cmc
inc
adc
ds
aaa
xor
lds
and
sbb
adc
pop
aad
xor
dec
(bad)
dec
push
inc
les
sub
lds
dec
mov
inc
aam
or
push
xor
inc
aas
push
not
in
mov
test
adc
pusha
sysret
out
addr16
dec
mov
pop
cmc
pop
pop
jbe
test
push
lods
gs
test
push
scas
xchg
jne
xchg
mov
xor
inc
jmp
movs
cmps
xchg
xor
pusha
mov
in
mov
repnz
test
mov
into
scas
jmp
push
aad
std
xor
(bad)
mov
into
xlat
xor
add
std
(bad)
loop
repnz
je
and
adc
fcomp
add
add
jnp
cmp
rcl
pop
adc
adc
cmp
xor
xor
movs
es
sub
and
dec
aad
xor
push
(bad)
jbe
push
les
ins
movs
jl
jb
or
pop
(bad)
arpl
aam
adc
push
das
aad
aas
push
test
in
mov
test
add
arpl
hlt
push
mov
inc
cmc
inc
pop
push
push
adc
gs
test
push
mov
inc
jecxz
mov
jmp
lods
mov
and
jo
inc
mov
xchg
and
xchg
cmps
ret
pusha
xchg
push
mov
fild
inc
jecxz
iret
and
imul
aam
leave
add
push
ret
jbe
not
xor
lds
(bad)
out
je
and
adc
ficomp
sub
add
sub
or
sub
sbb
ins
mov
aaa
dec
movs
inc
lock
movs
add
daa
das
mov
loopne
aad
xor
cs
jl
les
movs
pop
inc
inc
lds
das
aas
(bad)
jb
cmp
xor
sub
jge
dec
test
in
mov
test
push
fs
inc
addr16
hlt
pop
mov
pop
cmc
pop
pop
push
push
mov
mul
test
push
add
scas
adc
lahf
mov
and
jo
inc
test
iret
call
pusha
lahf
push
xchg
mov
xor
in
ret
inc
rcl
and
mov
stc
push
retf
add
push
lock
shl
lds
fisttp
fbstp
(bad)
adc
cmc
lahf
out
add
cmp
shl
add
xchg
pop
add
cmc
sbb
imul
lock
outs
and
cmps
xor
sbb
xor
adc
push
nop
ins
movs
pop
inc
jno
adc
dec
(bad)
jp
jg
dec
xor
push
arpl
inc
aas
neg
push
in
mov
test
popa
in
sysret
out
addr16
hlt
push
mov
or
inc
pop
push
add
push
mov
lods
test
add
scas
xchg
(bad)
xchg
call
ss
mov
and
jo
inc
popf
movs
scas
and
mov
pusha
mov
xor
push
hlt
xlat
mov
jmp
inc
fld
out
retf
xor
in
mov
into
xlat
xor
add
loop
retf
out
je
and
jne
lahf
retf
xchg
cmp
aaa
test
rcl
in
add
jg
aaa
pop
adc
or
adc
xchg
add
mov
aaa
adc
inc
lock
outs
and
and
or
pop
aad
xor
and
les
inc
popa
lds
pop
(bad)
js
pop
aam
adc
push
jbe
jle
push
not
in
mov
test
inc
in
unpcklps
inc
addr16
hlt
push
mov
inc
cmc
jae
outs
push
adc
pop
lea
xchg
xchg
jne
xchg
mov
movs
mov
and
jo
inc
mov
(bad)
and
push
mov
into
xor
retf
inc
jecxz
retf
and
xchg
scas
jecxz
sti
(bad)
cld
push
aad
sti
xor
(bad)
mov
icebp
shl
fadd
int3
(bad)
sahf
data16
fnsave
call
fstp
cmp
ins
rol
in
add
cmp
and
cmp
adc
adc
cmp
sbb
outs
and
xor
xor
push
mov
loopne
aad
xor
add
jl
je
inc
nop
sub
inc
das
daa
(bad)
ja
data16
add
push
dec
aad
aas
push
neg
dec
in
mov
test
in
unpckhps
inc
addr16
push
mov
adc
pop
pop
pop
push
lods
xchg
test
gs
test
add
cdq
xchg
test
lods
movs
mov
and
jo
inc
call
iret
call
pusha
cmps
push
call
push
in
icebp
inc
out
into
and
mov
stc
push
into
add
xor
cwde
mov
jmp
int
stos
in
gs
(bad)
into
shl
shl
xchg
fstp
xor
cmp
or
push
add
jbe
or
cmp
inc
adc
ds
aaa
and
and
add
xor
pop
aad
xor
adc
imul
movs
inc
inc
pop
lds
dec
(bad)
jae
data16
sbb
push
arpl
add
push
neg
dec
in
mov
test
add
xor
pop
out
addr16
hlt
jge
pop
xchg
pop
jne
cmc
push
pop
dec
push
test
test
mov
cmc
mov
mov
lds
mov
adc
xchg
mov
and
jo
inc
out
pushf
and
xchg
cmps
call
mov
xor
cmc
xlat
out
mov
lds
inc
inc
out
mov
icebp
xor
mov
ret
xlat
xor
ror
shl
test
ret
lahf
out
xchg
daa
pop
pop
test
rcr
in
add
cmp
or
add
xchg
and
mov
aaa
pop
movs
adc
push
lds
pop
cmps
sbb
loopne
aad
xor
push
(bad)
ins
push
(bad)
les
cmp
dec
das
inc
(bad)
push
inc
addr16
and
pop
push
pop
aad
aas
push
test
in
mov
test
jb
pop
cmovb
outs
addr16
push
mov
jno
pop
pop
outs
push
(bad)
xchg
mov
push
mov
retf
add
cmps
xchg
jne
xchg
out
adc
(bad)
mov
and
jo
inc
mov
aam
mov
xchg
mov
xor
loope
loop
int
enter
fild
scas
mov
push
test
loope
ret
jbe
not
fs
mov
fsub
xor
mov
lahf
(bad)
xchg
aas
pop
sub
in
add
and
adc
sbb
aaa
adc
cmp
movs
cs
sbb
cmp
pop
loopne
aad
xor
ss
jne
dec
les
jno
dec
inc
imul
pop
inc
pop
aam
xor
push
and
arpl
jle
dec
ja
in
mov
test
dec
in
punpcklbw
and
hlt
push
mov
pmaddwd
pop
jbe
lods
xchg
mov
in
push
mul
test
push
call
jne
xchg
mov
mov
jo
inc
lods
movs
fbld
xchg
cmps
les
mov
xor
hlt
xlat
hlt
inc
lods
adc
and
mov
stc
push
leave
add
push
hlt
mov
lahf
xlat
xor
add
fisttp
out
je
and
adc
hlt
lahf
clc
xchg
add
adc
in
add
and
push
rcl
add
mov
aaa
or
and
cmp
mov
loopne
aad
xor
push
(bad)
outs
push
jbe
and
jno
pop
das
inc
(bad)
jnp
jg
push
add
dec
aad
aas
pop
mul
jl
push
mov
test
jnp
jbe
inc
out
addr16
hlt
inc
mov
push
cmc
jnp
push
add
push
in
gs
push
ret
xchg
jne
xchg
out
adc
mov
mov
and
xchg
cmps
mov
xchg
pusha
rcl
int3
xor
loop
hlt
inc
mov
lds
inc
inc
out
out
add
xor
repz
nop
mov
enter
retf
(bad)
out
je
and
adc
fcomp
xor
add
jg
add
addr16
aaa
rcr
sbb
and
xor
or
and
and
or
pop
aad
xor
or
push
push
popa
les
pusha
movs
dec
inc
lds
pop
mov
aam
add
push
das
aad
aas
dec
test
in
mov
test
sbb
out
addr16
hlt
imul
or
mov
push
mov
mov
out
fwait
push
mov
inc
loop
fcom
jmp
repz
and
jo
inc
hlt
movs
mov
es
pusha
mov
xchg
mov
xor
cmc
xlat
(bad)
inc
mov
(bad)
hlt
scas
mov
push
leave
add
push
ret
jbe
mul
fs
xor
add
fisttp
les
call
cmc
lahf
(bad)
xchg
and
daa
test
shl
in
add
sbb
ja
cmp
add
add
movs
sub
and
inc
cmps
and
add
aad
xor
adc
dec
push
imul
or
lds
dec
(bad)
ja
data16
add
push
dec
aad
aas
push
sub
in
mov
test
inc
in
andnps
push
addr16
hlt
push
mov
or
push
mov
push
sti
gs
test
push
mov
mov
jne
xchg
mov
movs
mov
and
jo
inc
lock
mov
es
cmps
xor
mov
xor
in
iret
inc
lods
adc
and
ret
inc
ret
push
repnz
push
fdivr
(bad)
xor
cli
fisttp
cmc
je
and
adc
hlt
lahf
enter
xor
and
sbb
push
add
sbb
and
adc
daa
adc
push
mov
aaa
shld
push
lds
and
inc
cmps
adc
xor
aad
xor
adc
les
nop
movs
adc
cmp
or
jle
jnp
jg
inc
xor
jbe
js
push
test
in
mov
test
pop
in
(bad)
out
addr16
hlt
ins
mov
inc
cmc
inc
pop
jns
fist
mov
mov
call
inc
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
mov
pushf
and
xchg
cmps
cwde
xor
pusha
fst
mov
xor
rcl
inc
std
adc
and
xchg
scas
hlt
inc
rol
out
retf
add
push
fdivr
into
fs
xor
add
loope
leave
iretw
out
je
and
adc
out
xchg
xchg
or
daa
test
sub
test
outs
arpl
adc
adc
xor
ss
sub
and
addr16
pop
mov
loopne
aad
xor
inc
(bad)
jbe
inc
les
jo
dec
inc
popa
lds
pop
(bad)
ja
fs
sub
push
push
aad
aas
jns
inc
ja
in
mov
test
push
in
lsl
push
addr16
arpl
inc
cmc
jp
inc
push
adc
mov
mov
movs
xchg
jne
xchg
call
test
movs
inc
out
movs
xchg
and
mov
xchg
xor
pusha
cmps
push
xchg
mov
xor
(bad)
xlat
test
in
std
scas
mov
push
leave
add
push
fdivr
aam
ret
add
out
iret
mov
je
and
adc
ficomp
sub
rol
in
add
and
adc
adc
and
outs
xchg
add
aaa
push
movs
cs
lds
movs
push
dec
or
sub
add
and
adc
les
nop
inc
movs
dec
inc
cmp
dec
das
jns
ja
gs
add
push
(bad)
aad
aas
push
not
dec
in
mov
test
arpl
sub
adc
hlt
push
mov
adc
pop
pop
adc
movs
xchg
test
gs
test
push
mov
inc
loope
test
jmp
and
jo
inc
out
movs
fbld
xchg
mov
xor
(bad)
xlat
inc
shl
retf
inc
aad
(bad)
push
aam
xlat
xor
sar
nop
fs
xor
add
fisttp
cmc
je
and
adc
repnz
les
jnp
and
push
add
sbb
xadd
inc
adc
adc
add
or
and
and
adc
pop
aad
xor
push
(bad)
ja
je
and
cmp
pop
das
pop
mov
aam
cmp
push
ins
aad
aas
inc
neg
push
in
mov
test
pop
in
sysret
out
addr16
hlt
pop
mov
or
push
test
mov
gs
test
add
ret
adc
inc
mov
adc
jmp
jo
inc
lods
movs
xchg
and
and
push
stos
mov
xor
in
repnz
mov
(bad)
xchg
scas
hlt
inc
out
out
retf
xor
xchg
jmp
add
loop
cwde
shl
je
and
jne
lahf
(bad)
xchg
pop
pop
aaa
test
pop
in
add
add
xadd
cmc
sbb
jg
mov
aaa
sub
and
and
daa
and
sub
adc
dec
aad
xor
push
(bad)
jno
inc
les
nop
dec
movs
jo
jb
dec
das
pop
(bad)
arpl
aam
add
push
jp
inc
aas
pop
not
in
mov
test
jns
pop
nop
addr16
hlt
push
mov
adc
jae
dec
push
adc
gs
test
push
cwde
xchg
jne
xchg
mov
mov
xchg
inc
xchg
movs
fisub
xchg
cmps
xchg
pusha
mov
xor
loop
test
and
xchg
scas
mov
push
leave
add
push
fistp
xchg
fs
xor
add
loop
leave
data16
(bad)
je
and
jne
lahf
clc
xchg
and
jne
shl
in
add
xchg
pop
es
add
sbb
sbb
pop
mov
aaa
or
and
cmp
cmp
cmp
xor
and
jl
jne
jae
inc
movs
dec
inc
cmp
arpl
pop
(bad)
ja
pop
aam
add
jl
inc
aas
push
dec
ja
in
mov
test
in
unpckhps
push
addr16
push
mov
pop
cmc
bound
outs
push
xchg
xchg
mov
push
mov
add
mov
movs
adc
inc
out
cmps
xchg
mov
movs
mov
and
jo
inc
lods
movs
fisub
mov
cdq
xor
pusha
mov
xor
in
ret
adc
and
ret
inc
clc
(bad)
loop
enter
(bad)
push
cld
mov
xchg
fs
xor
add
test
(bad)
adc
ficomp
xor
ins
shr
in
add
xor
xchg
xor
pop
cmc
sbb
imul
lock
xor
daa
cmps
xor
add
pop
loopne
aad
xor
adc
les
nop
ins
movs
jne
jae
adc
push
mov
aam
xor
push
ins
aad
aas
pop
not
push
in
mov
test
jb
xor
pop
out
addr16
hlt
jo
push
xchg
cmp
cmc
pop
pop
outs
push
test
in
add
push
cmc
mov
push
mov
movs
adc
inc
mov
adc
mov
xchg
and
jo
inc
hlt
movs
shl
xchg
xchg
push
cli
mov
xor
xchg
xlat
test
out
nop
scas
std
inc
clc
(bad)
fst
mov
push
cwde
mov
in
xlat
xor
add
lods
vpcmov
je
and
adc
les
das
test
rcr
in
add
and
or
xor
add
jg
mov
aaa
push
movs
sub
sbb
xor
pop
movs
jno
and
or
inc
aad
xor
cmp
ins
push
popa
les
inc
movs
dec
inc
lds
(bad)
gs
popa
aam
or
push
cs
aas
push
div
mov
test
push
in
(bad)
out
addr16
hlt
imul
pushw
mov
push
xchg
gs
test
push
test
cmps
jne
xchg
mov
mov
mov
out
fsub
mov
xchg
mov
xor
loopne
out
inc
mov
(bad)
xchg
scas
sti
inc
popf
(bad)
icebp
push
iret
add
push
cmp
fs
xor
add
out
xchg
out
je
and
adc
ficomp
xor
aaa
rcr
in
add
js
add
es
jbe
aas
cmc
sbb
jg
mov
aaa
adc
and
and
adc
inc
aad
xor
adc
jo
ja
inc
nop
push
movs
dec
inc
cmp
adc
pop
mov
and
imul
aad
aas
pop
test
in
mov
test
pop
in
movd
inc
addr16
hlt
push
mov
or
push
lods
xchg
xchg
add
push
mul
test
push
mov
inc
call
(bad)
jmp
and
jo
inc
mov
cdq
es
cmps
movs
xor
pusha
xchg
push
lea
mov
(bad)
xlat
out
inc
repz
and
(bad)
scas
fiadd
(bad)
rcl
lds
fidivr
jmp
in
xor
add
jecxz
(bad)
data16
fbstp
les
fcomp
sub
add
and
adc
adc
cmp
movs
or
and
movs
es
and
xor
pop
aad
xor
adc
pop
push
jbe
and
jl
pop
das
push
mov
es
and
push
push
arpl
inc
aas
pop
imul
in
mov
test
pop
in
sysret
out
addr16
dec
mov
push
cmp
ins
push
test
test
mov
test
push
call
jne
xchg
in
adc
lea
mov
out
pushf
and
xchg
cmps
sahf
xor
pusha
mov
xor
hlt
xlat
mov
loop
shl
retf
scas
out
inc
rol
push
int
mov
push
les
sahf
fs
rol
pop
mul
ret
je
and
adc
les
sub
add
and
or
adc
xchg
add
mov
aaa
or
and
sub
and
add
cmp
aaa
mov
pop
push
(bad)
jl
jbe
jnp
jo
or
lds
push
(bad)
pop
inc
addr16
sbb
push
das
aad
aas
jge
inc
ja
in
mov
test
inc
in
sysret
out
addr16
push
mov
inc
cmc
push
pop
dec
push
adc
gs
test
push
fld
xchg
jne
xchg
in
adc
cmps
mov
and
jo
inc
stos
movs
xchg
and
cdq
cmps
shl
xchg
push
test
popf
push
lock
hlt
inc
cmc
adc
and
out
scas
mov
push
leave
add
xor
(bad)
mov
mov
lds
in
retf
out
je
and
jne
lahf
(bad)
xchg
and
je
ins
rcr
in
add
jne
add
cmp
adc
or
sbb
push
lds
and
push
cmps
sbb
pop
mov
loopne
aad
xor
ds
jl
aaa
les
jae
outs
inc
inc
lds
das
push
(bad)
ja
fs
adc
arpl
push
aas
push
test
in
mov
test
in
pcmpeqd
es
hlt
addr16
ss
cmc
inc
pop
dec
push
lods
xchg
stos
add
push
cli
gs
inc
mov
inc
mov
adc
mov
jo
inc
stos
movs
cwde
and
mov
xchg
pusha
retf
mov
xor
call
adc
and
retf
inc
out
(bad)
cld
push
repnz
push
(bad)
mov
out
fs
xor
add
test
(bad)
adc
ficomp
xor
cmp
adc
push
add
jle
xor
adc
adc
cmp
sub
sub
cmp
or
adc
and
sub
add
les
nop
movs
jne
inc
lds
das
pop
mov
aam
cmp
arpl
fs
jp
pop
ja
in
mov
test
push
in
nop
pop
addr16
dec
mov
inc
cmc
pop
pop
dec
push
test
mov
xchg
push
cmc
mov
lea
into
xchg
ficom
cwde
ss
mov
and
jo
inc
out
mov
mov
scas
xor
pusha
stos
push
loopne
stos
xor
xchg
xlat
test
mov
xchg
scas
mov
push
int
mov
push
(bad)
mov
xchg
xor
add
fisttp
ret
je
and
adc
fcomp
or
in
add
jg
aaa
pop
and
adc
imul
or
and
or
dec
aad
xor
push
(bad)
push
nop
pusha
movs
dec
inc
imul
inc
inc
inc
aam
add
push
outs
aad
aas
push
idiv
outs
in
mov
test
push
out
addr16
push
mov
push
cmc
push
pop
outs
push
test
push
movs
gs
out
mov
adc
inc
jecxz
adc
and
iret
and
cmps
mov
push
push
mov
inc
mov
lds
inc
std
(bad)
aam
mov
jmp
stc
aad
push
ret
jbe
not
fs
retf
add
out
jecxz
mov
and
adc
fstp
or
add
and
adc
adc
pop
adc
cmp
movs
cs
movs
add
cmps
sbb
pop
mov
loopne
aad
xor
adc
or
nop
movs
dec
inc
and
imul
cmp
push
add
push
(bad)
aad
aas
jp
pop
ja
in
mov
test
unpcklps
das
addr16
push
mov
dec
cmc
pop
pop
dec
push
mov
push
mul
test
push
add
jne
xchg
mov
movs
mov
and
jo
inc
lods
movs
mov
es
cmps
cdq
xor
pusha
nop
push
clc
mov
xor
out
xlat
test
cld
inc
out
scas
fiadd
(bad)
scas
push
mov
aad
vpsllw
mov
cmc
fs
xor
add
leave
(bad)
out
je
and
adc
neg
or
add
daa
xchg
pop
xchg
xor
adc
adc
sub
and
and
adc
inc
aad
xor
push
(bad)
push
nop
movs
adc
lds
pop
(bad)
push
inc
jno
dec
or
push
(bad)
aad
aas
push
div
ja
in
mov
test
push
in
mulps
push
addr16
hlt
push
mov
or
and
xchg
test
cmc
mov
push
add
jne
xchg
hlt
adc
xchg
mov
and
jo
inc
mov
mov
out
sahf
xor
pusha
mov
mov
fist
cmps
adc
and
xchg
scas
stc
inc
inc
cmps
push
ret
xor
int
out
jbe
neg
mov
retf
add
ror
(bad)
je
and
adc
fistp
adc
add
xchg
pop
cmp
adc
push
mov
aaa
and
and
xor
mov
loopne
aad
xor
push
(bad)
push
outs
les
jno
adc
lds
das
jle
arpl
aam
adc
push
push
aad
aas
push
not
adc
jo
jbe
pop
gs
inc
lsl
push
outs
hlt
push
mov
add
pop
pop
outs
push
test
mul
test
xchg
xchg
test
cmps
xor
inc
xchg
and
cmps
xor
mov
test
scas
push
loopne
in
jecxz
retf
and
xchg
scas
cmps
inc
test
shl
mov
iret
fs
retf
add
int3
(bad)
iret
shl
je
and
adc
call
jne
shl
adc
or
xor
sbb
xor
jg
mov
aaa
adc
sub
and
sub
mov
loopne
aad
xor
xor
ins
push
jb
aas
nop
popa
movs
dec
inc
cmp
push
inc
pusha
aam
add
push
arpl
inc
aas
push
not
dec
in
mov
test
in
unpckhps
ja
ja
dec
mov
dec
cmc
and
inc
push
mov
push
mul
test
push
xchg
xchg
cdq
xchg
scas
adc
cmps
mov
and
jo
inc
test
fisub
lods
cmps
pushf
xor
pusha
mov
cli
mov
xor
in
mov
out
into
and
mov
stc
push
out
(bad)
xor
sar
nop
fs
xor
add
fisttp
les
cdq
adc
movs
lahf
int
add
xor
add
and
jno
pop
cmc
push
adc
aas
mov
aaa
sub
and
das
cmps
xor
adc
aad
xor
adc
les
nop
pop
movs
adc
jno
popa
das
(bad)
(bad)
jae
dec
aam
or
push
pop
aad
aas
push
div
inc
in
mov
test
popa
in
lsl
push
addr16
hlt
push
mov
jl
and
push
add
push
sti
gs
mov
int3
out
mov
adc
inc
loopne
adc
test
movs
pushf
and
xchg
cmps
xchg
mov
xor
not
mov
jmp
inc
cld
(bad)
mov
xor
ret
jbe
test
add
lods
(bad)
out
je
and
adc
aam
call
or
add
and
xchg
push
rcr
ds
or
pop
lock
xor
sbb
pop
daa
adc
xor
sbb
ins
push
popa
les
inc
movs
dec
inc
cmp
dec
das
dec
(bad)
arpl
aam
adc
push
(bad)
aad
aas
push
imul
adc
ins
mov
test
gs
in
cmovo
push
addr16
hlt
dec
mov
ja
push
pop
ins
push
mov
push
mov
add
les
mov
adc
mov
aad
mov
xchg
and
mov
iret
xor
pusha
mov
xor
loopne
hlt
inc
mov
(bad)
nop
scas
fadd
(bad)
icebp
push
in
add
xor
clc
mov
xchg
shl
retf
in
fisttp
clc
je
and
adc
fstp
add
in
add
xchg
rcr
add
aaa
adc
adc
and
sbb
pop
loopne
aad
xor
adc
arpl
les
nop
imul
jns
pop
aam
add
push
jb
inc
aas
push
imul
ja
in
mov
test
in
cmove
inc
addr16
hlt
imul
cmc
pop
pop
outs
push
mov
push
mov
mov
out
mov
scas
xchg
jne
xchg
mov
mov
mov
and
jo
inc
scas
movs
call
cmps
test
pusha
retf
mov
xor
in
jmp
and
mov
stc
push
retf
xor
(bad)
mov
leave
div
sti
add
jecxz
retf
out
je
and
adc
hlt
lahf
lea
shl
in
add
and
push
ror
sbb
sub
inc
lock
and
sub
and
inc
aad
xor
push
(bad)
fs
outs
les
nop
sub
jge
pop
(bad)
pop
inc
jg
dec
and
addr16
arpl
arpl
dec
mul
in
mov
test
inc
out
addr16
hlt
popa
mov
jge
pop
pop
push
add
push
mul
test
push
movs
xchg
mov
call
and
jo
inc
out
sahf
and
xchg
cmps
mov
pusha
xchg
push
xor
hlt
inc
cmps
adc
and
xchg
scas
mov
push
int
mov
push
fdivr
in
xlat
xor
add
loop
retf
out
je
and
adc
fistp
aaa
test
sar
push
add
and
or
adc
add
push
movs
sbb
xor
xor
sub
push
loopne
aad
xor
dec
(bad)
imul
sub
jb
outs
inc
pop
lds
das
xor
aam
adc
push
xor
inc
aas
test
in
mov
test
arpl
jge
dec
out
addr16
push
mov
jle
bound
outs
push
movs
xchg
scas
add
push
lods
gs
out
mov
test
mov
adc
lea
mov
xchg
movs
mov
and
xor
cmps
adc
and
aam
mov
push
out
mov
push
ret
jbe
not
shl
ret
add
loop
sahf
data16
clc
je
and
adc
out
lds
ins
rol
in
add
and
cmp
es
or
cmp
sbb
cmp
movs
cmp
and
cmp
pop
daa
das
mov
loopne
aad
xor
dec
(bad)
push
push
dec
les
nop
je
push
inc
lds
pop
(bad)
push
inc
pop
aam
add
push
ins
aad
aas
jbe
dec
ja
in
mov
test
in
unpckhps
push
addr16
hlt
push
mov
pop
cmc
pop
pop
jb
movs
xchg
test
gs
test
add
nop
xchg
jne
xchg
mov
movs
mov
and
jo
inc
stos
movs
mov
xchg
cmps
cdq
xor
pusha
cdq
push
cli
mov
xor
retf
xlat
mov
not
leave
and
mov
stc
push
retf
add
xor
fidivr
leave
shl
sti
add
jecxz
fsub
out
je
and
adc
loop
retf
xchg
push
pop
jae
sbb
and
push
add
and
inc
pop
cmp
adc
ds
aaa
push
movs
xor
sbb
aaa
and
cmp
sbb
pop
mov
loopne
aad
xor
or
les
jae
push
das
jp
jae
jle
jle
jo
dec
push
push
aad
aas
push
not
push
in
mov
test
pop
in
nop
and
jp
dec
mov
inc
cmc
pop
pop
outs
push
aam
scas
add
push
mov
add
cmps
xchg
adc
xchg
and
jo
inc
hlt
movs
mov
(bad)
iret
call
pusha
stos
push
mov
fistp
inc
mov
lds
inc
rol
out
fadd
mov
push
iret
mov
retf
xor
add
enter
(bad)
(bad)
je
and
adc
lock
mov
pusha
rcr
in
add
sub
or
add
sbb
jg
mov
aaa
pop
movs
and
sub
xor
adc
sbb
loopne
aad
xor
ss
push
nop
sub
lds
cmp
aam
and
pop
push
xor
add
push
test
in
mov
test
push
in
punpcklbw
push
addr16
hlt
inc
mov
inc
cmc
inc
pop
dec
push
adc
xchg
xchg
add
jmp
mov
and
jo
inc
movs
movs
and
xchg
pusha
xchg
push
fwait
mov
xor
loopne
hlt
inc
lods
adc
and
aad
mov
push
leave
add
xor
fdivr
xchg
fs
xor
add
mov
retf
out
je
and
adc
out
(bad)
xchg
add
cmp
ins
rcl
in
add
cmp
xadd
sbb
cmp
movs
add
adc
movs
sbb
daa
xor
xor
dec
(bad)
jl
dec
les
movs
push
inc
jno
adc
push
mov
fs
and
sbb
aad
aas
push
test
in
mov
test
pop
in
andps
inc
addr16
hlt
pop
mov
or
jne
outs
push
mov
push
in
gs
out
jecxz
mov
inc
movs
jne
xchg
xchg
adc
mov
jo
inc
xchg
movs
fbld
pushf
cmps
cdq
xor
pusha
mov
mov
xor
xlat
out
inc
lods
adc
and
ret
scas
mov
push
aam
cmps
xor
sar
xor
add
fisttp
fidiv
les
(bad)
lahf
enter
xor
and
adc
test
adc
xchg
and
adc
ds
aaa
push
movs
dec
lock
sbb
dec
cmp
and
loopne
aad
xor
cmp
jl
jbe
jle
ins
movs
or
lds
das
inc
(bad)
jg
jg
inc
or
push
ja
sbb
push
test
in
mov
test
pop
in
mulps
pop
addr16
hlt
ins
mov
inc
cmc
jns
jb
test
xchg
add
push
mov
add
test
mov
adc
lods
mov
and
jo
inc
out
shl
sahf
cmps
mov
xchg
pusha
fwait
push
mov
fistp
inc
mov
lds
inc
fld
out
fadd
stos
xor
loope
icebp
jbe
test
add
retf
data16
and
adc
loop
lds
sbb
sbb
add
outs
sub
adc
popa
cmc
sbb
jg
mov
aaa
add
and
and
adc
inc
aad
xor
cmp
ins
push
inc
les
jb
dec
inc
jnp
inc
das
pop
(bad)
outs
inc
addr16
and
dec
push
inc
aad
aas
dec
test
in
mov
test
in
lsl
inc
addr16
hlt
push
mov
inc
cmc
and
pushw
adc
mov
mov
adc
inc
mov
xchg
in
adc
lea
mov
scas
movs
mov
es
cmps
test
pusha
xchg
push
loopne
pushf
xor
in
xlat
mov
call
ret
and
cmc
scas
mov
push
leave
add
push
(bad)
mov
xlat
shl
add
out
leave
data16
out
je
and
adc
fstp
sub
pop
rcr
in
add
cmp
sub
adc
xchg
push
jg
mov
aaa
adc
and
sub
movs
and
cmps
push
daa
cmp
xor
or
jl
imul
dec
inc
cmp
ins
das
ds
jle
fs
add
push
ins
aad
aas
inc
test
in
mov
test
pop
in
packuswb
jo
jl
inc
mov
inc
cmc
gs
outs
push
stos
xchg
icebp
add
push
mul
test
push
mov
mov
mov
mov
adc
mov
fisub
jo
inc
mov
mov
xchg
cmps
call
mov
xor
in
lock
clc
adc
and
ret
inc
repz
stc
push
retf
xor
fdivr
leave
shl
jecxz
stos
in
gs
leave
data16
and
fcomp
xor
ins
shr
in
add
push
xchg
xchg
or
adc
push
mov
aaa
and
lds
adc
xor
sbb
aad
xor
aas
(bad)
push
nop
ins
movs
pop
inc
pop
lds
das
pop
(bad)
je
outs
aam
and
aas
push
not
push
in
mov
test
gs
in
nop
push
addr16
hlt
adc
jae
ss
cmc
dec
pop
jg
test
scas
add
push
cli
rol
mov
scas
xchg
mov
jmp
and
jo
inc
out
fsub
xchg
cmps
sahf
xor
pusha
test
mov
xor
repz
out
inc
in
adc
and
mov
cld
push
into
add
push
into
mov
iret
fs
xor
add
icebp
(bad)
xchg
mul
popf
je
and
adc
cmc
lahf
lds
or
add
and
or
data16
or
push
mov
aaa
or
lds
and
and
mov
loopne
aad
xor
inc
(bad)
inc
push
popa
les
nop
ja
inc
pop
lds
(bad)
(bad)
push
inc
pusha
aam
add
push
jo
pop
aas
sub
jl
push
in
mov
test
gs
in
unpcklps
inc
addr16
hlt
push
mov
inc
cmc
pop
pop
imul
mov
test
add
mov
inc
mov
adc
mov
fisub
jo
inc
mov
iret
lods
test
movs
push
mov
fistp
inc
aad
retf
and
loope
mov
push
out
add
push
ret
jbe
imul
fs
retf
add
out
into
data16
les
xchg
loope
call
test
add
or
jb
daa
cmc
sbb
cmp
movs
xor
and
add
sub
xor
adc
jle
ja
cmp
cmp
pop
das
inc
(bad)
jg
js
inc
add
push
popa
aad
aas
inc
test
in
mov
test
jb
pop
unpckhps
inc
addr16
hlt
dec
mov
or
jp
outs
push
lods
xchg
mov
test
push
cdq
xchg
test
xchg
movs
mov
and
jo
inc
call
es
cmps
mov
fsub
push
in
xor
lods
adc
and
in
sti
inc
repnz
stc
push
enter
(bad)
push
sar
shl
lds
lds
fbstp
popf
adc
rcr
jno
jnp
adc
test
or
or
adc
ds
aaa
add
and
sub
pop
loopne
aad
xor
adc
les
nop
ja
jbe
lds
dec
(bad)
push
inc
jg
inc
add
push
popa
aad
aas
dec
imul
jb
pop
mov
test
push
in
punpckhwd
push
addr16
hlt
dec
mov
inc
cmc
pop
pop
dec
push
test
stos
add
push
cmc
mov
test
fld
in
cdq
xchg
in
adc
xor
inc
mov
iret
mov
xchg
cmps
xor
xchg
push
xor
test
mov
inc
add
push
inc
mov
push
(bad)
mov
repnz
xor
add
fimul
shl
adc
fcomp
sub
add
sub
or
cmp
add
cmp
cmp
sbb
outs
and
cmp
xor
pop
mov
loopne
aad
xor
add
ins
push
jo
sub
jo
dec
inc
inc
lds
cmp
inc
inc
arpl
push
add
push
jl
inc
aas
imul
ja
in
mov
test
pop
in
lsl
jo
addr16
push
mov
inc
cmc
push
pop
outs
push
adc
mov
mov
adc
inc
mov
adc
mov
add
shl
cmps
lahf
xor
pusha
xchg
push
xchg
mov
xor
retf
inc
mov
(bad)
sahf
scas
mov
push
leave
add
push
(bad)
mov
shl
retf
add
(bad)
pop
je
and
adc
lds
jbe
aaa
shl
in
add
and
adc
pop
cmc
add
or
sbb
push
lds
and
and
push
loopne
aad
xor
adc
inc
push
imul
cmovne
(bad)
jae
pusha
aam
sub
sbb
aad
aas
and
push
ja
in
mov
test
in
(bad)
out
addr16
hlt
push
mov
inc
cmc
inc
pop
outs
push
scas
xchg
xchg
add
push
cmps
gs
mov
push
rol
jne
xchg
mov
mov
nop
ss
jo
inc
mov
fbld
sahf
cmps
mov
mov
push
push
mov
xlat
jmp
(bad)
call
(bad)
out
retf
add
xor
xchg
mul
mov
ret
(bad)
hlt
data16
int3
je
and
adc
fcomp
xor
data16
push
add
or
jge
es
sbb
ds
aaa
adc
and
cmps
aaa
daa
add
push
loopne
aad
xor
adc
les
nop
jb
or
lds
push
(bad)
pusha
inc
jge
ja
inc
mov
push
arpl
inc
aas
dec
div
mov
test
push
in
sysret
out
addr16
hlt
inc
mov
adc
jnp
inc
push
cmps
xchg
add
mov
popf
out
scas
push
xchg
xchg
jne
xchg
in
adc
mov
mov
and
fwait
cmps
xchg
xor
pusha
mov
xor
(bad)
test
mov
loop
mov
push
fld
enter
test
jbe
test
add
loop
retf
out
je
and
adc
fcomp
jb
pusha
rcr
in
add
sbb
sbb
adc
ds
aaa
adc
pop
lock
lds
pop
movs
cs
pop
cmps
sbb
loopne
aad
xor
push
(bad)
pusha
push
outs
les
push
movs
dec
inc
lds
push
push
inc
addr16
sbb
push
sub
inc
aas
aaa
test
in
mov
test
dec
in
lsl
push
addr16
push
mov
inc
cmc
pop
pop
push
push
adc
lea
mov
cmps
xchg
jne
xchg
mov
ss
mov
and
jo
inc
scas
movs
mov
es
xchg
pusha
mov
xor
repnz
mov
mov
(bad)
cmc
scas
mov
push
leave
add
xor
(bad)
mov
(bad)
fs
xor
add
out
jmp
out
je
and
adc
int
(bad)
xchg
sub
sub
add
and
and
or
or
push
movs
cs
outs
and
pop
cmps
aaa
daa
cs
loopne
aad
xor
adc
popa
push
ja
ins
nop
sub
ja
dec
(bad)
je
dec
aam
add
push
jl
pop
aas
dec
not
dec
in
mov
test
gs
in
cvtdq2ps
outs
addr16
je
jge
cmp
cmc
pop
pop
jne
mov
mul
test
push
xchg
xchg
jne
xchg
loop
(bad)
mov
jo
inc
xchg
movs
fbld
xchg
cmps
xchg
pusha
xchg
push
sti
mov
xor
(bad)
xlat
rol
and
ret
inc
out
out
push
aam
mov
push
(bad)
mov
leave
fs
xor
add
mov
loope
int3
out
je
and
adc
(bad)
lahf
cli
xchg
ds
adc
add
daa
xchg
pop
daa
xchg
das
shl
adc
ds
aaa
and
and
sub
pavgb
mov
pop
or
jo
aas
les
nop
movs
dec
inc
imul
pusha
inc
addr16
add
push
arpl
inc
aas
mul
push
in
mov
test
push
in
cmovns
push
addr16
hlt
addr16
ss
cmc
addr16
push
add
push
cmc
gs
clc
add
mov
inc
xor
jmp
and
jo
inc
out
pushf
and
xchg
cmps
mov
push
call
push
(bad)
test
mov
out
scas
loope
inc
out
int
mov
push
pushf
mov
into
fs
xor
add
loop
iret
data16
ret
and
adc
fcomp
add
add
adc
aaa
pop
xor
adc
add
push
aaa
adc
sbb
and
movs
jne
and
or
dec
aad
xor
push
(bad)
bound
les
jae
jne
pusha
lds
pop
(bad)
push
inc
addr16
xor
push
dec
aad
aas
test
in
mov
test
ins
in
nop
gs
hlt
push
mov
inc
cmc
pop
pop
pop
push
aad
mov
loope
xchg
mov
mov
mov
pushf
adc
inc
pushf
jne
xchg
mov
mov
add
test
mov
xchg
push
xchg
mov
xor
out
xlat
icebp
inc
movs
adc
and
xchg
scas
jmp
sti
(bad)
icebp
push
rol
xor
out
mov
(bad)
fs
xor
add
mov
leave
data16
out
je
and
adc
ficomp
sub
daa
sar
in
add
and
adc
pop
cmc
sbb
das
mov
aaa
adc
add
adc
movs
or
daa
sbb
pop
loopne
aad
xor
ds
ins
push
jno
outs
nop
jae
dec
inc
lds
das
pop
mov
pop
mov
push
ins
aad
aas
jp
dec
ja
in
mov
test
in
lsl
cmp
hlt
push
mov
or
push
lods
xchg
test
gs
test
push
xchg
xchg
test
cmps
movs
mov
and
jo
inc
jmp
lods
cmps
cdq
xor
pusha
test
mov
xor
out
mov
and
mov
stc
push
leave
add
xor
cld
mov
xchg
fs
xor
add
fimul
fbstp
aam
push
icebp
jne
lahf
in
xchg
xor
sub
add
add
push
rcl
push
adc
push
mov
aaa
pop
movs
pop
lock
lds
and
and
es
aad
xor
adc
les
dec
movs
or
lds
push
mov
aam
or
push
arpl
inc
aas
jbe
push
ja
in
mov
test
add
inc
cmovns
pop
addr16
hlt
dec
mov
dec
cmc
pop
pop
outs
push
mov
scas
add
push
mov
add
popf
xchg
jne
xchg
in
adc
mov
mov
mov
pushf
movs
cmps
sahf
xor
pusha
fst
mov
xor
hlt
xlat
repz
loop
jecxz
(bad)
(bad)
mov
out
iret
add
xor
sar
shl
enter
cdq
gs
int
clc
out
je
and
adc
movs
lahf
lds
sbb
add
and
add
push
cmc
sbb
jg
mov
aaa
pop
movs
adc
push
lds
and
adc
mov
loopne
aad
xor
adc
les
outs
movs
jl
jb
adc
inc
das
aam
add
push
cs
aas
push
test
in
mov
test
sbb
ins
cvtps2pd
push
addr16
inc
mov
jg
pop
pop
imul
xchg
mov
mov
test
add
xchg
xchg
jne
xchg
lahf
adc
mov
int
xchg
movs
pushf
and
and
mov
fbstp
inc
int
enter
mov
inc
in
(bad)
stc
push
leave
add
xor
fdivr
in
fs
xor
add
dec
les
rcl
lahf
aad
or
jne
cmp
ins
in
add
or
xor
adc
xchg
pop
jg
mov
aaa
add
aas
lock
movs
xor
cmps
sbb
sub
pop
loopne
aad
xor
or
ins
push
jb
jb
dec
movs
dec
inc
dec
lds
das
pop
(bad)
pop
inc
fs
and
inc
aas
pop
test
in
mov
test
gs
outs
unpckhps
inc
addr16
hlt
or
jo
pop
pop
pop
push
lods
xchg
cmps
add
push
cmc
gs
mov
shr
out
mov
mov
jne
xchg
mov
div
mov
mov
(bad)
es
cmps
test
pusha
retf
mov
xor
not
loopne
cli
adc
and
lahf
scas
mov
push
int3
add
push
(bad)
mov
leave
fs
xor
add
fisttp
shl
adc
fstp
xor
and
xor
push
add
and
or
adc
add
movs
adc
or
xor
pop
movs
adc
cmps
xor
sbb
xor
adc
push
nop
pop
movs
adc
jle
adc
push
(bad)
jae
and
dec
add
push
dec
aad
aas
push
idiv
in
mov
test
pop
in
nop
ja
inc
hlt
inc
mov
add
dec
pop
push
add
push
cmc
gs
test
push
mov
inc
mov
adc
mov
jo
inc
lock
test
es
sahf
xor
pusha
cwde
push
mov
fisttp
fcom
leave
and
xchg
scas
mov
push
enter
aad
loop
cmp
fs
xor
add
enter
iret
out
je
and
adc
fcomp
aaa
test
in
add
pop
xchg
pop
ds
pop
shl
adc
push
mov
aaa
xor
and
and
or
inc
aad
xor
adc
push
nop
jo
push
inc
jno
or
pop
(bad)
pop
inc
and
sub
das
aad
aas
outs
test
in
mov
test
inc
in
pcmpgtw
push
addr16
hlt
pop
mov
push
cmc
pop
pop
push
push
adc
lea
inc
into
xchg
adc
inc
mov
adc
icebp
mov
and
jo
inc
out
movs
xchg
and
test
adc
xchg
xor
aam
into
inc
mov
lds
inc
inc
iret
push
into
add
xor
clc
mov
in
std
xor
lds
cdq
je
and
adc
ret
xchg
and
jno
ins
shl
in
add
and
and
aas
cmc
push
adc
pop
mov
aaa
push
movs
and
adc
movs
sbb
daa
inc
mov
loopne
aad
xor
adc
push
push
imul
dec
inc
lds
data16
pop
inc
and
inc
sbb
push
arpl
arpl
push
test
in
mov
test
in
pcmpgtd
inc
addr16
hlt
or
jl
pop
pop
imul
loope
lods
gs
test
add
mov
inc
mov
adc
mov
shl
jo
inc
movs
movs
mov
es
cmps
cdq
xor
pusha
adc
fistp
inc
lods
adc
and
sahf
scas
mov
push
aam
ret
aad
push
sar
fs
xor
add
std
(bad)
out
je
and
jne
lahf
(bad)
xchg
xor
xor
and
adc
push
add
and
or
adc
ds
aaa
or
and
or
sub
sbb
mov
pop
dec
(bad)
ins
push
jb
sub
inc
jno
push
das
jbe
je
pop
aam
add
push
arpl
inc
aas
sub
pop
ja
in
mov
test
pusha
in
sysret
out
addr16
hlt
or
add
pop
pop
push
add
push
nop
gs
push
scas
xchg
adc
inc
mov
adc
mov
mov
mov
movs
sahf
and
jecxz
(bad)
xor
pusha
adc
retf
xor
(bad)
mov
lds
scas
mov
push
into
add
xor
lds
shl
add
fimul
ret
je
and
adc
fcomp
das
test
and
push
add
and
adc
push
or
jg
mov
aaa
push
movs
adc
sbb
je
pop
movs
es
pop
cmps
daa
daa
xor
aad
xor
cmp
outs
push
les
jae
push
inc
pop
lds
das
push
aam
add
push
dec
aad
aas
push
test
in
mov
test
pop
in
cmovp
inc
addr16
push
mov
push
cmc
jo
outs
push
mov
push
xchg
test
push
mov
inc
jmp
mov
push
xchg
inc
lea
mov
and
xchg
xor
(bad)
inc
lock
and
in
mov
push
leave
add
push
sar
fs
xor
add
out
leave
data16
out
je
and
adc
rcr
aaa
test
in
add
daa
xchg
sbb
or
or
add
adc
cs
lds
and
cmp
aaa
loopne
aad
xor
adc
dec
push
ja
cmp
cmp
(bad)
pop
inc
cmp
imul
aad
aas
dec
test
in
mov
test
jp
dec
andps
popa
addr16
hlt
jo
ja
cmp
cmc
pop
pop
imul
xchg
mov
loop
mul
test
push
mov
inc
call
jmp
and
jo
inc
lods
movs
and
xchg
pusha
movs
push
xchg
mov
xor
in
out
inc
ficom
into
and
xchg
scas
out
out
(bad)
std
push
inc
mov
push
cld
mov
jmp
in
xor
add
call
out
je
and
adc
lock
cmc
xchg
and
jno
and
sbb
aaa
add
cmp
or
aaa
cmc
pop
adc
ds
aaa
and
lds
and
and
sbb
inc
aad
xor
aas
(bad)
push
pusha
les
nop
jb
jge
jno
adc
daa
(bad)
jns
daa
aam
add
push
arpl
inc
aas
push
mul
in
mov
test
sbb
jo
dec
out
outs
hlt
adc
push
push
pop
inc
push
test
mul
test
push
ret
adc
inc
popf
jne
xchg
out
adc
movs
mov
and
jo
inc
out
stos
and
call
push
mov
(bad)
push
hlt
xlat
repz
(bad)
adc
and
xchg
scas
aam
out
(bad)
cmps
push
aad
mov
push
test
into
fs
out
add
xlat
(bad)
(bad)
data16
iret
je
and
adc
repnz
rcl
pusha
rcl
in
add
sbb
jno
adc
ss
push
mov
aaa
or
and
add
push
loopne
aad
xor
cmp
ins
push
inc
les
jae
je
jno
push
das
cmp
push
inc
addr16
xor
push
das
aad
aas
imul
ja
in
mov
test
pop
in
lsl
es
hlt
push
mov
push
cmc
je
outs
push
mov
push
repnz
test
add
mov
mov
jne
xchg
mov
ss
mov
movs
mov
mov
cmps
xchg
pusha
xchg
push
mov
iret
xor
repz
retf
adc
and
jmp
(bad)
in
push
out
mov
push
fistp
mul
retf
add
out
enter
les
enter
int3
jne
lahf
in
xchg
and
xor
add
and
or
cmp
aas
adc
cmp
movs
sub
and
pop
cmps
adc
or
or
xor
adc
jl
dec
les
nop
jo
je
jb
inc
das
push
(bad)
pop
inc
fs
cmp
push
sub
gs
push
test
in
mov
test
gs
in
cmovle
outs
hlt
or
jbe
outs
pop
dec
push
mov
xchg
gs
test
push
xchg
xchg
jne
xchg
mov
movs
mov
and
jo
inc
xchg
pushf
and
push
cmps
mov
xor
in
mov
lods
adc
and
xchg
scas
fadd
(bad)
repnz
out
mov
push
cld
mov
out
fs
xor
add
int3
(bad)
out
je
and
adc
(bad)
lahf
les
jnp
aaa
in
add
and
or
adc
sub
imul
push
lds
and
or
push
loopne
aad
xor
aaa
(bad)
push
nop
ins
movs
adc
lds
outs
(bad)
arpl
aam
add
push
jno
jne
push
imul
ja
in
mov
test
adc
push
sysret
out
addr16
ins
mov
push
cmc
dec
pop
push
add
push
mov
test
push
test
mov
adc
xchg
mov
and
jo
inc
out
mov
es
sahf
xor
pusha
mov
mov
fistp
inc
fcom
leave
and
mov
fcom
mov
push
(bad)
mov
in
xlat
xor
add
lods
(bad)
out
je
and
adc
out
ficom
ins
ror
in
add
pop
xchg
addr16
and
adc
sbb
jg
mov
aaa
or
and
add
cmp
xor
sbb
dec
push
les
movs
jb
jb
adc
cmp
aam
add
push
dec
aad
aas
pop
test
in
mov
test
adc
arpl
add
popa
addr16
hlt
push
mov
inc
cmc
pop
pop
add
add
push
mov
lea
mov
adc
inc
mov
adc
mov
mov
and
and
into
xor
jmp
and
nop
scas
enter
icebp
push
jmp
aad
push
clc
mov
in
shl
retf
in
gs
lds
out
je
and
adc
fstp
test
add
and
or
jns
daa
adc
push
add
add
and
and
or
adc
and
or
je
imul
js
cmp
or
imul
jo
inc
mov
push
ins
aad
aas
push
not
dec
in
mov
test
pop
in
cmovs
ja
pop
hlt
dec
mov
or
push
stos
xchg
test
lods
test
push
mov
inc
call
(bad)
call
and
jo
inc
lods
movs
fbld
xchg
cmps
call
mov
xor
in
test
inc
scas
mov
push
aam
mov
push
fidivr
enter
lds
mov
out
data16
out
je
and
jne
lahf
aam
xor
imul
outs
and
or
adc
cmp
movs
adc
push
lds
adc
xor
add
xor
pop
aad
xor
push
(bad)
jne
jbe
and
jae
adc
aas
mov
aam
xor
push
arpl
inc
aas
and
in
mov
test
gs
sub
sbb
hlt
pop
mov
jo
pop
pop
dec
push
test
scas
add
push
test
test
push
scas
xchg
jne
xchg
in
adc
mov
jo
inc
mov
cdq
es
push
std
mov
xor
(bad)
xlat
jmp
and
xchg
scas
mov
add
push
retf
add
xor
in
out
jbe
mul
xlat
xor
add
jecxz
xchg
data16
and
adc
movs
lahf
out
xchg
sub
jg
sbb
sbb
xor
and
add
xor
sbb
push
mov
aaa
aas
movs
adc
push
lds
pop
cmps
sbb
loopne
aad
xor
push
(bad)
bound
les
push
movs
dec
inc
cmp
push
inc
fs
xor
push
dec
aad
aas
dec
test
in
mov
test
push
in
lsl
jno
pop
hlt
push
mov
inc
cmc
pop
pop
push
push
adc
lods
test
push
mov
inc
loopne
cmps
xchg
sahf
adc
lods
mov
and
jo
inc
xchg
sahf
es
xchg
mov
xor
hlt
xlat
mov
int
leave
and
repnz
stc
inc
mov
ret
add
xor
out
in
jbe
neg
fs
xor
add
les
ret
je
and
adc
int
(bad)
xchg
push
pop
test
in
add
sub
imul
cmc
sbb
cmp
movs
adc
add
movs
aaa
dec
cmp
sbb
cmp
pop
loopne
aad
xor
sub
jl
push
jb
xor
dec
inc
imul
jge
fs
or
push
ins
aad
aas
dec
test
in
mov
test
in
nop
cs
dec
mov
or
popw
jg
movs
xchg
lahf
add
push
mov
test
add
mov
inc
test
test
xchg
div
mov
and
xchg
cmps
fnsave
mov
xor
int3
xlat
out
inc
lods
adc
and
mov
stc
push
lds
(bad)
xor
(bad)
mov
aam
cld
xor
fisttp
fbstp
popf
adc
mov
pop
add
add
xchg
pop
cmp
adc
cmp
movs
pop
lock
lds
and
or
or
xor
adc
les
ins
movs
jne
pop
lds
das
imul
dec
and
push
aad
aas
push
not
inc
in
mov
test
popa
in
nop
push
addr16
push
mov
dec
cmc
pop
pop
push
add
push
repnz
cmps
push
scas
xchg
jne
xchg
mov
xchg
jmp
and
jo
inc
out
movs
mov
es
sahf
xor
pusha
rcl
aam
scas
fild
inc
repnz
and
xchg
scas
mov
push
jmp
enter
loop
ret
mov
into
fs
add
loop
enter
cmc
je
and
jne
lahf
lds
pusha
rol
in
add
push
xchg
pop
cs
push
rcr
sbb
jg
mov
aaa
pop
movs
adc
push
lds
and
pop
cmps
sbb
loopne
aad
xor
ds
outs
push
imul
dec
inc
jb
push
das
pusha
(bad)
arpl
aam
add
push
inc
aad
aas
push
imul
in
mov
test
sbb
xor
dec
out
addr16
push
mov
inc
cmc
pop
pop
push
add
push
test
add
mov
inc
mov
adc
sahf
mov
and
jo
inc
mov
iret
test
lods
cmps
xchg
pusha
xchg
push
mov
fist
inc
jecxz
enter
repz
xchg
scas
mov
push
rol
xor
sar
call
add
jecxz
fldenv
out
je
and
adc
mov
pop
jno
ins
shr
in
add
and
adc
addr16
cmp
das
xchg
push
jg
mov
aaa
push
movs
add
pop
lds
movs
sbb
daa
add
xor
adc
les
inc
cmp
(bad)
ja
push
aam
add
push
ins
aad
aas
dec
imul
in
mov
test
in
unpckhps
push
addr16
hlt
push
mov
or
push
aad
test
rol
mov
mov
xchg
jne
xchg
cwde
adc
scas
mov
and
jo
inc
lods
movs
lods
and
xchg
adc
retf
fbstp
inc
mov
(bad)
shr
(bad)
push
repnz
xor
loope
in
jbe
not
xor
(bad)
gs
(bad)
out
je
and
adc
fcomp
je
cmp
jg
push
outs
add
xchg
daa
rcl
push
adc
ds
aaa
daa
movs
sbb
and
sbb
sub
dec
aad
xor
adc
les
nop
ja
pop
inc
jno
adc
xor
aam
and
push
sub
outs
aas
push
test
in
mov
test
adc
pusha
minps
push
pmuludq
pop
xchg
ss
cmc
pop
pop
inc
push
xchg
xchg
add
mov
add
xchg
xchg
jne
xchg
mov
into
(bad)
jmp
and
jo
inc
mov
iret
(bad)
xchg
cmps
test
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
inc
out
push
lds
mov
push
(bad)
mov
int3
fs
xor
gs
(bad)
out
je
and
adc
(bad)
lahf
not
add
sub
test
pop
add
adc
add
movs
pop
lock
movs
cs
or
adc
xor
sub
ins
push
aas
les
jo
js
pop
lds
push
arpl
aam
add
push
push
aad
aas
push
div
ja
in
mov
test
in
lsl
push
addr16
hlt
imul
or
mov
mov
mov
test
add
mov
inc
xchg
jne
xchg
mov
mov
jo
inc
jmp
xchg
and
and
iret
xor
jecxz
rol
enter
jecxz
xchg
scas
mov
push
int
ret
aad
push
loop
lods
jbe
not
fs
rol
aam
leave
data16
in
in
and
adc
ficomp
sub
xor
sub
adc
and
adc
adc
sbb
or
ja
push
movs
adc
and
and
push
loopne
aad
xor
sbb
jl
imul
dec
inc
jle
inc
das
pop
(bad)
jb
jb
imul
aad
aas
pop
test
in
mov
test
in
unpckhps
and
hlt
push
mov
pop
cmc
jle
outs
push
lods
xchg
repz
push
mul
test
push
xchg
xchg
test
xchg
movs
mov
and
jo
inc
jmp
fbld
xchg
cmps
test
pusha
mov
cli
mov
xor
loop
icebp
inc
lods
adc
and
sahf
scas
out
inc
add
push
out
push
fidivr
(bad)
shl
add
jmp
retf
out
je
and
adc
(bad)
lahf
xchg
xchg
or
xor
and
adc
or
sub
or
(bad)
cmc
inc
adc
outs
mov
aaa
and
and
or
adc
xor
adc
dec
push
jbe
cmp
and
jge
inc
(bad)
jae
pop
aam
or
push
pop
aad
aas
push
test
in
mov
test
push
in
movq
push
addr16
hlt
push
mov
adc
pop
pop
js
adc
rol
mov
xchg
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
popf
and
nop
cmps
mov
push
(bad)
mov
xor
cld
xlat
repz
in
jecxz
retf
korw
scas
mov
add
push
fadd
mov
push
les
in
xlat
xor
add
loop
cmc
data16
and
adc
fcomp
aaa
test
jae
push
add
xchg
pop
ds
or
sbb
cmp
or
inc
lock
xor
and
push
loopne
aad
xor
dec
(bad)
gs
aas
les
pop
movs
jge
ins
lds
pop
(bad)
pusha
inc
je
bound
pop
aad
aas
dec
test
in
mov
test
add
imul
out
addr16
hlt
push
mov
inc
cmc
pop
pop
imul
mov
test
push
mov
inc
mov
xchg
jecxz
mov
movs
ss
and
movs
fisub
mov
xchg
push
cli
mov
xor
xchg
xlat
ret
adc
and
xchg
scas
cmps
inc
repz
icebp
push
rol
xor
fdivr
(bad)
fs
xor
add
dec
(bad)
je
and
adc
ficomp
sub
and
sub
adc
or
imul
cmc
pop
adc
ds
aaa
push
movs
sub
and
cmp
daa
daa
sbb
push
loopne
aad
xor
push
(bad)
push
push
imul
adc
cmp
dec
das
cmp
js
push
aam
add
push
jae
inc
aas
push
idiv
in
mov
test
in
nop
inc
addr16
hlt
jl
jge
jl
or
popw
outs
push
mov
mul
test
push
test
loope
test
stos
ss
mov
and
jo
inc
stos
movs
test
es
cmps
cdq
xor
pusha
nop
push
mov
lahf
push
jmp
and
mov
stc
push
stos
add
push
cmp
test
(bad)
cmc
je
and
adc
movs
lahf
out
xchg
xor
push
test
and
sub
daa
xchg
pop
pop
xchg
add
cmp
inc
adc
adc
push
lock
lds
and
and
adc
inc
aad
xor
or
popa
push
jno
inc
nop
ins
movs
jbe
inc
lds
das
imul
dec
and
push
arpl
outs
aas
inc
neg
jle
push
mov
test
gs
in
cmovge
pop
outs
hlt
jle
pop
xchg
ss
cmc
pop
pop
push
add
push
icebp
gs
mov
mov
xchg
jne
xchg
lahf
adc
xchg
mov
and
jo
inc
xchg
mov
xor
pusha
xchg
push
mov
fist
repnz
and
xchg
scas
jecxz
inc
out
fiadd
stos
xor
in
in
jbe
test
add
lods
(bad)
out
je
and
adc
jecxz
lds
pusha
shl
in
add
and
or
sbb
or
add
movs
adc
or
or
and
sub
xor
adc
ins
push
imul
nop
cmp
or
push
aam
adc
push
dec
aad
aas
push
test
in
mov
test
gs
pop
unpcklps
outs
addr16
push
mov
or
pop
pop
je
leave
xchg
test
push
hlt
mov
test
mov
popf
adc
inc
movs
jne
xchg
mov
mov
cwde
inc
scas
movs
shl
cmps
scas
xor
pusha
xchg
push
mov
mov
inc
mov
(bad)
aam
enter
mov
xor
(bad)
mov
leave
les
icebp
add
out
leave
data16
out
je
and
jne
lahf
call
test
in
add
jnp
daa
pop
es
jae
aas
cmc
sbb
cmp
movs
sub
and
cmp
add
or
adc
pop
aad
xor
adc
fs
imul
pop
inc
and
jle
pop
(bad)
pop
inc
and
pop
and
arpl
aad
aas
push
test
in
mov
test
in
unpcklps
outs
addr16
hlt
dec
mov
inc
cmc
cmp
pop
push
lods
xchg
test
gs
out
test
mov
inc
mov
adc
xchg
mov
and
jo
inc
lods
movs
cwde
and
cdq
cmps
shl
mov
xor
in
out
inc
lods
adc
and
mov
stc
push
enter
enter
cld
mov
nop
fs
xor
add
fisttp
shl
(bad)
adc
fstp
sub
add
pop
xchg
pop
outs
xchg
push
shr
adc
sub
and
sub
cmp
or
adc
dec
aad
xor
sbb
les
movs
or
das
dec
(bad)
jae
pusha
aam
or
push
pop
aad
aas
dec
neg
jbe
bound
add
xor
pop
out
addr16
ins
mov
push
push
mov
push
mul
test
push
add
jne
xchg
scas
adc
mov
mov
out
fisub
movs
cmps
sahf
xor
pusha
mov
xor
hlt
xlat
icebp
inc
mov
(bad)
xchg
scas
mov
push
retf
add
xor
(bad)
mov
lahf
fs
test
(bad)
out
je
and
adc
fstp
aaa
test
sub
test
pop
aas
xchg
or
pop
cmc
or
sub
sbb
push
lds
pop
movs
and
daa
pop
mov
loopne
aad
xor
push
(bad)
dec
push
push
sub
ja
or
lds
mov
aam
add
push
inc
aad
aas
dec
not
dec
in
mov
test
gs
pop
nop
jl
pop
hlt
push
mov
jl
gs
pop
push
mov
test
test
add
mov
inc
std
jne
xchg
adc
mov
and
jo
inc
jmp
xchg
and
mov
xchg
pusha
mov
lea
lods
push
call
adc
inc
cmc
scas
fadd
(bad)
scas
push
ret
xor
clc
mov
leave
fs
xor
add
in
in
shl
les
call
out
(bad)
xchg
and
and
add
daa
xchg
pop
sbb
or
sbb
xchg
add
mov
aaa
push
movs
inc
lock
movs
jb
cmp
adc
sbb
adc
cmp
and
push
(bad)
pusha
push
imul
dec
inc
cmp
outs
das
jnp
jb
jl
dec
and
dec
push
push
aad
aas
push
mul
dec
in
mov
test
gs
in
nop
pop
addr16
hlt
push
mov
or
push
pop
js
lods
xchg
mov
mov
test
push
mov
inc
std
jne
xchg
mov
movs
mov
and
jo
inc
stos
movs
mov
xchg
iret
cdq
es
cmps
cmps
xor
pusha
xchg
push
xchg
call
adc
and
retf
inc
sti
(bad)
fst
mov
push
(bad)
mov
leave
shl
icebp
add
retf
mul
fbstp
cld
adc
fcomp
xor
and
and
push
add
and
sub
adc
sbb
xor
or
add
and
cmps
xor
ds
loopne
aad
xor
or
je
jbe
and
and
push
das
push
(bad)
pusha
inc
jg
dec
add
push
ins
aad
aas
jae
dec
ja
in
mov
test
pop
in
sysret
out
addr16
ins
mov
push
cmc
pop
pop
or
lods
xchg
scas
add
push
test
xchg
test
add
scas
xchg
jne
xchg
adc
mov
and
jo
inc
in
movs
pushf
and
lahf
cmps
sahf
xor
pusha
fst
mov
xor
hlt
xlat
(bad)
inc
rcl
jmp
rol
jecxz
hlt
scas
mov
push
retf
add
push
(bad)
mov
int3
xor
add
loop
leave
data16
out
je
and
adc
out
int3
xchg
xor
xor
add
and
or
sub
pop
adc
sbb
movs
adc
sbb
xor
or
adc
push
mov
loopne
aad
xor
push
(bad)
adc
les
outs
movs
dec
inc
push
adc
push
(bad)
arpl
aam
add
push
push
aad
aas
push
test
in
mov
test
push
xor
adc
hlt
push
mov
inc
cmc
popa
pop
outs
push
adc
mov
mov
adc
inc
mov
adc
mov
and
movs
cwde
and
mov
pusha
xchg
push
loopne
mov
pushf
fistp
inc
mov
(bad)
xlat
scas
loop
clc
(bad)
not
movs
xor
ret
jbe
neg
shl
retf
add
in
iret
data16
les
rcl
lahf
(bad)
xchg
pop
pop
xor
ins
shr
in
add
and
xor
adc
xchg
push
jg
mov
aaa
adc
and
and
movs
jb
cmp
sbb
xor
aad
xor
or
inc
push
dec
les
inc
push
lds
imul
inc
popa
aam
and
sbb
aad
aas
push
imul
push
in
mov
test
in
pcmpeqd
inc
addr16
hlt
push
jne
cmc
outs
pop
inc
push
test
push
lods
gs
test
add
scas
xchg
jne
xchg
xchg
adc
xchg
mov
and
jo
inc
xchg
movs
mov
es
cmps
mov
push
cli
mov
xor
out
icebp
inc
fst
lock
fisubr
mov
xor
(bad)
mov
lds
lds
fisttp
(bad)
je
and
adc
into
lahf
cli
xchg
xor
test
and
pop
add
and
or
adc
push
adc
adc
adc
lds
and
add
adc
pop
aad
xor
adc
or
les
jo
js
jno
adc
pop
(bad)
jo
jns
dec
add
push
dec
aad
aas
dec
div
mov
test
pop
in
mulps
push
addr16
xchg
dec
jne
cmc
pop
pop
pop
push
nop
xchg
scas
add
push
cli
gs
mov
aam
xchg
push
scas
xchg
adc
mov
inc
test
pushf
and
xchg
cmps
les
pusha
fst
mov
xor
call
test
jmp
(bad)
in
int
shl
ret
jbe
test
add
(bad)
(bad)
xchg
mul
fdiv
cdq
adc
(bad)
lahf
lds
pusha
shl
push
outs
add
aaa
pop
cmp
cmc
push
adc
push
mov
aaa
sub
lds
and
cmp
sbb
inc
mov
loopne
aad
xor
push
(bad)
ins
push
jo
ja
push
movs
gs
lds
das
inc
(bad)
push
inc
addr16
and
push
ja
inc
aas
push
div
push
in
mov
test
in
lsl
push
outs
hlt
imul
outs
push
rcl
sti
gs
out
cld
push
mov
inc
mov
adc
lock
and
jo
inc
xchg
movs
xchg
and
std
cmps
xchg
pusha
fst
mov
xor
jecxz
jmp
(bad)
xchg
scas
mov
push
aam
div
jecxz
in
loopne
xchg
xchg
retf
add
test
je
and
adc
fistp
cmp
ins
shl
in
add
cmp
daa
pop
es
sub
pusha
cmc
sbb
cmp
movs
sub
and
or
add
pop
aad
xor
inc
(bad)
push
push
pop
les
nop
jae
dec
inc
inc
lds
das
pop
mov
aam
sub
push
push
aad
aas
push
test
in
mov
test
dec
in
lsl
cmp
mov
pop
cmc
pop
pop
dec
push
movs
xchg
test
gs
test
push
scas
xchg
jne
xchg
mov
xor
inc
mov
(bad)
xchg
cmps
xchg
mov
xor
rcl
inc
lods
adc
and
xchg
scas
mov
push
aam
les
fidivr
nop
fs
xor
add
test
je
and
jne
lahf
sti
xchg
push
pop
and
shl
in
add
xor
xchg
or
adc
add
movs
adc
sbb
push
dec
sub
xor
pop
aad
xor
adc
push
push
jbe
and
jno
outs
das
push
(bad)
jne
and
mov
push
arpl
jp
push
mul
dec
in
mov
test
ins
in
unpckhps
push
addr16
hlt
push
pop
xchg
ss
cmc
push
pop
ins
push
mov
stos
add
push
xchg
test
push
scas
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
lahf
and
and
push
cld
mov
xor
repnz
lods
inc
mov
(bad)
xchg
scas
loope
test
xlat
xor
cmc
mov
repnz
xor
add
(bad)
(bad)
out
je
and
adc
hlt
lahf
lds
rcl
in
add
jle
add
xor
adc
imul
imul
cmps
sbb
pop
mov
loopne
aad
xor
push
(bad)
inc
push
push
les
jb
push
inc
jb
or
jp
arpl
aam
and
pop
push
push
div
adc
ins
mov
test
ins
in
lsl
inc
addr16
imul
jb
lods
xchg
mov
loope
mov
test
push
mov
inc
loop
xchg
xchg
hlt
adc
mov
add
iret
cwde
es
cmps
xchg
pusha
les
mov
xor
out
xlat
rol
aam
rol
out
inc
shr
push
out
mov
push
loopne
in
jbe
test
add
jecxz
jecxz
(bad)
out
je
and
jne
lahf
lock
and
xor
add
daa
xchg
pop
arpl
adc
aas
mov
aaa
adc
adc
sbb
sub
aas
cmps
sbb
sbb
pop
loopne
aad
xor
adc
jl
xor
sub
jae
dec
inc
and
or
pop
(bad)
sbb
aam
add
push
ins
aad
aas
outs
test
in
mov
test
jb
bound
sbb
jl
push
hlt
push
mov
pop
cmc
pop
pop
dec
push
movs
xchg
mov
mov
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
scas
movs
mov
mov
pusha
popf
push
xor
push
xchg
xlat
inc
loope
test
call
push
repnz
push
(bad)
mov
aam
lock
add
jmp
out
je
and
jne
lahf
icebp
xchg
or
and
jnp
and
adc
push
xchg
pop
cmp
adc
ds
aaa
shld
outs
and
cmps
das
daa
push
mov
loopne
aad
xor
sub
push
nop
ins
movs
pop
inc
lds
das
dec
mov
aam
sbb
push
arpl
sbb
push
imul
test
in
cmovg
push
addr16
xchg
jnp
or
push
mov
push
xchg
mov
mov
mov
inc
mov
adc
repz
and
jo
inc
stos
movs
xchg
and
popf
cmps
sahf
xor
pusha
mov
xor
ret
xlat
lds
retf
and
xchg
scas
mov
push
int
mov
push
fdivr
iret
fs
xor
add
loop
into
jmp
std
je
and
jne
lahf
(bad)
xchg
adc
rol
in
add
and
or
ss
sbb
jg
mov
aaa
pop
movs
es
xor
pop
movs
add
cmps
sbb
sub
or
push
aad
xor
adc
les
inc
jb
adc
jg
outs
inc
arpl
dec
and
pop
push
das
aad
aas
aaa
test
in
mov
test
inc
in
lsl
cmp
hlt
push
mov
pop
cmc
pop
pop
outs
push
mov
test
test
add
mov
inc
xchg
jne
xchg
out
adc
scas
mov
and
jo
inc
mov
xchg
and
and
mov
push
aam
enter
lds
xchg
scas
fadd
(bad)
sti
push
out
aam
int
enter
repz
not
xlat
xor
add
jecxz
jecxz
(bad)
les
rcl
lahf
(bad)
xchg
and
pop
test
in
add
sub
add
adc
cmp
movs
cmp
add
movs
sbb
daa
cmp
aad
xor
adc
push
nop
jae
or
lds
das
push
(bad)
pop
inc
fs
xor
push
ins
aad
aas
push
imul
dec
in
mov
test
in
punpckhbw
das
addr16
dec
mov
jg
popw
push
add
push
cmps
gs
test
push
mov
inc
call
(bad)
call
and
jo
inc
mov
fbld
xchg
cmps
xchg
pusha
xchg
push
mov
fistp
inc
mov
(bad)
(bad)
mov
xor
(bad)
mov
lahf
fidiv
lds
fisttp
fidiv
les
ret
xchg
xor
xor
xor
je
adc
sbb
xchg
daa
xchg
sub
adc
imul
lock
ds
sub
adc
and
mov
pop
adc
push
nop
dec
movs
adc
lds
das
imul
inc
inc
aam
add
push
(bad)
aad
aas
dec
test
in
mov
test
adc
jnp
inc
hlt
push
mov
inc
cmc
dec
pop
or
test
mov
cdq
push
cmc
lea
mov
ret
adc
inc
xchg
jne
xchg
in
adc
mov
jo
inc
xchg
movs
call
cmps
sahf
xor
pusha
adc
xchg
xor
(bad)
xlat
rol
les
xchg
scas
fild
(bad)
in
cmc
add
push
sar
fnsave
out
cmc
in
ror
(bad)
rcl
lahf
(bad)
xchg
and
or
in
add
cmp
xchg
adc
or
sbb
jg
mov
aaa
pop
movs
adc
push
lds
and
and
adc
sbb
pusha
xor
push
(bad)
ins
push
pusha
les
jae
pop
inc
pop
lds
das
popa
(bad)
jg
jne
push
adc
push
ins
aad
aas
push
div
push
in
mov
test
push
in
cmovo
pop
addr16
hlt
jbe
bound
inc
pop
dec
push
adc
mov
mov
xchg
xchg
jne
xchg
mov
mov
jo
inc
mov
iret
call
pusha
mov
xor
(bad)
xlat
in
mov
(bad)
call
(bad)
ficom
loopne
pushf
aad
push
out
mov
shl
retf
add
lock
fldenv
out
je
and
adc
fstp
sub
jg
xor
or
and
xadd
cmc
sbb
pop
mov
aaa
adc
and
and
pop
loopne
aad
xor
sbb
dec
push
imul
ins
inc
and
adc
pop
(bad)
jno
pop
aam
or
push
jl
inc
aas
inc
test
in
mov
test
in
unpckhps
inc
addr16
hlt
or
dec
cmc
jbe
outs
push
mov
push
xchg
test
push
mov
inc
mov
adc
mov
xchg
inc
pushf
movs
mov
xchg
cmps
lods
xor
pusha
xchg
push
xor
push
out
xlat
cld
inc
repnz
and
mov
ficom
push
hlt
mov
shl
lds
ror
icebp
je
and
adc
loop
retf
xchg
adc
xor
ins
shl
or
xchg
pop
daa
xchg
sub
pop
cmc
sbb
or
cmp
sbb
adc
aas
cmps
pusha
daa
add
adc
adc
cmp
and
inc
push
ja
jns
jno
pop
inc
push
mov
pop
aam
or
push
sub
inc
aas
dec
test
jb
pop
test
fs
pcmpgtw
outs
addr16
hlt
push
mov
inc
cmc
push
pop
pop
push
test
lods
add
push
cmc
gs
test
push
mov
inc
mov
adc
lods
mov
and
jo
inc
lods
movs
mov
es
cmps
xchg
xor
pusha
stos
push
std
mov
xor
hlt
xlat
hlt
inc
rcl
jmp
retf
(bad)
les
out
retf
add
xor
iret
mov
out
stc
xor
add
enter
fsub
cmc
je
and
adc
(bad)
lahf
out
xchg
and
aaa
test
rcl
in
add
xchg
pop
xchg
or
sbb
ss
push
mov
aaa
shld
adc
xor
sub
cmps
xor
add
push
loopne
aad
xor
push
(bad)
outs
push
inc
les
aaa
movs
jbe
dec
lds
das
jg
ja
addr16
cmp
push
popa
aad
aas
push
not
popa
in
mov
test
push
in
punpcklbw
jno
dec
hlt
imul
ins
push
rcl
mul
test
add
xchg
xchg
jne
xchg
mov
mov
jmp
lea
cwde
inc
scas
movs
and
cmps
test
pusha
fst
mov
xor
aam
hlt
inc
mov
(bad)
xchg
scas
mov
push
retf
xor
sar
(bad)
xlat
xor
add
lods
(bad)
cdq
iretw
out
je
and
adc
(bad)
lahf
iret
xchg
cmp
add
add
and
adc
cmp
ds
movzx
aaa
sbb
sub
xor
outs
and
pop
cmps
data16
cs
loopne
aad
xor
ds
jl
je
outs
nop
dec
movs
dec
inc
pop
lds
push
(bad)
gs
fs
sbb
ins
aad
aas
push
test
in
mov
test
sbb
out
addr16
hlt
pusha
mov
push
cmc
popw
outs
push
stos
xchg
mov
cmps
push
mul
test
push
ret
adc
inc
mov
adc
movs
mov
and
jo
inc
stos
movs
(bad)
xchg
cmps
shl
mov
popf
fistp
inc
mov
korw
scas
fiadd
(bad)
loopne
loop
mov
push
(bad)
mov
leave
xlat
xor
add
jecxz
in
fucom
(bad)
je
and
adc
ficomp
add
jnp
and
push
add
and
or
adc
ds
aaa
dec
movs
pop
lock
ins
and
cmps
aaa
daa
cmp
xor
adc
les
nop
cmp
jg
cmp
ja
jg
inc
xor
push
xor
push
aas
ins
not
or
jns
arpl
sysretw
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
ins
push
test
mov
mov
test
cmps
xchg
stos
xchg
in
adc
xchg
mov
and
jo
inc
stos
movs
test
mov
pusha
mov
xor
hlt
xlat
rol
leave
and
nop
scas
mov
push
iret
add
xor
std
mov
icebp
fs
xor
add
jecxz
in
mul
(bad)
je
and
adc
fcomp
aaa
test
and
cmp
cmp
push
outs
cmp
aaa
pop
ds
daa
rcr
pop
adc
ss
aaa
adc
and
and
adc
xor
push
(bad)
dec
push
dec
les
nop
push
movs
dec
inc
jb
pop
das
pop
(bad)
jg
fs
and
sbb
aad
aas
push
idiv
in
mov
test
pop
in
pcmpeqb
push
addr16
hlt
dec
mov
or
jne
jle
adc
mov
mov
mov
inc
xchg
jne
xchg
lea
mov
xchg
and
jo
inc
scas
movs
and
cmps
mov
push
lods
mov
xor
retf
inc
lods
adc
and
sahf
scas
mov
push
test
loope
lds
aam
out
xor
add
call
out
je
and
adc
fstp
push
test
push
in
add
add
or
aas
cmc
sbb
ins
mov
aaa
push
movs
and
pextrw
outs
and
cmp
sbb
xor
pop
loopne
aad
xor
dec
(bad)
jl
imul
dec
inc
lds
das
pop
(bad)
jnp
fs
and
push
arpl
inc
aas
sub
dec
ja
in
mov
test
push
push
(bad)
out
addr16
hlt
dec
mov
js
pop
pop
outs
push
test
icebp
lods
test
push
mov
inc
mov
adc
test
rol
movs
fbld
pushf
cmps
fnsave
pusha
xchg
push
div
cwde
push
int3
xlat
out
inc
stc
adc
and
ret
scas
mov
push
retf
add
push
sar
xlat
xor
add
mov
leave
data16
out
je
and
adc
icebp
lahf
les
xor
and
sbb
outs
sbb
or
adc
or
daa
lock
cmp
sbb
adc
dec
aad
xor
push
(bad)
jl
jbe
arpl
pusha
lds
push
(bad)
ja
push
aam
add
push
dec
aad
aas
push
div
jg
push
mov
test
jno
bound
inc
out
addr16
hlt
jno
inc
xchg
aaa
jne
cmc
addr16
push
add
push
mov
add
mov
inc
mov
adc
xor
pushf
and
mov
pusha
xchg
mov
xor
hlt
xlat
out
inc
fist
repz
sahf
scas
mov
add
xor
sar
mov
enter
sahf
gs
leave
data16
out
je
and
jne
lahf
fst
and
sbb
sbb
adc
xchg
rcl
add
aaa
adc
sub
xor
xor
dec
push
cmps
aas
daa
add
xor
adc
push
push
jno
sub
jno
push
inc
jb
push
das
imul
xor
inc
mov
push
je
add
ins
imul
in
mov
test
pop
in
andnps
push
pmuludq
mov
inc
cmc
pop
pop
imul
xchg
mov
loopne
test
test
add
xchg
xchg
mov
jmp
and
jo
inc
mov
pushf
and
pushf
cmps
cmps
xor
pusha
test
mov
xor
in
xlat
mov
icebp
adc
and
xchg
scas
jmp
add
push
clc
mov
xchg
xlat
xor
add
out
into
data16
out
je
and
adc
int
call
test
shl
in
add
cmp
xchg
add
adc
cmp
movs
inc
lock
sub
cmp
push
loopne
aad
xor
ds
jl
push
pop
nop
dec
movs
dec
inc
jae
adc
push
(bad)
dec
inc
and
bound
ins
aad
aas
push
test
in
mov
test
in
unpckhps
jnp
ja
push
mov
or
push
lods
xchg
lods
add
push
mul
test
push
rol
jne
xchg
out
adc
div
mov
lods
movs
mov
mov
(bad)
es
cmps
fnstenv
mov
xor
enter
lods
adc
and
ret
inc
mov
fist
jmp
(bad)
lods
push
ret
jbe
not
fs
(bad)
add
fimul
shl
loope
mov
lahf
retf
xchg
ds
sub
add
and
push
shr
adc
add
or
shld
adc
cmp
and
or
pop
aad
xor
adc
push
nop
jae
adc
jl
adc
push
(bad)
jno
fs
add
push
arpl
inc
aas
push
in
mov
test
pop
in
sysret
out
addr16
hlt
push
mov
inc
cmc
push
pop
jnp
xchg
xchg
lods
add
push
cmc
mov
mov
cmps
xchg
adc
xchg
and
jo
inc
movs
movs
pushf
and
xchg
cmps
sahf
xor
pusha
nop
push
mov
fisttp
mov
(bad)
(bad)
scas
ret
(bad)
(bad)
push
int
mov
push
lds
jmp
add
test
je
and
adc
ficomp
aaa
test
rcl
in
add
and
or
xor
add
jg
mov
aaa
adc
lds
push
movs
and
daa
pop
mov
loopne
aad
xor
sbb
inc
push
ins
les
pusha
movs
dec
inc
jg
inc
das
pop
(bad)
je
and
push
xor
push
das
aad
aas
push
inc
ja
in
mov
test
push
in
divps
push
addr16
hlt
inc
mov
push
cmc
bound
outs
push
aad
icebp
add
push
in
gs
std
add
les
mov
adc
mov
mov
scas
movs
cmps
and
mov
pusha
stos
push
xchg
mov
xor
loope
in
inc
mov
(bad)
xchg
scas
mov
push
mov
aad
push
ret
jbe
imul
shl
sti
add
test
(bad)
adc
fcomp
add
add
aas
xchg
es
or
adc
cmp
movs
add
and
and
sub
pop
aad
xor
adc
les
nop
ja
dec
inc
cmp
inc
das
pop
(bad)
jl
jno
imul
push
test
in
mov
test
pop
in
cmovne
outs
addr16
hlt
adc
jne
cmc
push
pop
outs
push
mov
in
mov
mov
adc
inc
mov
adc
stos
mov
and
jo
inc
mov
iret
cdq
and
push
mov
(bad)
push
iret
xlat
fadd
int
xlat
(bad)
mov
out
push
mov
push
cmp
enter
shl
(bad)
out
je
and
adc
fcomp
or
in
add
and
adc
push
cmc
sub
adc
dec
lock
ss
and
sub
sbb
mov
pop
das
(bad)
push
nop
ins
movs
pop
inc
push
push
das
pop
(bad)
pop
inc
outs
aam
sbb
push
arpl
pusha
aas
js
pop
ja
in
mov
test
push
in
unpckhps
jg
inc
hlt
push
mov
dec
cmc
ins
pop
push
push
mov
mov
add
scas
xchg
jne
xchg
xchg
adc
sahf
mov
and
jo
inc
out
fisub
sahf
cmps
(bad)
xor
pusha
xchg
push
sti
mov
xor
(bad)
xlat
test
mov
inc
ffreep
out
enter
sti
aad
push
fistp
out
fs
xor
add
in
(bad)
out
je
and
adc
out
repnz
push
pop
adc
add
daa
xchg
pop
xor
adc
sub
adc
xor
and
pop
cmps
add
xor
xor
adc
jb
popa
les
xor
adc
cmp
aam
adc
push
das
aad
aas
push
test
in
mov
test
outs
in
lsl
inc
addr16
push
mov
inc
cmc
pop
pop
jbe
mov
test
lea
test
scas
xchg
jne
xchg
mov
ret
mov
pop
movs
xchg
fwait
cmps
mov
push
cli
mov
xor
loopne
lods
inc
mov
(bad)
xchg
scas
mov
push
aam
out
out
loope
out
mov
int3
fs
xor
add
out
leave
data16
je
and
adc
int
(bad)
xchg
sub
and
add
push
xchg
pop
arpl
adc
or
add
adc
ss
lds
movs
adc
cmps
sbb
sbb
xor
adc
push
push
imul
dec
inc
and
or
inc
(bad)
jg
fs
and
sbb
aad
aas
push
test
in
mov
test
pop
in
sysret
out
addr16
push
mov
or
push
stos
xchg
mov
call
gs
test
add
mov
mov
jne
xchg
loop
cmp
ss
mov
and
jo
inc
lea
mov
xor
pusha
xchg
push
sti
mov
xor
lock
test
rol
scas
mov
push
aam
mov
push
(bad)
mov
leave
fs
xor
add
loope
lahf
data16
loope
in
and
adc
fcomp
or
add
and
cmp
cmp
adc
cs
aaa
pop
movs
dec
lock
xor
and
add
add
adc
xor
daa
xor
aas
(bad)
imul
dec
nop
jb
push
inc
pop
lds
das
dec
(bad)
pusha
inc
pop
aam
add
push
arpl
inc
aas
sub
pop
ja
in
mov
test
in
(bad)
out
addr16
hlt
jge
imul
pop
je
test
mov
lea
mov
mov
mov
movs
adc
inc
mov
xchg
in
adc
xchg
mov
and
jo
inc
scas
movs
stos
and
movs
cmps
mov
xchg
pusha
cdq
push
mov
xchg
xor
not
loope
mov
lds
inc
inc
loop
mov
mov
push
ret
mov
retf
fs
xor
add
lods
(bad)
out
je
and
adc
repnz
mov
pusha
rcr
in
add
sub
add
adc
pop
adc
movzx
dec
movs
pop
lock
sub
adc
sbb
loopne
aad
xor
adc
les
nop
jo
outs
inc
jb
or
push
aam
add
push
jae
inc
aas
jg
push
ja
in
mov
test
push
in
punpcklbw
push
addr16
hlt
data16
dec
cmc
cmp
outs
push
mov
repz
test
add
popf
xchg
jne
xchg
in
adc
mov
mov
hlt
movs
mov
es
xchg
pusha
adc
mov
loopne
mov
and
iret
scas
mov
push
out
mov
push
ret
jbe
imul
shl
rol
in
xchg
out
je
and
jne
lahf
rcl
cmp
jne
adc
and
adc
sbb
inc
adc
cmp
ss
push
and
cmps
fs
es
loopne
aad
xor
adc
jl
inc
les
movs
push
inc
inc
lds
inc
and
add
dec
aad
aas
pop
mul
dec
in
mov
test
in
unpckhps
dec
addr16
hlt
je
bound
pop
pop
jae
mov
mov
add
mov
inc
mov
adc
mov
jo
inc
lods
movs
fisub
xchg
cmps
xchg
xor
pusha
xchg
push
lea
les
xlat
in
inc
mov
(bad)
mov
mov
xor
(bad)
mov
retf
fs
xor
add
fimul
fdiv
loope
(bad)
cmc
aad
stc
lahf
fst
sub
or
push
add
or
das
shl
pop
adc
cmp
es
cmp
and
adc
dec
aad
xor
(bad)
push
nop
movs
adc
lds
dec
(bad)
jp
pop
aam
xor
push
jo
push
aas
ins
not
pop
in
mov
test
jg
jb
pop
out
addr16
hlt
dec
mov
inc
cmc
pop
pop
fs
fist
cwde
gs
mov
xchg
out
popf
push
movs
xchg
adc
scas
and
jo
inc
out
mov
test
fst
mov
xor
cmc
xlat
xlat
inc
mov
lds
inc
inc
(bad)
push
test
fcom
mov
in
fs
xor
gs
xchg
data16
out
je
and
jne
lahf
(bad)
xchg
dec
pop
aaa
test
cmp
push
add
jg
cmp
pusha
xchg
adc
pop
cmc
sub
sub
sub
pop
lds
and
adc
xor
sbb
arpl
les
jo
or
lds
das
push
push
inc
dec
aam
cmp
push
pop
aad
aas
push
imul
push
in
mov
test
gs
pop
sysret
out
addr16
hlt
dec
mov
push
cmc
fs
outs
push
stos
xchg
test
gs
add
mov
inc
mov
adc
xor
inc
jmp
iret
mov
xor
pusha
xchg
push
mov
fistp
inc
lods
adc
and
xchg
scas
fild
(bad)
out
leave
add
xor
ret
mov
jmp
xchg
fild
out
leave
mul
(bad)
je
and
adc
out
fist
jg
or
adc
and
adc
and
pop
adc
push
push
aaa
or
lds
and
sbb
cmp
pop
aad
xor
or
jg
imul
dec
inc
and
imul
(bad)
ja
push
aam
or
push
ins
aad
aas
imul
ja
in
mov
test
in
unpckhps
jg
add
push
mov
push
cmc
pop
pop
outs
push
mov
mov
gs
mov
fucomip
xchg
mov
mov
jne
xchg
mov
fdivr
jmp
and
jo
inc
lods
movs
fbld
xchg
cmps
test
mov
xor
in
loope
into
adc
and
mov
stc
push
retf
xor
lock
shl
lds
fisttp
cli
je
and
adc
(bad)
lahf
not
or
imul
sub
xchg
pop
outs
xchg
or
adc
add
movs
pop
lock
das
and
sbb
add
xor
adc
les
dec
movs
or
lds
das
pop
(bad)
pop
inc
jg
dec
cmp
xor
pop
aas
jae
inc
ja
in
mov
test
push
in
unpcklps
push
addr16
hlt
dec
mov
inc
cmc
pop
pop
pop
push
mov
push
test
add
mov
inc
movs
jne
xchg
out
adc
mov
xchg
and
jo
inc
hlt
movs
mov
and
push
mov
fistp
inc
mov
lds
inc
repz
stc
push
mov
aam
lds
aam
(bad)
repnz
loop
enter
cli
je
and
jne
lahf
lds
pusha
shl
in
add
and
or
push
cmc
and
sub
add
mov
aaa
adc
and
and
sub
inc
aad
xor
adc
ins
push
ins
les
jo
or
lds
pop
(bad)
arpl
aam
or
push
push
aad
aas
test
addr16
test
pop
in
(bad)
out
addr16
hlt
push
mov
inc
cmc
push
pop
inc
push
adc
gs
test
add
mov
inc
mov
adc
scas
mov
and
jo
inc
mov
fisub
and
mov
push
loopne
lock
sti
adc
and
std
scas
mov
push
leave
add
xor
(bad)
mov
shl
icebp
add
dec
(bad)
je
and
adc
hlt
lahf
mov
data16
adc
and
xor
pop
cmc
sub
fs
aaa
adc
adc
or
movs
sbb
daa
xor
aad
xor
push
(bad)
jl
outs
les
movs
dec
inc
pop
lds
das
pop
(bad)
pop
inc
and
dec
and
sbb
aad
aas
outs
imul
dec
in
mov
test
inc
in
(bad)
out
addr16
hlt
push
mov
pmaddwd
push
stos
xchg
test
xchg
gs
test
push
mov
inc
call
(bad)
jmp
and
jo
inc
xchg
movs
fbld
xchg
cmps
cdq
xor
pusha
mov
cli
mov
xor
into
xlat
mov
lods
adc
and
xchg
scas
mov
add
push
ret
jbe
imul
xor
add
in
int
repz
je
and
adc
rcr
sbb
shl
in
add
and
xadd
cmc
aas
adc
add
movs
adc
pextrw
xor
pop
cmps
xor
adc
xor
dec
(bad)
dec
push
dec
les
nop
jae
inc
inc
jno
adc
dec
(bad)
jnp
jl
imul
aad
aas
push
neg
dec
in
mov
test
pop
in
lsl
je
inc
hlt
dec
mov
inc
cmc
inc
pop
js
test
icebp
add
push
cmc
mov
push
scas
xchg
adc
inc
mov
adc
xchg
mov
mov
iret
ret
es
pusha
rcl
test
push
not
les
leave
and
(bad)
scas
mov
push
jmp
retf
aad
push
sar
(bad)
fs
xor
add
loop
iret
data16
and
adc
cld
lahf
mov
or
add
and
or
aas
cmc
inc
adc
cmp
pop
lock
movs
add
cmps
adc
sbb
xor
sub
imul
bound
jb
adc
push
aam
sub
pop
push
cs
aas
push
test
in
mov
test
gs
nop
jg
push
hlt
dec
mov
add
pop
pop
outs
push
adc
mov
mov
mov
inc
popf
jne
xchg
cdq
adc
mov
jo
inc
mov
iret
mov
xor
pusha
lahf
push
mov
fistp
inc
mov
(bad)
xchg
scas
mov
push
leave
add
push
test
in
div
ret
add
aad
std
repz
je
and
adc
(bad)
lahf
rcl
xor
add
and
xor
add
xchg
push
jg
mov
aaa
pop
movs
inc
lock
movs
sbb
daa
adc
push
loopne
aad
xor
or
jl
jb
sub
imul
pop
inc
push
aam
add
push
ins
aad
aas
dec
test
in
mov
test
dec
in
unpckhps
and
pop
hlt
push
mov
or
push
mov
push
mul
test
push
mov
mov
jne
xchg
xchg
adc
mov
leave
and
jo
inc
out
fbld
xchg
cmps
xchg
mov
xor
in
in
inc
into
adc
and
mov
stc
push
aam
hlt
xor
int
stos
jbe
imul
fs
xor
add
out
frstor
out
je
and
adc
fcomp
sub
add
and
add
ds
inc
adc
imul
lock
cmp
sub
xor
add
adc
xor
cmp
or
dec
push
jbe
and
jno
ins
das
push
jne
gs
add
push
arpl
add
push
neg
push
in
mov
test
pop
in
movq
push
addr16
hlt
pop
mov
jne
jno
dec
push
fist
xchg
gs
push
ret
adc
inc
popf
jne
xchg
mov
mov
mov
and
xchg
cmps
mov
xchg
pusha
xchg
push
mov
mov
hlt
xlat
test
enter
mov
push
repz
xor
cmp
xlat
xor
add
loop
stc
data16
out
je
and
adc
mov
pop
or
in
add
push
xchg
pop
cmp
adc
push
mov
aaa
or
and
and
adc
cmp
jbe
dec
mov
pop
sbb
fs
popa
les
push
movs
dec
inc
js
or
pop
(bad)
popa
inc
ja
push
add
push
das
aad
aas
jno
inc
ja
in
mov
test
inc
in
lsl
push
addr16
sbb
bound
pop
pop
dec
push
mov
stos
gs
test
add
popf
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
call
cmps
xor
mov
xor
not
jmp
(bad)
lahf
scas
in
rol
push
retf
xor
cmp
fs
ret
add
loope
xchg
out
je
and
adc
in
(bad)
xchg
adc
test
in
add
sbb
xor
adc
xchg
push
jg
mov
aaa
push
movs
adc
or
cmp
sbb
sub
add
jbe
dec
mov
pop
dec
(bad)
jl
jg
pop
nop
jae
dec
inc
cmp
adc
pop
(bad)
jns
fs
and
push
push
pop
aad
aas
push
imul
push
in
mov
test
pop
in
nop
inc
addr16
hlt
push
mov
jns
pop
pop
jbe
(bad)
xchg
mov
gs
test
push
mov
jne
xchg
xchg
adc
lahf
mov
and
jo
inc
mov
call
cmps
cdq
xor
pusha
xchg
push
stos
mov
xor
in
test
and
mov
stc
push
aam
movs
xor
ret
jbe
idiv
fs
xor
add
in
jmp
and
adc
(bad)
lahf
enter
xor
add
or
add
adc
outs
mov
aaa
push
movs
dec
lock
and
cmp
sub
cmp
xor
das
(bad)
push
nop
inc
movs
push
inc
jge
pop
das
xor
aam
add
push
dec
aad
aas
pop
neg
push
in
mov
test
pop
in
nop
inc
addr16
hlt
dec
mov
inc
cmc
pop
pop
dec
push
mov
push
xchg
test
add
scas
xchg
mov
(bad)
mov
and
jo
inc
lock
test
mov
pusha
mov
xor
hlt
xlat
out
inc
fcom
out
jmp
scas
hlt
inc
ret
push
rol
mov
push
std
mov
aam
xlat
xor
add
fisttp
shl
adc
fcomp
or
jnp
sbb
or
outs
jg
xor
push
xchg
das
shl
add
xor
sub
adc
sbb
add
add
sbb
xor
and
push
inc
les
imul
inc
inc
pop
aam
add
push
outs
aad
aas
jg
imul
bound
add
pop
lsl
push
addr16
push
mov
inc
cmc
pop
pop
movlhps
xchg
pop
push
mov
test
add
into
xchg
jne
xchg
mov
mov
aad
mov
fsub
and
push
call
push
(bad)
xlat
hlt
inc
mov
(bad)
jmp
les
(bad)
mov
xor
ret
jbe
not
fs
jmp
lock
ror
cld
je
and
adc
fstp
sub
shl
adc
and
ja
push
cmp
sbb
sub
and
sbb
and
pop
aad
xor
adc
les
popa
movs
adc
lds
jge
js
pop
aam
add
ins
aad
aas
jp
ins
ja
in
mov
test
push
in
unpcklps
inc
addr16
push
mov
or
push
lods
xchg
mov
push
repz
mov
push
mov
mov
jne
xchg
test
mov
mov
and
jo
inc
mov
(bad)
es
cmps
test
pusha
retf
mov
xor
lahf
xlat
leave
inc
(bad)
adc
and
loopne
mov
push
repnz
push
lds
leave
fs
xor
add
ror
cmc
je
and
adc
neg
ja
jnp
add
or
jg
push
outs
das
xchg
pop
and
adc
ds
aaa
push
movs
pop
lock
push
and
cmp
mov
loopne
aad
xor
inc
(bad)
push
nop
pop
movs
adc
ins
lds
pop
mov
aam
add
push
arpl
pop
aas
and
in
mov
test
in
sysret
out
addr16
hlt
push
mov
inc
cmc
pop
pop
push
push
test
mov
gs
stc
add
lods
xchg
jne
xchg
mov
ss
mov
and
jo
inc
out
popf
and
mov
xor
mov
xor
hlt
xlat
mov
fst
int3
and
xchg
scas
mov
push
repz
xor
les
int
fwait
xor
add
int
call
je
and
adc
fcomp
sub
add
and
or
and
sbb
xor
or
adc
movs
jbe
and
sub
xor
add
ins
push
outs
les
jo
dec
inc
and
or
pop
(bad)
push
inc
addr16
cmp
push
jae
jl
push
div
ja
in
mov
test
inc
in
lsl
jb
addr16
push
mov
inc
cmc
pop
pop
outs
push
adc
lea
mov
popf
xchg
jne
xchg
jmp
popf
dec
and
jo
inc
test
pushf
and
in
ret
xor
pusha
xchg
push
mov
fistp
inc
mov
(bad)
xlat
scas
mov
push
leave
add
push
ret
jbe
not
fs
xor
add
ror
je
and
adc
movs
lahf
(bad)
xchg
push
pop
sub
ins
rcr
in
add
or
or
add
or
jg
mov
aaa
or
lds
and
and
adc
dec
aad
xor
sub
les
movs
dec
inc
cmp
adc
push
(bad)
jae
fs
add
push
ins
aad
aas
push
test
in
mov
test
pop
in
lsl
inc
addr16
hlt
dec
mov
or
popa
pop
outs
push
scas
xchg
mov
gs
mov
push
mov
inc
mov
adc
movs
mov
and
jo
inc
mov
iret
mov
mov
pusha
ret
mov
xor
not
rol
int3
and
loop
cld
inc
clc
(bad)
loope
aam
mov
push
(bad)
mov
sahf
fs
lds
fisttp
fbstp
loope
push
ret
jne
lahf
rcl
rcr
in
add
cmp
xchg
sub
adc
ds
aaa
shld
adc
cmp
and
push
loopne
aad
xor
adc
pusha
push
jbe
and
cmp
ins
das
addr16
bound
aam
add
push
arpl
inc
aas
jno
push
ja
in
mov
test
gs
xor
adc
jno
add
push
jne
cmc
push
pop
pushw
test
scas
add
push
mov
add
lods
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
lock
mov
es
mov
pusha
movs
push
lea
int
repnz
repz
mov
lds
inc
test
stc
xor
pushf
mov
retf
fs
xor
add
lods
(bad)
out
je
and
adc
ficomp
aaa
test
add
and
sub
sbb
xchg
sbb
aaa
adc
adc
lds
pop
movs
adc
and
or
dec
aad
xor
sbb
ins
push
outs
les
movs
dec
inc
(bad)
lds
pop
(bad)
arpl
aam
add
push
dec
aad
aas
ins
imul
in
mov
test
push
in
movd
jge
data16
inc
mov
inc
cmc
push
pop
dec
push
mov
xchg
add
push
cmc
gs
test
push
mov
inc
out
xchg
xchg
mov
mov
mov
movs
and
cmps
lds
pusha
test
in
iret
xor
hlt
xlat
fiadd
mov
(bad)
lds
inc
clc
mov
xor
les
(bad)
div
fild
int3
vphadduwq
cdq
je
and
adc
fcomp
sub
sub
add
xchg
es
or
adc
xor
push
aaa
dec
movs
sub
and
push
cmps
sbb
inc
mov
loopne
aad
xor
adc
ins
push
imul
dec
inc
cmp
bound
pop
(bad)
jb
(bad)
aam
or
push
dec
aad
aas
sub
inc
ja
in
mov
test
jg
bound
adc
and
mov
push
cmc
outs
pop
outs
push
lods
xchg
xchg
add
push
hlt
gs
test
push
xchg
mov
mov
xchg
ss
mov
and
jo
inc
sahf
movs
les
scas
cmps
les
mov
xor
repz
out
inc
mov
(bad)
xchg
scas
fiadd
(bad)
fst
mov
push
(bad)
mov
in
repz
ror
fbstp
adc
xor
sbb
xor
and
adc
and
sbb
sar
inc
adc
adc
and
add
sub
aas
movs
and
cmps
aaa
daa
add
pop
loopne
aad
xor
push
(bad)
pop
push
jbe
and
outs
lds
pop
(bad)
je
fs
add
push
outs
aad
aas
div
mov
test
inc
in
sysret
out
addr16
dec
mov
inc
cmc
push
pop
inc
push
test
lods
add
push
mov
mov
mov
mov
mov
mov
jne
xchg
in
adc
xchg
mov
and
jo
inc
mov
iret
cdq
es
pusha
xchg
push
xor
push
(bad)
xlat
test
std
inc
(bad)
out
into
add
xor
iret
mov
lahf
test
enter
ret
(bad)
fsub
out
je
and
adc
fcomp
or
add
jne
das
pop
ds
pop
rcr
sbb
jg
mov
aaa
adc
and
sub
or
dec
aad
xor
or
ins
push
popa
les
pusha
movs
dec
inc
cmp
dec
das
cmp
aam
cmp
pop
push
dec
aad
aas
push
test
in
mov
test
sbb
dec
nop
push
addr16
push
mov
inc
cmc
pop
pop
pop
push
mov
push
sti
gs
std
add
mov
inc
xchg
jne
xchg
cdq
adc
mov
cmps
and
jo
inc
test
xchg
and
mov
pusha
xchg
mov
xor
out
in
mov
(bad)
nop
scas
inc
(bad)
cmc
push
leave
add
xor
out
fnstenv
neg
shl
aad
test
(bad)
loopne
repz
je
and
adc
fistp
test
in
add
sbb
daa
pop
es
or
add
sbb
cmp
movs
sub
and
or
mov
loopne
aad
xor
cs
jb
jae
inc
nop
popa
movs
or
lds
data16
pusha
inc
jno
push
add
push
imul
inc
ja
in
mov
test
in
lsl
outs
addr16
hlt
jbe
arpl
inc
pop
push
push
movs
xchg
test
scas
gs
pushf
add
add
jne
xchg
mov
movs
mov
and
jo
inc
mov
mov
mov
cdq
xor
pusha
mov
xor
in
call
and
mov
(bad)
push
mov
fist
mov
xchg
fs
xor
add
out
aad
fucom
fbstp
loop
out
cmc
jne
lahf
(bad)
xchg
xor
cmp
cmp
and
sub
cmp
push
rcl
push
adc
xor
sub
and
and
sbb
add
adc
pop
aad
xor
adc
push
push
je
pop
nop
cmp
pop
das
push
(bad)
pusha
inc
addr16
add
push
popa
aad
aas
pop
neg
adc
push
mov
test
pop
in
nop
push
addr16
hlt
push
mov
or
jp
ins
push
mov
push
xchg
test
mov
mov
inc
mov
adc
mov
(bad)
inc
movs
movs
mov
cmps
cmps
mov
nop
pusha
movs
push
cdq
mov
xor
hlt
xlat
repnz
icebp
adc
and
xchg
scas
mov
push
iret
add
xor
idiv
sahf
mov
enter
fsub
(bad)
sti
data16
(bad)
je
and
adc
fcomp
aaa
test
add
push
add
jg
xor
and
adc
adc
es
sub
dec
cmp
xor
push
mov
loopne
aad
xor
or
push
push
popa
les
nop
movs
dec
inc
cmp
or
pop
(bad)
arpl
aam
and
aas
jge
inc
ja
in
mov
test
in
unpckhps
push
addr16
hlt
push
mov
inc
cmc
inc
pop
add
add
push
cmc
gs
test
push
mov
jne
xchg
mov
mov
mov
and
jo
inc
xchg
movs
fisub
xchg
fst
mov
xor
lock
int
mov
(bad)
nop
scas
inc
mov
xor
ret
jbe
imul
fs
xor
add
mov
call
je
and
adc
out
(bad)
xchg
xor
jg
adc
push
in
add
sbb
imul
cmc
or
jg
mov
aaa
adc
and
add
movs
add
cmps
push
daa
push
mov
loopne
aad
xor
and
gs
les
arpl
dec
das
pop
(bad)
pusha
inc
fs
add
push
ins
aad
aas
push
imul
dec
in
mov
test
pop
in
cmove
inc
addr16
hlt
push
pop
xchg
jnp
or
pop
pop
outs
push
adc
gs
stos
add
mov
inc
cmps
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
xchg
and
mov
pusha
movs
push
xchg
mov
xor
jmp
and
loopne
fiadd
(bad)
scas
push
out
lds
(bad)
mov
cmc
fs
xor
add
aad
jmp
fucom
lds
clc
adc
mov
pop
add
in
add
xchg
pop
cmp
adc
cs
aaa
cmp
and
sbb
ins
and
and
or
cmp
daa
xor
add
les
ins
movs
adc
dec
lds
(bad)
(bad)
jo
das
aam
add
push
arpl
inc
aas
js
push
ja
in
mov
test
add
inc
cmovns
pop
addr16
adc
push
cmc
pop
pop
pop
push
lods
xchg
scas
add
push
repnz
mov
fucomip
cmc
push
scas
xchg
adc
lods
and
jo
inc
jmp
mov
stc
cmps
mov
xchg
pusha
cwde
push
mov
fistp
inc
mov
lds
inc
inc
in
fadd
stos
xor
(bad)
mov
out
xlat
xor
add
icebp
(bad)
cld
data16
shl
les
scas
lahf
cmc
xchg
xor
aaa
test
in
add
jg
xor
cs
or
sbb
sub
sub
sbb
adc
xor
push
movs
es
and
or
inc
aad
xor
or
ins
push
outs
les
jo
dec
inc
pop
lds
cmp
inc
inc
ins
aam
add
push
imul
jbe
jne
push
mov
test
sbb
fs
inc
addr16
hlt
push
mov
or
bound
inc
push
fist
hlt
gs
test
add
test
mov
adc
push
mov
and
loopne
xor
xchg
push
test
mov
inc
int
repz
cmc
scas
leave
inc
aam
out
jmp
mov
push
ret
jbe
imul
shl
iret
add
ret
(bad)
out
je
and
adc
aad
lds
ins
rcr
in
add
and
xor
es
xadd
cmc
add
jg
mov
aaa
adc
and
cmp
sbb
aas
mov
loopne
aad
xor
or
addr16
imul
dec
inc
xor
outs
das
dec
(bad)
jne
fs
or
push
dec
aad
aas
imul
jne
popa
test
gs
in
(bad)
out
addr16
hlt
ins
mov
dec
cmc
jle
outs
push
mov
push
icebp
gs
push
scas
xchg
jne
xchg
mov
movs
mov
and
jo
inc
scas
movs
and
cmps
mov
nop
pusha
mov
xor
hlt
xlat
jmp
and
ret
inc
loop
out
push
mov
in
aad
lods
push
hlt
mov
loop
std
xor
add
ror
fdiv
fist
fstp
test
or
push
add
daa
xchg
pop
sbb
adc
adc
sub
shld
push
lds
and
and
xor
pop
aad
xor
pop
(bad)
push
push
jbe
gs
ins
movs
or
das
dec
(bad)
jnp
jg
popa
or
push
jl
js
push
test
in
mov
test
push
in
packsswb
jnp
inc
hlt
adc
push
xchg
ss
cmc
pop
pop
push
add
push
cmc
gs
test
push
cmps
xchg
jne
xchg
adc
mov
and
jo
inc
test
(bad)
xchg
cmps
call
mov
xor
hlt
xlat
fild
leave
and
xchg
scas
mov
push
mov
aad
push
ret
mov
into
xlat
xor
add
test
rcl
lahf
repnz
sub
aaa
test
or
push
add
and
or
adc
sub
sub
sbb
mov
aaa
or
and
pop
cmps
adc
loopne
aad
xor
push
(bad)
outs
push
xor
movs
jns
pop
lds
pop
(bad)
jns
addr16
sbb
push
das
aad
aas
ins
test
in
mov
test
in
cmovne
push
addr16
hlt
dec
mov
dec
cmc
push
pop
pop
push
mov
push
mov
test
push
xchg
xchg
jne
xchg
mov
mov
jo
inc
test
xchg
and
and
lea
retf
xlat
lock
mov
(bad)
nop
scas
cli
inc
sti
(bad)
cld
push
rol
retf
aad
push
clc
mov
loopne
out
xor
add
loope
enter
les
fist
scas
lahf
call
test
shl
in
add
daa
xchg
es
or
adc
and
movs
add
adc
movs
adc
daa
cmp
pop
loopne
aad
xor
xor
jl
jo
xchg
jae
dec
inc
and
push
jns
ja
outs
aam
add
push
outs
aad
aas
push
not
dec
in
mov
test
pop
in
(bad)
out
addr16
or
or
push
test
add
in
xchg
pushf
push
test
mov
adc
icebp
mov
and
jo
inc
xchg
movs
pushf
and
lods
cmps
xchg
pusha
xchg
push
mov
xor
xlat
aad
lods
adc
and
xchg
scas
fadd
(bad)
stc
push
retf
add
push
hlt
mov
out
fs
xor
gs
pop
je
and
adc
fcomp
xor
and
add
and
sub
cmp
or
ds
aaa
aas
movs
pop
lock
cs
adc
mov
loopne
aad
xor
or
les
nop
ins
movs
push
inc
dec
lds
pop
mov
aam
and
pop
push
dec
aad
aas
push
test
in
mov
test
push
in
pcmpeqw
push
addr16
hlt
jno
jg
aaa
jne
cmc
pop
pop
outs
push
fist
hlt
lods
test
push
cmps
xchg
test
out
adc
mov
scas
and
jo
inc
jmp
es
cmps
(bad)
xor
pusha
xchg
push
xor
test
repnz
shr
push
jmp
cmps
xor
cmp
fs
xor
add
ror
into
je
and
adc
loop
mov
and
sbb
or
outs
add
xor
adc
adc
push
mov
aaa
sub
lds
and
and
or
dec
aad
xor
adc
push
push
popa
les
nop
pop
movs
dec
inc
jl
dec
das
cmp
aam
add
push
inc
aad
aas
and
inc
ja
in
mov
test
push
in
nop
ja
ja
push
mov
or
popw
push
push
adc
gs
pushf
add
into
xchg
jne
xchg
stos
adc
(bad)
mov
and
jo
inc
xchg
movs
fldenv
mov
pusha
xchg
push
mov
fbstp
inc
mov
korb
scas
mov
push
leave
add
push
fdivr
shl
loope
lock
gs
leave
data16
in
je
and
adc
rcr
jno
xor
jne
or
and
or
add
xchg
xor
mov
aaa
push
movs
xor
adc
movs
sbb
daa
sbb
adc
pop
aad
xor
es
adc
les
nop
jae
dec
inc
lds
push
(bad)
push
inc
pop
aam
and
push
pop
aad
aas
push
idiv
in
mov
test
in
pcmpeqd
inc
addr16
hlt
inc
mov
dec
cmc
pop
pop
gs
leave
xchg
test
gs
push
cmps
xchg
scas
xchg
call
ss
mov
and
jo
inc
lods
movs
fbld
xchg
cmps
shl
fst
mov
xor
not
out
inc
lods
adc
and
sahf
scas
leave
inc
aad
stc
push
repnz
xor
cmp
in
add
int
fsub
out
je
and
adc
fstp
xor
daa
ror
in
add
and
or
adc
pop
mov
aaa
or
and
sbb
adc
pop
aad
xor
cmp
push
push
xor
and
pop
lds
das
pop
(bad)
je
jns
ja
jno
imul
test
in
mov
test
sbb
outs
sysret
out
addr16
hlt
ins
mov
push
cmc
addr16
or
adc
mov
mov
adc
inc
mov
adc
test
xchg
and
jo
inc
out
fsub
and
stos
xor
hlt
xlat
lock
ficom
leave
and
fisubr
mov
xor
sar
xchg
shl
lds
in
out
(bad)
je
and
adc
ficomp
das
test
sar
in
add
jnp
push
pop
sbb
or
and
xchg
movq
mov
aaa
or
and
daa
cmps
sbb
loopne
aad
xor
adc
jbe
outs
les
jae
jl
jb
push
das
inc
(bad)
push
inc
addr16
xor
push
das
aad
aas
push
test
in
mov
test
inc
in
andps
inc
addr16
hlt
push
mov
or
pop
pop
outs
push
fist
mul
test
add
mov
inc
mov
adc
mov
mov
mov
iret
mov
mov
pusha
mov
xor
lock
loope
ficom
(bad)
xchg
scas
mov
push
retf
xor
test
xchg
fs
xor
add
mov
leave
data16
out
je
and
adc
int
lds
ins
shl
in
add
and
adc
add
xchg
sbb
mov
aaa
movs
pop
lock
lds
adc
sbb
inc
mov
loopne
aad
xor
adc
les
nop
movs
jne
jnp
push
das
pop
(bad)
jo
inc
aam
xor
push
ins
aad
aas
xor
push
ja
in
mov
test
pop
in
pcmpeqb
es
hlt
push
mov
or
push
lods
xchg
xchg
add
push
mul
test
ret
adc
inc
mov
adc
xchg
mov
and
jo
inc
mov
test
xchg
cmps
cdq
xor
pusha
adc
fisttp
mov
(bad)
xchg
scas
mov
push
call
aad
push
pushf
mov
xchg
fs
xor
add
in
jecxz
fucom
(bad)
fcom
mov
pop
or
jnp
add
test
xchg
pop
popa
xchg
shl
sbb
mov
aaa
sub
pop
lock
adc
add
xor
loopne
aad
xor
adc
les
inc
movs
adc
jno
inc
das
inc
(bad)
jae
and
inc
add
push
pop
aad
aas
dec
not
push
in
mov
test
push
in
(bad)
out
addr16
hlt
dec
mov
dec
cmc
pop
pop
push
add
push
hlt
lea
pushf
push
ret
adc
inc
mov
adc
repnz
and
jo
inc
out
xchg
and
xchg
cmps
movs
xor
pusha
xchg
push
mov
mov
xchg
xlat
mov
mov
lds
inc
inc
(bad)
push
std
add
xor
std
mov
xchg
fs
xor
add
lods
(bad)
out
je
and
jne
lahf
lds
ins
rcr
in
add
xchg
pop
ds
or
sbb
sbb
jg
mov
aaa
dec
movs
adc
push
lds
and
sub
add
dec
aad
xor
push
(bad)
dec
push
inc
les
jno
push
das
je
arpl
aam
add
push
and
push
aas
ins
test
in
mov
test
jg
pop
cmovbe
push
addr16
hlt
push
mov
pmaddwd
dec
push
adc
mov
inc
mov
inc
mov
adc
mov
test
jmp
xchg
and
and
mov
push
jmp
and
std
scas
loop
out
in
leave
add
xor
lock
shl
loope
out
in
gs
enter
cli
je
and
adc
fstp
sub
and
cmp
adc
and
adc
adc
xchg
push
jg
mov
aaa
push
movs
cs
addr16
or
pop
loopne
aad
xor
sub
adc
les
nop
movs
dec
inc
inc
lds
das
pop
(bad)
push
inc
fs
adc
push
arpl
pop
aas
sub
dec
ja
in
mov
test
push
in
(bad)
out
addr16
xchg
jns
adc
pop
pop
js
mov
push
mul
test
push
mov
sahf
adc
inc
movs
jne
xchg
jmp
movs
mov
and
jo
inc
mov
mov
es
cmps
cdq
xor
pusha
movs
push
cli
mov
xor
(bad)
xlat
mov
in
inc
mov
stc
push
mov
cmps
xor
iret
mov
xchg
xor
add
jmp
out
je
and
adc
loop
retf
xchg
sub
test
and
xor
and
push
rcl
push
adc
cmp
movs
adc
pop
lds
adc
add
loopne
aad
xor
add
les
jb
outs
inc
dec
lds
and
jae
jns
imul
aad
aas
push
mul
push
in
mov
test
gs
sysret
out
addr16
xchg
dec
jne
cmc
pop
pop
pop
push
mov
scas
add
push
cmc
mov
mov
mov
inc
cdq
jne
xchg
out
adc
mov
mov
lods
movs
xchg
and
xchg
cmps
les
pusha
rcl
iret
xor
cld
xlat
test
fiadd
scas
mov
push
leave
add
push
loope
(bad)
jbe
test
gs
cdq
data16
and
adc
hlt
lahf
mov
(bad)
shl
in
add
and
or
pop
cmc
or
jg
mov
aaa
and
and
or
cmp
xor
and
push
push
push
jb
inc
movs
dec
inc
pop
lds
pop
(bad)
jl
outs
aam
xor
push
das
aad
aas
sub
dec
ja
in
mov
test
push
in
lsl
push
addr16
dec
mov
inc
cmc
inc
pop
jae
fist
mov
mov
mov
adc
inc
mov
adc
movs
mov
and
jo
inc
lock
frstor
test
xchg
push
lods
mov
xor
call
adc
and
nop
scas
mov
push
test
loope
(bad)
mov
shl
rol
ror
les
loope
mov
lahf
call
test
in
add
xor
xchg
push
sar
adc
pop
mov
aaa
sbb
and
and
pop
cmps
sbb
sbb
pop
loopne
aad
xor
es
jl
imul
push
inc
cmp
bound
pop
(bad)
ja
jno
pop
sub
arpl
aad
aas
jle
dec
ja
in
mov
test
in
unpckhps
jge
jnp
push
mov
je
cmp
inc
push
lods
xchg
cmps
add
push
in
gs
test
push
add
jne
xchg
mov
movs
mov
and
jo
inc
mov
mov
mov
pusha
popf
push
clc
mov
xor
rcl
in
inc
mov
(bad)
(bad)
std
push
call
aad
push
sar
leave
xor
add
fisttp
shl
(bad)
adc
ficomp
xor
add
and
push
rcr
or
add
movs
pop
lock
and
and
adc
add
daa
xor
adc
les
ins
movs
outs
inc
jae
adc
outs
mov
jg
dec
sbb
push
cs
aas
jle
pop
ja
in
mov
test
pop
in
addps
pop
addr16
hlt
push
mov
or
pop
pop
inc
push
test
lea
push
test
aam
cli
add
mov
inc
mov
xchg
hlt
adc
xchg
mov
and
jo
inc
test
iret
cdq
es
sahf
xor
pusha
xchg
mov
xor
hlt
xlat
jmp
(bad)
aad
mov
push
int
movs
xor
ret
mov
xlat
fs
fadd
loop
leave
data16
out
je
and
jne
lahf
fst
xor
and
dec
add
sub
and
sbb
sbb
jg
mov
aaa
or
adc
sbb
xor
adc
mov
loopne
aad
xor
push
(bad)
pop
push
popa
les
ins
movs
pop
inc
inc
lds
pop
(bad)
push
inc
pop
aam
add
das
aad
aas
test
in
mov
test
pop
in
nop
bound
hlt
push
mov
jno
jb
push
add
push
hlt
gs
test
push
mov
lahf
adc
inc
mov
adc
xchg
mov
and
jo
inc
mov
shl
cmps
scas
xor
pusha
xchg
mov
xor
jmp
fadd
xlat
and
xchg
scas
call
push
jmp
mov
push
pushf
mov
(bad)
shl
retf
add
mov
out
(bad)
les
rcl
lahf
mov
arpl
add
adc
and
xor
sbb
or
cmp
movs
and
sbb
xor
sub
xor
xor
sbb
adc
les
nop
arpl
jle
ds
ja
inc
aam
adc
push
and
inc
aas
push
test
in
mov
test
push
bound
pop
out
addr16
hlt
dec
mov
pmaddwd
push
push
lods
xchg
test
gs
test
push
pop
mov
adc
repz
and
jo
inc
nop
movs
fbld
xchg
cmps
xor
retf
mov
xor
ret
inc
lods
adc
and
imul
iret
push
hlt
add
xor
sar
fs
xor
add
dec
shl
les
iret
lahf
aam
xor
test
and
dec
add
cmp
xchg
add
sbb
sub
or
movs
pop
lock
lds
adc
jge
add
cmp
xor
sbb
push
push
xor
and
imul
jae
jg
push
or
push
dec
aad
aas
pop
test
in
mov
test
pop
in
cmovns
push
addr16
mov
pop
cmc
pop
pop
push
add
push
jmp
add
scas
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
mov
es
cmps
mov
xchg
pusha
adc
mov
push
cmc
xlat
out
fcom
jecxz
rol
sti
inc
xchg
scas
mov
push
into
add
xor
stc
mov
lds
xchg
add
loope
loop
mul
(bad)
je
and
adc
les
aaa
test
shr
test
and
xchg
or
sub
sbb
push
mov
aaa
and
lds
and
inc
cmps
(bad)
push
mov
loopne
aad
xor
inc
(bad)
push
push
outs
les
inc
lds
das
pop
(bad)
jb
inc
aam
xor
push
ins
aad
aas
inc
imul
in
mov
test
gs
unpckhps
jae
ja
push
mov
inc
cmc
inc
pop
outs
push
adc
gs
test
add
xchg
xchg
jne
xchg
test
ss
mov
and
jo
inc
xchg
movs
and
cmps
ret
xor
pusha
xchg
push
cmps
mov
xor
loopne
repnz
sti
adc
and
xchg
scas
(bad)
inc
ffree
icebp
push
xlat
add
push
sar
aam
shl
(bad)
add
ror
fnstenv
cld
adc
fstp
sub
sub
add
jge
daa
pop
push
xchg
or
adc
xchg
movq
mov
aaa
pop
movs
sbb
adc
movs
adc
cmps
sbb
push
mov
loopne
aad
xor
adc
jl
jb
dec
nop
dec
movs
push
inc
cmp
(bad)
arpl
aam
cmp
push
and
dec
aas
jno
xor
in
mov
test
pop
in
cmovo
inc
addr16
push
mov
pop
cmc
pop
pop
ins
push
lods
xchg
test
gs
test
add
mov
inc
mov
adc
mov
add
fbld
xchg
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
in
lods
inc
lods
adc
and
sahf
scas
mov
push
ret
add
push
cld
mov
(bad)
shl
add
jmp
fisub
out
je
and
jne
lahf
rcl
add
or
adc
or
inc
pop
cmp
adc
adc
adc
sub
cmp
sbb
adc
pop
aad
xor
push
(bad)
push
nop
outs
movs
adc
jno
dec
das
pop
(bad)
je
pop
aam
adc
push
arpl
inc
aas
je
pop
ja
in
mov
test
push
out
addr16
dec
mov
inc
cmc
outs
pop
push
push
xchg
xchg
repz
push
cmc
gs
add
rol
jne
xchg
out
adc
sahf
mov
and
jo
inc
movs
movs
lods
and
and
leave
xor
(bad)
xlat
test
mov
inc
inc
lds
mov
push
cmp
fs
xor
add
loop
int
out
(bad)
je
and
adc
out
lds
pusha
rcl
test
daa
xchg
pop
sub
and
adc
or
adc
push
lds
and
sub
adc
xor
sbb
pop
push
popa
les
jnp
dec
inc
jb
ins
das
dec
(bad)
arpl
aam
add
push
dec
aad
aas
pop
test
in
mov
test
sbb
imul
out
addr16
imul
cmc
bound
inc
push
adc
gs
inc
mov
inc
mov
adc
mov
add
xchg
and
and
call
xlat
hlt
inc
mov
lds
inc
clc
(bad)
fst
mov
push
ret
jbe
imul
shl
enter
pushf
fisttp
(bad)
je
and
jne
lahf
fcom
pusha
rol
in
add
and
adc
adc
xchg
add
aaa
adc
ds
movs
sbb
daa
pop
mov
loopne
aad
xor
push
(bad)
fs
ja
cmp
imul
jg
fs
sub
sbb
aad
aas
outs
neg
jg
jns
test
pop
in
unpckhps
inc
addr16
push
mov
pop
cmc
pop
pop
dec
push
test
push
mul
test
push
cdq
xchg
jne
xchg
mov
cmp
mov
mov
fwait
movs
shl
cmps
cmps
xor
pusha
nop
push
clc
mov
xor
in
in
inc
rcl
lock
ret
inc
ffreep
iret
push
aam
loop
aad
lods
push
ret
jbe
test
add
mov
out
je
and
adc
loop
xchg
xchg
cs
imul
outs
add
sub
pop
cmc
and
es
aaa
pop
movs
cmp
sbb
imul
aaa
mov
loopne
aad
xor
adc
push
nop
dec
movs
adc
jno
jae
push
(bad)
jae
outs
aam
or
push
pop
aad
aas
pop
test
in
mov
test
adc
push
cmovns
push
addr16
hlt
dec
mov
inc
cmc
inc
pop
dec
push
test
mov
mov
mov
fwait
xchg
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
xchg
and
xchg
cmps
call
mov
xor
hlt
xlat
out
inc
les
leave
and
xchg
scas
mov
push
enter
cwde
aad
push
cwde
mov
fbld
enter
cld
gs
enter
(bad)
je
and
jne
lahf
lds
and
sbb
adc
outs
and
adc
or
add
or
adc
xor
sub
cmp
and
pop
mov
loopne
aad
xor
push
(bad)
push
push
imul
dec
inc
pop
lds
dec
mov
das
aam
or
push
das
aad
aas
push
test
in
mov
test
popa
in
lsl
inc
addr16
hlt
push
mov
inc
cmc
pop
pop
dec
push
adc
gs
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
xchg
movs
xchg
and
and
lea
in
xlat
hlt
inc
mov
(bad)
nop
scas
mov
push
leave
add
push
ret
jbe
not
xlat
xor
add
out
(bad)
popf
retw
je
and
adc
fcomp
sub
add
and
adc
sbb
aas
adc
push
push
aaa
or
and
push
cmps
sbb
sbb
pavgb
and
adc
jle
imul
pop
inc
cmp
push
das
daa
(bad)
jne
inc
aam
and
push
push
push
aad
aas
push
mul
dec
in
mov
test
in
cmovle
jge
pop
hlt
push
mov
or
push
lods
xchg
mov
lea
gs
test
push
sahf
xchg
jne
xchg
cwde
adc
sahf
mov
and
jo
inc
mov
cwde
and
xchg
cmps
popf
xor
pusha
xchg
push
clc
mov
xor
lock
out
inc
mov
korw
scas
hlt
inc
aad
ret
add
push
cmp
lds
fisttp
fbstp
cli
adc
mov
pop
jno
jnp
and
adc
outs
or
xchg
pop
shl
adc
sbb
pop
lock
and
dec
and
mov
loopne
aad
xor
pop
(bad)
pop
push
imul
outs
inc
inc
lds
push
(bad)
pop
inc
and
dec
cmp
push
jp
add
ja
in
mov
test
push
in
packsswb
push
addr16
hlt
jb
inc
xchg
ss
cmc
push
pop
push
add
push
repnz
call
inc
mov
adc
xchg
mov
and
jo
inc
jmp
es
pusha
ret
push
xor
out
inc
loop
leave
and
xchg
scas
hlt
inc
inc
out
retf
add
push
cmp
xlat
xor
add
loop
retf
out
je
and
adc
loopne
aad
and
and
add
sub
add
cmp
pop
adc
cmp
adc
and
add
or
dec
aad
xor
pop
(bad)
push
push
popa
les
nop
dec
movs
dec
inc
xor
push
das
push
(bad)
push
inc
popa
aam
add
push
inc
aad
aas
push
test
in
mov
test
sbb
out
ins
hlt
push
mov
inc
cmc
pop
pop
pop
push
adc
lea
test
xchg
xchg
jne
xchg
mov
ss
cmps
and
jo
inc
mov
xchg
and
and
mov
xchg
fistp
inc
mov
(bad)
nop
scas
lds
(bad)
aad
call
aad
push
clc
mov
in
shl
ret
add
iret
(bad)
fldenv
out
je
and
adc
call
sub
in
add
aas
xchg
pop
es
or
adc
push
mov
aaa
adc
cs
outs
and
add
pop
loopne
aad
xor
cmp
dec
push
inc
les
inc
movs
push
inc
pop
lds
das
pop
(bad)
push
inc
data16
add
push
ins
aad
aas
jbe
dec
ja
in
mov
test
jp
popa
nop
inc
addr16
hlt
dec
mov
or
push
mov
push
in
gs
test
push
mov
inc
mov
adc
mov
cmps
and
jo
inc
call
es
cmps
xor
lahf
push
mov
stos
push
into
xlat
out
inc
std
adc
inc
lahf
scas
mov
push
aam
mov
push
lds
leave
fs
xor
add
mov
retf
out
je
and
adc
fcomp
xor
sub
sbb
cmp
jg
push
outs
jbe
and
pop
cmc
push
adc
outs
mov
aaa
pop
movs
pop
lock
cmp
and
adc
sbb
mov
pop
adc
les
nop
movs
je
jno
adc
push
(bad)
jae
jge
cmp
push
pop
aad
aas
sub
xor
mov
test
outs
in
movd
inc
ins
hlt
ja
push
xchg
ss
cmc
pop
pop
push
add
push
cmc
gs
out
call
inc
xchg
jne
xchg
xchg
adc
mov
mov
mov
mov
scas
cmps
sahf
xor
pusha
test
mov
fistp
inc
loop
into
and
xchg
scas
test
in
mov
cli
xor
(bad)
mov
into
fs
xor
add
out
(bad)
out
je
and
adc
hlt
lahf
fcom
or
add
adc
aaa
pop
sbb
cmc
es
aas
mov
aaa
pop
movs
adc
or
xor
pop
movs
ins
dec
sbb
or
adc
or
pop
cmp
dec
push
jno
sub
inc
dec
lds
pop
(bad)
gs
pusha
aam
add
push
jl
jl
push
test
in
mov
test
gs
popa
pcmpgtb
push
addr16
push
mov
jno
pop
pop
imul
xchg
mov
sahf
push
movs
gs
movs
add
popf
xchg
adc
inc
mov
adc
mov
mov
scas
movs
mov
es
cmps
mov
push
sti
mov
xor
cmc
xlat
int3
inc
ret
and
in
mov
push
out
enter
repnz
fdivr
into
shl
retf
add
mov
lahf
data16
les
call
mov
pop
sub
ins
rcl
in
add
push
xchg
pop
adc
adc
das
mov
aaa
or
and
cmp
xor
adc
xor
or
les
nop
movs
dec
inc
lds
imul
push
push
jge
inc
aas
push
idiv
ja
in
mov
test
in
cmovs
inc
addr16
hlt
dec
mov
or
popw
outs
push
stos
xchg
pop
push
mul
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
scas
movs
lea
xchg
cmps
cdq
xor
pusha
adc
enter
lea
xlat
jecxz
lods
adc
and
mov
stc
push
loope
shl
sar
leave
fs
xor
add
mov
enter
fbstp
jmp
lahf
les
jnp
sbb
sub
adc
xchg
jo
pop
cmc
inc
adc
ds
aaa
adc
push
lock
movs
sbb
daa
inc
mov
loopne
aad
xor
adc
fs
jbe
ins
nop
push
movs
adc
xor
jae
push
(bad)
jae
push
aam
add
ins
aad
aas
push
imul
in
mov
test
inc
in
sysret
out
addr16
hlt
bound
push
push
adc
gs
lahf
add
lods
xchg
adc
inc
popf
jne
xchg
mov
push
mov
mov
pushf
and
xchg
cmps
call
mov
xor
hlt
xlat
lds
into
and
(bad)
scas
mov
push
int
mov
push
lds
into
lds
rol
loop
fsub
out
je
and
adc
icebp
lahf
leave
xchg
and
test
rcr
in
add
jnp
aaa
pop
sub
daa
rcr
sbb
add
movs
pop
lock
push
and
and
sub
xor
pop
(bad)
push
outs
les
dec
movs
je
lds
push
mov
fs
and
dec
push
push
pop
aas
push
test
ins
mov
test
gs
in
cmovb
push
addr16
hlt
imul
ins
push
xchg
xchg
mov
sti
push
stos
gs
std
add
mov
mov
out
inc
mov
adc
stos
mov
and
jo
inc
mov
popf
and
cwde
cmps
test
pusha
lahf
push
test
mov
inc
mov
(bad)
(bad)
scas
mov
push
leave
add
xor
loope
in
jbe
not
add
mov
sahf
data16
xchg
stc
adc
aad
cli
xchg
pop
pop
and
add
sub
adc
xor
sbb
cmp
movs
xor
sbb
addr16
pop
cmps
sbb
sbb
push
loopne
aad
xor
cmp
ins
push
popa
les
xor
dec
inc
dec
lds
das
pop
mov
aam
add
push
ins
aad
aas
jp
dec
ja
in
mov
test
in
punpckldq
inc
addr16
inc
mov
or
push
rcl
lods
gs
test
push
mov
inc
sahf
jne
xchg
call
movs
mov
and
jo
inc
test
xchg
cdq
cmps
cdq
xor
pusha
rcl
xor
xlat
lds
in
and
xchg
scas
clc
inc
aad
call
push
cmp
leave
add
(bad)
(bad)
fisub
out
je
and
adc
(bad)
lahf
retf
xchg
and
or
add
sub
xadd
adc
mov
aaa
daa
movs
pop
lock
or
das
cmps
data16
add
adc
xor
or
les
inc
jno
jge
push
(bad)
pop
inc
and
dec
add
push
arpl
inc
aas
das
mul
push
in
mov
test
sbb
xor
pop
out
outs
hlt
dec
mov
inc
cmc
pop
pop
dec
push
test
stos
add
push
xchg
mov
mov
nop
xchg
pushf
xchg
in
adc
xchg
mov
and
jo
inc
out
fbld
and
push
div
cmps
push
(bad)
xlat
into
inc
mov
(bad)
xchg
scas
mov
push
rol
xor
les
into
shl
rol
ror
lock
and
adc
fistp
imul
outs
and
xadd
add
jg
mov
aaa
pop
movs
and
sbb
es
inc
cmps
daa
daa
add
xor
push
(bad)
push
push
imul
nop
movs
jp
lds
das
jp
arpl
aam
cmp
push
pop
aad
aas
push
imul
ja
ins
mov
test
push
in
cmovp
push
addr16
hlt
dec
mov
push
push
xlat
xchg
mov
push
call
out
std
push
test
nop
jne
xchg
mov
mov
cwde
inc
scas
movs
fwait
and
cmps
cmps
mov
push
mov
fistp
inc
mov
(bad)
aam
into
inc
rol
rcl
mov
push
out
mov
shl
rol
out
leave
retw
out
je
and
adc
fstp
jne
aaa
shl
in
add
and
adc
pusha
cmc
sbb
cmp
movs
sub
and
cmps
sbb
sbb
es
aad
xor
adc
push
push
inc
les
nop
jno
push
inc
lds
das
(bad)
(bad)
inc
and
mov
push
inc
aad
aas
push
test
in
mov
test
unpckhps
pop
addr16
hlt
push
mov
or
push
mov
push
mov
add
lods
xchg
stos
xchg
mov
ss
mov
and
jo
inc
stos
movs
mov
cmps
iret
cdq
and
push
(bad)
mov
xor
jmp
and
jmp
push
repnz
push
fdivr
leave
fs
xchg
add
mov
retf
out
je
and
adc
fistp
sub
add
push
xchg
pop
and
adc
cmp
movs
sbb
sbb
cmp
and
and
inc
aad
xor
adc
les
nop
ins
movs
je
jno
adc
pusha
(bad)
jns
daa
aam
add
push
jae
inc
aas
pop
mul
push
in
mov
test
push
in
punpcklwd
push
addr16
hlt
dec
mov
jo
pop
pop
push
add
push
cmc
mov
mov
mov
mov
jne
xchg
in
adc
mov
jo
inc
mov
iret
scas
es
cmps
sahf
xor
pusha
rcl
lea
leave
xlat
inc
fsub
xchg
scas
jecxz
hlt
(bad)
hlt
push
icebp
add
xor
fdivr
into
shl
(bad)
add
enter
(bad)
out
je
and
adc
ficomp
xor
in
add
and
or
xor
sbb
jg
mov
aaa
push
movs
cmp
sbb
xor
pop
cmps
addr16
xor
aad
xor
adc
les
outs
movs
inc
inc
jno
je
popa
(bad)
inc
and
data16
push
jl
pop
aas
push
not
inc
in
mov
test
add
push
addr16
push
mov
outs
cmc
inc
pop
push
push
adc
gs
mov
mov
iret
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
cwde
es
cmps
xchg
pusha
xchg
mov
xor
icebp
xlat
cld
inc
mov
(bad)
nop
scas
loop
sti
(bad)
sti
push
into
add
push
clc
mov
(bad)
shl
retf
add
into
(bad)
stc
out
xor
int3
jne
lahf
clc
xchg
sub
sub
add
sbb
xadd
and
gs
aaa
dec
movs
and
and
aas
cmps
and
ds
loopne
aad
xor
sbb
ins
push
imul
ins
inc
jae
adc
push
(bad)
push
inc
fs
adc
ins
aad
aas
jle
dec
ja
in
mov
test
pop
in
sysret
out
addr16
hlt
push
mov
or
and
jg
mov
in
add
push
xchg
mov
add
xchg
jne
xchg
xchg
adc
mov
scas
and
jo
inc
mov
iret
test
and
push
loopne
xor
xlat
out
inc
not
lock
loopne
mov
push
repnz
xor
(bad)
mov
leave
fs
xor
add
fimul
fbstp
enter
int3
jne
lahf
not
and
add
and
or
adc
push
mov
aaa
shld
xor
dec
and
sub
and
add
aas
(bad)
push
nop
jne
adc
cmp
push
das
push
(bad)
jae
inc
aam
or
push
jp
jno
inc
test
in
mov
test
jno
lsl
addr16
hlt
outs
mov
push
cmc
and
push
push
nop
xchg
repz
push
test
xchg
test
push
into
xchg
jne
xchg
mov
cmps
mov
and
jo
inc
out
fisub
sahf
cmps
mov
xchg
pusha
xchg
push
cdq
mov
xor
hlt
xlat
hlt
inc
loop
leave
and
(bad)
scas
mov
push
scas
add
xor
fistp
lea
enter
call
data16
(bad)
je
and
adc
clc
lahf
out
xchg
xor
shl
in
add
jge
aaa
pop
cmp
adc
push
mov
aaa
push
movs
adc
or
sbb
and
sub
xor
sbb
jne
popa
les
nop
aaa
movs
dec
inc
jb
je
pusha
(bad)
arpl
aam
add
push
sub
test
in
mov
test
sbb
xor
inc
out
addr16
push
mov
inc
cmc
pop
pop
jle
adc
mov
add
xchg
jne
xchg
adc
mov
and
jo
inc
mov
fsub
(bad)
cmps
cdq
xor
pusha
xchg
push
mov
mov
push
loopne
hlt
inc
loopne
mov
(bad)
(bad)
xchg
scas
mov
push
leave
add
xor
ret
jbe
idiv
shl
enter
leave
gs
out
jecxz
les
adc
lahf
(bad)
xchg
or
sub
add
and
adc
pop
cmc
or
jg
mov
aaa
push
movs
adc
push
lds
and
adc
sbb
sbb
xor
adc
ins
push
push
les
ja
dec
inc
dec
lds
data16
pop
inc
and
mov
push
ins
aad
aas
ins
test
in
mov
test
gs
in
nop
jne
pop
hlt
push
mov
or
push
lods
xchg
lock
push
mul
test
push
pop
movs
jne
xchg
lods
adc
xchg
mov
and
jo
inc
stos
movs
mov
es
cmps
xchg
pusha
adc
scas
xor
in
xlat
test
mov
inc
rol
repz
repnz
xor
lds
leave
fs
xor
gs
retf
out
je
and
adc
into
lahf
les
arpl
and
daa
add
and
xchg
sbb
adc
sub
add
sbb
aaa
and
and
adc
pop
aad
xor
das
(bad)
outs
push
imul
jb
jnp
adc
pop
(bad)
pop
inc
jno
dec
add
(bad)
aad
aas
xor
popa
ja
in
mov
test
push
in
sysret
out
addr16
hlt
ins
mov
popa
cmc
and
jp
mov
mul
test
push
scas
xchg
jne
xchg
sahf
adc
sahf
mov
and
jo
inc
in
movs
and
cmps
sahf
xor
pusha
xchg
push
mov
fistp
inc
rcl
shl
in
rol
mov
xor
fidivr
retf
xor
add
jecxz
aam
(bad)
icebp
je
and
adc
scas
lahf
leave
xchg
adc
aaa
test
sub
push
add
and
daa
rcr
es
or
adc
pop
movs
sub
and
cmp
cmp
cmp
aad
xor
push
(bad)
ins
push
jo
inc
nop
inc
movs
push
das
cmp
jg
jne
push
and
jl
jb
push
ja
in
mov
test
sbb
bound
dec
out
addr16
hlt
push
mov
add
and
xchg
mov
call
mov
fwait
push
mov
inc
mov
adc
mov
and
movs
popf
and
xchg
cmps
xor
xchg
push
mov
(bad)
push
retf
inc
sti
adc
and
aad
out
sti
(bad)
out
leave
add
xor
sar
xchg
test
ret
add
out
xchg
out
je
and
adc
fstp
test
ja
dec
add
cmp
imul
cmc
sbb
cmp
sub
lock
movs
sbb
daa
sbb
adc
add
and
cs
jl
popa
les
nop
jo
outs
inc
jns
adc
outs
(bad)
addr16
fs
cmp
push
arpl
jb
jge
dec
ja
in
mov
test
push
in
movq
jns
jb
push
mov
or
push
lods
xchg
test
mov
loope
mov
jne
xchg
mov
ss
jo
inc
mov
iret
call
pusha
mov
xor
rcl
inc
out
shl
scas
mov
push
in
add
push
fnstcw
aam
xor
add
fisttp
iret
je
and
adc
mov
pop
sbb
xor
and
sbb
adc
adc
rol
inc
adc
adc
pop
lock
sub
inc
cmps
and
xor
xor
push
(bad)
outs
push
push
push
nop
movs
dec
inc
jno
adc
aas
(bad)
jl
inc
aam
or
push
cs
aas
dec
imul
push
in
mov
test
push
in
(bad)
out
addr16
hlt
dec
mov
or
jns
inc
push
stos
xchg
mov
gs
test
push
scas
xchg
adc
xchg
and
jo
inc
xchg
movs
scas
and
xchg
cmps
mov
push
mov
fistp
inc
rcl
iret
and
fisubr
sti
push
repz
xor
xchg
out
repnz
add
int
out
mul
mov
out
int
(bad)
jne
lahf
int
and
das
test
shr
test
pop
cs
xor
adc
push
mov
aaa
adc
and
add
add
aas
aad
xor
push
(bad)
outs
push
popa
les
jno
imul
or
outs
mov
jns
dec
add
push
das
aad
aas
sub
inc
ja
in
mov
test
adc
gs
push
addr16
hlt
mov
ja
pop
pop
outs
push
xchg
xchg
mov
sti
push
scas
gs
std
add
mov
inc
mov
adc
xor
inc
mov
pushf
and
and
mov
push
call
adc
and
fild
iret
push
into
add
xor
in
(bad)
jbe
not
fs
enter
fisub
(bad)
xchg
mov
je
and
adc
ficomp
sub
adc
and
adc
daa
xchg
pop
cmp
adc
or
adc
and
and
cmp
mov
loopne
aad
xor
xor
push
push
inc
les
outs
movs
jle
cmp
adc
pop
(bad)
push
inc
fs
xor
push
jbe
dec
aas
jle
dec
ja
in
mov
test
gs
popa
andnps
outs
addr16
hlt
push
mov
jb
pop
pop
push
add
push
mov
add
mov
inc
mov
adc
stos
mov
and
jo
inc
lods
movs
fisub
xchg
cmps
xchg
pusha
xchg
push
cli
mov
xor
loop
out
inc
lods
adc
inc
xchg
scas
fiadd
(bad)
aam
inc
fnsave
(bad)
mov
aad
shl
sti
add
mov
and
test
(bad)
adc
loop
les
jnp
and
xor
jg
pop
outs
jne
cmp
cmp
adc
ds
aaa
aaa
movs
pop
lock
adc
and
adc
inc
aad
xor
adc
les
nop
jb
push
inc
cmp
adc
pusha
(bad)
js
dec
aam
or
push
dec
aad
aas
push
not
push
in
mov
test
push
in
packssdw
push
addr16
hlt
ins
mov
inc
cmc
dec
pop
push
push
test
test
in
push
cmc
pop
pop
mov
inc
mov
adc
xchg
mov
and
jo
inc
out
cmps
and
out
cmps
mov
pusha
nop
push
mov
fistp
inc
in
cmc
and
xchg
scas
mov
ficom
mov
push
fdivr
into
shl
nop
add
out
(bad)
popf
data16
out
je
and
jne
lahf
hlt
xchg
push
pop
jo
rcl
in
add
and
pop
rcl
jg
mov
aaa
pop
movs
xor
pextrw
xor
pop
movs
jno
and
or
pop
aad
xor
or
push
push
dec
les
ja
inc
inc
jb
push
das
dec
(bad)
arpl
aam
add
push
push
aad
aas
push
imul
ja
in
mov
test
push
in
nop
push
addr16
hlt
arpl
jl
jp
pop
push
scas
xchg
add
std
add
mov
cmps
adc
inc
mov
adc
mov
stos
inc
mov
test
es
sahf
xor
pusha
cwde
push
mov
fild
inc
mov
(bad)
ret
scas
mov
push
leave
add
xor
pushf
mov
out
shl
retf
add
out
fisub
out
je
and
adc
out
(bad)
xchg
ds
add
ins
shl
in
add
add
sbb
pop
cmc
cmp
pop
mov
aaa
or
and
cmps
cmp
loopne
aad
xor
or
jl
xor
cmp
ins
lds
das
pop
(bad)
push
inc
fs
and
jp
push
test
in
mov
test
in
(bad)
out
addr16
hlt
inc
mov
arpl
push
pop
push
push
scas
xchg
mov
gs
std
add
mov
inc
mov
adc
pushf
mov
and
jo
inc
lods
movs
fisub
xchg
cmps
mov
push
xchg
mov
xor
out
enter
into
and
repz
cld
inc
mov
cld
push
aam
mov
push
(bad)
mov
xlat
fs
xor
add
mov
leave
jmp
shl
(bad)
adc
fstp
xor
cmp
sub
push
add
and
or
adc
cs
aaa
adc
lds
and
outs
daa
add
pop
loopne
aad
xor
aas
(bad)
push
nop
jb
jno
pop
lds
das
ins
(bad)
je
outs
aam
sbb
push
jg
add
inc
not
pusha
in
mov
test
in
sysret
out
addr16
hlt
inc
mov
pop
cmc
dec
pop
push
add
push
mov
add
xchg
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
mov
es
mov
push
mov
xchg
xor
hlt
xlat
in
inc
cmps
adc
and
xchg
scas
mov
out
(bad)
out
leave
add
push
cmc
mov
in
fs
xor
add
ror
xlat
je
and
adc
fstp
aaa
test
shl
push
add
xchg
ds
add
cmp
sbb
jg
mov
aaa
xor
and
sbb
and
xor
push
(bad)
jb
ins
les
ins
movs
dec
inc
pop
lds
das
inc
(bad)
addr16
addr16
add
push
push
test
in
mov
test
in
movq
push
addr16
hlt
arpl
dec
cmc
cmp
outs
push
rcl
in
gs
test
add
mov
inc
mov
adc
mov
jo
inc
popf
movs
xchg
and
in
cdq
xor
pusha
cmps
push
mov
test
xlat
hlt
inc
loope
(bad)
aad
aam
sti
(bad)
fist
hlt
xor
fidivr
shl
nop
add
(bad)
(bad)
jecxz
(bad)
xor
shl
lahf
(bad)
xchg
and
adc
add
sbb
add
es
push
sar
sbb
cmp
movs
sub
and
cmps
and
loopne
aad
xor
adc
inc
push
inc
les
nop
jae
jb
jns
adc
jp
jnp
data16
add
push
push
aad
aas
data16
adc
jbe
adc
in
unpckhps
ja
jl
addr16
push
jne
cmc
dec
pop
jg
lods
xchg
test
test
xchg
mov
adc
lahf
mov
and
jo
inc
out
movs
fbld
xchg
cmps
test
pusha
pushf
push
clc
mov
xor
in
xlat
out
inc
lods
adc
and
mov
stc
push
enter
vpaddsb
mov
out
fs
xor
add
fimul
fbstp
jmp
lahf
les
aas
ror
in
add
and
je
popa
cmc
sbb
ds
aaa
pop
movs
cmp
sbb
xor
and
sub
pop
aad
xor
adc
adc
les
jae
jle
lds
outs
(bad)
gs
je
push
dec
mov
push
ja
inc
aas
push
div
push
in
mov
test
pop
in
minps
pop
addr16
hlt
dec
mov
adc
and
je
adc
mov
mov
jne
xchg
mov
ss
mov
movs
movs
and
xchg
cmps
sahf
xor
pusha
(bad)
push
mov
mov
in
xlat
test
loop
in
cmps
inc
loope
cli
push
into
add
xor
repz
hlt
mov
retf
add
loope
mul
out
je
and
adc
out
(bad)
xchg
or
xor
sbb
jb
push
add
cmp
aaa
rcl
add
mov
aaa
or
and
sub
push
loopne
aad
xor
push
(bad)
push
push
pop
les
jno
je
jb
push
das
cmp
aam
add
push
and
pop
aas
push
test
in
mov
test
sbb
pop
sysret
out
addr16
hlt
push
mov
inc
cmc
pop
pop
je
adc
mov
mov
xchg
xchg
jne
xchg
xchg
adc
xchg
mov
and
jo
inc
mov
pushf
and
xchg
cmps
lods
xor
pusha
xchg
push
mov
fbld
inc
rcl
retf
and
enter
sti
(bad)
ficom
mov
push
ret
jbe
not
fs
xor
add
aam
leave
data16
in
je
and
adc
fstp
sub
jg
daa
in
add
or
rcl
push
jg
mov
aaa
adc
cs
lds
adc
sbb
ds
loopne
aad
xor
sbb
dec
push
xor
sub
dec
movs
dec
inc
jno
adc
pop
(bad)
pop
inc
pop
aam
xor
push
ins
aad
aas
outs
test
in
mov
test
arpl
sub
adc
hlt
push
mov
push
cmc
push
pop
inc
push
cmps
xchg
mov
xchg
push
mov
call
push
mov
mov
jne
xchg
mov
movs
mov
and
jo
inc
lock
pushf
and
xchg
cmps
cdq
xor
pusha
test
mov
xor
not
out
inc
rcl
shl
mov
loope
aam
mov
push
ret
mov
enter
leave
add
out
jmp
and
adc
loop
les
jnp
sbb
push
add
sbb
jbe
pop
cmc
inc
adc
ds
aaa
shld
push
lds
and
mov
loopne
aad
xor
adc
les
inc
movs
pop
inc
arpl
push
das
inc
(bad)
jle
push
aam
add
jae
inc
aas
js
inc
ja
in
mov
test
gs
nop
and
pop
hlt
dec
mov
push
push
test
scas
add
push
mov
add
add
jne
xchg
hlt
adc
pushf
mov
and
jo
inc
mov
iret
xchg
es
cmps
xchg
pusha
mov
xor
hlt
xlat
mov
loop
leave
and
xchg
scas
sti
inc
ffree
out
ret
add
xor
(bad)
mov
into
fs
xor
gs
loope
(bad)
je
and
jne
lahf
jmp
and
aaa
test
shl
in
add
add
and
or
or
pop
cmc
and
jg
mov
aaa
push
movs
pop
lock
xor
pop
movs
je
sbb
adc
or
js
add
ins
push
jne
jns
jo
dec
inc
inc
lds
pop
(bad)
push
inc
ja
push
or
push
das
aad
aas
jne
dec
ja
in
mov
test
adc
jle
add
ja
pop
hlt
jge
add
jbe
outs
push
xchg
in
gs
std
add
mov
inc
mov
adc
icebp
mov
and
jo
inc
mov
(bad)
and
mov
push
rcl
test
and
mov
icebp
push
ret
xor
fdivr
shl
(bad)
add
ror
bnd
and
adc
fistp
das
test
sar
in
add
sub
adc
adc
xchg
push
jg
mov
aaa
adc
cs
lds
adc
adc
adc
xor
dec
(bad)
jg
les
jb
or
lds
das
ins
(bad)
ja
fs
adc
push
jno
jne
push
test
in
mov
test
pop
in
unpcklps
gs
hlt
push
mov
or
push
lods
xchg
stos
add
push
mul
test
push
test
stos
jne
xchg
stos
adc
movs
mov
and
jo
inc
mov
call
pusha
mov
xor
cld
xlat
out
inc
out
adc
and
xchg
scas
les
(bad)
stc
push
in
add
push
cld
mov
xlat
fs
xor
add
fisttp
fbstp
out
int
ret
jne
lahf
out
xchg
xor
sub
add
jbe
sbb
adc
imul
lock
lds
and
sbb
xor
pop
aad
xor
das
(bad)
push
push
push
movs
dec
inc
ins
lds
das
pop
(bad)
jge
jg
push
and
gs
ins
neg
or
ins
mov
test
push
in
andps
and
inc
hlt
push
mov
jne
inc
pop
ins
push
mov
scas
add
push
mov
add
mov
inc
mov
adc
mov
mov
out
fisub
and
push
mov
fistp
inc
in
adc
and
retf
inc
cld
(bad)
int3
push
lds
icebp
xor
loope
out
jbe
mul
xlat
xor
add
loope
mul
out
je
and
adc
fstp
aaa
test
rcl
in
add
and
or
xor
sbb
jg
mov
aaa
adc
and
cmps
jge
pop
mov
loopne
aad
xor
push
(bad)
ins
push
inc
les
cmp
pop
das
dec
(bad)
push
inc
addr16
and
aas
push
test
in
mov
test
in
unpcklps
dec
addr16
push
mov
jg
bound
ins
push
mov
mov
mov
mov
adc
inc
lahf
jne
xchg
mov
xor
inc
sahf
movs
xchg
and
mov
sahf
xor
pusha
xchg
push
div
mov
retf
inc
not
retf
and
xchg
scas
mov
push
retf
xor
fidivr
aam
fwait
xor
add
mov
leave
data16
shl
adc
lds
push
test
rol
test
outs
push
xchg
pop
cmp
adc
or
push
aaa
dec
movs
and
sbb
sub
adc
sbb
cmp
xor
push
(bad)
inc
push
imul
dec
inc
and
ja
ds
je
js
inc
cmp
push
je
jne
push
div
dec
in
mov
test
pop
in
unpckhps
inc
addr16
hlt
jo
jge
aaa
jne
cmc
push
pop
jg
fist
mov
add
mov
inc
jecxz
mov
(bad)
jmp
and
jo
inc
out
cdq
and
xchg
popf
push
mov
fistp
inc
lods
adc
and
mov
stc
push
mov
mov
push
xchg
hlt
fs
xor
add
fisttp
fbstp
(bad)
adc
mov
pop
xor
add
add
rcr
sub
sub
es
sub
cmps
and
add
adc
pop
aad
xor
push
(bad)
ja
jbe
and
jno
dec
das
pop
(bad)
push
inc
popa
aam
or
push
push
aad
aas
push
not
push
push
mov
test
push
in
nop
push
addr16
addr16
ss
cmc
dec
pop
ins
push
adc
gs
test
push
mov
xchg
jne
xchg
jmp
xchg
(bad)
jmp
jo
inc
hlt
movs
pushf
and
mov
pusha
mov
xor
cld
xlat
test
mov
inc
rol
loop
int
mov
push
fdivr
into
fs
add
test
je
and
adc
std
lahf
mov
popa
shl
in
add
add
push
shr
sbb
jg
mov
aaa
pop
movs
push
lock
lds
(bad)
outs
daa
xor
xor
push
(bad)
imul
movs
outs
inc
pop
lds
(bad)
arpl
aam
adc
push
imul
aas
push
mul
dec
in
mov
test
sbb
ins
cmovb
push
addr16
xchg
push
jne
cmc
dec
pop
jle
adc
gs
test
add
into
xchg
jne
xchg
cwde
adc
test
mov
jo
inc
xchg
movs
stos
and
xchg
cmps
xchg
pusha
xchg
push
mov
fistp
inc
int
in
and
mov
std
push
fiadd
hlt
xor
ret
jbe
not
fs
loope
lock
gs
jecxz
fucom
out
je
and
adc
fstp
and
add
cmp
xchg
or
sbb
pop
adc
or
adc
and
movs
das
dec
or
push
loopne
aad
xor
adc
dec
push
dec
les
nop
sub
push
das
dec
(bad)
ja
js
ja
inc
mov
push
dec
aad
aas
push
imul
jl
or
test
gs
popa
cmovne
inc
addr16
hlt
sbb
jge
jnp
inc
cmc
jb
inc
push
mov
push
mul
test
push
mov
inc
cmps
jne
xchg
mov
mov
jo
inc
mov
mov
es
cmps
xchg
pusha
mov
movs
mov
xor
retf
inc
fst
clc
and
retf
inc
mov
in
in
aad
push
cld
mov
(bad)
xchg
loopne
lock
gs
(bad)
out
je
and
adc
fstp
xor
jg
or
test
outs
sub
shl
aas
adc
ds
aaa
add
and
and
dec
loopne
aad
xor
adc
adc
les
nop
jnp
or
das
push
(bad)
jnp
pop
aam
add
push
sub
jp
sub
pusha
ja
in
mov
test
push
in
nop
and
hlt
push
mov
inc
cmc
push
pop
push
add
push
xchg
mov
xchg
popf
xchg
adc
xchg
and
jo
inc
mov
test
xor
pusha
fst
mov
xor
mov
mov
int
repnz
fisubr
(bad)
push
int
mov
push
into
mov
loope
mov
retf
add
loop
iret
data16
out
je
and
adc
fcomp
test
sbb
or
xchg
pop
jns
or
adc
add
movs
pop
lock
xor
inc
movs
or
cmps
sbb
adc
push
loopne
aad
xor
dec
(bad)
ins
push
jno
popa
nop
jo
dec
inc
pop
lds
push
(bad)
jnp
addr16
adc
push
cs
aas
outs
test
in
mov
test
sbb
out
addr16
hlt
push
mov
inc
cmc
inc
pop
or
add
push
mov
test
push
add
out
adc
mov
mov
jmp
iret
mov
xor
pusha
mov
xor
into
xlat
loope
out
adc
and
xlat
scas
mov
push
leave
add
push
sar
shl
retf
add
repz
loop
repz
je
and
adc
call
sbb
ins
rcr
in
add
or
xor
daa
cmc
sbb
pop
mov
aaa
sbb
sub
and
cmp
and
and
and
adc
pop
push
xor
cmp
cmp
pop
das
jg
ja
arpl
jae
and
inc
aas
push
mul
in
mov
test
pop
in
addps
jo
push
hlt
jl
inc
xchg
arpl
cmc
pop
pop
dec
push
mov
movs
add
push
mul
test
add
xchg
xchg
jne
xchg
hlt
adc
movs
mov
and
jo
inc
lock
fldenv
and
push
cli
mov
xor
in
in
int
into
and
mov
stc
push
iret
add
xor
(bad)
mov
shl
add
mov
leave
jmp
shl
hlt
adc
loop
les
add
sub
ss
and
inc
pop
sbb
cmc
pop
adc
cmp
pop
lock
sub
adc
xor
push
mov
loopne
aad
xor
aaa
(bad)
jo
jbe
jns
ins
movs
or
das
pusha
(bad)
jae
js
inc
or
push
dec
aad
aas
push
test
in
mov
test
adc
popa
cmovns
push
addr16
jge
jl
ja
inc
cmc
pop
pop
pop
push
test
scas
add
push
scas
cmps
test
push
mov
inc
mov
adc
lea
mov
movs
movs
pushf
and
sahf
cmps
ret
xor
pusha
rcl
mov
in
jmp
lds
inc
cld
(bad)
into
push
int
mov
push
(bad)
mov
into
fs
xor
gs
je
and
adc
lock
jmp
sub
and
in
add
jl
daa
pop
xor
adc
push
mov
aaa
sub
lds
pop
movs
or
cmps
and
pop
mov
loopne
aad
xor
cmp
dec
push
sub
movs
pop
inc
js
jb
jbe
pop
inc
outs
aam
sbb
push
das
aad
aas
sub
inc
ja
in
mov
test
jge
pop
sysret
out
addr16
hlt
push
mov
inc
cmc
pop
pop
pop
push
mov
push
mov
add
xchg
xchg
jne
xchg
mov
ss
jo
inc
xchg
movs
xchg
and
and
int
cmps
fistp
inc
mov
korb
scas
fiadd
(bad)
icebp
push
loope
stos
xor
ret
jbe
not
xchg
xlat
add
out
retf
out
je
and
jne
lahf
call
test
rcl
test
and
daa
pop
cmp
adc
cmp
sub
and
pop
cmps
cmp
sbb
pop
loopne
aad
xor
dec
(bad)
jbe
popa
les
nop
xor
lds
xor
aam
adc
push
dec
aad
aas
pop
imul
push
in
mov
test
unpckhps
addr16
hlt
push
mov
or
push
lods
xchg
mov
loop
mul
test
push
xchg
xchg
jne
xchg
(bad)
adc
mov
xlat
inc
jmp
mov
es
cmps
scas
xor
pusha
xchg
push
xor
push
int
loope
lods
adc
and
fisubr
out
aam
mov
push
out
(bad)
jbe
neg
test
lds
fisttp
clc
je
and
adc
fcomp
xor
(bad)
ror
in
add
pop
xchg
pop
cmp
adc
ds
aaa
sbb
inc
lock
outs
and
push
cmps
jge
or
push
loopne
aad
xor
adc
jo
jbe
and
jno
dec
das
pop
(bad)
jae
jl
dec
or
push
arpl
pop
aas
pop
div
adc
outs
mov
test
push
in
sysret
out
outs
hlt
ins
mov
inc
cmc
pop
pop
or
test
mov
out
mov
mov
mov
cdq
xchg
adc
inc
mov
test
xchg
ss
mov
and
jo
inc
lock
stos
and
mov
pusha
mov
xor
repz
mov
lds
inc
fld
out
mov
mov
jbe
div
mov
retf
add
in
iret
data16
je
and
jne
lahf
call
pop
shl
push
add
daa
xchg
pop
cmp
adc
sbb
pop
adc
and
adc
pop
movs
sub
sbb
xor
cmp
adc
loopne
aad
xor
push
(bad)
popa
push
dec
les
jae
or
das
aas
(bad)
pop
inc
and
jle
push
mov
push
imul
aaa
ja
in
mov
test
gs
pop
(bad)
out
addr16
hlt
push
mov
push
cmc
inc
pop
jle
xchg
mul
test
add
add
jne
xchg
mov
ss
(bad)
and
jo
inc
out
xchg
and
xchg
cmps
xchg
pusha
xchg
push
mov
fist
inc
int
repnz
cmc
scas
jmp
add
push
ret
jbe
imul
div
in
stos
in
gs
(bad)
out
je
and
adc
int
leave
xchg
or
jae
sbb
or
adc
sbb
jae
aaa
cmc
push
adc
cmp
movs
inc
lock
movs
push
dec
or
mov
loopne
aad
xor
add
jl
outs
les
movs
cmovne
(bad)
jnp
fs
and
aas
push
imul
dec
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
or
push
movs
xchg
test
gs
test
add
mov
scas
adc
inc
out
test
xchg
movs
mov
and
jo
inc
movs
movs
mov
test
adc
fistp
inc
lods
adc
and
fild
stc
push
int
push
jecxz
in
jbe
test
add
jmp
out
je
and
adc
les
xor
and
add
and
or
adc
or
adc
add
cmp
and
adc
xor
xor
gs
jbe
and
jno
or
push
pop
inc
inc
aam
add
push
dec
aad
aas
dec
neg
push
in
mov
test
pop
in
cvtps2pd
cmp
mov
jg
pop
pop
fs
aam
scas
add
push
jmp
add
cmps
xchg
jne
xchg
in
adc
mov
mov
fwait
movs
mov
mov
adc
ret
xor
hlt
xlat
jmp
repnz
and
(bad)
scas
mov
push
into
add
push
test
shl
jecxz
icebp
in
gs
(bad)
(bad)
shl
je
and
adc
aam
aad
daa
pop
jo
or
add
cmp
push
shl
adc
push
mov
aaa
pop
movs
adc
daa
lds
inc
cmps
sbb
loopne
aad
xor
push
(bad)
push
les
jo
dec
inc
jb
adc
js
arpl
aam
cmp
inc
push
jl
pop
aas
jnp
inc
ja
in
mov
test
dec
in
sysret
out
addr16
hlt
push
mov
inc
cmc
pop
pop
pop
push
adc
gs
std
add
mov
inc
mov
adc
mov
stos
and
jo
inc
mov
shl
mov
pusha
fst
mov
xor
loopne
jmp
mov
(bad)
xchg
scas
mov
sti
(bad)
icebp
push
enter
in
loope
(bad)
mov
shl
sti
add
out
lds
out
je
and
jne
lahf
enter
xor
add
daa
xchg
ror
add
sub
movs
cs
lds
dec
xor
mov
loopne
aad
xor
adc
outs
push
imul
js
jns
adc
pop
(bad)
jno
fs
and
aas
push
test
in
mov
test
in
nop
jnp
pop
hlt
push
mov
or
and
fs
mov
push
xchg
gs
add
xchg
jne
xchg
mov
movs
mov
and
jo
inc
nop
movs
fisub
sahf
cmps
ret
pusha
cmps
push
mov
mov
call
adc
and
loopne
fiadd
(bad)
ficom
mov
push
std
mov
jmp
retf
in
fisttp
bnd
and
adc
ficomp
xor
in
add
and
sub
sbb
sbb
cmp
movs
adc
dec
lds
and
adc
sbb
inc
mov
loopne
aad
xor
push
(bad)
pop
push
jg
sub
ins
movs
pop
inc
cmp
adc
pop
(bad)
jae
jg
dec
xor
jae
inc
aas
push
mul
push
in
mov
test
adc
outs
cmovne
push
addr16
dec
mov
inc
cmc
pop
pop
push
push
scas
xchg
mov
mov
add
std
inc
mov
adc
mov
jo
inc
jmp
(bad)
out
mov
pusha
xchg
push
test
mov
call
cld
inc
fist
in
and
xchg
scas
mov
push
fld
mov
push
(bad)
mov
into
fs
int3
add
loop
enter
sti
je
and
adc
fstp
or
in
add
xchg
pop
ds
and
sbb
push
adc
cmp
movs
adc
and
sub
pop
movs
cs
and
sub
xor
push
(bad)
dec
push
popa
les
jo
dec
inc
pusha
lds
popa
(bad)
dec
inc
je
aaa
add
push
inc
aad
aas
push
div
ja
in
mov
test
inc
in
sysret
out
addr16
hlt
push
mov
push
cmc
push
pop
js
adc
mov
mov
adc
inc
mov
adc
movs
mov
and
jo
inc
scas
movs
lahf
and
std
cmps
mov
push
cli
mov
xor
loopne
mov
rcl
retf
and
xlat
scas
fild
(bad)
mov
xor
loop
repz
not
xlat
xor
add
dec
shl
adc
out
clc
xchg
adc
sub
add
sub
or
add
xchg
cs
mov
aaa
movs
sbb
adc
movs
sbb
daa
sbb
adc
adc
and
or
jl
je
js
inc
movs
jb
pop
lds
das
push
(bad)
js
jns
and
push
ins
aad
aas
jle
dec
ja
in
mov
test
push
in
nop
inc
addr16
hlt
jbe
pop
xchg
inc
jne
cmc
and
outs
push
stos
xchg
test
test
push
scas
xchg
test
mov
movs
mov
and
jo
inc
test
iret
cdq
es
cmps
mov
push
cli
mov
xor
in
xlat
inc
lods
adc
and
in
scas
mov
push
aam
call
push
lds
leave
fs
xor
add
aad
lahf
mul
les
ficom
fcomp
xor
(bad)
rcr
in
add
aas
xchg
pop
cmp
adc
xor
es
xor
and
xor
pop
aad
xor
and
les
nop
xor
outs
das
push
mov
aam
cmp
inc
aas
dec
mul
dec
in
mov
test
gs
in
movq
push
addr16
hlt
adc
imul
test
scas
add
push
mov
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
out
pushf
and
xchg
cmps
les
pusha
xchg
push
lods
mov
xor
(bad)
xlat
mov
mov
lds
inc
inc
loopne
mov
mov
push
(bad)
mov
in
shl
rol
(bad)
sahf
data16
fbstp
fst
fcomp
aaa
test
and
push
add
sub
or
add
xchg
add
mov
aaa
sub
and
and
or
and
sub
cmp
imul
movs
push
inc
pop
lds
das
cmp
aam
sbb
push
push
aad
aas
jne
inc
ja
in
mov
test
in
orps
jge
push
hlt
push
mov
inc
cmc
cmp
inc
push
adc
gs
inc
scas
xchg
jne
xchg
lods
adc
mov
fisub
jo
inc
sahf
movs
xchg
and
in
xchg
pusha
mov
xor
repz
int3
inc
jecxz
enter
repz
xchg
scas
test
icebp
push
leave
add
push
iret
mov
shl
add
fisttp
les
mov
ret
lahf
hlt
xchg
daa
pop
or
in
add
daa
xchg
and
add
sub
sub
ja
push
aaa
or
adc
lds
movs
jle
add
pavgb
aad
xor
add
jle
popa
les
nop
inc
movs
push
inc
cmp
adc
push
(bad)
ja
jl
jae
push
mov
push
sub
mul
in
mov
test
jb
bound
adc
cs
hlt
imul
cmc
pop
pop
jge
stos
xchg
test
gs
add
test
call
(bad)
jmp
and
jo
inc
xchg
movs
fbld
mov
pusha
xchg
push
loopne
mov
mov
mov
xlat
mov
cmc
adc
and
mov
stc
push
iret
add
xor
(bad)
mov
lds
xchg
add
ror
shl
not
fcomp
xor
pusha
sar
in
add
sub
or
jns
inc
adc
imul
lock
sbb
pop
cmps
aaa
daa
add
xor
push
(bad)
push
nop
push
movs
push
inc
dec
lds
das
inc
(bad)
push
inc
jg
inc
cmp
sub
div
mov
test
js
haddpd
daa
addr16
hlt
dec
mov
inc
cmc
dec
pop
or
test
stos
add
push
cmc
lea
mov
add
jne
xchg
mov
ss
mov
and
jo
inc
out
mov
es
cmps
(bad)
xor
pusha
xchg
push
mov
fistp
inc
rcl
and
lds
(bad)
push
int
mov
push
ret
jbe
test
add
in
cli
mul
(bad)
je
and
adc
(bad)
lahf
out
xchg
xor
sub
in
add
cmp
or
jge
sbb
jg
mov
aaa
push
movs
and
xor
daa
and
cmp
pop
loopne
aad
xor
adc
jl
popa
les
inc
cmp
fs
imul
inc
jae
je
inc
mov
push
sub
inc
aas
push
div
ja
in
mov
test
push
in
divps
push
addr16
hlt
push
mov
inc
cmc
pop
pop
outs
push
adc
lea
test
mov
cmps
adc
inc
mov
rcl
mov
mov
jmp
xchg
and
and
xchg
xor
(bad)
xlat
retf
adc
and
lds
icebp
push
aam
retf
aad
push
clc
mov
xlat
fs
xor
add
fimul
(bad)
je
and
adc
fstp
sub
ins
shl
in
add
cmp
xor
aas
cmc
sbb
das
xchg
sbb
mov
aaa
or
and
and
adc
xor
adc
les
jae
dec
inc
jb
or
pop
(bad)
ja
pop
aam
add
dec
aad
aas
dec
neg
adc
or
ins
test
ins
in
movq
inc
addr16
hlt
push
jne
cmc
pop
pop
imul
call
mov
in
mov
test
xchg
xchg
call
mov
jo
inc
mov
xchg
es
cmps
cdq
xor
pusha
test
test
mov
inc
lods
adc
and
imul
rcl
mov
push
(bad)
mov
leave
fs
sti
add
test
les
repnz
les
jnp
sbb
adc
outs
cmp
jge
and
inc
adc
ds
aaa
and
lds
and
add
add
xor
das
(bad)
push
nop
ins
movs
pop
inc
jno
adc
push
aam
sub
push
push
and
inc
aas
pop
not
jg
push
mov
test
jae
sysretw
out
addr16
hlt
dec
mov
push
push
xchg
xchg
scas
add
push
mov
test
push
scas
xchg
adc
inc
mov
adc
mov
mov
nop
movs
cmps
and
mov
mov
push
mov
mov
hlt
xlat
jmp
korw
scas
inc
(bad)
std
push
in
add
xor
std
mov
xchg
push
enter
leave
gs
enter
out
je
and
adc
mov
pop
xor
add
add
or
adc
push
adc
and
adc
push
movs
pop
lock
lds
and
cmp
add
xor
xor
jl
jl
aas
nop
xor
or
imul
inc
add
push
jne
inc
aas
push
test
in
mov
test
push
in
pcmpeqb
push
addr16
hlt
push
mov
push
push
nop
xchg
mov
mov
out
into
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
(bad)
xchg
cmps
mov
push
movs
mov
xor
repz
test
and
xchg
scas
mov
push
rol
xor
out
mov
jmp
in
gs
stc
data16
out
je
and
jne
lahf
(bad)
xchg
xor
or
add
jge
adc
or
sub
add
xchg
push
jg
mov
aaa
add
and
or
adc
ds
xor
sub
push
push
inc
les
nop
jb
outs
inc
cmp
(bad)
push
inc
fs
sbb
push
ins
aad
aas
pop
not
dec
in
mov
test
in
punpckhdq
inc
addr16
hlt
je
inc
xchg
jl
jge
pop
pop
or
rcl
lods
gs
test
push
iret
xchg
adc
inc
mov
adc
mov
mov
jo
inc
call
es
cmps
popf
xor
pusha
xchg
push
loopne
ret
(bad)
push
lock
out
inc
rcl
into
and
xchg
scas
fiadd
(bad)
mov
xor
(bad)
mov
leave
fs
iret
add
ror
ret
and
adc
fcomp
xor
sub
push
in
add
and
add
add
xchg
and
aaa
pop
movs
xor
and
pop
cmps
sbb
pop
mov
loopne
aad
xor
adc
jle
jbe
inc
nop
js
js
cmp
ja
imul
or
push
pop
aad
aas
dec
test
in
mov
test
pop
in
sysret
out
addr16
hlt
dec
mov
push
cmc
jns
inc
push
test
mov
push
call
out
call
inc
mov
adc
mov
lods
and
jo
inc
mov
mov
and
push
mov
mov
xlat
test
out
hlt
scas
mov
push
int
call
push
(bad)
mov
into
shl
rol
(bad)
fsub
out
je
and
adc
aam
into
xchg
and
sub
add
daa
xchg
pop
xor
adc
cmp
and
push
lds
and
and
push
loopne
aad
xor
push
(bad)
inc
push
ins
les
je
jo
jb
or
dec
(bad)
popa
inc
addr16
add
cs
aas
sub
jg
jg
inc
mov
test
pop
in
unpckhps
push
addr16
hlt
inc
mov
arpl
bound
fs
fist
nop
mov
mov
adc
inc
mov
adc
movs
mov
and
jo
inc
xchg
pushf
es
cmps
xchg
mov
xor
xchg
xlat
hlt
inc
mov
lds
inc
clc
(bad)
aam
out
add
xor
pushf
mov
shl
add
mov
retf
out
je
and
adc
fstp
sub
data16
in
add
xor
aaa
pop
and
adc
cmp
and
adc
movs
xor
daa
adc
sub
inc
aad
xor
aaa
(bad)
jb
jne
fs
aaa
movs
push
inc
cmp
adc
popa
(bad)
jg
jl
pop
add
push
jo
inc
aas
push
test
in
mov
test
in
pcmpeqw
jo
popa
hlt
adc
jne
cmc
popw
outs
push
xchg
xchg
test
push
cmc
gs
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
call
es
pusha
xchg
push
scas
mov
xor
hlt
xlat
out
inc
ret
adc
and
in
scas
mov
push
enter
vpmaxsw
mov
out
shl
add
fisttp
repz
and
adc
ficomp
sub
add
jle
xor
adc
sub
sbb
daa
adc
pop
mov
aaa
shld
adc
cmp
and
adc
inc
aad
xor
or
les
ins
movs
pop
inc
inc
lds
das
pop
(bad)
push
inc
jg
dec
sbb
push
arpl
pop
aas
push
imul
push
in
mov
test
pop
in
lsl
and
hlt
push
mov
inc
cmc
jl
pop
push
adc
mov
push
add
out
adc
cmc
mov
and
jo
inc
out
xchg
and
xchg
cmps
sahf
xor
pusha
mov
mov
xor
lock
test
inc
scas
fild
(bad)
int3
push
int
mov
push
(bad)
mov
(bad)
fs
xor
add
loop
into
data16
(bad)
je
and
adc
out
fst
and
jbe
pop
add
and
or
and
sbb
jg
mov
aaa
pop
movs
inc
lock
sub
and
or
inc
aad
xor
sub
les
push
movs
dec
inc
cmp
(bad)
arpl
aam
add
push
dec
aad
aas
jns
push
ja
in
mov
test
sbb
jg
add
jge
jae
push
mov
outs
cmc
pop
pop
jp
mov
push
stos
gs
cwde
add
mov
cmps
adc
inc
mov
xchg
mov
ss
mov
and
jo
inc
jmp
xchg
and
out
xchg
pusha
mov
xor
xchg
xlat
lock
int
retf
and
std
scas
mov
push
retf
xor
les
xlat
fs
add
hlt
pop
data16
push
rcl
lahf
mov
shr
in
add
jge
daa
pop
and
cmc
cmp
aaa
mov
aaa
adc
cmp
aaa
lds
push
movs
and
cmps
sbb
loopne
aad
xor
pop
(bad)
fs
les
nop
imul
ja
pusha
aam
and
pop
push
pop
aad
aas
push
test
in
mov
test
pop
in
lsl
inc
addr16
hlt
outs
mov
js
pop
pop
ins
push
test
lods
gs
mov
push
ret
adc
inc
mov
adc
mov
mov
jo
inc
lods
movs
shl
xchg
cmps
nop
xor
pusha
mov
xor
xchg
xlat
int
movs
adc
and
lahf
scas
mov
stc
push
int3
add
push
into
mov
shl
int3
add
icebp
(bad)
fisub
out
je
and
adc
movs
lahf
enter
aaa
test
adc
adc
outs
and
push
shl
adc
ds
aaa
daa
movs
inc
lock
or
dec
or
cmp
pop
aad
xor
adc
les
nop
jo
jns
jno
adc
inc
(bad)
jae
jle
inc
sbb
push
jge
inc
aas
push
div
mov
test
addr16
sysret
out
addr16
dec
mov
inc
cmc
push
pop
dec
push
stos
xchg
sahf
add
push
cmc
gs
mov
push
cwde
xchg
adc
xchg
and
jo
inc
mov
mov
xor
pusha
xchg
push
mov
xor
xlat
jmp
and
nop
scas
loopne
sti
(bad)
out
rol
xor
fistp
into
shl
out
in
in
gs
(bad)
out
je
and
adc
fistp
aaa
test
ror
in
add
xchg
pop
cmp
sub
adc
push
mov
aaa
pop
movs
and
push
lds
and
or
pop
aad
xor
adc
les
movs
push
inc
jb
dec
das
push
(bad)
addr16
outs
aam
and
push
sub
add
push
test
in
mov
test
sbb
inc
(bad)
out
addr16
ins
mov
or
inc
pop
pushw
test
mov
test
push
xchg
xchg
jne
xchg
mov
ss
mov
jo
inc
mov
mov
and
push
mov
fbstp
mov
korw
scas
aam
clc
(bad)
in
leave
add
push
ret
jbe
not
shl
xchg
add
repnz
out
(bad)
shl
adc
fstp
adc
add
add
push
pop
pop
xchg
sub
adc
xchg
push
jg
mov
aaa
adc
and
and
or
sub
pop
aad
xor
adc
jo
imul
dec
inc
pop
lds
imul
inc
fs
add
push
ins
aad
aas
outs
test
in
mov
test
ins
in
sysret
out
addr16
hlt
adc
dec
xchg
jnp
dec
cmc
pop
pop
outs
push
mov
push
cmc
gs
test
push
mov
inc
mov
adc
lods
mov
and
jo
inc
mov
mov
mov
pusha
retf
mov
xor
loope
out
inc
mov
(bad)
xchg
scas
mov
push
loop
out
xchg
aad
push
fnstcw
(bad)
fs
xor
add
fimul
fbstp
aam
out
shl
lahf
out
xchg
xor
xor
jnp
es
add
adc
xchg
jl
and
pop
adc
imul
lock
lds
and
das
cmps
add
sbb
adc
inc
aad
xor
or
les
ins
movs
push
inc
popa
lds
inc
(bad)
pop
inc
jl
cmp
pop
aad
aas
pop
div
mov
test
push
in
divps
push
addr16
hlt
push
mov
inc
cmc
push
pop
push
add
push
hlt
gs
test
push
scas
xchg
(bad)
xchg
mov
ss
xchg
and
jo
inc
stos
movs
cdq
and
test
xchg
push
mov
fistp
inc
mov
lds
inc
inc
into
push
int
mov
push
fdivr
into
fs
xor
add
enter
int3
out
je
and
adc
fcomp
jno
pusha
shl
dec
add
and
shl
jg
mov
aaa
and
lds
and
sbb
mov
loopne
aad
xor
push
(bad)
ins
push
les
jo
adc
push
or
outs
(bad)
jg
addr16
add
push
das
aad
aas
inc
imul
in
mov
test
gs
in
(bad)
out
addr16
hlt
sbb
bound
pop
pop
outs
push
rcl
xchg
mov
fwait
push
mov
inc
stos
jne
xchg
mov
ss
and
movs
fisub
in
xor
adc
into
xor
loopne
in
inc
not
retf
and
xchg
scas
mov
push
mov
fst
mov
lock
xor
add
jecxz
(bad)
out
je
and
adc
ficomp
sub
shl
adc
and
push
rol
add
adc
inc
lock
xor
and
pop
loopne
aad
xor
ss
jo
les
nop
outs
movs
dec
inc
cmp
adc
inc
cmp
push
add
push
jae
jge
push
div
mov
test
jns
dec
(bad)
out
addr16
hlt
push
mov
push
cmc
jg
jge
fist
mov
test
add
mov
inc
mov
adc
in
mov
and
jo
inc
mov
iret
cdq
es
cmps
(bad)
xor
pusha
ret
mov
xor
retf
xlat
out
inc
lods
adc
and
lock
in
aad
movs
push
int3
add
push
(bad)
mov
xlat
fs
xor
add
fimul
cmc
je
and
adc
fcomp
sub
add
add
jl
pop
cmc
inc
adc
push
mov
aaa
pop
movs
pop
lock
lds
and
cmps
xor
dec
mov
loopne
aad
xor
aas
(bad)
push
nop
ins
movs
push
inc
jb
adc
pop
(bad)
pop
inc
jg
inc
and
pop
push
sub
jo
push
neg
outs
in
mov
test
jno
gs
out
addr16
hlt
inc
mov
dec
cmc
inc
pop
or
add
push
movs
mov
mov
rol
jne
xchg
mov
xor
inc
out
fsub
mov
xchg
push
xchg
mov
xor
(bad)
test
and
repnz
out
int3
(bad)
in
int
mov
push
fstp
fisub
lea
loop
out
data16
out
je
and
adc
fcomp
adc
in
add
and
or
sbb
sub
push
mov
aaa
pop
movs
dec
lock
xor
sbb
sbb
inc
mov
loopne
aad
xor
adc
les
sub
lds
das
jl
popa
inc
addr16
sbb
push
cs
aas
push
test
in
mov
test
jns
pop
cvtps2pd
inc
addr16
hlt
push
mov
inc
cmc
push
pop
outs
push
test
push
cli
mov
fwait
push
mov
inc
stc
jne
xchg
hlt
adc
lea
mov
lods
movs
mov
xchg
cmps
test
pusha
xchg
push
cmps
mov
xor
loopne
hlt
inc
sti
adc
and
std
scas
mov
push
leave
add
xor
ret
mov
shl
retf
add
out
int
out
(bad)
je
and
adc
int
in
xchg
or
je
sub
outs
xchg
pop
sbb
or
jns
push
adc
cmp
and
and
add
cmp
xor
das
(bad)
push
push
xor
and
inc
cmp
jbe
jns
ja
jb
add
push
sub
inc
aas
jo
dec
ja
in
mov
test
in
nop
inc
addr16
push
mov
or
push
test
fwait
gs
test
push
mov
call
xchg
jmp
cmps
mov
and
jo
inc
test
and
aad
retf
mov
xor
jmp
and
in
fiadd
mov
xor
in
mov
leave
shl
lds
mov
retf
out
je
and
adc
fcomp
xor
ins
shl
in
add
jle
inc
pop
cmp
adc
cs
aaa
or
and
add
or
xor
aas
(bad)
inc
push
jbe
and
pop
lds
das
push
(bad)
pop
inc
jg
popa
xor
sub
pop
aas
inc
not
dec
in
mov
test
push
in
sysret
out
addr16
adc
jl
pop
pop
pop
push
fist
icebp
lea
mov
xchg
xchg
popf
xchg
in
adc
xchg
mov
and
jo
inc
out
les
test
cmps
push
lahf
mov
xor
hlt
xlat
lock
out
iret
and
xchg
scas
cld
inc
test
stos
xor
(bad)
mov
cld
xlat
xor
add
loope
out
mul
fnstenv
(bad)
adc
hlt
lahf
fst
arpl
pmulhw
and
xor
cs
or
sbb
pop
adc
and
adc
adc
or
and
cmp
push
loopne
aad
xor
sub
outs
push
dec
les
dec
movs
dec
inc
dec
lds
pop
(bad)
arpl
aam
add
push
ins
aad
aas
push
test
in
mov
test
sbb
outs
lsl
push
addr16
hlt
imul
pop
push
mov
mul
test
add
mov
inc
xchg
jne
xchg
mov
xchg
mov
call
es
cmps
xchg
pusha
rcl
xchg
xor
loopne
repnz
cmc
adc
and
xchg
scas
mov
push
mov
fidiv
loopne
stos
jbe
not
shl
loope
lock
ror
aam
retf
and
adc
out
lahf
call
test
in
add
and
adc
adc
or
ins
xchg
pop
jg
mov
aaa
sub
and
sub
add
pop
aad
xor
adc
inc
push
pop
les
nop
ja
dec
inc
cmp
inc
das
xor
ja
pusha
aam
cmp
add
aad
aas
data16
in
mov
test
jb
bound
pop
out
addr16
pusha
mov
push
cmc
pop
pop
jb
xchg
xchg
mov
xchg
push
xchg
test
popf
xchg
jne
xchg
mov
icebp
mov
and
jo
inc
xchg
movs
xchg
and
xchg
cmps
mov
push
lea
cwde
push
jmp
and
mov
stc
push
fld
mov
push
test
leave
fs
xor
add
in
in
fucom
fdiv
les
cmc
lahf
aam
xor
imul
outs
and
or
adc
ds
aaa
daa
movs
xor
push
lds
add
sbb
cmp
aas
xor
cmp
push
nop
ins
movs
pop
inc
dec
lds
outs
(bad)
jae
arpl
xor
sub
sbb
push
test
in
mov
test
push
in
orps
push
addr16
hlt
outs
mov
inc
cmc
inc
pop
js
test
movs
add
push
cmc
rol
cmps
push
mov
inc
mov
adc
mov
jo
inc
out
xchg
mov
pusha
fst
mov
xor
call
adc
and
in
mov
push
in
add
push
std
mov
in
shl
rol
(bad)
fwait
data16
out
je
and
adc
rcr
test
aaa
in
add
and
daa
rcl
add
mov
aaa
pop
movs
cmp
sbb
xor
sbb
cmps
(bad)
inc
mov
loopne
aad
xor
dec
(bad)
dec
push
popa
les
inc
jb
dec
das
pop
(bad)
ins
inc
inc
aam
add
das
aad
aas
push
not
push
in
mov
test
dec
in
lsl
push
addr16
imul
push
push
nop
xchg
mov
mov
cmc
gs
out
xchg
push
test
mov
adc
mov
mov
xchg
movs
xchg
and
and
test
push
call
(bad)
inc
mov
(bad)
mov
rcl
jmp
lahf
aad
push
ret
jbe
not
fs
loope
lock
gs
retf
out
je
and
adc
mov
pop
ins
test
in
add
sbb
sbb
adc
cmp
movs
sub
and
pop
cmps
sbb
sbb
xor
sbb
ja
dec
les
xor
data16
outs
(bad)
ja
fs
xor
push
jb
inc
aas
push
neg
dec
in
mov
test
push
in
unpckhps
inc
addr16
hlt
je
bound
pop
pop
dec
push
adc
mov
test
lods
xchg
xchg
xchg
mov
movs
mov
and
jo
inc
out
fsub
xchg
cmps
xor
mov
xor
(bad)
xlat
out
inc
lods
adc
inc
in
mov
push
cld
add
push
sar
leave
fs
xor
add
fisttp
fbstp
in
(bad)
jne
lahf
jmp
shl
in
add
and
or
adc
or
add
push
lds
and
and
adc
add
mov
pop
aaa
(bad)
push
nop
pop
movs
adc
and
adc
push
(bad)
gs
inc
aam
add
push
push
aad
aas
push
div
mov
test
push
in
cmovns
inc
addr16
hlt
push
mov
inc
cmc
push
pop
push
add
push
mov
add
ret
adc
inc
mov
adc
mov
xchg
inc
out
pushf
and
sahf
cmps
mov
push
mov
lods
push
(bad)
test
mov
inc
rol
ficom
enter
rcl
mov
jecxz
test
enter
popf
gs
enter
fdiv
(bad)
adc
fcomp
test
sbb
cmp
cmp
xchg
add
and
sbb
jg
mov
aaa
pop
movs
adc
and
and
pop
loopne
aad
xor
dec
(bad)
dec
push
inc
les
jbe
pop
inc
jb
adc
jl
arpl
aam
adc
push
inc
aad
aas
push
mul
push
in
mov
test
jns
pop
nop
pop
addr16
hlt
dec
mov
dec
cmc
pop
pop
inc
push
test
hlt
gs
mov
cmps
xchg
sahf
xchg
mov
xor
inc
scas
movs
and
cmps
cdq
xor
pusha
xchg
push
cdq
mov
xor
in
xlat
hlt
inc
cmps
adc
and
repz
mov
push
leave
add
push
les
lahf
fs
into
add
loop
aad
icebp
out
je
and
adc
out
lahf
fst
ins
shl
in
add
xchg
pop
and
adc
cmp
movs
sub
and
pop
cmps
sbb
adc
xor
adc
pop
push
push
les
aaa
movs
jns
lds
das
pop
(bad)
ja
fs
and
sbb
aad
aas
push
test
in
mov
test
in
andps
inc
addr16
hlt
push
mov
or
push
adc
movs
test
push
fld
mov
adc
mov
cmps
and
jo
inc
call
iret
xchg
es
cmps
cdq
xor
pusha
mov
cli
mov
xor
xchg
xlat
leave
inc
out
adc
and
lahf
scas
mov
push
aam
mov
push
lds
leave
fs
sti
add
aad
retf
out
je
and
adc
into
lahf
(bad)
xchg
xor
adc
sbb
cmp
cmp
jg
push
outs
or
or
adc
imul
lock
je
das
movs
and
cmps
sbb
add
push
loopne
aad
xor
add
les
ins
movs
adc
lds
pop
(bad)
push
inc
pop
aam
or
push
arpl
inc
aas
push
mul
in
mov
test
pop
in
sysret
out
addr16
adc
inc
cmc
pop
pop
push
push
lods
xchg
scas
add
push
xchg
test
push
cmps
xchg
xchg
mov
mov
jo
inc
out
call
cmps
mov
xchg
pusha
cmps
push
mov
(bad)
push
hlt
xlat
call
and
loopne
mov
push
into
add
xor
xchg
into
mov
retf
add
fisttp
(bad)
je
and
jne
lahf
int
and
test
add
push
xchg
pop
ds
xadd
cmc
sbb
jg
mov
aaa
and
and
and
and
aas
aad
xor
adc
outs
push
inc
les
outs
movs
push
inc
jb
pop
das
pop
mov
aam
add
push
sub
test
push
mov
test
punpcklbw
pop
addr16
hlt
push
mov
jns
pop
pop
outs
push
nop
xchg
test
gs
test
push
mov
inc
popf
jne
xchg
mov
mov
cmps
inc
scas
movs
lods
and
mov
pusha
rcl
stos
xor
jecxz
mov
mov
(bad)
xchg
scas
loopne
(bad)
push
int
out
(bad)
mov
ret
mov
(bad)
xlat
xor
add
aad
cwde
data16
ret
je
and
jne
lahf
cli
xchg
and
sub
sbb
xor
adc
sbb
sbb
shl
xor
jg
mov
aaa
adc
adc
and
sbb
sub
pop
aad
xor
adc
ins
push
dec
les
nop
jae
outs
inc
cmp
adc
addr16
jg
addr16
cmp
push
ins
aad
aas
push
test
in
mov
test
in
unpckhps
das
addr16
push
mov
or
push
mov
push
and
cmps
add
scas
xchg
jne
xchg
lods
adc
pushf
mov
and
jo
inc
test
sahf
es
cdq
xor
pusha
mov
cli
mov
xor
in
aam
out
leave
and
mov
stc
push
iret
add
xor
ret
jbe
not
fnstenv
lds
out
pop
je
and
adc
fcomp
sub
add
xchg
pop
bound
adc
adc
es
push
and
add
push
loopne
aad
xor
add
les
pop
movs
pop
inc
lds
push
(bad)
arpl
aam
sbb
pop
aad
aas
push
neg
push
in
mov
test
imul
push
addr16
hlt
push
mov
dec
cmc
pop
pop
imul
mov
test
push
fwait
xchg
adc
mov
inc
xchg
pushf
es
pusha
mov
xor
rcl
inc
in
enter
mov
inc
mov
push
retf
add
push
in
out
jbe
test
add
enter
mul
(bad)
je
and
adc
call
test
rcr
in
add
je
xor
rcl
sbb
jg
mov
aaa
and
and
and
or
cmp
or
pop
sub
ins
push
jo
sub
jo
pop
inc
jb
dec
das
inc
(bad)
pusha
inc
cmp
xor
jns
inc
aas
push
div
in
mov
test
push
in
divps
push
addr16
hlt
inc
mov
outs
cmc
push
pop
pop
push
mov
test
gs
std
add
mov
mov
sahf
inc
mov
adc
test
mov
and
in
cdq
xor
pusha
fst
mov
xor
(bad)
xlat
jmp
and
xchg
scas
retf
(bad)
fcom
retf
aad
push
ret
jbe
not
add
mov
leave
data16
in
retf
and
adc
fcomp
test
in
add
adc
daa
pop
and
adc
sub
movs
inc
lock
movs
push
dec
cmp
adc
pop
aad
xor
adc
adc
les
jne
pop
inc
popa
lds
das
inc
(bad)
push
inc
addr16
xor
push
js
inc
aas
push
not
addr16
mov
test
gs
in
cmovb
inc
addr16
hlt
je
pop
xchg
jnp
pop
cmc
jle
outs
push
rcl
fwait
mov
mov
xchg
xchg
xchg
xchg
jmp
ss
mov
and
jo
inc
call
cmps
cmps
mov
push
clc
mov
xor
in
out
inc
out
(bad)
mov
stc
push
enter
(bad)
push
sti
mov
lds
lds
fisttp
fbstp
loop
out
xor
aam
xor
jg
arpl
or
adc
outs
daa
xchg
pop
cmp
adc
fs
aaa
pop
movs
add
or
cmp
and
adc
pop
aad
xor
pop
(bad)
pusha
push
ja
jg
popa
movs
pop
inc
jnp
jo
inc
mov
and
pop
xor
push
arpl
inc
aas
dec
neg
push
in
mov
test
jnp
gs
push
addr16
hlt
push
mov
push
cmc
push
pop
push
push
rcl
mov
test
push
scas
xchg
jne
xchg
out
adc
icebp
mov
and
jo
inc
out
les
sahf
cmps
cmps
xor
pusha
xchg
push
mov
fild
inc
movs
adc
and
hlt
scas
mov
push
int
mov
push
fdivr
into
fs
rol
loop
enter
in
shl
adc
fcomp
xor
in
add
add
xor
ds
or
popa
cmc
pop
adc
push
mov
aaa
pop
movs
adc
or
sbb
or
or
dec
aad
xor
xor
push
push
jbe
jo
xor
lds
pop
(bad)
sbb
aam
adc
push
das
aad
aas
push
test
in
mov
test
gs
in
movd
pop
addr16
push
je
inc
jne
cmc
pop
pop
inc
push
mov
push
scas
lea
mov
adc
inc
mov
adc
mov
mov
mov
and
cmps
(bad)
xor
pusha
xchg
mov
xor
loop
in
(bad)
adc
and
sahf
scas
loop
sti
(bad)
std
push
out
add
xor
ret
jbe
test
add
in
into
data16
out
je
and
adc
int
fcom
aaa
shl
in
add
and
adc
adc
pop
adc
imul
outs
and
and
pop
loopne
aad
xor
dec
(bad)
jl
les
dec
movs
dec
inc
pop
lds
pop
(bad)
pop
inc
fs
and
push
jge
popa
aas
push
imul
in
mov
test
sbb
push
nop
pop
addr16
hlt
jno
inc
xchg
jnp
push
cmc
pop
pop
outs
push
xchg
xchg
mov
gs
mov
shr
mov
test
mov
adc
repnz
and
jo
inc
stos
movs
fbld
xchg
cmps
sahf
xor
pusha
xchg
push
sti
mov
xor
call
out
inc
mov
lds
inc
rol
(bad)
push
stos
add
push
(bad)
mov
leave
fs
rol
(bad)
out
je
and
adc
repnz
les
jnp
and
or
jp
xor
and
adc
ds
aaa
shld
adc
sbb
and
xor
pop
aad
xor
push
(bad)
push
push
jbe
and
jb
inc
das
push
(bad)
ja
and
dec
cmp
push
sub
sbb
push
neg
adc
inc
mov
test
pop
out
addr16
hlt
push
mov
adc
pop
pop
push
push
mov
xchg
mov
mov
adc
inc
mov
adc
xor
inc
out
fsub
xchg
cmps
mov
pusha
xchg
push
mov
fistp
inc
mov
(bad)
nop
scas
mov
push
mov
loope
in
stos
jbe
not
enter
loope
(bad)
shl
je
and
adc
fcomp
or
in
add
cmp
or
sbb
sbb
jg
mov
aaa
xor
and
pop
cmps
daa
daa
xor
add
dec
aad
xor
or
push
push
popa
les
nop
xor
lds
pop
(bad)
arpl
aam
or
push
push
aad
aas
push
test
in
mov
test
adc
arpl
add
push
addr16
imul
outs
push
pushf
xchg
pushf
add
push
lock
movs
push
mov
inc
mov
fcom
nop
lea
mov
xchg
movs
lahf
and
xchg
cmps
mov
push
mov
popf
push
loopne
test
and
into
scas
fild
(bad)
icebp
push
retf
xor
sar
in
fs
xor
add
aad
fldenv
out
je
and
adc
out
mov
xor
pmulhw
add
and
sub
adc
xchg
push
jg
mov
aaa
add
sub
and
add
pop
loopne
aad
xor
adc
jle
imul
dec
inc
xor
inc
das
ds
je
ins
aam
add
push
ins
aad
aas
dec
not
dec
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
or
push
lods
xchg
lods
add
push
mov
add
mov
inc
xchg
jne
xchg
call
movs
mov
and
jo
inc
nop
movs
fbld
test
adc
fbstp
inc
mov
(bad)
ret
inc
cdq
(bad)
stc
push
aam
stos
xor
(bad)
mov
leave
fs
clc
add
in
mul
out
je
and
jne
lahf
retf
xchg
or
and
add
and
sub
adc
sbb
jg
mov
aaa
daa
movs
pop
lock
lds
and
daa
cmps
cmp
loopne
aad
xor
adc
push
nop
ins
movs
or
lds
das
push
aam
or
push
sub
imul
mov
test
push
in
sysret
out
addr16
hlt
jge
jnp
ss
cmc
inc
pop
push
add
push
cmc
gs
test
push
ret
adc
inc
loopne
adc
ss
mov
and
jo
inc
out
les
xchg
cmps
mov
push
mov
fistp
inc
loop
leave
and
shr
push
ret
add
xor
(bad)
mov
hlt
shl
mov
in
fsub
out
je
and
jne
lahf
hlt
xchg
and
jno
pusha
shl
push
outs
sbb
aaa
pop
ds
add
sbb
sbb
jg
mov
aaa
pop
movs
pop
lock
xor
sbb
adc
adc
aaa
xor
or
push
push
les
xor
or
inc
mov
addr16
add
push
je
pop
aas
inc
div
in
mov
test
gs
in
pcmpeqb
push
addr16
hlt
push
mov
adc
inc
pop
or
mov
mov
sti
push
hlt
gs
test
push
mov
inc
xchg
jne
xchg
lahf
adc
stos
mov
and
jo
inc
mov
xchg
and
and
mov
push
call
adc
and
xchg
scas
cmc
inc
rol
push
iret
add
push
(bad)
mov
(bad)
fs
jmp
gs
(bad)
out
je
and
adc
fstp
sub
jg
cs
add
jge
and
rcl
es
cmp
movs
sub
and
pop
cmps
adc
and
xor
cmp
jle
dec
les
pop
movs
adc
cmp
inc
das
daa
(bad)
ja
outs
aam
add
push
jp
inc
aas
pop
test
in
mov
test
jns
dec
punpckldq
inc
addr16
hlt
push
mov
js
push
pop
outs
push
xchg
mul
test
push
mov
inc
movs
jne
xchg
mov
xor
inc
sahf
movs
fbld
xchg
cmps
xor
mov
mov
xor
xlat
mov
and
mov
stc
push
int
jecxz
rcl
push
fdivr
aad
fnstenv
int
stos
in
fisttp
std
je
and
adc
fistp
test
je
adc
outs
cmp
jo
(bad)
cmc
or
ds
aaa
cmp
pop
lock
movs
and
cmps
jge
ds
loopne
aad
xor
add
les
nop
ins
movs
pop
inc
dec
lds
das
push
(bad)
pop
inc
inc
aam
or
push
arpl
js
push
div
ja
in
mov
test
in
movq
push
addr16
hlt
dec
mov
dec
cmc
jge
dec
push
aad
mov
gs
test
push
add
hlt
adc
mov
xchg
and
jo
inc
out
xchg
and
mov
mov
xor
not
lods
inc
loop
into
and
xchg
scas
mov
push
retf
add
xor
(bad)
mov
in
shl
loopne
mul
shl
(bad)
out
mul
(bad)
je
and
adc
mov
pop
add
add
daa
xchg
ds
adc
sbb
and
jg
mov
aaa
pop
movs
adc
adc
xor
pop
movs
add
cmps
sbb
loopne
aad
xor
adc
les
movs
dec
inc
inc
lds
inc
addr16
sub
pop
push
sub
test
in
mov
test
inc
in
vmwrite
pop
addr16
hlt
push
mov
ja
push
pop
outs
push
mov
test
push
sti
gs
test
add
mov
inc
loop
fst
jmp
xchg
mov
and
jo
inc
xchg
movs
xchg
and
and
into
xor
xchg
xlat
test
mov
inc
xchg
loope
leave
add
xor
(bad)
mov
into
shl
in
add
in
leave
data16
out
je
and
adc
fstp
sub
cmp
and
adc
cmp
and
and
sbb
ins
mov
aaa
dec
movs
sub
and
and
adc
sub
cmp
adc
jb
imul
dec
inc
xor
arpl
pop
(bad)
je
jae
dec
add
push
ins
aad
aas
aaa
test
in
mov
test
in
packssdw
push
addr16
push
mov
dec
cmc
jbe
outs
push
adc
gs
cwde
add
mov
inc
stos
jne
xchg
mov
movs
mov
and
jo
inc
lods
movs
fbld
xchg
cmps
ret
pusha
retf
mov
xor
in
mov
and
ret
inc
rol
ficom
mov
push
lds
leave
fs
rol
int
retf
out
je
and
adc
ficomp
xor
and
and
push
add
xchg
pop
pop
xchg
or
adc
cmp
pop
lock
imul
cmps
aaa
daa
add
push
loopne
aad
xor
adc
les
nop
ja
ins
inc
pop
lds
das
pop
(bad)
jae
jg
inc
cmp
push
aad
aas
push
not
inc
in
mov
test
pop
in
cmove
push
addr16
hlt
dec
mov
inc
cmc
push
pop
inc
push
test
test
test
add
xchg
xchg
stos
xchg
in
adc
xchg
mov
and
jo
inc
out
shl
mov
mov
xor
test
jecxz
ret
inc
aam
les
jmp
mov
into
fs
xchg
add
enter
icebp
out
je
and
adc
in
lds
pusha
rcr
in
add
cmp
or
push
cmc
or
jg
mov
aaa
push
movs
adc
xor
xor
and
adc
pop
aad
xor
cmp
ins
push
push
les
inc
movs
jp
jp
data16
pop
(bad)
arpl
aam
or
push
das
aad
aas
push
test
in
mov
test
inc
in
unpcklps
jno
ja
push
mov
inc
cmc
pop
pop
outs
push
adc
gs
test
push
into
xchg
jne
xchg
in
adc
mov
shl
movs
and
cmps
lahf
xor
pusha
stos
push
xor
push
rcl
test
sti
inc
xchg
scas
out
rol
rcl
mov
push
(bad)
mov
aam
xor
add
iret
(bad)
(bad)
data16
out
je
and
jne
lahf
out
xchg
sub
das
test
rcl
in
add
daa
xchg
pop
ds
adc
sbb
aas
adc
xor
cs
movs
adc
cmp
push
loopne
aad
xor
cmp
les
nop
xor
inc
das
jns
ja
and
imul
aad
aas
push
div
ja
in
mov
test
in
cvtdq2ps
cmp
mov
or
push
movs
xchg
mov
in
mul
test
mov
inc
loope
test
in
mov
mov
stos
movs
lods
and
xchg
cmps
mov
mov
push
test
fbstp
inc
fist
jmp
inc
ret
scas
mov
push
stos
add
xor
les
xchg
xchg
fadd
ret
(bad)
popf
data16
(bad)
mov
ficomp
xor
add
sbb
or
adc
cmp
adc
lds
and
or
push
loopne
aad
xor
aaa
(bad)
push
nop
inc
movs
je
jno
pop
das
jp
jae
(bad)
aam
or
push
push
aad
aas
push
jo
ins
in
mov
test
gs
in
(bad)
out
addr16
hlt
outs
mov
dec
cmc
dec
pop
ins
push
mov
mov
aam
mov
nop
out
mov
adc
inc
mov
adc
mov
xchg
and
jo
inc
nop
movs
frstor
and
mov
sbb
push
int3
xlat
test
icebp
inc
repnz
loope
cld
(bad)
scas
push
lds
mov
push
(bad)
mov
int3
fs
xor
add
mov
enter
std
je
and
adc
repnz
lds
pusha
shl
in
add
pop
xchg
pop
add
adc
push
mov
aaa
push
movs
pop
lock
cmp
and
or
adc
aaa
xor
push
(bad)
ins
push
inc
les
ins
movs
dec
inc
jl
jg
dec
(bad)
arpl
aam
add
push
inc
aad
aas
push
mul
ins
in
mov
test
push
in
cmovb
push
addr16
hlt
dec
mov
outs
cmc
pop
pop
fs
aad
pop
push
mov
add
mov
out
adc
inc
mov
adc
xchg
mov
and
jo
inc
stos
movs
cmps
and
xchg
cmps
xchg
pusha
ret
mov
xor
jecxz
mov
in
iret
and
std
scas
inc
(bad)
mov
xor
sar
fisub
xlat
add
fisttp
test
rcl
lahf
mov
ror
in
add
and
adc
sbb
or
add
movs
and
and
cmp
pusha
daa
cmp
xor
adc
adc
les
nop
arpl
pop
das
ds
ja
jg
jae
inc
mov
push
js
push
aas
jg
dec
ja
in
mov
test
jg
dec
nop
inc
addr16
hlt
push
mov
or
push
mov
push
hlt
gs
mov
mov
mov
adc
inc
mov
adc
movs
mov
and
jo
inc
mov
and
cmps
cdq
xor
pusha
xchg
push
cli
mov
xor
in
int
not
leave
and
lahf
scas
ret
(bad)
stc
push
inc
out
in
lods
push
fnstsw
retf
xor
add
fisttp
iret
je
and
adc
(bad)
lahf
in
xchg
xor
aas
test
adc
cmp
pusha
test
outs
jle
xor
add
adc
aas
mov
aaa
shld
sbb
push
and
and
or
pop
aad
xor
dec
(bad)
pop
push
les
nop
ins
movs
imul
adc
ins
(bad)
je
jg
dec
and
push
arpl
sbb
inc
not
push
in
mov
test
pop
in
(bad)
out
addr16
hlt
push
mov
outs
cmc
pop
pop
fs
leave
xchg
stos
add
push
mov
aam
repnz
lods
xchg
jne
xchg
in
adc
test
xchg
and
jo
inc
mov
pushf
es
cmps
xchg
pusha
mov
xor
xchg
xlat
test
cld
inc
(bad)
into
push
int
mov
push
(bad)
mov
out
mov
enter
out
loop
iret
jmp
(bad)
je
and
adc
ret
xchg
sub
or
add
and
or
adc
sbb
jg
mov
aaa
sub
add
sbb
sub
cmp
mov
loopne
aad
xor
inc
(bad)
ins
push
popa
les
movs
dec
inc
popa
lds
pop
(bad)
pop
inc
addr16
add
push
cs
aas
pop
test
in
mov
test
push
in
lsl
pop
addr16
hlt
push
mov
pop
cmc
pop
pop
outs
push
rcl
hlt
mov
lods
push
mov
cmps
adc
inc
mov
adc
xor
inc
mov
fwait
and
out
cmps
mov
and
mov
fist
inc
std
adc
inc
in
scas
mov
push
retf
xor
ret
mov
(bad)
fs
xor
add
out
(bad)
fldenv
out
je
and
adc
fstp
add
add
or
xchg
or
cmp
aas
adc
push
mov
aaa
adc
adc
and
and
pop
loopne
aad
xor
cmp
jl
xor
daa
nop
jae
push
inc
pop
lds
das
jne
jl
dec
aam
add
push
popa
aad
aas
push
div
push
in
mov
test
gs
in
(bad)
out
addr16
push
mov
or
push
lods
xchg
test
popf
push
mul
test
push
mov
jne
xchg
jmp
movs
mov
and
jo
inc
lods
movs
xchg
nop
cmps
ret
pusha
xchg
push
clc
mov
xor
in
xlat
out
inc
in
into
and
retf
inc
repz
scas
push
retf
add
xor
jecxz
retf
jbe
test
add
aad
leave
shl
je
and
adc
loop
retf
xchg
sub
or
add
and
or
pop
cmc
push
adc
imul
lock
push
and
xor
mov
loopne
aad
xor
or
push
push
je
and
jno
push
das
pop
(bad)
jae
jle
dec
sbb
jle
gs
push
test
in
mov
test
gs
bndmov
es
jne
jg
and
ins
cmc
dec
pop
outs
push
aam
mov
mov
mov
scas
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
out
pushf
and
mov
les
pusha
mov
xor
not
icebp
inc
repnz
and
nop
scas
mov
push
into
add
xor
(bad)
mov
into
xlat
xor
add
jecxz
loop
fucom
les
cli
adc
(bad)
lahf
fst
cmp
sbb
inc
add
adc
xchg
add
xor
sbb
jg
mov
aaa
pop
movs
adc
daa
lds
sbb
sub
xor
adc
les
imul
arpl
aam
and
push
pop
aad
aas
pop
not
push
in
mov
test
sbb
ja
dec
out
addr16
hlt
dec
mov
dec
cmc
pop
pop
outs
push
test
hlt
lea
test
mov
inc
mov
adc
mov
jo
inc
jmp
fsub
mov
xchg
push
div
movs
push
out
xlat
hlt
inc
cld
adc
and
jmp
mov
push
mov
retf
aad
push
clc
mov
xchg
shl
lds
fimul
(bad)
je
and
adc
ficomp
sub
rol
in
add
sub
or
aas
cmc
sbb
cmp
movs
sub
and
and
pop
loopne
aad
xor
aas
(bad)
ins
push
jb
push
nop
inc
movs
push
inc
dec
lds
das
addr16
ja
pusha
aam
add
push
pop
aad
aas
push
div
fs
mov
test
inc
in
unpcklps
pusha
addr16
hlt
push
mov
or
push
lods
xchg
mov
gs
test
push
xchg
xchg
jne
xchg
mov
nop
mov
and
jo
inc
call
iret
scas
movs
cmps
mov
mov
xor
enter
int3
adc
and
xchg
scas
mov
push
aam
jmp
mov
xlat
fnsave
fwait
add
leave
(bad)
out
je
and
adc
(bad)
lahf
mov
pusha
shr
in
add
and
xor
adc
pop
adc
aas
mov
aaa
or
adc
sbb
ss
pop
cmps
sbb
loopne
aad
xor
adc
les
nop
push
lds
das
push
(bad)
arpl
aam
add
push
arpl
inc
aas
push
div
mov
test
dec
in
movq
jnp
outs
hlt
adc
or
pop
pop
jns
adc
mov
push
lahf
xchg
jne
xchg
in
adc
mov
xchg
and
jo
inc
out
shl
cmps
lods
xor
pusha
xchg
push
mov
xchg
push
xchg
xlat
rol
and
xchg
scas
mov
push
enter
cdq
aad
push
int
jmp
xor
add
out
in
mov
and
adc
fstp
aaa
test
shl
test
outs
and
or
sbb
pop
adc
sbb
push
lock
xor
pop
movs
and
pop
cmps
adc
pop
mov
loopne
aad
xor
dec
(bad)
dec
push
xor
sub
movs
push
inc
lds
das
push
(bad)
arpl
aam
sub
push
push
aad
aas
push
imul
push
in
mov
test
push
in
nop
and
mov
(bad)
cmc
bound
push
add
push
xchg
gs
test
test
mov
adc
movs
mov
and
jo
inc
mov
and
cmps
scas
xor
pusha
mov
mov
fistp
inc
mov
lds
inc
clc
(bad)
aad
leave
add
xor
sar
aad
shl
retf
add
cmc
pop
je
and
adc
call
add
in
add
add
xadd
adc
sub
movs
sub
and
sub
pop
loopne
aad
xor
push
(bad)
pop
push
imul
dec
inc
cmp
adc
dec
(bad)
ja
cs
cmp
push
inc
aad
aas
push
test
in
mov
test
pop
in
cmovnp
ja
inc
hlt
push
mov
or
outs
pop
outs
push
movs
xchg
cmps
add
push
cmps
mov
pushf
push
mov
inc
loope
test
jmp
and
jo
inc
lods
movs
cmps
and
test
mov
xor
in
out
inc
mov
(bad)
sahf
scas
mov
push
rol
mov
push
(bad)
mov
xchg
fs
xor
add
fisttp
cmc
je
and
jne
lahf
les
shl
in
add
pop
xchg
pop
and
cmc
pop
adc
sbb
sub
and
and
adc
inc
aad
xor
pop
(bad)
push
push
je
jge
jb
push
inc
pop
lds
das
dec
(bad)
jnp
jg
push
cmp
push
arpl
pop
aas
not
in
mov
test
cmovb
jae
pop
hlt
dec
mov
jo
jae
push
add
push
hlt
gs
mov
fucomip
mov
adc
inc
cmps
jne
xchg
mov
mov
add
pushf
and
xchg
cmps
fwait
xor
pusha
mov
cdq
mov
xor
hlt
xlat
test
loope
xchg
scas
mov
push
int
mov
push
(bad)
mov
into
shl
hlt
add
out
(bad)
clc
mul
(bad)
je
and
adc
fcomp
jae
rol
in
add
jl
xor
ds
or
sbb
sbb
jg
mov
aaa
shld
sbb
push
and
aas
cmps
xor
cmp
xor
sub
arpl
les
jo
dec
inc
inc
lds
pop
(bad)
arpl
aam
add
push
je
inc
aas
push
imul
push
in
mov
test
sbb
jg
add
push
addr16
push
mov
push
cmc
pop
pop
pop
push
mov
mov
mov
test
add
mov
inc
fwait
jne
xchg
hlt
adc
xor
inc
mov
shl
and
push
mov
into
xor
rcl
hlt
inc
into
adc
and
int
mov
push
test
lods
push
ret
jbe
not
fs
xchg
add
lods
(bad)
out
je
and
jne
lahf
rcl
ins
ror
in
add
and
adc
pop
cmc
sbb
xor
cs
lds
push
movs
sbb
daa
cmp
xor
adc
jg
inc
les
jae
pop
inc
pop
lds
das
pop
(bad)
dec
inc
fs
adc
push
sub
pop
aas
push
test
in
mov
test
push
in
unpckhps
inc
addr16
push
mov
or
push
lods
xchg
mov
push
mul
test
push
cdq
xchg
jne
xchg
nop
adc
mov
test
movs
xchg
test
xchg
push
xchg
mov
xor
(bad)
mov
cld
inc
mov
stc
push
icebp
add
xor
into
mov
jmp
retf
add
mov
leave
data16
out
je
and
adc
into
lahf
(bad)
xchg
xor
xor
ins
shr
push
add
and
add
adc
ds
aaa
pop
movs
and
lds
and
and
adc
inc
aad
xor
adc
adc
les
ins
movs
push
inc
popa
lds
push
jae
inc
aam
xor
push
dec
aad
aas
jbe
pop
ja
in
mov
test
ins
in
unpcklps
jb
jl
push
mov
inc
cmc
inc
pop
push
push
test
repnz
push
cmc
mov
push
ret
adc
inc
test
xchg
hlt
adc
xchg
mov
and
jo
inc
mov
(bad)
mov
pusha
ret
push
mov
fist
loop
retf
and
xchg
scas
test
fcom
movs
xor
fnstsw
int
mov
test
pop
out
(bad)
je
and
adc
int
leave
xchg
and
jg
and
or
syscall
adc
add
gs
sub
sub
or
add
movs
pop
lock
or
sub
adc
pop
aad
xor
dec
(bad)
inc
push
outs
les
jae
inc
inc
pop
lds
das
pop
(bad)
jnp
addr16
and
push
jge
pop
aas
test
push
mov
test
push
in
lsl
push
addr16
hlt
push
inc
xchg
pusha
jne
cmc
bound
jbe
xchg
lods
gs
test
push
mov
inc
xchg
jne
xchg
mov
ss
and
movs
xchg
and
and
mov
mov
popf
push
loopne
lock
mov
(bad)
lds
mov
xor
lds
into
fs
xor
add
mov
retf
out
je
and
adc
iret
lahf
(bad)
xchg
cs
cmp
daa
shl
in
add
cmp
sbb
es
push
rol
sbb
cmp
movs
add
adc
movs
sbb
daa
push
mov
loopne
aad
xor
dec
(bad)
jl
imul
dec
inc
ins
lds
pop
(bad)
push
inc
jno
dec
add
dec
aad
aas
dec
test
in
mov
test
in
unpcklps
inc
addr16
push
mov
or
push
lods
xchg
test
gs
test
push
add
jne
xchg
mov
movs
mov
and
jo
inc
xchg
movs
fbld
xchg
cmps
sahf
xor
pusha
mov
xor
icebp
xlat
in
lods
adc
and
enter
rol
ficom
lds
(bad)
mov
in
fs
xor
add
in
call
je
and
adc
fcomp
aaa
test
rcl
in
add
and
push
rcr
add
jg
mov
aaa
adc
and
or
push
loopne
aad
xor
adc
les
jo
dec
inc
inc
lds
das
outs
mov
aam
and
pop
push
push
aad
aas
pop
neg
push
in
mov
test
add
dec
punpckhbw
jne
add
adc
jl
push
pop
or
fist
mov
mov
cdq
push
ret
xchg
test
stos
adc
xchg
mov
and
jo
inc
mov
iret
call
pusha
adc
fistp
inc
mov
(bad)
xchg
scas
test
out
retf
xor
sar
cld
xlat
xor
add
icebp
(bad)
cwde
iretw
out
je
and
adc
fcomp
jle
pusha
rcr
in
add
cmp
aaa
shl
pop
adc
ds
aaa
or
and
and
or
add
mov
pop
aas
(bad)
fs
push
les
nop
dec
movs
dec
inc
aas
lds
pop
(bad)
jo
push
aam
add
push
das
aad
aas
push
div
in
mov
test
jnp
inc
cmovae
jg
push
hlt
push
mov
inc
cmc
push
pop
je
mov
cmc
gs
out
mov
into
xchg
jne
xchg
lahf
adc
movs
mov
and
jo
inc
call
es
cmps
xchg
pusha
mov
xor
loop
aad
(bad)
adc
and
xchg
scas
cli
inc
std
mov
xor
ret
mov
(bad)
fs
rol
out
leave
data16
out
je
and
adc
rcr
jne
popa
rcr
in
add
xchg
pop
and
jae
cmp
pop
adc
ds
aaa
adc
push
lock
lds
adc
pop
daa
sbb
adc
and
or
adc
pop
push
imul
dec
inc
dec
lds
mov
aam
or
push
ins
aad
aas
jns
dec
ja
in
mov
test
in
punpckldq
inc
addr16
inc
mov
or
pop
pop
ins
push
scas
xchg
lea
push
mul
test
push
xchg
cwde
jne
xchg
jmp
ss
mov
and
jo
inc
lods
movs
shl
xchg
cmps
test
pusha
xchg
push
sahf
mov
xor
into
xlat
loope
jecxz
retf
and
sahf
scas
fiadd
(bad)
jecxz
aam
mov
push
(bad)
mov
leave
fs
rol
(bad)
cli
data16
fidiv
les
loop
retf
xchg
adc
add
jnp
and
push
add
sub
xchg
sub
cmp
inc
adc
ds
aaa
shld
push
lds
adc
xor
inc
mov
loopne
aad
xor
sbb
jl
jbe
and
jae
jne
pop
(bad)
push
inc
jno
dec
add
push
arpl
inc
aas
sub
pop
ja
in
mov
test
pop
in
sysret
out
addr16
hlt
push
mov
inc
cmc
pop
pop
or
scas
xchg
scas
add
push
mov
leave
test
push
scas
xchg
adc
cmps
and
jo
inc
out
movs
mov
xchg
cmps
sahf
xor
pusha
test
mov
xor
(bad)
mov
mov
lds
inc
inc
std
push
xlat
add
xor
jecxz
out
jbe
test
add
(bad)
(bad)
in
mul
ret
je
and
jne
lahf
call
test
add
xor
xchg
or
push
cmc
sbb
jg
mov
aaa
pop
movs
dec
lock
xor
and
adc
cmp
aad
xor
sbb
addr16
push
les
jbe
dec
inc
pop
lds
dec
(bad)
arpl
aam
add
push
push
inc
aas
jo
push
ja
in
mov
test
sbb
ds
inc
addr16
adc
inc
cmc
push
pop
push
push
adc
gs
test
push
xchg
xchg
jne
xchg
nop
adc
movs
mov
and
jo
inc
cdq
movs
xchg
and
mov
(bad)
xor
pusha
xchg
push
cmps
mov
xor
loop
into
inc
fst
retf
and
xchg
scas
mov
push
out
hlt
xor
lock
les
retf
in
fimul
les
(bad)
adc
fistp
adc
in
add
jge
daa
pop
and
cmc
sbb
push
jne
xor
and
or
pavgb
sbb
pop
or
adc
les
pop
movs
dec
inc
xor
pusha
das
pop
(bad)
jb
js
imul
aad
aas
dec
imul
dec
in
mov
test
dec
in
sysret
out
addr16
push
jge
ds
cmc
pop
pop
pop
push
leave
xchg
test
gs
test
push
mov
inc
mov
adc
mov
jo
inc
lods
movs
xchg
and
xchg
cmps
scas
xor
pusha
xchg
push
mov
xor
xlat
rol
and
sahf
scas
fld
(bad)
cmc
push
rol
xor
(bad)
mov
leave
fs
xor
gs
les
out
je
and
adc
fcomp
adc
add
or
adc
pop
cmc
inc
adc
cmp
movs
pop
lock
lds
and
and
push
loopne
aad
xor
add
les
push
movs
adc
and
push
das
push
(bad)
jae
push
aam
add
push
sub
js
push
imul
in
mov
test
push
in
packsswb
push
addr16
hlt
dec
mov
pop
cmc
pop
pop
imul
xchg
scas
add
push
mov
add
movs
xchg
adc
xchg
and
jo
inc
out
movs
(bad)
xchg
cmps
xor
xchg
push
mov
fistp
inc
not
into
and
xchg
scas
cmc
inc
cli
(bad)
out
int
in
test
loop
(bad)
mov
into
xlat
xor
add
(bad)
(bad)
xchg
mul
fdiv
(bad)
adc
clc
lahf
call
daa
rcl
in
add
and
push
shl
or
jg
mov
aaa
push
movs
push
lock
xor
sub
pavgb
cmp
push
(bad)
adc
inc
les
aaa
movs
push
inc
jno
dec
das
addr16
jae
pusha
aam
add
push
inc
aad
aas
ins
test
in
mov
test
inc
in
nop
inc
addr16
hlt
mov
or
pop
pop
ins
push
mov
mov
in
push
and
cld
add
mov
inc
mov
adc
test
nop
inc
mov
fsub
mov
xchg
push
mov
mov
inc
in
adc
and
xchg
scas
mov
push
enter
call
mov
xchg
xlat
xor
add
ror
hlt
je
and
adc
fstp
add
add
sub
adc
adc
xchg
sbb
mov
aaa
push
movs
sub
and
cmp
and
loopne
aad
xor
sub
adc
les
jae
dec
inc
inc
lds
ds
ja
outs
aam
add
ins
aad
aas
push
not
dec
in
mov
test
in
unpckhps
inc
addr16
hlt
push
mov
or
push
lods
xchg
mov
loope
fwait
gs
test
push
xchg
xchg
jne
xchg
jmp
movs
mov
and
jo
inc
lods
movs
xchg
mov
ret
xor
pusha
xchg
push
mov
fistp
inc
(bad)
adc
and
int3
scas
out
mov
lds
out
(bad)
push
fstp
into
xor
add
mov
leave
data16
and
adc
sti
lahf
aam
xor
xor
add
sub
xchg
jge
xor
or
imul
lock
ds
sub
or
xor
adc
les
dec
movs
adc
pop
lds
das
push
(bad)
dec
inc
je
dec
add
push
arpl
pop
aas
das
neg
push
in
mov
test
jno
dec
nop
push
addr16
hlt
dec
mov
inc
cmc
inc
pop
jg
test
scas
add
push
xchg
gs
out
mov
adc
inc
mov
adc
push
mov
and
xchg
cmps
test
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
fcmovb
fist
aam
aad
cmc
push
cmp
xlat
xor
add
in
mul
out
je
and
jne
lahf
rcl
pusha
rcr
in
add
adc
xchg
add
sbb
add
ds
aaa
das
movs
pop
lock
sub
pop
movs
and
daa
pop
mov
loopne
aad
xor
pop
(bad)
jbe
aaa
les
jo
dec
inc
dec
lds
pop
(bad)
push
inc
addr16
xor
push
das
aad
aas
push
test
in
mov
test
gs
pop
unpckhps
jge
(bad)
hlt
push
mov
jp
pop
pop
outs
push
mov
xchg
gs
loopne
xchg
out
mov
adc
inc
mov
adc
mov
lahf
and
jo
inc
jmp
es
movs
xor
pusha
fst
mov
xor
rcl
inc
mov
(bad)
xchg
scas
hlt
inc
mov
sti
xor
hlt
mov
lock
fadd
repnz
out
je
and
adc
fstp
sub
ins
ror
in
add
jge
daa
pop
and
adc
xor
push
aaa
adc
and
cmp
sbb
loopne
aad
xor
adc
les
arpl
dec
das
dec
(bad)
ja
cmp
mov
push
sub
inc
aas
inc
div
dec
in
mov
test
pop
in
maxps
inc
addr16
hlt
push
mov
ins
cmc
and
outs
push
xlat
xchg
test
gs
mov
nop
out
test
mov
inc
mov
adc
div
xchg
inc
mov
fbld
nop
cmps
xchg
pusha
mov
xor
loopne
out
inc
in
adc
and
lahf
scas
mov
push
loop
mov
push
(bad)
mov
leave
fs
enter
jmp
(bad)
fldenv
out
je
and
adc
fcomp
jno
jnp
sbb
push
add
and
adc
and
aas
adc
push
mov
aaa
push
movs
dec
lock
or
or
xor
pop
aad
xor
adc
ins
push
jbe
daa
nop
dec
movs
adc
jnp
inc
das
push
(bad)
outs
inc
jl
dec
sbb
push
pop
aad
aas
push
not
jl
fs
test
popa
in
nop
push
addr16
dec
mov
inc
cmc
pop
pop
inc
push
test
mov
mov
mov
add
xchg
xchg
jne
xchg
hlt
adc
cmps
mov
and
jo
inc
stos
movs
fldenv
movs
cmps
sahf
xor
pusha
rcl
xor
mov
lds
inc
out
movs
push
enter
leave
aad
push
sti
mov
xchg
xlat
xor
add
loope
mul
out
je
and
adc
neg
xor
add
cmp
push
ror
pop
adc
ds
aaa
pop
movs
pop
lock
xor
pop
movs
cs
inc
cmps
sbb
loopne
aad
xor
sbb
je
popa
les
jo
dec
inc
cmp
dec
das
pop
(bad)
arpl
aam
add
push
inc
aad
aas
push
div
push
in
mov
test
gs
inc
(bad)
out
addr16
hlt
popa
mov
push
cmp
inc
push
test
mov
gs
test
mov
inc
mov
adc
mov
jo
inc
mov
movs
and
xchg
cmps
xor
mov
xor
xlat
xlat
in
mov
korw
scas
in
pop
(bad)
push
mov
aad
push
ret
jbe
not
fs
mov
(bad)
push
rcl
lahf
rcl
shl
in
add
and
sub
adc
cmp
movs
sub
and
push
cmps
sbb
sbb
xor
adc
gs
ja
aas
nop
ins
movs
dec
inc
cmp
adc
xor
aam
cmp
push
push
aad
aas
outs
mul
in
mov
test
pop
in
nop
jae
inc
hlt
push
mov
adc
jle
outs
push
lods
xchg
icebp
add
push
mul
test
push
scas
xchg
mov
mov
ss
mov
and
jo
inc
lods
movs
fisub
mov
pusha
mov
xor
(bad)
loope
lods
adc
and
xchg
scas
mov
in
repnz
xor
(bad)
mov
leave
fs
xor
fisttp
(bad)
loop
stc
cmc
jmp
pop
je
jnp
or
push
add
sbb
pop
rcl
daa
adc
sub
dec
lock
aaa
and
and
adc
inc
aad
xor
adc
les
nop
push
lds
inc
(bad)
jle
inc
aam
add
push
arpl
inc
aas
push
in
mov
test
ins
in
unpckhps
gs
push
mov
pop
cmc
pop
pop
fs
mov
push
mov
test
push
xchg
xchg
jne
xchg
in
adc
in
mov
and
jo
inc
fwait
movs
mov
movs
cmps
sahf
xor
pusha
ret
push
mov
fistp
inc
mov
(bad)
xchg
scas
out
xchg
mov
xor
fistp
int
ret
xor
add
mov
enter
les
(bad)
adc
out
lahf
lds
pusha
rcr
in
add
and
or
sbb
add
push
mov
aaa
das
movs
adc
pop
lds
and
das
cmps
sbb
loopne
aad
xor
adc
les
push
dec
inc
and
dec
das
pop
mov
aam
xor
push
sub
imul
pop
in
mov
test
gs
in
(bad)
out
outs
hlt
dec
mov
inc
cmc
pop
pop
gs
xchg
xchg
mov
lods
push
movs
mov
pop
mov
inc
xor
call
div
add
fisub
and
cdq
xor
(bad)
hlt
inc
cmps
adc
and
mov
(bad)
push
repz
xor
clc
mov
ret
xor
add
in
jmp
out
je
and
adc
(bad)
lahf
lock
sub
sub
xor
and
dec
add
and
adc
sbb
and
bound
and
adc
push
lock
movs
sub
daa
cmp
xor
adc
jbe
dec
les
nop
cmp
adc
pop
(bad)
ja
push
aam
cmp
push
js
push
aas
jo
pusha
ja
in
mov
test
in
cmovs
inc
addr16
or
or
push
leave
xchg
test
gs
test
push
mov
scas
adc
inc
nop
jne
xchg
adc
xchg
jo
inc
lods
movs
shl
xchg
cmps
mov
lods
pusha
mov
xor
in
loopne
mov
(bad)
xchg
scas
cli
inc
rol
icebp
push
enter
(bad)
push
cmp
lds
fisttp
xlat
je
and
adc
(bad)
lahf
out
aaa
pop
add
add
daa
xchg
pop
jns
xor
pop
cmc
sbb
cmp
pop
lock
lds
and
and
or
pop
aad
xor
xor
imul
dec
nop
movs
adc
ins
lds
das
push
mov
addr16
or
push
arpl
inc
aas
inc
neg
dec
in
mov
test
gs
in
unpcklps
push
addr16
hlt
push
mov
push
cmc
and
outs
push
mov
push
(bad)
cmps
test
push
scas
xchg
adc
test
movs
mov
es
pusha
mov
mov
fistp
inc
rcl
into
and
sahf
scas
mov
add
xor
mov
into
shl
lds
iret
pop
mul
fdiv
(bad)
adc
fcomp
aaa
test
add
dec
add
add
aaa
rol
jg
mov
aaa
or
and
sbb
push
loopne
aad
xor
cmp
ins
push
jae
jns
jo
dec
inc
outs
lds
push
mov
addr16
sbb
push
das
aad
aas
push
neg
push
in
mov
test
sbb
outs
lsl
push
addr16
hlt
push
mov
inc
cmc
pop
pop
or
xlat
xchg
mov
sti
push
hlt
lea
test
into
xchg
adc
inc
mov
adc
stos
mov
and
jo
inc
mov
xchg
and
and
into
xor
loopne
call
and
std
scas
mov
push
out
mov
push
ret
jbe
not
shl
call
gs
frstor
out
je
and
adc
sti
lahf
call
test
in
add
and
adc
push
cmc
pop
adc
and
movs
inc
lock
movs
and
daa
and
pop
loopne
aad
xor
inc
(bad)
jb
imul
push
inc
ins
lds
das
push
(bad)
ja
addr16
add
ins
aad
aas
jbe
push
ja
in
mov
test
pop
in
punpckhdq
jo
jle
adc
dec
cmc
dec
pop
jg
lods
xchg
mov
lea
gs
test
mov
inc
mov
adc
cmps
mov
and
jo
inc
out
fbld
nop
cmps
mov
pusha
cmps
push
mov
fisttp
inc
movs
adc
and
mov
stc
push
leave
add
xor
hlt
mov
cmc
fs
xor
add
out
retf
out
je
and
adc
out
les
jnp
sbb
cmp
jg
push
outs
cmp
sub
adc
xchg
cmp
aaa
pop
movs
pop
lock
lds
and
adc
xor
sbb
aad
xor
add
push
push
jbe
push
nop
push
movs
adc
jg
imul
push
aam
add
push
arpl
inc
aas
ins
div
ja
in
mov
test
add
bound
pop
out
addr16
hlt
dec
mov
inc
cmc
push
pop
inc
push
mov
lahf
add
push
cmc
mov
mov
xchg
xchg
jne
xchg
in
adc
test
lods
and
jo
inc
hlt
movs
pushf
and
xchg
cmps
pushf
xor
pusha
fst
mov
xor
rcl
test
and
(bad)
scas
mov
push
out
ret
xor
fnstcw
xchg
mov
enter
shl
pop
lock
je
and
adc
fistp
aas
test
add
and
adc
ds
add
add
add
push
mov
aaa
adc
adc
push
lds
cmp
push
loopne
aad
xor
cmp
push
push
xor
cmp
popa
lds
pop
(bad)
jle
inc
aam
or
push
jp
inc
aas
imul
ja
in
mov
test
gs
popa
addps
pop
addr16
hlt
push
mov
push
cmc
bound
pop
push
xchg
in
gs
test
add
mov
inc
mov
adc
movs
mov
and
jo
inc
out
xchg
and
in
test
pusha
movs
push
mov
fistp
inc
mov
(bad)
mov
sti
push
retf
xor
(bad)
mov
into
fnsave
loope
jmp
data16
les
rcl
lahf
(bad)
xchg
and
sbb
ins
ror
in
add
cmp
sub
adc
cmp
movs
sub
and
cmp
adc
sub
and
sub
inc
push
inc
les
jae
jb
xor
ins
das
jns
push
inc
gs
add
push
das
aad
aas
push
div
in
mov
test
in
nop
outs
addr16
hlt
sbb
jne
cmc
bound
outs
push
test
push
cmc
gs
mov
(bad)
out
fwait
push
mov
inc
mov
adc
movs
mov
and
jo
inc
lods
movs
les
sahf
cmps
mov
mov
push
cli
mov
xor
in
xlat
out
inc
in
into
and
in
scas
fiadd
(bad)
rcl
mov
push
lds
leave
xor
add
repnz
(bad)
shl
stc
je
and
adc
fcomp
add
add
and
sbb
adc
sbb
es
cmp
add
or
pop
aad
xor
push
(bad)
push
push
jbe
and
xor
dec
das
aas
(bad)
jl
je
popa
sbb
push
sub
not
push
in
mov
test
push
in
sysret
out
addr16
hlt
push
mov
or
push
mov
mul
test
push
add
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
movs
pushf
and
mov
pusha
cmps
push
mov
fbstp
inc
mov
lds
inc
sti
(bad)
out
out
div
loope
out
jbe
mul
fs
add
mov
enter
out
je
and
adc
fistp
or
in
add
arpl
add
or
sbb
jg
mov
aaa
shld
sbb
push
and
sbb
adc
adc
xor
pop
cmp
outs
push
jne
ja
inc
movs
or
lds
das
inc
(bad)
push
inc
jl
dec
add
push
inc
aad
aas
push
test
in
mov
test
push
in
cvtps2pd
push
addr16
hlt
dec
mov
(bad)
cmc
cmp
outs
push
(bad)
xchg
mov
push
mul
test
add
fwait
xchg
jne
xchg
call
mov
mov
in
movs
mov
and
cwde
xor
mov
in
inc
mov
(bad)
xchg
scas
out
stc
(bad)
icebp
push
leave
add
xor
lock
in
shl
lds
in
sahf
data16
(bad)
je
and
adc
(bad)
lahf
mov
sbb
push
in
add
push
xchg
pop
cmp
adc
sbb
or
and
and
pop
loopne
aad
xor
push
(bad)
jl
jb
inc
nop
dec
movs
dec
inc
cmp
pop
das
imul
dec
cmp
push
ins
aad
aas
ins
test
in
mov
test
push
out
addr16
hlt
push
jno
jnp
adc
jne
push
push
scas
xchg
xchg
add
push
mul
test
add
mov
inc
mov
adc
mov
mov
hlt
movs
mov
mov
cmps
cdq
xor
pusha
mov
xor
in
hlt
inc
not
clc
and
shr
scas
push
loop
cli
xor
fistp
mul
aad
stos
in
fisttp
fidiv
les
fcomp
or
add
or
add
cmp
inc
adc
ds
aaa
push
movs
dec
lock
push
and
and
or
xor
mov
pop
add
push
nop
ins
movs
adc
cmp
push
das
aas
(bad)
gs
push
aam
add
push
arpl
pop
aas
inc
mul
pop
in
mov
test
pop
in
cmovp
inc
addr16
hlt
imul
push
test
scas
add
push
repz
mov
lods
xchg
jne
xchg
xchg
adc
xchg
mov
and
jo
inc
out
lahf
and
cdq
cmps
call
mov
xor
hlt
xlat
rol
and
(bad)
scas
mov
push
fld
shl
mov
retf
shl
enter
shl
(bad)
out
je
and
jne
lahf
fst
pusha
rcr
in
add
push
xchg
pop
ds
or
push
cmc
sbb
jg
mov
aaa
push
movs
dec
lock
ins
and
and
push
loopne
aad
xor
sub
ins
push
jl
dec
nop
jo
dec
inc
pop
lds
pop
(bad)
jl
addr16
sbb
push
das
aad
aas
push
idiv
ins
in
mov
test
sbb
dec
(bad)
out
addr16
hlt
jno
inc
xchg
cmp
cmc
jb
outs
push
lahf
xchg
mov
in
push
mov
add
mov
inc
mov
adc
icebp
mov
and
jo
inc
mov
les
mov
xchg
push
mov
fbstp
inc
lds
retf
and
xchg
scas
mov
push
iret
add
xor
int
in
loopne
xchg
fs
iret
add
in
(bad)
fsub
out
je
and
adc
fstp
sub
pusha
rcl
in
add
or
adc
adc
xchg
push
jg
mov
aaa
adc
adc
and
cmp
sbb
lfs
aad
xor
adc
jl
je
xchg
dec
movs
adc
inc
lds
pop
(bad)
popa
inc
and
dec
or
push
popa
aad
aas
imul
push
mov
test
sbb
bound
jp
inc
addr16
hlt
je
pop
xchg
jnp
inc
cmc
popw
inc
push
mov
push
stos
gs
out
mov
mov
inc
mov
xchg
stos
adc
mov
jo
inc
mov
iret
cwde
movs
cmps
cdq
xor
pusha
mov
clc
mov
xor
in
out
inc
ficom
out
(bad)
korw
scas
call
push
retf
xor
(bad)
mov
leave
xlat
xor
add
test
les
(bad)
lahf
leave
xchg
xor
xor
arpl
xor
test
outs
and
or
adc
or
xor
add
xor
sbb
cmps
xor
add
xor
adc
dec
push
xor
and
jno
push
das
push
(bad)
jae
addr16
add
push
sub
js
dec
div
push
push
mov
test
push
in
nop
pop
addr16
dec
mov
js
push
pop
outs
push
rcl
movs
mov
test
scas
xchg
adc
shl
movs
mov
es
cmps
sahf
xor
pusha
xchg
push
mov
fistp
inc
mov
lds
inc
inc
out
xlat
add
push
fdivr
into
test
out
add
loop
enter
div
ret
cmc
(bad)
jne
lahf
rcl
cmp
sbb
push
add
and
or
adc
aas
adc
cmp
movs
adc
sub
sub
pop
movs
ds
or
sub
xor
push
(bad)
fs
popa
les
pusha
movs
push
inc
xor
ins
das
dec
(bad)
pop
inc
(bad)
aam
xor
push
das
aad
aas
pop
test
in
mov
test
jns
push
cmovp
push
addr16
xchg
pusha
jne
cmc
jb
outs
push
stos
xchg
mov
mov
mov
mov
inc
mov
adc
mov
int
sahf
movs
xchg
and
and
into
xor
call
adc
and
enter
clc
(bad)
fst
mov
push
ret
jbe
not
fs
retf
add
in
lds
out
je
and
adc
ficomp
test
add
or
jae
adc
xchg
cmp
cmp
movs
inc
lock
sbb
or
push
loopne
aad
xor
add
inc
push
jo
jp
xor
dec
inc
pop
lds
das
pop
mov
and
dec
xor
push
ins
aad
aas
push
not
dec
in
mov
test
in
unpckhps
jno
pop
hlt
push
mov
or
push
lods
xchg
test
gs
shr
mov
mov
test
cdq
xchg
mov
xor
inc
lods
movs
shl
xchg
cmps
mov
push
mov
fistp
inc
lods
adc
and
loopne
fiadd
(bad)
aam
aam
mov
push
(bad)
mov
aam
(bad)
xor
fimul
fbstp
les
repnz
les
jnp
adc
adc
outs
or
jno
pop
cmc
pop
adc
sbb
ds
and
push
cmps
add
sbb
pop
loopne
aad
xor
adc
les
nop
jb
push
inc
pop
lds
das
jp
arpl
aam
add
push
push
aad
aas
push
test
in
mov
test
push
in
cvtdq2ps
push
addr16
hlt
jae
push
xchg
ss
cmc
je
jbe
test
stos
add
push
and
lods
add
scas
xchg
jne
xchg
test
mov
xchg
movs
test
repnz
and
cmps
xor
xchg
push
mov
fistp
inc
mov
lds
inc
sti
(bad)
out
rol
xor
std
mov
loop
xlat
xor
add
in
enter
les
(bad)
adc
fcomp
aaa
test
pop
in
add
cmp
or
sbb
cmp
sbb
movs
and
sbb
sub
cmps
cmp
pop
mov
loopne
aad
xor
adc
dec
push
inc
les
nop
ja
push
inc
(bad)
lds
pop
(bad)
push
inc
addr16
add
push
and
jno
sub
inc
ja
in
mov
test
imul
jo
jne
push
mov
inc
cmc
push
pop
inc
push
mov
mov
out
mov
mov
mov
adc
inc
mov
adc
lea
mov
mov
test
mov
xchg
pusha
retf
push
mov
fistp
inc
mov
(bad)
xchg
scas
sti
inc
lock
mov
xor
xchg
mul
retf
add
out
frstor
out
je
and
adc
out
lea
aas
shl
and
and
sub
adc
xchg
push
jg
mov
aaa
adc
adc
push
lds
push
movs
das
dec
cmp
sbb
xor
aad
xor
dec
(bad)
jl
imul
push
inc
lds
das
imul
dec
cmp
push
sub
jnp
outs
test
in
mov
test
in
cmovs
inc
addr16
hlt
push
mov
je
pop
pop
imul
xchg
mov
mov
test
cdq
xchg
test
mov
movs
mov
and
jo
inc
out
popf
and
mov
pusha
cdq
push
cli
mov
xor
out
jmp
and
mov
stc
push
rol
mov
push
out
mov
loope
loop
xchg
add
mov
retf
out
je
and
adc
fcomp
xor
pusha
shl
add
das
xchg
pop
xchg
push
shl
sbb
cmp
movs
pop
lock
xor
das
cmps
jge
add
adc
xor
adc
les
nop
jo
inc
jno
or
push
jnp
jl
das
cmp
bound
dec
imul
mov
test
adc
xor
pop
out
outs
hlt
mov
inc
cmc
inc
pop
je
test
mov
mov
std
push
mov
inc
test
popf
xchg
in
adc
jmp
jo
inc
mov
stos
and
in
sahf
xor
pusha
mov
mov
xor
not
out
inc
mov
(bad)
xchg
scas
aam
inc
mov
xor
in
out
jbe
div
xchg
xchg
add
in
enter
push
xchg
fistp
sub
add
and
adc
sbb
sbb
jg
mov
aaa
adc
and
and
adc
xor
jl
add
dec
push
popa
les
aaa
movs
dec
inc
and
adc
dec
(bad)
arpl
aam
add
push
das
aad
aas
imul
in
mov
test
gs
bound
pop
out
addr16
hlt
push
mov
inc
cmc
pop
pop
fs
adc
pop
lea
add
jne
xchg
jmp
lea
(bad)
inc
mov
mov
xor
pusha
xchg
push
mov
ffreep
push
rcl
inc
mov
(bad)
in
scas
mov
push
rol
xor
int
(bad)
jbe
not
add
ror
les
cmc
adc
out
lahf
mov
add
add
sub
or
xor
xchg
push
jg
mov
aaa
adc
adc
das
lds
pop
movs
ss
xor
mov
loopne
aad
xor
ds
jl
pusha
les
nop
ins
movs
dec
inc
inc
lds
das
pop
(bad)
pop
inc
fs
sbb
push
ins
aad
aas
dec
not
dec
in
mov
test
in
cmovs
inc
addr16
push
mov
dec
cmc
pop
pop
push
add
push
fwait
gs
test
add
mov
inc
mov
adc
mov
mov
inc
lea
(bad)
es
cmps
mov
mov
push
xor
out
inc
out
adc
and
in
scas
mov
push
enter
in
aad
push
fnstsw
shl
lds
int
xchg
out
je
and
adc
fcomp
xor
arpl
sub
push
add
and
add
adc
ds
aaa
xor
lds
pop
movs
and
cmps
outs
daa
cmp
xor
sbb
push
nop
ins
movs
adc
lds
das
push
(bad)
inc
outs
aam
add
push
dec
aad
aas
inc
neg
inc
in
mov
test
in
addps
ins
addr16
hlt
push
mov
inc
cmc
outs
pop
push
push
test
mov
mov
cmc
mov
adc
popf
jne
xchg
in
adc
mov
xchg
movs
pushf
and
xchg
cmps
mov
xchg
pusha
lds
mov
xor
hlt
xlat
fadd
shl
mov
out
fadd
stc
xor
mov
into
fs
out
add
ror
je
and
jne
lahf
lds
pusha
shl
dec
add
or
jl
sbb
or
jg
mov
aaa
sub
and
and
xor
inc
aad
xor
push
(bad)
ins
push
ins
les
jo
or
lds
pop
(bad)
cmova
adc
ja
push
aas
push
not
dec
in
mov
test
pop
in
lsl
inc
addr16
hlt
push
mov
inc
cmc
pop
pop
jb
mov
push
xchg
gs
out
fwait
push
mov
inc
stos
jne
xchg
mov
mov
mov
call
and
int
movs
fistp
inc
mov
(bad)
xchg
scas
mov
push
lds
hlt
xor
clc
mov
out
xchg
retf
add
out
vphaddwd
(bad)
je
and
adc
fistp
sub
aas
shl
or
jl
daa
pop
cmp
cmc
sbb
sbb
inc
lock
imul
ds
loopne
aad
xor
inc
(bad)
jb
imul
dec
inc
cmp
(bad)
je
inc
aam
and
popa
aas
jle
inc
ja
in
mov
test
push
in
unpckhps
push
addr16
push
mov
or
pop
pop
outs
push
xchg
mul
test
push
mov
inc
mov
adc
mov
mov
and
mov
pusha
mov
cli
mov
xor
in
mov
not
mul
enter
aad
mov
xor
(bad)
mov
shl
jecxz
stos
in
fisttp
out
xlat
and
adc
hlt
lahf
not
sbb
je
or
or
pop
rol
inc
adc
add
movs
pop
lock
cmp
cmp
xor
add
xor
cmp
pop
push
jbe
jp
dec
movs
cmovne
adc
jp
ja
jg
dec
or
push
jbe
js
push
not
jne
inc
mov
test
arpl
dec
sysret
out
addr16
hlt
dec
mov
dec
cmc
pop
pop
ins
push
nop
xchg
scas
add
push
lods
gs
mov
(bad)
out
mov
scas
xchg
jne
xchg
(bad)
adc
xchg
mov
and
jo
inc
jmp
iret
mov
xor
pusha
cmps
push
mov
fild
les
into
and
nop
scas
mov
push
int
mov
push
(bad)
mov
xchg
fs
xchg
add
ror
shl
(bad)
adc
fcomp
aaa
test
add
test
pop
es
adc
sbb
sbb
jg
mov
aaa
or
and
sub
adc
ss
xor
push
(bad)
ins
push
push
les
cmp
push
das
dec
(bad)
arpl
aam
adc
das
aad
aas
test
in
mov
test
(bad)
in
lsl
inc
addr16
hlt
push
mov
inc
cmc
inc
pop
jp
mov
mov
mov
test
add
mov
movs
adc
inc
mov
adc
mov
cwde
inc
scas
movs
mov
es
cmps
mov
push
cmps
mov
xor
not
into
inc
mov
(bad)
shr
push
test
fcom
mov
(bad)
fs
int3
add
ror
je
and
adc
fistp
xor
ins
shl
in
add
cmp
xchg
xor
pop
cmc
add
cmp
adc
add
movs
cmp
daa
and
xor
dec
(bad)
jl
imul
nop
jae
dec
inc
inc
lds
push
(bad)
pop
inc
fs
sbb
push
ins
aad
aas
jbe
dec
ja
in
mov
test
gs
in
cvtdq2ps
jg
pop
hlt
push
mov
or
push
lods
xchg
movs
add
push
fwait
gs
test
push
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
mov
es
cmps
test
pusha
fst
mov
xor
out
inc
shl
scas
test
rcl
hlt
xor
lds
leave
fs
repz
ror
test
cli
adc
loop
(bad)
xchg
push
pop
test
sbb
xor
js
xor
cmp
adc
ds
aaa
xor
lds
and
sbb
push
loopne
aad
xor
or
les
ins
movs
dec
inc
dec
lds
push
(bad)
pop
inc
push
aam
cmp
push
arpl
inc
aas
dec
mul
push
in
mov
test
push
in
sysret
out
addr16
adc
push
push
test
scas
add
push
movs
mov
mov
adc
inc
mov
adc
mov
xchg
and
jo
inc
out
frstor
nop
cmps
mov
push
xchg
mov
xor
(bad)
inc
lods
adc
inc
int
fild
(bad)
out
push
fiadd
mov
push
(bad)
mov
int
in
xor
add
loop
iret
data16
(bad)
je
and
adc
repnz
rcl
(bad)
rcl
in
add
add
xor
add
adc
push
mov
aaa
sub
and
and
adc
or
xor
pop
or
dec
push
popa
les
inc
movs
dec
inc
cmp
bound
pop
(bad)
pusha
inc
je
bound
push
aad
aas
jle
push
ja
in
mov
test
push
in
(bad)
out
addr16
hlt
or
adc
jle
outs
push
mov
push
test
test
add
mov
cmps
adc
inc
xchg
xchg
jmp
mov
mov
test
pushf
and
mov
fst
mov
xor
in
mov
mov
lds
inc
sti
(bad)
mov
xor
sar
fs
xor
add
les
fnstenv
les
fstp
sub
add
or
adc
and
daa
pop
add
adc
cmp
push
lock
movs
sbb
daa
sbb
add
cmp
and
add
jl
jno
bound
cmp
inc
das
push
aam
sub
sbb
aad
aas
push
div
ja
in
mov
test
pop
in
cmovbe
outs
addr16
hlt
ins
mov
jle
pop
pop
push
add
push
(bad)
mov
std
push
mov
popf
adc
inc
call
(bad)
jmp
jo
inc
stos
movs
fbld
test
(bad)
push
loopne
xor
xlat
out
inc
cmps
adc
and
call
(bad)
fcom
mov
push
fdivr
leave
fs
int
stos
in
gs
(bad)
out
je
and
adc
fcomp
cmp
jnp
sbb
sub
and
add
(bad)
cmc
pop
adc
or
and
and
and
adc
or
daa
xor
sbb
push
nop
movs
inc
inc
push
lds
das
push
(bad)
pop
inc
jg
dec
sub
push
sub
push
aas
not
adc
push
mov
test
pop
in
(bad)
out
addr16
hlt
push
mov
add
inc
pop
push
add
push
mov
add
mov
inc
cmps
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
lods
and
xchg
cmps
pushf
xor
pusha
xchg
push
test
mov
enter
cmps
adc
and
(bad)
scas
mov
push
ret
xor
(bad)
mov
int
(bad)
xor
add
lods
(bad)
fsub
out
je
and
adc
mov
pop
add
add
push
xchg
pop
ds
rol
pop
adc
es
aaa
aas
movs
inc
lock
xor
cmp
and
inc
mov
loopne
aad
xor
cs
push
push
jae
and
jno
dec
das
inc
(bad)
arpl
aam
and
sbb
aad
aas
push
div
pop
in
mov
test
sbb
out
addr16
hlt
mov
push
cmc
inc
pop
outs
push
pushf
xchg
mov
cmps
push
mov
mov
mov
mov
inc
mov
adc
mov
mov
jo
inc
mov
mov
es
mov
push
cmps
mov
xor
in
xlat
cld
inc
mov
(bad)
(bad)
scas
mov
push
aad
mov
push
ret
jbe
test
add
out
iret
data16
out
je
and
adc
fstp
sub
ins
shl
in
add
daa
xchg
pop
es
xadd
cmc
aas
adc
and
movs
daa
lock
movs
jb
and
adc
xor
adc
jl
push
les
nop
jae
jb
imul
gs
inc
aam
or
push
jl
inc
aas
jbe
pop
ja
in
mov
test
in
unpckhps
push
addr16
push
mov
or
push
lods
xchg
mov
mov
fwait
gs
test
push
mov
mov
jne
xchg
mov
cmp
ss
mov
and
jo
inc
lods
movs
movs
and
mov
mov
push
movs
mov
xor
(bad)
mov
cmps
adc
and
ret
inc
aad
cld
push
jmp
push
(bad)
mov
fisub
lds
mov
in
out
out
je
and
adc
fstp
xor
sbb
sbb
das
add
or
add
and
pop
adc
ss
aaa
adc
lds
dec
and
dec
loopne
aad
xor
xor
push
nop
pop
movs
adc
lds
das
push
(bad)
jg
pop
aam
sbb
push
arpl
push
aas
dec
neg
dec
in
mov
test
push
in
nop
pop
addr16
dec
mov
pop
cmc
pop
pop
outs
push
test
call
out
mov
xchg
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
pushf
and
sahf
cmps
mov
sahf
pusha
adc
mov
hlt
xlat
lock
fst
jmp
inc
xchg
scas
hlt
inc
jecxz
out
rol
xor
aad
out
jbe
not
xlat
xor
add
in
(bad)
mov
and
adc
ficomp
add
in
add
adc
aaa
pop
and
adc
push
mov
aaa
adc
and
add
pop
loopne
aad
xor
pop
(bad)
pop
push
popa
les
nop
jne
push
inc
jns
inc
das
pop
(bad)
jo
dec
aam
xor
push
sub
test
in
mov
test
gs
in
cmovo
pop
addr16
hlt
outs
mov
push
cmc
bound
inc
push
mov
test
push
cmc
gs
test
push
mov
inc
movs
jne
xchg
xchg
adc
mov
jo
inc
xchg
movs
cdq
and
mov
pusha
xchg
push
test
mov
inc
in
retf
and
in
scas
fiadd
mov
xor
sar
fs
xor
add
in
(bad)
mul
out
je
and
adc
sti
lahf
(bad)
xchg
xor
sub
add
jle
pop
pop
es
or
daa
cmc
inc
adc
sub
movs
sbb
adc
movs
sbb
daa
xor
pop
loopne
aad
xor
sbb
jl
jb
pop
nop
ins
movs
pop
inc
and
adc
arpl
outs
inc
fs
add
push
outs
aad
aas
push
not
push
push
mov
test
pop
in
cmovae
inc
addr16
hlt
push
popa
xchg
jnp
or
push
test
lahf
add
push
sti
gs
add
xchg
jecxz
adc
mov
jo
inc
xchg
movs
fbld
popf
cmps
cdq
xor
pusha
mov
mov
xor
xlat
jmp
and
(bad)
scas
mov
push
stos
add
push
cmp
shl
test
aad
fdiv
popf
adc
mov
pop
sub
jnp
add
cmp
jp
xor
cs
jl
pop
cmc
sbb
cmp
pop
lock
push
and
cmps
adc
loopne
aad
xor
push
(bad)
inc
push
jbe
jp
movs
adc
lds
aas
(bad)
jae
inc
aam
add
push
ins
aad
aas
push
div
ja
in
mov
test
jno
nop
jge
inc
hlt
push
mov
or
pop
pop
push
lods
xchg
scas
add
push
mov
add
xchg
xchg
jne
xchg
in
adc
sahf
mov
and
jo
inc
out
pushf
and
sahf
cmps
cmps
xor
pusha
xchg
push
std
mov
xor
rcl
out
mov
lds
std
(bad)
cld
push
int
mov
push
(bad)
mov
in
out
xor
add
loope
frstor
out
je
and
adc
out
lds
pusha
rcl
test
sub
or
popa
cmc
sbb
jg
mov
aaa
daa
movs
add
sbb
sbb
or
or
inc
aad
xor
push
(bad)
jl
sub
movs
push
inc
aas
lds
push
(bad)
gs
addr16
and
push
push
aad
aas
imul
pop
mov
test
gs
pop
orps
ins
addr16
hlt
inc
mov
pmaddwd
jle
test
xchg
gs
test
push
mov
cmps
adc
inc
popf
jne
xchg
loop
mov
mov
and
jo
inc
mov
and
cmps
mov
push
cmps
mov
xor
jmp
and
out
scas
inc
(bad)
icebp
push
lds
stos
xor
fdivr
iret
xlat
xor
add
fimul
shl
mov
ficomp
adc
shl
dec
outs
daa
xchg
adc
adc
cmp
movs
inc
lock
movs
es
cmp
cs
aad
xor
sub
pop
push
imul
pop
inc
cmp
adc
inc
(bad)
pusha
inc
jg
cmp
inc
mov
push
inc
aad
aas
not
inc
in
mov
test
inc
in
nop
and
outs
hlt
inc
mov
dec
cmc
pop
pop
push
add
push
repnz
movs
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
out
xlat
icebp
inc
out
adc
and
mov
fcom
aam
pushf
aad
push
test
(bad)
xlat
xor
gs
enter
mov
popf
adc
(bad)
lahf
leave
xchg
and
xor
and
adc
cmp
jge
push
outs
cmp
add
adc
imul
lock
ds
or
or
xor
adc
les
nop
jno
outs
inc
jno
pop
das
cmp
aam
or
push
push
aad
aas
push
mul
push
in
mov
test
push
in
cmovns
push
addr16
hlt
jne
jg
inc
jne
cmc
pop
pop
pop
push
nop
xchg
scas
add
push
repz
mov
adc
inc
mov
adc
mov
(bad)
inc
out
mov
out
cmps
test
pusha
xchg
push
mov
fistp
inc
ficom
leave
and
(bad)
scas
mov
push
enter
cwde
aad
push
sti
mov
loop
mov
enter
les
(bad)
cli
data16
je
and
adc
in
mov
add
add
sbb
sbb
and
adc
push
mov
aaa
push
movs
and
daa
lds
and
sbb
push
loopne
aad
xor
xor
jbe
jne
bound
lds
cmp
push
inc
jae
outs
adc
cs
aas
pop
test
in
mov
test
push
in
pcmpeqb
pop
addr16
hlt
dec
mov
dec
cmc
pop
pop
jle
aad
mov
mov
hlt
gs
test
add
call
jne
xchg
out
adc
mov
cmps
inc
mov
mov
cdq
cmps
shl
into
xor
out
xlat
repz
movs
adc
and
(bad)
scas
mov
sti
(bad)
aam
int
loope
(bad)
aad
push
pushf
mov
nop
fs
loope
test
icebp
gs
aad
in
out
je
and
adc
rcr
test
shr
sbb
jle
or
xchg
pop
es
jbe
sub
sbb
cmp
movs
sub
and
add
sub
adc
aas
xor
adc
ins
push
imul
push
inc
lds
xor
pop
inc
fs
and
push
and
push
aas
pop
div
in
mov
test
inc
in
packsswb
ja
add
addr16
jl
adc
push
pop
push
push
stos
xchg
mov
mov
test
push
lahf
xchg
jne
xchg
out
adc
mov
jo
inc
mov
xchg
and
push
div
mov
inc
repz
and
into
scas
mov
add
push
loop
stos
jbe
imul
fs
rol
loope
xchg
out
je
and
adc
fcomp
sub
add
arpl
jbe
push
pop
adc
sub
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
pop
(bad)
push
push
outs
les
push
jbe
popa
lds
gs
pop
inc
and
mov
push
jb
(bad)
push
in
mov
test
pop
in
(bad)
out
addr16
sbb
inc
xchg
push
jne
cmc
push
pop
dec
push
stos
xchg
test
gs
test
push
xchg
xchg
jne
xchg
mov
test
movs
ss
mov
and
jo
inc
out
shl
cmps
test
pusha
test
mov
xor
(bad)
xlat
loope
out
mul
xchg
scas
loop
add
push
repnz
xor
fidivr
aam
(bad)
aam
iret
in
gs
out
je
and
jne
lahf
retf
pop
and
add
push
xchg
pop
popa
xchg
jo
and
and
outs
mov
aaa
add
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
add
aam
and
push
sub
inc
aas
push
jae
jne
add
gs
in
mulps
push
addr16
adc
push
cmc
popw
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
hlt
adc
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
in
inc
repz
and
nop
scas
stc
inc
add
in
call
cli
push
(bad)
mov
int3
xor
fldenv
(bad)
fisub
out
je
and
adc
mov
pop
xor
popa
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
inc
lock
cmp
dec
sbb
push
loopne
aad
xor
cmp
push
push
movs
jae
jns
adc
jp
inc
jg
xor
jne
add
push
in
mov
test
sbb
out
addr16
hlt
sbb
jne
cmc
and
push
push
leave
xchg
scas
add
push
mov
cdq
test
push
test
movs
jne
xchg
cwde
adc
icebp
mov
and
jo
inc
xchg
movs
cmps
and
mov
lahf
xor
pusha
adc
fbstp
inc
mov
(bad)
lahf
scas
jmp
push
mov
aad
push
cmp
xor
add
mov
loope
hlt
out
je
and
adc
scas
lahf
repz
sub
sub
ins
shl
in
add
jns
pop
pop
cmp
adc
adc
pop
lock
adc
add
pop
loopne
aad
xor
push
(bad)
or
les
nop
jno
imul
adc
js
inc
inc
fs
and
jle
sbb
push
test
in
mov
test
pop
in
punpckldq
jo
pop
hlt
adc
outs
cmc
and
dec
push
xchg
xchg
mov
call
gs
test
push
rol
jne
xchg
hlt
adc
mov
jo
inc
mov
iret
ret
es
cwde
xor
pusha
test
mov
xor
jmp
and
nop
scas
cmps
inc
rol
jecxz
mov
loope
std
aad
push
cmp
fs
xor
add
test
xchg
data16
shl
adc
mov
pop
xor
add
cmp
outs
shl
jg
mov
aaa
or
dec
lock
lds
and
pop
cmps
and
pop
mov
loopne
aad
xor
adc
adc
les
nop
je
jb
inc
lds
das
mov
aam
and
push
popa
aad
aas
outs
div
dec
in
mov
test
add
sub
popa
out
addr16
hlt
push
inc
xchg
dec
jne
cmc
and
push
push
xchg
xchg
mov
gs
out
mov
adc
inc
mov
adc
movs
mov
and
jo
inc
xchg
movs
frstor
loope
pushf
xor
pusha
xchg
mov
xor
rcl
inc
mov
lds
aam
in
scas
add
xor
cmp
lea
xlat
add
lods
(bad)
loop
lock
je
and
adc
scas
lahf
icebp
xchg
add
xor
jg
xor
cmp
add
jge
daa
cmc
and
or
and
dec
movs
inc
lock
cmp
and
dec
loopne
aad
xor
or
adc
les
inc
lds
inc
jg
xor
jge
push
aas
div
in
mov
test
dec
in
minps
je
push
hlt
sbb
jne
cmc
and
jb
adc
lods
test
push
mov
inc
movs
jne
xchg
mov
iret
dec
and
jo
inc
xchg
movs
cdq
and
mov
lahf
xor
pusha
adc
fisttp
inc
cli
adc
and
lahf
scas
rol
cld
push
stos
add
xor
cmp
mov
rol
mov
out
je
and
adc
scas
lahf
leave
xchg
add
test
aaa
in
add
push
xchg
pop
jge
jl
and
cmp
add
or
adc
inc
lock
pop
and
pop
cmps
xor
sbb
push
loopne
aad
xor
xor
les
nop
jno
pop
inc
imul
jp
pusha
aam
and
sub
pop
aas
outs
mul
in
mov
test
sbb
xor
pop
out
addr16
hlt
sbb
inc
xchg
inc
jne
cmc
and
jne
test
mov
mov
out
mov
adc
inc
cmps
jne
xchg
test
ss
mov
and
jo
inc
mov
iret
lods
es
test
pusha
test
mov
xor
(bad)
xlat
call
and
fild
icebp
push
ret
xor
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
shl
in
add
cmp
imul
cmc
or
pop
mov
aaa
or
or
and
sbb
pop
loopne
aad
xor
or
push
jbe
push
nop
je
outs
inc
inc
lds
das
pusha
mov
xor
imul
jo
ins
in
mov
test
arpl
xor
pop
out
addr16
hlt
jo
inc
xchg
pop
jne
cmc
cs
dec
push
test
mov
lea
mov
nop
xchg
jne
xchg
mov
mov
xchg
inc
sahf
movs
test
cmc
iret
lahf
es
sahf
xor
pusha
xchg
mov
xor
mov
out
inc
lods
adc
and
nop
scas
mov
push
mov
in
jmp
jbe
test
add
mov
fisub
out
je
and
adc
mov
pop
xor
shl
in
add
aas
xchg
cmp
adc
sub
xor
adc
ds
add
popa
daa
add
push
loopne
aad
xor
adc
adc
les
nop
ja
jle
pop
lds
das
jle
push
inc
jl
sub
jno
add
imul
jge
push
test
inc
in
movq
pop
addr16
hlt
push
mov
or
and
dec
push
mov
stos
add
push
mov
scas
test
push
mov
inc
movs
jne
xchg
scas
adc
mov
mov
jo
inc
mov
iret
cwde
es
mov
push
pushf
mov
xor
jmp
and
lahf
scas
inc
(bad)
call
out
cwde
aad
push
cmp
(bad)
rol
mov
frstor
out
je
and
adc
scas
lahf
rcl
shl
in
add
xchg
pop
cmp
and
and
push
adc
sub
movs
sbb
push
lds
and
add
cs
aad
xor
push
(bad)
or
les
ja
inc
inc
lds
das
jge
add
aam
and
push
pop
aad
aas
jae
je
dec
in
mov
test
arpl
xor
pop
out
addr16
hlt
inc
mov
or
and
dec
push
rcl
mov
xchg
test
test
mov
adc
jmp
jo
inc
in
movs
cdq
and
loope
test
pusha
xchg
mov
xor
aam
out
inc
stc
adc
and
nop
scas
inc
(bad)
icebp
push
out
out
fst
mov
cwde
mov
leave
push
(bad)
add
mov
ret
data16
fdiv
(bad)
adc
scas
lahf
into
xchg
dec
pop
and
add
cmp
xchg
xor
and
and
or
sbb
or
inc
lock
lds
and
and
xor
add
ds
or
inc
push
je
inc
nop
ins
movs
dec
inc
(bad)
lds
das
jg
push
inc
jle
imul
aad
aas
push
div
dec
in
mov
test
push
in
mulps
pop
addr16
hlt
adc
dec
cmc
das
pop
gs
test
mov
popf
test
push
mov
inc
mov
adc
icebp
mov
and
jo
inc
test
iret
lahf
movs
cmps
xchg
xor
pusha
pushf
push
mov
fisttp
inc
in
icebp
and
sahf
scas
inc
(bad)
cld
push
mov
aad
push
aad
out
jbe
test
add
mov
in
lock
je
and
adc
mov
pop
jne
pusha
shl
pop
outs
push
xchg
xor
adc
sub
pop
lock
lds
dec
sbb
or
add
add
adc
adc
les
ja
js
jns
jne
jp
inc
jg
cmp
popa
mov
push
jno
add
sub
in
mov
test
fs
cmovo
dec
addr16
hlt
adc
dec
cmc
and
jo
mov
mov
mov
mov
adc
inc
mov
adc
movs
mov
and
jo
inc
pushf
movs
mov
call
cmps
xchg
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
aad
cli
(bad)
mov
xor
cmp
mov
rol
mov
out
(bad)
fnstenv
(bad)
adc
mov
pop
and
add
cmp
aaa
shl
push
adc
ins
mov
aaa
or
add
adc
sbb
dec
pop
cmps
xor
sbb
push
loopne
aad
xor
sub
or
les
jno
je
and
adc
jns
jp
fs
and
outs
aad
aas
push
div
ja
in
mov
test
jg
xor
pop
out
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
rcl
mov
mov
mov
test
cmps
jne
xchg
test
ss
mov
and
jo
inc
mov
iret
mov
xor
pusha
test
mov
xor
call
mov
mov
(bad)
xchg
scas
rol
aam
rol
loope
(bad)
xlat
push
cmp
aam
iret
in
gs
out
je
and
adc
mov
pop
das
test
shl
in
add
cmp
jae
and
sub
and
movs
sub
pop
lds
cmp
sbb
inc
mov
loopne
aad
xor
or
les
jbe
jb
jle
or
jge
add
aam
cmp
push
imul
push
ja
in
mov
test
dec
in
cmovae
fs
hlt
dec
mov
push
cmc
das
pop
dec
push
test
mov
mov
out
mov
adc
inc
mov
adc
mov
xchg
inc
(bad)
movs
sahf
and
loope
lahf
xor
pusha
adc
fisttp
rcl
and
nop
scas
stc
inc
cli
(bad)
in
test
xor
xchg
shl
xlat
add
enter
(bad)
out
je
and
adc
std
lahf
jmp
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
adc
pop
lock
or
dec
sbb
popa
daa
add
push
loopne
aad
xor
(bad)
push
push
popa
les
inc
pop
lds
mov
aam
and
push
popa
aad
aas
imul
add
pop
in
nop
je
jle
popa
mov
arpl
and
or
stos
xchg
lock
push
mov
popf
test
push
xchg
xchg
jne
xchg
nop
adc
mov
mov
jo
inc
xchg
movs
cdq
and
stc
cmps
xchg
xor
pusha
adc
xchg
xor
aam
hlt
inc
cli
adc
and
lahf
scas
inc
(bad)
cld
push
mov
out
out
loope
cmp
fs
xor
add
mov
cdq
data16
int3
je
and
adc
scas
lahf
rcl
add
xor
sbb
adc
es
cmp
adc
adc
sub
add
adc
sbb
dec
sbb
mov
loopne
aad
xor
or
jbe
outs
les
nop
jno
imul
dec
das
popa
(bad)
jp
data16
and
jbe
(bad)
outs
mul
in
mov
test
inc
in
cmovns
pusha
addr16
hlt
bound
dec
cmc
and
push
push
test
stos
mov
mov
adc
inc
cmps
jne
xchg
lahf
adc
mov
xchg
and
jo
inc
mov
cdq
es
push
mov
movs
push
aam
lock
cld
adc
and
xchg
scas
cli
inc
out
call
loope
int
in
push
cmp
fs
xor
add
mov
out
je
and
adc
mov
pop
test
xor
sbb
add
add
cmp
adc
das
mov
aaa
or
inc
lock
lds
inc
cmps
xor
cmp
xor
cmp
outs
push
jl
and
(bad)
lds
das
inc
(bad)
jge
push
aam
and
push
pop
aad
aas
jno
sub
in
mov
test
inc
in
mulps
and
hlt
push
inc
xchg
inc
jne
cmc
das
pop
je
rcl
mov
mov
mov
push
cmps
xchg
jne
xchg
in
adc
movs
mov
and
jo
inc
out
shl
cmps
shl
xchg
mov
xor
mov
loope
loope
mul
xchg
scas
loop
add
sti
xor
(bad)
mov
into
lds
int
fxam
repz
fsub
out
je
and
adc
mov
pop
xor
arpl
xor
aaa
add
daa
xchg
ds
adc
daa
cmc
and
jg
mov
aaa
shld
cmp
dec
or
es
aad
xor
adc
push
push
popa
les
push
lds
das
jp
inc
jg
jb
popa
mov
push
jge
dec
aas
js
fs
in
mov
test
in
maxps
je
pop
hlt
adc
dec
cmc
jo
imul
mov
test
add
mov
inc
movs
jne
xchg
scas
adc
lock
and
jo
inc
popf
movs
mov
es
cmps
lahf
xor
pusha
adc
fisttp
inc
mov
(bad)
xchg
scas
aam
aam
loopne
out
out
jmp
mov
iret
mov
rol
mov
shl
repz
and
adc
scas
lahf
out
xchg
aas
pop
jno
arpl
aaa
in
add
add
adc
and
push
adc
aaa
mov
aaa
adc
inc
lock
(bad)
add
and
push
mov
loopne
aad
xor
cmp
push
push
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
sub
test
in
mov
test
jnp
xor
pop
out
addr16
xchg
ins
jne
cmc
and
dec
push
rcl
mov
leave
test
rol
jne
xchg
test
ss
mov
and
jo
inc
mov
and
cmps
xor
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
shr
push
xlat
add
xor
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
shr
in
add
cmp
shl
jg
mov
aaa
or
and
and
sbb
pop
loopne
aad
xor
sub
adc
les
je
pop
inc
inc
lds
das
jg
push
inc
jl
xor
jne
add
push
div
gs
mov
test
dec
in
cmova
and
hlt
adc
push
cmc
das
pop
dec
push
xchg
xchg
mov
gs
fwait
add
nop
xchg
jne
xchg
mov
mov
xchg
inc
nop
movs
sahf
and
call
push
test
xlat
push
jmp
lods
inc
lods
adc
and
nop
scas
mov
add
xor
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
add
xor
das
add
aas
xchg
cmp
jo
daa
cmc
daa
adc
and
and
and
lds
dec
pop
cmps
pop
daa
inc
mov
loopne
aad
xor
adc
push
push
outs
les
jbe
jno
jge
adc
addr16
push
inc
jl
cmp
push
jno
add
imul
inc
mov
test
dec
in
minps
and
hlt
jae
inc
xchg
inc
jne
cmc
and
dec
push
mov
scas
add
push
mov
stos
test
add
mov
inc
movs
jne
xchg
mov
movs
mov
and
jo
inc
xchg
movs
test
mov
pusha
xchg
mov
xor
(bad)
xlat
test
loop
lahf
scas
inc
(bad)
cld
push
jmp
out
in
aad
push
xchg
fbld
rol
retf
data16
les
les
cld
lahf
in
adc
xor
add
cmp
jl
and
or
jg
mov
aaa
sub
and
add
push
loopne
aad
xor
or
or
les
nop
jno
pop
inc
inc
lds
cmp
push
inc
and
pop
and
pop
aad
aas
outs
mul
in
mov
test
in
vmread
inc
addr16
hlt
adc
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
mov
mov
push
mov
inc
cmps
jne
xchg
test
mov
jo
inc
mov
iret
mov
xor
pusha
pushf
push
mov
test
xlat
cld
inc
ficom
mul
xchg
scas
cli
inc
out
icebp
push
mov
aad
push
aad
les
test
add
mov
out
je
and
adc
mov
pop
das
test
shl
dec
outs
sub
jo
and
aas
adc
adc
add
and
and
sub
add
sbb
aas
mov
pop
or
push
je
and
cmp
mov
ins
and
push
jns
add
dec
test
in
mov
test
inc
in
packuswb
je
inc
hlt
dec
mov
pop
cmc
and
push
push
test
movs
gs
mov
push
cmps
xchg
jne
xchg
mov
sar
movs
mov
and
jo
inc
(bad)
movs
and
cmps
lahf
xor
pusha
test
mov
xor
rcl
inc
sti
adc
and
nop
scas
stc
inc
aam
out
test
xor
(bad)
mov
iret
fdiv
aam
in
in
gs
fisub
out
je
and
adc
mov
pop
test
aaa
in
add
aas
xchg
ds
xor
adc
sub
add
push
lds
add
xor
pop
mov
loopne
aad
xor
(bad)
adc
les
je
or
lds
das
jp
push
inc
jl
push
and
push
jno
add
imul
pusha
mov
test
gs
in
maxps
pop
addr16
hlt
ja
inc
xchg
cmp
cmc
and
dec
push
nop
xchg
lods
add
push
mov
lea
mov
adc
inc
cmps
jne
xchg
mov
iret
jmp
and
jo
inc
call
iret
call
pusha
xchg
mov
xor
aam
test
loop
lahf
scas
inc
(bad)
call
in
cwde
aad
push
cmp
fs
xor
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
push
pop
das
test
add
cmp
xor
es
pop
adc
sub
add
pop
lds
and
pop
cmps
sbb
push
mov
loopne
aad
xor
or
inc
push
popa
les
jbe
or
lds
das
jns
push
inc
data16
and
push
jb
(bad)
outs
div
ja
in
mov
test
pop
in
cvtps2pd
jo
push
hlt
push
mov
push
cmc
and
dec
push
xchg
xchg
mov
movs
push
mov
mov
mov
adc
inc
movs
jne
xchg
test
ss
and
movs
and
xchg
pusha
xchg
mov
xor
aam
out
inc
in
hlt
and
xchg
scas
stc
inc
out
icebp
push
lock
xor
cmp
les
xlat
add
mov
out
je
and
adc
mov
pop
and
add
cmp
xor
daa
cmc
sbb
das
mov
aaa
push
movs
add
and
sbb
adc
push
aad
xor
or
inc
push
jbe
fs
ja
dec
inc
(bad)
lds
das
jg
add
aam
and
imul
jo
inc
in
mov
test
gs
in
mulps
fs
hlt
push
mov
push
cmc
das
pop
dec
push
rcl
mov
lea
mov
adc
inc
cmps
jne
xchg
mov
sar
movs
mov
and
jo
inc
test
iret
lahf
es
push
lods
mov
xor
rcl
in
inc
movs
adc
and
nop
scas
stc
inc
add
loope
leave
aad
push
(bad)
mov
iret
fs
(bad)
add
mov
fldenv
out
je
and
adc
mov
pop
xor
adc
xor
sbb
aas
xchg
aas
xchg
cmp
adc
sub
adc
adc
adc
sbb
sub
add
sub
(bad)
push
popa
les
jbe
pop
inc
jns
adc
jp
push
inc
jl
je
fs
push
jno
add
imul
data16
test
gs
in
cmova
je
pop
hlt
adc
dec
cmc
and
push
push
mov
scas
add
push
mov
movs
test
push
mov
inc
movs
jne
xchg
mov
iret
call
and
jo
inc
xchg
movs
popf
and
mov
lahf
xor
pusha
adc
fistp
inc
fcom
hlt
and
lahf
scas
(bad)
inc
aam
call
out
call
retf
push
cmp
test
rol
mov
cli
data16
(bad)
je
and
adc
scas
lahf
out
xchg
add
das
test
shl
in
add
cmp
xchg
push
shl
or
xor
sbb
adc
adc
push
cmps
xor
sbb
xor
push
(bad)
push
push
push
movs
pop
inc
inc
lds
das
inc
mov
pop
and
jbe
(bad)
pop
mul
in
mov
test
jnp
xor
inc
out
addr16
hlt
ja
inc
xchg
push
jne
cmc
and
ja
xchg
xchg
scas
add
push
mov
scas
test
push
xchg
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
mov
iret
movs
movs
cmps
lahf
xor
pusha
test
mov
xor
(bad)
xlat
jmp
(bad)
xchg
scas
int
out
out
mov
loope
into
aad
push
cmp
fs
xor
add
mov
out
je
and
adc
mov
pop
test
shl
in
add
sbb
das
shl
jg
mov
aaa
adc
and
sbb
jns
add
xor
adc
push
ins
les
je
jbe
dec
lds
das
addr16
push
inc
jno
push
and
push
dec
aad
aas
jb
push
ja
in
mov
test
inc
in
nop
fs
hlt
jae
inc
xchg
dec
jne
cmc
das
pop
inc
push
xchg
xchg
mov
popf
push
mov
mov
mov
push
add
jne
xchg
mov
sar
mov
xchg
inc
mov
iret
lea
call
push
scas
mov
xor
mov
cmc
inc
fcom
icebp
and
nop
scas
aam
add
in
std
aad
push
(bad)
mov
fsub
xlat
add
mov
aam
loopne
iret
je
and
adc
mov
pop
jo
ins
shl
pop
outs
push
xchg
das
xchg
xor
daa
cmc
cmp
or
push
aaa
sbb
inc
lock
sbb
sub
mov
loopne
aad
xor
sbb
adc
les
ja
push
pop
lds
das
(bad)
(bad)
inc
jl
imul
aad
aas
jle
je
adc
outs
mov
test
ins
in
pcmpeqb
pop
addr16
hlt
inc
mov
dec
cmc
and
ins
push
mov
mov
gs
add
xchg
adc
inc
movs
jne
xchg
mov
into
dec
and
jo
inc
mov
iret
cwde
xchg
adc
fild
inc
rcl
hlt
and
lahf
scas
cli
inc
aam
movs
push
repz
xor
cmp
xor
add
mov
lds
out
je
and
adc
scas
lahf
mov
shl
in
add
cmp
add
xchg
or
and
sub
es
aaa
pop
movs
xor
adc
cmp
push
movs
jle
daa
cmps
sbb
inc
mov
loopne
aad
xor
cmp
jbe
xor
movs
je
inc
lds
das
dec
mov
bound
jbe
push
aas
dec
mul
in
mov
test
in
punpcklbw
inc
addr16
hlt
outs
mov
push
cmc
and
jge
stos
xchg
inc
push
mov
call
push
rol
jne
xchg
mov
jmp
jo
inc
xchg
movs
test
call
push
popf
mov
xor
jmp
and
xchg
scas
fld
(bad)
cmps
push
(bad)
add
xor
cmp
aam
shl
in
gs
out
je
and
adc
mov
pop
jae
adc
xor
xor
and
add
and
aas
adc
sub
push
lock
lds
and
sbb
mov
loopne
aad
xor
push
(bad)
push
xor
dec
nop
je
dec
inc
pop
lds
das
xor
aam
and
push
ins
aad
aas
push
imul
ja
in
mov
test
inc
in
pcmpgtb
fs
dec
mov
jl
cs
push
push
test
mov
mov
fwait
add
cmps
xchg
jne
xchg
xchg
adc
mov
xchg
inc
xchg
movs
lods
and
call
push
xor
push
mov
fild
mul
xchg
scas
inc
mov
xor
mov
ret
xor
add
mov
les
out
je
and
adc
mov
pop
adc
add
daa
xchg
ds
add
adc
xor
cmp
adc
add
dec
das
cmps
and
adc
xor
sub
push
push
je
jae
ja
push
inc
jns
adc
cmp
sbb
aam
and
push
popa
aad
aas
push
test
in
mov
test
ins
in
cmovle
pop
addr16
hlt
inc
mov
dec
cmc
and
inc
push
nop
xchg
test
xchg
mov
test
movs
jne
xchg
mov
ss
mov
and
jo
inc
mov
scas
xchg
adc
fbstp
inc
std
adc
and
lahf
scas
mov
aam
loop
in
out
out
stc
push
xchg
iret
mov
rol
mov
fisub
out
je
and
adc
scas
lahf
cli
xchg
sub
sub
push
shl
in
add
cmp
shl
or
sub
dec
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
data16
and
jb
(bad)
outs
div
ja
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
rcl
mov
cdq
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
xchg
(bad)
push
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
movs
lahf
retf
pop
das
test
in
add
add
jo
and
aas
adc
sub
or
push
movs
inc
lock
lds
sbb
push
daa
pop
mov
loopne
aad
xor
or
push
je
and
dec
lds
das
pop
mov
jo
xor
imul
sub
in
mov
test
inc
in
mulps
pop
addr16
hlt
dec
mov
pop
cmc
ins
pop
jbe
stos
xchg
lods
add
push
mov
mov
mov
adc
inc
mov
adc
(bad)
mov
and
jo
inc
test
xchg
xchg
ret
push
stos
mov
xor
xchg
xlat
into
inc
les
cli
and
lock
loopne
ret
(bad)
call
mov
push
in
mov
fbld
xchg
add
mov
(bad)
data16
shl
adc
mov
pop
or
add
js
dec
pop
fs
and
adc
sub
xor
adc
movs
and
cmps
or
and
aad
xor
add
inc
push
ja
jno
xor
adc
daa
(bad)
jl
and
mov
push
jbe
addr16
das
mul
dec
in
mov
test
sbb
arpl
pop
out
addr16
hlt
dec
mov
push
cmc
pop
pop
push
push
mov
push
jmp
add
iret
xchg
jne
xchg
test
ss
xchg
and
jo
inc
out
mov
es
nop
xor
pusha
test
mov
xor
sahf
xlat
jmp
(bad)
adc
inc
fild
out
push
loope
out
loopne
repnz
sar
shl
add
lods
(bad)
(bad)
data16
popf
je
and
adc
fcomp
xor
add
xor
xchg
push
shl
or
es
aaa
xor
and
pop
cmps
xor
pop
mov
loopne
aad
xor
add
jg
jl
dec
nop
jne
dec
inc
(bad)
lds
das
jne
jnp
addr16
and
sbb
aad
aas
test
in
mov
test
gs
dec
(bad)
out
addr16
hlt
outs
mov
dec
cmc
jb
or
add
push
repnz
add
mov
inc
std
jne
xchg
mov
repz
and
jo
inc
out
les
out
cmps
mov
push
test
xchg
push
(bad)
xlat
inc
cmc
and
xchg
scas
mov
push
int
movs
xor
sar
shl
xchg
add
mov
out
je
and
jne
lahf
mov
ins
shr
sbb
jg
cmp
daa
xchg
xor
adc
ja
or
pop
movs
and
or
imul
cmps
arpl
inc
mov
loopne
aad
xor
dec
(bad)
push
push
sub
movs
gs
imul
jnp
arpl
dec
and
dec
push
jle
push
aas
sub
dec
ja
in
mov
test
in
nop
jb
gs
inc
mov
inc
cmc
inc
pop
adc
adc
gs
test
push
cdq
xchg
adc
inc
movs
jne
xchg
pushf
adc
mov
shl
jo
inc
jmp
es
cmps
les
pusha
mov
mov
xor
xchg
xlat
hlt
inc
lock
and
jmp
(bad)
sti
push
leave
add
xor
in
lods
jbe
test
add
in
aad
iret
out
je
and
jne
lahf
(bad)
xchg
add
and
add
xor
xchg
and
adc
ja
pop
aaa
push
movs
and
push
lds
and
pop
cmps
outs
daa
pop
mov
loopne
aad
xor
add
inc
push
xor
inc
nop
outs
movs
dec
inc
lds
aas
mov
and
mov
push
(bad)
aad
aas
jo
jae
push
in
mov
test
arpl
popa
andnps
pop
addr16
hlt
inc
mov
or
push
mov
push
repz
pushf
add
mov
inc
loopne
mov
lods
adc
movs
mov
and
jo
inc
nop
movs
and
cmps
nop
xor
pusha
mov
mov
xor
rcl
lods
inc
ret
adc
and
ret
scas
mov
push
fadd
mov
push
cmp
fs
xor
ror
iret
je
and
adc
loop
lea
add
cmp
sbb
and
pop
pop
and
adc
ins
mov
aaa
pop
movs
pop
lock
lds
and
adc
mov
loopne
aad
xor
inc
(bad)
ins
push
pusha
les
xor
ins
das
jns
js
jae
dec
and
sbb
aad
aas
das
mul
popa
in
mov
test
js
dec
nop
pop
addr16
hlt
jne
pop
xchg
ss
cmc
dec
pop
or
add
push
lock
test
push
mov
inc
mov
adc
mov
mov
mov
mov
xor
pusha
cmps
push
movs
mov
xor
rcl
inc
rcl
xlat
and
imul
(bad)
push
loopne
les
mov
fisub
aam
shl
jmp
(bad)
lahf
data16
iret
je
and
jne
lahf
retf
pop
and
in
add
or
pop
rcr
pop
adc
sbb
and
and
outs
and
and
sub
aas
aad
xor
aaa
(bad)
inc
push
ja
sub
xor
outs
das
ds
js
jae
push
and
dec
push
jb
jne
das
test
in
mov
test
in
orps
pop
addr16
xchg
jge
dec
cmc
inc
pop
movhps
push
lock
mov
xchg
inc
mov
adc
mov
int
mov
movs
sahf
and
scas
cmps
xchg
mov
xor
jecxz
loope
mov
(bad)
xchg
scas
fld
(bad)
cmps
push
rol
lds
ret
mov
hlt
les
test
aam
aad
retf
and
adc
cli
lahf
in
xchg
push
pop
jae
sbb
add
add
or
adc
adc
and
sub
outs
and
cmps
and
pop
mov
loopne
aad
xor
or
push
push
inc
les
js
jb
(bad)
lds
aas
(bad)
ins
inc
inc
aam
cmp
addr16
sub
dec
ja
in
mov
test
inc
in
nop
pop
addr16
hlt
inc
mov
or
push
xchg
xchg
cmc
add
push
icebp
mov
inc
iret
xchg
adc
inc
loopne
mov
lods
adc
movs
mov
and
jo
inc
xchg
movs
fldenv
popf
cmps
nop
xor
pusha
(bad)
push
test
fisttp
inc
(bad)
adc
and
repz
mov
push
loope
jmp
(bad)
lods
push
sar
int3
xor
add
call
out
je
and
jne
lahf
lea
add
ja
push
add
jl
push
pop
jns
or
adc
sub
adc
adc
adc
sbb
sbb
or
push
loopne
aad
xor
push
(bad)
adc
les
jne
push
inc
cmp
jno
jbe
inc
jae
pusha
sub
push
pop
aad
aas
sub
in
mov
test
dec
in
nop
dec
addr16
hlt
adc
jne
cmc
inc
pop
dec
push
test
hlt
add
push
mov
add
add
jne
xchg
hlt
adc
pushf
mov
and
jo
inc
xchg
movs
mov
es
cmps
les
pusha
mov
mov
xor
jmp
inc
mov
icebp
(bad)
jmp
push
rol
mov
push
loope
jmp
shl
fadd
(bad)
(bad)
aam
scas
out
je
and
jne
lahf
(bad)
xchg
aas
pop
cmp
push
shl
test
jnp
cmp
add
adc
cmp
inc
lock
lds
and
pop
cmps
es
or
add
inc
aad
xor
dec
(bad)
inc
push
push
les
xor
jle
jg
push
inc
arpl
inc
sub
push
sub
mul
inc
in
mov
test
pop
in
andnps
bound
hlt
imul
dec
push
ficom
mov
add
xchg
loopne
mov
in
mov
jo
inc
xchg
movs
popf
and
cwde
cmps
fwait
xor
pusha
rcl
mov
call
lock
rcl
and
les
call
jmp
in
fist
mov
shl
xchg
add
leave
(bad)
aad
fsub
test
adc
lahf
leave
xchg
sub
sub
add
xor
adc
shl
adc
outs
mov
aaa
add
and
pop
cmps
xor
pop
mov
loopne
aad
xor
add
inc
push
xor
cmp
lds
(bad)
outs
inc
jl
dec
and
pop
push
imul
pusha
ja
in
mov
test
inc
in
nop
arpl
hlt
outs
mov
push
push
xchg
xchg
mov
gs
mov
push
test
stos
jne
xchg
mov
movs
mov
and
jo
inc
mov
iret
ret
es
test
pusha
test
mov
xor
sahf
xlat
mov
fist
mov
in
in
cmc
scas
mov
push
loop
mov
push
sar
fs
xor
gs
pushf
data16
out
je
and
jne
lahf
iret
xchg
add
aas
test
shr
sbb
and
das
pop
adc
adc
es
aaa
xor
and
pop
cmps
sbb
and
aad
xor
dec
(bad)
or
les
jnp
jb
(bad)
lds
jns
inc
jnp
pop
and
inc
push
ins
aad
aas
imul
ja
in
mov
test
jl
dec
unpckhps
dec
addr16
hlt
inc
mov
push
cmc
cmp
dec
push
adc
movs
test
push
mov
inc
loop
mov
jmp
and
jo
inc
lods
movs
xchg
and
mov
rcl
int3
xor
call
adc
inc
lock
out
(bad)
(bad)
movs
push
(bad)
add
push
cmp
fs
xor
fisttp
(bad)
adc
lahf
mov
sbb
jb
xor
xchg
pop
jge
xadd
xor
jg
mov
aaa
shld
cmp
pop
movs
ins
dec
pop
cmps
or
inc
mov
loopne
aad
xor
dec
(bad)
pop
push
arpl
arpl
imul
push
inc
and
mov
push
xor
pusha
aas
test
data16
test
sbb
out
addr16
hlt
inc
mov
push
cmc
inc
pop
or
add
push
mov
mov
mov
push
ret
xchg
jne
xchg
jmp
movs
mov
and
jo
inc
jmp
mov
pusha
les
mov
xor
cld
xlat
fiadd
cli
and
in
scas
cmc
inc
add
mov
push
fnstsw
retf
fs
xor
gs
aad
fsub
test
xchg
fistp
aaa
test
shl
es
jne
adc
fs
sbb
adc
ins
mov
aaa
add
push
lock
lds
pop
cmps
xor
pop
mov
loopne
aad
xor
push
(bad)
imul
ins
nop
xor
inc
das
jbe
inc
inc
and
pusha
and
pop
push
sub
add
das
idiv
ja
in
mov
test
gs
push
unpcklps
pop
addr16
hlt
outs
mov
imul
pop
pop
push
rcl
jmp
add
xchg
xchg
jne
xchg
mov
mov
mov
and
jo
inc
out
call
cmps
mov
pusha
test
mov
xor
call
adc
inc
shr
repz
enter
xchg
aad
push
aam
scas
jbe
test
add
xlat
(bad)
fldenv
out
je
and
adc
repnz
mov
and
jno
sbb
jl
push
outs
jle
inc
pop
gs
or
adc
outs
mov
aaa
pop
movs
pop
lock
lds
and
pop
cmps
sbb
pop
mov
loopne
aad
xor
add
les
nop
xor
inc
das
aas
(bad)
cmova
dec
and
dec
push
jno
add
sub
in
mov
test
gs
in
nop
jo
pop
hlt
push
mov
inc
cmc
arpl
push
push
adc
gs
test
push
movs
xchg
jne
xchg
mov
scas
call
and
jo
inc
fwait
movs
mov
xchg
cmps
(bad)
xor
pusha
mov
xor
out
cmc
inc
(bad)
adc
and
xchg
scas
mov
push
cld
add
push
jecxz
lods
jbe
not
add
ror
popf
je
and
adc
out
lahf
(bad)
xchg
push
pop
xor
add
jle
inc
pop
daa
xchg
ja
popa
cmc
pop
adc
ins
mov
aaa
sbb
inc
lock
lds
inc
movs
or
cmps
pop
daa
ds
loopne
aad
xor
dec
(bad)
pop
push
arpl
arpl
imul
push
inc
and
mov
push
xor
pusha
aas
test
data16
test
push
in
andnps
pop
addr16
xchg
push
jne
cmc
dec
pop
movhps
push
icebp
mov
push
rol
jne
xchg
jmp
ss
shl
jo
inc
xchg
movs
fldenv
mov
(bad)
xor
pusha
mov
mov
xor
xchg
xlat
call
and
jmp
sti
push
enter
in
mov
in
mov
ret
xor
add
int3
(bad)
(bad)
mov
je
and
jne
lahf
leave
xchg
ss
sub
add
jle
cmp
daa
xchg
adc
daa
cmc
sub
sbb
movs
aaa
lock
and
sub
adc
cmp
daa
xor
xor
dec
push
inc
les
inc
movs
jns
outs
lds
dec
(bad)
pop
inc
jge
sub
jb
push
aas
das
mul
adc
pop
mov
test
pop
in
nop
pop
addr16
hlt
jle
add
and
adc
mov
xrelease
push
cmps
xchg
jne
xchg
lods
adc
mov
and
xchg
inc
mov
iret
xchg
es
pusha
mov
mov
xor
call
adc
and
imul
out
fadd
mov
push
cwde
mov
fsub
xchg
add
aam
lahf
data16
popf
je
and
adc
int
retf
xchg
adc
and
add
je
push
pop
cmp
adc
fs
aaa
xor
lds
and
pop
cmps
popa
daa
adc
xor
xor
jo
jb
dec
nop
dec
movs
push
inc
xor
inc
das
inc
(bad)
ja
jno
push
sbb
push
pop
aad
aas
pop
not
dec
in
mov
test
sbb
bound
imul
sbb
inc
xchg
jnp
or
inc
pop
movhps
push
mov
mov
movs
add
test
test
xchg
mov
test
test
xor
inc
lea
mov
xor
pusha
stos
push
(bad)
mov
xor
int3
xlat
rol
aad
out
(bad)
(bad)
scas
fiadd
(bad)
loope
icebp
add
xor
sar
hlt
fidiv
jmp
out
lahf
fisttp
shl
cmc
adc
into
lahf
clc
xchg
xor
pop
test
rol
in
add
add
sbb
add
adc
adc
cs
das
movs
and
sub
or
pop
movs
and
cmps
adc
push
mov
loopne
aad
xor
sub
dec
push
jno
inc
nop
inc
movs
push
inc
lds
dec
(bad)
fs
gs
sbb
push
push
aad
aas
sub
xor
in
mov
test
push
out
addr16
hlt
inc
mov
inc
cmc
pop
pop
dec
push
fist
mov
add
mov
mov
jne
xchg
jmp
mov
and
jo
inc
lea
test
xor
pusha
mov
xor
(bad)
jmp
and
shr
push
fadd
(bad)
out
mov
xchg
xlat
xor
add
fisttp
shl
repz
lds
pop
test
ror
in
add
add
jae
pop
cmc
cmp
jg
mov
aaa
add
lds
and
cmp
and
and
jg
adc
cmp
(bad)
dec
push
pop
les
push
movs
push
inc
inc
lds
pop
(bad)
pop
inc
es
and
push
(bad)
aad
aas
imul
ja
in
mov
test
in
nop
jne
add
inc
mov
push
cmc
dec
pop
inc
push
scas
xchg
add
test
push
iret
xchg
jne
xchg
mov
cmp
xchg
and
jo
inc
mov
iret
(bad)
mov
pusha
mov
mov
xor
cld
xlat
aad
in
adc
inc
std
scas
sti
inc
pop
repz
enter
xchg
aad
push
cld
mov
out
shl
xchg
add
mov
call
and
jne
lahf
iret
xchg
add
sar
in
add
xor
xchg
push
shl
cmp
sbb
inc
lock
movs
add
cmps
cmp
and
xor
cmp
je
pop
les
inc
movs
push
inc
lds
pop
(bad)
pop
inc
jp
sbb
push
jno
push
aas
outs
mul
push
in
mov
test
popa
in
pcmpeqb
jnp
outs
hlt
inc
mov
dec
cmc
push
pop
push
mov
xchg
gs
test
add
lea
hlt
mov
and
jo
inc
mov
mov
xor
pusha
mov
xor
retf
inc
rcl
leave
and
out
scas
mov
add
xor
fnstsw
hlt
(bad)
repnz
aam
in
ret
je
and
adc
repnz
cmc
xchg
push
pop
and
add
add
adc
adc
pop
adc
sbb
cs
movs
jae
cmp
and
daa
aad
xor
sub
jb
dec
les
push
movs
cmovne
data16
pop
(bad)
push
inc
(bad)
aam
or
push
ja
pop
aas
dec
div
mov
test
jns
ja
pop
out
addr16
dec
mov
pmaddwd
js
mov
mov
movs
push
xchg
test
push
mov
mov
jne
xchg
jmp
mov
and
jo
inc
cmps
movs
and
cmps
xchg
xor
pusha
mov
xor
loope
mov
icebp
adc
and
lock
ret
inc
loop
mov
xor
out
int3
jbe
test
add
aam
call
je
and
adc
fstp
jg
adc
pop
in
add
adc
pop
pop
ds
or
pop
cmc
push
adc
add
jne
or
lds
and
cmp
adc
xor
xor
pop
push
push
les
dec
movs
push
inc
xor
push
das
inc
(bad)
fs
gs
adc
push
pop
aad
aas
push
test
in
mov
test
push
dec
punpckhwd
daa
pmuludq
jle
cmp
cmc
dec
pop
jg
mov
mov
push
mov
test
push
mov
inc
xchg
jne
xchg
out
adc
xor
inc
cdq
movs
lods
and
test
mov
xor
ret
inc
fst
mov
in
std
inc
ret
scas
sti
inc
(bad)
push
stos
add
push
sar
enter
xchg
add
in
fbld
out
je
and
adc
icebp
lahf
hlt
xchg
and
xor
add
push
xchg
pop
cmp
adc
or
push
lock
lds
sbb
xor
xor
xor
dec
(bad)
inc
push
outs
les
push
movs
jnp
push
lds
dec
(bad)
dec
inc
gs
adc
push
pop
aad
aas
pop
imul
jae
gs
test
dec
in
pcmpgtw
and
dec
hlt
jo
jns
ja
dec
cmc
inc
pop
jg
mov
mov
loopne
call
out
fwait
push
mov
mov
jne
xchg
out
adc
xor
inc
mov
mov
xor
pusha
movs
push
mov
fild
inc
les
mul
fisubr
stc
push
jmp
les
test
xchg
fs
cmc
add
lock
out
je
and
adc
in
lahf
(bad)
xchg
and
sub
add
or
daa
rcl
sub
sbb
adc
and
or
or
push
daa
adc
xor
ss
inc
push
inc
les
inc
movs
ja
pop
lds
das
pop
(bad)
fs
daa
aam
add
push
arpl
add
dec
imul
jg
jbe
jne
pop
gs
dec
vmwrite
outs
addr16
sbb
push
xchg
arpl
cmc
je
js
movs
xchg
lods
add
push
mov
test
push
cmps
xchg
xchg
xchg
mov
xchg
mov
and
jo
inc
cwde
movs
mov
popf
iret
scas
mov
pusha
mov
movs
mov
xor
retf
inc
into
adc
and
repnz
retf
xbegin
xor
icebp
mov
loopne
(bad)
test
cli
out
je
and
adc
rcr
adc
add
adc
sbb
ds
and
daa
cmc
sub
push
mov
aaa
sub
and
daa
cmps
adc
dec
mov
loopne
aad
xor
cmp
pop
push
(bad)
les
inc
movs
imul
(bad)
je
inc
aam
sbb
push
jno
(bad)
outs
imul
adc
pop
mov
test
pop
in
(bad)
out
addr16
push
mov
popa
cmc
je
jno
sahf
xchg
repnz
push
mov
test
push
mov
inc
xchg
jne
xchg
xchg
adc
icebp
mov
and
jo
inc
mov
and
cmps
cdq
xor
pusha
mov
xor
lock
inc
shl
scas
ret
inc
inc
out
leave
add
xor
fnstsw
mul
cmc
add
retf
data16
(bad)
je
and
adc
neg
test
rcr
in
add
adc
inc
pop
and
cmc
cs
sub
or
and
cmp
cmp
and
mov
pop
and
jno
ins
les
pop
movs
inc
inc
lds
push
(bad)
dec
inc
jle
push
or
push
push
test
in
mov
test
jge
ds
outs
outs
hlt
push
mov
push
cmc
pop
pop
jne
mov
nop
add
push
lea
test
push
call
jne
xchg
loop
(bad)
call
and
jo
inc
call
iret
mov
xor
pusha
mov
xor
cmc
xlat
retf
inc
rcl
and
ret
scas
ret
(bad)
fcom
fdiv
jecxz
fnstenv
test
add
mov
out
je
and
adc
iret
lahf
std
xchg
push
pop
adc
add
add
sbb
adc
or
aas
aaa
add
lds
dec
cmps
xor
push
mov
loopne
aad
xor
cmp
addr16
inc
les
dec
movs
push
inc
inc
lds
pop
(bad)
gs
inc
aam
adc
push
dec
aad
aas
push
test
in
mov
test
pop
in
movd
inc
addr16
hlt
adc
add
jns
fs
lahf
xchg
xchg
add
push
xchg
xchg
fwait
push
mov
out
adc
inc
mov
xchg
mov
test
lods
inc
mov
mov
mov
pusha
test
mov
xor
icebp
xlat
test
and
std
scas
retf
(bad)
loope
loope
fidiv
aam
fidiv
not
add
ror
out
je
and
adc
repnz
not
ror
in
add
add
and
adc
adc
sub
and
and
and
cmps
add
adc
xor
and
dec
push
outs
les
inc
jg
imul
dec
aam
add
push
push
aad
aas
dec
idiv
push
test
dec
in
pcmpeqb
jno
push
hlt
arpl
ins
cmc
and
dec
push
mov
stos
add
push
xchg
mov
xchg
push
movs
xchg
fcom
mov
mov
mov
movs
test
es
pusha
stos
push
mov
stos
push
repnz
aam
repz
and
jmp
repnz
jmp
fbstp
lds
jmp
in
add
mov
loop
cmps
out
je
and
adc
mov
pop
sub
add
sbb
inc
pop
add
adc
sbb
adc
sub
xor
daa
cmps
adc
loopne
aad
xor
aas
(bad)
push
push
aas
les
inc
movs
pop
inc
pop
lds
das
jns
push
inc
push
aam
sbb
push
ja
outs
aas
pop
not
inc
in
mov
test
(bad)
in
pcmpgtw
inc
addr16
hlt
ja
jle
dec
jne
cmc
inc
pop
jp
mov
mov
gs
out
mov
xchg
xchg
jne
xchg
xchg
adc
xor
movs
and
test
movs
push
mov
movs
push
int3
xlat
rol
and
xchg
scas
aam
loopne
iret
push
icebp
add
xor
xchg
in
push
in
out
out
gs
jmp
je
and
adc
fstp
sub
add
add
xor
addr16
sub
adc
sub
and
and
movs
ds
and
ss
aad
xor
aaa
(bad)
jo
jb
gs
inc
movs
ins
inc
inc
lds
inc
(bad)
jo
data16
adc
cs
aas
push
imul
ja
in
mov
test
pop
in
pcmpgtd
outs
addr16
hlt
inc
mov
jno
inc
pop
js
mov
push
xchg
test
push
lds
xchg
jne
xchg
jecxz
popf
call
and
jo
inc
mov
xchg
mov
pusha
mov
xor
retf
inc
into
adc
and
(bad)
scas
into
inc
rol
push
out
xlat
xor
(bad)
mov
xchg
xor
add
loop
jmp
je
and
adc
repz
cli
xchg
and
ror
in
add
or
jno
add
sub
adc
adc
sub
movs
xor
cmps
cmp
and
xor
cmp
adc
nop
push
movs
jl
pop
lds
pop
(bad)
pop
inc
dec
aam
add
push
dec
aad
aas
inc
test
ins
mov
test
push
fs
daa
addr16
hlt
mov
add
jnp
jnp
sahf
xchg
mov
lods
push
xchg
test
push
mov
inc
xchg
jne
xchg
jecxz
pushf
call
and
jo
inc
call
iret
cwde
es
pusha
mov
xor
retf
inc
(bad)
adc
and
lds
scas
push
out
(bad)
xor
fdivr
out
repz
add
icebp
(bad)
loopne
in
fnstenv
lock
mov
pop
jg
daa
rol
test
outs
sbb
push
pop
xor
cmc
sub
sbb
sbb
xor
aaa
and
and
xor
xor
cmp
sub
push
push
jbe
dec
nop
dec
movs
push
inc
ins
lds
inc
(bad)
pop
inc
jne
push
sbb
push
push
aad
aas
push
imul
push
test
inc
in
punpckhdq
jo
pop
hlt
sbb
jne
cmc
push
pop
jle
mov
test
test
push
mov
scas
adc
inc
fwait
jne
xchg
xchg
adc
scas
mov
and
jo
inc
mov
movs
es
mov
push
test
fistp
inc
into
adc
and
icebp
scas
ret
inc
out
(bad)
rcl
fnstenv
out
mov
jmp
(bad)
xor
add
ror
jecxz
mul
stc
adc
mov
pop
xor
in
add
sbb
ror
cmp
or
and
xor
movs
cmp
daa
sbb
aad
xor
or
push
jo
ins
nop
push
movs
jp
aas
lds
imul
adc
push
sub
inc
aas
push
idiv
ja
jp
push
in
pcmpgtb
push
addr16
hlt
inc
mov
dec
cmc
and
xchg
mov
gs
test
add
movs
xchg
adc
inc
xchg
jne
xchg
stos
adc
div
lods
inc
cmps
movs
test
and
push
mov
mov
rcl
inc
icebp
adc
and
std
scas
int
int3
(bad)
in
out
fidiv
jecxz
fnstenv
test
add
loop
cld
shl
je
and
adc
into
lahf
repnz
push
pop
push
test
xor
sbb
push
xchg
pop
bound
adc
or
push
aaa
pop
movs
adc
lds
and
and
cmp
cmp
and
xor
addr16
dec
les
dec
movs
ins
inc
inc
lds
das
push
(bad)
pop
inc
es
add
push
imul
aas
dec
imul
push
test
jb
data16
out
addr16
bound
or
pop
pop
push
mov
xchg
test
mov
adc
inc
xchg
jne
xchg
sahf
adc
stos
mov
and
jo
inc
mov
mov
xor
pusha
mov
mov
fistp
inc
loope
leave
and
fisubr
cld
push
mov
aad
push
into
mov
leave
push
test
out
out
je
and
adc
mov
pop
ja
jg
adc
sbb
sbb
imul
cmc
cmp
adc
sub
push
movs
cs
sbb
dec
sub
or
cmp
or
cmp
les
inc
movs
push
inc
pop
lds
inc
(bad)
jo
jle
inc
sbb
push
jae
bound
pop
imul
outs
in
mov
test
in
punpcklbw
and
mov
jp
jno
je
mov
lods
add
push
mov
test
push
xchg
xchg
jne
xchg
xchg
adc
test
and
iret
mov
xor
pusha
movs
push
mov
fild
inc
rcl
aad
out
(bad)
mov
fist
(bad)
xor
(bad)
mov
xlat
push
xchg
add
fisttp
ret
je
and
jne
lahf
mov
ins
shl
sbb
cmp
dec
pop
jge
or
sub
pop
adc
ins
mov
aaa
add
and
pop
cmps
or
adc
xor
add
les
nop
xor
lds
cmp
inc
inc
and
dec
sub
push
push
aad
aas
div
inc
in
mov
test
inc
in
nop
jb
popa
hlt
jae
inc
xchg
inc
jne
cmc
pop
pop
movhps
push
mov
add
xchg
movs
jne
xchg
mov
mov
rol
movs
mov
es
cmps
fnsave
pusha
ret
mov
xor
call
cld
inc
ficom
cmc
and
xchg
scas
mov
push
loop
jmp
in
fcom
mov
fbld
fadd
int3
(bad)
aam
hlt
out
je
and
jne
lahf
lea
sbb
jae
and
outs
js
adc
shl
adc
es
aaa
push
movs
sub
and
sub
add
xor
ds
dec
push
inc
les
inc
movs
dec
inc
push
(bad)
je
and
ins
adc
push
sub
pop
aas
pop
div
ja
in
mov
test
in
andps
jo
jno
jb
add
pop
pop
or
mov
push
lock
scas
add
mov
inc
loope
ficom
stos
ss
and
movs
mov
mov
pusha
mov
mov
lods
push
not
mov
icebp
adc
and
icebp
scas
int
faddp
fist
fnstenv
in
fidiv
test
add
fisttp
popf
je
and
adc
mov
pop
and
add
jl
push
pop
sub
adc
adc
adc
pop
lock
and
sub
xor
cmp
or
pop
cmp
les
dec
movs
ins
inc
ins
lds
inc
(bad)
fs
inc
aam
sbb
jle
(bad)
aaa
test
in
mov
test
inc
in
nop
and
hlt
jle
inc
xchg
and
push
cmc
pop
pop
movhps
push
repnz
test
push
pushf
xchg
jne
xchg
stos
adc
xchg
mov
and
jo
inc
test
fisub
mov
pusha
movs
push
cld
mov
xor
(bad)
jmp
lds
inc
inc
loopne
int
in
cwde
aad
push
xchg
nop
fs
xor
add
mov
popf
data16
(bad)
je
and
jne
lahf
(bad)
xchg
push
pop
push
test
shl
or
outs
jl
cmp
aas
xchg
and
popa
cmc
xor
jg
mov
aaa
and
and
pop
cmps
daa
daa
or
xor
add
mov
pop
dec
(bad)
push
nop
xor
adc
aas
(bad)
push
inc
and
push
sub
push
dec
aad
aas
sub
pop
ja
in
mov
test
inc
in
nop
jne
add
sbb
jne
cmc
inc
pop
dec
push
fist
repz
test
add
mov
inc
movs
jne
xchg
pushf
adc
mov
xchg
jo
inc
xchg
movs
fsub
cwde
cmps
movs
xor
pusha
rcl
xchg
xor
in
xlat
in
inc
lock
and
lock
mov
push
loopne
call
push
lock
fbld
xchg
add
jecxz
lahf
data16
out
je
and
adc
fstp
aaa
test
shl
es
xchg
pop
and
adc
outs
mov
aaa
adc
and
sbb
adc
sbb
sub
inc
aad
xor
(bad)
jo
jb
jl
dec
movs
push
inc
inc
lds
inc
(bad)
dec
inc
popa
aam
adc
push
push
aad
aas
dec
test
in
mov
test
gs
jo
jnp
jno
push
hlt
push
mov
dec
cmc
fs
dec
push
lods
xchg
jmp
gs
push
xchg
xchg
jne
xchg
mov
mov
jo
inc
mov
iret
call
pusha
ret
push
xor
mov
lock
inc
lds
movs
push
into
add
xor
cmc
mov
fsub
xchg
add
test
pushf
repnz
je
and
jne
lahf
les
or
add
jle
das
pop
sub
sar
adc
es
aaa
push
movs
cs
lds
das
movs
sbb
daa
pop
mov
loopne
aad
xor
dec
(bad)
adc
les
xor
adc
aas
(bad)
cmova
mov
push
push
aad
aas
and
dec
ja
in
mov
test
add
xor
jns
dec
addr16
inc
mov
add
es
fs
mov
xchg
gs
out
fwait
push
xchg
xchg
jne
xchg
mov
nop
mov
and
jo
inc
mov
cdq
es
cmps
shl
enter
int
(bad)
xlat
out
inc
mov
(bad)
ret
inc
out
(bad)
loopne
fiadd
mov
push
hlt
mov
nop
fs
xor
add
loop
aam
(bad)
iret
je
and
adc
ficomp
xor
add
jb
inc
add
jg
adc
daa
xchg
aaa
shl
jg
mov
aaa
shld
push
lds
push
cmps
or
and
xor
push
(bad)
inc
push
xor
pop
nop
js
dec
inc
inc
lds
je
jnp
outs
aam
and
push
jbe
jne
data16
ja
in
mov
test
dec
in
orps
jb
gs
imul
push
push
leave
xchg
mov
adc
add
mov
inc
out
fwait
xchg
jmp
ss
test
inc
xchg
lahf
es
cwde
xor
pusha
adc
test
push
retf
xlat
repnz
out
fisub
loop
mov
push
fiadd
fnsave
sti
mov
(bad)
xor
add
mov
xchg
mov
je
and
adc
mov
pop
aaa
test
xor
xor
je
inc
pop
aas
xchg
ja
daa
cmc
aas
adc
push
movs
pop
lock
cmp
push
cmps
popa
daa
pop
mov
loopne
aad
xor
push
(bad)
inc
push
outs
les
ja
outs
inc
pop
lds
das
daa
(bad)
sbb
aam
and
push
ins
aad
aas
and
in
mov
test
in
(bad)
out
addr16
hlt
push
mov
arpl
and
pop
push
nop
xchg
lods
add
push
mov
cdq
test
push
xchg
xchg
jne
xchg
mov
xchg
(bad)
call
and
jo
inc
xchg
movs
mov
repz
fisub
mov
pusha
adc
(bad)
push
(bad)
xlat
test
loop
lahf
scas
mov
push
loope
out
loop
lods
push
cmp
shl
rol
mov
lahf
data16
out
je
and
adc
fistp
das
test
shl
in
add
xor
xchg
shl
or
outs
mov
aaa
pop
movs
aas
lock
adc
pop
cmps
xor
pop
mov
loopne
aad
xor
dec
(bad)
inc
push
ins
les
jno
pop
inc
jno
adc
aas
(bad)
push
inc
addr16
and
jb
(bad)
jno
fs
in
mov
test
pop
in
nop
pusha
addr16
hlt
inc
mov
adc
and
movhps
mov
mov
mov
xchg
xchg
adc
inc
cmps
jne
xchg
adc
mov
and
jo
inc
test
fisub
movs
cmps
xchg
pusha
test
mov
xor
aam
out
inc
icebp
adc
and
xchg
scas
cli
inc
out
call
loope
sti
aad
push
out
test
cmc
div
test
repnz
lods
(bad)
jecxz
repnz
je
and
adc
(bad)
lahf
int3
xchg
push
pop
aaa
test
in
add
cmp
jge
cmp
aas
adc
xor
dec
lock
adc
push
cmps
and
and
xor
or
imul
movs
dec
inc
lds
popa
mov
aam
cmp
push
pop
aad
aas
test
in
mov
test
gs
imul
out
addr16
hlt
addr16
ins
jne
cmc
and
xchg
xchg
add
push
mov
add
add
jne
xchg
mov
mov
xchg
inc
mov
iret
lahf
es
pushf
xor
pusha
adc
int3
xor
jmp
adc
and
xchg
scas
std
inc
mov
push
call
aad
push
aam
out
jbe
mul
fs
xor
add
test
je
and
adc
cli
lahf
retf
pop
push
test
add
cmp
xadd
cmc
or
jg
mov
aaa
or
and
add
adc
xor
pop
(bad)
inc
push
push
movs
pop
inc
pop
lds
dec
mov
pop
aam
and
sbb
aad
aas
dec
test
in
mov
test
sbb
jb
inc
out
addr16
hlt
pop
mov
push
cmc
cmp
push
push
adc
gs
test
push
xchg
xchg
adc
inc
mov
adc
mov
xchg
inc
xchg
movs
and
cmps
les
pusha
xchg
mov
xor
nop
xlat
loopne
lods
adc
and
xchg
scas
inc
(bad)
movs
push
scas
add
xor
cmp
xor
add
les
out
iret
and
adc
scas
lahf
iret
xchg
sub
jne
arpl
aaa
in
add
cmp
daa
shl
and
sub
sub
and
pop
cmps
xor
add
xor
or
jbe
jg
sub
jno
pop
inc
jp
adc
jp
jl
fs
and
push
jbe
add
outs
mul
in
mov
test
add
jo
pop
out
addr16
hlt
sbb
jne
cmc
cmp
dec
push
stos
xchg
mov
loopne
mov
mov
cmps
push
xchg
xchg
jne
xchg
mov
mov
lea
movs
fsub
mov
nop
xor
pusha
xchg
mov
xor
in
xlat
hlt
inc
cmps
adc
and
xlat
scas
mov
push
out
loope
fst
cmc
push
fidivr
jmp
in
gs
out
je
and
adc
mov
pop
ins
test
aaa
in
add
xor
xchg
xor
adc
xor
push
lock
sub
or
cmps
push
daa
sbb
xor
or
adc
les
nop
jo
push
inc
lds
inc
(bad)
bound
aam
cmp
push
ins
aad
aas
xor
pusha
ja
in
mov
test
inc
in
minps
jl
inc
hlt
sbb
jne
cmc
das
pop
push
push
ficom
scas
gs
mov
push
mov
inc
mov
adc
cmps
mov
and
jo
inc
mov
iret
lahf
es
lds
pusha
xchg
mov
xor
rcl
inc
mov
(bad)
(bad)
scas
cli
inc
add
push
mov
in
retf
push
(bad)
mov
loop
into
xor
add
mov
fisub
out
je
and
adc
scas
lahf
rcl
popa
shl
in
add
cmp
jb
and
add
jg
mov
aaa
push
movs
inc
lock
cmp
dec
sbb
sbb
loopne
aad
xor
adc
bound
les
ins
movs
jae
cmp
pop
das
arpl
push
inc
and
jno
pop
mov
push
jne
dec
aas
outs
test
in
mov
test
jl
jb
push
out
addr16
hlt
arpl
dec
cmc
pusha
pop
push
push
adc
gs
xchg
xchg
cdq
jne
xchg
test
ss
jo
inc
call
iret
sahf
es
pusha
mov
xor
jmp
and
shr
movs
push
stos
add
xor
cmp
xlat
xor
add
test
je
and
adc
movs
lahf
enter
jne
shl
pop
outs
xchg
pop
add
adc
sub
adc
adc
(bad)
add
sbb
loopne
aad
xor
sub
pusha
push
inc
les
ja
pop
inc
jno
inc
das
jns
jge
jo
and
push
jb
push
aas
outs
div
ja
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
push
mov
pop
cmc
das
pop
dec
push
stos
xchg
lods
add
push
scas
gs
push
mov
inc
cmps
jne
xchg
xchg
adc
mov
lahf
and
jo
inc
mov
iret
lahf
es
lds
pusha
adc
lods
xor
nop
xlat
call
and
xchg
scas
cli
inc
rol
out
fiadd
in
cdq
aad
push
(bad)
mov
shl
add
mov
fldenv
out
je
and
adc
in
lahf
rcl
cmp
add
aas
xchg
pop
add
adc
das
mov
aaa
adc
sbb
pop
lds
sbb
pop
loopne
aad
xor
xor
fs
push
les
jo
push
inc
ins
lds
jns
add
aam
and
push
imul
push
ja
in
mov
test
add
gs
fs
hlt
push
mov
dec
cmc
cs
dec
push
xchg
xchg
lods
add
push
mov
mov
mov
adc
inc
cmps
jne
xchg
mov
ss
xchg
and
jo
inc
test
iret
cdq
movs
cmps
mov
mov
push
lods
mov
xor
aam
jmp
cld
adc
and
shr
ficom
out
adc
push
ret
jbe
idiv
fs
xor
add
mov
out
je
and
adc
sti
lahf
leave
xchg
sub
push
test
shl
push
outs
cmp
aaa
shl
jg
mov
aaa
shld
lds
add
sbb
es
loopne
aad
xor
adc
or
les
jb
pop
inc
and
dec
das
js
sbb
aam
and
push
jge
pop
aas
push
fs
in
mov
test
fs
addps
pop
addr16
pop
mov
pop
cmc
jnp
push
push
nop
xchg
scas
add
push
mov
mov
test
push
rol
jne
xchg
mov
ss
mov
inc
mov
iret
call
pusha
xchg
mov
xor
in
xlat
out
inc
mov
(bad)
xchg
scas
stc
inc
(bad)
mov
xor
int
call
xor
rep
(bad)
fsub
out
je
and
adc
loop
test
and
xor
dec
add
cmp
xor
es
pop
adc
sub
or
and
add
push
loopne
aad
xor
push
(bad)
push
push
xor
ins
nop
jbe
jae
popa
lds
das
jge
inc
inc
cmp
and
push
sub
mul
in
mov
test
add
xor
jg
arpl
hlt
pop
mov
or
jne
dec
push
xchg
mov
mov
mov
adc
inc
mov
adc
xchg
mov
and
jo
inc
mov
iret
lahf
mov
pusha
xchg
push
mov
fisttp
inc
not
mul
xlat
scas
inc
mov
xor
cmp
les
rol
repz
fsub
out
je
and
adc
mov
pop
or
add
jp
add
and
jl
cmp
aas
adc
cs
aaa
xor
and
or
pop
loopne
aad
xor
dec
(bad)
push
push
je
aas
nop
ins
movs
outs
inc
jp
push
das
jle
push
inc
fs
and
imul
arpl
in
mov
test
jg
ds
addr16
hlt
adc
ja
cmp
imul
xchg
mov
scas
push
hlt
lea
mov
adc
inc
mov
adc
test
jo
inc
test
iret
cwde
es
mov
mov
push
mov
fist
inc
in
adc
and
xlat
scas
in
cli
(bad)
stc
push
scas
add
xor
loopne
lds
mul
les
xlat
add
fimul
(bad)
je
and
adc
out
(bad)
xchg
sub
sub
add
sbb
xor
daa
cmc
and
sub
adc
push
lds
dec
sbb
push
loopne
aad
xor
(bad)
jle
xor
ins
nop
sub
lds
xor
aam
and
sub
inc
aas
je
dec
ja
in
mov
test
jno
push
cmovns
inc
addr16
push
mov
inc
cmc
dec
pop
dec
push
xchg
xchg
xchg
add
push
mov
popf
test
push
mov
inc
cmps
jne
xchg
mov
movs
mov
and
jo
inc
xchg
movs
test
movs
cmps
xchg
pusha
xchg
push
test
fisttp
inc
mov
(bad)
lahf
scas
call
push
stos
add
xor
sar
fs
xor
add
std
(bad)
fldenv
out
je
and
jne
lahf
xchg
xchg
add
xor
arpl
xor
syscall
cmp
add
add
adc
sub
inc
lock
movs
xor
cmps
pusha
daa
pop
mov
loopne
aad
xor
push
(bad)
pop
push
dec
les
sub
adc
jp
jl
fs
and
push
dec
aad
aas
push
in
mov
test
add
jle
adc
hlt
je
sbb
and
dec
push
xchg
xchg
mov
loop
lods
gs
test
add
xchg
xchg
adc
inc
cmps
jne
xchg
mov
ss
mov
and
jo
inc
jmp
iret
cdq
es
cmps
mov
mov
xor
ret
xlat
hlt
inc
mov
(bad)
xchg
scas
inc
(bad)
movs
push
in
add
xor
cmp
shl
(bad)
add
mov
fldenv
out
je
and
adc
scas
lahf
enter
add
in
add
cmp
jno
and
sbb
das
mov
aaa
or
inc
lock
adc
sbb
push
loopne
aad
xor
xor
addr16
pusha
les
je
outs
inc
lds
jp
add
aam
and
push
ins
aad
aas
imul
or
gs
in
cmovp
je
add
jge
inc
xchg
imul
push
mov
push
mov
sahf
test
push
cmps
xchg
jne
xchg
adc
mov
and
jo
inc
(bad)
movs
xchg
and
call
push
mov
fisttp
inc
rcl
and
call
(bad)
mov
xor
stc
mov
out
fs
retf
add
into
(bad)
fisub
out
je
and
adc
in
leave
xchg
push
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
sub
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
pop
mov
test
pop
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
call
push
into
xchg
jne
xchg
call
mov
xchg
inc
xchg
movs
mov
jecxz
nop
xor
pusha
ret
push
xor
out
rcl
and
lahf
scas
inc
(bad)
icebp
push
rol
xor
out
mov
iret
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
lods
adc
and
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
cmc
push
cmp
xlat
xor
add
mov
fsub
out
je
and
adc
scas
lahf
iret
xchg
xor
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
sub
jg
or
push
loopne
aad
xor
or
outs
push
outs
les
movs
pop
inc
popa
lds
das
dec
(bad)
jp
fs
add
push
(bad)
aad
aas
outs
mul
in
mov
test
pop
in
cmovne
jo
pop
hlt
sbb
inc
xchg
pop
jne
cmc
and
dec
push
mov
push
mov
scas
test
push
xchg
xchg
cmps
xchg
call
ss
mov
and
jo
inc
xchg
movs
and
cmps
test
pusha
test
mov
xor
repnz
in
inc
xlat
adc
and
xchg
scas
in
out
sti
push
mov
aad
push
cmp
(bad)
aam
stc
in
gs
out
je
and
adc
mov
pop
das
test
xor
sbb
outs
cmp
jno
and
and
das
mov
aaa
shld
pop
lds
dec
sbb
pop
loopne
aad
xor
or
push
je
sub
je
outs
inc
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
mov
iret
lahf
es
pushf
xor
pusha
xchg
mov
xor
not
out
inc
mov
(bad)
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
into
fs
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
ins
shl
pop
outs
aas
xchg
cmp
jb
daa
cmc
and
sub
cmp
adc
adc
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
mov
iret
call
pusha
adc
fisttp
inc
lods
adc
and
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
jnp
aaa
in
add
cmp
jge
and
or
jg
mov
aaa
or
and
pop
cmps
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
nop
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
in
push
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
call
iret
and
shl
push
test
(bad)
push
(bad)
xlat
loope
repnz
and
xchg
scas
cli
inc
out
call
loope
sti
aad
push
lock
aam
in
(bad)
add
mov
out
je
and
adc
mov
pop
and
add
or
jo
and
sub
jg
mov
aaa
or
inc
lock
lds
and
pop
cmps
sbb
cmp
aad
xor
or
push
imul
outs
inc
(bad)
lds
das
jg
push
inc
jl
xor
push
pusha
aas
imul
popa
mov
test
gs
in
pcmpeqb
pop
addr16
adc
push
cmc
das
pop
dec
push
test
and
out
mov
mov
inc
mov
adc
mov
xchg
inc
(bad)
movs
and
cmps
shl
mov
mov
xlat
out
inc
int
mul
nop
scas
stc
inc
cli
(bad)
in
mov
in
in
fst
mov
into
fs
xor
add
mov
sti
data16
out
je
and
adc
mov
pop
sub
add
jle
adc
sub
jae
daa
cmc
sub
sub
dec
lock
cmp
dec
push
cmps
adc
pop
mov
loopne
aad
xor
(bad)
inc
push
popa
les
je
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
pop
aad
aas
and
in
mov
test
pusha
in
maxps
je
pop
hlt
adc
je
pusha
pop
pop
push
lods
xchg
mov
in
push
mov
popf
test
push
mov
inc
movs
jne
xchg
cwde
adc
movs
mov
and
jo
inc
xchg
movs
and
cmps
lahf
xor
pusha
adc
ffreep
push
jmp
adc
and
fisubr
cld
push
mov
out
rcl
push
cmp
fs
xchg
add
mov
shl
(bad)
je
and
jne
lahf
lds
or
add
sbb
add
xchg
push
xchg
xor
and
add
sbb
push
aaa
pop
movs
sub
sbb
push
and
adc
daa
inc
mov
loopne
aad
xor
aas
(bad)
push
push
xor
inc
nop
ja
jne
jae
adc
aas
(bad)
inc
addr16
and
push
jno
push
aas
dec
mul
dec
in
mov
test
jns
dec
cvtps2pd
dec
addr16
hlt
dec
mov
jg
cs
adc
xchg
xchg
lea
push
mov
pop
test
pushf
xchg
jne
xchg
adc
xchg
jo
inc
jmp
mov
es
call
mov
xor
aam
jmp
int
(bad)
(bad)
scas
mov
push
loopne
loope
out
aad
push
stc
mov
xchg
fs
loopne
scas
in
ror
je
and
adc
iret
lahf
fist
shr
in
add
adc
xchg
or
sub
push
adc
add
ins
aaa
pop
movs
es
sub
and
cmps
cmp
cmp
xor
xor
addr16
inc
les
dec
movs
pop
inc
inc
lds
inc
(bad)
push
inc
pusha
aam
sbb
push
jne
jbe
dec
mul
push
in
mov
test
in
packsswb
ja
pop
hlt
mov
dec
cmc
push
pop
jno
lods
xchg
mov
nop
push
lea
test
push
xchg
xchg
jne
xchg
lods
adc
cmps
mov
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
ret
xlat
repz
rcl
iret
and
jecxz
ret
inc
xlat
xbegin
xor
repnz
shl
in
add
(bad)
(bad)
cld
repz
je
and
adc
rcr
sub
add
add
add
sbb
xchg
ss
mov
aaa
adc
and
and
and
xor
xor
ins
push
jo
push
nop
dec
movs
pop
inc
lds
pop
(bad)
push
inc
arpl
inc
sbb
push
ins
aad
aas
push
mul
dec
in
mov
test
pop
in
punpcklwd
pop
addr16
hlt
pusha
mov
push
cmc
push
pop
ins
push
adc
gs
mov
push
xchg
xchg
jne
xchg
test
mov
fwait
mov
rol
movs
shl
mov
pusha
xchg
push
mov
fist
inc
loop
hlt
and
(bad)
aam
in
add
xor
cmp
fs
xor
add
retf
pop
data16
(bad)
je
and
adc
out
lahf
out
xchg
add
adc
add
jns
adc
addr16
shl
or
jg
mov
aaa
push
movs
xor
xor
cmp
or
and
xor
xor
ss
adc
les
ja
jl
pop
lds
das
pusha
(bad)
push
inc
push
aam
xor
jle
sbb
dec
not
imul
mov
test
gs
xor
dec
out
addr16
hlt
inc
mov
arpl
push
pop
dec
push
test
mov
xchg
pushf
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
jmp
es
shl
test
mov
xor
sahf
xlat
mov
and
leave
scas
mov
push
mov
mov
push
test
(bad)
fs
rol
in
(bad)
(bad)
in
(bad)
je
and
jne
lahf
std
xchg
pop
pop
jno
ins
ror
in
add
xchg
pop
sbb
adc
adc
cmp
pextrw
cmp
dec
pop
cmps
add
loopne
aad
xor
xor
les
pop
movs
dec
inc
dec
lds
inc
(bad)
gs
jle
adc
push
outs
aad
aas
sub
push
mov
test
outs
in
andnps
jne
ins
hlt
inc
mov
jne
jae
imul
xchg
repz
push
stos
lea
cmps
push
mov
inc
mov
fwait
xchg
jecxz
cmp
mov
mov
and
xchg
rcl
mov
push
mov
mov
mov
(bad)
xchg
scas
int
loopne
mov
xor
ret
mov
leave
fs
xor
in
shl
push
fst
scas
lahf
in
pop
pop
jne
(bad)
shr
in
add
xchg
pop
cmp
adc
sub
cmp
push
lds
and
cmp
and
xor
xor
(bad)
push
push
outs
les
cmp
push
das
push
aam
sbb
push
js
dec
aas
jae
jg
push
in
mov
test
gs
in
cmovg
jns
jge
inc
mov
pop
cmc
dec
pop
pushw
mov
push
stos
gs
out
popf
push
fld
in
cmps
xchg
jmp
(bad)
(bad)
mov
and
jo
inc
mov
lea
pushf
cmps
lds
pusha
retf
push
mov
fild
inc
not
out
and
nop
scas
mov
add
retf
xor
in
mov
jmp
loopne
call
vprotb
je
and
adc
mov
pop
xor
add
adc
xchg
adc
sub
push
adc
adc
add
xor
ins
and
push
cmps
xor
aaa
mov
loopne
aad
xor
dec
(bad)
push
push
inc
les
cmp
jb
(bad)
(bad)
jg
and
push
xor
push
sub
inc
aas
inc
test
jno
dec
test
push
in
addps
outs
addr16
inc
mov
je
pop
pop
ja
xchg
xchg
test
gs
fucomip
inc
mov
sahf
adc
inc
mov
stos
xchg
mov
ss
and
jo
inc
lock
mov
es
pusha
mov
xor
sahf
xlat
lods
inc
rcl
retf
lds
inc
ret
push
mov
jecxz
(bad)
jmp
(bad)
mov
repz
add
mov
(bad)
out
je
and
jne
lahf
call
test
shl
in
add
jg
es
and
sbb
adc
cmp
adc
adc
push
and
add
aaa
loopne
aad
xor
aas
(bad)
gs
push
les
nop
push
jno
jae
adc
cmp
push
inc
addr16
and
push
jo
pop
aas
pop
mul
jo
pop
mov
test
inc
in
subps
jnp
add
outs
mov
pop
cmc
outs
pop
add
rcl
lods
gs
xchg
add
into
xchg
adc
inc
test
xchg
mov
ss
mov
and
jo
inc
xchg
movs
and
aad
stos
push
mov
fisttp
inc
aad
shl
ret
inc
cld
(bad)
ficom
fdiv
sar
jmp
jmp
scas
in
gs
into
shl
je
and
adc
aam
not
(bad)
rol
in
add
sbb
rcl
jg
mov
aaa
add
cmp
aaa
lds
and
xor
and
sbb
xor
pop
push
arpl
jne
dec
movs
or
lds
das
and
jno
and
mov
push
jae
pop
aas
inc
not
dec
in
mov
test
inc
in
subps
popa
outs
hlt
arpl
or
das
pop
push
push
stos
xchg
mov
xchg
gs
test
push
add
jne
xchg
mov
mov
mov
and
jo
inc
out
movs
popf
and
sahf
cmps
mov
mov
stos
push
lea
leave
push
in
xlat
fiadd
in
and
xchg
scas
jmp
push
loop
out
popf
aad
push
pushf
mov
in
cmc
xor
gs
out
je
and
adc
fstp
sub
add
xchg
pop
and
adc
adc
and
pop
lds
and
add
mov
loopne
aad
xor
sub
popa
push
ins
les
cmp
jle
pop
mov
xor
sub
mul
push
pop
mov
test
inc
in
orps
cmp
hlt
jle
inc
xchg
dec
jne
cmc
push
pop
dec
push
mov
push
xchg
gs
out
scas
push
les
mov
mov
push
and
jo
inc
mov
mov
xor
pusha
cwde
push
movs
mov
xor
sahf
xlat
mov
sti
adc
and
fisubr
hlt
push
enter
call
fcom
mov
int3
fdiv
xchg
add
mov
out
je
and
jne
lahf
mov
shl
in
add
jns
inc
pop
push
xchg
imul
cmc
or
adc
movs
add
and
sbb
xor
sbb
aad
xor
adc
je
inc
les
cmp
inc
das
cmp
pop
inc
outs
aam
and
push
push
aad
aas
jns
fs
in
mov
test
gs
in
sysret
out
addr16
hlt
dec
mov
inc
cmc
je
dec
push
mov
in
add
push
xchg
gs
test
push
mov
inc
mov
lahf
xchg
xchg
adc
jmp
jo
inc
nop
movs
stos
and
scas
cmps
cmps
xor
pusha
(bad)
push
cli
mov
xor
jecxz
loopne
std
adc
and
loope
retf
(bad)
fst
repz
(bad)
mov
jmp
lea
enter
(bad)
xchg
std
adc
mov
pop
daa
test
sar
in
add
add
xor
imul
adc
sbb
pop
lock
movs
sub
cmps
and
cmp
xor
and
les
ja
or
das
dec
(bad)
push
inc
outs
aam
cmp
jge
pop
aas
jns
jbe
pop
in
mov
test
sbb
out
addr16
hlt
push
mov
ja
dec
pop
push
push
xchg
xchg
mov
mov
gs
test
push
xchg
xchg
jne
xchg
mov
cmps
mov
and
jo
inc
xchg
aad
cdq
cmps
shl
mov
xor
out
loop
ficom
iret
and
repz
in
loop
fst
shl
mov
jecxz
xor
fwait
gs
xchg
data16
out
je
and
adc
fistp
add
add
jle
sub
outs
xchg
imul
cmc
inc
adc
push
add
dec
movs
or
and
sbb
sub
and
push
xor
dec
(bad)
dec
push
popa
les
dec
movs
inc
inc
dec
lds
(bad)
mov
aam
xor
push
sub
neg
jle
popa
mov
test
sbb
push
vmwrite
dec
addr16
hlt
push
mov
dec
cmc
ins
pop
pushw
(bad)
xchg
mov
gs
xchg
add
cdq
xchg
adc
inc
call
(bad)
out
ss
lea
jo
inc
cwde
movs
and
cmps
fwait
xor
pusha
retf
push
mov
mov
sahf
xlat
mov
ret
inc
xlat
scas
loop
in
(bad)
fcom
(bad)
xor
cmp
xor
in
gs
(bad)
pushf
data16
cmc
je
and
adc
stc
lahf
std
xchg
push
pop
or
in
add
cmp
add
sbb
xchg
push
jg
mov
aaa
xor
lds
and
cmps
sub
add
aad
xor
sub
les
nop
movs
or
das
inc
mov
ins
add
pop
aad
aas
jg
jo
push
in
mov
test
gs
in
(bad)
out
pmuludq
mov
pop
cmc
jb
ja
mov
mov
pop
cwde
push
lahf
xchg
jne
xchg
mov
repz
and
jo
inc
mov
iret
fldenv
jecxz
pushf
xor
pusha
mov
xor
mov
test
and
nop
scas
rol
lds
div
cli
mov
jmp
lea
mov
ror
in
xchg
and
adc
lock
rcl
adc
add
cmp
jae
and
pop
adc
aaa
mov
aaa
push
movs
and
push
lds
add
cmps
outs
daa
sbb
xor
add
les
ins
movs
push
inc
inc
lds
pusha
mov
aam
adc
push
jb
jo
push
test
in
mov
test
popa
in
punpcklbw
jo
jne
pop
mov
push
cmc
ins
pop
jo
test
mov
add
les
out
lea
in
ss
jo
inc
in
movs
(bad)
and
call
push
popf
mov
xor
int3
xlat
rol
les
xchg
scas
mov
out
(bad)
mov
xor
icebp
mov
xlat
shl
leave
add
mov
shl
fidiv
lds
fstp
adc
add
xor
add
sar
or
ss
aaa
adc
and
sub
push
loopne
aad
xor
cmp
push
push
aaa
les
ja
pop
inc
lds
das
push
(bad)
jo
jo
inc
sbb
push
jb
inc
aas
pop
idiv
ja
in
mov
test
dec
in
(bad)
out
addr16
adc
jne
cmc
jl
ins
push
mov
push
jmp
add
add
sahf
adc
nop
mov
and
jo
inc
in
movs
(bad)
and
std
cmps
mov
pusha
mov
cmps
mov
xor
icebp
xlat
leave
inc
lock
and
shr
loopne
rol
xor
cmp
xor
sahf
gs
(bad)
(bad)
out
je
and
adc
icebp
lahf
cli
xchg
xor
sub
sbb
adc
test
adc
xchg
cmp
adc
xor
sbb
and
das
cmps
push
daa
aas
mov
loopne
aad
xor
or
adc
nop
sub
lds
cmp
aam
add
push
push
div
push
in
mov
test
dec
in
cmovge
jge
jno
jne
inc
xchg
push
jne
cmc
push
pop
jae
mov
push
lock
push
fld
mov
adc
mov
and
rol
movs
(bad)
mov
popf
xor
pusha
popf
push
scas
mov
xor
xchg
xlat
out
inc
ficom
int3
and
mov
mov
xor
jecxz
shl
not
add
mov
les
out
je
and
adc
mov
pop
or
jnp
ja
add
outs
daa
xchg
pop
pop
xchg
or
adc
pop
adc
aaa
mov
aaa
add
and
pop
cmps
sbb
loopne
aad
xor
adc
inc
push
jl
ins
nop
inc
movs
inc
inc
jno
ja
push
aam
sbb
push
dec
aad
aas
aaa
mul
push
in
mov
test
push
cmovns
pop
addr16
hlt
pop
mov
jns
cs
add
add
push
cli
test
stos
push
xchg
xchg
jne
xchg
lods
adc
mov
lods
inc
lods
movs
mov
mov
cmps
test
pusha
xchg
push
mov
fild
inc
sti
adc
and
lahf
scas
in
test
les
(bad)
fidivr
sahf
xlat
xor
add
ror
je
and
adc
cmps
lahf
repz
pop
pop
jb
adc
jbe
adc
jne
and
sbb
adc
ja
imul
sub
movs
cmp
daa
adc
xor
sbb
dec
push
les
jb
jne
popa
lds
das
dec
(bad)
push
inc
jg
outs
cmp
push
push
aad
aas
imul
jg
ins
test
jb
inc
cmovg
jb
dec
hlt
jl
pop
xchg
ins
jne
cmc
jbe
ja
mov
push
mov
mov
push
mov
inc
test
xchg
mov
sar
ss
mov
and
jo
inc
lock
sahf
and
sahf
cmps
mov
push
sahf
mov
xor
icebp
xlat
repnz
in
adc
and
(bad)
scas
int
add
push
std
add
xor
fdivr
out
fs
out
mul
icebp
gs
pop
shl
fbstp
out
jmp
lahf
int
xor
ins
test
xor
test
cmp
ja
push
cmc
cs
adc
movs
add
and
movs
das
dec
sbb
mov
loopne
aad
xor
pop
(bad)
or
nop
ins
movs
pop
inc
jae
push
das
jle
jg
push
aam
xor
push
jae
jle
sub
in
mov
test
gs
in
cmovno
gs
pop
mov
push
cmc
pop
pop
push
push
lods
xchg
mov
rol
cmps
push
mov
inc
cwde
jne
xchg
mov
xor
test
es
cmps
shl
aam
cmps
fist
inc
out
les
imul
mov
xor
cwde
mov
lahf
xlat
xor
add
ror
je
and
jne
lahf
rcl
cmp
jo
dec
add
and
jae
sbb
xchg
inc
jg
mov
aaa
push
movs
pop
lock
movs
and
daa
pop
mov
loopne
aad
xor
adc
push
ins
les
jno
jno
jl
pusha
das
dec
(bad)
push
inc
push
aam
and
push
push
aad
aas
ins
imul
jno
push
mov
test
push
inc
nop
and
hlt
dec
mov
jo
jg
dec
push
(bad)
xchg
mov
push
jmp
add
ret
adc
inc
mov
adc
mov
jo
inc
lods
movs
scas
and
out
call
mov
xor
loop
ret
inc
cmps
adc
and
repnz
hlt
inc
into
(bad)
mov
xor
in
scas
jbe
mul
fnsave
fild
repnz
(bad)
data16
jecxz
popf
and
jne
lahf
repnz
push
pop
daa
test
in
add
push
xchg
pop
pop
xchg
sub
pop
cmc
cmp
aaa
mov
aaa
adc
lds
movs
adc
daa
cmp
aad
xor
sub
les
jp
push
inc
push
or
dec
(bad)
jne
inc
aam
and
push
js
push
aas
jns
dec
ja
in
mov
test
gs
pcmpeqb
outs
addr16
jge
inc
xchg
jge
push
cmc
and
push
push
test
and
out
inc
mov
jne
xchg
mov
xor
inc
cmps
movs
mov
es
pusha
mov
mov
xor
in
xlat
(bad)
inc
mov
korw
scas
cmc
inc
loopne
scas
push
jecxz
mov
push
stc
mov
leave
lea
aam
(bad)
in
gs
shl
push
rcl
mov
pop
das
test
ror
in
add
sbb
push
sar
sbb
adc
and
and
or
pop
loopne
aad
xor
xor
les
nop
inc
movs
jb
imul
bound
aam
sub
inc
push
dec
aad
aas
jno
xor
in
mov
test
adc
sub
outs
out
addr16
ins
mov
dec
cmc
jbe
jbe
leave
xchg
mov
push
(bad)
gs
mov
push
xchg
xchg
adc
inc
mov
adc
xchg
mov
and
jo
inc
popf
movs
shl
lods
cmps
mov
push
xor
push
rcl
mov
loopne
fsub
jmp
in
lock
xor
ret
jbe
test
add
call
out
je
and
jne
lahf
int
or
xor
add
xchg
pop
and
daa
shr
or
jg
mov
aaa
or
and
pop
cmps
add
sbb
xor
push
(bad)
jbe
xor
outs
nop
jb
or
lds
das
cmp
push
inc
inc
aam
cmp
push
aad
aas
test
in
mov
test
in
lsl
pop
addr16
hlt
ins
mov
jge
and
imul
mov
mov
add
xchg
xchg
jne
xchg
popf
adc
jmp
jo
inc
out
movs
fisub
xchg
cmps
test
pusha
pushf
push
mov
mov
inc
ret
adc
lahf
scas
clc
inc
in
(bad)
push
rol
mov
push
stc
mov
xlat
test
rol
cmc
(bad)
(bad)
out
je
and
adc
stc
lahf
lock
and
jno
cmp
or
xor
cmp
xor
or
or
cmp
and
or
sub
daa
cmps
data16
pop
mov
loopne
aad
xor
push
(bad)
imul
movs
jns
push
lds
daa
(bad)
jl
pusha
aam
and
dec
push
push
aad
aas
jnp
dec
ja
in
mov
test
jg
arpl
pop
out
addr16
hlt
pop
mov
pop
cmc
jl
inc
push
mov
cmps
add
push
mov
test
push
test
in
ficom
test
mov
xchg
inc
pushf
movs
mov
icebp
iret
fldenv
fwait
cmps
mov
push
mov
fild
inc
fist
int
stc
(bad)
mov
lock
loopne
jmp
popf
aad
push
fdivr
les
jmp
in
jmp
out
je
and
adc
ficomp
das
test
sub
test
pop
cmp
or
(bad)
cmc
and
outs
mov
aaa
xor
and
pop
cmps
gs
xor
xor
dec
(bad)
push
nop
dec
movs
outs
inc
pop
lds
dec
mov
aam
cmp
push
dec
aad
aas
sub
addr16
in
mov
test
dec
in
pcmpeqw
bound
hlt
push
mov
imul
pop
inc
push
adc
gs
push
fld
mov
xchg
cwde
adc
xchg
mov
and
jo
inc
mov
iret
(bad)
mov
pusha
xchg
mov
xor
(bad)
xlat
retf
inc
rcl
mul
shr
iret
push
loop
(bad)
xor
cmp
fs
xor
add
in
(bad)
out
je
and
adc
out
lahf
xchg
xchg
pop
pop
or
add
sbb
xchg
add
data16
or
or
ss
ins
and
pop
cmps
adc
cmp
xor
or
push
push
xor
dec
nop
jne
jnp
arpl
push
das
daa
(bad)
jl
pusha
aam
and
push
sub
pop
aas
and
outs
ja
in
mov
test
gs
in
subps
das
addr16
hlt
pop
mov
or
push
test
push
mov
mov
scas
add
mov
inc
xor
mov
ss
mov
jo
inc
test
iret
and
cmps
popf
xor
pusha
call
fild
inc
in
adc
and
jmp
cli
push
rol
in
call
mov
(bad)
fs
add
fisttp
ret
je
and
adc
aam
retf
xchg
adc
aas
test
aaa
in
add
push
xchg
pop
push
xchg
sub
es
and
sbb
or
push
lds
and
cmps
fs
cmp
aad
xor
push
(bad)
jg
dec
les
inc
movs
ja
lds
das
imul
inc
sbb
push
xor
sbb
sub
jle
outs
in
mov
test
in
pcmpeqd
jae
ins
hlt
dec
mov
jno
cmp
ja
test
pushf
add
push
mov
aam
sti
add
movs
xchg
sahf
xchg
lea
xchg
mov
and
jo
inc
jmp
es
mov
push
xor
in
inc
ficom
shl
xchg
scas
leave
inc
sti
(bad)
mov
xor
stc
mov
loope
shl
int3
add
repz
lahf
data16
out
je
and
adc
loopne
fst
(bad)
ror
adc
pop
push
xchg
pop
shl
adc
sbb
and
das
lds
and
add
adc
adc
add
push
(bad)
dec
push
dec
les
jb
inc
inc
lds
jge
pop
inc
dec
aam
and
push
jno
jle
jb
jb
inc
in
mov
test
sbb
out
addr16
hlt
adc
imul
movs
xchg
pop
push
test
mov
out
add
lea
jne
xchg
lods
adc
mov
jo
inc
mov
mov
xchg
cmps
ret
xor
pusha
xchg
mov
xor
hlt
xlat
retf
adc
and
enter
add
push
aam
clc
xor
xchg
out
push
test
ret
je
and
adc
ret
xchg
or
xor
add
adc
xchg
jb
sbb
sbb
or
cmp
adc
cmp
add
mov
loopne
aad
xor
cmp
les
sub
pop
das
dec
mov
inc
aam
and
push
ins
aad
aas
jo
inc
ja
in
mov
test
gs
in
cmovs
es
push
mov
or
push
pop
push
push
test
(bad)
gs
test
add
cmps
xchg
jne
xchg
lea
(bad)
mov
and
jo
inc
mov
iret
mov
loopne
xchg
xor
pusha
mov
xor
(bad)
repnz
fcom
in
and
mov
cmc
push
mov
mov
push
test
mul
les
fisttp
loope
xchg
and
adc
cld
lahf
in
push
pop
add
adc
cmp
xor
xchg
add
adc
sub
cs
lds
and
sub
push
loopne
aad
xor
dec
(bad)
pop
push
outs
les
jnp
pop
inc
popa
lds
pop
(bad)
jo
push
aam
adc
push
pop
aad
aas
div
mov
test
sbb
ins
pcmpeqw
jnp
add
imul
cmc
dec
pop
ja
lea
cmps
gs
out
mov
adc
inc
xchg
jne
xchg
mov
mov
jo
inc
stos
movs
test
mov
cmps
iret
xor
pusha
xchg
mov
xor
(bad)
xlat
aam
loopne
retf
(bad)
fisubr
loope
fiadd
aad
fcmovbe
clc
push
sar
fbstp
test
(bad)
fbld
out
je
and
adc
les
and
add
sub
daa
rcr
add
adc
movs
add
and
pop
cmps
jns
xor
xor
xor
les
jp
jo
pop
lds
dec
(bad)
jae
jae
jne
daa
mov
push
dec
aad
aas
test
in
mov
test
gs
in
nop
pop
addr16
hlt
bound
dec
cmc
addr16
dec
push
mov
lea
test
push
mov
mov
fist
call
jo
inc
xchg
cwde
es
pusha
adc
mov
push
in
icebp
inc
cld
adc
and
out
scas
mov
push
aad
mov
push
test
xchg
div
int3
add
dec
bnd
and
adc
aam
xchg
xchg
dec
pop
jno
rcl
or
or
jne
pop
cmc
aas
adc
cs
aaa
sub
and
sbb
push
loopne
aad
xor
push
(bad)
push
push
dec
les
outs
movs
jo
dec
lds
cmp
aam
and
add
pop
test
in
mov
test
in
(bad)
out
addr16
hlt
inc
mov
jl
outs
pop
jb
mov
mov
gs
test
push
mov
inc
movs
jne
xchg
adc
xchg
jo
inc
(bad)
movs
test
xchg
call
fbstp
inc
in
adc
and
enter
xchg
cmc
push
mov
shl
mov
xchg
fs
xor
ror
in
aam
fst
hlt
lahf
lea
adc
xor
sub
cmp
pop
pop
and
adc
das
mov
aaa
adc
and
add
ds
aad
xor
or
pusha
push
dec
les
inc
push
lds
jp
sbb
aam
add
push
dec
aad
aas
je
push
mov
test
gs
in
punpckldq
push
addr16
push
mov
jae
and
or
nop
xchg
scas
add
push
lods
lods
test
push
add
jne
xchg
stos
adc
test
and
scas
inc
call
iret
mov
xor
pusha
fst
mov
xor
aam
call
and
retf
inc
out
hlt
push
mov
mov
push
fdivr
retf
xor
add
mov
fsub
out
je
and
adc
in
rcl
daa
ror
in
add
adc
xor
cmp
adc
aaa
mov
aaa
xor
and
add
mov
loopne
aad
xor
(bad)
push
pop
les
xor
lds
xor
aam
and
add
aad
aas
push
test
in
mov
test
popa
in
pcmpeqb
jp
jg
ins
mov
push
cmc
push
pop
js
mov
movs
add
push
mov
test
push
mov
xchg
jne
xchg
stos
adc
stos
mov
and
jo
inc
lea
aam
popf
cmps
test
pusha
rcl
mov
xchg
fbld
inc
ret
adc
and
lock
mov
loopne
ret
xor
std
mov
lock
xor
add
mov
fisub
out
je
and
adc
ret
xchg
dec
pop
add
add
add
cmp
sbb
cmc
ss
ins
mov
aaa
and
sbb
adc
or
cmp
sub
add
add
cs
pop
aaa
(bad)
inc
push
push
les
dec
movs
jne
imul
js
jnp
and
push
pop
aad
aas
outs
test
in
mov
test
js
aaa
punpcklwd
jle
push
hlt
inc
mov
jb
dec
pop
push
push
mov
stos
mov
push
rol
jne
xchg
jmp
test
mov
icebp
mov
and
jo
inc
xchg
movs
movs
and
xchg
ret
mov
xor
rcl
inc
jecxz
call
inc
out
in
mov
push
fld
mov
push
fdivr
shl
out
add
repnz
je
and
adc
ret
xchg
dec
pop
push
test
rol
in
add
xor
xchg
ja
add
pop
adc
adc
inc
lock
sub
dec
add
popa
daa
inc
mov
loopne
aad
xor
or
push
push
jg
pop
nop
ins
movs
ins
inc
lds
das
inc
mov
aam
xor
push
js
inc
aas
push
div
ja
in
mov
test
in
cmovbe
and
hlt
adc
jne
cmc
js
or
lods
xchg
xchg
add
push
mul
test
push
add
jne
xchg
stos
adc
(bad)
mov
and
jo
inc
mov
xchg
es
cdq
xor
pusha
xchg
push
cmps
mov
xor
not
xlat
inc
in
adc
and
repnz
cld
inc
cli
(bad)
call
out
loopne
test
jbe
mul
xor
add
fimul
iret
je
and
jne
lahf
aad
push
pop
jbe
sbb
add
jp
es
xor
adc
das
mov
aaa
or
and
cmp
push
loopne
aad
xor
aaa
(bad)
adc
les
js
outs
inc
(bad)
lds
inc
(bad)
push
inc
inc
aam
and
inc
aad
aas
push
imul
in
mov
test
gs
in
addps
ja
dec
hlt
jge
gs
inc
jne
cmc
daa
pop
jno
mov
push
test
add
mov
inc
xchg
jne
xchg
stos
adc
xchg
mov
and
jo
inc
mov
cmps
es
mov
push
lods
mov
xor
hlt
xlat
rol
out
and
aad
mov
push
jmp
push
(bad)
mov
mul
out
aad
fisub
(bad)
loope
out
(bad)
je
and
adc
in
lahf
not
cmp
pmulhw
add
xchg
pop
popa
xchg
add
adc
push
adc
push
mov
aaa
add
and
and
cmp
adc
xor
adc
inc
push
je
xchg
xor
push
das
(bad)
(bad)
outs
inc
inc
aam
add
push
dec
aad
aas
jne
inc
ja
in
mov
test
dec
in
cmovae
push
addr16
hlt
ins
mov
push
cmc
cmp
ins
push
lods
xchg
lods
add
push
mov
test
push
xchg
xchg
mov
mov
icebp
mov
and
jo
inc
xchg
movs
and
cmps
shl
rcl
popf
xor
out
xlat
jmp
and
lahf
scas
clc
inc
in
rcl
movs
xor
out
into
jbe
mul
fs
xor
add
out
(bad)
data16
aad
jmp
test
fistp
adc
add
arpl
add
adc
adc
xor
adc
or
pop
cmps
arpl
ds
loopne
aad
xor
xor
adc
les
movs
outs
inc
inc
lds
addr16
jl
cs
and
push
xor
push
aas
outs
div
jno
jge
sbb
inc
movq
je
pop
hlt
adc
ja
ins
pop
jge
mov
stos
add
push
mul
test
add
xchg
xchg
jne
xchg
mov
movs
mov
and
jo
inc
mov
fbld
and
mov
mov
mov
xchg
xlat
inc
mov
mov
inc
scas
mov
push
ret
xor
(bad)
mov
aad
fnstenv
cmc
add
out
pop
mov
and
adc
in
xchg
xchg
adc
jno
xor
add
and
xchg
jae
jns
and
sub
sbb
xor
ds
sub
xor
xor
or
pop
push
push
les
je
pop
inc
dec
lds
das
and
inc
inc
and
push
sbb
and
pop
aas
jae
push
ja
in
mov
test
add
sub
jl
and
add
or
ins
cmc
pop
pop
or
mov
scas
add
push
xchg
mov
mov
adc
inc
fwait
jne
xchg
lock
xchg
mov
and
jo
inc
xchg
movs
mov
test
cdq
push
popf
mov
xor
retf
inc
cmps
adc
and
loop
les
(bad)
aad
test
(bad)
push
loop
fidiv
neg
add
call
out
je
and
adc
cld
lahf
xchg
xchg
pop
pop
add
add
push
xchg
pop
aas
xchg
and
add
add
sub
adc
xor
and
pop
cmps
outs
daa
and
aad
xor
ds
push
push
jno
jge
push
movs
push
inc
jns
inc
das
jle
pop
inc
jg
inc
sbb
push
imul
aas
js
pusha
ja
in
mov
test
pop
in
unpcklps
arpl
hlt
jle
inc
xchg
jne
add
pop
pop
push
add
push
movs
gs
out
fwait
push
mov
inc
sahf
jne
xchg
in
adc
in
mov
and
jo
inc
xchg
movs
frstor
xchg
cmps
cwde
xor
pusha
fst
mov
xor
rcl
int
in
shl
scas
jmp
add
xor
(bad)
mov
into
fs
mov
test
je
and
ficomp
ins
test
add
syscall
and
pop
pop
xor
adc
cmp
ss
lds
and
cmp
push
loopne
aad
xor
xor
les
xor
dec
das
dec
mov
aam
and
push
dec
aad
aas
je
jae
adc
push
mov
test
pop
in
movd
and
inc
hlt
push
jnp
inc
jne
cmc
cmp
ja
stos
xchg
mov
gs
out
pop
fld
test
xchg
jmp
xor
inc
cwde
movs
mov
es
lahf
xor
pusha
adc
lods
xor
(bad)
xlat
test
and
jmp
(bad)
cld
push
jmp
aad
push
fidivr
shl
add
mov
out
out
out
(bad)
and
adc
jecxz
enter
and
add
cmp
and
shl
adc
ins
mov
aaa
xor
and
add
xor
and
xor
pop
sbb
les
dec
movs
jle
pop
lds
addr16
ja
jle
push
add
push
aad
aas
das
imul
jle
jae
push
in
punpckhbw
pop
addr16
hlt
sbb
pop
xchg
jge
or
jge
pop
push
fist
lods
gs
add
xchg
jne
xchg
mov
ss
mov
inc
scas
movs
mov
mov
nop
push
std
mov
xor
in
xlat
inc
aad
fadd
stc
inc
xchg
scas
mov
push
inc
out
lahf
aad
push
std
mov
in
test
enter
fbld
(bad)
fisub
out
je
and
adc
mov
pop
or
in
add
add
jo
add
sub
adc
dec
lock
lds
and
and
adc
dec
aad
xor
aas
(bad)
adc
les
inc
movs
inc
inc
cmp
arpl
outs
(bad)
je
and
imul
aad
aas
sub
pusha
ja
in
mov
test
add
push
movq
inc
addr16
jb
jnp
outs
jne
cmc
das
pop
pushw
rcl
mov
test
add
xchg
xchg
jne
xchg
xchg
adc
in
mov
and
jo
inc
fwait
movs
fbld
mov
mov
xor
icebp
xlat
lock
fcom
shl
scas
hlt
inc
in
fst
shl
mov
(bad)
fs
xor
gs
shl
(bad)
xchg
(bad)
lahf
mov
rcl
in
add
xchg
xchg
pop
shl
adc
xor
adc
and
sbb
add
cmp
or
xor
inc
push
jae
and
lds
outs
(bad)
fs
pop
aam
cmp
push
jo
jge
dec
imul
push
in
mov
test
add
ins
subps
jp
pmuludq
push
xchg
inc
jne
cmc
and
je
mov
push
xchg
test
push
mov
jne
xchg
test
mov
mov
and
jo
inc
lea
mov
xor
pusha
mov
xor
retf
xlat
mov
in
adc
and
retf
scas
retf
(bad)
ficom
stc
xor
cmp
fs
xor
ror
je
and
adc
ret
xchg
cs
or
add
cmp
xor
es
xor
jg
mov
aaa
sub
lds
and
cmps
and
ds
loopne
aad
xor
sub
push
push
push
les
inc
push
pop
das
inc
mov
aam
xor
push
jbe
inc
aas
ins
test
in
mov
test
pop
in
pcmpgtd
addr16
hlt
sbb
inc
xchg
inc
jne
cmc
es
dec
push
mov
add
mov
mov
stc
adc
inc
mov
mov
push
and
jo
inc
lods
movs
xchg
and
lahf
cmps
cdq
xor
pusha
mov
xor
retf
xlat
ret
inc
fcom
mov
sti
(bad)
jecxz
mov
push
loope
jecxz
call
jmp
fistp
iret
fs
repz
retf
(bad)
xchg
repz
je
and
adc
rcr
test
ja
or
outs
jnp
es
or
and
and
sbb
pop
mov
aaa
or
and
inc
cmps
pop
daa
cs
loopne
aad
xor
push
(bad)
ins
push
ins
les
nop
xor
pop
das
js
outs
inc
js
pop
xor
push
and
dec
aas
pop
div
mov
test
gs
in
(bad)
out
addr16
hlt
pop
mov
dec
cmc
jns
or
xchg
xchg
repnz
push
fwait
gs
test
push
ret
xchg
test
mov
and
jo
inc
jmp
iret
mov
xor
pusha
rcl
retf
(bad)
push
call
adc
inc
hlt
scas
mov
push
mov
mov
push
ret
mov
jecxz
ret
add
loopne
into
data16
out
je
and
adc
stc
lahf
clc
xchg
cs
xor
and
jo
or
jl
and
adc
shl
adc
and
sub
add
and
or
sub
push
aad
xor
or
inc
push
push
les
dec
movs
dec
inc
lds
inc
(bad)
sbb
aam
sbb
push
ja
add
sub
fs
in
mov
test
dec
in
cmovbe
and
hlt
mov
je
inc
pop
add
add
push
mov
add
mov
movs
adc
inc
cmps
jne
xchg
stos
adc
mov
fild
movs
mov
and
push
loopne
xchg
xor
loopne
mov
in
adc
and
xchg
scas
loop
jecxz
fist
out
retf
push
repnz
(bad)
test
in
add
fisttp
hlt
je
and
adc
aam
call
cmp
ins
in
add
and
inc
pop
xor
adc
xor
and
pextrw
ds
and
pusha
daa
xor
aad
xor
dec
(bad)
gs
dec
les
movs
push
inc
pop
lds
popa
(bad)
pop
inc
inc
aam
cmp
push
jb
pop
aas
xor
xor
pop
in
mov
test
inc
out
addr16
hlt
ja
inc
xchg
fs
cmc
pop
pop
jg
test
cwde
mov
out
xchg
xchg
adc
inc
mov
adc
movs
mov
and
jo
inc
call
es
xchg
xor
pusha
fwait
push
xchg
mov
xor
in
into
inc
not
mov
fadd
ret
inc
jmp
(bad)
iret
push
rol
stos
xor
jecxz
(bad)
jbe
not
add
repz
out
je
and
adc
in
jmp
adc
xor
push
shl
pop
outs
add
sar
sbb
jg
mov
aaa
push
movs
sbb
and
aas
cmps
adc
sub
and
xor
or
outs
push
push
les
movs
push
inc
jb
push
das
jp
jo
jne
dec
adc
push
push
aad
aas
push
inc
ja
in
mov
test
gs
in
(bad)
out
addr16
hlt
adc
jne
cmc
popw
js
mov
xchg
add
push
xchg
gs
test
push
test
mov
test
mov
(bad)
push
(bad)
jo
inc
out
movs
fbld
mov
movs
push
test
test
inc
les
fsub
into
scas
out
cli
(bad)
repnz
jmp
aad
push
clc
mov
shl
cmc
add
out
aam
mul
shl
xchg
repz
sti
xchg
xor
or
add
xchg
daa
xchg
push
shr
adc
xor
cmp
sub
and
and
cmps
aas
daa
inc
mov
loopne
aad
xor
aas
(bad)
inc
push
jg
cmp
aas
lds
jp
bound
aam
sbb
push
and
jge
aaa
not
inc
in
mov
test
dec
in
movd
and
hlt
jne
pop
xchg
bound
cmc
popa
pop
je
lahf
xchg
xchg
add
push
scas
gs
test
push
test
mov
adc
xchg
test
movs
les
lahf
cmps
nop
xor
pusha
adc
nop
xor
xchg
xlat
into
inc
mov
(bad)
shr
cmc
push
in
add
push
cmp
fnsave
les
ror
les
not
(bad)
lahf
fist
sub
add
xchg
pop
sbb
adc
sbb
daa
lock
lds
and
das
cmps
push
daa
add
xor
sbb
gs
dec
les
movs
push
inc
popa
lds
inc
(bad)
jl
arpl
push
add
push
jns
jo
push
mul
inc
in
mov
test
push
in
cmovbe
inc
addr16
hlt
push
addr16
data16
cmc
pop
pop
jae
mov
push
test
test
push
mov
loope
mov
sahf
adc
stos
mov
and
jo
inc
jmp
es
mov
shl
push
std
mov
xor
iret
xlat
retf
inc
out
les
out
scas
out
inc
xchg
ret
add
aad
cli
jbe
test
add
xlat
(bad)
fsub
out
je
and
adc
clc
lahf
rcl
add
sub
sbb
or
or
and
sub
cs
and
imul
adc
dec
push
cmps
jns
cs
loopne
aad
xor
xor
les
inc
movs
dec
inc
ins
lds
(bad)
inc
arpl
push
sbb
push
inc
aad
aas
dec
idiv
ja
in
mov
test
gs
in
packsswb
and
mov
push
cmc
arpl
push
push
mov
push
stos
gs
sti
add
xchg
xchg
adc
inc
mov
mov
call
and
jo
inc
out
sahf
and
xchg
cmps
mov
push
mov
fist
inc
cmc
adc
and
cmc
scas
aam
clc
mov
xor
fdivr
xchg
fs
add
iret
(bad)
std
shl
les
popf
adc
(bad)
lahf
in
xor
adc
add
xchg
cmp
adc
cmp
add
or
push
and
sbb
push
loopne
aad
xor
or
or
nop
push
cmovne
(bad)
inc
jns
jno
jo
jl
(bad)
aad
aas
outs
test
in
mov
test
sbb
jg
push
out
addr16
hlt
push
mov
jne
push
pop
jae
mov
xchg
test
mov
xchg
adc
inc
mov
adc
xchg
mov
and
jo
inc
mov
mov
mov
pusha
test
mov
xor
rcl
in
loope
mul
int
jmp
add
xor
out
into
jbe
not
add
jmp
out
je
and
adc
ficomp
push
test
rol
in
add
sub
xchg
adc
xor
push
adc
outs
mov
aaa
xor
and
add
mov
loopne
aad
xor
aaa
(bad)
dec
push
ins
les
movs
adc
cmp
(bad)
push
inc
addr16
and
push
jb
push
aas
outs
test
in
mov
test
dec
in
cvtdq2ps
jg
pop
hlt
adc
jns
dec
pop
movlhps
xchg
add
test
test
mov
xchg
adc
inc
xchg
jne
xchg
mov
cmp
ss
mov
and
jo
inc
mov
iret
fisub
mov
pusha
movs
push
mov
retf
push
rcl
in
inc
mov
(bad)
loop
ret
(bad)
hlt
push
aam
out
in
ficom
mov
int3
fs
xor
add
fisttp
sti
je
and
jne
lahf
jmp
shl
in
add
or
and
adc
cmp
movs
sbb
and
and
push
loopne
aad
xor
sbb
adc
pusha
les
jae
jo
pop
lds
inc
fs
cmp
push
sub
add
ja
in
mov
test
pop
in
cmovns
and
hlt
jge
dec
xchg
dec
jne
cmc
es
outs
push
xchg
xchg
scas
add
push
xchg
xchg
sti
push
cmps
xchg
jne
xchg
xchg
adc
xor
inc
pushf
movs
mov
mov
xchg
push
xor
push
hlt
xlat
in
les
mov
mov
mov
mov
push
rol
loopne
vpsllw
mov
mul
retf
add
mov
out
data16
int3
je
and
adc
icebp
lahf
xchg
xchg
ss
or
add
xchg
pop
jge
jl
and
cmp
cs
aaa
xor
and
das
cmps
das
daa
cmp
aad
xor
pop
(bad)
imul
jno
dec
movs
pop
inc
push
lds
js
push
inc
jle
pusha
or
push
push
test
sbb
push
out
addr16
sbb
jne
cmc
pop
pop
push
add
push
mov
scas
test
add
fld
mov
adc
test
lods
inc
mov
iret
mov
xor
pusha
mov
xor
loop
in
fst
fsub
xchg
scas
int
(bad)
(bad)
call
repz
les
shl
add
xlat
(bad)
out
je
and
adc
mov
pop
das
test
in
add
jge
or
cmp
adc
sbb
aas
lock
movs
cs
das
cmps
popa
daa
inc
mov
loopne
aad
xor
or
bound
les
movs
gs
cmp
gs
arpl
jae
jns
cmp
dec
aad
aas
pop
not
push
dec
mov
test
gs
in
(bad)
out
addr16
hlt
sbb
add
dec
pop
push
push
lods
xchg
test
gs
movs
add
mov
xchg
adc
inc
mov
adc
stos
mov
and
jo
inc
(bad)
movs
and
cmps
xchg
xor
pusha
sahf
push
lahf
mov
xor
rcl
inc
out
icebp
and
jmp
enter
out
push
aad
call
push
in
mov
loop
(bad)
fs
int3
add
test
fst
fstp
xor
add
sub
xchg
add
adc
cmp
push
lock
pop
and
pop
cmps
popa
daa
xor
xor
push
(bad)
push
outs
les
xor
pop
das
dec
(bad)
jnp
jle
xor
js
inc
aas
pop
not
dec
in
mov
test
pop
in
cmovge
jl
add
xchg
cmp
pop
cmc
fs
push
push
mov
mov
adc
enter
scas
out
cdq
push
mov
call
call
and
jo
inc
mov
iret
fisub
and
push
cmps
mov
xor
loope
cmc
inc
cmc
adc
and
(bad)
scas
mov
push
aam
les
lds
shl
rol
(bad)
in
shl
(bad)
je
and
adc
repnz
rcl
adc
sub
test
outs
xchg
pop
adc
adc
or
and
and
inc
cmps
es
push
mov
loopne
aad
xor
push
(bad)
bound
les
nop
movs
or
lds
das
pusha
(bad)
pop
inc
and
mov
push
sub
mul
push
in
mov
test
dec
in
punpckldq
addr16
hlt
outs
mov
ja
push
pop
dec
push
movs
xchg
xchg
add
push
mov
xchg
test
push
movs
xchg
jne
xchg
xchg
adc
repnz
and
jo
inc
mov
iret
and
cmps
xchg
pusha
mov
xchg
mov
xor
in
xlat
cld
inc
fcom
mov
call
scas
stc
inc
stc
(bad)
fst
hlt
xor
lds
xchg
fidiv
xchg
add
mov
out
je
and
adc
ficomp
jne
push
shl
pop
outs
cmp
sub
adc
adc
ds
aaa
xor
daa
lock
cmp
and
es
aad
xor
sub
push
push
push
les
push
movs
jnp
dec
lds
pusha
mov
jae
push
sub
push
jno
inc
aas
sub
push
dec
in
mov
test
gs
(bad)
out
addr16
outs
mov
push
cmc
pop
pop
imul
lods
push
lea
test
push
ret
adc
inc
xchg
jne
xchg
adc
les
inc
out
movs
mov
es
cmps
mov
push
mov
mov
aam
mov
mov
lds
inc
loop
mov
xor
(bad)
mov
in
fbstp
test
out
out
je
and
adc
ret
lahf
out
xchg
sub
adc
in
add
js
xor
or
sbb
add
push
adc
sub
or
adc
movs
cs
cmp
adc
cmp
add
xor
jno
push
les
movs
imul
mov
aam
add
push
jp
pusha
aas
je
jb
(bad)
in
mov
test
gs
in
(bad)
out
addr16
jo
jl
cmp
cmc
popw
inc
push
mov
lock
mov
iret
xchg
jne
xchg
in
adc
mov
mov
inc
scas
movs
xchg
and
and
push
mov
fild
rcl
shl
xchg
scas
hlt
inc
loope
cli
push
hlt
add
xor
xchg
(bad)
fdiv
int
std
in
gs
fsub
out
je
and
adc
ret
xchg
adc
ror
in
add
and
or
cmp
sbb
adc
sbb
and
cmps
outs
daa
sbb
cmp
add
and
pop
add
les
nop
cmp
push
das
dec
(bad)
pop
inc
and
dec
adc
dec
aad
aas
dec
test
in
mov
test
dec
in
nop
push
addr16
push
mov
dec
cmc
popw
jns
mov
sti
gs
test
add
jne
xchg
sahf
adc
xor
inc
mov
xchg
xchg
cmps
xor
mov
xor
(bad)
xlat
mov
fst
mul
into
scas
cld
inc
(bad)
mov
xor
loope
jmp
mov
xchg
fs
xor
add
cmc
(bad)
out
je
and
jne
lahf
mov
pop
shl
and
outs
sub
xchg
sub
push
cmc
pop
adc
push
mov
aaa
xor
and
add
pop
loopne
aad
xor
cmp
push
dec
les
ja
je
jl
pop
das
push
(bad)
sbb
aam
cmp
push
push
push
aas
jae
jl
dec
in
mov
test
pop
in
packuswb
ja
pmuludq
dec
xchg
pop
jne
cmc
jnp
or
test
(bad)
gs
test
push
mov
fwait
jne
xchg
mov
scas
jmp
and
jo
inc
hlt
movs
test
mov
test
pusha
mov
xor
push
rcl
inc
clc
adc
and
les
mov
xor
cmp
fs
xor
add
aam
std
in
shl
sti
adc
mov
pop
and
add
and
xchg
jo
adc
or
jg
mov
aaa
sub
and
daa
cmps
xor
sbb
adc
xor
add
dec
push
pop
les
xor
push
inc
inc
lds
das
data16
pop
inc
inc
aam
or
push
outs
aad
aas
pop
test
in
mov
test
push
in
pcmpgtb
ins
addr16
dec
mov
push
cmc
inc
pop
jge
leave
xchg
lock
push
xchg
cmps
test
push
xchg
xchg
(bad)
xchg
mov
cmps
(bad)
mov
and
jo
inc
mov
iret
sahf
es
cmps
xchg
xor
pusha
xchg
push
mov
fisttp
inc
aad
lods
and
shr
push
rol
fnstenv
sar
fs
xor
add
aad
loopne
std
out
je
and
adc
rcr
cmp
add
and
test
outs
or
rcr
pop
adc
xor
inc
lock
or
adc
and
inc
mov
loopne
aad
xor
dec
(bad)
dec
push
inc
les
nop
dec
movs
pop
inc
ins
lds
cmp
sbb
aam
and
sbb
jp
add
ja
in
mov
test
jg
jg
addr16
pop
mov
imul
nop
xchg
mov
push
mul
test
push
pop
sahf
jne
xchg
test
xchg
sahf
ss
mov
and
jo
inc
xchg
movs
mov
out
cmps
mov
push
xchg
mov
inc
lock
and
shr
mov
xor
test
repnz
xor
gs
fldenv
out
je
and
adc
scas
lahf
xlat
xchg
or
add
jg
daa
in
add
jp
sbb
and
cmp
adc
cmp
movs
ds
imul
cmps
add
and
xor
or
les
nop
imul
cmova
imul
aad
aas
pop
not
dec
in
mov
test
pop
in
cmovb
push
addr16
jne
jbe
popa
jne
cmc
jns
dec
push
xchg
xchg
add
cli
mov
test
adc
inc
mov
adc
lock
and
jo
inc
mov
test
test
stos
push
test
nop
push
rcl
mov
(bad)
adc
inc
shr
push
mov
mov
push
std
mov
xchg
xchg
in
add
lods
(bad)
into
data16
out
je
and
adc
les
test
ror
test
outs
sub
cmp
push
cmc
sub
cmp
movs
add
xor
movs
cmp
daa
add
xor
es
outs
push
push
les
je
pop
inc
lds
das
inc
(bad)
pop
inc
and
dec
xor
push
sub
test
in
mov
test
ins
in
cmovno
inc
addr16
inc
mov
outs
cmc
cmp
jg
xchg
xchg
scas
add
push
lock
out
xchg
push
rol
jne
xchg
lahf
adc
lahf
mov
and
jo
inc
xchg
movs
fldenv
std
cmps
mov
push
fwait
mov
xor
rcl
inc
repnz
(bad)
scas
in
loope
rcl
xor
sar
xor
add
into
(bad)
fsub
out
je
and
adc
mov
pop
or
and
add
sbb
xor
cmp
or
cmp
sbb
and
push
cmps
das
daa
xor
xor
adc
jg
jae
jnp
xor
adc
jge
jle
push
aam
and
push
push
aad
aas
push
imul
je
jno
inc
test
push
in
cmovp
ja
inc
hlt
adc
add
daa
pop
or
xchg
xchg
inc
push
test
test
sahf
add
movs
xchg
jne
xchg
in
adc
icebp
mov
and
jo
inc
mov
mov
es
cmps
mov
push
stc
mov
xor
xchg
xlat
int
ret
and
(bad)
scas
leave
inc
(bad)
(bad)
repz
fld
stc
xor
loop
hlt
jbe
not
xor
add
test
je
and
adc
loopne
in
movhps
test
add
add
inc
pop
xchg
xor
adc
sbb
xor
adc
outs
and
pop
cmps
adc
pop
mov
loopne
aad
xor
adc
push
push
les
inc
pusha
lds
das
pop
(bad)
jle
pop
aam
cmp
push
push
aad
aas
pop
div
in
mov
test
pop
in
nop
push
addr16
hlt
push
mov
jp
push
pop
or
lahf
xchg
xchg
push
scas
gs
fwait
add
rol
jne
xchg
xchg
adc
pushf
mov
and
jo
inc
pushf
movs
stos
and
std
cmps
ret
xor
pusha
adc
into
xor
repnz
mov
mov
inc
iret
(bad)
mov
xor
cwde
mov
xchg
fs
xor
add
in
loopne
loopne
lds
cdq
adc
rcr
test
and
test
pop
or
push
sar
add
sub
ss
and
add
xor
(bad)
sbb
adc
es
loopne
aad
xor
sub
pusha
push
push
les
inc
movs
push
inc
xor
push
das
outs
(bad)
je
outs
aam
and
push
jg
add
ja
in
mov
test
gs
in
cmovs
outs
addr16
hlt
inc
mov
inc
cmc
pusha
pop
dec
push
xchg
xchg
stos
add
push
xchg
mov
mov
adc
inc
mov
sahf
xchg
mov
mov
scas
inc
jmp
iret
(bad)
es
pusha
stos
push
sahf
mov
xor
enter
ficom
jmp
scas
stc
inc
out
mov
xor
xchg
shl
add
in
cwde
data16
shl
adc
hlt
lahf
retf
xchg
add
je
add
and
sbb
or
add
adc
sub
or
push
movs
add
and
xor
add
dec
loopne
aad
xor
pop
(bad)
push
push
push
les
nop
ins
movs
dec
inc
dec
lds
dec
(bad)
jnp
cmp
mov
push
js
jnp
jle
dec
ja
in
mov
test
sbb
ins
nop
pop
addr16
pop
mov
jo
jbe
adc
adc
xchg
xchg
push
rol
jne
xchg
in
adc
repnz
and
jo
inc
xchg
movs
mov
call
cmps
fnsave
pusha
xchg
mov
xor
call
adc
inc
fisubr
loopne
iret
add
xor
(bad)
mov
cmc
fs
xchg
add
mov
fbld
out
je
and
adc
mov
pop
pop
test
or
test
outs
cmp
aaa
shl
or
sub
push
lock
lds
and
cmps
cmp
cmp
aad
xor
adc
ins
push
jo
and
inc
lds
das
cmp
pop
inc
popa
aam
xor
push
push
aad
aas
dec
idiv
ja
in
mov
test
fs
cmove
jns
je
sbb
jne
cmc
inc
pop
jle
mov
xchg
add
push
xchg
gs
push
mov
inc
test
xchg
mov
ss
mov
and
jo
inc
lods
movs
mov
cmps
iret
fbld
popf
cmps
lods
xor
pusha
mov
fwait
mov
xor
in
xlat
cld
inc
(bad)
adc
and
out
scas
in
int3
(bad)
cmps
push
out
fdiv
stc
mov
iret
shl
clc
add
mov
out
je
and
adc
mov
pop
sub
add
sub
sub
adc
cmp
pop
xchg
ds
mov
aaa
adc
lds
and
and
das
loopne
aad
xor
or
imul
movs
dec
inc
inc
lds
jne
inc
inc
arpl
je
addr16
push
cs
aas
dec
test
sbb
inc
in
nop
pop
addr16
mov
push
cmc
inc
pop
dec
push
xchg
xchg
mov
gs
test
push
mov
inc
std
jne
xchg
cwde
adc
xchg
mov
and
jo
inc
stos
movs
mov
stc
cmps
(bad)
xor
pusha
adc
mov
push
jmp
loope
cmc
adc
and
in
mov
push
lock
push
fdivr
mov
leave
add
lock
data16
out
je
and
adc
neg
and
cmp
sub
test
outs
cmp
adc
add
adc
ins
mov
aaa
das
movs
xor
adc
sbb
pop
movs
push
dec
and
add
inc
aad
xor
or
adc
les
dec
movs
jnp
lds
ins
(bad)
jge
jo
je
pop
mov
push
dec
aad
aas
inc
test
in
mov
test
addr16
unpckhps
jo
jnp
inc
mov
push
push
rcl
nop
gs
out
fwait
push
pushf
xchg
adc
inc
mov
adc
xchg
mov
and
jo
inc
stos
movs
and
cmps
mov
mov
mov
xor
rcl
in
int
jmp
scas
out
inc
fld
mov
xor
lock
mov
nop
add
mov
out
je
and
adc
jecxz
iret
xchg
push
pop
add
add
sub
push
shl
jg
mov
aaa
adc
and
sub
sbb
xor
sub
push
push
inc
les
dec
movs
outs
inc
outs
lds
dec
(bad)
gs
inc
aam
sub
pusha
push
pop
aad
aas
js
ss
in
mov
test
push
in
subps
push
addr16
hlt
inc
mov
or
bound
adc
rcl
icebp
gs
cmps
add
ret
adc
inc
movs
jne
xchg
xchg
adc
nop
mov
and
jo
inc
call
es
cmps
test
pusha
mov
xor
jmp
and
shr
repnz
out
cld
xor
out
mov
in
(bad)
xor
add
fisttp
(bad)
je
and
adc
hlt
lahf
sti
xchg
xor
add
add
and
or
adc
imul
ds
das
cmps
adc
and
xor
sbb
jg
je
es
outs
movs
outs
inc
inc
lds
dec
(bad)
push
inc
fs
cmp
push
ja
je
push
imul
ins
in
mov
test
in
movd
gs
hlt
arpl
dec
cmc
jno
pop
push
mov
xchg
gs
test
push
xchg
xchg
jne
xchg
mov
lods
mov
and
jo
inc
cwde
movs
and
mov
mov
xor
rcl
rol
and
xchg
scas
inc
(bad)
aad
fiadd
out
loopne
retf
push
xchg
lock
lds
mov
clc
cmps
out
je
and
adc
loop
iret
xchg
and
and
in
add
and
sub
adc
sub
inc
lock
movs
push
dec
push
cmps
adc
lfs
cmp
or
xor
pop
push
dec
les
dec
movs
push
das
(bad)
mov
jb
push
and
aas
jb
inc
ja
in
mov
test
pop
in
andnps
jle
addr16
jne
push
xchg
dec
jne
cmc
addr16
dec
push
lods
xchg
mov
push
mov
mov
mov
mov
loope
icebp
inc
mov
adc
mov
lods
and
jo
inc
mov
mov
movs
cmps
mov
xchg
push
test
fist
inc
cmc
adc
and
hlt
scas
jmp
push
fadd
div
test
nop
fs
xor
add
mov
out
je
and
jne
lahf
mov
ror
test
outs
cmp
xchg
jo
xor
ss
fs
aaa
push
movs
adc
sbb
cmp
dec
and
push
loopne
aad
xor
es
jo
push
les
nop
pop
movs
push
inc
push
fs
je
ins
inc
pop
aam
sub
push
pop
aad
aas
test
pop
mov
test
dec
in
(bad)
out
addr16
hlt
adc
inc
cmc
jnp
jno
stos
xchg
xchg
add
push
mov
lods
test
push
pop
jmp
(bad)
out
ss
jo
inc
xchg
mov
xor
pusha
test
mov
xor
retf
xlat
enter
jmp
mov
mov
ret
inc
ffree
mov
xor
fstp
fbld
rol
(bad)
sti
data16
out
je
and
adc
aad
aad
add
aas
test
ror
in
add
add
jl
ds
add
push
mov
aaa
das
movs
push
lock
xor
sbb
cmps
gs
inc
mov
loopne
aad
xor
(bad)
dec
push
aas
les
xor
push
das
jp
pop
inc
and
cmp
fs
push
outs
aad
aas
ins
div
ja
in
mov
test
inc
in
packsswb
jns
pop
hlt
push
mov
or
push
adc
gs
test
push
fld
xor
mov
(bad)
mov
and
jo
inc
xchg
movs
mov
movs
cmps
mov
pusha
mov
mov
fistp
inc
in
adc
and
xchg
scas
iret
inc
iret
(bad)
ficom
repz
repnz
out
fs
xor
gs
fwait
data16
out
je
and
adc
fcomp
or
add
add
or
and
and
or
add
push
lds
adc
xor
add
xor
or
jne
popa
les
nop
movs
outs
inc
jno
ins
das
xor
pop
inc
outs
aam
and
inc
push
jns
inc
aas
push
div
inc
in
mov
test
inc
in
(bad)
out
addr16
hlt
outs
mov
push
cmc
dec
pop
push
push
int
mov
xchg
push
mov
add
mov
xor
call
mov
and
jo
inc
mov
ret
xchg
stos
push
test
(bad)
push
(bad)
xlat
out
inc
fst
mov
call
scas
cld
inc
(bad)
(bad)
mov
xor
stc
mov
lea
les
ror
hlt
je
and
adc
cli
lahf
mov
cmp
ins
in
add
and
or
xor
xchg
aas
jg
mov
aaa
add
and
cmp
mov
loopne
aad
xor
sub
jno
xor
movs
jge
outs
lds
dec
(bad)
fs
and
mov
push
push
aad
aas
jo
push
ja
in
mov
test
jae
sub
addr16
addr16
hlt
adc
js
jge
dec
push
xchg
xchg
xchg
add
push
(bad)
movs
test
push
lahf
xchg
jne
xchg
jmp
ss
jo
inc
xchg
movs
pushf
and
mov
xor
fst
mov
xor
call
cld
inc
fcom
mul
call
(bad)
not
shl
in
div
imul
fs
xor
add
icebp
(bad)
int
fsub
push
not
rcr
xor
add
sbb
adc
cmp
adc
push
mov
aaa
pop
movs
pop
lock
imul
cmps
cmp
loopne
aad
xor
and
adc
les
xor
outs
das
push
jne
push
aam
adc
push
pop
aad
aas
not
inc
in
mov
test
gs
in
orps
jp
jp
data16
jno
outs
pop
jne
adc
pop
mov
mov
jne
xchg
pushf
adc
repnz
and
jo
inc
mov
fisub
sahf
cmps
mov
push
xor
call
and
jmp
push
lock
xor
cwde
mov
int
shl
add
in
(bad)
out
mov
and
adc
ficomp
adc
add
xor
xchg
and
add
or
aas
mov
aaa
sub
and
inc
cmps
(bad)
pop
mov
loopne
aad
xor
adc
pop
push
inc
les
movs
or
lds
das
push
(bad)
jno
jl
dec
cmp
jae
add
inc
not
jb
jp
push
test
in
cmovg
inc
addr16
hlt
dec
mov
jle
and
dec
push
adc
mov
mov
adc
inc
mov
adc
mov
jo
inc
sahf
movs
mov
es
cmps
xor
mov
xor
nop
xlat
in
rcl
mov
inc
loop
aad
xlat
(bad)
mov
xor
xchg
aam
(bad)
xor
add
jmp
je
and
adc
jecxz
out
adc
or
add
jle
and
shr
adc
cs
aaa
push
movs
xor
sbb
ds
cmp
push
loopne
aad
xor
sub
imul
movs
dec
inc
ins
lds
imul
inc
inc
aam
add
push
pop
aad
aas
push
push
ja
in
mov
test
ins
in
sysret
out
addr16
sbb
jne
cmc
inc
pop
or
lods
xchg
stos
add
push
icebp
gs
test
push
movs
xchg
jne
xchg
nop
adc
push
xchg
inc
xchg
movs
mov
xchg
cmps
mov
push
xor
repnz
mov
(bad)
shr
push
xlat
add
xor
cmp
fs
xor
add
cmc
(bad)
loop
(bad)
out
je
and
adc
movs
lahf
fst
sbb
and
push
add
cmp
xor
adc
xor
jne
adc
and
sub
mov
loopne
aad
xor
adc
les
inc
movs
ins
inc
dec
lds
gs
addr16
and
xor
push
aad
aas
jno
dec
ja
in
mov
test
jp
outs
punpcklwd
pop
addr16
hlt
inc
mov
outs
cmc
jl
jns
mov
push
nop
gs
test
add
mov
jne
xchg
in
adc
mov
shl
jo
inc
xchg
movs
mov
xchg
cmps
sahf
xor
pusha
mov
mov
fbstp
inc
fst
shl
iret
scas
jmp
push
in
add
xor
fnstsw
xchg
fs
add
retf
data16
and
adc
call
jae
jg
add
add
outs
and
xchg
and
add
and
jg
mov
aaa
sub
and
push
cmps
data16
xor
or
push
aad
xor
pop
(bad)
jo
aaa
les
movs
push
inc
imul
jae
das
aam
sub
add
outs
aad
aas
ja
gs
in
mov
test
sbb
imul
push
hlt
jbe
or
ins
pop
outs
push
adc
mov
sub
scas
adc
inc
stc
jne
xchg
cwde
adc
mov
fbld
jo
inc
cmps
movs
movs
and
and
enter
mov
inc
cmps
adc
and
shr
fst
mov
push
out
stc
jbe
not
add
(bad)
(bad)
loope
in
ret
and
adc
call
adc
add
jbe
push
rcr
cs
mov
aaa
push
movs
es
aaa
and
or
or
sub
sub
aas
(bad)
adc
les
movs
dec
inc
dec
lds
arpl
dec
inc
cmp
mov
push
push
aad
aas
push
jg
dec
in
mov
test
inc
in
mulps
pop
addr16
dec
mov
dec
cmc
inc
pop
push
push
aad
stos
add
push
stos
pop
cld
push
xchg
xchg
jne
xchg
xchg
adc
mov
xchg
and
jo
inc
xchg
movs
mov
mov
(bad)
test
ret
mov
xor
jmp
and
lahf
scas
cld
inc
sti
xbegin
xor
cmp
fs
xor
add
fisttp
clc
je
and
adc
ret
lahf
clc
xchg
adc
add
sar
in
add
add
pop
rol
jg
mov
aaa
shld
or
cmps
daa
daa
pop
mov
loopne
aad
xor
or
push
push
outs
les
nop
xor
adc
jnp
jae
ins
aam
cmp
jno
push
aas
push
idiv
je
dec
mov
test
inc
in
pcmpgtb
jg
push
hlt
pop
mov
jl
js
imul
xchg
mov
gs
push
mov
stos
jne
xchg
mov
mov
test
and
jo
inc
lods
movs
mov
es
mov
fsub
push
test
int3
push
xchg
xlat
inc
out
and
jmp
(bad)
fcom
shl
mov
into
fs
in
add
ror
push
fst
ficomp
push
test
shl
or
xchg
and
adc
push
imul
sub
adc
push
cmps
sbb
das
mov
loopne
aad
xor
push
(bad)
gs
sub
movs
push
inc
pop
lds
push
popa
inc
inc
aam
cmp
push
ja
inc
aas
outs
div
ja
in
mov
test
in
(bad)
out
addr16
hlt
adc
adc
and
jne
(bad)
xchg
pop
push
mov
retf
test
push
les
in
lods
xchg
jmp
ss
mov
movs
mov
es
cmps
lds
pusha
nop
push
cmps
mov
xor
nop
xlat
loopne
(bad)
adc
inc
xchg
scas
mov
push
out
enter
rcl
mov
nop
fs
xor
add
out
lds
out
je
and
adc
ret
lahf
out
adc
sub
add
cmp
xchg
add
xor
cmp
adc
cmp
cmp
or
xor
sbb
cmp
xor
inc
(bad)
addr16
jg
and
jae
jge
jbe
jp
push
aam
and
pop
push
ins
aad
aas
dec
imul
inc
in
mov
test
inc
in
andps
inc
addr16
hlt
inc
mov
push
cmc
dec
pop
add
lea
test
test
push
xchg
mov
xchg
mov
xchg
mov
and
jo
inc
mov
iret
cdq
movs
cmps
shl
retf
push
mov
fild
in
hlt
and
repnz
clc
inc
out
(bad)
mov
xor
(bad)
mov
call
add
mov
xchg
out
je
and
adc
sti
lahf
int
push
pop
xor
add
sbb
and
sub
cs
ins
mov
aaa
push
movs
push
lock
cs
sbb
push
loopne
aad
xor
or
outs
push
les
xor
dec
das
imul
ins
cmp
pop
push
xor
ins
aas
pop
idiv
push
in
mov
test
pop
in
punpckhbw
push
addr16
hlt
inc
mov
jb
inc
pop
jg
adc
mov
push
add
jne
xchg
mov
ss
mov
and
jo
inc
mov
iret
and
cmps
xchg
xor
pusha
lds
mov
xor
call
adc
and
(bad)
scas
inc
(bad)
xlat
push
scas
add
xor
out
mov
in
in
les
les
mov
adc
lahf
xchg
xchg
sub
adc
push
shl
in
add
add
and
adc
cs
aaa
sub
sbb
sub
xor
push
cmps
adc
xor
xor
(bad)
push
push
pop
les
nop
popa
movs
dec
inc
and
jle
pusha
(bad)
push
inc
push
aam
or
push
dec
aad
aas
pop
not
outs
in
mov
test
gs
in
cmovnp
push
addr16
push
pop
xchg
pop
jne
cmc
dec
pop
jle
xchg
xchg
sahf
add
push
xchg
mov
add
mov
mov
adc
xor
inc
mov
call
cmps
mov
push
push
xchg
push
xchg
xlat
fild
(bad)
and
jecxz
jecxz
iret
(bad)
fcom
shl
repz
xchg
fs
xor
gs
retf
out
je
and
jne
lahf
mov
and
or
cmp
sub
sub
(bad)
cmc
sub
xor
cmp
sub
adc
push
cmps
sbb
sbb
xor
cmp
adc
les
xor
lds
jle
inc
inc
cs
sbb
push
sub
push
aas
push
dec
ja
in
mov
test
inc
in
mulps
popa
addr16
inc
mov
or
inc
pop
ins
push
mov
test
gs
pushf
add
add
jne
xchg
lea
mov
jo
inc
mov
cwde
es
shl
mov
xor
loop
rol
aam
nop
lds
inc
out
out
push
mov
(bad)
sar
fidiv
fild
loope
out
data16
aad
loope
out
mov
lahf
repz
push
pop
pop
test
shl
in
add
je
xor
rcr
and
add
movs
pop
lock
cmp
dec
xor
mov
loopne
aad
xor
or
les
dec
movs
jp
dec
lds
inc
(bad)
jle
pop
aam
cmp
push
sub
jg
div
ja
in
mov
test
gs
jne
jl
inc
addr16
hlt
dec
mov
inc
cmc
and
push
push
xchg
stos
gs
test
push
mov
movs
adc
inc
out
test
movs
mov
mov
movs
mov
mov
cmps
iret
xor
pusha
movs
push
loopne
iret
xor
cmc
xlat
call
and
lock
out
inc
iret
(bad)
(bad)
push
loop
loop
out
fcom
mov
xchg
fs
xor
add
mov
out
cmps
out
je
and
adc
fcomp
sub
add
xchg
pop
adc
adc
sub
cs
lds
sub
cmps
adc
cmp
xor
inc
(bad)
dec
push
dec
les
js
jbe
cmp
or
outs
(bad)
jns
pop
aam
sbb
push
sub
sbb
outs
div
jb
jo
inc
test
jae
inc
movq
pop
addr16
mov
pop
cmc
push
pop
push
push
mov
mov
add
mov
stc
adc
inc
stos
jne
xchg
mov
ss
jo
inc
scas
movs
frstor
mov
pusha
mov
xor
(bad)
xlat
hlt
inc
sti
adc
and
mov
scas
push
rol
std
xor
icebp
mov
jecxz
cmc
xor
add
out
(bad)
out
je
and
adc
stc
lahf
out
or
das
test
and
inc
add
push
xchg
shl
jg
mov
aaa
pop
movs
inc
lock
or
add
sbb
pop
mov
loopne
aad
xor
pop
(bad)
push
push
les
nop
movs
dec
inc
xor
pop
das
jnp
pop
inc
push
aam
and
push
push
aad
aas
push
test
in
mov
test
gs
ins
cmovae
je
jl
inc
mov
ins
cmc
pop
pop
jno
mov
icebp
add
push
mov
into
test
push
mov
xchg
jne
xchg
in
adc
mov
cmps
and
jo
inc
out
movs
scas
and
xchg
cmps
mov
mov
mov
mov
xor
not
mov
(bad)
adc
and
xchg
scas
inc
(bad)
rcl
cld
xor
sar
retf
fs
xor
add
cmc
(bad)
out
je
and
adc
(bad)
lahf
retf
xchg
or
jbe
adc
xor
test
outs
cmp
jl
push
cmc
pop
adc
or
cmp
xor
and
pop
cmps
xor
inc
mov
loopne
aad
xor
cmp
dec
push
push
les
outs
movs
outs
inc
jb
pop
das
arpl
add
aam
cmp
push
arpl
jne
pop
imul
mov
test
dec
in
punpckhbw
inc
addr16
push
mov
push
cmc
inc
pop
add
add
push
xchg
gs
test
push
mov
inc
mov
adc
scas
mov
and
jo
inc
mov
mov
xchg
mov
xor
aad
loopne
jecxz
out
and
sahf
scas
clc
inc
lock
std
push
int3
add
xor
(bad)
mov
int
fnsave
repnz
in
(bad)
out
data16
shl
(bad)
adc
out
xlat
xchg
add
aaa
test
shl
dec
add
xchg
pop
daa
xchg
aaa
sar
or
cs
aaa
sub
cmp
sbb
sub
pop
cmps
xor
loopne
aad
xor
pop
(bad)
jo
dec
les
push
movs
push
inc
jno
push
das
inc
(bad)
pop
inc
push
aam
add
push
pop
aad
aas
xor
pusha
ja
in
mov
test
gs
push
pcmpeqb
jb
pop
hlt
jle
push
xchg
jbe
jno
dec
pop
pop
push
mov
xchg
add
push
scas
gs
test
push
test
mov
(bad)
xchg
call
ss
mov
and
jo
inc
xchg
movs
(bad)
and
jecxz
mov
push
div
lods
push
out
xlat
jmp
lds
inc
clc
(bad)
out
push
ret
add
push
mov
les
test
(bad)
jmp
(bad)
loope
popf
and
adc
fstp
add
sbb
xor
cmp
outs
sub
add
sbb
xchg
xor
mov
aaa
sub
and
cmp
cs
aad
xor
sub
jl
dec
les
nop
inc
movs
jbe
push
lds
das
js
je
dec
aam
add
push
aad
aas
pop
test
in
mov
test
jp
inc
movq
addr16
hlt
inc
mov
push
cmc
inc
pop
dec
push
mov
mov
test
add
mov
inc
mov
adc
xchg
mov
and
jo
inc
scas
movs
cwde
and
mov
mov
push
mov
mov
mov
leave
inc
rcl
mov
sti
lds
inc
fcmovb
lock
in
(bad)
fnstcw
loopne
xor
add
xlat
(bad)
clc
iretw
out
je
and
adc
fstp
push
test
add
sbb
je
push
cmc
add
adc
ds
cmp
dec
and
pop
loopne
aad
xor
inc
(bad)
gs
sub
pop
nop
dec
movs
jae
jle
dec
das
outs
mov
inc
aam
sub
push
dec
aad
aas
dec
mul
arpl
ins
mov
test
gs
in
cvtdq2ps
jnp
push
hlt
push
mov
push
cmc
jne
jnp
test
xchg
add
push
xchg
test
push
mov
mov
mov
xchg
jmp
mov
mov
out
xchg
and
xchg
cwde
push
test
fild
inc
rcl
fisub
ret
scas
mov
push
loopne
jecxz
ret
aad
push
cmp
test
rol
lock
data16
out
je
and
adc
hlt
lahf
leave
xchg
or
je
add
and
or
push
xchg
addr16
jne
cmp
pop
adc
cs
aaa
and
lds
and
cmps
xor
sbb
xor
adc
dec
push
ins
les
pop
movs
inc
inc
xor
or
inc
mov
jp
xor
push
aad
aas
jno
outs
ja
in
mov
test
add
addr16
hlt
arpl
jge
addr16
jae
adc
mov
into
xchg
test
mov
call
and
jo
inc
lea
mov
scas
cmps
iret
xor
pusha
cmps
push
xchg
mov
xor
not
mov
rcl
repnz
xchg
scas
cli
inc
hlt
(bad)
repnz
rol
xor
cld
mov
shl
add
cmc
(bad)
data16
fidiv
retf
cmc
div
lahf
out
sub
adc
add
or
jno
or
push
adc
xor
movs
pop
lock
push
and
pop
cmps
ds
adc
xor
sub
les
movs
push
inc
jns
arpl
pop
mov
aam
add
push
dec
aad
aas
inc
imul
mov
test
gs
in
nop
and
dec
hlt
ja
inc
xchg
data16
cmc
jge
add
mov
xchg
gs
push
rol
jne
xchg
mov
scas
inc
and
jo
inc
mov
cwde
mov
pusha
fst
mov
xor
(bad)
xlat
rol
and
icebp
scas
jmp
push
out
add
push
ret
jbe
test
add
ret
data16
out
je
and
adc
(bad)
lahf
repz
or
test
in
add
sbb
add
sbb
adc
sbb
inc
lock
xor
pop
cmps
sbb
inc
mov
loopne
aad
xor
dec
(bad)
jb
xor
pop
nop
cmp
gs
pop
(bad)
dec
inc
and
push
adc
push
pop
aad
aas
sub
addr16
in
mov
test
adc
ins
nop
pop
addr16
hlt
inc
mov
or
inc
pop
inc
push
mov
xchg
add
push
test
nop
test
mov
inc
cmps
jne
xchg
call
mov
and
jo
inc
mov
iret
popf
xchg
adc
xor
loope
shl
scas
in
ret
push
rol
(bad)
xor
into
mov
mov
rol
lock
loopne
shl
test
rcl
lahf
iret
xchg
aas
pop
and
add
add
das
xchg
shl
adc
es
aaa
adc
and
sub
and
and
es
dec
(bad)
pop
push
dec
les
popa
movs
ins
inc
dec
lds
inc
mov
jg
push
cmp
push
aad
aas
push
test
in
mov
test
in
(bad)
out
outs
hlt
ins
mov
or
push
mov
push
cmps
lods
test
push
scas
xchg
adc
inc
jecxz
mov
mov
mov
pushf
and
jo
inc
mov
iret
xchg
mov
pusha
stos
push
mov
fistp
inc
cmps
adc
inc
(bad)
scas
fiadd
(bad)
out
inc
std
xor
aam
fidiv
test
add
enter
(bad)
out
je
and
jne
lahf
iret
xchg
adc
sub
add
cmp
add
sbb
push
adc
imul
lock
lds
dec
and
adc
cs
loopne
aad
xor
or
push
push
push
les
movs
or
lds
xor
sbb
aam
and
addr16
jnp
ss
in
mov
test
add
xor
push
hlt
adc
push
cmc
jg
dec
push
mov
jmp
add
test
mov
adc
mov
xchg
and
jo
inc
(bad)
movs
pushf
and
mov
pusha
test
push
cdq
push
xchg
xlat
jmp
(bad)
out
scas
fld
(bad)
cld
push
mov
cli
xor
cmp
fdiv
sti
add
loopne
pushf
mov
and
adc
rcr
test
shl
add
cmp
cmp
ds
jge
push
sbb
jg
mov
aaa
pop
movs
sbb
and
xor
pop
cmps
push
daa
or
pop
loopne
aad
xor
sbb
les
movs
or
lds
push
(bad)
push
inc
jb
inc
and
aas
pop
neg
dec
in
mov
test
inc
in
maxps
fs
hlt
push
jne
cmc
jg
or
add
push
cmps
gs
test
push
sahf
xchg
jne
xchg
stos
adc
mov
cwde
inc
jmp
iret
frstor
stc
cmps
ret
pusha
movs
push
mov
call
adc
and
iret
scas
fiadd
(bad)
stc
push
loop
fidiv
cmp
fidiv
in
mul
shl
(bad)
cli
data16
out
je
and
jne
lahf
jmp
test
ror
in
add
and
or
jge
add
add
movs
inc
lock
lds
and
push
cmps
adc
or
push
loopne
aad
xor
cmp
dec
push
les
js
pop
inc
jp
adc
inc
dec
aam
sbb
inc
aad
aas
pop
test
in
mov
test
pop
in
cmovbe
gs
hlt
sbb
sbb
cmc
cmp
fs
lahf
xchg
pop
push
mov
test
push
fld
mov
adc
scas
mov
and
jo
inc
test
mov
es
cmps
movs
xor
pusha
mov
mov
(bad)
push
xchg
xlat
repnz
icebp
adc
and
enter
hlt
(bad)
scas
push
out
push
fdivr
jmp
enter
loope
test
cdq
adc
ret
xchg
sub
xor
in
add
and
xchg
je
or
push
adc
sub
dec
lock
lds
sbb
sbb
adc
pavgb
cmp
es
jl
jo
jg
push
movs
js
and
bound
dec
(bad)
push
inc
pop
aam
cmp
push
jl
pop
aas
jo
inc
ja
in
mov
test
jl
push
punpckldq
push
addr16
push
mov
adc
pop
pop
dec
push
test
push
jmp
add
ret
adc
inc
mov
xchg
mov
div
mov
and
xchg
cmps
mov
push
xor
push
repz
retf
inc
(bad)
adc
and
repnz
fild
(bad)
cmps
push
jmp
push
sti
mov
in
xchg
out
add
retf
vphaddbq
lds
fist
ficomp
pop
test
rol
in
add
daa
xchg
and
adc
sbb
movs
sbb
and
cmp
sub
xor
cmp
dec
push
les
movs
dec
inc
inc
lds
pop
mov
dec
aam
cmp
jl
sub
push
aas
pop
imul
pop
in
mov
test
push
in
pcmpgtb
pop
addr16
hlt
ja
jg
jge
dec
cmc
jp
jp
movs
xchg
mov
push
mov
test
push
call
jne
xchg
mov
mov
mov
cmps
mov
and
jo
inc
sahf
movs
sahf
and
xchg
cmps
xchg
pusha
mov
xor
xchg
xlat
hlt
inc
fist
mov
enter
xchg
scas
mov
push
jmp
push
cwde
mov
out
fs
xor
add
call
out
je
and
adc
ficomp
ja
sbb
ja
dec
add
js
cmp
cs
daa
sar
adc
sbb
pop
lock
lds
and
sbb
push
loopne
aad
xor
das
(bad)
jne
sub
pusha
nop
dec
movs
ins
inc
push
lds
das
dec
(bad)
push
inc
push
aam
xor
sub
(bad)
imul
inc
mov
test
outs
in
unpckhps
outs
addr16
arpl
pop
cmc
push
pop
dec
push
scas
xchg
lods
add
push
in
gs
xchg
mov
inc
cmps
jne
xchg
loop
xchg
in
push
mov
movs
cdq
and
stc
cmps
mov
push
xchg
mov
xor
call
adc
and
jmp
push
mov
aad
push
sar
mul
xchg
add
out
fisub
out
je
and
adc
fstp
adc
add
arpl
rcr
push
jg
mov
aaa
adc
add
and
inc
cmps
sbb
loopne
aad
xor
inc
(bad)
push
push
ins
les
movs
imul
imul
inc
aam
cmp
push
inc
aad
aas
dec
mul
(bad)
in
mov
test
push
in
nop
dec
addr16
hlt
push
mov
pop
cmc
jbe
pop
push
leave
xchg
mov
sahf
push
mov
scas
test
push
mov
inc
stos
jne
xchg
lods
adc
mov
jo
inc
mov
stos
es
pusha
mov
popf
mov
xor
xchg
xlat
mov
and
mov
loope
in
add
xor
cmp
fnsave
nop
add
jecxz
int
fsub
les
fcom
repz
stc
xchg
sub
jbe
adc
add
xor
outs
js
and
and
adc
push
sub
adc
and
sbb
and
or
and
dec
(bad)
dec
push
(bad)
les
push
movs
cmovne
jg
push
mov
arpl
imul
jno
jo
pop
in
mov
test
in
punpckhbw
bound
hlt
dec
mov
jg
inc
pop
ins
push
movs
xchg
mov
pop
xchg
push
mov
jne
xchg
jmp
mov
and
jo
inc
in
movs
les
in
mov
push
mov
fist
inc
ficom
mov
mov
movs
inc
(bad)
rcl
out
cli
aad
push
int
aam
lods
neg
fs
xor
add
les
hlt
je
and
adc
icebp
lahf
out
adc
sub
add
adc
xchg
add
add
sbb
adc
add
xor
je
and
cmp
inc
mov
loopne
aad
xor
dec
(bad)
inc
push
outs
les
dec
movs
dec
inc
cmp
push
das
xor
jg
pop
aam
and
inc
aas
dec
test
in
mov
test
sbb
out
addr16
arpl
push
push
xchg
xchg
mov
gs
test
push
rol
jne
xchg
jmp
mov
and
jo
inc
xchg
movs
cwde
and
test
test
clc
mov
xor
leave
xlat
test
and
xlat
scas
cli
inc
out
loope
ret
xor
(bad)
mov
in
fidiv
call
(bad)
(bad)
mov
je
and
adc
sti
lahf
call
xor
cmp
xor
add
das
rcr
and
and
pop
aaa
or
and
sbb
xor
push
aad
xor
push
(bad)
dec
push
pop
les
push
pop
inc
jb
adc
pop
mov
je
jle
and
inc
aas
pop
imul
mov
test
in
packsswb
dec
addr16
or
push
cmc
inc
pop
push
push
stos
xchg
test
movs
add
fld
xchg
xchg
jmp
ss
lods
and
jo
inc
movs
movs
fsub
xchg
cmps
pushf
xor
pusha
mov
xor
rcl
inc
jecxz
aam
mov
fild
scas
out
rol
mov
xor
sar
shl
rol
repz
std
data16
and
adc
les
adc
add
or
xadd
pop
adc
adc
je
and
lds
and
xor
bound
adc
aad
xor
dec
(bad)
outs
push
push
les
imul
das
inc
(bad)
jns
ins
aam
and
sbb
jne
inc
ja
in
mov
test
add
ja
inc
out
addr16
imul
cmc
outs
pop
jge
xchg
xchg
nop
add
push
lods
gs
call
xchg
jne
xchg
mov
mov
jo
inc
mov
mov
and
push
xchg
cdq
push
not
int3
inc
cld
adc
and
fisubr
aam
scas
add
xor
idiv
shl
les
ror
fbstp
enter
shl
lahf
stc
xchg
ds
or
add
cmp
adc
adc
xor
jbe
pop
movs
adc
add
(bad)
add
push
daa
xor
xor
xor
dec
push
push
les
inc
jnp
push
das
data16
addr16
and
ja
arpl
jns
jne
pop
ja
in
mov
test
gs
movq
popa
addr16
jne
xchg
fs
cmc
dec
pop
outs
push
xchg
xchg
icebp
add
push
lods
gs
cdq
add
xchg
mov
adc
mov
jo
inc
xchg
and
cmps
pushf
xor
pusha
cwde
push
xchg
mov
xor
xchg
xlat
leave
inc
lock
and
aad
les
(bad)
hlt
push
out
add
push
fnstcw
fsub
enter
(bad)
ror
shl
fist
int
call
test
jb
xor
cmp
jbe
cmp
ss
aaa
mov
aaa
adc
and
push
cmps
aas
daa
pop
mov
loopne
aad
xor
aas
(bad)
adc
jno
dec
nop
push
push
inc
dec
lds
das
jge
add
pop
aam
and
push
push
xor
inc
aas
push
in
mov
test
dec
in
movq
jo
jl
inc
mov
push
cmc
jbe
push
push
aam
mov
push
sti
gs
out
pushf
push
mov
stc
adc
inc
jmp
(bad)
mov
and
jo
inc
hlt
movs
mov
mov
cmps
xchg
xor
pusha
xchg
mov
xor
iret
xlat
les
test
inc
shr
rcl
fidiv
sar
nop
fbstp
in
add
hlt
(bad)
fldenv
out
je
and
jne
lahf
out
xchg
add
or
add
jg
xor
and
adc
push
mov
aaa
sub
and
pop
cmps
adc
adc
xor
xor
push
push
(bad)
les
jo
pop
inc
pop
lds
push
mov
outs
aam
cmp
push
pop
aad
aas
pop
imul
popa
in
mov
test
ins
in
punpckhbw
outs
hlt
push
mov
je
dec
pop
push
push
adc
gs
test
push
mov
adc
xchg
jne
xchg
mov
repnz
and
jo
inc
xchg
mov
and
push
cdq
mov
xor
loopne
mov
fist
repz
jecxz
mov
push
int3
add
push
lds
xchg
push
fwait
add
lods
(bad)
out
je
and
adc
(bad)
lahf
enter
xor
add
xchg
pop
and
adc
push
mov
aaa
and
and
add
cmp
xor
inc
(bad)
adc
les
movs
cmovne
lds
pop
mov
es
sbb
push
js
dec
aas
pop
neg
jbe
addr16
test
pop
in
sysret
out
outs
hlt
jae
fs
and
cmc
jnp
jb
xchg
xchg
nop
add
push
hlt
gs
test
push
mov
inc
mov
adc
(bad)
mov
and
jo
inc
xchg
mov
xor
pusha
test
mov
xor
hlt
xlat
jecxz
(bad)
adc
and
call
(bad)
sti
push
repz
xor
(bad)
mov
in
fs
xor
add
loope
jmp
out
je
and
adc
mov
pop
sub
sbb
add
xchg
xor
xor
addr16
sub
sub
xor
and
adc
mov
loopne
aad
xor
cmp
fs
dec
les
movs
adc
push
lds
gs
jb
push
aam
xor
push
push
aad
aas
ins
div
ja
in
mov
test
in
cmovbe
jb
add
xchg
ss
cmc
push
pop
add
movs
xchg
scas
add
push
xchg
gs
mov
push
lods
xchg
mov
fwait
ss
shl
jo
inc
mov
cmps
and
xchg
cmps
mov
test
mov
xor
retf
inc
rcl
loopne
fld
loop
nop
scas
fild
(bad)
mov
xor
hlt
mov
lds
jecxz
cmc
in
gs
(bad)
out
je
and
adc
mov
pop
imul
outs
jge
inc
pop
cs
shl
sub
cmp
cmp
pextrw
xor
daa
movs
or
cmps
push
daa
pop
mov
loopne
aad
xor
sub
jbe
inc
les
nop
movs
jnp
pop
lds
mov
pop
aam
adc
push
sub
add
and
in
mov
test
jnp
imul
pusha
hlt
pop
mov
push
cmc
jbe
js
xchg
xchg
lahf
add
push
mov
add
test
mov
adc
mov
jo
inc
mov
iret
and
cmps
(bad)
xor
pusha
cmps
push
stc
mov
xor
xchg
xlat
in
inc
xlat
adc
and
out
scas
in
into
(bad)
mov
xor
cwde
mov
bnd
add
out
popf
data16
out
je
and
adc
cld
lahf
fst
sub
xor
xor
das
xchg
cmp
adc
das
mov
aaa
or
and
adc
and
cs
loopne
aad
xor
sub
les
push
lds
das
push
(bad)
jl
fs
xor
push
dec
aad
aas
jle
ins
ja
in
mov
test
in
nop
jae
push
hlt
adc
ins
cmc
jl
push
add
push
xchg
mov
lods
push
mov
inc
mov
adc
lock
and
jo
inc
cdq
movs
and
cmps
(bad)
xor
pusha
retf
mov
xor
ret
xlat
mov
and
xchg
scas
loope
cdq
(bad)
loop
mov
cld
xor
(bad)
mov
shl
add
fimul
int3
je
and
adc
(bad)
lahf
ficom
add
sub
test
outs
sub
add
sub
daa
adc
push
mov
aaa
push
movs
inc
lock
and
es
add
sbb
xor
or
arpl
les
je
dec
inc
jp
jg
pop
(bad)
pusha
inc
push
aam
sbb
push
inc
aad
aas
das
imul
outs
in
mov
test
add
jno
sbb
jae
inc
hlt
ins
mov
outs
cmc
and
xchg
mov
gs
test
push
cmps
xchg
jne
xchg
in
adc
lods
mov
and
jo
inc
(bad)
movs
and
fsub
push
stos
mov
xor
icebp
xlat
rol
and
aam
fadd
(bad)
hlt
push
iret
add
xor
(bad)
mov
xchg
fs
xor
add
mov
out
je
and
adc
ficomp
jle
push
sar
aaa
add
or
aaa
rcr
pop
adc
or
xor
lds
and
cmps
cmp
sbb
xor
sub
jo
ins
les
push
movs
or
inc
lds
jle
inc
inc
dec
aam
sub
inc
push
dec
aad
aas
dec
test
jne
inc
test
dec
in
pcmpgtw
dec
addr16
hlt
adc
push
and
xchg
in
add
push
in
gs
test
push
xchg
stos
jne
xchg
mov
mov
mov
and
mov
test
stos
mov
xor
in
jmp
(bad)
fild
movs
push
fadd
repz
(bad)
mov
jmp
jecxz
jmp
data16
xchg
clc
adc
out
lahf
call
test
sub
cs
sbb
add
adc
push
mov
aaa
push
movs
pop
lock
add
dec
inc
cmps
cmp
dec
mov
loopne
aad
xor
or
inc
push
push
les
inc
lds
dec
(bad)
pop
inc
dec
aam
cmp
inc
aas
pop
imul
popa
in
mov
test
jle
outs
movq
addr16
hlt
mov
jp
arpl
pop
push
rcl
xchg
gs
test
add
mov
inc
stos
jne
xchg
mov
ss
xlat
and
jo
inc
jmp
call
cmps
cdq
xor
pusha
mov
mov
fild
inc
in
adc
and
in
int
sti
(bad)
loop
fiadd
fbstp
sar
fs
xor
add
repz
out
data16
out
je
and
adc
loopne
in
xchg
xor
aas
test
cmp
sub
jge
adc
add
cmc
add
jg
mov
aaa
and
and
cmp
push
loopne
aad
xor
adc
pusha
push
sub
jge
inc
movs
je
push
lds
pop
(bad)
push
inc
inc
aam
and
imul
add
jp
push
ja
in
mov
test
push
in
nop
je
fs
bound
adc
jge
or
adc
lods
test
push
mov
inc
cmps
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
les
mov
pusha
adc
mov
push
retf
xlat
leave
inc
in
adc
inc
shr
push
iret
add
xor
cmp
xor
add
in
(bad)
call
and
adc
rcr
daa
test
adc
sbb
and
inc
pop
sbb
adc
push
mov
aaa
adc
and
add
xor
and
aad
xor
sbb
arpl
les
xor
ins
das
mov
pop
aam
xor
push
push
push
aas
jnp
inc
ja
in
mov
test
sbb
out
addr16
hlt
adc
add
and
push
add
push
repnz
out
add
xchg
inc
xchg
jne
xchg
mov
mov
rol
movs
fldenv
out
cmps
mov
push
fwait
mov
xor
rcl
loopne
mov
(bad)
lahf
scas
fld
(bad)
fcom
enter
test
jbe
test
gs
(bad)
xchg
shl
sti
je
and
jne
lahf
leave
xchg
cmp
sub
add
jle
dec
pop
sbb
and
adc
sbb
add
sbb
push
and
sbb
mov
loopne
aad
xor
dec
(bad)
adc
les
outs
movs
gs
inc
lds
ins
(bad)
jl
and
adc
push
dec
aad
aas
and
popa
ja
in
mov
test
in
nop
pop
addr16
hlt
pop
mov
outs
cmc
jae
pop
push
mov
push
scas
gs
test
push
lds
sahf
jne
xchg
pushf
adc
mov
mov
inc
jmp
test
es
push
mov
popf
xor
out
mov
mov
(bad)
iret
scas
clc
inc
fadd
ret
add
xor
cld
mov
out
fs
fadd
repz
xchg
repnz
je
and
adc
ret
lahf
in
or
sub
add
sub
push
shl
jg
mov
aaa
push
movs
and
xor
sbb
dec
pop
cmps
outs
daa
inc
mov
loopne
aad
xor
adc
push
push
aas
les
popa
movs
push
inc
inc
lds
imul
xor
inc
mov
push
sub
js
dec
div
or
inc
mov
test
inc
in
maxps
pop
addr16
hlt
dec
mov
jp
pusha
pop
push
push
xchg
repnz
test
push
mov
inc
loopne
cwde
xchg
mov
ss
jo
inc
lea
mov
mov
popf
push
test
fistp
inc
fist
lds
nop
scas
ret
(bad)
mov
xor
sar
shl
(bad)
add
leave
pop
data16
out
je
and
jne
lahf
fst
xor
add
sbb
xchg
xor
gs
or
das
mov
aaa
or
and
cmp
and
dec
aad
xor
xor
push
push
les
nop
dec
movs
inc
inc
lds
push
gs
cmp
ja
inc
mov
push
inc
aad
aas
dec
test
pop
mov
test
dec
in
pcmpeqb
and
mov
pop
cmc
push
pop
outs
push
cmps
xchg
repnz
push
icebp
gs
test
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
pushf
movs
movs
and
sahf
cmps
mov
mov
adc
mov
xchg
(bad)
push
hlt
xlat
into
inc
mov
(bad)
(bad)
scas
sti
inc
add
push
enter
out
aad
push
fdivr
shl
add
mov
out
je
and
adc
neg
adc
add
or
adc
adc
cmp
add
push
lds
or
and
push
mov
loopne
aad
xor
or
jle
jl
dec
nop
push
movs
jae
arpl
bound
pop
(bad)
popa
inc
inc
aam
and
push
push
imul
dec
in
mov
test
jge
outs
pcmpeqb
push
addr16
hlt
push
jne
cmc
fs
jbe
xchg
xchg
add
hlt
xchg
mov
adc
inc
mov
mov
mov
and
jo
inc
out
mov
mov
xchg
nop
cmps
scas
xor
pusha
fwait
push
mov
lods
push
ret
xlat
test
rol
scas
mov
add
xor
fstp
lahf
fs
xor
add
les
test
aad
into
cmc
fidiv
lahf
in
add
ror
test
daa
xchg
fs
jo
xor
sbb
add
jle
dec
movs
or
lds
and
cmp
and
dec
aad
xor
sub
inc
push
ins
les
movs
push
das
pop
mov
inc
aam
add
push
popa
aad
aas
outs
imul
jne
jge
inc
test
gs
inc
movd
inc
addr16
ins
mov
je
and
xchg
cmc
add
push
xchg
gs
mov
mov
cmps
xchg
jne
xchg
mov
xor
inc
cwde
movs
(bad)
and
mov
pusha
mov
xor
lock
in
inc
rcl
in
mov
inc
nop
scas
out
in
not
fbstp
sar
mov
icebp
add
test
fldenv
out
je
and
adc
ficomp
pop
test
aaa
in
add
sub
cmp
adc
gs
aaa
and
and
pop
cmps
sbb
adc
xor
and
les
dec
movs
push
inc
cmp
data16
dec
(bad)
ins
inc
and
xor
pop
aad
aas
push
div
ins
in
mov
test
dec
in
cmovne
jle
arpl
pop
mov
push
cmc
es
jno
mov
jmp
gs
test
push
xchg
xchg
jne
xchg
(bad)
adc
scas
mov
and
jo
inc
mov
call
pusha
mov
mov
fbld
inc
rcl
icebp
and
hlt
scas
leave
inc
std
(bad)
repz
enter
enter
sar
call
add
loopne
out
data16
out
je
and
adc
call
jae
adc
adc
or
or
aas
pop
sbb
adc
cmp
cmp
or
movs
and
cmps
aas
daa
es
loopne
aad
xor
dec
(bad)
push
push
push
xchg
je
dec
inc
outs
lds
das
push
(bad)
inc
and
mov
push
jbe
add
pop
test
in
mov
test
adc
dec
cmovns
push
addr16
hlt
ins
mov
ja
popw
pop
push
mov
in
add
push
mov
add
xchg
xchg
jne
xchg
test
(bad)
ss
jo
inc
mov
fbld
scas
cmps
cmps
xor
pusha
sahf
push
mov
popf
xor
ret
xlat
in
fist
aam
out
korb
scas
mov
push
jecxz
ret
xor
in
mov
loop
lea
aam
frstpm(287
shl
loope
hlt
out
je
and
jne
lahf
clc
xchg
ds
aas
test
rcr
in
add
pop
xchg
pop
adc
cmc
or
cmp
movs
sbb
sbb
xor
dec
cmp
mov
loopne
aad
xor
das
(bad)
inc
push
pop
les
movs
pop
inc
dec
lds
cmp
push
inc
pusha
aam
sbb
push
sub
bound
push
mul
ins
in
mov
test
jb
jno
pop
out
addr16
push
mov
push
push
xchg
xchg
mov
mov
test
push
mov
inc
mov
mov
(bad)
mov
and
jo
inc
(bad)
movs
mov
es
cmps
mov
push
popf
mov
xor
lahf
xlat
mov
rcl
enter
in
mov
iret
push
mov
jecxz
xchg
aad
push
lock
in
test
lea
aam
ret
out
je
and
adc
mov
pop
pop
test
rcl
test
outs
cmp
and
pop
xchg
sub
xor
push
adc
cs
aaa
and
and
pop
cmps
gs
pop
mov
loopne
aad
xor
xor
jne
jg
gs
jno
pop
inc
dec
lds
pop
(bad)
jne
push
aam
xor
push
xor
inc
aas
pop
test
in
mov
test
in
cmovg
push
outs
hlt
ins
mov
or
dec
pop
jge
stos
xchg
scas
add
push
mov
add
mov
inc
mov
adc
(bad)
mov
and
jo
inc
out
mov
es
cmps
mov
pusha
mov
xor
xchg
xlat
fild
(bad)
loope
in
aad
not
ret
xor
idiv
jmp
add
test
je
and
adc
out
lahf
repnz
add
ror
in
add
cmp
inc
pop
xor
adc
outs
mov
aaa
xor
and
and
mov
loopne
aad
xor
adc
jbe
ins
les
movs
gs
pop
lds
imul
and
aas
das
mul
dec
in
mov
test
pop
in
cmovg
pop
addr16
or
jne
inc
pop
gs
mov
mov
push
mov
mov
mov
jne
xchg
mov
mov
sahf
and
jo
inc
in
movs
mov
test
mov
xor
into
xlat
out
inc
rcl
lock
fisubr
hlt
push
lock
push
cmp
fs
xor
add
int
les
out
je
and
jne
lahf
mov
adc
push
in
add
aas
xchg
fs
sub
arpl
pop
adc
xor
cs
pop
movs
and
cmp
and
dec
sbb
adc
adc
or
sub
les
outs
movs
push
inc
pop
lds
das
jns
ins
inc
dec
aam
cmp
pop
aas
imul
ja
in
mov
test
gs
out
addr16
hlt
bound
dec
cmc
popa
pop
js
mov
mov
gs
aam
xchg
push
test
loope
mov
mov
mov
jo
inc
test
mov
mov
pusha
ret
push
test
fild
inc
cli
adc
and
jmp
push
loope
(bad)
pushf
mov
jmp
in
gs
sti
data16
sti
je
and
adc
les
add
add
and
jno
sbb
or
xor
adc
das
movs
ds
adc
sbb
dec
loopne
aad
xor
dec
(bad)
pop
push
jne
ja
movs
pop
inc
ins
lds
das
and
pop
inc
jge
arpl
sub
not
pop
in
mov
test
pop
in
lsl
das
addr16
push
mov
(bad)
cmc
pop
pop
pop
push
xchg
lods
gs
out
cld
push
xchg
xchg
adc
inc
xor
adc
mov
and
jo
inc
mov
iret
sahf
es
mov
mov
mov
xor
in
mov
repz
(bad)
repnz
rol
xor
repz
in
xor
frstor
(bad)
cld
data16
test
retf
adc
iret
lahf
les
sar
in
add
add
daa
shl
and
sub
adc
or
or
and
es
aad
xor
cs
inc
push
dec
les
popa
movs
jb
inc
lds
das
dec
mov
aam
sbb
push
outs
aad
aas
dec
div
mov
test
gs
in
cmovno
and
hlt
jno
push
jl
pop
cmc
ins
pop
dec
push
xlat
xchg
xchg
push
movs
gs
test
push
mov
lahf
adc
inc
mov
adc
xchg
mov
and
jo
inc
fwait
movs
cwde
and
scas
cmps
iret
xor
pusha
fwait
push
lods
mov
xor
cld
xlat
jecxz
(bad)
adc
and
xchg
scas
mov
push
fiadd
fnstenv
fnstcw
xchg
fs
add
ror
stc
je
and
adc
cmc
lahf
xlat
xchg
and
test
rcr
in
add
sbb
xor
or
pop
adc
or
movs
or
and
cmps
add
inc
mov
loopne
aad
xor
sub
jb
(bad)
les
movs
jb
cmp
bound
jne
pop
inc
jne
inc
and
push
inc
aad
aas
jle
jb
pusha
in
mov
test
fs
maxps
jge
arpl
jae
je
jl
adc
and
pop
push
aad
mov
xchg
mov
mov
inc
mov
fst
mov
stos
mov
and
jo
inc
mov
iret
movs
es
pusha
ret
mov
xor
xchg
xlat
loopne
(bad)
adc
and
out
scas
mov
push
mov
cmc
xor
loopne
shl
not
add
jecxz
cmc
data16
out
je
and
jne
lahf
int3
xchg
push
pop
push
test
shl
adc
sub
add
or
xadd
inc
jg
mov
aaa
push
movs
and
push
lds
dec
pop
cmps
fs
adc
aad
xor
cmp
inc
push
sub
arpl
pop
lds
dec
mov
inc
mov
push
and
outs
aas
jae
imul
jg
push
test
in
unpcklps
pop
outs
hlt
inc
mov
dec
cmc
push
pop
jno
(bad)
xchg
add
test
push
mov
mov
adc
mov
xchg
and
jo
inc
xchg
movs
mov
mov
ret
pusha
retf
push
lahf
mov
xor
call
mov
and
int3
scas
out
inc
rol
mov
xor
in
std
jbe
test
add
iret
pop
je
and
adc
out
ficom
xor
adc
dec
add
sub
jl
sbb
add
outs
xchg
movq
xor
or
and
push
cmps
and
xor
sbb
xor
(bad)
imul
push
nop
arpl
ins
das
inc
(bad)
popa
inc
cmp
je
cmp
je
je
push
ja
in
mov
test
jg
gs
and
mov
inc
cmc
pusha
pop
or
mov
test
add
mov
inc
mov
xchg
jmp
xchg
dec
and
jo
inc
cdq
movs
cwde
and
cmps
cmps
test
pusha
mov
mov
xor
ret
inc
mov
(bad)
aam
out
inc
out
(bad)
call
loopne
vpminsw
mov
xchg
fbstp
retf
in
gs
popf
lock
je
and
adc
cmc
lahf
lds
add
jnp
es
cmp
or
adc
cs
aaa
push
movs
pop
lock
lds
inc
cmps
or
xor
aad
xor
xor
dec
push
dec
les
pop
movs
jl
ins
lds
cmp
jns
ins
aam
and
push
pop
aad
aas
jae
outs
ja
in
mov
test
dec
in
movd
pop
addr16
popa
mov
push
cmc
inc
pop
or
xchg
mov
mov
out
mov
adc
inc
cwde
jne
xchg
jmp
ret
push
add
les
test
mov
xchg
mov
xor
rcl
out
inc
cld
adc
and
out
scas
rol
in
hlt
add
xor
sti
mov
leave
fs
xor
add
test
int
loopne
fnsave
(bad)
adc
out
mov
and
add
test
xchg
shl
pop
adc
or
cmp
xor
ins
and
sbb
or
add
daa
xor
pop
(bad)
outs
push
ja
ins
nop
inc
movs
dec
inc
pop
lds
push
(bad)
dec
inc
jo
inc
add
push
sub
jae
outs
div
ja
in
mov
test
gs
in
cmovp
push
addr16
hlt
jl
inc
xchg
push
jne
cmc
addr16
js
mov
repz
push
and
pushf
add
mov
inc
stos
jne
xchg
scas
adc
xor
inc
mov
iret
mov
xor
pusha
test
mov
xor
xchg
xlat
enter
in
cli
(bad)
repz
fld
(bad)
mov
xor
idiv
jmp
in
gs
(bad)
jmp
out
je
and
jne
lahf
jmp
sub
shl
in
add
sub
xchg
sbb
cmp
pop
adc
outs
mov
aaa
or
and
adc
ds
aaa
mov
loopne
aad
xor
push
(bad)
dec
push
xor
bound
pop
lds
(bad)
jle
outs
aam
cmp
inc
aas
sub
in
mov
test
gs
push
addr16
hlt
dec
mov
ins
cmc
js
ins
push
cmps
xchg
mov
in
mov
test
push
xchg
xchg
jne
xchg
mov
xchg
mov
mov
and
mov
and
movs
cmps
scas
xor
pusha
sahf
push
mov
fbstp
fist
sti
and
jmp
fld
(bad)
movs
push
test
xor
fdivr
xchg
xor
add
out
(bad)
fisub
out
je
and
adc
fstp
adc
in
add
sbb
xor
add
xchg
sbb
mov
aaa
adc
and
pop
cmps
outs
daa
sbb
or
xor
and
pop
(bad)
inc
push
ins
les
push
movs
push
inc
outs
lds
addr16
pop
inc
dec
aam
xor
push
jae
add
ja
in
mov
test
inc
in
(bad)
out
addr16
dec
mov
jbe
and
xchg
movs
add
push
cmps
mov
add
xchg
jne
xchg
mov
lods
mov
and
jo
inc
stos
movs
lea
std
cmps
mov
mov
sahf
push
xchg
mov
xor
not
inc
enter
in
int3
scas
into
inc
xchg
rcl
(bad)
xor
aad
fnstenv
test
add
ret
data16
iret
je
and
adc
repnz
hlt
xchg
add
ror
in
add
and
and
arpl
inc
adc
xor
add
push
movs
add
sub
adc
dec
sbb
adc
add
cmp
cmp
push
arpl
daa
nop
jnp
jns
inc
lds
(bad)
sbb
cmp
sbb
outs
imul
mov
test
adc
push
(bad)
out
addr16
hlt
inc
mov
push
das
pop
dec
push
xchg
xchg
inc
test
push
lds
mov
adc
lods
mov
and
jo
inc
xchg
xchg
xchg
xchg
push
cdq
mov
xor
out
fild
shl
imul
cmc
push
in
add
xor
cwde
mov
xchg
fdiv
hlt
add
jmp
out
je
and
adc
rcr
test
rcl
in
add
pop
xchg
rcl
ss
adc
add
and
movs
push
daa
add
daa
loopne
aad
xor
add
outs
push
xor
jle
push
movs
jno
pop
lds
dec
(bad)
ins
inc
arpl
push
and
imul
add
ja
in
mov
test
ins
in
nop
pop
addr16
ins
mov
dec
cmc
daa
pop
fs
aam
pop
push
mov
test
push
mov
jne
xchg
mov
mov
test
inc
mov
iret
(bad)
in
xchg
xor
pusha
movs
push
mov
fist
inc
rcl
lds
jmp
fild
(bad)
iret
push
std
add
xor
mov
jmp
shl
lock
lock
je
and
jne
lahf
std
xchg
pop
pop
jo
xor
adc
es
xchg
pop
push
xchg
or
and
xchg
dec
jg
mov
aaa
aaa
movs
sbb
adc
jo
sbb
push
dec
xor
xor
loopne
aad
xor
sub
or
les
inc
movs
or
lds
dec
(bad)
dec
inc
gs
and
push
ja
jb
dec
mul
ins
in
mov
test
pop
in
(bad)
out
addr16
hlt
bound
pop
cmc
inc
pop
jp
xchg
xchg
xchg
push
sti
xchg
cdq
push
xchg
xchg
jne
xchg
nop
adc
mov
mov
and
in
mov
push
popf
mov
xor
nop
xlat
rol
aam
jmp
inc
scas
out
rol
lock
lock
xor
lds
shl
add
mov
loopne
aad
bnd
and
adc
in
lea
adc
jo
xor
sbb
xchg
add
add
pop
adc
ja
adc
xor
and
add
sub
inc
aad
xor
sbb
push
push
dec
les
movs
jns
pusha
lds
push
(bad)
addr16
jb
inc
adc
push
push
imul
jno
jno
push
test
dec
in
vmread
outs
addr16
hlt
push
mov
push
cmc
cs
movhps
push
lock
test
rol
jne
xchg
test
xchg
rol
movs
mov
and
push
div
scas
push
xchg
xlat
rol
and
in
fiadd
(bad)
cld
push
mov
loop
lahf
aad
push
cli
mov
les
xchg
add
test
je
and
adc
hlt
lahf
into
xchg
xor
pop
test
rcl
in
add
sub
xchg
shl
cs
push
mov
aaa
sub
and
pop
cmps
add
and
xor
cmp
push
push
imul
adc
lds
inc
inc
aam
and
push
dec
aad
aas
outs
neg
dec
in
mov
test
in
packssdw
addr16
inc
mov
jbe
pop
pop
dec
push
rcl
mul
test
push
mov
mov
xor
inc
jmp
iret
mov
out
mov
push
in
xchg
xor
not
inc
out
out
(bad)
enter
fadd
(bad)
push
rol
xor
(bad)
mov
in
fs
xor
add
mov
sti
mov
and
adc
scas
lahf
xchg
xchg
push
pop
or
add
push
xchg
pop
or
or
xor
xchg
and
mov
aaa
add
and
daa
cmps
pop
daa
adc
xor
das
(bad)
ins
push
push
les
push
movs
push
popa
lds
pop
(bad)
jge
gs
and
push
je
add
imul
push
mov
test
(bad)
in
pcmpgtb
and
hlt
jo
pusha
xchg
ins
jne
cmc
daa
pop
dec
push
mov
push
mov
iret
test
push
mov
xchg
adc
mov
rol
movs
fsub
stc
cmps
mov
pusha
mov
xor
in
xlat
in
inc
rcl
and
xchg
scas
mov
push
lock
xor
out
mov
cmc
repnz
test
(bad)
adc
sti
lahf
stc
xchg
push
pop
ins
test
add
sbb
adc
xchg
add
popa
cmc
cmp
push
mov
aaa
and
and
xor
mov
loopne
aad
xor
ss
push
sub
movs
jne
inc
lds
jbe
push
inc
jo
outs
cmp
push
jo
fs
dec
test
in
mov
test
jp
dec
punpckldq
push
addr16
hlt
pusha
mov
jle
pop
pop
pop
push
ficom
mov
mov
out
test
xchg
xchg
jne
xchg
mov
xchg
lea
movs
xchg
and
xchg
fwait
push
movs
mov
xor
cld
xlat
mov
int
fsub
xchg
scas
inc
(bad)
loop
rol
xor
sar
in
fs
add
mov
les
out
je
and
adc
hlt
lahf
int
add
sub
in
add
sbb
or
cmp
cmp
or
movs
cmp
and
daa
cmps
and
loopne
aad
xor
pop
(bad)
pop
push
(bad)
les
arpl
adc
jns
inc
inc
dec
aam
or
push
popa
aad
aas
and
push
ja
in
mov
test
jnp
dec
cmovbe
jle
add
adc
or
addr16
ins
push
xlat
xchg
mov
sti
push
sti
gs
test
push
mov
inc
out
mov
scas
ss
jo
inc
mov
call
pusha
xchg
push
cld
mov
xor
xchg
xlat
fiadd
out
xchg
rol
scas
mov
push
xlat
add
xor
icebp
mov
(bad)
xor
add
test
je
and
adc
fstp
sub
or
and
sub
daa
xchg
pop
es
sub
push
cmc
cmp
or
sbb
push
movs
sbb
sub
ins
and
cmps
sbb
add
xor
or
jb
push
les
inc
movs
jp
and
fs
mov
dec
aam
xor
push
jo
gs
imul
ja
in
mov
test
in
(bad)
out
addr16
push
mov
pop
cmc
push
pop
dec
push
mov
test
movs
lea
test
adc
inc
mov
xchg
xchg
mov
test
rol
movs
xchg
test
retf
mov
xor
aam
rol
(bad)
and
lock
cmps
inc
xchg
in
push
mov
aad
push
sar
jmp
std
xor
add
call
out
je
and
jne
lahf
retf
pop
push
test
rol
in
add
xchg
gs
and
xor
xchg
adc
mov
aaa
adc
and
push
cmps
aaa
daa
inc
mov
loopne
aad
xor
dec
(bad)
jg
pusha
les
push
movs
ins
inc
lds
jns
inc
inc
push
aam
cmp
push
dec
aad
aas
jns
ins
ja
in
mov
test
pop
in
nop
pop
addr16
hlt
push
dec
xchg
dec
jne
cmc
push
pop
push
push
adc
lods
add
add
cdq
adc
lods
mov
and
jo
inc
cwde
movs
mov
es
cmps
xchg
xor
pusha
xchg
push
sahf
mov
xor
cmc
xlat
rol
int3
and
icebp
scas
fld
(bad)
cmc
push
jmp
aad
push
repnz
shl
add
ror
je
and
adc
scas
lahf
into
xchg
push
pop
cmp
push
rol
in
add
push
xchg
xchg
sar
xor
mov
aaa
push
movs
sub
cmp
xor
dec
push
cmps
and
loopne
aad
xor
cmp
adc
les
nop
movs
pop
inc
jno
push
das
pop
(bad)
jb
dec
aam
add
push
pop
aad
aas
inc
div
arpl
jg
dec
test
gs
in
sysret
out
addr16
ins
mov
push
cmc
pop
pop
ins
push
stos
xchg
xchg
add
push
xchg
mov
test
mov
lea
mov
mov
and
mov
xchg
xor
pusha
sahf
push
test
fistp
inc
mov
(bad)
iret
scas
mov
push
repnz
xor
sar
leave
fs
fwait
add
lock
sahf
data16
out
je
and
adc
loope
les
sbb
sbb
dec
add
xchg
pop
push
xchg
jno
aaa
cmc
and
and
movs
inc
lock
and
das
cmps
es
adc
xor
add
les
movs
push
das
mov
push
aam
and
push
js
arpl
outs
imul
pop
in
mov
test
inc
in
cmovae
jno
push
hlt
arpl
dec
cmc
jb
fs
mov
push
mov
mov
out
test
adc
inc
jmp
push
ss
mov
and
jo
inc
sahf
movs
call
cmps
lahf
xor
pusha
test
mov
xor
hlt
xlat
inc
mov
inc
lock
cmps
inc
sti
mov
xor
aam
movs
jbe
mul
fbstp
out
add
test
clc
adc
rcr
sub
in
add
cmp
adc
cmp
or
cmp
and
push
movs
push
lock
xor
dec
cmps
cmp
push
mov
loopne
aad
xor
cmp
ja
dec
les
je
dec
inc
dec
lds
pop
(bad)
dec
inc
dec
aam
and
jl
jge
sbb
jge
jb
gs
mov
test
gs
packsswb
pop
addr16
hlt
dec
mov
jl
jns
jg
mov
push
xchg
test
push
xchg
xchg
fist
xchg
mov
call
iret
call
pusha
xchg
push
lods
mov
xor
(bad)
test
and
sahf
scas
mov
push
mov
repz
fidivr
nop
fs
add
in
(bad)
fwait
mov
and
adc
rcr
test
shl
add
outs
jbe
xor
add
add
ins
mov
aaa
pop
movs
add
adc
adc
dec
cmps
pusha
daa
pop
mov
loopne
aad
xor
adc
dec
push
jne
pop
nop
movs
cmovne
imul
(bad)
jno
inc
aam
add
ja
push
aas
jle
pop
ja
in
mov
test
(bad)
in
cmovbe
outs
addr16
hlt
jo
pop
xchg
inc
jne
cmc
cs
push
movs
xchg
mov
push
cwde
gs
scas
add
scas
xchg
jne
xchg
mov
mov
mov
movs
shl
cmps
cmps
xor
ret
mov
xor
rcl
rol
out
and
std
scas
fadd
(bad)
not
fidiv
cmp
fs
out
(bad)
in
gs
xchg
out
std
je
and
adc
cmps
lahf
out
xor
sub
in
add
sbb
xchg
xor
cmp
xchg
add
mov
aaa
push
movs
add
adc
movs
je
cmp
push
daa
and
xor
xor
dec
push
xor
movs
outs
inc
aas
lds
mov
jb
dec
and
inc
push
outs
aad
aas
outs
imul
addr16
mov
test
gs
in
movq
and
hlt
pusha
mov
jle
jp
push
push
mov
push
nop
gs
out
lea
cmps
xchg
test
jmp
mov
stos
test
cmps
inc
mov
mov
es
pusha
pushf
push
mov
fistp
inc
fist
(bad)
and
shr
stc
push
in
add
push
repz
ret
fidiv
mov
cmps
out
je
and
adc
rcr
jb
and
sub
sbb
sub
xchg
jne
arpl
sbb
add
add
xor
and
cmps
addr16
inc
mov
loopne
aad
xor
adc
inc
push
inc
les
movs
push
inc
push
lds
pop
(bad)
gs
pop
aam
adc
push
jae
jp
outs
div
imul
ins
gs
in
pcmpgtw
pop
addr16
dec
mov
jno
addr16
pop
push
mov
stos
add
push
xchg
gs
test
mov
(bad)
adc
inc
mov
xchg
jmp
mov
and
jo
inc
xchg
mov
xor
pusha
xchg
push
clc
mov
xor
jecxz
jecxz
ret
adc
and
in
scas
loop
cdq
(bad)
fcom
les
(bad)
mov
xchg
fs
xor
add
int
cwde
shl
clc
je
and
adc
(bad)
lahf
les
add
and
adc
outs
jg
cmp
rcl
sub
or
inc
lock
sub
pop
movs
sub
cmps
push
daa
cmp
xor
or
les
push
movs
pop
inc
inc
lds
jne
pop
inc
jae
pop
and
pusha
push
push
aad
aas
dec
idiv
ja
in
mov
test
inc
in
cmovs
jne
fs
adc
inc
cmc
and
pop
push
test
in
gs
test
push
rol
jne
xchg
jmp
mov
and
jo
inc
fwait
movs
popf
and
in
test
pusha
cmps
push
mov
fistp
inc
stc
adc
and
mov
fst
(bad)
xor
out
div
not
add
mov
enter
ret
je
and
adc
icebp
lahf
iret
xchg
xor
das
test
shl
cmp
jne
pop
pop
add
adc
sub
cmp
push
lds
and
push
cmps
and
adc
xor
ds
ins
push
je
push
nop
jnp
dec
inc
inc
lds
das
inc
mov
aam
cmp
push
jp
pop
aas
push
test
in
mov
test
jb
jno
push
out
addr16
hlt
push
mov
adc
es
ja
rcl
mov
add
test
mov
xchg
xchg
adc
xchg
mov
and
jo
inc
stos
movs
mov
es
pusha
movs
push
xchg
mov
xor
xchg
xlat
iret
inc
fcom
shl
cmc
scas
aad
add
push
jmp
push
(bad)
mov
in
out
test
iret
out
je
and
adc
scas
lahf
sti
xchg
and
and
shr
in
add
xor
aas
pop
fs
jl
or
sbb
imul
pop
and
cmps
outs
daa
das
mov
loopne
aad
xor
sbb
dec
push
inc
les
jae
js
inc
lds
jg
pop
inc
jl
inc
adc
push
and
jge
dec
test
in
mov
test
in
maxps
je
inc
hlt
push
mov
or
push
xchg
xchg
scas
add
push
cmc
gs
test
add
movs
xchg
jne
xchg
mov
mov
jo
inc
test
stos
es
pusha
retf
push
mov
fild
inc
rcl
retf
(bad)
(bad)
ret
push
(bad)
add
xor
aam
shl
not
add
icebp
(bad)
iret
data16
out
je
and
jne
lahf
jmp
adc
jne
shl
in
add
xchg
pop
xor
adc
push
mov
aaa
xor
lds
and
add
cmp
add
add
or
outs
push
jno
js
cmp
dec
das
jle
add
aam
and
push
popa
aad
aas
dec
mul
adc
or
push
test
jle
inc
vmread
gs
hlt
addr16
and
pop
cmc
jns
push
push
mov
xchg
add
push
mov
mov
xchg
add
mov
inc
mov
xchg
mov
fwait
call
int3
jo
inc
xchg
movs
lods
and
lods
cmps
shl
mov
lahf
xlat
into
inc
out
adc
and
jmp
push
loopne
mov
push
int
stos
jbe
not
fs
enter
cli
lds
jecxz
xchg
and
adc
(bad)
lahf
into
xchg
pop
pop
or
add
push
xchg
pop
cmp
cmc
adc
jg
mov
aaa
movs
or
push
lds
and
or
cmp
xor
cmp
inc
push
inc
les
dec
movs
jae
imul
jo
and
ja
jle
push
push
imul
ds
in
mov
test
pop
in
cvtps2pd
bound
hlt
push
dec
xchg
pop
jne
cmc
jno
pop
push
xchg
xchg
mov
push
test
test
push
rol
jne
xchg
lea
nop
mov
and
jo
inc
mov
scas
and
mov
pusha
nop
push
xor
push
jmp
fild
xlat
and
jmp
(bad)
stc
push
mov
push
out
jmp
retf
idiv
test
lds
test
ret
adc
rcr
ja
and
sub
sbb
arpl
rol
sbb
sbb
adc
pop
movs
sbb
and
je
adc
pop
daa
sbb
xor
add
les
push
movs
jle
and
dec
das
pop
(bad)
jnp
pop
aam
add
push
imul
aas
pop
test
add
push
in
vmread
pop
addr16
hlt
inc
mov
or
inc
pop
push
push
adc
gs
test
push
mov
jne
xchg
mov
mov
mov
and
jo
inc
mov
iret
(bad)
in
xchg
xor
pusha
mov
xchg
rcl
xlat
mov
out
hlt
and
cmc
scas
mov
push
mov
out
in
jmp
jbe
neg
lea
xchg
add
mov
into
data16
out
je
and
adc
lds
sub
cmp
add
add
outs
shl
adc
push
mov
aaa
add
and
aas
cmps
and
ds
loopne
aad
xor
sbb
jo
inc
les
push
movs
push
inc
imul
push
inc
pop
aam
cmp
push
sub
jne
dec
div
ja
in
mov
test
inc
in
nop
inc
addr16
hlt
dec
mov
adc
jo
pop
push
mov
mov
gs
test
push
xchg
mov
mov
call
and
jo
inc
xchg
movs
mov
es
cmps
call
mov
xor
icebp
xlat
inc
jmp
icebp
(bad)
call
(bad)
jecxz
int3
add
xor
clc
mov
fisub
jmp
test
je
and
adc
rcr
test
ror
in
add
add
xchg
xor
or
cmp
ja
and
xor
and
sbb
sbb
loopne
aad
xor
xor
push
push
outs
les
movs
jo
inc
lds
das
js
pop
inc
push
aam
adc
ins
aad
aas
ins
div
push
in
mov
test
add
xor
pop
out
addr16
push
jne
cmc
fs
dec
push
xchg
xchg
xchg
add
push
mul
test
add
lahf
xchg
cmps
xchg
xchg
adc
mov
mov
jo
inc
hlt
movs
sahf
and
mov
cmps
xor
pusha
call
fisttp
into
adc
and
leave
scas
jmp
popf
(bad)
cmc
push
out
jmp
mov
xchg
xor
ret
pop
data16
int3
je
and
adc
into
lahf
in
sub
add
add
or
add
aas
cmc
push
adc
xor
add
add
or
aas
cmps
adc
or
das
loopne
aad
xor
push
(bad)
push
push
jle
sub
inc
lds
pop
(bad)
gs
inc
aam
xor
push
jbe
jne
push
test
in
mov
test
in
addps
dec
addr16
jo
add
ds
cmc
push
pop
push
push
mov
cmps
gs
test
push
add
lock
scas
mov
and
jo
inc
stos
movs
and
cmps
lahf
xor
pusha
mov
xor
xchg
xlat
out
inc
clc
adc
and
loope
mov
push
rol
in
not
stos
push
sar
fs
xor
add
into
(bad)
aam
stc
out
je
and
adc
fstp
sub
add
jbe
add
adc
or
adc
and
and
and
xor
pop
aad
xor
push
(bad)
imul
movs
cmovne
inc
das
jnp
fs
jnp
inc
sub
push
jp
jl
inc
test
in
mov
test
sbb
jle
add
addr16
hlt
mov
push
cmc
dec
pop
jne
movs
xchg
mov
test
push
cmps
xchg
jne
xchg
mov
div
mov
movs
mov
mov
mov
xor
pusha
mov
xor
xchg
xlat
in
in
adc
inc
retf
inc
xchg
fist
in
(bad)
aad
push
repz
cld
fs
xor
add
mov
iret
data16
out
je
and
adc
neg
jne
ins
rol
in
add
jne
pop
pop
add
adc
xor
sub
push
movs
adc
push
lds
and
pop
cmps
cmp
loopne
aad
xor
dec
(bad)
imul
movs
or
lds
mov
aam
sbb
push
push
aad
aas
das
idiv
dec
in
mov
test
(bad)
in
nop
pop
addr16
push
mov
arpl
jne
adc
movs
xchg
inc
test
push
cmps
xchg
jne
xchg
scas
adc
test
shl
jo
inc
popf
movs
fldenv
call
push
mov
lods
push
out
xlat
iret
inc
out
mul
imul
fst
fbstp
out
stos
jbe
imul
fs
repz
test
aam
shl
jne
lahf
(bad)
xchg
or
and
daa
ror
in
add
je
cmp
pop
xchg
aaa
shl
adc
sub
and
pop
lds
and
and
sub
sbb
and
and
push
push
dec
les
nop
push
movs
push
inc
arpl
adc
xor
dec
inc
jg
jo
js
inc
push
ins
aad
aas
dec
not
push
in
mov
test
jns
dec
unpckhps
jae
jne
dec
mov
popa
cmc
dec
pop
push
push
mov
scas
add
push
mov
add
call
jne
xchg
call
mov
and
jo
inc
mov
and
cmps
mov
mov
push
mov
fistp
inc
(bad)
adc
and
repnz
fld
(bad)
scas
push
ret
xor
sar
fs
xor
add
mov
shl
out
fsub
rcl
ficomp
xor
add
jle
and
ror
sbb
outs
mov
aaa
daa
movs
inc
lock
sub
cmps
add
adc
or
cmp
cmp
xor
dec
push
xor
addr16
push
movs
pop
inc
dec
lds
dec
(bad)
ins
inc
jne
inc
add
jbe
fs
and
pop
ja
in
mov
test
jle
inc
cvtps2pd
push
addr16
hlt
outs
mov
add
jns
dec
push
mov
repnz
push
mov
test
add
les
sahf
jne
xchg
mov
iret
inc
and
jo
inc
mov
mov
mov
lds
pusha
(bad)
push
mov
scas
push
jmp
and
(bad)
scas
out
inc
loopne
iret
push
aad
fbstp
clc
mov
les
out
scas
in
xlat
(bad)
loopne
cli
out
je
and
adc
lds
sbb
jnp
or
sub
sub
xchg
pop
push
xchg
sub
add
or
push
movs
xor
or
xor
or
push
loopne
aad
xor
dec
(bad)
dec
push
jl
push
nop
outs
movs
push
inc
ins
lds
(bad)
(bad)
jp
push
aam
add
push
inc
aad
aas
jae
xor
in
mov
test
gs
orps
inc
addr16
hlt
adc
inc
xchg
inc
jne
cmc
inc
pop
pop
push
nop
xchg
mov
adc
retf
add
mov
jne
xchg
mov
mov
mov
and
jo
inc
lea
cdq
mov
pusha
mov
xor
rcl
test
and
aad
std
inc
icebp
(bad)
fst
mov
push
icebp
mov
jmp
in
gs
scas
out
je
and
adc
sti
lahf
sti
xchg
and
pop
test
shl
in
add
daa
xchg
pop
sbb
cmc
sub
and
xor
push
movs
xor
and
add
push
loopne
aad
xor
sbb
les
xor
push
inc
inc
aam
sbb
jo
inc
aas
xor
arpl
in
mov
test
jae
xor
arpl
push
addr16
hlt
adc
ins
cmc
je
jns
mov
jmp
add
fld
std
jne
xchg
xchg
adc
xchg
mov
and
jo
inc
mov
lahf
lods
cmps
(bad)
xor
pusha
fst
mov
xor
rcl
inc
mov
lds
inc
faddp
std
push
jmp
aad
push
ret
mov
icebp
shl
add
fisttp
div
fcom
std
lahf
aam
xor
cmp
xor
push
in
add
add
xchg
or
adc
xor
adc
adc
cmp
push
cmps
xor
xor
xor
pop
(bad)
push
push
aaa
les
movs
dec
inc
inc
lds
xor
aam
add
push
push
aad
aas
push
idiv
ja
in
mov
test
jae
push
(bad)
out
addr16
hlt
outs
mov
pop
cmc
inc
pop
outs
push
mov
mov
push
lods
rol
test
xchg
xchg
jne
xchg
(bad)
adc
mov
and
xchg
inc
xchg
cwde
es
ret
xor
pusha
mov
mov
xor
xchg
xlat
jmp
lds
inc
icebp
(bad)
lock
test
rcl
mov
leave
lea
fild
mov
ret
cmps
out
je
and
adc
mov
pop
and
add
add
adc
add
xchg
sbb
mov
aaa
adc
and
or
mov
loopne
aad
xor
adc
les
dec
movs
jne
aas
lds
mov
aam
or
push
pop
aad
aas
push
imul
ja
in
mov
test
(bad)
in
cmovg
and
hlt
dec
mov
or
pop
pop
ins
push
cmps
xchg
inc
test
push
mov
inc
mov
adc
mov
leave
inc
xchg
movs
mov
hlt
iret
xchg
es
scas
xor
pusha
ret
push
cwde
mov
xor
repnz
repnz
(bad)
adc
and
jmp
push
mov
loope
int
clc
push
cmp
fs
xor
add
test
je
and
jne
lahf
call
test
shl
sub
or
cs
adc
adc
sub
and
lds
and
sbb
or
aas
aad
xor
cmp
les
inc
and
jge
pop
(bad)
jo
dec
aam
adc
push
and
add
ja
in
mov
test
jae
push
addps
jno
pop
hlt
push
mov
dec
cmc
dec
pop
push
push
adc
mov
hlt
push
movs
xchg
jne
xchg
lock
movs
mov
and
jo
inc
(bad)
movs
mov
es
cmps
shl
fst
mov
xor
not
mov
rcl
and
(bad)
scas
fiadd
(bad)
cmc
push
fadd
stos
xor
xchg
lahf
fbstp
cmc
add
fisttp
std
je
and
adc
mov
pop
and
add
add
xchg
or
and
add
imul
lock
jo
add
cmps
pusha
daa
sbb
xor
cmp
push
push
pop
les
movs
jne
(bad)
lds
pop
mov
imul
aas
sub
in
mov
test
sbb
push
jbe
arpl
hlt
dec
mov
ins
cmc
pop
pop
jg
leave
xchg
mov
gs
add
xchg
jne
xchg
mov
ss
mov
jo
inc
xchg
movs
es
cmps
mov
pusha
stos
push
div
les
xlat
in
inc
(bad)
adc
and
xchg
scas
mov
add
xor
fnstcw
fsub
rol
mov
std
shl
cld
je
and
adc
(bad)
lahf
in
push
pop
or
add
je
sub
xor
adc
cmp
movs
cmp
xor
sbb
xor
mov
loopne
aad
xor
adc
adc
sub
ins
nop
inc
movs
jbe
jno
bound
pop
(bad)
js
inc
aam
adc
push
inc
aad
aas
dec
idiv
ja
in
mov
test
dec
in
pcmpeqd
inc
addr16
hlt
dec
mov
je
das
pop
jge
xchg
xchg
mov
gs
out
mov
add
jne
xchg
cwde
adc
lock
and
jo
inc
mov
iret
frstor
mov
cmps
push
stos
mov
xor
retf
xlat
mov
(bad)
adc
inc
aad
(bad)
inc
test
cli
push
scas
add
xor
aam
(bad)
jbe
test
gs
jmp
and
adc
std
lahf
fcom
add
adc
or
cmp
adc
and
pop
adc
push
mov
aaa
aas
movs
push
lock
adc
pop
cmps
and
and
aad
xor
cmp
les
nop
jb
push
inc
inc
lds
imul
je
inc
mov
push
push
aad
aas
dec
mul
jne
or
imul
and
mov
inc
cmc
outs
pop
ins
push
mov
xchg
add
push
cli
gs
test
push
xchg
mov
adc
mov
stos
and
jo
inc
cmps
movs
fldenv
mov
pusha
mov
xor
(bad)
xlat
inc
shl
out
scas
fiadd
(bad)
in
jmp
div
(bad)
mov
xlat
shl
call
pop
data16
out
je
and
adc
rcr
adc
in
add
or
or
xor
sbb
adc
movs
and
aaa
lds
and
xor
xor
xor
sbb
les
inc
movs
adc
dec
lds
pop
(bad)
jnp
and
dec
add
push
jp
inc
aas
dec
not
jle
pop
mov
test
inc
in
punpckhbw
inc
addr16
arpl
imul
pop
outs
push
mov
push
mov
xchg
test
add
test
popf
jne
xchg
mov
mov
mov
and
jo
inc
mov
iret
scas
es
cmps
xchg
xor
pusha
cmps
push
mov
fistp
inc
fst
cli
and
xchg
scas
out
inc
add
hlt
xor
(bad)
mov
jmp
add
ret
(bad)
(bad)
cmps
out
je
and
adc
mov
pop
das
test
rcr
in
add
push
xchg
pop
push
xchg
sbb
gs
and
or
adc
and
and
push
loopne
aad
xor
sub
inc
push
les
jnp
dec
inc
lds
das
daa
(bad)
pop
inc
(bad)
aam
add
push
imul
aas
outs
div
ja
in
mov
test
gs
nop
pop
addr16
je
arpl
and
ins
push
mov
push
lods
gs
test
push
ret
xchg
jne
xchg
mov
mov
mov
and
jo
inc
cdq
movs
xchg
and
lahf
cmps
lods
xor
pusha
(bad)
push
mov
fistp
inc
mov
(bad)
shr
push
out
add
xor
cmp
div
rol
aam
cdq
data16
je
and
adc
aam
(bad)
xchg
or
and
add
sbb
push
shl
push
adc
adc
movs
adc
or
movs
xor
cmps
sbb
loopne
aad
xor
dec
(bad)
addr16
xor
jle
dec
movs
inc
inc
pop
lds
pop
mov
aam
add
push
jno
jno
dec
test
in
mov
test
jp
dec
nop
je
pop
hlt
je
add
push
pop
jnp
xchg
xchg
cmps
add
push
scas
pop
mov
mov
(bad)
adc
inc
xchg
xchg
mov
(bad)
ss
mov
and
jo
inc
test
cdq
mov
mov
xor
repz
aad
int3
adc
inc
in
scas
out
inc
loop
cmps
push
int3
add
push
fidivr
nop
test
repnz
ror
je
and
adc
iret
lahf
stc
xchg
push
pop
ins
test
shl
in
add
jbe
pop
shl
jg
mov
aaa
and
and
sbb
sub
xor
add
adc
dec
push
jno
daa
nop
jae
jns
inc
lds
arpl
je
push
aam
xor
push
dec
aad
aas
push
div
ja
in
mov
test
push
jae
jge
inc
addr16
hlt
outs
mov
push
push
pop
jns
lea
mov
add
add
jne
xchg
call
ss
jo
inc
xchg
movs
mov
es
push
in
mov
movs
fistp
inc
cli
adc
and
xchg
scas
cmps
inc
ffreep
fcom
stos
xor
loope
call
xor
add
out
aam
int3
out
je
and
adc
neg
or
or
daa
in
add
add
sub
aaa
cmc
add
jg
mov
aaa
movs
adc
xor
or
aas
cmps
add
and
xor
adc
or
les
jb
cmovne
mov
aam
sbb
push
js
add
das
test
in
mov
test
jb
sub
pop
out
addr16
push
mov
imul
mov
sti
gs
pushf
add
mov
inc
cwde
jne
xchg
lods
adc
test
mov
jo
inc
xchg
movs
movs
and
in
lods
xor
pusha
mov
xor
(bad)
xlat
inc
sti
and
out
scas
aad
fld
(bad)
push
mov
out
lahf
aad
push
out
repz
test
add
mov
(bad)
movs
out
je
and
jne
lahf
xlat
xchg
push
pop
das
test
add
cmp
sub
adc
push
mov
aaa
and
and
or
mov
loopne
aad
xor
sbb
les
push
movs
push
das
addr16
sbb
and
pop
push
inc
aad
aas
push
not
jb
ja
push
test
jl
xor
addr16
hlt
pusha
mov
push
push
test
test
retf
test
push
mov
inc
in
test
(bad)
mov
and
jo
inc
mov
iret
pushf
es
lds
mov
xor
nop
xlat
jmp
sti
adc
inc
in
hlt
inc
add
push
mov
xor
fdivr
repz
add
jmp
je
and
jne
lahf
in
xchg
aaa
pop
aas
test
add
js
pop
pop
jns
ror
or
ds
aaa
aas
movs
cmp
sub
adc
dec
cmps
sbb
inc
mov
loopne
aad
xor
or
arpl
les
pop
movs
pop
inc
lds
dec
(bad)
jl
es
cmp
push
push
add
jns
inc
ja
in
mov
test
jb
ds
push
addr16
hlt
sbb
jne
cmc
push
pop
pop
push
scas
xchg
movs
add
push
mov
test
push
mov
mov
xchg
mov
xchg
mov
movs
scas
and
mov
pusha
cmps
push
mov
fist
inc
ficom
mov
xlat
(bad)
in
mov
push
mov
aad
push
out
call
fidiv
mov
clc
out
je
and
adc
in
rcl
shl
in
add
xchg
pop
es
sub
and
es
or
dec
lock
cmp
push
cmps
sbb
pop
mov
loopne
aad
xor
add
adc
les
movs
pop
inc
pop
lds
jl
add
aam
and
push
aad
aas
je
addr16
in
mov
test
outs
in
subps
jg
push
hlt
pop
mov
dec
cmc
push
pop
push
push
test
mov
mov
out
inc
into
xchg
jne
xchg
mov
lods
mov
and
jo
inc
test
iret
mov
lahf
cmps
xor
movs
push
xor
push
nop
xlat
loop
std
adc
and
retf
inc
std
(bad)
out
cmc
add
xor
(bad)
mov
aad
sti
xor
add
in
pushf
data16
fidiv
test
ficomp
jle
aaa
rcl
in
add
aas
xchg
adc
cmc
pop
adc
aaa
mov
aaa
push
movs
and
adc
movs
or
cmps
xor
xor
xor
push
(bad)
bound
les
nop
push
movs
je
jge
adc
cmp
ja
pusha
aam
cmp
push
jb
outs
aas
pop
imul
jl
pop
mov
test
push
dec
nop
jle
js
pop
mov
pop
cmc
pop
pop
dec
push
aam
add
lock
test
add
lahf
xchg
jne
xchg
call
ss
stos
and
jo
inc
lods
movs
mov
es
pusha
adc
lea
(bad)
inc
ret
and
in
mov
push
stos
add
xor
out
mov
ret
xor
add
loopne
(bad)
data16
out
je
and
jne
lahf
call
test
shr
adc
xchg
adc
and
adc
push
mov
aaa
or
and
push
cmps
popa
daa
sub
and
sub
cmp
sbb
pop
push
arpl
push
nop
sub
adc
cmp
push
inc
inc
aam
cmp
dec
aad
aas
pop
imul
ja
pop
mov
test
adc
popa
cmovs
inc
addr16
hlt
pusha
mov
dec
cmc
popw
outs
push
xchg
xchg
scas
add
push
test
add
mov
jmp
jmp
and
jo
inc
lock
mov
es
pusha
mov
mov
xor
rcl
inc
mov
lds
rol
push
jmp
aad
push
idiv
shl
add
mov
out
je
and
adc
cmps
lahf
fst
cmp
adc
cmp
or
adc
adc
pop
adc
es
aaa
xor
lds
and
pop
cmps
xor
and
aad
xor
adc
adc
les
push
movs
push
inc
jle
push
das
pop
(bad)
jae
jae
xor
jns
push
aas
jo
inc
ja
in
mov
test
in
pcmpgtd
fs
hlt
inc
mov
dec
cmc
inc
pop
or
add
push
cmps
movs
test
add
mov
movs
jne
xchg
stos
adc
mov
jo
inc
movs
movs
mov
es
mov
push
lods
mov
xor
cld
xlat
rol
retf
(bad)
iret
scas
cli
inc
add
push
mov
hlt
xor
cmc
mov
lock
xor
gs
(bad)
cli
shl
je
and
adc
mov
pop
jbe
adc
pop
in
add
jge
xor
rcl
cmp
aaa
or
and
or
adc
xor
cmp
dec
(bad)
push
push
inc
les
ins
movs
jns
push
dec
das
outs
(bad)
jno
fs
sub
push
push
dec
aad
aas
js
push
ja
in
mov
test
imul
and
jne
arpl
push
cmc
push
pop
dec
push
movs
xchg
scas
add
push
mov
add
mov
mov
ficom
out
mov
jo
inc
out
movs
mov
or
cmps
cmps
mov
push
popf
mov
xor
(bad)
xlat
mov
ret
adc
and
xchg
scas
fld
(bad)
in
fld
fdiv
idiv
shl
jmp
(bad)
out
je
and
adc
(bad)
lahf
call
test
in
add
je
inc
pop
pop
xchg
sub
sbb
inc
adc
push
mov
aaa
add
and
cmps
fs
pop
mov
loopne
aad
xor
or
ja
imul
nop
dec
movs
outs
inc
push
lds
pop
(bad)
pop
inc
pusha
aam
add
push
arpl
push
aas
data16
adc
inc
mov
test
pop
in
cmovle
cmp
mov
jp
push
pop
je
xlat
xchg
add
mov
test
add
xchg
xchg
adc
inc
xor
mov
lods
push
and
jo
inc
(bad)
movs
mov
and
xchg
xor
not
in
inc
clc
adc
and
jmp
push
retf
add
xor
lds
(bad)
shl
(bad)
add
aad
(bad)
data16
out
je
and
adc
(bad)
lahf
test
ror
push
outs
or
adc
and
cmp
jg
mov
aaa
add
daa
lock
push
movs
adc
cmps
jge
adc
aad
xor
dec
(bad)
jno
jne
jno
dec
movs
imul
(bad)
pop
inc
and
ja
daa
mov
push
jp
dec
aas
pop
not
imul
mov
test
outs
in
nop
jne
push
hlt
pop
mov
or
ins
pop
or
xchg
xchg
in
add
push
sti
gs
mov
push
pushf
xchg
jne
xchg
lods
adc
xchg
aam
cwde
movs
stos
and
lahf
cmps
(bad)
xor
pusha
mov
xor
ret
inc
movs
adc
and
ret
scas
std
inc
loope
(bad)
push
hlt
add
xor
iret
mov
fisub
mov
retf
data16
xor
jmp
xchg
daa
pop
jae
ins
shr
in
add
jnp
xor
jns
adc
add
xchg
inc
jg
mov
aaa
push
movs
inc
lock
and
dec
(bad)
es
add
aad
xor
push
(bad)
je
aas
les
movs
jge
push
dec
das
jle
add
sbb
push
jle
pusha
aas
push
in
mov
test
pop
in
packsswb
pop
addr16
dec
mov
dec
cmc
and
pop
push
mov
test
test
push
cdq
xchg
jne
xchg
jmp
mov
aad
out
lea
xchg
cmps
xchg
xor
pusha
(bad)
push
mov
mov
inc
ret
and
xchg
scas
in
int3
(bad)
fcom
in
out
loope
idiv
xchg
fs
xor
add
(bad)
(bad)
fisub
out
je
and
adc
in
lahf
aad
sub
je
pop
add
cmp
adc
cmp
sbb
xor
sub
lock
ds
or
cmp
xor
xor
outs
push
sub
and
cmp
mov
aam
or
push
sub
inc
aas
jle
push
mov
test
gs
aas
movq
pusha
addr16
dec
mov
dec
cmc
daa
pop
fs
(bad)
xchg
xchg
add
push
xchg
rol
xchg
push
mov
inc
stos
jne
xchg
scas
adc
mov
jo
inc
mov
mov
sahf
iret
scas
es
cmps
ret
pusha
rcl
iret
xor
int3
xlat
mov
and
nop
scas
in
in
(bad)
out
int3
add
xor
into
mov
int
repz
add
mov
out
je
and
adc
std
lahf
ficom
sub
add
je
xor
xor
adc
ja
add
das
movs
daa
lock
sub
and
xor
sbb
aad
xor
adc
push
je
inc
nop
dec
movs
outs
inc
push
lds
das
cmp
aam
and
gs
push
not
in
mov
test
in
minps
inc
addr16
adc
gs
aas
jne
cmc
inc
pop
or
mov
test
push
and
fwait
add
mov
inc
pushf
jne
xchg
xchg
adc
stos
mov
and
jo
inc
xchg
movs
fwait
and
mov
cmps
push
sahf
mov
xor
jecxz
(bad)
inc
rcl
icebp
and
ret
scas
iret
inc
add
push
out
add
xor
out
stos
jbe
test
add
ret
(bad)
fisub
out
je
and
adc
out
in
xchg
and
sub
in
add
daa
xchg
pop
sbb
adc
ins
mov
aaa
movs
or
and
or
dec
loopne
aad
xor
and
pop
push
pop
les
ins
movs
pop
inc
cmp
pusha
das
jns
jae
jns
arpl
jbe
jl
push
not
push
in
mov
test
dec
in
nop
jno
pop
hlt
jbe
pop
xchg
aaa
jne
cmc
push
pop
jns
adc
gs
xchg
add
pop
mov
test
cmps
mov
lods
inc
lock
mov
(bad)
iret
fisub
pushf
cmps
xor
mov
pushf
mov
xor
nop
xlat
mov
out
adc
inc
aad
hlt
inc
fld
into
push
jecxz
enter
rcl
mov
into
fs
xor
add
out
(bad)
fisub
out
je
and
adc
cmps
lahf
icebp
xchg
push
pop
or
add
or
and
adc
sub
xor
and
pop
cmps
xor
add
xor
push
(bad)
adc
les
jae
jae
pop
lds
push
mov
aam
xor
push
outs
aad
aas
dec
mul
jae
push
mov
test
in
cmovle
pop
addr16
outs
mov
push
cmc
gs
pop
push
mov
mov
push
sti
gs
test
push
iret
xchg
jne
xchg
stos
adc
mov
mov
inc
xchg
movs
pushf
and
mov
pusha
xchg
push
xor
push
repz
rol
and
shr
iret
push
ret
add
xor
sar
retf
fs
xor
add
dec
aad
repz
adc
mov
pop
and
add
xchg
rol
daa
adc
or
or
xor
sbb
aas
movs
jno
and
pop
loopne
aad
xor
adc
les
inc
movs
pop
inc
dec
lds
das
ds
pop
inc
cs
cmp
push
jge
jp
pop
not
jbe
fs
test
pop
in
pcmpgtd
es
data16
jns
and
pop
push
adc
test
cld
push
cdq
xchg
fwait
xchg
mov
mov
mov
nop
movs
movs
and
xchg
cmps
mov
push
cwde
mov
xor
(bad)
repnz
repnz
and
iret
scas
ret
inc
fcmovb
mov
xor
cmp
call
(bad)
std
data16
cdq
je
and
adc
hlt
lahf
retf
pop
pop
test
jb
sbb
outs
or
xor
adc
add
and
sub
and
pop
cmps
add
cmp
xor
sub
je
inc
les
pop
movs
jne
lds
inc
(bad)
pop
inc
and
pusha
add
push
pop
aad
aas
dec
div
dec
in
mov
test
jg
xor
pop
out
pmuludq
push
jg
arpl
jne
push
push
nop
xchg
test
mov
test
push
lods
xchg
jne
xchg
xchg
adc
xchg
mov
lea
lahf
es
pusha
cwde
push
xchg
stos
push
enter
cmc
adc
and
out
scas
enter
movs
push
out
clc
xor
cmp
shl
call
gs
pop
data16
je
and
adc
mov
pop
adc
add
add
jl
adc
pop
adc
push
mov
aaa
xor
cmp
sub
adc
pop
cmps
add
sbb
aad
xor
cmp
les
xor
dec
inc
jge
popa
das
push
(bad)
js
outs
aam
and
jno
pop
aas
pop
div
in
mov
test
in
vmwrite
popa
addr16
dec
mov
push
cmc
jo
or
nop
xchg
hlt
add
push
and
cli
add
xchg
xchg
stos
xchg
mov
stos
mov
and
jo
inc
mov
mov
xor
pusha
stos
push
xchg
mov
inc
(bad)
adc
and
shr
push
mov
stc
xor
cli
mov
shl
rol
repz
frstor
out
je
and
adc
(bad)
lahf
rcl
cmp
add
ds
sub
xchg
or
adc
adc
sbb
lds
dec
cmps
bound
dec
mov
loopne
aad
xor
push
(bad)
pop
push
dec
les
sub
lds
cmp
add
aam
and
dec
push
and
jge
push
div
dec
in
mov
test
pop
in
minps
pop
addr16
hlt
data16
dec
cmc
inc
pop
dec
push
mov
mov
loop
xchg
test
push
ret
xchg
jne
xchg
xchg
adc
mov
jo
inc
lods
movs
mov
and
mov
cld
xlat
hlt
inc
(bad)
adc
inc
(bad)
scas
inc
(bad)
in
int3
add
xor
(bad)
mov
int3
fs
xor
add
ror
bnd
and
adc
mov
pop
jle
ins
shr
in
add
and
jbe
cmp
push
adc
or
inc
lock
movs
sub
cmps
add
push
mov
loopne
aad
xor
adc
adc
(bad)
les
jbe
dec
inc
(bad)
lds
outs
(bad)
dec
inc
pop
aam
xor
push
dec
aad
aas
aaa
test
in
mov
test
adc
inc
andps
pop
addr16
hlt
ins
mov
outs
cmc
and
inc
push
leave
xchg
mov
in
push
hlt
mov
mov
adc
inc
cmps
jne
xchg
stos
adc
mov
mov
movs
mov
popf
cmps
mov
push
cli
mov
xor
xchg
xlat
jecxz
icebp
adc
and
lds
cmps
push
jmp
aad
push
repz
(bad)
test
fwait
add
lods
(bad)
out
data16
out
je
and
adc
les
add
in
add
and
xchg
jo
ss
cmp
cmp
ins
aaa
push
movs
push
lock
lds
and
sbb
xor
sbb
or
aas
(bad)
pop
push
jae
jge
dec
movs
inc
inc
dec
lds
inc
(bad)
push
inc
dec
aam
add
jno
jbe
dec
imul
ja
push
mov
test
dec
in
lsl
jne
ins
hlt
inc
mov
pop
cmc
push
pop
add
add
push
mov
add
mov
test
inc
jmp
fcom
mov
and
jo
inc
mov
xchg
and
lods
cmps
movs
xor
pusha
les
mov
xor
leave
xlat
out
inc
lods
adc
and
repz
loop
inc
fst
retf
aad
push
fstp
loope
xor
frstor
(bad)
hlt
scas
out
je
and
adc
ficomp
jo
sbb
cmp
dec
add
xor
xchg
and
and
es
push
mov
aaa
dec
movs
inc
lock
lds
and
cmps
add
add
aad
xor
push
(bad)
dec
push
jb
jns
cmp
inc
das
popa
(bad)
jne
dec
aam
adc
push
and
inc
aas
data16
in
mov
test
inc
in
pcmpeqb
and
hlt
popa
mov
pop
cmc
and
xchg
mov
mov
xchg
xchg
xor
jmp
mov
and
jo
inc
mov
iret
cwde
test
mov
xor
jmp
and
xchg
scas
hlt
inc
ret
push
rol
fidiv
(bad)
mov
fsub
rol
(bad)
clc
in
out
je
and
adc
mov
pop
adc
add
and
xchg
das
shl
adc
adc
and
or
movs
jae
xor
adc
pop
mov
loopne
aad
xor
sbb
les
movs
push
inc
dec
lds
dec
mov
aam
xor
sub
pusha
aas
dec
not
push
in
mov
test
outs
in
movq
pop
addr16
hlt
dec
mov
jo
pop
pop
outs
push
mov
icebp
gs
test
mov
inc
call
call
and
jo
inc
xchg
movs
xchg
and
lods
cmps
mov
lea
push
stc
mov
xor
in
xlat
aad
into
adc
inc
lds
repz
int
mov
push
idiv
cmc
fs
xor
gs
ret
out
je
and
adc
call
aaa
test
rcl
in
add
cmp
outs
rol
cmp
jg
mov
aaa
and
and
xor
mov
loopne
aad
xor
pop
(bad)
push
push
jbe
popa
nop
movs
jns
inc
lds
inc
(bad)
ja
and
mov
push
jge
outs
aas
dec
imul
push
in
mov
test
pop
in
pcmpeqb
jo
pop
hlt
push
mov
jo
jp
dec
push
mov
xchg
add
push
sti
rol
pop
xchg
xchg
jne
xchg
scas
adc
lods
mov
and
jo
inc
in
movs
lods
and
xchg
cmps
lods
xor
pusha
mov
cli
mov
xor
sahf
xlat
rol
and
shr
loope
mov
jmp
mov
out
les
hlt
add
jmp
je
and
jne
lahf
mov
add
adc
syscall
xor
adc
adc
cmc
cs
pop
mov
aaa
sbb
and
sub
sub
cmp
adc
aas
aad
xor
adc
les
inc
movs
jbe
pop
lds
(bad)
push
inc
arpl
pusha
add
push
push
aad
aas
pop
div
adc
js
dec
test
inc
in
unpckhps
je
add
inc
mov
ja
pop
pop
dec
push
mov
push
movs
gs
xchg
add
cwde
xchg
jne
xchg
mov
xor
inc
xchg
movs
popf
and
std
cmps
movs
xor
pusha
adc
mov
in
rol
and
enter
add
push
jmp
div
lds
sahf
fs
xor
gs
lock
je
and
jne
lahf
mov
push
rcr
in
add
jbe
rcr
cmp
aaa
dec
movs
or
and
push
cmps
adc
loopne
aad
xor
dec
(bad)
inc
push
jg
pop
nop
push
movs
push
inc
lds
das
inc
mov
aam
xor
je
outs
aas
dec
imul
inc
in
mov
test
pusha
in
cmova
jg
pop
hlt
imul
cmc
jp
pop
push
mov
stos
add
push
repnz
out
add
xchg
mov
jmp
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
out
xlat
mov
jecxz
repnz
shr
xlat
push
xlat
add
push
loope
jmp
mov
(bad)
fs
xor
gs
(bad)
out
je
and
adc
neg
jno
rcl
in
add
sbb
xchg
xor
or
or
imul
cmp
sub
das
loopne
aad
xor
xor
ins
push
dec
les
dec
movs
outs
inc
inc
lds
cmp
je
and
sub
sbb
aad
aas
sub
dec
ja
in
mov
test
jb
ins
pcmpgtd
push
addr16
hlt
inc
mov
dec
cmc
and
or
mov
movs
gs
test
push
mov
jne
xchg
mov
mov
mov
and
xchg
cmps
pushf
xor
pusha
xchg
push
lahf
mov
xor
sahf
xlat
les
shl
lds
cld
push
scas
add
xor
(bad)
mov
shl
aad
(bad)
in
fisttp
icebp
je
and
jne
lahf
fcom
and
or
push
add
xchg
pop
sbb
or
popa
cmc
sub
or
or
lock
lds
movs
cmovg
mov
loopne
aad
xor
cmp
pop
push
push
les
nop
jne
pop
inc
inc
lds
push
mov
aam
sub
push
pop
aad
aas
dec
mul
pop
in
mov
test
arpl
dec
cmove
dec
outs
hlt
adc
dec
cmc
fs
add
xchg
mov
test
push
mov
mov
jne
xchg
stos
adc
lods
mov
and
jo
inc
mov
iret
and
mov
mov
xor
(bad)
xlat
mov
cmps
adc
inc
into
scas
lds
(bad)
fst
call
push
pushf
mov
int3
shl
jmp
gs
pop
data16
(bad)
je
and
adc
rcr
and
sub
daa
in
add
and
xor
pusha
cmc
push
adc
or
push
aaa
or
and
and
aas
daa
and
xor
sbb
les
push
movs
js
cmp
dec
das
dec
mov
(bad)
aam
or
push
dec
aad
aas
outs
idiv
ja
in
mov
test
adc
jne
jle
jg
fs
imul
cmc
jp
ins
push
xchg
call
out
xchg
push
mov
xor
jmp
ss
xchg
and
jo
inc
scas
movs
shl
cmps
xchg
xor
pusha
xchg
push
mov
test
xlat
in
out
adc
and
xchg
scas
inc
(bad)
repz
int
movs
xor
sar
xchg
in
test
(bad)
out
je
and
adc
ficomp
push
test
add
push
add
cmp
xor
imul
adc
sub
add
and
pop
cmps
sbb
and
aad
xor
add
les
movs
inc
inc
lds
das
and
jnp
push
aam
cmp
push
outs
aad
aas
sub
in
mov
test
pop
in
pcmpeqb
inc
addr16
dec
mov
push
cmc
inc
pop
dec
push
adc
gs
test
add
mov
mov
add
adc
xor
test
scas
cmps
mov
pusha
mov
xor
hlt
xlat
repz
rcl
out
and
into
scas
enter
loope
aam
mov
push
(bad)
mov
in
fs
add
mov
out
mul
in
loopne
repz
movs
lahf
repz
ds
adc
add
sbb
xchg
and
pop
cmc
ss
or
cmp
pop
lds
and
push
cmps
xor
xor
aad
xor
cmp
ins
push
jbe
push
nop
cmp
dec
das
arpl
outs
inc
cmp
jb
cmp
aad
aas
js
inc
ja
in
mov
test
in
punpcklwd
jnp
jne
adc
jne
cmc
inc
pop
pop
push
lahf
xchg
xchg
add
push
repnz
int3
out
stos
push
pop
movs
jne
xchg
mov
ss
mov
scas
jo
inc
cdq
movs
mov
mov
mov
pusha
xchg
push
stos
mov
xor
icebp
xlat
fiadd
xlat
and
int3
scas
enter
mov
xor
fdivr
into
fdiv
out
icebp
in
gs
cli
data16
out
je
and
adc
into
lahf
xlat
xchg
sub
ja
cmp
push
in
add
jp
xor
push
xchg
ja
and
ds
ins
mov
aaa
pop
movs
xor
and
sub
and
xor
cmps
adc
loopne
aad
xor
or
push
push
inc
les
xor
outs
das
xor
aam
and
pop
push
js
jbe
je
inc
ja
in
mov
test
dec
in
cmovp
and
hlt
push
mov
push
cmc
outs
pop
ins
push
mov
push
xchg
gs
test
add
mov
inc
nop
jne
xchg
jmp
ss
mov
and
jo
inc
cdq
movs
test
and
push
clc
mov
xor
jmp
adc
and
int3
scas
in
pop
loop
enter
cwde
aad
push
xchg
hlt
test
sti
add
jmp
les
out
je
and
adc
ret
xchg
xor
xor
add
cmp
cmp
adc
sub
adc
pop
lds
and
das
cmps
aaa
daa
inc
mov
loopne
aad
xor
sub
jne
les
inc
movs
or
das
pop
(bad)
jns
dec
aam
xor
push
sub
push
aas
jp
push
ja
in
mov
test
dec
in
pcmpgtw
push
addr16
dec
mov
js
arpl
add
add
push
mov
mov
cmps
push
rol
jne
xchg
(bad)
adc
xchg
mov
and
jo
inc
mov
iret
test
and
mov
push
(bad)
iret
inc
rcl
(bad)
and
in
hlt
inc
test
lds
jecxz
fnstenv
test
add
jecxz
popf
data16
ret
and
adc
rcr
je
xor
sub
xchg
pop
jns
xor
and
xor
jg
mov
aaa
push
movs
and
push
lds
or
mov
loopne
aad
xor
add
popa
push
aaa
les
nop
push
movs
dec
inc
dec
lds
aas
mov
aam
and
pop
push
dec
aad
aas
push
div
popa
in
mov
test
in
movd
es
ins
mov
dec
cmc
pop
pop
jo
rcl
scas
gs
test
push
add
jne
xchg
mov
movs
mov
and
jo
inc
in
movs
test
mov
pusha
mov
xor
loopne
loop
sti
adc
inc
aad
call
push
xlat
add
push
ret
mov
shl
les
jmp
je
and
jne
lahf
aad
daa
pop
pop
test
shl
ds
add
or
sub
push
adc
cmp
push
lock
and
dec
xor
add
or
push
loopne
aad
xor
dec
(bad)
push
push
pop
les
outs
movs
jo
ins
lds
pop
(bad)
push
inc
inc
aam
cmp
push
aas
ins
test
in
mov
test
gs
in
cvtdq2ps
and
hlt
sbb
jne
cmc
popa
pop
inc
push
leave
xchg
scas
add
push
mov
add
mov
inc
mov
adc
ss
mov
and
jo
inc
call
iret
scas
mov
pusha
cwde
push
mov
mov
mov
xlat
push
in
repnz
movs
adc
and
in
scas
mov
add
push
in
add
xor
cld
mov
shl
clc
add
lock
data16
loop
jmp
retf
adc
repnz
call
data16
in
add
pop
xchg
pop
cmp
adc
es
xor
jg
mov
aaa
aas
movs
adc
and
inc
cmps
popa
daa
and
xor
aaa
(bad)
push
push
popa
les
nop
push
movs
push
inc
imul
inc
gs
and
push
js
jg
inc
neg
or
pop
mov
test
pop
in
cvtps2pd
pop
addr16
ins
mov
pop
cmc
je
push
push
scas
xchg
movs
add
push
stos
mov
add
mov
jne
xchg
adc
mov
and
jo
inc
mov
mov
mov
pusha
fwait
push
test
xchg
push
(bad)
mov
xlat
adc
and
loop
stc
inc
(bad)
(bad)
cli
push
test
xor
fistp
xchg
fs
out
mov
out
gs
shl
div
std
adc
ret
lahf
call
test
sar
or
adc
dec
pop
push
xchg
sub
adc
sub
inc
lock
cmp
dec
and
xor
add
and
es
xor
adc
push
dec
les
imul
das
fs
jb
gs
or
push
push
aad
aas
aaa
imul
dec
in
mov
test
jnp
pop
(bad)
out
addr16
hlt
inc
mov
push
push
adc
gs
test
push
xchg
xchg
jne
xchg
xchg
adc
lea
call
iret
aam
test
mov
xor
push
rcl
mov
xlat
adc
inc
shr
call
shl
les
jmp
in
gs
(bad)
cwde
data16
out
je
and
adc
cmps
lahf
mov
add
xor
test
and
xchg
adc
sbb
add
sub
inc
lock
lds
and
cmp
push
loopne
aad
xor
or
les
outs
movs
ins
inc
jp
ins
das
js
push
inc
jl
xor
cs
aas
das
mul
inc
in
mov
test
push
in
lsl
jl
jl
inc
mov
jb
push
pop
inc
push
ficom
call
out
mov
adc
inc
popf
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
mov
es
push
clc
mov
xor
repz
(bad)
inc
cmps
adc
and
(bad)
scas
out
inc
fcmovb
mov
xor
cwde
mov
(bad)
fs
retf
in
ror
ret
je
and
adc
mov
pop
adc
add
sbb
aaa
pop
bound
adc
movzx
aaa
sub
and
cmp
xor
sbb
js
inc
mov
pop
dec
(bad)
dec
push
dec
les
xor
push
inc
push
aam
adc
sub
mul
ja
or
jbe
push
sbb
inc
cmovbe
jne
gs
dec
mov
outs
cmc
fs
or
mov
xchg
add
push
jmp
add
mov
inc
in
test
jmp
and
jo
inc
nop
movs
cwde
and
mov
pusha
stos
push
cmps
mov
xor
aad
lock
ficom
mov
repz
scas
fild
(bad)
cmc
push
int3
add
xor
loop
stos
jbe
mul
shl
add
mov
frstor
out
je
and
adc
icebp
lahf
in
and
xor
adc
xor
xor
outs
jbe
or
or
and
setne
jg
mov
aaa
push
movs
pop
lock
sub
add
or
xor
es
jbe
dec
les
movs
push
inc
pop
lds
daa
mov
aam
cmp
push
sub
jne
push
imul
jno
pop
mov
test
sbb
out
addr16
inc
mov
add
inc
pop
pop
push
adc
gs
out
scas
push
mov
std
jne
xchg
nop
adc
mov
jo
inc
cmps
movs
fldenv
sahf
cmps
pushf
xor
pusha
mov
xor
leave
xlat
loopne
loopne
hlt
and
mov
clc
push
mov
push
sar
fs
xor
add
ret
(bad)
fisub
out
je
and
jne
lahf
in
push
pop
ja
xor
aaa
in
add
sub
or
jns
and
cmp
and
push
mov
aaa
and
and
pop
cmps
adc
cmp
xor
sub
inc
push
jbe
and
inc
lds
daa
(bad)
sbb
aam
adc
push
outs
aad
aas
jge
push
ja
in
mov
test
in
cmovs
jo
pmuludq
jg
arpl
cmc
pop
pop
dec
push
aam
add
mov
xchg
test
push
mov
adc
pushf
jne
xchg
xchg
adc
mov
mov
inc
mov
iret
movs
mov
pusha
lahf
push
(bad)
mov
xor
mov
jmp
and
xchg
scas
out
add
push
loope
(bad)
std
mov
jmp
leave
add
jmp
out
je
and
adc
fstp
add
add
and
xchg
adc
adc
inc
adc
adc
adc
add
sbb
pop
cmps
and
inc
mov
loopne
aad
xor
sub
les
jp
jp
dec
lds
pop
(bad)
push
inc
inc
aam
add
push
sub
gs
ja
push
ja
in
mov
test
ins
in
punpckhwd
push
addr16
hlt
adc
dec
cmc
cmp
pop
push
mov
mov
add
xchg
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
cwde
and
mov
sahf
push
xchg
mov
inc
fist
mov
out
(bad)
jmp
fst
mov
push
xchg
fbld
les
ror
stc
je
and
adc
ret
lahf
cli
xchg
adc
and
add
pop
xchg
rol
sub
ja
adc
sub
lds
and
sub
adc
cmp
add
sbb
push
pop
sub
adc
dec
les
movs
pop
inc
outs
lds
popa
mov
aam
cmp
push
jae
jbe
mul
push
in
mov
test
dec
in
cvtps2pd
inc
addr16
hlt
dec
mov
jno
and
jne
adc
mov
mov
adc
inc
mov
adc
mov
mov
shl
jmp
movs
cmps
cmps
xor
pusha
(bad)
push
xor
push
retf
inc
loopne
fsub
sahf
scas
retf
inc
mov
fcom
retf
aad
push
out
mov
fisub
out
add
mov
(bad)
out
je
and
adc
lock
out
xchg
aas
pop
aaa
test
shl
or
sub
jae
and
cmp
or
movs
inc
lock
cmp
dec
push
cmps
popa
daa
inc
mov
loopne
aad
xor
or
adc
les
movs
jnp
jns
dec
das
jp
push
inc
dec
aam
sub
jnp
jl
pop
aas
pop
div
pop
in
mov
test
pusha
in
(bad)
out
addr16
hlt
or
push
cmc
inc
pop
push
push
xchg
xchg
mov
gs
std
add
fld
mov
adc
mov
jo
inc
xchg
movs
xchg
mov
pusha
xchg
mov
xor
jmp
and
lock
fld
(bad)
not
fnsave
(bad)
mov
xchg
fs
xor
add
ret
(bad)
out
je
and
adc
aad
into
xchg
push
pop
jg
add
add
cmp
or
add
xchg
xor
mov
aaa
push
movs
adc
and
ss
das
cmps
data16
adc
aad
xor
cmp
inc
push
push
movs
jl
cmp
push
das
cmp
inc
inc
pop
aam
and
push
aas
push
pop
ja
in
mov
test
inc
in
packssdw
gs
push
mov
(bad)
cmc
jo
pop
push
rcl
mov
test
push
mov
mov
xchg
jne
xchg
lea
mov
jo
inc
xchg
movs
and
sahf
pusha
mov
xor
enter
sti
adc
and
xchg
scas
out
inc
(bad)
push
rol
fdiv
xchg
repnz
xor
add
mov
out
je
and
jne
lahf
retf
xchg
pop
pop
adc
add
and
xor
pop
test
push
xchg
and
add
imul
adc
xor
xor
push
lds
and
push
cmps
pusha
daa
add
aad
xor
sbb
les
xor
adc
inc
(bad)
outs
inc
pop
aam
adc
push
inc
aad
aas
ins
div
mov
test
gs
in
nop
and
hlt
popa
mov
pop
cmc
cmp
add
add
push
test
test
add
mov
mov
movs
jmp
and
jo
inc
stos
movs
and
cmps
xchg
pusha
mov
sahf
mov
xor
cmc
xlat
cld
inc
in
ret
and
hlt
scas
mov
push
rol
xor
fidivr
xchg
fnstenv
xlat
add
enter
in
shl
in
xlat
cmc
out
jne
lahf
mov
sub
ins
in
add
add
xadd
cmc
sub
jae
add
adc
and
or
aaa
loopne
aad
xor
dec
(bad)
inc
push
jbe
jns
jno
dec
inc
imul
jae
das
aam
adc
push
ja
add
ja
in
mov
test
adc
xor
arpl
pop
addr16
dec
mov
pop
cmc
push
pop
js
xchg
xchg
lea
test
mov
stos
adc
test
test
and
mov
call
mov
xor
in
xlat
test
and
aad
fild
(bad)
out
into
add
xor
fdivr
fbld
retf
add
test
je
and
jne
lahf
ficom
arpl
add
test
outs
sbb
adc
xor
adc
cmp
movs
cmp
xor
pop
and
and
adc
or
or
and
push
push
aaa
les
movs
push
inc
dec
lds
dec
(bad)
push
inc
push
aam
adc
push
ins
aad
aas
push
push
ja
in
mov
test
sbb
jle
sbb
and
ins
hlt
imul
ins
push
movs
xchg
mov
push
in
xchg
popf
push
xchg
xchg
jne
xchg
call
ss
jo
inc
out
movs
mov
loope
xchg
xor
pusha
popf
push
test
(bad)
push
in
call
and
(bad)
std
push
hlt
add
xor
idiv
xlat
shl
add
mov
out
je
and
adc
cli
lahf
rcl
adc
add
or
jae
push
cmc
sbb
imul
lock
sbb
and
das
daa
sbb
or
or
cmp
xor
les
nop
sub
ins
das
cmp
add
sub
push
dec
aad
aas
jnp
sub
mov
test
jb
outs
vmwrite
inc
addr16
push
mov
inc
cmc
das
pop
pop
push
adc
test
sub
push
scas
xchg
adc
inc
xor
test
test
(bad)
inc
mov
mov
test
sahf
push
mov
fist
inc
cld
adc
and
les
ficom
div
xchg
xchg
fs
xor
add
in
jmp
je
and
adc
fstp
adc
in
add
sbb
and
cmp
sub
cs
aaa
sub
lds
sbb
pop
loopne
aad
xor
cmp
les
movs
pop
inc
inc
lds
inc
(bad)
jb
inc
aam
cmp
push
push
aad
aas
pop
test
pop
mov
test
gs
in
unpcklps
cmp
hlt
imul
pop
push
lea
xchg
gs
test
push
scas
xchg
cmps
xchg
sahf
adc
mov
jo
inc
out
movs
fsub
xchg
cmps
(bad)
xor
pusha
cdq
push
movs
mov
xor
(bad)
ret
inc
loopne
leave
and
jecxz
fiadd
(bad)
aad
enter
into
aad
push
loop
fidiv
test
add
ror
icebp
je
and
adc
iret
lahf
ficom
xor
sbb
cmp
add
xchg
pop
cmp
cmc
push
adc
ja
push
aaa
add
and
pop
cmps
gs
cmp
xor
dec
(bad)
or
nop
dec
movs
outs
inc
pusha
lds
inc
and
push
sbb
push
jb
dec
aas
push
test
in
mov
test
pop
in
pcmpeqd
and
hlt
bound
or
cmp
jle
fist
xchg
mov
push
pushf
xchg
jne
xchg
cdq
adc
xor
inc
mov
mov
(bad)
cmps
mov
lods
pusha
test
mov
(bad)
push
loopne
mov
into
adc
and
cmc
scas
cmps
inc
mov
in
lahf
aad
push
lds
xchg
fs
xor
add
dec
aad
out
and
jne
lahf
fcom
add
jbe
dec
add
xchg
cmp
adc
add
imul
dec
lds
movs
or
add
aas
daa
ds
loopne
aad
xor
xor
gs
outs
les
inc
inc
lds
and
inc
daa
aam
and
aas
sub
dec
ja
in
mov
test
gs
in
cmove
arpl
hlt
push
mov
jns
popw
dec
push
mov
repz
push
mov
mov
inc
ret
xchg
jne
xchg
xchg
adc
in
mov
and
jo
inc
mov
sahf
and
xchg
pushf
push
lods
mov
xor
call
adc
inc
jmp
fcom
in
vpslld
mov
xlat
fs
xor
gs
(bad)
(bad)
out
je
and
adc
in
jmp
shr
in
add
sub
xchg
or
popa
cmc
ds
push
movs
xor
or
sbb
push
cmps
xor
or
or
aaa
aad
xor
aaa
(bad)
adc
les
dec
movs
push
das
ds
sbb
aam
sub
dec
push
push
aad
aas
xor
jle
inc
in
mov
test
inc
in
(bad)
out
addr16
data16
outs
cmc
inc
pop
push
push
scas
xchg
lea
push
lods
gs
test
push
xchg
xchg
stos
xchg
call
ss
mov
mov
mov
call
and
push
mov
(bad)
push
(bad)
inc
mov
(bad)
xchg
scas
loop
ffreep
not
shl
in
(bad)
imul
fs
xor
gs
shl
(bad)
je
and
adc
mov
pop
add
cmp
add
cmp
add
adc
sub
movs
and
or
adc
add
add
cmps
fs
daa
mov
loopne
aad
xor
cmp
push
push
push
les
xor
adc
xor
aam
adc
push
inc
aad
aas
sub
fs
in
mov
test
in
divps
cmp
hlt
inc
mov
push
cmc
js
jns
rcl
mov
xchg
test
push
mov
test
mov
pop
movs
movs
and
and
push
loopne
lea
xchg
xlat
call
and
imul
mov
xor
cmc
mov
ret
xor
add
mov
fbld
out
je
and
adc
rcr
das
test
push
in
add
add
jb
and
add
jg
mov
aaa
add
sbb
push
lds
adc
mov
loopne
aad
xor
ds
adc
les
movs
push
inc
jno
jno
jl
inc
inc
jnp
data16
push
pop
aad
aas
sub
popa
ja
in
mov
test
jl
pop
addr16
push
mov
push
cmc
and
push
push
adc
gs
test
push
scas
xchg
jne
xchg
hlt
adc
mov
cmps
inc
test
iret
pushf
es
cmps
mov
mov
mov
xor
mov
repnz
movs
adc
and
shr
rcl
shl
mov
mul
fiadd
aam
std
retw
out
je
and
cli
lahf
(bad)
xchg
push
pop
daa
test
pmulhw
adc
inc
pop
sub
daa
sar
cmp
mov
aaa
aas
movs
inc
lock
push
and
aas
cmps
add
adc
xor
adc
jne
xor
inc
nop
push
movs
push
inc
push
(bad)
sbb
aam
adc
push
sub
jae
inc
mul
adc
jg
inc
test
jg
inc
(bad)
out
addr16
hlt
ja
push
xchg
aas
jne
cmc
jb
je
lods
xchg
repnz
push
mov
add
nop
xchg
adc
inc
fwait
jne
xchg
jmp
(bad)
push
and
jo
inc
mov
mov
and
push
mov
fistp
inc
cld
adc
inc
(bad)
scas
fild
(bad)
in
push
in
add
fnstcw
xchg
fnstenv
test
movs
out
je
and
adc
mov
pop
aaa
test
add
je
cmp
sbb
cmc
sbb
jg
mov
aaa
adc
add
xor
xor
dec
or
adc
ss
xor
sbb
jg
dec
les
movs
jp
inc
lds
aas
mov
aam
cmp
push
dec
aad
aas
inc
imul
pop
in
mov
test
sbb
inc
orps
push
addr16
ins
mov
push
cmc
pop
pop
push
add
push
mov
test
push
xchg
xchg
mov
scas
adc
test
fiadd
movs
mov
scas
cmps
mov
push
xchg
mov
xor
enter
in
adc
and
xchg
scas
(bad)
inc
in
(bad)
hlt
push
stos
add
xor
cwde
mov
cld
fbstp
xlat
add
mov
out
je
and
adc
scas
lahf
test
and
push
in
add
and
and
pop
xchg
xor
and
xchg
adc
mov
aaa
sub
and
pop
cmps
xor
dec
mov
loopne
aad
xor
or
les
push
movs
dec
inc
inc
lds
xor
aam
sbb
push
sub
gs
dec
not
jl
jp
sbb
xor
jle
jg
outs
hlt
jo
push
xchg
and
cmc
push
pop
add
add
push
lock
test
add
xchg
xchg
xchg
xchg
mov
xor
inc
mov
mov
xchg
cmps
into
xor
pusha
xchg
push
sahf
mov
xor
jecxz
int
rcl
repz
shr
repz
retf
add
xor
out
mov
xchg
fs
xor
add
ror
out
nop
and
adc
stc
lahf
lock
push
pop
sub
add
je
adc
pop
xchg
or
daa
cmc
sub
cmp
movs
ss
lds
and
cmps
and
loopne
aad
xor
adc
push
nop
movs
or
das
(bad)
mov
aam
sub
push
inc
aad
aas
dec
imul
jbe
jae
je
jno
pop
in
cmovg
inc
addr16
ja
add
pop
pop
jae
leave
xchg
xchg
add
push
xchg
gs
out
mov
adc
inc
stos
jne
xchg
lea
mov
jo
inc
xchg
call
pusha
mov
xor
enter
mov
(bad)
aad
les
(bad)
(bad)
push
rol
loop
ret
push
fnstcw
enter
xchg
add
ret
(bad)
mul
out
je
and
jne
lahf
mov
adc
push
in
add
cmp
xor
and
push
adc
adc
pop
lock
jo
sbb
add
sbb
adc
inc
aad
xor
or
les
inc
and
push
das
inc
mov
gs
sbb
push
dec
aad
aas
push
test
in
mov
test
gs
in
minps
outs
outs
hlt
bound
push
cmc
inc
pop
jns
stos
xchg
jmp
mov
mov
add
jne
xchg
in
adc
mov
jo
inc
cmps
movs
and
mov
mov
xor
aad
iret
inc
ficom
lods
and
les
cmps
push
hlt
add
xor
ret
mov
out
(bad)
out
jmp
repnz
je
and
adc
rcr
test
shl
add
jnp
inc
pop
es
add
and
cmp
sub
add
mov
aaa
pop
movs
and
and
push
cmps
xor
xor
xor
push
(bad)
jle
xor
movs
inc
inc
jl
inc
das
jle
jb
push
aam
and
push
sub
not
pop
in
mov
test
add
xor
addr16
hlt
popa
mov
pop
cmc
push
pop
or
add
push
mov
add
mov
inc
cdq
jne
xchg
stos
adc
pushf
mov
and
jo
inc
mov
iret
test
mov
xchg
xor
pusha
xchg
push
lahf
mov
xor
int
repz
lods
adc
and
xchg
scas
jecxz
ffreep
out
repz
xor
in
mov
icebp
xor
add
(bad)
(bad)
loopne
mov
and
adc
loopne
rcl
xor
jp
add
outs
cmp
or
adc
adc
or
adc
sub
dec
pop
cmps
jns
adc
aaa
loopne
aad
xor
xor
arpl
les
nop
jae
jne
inc
lds
jle
inc
inc
push
aam
and
ins
aas
push
div
ja
in
mov
test
inc
in
punpckhwd
outs
outs
hlt
push
mov
jae
jp
add
mov
mov
push
mov
xchg
mov
adc
inc
call
dec
les
inc
mov
xchg
and
loopne
cdq
xor
pusha
fst
mov
xor
jecxz
test
and
shr
scas
push
aam
movs
xor
test
int
xchg
int
cmps
in
gs
jmp
and
jne
lahf
rcl
sbb
xor
dec
add
jl
pop
pop
sbb
adc
sub
es
movs
ins
dec
sub
mov
loopne
aad
xor
adc
bound
les
ins
movs
pop
inc
popa
lds
dec
(bad)
gs
js
cmp
push
push
aad
aas
jle
xor
in
mov
test
gs
dec
(bad)
out
addr16
hlt
inc
mov
push
cmc
jge
pushw
test
push
cmps
mov
mov
adc
inc
in
xchg
xchg
jmp
ss
mov
and
jo
inc
mov
xchg
cwde
cmps
mov
pusha
fwait
push
xchg
retf
xlat
mov
mov
(bad)
(bad)
scas
mov
push
repnz
xor
int
fnsave
test
add
mov
fwait
data16
out
je
and
adc
mov
pop
push
test
shl
in
add
xchg
pop
xor
adc
and
movs
pop
lock
or
and
xor
pop
aad
xor
xor
adc
les
pusha
movs
push
inc
lds
(bad)
inc
inc
aam
adc
push
sub
idiv
outs
in
mov
test
gs
in
cmovno
ja
pop
hlt
push
jne
cmc
push
pop
push
add
push
xchg
gs
test
push
mov
inc
mov
adc
mov
mov
inc
stos
movs
mov
mov
xor
mov
lea
test
xlat
iret
inc
mov
lds
inc
loope
rcl
out
xchg
aad
push
xchg
(bad)
fs
aam
int
shl
ret
out
je
and
adc
aam
not
popa
rol
test
jl
add
pop
xchg
aaa
rcr
cmp
and
jb
push
movs
daa
lock
outs
and
and
push
loopne
aad
xor
adc
pop
push
je
xchg
movs
cmovne
(bad)
jl
jae
pusha
and
ja
je
sbb
sub
popa
ja
in
mov
test
fs
punpckhbw
dec
addr16
hlt
adc
jne
cmc
and
dec
push
rcl
mov
xchg
test
push
mov
inc
mov
popf
xchg
test
ss
jo
inc
test
mov
lahf
cmps
mov
stos
pusha
mov
mov
xor
retf
inc
out
retf
and
mov
ficom
out
jmp
mov
shl
rol
out
(bad)
(bad)
data16
out
je
and
jne
lahf
(bad)
xchg
sub
aas
test
shr
in
add
cmp
sub
adc
sub
and
add
adc
inc
movs
push
dec
cmps
adc
adc
xor
add
les
js
dec
inc
dec
lds
push
mov
aam
and
pop
push
push
aad
aas
inc
mul
push
in
mov
test
jae
xor
adc
push
addr16
inc
mov
pop
cmc
push
pop
push
adc
mov
mov
adc
inc
lahf
jne
xchg
mov
(bad)
jmp
and
jo
inc
mov
test
mov
stos
movs
cmps
lods
xor
pusha
mov
xor
int
jmp
and
shr
movs
push
(bad)
add
xor
test
in
div
fwait
add
mov
lahf
data16
(bad)
je
and
jne
lahf
sti
xchg
sub
jle
jg
or
das
add
js
inc
pop
cs
sub
jge
sbb
pop
xchg
sub
aaa
or
and
cmps
aas
daa
pop
mov
loopne
aad
xor
dec
(bad)
inc
push
pusha
les
pop
movs
pop
inc
(bad)
lds
das
addr16
push
inc
jg
jge
cmp
aad
aas
jno
fs
in
mov
test
gs
push
lsl
push
addr16
hlt
dec
mov
jns
push
pop
js
rcl
xchg
mov
add
xchg
jne
xchg
stos
adc
xchg
mov
and
jo
inc
mov
mov
mov
cmps
xchg
pusha
fst
mov
xor
repnz
int3
inc
rcl
and
call
(bad)
int3
push
(bad)
add
xor
aad
movs
jbe
neg
add
mov
jecxz
std
out
je
and
adc
rcr
push
test
shr
in
add
and
add
sete
rcl
pop
adc
sub
cmp
xor
cmp
and
or
cmp
or
or
dec
push
dec
les
push
movs
jae
push
pusha
das
cmp
outs
inc
dec
aam
and
push
dec
aad
aas
sub
jl
push
in
mov
test
pop
in
cmova
bound
hlt
or
outs
cmc
jge
pop
push
mov
push
mov
add
mov
inc
mov
adc
xor
inc
cwde
movs
and
cmps
scas
xor
pusha
mov
mov
xor
jmp
adc
and
fild
mov
xor
out
mov
shl
add
mov
out
mov
and
adc
loop
fst
push
shl
test
outs
and
sub
add
pop
adc
or
cmp
adc
xor
daa
cmps
add
add
push
loopne
aad
xor
cmp
pop
push
dec
les
nop
imul
das
data16
sbb
cmp
arpl
aad
aas
jnp
inc
ja
in
mov
test
gs
pop
andps
and
hlt
inc
mov
je
dec
pop
jnp
xchg
xchg
mov
gs
push
xchg
xchg
jne
xchg
cwde
adc
mov
mov
inc
mov
iret
mov
xor
pusha
mov
xor
(bad)
xlat
loopne
out
adc
and
shr
mov
xor
icebp
mov
leave
fidiv
mov
jmp
je
and
adc
cmc
lahf
lds
aaa
rol
test
xchg
pop
and
adc
sub
xor
dec
lds
sbb
pop
daa
dec
mov
loopne
aad
xor
cs
push
push
les
nop
push
movs
pop
inc
ins
lds
ds
popa
inc
(bad)
aam
adc
push
dec
aad
aas
imul
ja
in
mov
test
dec
in
packsswb
outs
addr16
ins
mov
push
cmc
ins
pop
jp
leave
xchg
cmc
add
push
mov
test
push
cdq
xchg
jne
xchg
out
adc
xor
inc
xchg
fisub
stc
cmps
mov
push
xchg
rcl
xlat
rol
and
lds
lds
shl
mov
shl
call
(bad)
lahf
data16
shl
in
mov
lahf
lds
pusha
shr
dec
outs
sub
xor
daa
cmc
cmp
or
add
add
lds
and
push
cmps
add
dec
mov
loopne
aad
xor
xor
addr16
jo
gs
sub
lds
das
outs
(bad)
jns
pop
aam
and
jbe
dec
aad
aas
dec
neg
outs
in
mov
test
dec
in
cmovb
es
jae
jp
jg
push
push
stos
xchg
xchg
add
push
movs
gs
test
push
mov
inc
jecxz
pushf
xchg
mov
stos
mov
and
jo
inc
jmp
test
stos
iret
stos
es
scas
xor
pusha
cwde
push
mov
fistp
inc
out
adc
and
jmp
fiadd
(bad)
hlt
push
mov
lds
sar
int3
(bad)
fadd
int
lds
out
je
and
jne
lahf
rcl
rol
and
xchg
pop
jge
jl
xor
cmp
outs
mov
aaa
dec
movs
push
lock
lds
and
or
sub
inc
aad
xor
cmp
jl
push
les
movs
inc
dec
lds
(bad)
jp
dec
aam
add
push
push
aad
aas
push
fs
in
mov
test
gs
cmovnp
jle
outs
hlt
push
mov
popa
cmc
popw
jnp
test
in
add
push
mov
add
test
mov
adc
xchg
scas
inc
hlt
movs
mov
xchg
iret
(bad)
std
cmps
xchg
mov
xor
jmp
retf
inc
fst
retf
korw
scas
loopne
repnz
aad
jmp
aad
push
xchg
shl
repnz
ror
xor
adc
aam
retf
xchg
sub
cmp
push
shl
adc
je
xor
xchg
xor
add
cmp
adc
add
push
lds
and
cmp
or
aas
mov
loopne
aad
xor
push
(bad)
adc
ja
inc
nop
jbe
push
inc
inc
lds
dec
(bad)
push
inc
push
aam
and
outs
aad
aas
push
test
push
mov
test
jns
push
nop
jae
add
dec
mov
dec
cmc
js
pop
push
mov
xchg
push
mov
scas
test
push
lds
mov
mov
mov
mov
int
fwait
movs
(bad)
and
call
push
mov
popf
push
enter
lock
inc
shr
push
jmp
div
(bad)
mov
enter
rol
loope
retf
data16
fidiv
lds
jecxz
repz
push
pop
jb
sbb
sub
test
pop
push
xchg
xor
daa
cmc
or
xor
movs
add
pop
lds
and
cmp
adc
sbb
mov
pop
cmp
pop
push
dec
les
dec
movs
dec
inc
pop
lds
inc
(bad)
cmova
push
push
add
aad
aas
push
mul
dec
in
mov
test
arpl
jle
pop
out
addr16
dec
mov
dec
cmc
dec
pop
or
test
lock
out
popf
push
mov
inc
mov
adc
xchg
mov
and
jo
inc
mov
iret
mov
and
push
push
lods
push
xlat
xlat
cmc
inc
aad
icebp
and
(bad)
scas
jmp
std
(bad)
out
cld
add
xor
iret
mov
sahf
fs
xor
les
ret
and
adc
mov
pop
jne
jg
pop
in
add
adc
xchg
sbb
adc
adc
or
shld
push
lds
movs
cmp
daa
add
xor
cmp
adc
jne
es
jnp
inc
and
push
das
pop
(bad)
jae
cmp
inc
sbb
push
inc
aad
aas
push
in
mov
test
inc
in
nop
je
pop
hlt
addr16
popa
jne
cmc
js
dec
push
adc
mov
lds
std
jne
xchg
stos
adc
test
cmps
and
jo
inc
out
shl
xchg
rcl
mov
mov
xlat
xlat
inc
mov
(bad)
in
fadd
(bad)
std
push
ret
xor
sti
mov
lds
aam
clc
in
lods
(bad)
out
je
and
adc
mov
pop
jno
rol
in
add
or
sar
or
pop
mov
aaa
and
lds
and
data16
inc
mov
loopne
aad
xor
sub
push
push
les
js
pop
inc
ins
lds
pop
(bad)
push
inc
fs
and
push
outs
aad
aas
pop
neg
pop
in
mov
test
inc
in
(bad)
out
addr16
addr16
inc
jne
cmc
pop
pop
je
aad
inc
push
hlt
cmps
test
push
xchg
xchg
jne
xchg
mov
cmps
mov
and
jo
inc
mov
iret
mov
xor
pusha
cmps
push
popf
mov
xor
mov
jmp
movs
adc
and
nop
scas
jmp
add
xor
loopne
enter
leave
fs
xor
add
ror
div
not
neg
adc
shr
in
add
sbb
xor
cmp
cmc
pop
adc
sub
inc
lock
aaa
and
push
cmps
bound
sbb
aad
xor
ss
or
nop
dec
movs
js
lds
das
outs
(bad)
jl
push
aam
and
push
dec
aad
aas
jns
jo
dec
in
mov
test
pop
in
packuswb
jne
gs
pop
mov
push
cmc
and
ja
aad
stos
add
push
lea
test
push
mov
adc
out
mov
call
and
jo
inc
xchg
movs
and
cmps
test
pusha
mov
stos
mov
xor
lahf
xlat
test
loope
icebp
scas
hlt
inc
stc
(bad)
rcl
repz
loope
push
div
xchg
fwait
add
ror
test
repz
mov
pop
and
in
add
and
xadd
cmc
inc
adc
sbb
inc
lock
lds
and
and
push
loopne
aad
xor
adc
addr16
inc
les
inc
cmp
pop
das
and
jo
push
aam
add
push
push
aad
aas
push
neg
in
mov
test
jne
jl
pop
hlt
jbe
inc
xchg
bound
cmc
jbe
jno
aam
xchg
add
push
scas
gs
test
cwde
xchg
jne
xchg
in
adc
mov
jo
inc
call
iret
(bad)
lods
cmps
cmps
xor
pusha
mov
cld
mov
xor
(bad)
inc
cmps
adc
and
out
scas
aam
in
(bad)
rcl
shl
loope
mov
out
in
xor
add
cmc
(bad)
loopne
out
out
je
and
adc
clc
lahf
call
test
and
dec
add
sub
xchg
ja
pusha
cmc
sub
adc
movs
inc
lock
sbb
pop
movs
jno
sub
mov
loopne
aad
xor
push
(bad)
ins
push
push
inc
nop
push
movs
push
inc
pop
lds
jg
pop
inc
jl
and
push
imul
dec
ja
in
mov
test
outs
in
subps
and
hlt
dec
mov
adc
push
pop
jo
rcl
mov
test
push
mov
jmp
dec
(bad)
inc
lods
movs
mov
es
cmps
lahf
xor
pusha
cmps
push
mov
fistp
inc
rcl
lds
mov
jecxz
xlat
add
xor
ret
mov
cld
fnstenv
xchg
add
cmc
(bad)
out
movs
out
je
and
adc
loopne
enter
push
test
xor
adc
je
pop
pop
adc
sbb
adc
ins
mov
aaa
pop
movs
inc
lock
lds
and
push
cmps
xor
inc
mov
loopne
aad
xor
sbb
or
les
nop
inc
movs
jp
pop
lds
mov
pop
mov
push
jo
jle
je
ins
ja
in
mov
test
gs
in
pcmpgtb
inc
addr16
outs
mov
dec
cmc
es
push
push
cmps
xchg
hlt
add
push
mov
xchg
test
push
mov
inc
std
jne
xchg
mov
fwait
jmp
and
jo
inc
mov
iret
cdq
es
pusha
call
(bad)
push
rcl
inc
mov
(bad)
xchg
scas
lds
(bad)
(bad)
push
enter
sti
aad
push
cmc
mov
shl
add
ret
data16
out
je
and
adc
stc
lahf
ficom
and
add
push
add
sub
add
add
add
cmp
push
lock
adc
sbb
adc
xor
cmp
pop
push
outs
les
inc
movs
push
inc
cmp
push
das
inc
(bad)
push
inc
jo
xor
sub
data16
inc
div
gs
mov
test
pop
in
packsswb
outs
addr16
data16
push
cmc
jno
movlhps
xchg
xchg
add
push
xchg
gs
out
xchg
rol
jne
xchg
mov
icebp
mov
and
jo
inc
jmp
es
pusha
mov
xor
(bad)
xlat
aam
rcl
and
lds
lock
rol
lds
fdivr
leave
fs
rol
retf
mul
xor
adc
mov
pop
imul
outs
cmp
and
sbb
adc
aas
mov
aaa
sub
and
pop
cmps
and
sub
sub
daa
aad
xor
push
(bad)
imul
movs
inc
inc
cmp
push
das
cmp
addr16
jnp
push
push
sub
jl
dec
not
jbe
pop
mov
test
arpl
bound
dec
out
ins
hlt
inc
mov
adc
pop
pop
jno
lea
xchg
test
fld
xchg
jne
xchg
test
mov
mov
cmps
movs
fsub
mov
pusha
xchg
push
mov
lods
push
rcl
retf
adc
and
repz
in
inc
int3
(bad)
out
repz
push
sar
in
fs
xor
add
mov
out
je
and
adc
jecxz
clc
xchg
add
jo
pop
shl
test
outs
xchg
pop
gs
or
add
sbb
cmp
sbb
pextrw
adc
sbb
cmp
xor
aaa
(bad)
pop
push
inc
les
dec
movs
pop
inc
(bad)
lds
dec
(bad)
sbb
aam
cmp
push
ins
aad
aas
push
div
ja
in
mov
test
push
in
unpcklps
inc
addr16
dec
mov
push
cmc
and
xchg
mov
mov
test
push
add
jmp
mov
jo
inc
out
movs
scas
and
in
xchg
xor
pusha
popf
push
clc
mov
xor
jmp
and
jmp
(bad)
push
leave
add
xor
cld
mov
out
fs
xor
mov
cdq
data16
out
int
icebp
adc
les
sub
add
jge
dec
pop
xor
adc
sbb
movs
inc
lock
ins
and
adc
cmp
pop
mov
loopne
aad
xor
xor
pop
push
dec
les
movs
inc
jnp
ins
das
dec
(bad)
jne
pusha
aam
sbb
push
and
js
jg
xor
in
mov
test
jp
xor
sbb
dec
addr16
jb
addr16
pop
jne
cmc
inc
pop
dec
push
pushf
xchg
stos
add
push
mov
add
sahf
xchg
jne
xchg
xchg
adc
repnz
and
jo
inc
lock
test
mov
pusha
test
mov
xor
(bad)
inc
in
adc
and
imul
cmps
push
in
add
xor
xchg
fisub
into
add
hlt
(bad)
loop
iret
out
je
and
adc
scas
lahf
test
ins
ror
push
outs
add
cmp
adc
adc
inc
lock
movs
add
cmps
xor
loopne
aad
xor
adc
dec
push
xor
movs
push
inc
inc
lds
mov
aam
cmp
jo
push
pop
ja
in
mov
test
in
(bad)
out
addr16
hlt
dec
mov
ins
cmc
das
pop
jo
ficom
xchg
test
push
cmps
xchg
lods
xchg
lods
adc
mov
jo
inc
mov
iret
mov
xor
pusha
retf
push
test
nop
push
(bad)
xlat
test
and
(bad)
cmps
push
in
add
xor
(bad)
mov
loop
(bad)
xor
gs
(bad)
fsub
out
je
and
adc
mov
pop
jg
sbb
jb
das
add
xor
add
add
adc
sub
add
or
sbb
pop
cmps
jge
xor
xor
das
(bad)
jle
inc
les
xor
lds
mov
pop
aam
adc
push
jle
inc
aas
not
in
mov
test
gs
in
andnps
jb
push
hlt
jbe
popa
xchg
jg
or
outs
pop
push
push
xchg
xchg
lods
add
push
and
in
(bad)
out
mov
adc
inc
out
xchg
xchg
jmp
ss
mov
and
jo
inc
mov
iret
mov
cmps
cmps
fwait
xor
pusha
mov
call
push
iret
xlat
mov
sti
adc
and
shr
(bad)
push
loop
mov
push
fstp
cld
shl
hlt
add
ror
je
and
adc
mov
pop
aaa
test
shl
in
add
je
and
add
adc
cmp
inc
lock
lds
and
sub
ss
xor
dec
(bad)
dec
push
push
les
imul
jg
pusha
aam
cmp
push
push
idiv
outs
in
mov
test
gs
in
orps
cmp
hlt
inc
mov
dec
cmc
js
ins
push
scas
xchg
add
test
push
scas
xchg
adc
inc
mov
xchg
scas
adc
test
lods
and
jo
inc
jmp
xchg
mov
pusha
sahf
push
loopne
shl
ret
inc
rcl
mul
out
scas
rol
sti
push
out
cmps
xor
pushf
mov
int3
xor
loop
lds
fdiv
test
aam
test
push
ror
in
add
jge
sbb
daa
xchg
xor
ds
sbb
sbb
add
pop
lds
and
push
cmps
pop
daa
cmp
xor
adc
push
push
les
ins
movs
ja
jb
inc
das
push
(bad)
dec
inc
cmp
mov
push
dec
aad
aas
push
imul
adc
push
mov
test
in
cvtdq2ps
inc
addr16
hlt
adc
adc
and
xchg
lods
add
push
mov
test
push
mov
inc
mov
adc
mov
mov
movs
test
mov
mov
xor
pusha
nop
push
xor
push
in
xlat
inc
mov
lds
aam
iret
push
jmp
push
repz
into
xor
add
into
(bad)
(bad)
out
je
and
adc
mov
pop
xor
in
add
xchg
sbb
cmc
or
cmp
adc
sub
lds
and
sbb
mov
loopne
aad
xor
sub
jae
jbe
jle
jne
dec
inc
jl
jle
pop
(bad)
popa
inc
(bad)
aam
cmp
push
inc
aad
aas
jg
xor
in
mov
test
sbb
xor
addr16
hlt
pop
mov
pop
cmc
and
pop
push
movs
xchg
lock
push
test
add
mov
jne
xchg
in
adc
repnz
and
jo
inc
out
mov
es
pusha
mov
mov
(bad)
push
(bad)
into
inc
movs
adc
and
(bad)
scas
hlt
inc
into
(bad)
loopne
lock
xor
icebp
mov
enter
rol
mov
fldenv
out
je
and
adc
cli
lahf
repnz
or
sub
add
cmp
and
add
cmp
jg
mov
aaa
daa
movs
add
push
lds
and
push
cmps
sbb
xor
xor
push
(bad)
adc
les
push
movs
jge
dec
lds
dec
(bad)
push
inc
inc
aam
cmp
push
jl
add
dec
neg
or
test
inc
in
movq
pop
addr16
xchg
push
inc
cmc
and
dec
push
xchg
xchg
mov
lea
mov
push
cmps
xchg
jne
xchg
out
adc
mov
and
xchg
inc
mov
mov
es
cmps
mov
push
mov
fild
inc
ficom
xlat
and
loope
hlt
inc
loopne
call
aam
out
fist
mov
fisub
aam
xlat
in
gs
ret
data16
out
je
and
adc
int
mov
and
xor
sbb
jle
add
xchg
shr
or
push
imul
cmp
imul
adc
dec
loopne
aad
xor
adc
arpl
les
dec
movs
adc
outs
lds
das
cmp
fs
pop
aam
cmp
push
push
aad
aas
push
div
push
in
mov
test
pop
in
nop
and
hlt
jge
sbb
cmc
jge
dec
push
movs
xchg
movs
add
push
in
gs
add
xchg
xchg
adc
inc
mov
adc
xor
inc
mov
sahf
es
mov
push
mov
fisttp
inc
rcl
repz
sahf
scas
mov
push
fiadd
cmps
xor
fistp
jmp
add
xlat
(bad)
cmc
data16
popf
je
and
adc
rcr
or
add
je
push
pop
adc
adc
cmp
or
and
cmp
cmp
sub
jge
or
(bad)
gs
arpl
and
movs
dec
inc
jae
jle
push
(bad)
push
inc
push
aam
add
push
sub
pop
aas
jo
push
ja
in
mov
test
jle
addr16
pusha
mov
pop
cmc
and
add
add
push
mov
cwde
test
add
lds
mov
call
mov
jo
inc
lods
movs
mov
popf
cmps
popf
xor
pusha
sahf
push
cmps
mov
xor
rcl
repnz
(bad)
adc
inc
xchg
scas
enter
mov
xor
(bad)
mov
lea
mov
vcvtpd2dq
aad
(bad)
jne
lahf
rcl
arpl
adc
test
pop
jge
push
rcl
cmp
adc
inc
jg
mov
aaa
aas
movs
cmp
adc
push
pop
movs
sub
daa
adc
aad
xor
adc
les
nop
movs
je
inc
lds
and
cmova
aam
and
push
push
fs
dec
test
in
mov
test
(bad)
in
cmovs
ins
addr16
push
mov
or
jp
jno
test
scas
mov
popf
push
cmps
xchg
jne
xchg
mov
mov
jo
inc
mov
mov
mov
pusha
les
mov
xor
ret
xlat
mov
and
in
mov
ret
(bad)
repz
repz
xor
sar
repz
jecxz
retf
in
ror
out
je
and
adc
in
lahf
ficom
sar
in
add
sbb
xchg
adc
cmp
or
xor
adc
pop
movs
add
and
cs
and
daa
loopne
aad
xor
(bad)
dec
push
les
dec
movs
pop
inc
push
mov
aam
add
push
xor
inc
aas
and
in
mov
test
push
in
maxps
inc
addr16
hlt
sbb
jne
cmc
je
pushw
xchg
xchg
inc
test
push
add
jne
xchg
mov
ss
mov
and
jo
inc
mov
mov
xor
pusha
rcl
int
loope
les
xlat
ret
adc
and
xchg
scas
int
out
out
push
into
add
push
cli
mov
iret
fs
(bad)
add
out
pop
data16
out
je
and
jne
lahf
mov
sbb
add
pop
xchg
pop
sbb
adc
sub
add
das
movs
sbb
xor
movs
jne
sbb
xor
loopne
aad
xor
add
les
push
movs
pop
inc
pusha
lds
data16
aam
add
push
push
aad
aas
inc
imul
dec
in
mov
test
dec
in
cmovae
pop
addr16
jb
imul
pop
jp
adc
mov
push
movs
xchg
jne
xchg
jmp
cmp
lods
and
jo
inc
out
stos
and
and
push
lods
mov
xor
xchg
xlat
out
inc
ret
and
jmp
(bad)
icebp
push
fadd
hlt
xor
xchg
int
fwait
xor
add
ror
fidiv
sti
adc
into
lahf
enter
cmp
cmp
je
ss
arpl
push
rol
es
push
mov
aaa
push
movs
cmp
sub
pop
and
pop
cmps
adc
sbb
aad
xor
cmp
push
push
pop
les
nop
push
movs
jae
inc
lds
das
daa
(bad)
fs
addr16
and
arpl
aad
aas
outs
not
dec
in
mov
test
pop
in
nop
cmp
mov
pop
cmc
push
pop
outs
push
movs
xchg
xchg
add
push
mov
mov
inc
mov
in
cdq
xchg
jmp
mov
and
jo
inc
mov
iret
stos
es
mov
push
cld
mov
xor
jmp
adc
and
ret
inc
ret
push
mov
aad
push
xchg
xchg
xor
add
in
jmp
out
je
and
jne
lahf
les
adc
xor
sbb
sbb
xchg
pop
jge
and
aas
cmc
and
outs
mov
aaa
push
movs
cmp
lds
and
cmps
xor
cmp
aad
xor
aas
(bad)
push
push
inc
les
push
movs
outs
inc
pop
lds
cmp
aam
cmp
and
jno
outs
test
in
mov
test
pop
in
minps
jg
pop
hlt
inc
mov
dec
cmc
arpl
inc
push
mov
push
movs
mov
mov
add
jne
xchg
jmp
xor
inc
popf
movs
fsub
mov
popf
xor
pusha
cmps
push
mov
xchg
push
(bad)
xlat
out
repnz
and
icebp
scas
retf
mov
xor
loope
jmp
fs
add
mov
(bad)
repz
je
and
jne
lahf
rcl
cmp
or
push
add
sbb
sub
and
pop
adc
adc
movs
pop
lock
aaa
and
das
cmps
(bad)
inc
mov
loopne
aad
xor
cmp
push
push
push
les
imul
add
aam
add
push
push
aad
aas
sub
pop
ja
in
mov
test
gs
in
cmovno
jg
push
hlt
push
mov
inc
cmc
js
dec
push
mov
mov
call
gs
loopne
movs
out
mov
xchg
mov
adc
xor
inc
xchg
movs
mov
xchg
cdq
push
mov
lods
push
in
enter
aad
test
inc
out
scas
rol
in
push
jmp
aad
push
aad
lock
neg
fs
xor
add
mov
out
je
and
adc
rcr
xor
add
or
jae
popa
cmc
add
sub
cmp
sub
je
pop
movs
aaa
dec
or
push
loopne
aad
xor
push
(bad)
adc
les
nop
xor
ins
inc
dec
lds
popa
(bad)
push
inc
jne
imul
sub
arpl
in
mov
test
gs
in
punpcklbw
push
addr16
hlt
pusha
mov
pop
cmc
pop
pop
outs
push
scas
xchg
mov
gs
mov
fld
mov
xchg
in
adc
nop
mov
and
jo
inc
movs
movs
lahf
and
movs
cmps
mov
push
mov
shl
(bad)
xlat
repz
ret
adc
inc
jmp
fst
enter
rcl
test
iret
mul
fs
test
cmps
out
je
and
adc
(bad)
lahf
mov
rcl
in
add
sub
xor
pop
cmc
pop
adc
or
and
xor
ss
cmp
push
loopne
aad
xor
adc
les
jae
gs
inc
lds
das
arpl
jne
push
aam
cmp
jp
push
not
ja
jp
test
inc
in
pcmpgtb
pop
addr16
hlt
push
js
pop
jne
cmc
and
pop
push
mov
xchg
add
push
jmp
add
fld
test
xchg
loop
mov
mov
and
jo
inc
xchg
movs
mov
and
xchg
xor
icebp
xlat
mov
and
imul
loop
loope
lock
sar
xor
add
enter
movs
out
je
and
adc
ret
lahf
fcom
xor
add
test
outs
cmp
cmp
adc
push
xor
sub
and
sub
sub
sbb
and
ss
push
push
push
les
jbe
dec
inc
jg
je
cmp
aam
or
push
pop
aad
aas
jle
pusha
ja
in
mov
test
(bad)
out
addr16
hlt
push
mov
push
cmc
daa
pop
outs
push
test
fwait
gs
mov
push
pushf
xchg
jne
xchg
xchg
adc
lea
cmps
inc
mov
mov
es
cmps
mov
push
stos
mov
xor
out
xlat
fiadd
mov
out
(bad)
mov
loopne
jmp
mov
push
(bad)
mov
out
fs
xor
add
loop
fsub
out
je
and
adc
fistp
and
add
add
sub
gs
and
cmp
pop
lock
sbb
sbb
adc
xor
xor
cmp
les
movs
push
inc
jno
dec
das
inc
mov
aam
and
inc
aas
push
not
in
mov
test
gs
cmovo
inc
addr16
ins
mov
arpl
push
pop
or
mov
mov
sahf
test
push
nop
xchg
adc
inc
mov
adc
cmc
mov
and
jo
inc
xchg
movs
fisub
xchg
cmps
mov
push
mov
xchg
push
xchg
xlat
rol
out
fld
jecxz
shr
rcl
cmps
xor
cmp
rol
pop
data16
out
je
and
adc
scas
lahf
mov
add
xor
xor
jge
and
aaa
xchg
and
jge
and
jg
mov
aaa
push
movs
pop
lock
pop
movs
xor
cmps
aas
daa
and
xor
inc
(bad)
jne
(bad)
les
xor
lds
cmp
ins
inc
and
je
je
jnp
dec
aad
aas
imul
ja
in
mov
test
gs
dec
nop
jge
jg
ja
pop
xchg
pop
jne
cmc
je
or
add
push
movs
mov
push
mov
inc
xchg
jne
xchg
mov
xor
inc
fwait
movs
fwait
and
mov
cdq
xor
pusha
lds
mov
xor
xchg
xlat
mov
ficom
call
inc
lock
retf
(bad)
lock
lock
push
loopne
aad
int
jmp
in
ror
je
and
adc
loop
mov
and
add
ds
and
jne
sbb
sub
jg
mov
aaa
adc
and
and
and
loopne
aad
xor
push
(bad)
dec
push
push
les
pop
movs
pop
inc
jnp
pop
das
cmp
aam
xor
push
jae
inc
aas
sub
outs
ja
in
mov
test
(bad)
in
cmova
inc
addr16
sbb
jg
pop
jne
cmc
popw
dec
push
mov
mov
xchg
push
mov
int
clc
add
movs
xchg
jne
xchg
mov
ss
mov
and
jo
inc
in
movs
mov
es
cmps
mov
push
mov
retf
push
into
xlat
test
and
xchg
scas
aad
stc
(bad)
fcom
fdiv
jecxz
into
jbe
imul
fs
rol
aad
fsub
out
je
and
adc
mov
pop
add
add
jl
inc
pop
ds
jne
add
add
jg
mov
aaa
shld
adc
and
and
adc
push
xor
xor
je
outs
les
je
pop
inc
pop
lds
(bad)
bound
aam
and
push
jns
push
aas
pop
test
add
inc
in
nop
jge
dec
hlt
dec
mov
dec
cmc
popw
jp
xchg
xchg
add
mov
xchg
test
push
mov
inc
stos
jne
xchg
mov
mov
mov
inc
mov
iret
mov
xor
pusha
mov
cwde
mov
xor
ret
xlat
fild
mov
int3
(bad)
in
mov
out
push
leave
add
xor
std
mov
(bad)
fs
in
add
ror
je
and
adc
scas
lahf
in
ss
or
add
add
ja
addr16
add
xor
and
push
lds
and
and
add
aas
aad
xor
and
les
dec
movs
jne
inc
lds
push
aam
sub
imul
imul
ja
in
mov
test
gs
xor
adc
pop
addr16
hlt
push
mov
jp
outs
pop
jno
xchg
cli
gs
scas
add
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
test
mov
in
mov
push
div
mov
inc
jecxz
xlat
and
in
mov
rcl
xor
cwde
mov
(bad)
fs
add
std
(bad)
aam
repz
je
and
adc
(bad)
lahf
lds
cmp
aaa
in
add
jbe
jo
gs
and
jg
mov
aaa
aaa
movs
or
xor
adc
xor
outs
daa
sbb
aad
xor
dec
(bad)
push
push
dec
les
push
movs
inc
cmp
push
das
push
ja
dec
aam
add
push
jge
dec
aas
jns
inc
ja
in
mov
test
sbb
dec
pcmpeqd
pop
addr16
push
mov
push
cmc
cmp
push
push
lea
mov
add
cdq
xchg
jne
xchg
mov
ss
jo
inc
popf
movs
mov
call
cmps
mov
push
mov
fbld
mov
(bad)
mov
cmc
push
mov
fnsave
lds
(bad)
fs
xor
add
ror
xor
fidiv
lahf
aam
sub
or
add
daa
xchg
pop
pop
xchg
shl
inc
adc
gs
aaa
add
and
and
mov
loopne
aad
xor
push
(bad)
push
push
arpl
jb
outs
movs
jno
inc
lds
inc
(bad)
jo
arpl
and
push
jne
pop
aas
dec
test
in
mov
test
popa
in
punpckldq
inc
addr16
outs
mov
jno
inc
pop
dec
push
aad
test
gs
loopne
fucomip
test
nop
xchg
jne
xchg
mov
push
lea
movs
and
cmps
les
pusha
stos
push
movs
mov
xor
jecxz
jmp
and
aad
fiadd
(bad)
icebp
push
lds
retf
aad
push
lds
repz
add
repnz
data16
out
je
and
adc
rcr
adc
add
push
xchg
outs
xchg
add
add
xchg
inc
jg
mov
aaa
pop
movs
xor
xor
cmp
cmps
gs
push
mov
loopne
aad
xor
cs
push
push
je
dec
nop
movs
jle
dec
lds
das
xor
ins
inc
das
aam
cmp
push
aad
aas
jns
outs
ja
in
mov
test
dec
in
nop
pop
addr16
hlt
dec
mov
add
push
pop
js
adc
gs
test
shr
hlt
push
mov
inc
stc
jne
xchg
hlt
adc
nop
mov
and
jo
inc
mov
pushf
and
mov
pusha
mov
mov
xchg
push
int
mov
mov
(bad)
repz
out
inc
loop
(bad)
push
hlt
add
xor
out
mov
mul
retf
add
xlat
(bad)
hlt
data16
aad
in
jmp
(bad)
cmc
loope
cmc
lahf
rcl
or
add
xchg
pop
xor
adc
sub
inc
lock
lds
cmps
add
inc
mov
loopne
aad
xor
sub
jle
inc
les
arpl
jg
jp
push
inc
pop
aam
and
outs
push
jge
inc
aas
dec
test
in
mov
test
gs
in
movd
jl
pop
hlt
jl
bound
and
jae
adc
gs
out
mov
adc
inc
movs
jne
xchg
mov
lods
mov
and
jo
inc
mov
scas
and
mov
pusha
xchg
push
cwde
mov
xor
rcl
inc
out
lds
jmp
mov
xor
into
mov
xlat
fs
xor
add
(bad)
(bad)
out
in
xchg
out
(bad)
cmc
loope
(bad)
lahf
test
xor
adc
dec
add
adc
xchg
adc
ss
pop
adc
aas
mov
aaa
add
and
daa
cmps
data16
and
aad
xor
dec
(bad)
pop
push
push
sub
inc
lds
data16
popa
inc
gs
and
push
outs
aad
aas
pop
div
adc
jae
test
in
punpcklwd
inc
addr16
hlt
dec
mov
pop
cmc
jp
pop
push
stos
xchg
mov
xchg
push
mov
popf
test
push
cmps
xchg
jne
xchg
jecxz
cmp
ss
mov
fbstp
inc
cmps
movs
fldenv
nop
cmps
mov
movs
pusha
cdq
push
mov
mov
inc
lock
out
scas
jmp
push
retf
add
xor
out
fidiv
not
push
mov
test
ret
cmc
shl
test
adc
xor
pop
add
cmp
sub
sbb
sbb
gs
aaa
sub
and
cmp
adc
push
aad
xor
sub
push
inc
les
jbe
addr16
outs
lds
data16
jle
jnp
dec
or
push
push
aad
aas
jbe
dec
ja
in
mov
test
gs
outs
(bad)
out
addr16
hlt
jb
sbb
cmc
and
outs
push
rcl
cmc
gs
test
mov
inc
mov
adc
sahf
mov
and
jo
inc
mov
iret
and
cmps
test
pusha
test
mov
xor
in
xlat
inc
test
inc
out
scas
lds
(bad)
loope
ret
add
xor
int
jmp
xor
add
iret
(bad)
in
data16
out
je
and
movs
lahf
(bad)
xchg
movhps
and
and
adc
and
sub
cmp
pop
adc
xor
pop
lock
push
and
sub
push
loopne
aad
xor
sub
inc
push
xor
movs
pop
inc
arpl
inc
das
dec
mov
inc
aam
cmp
push
(bad)
aad
aas
dec
test
in
mov
test
sbb
dec
punpcklbw
push
addr16
hlt
push
mov
jae
and
jnp
sahf
xchg
jmp
mov
mov
adc
inc
out
lahf
xchg
xchg
adc
xchg
mov
and
jo
inc
stos
movs
cmps
and
(bad)
cmps
mov
push
test
fbld
inc
out
les
out
scas
loop
add
stc
xor
cmc
mov
in
fbstp
les
iret
(bad)
sti
data16
and
adc
ret
lahf
clc
xchg
adc
adc
add
js
and
outs
xchg
or
arpl
or
sbb
jo
sub
and
xor
mov
loopne
aad
xor
sbb
imul
movs
jno
jg
pusha
das
arpl
ins
inc
pop
aam
add
push
jp
jo
outs
idiv
jae
jb
je
gs
dec
unpcklps
outs
addr16
hlt
ins
mov
add
pop
pop
pushw
mov
xchg
gs
out
mov
adc
inc
stc
jne
xchg
nop
adc
xchg
mov
and
jo
inc
fwait
movs
mov
mov
pusha
lds
mov
xor
cld
xlat
repnz
xlat
adc
and
ret
scas
ret
inc
cmc
(bad)
hlt
push
lds
xlat
xor
out
mov
loope
(bad)
xor
add
jmp
je
and
adc
out
lahf
mov
pop
shl
in
add
jle
and
fs
jb
add
add
cmp
add
and
push
cmps
xor
push
mov
loopne
aad
xor
cmp
bound
les
jae
jno
jae
adc
push
mov
dec
sbb
push
sub
push
aas
xor
dec
ja
in
mov
test
inc
out
addr16
hlt
outs
mov
pop
cmc
jnp
jnp
mov
mul
test
push
mov
inc
jmp
call
and
jo
inc
xchg
movs
test
mov
pusha
adc
call
xlat
retf
inc
ret
adc
and
retf
scas
sti
inc
xlat
(bad)
in
push
loopne
out
loopne
lods
push
(bad)
mov
iret
lea
mov
lds
xor
adc
les
add
add
sub
xchg
shl
pop
adc
pop
mov
aaa
push
movs
xor
adc
adc
sbb
mov
loopne
aad
xor
dec
(bad)
push
nop
inc
movs
dec
inc
pop
lds
inc
(bad)
push
inc
popa
aam
cmp
push
jbe
push
aas
push
aas
ja
in
mov
test
inc
in
vmread
gs
hlt
dec
mov
jg
ins
pop
or
add
push
fwait
test
mov
cdq
xchg
jne
xchg
scas
adc
test
jo
inc
mov
mov
xor
pusha
mov
sahf
mov
xor
lahf
xlat
mov
and
repnz
mov
push
test
xor
out
jmp
fs
xor
add
lock
pushf
repnz
je
and
adc
lock
into
xchg
dec
pop
pop
test
cs
add
cmp
xor
sbb
ds
xor
sub
pop
movs
xor
and
cmp
daa
movs
je
and
push
loopne
aad
xor
cmp
les
inc
movs
push
inc
pop
lds
jp
ins
inc
jle
xor
pop
aad
aas
ins
not
push
dec
mov
test
dec
in
cvtdq2ps
jae
push
hlt
push
mov
pmaddwd
dec
push
xchg
xchg
mov
gs
scas
add
xchg
xchg
adc
inc
xchg
jne
xchg
adc
mov
and
jo
inc
xchg
cdq
es
cmps
xchg
xor
pusha
retf
push
mov
mov
push
in
jmp
and
shr
push
rol
loope
out
into
push
out
sti
jbe
test
add
in
in
shl
shl
loopne
in
cmc
fnsave
lahf
out
xchg
adc
add
ins
rcr
in
add
push
xchg
pop
push
xchg
and
xor
cmp
jg
mov
aaa
push
movs
aas
lock
lds
and
adc
pusha
daa
sbb
xor
dec
(bad)
popa
push
inc
les
movs
ins
inc
aas
lds
inc
mov
gs
and
inc
push
arpl
arpl
outs
not
dec
in
mov
test
inc
in
pcmpeqb
pop
addr16
dec
mov
(bad)
cmc
das
pop
or
xchg
xchg
sahf
add
push
mov
test
push
mov
inc
in
test
mov
xchg
mov
and
jo
inc
mov
xchg
mov
pusha
popf
push
mov
fisttp
inc
not
mul
retf
scas
jmp
pop
lock
mov
(bad)
xor
xchg
fbld
ret
add
mov
call
and
adc
stc
lahf
jmp
test
ss
add
xor
inc
pop
gs
jno
push
cmp
xor
or
dec
lds
and
inc
cmps
addr16
sbb
xor
xor
bound
les
cmp
push
das
cmp
addr16
pop
aam
cmp
push
pop
aad
aas
dec
imul
mov
test
js
je
popa
out
addr16
hlt
push
mov
pmaddwd
xchg
inc
push
sti
gs
test
push
add
jne
xchg
test
test
test
and
jo
inc
mov
and
mov
lds
mov
xor
xchg
xlat
lock
rcl
shl
scas
mov
push
call
aad
push
in
lock
test
gs
(bad)
retw
out
je
and
adc
rcr
test
and
cmp
outs
or
sub
aaa
cmc
cmp
jg
mov
aaa
adc
inc
lock
xor
adc
pusha
daa
cmp
xor
inc
(bad)
dec
push
arpl
cmp
pop
lds
outs
(bad)
jp
push
aam
and
push
ja
push
aas
inc
test
in
mov
test
push
in
cmovno
jb
pop
hlt
push
mov
dec
cmc
popw
pop
push
adc
gs
test
add
mov
inc
nop
jne
xchg
test
push
scas
inc
lea
cdq
cmps
cmps
xor
test
mov
xor
int3
xlat
mov
and
les
loop
jmp
push
xchg
xchg
fs
xor
add
mov
cld
data16
out
je
and
adc
mov
pop
adc
add
xchg
and
adc
ins
mov
aaa
adc
and
add
adc
pop
aad
xor
dec
(bad)
dec
push
dec
les
jno
jl
dec
lds
das
push
pop
inc
daa
aam
and
dec
push
dec
aad
aas
data16
ja
in
mov
test
inc
in
movd
popa
addr16
hlt
dec
mov
dec
cmc
pop
pop
dec
push
mov
push
mov
add
rol
jne
xchg
mov
mov
jo
inc
mov
fisub
movs
cmps
xchg
xor
pusha
mov
mov
fbstp
inc
repnz
and
call
(bad)
rcl
stos
xor
ret
mov
loopne
aad
jmp
(bad)
(bad)
iretw
out
je
and
adc
ret
lahf
test
and
ja
cmp
push
xchg
pop
add
cmc
sbb
sub
inc
lock
xor
cmps
add
sub
push
loopne
aad
xor
adc
addr16
sub
popa
nop
dec
movs
cmovne
pop
das
cmp
jnp
push
aam
and
aas
dec
not
inc
in
mov
test
addr16
(bad)
out
addr16
addr16
pop
jne
cmc
js
push
push
xlat
xchg
xchg
add
push
mov
mov
xchg
push
iret
xchg
stos
xchg
scas
adc
xor
inc
mov
iret
xchg
movs
cmps
(bad)
xor
pusha
adc
mov
push
(bad)
xlat
iret
inc
in
adc
and
leave
scas
out
rol
loope
in
shl
mov
(bad)
shl
add
retf
data16
out
je
and
jne
lahf
call
test
shl
in
add
xchg
pop
cmp
outs
shl
adc
gs
aaa
movs
es
outs
and
push
cmps
jns
push
mov
loopne
aad
xor
pop
(bad)
outs
push
jo
ja
outs
movs
inc
inc
push
(bad)
pusha
inc
arpl
dec
adc
push
dec
aad
aas
dec
not
pop
in
mov
test
gs
in
maxps
gs
inc
mov
imul
pop
adc
test
mov
test
out
std
push
xchg
loopne
rcl
div
xchg
inc
mov
iret
fisub
mov
test
mov
xor
repz
and
aad
fld
(bad)
cmps
push
into
add
push
fnstsw
out
div
fiadd
out
(bad)
fisub
out
je
and
jne
lahf
mov
adc
add
daa
xchg
and
adc
das
mov
aaa
movs
inc
lock
lds
dec
sub
cmp
daa
aad
xor
cs
gs
sub
pop
nop
xor
push
das
cmp
inc
inc
cs
sub
dec
push
xor
inc
aas
pop
not
push
in
mov
test
imul
pop
addr16
hlt
jge
push
xchg
jne
push
pop
pop
jno
adc
gs
out
lea
cmps
xchg
jne
xchg
xchg
adc
push
nop
inc
mov
iret
mov
lods
cmps
mov
cmps
pusha
mov
cli
mov
xor
rcl
inc
call
hlt
and
jmp
fist
stc
xor
sar
mov
aad
fucom
loopne
xlat
pop
data16
out
je
and
adc
ret
lahf
leave
xchg
and
or
add
js
inc
pop
sub
shl
or
ds
aaa
movs
sbb
pop
lds
and
pop
cmps
xor
adc
xor
sbb
push
push
jg
gs
jae
js
pop
lds
pop
mov
es
add
push
popa
aad
aas
imul
push
mov
test
in
pcmpgtb
pop
ins
hlt
dec
mov
add
inc
pop
pop
push
xchg
xchg
lahf
add
push
mov
test
add
test
stos
jne
xchg
mov
mov
lea
movs
mov
es
fwait
xor
pusha
mov
xor
(bad)
loop
movs
adc
and
shr
fist
stc
xor
jecxz
call
les
xchg
add
jmp
je
and
adc
out
call
test
in
add
cmp
add
push
sbb
pop
mov
aaa
and
sub
add
jo
sbb
outs
daa
sbb
aad
xor
adc
les
inc
xor
ja
dec
mov
inc
aam
or
push
imul
jb
dec
in
mov
test
in
cvtps2pd
dec
addr16
pop
mov
adc
pop
pop
dec
push
xchg
xchg
sahf
add
push
mov
mov
scas
add
mov
jne
xchg
out
adc
mov
aad
call
and
push
xor
push
cmc
xlat
ret
adc
and
nop
scas
mov
mov
xor
sar
lea
lea
ror
je
and
adc
rcr
push
test
rcl
in
add
add
add
shl
aaa
adc
push
mov
aaa
push
movs
adc
and
sbb
mov
loopne
aad
xor
dec
(bad)
jno
pop
les
nop
dec
movs
jl
jno
dec
das
je
dec
inc
addr16
sub
dec
push
xor
dec
aas
dec
test
in
mov
test
dec
out
addr16
hlt
ja
inc
xchg
dec
jne
cmc
jbe
jp
test
mov
add
mov
inc
xchg
jne
xchg
xchg
adc
test
xlat
and
jo
inc
call
iret
test
mov
mov
pusha
adc
mov
xchg
fist
inc
cld
adc
and
xchg
scas
fadd
(bad)
rcl
fnstenv
cmc
mov
int3
shl
in
add
repz
loop
into
out
je
and
adc
fistp
das
test
add
push
xchg
and
adc
or
xor
sbb
aaa
and
pop
cmps
pop
daa
cmp
xor
add
push
push
dec
les
pop
movs
push
inc
aas
lds
push
(bad)
cmova
cmp
push
push
push
jae
pop
aas
dec
imul
inc
in
mov
test
inc
in
(bad)
out
addr16
inc
mov
push
cmc
jbe
inc
push
movs
xchg
mov
out
(bad)
gs
test
push
ret
xchg
adc
inc
test
fcom
movs
div
xchg
inc
out
movs
scas
and
and
push
call
push
icebp
xlat
enter
repnz
xchg
scas
mov
push
repz
xor
cwde
mov
retf
fs
add
std
(bad)
fldenv
out
je
and
jne
lahf
fist
xor
sub
or
outs
sbb
add
cmp
cmc
pop
adc
and
xor
aaa
movs
sub
and
push
cmps
outs
daa
es
loopne
aad
xor
and
pop
push
pusha
les
pop
movs
jne
pop
lds
je
push
inc
jo
xor
outs
aad
aas
jns
gs
in
mov
test
pop
in
cvtps2pd
jl
add
dec
mov
pop
cmc
pop
pop
outs
push
stos
xchg
xchg
push
test
test
push
add
mov
xchg
mov
and
jo
inc
call
es
push
call
push
sahf
xlat
mov
and
out
scas
sti
inc
inc
out
mov
lock
hlt
mov
icebp
fs
xor
add
dec
shl
adc
out
lahf
ficom
pusha
sar
in
add
xchg
pop
das
xchg
add
and
xchg
sbb
mov
aaa
pop
movs
and
sbb
ds
cmps
pusha
daa
xor
xor
sbb
les
dec
movs
push
inc
lds
jp
jno
ins
aam
adc
push
arpl
outs
aas
inc
div
inc
in
mov
test
pop
in
(bad)
out
outs
hlt
inc
mov
jo
jns
dec
push
movs
xchg
cmps
add
push
xchg
gs
out
std
push
xchg
xchg
jne
xchg
xchg
adc
test
mov
inc
mov
and
cmps
pushf
xor
pusha
mov
cwde
mov
xor
xlat
xlat
rol
and
jmp
ret
inc
into
(bad)
in
scas
add
xor
(bad)
mov
xchg
lea
(bad)
add
loopne
fisub
out
je
and
adc
ficomp
test
rcl
in
add
jg
sbb
das
xchg
sub
sbb
xchg
ds
mov
aaa
adc
lds
and
sbb
add
aas
aad
xor
es
ins
push
dec
les
cmp
push
das
dec
mov
outs
aam
cmp
dec
push
jns
jg
push
test
in
mov
test
in
nop
jno
push
hlt
dec
mov
or
inc
pop
gs
scas
xchg
lea
test
push
add
jne
xchg
mov
mov
jo
inc
mov
fsub
cwde
cmps
cmps
xor
pusha
xchg
push
mov
lahf
push
xchg
xlat
lds
out
and
jmp
std
push
int3
add
xor
out
mov
les
repz
jmp
in
in
cdq
je
and
adc
ret
lahf
stc
xchg
push
pop
pop
test
sub
cmp
adc
or
arpl
adc
aas
mov
aaa
add
lds
xor
pusha
daa
cmp
aad
xor
cmp
dec
push
xor
and
pusha
lds
inc
mov
pop
aam
xor
push
dec
aad
aas
pop
test
in
mov
test
inc
in
mulps
inc
addr16
hlt
adc
add
inc
pop
push
push
mov
in
gs
sahf
add
mov
loope
xchg
jne
xchg
hlt
adc
xchg
mov
and
jo
inc
mov
mov
movs
cmps
mov
mov
mov
xor
jmp
adc
and
shr
push
std
add
xor
clc
mov
ret
fs
add
mov
enter
shl
hlt
adc
rcr
test
jnp
add
outs
daa
xchg
pop
xor
adc
sbb
inc
lock
imul
cmps
cs
sbb
aad
xor
adc
addr16
dec
les
nop
outs
movs
inc
inc
lds
fs
pop
inc
data16
and
imul
mul
dec
in
mov
test
cvtdq2ps
inc
addr16
push
mov
push
cmc
bound
pop
push
mov
xchg
lea
mov
adc
inc
mov
xchg
call
jo
inc
xchg
movs
mov
es
xchg
xor
pusha
les
mov
xor
retf
inc
in
adc
and
in
mov
push
fld
lock
cmp
fs
add
in
(bad)
cli
data16
out
je
and
adc
fistp
sub
add
sbb
adc
push
cmc
push
adc
add
adc
xor
and
pop
cmps
bound
aas
mov
loopne
aad
xor
sub
les
pop
movs
jns
cmp
jle
push
inc
inc
and
inc
and
push
dec
aad
aas
and
ins
ja
in
mov
test
add
ja
js
ja
pmuludq
pop
xchg
cmp
or
push
pop
push
push
rcl
mov
add
add
jne
xchg
scas
adc
stos
mov
and
jo
inc
mov
iret
mov
std
cmps
fwait
xor
pusha
cmps
push
std
mov
xor
nop
xlat
into
inc
mov
(bad)
int
(bad)
inc
iret
(bad)
call
aam
sti
aad
push
out
mov
out
(bad)
icebp
add
mov
out
je
and
adc
mov
pop
or
add
sub
shl
jg
mov
aaa
aaa
movs
daa
lock
je
and
ss
sub
mov
loopne
aad
xor
push
(bad)
dec
push
dec
les
push
movs
push
das
dec
mov
jnp
ins
and
push
(bad)
aad
aas
inc
imul
ja
in
mov
test
add
inc
cmovg
inc
addr16
hlt
adc
jl
jge
jle
(bad)
xchg
xchg
add
push
mov
mov
mov
push
mov
inc
lahf
jne
xchg
jmp
pushf
dec
and
jo
inc
xchg
movs
scas
and
mov
pusha
popf
push
mov
fistp
inc
fcom
sti
and
xchg
scas
stc
inc
in
out
push
test
test
jbe
mul
fs
xor
add
out
pushf
jmp
lock
and
adc
mov
pop
and
add
sbb
inc
pop
push
xchg
push
shl
and
mov
aaa
or
and
sub
adc
pop
aad
xor
xor
les
dec
movs
adc
lds
das
ds
addr16
pop
aam
sbb
push
dec
aad
aas
xor
pop
ja
in
mov
test
pop
in
punpckhdq
jp
pop
hlt
adc
jne
cmc
jno
dec
push
(bad)
xchg
movs
add
push
lea
test
add
lds
mov
adc
hlt
mov
and
jo
inc
out
movs
mov
es
cmps
xchg
pusha
fwait
push
sti
mov
xor
call
adc
and
in
in
lock
scas
push
mov
aad
cwde
aad
push
pushf
mov
xchg
fs
xor
gs
(bad)
(bad)
out
je
and
adc
ficomp
add
add
jle
and
and
cmc
add
sub
and
lds
and
pop
cmps
xor
cmp
xor
or
push
push
aas
les
jo
inc
inc
jns
dec
das
pop
(bad)
inc
fs
adc
push
das
aad
aas
jns
imul
push
mov
test
dec
in
unpcklps
push
addr16
hlt
push
mov
jno
pop
pop
dec
push
mov
xchg
gs
out
mov
adc
inc
stos
jne
xchg
out
adc
mov
nop
and
jo
inc
jmp
es
cmps
xor
mov
xchg
mov
xor
vlddqu
hlt
and
aad
cli
inc
inc
mov
xor
jecxz
into
jbe
test
add
jmp
je
and
adc
ficomp
push
test
daa
in
add
add
jge
pop
cmc
sub
cmp
xor
and
push
and
push
cmps
outs
daa
xor
xor
adc
dec
push
pop
les
inc
movs
js
jg
jae
pop
mov
inc
aam
and
push
jb
push
aas
jge
inc
ja
in
mov
test
dec
in
cmove
bound
hlt
imul
push
push
(bad)
xchg
xchg
push
mov
add
fld
cmps
jne
xchg
mov
movs
mov
and
jo
inc
nop
movs
cdq
and
cwde
cmps
mov
push
movs
mov
xor
aam
icebp
inc
cmps
adc
and
xchg
scas
loope
add
push
aam
fdiv
ret
mov
xchg
fs
xor
add
lds
repz
and
adc
out
lahf
jmp
sub
or
add
arpl
ja
xor
sub
xor
jb
or
and
and
sub
and
add
ds
pop
sub
jle
jo
aas
nop
movs
push
inc
jns
imul
mov
jo
outs
adc
jbe
dec
aas
jle
aas
ja
in
mov
test
outs
in
nop
je
inc
hlt
jl
pop
xchg
push
jne
cmc
push
pop
push
push
mov
cmc
add
push
mov
xchg
xchg
push
mov
jne
xchg
lock
repnz
and
jo
inc
out
movs
mov
out
cmps
mov
push
clc
mov
xor
(bad)
xlat
fiadd
mov
fld
repnz
iret
scas
ret
inc
stc
(bad)
fcom
fnsave
test
shl
add
ror
fdiv
in
loopne
enter
lock
pop
pop
push
test
ror
add
xchg
pop
cmp
daa
rcr
sbb
das
xchg
add
aaa
shld
xor
cmp
pop
cmps
and
adc
xor
sub
push
push
xor
ins
nop
push
movs
jbe
and
ins
das
jle
dec
inc
dec
aam
and
push
inc
aad
aas
push
in
mov
test
dec
in
cmovne
pop
addr16
hlt
dec
mov
push
cmc
outs
pop
jp
mov
mov
test
push
mov
inc
movs
jne
xchg
(bad)
adc
mov
jo
inc
cmps
movs
shl
and
push
lahf
mov
xor
out
xlat
aam
fcom
repz
shr
in
cmc
add
push
lds
xchg
fs
xor
add
std
(bad)
out
data16
ret
je
and
adc
lock
fst
arpl
jnp
das
add
and
jge
sbb
pop
adc
or
adc
pop
lds
and
pop
cmps
pop
daa
sbb
aad
xor
or
adc
nop
inc
movs
js
jns
adc
inc
(bad)
js
dec
aam
and
push
jg
push
aas
jno
ds
in
mov
test
in
pcmpeqw
inc
addr16
hlt
dec
mov
js
jl
push
push
rcl
scas
gs
test
push
mov
inc
mov
adc
mov
jo
inc
out
movs
shl
loop
movs
xor
pusha
mov
xor
leave
xlat
icebp
inc
fist
(bad)
and
shr
icebp
push
enter
(bad)
aad
push
out
leave
jbe
test
gs
pop
data16
out
je
and
adc
cli
lahf
rcl
sbb
jae
syscall
add
cmp
das
xchg
jno
xor
pop
adc
ds
aaa
dec
movs
push
lock
lds
dec
aas
cmps
adc
dec
mov
loopne
aad
xor
dec
(bad)
push
push
jle
bound
lds
dec
mov
aam
sbb
push
je
pop
aas
sub
in
mov
test
jg
fs
push
outs
hlt
jge
push
xchg
push
jne
cmc
cs
pop
push
adc
gs
test
push
xchg
xchg
jne
xchg
mov
test
add
(bad)
and
lods
cmps
mov
test
retf
mov
xor
int3
xlat
mov
and
lahf
scas
mov
push
aam
fidiv
jecxz
stos
jbe
test
add
fisttp
push
loopne
enter
repz
lds
or
and
test
jg
adc
aas
xchg
add
xor
sub
jg
mov
aaa
sub
lds
and
sub
mov
loopne
aad
xor
dec
(bad)
arpl
les
pusha
movs
pop
inc
pusha
lds
push
aam
xor
push
jg
jae
dec
div
ja
in
mov
test
gs
xor
addr16
hlt
jae
addr16
pop
jne
cmc
and
jle
lods
xchg
in
add
push
in
gs
test
push
mov
inc
xor
xchg
adc
test
aad
test
inc
movs
movs
mov
es
mov
push
std
mov
xor
rcl
in
inc
cld
adc
inc
repnz
fadd
(bad)
out
push
mov
rcl
mov
aam
xor
fsub
(bad)
out
data16
loop
fisub
(bad)
adc
rcr
test
rcl
test
or
xchg
jbe
imul
adc
add
movs
cmp
adc
movs
add
cmps
jge
es
loopne
aad
xor
xor
push
push
push
les
jbe
dec
inc
cmp
jb
jp
push
inc
pop
aam
cmp
push
push
aad
aas
sub
jno
addr16
mov
test
jge
jo
jg
push
addr16
hlt
inc
mov
add
fs
je
rcl
test
call
push
ret
adc
inc
movs
jne
xchg
test
ss
scas
and
jo
inc
lock
shl
movs
cmps
mov
push
xchg
mov
xlat
jmp
and
repnz
iret
inc
int3
(bad)
(bad)
push
aam
loope
int3
aad
push
loope
lods
jbe
imul
fs
xor
add
ror
shl
adc
call
jg
sbb
cmp
dec
add
and
and
pop
cmc
pop
adc
adc
sbb
or
sub
cmp
fs
cmp
aad
xor
pop
(bad)
jb
push
les
nop
push
movs
jno
inc
lds
jbe
push
inc
jae
bound
sub
ins
aas
xor
dec
ja
in
mov
test
add
xor
dec
out
addr16
push
mov
jge
das
pop
pop
push
mov
push
lea
test
cmps
xchg
jne
xchg
hlt
adc
in
mov
and
jo
inc
(bad)
movs
(bad)
lahf
cmps
shl
mov
sbb
push
repnz
leave
inc
lds
mov
inc
(bad)
scas
jmp
push
mov
aad
(bad)
not
mov
repz
xchg
add
mov
enter
aam
loop
ficom
ret
lahf
mov
add
or
test
outs
jne
inc
pop
and
adc
ss
aaa
or
and
pop
cmps
cmp
xor
xor
push
(bad)
popa
push
push
movs
or
das
addr16
push
inc
inc
aam
and
dec
push
je
fs
js
inc
ja
in
mov
test
jp
dec
mulps
outs
addr16
hlt
push
mov
jbe
jb
pop
push
mov
repnz
test
push
sahf
xchg
jne
xchg
lock
sahf
mov
and
jo
inc
mov
iret
ret
es
popf
xor
pusha
mov
xor
xchg
xlat
out
inc
(bad)
adc
and
into
scas
inc
(bad)
out
push
call
aad
push
fdivr
loop
clc
xor
add
loopne
call
je
and
adc
out
(bad)
xchg
aas
pop
add
in
add
sub
or
pop
cmc
or
adc
daa
aaa
dec
movs
cmp
sub
ds
sub
mov
loopne
aad
xor
push
(bad)
ins
push
push
movs
gs
pop
lds
arpl
jl
dec
aam
and
inc
push
jno
jle
pop
div
ja
in
mov
test
pop
in
andnps
push
addr16
hlt
push
inc
xchg
aaa
jne
cmc
push
pop
jae
rcl
repz
add
test
mov
mov
push
and
jo
inc
in
movs
(bad)
lahf
cmps
cmps
xor
pusha
adc
(bad)
xor
xchg
xlat
loopne
into
adc
and
xlat
scas
ret
(bad)
call
loop
popf
aad
push
jecxz
jmp
fdiv
test
pop
shl
je
and
adc
mov
pop
pop
test
ror
test
or
xchg
pop
rcl
pop
adc
and
movs
xor
push
lds
movs
cs
adc
mov
loopne
aad
xor
pop
(bad)
or
nop
inc
movs
jbe
xor
push
das
cmp
aam
add
push
jo
push
aas
pop
div
jae
pop
mov
test
outs
in
cmovno
gs
dec
mov
pop
cmc
bound
outs
push
test
xrelease
mov
adc
inc
movs
jne
xchg
mov
ss
mov
and
jo
inc
xchg
xchg
mov
xchg
xor
pusha
retf
mov
xor
int
mov
and
repnz
loopne
test
jmp
mov
xchg
shl
rol
ror
fidiv
test
fcomp
or
add
add
sbb
adc
and
cmp
adc
outs
mov
aaa
or
adc
sub
movs
or
cmps
jge
pop
mov
loopne
aad
xor
or
jo
jo
es
sub
push
das
outs
(bad)
jnp
and
and
push
jae
jbe
sub
je
dec
in
mov
test
gs
sysret
out
addr16
hlt
ins
mov
jl
jl
push
push
mov
push
xchg
gs
test
scas
xchg
jne
xchg
nop
adc
mov
pop
movs
xchg
mov
pusha
call
fistp
inc
jecxz
repnz
jmp
push
leave
add
push
sar
in
shl
aam
lods
in
gs
(bad)
(bad)
out
je
and
adc
cli
lahf
enter
push
test
shr
in
add
jne
es
sbb
adc
xor
aaa
lock
sbb
and
xor
xor
xor
push
nop
je
dec
inc
lds
xor
inc
inc
jno
xor
pop
mov
push
dec
aad
aas
jo
jl
addr16
mov
test
inc
in
mulps
dec
addr16
hlt
inc
mov
add
jbe
outs
push
mov
mov
mov
add
add
fcom
mov
mov
and
movs
mov
xchg
cwde
push
in
pushf
xor
leave
xlat
rol
int
rol
rol
jmp
clc
(bad)
out
push
fadd
clc
xor
stc
mov
(bad)
fs
int
out
in
dec
iret
je
and
adc
fistp
jb
adc
sub
dec
add
je
cmp
rol
cmp
mov
aaa
or
lds
and
pop
cmps
pop
daa
pop
mov
loopne
aad
xor
xor
dec
push
dec
les
nop
jnp
or
lds
das
jnp
add
aam
cmp
push
dec
aad
aas
aaa
mul
dec
in
mov
test
gs
xor
inc
out
addr16
data16
imul
xchg
xchg
jmp
gs
out
scas
push
mov
jmp
xchg
xchg
xchg
adc
mov
shl
movs
(bad)
cdq
cmps
lods
xor
pusha
les
mov
xor
xchg
xlat
mov
mov
lds
inc
ffreep
rcl
in
call
mov
jecxz
shl
add
int3
(bad)
out
fucom
fdiv
jecxz
fdiv
hlt
jne
lahf
leave
xchg
pop
pop
adc
add
or
xchg
or
and
xor
jg
mov
aaa
sub
or
daa
lds
and
and
sub
inc
aad
xor
cmp
push
push
inc
les
dec
movs
jge
jno
arpl
push
add
aam
sub
push
dec
aad
aas
imul
jno
sbb
xor
ins
out
addr16
inc
mov
or
push
pop
jae
test
xchg
test
push
fwait
xchg
adc
inc
xchg
jne
xchg
mov
mov
jo
inc
sahf
movs
cmps
and
mov
pusha
mov
xor
jmp
and
xchg
scas
mov
stc
(bad)
out
push
std
add
xor
sar
in
fwait
xor
add
repz
movs
out
je
and
adc
les
or
add
jge
adc
and
adc
push
mov
aaa
aas
movs
sub
and
sbb
mov
loopne
aad
xor
sub
jae
push
les
pop
movs
ins
inc
lds
inc
(bad)
push
inc
inc
aam
add
push
sub
not
in
mov
test
gs
in
movd
dec
addr16
arpl
dec
cmc
push
pop
push
add
push
xchg
gs
test
push
xchg
xchg
adc
inc
mov
xchg
xchg
lea
scas
mov
and
jo
inc
xchg
movs
shl
cmps
xchg
xor
pusha
(bad)
push
xchg
mov
xor
call
enter
fsub
shr
ret
push
aad
call
push
mov
xlat
shl
add
in
(bad)
data16
out
je
and
jne
lahf
jmp
push
pop
adc
add
xchg
bound
adc
adc
add
sub
jo
cmp
addr16
inc
mov
loopne
aad
xor
sbb
pusha
push
jg
jge
movs
or
lds
imul
inc
es
xor
push
push
aad
aas
ja
sub
mov
test
jno
inc
cmove
cmp
mov
dec
cmc
ins
pop
pop
push
mov
movs
add
push
xchg
gs
test
push
mov
xchg
adc
inc
cmps
jne
xchg
(bad)
adc
(bad)
mov
and
jo
inc
xchg
movs
sahf
and
loope
xor
xchg
push
stc
mov
xor
into
xlat
mov
rcl
and
mov
cli
push
rol
stos
xor
loopne
icebp
jbe
not
add
jmp
je
and
jne
lahf
rcl
ror
in
add
or
sbb
aaa
cmc
and
sub
or
push
movs
add
sbb
adc
add
push
daa
adc
xor
sub
jno
jg
push
nop
pop
movs
dec
inc
lds
jl
sbb
add
push
ins
aad
aas
jge
dec
ja
in
mov
test
add
sub
inc
out
addr16
dec
mov
pop
cmc
outs
pop
imul
mov
test
xchg
push
mov
jmp
mov
call
and
jo
inc
cwde
movs
cdq
and
xchg
cmps
movs
xor
pusha
cdq
push
lods
mov
xor
xchg
xlat
mov
and
xchg
scas
loop
fadd
out
rol
les
stc
mov
xlat
mov
hlt
add
mov
loopne
out
xor
(bad)
jne
lahf
aam
xor
shr
in
add
jne
and
xor
cmc
or
sub
and
adc
lds
pop
cmps
outs
daa
pop
mov
loopne
aad
xor
or
adc
les
push
movs
or
lds
inc
(bad)
jle
jb
xor
push
push
aad
aas
jg
jne
imul
sub
in
movq
pop
addr16
hlt
bound
js
inc
pop
imul
xchg
cmc
add
push
lea
test
push
ret
adc
inc
mov
xchg
out
adc
mov
jo
inc
jmp
es
pusha
mov
mov
xor
jmp
lock
in
adc
and
cmc
scas
test
(bad)
push
out
cmps
xor
mov
loopne
fidiv
clc
add
mov
(bad)
data16
out
je
and
adc
rcr
and
add
jle
add
sbb
adc
adc
inc
lock
xor
inc
cmps
sbb
pop
mov
loopne
aad
xor
sbb
dec
push
jb
push
nop
pop
movs
jl
jae
gs
cmp
je
pop
aam
sub
pop
push
dec
aad
aas
push
imul
ja
in
mov
test
dec
in
pcmpeqb
jns
(bad)
hlt
jne
js
push
jne
cmc
pop
pop
dec
push
int
stos
add
push
xrelease
lods
push
cmps
xchg
jne
xchg
xchg
adc
repnz
and
jo
inc
xchg
movs
mov
mov
pusha
xchg
mov
xor
xchg
xlat
out
inc
loopne
retf
and
in
scas
fadd
(bad)
loop
out
add
xor
cwde
mov
shl
xlat
add
dec
repz
and
adc
cli
lahf
(bad)
xchg
push
pop
or
shr
in
add
sub
xchg
shl
pop
adc
outs
mov
aaa
add
and
cmps
outs
daa
sbb
xor
push
(bad)
jl
pusha
les
inc
inc
lds
xor
aam
and
push
pop
aad
aas
ins
idiv
push
in
mov
test
inc
in
packuswb
inc
addr16
hlt
push
pop
xchg
aas
jne
cmc
gs
adc
stos
xchg
pushf
add
push
mov
add
cdq
xchg
jne
xchg
jmp
mov
mov
and
jo
inc
scas
movs
mov
es
into
xor
pusha
adc
ret
xor
out
xlat
fiadd
call
inc
lds
(bad)
push
out
enter
jmp
cmc
mov
into
lea
fadd
(bad)
(bad)
fisub
out
je
and
adc
fstp
xor
in
add
and
xor
es
push
adc
or
inc
lock
adc
add
mov
loopne
aad
xor
pop
(bad)
adc
pop
les
inc
outs
lds
pop
(bad)
push
inc
pop
aam
or
push
pop
aad
aas
jb
push
ja
in
mov
test
adc
xor
addr16
hlt
jle
inc
xchg
inc
jne
cmc
inc
pop
dec
push
lea
cmps
mov
scas
push
test
xor
(bad)
adc
icebp
mov
and
jo
inc
test
and
cmps
lds
pusha
(bad)
push
test
mov
inc
in
mov
out
rol
rol
scas
push
enter
(bad)
cli
push
fdivr
mov
aad
call
vpcmov
je
and
adc
stc
lahf
(bad)
xchg
pop
pop
adc
add
jo
sub
sub
outs
rcr
push
adc
cmp
pop
lock
sub
pop
cmps
sbb
pop
mov
loopne
aad
xor
push
(bad)
jg
imul
dec
inc
popa
lds
arpl
outs
inc
inc
aam
add
push
xor
push
aas
dec
div
ja
in
mov
test
fs
addr16
hlt
jl
push
xchg
jp
ins
cmc
jae
pushw
test
mov
mov
push
cmps
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
mov
es
cmps
nop
xor
pusha
fwait
push
lea
mov
aad
mov
out
adc
and
lds
lock
jmp
push
(bad)
mov
nop
(bad)
rol
ret
pop
data16
lds
not
rcr
or
in
add
jle
sbb
outs
xchg
push
rol
jg
mov
aaa
shld
lds
and
add
push
loopne
aad
xor
adc
push
push
push
push
nop
ja
or
lds
jnp
add
aam
sub
push
dec
aad
aas
imul
or
inc
test
inc
in
(bad)
out
addr16
adc
or
addr16
push
xlat
xchg
mov
in
push
mov
add
mov
jne
xchg
mov
ss
mov
and
jo
inc
mov
lods
and
mov
(bad)
xor
pusha
xchg
mov
xor
int
into
inc
lods
adc
and
shr
ret
push
rol
shl
mov
xchg
mov
xchg
add
mov
jecxz
loope
test
aad
fprem1
fidiv
lahf
les
shr
pop
outs
je
cmp
cmp
adc
ja
xor
push
movs
inc
lock
adc
cmp
or
inc
aad
xor
inc
(bad)
push
push
jg
dec
nop
outs
movs
ja
pop
lds
das
daa
(bad)
jno
pop
aam
xor
push
dec
aad
aas
inc
test
in
mov
test
dec
in
nop
and
mov
or
jl
add
lea
mov
test
push
cmps
xchg
adc
inc
mov
xchg
test
sahf
jmp
and
jo
inc
in
movs
shl
lods
cmps
mov
push
fwait
mov
xor
xlat
xlat
loope
rcl
shl
shr
lds
repz
cmp
loopne
repnz
gs
fisub
out
je
and
jne
lahf
cmc
xchg
add
xor
cmp
add
arpl
jo
xor
push
adc
push
mov
aaa
aaa
movs
ds
lds
and
pop
cmps
sbb
inc
mov
loopne
aad
xor
or
les
dec
movs
inc
inc
jp
or
and
addr16
js
push
sbb
push
sub
add
inc
test
in
mov
test
addr16
(bad)
out
addr16
arpl
dec
cmc
jbe
pop
push
adc
gs
test
push
ret
xchg
test
call
and
jo
inc
mov
iret
fisub
loope
into
xor
pusha
test
mov
xor
in
xlat
aam
lock
and
leave
scas
fadd
(bad)
movs
push
xlat
add
xor
(bad)
mov
lock
repnz
ret
out
out
je
and
adc
iret
lahf
test
cmp
xor
test
and
and
and
push
adc
aaa
mov
aaa
or
lds
dec
xor
mov
loopne
aad
xor
adc
arpl
les
pusha
movs
inc
pop
lds
(bad)
fs
addr16
and
sbb
aas
imul
push
mov
test
arpl
pop
cmovge
push
addr16
push
mov
dec
cmc
and
jle
stos
xchg
stos
add
push
xchg
gs
add
mov
inc
mov
adc
lea
mov
movs
xchg
xchg
mov
xor
leave
xlat
les
repz
ret
inc
rol
not
(bad)
xor
(bad)
mov
lock
xor
add
les
fnsave
jmp
lahf
call
test
shl
test
xchg
xor
adc
cmp
and
imul
lock
lds
dec
sbb
adc
and
sub
pop
or
les
popa
movs
outs
inc
outs
lds
inc
(bad)
pusha
inc
cmp
mov
push
xor
bound
sub
in
mov
test
jp
inc
nop
pop
addr16
push
mov
jp
cmp
outs
push
lea
lods
lea
lods
push
lds
cdq
jne
xchg
hlt
adc
cmc
mov
and
jo
inc
xchg
movs
shl
lods
cmps
ret
xor
pusha
test
mov
xor
(bad)
xlat
mov
call
shl
jmp
fld
(bad)
fcom
cli
xor
fdivr
shl
loopne
mov
lahf
gs
(bad)
fldenv
out
je
and
adc
clc
lahf
rcl
cmp
es
add
or
or
imul
adc
sub
pop
lock
sbb
and
pop
loopne
aad
xor
aaa
(bad)
dec
push
sub
inc
nop
dec
movs
pop
inc
inc
lds
jle
push
inc
inc
aam
sbb
push
outs
aad
aas
push
sub
in
mov
test
pop
in
movd
pop
addr16
hlt
jae
addr16
push
jne
cmc
inc
pop
imul
xchg
push
repnz
pushf
push
scas
xchg
adc
inc
stos
jne
xchg
mov
mov
xchg
inc
mov
iret
mov
xor
pusha
mov
xor
xchg
xlat
loop
in
repz
nop
scas
loopne
rol
push
in
add
xor
aad
stos
jbe
test
add
int
enter
loope
aam
lock
(bad)
lahf
leave
xchg
or
pop
test
shl
in
add
add
pop
shl
jg
mov
aaa
and
pop
lock
jo
and
cmp
add
xor
sbb
push
push
pusha
les
push
movs
imul
mov
cmp
jno
dec
push
push
aad
aas
dec
div
ja
in
mov
test
in
(bad)
out
addr16
dec
mov
or
inc
pop
pushw
leave
xchg
lods
add
push
mov
add
lods
xchg
cmps
xchg
xchg
adc
xor
inc
mov
iret
mov
jecxz
xor
ret
push
movs
mov
xor
xchg
xlat
xlat
inc
not
clc
and
fild
out
retf
add
xor
int
movs
jbe
not
fidiv
ret
add
retf
data16
je
and
jne
lahf
out
aaa
pop
xor
add
or
add
jns
cmp
imul
push
and
pop
cmps
xor
pop
mov
loopne
aad
xor
sub
inc
push
les
movs
inc
inc
inc
lds
cmp
inc
pop
aam
adc
pop
aad
aas
push
div
ja
in
mov
test
inc
in
nop
cs
hlt
jno
inc
xchg
dec
jne
cmc
jnp
jno
mov
mov
mov
test
push
xchg
xchg
jne
xchg
out
adc
lods
mov
and
jo
inc
mov
iret
mov
xchg
mov
xor
(bad)
inc
mov
(bad)
retf
scas
fadd
(bad)
mov
xor
ret
mov
in
push
jecxz
(bad)
in
gs
ret
out
je
and
adc
scas
lahf
fcom
aas
rcr
in
add
sub
xchg
or
fs
ds
adc
cmp
adc
movs
ins
dec
sbb
or
cmp
sbb
push
(bad)
jne
inc
les
dec
movs
pop
inc
push
lds
mov
aam
xor
push
pop
aad
aas
data16
in
mov
test
gs
push
pcmpgtb
and
hlt
adc
pop
cmc
cs
jnp
(bad)
xchg
mov
gs
test
mov
scas
adc
inc
out
test
push
and
jo
inc
xchg
movs
movs
and
out
mov
lea
push
mov
fisttp
inc
ret
and
imul
cli
push
jmp
aad
push
les
les
jmp
ror
test
cmc
adc
fcomp
cmp
adc
xor
sbb
add
xchg
or
pop
cmc
sub
sub
movs
cs
adc
and
or
inc
aad
xor
adc
jb
sub
movs
jp
aas
lds
inc
(bad)
fs
push
aam
and
push
outs
aad
aas
outs
test
in
mov
test
gs
dec
movq
jne
je
pop
mov
imul
mov
mov
gs
shr
cmps
push
xchg
xchg
jne
xchg
cdq
adc
test
leave
inc
lea
mov
in
(bad)
xor
pusha
lds
mov
xor
loope
out
fst
hlt
and
iret
scas
mov
push
int
sti
xor
out
out
out
div
fs
xor
add
in
call
and
adc
scas
lahf
iret
xchg
adc
xor
daa
shl
in
add
xchg
pop
and
adc
cmp
movs
cmp
xor
movs
aaa
dec
pop
cmps
and
adc
xor
xor
ja
aas
les
dec
movs
jne
dec
lds
jp
arpl
aam
and
pop
push
outs
aad
aas
dec
imul
push
in
mov
test
jle
bound
imul
addr16
hlt
push
mov
dec
cmc
jnp
dec
push
xchg
xchg
xchg
add
push
scas
gs
test
add
lods
xchg
jne
xchg
in
adc
mov
add
iret
mov
xor
pusha
adc
fild
inc
(bad)
adc
inc
into
scas
fiadd
mov
xor
loopne
jmp
xor
add
into
pop
data16
out
je
and
adc
mov
pop
jo
add
ja
adc
sub
push
outs
push
xchg
pop
outs
xchg
add
or
pop
adc
ss
aaa
pop
movs
daa
lock
outs
and
add
sub
inc
aad
xor
dec
(bad)
dec
push
pusha
les
xor
ja
cmp
aam
and
arpl
push
div
adc
push
mov
test
inc
in
subps
push
addr16
hlt
data16
push
cmc
and
dec
push
sahf
xchg
mov
gs
add
mov
inc
mov
xchg
mov
mov
mov
mov
jo
inc
mov
iret
mov
xor
pusha
mov
xor
int
loop
in
enter
lds
scas
int
ret
(bad)
(bad)
push
ret
xor
in
(bad)
jbe
test
add
int
in
in
popf
je
and
adc
in
out
xchg
xor
sub
add
jp
das
pop
add
adc
sbb
pop
lock
xor
cmp
xor
pop
mov
loopne
aad
xor
das
(bad)
push
push
imul
jl
jle
fs
jne
add
aam
or
push
outs
aad
aas
jle
push
ja
in
mov
test
in
cmovne
arpl
hlt
jge
add
gs
or
xlat
xchg
mov
gs
test
push
rol
jne
xchg
(bad)
adc
pushf
mov
and
jo
inc
in
movs
fwait
and
mov
pusha
mov
xor
jmp
mov
clc
adc
and
jecxz
into
inc
rol
loopne
std
add
xor
sar
fs
xor
add
jmp
(bad)
data16
int3
je
and
jne
lahf
test
add
xor
push
add
push
xchg
popa
xchg
sbb
adc
push
movs
inc
lock
sub
cmp
adc
adc
ds
or
ja
jle
push
nop
inc
movs
push
inc
dec
lds
outs
(bad)
cmova
xor
push
aad
aas
outs
mul
adc
jl
dec
test
gs
in
(bad)
out
outs
hlt
popa
mov
dec
cmc
inc
pop
dec
push
adc
gs
out
xchg
push
mov
mov
jne
xchg
jecxz
cmps
jmp
and
jo
inc
mov
scas
test
mov
xor
into
xlat
loope
ret
and
jecxz
stc
inc
cld
(bad)
(bad)
push
aam
retf
aad
push
out
icebp
jbe
div
fs
sti
add
mov
jecxz
(bad)
out
je
and
adc
fcomp
jae
shl
in
add
sub
jge
xor
xchg
xor
mov
aaa
cmp
sbb
aaa
lds
and
add
push
loopne
aad
xor
es
adc
les
pop
movs
push
inc
dec
lds
xor
aam
xor
push
dec
aad
aas
sub
jbe
outs
in
mov
test
ins
in
pcmpeqd
and
mov
push
cmc
dec
pop
jns
mov
pushf
add
push
mov
mov
mov
adc
inc
jmp
mov
dec
and
jo
inc
mov
xchg
test
mov
mov
fbstp
inc
out
shl
in
scas
mov
push
cld
add
xor
icebp
mov
aad
shl
add
jmp
je
and
adc
cmps
lahf
call
test
shl
push
outs
add
adc
adc
sbb
and
and
or
mov
loopne
aad
xor
or
inc
push
inc
les
xor
outs
inc
jge
adc
je
jne
das
aam
and
push
jle
jl
sub
jne
push
in
mov
test
gs
cmova
fs
or
add
pop
pop
outs
push
pushf
xchg
cmc
add
push
in
gs
test
push
scas
xchg
jne
xchg
adc
mov
and
jo
inc
sahf
movs
call
cmps
scas
xor
pusha
les
mov
xor
out
xlat
mov
rcl
shl
les
loope
int3
add
xor
sar
out
fbstp
jmp
scas
in
gs
out
je
and
adc
out
lahf
stc
xchg
ds
sbb
ins
ror
in
add
adc
xchg
cmp
adc
imul
aaa
and
and
popa
daa
pop
mov
loopne
aad
xor
cmp
les
nop
dec
movs
pop
inc
push
lds
jnp
pop
inc
inc
aam
or
push
jp
popa
aas
jbe
jle
outs
in
mov
test
gs
in
mulps
push
addr16
hlt
sbb
jne
cmc
dec
pop
jo
lahf
xchg
jmp
gs
push
mov
inc
mov
adc
test
mov
cmps
movs
movs
and
mov
pusha
xchg
mov
xor
(bad)
(bad)
inc
rcl
out
xlat
korb
scas
mov
push
test
xor
fidivr
icebp
shl
test
(bad)
fsub
out
je
and
adc
aad
cmc
xchg
xor
test
shl
in
add
xchg
push
xchg
je
sbb
add
fs
aaa
or
add
and
cmp
cmp
xor
or
push
push
jae
inc
nop
imul
push
inc
pusha
aam
and
push
cs
aas
pop
mul
addr16
mov
test
jl
gs
jp
inc
hlt
dec
mov
push
cmc
pusha
pop
dec
push
mov
cmps
lea
cdq
push
movs
xchg
adc
div
fwait
inc
out
mov
es
pusha
cwde
push
xchg
into
push
rcl
out
inc
movs
adc
and
fild
in
repnz
push
les
jmp
xchg
add
std
(bad)
cld
data16
std
je
and
adc
mov
pop
sub
add
sbb
or
sub
jge
sbb
sbb
ins
mov
aaa
adc
and
sub
adc
xor
add
les
xor
push
das
push
(bad)
addr16
push
aam
cmp
push
inc
aad
aas
outs
test
in
mov
test
push
out
addr16
jae
xchg
dec
jne
cmc
jle
ja
mov
lods
add
push
lods
gs
out
sahf
push
cmps
xchg
jne
xchg
popf
adc
lahf
mov
and
jo
inc
popf
movs
mov
popf
iret
mov
xor
pusha
cdq
push
(bad)
mov
xor
mov
in
inc
mov
korw
scas
mov
push
jmp
shl
mov
int
shl
in
add
mov
xchg
data16
(bad)
je
and
adc
cld
lahf
jmp
shl
in
add
jge
pop
pop
xor
adc
and
movs
push
lock
lds
and
pop
cmps
and
sbb
xor
sub
inc
push
(bad)
les
pusha
movs
addr16
and
bound
dec
(bad)
arpl
aam
or
push
push
aad
aas
pop
idiv
ja
in
mov
test
addr16
lsl
and
hlt
push
mov
jno
inc
pop
js
lods
xchg
mov
test
gs
test
push
xchg
xchg
lea
in
lods
mov
and
jo
inc
test
fwait
cmps
cmps
call
mov
xor
ret
inc
sti
adc
and
xchg
scas
fadd
(bad)
in
push
into
add
xor
lock
in
div
aam
out
in
xlat
(bad)
lahf
data16
repz
and
adc
mov
pop
add
add
push
xchg
and
adc
or
adc
adc
xor
das
cmps
das
daa
and
aad
xor
dec
(bad)
inc
push
push
les
sub
pop
das
imul
pop
sbb
push
sub
jle
dec
imul
fs
mov
test
inc
in
cmova
addr16
hlt
pop
mov
dec
cmc
je
jb
rcl
mov
test
scas
push
xchg
xchg
jne
xchg
mov
sar
mov
xchg
inc
cwde
movs
mov
call
cmps
xchg
xor
pusha
(bad)
push
stos
mov
xor
ret
inc
fst
hlt
and
jecxz
iret
inc
clc
(bad)
out
push
mov
mov
jbe
test
gs
clc
data16
out
je
and
adc
in
jmp
rcl
in
add
pop
xchg
pop
xchg
pop
shl
adc
add
movs
inc
lock
lds
dec
add
xor
inc
mov
loopne
aad
xor
dec
(bad)
push
aaa
les
xor
lds
das
je
jnp
fs
cmp
inc
aas
ins
test
in
mov
test
outs
in
(bad)
out
pmuludq
push
xchg
ds
cmc
gs
jnp
xchg
xchg
inc
push
xchg
mov
stos
push
rol
jne
xchg
nop
adc
cmps
mov
and
jo
inc
popf
movs
mov
test
cmps
push
movs
mov
xor
in
lds
in
and
lahf
scas
fld
mov
xor
idiv
into
fs
xor
add
repnz
out
je
and
adc
ficomp
and
in
add
and
dec
pop
sete
adc
cmp
inc
lock
cmp
add
cs
xor
or
sbb
mov
pop
or
fs
dec
les
nop
jnp
pop
inc
pop
lds
das
jg
arpl
aam
sbb
push
je
inc
aas
xor
push
ja
in
mov
test
arpl
aas
nop
and
hlt
push
mov
jbe
push
pop
or
xchg
xchg
test
xchg
push
cmps
mov
mov
mov
inc
movs
jne
xchg
sahf
adc
mov
lods
inc
mov
test
xor
pusha
mov
call
push
in
xlat
out
inc
fcom
test
inc
aad
ret
inc
popf
(bad)
rcl
cmps
xor
out
in
jbe
test
add
(bad)
(bad)
frstor
out
je
and
adc
out
lahf
xlat
xchg
and
test
rcl
in
add
and
jo
cmp
pop
adc
sbb
cmp
and
pop
cmps
aas
daa
aas
mov
loopne
aad
xor
and
les
push
movs
jle
push
lds
das
pop
mov
aam
sub
jg
push
test
inc
mov
test
jae
xor
outs
out
addr16
hlt
inc
mov
outs
cmc
je
push
push
adc
gs
out
cmps
push
add
jne
xchg
scas
adc
div
int
mov
iret
test
test
adc
fistp
inc
fst
mul
nop
scas
cli
inc
inc
icebp
push
call
aad
push
cmp
ret
add
xlat
(bad)
out
je
and
jne
lahf
xchg
xchg
sbb
sub
aaa
ror
in
add
cmp
jb
cmp
aas
adc
and
adc
pop
movs
add
adc
push
and
and
or
or
cmp
cs
push
push
push
les
push
movs
push
inc
dec
lds
inc
push
aam
sbb
push
push
aad
aas
jge
sub
in
mov
test
pop
in
andnps
daa
addr16
pop
mov
or
jp
jb
mov
push
test
add
mov
xchg
adc
inc
cwde
jne
xchg
mov
mov
pop
movs
mov
xchg
cmps
movs
xor
pusha
mov
xor
cmc
xlat
retf
adc
and
in
scas
iret
inc
into
(bad)
cmc
push
fld
push
cmp
mov
clc
add
in
(bad)
data16
popf
je
and
adc
out
out
or
adc
in
add
add
adc
xor
adc
sbb
sbb
and
movs
and
cmps
push
daa
sbb
xor
sub
les
movs
addr16
cmp
adc
inc
popa
aam
sbb
push
push
aad
aas
jg
xor
in
mov
test
arpl
imul
out
addr16
hlt
inc
mov
dec
cmc
inc
pop
pop
push
mov
mov
lea
mov
adc
inc
popf
jne
xchg
mov
ss
mov
inc
jmp
es
pusha
stos
push
in
aam
sbb
push
xlat
xlat
fild
shl
scas
mov
push
iret
add
xor
iret
mov
out
fdiv
fwait
add
jmp
out
je
and
adc
out
lahf
lea
pop
rol
in
add
aas
xchg
pop
push
xchg
push
sar
cmp
fs
aaa
push
movs
sbb
and
sub
and
add
sbb
cmp
push
push
push
les
push
movs
dec
inc
inc
lds
das
jg
jne
push
aam
xor
push
imul
aas
jnp
push
ja
in
mov
test
push
in
packssdw
js
inc
hlt
pusha
mov
imul
lea
xchg
test
add
add
xchg
adc
mov
test
inc
lock
mov
es
cmps
sahf
xor
pusha
ret
push
mov
fistp
inc
out
adc
inc
sahf
scas
mov
push
mov
cld
xor
(bad)
mov
int3
div
int
shl
sahf
gs
out
repnz
je
and
adc
fstp
or
add
or
daa
sar
jg
mov
aaa
adc
and
or
adc
cmp
or
es
dec
push
push
les
dec
movs
pop
inc
cmp
push
das
popa
mov
aam
or
push
push
aad
aas
ins
div
inc
in
mov
test
in
cmovne
jl
popa
hlt
adc
jl
jp
inc
cmc
dec
pop
dec
push
mov
stos
add
push
cwde
cmps
test
push
sahf
xchg
adc
inc
xchg
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
test
loop
mov
mov
mov
xor
(bad)
xlat
mov
fst
in
fadd
cld
inc
retf
inc
jecxz
(bad)
push
out
add
xor
out
mov
cld
fs
xor
add
ror
je
and
adc
(bad)
lahf
in
das
pop
or
add
pop
xchg
add
adc
aas
mov
aaa
push
movs
add
cmp
adc
pop
movs
and
pop
cmps
cmp
add
xor
(bad)
pop
push
outs
les
sub
data16
jp
jnp
pop
aam
and
push
aad
aas
das
idiv
ja
in
mov
test
divps
outs
addr16
hlt
sbb
jne
cmc
inc
pop
dec
push
nop
xchg
movs
add
push
xchg
gs
call
xchg
jne
xchg
mov
sar
lods
mov
and
jo
inc
nop
movs
mov
es
cmps
popf
xor
pusha
adc
mov
push
in
xlat
hlt
inc
repnz
and
xchg
scas
fadd
(bad)
aam
mov
out
into
aad
push
fidivr
retf
fs
add
dec
out
je
and
adc
mov
pop
jb
xor
ja
sub
arpl
and
daa
cmc
aaa
adc
xor
sbb
or
adc
pop
cmps
push
daa
lfs
loopne
aad
xor
and
dec
push
push
les
xor
inc
das
pop
(bad)
jo
jp
xor
ja
inc
aas
imul
dec
in
mov
test
fs
pcmpeqd
pop
addr16
hlt
dec
mov
pop
cmc
jge
inc
push
mov
fwait
lods
test
push
scas
xchg
jne
xchg
mov
xor
mov
mov
pusha
mov
xchg
mov
xor
jmp
and
fild
cmps
push
in
icebp
xor
(bad)
mov
shl
add
retf
mov
and
adc
icebp
lahf
fist
(bad)
shl
xor
add
pop
rol
pop
adc
cmp
cmp
push
lds
and
mov
loopne
aad
xor
push
(bad)
inc
push
inc
les
jbe
push
pop
lds
das
dec
(bad)
push
inc
dec
aam
and
dec
push
jle
sbb
dec
mul
fs
mov
test
pusha
in
mulps
inc
outs
hlt
dec
mov
dec
cmc
inc
pop
dec
push
lea
xchg
gs
shr
out
popf
xchg
adc
inc
call
call
and
jo
inc
lea
cmps
es
sahf
xor
pusha
test
mov
xor
jmp
and
std
scas
stc
inc
rol
lock
mov
out
push
(bad)
mov
ret
test
in
in
in
gs
retf
out
je
and
jne
lahf
aam
xor
test
shl
and
outs
adc
xchg
aaa
shl
inc
adc
pop
mov
aaa
push
movs
dec
lock
lds
and
xor
mov
loopne
aad
xor
sub
ja
dec
les
nop
push
movs
pop
inc
lds
inc
(bad)
ins
inc
jb
inc
cmp
push
and
(bad)
dec
div
in
mov
test
inc
in
cmovno
outs
addr16
hlt
ins
mov
ins
cmc
je
jb
mov
cmps
mov
mov
xchg
xchg
jne
xchg
mov
mov
mov
scas
jo
inc
mov
cwde
and
mov
pusha
adc
nop
xor
(bad)
inc
mov
(bad)
retf
inc
inc
rcl
hlt
xor
idiv
ret
fs
xor
add
out
(bad)
sahf
out
out
into
and
fistp
and
add
sub
imul
cmc
sub
cmp
mov
aaa
push
movs
add
daa
lds
and
and
mov
loopne
aad
xor
dec
(bad)
inc
push
jae
inc
nop
push
movs
pop
inc
inc
lds
cmp
ja
jae
ins
sbb
push
je
pop
aas
ins
test
in
mov
test
push
in
andnps
das
addr16
hlt
sbb
dec
xchg
jbe
adc
dec
pop
push
add
push
jmp
add
mov
nop
adc
inc
mov
lods
xchg
jecxz
cmp
ss
scas
and
jo
inc
jmp
mov
test
mov
xor
sahf
xlat
rol
mul
ret
inc
pop
mov
xor
pushf
mov
xchg
fs
xor
add
aam
mul
out
je
and
adc
iret
lahf
retf
pop
jae
sbb
or
test
sub
xchg
xadd
adc
mov
aaa
sub
and
sub
push
loopne
aad
xor
xor
push
push
arpl
pop
nop
movs
push
inc
xor
bound
dec
(bad)
dec
inc
cs
add
push
outs
aad
aas
and
in
mov
test
gs
in
pcmpgtd
pop
addr16
dec
mov
dec
cmc
inc
pop
jge
mov
mul
test
xchg
xchg
jne
xchg
mov
mov
rol
movs
lahf
and
in
xor
adc
fild
inc
les
repz
jmp
out
inc
inc
stc
push
scas
add
push
std
mov
aad
fidiv
loopne
xlat
in
gs
fldenv
out
je
and
jne
lahf
xlat
xchg
sub
das
test
cmp
or
sbb
sub
adc
add
setne
jg
mov
aaa
xor
lds
and
sbb
push
loopne
aad
xor
push
(bad)
fs
xor
movs
inc
imul
inc
es
sbb
push
ja
js
div
ja
in
mov
test
dec
in
punpckhbw
jns
sbb
push
mov
or
push
rcl
repz
out
test
ret
adc
inc
xchg
jne
xchg
lahf
adc
mov
test
jo
inc
xchg
movs
mov
mov
pusha
mov
xor
retf
inc
xlat
adc
and
in
test
hlt
push
out
add
xor
sar
jmp
xchg
add
mov
and
in
out
ret
cmc
in
jne
lahf
out
xchg
adc
sar
in
add
sbb
shl
jg
mov
aaa
xor
and
push
cmps
adc
adc
xor
or
push
nop
push
movs
jo
pop
lds
addr16
gs
jp
push
and
push
pop
aad
aas
push
in
mov
test
in
cmovs
push
addr16
hlt
jb
push
xchg
cmp
cmc
dec
pop
jg
stos
xchg
add
test
push
add
jne
xchg
mov
mov
scas
inc
test
iret
test
xor
pusha
mov
xor
xchg
xlat
loope
jecxz
mov
inc
loope
cmps
inc
out
out
mov
les
repz
int
(bad)
xor
ror
je
and
jne
lahf
repz
cs
and
add
xor
sbb
sete
shl
sbb
jg
mov
aaa
push
movs
add
or
movs
adc
cmps
adc
loopne
aad
xor
adc
jae
jb
and
pop
lds
aas
(bad)
jge
je
pusha
sbb
push
sub
dec
aas
inc
imul
inc
in
mov
test
pop
in
(bad)
out
addr16
hlt
data16
ins
cmc
inc
pop
or
pushf
xchg
stos
add
push
mov
add
rol
jne
xchg
mov
lahf
(bad)
jmp
and
jo
inc
lods
movs
scas
and
mov
sahf
xor
pusha
ret
push
mov
(bad)
push
in
xlat
lock
rcl
loope
out
(bad)
in
scas
mov
push
jecxz
cli
xor
out
aad
jecxz
loopne
shl
enter
in
gs
jecxz
cld
out
je
and
adc
cmps
lahf
xchg
xchg
add
push
test
shl
test
outs
cmp
sub
data16
sbb
adc
adc
and
and
sbb
sbb
and
cmp
adc
jl
sub
inc
push
push
les
jae
pop
inc
and
inc
das
inc
mov
dec
mov
push
and
inc
aas
push
not
push
test
sbb
out
addr16
hlt
push
mov
add
push
pop
push
add
push
mul
test
add
cdq
xchg
jne
xchg
cwde
adc
icebp
mov
and
jo
inc
lock
mov
lock
and
cmps
sahf
xor
pusha
(bad)
push
loopne
mov
mov
mov
xlat
rol
and
xchg
scas
inc
(bad)
hlt
push
cld
add
xor
fistp
icebp
fs
add
int3
(bad)
sahf
data16
out
je
and
adc
fstp
adc
add
sbb
shl
jg
mov
aaa
sbb
adc
push
lds
and
add
add
sbb
or
pop
aas
(bad)
inc
push
sub
jl
ins
movs
push
inc
push
lds
pop
mov
jge
cmp
push
dec
aad
aas
pop
div
ja
in
mov
test
outs
in
movd
inc
addr16
xchg
arpl
cmc
popw
push
push
xchg
xchg
add
repz
out
out
movs
xchg
adc
inc
sahf
jne
xchg
scas
adc
lods
mov
and
jo
inc
out
fwait
and
test
mov
xor
in
xlat
into
inc
lods
adc
and
shr
push
into
add
xor
pushf
mov
int
into
xor
add
mov
cld
data16
out
je
and
adc
rcr
jno
jg
sub
pop
add
sub
and
xor
pop
adc
cmp
pop
lock
lds
and
add
or
xor
or
je
push
les
push
movs
jns
pop
lds
arpl
je
arpl
dec
cmp
push
and
add
push
imul
jno
dec
mov
test
adc
cmovbe
pop
addr16
jae
push
xchg
popa
jne
cmc
pop
pop
js
int
test
gs
out
lea
cwde
xchg
jne
xchg
jmp
ss
mov
and
jo
inc
out
movs
mov
mov
(bad)
xor
pusha
xchg
push
push
cmps
push
out
xlat
enter
clc
and
xchg
scas
cli
inc
in
mov
xor
les
out
xchg
les
fisttp
(bad)
je
and
scas
lahf
iret
xchg
push
pop
xor
add
add
adc
arpl
adc
or
push
lock
adc
dec
daa
cmps
pop
daa
xor
ds
aad
xor
xor
pusha
push
dec
les
imul
inc
inc
inc
aam
xor
push
inc
aad
aas
dec
not
gs
mov
test
jb
xor
pop
out
addr16
push
mov
jl
inc
pop
pushw
xchg
xchg
mov
mov
jecxz
mov
inc
loop
stos
xchg
jmp
mov
mov
out
movs
lods
and
xchg
cmps
mov
shl
push
mov
enter
mov
xchg
xlat
fild
int3
and
jmp
(bad)
(bad)
push
xlat
add
push
(bad)
mov
out
fs
xor
add
mov
out
data16
out
je
and
jne
lahf
int3
xchg
push
pop
das
test
xor
cmp
sub
xor
adc
xor
movs
add
pop
lds
dec
add
xor
or
sbb
or
adc
les
inc
pop
lds
dec
(bad)
jge
and
jbe
jno
push
push
sub
inc
aas
inc
test
in
mov
test
gs
in
movd
pop
addr16
hlt
push
jne
cmc
push
pop
pop
push
mov
push
cmps
gs
mov
push
call
jne
xchg
loop
mov
mov
and
jo
inc
in
movs
mov
mov
mov
jecxz
xchg
xor
pusha
mov
xor
sahf
xlat
ret
inc
clc
adc
and
mov
movs
push
mov
xor
cmp
fs
loopne
fxam
shl
(bad)
out
cmps
out
je
and
adc
out
lahf
(bad)
xchg
and
ja
and
add
sbb
or
adc
das
mov
aaa
dec
movs
add
and
adc
dec
sbb
add
push
aad
xor
add
les
push
movs
dec
inc
pop
lds
and
inc
push
aam
xor
push
pop
aad
aas
and
in
mov
test
jg
push
(bad)
out
addr16
adc
jp
pop
pop
dec
push
xchg
mov
xchg
test
add
mov
inc
stos
jne
xchg
mov
(bad)
mov
and
jo
inc
sahf
movs
and
cmps
mov
lods
pusha
mov
xor
retf
inc
ret
and
(bad)
scas
leave
inc
rol
rcl
cmc
xor
(bad)
mov
loope
xchg
call
pop
movs
out
je
and
adc
les
and
in
add
cmp
and
and
and
sub
pop
lock
and
and
push
loopne
aad
xor
sub
fs
inc
les
cmp
popa
das
dec
(bad)
dec
inc
outs
aam
sbb
push
push
aad
aas
outs
imul
pop
in
mov
test
arpl
xor
imul
dec
mov
push
push
stos
xchg
icebp
add
push
stos
cmps
test
push
mov
mov
test
adc
test
xlat
and
jo
inc
mov
cmps
mov
xchg
push
lahf
mov
xor
(bad)
xlat
out
inc
fist
int
std
lds
inc
ret
(bad)
out
out
in
sahf
aad
push
stc
mov
in
repz
add
ret
(bad)
data16
shl
adc
sti
lahf
leave
xchg
push
pop
jb
and
and
sub
outs
arpl
sub
fs
sbb
sbb
or
and
push
cmps
popa
daa
adc
xor
sbb
jl
pop
les
nop
ins
movs
imul
(bad)
popa
inc
jnp
push
or
push
and
addr16
inc
test
in
mov
test
in
vmread
inc
addr16
hlt
push
popa
xchg
jge
push
push
mov
push
(bad)
gs
out
cmps
push
xchg
xchg
jne
xchg
mov
lods
mov
and
jo
inc
movs
movs
fisub
nop
cmps
lods
xor
pusha
lahf
push
xchg
lods
push
xchg
xlat
repnz
out
test
inc
int3
scas
jecxz
lock
scas
push
in
fdiv
les
xchg
fs
xor
add
retf
(bad)
int
fucom
out
je
and
adc
loope
retf
xchg
pop
pop
jbe
push
shr
in
add
add
and
add
xchg
push
jg
mov
aaa
shld
lds
and
daa
cmps
daa
daa
inc
mov
loopne
aad
xor
aas
(bad)
ja
push
les
jb
jne
(bad)
lds
mov
sub
sbb
je
ins
ja
in
mov
test
jge
inc
cmovs
push
addr16
hlt
data16
ins
cmc
push
pop
pushw
adc
gs
test
add
jne
xchg
call
mov
and
jo
inc
in
movs
scas
and
mov
pusha
mov
xchg
mov
xor
icebp
xlat
mov
mov
(bad)
in
scas
fld
(bad)
aam
xlat
add
push
std
mov
retf
test
out
clc
in
gs
pop
data16
out
je
and
adc
rcr
test
ror
in
add
jg
dec
pop
and
adc
adc
adc
and
sub
mov
loopne
aad
xor
dec
(bad)
dec
push
dec
les
pusha
movs
addr16
popa
lds
aas
(bad)
jl
addr16
and
push
push
push
aad
aas
pop
imul
fs
mov
test
gs
xor
dec
out
addr16
push
mov
arpl
das
pop
push
push
stos
xchg
test
lods
push
cmc
mov
lahf
push
scas
xchg
jne
xchg
xchg
adc
hlt
mov
and
jo
inc
lods
movs
mov
popf
cmps
cmps
xor
pusha
ret
mov
xor
xchg
xlat
ret
adc
and
aad
cmc
inc
fcmovb
out
enter
into
aad
push
loope
jmp
fs
xor
add
ror
je
and
jne
lahf
in
xchg
movhps
popa
shl
in
add
sbb
or
adc
and
outs
xchg
inc
jg
mov
aaa
push
movs
cmp
sbb
sub
cmp
add
cmps
data16
es
loopne
aad
xor
cmp
les
movs
jge
pop
lds
push
(bad)
jp
addr16
and
push
imul
ja
push
in
mov
test
in
movq
inc
addr16
sbb
push
xchg
and
popa
cmc
jge
je
xchg
xchg
movs
add
push
nop
gs
test
add
into
xchg
jne
xchg
mov
cwde
jmp
and
jo
inc
test
xchg
mov
shl
adc
lahf
xor
rcl
iret
inc
movs
adc
and
leave
scas
in
mov
cmps
push
mov
ret
xor
ret
jbe
test
fimul
shl
jecxz
call
lahf
int
push
pop
xor
add
jle
aas
pop
daa
xchg
or
adc
ins
mov
aaa
adc
pop
lock
xor
and
push
loopne
aad
xor
sub
push
push
imul
nop
pusha
movs
dec
inc
inc
lds
inc
gs
add
push
js
jnp
pop
test
in
mov
test
arpl
sub
pop
out
addr16
jb
jle
bound
cmc
cmp
or
aad
mov
call
gs
test
push
mov
adc
mov
fst
jmp
and
jo
inc
movs
movs
pushf
and
stc
cmps
xor
(bad)
xor
in
in
lods
adc
and
imul
mov
xor
xchg
in
fs
repnz
jecxz
xchg
data16
fdiv
cmc
adc
fstp
and
add
or
xchg
adc
push
cmc
add
imul
lock
sub
aas
cmps
outs
daa
dec
mov
loopne
aad
xor
adc
push
push
dec
les
imul
push
inc
jle
jae
daa
mov
push
push
idiv
ja
in
mov
test
in
nop
pop
addr16
push
jne
cmc
pusha
pop
gs
aam
add
mov
mov
out
xchg
mov
adc
mov
jo
inc
call
es
cmps
mov
mov
mov
xor
(bad)
inc
into
adc
and
int
lds
(bad)
mov
xor
test
hlt
fs
xor
add
test
lds
(bad)
lahf
mov
sbb
sub
dec
add
sbb
add
es
pop
adc
outs
mov
aaa
xor
and
push
cmps
popa
daa
adc
xor
adc
push
push
ins
les
xor
ja
inc
(bad)
sbb
aam
cmp
push
imul
aas
sub
xor
in
mov
test
pop
in
movq
jb
push
hlt
push
mov
push
cmc
arpl
dec
push
mov
scas
add
push
test
test
out
mov
adc
inc
cwde
jne
xchg
scas
adc
mov
mov
and
xchg
cmps
sahf
xor
pusha
mov
xor
jmp
and
xchg
scas
mov
movs
push
in
add
xor
loop
in
jbe
not
fs
xor
gs
out
je
and
jne
lahf
rcl
sbb
add
aas
xchg
rol
push
adc
add
cs
push
movs
push
lock
outs
and
cmps
aas
daa
sbb
or
cmp
cmp
or
bound
les
jno
inc
inc
jnp
or
jle
inc
inc
outs
aam
and
push
pop
aad
aas
jle
dec
ja
in
mov
test
jnp
dec
lsl
and
hlt
push
jne
cmc
outs
pop
jp
test
inc
push
lea
test
push
pushf
xchg
jne
xchg
adc
mov
and
jo
inc
mov
and
cmps
mov
pusha
cmps
push
cmps
mov
xor
in
xlat
rol
aam
pop
iret
inc
in
mov
push
rol
lds
fnstsw
repz
xor
gs
les
out
je
and
adc
mov
pop
and
and
aaa
in
add
or
or
ss
pop
adc
pop
mov
aaa
pop
movs
and
add
movs
push
dec
sbb
sub
pop
aad
xor
sub
jl
push
les
movs
pop
inc
dec
lds
das
mov
aam
cmp
js
outs
div
ja
in
mov
test
inc
in
cmovbe
push
addr16
hlt
jb
dec
xchg
cmp
cmc
and
jo
rcl
mov
xchg
test
push
cwde
xchg
jne
xchg
mov
xchg
xchg
inc
xchg
movs
xchg
cmps
cmps
nop
xor
pusha
cdq
push
div
xchg
push
(bad)
xlat
aam
movs
adc
and
nop
scas
fild
xbegin
xor
fnstsw
xchg
fdiv
call
gs
(bad)
into
jmp
popf
je
and
adc
lds
and
add
jns
sbb
outs
xchg
push
rcr
sbb
adc
or
daa
movs
ds
imul
cmps
cmp
adc
xor
sub
adc
les
nop
movs
adc
pusha
lds
jl
push
inc
addr16
and
push
pop
aad
aas
pop
div
dec
in
mov
test
jb
inc
(bad)
out
addr16
hlt
adc
or
push
mov
push
xchg
gs
mov
push
xchg
xchg
jne
xchg
mov
test
mov
xchg
movs
xchg
and
lahf
cmps
xchg
xor
pusha
stos
push
push
mov
inc
int3
adc
and
call
(bad)
rcl
icebp
xor
loopne
fnstenv
not
fs
xor
add
in
jmp
je
and
adc
rcr
jbe
sbb
aaa
in
add
sbb
xchg
adc
and
xchg
pop
jg
mov
aaa
sub
and
and
ds
aad
xor
adc
jle
dec
les
je
jo
lds
cmp
pop
inc
jb
pop
add
push
push
div
ja
in
mov
test
sbb
jns
ins
hlt
addr16
cmp
cmc
pop
pop
jnp
xchg
xchg
mov
mov
mov
jne
xchg
mov
ss
and
jo
inc
popf
movs
mov
and
push
mov
sahf
push
repz
cmc
inc
cmps
adc
and
repz
fadd
(bad)
in
push
mov
shl
fdivr
iret
fs
xor
add
ror
shl
out
fcomi
int3
jne
lahf
rcl
xor
sbb
dec
add
cmp
jno
ss
pop
adc
sbb
sbb
aaa
lds
and
add
daa
add
xor
dec
(bad)
jbe
push
sub
pusha
movs
dec
inc
pop
lds
(bad)
bound
aam
add
push
push
aad
aas
pop
test
in
mov
test
adc
inc
orps
push
addr16
hlt
inc
mov
inc
cmc
jne
push
mov
and
movs
add
movs
xchg
jne
xchg
test
ss
stos
and
jo
inc
mov
iret
popf
es
pusha
cmps
push
mov
fbld
inc
int3
adc
and
call
(bad)
fcom
shl
lock
xchg
fs
in
stos
in
ror
je
and
adc
mov
pop
adc
add
sbb
xchg
adc
push
inc
adc
fs
aaa
adc
and
pop
cmps
sbb
inc
mov
loopne
aad
xor
dec
(bad)
jne
dec
les
nop
jbe
dec
inc
jno
push
das
xor
aam
xor
push
push
aad
aas
xor
push
ja
in
mov
test
dec
in
movq
jl
add
xchg
cmp
cmc
gs
push
push
mov
push
cli
gs
test
push
mov
inc
cwde
jne
xchg
in
adc
repz
and
jo
inc
stos
movs
mov
es
cmps
lahf
xor
pusha
mov
xor
(bad)
ret
inc
in
adc
and
nop
scas
inc
(bad)
movs
push
iret
add
push
iret
mov
into
xor
add
mov
cld
retw
je
and
adc
ret
lahf
leave
xchg
adc
sar
in
add
and
xchg
xor
pop
cmc
and
sub
inc
lock
adc
dec
inc
cmps
xor
inc
mov
loopne
aad
xor
ss
imul
and
cmp
push
das
(bad)
(bad)
sbb
aam
sbb
push
sub
sbb
dec
test
in
mov
test
sbb
push
addr16
hlt
sbb
jne
cmc
inc
pop
dec
push
mov
mov
add
iret
xchg
adc
inc
xchg
jne
xchg
popf
adc
mov
stos
inc
mov
mov
xchg
cmps
mov
scas
pusha
call
fistp
inc
fst
clc
and
jmp
out
fld
repz
(bad)
mov
sahf
fs
xor
add
test
je
and
adc
aad
not
adc
or
test
outs
sbb
xchg
push
rcr
add
imul
aaa
or
and
sub
add
pop
aad
xor
cmp
jb
jae
inc
nop
pusha
movs
js
jns
dec
das
jg
dec
inc
and
inc
add
push
je
dec
aas
inc
imul
adc
test
jl
push
punpckhdq
dec
addr16
dec
mov
jo
pusha
pop
outs
push
mov
push
movs
mov
mov
adc
inc
test
xchg
xchg
adc
pushf
mov
and
jo
inc
jmp
iret
(bad)
es
mov
pusha
mov
xor
jmp
retf
adc
and
int3
scas
loop
add
push
repz
xor
aad
(bad)
jbe
not
add
in
pop
data16
lock
and
adc
out
lahf
sti
xchg
add
push
test
rcl
test
pop
xchg
cmp
adc
sub
pop
lock
movs
xor
cmps
pusha
daa
cmp
xor
xor
inc
push
jo
addr16
pop
movs
jl
inc
lds
imul
inc
jo
arpl
dec
aad
aas
dec
imul
ja
in
mov
test
jnp
xor
jnp
pop
addr16
adc
jo
cmp
gs
adc
mov
nop
xchg
jne
xchg
mov
xor
inc
call
es
sahf
xor
pusha
lds
mov
xor
in
xlat
mov
std
inc
imul
mov
xor
in
push
idiv
fs
xor
gs
(bad)
data16
out
je
and
jne
lahf
retf
pop
adc
add
aas
xchg
outs
xchg
add
adc
aaa
adc
cmp
inc
lock
or
cmps
(bad)
xor
xor
and
les
dec
movs
push
inc
ins
lds
pop
(bad)
jge
jae
inc
and
push
aas
div
ja
in
mov
test
in
pcmpeqd
inc
addr16
hlt
je
gs
pop
jne
cmc
jnp
push
push
rcl
mov
test
push
movs
xchg
jne
xchg
mov
ss
mov
and
jo
inc
nop
movs
scas
and
scas
cmps
sahf
xor
pusha
mov
xor
xchg
xlat
retf
inc
ficom
shl
scas
mov
push
mov
fnsave
(bad)
mov
leave
fs
xor
add
mov
enter
xchg
adc
adc
adc
add
push
xchg
pop
fs
or
and
pop
adc
push
mov
aaa
push
movs
sbb
and
movs
or
and
add
xor
pop
xor
adc
push
push
popa
les
xor
lds
das
(bad)
(bad)
js
inc
aam
xor
push
jg
pop
aas
and
sub
in
mov
test
pop
in
punpckhdq
push
pmuludq
mov
outs
cmc
inc
pop
pop
push
mov
push
xchg
test
add
jne
xchg
stos
adc
scas
mov
and
jo
inc
test
lahf
es
cmps
(bad)
xor
pusha
mov
xor
not
out
inc
fst
hlt
and
call
(bad)
not
(bad)
xor
fstp
mov
rol
aad
frstor
out
je
and
adc
iret
lahf
in
xchg
sub
jo
pusha
shl
push
add
xchg
pop
outs
xchg
adc
adc
sub
movs
or
and
cmp
adc
xor
or
and
les
nop
dec
movs
js
lds
inc
jl
cmp
push
imul
aas
push
not
pop
in
mov
test
sbb
push
outs
hlt
push
mov
inc
cmc
jp
push
push
mov
xchg
push
test
test
push
mov
xor
(bad)
out
xor
inc
mov
test
or
lods
xor
pusha
mov
loopne
xchg
xor
sahf
xlat
mov
not
shl
scas
rol
loope
rol
xor
fistp
repz
ret
add
jmp
into
data16
loopne
int3
and
adc
cli
lahf
fst
cmp
and
or
adc
xchg
sub
xor
pop
adc
ds
aaa
xor
and
or
mov
loopne
aad
xor
and
les
arpl
dec
das
outs
mov
aam
or
push
dec
aad
aas
jge
jbe
inc
in
mov
test
jge
outs
pcmpeqw
and
hlt
dec
mov
pop
cmc
jnp
pop
push
lea
mov
add
mov
inc
mov
adc
(bad)
mov
and
jo
inc
xchg
movs
cdq
and
mov
lds
mov
xor
loop
in
inc
lds
hlt
and
lahf
scas
rol
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
cmps
lahf
iret
xchg
sub
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
outs
jne
cmc
bound
dec
push
test
mov
aam
loopne
fsubrp
mov
adc
inc
cmps
jne
xchg
call
ss
jo
inc
mov
iret
sahf
es
lds
pusha
xchg
mov
xor
aam
cld
inc
out
lock
lahf
scas
std
inc
popf
(bad)
mov
xor
les
xchg
fs
add
mov
fsub
out
je
and
adc
loope
int
dec
pop
aas
test
shl
in
add
xchg
gs
xor
daa
cmc
and
sub
xor
sbb
pop
lock
imul
pop
mov
loopne
aad
xor
push
(bad)
adc
les
jae
adc
and
adc
jl
inc
inc
cmp
ja
fs
push
sub
inc
aas
ins
imul
ja
in
mov
test
add
sub
pop
out
addr16
xchg
inc
jne
cmc
gs
dec
push
xchg
xchg
mov
gs
test
add
fld
cmps
jne
xchg
hlt
adc
icebp
mov
and
jo
inc
hlt
movs
shl
cmps
fnstenv
pusha
test
mov
xor
mov
inc
repnz
mov
movs
push
repnz
xor
lds
fsub
rol
mov
out
je
and
adc
in
into
xchg
push
pop
jno
and
xor
push
add
cmp
pop
pop
jns
aaa
shl
jg
mov
aaa
pop
movs
push
lock
cs
push
cmps
pusha
daa
inc
mov
loopne
aad
xor
or
push
push
jl
addr16
jo
or
lds
das
jge
sbb
and
push
xor
inc
aas
outs
div
ja
in
mov
test
pop
out
addr16
push
mov
or
popa
pop
dec
push
leave
xchg
mov
mov
mov
adc
inc
cmps
jne
xchg
lock
mov
pushf
and
jo
inc
jmp
iret
popf
es
cmps
fnsave
pusha
xchg
mov
xor
xchg
xlat
mov
loop
repz
xchg
scas
cld
inc
mov
in
in
test
sar
fs
xor
add
test
fisub
out
je
and
adc
in
int3
xchg
adc
cmp
daa
shl
in
add
cmp
xchg
shl
push
adc
cs
aaa
push
movs
add
adc
je
inc
movs
jae
sbb
daa
daa
pop
mov
loopne
aad
xor
or
les
jb
dec
inc
and
or
jle
add
aam
and
push
xor
inc
aas
ins
div
in
mov
test
gs
aas
minps
cmp
mov
adc
fs
dec
push
rcl
mov
aam
loopne
shr
mov
adc
inc
movs
jne
xchg
call
ss
jo
inc
scas
movs
les
loopne
lds
pusha
xchg
mov
xor
aam
cld
inc
out
lock
lahf
scas
std
inc
popf
(bad)
mov
xor
les
xchg
fs
add
mov
fsub
out
je
and
adc
loope
int
dec
pop
aas
test
shl
in
add
xchg
gs
xor
daa
cmc
and
sub
xor
sbb
pop
lock
imul
pop
mov
loopne
aad
xor
push
(bad)
adc
les
jae
adc
and
adc
jl
inc
inc
cmp
ja
fs
push
push
aad
aas
ins
not
push
in
mov
test
add
xor
pop
out
addr16
xchg
jp
adc
gs
dec
push
xchg
xchg
test
mov
test
add
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
jmp
iret
popf
es
cmps
fnsave
pusha
xchg
mov
xor
xchg
xlat
retf
adc
and
shr
rcl
out
(bad)
test
sar
fbstp
rol
call
out
je
and
adc
in
int3
xchg
pop
pop
jne
daa
shl
in
add
cmp
xchg
shl
push
adc
cs
aaa
push
movs
add
adc
je
inc
movs
xor
daa
pop
mov
loopne
aad
xor
or
les
jb
dec
inc
and
push
das
jle
add
aam
and
push
xor
inc
aas
ins
div
or
inc
mov
test
gs
jno
pop
out
addr16
xchg
jle
adc
fs
dec
push
rcl
mov
aam
loopne
xchg
out
mov
adc
inc
mov
adc
in
mov
and
jo
inc
scas
movs
les
loopne
lds
pusha
adc
shl
xlat
xlat
test
and
shr
mov
xor
les
xchg
fs
add
cmc
(bad)
fsub
out
je
and
adc
loope
int
dec
pop
ins
test
shl
in
add
xchg
gs
xor
and
inc
adc
sub
aaa
aaa
dec
movs
pop
lock
imul
pop
mov
loopne
aad
xor
push
(bad)
adc
les
jae
adc
and
push
das
jl
inc
inc
cmp
ja
pusha
mov
push
sub
inc
aas
ins
imul
mov
test
add
je
pop
out
addr16
xchg
and
adc
gs
dec
push
xchg
xchg
jmp
gs
test
add
fld
mov
adc
lock
and
jo
inc
hlt
movs
shl
cmps
fnstenv
pusha
adc
enter
lea
xlat
lods
inc
out
repnz
aam
inc
(bad)
movs
push
repnz
xor
lds
mov
rol
icebp
(bad)
frstor
out
je
and
adc
in
into
xchg
push
pop
jne
and
xor
push
add
cmp
pop
pop
jns
aaa
shl
pop
adc
sub
movs
push
lock
cs
push
cmps
pusha
daa
inc
mov
loopne
aad
xor
or
push
push
sub
addr16
jo
or
lds
jge
sbb
and
push
xor
inc
aas
outs
div
ja
in
mov
test
pop
out
addr16
push
mov
or
popa
pop
dec
push
int
in
add
push
mov
mov
mov
adc
inc
mov
adc
mov
leave
and
jo
inc
jmp
iret
popf
es
cmps
fnsave
pusha
adc
aam
movs
fisttp
inc
loop
repz
aad
cld
inc
mov
loopne
cdq
aad
push
sar
fs
xor
add
hlt
(bad)
fisub
out
je
and
adc
in
int3
xchg
pop
pop
imul
outs
cmp
xchg
shl
push
adc
cs
aaa
push
movs
add
adc
je
inc
movs
xor
daa
pop
mov
loopne
aad
xor
or
les
jb
dec
inc
and
push
das
jle
add
aam
and
push
xor
inc
aas
ins
div
or
inc
mov
test
gs
jno
pop
out
addr16
xchg
jle
adc
fs
dec
push
rcl
mov
aam
loopne
xchg
out
mov
adc
inc
mov
adc
in
mov
and
jo
inc
scas
movs
les
loopne
lds
pusha
adc
mov
push
(bad)
xlat
cld
inc
(bad)
adc
and
aad
std
inc
popf
(bad)
mov
xor
fnstsw
bnd
add
lock
fsub
out
je
and
adc
loope
int
dec
pop
je
shl
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
loopne
mov
lds
enter
rol
mov
out
je
and
adc
std
lahf
rcl
xor
xor
xor
cmp
xchg
sar
add
mov
aaa
xor
lds
and
add
add
sbb
fs
or
les
ins
movs
je
inc
lds
jl
jns
push
aam
cmp
push
pop
aad
aas
jae
dec
ja
in
mov
test
push
out
addr16
dec
mov
ja
jo
dec
push
test
lea
push
mov
sahf
test
push
mov
inc
mov
adc
pushf
mov
and
jo
inc
xchg
movs
cmps
and
cdq
cmps
mov
(bad)
pusha
lahf
push
stc
mov
xor
in
xlat
ret
adc
and
lock
std
inc
xlat
(bad)
rcl
stc
xor
sar
in
fbstp
rol
aad
ret
data16
cli
je
and
adc
cld
lahf
int
cmp
or
add
cmp
cmp
adc
cmc
pop
adc
xor
adc
adc
adc
sbb
mov
loopne
aad
xor
or
push
nop
jae
pop
inc
dec
lds
arpl
jge
pop
aam
cmp
push
pop
aad
aas
ins
neg
in
mov
test
in
subps
pop
addr16
dec
mov
jg
jge
push
push
lods
xchg
add
mov
mov
mov
xchg
xchg
jne
xchg
xchg
adc
mov
xchg
inc
mov
iret
and
cmps
mov
push
mov
fisttp
inc
(bad)
adc
and
hlt
scas
cld
inc
stc
(bad)
aad
out
add
xor
fnstsw
loop
shl
rol
ror
bnd
and
adc
lock
int3
xchg
sub
or
in
add
and
and
ds
sbb
sub
movs
push
lock
movs
adc
sbb
sbb
xor
aad
xor
adc
ins
push
inc
les
jb
jo
dec
lds
jge
push
inc
push
aam
cmp
push
push
aad
aas
ins
test
in
mov
test
outs
in
cmovae
pop
addr16
inc
mov
js
jl
dec
push
mov
push
lods
gs
xchg
mov
inc
mov
adc
mov
xchg
inc
nop
movs
test
nop
iret
popf
es
mov
mov
push
mov
fisttp
call
repz
cmc
scas
jecxz
std
(bad)
ficom
(bad)
xor
fdivr
jmp
in
gs
fsub
out
je
and
adc
std
lahf
rcl
xor
xor
xor
cmp
xchg
sar
push
adc
sub
or
sub
lds
and
add
add
push
aad
xor
or
les
ins
movs
je
inc
lds
(bad)
jns
push
aam
cmp
push
pop
aad
aas
jae
dec
ja
in
mov
test
push
out
addr16
dec
mov
ja
jo
dec
push
test
lea
push
mov
sahf
test
push
mov
inc
mov
adc
pushf
mov
and
jo
inc
xchg
movs
cmps
and
cdq
cmps
mov
(bad)
pusha
lahf
push
stc
mov
xor
in
xlat
ret
adc
and
lock
std
inc
xlat
(bad)
rcl
stc
xor
sar
in
fbstp
rol
aad
ret
data16
cli
je
and
adc
cld
lahf
int
cmp
push
test
shr
test
outs
cmp
cmp
adc
cmc
push
adc
xor
adc
adc
adc
sbb
mov
loopne
aad
xor
or
les
jae
pop
inc
dec
lds
arpl
jge
pop
aam
and
push
pop
aad
aas
ins
mul
in
mov
test
gs
jle
pop
out
addr16
xchg
inc
jne
cmc
fs
dec
push
rcl
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
pop
lock
imul
pop
mov
loopne
aad
xor
adc
ins
push
je
jae
jb
jo
dec
lds
jl
inc
inc
cmp
ja
jge
sbb
aad
aas
ins
idiv
ja
in
mov
test
outs
in
cmovae
pop
addr16
inc
mov
js
jl
dec
push
mov
push
lods
gs
xchg
fld
mov
adc
(bad)
mov
and
jo
inc
nop
movs
test
(bad)
iret
pushf
cmps
cmps
fnstenv
pusha
xchg
push
stc
mov
xor
jmp
rol
repz
loopne
jecxz
std
(bad)
ficom
cmc
xor
fdivr
(bad)
fidiv
int
aam
out
ror
je
and
adc
std
lahf
rcl
xor
xor
xor
cmp
xchg
sar
push
adc
sub
or
xor
and
add
add
adc
mov
pop
or
les
ins
movs
je
inc
lds
jl
jns
push
aam
cmp
push
pop
aad
aas
jae
dec
ja
in
mov
test
push
out
addr16
dec
mov
ja
jo
dec
push
stos
xchg
xchg
add
push
mov
sahf
test
push
mov
inc
mov
mov
lods
ss
mov
and
jo
inc
xchg
movs
cmps
and
cdq
cmps
mov
(bad)
pusha
cwde
push
test
xchg
push
out
xlat
loopne
repz
and
in
std
inc
xlat
(bad)
rcl
cli
xor
sar
icebp
fbstp
rol
ror
je
and
adc
cld
lahf
int
aas
pop
push
test
shr
test
outs
cmp
cmp
adc
cmc
and
pop
xchg
sbb
aaa
add
and
sbb
mov
loopne
aad
xor
or
imul
jg
jae
pop
inc
dec
lds
arpl
jge
pop
aam
xor
push
pop
aad
aas
ins
neg
jle
pop
mov
test
in
subps
pop
addr16
dec
mov
jg
jge
push
push
scas
xchg
mov
gs
mov
xchg
xchg
jne
xchg
xchg
adc
mov
xchg
inc
mov
iret
and
cmps
mov
push
stos
mov
xor
call
fiadd
in
and
loope
cld
inc
stc
(bad)
aad
out
add
xor
fnstsw
shl
add
lds
bnd
and
adc
lock
int3
xchg
sub
adc
add
and
and
xor
xchg
sbb
sub
movs
push
lock
movs
add
cmps
sbb
xor
aad
xor
adc
outs
push
pusha
les
jb
jo
dec
lds
jge
push
inc
push
aam
cmp
push
push
aad
aas
ins
test
in
mov
test
outs
in
cmovae
pop
addr16
inc
mov
js
jl
dec
push
mov
push
lods
gs
xchg
mov
inc
mov
adc
(bad)
mov
and
jo
inc
nop
movs
test
test
popf
es
mov
mov
push
scas
mov
xor
jmp
rol
repz
loopne
jecxz
std
(bad)
ficom
cmc
xor
fdivr
(bad)
fidiv
int
aam
out
ror
je
and
adc
std
lahf
rcl
xor
xor
xor
cmp
xchg
sar
push
adc
sub
or
xor
and
add
add
adc
mov
pop
or
les
ins
movs
je
inc
lds
jge
sbb
cmp
push
pop
aad
aas
jae
dec
ja
in
mov
test
push
out
addr16
push
mov
ja
jo
dec
push
stos
xchg
mov
mov
test
push
mov
inc
mov
adc
pushf
mov
and
jo
inc
jmp
iret
popf
es
cmps
fnsave
pusha
adc
mov
push
in
xlat
cld
inc
repz
and
aam
cld
inc
mov
loope
(bad)
test
sar
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
minps
cmp
mov
adc
fs
dec
push
rcl
mov
aam
loopne
xchg
out
mov
adc
inc
mov
adc
mov
xchg
inc
mov
iret
and
cmps
mov
push
mov
fisttp
inc
(bad)
adc
and
call
(bad)
aad
out
add
xor
les
shl
rol
mov
frstor
out
je
and
jne
lahf
int3
xchg
sub
adc
add
and
and
gs
and
sub
movs
push
lock
movs
sub
cmps
sbb
xor
aad
xor
adc
imul
movs
jo
dec
lds
(bad)
push
inc
push
aam
and
aas
ins
test
in
mov
test
push
out
addr16
inc
mov
js
jl
dec
push
adc
gs
add
xchg
jne
xchg
lahf
adc
mov
xchg
inc
nop
movs
scas
and
mov
mov
mov
push
test
mov
xlat
out
inc
call
repz
aad
jecxz
std
(bad)
ficom
movs
xor
fdivr
int3
fidiv
int
aam
loopne
call
out
je
and
jne
lahf
rcl
xor
xor
xor
cmp
xchg
shl
pop
xchg
adc
mov
aaa
shld
adc
ds
add
add
inc
aad
xor
or
les
ins
movs
je
inc
lds
jl
jns
push
aam
and
dec
push
pop
aad
aas
jae
dec
ja
in
mov
test
outs
in
minps
ja
jb
dec
mov
ja
jo
dec
push
lods
xchg
scas
add
push
mov
sahf
test
push
mov
inc
in
mov
jmp
and
jo
inc
xchg
movs
mov
es
cmps
mov
(bad)
pusha
(bad)
push
scas
mov
xor
jmp
adc
and
aam
std
inc
xlat
(bad)
rcl
movs
xor
sar
iret
fbstp
rol
cmc
pop
data16
cli
je
and
jne
lahf
int
add
sub
shr
test
outs
cmp
cmp
adc
cmc
push
adc
xor
adc
adc
adc
sbb
mov
loopne
aad
xor
or
ins
push
outs
les
jae
pop
inc
dec
lds
arpl
jge
pop
aam
and
pop
aas
ins
mul
dec
in
mov
test
in
subps
pop
addr16
dec
mov
jg
jge
push
push
test
push
mov
mov
pop
xchg
xchg
jne
xchg
xchg
adc
lea
xchg
inc
mov
iret
and
cmps
mov
push
xor
push
ret
xlat
in
inc
(bad)
adc
and
enter
stc
(bad)
aad
out
add
push
fnstsw
aam
shl
rol
hlt
(bad)
frstor
out
je
and
lock
int3
xchg
sub
shl
in
add
and
and
gs
and
sub
movs
push
lock
movs
sub
cmps
sbb
xor
aad
xor
adc
imul
movs
jo
dec
lds
(bad)
push
inc
push
aam
and
aas
ins
test
in
mov
test
push
out
addr16
inc
mov
js
jl
dec
push
adc
gs
add
xchg
jne
xchg
lahf
adc
mov
xchg
inc
hlt
movs
les
mov
mov
mov
push
scas
mov
xor
jmp
and
sahf
scas
inc
(bad)
movs
push
repnz
push
fdivr
repnz
int
aam
out
enter
(bad)
cmc
je
and
adc
std
lahf
rcl
xor
xor
xor
cmp
xchg
shl
push
adc
sub
movs
push
lock
cs
push
cmps
pusha
daa
inc
mov
loopne
aad
xor
or
push
push
xor
movs
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
loop
repz
nop
scas
std
inc
xlat
(bad)
rcl
out
(bad)
test
sar
fbstp
rol
loopne
ret
data16
cli
je
and
adc
cld
lahf
int
cmp
add
add
cmp
cmp
adc
adc
ja
or
and
and
push
cmps
or
pop
mov
loopne
aad
xor
inc
(bad)
dec
push
inc
les
outs
movs
dec
inc
push
lds
inc
and
sbb
push
dec
aad
aas
xor
jg
push
in
mov
test
gs
je
inc
out
addr16
pop
mov
outs
cmc
je
add
add
push
scas
gs
mov
mov
adc
inc
sahf
jne
xchg
mov
ss
mov
and
jo
inc
test
iret
pushf
es
cmps
les
pusha
mov
xor
(bad)
cld
inc
cli
adc
and
aam
jecxz
clc
(bad)
mov
xor
aam
movs
jbe
not
add
call
out
je
and
adc
icebp
lahf
test
xor
cs
add
cmp
cmp
fs
jbe
sbb
and
jae
aas
aaa
sbb
sbb
or
jo
cmp
sbb
pop
mov
loopne
aad
xor
inc
(bad)
dec
push
xor
jg
outs
movs
or
lds
jle
ins
inc
cmp
mov
push
jns
push
aas
and
imul
push
mov
test
jno
jno
pop
out
addr16
push
mov
push
push
lahf
xchg
mov
rol
mov
adc
inc
cwde
jne
xchg
(bad)
adc
scas
mov
and
jo
inc
call
iret
sahf
mov
mov
xor
retf
xlat
inc
out
and
shr
movs
push
mov
fnstenv
aad
mov
push
fsub
int3
add
hlt
pop
data16
cdq
je
and
adc
hlt
lahf
test
aas
shr
in
add
xchg
jge
jne
push
cmc
and
cmp
sub
pop
movs
adc
push
lds
and
sbb
sbb
inc
mov
loopne
aad
xor
push
(bad)
pop
push
jl
jp
ins
movs
adc
lds
(bad)
js
cmp
jge
pop
mov
push
dec
aad
aas
and
in
mov
test
gs
push
addr16
xchg
inc
jne
cmc
jno
add
mov
scas
mov
mov
adc
inc
cdq
jne
xchg
mov
mov
jo
inc
lock
mov
es
cmps
fnstenv
mov
xor
iret
xlat
mov
call
out
and
enter
in
(bad)
mov
xor
sar
fbld
into
add
icebp
(bad)
fsub
out
je
and
adc
cmc
lahf
xchg
xchg
pop
pop
cmp
cmp
sub
push
add
and
cmp
adc
gs
aaa
push
movs
pop
lock
push
dec
push
cmps
or
pop
mov
loopne
aad
xor
inc
(bad)
dec
push
jg
jae
outs
movs
dec
inc
push
lds
jl
jl
and
sbb
push
dec
aad
aas
xor
jg
pop
in
mov
test
gs
je
inc
out
addr16
pop
mov
outs
cmc
je
add
add
push
scas
gs
mov
mov
adc
inc
sahf
jne
xchg
mov
ss
mov
and
jo
inc
test
iret
pushf
es
cmps
les
pusha
mov
xor
(bad)
cld
inc
cli
adc
and
aam
jecxz
clc
(bad)
mov
xor
aam
movs
jbe
not
add
call
out
je
and
adc
icebp
lahf
test
xor
cs
add
cmp
cmp
fs
jbe
pop
cmc
or
jae
cmp
movs
sbb
or
jo
cmp
sbb
pop
mov
loopne
aad
xor
push
(bad)
push
nop
jb
pop
inc
pop
lds
jl
inc
inc
cmp
ja
jle
pop
push
push
aad
aas
ins
test
in
mov
test
outs
in
cmovae
pop
addr16
inc
mov
adc
gs
dec
push
xchg
xchg
mov
gs
xchg
fld
cmps
jne
xchg
(bad)
adc
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
push
mov
aaa
push
movs
push
lock
cs
add
add
add
fs
or
les
ins
movs
je
inc
lds
jl
jns
push
aam
cmp
push
inc
aad
aas
sub
ds
in
mov
test
push
in
cmovo
inc
addr16
hlt
outs
mov
adc
das
pop
js
mov
mov
gs
test
push
nop
xchg
adc
inc
xor
call
xor
inc
sahf
movs
cwde
and
mov
xor
mov
xor
repz
fiadd
test
inc
jecxz
loopne
out
out
push
iret
add
xor
(bad)
mov
ret
fs
xor
gs
lock
je
and
adc
mov
pop
and
add
and
or
push
cmc
pop
adc
pop
mov
aaa
movs
adc
dec
lds
and
add
das
loopne
aad
xor
cmp
ja
arpl
dec
nop
cmp
bound
(bad)
(bad)
push
inc
and
dec
add
push
sub
add
pop
test
in
mov
test
pop
in
cmovno
je
inc
hlt
push
xchg
jg
or
cmp
jg
mov
sahf
add
push
jmp
add
cmps
xchg
jne
xchg
lock
xchg
mov
and
jo
inc
mov
and
cmps
ret
xor
pusha
mov
xor
jecxz
loopne
icebp
adc
inc
out
scas
loope
aam
loope
retf
xor
cwde
mov
(bad)
shl
mov
ret
pop
data16
out
je
and
adc
scas
lahf
clc
xchg
aaa
pop
and
add
and
push
rol
push
adc
sbb
movs
adc
dec
lds
and
add
sub
es
xor
aas
(bad)
jae
pop
les
sub
arpl
pusha
(bad)
inc
outs
aam
add
push
xor
(bad)
pop
not
inc
in
mov
test
inc
in
cmovb
jo
add
outs
mov
or
and
jge
mov
push
in
gs
out
mov
adc
inc
xchg
xchg
jmp
ss
mov
and
jo
inc
call
xchg
mov
xor
not
jecxz
into
adc
inc
loop
loop
rol
mov
xor
cmp
shl
lea
iret
pop
data16
out
je
and
adc
mov
pop
push
test
shr
cmp
and
xadd
cmc
pop
adc
sbb
cs
lds
and
add
cs
aad
xor
cmp
les
sub
lds
popa
(bad)
push
inc
popa
aam
add
push
sub
sbb
pop
not
jle
push
mov
test
inc
in
cmovo
inc
addr16
hlt
outs
mov
adc
das
pop
js
mov
mov
gs
test
push
nop
xchg
adc
inc
xor
call
xor
inc
sahf
movs
cwde
and
mov
xor
mov
xor
repz
fiadd
test
inc
jecxz
loopne
out
out
push
iret
add
xor
(bad)
mov
ret
fs
xor
gs
lock
je
and
adc
mov
pop
and
add
and
or
push
cmc
pop
adc
pop
mov
aaa
movs
adc
dec
lds
and
add
das
loopne
aad
xor
cmp
ja
arpl
dec
nop
cmp
bound
(bad)
(bad)
push
inc
and
dec
add
push
sub
add
pop
test
in
mov
test
pop
in
cmovno
je
inc
hlt
push
xchg
jg
or
cmp
jg
mov
sahf
add
push
jmp
add
cmps
xchg
jne
xchg
in
adc
scas
mov
and
jo
inc
nop
movs
sahf
and
popf
cmps
mov
push
mov
fisttp
inc
(bad)
adc
and
iret
scas
cld
inc
stc
(bad)
aad
out
add
xor
les
les
rol
mov
fbld
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
divps
and
hlt
push
mov
js
jl
dec
push
test
mov
leave
test
add
mov
inc
mov
adc
lea
mov
movs
fsub
xchg
mov
xor
not
jecxz
(bad)
adc
inc
loop
out
out
(bad)
push
mov
ret
xor
les
shl
add
iret
pop
out
fidiv
out
push
nop
jne
lahf
fist
xor
jne
sub
and
ja
add
pop
adc
aas
mov
aaa
add
and
add
push
loopne
aad
xor
sbb
push
push
pusha
les
xor
or
pop
lds
pusha
(bad)
jge
outs
aam
add
push
pop
aad
aas
jge
inc
ja
in
mov
test
in
cmovno
jae
push
hlt
push
mov
jo
arpl
pop
push
adc
mov
push
xchg
xchg
adc
inc
xor
xchg
adc
xchg
mov
and
jo
inc
mov
shl
cmps
cmps
ret
xor
pusha
cmps
push
mov
fistp
inc
(bad)
adc
jecxz
loope
popf
(bad)
scas
push
test
fcom
mov
ret
fs
xor
ret
mov
je
and
adc
cld
lahf
fst
add
add
daa
xchg
rol
pop
adc
add
movs
and
push
lds
and
add
or
and
jp
push
mov
pop
and
les
xor
push
inc
pop
lds
pusha
(bad)
push
inc
push
aam
add
push
inc
aad
aas
jle
ins
ja
in
mov
test
jle
dec
cmova
addr16
inc
mov
pop
cmc
jns
imul
xchg
sahf
add
push
mul
test
push
fld
xor
mov
mov
and
aad
cdq
movs
cwde
and
mov
pusha
mov
xor
repz
loopne
rcl
and
out
scas
out
add
push
fiadd
(bad)
xor
fdivr
(bad)
fs
xor
gs
(bad)
retf
repz
je
and
adc
into
lahf
jmp
shl
sub
and
xchg
push
rol
push
adc
or
aas
lock
lds
and
push
cmps
or
sbb
xor
sub
push
push
pop
les
xor
arpl
imul
inc
jns
pop
add
push
jb
push
aas
dec
not
inc
in
mov
test
jb
inc
cmovbe
pop
addr16
jb
arpl
jbe
fs
mov
push
icebp
gs
test
push
xchg
xchg
xchg
lock
xor
inc
cmps
movs
mov
es
cmps
cmps
xor
pusha
mov
xor
rcl
jecxz
fcom
mov
rol
mov
in
sti
(bad)
in
rol
ret
xor
clc
mov
shl
add
iret
(bad)
retf
data16
out
je
and
adc
fstp
adc
add
je
cmp
pop
xchg
push
rol
inc
adc
or
pop
lock
xor
inc
cmps
sbb
das
mov
loopne
aad
xor
sub
arpl
les
inc
inc
lds
daa
mov
inc
mov
push
pop
aad
aas
dec
test
in
mov
test
imul
ins
addr16
hlt
jo
pusha
xchg
and
cmc
cs
imul
xchg
mov
gs
test
add
mov
lahf
adc
inc
xor
mov
lods
mov
and
jo
inc
mov
pushf
and
in
movs
xor
pusha
cmps
push
mov
fbld
in
iret
and
jecxz
mov
push
loope
shl
mov
shl
add
ret
lock
je
and
adc
mov
pop
and
cmp
sub
sbb
cmp
cmp
adc
cmc
and
pop
xchg
sbb
aaa
or
and
sbb
mov
loopne
aad
xor
or
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
into
aad
push
fnstsw
xchg
shl
rol
mov
frstor
out
je
and
adc
mov
pop
or
in
add
and
add
add
inc
adc
cmp
add
dec
lds
and
push
cmps
and
sbb
xor
sbb
jae
pop
les
sub
lds
arpl
inc
inc
jns
cmp
inc
mov
push
jbe
add
jns
jno
inc
in
mov
test
push
inc
divps
inc
addr16
hlt
pop
mov
inc
cmc
cmp
pop
push
(bad)
xchg
mov
gs
mov
mov
inc
xchg
xchg
mov
xor
inc
mov
pushf
xchg
mov
xor
not
jecxz
in
mov
inc
loop
inc
(bad)
scas
push
mov
ret
xor
cmp
lea
iret
(bad)
frstor
out
je
and
adc
scas
lahf
fst
and
imul
and
xchg
pop
outs
xchg
sub
add
pop
adc
ds
aaa
add
and
add
adc
and
fs
es
arpl
les
cmp
outs
das
jl
jp
pop
aam
add
push
pop
aad
aas
jle
ss
in
mov
test
imul
inc
addr16
dec
mov
je
ins
pop
pushw
mov
mov
gs
test
push
add
jne
xchg
xchg
adc
lods
mov
and
jo
inc
cwde
movs
mov
(bad)
iret
pushf
movs
cmps
mov
push
mov
fbld
inc
(bad)
adc
inc
jecxz
std
inc
rol
push
out
add
xor
test
ret
shl
lea
ret
data16
out
je
and
adc
in
lahf
jmp
test
sar
dec
add
and
and
push
cmc
push
adc
or
sbb
push
lds
dec
push
cmps
sbb
sbb
aad
xor
sub
ja
arpl
jge
movs
jns
aas
lds
jl
inc
inc
jno
popa
add
push
jns
inc
aas
dec
imul
inc
in
mov
test
(bad)
in
cmovae
and
hlt
jno
xchg
jle
pop
cmc
js
imul
mov
test
push
add
jne
xchg
mov
mov
and
xlat
inc
cdq
movs
cmps
and
cdq
cmps
into
xor
pusha
mov
xor
repz
loopne
into
adc
inc
out
scas
loop
add
push
fadd
(bad)
xor
fistp
(bad)
shl
xchg
add
ret
pop
mov
je
and
adc
stc
lahf
jmp
shl
sub
daa
xchg
pop
xor
adc
or
and
and
pop
cmps
sbb
inc
mov
loopne
aad
xor
sub
arpl
les
xor
arpl
(bad)
mov
aam
add
push
push
arpl
dec
test
in
mov
test
push
inc
cmovne
bound
hlt
jne
arpl
pop
pop
push
lea
mov
add
scas
xchg
jne
xchg
in
adc
div
fwait
inc
lea
test
mov
into
xor
pusha
mov
xor
rcl
inc
rcl
sti
and
loop
jmp
mov
rcl
ret
xor
cmc
mov
shl
add
iret
(bad)
retf
data16
out
je
and
adc
mov
pop
adc
add
je
xor
and
adc
add
xor
add
and
inc
cmps
adc
aas
mov
loopne
aad
xor
sub
dec
push
arpl
gs
dec
movs
or
das
gs
jp
push
aam
add
push
outs
aad
aas
pop
test
in
mov
test
dec
in
minps
ja
jb
dec
mov
ja
jo
dec
push
mov
mov
gs
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
push
jnp
popa
lds
(bad)
(bad)
inc
and
dec
add
push
xor
sbb
pop
div
ja
in
mov
test
pop
out
addr16
or
ja
push
pop
pop
push
(bad)
xchg
sahf
add
push
stos
gs
test
push
ret
adc
inc
xor
xchg
adc
xchg
mov
and
jo
inc
mov
(bad)
loop
mov
iret
pusha
mov
xor
int
loopne
jecxz
jmp
scas
inc
mov
xor
lock
(bad)
test
lds
ret
(bad)
fisub
out
je
and
adc
rcr
and
add
cmp
je
add
inc
adc
cmp
inc
lock
ins
and
pop
cmps
and
push
mov
loopne
aad
xor
sbb
push
push
pop
les
nop
sub
lds
jp
sbb
aam
add
push
dec
aad
aas
jle
push
ja
in
mov
test
inc
in
addps
cmp
hlt
push
mov
pop
cmc
cmp
gs
lea
jmp
add
mov
inc
xchg
xchg
mov
ret
(bad)
mov
and
jo
inc
cmps
movs
fisub
xchg
mov
xor
rcl
jecxz
loopne
mov
inc
loop
std
inc
rol
scas
push
jecxz
ret
xor
cmp
les
lea
iret
(bad)
fisub
out
je
and
adc
scas
lahf
in
push
pop
push
test
add
and
sub
add
pop
adc
add
movs
add
dec
lds
and
sbb
mov
loopne
aad
xor
push
(bad)
dec
push
pusha
les
cmp
outs
das
jge
jp
push
aam
add
push
(bad)
aad
aas
dec
not
jle
inc
mov
test
pop
in
subps
inc
addr16
jle
pusha
xchg
cmp
cmc
outs
pop
fs
xchg
xchg
mov
gs
test
nop
xchg
jne
xchg
in
adc
xor
inc
cdq
movs
pushf
and
movs
cmps
movs
xor
pusha
cmps
push
mov
fbld
loop
mov
inc
jecxz
cld
inc
rol
push
xlat
add
xor
test
ret
fs
xor
gs
data16
out
je
and
adc
in
lahf
jmp
or
sar
dec
add
cmp
pop
pop
cmp
adc
or
push
lock
lds
dec
push
cmps
xor
inc
mov
loopne
aad
xor
sub
inc
push
arpl
jge
xor
imul
(bad)
sbb
add
push
jno
pop
aas
dec
test
in
mov
test
in
cmovb
addr16
hlt
jb
xchg
jg
inc
cmc
jne
imul
mov
icebp
lods
test
push
iret
xchg
jne
xchg
jmp
xchg
rol
movs
shl
mov
(bad)
xor
pusha
mov
xor
int
loopne
lds
mov
rol
mov
inc
cld
(bad)
fcom
(bad)
xor
loopne
les
idiv
fs
xchg
add
ret
pop
in
shl
loopne
mov
lahf
jmp
aaa
pop
and
add
and
xchg
and
add
push
adc
or
and
sbb
outs
and
add
mov
loopne
aad
xor
and
arpl
les
movs
jge
jg
arpl
gs
push
inc
inc
aam
add
push
push
aad
aas
inc
div
inc
in
mov
test
inc
in
cmove
push
addr16
hlt
inc
mov
outs
cmc
cmp
imul
xchg
push
xchg
gs
out
stos
push
lds
xchg
xchg
popf
adc
lods
mov
and
jo
inc
out
movs
xchg
and
mov
mov
mov
xor
aad
out
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
lods
adc
mov
nop
and
jo
inc
sahf
movs
fbld
movs
cmps
ret
pusha
cmps
push
mov
fistp
inc
in
adc
and
jecxz
stc
inc
add
push
mov
shl
mov
ret
xchg
retf
add
ret
data16
and
adc
fistp
and
add
cmp
jae
push
cmc
sbb
jg
mov
aaa
movs
inc
lock
movs
add
cmps
(bad)
and
xor
sbb
inc
push
arpl
arpl
inc
lds
js
outs
inc
inc
aam
add
push
dec
aad
aas
jp
push
ja
in
mov
test
pop
out
addr16
hlt
pop
mov
pop
cmc
push
pop
pop
push
lea
in
gs
out
mov
adc
inc
xor
mov
xchg
fiadd
movs
mov
stc
cmps
test
pusha
mov
xor
xchg
xlat
loopne
movs
adc
inc
out
scas
inc
(bad)
out
repnz
xor
cmp
(bad)
lea
ret
pop
lock
je
and
adc
scas
lahf
fst
and
jnp
sub
cmp
xchg
xor
add
inc
adc
cmp
movs
add
and
push
cmps
and
inc
mov
loopne
aad
xor
and
les
sub
arpl
arpl
sbb
aam
add
push
jbe
sbb
inc
test
in
mov
test
jle
inc
minps
cmp
hlt
dec
mov
dec
cmc
daa
pop
pop
push
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
mov
xor
inc
lea
pushf
es
mov
push
stc
mov
xor
rcl
inc
in
test
inc
loop
inc
(bad)
rcl
ret
xor
test
shl
add
iret
(bad)
frstor
out
je
and
adc
movs
lahf
in
or
sar
cmp
outs
cmp
pop
pop
add
adc
or
push
lock
lds
and
push
cmps
jns
daa
mov
loopne
aad
xor
sub
push
push
pusha
les
cmp
outs
das
jl
jp
jb
push
add
push
pop
aad
aas
dec
test
in
mov
test
gs
minps
arpl
hlt
jne
pusha
xchg
cmp
cmc
arpl
push
xchg
xchg
mov
gs
test
push
add
jne
xchg
mov
div
(bad)
inc
mov
stos
and
mov
movs
xor
pusha
cmps
push
mov
fild
inc
not
mov
mov
loopne
rol
icebp
push
rol
shl
mov
ret
fs
xchg
add
ret
scas
out
je
and
adc
neg
and
add
and
rol
pop
adc
add
sub
lock
lds
dec
add
add
and
jp
sub
maxps
(bad)
inc
push
arpl
pop
nop
jne
jns
cmp
bound
gs
push
inc
jno
pusha
add
push
imul
inc
ja
in
mov
test
pop
in
cmovne
pop
addr16
jge
xchg
pusha
jne
cmc
push
pop
fs
mov
push
mov
add
test
xor
nop
adc
mov
and
cwde
inc
out
movs
cwde
and
movs
cmps
mov
push
div
test
inc
fcom
int
rol
in
inc
out
scas
jmp
out
(bad)
out
push
loope
(bad)
xor
pushf
mov
(bad)
fs
xor
add
ret
(bad)
xchg
data16
sti
je
and
adc
cmps
lahf
fst
xor
jnp
cs
and
or
gs
inc
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
ret
out
je
and
jne
lahf
clc
xchg
and
push
test
shr
sub
cmp
imul
cmc
pop
adc
cmp
inc
lock
ins
and
pop
cmps
cmp
aaa
mov
loopne
aad
xor
sbb
arpl
les
movs
or
xor
outs
das
js
push
inc
pop
aam
add
push
dec
aad
aas
jp
ss
in
mov
test
adc
inc
cvtps2pd
dec
addr16
pop
mov
pop
cmc
push
pop
pop
push
mov
mov
gs
mov
mov
inc
xor
mov
lods
mov
and
jo
inc
mov
scas
and
mov
xchg
xor
pusha
cmps
push
mov
fistp
inc
cmps
adc
and
jecxz
cli
inc
cdq
(bad)
icebp
push
mov
shl
mov
ret
fs
call
(bad)
fsub
out
je
and
adc
scas
lahf
in
and
and
add
aas
xchg
es
xor
push
cmc
sbb
jg
mov
aaa
movs
sbb
dec
lds
and
add
adc
and
jns
or
ja
arpl
addr16
cmp
bound
jge
push
inc
and
jno
inc
mov
push
jne
add
inc
imul
inc
in
mov
test
(bad)
in
divps
je
pop
hlt
dec
mov
dec
cmc
cmp
gs
mov
sahf
add
push
jmp
add
fld
xor
mov
fdivr
xchg
mov
and
fild
movs
mov
es
cmps
(bad)
xor
pusha
mov
xor
jecxz
loopne
sti
adc
inc
out
scas
inc
(bad)
aam
in
add
xor
int
(bad)
jbe
idiv
fs
xor
gs
(bad)
fsub
out
je
and
adc
out
lahf
in
aaa
pop
and
add
xchg
pop
pop
xchg
and
adc
or
add
pop
lds
pop
movs
cmovg
mov
loopne
aad
xor
and
jae
pop
les
cmp
arpl
jl
sbb
aam
add
push
pop
aad
aas
jg
push
ja
in
mov
test
push
inc
subps
and
hlt
jo
arpl
push
pop
jnp
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
pushf
adc
div
aad
popf
movs
mov
es
cmps
popf
xor
pusha
mov
xor
rcl
jecxz
cli
adc
inc
loop
cld
inc
stc
(bad)
scas
push
rol
ret
xor
lds
shl
add
iret
pop
data16
cld
je
and
adc
lock
jmp
test
add
daa
xchg
pop
sete
rol
pop
adc
or
cs
lds
and
add
xor
xor
sub
jae
pusha
les
xor
outs
das
pusha
(bad)
ins
inc
das
aam
add
push
push
aad
aas
inc
div
ja
in
mov
test
adc
inc
cmovb
jb
addr16
inc
mov
pop
cmc
inc
pop
imul
xchg
mov
gs
test
add
into
xchg
jne
xchg
mov
mov
mov
and
jo
inc
out
movs
shl
mov
pusha
cmps
push
mov
fbld
fst
sti
and
jecxz
in
sti
(bad)
rcl
shl
mov
ret
fs
xor
add
ret
data16
out
je
and
adc
rcr
and
add
sub
and
push
cmc
add
or
xor
sub
movs
add
cmps
cmp
inc
mov
loopne
aad
xor
and
ja
pusha
les
nop
push
movs
imul
(bad)
pop
inc
jge
data16
push
ins
aad
aas
pop
not
inc
in
mov
test
sbb
out
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
jne
sub
dec
das
addr16
sbb
aam
add
push
xor
add
jns
popa
ja
in
mov
test
pop
in
maxps
jns
ja
adc
jo
push
pop
pop
push
mov
mov
gs
test
add
into
xchg
jne
xchg
mov
lods
mov
and
jo
inc
fwait
movs
fisub
mov
pusha
mov
xor
out
jecxz
jecxz
call
inc
loop
clc
inc
inc
cmc
push
cld
add
xor
cmc
mov
shl
add
iret
(bad)
fbld
out
je
and
adc
rcr
push
test
and
test
outs
cmp
jbe
add
pop
adc
aas
mov
aaa
add
and
sbb
push
loopne
aad
xor
and
les
sub
outs
das
jg
add
aam
add
push
jle
add
jge
ins
ja
in
mov
test
pop
in
cmovae
jo
pop
hlt
dec
mov
dec
cmc
and
pop
push
cmps
xchg
mov
gs
test
add
cmps
xchg
jne
xchg
mov
ret
inc
and
jo
inc
cwde
movs
(bad)
mov
mov
pusha
cmps
push
mov
fbld
inc
in
test
inc
jecxz
jecxz
cdq
(bad)
cmps
push
in
add
xor
pushf
mov
ret
shl
add
ret
data16
shl
adc
mov
pop
and
add
xchg
adc
sub
push
cmc
push
adc
push
mov
aaa
movs
pop
lock
lds
sbb
xor
xor
xor
and
addr16
arpl
jnp
sub
bound
jle
inc
push
aam
add
push
sub
add
ja
in
mov
test
inc
in
minps
je
js
jge
xchg
jle
adc
ins
pop
gs
mov
sahf
add
push
movs
gs
out
mov
adc
inc
xor
(bad)
adc
mov
and
nop
inc
xchg
movs
test
popf
cmps
mov
push
div
mov
xlat
loopne
les
in
and
out
scas
out
popf
(bad)
fst
(bad)
xor
sar
(bad)
fs
xor
add
ret
(bad)
retf
out
out
xchg
and
adc
int
rcl
add
sub
push
add
and
xor
add
inc
adc
ds
aaa
add
and
add
xor
es
xor
sub
dec
push
pop
les
aaa
movs
inc
inc
dec
lds
addr16
jns
inc
aam
add
push
jb
pop
aas
dec
not
inc
in
mov
test
outs
in
cmovb
pop
addr16
hlt
jne
arpl
jb
imul
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
pushf
adc
div
rol
movs
shl
mov
pusha
mov
xor
rcl
inc
(bad)
adc
inc
loop
loopne
ret
push
loope
ret
xor
jecxz
retf
test
add
iret
pop
iretw
out
je
and
adc
(bad)
lahf
in
xor
push
test
sar
in
add
and
adc
rol
pop
adc
or
aas
lock
outs
and
push
cmps
outs
daa
xor
xor
sub
dec
push
pusha
les
jp
push
inc
pusha
lds
fs
pop
inc
jle
bound
push
aad
aas
dec
imul
jle
jno
jb
addr16
in
cmovbe
push
addr16
hlt
jle
pusha
xchg
cmp
cmc
cmp
fs
mov
mov
gs
test
push
mov
fwait
adc
inc
xor
mov
(bad)
dec
and
jo
inc
out
movs
and
cmps
xor
mov
xor
ret
xlat
mov
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
movs
xchg
mov
iret
call
and
jo
inc
mov
sahf
es
popf
xor
pusha
mov
xor
repz
loopne
in
adc
and
out
scas
clc
inc
(bad)
push
mov
(bad)
xor
idiv
(bad)
fs
xor
add
ret
(bad)
fldenv
out
je
and
adc
rcr
and
add
cmp
xor
add
inc
adc
cmp
inc
lock
pop
and
pop
cmps
sbb
sub
push
loopne
aad
xor
pop
(bad)
push
push
pop
les
inc
pop
lds
jp
jg
jne
aaa
add
push
jge
jg
jg
push
ja
in
mov
test
jb
inc
addps
pusha
addr16
hlt
push
mov
pop
cmc
das
pop
pop
push
lea
jmp
add
rol
jne
xchg
mov
ss
mov
and
jo
inc
mov
call
pusha
mov
xor
rcl
jecxz
out
mov
inc
loop
std
inc
out
std
push
test
icebp
push
cwde
mov
shl
add
iret
(bad)
fisub
out
je
and
adc
mov
pop
push
test
imul
and
xchg
pop
xchg
rol
pop
adc
push
mov
aaa
add
and
sbb
mov
loopne
aad
xor
sbb
les
movs
or
das
jle
add
aam
add
push
outs
aad
aas
inc
not
jle
inc
mov
test
in
cmovae
pusha
addr16
dec
mov
or
push
xchg
xchg
mov
gs
out
mov
adc
inc
xor
mov
xor
inc
mov
mov
mov
mov
mov
push
mov
fbstp
inc
rcl
and
jecxz
in
xlat
(bad)
into
push
cmc
add
xor
fdivr
ret
fs
xor
add
ret
mul
loop
xchg
and
adc
std
lahf
retf
pop
and
add
sub
cmp
push
cmc
add
sub
xor
or
(bad)
cmp
cmps
or
sbb
push
loopne
aad
xor
(bad)
ja
arpl
push
nop
jo
dec
inc
pop
lds
imul
inc
inc
aam
add
push
sub
not
inc
in
mov
test
gs
dec
cmovbe
arpl
hlt
push
mov
imul
pop
or
mov
push
sti
gs
test
push
xchg
xchg
jne
xchg
scas
adc
xchg
mov
and
jo
inc
cdq
movs
scas
and
std
cmps
mov
push
div
stos
push
jecxz
loopne
icebp
adc
inc
out
scas
loope
mov
push
rol
(bad)
xor
sar
(bad)
fs
nop
add
ret
pop
data16
mov
loopne
mov
lahf
jmp
adc
and
add
and
and
add
push
adc
or
and
push
lds
sbb
cmovg
cmps
bound
push
mov
loopne
aad
xor
and
jae
pop
les
js
inc
inc
cmp
arpl
imul
inc
es
add
push
sub
test
in
mov
test
pop
in
cmovbe
gs
inc
mov
adc
pop
pop
imul
nop
push
mov
add
scas
xchg
adc
div
mov
lea
xchg
and
push
sti
mov
xor
rcl
inc
xlat
adc
and
loop
in
int3
(bad)
loope
fiadd
ret
xor
xchg
ret
xor
add
iret
pop
je
and
adc
loope
jmp
push
pop
push
test
add
daa
xchg
cs
or
gs
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
shl
xor
adc
mov
pop
and
add
aas
xchg
rol
sbb
jg
mov
aaa
movs
or
and
sbb
dec
loopne
aad
xor
sbb
inc
push
arpl
daa
nop
push
lds
jg
add
aam
add
push
dec
aad
aas
jns
push
ja
in
mov
test
(bad)
in
maxps
pop
addr16
hlt
adc
jne
cmc
push
pop
pop
push
lea
movs
gs
test
push
mov
inc
xor
mov
xchg
mov
movs
mov
es
pusha
mov
xor
xchg
xlat
loopne
movs
adc
inc
out
scas
inc
(bad)
(bad)
push
inc
(bad)
xor
cmp
lea
ret
(bad)
fisub
out
je
and
adc
mov
pop
and
add
cmp
xchg
rol
inc
adc
push
mov
aaa
add
and
push
cmps
sbb
add
xor
push
(bad)
dec
push
pop
les
movs
jl
xor
arpl
arpl
inc
popa
aam
add
push
outs
aad
aas
inc
test
in
mov
test
outs
in
minps
pusha
addr16
hlt
dec
mov
dec
cmc
and
pop
push
(bad)
xchg
mov
gs
test
push
test
xchg
xchg
scas
adc
xor
inc
cmps
movs
mov
mov
pusha
mov
xor
rcl
inc
sti
adc
inc
loop
inc
(bad)
fist
ret
xor
xchg
shl
add
iret
(bad)
frstor
out
je
and
adc
(bad)
lahf
retf
xchg
push
pop
push
test
shr
and
xchg
push
xchg
ja
add
pop
adc
sub
xor
adc
push
dec
add
es
add
xor
or
push
push
arpl
and
pop
lds
and
push
inc
arpl
jge
inc
mov
push
imul
ins
ja
in
mov
test
jno
inc
unpcklps
addr16
hlt
adc
jne
cmc
je
dec
push
adc
xchg
add
xchg
xor
mov
xchg
jmp
and
jo
inc
lods
movs
mov
es
fwait
xor
pusha
cmps
push
mov
fisttp
inc
xlat
adc
and
jecxz
in
add
push
mov
shl
mov
ret
fs
int3
add
ret
data16
lds
jecxz
mov
leave
jne
lahf
jmp
and
and
add
and
adc
push
cmc
pop
adc
or
adc
push
lds
dec
add
pop
loopne
aad
xor
sub
push
push
arpl
inc
nop
xor
bound
addr16
cmova
bound
dec
aad
aas
dec
div
ja
in
mov
test
pop
in
cmova
data16
hlt
inc
mov
pop
cmc
pop
pop
fs
lea
mov
add
mov
inc
xor
mov
mov
mov
and
jo
inc
out
movs
pushf
and
fwait
cmps
(bad)
xor
pusha
mov
xor
repz
loopne
ficom
cmc
and
out
scas
in
add
push
loop
(bad)
xor
lock
(bad)
div
aad
mul
fbld
pop
data16
out
je
and
adc
mov
pop
and
add
and
sbb
bound
adc
or
inc
lock
outs
and
inc
cmps
push
daa
xor
xor
sub
jae
push
les
nop
dec
movs
jge
jnp
arpl
xor
aam
add
push
outs
aad
aas
pop
div
inc
in
mov
test
add
jno
pop
out
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
sub
lds
(bad)
push
inc
popa
aam
add
push
sub
imul
jle
push
mov
test
push
in
mulps
and
hlt
or
jae
push
pop
pop
push
mov
mov
gs
test
add
ret
adc
inc
xor
xchg
adc
lods
mov
and
jo
inc
xchg
movs
mov
es
cmps
mov
push
mov
fistp
inc
movs
adc
and
jecxz
cli
inc
out
(bad)
iret
push
cld
add
xor
lock
ret
fs
xor
add
ret
iretw
out
je
and
adc
rcr
and
add
aas
xchg
ds
cmp
adc
cmp
inc
lock
lds
sbb
push
loopne
aad
xor
push
(bad)
ja
arpl
outs
nop
cmp
bound
js
sbb
aam
add
push
jge
sbb
inc
imul
inc
in
mov
test
divps
pop
addr16
hlt
dec
mov
push
cmc
and
pop
push
mov
sahf
add
push
jmp
add
cmps
xchg
jne
xchg
scas
adc
mov
and
fild
movs
stos
and
mov
into
xor
pusha
mov
xor
jecxz
loopne
in
lods
and
out
scas
inc
(bad)
mov
xor
mov
(bad)
fs
xor
gs
pop
data16
mov
loopne
mov
lahf
in
aaa
pop
and
add
cmp
xchg
sub
add
inc
adc
ds
aaa
add
and
sbb
mov
loopne
aad
xor
add
les
ins
movs
adc
lds
mov
aam
add
push
jns
outs
aas
outs
not
inc
in
mov
test
gs
inc
cmove
and
hlt
adc
jne
cmc
dec
pop
dec
push
(bad)
xchg
mov
gs
test
push
add
jne
xchg
hlt
adc
div
pop
movs
(bad)
and
cmps
cmps
fnstenv
pusha
mov
xor
rcl
loopne
movs
adc
and
loop
mov
cld
(bad)
movs
push
mov
ret
xor
(bad)
mov
ret
mov
int3
add
iret
pop
je
and
adc
repz
enter
adc
add
je
push
pop
sub
jne
add
inc
adc
das
mov
aaa
add
and
add
sbb
add
push
loopne
aad
xor
or
jae
pusha
les
jb
pop
inc
lds
addr16
jnp
inc
aam
add
push
(bad)
aad
aas
dec
div
ja
in
mov
test
imul
das
addr16
hlt
jo
pusha
xchg
cmp
cmc
jae
push
cmps
xchg
mov
gs
test
add
xchg
xchg
jne
xchg
xchg
adc
lods
mov
and
jo
inc
out
movs
pushf
and
pushf
cmps
movs
xor
pusha
cmps
push
mov
fbld
int3
adc
inc
jecxz
jmp
aad
icebp
push
loope
shl
mov
ret
fs
xor
add
ret
data16
out
je
and
adc
fcomp
and
add
and
xchg
sbb
adc
or
xor
and
add
mov
loopne
aad
xor
and
push
push
arpl
pop
nop
dec
movs
jns
lds
fs
jb
jno
add
push
dec
aad
aas
dec
div
ja
in
mov
test
pop
in
cmovnp
and
mov
push
cmc
ins
pop
imul
xchg
xchg
add
push
mov
test
push
pushf
xchg
jne
xchg
stos
adc
mov
jo
inc
mov
pushf
and
mov
ret
xor
pusha
mov
xor
ret
xlat
cld
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
fdivr
popf
mov
leave
inc
call
es
cmps
test
mov
xor
not
jecxz
cmps
adc
and
loop
inc
(bad)
rcl
ret
xor
(bad)
mov
shl
add
iret
(bad)
fsub
out
je
and
adc
rcr
push
test
in
add
cmp
cmp
adc
cmp
or
or
ins
and
sbb
push
loopne
aad
xor
sbb
jae
pusha
les
nop
push
or
push
mov
aam
add
push
jp
add
js
ins
ja
in
mov
test
dec
in
cvtps2pd
cmp
hlt
adc
pusha
xchg
cmp
cmc
and
pop
push
cmps
xchg
mov
gs
out
mov
adc
inc
xor
mov
div
leave
inc
mov
and
cmps
xchg
pusha
cmps
push
mov
fistp
inc
sti
adc
inc
jecxz
jecxz
rol
in
lock
xor
(bad)
mov
ret
shl
add
ret
lock
je
and
adc
mov
pop
and
add
xchg
arpl
adc
add
movs
add
and
add
or
and
jns
push
mov
pop
and
les
cmp
bound
jge
sbb
aam
add
push
ins
aad
aas
jle
ss
in
mov
test
jle
dec
minps
pop
addr16
dec
mov
dec
cmc
pop
pop
jae
mov
push
lods
gs
mov
xchg
xchg
jne
xchg
(bad)
adc
xchg
mov
and
jo
inc
lods
movs
mov
es
shl
mov
xor
xchg
xlat
jecxz
out
adc
and
out
scas
mov
clc
(bad)
mov
xor
jecxz
call
fs
into
add
ret
pop
je
and
adc
lds
and
add
jne
cmp
push
xchg
sub
add
pop
adc
xor
inc
lock
ds
push
cmps
outs
daa
xor
xor
or
les
outs
movs
pop
inc
arpl
arpl
daa
mov
push
aam
add
push
dec
aad
aas
outs
div
inc
in
mov
test
dec
in
lsl
addr16
hlt
pop
mov
or
dec
pop
dec
push
(bad)
xchg
mov
gs
call
xchg
jne
xchg
(bad)
adc
xchg
mov
and
jo
inc
mov
iret
mov
pushf
cmps
mov
push
cli
mov
xor
rcl
jecxz
not
mov
jmp
scas
out
clc
(bad)
scas
push
loop
ret
xor
aad
retf
test
add
iret
pop
mov
and
adc
(bad)
lahf
in
or
shl
sub
outs
and
and
add
pop
adc
or
cmp
adc
movs
add
cmps
xor
loopne
aad
xor
sub
arpl
les
js
push
inc
aas
lds
gs
jg
das
aam
add
push
sub
je
inc
test
in
mov
test
push
in
cmove
gs
jge
pusha
xchg
cmp
cmc
push
pop
fs
xchg
xchg
mov
gs
test
push
mov
xor
mov
div
lods
inc
out
movs
mov
mov
pusha
cmps
push
mov
fild
inc
mov
(bad)
jecxz
mov
loop
rcl
shl
mov
ret
div
repnz
ret
data16
shl
jecxz
mov
lahf
jmp
shr
ds
and
add
addr16
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
jne
lahf
(bad)
xchg
add
and
add
cmp
jge
add
inc
adc
cmp
add
add
movs
cmovg
cmps
outs
daa
and
push
loopne
aad
xor
sbb
push
push
pop
les
movs
jnp
dec
lds
jp
outs
inc
inc
aam
add
push
jns
jno
js
push
ja
in
mov
test
(bad)
in
addps
dec
addr16
pop
mov
ins
cmc
push
pop
pop
push
lea
stos
gs
test
push
xchg
xchg
jne
xchg
adc
mov
and
jo
inc
movs
movs
mov
or
es
cmps
xchg
xor
pusha
mov
xor
rcl
jecxz
in
adc
inc
loop
clc
inc
cdq
(bad)
in
jmp
ret
xor
mov
shl
add
iret
(bad)
fbld
out
je
and
adc
mov
pop
push
test
shr
push
add
and
xor
add
pop
adc
cmp
movs
pop
lock
lds
and
sbb
mov
loopne
aad
xor
es
dec
push
pusha
les
sub
lds
jle
push
inc
daa
aam
add
push
push
sbb
inc
not
jle
inc
mov
test
popa
in
cmovae
cmp
hlt
inc
mov
push
cmc
cmp
pushw
xchg
xchg
mov
gs
test
push
fld
xor
lods
adc
xor
inc
cwde
movs
mov
es
mov
mov
push
mov
fbstp
fist
out
and
jecxz
in
std
(bad)
lock
mov
shl
mov
shl
add
ret
data16
cdq
je
and
adc
cmc
lahf
retf
pop
and
add
jne
add
adc
cmc
sbb
sub
inc
lock
lds
and
inc
cmps
sbb
cmp
xor
push
(bad)
addr16
pusha
les
outs
movs
or
lds
xor
aam
add
push
jp
pusha
aas
jae
push
ja
in
mov
test
inc
in
unpcklps
bound
hlt
push
mov
pop
cmc
inc
pop
dec
push
mov
push
scas
gs
push
mov
inc
xor
mov
xchg
pop
movs
mov
pushf
cmps
cmps
xor
pusha
mov
xor
repz
jecxz
jecxz
jmp
inc
out
scas
mov
rol
aad
inc
(bad)
xor
aam
call
fs
xor
add
ret
(bad)
xchg
mov
and
adc
neg
and
add
xchg
and
adc
sbb
movs
and
push
lds
and
add
push
loopne
aad
xor
and
push
push
pop
les
xor
arpl
(bad)
(bad)
js
inc
aam
add
push
dec
aad
aas
dec
mul
inc
in
mov
test
pop
in
cmovne
pop
addr16
hlt
inc
mov
push
cmc
pop
pop
push
mov
push
mov
add
ret
adc
inc
xchg
xchg
mov
xor
inc
popf
movs
xchg
and
out
cmps
mov
push
sti
mov
xor
rcl
jecxz
rcl
clc
and
loop
jmp
aad
(bad)
push
out
ret
xor
(bad)
mov
shl
add
iret
(bad)
retf
data16
(bad)
je
and
adc
mov
pop
push
test
ror
test
outs
xchg
outs
xchg
and
adc
add
pop
aaa
add
and
add
cmp
adc
aad
xor
sub
push
push
pusha
les
dec
movs
jns
pusha
lds
daa
(bad)
jno
pop
aam
add
push
jb
sbb
pop
imul
jle
ins
mov
test
arpl
push
addr16
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
cmp
push
das
popa
(bad)
inc
and
inc
add
push
sub
sbb
js
ins
ja
in
mov
test
pop
in
addps
cs
adc
imul
pop
pop
push
lea
movs
gs
out
mov
adc
inc
xor
mov
xchg
mov
movs
scas
and
lahf
cmps
xchg
xor
pusha
mov
xor
xchg
xlat
loopne
cmps
adc
and
out
scas
inc
(bad)
int3
push
mov
(bad)
xor
repnz
(bad)
test
lds
ret
(bad)
fisub
out
je
and
adc
mov
pop
and
add
cmp
sub
add
inc
adc
add
movs
inc
lock
lds
and
pop
cmps
popa
daa
sbb
xor
sbb
les
nop
sub
lds
arpl
push
inc
jns
jb
inc
mov
push
push
add
jge
inc
ja
in
mov
test
sbb
inc
minps
inc
addr16
push
mov
push
cmc
and
pushw
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
mov
fdivr
test
xor
inc
mov
and
cmps
ret
pusha
mov
xor
rcl
inc
loope
mov
inc
loop
std
inc
rol
push
out
add
xor
cmp
(bad)
lea
iret
(bad)
fisub
out
je
and
adc
mov
pop
push
test
shr
in
add
and
xchg
ja
add
pop
adc
das
mov
aaa
add
and
inc
cmps
or
pop
mov
loopne
aad
xor
or
push
push
arpl
ins
nop
imul
js
push
aam
add
push
jns
fs
push
in
mov
test
inc
in
lsl
data16
push
mov
arpl
inc
pop
dec
push
cmps
xchg
mov
mov
cmc
push
ret
xchg
jne
xchg
mov
ss
mov
and
jo
inc
scas
movs
test
out
cmps
mov
push
mov
fisttp
inc
cmps
adc
and
jecxz
mov
push
test
xor
in
out
jbe
test
add
ret
data16
bnd
and
adc
rcr
test
sub
push
add
je
add
adc
adc
sub
movs
inc
lock
lds
and
inc
cmps
or
ds
loopne
aad
xor
(bad)
push
push
pusha
les
outs
movs
dec
inc
push
(bad)
ins
inc
cmp
add
push
jb
push
aas
push
ss
in
mov
test
dec
in
cmovne
jae
push
hlt
push
mov
ins
cmc
daa
pop
jbe
(bad)
xchg
sahf
add
push
rep
test
add
add
jne
xchg
mov
mov
jo
inc
cdq
movs
fbld
mov
pusha
mov
xor
int
loopne
fcom
sti
and
out
scas
out
out
(bad)
loop
fiadd
(bad)
xor
clc
mov
(bad)
fs
xor
add
ret
pop
data16
mov
loopne
mov
lahf
jmp
daa
pop
and
add
sub
rol
push
adc
or
ss
outs
and
add
gs
push
mov
loopne
aad
xor
sub
dec
push
pop
les
push
movs
inc
inc
jnp
arpl
data16
dec
inc
es
add
push
dec
aad
aas
inc
not
inc
in
mov
test
inc
in
sysret
out
addr16
jle
arpl
pusha
pop
imul
xchg
push
mov
test
mov
inc
xchg
xchg
adc
ret
jo
inc
cmps
movs
fisub
mov
mov
mov
xor
xlat
xlat
inc
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
ss
pushf
and
jo
inc
sahf
movs
scas
and
movs
cmps
mov
pusha
cmps
push
mov
fistp
inc
out
adc
and
jecxz
stc
inc
fld
(bad)
push
mov
aad
push
repnz
ret
fs
xor
add
ret
data16
aad
shl
jecxz
mov
lahf
fst
shr
in
add
aas
xchg
rol
sbb
jg
mov
aaa
movs
inc
lock
movs
add
cmps
pop
daa
adc
aad
xor
pop
(bad)
ja
arpl
ins
nop
cmp
bound
js
inc
inc
jns
aaa
add
push
jns
(bad)
jp
ins
ja
in
mov
test
inc
in
maxps
and
hlt
push
mov
pop
cmc
and
pop
push
mov
sahf
add
push
in
gs
test
push
add
jne
xchg
stos
adc
mov
and
fiadd
movs
pushf
and
xchg
mov
xor
jecxz
loopne
in
lods
and
out
scas
inc
(bad)
out
push
test
xor
cwde
mov
(bad)
les
mov
ret
pop
data16
out
je
and
adc
scas
lahf
out
aaa
pop
and
add
cmp
xchg
rol
inc
adc
cmp
movs
sbb
dec
lds
xor
popa
daa
dec
mov
loopne
aad
xor
es
dec
push
pop
les
push
push
inc
dec
lds
mov
fs
add
push
jns
outs
aas
outs
test
in
mov
test
jle
inc
lsl
dec
addr16
push
mov
jl
jne
dec
push
(bad)
xchg
mov
gs
sahf
add
xchg
xchg
jne
xchg
mov
div
mov
movs
and
cmps
cmps
xor
pusha
mov
xor
out
loopne
out
out
and
loop
mov
push
jmp
ret
xor
out
mov
ret
fs
xor
add
iret
(bad)
data16
stc
je
and
adc
(bad)
lahf
int
and
adc
add
js
sub
push
xchg
rol
inc
adc
cs
aaa
add
and
pop
cmps
sbb
ds
loopne
aad
xor
adc
jae
arpl
and
imul
cmova
ja
inc
mov
push
jge
gs
ins
test
in
mov
test
inc
in
lsl
and
hlt
push
mov
outs
cmc
inc
pop
dec
push
cmps
xchg
mov
gs
test
lods
xchg
jne
xchg
mov
lods
mov
and
jo
inc
xchg
movs
mov
es
cmps
shl
mov
int
fiadd
in
and
jecxz
in
add
push
mov
shl
mov
ret
fs
nop
add
ret
repnz
je
and
adc
les
and
add
xchg
rol
add
adc
aas
lock
sbb
dec
or
add
and
jnp
dec
mov
pop
sub
addr16
arpl
pop
nop
jnp
imul
mov
aam
add
push
xor
jg
dec
imul
inc
in
mov
test
inc
in
cmove
dec
ins
hlt
inc
mov
jno
and
imul
xchg
sahf
add
push
xchg
lods
test
push
mov
inc
xor
mov
mov
jo
inc
out
movs
and
cmps
(bad)
xor
pusha
mov
xor
jecxz
loopne
rcl
iret
and
out
scas
jmp
fadd
int3
push
loope
(bad)
xor
lds
(bad)
fs
xor
add
ret
pop
out
out
je
and
adc
sti
lahf
jmp
aaa
pop
and
add
cmp
pop
pop
arpl
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
ret
data16
shl
adc
mov
pop
push
test
shr
sub
cmp
jge
add
pop
adc
cmp
inc
lock
pop
and
sbb
adc
and
pusha
xor
sbb
jae
pusha
les
nop
push
addr16
inc
lds
jg
jnp
inc
aam
add
push
dec
aad
aas
jg
ins
ja
in
mov
test
gs
cvtps2pd
pop
outs
hlt
pop
mov
pop
cmc
pop
pop
pop
push
cmps
xchg
mov
gs
test
push
cdq
xchg
jne
xchg
mov
div
leave
inc
xchg
movs
mov
movs
cmps
sahf
xor
pusha
cmps
push
mov
fistp
inc
cmps
adc
inc
jecxz
cli
inc
rol
push
hlt
add
xor
cmp
call
(bad)
frstor
out
je
and
adc
mov
pop
and
add
xchg
pop
cs
xor
adc
ds
aaa
movs
add
dec
lds
add
push
loopne
aad
xor
es
addr16
arpl
popa
nop
cmp
bound
jge
inc
inc
popa
aam
add
push
imul
ss
in
mov
test
outs
in
divps
pmuludq
xchg
jle
dec
cmc
das
pop
pushw
mov
sahf
add
push
jmp
add
lods
xchg
jne
xchg
lahf
adc
xchg
mov
movs
scas
and
mov
mov
xor
int
jecxz
mov
(bad)
out
scas
cmps
inc
rol
not
(bad)
xor
out
mov
icebp
(bad)
into
add
ret
(bad)
cwde
data16
out
(bad)
and
adc
ret
xchg
daa
pop
and
add
jp
sub
xor
sub
add
pop
adc
xor
add
push
lds
pop
cmps
and
and
aad
xor
or
les
imul
add
aam
add
push
ins
aad
aas
outs
test
in
mov
test
dec
in
nop
dec
addr16
hlt
dec
mov
push
cmc
inc
pop
push
push
mov
mov
gs
test
xchg
xchg
jne
xchg
mov
cmps
jmp
and
jo
inc
hlt
movs
and
cmps
cmps
xor
pusha
mov
xor
out
loopne
out
adc
and
loop
mov
add
push
jmp
ret
xor
loopne
repz
test
add
iret
(bad)
xchg
data16
std
je
and
adc
lds
adc
add
xchg
pop
jns
je
add
inc
adc
das
mov
aaa
add
and
push
cmps
pusha
daa
cs
loopne
aad
xor
cmp
arpl
les
xor
outs
das
mov
aam
add
push
jle
jnp
inc
not
jle
jns
adc
in
cmove
pop
addr16
hlt
push
mov
push
cmc
popa
pop
jne
mov
mov
gs
test
xchg
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
movs
and
cmps
movs
xor
pusha
cmps
push
mov
fild
inc
xlat
adc
and
jecxz
in
fadd
std
push
fiadd
shl
mov
ret
div
in
add
ret
data16
out
je
and
adc
mov
pop
and
add
arpl
and
push
cmc
add
or
xor
das
lds
and
push
cmps
add
loopne
aad
xor
and
push
push
arpl
push
nop
dec
movs
imul
(bad)
dec
inc
inc
aam
add
push
jge
add
pop
not
inc
in
mov
test
dec
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
jns
sub
dec
das
jle
sbb
aam
add
push
sub
push
aas
js
inc
ja
in
mov
test
adc
inc
maxps
and
hlt
or
je
push
pop
pop
push
lea
stos
gs
add
xchg
jne
xchg
(bad)
adc
xchg
mov
and
jo
inc
mov
mov
es
cmps
scas
xor
pusha
mov
xor
rcl
jecxz
in
adc
and
loop
clc
inc
out
mov
xor
repz
shl
add
iret
(bad)
fbld
out
je
and
adc
mov
pop
push
test
ins
in
add
cmp
xor
adc
ds
aaa
add
and
sbb
push
loopne
aad
xor
and
les
sub
outs
das
jle
jp
(bad)
aam
add
push
jb
add
jle
push
ja
in
mov
test
in
cmovae
inc
addr16
hlt
push
mov
dec
cmc
das
pop
pop
push
xchg
xchg
mov
gs
out
mov
adc
inc
xor
test
div
int
mov
stos
and
movs
cmps
ret
xor
pusha
cmps
push
mov
fbld
inc
out
test
inc
jecxz
jecxz
rol
push
in
add
xor
repnz
ret
fnstenv
call
(bad)
fisub
out
je
and
adc
cmps
lahf
jmp
test
sar
sub
cmp
xchg
and
push
cmc
push
adc
or
add
pop
lds
and
sbb
push
daa
aas
mov
loopne
aad
xor
es
inc
push
arpl
jno
cmp
bound
pusha
(bad)
pop
inc
inc
aam
add
push
dec
aad
aas
sub
ss
in
mov
test
dec
in
nop
das
addr16
hlt
push
mov
dec
cmc
inc
pop
dec
push
mov
push
test
add
xchg
xor
mov
mov
mov
and
jo
inc
mov
iret
fisub
jecxz
xchg
xor
pusha
mov
xor
repz
jecxz
in
out
and
out
scas
mov
push
test
jmp
jbe
div
lds
leave
add
ret
(bad)
cwde
mov
and
adc
ret
xchg
daa
pop
and
add
jp
sub
push
xchg
sub
add
pop
adc
xor
push
lock
imul
cmp
xor
or
les
nop
outs
movs
dec
inc
arpl
arpl
and
inc
inc
pop
aam
add
push
dec
aad
aas
outs
test
in
mov
test
dec
in
unpcklps
dec
addr16
pop
mov
or
jbe
dec
push
(bad)
xchg
mov
lea
movs
push
iret
xchg
jne
xchg
mov
fwait
call
and
jo
inc
popf
movs
fisub
mov
popf
xor
pusha
mov
xor
not
jecxz
(bad)
adc
and
loop
out
in
(bad)
cld
push
in
add
xor
in
cli
jbe
test
add
iret
pop
data16
out
je
and
adc
fistp
push
test
add
and
xchg
sbb
adc
add
and
add
and
add
add
sbb
aad
xor
sub
push
push
pusha
les
push
movs
push
inc
js
outs
das
and
jle
das
aam
add
push
jae
dec
aas
dec
not
jle
jl
outs
test
inc
in
cmovbe
ins
outs
hlt
jle
pusha
xchg
cmp
cmc
js
fs
adc
mov
push
lahf
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
out
movs
shl
movs
cmps
xor
mov
xor
ret
xlat
mov
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
movs
xchg
mov
mov
lahf
and
jo
inc
mov
sahf
es
cmps
into
xor
pusha
mov
xor
int
loopne
jecxz
jmp
scas
inc
mov
xor
lock
(bad)
test
lds
ret
(bad)
fisub
out
je
and
adc
rcr
and
add
cmp
je
add
inc
adc
cmp
inc
lock
ins
and
pop
cmps
and
loopne
aad
xor
sbb
dec
push
pop
les
nop
sub
lds
jp
sbb
aam
add
push
dec
aad
aas
jle
inc
ja
in
mov
test
inc
in
addps
cmp
hlt
push
mov
pop
cmc
cmp
gs
(bad)
xchg
mov
gs
test
push
mov
inc
xchg
xchg
mov
ret
(bad)
mov
and
jo
inc
cmps
movs
fisub
mov
xor
mov
xor
rcl
jecxz
loopne
mov
inc
loop
std
inc
rol
scas
push
jecxz
ret
xor
cmp
les
lea
iret
(bad)
fisub
out
je
and
adc
scas
lahf
in
push
pop
push
test
add
and
sub
add
pop
adc
add
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
push
(bad)
dec
push
pusha
les
cmp
outs
das
jge
jp
push
aam
add
push
(bad)
aad
aas
dec
not
jle
inc
mov
test
inc
in
subps
inc
addr16
jle
pusha
xchg
cmp
cmc
outs
pop
fs
xchg
xchg
mov
gs
test
push
nop
xchg
jne
xchg
in
adc
xor
inc
cdq
movs
shl
movs
cmps
movs
xor
pusha
cmps
push
mov
fild
inc
(bad)
adc
inc
jecxz
mov
fld
mov
xor
loope
out
jbe
test
add
ret
data16
shl
jecxz
mov
lahf
rcl
and
cs
add
jp
cmp
add
adc
sub
movs
push
lock
cmp
pop
cmps
es
cs
loopne
aad
xor
push
(bad)
addr16
pusha
les
ins
movs
je
ins
lds
cmp
add
aam
add
push
push
data16
jae
push
ja
in
mov
test
in
nop
bound
hlt
push
mov
push
cmc
dec
pop
dec
push
mov
push
test
add
mov
inc
xor
test
xchg
pop
movs
mov
jecxz
mov
push
clc
mov
xor
repz
jecxz
cmps
adc
and
out
scas
mov
ret
push
inc
(bad)
xor
sar
(bad)
fs
xor
add
ret
pop
mov
and
adc
lds
and
add
and
xchg
rol
pop
adc
cs
aaa
add
and
add
mov
loopne
aad
xor
and
arpl
les
movs
inc
inc
jg
arpl
gs
push
inc
inc
aam
add
push
push
aad
aas
inc
div
inc
in
mov
test
pop
in
cmovnp
ins
addr16
hlt
inc
mov
push
cmp
imul
xchg
push
xchg
gs
out
stos
push
cwde
xchg
adc
inc
xchg
xchg
mov
ss
mov
and
jo
inc
popf
movs
xchg
and
push
sti
mov
xor
rcl
inc
(bad)
adc
and
loop
in
cmc
(bad)
icebp
push
out
ret
xor
(bad)
mov
shl
add
iret
(bad)
retf
shl
clc
je
and
adc
neg
push
test
shr
cmp
xchg
cs
add
gs
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fsub
out
je
and
mov
pop
and
add
aas
xchg
xor
adc
cmp
inc
lock
movs
add
cmps
(bad)
and
xor
sbb
ja
arpl
arpl
inc
lds
js
outs
inc
inc
aam
add
push
dec
aad
aas
jns
ins
ja
in
mov
test
pop
out
addr16
hlt
pop
mov
pop
cmc
push
pop
pop
push
mov
sahf
add
push
in
gs
out
mov
adc
inc
xor
mov
xchg
fiadd
movs
mov
stc
cmps
test
pusha
mov
xor
xchg
xlat
loopne
movs
adc
inc
out
scas
inc
(bad)
out
repnz
xor
cmp
(bad)
lea
ret
pop
lock
je
and
adc
mov
pop
and
add
cmp
xchg
xor
add
inc
adc
cmp
movs
add
and
push
cmps
and
inc
mov
loopne
aad
xor
and
les
sub
arpl
arpl
sbb
aam
add
push
jb
sbb
inc
test
in
mov
test
jp
inc
minps
cmp
hlt
dec
mov
dec
cmc
daa
pop
pop
push
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
mov
xor
inc
lea
pushf
es
mov
test
push
stc
mov
xor
rcl
inc
in
test
inc
loop
inc
(bad)
xlat
push
out
ret
xor
test
shl
add
iret
(bad)
frstor
out
je
and
adc
movs
lahf
in
or
sar
cmp
outs
cmp
pop
pop
add
adc
or
push
lock
lds
and
add
and
and
js
cmp
arpl
les
outs
movs
dec
inc
lds
cmp
push
inc
ja
ja
inc
mov
push
sub
popa
aas
ins
test
in
mov
test
inc
in
nop
pop
addr16
hlt
push
mov
or
inc
pop
dec
push
cmps
xchg
mov
gs
lods
add
mov
inc
xor
mov
ss
mov
and
jo
inc
mov
iret
(bad)
out
cmps
mov
push
mov
fisttp
inc
out
jmp
inc
jecxz
mov
push
test
xor
loop
out
jbe
test
add
ret
data16
out
je
and
adc
iret
lahf
rcl
and
add
jnp
cmp
sbb
adc
sub
movs
inc
lock
lds
and
inc
cmps
es
xor
xor
(bad)
inc
push
arpl
push
nop
jo
dec
inc
pop
lds
pusha
mov
dec
aam
add
push
jne
js
dec
test
in
mov
test
adc
dec
lsl
pop
addr16
hlt
push
mov
dec
cmc
jno
dec
push
lea
lods
gs
mov
push
into
xchg
jne
xchg
nop
adc
mov
and
cwde
inc
cdq
movs
cwde
and
movs
cmps
mov
push
div
test
inc
fcom
int
rol
in
inc
out
scas
jmp
out
(bad)
loop
loope
(bad)
xor
pushf
mov
(bad)
fs
xor
add
ret
(bad)
xchg
retw
je
and
adc
out
lahf
in
aaa
pop
and
add
and
sbb
pop
xchg
and
adc
or
xor
and
add
cmp
inc
mov
loopne
aad
xor
and
arpl
les
dec
movs
jge
cmp
arpl
xor
je
jns
pusha
add
push
jle
(bad)
pop
div
inc
in
mov
test
dec
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
sub
lds
(bad)
push
inc
outs
aam
add
push
xor
push
aas
jg
push
ja
in
mov
test
imul
dec
addr16
pop
mov
pop
cmc
push
pop
pop
push
cmps
xchg
mov
gs
mov
mov
inc
xor
mov
div
mov
movs
scas
and
mov
lods
xor
pusha
cmps
push
mov
fistp
inc
movs
adc
and
jecxz
cli
inc
cdq
(bad)
icebp
push
mov
shl
mov
ret
fs
call
(bad)
fsub
out
je
and
adc
scas
lahf
in
and
and
add
aas
xchg
es
xor
push
cmc
sbb
jg
mov
aaa
movs
sbb
dec
lds
and
add
adc
and
jns
or
ja
arpl
addr16
cmp
bound
jge
inc
and
jno
inc
mov
push
jne
add
inc
imul
inc
in
mov
test
sbb
dec
divps
je
pop
hlt
dec
mov
push
cmc
cmp
gs
mov
sahf
add
push
jmp
add
fld
xor
mov
fdivr
xchg
mov
and
fild
movs
cmps
and
stc
cmps
(bad)
xor
pusha
mov
xor
jecxz
loopne
sti
adc
inc
out
scas
inc
(bad)
aam
in
add
xor
int
(bad)
jbe
idiv
fs
xor
gs
(bad)
fsub
out
je
and
adc
out
lahf
in
aaa
pop
and
add
xchg
pop
pop
xchg
and
adc
or
add
pop
lds
pop
movs
cmovg
mov
loopne
aad
xor
and
jae
pop
les
cmp
arpl
jl
sbb
aam
add
push
(bad)
aad
aas
dec
div
inc
in
mov
test
push
inc
divps
cmp
hlt
jne
arpl
outs
pop
imul
xchg
mov
gs
test
push
mov
inc
xchg
xchg
in
adc
xchg
mov
and
jo
inc
hlt
movs
xchg
and
jecxz
xchg
xor
pusha
mov
xor
out
loopne
in
in
and
loop
mov
push
jmp
ret
xor
in
repz
test
add
iret
(bad)
call
and
adc
rcr
test
shr
in
add
jns
sub
push
xchg
rol
inc
adc
cs
aaa
add
and
pop
cmps
arpl
adc
xor
adc
jae
arpl
fs
outs
movs
je
lds
cmp
inc
inc
inc
aam
add
push
imul
inc
ja
in
mov
test
inc
in
(bad)
out
addr16
push
mov
dec
cmc
inc
pop
dec
push
cmps
xchg
mov
gs
mov
xchg
adc
inc
xor
cwde
adc
lods
mov
and
jo
inc
call
iret
xchg
loope
mov
pusha
cmps
push
mov
fbld
les
mov
inc
jecxz
mov
in
(bad)
loopne
mov
shl
mov
ret
fs
xor
gs
data16
aad
(bad)
and
adc
aam
jmp
test
ror
test
outs
and
inc
pop
cmp
adc
or
xor
sub
movs
add
cmps
sub
inc
mov
loopne
aad
xor
and
ja
pusha
les
dec
movs
jns
pusha
lds
fs
dec
inc
push
aam
add
push
inc
aad
aas
dec
div
ja
in
mov
test
dec
in
cmovnp
push
addr16
hlt
inc
mov
jne
bound
imul
xchg
sahf
add
push
mov
test
push
movs
xchg
jne
xchg
popf
adc
xchg
mov
and
jo
inc
mov
pushf
es
ret
pusha
mov
xor
rcl
cld
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
mov
leave
inc
fwait
movs
xchg
mov
pusha
mov
xor
out
jecxz
jecxz
call
inc
loop
clc
inc
inc
cmc
push
cld
add
xor
cmc
mov
shl
add
iret
(bad)
fbld
out
je
and
adc
rcr
push
test
and
test
outs
cmp
jbe
add
pop
adc
aas
mov
aaa
add
and
sbb
push
loopne
aad
xor
and
les
sub
outs
das
jg
add
aam
add
push
jle
add
jge
ins
ja
in
mov
test
pop
in
cvtps2pd
pusha
addr16
hlt
dec
mov
dec
cmc
and
pop
push
cmps
xchg
mov
gs
test
cmps
xchg
jne
xchg
mov
ret
inc
and
jo
inc
cwde
movs
pushf
and
mov
mov
pusha
cmps
push
mov
fbld
inc
in
test
inc
jecxz
jecxz
cdq
(bad)
cmps
push
in
add
xor
pushf
mov
ret
shl
add
ret
data16
shl
adc
mov
pop
and
add
xchg
outs
xchg
sub
push
cmc
push
adc
push
mov
aaa
movs
push
lock
lds
sbb
xor
aaa
mov
loopne
aad
xor
and
addr16
arpl
jnp
sub
bound
jle
inc
pop
aam
add
push
sub
add
ja
in
mov
test
inc
in
minps
je
js
inc
mov
or
pusha
pop
fs
mov
push
sti
xchg
mov
adc
inc
xor
mov
mov
jo
inc
mov
sahf
mov
pusha
mov
xor
repz
loopne
out
mov
inc
out
scas
std
inc
add
(bad)
xor
xchg
(bad)
shl
call
(bad)
frstor
out
je
and
adc
out
lahf
ficom
sub
sub
es
jnp
inc
pop
push
xchg
sub
add
pop
adc
xor
pop
lock
lds
add
cmovg
outs
daa
adc
xor
or
les
imul
add
aam
add
push
popa
aad
aas
outs
test
in
mov
test
gs
in
nop
dec
addr16
hlt
dec
mov
or
inc
pop
push
push
mov
mov
gs
test
mov
inc
xchg
xchg
mov
xor
inc
mov
iret
fsub
cmps
cmps
mov
push
in
xchg
xor
out
loopne
loope
in
and
loop
mov
push
jmp
ret
xor
out
mov
ret
test
leave
add
iret
pop
je
and
adc
cli
lahf
iret
xchg
push
pop
push
test
xor
push
add
sub
push
rol
pop
adc
sbb
xor
and
or
push
loopne
aad
xor
adc
jae
pusha
les
jp
imul
(bad)
pop
inc
jb
bound
push
aad
aas
dec
imul
jle
jno
jb
ja
pop
in
cmovbe
push
addr16
hlt
jle
pusha
xchg
cmp
cmc
cs
fs
mov
mov
gs
test
push
mov
lahf
adc
inc
xor
mov
xor
inc
mov
mov
mov
pusha
cmps
push
mov
fild
inc
rcl
leave
and
jecxz
in
iret
(bad)
mov
xor
fistp
ret
fs
xor
add
ret
jmp
jecxz
shl
adc
int
jmp
shr
aaa
add
and
jl
addr16
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
jne
lahf
ficom
sar
dec
add
cmp
xchg
cmp
add
inc
adc
cmp
inc
lock
pop
and
pop
cmps
sbb
and
xor
pop
(bad)
push
push
pop
les
inc
inc
lds
jp
jg
jne
aaa
add
push
jge
jg
jg
push
ja
in
mov
test
jle
inc
addps
pusha
addr16
hlt
push
mov
pop
cmc
das
pop
pop
push
lea
jmp
add
test
xchg
xchg
mov
ss
mov
and
jo
inc
mov
call
pusha
mov
xor
rcl
jecxz
out
mov
inc
loop
std
inc
out
std
push
test
icebp
push
cwde
mov
shl
add
iret
(bad)
fisub
out
je
and
adc
mov
pop
push
test
imul
and
xchg
pop
xchg
rol
pop
adc
push
mov
aaa
add
and
sbb
mov
loopne
aad
xor
sbb
les
movs
or
das
jle
add
aam
add
push
outs
aad
aas
inc
not
jle
inc
mov
test
in
cmovae
pusha
addr16
dec
mov
or
push
xchg
xchg
mov
gs
out
mov
adc
inc
xor
mov
xor
inc
mov
mov
mov
mov
push
mov
fild
inc
loopne
mov
inc
jecxz
cld
inc
out
fist
shl
mov
ret
lds
lea
ret
data16
out
je
and
adc
loopne
jmp
sar
sub
cmp
xchg
adc
push
cmc
push
adc
or
add
pop
lds
and
sbb
and
das
mov
loopne
aad
xor
sub
push
push
arpl
jg
sub
lds
arpl
push
inc
gs
add
push
dec
aad
aas
dec
imul
inc
in
mov
test
pop
in
nop
cs
hlt
push
mov
jg
pop
pop
dec
push
mov
push
test
add
xchg
xor
call
xchg
mov
movs
mov
jecxz
scas
xor
pusha
mov
xor
repz
jecxz
loopne
out
and
out
scas
mov
push
test
test
loope
in
jbe
div
shl
add
ret
(bad)
cdq
data16
aam
(bad)
and
adc
rcr
test
shr
and
xchg
xor
adc
xor
add
push
lds
pop
cmps
and
and
aad
xor
or
les
outs
movs
outs
inc
push
lds
data16
ins
inc
jl
aaa
add
push
xor
pop
aas
push
in
mov
test
gs
inc
cmovbe
jb
arpl
adc
jne
cmc
jae
dec
push
mov
push
scas
gs
xchg
add
fld
xchg
xchg
lock
xchg
mov
and
jo
inc
popf
movs
fwait
and
mov
pusha
mov
xor
rcl
inc
xlat
adc
and
loop
in
int3
(bad)
loope
fiadd
ret
xor
cmp
xor
add
iret
(bad)
retf
movs
out
je
and
adc
cmps
lahf
jmp
or
ror
in
add
xchg
rol
pop
adc
add
xor
add
and
or
pop
loopne
aad
xor
sub
arpl
les
inc
movs
imul
mov
das
aam
add
push
dec
aad
aas
jns
ins
ja
in
mov
test
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
cmp
push
das
jl
inc
and
xor
pop
aad
aas
jns
ins
ja
in
mov
test
in
maxps
pop
addr16
hlt
adc
jne
cmc
push
pop
pop
push
lea
movs
gs
test
push
mov
inc
xor
mov
xchg
mov
movs
mov
es
cmps
mov
push
loopne
call
xlat
loopne
movs
adc
inc
out
scas
inc
(bad)
(bad)
push
inc
(bad)
xor
cmp
xchg
lea
ret
(bad)
fisub
out
je
and
adc
mov
pop
and
add
cmp
rol
inc
adc
push
mov
aaa
add
and
push
cmps
sbb
add
xor
push
(bad)
dec
push
pop
les
movs
jl
xor
arpl
arpl
inc
popa
aam
add
push
outs
aad
aas
inc
test
in
mov
test
outs
in
minps
pusha
addr16
hlt
dec
mov
dec
cmc
and
pop
push
(bad)
xchg
mov
gs
test
push
test
xchg
xchg
scas
adc
xor
inc
cmps
movs
mov
mov
pusha
mov
xor
rcl
inc
loop
test
inc
loop
inc
(bad)
fist
ret
xor
xchg
shl
add
iret
(bad)
frstor
out
je
and
adc
out
lahf
jmp
or
sar
pop
add
cmp
es
sbb
adc
or
add
and
push
cmps
and
das
mov
loopne
aad
xor
sub
push
push
pusha
les
cmp
outs
das
jge
inc
inc
inc
aam
add
push
xor
add
ja
in
mov
test
ins
in
subps
pusha
outs
hlt
ja
pusha
xchg
cmp
cmc
and
xchg
mov
gs
test
push
cmps
xchg
jne
xchg
xchg
adc
xchg
mov
and
jo
inc
mov
pushf
es
xor
cmps
push
mov
fild
inc
lds
mov
inc
jecxz
cmps
inc
inc
fst
shl
mov
shl
add
ret
data16
les
jecxz
mov
lahf
rcl
shr
in
add
jns
cmp
xor
adc
sub
movs
add
or
je
add
es
adc
xor
push
(bad)
addr16
pusha
les
ins
movs
or
lds
cmp
ins
inc
inc
aam
add
push
sub
fs
jae
push
ja
in
mov
test
inc
in
nop
pop
addr16
hlt
push
mov
dec
cmc
inc
pop
dec
push
mov
push
test
add
ret
xchg
jne
xchg
mov
ss
and
mov
movs
mov
es
scas
xor
pusha
mov
xor
xchg
xlat
loopne
fst
lods
and
out
scas
jmp
ret
push
lock
xor
(bad)
mov
(bad)
fs
xor
add
ret
pop
repz
je
and
adc
mov
pop
and
add
and
and
bound
adc
or
xor
xor
outs
and
inc
cmps
push
daa
xor
add
es
xor
sub
jae
pop
les
movs
ins
inc
jnp
arpl
data16
jb
jne
pop
add
push
inc
aad
aas
inc
div
inc
in
mov
test
pop
in
cmovnp
jg
push
hlt
inc
mov
jle
jnp
push
mov
mov
gs
out
movs
push
les
xchg
xchg
popf
adc
lods
mov
and
jo
inc
popf
movs
shl
mov
xor
mov
xor
xlat
xlat
inc
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
mov
pushf
and
jo
inc
xchg
movs
and
cmps
iret
xor
pusha
cmps
push
mov
fistp
inc
movs
adc
and
jecxz
cli
inc
out
(bad)
iret
push
cld
add
xor
lock
ret
fs
xor
add
ret
iretw
out
je
and
adc
rcr
and
add
aas
xchg
ds
cmp
adc
cmp
inc
lock
lds
and
sbb
push
loopne
aad
xor
push
(bad)
ja
arpl
outs
nop
cmp
bound
js
sbb
aam
add
push
jge
sbb
inc
imul
inc
in
mov
test
inc
in
divps
pop
addr16
hlt
dec
mov
push
cmc
and
pop
push
mov
sahf
add
push
in
xchg
mov
adc
inc
xor
scas
adc
mov
and
fild
movs
stos
and
mov
into
xor
pusha
mov
xor
jecxz
loopne
in
lods
and
out
scas
inc
(bad)
mov
xor
mov
(bad)
lds
mov
ret
pop
data16
mov
loopne
mov
lahf
in
aaa
pop
and
add
cmp
xchg
sub
add
inc
adc
ds
aaa
add
and
sbb
mov
loopne
aad
xor
sub
jae
pop
les
cmp
arpl
jl
inc
pop
aam
add
push
xor
dec
aas
inc
div
inc
in
mov
test
pop
in
divps
jo
jae
inc
mov
or
and
push
mov
push
sti
gs
out
mov
adc
inc
xchg
xchg
in
adc
div
fiadd
movs
test
mov
pusha
mov
xor
not
jecxz
out
lods
and
loop
jecxz
out
(bad)
push
rol
ret
xor
int
retf
jbe
test
add
iret
(bad)
fsub
out
je
and
adc
out
jmp
test
shl
add
xchg
pop
xchg
adc
adc
or
sbb
and
pop
cmps
xor
sbb
aad
xor
xor
les
cmp
outs
das
mov
imul
and
push
ja
in
mov
test
inc
in
nop
dec
addr16
hlt
push
mov
ja
pop
pop
dec
push
cmps
xchg
mov
mov
sti
push
ret
xchg
jne
xchg
lock
xchg
mov
and
jo
inc
jmp
iret
fisub
mov
pusha
cmps
push
mov
fisttp
inc
loopne
jmp
inc
jecxz
mov
push
test
xor
loope
out
jbe
test
add
ret
data16
bnd
and
adc
icebp
lahf
retf
pop
and
add
and
add
xor
adc
das
mov
aaa
movs
cmp
or
cmp
push
cmps
es
add
push
loopne
aad
xor
(bad)
addr16
arpl
pop
nop
push
lds
fs
jb
jno
add
push
dec
aad
aas
dec
div
ja
in
mov
test
dec
in
cmovnp
and
mov
push
cmc
das
pop
imul
xchg
xchg
add
push
mov
test
push
pushf
xchg
jne
xchg
mov
mov
jo
inc
cdq
movs
test
xchg
cmps
popf
xor
pusha
mov
xor
int
loopne
xlat
adc
and
out
scas
in
icebp
(bad)
fcom
(bad)
xor
fidivr
(bad)
fs
xor
add
ret
pop
data16
out
je
and
adc
lds
and
add
and
jae
fs
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fsub
out
je
and
jne
lahf
ficom
xor
imul
and
xchg
pop
xor
adc
cmp
or
or
ins
and
sbb
push
loopne
aad
xor
sbb
jae
pusha
les
nop
push
or
push
lds
jg
push
inc
jb
jl
inc
mov
push
jns
jb
js
ins
ja
in
mov
test
jno
inc
cvtps2pd
cmp
hlt
adc
pusha
xchg
cmp
cmc
and
pop
push
cmps
xchg
mov
gs
out
mov
adc
inc
xor
mov
div
leave
inc
mov
and
cmps
xchg
pusha
cmps
push
mov
fistp
inc
sti
adc
inc
jecxz
jecxz
rol
in
icebp
add
xor
(bad)
mov
ret
shl
add
ret
lock
je
and
adc
mov
pop
and
add
xchg
addr16
sub
push
cmc
push
adc
add
movs
add
and
add
add
and
jns
push
mov
pop
and
les
cmp
bound
jge
sbb
aam
add
push
ins
aad
aas
jle
ss
in
mov
test
jle
dec
minps
pop
addr16
dec
mov
inc
cmc
outs
pop
imul
xchg
sahf
add
push
sti
lods
test
push
nop
xchg
jne
xchg
lock
mov
jo
inc
out
movs
cwde
and
mov
mov
xchg
push
in
enter
stos
push
repz
loopne
loopne
mov
inc
out
scas
std
inc
(bad)
mov
xor
test
(bad)
shl
add
ret
(bad)
fsub
out
je
and
adc
cmps
lahf
jmp
shr
cmp
xchg
pop
xchg
pop
rol
inc
adc
or
push
lock
lds
and
sbb
sbb
adc
xor
sub
push
push
pop
les
xor
lds
jge
inc
inc
gs
add
push
jp
inc
aas
dec
div
inc
in
mov
test
gs
in
subps
arpl
hlt
ja
arpl
jnp
imul
xchg
mov
gs
test
push
xchg
xchg
lahf
xchg
stos
adc
xchg
mov
and
jo
inc
cmps
movs
lods
and
cdq
cmps
xchg
xor
pusha
mov
xor
not
loopne
clc
adc
and
loop
mov
push
jmp
ret
xor
cli
mov
ret
fidiv
retf
add
iret
(bad)
cdq
data16
fbstp
out
cli
cmc
xchg
jne
lahf
int
and
adc
add
jns
inc
pop
xor
adc
cs
aaa
add
and
pop
cmps
or
and
xor
adc
jae
arpl
and
imul
inc
inc
outs
aam
add
push
jne
outs
aas
push
in
mov
test
jns
inc
cmovne
pop
addr16
hlt
push
mov
dec
cmc
jbe
dec
push
mov
mov
gs
mov
xchg
jne
xchg
jmp
ss
mov
and
jo
inc
mov
mov
mov
cmps
push
mov
fild
inc
fcom
int
mov
mov
loop
rcl
shl
mov
ret
div
repnz
ret
data16
je
and
adc
loop
jmp
test
add
and
sbb
outs
xchg
sbb
adc
add
add
movs
and
sub
sbb
dec
add
das
daa
adc
aad
xor
sub
inc
push
arpl
pop
nop
inc
movs
jns
xor
bound
fs
fs
push
aam
add
push
dec
aad
aas
js
push
ja
in
mov
test
sbb
out
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
jge
sub
dec
das
jge
sbb
aam
add
push
push
aad
aas
jg
inc
ja
in
mov
test
(bad)
in
addps
pop
addr16
pop
mov
ins
cmc
push
pop
pop
push
lea
stos
gs
test
push
xchg
xchg
jne
xchg
adc
mov
and
jo
inc
movs
movs
mov
es
cmps
xchg
xor
pusha
mov
xor
rcl
jecxz
in
adc
inc
loop
clc
inc
cdq
(bad)
in
jmp
ret
xor
mov
shl
add
iret
(bad)
fbld
out
je
and
adc
mov
pop
push
test
shr
push
add
and
xor
add
pop
adc
cmp
movs
pop
lock
lds
and
sbb
mov
loopne
aad
xor
es
dec
push
pusha
les
sub
lds
jle
push
inc
daa
aam
add
push
push
sbb
inc
not
jle
inc
mov
test
popa
in
cmovae
cmp
hlt
dec
mov
push
cmc
cmp
pushw
xchg
xchg
mov
gs
test
push
fld
xor
lods
adc
xor
inc
cwde
movs
mov
es
mov
lea
push
mov
fbld
inc
out
mov
inc
jecxz
cld
inc
rol
rcl
shl
mov
ret
les
mov
ret
lock
je
and
adc
movs
lahf
jmp
test
sar
dec
add
cmp
xchg
push
rol
push
adc
add
adc
movs
add
pop
lds
dec
sbb
jns
daa
mov
loopne
aad
xor
sub
push
push
arpl
xchg
sub
lds
jle
sbb
aam
add
push
xor
dec
aas
dec
test
in
mov
test
push
dec
subps
pop
ins
hlt
jl
xchg
jle
js
daa
pop
imul
mov
cmc
gs
out
mov
adc
inc
xor
cwde
adc
mov
and
xlat
inc
mov
pushf
es
cmps
into
xor
pusha
mov
xor
xchg
xlat
loopne
call
mov
jmp
scas
loop
std
(bad)
fcom
(bad)
xor
sar
(bad)
fs
xchg
add
ret
pop
data16
out
je
and
adc
into
lahf
jmp
shl
cmp
jne
aas
pop
add
cmc
pop
adc
xor
sbb
or
ds
pop
cmps
and
loopne
aad
xor
or
les
movs
jo
arpl
arpl
cmp
jg
jl
jbe
inc
mov
push
push
aad
aas
outs
test
in
mov
test
dec
in
nop
and
hlt
dec
mov
adc
inc
pop
push
push
mov
mov
mov
cli
push
xchg
xchg
jne
xchg
mov
cmps
jmp
and
jo
inc
(bad)
movs
mov
es
mov
pusha
mov
xor
out
jecxz
(bad)
adc
and
loop
cmps
inc
in
xbegin
xor
sar
ret
xor
add
iret
pop
data16
xlat
je
and
adc
rcr
push
test
ror
test
outs
xchg
bound
adc
add
pop
aaa
add
and
add
sub
das
mov
loopne
aad
xor
sub
push
push
pusha
les
dec
movs
imul
mov
aam
add
push
push
aad
aas
inc
test
in
mov
test
push
in
cmovne
inc
addr16
inc
mov
or
jp
imul
xchg
mov
gs
out
cmps
push
mov
mov
jne
xchg
jecxz
xchg
dec
and
jo
inc
cdq
movs
mov
movs
cmps
(bad)
xor
pusha
cmps
push
mov
fistp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
movs
xchg
xchg
adc
mov
lahf
and
jo
inc
xchg
movs
fbld
xchg
mov
xor
int
loopne
cmps
adc
and
out
scas
inc
(bad)
int3
push
mov
(bad)
xor
repnz
(bad)
test
lds
ret
(bad)
fisub
out
je
and
adc
mov
pop
and
add
cmp
ja
add
inc
adc
add
movs
inc
lock
lds
and
pop
cmps
popa
daa
sbb
xor
sbb
les
nop
sub
lds
arpl
push
inc
jns
imul
aad
aas
jge
inc
ja
in
mov
test
sbb
inc
minps
inc
addr16
hlt
push
mov
push
cmc
and
pushw
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
mov
fdivr
test
xor
inc
mov
and
cmps
(bad)
xor
pusha
mov
xor
rcl
inc
loope
mov
inc
loop
std
inc
rol
push
out
add
xor
cmp
(bad)
lea
iret
(bad)
fisub
out
je
and
adc
in
lahf
out
or
sar
cmp
das
test
outs
cmp
adc
adc
adc
add
pop
aaa
add
and
push
cmps
push
daa
aaa
mov
loopne
aad
xor
sub
push
push
pusha
les
cmp
outs
das
jge
push
inc
pop
aam
add
push
sub
inc
aas
inc
test
in
mov
test
sbb
inc
subps
cmp
hlt
inc
mov
inc
cmc
daa
pop
imul
xchg
mov
gs
out
mov
adc
inc
xor
hlt
adc
xchg
mov
and
jo
inc
mov
popf
es
lods
xor
pusha
cmps
push
mov
fild
inc
repz
inc
jecxz
std
inc
rol
cmc
push
fadd
shl
mov
ret
fnstenv
xchg
add
ret
mov
je
and
adc
out
jmp
or
shl
adc
and
adc
push
cmc
push
adc
or
sub
and
pop
cmps
sbb
daa
mov
loopne
aad
xor
sub
ja
arpl
jb
xor
lds
(bad)
(bad)
js
gs
add
push
push
aad
aas
jp
ins
ja
in
mov
test
(bad)
in
(bad)
out
addr16
hlt
push
mov
imul
pop
dec
push
mov
push
test
call
push
ret
adc
inc
xor
lahf
adc
xchg
test
movs
mov
(bad)
cmps
test
pusha
mov
xor
repz
jecxz
(bad)
adc
and
out
scas
mov
push
test
mov
loop
in
jbe
div
shl
add
ret
(bad)
cdq
data16
aam
xchg
and
adc
repz
iret
xchg
aaa
pop
and
add
xchg
popa
xchg
jne
add
pop
adc
sub
inc
lock
push
dec
inc
cmps
and
add
xor
or
jae
pop
les
ins
movs
outs
inc
pop
lds
gs
cmova
add
push
dec
aad
aas
inc
not
inc
in
mov
test
inc
in
sysret
out
addr16
jle
arpl
and
imul
xchg
push
mov
test
mov
inc
xchg
xchg
mov
div
test
and
scas
cmps
mov
and
sti
mov
xor
out
jecxz
fcom
into
and
loop
out
ffreep
ret
push
loopne
ret
xor
sar
shl
add
iret
pop
data16
out
je
and
adc
rcr
test
add
cmp
xchg
jge
gs
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
ret
lock
je
and
mov
pop
and
add
xchg
pop
cmp
adc
aas
mov
aaa
movs
inc
lock
movs
add
cmps
pop
daa
adc
aad
xor
pop
(bad)
ja
arpl
ins
nop
push
lds
js
inc
inc
jns
add
push
jns
(bad)
jp
ins
ja
in
mov
test
inc
in
maxps
and
hlt
push
mov
pop
cmc
and
pop
push
mov
sahf
add
push
in
lods
test
push
add
jne
xchg
mov
mov
and
fiadd
movs
pushf
and
xchg
mov
xor
jecxz
loopne
out
lods
and
out
scas
inc
(bad)
out
push
cmc
add
xor
cwde
mov
(bad)
les
mov
ret
pop
data16
out
je
and
adc
scas
lahf
out
aaa
pop
and
add
cmp
xchg
sub
adc
cmp
movs
add
dec
lds
xor
popa
daa
dec
mov
loopne
aad
xor
es
jae
pop
les
cmp
arpl
arpl
inc
inc
push
aam
add
push
sub
div
inc
in
mov
test
dec
in
divps
inc
addr16
jle
arpl
and
xchg
mov
gs
test
xchg
xchg
sahf
xchg
jmp
div
leave
inc
cmps
movs
xchg
loop
mov
push
cli
mov
xor
rcl
inc
les
in
xchg
(bad)
loop
in
add
push
jecxz
ret
xor
cld
mov
shl
add
iret
pop
data16
out
je
and
adc
cmps
lahf
jmp
test
sar
pop
add
cmp
xchg
adc
adc
or
pop
lock
lds
and
add
xor
and
fs
sub
dec
push
pusha
les
xor
lds
arpl
push
inc
and
push
add
push
jp
inc
aas
dec
imul
jle
pop
mov
test
popa
in
cmova
jae
jg
jbe
pusha
xchg
cmp
cmc
jl
push
mov
mov
gs
out
mov
adc
inc
xor
mov
ss
mov
and
jo
inc
mov
ret
es
cmps
xchg
pusha
cmps
push
mov
fisttp
inc
clc
adc
and
jecxz
mov
push
test
xor
cld
mov
shl
add
ret
data16
and
adc
fstp
and
add
jns
add
rol
sbb
sub
movs
sbb
or
adc
pop
cmps
(bad)
sbb
push
loopne
aad
xor
push
(bad)
addr16
pusha
les
ins
movs
dec
inc
ins
lds
xor
add
aam
add
push
sub
ins
aas
push
inc
ja
in
mov
test
dec
in
lsl
das
addr16
hlt
pop
mov
dec
cmc
jno
dec
push
mov
xchg
add
push
lods
rol
hlt
push
ret
xchg
jne
xchg
adc
mov
and
jo
inc
cmps
movs
mov
lods
cmps
xor
mov
xor
jecxz
jecxz
mov
(bad)
out
scas
jmp
test
rcl
xor
xchg
(bad)
fs
xor
add
ret
pop
jmp
shl
adc
loope
jmp
daa
pop
and
add
sub
and
add
push
adc
or
cmp
and
movs
cmovg
mov
loopne
aad
xor
and
push
push
pop
les
inc
movs
ins
inc
dec
lds
data16
fs
dec
aam
add
push
push
aad
aas
jns
jno
inc
in
mov
test
sbb
out
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
sub
lds
(bad)
push
inc
daa
aam
add
push
pop
aad
aas
js
push
ja
in
mov
test
jns
inc
cvtps2pd
pop
outs
hlt
push
mov
pop
cmc
pop
pop
pop
push
cmps
xchg
mov
gs
test
push
cdq
xchg
jne
xchg
mov
div
leave
inc
xchg
movs
mov
movs
cmps
sahf
xor
pusha
cmps
push
mov
fistp
inc
cmps
adc
inc
jecxz
cli
inc
rol
push
cmc
add
xor
cmp
call
(bad)
frstor
out
je
and
adc
mov
pop
and
add
xchg
pop
and
adc
ds
aaa
movs
add
dec
lds
add
pop
loopne
aad
xor
es
addr16
arpl
pusha
nop
cmp
bound
jge
inc
inc
popa
aam
add
push
imul
ss
in
mov
test
outs
in
divps
pmuludq
xchg
jle
dec
cmc
das
pop
pushw
mov
push
jmp
add
add
jne
xchg
mov
cmp
mov
jo
inc
mov
sahf
xchg
mov
xor
repz
loopne
loop
mov
inc
out
scas
std
inc
cli
(bad)
fcom
(bad)
xor
iret
mov
(bad)
fs
xor
gs
pop
data16
shl
loopne
mov
lahf
iret
xchg
add
and
add
arpl
je
add
pop
adc
sub
push
lock
push
dec
inc
cmps
outs
daa
inc
mov
loopne
aad
xor
or
arpl
les
inc
pop
lds
data16
jl
inc
aam
add
push
jge
jae
dec
div
inc
in
mov
test
outs
in
cmovae
inc
addr16
jno
arpl
arpl
imul
xchg
mov
gs
test
push
rol
jne
xchg
mov
div
aam
cmps
movs
mov
es
cmps
mov
mov
mov
xor
rcl
inc
not
mov
rol
into
inc
loop
loope
rol
cmc
push
(bad)
add
xor
fidivr
shl
add
iret
pop
data16
and
adc
rcr
test
shr
in
add
jnp
das
pop
and
je
add
inc
adc
cs
aaa
add
and
pop
cmps
(bad)
sbb
xor
adc
jae
arpl
jp
imul
das
cmp
jnp
addr16
add
push
dec
aad
aas
ins
test
in
mov
test
inc
in
nop
and
hlt
push
mov
jg
pop
pop
dec
push
cmps
xchg
mov
gs
test
mov
inc
xor
cwde
adc
xchg
mov
and
jo
inc
xchg
movs
mov
es
shl
cmps
push
mov
fisttp
inc
lods
adc
and
jecxz
mov
mov
push
mov
shl
mov
shl
add
ret
data16
out
je
and
adc
cld
lahf
icebp
xchg
or
rcl
in
add
arpl
and
push
cmc
add
or
xor
das
lds
and
push
cmps
adc
loopne
aad
xor
and
push
push
arpl
push
nop
dec
movs
push
inc
js
bound
imul
inc
pop
aam
add
push
pop
aad
aas
dec
not
inc
in
mov
test
adc
dec
cmovne
jnp
push
hlt
inc
mov
or
dec
pop
fs
lea
test
test
add
mov
xor
loop
mov
mov
and
jo
inc
mov
and
cmps
into
xor
pusha
mov
xor
rcl
cld
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
cwde
adc
mov
leave
inc
mov
popf
xchg
mov
xor
out
jecxz
in
adc
and
loop
clc
inc
out
mov
xor
repz
shl
add
iret
(bad)
fbld
out
je
and
adc
mov
pop
push
test
ins
in
add
cmp
rol
pop
adc
ds
aaa
add
and
sbb
adc
xor
and
les
sub
outs
das
jle
jp
(bad)
aam
add
push
jb
add
jle
push
ja
in
mov
test
in
cmovae
inc
addr16
hlt
push
mov
dec
cmc
das
pop
pop
push
xchg
xchg
mov
gs
out
mov
adc
inc
xor
test
xor
inc
mov
stos
and
movs
cmps
ret
xor
pusha
cmps
push
mov
fbld
inc
out
test
inc
jecxz
jecxz
rol
push
jmp
aad
push
cwde
mov
ret
fs
add
ret
mov
je
and
adc
cmps
lahf
ficom
and
jp
sub
cmp
xchg
and
push
cmc
push
adc
or
sbb
and
add
pop
daa
pop
mov
loopne
aad
xor
(bad)
addr16
pusha
les
outs
movs
dec
inc
pop
lds
xor
aam
add
push
pop
aad
aas
push
push
ja
in
mov
test
outs
in
unpckhps
jb
jne
push
mov
push
cmc
dec
pop
dec
push
lea
test
add
ret
xchg
jne
xchg
test
ss
mov
and
jo
inc
mov
iret
aam
pushf
cmps
mov
pusha
mov
xor
xchg
xlat
loopne
ficom
call
inc
out
scas
loope
cli
(bad)
xlat
push
ret
xor
fdivr
(bad)
fbstp
xchg
add
ret
(bad)
fisub
out
je
and
adc
lock
jmp
shl
add
and
pop
rol
push
adc
or
cs
lds
and
add
push
loopne
aad
xor
dec
(bad)
dec
push
push
les
inc
outs
lds
and
ins
inc
pop
aam
add
push
jne
popa
aas
outs
mul
inc
in
mov
test
dec
in
nop
and
hlt
dec
mov
pop
cmc
inc
pop
push
push
mov
mov
gs
test
test
xchg
xchg
adc
mov
and
jo
inc
stos
movs
and
cmps
test
pusha
mov
xor
out
loopne
cli
adc
and
loop
mov
push
jmp
ret
xor
stc
mov
ret
fnsave
retf
add
iret
(bad)
cdq
data16
out
je
and
adc
fistp
adc
add
arpl
jne
add
inc
adc
das
mov
aaa
add
and
inc
cmps
sbb
pop
mov
loopne
aad
xor
or
arpl
les
nop
ins
movs
jae
push
(bad)
jge
fs
add
push
jae
dec
aas
dec
not
jno
add
inc
in
cmovbe
ins
addr16
jle
pusha
xchg
cmp
cmc
and
fs
adc
mov
push
pop
xor
xchg
adc
xchg
mov
and
jo
inc
mov
test
xchg
cmps
movs
xor
pusha
cmps
push
mov
fbld
ficom
retf
lds
inc
in
in
loopne
shl
mov
ret
fs
xor
add
ret
data16
out
je
and
adc
fstp
and
add
cmp
cmp
addr16
je
addr16
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
jne
lahf
fcom
cmp
imul
and
xchg
pop
and
cmc
inc
adc
cmp
inc
lock
ins
and
pop
cmps
and
loopne
aad
xor
sbb
dec
push
pop
les
nop
sub
lds
jp
sbb
aam
add
push
dec
aad
aas
jle
inc
ja
in
mov
test
inc
in
addps
cmp
hlt
push
mov
pop
cmc
cmp
gs
(bad)
xchg
mov
gs
test
push
mov
inc
xchg
xchg
mov
ret
(bad)
mov
and
jo
inc
cmps
movs
fisub
mov
test
pusha
mov
xor
rcl
inc
loopne
mov
inc
loop
std
inc
rol
scas
push
jecxz
ret
xor
cmp
les
lea
iret
(bad)
fisub
out
je
and
adc
scas
lahf
in
or
shr
push
add
and
sub
add
pop
adc
add
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
push
(bad)
push
push
pusha
les
cmp
outs
das
jge
jp
push
aam
add
push
(bad)
aad
aas
dec
test
in
mov
test
inc
in
cmova
pop
addr16
adc
pusha
xchg
cmp
cmc
jne
dec
push
cmps
xchg
mov
lea
cmc
push
ret
xchg
jne
xchg
mov
cmps
jmp
and
jo
inc
lods
movs
mov
es
cmps
mov
xchg
pusha
cmps
push
mov
fisttp
inc
sti
adc
and
jecxz
mov
push
mov
shl
mov
shl
add
ret
mov
and
adc
lds
and
add
jnp
cmp
sbb
adc
sub
pop
lock
sub
push
cmps
sbb
and
xor
dec
(bad)
addr16
arpl
inc
nop
cmp
bound
addr16
sbb
aam
add
push
dec
aad
aas
pop
div
ja
in
mov
test
in
cmovne
pop
addr16
hlt
push
jne
cmc
pop
pop
pop
push
(bad)
xchg
xchg
add
push
scas
mov
out
ret
xchg
adc
inc
xor
test
ss
mov
and
jo
inc
xchg
movs
mov
or
es
xor
mov
xor
int
jecxz
not
call
inc
out
scas
mov
push
test
std
push
out
in
jbe
div
fidiv
retf
add
ret
(bad)
fwait
data16
and
adc
fistp
and
add
jns
das
pop
cmp
sub
add
pop
adc
xor
sbb
or
cs
pop
cmps
outs
daa
sbb
xor
or
les
push
lds
cmp
jg
jl
jbe
inc
mov
push
dec
aad
aas
outs
test
in
mov
test
dec
in
nop
dec
addr16
hlt
pop
mov
push
cmc
inc
pop
dec
push
lea
test
add
mov
inc
xchg
xchg
lods
adc
xchg
mov
and
jo
inc
xchg
movs
fisub
and
push
sti
mov
xor
not
jecxz
xlat
adc
and
loop
in
in
in
in
ret
xor
sar
div
out
add
iret
pop
shl
je
and
adc
lock
in
xor
push
test
or
sub
outs
and
push
pop
xor
adc
or
and
and
sbb
add
mov
loopne
aad
xor
sub
jae
pusha
les
movs
push
inc
inc
lds
fs
pop
inc
(bad)
aam
add
push
pop
aad
aas
jg
push
ja
in
mov
test
arpl
push
addr16
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
cmp
push
das
arpl
inc
cs
add
push
push
aad
aas
jp
ss
in
mov
test
dec
in
maxps
jne
push
hlt
push
mov
arpl
push
pop
pop
push
mov
sahf
add
push
in
gs
out
mov
adc
inc
xor
mov
mov
and
mov
stc
cmps
test
pusha
mov
xor
jecxz
loopne
movs
adc
inc
out
scas
inc
(bad)
out
repnz
xor
cmp
(bad)
lea
ret
pop
lock
je
and
adc
mov
pop
and
add
cmp
xchg
xor
add
inc
adc
push
mov
aaa
add
and
push
cmps
xor
inc
mov
loopne
aad
xor
and
les
sub
arpl
arpl
sbb
aam
add
push
jb
sbb
inc
div
inc
in
mov
test
jp
inc
minps
cmp
hlt
dec
mov
dec
cmc
daa
pop
pop
push
mov
push
cli
gs
out
mov
adc
inc
xchg
xchg
mov
div
fild
movs
and
cmps
mov
mov
push
cli
mov
xor
not
jecxz
rcl
lock
loop
mov
push
inc
ret
xor
out
jmp
xor
add
iret
(bad)
cdq
data16
out
je
and
adc
fcomp
adc
add
xchg
xchg
ja
add
inc
adc
das
mov
aaa
add
and
pop
cmps
pop
daa
inc
mov
loopne
aad
xor
or
dec
push
arpl
jp
imul
das
cmp
push
inc
jnp
jge
inc
mov
push
sub
bound
push
in
mov
test
gs
inc
nop
pop
addr16
hlt
adc
jne
cmc
inc
pop
dec
push
mov
mov
gs
mov
xchg
jne
xchg
pushf
adc
xchg
mov
and
jo
inc
call
iret
aad
cwde
cmps
fnsave
pusha
cmps
push
mov
fisttp
inc
in
adc
and
jecxz
mov
push
mov
shl
mov
shl
add
ret
data16
out
je
and
adc
fcomp
and
add
jg
adc
rol
sbb
sub
movs
cs
cmp
pop
cmps
(bad)
inc
mov
loopne
aad
xor
push
(bad)
addr16
pusha
les
push
pop
inc
ins
lds
cmp
add
aam
add
push
jp
addr16
jae
push
ja
in
mov
test
gs
in
(bad)
out
addr16
hlt
push
mov
arpl
pop
pop
dec
push
mov
push
test
mov
cli
push
cdq
xchg
les
scas
xchg
test
movs
mov
mov
pusha
mov
xor
repz
jecxz
(bad)
adc
and
out
scas
mov
push
test
lods
push
loope
call
lea
iret
add
ret
(bad)
xchg
data16
out
je
and
adc
out
lahf
mov
adc
or
test
outs
and
sbb
xor
cmc
push
adc
or
cmp
sub
xor
add
fs
inc
mov
loopne
aad
xor
and
arpl
les
dec
movs
push
inc
jae
arpl
fs
pop
inc
inc
aam
add
push
arpl
pop
aas
dec
not
inc
in
mov
test
pop
in
cmovbe
push
addr16
inc
mov
dec
cmc
jbe
push
lea
xchg
test
push
mov
cwde
adc
inc
xchg
xchg
scas
adc
xchg
mov
and
jo
inc
popf
movs
mov
es
(bad)
xor
pusha
mov
xor
xlat
xlat
inc
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
hlt
adc
mov
pushf
and
jo
inc
xchg
pushf
movs
cmps
mov
sahf
pusha
cmps
push
mov
fistp
inc
movs
adc
and
jecxz
cli
inc
add
push
mov
shl
mov
ret
fs
call
(bad)
fsub
out
je
and
adc
scas
lahf
in
xor
and
add
aas
xchg
cmp
adc
cmp
movs
inc
lock
lds
and
add
adc
and
jns
or
addr16
arpl
addr16
cmp
bound
jge
inc
and
jno
inc
mov
push
jne
add
inc
div
ja
in
mov
test
sbb
dec
divps
je
pop
hlt
dec
mov
push
cmc
cmp
gs
mov
push
jmp
add
fld
xor
mov
fdivr
xchg
mov
jo
inc
in
movs
cmps
and
mov
pusha
mov
xor
repz
loopne
sti
adc
inc
out
scas
inc
(bad)
aam
in
add
xor
int
(bad)
jbe
idiv
fs
xor
gs
(bad)
fsub
out
je
and
adc
loopne
in
adc
and
add
sub
cmp
add
pop
adc
sub
or
or
adc
pop
cmps
outs
daa
sbb
xor
or
push
push
push
les
imul
das
cmp
jg
and
mov
push
jno
jns
outs
div
inc
in
mov
test
jle
inc
unpckhps
and
hlt
adc
jne
cmc
pop
pop
dec
push
(bad)
xchg
mov
mov
inc
into
xchg
adc
inc
xchg
xchg
lods
adc
xor
inc
mov
iret
fsub
lahf
cmps
mov
pusha
mov
xor
rcl
loopne
std
adc
and
loop
mov
push
mov
ret
xor
jecxz
jmp
xor
add
iret
(bad)
call
and
adc
rcr
test
shr
in
add
jns
cmp
xor
jne
add
inc
adc
das
mov
aaa
add
and
pop
cmps
(bad)
add
push
loopne
aad
xor
or
push
push
arpl
jg
imul
das
aas
mov
aam
add
push
ins
aad
aas
ins
test
in
mov
test
inc
in
nop
and
hlt
push
mov
push
cmc
pop
pop
dec
push
cmps
xchg
mov
gs
lods
add
scas
xchg
adc
inc
xor
mov
mov
mov
and
jo
inc
xchg
movs
test
out
cmps
(bad)
xor
pusha
cmps
push
mov
fisttp
inc
stc
adc
and
jecxz
mov
push
test
xor
sti
mov
shl
add
ret
data16
fdiv
jecxz
mov
lahf
rcl
xor
sub
push
add
jns
add
rol
sbb
sub
movs
adc
or
adc
pop
cmps
es
adc
xor
(bad)
inc
push
pusha
les
nop
outs
movs
or
lds
daa
(bad)
push
inc
pop
aam
add
push
js
dec
aas
dec
test
in
mov
test
gs
in
cmovnp
push
addr16
hlt
inc
mov
jne
popa
pop
imul
xchg
sahf
add
push
mov
test
push
mov
xchg
adc
inc
xor
xchg
adc
xchg
mov
and
jo
inc
out
movs
(bad)
mov
pusha
mov
xor
xchg
xlat
loopne
fst
retf
lds
inc
fcmovb
aam
out
(bad)
xor
in
leave
jbe
idiv
fs
xor
add
ret
(bad)
retf
data16
shl
loopne
mov
lahf
jmp
sar
aaa
add
xchg
outs
xchg
shl
xor
and
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
frstor
out
je
and
jne
lahf
fcom
cmp
add
and
jne
add
pop
adc
aas
mov
aaa
add
and
sbb
push
loopne
aad
xor
sbb
dec
push
pusha
les
inc
lds
jg
add
aam
add
push
jle
add
jge
push
ja
in
mov
test
pop
in
cvtps2pd
pusha
addr16
hlt
dec
mov
dec
cmc
and
pop
push
xchg
xchg
mov
gs
test
cmps
xchg
jne
xchg
mov
fdivr
xchg
xor
inc
cwde
movs
pushf
and
mov
mov
pusha
cmps
push
mov
fistp
inc
in
test
inc
jecxz
jecxz
out
cmps
push
in
add
xor
pushf
mov
ret
shl
add
ret
data16
shl
adc
mov
pop
and
add
xchg
outs
xchg
sub
push
cmc
push
adc
push
mov
aaa
movs
push
lock
lds
sbb
xor
aaa
mov
loopne
aad
xor
and
addr16
arpl
jnp
sub
bound
(bad)
(bad)
jg
cmp
mov
push
push
aad
aas
imul
add
outs
in
unpckhps
bound
hlt
push
mov
jae
inc
pop
dec
push
mov
push
test
add
ret
adc
inc
xor
mov
mov
mov
and
jo
inc
jmp
iret
fbld
lahf
cmps
lds
pusha
mov
xor
jecxz
jecxz
in
out
and
out
scas
mov
push
cld
add
xor
stc
mov
icebp
shl
retf
add
ret
(bad)
popf
data16
bnd
and
adc
(bad)
lahf
into
xchg
daa
pop
and
add
jg
das
pop
gs
sub
add
pop
adc
xor
cs
cmp
dec
pop
cmps
xor
loopne
aad
xor
or
push
push
push
les
push
lds
cmp
jg
fs
add
push
jge
jl
outs
mul
inc
in
mov
test
gs
inc
nop
jns
pop
hlt
push
mov
pop
cmc
pop
pop
dec
push
lea
test
mov
sahf
add
test
xchg
xchg
mov
div
mov
movs
and
cmps
fnstenv
pusha
mov
xor
out
loopne
repnz
and
loop
mov
push
jmp
ret
xor
cld
mov
ret
fs
xor
add
iret
(bad)
lahf
in
test
out
sti
cmc
aad
fcomp
adc
add
jl
das
pop
sub
rol
inc
adc
cs
aaa
add
and
pop
cmps
cmp
sbb
xor
adc
jae
arpl
jns
imul
das
cmp
jnp
addr16
add
push
dec
aad
aas
ins
test
in
mov
test
inc
in
nop
and
hlt
push
mov
imul
pop
dec
push
cmps
xchg
mov
gs
test
mov
inc
xor
jmp
lods
mov
and
jo
inc
nop
movs
cmps
and
mov
pusha
cmps
push
mov
fild
inc
rcl
into
and
jecxz
in
ffreep
cmps
push
fld
shl
mov
ret
fs
xor
add
ret
out
out
je
and
adc
std
lahf
jmp
rol
test
outs
and
xchg
rol
add
add
jbe
movs
ds
or
dec
or
xor
and
jp
sub
(bad)
ja
arpl
pop
nop
inc
movs
push
inc
inc
lds
imul
inc
es
add
push
xor
add
jp
push
ja
in
mov
test
dec
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
popa
nop
sub
dec
das
jl
sbb
aam
add
push
pop
aad
aas
jg
jno
inc
in
mov
test
pop
out
addr16
push
mov
pop
cmc
das
pop
pop
push
(bad)
xchg
mov
gs
sahf
add
test
xchg
xchg
mov
xor
inc
mov
call
pusha
mov
xor
rcl
inc
out
adc
inc
loop
std
inc
out
std
push
test
icebp
push
cwde
mov
shl
add
iret
(bad)
fisub
out
je
and
adc
mov
pop
push
test
imul
and
xchg
pop
xchg
rol
pop
adc
push
mov
aaa
add
and
sbb
mov
loopne
aad
xor
sbb
les
movs
push
inc
dec
lds
jle
add
aam
add
push
outs
aad
aas
inc
not
jle
inc
mov
test
jge
inc
cmovae
pusha
addr16
dec
mov
push
cmc
pusha
pop
gs
xchg
xchg
mov
gs
test
mov
xchg
jne
xchg
hlt
adc
div
pop
movs
test
mov
pusha
cmps
push
mov
fisttp
inc
cmps
adc
and
jecxz
mov
push
mov
shl
mov
shl
add
ret
iretw
out
je
and
adc
fistp
and
add
jnp
dec
pop
aaa
xchg
cmp
push
cmc
sbb
sub
add
and
pop
cmps
(bad)
pop
mov
loopne
aad
xor
push
(bad)
addr16
pusha
les
imul
das
cmp
jg
inc
aam
add
push
pop
aad
aas
jae
inc
ja
in
mov
test
pop
in
nop
pop
addr16
push
mov
jg
push
pop
dec
push
mov
xchg
add
push
stos
gs
cmps
add
mov
inc
xor
in
adc
xchg
mov
movs
mov
lahf
cmps
mov
pusha
mov
xor
repz
jecxz
repnz
and
out
scas
mov
push
test
lods
push
repz
icebp
shl
retf
add
ret
(bad)
popf
data16
and
adc
(bad)
lahf
into
xchg
daa
pop
and
add
jg
das
pop
gs
sub
add
pop
adc
xor
adc
or
imul
inc
mov
loopne
aad
xor
or
les
imul
das
cmp
add
aam
add
push
jno
jns
outs
test
in
mov
test
in
nop
pop
addr16
dec
mov
push
cmc
pop
pop
push
push
mov
mov
gs
movs
add
test
xchg
xchg
mov
xor
inc
hlt
movs
and
cmps
test
pusha
mov
xor
out
loopne
cli
adc
and
loop
mov
push
jmp
ret
xor
cli
mov
ret
fnsave
retf
add
iret
(bad)
cdq
data16
shl
out
stc
cmc
in
jne
lahf
mov
adc
pmulhw
add
xchg
rol
pop
adc
add
xor
add
and
or
pop
loopne
aad
xor
sub
arpl
les
dec
movs
push
inc
xor
outs
das
gs
pusha
inc
jp
add
push
arpl
outs
aas
inc
imul
jle
js
test
adc
inc
cmovnp
outs
addr16
inc
mov
dec
cmc
inc
pop
push
cmps
xchg
mov
gs
out
mov
adc
inc
xor
mov
cmps
dec
and
jo
inc
mov
popf
movs
cmps
(bad)
xor
pusha
cmps
push
mov
fistp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
movs
xchg
lock
cmps
mov
and
jo
inc
xchg
movs
mov
or
mov
pusha
mov
xor
xchg
xlat
loopne
movs
adc
inc
out
scas
inc
(bad)
(bad)
push
inc
(bad)
xor
cmp
xchg
lea
ret
(bad)
fisub
out
je
and
adc
mov
pop
and
add
cmp
rol
inc
adc
add
movs
push
lock
lds
pop
movs
cmovg
cmps
sbb
add
xor
push
(bad)
dec
push
pop
les
movs
jl
lds
arpl
inc
popa
aam
add
push
outs
aad
aas
inc
test
in
mov
test
push
inc
minps
jo
push
hlt
dec
mov
dec
cmc
and
pop
push
(bad)
xchg
mov
gs
test
push
test
xchg
xchg
stos
adc
xor
inc
cmps
movs
mov
mov
pusha
mov
xor
rcl
inc
loop
test
inc
loop
inc
(bad)
fist
ret
xor
xchg
shl
add
iret
pop
data16
out
je
and
adc
icebp
lahf
iret
xchg
or
shr
in
add
js
inc
pop
add
adc
das
mov
aaa
add
and
pop
cmps
or
and
xor
or
arpl
les
outs
movs
pop
inc
push
(bad)
push
inc
and
jle
inc
mov
push
xor
jae
ins
test
in
mov
test
inc
in
nop
jns
add
push
mov
adc
inc
pop
dec
push
adc
xchg
add
scas
xchg
jne
xchg
nop
adc
div
test
movs
mov
movs
cmps
mov
push
mov
fisttp
inc
rcl
and
jecxz
mov
push
hlt
add
xor
repz
shl
add
ret
data16
out
je
and
adc
rcr
and
add
jge
adc
rol
sbb
sub
movs
es
sub
pop
cmps
pop
daa
cmp
xor
push
(bad)
ja
pusha
les
imul
das
aas
mov
inc
aam
add
push
xor
jb
jae
push
ja
in
mov
test
in
nop
gs
push
mov
or
pop
pop
dec
push
mov
push
stos
gs
mov
push
scas
xchg
adc
inc
xor
in
adc
xchg
mov
movs
mov
loop
mov
pusha
mov
xor
repz
jecxz
cmc
adc
and
out
scas
mov
push
test
icebp
push
out
in
jbe
div
fs
xor
add
ret
(bad)
fwait
data16
out
je
and
adc
fistp
and
add
jns
das
pop
cmp
sub
add
pop
adc
xor
adc
or
ds
pop
cmps
and
loopne
aad
xor
or
les
movs
jo
arpl
arpl
and
jns
and
bound
jg
inc
aas
inc
mul
inc
in
mov
test
pop
in
cmovnp
outs
addr16
hlt
dec
mov
adc
and
or
mov
mov
gs
test
add
les
xchg
xchg
out
adc
lods
mov
and
jo
inc
mov
fisub
test
mov
xor
rcl
jecxz
ficom
lds
loop
in
hlt
(bad)
iret
push
aad
ret
xor
in
retf
jbe
test
add
iret
pop
shl
xchg
out
loopne
mov
lahf
jmp
test
shr
sub
cmp
es
xchg
jbe
gs
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fisub
out
je
and
mov
pop
and
add
xchg
and
adc
cmp
inc
lock
lds
and
sbb
push
loopne
aad
xor
push
(bad)
addr16
arpl
outs
nop
cmp
bound
js
sbb
aam
add
push
jge
sbb
inc
imul
inc
in
mov
test
inc
in
divps
pop
addr16
hlt
dec
mov
push
cmc
and
pop
push
mov
sahf
add
push
in
xchg
mov
adc
inc
xor
scas
adc
mov
and
fild
movs
shl
mov
into
xor
pusha
mov
xor
jecxz
loopne
in
lods
and
out
scas
inc
(bad)
mov
xor
mov
(bad)
lds
mov
ret
pop
data16
mov
loopne
mov
lahf
in
aaa
pop
and
add
cmp
xchg
sub
add
inc
adc
ds
aaa
add
and
sbb
mov
loopne
aad
xor
sub
jae
pop
les
imul
jl
cmp
jae
inc
mov
push
ins
aad
aas
outs
not
inc
in
mov
test
jle
inc
nop
and
hlt
adc
jne
cmc
inc
pop
dec
push
mov
push
scas
gs
scas
out
sti
push
add
jne
xchg
test
ss
mov
and
jo
inc
stos
movs
and
cmps
mov
push
div
mov
xlat
loopne
ret
adc
and
loop
mov
push
jmp
ret
xor
(bad)
mov
ret
fs
retf
in
gs
(bad)
pushf
data16
in
shl
out
sti
cmc
out
jne
lahf
int
push
pop
adc
add
jg
aas
pop
push
xchg
sub
add
push
adc
cs
aaa
add
and
pop
cmps
(bad)
adc
xor
adc
dec
push
arpl
inc
nop
push
pop
inc
pusha
lds
cmp
push
inc
inc
aam
add
push
dec
aad
aas
ins
div
ja
in
mov
test
pop
in
nop
dec
addr16
hlt
dec
mov
pop
cmc
push
pop
dec
push
xchg
xchg
mov
gs
test
push
ret
adc
inc
xor
nop
adc
div
test
movs
mov
mov
mov
push
mov
fisttp
inc
repnz
and
jecxz
mov
push
test
xor
idiv
shl
add
ret
iretw
out
je
and
adc
fistp
and
add
jg
dec
pop
pusha
xchg
aaa
rol
sbb
sub
movs
adc
and
pop
cmps
pop
daa
inc
mov
loopne
aad
xor
push
(bad)
addr16
pusha
les
push
pop
inc
ins
lds
cmp
add
aam
add
push
jp
addr16
jae
push
ja
in
mov
test
gs
in
(bad)
out
addr16
hlt
push
mov
outs
cmc
pop
pop
dec
push
mov
push
test
mov
cli
push
cdq
xchg
jne
xchg
lahf
adc
xchg
aad
mov
iret
test
xchg
cmps
xchg
xor
pusha
mov
xor
int
loopne
fcom
mov
vpavgb
scas
mov
push
repnz
xor
fnstsw
(bad)
fs
xor
add
ret
pop
data16
fnsave
loopne
mov
lahf
jmp
add
and
add
and
xchg
adc
adc
or
and
and
or
pop
cmps
cmp
loopne
aad
xor
sub
dec
push
pop
les
inc
movs
push
inc
inc
lds
mov
aam
add
push
xor
push
aas
jg
jno
inc
in
mov
test
dec
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
sub
lds
(bad)
push
inc
daa
aam
add
push
push
aad
aas
jge
inc
ja
in
mov
test
dec
in
cvtps2pd
cmp
hlt
adc
pusha
xchg
cmp
cmc
and
pop
push
cmps
xchg
mov
gs
out
mov
adc
inc
xor
mov
div
leave
inc
mov
mov
loope
xchg
pusha
cmps
push
mov
fistp
inc
sti
adc
inc
jecxz
jecxz
rol
in
icebp
add
xor
(bad)
mov
ret
shl
add
ret
lock
je
and
adc
mov
pop
and
add
xchg
addr16
sub
push
cmc
push
adc
add
movs
add
and
add
add
and
jns
adc
addr16
arpl
bound
pop
lds
jge
sbb
aam
add
push
ins
aad
aas
jle
ss
in
mov
test
jp
dec
minps
pop
addr16
dec
mov
inc
cmc
outs
pop
imul
xchg
sahf
add
push
sti
lods
test
push
nop
xchg
jne
xchg
mov
ss
and
pop
movs
mov
cmps
cmps
mov
push
stc
mov
xor
jecxz
jecxz
loope
out
and
out
scas
mov
push
cld
add
xor
loope
call
fs
xor
add
ret
(bad)
cdq
data16
out
je
and
adc
aad
into
xchg
aaa
pop
and
add
jg
sbb
push
xchg
xor
adc
xor
es
movs
cmovg
and
loopne
aad
xor
push
(bad)
arpl
les
movs
dec
inc
jae
arpl
aas
mov
je
jb
inc
mov
push
dec
aad
aas
ins
test
in
mov
test
gs
in
nop
and
hlt
push
mov
pop
cmc
push
pop
dec
push
mov
push
stos
mov
cld
push
into
xchg
jne
xchg
mov
ss
mov
and
jo
inc
stos
movs
fisub
mov
pusha
mov
xor
out
loopne
(bad)
adc
and
loop
mov
push
test
int3
push
cmc
mov
ret
fs
retf
in
gs
(bad)
pushf
data16
in
shl
out
sti
cmc
out
jne
lahf
int
push
pop
adc
add
jle
inc
pop
push
xchg
xor
add
push
adc
cs
aaa
add
and
pop
cmps
pop
daa
es
loopne
aad
xor
adc
jae
arpl
jo
movs
je
lds
ds
push
inc
cmp
mov
push
sub
jp
ins
test
in
mov
test
sbb
jns
add
push
mov
push
cmc
pop
pop
dec
push
cmps
xchg
mov
gs
test
scas
xchg
adc
inc
xor
mov
mov
mov
and
jo
inc
xchg
movs
test
out
cmps
(bad)
xor
pusha
cmps
push
mov
fisttp
inc
stc
adc
and
jecxz
mov
push
test
xor
(bad)
mov
shl
add
ret
data16
out
je
and
adc
repnz
(bad)
xchg
or
ror
in
add
and
inc
pop
cs
jge
push
cmc
sbb
cs
aaa
xor
and
add
mov
loopne
aad
xor
sub
inc
push
arpl
pop
nop
inc
movs
push
inc
aas
lds
gs
dec
inc
cs
add
push
je
push
aas
dec
imul
inc
in
mov
test
(bad)
in
cmovbe
push
addr16
jno
xchg
jg
pop
cmc
inc
pop
imul
adc
lods
test
push
cmps
xchg
jne
xchg
lea
mov
and
cmps
inc
cdq
movs
mov
es
into
xor
pusha
mov
xor
rcl
cld
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
mov
leave
inc
mov
popf
mov
pusha
mov
xor
out
jecxz
in
adc
inc
loop
clc
inc
rol
push
jmp
ret
xor
mov
shl
add
iret
(bad)
fbld
out
je
and
adc
mov
pop
push
test
shr
push
add
and
xor
add
pop
adc
cmp
movs
pop
lock
lds
and
sbb
mov
loopne
aad
xor
es
dec
push
pusha
les
sub
lds
jle
push
inc
daa
aam
add
push
jbe
sbb
inc
not
jle
inc
mov
test
in
cmovae
cmp
hlt
dec
mov
push
cmc
cmp
pushw
xchg
xchg
mov
gs
test
push
fld
xor
lods
adc
xor
inc
cwde
movs
mov
es
mov
lea
push
mov
fbld
inc
out
mov
inc
jecxz
cld
inc
rol
rcl
shl
mov
ret
(bad)
mov
ret
iretw
out
je
and
adc
lds
and
add
jnp
add
add
adc
sub
pop
lock
sub
pop
cmps
(bad)
sbb
push
loopne
aad
xor
(bad)
push
push
pusha
les
movs
dec
inc
ins
lds
cmp
add
aam
add
push
dec
aad
aas
jae
ins
ja
in
mov
test
in
nop
gs
hlt
dec
mov
pop
cmc
push
pop
dec
push
mov
push
movs
mov
mov
adc
inc
xor
test
ss
mov
and
jo
inc
scas
movs
(bad)
(bad)
cmps
scas
xor
pusha
mov
xor
xchg
xlat
jecxz
fist
test
inc
out
scas
test
call
(bad)
xor
cmp
fs
xor
gs
(bad)
(bad)
out
je
and
adc
mov
pop
and
add
xor
xchg
xor
add
pop
adc
sub
add
add
and
pop
cmps
outs
daa
adc
xor
push
(bad)
jae
push
les
movs
dec
inc
jae
arpl
aas
mov
dec
aam
add
push
jge
jno
ins
test
in
mov
test
pop
in
nop
pop
addr16
hlt
push
mov
je
pop
pop
push
push
(bad)
xchg
mov
gs
test
xchg
xchg
jne
xchg
lahf
adc
xchg
mov
and
jo
inc
mov
iret
frstor
loop
mov
xchg
pusha
mov
xor
out
loopne
int
jmp
scas
mov
push
jmp
ret
xor
cld
mov
ret
fs
xor
add
iret
(bad)
lahf
in
test
out
sti
cmc
aad
fcomp
adc
add
jp
sbb
cmp
adc
das
mov
aaa
add
and
pop
cmps
cmp
add
xor
or
push
push
arpl
jl
imul
das
daa
mov
jne
imul
aad
aas
jns
push
ja
in
mov
test
push
in
sysret
out
addr16
push
mov
dec
cmc
inc
pop
dec
push
adc
test
mov
xchg
jne
xchg
lods
adc
lods
mov
and
jo
inc
mov
(bad)
and
push
mov
fild
inc
int3
adc
and
jecxz
loop
rol
push
xlat
add
xor
sti
mov
ret
fs
loopne
fxam
loop
ret
data16
sti
je
and
adc
aam
in
xor
and
add
cmp
xchg
aaa
shl
adc
sub
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
jne
lahf
ficom
cmp
imul
and
xchg
pop
cmp
cmc
inc
adc
add
movs
inc
lock
lds
and
pop
cmps
popa
daa
sbb
xor
sbb
les
nop
sub
lds
jp
inc
inc
jns
imul
aad
aas
jge
inc
ja
in
mov
test
pop
in
minps
inc
addr16
hlt
push
mov
push
cmc
and
pushw
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
mov
fdivr
test
xor
inc
mov
and
cmps
(bad)
xor
pusha
mov
xor
rcl
inc
loope
mov
inc
loop
std
inc
rol
push
out
add
xor
cmp
(bad)
lea
iret
(bad)
fisub
out
je
and
adc
in
lahf
out
or
sar
cmp
das
test
outs
cmp
adc
pop
xchg
das
rol
pop
adc
add
pop
aaa
add
and
push
cmps
push
daa
aaa
mov
loopne
aad
xor
sub
push
push
pusha
les
movs
pop
inc
push
lds
cmp
cmova
jl
inc
mov
push
sub
jnp
push
in
mov
test
gs
inc
nop
pop
addr16
hlt
adc
pusha
xchg
and
or
pop
pop
dec
push
adc
test
mov
xchg
ficom
mov
xor
inc
scas
movs
scas
and
movs
cmps
lahf
xor
pusha
cmps
push
mov
fisttp
inc
fst
in
xchg
lds
inc
inc
lock
lock
xor
cmp
fs
xor
gs
data16
shl
adc
scas
lahf
int3
xchg
push
pop
and
add
xchg
cmp
adc
cs
aaa
xor
and
sbb
pop
loopne
aad
xor
or
les
movs
je
xor
bound
jne
sbb
aam
add
push
ins
aad
aas
ins
imul
inc
in
mov
test
sbb
dec
orps
fs
hlt
push
mov
dec
cmc
and
dec
push
lea
in
gs
inc
cmps
xchg
xlat
xchg
test
ss
mov
and
jo
inc
scas
movs
(bad)
loop
mov
push
cli
mov
xor
repz
jecxz
ret
adc
and
out
scas
mov
push
repnz
xor
(bad)
mov
icebp
fs
retf
in
gs
(bad)
sahf
data16
and
adc
aam
into
xchg
aaa
pop
and
add
jg
inc
pop
sbb
adc
xor
adc
or
imul
pop
mov
loopne
aad
xor
or
push
push
push
les
push
lds
cmp
jl
je
xor
push
inc
aad
aas
outs
not
inc
in
mov
test
jb
inc
nop
pop
addr16
pop
mov
pop
cmc
inc
pop
dec
push
lea
stos
lea
clc
push
xchg
xchg
jne
xchg
(bad)
adc
xor
inc
call
iret
aam
pushf
cmps
mov
xchg
pusha
mov
xor
not
loopne
loopne
out
and
loop
mov
push
mov
ret
xor
fidivr
shl
add
iret
pop
cmps
out
je
and
adc
ret
lahf
in
push
pop
push
test
rol
and
xchg
add
adc
or
es
outs
and
add
aaa
loopne
aad
xor
sub
dec
push
pusha
les
inc
movs
push
inc
dec
lds
gs
bound
aam
add
push
(bad)
aad
aas
jge
push
ja
in
mov
test
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
cmp
push
das
jle
inc
cs
add
push
dec
aad
aas
inc
div
ja
in
mov
test
inc
in
maxps
fs
hlt
push
mov
pop
cmc
and
pop
push
mov
sahf
add
push
in
lods
test
push
add
jne
xchg
mov
mov
and
fiadd
movs
cwde
and
xchg
mov
xor
jecxz
loopne
out
test
inc
out
scas
inc
(bad)
out
push
cmc
add
xor
cwde
mov
(bad)
les
mov
ret
pop
data16
out
je
and
adc
scas
lahf
out
aaa
pop
and
add
cmp
xchg
sub
adc
cmp
movs
add
dec
lds
xor
popa
daa
dec
mov
loopne
aad
xor
es
jae
pop
les
cmp
arpl
arpl
inc
inc
push
aam
add
push
sub
div
inc
in
mov
test
dec
in
divps
inc
addr16
jge
arpl
es
imul
mov
test
xchg
xchg
sahf
xchg
mov
xor
inc
stos
movs
xchg
and
pushf
cmps
xchg
xor
pusha
mov
xor
rcl
loopne
in
in
ffree
call
inc
add
push
mov
ret
xor
stc
mov
ret
(bad)
enter
les
pop
je
and
adc
movs
lahf
ficom
cmp
imul
and
xchg
cmp
xor
add
push
adc
sub
movs
and
pop
lds
adc
mov
loopne
aad
xor
or
dec
push
arpl
pop
nop
sub
outs
das
jne
push
inc
addr16
add
push
sub
add
jae
inc
ja
in
mov
test
push
out
addr16
hlt
dec
mov
inc
cmc
and
dec
push
cmps
xchg
mov
mov
mov
add
jne
xchg
call
ss
mov
and
jo
inc
jmp
iret
xchg
es
xor
cmps
push
mov
fist
inc
fst
lods
and
jecxz
hlt
inc
rol
in
test
lods
push
cmp
call
(bad)
aad
loopne
shl
adc
scas
lahf
int3
xchg
push
pop
and
add
xchg
pop
xor
adc
cs
aaa
xor
and
pop
cmps
bound
cs
loopne
aad
xor
push
(bad)
push
push
pusha
les
push
lds
cmp
add
aam
add
push
push
aad
aas
jae
ss
in
mov
test
pop
in
nop
cs
push
mov
or
push
pop
dec
push
mov
push
stos
gs
test
push
xchg
xor
call
mov
jo
inc
call
iret
fldenv
loop
shl
mov
xor
repz
jecxz
cmc
adc
and
out
scas
mov
push
test
std
push
out
in
jbe
div
fnstenv
enter
ret
gs
(bad)
data16
shl
adc
les
and
add
jp
cmp
push
xchg
jbe
add
pop
adc
sub
push
lock
lds
movs
cmovg
xor
cmp
xor
and
push
push
pop
les
inc
movs
inc
inc
xor
arpl
imul
inc
push
aam
add
push
imul
aas
dec
test
in
mov
test
outs
in
cmovo
jno
inc
hlt
jbe
arpl
inc
pop
imul
xchg
mov
gs
test
push
popf
xchg
lahf
xchg
lea
xor
inc
lea
pushf
es
(bad)
xor
pusha
mov
xor
xlat
xlat
inc
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
lods
adc
mov
pushf
and
jo
inc
mov
pushf
es
mov
push
mov
fistp
inc
cmps
adc
inc
jecxz
cli
inc
rol
push
cmc
add
xor
cmp
call
(bad)
frstor
out
je
and
adc
mov
pop
and
add
xchg
pop
and
adc
ds
aaa
movs
add
dec
lds
add
pop
loopne
aad
xor
es
addr16
arpl
pusha
nop
cmp
bound
jge
inc
inc
cs
add
push
imul
ss
in
mov
test
outs
in
divps
fs
dec
mov
dec
cmc
das
pop
pushw
mov
push
jmp
add
add
jne
xchg
mov
cmp
mov
jo
inc
mov
sahf
xchg
mov
xor
repz
loopne
loop
mov
inc
out
scas
std
inc
cli
(bad)
fcom
(bad)
xor
iret
mov
(bad)
shl
add
ret
(bad)
fsub
out
je
and
adc
mov
pop
and
add
jp
aas
pop
cmp
adc
fs
aaa
add
and
add
cmp
es
xor
and
arpl
les
cmp
arpl
jl
inc
inc
dec
aam
add
push
outs
aad
aas
das
div
inc
in
mov
test
gs
inc
orps
inc
addr16
hlt
push
mov
or
cmp
dec
push
mov
mov
gs
test
push
test
xchg
xchg
in
adc
xchg
mov
and
jo
inc
hlt
movs
test
es
cmps
cwde
xor
pusha
mov
xor
not
loopne
fcom
mov
inc
loop
test
mov
xor
cmp
lock
gs
(bad)
aad
mov
and
adc
mov
pop
adc
add
xor
add
sub
sub
adc
sub
pop
aaa
add
and
push
cmps
and
sbb
xor
or
les
sub
outs
das
jne
jp
addr16
add
push
outs
aad
aas
outs
div
ja
in
mov
test
push
in
cvtdq2ps
cmp
hlt
push
mov
dec
cmc
pop
pop
dec
push
adc
sti
add
ret
adc
inc
xor
mov
ss
mov
and
jo
inc
mov
iret
fsub
fwait
cmps
movs
xor
pusha
cmps
push
mov
fisttp
inc
(bad)
adc
and
jecxz
mov
push
test
xor
stc
mov
shl
add
ret
iretw
out
je
and
adc
fistp
and
add
jg
add
rol
sbb
sub
movs
cs
cmp
pop
cmps
pop
daa
add
xor
(bad)
inc
push
pusha
les
ins
movs
dec
inc
push
lds
cmp
jl
jo
add
push
push
data16
push
ss
in
mov
test
gs
dec
nop
jne
pop
hlt
pop
mov
jae
pop
pop
dec
push
mov
push
movs
mov
stos
push
sahf
xchg
adc
inc
xor
mov
cmps
dec
and
jo
inc
mov
stos
and
scas
cmps
xchg
xor
pusha
mov
xor
jecxz
loopne
ret
adc
and
out
scas
out
repz
cmps
push
rol
(bad)
xor
cli
mov
(bad)
fs
loopne
int
in
ret
pop
data16
out
je
and
adc
mov
pop
and
add
cmp
xchg
shl
xor
and
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
jne
lahf
ficom
sar
push
add
and
xor
adc
ds
aaa
add
and
sbb
adc
xor
and
les
sub
outs
das
jle
jp
(bad)
aam
add
push
jb
add
jle
push
ja
in
mov
test
push
in
cmovae
inc
addr16
hlt
push
mov
dec
cmc
das
pop
pop
push
xchg
xchg
mov
gs
out
mov
adc
inc
xor
test
xor
inc
mov
stos
and
movs
cmps
ret
xor
pusha
cmps
push
mov
fbld
inc
in
test
inc
jecxz
jecxz
rol
push
jmp
push
cwde
mov
ret
fs
add
ret
mov
je
and
adc
cmps
lahf
ficom
and
jp
sub
cmp
xchg
daa
rol
push
adc
or
add
pop
lds
and
sbb
push
daa
aas
mov
loopne
aad
xor
and
push
push
arpl
fs
sub
bound
jle
push
inc
push
aam
add
push
sub
add
dec
not
inc
in
mov
test
pop
in
minps
fs
inc
mov
or
push
(bad)
xchg
sahf
add
push
cli
lods
test
push
add
jne
xchg
jmp
ss
mov
and
jo
inc
out
movs
mov
es
cmps
(bad)
xor
pusha
mov
xor
repz
jecxz
ficom
lods
and
out
scas
cmc
inc
add
(bad)
xor
cwde
mov
icebp
fs
xor
gs
(bad)
aad
lock
je
and
adc
mov
pop
and
add
cmp
sub
adc
sub
movs
ss
lds
and
adc
and
inc
mov
loopne
aad
xor
adc
dec
push
push
les
sub
arpl
jne
inc
and
ins
add
push
push
aad
aas
ins
mul
inc
in
mov
test
in
cvtdq2ps
jo
sbb
dec
mov
jg
and
dec
push
(bad)
xchg
mov
gs
test
push
rol
jne
xchg
lock
xchg
mov
and
jo
inc
hlt
movs
test
xchg
mov
xor
out
loopne
fst
mov
inc
loop
cmc
inc
cdq
(bad)
loopne
repnz
xor
(bad)
mov
ret
push
mov
iret
(bad)
(bad)
data16
shl
out
sti
cmc
fnsave
lahf
into
xchg
and
adc
add
jg
das
pop
add
adc
cs
aaa
add
and
pop
cmps
es
cs
loopne
aad
xor
adc
jae
arpl
jo
movs
je
lds
ds
push
inc
cmp
mov
push
popa
aad
aas
ins
test
in
mov
test
dec
in
nop
dec
addr16
hlt
adc
jne
cmc
pop
pop
dec
push
cmps
xchg
mov
lea
sti
push
lods
xchg
jne
xchg
mov
xor
inc
xchg
movs
mov
es
cmps
xchg
xor
pusha
cmps
push
mov
fisttp
inc
(bad)
adc
and
jecxz
mov
push
mov
shl
mov
ret
fs
xor
add
ret
data16
out
je
and
adc
(bad)
lahf
jmp
xor
and
add
daa
xchg
rol
pop
adc
or
and
and
aaa
and
add
xor
xor
sub
push
push
arpl
inc
nop
inc
movs
push
inc
pop
lds
mov
inc
mov
push
ins
aad
aas
inc
not
inc
in
mov
test
sbb
out
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
gs
sub
dec
das
arpl
sbb
aam
add
push
jp
pop
aas
jle
jno
inc
in
mov
test
inc
in
addps
cmp
hlt
push
mov
pop
cmc
cmp
gs
(bad)
xchg
mov
gs
test
push
mov
inc
xchg
xchg
mov
ret
(bad)
mov
and
jo
inc
cmps
movs
fisub
mov
test
pusha
mov
xor
rcl
inc
loopne
mov
inc
loop
std
inc
rol
mov
xor
cmp
lds
lea
iret
(bad)
fisub
out
je
and
adc
scas
lahf
in
or
shr
push
add
and
and
add
pop
adc
add
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
push
(bad)
push
push
pusha
les
cmp
outs
das
jge
jp
push
aam
add
push
(bad)
aad
aas
dec
test
in
mov
test
inc
in
subps
jo
jg
jle
pusha
xchg
cmp
cmc
outs
pop
fs
adc
mov
push
nop
xchg
jne
xchg
call
ss
mov
and
jo
inc
out
movs
shl
movs
cmps
movs
xor
pusha
cmps
push
mov
fbld
loope
mov
inc
jecxz
cld
inc
rol
push
rol
shl
mov
ret
fs
xor
gs
mov
je
and
adc
out
lahf
jmp
push
pop
and
add
xor
cmp
fs
sub
push
cmc
sbb
sbb
sub
lock
lds
and
adc
mov
loopne
aad
xor
or
push
push
pusha
les
movs
dec
inc
inc
lds
jnp
sbb
aam
add
push
dec
aad
aas
ins
imul
inc
in
mov
test
outs
in
cvtdq2ps
pop
addr16
xchg
jl
push
push
(bad)
xchg
xchg
add
push
sti
gs
cdq
add
nop
xchg
jne
xchg
mov
ss
and
cmps
and
stc
cmps
lds
pusha
mov
xor
int
jecxz
aad
lods
and
out
scas
hlt
inc
(bad)
(bad)
mov
xor
mov
icebp
div
mov
ret
(bad)
aad
(bad)
out
je
and
adc
scas
lahf
int3
xchg
aaa
pop
and
add
xchg
pop
popa
xchg
sub
add
pop
adc
sub
movs
cmp
dec
lds
and
adc
mov
loopne
aad
xor
push
(bad)
push
push
push
les
sub
lds
jnp
jg
jo
jno
inc
mov
push
inc
aad
aas
ins
not
inc
in
mov
test
gs
in
nop
and
hlt
push
mov
or
push
lea
stos
lea
std
push
mov
inc
xchg
xchg
hlt
adc
xchg
mov
and
jo
inc
(bad)
movs
(bad)
and
mov
pusha
mov
xor
not
loopne
out
adc
and
loop
mov
push
mov
ret
xor
clc
mov
ret
fs
xor
add
iret
(bad)
call
and
adc
fstp
adc
add
jp
sbb
cmp
adc
das
mov
aaa
add
and
pop
cmps
sbb
ds
loopne
aad
xor
push
(bad)
dec
push
pusha
les
inc
movs
push
inc
inc
lds
mov
dec
aam
add
push
inc
aad
aas
dec
not
jle
bound
popa
in
cmovb
inc
addr16
hlt
jbe
pusha
xchg
cmp
cmc
push
pop
push
xchg
xchg
mov
gs
test
push
mov
(bad)
adc
inc
xor
xchg
adc
xor
inc
mov
sahf
movs
cmps
(bad)
xor
pusha
cmps
push
mov
fistp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
movs
xchg
scas
adc
cmps
mov
and
jo
inc
cwde
movs
fbld
xchg
mov
xor
xchg
xlat
loopne
movs
adc
inc
out
scas
inc
(bad)
out
icebp
add
xor
cmp
(bad)
lea
ret
pop
lock
je
and
adc
mov
pop
and
add
cmp
xchg
xor
add
inc
adc
push
mov
aaa
add
and
push
cmps
xor
inc
mov
loopne
aad
xor
and
les
sub
arpl
arpl
sbb
aam
add
push
jb
sbb
inc
div
inc
in
mov
test
jp
inc
minps
cmp
hlt
dec
mov
dec
cmc
and
pop
push
mov
push
cli
gs
out
mov
adc
inc
xchg
xchg
mov
div
fild
movs
and
cmps
mov
test
push
stc
mov
xor
not
jecxz
in
test
inc
loop
inc
(bad)
xlat
push
out
ret
xor
test
shl
add
iret
(bad)
frstor
out
je
and
adc
movs
lahf
in
xor
push
test
sar
cmp
outs
cmp
pop
pop
pop
xchg
daa
rol
pop
adc
or
push
lock
lds
and
push
cmps
jns
adc
aad
xor
sub
arpl
les
cmp
outs
das
jl
jp
dec
aam
add
push
jp
push
aas
and
in
mov
test
popa
in
andnps
pusha
addr16
inc
mov
jl
cmp
dec
push
xchg
xchg
mov
mov
mov
cmps
xchg
jne
xchg
adc
mov
and
jo
inc
xchg
movs
mov
(bad)
iret
fwait
es
mov
and
mov
fisttp
rcl
mov
inc
jecxz
test
ficom
shl
mov
shl
add
ret
data16
out
enter
mov
lahf
into
xchg
and
and
add
cmp
and
push
cmc
sbb
or
or
aaa
xor
and
push
cmps
xor
xor
xor
or
push
push
pusha
les
movs
dec
inc
inc
lds
jnp
inc
inc
ins
aam
add
push
push
aad
aas
ins
div
ja
in
mov
test
push
dec
andps
pop
addr16
hlt
dec
mov
adc
cmp
push
push
mov
xchg
add
push
in
gs
mov
cmps
xchg
xlat
xchg
in
adc
mov
and
fiadd
movs
shl
mov
test
pusha
mov
xor
repz
jecxz
std
adc
and
out
scas
mov
push
test
rcl
mov
icebp
fs
retf
in
gs
(bad)
sahf
data16
cli
je
and
adc
ficomp
and
add
jp
sub
xor
jne
add
pop
adc
sub
sbb
and
pop
cmps
xor
loopne
aad
xor
or
jae
push
les
imul
jg
pusha
aam
add
push
inc
aad
aas
outs
test
in
mov
test
dec
in
nop
dec
addr16
hlt
dec
mov
push
push
lea
test
add
mov
inc
xchg
xchg
mov
mov
mov
and
jo
inc
cmps
movs
lods
and
mov
pusha
mov
xor
rcl
inc
int3
adc
and
loop
out
rol
fist
ret
xor
(bad)
mov
shl
add
iret
pop
data16
out
je
and
adc
scas
lahf
jmp
shr
sub
jle
and
xchg
pop
xchg
xor
gs
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
frstor
out
je
and
mov
pop
and
add
xchg
addr16
xor
push
cmc
sbb
jg
mov
aaa
movs
inc
lock
lds
and
add
or
and
jns
or
addr16
arpl
addr16
cmp
bound
jge
inc
jge
jo
inc
mov
push
jne
add
inc
div
ja
in
mov
test
sbb
dec
divps
je
dec
hlt
push
mov
push
cmc
cmp
gs
mov
push
jmp
add
fld
xor
mov
fdivr
xchg
mov
jo
inc
in
movs
cmps
and
mov
pusha
mov
xor
repz
loopne
sti
adc
inc
out
scas
inc
(bad)
aam
in
add
xor
int
(bad)
jbe
idiv
fs
xor
gs
(bad)
fsub
out
je
and
adc
out
lahf
in
daa
pop
and
add
xchg
pop
pop
xchg
and
adc
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
and
arpl
les
cmp
arpl
jl
sbb
aam
add
push
(bad)
aad
aas
dec
mul
inc
in
mov
test
adc
inc
divps
cmp
hlt
jne
arpl
outs
pop
imul
xchg
mov
gs
test
push
rol
jne
xchg
lock
lods
mov
and
jo
inc
cmps
movs
movs
and
mov
pusha
mov
xor
rcl
loopne
(bad)
adc
inc
loop
hlt
inc
rol
ficom
ret
xor
xchg
ret
repnz
gs
(bad)
(bad)
out
je
and
adc
out
lahf
int3
xchg
xor
adc
add
add
sub
add
adc
jg
mov
aaa
add
lds
and
and
or
and
jl
adc
push
push
(bad)
les
nop
cmp
outs
das
pop
(bad)
jp
pop
aam
add
push
jb
dec
aas
ins
imul
jno
jl
sbb
inc
orps
pusha
addr16
dec
mov
ins
cmc
outs
pop
push
push
mov
mov
gs
sahf
add
nop
xchg
jne
xchg
adc
mov
and
jo
inc
xchg
movs
mov
(bad)
iret
xchg
es
fnsave
pusha
cmps
push
mov
fist
inc
xlat
adc
inc
jecxz
cmc
inc
out
movs
push
in
add
xor
mov
shl
add
ret
data16
fdiv
jecxz
mov
lahf
int
xor
and
add
jg
cmp
pusha
xchg
xor
push
cmc
sbb
sub
movs
adc
or
cmp
pop
cmps
bound
adc
adc
and
jbe
sbb
(bad)
push
push
pusha
les
imul
das
cmp
add
aam
add
push
xor
jp
push
ss
in
mov
test
dec
in
nop
jb
gs
pop
mov
inc
cmc
inc
pop
dec
push
mov
xchg
add
push
stos
mov
cli
push
scas
xchg
les
scas
ss
and
test
movs
mov
or
es
cwde
xor
pusha
mov
xor
xchg
xlat
jecxz
std
adc
and
out
scas
mov
push
test
xlat
push
cld
mov
(bad)
fs
xor
add
ret
pop
data16
out
je
and
adc
ficomp
and
add
and
pop
rol
push
adc
or
daa
lock
xor
add
xor
xor
sub
arpl
les
movs
inc
inc
pop
lds
imul
inc
cs
add
push
outs
aad
aas
jge
jno
inc
in
mov
test
sbb
out
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
sub
lds
(bad)
push
inc
daa
aam
add
push
dec
aad
aas
jle
inc
ja
in
mov
test
in
cvtps2pd
pusha
addr16
hlt
push
mov
ins
cmc
and
pop
push
xchg
xchg
mov
gs
test
cmps
xchg
jne
xchg
mov
fdivr
xchg
xor
inc
cwde
movs
pushf
and
mov
mov
pusha
cmps
push
mov
fistp
inc
in
test
inc
jecxz
jecxz
out
cmps
push
in
add
xor
mov
ret
shl
add
ret
data16
shl
adc
mov
pop
and
add
xchg
outs
xchg
sub
push
cmc
push
adc
push
mov
aaa
movs
push
lock
lds
add
pavgb
aad
xor
and
les
sub
bound
jle
inc
pop
aam
add
push
popa
aad
aas
dec
test
in
mov
test
dec
in
minps
je
jl
inc
mov
or
pusha
pop
imul
xchg
sahf
add
push
sti
xchg
mov
adc
inc
xor
mov
ss
mov
and
jo
inc
mov
sahf
mov
pusha
mov
xor
int
loopne
out
mov
inc
out
scas
std
inc
add
(bad)
xor
xchg
(bad)
fs
add
ret
(bad)
frstor
out
je
and
adc
cmps
lahf
in
adc
and
add
jge
add
and
sub
add
pop
adc
cs
aaa
add
and
cmp
sbb
cmp
aad
xor
or
dec
push
push
les
nop
cmp
arpl
inc
(bad)
inc
inc
aam
add
push
jb
pop
aas
jae
jno
inc
in
mov
test
dec
in
packsswb
pusha
addr16
hlt
dec
mov
dec
cmc
pusha
pop
dec
push
lea
sti
gs
sahf
add
test
xchg
xchg
stos
adc
div
fiadd
movs
(bad)
and
stc
cmps
mov
push
div
xchg
push
rcl
inc
lods
adc
inc
loop
ret
inc
rol
ficom
ret
xor
test
ret
xor
gs
(bad)
(bad)
out
je
and
adc
out
lahf
int3
xchg
xor
adc
add
xchg
pop
adc
adc
sub
xor
add
and
sbb
or
xor
or
les
sub
lds
jne
inc
inc
outs
aam
add
push
dec
aad
aas
outs
imul
jno
pop
mov
test
pop
in
nop
jns
jb
dec
mov
adc
push
pop
dec
push
xchg
xchg
mov
mov
std
push
cdq
xchg
jne
xchg
xchg
adc
lods
mov
and
jo
inc
xchg
movs
cwde
and
mov
pusha
cmps
push
mov
fisttp
inc
loopne
jmp
inc
jecxz
mov
push
mov
shl
mov
shl
add
ret
data16
and
adc
(bad)
lahf
retf
pop
and
add
jns
adc
rol
sbb
sub
sbb
or
je
add
(bad)
add
push
loopne
aad
xor
cmp
les
dec
movs
push
inc
dec
lds
pusha
(bad)
addr16
jno
push
add
push
dec
aad
aas
dec
div
ja
in
mov
test
outs
in
cmovo
jge
jo
jl
xchg
jg
jge
pop
pop
push
mov
push
and
cdq
add
lds
xor
xchg
adc
mov
jo
inc
cdq
movs
mov
mov
into
xor
pusha
mov
xor
(bad)
xlat
cld
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
stos
adc
mov
leave
inc
mov
sahf
xchg
mov
xor
rcl
jecxz
out
adc
inc
loop
std
inc
out
icebp
push
test
xor
cwde
mov
shl
add
iret
(bad)
fisub
out
je
and
adc
mov
pop
push
test
imul
and
xchg
pop
xchg
rol
pop
adc
push
mov
aaa
add
and
sbb
mov
loopne
aad
xor
sbb
les
movs
push
inc
dec
lds
jle
inc
inc
das
aam
add
push
outs
aad
aas
inc
test
in
mov
test
jge
inc
cmovae
pusha
addr16
dec
mov
push
cmc
pusha
pop
gs
adc
test
mov
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
popf
es
mov
push
mov
fild
inc
loopne
mov
inc
jecxz
cld
inc
out
fist
shl
mov
ret
lds
mov
ret
data16
out
je
and
adc
loopne
jmp
sar
sub
cmp
xchg
adc
push
cmc
push
adc
or
add
pop
lds
and
sbb
and
das
mov
loopne
aad
xor
sub
push
push
arpl
jg
sub
lds
(bad)
(bad)
inc
pop
aam
add
push
push
jno
ins
imul
inc
in
mov
test
gs
in
orps
and
hlt
dec
mov
push
cmc
pusha
pop
dec
push
lea
cli
gs
scas
add
fld
xor
mov
(bad)
push
and
jo
inc
xchg
movs
mov
xchg
mov
xor
repz
loop
mov
korw
scas
ret
inc
cli
(bad)
not
(bad)
xor
xchg
lock
call
(bad)
loop
lock
je
and
adc
cmps
lahf
rcl
pusha
shr
xor
outs
xor
adc
adc
adc
cs
aaa
add
and
cmp
and
and
aad
xor
or
push
push
push
les
nop
cmp
arpl
inc
(bad)
push
inc
inc
aam
add
push
dec
aad
aas
jae
push
ja
in
mov
test
in
andps
pusha
addr16
dec
mov
arpl
daa
pop
dec
push
mov
mov
gs
test
push
rol
jne
xchg
pushf
adc
lods
mov
and
jo
inc
mov
iret
fsub
(bad)
cmps
fnstenv
pusha
mov
xor
not
loopne
cld
adc
and
loop
mov
push
test
cmc
push
(bad)
mov
ret
fs
xor
add
iret
(bad)
pushf
in
xlat
je
and
adc
rcr
adc
add
jns
cmp
xor
adc
das
mov
aaa
add
and
pop
cmps
(bad)
inc
mov
loopne
aad
xor
adc
jae
arpl
dec
nop
push
lds
aas
mov
aam
add
push
jne
js
ins
test
in
mov
test
inc
in
nop
jns
dec
hlt
push
mov
outs
cmc
pop
pop
dec
push
cmps
xchg
mov
gs
test
movs
xchg
jne
xchg
adc
mov
and
jo
inc
out
movs
stos
and
out
ret
xor
pusha
cmps
push
mov
fild
inc
(bad)
adc
and
jecxz
loope
out
ret
push
fadd
shl
mov
ret
fs
rol
pop
data16
out
je
and
adc
movs
lahf
in
or
shr
sub
xchg
addr16
sub
addr16
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
jne
lahf
ficom
cmp
ins
in
add
cmp
xchg
aaa
rol
inc
adc
add
movs
push
lock
lds
pop
movs
cmovg
cmps
sbb
add
xor
push
(bad)
jae
pop
les
sub
arpl
arpl
inc
popa
aam
add
push
outs
aad
aas
jge
jno
inc
in
mov
test
push
inc
minps
jo
push
hlt
dec
mov
dec
cmc
and
pop
push
mov
push
in
gs
test
push
test
xchg
xchg
stos
adc
div
leave
inc
cmps
movs
mov
mov
pusha
mov
xor
not
jecxz
loop
test
inc
loop
std
inc
cdq
(bad)
fist
ret
xor
xchg
shl
add
iret
(bad)
frstor
out
je
and
adc
out
lahf
jmp
or
sar
pop
add
cmp
es
pop
xchg
sbb
adc
add
xor
add
and
push
cmps
and
xor
xor
sub
arpl
les
cmp
outs
das
jge
inc
inc
inc
aam
add
push
sub
test
in
mov
test
imul
pusha
addr16
ja
pusha
xchg
cmp
cmc
and
xchg
mov
gs
test
push
cmps
xchg
jne
xchg
lahf
adc
xchg
mov
and
jo
inc
fwait
movs
pushf
and
fwait
cmps
mov
push
mov
fist
inc
(bad)
adc
and
jecxz
cmc
inc
rol
mov
xor
xchg
lds
lea
ret
lock
je
and
adc
out
lahf
xlat
xchg
and
and
add
add
and
push
cmc
add
jg
mov
aaa
xor
and
and
add
xor
adc
ja
les
nop
sub
lds
pop
mov
aam
add
push
sub
dec
aas
ja
inc
ja
in
mov
test
gs
dec
packsswb
je
push
hlt
inc
mov
or
es
push
push
mov
push
cli
mov
add
xchg
jne
xchg
mov
(bad)
push
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
xchg
xlat
loop
mov
(bad)
out
scas
sti
inc
add
(bad)
xor
into
mov
icebp
fs
xor
gs
(bad)
aad
loopne
cdq
je
and
adc
rcr
and
add
jl
das
pop
xor
xor
add
pop
adc
sub
adc
add
and
push
cmps
popa
daa
sbb
xor
push
(bad)
dec
push
push
les
movs
adc
cmp
arpl
aas
(bad)
pop
inc
je
jb
inc
mov
push
jge
jno
ins
test
in
mov
test
in
nop
pop
addr16
hlt
pop
mov
js
pop
pop
dec
push
(bad)
xchg
mov
gs
test
xchg
xchg
adc
inc
xchg
xchg
mov
xor
inc
stos
movs
and
cmps
lds
pusha
mov
xor
out
loopne
not
jmp
scas
mov
push
jmp
ret
xor
out
repz
test
add
iret
pop
retw
out
je
and
adc
fcomp
push
test
rol
in
add
and
adc
adc
or
push
lock
and
add
xor
and
jbe
dec
mov
pop
and
arpl
les
movs
push
inc
pop
lds
data16
jb
inc
aam
add
push
sub
sbb
jge
push
ja
in
mov
test
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
cmp
push
das
jle
sbb
aam
add
push
inc
aad
aas
inc
test
in
mov
test
pop
in
divps
pop
addr16
hlt
dec
mov
push
cmc
and
pop
push
mov
push
in
xchg
mov
adc
inc
xor
scas
adc
mov
jo
inc
mov
popf
es
into
xor
pusha
mov
xor
repz
loopne
in
lods
and
out
scas
inc
(bad)
mov
xor
mov
(bad)
lds
mov
ret
pop
mov
je
and
adc
mov
pop
and
add
cmp
xchg
sub
add
inc
adc
ds
aaa
add
and
sbb
mov
loopne
aad
xor
sub
jae
pop
les
cmp
arpl
jl
inc
pop
aam
add
push
xor
dec
aas
inc
div
inc
in
mov
test
gs
in
divps
jo
jae
inc
mov
or
and
push
mov
push
sti
gs
out
mov
adc
inc
xchg
xchg
in
adc
div
fiadd
movs
shl
mov
pusha
mov
xor
not
jecxz
out
lods
and
loop
inc
mov
xor
into
mov
shl
add
iret
(bad)
fsub
out
je
and
adc
movs
lahf
fst
aas
shr
xor
jle
inc
pop
xor
sub
add
push
adc
sub
xor
add
and
adc
jns
ds
loopne
aad
xor
pop
(bad)
arpl
les
xor
jne
ins
lds
inc
(bad)
jge
jg
popa
add
push
pop
aad
aas
jno
ins
ja
in
mov
test
pop
in
packsswb
pop
addr16
hlt
jle
pusha
xchg
jne
je
addr16
push
push
adc
movs
add
xchg
xchg
jne
xchg
xchg
adc
div
aam
test
mov
xor
pusha
cmps
push
movs
mov
xor
int
rol
mov
icebp
(bad)
jecxz
ret
(bad)
lock
in
shl
mov
lds
lea
ret
data16
out
je
and
adc
out
lahf
xlat
xchg
xor
and
add
sbb
inc
pop
add
cmc
add
jg
mov
aaa
xor
and
and
or
and
ja
sub
ja
pusha
les
cmp
bound
jnp
inc
cmp
outs
add
push
dec
aad
aas
ins
imul
inc
in
mov
test
sbb
dec
nop
pop
addr16
hlt
push
mov
or
push
mov
xchg
add
push
in
gs
mov
nop
xchg
xlat
xchg
mov
ret
jmp
and
jo
inc
scas
movs
(bad)
loop
mov
push
cli
mov
xor
repz
jecxz
icebp
adc
and
out
scas
mov
push
std
add
xor
out
call
shl
retf
in
gs
(bad)
popf
data16
cdq
je
and
adc
(bad)
lahf
into
xchg
daa
pop
and
add
jle
sbb
jns
sub
add
pop
adc
xor
push
lock
adc
add
cmovg
outs
daa
add
xor
sbb
jae
pop
les
inc
movs
jge
inc
lds
popa
(bad)
push
inc
and
push
add
push
pop
aad
aas
dec
div
inc
in
mov
test
jp
inc
cmova
push
addr16
jno
arpl
das
pop
fs
mov
push
cmps
gs
test
push
mov
out
xchg
inc
xchg
xchg
jecxz
mov
mov
lods
mov
and
jo
inc
mov
pushf
mov
pusha
mov
xor
(bad)
xlat
inc
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
xchg
adc
mov
int
xchg
and
cmps
mov
push
mov
fistp
inc
sti
adc
inc
jecxz
jecxz
rol
in
icebp
add
xor
cmp
shl
add
ret
lock
je
and
adc
mov
pop
and
add
xchg
addr16
sub
push
cmc
push
adc
add
movs
add
and
add
add
and
jns
adc
push
push
arpl
bound
pop
lds
jge
sbb
aam
add
push
ins
aad
aas
jle
ss
in
mov
test
jp
dec
minps
pop
addr16
dec
mov
inc
cmc
outs
pop
imul
xchg
sahf
add
push
sti
lods
test
push
nop
xchg
jne
xchg
in
adc
mov
jo
inc
out
movs
test
mov
mov
xchg
push
in
enter
stos
push
repz
loopne
loope
mov
inc
out
scas
std
inc
(bad)
(bad)
fcom
(bad)
xor
test
(bad)
shl
add
ret
(bad)
fsub
out
je
and
adc
cmps
lahf
jmp
shr
cmp
xchg
xor
cmc
inc
adc
or
pop
lock
lds
and
sbb
sbb
adc
xor
sub
arpl
les
movs
jge
inc
lds
jge
sbb
add
push
push
inc
aas
inc
mul
inc
in
mov
test
push
out
addr16
dec
mov
inc
cmc
and
dec
push
mov
push
in
mov
add
xchg
jne
xchg
pushf
adc
div
aad
mov
iret
mov
xor
pusha
mov
xor
rcl
in
cmps
adc
inc
loop
rol
cld
push
out
ret
xor
ret
jbe
test
add
iret
(bad)
loop
mov
and
adc
out
rcl
sub
add
add
sbb
adc
xor
inc
lock
lds
dec
cmp
and
cs
loopne
aad
xor
pop
(bad)
push
push
arpl
inc
nop
sub
outs
das
pop
mov
add
push
sub
push
aas
jno
push
ja
in
mov
test
inc
in
punpckldq
jo
outs
hlt
inc
mov
push
cmc
daa
pop
push
push
xchg
xchg
movs
add
push
in
gs
test
push
cmps
xchg
jne
xchg
mov
xor
inc
mov
iret
xchg
es
xor
cmps
push
mov
fisttp
inc
aad
test
inc
jecxz
cmc
inc
rol
movs
push
in
add
xor
(bad)
mov
shl
add
ret
data16
out
je
and
adc
scas
lahf
int3
xchg
push
pop
and
add
jl
dec
pop
aaa
xchg
sub
push
cmc
sbb
sub
movs
push
lock
je
pop
movs
add
cmps
pop
daa
cmp
xor
push
(bad)
ja
pusha
les
push
dec
inc
ins
lds
cmp
pop
inc
js
aaa
add
push
pop
aad
aas
push
ss
in
mov
test
inc
in
nop
gs
push
mov
push
cmc
pop
pop
dec
push
mov
push
stos
gs
mov
push
sahf
xchg
jne
xchg
adc
lods
jo
inc
mov
xchg
xchg
mov
xor
repz
loopne
not
shl
scas
loope
fadd
out
(bad)
add
xor
cwde
mov
(bad)
xlat
xor
add
ret
pop
data16
out
je
and
adc
movs
lahf
call
test
sar
aaa
add
and
cmp
fs
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fsub
out
je
and
jne
lahf
ficom
cmp
jp
sub
jle
and
xchg
pop
bound
adc
cmp
movs
pop
lock
lds
and
sbb
mov
loopne
aad
xor
es
push
push
pusha
les
sub
lds
jle
push
inc
daa
aam
add
push
jbe
sbb
inc
test
in
mov
test
in
cmovae
cmp
hlt
dec
mov
push
cmc
cmp
pushw
adc
xchg
add
jne
xchg
lods
adc
xor
inc
in
movs
mov
loope
mov
lea
push
mov
fbld
inc
out
mov
inc
jecxz
cld
inc
rol
rcl
shl
mov
ret
(bad)
mov
ret
lock
je
and
adc
movs
lahf
jmp
test
sar
dec
add
cmp
xchg
sbb
adc
add
adc
movs
add
pop
lds
dec
sbb
jns
daa
mov
loopne
aad
xor
sub
push
push
arpl
gs
sub
lds
jle
sbb
aam
add
push
xor
dec
aas
dec
test
in
mov
test
in
minps
and
hlt
jae
xchg
jle
js
es
imul
mov
cli
xchg
mov
adc
inc
xor
cwde
adc
mov
and
(bad)
inc
mov
cmps
and
cdq
cmps
ret
pusha
mov
xor
xchg
xlat
loopne
rcl
mov
inc
out
scas
mov
push
rol
(bad)
xor
cwde
mov
lock
xchg
add
ret
(bad)
jecxz
jecxz
shl
adc
in
rcl
and
jbe
syscall
cmp
and
xchg
pop
cmp
adc
xor
inc
lock
lds
dec
and
ds
aad
xor
adc
jae
push
les
inc
cmp
arpl
pop
(bad)
jns
pusha
aam
add
push
jp
inc
aas
jno
inc
ja
in
mov
test
pop
in
punpckldq
pop
addr16
hlt
inc
mov
or
ins
pop
push
push
lea
jmp
add
mov
inc
xchg
xchg
cwde
adc
lods
mov
and
jo
inc
xchg
movs
fwait
and
mov
pusha
mov
xor
not
in
mov
(bad)
loop
fadd
mov
xor
iret
mov
ret
xor
gs
(bad)
cld
data16
out
je
and
adc
out
lahf
int3
xchg
xor
adc
add
xor
xchg
and
add
push
adc
sub
xor
add
and
push
cmps
and
sbb
xor
or
les
sub
outs
das
jne
jp
addr16
add
push
push
add
outs
imul
jno
jge
inc
test
pop
out
addr16
hlt
push
mov
jg
push
pop
dec
push
xchg
xchg
mov
mov
cld
push
scas
xchg
jne
xchg
mov
mov
mov
and
jo
inc
lods
movs
mov
mov
pusha
cmps
push
mov
fisttp
inc
cmc
adc
and
jecxz
mov
push
test
xor
cli
mov
ret
fs
xor
add
ret
data16
xchg
jecxz
mov
bnd
lahf
jmp
or
rol
in
add
and
adc
adc
or
adc
add
daa
and
add
xor
and
jp
adc
inc
push
arpl
jne
movs
imul
(bad)
pop
inc
jns
dec
add
push
dec
aad
aas
js
inc
ja
in
mov
test
add
je
pop
out
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
js
sub
dec
das
jle
sbb
aam
add
push
dec
aad
aas
jge
popa
ja
in
mov
test
minps
inc
addr16
hlt
push
mov
push
cmc
cmp
pushw
mov
push
in
gs
out
mov
adc
inc
xchg
xchg
mov
fdivr
mov
and
jo
inc
mov
and
cmps
(bad)
xor
pusha
mov
xor
rcl
inc
loope
mov
inc
loop
std
inc
rol
push
out
add
xor
cmp
(bad)
lea
iret
(bad)
fisub
out
je
and
adc
in
lahf
out
or
sar
cmp
adc
adc
pop
xchg
das
rol
pop
adc
add
pop
aaa
add
and
push
cmps
push
daa
cmp
xor
sub
push
push
pusha
les
cmp
outs
das
jge
push
inc
pop
aam
add
push
sub
inc
aas
inc
test
in
mov
test
push
in
subps
cmp
hlt
inc
mov
inc
cmc
daa
pop
imul
xchg
mov
gs
out
mov
adc
inc
xor
hlt
adc
xchg
mov
and
jo
inc
mov
popf
es
lods
xor
pusha
cmps
push
mov
fild
inc
repz
inc
jecxz
std
inc
rol
cmc
push
aad
shl
mov
ret
fdiv
xchg
add
ret
data16
shl
jecxz
movs
cmc
jmp
clc
lahf
jmp
or
shl
sub
and
adc
push
cmc
push
adc
or
es
lds
and
pop
cmps
and
cmp
aad
xor
adc
addr16
les
movs
gs
cmp
bound
inc
mov
aam
add
push
jns
inc
aas
jo
inc
ja
in
mov
test
pop
in
punpcklwd
and
hlt
inc
mov
pop
cmc
bound
push
push
lea
hlt
gs
test
add
add
jne
xchg
mov
mov
jo
inc
xchg
movs
fbld
mov
pusha
mov
xor
jecxz
loop
movs
adc
inc
out
scas
sti
inc
cli
(bad)
rcl
(bad)
xor
cmp
fs
xor
gs
(bad)
jecxz
jecxz
les
loopne
cmc
cmc
clc
jne
lahf
rcl
data16
xor
outs
add
and
adc
aaa
mov
aaa
add
and
and
add
es
xor
adc
arpl
les
nop
cmp
arpl
inc
(bad)
inc
inc
aam
add
push
jb
add
ins
div
inc
in
mov
test
gs
inc
andps
jo
jp
dec
mov
push
cmc
cs
dec
push
mov
push
movs
mov
mov
xchg
xchg
jne
xchg
lock
xchg
mov
and
jo
inc
hlt
movs
test
es
test
pusha
mov
xor
rcl
inc
fst
call
inc
loop
mov
push
test
xor
repnz
ret
fs
lds
iret
(bad)
lahf
data16
out
je
and
adc
ficomp
adc
add
jge
das
pop
jns
rol
push
adc
cs
aaa
add
and
pop
cmps
(bad)
or
adc
and
jbe
sub
jae
pusha
les
inc
movs
jns
dec
lds
pusha
(bad)
arpl
aam
add
push
pop
aad
aas
dec
div
ja
in
mov
test
push
in
cmovo
and
mov
add
das
pop
imul
lea
gs
test
push
cwde
xchg
jne
xchg
out
adc
lods
mov
and
jo
inc
mov
and
cmps
(bad)
xor
pusha
cmps
push
mov
fistp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
movs
xchg
mov
mov
lahf
and
jo
inc
sahf
movs
mov
or
mov
pusha
mov
xor
jecxz
loopne
out
test
inc
out
scas
inc
(bad)
out
push
cmc
add
xor
cwde
mov
(bad)
les
mov
ret
pop
data16
out
je
and
adc
scas
lahf
out
aaa
pop
and
add
cmp
xchg
sub
adc
cmp
movs
add
dec
lds
and
push
cmps
popa
daa
dec
mov
loopne
aad
xor
es
jae
pop
les
sub
arpl
arpl
inc
inc
push
aam
add
push
jbe
inc
aas
inc
div
inc
in
mov
test
dec
in
divps
inc
addr16
jge
arpl
es
imul
mov
test
push
xchg
xchg
sahf
xchg
jmp
div
fild
movs
lahf
and
xchg
mov
xor
not
jecxz
in
lods
and
loop
inc
(bad)
iret
push
loope
ret
xor
sar
shl
add
iret
(bad)
frstor
out
je
and
adc
movs
lahf
jmp
test
sar
pop
add
cmp
add
sete
rol
pop
adc
or
pop
lock
lds
and
add
xor
and
fs
sub
dec
push
pusha
les
xor
push
inc
dec
lds
arpl
jge
daa
aam
add
push
dec
aad
aas
dec
imul
jle
pop
mov
test
popa
in
divps
arpl
hlt
jbe
pusha
xchg
cmp
cmc
jle
push
adc
mov
xchg
xchg
jne
xchg
adc
mov
and
jo
inc
scas
movs
pushf
and
popf
cmps
shl
cmps
push
cmps
mov
xor
xchg
xlat
rol
mov
xchg
mov
jecxz
lds
(bad)
mov
xor
sar
shl
add
ret
repz
je
and
adc
in
rcl
and
add
add
and
adc
xor
cmp
dec
lds
and
sbb
or
and
ja
cmp
das
pop
adc
addr16
les
movs
gs
cmp
bound
inc
(bad)
jns
js
add
push
dec
aad
aas
jo
push
ja
in
mov
test
inc
in
punpckldq
ja
pop
hlt
inc
mov
js
gs
push
push
lea
cmc
gs
mov
push
fld
xor
lock
xchg
leave
inc
scas
movs
mov
mov
pusha
mov
xor
xchg
xlat
jecxz
rcl
lods
and
out
scas
mov
push
test
xor
(bad)
mov
icebp
fs
retf
in
gs
(bad)
aam
loopne
int3
je
and
adc
scas
lahf
int3
xchg
aaa
pop
and
add
xor
xchg
xor
add
pop
adc
sub
jbe
add
and
pop
cmps
and
loopne
aad
xor
or
les
push
lds
cmp
jg
pusha
aam
add
push
popa
aad
aas
outs
test
in
mov
test
dec
in
nop
pop
addr16
hlt
dec
mov
dec
cmc
pop
pop
push
push
mov
mov
pop
mov
adc
inc
xchg
xchg
xchg
adc
div
mov
and
and
push
cli
mov
xor
out
jecxz
into
adc
and
loop
loop
inc
loope
rol
ret
xor
xchg
shl
add
iret
pop
retw
je
and
adc
clc
lahf
out
xchg
xor
push
test
add
xchg
pop
addr16
add
gs
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
shl
(bad)
je
and
mov
pop
and
add
cmp
xchg
xor
adc
ds
aaa
movs
add
dec
lds
add
pop
loopne
aad
xor
es
addr16
arpl
pusha
nop
cmp
bound
jge
inc
inc
cs
add
push
imul
ss
in
mov
test
push
dec
divps
fs
dec
mov
dec
cmc
das
pop
pushw
mov
push
jmp
add
add
jne
xchg
mov
cmp
mov
jo
inc
mov
sahf
xchg
mov
xor
repz
loopne
loop
mov
inc
out
scas
std
inc
cli
(bad)
rcl
(bad)
xor
iret
mov
(bad)
shl
add
ret
(bad)
fsub
out
je
and
adc
in
lahf
jmp
daa
pop
and
add
xchg
pop
sete
rol
inc
adc
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
sub
arpl
les
cmp
arpl
jl
inc
inc
dec
aam
add
push
sub
add
ja
in
mov
test
gs
cmovae
inc
addr16
jo
arpl
fs
fs
mov
mov
gs
out
mov
adc
inc
xchg
xchg
xchg
adc
div
aam
lea
sahf
es
cmps
into
xor
pusha
mov
xor
rcl
inc
not
mov
mov
ret
scas
loope
rol
rcl
ret
xor
fistp
shl
add
iret
pop
data16
and
adc
lock
(bad)
xchg
and
adc
add
add
xchg
adc
add
push
adc
xor
add
push
lds
dec
daa
cmps
jge
cmp
xor
adc
jae
(bad)
les
movs
jne
inc
lds
inc
mov
push
aam
add
push
outs
aad
aas
ja
inc
ja
in
mov
test
imul
pusha
addr16
hlt
jge
pusha
xchg
aaa
jne
cmc
cmp
push
push
xchg
xchg
mov
gs
test
mov
xchg
jne
xchg
mov
div
aad
test
mov
xor
pusha
cmps
push
movs
mov
xor
jecxz
rol
mov
xchg
repz
jecxz
ret
inc
popf
(bad)
in
fld
shl
mov
lds
xchg
add
ret
mov
je
and
adc
out
lahf
xlat
xchg
xor
and
add
xor
cmp
pusha
xchg
sub
push
cmc
sbb
xor
adc
or
je
push
movs
add
cmps
bound
es
loopne
aad
xor
or
les
cmp
bound
jnp
inc
cmp
ins
add
push
xor
add
ins
test
in
mov
test
gs
in
orps
and
hlt
push
mov
push
cmc
and
dec
push
lea
movs
mov
inc
mov
inc
xor
in
adc
xchg
mov
and
jo
inc
scas
movs
mov
mov
pusha
mov
xor
repz
jecxz
repnz
and
out
scas
mov
push
test
test
jbe
idiv
fs
loopne
fucom
in
ret
pop
data16
out
je
and
adc
fistp
and
add
and
adc
add
push
adc
add
jbe
add
and
add
xor
es
xor
sub
push
push
pop
les
pusha
movs
jle
arpl
arpl
(bad)
(bad)
popa
inc
popa
aam
add
push
jb
sbb
pop
mul
inc
in
mov
test
pusha
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
sub
lds
(bad)
jp
and
dec
add
push
jp
push
aas
jle
ss
in
mov
test
push
in
cmovae
jo
inc
hlt
push
mov
dec
cmc
das
pop
pop
push
xchg
xchg
mov
gs
repz
nop
xchg
adc
inc
xor
mov
ret
xor
inc
mov
sahf
movs
cmps
ret
xor
pusha
cmps
push
mov
fbld
inc
in
test
inc
jecxz
jecxz
rol
push
jmp
push
cwde
mov
ret
fs
add
ret
mov
je
and
adc
cmps
lahf
ficom
and
jp
sub
cmp
xchg
daa
rol
push
adc
or
pop
lock
lds
and
sbb
push
daa
aas
mov
loopne
aad
xor
and
push
push
arpl
fs
sub
bound
jle
push
inc
push
aam
add
push
sub
add
dec
test
in
mov
test
pop
in
minps
fs
inc
mov
or
push
(bad)
xchg
sahf
add
push
cli
lods
test
push
add
jne
xchg
jmp
ss
mov
and
jo
inc
out
movs
mov
es
cmps
cmps
xor
pusha
mov
xor
int
loopne
(bad)
adc
inc
out
scas
cld
inc
xlat
(bad)
(bad)
push
fadd
(bad)
xor
(bad)
mov
(bad)
fidiv
xchg
add
ret
(bad)
fisub
out
je
and
adc
loop
jmp
shl
add
cmp
pop
pop
sbb
adc
or
adc
and
add
xor
es
xor
sub
jae
pop
les
xor
arpl
pusha
(bad)
js
jns
push
add
push
jb
ins
aas
pop
test
in
mov
test
jp
inc
punpcklbw
jae
jb
jbe
arpl
jp
push
push
mov
push
mul
test
push
xchg
xchg
jne
xchg
jmp
ss
mov
and
jo
inc
stos
movs
lods
and
cdq
cmps
mov
push
mov
xchg
xor
out
loopne
rcl
test
inc
loop
test
in
push
fld
ret
xor
cmp
fwait
add
iret
(bad)
loopne
mul
popf
je
and
adc
jecxz
rcl
shl
or
sbb
pop
pop
gs
and
add
adc
jg
mov
aaa
add
lds
and
and
pop
loopne
aad
xor
pop
(bad)
dec
push
(bad)
les
xor
jne
ins
lds
je
inc
inc
push
aam
add
push
dec
aad
aas
jae
ins
ja
in
mov
test
pop
out
addr16
hlt
dec
mov
pop
cmc
pop
pop
dec
push
mov
mov
gs
test
push
cdq
xchg
jne
xchg
xchg
adc
lods
mov
and
jo
inc
scas
movs
scas
and
call
push
mov
fist
inc
ficom
lods
and
jecxz
sti
inc
rol
push
test
out
push
cmp
fs
retf
add
ret
data16
and
adc
rcr
and
add
jle
dec
pop
adc
cmc
sbb
sub
movs
pop
lock
je
add
xor
cmp
aad
xor
sub
push
push
arpl
inc
nop
inc
movs
imul
(bad)
jns
and
je
inc
mov
push
push
aad
aas
not
inc
in
mov
test
dec
in
cmovno
push
addr16
ja
xchg
jg
dec
cmc
outs
pop
push
lea
cmps
xchg
cmps
push
scas
xchg
jne
xchg
out
adc
xchg
mov
and
xchg
mov
xor
(bad)
xlat
cld
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
in
adc
mov
shl
jo
inc
mov
lahf
and
stc
cmps
scas
xor
pusha
mov
xor
rcl
inc
loopne
mov
inc
loop
std
inc
rol
mov
xor
cmp
lds
lea
iret
(bad)
fisub
out
je
and
adc
scas
lahf
in
or
shr
push
add
and
and
add
pop
adc
add
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
push
(bad)
push
push
pusha
les
cmp
outs
das
jge
jp
push
aam
add
push
(bad)
aad
aas
dec
test
in
mov
test
inc
in
subps
jo
jae
inc
mov
adc
outs
pop
fs
adc
mov
push
nop
xchg
jne
xchg
call
ss
mov
and
jo
inc
out
movs
shl
movs
cmps
movs
xor
pusha
cmps
push
mov
fbld
loope
mov
inc
jecxz
cld
inc
cdq
mov
xor
xchg
ret
fs
xor
gs
mov
je
and
adc
out
lahf
jmp
push
pop
and
add
cmp
cmp
xor
adc
or
sbb
push
lds
dec
sbb
mov
loopne
aad
xor
sub
push
push
arpl
jl
aaa
movs
push
inc
inc
lds
jl
inc
inc
es
add
push
jge
pop
aas
dec
div
ja
in
mov
test
push
dec
cmovb
ja
fs
jb
xchg
jg
dec
cmc
jp
imul
mov
mul
test
push
xchg
xchg
jne
xchg
lock
xchg
rol
movs
stos
and
out
cmps
ret
pusha
mov
xor
xchg
xlat
loop
jecxz
mov
test
inc
out
scas
mov
fst
(bad)
xor
sar
lock
xchg
add
ret
(bad)
out
jecxz
out
mul
loopne
div
mov
lahf
rcl
shl
add
add
and
add
pop
adc
aaa
mov
aaa
add
and
adc
mov
loopne
aad
xor
adc
jae
push
les
nop
xor
pop
inc
xor
arpl
inc
(bad)
sbb
add
push
outs
aad
aas
jno
jno
inc
in
mov
test
gs
inc
punpckldq
cmp
mov
pop
cmc
addr16
push
push
mov
push
cmc
gs
repz
rol
jne
xchg
cwde
adc
div
leave
inc
hlt
movs
mov
or
es
pushf
xor
pusha
mov
xor
rcl
inc
ret
adc
and
loop
mov
push
in
add
xor
idiv
ret
push
mov
iret
(bad)
(bad)
out
je
and
adc
scas
lahf
rcl
pop
shr
or
xor
xchg
sub
adc
sub
pop
aaa
add
and
adc
mov
loopne
aad
xor
adc
push
push
arpl
jo
movs
pop
inc
pusha
lds
cmp
jnp
inc
aam
add
push
push
aad
aas
ins
imul
jno
gs
test
inc
in
nop
and
hlt
push
mov
adc
inc
pop
dec
push
cmps
xchg
mov
xchg
cmps
push
cmps
xchg
jne
xchg
xchg
adc
xor
inc
xchg
movs
mov
(bad)
iret
xchg
mov
pusha
cmps
push
mov
fild
inc
not
out
std
(bad)
jecxz
out
test
fist
shl
mov
ret
xlat
xor
add
ret
data16
out
je
and
adc
in
in
xchg
push
pop
and
add
and
or
addr16
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
jne
lahf
stc
xchg
adc
and
add
xchg
pop
xchg
xor
add
inc
adc
push
mov
aaa
add
and
push
cmps
xor
inc
mov
loopne
aad
xor
and
les
sub
arpl
arpl
sbb
aam
add
push
jb
sbb
inc
div
inc
in
mov
test
in
minps
cmp
hlt
dec
mov
dec
cmc
and
pop
push
mov
push
cli
gs
out
mov
adc
inc
xchg
xchg
mov
div
fild
movs
and
cmps
mov
xchg
push
stc
mov
xor
not
jecxz
sti
adc
inc
loop
inc
(bad)
xlat
push
in
ret
xor
test
shl
add
iret
(bad)
frstor
out
je
and
adc
loopne
in
xor
push
test
sar
cmp
outs
cmp
pop
pop
pop
xchg
and
add
pop
adc
or
push
lock
lds
and
push
cmps
jns
adc
aad
xor
sub
arpl
les
cmp
outs
das
jge
add
aam
add
push
pop
aad
aas
dec
div
ja
in
mov
test
jns
inc
minps
pop
addr16
hlt
jne
pusha
xchg
cmp
cmc
popw
push
xchg
xchg
mov
gs
out
mov
adc
inc
xor
adc
mov
and
jo
inc
cdq
movs
stos
and
loopne
mov
mov
cmps
push
mov
fild
inc
into
adc
inc
jecxz
out
popf
(bad)
iret
push
xlat
add
xor
fnstcw
ret
fs
xor
gs
data16
shl
jecxz
mov
xchg
jne
lahf
jmp
xor
and
add
and
rol
sbb
sbb
sbb
and
daa
cmps
jge
cs
loopne
aad
xor
pop
(bad)
addr16
les
xor
lds
inc
(bad)
push
inc
jo
push
add
push
push
aad
aas
jno
ins
ja
in
mov
test
inc
in
andps
fs
inc
mov
jl
outs
pop
push
push
lea
sti
gs
test
push
nop
xchg
jne
xchg
pushf
adc
mov
jo
inc
scas
movs
stos
and
std
cmps
mov
push
std
mov
xor
repz
loop
in
mov
mov
mov
inc
std
(bad)
mov
xor
ret
jbe
div
fs
xor
gs
(bad)
aam
mov
and
adc
scas
lahf
rcl
push
sar
xor
sbb
adc
and
rol
pop
adc
sub
movs
and
dec
lds
and
adc
mov
loopne
aad
xor
or
dec
push
push
les
movs
dec
inc
pop
lds
jbe
inc
push
aam
add
push
pop
aad
aas
ins
div
inc
in
mov
test
gs
in
orps
cmp
hlt
dec
mov
or
cmp
dec
push
mov
mov
gs
test
add
xchg
xchg
adc
inc
xchg
xchg
mov
mov
scas
ss
mov
and
jo
inc
mov
iret
fbld
(bad)
cmps
mov
push
div
mov
xlat
loopne
not
jmp
hlt
korw
scas
mov
push
jmp
ret
xor
fistp
shl
add
iret
(bad)
xchg
data16
popf
je
and
adc
mov
pop
push
test
shl
in
add
and
adc
add
pop
adc
or
adc
add
or
add
sub
xor
sub
les
pusha
movs
jp
js
outs
das
pusha
(bad)
pop
inc
push
aam
add
push
pop
aad
aas
pop
div
ja
in
mov
test
dec
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
movs
inc
inc
inc
lds
addr16
sbb
aam
add
push
jns
dec
aas
jge
push
ja
in
mov
test
divps
je
dec
hlt
push
mov
push
cmc
cmp
gs
mov
push
jmp
add
fld
xor
mov
fdivr
xchg
mov
jo
inc
in
movs
cmps
and
mov
pusha
mov
xor
repz
loopne
sti
adc
inc
out
scas
inc
(bad)
scas
push
in
add
xor
int
(bad)
jbe
idiv
fs
xor
gs
(bad)
fsub
out
je
and
adc
out
lahf
in
daa
pop
and
add
xchg
pop
pop
xchg
push
rol
inc
adc
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
and
arpl
les
cmp
arpl
jl
sbb
aam
add
push
(bad)
aad
aas
dec
mul
inc
in
mov
test
adc
inc
divps
pusha
addr16
hlt
inc
mov
adc
outs
pop
imul
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
lock
lods
mov
and
jo
inc
mov
movs
and
mov
xchg
xor
pusha
mov
xor
out
jecxz
stc
adc
inc
loop
jecxz
popf
(bad)
std
push
rol
ret
xor
fdivr
shl
add
iret
pop
out
(bad)
je
and
adc
(bad)
lahf
jmp
test
add
daa
xchg
pop
pop
xchg
pop
rol
pop
adc
or
adc
push
lds
and
add
xor
xor
sub
jae
pusha
les
xor
outs
das
popa
mov
daa
aam
add
push
pop
aad
aas
inc
div
ja
in
mov
test
adc
inc
cmovb
jb
jae
jge
pusha
xchg
jbe
or
push
mov
movs
add
push
cmc
pop
xchg
mov
inc
xor
(bad)
adc
xor
inc
scas
movs
mov
mov
mov
push
mov
fist
inc
rcl
mov
inc
jecxz
cmc
inc
rol
push
fld
shl
mov
shl
add
ret
lock
je
and
adc
loopne
xlat
xchg
or
shl
and
outs
pop
xchg
rol
push
adc
aaa
mov
aaa
xor
and
cmp
sbb
or
add
and
ja
dec
mov
pop
adc
inc
push
pusha
les
cmp
bound
jne
inc
inc
js
imul
outs
test
in
mov
test
jp
dec
orps
and
hlt
inc
mov
push
cmc
and
dec
push
mov
push
cli
gs
scas
add
fld
xor
mov
mov
jo
inc
jmp
iret
xchg
es
mov
push
sti
mov
xor
int
jecxz
xlat
adc
inc
out
scas
cmc
inc
add
(bad)
xor
cmc
mov
icebp
fnstenv
retf
add
ret
(bad)
(bad)
out
je
and
adc
rcr
and
add
jl
inc
pop
push
xchg
xor
adc
xor
adc
add
movs
cmovg
and
loopne
aad
xor
or
arpl
les
imul
bound
aam
add
push
das
aad
aas
dec
mul
inc
in
mov
test
jb
inc
cmovno
js
jae
jl
arpl
outs
pop
fs
lea
mov
add
lahf
xchg
jne
xchg
mov
cmp
ss
mov
and
jo
inc
mov
and
mov
mov
xor
nop
xlat
inc
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
adc
mov
and
jo
inc
mov
(bad)
loope
xchg
xor
pusha
cmps
push
mov
fistp
inc
in
test
inc
jecxz
jecxz
out
cmps
push
out
add
xor
mov
ret
shl
add
ret
data16
shl
adc
mov
pop
and
add
xchg
outs
xchg
and
push
cmc
push
adc
push
mov
aaa
movs
push
lock
lds
add
or
and
jns
dec
mov
pop
and
les
sub
bound
jle
inc
pop
aam
add
push
popa
aad
aas
dec
test
in
mov
test
dec
in
minps
je
jl
inc
mov
or
outs
pop
imul
xchg
sahf
add
push
sti
xchg
mov
adc
inc
xor
mov
ss
mov
and
jo
inc
mov
sahf
mov
pusha
mov
xor
int
loopne
out
mov
inc
out
scas
std
inc
add
(bad)
xor
xchg
(bad)
fs
add
ret
(bad)
frstor
out
je
and
adc
movs
lahf
jmp
shr
adc
and
adc
add
inc
adc
or
adc
push
lds
and
add
cmp
es
xor
sub
dec
push
pop
les
aaa
movs
jge
inc
lds
jle
inc
inc
pop
aam
add
push
push
pop
aas
dec
not
inc
in
mov
test
outs
in
cmovno
cmp
mov
inc
cmc
je
imul
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
lock
xor
inc
lea
and
xchg
push
cli
mov
xor
rcl
jecxz
int3
adc
inc
loop
ret
inc
ret
push
out
add
xor
aam
bnd
test
add
iret
(bad)
in
fucom
shl
out
in
hlt
jne
lahf
xlat
xchg
and
adc
add
xchg
push
xchg
and
add
push
adc
xor
ss
lds
and
adc
push
daa
ds
loopne
aad
xor
pop
(bad)
dec
push
arpl
push
nop
cmp
outs
das
je
inc
inc
pop
aam
add
push
jbe
push
aas
jb
inc
ja
in
mov
test
popa
in
pcmpgtd
pop
addr16
ja
pusha
xchg
jbe
dec
cmc
bound
push
push
xchg
xchg
mov
movs
test
push
cmps
xchg
adc
inc
xor
mov
lods
mov
and
jo
inc
scas
movs
mov
es
shl
cmps
push
mov
fisttp
fcom
test
inc
jecxz
hlt
inc
rol
push
jmp
aad
push
test
shl
add
ret
lock
je
and
adc
movs
lahf
into
xchg
push
pop
and
add
cmp
and
push
cmc
sbb
adc
jbe
xor
and
sbb
push
loopne
aad
xor
or
les
cmp
bound
jne
jg
dec
aam
add
push
jp
je
ins
not
inc
in
mov
test
in
nop
gs
push
mov
jg
push
pop
dec
push
mov
xchg
add
push
test
cdq
test
push
ret
xchg
les
lods
ss
and
cmps
inc
mov
and
mov
mov
xor
int
loopne
cmc
adc
and
out
scas
loop
repnz
repnz
leave
add
xor
(bad)
mov
(bad)
fnstenv
ret
add
ret
pop
shl
mov
loopne
mov
lahf
call
test
sar
pop
add
and
and
fs
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
(bad)
mov
and
jne
lahf
sti
xchg
push
pop
push
test
sar
push
add
cmp
es
pop
xchg
rol
pop
adc
push
mov
aaa
add
and
sbb
mov
loopne
aad
xor
sbb
les
movs
push
inc
dec
lds
jle
inc
inc
and
push
inc
mov
push
outs
aad
aas
inc
test
in
mov
test
jge
inc
cmovae
pusha
addr16
dec
mov
push
cmc
pusha
pop
gs
adc
test
mov
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
popf
es
push
mov
fild
inc
loopne
mov
inc
jecxz
cld
inc
out
fist
shl
mov
ret
lds
mov
ret
data16
out
je
and
adc
loopne
jmp
sar
cmp
cmp
xchg
adc
push
cmc
push
adc
or
add
pop
lds
dec
sbb
and
das
mov
loopne
aad
xor
sub
inc
push
arpl
jg
sub
lds
arpl
inc
inc
aam
add
push
push
aad
aas
dec
imul
inc
in
mov
test
outs
in
subps
and
hlt
jl
xchg
jle
push
push
(bad)
xchg
sahf
add
push
hlt
gs
test
push
fld
xor
mov
mov
jo
inc
out
movs
mov
es
scas
xor
pusha
mov
xor
jecxz
loopne
int
mov
mov
mov
loope
cld
(bad)
(bad)
push
rol
(bad)
xor
in
mov
(bad)
shl
xchg
add
ret
pop
data16
xchg
loopne
mov
lahf
jmp
adc
and
add
daa
xchg
pop
sbb
adc
or
cmp
push
lds
and
and
sbb
pop
mov
loopne
aad
xor
adc
push
push
push
les
movs
dec
inc
pop
lds
inc
(bad)
sbb
aam
add
push
sub
inc
aas
jo
inc
ja
in
mov
test
gs
inc
andps
pusha
addr16
hlt
inc
mov
pop
cmc
outs
pop
push
push
mov
push
sti
gs
inc
xchg
xchg
jne
xchg
mov
div
fild
movs
lahf
and
mov
cmps
xor
pusha
mov
xor
out
in
movs
adc
inc
loop
rol
cld
push
loope
ret
xor
cmp
fs
xor
gs
(bad)
aad
(bad)
test
out
cld
cmc
ret
lahf
int3
xchg
push
pop
adc
add
cmp
sub
add
push
adc
xor
and
pop
lds
cmp
xor
and
xor
pop
(bad)
jae
(bad)
les
nop
cmp
outs
das
pop
mov
outs
add
push
jb
dec
aas
ins
imul
jno
jae
sbb
inc
orps
jo
sbb
inc
mov
js
cmp
dec
push
adc
mov
add
jne
xchg
mov
lods
mov
and
jo
inc
xchg
movs
pushf
and
out
cmps
xchg
xor
pusha
cmps
push
mov
fisttp
inc
rcl
and
jecxz
mov
push
cmc
add
xor
sti
mov
shl
add
ret
in
icebp
je
and
adc
mov
pop
and
add
and
adc
push
cmc
pop
adc
or
sbb
add
push
and
push
cmps
fs
add
aad
xor
sub
ja
arpl
jo
arpl
bound
addr16
popa
inc
dec
aam
add
push
jno
add
pop
imul
inc
in
mov
test
inc
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
pop
nop
sub
dec
das
imul
inc
and
data16
push
dec
aad
aas
inc
not
inc
in
mov
test
push
inc
minps
jo
push
hlt
inc
mov
dec
cmc
and
pop
push
mov
push
in
gs
test
push
test
xchg
xchg
stos
adc
div
leave
inc
cmps
movs
mov
mov
pusha
mov
xor
not
jecxz
loop
test
inc
loop
std
inc
cdq
(bad)
fist
ret
xor
xchg
shl
add
iret
(bad)
frstor
out
je
and
adc
out
lahf
jmp
xor
push
test
sar
pop
add
cmp
es
pop
xchg
sbb
adc
add
xor
add
and
push
cmps
xor
xor
xor
sub
arpl
les
cmp
outs
das
jge
inc
inc
inc
aam
add
push
sub
div
ja
in
mov
test
imul
pusha
addr16
ja
pusha
xchg
cmp
cmc
and
xchg
mov
gs
test
push
cmps
xchg
jne
xchg
lahf
adc
lods
mov
and
jo
inc
cdq
movs
mov
(bad)
iret
pushf
es
call
mov
xor
xchg
xlat
fiadd
mov
std
korb
scas
inc
(bad)
cmps
push
(bad)
add
xor
sar
fidiv
xchg
add
ret
data16
div
jecxz
mov
aad
stc
lahf
jmp
and
and
add
and
adc
push
cmc
pop
adc
or
adc
push
lds
dec
add
xor
and
jp
dec
mov
pop
sub
addr16
arpl
inc
nop
xor
bound
addr16
push
inc
es
add
push
push
aad
aas
dec
imul
inc
in
mov
test
sbb
dec
cmova
pop
addr16
inc
mov
dec
cmc
jno
or
mov
nop
add
push
icebp
mov
mov
xchg
inc
xor
pushf
adc
xchg
mov
and
jo
inc
jmp
es
scas
xor
pusha
mov
xor
xchg
xlat
loop
mov
korw
scas
fadd
(bad)
not
(bad)
xor
test
icebp
repz
gs
(bad)
(bad)
mov
je
and
adc
cmps
lahf
rcl
adc
add
add
daa
rol
pop
adc
aaa
mov
aaa
add
and
sbb
add
es
xor
adc
jae
push
les
sub
arpl
jne
inc
inc
pop
aam
add
push
sub
sbb
jb
inc
ja
in
mov
test
dec
in
andnps
inc
addr16
hlt
dec
mov
dec
cmc
and
dec
push
(bad)
xchg
mov
gs
test
scas
out
mov
xchg
xchg
jne
xchg
mov
sar
div
fild
movs
mov
or
xchg
mov
xor
not
loopne
(bad)
adc
inc
loop
sti
inc
cdq
(bad)
movs
push
out
add
xor
cmp
fs
xor
gs
(bad)
aad
hlt
out
je
and
adc
mov
pop
adc
add
jg
inc
pop
xor
xor
add
push
adc
cs
aaa
add
and
pop
cmps
bound
or
or
and
jns
sbb
push
push
pusha
les
inc
movs
jns
lds
(bad)
(bad)
dec
inc
push
aam
add
push
je
dec
aas
dec
div
ja
in
mov
test
dec
in
cmova
dec
addr16
hlt
push
jne
cmc
addr16
push
add
push
cwde
gs
test
push
mov
out
mov
jne
xchg
mov
fwait
dec
and
jo
inc
mov
xchg
movs
cmps
ret
pusha
cmps
push
mov
fbstp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
cmps
xchg
in
adc
lea
fild
movs
mov
es
cmps
mov
push
in
enter
popf
push
jecxz
loopne
in
lods
and
out
scas
inc
(bad)
cmps
push
call
aad
push
mov
(bad)
lds
mov
ret
pop
mov
je
and
adc
mov
pop
and
add
cmp
xchg
sub
add
inc
adc
ds
aaa
add
and
sbb
mov
loopne
aad
xor
sub
arpl
les
cmp
arpl
jl
push
inc
pop
aam
add
push
xor
dec
aas
inc
mul
inc
in
mov
test
gs
in
divps
jo
jae
inc
mov
or
and
push
mov
mov
gs
test
add
test
xchg
xchg
in
adc
lods
mov
and
jo
inc
popf
movs
shl
mov
pusha
mov
xor
out
jecxz
out
lods
and
loop
inc
mov
xor
into
mov
shl
add
iret
(bad)
fsub
out
je
and
adc
in
jmp
test
add
cmp
xchg
adc
adc
or
sbb
push
lds
and
and
aas
mov
loopne
aad
xor
sub
push
push
pusha
les
movs
push
inc
inc
lds
(bad)
(bad)
push
inc
inc
aam
add
push
pop
aad
aas
jge
ss
in
mov
test
pop
in
cmovb
arpl
hlt
adc
adc
jnp
pop
push
mov
mov
gs
test
push
add
jne
xchg
hlt
adc
div
xlat
inc
test
cmps
and
mov
mov
push
mov
fbstp
inc
cmps
adc
inc
jecxz
ret
inc
rol
loopne
xlat
add
xor
fistp
lds
xchg
add
ret
mov
je
and
adc
out
rcl
pusha
shl
add
sbb
pop
pop
aas
xchg
rol
add
jg
mov
aaa
xor
and
and
add
and
xor
pop
adc
inc
push
pusha
les
sub
lds
je
inc
inc
jo
pusha
add
push
jns
inc
aas
jo
push
ja
in
mov
test
gs
dec
cvtdq2ps
and
hlt
jge
xchg
jl
pop
cmc
and
push
push
(bad)
xchg
xchg
add
push
cli
gs
test
push
nop
xchg
jne
xchg
mov
mov
jo
inc
test
xchg
xchg
mov
xor
xchg
xlat
jecxz
ficom
lods
and
out
scas
test
out
push
in
add
xor
cmp
lea
ret
(bad)
sahf
data16
out
je
and
adc
rcr
and
add
xor
add
push
xchg
sub
add
pop
adc
cs
aaa
add
and
adc
sbb
inc
mov
loopne
aad
xor
adc
dec
push
push
les
sub
lds
je
push
inc
fs
add
push
jb
add
ins
mul
inc
in
mov
test
sbb
inc
nop
dec
addr16
hlt
push
mov
je
pop
pop
push
push
(bad)
xchg
mov
gs
test
push
cwde
xchg
jne
xchg
lods
adc
lods
mov
and
jo
inc
lea
xchg
sahf
cmps
cmps
xor
pusha
mov
xor
out
jecxz
(bad)
adc
and
loop
cld
inc
fcmovnb
std
push
into
add
xor
(bad)
mov
shl
add
iret
pop
out
out
je
and
adc
sti
lahf
call
test
shr
adc
and
adc
arpl
adc
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
(bad)
data16
into
je
and
mov
pop
and
add
cmp
xchg
sub
push
cmc
push
adc
add
movs
add
and
add
or
and
jns
adc
push
push
arpl
popa
nop
cmp
bound
jge
sbb
aam
add
push
ins
aad
aas
jle
inc
ja
in
mov
test
jp
dec
divps
and
hlt
dec
mov
inc
cmc
ins
pop
pushw
(bad)
xchg
sahf
add
push
sti
lods
test
push
nop
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
movs
test
mov
mov
xchg
push
in
enter
test
inc
loope
mov
inc
out
scas
std
inc
(bad)
(bad)
fcom
(bad)
xor
test
(bad)
shl
add
ret
(bad)
fsub
out
je
and
adc
cmps
lahf
jmp
adc
and
add
xchg
xor
cmc
inc
adc
or
pop
lock
lds
and
sbb
sbb
sub
cmp
es
xor
sub
push
push
pop
les
xor
lds
jge
sbb
add
push
pop
aad
aas
dec
div
inc
in
mov
test
in
subps
jae
inc
hlt
ja
arpl
gs
imul
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
scas
adc
div
test
movs
mov
es
pusha
mov
xor
rcl
loopne
ret
and
loop
test
movs
push
in
ret
xor
pushf
mov
ret
fbstp
lds
iret
(bad)
lahf
data16
in
int3
and
adc
rcr
adc
add
jl
das
pop
push
xchg
sub
add
push
adc
xor
xor
dec
lds
dec
cmp
xor
sbb
xor
xor
adc
jae
(bad)
les
nop
xor
lds
inc
mov
aam
add
push
sub
inc
aas
ja
inc
ja
in
mov
test
imul
jae
pop
hlt
inc
mov
push
cmc
js
push
push
xchg
xchg
movs
add
push
mul
test
add
add
jne
xchg
mov
mov
mov
div
fild
movs
pushf
and
mov
xchg
xor
pusha
cmps
push
movs
mov
xor
xchg
xlat
rol
mov
inc
jecxz
test
ret
add
xor
xchg
shl
add
ret
lock
je
and
adc
mov
pop
and
add
xor
xchg
rol
sbb
sub
sub
lock
lds
movs
add
cmps
xor
add
or
and
jbe
sub
addr16
pusha
les
cmp
bound
cmp
add
aam
add
push
pop
aad
aas
ins
div
ja
in
mov
test
push
dec
cvtdq2ps
and
hlt
dec
mov
pop
cmc
and
push
push
mov
xchg
add
push
jmp
add
cmps
xchg
adc
inc
xor
jmp
ss
mov
and
jo
inc
scas
movs
stos
and
stc
cmps
xor
mov
xor
jecxz
jecxz
ret
and
out
scas
mov
push
repnz
xor
fstp
(bad)
shl
mov
clc
out
je
and
adc
in
lahf
jmp
test
shl
and
xchg
pop
add
adc
or
movs
sbb
add
sbb
add
sub
es
xor
das
(bad)
dec
push
pop
les
pop
movs
jle
jg
arpl
popa
(bad)
popa
inc
jne
push
add
push
(bad)
aad
aas
push
test
in
mov
test
push
out
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
sub
lds
(bad)
push
inc
and
imul
aad
aas
jle
ins
ja
in
mov
test
in
cmovae
cmp
hlt
dec
mov
push
cmc
cmp
pushw
adc
xchg
add
jne
xchg
lods
adc
xchg
mov
and
jo
inc
in
movs
mov
loope
mov
lea
push
mov
fbld
inc
out
mov
inc
jecxz
cld
inc
rol
rcl
shl
mov
ret
(bad)
mov
ret
data16
out
je
and
adc
movs
lahf
jmp
test
sar
adc
cmp
xchg
sbb
adc
add
add
movs
add
pop
lds
and
sbb
jns
daa
mov
loopne
aad
xor
sub
inc
push
arpl
gs
sub
lds
jle
sbb
aam
add
push
xor
dec
aas
dec
test
in
mov
test
in
minps
and
hlt
jae
xchg
jle
js
es
imul
mov
cli
xchg
mov
adc
inc
xor
xchg
adc
mov
and
(bad)
inc
out
movs
cmps
and
std
cmps
ret
pusha
mov
xor
int
loopne
stc
adc
inc
out
scas
jecxz
mov
(bad)
xor
fistp
(bad)
repz
gs
(bad)
fwait
iretw
out
je
and
adc
fistp
and
add
xor
xchg
and
adc
xor
xor
pop
lds
and
pop
cmps
xor
add
xor
adc
jae
push
les
sub
lds
aas
mov
aam
add
push
push
(bad)
jb
jno
inc
in
mov
test
gs
in
cvtdq2ps
cmp
hlt
inc
mov
or
bound
push
push
mov
push
hlt
gs
add
rol
jne
xchg
nop
adc
lods
mov
and
jo
inc
out
mov
mov
pusha
mov
xor
not
in
mov
(bad)
loop
fadd
(bad)
loopne
aad
ret
xor
sar
fs
xor
gs
(bad)
loop
fucom
ret
je
and
adc
out
xlat
xchg
and
adc
add
add
adc
add
adc
jg
mov
aaa
add
and
and
add
and
jnp
sbb
(bad)
jae
arpl
push
nop
cmp
outs
das
je
jp
push
aam
add
push
xor
(bad)
jno
push
ja
in
mov
test
inc
in
andps
jo
add
xchg
aaa
jne
cmc
das
pop
push
push
adc
xchg
add
fld
xor
mov
ss
mov
and
jo
inc
xchg
movs
scas
and
movs
cmps
xchg
xor
pusha
cmps
push
mov
fist
inc
ficom
test
inc
jecxz
cmc
inc
rol
mov
xor
pushf
mov
shl
add
ret
data16
out
je
and
adc
mov
pop
and
add
xchg
aas
xchg
xor
adc
cs
aaa
xor
and
add
or
and
jp
dec
mov
pop
sub
inc
push
arpl
jno
movs
push
inc
push
(bad)
outs
inc
dec
aam
add
push
jae
dec
aas
dec
not
inc
in
mov
test
inc
in
cmovae
jg
inc
hlt
push
xchg
jle
outs
cmc
arpl
outs
push
mov
sahf
add
push
cwde
gs
out
mov
adc
inc
xor
mov
mov
and
add
pushf
and
mov
mov
pusha
mov
xor
ret
xlat
cld
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
nop
adc
mov
leave
inc
mov
xchg
stc
cmps
scas
xor
pusha
mov
xor
rcl
inc
loope
mov
inc
loop
std
inc
rol
push
out
add
xor
cmp
lea
iret
(bad)
fisub
out
je
and
adc
scas
lahf
out
xor
push
test
sar
cmp
adc
add
pop
xchg
das
rol
pop
adc
add
movs
sbb
dec
lds
and
push
cmps
push
daa
cmp
xor
sub
arpl
les
cmp
outs
das
jge
push
inc
pop
aam
add
push
sub
inc
aas
dec
div
ja
in
mov
test
push
in
subps
cmp
hlt
inc
mov
inc
cmc
daa
pop
imul
xchg
mov
gs
out
mov
adc
inc
xor
in
adc
xchg
mov
and
jo
inc
mov
popf
es
mov
push
mov
fild
inc
loop
mov
inc
jecxz
std
inc
rol
iret
push
aad
shl
mov
ret
fdiv
xchg
add
ret
data16
shl
jecxz
movs
cmc
jmp
loope
jmp
or
shl
sub
and
adc
push
cmc
push
adc
or
sbb
push
lds
dec
add
mov
loopne
aad
xor
adc
addr16
pusha
les
cmp
bound
jne
inc
inc
ins
aam
add
push
imul
ss
in
mov
test
pop
in
(bad)
out
addr16
hlt
inc
mov
jl
outs
pop
push
push
mov
xchg
add
push
sti
gs
test
add
add
jne
xchg
nop
adc
mov
jo
inc
jmp
mov
pusha
mov
xor
repz
jecxz
rcl
mov
inc
out
scas
ret
(bad)
movs
push
rol
(bad)
xor
fnstsw
lock
xor
ret
(bad)
jecxz
repz
je
and
adc
in
rcl
sub
add
sbb
pop
pop
cmp
adc
xor
dec
lock
lds
and
and
cmp
es
xor
pop
(bad)
arpl
les
xor
pop
inc
inc
lds
inc
(bad)
sbb
add
push
xor
inc
aas
jno
jno
inc
in
mov
test
adc
inc
(bad)
out
addr16
hlt
inc
mov
inc
cmc
fs
push
push
lea
sti
gs
inc
xchg
xchg
jne
xchg
mov
xor
inc
mov
iret
xchg
es
mov
test
push
div
xchg
push
not
loopne
ficom
mov
inc
loop
test
mov
xor
cmp
push
mov
iret
(bad)
pushf
data16
(bad)
je
and
adc
mov
pop
adc
add
jle
inc
pop
xor
sub
add
push
adc
sub
and
add
lds
and
adc
and
es
loopne
aad
xor
or
les
sub
lds
jne
add
aam
add
push
sub
add
jae
inc
ja
in
mov
test
adc
inc
cvtdq2ps
jo
pop
hlt
push
mov
jge
jl
jns
mov
mov
gs
test
push
lds
xor
stos
adc
lods
mov
and
jo
inc
mov
and
cmps
sahf
xor
pusha
cmps
push
mov
fild
inc
clc
adc
and
jecxz
inc
(bad)
scas
push
into
add
xor
fidivr
ret
fnstenv
rol
(bad)
fsub
out
je
and
adc
std
lahf
out
xchg
xor
and
add
and
add
bound
adc
sub
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
jne
lahf
icebp
xchg
aaa
pop
and
add
xchg
sbb
adc
cmp
movs
add
dec
lds
and
push
cmps
and
dec
mov
loopne
aad
xor
es
arpl
les
sub
arpl
arpl
inc
inc
push
aam
add
push
jbe
inc
aas
inc
mul
inc
in
mov
test
dec
in
divps
inc
addr16
jge
arpl
es
imul
mov
test
push
xchg
xchg
sahf
xchg
jmp
lods
mov
and
jo
inc
mov
lahf
and
xchg
mov
xor
not
jecxz
in
lods
and
loop
inc
(bad)
iret
push
loope
ret
xor
sar
shl
add
iret
(bad)
frstor
out
je
and
adc
movs
lahf
jmp
test
sar
pop
add
cmp
add
sete
rol
pop
adc
or
pop
lock
lds
and
add
xor
and
fs
sub
dec
push
pusha
les
movs
push
inc
dec
lds
jl
add
aam
add
push
dec
aad
aas
dec
div
ja
in
mov
test
popa
in
divps
cmp
mov
js
arpl
pop
push
cmps
xchg
mov
gs
add
nop
xchg
adc
inc
xor
hlt
adc
lods
mov
and
jo
inc
scas
movs
fbld
call
push
movs
mov
xor
jecxz
rol
mov
inc
jecxz
test
hlt
push
out
shl
mov
lds
lea
ret
data16
out
je
and
adc
in
rcl
jg
je
syscall
push
test
outs
add
adc
push
cmc
add
jg
mov
aaa
xor
and
and
mov
loopne
aad
xor
adc
push
push
les
inc
inc
lds
inc
(bad)
push
inc
and
push
add
push
jno
pop
aas
jb
push
ja
in
mov
test
push
dec
punpckldq
pop
addr16
hlt
jae
xchg
gs
cmc
jge
push
push
mov
push
hlt
mov
push
fld
xor
mov
ss
mov
and
jo
inc
xchg
movs
stos
and
cdq
cmps
xor
mov
xor
int
loop
mov
korw
scas
fadd
(bad)
not
(bad)
xor
lds
lock
call
out
je
and
adc
out
lahf
rcl
adc
imul
and
xchg
pop
sbb
adc
aaa
mov
aaa
add
and
push
cmps
popa
daa
inc
mov
loopne
aad
xor
or
dec
push
push
les
sub
lds
aas
(bad)
sbb
aam
add
push
jle
add
ins
div
inc
in
mov
test
gs
in
nop
dec
addr16
hlt
dec
mov
pop
cmc
and
xchg
mov
mov
mov
adc
inc
xchg
xchg
xchg
adc
div
leave
inc
mov
iret
xchg
es
cmps
xor
mov
xor
rcl
loopne
movs
adc
and
loop
loop
out
(bad)
scas
push
rol
ret
xor
cmp
fs
xor
add
iret
pop
retw
je
and
adc
cmps
lahf
out
xchg
and
push
test
shl
in
add
xchg
xchg
xadd
cmc
pop
adc
or
sbb
add
sbb
add
das
loopne
aad
xor
sub
les
movs
push
inc
js
outs
das
pusha
(bad)
jne
jb
dec
add
push
dec
aad
aas
push
not
jle
jno
or
push
addr16
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
cmp
push
das
fs
sbb
aam
add
push
push
aad
aas
pop
not
inc
in
mov
test
outs
in
divps
fs
dec
mov
dec
cmc
cs
gs
(bad)
xchg
sahf
add
push
jmp
add
add
jne
xchg
mov
cmp
ss
mov
and
jo
inc
mov
popf
es
cmps
mov
push
in
xor
loop
mov
inc
out
scas
std
inc
cli
(bad)
rcl
(bad)
xor
iret
mov
(bad)
shl
add
ret
(bad)
fsub
out
je
and
adc
in
lahf
jmp
daa
pop
and
add
xchg
pop
adc
adc
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
sub
arpl
les
cmp
arpl
jl
inc
inc
inc
aam
add
push
sub
add
ja
in
mov
test
gs
in
cmovae
inc
addr16
jo
arpl
ins
pop
fs
mov
mov
gs
out
mov
adc
inc
xchg
xchg
xchg
adc
div
aam
lea
sahf
es
cmps
ret
pusha
mov
xor
rcl
inc
(bad)
adc
loop
mov
out
call
ret
xor
cwde
mov
ret
div
call
(bad)
aam
mov
and
adc
cmps
lahf
rcl
sub
add
add
pop
rol
adc
jg
mov
aaa
add
lds
and
and
sbb
xor
adc
push
push
(bad)
les
xor
or
lds
inc
mov
outs
aam
add
push
jp
pop
aas
ja
ss
in
mov
test
popa
in
packsswb
jae
add
xchg
jne
js
arpl
push
push
adc
add
xchg
jne
xchg
adc
mov
and
jo
inc
test
mov
xor
pusha
cmps
push
movs
mov
xor
xchg
xlat
rol
mov
retf
(bad)
jecxz
fadd
(bad)
mov
xor
les
lds
xchg
add
ret
mov
je
and
adc
loop
rcl
jg
je
and
outs
add
adc
push
cmc
add
jg
mov
aaa
xor
and
and
add
and
ja
sub
pop
adc
ja
pusha
les
sub
lds
je
inc
pop
aam
add
push
push
aad
aas
ja
ss
in
mov
test
dec
in
andnps
and
hlt
inc
mov
or
push
mov
push
jmp
add
fld
xor
scas
adc
mov
jo
inc
jmp
iret
frstor
mov
xor
mov
xor
xchg
xlat
jecxz
(bad)
adc
and
out
scas
sti
inc
(bad)
(bad)
fst
(bad)
xor
sar
repz
gs
(bad)
(bad)
lock
je
and
adc
mov
pop
and
add
jp
cmp
add
cmc
push
adc
add
add
add
and
add
aaa
loopne
aad
xor
sub
push
push
pop
les
popa
movs
push
inc
outs
lds
jle
pop
inc
jno
dec
add
push
dec
aad
aas
dec
not
inc
in
mov
test
inc
in
subps
push
addr16
outs
mov
jne
jp
ins
push
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
stos
adc
xor
inc
test
xchg
and
mov
pusha
mov
xor
(bad)
xlat
inc
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
sar
mov
int
movs
movs
shl
movs
cmps
mov
push
mov
fbld
inc
in
test
inc
jecxz
jecxz
cdq
(bad)
scas
push
jmp
push
cwde
mov
ret
fs
add
ret
mov
je
and
adc
cmps
lahf
ficom
and
jp
cmp
cmp
xchg
daa
rol
push
adc
or
pop
lock
lds
dec
sbb
push
daa
aas
mov
loopne
aad
xor
and
push
push
arpl
fs
sub
bound
jle
push
inc
push
aam
add
push
sub
add
dec
test
in
mov
test
adc
dec
minps
fs
inc
mov
or
push
(bad)
xchg
sahf
add
push
cli
lods
test
add
add
jne
xchg
jmp
ss
mov
and
jo
inc
out
movs
scas
and
stc
cmps
cmps
xor
pusha
mov
xor
int
loopne
(bad)
adc
inc
out
scas
cld
inc
std
(bad)
(bad)
push
aad
(bad)
xor
(bad)
mov
(bad)
fnsave
xchg
add
ret
(bad)
frstor
out
je
and
adc
loop
jmp
shl
adc
cmp
pop
pop
sbb
adc
cmp
adc
or
cs
adc
mov
loopne
aad
xor
adc
push
push
push
les
nop
xor
lds
inc
(bad)
push
inc
js
push
add
push
jp
inc
aas
jo
jno
inc
in
mov
test
outs
in
punpcklwd
pop
addr16
hlt
ja
arpl
js
push
push
(bad)
xchg
mov
gs
mov
xchg
xchg
adc
inc
xchg
xchg
pushf
adc
lods
mov
and
jo
inc
mov
iret
movs
es
mov
push
mov
mov
push
rcl
inc
cmps
adc
inc
loop
rol
in
push
rol
ret
xor
(bad)
mov
ret
xor
gs
(bad)
loopne
out
std
je
and
adc
jecxz
xlat
xchg
push
pop
adc
add
add
push
rol
push
adc
aaa
mov
aaa
add
lds
and
xor
pop
mov
loopne
aad
xor
adc
push
push
(bad)
les
xor
lds
inc
mov
arpl
push
add
push
sub
not
jo
or
gs
in
punpckldq
jae
pop
hlt
jo
pusha
xchg
jne
push
cmc
js
push
push
xchg
xchg
movs
add
push
in
pop
add
xchg
jne
xchg
mov
xor
inc
xchg
movs
fbld
call
push
mov
fist
inc
(bad)
adc
inc
jecxz
hlt
inc
rol
push
in
shl
mov
shl
add
ret
data16
xor
shl
lahf
into
xchg
and
and
add
jl
adc
aas
xchg
sub
push
cmc
sbb
sub
add
xor
and
and
or
and
ja
sub
cs
adc
ja
pusha
les
sub
bound
jnp
inc
inc
ins
aam
add
push
je
(bad)
data16
in
mov
test
gs
in
cmovno
push
addr16
hlt
ja
xchg
jg
dec
cmc
ins
pop
push
lea
cmps
gs
test
push
mov
inc
xor
mov
(bad)
dec
and
jo
inc
out
movs
mov
and
test
push
jecxz
loopne
repz
and
out
scas
cld
inc
ffreep
les
(bad)
xor
fidivr
(bad)
fnstenv
mov
(bad)
xchg
mov
je
and
adc
stc
lahf
out
xchg
daa
pop
and
add
xchg
pop
cs
jge
fs
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
and
mov
xchg
scas
lahf
repz
or
shr
dec
add
cmp
add
pop
xchg
and
add
pop
adc
push
mov
aaa
add
and
sbb
mov
loopne
aad
xor
push
(bad)
push
push
pusha
les
cmp
outs
das
jge
jp
push
aam
add
push
(bad)
aad
aas
dec
test
in
mov
test
inc
in
subps
jo
jae
inc
mov
or
push
adc
movs
add
nop
xchg
jne
xchg
call
ss
mov
and
jo
inc
out
movs
fbld
movs
cmps
mov
push
mov
fbld
loope
mov
inc
jecxz
cld
inc
cdq
mov
xor
xchg
ret
fs
xor
gs
mov
je
and
adc
out
lahf
jmp
push
pop
and
add
cmp
cmp
xor
adc
or
sbb
push
lds
dec
sbb
mov
loopne
aad
xor
sub
push
push
arpl
jae
aaa
movs
jns
inc
lds
jl
push
inc
popa
aam
add
push
jns
pop
aas
dec
div
ja
in
mov
test
push
dec
cmovb
and
hlt
inc
mov
or
outs
pop
push
push
mov
push
cmc
gs
repnz
xchg
xchg
xchg
xchg
mov
mov
jo
inc
test
mov
xor
pusha
mov
xor
xchg
xlat
loop
in
adc
inc
out
scas
ret
(bad)
movs
push
rol
(bad)
xor
ret
jbe
div
fs
xchg
add
ret
(bad)
jecxz
jecxz
xor
fidiv
lahf
rcl
and
add
add
adc
add
pop
adc
xor
inc
lock
lds
movs
cmovg
cmps
aaa
daa
pop
mov
loopne
aad
xor
pop
(bad)
push
push
push
les
aaa
movs
push
inc
pop
lds
pop
(bad)
jns
and
push
add
push
sub
not
inc
in
mov
test
jle
inc
punpcklbw
pop
addr16
jb
arpl
popw
push
push
(bad)
xchg
mov
pop
add
xchg
adc
inc
xchg
xchg
pushf
adc
lods
mov
and
jo
inc
xchg
movs
mov
mov
pusha
mov
xor
not
in
mov
(bad)
loop
fadd
(bad)
loopne
aad
ret
xor
les
ret
xor
gs
(bad)
cld
data16
xlat
je
and
adc
movs
lahf
rcl
adc
jp
xor
xor
xchg
sbb
adc
xor
xor
dec
lds
dec
push
cmps
and
inc
mov
loopne
aad
xor
push
(bad)
dec
push
arpl
pop
nop
sub
lds
jbe
push
inc
arpl
ins
add
push
jle
add
ins
not
jno
arpl
jns
inc
cvtdq2ps
cmp
hlt
dec
mov
adc
and
xchg
movs
add
push
in
gs
test
push
cmps
xchg
jne
xchg
adc
mov
and
jo
inc
cmps
movs
cwde
and
mov
pusha
cmps
push
mov
fild
inc
not
out
mov
out
test
rcl
shl
mov
ret
xlat
xor
add
ret
data16
out
je
and
adc
loope
in
xchg
and
and
add
and
or
push
cmc
push
adc
movzx
lock
push
and
sbb
mov
loopne
aad
xor
dec
(bad)
ja
pusha
les
nop
xor
lds
addr16
jno
inc
aam
add
push
popa
aad
aas
push
div
ja
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
ja
sub
inc
imul
sbb
aam
add
push
jle
(bad)
div
inc
in
mov
test
minps
cmp
hlt
dec
mov
dec
cmc
and
pop
push
mov
push
in
gs
test
scas
out
mov
adc
inc
xchg
xchg
scas
adc
div
fild
movs
(bad)
and
mov
mov
xchg
push
stc
mov
xor
not
jecxz
sti
adc
inc
loop
inc
(bad)
xlat
push
in
ret
xor
test
shl
add
iret
(bad)
frstor
out
je
and
adc
loopne
in
xor
push
test
sar
cmp
outs
cmp
pop
pop
pop
xchg
and
add
pop
adc
or
add
and
push
cmps
jns
adc
aad
xor
sub
arpl
les
cmp
outs
das
jge
add
aam
add
push
pop
aad
aas
dec
div
ja
in
mov
test
jns
inc
minps
pop
addr16
hlt
jl
pusha
xchg
cmp
cmc
addr16
push
xchg
xchg
mov
gs
test
push
mov
inc
xor
adc
mov
and
jo
inc
out
movs
stos
and
loopne
mov
mov
cmps
push
mov
fild
inc
into
adc
inc
jecxz
mov
push
in
shl
mov
lds
xchg
add
ret
repz
je
and
adc
cld
lahf
rcl
shl
xor
outs
add
adc
push
cmc
push
adc
xor
movs
and
and
and
mov
loopne
aad
xor
adc
push
push
les
xor
gs
inc
lds
inc
(bad)
jns
pop
aam
add
push
jne
pop
aas
jb
push
ja
in
mov
test
outs
in
packuswb
pop
addr16
ja
xchg
data16
cmc
jg
push
push
mov
nop
add
push
mul
test
push
fld
xor
jmp
mov
jo
inc
xchg
movs
mov
es
lds
pusha
mov
xor
jecxz
loop
cmps
adc
inc
out
scas
rol
mov
xor
ret
mov
lock
xchg
add
ret
(bad)
jecxz
mov
and
adc
jecxz
rcl
shl
and
outs
add
pop
rol
pop
adc
xor
pop
lock
lds
and
and
xor
es
xor
adc
push
push
push
les
nop
cmp
arpl
jbe
inc
inc
dec
aam
add
push
dec
aad
aas
jno
push
ja
in
mov
test
pop
in
cvtdq2ps
pusha
addr16
inc
mov
jae
es
push
push
(bad)
xchg
mov
gs
mov
push
test
xchg
xchg
mov
div
leave
inc
nop
movs
mov
or
es
test
pusha
mov
xor
out
in
lods
adc
inc
loop
fadd
mov
xor
iret
mov
ret
div
xchg
add
iret
pop
je
and
adc
mov
pop
push
test
shl
and
xchg
pop
bound
adc
or
adc
pop
lds
and
add
cmp
and
fs
sub
les
arpl
outs
das
arpl
gs
daa
aam
add
push
dec
aad
aas
dec
not
jle
pop
mov
test
pop
in
minps
and
addr16
ins
mov
jp
jnp
push
add
push
and
out
hlt
push
lods
xchg
jne
xchg
mov
lods
mov
and
jo
inc
out
movs
fbld
movs
cmps
fnstenv
pusha
cmps
push
mov
fild
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
les
inc
lods
movs
mov
es
cmps
xchg
pusha
mov
xor
repz
loopne
sti
adc
inc
out
scas
inc
(bad)
scas
push
in
add
xor
int
(bad)
jbe
idiv
fs
xor
gs
(bad)
fsub
out
je
and
adc
out
lahf
in
daa
pop
and
add
xchg
pop
sbb
adc
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
and
arpl
les
cmp
arpl
jl
sbb
aam
add
push
(bad)
aad
aas
dec
mul
inc
in
mov
test
pop
in
divps
pusha
addr16
hlt
inc
mov
adc
outs
pop
imul
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
lock
lods
mov
and
jo
inc
mov
movs
and
mov
xchg
xor
pusha
mov
xor
out
jecxz
clc
adc
inc
loop
jecxz
ret
(bad)
icebp
push
rol
ret
xor
fdivr
shl
add
iret
pop
mul
(bad)
je
and
adc
std
lahf
jmp
test
shl
pop
add
daa
xchg
pop
sbb
adc
or
aaa
lock
lds
and
cmp
xor
add
xor
adc
arpl
les
xor
lds
inc
(bad)
push
inc
push
aam
add
push
jbe
pop
aas
jo
inc
ja
in
mov
test
in
pcmpgtb
pop
addr16
imul
cmc
inc
pop
push
push
mov
movs
add
push
hlt
gs
call
xchg
jne
xchg
test
xor
inc
xchg
movs
mov
(bad)
iret
mov
xor
pusha
cmps
push
movs
mov
xor
jecxz
rol
mov
xchg
fld
scas
mov
add
xor
fnstcw
lds
xchg
add
ret
repz
je
and
adc
std
lahf
rcl
and
ja
and
outs
add
adc
adc
aaa
mov
aaa
xor
and
cmp
sbb
pop
mov
loopne
aad
xor
adc
push
push
les
nop
aaa
movs
or
lds
inc
mov
aam
add
push
push
aad
aas
jno
ss
in
mov
test
push
dec
punpckldq
pop
addr16
hlt
jae
xchg
gs
cmc
addr16
push
push
mov
nop
add
push
cmc
mov
add
xchg
jne
xchg
mov
(bad)
push
and
jo
inc
jmp
es
cmps
nop
xor
pusha
mov
xor
repz
jecxz
fcom
mov
inc
out
scas
hlt
inc
(bad)
(bad)
fst
(bad)
xor
into
mov
icebp
fs
xor
gs
(bad)
aam
(bad)
out
je
and
adc
scas
lahf
rcl
sbb
jp
push
add
add
and
adc
aaa
mov
aaa
add
and
pop
cmps
sbb
es
loopne
aad
xor
push
(bad)
jae
pop
les
movs
jge
pop
lds
pusha
mov
inc
mov
push
and
push
aas
dec
mul
inc
in
mov
test
jb
inc
cmovno
js
ja
jl
arpl
pusha
pop
fs
lea
cmps
gs
test
pop
xchg
xchg
adc
mov
and
jo
inc
mov
iret
popf
es
pusha
mov
xor
rcl
inc
stc
adc
and
loop
jecxz
fcmovnb
xlat
push
int
ret
xor
iret
mov
ret
les
into
add
iret
pop
cmps
out
je
and
adc
sti
lahf
out
xchg
push
pop
adc
add
xchg
pop
jge
push
shl
adc
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
xchg
data16
test
test
mov
pop
and
add
cmp
cmp
sbb
adc
push
mov
aaa
movs
push
lock
lds
add
or
and
jns
push
mov
pop
and
les
sub
bound
jle
inc
pop
aam
add
push
popa
aad
aas
dec
test
in
mov
test
pop
in
minps
je
jl
inc
mov
or
outs
pop
imul
xchg
sahf
add
push
in
gs
test
push
add
jne
xchg
mov
ss
mov
and
jo
inc
mov
sahf
mov
pusha
mov
xor
int
loopne
loopne
mov
inc
out
scas
std
inc
add
(bad)
xor
test
(bad)
fs
add
ret
(bad)
fsub
out
je
and
adc
movs
lahf
jmp
shr
adc
and
adc
add
inc
adc
or
sbb
push
lds
pop
movs
cmovg
cmps
sbb
loopne
aad
xor
sub
dec
push
pop
les
aaa
movs
jge
inc
lds
jle
inc
inc
push
aam
add
push
push
pop
aas
dec
mul
inc
in
mov
test
outs
in
cmovno
arpl
hlt
jbe
arpl
jge
imul
xchg
mov
mov
add
xchg
jne
xchg
mov
popf
push
and
jo
inc
stos
movs
mov
es
cmps
mov
mov
mov
xor
out
in
lds
mov
mov
mov
inc
pop
in
fadd
ret
xor
lds
ret
xor
gs
(bad)
loope
out
cmc
je
and
adc
(bad)
lahf
rcl
and
ja
or
pop
xchg
pop
xor
adc
aaa
mov
aaa
add
lds
dec
and
xor
and
jge
xor
dec
push
(bad)
les
aaa
movs
gs
pop
lds
inc
mov
aam
add
push
jle
pop
aas
jo
inc
ja
in
mov
test
jns
inc
(bad)
out
addr16
jl
pusha
xchg
jne
push
push
cmps
xchg
movs
add
push
mul
test
push
xchg
xchg
adc
inc
xor
(bad)
adc
lods
mov
and
jo
inc
scas
movs
stos
and
cmps
cmps
shl
cmps
push
movs
mov
xor
int
rol
mov
icebp
(bad)
jecxz
ret
(bad)
loopne
(bad)
add
xor
(bad)
mov
lds
xchg
add
ret
mov
je
and
adc
in
lahf
rcl
arpl
jnp
syscall
cmp
das
outs
cmp
push
rol
sbb
or
add
mov
aaa
xor
and
adc
mov
loopne
aad
xor
adc
ja
pusha
les
cmp
bound
jbe
inc
cmp
push
inc
mov
push
push
aad
aas
ja
push
ja
in
mov
test
gs
in
(bad)
out
addr16
je
xchg
jns
ins
cmc
js
jnp
mov
push
and
test
xchg
xchg
jne
xchg
lods
adc
xchg
mov
and
jo
inc
mov
and
cmps
xor
mov
xor
xchg
xlat
loopne
into
adc
and
out
scas
loop
repnz
xor
lds
(bad)
fnstenv
rol
(bad)
fisub
out
je
and
adc
lock
call
test
shl
in
add
and
or
add
inc
adc
or
movs
and
xor
or
push
cmps
and
xor
xor
or
les
popa
movs
inc
inc
lds
imul
inc
inc
aam
add
push
pop
aad
aas
mul
inc
in
mov
test
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
outs
les
nop
sub
lds
(bad)
push
inc
cmp
dec
add
push
inc
aad
aas
ins
not
jle
pop
mov
test
popa
in
cmovae
pusha
addr16
hlt
dec
mov
push
cmc
pusha
pop
gs
adc
xchg
add
cmps
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
popf
es
push
mov
fild
inc
loopne
mov
inc
jecxz
loope
add
push
mov
in
push
aam
out
jbe
test
add
ret
data16
loope
xchg
and
adc
rcr
and
add
and
push
rol
pop
adc
push
mov
aaa
movs
adc
and
pop
cmps
jns
aas
mov
loopne
aad
xor
sbb
ja
arpl
jbe
cmp
bound
data16
inc
pop
aam
add
push
jns
add
push
test
in
mov
test
outs
in
nop
pop
addr16
ja
xchg
jns
pop
cmc
pop
pop
pop
push
(bad)
xchg
sahf
add
push
cmc
xchg
mov
adc
inc
xor
mov
mov
jo
inc
out
movs
mov
es
mov
mov
mov
xor
jecxz
loopne
int
mov
rol
mov
loope
cld
(bad)
(bad)
push
rol
(bad)
xor
in
mov
lock
xchg
add
ret
(bad)
cld
mov
je
and
adc
sti
lahf
xlat
xchg
add
and
in
add
or
xadd
cmc
pop
adc
xor
jbe
add
and
and
mov
loopne
aad
xor
adc
dec
push
push
les
nop
aaa
movs
pop
inc
pop
lds
inc
(bad)
sbb
add
push
push
aad
aas
ja
jno
inc
in
mov
test
gs
inc
packuswb
jae
jb
jb
arpl
jp
push
push
mov
push
lock
test
ret
xchg
jne
xchg
nop
adc
div
(bad)
inc
mov
iret
movs
mov
pusha
mov
xor
out
in
out
mov
cmc
(bad)
loop
ret
mov
xor
fdivr
ret
xor
gs
(bad)
loope
mul
popf
je
and
adc
jecxz
xlat
xchg
push
pop
adc
add
add
push
rol
adc
jg
mov
aaa
add
lds
dec
cmp
jge
sbb
xor
adc
arpl
les
nop
xor
gs
inc
lds
pop
mov
aam
add
push
jbe
push
aas
jb
ins
ja
in
mov
test
sbb
inc
orps
cmp
hlt
inc
mov
pop
cmc
ins
pop
push
push
xchg
xchg
mov
gs
add
cmps
xchg
jne
xchg
in
adc
xor
inc
scas
movs
mov
movs
cmps
mov
mov
mov
xor
repz
fiadd
(bad)
and
jecxz
loope
test
shl
mov
ret
fs
xor
add
ret
data16
out
je
and
adc
mov
pop
and
add
and
adc
push
cmc
pop
adc
or
sub
and
push
cmps
cmp
sbb
aad
xor
sub
ja
arpl
jae
pop
movs
push
inc
pusha
lds
arpl
add
pop
aam
add
push
push
aad
aas
dec
div
ja
in
mov
test
inc
in
cmovno
inc
addr16
hlt
mov
ja
inc
pop
dec
push
mov
push
test
add
add
jne
xchg
mov
xchg
(bad)
inc
lock
test
mov
les
pusha
mov
xor
(bad)
xlat
cld
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
ss
shl
jo
inc
jmp
es
cmps
mov
push
cli
mov
xor
out
jecxz
loop
test
inc
loop
std
inc
cdq
(bad)
fist
ret
xor
xchg
shl
add
iret
(bad)
frstor
out
je
and
adc
out
lahf
jmp
xor
push
test
sar
pop
add
cmp
es
pop
xchg
push
rol
pop
adc
adc
or
and
pop
cmps
cmp
sbb
xor
adc
dec
push
arpl
pusha
nop
imul
das
xor
aam
add
push
pop
aad
aas
ins
test
in
mov
test
pop
in
sysret
out
addr16
dec
mov
adc
pop
pop
dec
push
mov
mov
mov
cmc
push
xchg
xor
mov
xchg
mov
and
jo
inc
xchg
movs
cmps
and
mov
les
pusha
cmps
push
mov
fist
inc
stc
adc
and
jecxz
mov
push
jmp
aad
push
icebp
mov
ret
fs
xchg
add
ret
mov
je
and
adc
stc
lahf
jmp
and
and
add
and
adc
push
cmc
pop
adc
or
pop
lock
lds
dec
add
xor
and
jbe
adc
inc
push
les
xor
jne
inc
lds
inc
(bad)
jns
ins
aam
add
push
jge
push
aas
jnp
inc
ja
in
mov
test
pop
in
punpckhdq
and
hlt
outs
mov
js
jnp
push
push
lea
mul
test
push
mov
inc
xor
jmp
mov
jo
inc
jmp
mov
pusha
mov
xor
jecxz
loop
std
adc
inc
out
scas
mov
repz
rol
(bad)
xor
(bad)
mov
lock
xchg
add
ret
(bad)
out
jecxz
aam
repnz
adc
std
lahf
xlat
xchg
aaa
pop
and
in
add
pop
xchg
push
xchg
adc
add
pop
adc
xor
push
lock
lds
and
and
xor
xor
adc
arpl
les
nop
aaa
movs
jno
pop
lds
pop
(bad)
jns
cmp
push
add
push
jp
inc
aas
jo
jno
inc
in
mov
test
gs
in
punpcklwd
arpl
hlt
ja
arpl
addr16
push
push
(bad)
xchg
mov
gs
mov
rol
jne
xchg
jmp
ss
mov
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
rcl
inc
xlat
adc
inc
loop
hlt
inc
rol
ficom
ret
xor
test
ret
div
call
(bad)
(bad)
mov
and
adc
(bad)
lahf
retf
xchg
or
rol
and
xchg
pop
pop
xchg
adc
adc
or
and
lds
and
add
xor
and
jbe
dec
mov
pop
and
arpl
les
movs
jns
push
(bad)
jb
das
aam
add
push
push
imul
jle
outs
mov
test
dec
in
cmova
dec
outs
hlt
push
jne
cmc
js
push
add
push
fwait
gs
test
push
mov
inc
xor
mov
div
mov
and
mov
pusha
cmps
push
mov
fistp
inc
lods
adc
and
jecxz
mov
push
mov
shl
mov
ret
fs
add
ret
data16
out
je
and
adc
fcomp
and
add
je
add
jns
pop
shl
adc
sub
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
jne
lahf
lea
or
add
sub
das
rol
inc
adc
ds
aaa
add
and
sbb
mov
loopne
aad
xor
sub
arpl
les
cmp
arpl
jl
push
inc
pop
aam
add
push
xor
dec
aas
inc
mul
inc
in
mov
test
pop
in
nop
dec
addr16
hlt
push
mov
pop
cmc
pop
pop
push
push
(bad)
xchg
mov
gs
test
add
into
xchg
jne
xchg
hlt
adc
div
mov
movs
lahf
and
lahf
cmps
cwde
xor
pusha
mov
xor
out
loopne
in
in
mov
mov
inc
add
push
repnz
xor
(bad)
mov
ret
fnstenv
enter
loop
iret
(bad)
pushf
data16
(bad)
out
sti
cmc
xchg
jne
lahf
rcl
xor
and
test
outs
jle
inc
pop
xor
adc
xor
and
and
pop
cmps
cmp
xor
xor
adc
dec
push
pusha
les
cmp
outs
das
(bad)
(bad)
push
inc
inc
aam
add
push
push
pop
aas
dec
not
jle
push
mov
test
ins
in
cmovo
jb
push
hlt
jo
pusha
xchg
cmp
cmc
jbe
push
cmps
xchg
mov
gs
test
push
add
jne
xchg
call
lods
mov
and
jo
inc
jmp
cmps
cmps
mov
lods
pusha
cmps
push
cmps
mov
xor
repz
rol
mov
fcmovnb
fld
scas
fadd
(bad)
ficom
shl
mov
lds
xchg
add
ret
data16
bnd
and
adc
call
and
add
push
xchg
aas
xchg
or
push
cmc
push
adc
xor
push
lock
lds
and
cmps
xor
and
xor
push
(bad)
addr16
les
xor
bound
inc
(bad)
jns
dec
aam
add
push
xor
pop
aas
jb
ins
ja
in
mov
test
inc
in
punpcklbw
addr16
jbe
xchg
data16
cmc
jg
push
push
mov
nop
add
push
mul
test
push
xchg
xchg
jne
xchg
mov
xchg
aam
test
mov
xor
pusha
mov
xor
int
loop
jecxz
mov
iret
(bad)
out
scas
ret
(bad)
movs
push
rol
(bad)
xor
sar
fs
xor
gs
(bad)
loop
mov
and
adc
out
rcl
jnp
jbe
and
outs
add
and
add
pop
adc
xor
xor
pop
lds
dec
pop
cmps
sbb
loopne
aad
xor
xor
arpl
les
inc
movs
jl
push
lds
(bad)
(bad)
addr16
popa
aam
add
push
pop
aad
aas
dec
div
inc
in
mov
test
in
cmova
inc
outs
hlt
jno
arpl
push
pop
fs
mov
mov
gs
out
mov
adc
inc
xchg
xchg
lods
adc
lods
mov
and
jo
inc
popf
movs
mov
or
es
mov
push
cli
mov
xor
rcl
jecxz
not
in
aam
in
inc
loop
cld
inc
fcmovnb
icebp
push
int
ret
xor
fdivr
shl
add
iret
(bad)
fsub
out
je
and
adc
stc
lahf
out
xchg
push
pop
push
test
shl
in
add
je
pop
pop
adc
adc
das
mov
aaa
add
and
pop
cmps
pop
daa
or
adc
and
jbe
sbb
push
push
arpl
daa
nop
imul
das
cmp
push
inc
pop
aam
add
push
jbe
(bad)
sub
ss
in
mov
test
gs
push
addr16
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
ins
les
cmp
push
das
cmp
sbb
aam
add
push
sub
div
ja
in
mov
test
gs
dec
minps
je
add
dec
mov
inc
cmc
ins
pop
pushw
(bad)
xchg
sahf
add
push
sti
lods
test
push
nop
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
movs
test
mov
pusha
mov
xor
int
jecxz
stc
adc
and
out
scas
mov
push
jmp
(bad)
xor
icebp
mov
icebp
fs
xor
gs
(bad)
(bad)
out
je
and
adc
fcomp
and
add
jns
das
pop
sub
xor
add
pop
adc
sub
movs
adc
add
movs
cmovg
xor
loopne
aad
xor
adc
dec
push
push
les
movs
adc
pop
lds
aas
mov
aam
add
push
jbe
(bad)
jae
jno
inc
in
mov
test
dec
in
cvtdq2ps
jo
jp
inc
mov
dec
cmc
and
push
push
mov
mov
gs
sahf
add
test
xchg
xchg
lods
adc
xchg
mov
and
jo
inc
mov
iret
test
mov
mov
movs
pusha
mov
xor
not
jecxz
into
adc
inc
loop
loop
ret
push
aad
ret
xor
out
mov
shl
add
iret
pop
data16
xor
adc
sti
lahf
mov
push
shl
sbb
jle
and
xchg
pop
add
adc
aaa
mov
aaa
add
lds
cmp
jge
adc
xor
adc
dec
push
(bad)
les
xor
outs
das
inc
mov
ja
push
add
push
(bad)
aad
aas
jo
ins
ja
in
mov
test
jno
inc
pcmpgtd
pop
outs
hlt
jb
pusha
xchg
jbe
adc
jnp
push
push
adc
xchg
add
xchg
xchg
jne
xchg
in
adc
div
xlat
inc
test
cmps
es
cmps
movs
xor
pusha
cmps
push
cmps
mov
xor
xchg
xlat
rol
mov
fcmovnb
rol
scas
lds
mov
xor
fidivr
lds
xchg
add
ret
data16
out
icebp
and
adc
sti
lahf
rcl
shl
xor
outs
add
sbb
push
cmc
add
jg
mov
aaa
xor
and
and
ss
aad
xor
adc
push
push
les
aaa
movs
or
lds
pop
mov
aam
add
push
jne
inc
aas
jb
inc
ja
in
mov
test
pop
in
nop
jns
outs
hlt
push
mov
imul
lea
xchg
test
push
add
mov
mov
jo
inc
out
movs
mov
es
mov
push
div
stos
push
int
loopne
rcl
and
out
scas
loope
int3
(bad)
(bad)
push
aad
(bad)
xor
cmp
shl
mov
into
out
je
and
adc
out
lahf
jmp
test
shl
and
xchg
pop
pop
xchg
or
adc
or
movs
sbb
add
outs
and
add
sub
es
xor
das
(bad)
dec
push
pop
les
pop
movs
dec
inc
jnp
arpl
jle
jno
jge
pop
add
push
jbe
add
ja
in
mov
test
gs
inc
(bad)
out
addr16
hlt
push
mov
push
cmc
pop
pop
dec
push
lea
movs
mov
sti
push
test
xchg
xchg
call
lods
mov
and
jo
inc
mov
iret
fsub
mov
pusha
mov
xor
nop
xlat
inc
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
call
ss
lahf
and
jo
inc
out
and
cmps
xchg
xor
pusha
cmps
push
mov
fisttp
inc
not
in
clc
lds
inc
rol
rcl
shl
mov
ret
(bad)
mov
ret
data16
out
je
and
adc
movs
lahf
jmp
test
add
jns
adc
rol
sbb
sub
movs
and
add
movs
add
cmps
and
sbb
xor
or
addr16
pusha
les
imul
das
ds
jg
and
mov
push
jbe
jb
ins
div
ja
in
mov
test
sbb
dec
nop
jne
jns
dec
mov
outs
cmc
push
pop
push
push
(bad)
xchg
xchg
add
push
in
gs
push
nop
xchg
(bad)
xchg
mov
xchg
mov
and
jo
inc
scas
movs
mov
mov
pusha
mov
xor
xchg
xlat
jecxz
rcl
mov
inc
out
scas
sti
inc
aam
fst
(bad)
xor
(bad)
mov
icebp
fs
xor
gs
(bad)
(bad)
out
je
and
adc
rcr
and
add
jp
add
pusha
xchg
jbe
add
push
adc
sbb
daa
lock
lds
and
add
xor
es
xor
and
push
push
pop
les
xor
arpl
(bad)
mov
aam
add
push
outs
aad
aas
sub
push
ja
in
mov
test
adc
inc
pcmpgtb
das
addr16
xchg
cmp
pop
push
push
mov
push
mul
test
push
rol
jne
xchg
mov
lods
mov
and
jo
inc
xchg
movs
mov
or
es
cmps
scas
xor
pusha
mov
xor
rcl
inc
in
mov
mov
rol
scas
rol
ret
add
xor
fidivr
ret
xor
gs
(bad)
out
out
xlat
je
and
adc
cli
lahf
rcl
and
jbe
sbb
add
or
add
push
adc
aaa
mov
aaa
add
lds
and
daa
cmps
and
ds
loopne
aad
xor
adc
arpl
les
movs
dec
inc
push
(bad)
jge
push
aam
add
push
jp
pop
aas
jo
inc
ja
in
mov
test
gs
inc
pcmpgtw
cmp
mov
push
push
xchg
xchg
movs
add
push
hlt
gs
call
xchg
adc
inc
xor
in
adc
lods
mov
and
jo
inc
mov
iret
mov
mov
pusha
cmps
push
mov
fbld
ficom
les
jecxz
loop
faddp
ret
push
rol
shl
mov
ret
fs
jecxz
scas
in
gs
data16
out
je
and
adc
fistp
and
add
and
adc
adc
or
adc
add
or
dec
add
xor
and
jp
dec
mov
pop
sub
inc
push
arpl
jb
movs
imul
(bad)
pop
inc
push
aam
add
push
ja
dec
aas
inc
imul
inc
in
mov
test
inc
in
cmovae
jg
inc
hlt
imul
outs
push
mov
sahf
add
push
mov
add
fwait
xchg
jne
xchg
mov
cmp
xchg
leave
inc
jmp
(bad)
mov
mov
xor
int
jecxz
cmc
adc
and
out
scas
mov
push
inc
(bad)
xor
stc
mov
icebp
shl
enter
icebp
gs
(bad)
call
and
adc
fistp
and
add
jnp
adc
fs
shl
xor
and
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
call
and
jne
lahf
mov
xor
ins
in
add
jnp
das
pop
sub
xor
add
pop
adc
cmp
sbb
dec
lds
and
push
cmps
push
daa
cmp
xor
sub
arpl
les
cmp
outs
das
(bad)
mov
push
add
push
ins
aad
aas
push
in
mov
test
pop
in
nop
jns
(bad)
hlt
push
mov
push
cmc
and
dec
push
adc
mov
nop
xchg
ficom
lods
lods
mov
and
jo
inc
jmp
iret
fisub
mov
mov
push
mov
fist
inc
rcl
and
jecxz
sti
inc
rol
clc
push
jmp
push
cmp
fs
call
(bad)
(bad)
data16
int3
je
and
adc
mov
pop
and
add
xor
inc
pop
sbb
cmc
sbb
ds
inc
jg
mov
aaa
xor
and
and
add
and
ja
sub
ja
pusha
les
sub
bound
cmp
aam
add
push
jns
sbb
ja
ss
in
mov
test
inc
in
nop
cs
dec
mov
or
and
push
push
mov
push
sti
mov
hlt
push
add
jne
xchg
jmp
xchg
rol
movs
cwde
and
cwde
cmps
mov
and
xor
repz
loop
out
mov
rol
mov
rol
fst
(bad)
xor
sar
lock
xor
gs
(bad)
out
(bad)
out
je
and
adc
sti
lahf
xlat
xchg
add
and
in
add
add
adc
add
pop
adc
xor
pop
lock
lds
and
daa
cmps
pusha
daa
pop
mov
loopne
aad
xor
adc
dec
push
push
les
movs
dec
inc
push
lds
inc
(bad)
sbb
add
push
(bad)
aad
aas
ja
popa
ja
in
mov
test
dec
in
punpcklbw
jae
push
hlt
jae
arpl
jo
push
push
(bad)
xchg
mov
gs
call
xchg
jne
xchg
mov
ss
mov
and
jo
inc
stos
movs
(bad)
and
std
cmps
scas
xor
pusha
mov
xor
not
in
in
adc
inc
loop
ret
(bad)
in
push
rol
ret
xor
(bad)
mov
ret
xor
gs
(bad)
loop
fucom
iret
je
and
adc
cmps
lahf
rcl
adc
add
jg
add
popa
xchg
add
add
inc
adc
outs
mov
aaa
add
and
inc
cmps
adc
inc
mov
loopne
aad
xor
cmp
jae
pusha
les
inc
movs
js
pusha
lds
pusha
mov
daa
aam
add
push
pop
aad
aas
dec
div
ja
in
mov
test
jns
inc
cmovo
js
push
hlt
jl
pusha
xchg
cmp
cmc
and
imul
mov
gs
out
mov
adc
inc
xor
stos
adc
lods
mov
and
jo
inc
cdq
movs
mov
es
cmps
xchg
xor
pusha
cmps
push
mov
fild
inc
stc
adc
and
jecxz
inc
(bad)
mov
xor
fistp
ret
fs
jecxz
fsubp
out
ret
data16
out
je
and
adc
ficomp
and
add
jg
dec
pop
pusha
xchg
aaa
rol
sbb
sub
movs
adc
or
je
add
cmp
inc
mov
loopne
aad
xor
(bad)
inc
push
pusha
les
push
or
lds
cmp
push
inc
fs
add
push
pop
aad
aas
sub
push
ja
in
mov
test
pop
out
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
ja
jge
sub
dec
das
cmp
sbb
aam
add
push
push
aad
aas
jae
jno
inc
in
mov
test
gs
in
unpckhps
data16
adc
jne
cmc
das
pop
je
lea
cli
gs
out
mov
adc
inc
xchg
xchg
jmp
lods
mov
and
jo
inc
xchg
movs
movs
and
lahf
cmps
mov
pusha
mov
xor
rcl
loopne
rcl
and
loop
cmc
inc
cdq
(bad)
loopne
repnz
xor
hlt
mov
ret
fs
retf
in
gs
(bad)
aad
hlt
out
je
and
adc
scas
lahf
rcl
add
and
test
outs
jg
das
pop
xor
adc
xor
es
lds
and
pop
cmps
and
add
xor
push
(bad)
push
push
arpl
pop
nop
sub
lds
jne
push
inc
and
outs
add
push
dec
aad
aas
jno
ins
ja
in
mov
test
pop
in
andnps
pusha
addr16
jle
pusha
xchg
jne
dec
cmc
and
xchg
mov
movs
test
add
add
jne
xchg
mov
xor
inc
jmp
es
mov
mov
mov
xor
jecxz
rol
test
inc
jecxz
sti
inc
out
mov
xor
cmp
call
(bad)
pushf
mov
je
and
adc
loopne
rcl
add
je
or
xchg
pop
push
xchg
sub
push
cmc
add
jg
mov
aaa
xor
and
cmps
xor
and
xor
pop
(bad)
inc
push
les
movs
jne
push
lds
inc
mov
aam
add
push
xor
pop
aas
jb
ss
in
mov
test
jp
dec
pcmpgtd
pop
addr16
hlt
jo
xchg
data16
cmc
jl
push
push
(bad)
xchg
nop
add
push
mul
test
push
xchg
xchg
jne
xchg
nop
adc
mov
test
jo
inc
jmp
es
cmps
mov
push
std
mov
xor
xchg
xlat
loop
repz
inc
out
scas
mov
add
xor
fnstcw
lock
xor
gs
(bad)
out
mov
and
adc
(bad)
lahf
xlat
xchg
aaa
pop
and
in
add
add
adc
add
pop
adc
xor
inc
lock
lds
movs
cmovg
cmps
pusha
daa
inc
mov
loopne
aad
xor
pop
(bad)
dec
push
push
les
movs
jno
inc
lds
inc
(bad)
sbb
add
push
jle
pop
aas
jno
popa
ja
in
mov
test
pop
in
andnps
jo
sbb
jle
arpl
push
pop
dec
push
mov
push
movs
gs
test
push
xchg
xchg
jne
xchg
xchg
adc
xchg
mov
and
jo
inc
mov
iret
fldenv
(bad)
cmps
mov
xchg
push
loopne
lods
xor
rcl
inc
ficom
retf
and
loop
loop
out
(bad)
mov
xor
cmp
rol
pop
data16
out
je
and
adc
cmps
lahf
jmp
shl
in
add
xchg
xchg
xadd
cmc
pop
adc
or
sbb
cmp
xor
or
push
loopne
aad
xor
or
jae
arpl
jae
imul
das
aas
(bad)
jnp
and
jno
inc
mov
push
sub
jae
ins
imul
jno
gs
test
pop
in
nop
jns
jb
push
mov
adc
inc
pop
dec
push
cmps
xchg
mov
gs
test
cdq
xchg
jne
xchg
scas
adc
xor
inc
mov
iret
fldenv
movs
cmps
fnstenv
pusha
cmps
push
mov
(bad)
push
jmp
adc
and
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
(bad)
jmp
and
jo
inc
stos
movs
stos
and
mov
test
mov
xor
jecxz
jecxz
loopne
out
and
out
scas
jmp
clc
(bad)
repz
mov
loop
into
mov
(bad)
shl
add
ret
(bad)
frstor
out
je
and
adc
rcr
test
add
jge
aas
pop
xor
aaa
rol
pop
adc
sub
adc
add
and
adc
mov
loopne
aad
xor
push
(bad)
dec
push
push
les
push
pop
inc
lds
cmp
aam
add
push
dec
aad
aas
jae
popa
ja
in
mov
test
in
andnps
pusha
addr16
hlt
dec
mov
pop
cmc
cs
dec
push
lea
jmp
add
xchg
xchg
jne
xchg
in
adc
div
fild
movs
xchg
stc
cmps
fnstenv
mov
xor
rcl
inc
rcl
test
inc
loop
fadd
(bad)
in
loope
ret
xor
iret
mov
ret
xor
gs
(bad)
jecxz
fucom
(bad)
out
in
(bad)
jne
lahf
xlat
xchg
and
adc
add
add
pop
rol
adc
jg
mov
aaa
add
and
push
cmps
and
es
loopne
aad
xor
adc
jae
arpl
pop
nop
cmp
outs
das
jnp
inc
inc
ja
data16
push
jp
push
aas
jb
ss
in
mov
test
imul
cmp
mov
pop
cmc
jbe
push
push
cmps
xchg
movs
add
push
repnz
lods
add
xchg
xchg
fst
mov
div
xlat
inc
scas
movs
mov
es
cmps
xchg
xor
pusha
cmps
push
cmps
mov
xor
xchg
xlat
rol
mov
icebp
(bad)
jecxz
mov
add
xor
out
mov
lds
xchg
add
ret
repnz
je
and
adc
std
lahf
rcl
shl
dec
add
push
xchg
rol
push
adc
xor
movs
sbb
push
lds
cmps
sbb
cs
loopne
aad
xor
push
(bad)
ja
les
movs
jne
push
lds
inc
mov
aam
add
push
jne
pop
aas
jb
inc
ja
in
mov
test
jb
dec
punpcklwd
addr16
jne
xchg
gs
cmc
fs
push
push
(bad)
xchg
nop
add
push
hlt
mov
add
xchg
adc
inc
xor
xchg
adc
xchg
mov
and
jo
inc
xchg
movs
stos
and
stc
cmps
mov
push
sti
mov
xor
jecxz
jecxz
fist
mov
inc
out
scas
cmc
inc
cli
(bad)
mov
xor
cmp
fs
lea
ret
(bad)
popf
data16
and
adc
aam
int3
xchg
adc
and
add
xchg
rol
push
adc
add
add
add
and
add
aaa
loopne
aad
xor
sub
push
push
pop
les
popa
movs
ins
inc
outs
lds
addr16
outs
inc
jne
dec
add
push
dec
aad
aas
dec
test
in
mov
test
dec
in
cmova
jle
pop
hlt
jae
arpl
es
push
push
mov
mov
gs
test
push
mov
inc
xchg
xchg
mov
xor
inc
stos
movs
xchg
and
loop
cmps
xor
pusha
mov
xor
rcl
inc
not
jmp
hlt
(bad)
loop
mov
push
jmp
ret
xor
cld
mov
ret
fs
xor
add
iret
(bad)
sahf
data16
icebp
je
and
adc
mov
pop
adc
add
jnp
adc
jge
shl
adc
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
cdq
data16
test
test
mov
pop
and
add
jg
dec
pop
adc
cmc
sbb
sub
inc
lock
lds
and
add
push
loopne
aad
xor
and
inc
push
arpl
dec
nop
push
lds
cmp
outs
inc
js
aaa
add
push
pop
aad
aas
jae
ins
ja
in
mov
test
pop
in
nop
jne
sbb
xchg
jp
arpl
pop
pop
dec
push
lea
movs
gs
repnz
cdq
xchg
jne
xchg
mov
mov
lods
mov
jo
inc
jmp
iret
xchg
es
cmps
xor
pusha
mov
xor
xchg
xlat
jecxz
rcl
and
out
scas
test
out
push
in
add
xor
cmp
fs
xor
gs
(bad)
aad
lock
je
and
adc
mov
pop
and
add
cmp
and
adc
aaa
mov
aaa
add
and
and
push
loopne
aad
xor
adc
push
push
push
les
inc
xor
arpl
pop
(bad)
jns
and
push
add
push
pop
aad
aas
jo
jno
inc
in
mov
test
(bad)
in
packsswb
cmp
mov
dec
cmc
arpl
push
push
mov
mov
movs
test
add
xchg
xchg
jne
xchg
mov
test
mov
div
fiadd
movs
test
es
cmps
lds
pusha
mov
xor
rcl
in
clc
adc
inc
loop
rol
lock
rol
ret
xor
fistp
ret
xor
gs
(bad)
in
fsub
iret
je
and
adc
cld
lahf
rcl
cmp
jno
xor
pop
xchg
cmp
adc
add
push
adc
aaa
mov
aaa
add
lds
dec
and
mov
loopne
aad
xor
sbb
jae
(bad)
les
movs
gs
pop
lds
inc
mov
aam
add
push
pop
aad
aas
jo
ss
in
mov
test
gs
in
packuswb
jae
push
hlt
jb
pusha
xchg
jbe
ins
cmc
jne
push
push
cmps
xchg
movs
add
push
repz
test
push
xchg
xchg
jne
xchg
mov
div
(bad)
inc
jmp
es
mov
push
cmps
mov
xor
jecxz
rol
mov
fcmovnb
fld
scas
fadd
(bad)
rcl
shl
mov
lds
xchg
add
ret
repz
je
and
adc
loop
rcl
(bad)
sar
dec
add
cmp
rol
sbb
or
adc
xor
and
adc
mov
loopne
aad
xor
adc
ja
pusha
les
movs
pop
inc
pop
lds
fs
dec
inc
data16
add
push
pop
aad
aas
dec
test
in
mov
test
dec
in
cmovno
inc
addr16
hlt
jbe
xchg
jg
dec
cmc
das
pop
push
lea
cmps
lods
test
push
mov
inc
xor
mov
(bad)
xchg
test
movs
mov
es
cmps
xchg
xor
pusha
mov
xor
xchg
xlat
jecxz
jecxz
out
and
out
scas
mov
pop
rcl
xor
cli
mov
icebp
fs
lds
ret
(bad)
lahf
iretw
out
je
and
adc
rcr
and
add
jl
sbb
push
xchg
xor
adc
xor
adc
add
movs
cmovg
sbb
inc
mov
loopne
aad
xor
or
les
push
pop
inc
cmp
arpl
ds
sbb
aam
add
push
dec
aad
aas
sub
inc
ja
in
mov
test
push
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
outs
les
sub
lds
(bad)
push
inc
push
aam
add
push
pop
aad
aas
jno
inc
ja
in
mov
test
sbb
inc
nop
jns
inc
hlt
adc
pusha
xchg
and
or
inc
pop
dec
push
adc
repz
cmps
xchg
adc
inc
xor
nop
adc
lods
mov
and
jo
inc
jmp
iret
fsub
fwait
cmps
movs
xor
pusha
cmps
push
mov
fisttp
inc
repnz
and
jecxz
mov
push
jmp
shl
mov
shl
add
ret
data16
and
adc
mov
pop
and
add
sbb
inc
pop
add
adc
xor
xor
pop
lds
and
sbb
or
and
ja
push
mov
pop
adc
push
push
les
sub
lds
jnp
inc
pop
aam
add
push
xor
pop
aas
ja
inc
ja
in
mov
test
dec
in
cvtdq2ps
pop
addr16
inc
mov
js
addr16
push
push
(bad)
xchg
nop
add
push
cli
mov
add
mov
xchg
mov
cwde
push
and
jo
inc
scas
movs
cmps
and
std
cmps
cwde
xor
pusha
mov
xor
xchg
xlat
loop
out
adc
inc
out
scas
ret
(bad)
out
push
rol
(bad)
xor
sar
fs
xor
ret
(bad)
loop
jecxz
int3
je
and
adc
in
rcl
data16
xor
outs
add
adc
add
pop
adc
xor
add
push
lds
dec
daa
cmps
daa
daa
pop
mov
loopne
aad
xor
adc
les
xor
arpl
inc
(bad)
js
jl
push
add
push
pop
aad
aas
ja
jno
inc
in
mov
test
dec
in
pcmpgtw
das
addr16
hlt
ins
mov
imul
pop
pop
push
mov
mov
gs
test
mov
inc
xchg
xchg
xchg
adc
xor
inc
mov
iret
test
xor
pusha
mov
xor
not
in
lock
inc
loop
lds
(bad)
in
fadd
ret
xor
aam
bnd
test
add
iret
(bad)
out
fucom
loope
mul
out
out
lock
lahf
rcl
cmp
add
add
xchg
adc
add
adc
jg
mov
aaa
add
lds
dec
and
xor
and
jl
das
mov
pop
adc
dec
push
(bad)
les
movs
gs
dec
lds
inc
(bad)
jge
outs
aam
add
push
sub
imul
jo
add
ins
in
punpcklwd
cmp
mov
ins
cmc
dec
pop
add
add
push
(bad)
gs
test
push
mov
xor
sahf
adc
xchg
mov
and
jo
inc
mov
mov
(bad)
iret
and
mov
cmps
push
mov
fild
inc
not
out
xlat
(bad)
jecxz
out
fadd
xlat
push
rol
shl
mov
ret
fs
out
add
ret
scas
out
je
and
adc
scas
lahf
rcl
cmp
sub
push
add
jg
adc
rol
sbb
cs
aaa
xor
and
pop
cmps
cmp
cmp
xor
or
les
push
lds
cmp
aam
add
push
dec
aad
aas
ins
not
inc
in
mov
test
gs
in
nop
pop
addr16
push
mov
or
push
pop
dec
push
mov
push
stos
gs
mov
push
cdq
xchg
adc
inc
xor
hlt
adc
xchg
mov
and
jo
inc
xchg
movs
mov
mov
mov
push
cli
mov
xor
ret
xlat
cld
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
scas
adc
mov
jo
inc
xchg
movs
mov
xchg
mov
xor
not
loopne
lock
and
loop
mov
push
mov
ret
xor
in
jmp
xor
add
iret
(bad)
xchg
data16
out
je
and
adc
aam
int
or
shl
test
outs
jg
sbb
xor
xor
add
push
adc
sub
movs
daa
lock
cs
pop
cmps
cmp
adc
xor
or
push
push
arpl
inc
nop
push
pop
inc
cmp
outs
das
jnp
add
aam
add
push
jbe
inc
aas
ins
imul
jo
or
sbb
inc
punpckldq
cmp
hlt
inc
mov
dec
cmc
daa
pop
push
push
cmps
xchg
movs
add
push
in
movs
test
push
mov
inc
xor
mov
div
aad
jmp
es
cmps
(bad)
xor
pusha
cmps
push
movs
mov
xor
jecxz
rol
mov
inc
jecxz
test
into
push
loope
shl
mov
lds
lea
ret
repz
je
and
adc
out
rcl
shl
add
add
adc
push
cmc
add
jg
mov
aaa
xor
and
cmp
xor
inc
mov
loopne
aad
xor
adc
push
push
les
xor
gs
inc
lds
inc
(bad)
sbb
add
push
jge
pop
aas
jb
push
ja
in
mov
test
dec
in
punpcklbw
and
hlt
jbe
xchg
data16
cmc
jnp
push
push
lea
mul
test
push
add
jne
xchg
cwde
adc
mov
test
jo
inc
xchg
movs
mov
out
cmps
xor
scas
xor
repz
loop
cli
adc
inc
out
scas
lds
(bad)
out
leave
add
xor
in
mov
lock
xchg
add
ret
(bad)
out
je
and
adc
hlt
lahf
(bad)
xchg
aaa
pop
and
in
add
add
xchg
sbb
add
pop
adc
xor
sbb
and
daa
cmps
pusha
daa
pop
mov
loopne
aad
xor
adc
les
xor
arpl
inc
mov
aam
add
push
(bad)
aad
aas
ja
popa
ja
in
mov
test
gs
in
packuswb
pop
addr16
jno
arpl
jg
push
push
(bad)
xchg
mov
movs
test
push
xchg
xchg
xchg
mov
ss
mov
and
jo
inc
out
mov
or
movs
cmps
(bad)
xor
pusha
mov
xor
not
jecxz
fist
lds
loop
out
rol
push
xlat
add
xor
repnz
shl
add
iret
pop
shl
loopne
cmc
and
adc
mov
pop
push
test
shl
and
xchg
add
adc
adc
inc
lock
lds
and
pop
cmps
bound
xor
xor
or
jae
arpl
gs
imul
das
aas
mov
aam
add
push
dec
aad
aas
jae
ins
ja
in
mov
test
ins
in
cvtdq2ps
jo
pop
hlt
dec
mov
or
push
adc
mov
ret
adc
inc
xor
test
lods
mov
and
jo
inc
jmp
iret
fsub
movs
cmps
mov
push
mov
fisttp
inc
lds
jmp
scas
mov
push
test
xor
out
out
jbe
test
add
ret
iretw
out
je
and
adc
scas
lahf
xlat
xchg
xor
and
add
jg
inc
pop
adc
adc
sub
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
jne
lahf
test
add
jp
xor
outs
jle
inc
pop
push
xchg
xor
add
pop
adc
xor
adc
and
pop
cmps
and
loopne
aad
xor
or
jae
push
les
movs
pop
inc
push
lds
mov
inc
aam
add
push
jge
jno
outs
div
inc
in
mov
test
sbb
inc
andnps
pusha
addr16
hlt
push
mov
or
cmp
dec
push
mov
mov
gs
sti
add
xchg
xchg
jne
xchg
mov
sar
ss
mov
and
jo
inc
stos
movs
mov
es
cmps
mov
push
mov
int
out
xchg
push
out
in
mov
(bad)
loop
sti
inc
rol
push
jmp
push
xchg
ret
xor
iret
(bad)
aam
hlt
out
je
and
adc
loop
rcl
and
ja
or
add
xchg
pop
rol
adc
jg
mov
aaa
add
lds
pop
movs
add
cmps
sbb
sbb
xor
xor
adc
arpl
les
movs
gs
dec
lds
inc
mov
aam
add
push
pop
aad
aas
ja
ins
ja
in
mov
test
popa
in
packsswb
cmp
mov
pop
cmc
bound
push
push
xchg
xchg
movs
add
push
mul
test
push
add
jne
xchg
mov
fwait
push
and
jo
inc
scas
movs
mov
(bad)
iret
mov
xor
pusha
cmps
push
cmps
mov
xor
repz
rol
mov
fcmovnb
fld
scas
mov
hlt
push
rol
shl
mov
lds
xchg
add
ret
scas
out
je
and
adc
neg
and
add
add
xchg
or
push
cmc
push
adc
xor
movs
adc
push
lds
and
sub
sub
xor
push
(bad)
inc
push
les
xor
bound
inc
(bad)
push
inc
jl
dec
add
push
dec
aad
aas
jnp
push
ja
in
mov
test
inc
in
pcmpgtd
addr16
hlt
jo
xchg
data16
cmc
jne
push
push
(bad)
xchg
nop
add
push
mul
test
push
add
jne
xchg
lock
mov
jo
inc
xchg
movs
mov
or
es
cmps
test
mov
xor
xchg
xlat
loop
out
mov
test
inc
out
scas
fadd
(bad)
ficom
(bad)
xor
repz
icebp
fnsave
out
add
ret
(bad)
xchg
data16
aad
shl
loopne
mov
lahf
jmp
rol
in
add
and
pop
rol
push
adc
or
and
and
push
cmps
cmp
cmp
xor
cmp
push
push
push
les
nop
jne
or
xor
arpl
and
js
addr16
add
push
sub
add
jo
jno
inc
in
mov
test
in
(bad)
out
addr16
inc
mov
ins
cmc
push
pop
dec
push
mov
mov
gs
add
xchg
adc
inc
xchg
xchg
(bad)
adc
div
test
movs
mov
es
cmps
lds
pusha
mov
xor
out
loopne
fst
mov
inc
loop
sti
inc
rol
mov
xor
cmp
fs
xor
gs
(bad)
(bad)
data16
(bad)
out
cld
cmc
shl
lahf
into
xchg
xor
adc
add
jle
sbb
add
adc
cs
aaa
add
and
pop
cmps
pop
daa
inc
mov
loopne
aad
xor
adc
jae
arpl
jno
movs
dec
inc
xor
outs
das
cmp
aam
add
push
sub
dec
aas
and
push
ja
in
mov
test
arpl
push
addr16
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
ins
les
sub
push
das
cmp
inc
pop
aam
add
push
push
aad
aas
ja
push
ja
in
mov
test
adc
dec
nop
jne
add
push
mov
dec
cmc
pop
pop
dec
push
mov
push
stos
gs
test
push
mov
inc
xor
test
xchg
mov
movs
test
(bad)
cmps
nop
xor
pusha
mov
xor
jecxz
jecxz
ficom
test
inc
out
scas
cmc
inc
aam
jecxz
out
add
xor
cmp
retf
in
gs
(bad)
aam
(bad)
out
je
and
adc
out
lahf
rcl
jg
ins
in
add
sbb
es
add
adc
aaa
mov
aaa
add
and
sbb
add
es
xor
adc
jae
push
les
sub
arpl
inc
mov
aam
add
push
dec
aad
aas
jo
inc
ja
in
mov
test
outs
in
punpcklwd
cmp
mov
ja
js
push
push
mov
mov
gs
sti
add
xchg
xchg
xchg
jmp
xor
inc
stos
movs
lods
and
mov
mov
pusha
mov
xor
rcl
inc
cmps
adc
inc
loop
ret
(bad)
in
push
rol
ret
xor
fdivr
ret
xor
gs
(bad)
loopne
fucom
std
je
and
adc
call
adc
add
push
xchg
pop
push
xchg
adc
add
push
adc
aaa
mov
aaa
add
lds
xor
sbb
cs
loopne
aad
xor
adc
dec
push
(bad)
les
movs
gs
pop
lds
inc
(bad)
ins
inc
addr16
add
push
sub
push
aas
jne
ss
in
mov
test
gs
in
punpckhdq
das
addr16
ins
mov
dec
cmc
je
push
push
mov
movs
add
push
repz
test
iret
xchg
adc
inc
xor
mov
xor
inc
jmp
cwde
and
mov
cmps
push
cmps
mov
xor
jecxz
rol
mov
fadd
jecxz
jecxz
mov
add
xor
fnstcw
lds
xchg
add
ret
data16
loop
repz
adc
call
and
add
push
xchg
pop
xor
adc
imul
lock
xor
pop
cmps
and
loopne
aad
xor
sub
push
push
pusha
les
jnp
imul
bound
cmp
push
inc
and
inc
add
push
dec
aad
aas
das
not
inc
in
mov
test
outs
in
nop
pop
addr16
push
xchg
jnp
adc
cmp
push
push
(bad)
xchg
xchg
add
push
in
gs
push
ret
adc
inc
xor
lods
adc
xchg
mov
movs
cmps
and
lahf
cmps
mov
push
cli
mov
xor
repz
jecxz
int
in
mov
into
inc
out
scas
mov
push
call
aad
push
icebp
mov
icebp
xlat
xor
add
ret
(bad)
popf
data16
loop
int3
and
adc
mov
pop
and
add
jge
das
pop
push
xchg
sub
adc
cs
aaa
add
and
adc
sbb
inc
mov
loopne
aad
xor
adc
arpl
les
sub
lds
jnp
jg
jo
jo
inc
mov
push
dec
aad
aas
ins
test
in
mov
test
pop
in
nop
dec
addr16
push
mov
or
push
mov
mov
gs
test
into
xchg
adc
inc
xchg
xchg
call
ss
mov
and
jo
inc
stos
movs
and
cmps
mov
iret
pusha
mov
xor
(bad)
xlat
inc
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
xchg
adc
mov
fiadd
movs
mov
movs
cmps
xchg
pusha
cmps
push
mov
fisttp
inc
into
adc
and
jecxz
mov
push
test
xor
clc
mov
shl
add
ret
data16
test
jecxz
mov
lahf
rcl
add
sub
push
add
xchg
pop
xor
adc
cs
aaa
xor
and
adc
and
or
or
xor
or
ja
pusha
les
sub
bound
inc
(bad)
inc
push
aam
add
push
imul
ins
ja
in
mov
test
inc
in
andnps
fs
dec
mov
adc
cs
dec
push
lea
cmc
mov
mov
adc
inc
xor
lock
mov
test
jo
inc
test
mov
xor
pusha
mov
xor
int
loop
loope
mov
iret
(bad)
out
scas
ret
inc
add
push
out
(bad)
xor
fdivr
lock
add
ret
(bad)
loop
(bad)
fdiv
loopne
cmc
cmc
mov
lahf
rcl
shl
and
outs
add
pop
rol
pop
adc
xor
inc
lock
lds
movs
cmovg
cmps
daa
daa
xor
aad
xor
adc
arpl
les
movs
dec
inc
pop
lds
inc
(bad)
sbb
add
push
jbe
pop
aas
ja
popa
ja
in
mov
test
jb
inc
punpcklbw
arpl
hlt
jae
arpl
jle
push
push
(bad)
xchg
mov
gs
add
xchg
xchg
xchg
xchg
adc
xor
inc
lods
movs
and
cmps
xor
mov
xor
not
in
(bad)
adc
inc
loop
retf
inc
clc
(bad)
mov
xor
in
mov
ret
xor
gs
(bad)
in
fsub
test
out
out
fidiv
lahf
aad
xor
adc
add
add
or
add
push
adc
ss
aaa
add
lds
dec
and
mov
loopne
aad
xor
adc
push
push
(bad)
les
aaa
movs
dec
inc
pop
lds
inc
(bad)
push
inc
inc
aam
add
push
(bad)
aad
aas
jo
ins
ja
in
mov
test
gs
inc
(bad)
out
addr16
jne
pusha
xchg
jne
push
cmc
popw
push
push
cmps
xchg
mov
gs
add
cmps
xchg
fist
mov
xor
inc
xchg
movs
and
cmps
shl
cmps
push
mov
fist
inc
fst
test
inc
jecxz
sti
inc
rol
in
push
in
shl
mov
shl
add
ret
mov
je
and
adc
mov
pop
and
add
jge
dec
pop
xor
adc
sub
adc
xor
and
pop
cmps
bound
adc
xor
adc
addr16
pusha
les
push
lds
jnp
inc
inc
pop
aam
add
push
ins
aad
aas
outs
not
inc
in
mov
test
jp
dec
cvtdq2ps
fs
dec
mov
je
das
pop
push
push
(bad)
xchg
xchg
add
push
jmp
add
fld
xor
mov
ret
ss
and
fiadd
movs
fbld
mov
pusha
mov
xor
int
jecxz
(bad)
adc
and
out
scas
mov
push
test
test
cli
mov
icebp
fs
xor
add
ret
(bad)
popf
data16
cli
je
and
adc
mov
pop
and
add
jl
adc
sbb
cmc
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
pushf
data16
cmc
je
and
jne
lahf
aam
or
shr
or
jge
das
pop
push
xchg
xor
add
push
adc
cs
aaa
add
and
pop
cmps
pop
daa
or
or
and
jp
add
jae
arpl
ja
movs
je
js
outs
das
cmp
aam
add
push
inc
aad
aas
outs
test
in
mov
test
pop
out
addr16
hlt
push
mov
adc
and
dec
push
cmps
xchg
mov
gs
mov
add
jne
xchg
adc
mov
and
jo
inc
scas
movs
mov
movs
cmps
movs
xor
pusha
cmps
push
movs
mov
xor
jecxz
rol
lods
and
jecxz
mov
push
jmp
push
pushf
mov
shl
add
ret
lock
je
and
adc
mov
pop
and
add
push
xchg
pop
add
adc
xor
inc
lock
lds
and
and
mov
loopne
aad
xor
adc
ja
les
nop
movs
or
lds
pop
(bad)
sbb
add
push
push
aad
aas
jno
ss
in
mov
test
push
dec
punpckldq
and
hlt
jl
xchg
gs
cmc
fs
push
push
(bad)
xchg
nop
add
push
mul
test
push
add
jne
xchg
scas
adc
xchg
mov
and
jo
inc
scas
movs
mov
es
cmps
xchg
xor
pusha
mov
xor
xchg
xlat
loop
loopne
mov
iret
(bad)
out
scas
mov
repz
xlat
add
xor
aad
lock
div
fnsave
xchg
add
ret
(bad)
loopne
repnz
je
and
adc
neg
and
in
add
push
xchg
popa
xchg
push
rol
pop
adc
cmp
adc
and
and
es
inc
mov
loopne
aad
xor
adc
les
xor
arpl
dec
(bad)
push
inc
and
mov
push
dec
aad
aas
jbe
push
ja
in
mov
test
inc
in
pcmpgtd
pop
addr16
hlt
ins
mov
imul
pop
pop
push
mov
mov
gs
sahf
add
mov
inc
xchg
xchg
lock
lods
mov
and
jo
inc
mov
iret
cmps
es
mov
push
mov
xchg
xor
not
in
in
adc
loop
rol
mov
xor
ret
jbe
test
add
iret
(bad)
(bad)
out
je
and
adc
movs
lahf
rcl
push
sar
inc
add
xor
add
push
xchg
and
add
push
adc
xor
xor
and
push
cmps
push
daa
inc
mov
loopne
aad
xor
pop
(bad)
push
push
arpl
push
nop
cmp
outs
das
je
jp
push
aam
add
push
outs
aad
aas
jno
inc
ja
in
mov
test
pop
out
addr16
hlt
dec
mov
dec
cmc
and
push
push
adc
sahf
add
add
jne
xchg
mov
ss
mov
and
jo
inc
scas
movs
cwde
and
movs
cmps
lahf
xor
pusha
cmps
push
mov
fisttp
rcl
mov
inc
jecxz
cmc
inc
rol
push
jecxz
shl
mov
shl
add
ret
mov
je
and
adc
scas
lahf
int3
xchg
push
pop
and
add
jl
cmp
add
cmc
sbb
sub
movs
adc
or
adc
pop
cmps
pop
daa
pop
mov
loopne
aad
xor
push
(bad)
addr16
pusha
les
imul
das
cmp
sbb
aam
add
push
dec
aad
aas
jbe
ss
in
mov
test
js
je
pop
out
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
ja
inc
nop
cmp
dec
das
aas
(bad)
sbb
aam
add
push
pop
aad
aas
jb
inc
ja
in
mov
test
in
nop
jns
sbb
dec
mov
dec
cmc
pop
pop
push
push
mov
mov
gs
test
xchg
xchg
jne
xchg
lahf
adc
xchg
mov
and
jo
inc
nop
movs
fwait
and
loop
scas
xor
pusha
mov
xor
not
loopne
les
mov
inc
loop
test
clc
push
jecxz
ret
xor
cmp
fs
xor
gs
(bad)
(bad)
out
je
and
adc
out
lahf
int3
xchg
or
sar
xor
add
rol
push
adc
sub
xor
add
and
adc
mov
loopne
aad
xor
push
(bad)
dec
push
arpl
pop
nop
sub
lds
je
add
aam
add
push
outs
aad
aas
ja
push
ja
in
mov
test
gs
punpckldq
jae
pop
hlt
inc
mov
pop
cmc
bound
push
push
mov
movs
add
push
cmc
pop
add
xchg
inc
xor
call
xor
inc
jmp
es
(bad)
xor
pusha
cmps
push
movs
mov
xor
int
rol
mov
retf
korb
scas
fadd
(bad)
mov
xor
sar
lds
xchg
add
ret
repz
je
and
adc
stc
lahf
rcl
and
ja
xor
outs
pop
xchg
pop
add
adc
xor
adc
push
lds
shld
dec
daa
cmps
sbb
sbb
xor
and
ss
push
(bad)
addr16
les
xor
bound
inc
(bad)
push
inc
js
dec
add
push
jns
outs
aas
jnp
inc
ja
in
mov
test
dec
in
pcmpgtb
dec
addr16
imul
cmc
jae
push
push
lea
lock
mov
iret
xchg
adc
inc
xor
mov
xchg
push
and
jo
inc
xchg
movs
test
out
cmps
shl
mov
xor
jecxz
loop
stc
adc
inc
out
scas
mov
sti
push
leave
add
xor
aad
lock
div
fdiv
xchg
add
ret
(bad)
out
jecxz
aam
repnz
adc
cli
lahf
xlat
xchg
add
and
in
add
pop
xchg
push
xchg
adc
add
pop
adc
xor
inc
lock
lds
dec
and
xor
es
xor
pop
(bad)
jae
push
les
xor
lds
inc
(bad)
sbb
add
push
jb
pop
aas
jno
jno
inc
in
mov
test
push
inc
andps
pusha
addr16
hlt
inc
mov
arpl
outs
pop
push
push
(bad)
xchg
mov
gs
add
mov
inc
xchg
xchg
mov
ss
mov
and
jo
inc
xchg
movs
lahf
and
mov
mov
mov
mov
xor
not
loopne
ficom
mov
inc
loop
cmc
inc
cdq
(bad)
mov
xor
cwde
mov
ret
fs
mov
iret
(bad)
aam
(bad)
popf
je
and
adc
movs
lahf
rcl
add
and
test
outs
xchg
pop
sbb
adc
xor
cmp
pop
lds
and
sbb
or
xor
or
les
movs
pop
inc
xor
outs
das
jbe
push
inc
jg
jne
inc
mov
push
jns
jno
outs
test
in
mov
test
pop
in
nop
pop
addr16
push
mov
or
push
pop
dec
push
cmps
xchg
mov
mov
inc
ret
adc
inc
xor
jmp
xor
inc
scas
movs
test
movs
cmps
mov
mov
mov
xor
rcl
mov
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
push
mov
movs
stos
and
mov
pusha
mov
xor
jecxz
jecxz
into
adc
and
out
scas
mov
push
test
loope
cli
mov
icebp
shl
retf
in
gs
(bad)
sahf
iretw
out
je
and
adc
rcr
and
add
xor
xchg
xor
add
pop
adc
sub
sub
lock
lds
and
sbb
inc
mov
loopne
aad
xor
adc
push
push
push
les
cmp
arpl
inc
(bad)
push
inc
pop
aam
add
push
jb
pop
aas
jae
jno
inc
in
mov
test
dec
in
nop
jo
inc
hlt
dec
mov
pop
cmc
cs
dec
push
mov
mov
gs
test
push
rol
jne
xchg
jmp
div
fiadd
movs
xchg
and
mov
pusha
mov
xor
rcl
loopne
(bad)
adc
inc
loop
hlt
inc
cdq
(bad)
lock
loopne
ret
xor
int
lock
test
add
iret
(bad)
jecxz
out
(bad)
je
and
adc
clc
lahf
xlat
xchg
or
shl
add
add
push
rol
adc
jg
mov
aaa
add
lds
and
and
xor
and
jge
adc
jae
(bad)
les
movs
dec
inc
push
mov
aam
add
push
(bad)
aad
aas
jo
ins
ja
in
mov
test
jno
inc
pcmpgtd
cmp
mov
jo
jns
push
push
xchg
xchg
movs
add
push
repnz
test
push
iret
xchg
jne
xchg
(bad)
adc
xchg
mov
and
jo
inc
jmp
cwde
and
jecxz
(bad)
xor
pusha
cmps
push
cmps
mov
xor
int
rol
mov
int3
(bad)
jecxz
leave
inc
ret
push
into
add
xor
sar
lds
xchg
add
ret
data16
int3
je
and
adc
neg
and
add
add
xchg
or
push
cmc
push
adc
xor
movs
push
lock
lds
daa
cmps
outs
daa
sbb
xor
pop
(bad)
push
push
les
xor
lds
inc
mov
aam
add
push
sub
pop
aas
jb
ss
in
mov
test
gs
dec
punpcklbw
pop
addr16
jne
xchg
gs
cmc
jge
push
push
mov
push
hlt
mov
add
xchg
adc
inc
xor
nop
adc
xchg
mov
and
jo
inc
scas
movs
scas
and
mov
pushf
xor
pusha
mov
xor
jecxz
loop
mov
(bad)
out
scas
fadd
(bad)
call
(bad)
xor
xchg
icebp
repz
gs
(bad)
(bad)
data16
out
je
and
adc
out
lahf
rcl
adc
imul
and
xchg
sbb
adc
aaa
mov
aaa
add
and
push
cmps
xor
add
xor
or
jae
push
les
cmp
arpl
jnp
inc
fs
add
push
pop
aad
aas
jae
push
ja
in
mov
test
jb
inc
andps
pusha
addr16
dec
mov
outs
cmc
and
dec
push
lea
in
mov
mov
test
xchg
xchg
mov
lods
mov
and
jo
inc
hlt
movs
fisub
mov
pusha
mov
xor
rcl
loopne
ret
and
loop
mov
push
jmp
ret
xor
sti
mov
ret
fs
xor
add
iret
(bad)
sahf
in
std
je
and
adc
mov
pop
adc
add
jg
add
adc
adc
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
aad
(bad)
out
je
and
cmps
lahf
aad
xor
and
add
jle
cmp
adc
adc
sub
movs
push
lock
sub
pop
cmps
(bad)
pop
mov
loopne
aad
xor
(bad)
push
push
pusha
les
push
pop
inc
push
(bad)
pop
inc
and
imul
aad
aas
jae
ins
ja
in
mov
test
gs
dec
orps
and
hlt
push
mov
or
push
mov
push
jmp
add
add
jne
xchg
mov
xchg
leave
inc
jmp
iret
mov
xor
pusha
mov
xor
repz
loop
mov
korw
scas
test
jecxz
in
add
xor
cmp
fs
mov
ret
(bad)
aam
(bad)
out
je
and
adc
out
lahf
rcl
cmp
je
xor
outs
add
and
add
pop
adc
xor
xor
pop
lds
dec
cmp
xor
adc
xor
pop
(bad)
arpl
les
movs
jno
inc
lds
inc
mov
aam
add
push
push
aad
aas
jo
popa
ja
in
mov
test
gs
in
punpckldq
pop
addr16
hlt
jo
arpl
gs
push
push
lea
mul
test
push
mov
inc
xchg
xchg
mov
lahf
push
and
jo
inc
out
mov
es
mov
push
mov
shl
rcl
inc
out
mov
mov
rol
scas
lds
(bad)
into
push
fadd
ret
xor
aam
bnd
test
add
iret
(bad)
in
int3
out
je
and
adc
into
lahf
aad
xor
adc
add
or
push
rol
pop
adc
ss
aaa
add
lds
and
and
xor
cmp
xor
sbb
push
push
(bad)
les
xor
outs
das
inc
(bad)
ins
inc
and
dec
add
push
jb
push
aas
jne
ins
ja
in
mov
test
inc
in
punpcklbw
pop
addr16
hlt
outs
mov
pop
cmc
jbe
push
push
cmps
xchg
movs
add
push
repnz
test
mov
xchg
jne
xchg
hlt
adc
div
xlat
inc
scas
movs
mov
es
mov
push
cmps
mov
xor
int
rol
mov
retf
korb
scas
fadd
(bad)
ficom
shl
mov
lds
xchg
add
ret
mov
je
and
adc
out
rcl
shl
xor
outs
add
adc
push
cmc
add
jg
mov
aaa
xor
and
and
add
and
xor
pop
adc
inc
push
pusha
les
sub
lds
je
inc
pop
aam
add
push
push
aad
aas
ja
ss
in
mov
test
pop
in
andnps
fs
inc
mov
push
push
mov
xchg
add
push
jmp
add
cmps
xchg
jne
xchg
mov
xchg
fild
movs
mov
es
cmps
nop
xor
pusha
mov
xor
xchg
xlat
jecxz
rcl
mov
inc
out
scas
sti
inc
cli
(bad)
mov
xor
mov
icebp
fs
xor
gs
(bad)
lahf
data16
and
adc
fistp
and
add
jge
aas
pop
xor
rol
pop
adc
xor
pop
lock
movs
cmovg
xor
loopne
aad
xor
or
les
push
dec
inc
cmp
arpl
aas
(bad)
push
inc
pusha
aam
add
push
push
inc
aas
je
inc
ja
in
mov
test
push
out
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
outs
les
cmp
push
das
jbe
jp
push
aam
add
push
push
aad
aas
jno
inc
ja
in
mov
test
sbb
inc
nop
and
hlt
push
mov
push
cmc
pop
pop
dec
push
cmps
xchg
mov
gs
mov
xchg
jne
xchg
mov
div
mov
movs
mov
es
cmps
xor
cmps
push
mov
fisttp
inc
fcom
lods
and
jecxz
hlt
inc
cdq
(bad)
loopne
out
add
xor
mov
shl
add
ret
lock
je
and
adc
movs
lahf
into
xchg
push
pop
and
add
add
daa
rol
add
jg
mov
aaa
xor
and
adc
mov
loopne
aad
xor
adc
push
push
pusha
les
cmp
bound
jbe
sbb
aam
add
push
dec
aad
aas
ja
ss
in
mov
test
outs
in
packsswb
ja
pop
hlt
inc
mov
pop
cmc
and
xchg
nop
add
push
cli
mov
push
xchg
xchg
jne
xchg
mov
ss
mov
and
jo
inc
jmp
es
cmps
mov
pusha
mov
xor
xchg
xlat
loop
cmps
adc
inc
out
scas
rol
mov
xor
fnstsw
lock
xchg
add
ret
(bad)
in
(bad)
cli
je
and
adc
std
lahf
xlat
xchg
aaa
pop
and
in
add
add
adc
add
pop
adc
xor
push
lock
lds
movs
cmovg
cmps
es
pop
mov
loopne
aad
xor
adc
les
xor
arpl
inc
(bad)
cmova
dec
add
push
dec
aad
aas
jbe
push
ja
in
mov
test
inc
in
packssdw
bound
hlt
outs
mov
dec
cmc
jne
pop
push
(bad)
xchg
mov
gs
lods
add
mov
inc
xchg
xchg
stos
adc
lods
mov
and
jo
inc
lods
movs
fwait
and
mov
lds
pusha
mov
xor
not
in
cld
adc
inc
loop
lds
(bad)
cld
push
int
ret
xor
sar
ret
xor
gs
(bad)
out
mov
and
adc
sti
lahf
rcl
and
jbe
sbb
add
xchg
adc
add
push
adc
aaa
mov
aaa
add
lds
movs
add
cmps
jge
es
loopne
aad
xor
adc
dec
push
(bad)
les
nop
xor
lds
inc
mov
aam
add
push
pop
aad
aas
ja
ins
ja
in
mov
test
gs
in
punpckldq
cmp
mov
or
push
cmps
xchg
movs
add
push
in
pop
add
xchg
jne
xchg
mov
xor
inc
jmp
movs
cmps
mov
push
mov
fist
inc
mov
(bad)
jecxz
lds
(bad)
mov
xor
(bad)
mov
lds
xchg
add
ret
mov
je
and
adc
out
lahf
xlat
xchg
xor
and
add
sbb
adc
sbb
adc
sub
adc
xor
and
adc
mov
loopne
aad
xor
or
addr16
pusha
les
push
or
lds
jne
push
inc
fs
add
push
jle
je
ins
not
inc
in
mov
test
in
nop
jne
jge
push
mov
adc
push
pop
dec
push
mov
push
stos
gs
mov
push
cdq
xchg
adc
inc
xor
mov
ss
mov
and
jo
inc
scas
movs
mov
xchg
mov
xor
ret
xlat
cld
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
(bad)
(bad)
mov
and
jo
inc
xchg
movs
test
es
cmps
test
pusha
mov
xor
not
loopne
icebp
adc
and
loop
mov
push
jmp
ret
xor
(bad)
mov
ret
shl
add
iret
(bad)
call
and
adc
fistp
adc
add
jg
inc
pop
xor
xor
add
push
adc
sub
movs
ds
lds
and
sbb
or
xor
or
les
cmp
outs
das
pop
(bad)
jp
pop
aam
add
push
push
add
ins
div
ja
in
mov
test
inc
in
packsswb
jae
pop
hlt
jle
pusha
xchg
jne
js
popw
push
push
xchg
xchg
movs
add
push
mul
test
push
fld
xor
xchg
adc
xor
inc
jmp
es
mov
and
xor
repz
rol
mov
fcmovnb
fld
scas
rol
hlt
push
loopne
shl
mov
lds
xchg
add
ret
mov
je
and
adc
ret
xchg
or
shl
and
outs
add
sbb
push
cmc
add
jg
mov
aaa
xor
and
cmp
jge
xor
xor
pop
(bad)
addr16
les
xor
or
lds
inc
mov
aam
add
push
popa
aad
aas
jb
ss
in
mov
test
jp
dec
packuswb
addr16
hlt
ja
xchg
data16
cmc
jl
push
push
(bad)
xchg
nop
add
push
icebp
gs
scas
add
add
jne
xchg
mov
xchg
rol
movs
and
cmps
shl
mov
xor
xchg
xlat
loop
cmc
adc
inc
out
scas
les
(bad)
mov
xor
aam
cmc
jbe
div
fs
nop
add
ret
(bad)
out
je
and
adc
repz
(bad)
xchg
add
and
in
add
push
xchg
pop
cmp
adc
cmp
adc
push
lds
and
cmps
es
sbb
xor
adc
push
push
push
les
movs
dec
inc
push
lds
inc
(bad)
sbb
add
push
sub
mul
inc
in
mov
test
jb
inc
packuswb
arpl
hlt
jb
arpl
jp
push
push
mov
mov
movs
test
push
xchg
xchg
adc
inc
xchg
xchg
mov
div
aam
stos
movs
mov
es
cmps
lds
pusha
mov
xor
rcl
inc
mov
(bad)
loop
fadd
(bad)
loopne
aad
ret
xor
int
lock
test
add
iret
(bad)
(bad)
out
je
and
adc
loopne
rcl
pop
sar
sbb
xor
xchg
and
adc
xor
pop
lock
lds
push
movs
add
cmps
and
inc
mov
loopne
aad
xor
adc
jae
(bad)
les
xor
jne
ins
lds
inc
mov
pusha
add
push
outs
aad
aas
jno
inc
ja
in
mov
test
push
out
addr16
dec
mov
pop
cmc
cmp
dec
push
xchg
xchg
mov
gs
add
xchg
jne
xchg
mov
lods
mov
and
jo
inc
xchg
movs
pushf
and
movs
cmps
xchg
xor
pusha
cmps
push
mov
fisttp
inc
(bad)
adc
and
jecxz
mov
push
test
xor
out
out
jbe
test
add
ret
data16
out
je
and
adc
mov
pop
and
add
xchg
pop
adc
cmc
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
jne
lahf
aam
daa
pop
and
add
jg
aas
pop
push
xchg
xor
add
pop
adc
xor
sub
and
pop
cmps
outs
daa
inc
mov
loopne
aad
xor
or
push
push
push
les
push
pop
inc
lds
ds
jg
pop
aam
add
push
pop
aad
aas
outs
div
inc
in
mov
test
sbb
inc
andnps
cmp
hlt
push
mov
or
cmp
dec
push
mov
mov
gs
test
push
rol
jne
xchg
mov
xor
inc
stos
movs
mov
or
es
cmps
mov
push
mov
shl
out
in
movs
adc
inc
loop
rol
cld
push
out
ret
xor
fdivr
ret
fs
xor
gs
(bad)
aam
in
icebp
je
and
adc
scas
lahf
rcl
push
sar
sbb
xor
xchg
sbb
adc
xor
xor
dec
lds
dec
and
add
and
jl
dec
mov
pop
adc
jae
(bad)
les
movs
or
lds
dec
(bad)
ins
inc
push
aam
add
push
push
aad
aas
jbe
inc
ja
in
mov
test
dec
in
packsswb
arpl
hlt
jne
pusha
xchg
jne
pop
cmc
popa
pop
push
push
xchg
xchg
movs
add
push
hlt
movs
test
push
mov
inc
xor
mov
call
and
jo
inc
jmp
es
cmps
movs
xor
pusha
cmps
push
cmps
mov
xor
int
rol
mov
retf
(bad)
jecxz
mov
add
xor
out
mov
lds
xchg
add
ret
data16
fdiv
jecxz
mov
lahf
fist
cmp
jno
ss
add
cmp
fs
or
push
cmc
pop
adc
xor
movs
adc
and
sub
cs
aad
xor
push
(bad)
inc
push
les
xor
bound
dec
(bad)
js
cmp
dec
add
push
jge
outs
aas
jnp
inc
ja
in
mov
test
gs
in
pcmpgtw
pop
addr16
hlt
imul
push
push
mov
push
icebp
gs
scas
add
xchg
xchg
jne
xchg
jmp
mov
jo
inc
jmp
es
cmps
xchg
xor
pusha
mov
xor
jecxz
loop
in
mov
iret
(bad)
out
scas
rol
fst
(bad)
xor
fidivr
lock
xchg
add
ret
(bad)
cld
repz
je
and
adc
loop
rcl
shl
xor
outs
add
pop
rol
pop
adc
xor
pop
lock
lds
dec
cmp
and
adc
xor
adc
dec
push
push
les
cmp
arpl
jbe
push
inc
inc
aam
add
push
pop
aad
aas
jb
popa
ja
in
mov
test
inc
in
orps
pusha
addr16
hlt
jge
arpl
addr16
push
push
(bad)
xchg
mov
gs
repz
rol
jne
xchg
cwde
adc
lods
mov
and
jo
inc
out
xchg
mov
pusha
mov
xor
rcl
inc
xlat
adc
inc
loop
sti
inc
cdq
(bad)
movs
push
out
add
xor
repz
ret
fdiv
enter
lahf
gs
(bad)
cwde
data16
out
je
and
adc
mov
pop
adc
add
jg
das
pop
add
adc
cs
aaa
add
and
pop
cmps
(bad)
inc
mov
loopne
aad
xor
adc
jae
arpl
jo
movs
dec
inc
xor
outs
das
cmp
jp
arpl
add
push
jb
dec
aas
jnp
inc
ja
in
mov
test
outs
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
ins
les
sub
push
das
jne
inc
pop
aam
add
push
push
aad
aas
ja
push
ja
in
mov
test
pop
in
nop
jne
add
push
mov
dec
cmc
pop
pop
dec
push
mov
push
stos
gs
mov
push
ret
adc
inc
xor
xchg
adc
xchg
mov
and
jo
inc
scas
movs
test
(bad)
cmps
nop
xor
pusha
mov
xor
jecxz
jecxz
fst
test
inc
out
scas
cmc
inc
aam
jecxz
out
add
xor
pushf
mov
icebp
div
mov
ret
(bad)
(bad)
data16
out
je
and
adc
out
lahf
rcl
jg
ins
in
add
sbb
adc
add
adc
aaa
mov
aaa
add
and
and
ds
aad
xor
adc
arpl
les
cmp
arpl
jne
inc
push
aam
add
push
push
aad
aas
jb
popa
ja
in
mov
test
gs
in
packsswb
pusha
outs
hlt
inc
mov
pop
cmc
outs
pop
push
push
mov
push
hlt
gs
sti
add
xchg
xchg
xchg
mov
ss
mov
and
jo
inc
xchg
movs
mov
mov
pusha
mov
xor
out
in
repnz
inc
loop
ret
(bad)
movs
push
rol
ret
xor
fdivr
ret
xor
gs
(bad)
loopne
mul
std
je
and
adc
lock
rcl
shl
xor
push
xchg
pop
push
xchg
adc
add
push
adc
aaa
mov
aaa
add
lds
xor
xor
add
cmp
and
jge
aaa
mov
pop
adc
dec
push
(bad)
les
xor
outs
das
inc
(bad)
ins
inc
addr16
add
push
jp
outs
aas
jne
push
ja
in
mov
test
inc
in
punpckhwd
jb
add
xchg
ja
dec
cmc
jae
push
push
adc
movs
add
xchg
xchg
adc
inc
xor
mov
lods
(bad)
mov
and
jo
inc
xchg
movs
cwde
and
cmps
cmps
xor
cmps
push
cmps
mov
xor
jecxz
rol
mov
int3
(bad)
jecxz
mov
add
xor
out
mov
lds
xchg
add
ret
data16
loop
repz
adc
call
and
add
add
push
rol
push
adc
xor
sbb
push
lds
and
cmp
jge
xor
xor
adc
push
push
les
aaa
movs
or
lds
inc
mov
aam
add
push
push
aad
aas
jno
ss
in
mov
test
gs
dec
packsswb
addr16
hlt
jb
xchg
gs
cmc
popw
push
push
(bad)
xchg
nop
add
push
cli
mov
push
nop
xchg
xlat
xchg
mov
xchg
leave
inc
jmp
es
cmps
xor
pusha
mov
xor
jecxz
jecxz
fist
lods
and
out
scas
ret
(bad)
jecxz
fiadd
(bad)
xor
sar
fs
xor
gs
(bad)
jecxz
repz
je
and
adc
movs
lahf
rcl
jnp
ins
in
add
add
sub
add
pop
adc
cs
aaa
add
and
pop
cmps
and
loopne
aad
xor
or
les
imul
das
aas
(bad)
outs
inc
dec
aam
add
push
dec
aad
aas
ins
test
in
mov
test
pop
in
nop
dec
addr16
push
mov
or
push
mov
mov
gs
test
xchg
xchg
adc
inc
xchg
xchg
test
xor
inc
out
and
cmps
mov
mov
mov
xor
in
xlat
inc
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
(bad)
push
and
jo
inc
xchg
movs
mov
movs
cmps
xchg
pusha
cmps
push
mov
fisttp
inc
in
jmp
inc
jecxz
mov
push
mov
shl
mov
shl
add
ret
data16
out
aam
jecxz
mov
lahf
rcl
add
sub
push
add
xchg
pop
xor
adc
cs
aaa
xor
and
adc
mov
loopne
aad
xor
or
push
push
pusha
les
sub
bound
je
sbb
aam
add
push
imul
ins
ja
in
mov
test
inc
in
packsswb
and
hlt
inc
mov
jo
popw
push
push
(bad)
xchg
nop
add
push
cmc
mov
push
add
jne
xchg
stos
adc
mov
jo
inc
scas
movs
test
xchg
mov
xor
repz
loop
mov
lds
inc
(bad)
mov
xor
(bad)
mov
lock
add
ret
(bad)
loop
(bad)
fdiv
loopne
cmc
cmc
mov
lahf
rcl
data16
xor
outs
add
cmp
jns
xadd
cmc
pop
adc
cmp
push
lock
lds
and
and
mov
loopne
aad
xor
adc
arpl
les
movs
dec
inc
pop
lds
inc
(bad)
sbb
add
push
jbe
pop
aas
ja
popa
ja
in
mov
test
jb
inc
punpcklbw
arpl
hlt
jae
arpl
jle
push
push
(bad)
xchg
mov
gs
add
xchg
xchg
xchg
xchg
adc
xor
inc
lods
movs
and
cmps
test
pusha
mov
xor
not
in
(bad)
adc
inc
loop
mov
mov
xor
in
mov
ret
xor
gs
(bad)
in
mov
and
adc
into
lahf
aad
xor
adc
add
add
or
add
push
adc
ss
aaa
add
lds
dec
and
mov
loopne
aad
xor
adc
push
push
(bad)
les
aaa
movs
dec
inc
pop
lds
inc
(bad)
push
inc
inc
aam
add
push
(bad)
aad
aas
jo
ins
ja
in
mov
test
gs
inc
pcmpgtw
pop
addr16
jae
pusha
xchg
jbe
dec
cmc
jg
push
push
cmps
xchg
movs
add
push
hlt
movs
test
push
xchg
xchg
adc
inc
xor
mov
lods
mov
and
jo
inc
test
mov
xor
pusha
cmps
push
movs
mov
xor
int
rol
mov
retf
korb
scas
rol
clc
push
out
shl
mov
shl
add
ret
lock
je
and
adc
movs
lahf
xlat
xchg
or
sar
and
outs
xor
xchg
and
push
cmc
sbb
imul
pop
lock
lds
and
cmp
sbb
or
add
and
xor
pop
adc
push
push
les
movs
gs
lds
pop
(bad)
push
inc
inc
aam
add
push
ins
aad
aas
outs
imul
inc
in
mov
test
gs
dec
cvtdq2ps
fs
inc
mov
pop
cmc
push
pop
push
push
mov
push
stos
gs
cli
add
ret
adc
inc
xor
mov
mov
jo
inc
xchg
movs
(bad)
mov
pusha
mov
xor
xchg
xlat
jecxz
icebp
adc
and
out
scas
mov
push
test
test
cli
mov
icebp
fs
xor
add
ret
(bad)
popf
data16
and
adc
mov
pop
and
add
xor
xchg
add
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
(bad)
data16
cmc
je
and
jne
lahf
fist
push
shr
sbb
jns
sbb
cmp
adc
das
mov
aaa
add
and
pop
cmps
sbb
adc
push
loopne
aad
xor
or
arpl
les
push
lds
cmp
aam
add
push
inc
aad
aas
outs
test
in
mov
test
pop
out
addr16
hlt
push
mov
adc
and
dec
push
cmps
xchg
mov
gs
test
push
add
jne
xchg
adc
mov
and
jo
inc
scas
movs
mov
movs
cmps
movs
xor
pusha
cmps
push
movs
mov
xor
jecxz
rol
mov
inc
jecxz
ret
inc
stc
xbegin
xor
lds
lds
xchg
add
ret
repz
je
and
adc
cmps
lahf
xlat
xchg
and
and
add
sbb
cmp
add
adc
xor
cmp
pop
lds
and
and
xor
and
xor
pop
adc
push
push
les
nop
aaa
movs
jne
inc
lds
inc
mov
aam
add
push
pop
aad
aas
jnp
ins
ja
in
mov
test
adc
dec
packuswb
ja
gs
jbe
xchg
data16
cmc
jne
push
push
mov
push
repz
test
push
fld
xor
stos
adc
xchg
aam
jmp
es
cmps
mov
push
std
mov
xor
xchg
xlat
loop
loope
mov
in
fiadd
scas
mov
add
xor
fdivr
lock
xchg
add
ret
(bad)
in
fsub
loop
jmp
loopne
mov
lahf
aam
adc
and
in
add
push
xchg
pop
cmp
push
rol
pop
adc
cmp
sbb
push
lds
sbb
es
lfs
loopne
aad
xor
adc
les
xor
arpl
inc
(bad)
js
pusha
aam
add
push
jle
push
aas
jbe
inc
ja
in
mov
test
gs
in
pcmpgtw
bound
hlt
jl
arpl
je
push
push
lea
mul
test
push
rol
jne
xchg
in
adc
lods
mov
and
jo
inc
mov
iret
movs
mov
pusha
mov
xor
not
in
loopne
mov
mov
fiadd
scas
ret
mov
xor
fdivr
ret
xor
gs
(bad)
loop
mov
and
adc
loop
xlat
xchg
or
shl
add
add
push
rol
adc
jg
mov
aaa
add
lds
dec
and
add
and
jnp
sbb
(bad)
arpl
les
cmp
outs
das
je
add
aam
add
push
pop
aad
aas
jno
ins
ja
in
mov
test
gs
in
andps
inc
addr16
dec
mov
dec
cmc
es
push
push
adc
sti
add
add
jne
xchg
lahf
adc
div
fild
movs
cwde
and
loope
movs
xor
pusha
cmps
push
movs
mov
xor
int
rol
mov
inc
jecxz
mov
push
out
add
xor
out
in
jbe
test
add
ret
data16
xor
in
jne
lahf
int3
xchg
and
and
add
jge
adc
rol
sbb
sub
movs
adc
or
adc
pop
cmps
(bad)
pop
mov
loopne
aad
xor
push
(bad)
addr16
pusha
les
imul
das
cmp
sbb
aam
add
push
jno
pop
aas
jne
push
ja
in
mov
test
pusha
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
ja
pop
nop
cmp
dec
das
jnp
push
inc
push
aam
add
push
push
aad
aas
jb
inc
ja
in
mov
test
in
unpckhps
data16
adc
jne
cmc
dec
pop
dec
push
mov
push
scas
gs
test
scas
out
sti
push
xchg
xchg
jne
xchg
lods
adc
xchg
mov
and
jo
inc
stos
movs
and
cmps
scas
xor
pusha
mov
xor
not
loopne
fist
mov
inc
loop
test
cld
push
jecxz
ret
xor
cmp
div
lea
iret
(bad)
(bad)
out
je
and
adc
out
lahf
int3
xchg
xor
adc
add
add
rol
adc
jg
mov
aaa
add
lds
dec
and
pop
loopne
aad
xor
adc
arpl
les
xor
lds
inc
(bad)
jge
and
data16
push
xor
inc
aas
jb
push
ja
in
mov
test
pop
in
orps
cmp
hlt
inc
mov
adc
addr16
push
push
xchg
xchg
movs
add
push
hlt
movs
test
push
add
jne
xchg
call
div
rol
movs
and
cmps
mov
lods
pusha
cmps
push
cmps
mov
xor
repz
rol
mov
xchg
mov
inc
ret
push
retf
xor
loope
cmc
jbe
test
add
ret
repnz
je
and
adc
neg
and
add
pop
xchg
pop
add
adc
xor
add
push
lds
and
cmps
and
adc
xor
and
ss
pop
(bad)
push
push
les
xor
bound
dec
mov
aam
add
push
ins
aad
aas
jnp
ss
in
mov
test
inc
in
pcmpgtw
dec
addr16
hlt
imul
push
push
mov
nop
add
push
icebp
mov
movs
adc
inc
xor
mov
xchg
rol
movs
mov
cwde
cmps
pushf
xor
pusha
mov
xor
repz
loop
cld
adc
inc
out
scas
mov
repz
rol
(bad)
xor
fstp
lock
add
ret
(bad)
out
(bad)
out
je
and
adc
cld
lahf
xlat
xchg
add
and
in
add
pop
xchg
pop
adc
adc
xor
inc
lock
lds
dec
and
cmp
es
xor
pop
(bad)
push
push
push
les
xor
dec
inc
inc
lds
inc
(bad)
jns
and
mov
push
push
aad
aas
jo
popa
ja
in
mov
test
outs
in
(bad)
out
addr16
hlt
jne
arpl
fs
push
push
lea
sti
pop
mov
adc
inc
xchg
xchg
mov
xor
inc
stos
movs
fwait
and
xchg
mov
xor
not
loopne
ficom
mov
inc
loop
cmc
inc
rol
push
jmp
aad
push
cmp
fs
xor
gs
(bad)
jecxz
in
shl
out
in
mov
lahf
rcl
adc
jnp
xor
add
sub
add
push
adc
xor
and
and
pop
cmps
pop
daa
inc
mov
loopne
aad
xor
adc
dec
push
arpl
jg
push
lds
cmp
push
inc
ja
je
inc
mov
push
jns
jo
outs
test
in
mov
test
pop
in
nop
pop
addr16
push
mov
inc
cmc
push
pop
dec
push
cmps
xchg
mov
mov
inc
ret
adc
inc
xor
jmp
xor
inc
scas
movs
test
call
push
mov
fistp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
push
mov
movs
stos
and
mov
xor
shl
int
jecxz
movs
adc
and
out
scas
mov
ret
push
cld
add
xor
out
mov
icebp
les
leave
add
ret
(bad)
cdq
data16
shl
loopne
mov
mov
lahf
into
xchg
aaa
pop
and
add
jge
inc
pop
add
adc
sub
jbe
add
and
adc
mov
loopne
aad
xor
adc
dec
push
push
les
cmp
arpl
jbe
inc
inc
pop
aam
add
push
outs
aad
aas
jae
popa
ja
in
mov
test
dec
in
(bad)
out
outs
hlt
jle
arpl
arpl
push
push
(bad)
xchg
mov
gs
add
xchg
xchg
xchg
mov
cmp
div
xlat
inc
xchg
movs
test
es
cmps
mov
push
mov
leave
xor
rcl
inc
loop
mov
cmc
(bad)
loop
mov
add
xor
fnstsw
ret
xor
gs
(bad)
jmp
int3
out
je
and
adc
hlt
lahf
aad
push
pop
adc
add
or
adc
add
pop
adc
xor
movs
daa
lock
lds
and
das
cmps
sbb
adc
xor
adc
dec
push
(bad)
les
xor
outs
das
dec
(bad)
outs
inc
jg
inc
add
push
sub
test
in
mov
test
sbb
inc
punpcklbw
das
addr16
hlt
push
jne
cmc
inc
pop
push
push
xchg
xchg
movs
add
push
icebp
gs
test
add
add
jne
xchg
xchg
adc
lods
mov
and
jo
inc
jmp
pushf
and
pushf
cmps
les
pusha
cmps
push
cmps
mov
xor
jecxz
rol
mov
int3
(bad)
jecxz
rol
in
enter
(bad)
aad
push
(bad)
mov
lds
xchg
add
ret
data16
fdiv
jecxz
mov
lahf
fist
cmp
jo
es
push
xchg
pop
aas
xchg
adc
push
cmc
push
adc
xor
adc
push
lds
xor
and
adc
xor
and
ss
pop
(bad)
inc
push
les
movs
jne
push
lds
inc
(bad)
sbb
add
push
imul
inc
ja
in
mov
test
dec
in
punpcklbw
pop
addr16
jne
xchg
gs
cmc
jge
push
push
mov
push
hlt
mov
push
xchg
xchg
adc
inc
xor
cwde
adc
mov
jo
inc
xchg
movs
mov
es
cmps
cwde
xor
pusha
mov
xor
jecxz
loop
mov
(bad)
out
scas
fadd
(bad)
call
(bad)
xor
xchg
icebp
repz
gs
(bad)
(bad)
lock
je
and
adc
out
lahf
rcl
adc
imul
and
xchg
pop
gs
sbb
adc
cs
aaa
add
and
push
cmps
sbb
pop
mov
loopne
aad
xor
or
arpl
les
movs
dec
inc
inc
lds
je
inc
ins
aam
add
push
dec
aad
aas
ins
not
inc
in
mov
test
in
andps
jo
jp
dec
mov
dec
cmc
cmp
dec
push
mov
push
test
leave
test
add
into
xchg
jne
xchg
mov
lods
mov
and
jo
inc
hlt
movs
fisub
lahf
cmps
scas
xor
pusha
mov
xor
rcl
inc
rcl
and
loop
mov
push
jmp
ret
xor
sti
mov
ret
fs
xor
add
iret
(bad)
sahf
data16
out
je
and
adc
mov
pop
adc
add
cmp
add
gs
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
aad
(bad)
out
je
and
cmps
lahf
aad
xor
and
add
jp
add
rol
sbb
sub
inc
lock
lds
cmp
cmps
or
es
loopne
aad
xor
(bad)
inc
push
pusha
les
push
jae
push
mov
and
imul
aad
aas
jae
ins
ja
in
mov
test
pop
in
orps
je
pop
hlt
push
mov
inc
cmc
and
dec
push
(bad)
xchg
xchg
add
push
jmp
add
cmps
xchg
adc
inc
xor
mov
ss
and
leave
inc
xchg
movs
mov
es
mov
push
cld
mov
xor
int
loop
lods
adc
inc
out
scas
ret
(bad)
call
(bad)
xor
(bad)
mov
lock
xchg
add
ret
(bad)
in
repz
je
and
adc
lock
rcl
and
je
xor
outs
add
pop
rol
pop
adc
xor
sbb
push
lds
or
arpl
sbb
xor
adc
les
xor
arpl
dec
(bad)
cmova
aam
add
push
push
aad
aas
jbe
jno
inc
in
mov
test
pop
in
punpckhdq
pop
addr16
push
arpl
dec
pop
push
push
mov
push
repz
mov
push
xchg
xchg
xchg
lock
div
rol
movs
and
cmps
cwde
xor
pusha
mov
xor
out
in
rcl
cmc
and
loop
int
(bad)
push
mov
xor
out
mov
ret
xor
gs
(bad)
in
int3
out
je
and
adc
fistp
adc
add
add
or
add
push
adc
ss
aaa
add
lds
and
and
mov
loopne
aad
xor
sbb
jae
(bad)
les
movs
inc
lds
inc
mov
aam
add
push
push
aad
aas
jo
ss
in
mov
test
dec
in
packuswb
jae
push
hlt
jno
pusha
xchg
jbe
or
jp
push
push
adc
xchg
add
xchg
xchg
jne
xchg
mov
div
(bad)
inc
jmp
cmps
cmps
mov
push
cmps
mov
xor
repz
rol
mov
fcmovnb
fld
scas
fadd
(bad)
rcl
shl
mov
lds
xchg
add
ret
data16
cdq
je
and
adc
clc
lahf
rcl
ins
shl
add
add
adc
push
cmc
add
jg
mov
aaa
xor
and
and
add
and
ja
sub
ja
pusha
les
sub
bound
jnp
inc
inc
push
aam
add
push
pop
aad
aas
ja
inc
ja
in
mov
test
inc
in
andnps
pop
addr16
dec
mov
dec
cmc
cmp
dec
push
lea
in
mov
inc
fld
xor
mov
mov
jo
inc
jmp
iret
fsub
(bad)
cmps
nop
xor
pusha
mov
xor
int
jecxz
fcom
mov
inc
out
scas
hlt
inc
aam
mov
xor
repz
icebp
shl
retf
in
gs
(bad)
(bad)
out
je
and
adc
fistp
and
add
jl
sbb
push
xchg
xor
adc
xor
adc
add
movs
cmovg
sbb
pop
mov
loopne
aad
xor
or
les
push
dec
inc
cmp
arpl
mov
aam
add
push
push
inc
aas
je
inc
ja
in
mov
test
push
out
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
outs
les
cmp
push
das
jbe
jp
push
aam
add
push
push
aad
aas
jno
ins
ja
in
mov
test
push
in
lsl
pop
addr16
push
mov
outs
cmc
inc
pop
dec
push
mov
mov
lea
clc
push
cdq
xchg
jne
xchg
mov
ss
mov
and
jo
inc
call
iret
fisub
movs
cmps
mov
xchg
pusha
cmps
push
mov
fisttp
inc
ficom
lods
and
jecxz
sti
inc
rol
push
test
loop
cmp
repnz
gs
mov
je
and
adc
cmps
lahf
into
xchg
xor
and
add
sbb
inc
pop
add
adc
xor
add
push
lds
and
and
cmp
xor
adc
ja
les
aaa
movs
or
lds
inc
mov
aam
add
push
popa
aad
aas
jno
inc
ja
in
mov
test
gs
dec
pcmpgtd
ja
popa
hlt
jl
xchg
data16
cmc
jnp
push
push
mov
nop
add
push
icebp
gs
xchg
add
mov
inc
xor
mov
xchg
push
and
jo
inc
jmp
test
cwde
cmps
lds
pusha
mov
xor
repz
loop
lds
mov
rol
mov
out
scas
leave
inc
in
(bad)
fst
(bad)
xor
out
mov
lock
xchg
add
ret
(bad)
cld
mov
je
and
adc
icebp
lahf
(bad)
xchg
adc
and
in
add
or
add
adc
xor
movs
cmp
sbb
xor
daa
cmps
aaa
daa
and
xor
adc
dec
push
push
les
movs
pop
inc
cmp
arpl
dec
(bad)
js
cmp
dec
add
push
push
aad
aas
ja
jno
inc
in
mov
test
dec
in
pcmpgtw
bound
hlt
jl
arpl
je
push
push
lea
lock
sahf
add
xchg
xchg
xchg
nop
adc
div
rol
movs
(bad)
and
cdq
cmps
nop
xor
pusha
mov
xor
rcl
in
out
mov
mov
rol
scas
rol
ret
add
xor
fistp
ret
xor
gs
(bad)
loopne
mov
and
adc
lock
rcl
and
ja
or
add
xchg
sbb
add
adc
jg
mov
aaa
add
lds
and
and
xor
and
jl
sub
push
push
(bad)
les
movs
gs
dec
lds
inc
(bad)
jge
outs
aam
add
push
xor
pop
aas
ja
push
ja
in
mov
test
imul
arpl
hlt
inc
mov
dec
cmc
and
push
push
adc
sti
add
nop
xchg
fist
mov
lods
mov
and
jo
inc
test
xchg
es
mov
and
mov
fist
inc
fcom
test
inc
jecxz
sti
inc
out
loopne
call
aad
push
cmp
call
(bad)
pushf
data16
and
adc
aam
int
and
and
add
cmp
and
push
cmc
sbb
or
add
xor
and
pop
cmps
bound
cs
loopne
aad
xor
or
les
cmp
bound
cmp
aam
add
push
dec
aad
aas
jae
ins
ja
in
mov
test
gs
in
nop
pop
addr16
push
mov
or
pop
pop
dec
push
mov
push
stos
gs
mov
push
cdq
xchg
adc
inc
xor
hlt
adc
mov
jo
inc
scas
movs
test
xchg
mov
xor
ret
xlat
cld
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
(bad)
(bad)
mov
and
jo
inc
xchg
movs
test
es
mov
push
in
mov
call
inc
in
adc
and
loop
mov
mov
push
mov
ret
xor
out
mov
ret
lds
into
add
iret
(bad)
fwait
data16
loope
fsub
out
cli
cmc
mov
lahf
enter
adc
add
jg
inc
pop
xor
xor
add
push
adc
sub
movs
and
pop
lds
push
cmps
and
sbb
xor
or
les
sub
lds
jnp
push
inc
push
aam
add
push
jb
dec
aas
ins
imul
jo
add
dec
in
punpckldq
inc
addr16
hlt
inc
mov
or
js
push
push
adc
mov
push
mov
inc
xor
mov
div
aad
jmp
es
cmps
mov
mov
cmps
push
cmps
mov
xor
int
rol
mov
icebp
korb
scas
mov
add
xor
out
mov
lds
xchg
add
ret
scas
out
je
and
adc
int
fist
aaa
shl
dec
add
or
or
adc
ss
aaa
xor
and
and
outs
daa
es
loopne
aad
xor
adc
les
xor
dec
inc
pop
lds
dec
mov
aam
add
push
popa
aad
aas
je
ins
ja
in
mov
test
(bad)
in
movq
and
hlt
popa
mov
adc
pop
pop
pop
push
mov
push
icebp
mov
mov
inc
xor
mov
mov
mov
and
jo
inc
scas
movs
mov
or
es
cmps
mov
push
std
mov
xor
int
loop
(bad)
adc
inc
out
scas
mov
repz
rol
(bad)
xor
fdivr
lock
xchg
add
ret
(bad)
out
(bad)
shl
loopne
div
lock
lahf
xlat
xchg
adc
and
in
add
add
adc
add
pop
adc
xor
add
push
lds
dec
daa
cmps
aaa
daa
and
xor
adc
dec
push
push
les
aaa
movs
push
inc
pop
lds
inc
(bad)
jns
pop
aam
add
push
push
pop
aas
ja
inc
ja
in
mov
test
jp
inc
punpckldq
arpl
hlt
jno
arpl
gs
push
push
lea
cmc
pop
add
xchg
adc
inc
xchg
xchg
pushf
adc
lods
mov
and
jo
inc
out
mov
es
cmps
test
pusha
mov
xor
out
in
mov
lds
inc
rol
ret
add
xor
iret
mov
ret
repz
gs
(bad)
aam
mov
and
adc
out
lahf
rcl
add
imul
and
xchg
pop
popa
xchg
rol
push
adc
xor
cmp
pop
lds
and
pop
cmps
jns
sbb
or
and
jp
and
dec
push
arpl
inc
nop
push
or
lds
cmp
aam
add
push
xor
jg
jae
inc
ja
in
mov
test
gs
andnps
inc
addr16
inc
mov
dec
cmc
and
dec
push
cmps
xchg
mov
gs
mov
scas
xchg
adc
inc
xor
mov
mov
mov
and
jo
inc
mov
iret
fsub
fwait
cmps
movs
xor
pusha
cmps
push
mov
fisttp
inc
repnz
and
jecxz
mov
push
test
xor
out
out
jbe
test
add
ret
data16
and
adc
movs
lahf
rcl
sbb
jp
ss
xchg
pop
adc
cmc
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
loopne
aam
daa
pop
and
add
jns
aas
pop
sbb
adc
sub
inc
lock
sub
dec
push
cmps
outs
daa
cmp
xor
or
jae
push
les
imul
inc
inc
je
xor
push
ins
aad
aas
outs
not
inc
in
mov
test
in
andnps
pop
outs
hlt
push
mov
dec
cmc
cs
dec
push
lea
jmp
add
mov
inc
xchg
xchg
nop
adc
div
fild
movs
mov
mov
pusha
mov
xor
rcl
in
mov
korw
scas
fadd
(bad)
into
push
fiadd
ret
xor
ret
mov
ret
xor
iret
(bad)
loope
out
test
out
out
(bad)
jne
lahf
rcl
shl
xor
push
xchg
sbb
adc
xor
sbb
push
lds
cmp
xor
cs
loopne
aad
xor
adc
dec
push
(bad)
les
xor
outs
das
dec
(bad)
jl
outs
aam
add
push
sub
imul
jo
data16
test
pop
in
packssdw
das
addr16
je
pusha
xchg
ja
pop
cmc
inc
pop
push
push
mov
movs
add
push
lock
test
add
iret
xchg
ficom
mov
and
jo
inc
xchg
movs
mov
jecxz
xchg
xor
pusha
cmps
push
test
xor
xlat
rol
clc
and
jecxz
into
inc
(bad)
push
rol
xor
aam
div
test
add
ret
data16
shl
jecxz
mov
lahf
fist
daa
shl
syscall
sbb
cmp
cmp
adc
xor
movs
add
push
lds
and
cmps
and
adc
xor
and
ss
pop
(bad)
inc
push
les
xor
lds
inc
(bad)
sbb
add
push
sub
pop
aas
jb
ss
in
mov
test
jp
dec
packuswb
ja
popa
hlt
ja
xchg
data16
cmc
jp
push
push
lea
mul
test
push
fld
xor
mov
sahf
push
and
jo
inc
jmp
es
cmps
cmps
xor
pusha
mov
xor
repz
loop
cmps
adc
inc
out
scas
rol
mov
xor
ret
mov
lock
xchg
add
ret
(bad)
jecxz
(bad)
int3
je
and
adc
in
rcl
(bad)
shl
dec
add
sbb
cmp
and
adc
xor
inc
lock
lds
and
sbb
ds
aad
xor
adc
push
push
push
les
cmp
arpl
jne
push
inc
pop
aam
add
push
(bad)
aad
aas
jb
inc
ja
in
mov
test
gs
in
andnps
pusha
addr16
dec
mov
push
cmc
cmp
dec
push
mov
push
jmp
add
xchg
xchg
jne
xchg
xchg
adc
lods
mov
and
jo
inc
mov
iret
frstor
loop
mov
push
div
lea
xlat
loopne
(bad)
adc
and
loop
mov
push
lock
xor
(bad)
mov
ret
fidiv
enter
int3
gs
(bad)
cdq
in
ret
je
and
adc
(bad)
lahf
int
xor
adc
add
jle
aas
pop
sbb
adc
cs
aaa
add
and
pop
cmps
bound
or
or
and
jp
or
jae
arpl
inc
nop
push
or
lds
jne
add
aam
add
push
jb
dec
aas
jnp
inc
ja
in
mov
test
outs
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
ins
les
sub
outs
das
jne
inc
pop
aam
add
push
dec
aad
aas
jbe
inc
ja
in
mov
test
in
unpcklps
bound
hlt
pop
mov
pop
cmc
inc
pop
dec
push
mov
xchg
add
push
scas
rol
clc
push
lods
xchg
jne
xchg
lods
adc
xchg
mov
and
jo
inc
call
iret
(bad)
cmps
cmps
scas
xor
pusha
mov
xor
int
jecxz
fcom
jmp
scas
test
sti
push
cmc
add
xor
cmp
fs
mov
ret
(bad)
aad
mov
and
adc
loopne
rcl
adc
imul
and
xchg
pop
push
xchg
sub
add
pop
adc
aaa
mov
aaa
add
and
and
add
es
xor
adc
arpl
les
inc
cmp
arpl
inc
(bad)
push
inc
and
pusha
add
push
jb
push
aas
jo
inc
ja
in
mov
test
outs
in
punpcklbw
cmp
mov
ja
jg
push
push
mov
mov
gs
add
xchg
xchg
xchg
mov
lods
push
and
jo
inc
xchg
movs
xchg
out
cmps
lds
pusha
mov
xor
rcl
in
ret
adc
inc
loop
leave
inc
pop
(bad)
push
retf
xor
loopne
hlt
jbe
test
add
iret
(bad)
in
fsub
fbstp
out
out
into
jne
lahf
rcl
pop
shl
or
jb
and
xchg
pop
xor
adc
xor
pop
aaa
add
lds
and
sub
and
xor
adc
les
movs
or
lds
dec
mov
addr16
add
push
sub
test
in
mov
test
in
packssdw
jb
jle
ins
mov
inc
cmc
jp
push
push
adc
xchg
add
add
jne
xchg
in
adc
div
xlat
inc
scas
movs
mov
es
mov
push
cmps
mov
xor
int
rol
mov
icebp
(bad)
jecxz
lds
mov
xor
fnstsw
lds
xchg
add
ret
repz
je
and
adc
sti
lahf
rcl
shl
and
outs
add
sbb
push
cmc
add
jg
mov
aaa
xor
and
and
ss
aad
xor
adc
inc
push
les
aaa
movs
gs
inc
lds
pop
(bad)
sbb
add
push
sub
inc
aas
jno
push
ja
in
mov
test
sbb
dec
(bad)
out
addr16
hlt
inc
mov
pop
cmc
and
xchg
xchg
add
push
cli
gs
mov
mov
xchg
jne
xchg
cwde
adc
mov
jo
inc
test
xchg
mov
pusha
mov
xor
int
jecxz
ficom
lods
and
out
scas
test
out
in
add
xor
cmp
lea
ret
(bad)
sahf
data16
and
adc
rcr
and
add
jg
aas
pop
adc
adc
sub
jbe
add
and
push
cmps
popa
daa
sbb
xor
or
les
push
lds
cmp
outs
inc
js
jbe
inc
mov
push
pop
aad
aas
outs
test
in
mov
test
gs
in
nop
jns
jp
dec
mov
or
pop
pop
push
push
mov
mov
mov
inc
test
xchg
xchg
stos
adc
xchg
mov
and
jo
inc
xchg
movs
mov
es
mov
mov
mov
xor
jmp
aad
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
(bad)
push
and
jo
inc
xchg
movs
mov
es
xchg
pusha
cmps
push
movs
mov
xor
xchg
xlat
rol
mov
inc
jecxz
mov
push
fiadd
shl
mov
shl
add
ret
data16
out
je
and
adc
scas
lahf
xlat
xchg
push
pop
and
add
xchg
adc
cmc
sbb
adc
inc
jg
mov
aaa
xor
and
push
cmps
and
sbb
xor
adc
push
push
les
nop
aaa
movs
jne
pop
lds
pop
mov
aam
add
push
push
aad
aas
jb
ins
ja
in
mov
test
inc
in
punpcklwd
ja
jns
imul
cmc
jp
push
push
(bad)
xchg
nop
add
push
mul
test
push
fld
xor
lock
mov
jo
inc
mov
stos
and
out
cmps
fnstenv
pusha
mov
xor
xchg
xlat
loop
call
mov
test
inc
out
scas
les
(bad)
fst
(bad)
xor
out
hlt
jbe
div
shl
xchg
add
ret
(bad)
jmp
repnz
je
and
adc
ficomp
and
in
add
or
jae
add
pop
adc
gs
aaa
add
and
sub
push
loopne
aad
xor
push
(bad)
jae
push
les
jnp
dec
inc
cmp
arpl
inc
mov
aam
add
push
sub
mul
inc
in
mov
test
gs
inc
(bad)
out
addr16
push
mov
imul
pop
pop
push
mov
mov
gs
test
push
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
lods
movs
lods
and
movs
cmps
xchg
xor
pusha
mov
xor
not
in
not
cmc
and
loop
leave
inc
sti
(bad)
jecxz
mov
ret
xor
stc
mov
ret
xor
add
iret
(bad)
jmp
mov
and
adc
fistp
adc
add
or
jb
add
pop
adc
jae
pop
aaa
add
lds
add
sbb
and
aad
xor
inc
(bad)
arpl
les
xor
outs
das
inc
mov
aam
add
push
jb
data16
aaa
test
in
mov
test
in
punpcklbw
bound
hlt
popa
mov
pop
cmc
inc
pop
pop
push
adc
xchg
add
iret
xchg
jne
xchg
xchg
adc
div
rol
movs
mov
jecxz
(bad)
xor
pusha
cmps
push
cmps
mov
xor
xchg
xlat
rol
mov
int3
(bad)
jecxz
lds
xbegin
xor
fnstcw
lds
xchg
add
ret
data16
shl
jecxz
mov
lahf
aam
and
and
add
add
adc
push
cmc
add
jg
mov
aaa
xor
and
and
sub
and
ja
sub
push
push
pusha
les
movs
jne
push
lds
jnp
inc
inc
fs
add
push
push
aad
aas
jb
push
ja
in
mov
test
push
dec
andnps
pop
addr16
jae
xchg
jl
dec
cmc
outs
pop
push
push
mov
xchg
add
push
sti
mov
push
add
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
pushf
and
mov
shl
mov
xor
repz
jecxz
ficom
mov
inc
out
scas
test
mov
xor
(bad)
mov
icebp
fs
xchg
add
ret
(bad)
loop
fsub
ret
je
and
adc
in
fist
sbb
imul
xor
xchg
pop
sbb
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
in
lahf
fist
sbb
add
xor
xchg
jb
add
adc
jg
mov
aaa
add
lds
and
and
adc
and
jl
sbb
arpl
les
xor
outs
das
inc
(bad)
jl
jo
jo
inc
mov
push
push
jnp
sub
ins
ja
in
mov
test
pop
in
pcmpgtd
cs
hlt
push
mov
jo
pop
pop
or
mov
movs
add
push
mov
add
into
xchg
jne
xchg
adc
mov
and
jo
inc
mov
iret
movs
es
cmps
mov
push
cmps
mov
xor
xchg
xlat
rol
cmc
and
jecxz
retf
(bad)
not
shl
mov
lds
out
add
ret
data16
out
je
and
adc
mov
pop
and
add
or
and
push
cmc
or
outs
mov
aaa
xor
and
cmps
sub
xor
xor
dec
(bad)
inc
push
les
push
movs
pop
inc
xor
bound
dec
(bad)
dec
inc
jae
push
add
push
dec
aad
aas
test
in
mov
test
gs
dec
cmovp
push
addr16
hlt
jae
xchg
popa
jne
cmc
popw
or
(bad)
xchg
xchg
add
push
mov
test
push
lahf
xchg
jne
xchg
out
adc
xchg
test
mov
iret
mov
mov
pusha
mov
xor
jecxz
in
lods
adc
and
out
scas
call
push
(bad)
add
xor
les
repz
call
gs
(bad)
out
je
and
adc
lock
mov
ror
in
add
sub
sbb
add
adc
jg
mov
aaa
add
lds
and
xsha256
cmps
adc
ds
loopne
aad
xor
dec
(bad)
push
push
push
les
dec
movs
gs
outs
lds
push
gs
push
aam
add
push
pop
aad
aas
sub
jno
inc
in
mov
test
jb
inc
cmovg
jg
jge
jae
arpl
jl
movlhps
xchg
movs
add
push
mov
test
push
mov
stc
adc
inc
xchg
xchg
cdq
adc
xchg
mov
and
jo
inc
scas
movs
mov
es
cmps
les
pusha
mov
xor
out
loop
mov
(bad)
loop
jmp
push
rol
ret
xor
ret
jbe
test
add
iret
(bad)
out
je
and
adc
in
mov
adc
pmulhw
add
jbe
adc
add
sbb
outs
mov
aaa
add
lds
and
sub
add
and
jg
dec
mov
pop
dec
(bad)
arpl
les
push
movs
push
inc
aas
lds
dec
(bad)
outs
inc
and
bound
jg
sbb
imul
jo
arpl
inc
in
pcmpgtb
inc
addr16
hlt
inc
mov
jns
and
or
xchg
xchg
movs
add
push
(bad)
gs
push
into
xchg
jne
xchg
call
ss
mov
and
jo
inc
nop
movs
scas
and
(bad)
cmps
cmps
xor
pusha
cmps
push
cmps
mov
xor
repz
rol
cli
and
jecxz
rol
mov
xor
stc
mov
lds
fiadd
ret
in
(bad)
jecxz
mov
lahf
mov
cmp
cmp
xor
add
xor
push
cmc
add
jg
mov
aaa
xor
and
cmp
sbb
and
aad
xor
inc
(bad)
ja
pusha
les
movs
adc
lds
jne
inc
pop
aam
add
push
jno
pop
aas
jne
arpl
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
push
inc
aas
je
dec
ja
in
mov
test
push
push
andnps
inc
addr16
mov
push
cmc
daa
pop
push
push
mov
mov
gs
add
xchg
jne
xchg
mov
(bad)
(bad)
mov
and
jo
inc
xchg
movs
test
es
mov
mov
mov
xor
out
loopne
fst
test
inc
loop
cmc
inc
out
ficom
ret
xor
xchg
ret
fs
xor
gs
(bad)
(bad)
data16
cmc
je
and
adc
in
lahf
fist
sbb
add
cmp
add
add
push
adc
xor
pop
aaa
add
and
adc
mov
loopne
aad
xor
adc
les
cmp
outs
das
jbe
jp
push
aam
add
push
jb
dec
aas
jnp
inc
ja
in
mov
test
imul
jo
jb
pusha
mov
dec
cmc
pusha
pop
push
push
cmps
xchg
mov
cmps
test
push
cmps
xchg
jne
xchg
mov
(bad)
push
and
jo
inc
xchg
movs
mov
es
push
mov
fistp
inc
fst
mov
inc
jecxz
sti
inc
rol
rcl
shl
mov
shl
add
ret
data16
out
je
and
adc
cmps
lahf
aad
xor
and
add
xchg
pop
adc
cmc
sbb
xor
add
xor
and
sbb
and
and
ja
or
addr16
pusha
les
sub
bound
jne
inc
pop
aam
add
push
jno
pop
aas
jne
push
ja
in
mov
test
(bad)
in
orps
pop
addr16
popa
mov
push
cmc
ins
pop
pop
push
mov
push
sti
gs
mov
nop
xchg
jne
xchg
stos
adc
xchg
leave
inc
xchg
xchg
xchg
mov
xor
repz
jecxz
fcom
mov
inc
out
scas
test
aad
rol
xor
int
sti
jbe
div
fs
xor
gs
(bad)
(bad)
out
je
and
adc
loopne
aam
daa
pop
and
add
xor
xchg
add
adc
xor
movs
cmp
pop
lds
and
push
cmps
sbb
xor
aad
xor
sbb
arpl
les
cmp
arpl
jnp
push
inc
push
aam
add
push
push
inc
aas
je
inc
ja
in
mov
test
push
inc
andnps
inc
addr16
mov
push
cmc
daa
pop
push
push
mov
mov
gs
add
xchg
jne
xchg
mov
(bad)
(bad)
mov
and
jo
inc
xchg
movs
test
es
mov
mov
mov
xor
out
loopne
fst
test
inc
loop
cmc
inc
out
ficom
ret
xor
xchg
ret
fs
xor
gs
(bad)
(bad)
data16
cmc
je
and
adc
in
lahf
fist
sbb
add
cmp
add
add
push
adc
xor
pop
aaa
add
and
adc
mov
loopne
aad
xor
adc
les
cmp
outs
das
jbe
jp
push
aam
add
push
jb
dec
aas
jnp
inc
ja
in
mov
test
imul
jo
jb
pusha
mov
dec
cmc
pusha
pop
push
push
cmps
xchg
mov
cmps
test
push
cmps
xchg
jne
xchg
mov
(bad)
push
and
jo
inc
xchg
movs
mov
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
xchg
xchg
push
(bad)
xlat
mov
fcom
mov
inc
loop
test
aad
rol
xor
int
sti
jbe
not
add
call
out
je
and
jne
lahf
aam
sub
shr
es
xor
xchg
add
adc
xor
movs
cmp
pop
lds
and
push
cmps
sbb
xor
aad
xor
sbb
imul
movs
jb
dec
lds
jnp
push
inc
push
aam
and
inc
aas
je
dec
ja
in
mov
test
push
out
addr16
mov
push
cmc
daa
pop
push
push
adc
gs
add
xchg
jne
xchg
mov
(bad)
(bad)
mov
and
jo
inc
xchg
movs
scas
and
mov
mov
mov
mov
xor
in
xlat
cld
inc
fst
test
inc
shr
ficom
movs
xor
xchg
fbld
call
(bad)
(bad)
data16
cmc
je
and
jne
lahf
fist
sbb
add
cmp
add
gs
and
xor
or
lock
lds
and
adc
mov
loopne
aad
xor
adc
les
cmp
push
das
jbe
jp
push
aam
and
dec
push
jb
dec
aas
jnp
dec
ja
in
mov
test
outs
in
cvtdq2ps
jo
jb
pusha
mov
dec
cmc
pusha
pop
push
push
lods
xchg
mov
cmps
test
push
cmps
xchg
jne
xchg
mov
(bad)
push
and
jo
inc
xchg
movs
mov
es
push
lods
mov
xor
jmp
adc
inc
enter
rol
rcl
movs
xor
sar
fs
xor
gs
(bad)
aad
(bad)
out
je
and
cmps
lahf
aad
add
aas
test
sar
ss
xchg
pop
adc
cmc
or
xor
or
push
movs
cmp
and
sbb
and
inc
aad
xor
adc
ins
push
jl
pop
nop
sub
push
das
jne
inc
pop
aam
and
aas
jne
arpl
in
mov
test
pusha
in
orps
pop
addr16
popa
mov
push
cmc
ins
pop
pop
push
test
push
sti
gs
pop
nop
xchg
jne
xchg
stos
adc
lea
leave
inc
xchg
xchg
xchg
les
mov
xor
ret
xlat
inc
mov
inc
aam
test
aad
rol
xor
int
sti
jbe
not
add
call
out
je
and
jne
lahf
aam
sub
shr
es
xor
xchg
add
adc
xor
movs
cmp
pop
lds
and
push
cmps
sbb
xor
aad
xor
sbb
imul
movs
jb
dec
lds
jnp
push
inc
push
aam
and
inc
aas
je
dec
ja
in
mov
test
push
out
addr16
mov
push
cmc
daa
pop
push
push
adc
gs
add
xchg
jne
xchg
mov
(bad)
(bad)
mov
and
jo
inc
xchg
movs
scas
and
mov
mov
mov
mov
xor
in
xlat
cld
inc
fst
test
inc
shr
ficom
movs
xor
xchg
shl
call
(bad)
(bad)
data16
cmc
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
out
aad
push
repz
lds
lock
iret
(bad)
std
data16
shl
out
in
fdiv
lahf
out
xchg
push
pop
adc
add
sbb
add
add
pop
adc
or
movs
xor
lds
cmps
data16
and
xor
sub
dec
push
les
push
movs
cmovne
outs
das
pop
mov
aam
add
push
js
jb
dec
div
ja
in
mov
test
dec
in
vmread
jge
push
hlt
popa
mov
outs
cmc
pop
pop
ins
push
xchg
xchg
mov
gs
test
push
mov
jne
xchg
mov
lods
mov
and
jo
inc
out
movs
mov
mov
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
call
shl
mov
iret
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
enter
and
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
popa
daa
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
push
dec
aad
aas
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
scas
xchg
xchg
add
push
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
mov
xor
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
clc
xor
cmp
xor
add
mov
out
je
and
adc
mov
pop
and
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
cmp
mov
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
dec
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
lea
cmps
gs
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
lahf
and
mov
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
ret
xor
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
adc
add
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
cmps
gs
add
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
sub
js
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
xchg
xchg
mov
gs
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
and
cmps
lahf
xor
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
shl
mov
iret
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
or
shl
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
pop
movs
add
cmps
cmp
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
add
push
jg
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
(bad)
xchg
xchg
add
push
movs
gs
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
mov
xor
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
(bad)
xor
cmp
xor
add
mov
out
je
and
adc
mov
pop
and
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
cmp
mov
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
dec
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
lea
cmps
gs
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
lahf
and
mov
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
ret
xor
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
adc
add
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
cmps
gs
add
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
sub
js
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
xchg
xchg
mov
gs
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
and
cmps
lahf
xor
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
shl
mov
iret
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
or
shl
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
pop
movs
add
cmps
cmp
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
add
push
jg
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
(bad)
xchg
xchg
add
push
movs
gs
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
mov
xor
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
(bad)
xor
cmp
xor
add
mov
out
je
and
adc
mov
pop
and
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
cmp
mov
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
dec
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
lea
cmps
gs
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
lahf
and
mov
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
ret
xor
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
adc
add
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
cmps
gs
add
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
sub
js
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
xchg
xchg
mov
gs
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
and
cmps
lahf
xor
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
shl
mov
iret
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
or
shl
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
pop
movs
add
cmps
cmp
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
add
push
jg
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
(bad)
xchg
xchg
add
push
movs
gs
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
mov
xor
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
(bad)
xor
cmp
xor
add
mov
out
je
and
adc
mov
pop
and
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
cmp
mov
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
dec
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
lea
cmps
gs
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
lahf
and
mov
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
ret
xor
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
adc
add
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
cmps
gs
add
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
sub
js
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
xchg
xchg
mov
gs
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
and
cmps
lahf
xor
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
shl
mov
iret
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
or
shl
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
pop
movs
add
cmps
cmp
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
add
push
jg
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
(bad)
xchg
xchg
add
push
movs
gs
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
mov
xor
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
(bad)
xor
cmp
xor
add
mov
out
je
and
adc
mov
pop
and
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
cmp
mov
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
dec
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
lea
cmps
gs
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
lahf
and
mov
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
ret
xor
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
adc
add
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
cmps
gs
add
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
sub
js
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
xchg
xchg
mov
gs
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
and
cmps
lahf
xor
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
shl
mov
iret
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
or
shl
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
pop
movs
add
cmps
cmp
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
add
push
jg
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
(bad)
xchg
xchg
add
push
movs
gs
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
mov
xor
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
(bad)
xor
cmp
xor
add
mov
out
je
and
adc
mov
pop
and
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
cmp
mov
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
dec
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
lea
cmps
gs
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
lahf
and
mov
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
ret
xor
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
adc
add
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
cmps
gs
add
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
sub
js
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
xchg
xchg
mov
gs
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
and
cmps
lahf
xor
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
shl
mov
iret
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
or
rcl
test
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
push
movs
add
cmps
cmp
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
add
push
jg
jb
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
(bad)
xchg
xchg
add
push
xchg
mov
cwde
push
popf
xchg
jne
xchg
mov
mov
and
mov
mov
mov
out
mov
push
mov
fild
inc
rcl
shl
out
scas
fld
(bad)
repnz
rol
xor
repnz
repz
xor
add
ret
(bad)
clc
data16
out
je
and
adc
fistp
and
add
push
xchg
add
adc
or
xor
xor
outs
and
cmp
mov
loopne
aad
xor
cs
push
push
push
les
movs
dec
inc
outs
lds
pop
(bad)
pop
inc
jne
inc
add
push
dec
aad
aas
dec
div
inc
in
mov
test
in
movd
es
ins
mov
pop
cmc
push
pop
push
add
push
nop
gs
test
push
add
mov
div
mov
test
(bad)
and
mov
pusha
mov
xor
rcl
loop
rcl
(bad)
and
loop
fiadd
mov
xor
repz
lds
lock
iret
(bad)
std
data16
shl
out
in
fdiv
lahf
out
xchg
push
pop
adc
add
sbb
add
add
pop
adc
or
movs
xor
lds
pop
cmps
sbb
add
push
loopne
aad
xor
(bad)
inc
push
popa
les
nop
ja
jae
jns
adc
jp
push
inc
jg
and
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
in
int
ss
sub
add
xchg
gs
xor
daa
cmc
sbb
sub
xor
and
and
sbb
sbb
xor
aad
xor
push
(bad)
adc
les
jae
adc
and
pop
das
jl
inc
inc
cmp
ja
data16
push
sub
inc
aas
ins
imul
ja
in
mov
test
add
xor
addr16
xchg
push
adc
gs
dec
push
xchg
xchg
sahf
add
push
mov
leave
test
add
fld
movs
jne
xchg
hlt
adc
icebp
mov
and
jo
inc
hlt
movs
shl
cmps
fnstenv
pusha
xchg
mov
xor
mov
rol
repnz
xchg
scas
inc
(bad)
movs
push
repnz
xor
lds
(bad)
fs
xor
add
mov
frstor
out
je
and
adc
in
into
xchg
push
pop
and
add
cmp
pop
pop
jns
aaa
shl
push
adc
sub
movs
push
lock
cs
push
cmps
pusha
daa
inc
mov
loopne
aad
xor
or
push
push
pop
les
jo
or
lds
das
jge
sbb
and
xor
inc
aas
outs
div
ja
in
mov
test
pop
out
addr16
push
mov
or
popa
pop
dec
push
leave
xchg
xchg
add
push
mov
mov
mov
adc
inc
mov
adc
mov
mov
inc
jmp
iret
popf
es
cmps
fnsave
pusha
test
mov
xor
xchg
xlat
loopne
loop
repz
fild
mov
xor
sar
fs
xor
add
mov
fisub
out
je
and
adc
in
int3
xchg
adc
push
test
shl
in
add
cmp
xchg
shl
jg
mov
aaa
add
and
sbb
daa
daa
pop
mov
loopne
aad
xor
or
les
jb
dec
inc
and
adc
inc
and
mov
push
xor
inc
aas
ins
div
in
mov
test
gs
ss
cmp
mov
adc
fs
dec
push
rcl
mov
aam
loopne
lahf
out
mov
adc
inc
cmps
jne
xchg
call
ss
jo
inc
scas
movs
les
loopne
lds
pusha
adc
fisttp
out
lock
xchg
scas
std
inc
popf
(bad)
mov
xor
les
shl
add
dec
cdq
je
and
adc
lock
int3
xchg
ss
adc
in
add
xchg
gs
xor
es
and
sub
xor
push
movs
pop
lock
imul
lfs
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
loopne
test
jbe
test
add
lods
(bad)
fsub
out
je
and
adc
std
lahf
rcl
xor
xor
xor
cmp
xchg
shl
and
pop
xchg
adc
mov
aaa
shld
adc
ds
push
cmps
pusha
daa
inc
mov
loopne
aad
xor
or
les
jo
or
lds
jge
sbb
cmp
push
xor
inc
aas
outs
div
ja
in
mov
test
pop
out
addr16
push
mov
or
popa
pop
dec
push
fist
mov
mov
mov
adc
inc
mov
adc
mov
shl
jo
inc
jmp
iret
popf
es
cmps
fnsave
pusha
sahf
push
stc
mov
xor
xchg
xlat
cld
inc
loop
repz
(bad)
scas
cld
inc
mov
cld
xor
sar
fs
xor
add
jecxz
fisub
out
je
and
adc
in
int3
xchg
push
pop
jno
daa
shl
in
add
cmp
xchg
sar
pop
adc
cs
aaa
sbb
add
adc
je
inc
movs
es
sbb
daa
daa
pop
mov
loopne
aad
xor
or
les
jb
dec
inc
and
inc
das
jle
add
aam
cmp
push
xor
inc
aas
ins
div
adc
inc
mov
test
gs
bound
pop
out
addr16
xchg
cmp
cmc
fs
dec
push
rcl
mov
aam
loopne
xchg
mov
adc
inc
mov
adc
push
xchg
inc
scas
movs
les
loopne
lds
pusha
lahf
push
mov
fisttp
out
lock
ret
inc
popf
(bad)
mov
xor
les
fsub
rol
out
fsub
out
je
and
adc
loope
int
pop
pop
jo
shl
in
add
xchg
gs
xor
aas
cmc
sbb
sub
ss
push
movs
pop
lock
imul
pop
mov
loopne
aad
xor
push
(bad)
adc
les
jae
adc
and
inc
das
jl
inc
inc
cmp
ja
jl
pop
push
sub
inc
aas
ins
idiv
ja
in
mov
test
add
arpl
pop
out
addr16
xchg
jp
adc
gs
dec
push
xchg
xchg
icebp
add
push
mov
leave
test
add
fld
mov
adc
repz
and
jo
inc
hlt
movs
shl
cmps
fnstenv
pusha
pushf
push
mov
fisttp
inc
out
repnz
ret
scas
inc
(bad)
movs
push
repnz
xor
lds
xchg
fs
xor
add
loop
fsub
out
je
and
adc
in
into
xchg
push
pop
imul
outs
cmp
xchg
sar
and
pop
xchg
adc
mov
aaa
xor
lds
and
add
add
add
cmp
or
les
jo
or
lds
jge
inc
inc
and
jne
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
cld
inc
mov
in
into
aad
push
sar
fbstp
rol
repnz
fisub
out
je
and
adc
cld
lahf
int
cmp
xor
add
cmp
cmp
adc
cmc
and
je
add
cs
aaa
sbb
add
adc
je
inc
movs
cmovg
mov
loopne
aad
xor
or
les
jae
pop
inc
dec
lds
das
jle
add
aam
cmp
pop
aas
ins
mul
dec
in
mov
test
in
minps
cmp
mov
jg
jge
push
push
mov
mov
mov
mov
mov
pop
xchg
stc
jne
xchg
xchg
adc
mov
xchg
inc
mov
iret
sahf
es
lds
pusha
fst
mov
xor
rcl
inc
(bad)
adc
and
xchg
scas
std
inc
popf
(bad)
mov
xor
fnstsw
aam
shl
rol
mov
out
je
and
jne
lahf
int
push
pop
das
test
shl
in
add
and
and
jge
and
sub
xor
or
push
lock
movs
jae
sbb
sbb
xor
aad
xor
push
(bad)
or
les
jb
jo
dec
lds
das
jge
push
inc
push
aam
cmp
fs
sub
inc
aas
ins
div
ja
in
mov
test
push
out
addr16
inc
mov
adc
gs
dec
push
nop
xchg
lods
add
push
lods
gs
add
xchg
jne
xchg
hlt
adc
jmp
jo
inc
nop
movs
scas
and
mov
mov
mov
push
test
lea
xlat
out
inc
call
repz
nop
scas
jecxz
std
(bad)
ficom
mov
push
lds
int3
fidiv
int
aam
loopne
mov
frstor
out
je
and
jne
lahf
rcl
xor
xor
xor
cmp
pop
pop
jns
aaa
sar
adc
sub
or
shld
adc
ds
push
cmps
pusha
daa
inc
mov
loopne
aad
xor
or
les
ins
movs
je
inc
lds
das
jge
sbb
sub
dec
push
pop
aad
aas
jae
push
ja
in
mov
test
outs
in
subps
addr16
push
mov
ja
jo
dec
push
stos
xchg
scas
add
push
mov
sahf
test
push
rol
jne
xchg
cwde
adc
mov
jo
inc
xchg
movs
mov
es
cmps
fnsave
pusha
retf
mov
xor
not
hlt
inc
repz
and
lahf
scas
cld
inc
mov
mov
push
sar
iret
fbstp
rol
mov
fisub
out
je
and
adc
cld
lahf
int
aas
pop
and
daa
shl
in
add
cmp
xchg
sar
pop
adc
xor
adc
adc
adc
sbb
mov
loopne
aad
xor
or
les
jae
pop
inc
dec
lds
jle
add
aam
and
push
xor
inc
aas
ins
div
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
in
repz
nop
scas
std
inc
popf
(bad)
mov
xor
fnstsw
xchg
shl
rol
out
(bad)
fsub
out
je
and
adc
loope
int
pop
pop
daa
test
shl
in
add
and
sar
adc
cs
aaa
sub
and
sbb
sbb
xor
xor
adc
or
nop
jb
pop
inc
pop
lds
jge
push
inc
pop
aam
and
fs
push
aad
aas
ins
div
ja
in
mov
test
in
cmovae
pop
addr16
dec
mov
js
jnp
dec
push
xchg
xchg
xchg
add
push
lods
gs
test
mov
inc
in
mov
mov
in
mov
and
jo
inc
mov
iret
popf
es
mov
push
test
mov
xlat
aad
call
repz
leave
scas
jecxz
std
mov
xor
fstp
repnz
int
(bad)
in
gs
(bad)
fsub
out
je
and
jne
lahf
rcl
xor
xor
sbb
cmp
xchg
and
addr16
and
pop
xchg
pop
jg
mov
aaa
xor
lds
add
push
loopne
aad
xor
or
les
ins
movs
pop
inc
dec
lds
(bad)
jns
push
aam
and
pop
aas
jae
sub
mov
test
jnp
pusha
minps
ja
jle
inc
mov
ja
jg
dec
push
rcl
mov
mov
test
mov
inc
out
mov
jmp
and
jo
inc
mov
iret
pushf
es
cmps
mov
mov
push
scas
mov
xor
(bad)
xlat
in
repz
and
shr
push
jecxz
cmps
xor
fistp
cmc
fbstp
rol
jmp
out
je
and
jne
lahf
int
adc
adc
add
cmp
cmp
adc
adc
xor
adc
adc
cmp
sbb
mov
loopne
aad
xor
or
adc
les
jae
je
inc
lds
arpl
jge
inc
aam
and
pusha
push
pop
aad
aas
ins
div
jb
pop
mov
test
ins
in
subps
pop
addr16
dec
mov
jg
jle
push
push
int
movs
add
push
mov
call
push
xchg
xchg
jne
xchg
xchg
adc
lock
and
jo
inc
xchg
movs
movs
and
popf
cmps
cmps
xor
pusha
(bad)
push
xor
push
rcl
rol
in
and
int3
scas
cld
inc
stc
(bad)
rcl
movs
xor
fidivr
les
rol
loopne
frstor
out
je
and
jne
lahf
rcl
aas
shl
in
add
and
das
shr
adc
sub
movs
push
lock
movs
or
cmps
jge
pop
mov
loopne
aad
xor
push
(bad)
adc
les
jb
jo
dec
lds
jge
push
inc
push
aam
and
push
sub
inc
aas
ins
imul
ja
in
mov
test
push
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
loope
in
and
xchg
scas
inc
(bad)
movs
push
repnz
xor
fdivr
fsub
int
aam
out
jmp
fsub
out
je
and
adc
ret
lahf
mov
shl
test
outs
and
adc
add
xor
jg
mov
aaa
sub
and
add
cmp
and
jbe
add
dec
push
push
les
sub
arpl
popa
(bad)
jp
gs
add
push
(bad)
aad
aas
pop
div
ja
in
mov
test
gs
in
cmovo
jo
inc
hlt
jno
arpl
and
jns
xchg
xchg
mov
test
push
cmps
xchg
jne
xchg
mov
lods
mov
and
jo
inc
cmps
movs
mov
es
push
mov
fistp
inc
not
lods
and
out
scas
loopne
rol
loop
rol
ret
xor
cmp
fs
xor
gs
pop
data16
out
je
and
adc
mov
pop
push
test
shr
pop
add
and
adc
add
pop
adc
sbb
pop
lock
lds
shld
dec
add
xor
and
jp
dec
mov
pop
cmp
push
push
dec
les
cmp
data16
(bad)
(bad)
inc
jp
pop
add
push
popa
aad
aas
push
imul
jbe
push
mov
test
jle
inc
cmovno
pop
addr16
hlt
jo
popa
xchg
jg
inc
cmc
and
jp
(bad)
xchg
mov
push
in
gs
test
push
nop
xchg
jne
xchg
in
adc
mov
test
inc
mov
mov
xchg
mov
xor
int
(bad)
inc
repnz
inc
jecxz
loope
cli
(bad)
in
rol
shl
mov
out
xlat
xor
gs
pop
lock
je
and
adc
mov
pop
or
add
and
sbb
add
push
adc
adc
sub
lock
lds
and
add
xor
and
aas
xor
cmp
push
push
dec
les
sub
lds
pusha
(bad)
push
inc
(bad)
aam
add
push
sub
div
imul
ja
dec
in
cmovb
inc
addr16
hlt
jl
pusha
xchg
ss
cmc
cmp
je
lea
jmp
add
mov
inc
xor
call
and
jo
inc
out
movs
(bad)
and
mov
xor
mov
xor
rcl
leave
inc
int
mov
inc
out
loop
out
cli
push
fadd
shl
mov
mul
mov
ret
pop
data16
lds
loope
push
ret
lahf
cli
xchg
push
pop
push
test
shr
dec
add
and
adc
add
pop
adc
sbb
adc
or
sbb
and
sbb
cmp
aad
xor
or
les
ins
movs
je
inc
lds
jl
jns
push
aam
and
push
xor
inc
aas
outs
div
ja
in
mov
test
push
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
std
inc
xlat
(bad)
rcl
in
into
aad
push
sar
icebp
fbstp
rol
icebp
(bad)
fsub
out
je
and
jne
lahf
stc
xchg
push
pop
and
or
ins
in
add
and
add
push
cmc
pop
adc
aas
mov
aaa
xor
and
add
adc
and
aas
xor
pop
(bad)
addr16
arpl
jne
movs
ja
pop
lds
(bad)
mov
aam
add
push
sub
inc
aas
jp
ss
in
mov
test
jle
dec
cmovno
and
hlt
push
mov
adc
js
pop
push
mov
sahf
add
push
hlt
gs
out
mov
adc
inc
xor
nop
adc
mov
and
xlat
inc
cwde
movs
pushf
and
cdq
cmps
into
xor
pusha
mov
xor
jecxz
loopne
(bad)
adc
inc
out
scas
loopne
xlat
(bad)
mov
xor
les
(bad)
fs
xchg
add
ret
pop
mov
je
and
adc
lock
out
add
daa
test
je
sub
daa
xchg
sbb
adc
ds
aaa
add
sub
push
lds
and
pop
cmps
sbb
loopne
aad
xor
es
push
push
push
les
aaa
movs
inc
inc
arpl
arpl
(bad)
(bad)
jns
inc
aam
add
push
jle
pop
aas
inc
not
inc
in
mov
test
inc
in
cmovo
jae
push
hlt
inc
mov
arpl
jg
push
mov
movs
add
push
mul
test
add
xchg
xchg
xchg
mov
lods
mov
and
jo
inc
cmps
movs
shl
mov
pusha
mov
xor
not
out
rcl
and
loop
in
clc
(bad)
stc
push
xlat
add
xor
sar
les
nop
add
iret
pop
data16
out
je
and
adc
int
jmp
shl
pop
add
and
adc
xchg
adc
add
add
or
aas
lock
lds
and
push
cmps
outs
daa
xor
xor
sub
dec
push
pusha
les
xor
outs
das
mov
jle
pop
add
push
dec
aad
aas
dec
div
ja
in
mov
test
gs
cmovbe
cs
hlt
jbe
pusha
xchg
jns
dec
cmc
inc
pop
push
adc
mov
test
xor
mov
xor
inc
mov
mov
es
pusha
cmps
push
loopne
ret
fild
inc
jecxz
shl
jecxz
cmps
inc
int3
(bad)
cmps
push
out
shl
mov
shl
add
ret
retw
je
and
adc
loopne
jmp
ror
das
outs
jnp
cs
xor
adc
add
movs
pop
lock
lds
add
push
daa
add
xor
dec
(bad)
push
push
dec
les
jae
pop
inc
dec
lds
arpl
jge
pop
aam
and
push
pop
aad
aas
ins
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
into
aad
push
les
shl
int
sti
in
gs
(bad)
data16
and
adc
mov
pop
and
add
aas
xchg
pop
pop
xchg
jae
add
inc
adc
aas
mov
aaa
add
or
add
movs
cmovg
cmps
outs
daa
cmp
xor
sbb
dec
push
pop
les
movs
jnp
xor
arpl
jp
outs
inc
inc
aam
add
push
jns
jno
js
push
ja
in
mov
test
outs
in
addps
dec
addr16
pop
mov
ins
cmc
push
pop
pop
push
lea
stos
gs
test
push
test
xchg
xchg
mov
lods
mov
and
jo
inc
fwait
movs
(bad)
and
mov
pusha
mov
xor
not
jecxz
out
adc
inc
loop
clc
inc
cdq
(bad)
icebp
push
test
xor
cwde
mov
shl
add
iret
(bad)
fisub
out
je
and
adc
mov
pop
adc
add
and
rol
pop
adc
push
mov
aaa
pop
movs
add
pop
lds
and
and
add
xor
push
(bad)
jae
les
sub
lds
jle
add
aam
add
push
outs
aad
aas
inc
imul
jb
inc
mov
test
in
subps
jo
jae
inc
mov
or
push
mov
cmps
add
push
jmp
add
nop
xchg
jne
xchg
call
ss
mov
and
jo
inc
out
movs
shl
movs
cmps
movs
xor
pusha
cmps
push
mov
fbld
loop
mov
inc
jecxz
cld
inc
rol
push
rol
shl
mov
(bad)
fs
xor
gs
data16
out
je
and
adc
in
in
xor
and
add
cmp
inc
pop
and
adc
or
sbb
push
lds
and
push
cmps
and
xor
xor
sub
ja
arpl
jno
xor
lds
(bad)
(bad)
jns
inc
aam
add
push
sub
push
aas
dec
not
inc
in
mov
test
gs
in
cmovo
pop
addr16
hlt
jno
xchg
cmp
cmc
je
fs
(bad)
xchg
sahf
add
push
rep
test
add
xchg
xchg
jne
xchg
mov
mov
jo
inc
mov
fbld
fwait
cmps
test
pusha
mov
xor
jecxz
loopne
fst
clc
and
out
scas
in
inc
scas
push
fld
(bad)
xor
hlt
mov
(bad)
fs
fiadd
ret
pop
data16
out
je
and
adc
fistp
and
add
and
xor
cmp
cmc
sbb
add
jbe
add
and
inc
cmps
sbb
aas
mov
loopne
aad
xor
cmp
popa
push
jl
jl
ins
movs
dec
inc
outs
lds
das
jl
inc
inc
cmp
ja
addr16
push
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
fnsave
into
add
mov
out
je
and
adc
scas
lahf
(bad)
xchg
and
push
test
add
cmp
jo
add
pop
adc
cmp
inc
lock
xor
pop
cmps
cmp
xor
xor
sbb
push
push
pusha
les
push
ja
cmp
outs
das
js
push
inc
inc
aam
add
push
dec
aad
aas
jg
push
ja
in
mov
test
popa
in
cvtps2pd
dec
outs
hlt
push
mov
pop
cmc
push
pop
pop
push
cmps
xchg
mov
gs
test
push
scas
xchg
jne
xchg
mov
div
leave
inc
xchg
movs
mov
movs
cmps
sahf
xor
pusha
cmps
push
clc
mov
xor
repz
fiadd
lods
and
jecxz
cli
inc
rol
push
jmp
shl
mov
ret
fs
xor
gs
data16
out
je
and
adc
mov
pop
and
and
add
xchg
addr16
das
rol
push
adc
add
movs
add
and
add
add
and
jns
adc
addr16
les
cmp
bound
jge
sbb
aam
add
push
ins
aad
aas
jle
ins
ja
in
mov
test
inc
in
minps
pop
addr16
inc
mov
inc
cmc
outs
pop
imul
xchg
xchg
add
push
sti
gs
test
push
cmps
xchg
jne
xchg
lock
xchg
leave
inc
mov
(bad)
mov
pusha
mov
xor
int
in
loopne
mov
inc
out
scas
std
inc
add
(bad)
xor
test
bnd
add
ret
(bad)
frstor
out
je
and
adc
clc
lahf
jmp
shl
dec
add
and
pop
rol
sbb
or
sbb
push
lds
and
add
xor
es
xor
sub
jae
pop
les
movs
push
inc
dec
lds
pusha
(bad)
push
inc
jno
push
add
push
xor
push
aas
dec
test
in
mov
test
push
inc
cmova
pop
addr16
hlt
inc
mov
jae
inc
pop
push
lea
repnz
test
add
mov
inc
xchg
xchg
mov
lods
mov
and
jo
inc
popf
movs
fisub
mov
cdq
xor
pusha
mov
xor
not
jecxz
les
cli
and
loop
out
aad
fist
ret
xor
lock
shl
add
iret
pop
iretw
out
je
and
adc
mov
pop
push
test
rcl
in
add
xchg
pop
and
cmc
add
add
pop
aaa
add
and
push
cmps
add
xor
xor
cmp
les
imul
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
pop
data16
fidiv
loopne
jmp
xchg
push
pop
and
sub
and
test
outs
cmp
imul
cmc
pop
adc
cmp
or
and
sbb
pop
loopne
aad
xor
sbb
push
push
les
nop
push
lds
jg
add
aam
add
push
dec
aad
aas
jns
inc
ja
in
mov
test
push
inc
maxps
pop
ins
hlt
pop
mov
arpl
push
pop
pop
push
mov
push
movs
test
mov
adc
inc
xor
mov
ss
xchg
movs
mov
mov
pusha
mov
xor
xchg
xlat
in
movs
adc
inc
loopne
inc
(bad)
out
repnz
xor
cmp
(bad)
lea
les
lds
loopne
(bad)
cmc
retf
lahf
fst
and
jnp
sub
cmp
xchg
sub
add
sbb
cmp
movs
add
dec
lds
and
push
cmps
and
inc
mov
loopne
aad
xor
es
jae
push
les
sub
fs
arpl
inc
inc
push
aam
add
push
jbe
inc
aas
inc
div
inc
in
mov
test
dec
in
divps
inc
addr16
jle
arpl
es
imul
mov
test
push
xchg
xchg
fst
test
xchg
mov
and
jo
inc
mov
sahf
es
call
mov
xor
not
out
repnz
and
loope
loop
inc
out
push
mov
ret
xor
sti
mov
les
retf
in
ror
je
and
adc
in
in
push
pop
adc
add
xchg
pop
xchg
push
rol
push
adc
or
push
lock
lds
and
add
ss
aad
xor
sub
jae
les
aaa
movs
push
inc
inc
lds
popa
(bad)
ins
inc
jp
push
add
push
sub
div
ja
in
mov
test
adc
inc
cmovno
pop
addr16
hlt
inc
mov
js
inc
pop
imul
xchg
cmps
add
push
lock
test
add
xchg
xchg
jne
xchg
mov
xor
inc
mov
xchg
(bad)
cmps
xor
mov
jecxz
rol
sti
and
in
in
sti
(bad)
rcl
shl
mov
(bad)
fs
xor
add
ror
je
and
adc
scas
lahf
jmp
test
or
test
outs
sub
and
push
cmc
pop
adc
or
inc
lock
or
dec
inc
cmps
adc
loopne
aad
xor
aas
(bad)
addr16
inc
les
push
jnp
pop
lds
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
fs
add
mov
(bad)
mov
je
and
adc
mov
pop
and
add
aas
xchg
pop
pop
xchg
jl
add
inc
adc
cmp
add
add
movs
cmovg
cmps
outs
daa
cmp
xor
sbb
push
push
pop
les
movs
imul
arpl
jns
pop
inc
inc
aam
add
push
jns
jo
js
popa
ja
in
mov
test
pop
out
addr16
adc
arpl
push
pop
pop
push
mov
push
stos
gs
test
push
xchg
xchg
jne
xchg
mov
xor
inc
mov
call
pusha
mov
xor
rcl
inc
out
adc
inc
loop
clc
inc
cdq
(bad)
icebp
push
test
icebp
push
cwde
mov
shl
add
iret
(bad)
fisub
out
je
and
adc
mov
pop
adc
add
and
sub
adc
push
mov
aaa
pop
movs
add
pop
lds
movs
add
cmps
jns
inc
mov
loopne
aad
xor
push
(bad)
arpl
les
cmp
outs
das
jle
add
aam
add
push
outs
aad
aas
dec
test
in
mov
test
inc
in
subps
jo
jg
jle
pusha
xchg
cmp
cmc
outs
pop
fs
adc
mov
push
mov
inc
xor
mov
xchg
mov
and
jo
inc
mov
iret
test
mov
pusha
cmps
push
mov
fisttp
inc
aad
in
and
jecxz
in
xlat
(bad)
hlt
push
mov
shl
mov
(bad)
push
rol
ret
mul
aam
xchg
and
adc
(bad)
lahf
int
and
and
add
and
adc
push
cmc
pop
adc
add
jbe
movs
sub
and
pop
cmps
sbb
daa
mov
loopne
aad
xor
sub
ja
arpl
dec
nop
xor
bound
(bad)
(bad)
push
inc
jno
push
add
push
xor
outs
aas
dec
not
inc
in
mov
test
sbb
dec
cmovo
data16
inc
mov
je
inc
pop
fs
lea
repnz
out
mov
adc
inc
xor
mov
xchg
mov
and
jo
inc
out
movs
(bad)
movs
cmps
ret
pusha
mov
xor
repz
loopne
fist
cmc
and
out
scas
in
fld
fcom
(bad)
xor
(bad)
mov
(bad)
div
aad
mul
fbld
pop
data16
out
je
and
adc
mov
pop
and
add
and
or
and
adc
or
inc
lock
lds
sbb
fs
add
xor
cmp
dec
push
push
les
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
shl
add
mov
out
je
and
adc
mov
pop
adc
add
cmp
imul
cmc
sbb
jg
mov
aaa
pop
movs
inc
lock
xor
pop
cmps
bound
das
mov
loopne
aad
xor
sbb
jae
les
push
addr16
inc
lds
jg
jnp
inc
aam
add
push
dec
aad
aas
jg
ss
in
mov
test
gs
cvtps2pd
pop
outs
hlt
pop
mov
pop
cmc
pop
pop
pop
push
mov
cmps
add
push
test
xchg
test
push
add
jne
xchg
mov
ss
mov
and
jo
inc
mov
lahf
movs
cmps
call
mov
xor
xchg
xlat
rol
lods
and
in
cli
inc
rol
push
repnz
xor
cmp
fs
xor
ror
je
and
adc
mov
pop
and
and
add
xchg
addr16
sub
push
cmc
pop
adc
add
movs
add
and
add
or
and
ds
and
les
sub
popa
das
jge
sbb
aam
add
push
ins
aad
aas
dec
not
inc
in
mov
test
inc
in
cmovae
cs
inc
mov
arpl
inc
pop
adc
mov
push
lods
gs
test
push
xchg
xor
mov
ss
mov
and
jo
inc
call
iret
(bad)
es
cmps
pushf
xor
pusha
mov
xor
xchg
xlat
out
mov
(bad)
loopne
mov
push
std
add
xor
out
mov
cmc
xor
add
les
les
loopne
loopne
fnsave
lahf
iret
xchg
aaa
pop
daa
test
shl
in
add
xchg
pop
xor
adc
xor
pop
lock
lds
and
add
xor
es
xor
sub
arpl
les
xor
fs
pusha
(bad)
cmova
add
push
push
aad
aas
dec
div
inc
in
mov
test
adc
inc
cmova
bound
hlt
inc
mov
outs
cmc
dec
pop
push
(bad)
xchg
movs
add
push
repz
out
cmps
push
ret
xchg
jne
xchg
mov
mov
mov
and
jo
inc
cmps
movs
xchg
and
movs
cmps
(bad)
xor
pusha
mov
xor
out
out
fist
sti
and
loope
out
mov
rcl
ret
xor
cmc
mov
les
fiadd
ror
je
and
adc
mov
pop
adc
add
xchg
outs
xchg
and
adc
add
pop
aaa
pop
movs
xor
xor
sbb
inc
cmps
aas
daa
inc
mov
loopne
aad
xor
ds
dec
push
dec
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
pop
data16
out
je
and
adc
mov
pop
and
add
cmp
jno
push
cmc
sbb
jg
mov
aaa
xor
and
sbb
pop
loopne
aad
xor
sbb
addr16
arpl
arpl
dec
lds
js
jg
jne
jge
inc
mov
push
dec
aad
aas
jns
ins
ja
in
mov
test
pop
out
addr16
hlt
pop
mov
pop
cmc
push
pop
pop
push
lea
in
gs
out
mov
adc
inc
xor
mov
xchg
mov
and
jo
inc
cwde
movs
and
cmps
test
mov
xor
int
loopne
out
test
inc
out
scas
inc
(bad)
loop
hlt
add
xor
cwde
mov
(bad)
les
mov
ret
pop
data16
out
je
and
adc
scas
lahf
out
aaa
pop
daa
test
sar
cmp
cmp
xchg
sub
adc
cmp
movs
sbb
dec
lds
xor
popa
daa
dec
mov
loopne
aad
xor
es
dec
push
push
les
cmp
arpl
jl
push
inc
push
aam
add
push
dec
aad
aas
push
test
in
mov
test
inc
in
cmovnp
ja
outs
hlt
adc
arpl
jae
dec
push
mov
push
scas
gs
scas
out
jecxz
iret
xchg
jne
xchg
call
lods
mov
and
jo
inc
lock
(bad)
and
mov
mov
xor
rcl
in
movs
adc
and
loop
mov
cld
(bad)
movs
push
mov
ret
xor
aad
jmp
xor
add
iret
pop
je
and
adc
repnz
enter
adc
add
je
sub
and
jne
add
add
das
mov
aaa
add
and
add
sbb
xor
and
les
xor
outs
das
popa
mov
daa
aam
add
push
pop
aad
aas
inc
div
ja
in
mov
test
adc
inc
cmovno
bound
hlt
inc
mov
pop
cmc
inc
pop
imul
xchg
mov
gs
test
add
into
xchg
jne
xchg
mov
mov
mov
and
jo
inc
cdq
movs
shl
lahf
cmps
ret
xor
pusha
cmps
push
sti
mov
xor
jecxz
fiadd
cli
and
jecxz
in
aad
(bad)
push
fld
shl
mov
ret
fs
xor
add
ret
data16
shl
jecxz
cld
cmc
out
jne
lahf
jmp
test
rcl
in
add
arpl
daa
rol
pop
adc
or
xor
das
lds
and
push
cmps
adc
loopne
aad
xor
ds
addr16
inc
les
push
jnp
ins
lds
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
shl
add
mov
(bad)
lock
je
and
adc
mov
pop
and
add
aas
xchg
adc
adc
cmp
add
or
pop
and
sbb
push
loopne
aad
xor
pop
(bad)
jae
pop
les
movs
imul
arpl
jp
outs
inc
dec
aam
add
push
jge
jo
jg
inc
ja
in
mov
test
jle
inc
addps
dec
addr16
adc
jne
cmc
das
pop
pop
push
(bad)
xchg
mov
gs
sahf
add
test
xchg
xchg
mov
ss
mov
and
jo
inc
mov
fwait
and
mov
pusha
mov
xor
out
jecxz
out
mov
inc
loop
std
inc
out
std
push
icebp
add
xor
cmp
lds
lea
iret
(bad)
fisub
out
je
and
adc
mov
pop
adc
add
and
and
add
pop
adc
add
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
push
(bad)
dec
push
les
movs
jle
jl
outs
das
addr16
cmova
inc
add
push
push
aad
aas
push
in
mov
test
jge
inc
unpcklps
addr16
hlt
adc
jne
cmc
jb
dec
push
adc
test
mov
xchg
jne
xchg
mov
lods
mov
and
jo
inc
mov
iret
aam
mov
mov
xchg
pusha
cmps
push
mov
fisttp
inc
movs
adc
and
jecxz
mov
push
test
xor
in
out
jbe
test
add
ret
data16
out
xchg
and
adc
ret
xchg
or
shr
in
add
xchg
jge
rol
inc
adc
sub
inc
lock
jo
xor
es
sbb
push
loopne
aad
xor
adc
push
push
arpl
inc
nop
movs
jge
push
(bad)
js
popa
aam
add
push
push
aad
aas
dec
imul
inc
in
mov
test
sbb
dec
cmova
pop
addr16
inc
mov
ins
cmc
inc
pop
fs
lea
mov
add
xchg
xchg
jne
xchg
mov
mov
mov
and
jo
inc
cdq
movs
pushf
and
fwait
cmps
(bad)
xor
pusha
mov
xor
repz
loopne
fst
cmc
and
out
scas
in
out
mov
xor
repnz
(bad)
fs
add
ret
pop
data16
lds
loopne
loopne
jmp
xchg
aaa
pop
and
add
xchg
pop
pop
xchg
push
rol
sbb
add
add
add
and
inc
cmps
adc
xor
cmp
xor
cmp
les
movs
push
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
shl
add
mov
out
je
and
adc
mov
pop
adc
add
cmp
jge
add
sbb
jg
mov
aaa
pop
movs
inc
lock
pop
and
pop
cmps
bound
das
mov
loopne
aad
xor
sbb
arpl
les
nop
push
addr16
dec
lds
jg
jnp
dec
aam
add
push
inc
aad
aas
js
inc
ja
in
mov
test
jge
inc
cvtps2pd
pop
addr16
hlt
adc
jne
cmc
and
pop
push
xchg
xchg
cmps
add
push
cli
gs
lods
add
add
jne
xchg
mov
div
leave
inc
mov
mov
loope
xchg
pusha
cmps
push
clc
mov
xor
jecxz
rol
lods
and
in
jecxz
rol
in
lock
xor
(bad)
mov
(bad)
shl
add
ror
je
and
adc
mov
pop
and
and
add
xchg
arpl
adc
push
mov
aaa
xor
and
sbb
push
daa
inc
mov
loopne
aad
xor
dec
(bad)
addr16
les
imul
jl
jl
xor
push
sub
ins
aas
push
ss
in
mov
test
gs
inc
unpckhps
das
addr16
pop
mov
arpl
inc
pop
dec
push
(bad)
xchg
xchg
add
push
scas
mov
jecxz
xchg
xor
adc
mov
and
jo
inc
call
iret
aad
jecxz
mov
xlat
pusha
mov
xor
int
out
movs
adc
and
loopne
mov
pop
fst
(bad)
xor
in
call
xchg
into
add
les
(bad)
je
and
adc
lds
and
sub
das
in
add
jne
cmp
push
xchg
ja
add
sbb
jg
mov
aaa
pop
movs
push
lock
push
dec
inc
cmps
sbb
inc
mov
loopne
aad
xor
or
jae
push
les
movs
jo
lds
(bad)
(bad)
inc
inc
aam
add
push
pop
aad
aas
dec
mul
inc
in
mov
test
pop
in
cmovo
jb
push
hlt
inc
mov
pop
cmc
inc
pop
imul
cwde
push
repz
out
cmps
push
scas
xchg
jne
xchg
stos
adc
xor
inc
cmps
movs
xchg
and
fwait
cmps
mov
mov
mov
xor
rcl
out
rcl
clc
and
loope
jmp
aad
ret
push
in
ret
xor
(bad)
mov
les
in
add
ror
je
and
adc
scas
lahf
jmp
xor
adc
in
add
xchg
pop
xchg
and
adc
add
and
pop
movs
xor
and
inc
cmps
das
daa
aaa
mov
loopne
aad
xor
aas
(bad)
push
push
dec
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
fsub
out
je
and
adc
mov
pop
and
add
cmp
jb
push
cmc
sbb
jg
mov
aaa
xor
and
sbb
sbb
xor
sbb
inc
push
arpl
ins
nop
push
lds
js
jg
inc
aam
add
push
dec
aad
aas
jp
inc
ja
in
mov
test
pop
out
addr16
hlt
pop
mov
pop
cmc
and
pop
push
(bad)
xchg
sahf
add
push
in
lods
test
push
fld
xor
mov
mov
jo
inc
in
movs
cwde
and
stc
cmps
xchg
xor
pusha
mov
xor
jecxz
loopne
out
test
inc
out
scas
inc
(bad)
out
push
test
xor
cwde
mov
(bad)
les
mov
ret
pop
mov
je
and
adc
mov
pop
daa
test
sar
dec
add
cmp
xchg
das
rol
inc
adc
ds
aaa
add
sbb
or
or
dec
add
mov
loopne
aad
xor
or
jae
push
les
inc
push
lds
daa
(bad)
jl
cmp
xor
push
jns
data16
outs
div
inc
in
mov
test
gs
in
nop
pop
addr16
dec
mov
push
cmc
dec
pop
dec
push
lea
test
add
xchg
xchg
jne
xchg
mov
cmps
jmp
and
jo
inc
hlt
movs
and
cmps
cmps
xor
pusha
mov
xor
rcl
in
out
out
and
loop
mov
push
jmp
ret
xor
out
mov
(bad)
fs
xor
add
iret
(bad)
xchg
scas
out
je
and
adc
lds
adc
add
arpl
je
add
sbb
cs
aaa
add
and
push
cmps
arpl
cmp
xor
or
dec
push
arpl
and
pop
lds
fs
push
inc
jae
jge
inc
mov
push
jle
add
ja
in
mov
test
push
in
cmovb
das
outs
hlt
inc
mov
ins
cmc
dec
pop
fs
xchg
xchg
mov
gs
test
push
add
jne
xchg
lods
adc
xchg
mov
and
jo
inc
cdq
movs
fbld
mov
pusha
cmps
push
sti
mov
xor
xchg
xlat
fiadd
cmc
and
jecxz
in
int3
(bad)
icebp
push
fiadd
shl
mov
ret
div
in
add
ret
data16
out
je
and
adc
cmps
lahf
jmp
test
pmulhw
add
sub
and
push
cmc
pop
adc
or
xor
sub
sbb
dec
push
cmps
aas
daa
daa
mov
loopne
aad
xor
ds
push
push
inc
les
push
jl
jns
or
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
fs
xor
add
mov
fisub
out
je
and
adc
scas
lahf
fcom
shr
in
add
aas
xchg
sete
add
inc
adc
cmp
inc
lock
pop
and
pop
cmps
sbb
and
xor
pop
(bad)
push
push
pop
les
inc
inc
lds
jp
jg
dec
aam
add
push
jge
jg
jg
push
ja
in
mov
test
jb
inc
addps
pusha
addr16
hlt
pop
mov
pop
cmc
cs
gs
mov
mov
gs
mov
push
test
xchg
xchg
mov
div
int
mov
xchg
and
mov
pusha
mov
xor
not
jecxz
loopne
mov
inc
loop
std
inc
out
mov
xor
cmp
lds
lea
iret
(bad)
fisub
out
je
and
adc
scas
lahf
in
push
pop
adc
add
and
and
add
pop
adc
push
mov
aaa
pop
movs
and
add
movs
add
cmps
(bad)
inc
mov
loopne
aad
xor
xor
les
push
ins
inc
aas
lds
pusha
mov
aam
add
push
jne
jbe
push
test
in
mov
test
push
in
unpckhps
dec
addr16
hlt
bound
dec
cmc
inc
pop
dec
push
mov
movs
add
push
lods
gs
test
xchg
xor
stos
adc
lods
mov
and
jo
inc
xchg
movs
test
mov
pusha
cmps
push
mov
fisttp
inc
in
jmp
inc
jecxz
mov
push
test
xor
loop
out
jbe
test
add
ret
data16
out
je
and
adc
iret
lahf
rcl
shr
in
add
jnp
cmp
sbb
adc
sub
movs
inc
lock
lds
and
inc
cmps
arpl
cmp
xor
(bad)
push
push
pusha
les
inc
push
mov
and
add
push
push
aad
aas
push
ins
ja
in
mov
test
inc
in
cmova
and
hlt
jle
xchg
cmp
cmc
pop
pop
fs
mov
sahf
add
push
stos
gs
mov
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
cdq
movs
pushf
and
out
cmps
mov
xchg
push
mov
fild
inc
(bad)
adc
and
out
scas
in
test
cli
push
loope
(bad)
xor
cmp
fs
add
ret
pop
data16
out
je
and
adc
out
lahf
in
aaa
pop
and
add
and
and
add
adc
or
ss
and
inc
cmps
cmp
sub
ds
aad
xor
ds
jae
push
les
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
fs
add
mov
out
je
and
adc
mov
pop
adc
add
cmp
jl
add
sbb
jg
mov
aaa
pop
movs
add
or
pop
and
sbb
sbb
xor
sbb
dec
push
les
nop
push
push
inc
push
lds
jg
push
inc
jb
jl
inc
mov
push
inc
aad
aas
js
ins
ja
in
mov
test
dec
in
cvtps2pd
cmp
hlt
push
mov
push
push
cmps
xchg
cmps
add
push
cli
gs
out
mov
adc
inc
xor
mov
lods
mov
and
jo
inc
mov
fbld
call
push
stc
mov
xor
int
rol
test
inc
in
jecxz
rol
loope
out
add
xor
mov
(bad)
shl
add
ror
je
and
adc
mov
pop
and
and
ins
in
add
xchg
outs
xchg
sub
push
cmc
pop
adc
push
mov
aaa
xor
and
add
push
loopne
aad
xor
and
ja
les
sub
popa
das
jle
inc
push
aam
add
push
popa
aad
aas
dec
imul
inc
in
mov
test
gs
in
minps
je
js
jle
xchg
cmp
cmc
outs
pop
gs
lea
in
gs
test
push
scas
xchg
adc
inc
xor
in
adc
xchg
mov
movs
mov
pushf
cmps
nop
xor
pusha
mov
xor
int
out
sti
adc
and
loopne
mov
push
inc
(bad)
xor
out
mov
cmc
fs
xor
add
les
loop
xchg
and
adc
ret
xchg
adc
and
and
sub
sbb
outs
jp
sub
push
xchg
ja
add
push
adc
sub
push
lock
push
dec
pop
cmps
sbb
cmp
xor
or
push
push
push
les
nop
outs
movs
dec
inc
outs
lds
mov
push
aam
add
push
sub
push
aas
outs
mul
inc
in
mov
test
pop
in
cmovne
jb
inc
hlt
popa
mov
push
cmc
pop
pop
push
mov
push
sti
mov
stos
push
mov
inc
xchg
xchg
jmp
xor
inc
mov
lahf
and
mov
cmps
xor
pusha
mov
xor
rcl
inc
rcl
iret
and
loope
in
repnz
icebp
push
fiadd
ret
xor
cmp
fs
xor
add
ror
je
and
adc
loopne
jmp
xor
adc
add
xchg
rol
add
add
xor
pop
movs
xor
sub
or
inc
cmps
ds
sbb
xor
cmp
push
push
dec
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
fsub
out
je
and
adc
mov
pop
and
add
aas
xchg
pop
add
je
push
cmc
sbb
jg
mov
aaa
xor
and
sbb
adc
and
cmp
pop
pop
(bad)
addr16
arpl
ins
nop
push
lds
js
outs
inc
inc
aam
add
push
jns
(bad)
jp
ss
in
mov
test
jle
dec
maxps
fs
hlt
push
mov
pop
cmc
and
pop
push
mov
sahf
add
push
in
gs
test
push
add
jne
xchg
stos
adc
xchg
fiadd
movs
(bad)
xchg
mov
xor
xchg
xlat
loopne
in
lods
and
out
scas
inc
(bad)
out
push
out
add
xor
pushf
mov
(bad)
lds
mov
ret
pop
mov
je
and
adc
mov
pop
daa
test
sar
adc
cmp
xchg
sub
add
inc
adc
ds
aaa
add
add
pop
lds
and
sbb
mov
loopne
aad
xor
sub
jae
push
les
cmp
arpl
jl
inc
pop
aam
add
push
xor
dec
aas
dec
test
in
mov
test
sbb
inc
divps
pusha
outs
hlt
inc
mov
or
pusha
pop
push
lea
sti
gs
out
mov
adc
inc
xchg
xchg
jmp
div
mov
movs
fisub
pushf
cmps
xchg
xor
pusha
mov
xor
rcl
in
in
in
and
loop
mov
push
jmp
ret
xor
in
jmp
xor
add
iret
(bad)
call
and
adc
rcr
test
shr
in
add
js
push
pop
add
adc
cs
aaa
add
and
pop
cmps
or
ds
loopne
aad
xor
adc
jae
arpl
xchg
imul
cmova
jle
inc
mov
push
dec
aad
aas
push
in
mov
test
gs
inc
cmovnp
dec
addr16
jo
pusha
xchg
pusha
jne
cmc
inc
pop
pop
push
xchg
xchg
mov
mov
out
ret
xchg
adc
inc
xor
pushf
adc
div
xchg
inc
mov
cwde
and
lahf
cmps
mov
push
sti
mov
xor
xchg
xlat
fiadd
shl
jecxz
out
repnz
in
in
shl
mov
ret
fs
add
ret
data16
sti
je
and
adc
out
lahf
jmp
test
ror
in
add
sub
and
push
cmc
pop
adc
add
add
movs
ss
aaa
and
push
cmps
adc
sbb
xor
cmp
les
push
jl
cmp
or
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
fs
xor
add
mov
fisub
out
je
and
adc
scas
lahf
fcom
and
sub
daa
add
cmp
xor
add
inc
adc
cmp
inc
lock
xor
pop
cmps
sbb
sub
push
loopne
aad
xor
sbb
arpl
les
inc
pop
lds
jp
jg
jne
xor
push
dec
aad
aas
jg
jno
inc
in
mov
test
dec
in
addps
pusha
addr16
hlt
push
mov
pop
cmc
cs
gs
(bad)
xchg
mov
gs
test
rol
jne
xchg
mov
ret
(bad)
mov
and
jo
inc
cmps
movs
fisub
mov
test
pusha
mov
xor
rcl
jecxz
loopne
mov
inc
loop
std
inc
rol
scas
push
in
add
xor
cmp
lea
iret
(bad)
fisub
out
je
and
adc
scas
lahf
out
and
adc
add
and
sub
add
pop
adc
add
movs
sbb
dec
lds
and
push
cmps
push
daa
cmp
xor
sub
push
push
les
cmp
outs
das
jge
push
inc
pop
aam
add
push
sub
inc
aas
inc
not
jb
inc
mov
test
sbb
inc
subps
cmp
hlt
inc
mov
inc
cmc
daa
pop
imul
xchg
cmps
add
push
in
gs
out
mov
adc
inc
xor
hlt
adc
div
fild
movs
fbld
movs
cmps
scas
xor
pusha
cmps
push
mov
fisttp
inc
loope
jmp
inc
jecxz
mov
push
test
xor
loopne
out
jbe
test
add
ret
data16
out
je
and
adc
les
and
add
jp
cmp
add
adc
sub
movs
push
lock
cmp
pop
cmps
es
and
xor
push
(bad)
addr16
pusha
les
ins
movs
pop
inc
ins
lds
cmp
ins
inc
pop
aam
add
push
jle
pusha
aas
push
ins
ja
in
mov
test
jp
dec
cmovne
jae
popa
hlt
push
mov
pop
cmc
push
pop
or
mov
sahf
add
push
mov
add
mov
inc
xor
mov
xchg
rol
movs
scas
and
mov
cmps
xor
pusha
mov
xor
xchg
xlat
loopne
fcom
int
rol
in
inc
out
scas
jmp
out
(bad)
out
push
loopne
(bad)
xor
mov
icebp
xor
add
ret
pop
data16
out
je
and
adc
movs
lahf
in
add
and
add
sub
rol
sbb
push
xchg
sbb
or
xor
sub
sbb
inc
cmps
adc
push
mov
loopne
aad
xor
sbb
arpl
les
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
(bad)
into
add
mov
out
je
and
adc
mov
pop
adc
add
cmp
cmp
adc
cmp
add
or
ins
and
sbb
push
loopne
aad
xor
sbb
arpl
les
nop
push
or
pop
lds
jg
push
inc
jb
jge
inc
mov
push
jp
add
js
ss
in
mov
test
in
cvtps2pd
cmp
hlt
push
mov
ins
cmc
and
pop
push
adc
mov
push
fld
xor
mov
xor
inc
in
movs
pushf
and
call
push
stc
mov
xor
xchg
xlat
rol
test
inc
in
jecxz
out
cmps
push
in
add
xor
mov
(bad)
shl
add
ror
je
and
adc
mov
pop
and
cmp
ins
in
add
xchg
adc
rol
pop
adc
or
push
lock
lds
dec
sbb
xor
xor
xor
and
inc
push
les
sub
popa
das
jle
push
inc
push
aam
add
push
sub
add
dec
test
in
mov
test
pop
in
minps
fs
inc
mov
or
push
mov
push
cli
lods
test
push
add
jne
xchg
jmp
mov
jo
inc
mov
cmps
and
mov
cdq
xor
pusha
mov
xor
jecxz
out
movs
adc
and
loopne
mov
push
inc
(bad)
xor
loop
call
fs
add
les
shl
loopne
cli
cmc
shl
iret
xchg
adc
and
and
add
jnp
push
pop
add
adc
sub
add
push
lds
dec
pop
cmps
sbb
and
xor
or
push
push
push
les
imul
add
aam
add
push
ins
aad
aas
outs
div
inc
in
mov
test
gs
in
cmove
pop
addr16
hlt
adc
arpl
jns
dec
push
(bad)
xchg
movs
add
push
mul
test
push
mov
inc
xchg
xchg
xchg
adc
xor
inc
scas
movs
fwait
and
lods
cmps
xchg
xor
pusha
mov
xor
rcl
inc
(bad)
adc
and
loope
in
fadd
scas
push
fiadd
ret
xor
cmp
xor
add
ror
je
and
adc
in
jmp
or
ror
in
add
and
xchg
and
add
add
or
cmp
lds
pop
movs
add
cmps
cs
add
xor
pop
(bad)
arpl
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
pop
mov
je
and
adc
mov
pop
and
add
aas
xchg
pop
add
adc
aas
mov
aaa
xor
and
sbb
push
loopne
aad
xor
pop
(bad)
ja
arpl
ins
nop
cmp
bound
js
push
inc
jns
aaa
add
push
jns
(bad)
inc
not
inc
in
mov
test
pop
in
maxps
fs
hlt
push
mov
pop
cmc
and
pop
push
(bad)
xchg
sahf
add
push
in
gs
test
push
add
jne
xchg
stos
adc
xchg
mov
and
jo
inc
mov
popf
xchg
mov
xor
repz
loopne
in
lods
and
out
scas
inc
(bad)
cmps
push
jmp
aad
push
mov
(bad)
lds
mov
ret
pop
data16
mov
loopne
mov
lahf
in
aaa
pop
daa
test
shr
sub
xchg
pop
pop
xchg
sub
add
inc
adc
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
sub
push
push
push
les
cmp
arpl
jl
inc
pop
aam
add
push
xor
dec
aas
dec
mul
inc
in
mov
test
pop
in
divps
pusha
addr16
hlt
inc
mov
or
outs
pop
imul
xchg
movs
add
push
sti
gs
out
mov
adc
inc
xchg
xchg
lock
div
fiadd
movs
mov
es
cmps
popf
xor
pusha
mov
xor
rcl
inc
std
adc
inc
loop
jmp
rol
push
mov
ret
xor
(bad)
mov
(bad)
fnsave
retf
add
iret
(bad)
cdq
data16
fbstp
out
movs
cmc
push
lahf
int
and
adc
add
jns
push
pop
xor
adc
cs
aaa
add
and
pop
cmps
es
and
xor
adc
jae
arpl
bound
lds
cmp
js
inc
aam
add
push
ins
aad
aas
ins
test
in
mov
test
dec
in
unpcklps
pop
addr16
hlt
push
mov
jae
jns
dec
push
xchg
xchg
mov
mov
movs
push
mov
inc
xor
mov
xchg
mov
and
jo
inc
test
test
in
call
mov
xor
int
fiadd
int
in
(bad)
jecxz
out
fadd
mov
xor
iret
mov
ret
fs
add
ret
retw
je
and
adc
loop
jmp
test
ror
in
add
and
and
adc
adc
add
adc
movs
cmp
sub
sbb
dec
push
cmps
cs
aaa
mov
loopne
aad
xor
sbb
inc
push
inc
les
movs
jl
and
or
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
lds
leave
add
mov
frstor
out
je
and
adc
mov
pop
and
add
cmp
cmp
adc
cmp
inc
lock
xor
pop
cmps
xor
loopne
aad
xor
sbb
dec
push
pop
les
nop
sub
lds
jp
sbb
aam
add
push
dec
aad
aas
jle
inc
ja
in
mov
test
inc
in
addps
cmp
hlt
push
mov
pop
cmc
cmp
gs
lea
jmp
add
mov
inc
xchg
xchg
mov
fdivr
mov
and
jo
inc
pushf
movs
shl
mov
xor
mov
xor
not
jecxz
loope
mov
inc
loop
std
inc
rol
loope
in
add
xor
cmp
lea
iret
(bad)
fisub
out
je
and
adc
scas
lahf
out
or
sar
cmp
das
test
outs
cmp
adc
adc
adc
add
pop
aaa
pop
movs
sbb
dec
lds
add
add
cmps
xor
aaa
mov
loopne
aad
xor
sub
dec
push
les
cmp
outs
das
jge
inc
inc
pop
aam
add
push
sub
add
inc
imul
jb
inc
mov
test
adc
inc
subps
pusha
addr16
jo
pusha
xchg
cmp
cmc
es
push
mov
cmps
add
push
in
gs
test
push
fld
xor
lahf
adc
lods
mov
and
jo
inc
mov
pushf
cmps
cmps
xor
cmps
push
mov
fild
inc
clc
adc
jecxz
inc
(bad)
xlat
push
(bad)
add
xor
fidivr
(bad)
fs
xor
ret
repz
je
and
adc
movs
lahf
repnz
and
and
add
jns
adc
rol
inc
adc
sub
movs
adc
or
je
add
es
adc
xor
push
(bad)
addr16
pusha
les
ins
movs
or
lds
cmp
ins
inc
inc
aam
add
push
(bad)
aad
aas
jae
push
ja
in
mov
test
jle
dec
lsl
das
addr16
hlt
pop
mov
push
cmc
dec
pop
dec
push
mov
push
lods
mov
cmps
push
mov
inc
xor
adc
mov
and
jo
inc
lods
movs
mov
movs
cmps
mov
push
mov
fild
inc
rcl
shl
out
scas
mov
push
out
(bad)
xor
sar
fs
add
ret
pop
data16
fnsave
loopne
loopne
std
jne
lahf
in
adc
and
add
sub
daa
rol
sbb
outs
xchg
push
jg
mov
aaa
add
and
or
xor
es
xor
sbb
arpl
les
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
lds
into
add
mov
out
je
and
adc
scas
lahf
fcom
shl
test
cmp
xor
add
sbb
jg
mov
aaa
pop
movs
or
or
ins
and
sbb
push
loopne
aad
xor
sbb
push
push
les
inc
pop
lds
jg
inc
inc
jle
ja
inc
mov
push
jp
add
jge
push
ja
in
mov
test
in
cvtps2pd
pusha
addr16
hlt
dec
mov
ins
cmc
and
pop
push
cmps
xchg
cmps
add
push
cli
gs
test
add
cmps
xchg
jne
xchg
mov
fdivr
xchg
div
int
cwde
movs
(bad)
mov
mov
pusha
cmps
push
stc
mov
xor
repz
rol
test
inc
in
jecxz
cdq
(bad)
mov
xor
pushf
mov
(bad)
shl
add
ror
je
and
adc
cmps
lahf
ficom
cmp
jp
cmp
xchg
adc
adc
or
pop
lock
lds
and
sbb
xor
aas
mov
loopne
aad
xor
sub
addr16
les
sub
popa
das
jle
push
inc
push
aam
add
push
sub
inc
aas
dec
imul
inc
in
mov
test
(bad)
in
minps
fs
hlt
jno
xchg
cmp
cmc
and
xchg
xchg
add
push
cli
gs
test
push
add
jne
xchg
nop
adc
mov
xchg
jo
inc
out
movs
cmps
and
std
cmps
ret
pusha
mov
xor
xchg
xlat
in
clc
adc
inc
loopne
jecxz
add
push
rol
(bad)
xor
sar
repnz
xchg
add
les
aad
lock
adc
stc
lahf
out
adc
and
cmp
and
test
outs
js
sbb
and
adc
sub
sbb
and
pop
cmps
sbb
pop
mov
loopne
aad
xor
or
push
push
push
les
imul
add
aam
add
push
popa
aad
aas
outs
div
inc
in
mov
test
gs
in
lsl
pop
addr16
adc
jne
cmc
dec
pop
dec
push
mov
movs
add
push
scas
lea
jecxz
mov
inc
xchg
xchg
mov
lods
jmp
and
jo
inc
(bad)
movs
mov
es
cmps
iret
xor
pusha
mov
xor
not
out
rcl
int3
and
loope
cmps
inc
repnz
fist
ret
xor
sar
fs
add
ror
je
and
adc
jecxz
jmp
push
pop
adc
add
and
pop
pop
add
adc
or
cmp
and
add
add
xor
xor
sbb
arpl
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
pop
lock
je
and
adc
mov
pop
and
add
aas
xchg
rol
sbb
jg
mov
aaa
xor
and
sbb
push
loopne
aad
xor
pop
(bad)
push
push
arpl
ins
nop
cmp
bound
js
inc
inc
gs
add
push
jge
push
aas
inc
test
in
mov
test
dec
in
maxps
and
hlt
push
mov
push
cmc
and
pop
push
mov
push
in
xchg
mov
adc
inc
xor
scas
adc
mov
and
fild
movs
stos
and
mov
into
xor
pusha
mov
xor
xchg
xlat
loopne
in
lods
and
out
scas
inc
(bad)
mov
xor
(bad)
mov
(bad)
fs
xor
gs
pop
data16
div
loopne
mov
lahf
in
adc
daa
test
shr
cmp
xchg
pop
sbb
adc
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
and
arpl
les
cmp
arpl
jl
sbb
aam
add
push
(bad)
aad
aas
dec
div
inc
in
mov
test
push
inc
divps
cmp
hlt
jbe
arpl
outs
pop
imul
xchg
movs
add
push
sti
gs
test
push
mov
inc
xchg
xchg
pushf
adc
div
aad
cmps
movs
movs
and
mov
(bad)
xor
pusha
mov
xor
rcl
inc
(bad)
adc
loop
loope
stc
(bad)
rcl
ret
xor
fistp
les
xchg
add
iret
pop
data16
fidiv
out
mov
lahf
not
aas
shr
in
add
jp
sbb
and
je
add
sbb
cs
aaa
add
and
pop
cmps
cmp
add
xor
adc
jae
arpl
jge
imul
das
cmp
js
jae
jle
inc
mov
push
xor
bound
ins
test
in
mov
test
inc
in
sysret
out
addr16
push
mov
or
je
dec
push
mov
mov
gs
test
push
lods
xchg
jne
xchg
mov
xchg
jmp
and
jo
inc
lods
movs
mov
(bad)
iret
test
cmps
cmps
mov
shl
push
sti
mov
xor
repz
rol
int3
and
jecxz
out
fadd
fist
shl
mov
ret
fs
xor
add
ret
out
out
je
and
adc
cld
lahf
jmp
ror
in
add
and
xchg
push
rol
pop
adc
add
sub
lock
movs
add
cmps
add
and
xor
sbb
inc
push
inc
les
push
jl
inc
lds
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
les
leave
add
mov
frstor
out
je
and
adc
mov
pop
and
add
cmp
je
add
inc
adc
cmp
inc
lock
ins
and
pop
cmps
xor
loopne
aad
xor
sbb
push
push
pop
les
nop
sub
lds
jp
sbb
aam
add
push
dec
aad
aas
jle
popa
ja
in
mov
test
addps
cmp
hlt
push
mov
push
cmc
cmp
pushw
mov
push
jmp
add
mov
inc
xchg
xchg
mov
fdivr
mov
and
jo
inc
mov
and
cmps
(bad)
xor
pusha
mov
xor
rcl
inc
loope
mov
inc
loop
std
inc
rol
push
out
add
xor
cmp
(bad)
call
(bad)
fisub
out
je
and
adc
in
lahf
jmp
and
adc
add
cmp
adc
adc
adc
add
and
pop
movs
sbb
pop
lds
and
add
sub
and
ja
xor
jae
les
nop
ins
movs
dec
inc
jl
outs
das
and
cmova
aam
add
push
jno
arpl
jno
inc
ja
in
mov
test
jns
inc
cmovno
pop
addr16
hlt
adc
pusha
xchg
cmp
cmc
ins
pop
pushw
mov
cmps
add
push
in
gs
test
push
xchg
xchg
jne
xchg
xchg
adc
lods
mov
and
jo
inc
cdq
movs
scas
and
mov
ret
xor
pusha
cmps
push
mov
fild
inc
int
mov
xlat
(bad)
jecxz
out
stc
mov
xor
fidivr
(bad)
fs
xor
gs
data16
out
je
and
adc
rcr
test
shr
in
add
js
adc
rol
inc
adc
sub
movs
pop
lock
sub
pop
cmps
cmp
sbb
xor
push
(bad)
addr16
pusha
les
movs
je
ins
lds
cmp
outs
inc
fs
add
push
pop
aad
aas
jae
push
ja
in
mov
test
gs
in
nop
jb
jns
pop
mov
or
jb
dec
push
mov
xchg
add
push
scas
gs
test
push
xchg
xor
mov
xchg
jmp
and
jo
inc
lods
movs
mov
xchg
mov
xor
jecxz
jecxz
mov
(bad)
out
scas
jmp
fadd
rcl
xor
lds
(bad)
fs
add
ret
pop
out
out
je
and
adc
(bad)
lahf
jmp
daa
pop
and
add
xchg
and
cmc
sbb
sub
cs
mov
aaa
add
and
add
addr16
adc
xor
sbb
push
push
push
les
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
fs
xor
add
mov
out
je
and
adc
scas
lahf
fcom
shl
test
cmp
ja
add
sbb
jg
mov
aaa
pop
movs
or
or
xor
sbb
push
loopne
aad
xor
and
les
inc
js
pusha
das
jg
inc
inc
jp
jno
inc
mov
push
jle
add
jge
ins
ja
in
mov
test
pop
in
cvtps2pd
pusha
addr16
hlt
push
mov
dec
cmc
and
pop
push
mov
cmps
add
push
cli
gs
test
add
cmps
xchg
adc
inc
xor
mov
ret
(bad)
mov
and
jo
inc
mov
sahf
es
(bad)
xor
pusha
cmps
push
stc
mov
xor
xchg
xlat
rol
test
inc
in
jecxz
cdq
(bad)
scas
push
jmp
push
cwde
mov
(bad)
fs
add
ror
je
and
adc
cmps
lahf
jmp
test
sar
sub
cmp
cmp
outs
xchg
xor
push
cmc
pop
adc
outs
mov
aaa
xor
lds
and
inc
cmps
arpl
xor
xor
(bad)
addr16
les
nop
outs
movs
jae
inc
lds
cmp
ins
inc
pop
aam
add
push
jb
outs
aas
push
inc
ja
in
mov
test
dec
in
unpckhps
das
addr16
push
mov
or
je
dec
push
(bad)
xchg
xchg
add
push
stos
gs
popf
add
add
jne
xchg
pushf
adc
mov
jo
inc
cdq
movs
mov
mov
pusha
mov
xor
jecxz
in
not
mov
mov
mov
loop
mov
(bad)
xor
ret
mov
repnz
retf
in
les
cdq
je
and
adc
rcr
test
shr
in
add
jns
sbb
cmp
adc
sub
sbb
or
push
dec
pop
cmps
xor
loopne
aad
xor
or
push
push
push
les
push
lds
(bad)
pop
inc
js
xor
inc
mov
push
pop
aad
aas
outs
div
inc
in
mov
test
dec
in
(bad)
out
outs
hlt
pop
mov
pop
cmc
dec
pop
dec
push
(bad)
xchg
cmps
add
push
lods
gs
mov
xchg
adc
inc
xchg
xchg
lods
adc
xor
inc
(bad)
movs
mov
xchg
mov
xor
out
out
rcl
shl
loope
in
fadd
ret
push
in
ret
xor
ret
jbe
test
add
ror
je
and
adc
stc
lahf
in
xor
adc
add
and
and
and
cmc
add
or
cmp
and
movs
add
cmps
and
sbb
xor
sbb
jae
dec
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
fisub
out
je
and
adc
mov
pop
and
add
aas
xchg
rol
sbb
jg
mov
aaa
xor
and
sbb
push
loopne
aad
xor
push
(bad)
addr16
arpl
outs
nop
cmp
bound
js
sbb
aam
add
push
jge
sbb
inc
imul
inc
in
mov
test
maxps
and
hlt
push
mov
push
cmc
and
pop
push
lea
jmp
add
nop
xchg
jne
xchg
scas
adc
xchg
fild
movs
scas
and
mov
into
xor
pusha
mov
xor
int
loopne
in
lods
and
out
scas
inc
(bad)
scas
push
in
add
xor
int
(bad)
jbe
idiv
fs
xor
gs
(bad)
fsub
out
je
and
adc
out
lahf
in
aaa
pop
daa
test
sub
pop
add
sub
sub
add
pop
adc
sub
add
push
lds
and
pop
cmps
and
pop
mov
loopne
aad
xor
or
arpl
les
movs
outs
inc
pop
lds
cmp
pop
inc
js
xor
push
push
aad
aas
outs
mul
inc
in
mov
test
jb
inc
nop
pop
addr16
hlt
adc
jne
cmc
inc
pop
dec
push
mov
push
test
add
add
jne
xchg
mov
scas
push
and
jo
inc
test
mov
stc
cmps
lahf
xor
pusha
mov
xor
not
out
fist
call
inc
loop
in
add
push
aam
ret
xor
aad
jmp
xor
add
iret
(bad)
call
and
adc
fstp
adc
add
jl
das
pop
sub
je
add
sbb
cs
aaa
add
and
pop
cmps
cmp
sbb
xor
adc
jae
arpl
jns
imul
das
cmp
jnp
addr16
add
push
dec
aad
aas
ins
test
in
mov
test
inc
in
nop
pop
addr16
hlt
adc
pusha
xchg
jp
imul
pop
dec
push
cmps
xchg
mov
lea
cli
push
ret
xchg
jne
xchg
mov
div
mov
movs
mov
loope
test
mov
xor
repz
fiadd
iret
and
jecxz
out
cmc
(bad)
std
push
fiadd
shl
mov
ret
fs
add
ret
data16
repz
and
adc
(bad)
lahf
jmp
rol
test
outs
and
xchg
rol
pop
adc
add
jbe
movs
ds
daa
and
add
mov
loopne
aad
xor
sbb
ja
inc
les
push
jl
push
lds
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xchg
leave
add
mov
fsub
out
je
and
adc
loopne
fist
sub
sub
adc
cmp
jne
add
inc
adc
cmp
inc
lock
lds
and
pop
cmps
and
push
mov
loopne
aad
xor
sbb
les
nop
sub
lds
jp
inc
inc
jns
imul
aad
aas
jge
inc
ja
in
mov
test
pop
in
minps
inc
addr16
hlt
push
mov
push
cmc
and
pushw
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
mov
fdivr
test
xchg
mov
and
jo
inc
mov
mov
es
cmps
ret
pusha
mov
xor
out
jecxz
loop
mov
inc
loop
std
inc
rol
push
call
aad
push
xchg
shl
add
iret
(bad)
frstor
out
je
and
adc
aam
repnz
push
pop
adc
add
jne
inc
pop
popa
xchg
xor
add
inc
adc
das
mov
aaa
add
adc
add
movs
add
cmps
cmp
sbb
xor
or
push
push
les
nop
imul
jnp
jg
jge
inc
mov
push
imul
ss
in
mov
test
dec
in
nop
dec
addr16
hlt
adc
pusha
xchg
and
jae
pop
pop
dec
push
adc
xchg
add
ret
xchg
jne
xchg
scas
adc
xor
inc
call
iret
aam
mov
pusha
cmps
push
mov
fisttp
inc
cmps
adc
and
jecxz
mov
push
mov
shl
mov
les
lds
ret
data16
and
adc
fstp
and
add
jg
adc
rol
push
adc
sub
movs
sub
and
pop
cmps
cmp
or
push
loopne
aad
xor
push
(bad)
addr16
pusha
les
movs
dec
inc
ins
lds
cmp
outs
inc
js
aaa
add
push
dec
aad
aas
jae
push
ja
in
mov
test
inc
in
nop
cs
hlt
pop
mov
ja
pop
pop
dec
push
mov
push
test
mov
mov
push
lods
xchg
jne
xchg
in
adc
mov
and
mov
movs
mov
es
xchg
pusha
mov
xor
jecxz
loopne
rcl
int3
and
out
scas
jmp
icebp
(bad)
loop
loop
(bad)
xor
ret
mov
(bad)
div
call
gs
pop
jmp
jecxz
shl
adc
into
lahf
jmp
add
and
add
and
xchg
and
add
sbb
xor
adc
add
and
add
add
push
mov
loopne
aad
xor
pop
(bad)
push
push
push
les
movs
push
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
test
into
add
mov
out
je
and
adc
in
lahf
fcom
shl
test
outs
cmp
jne
add
pop
adc
aas
mov
aaa
pop
movs
or
and
sbb
or
and
cmp
and
les
sub
outs
das
jg
add
aam
add
push
jb
add
jle
inc
ja
in
mov
test
sbb
inc
cmovae
jo
inc
hlt
push
mov
dec
cmc
das
pop
pop
push
xchg
xchg
mov
gs
mov
nop
xchg
adc
inc
xor
test
div
int
mov
stos
and
movs
cmps
ret
xor
pusha
cmps
push
stc
mov
xor
jecxz
fiadd
test
inc
jecxz
jecxz
rol
push
call
aad
push
sar
(bad)
mov
ret
iretw
out
je
and
adc
repz
retf
pop
daa
test
sub
or
outs
jne
adc
jge
xor
push
cmc
sbb
sub
adc
and
pop
cmps
cmp
inc
mov
loopne
aad
xor
(bad)
push
push
les
ins
movs
pop
inc
pop
lds
cmp
inc
inc
jo
xor
push
outs
aad
aas
push
ins
ja
in
mov
test
gs
in
nop
jne
sbb
xchg
jnp
or
pop
pop
dec
push
mov
push
stos
mov
cld
push
mov
inc
xor
adc
mov
and
jo
inc
call
iret
fsub
loop
xor
mov
xor
xchg
xlat
out
cli
adc
and
out
scas
mov
push
std
add
xor
out
call
fs
retf
add
ret
(bad)
pushf
data16
out
je
and
adc
fcomp
and
add
jle
inc
pop
sub
ja
add
pop
adc
xor
cs
ds
pop
cmps
xor
loopne
aad
xor
or
les
imul
das
cmp
pop
inc
pusha
aam
add
push
dec
aad
aas
outs
test
in
mov
test
gs
in
nop
pop
addr16
hlt
pop
mov
je
pop
pop
push
push
mov
mov
gs
test
xchg
xchg
jne
xchg
lahf
adc
xor
inc
test
iret
aad
mov
pusha
mov
xor
rcl
inc
aad
retf
and
loop
jmp
iret
(bad)
scas
push
out
ret
xor
fdivr
shl
add
iret
pop
data16
out
je
and
adc
int
in
or
rol
test
outs
sub
daa
rol
add
or
and
sub
xor
or
aaa
loopne
aad
xor
sbb
jae
dec
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
fisub
out
je
and
adc
cmps
lahf
ficom
shr
in
add
aas
xchg
rol
pop
adc
cmp
inc
lock
lds
sbb
adc
xor
push
(bad)
inc
push
les
cmp
popa
das
js
sbb
aam
add
push
jge
sbb
inc
test
in
mov
test
divps
pop
addr16
hlt
push
mov
push
cmc
cmp
pop
push
(bad)
xchg
xchg
add
push
jmp
add
cmps
xchg
adc
inc
xor
scas
adc
mov
jo
inc
in
movs
cmps
and
mov
pusha
mov
xor
jecxz
in
sti
adc
inc
loopne
inc
(bad)
aam
out
add
xor
int
(bad)
jbe
div
fs
xor
les
cdq
je
and
adc
repnz
enter
and
sub
das
in
add
jp
inc
pop
xor
adc
sub
push
lock
adc
pop
cmps
sbb
pop
mov
loopne
aad
xor
or
push
push
push
les
imul
add
aam
add
push
jne
addr16
outs
test
in
mov
test
in
nop
pop
addr16
push
mov
jl
push
pop
push
push
mov
push
movs
mov
std
push
mov
inc
xchg
xchg
hlt
adc
xchg
mov
and
jo
inc
nop
movs
xchg
lahf
cmps
fnstenv
mov
xor
out
in
into
adc
and
loope
mov
push
hlt
add
xor
repnz
(bad)
shl
lds
ror
je
and
adc
ficomp
adc
in
add
jge
das
pop
jns
je
add
sbb
das
mov
aaa
add
adc
or
push
dec
pop
cmps
cmp
or
push
loopne
aad
xor
or
dec
push
les
push
lds
aas
(bad)
jnp
outs
aam
add
push
jge
addr16
push
in
mov
test
gs
in
nop
pop
addr16
hlt
adc
pusha
xchg
jp
pop
cmc
pop
pop
dec
push
xchg
xchg
movs
add
push
movs
gs
mov
xchg
jne
xchg
pushf
adc
lods
mov
and
jo
inc
xchg
movs
mov
es
push
sti
mov
xor
int
rol
into
and
in
in
repnz
scas
push
std
add
xor
fidivr
(bad)
fs
xor
add
ror
je
and
adc
into
lahf
jmp
ror
in
add
xchg
pop
sbb
adc
push
cmc
pop
adc
or
and
lds
dec
add
xor
aaa
mov
loopne
aad
xor
pop
(bad)
ja
inc
les
push
jge
popa
lds
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xchg
leave
add
mov
fsub
out
je
and
adc
out
lahf
ficom
sub
add
cmp
ja
add
inc
adc
add
movs
inc
lock
lds
and
pop
cmps
and
sbb
xor
sbb
les
sub
lds
jp
inc
inc
jns
jb
inc
mov
push
push
add
jge
push
ja
in
mov
test
pop
in
minps
inc
addr16
push
mov
push
cmc
and
pop
push
mov
mov
gs
xchg
xchg
xchg
adc
inc
xchg
xchg
stos
adc
div
leave
inc
mov
movs
and
stc
cmps
into
xor
pusha
mov
xor
not
jecxz
loop
test
inc
loop
std
inc
cdq
(bad)
fist
ret
xor
xchg
shl
add
iret
pop
je
and
adc
(bad)
lahf
enter
adc
in
add
js
push
pop
push
xchg
jbe
add
inc
adc
das
mov
aaa
add
add
or
adc
pop
cmps
cmp
inc
mov
loopne
aad
xor
adc
arpl
les
movs
dec
inc
js
outs
das
cmp
push
inc
arpl
jle
inc
mov
push
jns
addr16
ins
test
in
mov
test
push
out
addr16
push
mov
jae
push
pop
dec
push
xchg
xchg
movs
add
push
test
sahf
test
push
mov
inc
xor
mov
lods
mov
and
jo
inc
xchg
movs
and
cmps
mov
push
mov
fisttp
inc
rcl
and
jecxz
mov
push
hlt
add
xor
repz
les
retf
add
ret
iretw
out
je
and
adc
rcr
and
add
jle
add
rol
push
adc
sub
movs
pop
lock
je
add
(bad)
inc
mov
loopne
aad
xor
push
(bad)
addr16
pusha
les
push
or
lds
ds
outs
inc
cmp
aaa
add
push
jbe
jge
jae
push
ja
in
mov
test
in
(bad)
out
addr16
hlt
pop
mov
pop
cmc
pop
pop
dec
push
mov
push
test
mov
sti
push
scas
xchg
call
xchg
test
movs
mov
xchg
mov
xor
int
loopne
aad
leave
and
out
scas
jmp
sti
mov
xor
sar
(bad)
fs
xor
add
ret
pop
data16
out
je
and
adc
repnz
jmp
adc
and
add
and
xchg
adc
adc
or
and
and
outs
and
add
mov
loopne
aad
xor
sbb
dec
push
push
les
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
test
into
add
mov
out
je
and
adc
out
lahf
fst
data16
cmp
cmp
je
add
pop
adc
ds
aaa
pop
movs
push
lock
lds
and
sbb
adc
xor
and
les
sub
outs
das
jg
add
aam
add
push
jb
add
jle
ins
ja
in
mov
test
in
cmovae
jo
inc
hlt
push
mov
dec
cmc
cs
pushw
cmps
xchg
mov
gs
out
mov
adc
inc
xor
test
lods
mov
and
jo
inc
in
movs
mov
(bad)
iret
sahf
movs
cmps
iret
xor
pusha
cmps
push
stc
mov
xor
int
fiadd
mov
inc
jecxz
jecxz
rol
push
out
shl
mov
ret
fs
xor
add
ret
data16
bnd
and
adc
les
daa
test
add
jp
add
xor
adc
sub
push
lock
sub
pop
cmps
pop
daa
inc
mov
loopne
aad
xor
push
(bad)
inc
push
les
imul
das
cmp
outs
inc
pop
aam
add
push
xor
jno
jae
ss
in
mov
test
pop
in
nop
gs
hlt
dec
mov
pop
cmc
push
pop
dec
push
mov
push
movs
mov
inc
cdq
xchg
(bad)
xchg
adc
mov
and
jo
inc
jmp
iret
frstor
mov
pusha
mov
xor
repz
out
ret
and
out
scas
mov
push
jmp
(bad)
xor
lock
cmc
fs
lds
ret
(bad)
sahf
data16
out
je
and
adc
rcr
and
add
jl
aas
pop
adc
adc
xor
adc
add
movs
cmovg
xor
loopne
aad
xor
or
les
imul
das
cmp
pop
inc
and
xor
inc
mov
push
jno
jns
outs
test
in
mov
test
in
nop
pop
addr16
pop
mov
pop
cmc
pop
pop
push
push
mov
mov
gs
test
xchg
xchg
jne
xchg
xchg
adc
div
mov
movs
and
cmps
les
mov
xor
rcl
jecxz
(bad)
adc
inc
loop
mov
cld
(bad)
movs
push
mov
ret
xor
iret
mov
shl
add
iret
pop
data16
into
je
and
adc
ret
lahf
in
push
pop
push
test
rol
and
xchg
pop
sete
rol
pop
adc
or
and
and
push
cmps
pop
daa
das
mov
loopne
aad
xor
sbb
dec
push
dec
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
fisub
out
je
and
adc
cmps
lahf
in
and
and
shr
aaa
add
aas
xchg
ds
aaa
rol
pop
adc
cmp
movs
inc
lock
lds
sbb
or
and
cmp
pop
push
(bad)
push
push
les
cmp
popa
das
jge
inc
jge
jo
inc
mov
push
jno
sbb
inc
div
ja
in
mov
test
sbb
inc
divps
je
dec
hlt
dec
mov
push
cmc
cmp
gs
mov
xchg
add
push
jmp
add
cmps
xchg
adc
inc
xor
mov
fdivr
test
xchg
fild
movs
mov
mov
pusha
mov
xor
xchg
xlat
in
sti
adc
inc
loopne
inc
(bad)
aam
out
(bad)
xor
into
mov
repnz
xor
add
les
loop
xchg
and
adc
rcr
test
shr
and
xchg
and
jbe
add
push
adc
sub
sbb
and
pop
cmps
xor
loopne
aad
xor
push
(bad)
arpl
les
movs
pop
inc
jae
fs
aas
(bad)
pop
inc
je
jno
inc
mov
push
imul
push
ja
in
mov
test
sbb
inc
andnps
dec
outs
hlt
push
mov
push
cmc
das
pop
dec
push
(bad)
xchg
cmps
add
push
jmp
add
xchg
xchg
jne
xchg
stos
adc
lods
mov
and
jo
inc
nop
movs
fisub
xchg
mov
xor
rcl
inc
ficom
call
inc
loope
cmc
inc
inc
into
push
lock
xor
repz
(bad)
fs
retf
in
ror
je
and
adc
rcr
adc
in
add
jle
sbb
add
adc
cs
aaa
add
and
or
imul
es
loopne
aad
xor
adc
jae
les
push
lds
ds
jnp
cmp
mov
push
ins
aad
aas
push
in
mov
test
dec
in
nop
dec
addr16
xchg
jp
jae
pop
pop
dec
push
xchg
xchg
movs
add
push
movs
gs
mov
xchg
jne
xchg
pushf
adc
lods
mov
and
jo
inc
xchg
movs
mov
es
pushf
xor
pusha
cmps
push
sti
mov
xor
xchg
xlat
aad
mov
(bad)
in
mov
push
mov
shl
mov
(bad)
fs
xor
add
ror
je
and
adc
rcr
test
rol
and
xchg
rol
pop
adc
or
and
and
daa
and
add
pop
daa
das
mov
loopne
aad
xor
push
(bad)
addr16
inc
les
push
jge
jns
or
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
test
leave
add
mov
ret
data16
shl
adc
out
lahf
ficom
sub
add
cmp
sub
add
inc
adc
add
movs
inc
lock
lds
and
pop
cmps
popa
daa
push
mov
loopne
aad
xor
push
(bad)
arpl
les
sub
lds
arpl
push
inc
gs
add
push
outs
aad
aas
jge
jno
inc
in
mov
test
push
inc
minps
jo
push
hlt
dec
mov
dec
cmc
and
pop
push
mov
push
in
gs
test
push
test
xchg
xchg
scas
adc
xor
inc
cmps
movs
mov
mov
pusha
mov
xor
rcl
jecxz
sti
adc
inc
loop
inc
(bad)
fist
ret
xor
test
shl
add
iret
(bad)
xchg
scas
out
je
and
adc
fistp
adc
in
add
jns
inc
pop
cmp
je
add
inc
adc
das
mov
aaa
add
sbb
or
adc
sub
jns
inc
mov
loopne
aad
xor
push
(bad)
dec
push
les
sub
outs
das
jbe
inc
inc
jg
jne
inc
mov
push
push
add
outs
imul
jne
jg
or
in
andps
jo
inc
hlt
push
mov
or
push
xchg
xchg
movs
add
push
cli
gs
test
add
cmps
xchg
fist
lods
lods
mov
and
jo
inc
scas
movs
(bad)
call
push
mov
fisttp
inc
fst
lods
and
jecxz
sti
inc
rol
push
test
repnz
cmp
fs
xor
gs
lock
je
and
adc
rcr
and
add
jl
add
rol
push
adc
sub
movs
and
add
movs
add
cmps
bound
es
loopne
aad
xor
push
(bad)
ja
pusha
les
imul
das
aas
(bad)
pop
inc
pop
aam
add
push
jb
jle
push
ins
ja
in
mov
test
jp
dec
nop
pop
addr16
hlt
pop
mov
jg
pop
pop
dec
push
lea
stos
gs
test
push
cdq
xchg
call
ss
and
test
movs
mov
lahf
cmps
xor
mov
xor
repz
jecxz
out
jmp
inc
out
scas
mov
push
inc
(bad)
xor
sar
(bad)
fs
xor
add
ret
(bad)
retf
data16
out
je
and
adc
ret
xchg
daa
pop
and
add
and
push
rol
sbb
or
es
or
add
mov
loopne
aad
xor
sbb
les
nop
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xchg
into
add
mov
out
je
and
adc
out
lahf
fst
shr
sub
and
add
cmp
cmc
pop
adc
ds
aaa
pop
movs
push
lock
lds
sbb
jns
adc
xor
es
arpl
les
sub
outs
das
jle
jp
(bad)
aam
add
push
jbe
sbb
jle
ss
in
mov
test
in
cmovae
inc
addr16
hlt
dec
mov
push
cmc
cmp
pushw
adc
xchg
add
jne
xchg
lods
adc
xor
inc
cwde
movs
mov
es
mov
lea
push
stc
mov
xor
xchg
xlat
fiadd
mov
inc
jecxz
cld
inc
rol
rcl
shl
mov
ret
les
mov
ret
lock
je
and
adc
fcomp
daa
test
sub
xor
outs
arpl
xor
push
cmc
add
adc
sbb
pop
lds
and
sbb
and
das
mov
loopne
aad
xor
dec
(bad)
addr16
les
cmp
bound
jbe
inc
jl
arpl
sub
sbb
ins
not
inc
in
mov
test
gs
in
andnps
je
inc
hlt
dec
mov
inc
cmc
and
push
push
mov
push
jmp
add
add
jne
xchg
jmp
ss
mov
and
jo
inc
mov
iret
xchg
es
cmps
shl
mov
xor
jecxz
out
ficom
lods
and
out
scas
cmc
inc
(bad)
(bad)
jecxz
out
add
xor
cmp
fs
xor
gs
(bad)
aam
lock
je
and
adc
mov
pop
and
add
xor
xchg
xor
add
pop
adc
sub
add
add
and
pop
cmps
xor
loopne
aad
xor
or
les
push
dec
inc
jnp
arpl
cmp
aam
add
push
ins
aad
aas
outs
div
inc
in
mov
test
gs
in
nop
pop
addr16
xchg
jg
dec
cmc
pop
pop
push
push
mov
mov
gs
test
xchg
xchg
adc
inc
xchg
xchg
mov
div
mov
movs
(bad)
and
pushf
cmps
xchg
xor
pusha
mov
xor
rcl
inc
out
in
and
loop
mov
push
mov
ret
xor
fstp
shl
add
iret
pop
data16
je
and
adc
rcr
test
rol
in
add
and
push
rol
pop
adc
or
and
and
xor
push
cmps
push
daa
adc
xor
and
les
inc
cmp
push
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
frstor
out
je
and
adc
movs
lahf
in
or
shr
sub
aas
xchg
cmp
adc
cmp
movs
inc
lock
lds
and
sbb
adc
and
ds
sbb
les
cmp
popa
das
jge
inc
and
jb
inc
mov
push
jne
add
jge
push
ja
in
mov
test
in
divps
je
pop
hlt
dec
mov
push
cmc
cs
gs
lea
jmp
add
fld
xor
mov
fdivr
test
xchg
mov
and
jo
inc
mov
mov
or
mov
push
mov
fild
inc
loop
mov
inc
loopne
std
inc
cli
(bad)
rcl
(bad)
xor
iret
mov
repnz
add
les
sti
je
and
adc
in
lahf
jmp
aaa
pop
daa
test
ins
in
add
xchg
pop
sete
rol
sbb
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
dec
(bad)
arpl
les
sub
fs
je
inc
inc
ins
aam
add
push
push
aad
aas
ins
not
inc
in
mov
test
in
orps
pusha
addr16
dec
mov
jae
and
dec
push
(bad)
xchg
cmps
add
push
in
mov
mov
test
xchg
xchg
nop
adc
div
leave
inc
stos
movs
movs
and
stc
cmps
shl
mov
xor
rcl
inc
rcl
mov
inc
loope
sti
inc
rol
mov
xor
cmp
fs
xor
ror
je
and
adc
mov
pop
adc
in
add
cmp
aaa
rol
sbb
xor
and
add
cmp
or
cs
pop
cmps
bound
and
xor
or
jae
les
push
je
pusha
lds
cmp
jnp
jnp
jle
inc
mov
push
push
aad
aas
push
in
mov
test
inc
in
nop
pop
addr16
push
mov
push
cmc
pop
pop
dec
push
xchg
xchg
movs
add
push
movs
gs
test
push
ret
adc
inc
xor
pushf
adc
div
mov
movs
mov
es
cmps
lahf
xor
pusha
cmps
push
in
mov
fisttp
inc
cld
adc
and
in
mov
push
mov
shl
mov
(bad)
fs
xor
add
ror
je
and
adc
ret
lahf
jmp
and
and
add
add
dec
add
and
adc
push
cmc
pop
adc
or
es
or
dec
or
xor
and
ds
sbb
les
push
jge
cmp
or
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
test
leave
add
mov
ret
mov
je
and
adc
in
lahf
ficom
sar
cmp
cmp
xor
adc
add
movs
push
lock
lds
and
pop
cmps
popa
daa
add
xor
push
(bad)
dec
push
pop
les
movs
jl
xor
arpl
arpl
push
inc
popa
aam
add
push
outs
aad
aas
inc
test
in
mov
test
outs
in
minps
jo
push
hlt
dec
mov
dec
cmc
and
pop
push
lea
in
gs
xchg
add
test
xchg
xchg
scas
adc
lods
mov
and
jo
inc
pushf
movs
(bad)
and
mov
pusha
mov
xor
out
jecxz
sti
adc
inc
loop
inc
(bad)
xlat
push
in
ret
xor
test
shl
add
iret
(bad)
frstor
out
je
and
adc
loopne
in
or
sar
cmp
outs
cmp
pop
pop
add
adc
or
push
lock
lds
movs
add
cmps
jns
daa
mov
loopne
aad
xor
inc
(bad)
push
push
les
sub
lds
je
inc
inc
and
push
inc
mov
push
push
aad
aas
jae
ss
in
mov
test
push
out
addr16
dec
mov
pop
cmc
pusha
pop
push
push
cmps
xchg
movs
add
push
jmp
add
nop
xchg
jne
xchg
adc
mov
and
jo
inc
xchg
movs
mov
(bad)
iret
fwait
es
mov
and
mov
fisttp
rcl
mov
inc
jecxz
cmc
inc
rol
push
jecxz
shl
mov
les
fwait
add
ret
lock
je
and
adc
mov
pop
and
add
xor
xchg
das
rol
push
adc
xor
cmp
dec
lds
and
sbb
adc
and
cmp
or
ja
pusha
les
imul
das
cmp
add
aam
add
push
(bad)
aad
aas
jae
inc
ja
in
mov
test
pop
in
(bad)
out
addr16
hlt
pop
mov
dec
cmc
inc
pop
dec
push
mov
xchg
add
push
test
add
cdq
xchg
call
mov
jo
inc
lods
movs
mov
es
cmps
cwde
xor
pusha
mov
xor
repz
jecxz
repz
and
out
scas
mov
push
inc
(bad)
xor
cmp
fs
xor
add
ret
pop
data16
out
je
and
adc
fstp
and
add
daa
xchg
pop
pop
xchg
adc
add
sbb
or
and
and
outs
and
push
cmps
cmp
inc
mov
loopne
aad
xor
push
(bad)
jae
push
les
nop
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
fs
xor
add
mov
out
je
and
adc
loopne
ficom
shr
push
add
cmp
xor
add
pop
adc
ds
aaa
pop
movs
pop
lock
lds
and
sbb
mov
loopne
aad
xor
es
push
push
pusha
les
sub
lds
jle
push
inc
outs
aam
add
push
jbe
sbb
inc
not
jle
inc
mov
test
popa
in
cmovae
inc
addr16
inc
mov
push
cmc
cmp
gs
cmps
xchg
mov
gs
test
push
add
jne
xchg
lods
adc
div
fiadd
movs
mov
es
mov
xchg
push
stc
mov
xor
repz
fiadd
mov
inc
jecxz
cld
inc
rol
fist
shl
mov
ret
les
mov
ret
data16
out
je
and
adc
loopne
jmp
sar
sub
cmp
xchg
adc
push
cmc
push
adc
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
pop
(bad)
push
push
les
sub
bound
je
push
inc
pop
aam
add
push
jns
push
aas
outs
not
inc
in
mov
test
dec
in
cvtdq2ps
and
hlt
dec
mov
pop
cmc
outs
pop
dec
push
mov
xchg
add
push
sti
mov
add
test
xor
stos
adc
mov
jo
inc
jmp
iret
mov
xor
pusha
mov
xor
jecxz
out
rcl
mov
inc
out
scas
sti
inc
(bad)
(bad)
rcl
(bad)
xor
into
mov
cmc
repnz
gs
(bad)
(bad)
lock
je
and
adc
mov
pop
and
add
cmp
sub
adc
sub
movs
cmp
dec
lds
and
sbb
pop
mov
loopne
aad
xor
push
(bad)
dec
push
push
les
imul
das
cmp
outs
inc
and
je
inc
mov
push
jge
jno
ins
test
in
mov
test
pop
in
(bad)
out
addr16
hlt
pop
mov
or
inc
pop
dec
push
(bad)
xchg
mov
gs
test
push
mov
inc
xchg
xchg
mov
cmps
jmp
and
jo
inc
mov
iret
fisub
lahf
cmps
pushf
xor
pusha
mov
xor
rcl
loopne
out
in
and
loop
mov
push
mov
ret
xor
(bad)
mov
shl
add
iret
pop
data16
out
je
and
adc
ficomp
push
test
rol
in
add
and
adc
adc
or
push
lock
sbb
add
mov
loopne
aad
xor
es
push
push
dec
les
nop
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
frstor
out
je
and
adc
loopne
out
xor
and
shr
adc
aas
xchg
es
xor
push
cmc
pop
adc
ds
aaa
xor
and
add
adc
and
ds
sbb
les
cmp
popa
das
jge
push
inc
cs
add
push
jne
add
jge
inc
ja
in
mov
test
push
inc
divps
fs
dec
mov
dec
cmc
cs
pushw
mov
push
jmp
add
add
jne
xchg
mov
cmp
ss
xchg
jo
inc
mov
sahf
xchg
mov
xor
jecxz
in
loop
mov
inc
loopne
std
inc
cli
(bad)
fcom
(bad)
xor
sar
shl
add
les
out
shl
adc
cmps
lahf
jmp
adc
daa
test
add
xchg
pop
xor
cmc
sbb
or
pop
lock
lds
and
sbb
and
and
xor
push
(bad)
push
push
push
les
sub
fs
inc
(bad)
push
inc
pop
aam
add
push
push
dec
aas
jae
popa
ja
in
mov
test
jb
inc
packsswb
pusha
addr16
hlt
dec
mov
dec
cmc
pusha
pop
dec
push
lea
sti
gs
sahf
add
test
xchg
xchg
scas
adc
div
fiadd
movs
(bad)
and
stc
cmps
mov
push
movs
mov
xor
rcl
in
rcl
test
inc
loope
ret
inc
rol
ficom
ret
xor
test
cld
xor
add
ror
je
and
adc
out
lahf
int3
xchg
and
adc
in
add
xor
xchg
and
add
sbb
sbb
and
add
xor
pop
lds
push
cmps
and
inc
mov
loopne
aad
xor
or
arpl
les
push
lds
ds
jnp
push
aam
add
push
jno
jb
outs
not
jne
arpl
push
in
nop
jns
jle
push
mov
or
pop
pop
dec
push
adc
xchg
add
xchg
xor
mov
mov
mov
and
jo
inc
call
iret
fsub
out
cmps
(bad)
xor
pusha
cmps
push
in
scas
xor
xchg
xlat
aad
(bad)
adc
and
in
mov
push
mov
shl
mov
(bad)
fs
jmp
pop
data16
out
je
and
adc
fstp
and
push
rol
in
add
and
sbb
push
cmc
pop
adc
or
adc
add
aaa
and
or
xor
and
ds
sbb
les
movs
jge
and
or
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
test
leave
add
mov
fsub
out
je
and
adc
cmps
lahf
fst
sar
dec
add
cmp
xchg
aaa
rol
inc
adc
push
mov
aaa
add
push
lock
lds
push
movs
cmovg
cmps
sbb
add
xor
push
(bad)
push
push
pop
les
movs
ins
inc
dec
lds
arpl
inc
es
add
push
jb
sbb
inc
mul
inc
in
mov
test
minps
pusha
addr16
hlt
dec
mov
dec
cmc
and
pop
push
mov
push
in
gs
call
xchg
fst
xchg
div
fild
movs
and
cmps
mov
test
push
mov
fbld
in
test
inc
loop
inc
(bad)
xlat
push
out
ret
xor
test
shl
add
iret
(bad)
frstor
out
je
and
adc
movs
lahf
in
push
pop
adc
add
cmp
add
sete
rol
pop
adc
or
pop
lock
lds
movs
add
cmps
and
inc
mov
loopne
aad
xor
or
les
push
pop
inc
inc
lds
je
add
aam
add
push
outs
aad
aas
ins
div
ja
in
mov
test
inc
in
punpckldq
jo
push
hlt
inc
mov
adc
and
xchg
lahf
add
push
in
gs
add
nop
xchg
jne
xchg
call
xor
inc
scas
movs
cwde
and
mov
xchg
xor
pusha
cmps
push
movs
mov
xor
jecxz
aam
mov
(bad)
jecxz
ret
(bad)
into
push
out
shl
mov
jmp
lea
ret
lock
je
and
adc
movs
lahf
into
xchg
push
pop
and
add
cmp
sub
push
cmc
push
adc
sub
add
xor
and
sbb
push
loopne
aad
xor
or
les
push
dec
inc
jl
bound
cmp
outs
inc
je
jo
inc
mov
push
imul
ss
in
mov
test
gs
dec
nop
gs
hlt
dec
mov
adc
push
pop
dec
push
lea
test
cdq
test
push
mov
inc
xor
hlt
adc
xchg
mov
movs
mov
loop
mov
pusha
mov
xor
repz
jecxz
not
call
inc
out
scas
mov
push
inc
(bad)
xor
repnz
(bad)
fs
out
fucom
in
gs
pop
data16
out
je
and
adc
(bad)
lahf
jmp
rol
in
add
daa
xchg
pop
pop
xchg
adc
add
sbb
add
add
add
and
push
cmps
adc
cmp
xor
es
xor
sbb
les
nop
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
test
into
add
mov
out
je
and
adc
movs
lahf
ficom
cmp
ins
in
add
and
xor
add
pop
adc
cmp
movs
pop
lock
lds
and
sbb
mov
loopne
aad
xor
sbb
les
sub
lds
jle
push
inc
daa
aam
add
push
push
push
aas
inc
imul
jle
inc
mov
test
gs
cmovae
cmp
hlt
dec
mov
push
cmc
cmp
gs
mov
mov
gs
xchg
add
fld
xor
mov
ss
mov
and
jo
inc
mov
popf
es
push
stc
mov
xor
xchg
xlat
fiadd
mov
inc
jecxz
cld
inc
out
fist
shl
mov
ret
lds
lea
ret
data16
out
je
and
adc
out
lahf
jmp
xor
and
daa
sar
sub
cmp
xchg
adc
push
cmc
push
adc
or
adc
pop
lds
and
pop
cmps
and
cmp
xor
pop
(bad)
addr16
les
cmp
bound
cmp
aam
add
push
imul
push
ja
in
mov
test
gs
in
packsswb
and
hlt
inc
mov
js
gs
push
push
lea
cmc
gs
mov
push
xchg
xchg
xchg
xchg
nop
adc
mov
jo
inc
test
mov
xor
pusha
mov
xor
xchg
xlat
fadd
mov
inc
out
scas
ret
inc
add
(bad)
xor
xchg
hlt
xor
add
ret
(bad)
loope
mov
and
adc
cmps
lahf
rcl
jg
ins
in
add
add
sub
add
add
cs
aaa
add
and
adc
mov
loopne
aad
xor
adc
dec
push
push
les
push
dec
inc
lds
je
inc
pusha
aam
add
push
sub
test
in
mov
test
in
andnps
pop
outs
hlt
push
mov
pop
cmc
push
pop
dec
push
mov
mov
mov
cli
push
add
jne
xchg
mov
mov
mov
and
jo
inc
hlt
movs
and
cmps
fnstenv
pusha
mov
xor
rcl
loopne
lock
and
loop
mov
push
mov
ret
xor
mov
shl
add
iret
pop
shl
xor
adc
aam
jmp
test
add
and
sbb
add
pop
adc
or
sub
and
add
cmp
and
cmp
sbb
arpl
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
pop
data16
xor
adc
loopne
out
and
and
shr
dec
add
aas
xchg
and
adc
ds
aaa
xor
and
add
pop
loopne
aad
xor
es
addr16
les
cmp
popa
das
jge
push
inc
cs
add
push
imul
ins
ja
in
mov
test
jb
inc
divps
pmuludq
xchg
cmp
cmc
das
pop
pushw
lea
sti
gs
out
mov
adc
inc
xor
mov
(bad)
inc
fwait
jo
inc
cdq
movs
and
cmps
mov
test
push
mov
fild
inc
loope
mov
inc
loopne
std
inc
aam
fcom
(bad)
xor
sar
shl
add
les
out
lock
adc
cmps
lahf
jmp
shr
cmp
xchg
pop
xchg
pop
rol
sbb
or
push
lock
lds
and
sbb
daa
daa
push
mov
loopne
aad
xor
sbb
les
sub
fs
je
push
inc
ins
aam
add
push
pop
aad
aas
jae
jno
jg
add
gs
in
punpcklwd
arpl
hlt
inc
mov
ja
bound
push
push
lea
hlt
pop
add
xchg
jne
xchg
xchg
adc
xor
inc
stos
movs
xchg
and
mov
pusha
mov
xor
rcl
fild
mov
mov
clc
inc
loope
rol
loopne
out
ret
xor
iret
mov
(bad)
repz
ror
je
and
adc
cmps
lahf
rcl
ins
sar
or
add
das
rol
add
jg
mov
aaa
aas
movs
dec
lock
lds
xor
and
es
loopne
aad
xor
or
les
sub
pusha
das
je
push
inc
and
imul
jae
push
ja
in
mov
test
imul
pusha
addr16
hlt
push
mov
dec
cmc
pop
pop
dec
push
mov
movs
add
push
test
leave
test
ret
adc
inc
xor
pushf
adc
div
test
movs
test
mov
xor
mov
pushf
fisttp
inc
cmc
adc
and
in
mov
push
mov
shl
mov
(bad)
fs
loopne
leave
in
ror
je
and
adc
fistp
and
add
add
adc
and
push
rol
pop
adc
or
push
lock
lds
dec
add
sub
and
ds
sbb
addr16
inc
les
push
jl
pop
lds
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
fs
xor
add
mov
fisub
out
je
and
adc
cmps
lahf
fst
daa
sar
adc
cmp
xchg
xor
add
inc
adc
push
mov
aaa
add
add
and
push
cmps
xor
push
mov
loopne
aad
xor
and
les
sub
arpl
arpl
inc
and
arpl
jb
sbb
inc
div
inc
in
mov
test
jp
inc
minps
pusha
addr16
hlt
dec
mov
dec
cmc
daa
pop
pop
push
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
mov
ss
mov
and
jo
inc
mov
fwait
and
mov
mov
push
mov
fild
inc
in
test
inc
loop
inc
(bad)
rcl
ret
xor
sar
shl
add
iret
(bad)
frstor
out
je
and
adc
movs
lahf
jmp
test
sar
pop
add
cmp
xchg
adc
adc
or
sbb
push
lds
and
add
xor
and
fs
sub
push
push
les
xor
lds
daa
(bad)
jp
jne
aaa
add
push
outs
aad
aas
jb
push
ja
in
mov
test
gs
in
(bad)
out
addr16
hlt
inc
mov
pop
cmc
fs
push
push
mov
lahf
add
push
mul
test
add
add
jne
xchg
mov
xor
inc
xchg
movs
shl
cmps
cmps
(bad)
xor
pusha
cmps
push
movs
mov
xor
repz
aam
movs
adc
jecxz
ret
(bad)
hlt
push
fiadd
shl
mov
jmp
lea
ret
mov
je
and
adc
in
xlat
xchg
push
pop
and
add
add
and
push
cmc
adc
jg
mov
aaa
xor
and
and
or
and
cmp
or
inc
push
pusha
les
sub
bound
jbe
inc
inc
and
ins
add
push
jno
(bad)
ins
not
inc
in
mov
test
in
andnps
je
inc
hlt
dec
mov
dec
cmc
and
dec
push
lea
movs
gs
cli
add
scas
xchg
jne
xchg
lahf
adc
mov
jo
inc
jmp
iret
fldenv
(bad)
cmps
cwde
xor
pusha
mov
xor
xchg
xlat
jecxz
int
call
inc
out
scas
mov
push
inc
(bad)
xor
(bad)
mov
(bad)
fs
loope
mul
loope
ret
pop
data16
repz
and
adc
aam
jmp
rol
in
add
and
adc
add
sbb
add
jbe
add
and
pop
cmps
add
loopne
aad
xor
sbb
push
push
push
les
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
shl
add
mov
out
je
and
adc
movs
lahf
ficom
cmp
ins
in
add
and
xor
add
pop
adc
cmp
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
sbb
les
movs
push
inc
dec
lds
jle
inc
inc
and
push
inc
mov
push
push
(bad)
inc
test
in
mov
test
jge
inc
cmovae
pusha
addr16
hlt
dec
mov
push
cmc
pusha
pop
gs
xchg
xchg
mov
gs
out
mov
adc
inc
xor
mov
xor
inc
mov
mov
call
push
stc
mov
xor
jecxz
fiadd
mov
inc
jecxz
cld
inc
out
fist
shl
mov
ret
lds
lea
ret
mov
je
and
adc
out
lahf
jmp
push
pop
and
daa
sar
adc
cmp
cmp
xor
adc
or
sbb
and
sbb
mov
loopne
aad
xor
sub
inc
push
les
xor
imul
(bad)
jns
push
aam
add
push
jge
pop
aas
jns
ins
ja
in
mov
test
pop
in
punpcklbw
pop
addr16
inc
mov
push
cmc
arpl
push
push
lea
hlt
mov
test
mov
inc
xor
scas
adc
mov
mov
inc
scas
movs
shl
mov
mov
pusha
mov
xor
xchg
xlat
fadd
mov
iret
korw
scas
hlt
inc
aam
aad
out
(bad)
xor
cwde
mov
hlt
fs
xor
gs
(bad)
cld
repz
je
and
adc
out
rcl
data16
xor
outs
add
and
adc
aaa
mov
aaa
add
and
cmp
xor
cmp
xor
or
arpl
les
cmp
arpl
ds
pop
inc
je
outs
add
push
popa
aad
aas
ins
mul
inc
in
mov
test
push
inc
orps
cmp
hlt
dec
mov
or
cmp
dec
push
mov
mov
gs
test
into
xchg
jne
xchg
mov
lods
mov
and
jo
inc
nop
movs
xchg
loop
mov
pusha
mov
xor
out
loopne
int
jmp
scas
mov
push
mov
ret
xor
fistp
shl
add
iret
pop
retw
out
je
and
adc
loope
cli
xchg
or
shl
and
xchg
pop
xchg
adc
add
pop
adc
or
adc
add
or
add
cs
aad
xor
cmp
push
push
dec
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
pop
data16
(bad)
je
and
adc
out
lahf
out
or
shr
dec
add
xchg
pop
and
adc
ds
aaa
xor
and
add
or
xor
es
inc
push
les
cmp
popa
das
jge
inc
inc
popa
aam
add
push
imul
inc
ja
in
mov
test
divps
and
hlt
dec
mov
dec
cmc
ins
pop
pushw
(bad)
xchg
xchg
add
push
sti
lods
test
push
nop
xchg
jne
xchg
in
adc
mov
jo
inc
out
movs
cwde
and
mov
mov
xchg
push
mov
fild
inc
loope
mov
inc
loopne
std
inc
(bad)
mov
xor
test
repnz
add
les
jecxz
mul
loopne
(bad)
cmc
mov
lahf
jmp
shr
dec
add
and
adc
add
sbb
or
adc
push
lds
sub
sbb
loopne
aad
xor
sub
dec
push
push
les
aaa
movs
ins
inc
dec
lds
(bad)
push
inc
pop
aam
add
push
jb
pop
aas
dec
test
in
mov
test
push
inc
unpckhps
arpl
hlt
jge
arpl
jnp
push
push
lea
mul
test
push
mov
inc
xchg
xchg
mov
xor
inc
mov
iret
movs
mov
pusha
mov
xor
out
fild
mov
in
mov
inc
rol
in
push
jmp
push
cmp
fs
xchg
add
ror
je
and
adc
loope
rcl
shl
inc
add
add
and
add
add
jg
mov
aaa
aas
movs
inc
lock
lds
dec
and
cmp
xor
push
(bad)
jae
les
sub
pusha
das
ds
push
inc
inc
aam
add
push
pop
aad
aas
outs
div
ja
in
mov
test
adc
inc
andnps
inc
addr16
xchg
jl
or
das
pop
dec
push
mov
movs
add
push
cli
gs
test
add
add
jne
xchg
mov
xor
inc
scas
movs
mov
mov
mov
nop
pusha
cmps
push
div
lea
xlat
aad
lock
and
in
mov
push
mov
shl
mov
(bad)
fs
loope
scas
in
ror
je
and
adc
les
and
xor
and
cmp
and
pop
rol
pop
adc
or
cs
aaa
and
add
das
loopne
aad
xor
ds
ja
inc
les
push
inc
inc
popa
lds
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
fdiv
enter
clc
gs
shl
xchg
jecxz
out
cmc
fidiv
lahf
fst
and
jnp
sub
cmp
xchg
xor
add
inc
adc
cmp
movs
add
and
push
cmps
xor
inc
mov
loopne
aad
xor
and
les
sub
arpl
arpl
sbb
aam
add
push
jbe
sbb
inc
not
inc
in
mov
test
jb
inc
minps
cmp
hlt
dec
mov
inc
cmc
es
imul
mov
test
push
mov
inc
xchg
xchg
jmp
lods
mov
and
jo
inc
mov
lahf
and
xchg
mov
xor
not
jecxz
in
lods
and
loop
inc
(bad)
iret
push
loop
ret
xor
iret
mov
shl
add
iret
(bad)
frstor
out
je
and
adc
cmps
lahf
jmp
test
sar
pop
add
cmp
xchg
adc
adc
or
adc
push
lds
and
sbb
xor
add
xor
sub
arpl
les
movs
push
inc
inc
lds
(bad)
(bad)
push
inc
inc
aam
add
push
outs
aad
aas
dec
test
in
mov
test
imul
pop
addr16
hlt
jo
pusha
xchg
cmp
cmc
jne
pop
push
cmps
xchg
lahf
add
push
cmc
gs
lods
add
add
jne
xchg
in
adc
div
(bad)
inc
jmp
cmps
cmps
mov
push
cmps
mov
xor
repz
aam
mov
(bad)
jecxz
hlt
inc
rol
push
in
shl
mov
jmp
xchg
add
ret
data16
test
jecxz
loop
shl
lahf
rcl
shl
and
outs
add
push
rol
adc
jg
mov
aaa
xor
and
push
cmps
push
daa
cmp
xor
or
inc
push
pusha
les
movs
dec
inc
inc
lds
cmp
aam
add
push
dec
aad
aas
ins
test
in
mov
test
push
dec
andps
and
hlt
dec
mov
jl
cmp
push
push
lea
jmp
add
nop
xchg
fwait
xchg
adc
mov
and
jo
inc
scas
movs
test
lahf
cmps
mov
xchg
pusha
mov
xor
jecxz
jecxz
lock
and
out
scas
mov
push
inc
(bad)
xor
int
aad
shl
(bad)
fs
loope
int
(bad)
gs
(bad)
xchg
lock
je
and
adc
loope
stc
xchg
aaa
pop
and
add
and
adc
add
sbb
add
sub
lock
sbb
add
sub
es
xor
cmp
arpl
les
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
shl
retf
add
mov
out
je
and
adc
cmps
lahf
in
and
push
test
imul
and
xchg
pop
and
adc
push
mov
aaa
pop
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
sbb
les
movs
or
das
jle
inc
inc
das
aam
add
push
outs
aad
aas
inc
imul
jle
inc
mov
test
in
cmovae
pusha
addr16
dec
mov
or
push
cmps
xchg
mov
gs
out
mov
adc
inc
xor
call
lods
mov
and
jo
inc
out
movs
fbld
mov
mov
push
stc
mov
xor
int
fiadd
mov
inc
jecxz
cld
inc
cdq
mov
xor
xchg
ret
fs
xor
gs
mov
je
and
adc
in
lahf
jmp
or
shl
add
cmp
pop
pop
es
sbb
push
cmc
push
adc
or
sbb
push
lds
and
push
cmps
jge
aaa
mov
loopne
aad
xor
sub
ja
les
xor
push
inc
dec
lds
popa
mov
aam
add
push
ins
aad
aas
dec
not
inc
in
mov
test
(bad)
in
cmovno
addr16
hlt
jno
xchg
jg
js
jb
fs
(bad)
xchg
xchg
add
push
lock
test
push
mov
inc
xor
xchg
adc
mov
mov
inc
xchg
movs
cmps
and
mov
xchg
xor
pusha
mov
xor
xchg
xlat
out
(bad)
adc
inc
out
scas
hlt
inc
aam
rcl
(bad)
xor
into
mov
cmc
div
fwait
add
ret
(bad)
cld
data16
xor
(bad)
jne
lahf
rcl
and
ja
syscall
jae
and
xchg
pop
sub
and
add
add
xor
cmp
dec
lds
and
adc
mov
loopne
aad
xor
adc
push
push
push
les
movs
adc
inc
lds
aas
(bad)
sbb
aam
add
push
jbe
add
ins
div
inc
in
mov
test
gs
inc
andps
jo
jp
dec
mov
imul
pop
dec
push
lea
in
gs
test
push
test
xchg
xchg
in
adc
xor
inc
nop
movs
xchg
and
loop
scas
xor
pusha
mov
xor
rcl
inc
rcl
and
loop
mov
push
jmp
ret
xor
lds
ret
xor
add
iret
(bad)
xchg
data16
cmc
je
and
adc
mov
pop
push
test
shl
in
add
daa
xchg
sbb
adc
or
push
lock
outs
and
pop
cmps
cmp
inc
mov
loopne
aad
xor
xor
dec
push
dec
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
pop
mov
je
and
adc
out
lahf
fst
and
add
xchg
pop
cs
das
rol
pop
adc
add
movs
add
dec
lds
add
or
and
ds
es
push
push
les
cmp
popa
das
jge
inc
inc
es
add
push
ins
aad
aas
jle
ss
in
mov
test
jle
inc
divps
and
hlt
inc
mov
inc
cmc
outs
pop
imul
xchg
xchg
add
push
sti
lods
test
push
nop
xchg
jne
xchg
lock
xchg
leave
inc
mov
pushf
and
mov
mov
and
mov
fild
inc
loopne
mov
inc
loopne
std
inc
(bad)
mov
xor
test
bnd
add
les
out
je
and
adc
movs
lahf
jmp
shl
cmp
and
pop
rol
sbb
or
sbb
push
lds
sub
pusha
daa
xor
xor
sub
jae
push
les
movs
ins
inc
dec
lds
mov
aam
add
push
sub
test
in
mov
test
adc
inc
cmovb
das
addr16
hlt
inc
mov
jg
jbe
push
lea
repnz
out
mov
lods
xchg
xchg
xchg
mov
xchg
mov
and
jo
inc
out
mov
es
xchg
xor
pusha
mov
xor
not
in
aad
test
inc
loope
sti
inc
cdq
(bad)
rcl
ret
xor
test
(bad)
div
call
(bad)
(bad)
out
je
and
adc
std
lahf
xlat
xchg
and
adc
daa
shl
sbb
add
xchg
adc
add
add
jg
mov
aaa
add
cmp
pop
lds
and
push
cmps
push
daa
pop
mov
loopne
aad
xor
push
(bad)
push
push
les
sub
lds
jbe
add
aam
add
push
push
add
ins
div
ja
in
mov
test
jge
inc
orps
pusha
addr16
dec
mov
pop
cmc
pusha
pop
push
push
cmps
xchg
movs
add
push
sti
gs
test
push
fld
xor
jmp
ss
mov
and
jo
inc
jmp
iret
fsub
out
cmps
xchg
xor
pusha
cmps
push
div
lea
xlat
aad
(bad)
adc
and
in
mov
push
cmc
add
xor
(bad)
mov
les
int3
add
ror
je
and
adc
mov
pop
and
push
shl
in
add
and
adc
push
cmc
pop
adc
movzx
aaa
xor
and
add
cs
aad
xor
cmp
inc
push
inc
les
push
inc
inc
cmp
or
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
fidiv
enter
(bad)
gs
ret
out
je
and
adc
movs
lahf
out
aaa
pop
and
add
cmp
xchg
and
add
inc
adc
cmp
movs
add
dec
lds
and
push
cmps
and
inc
mov
loopne
aad
xor
es
arpl
les
sub
arpl
arpl
inc
inc
cs
add
push
jbe
inc
aas
inc
div
inc
in
mov
test
dec
in
minps
cmp
hlt
jge
arpl
es
imul
mov
test
mov
inc
xchg
xchg
jmp
xor
inc
cmps
movs
fisub
xchg
mov
xor
rcl
jecxz
in
lods
and
loop
inc
(bad)
cmc
push
(bad)
add
xor
into
mov
shl
add
iret
(bad)
fsub
out
je
and
adc
in
jmp
test
add
cmp
xchg
adc
adc
or
sbb
and
add
aaa
loopne
aad
xor
sub
arpl
les
aaa
movs
push
inc
inc
lds
popa
(bad)
jl
jle
push
add
push
sub
ins
aas
dec
test
in
mov
test
imul
jb
add
inc
mov
je
inc
pop
imul
xchg
cmps
add
push
lock
test
add
xchg
xchg
jne
xchg
mov
div
rol
movs
mov
es
cmps
fwait
xor
pusha
cmps
push
movs
mov
xor
repz
aad
rcl
mov
inc
jecxz
test
ret
add
xor
int
icebp
jbe
test
add
ret
mov
je
and
adc
in
lahf
rcl
and
jbe
and
outs
add
rol
push
adc
xor
cmp
dec
lds
and
adc
push
daa
inc
mov
loopne
aad
xor
adc
push
push
pusha
les
cmp
bound
jbe
push
inc
cmp
push
push
sub
dec
aas
ja
inc
ja
in
mov
test
in
cvtdq2ps
and
hlt
dec
mov
pop
cmc
outs
pop
dec
push
mov
xchg
add
push
sti
gs
cdq
add
cmps
xchg
adc
inc
xor
mov
ss
mov
and
jo
inc
jmp
iret
xchg
es
test
pusha
mov
xor
repz
jecxz
lds
jmp
scas
mov
push
lock
xor
cld
mov
icebp
fnsave
retf
add
ret
pop
data16
xor
adc
loopne
jmp
test
shl
and
xchg
pop
add
adc
or
movs
sbb
add
xor
sbb
add
loopne
aad
xor
xor
jae
push
les
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
fs
retf
add
mov
out
je
and
adc
cmps
lahf
in
xor
push
test
imul
and
xchg
pop
xchg
sub
adc
push
mov
aaa
pop
movs
add
pop
lds
movs
add
cmps
and
add
xor
push
(bad)
jae
pusha
les
sub
lds
jle
add
aam
add
push
(bad)
aad
aas
inc
div
ja
in
mov
test
inc
in
subps
jo
jae
inc
mov
or
push
adc
mov
push
nop
xchg
jne
xchg
call
xor
inc
cdq
movs
shl
mov
movs
xor
pusha
cmps
push
stc
mov
xor
xchg
xlat
fiadd
mov
inc
jecxz
cld
inc
cdq
mov
xor
test
ret
fbstp
lea
ret
data16
out
je
and
adc
jecxz
jmp
or
shl
add
and
adc
push
cmc
push
adc
or
sbb
push
lds
dec
pop
cmps
xor
cmp
xor
sub
ja
les
xor
lds
(bad)
(bad)
push
inc
gs
add
push
sub
push
aas
dec
imul
inc
in
mov
test
(bad)
in
cmovo
dec
pmuludq
xchg
jg
jo
inc
pop
fs
lea
xrelease
inc
xchg
xchg
adc
inc
xor
mov
xchg
push
and
jo
inc
scas
movs
mov
es
cwde
xor
pusha
mov
xor
xchg
xlat
fadd
mov
inc
out
scas
fadd
(bad)
not
(bad)
xor
test
cmc
repz
gs
(bad)
(bad)
data16
out
je
and
adc
in
lahf
rcl
pop
shr
and
outs
add
daa
rol
add
aaa
mov
aaa
add
and
adc
xor
xor
aad
xor
adc
arpl
les
sub
arpl
jnp
inc
pusha
aam
add
push
sub
sbb
jae
popa
ja
in
mov
test
gs
andps
inc
addr16
dec
mov
push
cmc
and
dec
push
(bad)
xchg
mov
gs
test
push
rol
jne
xchg
cwde
adc
lods
mov
and
jo
inc
hlt
movs
test
mov
pusha
mov
xor
not
loopne
(bad)
adc
and
loop
mov
push
cmc
add
xor
cld
mov
ret
lea
fadd
iret
pop
data16
(bad)
je
and
adc
out
lahf
jmp
shl
in
add
xchg
pop
cmp
cmc
push
adc
or
adc
add
or
pop
cmps
adc
adc
aad
xor
cmp
jae
dec
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
pop
data16
out
je
and
adc
in
lahf
fst
and
add
xchg
addr16
sub
push
cmc
pop
adc
add
movs
add
and
add
or
and
ds
and
les
cmp
popa
das
jge
sbb
aam
add
push
ins
aad
aas
dec
not
inc
in
mov
test
pop
in
minps
pop
addr16
inc
mov
inc
cmc
outs
pop
imul
xchg
xchg
add
push
sti
gs
test
push
cmps
xchg
jne
xchg
lock
xchg
mov
and
jo
inc
mov
sahf
mov
pusha
mov
xor
repz
in
loopne
mov
inc
loopne
std
inc
add
(bad)
xor
xchg
repnz
call
(bad)
frstor
out
je
and
adc
out
jmp
shl
sub
cmp
adc
and
adc
or
push
lock
lds
and
add
adc
es
xor
cmp
dec
push
push
les
xor
lds
mov
aam
add
push
xor
push
aas
push
not
inc
in
mov
test
pop
in
lsl
jae
jl
push
mov
dec
cmc
js
jae
mov
cmps
add
push
hlt
gs
call
xchg
jne
xchg
mov
lods
mov
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
rcl
fild
mov
in
mov
loope
ret
inc
rol
push
loope
ret
xor
into
mov
cld
xor
add
ror
je
and
adc
cmps
lahf
rcl
pusha
sar
or
add
and
add
sbb
ds
inc
jg
mov
aaa
add
cmp
dec
lds
add
add
cmps
push
daa
cmp
xor
push
(bad)
dec
push
les
sub
lds
jbe
add
aam
add
push
jp
add
ins
test
in
mov
test
gs
nop
and
hlt
dec
mov
push
push
adc
sahf
add
cmps
xchg
adc
inc
xor
lahf
adc
div
int
xchg
movs
cmps
and
call
push
div
mov
xlat
aad
ret
adc
and
in
mov
push
jmp
shl
mov
(bad)
fs
out
fxam
int3
ror
je
and
adc
loopne
in
or
shl
in
add
and
or
push
cmc
pop
adc
movzx
aaa
xor
and
add
sub
xor
ss
push
push
inc
les
push
pop
inc
inc
lds
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
shl
enter
and
les
out
je
and
adc
movs
lahf
out
aaa
pop
and
add
cmp
xchg
sub
adc
cmp
movs
add
dec
lds
xor
and
dec
mov
loopne
aad
xor
es
dec
push
pop
les
cmp
arpl
arpl
inc
inc
push
aam
add
push
sub
test
in
mov
test
inc
in
divps
inc
addr16
inc
mov
or
and
xchg
mov
gs
test
add
xchg
xchg
jne
xchg
in
adc
lods
mov
and
jo
inc
popf
movs
shl
stc
cmps
cmps
xor
pusha
mov
xor
out
jecxz
out
lods
and
loop
inc
mov
xor
into
mov
shl
add
iret
(bad)
fsub
out
je
and
adc
loope
jmp
test
shl
add
xchg
outs
xchg
push
rol
pop
adc
or
cmp
dec
lds
dec
pop
cmps
bound
es
loopne
aad
xor
push
(bad)
push
push
les
sub
outs
das
je
inc
inc
pop
aam
add
push
pop
aad
aas
ins
div
ja
in
mov
test
dec
in
nop
and
hlt
dec
mov
or
pop
pop
push
push
cmps
xchg
movs
add
push
cli
pop
mov
nop
xchg
jne
xchg
in
adc
xor
inc
xchg
movs
stos
and
loopne
les
pusha
cmps
push
movs
mov
xor
repz
aam
lods
adc
inc
jecxz
ret
xbegin
xor
(bad)
mov
jmp
xchg
add
ret
repz
je
and
adc
jecxz
rcl
jg
je
and
outs
cmp
sbb
adc
xor
xor
pop
lds
pop
movs
add
cmps
push
daa
ds
loopne
aad
xor
adc
addr16
pusha
les
cmp
bound
jne
inc
inc
and
imul
outs
test
in
mov
test
jb
dec
nop
pop
addr16
hlt
dec
mov
ja
push
pop
push
push
mov
xchg
add
push
in
mov
mov
cmps
xchg
pushf
xchg
xchg
adc
mov
and
fild
movs
mov
mov
pusha
mov
xor
int
jecxz
fcom
jmp
scas
mov
push
jmp
(bad)
xor
sar
(bad)
fs
xor
add
ret
pop
movs
out
je
and
adc
movs
lahf
jmp
test
rcr
in
add
cmp
and
outs
xchg
push
rol
sbb
or
movs
sbb
cmp
outs
and
add
xor
es
xor
xor
dec
push
push
les
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
fs
retf
add
mov
out
je
and
adc
cmps
lahf
ficom
and
add
and
sub
add
push
adc
push
mov
aaa
pop
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
push
(bad)
push
push
les
cmp
pusha
das
jle
add
aam
add
push
(bad)
aad
aas
dec
not
jb
inc
mov
test
pop
in
subps
jo
jg
jge
pusha
xchg
jle
or
push
xchg
xchg
cmps
add
push
jmp
add
nop
xchg
jne
xchg
call
div
fild
movs
(bad)
movs
cmps
movs
xor
pusha
cmps
push
stc
mov
xor
repz
rol
mov
inc
in
cld
inc
rol
push
aad
shl
mov
(bad)
fdiv
xchg
add
ror
je
and
adc
out
jmp
push
pop
and
cmp
jne
dec
add
and
adc
push
cmc
pop
adc
adc
pop
lock
movs
add
sbb
add
xor
adc
inc
push
les
sub
lds
je
push
inc
jo
popa
add
push
sub
pop
aas
jo
push
ja
in
mov
test
adc
inc
andnps
and
hlt
jle
xchg
aaa
jne
cmc
pusha
pop
push
push
lea
cli
mov
add
xchg
test
mov
mov
mov
inc
scas
movs
scas
and
cdq
cmps
shl
mov
xor
int
fadd
mov
mov
mov
ret
inc
mov
(bad)
xor
ret
mov
hlt
fs
xor
les
shl
adc
in
rcl
(bad)
shl
xor
outs
add
and
add
add
xor
pop
lock
lds
dec
adc
and
xor
xor
adc
jae
push
les
sub
fs
je
push
inc
and
mov
push
outs
aad
aas
jae
popa
ja
in
mov
test
gs
inc
nop
jo
inc
hlt
dec
mov
je
push
pop
dec
push
(bad)
xchg
cmps
add
push
stos
gs
test
push
test
xchg
xchg
mov
xor
inc
stos
movs
movs
and
mov
pusha
mov
xor
out
in
ficom
mov
inc
loope
mov
(bad)
push
leave
add
xor
cmp
rol
pop
retw
je
and
adc
in
out
xchg
and
adc
add
xchg
pop
outs
xchg
xadd
cmc
push
adc
or
sbb
add
or
add
sub
and
cmp
aaa
mov
pop
xor
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
pop
lock
je
and
adc
out
lahf
ficom
and
ins
in
add
xchg
arpl
adc
push
mov
aaa
xor
and
add
or
and
ds
and
les
sub
bound
jge
sbb
aam
add
push
popa
aad
aas
dec
test
in
mov
test
dec
in
minps
pop
addr16
inc
mov
or
pusha
pop
fs
mov
push
sti
xchg
mov
adc
inc
xor
mov
ss
and
stos
and
mov
pusha
mov
xor
jecxz
loopne
out
mov
inc
out
scas
cld
inc
cli
(bad)
repnz
fadd
(bad)
xor
lds
(bad)
fnsave
xchg
add
ret
(bad)
frstor
out
je
and
adc
loop
jmp
shl
add
daa
xchg
cmp
cmc
pop
adc
aaa
mov
aaa
pop
movs
cmp
dec
lds
or
cmovg
xor
cmp
xor
adc
push
push
push
les
nop
xor
lds
inc
(bad)
push
inc
jo
push
add
push
outs
aad
aas
jo
inc
ja
in
mov
test
push
inc
packsswb
arpl
hlt
jne
arpl
js
push
push
(bad)
xchg
pushf
add
push
cmc
gs
xchg
mov
inc
xchg
xchg
mov
div
aam
out
movs
and
cdq
cmps
lds
pusha
mov
xor
rcl
fild
mov
in
ret
scas
ret
(bad)
movs
push
rol
ret
xor
(bad)
mov
cld
fs
xor
iret
(bad)
jecxz
mul
(bad)
out
cmc
cmc
ret
lahf
rcl
(bad)
sar
inc
add
add
and
add
add
jg
mov
aaa
add
and
sbb
push
loopne
aad
xor
pop
(bad)
push
push
arpl
pop
nop
cmp
outs
das
jne
push
inc
and
add
push
outs
aad
aas
ins
imul
jno
jle
or
in
nop
cmp
hlt
dec
mov
pop
cmc
and
dec
push
xchg
xchg
mov
gs
test
push
nop
xchg
adc
inc
xor
mov
xor
inc
jmp
iret
xchg
es
les
pusha
cmps
push
div
xchg
push
jecxz
rol
mov
mov
mov
inc
test
in
(bad)
add
xor
sar
shl
mov
fsubp
jecxz
in
and
adc
loop
in
xchg
xor
and
add
cmp
sysret
adc
or
push
cmc
pop
adc
movzx
lock
or
dec
add
push
loopne
aad
xor
xor
addr16
inc
les
push
push
inc
push
lds
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
fs
enter
cld
gs
xchg
lock
je
and
adc
cmps
lahf
std
xchg
add
and
add
cmp
xchg
rol
inc
adc
ds
aaa
add
sbb
dec
lds
or
popa
daa
xor
or
xor
es
push
push
pop
les
cmp
arpl
jl
push
inc
push
aam
add
push
sub
mul
inc
in
mov
test
gs
in
divps
jo
ja
inc
mov
or
and
push
mov
push
sti
gs
out
mov
adc
inc
xchg
xchg
in
adc
div
fiadd
movs
test
es
cmps
mov
push
mov
fild
inc
call
lods
and
loop
jecxz
out
ret
push
rol
ret
xor
ret
mov
shl
add
iret
pop
data16
xchg
out
(bad)
cmc
in
jne
lahf
jmp
test
shl
sub
outs
arpl
xor
add
push
adc
xor
xor
dec
lds
pop
movs
add
cmps
and
add
xor
xor
adc
push
push
pop
les
nop
xor
dec
inc
inc
lds
inc
mov
arpl
push
add
push
pop
aad
aas
ja
push
ja
in
mov
test
popa
in
packsswb
pop
addr16
xchg
jne
pop
cmc
jo
push
push
xchg
xchg
lahf
add
push
mul
test
push
fld
xor
mov
div
(bad)
inc
test
mov
xor
pusha
cmps
push
cmps
mov
xor
jecxz
aam
in
adc
jecxz
fadd
(bad)
rcl
shl
mov
jmp
xchg
add
ret
mov
je
and
adc
loop
rcl
jnp
je
and
outs
sbb
pop
pop
aas
xchg
rol
adc
jg
mov
aaa
xor
and
push
cmps
push
daa
and
xor
adc
inc
push
pusha
les
sub
bound
jbe
inc
inc
and
mov
push
sub
add
outs
imul
inc
in
mov
test
in
orps
pop
addr16
hlt
dec
mov
pop
cmc
and
dec
push
mov
push
movs
gs
add
test
xor
stos
adc
mov
jo
inc
xchg
movs
mov
mov
pusha
mov
xor
repz
loopne
rcl
and
out
scas
loope
repnz
scas
push
xlat
add
xor
iret
mov
(bad)
fs
xor
add
ret
(bad)
fisub
out
je
and
adc
in
call
test
rcr
in
add
and
xadd
cmc
sbb
or
movs
daa
lock
or
cmp
cmp
add
xor
sub
push
push
push
les
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
fs
retf
add
mov
out
je
and
adc
out
lahf
stc
xchg
or
shr
push
add
and
sub
add
push
adc
add
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
sub
jae
les
cmp
pusha
das
jge
jp
push
aam
add
push
(bad)
aad
aas
dec
imul
jb
inc
mov
test
pop
in
subps
inc
addr16
inc
mov
adc
ins
pop
imul
xchg
cmps
add
push
in
gs
out
mov
adc
inc
xor
in
adc
xchg
mov
and
jo
inc
mov
popf
es
mov
push
stc
mov
xor
int
rol
mov
inc
in
std
inc
stc
(bad)
icebp
push
aad
shl
mov
(bad)
fidiv
xchg
add
ror
je
and
adc
cld
lahf
jmp
and
and
shl
adc
jg
adc
push
xchg
jne
push
cmc
adc
jg
mov
aaa
xor
or
and
and
aaa
loopne
aad
xor
adc
inc
push
pop
les
aaa
movs
gs
dec
lds
inc
(bad)
push
inc
cmp
push
add
push
push
aad
aas
jno
ss
in
mov
test
push
inc
punpckldq
and
hlt
jae
xchg
jbe
inc
cmc
jo
push
push
mov
xchg
add
push
mul
test
push
mov
inc
xor
mov
ss
mov
inc
xchg
movs
mov
mov
pusha
mov
xor
jecxz
fadd
mov
mov
call
inc
std
(bad)
mov
xor
ret
jbe
div
fs
xor
les
int3
je
and
adc
in
rcl
(bad)
shl
dec
add
sbb
cmp
and
adc
xor
inc
lock
lds
and
sbb
ds
aad
xor
adc
push
push
push
les
cmp
fs
jne
push
inc
push
aam
add
push
(bad)
aad
aas
jb
inc
ja
in
mov
test
in
andnps
jo
pop
hlt
dec
mov
pop
cmc
cmp
dec
push
mov
push
jmp
add
rol
jne
xchg
stos
adc
div
fild
movs
mov
es
xchg
xor
pusha
mov
xor
not
out
int
out
stc
(bad)
loope
loope
test
fist
ret
xor
sar
fs
xor
add
ror
je
and
adc
jecxz
out
xchg
xor
adc
add
cmp
xchg
push
rol
push
adc
or
pop
lock
lds
dec
pop
cmps
cmp
inc
mov
loopne
aad
xor
xor
push
push
dec
les
movs
push
inc
and
push
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
pop
je
and
adc
mov
pop
and
add
xchg
outs
xchg
sub
push
cmc
push
adc
push
mov
aaa
xor
and
add
pavgb
aad
xor
and
addr16
arpl
jnp
sub
bound
jle
inc
pop
aam
add
push
sub
add
ja
in
mov
test
gs
in
minps
je
js
jle
xchg
cmp
cmc
and
fs
lea
cli
gs
out
mov
adc
inc
xor
jmp
xchg
int
cdq
movs
scas
and
stc
cmps
cmps
xor
pusha
mov
xor
int
loopne
(bad)
adc
inc
out
scas
cld
inc
mov
(bad)
xor
fdivr
(bad)
fbstp
xchg
add
ret
(bad)
fisub
out
je
and
adc
call
daa
test
shl
add
jne
cmp
outs
xchg
jne
add
pop
adc
xor
dec
lock
lds
and
and
cmp
es
xor
pop
(bad)
dec
push
push
les
movs
dec
inc
push
lds
dec
(bad)
js
push
aam
add
push
jb
pop
aas
ja
push
ja
in
mov
test
jp
inc
packuswb
arpl
hlt
jno
arpl
jnp
push
push
mov
pushf
add
push
mul
test
push
xchg
xchg
xchg
scas
adc
xchg
mov
and
jo
inc
out
mov
es
cmps
xor
pusha
mov
xor
out
fild
mov
cmc
(bad)
loop
ret
(bad)
in
push
rol
ret
xor
(bad)
mov
cld
fs
xor
gs
(bad)
loop
mul
test
out
cmc
cmc
cld
jne
lahf
xlat
xchg
or
shl
inc
add
add
pop
rol
add
jg
mov
aaa
add
lds
and
and
add
and
and
adc
jae
arpl
pop
nop
cmp
outs
das
je
push
inc
push
aam
add
push
xor
(bad)
jno
push
ja
in
mov
test
dec
in
cvtdq2ps
cmp
hlt
dec
mov
dec
cmc
and
push
push
mov
mov
gs
test
push
add
jne
xchg
test
div
mov
mov
and
mov
mov
xor
repz
fiadd
out
mov
out
test
fist
shl
mov
ret
fidiv
sti
add
ret
shl
je
and
adc
cld
lahf
in
xchg
push
pop
and
add
cmp
and
rol
pop
adc
adc
or
and
add
sub
xor
or
ja
inc
les
push
dec
inc
lds
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
push
enter
fisub
pop
je
and
adc
mov
pop
and
add
cmp
xchg
sub
add
inc
adc
ds
aaa
add
sbb
pop
lds
and
push
cmps
popa
daa
xor
pop
loopne
aad
xor
sub
jae
pop
les
cmp
arpl
jl
push
inc
pop
aam
add
push
xor
dec
aas
inc
mul
inc
in
mov
test
pop
in
divps
jo
jae
inc
mov
or
pusha
pop
push
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
lock
xchg
mov
and
jo
inc
mov
mov
mov
pusha
mov
xor
rcl
jecxz
clc
adc
inc
loop
jecxz
ret
(bad)
std
push
rol
ret
xor
fdivr
shl
add
iret
pop
out
hlt
je
and
adc
call
adc
add
and
rol
adc
jg
mov
aaa
aas
movs
inc
lock
lds
dec
and
xor
and
jge
adc
(bad)
jae
pop
les
xor
outs
das
dec
(bad)
jl
cmp
mov
push
jle
pop
aas
ja
ss
in
mov
test
gs
(bad)
out
addr16
jl
pusha
xchg
jne
ins
cmc
jg
push
push
cmps
xchg
lahf
add
push
cmc
movs
test
push
mov
inc
xor
call
div
xlat
inc
xchg
movs
mov
popf
cmps
xchg
xor
pusha
cmps
push
cmps
mov
xor
repz
aam
cmps
adc
inc
jecxz
fadd
(bad)
rcl
shl
mov
jmp
xchg
add
ret
mov
je
and
adc
out
rcl
sub
add
add
adc
push
cmc
adc
jg
mov
aaa
xor
and
and
add
and
cmp
sub
pop
adc
ja
pusha
les
sub
lds
jnp
sbb
aam
add
push
pop
aad
aas
ja
inc
ja
in
mov
test
gs
in
andnps
pop
addr16
dec
mov
jo
ins
pop
push
push
mov
push
cmc
mov
mov
xchg
xchg
jne
xchg
mov
xchg
cmps
inc
mov
mov
es
pusha
mov
xor
xchg
xlat
loopne
into
adc
and
out
scas
loop
loop
les
(bad)
xor
lds
(bad)
fnstenv
rol
(bad)
fisub
out
je
and
adc
(bad)
lahf
call
test
shl
in
add
and
xor
add
sbb
jg
mov
aaa
add
and
add
add
es
xor
or
arpl
les
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
fs
retf
add
mov
out
je
and
adc
rcr
adc
add
and
sub
add
push
adc
add
movs
add
dec
lds
and
sbb
mov
loopne
aad
xor
sub
arpl
les
cmp
pusha
das
(bad)
(bad)
push
inc
jne
data16
push
inc
aad
aas
jno
ss
in
mov
test
imul
pop
addr16
hlt
pop
mov
inc
cmc
and
jp
adc
movs
add
fld
xor
mov
ss
mov
and
jo
inc
xchg
movs
pushf
and
loope
mov
scas
pusha
cmps
push
sti
mov
xor
xchg
xlat
aad
mov
(bad)
in
mov
rol
call
shl
mov
(bad)
fnsave
xchg
add
ror
je
and
adc
stc
lahf
jmp
and
and
push
shl
adc
and
adc
push
cmc
inc
adc
adc
inc
lock
lds
and
cmps
and
es
loopne
aad
xor
pop
(bad)
ja
pop
les
xor
popa
das
dec
(bad)
cmova
dec
add
push
pop
aad
aas
jb
ins
ja
in
mov
test
jb
inc
punpcklbw
and
hlt
jbe
xchg
jbe
adc
jnp
push
push
(bad)
xchg
xchg
add
push
mul
test
push
add
jne
xchg
mov
xchg
rol
movs
mov
std
cmps
mov
push
mov
fist
inc
out
mov
in
rol
scas
rol
rcl
(bad)
xor
fnstsw
hlt
test
xchg
add
les
xor
cld
jne
lahf
rcl
data16
xor
outs
add
push
rol
add
xor
pop
lock
lds
dec
cmp
pusha
daa
pop
mov
loopne
aad
xor
adc
dec
push
push
les
cmp
fs
jbe
push
inc
inc
aam
add
push
pop
aad
aas
jb
popa
ja
in
mov
test
inc
in
orps
jo
dec
hlt
dec
mov
inc
cmc
arpl
push
push
(bad)
xchg
cmps
add
push
(bad)
gs
test
push
mov
xchg
adc
inc
xchg
xchg
cdq
adc
xor
inc
lea
and
cmps
xor
mov
xor
rcl
inc
icebp
adc
and
loope
loope
inc
(bad)
push
fadd
ret
xor
ret
jbe
test
add
ror
je
and
adc
lock
out
xchg
or
shl
in
add
je
adc
xor
or
add
sbb
das
mov
aaa
pop
movs
and
lds
add
and
loopne
aad
xor
or
dec
push
dec
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
xchg
mov
je
and
adc
rcr
and
add
xchg
adc
sub
adc
push
mov
aaa
xor
and
sbb
xor
xor
xor
and
inc
push
arpl
jo
cmp
bound
xor
aam
add
push
dec
aad
aas
jae
ins
ja
in
mov
test
in
unpcklps
das
addr16
hlt
push
mov
outs
cmc
dec
pop
dec
push
mov
xchg
add
push
test
add
cdq
xchg
call
ss
mov
and
jo
inc
xchg
movs
fbld
mov
pusha
mov
xor
repz
jecxz
cmc
adc
and
out
scas
mov
push
in
add
xor
icebp
mov
(bad)
shl
xchg
add
ret
pop
repz
je
and
adc
sti
lahf
jmp
shl
adc
and
adc
adc
or
xor
and
and
cmp
es
xor
adc
les
xor
arpl
inc
(bad)
push
inc
je
push
add
push
sub
pop
aas
ja
popa
ja
in
mov
test
jb
inc
punpcklbw
arpl
hlt
jae
arpl
jp
push
push
mov
push
mul
test
push
rol
jne
xchg
xchg
adc
xor
inc
out
(bad)
and
mov
pusha
mov
xor
rcl
inc
loope
mov
mov
fiadd
scas
mov
add
xor
fstp
cld
test
xchg
add
iret
(bad)
loope
mul
popf
je
and
adc
jecxz
xlat
xchg
push
pop
adc
add
add
pop
rol
add
jg
mov
aaa
add
lds
movs
add
cmps
sbb
add
xor
adc
push
push
arpl
push
nop
cmp
outs
das
jnp
push
inc
inc
aam
add
push
push
aad
aas
jno
ins
ja
in
mov
test
adc
inc
nop
push
addr16
hlt
push
mov
dec
cmc
pop
pop
gs
adc
xchg
mov
(bad)
adc
inc
xor
loop
iret
inc
xchg
jo
inc
out
movs
mov
xchg
cmps
ret
xor
pusha
cmps
push
cli
mov
xor
int
fiadd
loope
in
(bad)
jecxz
inc
(bad)
icebp
push
enter
(bad)
retf
mov
ret
shl
clc
add
ret
data16
out
je
and
adc
lock
in
xchg
push
pop
and
add
jnp
dec
pop
add
adc
cs
aaa
movs
and
and
pop
cmps
pop
daa
ds
loopne
aad
xor
dec
(bad)
inc
push
inc
les
push
dec
inc
cmp
or
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
fs
xor
add
mov
cwde
mov
je
and
adc
rcr
and
add
cmp
xchg
sub
add
inc
adc
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
sbb
push
push
push
les
push
lds
cmp
add
aam
add
push
jns
jno
ins
mul
inc
in
mov
test
gs
inc
nop
and
hlt
push
mov
js
pop
pop
dec
push
mov
mov
gs
mov
push
mov
inc
xchg
xchg
mov
xor
inc
mov
iret
fisub
(bad)
cmps
xchg
xor
pusha
mov
xor
not
loopne
fist
mov
inc
loop
cmc
inc
rol
clc
push
jmp
push
cmc
mov
ret
shl
retf
in
gs
(bad)
retf
out
fnsave
out
push
into
jne
lahf
in
or
shl
cmp
outs
and
adc
add
pop
adc
or
ds
lds
and
cmp
xor
xor
aad
xor
adc
arpl
les
xor
outs
das
inc
(bad)
jge
push
aam
add
push
xor
pop
aas
jo
ins
ja
in
mov
test
gs
inc
packuswb
jae
push
hlt
jno
pusha
xchg
jbe
jo
jns
push
push
xchg
xchg
lahf
add
push
cmc
gs
add
mov
inc
xor
in
adc
div
xlat
inc
jmp
es
cmps
xchg
xor
pusha
cmps
push
cmps
mov
xor
int
aam
cld
adc
inc
jecxz
lds
(bad)
ficom
shl
mov
jmp
xchg
add
ret
data16
cli
je
and
adc
in
rcl
shl
syscall
push
test
outs
add
adc
push
cmc
adc
jg
mov
aaa
xor
and
and
aaa
loopne
aad
xor
adc
push
push
pusha
les
aaa
movs
inc
pusha
lds
ds
cmova
push
add
push
das
aad
aas
push
test
in
mov
test
gs
dec
cmova
push
addr16
hlt
jae
xchg
cmp
cmc
push
pop
imul
xchg
xchg
mov
adc
inc
xor
lods
adc
xchg
mov
and
jo
inc
cdq
movs
mov
or
es
mov
push
mov
fbld
not
out
pop
in
out
scas
jecxz
ffreep
out
leave
add
xor
ret
mov
(bad)
fidiv
clc
add
ret
(bad)
frstor
out
je
and
adc
rcr
and
add
jns
das
pop
cmp
jbe
add
push
adc
xor
push
lock
push
and
sbb
cmp
xor
dec
(bad)
jae
dec
les
nop
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
div
retf
add
mov
out
je
and
adc
rcr
adc
add
and
das
rol
push
adc
add
pop
aaa
pop
movs
sbb
dec
lds
and
push
cmps
push
daa
cmp
xor
dec
(bad)
dec
push
les
push
lds
cmp
jnp
inc
aam
add
push
outs
aad
aas
jae
inc
ja
in
mov
test
adc
inc
nop
jns
sbb
push
mov
dec
cmc
inc
pop
dec
push
adc
mov
cdq
xchg
jne
xchg
adc
mov
and
jo
inc
scas
movs
mov
call
push
div
xchg
push
jecxz
aad
xlat
adc
inc
in
cmc
inc
rol
push
fld
shl
mov
les
fwait
add
ror
je
and
adc
mov
pop
and
adc
je
sub
jg
and
xchg
pop
cmp
adc
add
jbe
xor
and
add
and
dec
mov
loopne
aad
xor
dec
(bad)
ja
pop
les
xor
popa
das
inc
(bad)
push
inc
push
aam
add
push
ins
aad
aas
jb
inc
ja
in
mov
test
jle
inc
packuswb
pop
addr16
hlt
ja
xchg
jbe
or
jp
push
push
mov
xchg
add
push
mul
test
push
mov
inc
xor
mov
ss
mov
and
jo
inc
xchg
movs
mov
es
nop
xor
pusha
mov
xor
xchg
xlat
fadd
mov
mov
fiadd
scas
rol
fst
(bad)
xor
fistp
hlt
les
xchg
add
les
(bad)
je
and
adc
lock
rcl
and
je
dec
add
pop
xchg
pop
push
xchg
adc
add
add
xor
inc
lock
lds
movs
add
cmps
es
xor
xor
aas
(bad)
push
push
push
les
inc
movs
inc
inc
jg
fs
imul
inc
inc
aam
add
push
dec
aad
aas
dec
not
inc
in
mov
test
(bad)
in
cmova
popa
addr16
hlt
ja
arpl
push
pop
imul
xchg
movs
add
push
and
xchg
add
mov
xchg
xchg
jmp
fdivr
mov
xchg
mov
and
jo
inc
cmps
movs
mov
test
xchg
in
mov
push
mov
fild
inc
(bad)
adc
and
loope
cld
inc
loope
mov
xor
lds
les
sti
add
ror
je
and
adc
rcr
test
shr
in
add
jl
sbb
popa
xchg
je
add
sbb
das
mov
aaa
add
add
or
push
dec
pop
cmps
cmp
and
xor
dec
(bad)
jae
inc
les
nop
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
cwde
data16
out
je
and
adc
rcr
and
add
cmp
inc
pop
and
adc
or
pop
lock
lds
and
pop
cmps
jns
push
mov
loopne
aad
xor
(bad)
push
push
pusha
les
imul
das
jne
push
inc
fs
add
push
ins
aad
aas
ins
not
inc
in
mov
test
(bad)
in
nop
gs
hlt
dec
mov
or
push
pop
dec
push
(bad)
xchg
xchg
add
push
movs
gs
push
add
jne
xchg
mov
xchg
fild
movs
mov
or
es
mov
pusha
mov
xor
xchg
xlat
jecxz
fcom
mov
inc
out
scas
fadd
(bad)
repz
fiadd
(bad)
xor
test
icebp
lock
gs
(bad)
(bad)
out
je
and
adc
mov
pop
and
add
jp
and
outs
jg
add
and
daa
rol
pop
adc
imul
or
inc
cmps
sbb
sbb
xor
pop
(bad)
arpl
les
xor
arpl
inc
(bad)
jns
inc
aam
add
push
jbe
pop
aas
ja
push
ja
in
mov
test
jb
inc
punpcklbw
jae
push
hlt
jae
arpl
jle
push
push
mov
push
mul
test
push
rol
jne
xchg
lock
lods
mov
and
jo
inc
stos
movs
mov
or
es
cmps
xchg
xor
pusha
mov
xor
not
fild
mov
in
call
inc
stc
(bad)
lock
rol
ret
xor
sar
cld
(bad)
xchg
add
iret
(bad)
out
mov
and
adc
stc
lahf
rcl
cmp
ja
sbb
sbb
adc
popa
xchg
adc
adc
xor
inc
lock
lds
dec
and
xor
xor
adc
dec
push
arpl
inc
nop
movs
outs
inc
aas
lds
cmp
jl
and
add
push
xor
jp
push
div
ja
in
mov
test
jns
inc
cmove
jg
dec
hlt
push
jne
cmc
jns
jge
xchg
xchg
mov
gs
xchg
cwde
xchg
jne
xchg
mov
div
add
iret
and
cmps
movs
xor
pusha
cmps
push
cli
mov
xor
jecxz
fiadd
loopne
enter
jecxz
inc
(bad)
mov
xor
xchg
shl
add
ret
data16
shl
adc
fstp
and
add
jle
adc
rol
push
adc
sub
pop
lock
sub
pop
cmps
push
daa
sbb
or
and
cmp
dec
(bad)
push
push
dec
les
nop
push
dec
inc
inc
lds
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
fs
add
mov
call
and
adc
mov
pop
and
add
xchg
pop
pusha
xchg
sub
add
inc
adc
or
add
pop
lds
and
or
push
loopne
aad
xor
or
les
movs
pop
inc
cmp
arpl
jnp
inc
inc
js
ja
inc
mov
push
inc
aad
aas
ins
div
inc
in
mov
test
adc
inc
nop
pusha
addr16
hlt
inc
mov
or
and
dec
push
mov
mov
mov
cld
push
test
xchg
xchg
mov
xor
inc
mov
iret
xchg
es
mov
xchg
push
mov
fist
inc
rcl
test
inc
loop
ret
inc
out
lock
out
ret
xor
iret
mov
ret
fs
xor
gs
(bad)
(bad)
out
je
and
adc
movs
lahf
rcl
adc
jp
sbb
xor
xchg
and
add
push
adc
xor
cmp
pop
lds
dec
push
cmps
jns
es
loopne
aad
xor
adc
push
push
pop
les
xor
lds
inc
mov
inc
aam
add
push
sub
pop
aas
jo
ins
ja
in
mov
test
jno
inc
pcmpgtd
cmp
mov
or
jp
push
push
adc
test
mov
xchg
jne
xchg
xchg
adc
div
xlat
inc
jmp
es
cmps
xchg
xor
pusha
cmps
push
cmps
mov
xor
int
aam
(bad)
adc
inc
jecxz
mov
add
xor
fstp
jmp
xchg
add
ret
data16
bnd
and
adc
sti
lahf
rcl
shl
and
outs
add
sbb
push
cmc
adc
jg
mov
aaa
xor
and
and
xor
and
cmp
sbb
inc
push
pusha
les
sub
bound
cmp
aam
add
push
sub
test
in
mov
test
outs
in
(bad)
out
addr16
xchg
and
or
push
pop
push
push
mov
push
lea
test
push
mov
inc
xor
mov
cmp
mov
jo
inc
mov
mov
sahf
cmps
cmps
xor
pusha
mov
xor
repz
loopne
stc
adc
and
out
scas
out
xchg
icebp
push
rol
(bad)
xor
cmp
fdiv
retf
add
ret
(bad)
popf
iretw
out
je
and
adc
aam
into
xchg
add
and
add
jg
das
pop
gs
sub
add
pop
adc
sub
adc
and
pop
cmps
and
sbb
xor
dec
(bad)
dec
push
dec
les
nop
imul
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
iret
xor
add
mov
out
je
and
adc
mov
pop
adc
in
add
arpl
je
add
push
adc
pop
mov
aaa
pop
movs
push
lock
lds
and
pop
cmps
cmp
add
xor
adc
dec
push
les
movs
or
lds
aas
(bad)
push
inc
cmp
mov
push
jle
add
outs
div
ja
in
mov
test
sbb
inc
nop
pop
addr16
push
mov
push
push
mov
movs
add
push
sti
gs
test
push
nop
xchg
jne
xchg
mov
xor
inc
xchg
movs
mov
es
push
div
xchg
push
repz
aad
xlat
adc
inc
in
rol
lock
loope
shl
mov
jmp
xchg
add
ror
je
and
adc
clc
lahf
rcl
jnp
je
syscall
push
test
outs
sbb
pop
pop
cmp
adc
xor
xor
pop
lds
pop
movs
add
and
pop
loopne
aad
xor
adc
inc
push
pop
les
xor
or
lds
inc
(bad)
js
pusha
aam
add
push
dec
aad
aas
jb
ins
ja
in
mov
test
gs
in
pcmpgtd
pop
addr16
hlt
ja
xchg
jbe
jl
jne
push
push
(bad)
xchg
xchg
add
push
icebp
gs
scas
add
iret
xchg
jne
xchg
cwde
adc
mov
mov
inc
xchg
movs
mov
mov
pusha
mov
xor
int
fadd
mov
mov
fiadd
scas
lds
(bad)
out
leave
add
xor
in
mov
hlt
fs
add
les
out
repz
adc
(bad)
lahf
xlat
xchg
daa
pop
pop
test
shl
add
add
adc
add
add
xor
or
push
lds
dec
and
xor
es
xor
pop
(bad)
arpl
les
cmp
fs
jne
inc
pop
aam
add
push
sub
mul
inc
in
mov
test
jp
inc
unpckhps
jne
add
imul
cmc
pop
pop
pushw
mov
movs
add
push
cmps
gs
test
push
mov
jecxz
xchg
inc
xchg
xchg
mov
mov
mov
lods
mov
and
jo
inc
lea
xchg
mov
mov
xor
out
in
mov
(bad)
loope
mov
in
(bad)
hlt
push
hlt
add
xor
repnz
(bad)
fs
retf
in
ror
je
and
adc
fistp
adc
in
add
jge
inc
pop
adc
adc
das
mov
aaa
add
adc
or
imul
add
xor
dec
(bad)
arpl
les
push
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
sahf
lock
je
and
adc
scas
lahf
into
xchg
or
shr
in
add
jns
adc
rol
sbb
xor
adc
dec
lds
and
pop
cmps
pop
daa
inc
mov
loopne
aad
xor
push
(bad)
push
push
pusha
les
push
lds
ds
pop
inc
pop
aam
add
push
dec
aad
aas
ins
imul
inc
in
mov
test
sbb
dec
andnps
je
dec
hlt
dec
mov
push
cmc
pusha
pop
dec
push
lea
cli
mov
add
cmps
inc
xor
nop
adc
mov
and
leave
inc
scas
movs
and
cmps
nop
xor
pusha
mov
xor
xchg
xlat
jecxz
rcl
mov
inc
out
scas
ret
inc
std
(bad)
call
(bad)
xor
xchg
lock
add
ret
(bad)
jecxz
jecxz
test
loopne
cmc
cmc
mov
lahf
rcl
shl
and
outs
add
pop
rol
pop
adc
xor
or
and
and
xor
es
xor
pop
(bad)
push
push
push
les
aaa
movs
dec
inc
pop
lds
inc
(bad)
jns
dec
aam
add
push
(bad)
aad
aas
ja
popa
ja
in
mov
test
dec
in
pcmpgtw
jb
inc
hlt
jl
arpl
jae
push
push
lea
lock
test
mov
inc
xchg
xchg
mov
xor
inc
lods
movs
and
cmps
mov
pusha
mov
xor
not
fild
mov
out
loopne
loop
lds
(bad)
loopne
fadd
ret
xor
aam
bnd
idiv
fnsave
xchg
add
iret
(bad)
out
out
fbstp
out
div
cld
jne
lahf
rcl
cmp
ja
sbb
sbb
pop
pop
adc
adc
xor
inc
lock
lds
and
xor
pop
mov
loopne
aad
xor
adc
arpl
les
movs
or
lds
aas
(bad)
pop
inc
pusha
aam
add
push
and
inc
aas
pop
not
jle
popa
mov
test
push
in
cmovno
inc
outs
hlt
jl
pusha
xchg
jg
dec
cmc
and
imul
mov
gs
out
mov
adc
inc
xor
mov
lods
mov
and
jo
inc
mov
iret
(bad)
movs
cmps
xchg
pusha
cmps
push
div
mov
xlat
rol
jmp
xchg
lds
inc
add
push
test
retf
push
repnz
shl
add
ret
data16
out
je
and
adc
aad
rcl
pop
shl
test
outs
jle
add
rol
push
adc
sub
movs
adc
and
pop
cmps
jns
sbb
xor
dec
(bad)
addr16
dec
les
nop
push
push
inc
imul
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
mov
enter
fisub
(bad)
popf
lock
je
and
adc
mov
pop
and
add
jns
inc
pop
popa
xchg
ja
add
pop
adc
sub
or
push
lds
and
pop
cmps
outs
daa
xor
xor
push
(bad)
arpl
les
movs
adc
lds
jnp
inc
inc
js
ja
inc
mov
push
jns
jo
ins
div
inc
in
mov
test
gs
in
andps
pusha
addr16
dec
mov
dec
cmc
pusha
pop
dec
push
lea
sti
pop
mov
adc
inc
xchg
xchg
mov
ss
mov
and
jo
inc
out
lahf
and
cdq
cmps
fnstenv
pusha
mov
xor
not
in
mov
lds
inc
rol
push
out
ret
xor
ret
jbe
test
add
iret
(bad)
loop
mul
iret
je
and
adc
loope
xlat
xchg
xor
adc
sub
add
add
push
rol
adc
jg
mov
aaa
aas
movs
or
and
daa
cmps
sbb
es
loopne
aad
xor
adc
jae
pop
les
aaa
movs
jne
push
mov
aam
add
push
xor
pop
aas
jo
ins
ja
in
mov
test
inc
in
punpcklbw
pop
addr16
hlt
push
jne
cmc
dec
pop
push
push
cmps
xchg
lahf
add
push
repnz
test
add
jne
xchg
mov
scas
(bad)
mov
and
jo
inc
xchg
movs
es
xor
cmps
push
cmps
mov
xor
jecxz
aam
std
adc
inc
jecxz
mov
add
xor
fidivr
jmp
xchg
add
ret
repz
je
and
adc
std
lahf
rcl
and
jbe
dec
add
pop
xchg
aaa
xchg
pop
rol
adc
jg
mov
aaa
xor
and
pop
cmps
add
xor
adc
and
cmp
sbb
ja
arpl
inc
nop
inc
movs
jns
aas
lds
mov
aam
add
push
push
aad
aas
dec
imul
inc
in
mov
test
pop
in
cmovne
inc
outs
hlt
popa
mov
pop
cmc
and
jno
lea
mul
test
push
scas
xchg
jne
xchg
xchg
adc
mov
and
test
movs
fbld
lahf
cmps
mov
and
mov
fisttp
inc
lds
jmp
scas
cmc
inc
(bad)
(bad)
jecxz
jmp
aad
push
cmp
lea
ret
(bad)
(bad)
out
je
and
adc
rcr
and
add
jg
sbb
sbb
adc
xor
sub
and
pop
cmps
popa
daa
sbb
xor
inc
(bad)
push
push
dec
les
nop
push
jb
inc
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
iret
lea
retf
add
mov
out
je
and
adc
mov
pop
adc
in
add
jl
inc
pop
gs
je
add
sbb
das
mov
aaa
add
sbb
add
movs
add
cmps
cmp
xor
xor
or
jae
les
sub
pusha
das
jne
jp
addr16
add
push
dec
aad
aas
outs
div
ja
in
mov
test
imul
pusha
addr16
dec
mov
push
cmc
daa
pop
push
push
xchg
xchg
lahf
add
push
in
pop
pushf
push
cmps
xchg
jne
xchg
mov
cmp
div
int
jmp
es
movs
xor
pusha
cmps
push
mov
mov
repz
aam
out
adc
in
ret
inc
popf
(bad)
in
push
rol
shl
mov
jmp
xchg
add
ror
je
and
adc
clc
lahf
rcl
sub
jne
and
outs
add
adc
push
cmc
adc
jg
mov
aaa
xor
sbb
push
lds
and
and
mov
loopne
aad
xor
pop
(bad)
ja
pop
les
movs
jne
pop
lds
inc
mov
aam
add
push
pop
aad
aas
jb
ss
in
mov
test
jle
inc
pcmpgtw
and
hlt
push
xchg
ja
dec
cmc
jae
push
push
lea
lock
stc
adc
inc
xor
lock
mov
mov
inc
xchg
movs
and
cmps
cwde
xor
pusha
mov
xor
repz
fadd
mov
out
in
loopne
mov
call
(bad)
xor
fdivr
hlt
shl
add
les
out
je
and
adc
cli
lahf
xlat
xchg
adc
pop
test
shl
dec
add
jge
adc
rol
push
adc
pop
mov
aaa
pop
movs
inc
lock
ss
push
cmps
push
daa
add
aad
xor
xor
jae
push
les
jnp
jbe
lds
(bad)
push
inc
outs
aam
add
push
outs
aad
aas
je
popa
ja
in
mov
test
in
nop
pop
addr16
dec
mov
inc
cmc
push
pop
dec
push
mov
cmps
add
push
movs
mov
inc
test
xchg
xchg
in
adc
lods
mov
and
jo
inc
stos
movs
lods
and
mov
pusha
mov
xor
out
in
les
mov
inc
loope
sti
inc
cdq
(bad)
movs
push
out
add
xor
cmp
push
mov
ror
je
and
adc
rcr
adc
in
add
jge
sbb
adc
adc
das
mov
aaa
add
adc
or
imul
add
xor
inc
(bad)
push
push
inc
les
movs
jbe
jno
push
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
pushf
data16
test
loopne
aad
div
lahf
into
xchg
or
shr
in
add
jg
dec
pop
pusha
xchg
aaa
rol
sbb
sub
adc
and
pop
cmps
bound
es
loopne
aad
xor
or
les
cmp
bound
jbe
push
inc
jl
arpl
xor
add
ins
test
in
mov
test
push
dec
cvtdq2ps
and
hlt
dec
mov
dec
cmc
and
dec
push
(bad)
xchg
xchg
add
push
sti
mov
mov
adc
inc
xor
mov
(bad)
mov
jo
inc
xchg
movs
mov
stc
cmps
mov
test
push
mov
fist
inc
(bad)
adc
inc
out
scas
ret
(bad)
out
push
rol
(bad)
xor
(bad)
mov
lock
xchg
add
ret
(bad)
loop
mov
and
adc
in
rcl
data16
xor
outs
add
adc
add
pop
adc
xor
push
lock
lds
dec
and
ss
aad
xor
adc
jae
push
les
movs
pop
inc
push
lds
inc
mov
aam
add
push
push
aad
aas
ja
jno
jg
pop
mov
test
dec
in
pcmpgtd
pop
addr16
hlt
ins
mov
pop
cmc
jno
pop
push
mov
push
icebp
gs
mov
push
mov
inc
xchg
xchg
mov
xchg
push
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
not
fild
mov
mov
in
inc
loop
lds
(bad)
loopne
fadd
ret
xor
aam
bnd
idiv
fs
xor
gs
(bad)
out
mul
loope
mul
out
div
ret
lahf
rcl
cmp
ja
sbb
add
push
rol
add
jg
mov
aaa
add
and
push
cmps
jns
xor
xor
pop
(bad)
dec
push
arpl
pop
nop
sub
lds
jbe
push
inc
and
popa
add
push
push
sbb
jno
push
ja
in
mov
test
inc
in
cvtdq2ps
cmp
hlt
inc
mov
pop
cmc
and
push
push
adc
xchg
add
cmps
xchg
lahf
xchg
mov
xchg
mov
and
jo
inc
jmp
iret
xchg
es
shl
xor
xlat
rol
mov
inc
jecxz
test
mov
xor
mov
shl
add
ret
lock
je
and
adc
aad
int3
xchg
xor
and
add
jle
dec
pop
adc
adc
sub
movs
push
lock
sub
pop
cmps
and
sbb
xor
push
(bad)
ja
dec
les
imul
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
fs
enter
in
gs
lahf
data16
out
je
and
adc
mov
pop
and
add
jle
inc
pop
sub
sub
add
pop
adc
sub
adc
add
movs
cmovg
outs
daa
cmp
xor
push
(bad)
arpl
les
sub
lds
je
inc
fs
add
push
push
aad
aas
ins
mul
inc
in
mov
test
jp
inc
andps
cmp
hlt
dec
mov
dec
cmc
outs
pop
dec
push
lea
in
gs
test
push
test
xchg
xchg
scas
adc
lods
mov
and
jo
inc
out
and
cmps
fnstenv
mov
xor
out
in
in
mov
iret
(bad)
loop
mov
add
xor
fidivr
ret
xor
iret
(bad)
jecxz
mov
and
adc
loope
xlat
xchg
xor
adc
sub
add
sbb
cmp
jns
adc
adc
xor
pop
lock
lds
dec
daa
cmps
and
ds
loopne
aad
xor
adc
arpl
les
aaa
movs
gs
pop
lds
inc
(bad)
jge
ja
push
add
push
pop
aad
aas
jo
ss
in
mov
test
in
punpcklbw
pop
addr16
hlt
push
jne
cmc
je
push
push
mov
lahf
add
push
repz
movs
add
xchg
xchg
ficom
mov
and
jo
inc
mov
mov
pushf
cmps
les
pusha
cmps
push
cmps
mov
xor
repz
aam
clc
adc
inc
jecxz
mov
add
xor
out
mov
jmp
xchg
add
ret
data16
shl
jecxz
loop
shl
rcl
and
add
add
sbb
push
cmc
adc
jg
mov
aaa
xor
and
push
cmps
and
adc
xor
adc
inc
push
pusha
les
sub
bound
je
push
inc
jo
popa
add
push
inc
aad
aas
jo
inc
ja
in
mov
test
adc
dec
andps
je
jne
inc
mov
or
cs
push
push
mov
xchg
add
push
jmp
add
fld
xor
stos
adc
xchg
mov
and
jo
inc
xchg
movs
mov
mov
pusha
mov
xor
xchg
xlat
jecxz
rcl
mov
inc
out
scas
sti
inc
cli
(bad)
mov
xor
pushf
mov
icebp
fs
xor
gs
(bad)
lahf
data16
out
je
and
adc
rcr
and
add
jg
inc
pop
push
xchg
sub
add
pop
adc
xor
sub
and
pop
cmps
popa
daa
sbb
xor
adc
arpl
les
push
jno
push
adc
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
iret
xchg
retf
add
mov
out
je
and
adc
mov
pop
adc
in
add
jl
sbb
popa
xchg
je
add
sbb
das
mov
aaa
add
push
lock
adc
or
add
cmps
bound
ds
loopne
aad
xor
or
jae
les
sub
pusha
das
jne
push
inc
arpl
outs
add
push
pop
aad
aas
jae
ins
ja
in
mov
test
gs
orps
pusha
addr16
dec
mov
push
cmc
es
push
push
xchg
xchg
movs
add
push
sti
gs
test
push
add
jne
xchg
mov
fdivr
scas
xor
inc
jmp
es
movs
xor
pusha
cmps
push
mov
mov
push
int
aam
mov
lds
inc
rol
push
loope
shl
mov
jmp
xchg
add
ror
je
and
adc
clc
lahf
rcl
and
jne
syscall
or
pop
pop
jge
sbb
push
cmc
adc
jg
mov
aaa
xor
add
push
lds
and
and
mov
loopne
aad
xor
pop
(bad)
ja
pop
les
xor
lds
inc
(bad)
jns
dec
aam
add
push
push
aad
aas
jb
ins
ja
in
mov
test
inc
in
pcmpgtw
dec
addr16
hlt
imul
push
push
mov
xchg
add
push
lock
test
push
iret
xchg
adc
inc
xor
mov
xchg
push
and
jo
inc
jmp
and
cmps
fnstenv
pusha
mov
xor
jecxz
fadd
mov
mov
in
loopne
lds
(bad)
sti
push
leave
add
xor
aad
lock
div
shl
xchg
add
les
out
je
and
adc
cld
lahf
xlat
xchg
aaa
pop
pop
test
shl
add
add
adc
add
add
xor
push
lock
lds
dec
and
xor
es
xor
pop
(bad)
arpl
les
nop
xor
lds
(bad)
inc
jo
add
push
dec
aad
aas
jno
popa
ja
in
mov
test
sbb
inc
cvtdq2ps
cmp
hlt
inc
mov
jae
es
push
push
(bad)
xchg
cmps
add
push
in
gs
add
mov
inc
xchg
xchg
mov
ret
jmp
mov
leave
inc
hlt
movs
(bad)
and
xchg
mov
xor
not
in
rcl
test
inc
loope
hlt
inc
out
ficom
ret
xor
cmp
fs
xor
ror
je
and
adc
rcr
adc
in
add
jge
sbb
push
xchg
rol
sbb
das
mov
aaa
add
adc
or
imul
sbb
or
and
aas
xor
adc
les
movs
jne
imul
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
popf
mov
je
and
adc
scas
lahf
into
xchg
or
shr
in
add
jg
dec
pop
pusha
xchg
aaa
rol
sbb
sub
sbb
or
jo
shld
dec
pop
cmps
cmp
add
xor
push
(bad)
push
push
pusha
les
cmp
bound
jbe
push
inc
js
arpl
pop
aad
aas
ins
div
ja
in
mov
test
in
(bad)
out
addr16
dec
mov
dec
cmc
and
xchg
nop
add
push
cli
mov
mov
add
jne
xchg
scas
adc
mov
jo
inc
scas
movs
mov
xchg
mov
xor
jecxz
loop
mov
lds
inc
add
(bad)
xor
xchg
lock
xor
ret
(bad)
loop
jecxz
shl
adc
jecxz
rcl
shl
dec
add
add
adc
add
pop
adc
xor
add
and
and
ss
aad
xor
adc
jae
push
les
movs
dec
inc
push
lds
inc
(bad)
push
inc
jo
push
add
push
pop
aad
aas
ja
jno
jg
push
mov
test
gs
in
pcmpgtd
bound
hlt
outs
mov
pop
cmc
dec
pop
pop
push
mov
push
icebp
gs
test
ret
xchg
adc
inc
xchg
xchg
jmp
lods
mov
and
jo
inc
out
fwait
and
cwde
cmps
shl
mov
xor
not
fild
mov
rol
loopne
loop
mov
cld
push
int
ret
xor
aam
bnd
idiv
fidiv
xchg
add
iret
(bad)
out
out
loope
mul
out
div
ret
lahf
rcl
and
add
add
xchg
sbb
add
add
jg
mov
aaa
add
lds
and
and
pop
mov
loopne
aad
xor
adc
push
push
(bad)
les
inc
inc
lds
inc
(bad)
jge
jnp
push
add
push
jbe
pop
aas
jb
ins
ja
in
mov
test
sbb
inc
orps
jo
data16
jge
pusha
xchg
jl
je
outs
pop
push
push
adc
mov
push
cmps
xchg
adc
lods
mov
and
jo
inc
jmp
es
les
pusha
cmps
push
mov
mov
xchg
xlat
rol
mov
inc
jecxz
test
rcl
shl
mov
shl
add
ret
data16
and
adc
aam
int3
xchg
xor
and
add
jle
dec
pop
adc
adc
sub
movs
push
lock
sub
pop
cmps
xor
add
pavgb
aad
xor
adc
addr16
dec
les
imul
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
test
enter
popf
gs
lahf
data16
cdq
je
and
adc
mov
pop
and
add
jle
inc
pop
sub
sub
add
pop
adc
sub
add
push
lds
dec
pop
cmps
xor
adc
xor
or
les
sub
lds
je
inc
pusha
aam
add
push
push
aad
aas
ins
mul
inc
in
mov
test
jp
inc
andps
cmp
hlt
dec
mov
dec
cmc
outs
pop
dec
push
lea
sti
gs
add
mov
inc
xchg
xchg
mov
ss
mov
and
jo
inc
xchg
movs
and
cmps
fnstenv
mov
xor
rcl
in
out
mov
in
mov
ret
inc
rol
push
loope
ret
xor
int
lock
test
add
iret
(bad)
out
fucom
loope
mul
out
out
shl
lahf
rcl
shl
add
sbb
cmp
jns
adc
adc
xor
add
push
lds
cmp
and
ds
loopne
aad
xor
adc
arpl
les
aaa
movs
dec
inc
pop
lds
inc
(bad)
jge
jae
push
add
push
push
aad
aas
jo
ss
in
mov
test
in
punpcklbw
pop
addr16
hlt
outs
mov
ins
cmc
je
push
push
mov
lahf
add
push
repz
movs
add
add
jne
xchg
mov
div
rol
movs
mov
mov
cmps
push
cmps
mov
xor
repz
aam
clc
adc
inc
jecxz
rol
in
enter
(bad)
aad
push
out
mov
jmp
xchg
add
ret
data16
shl
jecxz
loop
shl
rcl
and
jbe
dec
add
add
adc
adc
xor
inc
lock
lds
and
cmps
and
inc
mov
loopne
aad
xor
adc
inc
push
les
nop
movs
dec
inc
dec
lds
pop
(bad)
push
inc
pusha
aam
add
push
imul
ss
in
mov
test
adc
dec
cvtdq2ps
pop
addr16
inc
mov
jl
outs
pop
push
push
lea
sti
gs
test
push
xchg
xchg
adc
inc
xor
mov
ss
mov
and
jo
inc
test
mov
xor
pusha
mov
xor
int
loop
mov
(bad)
out
scas
sti
inc
cli
(bad)
aad
jecxz
(bad)
xor
pushf
mov
icebp
fs
retf
in
gs
(bad)
lahf
data16
aam
shl
loopne
sti
cmc
out
jne
lahf
int
daa
pop
and
add
jg
inc
pop
push
xchg
sub
add
pop
adc
xor
sub
and
pop
cmps
sbb
pop
mov
loopne
aad
xor
sbb
arpl
les
push
jno
inc
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
iret
xchg
retf
add
mov
out
je
and
adc
mov
pop
adc
in
add
jl
sbb
popa
xchg
je
add
sbb
das
mov
aaa
add
adc
or
push
dec
pop
cmps
pop
daa
inc
mov
loopne
aad
xor
adc
dec
push
les
sub
pusha
das
jne
push
inc
addr16
add
push
pop
aad
aas
jae
ins
ja
in
mov
test
gs
orps
pusha
addr16
dec
mov
push
cmc
es
push
push
xchg
xchg
lahf
add
push
in
pop
add
cmps
inc
xor
xchg
adc
xchg
mov
and
jo
inc
xchg
movs
test
movs
cmps
fnsave
pusha
cmps
push
div
xchg
push
int
aam
in
adc
inc
in
rol
lock
loopne
shl
mov
jmp
xchg
add
ror
je
and
adc
neg
sbb
shl
xor
outs
add
sbb
push
cmc
adc
jg
mov
aaa
xor
sbb
push
lds
and
and
mov
loopne
aad
xor
pop
(bad)
ja
pop
les
xor
lds
inc
(bad)
jns
inc
aam
add
push
push
aad
aas
jb
ins
ja
in
mov
test
inc
in
pcmpgtw
dec
addr16
hlt
imul
push
push
mov
xchg
add
push
lock
test
push
iret
xchg
adc
inc
xor
mov
xchg
push
and
jo
inc
jmp
and
cmps
fnstenv
pusha
mov
xor
jecxz
fadd
mov
rol
in
loopne
mov
sti
push
leave
add
xor
aad
lock
div
shl
xchg
add
les
out
je
and
adc
cld
lahf
xlat
xchg
aaa
pop
pop
test
shl
add
pop
xchg
pop
push
xchg
adc
add
add
xor
inc
lock
lds
movs
add
cmps
daa
daa
inc
mov
loopne
aad
xor
pop
(bad)
jae
push
les
nop
xor
lds
(bad)
push
inc
js
push
add
push
outs
aad
aas
jno
popa
ja
in
mov
test
sbb
inc
andps
inc
addr16
inc
mov
jae
es
push
push
(bad)
xchg
cmps
add
push
in
gs
add
xchg
xchg
xchg
mov
xchg
mov
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
rcl
in
rcl
test
inc
loope
hlt
inc
out
movs
push
out
add
xor
hlt
mov
(bad)
fnstenv
enter
shl
pushf
data16
out
je
and
adc
rcr
adc
in
add
jge
sbb
push
xchg
rol
sbb
das
mov
aaa
add
adc
or
imul
sbb
or
and
aas
xor
adc
dec
push
inc
les
movs
jne
inc
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
popf
mov
je
and
adc
scas
lahf
into
xchg
or
shr
in
add
js
dec
pop
das
xchg
rol
sbb
sub
adc
or
cmp
pop
cmps
bound
es
loopne
aad
xor
or
les
cmp
bound
jbe
push
inc
jl
arpl
pop
aad
aas
ins
div
ja
in
mov
test
outs
in
cvtdq2ps
and
hlt
dec
mov
dec
cmc
and
dec
push
(bad)
xchg
nop
add
push
cli
mov
push
mov
inc
xor
mov
ss
mov
and
jo
inc
xchg
movs
test
mov
pusha
mov
xor
xchg
xlat
loop
mov
lds
inc
(bad)
mov
xor
lds
lock
xchg
add
ret
(bad)
cld
mov
je
and
adc
loop
rcl
push
shl
dec
add
add
adc
add
pop
adc
xor
push
lock
lds
dec
and
ss
aad
xor
adc
jae
push
les
movs
pop
inc
push
lds
inc
mov
aam
add
push
push
aad
aas
ja
jno
jg
pop
mov
test
dec
in
pcmpgtd
pop
addr16
hlt
ins
mov
pop
cmc
jno
pop
push
mov
push
icebp
gs
mov
push
mov
inc
xchg
xchg
mov
xchg
push
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
not
fild
mov
mov
in
inc
loop
lds
(bad)
loopne
fadd
ret
xor
aam
bnd
idiv
fs
xor
gs
(bad)
out
mul
loope
mul
out
div
ret
lahf
rcl
and
add
add
xchg
sbb
add
add
jg
mov
aaa
add
lds
movs
add
cmps
and
pop
mov
loopne
aad
xor
adc
push
push
(bad)
les
inc
inc
lds
inc
(bad)
jge
jnp
push
add
push
jbe
pop
aas
jb
ins
ja
in
mov
test
sbb
inc
orps
jo
data16
jge
pusha
xchg
jl
je
outs
pop
push
push
adc
lods
add
nop
xchg
jne
xchg
adc
mov
and
jo
inc
test
mov
xor
pusha
cmps
push
mov
mov
xchg
xlat
rol
mov
inc
jecxz
hlt
inc
rol
push
in
add
xor
out
in
jbe
test
add
ret
data16
and
adc
aad
int3
xchg
xor
and
add
jle
dec
pop
adc
adc
sub
movs
sub
and
pop
cmps
and
add
pavgb
aad
xor
adc
addr16
dec
les
imul
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
test
enter
popf
gs
lahf
data16
cdq
je
and
adc
mov
pop
and
add
jne
push
pop
push
xchg
jne
add
pop
adc
sub
sub
and
pop
cmps
and
loopne
aad
xor
push
(bad)
arpl
les
sub
lds
je
push
inc
fs
add
push
push
aad
aas
ins
not
inc
in
mov
test
in
andps
cmp
hlt
dec
mov
dec
cmc
pusha
pop
dec
push
lea
sti
gs
add
xchg
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
mov
iret
xchg
mov
pusha
mov
xor
out
in
mov
lds
inc
out
ret
add
xor
ret
mov
ret
xor
iret
(bad)
loop
mov
and
adc
cmc
lahf
aad
and
adc
xor
jo
or
cmp
adc
push
xchg
adc
add
push
adc
ss
aaa
aas
movs
pop
lock
lds
dec
daa
cmps
xor
xor
xor
adc
arpl
les
aaa
movs
gs
pop
lds
inc
mov
aam
add
push
pop
aad
aas
jo
ins
ja
in
mov
test
gs
in
pcmpgtb
das
outs
hlt
imul
cmc
jbe
push
push
cmps
xchg
lahf
add
push
repnz
test
push
add
jne
xchg
mov
xor
inc
xchg
movs
cwde
and
cmps
cmps
xor
cmps
push
cmps
mov
xor
jecxz
aam
(bad)
adc
inc
jecxz
mov
add
xor
fnstcw
jmp
xchg
add
ret
repz
je
and
adc
lock
rcl
and
add
add
adc
adc
aaa
mov
aaa
xor
and
and
ss
aad
xor
adc
inc
push
les
nop
movs
or
lds
pop
(bad)
jns
pusha
aam
add
push
jne
dec
aas
jo
ss
in
mov
test
adc
dec
andps
and
hlt
inc
mov
jl
outs
pop
push
push
lea
jmp
add
nop
xchg
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
cwde
and
mov
pusha
mov
xor
int
jecxz
rcl
mov
inc
out
scas
test
out
call
aad
push
cli
mov
icebp
fdiv
retf
add
ret
(bad)
sahf
data16
and
adc
rcr
and
add
jg
sbb
sbb
adc
xor
sub
and
pop
cmps
popa
daa
pop
mov
loopne
aad
xor
sbb
arpl
les
push
jno
inc
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
iret
xchg
retf
add
mov
out
je
and
adc
mov
pop
adc
in
add
arpl
ja
add
sbb
das
mov
aaa
add
add
or
adc
pop
cmps
(bad)
pop
mov
loopne
aad
xor
or
jae
les
push
or
lds
jne
jp
addr16
add
push
pop
aad
aas
jae
push
ja
in
mov
test
push
out
addr16
dec
mov
push
cmc
daa
pop
push
push
xchg
xchg
lahf
add
push
in
gs
add
xchg
xchg
jne
xchg
(bad)
adc
xchg
mov
and
jo
inc
scas
movs
pushf
and
mov
les
mov
xor
jecxz
aad
rcl
mov
inc
in
ret
(bad)
cld
push
loopne
shl
mov
jmp
xchg
add
ror
je
and
adc
rcr
test
add
or
push
rol
sbb
ss
aaa
xor
adc
push
lds
and
and
das
loopne
aad
xor
push
(bad)
addr16
pop
les
movs
jne
push
lds
inc
mov
aam
add
push
pop
aad
aas
jb
ins
ja
in
mov
test
jle
inc
punpckhbw
jns
pop
hlt
push
jne
cmc
jno
push
push
mov
xchg
add
push
icebp
mov
add
xchg
jne
xchg
mov
xchg
rol
movs
mov
mov
pushf
xor
pusha
mov
xor
repz
fadd
mov
in
fiadd
scas
mov
call
(bad)
xor
fstp
hlt
shl
add
les
out
je
and
adc
std
lahf
xlat
xchg
aaa
pop
pop
test
shl
add
add
adc
add
add
xor
inc
lock
lds
and
and
xor
es
xor
pop
(bad)
jae
push
les
nop
xor
lds
mov
aam
add
push
push
add
ja
in
mov
test
pop
in
cvtdq2ps
cmp
hlt
inc
mov
jg
es
push
push
mov
push
in
pop
mov
xchg
xchg
adc
inc
xchg
xchg
mov
xor
inc
stos
movs
xchg
xchg
mov
xor
rcl
inc
xlat
adc
inc
loope
cmc
inc
out
loopne
in
add
xor
cld
mov
(bad)
fnstenv
enter
int3
ror
je
and
adc
rcr
adc
in
add
jge
inc
pop
adc
adc
das
mov
aaa
add
adc
or
imul
sbb
or
and
aas
xor
adc
dec
push
inc
les
movs
jne
inc
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
lods
(bad)
popf
mov
je
and
adc
scas
lahf
xlat
xchg
xor
and
add
je
add
sbb
cmc
sbb
sub
add
or
jo
cmp
cmps
(bad)
pop
mov
loopne
aad
xor
push
(bad)
push
push
pusha
les
push
lds
jbe
inc
jl
jb
inc
mov
push
xor
add
ins
test
in
mov
test
outs
in
cvtdq2ps
fs
dec
mov
push
cmc
pusha
pop
dec
push
lea
cli
mov
add
xchg
test
mov
xchg
xlat
inc
xchg
movs
fbld
mov
pusha
mov
xor
jecxz
loop
out
mov
mov
into
inc
out
scas
mov
add
xor
aad
lock
div
fs
xor
gs
(bad)
out
je
and
adc
(bad)
lahf
aad
daa
pop
pop
test
add
or
or
add
pop
adc
xor
jbe
cmp
ds
lds
and
sub
sub
es
xor
sbb
arpl
les
xor
arpl
dec
(bad)
cmova
push
add
push
dec
aad
aas
jne
push
ja
in
mov
test
jb
inc
punpckhdq
jb
push
hlt
push
arpl
inc
pop
pop
push
lea
lock
test
mov
inc
xchg
xchg
mov
xor
inc
lods
movs
and
cmps
cwde
xor
pusha
mov
xor
rcl
fild
mov
in
call
inc
stc
(bad)
into
push
rol
ret
xor
fidivr
cld
shl
add
iret
(bad)
loopne
mov
and
adc
call
adc
add
sbb
pop
pop
adc
adc
xor
inc
lock
lds
and
xor
pop
mov
loopne
aad
xor
adc
push
push
(bad)
les
nop
xor
dec
inc
inc
lds
pop
mov
aam
add
push
jb
push
aas
jb
push
ja
in
mov
test
push
in
andnps
cmp
hlt
jle
pusha
xchg
jl
jo
pusha
pop
push
push
mov
mov
gs
add
add
jne
xchg
mov
fdivr
scas
xor
inc
mov
iret
xchg
movs
cmps
xor
cmps
push
div
xchg
push
repz
rol
test
inc
jecxz
hlt
inc
cdq
(bad)
in
push
in
add
xor
clc
mov
shl
add
ret
data16
out
je
and
adc
aad
rcl
pop
shl
test
outs
jle
add
rol
push
adc
sub
movs
adc
and
pop
cmps
and
add
push
loopne
aad
xor
adc
addr16
dec
les
imul
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
test
enter
popf
gs
lahf
data16
cdq
je
and
adc
mov
pop
and
add
jne
push
pop
adc
adc
sub
cs
sub
dec
pop
cmps
and
loopne
aad
xor
or
les
movs
adc
cmp
arpl
jnp
inc
inc
js
ja
inc
mov
push
sub
(bad)
ins
not
inc
in
mov
test
gs
andps
jo
data16
dec
mov
push
cmc
and
dec
push
(bad)
xchg
mov
pop
add
xchg
jne
xchg
xchg
adc
xor
inc
mov
iret
movs
es
cmps
fnstenv
pusha
mov
xor
not
in
call
mov
in
mov
mov
ret
add
xor
sar
ret
xor
gs
(bad)
jmp
out
test
out
out
cld
jne
lahf
aad
push
pop
adc
add
jae
sbb
xor
cmp
push
xchg
or
add
pop
adc
xor
movs
adc
push
lds
and
and
mov
loopne
aad
xor
adc
les
jnp
push
inc
inc
lds
dec
(bad)
outs
inc
arpl
inc
add
push
xor
pop
aas
jo
ins
ja
in
mov
test
dec
in
pcmpgtb
das
outs
hlt
imul
cmc
jne
push
push
cmps
xchg
lahf
add
push
repnz
test
push
add
jne
xchg
xchg
adc
lods
mov
and
jo
inc
test
cmps
cmps
cmps
lahf
xor
pusha
cmps
push
cmps
mov
xor
xchg
xlat
aam
repz
inc
jecxz
mov
hlt
push
rol
shl
mov
jmp
xchg
add
ret
data16
(bad)
je
and
adc
cli
lahf
rcl
shl
and
outs
add
sbb
push
cmc
adc
jg
mov
aaa
xor
and
and
aaa
loopne
aad
xor
adc
ja
les
nop
movs
jne
dec
lds
inc
mov
aam
add
push
jge
dec
aas
jo
inc
ja
in
mov
test
gs
in
andps
fs
inc
mov
adc
ins
pop
push
push
mov
xchg
add
push
jmp
add
fld
xor
mov
xchg
mov
and
jo
inc
mov
iret
fsub
mov
pusha
mov
xor
xchg
xlat
jecxz
rcl
mov
inc
out
scas
hlt
inc
(bad)
(bad)
mov
xor
hlt
mov
icebp
fs
xor
add
ret
(bad)
(bad)
out
je
and
adc
rcr
and
add
jg
sbb
sbb
adc
xor
cs
cs
pop
cmps
popa
daa
pop
mov
loopne
aad
xor
sbb
arpl
les
push
jno
inc
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
iret
xchg
retf
add
mov
out
je
and
adc
in
lahf
xlat
xchg
and
adc
in
add
arpl
ja
add
sbb
das
mov
aaa
add
add
or
push
dec
pop
cmps
es
cs
loopne
aad
xor
adc
push
push
les
push
dec
inc
xor
pusha
das
jbe
add
aam
add
push
sub
test
in
mov
test
popa
in
orps
inc
addr16
dec
mov
dec
cmc
ins
pop
push
push
adc
lods
add
fld
xor
xchg
adc
lods
mov
and
jo
inc
xchg
movs
shl
mov
fnsave
pusha
cmps
push
mov
xor
xlat
aam
repz
inc
in
mov
add
xor
out
mov
jmp
xchg
add
ror
je
and
adc
cmc
lahf
fist
push
shl
es
or
push
rol
pop
adc
ss
aaa
xor
sbb
push
lds
shld
sub
xor
and
sub
adc
les
jne
jbe
dec
lds
dec
(bad)
push
inc
jl
inc
add
push
dec
aad
aas
jb
ins
ja
in
mov
test
dec
in
pcmpgtb
data16
push
xchg
jbe
js
jnp
push
push
lea
mul
test
push
mov
inc
xor
xchg
adc
mov
jo
inc
scas
movs
mov
or
scas
xor
pusha
mov
xor
xchg
xlat
fadd
mov
iret
(bad)
loopne
mov
add
xor
fidivr
hlt
fs
xor
les
cli
je
and
adc
call
pop
test
add
add
adc
add
add
xor
or
push
lds
dec
and
xor
es
xor
pop
(bad)
jae
push
les
xor
lds
(bad)
inc
je
pusha
add
push
dec
aad
aas
jno
push
ja
in
mov
test
pop
in
cvtdq2ps
jo
data16
inc
mov
or
and
push
push
mov
push
in
gs
test
push
xchg
xchg
jne
xchg
mov
xor
inc
nop
movs
mov
es
cmps
xchg
xor
pusha
mov
xor
out
in
aad
test
inc
loope
cmc
inc
cdq
(bad)
cld
push
in
add
xor
hlt
mov
(bad)
fs
xor
add
ror
je
and
adc
fistp
adc
in
add
jge
aas
pop
adc
adc
das
mov
aaa
add
adc
or
imul
es
loopne
aad
xor
adc
dec
push
inc
les
movs
jne
inc
lds
das
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
test
popf
mov
je
and
adc
loop
aam
and
and
add
je
add
sbb
cmc
sbb
sub
add
or
(bad)
cmp
cmps
es
adc
push
loopne
aad
xor
push
(bad)
ja
pusha
les
push
lds
jne
inc
inc
fs
add
push
sub
sbb
ins
not
inc
in
mov
test
push
dec
cvtdq2ps
pop
addr16
inc
mov
push
cmc
outs
pop
dec
push
mov
nop
add
push
cli
gs
push
fld
xor
cwde
adc
mov
test
jo
inc
test
cmps
es
cmps
mov
pusha
mov
xor
repz
loop
out
mov
mov
retf
scas
mov
rcl
xor
fdivr
lock
xor
gs
(bad)
out
je
and
adc
repnz
(bad)
xchg
add
pop
test
shl
es
or
or
add
pop
adc
xor
add
cmp
and
push
lds
and
and
mov
loopne
aad
xor
push
(bad)
push
push
push
les
js
jb
dec
lds
dec
mov
aam
add
push
xor
push
aas
jbe
jno
jg
data16
test
sbb
inc
packssdw
pop
addr16
outs
mov
pop
cmc
jb
pop
push
mov
pushf
add
push
repnz
test
push
xchg
xchg
jne
xchg
lock
lods
mov
and
jo
inc
stos
movs
mov
or
mov
pusha
mov
xor
not
fild
mov
cmc
(bad)
loop
rol
lock
rol
ret
xor
sar
cld
les
xchg
add
iret
(bad)
loopne
mul
std
je
and
adc
(bad)
lahf
rcl
data16
xor
sbb
adc
popa
xchg
adc
adc
xor
inc
lock
lds
dec
cmp
jge
sbb
xor
adc
arpl
les
nop
xor
jne
cmp
outs
das
pop
(bad)
jp
ja
add
push
jp
add
jb
inc
ja
in
mov
test
pop
in
andnps
inc
addr16
inc
mov
inc
cmc
cmp
push
push
cmps
xchg
mov
gs
xchg
add
nop
xchg
jne
xchg
mov
ss
mov
and
jo
inc
jmp
iret
frstor
mov
mov
push
div
mov
xlat
rol
in
retf
inc
jecxz
mov
push
icebp
add
xor
lock
shl
add
ret
data16
fdiv
jecxz
push
retf
lahf
rcl
add
and
test
outs
jle
adc
rol
push
adc
sub
movs
adc
and
adc
mov
loopne
aad
xor
adc
addr16
sub
xchg
imul
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
lock
fist
add
jnp
xor
outs
jp
sub
xor
ja
add
pop
adc
sub
add
push
lds
dec
pop
cmps
sbb
adc
xor
or
les
movs
dec
inc
cmp
arpl
jnp
sbb
aam
add
push
xor
add
ins
not
inc
in
mov
test
gs
andps
inc
addr16
dec
mov
pop
cmc
and
xchg
mov
movs
test
test
xchg
xchg
pushf
adc
div
aad
stos
movs
xchg
and
mov
shl
mov
xor
not
in
in
mov
iret
(bad)
loop
lds
(bad)
lock
rol
ret
xor
fnstsw
ret
xor
gs
(bad)
in
mov
and
adc
repz
aad
push
pop
adc
push
shl
xor
or
or
add
pop
adc
xor
movs
es
lds
and
daa
cmps
and
ds
loopne
aad
xor
adc
dec
push
pop
les
movs
jbe
inc
lds
dec
(bad)
pop
inc
jnp
inc
add
push
xor
jge
jnp
push
ja
in
mov
test
in
movd
gs
hlt
addr16
js
js
pop
pop
push
push
adc
mov
push
fld
xor
hlt
adc
lods
mov
and
jo
inc
jmp
es
xchg
xor
pusha
cmps
push
cmps
mov
xor
xchg
xlat
aam
loopne
mov
retf
(bad)
jecxz
mov
into
push
rol
shl
mov
jmp
xchg
add
ret
repz
je
and
adc
sti
lahf
rcl
shl
xor
outs
add
adc
adc
aaa
mov
aaa
xor
and
and
ss
aad
xor
adc
ja
les
nop
movs
gs
xor
bound
inc
(bad)
inc
dec
aam
add
push
jns
dec
aas
jo
inc
ja
in
mov
test
gs
in
andps
je
jno
inc
mov
or
push
mov
xchg
add
push
jmp
add
cmps
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
mov
iret
fsub
(bad)
cmps
mov
push
mov
fisttp
inc
repnz
and
out
scas
mov
push
cmc
add
xor
(bad)
mov
icebp
fbstp
retf
add
ret
(bad)
call
and
adc
ficomp
and
add
jg
das
pop
sbb
adc
xor
aas
lock
lds
dec
sbb
and
es
xor
sbb
popa
push
xor
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
pushf
mov
and
jne
lahf
fist
arpl
jno
sbb
outs
add
jne
add
add
jg
mov
aaa
aas
movs
add
push
lds
and
and
push
loopne
aad
xor
dec
(bad)
jae
pop
les
jnp
jo
js
pusha
das
inc
(bad)
pop
inc
js
jno
inc
mov
push
pop
aad
aas
sub
inc
ja
in
mov
test
sbb
inc
punpcklbw
pop
addr16
xchg
data16
cmc
push
pop
or
cmps
xchg
lahf
add
push
mov
add
mov
inc
xor
hlt
adc
lods
mov
and
jo
inc
hlt
movs
mov
in
cwde
xor
pusha
cmps
push
mov
mov
push
xchg
xlat
aam
fst
int
cmc
(bad)
in
int
int3
(bad)
mov
xor
sar
fs
xor
add
ror
je
and
adc
loopne
lea
adc
or
or
sub
adc
push
cmc
pop
adc
ins
mov
aaa
aaa
movs
inc
lock
dec
(bad)
aas
daa
pop
mov
loopne
aad
xor
dec
(bad)
inc
push
pop
les
nop
dec
movs
pop
inc
inc
lds
push
dec
inc
cmp
mov
push
pop
aad
aas
imul
jg
dec
mov
test
jb
inc
cmovs
jnp
sbb
jne
xchg
cmp
jno
fs
or
add
push
mov
test
push
lahf
xchg
adc
inc
xor
popf
adc
xchg
test
stos
movs
mov
es
pusha
mov
xor
repz
fild
into
and
loopne
call
push
fadd
(bad)
xor
ret
jbe
div
fs
xor
add
les
iret
je
and
adc
in
lea
jnp
or
inc
add
sub
push
rol
add
jg
mov
aaa
cmp
xor
sub
and
add
cmps
push
daa
adc
xor
es
xor
dec
(bad)
dec
push
push
les
dec
movs
or
lds
(bad)
pop
inc
push
aam
add
push
cs
aas
das
div
jg
jnp
ins
test
gs
in
movq
push
addr16
jge
arpl
cmp
or
lea
lea
test
push
scas
xchg
jne
xchg
in
adc
div
xchg
inc
xchg
movs
mov
es
cmps
mov
push
cmps
mov
xor
rcl
fild
cli
and
loope
lds
(bad)
mov
xor
out
test
in
idiv
shl
add
ror
je
and
adc
rcr
test
jb
xor
sbb
adc
sbb
adc
fs
aaa
aas
movs
inc
lock
lds
and
adc
mov
loopne
aad
xor
adc
push
push
sub
and
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
cmps
lahf
aad
add
ins
test
sar
ss
xchg
pop
adc
cmc
sbb
ss
aaa
sub
and
pop
cmps
and
pop
mov
loopne
aad
xor
adc
addr16
dec
les
sub
fs
cmp
aam
add
push
jno
pop
aas
jne
push
ja
in
mov
test
(bad)
in
nop
and
hlt
push
jne
cmc
ins
pop
pop
push
mov
push
sti
gs
mov
add
jne
xchg
stos
adc
xchg
leave
inc
xchg
frstor
stc
cmps
lds
pusha
mov
xor
repz
rol
and
in
mov
push
enter
loop
repnz
int
sti
jbe
imul
fs
xor
ror
je
and
adc
mov
pop
push
test
shr
es
xor
xchg
add
adc
xor
sub
lock
lds
and
push
cmps
sbb
xor
aad
xor
push
(bad)
push
push
dec
les
cmp
popa
das
jnp
push
inc
push
aam
add
push
dec
aad
aas
jne
jno
outs
in
mov
test
push
inc
andnps
inc
addr16
mov
pop
cmc
and
push
push
lea
cli
gs
add
xchg
jne
xchg
mov
div
fild
movs
test
es
mov
mov
mov
xor
rcl
into
inc
fst
test
inc
in
cmc
inc
out
ficom
shl
mov
loope
clc
xor
lds
popf
je
and
adc
in
lahf
fist
sbb
add
jg
add
jns
or
add
or
sub
pop
aaa
movs
cmp
dec
lds
and
pop
cmps
jns
inc
mov
loopne
aad
xor
adc
les
cmp
gs
cmp
add
aam
add
push
jb
dec
aas
jnp
inc
ja
in
mov
test
imul
pusha
addr16
imul
push
push
cmps
xchg
mov
push
jmp
add
fld
xor
mov
(bad)
push
and
jo
inc
xchg
movs
mov
es
fnsave
pusha
mov
xor
jecxz
leave
inc
fst
mov
inc
loope
mov
push
leave
add
xor
sar
fs
xor
les
test
loopne
(bad)
cmc
shl
lahf
aad
xor
add
add
jl
inc
pop
jge
or
add
and
cmp
cmp
and
pop
cmps
and
pop
mov
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
jnp
inc
pop
sbb
adc
xor
pop
lock
movs
jle
pop
cmps
outs
daa
xor
aad
xor
pop
(bad)
adc
les
push
jno
inc
lds
das
cmp
pop
inc
push
aam
and
sub
jbe
jo
sub
in
mov
test
jnp
sub
sbb
and
hlt
jo
inc
xchg
outs
jne
cmc
push
pop
push
push
xchg
xchg
hlt
add
push
movs
gs
add
xchg
jne
xchg
hlt
adc
icebp
mov
and
jo
inc
xchg
movs
movs
and
mov
pusha
test
mov
xor
mov
mov
out
jmp
in
fild
scas
mov
push
rol
out
into
aad
push
repnz
xchg
fs
xor
add
mov
out
je
and
adc
rcr
ins
test
shr
in
add
jns
sbb
adc
adc
xor
push
lock
add
dec
pop
cmps
bound
cmp
xor
adc
push
push
xor
addr16
movs
jne
inc
lds
das
cmp
push
inc
push
aam
and
push
xor
jae
ja
xor
in
mov
test
fs
nop
jns
jb
jne
inc
xchg
push
or
push
pop
push
push
leave
xchg
cmc
add
push
stos
movs
test
push
ret
adc
inc
cmps
jne
xchg
lock
mov
aam
xchg
inc
xchg
movs
mov
es
cmps
mov
mov
mov
xor
xchg
xlat
lods
inc
loop
jmp
scas
mov
push
aad
in
retf
push
idiv
xchg
fs
xor
add
lods
(bad)
fwait
data16
and
adc
rcr
je
daa
shl
test
jp
dec
pop
adc
cmc
and
aaa
mov
aaa
dec
movs
add
or
adc
pop
cmps
cmp
xor
xor
adc
or
les
imul
das
cmp
add
aam
and
push
xor
jb
jno
je
adc
inc
mov
test
arpl
ds
cs
jl
inc
xchg
inc
jne
cmc
push
pop
push
push
rcl
stos
gs
test
cdq
xchg
jne
xchg
call
ss
jo
inc
test
(bad)
loop
mov
push
scas
mov
xor
aam
mov
out
in
cmc
(bad)
sahf
scas
mov
push
fadd
out
loopne
mov
repz
lea
retf
in
gs
cdq
data16
out
je
and
adc
(bad)
lahf
rcl
shr
in
add
jnp
inc
pop
sbb
adc
xor
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
lods
mov
and
jo
inc
out
movs
mov
mov
pusha
cmps
push
movs
mov
xor
xchg
xlat
rol
shl
jecxz
fadd
(bad)
cmc
push
rol
xor
(bad)
mov
ret
xor
add
ret
data16
out
je
and
adc
rcr
and
in
add
sbb
xchg
add
push
cmc
add
aas
xchg
inc
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
xor
push
pop
aad
aas
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
fs
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
fist
stos
ss
mov
and
jo
inc
mov
iret
cdq
es
push
mov
fisttp
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loopne
(bad)
aad
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
xchg
dec
jg
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
dec
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
pop
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
mov
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
fcom
cli
push
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
sub
pop
adc
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
push
aad
aas
imul
add
inc
in
maxps
je
pop
hlt
adc
outs
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
movs
mov
and
jo
inc
xchg
movs
cdq
and
xchg
mov
mov
xor
jmp
and
lahf
scas
inc
(bad)
cld
push
mov
jmp
mov
iret
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
sub
add
cmp
or
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
push
jp
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
dec
xchg
fs
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
fist
stos
ss
mov
and
jo
inc
mov
iret
cdq
es
push
mov
fisttp
inc
mov
(bad)
xchg
scas
cli
inc
out
call
call
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
xchg
dec
jg
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
dec
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
pop
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
mov
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
fcom
cli
push
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
sub
pop
adc
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
push
aad
aas
imul
add
inc
in
maxps
je
pop
hlt
adc
outs
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
movs
mov
and
jo
inc
xchg
movs
cdq
and
xchg
mov
mov
xor
jmp
and
lahf
scas
inc
(bad)
cld
push
mov
jmp
mov
iret
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
sub
add
cmp
or
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
push
jp
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
dec
xchg
fs
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
fist
stos
ss
mov
and
jo
inc
mov
iret
cdq
es
push
mov
fisttp
inc
mov
(bad)
xchg
scas
cli
inc
out
call
call
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
xchg
dec
jg
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
dec
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
pop
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
mov
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
fcom
cli
push
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
sub
pop
adc
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
push
aad
aas
imul
add
inc
in
maxps
je
pop
hlt
adc
outs
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
movs
mov
and
jo
inc
xchg
movs
cdq
and
xchg
mov
mov
xor
jmp
and
lahf
scas
inc
(bad)
cld
push
mov
jmp
mov
iret
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
sub
add
cmp
or
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
push
jp
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
dec
xchg
fs
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
fist
stos
ss
mov
and
jo
inc
mov
iret
cdq
es
push
mov
fisttp
inc
mov
(bad)
xchg
scas
cli
inc
out
call
call
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
xchg
dec
jg
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
inc
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
pop
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
mov
xor
rcl
loop
rcl
(bad)
and
loop
fiadd
mov
xor
repz
lds
lock
iret
(bad)
std
data16
shl
out
in
fdiv
lahf
out
xchg
push
pop
adc
add
sbb
add
add
pop
adc
or
movs
xor
lds
cmps
data16
and
xor
sub
dec
push
les
push
movs
cmovne
outs
das
pop
mov
aam
add
push
js
jb
dec
div
ja
in
mov
test
dec
in
vmread
jge
push
hlt
popa
mov
outs
cmc
pop
pop
ins
push
xchg
xchg
mov
gs
test
push
mov
jne
xchg
cwde
adc
movs
mov
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fist
inc
mov
(bad)
lahf
scas
mov
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
ins
movs
je
lds
das
jle
inc
inc
ins
aam
and
push
xor
inc
aas
ins
div
in
mov
test
gs
ss
cmp
mov
adc
fs
dec
push
rcl
mov
aam
loopne
xchg
out
mov
adc
inc
mov
adc
in
mov
and
jo
inc
scas
movs
les
loopne
lds
pusha
adc
shl
xlat
xlat
call
and
xlat
scas
std
inc
popf
(bad)
mov
xor
les
shl
rol
repz
fsub
out
je
and
adc
loope
int
dec
pop
sub
add
xchg
gs
xor
and
or
sub
aaa
aaa
or
and
sbb
mov
loopne
aad
xor
push
(bad)
adc
les
jae
adc
and
push
das
jl
inc
inc
cmp
ja
arpl
inc
aas
ins
imul
mov
test
add
jbe
pop
out
addr16
xchg
push
adc
gs
dec
push
xchg
xchg
test
cmps
push
mov
leave
test
add
fld
mov
adc
lock
and
jo
inc
hlt
movs
shl
cmps
fnstenv
pusha
adc
enter
lea
xlat
jmp
out
repnz
(bad)
scas
inc
(bad)
movs
push
repnz
xor
lds
enter
rol
test
fst
in
into
xchg
push
pop
xor
add
cmp
pop
pop
jns
aaa
shl
push
adc
sub
movs
push
lock
cs
push
cmps
pusha
daa
inc
mov
loopne
aad
xor
or
push
push
push
movs
or
lds
jge
sbb
cmp
push
xor
inc
aas
outs
div
ja
in
mov
test
pop
out
addr16
push
mov
or
popa
pop
dec
push
int
stos
add
push
mov
mov
mov
adc
inc
mov
adc
mov
mov
inc
jmp
iret
popf
mov
pusha
xchg
mov
xor
aam
in
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
pusha
daa
inc
mov
loopne
aad
xor
or
les
jae
pop
inc
dec
lds
arpl
jge
pop
aam
cmp
push
pop
aad
aas
ins
neg
in
mov
test
in
minps
cmp
mov
adc
fs
dec
push
rcl
mov
mov
mov
xchg
xchg
jne
xchg
xchg
adc
mov
xchg
inc
mov
iret
and
cmps
mov
push
in
mov
push
call
lock
(bad)
adc
and
jmp
cld
inc
stc
(bad)
aad
out
add
xor
fnstsw
enter
rol
xlat
(bad)
frstor
out
je
and
adc
lock
int3
xchg
sub
xor
add
and
and
cmp
inc
adc
sub
movs
push
lock
movs
or
cmps
sbb
xor
aad
xor
adc
outs
push
push
movs
jo
dec
lds
jge
push
inc
push
aam
cmp
push
push
aad
aas
ins
test
in
mov
test
outs
in
cmovae
pop
addr16
inc
mov
js
jl
dec
push
mov
push
lods
gs
xchg
mov
inc
mov
sahf
xchg
lahf
adc
(bad)
mov
and
jo
inc
nop
movs
test
xchg
iret
popf
es
mov
mov
push
stc
mov
xor
jmp
repz
call
repz
out
scas
jecxz
std
(bad)
ficom
clc
xor
fdivr
shl
int
aam
out
retf
(bad)
fsub
out
je
and
adc
std
lahf
rcl
xor
xor
xor
cmp
xchg
sar
pop
adc
sub
or
adc
and
add
add
sbb
fs
or
les
ins
movs
je
inc
lds
jl
jns
push
aam
xor
push
pop
aad
aas
jae
dec
ja
in
mov
test
push
out
addr16
dec
mov
ja
jo
dec
push
stos
xchg
mov
cmps
push
mov
mov
mov
adc
inc
mov
adc
pushf
mov
and
jo
inc
xchg
movs
cmps
and
cdq
cmps
mov
(bad)
pusha
adc
mov
push
in
xlat
cld
inc
loop
repz
shr
mov
xor
cmp
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
push
lock
je
push
movs
jae
sbb
daa
daa
pop
mov
loopne
aad
xor
or
imul
movs
dec
inc
and
inc
das
arpl
jge
pop
aam
cmp
push
pop
aad
aas
ins
div
ja
in
mov
test
in
subps
pop
addr16
dec
mov
jg
jge
push
push
xchg
xchg
mov
gs
xchg
xchg
xchg
jne
xchg
xchg
adc
mov
int
lahf
jo
inc
mov
iret
and
cmps
mov
push
in
mov
push
(bad)
xlat
test
and
shr
aad
jmp
aad
push
fnstsw
xchg
shl
rol
cmc
(bad)
frstor
out
je
and
jne
lahf
int3
xchg
pop
pop
ins
test
shl
in
add
and
sub
adc
sub
movs
push
lock
movs
xor
cmps
sbb
xor
aad
xor
adc
push
push
xor
movs
jo
inc
lds
jge
push
inc
push
aam
and
push
aas
ins
div
or
test
pusha
in
cmovae
pop
addr16
dec
mov
js
jl
dec
push
int
jmp
gs
mov
mov
inc
out
sahf
xchg
lahf
adc
mov
aad
xchg
jo
inc
nop
movs
cmps
and
mov
mov
mov
push
stc
mov
xor
xlat
xlat
lods
inc
call
repz
aam
jecxz
std
(bad)
ficom
movs
xor
fdivr
mov
int
aam
call
data16
cmc
je
and
jne
lahf
rcl
xor
xor
xor
cmp
xchg
sub
gs
pop
adc
sub
aaa
aaa
dec
movs
pop
lock
ds
add
or
xor
or
les
ins
movs
je
dec
lds
jl
jns
push
aam
and
pop
push
pop
aad
aas
jae
jae
adc
test
addr16
minps
ja
jb
dec
mov
ja
jo
dec
push
xchg
xchg
in
add
push
mov
sahf
test
push
mov
inc
in
mov
lods
ss
mov
inc
xchg
movs
scas
and
cdq
cmps
mov
(bad)
pusha
xchg
push
test
mov
xlat
cld
inc
repz
and
retf
inc
mov
out
cdq
aad
push
ret
mov
fbld
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
push
lock
je
push
movs
jae
sbb
mov
loopne
aad
xor
or
imul
movs
gs
inc
lds
popa
(bad)
pop
inc
pop
aam
xor
push
xor
add
pop
test
in
mov
test
pop
in
cmovno
je
push
hlt
outs
mov
or
das
pop
js
lea
jmp
add
cmps
xchg
adc
inc
xor
lock
mov
mov
scas
jo
inc
mov
iret
and
cmps
(bad)
xor
pusha
mov
xor
repz
rol
mov
inc
loop
loope
(bad)
(bad)
xlat
push
rol
xor
int
fnsave
test
add
(bad)
pop
mov
je
and
adc
loopne
(bad)
xchg
aaa
pop
adc
in
add
and
pop
rol
and
pop
mov
aaa
xor
and
add
and
es
xor
cmp
les
cmp
data16
pusha
mov
aam
add
push
sub
dec
aas
pop
test
in
mov
test
jp
dec
cmovb
cmp
hlt
popa
mov
adc
and
xchg
xchg
add
push
cli
gs
test
push
rol
jne
xchg
lock
xchg
mov
and
jo
inc
out
movs
mov
xchg
and
mov
mov
xor
rcl
inc
rcl
and
out
scas
out
out
rcl
ret
xor
sar
fs
fwait
add
ret
data16
out
je
and
adc
movs
lahf
(bad)
xchg
or
sar
adc
adc
pop
pop
xor
adc
sbb
movs
sub
push
lds
and
add
and
and
add
cmp
push
push
push
les
xor
outs
inc
push
(bad)
push
inc
jns
inc
add
push
dec
aad
aas
pop
not
inc
in
mov
test
gs
inc
cmovb
cmp
mov
push
push
mov
xchg
add
push
mul
test
push
fld
xor
mov
xchg
cwde
xor
inc
mov
mov
movs
cmps
mov
shl
push
test
xchg
push
call
into
inc
repz
and
retf
inc
xlat
(bad)
rcl
out
cdq
aad
push
ret
mov
fbld
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
daa
daa
pop
mov
loopne
aad
xor
or
push
push
push
les
imul
das
addr16
push
inc
das
aam
add
push
pop
aad
aas
js
ss
in
mov
test
pop
in
subps
pop
addr16
hlt
adc
js
cs
pop
push
mov
xchg
add
push
jmp
add
cmps
xchg
adc
inc
xor
xchg
adc
xchg
leave
inc
xchg
and
cmps
mov
push
mov
fistp
inc
repz
inc
loopne
cld
inc
add
(bad)
xor
sar
fbstp
call
(bad)
fisub
out
je
and
adc
cmps
lahf
fst
cmp
ins
in
add
cmp
add
pop
xchg
sub
add
sbb
cmp
movs
pop
lock
lds
movs
add
cmps
pusha
daa
push
mov
loopne
aad
xor
es
jae
push
les
xor
lds
(bad)
push
inc
jns
outs
add
push
push
inc
aas
inc
test
in
mov
test
inc
in
cmovno
jae
pop
hlt
inc
mov
dec
cmc
js
push
mov
mov
gs
out
mov
adc
inc
xchg
xchg
stos
adc
div
aam
mov
lods
and
mov
pusha
mov
xor
rcl
out
int
mov
jmp
scas
loop
rol
fist
ret
xor
sar
les
xchg
add
iret
pop
data16
fidiv
out
mov
lahf
jmp
test
shl
pop
add
sub
push
rol
pop
adc
or
and
push
lds
and
push
cmps
xor
loopne
aad
xor
sub
jae
les
js
imul
(bad)
pop
inc
das
aam
add
push
dec
aad
aas
inc
imul
jb
jae
push
test
push
in
cmovbe
gs
hlt
inc
mov
dec
cmc
and
imul
xchg
movs
add
push
(bad)
gs
test
mov
inc
xor
out
adc
lods
mov
and
jo
inc
out
movs
and
cmps
scas
xor
pusha
cmps
push
cli
mov
xor
out
loopne
repz
and
shr
mov
xor
cmp
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
inc
push
ja
dec
nop
cmp
push
jle
inc
jno
cmp
push
push
aad
aas
jg
ins
ja
in
mov
test
pop
in
addps
gs
adc
imul
pop
pop
push
lea
movs
gs
out
mov
adc
inc
xor
mov
mov
jo
inc
in
movs
cmps
and
(bad)
cmps
cmps
xor
pusha
mov
xor
jecxz
loopne
movs
adc
inc
out
scas
inc
(bad)
(bad)
push
test
(bad)
push
cmp
lea
ret
(bad)
fisub
out
je
and
adc
mov
pop
and
add
cmp
xchg
xor
add
inc
adc
cmp
movs
add
and
push
cmps
and
inc
mov
loopne
aad
xor
es
arpl
les
sub
arpl
arpl
inc
inc
push
aam
add
push
sub
div
inc
in
mov
test
inc
in
divps
inc
addr16
inc
mov
or
and
xchg
mov
gs
test
add
test
xchg
xchg
in
adc
div
fiadd
movs
test
mov
pusha
mov
xor
rcl
inc
call
lods
and
loop
jecxz
rol
in
rol
ret
xor
fdivr
shl
add
iret
pop
data16
and
adc
lock
jmp
test
shl
pop
add
and
adc
add
pop
adc
or
and
push
lds
push
movs
add
cmps
and
cmp
xor
sub
push
push
pusha
les
xor
outs
das
data16
jg
jle
pop
add
push
jbe
jle
inc
not
jle
js
pop
test
push
in
cmove
pop
addr16
inc
mov
or
push
pop
fs
xchg
xchg
mov
gs
test
push
mov
xor
mov
div
mov
mov
cwde
and
sahf
cmps
mov
push
mov
fistp
inc
loop
out
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
inc
push
jae
jle
cmp
gs
jge
jg
inc
aam
add
push
push
aad
aas
jg
ins
ja
in
mov
test
pop
in
addps
gs
adc
imul
pop
pop
push
(bad)
xchg
xchg
add
push
movs
gs
out
mov
adc
inc
xor
mov
mov
jo
inc
in
movs
mov
es
cmps
mov
push
mov
fistp
inc
movs
adc
inc
loopne
inc
(bad)
cli
push
test
cli
push
cmp
lea
les
fnstenv
loopne
mov
lahf
fst
daa
sar
sub
cmp
xchg
and
add
sbb
cmp
movs
add
and
push
cmps
and
inc
mov
loopne
aad
xor
es
arpl
les
sub
fs
arpl
inc
inc
push
aam
add
push
jbe
dec
aas
inc
test
in
mov
test
inc
in
divps
inc
addr16
inc
mov
or
and
xchg
mov
gs
test
push
mov
inc
xchg
xchg
call
ss
mov
and
jo
inc
xchg
movs
shl
mov
mov
xor
rcl
out
icebp
adc
and
loope
cld
inc
rol
iret
push
jmp
ret
xor
(bad)
mov
les
xchg
add
iret
pop
data16
cld
je
and
adc
cli
lahf
jmp
test
shl
cmp
outs
and
adc
add
pop
adc
or
and
push
lds
and
pop
cmps
outs
daa
aaa
mov
loopne
aad
xor
sub
push
push
les
xor
outs
das
data16
outs
inc
data16
add
push
push
js
inc
test
in
mov
test
push
in
cmove
cs
jge
pusha
xchg
cmp
cmc
push
pop
fs
xchg
xchg
cmps
add
push
mov
add
mov
mov
movs
inc
xor
adc
mov
and
jo
inc
out
movs
cwde
and
mov
cmps
push
cli
mov
xor
jecxz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
inc
push
jae
jge
cmp
gs
js
add
aam
add
push
push
aad
aas
js
push
ja
in
mov
test
pop
out
addr16
adc
imul
pop
pop
push
(bad)
xchg
xchg
add
push
movs
gs
test
push
scas
xchg
jne
xchg
mov
ss
xchg
jo
inc
in
movs
mov
es
cmps
mov
push
mov
fistp
inc
movs
adc
inc
loopne
inc
(bad)
cli
push
lock
xor
cmp
xchg
lea
les
lds
loopne
mov
lahf
fst
daa
sar
sub
cmp
xchg
and
add
sbb
cmp
movs
add
dec
lds
and
push
cmps
and
inc
mov
loopne
aad
xor
es
jae
push
les
cmp
fs
jl
push
inc
push
aam
add
push
sub
not
inc
in
mov
test
cmovno
and
hlt
adc
pop
cmc
dec
pop
pop
push
(bad)
xchg
mov
lea
movs
push
add
jne
xchg
(bad)
adc
xchg
mov
and
jo
inc
(bad)
movs
mov
es
cmps
pushf
xor
pusha
mov
xor
not
out
rcl
lock
loope
out
mov
ret
xor
loope
div
test
add
iret
pop
mul
in
icebp
and
adc
cld
lahf
jmp
test
shl
sub
outs
and
adc
add
pop
adc
or
and
push
lds
and
add
add
and
cmp
sub
arpl
les
jnp
imul
(bad)
pop
inc
outs
aam
add
push
(bad)
aad
aas
inc
test
in
mov
test
pop
in
cmove
gs
jge
pusha
xchg
cmp
cmc
push
pop
fs
adc
movs
add
mov
inc
xor
mov
xor
inc
mov
ret
es
sahf
xor
pusha
cmps
push
cli
mov
xor
repz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
push
push
jae
jge
cmp
gs
jge
jg
inc
aam
add
push
push
aad
aas
js
inc
ja
in
mov
test
pop
out
addr16
adc
imul
pop
pop
push
mov
push
movs
gs
test
push
scas
xchg
jne
xchg
mov
xchg
mov
movs
mov
es
cmps
mov
push
mov
fistp
inc
movs
adc
inc
loopne
inc
(bad)
cli
push
icebp
add
xor
cmp
xchg
lea
les
lds
loopne
mov
lahf
fst
and
jnp
sub
cmp
xchg
sub
add
sbb
cmp
movs
add
dec
lds
and
push
cmps
and
dec
mov
loopne
aad
xor
es
dec
push
push
les
cmp
fs
jl
inc
inc
es
add
push
sub
jge
sub
in
mov
test
sbb
inc
cmove
dec
addr16
hlt
adc
jne
cmc
jno
dec
push
mov
push
lods
gs
test
push
add
jne
xchg
lahf
adc
div
pop
movs
(bad)
and
mov
mov
xor
rcl
in
mov
(bad)
loope
cmps
inc
mov
push
mov
ret
xor
sar
les
rol
iret
pop
data16
stc
je
and
adc
jecxz
ficom
xor
jno
pop
add
and
daa
rol
pop
adc
or
sub
push
lds
and
add
add
and
cmp
sub
arpl
les
jnp
push
inc
xor
outs
das
data16
daa
aam
add
push
sub
jae
inc
test
in
mov
test
pop
in
cmovne
jne
arpl
jge
pusha
xchg
cmp
cmc
and
fs
adc
movs
add
pushf
xchg
adc
inc
xor
mov
xor
inc
out
movs
cwde
and
mov
pusha
cmps
push
cli
mov
xor
xchg
xlat
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
or
les
movs
pop
inc
pop
lds
jge
jg
inc
aam
add
push
push
aad
aas
js
inc
ja
in
mov
test
pop
out
addr16
adc
xchg
cmp
cmc
push
pop
pop
push
mov
xchg
add
push
movs
gs
test
push
mov
inc
xor
mov
xchg
mov
movs
mov
or
cdq
xor
pusha
mov
xor
repz
loopne
movs
adc
inc
loopne
inc
(bad)
out
icebp
add
xor
cmp
(bad)
lea
les
shl
adc
scas
lahf
fst
and
jnp
cmp
cmp
xchg
sub
adc
cmp
movs
add
dec
lds
xor
popa
daa
dec
mov
loopne
aad
xor
and
les
imul
das
gs
ins
inc
fs
add
push
imul
push
ja
in
mov
test
jb
inc
unpcklps
dec
addr16
xchg
jge
je
inc
pop
dec
push
lea
test
add
xchg
xchg
jne
xchg
adc
mov
and
jo
inc
mov
iret
ret
es
cmps
mov
push
loopne
cdq
xor
rcl
in
jecxz
out
and
loope
mov
add
push
mov
ret
xor
aad
jmp
xor
add
iret
pop
je
and
adc
neg
adc
add
and
daa
rol
pop
adc
or
and
and
add
add
and
cmp
adc
arpl
les
js
jns
xor
outs
das
gs
jg
das
aam
add
push
sub
div
ja
in
mov
test
pop
in
cmovne
pop
addr16
hlt
jge
pusha
xchg
cmp
cmc
and
fs
adc
mov
push
mov
xor
mov
xor
inc
mov
mov
and
mov
push
jecxz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
jbe
jae
jl
cmp
gs
jge
jg
inc
aam
add
push
push
aad
aas
js
ss
in
mov
test
sbb
dec
maxps
pop
addr16
hlt
adc
xchg
jge
outs
cmc
push
pop
pop
push
lea
movs
gs
test
push
mov
inc
xor
mov
ss
mov
and
jo
inc
xchg
cwde
mov
pusha
mov
xor
jecxz
loopne
movs
adc
inc
out
scas
inc
(bad)
out
repnz
xor
cmp
(bad)
lea
ret
pop
data16
out
je
and
adc
scas
lahf
out
daa
pop
and
add
cmp
xchg
sub
adc
ds
aaa
add
and
sbb
and
loopne
aad
xor
adc
les
nop
ins
movs
dec
inc
pop
lds
xor
aam
add
push
push
aad
aas
outs
div
inc
in
mov
test
dec
in
unpckhps
and
hlt
dec
mov
push
cmc
dec
pop
push
push
mov
mov
gs
test
mov
inc
xchg
xchg
mov
cmps
jmp
and
jo
inc
stos
movs
and
cmps
mov
push
loopne
mov
push
out
loopne
out
adc
and
loop
mov
mov
push
jmp
ret
xor
loope
repz
test
add
iret
(bad)
xchg
repnz
je
and
adc
repnz
enter
push
test
shr
and
xchg
pop
sbb
jne
add
pop
adc
or
daa
lock
lds
pop
movs
add
cmps
sbb
cmp
xor
sbb
les
js
push
inc
aas
lds
gs
outs
inc
push
aam
add
push
xor
jbe
dec
div
ja
in
mov
test
pop
in
cmovne
jl
push
hlt
jle
pusha
xchg
cmp
cmc
and
fs
adc
mov
push
mov
lahf
adc
inc
xor
mov
xor
inc
cdq
movs
mov
xchg
cmps
iret
xor
pusha
cmps
push
mov
fistp
inc
in
out
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
inc
push
jae
jae
cmp
gs
jge
inc
jns
sub
push
aad
aas
js
ins
ja
in
mov
test
(bad)
in
maxps
pop
addr16
hlt
adc
jne
cmc
push
pop
pop
push
lea
movs
gs
test
push
mov
inc
xor
mov
mov
jo
inc
xchg
cwde
mov
pusha
mov
xor
xchg
xlat
loopne
movs
adc
inc
loopne
inc
(bad)
out
jmp
(bad)
xor
cmp
(bad)
mov
les
shl
adc
scas
lahf
out
aaa
pop
daa
test
sar
cmp
cmp
xchg
rol
sbb
cmp
movs
sbb
add
movs
add
cmps
sbb
adc
xor
dec
(bad)
jae
push
les
imul
das
fs
jg
cmp
mov
push
jge
jns
sub
inc
ja
in
mov
test
jle
inc
nop
addr16
hlt
dec
mov
dec
cmc
inc
pop
push
push
mov
mov
gs
sahf
add
add
jne
xchg
test
div
mov
movs
(bad)
and
pushf
cmps
mov
push
in
lea
rcl
in
loopne
out
and
loope
mov
push
mov
ret
xor
out
mov
(bad)
test
leave
add
iret
(bad)
xchg
data16
std
je
and
adc
les
adc
in
add
xchg
cmp
adc
pop
mov
aaa
pop
movs
and
push
lds
and
add
mov
loopne
aad
xor
inc
(bad)
dec
push
les
movs
push
inc
ins
lds
gs
pop
inc
pop
aam
add
push
pop
aad
aas
dec
div
ja
in
mov
test
pop
in
cmovbe
inc
addr16
hlt
jle
pusha
xchg
cmp
cmc
das
pop
fs
mov
cmps
add
push
mov
test
push
mov
xchg
adc
inc
xor
adc
mov
and
jo
inc
out
movs
and
cmps
mov
push
cli
mov
xor
xchg
xlat
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
inc
push
jae
jae
cmp
gs
jge
push
inc
jns
jae
inc
mov
push
push
aad
aas
js
ins
ja
in
mov
test
in
maxps
pop
addr16
hlt
push
mov
outs
cmc
push
pop
pop
push
(bad)
xchg
xchg
add
push
movs
gs
test
push
mov
inc
xor
mov
ss
xchg
movs
mov
mov
pusha
mov
xor
xchg
xlat
loopne
movs
adc
inc
loopne
inc
(bad)
loop
hlt
add
xor
cmp
(bad)
mov
les
xchg
loopne
mov
lahf
out
aaa
pop
daa
test
sar
dec
add
cmp
xchg
das
rol
sbb
ds
aaa
add
and
push
cmps
popa
daa
xor
push
loopne
aad
xor
sub
jae
push
les
cmp
fs
jl
inc
pop
aam
add
push
xor
dec
aas
dec
test
in
mov
test
sbb
inc
subps
pusha
addr16
pop
mov
or
push
pop
inc
push
lea
stos
gs
movs
add
mov
inc
xchg
xchg
mov
div
mov
movs
(bad)
and
cmps
cmps
scas
xor
pusha
mov
xor
rcl
in
loop
in
and
loope
mov
push
mov
ret
xor
out
jmp
xor
add
iret
(bad)
data16
stc
je
and
adc
lds
adc
in
add
xchg
pop
jns
je
add
pop
adc
cs
aaa
pop
movs
cmp
push
lds
and
add
mov
loopne
aad
xor
or
dec
push
les
movs
jl
cmp
outs
das
mov
pop
aam
add
push
pop
aad
aas
dec
imul
jb
jo
jb
dec
gs
in
cmovbe
push
addr16
hlt
jle
pusha
xchg
cmp
cmc
cmp
fs
mov
movs
add
push
lea
test
push
mov
xor
mov
div
scas
inc
mov
and
cmps
movs
xor
pusha
cmps
push
cli
mov
xor
jecxz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
push
push
jae
jp
cmp
gs
jge
push
inc
gs
add
push
dec
aad
aas
jns
push
ja
in
mov
test
in
maxps
pop
ins
hlt
push
mov
outs
cmc
push
pop
pop
push
mov
push
movs
test
mov
adc
inc
xor
mov
mov
xchg
movs
mov
stc
cmps
test
mov
xor
int
loopne
movs
adc
inc
loopne
inc
(bad)
loop
hlt
add
xor
cwde
mov
repnz
mov
les
xchg
loopne
mov
lahf
out
add
daa
test
sar
dec
add
cmp
xchg
sub
add
sbb
ds
aaa
add
and
push
cmps
popa
daa
xor
xor
sub
jae
push
les
cmp
fs
jl
inc
pop
aam
add
push
xor
dec
aas
dec
not
inc
in
mov
test
pop
in
divps
pusha
outs
hlt
inc
mov
adc
outs
pop
imul
xchg
mov
gs
mov
mov
inc
xchg
xchg
in
adc
xor
inc
test
iret
fldenv
pushf
cmps
xchg
xor
pusha
mov
xor
rcl
in
in
in
and
loope
mov
push
mov
ret
xor
in
jmp
xor
add
iret
(bad)
fwait
data16
in
fisub
out
movs
cmc
aad
iret
lahf
enter
adc
in
add
arpl
je
add
inc
adc
das
mov
aaa
pop
movs
cmp
push
lds
dec
add
mov
loopne
aad
xor
adc
dec
push
les
imul
das
fs
jg
inc
aam
add
push
push
aad
aas
dec
imul
jb
jno
jb
ja
pop
in
cmovbe
ins
addr16
hlt
inc
mov
dec
cmc
cmp
fs
mov
cmps
add
push
lea
test
push
mov
inc
xor
xchg
adc
lods
mov
and
jo
inc
cdq
movs
fbld
xchg
cmps
xchg
xor
pusha
cmps
push
cli
mov
xor
repz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
or
les
cmp
gs
jge
push
inc
gs
add
push
dec
aad
aas
jns
inc
ja
in
mov
test
push
dec
maxps
jne
ins
hlt
pop
mov
arpl
push
pop
pop
push
mov
push
movs
test
mov
adc
inc
xor
mov
xchg
fiadd
movs
and
cmps
xchg
xor
pusha
mov
xor
repz
loopne
out
test
inc
out
scas
inc
(bad)
out
push
cmc
add
xor
cwde
mov
(bad)
les
mov
ret
pop
mov
je
and
adc
mov
pop
and
add
cmp
xchg
sub
add
inc
adc
ds
aaa
add
and
sbb
mov
loopne
aad
xor
sub
dec
push
pop
les
cmp
arpl
jl
inc
pop
aam
add
push
(bad)
aad
aas
dec
mul
inc
in
mov
test
adc
inc
divps
cmp
hlt
jne
arpl
outs
pop
imul
xchg
mov
gs
test
push
mov
inc
xchg
xchg
mov
xor
inc
stos
movs
xchg
cmps
cmps
nop
xor
pusha
mov
xor
out
loopne
out
in
and
loop
mov
push
jmp
ret
xor
in
repz
test
add
iret
(bad)
call
and
adc
rcr
test
shr
in
add
js
inc
pop
add
adc
das
mov
aaa
add
and
add
mov
loopne
aad
xor
dec
(bad)
push
push
pusha
les
jb
pop
inc
dec
lds
mov
dec
aam
add
push
push
aad
aas
dec
imul
jle
jb
ins
test
pop
in
cmovbe
jl
add
inc
mov
dec
cmc
outs
pop
fs
mov
mov
gs
out
movs
push
mov
mov
cmps
inc
xor
xchg
adc
lods
mov
and
jo
inc
out
movs
fbld
out
xchg
mov
xor
xchg
xlat
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
jbe
jae
jns
cmp
gs
jge
push
inc
gs
add
push
dec
aad
aas
jns
inc
ja
in
mov
test
outs
in
maxps
jne
ins
hlt
push
mov
arpl
push
pop
pop
push
mov
xchg
add
push
movs
test
mov
adc
inc
xor
mov
xchg
mov
and
jo
inc
cwde
movs
test
stc
cmps
xchg
xor
pusha
mov
xor
repz
loopne
out
test
inc
loopne
inc
(bad)
out
push
test
xor
cwde
mov
repnz
mov
les
xor
adc
mov
pop
daa
test
sar
adc
cmp
xchg
sub
add
sbb
ds
aaa
add
and
sbb
mov
loopne
aad
xor
sub
push
push
push
les
cmp
fs
jl
sbb
aam
add
push
(bad)
aad
aas
dec
mul
inc
in
mov
test
push
inc
divps
pusha
addr16
hlt
jbe
arpl
outs
pop
imul
xchg
mov
gs
test
push
xchg
xchg
jne
xchg
xchg
adc
lods
mov
and
jo
inc
cmps
movs
mov
es
cmps
xor
mov
xor
rcl
inc
in
adc
and
loope
mov
push
jmp
ret
xor
jecxz
jmp
xor
add
iret
(bad)
call
and
adc
rcr
test
shr
in
add
jns
sub
push
xchg
rol
inc
adc
das
mov
aaa
add
dec
lock
push
dec
push
cmps
pusha
daa
adc
xor
adc
dec
push
les
movs
pop
inc
push
lds
mov
aam
add
push
dec
aad
aas
dec
imul
jb
jae
ins
test
inc
in
unpcklps
inc
addr16
inc
mov
ins
cmc
daa
pop
fs
mov
cmps
add
push
mov
test
pop
xor
sahf
adc
xchg
mov
and
jo
inc
mov
test
mov
pusha
cmps
push
cli
mov
xor
jecxz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
inc
push
jae
jns
cmp
gs
jge
inc
inc
jno
jge
inc
mov
push
dec
aad
aas
jns
ss
in
mov
test
outs
in
maxps
jne
push
hlt
pop
mov
arpl
push
pop
pop
push
lea
in
gs
out
mov
adc
inc
xor
mov
xchg
mov
and
jo
inc
in
movs
cwde
and
stc
cmps
xchg
xor
pusha
mov
xor
jecxz
loopne
out
lods
and
loopne
inc
(bad)
out
push
test
xor
pushf
mov
repnz
mov
les
xor
adc
mov
pop
daa
test
sar
adc
cmp
xchg
sub
add
sbb
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
and
arpl
les
cmp
fs
jl
sbb
aam
add
push
(bad)
aad
aas
dec
div
inc
in
mov
test
push
inc
divps
cmp
hlt
ja
arpl
outs
pop
imul
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
mov
lods
mov
and
jo
inc
cmps
movs
mov
es
mov
push
cli
mov
xor
not
out
repnz
inc
loope
mov
push
in
ret
xor
cli
mov
(bad)
fnsave
retf
add
iret
(bad)
cdq
data16
shl
out
movs
cmc
xchg
jne
lahf
enter
adc
in
add
jns
cmp
xor
rol
inc
adc
das
mov
aaa
add
pop
lock
lds
dec
add
arpl
sbb
push
loopne
aad
xor
or
jae
les
nop
outs
movs
dec
inc
push
lds
fs
jp
fs
add
push
dec
aad
aas
dec
not
jb
jl
ins
test
inc
in
unpcklps
inc
addr16
inc
mov
imul
adc
mov
push
lahf
xchg
adc
inc
xor
call
mov
and
jo
inc
cdq
movs
shl
and
push
cli
mov
xor
repz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
inc
push
jae
js
cmp
gs
jge
inc
inc
jno
jle
inc
mov
push
dec
aad
aas
jns
ins
ja
in
mov
test
jb
inc
maxps
jne
push
hlt
pop
mov
ins
cmc
and
pop
push
lea
in
gs
out
mov
adc
inc
xor
mov
mov
jo
inc
in
movs
cwde
and
stc
cmps
popf
xor
pusha
mov
xor
xchg
xlat
loopne
out
lods
and
loopne
inc
(bad)
cmps
push
out
add
xor
pushf
mov
repnz
mov
les
xor
adc
mov
pop
daa
test
shr
sub
cmp
xchg
sub
add
sbb
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
and
arpl
les
cmp
fs
jl
sbb
aam
add
push
(bad)
aad
aas
dec
test
in
mov
test
outs
in
divps
cmp
hlt
ja
arpl
ins
pop
imul
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
mov
lods
mov
and
jo
inc
lea
xchg
cdq
cmps
mov
push
cli
mov
xor
out
out
into
adc
inc
loope
mov
fld
repz
std
add
xor
stc
mov
(bad)
shl
retf
add
iret
(bad)
cdq
in
(bad)
out
movs
cmc
repz
lahf
enter
adc
in
add
jns
push
pop
xor
adc
das
mov
aaa
add
inc
lock
lds
movs
add
cmps
arpl
inc
mov
loopne
aad
xor
or
jae
les
nop
outs
movs
or
lds
fs
push
inc
outs
aam
add
push
inc
aad
aas
dec
not
jne
add
inc
in
cmovbe
jl
addr16
inc
mov
pop
cmc
addr16
fs
adc
mov
push
movs
xchg
jne
xchg
jecxz
sahf
dec
and
jo
inc
mov
pushf
and
nop
cmps
mov
mov
cmps
push
cli
mov
xor
xchg
xlat
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
push
push
jae
js
cmp
gs
jge
sbb
aam
add
push
dec
aad
aas
jp
push
ja
in
mov
test
pop
out
addr16
hlt
pop
mov
pop
cmc
and
pop
push
(bad)
xchg
xchg
add
push
in
lods
test
push
add
jne
xchg
mov
mov
xchg
jo
inc
in
movs
pushf
and
xchg
mov
xor
xchg
xlat
loopne
in
lods
and
loopne
inc
(bad)
cmps
push
call
aad
push
mov
repnz
mov
les
mov
loopne
mov
lahf
in
add
daa
test
shr
sub
cmp
xchg
sbb
adc
or
push
lock
lds
or
add
cmps
outs
daa
xor
xor
push
(bad)
arpl
les
outs
movs
adc
jg
fs
xor
aam
add
push
jge
popa
aas
jne
push
ja
in
mov
test
in
subps
pusha
addr16
adc
arpl
fs
imul
xchg
mov
gs
test
push
mov
inc
xchg
xchg
mov
lods
mov
and
jo
inc
mov
lods
and
std
cmps
mov
push
cli
mov
xor
rcl
out
rcl
call
inc
loope
mov
push
mov
ret
xor
out
jmp
xor
add
iret
(bad)
cwde
data16
(bad)
je
and
adc
fcomp
adc
in
add
jp
aas
pop
cmp
rol
inc
adc
das
mov
aaa
add
push
lock
sub
dec
inc
cmps
or
pop
mov
loopne
aad
xor
or
jae
les
nop
ins
movs
jae
push
mov
aam
add
push
jg
(bad)
dec
not
jne
add
inc
in
cmovbe
ins
addr16
hlt
jle
pusha
xchg
cmp
cmc
gs
fs
xchg
xchg
cmps
add
push
mov
test
pop
xor
jmp
xchg
dec
and
jo
inc
mov
test
out
mov
push
cli
mov
xor
jecxz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
or
les
cmp
gs
jge
sbb
aam
add
push
dec
aad
aas
jp
push
ja
in
mov
test
pop
out
addr16
hlt
pop
mov
pop
cmc
and
pop
push
mov
push
in
lods
test
push
add
jne
xchg
stos
adc
mov
and
fiadd
movs
(bad)
xchg
mov
xor
int
loopne
in
lods
and
out
scas
inc
(bad)
cmps
push
jmp
aad
push
mov
(bad)
lds
mov
ret
pop
data16
mov
loopne
mov
lahf
in
add
and
add
xchg
pop
sbb
adc
or
add
add
and
push
cmps
and
cmp
aad
xor
or
arpl
les
outs
movs
outs
inc
pop
lds
cmp
add
aam
add
push
xor
pusha
aas
outs
mul
inc
in
mov
test
jle
inc
unpcklps
and
hlt
push
mov
jo
pop
pop
pop
push
lea
jmp
add
mov
inc
xchg
xchg
scas
adc
div
aad
mov
test
mov
xor
mov
xor
not
loopne
loopne
out
and
loop
mov
push
mov
ret
xor
(bad)
mov
ret
fdiv
retf
add
iret
(bad)
cwde
in
ret
je
and
adc
fstp
adc
add
jp
sbb
cmp
adc
cs
aaa
add
and
pop
cmps
arpl
adc
xor
or
push
push
arpl
sub
inc
push
(bad)
js
and
ja
inc
mov
push
jae
(bad)
inc
not
jle
jae
outs
test
inc
in
cmovbe
inc
addr16
hlt
jle
pusha
xchg
cmp
cmc
bound
fs
xchg
xchg
mov
gs
test
lahf
xchg
jne
xchg
lods
adc
div
stos
inc
out
movs
(bad)
mov
pusha
cmps
push
mov
fistp
inc
cmps
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
jbe
jae
jg
cmp
gs
jge
sbb
aam
add
push
dec
aad
aas
jp
inc
ja
in
mov
test
pop
out
addr16
hlt
pop
mov
pop
cmc
and
pop
push
mov
xchg
add
push
in
lods
test
push
add
jne
xchg
mov
xchg
fiadd
movs
(bad)
xchg
mov
xor
repz
loopne
in
lods
and
loopne
inc
(bad)
mov
xor
mov
repnz
mov
les
div
loopne
mov
lahf
in
adc
daa
test
shr
sub
daa
xchg
pop
add
adc
sub
add
push
lds
dec
pop
cmps
sbb
sbb
xor
or
dec
push
push
les
inc
pop
lds
(bad)
pop
inc
pusha
aam
add
push
imul
jno
inc
in
mov
test
jb
inc
(bad)
out
addr16
hlt
push
mov
or
push
(bad)
xchg
mov
gs
mov
xchg
jne
xchg
(bad)
adc
xor
inc
test
iret
fsub
pushf
cmps
cmps
xor
pusha
mov
xor
rcl
inc
std
adc
and
loope
mov
push
mov
ret
xor
std
mov
(bad)
fs
xor
add
iret
(bad)
lahf
data16
iret
je
and
adc
ficomp
adc
in
add
jnp
aas
pop
and
rol
inc
adc
das
mov
aaa
add
sbb
add
movs
add
cmps
(bad)
add
push
loopne
aad
xor
or
dec
push
les
imul
cmova
jl
inc
mov
push
jg
(bad)
inc
test
in
mov
test
pop
in
cmovne
jg
inc
hlt
jge
pusha
xchg
cmp
cmc
jo
imul
xchg
cmps
add
push
mov
test
add
movs
xchg
jne
xchg
test
xchg
dec
and
jo
inc
mov
mov
es
cmps
sahf
xor
pusha
cmps
push
cli
mov
xor
int
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
inc
push
jae
xchg
cmp
gs
jge
sbb
aam
add
push
dec
aad
aas
jp
ss
in
mov
test
jle
inc
maxps
fs
hlt
push
mov
pop
cmc
and
pop
push
mov
xchg
add
push
in
gs
test
push
nop
xchg
jne
xchg
stos
adc
xchg
mov
and
jo
inc
mov
fbld
xchg
mov
xor
jecxz
loopne
in
lods
and
loopne
inc
(bad)
mov
xor
(bad)
mov
repnz
mov
les
div
loopne
mov
lahf
in
daa
pop
daa
test
shl
test
outs
xchg
pop
cmp
adc
sub
sbb
and
pop
cmps
outs
daa
inc
mov
loopne
aad
xor
or
push
push
push
les
imul
pop
inc
js
xor
push
xor
addr16
outs
test
in
mov
test
dec
in
nop
dec
addr16
xchg
jg
dec
cmc
pop
pop
push
push
mov
mov
gs
sahf
add
xchg
xchg
jne
xchg
adc
mov
and
jo
inc
test
iret
fsub
(bad)
cmps
mov
pusha
mov
xor
rcl
in
int
jmp
scas
mov
push
mov
ret
xor
cld
mov
(bad)
fs
xor
add
iret
(bad)
lahf
data16
out
je
and
adc
fcomp
adc
in
add
jnp
inc
pop
and
adc
das
mov
aaa
add
adc
add
movs
add
cmps
bound
add
xor
or
dec
push
les
imul
das
cmp
inc
inc
inc
aam
add
push
inc
aad
aas
jle
ss
in
mov
test
pop
in
cmovne
outs
addr16
hlt
inc
mov
jno
jge
imul
xchg
cmps
add
push
mov
test
add
mov
loop
mov
xchg
mov
mov
mov
and
jo
inc
mov
xchg
out
xor
cmps
push
stc
mov
xor
jecxz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
push
push
jae
xchg
cmp
gs
jle
inc
and
aaa
add
push
jns
(bad)
jp
ss
in
mov
test
inc
in
maxps
fs
hlt
push
mov
pop
cmc
and
pop
push
lea
in
gs
test
push
nop
xchg
jne
xchg
stos
adc
mov
jo
inc
mov
popf
es
ret
pusha
mov
xor
jecxz
loopne
in
lods
and
loopne
inc
(bad)
mov
xor
(bad)
mov
repnz
xor
les
div
loopne
mov
lahf
ficom
ins
shr
in
add
jne
inc
pop
adc
adc
sub
sbb
push
lds
dec
pop
cmps
xor
loopne
aad
xor
or
les
imul
das
cmp
outs
inc
jl
xor
push
dec
aad
aas
outs
not
inc
in
mov
test
gs
in
nop
jns
jle
push
mov
jo
pop
pop
push
push
(bad)
xchg
mov
mov
std
push
xchg
xchg
jne
xchg
lahf
adc
lods
mov
and
jo
inc
mov
iret
fisub
(bad)
cmps
mov
push
div
mov
xlat
in
not
jmp
hlt
korw
scas
mov
push
jmp
ret
xor
sti
mov
(bad)
shl
enter
les
(bad)
lahf
data16
out
je
and
adc
fstp
adc
in
add
jl
das
pop
sub
rol
inc
adc
das
mov
aaa
add
sbb
and
pop
cmps
(bad)
sbb
push
loopne
aad
xor
or
dec
push
les
imul
das
cmp
jnp
jg
jo
inc
mov
push
inc
aad
aas
inc
div
ja
in
mov
test
adc
inc
cmovne
jne
jo
jbe
pusha
xchg
cmp
cmc
jp
imul
xchg
cmps
add
push
xchg
test
add
mov
xor
mov
scas
dec
and
jo
inc
out
movs
cmps
and
mov
pusha
cmps
push
stc
mov
xor
repz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
push
push
jae
gs
cmp
gs
jle
inc
and
aaa
add
push
jns
(bad)
jp
ins
ja
in
mov
test
inc
in
maxps
and
hlt
push
mov
pop
cmc
and
pop
push
(bad)
xchg
sahf
add
push
in
gs
test
push
nop
xchg
jne
xchg
stos
adc
mov
jo
inc
mov
popf
es
into
xor
pusha
mov
xor
xchg
xlat
loopne
in
lods
and
out
scas
inc
(bad)
scas
push
jecxz
(bad)
xor
(bad)
mov
(bad)
fs
xor
gs
(bad)
fsub
out
je
and
adc
mov
pop
and
add
jp
inc
pop
xor
adc
sub
sbb
push
lds
dec
pop
cmps
sbb
pop
mov
loopne
aad
xor
or
les
push
adc
jnp
arpl
cmp
pop
inc
cmp
jne
inc
mov
push
jge
jno
outs
div
inc
in
mov
test
in
nop
jns
push
hlt
push
mov
pop
cmc
push
pop
dec
push
mov
mov
mov
cld
push
test
xchg
xchg
mov
xor
inc
mov
iret
fbld
lahf
cmps
scas
xor
pusha
mov
xor
rcl
loopne
int3
adc
and
loop
mov
push
cmc
add
xor
icebp
mov
ret
xlat
xor
add
iret
(bad)
sahf
data16
out
je
and
adc
ficomp
adc
add
jl
inc
pop
gs
rol
push
adc
cs
aaa
add
and
pop
cmps
cmp
sbb
xor
adc
jae
arpl
jl
imul
das
cmp
jnp
outs
aam
add
push
dec
aad
aas
dec
imul
jle
jae
pop
test
inc
in
unpcklps
jae
jne
ja
pusha
xchg
cmp
cmc
dec
pop
imul
xchg
mov
gs
out
movs
push
movs
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
cmps
and
and
push
mov
fistp
inc
movs
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
or
les
cmp
gs
jle
inc
cs
add
push
jns
(bad)
inc
not
inc
in
mov
test
pop
in
maxps
and
hlt
push
mov
pop
cmc
and
pop
push
(bad)
xchg
xchg
add
push
in
xchg
mov
adc
inc
xor
stos
adc
mov
xchg
jo
inc
cwde
movs
stos
and
mov
into
xor
pusha
mov
xor
int
loopne
in
lods
and
loopne
inc
(bad)
scas
push
in
add
xor
int
(bad)
jbe
div
fs
xor
les
repz
and
adc
mov
pop
and
and
sub
xor
jp
inc
pop
add
adc
sub
pop
lock
adc
pop
cmps
xor
loopne
aad
xor
push
(bad)
jae
push
les
movs
dec
inc
jae
fs
jnp
outs
inc
jo
jno
inc
mov
push
ins
aad
aas
ins
not
inc
in
mov
test
pop
in
andnps
pusha
addr16
hlt
push
mov
dec
cmc
das
pop
dec
push
(bad)
xchg
mov
gs
mov
push
test
xchg
xchg
stos
adc
lods
mov
and
jo
inc
nop
movs
fisub
(bad)
cmps
nop
xor
pusha
mov
xor
not
in
(bad)
adc
and
loope
mov
push
test
enter
repz
test
add
iret
(bad)
popf
data16
out
je
and
adc
rcr
adc
in
add
jge
das
pop
jns
rol
push
adc
das
mov
aaa
add
adc
add
movs
add
cmps
(bad)
add
push
loopne
aad
xor
or
dec
push
les
imul
das
cmp
push
inc
pop
aam
add
push
jp
pop
aas
imul
ja
in
mov
test
jno
inc
sysret
out
addr16
adc
push
cmc
jne
imul
xchg
cmps
add
push
test
test
add
mov
(bad)
adc
inc
xor
adc
mov
and
jo
inc
cdq
movs
stos
and
xchg
cmps
mov
push
stc
mov
xor
jecxz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
jbe
jae
fs
cmp
gs
jle
inc
cs
add
push
jns
push
aas
inc
not
inc
in
mov
test
dec
in
maxps
and
hlt
push
mov
pop
cmc
and
pop
push
mov
push
in
xchg
mov
adc
inc
xor
scas
adc
xchg
fild
movs
scas
and
mov
xor
fistp
inc
in
lods
and
loopne
inc
(bad)
scas
push
in
add
xor
int
(bad)
jbe
div
fs
xor
les
repz
and
adc
out
lahf
in
aaa
pop
and
arpl
sub
es
js
aas
pop
and
adc
xor
or
and
add
mov
loopne
aad
xor
add
les
sub
lds
mov
aam
add
push
jbe
add
ins
div
inc
in
mov
test
gs
inc
orps
jo
pop
hlt
inc
mov
or
cmp
dec
push
mov
mov
gs
test
push
test
xchg
xchg
jmp
xor
inc
stos
movs
test
es
test
pusha
mov
xor
rcl
in
fist
mov
inc
loope
cmc
inc
rol
in
icebp
add
xor
repz
(bad)
fs
retf
in
gs
(bad)
pushf
data16
in
shl
out
mov
div
lahf
int
or
shr
in
add
jge
aas
pop
jns
rol
inc
adc
das
mov
aaa
add
adc
add
movs
add
cmps
(bad)
pop
mov
loopne
aad
xor
or
dec
push
les
imul
das
cmp
push
inc
jnp
jle
inc
mov
push
dec
aad
aas
push
in
mov
test
dec
in
(bad)
out
addr16
inc
mov
push
cmc
jae
imul
xchg
cmps
add
push
test
test
push
mov
xor
mov
xor
inc
out
movs
stos
and
out
mov
push
stc
mov
xor
repz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
inc
push
jae
fs
cmp
gs
jle
push
inc
popa
aam
add
push
jge
push
aas
inc
test
in
mov
test
dec
in
maxps
and
hlt
dec
mov
push
cmc
and
pop
push
mov
xchg
add
push
in
xchg
mov
adc
inc
xor
scas
adc
xchg
fild
movs
mov
mov
pusha
mov
xor
repz
loopne
in
lods
and
loopne
inc
(bad)
aam
in
add
xor
int
retf
jbe
div
fs
xor
les
push
loopne
mov
lahf
in
adc
daa
test
shr
cmp
and
add
add
sbb
cmp
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
push
(bad)
push
push
push
les
sub
lds
mov
aam
add
push
push
aad
aas
ins
not
inc
in
mov
test
outs
in
cvtdq2ps
jo
dec
hlt
dec
mov
jae
and
dec
push
(bad)
xchg
mov
mov
mov
xchg
xchg
adc
inc
xchg
xchg
pushf
adc
lods
mov
and
jo
inc
mov
iret
xchg
es
lds
mov
xor
not
in
fist
mov
inc
loope
test
cld
push
jecxz
ret
xor
mov
(bad)
push
mov
iret
(bad)
pushf
data16
out
je
and
adc
rcr
adc
in
add
jns
inc
pop
xor
adc
cs
aaa
add
cs
cs
pop
cmps
bound
inc
mov
loopne
aad
xor
or
dec
push
les
imul
das
cmp
push
inc
ja
jge
inc
mov
push
pop
aad
aas
push
in
mov
test
dec
in
nop
dec
addr16
hlt
push
mov
push
cmc
jne
fs
cmps
xchg
cmps
add
push
mov
test
push
xchg
xchg
jne
xchg
mov
div
mov
and
mov
pusha
cmps
push
stc
mov
xor
int
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
push
push
jae
jnp
cmp
gs
jle
push
inc
popa
aam
add
push
jge
push
aas
inc
div
ja
in
mov
test
inc
in
maxps
and
hlt
dec
mov
push
cmc
and
pop
push
lea
jmp
add
cmps
xchg
jne
xchg
scas
adc
xchg
mov
and
jo
inc
in
movs
mov
mov
pusha
mov
xor
jecxz
loopne
sti
adc
inc
loopne
inc
(bad)
aam
out
add
xor
into
mov
repnz
xor
les
push
loopne
mov
lahf
jmp
daa
pop
daa
test
imul
and
xchg
pop
sete
rol
sbb
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
dec
(bad)
jae
push
les
sub
fs
jne
inc
inc
cmp
arpl
jp
sbb
ins
div
inc
in
mov
test
jp
inc
andps
jo
jp
dec
mov
arpl
es
dec
push
mov
mov
gs
test
push
xchg
xchg
jne
xchg
mov
xor
inc
nop
movs
mov
es
fnstenv
pusha
mov
xor
rcl
in
rcl
mov
inc
loope
sti
inc
out
mov
xor
cmp
fs
xor
gs
(bad)
(bad)
mov
and
adc
mov
pop
adc
in
add
jnp
aas
pop
sub
rol
push
adc
cs
aaa
add
sbb
add
movs
add
cmps
or
adc
push
loopne
aad
xor
or
arpl
les
imul
das
cmp
jnp
jg
jge
inc
mov
push
jns
jle
push
in
mov
test
dec
in
nop
pop
addr16
hlt
adc
pusha
xchg
cmp
cmc
jl
pop
push
cmps
xchg
cmps
add
push
mov
test
push
cmps
xchg
jne
xchg
xchg
adc
lods
mov
and
jo
inc
cdq
movs
mov
(bad)
iret
xchg
and
push
stc
mov
xor
jecxz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
push
push
jae
bound
aas
lds
jle
push
inc
es
add
push
jge
sbb
inc
imul
inc
in
mov
test
pop
in
divps
pop
addr16
hlt
push
mov
push
cmc
cmp
pop
push
lea
jmp
add
cmps
xchg
adc
inc
xor
mov
into
inc
and
jo
inc
in
movs
cmps
and
mov
pusha
mov
xor
jecxz
loopne
sti
adc
inc
out
scas
std
inc
cli
(bad)
rcl
(bad)
xor
into
mov
(bad)
shl
add
ret
(bad)
fsub
out
je
and
adc
in
lahf
jmp
aaa
pop
and
add
xchg
pop
sete
rol
inc
adc
or
pop
lock
lds
and
sbb
mov
loopne
aad
xor
dec
(bad)
jae
push
les
sub
arpl
jbe
inc
inc
pop
aam
add
push
push
dec
aas
jae
push
ja
in
mov
test
jb
inc
packsswb
jo
jle
dec
mov
push
cmc
and
dec
push
(bad)
xchg
mov
gs
test
push
xchg
xchg
jne
xchg
mov
cmp
lods
mov
and
jo
inc
stos
movs
mov
or
mov
pusha
mov
xor
not
loopne
(bad)
adc
inc
loop
hlt
inc
out
movs
push
out
add
xor
cmp
lea
iret
(bad)
aad
in
iret
je
and
adc
rcr
adc
add
jle
sbb
add
adc
cs
aaa
add
and
pop
cmps
or
cs
loopne
aad
xor
or
arpl
les
push
lds
cmp
push
inc
addr16
add
push
dec
aad
aas
push
in
mov
test
dec
in
nop
dec
addr16
hlt
adc
pusha
xchg
cmp
cmc
jg
pop
push
adc
mov
add
sahf
adc
lods
mov
and
jo
inc
out
movs
mov
(bad)
iret
and
cmps
mov
pusha
cmps
push
mov
fbld
inc
in
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
jbe
jae
fs
cmp
gs
jle
inc
inc
es
add
push
jge
sbb
inc
imul
inc
in
mov
test
divps
pop
addr16
hlt
push
mov
push
cmc
cmp
pop
push
(bad)
xchg
xchg
add
push
jmp
add
cmps
xchg
adc
inc
xor
mov
fdivr
xchg
mov
xchg
jo
inc
in
movs
mov
mov
pusha
mov
xor
xchg
xlat
loopne
sti
adc
inc
loopne
std
inc
cli
(bad)
rcl
(bad)
xor
into
mov
repnz
xor
les
sti
je
and
adc
in
lahf
jmp
aaa
pop
daa
test
add
xchg
pop
xor
cmc
sbb
or
pop
lock
lds
and
sbb
sbb
adc
xor
pop
(bad)
dec
push
push
les
sub
lds
(bad)
inc
inc
aam
add
push
jbe
push
aas
jae
jno
jg
add
dec
in
(bad)
out
addr16
hlt
jge
arpl
outs
pop
push
push
mov
mov
pop
add
xchg
jne
xchg
mov
xor
inc
nop
movs
(bad)
and
mov
pusha
mov
xor
rcl
fild
test
inc
loope
hlt
inc
cdq
(bad)
rcl
ret
xor
xchg
(bad)
fs
xor
gs
(bad)
aam
(bad)
test
out
mov
push
lahf
into
xchg
or
shr
in
add
jg
sbb
xor
adc
sub
movs
and
and
pop
cmps
pop
daa
sbb
xor
or
push
push
les
push
lds
aas
(bad)
push
inc
and
jle
inc
mov
push
imul
ss
in
mov
test
dec
in
nop
and
hlt
push
mov
add
jle
pop
push
cmps
xchg
cmps
add
push
and
add
xchg
jne
xchg
call
mov
and
jo
inc
mov
and
cmps
iret
xor
pusha
cmps
push
stc
mov
xor
int
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
inc
push
jae
jg
cmp
gs
jle
inc
inc
es
add
push
jno
sbb
inc
not
inc
in
mov
test
divps
pop
addr16
hlt
push
mov
push
cmc
cmp
gs
mov
push
jmp
add
fld
xor
mov
fdivr
xchg
mov
xchg
jo
inc
mov
mov
es
cmps
(bad)
xor
pusha
mov
xor
int
loopne
sti
adc
inc
loopne
std
inc
cli
(bad)
rcl
(bad)
xor
iret
mov
repnz
add
les
sti
je
and
adc
cmps
lahf
jmp
add
daa
test
add
xchg
pop
xor
cmc
sbb
or
push
lock
lds
and
sbb
aaa
daa
push
mov
loopne
aad
xor
dec
(bad)
arpl
les
sub
lds
(bad)
inc
and
mov
push
sub
pop
aas
jb
push
ja
in
mov
test
inc
in
punpcklwd
pop
addr16
hlt
inc
mov
jae
arpl
push
push
(bad)
xchg
mov
movs
test
xchg
xchg
jne
xchg
cwde
adc
lods
mov
and
jo
inc
out
fwait
and
mov
pusha
mov
xor
out
fild
lods
and
loope
ret
inc
cdq
(bad)
lock
jmp
push
test
(bad)
fs
xor
gs
(bad)
aam
hlt
out
je
and
adc
mov
pop
adc
in
add
xor
pop
pop
and
adc
sub
movs
cmp
or
cs
pop
cmps
(bad)
adc
xor
or
dec
push
les
push
lds
ds
push
inc
cmp
mov
push
jne
js
push
in
mov
test
dec
in
nop
jns
dec
hlt
push
mov
push
cmc
jp
pop
push
adc
add
xchg
jne
xchg
jecxz
mov
test
xchg
mov
and
jo
inc
cdq
movs
mov
and
push
stc
mov
xor
repz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
push
push
jae
jae
cmp
gs
jle
inc
inc
pop
aam
add
push
jno
sbb
inc
test
in
mov
test
divps
pop
addr16
hlt
push
mov
push
cmc
cmp
gs
mov
push
jmp
add
fld
xor
mov
fdivr
test
xchg
fild
movs
mov
es
cmps
mov
push
mov
fild
inc
loop
mov
inc
loopne
std
inc
cli
(bad)
fcom
(bad)
xor
iret
mov
repnz
add
les
out
shl
adc
cmps
lahf
jmp
adc
daa
test
add
xchg
xor
cmc
sbb
or
push
lock
lds
movs
add
cmps
daa
daa
sbb
xor
sub
dec
push
push
les
nop
cmp
fs
aas
mov
aam
add
push
push
aad
aas
jb
jno
jg
pop
mov
test
pop
in
punpckldq
pop
addr16
hlt
inc
mov
outs
cmc
popa
pop
push
push
mov
mov
gs
repz
mov
inc
xchg
xchg
mov
xor
inc
out
xchg
and
stc
cmps
mov
push
mov
mov
out
fild
lods
and
loope
fadd
(bad)
into
push
fiadd
ret
xor
into
mov
cld
xor
add
iret
(bad)
cld
data16
stc
je
and
adc
mov
pop
adc
in
add
xor
pop
pop
sub
sub
adc
sub
pop
aaa
add
and
pop
lds
adc
mov
loopne
aad
xor
adc
dec
push
les
movs
or
lds
aas
mov
aam
add
push
xor
jnp
push
in
mov
test
dec
in
nop
pop
addr16
xchg
cmp
cmc
jno
pop
push
xchg
xchg
cmps
add
push
and
out
cmps
push
mov
mov
xchg
inc
xor
out
adc
xor
inc
mov
mov
es
cmps
movs
xor
pusha
cmps
push
cli
mov
xor
jecxz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
push
push
jae
jle
cmp
gs
jle
inc
inc
pop
aam
add
push
jno
sbb
inc
test
in
mov
test
sbb
dec
divps
je
dec
hlt
dec
mov
push
cmc
cmp
gs
mov
sahf
add
push
jmp
add
fld
xor
mov
fdivr
test
xchg
mov
and
jo
inc
mov
popf
es
cmps
mov
push
in
xor
loop
mov
inc
out
scas
std
inc
aam
fcom
(bad)
xor
sar
shl
add
ret
(bad)
fsub
out
je
and
adc
cmps
lahf
jmp
shr
cmp
xchg
pop
xchg
pop
rol
inc
adc
or
sbb
and
sbb
pusha
daa
add
xor
sub
dec
push
pop
les
aaa
movs
jge
inc
lds
popa
mov
aam
add
push
jp
inc
aas
sub
push
ja
in
mov
test
pop
in
packuswb
pop
addr16
hlt
inc
mov
push
cmc
popw
push
push
lea
cmc
pop
add
xchg
adc
inc
xchg
xchg
mov
cmp
lods
mov
and
jo
inc
xchg
movs
fisub
mov
pusha
mov
xor
rcl
inc
cmps
adc
inc
loop
rol
cld
push
out
ret
xor
les
ret
xor
gs
(bad)
jecxz
(bad)
loope
(bad)
and
adc
scas
lahf
int3
xchg
and
adc
add
jle
das
pop
add
adc
sub
pop
aaa
add
and
adc
mov
loopne
aad
xor
or
arpl
les
movs
pop
inc
ins
lds
aas
(bad)
jnp
and
ja
inc
mov
push
imul
ss
in
mov
test
inc
in
nop
and
hlt
push
mov
pop
cmc
pop
pop
fs
xchg
xchg
mov
gs
test
push
mov
xor
jmp
mov
and
jo
inc
mov
and
test
mov
xor
jecxz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
or
les
cmp
gs
jle
sbb
aam
add
push
jno
add
inc
div
ja
in
mov
test
sbb
inc
divps
je
pop
hlt
dec
mov
push
cmc
cmp
gs
lea
jmp
add
fld
xor
mov
fdivr
test
xchg
mov
and
jo
inc
mov
popf
es
cmps
mov
push
mov
fild
inc
loop
mov
inc
loopne
std
inc
aam
fcom
(bad)
xor
sar
shl
add
les
out
(bad)
and
adc
cmps
lahf
jmp
shr
cmp
xchg
pop
xchg
adc
add
sbb
add
adc
add
and
add
xor
es
xor
sub
dec
push
push
les
aaa
movs
push
inc
dec
lds
(bad)
jns
inc
aam
add
push
jbe
pop
aas
dec
test
in
mov
test
pop
in
punpckldq
pop
addr16
imul
cmc
jnp
push
push
mov
push
mul
test
push
mov
inc
xchg
xchg
mov
xor
inc
xchg
movs
xchg
and
xchg
mov
xor
rcl
fild
mov
cmc
lds
inc
rol
mov
xor
sar
fs
xchg
add
iret
(bad)
jecxz
in
shl
out
mov
mov
lahf
int3
xchg
and
adc
in
add
jle
das
pop
add
adc
sub
pop
aaa
add
xor
pop
lds
push
cmps
and
sbb
xor
or
dec
push
les
push
dec
inc
aas
lds
ds
push
inc
pop
aam
add
push
popa
aad
aas
ins
test
in
mov
test
sbb
inc
addr16
hlt
inc
mov
jns
push
pop
push
xchg
xchg
cmps
add
push
(bad)
xchg
cmps
push
sahf
xchg
jne
xchg
mov
div
add
iret
and
test
mov
xor
xchg
xlat
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
or
les
sub
gs
jle
sbb
aam
add
push
jne
add
inc
imul
inc
in
mov
test
(bad)
in
divps
je
pop
hlt
dec
mov
dec
cmc
cs
gs
lea
jmp
add
add
jne
xchg
mov
cmp
mov
jo
inc
mov
sahf
xchg
mov
xor
xchg
xlat
loopne
loop
mov
inc
loopne
std
inc
aam
fcom
(bad)
xor
sar
shl
add
les
jecxz
lock
adc
cmps
lahf
jmp
shr
dec
add
and
adc
add
sbb
or
adc
push
lds
sub
aaa
daa
inc
mov
loopne
aad
xor
sub
jae
push
les
aaa
movs
inc
inc
dec
lds
(bad)
sbb
add
push
sub
test
in
mov
test
adc
inc
cmovbe
das
addr16
adc
jne
cmc
jo
push
push
lea
mul
test
push
mov
inc
xchg
xchg
lock
lods
mov
and
jo
inc
out
fwait
and
mov
mov
test
push
div
xchg
push
rcl
fild
mov
iret
(bad)
loope
mov
add
xor
(bad)
mov
cld
fs
xor
iret
(bad)
(bad)
out
je
and
adc
mov
pop
adc
in
add
jg
das
pop
xor
adc
sub
xor
add
xor
and
sbb
or
xor
or
les
movs
or
lds
cmp
aam
add
push
dec
aad
aas
ins
imul
jne
push
mov
test
inc
in
(bad)
out
addr16
hlt
push
mov
dec
cmc
gs
jns
adc
add
xchg
adc
inc
xor
stos
adc
div
xchg
movs
mov
test
cmps
push
cli
mov
xor
int
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
jbe
jae
inc
nop
sub
gs
jle
sbb
aam
add
push
jne
add
jge
push
ja
in
mov
test
in
divps
je
pop
hlt
dec
mov
dec
cmc
cs
gs
(bad)
xchg
xchg
add
push
jmp
add
add
jne
xchg
mov
cmp
ss
xchg
jo
inc
cdq
movs
mov
xchg
mov
xor
xchg
xlat
loopne
loope
mov
inc
loopne
std
inc
aam
fcom
(bad)
xor
test
repnz
add
les
jecxz
lock
adc
movs
lahf
jmp
shr
dec
add
and
adc
add
sbb
or
sbb
push
lds
and
add
xor
es
xor
sub
jae
push
les
movs
ins
inc
dec
lds
mov
aam
add
push
xor
push
aas
dec
test
in
mov
test
adc
inc
cmova
jb
push
hlt
inc
mov
jae
jno
inc
push
lea
mul
test
push
mov
inc
xchg
xchg
scas
adc
lods
mov
and
jo
inc
stos
movs
lahf
and
stc
cmps
mov
push
div
xchg
push
rcl
inc
mov
korw
scas
rol
(bad)
push
(bad)
add
xor
fdivr
cld
xor
int3
gs
(bad)
aad
(bad)
test
out
mov
retf
lahf
int3
xchg
xor
adc
in
add
xor
xchg
sub
add
push
adc
xor
aaa
lock
lds
sbb
push
loopne
aad
xor
or
les
movs
je
aas
lds
cmp
push
inc
jae
je
inc
mov
push
inc
aad
aas
ins
div
ja
in
mov
test
inc
in
nop
inc
addr16
hlt
jo
pusha
xchg
and
cmc
inc
pop
dec
push
xchg
xchg
cmps
add
push
(bad)
gs
out
mov
adc
inc
xor
mov
cmp
lods
mov
and
jo
inc
call
es
cmps
ret
xor
pusha
cmps
push
cli
mov
xor
repz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
jbe
jae
dec
nop
sub
gs
jle
sbb
aam
add
push
jne
add
jge
push
ja
in
mov
test
in
divps
fs
dec
mov
dec
cmc
cs
pushw
mov
push
jmp
add
add
jne
xchg
mov
cmp
ss
xchg
jo
inc
cdq
movs
and
cmps
mov
test
push
mov
fild
inc
loope
mov
inc
loopne
std
inc
aam
fcom
(bad)
xor
test
repnz
add
les
jecxz
mul
loopne
mov
lahf
jmp
shr
adc
and
adc
add
sbb
or
sbb
push
lds
and
add
xor
es
xor
sub
jae
push
les
movs
push
inc
dec
lds
(bad)
js
jge
push
add
push
(bad)
aad
aas
dec
div
inc
in
mov
test
gs
inc
cmova
bound
hlt
inc
mov
ja
jne
jo
mov
push
lock
test
push
xchg
xchg
jne
xchg
lock
xor
inc
mov
iret
xchg
xchg
mov
xor
rcl
in
fcom
test
inc
loope
rol
clc
push
loop
ret
xor
fdivr
(bad)
fs
xor
gs
(bad)
aad
(bad)
xor
adc
in
lahf
rcl
pop
shr
push
add
xchg
pop
push
xchg
das
rol
push
adc
xor
dec
lock
lds
and
adc
and
es
loopne
aad
xor
or
les
sub
outs
das
jbe
add
aam
add
push
jge
jno
outs
not
jne
pusha
mov
test
pop
in
nop
jns
add
push
mov
ja
push
pop
push
push
adc
mov
push
cwde
xchg
jne
xchg
mov
(bad)
dec
and
jo
inc
out
movs
cwde
and
scas
cmps
mov
stos
pusha
cmps
push
cli
mov
xor
jecxz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
dec
(bad)
inc
push
jae
inc
nop
sub
gs
arpl
inc
push
aam
add
push
jne
add
jge
inc
ja
in
mov
test
push
dec
divps
fs
dec
mov
dec
cmc
das
pop
pushw
mov
sahf
add
push
jmp
add
add
jne
xchg
in
adc
xchg
leave
inc
cdq
movs
and
cmps
mov
xchg
push
in
enter
stos
push
repz
loopne
loope
mov
inc
out
scas
std
inc
(bad)
mov
xor
test
(bad)
fs
add
ret
(bad)
fsub
out
je
and
adc
movs
lahf
jmp
shl
sub
and
adc
add
inc
adc
or
sbb
push
lds
and
add
xor
es
xor
and
dec
push
pop
les
movs
push
inc
outs
lds
popa
(bad)
js
jge
push
push
pop
aad
aas
inc
not
inc
in
mov
test
outs
in
cmovne
das
addr16
pop
mov
or
jo
movhps
push
mul
test
push
mov
inc
xchg
xchg
stos
adc
lods
mov
and
jo
inc
out
fisub
mov
xchg
xor
pusha
mov
xor
not
loopne
xlat
adc
inc
loop
hlt
inc
cdq
(bad)
lock
out
ret
xor
sar
fs
xor
gs
(bad)
aam
hlt
out
je
and
adc
scas
lahf
int3
xchg
push
pop
adc
add
cmp
sub
add
push
adc
sub
xor
add
and
adc
xor
es
loopne
aad
xor
push
(bad)
jae
arpl
push
nop
sub
lds
jne
push
inc
arpl
outs
add
push
jbe
add
outs
imul
jno
bound
push
in
nop
dec
addr16
push
mov
dec
cmc
cs
jb
adc
xchg
add
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
cwde
and
mov
pusha
cmps
push
mov
fistp
inc
clc
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
inc
(bad)
inc
push
jae
pop
nop
sub
gs
arpl
inc
push
aam
add
push
imul
ss
in
mov
test
outs
in
divps
pmuludq
xchg
cmp
cmc
das
pop
pushw
mov
xchg
add
push
sti
gs
out
mov
adc
inc
xor
in
adc
xchg
mov
and
jo
inc
out
movs
test
mov
mov
xchg
push
mov
fild
inc
loope
mov
inc
loopne
std
inc
(bad)
mov
xor
test
bnd
add
les
out
je
and
adc
movs
lahf
jmp
shl
dec
add
cmp
cmp
bound
adc
or
adc
and
inc
cmps
sbb
inc
mov
loopne
aad
xor
adc
push
push
push
les
sub
lds
(bad)
sbb
aam
add
push
xor
jo
jae
popa
ja
in
mov
test
dec
in
nop
and
hlt
jge
arpl
and
xchg
mov
pop
add
xchg
adc
inc
xchg
xchg
in
adc
xchg
mov
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
rcl
fild
mov
in
mov
loope
fadd
(bad)
loopne
loop
ret
xor
into
mov
(bad)
repnz
gs
(bad)
aam
mov
and
adc
scas
lahf
rcl
sbb
imul
and
cmp
sub
add
push
adc
xor
sub
or
cs
pop
cmps
xor
add
or
xor
or
les
sub
lds
jne
add
aam
add
push
outs
aad
aas
outs
div
ja
in
mov
test
sbb
inc
nop
pop
addr16
adc
add
das
pop
push
adc
test
mov
xchg
jne
xchg
adc
call
and
test
cmps
push
sti
mov
xor
int
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
inc
(bad)
push
push
jae
pop
nop
cmp
gs
arpl
push
inc
push
aam
add
push
imul
ss
in
mov
test
jb
inc
divps
pmuludq
xchg
cmp
cmc
ins
pop
pushw
lea
sti
gs
out
mov
adc
inc
xor
in
adc
mov
jo
inc
out
movs
cwde
and
mov
mov
xchg
push
mov
fild
inc
loopne
mov
inc
loopne
std
inc
(bad)
mov
xor
test
bnd
add
les
aad
cmc
and
adc
out
jmp
shl
adc
cmp
adc
and
adc
or
inc
lock
lds
and
pop
cmps
popa
daa
lfs
loopne
aad
xor
adc
push
push
push
les
movs
dec
inc
lds
(bad)
inc
pop
aam
add
push
push
aad
aas
jno
push
ja
in
mov
test
gs
in
andps
cmp
hlt
inc
mov
or
bound
push
push
mov
push
cmc
pop
add
xchg
jne
xchg
xchg
adc
div
aad
out
lods
and
mov
shl
mov
movs
fist
inc
mov
(bad)
loope
fadd
(bad)
loopne
loop
ret
xor
les
cld
xor
xchg
gs
(bad)
(bad)
out
je
and
adc
in
lahf
rcl
sbb
imul
and
cmp
sub
add
push
adc
xor
es
lds
pop
cmps
cmp
and
xor
push
(bad)
jae
les
cmp
outs
das
je
push
inc
and
imul
jae
inc
ja
in
mov
test
sbb
inc
cmovb
jno
pop
hlt
adc
pusha
xchg
cmp
cmc
outs
pop
imul
mov
movs
gs
test
push
fwait
xchg
jne
xchg
mov
xor
inc
out
movs
mov
xchg
cmps
mov
push
sti
mov
xor
repz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
push
(bad)
or
les
movs
inc
inc
push
lds
arpl
push
inc
push
aam
add
push
imul
ins
ja
in
mov
test
divps
and
hlt
dec
mov
dec
cmc
ins
pop
pushw
(bad)
xchg
xchg
add
push
sti
gs
out
mov
adc
inc
xor
in
adc
mov
jo
inc
out
movs
pushf
and
mov
mov
and
mov
fild
inc
loopne
mov
inc
loopne
std
inc
(bad)
mov
xor
test
bnd
add
les
shl
loopne
mov
lahf
jmp
shl
cmp
cmp
add
xchg
pop
rol
sbb
push
mov
aaa
add
and
adc
popa
daa
and
aad
xor
pop
(bad)
arpl
les
xor
lds
(bad)
push
inc
js
push
add
push
xor
inc
aas
jo
push
ja
in
mov
test
outs
in
punpckldq
pop
addr16
xchg
popa
jne
cmc
addr16
push
push
(bad)
xchg
mov
gs
add
xchg
xchg
adc
inc
xchg
xchg
mov
div
aam
stos
movs
mov
es
cmps
lds
pusha
mov
xor
not
fild
mov
mov
into
inc
loope
fadd
(bad)
loopne
aad
ret
xor
int
lock
idiv
xor
add
iret
(bad)
(bad)
out
je
and
adc
out
lahf
rcl
adc
add
xor
es
popa
xchg
das
rol
push
adc
xor
and
pop
lds
movs
add
cmps
pop
daa
cs
loopne
aad
xor
push
(bad)
jae
les
cmp
outs
das
je
add
aam
add
push
(bad)
aad
aas
jno
ins
ja
in
mov
test
popa
in
cmova
js
push
hlt
jb
pusha
xchg
cmp
cmc
daa
pop
imul
mov
test
mov
inc
xor
xchg
adc
div
mov
and
mov
pusha
cmps
push
sti
mov
xor
jecxz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
push
(bad)
or
les
nop
cmp
gs
arpl
push
inc
push
aam
add
push
imul
push
ja
in
mov
test
divps
and
hlt
dec
mov
dec
cmc
ins
pop
pushw
(bad)
xchg
xchg
add
push
sti
lods
test
push
nop
xchg
jne
xchg
in
adc
mov
xchg
jo
inc
mov
pushf
and
mov
mov
and
mov
fild
inc
loopne
mov
inc
loopne
std
inc
(bad)
mov
xor
xchg
repnz
call
(bad)
frstor
out
je
and
adc
in
jmp
shl
dec
add
cmp
pop
pop
sbb
adc
outs
mov
aaa
add
and
and
xor
es
xor
pop
(bad)
dec
push
push
les
xor
jno
dec
lds
(bad)
jns
and
mov
push
pop
aad
aas
jo
popa
ja
in
mov
test
in
packuswb
arpl
hlt
jno
arpl
gs
push
push
lea
cmc
pop
add
xchg
jne
xchg
mov
sahf
push
and
jo
inc
stos
movs
mov
es
cmps
lds
pusha
mov
xor
not
fild
mov
in
into
inc
loope
fadd
(bad)
cld
push
(bad)
add
xor
ret
mov
cld
xor
fsub
(bad)
(bad)
out
je
and
adc
loopne
rcl
pop
sar
sbb
xor
add
jns
and
adc
xor
cmp
pop
lds
and
pop
cmps
xor
add
xor
push
(bad)
push
push
pop
les
nop
cmp
outs
das
jne
add
aam
add
push
push
aad
aas
pop
imul
jb
push
mov
test
jno
inc
cmova
and
mov
push
cmc
and
xchg
cmps
add
push
fwait
gs
test
mov
out
mov
jne
xchg
xchg
adc
div
test
movs
shl
(bad)
cmps
nop
xor
pusha
cmps
push
sti
mov
xor
xchg
xlat
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
push
(bad)
jbe
jo
arpl
cmp
gs
jl
push
inc
push
aam
add
push
ins
aad
aas
jle
push
ja
in
mov
test
divps
and
hlt
dec
mov
inc
cmc
outs
pop
imul
xchg
sahf
add
push
sti
lods
test
push
cmps
xchg
jne
xchg
lock
xchg
leave
inc
mov
(bad)
mov
pusha
mov
xor
int
loopne
out
mov
inc
out
scas
std
inc
add
(bad)
xor
xchg
(bad)
shl
xchg
add
ret
(bad)
frstor
out
je
and
adc
jecxz
jmp
shl
add
and
push
rol
push
adc
adc
jbe
add
and
and
cmp
es
xor
pop
(bad)
dec
push
push
les
xor
arpl
inc
mov
aam
add
push
push
pop
aas
ja
inc
ja
in
mov
test
gs
inc
punpckldq
arpl
hlt
jo
arpl
jo
push
push
mov
push
mul
test
push
xchg
xchg
xchg
stos
adc
xchg
mov
and
jo
inc
xchg
movs
mov
es
shl
mov
push
rcl
inc
cmps
adc
inc
loop
rol
mov
xor
ret
jbe
test
add
iret
(bad)
cld
data16
out
je
and
adc
movs
lahf
rcl
adc
jnp
or
xor
xchg
and
adc
xor
cmp
pop
lds
and
push
cmps
and
or
or
and
jl
dec
mov
pop
pop
(bad)
arpl
les
xor
outs
das
data16
jb
jle
inc
mov
push
sub
sbb
dec
not
jle
push
mov
test
jno
inc
cmova
pop
addr16
jno
pusha
xchg
cmp
cmc
addr16
push
add
push
cwde
gs
out
mov
adc
inc
xor
xchg
adc
div
rol
movs
mov
es
mov
push
mov
fbstp
inc
(bad)
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
sbb
jbe
jo
pusha
nop
cmp
gs
(bad)
(bad)
sbb
aam
add
push
ins
aad
aas
jle
inc
ja
in
mov
test
jp
inc
divps
and
hlt
inc
mov
inc
cmc
outs
pop
imul
xchg
xchg
add
push
sti
gs
test
push
cmps
xchg
jne
xchg
mov
ret
call
and
jo
inc
cwde
movs
stos
and
mov
pusha
mov
xor
repz
loopne
out
mov
inc
loopne
std
inc
add
(bad)
xor
xchg
repnz
fwait
add
les
fnsave
loopne
mov
lahf
jmp
shl
add
and
push
rol
sbb
or
aaa
lock
lds
or
pusha
daa
xor
aad
xor
adc
arpl
les
xor
fs
inc
(bad)
jns
je
push
add
push
dec
aad
aas
jo
jno
jg
inc
mov
test
gs
inc
punpcklbw
jae
push
hlt
jae
arpl
jo
push
push
mov
push
mul
test
push
xchg
xchg
xchg
mov
lahf
push
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
rcl
fild
mov
mov
ret
scas
rol
mov
xor
fdivr
cld
lea
xchg
add
iret
(bad)
cld
data16
and
adc
cmps
lahf
rcl
adc
jp
xor
xor
xchg
push
rol
push
adc
xor
cmp
and
and
xor
and
ds
sub
jae
les
inc
movs
push
inc
inc
lds
popa
(bad)
pop
inc
data16
add
push
ins
aad
aas
dec
imul
jb
push
mov
test
dec
in
cmova
dec
addr16
hlt
push
jne
cmc
fs
push
add
push
mov
add
fwait
xchg
jne
xchg
sahf
adc
xchg
mov
and
jo
inc
mov
iret
xchg
xchg
cmps
mov
push
loopne
mov
push
repz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
inc
push
jo
jnp
cmp
gs
data16
pop
inc
inc
aam
add
push
ins
aad
aas
jle
ss
in
mov
test
jle
inc
minps
pop
addr16
inc
mov
inc
cmc
outs
pop
imul
xchg
xchg
add
push
in
gs
out
clc
push
mov
inc
xor
mov
mov
jo
inc
xchg
movs
test
mov
pusha
mov
xor
repz
jecxz
jecxz
call
inc
loopne
mov
push
aad
(bad)
xor
repz
cmc
fidiv
retf
in
les
aam
out
loopne
mov
lahf
fcom
aaa
shl
add
and
push
rol
sbb
or
xor
push
lds
and
and
ss
aad
xor
adc
les
xor
fs
inc
(bad)
cmova
add
push
push
aad
aas
ja
jno
jg
inc
mov
test
jb
inc
packuswb
arpl
hlt
jb
arpl
jg
push
push
(bad)
xchg
mov
gs
sahf
add
mov
inc
xchg
xchg
in
adc
lods
mov
and
jo
inc
stos
movs
mov
es
mov
push
mov
test
mov
xchg
push
out
fild
mov
iret
(bad)
loope
rol
in
push
xlat
add
xor
(bad)
mov
cld
fs
xor
iret
(bad)
jecxz
mul
(bad)
out
cmc
cmc
retf
lahf
rcl
sbb
jp
sbb
xchg
pop
push
xchg
sbb
adc
aaa
mov
aaa
add
pop
lock
addr16
add
mov
loopne
aad
xor
sub
dec
push
les
movs
jns
push
lds
popa
(bad)
bound
aam
add
push
push
imul
jb
outs
mov
test
dec
in
divps
jnp
pop
hlt
push
jne
cmc
bound
push
add
push
mov
add
xchg
xchg
jne
xchg
mov
xor
inc
jmp
pushf
and
(bad)
cmps
xchg
xor
pusha
cmps
push
in
mov
int
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
les
cmp
gs
xor
pop
inc
and
mov
push
ins
aad
aas
jle
ss
in
mov
test
inc
in
minps
pop
addr16
inc
mov
push
push
mov
xchg
add
push
test
call
push
mov
inc
xor
mov
ss
test
jo
inc
jmp
iret
fsub
loop
shl
mov
xor
repz
jecxz
int
in
into
(bad)
loopne
mov
push
jecxz
(bad)
xor
cmp
fs
xor
les
fdiv
loopne
mov
int
rcr
and
jnp
ins
in
add
and
sub
add
sbb
or
pop
lock
lds
and
pop
cmps
sbb
adc
xor
push
(bad)
jae
push
les
xor
fs
inc
(bad)
push
inc
inc
aam
add
push
xor
pop
aas
ja
popa
ja
in
mov
test
gs
in
punpcklbw
cmp
mov
inc
cmc
jo
push
push
(bad)
xchg
mov
pop
xchg
mov
inc
xchg
xchg
in
adc
lods
mov
and
jo
inc
stos
movs
(bad)
and
cdq
cmps
mov
push
mov
mov
out
fild
mov
in
fiadd
scas
ret
(bad)
movs
push
rol
ret
xor
lds
cld
fs
xor
gs
(bad)
loop
out
iret
je
and
adc
jecxz
(bad)
xchg
and
adc
in
add
arpl
and
adc
add
pop
aaa
pop
movs
and
and
pop
cmps
xor
aaa
mov
loopne
aad
xor
and
jae
les
movs
push
inc
push
(bad)
jb
das
aam
add
push
jo
inc
aas
dec
div
ja
in
mov
test
inc
in
divps
push
addr16
hlt
outs
mov
jle
jg
push
add
push
cmps
gs
mov
push
add
jne
xchg
mov
div
fiadd
movs
mov
movs
cmps
xor
shl
int
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
push
(bad)
push
push
jo
jp
cmp
gs
cmp
add
aam
add
push
inc
aad
aas
pop
not
inc
in
mov
test
pop
in
minps
pop
addr16
inc
mov
push
cmc
pop
pop
add
mov
push
stos
gs
push
fld
xor
mov
ss
and
mov
movs
fbld
lahf
cmps
mov
and
cli
mov
xor
xchg
xlat
jecxz
ret
and
out
scas
test
out
push
in
add
xor
int
icebp
jbe
div
fs
xor
gs
(bad)
(bad)
mov
je
and
adc
out
lahf
rcl
add
jp
dec
add
jle
es
and
adc
add
pop
adc
and
adc
add
and
pop
cmps
or
dec
mov
loopne
aad
xor
aas
(bad)
jae
push
les
xor
arpl
inc
(bad)
sbb
add
push
jbe
pop
aas
ja
push
ja
in
mov
test
jb
inc
punpcklbw
arpl
hlt
jae
arpl
jle
push
push
(bad)
xchg
mov
pop
xchg
xchg
xchg
xchg
in
adc
lods
mov
and
jo
inc
out
mov
or
mov
pusha
mov
xor
not
in
sti
adc
inc
loop
mov
add
xor
lds
ret
xor
gs
(bad)
cld
out
cmc
je
and
adc
fstp
adc
add
and
xchg
outs
rol
pop
adc
add
pop
aaa
add
and
pop
cmps
pop
daa
das
mov
loopne
aad
xor
and
arpl
les
movs
imul
(bad)
pop
inc
pop
aam
add
push
jl
push
aas
dec
div
ja
in
mov
test
inc
in
divps
inc
addr16
hlt
outs
mov
inc
cmc
pop
pop
pop
push
adc
sti
add
ret
adc
inc
xor
mov
lods
mov
and
jo
inc
xchg
movs
mov
es
cmps
mov
xchg
pusha
cmps
push
mov
(bad)
push
repz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
pop
(bad)
push
push
jo
jge
cmp
gs
ds
pop
inc
inc
aam
add
push
pop
aad
aas
sub
ss
in
mov
test
pop
in
cmovb
je
inc
hlt
ins
mov
arpl
inc
pop
dec
push
mov
push
movs
mov
mov
adc
inc
xor
mov
ss
test
jo
inc
jmp
iret
frstor
stc
cmps
xor
xchg
xor
int
jecxz
rcl
and
loopne
cmc
inc
(bad)
(bad)
mov
xor
into
mov
cmc
fs
xor
les
out
je
and
adc
cmps
lahf
rcl
adc
add
cmp
and
add
add
xor
and
dec
lds
dec
push
cmps
and
xor
aad
xor
push
(bad)
jae
push
les
aaa
movs
dec
inc
lds
(bad)
push
inc
inc
aam
add
push
xor
pop
aas
ja
popa
ja
in
mov
test
gs
inc
pcmpgtw
pop
addr16
hlt
jae
arpl
jge
push
push
(bad)
xchg
mov
gs
add
mov
inc
xchg
xchg
lock
lods
mov
and
jo
inc
mov
iret
cmps
es
cmps
xchg
xor
pusha
mov
xor
rcl
fild
mov
mov
fiadd
scas
ret
mov
xor
lds
cld
fs
xor
gs
(bad)
loop
fucom
iret
je
and
adc
movs
lahf
rcl
sbb
imul
and
jge
sbb
xor
adc
xor
pop
lock
adc
dec
push
cmps
sbb
adc
xor
sub
arpl
les
popa
movs
jns
pop
lds
(bad)
(bad)
bound
aam
add
push
js
inc
aas
dec
test
in
mov
test
gs
cmove
jl
pmuludq
jne
cmc
inc
pop
dec
push
cmps
xchg
movs
add
push
stos
mov
cld
push
mov
inc
xor
in
adc
xchg
mov
and
jo
inc
mov
iret
fisub
mov
mov
push
in
call
xlat
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
or
les
cmp
gs
aas
(bad)
jg
push
aam
add
push
(bad)
aad
aas
push
ins
ja
in
mov
test
dec
in
cmovne
cs
ja
xchg
ss
cmc
push
pop
dec
push
lea
stos
mov
std
push
cdq
xchg
jne
xchg
xchg
adc
mov
jo
inc
scas
movs
stos
and
mov
pusha
mov
xor
repz
jecxz
fcom
test
inc
loopne
cmc
inc
(bad)
(bad)
mov
xor
(bad)
mov
cmc
div
fwait
add
les
fdiv
loopne
cmc
cmc
nop
jne
lahf
rcl
data16
and
outs
sbb
pop
pop
cmp
adc
xor
inc
lock
lds
dec
cmp
sbb
loopne
aad
xor
pop
(bad)
dec
push
push
les
movs
jno
push
lds
(bad)
js
jl
push
add
push
dec
aad
aas
jbe
inc
ja
in
mov
test
jb
inc
pcmpgtw
jb
inc
hlt
jl
arpl
jae
push
push
lea
lock
test
push
xchg
xchg
xchg
pushf
adc
div
rol
movs
(bad)
and
out
cmps
test
pusha
mov
xor
rcl
fild
mov
iret
(bad)
loope
mov
add
xor
fdivr
cld
xchg
xchg
add
iret
(bad)
loop
mul
test
out
cmc
cmc
ret
lahf
xlat
xchg
and
adc
in
add
xor
xchg
and
add
push
adc
fs
aaa
pop
movs
xor
xor
es
add
ss
aad
xor
and
push
push
les
popa
movs
push
inc
pop
lds
popa
(bad)
jb
data16
add
push
pop
aad
aas
push
not
jne
dec
mov
test
jno
inc
nop
pop
addr16
hlt
dec
mov
jg
push
pop
dec
push
adc
sti
add
ret
adc
inc
xor
in
adc
xchg
mov
and
jo
inc
scas
movs
test
movs
cmps
mov
push
div
rcl
xlat
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
jbe
jo
dec
nop
cmp
gs
aas
(bad)
jg
push
aam
add
push
jp
addr16
push
ins
ja
in
mov
test
adc
inc
unpcklps
jne
sbb
xchg
ss
cmc
pop
pop
dec
push
(bad)
xchg
xchg
add
push
movs
gs
cli
add
cdq
xchg
jne
xchg
xchg
adc
mov
test
movs
mov
es
cmps
nop
xor
pusha
mov
xor
jecxz
jecxz
rcl
mov
inc
loopne
ret
(bad)
out
fiadd
(bad)
xor
(bad)
mov
hlt
xor
shl
(bad)
loop
repz
je
and
adc
clc
lahf
rcl
data16
and
outs
add
push
rol
add
xor
inc
lock
lds
and
and
cmp
es
xor
pop
(bad)
push
push
push
les
aaa
movs
push
inc
pop
lds
(bad)
sbb
add
push
jle
push
aas
jbe
inc
ja
in
mov
test
dec
in
pcmpgtw
das
addr16
hlt
ins
mov
outs
cmc
jb
pop
push
mov
mov
gs
test
mov
inc
xchg
xchg
mov
xchg
push
and
jo
inc
lods
movs
and
cmps
nop
xor
pusha
mov
xor
rcl
fild
mov
iret
(bad)
loope
rol
lock
rol
ret
xor
fnstcw
cld
les
xchg
add
iret
(bad)
loop
out
shl
out
mov
in
jne
lahf
(bad)
xchg
xor
adc
in
add
and
push
pop
pop
xchg
xor
add
pop
adc
or
and
lds
movs
add
cmps
cs
aas
mov
loopne
aad
xor
sub
jae
les
nop
movs
pop
inc
push
(bad)
push
inc
and
push
push
push
aad
aas
jae
push
ja
in
mov
test
imul
jo
pop
hlt
dec
mov
dec
cmc
and
dec
push
xchg
xchg
movs
add
push
test
mov
cld
push
ret
adc
inc
xor
lock
xchg
mov
and
jo
inc
scas
movs
test
movs
cmps
movs
xor
pusha
cmps
push
div
xlat
push
int
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
jbe
jo
jbe
cmp
gs
aas
(bad)
outs
inc
pop
aam
add
push
push
jge
push
ins
ja
in
mov
test
jp
inc
nop
pop
addr16
push
mov
arpl
push
pop
dec
push
(bad)
xchg
xchg
add
push
in
gs
inc
add
jne
xchg
call
ss
test
jo
inc
jmp
iret
mov
xor
pusha
mov
xor
jecxz
loop
mov
korw
scas
hlt
inc
cli
(bad)
aad
out
(bad)
xor
fidivr
hlt
fs
xchg
add
les
fdiv
loopne
cmc
cmc
lock
lahf
rcl
arpl
jbe
dec
add
add
push
rol
add
xor
inc
lock
lds
dec
and
xor
xor
adc
jae
push
les
movs
pop
inc
pop
lds
mov
aam
add
push
pop
aad
aas
ja
jno
jg
push
mov
test
inc
in
packssdw
jb
sbb
outs
mov
dec
cmc
jbe
pop
push
(bad)
xchg
mov
gs
mov
push
ret
xchg
jne
xchg
mov
xor
inc
mov
iret
cmps
es
cmps
pushf
xor
pusha
mov
xor
rcl
inc
in
mov
cmc
(bad)
loope
rol
ret
add
xor
in
stos
jbe
test
add
iret
pop
je
and
adc
loopne
sti
xchg
push
pop
adc
in
add
js
adc
rol
inc
adc
fs
aaa
add
sbb
and
pop
cmps
(bad)
xor
xor
or
les
movs
or
lds
aas
(bad)
push
inc
pop
aam
add
push
sub
test
in
mov
test
popa
in
andnps
inc
addr16
xchg
aaa
jne
cmc
and
dec
push
xchg
xchg
movs
add
push
test
mov
std
push
mov
inc
xor
lock
xchg
mov
and
jo
inc
jmp
iret
fisub
out
cmps
movs
xor
pusha
cmps
push
div
xchg
push
repz
ret
adc
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
inc
push
jo
inc
nop
cmp
gs
aas
(bad)
outs
inc
pop
aam
add
push
push
jl
jae
push
ja
in
mov
test
jle
dec
nop
gs
push
mov
arpl
push
pop
dec
push
mov
push
in
gs
inc
fld
xor
nop
adc
mov
jo
inc
jmp
iret
mov
xor
pusha
mov
xor
jecxz
jecxz
rcl
mov
inc
out
scas
cmc
inc
aam
mov
xor
ret
mov
lock
xchg
add
ret
(bad)
jecxz
repz
je
and
adc
out
rcl
arpl
jbe
syscall
push
test
outs
add
pop
rol
pop
adc
xor
inc
lock
lds
dec
and
ss
aad
xor
adc
jae
push
les
movs
pop
inc
push
lds
inc
(bad)
push
inc
jo
push
add
push
pop
aad
aas
ja
jno
inc
in
mov
test
gs
in
pcmpgtd
bound
hlt
outs
mov
push
cmc
dec
pop
pop
push
(bad)
xchg
mov
cmps
test
mov
inc
xchg
xchg
mov
ss
mov
and
jo
inc
lods
movs
and
cmps
cwde
xor
pusha
mov
xor
rcl
inc
in
mov
cmc
(bad)
loop
mov
add
xor
(bad)
mov
ret
xor
gs
(bad)
aam
in
stc
je
and
adc
out
lahf
rcl
pop
shr
or
xor
adc
jns
push
rol
push
adc
xor
and
pop
lds
dec
pop
cmps
xor
add
xor
push
(bad)
arpl
les
movs
je
push
lds
jbe
jp
addr16
add
push
sub
not
jno
jae
sbb
inc
andnps
cmp
hlt
inc
mov
adc
and
dec
push
cmps
xchg
mov
gs
test
add
mov
inc
xor
lock
xor
inc
jmp
iret
fisub
out
cmps
movs
xor
pusha
cmps
push
mov
fistp
inc
rcl
out
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
inc
push
jo
inc
nop
cmp
gs
aas
(bad)
outs
inc
pop
aam
add
push
push
jl
jae
push
ja
in
mov
test
gs
in
nop
jne
jge
push
mov
arpl
push
pop
dec
push
mov
push
in
gs
inc
add
jne
xchg
pushf
adc
mov
mov
inc
jmp
iret
mov
xor
pusha
mov
xor
repz
jecxz
les
lods
and
loopne
cmc
inc
aam
mov
xor
les
hlt
fs
xor
les
bnd
and
adc
in
rcl
arpl
jbe
syscall
push
test
outs
add
pop
rol
add
xor
inc
lock
lds
dec
and
ss
aad
xor
adc
jae
push
les
movs
dec
inc
push
lds
(bad)
jns
jo
push
add
push
pop
aad
aas
jbe
inc
ja
in
mov
test
inc
in
packssdw
pop
addr16
outs
mov
dec
cmc
jbe
pop
push
(bad)
xchg
mov
gs
test
push
lods
xchg
adc
inc
xchg
xchg
mov
ss
mov
and
jo
inc
lods
movs
and
cmps
cwde
xor
pusha
mov
xor
rcl
inc
in
mov
cmc
(bad)
loope
mov
add
xor
lds
cld
fs
xor
gs
(bad)
jecxz
fucom
(bad)
out
cmc
cmc
(bad)
jne
lahf
rcl
sbb
jp
or
add
and
add
push
adc
xor
xor
dec
lds
dec
push
cmps
jns
inc
mov
loopne
aad
xor
push
(bad)
dec
push
les
sub
outs
das
jnp
jp
push
aam
add
push
outs
aad
aas
ins
test
in
mov
test
jge
inc
andnps
cmp
hlt
inc
mov
or
push
cmps
xchg
movs
add
push
test
leave
test
add
mov
inc
xor
cwde
adc
xor
inc
jmp
iret
fisub
out
cmps
movs
xor
pusha
cmps
push
div
xchg
push
xchg
xlat
lds
out
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
jbe
jo
inc
nop
cmp
gs
aas
(bad)
outs
inc
pop
aam
add
push
push
jl
jae
push
ja
in
mov
test
jle
inc
(bad)
out
addr16
hlt
push
mov
jae
push
pop
dec
push
(bad)
xchg
xchg
add
push
in
gs
push
add
jne
xchg
pushf
adc
mov
mov
inc
jmp
iret
mov
xor
pusha
mov
xor
xchg
xlat
jecxz
les
lods
and
loopne
cmc
inc
aam
mov
xor
ret
mov
hlt
xor
call
out
je
and
adc
in
rcl
arpl
jbe
syscall
push
test
outs
add
pop
rol
add
xor
inc
lock
lds
dec
and
ss
aad
xor
adc
jae
push
les
movs
dec
inc
push
lds
(bad)
js
jl
push
add
push
pop
aad
aas
jbe
inc
ja
in
mov
test
inc
in
packssdw
jb
sbb
outs
mov
dec
cmc
jbe
pop
push
(bad)
xchg
mov
gs
lods
add
xchg
xchg
xchg
mov
xchg
push
and
jo
inc
out
and
cmps
cwde
xor
pusha
mov
xor
rcl
inc
in
mov
cmc
(bad)
loope
mov
add
xor
fstp
cld
xchg
xchg
add
iret
(bad)
loop
out
test
out
cmc
cmc
clc
jne
lahf
xlat
xchg
xor
adc
ins
shl
or
add
daa
rol
push
adc
xor
xor
and
sbb
ds
aad
xor
pop
(bad)
arpl
les
sub
lds
jnp
jp
push
aam
add
push
jb
inc
aas
ins
div
ja
in
mov
test
jge
inc
andnps
cmp
hlt
inc
mov
push
cmc
and
dec
push
cmps
xchg
movs
add
push
test
leave
test
add
mov
inc
xor
cwde
adc
xor
inc
jmp
iret
fisub
out
cmps
movs
xor
pusha
cmps
push
div
xchg
push
repz
lds
out
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
jbe
jo
inc
nop
cmp
gs
aas
(bad)
outs
inc
pop
aam
add
push
push
jl
jae
push
ja
in
mov
test
jp
inc
nop
gs
hlt
pop
mov
outs
cmc
inc
pop
dec
push
mov
xchg
add
push
in
gs
inc
add
jne
xchg
pushf
adc
mov
mov
inc
jmp
iret
mov
xor
pusha
mov
xor
xchg
xlat
jecxz
rcl
mov
inc
loopne
hlt
inc
cli
(bad)
aad
loopne
(bad)
xor
iret
mov
hlt
fs
xor
les
aam
shl
adc
out
rcl
cmp
jne
adc
add
adc
add
add
xor
inc
lock
lds
dec
and
ss
aad
xor
adc
jae
push
les
movs
dec
inc
push
lds
(bad)
js
jl
push
add
push
pop
aad
aas
jbe
inc
ja
in
mov
test
inc
in
packssdw
pop
addr16
outs
mov
dec
cmc
jbe
pop
push
(bad)
xchg
mov
gs
test
xchg
xchg
xchg
mov
ss
mov
and
jo
inc
lods
movs
and
cmps
cwde
xor
pusha
mov
xor
rcl
inc
in
mov
cmc
(bad)
loope
mov
add
xor
fidivr
cld
test
xchg
add
iret
(bad)
loope
fucom
xor
adc
loop
xlat
xchg
xor
adc
jg
jne
or
add
daa
rol
push
adc
xor
xor
and
sbb
ds
aad
xor
adc
arpl
les
nop
xor
lds
inc
(bad)
push
inc
jae
pusha
add
push
outs
aad
aas
jno
inc
ja
in
mov
test
jge
inc
andnps
cmp
hlt
inc
mov
adc
push
pop
dec
push
mov
movs
add
push
test
leave
test
add
mov
inc
xor
cwde
adc
xor
inc
jmp
iret
fisub
out
cmps
movs
xor
pusha
cmps
push
div
xchg
push
repz
lds
out
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
jbe
jo
inc
nop
cmp
gs
aas
(bad)
jg
push
aam
add
push
push
jl
jae
push
ja
in
mov
test
jle
dec
nop
pop
addr16
push
mov
arpl
push
pop
dec
push
mov
push
in
gs
inc
add
jne
xchg
pushf
adc
mov
test
jo
inc
jmp
iret
mov
xor
pusha
mov
xor
int
loop
in
adc
out
scas
hlt
inc
aam
aad
loopne
(bad)
xor
into
mov
lock
call
out
je
and
adc
loop
rcl
xor
jb
es
add
xchg
sbb
add
pop
adc
xor
inc
lock
lds
dec
and
ss
aad
xor
adc
jae
push
les
movs
dec
inc
push
lds
inc
(bad)
jns
jo
push
add
push
pop
aad
aas
ja
jno
inc
in
mov
test
gs
in
pcmpgtd
das
addr16
outs
mov
push
cmc
dec
pop
pop
push
(bad)
xchg
mov
gs
test
lods
xchg
adc
inc
xchg
xchg
mov
ss
mov
and
jo
inc
lods
movs
and
cmps
cwde
xor
pusha
mov
xor
rcl
inc
in
mov
cmc
(bad)
loop
mov
add
xor
fidivr
ret
xor
gs
(bad)
loop
mov
and
adc
loop
xlat
xchg
or
shl
or
add
daa
rol
push
adc
xor
cmp
dec
lds
sbb
push
daa
cmp
xor
pop
(bad)
dec
push
(bad)
les
nop
xor
or
lds
inc
(bad)
jge
jg
popa
add
push
outs
aad
aas
ins
div
ja
in
mov
test
jge
inc
cvtdq2ps
inc
addr16
hlt
dec
mov
outs
cmc
pop
pop
dec
push
xchg
xchg
mov
gs
sti
add
mov
inc
xor
cwde
adc
xor
inc
call
iret
fisub
movs
cmps
mov
push
mov
fist
inc
mov
(bad)
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
jbe
jo
inc
nop
cmp
gs
cmp
jg
ins
aam
add
push
jbe
data16
push
inc
ja
in
mov
test
dec
in
nop
pop
addr16
push
mov
arpl
push
pop
dec
push
mov
push
in
gs
inc
fld
xor
pushf
adc
mov
test
jo
inc
jmp
iret
mov
xor
pusha
mov
xor
xchg
xlat
loop
cmps
adc
inc
loopne
fadd
(bad)
not
(bad)
xor
test
hlt
xor
add
les
fdiv
loopne
cmc
cmc
(bad)
jne
lahf
rcl
and
ja
dec
add
or
push
rol
add
xor
push
lock
lds
and
and
xor
xor
adc
jae
push
les
movs
pop
inc
pop
lds
(bad)
push
inc
je
push
add
push
jp
push
aas
jbe
inc
ja
in
mov
test
pop
in
pcmpgtd
bound
hlt
outs
mov
pop
cmc
dec
pop
pop
push
mov
push
icebp
gs
mov
push
xchg
xchg
xchg
mov
xor
inc
mov
iret
cmps
es
cmps
pushf
xor
pusha
mov
xor
rcl
inc
in
mov
cmc
(bad)
loope
mov
add
xor
fstp
cld
test
xchg
add
iret
(bad)
loop
mov
and
adc
loope
xlat
xchg
xor
adc
jg
jne
or
add
daa
rol
push
adc
xor
cmp
dec
lds
sbb
jns
cmp
xor
pop
(bad)
push
push
pop
les
nop
xor
or
lds
inc
(bad)
jge
jg
popa
add
push
outs
aad
aas
ins
div
ja
in
mov
test
jge
inc
nop
and
hlt
push
mov
outs
cmc
pop
pop
dec
push
xchg
xchg
movs
add
push
test
sahf
test
cdq
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
jmp
iret
fisub
out
cmps
movs
xor
pusha
cmps
push
div
xchg
push
repz
lds
out
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
jbe
jo
inc
nop
cmp
gs
cmp
jg
cmp
jno
inc
mov
push
jp
pusha
aas
push
inc
ja
in
mov
test
jb
inc
nop
cs
hlt
pop
mov
arpl
push
pop
dec
push
(bad)
xchg
xchg
add
push
in
gs
inc
fld
xor
cwde
adc
mov
test
jo
inc
jmp
iret
mov
xor
pusha
mov
xor
xchg
xlat
loop
cmps
adc
inc
loopne
rol
mov
xor
(bad)
mov
hlt
xor
add
les
int3
je
and
adc
int
xlat
xchg
adc
pop
test
shl
adc
or
or
add
add
xor
adc
add
and
sub
xor
es
xor
adc
les
movs
dec
inc
push
lds
(bad)
push
inc
jo
push
add
push
pop
aad
aas
ja
jno
jg
pusha
mov
test
gs
in
pcmpgtd
pop
addr16
hlt
ins
mov
arpl
jb
pop
push
mov
mov
gs
test
lods
xchg
jne
xchg
mov
xor
inc
mov
iret
cmps
es
nop
xor
pusha
mov
xor
rcl
inc
sti
adc
inc
loope
mov
add
xor
fstp
cld
xchg
xchg
add
iret
(bad)
loop
out
test
out
cmc
cmc
clc
jne
lahf
xlat
xchg
xor
adc
ins
shl
or
add
and
add
push
adc
xor
xor
dec
lds
add
add
cmps
jns
inc
mov
loopne
aad
xor
push
(bad)
dec
push
les
cmp
outs
das
pop
mov
add
push
dec
aad
aas
ins
imul
jne
jae
sbb
inc
nop
and
hlt
push
mov
arpl
pop
pop
dec
push
xchg
xchg
movs
add
push
test
mov
sti
add
mov
inc
xor
lock
xchg
mov
and
jo
inc
scas
movs
test
out
cmps
movs
xor
pusha
cmps
push
div
xchg
push
int
lds
out
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
jbe
jo
inc
nop
cmp
gs
cmp
add
aam
add
push
jp
pusha
aas
push
inc
ja
in
mov
test
dec
in
(bad)
out
addr16
hlt
pop
mov
imul
pop
dec
push
(bad)
xchg
xchg
add
push
movs
gs
cli
add
cmps
xchg
jne
xchg
cwde
adc
mov
jo
inc
xchg
movs
mov
es
cmps
nop
xor
pusha
mov
xor
xchg
xlat
loop
cmps
adc
loopne
rol
mov
xor
fidivr
hlt
fdiv
xchg
add
les
fdiv
loopne
div
shl
lahf
(bad)
xchg
daa
pop
pop
test
shl
dec
add
or
or
add
add
xor
add
add
and
sub
xor
es
xor
push
(bad)
push
push
push
les
js
jb
xor
fs
dec
(bad)
push
inc
je
dec
add
push
push
aad
aas
ja
jno
jg
gs
test
sbb
inc
packssdw
pop
addr16
outs
mov
imul
pop
push
push
lea
lock
test
push
ret
xchg
jne
xchg
nop
adc
div
(bad)
inc
out
(bad)
and
mov
pusha
mov
xor
not
fild
mov
iret
(bad)
loope
mov
add
xor
fdivr
cld
xchg
xchg
add
iret
(bad)
loop
out
test
out
cmc
cmc
nop
jne
lahf
xlat
xchg
xor
adc
ins
shl
sbb
add
and
add
push
adc
xor
xor
dec
lds
dec
push
cmps
and
inc
mov
loopne
aad
xor
push
(bad)
push
push
les
sub
outs
das
cmp
aam
add
push
dec
aad
aas
jae
push
ja
in
mov
test
pop
out
addr16
hlt
push
mov
jae
push
pop
dec
push
mov
movs
add
push
test
mov
cld
push
ret
adc
inc
xor
in
adc
xchg
mov
and
jo
inc
scas
movs
test
out
cmps
movs
xor
pusha
cmps
push
div
xchg
push
int
lds
out
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
jbe
jo
inc
nop
cmp
gs
cmp
outs
inc
pop
aam
add
push
jp
pusha
aas
push
inc
ja
in
mov
test
dec
in
nop
jne
pop
hlt
pop
mov
or
push
pop
dec
push
mov
xchg
add
push
movs
gs
cli
add
nop
xchg
xlat
xchg
xchg
adc
mov
jo
inc
xchg
movs
mov
mov
pusha
mov
xor
jecxz
loop
jecxz
mov
iret
lds
inc
add
push
in
(bad)
xor
fidivr
hlt
shl
xchg
add
les
shl
loopne
div
into
jne
lahf
xlat
xchg
adc
pop
test
shl
ss
or
or
add
add
xor
add
add
and
cmps
aaa
daa
adc
xor
push
(bad)
push
push
push
les
movs
dec
inc
dec
lds
(bad)
js
pop
aam
add
push
dec
aad
aas
jbe
inc
ja
in
mov
test
inc
in
pcmpgtw
pop
outs
hlt
jae
arpl
je
push
push
lea
lock
sahf
add
xchg
xchg
jne
xchg
cwde
adc
lods
mov
and
jo
inc
stos
movs
mov
test
cmps
es
cmps
scas
xor
pusha
mov
xor
not
fild
mov
mov
fiadd
scas
mov
add
xor
fdivr
cld
fs
xor
gs
(bad)
loop
mul
test
out
cmc
cmc
nop
jne
lahf
xlat
xchg
xor
adc
arpl
jne
xor
add
and
add
push
adc
xor
xor
dec
lds
dec
push
cmps
xor
or
cmp
xor
push
(bad)
push
push
les
sub
outs
das
cmp
aam
add
push
push
aad
aas
jae
push
ja
in
mov
test
pop
out
addr16
hlt
dec
mov
or
push
pop
dec
push
cmps
xchg
movs
add
push
test
mov
mov
push
cdq
xchg
jne
xchg
in
adc
xchg
mov
and
jo
inc
scas
movs
test
fwait
cmps
xchg
xor
pusha
cmps
push
div
xchg
push
xchg
xlat
lds
out
and
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
adc
jbe
je
pop
nop
sub
push
aas
mov
aam
add
push
dec
aad
aas
push
inc
ja
in
mov
test
gs
in
nop
bound
hlt
pop
mov
arpl
pop
pop
dec
push
mov
push
movs
mov
mov
nop
xchg
xlat
xchg
nop
adc
mov
jo
inc
mov
iret
mov
xor
pusha
mov
xor
jecxz
loop
in
adc
out
scas
rol
movs
push
fiadd
(bad)
xor
fnstsw
lock
add
ret
(bad)
out
jecxz
aam
cld
and
adc
int
xlat
xchg
adc
and
in
add
or
or
add
pop
adc
xor
adc
add
and
and
mov
loopne
aad
xor
push
(bad)
dec
push
push
les
js
jb
xor
arpl
dec
(bad)
js
je
dec
add
push
jle
bound
jne
push
ja
in
mov
test
inc
in
punpckhwd
pop
addr16
push
jne
cmc
jae
pop
push
mov
mov
pop
xchg
rol
jne
xchg
in
adc
lods
mov
and
jo
inc
mov
iret
cmps
es
mov
push
mov
xchg
xor
not
in
out
mov
cmc
(bad)
loop
ret
(bad)
ficom
ret
xor
lds
ret
xor
gs
(bad)
loop
fucom
iret
je
and
adc
out
xlat
xchg
xor
adc
add
xchg
pop
push
xchg
and
add
push
adc
xor
xor
dec
lds
dec
push
cmps
push
daa
or
or
and
jnp
adc
(bad)
arpl
les
sub
outs
das
cmp
aam
add
push
sub
jbe
jae
inc
ja
in
mov
test
adc
inc
nop
and
hlt
push
mov
pop
cmc
pop
pop
dec
push
adc
lods
add
ret
adc
inc
xor
jmp
ss
mov
and
jo
inc
scas
movs
test
loope
fnsave
pusha
cmps
push
mov
fist
inc
mov
(bad)
mov
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
ins
les
sub
push
je
inc
inc
push
aam
add
push
jge
dec
aas
jb
ins
ja
in
mov
test
dec
in
nop
and
hlt
jbe
xchg
aaa
jne
cmc
es
push
push
lea
hlt
mov
add
xchg
jne
xchg
nop
adc
mov
jo
inc
mov
scas
and
cwde
cmps
pushf
xor
pusha
mov
xor
jecxz
loop
out
mov
mov
fiadd
scas
mov
ficom
(bad)
xor
out
mov
hlt
fs
xor
les
(bad)
je
and
adc
ficomp
pop
test
sar
in
add
jbe
je
add
add
push
mov
aaa
add
and
sub
sbb
es
xor
inc
(bad)
dec
push
push
les
push
movs
dec
inc
lds
dec
(bad)
pop
inc
arpl
jne
inc
mov
push
imul
aas
sub
popa
ja
in
mov
test
inc
in
(bad)
out
addr16
hlt
dec
mov
push
cmc
push
pop
adc
mov
mov
rol
mov
mov
inc
xchg
xchg
mov
mov
in
xor
inc
mov
iret
movs
es
cmps
mov
xlat
pusha
mov
xor
out
fild
cli
and
loope
leave
inc
aad
mov
xor
out
mov
mov
cld
shl
fild
iret
(bad)
in
mov
and
adc
ret
xchg
push
pop
adc
cmp
jb
xor
pop
xchg
sbb
cmc
push
adc
jae
and
aas
movs
add
push
lds
or
add
cmps
sbb
sbb
xor
push
(bad)
arpl
les
aaa
movs
or
lds
inc
mov
aam
add
push
outs
aad
aas
jbe
ss
in
mov
test
gs
inc
orps
cmp
mov
je
popw
push
push
adc
lods
add
xchg
xchg
jne
xchg
xchg
adc
div
aam
xchg
fwait
es
mov
push
div
fwait
push
out
mov
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
ins
les
cmp
dec
das
jne
inc
pop
aam
adc
push
sub
inc
aas
jbe
ss
in
mov
test
jp
inc
andps
pop
addr16
hlt
addr16
aaa
jne
cmc
addr16
push
push
(bad)
xchg
test
push
cmc
mov
mov
jne
xchg
pushf
adc
xchg
xlat
inc
mov
iret
xchg
es
cmps
fnsave
pusha
mov
xor
jecxz
int
rcl
mov
leave
korw
scas
sti
inc
add
push
scas
add
xor
les
in
xor
add
ror
je
and
adc
call
je
das
add
add
jge
add
add
gs
aaa
sub
pop
lock
lds
push
movs
add
and
push
loopne
aad
xor
push
(bad)
jae
inc
les
nop
aaa
movs
or
lds
inc
(bad)
sbb
add
push
(bad)
aad
aas
aaa
mul
outs
in
mov
test
pop
in
(bad)
out
addr16
hlt
push
pusha
xchg
popa
jne
cmc
jo
add
add
push
mul
test
rol
jne
xchg
lock
lods
mov
and
jo
inc
xchg
movs
fisub
std
cmps
movs
xor
pusha
mov
xor
rcl
inc
mov
lds
inc
rol
rcl
shl
mov
in
fs
xor
les
cli
je
and
adc
call
add
(bad)
shl
sbb
outs
add
imul
cmc
add
jg
mov
aaa
das
movs
dec
lock
lds
and
adc
jge
inc
mov
loopne
aad
xor
inc
(bad)
push
push
dec
les
xor
lds
(bad)
push
inc
and
mov
push
dec
aad
aas
aaa
not
gs
mov
test
inc
in
andnps
arpl
hlt
adc
js
gs
adc
cmps
xchg
mov
push
mul
test
push
mov
inc
xor
lahf
adc
div
aam
xchg
movs
mov
es
push
mov
fist
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jbe
pusha
aas
ja
fs
in
mov
test
pop
in
lsl
jb
jge
inc
mov
push
cmc
inc
pop
push
push
stos
xchg
stos
add
push
scas
mov
hlt
push
mov
inc
cmps
jne
xchg
lods
adc
xchg
mov
and
jo
inc
jmp
mov
test
mov
xor
(bad)
xlat
repz
mov
(bad)
nop
scas
mov
push
out
loope
(bad)
cmc
push
in
icebp
jbe
test
add
test
xchg
data16
cli
je
and
adc
les
xor
add
xchg
pop
adc
adc
aaa
mov
aaa
adc
and
inc
cmps
xor
cmp
aad
xor
adc
push
imul
nop
outs
movs
dec
inc
(bad)
lds
das
xor
jl
pop
aam
and
push
ins
aad
aas
jb
push
ja
in
mov
test
gs
in
sysret
out
addr16
jge
inc
xchg
cmp
cmc
inc
pop
push
push
test
test
add
xchg
xchg
jne
xchg
mov
movs
push
and
jo
inc
stos
movs
and
cmps
mov
push
loopne
lea
not
lock
lods
adc
and
xchg
scas
cmps
inc
in
(bad)
rcl
in
cwde
aad
push
loopne
div
not
xor
add
mov
and
std
je
and
adc
lds
sub
add
je
cmp
sbb
adc
xor
dec
lock
push
add
or
xor
xor
pop
(bad)
inc
push
jae
and
jns
adc
and
push
inc
pop
aam
and
push
jne
gs
jno
dec
ja
in
mov
test
inc
in
unpcklps
pop
addr16
inc
mov
dec
cmc
inc
pop
push
push
mov
mov
in
push
scas
gs
add
lods
xchg
jne
xchg
mov
mov
mov
and
jo
inc
scas
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
and
add
sbb
xchg
add
push
cmc
add
cmp
mov
aaa
or
and
cmp
and
and
jg
and
jbe
outs
les
push
movs
push
inc
push
mov
inc
aam
add
push
jle
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
push
jne
cmc
and
dec
push
stos
xchg
test
gs
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
loope
not
mul
xchg
scas
cli
inc
out
call
loope
int
mov
cmp
fs
xor
add
mov
out
je
and
adc
mov
pop
test
shl
in
add
cmp
jo
and
and
das
mov
aaa
add
and
sbb
pop
loopne
aad
xor
or
push
imul
outs
inc
(bad)
lds
das
jg
push
inc
jl
xor
inc
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
pop
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
rcl
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
loopne
(bad)
push
(bad)
mov
shl
add
mov
fisub
out
je
and
adc
mov
pop
sub
add
aas
xchg
cmp
jae
daa
cmc
and
add
push
aaa
push
movs
xor
adc
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
popa
les
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jge
add
imul
jne
push
test
inc
in
maxps
je
pop
hlt
adc
arpl
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
movs
mov
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
aad
hlt
and
lahf
scas
inc
(bad)
cld
push
mov
out
in
ret
push
cmp
fs
xor
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
and
add
cmp
jl
and
push
adc
sub
xor
and
pop
cmps
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jle
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
outs
jne
cmc
and
dec
push
stos
xchg
test
gs
test
push
xchg
xchg
movs
xchg
adc
mov
and
jo
inc
mov
iret
cdq
es
push
xor
push
(bad)
xlat
loope
rcl
mul
xchg
scas
cli
inc
out
call
loope
into
aad
push
cmp
fs
xor
add
mov
out
je
and
adc
mov
pop
test
shl
in
add
cmp
jo
and
and
das
mov
aaa
add
and
sbb
pop
loopne
aad
xor
or
push
imul
outs
inc
(bad)
lds
das
jg
push
inc
jl
xor
inc
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
pop
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
rcl
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
loopne
(bad)
push
(bad)
mov
shl
add
mov
fisub
out
je
and
adc
mov
pop
sub
add
aas
xchg
cmp
jae
daa
cmc
and
add
push
aaa
push
movs
xor
adc
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
popa
les
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jge
add
imul
jne
push
test
inc
in
maxps
je
pop
hlt
adc
arpl
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
movs
mov
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
aad
hlt
and
lahf
scas
inc
(bad)
cld
push
mov
out
in
ret
push
cmp
fs
xor
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
and
add
cmp
jl
and
push
adc
sub
xor
and
pop
cmps
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jle
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
outs
jne
cmc
and
dec
push
stos
xchg
test
gs
test
push
xchg
xchg
movs
xchg
adc
mov
and
jo
inc
mov
iret
cdq
es
push
xor
push
(bad)
xlat
loope
rcl
mul
xchg
scas
cli
inc
out
call
loope
into
aad
push
cmp
fs
xor
add
mov
out
je
and
adc
mov
pop
test
shl
in
add
cmp
jo
and
and
das
mov
aaa
add
and
sbb
pop
loopne
aad
xor
or
push
imul
outs
inc
(bad)
lds
das
jg
push
inc
jl
xor
inc
aad
aas
push
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
pop
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
rcl
icebp
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
loopne
(bad)
push
(bad)
mov
shl
add
mov
fisub
out
je
and
adc
mov
pop
sub
add
aas
xchg
cmp
jae
daa
cmc
es
sub
xor
and
sbb
push
loopne
aad
xor
(bad)
inc
push
popa
les
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jge
add
imul
jl
jae
push
vmread
jge
push
hlt
popa
mov
arpl
and
dec
push
mov
scas
add
push
xchg
gs
test
push
mov
jne
xchg
mov
movs
mov
and
jo
inc
out
movs
mov
mov
pusha
cmps
push
movs
mov
xor
jmp
and
jecxz
fadd
(bad)
cmc
push
rol
xor
cmp
fs
add
ret
data16
out
je
and
adc
scas
lahf
iret
xchg
add
sub
add
aaa
in
add
arpl
jl
and
cmp
sub
inc
lock
adc
pop
cmps
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
and
sbb
push
loopne
aad
xor
(bad)
push
push
ja
ins
nop
je
or
lds
das
js
inc
inc
inc
aam
and
jp
dec
aas
push
xor
in
mov
test
jg
xor
pop
out
addr16
hlt
pop
mov
pop
cmc
es
dec
push
xchg
xchg
lods
add
push
mov
mov
mov
adc
inc
cmps
jne
xchg
(bad)
adc
mov
xchg
and
jo
inc
call
iret
cwde
movs
cmps
mov
push
mov
fisttp
inc
movs
adc
and
xchg
scas
inc
(bad)
not
loope
cwde
aad
push
xchg
int3
xchg
rol
lods
(bad)
fisub
out
je
and
adc
movs
lahf
iret
xchg
adc
aaa
test
add
cmp
jbe
and
sbb
sub
inc
lock
lds
dec
pop
cmps
and
pop
mov
loopne
aad
xor
or
push
push
ins
les
nop
jno
dec
inc
push
or
jp
add
aam
and
push
dec
aad
aas
outs
div
push
in
mov
test
gs
in
addps
fs
hlt
push
mov
pop
cmc
outs
pop
dec
push
rcl
mov
lea
mov
adc
inc
mov
adc
mov
mov
jo
inc
test
iret
call
pusha
xchg
mov
xor
rcl
test
jmp
inc
(bad)
mov
xor
into
mov
aam
test
(bad)
add
mov
fbld
out
je
and
adc
cmps
lahf
enter
sub
shl
in
add
cmp
ja
daa
cmc
or
jg
mov
aaa
shld
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
test
mov
movs
mov
and
jo
inc
jmp
iret
popf
es
cmps
fnsave
pusha
test
mov
xor
nop
xlat
test
and
leave
scas
std
inc
xlat
(bad)
rcl
loop
(bad)
test
sar
fs
xor
add
in
fisub
out
je
and
adc
in
int3
xchg
push
pop
sub
daa
shl
in
add
cmp
xchg
sar
push
adc
cs
aaa
adc
add
adc
je
inc
movs
and
sbb
daa
daa
pop
mov
loopne
aad
xor
or
les
jb
dec
inc
and
inc
das
jle
add
aam
cmp
xor
inc
aas
ins
div
dec
in
mov
test
gs
pop
minps
cmp
mov
adc
fs
dec
push
rcl
mov
aam
loopne
test
mov
adc
inc
mov
adc
push
xchg
inc
scas
movs
les
loopne
lds
pusha
pushf
push
xor
push
(bad)
xlat
in
inc
out
lock
(bad)
scas
std
inc
popf
(bad)
mov
xor
les
aam
ret
add
in
fsub
out
je
and
adc
loope
int
pop
pop
das
test
shl
in
add
xchg
gs
xor
cmp
and
sub
ss
or
pop
lock
imul
pop
mov
loopne
aad
xor
push
(bad)
adc
les
jae
adc
and
inc
das
jl
inc
inc
cmp
ja
jg
fs
sub
inc
aas
ins
idiv
ja
in
mov
test
add
gs
and
hlt
push
mov
adc
gs
dec
push
xchg
xchg
lods
add
push
mov
leave
test
add
fld
mov
adc
repz
and
jo
inc
hlt
movs
shl
cmps
mov
mov
push
mov
fisttp
out
repnz
shr
movs
push
repnz
xor
lds
mov
rol
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
or
adc
les
ins
movs
je
inc
lds
jl
jns
push
aam
and
push
pop
aad
aas
jae
dec
ja
in
mov
test
push
out
addr16
push
mov
ja
jo
dec
push
stos
xchg
mov
mov
test
push
mov
inc
stc
jne
xchg
cwde
adc
mov
jo
inc
xchg
movs
mov
es
cmps
mov
(bad)
pusha
retf
push
stc
mov
xor
not
cld
inc
repz
and
xchg
scas
std
inc
xlat
(bad)
rcl
mov
push
sar
nop
fbstp
rol
mov
out
je
and
jne
lahf
int
add
jno
shr
test
xchg
pop
adc
cmc
pop
adc
xor
adc
adc
adc
sbb
mov
loopne
aad
xor
or
push
xor
jg
jae
pop
inc
dec
lds
das
arpl
jge
pop
aam
cmp
pop
push
pop
aad
aas
ins
mul
adc
pop
mov
test
in
subps
pop
addr16
dec
mov
jg
jge
push
push
mov
mov
gs
pop
xchg
xchg
jne
xchg
xchg
adc
mov
xchg
inc
mov
iret
and
cmps
mov
push
mov
fisttp
inc
(bad)
adc
and
mov
aad
out
add
push
fnstsw
fsub
rol
mov
frstor
out
je
and
jne
lahf
int3
xchg
sub
jo
aas
shl
in
add
and
and
jns
sbb
sub
movs
push
lock
movs
ins
dec
sbb
sbb
xor
aad
xor
adc
jbe
jl
jae
jb
jo
dec
lds
das
jge
push
inc
push
aam
cmp
push
aas
ins
test
in
mov
test
add
dec
cmovae
pop
addr16
inc
mov
js
jl
dec
push
mov
push
lods
gs
xchg
mov
inc
mov
adc
icebp
mov
and
jo
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
fs
xor
add
dec
cmc
je
and
adc
std
lahf
rcl
aas
shr
in
add
daa
xchg
pop
das
xchg
or
adc
pop
adc
sub
pop
lock
adc
add
sub
push
aad
xor
push
(bad)
dec
push
dec
les
push
lds
(bad)
(bad)
jnp
and
mov
push
jno
js
div
mov
test
dec
in
cmova
dec
addr16
popa
mov
dec
cmc
pop
pop
dec
push
pushf
xchg
add
test
push
mov
inc
mov
mov
cmps
ss
scas
and
jo
inc
mov
iret
and
cmps
lds
pusha
xchg
push
test
test
xlat
(bad)
inc
int
jmp
out
out
inc
xchg
scas
out
out
(bad)
movs
push
rol
xor
stc
mov
loope
xlat
xor
add
dec
popf
je
and
adc
fstp
push
test
shr
in
add
and
add
aaa
cmc
and
jg
mov
aaa
movs
sub
and
pop
cmps
(bad)
inc
mov
loopne
aad
xor
or
pop
push
inc
les
push
jb
push
(bad)
jg
cmp
mov
push
jb
jge
data16
outs
in
mov
test
in
cmovb
pop
addr16
xchg
inc
jne
cmc
pop
pop
inc
push
aad
xchg
add
push
stos
cmps
test
push
scas
xchg
adc
inc
mov
mov
test
ss
jo
inc
xchg
movs
mov
lahf
cmps
fnsave
pusha
xchg
push
stos
mov
xor
enter
not
call
inc
fild
movs
push
rol
xor
clc
mov
mul
retf
add
mov
(bad)
iretw
out
je
and
adc
fstp
add
add
and
or
xor
push
adc
es
aaa
sub
and
sbb
sbb
xor
aad
xor
adc
ins
push
xor
movs
adc
and
adc
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
mov
inc
mov
adc
mov
pop
movs
mov
mov
cmps
xor
mov
xor
out
jecxz
repz
inc
loop
cld
inc
rol
fist
ret
xor
test
shl
add
iret
pop
data16
clc
je
and
adc
movs
lahf
fcom
cmp
jp
sub
xchg
pop
add
adc
ds
aaa
add
and
add
pop
loopne
aad
xor
es
arpl
les
xor
js
jl
outs
das
(bad)
mov
aam
add
push
push
inc
aas
inc
not
jle
push
mov
test
popa
in
cmova
arpl
hlt
inc
mov
or
push
mov
mov
gs
xchg
add
xchg
xchg
adc
inc
xor
call
xor
inc
mov
mov
mov
iret
xor
pusha
cmps
push
mov
fbld
icebp
adc
inc
jecxz
loopne
ret
(bad)
rcl
shl
mov
ret
fs
xchg
add
ret
data16
repz
and
adc
stc
lahf
in
xor
and
add
and
adc
adc
or
sub
push
lds
dec
or
xor
xor
sub
inc
push
arpl
pop
nop
xor
bound
data16
aam
add
push
push
aad
aas
dec
test
in
mov
test
(bad)
in
cmovnp
dec
pmuludq
xchg
pusha
jne
cmc
push
pop
fs
(bad)
xchg
xchg
add
push
mov
lods
test
add
mov
xor
out
adc
mov
jo
inc
cdq
movs
(bad)
xchg
cmps
mov
push
clc
mov
xor
repz
jecxz
jecxz
shl
out
scas
in
std
(bad)
xlat
push
rol
(bad)
xor
aam
movs
jbe
not
shl
rol
mov
fsub
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
addr16
sbb
aam
sbb
push
pop
aad
aas
pop
mul
inc
in
mov
test
pop
out
addr16
sbb
arpl
pop
pop
pop
push
mov
push
movs
gs
test
into
xchg
popf
xchg
(bad)
adc
xchg
mov
and
jo
inc
mov
mov
es
cmps
scas
xor
pusha
mov
xor
not
jecxz
in
adc
inc
loop
clc
inc
rol
push
jmp
ret
xor
mov
shl
add
iret
(bad)
fisub
out
je
and
adc
mov
pop
push
test
imul
and
xchg
pop
xchg
rol
pop
adc
push
mov
aaa
add
and
sbb
mov
loopne
aad
xor
push
(bad)
arpl
les
cmp
outs
das
jge
jp
push
aam
add
push
(bad)
aad
aas
dec
imul
jle
inc
mov
test
pop
in
subps
inc
addr16
inc
mov
inc
cmc
ins
pop
imul
xchg
mov
gs
out
mov
adc
inc
xor
hlt
adc
div
fild
movs
scas
and
mov
sahf
xor
pusha
cmps
push
mov
fild
inc
clc
adc
jecxz
inc
(bad)
rcl
shl
mov
ret
shl
xchg
add
ret
repnz
je
and
adc
int
jmp
shl
cmp
daa
xchg
sbb
adc
add
sub
lock
or
dec
or
add
and
jnp
dec
mov
pop
sub
addr16
arpl
pop
nop
jnp
push
inc
js
bound
imul
inc
jne
data16
push
push
aad
aas
dec
div
ja
in
mov
test
gs
in
cmovnp
js
add
inc
mov
jge
cs
pop
push
mov
push
in
gs
out
mov
adc
inc
cmps
jne
xchg
test
ss
mov
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
scas
lahf
call
and
jp
daa
add
aas
xchg
pop
pop
xchg
jae
add
inc
adc
cmp
add
add
movs
cmovg
cmps
outs
daa
and
push
loopne
aad
xor
pop
(bad)
arpl
les
movs
imul
arpl
jp
jg
dec
aam
add
push
jge
jg
jg
push
ja
in
mov
test
jb
inc
addps
pusha
addr16
hlt
pop
mov
pop
cmc
cs
gs
mov
push
jmp
add
rol
jne
xchg
mov
ret
(bad)
mov
and
jo
inc
pushf
movs
fisub
xchg
mov
xor
not
jecxz
loope
mov
inc
loop
std
inc
rol
push
out
add
xor
cmp
(bad)
call
(bad)
frstor
out
je
and
adc
out
lahf
jmp
xor
push
test
sar
pop
add
cmp
es
pop
xchg
and
adc
pop
mov
aaa
add
and
add
add
and
jbe
cmp
add
push
pusha
les
outs
movs
push
inc
ins
lds
popa
(bad)
push
inc
and
inc
add
push
jb
sbb
pop
not
jle
pop
mov
test
adc
inc
divps
cmp
mov
dec
cmc
jge
push
mov
mov
gs
test
push
mov
inc
xor
hlt
adc
xchg
mov
and
jo
inc
out
movs
(bad)
jecxz
mov
push
mov
fbld
int3
adc
and
jecxz
jmp
sti
(bad)
in
loope
shl
mov
ret
fs
xor
add
ret
data16
out
je
and
adc
rcr
and
add
sub
and
push
cmc
sbb
or
pop
lock
lds
and
pop
cmps
jns
push
mov
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
popf
es
cdq
xor
pusha
mov
xor
repz
loopne
jecxz
in
mov
mov
out
scas
clc
inc
mov
les
(bad)
xor
(bad)
mov
(bad)
test
lds
ret
(bad)
fisub
out
je
and
adc
rcr
and
add
cmp
ja
add
inc
adc
add
movs
inc
lock
lds
and
pop
cmps
popa
daa
push
mov
loopne
aad
xor
push
(bad)
arpl
les
sub
lds
arpl
inc
popa
aam
add
push
outs
aad
aas
inc
test
in
mov
test
(bad)
in
minps
pusha
addr16
hlt
dec
mov
dec
cmc
and
pop
push
mov
mov
gs
call
xchg
sahf
xchg
mov
xor
inc
movs
movs
xchg
and
mov
pusha
mov
xor
not
jecxz
rcl
lock
loop
in
in
(bad)
loopne
mov
ret
xor
sar
ret
xor
add
iret
(bad)
retf
scas
out
je
and
adc
cmc
lahf
enter
push
test
shr
test
outs
and
sub
and
rol
pop
adc
sub
adc
push
lds
or
sbb
sbb
xor
sub
jae
pusha
les
xor
outs
das
pusha
mov
aam
add
push
dec
aad
aas
inc
imul
jle
arpl
push
in
cmovnp
jne
pop
hlt
inc
mov
push
cmc
pop
pop
imul
xchg
mov
gs
test
test
xor
xchg
adc
lods
mov
and
jo
inc
cdq
movs
mov
mov
cmps
push
mov
fild
inc
mov
(bad)
jecxz
mov
in
stc
push
fiadd
shl
mov
loope
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
popa
(bad)
inc
and
inc
adc
imul
inc
ja
in
mov
test
pop
out
addr16
adc
imul
pop
pop
push
(bad)
xchg
sahf
add
push
movs
gs
test
push
scas
xchg
jne
xchg
mov
ss
and
mov
movs
mov
es
pusha
mov
xor
repz
loopne
movs
adc
inc
out
scas
inc
(bad)
out
icebp
add
xor
cmp
(bad)
lea
ret
pop
lock
je
and
adc
scas
lahf
out
daa
pop
and
add
cmp
xchg
sub
adc
ds
aaa
add
and
push
cmps
popa
daa
xor
or
xor
sbb
dec
push
pop
les
imul
add
aam
add
push
ins
aad
aas
outs
not
inc
in
mov
test
jb
inc
unpcklps
pop
addr16
xchg
cmp
cmc
inc
pop
dec
push
lea
test
add
add
jne
xchg
xchg
adc
div
pop
movs
(bad)
and
jecxz
shl
mov
xor
rcl
inc
(bad)
adc
and
loop
out
cld
(bad)
mov
xor
ret
mov
shl
add
iret
pop
data16
out
je
and
adc
lds
push
test
shl
sub
outs
and
and
add
pop
adc
or
and
sbb
outs
and
push
cmps
and
loopne
aad
xor
sub
dec
push
pusha
les
jp
push
inc
ins
lds
imul
inc
data16
add
push
inc
aad
aas
dec
not
jno
add
inc
in
cmovbe
jl
addr16
inc
mov
push
cmc
arpl
fs
xchg
xchg
mov
gs
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
mov
pop
push
test
imul
das
outs
cmp
jno
push
cmc
sbb
jg
mov
aaa
movs
inc
lock
movs
add
cmps
(bad)
and
xor
sbb
push
push
arpl
ins
nop
push
lds
js
outs
inc
inc
aam
add
push
jns
(bad)
jp
ins
ja
in
mov
test
inc
in
maxps
and
hlt
push
mov
pop
cmc
and
pop
push
(bad)
xchg
sahf
add
push
in
xchg
mov
adc
inc
xor
scas
adc
mov
and
fild
movs
stos
and
mov
pusha
mov
xor
int
loopne
sti
adc
inc
out
scas
inc
(bad)
scas
push
jmp
aad
push
out
jmp
in
idiv
fs
add
ret
(bad)
xchg
data16
int3
je
and
adc
icebp
lahf
iret
xchg
add
and
add
jne
push
pop
adc
adc
xor
inc
lock
cs
push
cmps
and
cmp
aad
xor
or
les
nop
outs
movs
dec
inc
arpl
arpl
and
jl
pop
aam
add
push
jge
gs
outs
test
in
mov
test
dec
in
unpcklps
dec
addr16
xchg
cmp
cmc
dec
pop
dec
push
(bad)
xchg
mov
gs
test
xchg
xchg
jne
xchg
nop
adc
div
rol
movs
fisub
mov
pusha
mov
xor
not
jecxz
les
cli
and
loop
out
aad
fist
ret
xor
(bad)
mov
shl
add
iret
pop
movs
out
je
and
adc
mov
pop
push
test
or
test
outs
je
and
pop
xchg
and
adc
add
and
add
and
sbb
jns
inc
mov
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
sahf
movs
mov
xchg
iret
sahf
movs
cmps
call
mov
xor
int
fiadd
in
sti
(bad)
jecxz
cli
inc
out
mov
xor
icebp
mov
ret
fs
xor
add
ret
iretw
out
je
and
adc
scas
lahf
ficom
shr
cmp
aas
xchg
cmp
adc
cmp
movs
sbb
dec
lds
and
add
adc
and
jns
push
mov
pop
sbb
les
cmp
bound
jge
push
inc
cs
add
push
imul
ins
ja
in
mov
test
subps
je
push
hlt
popa
mov
dec
cmc
inc
pop
push
push
(bad)
xchg
sahf
add
push
scas
mov
cmc
push
mov
inc
xor
mov
mov
jo
inc
lods
movs
mov
mov
mov
xor
repz
jecxz
in
jmp
inc
out
scas
mov
push
test
cmc
push
out
in
jbe
div
les
into
add
ret
(bad)
cwde
data16
out
je
and
adc
ret
lahf
into
xchg
daa
pop
and
add
jne
inc
pop
adc
adc
xor
inc
lock
cmp
dec
inc
cmps
outs
daa
pop
mov
loopne
aad
xor
or
dec
push
pop
les
cmp
arpl
(bad)
(bad)
cmova
pusha
add
push
outs
aad
aas
pop
mul
inc
in
mov
test
pop
in
cmovbe
pop
addr16
hlt
inc
mov
or
push
pop
imul
nop
push
mov
add
cdq
xchg
jne
xchg
mov
lods
mov
and
jo
inc
lea
aam
and
push
sti
mov
xor
not
jecxz
aad
retf
and
loop
cmps
inc
cmc
(bad)
xlat
push
out
ret
xor
cmp
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
arpl
inc
inc
popa
aam
adc
push
outs
aad
aas
jg
inc
ja
in
mov
test
adc
inc
cvtps2pd
dec
addr16
pop
mov
pop
cmc
push
pop
pop
push
adc
xchg
scas
xchg
jne
xchg
mov
div
leave
inc
xchg
movs
mov
movs
cmps
call
mov
xor
int
fiadd
lods
and
jecxz
jecxz
rol
in
icebp
add
xor
cmp
shl
add
ret
lock
je
and
adc
mov
pop
and
add
xchg
outs
xchg
and
push
cmc
push
adc
cmp
pop
lock
lds
sbb
xor
xor
xor
and
inc
push
arpl
fs
sub
bound
jl
sbb
aam
add
push
jp
jae
push
not
inc
in
mov
test
pop
in
nop
das
addr16
hlt
push
mov
dec
cmc
inc
pop
dec
push
mov
push
test
add
xchg
xor
mov
mov
mov
and
jo
inc
mov
iret
fisub
cmps
cmps
xchg
xor
pusha
mov
xor
repz
jecxz
out
jmp
inc
out
scas
mov
push
test
stc
push
in
call
fs
into
add
ret
pop
data16
shl
adc
loope
sti
xchg
daa
pop
and
add
and
cmp
cmp
adc
sbb
cmp
adc
movs
cmovg
(bad)
sub
add
es
xor
sub
dec
push
pop
les
dec
movs
jge
lds
data16
pop
inc
cs
add
push
dec
aad
aas
inc
not
inc
in
mov
test
inc
in
cmovnp
outs
addr16
hlt
inc
mov
pop
cmc
jg
push
mov
push
in
gs
out
mov
adc
inc
mov
adc
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
push
test
shr
adc
outs
cmp
rol
pop
adc
cmp
add
or
ins
and
sbb
push
loopne
aad
xor
sbb
arpl
les
inc
pop
lds
jg
inc
inc
jle
ja
inc
mov
push
jle
add
jge
push
ja
in
mov
test
pop
in
cmovae
jo
pop
hlt
push
mov
dec
cmc
and
pop
push
mov
mov
gs
repz
nop
xchg
adc
inc
xor
test
xor
inc
mov
scas
and
movs
cmps
iret
xor
pusha
cmps
push
mov
fbld
inc
out
mov
inc
jecxz
cld
inc
rol
rcl
shl
mov
ret
les
mov
ret
lock
je
and
adc
loopne
jmp
sar
cmp
cmp
xchg
adc
push
cmc
pop
adc
pop
mov
aaa
xor
and
pop
cmps
sbb
adc
push
loopne
aad
xor
push
(bad)
addr16
pusha
les
movs
or
lds
cmp
jl
jo
imul
aad
aas
jae
push
ja
in
mov
test
inc
in
nop
das
addr16
push
mov
dec
cmc
dec
pop
dec
push
mov
push
scas
gs
mov
push
lods
xchg
jne
xchg
lahf
adc
mov
and
stos
and
mov
mov
push
div
xchg
push
int
loopne
xlat
adc
and
out
scas
in
inc
rcl
xor
cmp
fs
add
ret
pop
data16
out
je
and
adc
out
lahf
in
aaa
pop
and
add
and
xor
rol
push
adc
or
xor
and
movs
cmovg
cmps
xor
add
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
leave
inc
fwait
movs
and
cmps
test
mov
xor
not
jecxz
jecxz
call
inc
loop
clc
inc
out
mov
xor
repz
shl
add
iret
(bad)
fbld
out
je
and
adc
mov
pop
push
test
ins
in
add
cmp
sub
add
pop
adc
cmp
movs
pop
lock
lds
and
sbb
mov
loopne
aad
xor
sbb
les
movs
push
inc
dec
lds
jle
inc
inc
and
arpl
outs
aad
aas
inc
not
jle
inc
mov
test
in
subps
jo
ja
inc
mov
or
push
mov
mov
gs
test
nop
xchg
jne
xchg
call
xor
inc
cdq
movs
pushf
and
movs
cmps
mov
push
mov
fild
inc
loop
mov
inc
jecxz
std
inc
rol
push
in
shl
mov
shl
add
ret
mov
and
adc
ret
lahf
rcl
and
cs
add
jp
adc
aaa
xchg
aaa
rol
sbb
sub
movs
pop
lock
cmp
pop
cmps
es
cs
loopne
aad
xor
push
(bad)
addr16
pusha
les
outs
movs
dec
inc
push
(bad)
ins
inc
jl
xor
push
jbe
jp
jbe
push
ja
in
mov
test
adc
dec
cmovne
jb
pop
hlt
push
mov
jl
push
pop
gs
mov
sahf
add
push
xchg
gs
test
push
mov
xor
stos
adc
xchg
mov
and
jo
inc
mov
test
test
mov
xor
int
loopne
rcl
retf
and
out
scas
jmp
lock
loop
in
(bad)
xor
cwde
mov
mul
aam
iret
in
gs
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jge
inc
inc
popa
aam
adc
push
sub
mul
inc
in
mov
test
outs
in
addps
pop
addr16
pop
mov
ins
cmc
push
pop
pop
push
mov
mov
gs
test
push
test
xchg
xchg
mov
xor
inc
mov
call
pusha
mov
xor
out
jecxz
out
mov
inc
loop
std
inc
rol
mov
xor
cmp
les
lea
iret
(bad)
fisub
out
je
and
adc
scas
lahf
out
and
push
test
shr
push
add
and
das
rol
pop
adc
add
pop
aaa
add
and
push
cmps
xor
aaa
mov
loopne
aad
xor
sub
arpl
les
cmp
outs
das
jge
inc
inc
inc
aam
add
push
xor
add
ja
in
mov
test
popa
in
minps
jo
push
hlt
jne
pusha
xchg
cmp
cmc
addr16
push
xchg
xchg
mov
gs
out
cmps
push
fld
xor
mov
div
mov
movs
and
cmps
xor
mov
push
jecxz
rol
jmp
inc
jecxz
mov
push
test
xor
loopne
out
jbe
test
add
ret
mov
and
adc
neg
and
add
and
adc
adc
adc
sub
xor
and
push
cmps
adc
add
aad
xor
and
ja
pusha
les
dec
movs
push
inc
pusha
lds
fs
pop
inc
inc
aam
add
push
push
aad
aas
dec
imul
inc
in
mov
test
pop
in
cmovne
and
ins
hlt
jle
xchg
pusha
jne
cmc
jae
fs
(bad)
xchg
sahf
add
push
jmp
add
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
scas
lahf
fst
cmp
jp
adc
cmp
cmp
adc
cmp
inc
lock
ins
and
pop
cmps
and
push
mov
loopne
aad
xor
sbb
les
nop
sub
lds
jp
inc
inc
jns
je
inc
mov
push
push
add
jge
inc
ja
in
mov
test
sbb
inc
minps
inc
addr16
push
mov
push
cmc
and
pop
push
mov
mov
gs
xchg
test
xchg
xchg
stos
adc
xor
inc
cmps
movs
mov
mov
pusha
mov
xor
out
jecxz
sti
adc
inc
loop
inc
(bad)
xlat
push
out
ret
xor
test
shl
add
iret
(bad)
frstor
out
je
and
adc
movs
lahf
jmp
test
sar
sub
outs
cmp
add
sete
adc
or
sbb
push
lds
and
sbb
xor
add
xor
sub
push
push
pusha
les
aaa
movs
jns
inc
lds
(bad)
mov
jb
push
add
push
push
aad
aas
push
not
jno
pop
mov
test
inc
in
nop
pop
addr16
hlt
push
mov
ja
pop
pop
dec
push
cmps
xchg
mov
mov
sti
push
xchg
xor
jmp
ss
mov
and
jo
inc
call
iret
ret
es
cmps
xor
cmps
push
mov
fisttp
inc
mov
(bad)
jecxz
in
stc
(bad)
sti
push
mov
xor
mov
shl
add
ret
data16
out
je
and
adc
loop
jmp
test
ror
in
add
and
xor
add
push
rol
add
add
sub
lock
or
dec
sbb
mov
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
xchg
movs
fisub
xchg
mov
xor
int
loopne
cmps
adc
and
out
scas
inc
(bad)
repnz
std
add
xor
cmp
xchg
lea
ret
(bad)
fisub
out
je
and
adc
mov
pop
and
add
cmp
xchg
xor
add
inc
adc
push
mov
aaa
add
and
push
cmps
and
inc
mov
loopne
aad
xor
and
les
sub
arpl
arpl
inc
inc
push
aam
add
push
sub
div
inc
in
mov
test
inc
in
divps
inc
addr16
inc
mov
or
and
xchg
mov
gs
test
add
mov
inc
xchg
xchg
mov
ret
call
and
jo
inc
popf
movs
xchg
mov
pusha
mov
xor
rcl
jecxz
stc
adc
inc
loop
cld
inc
stc
(bad)
scas
push
xlat
add
xor
fdivr
shl
add
iret
pop
out
loopne
repnz
adc
cld
lahf
in
xor
adc
add
jnp
das
pop
and
rol
inc
adc
cs
aaa
add
and
pop
cmps
(bad)
add
or
and
jns
cmp
jae
arpl
addr16
outs
movs
or
lds
xor
cmova
jge
inc
mov
push
popa
aad
aas
push
in
mov
test
jns
inc
unpcklps
pop
addr16
hlt
push
mov
pop
cmc
cs
or
adc
mov
push
mov
xor
mov
div
scas
inc
mov
test
and
into
xor
repz
fiadd
retf
lds
inc
hlt
(bad)
fist
shl
mov
loope
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
arpl
inc
cs
adc
sub
add
jp
push
ja
in
mov
test
jb
dec
maxps
jne
push
hlt
pop
mov
pop
cmc
and
pop
push
(bad)
xchg
sahf
add
push
in
gs
out
mov
adc
inc
xor
mov
mov
and
fiadd
movs
pushf
and
xchg
mov
xor
int
loopne
in
lods
and
out
scas
inc
(bad)
cmps
push
call
aad
push
mov
(bad)
lds
mov
ret
pop
data16
mov
loopne
mov
lahf
in
adc
and
add
xchg
pop
pop
xchg
rol
push
adc
and
movs
inc
lock
ds
inc
cmps
sbb
inc
mov
loopne
aad
xor
or
arpl
les
outs
movs
pop
inc
pop
lds
xor
aam
add
push
xor
jp
sub
popa
ja
in
mov
test
in
cmovae
cmp
mov
arpl
popw
imul
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
pushf
adc
xor
inc
xchg
movs
xchg
jecxz
xchg
xor
pusha
mov
xor
out
loopne
cld
adc
and
loop
mov
push
jmp
ret
xor
clc
mov
ret
fdiv
retf
add
iret
(bad)
cdq
data16
out
je
and
adc
ret
xchg
push
pop
adc
add
jne
sub
gs
jbe
add
inc
adc
das
mov
aaa
add
and
inc
cmps
adc
cmp
xor
sub
push
push
pusha
les
movs
push
inc
pusha
lds
fs
pop
inc
das
aam
add
push
and
pop
aas
inc
not
jle
jp
push
dec
gs
in
cmovnp
jle
add
inc
mov
jno
inc
pop
push
mov
mov
gs
mov
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
mov
pop
push
test
shr
daa
add
aas
xchg
rol
sbb
jg
mov
aaa
movs
inc
lock
lds
and
sbb
adc
xor
push
(bad)
inc
push
arpl
outs
nop
cmp
bound
jge
inc
jge
jo
inc
mov
push
jno
add
inc
div
ja
in
mov
test
sbb
dec
divps
je
pop
hlt
dec
mov
dec
cmc
cs
gs
lea
jmp
add
add
jne
xchg
mov
cmp
mov
jo
inc
mov
and
cmps
popf
xor
pusha
mov
xor
xchg
xlat
jecxz
out
jmp
inc
out
scas
mov
push
std
add
xor
in
call
shl
add
ret
(bad)
data16
les
loopne
movs
cmc
jmp
ficomp
and
add
jne
push
pop
adc
adc
xor
ss
sub
add
and
loopne
aad
xor
adc
les
inc
pop
lds
cmp
add
aam
add
push
inc
aad
aas
outs
div
inc
in
mov
test
dec
in
nop
pop
addr16
dec
mov
pop
cmc
inc
pop
push
push
mov
mov
gs
test
mov
inc
xchg
xchg
mov
xor
inc
mov
iret
fisub
lahf
cmps
pushf
xor
pusha
mov
xor
rcl
loopne
cmps
adc
and
loop
cmps
inc
out
(bad)
ficom
ret
xor
sar
fs
add
iret
pop
data16
out
je
and
adc
call
push
test
ror
in
add
and
and
and
adc
or
aas
lock
sbb
push
cmps
jns
dec
mov
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
popf
es
(bad)
xor
pusha
cmps
push
mov
fistp
inc
cmps
adc
inc
jecxz
cli
inc
cdq
(bad)
icebp
push
test
xor
cmp
fs
xor
gs
data16
out
je
and
adc
mov
pop
and
add
xchg
addr16
das
rol
push
adc
add
movs
add
and
add
or
and
jns
push
mov
pop
and
les
sub
bound
arpl
inc
and
sub
pop
aad
aas
outs
test
in
mov
test
gs
dec
nop
cs
hlt
pop
mov
dec
cmc
pop
pop
dec
push
(bad)
xchg
xchg
add
push
test
cdq
test
push
ret
xchg
jne
xchg
in
adc
mov
and
mov
loop
fnstenv
pusha
mov
xor
int
jecxz
repz
and
out
scas
mov
push
std
add
xor
sti
mov
icebp
fnsave
enter
icebp
gs
(bad)
fwait
data16
and
adc
fstp
and
add
jle
inc
pop
sub
sub
add
pop
adc
xor
adc
and
pop
cmps
sbb
lfs
loopne
aad
xor
or
les
push
lds
cmp
outs
inc
fs
add
push
push
aad
aas
outs
test
in
mov
test
dec
in
nop
data16
hlt
pop
mov
js
push
pop
pop
push
lea
mov
test
les
xchg
xchg
popf
adc
xor
inc
lea
test
xchg
cmps
cdq
xor
pusha
mov
xor
rcl
jecxz
fst
retf
(bad)
loop
out
out
mov
xor
cmp
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jge
inc
inc
daa
aam
adc
push
sub
div
ja
in
mov
test
jno
inc
cvtps2pd
cmp
hlt
push
mov
ins
cmc
and
pop
push
mov
mov
gs
movs
add
fld
xor
mov
fdivr
xchg
xor
inc
cwde
movs
pushf
and
mov
mov
pusha
cmps
push
mov
fbld
inc
in
test
inc
jecxz
jecxz
cdq
(bad)
mov
xor
cwde
mov
ret
fs
add
ret
data16
out
je
and
adc
ficomp
and
add
jnp
add
add
cmc
sbb
sub
sbb
or
(bad)
shld
dec
pop
cmps
pop
daa
inc
mov
loopne
aad
xor
(bad)
inc
push
pusha
les
push
dec
inc
ins
lds
cmp
outs
inc
push
aam
add
push
pop
aad
aas
jae
ss
in
mov
test
dec
in
nop
pop
addr16
push
mov
adc
push
pop
dec
push
mov
xchg
add
push
stos
gs
cmps
add
cdq
xchg
jne
xchg
call
ss
mov
and
jo
inc
mov
iret
fbld
mov
pusha
mov
xor
repz
jecxz
repnz
and
out
scas
mov
push
test
jmp
jbe
div
fs
xor
add
ret
(bad)
fwait
data16
out
je
and
adc
fistp
and
add
js
inc
pop
and
adc
xor
sbb
dec
lds
and
or
add
es
xor
cmp
les
dec
movs
inc
inc
jae
arpl
fs
dec
inc
jno
pusha
add
push
ja
push
aas
dec
div
inc
in
mov
test
gs
inc
cmovo
outs
addr16
jbe
arpl
pop
pop
imul
xchg
mov
cmps
test
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
push
test
shr
push
add
cmp
je
add
pop
adc
ds
aaa
add
and
sbb
push
loopne
aad
xor
es
jae
pusha
les
sub
outs
das
jle
push
inc
outs
aam
add
push
jbe
sbb
inc
test
in
mov
test
in
cmovae
cmp
hlt
inc
mov
push
cmc
cmp
gs
mov
mov
gs
xchg
add
fld
xor
mov
xor
inc
jmp
mov
pusha
cmps
push
mov
fisttp
inc
out
jmp
inc
jecxz
mov
push
mov
shl
mov
shl
add
ret
data16
and
adc
aad
int3
xchg
xor
and
add
jl
add
rol
sbb
cs
aaa
xor
and
pop
cmps
pop
daa
cs
loopne
aad
xor
push
(bad)
push
push
pusha
les
push
lds
cmp
add
aam
add
push
push
aad
aas
jae
ss
in
mov
test
pop
in
nop
gs
push
mov
or
pop
pop
dec
push
mov
push
stos
gs
mov
push
cdq
xchg
adc
inc
xor
lods
adc
xchg
mov
movs
mov
mov
pusha
mov
xor
repz
jecxz
repz
and
out
scas
mov
push
stos
add
xor
lds
icebp
xor
add
ret
pop
jmp
xor
adc
cmc
lahf
jmp
add
and
add
and
xchg
adc
adc
or
ds
xor
sbb
mov
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
leave
inc
mov
pushf
es
cmps
ret
pusha
mov
xor
out
jecxz
out
adc
inc
loop
clc
inc
cdq
(bad)
icebp
push
cmc
add
xor
pushf
mov
shl
add
iret
(bad)
fisub
out
je
and
adc
mov
pop
push
test
imul
and
xchg
bound
adc
add
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
sub
jae
pusha
les
cmp
outs
das
daa
mov
aam
add
push
popa
aad
aas
push
in
mov
test
jno
inc
nop
jns
pop
hlt
adc
pusha
xchg
ss
cmc
push
pop
dec
push
cmps
xchg
mov
gs
test
push
ret
adc
inc
xor
mov
mov
lods
xor
inc
xchg
movs
pushf
and
movs
cmps
lahf
xor
pusha
cmps
push
mov
fisttp
inc
fist
lods
and
jecxz
sti
inc
cdq
(bad)
cld
push
lock
xor
cmp
fs
xor
gs
data16
out
je
and
adc
aam
int3
xchg
and
and
add
jl
cmp
add
cmc
sbb
sub
movs
and
and
pop
cmps
bound
xor
xor
push
(bad)
addr16
pusha
les
push
or
lds
cmp
outs
inc
js
aaa
add
push
pop
aad
aas
push
ss
in
mov
test
gs
dec
nop
gs
hlt
pop
mov
push
cmc
das
pop
pop
push
mov
xchg
add
push
in
gs
mov
push
lods
xchg
jne
xchg
xchg
adc
xchg
mov
and
jo
inc
out
movs
shl
test
mov
xor
jecxz
loopne
int3
adc
and
out
scas
out
ffree
les
(bad)
xor
pushf
mov
mul
aam
iret
in
gs
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
arpl
inc
inc
es
adc
push
(bad)
aad
aas
jle
push
ja
in
mov
test
inc
in
addps
cmp
hlt
push
mov
pop
cmc
cmp
gs
lea
jmp
add
mov
inc
xchg
xchg
mov
fdivr
mov
and
jo
inc
mov
and
cmps
ret
pusha
mov
xor
rcl
jecxz
loop
mov
inc
loop
std
inc
cdq
(bad)
fist
ret
xor
xchg
shl
add
iret
(bad)
frstor
out
je
and
adc
mov
pop
adc
add
xchg
pop
gs
or
add
pop
adc
es
aaa
add
and
pop
cmps
and
sbb
xor
or
dec
push
arpl
pop
nop
sub
outs
das
jne
jp
addr16
add
push
sub
add
jae
inc
ja
in
mov
test
ins
in
andps
pusha
addr16
hlt
dec
mov
inc
cmc
das
pop
dec
push
mov
mov
mov
mov
nop
xchg
jne
xchg
mov
lods
mov
and
jo
inc
mov
iret
xchg
movs
cmps
lahf
xor
pusha
cmps
push
mov
fisttp
inc
ret
adc
and
jecxz
mov
push
jmp
shl
mov
shl
add
ret
data16
out
je
and
adc
ficomp
and
add
jg
adc
rol
sbb
sub
add
or
sub
pop
cmps
or
es
loopne
aad
xor
(bad)
push
push
arpl
push
nop
jp
jl
lds
gs
pop
inc
pop
aam
add
push
js
fs
dec
not
inc
in
mov
test
gs
dec
cmovo
es
jl
xchg
pusha
jne
cmc
push
pop
push
mov
push
jmp
add
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
scas
lahf
fst
shr
sub
cmp
xor
add
inc
adc
add
movs
push
lock
lds
and
push
cmps
sbb
add
xor
push
(bad)
push
push
pop
les
movs
ins
inc
dec
lds
arpl
sbb
aam
add
push
jb
sbb
inc
div
inc
in
mov
test
jp
inc
minps
cmp
hlt
dec
mov
dec
cmc
daa
pop
pop
push
lea
cli
gs
out
mov
adc
inc
xchg
xchg
jmp
div
fild
movs
xchg
and
stc
cmps
mov
push
stc
mov
xor
rcl
jecxz
out
lods
and
loop
inc
mov
xor
cmp
lock
gs
(bad)
aam
hlt
out
je
and
adc
mov
pop
adc
add
xor
xchg
and
add
push
adc
sub
xor
add
and
sbb
push
loopne
aad
xor
or
les
sub
lds
jne
add
aam
add
push
sub
test
in
mov
test
adc
inc
cvtdq2ps
cmp
hlt
push
mov
dec
cmc
pop
pop
dec
push
mov
mov
gs
mov
push
scas
xchg
adc
inc
xor
mov
mov
mov
and
jo
inc
jmp
iret
fldenv
out
cmps
xchg
mov
xor
int
rol
call
inc
jecxz
mov
push
mov
shl
mov
shl
add
ret
data16
stc
je
and
adc
(bad)
lahf
jmp
xor
and
add
daa
xchg
pop
arpl
adc
or
sub
add
aaa
and
add
adc
aaa
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
cwde
movs
fisub
stc
cmps
mov
push
loopne
popf
xor
xchg
xlat
loopne
movs
adc
inc
out
scas
inc
(bad)
loop
hlt
add
xor
cwde
mov
(bad)
les
mov
ret
pop
data16
out
je
and
adc
mov
pop
and
add
cmp
xchg
sub
add
inc
adc
ds
aaa
add
and
sbb
mov
loopne
aad
xor
sub
dec
push
pop
les
cmp
arpl
jl
inc
pop
aam
add
push
(bad)
aad
aas
dec
mul
inc
in
mov
test
push
inc
divps
cmp
hlt
jbe
arpl
outs
pop
imul
xchg
mov
gs
xchg
add
mov
inc
xchg
xchg
mov
xor
inc
mov
iret
xchg
mov
pusha
mov
xor
not
loopne
rcl
test
inc
loop
hlt
inc
cdq
(bad)
rcl
ret
xor
xchg
ret
repnz
gs
(bad)
(bad)
out
je
and
adc
scas
lahf
rcl
pop
shr
or
xor
xchg
sub
add
push
adc
sub
pop
aaa
add
and
pop
cmps
pop
daa
adc
xor
adc
arpl
les
push
je
pusha
lds
aas
(bad)
jnp
and
ja
inc
mov
push
ins
aad
aas
push
in
mov
test
jge
inc
nop
jns
inc
hlt
adc
jne
cmc
pop
pop
dec
push
xchg
xchg
mov
gs
mov
xchg
fcom
out
div
movs
inc
mov
cmps
and
and
push
mov
fild
inc
lds
ret
and
jecxz
loop
test
loope
rol
shl
mov
loope
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jge
push
inc
cs
adc
pop
aad
aas
inc
not
inc
in
mov
test
inc
in
divps
pop
addr16
hlt
dec
mov
push
cmc
and
pop
push
lea
jmp
add
cmps
xchg
adc
inc
xor
mov
into
inc
and
jo
inc
in
movs
cmps
and
stc
cmps
(bad)
xor
pusha
mov
xor
xchg
xlat
loopne
sti
adc
inc
out
scas
std
inc
cli
(bad)
rcl
(bad)
xor
iret
mov
(bad)
shl
add
ret
(bad)
fsub
out
je
and
adc
cmps
lahf
jmp
add
and
add
xchg
xor
cmc
inc
adc
or
adc
pop
lds
and
pop
cmps
xor
loopne
aad
xor
or
jae
push
les
nop
cmp
arpl
inc
(bad)
sbb
aam
add
push
jbe
push
aas
jae
jno
inc
in
mov
test
in
packsswb
cmp
hlt
jge
arpl
outs
pop
dec
push
lea
cli
gs
test
push
test
xchg
xchg
mov
cmp
lods
mov
and
jo
inc
stos
movs
mov
es
cmps
mov
push
div
xchg
push
out
loopne
rcl
mov
inc
loop
test
mov
xor
icebp
mov
ret
fs
xor
add
iret
(bad)
(bad)
data16
shl
out
sti
cmc
jmp
fistp
adc
add
jns
sub
xor
jbe
add
push
adc
das
mov
aaa
add
and
pop
cmps
(bad)
sbb
xor
or
dec
push
arpl
ins
nop
xor
outs
das
addr16
pop
inc
jp
push
add
push
push
aad
aas
dec
imul
jle
data16
test
gs
cmovo
js
push
hlt
jl
pusha
xchg
cmp
cmc
cmp
imul
mov
test
add
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
mov
pop
push
test
sar
sub
xchg
pop
es
sub
push
cmc
push
adc
ds
aaa
movs
sbb
dec
lds
add
push
loopne
aad
xor
es
ja
arpl
popa
nop
cmp
bound
jge
inc
inc
popa
aam
add
push
ins
aad
aas
jle
inc
ja
in
mov
test
jle
dec
minps
pop
addr16
inc
mov
inc
cmc
outs
pop
imul
xchg
sahf
add
push
sti
gs
test
push
cmps
xchg
jne
xchg
mov
ss
mov
and
jo
inc
mov
sahf
mov
pusha
mov
xor
jecxz
loopne
out
mov
inc
out
scas
loop
aam
fcom
(bad)
xor
repnz
icebp
fs
xor
gs
(bad)
loop
lock
je
and
adc
movs
lahf
rcl
arpl
jbe
and
outs
add
and
adc
aaa
mov
aaa
add
and
and
add
es
xor
adc
jae
push
les
inc
arpl
arpl
inc
(bad)
inc
inc
aam
add
push
jb
pop
aas
jae
jno
inc
in
mov
test
jb
inc
andps
pusha
addr16
dec
mov
or
and
dec
push
(bad)
xchg
mov
gs
add
xchg
jne
xchg
scas
adc
div
test
movs
fisub
(bad)
cmps
mov
push
in
mov
pushf
fisttp
inc
repnz
and
loop
mov
push
jmp
ret
xor
std
mov
ret
fs
xor
add
iret
(bad)
xchg
data16
xor
jmp
xchg
or
rol
in
add
and
sbb
add
pop
adc
or
and
and
push
cmps
and
dec
mov
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
pushf
es
mov
xchg
pusha
cmps
push
mov
fistp
inc
sti
adc
inc
jecxz
jecxz
out
loope
test
out
push
mov
ret
shl
add
ret
data16
shl
adc
mov
pop
and
add
cmp
xchg
rol
push
adc
or
pop
lock
lds
and
sbb
push
daa
aas
mov
loopne
aad
xor
sub
ja
arpl
gs
sub
lds
jle
inc
inc
dec
aam
add
push
xor
dec
aas
dec
test
in
mov
test
push
dec
subps
pop
addr16
hlt
jl
xchg
jle
jo
addr16
imul
xchg
gs
test
add
nop
xchg
adc
inc
xor
mov
xchg
(bad)
inc
jmp
es
cmps
cwde
xor
pusha
mov
xor
repz
loop
cmps
adc
out
scas
rol
jecxz
fld
(bad)
xor
(bad)
mov
lock
xor
gs
(bad)
loope
lock
je
and
adc
out
lahf
rcl
(bad)
shr
syscall
and
es
xor
adc
cs
aaa
add
and
pop
cmps
popa
daa
pop
mov
loopne
aad
xor
adc
dec
push
push
les
sub
lds
je
push
inc
fs
add
push
imul
push
ja
in
mov
test
pop
in
nop
dec
addr16
push
mov
pop
cmc
pop
pop
dec
push
lea
stos
lea
inc
xchg
xchg
adc
inc
xchg
xchg
pushf
adc
lods
mov
and
jo
inc
cmps
movs
movs
and
xchg
cmps
cmps
xor
pusha
mov
xor
not
jecxz
int
out
mov
rol
scas
out
fadd
cmc
push
fadd
ret
xor
cmp
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
arpl
add
aam
adc
push
pop
aad
aas
jle
ins
ja
in
mov
test
sbb
inc
cmovae
inc
addr16
hlt
push
mov
dec
cmc
cs
pushw
cmps
xchg
mov
gs
out
mov
adc
inc
xor
test
ss
mov
and
jo
inc
in
movs
mov
loope
mov
mov
push
mov
fild
inc
out
mov
inc
jecxz
cld
inc
out
fist
shl
mov
ret
lds
mov
ret
data16
out
je
and
adc
out
lahf
jmp
xor
and
add
cmp
cmp
or
sbb
push
cmc
push
adc
or
push
lock
lds
and
push
cmps
sbb
inc
mov
loopne
aad
xor
and
push
push
pusha
les
aaa
movs
imul
bound
inc
mov
aam
add
push
jno
inc
aas
jo
ss
in
mov
test
pop
in
punpcklbw
pop
addr16
inc
mov
push
cmc
arpl
push
push
lea
hlt
gs
test
add
fld
xor
jmp
ss
test
jo
inc
scas
movs
pushf
and
mov
pusha
mov
xor
xchg
xlat
loop
lods
adc
inc
out
scas
fadd
mov
xor
mov
icebp
fs
xor
gs
(bad)
sahf
data16
out
je
and
adc
scas
lahf
int3
xchg
aaa
pop
and
add
jge
sbb
add
adc
xor
push
lock
ds
pop
cmps
and
loopne
aad
xor
or
les
inc
jnp
arpl
popa
(bad)
ja
pop
aam
add
push
pop
aad
aas
jg
popa
ja
in
mov
test
jle
inc
cmovno
and
mov
jge
fs
ins
push
mov
mov
gs
test
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
push
test
jnp
push
add
and
xor
add
pop
adc
cmp
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
push
(bad)
jae
pusha
les
sub
lds
jle
add
aam
add
push
(bad)
aad
aas
dec
test
in
mov
test
inc
in
subps
inc
addr16
jle
pusha
xchg
cmp
cmc
outs
pop
imul
xchg
mov
gs
test
add
add
jne
xchg
in
adc
xchg
mov
and
jo
inc
mov
popf
es
lods
xor
pusha
cmps
push
mov
fild
inc
std
adc
inc
jecxz
inc
(bad)
cmps
push
(bad)
add
xor
sar
ret
xlat
xor
ret
data16
out
mul
jecxz
mov
xchg
jne
lahf
fst
sbb
jbe
push
add
pop
xchg
rol
push
adc
aaa
mov
aaa
xor
and
and
mov
loopne
aad
xor
adc
ja
pusha
les
sub
bound
inc
(bad)
jns
ins
aam
add
push
jns
pop
aas
jo
inc
ja
in
mov
test
gs
in
punpckldq
ja
pop
hlt
inc
mov
dec
cmc
and
xchg
xchg
add
push
in
mov
inc
cdq
xchg
(bad)
xchg
xchg
adc
mov
and
fild
movs
mov
es
cmps
shl
mov
xor
int
jecxz
ret
and
out
scas
mov
push
lock
xor
repz
icebp
xlat
xor
add
ret
pop
data16
in
(bad)
and
adc
into
lahf
ficom
sbb
or
cmp
outs
and
adc
add
push
adc
add
sub
lock
outs
and
add
and
xor
mov
pop
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
leave
inc
mov
mov
xchg
mov
xor
rcl
jecxz
loopne
mov
inc
loop
std
inc
rol
push
in
add
xor
cmp
lea
iret
(bad)
fisub
out
je
and
adc
in
lahf
out
push
pop
push
test
sar
sub
outs
cmp
adc
adc
adc
add
xor
add
and
push
cmps
and
das
mov
loopne
aad
xor
sub
dec
push
pusha
les
cmp
outs
das
jge
add
aam
add
push
pop
aad
aas
dec
div
ja
in
mov
test
gs
minps
arpl
hlt
jne
pusha
xchg
cmp
cmc
popa
pop
push
adc
mov
add
jne
xchg
mov
ss
mov
and
jo
inc
out
movs
mov
es
(bad)
xor
pusha
cmps
push
movs
mov
xor
xchg
xlat
rol
mov
icebp
korb
scas
mov
add
xor
ret
jbe
test
add
ret
data16
out
je
and
adc
loope
rcl
and
jne
dec
add
add
and
adc
xor
aaa
lock
lds
and
pop
cmps
xor
sbb
add
and
jbe
sbb
inc
push
pusha
les
movs
dec
inc
inc
lds
je
push
inc
inc
aam
add
push
push
aad
aas
ins
div
ja
in
mov
test
gs
in
nop
gs
dec
mov
outs
cmc
pop
pop
dec
push
mov
push
stos
gs
mov
push
ret
adc
inc
xor
mov
ss
mov
and
jo
inc
jmp
mov
pusha
mov
xor
xchg
xlat
loopne
not
out
pop
in
out
scas
loope
ffreep
cmps
push
retf
xor
mov
mul
aam
iret
in
gs
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
(bad)
(bad)
push
inc
and
push
adc
push
pop
aad
aas
inc
test
in
mov
test
push
inc
minps
jo
push
hlt
dec
mov
dec
cmc
and
pop
push
(bad)
xchg
mov
gs
test
push
rol
jne
xchg
scas
adc
lods
mov
and
jo
inc
lea
pushf
es
mov
test
push
stc
mov
xor
rcl
jecxz
in
test
inc
loop
inc
(bad)
rcl
ret
xor
sar
shl
add
iret
(bad)
frstor
out
je
and
adc
cmps
lahf
jmp
test
shl
cmp
outs
cmp
xchg
adc
adc
or
push
lock
lds
and
add
ss
aad
xor
sub
arpl
les
xor
outs
das
popa
mov
outs
aam
add
push
pop
aad
aas
inc
div
ja
in
mov
test
adc
inc
punpcklbw
pop
addr16
hlt
jae
pusha
xchg
jbe
jo
jl
push
push
cmps
xchg
movs
add
push
mul
test
push
cmps
xchg
jne
xchg
mov
div
fiadd
movs
mov
popf
cmps
shl
cmps
push
cmps
mov
xor
jecxz
rol
mov
inc
jecxz
hlt
inc
rol
movs
push
call
aad
push
(bad)
mov
shl
add
ret
data16
aam
retf
adc
mov
pop
and
add
xor
adc
fs
sub
push
cmc
sbb
cs
aaa
xor
and
pop
cmps
(bad)
and
xor
push
(bad)
ja
pusha
les
ins
movs
dec
inc
push
(bad)
js
pop
aam
add
push
outs
aad
aas
inc
div
ja
in
mov
test
jle
dec
cmovae
outs
addr16
hlt
imul
outs
push
lea
jmp
add
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
add
add
cmp
xchg
and
add
inc
adc
cmp
movs
add
dec
lds
and
push
cmps
popa
daa
dec
mov
loopne
aad
xor
es
dec
push
pop
les
cmp
arpl
jl
push
inc
push
aam
add
push
sub
mul
inc
in
mov
test
gs
in
divps
jo
jae
inc
mov
or
pusha
pop
push
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
lock
lods
mov
and
jo
inc
cmps
movs
movs
and
std
cmps
popf
xor
pusha
mov
xor
rcl
inc
std
adc
inc
loop
loope
stc
(bad)
xlat
push
(bad)
add
xor
fistp
shl
add
iret
pop
data16
ret
and
adc
repz
in
push
pop
push
test
shl
sub
outs
jns
dec
pop
adc
and
add
push
adc
aaa
mov
aaa
add
lds
dec
and
add
and
jnp
sbb
(bad)
arpl
les
cmp
outs
das
jnp
push
inc
pop
aam
add
push
push
push
aas
jb
push
ja
in
mov
test
gs
in
andnps
jo
jb
inc
mov
inc
cmc
cmp
push
push
cmps
xchg
mov
mov
mov
nop
xchg
jne
xchg
mov
div
fiadd
movs
mov
loope
mov
push
mov
fist
inc
les
test
inc
jecxz
sti
inc
rol
push
test
ret
push
lock
shl
add
ret
data16
and
adc
fstp
and
add
and
or
push
cmc
push
adc
movzx
aaa
movs
pop
lock
sub
or
add
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
cmps
movs
mov
mov
pusha
mov
xor
jecxz
loopne
in
lods
and
out
scas
inc
(bad)
scas
push
jecxz
(bad)
xor
(bad)
mov
(bad)
fs
xor
gs
(bad)
fsub
out
je
and
adc
out
lahf
in
aaa
pop
and
add
xchg
pop
adc
adc
or
add
pop
lds
and
sbb
mov
loopne
aad
xor
sub
dec
push
pop
les
cmp
arpl
jge
jns
jno
push
add
push
pop
aad
aas
dec
div
inc
in
mov
test
gs
in
subps
cmp
mov
push
cmc
arpl
je
mov
push
cli
gs
mov
push
mov
inc
xchg
xchg
mov
div
fiadd
movs
mov
xchg
mov
xor
rcl
in
movs
adc
inc
loop
rol
clc
push
(bad)
add
xor
ret
mov
ret
xor
iret
(bad)
cld
data16
out
je
and
adc
cmps
lahf
rcl
(bad)
sar
inc
add
xchg
pop
push
xchg
and
add
push
adc
xor
xor
dec
lds
dec
push
cmps
push
daa
or
or
and
jnp
or
(bad)
push
push
arpl
inc
nop
sub
outs
das
cmp
aam
add
push
jbe
add
jae
ss
in
mov
test
jns
inc
andnps
jo
add
xchg
aaa
jne
cmc
and
dec
push
cmps
xchg
mov
gs
test
add
scas
xchg
jne
xchg
xchg
adc
xchg
mov
and
jo
inc
mov
and
cmps
mov
push
mov
fild
inc
call
jecxz
enter
jecxz
out
fcmovnb
ret
push
int
shl
mov
loope
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
imul
inc
outs
aam
adc
dec
aad
aas
inc
imul
inc
in
mov
test
push
dec
divps
fs
dec
mov
dec
cmc
das
pop
pushw
mov
sahf
add
push
sti
gs
out
mov
adc
inc
xor
in
adc
xchg
mov
and
jo
inc
out
movs
test
mov
mov
xchg
push
in
enter
stos
push
jecxz
loopne
loopne
mov
inc
out
scas
std
inc
(bad)
mov
xor
test
(bad)
fs
add
ret
(bad)
frstor
out
je
and
adc
out
jmp
shl
cmp
cmp
add
pop
xchg
pop
rol
push
adc
adc
daa
lock
lds
push
cmps
popa
daa
inc
mov
loopne
aad
xor
adc
dec
push
push
les
sub
arpl
jnp
inc
inc
cmp
bound
push
aad
aas
jno
push
ja
in
mov
test
push
inc
punpcklwd
jae
add
ja
arpl
addr16
push
push
(bad)
xchg
mov
gs
mov
xchg
xchg
xchg
pushf
adc
xchg
mov
and
jo
inc
xchg
movs
lods
and
mov
test
pusha
mov
xor
rcl
inc
lods
adc
inc
loop
hlt
inc
out
ficom
ret
xor
cmp
fs
lea
iret
(bad)
(bad)
data16
out
je
and
adc
mov
pop
adc
add
xor
pop
pop
gs
sub
add
push
adc
xor
xor
pop
lds
adc
mov
loopne
aad
xor
push
(bad)
dec
push
pusha
les
movs
push
inc
cmp
outs
das
(bad)
(bad)
bound
aam
add
push
js
inc
aas
dec
test
in
mov
test
inc
in
minps
jnp
jg
outs
mov
push
cmc
jp
push
add
push
sti
xchg
mov
adc
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
mov
pop
push
test
sar
dec
add
xchg
arpl
adc
push
mov
aaa
movs
push
lock
lds
and
add
pavgb
aad
xor
and
addr16
arpl
jnp
sub
bound
jle
push
inc
push
aam
add
push
sub
add
dec
not
inc
in
mov
test
pop
in
minps
fs
inc
mov
adc
and
xchg
sahf
add
push
cli
gs
test
push
nop
xchg
jne
xchg
xchg
adc
mov
and
xlat
inc
mov
pushf
es
(bad)
xor
pusha
mov
xor
repz
jecxz
rcl
and
out
scas
hlt
inc
add
(bad)
xor
(bad)
mov
lock
jmp
data16
fdiv
loopne
cmc
cmc
lea
lahf
rcl
shl
xor
outs
add
push
rol
pop
adc
xor
or
push
lds
dec
and
cmp
es
xor
pop
(bad)
push
push
push
les
xor
pop
inc
inc
lds
inc
(bad)
sbb
add
push
sub
div
inc
in
mov
test
pop
in
packsswb
jo
(bad)
hlt
inc
mov
outs
cmc
and
push
push
lea
cli
movs
test
test
xchg
xchg
scas
adc
lods
mov
and
jo
inc
stos
movs
mov
es
pushf
xor
pusha
mov
xor
out
loopne
rcl
test
inc
loop
sti
inc
rol
push
in
add
xor
ret
jbe
test
add
iret
pop
data16
out
je
and
adc
cmps
lahf
jmp
shl
in
add
xchg
pop
pop
xchg
push
rol
pop
adc
or
and
push
lds
and
add
and
push
mov
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
mov
xchg
call
push
mov
fbld
inc
out
test
inc
jecxz
jecxz
rol
push
call
aad
push
sar
(bad)
mov
ret
lock
je
and
adc
movs
lahf
jmp
sar
dec
add
cmp
xchg
and
adc
or
add
pop
lds
dec
sbb
and
das
mov
loopne
aad
xor
sub
push
push
arpl
jns
movs
push
inc
inc
lds
jl
jns
cs
add
push
jns
pop
aas
dec
div
ja
in
mov
test
in
(bad)
out
addr16
hlt
inc
mov
adc
js
push
push
mov
nop
add
push
hlt
gs
add
xchg
inc
xor
cwde
adc
mov
jo
inc
jmp
es
cmps
xor
pusha
mov
xor
int
loop
cmps
adc
inc
out
scas
rol
aad
aad
(bad)
xor
fidivr
lock
xchg
add
ret
(bad)
jecxz
(bad)
test
loopne
cmc
cmc
lock
lahf
rcl
(bad)
shl
dec
add
sbb
cmp
and
adc
xor
xor
pop
lds
dec
adc
popa
daa
cmp
aad
xor
adc
jae
push
les
sub
arpl
jnp
inc
pusha
aam
add
push
dec
aad
aas
jae
inc
ja
in
mov
test
jb
inc
packsswb
jo
jle
dec
mov
push
cmc
jnp
push
push
(bad)
xchg
mov
gs
test
push
mov
xchg
xchg
mov
(bad)
dec
and
jo
inc
mov
sahf
and
mov
push
rcl
inc
lock
and
loop
out
in
aam
call
aad
push
cmp
xlat
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
daa
mov
cmp
inc
adc
push
dec
aad
aas
push
test
in
mov
test
jns
inc
cmovae
pusha
addr16
hlt
dec
mov
push
cmc
pusha
pop
gs
xchg
xchg
mov
gs
out
mov
adc
inc
xor
call
lods
mov
and
jo
inc
out
movs
shl
movs
cmps
movs
xor
pusha
cmps
push
mov
fbld
loop
mov
inc
jecxz
cld
inc
rol
push
(bad)
add
xor
test
ret
fdiv
xchg
add
ret
mov
je
and
adc
in
jmp
push
pop
and
add
and
cmp
rol
add
jg
mov
aaa
xor
and
and
mov
loopne
aad
xor
push
(bad)
push
push
les
xor
jne
pop
lds
inc
(bad)
jns
inc
aam
add
push
jge
pop
aas
jb
push
ja
in
mov
test
dec
in
punpcklbw
and
hlt
jbe
xchg
data16
cmc
jp
push
push
lea
mul
test
push
mov
inc
xor
pushf
adc
mov
jo
inc
xchg
movs
mov
es
shl
mov
xor
jecxz
loop
mov
(bad)
out
scas
fadd
(bad)
not
(bad)
xor
test
icebp
div
fwait
add
ret
(bad)
aam
loopne
cdq
je
and
adc
scas
lahf
rcl
push
sar
xor
adc
adc
push
xchg
push
rol
pop
adc
imul
lock
sbb
add
aaa
loopne
aad
xor
sub
push
push
pop
les
popa
movs
dec
inc
arpl
arpl
jle
jno
popa
aam
add
push
pop
aad
aas
dec
mul
inc
in
mov
test
inc
in
cmove
cmp
mov
pop
cmc
push
pop
pop
push
(bad)
xchg
mov
mov
mov
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
scas
lahf
(bad)
xchg
and
push
test
shr
adc
and
sub
add
pop
adc
add
movs
sbb
dec
lds
and
push
cmps
push
daa
cmp
xor
sbb
jae
pusha
les
push
lds
popa
mov
outs
add
push
jb
(bad)
jns
ss
in
mov
test
sbb
inc
divps
jo
jnp
push
mov
push
cmc
ins
pop
pop
push
adc
sahf
add
add
jne
xchg
mov
lods
mov
and
jo
inc
mov
and
cmps
movs
xor
pusha
cmps
push
mov
fild
inc
fcom
mov
faddp
int
jecxz
lds
(bad)
ficom
shl
mov
lds
nop
add
ret
mov
je
and
adc
cli
lahf
rcl
and
ja
xor
outs
add
push
rol
push
adc
xor
add
push
lds
and
and
mov
loopne
aad
xor
pop
(bad)
addr16
les
xor
gs
inc
lds
inc
(bad)
jns
ins
aam
add
push
push
aad
aas
jno
ss
in
mov
test
push
dec
packsswb
addr16
hlt
jb
xchg
gs
cmc
gs
push
push
(bad)
xchg
nop
add
push
cli
mov
mov
nop
xchg
jne
xchg
xchg
adc
mov
jo
inc
jmp
mov
pusha
mov
xor
int
loopne
rcl
and
out
scas
loope
loop
loop
(bad)
add
xor
int
retf
idiv
fs
xor
add
ret
(bad)
fisub
out
je
and
adc
loope
call
test
shl
in
add
and
xor
add
pop
adc
sub
movs
cmp
daa
lds
and
push
cmps
popa
daa
pop
mov
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
leave
inc
jmp
es
movs
xor
pusha
mov
xor
rcl
inc
sti
adc
inc
loop
inc
(bad)
fist
ret
xor
cmp
fs
xor
add
iret
(bad)
lahf
data16
out
je
and
adc
fstp
adc
add
jns
das
pop
cmp
adc
sub
movs
sub
and
pop
cmps
cmp
xor
xor
push
(bad)
arpl
les
nop
sub
outs
das
popa
(bad)
push
inc
das
aam
add
push
push
pop
aas
dec
not
jle
push
mov
test
imul
das
addr16
hlt
push
mov
or
jo
push
push
mov
movs
add
push
lock
mov
push
mov
inc
xor
in
adc
div
xlat
inc
test
cmps
cmps
cmps
mov
push
cmps
mov
xor
int
rol
mov
icebp
(bad)
jecxz
mov
hlt
push
rol
shl
mov
lds
xchg
add
ret
data16
out
icebp
and
adc
cld
lahf
rcl
shl
syscall
push
test
outs
add
adc
push
cmc
add
jg
mov
aaa
xor
and
and
add
and
ja
sub
ja
pusha
les
xor
lds
xor
aam
add
push
dec
aad
aas
dec
test
in
mov
test
jb
dec
cmovno
jl
pop
hlt
jbe
xchg
jg
dec
cmc
cs
push
lea
cmps
xchg
mov
adc
inc
xor
mov
ss
mov
and
jo
inc
out
movs
test
mov
pusha
mov
xor
int
jecxz
in
adc
inc
out
scas
mov
aam
lds
(bad)
xor
(bad)
mov
mul
aam
iret
in
gs
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
cmp
push
inc
cmp
mov
push
jns
addr16
ins
div
inc
in
mov
test
in
divps
inc
addr16
jge
arpl
es
imul
xchg
push
test
aam
inc
test
xchg
xchg
mov
sar
div
mov
movs
fisub
mov
pusha
mov
xor
not
loopne
ret
adc
and
loop
mov
push
call
aad
push
cmp
div
call
(bad)
(bad)
data16
ret
je
and
adc
mov
pop
adc
add
and
xor
add
pop
adc
or
pop
lock
lds
and
and
xor
adc
xor
adc
dec
push
(bad)
les
aaa
movs
jne
pop
lds
inc
mov
aam
add
push
sub
pop
aas
jo
ins
ja
in
mov
test
jno
inc
pcmpgtd
pop
outs
hlt
jb
pusha
xchg
jbe
adc
jnp
push
push
adc
test
mov
xchg
fst
mov
xor
inc
test
mov
xor
pusha
cmps
push
movs
mov
xor
xchg
xlat
rol
mov
xchg
lds
scas
rol
into
push
ret
xor
(bad)
mov
ret
div
out
add
ret
data16
out
je
and
adc
fstp
and
add
and
adc
adc
or
push
lock
lds
dec
pop
cmps
push
daa
das
mov
loopne
aad
xor
sub
addr16
arpl
jae
arpl
bound
(bad)
(bad)
dec
inc
inc
aam
add
push
jbe
jnp
ins
test
in
mov
test
jle
dec
nop
cs
push
mov
pop
cmc
push
pop
push
push
mov
push
jmp
add
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
push
test
shr
in
add
and
or
add
inc
adc
or
cs
lds
and
pop
cmps
outs
daa
inc
mov
loopne
aad
xor
push
(bad)
dec
push
push
les
sub
lds
aas
mov
aam
add
push
dec
aad
aas
ins
not
inc
in
mov
test
in
nop
cmp
hlt
dec
mov
or
and
dec
push
lea
cli
movs
test
mov
inc
xchg
xchg
mov
ss
mov
and
jo
inc
mov
iret
fwait
es
lds
mov
xor
rcl
loopne
stc
adc
inc
loop
mov
push
rol
xor
aam
shl
test
add
iret
(bad)
out
fucom
in
mul
out
out
mov
lahf
rcl
and
jbe
or
push
xchg
pop
xor
adc
add
push
adc
aaa
mov
aaa
add
lds
xor
sbb
cs
loopne
aad
xor
adc
push
push
(bad)
les
aaa
movs
jne
push
mov
aam
add
push
push
push
aas
jo
push
ja
in
mov
test
gs
packsswb
cmp
mov
inc
cmc
popw
push
push
mov
mov
gs
xchg
fld
xor
adc
mov
and
jo
inc
lods
movs
scas
and
(bad)
cmps
cmps
xor
pusha
cmps
push
mov
fbld
inc
not
out
mov
out
inc
(bad)
push
rol
shl
mov
ret
fdiv
clc
add
ret
data16
(bad)
je
and
adc
fcomp
and
add
jle
adc
rol
sbb
sub
adc
add
movs
add
cmps
push
daa
pop
mov
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
stos
movs
fisub
(bad)
cmps
xchg
xor
pusha
mov
xor
xchg
xlat
loopne
std
adc
inc
out
scas
jmp
(bad)
push
jecxz
(bad)
xor
idiv
icebp
shl
retf
in
gs
(bad)
lahf
iretw
out
je
and
adc
aam
int
add
and
add
xor
xchg
das
rol
pop
adc
cs
aaa
add
and
adc
sbb
xor
aad
xor
adc
arpl
les
nop
cmp
arpl
inc
(bad)
sbb
add
push
xor
inc
aas
jo
push
ja
in
mov
test
adc
inc
andps
inc
addr16
hlt
inc
mov
arpl
outs
pop
push
push
(bad)
xchg
mov
gs
add
xchg
xchg
xchg
nop
adc
div
rol
movs
(bad)
and
cdq
cmps
nop
xor
pusha
mov
xor
rcl
in
stc
adc
inc
loop
lds
(bad)
in
fadd
ret
xor
fnstsw
ret
xor
gs
(bad)
out
out
fbstp
out
out
into
jne
lahf
rcl
and
ja
or
sbb
pop
pop
adc
adc
xor
inc
lock
lds
and
adc
and
adc
xor
pop
(bad)
dec
push
arpl
pop
nop
sub
lds
cmp
push
inc
pop
aam
add
push
cs
aas
pop
test
in
mov
test
jge
inc
cmova
and
mov
push
cmc
and
xchg
mov
mov
out
fld
xor
mov
mov
mov
and
jo
inc
jmp
iret
frstor
out
cmps
mov
push
mov
fisttp
inc
not
jmp
leave
(bad)
jecxz
mov
push
in
add
xor
cwde
mov
loope
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
mov
aam
adc
sub
div
ja
in
mov
test
jle
dec
cmovnp
gs
hlt
adc
inc
cmc
pop
pop
push
push
(bad)
xchg
xchg
add
push
movs
gs
push
ret
adc
inc
xor
mov
ss
and
fiadd
movs
scas
and
mov
pusha
mov
xor
repz
jecxz
fcom
mov
inc
out
scas
ret
inc
mov
(bad)
xor
xchg
lock
call
out
je
and
adc
in
rcl
shl
syscall
add
adc
jns
pop
rol
pop
adc
xor
add
push
lds
and
and
xor
xor
adc
jae
push
les
xor
arpl
inc
(bad)
cmova
add
push
pop
aad
aas
ja
jno
inc
in
mov
test
gs
in
pcmpgtd
pop
addr16
hlt
ins
mov
pop
cmc
dec
pop
pop
push
mov
push
lock
test
push
mov
inc
xchg
xchg
nop
adc
div
(bad)
inc
out
(bad)
and
std
cmps
scas
xor
pusha
mov
xor
out
in
out
adc
loop
ret
(bad)
rcl
ret
xor
loope
test
shl
add
iret
pop
data16
(bad)
je
and
adc
rcr
push
test
add
sub
push
rol
pop
adc
es
aaa
add
and
pop
cmps
cmp
ds
loopne
aad
xor
or
dec
push
arpl
inc
nop
push
dec
inc
cmp
outs
das
jbe
push
inc
jae
jne
inc
mov
push
dec
aad
aas
ins
div
ja
in
mov
test
inc
in
nop
dec
addr16
push
mov
or
push
pop
dec
push
adc
xchg
add
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
cmps
lahf
test
xor
sub
push
add
jg
adc
rol
sbb
sub
pop
lock
je
pop
movs
add
cmps
bound
adc
adc
and
ja
dec
mov
pop
or
les
push
lds
jnp
push
inc
ins
aam
add
push
ins
aad
aas
outs
imul
inc
in
mov
test
pop
in
(bad)
out
addr16
inc
mov
pop
cmc
and
push
push
lea
mul
test
push
mov
inc
xor
jmp
xchg
(bad)
inc
scas
movs
scas
and
mov
shl
mov
xor
xchg
xlat
loop
movs
adc
inc
out
scas
rol
fst
(bad)
xor
sar
lock
add
ret
(bad)
out
(bad)
shl
loopne
div
in
jne
lahf
(bad)
xchg
aaa
pop
and
in
add
or
xadd
cmc
pop
adc
cmp
pop
lock
lds
and
and
mov
loopne
aad
xor
adc
push
push
push
les
movs
push
inc
push
lds
inc
(bad)
jns
dec
aam
add
push
sub
pop
aas
ja
jno
inc
in
mov
test
push
out
addr16
hlt
or
add
outs
pop
jnp
lea
mov
test
mov
inc
xchg
xchg
mov
div
aam
mov
iret
fsub
(bad)
cmps
scas
xor
pusha
mov
xor
not
loopne
icebp
adc
and
loop
mov
push
in
add
xor
mov
ret
lock
gs
(bad)
aad
hlt
out
je
and
adc
mov
pop
adc
add
jge
sbb
push
xchg
xor
adc
cs
aaa
add
and
pop
cmps
and
cmp
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
mov
es
cmps
mov
push
mov
fisttp
inc
not
jmp
leave
(bad)
jecxz
mov
push
cmc
add
xor
lock
shl
add
ret
mov
je
and
adc
cmps
lahf
into
xchg
and
and
add
xchg
das
xchg
sub
push
cmc
sbb
adc
push
jg
mov
aaa
xor
and
cmps
sbb
cmp
xor
adc
inc
push
les
inc
dec
lds
pop
mov
aam
add
push
push
aad
aas
jno
ss
in
mov
test
outs
in
punpcklwd
addr16
jne
xchg
data16
cmc
jg
push
push
mov
nop
add
push
mul
test
push
add
jne
xchg
xchg
adc
mov
test
jo
inc
jmp
mov
mov
pusha
mov
xor
jecxz
loop
cmc
adc
inc
out
scas
les
(bad)
movs
push
retf
xor
out
mov
lock
xchg
add
ret
(bad)
out
(bad)
shl
loopne
div
ret
lahf
xlat
xchg
add
and
in
add
add
pop
rol
pop
adc
xor
ss
lds
push
movs
cmovg
mov
loopne
aad
xor
adc
push
push
push
les
sub
arpl
jnp
inc
inc
and
mov
push
dec
aad
aas
jae
jno
inc
in
mov
test
in
nop
inc
addr16
hlt
dec
mov
or
and
dec
push
mov
push
in
gs
test
push
xchg
xchg
jne
xchg
lock
xchg
mov
and
jo
inc
nop
movs
fisub
lahf
cmps
scas
xor
pusha
mov
xor
not
loopne
int
jmp
scas
mov
push
in
add
xor
xchg
out
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
cmp
add
aam
adc
push
xor
jo
jae
ins
ja
in
mov
test
inc
in
nop
pop
addr16
push
mov
jg
push
pop
dec
push
adc
sti
add
cmps
xchg
fist
lods
div
fiadd
movs
mov
loope
mov
push
mov
fisttp
fst
test
inc
jecxz
cmc
inc
cdq
(bad)
ficom
shl
mov
lds
xchg
add
ret
data16
int3
je
and
adc
loop
rcl
sub
add
add
sbb
push
cmc
add
jg
mov
aaa
xor
and
cmps
sbb
cs
loopne
aad
xor
pop
(bad)
inc
push
les
xor
bound
inc
(bad)
push
inc
jl
dec
add
push
jno
ins
aas
jnp
inc
ja
in
mov
test
dec
in
pcmpgtb
and
hlt
imul
cmc
jae
push
push
lea
lock
cmps
add
xchg
xchg
xchg
xchg
xchg
adc
mov
test
movs
mov
or
es
cmps
xchg
xor
pusha
mov
xor
repz
loop
in
adc
inc
out
scas
ret
inc
xlat
(bad)
out
rol
(bad)
xor
(bad)
mov
lock
add
ret
(bad)
loope
lock
je
and
adc
in
lahf
rcl
adc
imul
and
xchg
pop
jns
sub
add
pop
adc
cs
aaa
add
and
adc
xor
pop
mov
loopne
aad
xor
or
arpl
les
sub
arpl
aas
(bad)
pop
inc
jo
jo
inc
mov
push
jge
jno
ins
test
in
mov
test
in
nop
pop
addr16
xchg
cmp
cmc
push
pop
dec
push
(bad)
xchg
mov
gs
test
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
in
lahf
fist
xor
and
test
outs
jl
inc
pop
popa
xchg
rol
push
adc
das
mov
aaa
add
and
pop
cmps
(bad)
ds
loopne
aad
xor
or
dec
push
arpl
push
nop
sub
lds
jnp
add
aam
add
push
(bad)
aad
aas
jno
inc
ja
in
mov
test
gs
in
andps
cmp
hlt
dec
mov
or
cmp
push
push
mov
movs
add
push
mul
test
add
cmps
xchg
jne
xchg
mov
lods
mov
and
jo
inc
xchg
movs
stos
and
cmps
cmps
les
pusha
cmps
push
movs
mov
xor
xchg
xlat
rol
mov
fcmovnb
fld
scas
lds
(bad)
ficom
shl
mov
lds
xchg
add
ret
data16
shl
adc
repnz
fist
shl
es
add
push
pop
pusha
xchg
or
push
cmc
pop
adc
xor
movs
adc
and
and
das
loopne
aad
xor
push
(bad)
addr16
les
xor
bound
inc
mov
aam
add
push
popa
aad
aas
jb
ss
in
mov
test
jb
dec
punpcklwd
ja
jne
jl
xchg
gs
cmc
bound
push
push
lea
hlt
gs
add
nop
inc
xor
scas
adc
mov
jo
inc
test
fwait
es
cmps
xor
pusha
mov
xor
int
loop
mov
korw
scas
sti
inc
cli
(bad)
rcl
(bad)
xor
test
icebp
repnz
gs
(bad)
aam
loopne
int3
je
and
adc
rcr
and
add
jl
aas
pop
push
xchg
xor
add
pop
adc
xor
daa
lock
cs
push
cmps
sbb
xor
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
fild
movs
stos
and
mov
pusha
mov
xor
out
loopne
cld
adc
and
loop
mov
push
jmp
ret
xor
lock
ret
fs
mov
iret
(bad)
aam
hlt
out
je
and
adc
out
lahf
int3
xchg
xor
adc
add
add
push
rol
adc
jg
mov
aaa
add
and
adc
jns
adc
xor
adc
jae
(bad)
les
nop
xor
gs
cmp
outs
das
inc
(bad)
jl
jg
dec
add
push
push
aad
aas
jo
ss
in
mov
test
gs
(bad)
out
addr16
jl
pusha
xchg
jbe
push
cmc
jle
push
push
mov
movs
add
push
cmc
gs
xchg
add
fld
xor
xchg
adc
lods
mov
and
jo
inc
mov
test
jecxz
(bad)
xor
pusha
cmps
push
cmps
mov
xor
int
rol
mov
int3
(bad)
jecxz
leave
inc
clc
(bad)
movs
push
into
add
xor
aam
div
test
add
ret
repnz
je
and
adc
(bad)
lahf
rcl
and
ja
xor
outs
add
adc
adc
aaa
mov
aaa
xor
and
and
ss
aad
xor
adc
addr16
les
inc
aas
lds
je
push
inc
je
add
push
push
aad
aas
ja
inc
ja
in
mov
test
gs
in
punpcklwd
pop
addr16
hlt
jge
xchg
gs
cmc
gs
push
push
lea
cli
gs
scas
add
cmps
xchg
jne
xchg
lahf
adc
mov
jo
inc
scas
movs
pushf
and
(bad)
cmps
nop
xor
pusha
mov
xor
jecxz
jecxz
repnz
and
out
scas
mov
push
jmp
aad
push
int
sti
jbe
div
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jnp
push
inc
push
aam
adc
push
jno
jae
ins
not
inc
in
mov
test
jb
inc
nop
pop
addr16
pop
mov
jl
push
pop
push
push
(bad)
xchg
mov
mov
mov
mov
inc
xchg
xchg
pushf
adc
lods
mov
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
rcl
inc
jecxz
mov
iret
lds
inc
out
rcl
ret
xor
test
ret
xor
gs
(bad)
jecxz
out
(bad)
je
and
adc
jecxz
xlat
xchg
push
pop
adc
add
pop
xchg
xor
adc
aaa
mov
aaa
add
lds
movs
add
cmps
sbb
adc
xor
and
jge
dec
mov
pop
adc
push
push
(bad)
les
xor
outs
das
inc
(bad)
jl
addr16
add
push
jp
outs
aas
jne
push
ja
in
mov
test
in
punpckhwd
jb
add
xchg
jbe
ins
cmc
je
push
push
mov
movs
add
push
repnz
test
iret
xchg
jne
xchg
xchg
adc
div
xlat
inc
test
mov
xor
pusha
cmps
push
cmps
mov
xor
jecxz
rol
mov
icebp
korb
scas
ret
inc
ret
(bad)
mov
xor
les
lds
xchg
add
ret
data16
out
je
and
adc
movs
lahf
rcl
adc
jp
xor
outs
cmp
and
push
cmc
add
jg
mov
aaa
xor
and
and
pavgb
aad
xor
or
push
push
pusha
les
push
dec
inc
jl
bound
aas
(bad)
jg
inc
aam
add
push
dec
aad
aas
jae
ins
ja
in
mov
test
in
nop
cs
pop
mov
jg
push
pop
push
push
lea
sti
gs
mov
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
loopne
aam
and
push
test
shr
in
add
jne
push
pop
adc
adc
sub
push
lock
ds
pop
cmps
and
loopne
aad
xor
push
(bad)
push
push
push
les
sub
arpl
jbe
sbb
aam
add
push
jbe
push
aas
jae
jno
inc
in
mov
test
inc
in
punpckldq
jae
add
inc
mov
ja
bound
push
push
mov
push
sti
pop
pushf
push
test
xchg
xchg
mov
lods
mov
and
jo
inc
xchg
movs
(bad)
and
out
cmps
mov
push
mov
xchg
xor
rcl
inc
ret
and
loop
lds
(bad)
in
fadd
ret
xor
fidivr
ret
xor
gs
(bad)
out
mul
shl
out
out
fidiv
lahf
(bad)
xchg
or
shl
inc
add
add
or
add
push
adc
ss
aaa
add
lds
or
add
cmps
sbb
sbb
sub
xor
adc
dec
push
(bad)
les
aaa
movs
dec
inc
pop
lds
inc
(bad)
push
inc
inc
aam
add
push
push
push
aas
jo
push
ja
in
mov
test
jns
inc
(bad)
out
addr16
jne
pusha
xchg
jne
js
arpl
push
push
adc
mov
mov
inc
xor
mov
mov
mov
xor
inc
jmp
es
push
mov
fist
inc
mov
(bad)
jecxz
ret
(bad)
lock
in
shl
mov
shl
add
ret
data16
and
adc
rcr
and
add
jle
dec
pop
adc
adc
sub
movs
and
and
sbb
and
aaa
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
xchg
fisub
lahf
cmps
cmps
xor
pusha
mov
xor
jecxz
jecxz
in
out
and
out
scas
mov
push
test
stc
push
lock
icebp
fs
xor
gs
(bad)
aad
lock
je
and
adc
loopne
rcl
jg
ins
in
add
sbb
pop
pop
and
and
adc
xor
add
and
daa
cmps
daa
daa
cmp
aad
xor
pop
(bad)
push
push
push
les
xor
arpl
dec
(bad)
cmova
mov
push
pop
aad
aas
jne
inc
ja
in
mov
test
sbb
inc
movq
pop
addr16
hlt
imul
cmc
inc
pop
push
push
mov
mov
gs
sti
add
xchg
xchg
xchg
stos
adc
xchg
mov
and
jo
inc
xchg
movs
lahf
and
out
cmps
shl
mov
xor
out
in
cli
adc
inc
loop
lds
(bad)
loopne
fadd
ret
xor
aam
bnd
test
add
iret
(bad)
out
out
xlat
je
and
adc
stc
lahf
rcl
and
ja
or
sbb
add
push
xchg
sbb
add
adc
jg
mov
aaa
add
lds
dec
cmp
jge
sbb
xor
adc
dec
push
arpl
push
nop
cmp
outs
das
je
add
aam
add
push
xor
(bad)
jno
push
ja
in
mov
test
jno
inc
nop
pusha
addr16
hlt
dec
mov
push
push
xchg
xchg
mov
gs
add
xchg
ficom
lods
ss
mov
and
jo
inc
jmp
iret
fsub
fwait
cmps
movs
xor
pusha
cmps
push
mov
fisttp
inc
not
jmp
retf
inc
jecxz
mov
push
jecxz
shl
mov
loope
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jne
inc
pop
aam
adc
push
jbe
outs
test
in
mov
test
dec
in
nop
bound
hlt
pop
mov
imul
pop
dec
push
(bad)
xchg
xchg
add
push
movs
gs
mov
push
fld
xor
jmp
ss
mov
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
jecxz
loop
jecxz
mov
mov
mov
inc
std
(bad)
mov
xor
fistp
lock
xchg
add
ret
(bad)
loopne
loop
fdiv
loopne
div
lea
lahf
(bad)
xchg
aaa
pop
and
in
add
or
or
add
pop
adc
cmp
sbb
push
lds
and
das
cmps
(bad)
pop
mov
loopne
aad
xor
sbb
arpl
les
movs
push
inc
push
lds
dec
(bad)
push
inc
pop
aam
add
push
push
aad
aas
ja
popa
ja
in
mov
test
dec
in
pcmpgtw
jb
inc
hlt
jl
arpl
jge
push
push
lea
mul
test
push
xchg
xchg
xchg
mov
lods
mov
and
jo
inc
out
mov
es
mov
push
mov
test
mov
nop
push
rcl
in
cmps
adc
inc
loop
rol
mov
xor
ret
jbe
test
add
iret
(bad)
(bad)
out
je
and
adc
out
lahf
rcl
sbb
imul
and
xchg
sub
sub
add
push
adc
xor
and
or
imul
add
xor
or
les
push
je
xor
outs
das
cmp
jnp
inc
aam
add
push
dec
aad
aas
ins
div
ja
in
mov
test
inc
in
nop
jns
add
push
mov
js
and
push
push
adc
mov
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
cmps
lahf
aad
xor
xor
add
je
add
sbb
cmc
sbb
sub
add
and
pop
cmps
cmp
pop
mov
loopne
aad
xor
or
les
cmp
bound
jnp
sbb
aam
add
push
jno
add
outs
div
ja
in
mov
test
inc
in
punpckldq
addr16
hlt
inc
mov
pop
cmc
bound
push
push
lea
mul
test
push
mov
inc
xor
mov
mov
jo
inc
mov
mov
out
cmps
mov
pusha
mov
xor
repz
loop
ret
and
out
scas
lds
(bad)
sti
push
leave
add
xor
loop
div
div
fs
xor
add
ret
(bad)
jmp
loop
out
jmp
loopne
div
cld
jne
lahf
aad
daa
pop
and
in
add
push
xchg
pop
cmp
or
adc
xor
add
push
lds
and
daa
cmps
daa
daa
and
xor
adc
dec
push
push
les
aaa
movs
push
inc
pop
lds
inc
(bad)
jns
pop
aam
add
push
dec
aad
aas
ja
inc
ja
in
mov
test
in
punpcklwd
arpl
hlt
ja
arpl
popa
pop
push
push
mov
push
hlt
movs
test
push
xchg
xchg
jne
xchg
mov
xor
inc
mov
iret
xchg
xchg
mov
xor
rcl
inc
(bad)
adc
inc
loop
mov
push
in
add
xor
(bad)
mov
ret
shl
lds
iret
(bad)
sahf
data16
out
je
and
adc
ficomp
adc
add
jge
inc
pop
adc
adc
cs
aaa
add
and
adc
mov
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
xchg
es
(bad)
xor
pusha
cmps
push
div
fwait
push
xchg
xlat
rol
mov
int3
korb
scas
cmc
inc
popf
(bad)
mov
xor
fnstsw
lds
xchg
add
ret
repnz
je
and
adc
cmc
lahf
test
and
jb
or
push
xchg
pop
push
xchg
jae
push
cmc
push
adc
fs
aaa
xor
and
sub
push
loopne
aad
xor
dec
(bad)
addr16
les
jnp
dec
inc
lds
dec
(bad)
push
inc
inc
aam
add
push
sub
(bad)
sub
ss
in
mov
test
outs
out
addr16
hlt
dec
mov
add
and
or
(bad)
xchg
nop
add
push
lea
test
push
mov
xchg
adc
inc
xor
mov
mov
jmp
and
jo
inc
stos
movs
cmps
and
mov
pusha
mov
xor
repz
loop
(bad)
adc
and
out
scas
into
inc
fadd
movs
push
out
add
xor
cwde
mov
lock
xor
add
ret
(bad)
out
data16
out
je
and
adc
mov
pop
and
in
add
jbe
xor
add
pop
adc
imul
je
pop
movs
cmovg
cmps
(bad)
ds
loopne
aad
xor
dec
(bad)
arpl
les
jnp
jae
push
lds
inc
(bad)
push
inc
jnp
aaa
add
push
pop
aad
aas
and
in
mov
test
outs
in
packuswb
das
addr16
push
arpl
jne
add
add
push
icebp
gs
test
mov
inc
xchg
xchg
jmp
div
(bad)
inc
xchg
movs
mov
es
cmps
xor
pusha
mov
xor
rcl
inc
rcl
mov
rol
fiadd
scas
sti
inc
ret
(bad)
mov
xor
cmp
xlat
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
dec
aad
aas
jbe
jae
push
in
mov
test
push
popa
cvtdq2ps
jo
jb
pusha
mov
dec
cmc
pusha
pop
push
push
mov
push
jmp
add
cmps
xchg
jne
xchg
mov
(bad)
push
and
jo
inc
xchg
movs
mov
es
push
xor
push
in
leave
inc
fst
mov
inc
icebp
scas
sti
inc
rol
rcl
xlat
xor
sar
fs
xor
gs
aad
(bad)
out
je
and
adc
cmps
lahf
aad
xor
add
add
xchg
pop
adc
cmc
and
cmp
cmp
and
sbb
and
aaa
aad
xor
adc
pusha
push
dec
les
sub
je
jne
inc
pop
aam
adc
jno
pop
aas
jne
push
ja
in
mov
test
popa
in
orps
pop
addr16
popa
mov
push
cmc
ins
pop
pop
push
movs
xchg
mov
test
push
nop
xchg
jne
xchg
stos
adc
xor
inc
xchg
xchg
xchg
mov
xchg
mov
xor
hlt
xlat
rol
and
cmc
scas
test
aad
rol
xor
int
sti
jbe
imul
fs
xor
ror
bnd
and
adc
loopne
aam
and
push
test
shr
es
xor
xchg
add
adc
xor
movs
cmp
pop
lds
and
push
cmps
sbb
xor
aad
xor
sbb
fs
dec
les
cmp
jno
jnp
push
inc
push
aam
adc
push
push
inc
aas
je
inc
ja
in
mov
test
imul
inc
addr16
mov
pop
cmc
and
push
push
xchg
xchg
test
jecxz
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
cmp
push
mov
aaa
xor
and
cmp
and
and
jg
cs
pop
sub
les
jno
pop
inc
popa
lds
das
jns
jp
fs
add
push
jb
(bad)
outs
mul
in
mov
test
pop
in
pcmpeqb
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
test
mov
push
xchg
xchg
ficom
stos
ss
mov
and
jo
inc
mov
iret
mov
xor
pusha
test
mov
xor
(bad)
xlat
in
rcl
mul
xchg
scas
cli
inc
out
call
loopne
(bad)
aad
push
cmp
xor
add
in
(bad)
jmp
out
je
and
adc
mov
pop
and
add
cmp
jo
cmp
xchg
dec
jg
mov
aaa
or
inc
lock
lds
and
cmps
push
daa
pop
mov
loopne
aad
xor
or
ins
push
push
les
je
outs
inc
(bad)
lds
das
jg
push
inc
jl
xor
push
aad
aas
push
push
ja
in
mov
test
inc
in
(bad)
out
addr16
hlt
adc
push
cmc
das
pop
dec
push
xchg
mov
mov
mov
push
cmps
xchg
jne
xchg
lahf
adc
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
jmp
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
std
xor
(bad)
mov
int3
xor
add
jmp
out
je
and
adc
mov
pop
adc
add
aas
xchg
cmp
jae
and
pop
adc
sub
dec
lock
cmp
dec
cmp
mov
loopne
aad
xor
(bad)
inc
push
les
ja
jae
jns
adc
jp
inc
jg
cmp
pusha
mov
push
pop
aad
aas
imul
add
inc
in
movq
je
pop
hlt
adc
dec
cmc
and
dec
push
test
push
mov
popf
test
push
mov
inc
mov
adc
movs
mov
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
aad
hlt
and
lahf
scas
inc
(bad)
cld
push
mov
loop
lahf
aad
push
cmp
mov
rol
in
(bad)
std
data16
les
les
scas
lahf
iret
xchg
pop
pop
and
in
add
cmp
jl
and
add
pop
xchg
inc
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
imul
movs
pop
inc
popa
lds
das
jns
jp
fs
cmp
push
pop
aad
aas
outs
mul
in
mov
test
pop
in
movd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
lods
xchg
xchg
add
push
mov
scas
test
push
xchg
xchg
fist
stos
ss
mov
and
jo
inc
mov
iret
mov
xor
pusha
test
mov
xor
(bad)
xlat
in
rcl
mul
xchg
scas
cli
inc
out
call
loopne
(bad)
aad
push
cmp
xor
add
in
(bad)
jmp
out
je
and
adc
mov
pop
and
add
cmp
jo
cmp
xchg
dec
jg
mov
aaa
or
inc
lock
lds
and
cmps
push
daa
pop
mov
loopne
aad
xor
or
ins
push
push
les
je
outs
inc
(bad)
lds
das
jg
push
inc
jl
xor
push
aad
aas
push
push
ja
in
mov
test
inc
in
(bad)
out
addr16
hlt
adc
push
cmc
das
pop
dec
push
xchg
mov
mov
mov
push
cmps
xchg
jne
xchg
lahf
adc
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
jmp
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
std
xor
(bad)
mov
int3
xor
add
jmp
out
je
and
adc
mov
pop
adc
add
sbb
add
add
pop
adc
or
movs
xor
lds
cmps
data16
and
xor
sub
dec
push
les
push
movs
cmovne
outs
das
pop
mov
aam
add
push
js
jb
dec
div
ja
in
mov
test
dec
in
cmovno
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
lods
add
push
mov
popf
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
call
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
cmps
lahf
iret
xchg
add
aaa
test
shl
in
add
xchg
gs
xor
and
inc
adc
sub
aaa
aaa
push
movs
pop
lock
imul
pop
mov
loopne
aad
xor
push
(bad)
adc
les
jae
adc
and
dec
das
jl
inc
inc
cmp
ja
jge
pop
push
sub
inc
aas
ins
imul
mov
test
add
outs
divps
and
hlt
push
mov
adc
gs
dec
push
xchg
xchg
mov
push
mov
leave
test
add
fld
mov
adc
lock
and
jo
inc
hlt
movs
shl
cmps
fnstenv
pusha
popf
push
mov
fisttp
inc
out
repnz
iret
scas
inc
(bad)
movs
push
repnz
xor
lds
jmp
in
gs
(bad)
frstor
out
je
and
adc
in
into
xchg
push
pop
add
add
cmp
pop
pop
jns
aaa
sar
add
mov
aaa
sub
lds
and
push
cmps
pusha
daa
inc
mov
loopne
aad
xor
or
push
push
dec
les
jo
or
lds
jge
sbb
and
push
xor
inc
aas
outs
div
ja
in
mov
test
pop
out
addr16
push
mov
or
popa
pop
dec
push
int
lea
push
mov
mov
mov
adc
inc
mov
adc
mov
and
nop
inc
mov
iret
lahf
mov
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
frstor
out
je
and
adc
cld
lahf
int
pop
pop
jne
daa
shl
in
add
cmp
cmp
adc
cmc
and
pop
xchg
sbb
aaa
or
and
sbb
mov
loopne
aad
xor
or
inc
push
les
jae
pop
inc
dec
lds
das
arpl
jge
pop
aam
sub
pop
push
pop
aad
aas
ins
not
inc
in
mov
test
in
subps
pop
addr16
dec
mov
jg
jge
push
push
adc
gs
add
xchg
jne
xchg
xchg
adc
movs
mov
and
jo
inc
mov
iret
and
cmps
mov
push
mov
fisttp
inc
(bad)
adc
and
xchg
scas
cld
inc
stc
(bad)
aad
call
aad
push
fnstsw
repnz
rol
dec
bnd
and
jne
lahf
int3
xchg
add
daa
test
shl
in
add
and
sub
push
sbb
sub
movs
push
lock
movs
jne
sbb
sbb
xor
aad
xor
adc
inc
push
push
les
jb
jo
inc
lds
jge
push
inc
push
aam
sub
pop
push
push
aad
aas
ins
mul
in
mov
test
ins
in
cmovae
pop
addr16
dec
mov
js
jl
dec
push
mov
movs
add
push
lods
gs
mov
mov
inc
jmp
push
and
jo
inc
hlt
movs
shl
cmps
mov
mov
push
scas
mov
xor
not
mov
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
frstor
out
je
and
adc
std
lahf
rcl
cmp
cs
add
and
push
rol
xor
jg
mov
aaa
xor
and
add
and
and
sub
cmp
dec
push
pop
les
cmp
popa
das
popa
mov
cmp
inc
mov
push
sub
not
inc
in
mov
test
pop
in
cmovo
pusha
addr16
adc
or
es
pop
push
xchg
xchg
xchg
add
push
in
gs
mov
push
cmps
xchg
jne
xchg
lahf
adc
div
fild
movs
(bad)
mov
xchg
xor
pusha
cmps
push
test
lahf
push
jecxz
loopne
(bad)
adc
inc
in
loope
stc
(bad)
icebp
push
cld
add
xor
(bad)
mov
icebp
fs
xchg
add
ror
je
and
adc
loop
ficom
add
add
daa
xchg
rol
and
jg
mov
aaa
add
and
add
push
loopne
aad
xor
pop
(bad)
ja
push
les
xor
lds
gs
sbb
add
push
popa
aad
aas
jp
push
ja
in
mov
test
outs
in
cmovne
and
hlt
pop
mov
js
jb
pop
push
(bad)
xchg
mov
test
movs
push
iret
xchg
jne
xchg
jmp
xchg
pop
movs
shl
popf
cmps
mov
push
stos
mov
xor
jmp
and
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
call
xor
add
cmp
jae
add
sbb
cmp
add
add
movs
add
cmps
sbb
and
push
loopne
aad
xor
pop
(bad)
jae
pop
les
inc
inc
lds
(bad)
jg
jne
add
push
dec
aad
aas
jg
jno
inc
in
mov
test
dec
in
addps
cmp
hlt
push
mov
push
cmc
cmp
pushw
mov
mov
gs
out
mov
adc
inc
xchg
xchg
stos
adc
lods
mov
and
jo
inc
mov
movs
and
mov
pusha
mov
xor
rcl
jecxz
sti
adc
inc
loope
inc
(bad)
xlat
push
out
ret
xor
test
shl
add
ror
je
and
adc
cmps
lahf
jmp
test
sar
pop
add
cmp
xchg
adc
adc
or
pop
lock
lds
and
add
ss
aad
xor
sub
jae
les
xor
pusha
das
pusha
mov
pop
aam
add
push
jp
popa
aas
inc
imul
jb
jle
pop
test
sbb
inc
cmove
jne
add
inc
mov
inc
cmc
push
pop
fs
xchg
xchg
cmps
add
push
mov
add
mov
mov
movs
inc
xor
mov
sar
xor
inc
mov
iret
popf
es
cmps
mov
push
mov
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
in
(bad)
xchg
push
pop
xor
cmp
imul
and
xchg
rol
sbb
jg
mov
aaa
movs
push
lock
movs
add
cmps
(bad)
and
xor
sbb
inc
push
arpl
ins
nop
push
lds
js
outs
inc
inc
aam
add
push
jns
(bad)
inc
not
inc
in
mov
test
pop
in
maxps
and
hlt
push
mov
push
cmc
and
pop
push
mov
sahf
add
push
jmp
add
cmps
xchg
adc
inc
xor
mov
fdivr
xchg
mov
and
fild
movs
mov
es
cmps
mov
push
in
xor
loop
mov
inc
out
scas
cld
inc
(bad)
(bad)
loop
scas
add
xor
stc
mov
(bad)
fs
leave
add
ret
pop
mov
and
adc
ret
xchg
daa
pop
and
add
and
or
add
inc
adc
or
cs
lds
and
add
xor
es
xor
and
push
push
pop
les
xor
arpl
(bad)
(bad)
js
inc
aam
add
push
dec
aad
aas
dec
not
inc
in
mov
test
pop
in
cmovbe
jne
jg
inc
mov
jg
push
pop
imul
xchg
push
lea
test
scas
xchg
jne
xchg
mov
(bad)
dec
and
jo
inc
movs
movs
mov
es
cmps
mov
push
mov
fisttp
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
in
aam
push
pop
sub
shr
dec
add
cmp
imul
cmc
sbb
jg
mov
aaa
add
and
sbb
sbb
and
cmp
sbb
dec
push
pusha
les
nop
push
or
push
mov
jle
inc
mov
push
jp
add
jge
push
ja
in
mov
test
pop
in
cmovae
jo
inc
hlt
push
mov
dec
cmc
das
pop
pop
push
adc
mov
nop
xchg
adc
inc
xor
test
ss
mov
and
jo
inc
in
movs
mov
loope
mov
mov
push
stc
mov
xor
xchg
xlat
fiadd
out
and
in
out
in
(bad)
cld
push
mov
shl
mov
shl
add
ror
je
and
adc
int
retf
pop
and
add
sub
cmp
push
cmc
pop
adc
cmp
adc
push
lds
and
add
xor
and
jp
xor
xor
(bad)
push
push
les
xor
popa
das
pusha
mov
aam
add
push
jne
addr16
dec
test
in
mov
test
gs
in
cmovne
and
hlt
inc
mov
jl
push
pop
imul
xchg
xchg
add
push
xchg
xchg
cmps
push
pushf
xchg
adc
inc
xor
lea
xchg
mov
and
jo
inc
xchg
cwde
es
cmps
mov
retf
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
loope
fist
cmp
jp
adc
aas
xchg
adc
adc
cmp
inc
lock
pop
and
pop
cmps
sbb
sub
push
loopne
aad
xor
sbb
arpl
les
inc
push
lds
(bad)
sbb
aam
add
push
dec
aad
aas
jle
popa
ja
in
mov
test
minps
inc
addr16
hlt
push
mov
push
cmc
and
pushw
lea
in
gs
xchg
test
xchg
xchg
stos
adc
xchg
mov
and
jo
inc
mov
mov
pushf
cmps
mov
push
mov
fisttp
inc
movs
adc
and
loope
mov
cld
mov
xor
loopne
jmp
xor
add
ror
je
and
adc
les
adc
add
xchg
adc
adc
das
mov
aaa
add
and
add
or
and
jbe
aaa
mov
pop
sub
push
push
les
xor
pusha
das
data16
jg
jle
popa
add
push
outs
aad
aas
inc
test
in
mov
test
pop
in
cmovne
jne
arpl
jge
pusha
xchg
cmp
cmc
and
fs
adc
mov
push
mov
fwait
adc
inc
xor
mov
div
rol
movs
mov
es
cmps
mov
push
clc
mov
xor
jmp
and
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
in
test
cmp
ins
in
add
cmp
jb
push
cmc
sbb
jg
mov
aaa
movs
inc
lock
movs
add
cmps
pop
daa
das
mov
loopne
aad
xor
pop
(bad)
ja
arpl
ins
nop
cmp
bound
js
inc
inc
gs
add
push
jge
sbb
inc
imul
inc
in
mov
test
divps
pop
addr16
hlt
push
mov
push
cmc
cmp
gs
mov
push
jmp
add
fld
xor
(bad)
adc
mov
jo
inc
hlt
movs
mov
lahf
cmps
xor
mov
xor
jecxz
jecxz
cmps
adc
and
out
scas
mov
push
test
cmc
push
out
mov
icebp
les
leave
add
ret
(bad)
cwde
data16
out
(bad)
and
adc
ret
lahf
into
xchg
daa
pop
and
add
jne
inc
pop
adc
adc
xor
add
or
adc
inc
cmps
and
lfs
xor
xor
push
push
pop
les
movs
inc
inc
cmp
arpl
fs
push
inc
jnp
pusha
add
push
sub
div
inc
in
mov
test
pop
in
cmovnp
gs
inc
mov
outs
cmc
cmp
imul
xchg
push
xchg
gs
test
push
lds
xchg
xchg
mov
div
cwde
inc
pushf
movs
and
cmps
mov
push
mov
fisttp
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
in
xchg
xchg
add
sub
cmp
add
cmp
jl
add
sbb
jg
mov
aaa
add
and
sbb
push
loopne
aad
xor
sbb
push
push
pusha
les
inc
lds
jg
add
aam
add
push
jle
add
jle
inc
ja
in
mov
test
push
in
cmovae
inc
addr16
hlt
push
mov
dec
cmc
cs
pushw
mov
mov
gs
xchg
fld
xor
lods
adc
lods
mov
and
jo
inc
mov
popf
es
push
stc
mov
xor
jecxz
fiadd
mov
inc
in
loopne
rol
push
rol
shl
mov
shl
add
ror
je
and
adc
lds
and
add
jnp
add
add
cmc
inc
adc
sub
movs
sbb
push
lds
shld
inc
cmps
arpl
cmp
xor
push
(bad)
addr16
les
xor
inc
inc
dec
lds
fs
jg
jae
jbe
inc
mov
push
xor
pop
aas
pop
not
inc
in
mov
test
inc
in
cmovnp
pop
addr16
hlt
inc
mov
popa
cmc
cmp
imul
xchg
xchg
add
push
mov
test
push
mov
mov
jne
xchg
cdq
adc
xchg
xchg
inc
in
movs
test
loopne
mov
popf
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
loope
xchg
xchg
adc
aaa
test
sar
daa
add
cmp
xor
add
inc
adc
cmp
inc
lock
xor
pop
cmps
xor
loopne
aad
xor
sbb
les
nop
sub
lds
jp
inc
inc
jns
imul
aad
aas
jge
push
ja
in
mov
test
adc
inc
minps
jo
push
hlt
dec
mov
dec
cmc
and
pop
push
(bad)
xchg
mov
gs
xchg
add
rol
jne
xchg
mov
xor
inc
lea
pushf
xchg
mov
xor
not
jecxz
in
lods
and
loop
inc
(bad)
cmc
push
(bad)
add
xor
into
mov
shl
add
iret
(bad)
call
and
adc
ret
xchg
and
adc
add
jns
cmp
xor
rol
inc
adc
cs
aaa
add
and
pop
cmps
es
adc
or
and
js
sbb
dec
push
pusha
les
ins
movs
je
push
(bad)
jp
push
aam
add
push
xor
jae
and
push
ja
in
mov
test
pop
in
cmovbe
push
addr16
hlt
inc
mov
dec
cmc
pusha
pop
fs
mov
mov
gs
test
pop
xor
call
mov
and
jo
inc
cwde
movs
fbld
std
cmps
mov
push
clc
mov
xor
jmp
and
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
in
test
cmp
add
aas
xchg
pop
add
adc
aas
mov
aaa
movs
inc
lock
movs
add
sbb
push
loopne
aad
xor
push
(bad)
ja
arpl
outs
nop
cmp
popa
das
jge
inc
jge
ja
inc
mov
push
jno
sbb
inc
div
ja
in
mov
test
(bad)
in
divps
je
pop
hlt
dec
mov
dec
cmc
cs
gs
(bad)
xchg
sahf
add
push
jmp
add
add
jne
xchg
in
adc
xchg
mov
and
jo
inc
out
movs
cwde
and
mov
mov
xchg
push
mov
fild
inc
loopne
mov
inc
loopne
std
inc
add
(bad)
xor
xchg
(bad)
fidiv
xchg
add
les
fnstenv
loopne
loopne
fidiv
lahf
retf
xchg
add
and
add
js
aas
pop
and
ja
add
push
adc
xor
add
push
lds
dec
pop
cmps
xor
pop
mov
loopne
aad
xor
or
push
push
push
les
movs
dec
inc
pop
lds
(bad)
jl
ins
aam
add
push
pop
aad
aas
outs
div
inc
in
mov
test
jle
inc
cmove
ins
addr16
hlt
jle
arpl
and
imul
pushf
push
mov
test
mov
inc
xchg
xchg
out
adc
xchg
mov
and
jo
inc
mov
fisub
loopne
mov
push
mov
fisttp
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
in
xchg
xchg
push
pop
sub
cmp
imul
outs
cmp
cmp
add
sbb
jg
mov
aaa
add
and
sbb
or
and
cmp
and
les
sub
pusha
das
jle
jp
(bad)
aam
add
push
jb
sbb
jle
ss
in
mov
test
in
cmovae
cmp
hlt
inc
mov
push
cmc
cmp
gs
mov
mov
gs
xchg
add
cmps
xchg
jne
xchg
mov
div
fiadd
movs
fbld
movs
cmps
mov
push
stc
mov
xor
xchg
xlat
fiadd
mov
inc
in
std
inc
rol
iret
push
aad
shl
mov
ret
shl
xchg
add
ror
je
and
adc
call
and
add
jns
dec
pop
cmp
adc
sub
movs
sbb
or
(bad)
shld
pop
cmps
es
adc
xor
(bad)
push
push
les
nop
outs
movs
jae
pop
lds
daa
(bad)
jl
js
xor
inc
mov
push
jb
push
aas
push
push
ja
in
mov
test
jb
inc
lsl
pop
addr16
inc
mov
popa
cmc
daa
pop
imul
xchg
xchg
add
push
mov
test
push
lahf
xchg
jne
xchg
out
adc
mov
jo
inc
mov
lahf
cmps
cmps
mov
aad
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
loope
xchg
xchg
ss
aaa
test
sar
dec
add
cmp
rol
sbb
cmp
inc
lock
lds
and
pop
cmps
and
sbb
xor
sbb
les
sub
lds
(bad)
push
inc
popa
aam
add
push
outs
aad
aas
inc
test
in
mov
test
(bad)
in
minps
pusha
addr16
hlt
dec
mov
dec
cmc
and
pop
push
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
xchg
adc
div
mov
movs
xchg
jecxz
fnstenv
pusha
mov
xor
not
jecxz
ficom
jmp
scas
loope
rol
push
rol
xor
fdivr
shl
add
ror
je
and
adc
clc
lahf
std
xchg
push
pop
adc
add
jnp
inc
pop
and
adc
cs
aaa
add
and
pop
cmps
cmp
add
xor
or
dec
push
les
nop
imul
push
inc
and
jl
inc
mov
push
imul
inc
ja
in
mov
test
pop
in
cmovbe
jl
addr16
inc
mov
popa
cmc
gs
fs
xchg
xchg
cmps
add
push
mov
test
sahf
xchg
jne
xchg
test
xchg
dec
and
jo
inc
mov
mov
es
mov
push
clc
mov
xor
jmp
and
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
in
test
shr
adc
aas
xchg
rol
sbb
jg
mov
aaa
movs
inc
lock
lds
sbb
adc
and
js
sub
popa
pop
sbb
les
cmp
bound
jge
push
inc
and
jb
inc
mov
push
jne
add
jge
inc
ja
in
mov
test
outs
in
divps
pmuludq
xchg
jle
dec
cmc
ins
pop
pushw
(bad)
xchg
sahf
add
push
jmp
add
mov
inc
xor
in
adc
mov
jo
inc
call
iret
fisub
cmps
cmps
nop
xor
pusha
mov
xor
int
jecxz
std
adc
and
out
scas
mov
push
cld
add
xor
loop
div
div
xor
add
ret
(bad)
xchg
data16
and
adc
ret
xchg
aaa
pop
and
add
jle
das
pop
jns
sub
add
pop
adc
xor
sbb
or
imul
pop
mov
loopne
aad
xor
or
les
push
lds
cmp
inc
inc
jo
xor
inc
mov
push
pop
aad
aas
outs
not
inc
in
mov
test
pop
in
cmove
inc
addr16
hlt
inc
mov
jb
gs
push
mov
mov
gs
out
movs
push
mov
scas
adc
inc
xchg
xchg
mov
cmps
dec
and
jo
inc
pushf
movs
mov
es
cmps
mov
push
mov
fisttp
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
in
xchg
xchg
adc
sub
xor
imul
outs
cmp
jne
add
sbb
jg
mov
aaa
add
and
sbb
push
loopne
aad
xor
es
arpl
les
sub
lds
jle
push
inc
daa
aam
add
push
push
push
aas
inc
imul
jb
inc
mov
test
jns
inc
cmovae
pusha
addr16
hlt
dec
mov
or
push
xchg
xchg
mov
gs
test
push
mov
inc
xor
pushf
adc
div
mov
movs
mov
mov
pusha
cmps
push
div
lea
xlat
rol
jmp
scas
mov
push
test
xor
stc
mov
shl
add
ror
je
and
adc
fcomp
and
add
jle
cmp
pusha
xchg
rol
push
adc
sub
movs
cs
cmp
pop
cmps
(bad)
or
push
loopne
aad
xor
(bad)
push
push
les
movs
or
lds
cmp
pop
inc
pusha
aam
add
push
pop
aad
aas
push
ins
ja
in
mov
test
adc
inc
cmove
and
pop
hlt
inc
mov
jns
jg
fs
mov
push
mov
test
add
mov
xor
lea
xchg
mov
and
jo
inc
in
movs
mov
es
cmps
mov
xlat
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
loope
xchg
xchg
dec
pop
aaa
test
sar
adc
cmp
ja
add
sbb
add
movs
inc
lock
lds
and
pop
cmps
popa
daa
push
mov
loopne
aad
xor
push
(bad)
dec
push
pop
les
movs
jl
dec
lds
(bad)
inc
es
add
push
jb
sbb
inc
div
inc
in
mov
test
jle
inc
minps
cmp
hlt
dec
mov
jae
and
pop
push
lea
test
add
iret
xchg
jne
xchg
lods
adc
xchg
mov
and
jo
inc
hlt
movs
and
cmps
mov
xchg
pusha
mov
xor
rcl
inc
(bad)
adc
and
loope
mov
push
test
int3
push
cmc
mov
ret
fs
retf
in
ror
je
and
adc
(bad)
lahf
int
or
shr
in
add
jle
das
pop
push
xchg
xor
adc
cs
aaa
add
and
pop
cmps
cmp
or
or
and
jp
push
mov
pop
or
dec
push
les
push
lds
cmp
push
inc
addr16
add
push
push
aad
aas
push
in
mov
test
jno
inc
cmovbe
arpl
hlt
jo
pusha
xchg
cmp
cmc
jle
gs
adc
repz
mov
(bad)
adc
inc
xor
mov
xor
inc
cwde
movs
mov
cdq
cmps
mov
push
clc
mov
xor
jmp
and
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
in
test
daa
shr
dec
add
aas
xchg
ds
aaa
rol
sbb
jg
mov
aaa
movs
inc
lock
lds
and
add
adc
and
jns
push
mov
pop
sbb
les
cmp
bound
jge
inc
inc
popa
aam
add
push
imul
push
ja
in
mov
test
jp
dec
minps
pop
addr16
inc
mov
jl
cs
pop
push
lea
test
add
ret
xchg
jne
xchg
xchg
adc
xchg
mov
and
jo
inc
mov
cwde
and
lahf
cmps
scas
xor
pusha
mov
xor
xchg
xlat
jecxz
ficom
test
inc
out
scas
test
sti
push
test
xor
cmp
lea
ret
(bad)
(bad)
out
je
and
adc
fistp
and
add
jge
das
pop
xor
adc
xor
and
add
movs
cmovg
xor
loopne
aad
xor
or
push
push
push
les
push
lds
cmp
add
aam
add
push
push
aad
aas
outs
div
inc
in
mov
test
gs
inc
unpckhps
and
hlt
pop
mov
jp
es
jg
(bad)
xchg
mov
gs
out
cmps
push
call
jne
xchg
mov
lods
mov
and
jo
inc
mov
(bad)
and
cmps
cmps
mov
push
mov
fisttp
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
in
test
and
imul
outs
cmp
xor
adc
ds
aaa
add
and
sbb
mov
loopne
aad
xor
sbb
les
sub
lds
jle
inc
inc
and
arpl
outs
aad
aas
inc
not
jb
inc
mov
test
in
subps
jo
jae
inc
mov
adc
outs
pop
fs
xchg
xchg
mov
xchg
mov
adc
inc
xor
mov
xor
inc
mov
xchg
es
xor
cmps
push
div
xchg
push
repz
rol
test
inc
in
cmc
inc
rol
movs
push
in
add
xor
mov
shl
add
ror
je
and
adc
mov
pop
and
add
xchg
cmp
adc
cs
aaa
xor
and
pop
cmps
pop
daa
xor
xor
(bad)
push
push
les
push
or
lds
cmp
pop
inc
js
aaa
add
push
pop
aad
aas
push
ss
in
mov
test
jp
inc
nop
pop
addr16
hlt
pop
mov
je
push
pop
jbe
lea
xchg
test
push
mov
movs
adc
inc
xor
cdq
adc
mov
xchg
jo
inc
mov
mov
loopne
mov
xchg
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
loope
test
and
add
cmp
xor
adc
push
mov
aaa
add
and
push
cmps
xor
push
mov
loopne
aad
xor
and
les
sub
fs
arpl
sbb
aam
add
push
jbe
inc
aas
inc
mul
inc
in
mov
test
dec
in
divps
inc
addr16
inc
mov
or
and
push
mov
mov
gs
out
mov
adc
inc
xchg
xchg
lock
xchg
mov
and
jo
inc
mov
xchg
mov
pusha
mov
xor
out
loopne
xlat
adc
inc
loope
hlt
inc
rol
push
call
aad
push
xchg
ret
repnz
ror
je
and
adc
scas
lahf
rcl
pop
shr
or
xor
xchg
sub
adc
sub
pop
aaa
add
and
pop
cmps
cmp
pop
mov
loopne
aad
xor
adc
push
push
les
imul
das
cmp
cmova
jl
inc
mov
push
push
aad
aas
push
in
mov
test
dec
in
nop
and
hlt
adc
pusha
xchg
cmp
cmc
inc
pop
jno
adc
mov
add
call
mov
and
jo
inc
mov
cdq
mov
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
in
xchg
xchg
sub
xor
daa
sar
cmp
aas
xchg
es
xor
push
cmc
push
adc
ds
aaa
movs
sbb
dec
lds
add
push
loopne
aad
xor
es
inc
push
arpl
popa
nop
cmp
bound
jge
sbb
aam
add
push
ins
aad
aas
dec
not
inc
in
mov
test
pop
in
minps
je
jl
inc
mov
or
pusha
pop
fs
mov
sahf
add
push
cli
gs
out
mov
adc
inc
xor
jmp
mov
jo
inc
out
and
cmps
fnstenv
pusha
mov
xor
int
loop
mov
(bad)
out
scas
ret
inc
cli
mov
xor
test
lock
call
(bad)
loope
(bad)
out
je
and
adc
in
lahf
rcl
adc
imul
and
xchg
pop
sbb
adc
sub
movs
and
or
imul
xor
aad
xor
push
(bad)
jae
push
les
push
jo
jnp
arpl
cmp
add
aam
add
push
jno
js
outs
div
inc
in
mov
test
dec
in
nop
jns
pop
hlt
pop
mov
dec
cmc
pop
pop
jae
mov
mov
gs
out
mov
adc
inc
xchg
xchg
out
adc
xchg
mov
and
jo
inc
cmps
movs
fwait
and
cmps
cmps
mov
push
mov
fisttp
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
in
xchg
xchg
add
sub
cmp
add
and
xor
add
push
adc
cmp
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
sbb
les
sub
lds
jle
add
aam
add
push
(bad)
aad
aas
dec
not
jb
inc
mov
test
pop
in
subps
inc
addr16
inc
mov
inc
cmc
daa
pop
imul
xchg
mov
gs
out
mov
adc
inc
xor
lahf
adc
lods
mov
and
jo
inc
cmps
movs
mov
or
movs
cmps
xor
cmps
push
mov
mov
repz
rol
mov
fcmovnb
inc
scas
ret
inc
popf
xbegin
xor
(bad)
mov
lds
xchg
add
ror
je
and
adc
loopne
xlat
xchg
xor
and
add
sbb
add
add
cmc
adc
jg
mov
aaa
xor
and
sbb
push
loopne
aad
xor
or
addr16
les
push
lds
aas
(bad)
outs
inc
pop
aam
add
push
sub
jb
jae
push
ja
in
mov
test
jle
inc
nop
jne
add
push
mov
dec
cmc
pop
pop
jno
(bad)
xchg
xchg
add
push
and
test
xchg
xchg
jne
xchg
out
adc
mov
jo
inc
cwde
movs
mov
es
mov
xlat
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
loope
xchg
xchg
adc
aaa
test
add
cmp
xchg
xor
add
sbb
push
mov
aaa
add
and
push
cmps
and
inc
mov
loopne
aad
xor
es
arpl
les
cmp
fs
jl
push
inc
push
aam
add
push
sub
mul
inc
in
mov
test
gs
in
divps
jo
jae
inc
mov
or
pusha
pop
push
lea
sti
gs
out
mov
adc
inc
xchg
xchg
pushf
adc
div
aam
lea
and
xchg
pusha
mov
xor
rcl
in
in
adc
inc
loope
ret
(bad)
mov
xor
(bad)
mov
ret
xor
ror
je
and
adc
out
lahf
rcl
sub
add
add
push
rol
add
jg
mov
aaa
add
and
push
cmps
jns
pop
mov
loopne
aad
xor
or
les
sub
pusha
das
cmp
inc
inc
ja
je
inc
mov
push
xor
je
ins
imul
jne
pop
mov
test
dec
in
nop
jns
add
push
mov
ins
cmc
cmp
jbe
adc
xchg
cwde
xchg
jne
xchg
scas
adc
div
scas
inc
in
movs
cmps
and
std
cmps
mov
push
clc
mov
xor
jmp
and
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
in
(bad)
xchg
push
pop
xor
xor
add
xchg
pop
cs
xor
adc
add
movs
add
dec
lds
add
add
and
jns
push
mov
pop
and
les
sub
bound
jle
inc
pop
aam
add
push
sub
add
ja
in
mov
test
gs
in
minps
fs
inc
mov
or
push
mov
push
cli
gs
test
push
nop
xchg
jne
xchg
pushf
adc
mov
and
xlat
inc
mov
mov
es
cmps
mov
mov
mov
xor
repz
jecxz
cmps
adc
inc
out
scas
rol
fst
(bad)
xor
fistp
lock
add
ret
(bad)
(bad)
mov
je
and
adc
cmps
lahf
rcl
daa
shl
dec
add
add
and
add
pop
adc
aaa
mov
aaa
add
and
pop
cmps
outs
daa
adc
xor
adc
arpl
les
sub
arpl
je
push
inc
fs
add
push
pop
aad
aas
ins
test
in
mov
test
in
nop
dec
addr16
xchg
aaa
jne
cmc
jp
jle
(bad)
xchg
mov
gs
test
push
mov
out
adc
inc
xchg
xchg
mov
(bad)
div
scas
inc
mov
call
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
std
lahf
fist
aaa
sar
adc
outs
and
aaa
rol
push
adc
push
mov
aaa
add
and
sbb
mov
loopne
aad
xor
push
(bad)
push
push
pusha
les
cmp
pusha
das
jge
jp
pop
aam
add
push
sub
inc
aas
inc
test
in
mov
test
sbb
inc
subps
cmp
hlt
inc
mov
or
es
push
mov
mov
gs
test
push
xchg
xchg
jne
xchg
(bad)
adc
div
(bad)
inc
mov
and
cmps
mov
push
cli
mov
xor
jecxz
fiadd
mov
in
lds
inc
ret
push
repnz
xor
fidivr
lds
xchg
add
ror
je
and
adc
cmps
lahf
xlat
xchg
push
pop
and
add
add
rol
push
adc
xor
cmp
dec
lds
and
sbb
add
and
ja
sbb
ja
les
sub
popa
das
jnp
inc
cmp
ins
add
push
xor
jg
ins
not
inc
in
mov
test
pop
in
nop
pop
addr16
push
mov
or
push
mov
push
(bad)
gs
cdq
add
lds
xor
mov
xchg
mov
mov
mov
popf
cmps
mov
shl
push
mov
fisttp
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
lock
aam
ss
aaa
test
shr
or
cmp
xchg
and
add
sbb
cmp
movs
add
dec
lds
and
push
cmps
popa
daa
dec
mov
loopne
aad
xor
es
push
push
pop
les
cmp
fs
jl
inc
pop
aam
add
push
xor
dec
aas
dec
not
inc
in
mov
test
adc
inc
divps
pusha
addr16
hlt
jne
arpl
outs
pop
imul
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
mov
lods
mov
and
jo
inc
cmps
movs
lods
and
mov
pusha
mov
xor
out
jecxz
ret
and
loope
mov
pop
fcom
ret
xor
aam
bnd
test
add
ror
je
and
adc
movs
lahf
rcl
adc
jp
xor
add
and
add
sbb
and
pop
aaa
add
and
adc
mov
loopne
aad
xor
push
(bad)
push
push
les
cmp
pusha
das
jnp
jp
cmp
mov
push
sub
test
in
mov
test
push
out
addr16
push
mov
or
cs
push
push
adc
mov
mov
inc
xor
lea
xor
inc
xchg
sahf
mov
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
cld
lahf
aam
add
xor
push
sar
sbb
xchg
addr16
sub
push
cmc
push
adc
add
movs
push
lock
lds
and
add
pavgb
aad
xor
and
addr16
arpl
jnp
sub
bound
jle
push
inc
push
aam
add
push
sub
inc
aas
dec
div
ja
in
mov
test
(bad)
in
minps
and
hlt
jb
xchg
jle
js
daa
pop
imul
mov
test
push
mov
inc
xor
mov
ss
mov
and
jo
inc
mov
iret
fsub
mov
xchg
xor
pusha
mov
xor
int
jecxz
loope
mov
inc
out
scas
mov
push
ret
xor
fdivr
lock
xor
gs
(bad)
loope
jecxz
fdiv
loopne
cmc
cmc
(bad)
jne
lahf
rcl
jnp
ins
in
add
add
and
add
pop
adc
aaa
mov
aaa
add
and
push
cmps
popa
daa
inc
mov
loopne
aad
xor
or
arpl
les
movs
adc
inc
lds
je
inc
inc
and
mov
push
push
aad
aas
ins
mul
inc
in
mov
test
gs
inc
nop
jns
(bad)
hlt
push
mov
jb
jnp
jnp
mov
mov
gs
out
mov
adc
inc
xchg
xchg
xchg
adc
lods
mov
and
jo
inc
mov
fisub
popf
cmps
cmps
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
std
lahf
aad
add
sub
or
jnp
adc
and
pop
pop
bound
adc
add
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
sub
arpl
les
cmp
pusha
das
jge
push
inc
pop
aam
add
push
sub
div
ja
in
mov
test
ins
in
subps
pusha
outs
hlt
jne
pusha
xchg
jle
je
js
push
xchg
xchg
mov
gs
out
mov
adc
inc
xor
mov
lods
mov
and
jo
inc
test
fwait
es
xchg
xor
pusha
cmps
push
div
xchg
push
int
rol
mov
inc
in
ret
(bad)
in
xlat
add
xor
ret
jbe
test
add
ror
je
and
adc
clc
lahf
rcl
ins
shl
add
sbb
inc
pop
aas
xchg
and
adc
xor
ss
lds
and
adc
push
daa
inc
mov
loopne
aad
xor
adc
inc
push
les
cmp
popa
das
jne
sbb
aam
add
push
inc
aad
aas
outs
not
inc
in
mov
test
in
nop
pop
addr16
imul
cmc
outs
pop
push
lea
mov
add
mov
loop
pop
jne
xchg
call
mov
and
jo
inc
test
mov
es
mov
push
mov
fisttp
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
lock
xlat
xchg
add
aaa
test
shr
sub
sbb
add
and
adc
ds
aaa
add
and
sbb
mov
loopne
aad
xor
sub
push
push
pop
les
cmp
fs
jl
sbb
aam
add
push
(bad)
aad
aas
dec
test
in
mov
test
gs
in
cmovae
inc
addr16
jo
arpl
popa
pop
imul
xchg
mov
gs
test
push
mov
inc
xchg
xchg
mov
lods
mov
and
jo
inc
out
lods
and
mov
pusha
mov
xor
rcl
inc
in
adc
inc
loope
ret
(bad)
movs
push
rol
ret
xor
lds
ret
xor
ror
je
and
adc
loope
xlat
xchg
or
shl
inc
add
add
adc
add
add
jg
mov
aaa
add
and
sbb
ds
aad
xor
push
(bad)
dec
push
les
sub
pusha
das
jne
inc
inc
and
ins
add
push
jle
dec
aas
ins
not
jne
pop
mov
test
jns
inc
cmovo
pop
addr16
hlt
jl
pusha
xchg
cmp
cmc
es
imul
mov
test
push
les
xor
call
mov
and
jo
inc
mov
pushf
es
mov
push
clc
mov
xor
jmp
and
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
cld
lahf
rcl
popa
shr
or
sub
inc
pop
outs
xchg
and
push
cmc
push
adc
push
mov
aaa
movs
pop
lock
lds
dec
sbb
xor
aas
mov
loopne
aad
xor
and
push
push
arpl
fs
sub
bound
jle
inc
inc
dec
aam
add
push
xor
dec
aas
dec
test
in
mov
test
outs
in
subps
ja
pop
hlt
jl
xchg
jle
push
push
lea
mul
test
push
fld
xor
lock
mov
test
movs
cmps
and
cwde
cmps
fnstenv
pusha
mov
xor
repz
loop
out
mov
in
rol
scas
rol
lds
(bad)
xor
fnstcw
lock
xor
gs
(bad)
cld
mov
je
and
adc
loop
rcl
data16
xor
outs
sbb
pop
pop
cmp
adc
xor
xor
pop
lds
and
adc
popa
daa
cmp
aad
xor
adc
jae
push
les
sub
arpl
inc
(bad)
jns
pusha
aam
add
push
dec
aad
aas
push
test
in
mov
test
jle
inc
cmovno
js
ja
jae
arpl
fs
ins
push
mov
mov
gs
test
push
pop
xchg
xchg
mov
sahf
jmp
lods
mov
and
jo
inc
out
movs
lahf
and
cmps
cmps
cmps
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
std
lahf
rcl
and
add
cmp
adc
outs
xchg
sub
add
push
adc
add
movs
sbb
dec
lds
and
pop
cmps
(bad)
and
adc
and
cmp
pop
adc
jae
pusha
les
push
lds
fs
push
inc
inc
aam
add
push
dec
aad
aas
test
in
mov
test
in
(bad)
out
addr16
hlt
adc
pop
cmc
js
jle
adc
mov
fld
xor
lods
adc
div
xlat
inc
xchg
movs
mov
mov
cmps
push
mov
leave
xor
int
rol
mov
icebp
(bad)
in
mov
ret
add
xor
out
mov
lds
xchg
add
ror
je
and
adc
cld
lahf
rcl
shl
syscall
push
test
outs
add
adc
push
cmc
adc
jg
mov
aaa
xor
and
push
cmps
jns
and
xor
adc
push
push
les
jne
push
inc
push
lds
data16
fs
inc
aam
add
push
and
push
aas
inc
not
inc
in
mov
test
gs
inc
cmovb
push
ins
hlt
jo
xchg
jle
outs
cmc
popa
pop
outs
push
mov
xchg
add
push
cwde
gs
test
push
mov
inc
xor
mov
mov
mov
and
jo
inc
nop
movs
mov
cmps
cmps
mov
push
mov
fisttp
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
lock
rcl
xor
jp
push
add
and
and
add
inc
adc
or
push
lock
lds
and
pop
cmps
and
loopne
aad
xor
push
(bad)
push
push
push
les
imul
das
cmp
add
aam
add
push
dec
aad
aas
ins
div
inc
in
mov
test
gs
inc
orps
pusha
addr16
hlt
jle
arpl
cs
push
push
lea
sti
gs
mov
push
mov
inc
xchg
xchg
xchg
adc
xchg
mov
and
jo
inc
scas
movs
shl
mov
cwde
xor
pusha
mov
xor
rcl
inc
in
mov
mov
rol
scas
rol
lock
rol
ret
xor
fidivr
ret
xor
gs
(bad)
out
out
loope
mul
out
out
(bad)
jne
lahf
rcl
data16
xor
sbb
pop
pop
adc
adc
xor
cmp
push
lds
movs
add
cmps
add
dec
mov
loopne
aad
xor
sbb
les
inc
movs
push
inc
dec
lds
pusha
(bad)
jae
dec
aam
add
push
sub
sbb
dec
not
jle
push
mov
test
dec
in
divps
jnp
pop
hlt
push
jne
cmc
jo
push
add
push
(bad)
gs
test
push
mov
inc
xor
jmp
xor
inc
mov
iret
and
cmps
mov
push
clc
mov
xor
jmp
and
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
cld
lahf
into
xchg
adc
aaa
test
add
sub
rol
pop
adc
or
pop
lock
adc
pop
cmps
bound
adc
adc
and
cmp
or
les
push
lds
cmp
aam
add
push
jne
sbb
outs
test
in
mov
test
pop
in
cvtdq2ps
fs
inc
mov
pop
cmc
and
push
push
mov
xchg
add
push
sti
gs
test
push
cmps
xchg
adc
inc
xor
mov
xchg
aam
mov
iret
mov
xor
pusha
mov
xor
xchg
xlat
loop
loopne
mov
iret
(bad)
loopne
mov
repz
xlat
add
xor
fdivr
lock
add
les
shl
loopne
out
nop
jne
lahf
xlat
xchg
add
and
in
add
add
adc
add
add
xor
xor
pop
lds
and
pop
cmps
sbb
loopne
aad
xor
dec
(bad)
dec
push
push
les
nop
xor
fs
(bad)
(bad)
fs
inc
aam
add
push
jo
inc
aas
dec
mul
inc
in
mov
test
in
cmovno
js
push
hlt
dec
mov
dec
cmc
inc
pop
or
mov
cmps
add
push
test
mov
inc
test
xchg
xchg
mov
cmps
jmp
and
jo
inc
xchg
movs
mov
es
cmps
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
std
lahf
int3
xchg
sub
das
test
shr
inc
add
jp
inc
pop
cmp
adc
pop
mov
aaa
add
and
pop
cmps
cmp
xor
xor
or
dec
push
arpl
pop
nop
sub
lds
je
add
aam
add
push
sub
div
ja
in
mov
test
pop
in
punpcklwd
jo
outs
hlt
inc
mov
or
push
xchg
xchg
movs
add
push
mul
test
push
add
jne
xchg
mov
ss
mov
and
jo
inc
xchg
movs
stos
and
mov
mov
push
mov
test
mov
nop
push
xchg
xlat
rol
mov
icebp
(bad)
in
mov
add
xor
in
mov
lds
xchg
add
ror
je
and
adc
hlt
lahf
rcl
and
ja
and
outs
add
adc
adc
aaa
mov
aaa
xor
and
adc
sbb
xor
xor
add
les
inc
movs
ja
dec
lds
(bad)
(bad)
outs
inc
and
push
add
push
push
aad
aas
jg
push
ja
in
mov
test
gs
in
nop
gs
inc
mov
jae
pop
pop
dec
push
lea
movs
gs
push
scas
xchg
jne
xchg
mov
mov
mov
and
jo
inc
xchg
and
cmps
mov
push
mov
fisttp
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
lock
int3
xchg
ss
xor
sar
es
jle
das
pop
jns
sub
add
pop
adc
xor
and
and
push
cmps
and
sbb
xor
push
(bad)
push
push
push
les
nop
cmp
arpl
inc
mov
aam
add
push
dec
aad
aas
jb
push
ja
in
mov
test
adc
inc
(bad)
out
addr16
hlt
inc
mov
or
bound
push
push
mov
mov
gs
add
rol
jne
xchg
mov
div
xlat
inc
stos
movs
mov
es
cmps
scas
xor
pusha
mov
xor
rcl
in
(bad)
adc
inc
loop
retf
inc
clc
(bad)
mov
xor
(bad)
mov
ret
xor
gs
(bad)
out
out
(bad)
out
out
clc
jne
lahf
rcl
and
jbe
or
add
jo
add
push
adc
and
movs
pop
lock
movs
add
cmps
add
loopne
aad
xor
xor
arpl
les
inc
pop
lds
cmp
jp
arpl
push
add
push
jns
jae
jae
inc
ja
in
mov
test
gs
andps
jo
inc
hlt
dec
mov
push
cmc
and
dec
push
cmps
xchg
mov
gs
test
add
mov
inc
xor
scas
adc
xchg
mov
and
jo
inc
xchg
movs
fbld
std
cmps
movs
xor
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
cld
lahf
int3
xchg
sub
aaa
test
add
jg
add
rol
push
adc
sub
movs
and
add
movs
add
sbb
pop
loopne
aad
xor
or
inc
push
les
inc
push
lds
jbe
inc
inc
ins
aam
add
push
pop
aad
aas
ja
push
ja
in
mov
test
adc
inc
punpcklbw
and
hlt
jae
xchg
jne
je
bound
push
push
mov
nop
add
push
cmc
mov
push
add
jne
xchg
mov
xchg
aam
scas
movs
mov
mov
pusha
mov
xor
int
loop
stc
adc
inc
loopne
les
(bad)
movs
push
retf
xor
sar
lock
nop
add
les
les
loopne
out
lock
lahf
xlat
xchg
add
and
in
add
add
adc
add
add
xor
ss
lds
push
movs
add
cmps
popa
daa
xor
xor
adc
push
push
push
les
sub
fs
jnp
push
inc
fs
add
push
jle
add
jae
inc
ja
in
mov
test
in
andps
jo
jp
dec
mov
or
cmp
dec
push
mov
push
stos
mov
std
push
xchg
xchg
jne
xchg
mov
xor
inc
xchg
movs
(bad)
and
popf
cmps
mov
push
mov
fisttp
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
std
lahf
int
push
pop
das
test
shr
xor
jl
inc
pop
gs
rol
sbb
cs
aaa
add
and
adc
mov
loopne
aad
xor
or
les
nop
cmp
pusha
das
je
jp
cmp
mov
push
(bad)
aad
aas
ins
div
ja
in
mov
test
push
in
punpcklwd
jo
push
hlt
inc
mov
inc
cmc
popw
push
push
cmps
xchg
movs
add
push
mul
test
push
mov
inc
xor
mov
ss
mov
and
jo
inc
xchg
movs
mov
loopne
xchg
xor
pusha
cmps
push
mov
mov
mov
nop
push
xchg
xlat
rol
mov
repnz
in
leave
inc
pop
mov
xor
sar
lds
xchg
add
ror
je
and
adc
hlt
lahf
rcl
and
ja
and
outs
add
adc
adc
aaa
mov
aaa
xor
and
and
xor
and
ja
sub
pop
adc
inc
push
les
sub
popa
das
jnp
inc
pop
aam
add
push
push
aad
aas
outs
imul
inc
in
mov
test
in
cvtdq2ps
fs
dec
mov
or
push
mov
xchg
add
push
movs
mov
inc
mov
inc
xor
in
adc
xchg
fild
movs
cmps
and
loopne
xchg
xor
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
lock
into
xchg
dec
pop
xor
push
sar
and
outs
jle
sbb
jns
sub
add
pop
adc
sub
pop
lock
ds
push
cmps
popa
daa
sbb
xor
adc
push
push
push
les
nop
cmp
arpl
inc
(bad)
push
inc
jl
pop
add
push
dec
aad
aas
jb
push
ja
in
mov
test
inc
in
punpcklwd
jae
pop
hlt
jne
arpl
arpl
push
push
mov
mov
cmps
test
xchg
xchg
adc
inc
xchg
xchg
mov
xor
inc
out
mov
mov
pusha
mov
xor
rcl
in
std
adc
inc
loop
retf
inc
rol
in
push
iret
add
xor
(bad)
mov
ret
xor
gs
(bad)
in
fsub
(bad)
je
and
adc
cld
lahf
rcl
and
jbe
sbb
add
xchg
adc
add
adc
jg
mov
aaa
add
lds
dec
cmp
and
sbb
ss
aad
xor
adc
push
push
arpl
push
nop
cmp
outs
das
pop
mov
bound
push
aad
aas
jb
inc
ja
in
mov
test
inc
in
orps
cmp
hlt
dec
mov
imul
pop
dec
push
adc
sti
add
scas
xchg
jne
xchg
mov
ss
mov
and
jo
inc
test
and
cmps
movs
xor
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
cld
lahf
rcl
or
ins
in
add
jp
add
xor
adc
sub
and
add
movs
add
sbb
pop
loopne
aad
xor
or
inc
push
les
inc
push
lds
inc
(bad)
jns
fs
add
push
push
aad
aas
jo
push
ja
in
mov
test
dec
in
(bad)
out
addr16
hlt
jle
xchg
jne
adc
addr16
push
push
mov
push
mul
test
push
mov
inc
xor
mov
popf
push
and
jo
inc
scas
movs
mov
mov
pusha
mov
xor
int
loop
cmc
adc
inc
loopne
lds
(bad)
out
push
retf
xor
sar
lock
xchg
add
les
fdiv
loopne
out
lock
lahf
xlat
xchg
add
and
in
add
pop
xchg
pop
adc
adc
xor
or
and
and
xor
es
xor
adc
jae
push
les
cmp
fs
jbe
push
inc
pop
aam
add
push
pop
aad
aas
jno
inc
ja
in
mov
test
dec
in
cvtdq2ps
pusha
addr16
xchg
cmp
cmc
pop
pop
dec
push
mov
cmps
add
push
stos
gs
inc
into
xchg
jne
xchg
lods
adc
xor
inc
mov
iret
and
xchg
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
std
lahf
int
push
pop
das
test
shr
xor
arpl
jbe
add
sbb
das
mov
aaa
add
and
adc
mov
loopne
aad
xor
or
les
nop
cmp
pusha
das
inc
mov
jae
pusha
add
push
jp
inc
aas
jb
push
ja
in
mov
test
adc
inc
packsswb
arpl
hlt
jo
pusha
xchg
data16
cmc
jns
push
push
adc
mov
push
mov
inc
xor
mov
xor
inc
xchg
movs
es
xor
cmps
push
mov
call
xlat
rol
mov
int3
(bad)
in
rol
in
enter
(bad)
aad
push
(bad)
mov
lds
xchg
add
ror
je
and
adc
(bad)
lahf
rcl
cmp
jbe
dec
add
add
adc
adc
aaa
mov
aaa
xor
and
and
xor
and
ja
sub
pop
adc
ja
les
sub
popa
das
jbe
inc
ins
aam
add
push
xor
add
outs
div
ja
in
mov
test
dec
in
andnps
and
hlt
dec
mov
dec
cmc
push
pop
dec
push
mov
push
movs
gs
push
scas
xchg
jne
xchg
mov
mov
mov
and
jo
inc
xchg
movs
mov
es
xchg
xor
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
lock
into
xchg
dec
pop
xor
push
sar
dec
add
jne
push
pop
adc
adc
sub
cs
cs
push
cmps
xor
pop
mov
loopne
aad
xor
adc
jae
push
les
movs
dec
inc
pop
lds
inc
(bad)
sbb
aam
add
push
jp
inc
aas
jno
inc
ja
in
mov
test
push
inc
pcmpgtw
arpl
hlt
jno
arpl
jb
push
push
lea
icebp
gs
test
mov
inc
xchg
xchg
mov
lods
mov
and
jo
inc
out
fisub
movs
cmps
test
pusha
mov
xor
rcl
in
icebp
adc
inc
loop
lds
(bad)
in
fadd
ret
xor
aam
bnd
test
add
iret
(bad)
out
mov
and
adc
cli
lahf
rcl
and
ja
or
sbb
pop
pop
adc
adc
xor
inc
lock
lds
and
and
add
and
jnp
sbb
jae
arpl
push
nop
cmp
outs
das
jbe
add
aam
add
push
dec
aad
aas
ins
test
in
mov
test
ins
in
andnps
cmp
hlt
inc
mov
ja
push
pop
dec
push
mov
mov
gs
mov
push
ret
adc
inc
xor
scas
adc
xchg
mov
and
jo
inc
scas
movs
mov
es
cmps
movs
xor
pusha
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
cld
lahf
rcl
add
jnp
adc
jp
add
rol
inc
adc
sub
adc
or
cmp
sbb
adc
and
cmp
dec
mov
pop
or
ja
pusha
les
sub
popa
das
pop
(bad)
inc
inc
aam
add
push
push
aad
aas
jo
push
ja
in
mov
test
gs
in
pcmpgtd
pop
addr16
jl
xchg
jbe
pop
cmc
jbe
push
push
lea
lock
test
push
iret
xchg
jne
xchg
mov
ss
mov
and
jo
inc
jmp
cwde
and
mov
xor
xchg
xor
xchg
xlat
loop
int3
adc
inc
loopne
lds
(bad)
jecxz
retf
xor
fstp
lock
add
les
out
je
and
adc
std
lahf
xlat
xchg
add
and
in
add
add
adc
add
add
xor
dec
lock
lds
movs
add
cmps
and
adc
xor
adc
arpl
les
movs
jno
lds
jnp
sbb
aam
add
push
jle
add
ins
div
inc
in
mov
test
in
nop
dec
addr16
push
mov
dec
cmc
push
pop
dec
push
mov
cmps
add
push
test
mov
mov
push
into
xchg
jne
xchg
hlt
adc
lods
mov
and
jo
inc
out
lods
and
cmps
cmps
cmps
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
aaa
test
shr
sbb
jl
aas
outs
xor
xchg
jb
add
sbb
or
xor
xor
and
and
pop
loopne
aad
xor
inc
(bad)
push
push
push
les
aaa
movs
adc
lds
inc
(bad)
ins
inc
js
xor
inc
mov
push
dec
aad
aas
and
ins
ja
in
mov
test
gs
pcmpgtw
jb
add
pop
mov
push
cmc
inc
pop
add
adc
test
scas
out
add
xchg
jne
xchg
xchg
adc
xchg
mov
and
jo
inc
mov
iret
cmps
es
xchg
xor
pusha
cmps
push
pushf
mov
xor
int
fadd
mov
mov
sti
inc
out
rol
repz
hlt
add
xor
out
mov
mul
xchg
add
iret
(bad)
out
fsub
loope
aad
jecxz
enter
les
adc
cmp
jae
sbb
push
xchg
add
adc
push
add
cmp
add
push
lds
dec
cmps
xor
xor
xor
inc
(bad)
ja
push
les
xor
outs
das
inc
(bad)
push
inc
and
jge
inc
mov
push
push
aad
aas
aaa
test
in
mov
test
(bad)
in
packsswb
ja
push
hlt
adc
dec
cmc
jp
adc
mov
pushf
add
push
mul
test
push
fld
xor
pushf
adc
xchg
mov
and
jo
inc
jmp
shl
cmps
test
pusha
test
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
daa
xchg
push
xchg
xor
and
or
sub
or
adc
and
and
add
adc
add
jp
sub
inc
push
ins
les
ins
movs
jo
cmp
or
popa
mov
aam
and
push
push
aad
aas
ins
mul
push
in
mov
test
sbb
xor
inc
out
addr16
hlt
push
mov
je
jo
dec
push
stos
xchg
mov
test
gs
in
shr
mov
adc
inc
mov
adc
movs
mov
and
jo
inc
nop
movs
fldenv
cmps
cmps
mov
push
mov
fisttp
inc
int3
adc
and
xchg
scas
out
add
push
lock
xor
sar
aam
in
rol
mov
shl
in
aam
rcl
lahf
into
xchg
add
sub
add
sub
test
xchg
pop
add
adc
sub
movs
sub
adc
ds
pop
cmps
pusha
daa
adc
adc
add
cmp
or
push
je
inc
nop
jb
je
and
adc
pusha
(bad)
sbb
and
push
dec
aad
aas
outs
mul
in
mov
test
sbb
sub
inc
out
addr16
hlt
push
mov
jae
jl
dec
push
adc
gs
test
add
rol
jne
xchg
xchg
adc
mov
xchg
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jmp
jbe
test
add
mov
(bad)
data16
out
je
and
adc
rcr
and
add
cmp
jl
and
aaa
adc
sub
inc
lock
jo
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
and
mov
push
jb
(bad)
outs
mul
in
mov
test
gs
in
pcmpeqb
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
das
pop
dec
push
stos
xchg
test
gs
test
push
xchg
xchg
adc
inc
cmps
jne
xchg
test
ss
mov
and
jo
inc
lods
movs
and
shl
push
lahf
mov
xor
(bad)
xlat
loope
not
mul
xchg
scas
cli
inc
out
mov
xor
cmp
xor
add
mov
out
je
and
adc
mov
pop
test
shl
in
add
cmp
jo
and
sub
jg
mov
aaa
or
inc
lock
push
dec
xor
push
daa
pop
mov
loopne
aad
xor
or
push
imul
outs
inc
(bad)
lds
das
jg
push
inc
cmp
xor
imul
push
ja
in
mov
test
inc
in
(bad)
out
addr16
hlt
adc
push
cmc
and
dec
push
test
mov
mov
mov
push
cmps
xchg
adc
inc
mov
adc
mov
xchg
inc
lock
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
not
icebp
and
nop
scas
stc
inc
cli
(bad)
movs
push
mov
in
in
aad
push
(bad)
mov
int3
xor
add
mov
hlt
data16
out
je
and
adc
scas
lahf
leave
xchg
sub
sub
add
aas
xchg
jns
jae
daa
cmc
sub
sub
dec
lock
lds
dec
cmp
push
loopne
aad
xor
(bad)
inc
push
popa
les
ja
jae
jns
adc
jp
inc
cmp
mov
push
jno
add
imul
add
inc
in
vmwrite
je
pop
hlt
adc
dec
cmc
cmp
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
call
iret
mov
xchg
adc
fisttp
inc
int
hlt
and
lahf
scas
inc
(bad)
mov
xor
cmp
mov
(bad)
add
mov
sti
data16
les
les
mov
pop
and
add
cmp
jl
and
cmp
sub
inc
lock
lds
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
and
mov
push
jb
(bad)
outs
mul
in
mov
test
gs
in
vmread
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
daa
pop
dec
push
stos
xchg
test
gs
test
push
xchg
xchg
jne
xchg
mov
mov
and
mov
lods
movs
and
lods
pusha
mov
xor
(bad)
xlat
loope
rcl
shl
out
scas
fld
(bad)
repz
mov
aad
push
cmp
fs
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
add
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
mov
pusha
adc
fisttp
inc
in
lock
(bad)
loopne
jmp
jecxz
into
aad
push
lds
retf
fs
add
test
je
and
adc
loope
rcl
cmp
xor
dec
add
xchg
and
adc
sub
movs
push
lock
je
push
movs
xor
cmps
daa
daa
add
xor
push
(bad)
or
nop
ins
movs
dec
inc
jge
push
das
jge
add
aam
and
push
outs
aad
aas
jae
ja
dec
in
mov
test
gs
in
divps
cmp
mov
dec
cmc
js
dec
push
rcl
mov
aam
mov
push
xchg
mov
adc
in
mov
and
jo
inc
scas
movs
popf
and
loopne
cwde
xor
pusha
adc
mov
xchg
xlat
loopne
out
repz
fild
fst
loope
cwde
aad
push
cmp
xor
add
mov
out
je
and
adc
cmps
lahf
iret
xchg
add
aas
test
shl
in
add
and
add
popa
cmc
sbb
ja
sub
adc
sbb
or
sub
add
push
loopne
aad
xor
inc
(bad)
pop
push
dec
les
outs
movs
dec
inc
inc
lds
das
jle
ins
inc
and
jae
pop
mov
push
jns
push
aas
and
in
mov
test
gs
subps
pop
addr16
hlt
pop
mov
push
push
mov
lods
mov
mov
adc
inc
popf
jne
xchg
(bad)
adc
mov
jo
inc
lods
movs
cmps
and
mov
mov
xor
xchg
xlat
lds
out
and
(bad)
out
push
inc
fdiv
(bad)
mov
loop
fidiv
int3
add
lock
data16
xor
out
jne
lahf
test
aas
shr
in
add
xchg
pusha
xchg
xor
sbb
xchg
push
jg
mov
aaa
pop
movs
pop
lock
ds
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
pop
aad
aas
and
push
ja
in
mov
test
in
cmovae
pusha
addr16
hlt
sbb
jne
cmc
and
pop
push
mov
mov
cmps
test
push
add
jne
xchg
hlt
adc
xor
inc
cwde
movs
and
cmps
mov
push
mov
fbld
inc
std
adc
inc
jecxz
std
inc
rol
push
call
aad
push
test
ret
fdiv
xchg
add
ret
data16
shl
jecxz
movs
cmc
fnsave
lahf
jmp
xor
and
add
and
adc
adc
or
daa
lock
lds
and
add
aaa
loopne
aad
xor
sub
addr16
arpl
pop
nop
jp
imul
mov
aam
add
push
jns
jae
dec
not
inc
in
mov
test
inc
in
lsl
jns
jl
pop
mov
jae
jno
add
leave
xchg
icebp
add
push
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
popf
es
(bad)
xor
pusha
les
mov
xor
repz
loopne
jecxz
in
mov
cld
inc
out
scas
clc
inc
mov
les
(bad)
xor
icebp
mov
(bad)
test
lds
ret
(bad)
fisub
out
je
and
adc
mov
pop
and
add
cmp
xchg
sub
add
inc
adc
cmp
movs
sbb
pop
lds
and
sbb
mov
loopne
aad
xor
aaa
(bad)
push
push
pop
les
imul
ins
inc
push
aam
add
push
jno
fs
jnp
jno
inc
in
mov
test
gs
in
cmovno
arpl
hlt
adc
arpl
je
imul
xchg
mov
gs
test
add
mov
inc
xchg
xchg
mov
mov
mov
and
jo
inc
popf
movs
xchg
and
fwait
cmps
scas
xor
pusha
mov
xor
not
loopne
mov
(bad)
loop
inc
(bad)
fst
movs
xor
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
and
add
cmp
outs
rol
pop
adc
cmp
add
or
pop
and
sbb
push
loopne
aad
xor
sbb
dec
push
pusha
les
sub
outs
das
jle
jp
(bad)
aam
add
push
jbe
sbb
jle
ss
in
mov
test
popa
in
cmovae
pusha
addr16
hlt
dec
mov
push
cmc
push
pop
jno
mov
mov
gs
add
mov
inc
xor
xchg
adc
lods
mov
and
jo
inc
mov
iret
aad
out
cmps
mov
sahf
pusha
cmps
push
mov
fisttp
inc
fcom
out
and
jecxz
loop
cdq
(bad)
aam
mov
shl
mov
ret
fs
xchg
add
ret
data16
out
je
and
adc
fistp
and
add
sub
and
push
cmc
sbb
or
push
lock
lds
dec
pop
cmps
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jbe
push
aas
imul
mov
test
pop
out
addr16
hlt
adc
jne
cmc
push
pop
pop
push
(bad)
xchg
sahf
add
push
movs
test
mov
adc
inc
xor
mov
xchg
fild
movs
fbld
mov
into
xor
pusha
mov
xor
repz
loopne
clc
adc
and
out
scas
loopne
mov
rcl
(bad)
xor
hlt
mov
icebp
lea
enter
std
gs
(bad)
cwde
mov
and
adc
ret
xchg
daa
pop
and
add
jp
cmp
push
xchg
sub
add
pop
adc
sub
dec
lock
sub
dec
push
cmps
popa
daa
and
xor
xor
jae
pop
les
jnp
ins
inc
inc
lds
gs
push
inc
jne
pop
add
push
dec
aad
aas
inc
not
inc
in
mov
test
inc
in
cmove
jg
jg
inc
mov
dec
cmc
inc
pop
dec
push
adc
gs
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
shl
lds
mov
xor
not
jecxz
jecxz
call
inc
loop
clc
inc
out
mov
xor
(bad)
mov
shl
add
iret
(bad)
fisub
out
je
and
adc
mov
pop
push
test
add
and
sub
add
pop
adc
add
pop
aaa
add
and
push
cmps
xor
xor
xor
sub
jae
pusha
les
sub
lds
cmp
jnp
addr16
add
push
sub
popa
aas
ins
test
in
mov
test
inc
in
(bad)
out
outs
hlt
push
mov
dec
cmc
inc
pop
dec
push
xchg
xchg
mov
gs
test
push
fld
xor
lahf
adc
xor
inc
mov
mov
in
mov
and
mov
fild
inc
rcl
retf
and
jecxz
jecxz
cld
(bad)
aad
into
add
push
cmp
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
shr
adc
xchg
pop
ds
jbe
push
cmc
sbb
jg
mov
aaa
movs
inc
lock
lds
and
sbb
adc
xor
sbb
les
cmp
bound
jge
push
inc
cs
add
push
imul
push
ja
in
mov
test
jle
dec
minps
pop
addr16
inc
mov
or
pusha
pop
fs
mov
push
cli
gs
out
mov
adc
inc
xor
xchg
adc
mov
and
xlat
inc
mov
xchg
xchg
mov
xor
int
jecxz
(bad)
adc
and
out
scas
mov
push
test
stc
push
in
call
fs
xor
add
ret
pop
data16
out
je
and
adc
mov
pop
and
add
sub
daa
rol
push
adc
or
push
lock
adc
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
dec
aad
aas
data16
in
mov
test
jp
inc
addps
dec
addr16
adc
jne
cmc
das
pop
gs
mov
mov
gs
test
push
mov
inc
xchg
xchg
mov
fdivr
test
xor
inc
mov
movs
and
mov
pusha
mov
xor
rcl
jecxz
cmc
adc
and
loop
out
out
(bad)
sti
push
out
add
xor
repnz
shl
add
iret
(bad)
fsub
out
je
and
adc
call
push
test
shl
sub
jns
inc
pop
sub
sub
add
inc
adc
cs
aaa
add
and
pop
cmps
es
and
xor
or
arpl
les
nop
imul
das
imul
inc
pop
aam
add
push
push
aad
aas
dec
div
ja
in
mov
test
sbb
inc
cmove
outs
addr16
inc
mov
outs
cmc
inc
pop
inc
push
xchg
xchg
mov
gs
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
mov
shl
(bad)
push
scas
mov
xor
repz
fiadd
lods
and
jecxz
cli
inc
rol
push
hlt
add
xor
cmp
shl
add
ret
lock
je
and
adc
mov
pop
and
add
and
xchg
jb
push
cmc
sbb
sub
push
lock
cmp
pop
cmps
cmp
or
push
loopne
aad
xor
(bad)
inc
push
pusha
les
movs
jne
xor
bound
xor
aam
add
push
pop
aad
aas
push
ss
in
mov
test
jle
dec
nop
pop
addr16
hlt
push
mov
pop
cmc
pop
pop
dec
push
mov
push
test
mov
cli
push
scas
xchg
rcl
mov
jo
inc
mov
test
test
mov
xor
xchg
xlat
loopne
fst
les
out
scas
inc
(bad)
rcl
cmps
xor
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
shr
in
add
cmp
xchg
ja
add
inc
adc
add
movs
inc
lock
lds
and
push
cmps
sbb
add
xor
and
les
sub
arpl
arpl
inc
inc
push
aam
add
push
popa
aad
aas
push
test
in
mov
test
jle
inc
(bad)
out
addr16
hlt
push
mov
dec
cmc
pop
pop
push
push
mov
mov
mov
std
push
into
xchg
jne
xchg
mov
div
mov
movs
fwait
and
lahf
cmps
mov
push
div
mov
xlat
loopne
into
adc
and
loop
mov
push
jmp
ret
xor
(bad)
mov
ret
fnstenv
retf
add
iret
(bad)
call
and
adc
fstp
push
test
ror
in
add
sub
daa
rol
pop
adc
or
add
pextrw
cmp
and
sbb
add
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
dec
aad
aas
data16
adc
inc
mov
test
inc
in
cvtps2pd
pusha
addr16
hlt
push
mov
dec
cmc
and
pop
push
mov
mov
gs
mov
add
jne
xchg
lods
adc
xor
inc
cdq
movs
test
loope
popf
xor
pusha
cmps
push
mov
fist
inc
mov
lds
inc
rol
cld
push
in
shl
mov
shl
add
ret
data16
out
je
and
adc
scas
lahf
int3
xchg
or
shr
xor
cmp
das
outs
jl
dec
pop
aaa
xchg
xor
push
cmc
sbb
sub
movs
adc
or
cmp
pop
cmps
cmp
or
push
loopne
aad
xor
(bad)
push
push
pusha
les
push
or
lds
xor
aam
add
push
and
inc
aas
js
push
ja
in
mov
test
gs
cmova
jge
jl
jl
xchg
jge
imul
pop
inc
push
test
push
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
lahf
cmps
cmps
(bad)
xor
pusha
les
mov
xor
xchg
xlat
loopne
movs
adc
inc
out
scas
inc
(bad)
out
push
cmc
add
xor
pushf
mov
(bad)
lds
mov
ret
pop
data16
div
loopne
mov
lahf
in
aaa
pop
and
add
xchg
pop
sete
rol
inc
adc
or
aas
lock
lds
dec
adc
popa
daa
pop
mov
loopne
aad
xor
or
arpl
les
cmp
arpl
jbe
push
inc
push
aam
add
push
pop
aad
aas
ins
mul
inc
in
mov
test
outs
in
andnps
cmp
hlt
push
mov
or
push
pop
push
push
lea
test
leave
test
push
iret
xchg
jne
xchg
xchg
adc
lods
mov
and
jo
inc
mov
iret
test
and
push
cli
mov
xor
rcl
inc
int3
adc
and
loop
inc
(bad)
fst
movs
xor
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
shr
in
add
cmp
adc
xchg
xor
add
pop
adc
cmp
movs
add
pop
lds
and
sbb
mov
loopne
aad
xor
push
(bad)
arpl
les
cmp
outs
das
jge
push
inc
pop
aam
add
push
sub
imul
jle
inc
mov
test
imul
pusha
addr16
dec
mov
push
push
cmps
xchg
movs
add
push
in
gs
lods
add
nop
xchg
jne
xchg
call
xor
inc
test
mov
xor
pusha
cmps
push
mov
fisttp
(bad)
adc
inc
jecxz
mov
push
lock
xor
(bad)
mov
shl
add
ret
data16
out
je
and
adc
ficomp
and
add
and
sbb
push
cmc
pop
adc
or
push
lock
lds
and
pop
cmps
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
push
aas
das
imul
mov
test
adc
dec
divps
pop
addr16
hlt
push
mov
push
cmc
cmp
gs
lea
jmp
add
add
jne
xchg
in
adc
mov
jo
inc
mov
(bad)
mov
pusha
mov
xor
xchg
xlat
loopne
std
adc
out
scas
out
add
push
int
(bad)
xor
(bad)
mov
lock
xchg
add
ret
(bad)
cld
mov
je
and
adc
out
rcl
ins
shr
and
outs
sbb
pop
pop
and
push
rol
pop
adc
cs
aaa
add
and
push
cmps
and
sbb
xor
push
(bad)
jae
push
les
imul
das
cmp
jg
and
mov
push
push
aad
aas
pop
mul
inc
in
mov
test
sbb
inc
cmovb
js
jae
jl
arpl
inc
pop
inc
push
adc
gs
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
fnsave
pusha
lds
mov
xor
rcl
jecxz
loopne
mov
inc
loop
std
inc
rol
push
out
add
xor
xchg
shl
add
iret
(bad)
frstor
out
je
and
adc
movs
lahf
in
or
sar
sub
outs
cmp
xchg
adc
adc
or
pop
lock
lds
movs
add
cmps
xor
sbb
xor
dec
(bad)
dec
push
(bad)
les
movs
or
lds
inc
(bad)
push
inc
jg
pop
add
push
outs
aad
aas
jb
inc
ja
in
mov
test
push
in
punpckldq
jo
push
hlt
inc
mov
pop
cmc
and
dec
push
adc
add
xchg
jne
xchg
pushf
adc
lods
mov
and
jo
inc
xchg
movs
test
mov
pusha
cmps
push
mov
fbld
inc
not
loopne
out
(bad)
jecxz
cld
inc
add
push
aad
movs
xor
cmp
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
cmp
sub
push
add
cmp
xchg
das
rol
push
adc
add
movs
add
and
add
push
loopne
aad
xor
and
inc
push
arpl
fs
sub
bound
jle
inc
inc
jne
push
add
push
xor
dec
aas
dec
div
ja
in
mov
test
outs
in
cmovae
addr16
jae
xchg
jg
dec
cmc
jnp
imul
mov
lock
out
hlt
push
mov
inc
xor
nop
adc
xchg
int
scas
movs
fbld
xchg
mov
xor
xchg
xlat
jecxz
fst
lods
and
out
scas
cmc
inc
cli
(bad)
movs
push
in
add
xor
into
mov
icebp
fs
xor
gs
(bad)
(bad)
out
je
and
adc
rcr
and
add
and
sbb
add
push
adc
or
movs
adc
or
cmp
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
inc
aad
aas
sub
dec
ja
in
mov
test
outs
in
minps
pusha
addr16
hlt
dec
mov
dec
cmc
daa
pop
pop
push
(bad)
xchg
mov
gs
out
mov
adc
inc
xchg
xchg
in
adc
div
fiadd
movs
lods
and
mov
xchg
xor
pusha
mov
xor
rcl
inc
xlat
adc
inc
loop
mov
push
inc
ret
xor
test
ret
fs
fwait
add
iret
(bad)
loop
mul
iret
je
and
adc
out
xlat
xchg
and
adc
add
add
and
add
push
adc
xor
cmp
and
pop
cmps
and
add
xor
or
les
sub
lds
cmp
jp
and
add
push
dec
aad
aas
js
ss
in
mov
test
inc
in
divps
jnp
jnp
outs
mov
dec
cmc
inc
pop
or
xchg
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
cwde
cmps
fnstenv
pusha
(bad)
push
scas
mov
xor
repz
fiadd
test
inc
jecxz
cld
inc
rol
rcl
shl
mov
ret
les
mov
ret
data16
aad
cmc
and
adc
out
lahf
jmp
or
shl
add
daa
xchg
pop
and
adc
xor
pop
lock
lds
and
and
aaa
loopne
aad
xor
adc
push
push
les
movs
dec
inc
inc
lds
inc
mov
aam
add
push
pop
aad
aas
jno
ss
in
mov
test
(bad)
in
cvtdq2ps
and
hlt
jle
xchg
jl
jl
outs
pop
push
push
lea
jmp
add
fld
xor
cwde
adc
xchg
cmps
inc
mov
and
mov
mov
xor
jecxz
loopne
lock
and
out
scas
loope
ret
push
test
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
shr
in
add
and
adc
add
inc
adc
ds
aaa
add
and
add
cs
aad
xor
and
les
cmp
arpl
pusha
(bad)
inc
inc
aam
add
push
jle
inc
aas
dec
not
inc
in
mov
test
jle
inc
(bad)
out
addr16
hlt
imul
cmc
jae
pop
push
mov
mov
pop
add
xchg
jne
xchg
in
adc
lods
mov
and
jo
inc
mov
iret
mov
xor
pusha
mov
xor
rcl
inc
mov
lds
inc
rol
hlt
push
out
ret
xor
cmp
fs
nop
add
iret
pop
data16
cld
je
and
adc
out
lahf
jmp
shl
in
add
xchg
pop
pop
xchg
sub
add
pop
adc
and
movs
sub
pextrw
jo
inc
movs
xor
cmps
sbb
add
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jns
push
aas
jnp
sub
mov
test
push
in
subps
jo
jae
inc
mov
push
cmc
push
pop
or
adc
sti
add
cdq
xchg
adc
inc
xor
jmp
div
leave
inc
scas
movs
mov
movs
cmps
fnstenv
pusha
cmps
push
mov
fistp
inc
in
adc
inc
jecxz
leave
inc
rol
in
push
retf
add
xor
fstp
lds
xchg
add
ret
mov
je
and
adc
lock
rcl
shl
and
outs
add
sbb
push
cmc
add
jg
mov
aaa
xor
and
push
cmps
add
loopne
aad
xor
sub
inc
push
arpl
dec
nop
movs
jns
pop
lds
popa
(bad)
jle
inc
aam
add
push
jg
dec
aas
dec
imul
inc
in
mov
test
gs
in
nop
pop
addr16
xchg
pusha
jne
cmc
inc
pop
push
push
xchg
xchg
icebp
add
push
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
test
jecxz
lds
pusha
les
mov
xor
jecxz
loopne
int
test
inc
out
scas
mov
push
repnz
xor
icebp
mov
icebp
fs
xor
gs
(bad)
(bad)
out
je
and
adc
in
lahf
rcl
adc
ins
in
add
cmp
and
add
pop
adc
gs
aaa
add
and
daa
cmps
pusha
daa
pop
mov
loopne
aad
xor
adc
dec
push
push
les
movs
push
inc
outs
lds
inc
(bad)
jns
jo
push
add
push
(bad)
aad
aas
ja
popa
ja
in
mov
test
jp
inc
punpcklwd
jae
add
ja
arpl
ins
pop
push
push
lea
mul
test
push
mov
scas
adc
inc
xchg
xchg
mov
cmp
lods
mov
and
jo
inc
out
movs
fisub
xchg
mov
xor
not
loopne
int
jmp
hlt
lds
inc
mov
push
retf
xor
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
adc
add
jl
sbb
adc
adc
xor
daa
lock
imul
add
xor
pop
(bad)
jae
(bad)
les
nop
cmp
outs
das
inc
mov
jnp
add
push
sub
test
in
mov
test
popa
in
(bad)
out
addr16
jne
pusha
xchg
jbe
push
cmc
jge
push
push
mov
movs
add
push
repnz
test
mov
xchg
jne
xchg
mov
xor
inc
mov
test
popf
cmps
xchg
xor
pusha
cmps
push
cmps
mov
xor
xchg
xlat
rol
clc
and
jecxz
mov
push
mov
aad
push
int
(bad)
jbe
test
add
ret
data16
aam
jmp
jne
lahf
int
and
and
add
jge
add
rol
sbb
cs
aaa
movs
xor
push
lds
and
pop
cmps
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
dec
aad
aas
ja
sub
mov
test
adc
dec
nop
gs
push
mov
push
cmc
and
dec
push
lea
jmp
add
cmps
xchg
adc
inc
xor
nop
adc
xchg
xlat
inc
scas
movs
scas
and
cdq
cmps
cwde
xor
pusha
mov
xor
xchg
xlat
loop
out
mov
in
rol
scas
mov
add
xor
(bad)
mov
lock
xor
gs
(bad)
out
je
and
adc
neg
and
in
add
pop
xchg
pop
push
xchg
adc
add
pop
adc
xor
xor
and
adc
sbb
xor
xor
or
push
push
push
les
sub
arpl
jne
sbb
aam
add
push
sub
test
in
mov
test
inc
in
nop
jns
jb
push
mov
push
cmc
inc
pop
push
push
xchg
xchg
mov
gs
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
mov
(bad)
pusha
lds
mov
xor
not
loopne
cld
adc
and
loop
mov
push
lock
xor
xchg
ret
xor
gs
(bad)
aam
in
icebp
je
and
adc
out
rcl
shl
add
sbb
add
adc
adc
aaa
mov
aaa
add
lds
xor
outs
daa
add
xor
sbb
arpl
les
xor
outs
das
inc
(bad)
ins
inc
arpl
dec
add
push
pop
aad
aas
jo
ins
ja
in
mov
test
gs
inc
(bad)
out
addr16
jne
pusha
xchg
jne
or
gs
push
push
mov
mov
gs
sti
add
add
jne
xchg
mov
div
fiadd
movs
mov
mov
xchg
xor
pusha
cmps
push
mov
fisttp
inc
icebp
adc
and
jecxz
mov
add
push
in
movs
xor
cmp
mov
rol
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
adc
sub
xor
sbb
adc
jns
add
rol
sbb
sub
ds
lds
and
adc
mov
loopne
aad
xor
adc
ja
les
movs
jne
jl
bound
inc
(bad)
inc
jo
add
push
jge
pop
aas
jno
ins
ja
in
mov
test
pop
in
pcmpgtd
addr16
hlt
jo
xchg
data16
cmc
jp
push
push
lea
lock
cmps
add
iret
xchg
jne
xchg
mov
xchg
mov
and
jo
inc
xchg
movs
mov
std
cmps
mov
push
std
mov
xor
jecxz
loop
cmps
adc
inc
out
scas
ret
inc
mov
(bad)
xor
test
icebp
div
fwait
add
ret
(bad)
loop
jecxz
fdiv
loopne
mov
fidiv
lahf
rcl
xor
sub
push
add
jl
das
pop
adc
adc
sub
add
add
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
inc
aad
aas
jae
xor
in
mov
test
gs
in
nop
and
hlt
push
mov
pop
cmc
push
pop
dec
push
mov
push
in
mov
add
xchg
jne
xchg
mov
ss
mov
and
jo
inc
out
mov
es
cmps
xor
mov
xor
out
in
rcl
and
loop
iret
inc
mov
in
aam
ret
xor
in
mov
ret
xor
gs
(bad)
out
out
fbstp
out
out
clc
jne
lahf
rcl
daa
shl
xor
sbb
add
push
xchg
sbb
add
adc
jg
mov
aaa
add
lds
dec
adc
xor
ds
loopne
aad
xor
push
(bad)
dec
push
arpl
inc
nop
sub
outs
das
jne
jp
arpl
imul
outs
not
jno
data16
test
inc
in
nop
and
hlt
push
mov
push
cmc
inc
pop
push
push
xchg
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
out
cmps
shl
cwde
push
xor
aad
lock
inc
jecxz
hlt
inc
rol
push
rol
shl
mov
lds
xchg
add
ret
data16
fdiv
jecxz
mov
lahf
(bad)
xchg
xor
and
add
or
jno
push
cmc
pop
adc
jae
adc
xor
and
cmps
and
loopne
aad
xor
push
(bad)
ja
les
jne
outs
inc
js
bound
inc
(bad)
push
inc
addr16
add
push
popa
aad
aas
and
ss
in
mov
test
gs
in
pcmpgtd
and
hlt
pusha
mov
or
jno
push
push
mov
push
mul
test
push
fld
xor
mov
xchg
int
scas
movs
mov
mov
pusha
mov
xor
jecxz
jecxz
les
mov
inc
loopne
jmp
pop
aad
out
add
xor
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
and
push
pop
sbb
adc
aaa
mov
aaa
pop
movs
inc
lock
das
and
inc
cmps
and
cmp
aad
xor
adc
inc
push
xor
and
lds
xor
add
aam
and
fs
jb
addr16
in
mov
test
gs
in
sysret
out
addr16
jle
add
inc
jne
cmc
inc
pop
push
push
test
push
test
add
add
jne
xchg
test
mov
jo
inc
stos
movs
test
jecxz
mov
push
lahf
mov
xor
(bad)
xlat
cld
inc
mov
(bad)
shr
rcl
movs
xor
loopne
div
neg
xor
fisub
pop
je
and
jne
lahf
rcl
(bad)
shr
in
add
je
inc
pop
sbb
adc
xor
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
std
data16
shl
out
loope
shl
lahf
leave
xchg
sub
sub
add
das
xchg
cmp
jae
daa
cmc
pop
adc
sub
dec
lock
cmp
dec
or
push
loopne
aad
xor
(bad)
inc
push
jne
and
jns
adc
push
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
cmovg
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
mov
in
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
mov
cld
push
mov
out
pushf
aad
push
cmp
mov
rol
mov
leave
data16
les
les
scas
lahf
iret
xchg
add
xor
in
add
sub
jl
and
add
sub
sub
and
cmp
and
and
jg
cs
pop
sub
les
jno
pop
inc
popa
lds
das
arpl
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
imul
outs
pop
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
rcl
lods
inc
out
repnz
leave
scas
jecxz
std
(bad)
ficom
stc
xor
fdivr
fsub
int
aam
out
retf
data16
cmc
je
and
adc
std
lahf
rcl
xor
xor
xor
cmp
xchg
sar
and
pop
xchg
adc
mov
aaa
pop
movs
pop
lock
ds
add
add
sbb
add
or
les
ins
movs
je
inc
lds
jl
jns
push
aam
cmp
push
pop
aad
aas
jae
dec
ja
in
mov
test
push
out
addr16
dec
mov
ja
jo
dec
push
stos
xchg
mov
gs
test
push
rol
jne
xchg
mov
ss
leave
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
clc
adc
and
retf
inc
rol
stc
push
mov
shl
mov
(bad)
fdiv
fwait
add
ror
je
and
adc
cmps
lahf
fst
cmp
jp
daa
add
and
aaa
rol
pop
adc
cmp
movs
sbb
pop
lds
pop
cmps
xor
das
mov
loopne
aad
xor
es
push
push
les
movs
or
das
(bad)
mov
aam
add
push
push
aad
aas
jge
ins
ja
in
mov
test
cmovbe
data16
dec
mov
or
push
(bad)
xchg
xchg
add
push
mov
add
add
jne
xchg
lods
adc
mov
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
aam
call
and
loope
clc
inc
mov
fcom
(bad)
xor
lock
(bad)
test
lds
les
fnsave
loopne
mov
lahf
fst
and
jnp
cmp
cmp
xchg
das
rol
inc
adc
add
movs
adc
or
cmp
xor
xor
cmp
xor
adc
jae
pop
les
push
lds
(bad)
sbb
aam
add
push
sub
push
aas
dec
div
inc
in
mov
test
pop
in
cmovne
gs
inc
mov
adc
pop
pop
imul
xchg
push
lea
test
push
cdq
xchg
jne
xchg
in
adc
icebp
mov
and
jo
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
jmp
loop
call
inc
loopne
inc
(bad)
iret
push
repz
xor
hlt
mov
shl
add
ror
je
and
adc
mov
pop
push
test
add
xchg
add
sbb
adc
xor
pop
aaa
add
and
pop
cmps
sbb
ds
loopne
aad
xor
adc
jae
arpl
and
inc
pop
lds
daa
(bad)
cmova
mov
push
outs
aad
aas
dec
test
in
mov
test
push
in
cmove
pop
addr16
jge
pusha
xchg
cmp
cmc
and
fs
adc
mov
push
mov
xor
in
adc
movs
mov
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fist
inc
out
lods
and
in
cli
inc
out
(bad)
iret
push
cld
add
xor
(bad)
mov
(bad)
fs
xor
ror
je
and
adc
mov
pop
and
and
ins
in
add
cmp
xchg
daa
rol
pop
adc
add
add
xor
and
add
mov
loopne
aad
xor
push
(bad)
ja
les
ins
movs
jae
push
mov
aam
add
push
dec
aad
aas
push
ins
ja
in
mov
test
dec
in
cmove
pop
addr16
hlt
jl
xchg
cmp
cmc
cmp
imul
xchg
xchg
add
push
(bad)
xchg
movs
push
mov
inc
xor
hlt
adc
mov
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
jmp
and
loope
inc
(bad)
repnz
cld
add
xor
cmp
xchg
lea
les
shl
adc
mov
pop
and
add
xchg
pop
pop
xchg
and
adc
or
pop
lock
lds
and
sbb
daa
daa
push
mov
loopne
aad
xor
pop
(bad)
arpl
les
movs
or
lds
(bad)
ins
inc
jo
jbe
inc
mov
push
xor
pusha
aas
outs
div
inc
in
mov
test
dec
in
cmove
inc
addr16
jae
arpl
and
xchg
mov
gs
test
add
mov
inc
xchg
xchg
call
ss
nop
and
jo
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
rcl
jmp
loop
mov
inc
loopne
clc
inc
rol
push
mov
ret
xor
pushf
mov
shl
add
ror
je
and
adc
scas
lahf
out
xor
push
test
shr
cmp
jne
das
pop
cmp
or
add
inc
adc
cs
aaa
add
and
add
mov
loopne
aad
xor
add
les
imul
das
cmp
inc
inc
arpl
ja
inc
mov
push
dec
aad
aas
ins
test
in
mov
test
jno
inc
unpcklps
pusha
addr16
xchg
cmp
cmc
addr16
fs
adc
sti
add
movs
xchg
jne
xchg
mov
ss
mov
jo
inc
xchg
movs
cdq
and
xchg
adc
fist
inc
out
lods
and
in
cli
inc
cdq
(bad)
std
push
cmc
add
xor
cmp
shl
add
ror
je
and
adc
mov
pop
daa
test
shr
in
add
js
adc
rol
push
adc
sub
movs
es
sub
pop
cmps
cmp
ds
loopne
aad
xor
push
(bad)
ja
les
imul
das
mov
ins
aam
add
push
jb
jle
push
ins
ja
in
mov
test
jle
inc
unpcklps
and
hlt
dec
mov
jno
cs
pop
push
lea
test
test
add
pop
xor
in
adc
xchg
mov
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
call
and
loope
inc
(bad)
out
repnz
xor
cwde
mov
(bad)
lds
mov
les
mov
loopne
mov
lahf
in
daa
pop
and
add
arpl
adc
add
pop
adc
sub
sub
lock
lds
and
and
add
xor
push
(bad)
push
push
push
les
sub
lds
(bad)
outs
inc
inc
aam
add
push
jne
js
outs
test
in
mov
test
dec
in
nop
pop
addr16
dec
mov
adc
jl
or
(bad)
xchg
mov
gs
test
push
les
xchg
xchg
lods
adc
movs
mov
and
jo
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
jmp
loop
mov
inc
loopne
std
inc
out
std
push
lock
xor
cmp
les
lea
ror
je
and
adc
out
lahf
jmp
push
pop
push
test
sar
cmp
outs
and
or
add
push
adc
xor
dec
lock
lds
and
and
or
and
and
push
(bad)
arpl
les
movs
or
lds
jne
jp
addr16
add
push
xor
jne
ins
div
ja
in
mov
test
dec
in
nop
and
hlt
adc
pusha
xchg
and
cmc
fs
add
mov
mov
gs
test
push
mov
mov
jne
xchg
scas
adc
mov
xchg
inc
xchg
movs
cdq
and
xchg
adc
fist
inc
loope
test
inc
in
jecxz
out
loope
test
repnz
pushf
mov
ret
fs
add
ror
je
and
adc
movs
lahf
jmp
sar
sub
and
sub
push
cmc
sbb
imul
and
add
cmps
xor
add
xor
adc
ja
les
nop
sub
lds
je
push
inc
inc
aam
add
push
ins
aad
aas
ins
test
in
mov
test
adc
inc
nop
gs
push
mov
push
cmc
jo
or
mov
sahf
add
push
and
mov
movs
xchg
jne
xchg
hlt
adc
mov
mov
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
xchg
xlat
call
and
loope
inc
(bad)
cmps
push
call
aad
push
(bad)
mov
repnz
xor
les
sti
je
and
adc
cmps
lahf
jmp
shr
adc
cmp
adc
and
adc
or
pop
lock
lds
daa
cmps
pusha
daa
cmp
xor
adc
dec
push
push
les
nop
xor
pop
inc
lds
(bad)
inc
pop
aam
add
push
outs
aad
aas
ins
div
inc
in
mov
test
in
nop
dec
addr16
push
mov
dec
cmc
popw
add
add
push
mov
test
push
mov
mov
mov
xchg
hlt
adc
mov
nop
and
jo
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
mov
jmp
cld
adc
inc
loopne
std
inc
rol
push
out
add
xor
xchg
shl
add
ror
je
and
adc
cmps
lahf
jmp
test
shl
pop
add
and
imul
cmc
pop
adc
adc
and
add
and
and
aaa
loopne
aad
xor
adc
push
push
(bad)
les
nop
cmp
pusha
das
je
jp
push
aam
add
push
(bad)
aad
aas
ins
not
jno
fs
test
jns
inc
andps
inc
addr16
hlt
dec
mov
js
bound
pop
push
adc
xchg
add
cmps
xchg
adc
inc
xor
pushf
adc
icebp
mov
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
cmc
adc
inc
in
jecxz
rol
push
jmp
aad
push
iret
mov
(bad)
les
mov
ror
je
and
adc
in
jmp
or
shl
cmp
xor
xchg
adc
adc
aaa
mov
aaa
xor
pop
lock
lds
and
cmp
sbb
pop
mov
loopne
aad
xor
adc
inc
push
pop
les
nop
movs
jne
dec
lds
je
inc
inc
je
add
push
sub
add
outs
imul
inc
in
mov
test
gs
inc
orps
and
hlt
jo
xchg
cmp
cmc
pop
pop
pop
push
(bad)
xchg
xchg
add
push
mov
add
sahf
xchg
adc
inc
xor
mov
ss
mov
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
call
and
loope
inc
(bad)
aam
out
(bad)
xor
cmp
lea
les
(bad)
je
and
adc
cmps
lahf
call
or
add
add
or
add
pop
adc
cmp
sbb
push
lds
or
daa
daa
and
xor
pop
(bad)
push
push
push
les
xor
pop
inc
inc
lds
mov
aam
add
push
pop
aad
aas
jno
inc
ja
in
mov
test
gs
in
cmovo
popa
addr16
hlt
push
mov
push
cmc
ins
pop
ins
push
mov
mov
gs
test
push
xchg
xchg
xchg
mov
ss
nop
and
jo
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
call
and
loopne
loope
cdq
(bad)
cli
push
into
add
xor
idiv
ret
xlat
xor
add
ror
je
and
adc
in
lahf
rcl
and
jp
syscall
xor
cmp
sbb
adc
ss
aaa
add
lds
xor
jge
and
xor
adc
push
push
(bad)
les
movs
gs
push
lds
pop
(bad)
push
inc
push
aam
add
push
jb
jp
push
not
jle
jg
push
gs
in
cmova
and
mov
jno
inc
pop
pop
push
xchg
xchg
mov
movs
test
push
scas
xchg
jne
xchg
mov
(bad)
push
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
into
adc
and
in
mov
push
aam
shl
mov
les
mov
ror
je
and
adc
in
rcl
shl
xor
outs
add
adc
push
cmc
push
adc
xor
sbb
push
lds
and
sub
and
es
pop
(bad)
push
push
pop
les
xor
lds
jne
cmova
ins
add
push
popa
aad
aas
test
in
mov
test
jle
inc
unpcklps
addr16
dec
mov
ja
push
pop
push
push
lea
stos
gs
mov
push
mov
inc
xor
mov
(bad)
jmp
and
jo
inc
mov
iret
cdq
es
push
xor
push
xchg
xlat
jmp
not
jmp
scas
mov
push
lock
xor
cwde
mov
icebp
fs
xor
les
loop
(bad)
and
adc
in
rcl
data16
xor
outs
pop
xchg
pop
adc
adc
xor
push
lock
lds
and
and
or
inc
mov
loopne
aad
xor
adc
push
push
push
les
aaa
movs
push
inc
pop
lds
mov
aam
add
push
jp
pop
aas
jno
push
ja
in
mov
test
gs
in
orps
pusha
addr16
dec
mov
ja
and
dec
push
lea
stos
gs
mov
push
mov
inc
xchg
xchg
call
ss
mov
and
jo
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
rcl
inc
int
jmp
into
(bad)
loopne
mov
push
jmp
ret
xor
cmp
fs
xor
ror
je
and
adc
out
rcl
and
jbe
xor
add
xchg
adc
add
push
adc
aaa
mov
aaa
add
lds
and
sub
cs
aad
xor
adc
dec
push
(bad)
les
movs
or
lds
inc
mov
and
push
add
push
outs
aad
aas
jb
ss
in
mov
test
gs
in
packsswb
jae
pop
hlt
jle
pusha
xchg
aaa
jne
cmc
and
dec
push
cmps
xchg
mov
mov
cld
push
mov
inc
xor
jmp
ss
mov
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
clc
adc
and
in
mov
push
mov
shl
mov
jmp
lea
ror
je
and
adc
lock
rcl
push
shl
ss
or
or
adc
xor
movs
sub
and
daa
cmps
and
sbb
xor
pop
(bad)
inc
push
pop
les
xor
or
lds
inc
mov
aam
add
push
jne
dec
aas
jo
ss
in
mov
test
gs
in
orps
fs
hlt
inc
mov
pop
cmc
and
push
push
mov
push
stos
gs
mov
push
scas
xchg
mov
test
mov
mov
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
out
inc
int3
adc
inc
aad
mov
push
rol
(bad)
xor
xchg
ret
xor
lds
loop
loopne
loopne
fdiv
ret
lahf
fist
shl
das
add
or
jb
add
cmp
gs
aaa
xor
and
cmps
es
pop
mov
loopne
aad
xor
push
(bad)
arpl
les
xor
gs
pop
mov
aam
add
push
push
aad
aas
je
push
ja
in
mov
test
sbb
inc
cvtdq2ps
arpl
hlt
outs
mov
inc
cmc
and
push
push
(bad)
xchg
xchg
add
push
cli
gs
mov
xchg
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
inc
mov
xor
into
mov
enter
(bad)
add
mov
frstor
out
je
and
adc
cmps
lahf
iret
xchg
adc
xor
add
cmp
cmp
xor
cmp
daa
cmc
push
adc
sub
add
adc
push
dec
push
cmps
xor
and
xor
or
adc
les
jbe
dec
inc
dec
lds
das
jge
push
inc
ja
and
push
sub
push
aas
outs
div
in
mov
test
pusha
in
subps
pop
addr16
hlt
pop
mov
adc
and
xchg
stos
add
push
mov
enter
shr
mov
adc
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
mov
xor
pusha
test
mov
xor
jmp
and
xchg
scas
fadd
(bad)
call
loope
sti
aad
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
and
add
add
jno
and
daa
adc
das
mov
aaa
push
movs
inc
lock
lds
and
cmp
push
daa
pop
mov
loopne
aad
xor
or
inc
push
jbe
and
lds
das
inc
(bad)
push
inc
jl
xor
imul
pusha
ja
in
mov
test
inc
in
packsswb
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
stos
xchg
scas
add
push
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
ss
mov
and
jo
inc
test
mov
mov
pushf
xor
pusha
xchg
mov
xor
not
out
inc
not
icebp
and
nop
scas
stc
inc
aam
in
fld
in
call
repnz
(bad)
mov
iret
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
inc
lock
lds
pop
movs
jb
pop
cmps
xor
es
loopne
aad
xor
or
push
inc
les
jno
pop
inc
pop
lds
js
push
inc
push
aam
and
push
push
aad
aas
outs
mul
in
mov
test
ins
in
mulps
pop
addr16
pop
mov
imul
pop
dec
push
adc
gs
add
xchg
jne
xchg
pushf
adc
mov
xchg
inc
mov
iret
cdq
mov
pusha
adc
fisttp
inc
lods
adc
and
sahf
scas
std
inc
cld
(bad)
aad
icebp
add
xor
cli
mov
xlat
fdiv
retf
in
gs
ret
data16
out
je
and
adc
rcr
xor
add
and
xor
adc
adc
movs
sbb
add
movs
push
daa
add
xor
ss
dec
push
jae
inc
nop
sub
lds
das
pusha
mov
aam
xor
outs
aad
aas
sub
jne
dec
in
mov
test
add
xor
pop
out
addr16
hlt
sbb
inc
xchg
outs
jne
cmc
pop
pop
jo
mov
movs
gs
out
mov
adc
inc
xor
mov
mov
and
fild
movs
stos
and
stc
cmps
popf
xor
pusha
mov
xor
int
loopne
rcl
jmp
inc
out
scas
jmp
clc
mov
xor
int
shl
idiv
fs
xchg
add
ret
pop
data16
out
je
and
adc
mov
pop
and
add
cmp
jo
and
aas
adc
das
mov
aaa
or
push
lock
ss
pop
cmps
sbb
sub
push
loopne
aad
xor
sbb
les
sub
lds
arpl
sbb
aam
add
push
jp
add
pop
mul
inc
in
mov
test
in
lsl
and
hlt
popa
mov
dec
cmc
inc
pop
push
push
mov
mov
lea
movs
push
xchg
xchg
jne
xchg
pushf
adc
lods
mov
and
jo
inc
cmps
movs
xchg
mov
pusha
mov
lods
mov
xor
not
out
inc
lods
adc
and
nop
scas
clc
inc
add
push
call
aad
push
repz
shl
add
iret
(bad)
fisub
out
je
and
adc
in
lahf
out
or
shr
sub
daa
xchg
pop
arpl
adc
or
dec
lock
lds
and
pop
cmps
(bad)
add
or
and
js
cmp
add
(bad)
dec
push
pusha
les
xor
outs
das
fs
pop
inc
and
bound
outs
aad
aas
pop
imul
jbe
add
inc
in
maxps
je
pop
hlt
adc
arpl
pop
pop
je
mov
push
cli
gs
out
mov
adc
inc
xor
test
ss
mov
and
jo
inc
out
mov
movs
cmps
fwait
xor
pusha
cmps
push
mov
fisttp
inc
(bad)
adc
and
jecxz
mov
push
test
xor
stc
mov
shl
add
ret
mov
je
and
adc
repz
jmp
shl
cs
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
or
add
adc
and
jns
push
mov
pop
es
inc
push
arpl
bound
push
(bad)
push
inc
jle
add
push
jge
add
sub
ss
in
mov
test
in
andps
pop
addr16
dec
mov
inc
cmc
and
push
push
mov
push
stos
gs
mov
push
ret
adc
inc
xor
mov
ss
mov
and
jo
inc
mov
pushf
es
cmps
call
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
inc
(bad)
mov
xor
cwde
mov
(bad)
fs
xor
gs
(bad)
fsub
out
je
and
adc
cmps
lahf
jmp
shr
sub
outs
sbb
cmp
and
adc
adc
aaa
mov
aaa
add
and
adc
mov
loopne
aad
xor
push
(bad)
arpl
les
imul
das
imul
inc
and
jae
inc
mov
push
pop
aad
aas
pop
div
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
or
push
mov
mov
push
in
gs
test
push
mov
inc
xchg
xchg
jmp
lods
mov
and
jo
inc
cmps
movs
mov
mov
pusha
mov
xor
not
in
in
adc
inc
loop
fadd
(bad)
in
loopne
ret
xor
cmp
lea
iret
(bad)
popf
data16
out
je
and
adc
std
lahf
stc
xchg
push
pop
push
test
shl
test
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
sbb
or
or
sbb
jns
inc
mov
loopne
aad
xor
sub
dec
push
pusha
les
cmp
outs
das
arpl
add
aam
add
push
pop
aad
aas
and
ins
ja
in
mov
test
sbb
inc
packsswb
cmp
mov
adc
addr16
push
push
cmps
xchg
mov
gs
add
nop
xchg
jne
xchg
hlt
adc
xchg
mov
and
jo
inc
mov
mov
es
mov
push
xor
push
jmp
and
lahf
scas
loope
fld
movs
push
rol
xlat
xor
mov
ret
div
enter
bnd
lock
je
and
adc
out
call
pusha
shl
push
add
pop
xchg
rol
push
adc
xor
inc
lock
lds
and
cmps
and
xor
xor
sub
addr16
arpl
inc
nop
popa
movs
push
inc
jl
bound
addr16
pop
inc
inc
aam
add
push
dec
aad
aas
aaa
idiv
outs
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
imul
push
movs
xchg
mov
push
movs
gs
scas
add
nop
xchg
jne
xchg
mov
mov
jo
inc
test
mov
xor
pusha
mov
xor
int
loop
repz
inc
out
scas
rol
rcl
xor
sar
icebp
xor
add
ret
(bad)
xchg
data16
out
je
and
adc
mov
pop
and
add
cmp
jo
and
aas
adc
das
mov
aaa
shld
sub
cmps
xor
loopne
aad
xor
or
jae
push
les
nop
cmp
arpl
inc
mov
aam
add
push
jbe
pop
aas
ja
push
ja
in
mov
test
dec
in
pcmpgtd
das
addr16
outs
mov
inc
cmc
jo
push
push
mov
push
hlt
movs
test
push
test
xchg
xchg
mov
lods
mov
and
jo
inc
stos
movs
fisub
(bad)
cmps
test
pusha
mov
lods
mov
xor
not
out
inc
lods
adc
and
nop
scas
mov
cld
mov
xor
icebp
mov
ret
xor
gs
(bad)
loop
mov
and
adc
neg
adc
add
add
xadd
cmc
push
adc
aaa
mov
aaa
add
lds
and
and
ss
aad
xor
pop
(bad)
push
push
arpl
push
nop
sub
lds
cmp
aam
add
push
popa
aad
aas
jae
jle
jbe
add
inc
in
maxps
je
pop
hlt
adc
pop
cmc
jno
push
push
lods
xchg
movs
add
push
stos
gs
mov
push
nop
xchg
jne
xchg
mov
test
fild
movs
and
cmps
fwait
xor
pusha
mov
xor
push
in
leave
inc
ficom
mov
inc
icebp
scas
sti
inc
cdq
mov
xor
sar
fs
call
(bad)
cdq
data16
and
adc
rcr
push
test
shr
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
out
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
sti
aad
push
cmp
aam
stc
in
gs
out
je
and
adc
mov
pop
and
add
add
jo
and
daa
adc
das
mov
aaa
push
movs
inc
lock
lds
dec
cmp
push
daa
sbb
xor
or
push
jbe
and
(bad)
lds
das
inc
(bad)
push
inc
js
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
jl
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
popf
xchg
mov
sar
ss
xchg
and
jo
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
rcl
inc
les
icebp
and
lds
in
mov
in
call
repnz
(bad)
mov
fsub
xlat
add
mov
xchg
data16
cmc
je
and
adc
mov
pop
test
shl
add
and
cmp
aas
xchg
jae
jns
and
sub
dec
lock
add
dec
sbb
sub
add
add
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
dec
(bad)
js
and
cmp
popa
mov
push
xor
add
jno
dec
ja
in
mov
test
inc
in
maxps
je
pop
hlt
jo
inc
xchg
inc
jne
cmc
and
push
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
cwde
adc
movs
mov
and
jo
inc
xchg
movs
cdq
and
xchg
adc
(bad)
push
jmp
and
lahf
scas
mov
push
stos
add
push
test
loop
fbstp
xchg
add
test
and
stc
je
and
jne
lahf
test
sub
add
jns
cmp
shr
adc
gs
aaa
push
movs
sbb
dec
lds
dec
inc
cmps
push
daa
pop
mov
loopne
aad
xor
push
(bad)
inc
push
jl
and
push
pop
das
cmp
inc
arpl
cmp
cmp
inc
aas
outs
div
in
mov
test
pop
in
vmread
pop
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
adc
fisttp
inc
mov
(bad)
lahf
scas
inc
(bad)
cld
push
mov
out
jecxz
jmp
jbe
test
add
mov
fldenv
out
je
and
adc
scas
lahf
iret
xchg
add
sub
arpl
aaa
in
add
cmp
jl
and
or
jg
mov
aaa
adc
inc
lock
(bad)
add
xor
sbb
push
loopne
aad
xor
or
jbe
outs
les
jno
pop
inc
popa
lds
das
jns
jp
fs
and
jb
(bad)
outs
mul
in
mov
test
pop
in
cvtps2pd
inc
addr16
hlt
sbb
inc
xchg
ins
jne
cmc
and
dec
push
stos
xchg
mov
loopne
mov
scas
test
push
xchg
xchg
mov
jmp
and
jo
inc
mov
iret
cdq
es
push
lahf
mov
xor
(bad)
xlat
in
inc
mov
(bad)
xchg
scas
cli
inc
out
call
loope
int
icebp
push
cmp
xor
add
mov
out
je
and
adc
mov
pop
das
test
in
add
cmp
jo
and
aas
adc
das
mov
aaa
or
inc
lock
lds
and
sbb
pop
loopne
aad
xor
or
push
je
and
(bad)
lds
das
jg
push
inc
jl
xor
imul
push
ja
in
mov
test
inc
in
mulps
pop
addr16
hlt
adc
push
cmc
das
pop
dec
push
test
mov
mov
mov
push
cmps
xchg
jne
xchg
mov
sar
mov
xchg
inc
(bad)
movs
and
cmps
pushf
xor
pusha
xchg
mov
xor
not
out
inc
lods
adc
and
nop
scas
stc
inc
cli
(bad)
in
mov
in
call
repnz
(bad)
mov
int3
xor
add
mov
fisub
out
je
and
adc
mov
pop
xor
pusha
shl
pop
outs
aas
xchg
cmp
jae
daa
cmc
and
sub
dec
lock
cmp
dec
sbb
push
loopne
aad
xor
(bad)
inc
push
ins
les
nop
ja
jae
jns
adc
jp
inc
jg
cmp
popa
mov
push
jno
add
imul
add
inc
in
maxps
je
pop
hlt
adc
dec
cmc
and
dec
push
mov
scas
add
push
mov
popf
test
push
mov
inc
movs
jne
xchg
mov
iret
jmp
and
jo
inc
xchg
movs
cdq
and
xchg
cmps
retf
xor
add
or
add
xor
mov
fidiv
inc
cmc
cmps
test
movs
int
inc
lahf
add
add
xchg
push
add
add
add
add
add
rep
(bad)
adc
or
add
add
lods
mov
nop
aam
cmp
add
pop
mov
add
add
mov
or
xor
add
xor
lods
adc
xor
add
imul
sbb
clc
push
fstp
jp
lock
movs
in
stos
cmp
dec
inc
les
mov
adc
mov
loope
mov
pop
(bad)
imul
ret
push
outs
scas
into
cmc
lock
cli
popa
push
rol
add
fstp
mov
add
cmp
push
arpl
pop
inc
inc
dec
inc
inc
(bad)
inc
movs
mov
sub
push
mov
xor
stc
lea
dec
or
add
or
xor
jo
adc
fstp
pop
jg
movs
push
inc
inc
xlat
mov
and
fs
or
or
push
iret
ret
addr16
mul
out
jmp
mov
and
inc
cli
inc
in
loop
mov
std
(bad)
repz
cld
shl
push
mov
or
into
aam
adc
push
(bad)
mov
mov
lahf
mov
xchg
ja
mov
mov
xchg
stc
cmps
ret
test
xchg
cmps
ffree
lahf
mov
nop
call
sahf
sbb
or
daa
call
cmp
pop
pop
gs
pop
pop
inc
sub
adc
arpl
lea
cdq
(bad)
dec
loopne
(bad)
mov
inc
int3
jnp
movs
ret
pop
out
push
pusha
inc
xor
mov
mov
dec
push
or
dec
push
inc
and
scas
das
xor
sbb
shld
mov
or
sub
mov
jns
push
jp
push
rcr
sub
pop
ret
pop
xchg
adc
dec
sbb
or
add
add
add
fdivrp
sti
retf
sti
sub
xor
cdq
out
in
lods
jmp
jecxz
in
and
cdq
rcr
mov
test
loop
aam
push
dec
aad
movd
int3
js
les
out
or
mov
mov
xchg
xor
jns
mov
out
or
stos
sub
xchg
neg
lahf
push
xchg
pop
aam
jb
enter
or
movs
mov
sub
sub
stc
jno
jbe
xor
jg
das
imul
outs
hlt
mov
jnp
push
mov
stos
xlat
ins
inc
push
push
sub
jo
or
jl
dec
mov
mov
dec
nop
cmp
aaa
sbb
push
adc
xchg
jmp
in
sub
and
sub
and
in
sbb
sbb
push
dec
push
sbb
or
adc
ror
call
inc
sbb
add
dec
in
mov
(bad)
je
pop
lock
je
(bad)
jge
(bad)
jmp
jecxz
push
pop
mov
rcr
pop
(bad)
aad
push
iret
mov
mov
std
fcmovnb
sub
inc
mov
push
out
jno
mov
call
cmps
test
mov
inc
fnstsw
pop
xchg
adc
xor
pop
mov
pop
lds
call
scas
mov
gs
jno
sub
jns
inc
sub
imul
gs
ret
pusha
out
outs
int3
push
retf
pop
push
add
push
lahf
cmovge
dec
push
inc
xor
pop
push
aas
xchg
jge
stos
xor
mov
xor
xchg
cmp
into
and
push
aaa
sub
std
sbb
push
pop
inc
sbb
adc
adc
dec
add
dec
movntps
add
(bad)
pop
std
in
cmp
pusha
hlt
push
jne
sar
jne
outs
fisttp
sub
jmp
stc
jnp
call
fistp
aam
rol
adc
fldcw
jmp
fcomp
(bad)
call
and
mov
jbe
repnz
jb
sub
scas
pop
pop
dec
sub
and
mov
sahf
aad
jnp
jo
mov
lods
mov
inc
test
in
jl
cmp
mov
jp
icebp
adc
retf
daa
jnp
gs
arpl
mov
inc
in
cmp
pop
jae
push
hlt
push
pop
jno
xchg
dec
push
in
push
mov
test
inc
dec
jns
cmp
mov
xchg
aaa
ins
hlt
xor
scas
or
cmp
imul
(bad)
in
push
and
pushf
sbb
adc
pop
mov
sbb
adc
in
or
push
add
adc
imul
std
imul
cwde
call
cmc
mov
loopne
out
mov
out
test
or
in
pop
rcl
sbb
cli
(bad)
fisub
cmps
push
lds
mov
ds
dec
(bad)
int
mov
xor
into
ret
jle
mov
cmc
data16
xor
fisubr
addr16
test
mov
pop
cdq
sbb
cmc
sahf
ja
fst
outs
mov
test
sub
push
add
inc
popa
fs
mov
add
jbe
and
and
retf
push
dec
imul
into
(bad)
ja
sbb
out
out
ror
inc
and
xlat
mov
ss
aaa
fld
xor
shr
sub
cmp
ret
adc
and
dec
scas
or
jmp
js
push
fnstsw
jae
inc
xor
mov
sub
add
push
retf
leave
daa
mov
cmp
(bad)
mov
jne
mov
sti
mov
rcl
mov
and
popf
fsub
mov
inc
push
add
push
mov
ret
lds
mov
lds
ins
jmp
ss
cmc
mov
test
movs
jl
ficomp
test
pop
rol
xchg
popf
cdq
rcl
lock
retf
stos
xchg
das
xchg
movs
mov
and
imul
xor
fs
jo
(bad)
out
pop
stos
adc
retf
or
out
popa
cmp
sahf
fcomp
pop
pop
cwde
test
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
or
add
fs
add
and
add
and
jb
outs
addr16
add
add
add
add
push
push
add
adc
add
and
dec
inc
add
add
adc
add
and
outs
bound
add
add
add
push
popf
add
or
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
outs
add
mov
fwait
add
mov
mov
add
cld
add
or
daa
add
add
push
and
add
push
and
add
pop
and
add
add
add
add
add
add
add
cmp
cmp
add
add
add
add
sldt
add
add
add
sldt
add
add
cmp
push
add
sldt
add
add
or
adc
add
add
add
or
push
add
add
add
add
add
or
sbb
adc
add
aaa
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
adc
xor
adc
add
add
add
push
add
add
add
add
add
add
add
add
adc
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
push
add
add
add
adc
cdq
add
add
sbb
dec
add
add
add
add
add
add
add
add
add
add
sbb
pop
add
add
add
add
add
adc
add
jns
fiadd
add
mov
add
add
add
add
add
add
repnz
add
cli
add
add
add
mov
add
add
add
add
add
lods
add
add
add
add
mov
add
add
add
add
inc
add
jns
fiadd
xor
add
stos
add
add
add
add
add
add
add
imul
cdq
add
push
and
add
add
sbb
push
add
add
add
add
xchg
sbb
add
add
add
adc
aaa
add
add
add
and
add
add
add
add
add
add
and
add
add
add
dec
add
add
add
add
add
adc
cmp
jp
add
mov
add
sbb
push
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
adc
jns
mov
add
int3
and
add
add
add
add
add
add
and
add
add
add
add
add
add
and
add
add
sbb
add
inc
add
sub
add
adc
add
add
inc
add
daa
add
add
add
add
add
add
add
add
inc
add
add
add
dec
daa
add
add
push
sbb
push
add
add
add
add
xchg
sbb
add
add
add
push
sbb
push
add
add
add
add
xchg
sbb
add
add
add
sbb
add
lods
sub
add
add
add
icebp
add
add
add
add
add
and
add
add
adc
cdq
add
add
test
add
add
adc
mov
add
test
add
add
adc
test
add
sbb
add
add
adc
mov
xor
add
add
add
and
add
add
xchg
add
add
add
add
add
xchg
jge
push
add
add
add
add
xchg
sbb
add
add
add
add
push
add
xor
add
add
add
add
add
add
adc
jns
jbe
push
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
xor
sbb
or
cld
add
add
xchg
cdq
add
add
add
add
or
adc
cmp
inc
add
add
add
add
add
add
add
adc
cdq
add
add
add
adc
jecxz
repnz
add
cmp
add
add
add
cld
add
add
adc
fild
xor
verr
cmp
add
add
sbb
push
add
add
cmp
add
add
add
add
add
add
adc
cmp
sub
cmp
add
add
add
add
adc
aaa
add
str
add
add
xchg
add
inc
add
add
cmp
xchg
add
add
add
add
xchg
jge
push
add
add
add
add
xchg
sbb
add
add
add
adc
fild
test
adc
dec
aas
add
add
adc
cmp
xchg
add
add
adc
jns
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
xchg
sbb
add
aas
add
add
xchg
sbb
add
inc
add
add
sbb
push
add
inc
add
add
xchg
jecxz
enter
fadd
add
add
add
add
add
add
xchg
add
add
add
add
add
xchg
jge
push
add
add
add
add
xchg
sbb
add
add
add
add
inc
add
add
xchg
add
add
add
add
add
add
adc
jns
and
pop
add
add
add
xor
add
dec
add
add
adc
test
add
add
add
add
adc
mov
add
add
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aam
add
add
xchg
sbb
add
dec
add
add
xchg
sbb
add
add
add
add
dec
dec
add
add
xchg
add
enter
add
add
cdq
add
add
add
add
add
jns
add
add
add
add
add
mov
add
add
add
add
fild
add
add
and
add
add
fild
add
add
add
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
add
add
add
fild
add
add
cdq
add
add
add
add
add
jecxz
add
add
mov
add
add
add
add
fild
add
add
and
add
add
push
push
add
add
pop
push
add
add
push
add
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jge
push
add
add
push
add
add
add
add
add
add
add
sbb
sti
add
xor
or
add
pop
add
pop
add
add
imul
outs
add
xchg
add
pop
add
add
add
add
push
add
add
add
add
add
add
cdq
add
add
add
add
push
add
jge
push
add
jge
push
add
jge
push
add
jge
push
add
add
push
add
add
push
add
add
add
add
add
add
inc
add
add
push
add
add
mov
sbb
jl
iret
add
add
add
add
add
add
add
add
push
add
add
inc
mov
add
add
sub
xor
jnp
sbb
sbb
nop
add
add
add
add
popa
add
add
add
add
add
adc
jge
push
add
add
sub
popa
add
xor
add
jge
push
add
add
lea
test
fwait
add
jge
push
add
jge
push
add
jge
out
add
add
add
and
inc
xor
cmp
add
pop
add
inc
add
dec
push
or
popa
add
add
add
add
push
dec
add
add
push
add
add
add
add
pop
add
add
mov
add
push
add
add
add
xchg
add
add
jae
inc
add
add
add
jae
mov
pusha
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
mov
loopne
adc
push
add
add
mov
jecxz
sbb
mov
add
jae
mov
add
adc
push
add
add
add
add
add
add
add
adc
push
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
mov
and
jae
mov
inc
add
mov
pusha
add
mov
add
add
add
add
add
mov
loopne
adc
push
add
add
add
add
add
add
add
adc
push
add
adc
push
add
add
add
add
add
adc
push
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
push
adc
push
add
adc
push
add
adc
push
add
add
push
adc
push
add
pop
adc
push
add
pop
adc
push
add
adc
push
add
pop
adc
push
add
pop
adc
push
add
or
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
add
add
adc
push
add
adc
push
add
add
add
adc
push
add
adc
push
add
add
add
add
add
add
add
add
add
pop
add
add
and
sub
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
or
add
add
ins
adc
sbb
add
or
add
or
add
add
adc
add
add
add
add
or
daa
add
add
add
add
or
add
add
add
add
add
add
push
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
pop
add
add
adc
push
add
outs
jne
gs
add
outs
jne
dec
imul
je
push
imul
jae
arpl
push
jns
je
ins
add
arpl
ins
imul
loope
test
inc
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
mov
arpl
add
arpl
outs
jb
push
arpl
imul
jb
je
arpl
inc
je
jb
bound
add
jae
gs
cs
arpl
imul
outs
add
je
dec
outs
addr16
add
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
add
je
jb
arpl
outs
add
jbe
jb
outs
add
je
imul
add
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
outs
imul
je
ins
cs
push
imul
gs
inc
jo
inc
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
imul
gs
ins
jbe
inc
jbe
outs
je
jb
jae
addr16
push
gs
gs
imul
ins
bound
inc
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
imul
jae
bound
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
je
add
and
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
outs
jbe
jb
imul
add
arpl
imul
je
ins
cs
gs
add
je
jns
gs
inc
outs
outs
arpl
add
jb
popa
ins
add
jae
gs
cs
dec
add
popa
add
je
inc
jbe
fs
arpl
inc
jbe
fs
arpl
push
jns
je
ins
cs
arpl
imul
arpl
loope
mov
jne
push
jns
add
push
arpl
sub
add
gs
imul
gs
imul
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jne
ins
jae
inc
gs
popa
jae
inc
outs
fs
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
gs
and
jb
popa
fs
je
je
arpl
je
imul
outs
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
gs
ins
add
jo
imul
add
outs
push
arpl
je
add
fs
jo
add
inc
push
push
inc
je
jb
bound
add
je
add
jb
jns
inc
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
imul
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
pop
inc
jb
popa
je
jb
push
inc
dec
popa
je
add
outs
outs
ins
imul
add
and
outs
je
jb
add
outs
jbe
jb
imul
pop
dec
outs
gs
popa
ins
imul
popa
je
add
je
popa
je
add
ins
je
arpl
je
gs
gs
je
add
jbe
imul
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
dec
outs
ja
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
outs
outs
inc
je
jb
bound
add
je
imul
gs
imul
push
jb
jns
push
je
ins
jae
inc
outs
jo
inc
jb
popa
jns
push
jb
je
add
data16
arpl
imul
imul
outs
add
ins
add
imul
je
jae
dec
gs
outs
jb
push
je
gs
ins
add
jb
popa
jns
inc
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
inc
gs
popa
je
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
jo
gs
imul
add
imul
ins
add
jo
jae
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
jae
je
dec
je
ins
add
je
dec
popa
ins
add
outs
je
imul
popa
jb
jae
jb
jae
jne
arpl
imul
jae
jne
arpl
outs
addr16
add
ins
gs
jne
add
data16
je
inc
gs
js
arpl
imul
ins
bound
addr16
inc
gs
jne
je
inc
gs
bound
arpl
ins
jne
add
and
outs
popa
fs
and
jne
jo
gs
dec
ins
fs
jae
inc
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
add
dec
cmp
arpl
xor
bound
xor
xor
aaa
add
add
add
add
sub
add
add
add
add
add
add
add
add
xor
aaa
add
add
add
add
add
jmp
jbe
dec
inc
call
and
or
aad
cmp
mov
pop
push
sbb
mov
push
add
and
add
add
add
add
add
pop
add
add
add
push
add
or
or
add
push
pop
add
sbb
add
add
push
add
add
push
add
push
push
or
pop
pop
add
sbb
or
push
add
adc
adc
sbb
add
adc
sbb
add
sub
add
xor
add
adc
adc
add
adc
or
add
add
add
add
add
push
add
or
or
add
push
or
add
add
or
push
pop
add
push
push
or
pop
and
or
add
or
dec
sbb
or
add
dec
or
add
dec
adc
or
add
sbb
adc
adc
pop
push
adc
add
push
adc
pop
pop
push
adc
sbb
add
or
adc
or
adc
add
adc
pop
push
adc
sbb
add
or
add
sbb
pop
add
or
or
add
sbb
add
or
and
push
push
push
push
popa
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
push
adc
add
add
add
add
push
sbb
push
add
adc
pop
add
push
sbb
add
push
push
push
push
or
add
push
adc
or
sbb
or
or
add
sbb
add
or
add
add
or
add
adc
pop
or
add
adc
pop
or
sysret
or
or
sbb
sbb
add
add
or
or
add
push
push
push
push
push
or
add
or
pop
add
add
push
add
add
or
add
push
or
or
add
add
xor
xor
add
adc
adc
or
push
add
adc
add
or
add
adc
and
add
sbb
add
sbb
or
and
adc
sbb
and
push
adc
sub
push
adc
add
adc
or
add
xor
dec
sbb
or
add
push
or
push
adc
or
add
add
add
add
adc
add
adc
or
push
or
add
dec
adc
push
or
or
add
sbb
sbb
or
or
sbb
sbb
push
push
adc
add
add
add
add
add
add
add
sbb
or
add
or
mov
mov
or
pop
and
add
add
add
dec
sbb
or
push
add
jo
data16
jb
bound
jae
popa
je
outs
outs
add
add
or
add
or
or
add
add
sbb
add
sbb
and
sbb
sbb
or
add
adc
push
adc
adc
push
adc
add
xor
sub
xor
adc
add
push
adc
sbb
mov
add
or
or
or
adc
push
push
add
add
adc
or
add
add
add
add
add
add
add
adc
add
add
xor
add
adc
or
add
add
inc
push
add
adc
or
add
push
add
sbb
or
or
add
adc
or
or
add
xor
dec
or
add
sbb
or
push
adc
adc
push
adc
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
xor
add
add
add
dec
mov
add
and
add
adc
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
