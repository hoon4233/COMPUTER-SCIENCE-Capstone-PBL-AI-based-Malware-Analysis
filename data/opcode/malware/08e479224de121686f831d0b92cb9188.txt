inc
mov
add
dec
add
add
add
add
adc
add
add
add
add
inc
add
add
xor
add
add
add
and
or
jge
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
inc
add
add
add
adc
add
add
or
add
or
sub
pop
push
push
or
add
or
push
push
push
mov
push
add
or
pop
outs
pop
add
or
push
pop
outs
sbb
add
fmul
sub
add
add
add
add
adc
and
add
add
add
sbb
add
dec
add
add
add
adc
jae
add
or
push
push
jae
add
or
pop
sub
add
or
push
pop
outs
sbb
add
fadd
sub
push
outs
sbb
add
fmul
cmp
add
outs
adc
add
sub
add
or
or
add
fiadd
adc
or
add
add
add
str
sbb
or
add
add
add
add
and
or
add
add
add
add
add
adc
add
sbb
add
pop
add
add
add
adc
jae
add
or
sub
add
or
push
pop
add
sbb
add
push
jae
add
or
sub
add
adc
or
or
add
or
push
sub
push
outs
sbb
add
fmul
jo
outs
adc
add
sub
add
or
or
add
fiadd
adc
adc
add
add
add
sbb
or
add
add
add
add
xor
or
add
add
add
add
cmp
sbb
add
add
xor
add
add
add
add
pop
or
add
or
add
add
pop
add
or
add
or
add
or
add
jb
add
jo
pop
sub
add
or
sub
add
or
add
or
add
add
sub
add
or
add
or
add
or
or
add
or
pop
or
sub
add
fadd
sub
add
add
add
sub
xor
pop
add
add
sbb
add
add
sub
add
add
or
add
adc
add
jo
or
add
add
add
push
xchg
or
mov
pop
lea
add
add
add
pop
push
pop
mov
sub
add
jb
add
jo
add
sub
add
sub
add
or
or
add
pop
sub
push
sbb
xor
jb
add
jo
or
add
pop
add
push
add
push
or
sub
push
pop
pop
pop
xor
jb
add
jo
or
add
pop
sub
pop
sub
pop
adc
ficom
or
jae
add
outs
adc
add
sub
add
or
add
or
sub
sub
adc
add
add
add
add
add
sub
add
sub
add
sub
add
xor
add
add
push
add
adc
sub
push
outs
push
add
or
pop
lea
or
add
pop
adc
outs
sldt
or
add
adc
jb
add
jo
add
adc
add
sub
add
or
add
or
add
add
add
add
add
adc
add
push
add
adc
add
sub
xor
add
add
add
add
adc
adc
add
or
sub
adc
add
sub
add
push
or
sub
clts
add
pop
add
push
or
add
add
sub
add
add
add
push
add
sub
add
push
add
sub
add
sub
add
sub
add
sub
xor
add
add
add
add
adc
add
add
sub
add
or
jb
add
jo
push
add
add
and
xor
add
jae
add
or
push
add
add
add
add
sbb
add
add
push
add
sub
add
xor
add
add
or
add
sub
add
push
jb
add
jo
add
add
xor
add
or
je
add
sbb
adc
add
sbb
add
or
add
sub
add
push
jb
add
jo
add
add
xor
add
or
je
add
sbb
adc
add
sbb
add
or
add
sub
add
push
jb
add
jo
add
add
xor
add
or
je
add
sbb
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
push
push
add
and
jb
outs
addr16
add
add
add
add
push
push
add
add
add
inc
push
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
or
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
cdq
add
add
pop
add
add
add
add
add
add
add
add
push
add
ins
add
add
add
add
add
add
add
add
adc
mov
add
add
add
add
add
add
add
add
add
add
or
add
adc
mov
add
add
add
add
add
add
add
add
add
mov
jnp
adc
mov
and
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
and
add
add
add
js
add
add
xchg
add
add
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
les
add
add
xchg
xor
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
or
add
outs
and
add
add
add
add
add
add
xchg
or
add
mov
add
add
add
and
add
add
add
add
add
add
add
add
rol
rol
rol
(bad)
add
fiadd
rol
(bad)
add
rol
(bad)
add
fiadd
rol
rol
(bad)
add
rol
rol
add
adc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
add
add
add
add
xor
add
add
xor
mov
push
add
add
add
add
push
add
add
add
add
add
add
pop
add
add
add
add
add
adc
push
add
add
add
add
adc
xchg
add
add
add
and
fadd
test
and
out
add
add
add
add
add
add
add
fwait
add
add
add
add
xor
add
add
add
add
add
add
add
daa
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repz
add
add
add
add
popa
add
add
mov
add
jmp
add
jmp
inc
add
jmp
inc
add
loop
imul
mov
stos
add
add
add
add
icebp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
mov
add
add
add
add
out
add
repnz
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
sti
add
add
fld
cdq
add
add
add
fld
cdq
add
add
add
add
add
add
add
push
add
add
add
add
add
gs
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
arpl
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
jne
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
add
push
arpl
popa
jb
push
push
gs
bound
arpl
je
jb
bound
add
jae
ins
bound
dec
gs
outs
fs
outs
outs
add
arpl
je
outs
outs
add
add
je
inc
outs
je
jns
outs
imul
push
jae
add
jbe
imul
outs
je
xor
addr16
dec
gs
popa
add
jb
outs
add
outs
arpl
add
jae
gs
cs
dec
add
jb
popa
ins
add
ins
outs
jb
push
je
gs
ins
add
je
add
imul
add
jb
popa
jns
dec
inc
imul
ins
add
jo
jae
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
ins
jo
gs
imul
add
jae
gs
cs
arpl
imul
je
addr16
jo
jns
push
imul
add
jns
je
push
je
gs
ins
add
gs
je
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
ins
ins
gs
imul
imul
popa
je
inc
arpl
jo
outs
jb
inc
jb
jo
outs
push
je
gs
ins
dec
outs
fs
jo
outs
ins
popa
imul
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
jae
je
inc
jo
ins
imul
inc
popa
jae
add
jae
gs
cs
arpl
imul
arpl
inc
jbe
fs
arpl
inc
jb
popa
je
inc
outs
ins
popa
imul
js
arpl
imul
ins
bound
addr16
inc
outs
fs
popa
jae
add
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jne
ins
dec
popa
ins
add
gs
je
dec
outs
jae
popa
outs
arpl
jb
ins
inc
outs
fs
outs
ja
popa
jo
push
outs
ins
outs
popa
add
jb
jns
inc
outs
jo
add
je
imul
jb
bound
gs
jae
addr16
je
jb
bound
add
je
imul
jb
gs
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
data16
outs
arpl
jno
popa
ins
jae
addr16
inc
jae
gs
bound
inc
gs
bound
arpl
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
bound
imul
outs
jae
popa
ins
ins
cs
add
arpl
ins
imul
jne
arpl
outs
jb
je
jb
bound
add
bound
push
gs
jne
arpl
add
dec
push
jb
jo
gs
arpl
inc
pop
xor
inc
pop
xor
inc
pop
xor
add
add
inc
jne
je
jb
add
add
push
add
gs
push
bound
imul
outs
jae
popa
ins
ins
add
dec
push
jb
jo
gs
push
gs
jne
arpl
cs
jae
jne
arpl
add
add
add
inc
add
jae
add
bound
ins
add
and
add
jb
outs
add
and
outs
add
arpl
jne
jb
jb
add
add
add
xor
jge
add
inc
add
ins
add
jb
add
jae
imul
and
add
jb
outs
add
and
outs
add
arpl
jne
jb
jb
add
add
add
sub
add
and
add
jb
outs
add
and
outs
add
arpl
jne
jb
jb
add
add
add
sbb
add
add
jb
inc
add
ins
add
imul
push
add
je
jne
jb
outs
add
add
add
outs
add
add
je
outs
add
add
add
add
outs
add
jb
arpl
add
add
cmp
jae
je
outs
add
imul
and
jb
add
outs
add
jb
arpl
add
and
popa
add
je
imul
and
imul
add
inc
add
arpl
and
jb
add
outs
add
jb
arpl
add
add
and
outs
add
ins
add
je
add
add
add
outs
add
jb
arpl
add
add
xor
arpl
add
je
imul
and
add
jb
imul
and
push
add
jae
je
outs
add
add
add
add
sub
push
add
push
add
popa
add
jo
add
add
add
outs
add
jb
arpl
add
add
add
add
pop
jb
dec
add
add
jb
dec
add
jns
add
add
cmp
add
pop
stos
sahf
dec
enter
add
add
push
add
add
add
add
or
add
add
add
adc
add
inc
push
and
sbb
sbb
push
add
push
pop
and
add
and
or
and
sbb
add
add
pop
adc
add
adc
and
adc
add
add
adc
jns
add
mov
add
or
add
or
add
adc
add
push
push
add
add
or
sbb
or
and
add
and
push
add
sbb
and
adc
and
add
adc
and
sbb
adc
push
and
add
cmp
sbb
mov
add
add
add
add
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
push
push
add
or
or
and
or
add
sbb
add
sbb
add
sbb
add
add
sbb
add
add
pop
and
or
add
or
xor
add
mov
add
adc
add
xor
add
add
add
add
add
mov
add
add
add
add
add
mov
or
sbb
push
dec
jb
popa
je
outs
outs
popa
ins
and
ins
bound
and
jo
imul
jae
add
add
or
bound
push
push
add
xor
outs
jo
jb
addr16
and
jb
je
outs
outs
popa
ins
and
ins
bound
and
jo
imul
jae
xor
xor
add
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
adc
bound
imul
imul
add
sub
add
xor
bound
cmp
xor
xor
sub
sub
sub
aaa
bound
fs
data16
or
add
add
add
add
add
xor
xor
xor
xor
add
add
and
inc
inc
inc
inc
dec
inc
dec
inc
dec
dec
inc
dec
dec
dec
dec
dec
push
push
push
push
push
and
and
es
and
add
xor
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
or
add
add
add
pop
adc
dec
sbb
adc
jno
jne
dec
sbb
or
add
adc
add
sbb
adc
inc
sbb
or
or
mov
pop
add
aas
add
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
frstor
or
nop
xchg
inc
xchg
jns
add
add
or
add
push
add
add
add
add
add
add
add
add
jb
dec
add
push
add
or
dec
add
jns
sub
add
add
adc
mov
(bad)
xor
adc
ja
or
or
push
in
pop
cmps
std
sbb
mov
std
sahf
xor
ins
mov
loope
and
aad
jmp
or
mov
xchg
mov
das
dec
jnp
jne
lods
cmp
ror
mov
dec
push
cld
adc
xchg
out
inc
adc
mov
sbb
daa
std
cmp
int3
mov
sbb
pop
push
ja
push
ins
sbb
or
jns
je
mov
xchg
jecxz
sub
or
mov
mov
fsubp
push
mov
jle
loope
bound
movntq
out
hlt
cld
mov
gs
shr
sbb
sar
pop
jno
scas
movs
fcmovnu
popf
dec
mov
mov
push
inc
mov
out
and
fdivr
push
or
inc
and
lahf
gs
jmp
imul
mov
sub
xor
(bad)
adc
cli
stos
and
inc
stos
inc
pop
push
fmul
cmp
pop
movs
repz
inc
(bad)
out
sub
push
repz
out
ret
(bad)
jae
pop
repz
jnp
push
and
mov
ja
push
add
icebp
fs
jbe
dec
dec
cmps
jg
jae
mov
scas
jne
jmp
mov
sub
xor
out
or
cmps
icebp
cs
adc
arpl
pop
loopne
mov
mov
cli
mov
adc
test
aam
or
jo
mov
mov
cmps
xchg
mov
jns
cmp
xchg
push
jns
jo
in
pop
pusha
pop
lds
mov
cld
iret
mov
sahf
into
add
mov
mov
lods
clc
fld
cmp
arpl
jno
jae
shl
movs
pop
out
into
add
and
popa
jo
jmp
pop
aaa
mov
xchg
mov
adc
jbe
retf
ficomp
jmp
sbb
inc
dec
xchg
dec
mov
push
lock
lods
dec
push
jp
nop
movs
cmp
nop
and
fsub
ss
dec
dec
jnp
mov
ror
clc
cmp
int
cmp
or
mov
pop
out
add
loopne
jl
pop
dec
pop
mov
cld
ret
add
xchg
out
mov
xchg
push
inc
jge
push
ret
mov
adc
inc
js
or
dec
pop
jmp
out
xlat
lods
fcom
inc
adc
sbb
xchg
dec
mov
inc
and
repz
mov
sbb
or
mov
or
out
das
push
fucomi
sbb
pop
fs
jbe
pop
int
push
mov
getsec
jl
xchg
adc
retf
and
cmp
stc
xor
xchg
jb
mov
or
sbb
mov
and
sub
push
daa
not
xor
scas
mov
inc
jle
out
add
mov
ja
(bad)
xor
inc
jno
adc
pop
clc
repnz
sbb
mov
pop
test
jno
sub
imul
icebp
popa
ja
sbb
mov
adc
in
sub
jo
xchg
pop
loopne
bound
nop
sbb
dec
cmp
and
jbe
fs
stos
xor
sub
lods
inc
mov
mov
mov
ret
outs
fst
cmp
int
sar
popa
push
retf
outs
pop
retf
retf
stos
inc
in
jae
ret
xchg
mov
test
arpl
jne
aaa
fidiv
and
mov
push
cmps
dec
(bad)
dec
cmp
clc
test
inc
loop
clc
inc
test
addr16
scas
test
push
push
ss
int3
nop
jmp
adc
ss
stc
cmp
and
xchg
jbe
arpl
mov
int3
push
dec
add
dec
mov
push
mov
pusha
addr16
jbe
xor
bound
xchg
iret
pushf
popf
dec
sar
push
xchg
jle
push
lods
pushf
mov
push
ins
inc
test
lock
in
retf
adc
adc
jns
aad
push
mov
loop
repz
fs
imul
push
jmp
loope
daa
jmp
lods
repnz
pop
retf
inc
je
mov
cmp
ja
adc
or
push
mov
xor
aaa
adc
mov
xchg
inc
adc
iret
(bad)
clc
fdivr
fidivr
sub
rol
in
(bad)
cli
leave
in
call
test
mov
in
sti
push
and
test
cmp
dec
push
jmp
lahf
test
push
inc
bound
cli
xchg
mov
out
add
add
test
sub
or
jns
dec
test
(bad)
stos
cmp
std
and
or
mov
sub
add
adc
xchg
fxch
(bad)
cmp
sbb
add
rol
mov
or
call
popa
ret
or
dec
sub
gs
mov
lea
mov
jmp
xchg
mov
xchg
lahf
pop
mov
dec
mov
push
mov
jno
fadd
data16
cld
push
ret
dec
xor
mov
sub
(bad)
rol
pop
push
jnp
add
mov
mov
dec
cmp
fimul
mov
outs
cmp
sbb
jmp
push
sbb
rcr
rcl
pusha
push
push
imul
add
jmp
and
sbb
movs
pop
mov
imul
aam
jb
push
jnp
mov
loopne
mov
jns
test
dec
mov
cmp
fild
rcr
jo
je
outs
xlat
pop
sbb
pop
push
mov
sar
jmp
(bad)
jmp
lock
pop
sbb
hlt
dec
std
push
fwait
stos
sbb
(bad)
fisttp
rol
xor
test
pop
aaa
imul
das
fadd
pop
or
iret
and
in
mov
and
jg
inc
pop
popf
cmps
test
div
idiv
inc
mov
retf
push
rcl
jecxz
jp
enter
push
jecxz
loope
cmps
push
icebp
pop
into
and
mov
mov
pop
lahf
adc
xor
xchg
mov
inc
mov
leave
dec
xor
movs
loopne
adc
lahf
add
lods
cmp
push
cli
push
xchg
xchg
mov
sbb
sbb
dec
xor
mov
repnz
mov
cmp
aam
add
sub
push
fwait
mov
mov
adc
xchg
aaa
out
outs
cmc
or
jns
sub
adc
adc
or
jns
out
leave
lods
or
sti
das
mov
add
loopne
or
loop
cs
ja
sub
jmp
(bad)
lds
dec
outs
aam
xchg
adc
jne
scas
sub
mov
inc
mov
inc
das
sti
pop
or
test
call
xor
push
int3
mov
xor
inc
xor
ret
mov
jl
push
pop
aad
into
stos
fldpi
imul
sar
dec
push
adc
rcr
jp
sub
cmp
add
sbb
mov
(bad)
stc
push
sbb
and
pop
(bad)
scas
mov
call
(bad)
dec
out
xchg
lods
pop
fadd
scas
lods
pop
movs
aad
shr
ret
retf
jp
inc
sub
or
or
loope
in
sub
mul
fimul
jb
div
cs
inc
aam
sbb
in
mov
repnz
cmp
add
dec
push
push
cmp
adc
mov
jg
repz
sahf
lahf
retf
test
int
sub
test
push
mov
icebp
out
add
mov
test
xchg
(bad)
sti
push
popa
sar
dec
or
je
sub
stos
int3
paddusb
jo
in
in
cmp
push
and
mov
pushf
dec
fisub
in
sbb
gs
sar
pushf
jo
clc
call
(bad)
pop
inc
mov
inc
xor
push
add
mov
adc
mov
mov
pop
xor
scas
mov
out
(bad)
cmp
(bad)
leave
push
mov
sbb
ds
jbe
dec
jo
jae
call
pushf
xchg
inc
add
fisttp
jl
pop
cld
repz
jo
sti
jl
jno
cmp
cmp
mov
push
push
dec
mov
push
test
mov
push
enter
mov
inc
mov
fs
jp
sbb
inc
pop
mov
scas
je
ja
push
xor
or
jae
dec
mov
stos
add
sbb
aad
cmc
mov
mov
push
bndstx
xchg
pop
movs
and
clc
jno
adc
adc
push
daa
cwde
fcmovne
loopne
dec
inc
cdq
aam
push
scas
push
xor
popf
dec
fs
in
fldenv
inc
cmc
adc
lea
or
loop
mov
clc
dec
cdq
arpl
aaa
cld
add
nop
cli
fmul
inc
lds
clc
adc
mov
lea
or
(bad)
xchg
stc
or
dec
jb
dec
outs
pop
and
fld
jno
adc
xchg
dec
pop
dec
sbb
(bad)
mov
dec
imul
fs
icebp
das
mov
push
in
jecxz
mov
sub
mov
(bad)
into
and
mov
ins
out
inc
popf
or
sbb
sub
jae
mov
push
repnz
in
sbb
and
or
icebp
mov
xchg
and
adc
les
mov
adc
cmc
push
jmp
das
jle
out
pop
cmp
inc
jmp
push
mov
shufps
outs
mov
sbb
mov
jo
addr16
fisttp
push
jbe
mov
and
icebp
xchg
pop
pop
ret
sub
(bad)
push
inc
rol
mov
fst
xchg
aad
mov
xor
mov
cs
inc
and
dec
aaa
sub
cmp
lahf
cld
out
enter
not
jnp
fs
into
mov
jmp
repz
and
cmps
dec
mov
push
add
dec
into
inc
icebp
ret
data16
add
mov
cmp
lea
into
ja
scas
ja
test
push
cmp
fdivr
jmp
dec
sub
test
jge
pusha
mov
or
pop
push
stos
adc
xor
jne
add
in
and
push
sub
ins
das
mov
and
mov
pop
fcomp
movs
(bad)
cmps
arpl
fnstsw
std
aam
pusha
(bad)
jmp
push
mov
loope
(bad)
repz
sbb
dec
mov
add
(bad)
adc
mov
int
or
movs
sar
mov
not
imul
lods
xor
cwde
or
jo
dec
cmp
cmp
mov
repz
gs
in
test
mov
push
jg
and
ja
into
inc
fsub
lds
xchg
frstor
aad
int
nop
fwait
and
mov
mov
jge
jmp
fsubrp
es
cmp
sub
pusha
mov
in
ret
(bad)
jbe
mov
xor
or
imul
mov
sub
pop
sbb
cmp
mov
inc
push
(bad)
ret
push
xchg
sub
dec
retf
in
retf
in
mov
mov
inc
mov
or
jmp
ss
sub
loop
scas
cmc
jns
rol
inc
iret
int3
aas
or
enter
call
cmp
call
test
jl
aas
iret
adc
jmp
dec
(bad)
outs
(bad)
outs
sub
aad
add
hlt
push
out
test
gs
fisttp
and
pop
pushf
mov
mov
inc
sub
stc
add
frstor
inc
pop
mov
out
sub
xchg
inc
sti
(bad)
shl
cs
jmp
dec
leave
arpl
xchg
aad
jmp
loop
shl
out
ds
jmp
popf
or
gs
faddp
loop
or
mov
inc
stos
iret
and
xor
outs
(bad)
dec
retf
ret
fmul
daa
ror
mov
out
xor
mul
cmp
mov
not
add
les
sti
retf
mov
(bad)
sbb
cmps
cdq
fdivr
sub
add
repz
loope
pop
dec
inc
mov
cdq
imul
mov
dec
jp
daa
ja
(bad)
fistp
inc
clc
cmps
dec
das
fcom
jmp
movs
neg
pop
fstp
pusha
cmp
icebp
jb
cmps
cmp
jbe
scas
stos
inc
sbb
pop
cwde
loopne
cld
inc
outs
pushf
pop
mov
cmps
xchg
adc
dec
xchg
or
iret
shl
or
in
cmp
neg
aaa
test
stos
sti
xchg
jno
rep
and
and
rcl
outs
jge
xor
std
bound
out
int3
inc
inc
test
cmps
xor
daa
(bad)
pop
sub
pop
pop
xor
pop
mov
stc
inc
mov
fist
int
cmc
std
call
jo
xor
clc
xchg
ins
inc
or
mov
loop
dec
sahf
jge
sbb
jle
xor
push
sbb
mov
je
hlt
xlat
or
push
dec
popa
fidiv
dec
in
mov
xchg
popa
and
and
dec
nop
aaa
fisubr
mov
push
jno
dec
daa
jns
int
push
and
sbb
pop
dec
mov
repz
inc
mov
(bad)
push
xchg
add
(bad)
xor
(bad)
loope
xchg
or
dec
fsubr
cld
jp
add
jecxz
jno
xor
in
xchg
hlt
std
inc
enter
(bad)
or
add
mov
jle
inc
xchg
imul
jmp
clc
mov
push
push
or
cli
mov
jae
stc
push
mov
addr16
xor
jbe
or
mov
cli
int
xor
pop
idiv
in
jmp
pop
jnp
jecxz
push
mov
test
stos
dec
push
jp
arpl
rcr
in
loop
iret
mov
jne
clc
cmp
mov
inc
push
fadd
jge
in
mov
arpl
push
(bad)
test
daa
push
mov
into
movs
or
int
imul
test
icebp
mov
stos
js
jge
outs
cmp
add
hlt
in
jo
xchg
dec
push
inc
ins
xchg
mov
xchg
pop
jmp
push
hlt
add
dec
sbb
inc
xchg
xor
mov
xor
pop
in
(bad)
cwde
xor
mov
rcl
or
(bad)
cmp
jns
shl
mov
jnp
jo
daa
push
loopne
xor
jae
ins
cmp
jnp
dec
adc
sub
xchg
loopne
lods
inc
int3
les
shr
and
adc
inc
les
mov
pop
cwde
fild
scas
aas
mov
jno
and
ret
ins
sub
mov
aas
add
fild
and
add
dec
cld
sub
inc
lods
(bad)
fbstp
jmp
adc
(bad)
std
in
fs
sub
je
push
cmp
mov
repz
(bad)
cmps
test
mov
cmp
mov
stos
fst
jmp
pop
shl
xchg
mov
jnp
ror
mov
leave
jne
rcr
sbb
dec
ss
inc
fimul
nop
push
jb
stc
lahf
jmp
mov
cmp
xor
scas
jge
arpl
pop
cmp
test
mov
push
lea
fs
or
pop
adc
add
dec
or
test
cmps
cmc
ins
mov
mov
mov
movs
xor
mov
outs
shl
fs
push
in
or
(bad)
pop
xor
pusha
test
xchg
mov
in
addr16
sbb
sar
or
xchg
jae
pop
rol
push
daa
xor
pop
call
xlat
(bad)
sub
pop
and
cld
scas
sub
aaa
mov
sbb
add
ins
movs
cmp
mov
fdivr
push
push
push
in
add
mov
sub
je
data16
jge
loopne
mov
cmp
pop
fwait
in
or
lds
cmp
popf
adc
das
(bad)
cs
outs
test
fcomp
popf
lahf
jmp
sbb
mov
push
pop
clc
in
jmp
iret
stos
stc
dec
inc
sub
xlat
icebp
cmps
dec
fistp
cmc
in
dec
inc
lds
add
(bad)
mov
ror
in
ins
imul
rol
push
popf
aaa
int3
jle
popa
into
not
les
not
or
les
mov
push
mov
push
jl
mov
push
repnz
ins
outs
and
cmp
xor
clc
jl
adc
add
icebp
cmp
jg
fistp
xlat
fimul
int
or
je
adc
clc
jg
xchg
ss
cmp
inc
xor
scas
push
stc
fstp
call
jae
mov
(bad)
fdivr
mov
stos
loop
dec
xchg
push
lods
mov
cmp
or
jne
adc
sbb
dec
sbb
test
mov
out
add
out
(bad)
fist
test
mov
pop
sub
shl
sbb
and
movs
pop
movs
(bad)
fnstenv
cld
leave
mov
push
mov
push
pop
mov
push
pusha
retf
add
mov
and
leave
mov
jmp
popf
cmp
xor
icebp
sbb
jae
sbb
imul
push
fwait
xlat
test
in
ds
add
push
in
int
mov
(bad)
mov
sub
imul
mov
movntps
or
sub
cdq
cmp
sahf
mov
mov
cmps
retf
xchg
sti
fild
cmps
xchg
ins
les
xchg
xor
xchg
xchg
inc
or
mov
inc
lods
cwde
mov
lods
dec
sub
mov
fwait
adc
push
inc
xor
pop
movs
inc
leave
jge
mov
adc
adc
int
jns
cli
xchg
jmp
jae
cmp
add
std
(bad)
push
inc
jg
repz
(bad)
not
jmp
jg
mov
add
adc
jmp
inc
sbb
adc
push
cwde
stos
pop
test
nop
push
mov
leave
das
and
in
xchg
adc
cmp
shl
inc
jno
mov
pop
or
pusha
xor
sbb
push
das
lahf
pop
movs
ins
pop
mov
test
repz
aam
fistp
sbb
mov
adc
add
xchg
call
sub
ds
or
sbb
xchg
mov
inc
or
cmp
fsubr
cmp
or
fsub
into
pop
mov
js
es
push
push
aaa
mov
ret
shr
add
cmps
mov
repnz
outs
mov
xor
stc
scas
jl
jmp
retf
setae
sahf
dec
mov
out
fwait
scas
pop
stos
(bad)
and
in
or
or
adc
xchg
pop
pop
data16
push
mov
gs
mov
xchg
xor
rol
push
mov
ins
cmp
cmp
jno
scas
hlt
adc
test
and
aas
adc
fnstcw
in
loope
lods
shr
mov
div
(bad)
sbb
pop
sub
jmp
xchg
sub
jle
dec
fadd
xchg
imul
inc
xor
fisubr
pop
pop
ja
dec
mov
and
mov
fidivr
and
inc
push
or
and
icebp
mov
aaa
adc
ja
push
jge
inc
jmp
rol
dec
mov
test
mov
cdq
lods
mov
cmps
push
lea
div
cmc
mov
into
xchg
dec
cwde
jno
in
js
test
xor
fstp
icebp
arpl
and
xchg
rol
xchg
push
sbb
imul
mov
inc
lahf
fdiv
(bad)
pop
cmp
rol
pop
es
out
sub
loopne
shl
das
mov
push
sbb
xchg
push
push
jnp
add
adc
mov
iret
inc
sbb
fisub
popa
xchg
jmp
shl
xchg
cdq
xorps
js
and
nop
neg
inc
xor
pop
mov
(bad)
mov
mov
xor
or
mov
jle
lock
mov
cmp
enter
dec
shr
sub
sub
dec
rcl
loope
pop
inc
push
inc
inc
out
jmp
dec
into
stos
pop
pop
movs
dec
and
mov
and
push
pop
mov
adc
lock
push
xor
sbb
ja
aad
mov
popa
stc
movs
push
mov
(bad)
pusha
ror
shufps
test
hlt
dec
jno
mov
sbb
xor
imul
fwait
inc
(bad)
mov
cmp
aad
dec
push
or
sahf
icebp
cmp
dec
mov
jg
stos
mov
xlat
push
aas
mov
add
mov
jp
adc
or
and
fs
out
mov
jmp
dec
cmp
pop
in
retw
mov
push
scas
jmp
call
test
pop
dec
jae
(bad)
dec
xchg
ror
mov
jbe
jno
rcr
das
xor
mov
int
(bad)
and
mov
sub
adc
pop
or
movs
mov
call
lock
xor
leave
int
loope
mov
push
mov
(bad)
ficom
cmc
inc
sbb
enter
push
xchg
cmp
loope
test
cs
pusha
inc
adc
mov
outs
mov
xchg
movs
cmovs
sbb
mov
lods
adc
cmc
int
mov
out
call
sub
mov
pop
mov
jecxz
mov
dec
in
mov
push
into
push
jo
mov
jl
adc
pop
add
push
xchg
int3
cli
xor
fdiv
data16
add
in
xchg
xchg
sub
outs
push
add
pop
lds
cdq
std
out
inc
cmps
pop
mov
dec
jo
adc
sub
cmp
aaa
mov
jmp
repz
xor
test
mov
in
or
dec
repnz
pop
add
push
add
sahf
inc
push
cmp
sti
into
repz
mov
adc
push
bound
and
jns
dec
inc
fsubr
scas
arpl
cwde
and
loopne
add
iret
push
or
aas
pop
dec
aam
pop
mov
add
fsub
adc
xchg
ins
push
test
rcl
inc
pop
retf
adc
mov
xor
mov
mov
movs
stc
lds
add
mov
and
push
retf
mov
sbb
cmp
setl
dec
sub
ret
or
cmc
xchg
mov
cmp
mov
pop
loopne
(bad)
(bad)
dec
test
cmp
sbb
shl
loopne
inc
rcr
inc
int3
add
cwde
cdq
retf
in
push
push
cld
es
xchg
arpl
jl
jmp
adc
imul
lds
xchg
dec
or
lock
div
mov
imul
loop
lahf
movs
sub
leave
ins
outs
in
iret
cmp
arpl
addr16
mov
jno
in
jne
and
xor
mov
xchg
mov
xor
scas
(bad)
xchg
push
push
call
enter
xor
std
sub
sbb
mov
jmp
ja
jg
popf
jne
scas
sti
popf
inc
retf
add
addr16
mov
mov
push
popa
imul
pop
or
mov
pop
jecxz
and
test
mov
pcmpeqb
sti
mov
rcl
out
xchg
jns
arpl
xchg
shr
(bad)
ins
scas
jns
in
fisttp
dec
and
mov
push
mov
cmp
int
cdq
mov
pop
out
loop
xchg
pop
sub
mov
pushf
clc
sub
adc
lock
xor
push
and
or
test
std
mov
fdivr
add
(bad)
xchg
sahf
or
jge
sub
jb
stos
outs
lahf
sbb
jecxz
xchg
scas
in
cmp
xchg
popa
mov
leave
les
bound
or
and
and
fsub
int3
scas
stos
fnstsw
and
hlt
xor
test
in
cmps
aaa
cdq
jnp
jns
clc
not
js
add
push
inc
scas
pushf
mov
mov
sub
ret
mov
xchg
or
sbb
pushf
jbe
sub
cmp
add
call
jle
or
mov
es
nop
mov
lahf
or
(bad)
push
inc
gs
retf
es
jne
adc
jge
test
icebp
sbb
push
lock
shr
out
addr16
stos
cmp
add
daa
clc
cdq
sar
sahf
(bad)
mov
(bad)
mov
(bad)
ins
sahf
enter
mov
lahf
mov
std
retf
rol
mov
popa
xchg
enter
mov
fadd
mov
mov
jecxz
shl
shl
in
add
and
popa
push
mov
fisub
(bad)
pop
push
scas
mov
sti
jmp
ds
imul
mov
js
mov
add
jne
pusha
lods
aam
out
test
cmp
or
bnd
jg
pop
nop
in
jmp
push
test
ret
mov
inc
ss
sub
and
or
cmc
fs
mov
fstp
sahf
in
sahf
push
(bad)
aam
into
jp
retf
ret
fcmove
add
sti
out
pop
or
add
dec
mov
aam
cld
sbb
ins
inc
sub
add
push
pop
pusha
inc
mov
test
test
fisttp
jae
fmul
xor
mov
inc
in
xor
test
jbe
rep
and
push
addr16
dec
(bad)
pop
mov
xchg
and
adc
iret
inc
xchg
xor
scas
sub
or
rcl
ds
jbe
fisubr
jle
rcl
dec
(bad)
fwait
sub
ds
push
neg
sub
or
cli
lods
jmp
sub
retf
xor
and
gs
fmul
xchg
inc
mov
mov
xchg
enter
or
xchg
push
sbb
aas
fmul
inc
ins
pop
sti
pop
outs
mov
ja
jmp
mov
call
daa
(bad)
shl
cmps
jo
or
aas
out
mov
dec
outs
fwait
and
pop
loopne
cmps
cmp
ins
cwde
into
mov
mov
repnz
movs
addr16
mov
push
pushf
or
cmp
frstor
add
test
push
adc
sahf
fdiv
leave
pop
cmp
xchg
out
mov
push
lods
fild
arpl
push
or
ss
hlt
adc
or
jo
stc
jbe
js
cmps
(bad)
daa
jbe
fidiv
jecxz
xchg
nop
or
dec
cmp
imul
movs
out
xchg
loopne
mov
mov
icebp
xchg
aad
cmps
or
cmp
pop
jne
and
inc
stos
mov
jo
adc
cmp
lock
mov
sub
rol
xor
inc
or
cmp
test
ret
or
or
fidiv
mov
push
fwait
bound
mov
mov
push
retf
imul
mov
jmp
rcr
hlt
dec
ror
or
lds
mov
inc
push
adc
(bad)
jmp
jl
xor
cdq
nop
or
dec
push
sbb
pop
or
mov
jo
mov
xor
mov
ins
sbb
or
and
mov
mov
pop
mov
xor
mov
sub
push
popf
mov
sub
pop
mov
test
call
call
adc
loope
jg
icebp
loop
addr16
les
jne
test
jo
not
cmp
pusha
in
je
fiadd
dec
(bad)
adc
push
pop
stos
lds
xchg
movs
in
lods
xor
adc
mov
jbe
mov
sub
jge
xchg
adc
loopne
mov
xor
jae
sbb
or
fs
sti
addr16
mov
je
mov
std
mov
dec
push
xchg
mov
dec
shl
fldcw
xor
lds
add
hlt
jl
bound
xor
cmps
sbb
dec
call
mov
mov
fiadd
mov
inc
adc
xor
fs
xor
cmp
mov
lods
mov
pop
shl
xchg
adc
push
ficom
iret
pop
shl
push
add
inc
inc
mov
stos
stos
mov
fisub
adc
and
dec
jmp
les
cmp
push
cmps
mov
ret
jge
jmp
xchg
push
cmp
(bad)
push
sbb
jge
repnz
sbb
daa
ss
and
mov
or
sbb
stc
mov
pushf
cmps
jbe
rol
add
iret
mov
sbb
(bad)
gs
mov
jo
mov
out
or
mov
inc
pop
cmp
rcl
je
(bad)
stc
push
xor
nop
aad
add
outs
mov
mov
sbb
pop
repz
mov
push
lds
pop
lods
call
mov
add
adc
cmc
mov
aad
pop
push
mov
adc
enter
les
xchg
ins
xor
(bad)
push
movs
mov
inc
xor
xor
cmps
ins
mov
outs
pop
pop
jle
out
and
imul
dec
jo
inc
cs
stc
sbb
cmps
idiv
and
adc
mov
(bad)
out
mov
xor
(bad)
out
(bad)
or
jb
and
sub
xchg
ins
std
jge
jne
lds
or
mov
shl
pop
mov
add
cmp
test
or
or
xchg
and
aam
jno
xor
push
scas
push
add
xchg
push
xlat
test
and
mov
fistp
jecxz
adc
fmul
ins
hlt
add
mov
jo
inc
lea
jle
mov
and
xchg
mov
xchg
cmps
jne
add
fbstp
push
mov
out
(bad)
je
lock
movs
pop
das
mov
rol
inc
stos
sub
jo
mov
clc
imul
(bad)
adc
mov
xchg
add
mov
adc
jl
mov
lock
mov
(bad)
dec
mov
sbb
ins
fisttp
push
ja
or
push
or
ja
test
xor
xchg
push
add
stos
shr
int
push
icebp
sub
push
and
jbe
aad
ins
outs
fdivr
and
push
adc
jns
call
mov
or
mov
fsub
mov
cmp
out
(bad)
retf
or
push
lds
cmps
(bad)
fidiv
nop
jmp
push
sti
xchg
gs
ins
inc
aaa
jg
sub
sub
es
cmp
xchg
rol
and
mov
mov
outs
jp
std
mov
xor
sbb
aad
mov
adc
gs
adc
jo
adc
mov
popf
les
mov
mov
push
bound
retf
inc
and
pop
ins
mov
retf
inc
push
lahf
push
loope
rcr
and
sub
dec
mov
fisttp
mov
push
std
or
sub
test
add
out
lds
dec
xchg
test
lahf
cmc
test
fwait
mov
jns
int3
in
jne
ss
pop
repz
xchg
call
in
inc
loope
ds
fs
inc
inc
jge
inc
cmp
pop
stos
xor
dec
imul
lahf
inc
jmp
test
xor
mov
xor
mov
lods
cmp
jge
scas
sub
dec
inc
push
pop
jg
mov
ins
add
push
lahf
shl
dec
fist
aaa
dec
dec
cli
fmul
retf
ja
mov
jle
aad
ror
std
retf
jne
and
mov
or
loopne
push
or
ficom
jnp
mov
data16
mov
and
call
mov
aad
mov
shl
sub
pop
push
ds
in
into
jno
push
lods
mov
scas
dec
push
and
sbb
in
jnp
pop
sbb
addr16
pop
mov
arpl
aas
xchg
pop
fdivr
nop
scas
(bad)
in
pushf
mov
scas
sahf
xor
stc
add
push
cmp
mov
call
fwait
sub
mov
ins
daa
adc
pop
jnp
mov
and
pop
push
popa
jp
sub
fdiv
std
dec
and
adc
imul
add
(bad)
dec
cmp
jmp
push
sbb
pushf
or
arpl
scas
push
pop
mov
adc
fs
xchg
ret
mov
ret
jg
loope
sbb
cmc
inc
mov
mov
imul
loopne
scas
leave
mov
inc
loopne
jmp
xor
out
adc
or
(bad)
cmp
mov
cmp
movs
cmp
mov
sti
mov
fld
jo
pop
cmc
add
mov
test
popf
jno
sbb
dec
dec
cmps
out
mov
adc
lock
dec
outs
mov
fst
les
je
add
mov
cdq
fnop
fild
in
xchg
call
lahf
(bad)
jle
inc
gs
push
es
sbb
cmp
xchg
and
out
imul
jno
inc
and
sub
test
ret
loopne
jmp
push
js
pusha
push
pusha
xor
sahf
push
xchg
jmp
sub
pusha
pop
jle
inc
jne
pop
mov
cli
fild
adc
daa
shl
ficom
sub
jnp
sahf
pop
jmp
(bad)
cmc
mov
push
in
inc
add
call
or
add
fidiv
rol
adc
push
xlat
or
das
dec
pop
push
cmp
fs
sbb
retf
jns
or
mov
daa
cmp
push
pop
add
push
inc
mov
out
cmp
xchg
cdq
dec
cmp
cmps
or
popa
mov
pusha
add
movs
inc
dec
call
pop
and
xor
fidivr
(bad)
dec
mov
xchg
mov
adc
adc
jp
jl
scas
jp
ins
lea
(bad)
jb
adc
ins
push
adc
inc
popf
sub
push
xchg
dec
lock
fwait
adc
lods
mov
test
push
jmp
popf
adc
xchg
xor
test
sub
jg
test
mov
cmp
retf
in
cs
out
add
cmp
dec
mov
jne
ja
mov
mov
ins
push
jmp
pop
inc
and
and
adc
stc
cmp
or
movs
mov
pmulhw
pop
cli
ror
adc
jmp
scas
push
cmp
les
and
mov
and
xor
(bad)
pop
xor
jae
cld
xlat
and
mov
pop
outs
ins
mov
shl
retf
fild
loop
jo
cmps
sbb
jo
mov
cwde
not
push
cmp
cmps
sbb
fistp
xchg
xchg
push
nop
jb
jp
repz
shl
outs
les
mov
or
sbb
cmp
or
pop
setb
jg
push
inc
jp
push
outs
or
mov
(bad)
pop
jge
shl
and
mov
or
into
sub
fdiv
or
das
push
ret
data16
sar
jae
adc
adc
fsubr
pop
add
inc
nop
lods
or
in
inc
fild
jnp
sub
call
inc
or
xlat
pop
in
movs
cmp
aas
sbb
lods
xor
cmp
push
outs
mov
bound
jne
xor
mov
xchg
repz
pop
mov
pop
inc
jnp
sbb
add
mov
add
jl
inc
inc
xchg
xor
aaa
aaa
xor
inc
cmp
jno
pop
sbb
adc
aaa
scas
mov
push
sub
fild
dec
sar
mov
rol
arpl
cmp
push
into
jmp
data16
and
movs
mov
pushf
dec
stos
mov
xchg
fldcw
adc
fdivr
js
xor
sbb
xchg
mov
loop
xor
nop
mov
lods
sbb
ror
aaa
xlat
inc
iret
mov
scas
xchg
sbb
retf
cmps
xor
xchg
das
out
test
call
js
xor
cli
push
pop
pop
mov
inc
xor
and
pop
xchg
jmp
call
cmp
in
mov
xor
jle
adc
sbb
mov
pop
xchg
jmp
add
mov
cmp
out
cs
sti
mov
aaa
scas
test
dec
pop
jge
loope
packsswb
push
out
push
add
stos
sbb
xor
and
jmp
xor
xor
mov
dec
add
sbb
aaa
sbb
ret
call
adc
dec
das
or
test
dec
mov
nop
sbb
jo
ja
or
mov
sbb
dec
xchg
bound
add
rol
mov
mov
or
jle
or
nop
mov
pop
xor
pop
push
(bad)
out
pop
xor
inc
sub
ins
es
mov
jle
in
or
fnstsw
mov
mov
push
(bad)
dec
lds
add
les
setp
cmp
gs
mov
inc
imul
lods
adc
nop
dec
fidivr
inc
pusha
int
aad
mov
ficom
fist
imul
cmp
popf
mov
push
or
div
aaa
mov
(bad)
dec
mov
cmps
xchg
xchg
fimul
dec
inc
jne
cmp
iret
adc
jmp
not
test
adc
push
push
jge
fsubr
jmp
stc
outs
gs
loop
cmps
sbb
sbb
in
mov
sub
push
pop
fst
inc
lahf
jmp
hlt
pop
in
popa
arpl
push
int3
sub
mov
dec
movs
sub
mov
or
sti
cmp
add
inc
mov
inc
adc
or
sti
xchg
out
fcmovbe
dec
scas
not
pushf
sbb
and
adc
out
push
ret
lods
loopne
dec
ins
pop
leave
ror
pop
push
shr
iret
sahf
xchg
cmp
xor
mov
push
mov
dec
mov
mov
call
out
xor
adc
(bad)
sbb
cmc
inc
pop
push
ret
or
fs
lea
int3
pop
outs
xor
iret
pop
or
mov
xor
inc
mov
in
data16
mov
sub
lahf
out
dec
test
jae
dec
cdq
out
aas
xor
mov
rcr
push
dec
mov
add
iret
xchg
leave
rcr
out
inc
and
scas
ss
das
mov
push
aam
div
into
daa
(bad)
push
jns
dec
jmp
mov
adc
push
andps
or
neg
mov
gs
push
pop
push
movs
mov
sub
outs
push
jmp
push
sub
cmps
mov
ss
or
jmp
imul
repz
lea
or
mov
push
or
pop
push
mov
repz
inc
fidiv
push
xor
mov
stc
sub
sub
and
sbb
imul
in
dec
jmp
mov
or
std
inc
in
jecxz
outs
adc
or
cmc
mov
into
mov
in
or
add
rcr
dec
(bad)
mov
das
in
cwde
xchg
retf
or
arpl
xchg
push
and
mov
jp
jp
dec
(bad)
std
fcomp
dec
mov
push
aam
lahf
or
fdiv
fist
and
mov
loopne
xchg
cmc
ins
mov
cmp
mov
(bad)
(bad)
pop
(bad)
adc
nop
in
xor
add
dec
mov
add
dec
pop
inc
(bad)
cmp
pop
pop
dec
add
add
pop
add
mov
(bad)
cmp
dec
sbb
(bad)
sbb
lea
xor
sti
movs
sbb
scas
mov
push
inc
jns
and
jnp
cmp
pop
xor
and
js
pushw
out
sub
sbb
xor
pusha
mov
inc
rcr
xchg
add
movs
scas
sar
icebp
xor
push
hlt
adc
das
lock
scas
fnstcw
cvtdq2ps
push
jb
in
je
and
jmp
das
mov
fsub
inc
jmp
shr
xor
retf
mov
sahf
xor
push
jb
inc
popf
xchg
sub
popf
adc
pop
sbb
das
fwait
aam
inc
xor
jmp
ins
mov
cmp
mov
xchg
das
ins
jmp
std
ss
data16
or
loopne
mov
cmp
cdq
neg
mov
adc
dec
sbb
xchg
adc
aad
lea
out
cmp
out
in
out
pop
jo
stc
cmps
ins
push
retf
dec
stc
or
dec
xchg
inc
jl
xchg
pushf
cmc
xor
mov
push
pop
xor
test
call
imul
in
inc
jns
call
out
push
js
je
fild
sub
and
inc
sti
dec
into
movs
adc
scas
fsubr
loop
push
sub
jo
xchg
ffreep
out
iret
sbb
dec
xchg
movs
(bad)
cmps
ss
inc
sti
add
mov
outs
or
lock
fcom
ins
jle
cmp
and
das
mov
sbb
add
call
test
and
mov
inc
rol
push
sub
push
add
arpl
call
cmp
jl
add
sub
idiv
or
add
in
jno
nop
sbb
fcom
fiadd
sub
icebp
jmp
mov
out
pop
shl
or
sub
dec
fcomp
adc
test
ficom
enter
adc
inc
push
cmp
inc
sub
push
sub
sub
pop
cmc
rcr
sub
(bad)
push
mov
into
jnp
mov
inc
out
ds
arpl
aas
sub
pop
es
mov
xor
jo
aas
fwait
and
pusha
icebp
mov
dec
xchg
shl
adc
sbb
cdq
mov
sahf
and
pop
xchg
fwait
cs
sbb
imul
jns
test
mov
push
stc
ret
mov
retf
push
bound
(bad)
inc
aas
stc
in
push
or
cld
add
sub
mov
inc
jb
call
sti
xchg
cwde
rol
sub
cmps
mov
sbb
inc
push
fwait
push
push
mov
mov
es
cmps
cmps
push
lods
lds
je
xchg
ja
push
push
repnz
pop
outs
hlt
(bad)
mov
mov
jecxz
loop
adc
xor
mov
xchg
bound
int3
pop
fs
cli
mov
fstp
sbb
scas
arpl
xor
ret
mov
sub
dec
sub
jo
xchg
push
sub
jmp
inc
out
lods
shl
mov
retf
xchg
pop
nop
lods
data16
inc
sub
or
test
cld
mov
mov
push
rol
and
daa
mov
jmp
pop
dec
call
rcl
xor
jp
push
inc
pop
mov
xchg
arpl
jns
ins
mov
add
outs
loopne
push
cmc
fidivr
xchg
adc
call
repz
sub
or
repnz
cmp
jmp
mov
inc
dec
stc
cmp
rol
and
std
mov
or
inc
psrad
adc
(bad)
sbb
mov
and
stos
sub
mov
(bad)
loop
adc
adc
cdq
mov
adc
inc
fucompp
popa
mov
add
dec
fild
jmp
add
popa
imul
les
out
(bad)
jge
aas
je
fucomi
stos
mov
and
push
lds
imul
or
cs
xor
xchg
jb
aad
lock
jecxz
push
jo
test
popf
pusha
arpl
cmp
cmp
pop
mov
xor
mov
imul
lahf
dec
sahf
sbb
add
inc
daa
cs
adc
push
mov
sbb
test
je
xchg
adc
add
es
in
mov
xchg
xchg
mov
call
bound
cmp
jno
pop
xor
in
xor
jae
xchg
mov
dec
and
test
add
cmps
das
mov
jno
mov
mov
daa
adc
adc
sti
test
xor
mov
cmps
mov
jge
cdq
js
pop
jge
sub
adc
push
add
je
enter
or
scas
jle
(bad)
fwait
mov
pop
mov
popf
stos
and
scas
mov
jbe
and
pushf
cmps
punpcklwd
sbb
jo
jl
sub
movs
inc
aaa
fdivr
inc
std
xchg
aas
rol
inc
pop
idiv
and
sbb
pop
sub
dec
jmp
out
jne
sar
fcomi
jbe
fisttp
or
dec
popa
pop
loope
push
(bad)
jne
test
fld
pop
out
sahf
mov
cdq
xchg
xor
mov
sub
test
xor
lahf
cli
jmp
inc
nop
imul
shl
mov
mov
out
push
mov
mov
adc
add
dec
sbb
ret
mov
jno
out
test
sub
push
adc
fdivr
mov
jp
fwait
div
xchg
dec
add
pop
out
cmps
dec
sub
ret
inc
sar
(bad)
dec
inc
adc
xor
push
add
sbb
inc
inc
inc
sbb
clc
lea
(bad)
cmps
jecxz
loopne
sbb
fnsave
nop
inc
push
(bad)
dec
fisub
xchg
jecxz
xchg
movs
(bad)
jle
fcom
mov
leave
dec
sbb
add
into
xlat
call
(bad)
mov
enter
jmp
ja
dec
inc
nop
push
sbb
neg
popf
movs
fwait
add
es
retf
push
pop
xor
jl
mov
xchg
gs
shr
dec
loop
xor
fcomp
cmp
push
sub
mov
imul
xor
movs
gs
test
xor
mov
mov
setne
push
mov
cmp
mov
dec
or
push
inc
retf
mov
sbb
mov
nop
fwait
lods
jmp
mov
cmp
pop
or
movs
in
xlat
imul
jp
push
test
push
dec
mov
(bad)
mov
jne
sub
sbb
push
xlat
aas
push
loop
mov
lock
or
pop
movs
xchg
jmp
and
or
outs
loop
into
sahf
add
jnp
or
jecxz
iret
cmps
retf
inc
clc
or
js
pusha
sbb
cmc
cwde
ja
xchg
js
cli
aas
mov
and
cli
mov
adc
adc
leave
push
jg
(bad)
dec
hlt
frstor
or
lods
dec
adc
rcr
call
(bad)
in
int
xchg
or
mov
xchg
rep
xchg
add
clc
sti
or
xchg
dec
mov
push
jnp
push
or
pop
cmp
das
in
mov
xchg
push
test
jmp
cld
je
outs
inc
pop
mov
mov
daa
jnp
pop
sar
xchg
dec
or
mov
sti
sbb
mov
push
test
aam
into
movs
sbb
adc
mov
fwait
in
push
ins
aam
mov
mov
xchg
mov
retf
pop
fld
cld
sbb
cmp
mov
lahf
sbb
and
(bad)
fdiv
arpl
xchg
out
xchg
jl
(bad)
fisub
call
jae
xchg
pop
cmp
call
inc
and
xor
or
in
inc
push
inc
cmp
jg
stos
loop
inc
adc
arpl
add
neg
sahf
stc
maskmovq
idiv
jle
jae
jnp
aas
inc
(bad)
imul
mov
stos
jnp
icebp
jle
outs
(bad)
push
fnstsw
test
popa
test
mov
loop
cdq
add
dec
call
inc
cmp
sub
push
push
test
cmp
pop
or
xchg
pop
or
test
sub
fucomi
and
fnstcw
les
and
cli
cmc
jnp
mov
sbb
pop
popa
sub
popf
push
das
int3
aam
adc
push
cmps
sub
cs
sub
xchg
cmp
test
ins
fwait
sub
xor
popf
mov
fsub
aas
out
push
xchg
cs
sbb
sbb
jg
xchg
aam
jp
push
pop
fwait
pop
fmul
cmp
sbb
outs
mov
mov
das
inc
loope
fucomip
pop
mov
nop
xchg
pop
mov
jno
call
and
sub
pop
in
jno
loopne
cmp
adc
pop
addr16
push
fwait
jge
stc
js
inc
adc
icebp
hlt
(bad)
int3
ins
mov
into
aam
mov
sbb
adc
ret
push
ds
outs
pop
inc
pop
fmulp
xchg
loopne
cmp
sbb
jae
cmps
out
shl
xchg
xor
cmp
fsubr
popf
ja
mov
in
mov
mov
repz
addr16
and
mov
ror
cmp
jmp
add
inc
push
outs
adc
dec
(bad)
mov
ja
std
iret
not
outs
sub
retf
jb
sub
inc
loopne
jge
rcr
cmps
jmp
cmp
das
dec
mov
stos
call
fst
cmp
repz
jg
out
outs
je
je
test
and
or
push
cli
cmp
push
inc
int3
push
cmp
jns
call
dec
out
pop
add
daa
sub
in
jnp
shr
mov
xchg
mov
ret
adc
pop
mov
scas
jbe
les
cmp
xor
aad
jecxz
test
xchg
push
or
das
daa
aaa
jo
ret
jg
cli
pop
mov
ins
fstp
adc
shl
and
mov
push
test
xchg
jns
lock
(bad)
ins
push
cmps
xchg
in
inc
setb
xchg
xor
sub
dec
ds
sbb
nop
xchg
fdiv
cld
cmc
lock
add
cmp
jg
xor
mov
loopne
test
fcmovnbe
mov
arpl
imul
and
popa
fild
xor
sbb
pop
jne
sbb
push
add
mov
xchg
arpl
(bad)
jo
sbb
test
mov
dec
sbb
fiadd
es
pop
data16
lods
retf
mov
dec
cs
(bad)
cmp
adc
(bad)
mov
(bad)
cmp
add
sbb
inc
and
fnstsw
repnz
repz
fwait
movs
and
cmp
mov
cmp
mov
ins
sub
fistp
je
xchg
fcmove
add
mov
mov
sti
jae
xchg
sar
sti
xchg
xchg
outs
fwait
retf
ror
movs
mov
js
push
leave
arpl
push
dec
push
pop
jg
xchg
aad
inc
int3
mov
out
rcl
inc
lock
lds
inc
ss
inc
pop
(bad)
mov
jl
int
and
and
mov
xchg
rcr
movs
retf
mov
push
dec
push
cmp
hlt
xlat
in
ins
adc
jmp
pop
mov
ror
cmp
popa
hlt
push
ss
jmp
ror
cld
int
sbb
cmp
rcr
push
ds
leave
lahf
mov
shl
sbb
pushf
sbb
icebp
jns
inc
(bad)
adc
lea
add
xchg
dec
xchg
das
mov
push
cmc
add
jle
mov
mov
retf
xor
inc
mov
aad
movs
pop
out
shl
jne
outs
sbb
push
xor
mov
(bad)
ja
mov
cmp
cmp
pusha
mov
call
jnp
shl
mov
cmp
pop
mov
bound
dec
repnz
scas
movs
fidivr
pop
adc
sub
pop
push
fucomp
xor
retf
pop
fst
fcmovbe
push
std
push
or
jb
retf
cmc
lea
push
ret
dec
and
in
lahf
add
shl
adc
lahf
add
adc
loop
mul
xor
sub
repnz
jmp
into
(bad)
mov
fwait
pop
mov
pusha
dec
xor
jge
addr16
add
ja
push
(bad)
lahf
sahf
xlat
or
aas
mov
rol
or
jns
lods
call
loop
xlat
rol
(bad)
addr16
call
sahf
sbb
lods
xor
(bad)
sti
dec
jbe
test
or
call
pop
out
jg
test
pusha
xchg
cmp
dec
mov
aaa
(bad)
jl
jmp
sbb
sub
xchg
dec
and
add
add
cmps
hlt
ss
jl
dec
loope
sbb
mov
xor
aas
pop
fbstp
ja
push
das
xor
mov
mov
adc
lea
xchg
into
int
call
dec
iret
cwde
outs
push
lods
xor
add
std
into
jp
fimul
shr
jp
lahf
bound
loope
cs
clc
inc
pop
pop
sti
(bad)
mov
shl
dec
sbb
daa
push
movs
into
into
push
clc
mov
inc
push
outs
push
cmp
jmp
pop
xchg
cmps
rol
call
mov
push
mov
cld
outs
popf
lods
enter
push
mov
retf
test
mov
ds
sbb
adc
leave
sub
cmp
shl
mov
lds
sub
ret
idiv
inc
(bad)
sub
mov
push
stc
push
mov
or
fiadd
push
int
icebp
jno
jp
xchg
mov
sbb
mov
adc
(bad)
movs
push
in
outs
in
push
xchg
xchg
imul
mov
xor
jmp
push
jle
or
(bad)
cmp
aam
je
jp
arpl
mov
movs
jge
jg
dec
pop
mov
fs
sbb
mov
mov
push
addr16
dec
dec
es
repnz
pop
call
loop
adc
xchg
call
addr16
or
push
pop
dec
imul
pop
outs
dec
pop
jl
call
dec
mov
push
les
cmp
or
and
enter
cmp
test
push
bound
push
es
mov
sub
add
(bad)
sub
(bad)
cld
xor
push
in
cwde
fs
out
sub
mov
std
dec
mov
jbe
dec
jg
mov
push
fadd
jmp
adc
xor
retf
idiv
sub
mov
je
outs
das
faddp
fwait
and
jmp
push
aaa
xchg
fdivr
repz
fbld
loopne
hlt
xor
xchg
mov
repz
pop
mov
add
sbb
loopne
fldenv
mov
je
scas
mov
push
leave
fcmovbe
ror
push
dec
in
mov
int
cwde
dec
retf
sub
shr
push
addr16
sbb
test
lea
mov
cs
mov
push
or
(bad)
xor
not
xor
js
int
lods
push
xchg
xchg
scas
push
xchg
movs
jne
mov
push
dec
retf
dec
mov
jecxz
mov
iret
and
loop
dec
cmp
jmp
or
cld
sub
enter
push
mov
or
neg
mov
sbb
mov
pushf
js
jge
jmp
data16
dec
xchg
rol
jns
mov
test
enter
mov
mov
sahf
xchg
add
mov
shl
push
jnp
in
sti
pop
into
mov
sahf
call
mov
xor
pop
cmps
inc
mov
repz
add
sub
adc
movs
dec
sub
jmp
xchg
ror
in
mov
div
loop
sbb
mov
push
retf
stos
or
rol
(bad)
(bad)
shr
lods
push
aas
cli
test
pop
inc
retf
jl
das
shl
into
div
call
ror
cmp
cmp
or
dec
push
out
stos
mov
inc
mov
cmp
lahf
sar
sahf
pusha
push
cmps
jmp
arpl
iret
mov
js
hlt
cmc
or
inc
adc
adc
push
cmp
enter
scas
sahf
mov
inc
outs
(bad)
(bad)
mov
mov
adc
test
dec
test
ja
loopne
lods
mov
les
push
fwait
adc
jb
mov
jg
push
shl
xchg
pop
mov
cmp
arpl
xor
fist
call
fisubr
or
xchg
sar
push
or
stos
into
sub
mov
addr16
xor
jae
(bad)
and
sbb
xchg
inc
mov
lea
and
into
loopne
or
push
adc
mov
mov
ss
mov
adc
xchg
js
out
jp
int
jge
xor
pop
pop
xchg
adc
xlat
into
sbb
arpl
fnsave
loopne
xchg
sbb
lahf
xchg
gs
and
inc
adc
in
pop
jl
dec
loopne
cmp
mov
call
neg
cli
es
imul
retf
mov
retf
xchg
mov
jmp
in
mov
cmps
push
jne
mov
aam
mov
loop
call
bound
out
(bad)
loope
jl
push
pushf
pushf
inc
push
dec
(bad)
fild
lds
jmp
aad
sbb
repz
adc
mov
pop
jge
jbe
sub
or
jp
lock
test
repz
out
xchg
xor
mov
in
loopne
dec
adc
cmp
mov
lea
push
mov
not
aam
loop
shl
push
sub
int
mov
mov
test
inc
mov
hlt
ror
sbb
mov
pushf
sbb
and
cdq
xor
gs
cmps
adc
fidivr
repz
daa
mov
pop
cmp
in
xor
outs
(bad)
jae
sub
ret
scas
mov
retf
inc
xchg
and
outs
adc
pop
inc
mov
xor
test
shl
push
xlat
fucomi
loop
mov
in
fwait
pop
int
out
jo
rcr
scas
inc
sbb
mov
or
test
hlt
push
and
mov
loopne
push
cli
(bad)
gs
jae
push
adc
hlt
jae
jb
push
mov
push
jnp
or
in
enter
test
add
scas
jae
cmc
and
jmp
imul
mov
sub
or
mov
sahf
rcr
fdiv
jmp
jp
fs
pusha
loopne
mov
das
mov
mov
add
push
xchg
push
lds
aaa
test
fadd
dec
push
push
and
lods
rcl
sub
pop
and
jmp
pop
push
pop
adc
mov
out
test
and
cmp
sub
xlat
addr16
in
add
cld
sbb
add
xchg
xor
mul
and
jns
push
and
xchg
js
push
push
add
push
cmc
dec
sbb
inc
icebp
inc
lods
xor
imul
jbe
push
or
aas
xchg
mov
dec
pop
inc
(bad)
push
push
out
leave
xchg
jmp
xchg
jmp
stos
xlat
cwde
and
es
lock
jno
mov
and
lds
enter
mov
call
xor
dec
les
(bad)
aam
pushf
mov
xor
and
int
ins
fstp
leave
adc
xchg
push
sbb
js
sub
push
(bad)
cld
(bad)
jb
fsub
sti
xor
and
cmc
in
jmp
fcomp
mov
cld
push
paddd
mov
add
jbe
or
mov
jae
xchg
pop
fs
dec
mov
fwait
les
mov
shl
mov
dec
jmp
xchg
sub
call
mov
adc
lods
iret
retf
pop
mov
into
xor
outs
not
sub
inc
sti
jle
in
pop
push
mov
mov
xchg
xor
mov
stos
xor
inc
cmc
sub
adc
jb
gs
nop
xchg
xchg
mov
adc
push
add
call
mov
cld
or
icebp
in
adc
movs
adc
xor
and
jns
call
sahf
and
popa
shl
lock
or
loop
mov
iret
in
push
(bad)
and
dec
mov
pop
jle
iret
jle
out
mov
aam
je
adc
dec
xchg
mov
aam
out
cli
xchg
test
inc
xchg
not
jnp
int
sbb
out
xchg
jbe
pop
repnz
movs
ss
addr16
pop
pusha
inc
fdivr
xchg
sub
addr16
pusha
imul
loope
dec
cdq
cmps
call
jnp
mov
aam
sar
pop
xchg
or
push
inc
pop
nop
mov
jnp
cmp
push
xchg
adc
and
and
in
fld
jp
sub
lds
fidivr
mov
push
aam
stos
leave
xchg
pushf
cld
outs
or
push
push
cli
lds
push
aaa
adc
mov
push
jns
loopne
jecxz
jmp
stos
and
cwde
sahf
int
call
cmp
pushf
and
cli
ins
mov
iret
dec
out
in
loopne
pop
popf
lea
pop
add
loop
dec
int3
sti
push
ds
adc
push
xchg
fist
pop
daa
jmp
ficomp
sti
stos
mov
(bad)
mov
cmps
sbb
push
add
retf
push
mov
pusha
mov
or
xlat
fsubr
imul
push
xor
jmp
sub
cmps
cmp
xchg
jp
and
mov
out
mov
je
pushf
(bad)
cmp
or
iret
outs
sbb
in
push
mov
loop
jne
jns
dec
in
test
outs
xchg
(bad)
dec
mov
pop
scas
push
fcmovu
cmp
xchg
stc
scas
inc
sti
inc
inc
mov
mov
inc
lods
dec
je
aaa
jl
frstor
std
jne
ins
cmp
cmps
and
in
in
adc
es
adc
repz
int3
clc
mov
test
mov
mov
sbb
lea
scas
mul
into
jge
push
dec
ss
daa
mov
pop
or
(bad)
mov
jbe
adc
dec
jno
and
scas
int3
jno
out
rol
mov
loopne
pushf
cmc
sbb
pop
cli
(bad)
ds
cmps
rcl
fwait
rol
les
mov
sahf
fldenv
xor
std
mov
in
jno
sbb
cmps
out
hlt
pop
dec
jnp
push
and
loope
mov
inc
jnp
(bad)
repz
popa
sbb
retf
jg
cmps
fstp
cli
dec
in
or
js
cmc
movs
push
xchg
jno
iret
or
xor
mov
(bad)
retf
(bad)
ror
retf
mov
ret
dec
cs
and
dec
cli
add
leave
xor
fldpi
jns
inc
repz
ja
jo
rcl
add
rol
sub
cli
sub
sub
cmc
adc
mov
push
mov
mov
(bad)
xor
dec
fild
rcl
iret
adc
loop
push
iret
and
pop
mov
sbb
jmp
or
cmc
fs
js
push
std
push
das
mov
loopne
mov
mov
cmps
loopne
gs
jno
mov
ins
shl
test
cmps
pop
mov
daa
mov
div
jb
mov
out
pushf
mov
mov
out
xchg
cwde
(bad)
neg
add
int
outs
dec
(bad)
repnz
in
cmps
fucomip
xor
(bad)
fwait
xor
(bad)
(bad)
mov
jbe
push
imul
sub
jg
and
jmp
pushf
jg
cmp
cmps
pop
or
inc
sti
fld
fidiv
sbb
sub
or
jle
shl
inc
pusha
fcom
and
ins
add
cmp
out
dec
sbb
cld
test
scas
fisub
mov
dec
pusha
inc
js
test
jle
leave
ja
inc
outs
retf
inc
movs
loope
outs
pop
popa
(bad)
mov
(bad)
inc
xor
mov
mov
xor
mov
retf
pop
sbb
sahf
test
mov
dec
pop
lds
fs
lea
push
push
adc
jge
inc
les
cmp
popf
das
shr
dec
xchg
inc
inc
stos
pop
inc
add
xor
in
call
retf
mov
pop
add
dec
(bad)
sbb
jle
xchg
cmp
jmp
imul
pushf
mov
shl
dec
(bad)
fucomip
sar
jns
sbb
out
inc
inc
es
pop
mov
jns
push
add
leave
xor
push
sub
pop
or
jg
nop
and
cli
jne
in
lds
pop
adc
jae
xor
in
cmp
out
call
out
lea
fnsave
nop
cmc
cmp
(bad)
nop
and
and
jecxz
sbb
lea
rcr
mov
fisttp
xlat
hlt
dec
int3
adc
xchg
cwde
push
scas
mov
push
fwait
and
jle
mov
cld
(bad)
stc
sub
mov
movs
or
sub
and
aam
jnp
xchg
add
mov
adc
mul
fwait
mov
mov
or
fdivrp
jge
push
mov
sbb
icebp
pop
push
inc
mov
pop
movs
and
arpl
out
inc
les
lods
enter
xlat
mov
xor
cmps
pushf
and
xor
mov
frstor
jle
sbb
dec
inc
mov
cmps
cmp
js
cld
jbe
push
or
gs
ds
test
add
xchg
or
pop
cdq
out
mov
out
mov
pushf
pop
out
into
test
and
call
or
enter
cmc
addr16
mov
add
loopne
or
rcl
daa
mov
ret
aas
push
xchg
mov
or
ins
into
shl
and
(bad)
push
mov
sbb
pop
and
fsubrp
jbe
out
mov
pop
cmc
pop
jmp
repz
dec
jno
add
push
cmp
repz
aad
and
scas
imul
adc
sbb
cmps
jmp
push
lahf
fld
movs
push
push
pop
lods
mov
aad
sub
ror
daa
cmp
fsub
scas
push
mulps
aaa
dec
in
add
push
xor
cmp
dec
adc
jmp
cmp
inc
arpl
adc
int
popf
movs
(bad)
push
pushf
std
mov
sbb
xor
in
xchg
fs
sub
sub
es
imul
sbb
fwait
push
aam
inc
inc
xlat
cmp
push
cs
cmp
int
std
aam
aam
loopne
cld
pushf
or
imul
xor
xchg
loop
xor
or
in
hlt
mov
push
call
cmps
jnp
les
jnp
out
sub
add
pop
test
push
jnp
pop
lods
es
test
mov
xor
addr16
jle
scas
out
pop
imul
sub
xchg
call
sbb
dec
rcr
jmp
test
xchg
imul
test
outs
dec
inc
bnd
and
les
push
jp
imul
pop
cmp
mov
fisttp
(bad)
or
jmp
or
les
jnp
jg
jo
xchg
test
xchg
sub
dec
jb
push
imul
mov
xchg
mov
mov
cdq
out
push
push
mov
mov
mov
push
sub
out
ret
push
mov
pcmpgtw
mov
mov
jno
jno
inc
pop
hlt
imul
pop
mov
add
pushf
rol
mov
fild
xchg
mov
cdq
cwde
btr
adc
imul
cmp
neg
mov
jns
movs
popf
sbb
dec
xchg
jge
jo
pop
xchg
popa
(bad)
in
retf
jmp
sbb
inc
pop
call
jge
ds
mov
and
pop
push
(bad)
and
in
inc
cmp
out
and
sbb
mov
loope
imul
fnstcw
pop
pop
push
inc
stc
xor
mov
outs
push
push
aas
adc
aam
add
dec
push
jo
les
cmps
sbb
sbb
mov
(bad)
mov
mov
and
scas
add
add
cs
lods
iret
neg
lea
bound
sub
ds
sbb
hlt
and
jmp
xor
jo
xchg
test
dec
mov
mov
fnstsw
or
jne
cld
hlt
ror
cdq
ins
fcomp
mov
or
cmp
movntps
loop
cmps
sub
add
(bad)
dec
out
sbb
mov
pushf
pop
fs
jnp
push
pop
sbb
and
mov
and
imul
pop
xor
inc
stos
cmp
sbb
or
aas
xchg
pop
add
mov
out
test
adc
iret
mov
inc
(bad)
iret
dec
sub
and
sar
stc
push
mov
sbb
add
pop
mov
repnz
jg
sbb
xchg
xchg
inc
divps
dec
int
push
sbb
sbb
iret
jg
shl
xor
cdq
push
scas
fbld
aas
(bad)
mov
ja
and
cli
sub
clc
and
fisttp
stos
xor
push
enter
int3
out
or
xor
sub
js
std
out
es
pop
(bad)
test
dec
mov
jp
pushf
pusha
and
pop
or
mov
clc
test
inc
jns
(bad)
pop
and
sbb
vmovdqa
out
loop
loope
cmp
xor
fucomip
push
or
push
adc
retf
add
jns
scas
dec
jge
sbb
(bad)
js
push
shr
sahf
sar
push
push
stos
add
inc
xor
and
inc
fwait
mov
dec
add
sub
cmp
shl
clc
and
mov
iret
sub
cmp
dec
cmp
and
aad
imul
cld
push
das
out
cmps
jae
add
(bad)
cli
pusha
mov
sar
retf
hlt
rcr
daa
lock
xor
fnstcw
inc
mov
sti
jl
jb
pop
movs
push
inc
les
out
daa
pop
xchg
call
inc
int3
add
cmp
fisubr
test
lods
or
inc
sub
and
movs
test
inc
jg
stos
or
xor
fsub
cmp
cmps
sar
sbb
mov
cli
mov
arpl
call
sub
repz
xor
sar
mov
popf
sub
cmc
jge
stc
imul
mov
pop
mov
mov
and
not
jae
pop
pop
retf
(bad)
rcl
loope
jecxz
cwde
leave
dec
pop
dec
into
xchg
sbb
ja
push
arpl
jns
repnz
stc
cs
and
xlat
leave
jno
aad
mov
sub
add
adc
jp
mov
push
or
loopne
lahf
lods
bnd
adc
out
adc
or
stos
out
scas
(bad)
mov
xor
and
xor
rcr
aas
mov
pusha
int
stc
pop
jb
mov
mov
sbb
cmp
pop
lock
fbld
nop
mov
cmp
mov
call
retf
popf
daa
in
xchg
cmp
ds
cmp
inc
xchg
data16
dec
enter
bound
loop
xor
jmp
add
add
push
clc
push
inc
outs
stc
mov
ja
xchg
push
or
pop
test
lock
jecxz
push
adc
loop
pusha
xchg
mov
pop
add
sbb
pop
sub
xlat
icebp
push
call
and
push
push
mov
dec
and
mov
mov
les
fidivr
xchg
jmp
mov
(bad)
outs
jmp
sti
jg
test
add
ror
hlt
xchg
call
lea
jns
sub
leave
ret
aaa
mov
rcl
cmp
or
xor
or
ins
mov
jg
cld
out
in
cmc
je
adc
cmp
jnp
add
outs
daa
xlat
cmp
cmp
inc
xor
xor
mov
aad
jb
mov
fsubr
into
sar
push
into
push
push
outs
in
mov
neg
sti
inc
jne
and
lock
cmp
loopne
mov
mov
and
sub
retf
or
scas
enter
idiv
loope
pop
mov
cmp
loope
dec
dec
mov
rcr
xchg
jb
adc
mov
jle
sbb
add
mov
mov
cmc
mov
sti
aas
push
jns
(bad)
bound
sbb
outs
fmul
pop
jmp
aad
pop
push
sbb
imul
ins
aad
call
xchg
dec
push
xchg
or
clc
ret
ja
jnp
ins
mov
(bad)
stos
pushf
mov
mov
inc
xchg
dec
sub
add
ss
push
cli
xchg
push
cmp
cmps
outs
clc
push
jne
cmp
or
inc
push
jg
out
jbe
fwait
imul
adc
pop
inc
inc
dec
cmp
int
dec
push
cld
ror
push
xlat
lods
jle
push
icebp
movs
dec
jle
xchg
mul
ja
ds
push
jno
aaa
daa
xor
out
mov
xchg
adc
cmp
stos
and
out
jge
addr16
aad
lds
push
test
jge
add
push
adc
leave
cwde
fdivr
add
dec
test
not
sbb
xchg
jl
sbb
push
lods
loope
(bad)
jbe
mov
je
ss
cs
daa
hlt
mov
add
repz
pop
mov
inc
test
inc
stos
xchg
inc
inc
add
push
xchg
push
mov
cmc
jg
scas
cmp
jle
(bad)
jmp
push
or
sbb
retf
fwait
in
fstp
std
inc
fwait
xchg
sbb
loopne
xor
(bad)
lods
prefetch
lods
xlat
outs
mov
and
out
addps
jmp
cmp
inc
hlt
cmp
bound
sub
xor
data16
gs
dec
cmc
and
ret
ret
mov
dec
repz
in
stos
retf
cmps
xchg
cmps
clc
popa
push
fdivr
xchg
(bad)
nop
fucomi
ror
call
and
clc
pop
pop
gs
out
mov
sbb
jle
jne
and
gs
push
mov
test
inc
xor
clc
ins
inc
rol
push
push
inc
xchg
jmp
add
mov
inc
int
cdq
fmul
push
mov
int
pop
xor
(bad)
add
mov
cmps
fisubr
xchg
repnz
push
call
int3
sbb
loop
mov
mov
pop
rol
adc
lahf
pop
imul
push
jmp
les
xchg
test
mov
mov
ss
push
and
add
addr16
call
test
call
push
aad
add
(bad)
in
fsubr
(bad)
jmp
jle
andnps
cwde
stos
(bad)
fistp
sub
jbe
sbb
add
mov
add
test
popf
or
sahf
fist
in
ret
fs
lsl
add
jne
les
je
lods
repnz
sbb
mov
jns
rcl
adc
dec
adc
in
xchg
xchg
pop
xor
out
mov
inc
out
cmp
ins
test
lahf
cmps
push
inc
leave
add
pop
mov
sbb
(bad)
mov
fwait
rcr
cmps
sub
sbb
int3
xor
mov
pop
call
popa
jle
(bad)
and
jmp
lahf
icebp
fild
add
jno
jge
mov
outs
pop
jns
inc
and
pop
jl
loop
and
fstp
shr
pop
sbb
push
out
mov
pop
sbb
es
outs
not
scas
jmp
std
movs
jno
fs
std
add
add
dec
xchg
out
repz
or
pop
cmps
test
mov
test
xchg
aaa
pop
clc
cmp
fwait
bound
cmps
xchg
push
popf
sete
mov
shr
out
dec
mov
and
pop
cmp
outs
jmp
repz
xor
push
loopne
cdq
invd
adc
repz
sub
xchg
mov
mov
xchg
retf
lods
fstp
hlt
sub
adc
push
lock
cmp
inc
jmp
cs
push
lods
pusha
mov
jecxz
cmp
add
mov
repnz
addr16
fxch
mov
xor
mov
(bad)
call
je
(bad)
movs
xchg
sbb
rol
nop
test
aas
or
shl
popa
ret
sbb
xor
fisubr
or
sub
cdq
(bad)
sbb
inc
xchg
sbb
cwde
mov
jg
nop
add
outs
imul
clc
and
fiadd
mov
outs
pop
dec
dec
xchg
jnp
mov
nop
ret
mov
(bad)
add
xor
call
out
call
adc
aaa
(bad)
cmp
mov
ret
push
or
cmp
(bad)
push
push
xchg
cmp
sub
enterw
push
and
xchg
mov
adc
enter
mul
inc
cmp
push
ret
xor
sub
push
xchg
(bad)
fild
jo
sub
and
daa
sbb
pop
pop
xchg
dec
pop
iret
cwde
popf
pop
sahf
imul
pop
test
int3
add
sub
aas
sub
mov
inc
nop
dec
sub
mov
call
mov
and
jnp
ror
rcl
repz
mov
scas
stos
imul
sub
mov
xchg
out
push
out
sbb
push
movs
pop
adc
dec
int
fmul
stc
jae
push
aad
mov
imul
bound
fild
add
inc
aaa
(bad)
ror
inc
xchg
(bad)
out
add
sub
(bad)
call
int
pusha
sbb
dec
loope
popf
call
enter
push
in
test
call
std
xchg
repz
xchg
jne
mov
jo
inc
stos
push
add
addr16
push
sbb
mov
xchg
xchg
sub
mov
sub
out
or
jne
imul
shl
(bad)
bnd
fimul
gs
dec
push
mov
sahf
nop
push
bound
push
repz
imul
push
xor
and
movs
iret
leave
loope
and
pop
sbb
test
xchg
cmp
mov
dec
push
cmp
fs
pop
enter
pop
mov
pop
(bad)
mov
mov
jne
adc
push
add
xor
lea
xchg
sub
and
and
adc
aas
push
xchg
and
jle
je
dec
jb
test
aaa
out
push
into
xchg
inc
push
js
std
fwait
mov
xor
mov
lea
push
mov
out
js
sbb
push
in
cli
(bad)
jns
loopne
pushf
test
or
sub
inc
popf
jecxz
test
push
xchg
sbb
pop
adc
push
popf
dec
test
ret
popa
jo
mov
stos
fiadd
scas
jmp
fnsave
push
ror
fsubr
mov
cmc
sub
sbb
and
test
mov
lock
jl
or
mov
xchg
retf
inc
mov
mov
hlt
bnd
rol
jmp
popa
scas
lahf
sar
pusha
dec
aaa
push
adc
jnp
xor
cmps
les
mov
je
inc
adc
ja
std
pop
js
movs
enter
(bad)
dec
aaa
ss
movs
aam
jg
outs
sahf
pop
and
leave
dec
sahf
xchg
pop
xchg
pop
cdq
mov
into
outs
jl
out
xor
outs
sbb
rcr
sub
mov
mov
jno
jge
imul
mov
mov
shl
sbb
push
inc
add
mov
retf
daa
ja
leave
sub
jge
in
push
das
sub
mov
test
out
cdq
loope
fdiv
pop
aaa
jecxz
adc
int
pop
mov
cmp
nop
lahf
or
punpckldq
or
xlat
sbb
xor
not
imul
or
mov
gs
das
xchg
and
cmps
cwde
add
jle
xchg
mov
ss
mov
mov
sub
dec
sub
fwait
cmp
aad
out
cld
lds
retf
inc
(bad)
mov
pop
outs
and
hlt
ror
(bad)
lahf
mov
push
pslld
xor
or
sub
outs
xor
xor
sub
lock
cwde
dec
xchg
aas
fs
gs
test
xor
aad
or
mov
xor
dec
push
fisub
mov
popa
outs
clc
jns
jo
into
ins
arpl
sbb
jg
push
xchg
jle
mov
sub
mov
ss
sub
adc
cli
in
xor
mov
pop
push
mov
dec
jle
xor
loop
imul
psubb
jle
fdiv
cmp
add
fcmovb
mov
pop
shl
pop
rol
or
mov
shl
sub
or
add
out
aam
pop
jmp
add
dec
in
add
adc
retf
nop
inc
jmp
push
sbb
sbb
aam
xor
xor
arpl
xchg
jl
ss
mov
pop
mov
mov
and
nop
lock
xchg
stc
sbb
lds
mov
int
les
fs
cld
sub
fs
pop
mov
adc
popa
aas
or
adc
and
icebp
test
fwait
push
repz
bound
test
cmp
mov
or
sub
mov
aas
(bad)
dec
add
retf
aaa
pop
mov
xchg
inc
dec
fnstenv
lods
sub
cwde
xchg
xor
imul
and
sub
dec
cld
mov
mov
jge
stos
std
stc
lods
scas
inc
sbb
add
xor
in
stos
push
loope
test
or
movs
adc
into
enter
push
in
ror
pop
sti
outs
les
adc
test
nop
pop
mov
sbb
xchg
add
call
scas
(bad)
jg
mov
pop
mov
out
and
sub
inc
sbb
fidivr
mov
bound
mov
dec
jb
cmps
adc
fstp
push
mov
xor
aas
sub
je
popf
ret
pop
and
ret
cmp
sub
pushf
mov
int3
jg
xor
aad
push
cmp
lahf
imul
cli
add
test
cmp
repnz
pop
sbb
dec
cs
imul
cmp
pushf
int3
repnz
movs
hlt
jne
ins
cmps
jae
rcl
pop
rol
sar
out
sub
or
xor
dec
pushf
push
loopne
arpl
pop
pop
imul
add
das
hlt
inc
sub
ja
xsha1
fidivr
and
lock
mov
ret
adc
jns
les
push
rcl
dec
mov
inc
mov
sub
mov
rol
sub
sub
mov
lock
jbe
and
push
sub
call
pusha
pop
xchg
mov
out
mov
out
call
cmps
sub
outs
and
pop
outs
jne
jo
xchg
push
xor
sahf
fsubr
ret
mov
pop
or
xchg
and
and
fs
cld
aad
cs
push
and
adc
ror
xchg
pop
cli
jge
cmp
sbb
out
cld
dec
jge
jl
jo
jb
mov
mov
clc
fdivr
push
jp
fstp
cmp
sbb
jno
lea
cmp
mov
lea
cmp
ss
int3
fs
dec
sar
xchg
repnz
mov
add
push
or
add
movs
jge
push
xchg
int3
(bad)
loop
mov
hlt
inc
jnp
and
push
addr16
fwait
adc
sbb
aas
call
fbld
ins
inc
div
(bad)
in
sbb
adc
add
adc
outs
push
inc
stos
inc
inc
sub
ret
fadd
lods
push
pushf
fisubr
fnstcw
add
xor
fisub
or
aas
xor
adc
ret
out
out
scas
pusha
jmp
scas
jl
pop
push
cmp
imul
inc
and
push
push
int3
dec
scas
bound
adc
call
inc
mov
jnp
fldcw
inc
mov
pop
mov
cwde
setle
jecxz
scas
ds
jge
sbb
or
gs
hlt
and
(bad)
fcmovne
pushf
mov
test
pop
jmp
sub
jg
add
idiv
stc
sbb
jae
pop
shl
jo
and
mov
adc
test
lahf
rcr
cmp
push
fild
bound
mov
dec
add
pop
sub
jne
cmp
lea
repz
adc
in
sbb
ret
in
xor
dec
cld
sub
mov
out
(bad)
sbb
(bad)
inc
mov
xchg
rcl
inc
push
aad
mov
rcl
pop
xor
cmps
cmc
or
(bad)
cdq
jno
in
cld
push
je
mov
loope
std
push
out
pop
inc
mov
jmp
sbb
sub
mov
loope
inc
jns
pop
push
or
jae
out
or
enter
cdq
fmul
inc
jmp
rol
pop
rcl
pop
pop
inc
dec
rol
mov
sub
jb
std
sbb
test
rcr
sub
bound
in
lea
jo
clc
rcr
mov
sub
jge
dec
add
mov
int3
add
test
loopne
mov
inc
cmc
push
push
and
icebp
es
in
fwait
jns
dec
jns
adc
cmp
pop
mov
out
cs
dec
shl
call
nop
cmps
sub
cmc
sbb
mov
(bad)
or
mov
mov
mov
sti
stc
je
div
sbb
adc
dec
jecxz
inc
mov
repnz
retf
xor
push
ja
outs
icebp
or
fidivr
cmc
(bad)
xchg
fidiv
jg
popa
jae
nop
fcomp
rcl
iret
push
sbb
mov
dec
or
or
jge
(bad)
(bad)
(bad)
data16
xchg
pop
in
push
jp
inc
ficomp
ds
fwait
and
mul
out
pop
inc
rcl
and
jo
push
inc
cld
add
call
in
pushf
jb
mov
mov
and
arpl
pop
fcom
push
(bad)
in
cmp
sub
cmp
pop
mov
dec
cmps
sub
jb
push
shl
outs
and
loope
ret
outs
jecxz
les
push
sti
add
call
xchg
mov
scas
mov
inc
iret
dec
aaa
push
jbe
aas
xor
push
daa
dec
pop
cmp
pop
fs
cld
jecxz
xor
(bad)
ret
ret
arpl
push
inc
jmp
sbb
call
add
cmp
add
sub
(bad)
not
(bad)
pop
pop
movs
sbb
dec
push
pop
adc
mov
and
repnz
sbb
mov
lods
clc
and
fcom
xchg
xchg
add
or
movs
dec
or
xchg
cmp
xchg
loop
adc
sahf
(bad)
ficomp
xlat
fld
dec
retf
add
movs
sbb
sti
loope
loop
outs
sub
pusha
(bad)
lock
ror
push
dec
jb
in
inc
popa
lds
jbe
sti
dec
out
cld
jecxz
pop
push
mov
ja
test
js
cmp
dec
outs
(bad)
cmc
test
adc
ins
loopne
sub
ret
cmp
cmps
sub
jo
test
test
jecxz
pop
jg
das
and
jno
push
popf
aaa
push
or
xchg
inc
jecxz
cmp
iret
or
and
jle
cmp
clc
mov
cmp
loop
adc
xchg
data16
xchg
cmp
dec
cmp
retf
scas
frstor
cdq
repz
sar
sub
push
popf
push
jle
and
add
dec
sub
aad
mov
out
pop
mov
xor
or
repnz
std
cmp
push
sar
adc
fwait
mov
mul
pop
and
add
pop
aaa
out
aam
inc
xchg
(bad)
sbb
inc
sub
or
sahf
loopne
cdq
jno
cmp
outs
sbb
imul
in
pop
mov
mov
call
jns
mov
aad
repz
outs
lods
cmp
retf
pop
arpl
or
xchg
ret
(bad)
xchg
xor
cmp
adc
or
add
pusha
lock
in
lock
xor
dec
adc
jge
xlat
adc
or
rol
or
jnp
es
(bad)
jge
sbb
arpl
ret
call
push
mov
out
or
inc
jne
std
pop
and
or
(bad)
stos
shl
xchg
cmc
add
xor
adc
fisub
dec
cld
shl
retf
out
push
jl
clc
stos
dec
fist
mov
or
xchg
(bad)
cld
cli
pop
aam
call
push
aam
cwde
dec
push
xor
movs
jecxz
jae
or
fist
call
mov
push
or
shl
mov
sub
imul
jns
test
jnp
mov
pushf
dec
mov
xchg
pop
jno
into
rcl
inc
add
dec
scas
push
sti
mov
jmp
outs
loope
inc
mov
sub
and
sub
daa
xchg
adc
clts
aaa
jne
test
mov
push
mov
mov
imul
mov
imul
popa
(bad)
loop
mov
mov
or
mov
movs
fbstp
aaa
ss
or
mov
inc
xor
xabort
loop
add
or
sbb
mov
mov
add
in
jecxz
pusha
and
xor
bndldx
frstor
sbb
xor
loop
xor
dec
repnz
je
(bad)
btr
scas
jae
jno
lea
sti
addr16
mov
fstp
stos
repz
jbe
lahf
loop
ja
xor
add
or
mov
or
jp
inc
test
es
out
loopne
les
xor
out
rol
js
frstor
push
les
hlt
add
js
mov
mov
and
adc
(bad)
das
xchg
sbb
pusha
jnp
loop
fs
xor
clc
and
iret
cdq
mov
push
cmp
jno
dec
mov
test
jae
pop
cmps
ror
vzeroall
push
setp
pop
adc
cmp
ror
dec
jmp
lahf
inc
or
and
cmp
or
rol
and
pop
ret
jb
inc
rcl
sahf
(bad)
push
lods
sub
jl
call
rcl
iret
mov
xchg
enter
pop
cmps
sbb
outs
call
test
or
lods
adc
cmps
mov
sub
jp
and
push
xchg
loopne
out
js
stos
add
jns
dec
call
sbb
xor
jb
(bad)
addr16
fs
adc
cmp
(bad)
pop
inc
ds
add
pop
test
xchg
call
or
data16
fidiv
mov
stc
ss
mov
xchg
ins
mov
pusha
movs
jecxz
mov
mov
dec
scas
xlat
lds
sbb
loop
jae
mov
(bad)
mov
jae
adc
adc
add
popf
jne
pop
ins
stc
test
adc
out
pop
jp
mov
jle
popa
mov
mov
adc
outs
imul
push
fwait
push
in
imul
dec
cmp
rcl
loop
ja
adc
aas
sbb
jnp
scas
adc
jge
push
sub
pop
dec
movs
add
sub
jge
ret
mov
sahf
jp
lea
jle
cld
sti
pop
retf
mov
sbb
cmp
and
sar
jbe
pop
fs
ja
mov
xchg
mov
push
mov
and
pslld
lahf
repnz
cmp
and
jne
sbb
or
imul
xchg
inc
retf
pop
rcr
cmps
call
mov
push
cwde
ss
xlat
and
dec
mov
cmp
aam
jnp
jge
mov
in
dec
test
imul
jge
ret
fist
(bad)
mov
fistp
retf
sub
pop
push
xor
mov
fwait
push
int
sub
cli
mov
xchg
enter
in
int3
aaa
and
push
jle
mov
(bad)
out
and
shr
mov
xor
fdiv
nop
push
aam
xchg
mov
stos
popa
pop
iret
fdivr
pop
inc
inc
aad
rcl
(bad)
add
and
mov
ret
xchg
sub
outs
mov
outs
daa
inc
mov
inc
fild
and
repnz
stos
aas
pop
jg
sbb
jnp
popf
pop
in
dec
mul
mov
icebp
cmps
dec
cmp
shl
lods
dec
dec
inc
jns
(bad)
repnz
sub
dec
adc
in
fbld
imul
pop
and
repz
adc
shl
pop
sbb
loope
cld
int3
pmovmskb
xor
fnstsw
ficomp
ds
add
cmps
inc
fild
fwait
dec
mov
(bad)
dec
jne
test
jnp
sbb
test
fcom
sub
rol
cli
jecxz
push
push
test
xor
mov
and
pop
sti
sbb
out
xor
add
dec
sbb
cdq
(bad)
fistp
jns
push
daa
icebp
imul
clc
pop
add
int3
dec
(bad)
sub
(bad)
xor
or
sbb
jnp
or
jbe
andps
mov
lods
cs
push
adc
fldenv
loope
push
popa
dec
jmp
mov
cmps
jecxz
cmp
pop
outs
adc
enter
mov
sub
cmp
push
les
pusha
aad
mov
aam
inc
adc
loope
xor
sar
push
sbb
mov
inc
ror
and
add
lods
and
and
add
lahf
adc
cwde
stos
ret
and
movs
adc
cmps
lods
xor
aam
inc
sar
test
sbb
mov
call
mov
lock
xchg
xor
lods
mov
inc
mov
lock
mov
xchg
jle
stos
adc
nop
jp
sar
ss
inc
xor
and
inc
xchg
movs
inc
int3
and
jne
aaa
aad
mov
mov
ret
popa
into
stos
jb
mov
call
mov
arpl
jnp
cli
js
fadd
fsub
lahf
mov
push
mov
push
mov
das
(bad)
les
pop
in
in
into
mov
xchg
mov
pop
test
fisubr
cdq
add
xchg
retf
xor
sub
xchg
test
mov
imul
push
(bad)
test
fnstenv
mov
jle
push
push
jg
aaa
pop
sbb
leave
stos
mov
(bad)
mov
fcmovnb
pop
push
add
arpl
adc
mov
fwait
jg
sub
sub
popa
push
loop
mov
push
xor
pop
bound
dec
or
add
jle
add
sub
pop
inc
(bad)
aad
aaa
add
in
mov
sub
xchg
or
or
jno
add
xchg
jae
dec
ins
mov
addr16
pop
cmps
xchg
outs
add
push
pop
add
stos
ins
cmp
pop
js
push
leave
cmps
call
or
data16
jecxz
fimul
push
inc
ss
hlt
adc
pop
xchg
lods
daa
out
or
stos
inc
imul
or
xchg
std
ins
and
add
and
jp
scas
adc
retf
(bad)
cmp
sahf
call
push
cdq
cmp
add
inc
inc
dec
dec
aas
retf
(bad)
dec
cdq
(bad)
jmp
jmp
mov
stos
dec
cmp
inc
jo
std
mov
ja
pop
push
test
outs
jmp
gs
mov
push
add
push
push
and
inc
neg
daa
in
xchg
jg
pop
sub
test
cmp
pop
cld
out
ret
ret
inc
int3
pop
mov
and
(bad)
jp
les
ja
bound
leave
ins
clc
inc
pop
cmp
imul
mov
stc
ficomp
push
neg
iret
test
inc
mov
cmps
cmp
loop
mov
sbb
pop
pushf
jb
test
imul
int
mov
in
cmp
push
loop
jp
add
mov
out
or
popf
xchg
(bad)
jl
cmp
cmp
xchg
imul
cmc
in
loopne
xchg
or
mov
aaa
in
push
ds
lea
inc
imul
inc
or
call
(bad)
jle
jg
movs
(bad)
sbb
inc
and
pusha
mov
icebp
and
stc
pop
inc
pusha
mov
rol
fs
mov
push
ss
and
jb
int
pop
(bad)
mul
popf
out
add
and
jae
jb
sub
les
mov
les
ja
xchg
arpl
inc
ja
add
neg
imul
bound
push
cmp
jae
add
data16
or
je
sbb
adc
out
pop
rol
xchg
mov
adc
call
adc
add
dec
sbb
fcomp
cmp
out
stos
call
jecxz
fld
fisub
lea
lods
and
repnz
loope
mov
mov
dec
mov
data16
inc
mov
addr16
daa
adc
pop
mov
jl
push
pop
shl
test
fucomip
sub
sub
mov
clc
xchg
lds
cmp
pop
cwde
data16
data16
inc
loopne
out
ss
xor
sub
adc
pop
rol
leave
mov
in
stc
icebp
push
inc
lea
out
imul
scas
dec
sbb
mov
icebp
test
xor
nop
daa
cmp
imul
pushf
xor
push
inc
push
imul
(bad)
cmc
jmp
(bad)
fiadd
xor
nop
scas
es
jnp
or
aad
mov
neg
xchg
sub
cs
and
jns
test
mov
or
mov
xor
fisub
jmp
mov
add
cmp
ret
jbe
cmp
pop
mov
icebp
mov
jge
xchg
loopne
pop
outs
pop
lods
out
cmp
ficomp
pop
jmp
mov
daa
or
arpl
mov
fiadd
hlt
cmp
aas
fs
int3
shl
int3
mov
mov
or
mov
cmc
xor
xchg
sub
sbb
test
or
adc
scas
lods
pop
pop
(bad)
icebp
nop
ds
stos
xor
call
xor
cmp
push
or
test
inc
cmps
add
adc
or
sbb
fistp
adc
inc
arpl
mov
sub
xchg
and
ss
fwait
jne
xchg
push
push
(bad)
mov
cmp
es
xor
sbb
retf
(bad)
enter
pusha
mov
out
popf
(bad)
mov
and
outs
adc
sbb
ret
(bad)
jns
and
adc
pop
out
cmp
adc
das
push
xlat
adc
xchg
sahf
movs
scas
retf
push
stos
call
fld
cmp
jnp
dec
cmp
mov
add
adc
fs
(bad)
adc
in
sti
or
into
ficom
inc
fcomp
and
or
push
jnp
in
xchg
imul
and
stos
xchg
int3
call
fbstp
pop
in
mov
add
popa
xchg
outs
ds
leave
int3
add
adc
push
neg
fimul
das
jmp
mov
sbb
xchg
push
into
jp
mov
scas
retf
mov
mov
repz
jge
sbb
int3
pop
and
pop
and
sbb
mov
xchg
xor
mov
push
mov
jo
(bad)
(bad)
xchg
or
pushf
mov
mov
lock
push
adc
ss
cmp
or
jmp
icebp
mov
scas
or
jg
call
cmp
dec
or
sbb
add
push
cmp
fs
cmp
xlat
cmp
jns
mov
loope
push
mov
jbe
cmp
leave
mov
add
jp
shl
leave
xchg
sar
scas
dec
fstp
out
test
cdq
sub
push
push
cmp
inc
push
and
sbb
retf
les
mov
iret
fmul
(bad)
dec
xor
clc
loop
adc
outs
mov
movs
loop
push
add
call
daa
adc
cmp
xor
xchg
jmp
ja
jns
lldt
mov
pop
sti
pop
jno
mov
loopne
xchg
mov
popf
push
into
add
push
jae
sbb
imul
arpl
and
or
(bad)
inc
jbe
sbb
data16
jbe
fisubr
sbb
test
sbb
and
push
int3
push
xor
xor
into
js
ficomp
(bad)
imul
repnz
sbb
and
xor
jg
push
je
mov
dec
repnz
jge
aad
in
(bad)
push
inc
jb
jecxz
lea
push
xor
and
enter
loope
xchg
test
xor
aaa
mov
iret
xchg
push
inc
or
call
xor
xchg
(bad)
les
jno
(bad)
push
lods
push
stos
dec
addr16
aaa
and
sti
xor
jmp
push
mov
pop
test
fist
and
cs
aas
pop
sub
add
mov
(bad)
dec
add
dec
fcmovnb
sub
jne
shl
sahf
test
fild
dec
push
jge
(bad)
pop
cmp
cmp
das
gs
fild
and
enter
repz
test
jmp
aas
mov
repz
fidiv
adc
jb
repz
jmp
cmp
xor
inc
fist
inc
rcl
jno
sub
push
jae
sbb
pop
pop
push
jo
xchg
retf
fdivr
mov
push
push
xchg
pop
push
mov
mov
cmp
stos
pop
add
movntq
(bad)
mov
sub
sbb
cld
xchg
loop
xchg
add
sbb
rcr
mov
xor
movs
sbb
sbb
sbb
mov
dec
inc
aam
mov
xor
adc
adc
cwde
and
arpl
stc
add
stos
fdivr
sbb
cmp
push
xchg
pop
push
loop
retf
cs
xor
mov
div
sbb
popf
jbe
dec
mov
movs
pop
mul
repnz
(bad)
sbb
inc
ds
and
icebp
cmps
lock
call
mov
pop
cmps
inc
ja
lds
inc
jns
xor
out
mov
cmc
sub
dec
jb
jnp
lea
cmc
push
push
hlt
push
sysenter
les
sbb
pop
lods
sbb
xor
add
sahf
lods
and
inc
sbb
fisub
iret
bound
jecxz
xor
fdiv
loope
lahf
jge
test
dec
adc
in
shl
cmp
aam
shr
movs
dec
call
movs
test
jmp
or
imul
pop
push
jecxz
pop
mov
ret
jo
(bad)
mov
rcr
and
ja
pop
lahf
repnz
sub
and
es
push
outs
xchg
sbb
std
push
loop
jmp
stos
push
pop
push
pop
mov
imul
je
in
outs
adc
or
or
and
push
pop
rcr
xlat
inc
jne
jo
and
add
jmp
fs
aad
neg
xor
pop
push
and
test
repnz
inc
and
dec
add
and
fist
in
jns
fs
xor
cs
ret
or
xor
dec
pop
jmp
jo
jo
push
push
nop
xchg
stc
loope
arpl
cld
mov
xlat
lahf
imul
push
(bad)
xlat
add
std
jecxz
lahf
xchg
loope
xchg
and
inc
xchg
inc
in
cmp
add
jno
jnp
dec
subps
add
or
xor
fwait
inc
mov
mov
add
cmp
push
aam
nop
movs
loop
sub
ret
pop
pop
stos
shl
or
das
js
push
mov
pop
push
(bad)
shl
and
pop
ja
punpcklwd
out
cld
mov
xchg
cmp
or
dec
stos
xchg
inc
jne
mov
shr
sar
repnz
inc
rcl
cwde
and
mov
push
sub
pusha
dec
or
pop
jecxz
and
pop
loope
pop
scas
aaa
mov
fcomp
add
xor
xchg
cmps
mov
pop
sub
ja
int
mov
lahf
and
dec
out
cmps
addr16
pop
stos
sbb
shl
push
stc
aam
inc
scas
ss
ins
add
cdq
mov
jecxz
xchg
jp
idiv
dec
shl
mov
out
push
retf
and
jae
cmps
add
imul
outs
imul
or
add
mov
pusha
fwait
sbb
movs
jno
jo
test
push
ficomp
or
in
test
dec
lock
leave
fdivr
rol
rcr
dec
push
es
ds
(bad)
and
test
aad
es
bound
inc
add
jmp
std
fwait
dec
icebp
mov
loop
sub
pmaddwd
into
cld
aas
inc
push
out
xchg
cmp
mov
adc
daa
movs
imul
jl
jb
fmul
jp
jo
cs
call
mov
fdiv
jmp
test
jp
hlt
adc
pop
mov
pop
cmp
pop
mov
mov
push
call
or
dec
js
inc
push
push
jl
pop
inc
xor
mov
sub
adc
(bad)
ds
sub
and
bts
xor
mov
sub
push
shl
not
test
jne
mov
add
and
pop
lock
fstp
jne
imul
or
lock
retf
push
push
adc
std
pop
push
shr
push
mov
scas
xor
imul
ins
or
int3
daa
fcmovnu
inc
pop
jg
mov
rcr
mov
les
push
fs
mov
fild
pop
push
xchg
dec
pusha
inc
fld
retf
jb
push
jl
retf
fs
fldenv
test
call
(bad)
jae
leave
jno
das
fwait
lahf
dec
pop
sbb
pop
popa
or
iret
jp
pop
or
pop
cwde
dec
(bad)
int
scas
out
xchg
test
cld
dec
jp
ret
adc
adc
mov
push
jns
cwde
xchg
xchg
push
fcomp
(bad)
xchg
xchg
iret
(bad)
fwait
ja
xor
push
or
es
sbb
or
pop
pop
jno
cmc
(bad)
lahf
aam
add
jp
(bad)
ss
clc
pop
mov
or
or
add
in
cs
inc
dec
xor
adc
xor
lds
fs
gs
popa
int3
je
dec
jne
and
aam
ja
retf
scas
mov
sbb
lea
loop
jns
xchg
pusha
shl
pop
fsub
mov
in
in
in
jns
mov
pop
icebp
cmp
aas
loop
adc
sahf
jmp
call
sar
movs
mov
dec
lods
jecxz
or
(bad)
into
mov
xor
or
xchg
mov
pop
sub
inc
int3
jae
mov
or
lods
push
ja
mov
jmp
ror
cdq
mov
adc
sub
pop
sub
movs
cld
adc
das
push
jo
push
mov
xchg
jnp
sub
mov
fwait
cmps
xor
add
xlat
mov
es
mov
in
pop
xchg
pusha
addr16
out
das
and
cmps
mov
jl
jmp
test
jecxz
xchg
and
push
call
sbb
shl
out
mov
popf
lods
push
or
pop
jbe
or
sbb
rol
sub
out
push
in
add
fwait
sbb
sbb
outs
aam
mov
sbb
fstp
inc
imul
test
out
sbb
add
retf
pop
lods
ds
call
iret
fistp
leave
push
cld
dec
bound
shr
mov
push
push
xor
inc
retf
ss
popf
jmp
xchg
jno
aad
inc
add
fisub
out
or
mov
pop
mov
jns
outs
int3
js
xor
das
lea
cmp
add
lds
mov
xchg
in
sbb
lods
and
jg
jmp
sbb
sbb
push
sub
aaa
pop
cmp
sbb
ds
pop
dec
adc
cdq
bound
push
jg
aad
call
xchg
fst
xchg
into
push
jae
cmp
clc
loop
xor
fst
pop
daa
or
sub
pushf
call
scas
test
inc
xor
mov
and
je
dec
daa
xor
stc
jns
movs
call
test
data16
ror
or
pop
push
int
xor
cli
xchg
xchg
js
or
inc
jnp
rcl
stc
sbb
cld
je
cld
add
test
cmc
jmp
inc
xchg
adc
mov
test
push
cld
or
mov
(bad)
adc
mov
pop
adc
jmp
mov
je
shl
cwde
movs
pushf
xchg
and
sub
mov
ffree
adc
sbb
pop
fwait
and
add
jge
dec
add
or
pop
shl
jae
cmp
dec
shr
fdivrp
xchg
movs
fs
and
movs
adc
sar
add
sub
xor
retf
cld
test
mov
cmp
imul
call
fadd
movs
arpl
push
sub
outs
and
jmp
cmp
adc
rcl
mov
adc
nop
xor
cli
xchg
mov
adc
xor
mov
dec
test
mov
jne
in
out
jnp
call
rol
jbe
mov
push
ds
cdq
sbb
stc
or
fwait
test
(bad)
into
hlt
movs
cmp
(bad)
push
fbld
ror
js
stc
dec
mov
aam
cmp
out
pusha
dec
repz
aam
jo
dec
dec
imul
mov
fcmovbe
cmp
sahf
or
inc
shl
adc
or
push
sbb
fcomp
push
outs
int3
stc
dec
pop
xor
inc
test
and
pop
xor
movs
retf
push
pop
and
push
ss
dec
mov
lods
mov
cmp
pop
xchg
jmp
add
or
ss
jno
cmp
push
into
jae
xor
icebp
cli
addr16
and
add
add
(bad)
mov
cmps
inc
lock
repz
and
add
stos
adc
xlat
addr16
xchg
xchg
and
lahf
xlat
mov
sbb
mov
shr
add
mov
add
add
add
dec
mov
add
inc
mov
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
