div
in
mov
mov
mov
inc
add
add
dec
das
int
in
jg
shl
or
and
push
je
and
out
(bad)
(bad)
je
push
call
push
add
sub
push
ret
in
div
jne
mov
or
call
xchg
push
push
sbb
stc
out
aas
mov
test
je
cmp
mov
cmp
jae
dec
movzx
lea
jne
sbb
xor
jmp
and
neg
fidivr
and
pop
pop
mov
or
call
push
push
sar
stc
shr
jp
lock
jge
add
pop
push
push
push
push
xor
mov
mov
movs
std
in
pop
scas
cmp
inc
cld
add
jmp
test
jne
pushf
or
push
rcr
sahf
push
mov
push
xor
fidiv
fcom
cmp
adc
mov
ret
mov
jmp
(bad)
jmp
push
jbe
adc
lea
or
lock
dec
test
jg
mov
or
add
cs
add
jo
imul
xchg
add
mov
inc
push
adc
push
test
push
fcmovnb
les
jmp
ins
push
cdq
push
mov
xor
js
icebp
mov
mov
call
data16
mov
push
test
mov
or
data16
jg
adc
je
push
lahf
scas
loope
jge
adc
pop
push
sub
mov
hlt
cs
dec
pusha
outs
in
add
push
adc
cwde
pop
mov
rcr
repnz
add
jae
in
or
(bad)
mov
int
jbe
or
or
pop
cmps
push
jl
in
(bad)
cmps
cmp
lea
data16
push
call
sub
mov
add
pop
pop
pop
push
loopne
jno
sub
jecxz
mov
lea
mov
adc
leave
das
add
enter
cmp
mov
sbb
dec
or
jbe
ret
ja
push
and
enter
adc
ds
sbb
push
xchg
mov
inc
cmp
add
cmp
mov
movs
mov
(bad)
xlat
ins
ja
ja
add
and
add
push
mov
sahf
add
sbb
dec
cmp
je
out
pop
ja
xor
adc
cmc
jne
imul
jmp
push
sub
xlat
add
sub
ins
sbb
push
add
push
push
push
iret
bound
fidivr
inc
pop
pop
jmp
inc
lock
push
mov
cmp
or
jge
outs
push
rol
js
sti
mov
mov
xor
mov
pop
ret
arpl
xor
stos
pop
rol
pop
imul
rcr
sar
pop
inc
sub
inc
clc
sub
pop
or
xchg
push
ss
cmp
(bad)
adc
xor
adc
jg
mov
adc
addr16
dec
or
ret
shr
out
stos
loop
push
push
lock
pop
outs
(bad)
jmp
das
pop
pop
adc
inc
push
mov
sar
xor
cmp
ja
adc
fisubr
lock
sub
add
push
movs
inc
inc
jmp
pop
xchg
sbb
jo
push
sub
sbb
mov
out
cli
jg
jno
loop
lds
iret
jle
mov
cmp
sub
push
fild
ret
add
(bad)
jge
(bad)
in
mov
test
add
pop
cdq
sub
shr
fwait
(bad)
in
enter
mov
mov
push
loope
cwde
dec
mov
dec
push
or
cmp
jl
cmp
jne
pop
mov
inc
bound
aas
mov
cli
jmp
mov
push
jbe
mov
add
ror
mov
mov
or
(bad)
adc
lea
adc
fild
mov
pop
hlt
into
mov
adc
cmps
out
and
ins
stc
mov
cmps
mov
cld
fisubr
xlat
ja
lods
lea
stos
mov
clc
cmp
lea
or
test
jle
ins
or
cmp
mov
inc
sahf
mov
add
jl
pop
ds
ins
cmp
icebp
in
pop
pop
fwait
push
push
cmp
adc
jg
dec
mov
repnz
mov
pop
idiv
add
jecxz
jmp
sub
fs
cli
ret
add
and
add
es
adc
mov
sti
jmp
hlt
jg
pusha
cmp
or
inc
sbb
push
dec
cmp
aas
in
adc
hlt
movlhps
hlt
cmp
jle
lds
or
out
retf
clc
pop
pushf
cmp
je
push
cmp
cmp
jae
push
or
mov
xchg
pop
mov
or
add
xor
icebp
jb
pop
add
xchg
pop
jmp
ret
lea
jmp
(bad)
or
mov
ret
push
push
rcr
jecxz
clc
mov
jmp
xchg
jmp
inc
or
ret
push
cmps
imul
cld
pop
xor
lods
lods
jo
and
and
inc
sub
test
(bad)
aad
aaa
stos
sar
test
inc
or
pop
or
(bad)
cmp
sti
call
stos
push
mov
lea
cmp
jne
push
push
bound
xor
push
test
push
push
add
pusha
pop
pop
inc
ss
adc
sar
(bad)
inc
fdiv
cmp
stos
xchg
and
dec
mov
adc
adc
dec
cwde
dec
pop
retf
and
xchg
add
out
add
ret
fstp
mov
add
(bad)
pushf
sbb
adc
mov
pop
mov
mov
push
or
cwde
push
push
data16
mov
test
shl
sti
in
dec
out
mov
enter
out
stos
cmp
mov
adc
je
push
adc
pop
pop
sub
sbb
repz
push
out
inc
inc
xor
or
cld
pop
lea
dec
push
xor
rcr
loopne
push
mov
xchg
pop
push
jmp
dec
fisub
add
add
sbb
(bad)
call
rol
xchg
call
dec
inc
out
xchg
push
(bad)
out
or
iret
popf
lea
push
add
push
mov
cmp
outs
stos
xor
pop
cmp
sub
mov
ja
sub
mov
and
push
scas
mov
hlt
cmp
push
sbb
addr16
push
cmp
push
inc
cmp
je
call
sub
outs
sbb
imul
imul
les
pop
mov
mov
imul
jb
mov
xor
gs
pop
(bad)
xor
jb
test
ret
retf
xchg
aam
jp
or
movs
out
fcmovbe
mov
mov
cmp
push
cmp
adc
jge
xor
stc
push
jnp
xor
sub
jg
inc
lods
fstp
push
sbb
movsx
sub
add
shl
aaa
mov
push
stos
in
mov
add
fwait
or
mov
push
mov
mov
push
adc
lock
mov
jecxz
mul
sbb
int3
ret
mov
push
sar
mov
sbb
in
sub
lea
out
lahf
scas
out
dec
adc
xor
aad
push
test
out
add
xchg
sbb
mov
xor
pop
inc
xlat
or
call
mov
and
mov
das
dec
je
push
xor
push
pop
jmp
push
adc
inc
pop
loop
sbb
movs
call
add
mov
and
dec
lock
push
out
pop
fstp
int
mov
push
mov
ins
sbb
mov
sbb
mov
inc
and
mov
jae
mov
aam
and
pushaw
pushf
pop
cmc
sub
sub
and
sub
add
xor
aam
test
pop
jle
or
je
jae
mov
sar
pop
or
lods
push
sbb
xchg
add
sub
retf
jmp
std
mov
xor
out
sbb
ins
movs
repnz
sub
js
and
(bad)
adc
cdq
lock
add
fiadd
in
dec
ret
add
int
fld
push
out
les
(bad)
mov
fcomp
sar
inc
pop
xlat
and
enter
add
test
ficom
ror
mov
sbb
pop
movs
inc
adc
pop
mov
pop
fild
das
adc
sub
adc
dec
inc
push
cwde
push
sbb
or
scas
call
lea
cmp
mov
js
push
and
lea
int3
js
jl
sub
outs
xchg
ret
pop
adc
sar
cmp
ffreep
mov
push
aas
pop
mov
sub
fdivrp
sub
inc
mov
dec
jl
mov
push
pop
sbb
fs
pop
movs
cmp
les
or
cmp
dec
mov
ins
xor
or
icebp
into
scas
mov
or
push
inc
or
mov
mul
pop
pop
pushf
sub
xchg
jl
inc
aas
push
shl
lds
jmp
in
sub
xchg
mov
adc
dec
push
in
adc
je
push
sub
scas
adc
lahf
cs
jb
mov
adc
sti
jne
ins
push
push
or
mov
xor
dec
jl
mov
lea
adc
xchg
adc
popa
data16
xchg
xor
div
sub
pop
sbb
cmps
jmp
mov
fmul
or
in
clc
add
scas
mov
mov
mul
fild
cmp
jne
push
dec
test
das
pop
loope
add
adc
test
push
jo
and
in
push
xor
shr
push
jnp
add
cmps
mov
push
in
mov
push
ficom
ret
in
jmp
repnz
pusha
xchg
fmulp
je
or
push
in
(bad)
and
sbb
xor
add
lods
mov
in
add
jns
inc
pop
push
movs
push
mov
add
daa
cmp
ret
push
xor
push
cld
loope
mov
jge
dec
repnz
sbb
test
out
add
loope
add
push
mov
dec
jb
lock
rcr
test
push
aaa
cmp
int
adc
popf
mov
jp
mov
and
(bad)
imul
adc
ins
pop
cmp
and
jmp
inc
push
or
and
add
add
stos
cmp
add
test
xchg
in
clc
out
dec
or
or
and
test
add
push
sbb
jo
xor
or
push
sbb
pop
push
cmc
jmp
push
xor
dec
test
mov
aad
out
and
push
sbb
stc
(bad)
aaa
jnp
fistp
fistp
jae
ret
je
push
hlt
cs
or
and
jnp
ret
mov
or
pop
cwde
or
cwde
lods
mov
push
dec
cmps
in
mov
dec
dec
inc
ds
imul
lock
xor
rol
lock
sub
xchg
add
mov
push
fs
mov
inc
rcl
inc
pop
fiadd
clc
test
inc
outs
mov
in
(bad)
das
sar
popf
mov
dec
hlt
adc
fs
inc
sub
call
mov
(bad)
fcom
dec
outs
cmp
fsubp
mov
call
(bad)
xchg
push
call
mov
cmp
mov
nop
push
mov
adc
je
movs
adc
sbb
aaa
jb
fcomp
adc
repnz
ret
les
pushf
pushf
jns
mov
mov
gs
sub
jb
xchg
xchg
in
iret
and
cmp
dec
xor
clc
arpl
ret
sbb
xchg
and
enter
cdq
xchg
out
rcr
ror
ret
sbb
imul
inc
push
les
sbb
arpl
pop
test
push
test
inc
mov
test
jle
pop
pop
dec
inc
scas
movs
pusha
and
call
dec
pop
cmps
and
mov
push
das
lock
sti
lods
cwde
arpl
or
shr
add
mov
es
and
xchg
xchg
jo
inc
sbb
call
mov
pop
mov
es
je
add
push
loop
jnp
and
cs
push
xor
sbb
and
add
ret
xor
add
call
pop
add
enter
or
jle
lahf
cmp
mov
in
add
test
and
outs
and
ficomp
inc
sbb
movs
and
push
aaa
adc
dec
sbb
or
pop
push
mov
mov
mov
jae
or
cld
sar
sbb
ret
lods
pop
test
cwde
sub
retf
xchg
and
std
and
adc
adc
pop
daa
add
sbb
fsub
adc
add
cwde
mov
mov
or
jne
fistp
and
push
pop
push
jmp
popa
mov
ret
push
or
mov
fiadd
adc
or
sbb
adc
movs
out
adc
xor
mov
ins
pop
sbb
push
sbb
fst
scas
and
jl
mov
enter
or
sub
jecxz
pop
dec
push
dec
mov
in
mov
nop
aaa
xchg
xchg
add
adc
test
sbb
inc
adc
adc
movs
jno
mov
stc
loope
add
inc
xchg
mov
adc
cmp
xor
inc
adc
xchg
adc
sub
push
cmc
mov
push
sbb
push
nop
imul
retf
xor
push
and
iret
sbb
sbb
aas
loop
pop
mov
neg
pop
inc
jne
shl
jno
jb
mov
test
enter
sbb
movs
cmp
cdq
js
popf
retf
adc
sbb
shl
mov
pop
mov
sahf
les
in
sbb
pushf
pop
nop
jo
push
lock
sub
stc
ret
mov
jbe
maskmovq
test
push
xlat
loop
clc
add
add
rcl
cmp
or
cs
adc
xchg
in
push
shl
stos
imul
mov
xchg
test
inc
add
cmc
ret
mov
add
ret
enter
or
add
pushf
mov
pop
and
aas
test
mov
nop
retf
xor
and
push
xor
loope
cmp
loopne
out
neg
je
push
push
pop
jmp
test
sub
push
pusha
lock
hlt
add
mov
sbb
clc
adc
and
shr
pop
mov
imul
test
pusha
add
mov
mov
cld
or
xchg
and
push
nop
or
and
(bad)
push
and
js
popf
bound
stos
xlat
and
sti
add
pop
sub
cmp
popf
pop
mov
cmps
and
xchg
movs
std
daa
inc
div
fdivr
and
cwde
and
je
aas
inc
push
rcr
xchg
inc
mov
lock
and
sub
test
test
mov
bound
ss
stc
scas
sub
pop
sub
push
(bad)
cmp
add
sub
push
add
cdq
sub
jecxz
adc
inc
push
xchg
retf
or
xor
mov
add
push
je
add
add
add
inc
push
inc
pop
xor
add
ins
stos
xor
fldenv
ss
pop
ins
adc
inc
in
rcl
lods
mov
loope
jns
aaa
sub
fsub
jne
and
loopne
sbb
pop
xor
push
stc
mov
inc
sbb
adc
(bad)
xor
or
aas
retf
push
ror
mov
sub
enter
ficom
sbb
push
das
add
rcl
in
add
cmp
ret
pop
sub
mov
(bad)
imul
mov
pop
popf
sbb
cmps
mov
ret
or
(bad)
loopne
or
sahf
xor
dec
pop
bnd
fs
das
sub
push
xchg
stos
dec
mov
mov
dec
push
test
das
(bad)
sub
pop
xchg
test
xchg
push
jnp
fcmovnbe
mov
xor
cmp
or
je
xchg
fsub
nop
cmp
outs
inc
mov
cmc
fidiv
jmp
imul
inc
cmp
mov
jae
mul
add
sbb
pop
in
leave
leave
xchg
ficom
jo
xchg
out
cmp
(bad)
repnz
or
pop
and
cmp
jne
mov
jns
and
cmp
mov
pop
push
and
xor
and
or
shl
inc
(bad)
mov
hlt
dec
pop
xchg
inc
gs
int3
adc
ds
fmul
sar
fiadd
mov
not
mov
sub
jmp
mov
cli
add
adc
push
ss
test
mov
loopne
(bad)
loop
inc
in
and
and
js
pop
and
push
nop
gs
mov
adc
mov
js
sub
jge
adc
je
cmp
cld
push
push
xlat
cwde
jo
xlat
mov
sub
mov
mov
add
fadd
je
adc
adc
jne
push
sub
pop
pop
or
and
or
adc
jecxz
arpl
push
sub
xchg
ror
jmp
cmp
mov
in
cs
jg
and
sbb
mov
jmp
mov
and
push
mov
or
push
loopne
dec
cmp
add
shl
add
adc
add
inc
or
mov
repz
out
or
push
push
inc
loopne
les
sbb
adc
and
pop
mov
dec
xchg
xor
cmp
out
sbb
or
add
and
daa
push
lock
inc
sbb
mov
or
mul
and
jbe
adc
add
xchg
inc
out
or
push
ret
add
mov
xor
(bad)
into
add
jbe
int
icebp
les
cmp
jne
or
je
add
lock
out
jb
add
in
sti
loopne
pop
arpl
inc
jg
inc
das
and
mov
int3
cli
xor
add
push
inc
fdiv
clc
inc
cs
loope
clc
pop
pop
test
mov
stos
loope
pop
lods
rcr
out
emms
outs
jae
push
jne
or
xchg
cmp
dec
xchg
mov
mov
adc
std
mov
rcl
loop
rol
sub
repz
das
mov
sub
jl
mov
hlt
push
sbb
fsub
push
out
and
xchg
out
test
and
lods
and
(bad)
lock
div
lds
pusha
inc
movs
mov
aaa
pop
jno
pop
or
mov
outs
jmp
pop
sub
or
jg
cmps
sub
xor
les
or
push
aas
repnz
int3
add
mov
or
ror
fdivr
push
fdivr
push
add
call
ins
push
in
shr
mov
jle
mov
jnp
lock
xor
sti
dec
dec
je
sub
fild
pop
jmp
jge
imul
push
jmp
adc
pusha
jmp
lock
int3
es
stos
mov
and
sub
xor
in
pop
push
mov
addr16
xor
(bad)
and
inc
inc
inc
ins
hlt
aad
mov
add
xlat
je
lock
ja
jge
push
mov
xor
inc
mov
je
lock
jle
push
sub
icebp
clc
dec
cmp
ja
daa
push
aaa
fs
jle
enter
mov
loope
loop
mov
push
push
add
jmp
in
leave
(bad)
mov
paddusb
mov
pop
jle
cmps
or
push
in
mov
add
pop
xor
sub
push
cmp
mov
stos
daa
loopne
mov
or
cli
add
cmp
pop
jge
pop
lea
ds
shr
xchg
sbb
shl
out
or
scas
or
push
jne
aaa
or
push
in
mov
arpl
cwde
dec
ror
rol
add
xchg
mov
xor
pop
loopne
retf
cmp
outs
dec
ret
outs
jno
mov
jbe
pusha
ss
add
push
sar
dec
mov
add
bsr
pusha
dec
add
add
or
sub
cmp
std
popa
dec
aad
in
or
(bad)
mov
clc
xchg
loop
cmp
nop
es
test
call
scas
inc
mov
or
xchg
dec
loopne
fdivr
add
dec
jg
jg
(bad)
(bad)
in
loopne
pop
cld
loopne
or
sub
fadd
add
in
push
cmp
mov
cmp
retf
aam
push
out
arpl
(bad)
aam
enter
push
sbb
push
cmove
or
push
pop
add
inc
xchg
loopne
pop
mov
nop
fsubr
mov
cmp
cli
in
mov
fiadd
mov
or
daa
pushf
mov
mov
stc
adc
scas
in
sub
push
in
sbb
inc
mov
scas
sbb
pop
(bad)
lea
inc
mov
and
clc
inc
pop
cmp
in
or
(bad)
jb
popa
jl
ret
push
push
call
and
pop
dec
cmp
add
outs
je
fs
add
inc
mov
(bad)
mov
rcl
icebp
or
pushf
inc
ins
or
loopne
out
mov
mov
or
push
jl
add
test
je
mov
pop
or
mov
dec
push
cmovns
jp
loopne
adc
add
nop
push
and
pushf
dec
(bad)
push
pop
xor
mov
call
mov
sub
sub
enter
fxch
pop
cmp
adc
aam
out
in
in
adc
pushf
loopne
in
addr16
pop
ret
add
xchg
arpl
jg
xor
inc
mov
push
call
mov
std
pop
mov
push
ret
shr
movzx
push
adc
sbb
fwait
push
ret
push
ret
dec
push
aam
adc
mov
xor
mov
cmps
jle
frstor
popf
cmp
data16
xchg
rol
fs
xchg
mov
push
gs
pop
xor
ret
pop
mov
(bad)
out
jp
retf
push
xor
loopne
pop
or
add
retf
jb
or
ss
arpl
add
sti
jle
push
add
push
push
mov
dec
jg
mov
mov
jmp
outs
and
mov
lds
fsubr
xchg
pop
fucom
enter
sbb
mov
push
enter
in
aas
jmp
ins
sbb
xlat
cmps
adc
loope
dec
ds
(bad)
jecxz
inc
pusha
je
aaa
outs
sub
mov
sub
sbb
push
pushf
ret
add
sub
cmp
scas
clc
push
ret
push
pop
jmp
mov
push
cmp
mov
test
push
push
push
int
(bad)
sub
in
add
sub
jne
sub
sbb
jp
sub
adc
pop
sbb
or
fcomip
push
xor
inc
cmp
jae
ds
or
xor
ja
dec
bound
inc
call
push
mov
xchg
je
add
fiadd
(bad)
test
sub
test
cmps
pop
imul
add
jl
in
js
mov
add
push
adc
push
js
mov
rol
mov
sar
(bad)
(bad)
push
inc
cld
mov
popa
nop
add
mov
sub
jp
ins
pop
xor
adc
cli
lea
jmp
pop
inc
cld
or
push
test
xor
imul
leave
pop
in
mov
sbb
enter
jb
inc
or
fcom
cmps
cmp
jb
out
push
out
(bad)
ss
dec
inc
xchg
je
sub
jle
test
js
inc
dec
hlt
jg
hlt
or
add
loope
push
je
sub
pop
mov
sub
fdiv
loope
xchg
add
inc
mov
push
in
or
push
push
sbb
fist
rcr
inc
ror
jl
cld
(bad)
sahf
test
cmp
jl
repz
push
jmp
mov
loop
or
shl
adc
xlat
xchg
popa
(bad)
pop
push
cmp
int3
jbe
fwait
mov
mov
push
push
xchg
ins
daa
int3
sub
push
mov
adc
or
(bad)
out
adc
fnstcw
unpcklps
push
inc
sub
push
fisubr
add
mov
ret
je
mov
fdivr
(bad)
mov
jp
mov
add
shr
mov
aam
movs
push
dec
sbb
imul
or
cmp
into
js
or
mov
mov
rol
sub
xor
sub
lea
jae
sti
test
adc
adc
test
mov
fadd
je
push
and
xor
add
push
ins
xchg
imul
xlat
(bad)
dec
or
aam
or
and
adc
sub
jmp
icebp
jb
lds
cmp
jne
cmp
je
imul
sar
xor
inc
cmp
jmp
push
push
push
and
inc
and
adc
mov
or
add
sbb
or
icebp
add
aas
dec
fwait
push
shl
push
ret
push
push
push
jmp
fmulp
or
pop
pop
(bad)
sbb
or
mov
test
mov
or
jne
das
movs
pop
cmps
jmp
fiadd
mov
ds
push
aad
jno
clc
jg
jo
psrad
adc
or
sub
pusha
mov
adc
sub
push
adc
fwait
push
test
mov
ror
(bad)
js
push
dec
or
(bad)
retf
or
add
add
jno
jae
and
lock
lock
pushaw
test
xlat
xor
adc
add
adc
mov
pop
test
pop
mov
ror
pop
dec
push
in
xchg
pop
add
mov
or
adc
arpl
or
movs
push
jmp
push
rcr
push
push
addr16
fimul
cmp
(bad)
(bad)
adc
mov
pop
push
cmp
push
inc
test
movs
inc
inc
pop
cmp
hlt
call
hlt
sub
sar
nop
cmp
adc
call
je
pop
push
ret
loope
inc
shl
mov
mov
mov
ret
ins
cld
cmp
lea
popf
shr
js
add
push
test
(bad)
(bad)
rcr
leave
inc
xchg
mov
xchg
mov
xchg
add
shr
mov
add
inc
(bad)
loope
cmps
sbb
in
add
pop
popf
icebp
ds
add
daa
(bad)
mov
push
or
(bad)
and
or
jae
outs
mov
add
adc
ret
enter
xlat
jecxz
xchg
jo
rcr
or
fmul
push
scas
mov
jbe
sbb
je
sbb
push
bndstx
sti
inc
and
shl
xlat
or
sbb
repnz
push
or
dec
xchg
mov
lods
test
xchg
add
sar
push
nop
xchg
sub
inc
ins
fdivr
dec
sub
ds
pop
fld
enter
adc
jb
sub
imul
nop
adc
(bad)
mov
dec
mov
push
sbb
or
inc
xchg
call
pop
cmps
mov
adc
ins
fs
cmps
repnz
jno
add
adc
loop
retf
cmps
push
and
fnstenv
dec
jno
test
inc
push
inc
repnz
jo
sbb
pop
ficom
jge
xchg
or
xor
inc
aad
mov
push
pop
mov
shl
in
xor
jg
cmp
mov
pop
leave
adc
clc
nop
mov
add
enter
enter
and
sbb
in
dec
sbb
je
sub
dec
inc
dec
popf
mov
jge
and
pop
enter
lea
inc
mov
cdq
mov
push
pop
cmps
int3
xchg
aas
cs
add
cmp
fld
push
nop
and
cli
out
mov
in
xchg
or
mov
mov
retf
mov
add
mov
in
jmp
imul
test
lods
mov
call
pop
sbb
push
in
push
stos
lock
xor
xlat
add
pop
push
mov
and
push
adc
jae
lock
retf
adc
dec
daa
adc
dec
into
aam
jb
push
inc
fisubr
mov
int
lea
mov
add
or
or
dec
clc
and
adc
pop
sub
sbb
pop
ret
mov
dec
add
int3
cmp
sbb
pusha
fld
nop
jns
inc
pop
pop
dec
sti
pop
dec
es
push
push
in
push
pop
adc
lds
dec
adc
push
mov
push
mov
fs
ret
and
and
fwait
in
nop
xchg
outs
cmp
sbb
and
ret
push
add
inc
movs
mov
sub
inc
ret
cmp
pop
addr16
push
outs
imul
fwait
cmp
push
jp
enter
sahf
les
stc
movsx
sbb
and
stc
adc
cmp
popf
data16
jg
jge
inc
pop
sbb
cmp
push
mov
cmps
dec
in
shr
pop
neg
cmp
add
cmp
add
mov
cmp
push
jl
das
cs
mov
jbe
mov
shr
ds
arpl
pop
mov
add
add
jbe
xchg
ins
jmp
outs
icebp
mov
cmp
(bad)
(bad)
jmp
neg
(bad)
outs
(bad)
sub
dec
je
into
adc
in
jge
xchg
push
push
sbb
adc
out
dec
mov
dec
inc
jmp
or
and
leave
jmp
xchg
and
jg
push
shl
popa
std
scas
jmp
push
add
push
mov
xor
sbb
cli
and
add
mov
movs
add
xchg
pushf
fnstsw
sub
push
mov
sahf
(bad)
jg
mov
loope
cli
mov
mov
add
hlt
and
push
aaa
xchg
jl
mov
xor
push
push
daa
pop
mov
jo
js
xor
lea
dec
and
(bad)
pop
sub
mov
rcr
(bad)
sbb
fucomi
jp
cmp
je
cmp
pop
test
shl
leave
adc
cli
jge
lahf
mov
cmps
sbb
fstp
imul
jmp
(bad)
sbb
and
push
cmp
pop
inc
jmp
and
jmp
xchg
loope
dec
icebp
sbb
adc
out
mov
xlat
pop
push
inc
push
dec
push
pusha
jns
jns
out
ror
(bad)
call
mov
cdq
inc
sbb
mov
mov
add
pushw
and
adc
sbb
ins
fst
lea
sbb
inc
adc
sub
mov
or
mov
add
(bad)
cmp
or
xchg
xchg
clc
xchg
repnz
jge
aaa
mov
push
dec
push
mov
pop
push
xchg
icebp
pop
icebp
lea
push
push
push
push
add
push
lea
mov
xchg
pop
inc
pop
leave
mov
dec
mov
and
mov
push
sahf
fisub
stos
add
sub
lea
mov
adc
(bad)
imul
xchg
adc
sbb
push
xchg
push
cmp
movs
push
je
lea
pop
cdq
sbb
push
aam
sbb
pop
push
push
or
jl
inc
xor
add
aad
cmp
push
cmp
leave
pop
or
nop
fstp
aaa
mov
xor
mov
in
push
or
push
push
xchg
dec
je
mov
jno
jle
ss
push
clc
pop
rcl
pop
and
inc
cmp
jecxz
cmps
bound
cmps
(bad)
pop
inc
ins
pop
cmps
add
aas
aad
jne
or
dec
repz
add
mov
jno
cwde
aam
movs
test
fbld
in
dec
js
jo
dec
call
push
enter
jmp
mov
call
inc
in
pop
inc
adc
jns
and
in
mov
inc
call
pop
jo
shr
je
add
xor
cdq
push
push
dec
jge
lea
test
data16
fcom
aad
jns
jg
cmp
push
push
push
cmp
mov
shl
dec
retf
push
pop
sbb
or
push
(bad)
out
ret
cmps
inc
jl
call
mov
ret
cmp
push
xchg
popa
cs
sub
lock
rcl
pop
mov
popa
aam
push
aam
das
in
cmp
pop
ins
sbb
lahf
push
jne
int3
push
icebp
gs
jae
add
fcom
sub
dec
fild
cmp
bnd
mov
add
inc
daa
imul
fdivr
ret
sub
(bad)
mov
lods
test
scas
xor
adc
ja
dec
fmul
cmp
jne
push
sub
xor
mov
clc
js
std
pop
ror
xor
sbb
je
lea
push
mov
rol
mov
jo
loope
or
nop
push
sbb
cmp
fcomip
pop
push
call
push
or
adc
nop
ins
mov
cmps
jns
call
les
inc
push
mov
lock
(bad)
pop
mov
push
adc
dec
lea
dec
push
push
lea
push
fsub
cmp
fimul
ret
inc
dec
sub
in
dec
jmp
sub
in
retf
xor
sub
jle
shl
in
cmp
push
mov
add
mov
imul
inc
xlat
dec
jl
inc
xor
fwait
xlat
jmp
add
push
popf
mov
push
loop
mov
sub
out
es
lock
mov
into
xor
sbb
add
test
dec
inc
and
fistp
(bad)
jp
dec
pop
xchg
pop
repnz
(bad)
lock
xor
jg
in
and
div
cmp
push
push
pop
push
neg
scas
mov
mov
mov
jg
cmps
dec
lods
push
fimul
leave
adc
scas
lock
push
push
out
cmp
jae
cmp
adc
fist
enter
pusha
fs
mov
adc
mov
aaa
add
adc
(bad)
xchg
push
push
or
aaa
sbb
jmp
and
test
cld
adc
mov
xchg
jo
pop
pop
and
fwait
and
out
fisub
in
pop
jmp
js
push
daa
lock
call
cli
fdivr
cmp
jne
push
in
push
push
jl
dec
sbb
push
cs
mov
adc
xor
adc
push
scas
push
push
inc
cmp
fmul
mov
and
inc
dec
add
mov
fld
push
jg
sti
cmp
je
cmp
mov
mov
sti
sbb
pause
mov
pop
jno
add
jo
add
push
add
dec
retf
ja
sub
in
cmp
dec
jg
xor
clc
xor
mov
mov
jmp
cmp
jne
data16
mov
leave
push
mov
cmp
imul
mov
aas
mov
cmc
or
fisubr
adc
xor
push
sub
xor
inc
leave
test
sbb
lock
out
sub
test
xor
jle
fimul
popf
sub
mov
mov
in
jl
push
push
dec
or
adc
(bad)
mov
es
cmp
jp
push
leave
push
adc
fcom
jl
imul
sub
push
adc
enter
aas
pusha
es
mov
pop
inc
gs
sbb
idiv
mov
xor
or
fadd
scas
mov
mov
or
dec
cdq
xchg
pop
cmp
mov
sbb
push
ss
clc
movs
push
push
lea
and
mov
stc
mov
test
sub
push
call
push
and
push
push
retf
cmp
sar
and
jbe
test
iret
sbb
mov
xchg
je
popf
adc
and
jge
test
js
mov
aaa
not
sbb
test
add
(bad)
mov
xor
dec
cwde
imul
pop
(bad)
fld
fmul
int3
xor
pop
les
aaa
push
push
add
mov
movs
inc
lock
sub
cli
mov
into
push
lock
fwait
cwde
mov
movs
and
add
repnz
fisub
add
jno
ins
inc
out
sbb
neg
popa
in
aam
(bad)
xchg
ds
add
sbb
jmp
and
test
dec
adc
fmul
cmps
loopne
jo
add
repz
nop
or
jns
pop
loopne
push
xchg
and
adc
mov
push
push
fadd
push
adc
lea
cmp
out
and
xor
je
push
pop
cmp
lods
and
pop
push
xor
jmp
das
enter
adc
sub
sub
push
push
ja
in
scas
mov
adc
sbb
and
and
mov
add
fisubr
add
pop
sub
push
cli
or
push
imul
xchg
push
dec
mov
or
push
mov
xor
push
call
jmp
fs
popa
push
sbb
mov
pop
cdq
sub
push
jecxz
shl
xor
popa
sysret
or
out
jo
jno
add
shr
pusha
add
sbb
adc
aad
sub
mov
js
push
in
add
neg
mov
cdq
mov
mov
cmp
push
or
dec
adc
sbb
sub
dec
push
add
mov
jge
mov
(bad)
jmp
(bad)
idiv
push
mov
mov
mov
aaa
outs
lea
xor
idiv
cs
mov
add
jg
mov
mov
je
jo
jge
add
(bad)
dec
mov
mov
xchg
dec
xchg
or
out
inc
cmp
xchg
add
in
or
out
sbb
fstp
push
pop
ins
xor
clc
arpl
sub
sub
clc
je
popf
hlt
aaa
add
sbb
mov
fist
jp
xor
mov
daa
pusha
js
or
popa
jg
fs
or
xchg
sub
mov
test
movs
fisubr
jbe
lahf
xor
not
lahf
sbb
dec
int3
loope
call
jl
outs
(bad)
sti
pop
xchg
sub
cmp
or
or
js
dec
out
ins
mov
hlt
test
test
jns
fadd
xor
lock
sub
xor
mov
fdivrp
mov
sub
mov
icebp
xchg
out
mov
test
int3
mov
mov
out
ds
cmps
inc
les
out
add
das
or
mov
(bad)
and
clc
fidiv
jmp
add
movs
shr
cli
aaa
(bad)
out
mov
ret
pop
jne
addr16
jg
pop
mov
push
or
loope
dec
outs
mov
inc
pop
mov
cmp
and
xor
clc
mov
cmps
aad
shl
cld
inc
hlt
adc
push
ds
adc
je
addr16
push
mov
sbb
bound
mov
and
jne
inc
jmp
out
aad
xchg
loopne
bound
and
sub
pop
pop
into
pop
leave
pop
js
in
xor
mov
cmp
dec
sub
nop
sub
or
push
and
xor
xor
sbb
mov
xor
fdiv
fcomp
sbb
loope
pop
iret
shl
imul
jns
aaa
(bad)
jnp
and
cmp
loope
jne
sti
mov
push
std
lea
adc
push
fldenv
pop
leave
pop
xor
loope
push
movs
dec
jne
loopne
push
mov
xchg
push
pushf
lea
push
mov
push
mov
pop
pop
in
lea
add
or
fnstsw
push
rcl
or
add
xchg
imul
mov
dec
in
repz
inc
pop
pop
mov
das
pop
adc
sub
js
test
push
jle
jae
add
outs
pop
jne
xchg
and
mov
dec
mov
dec
es
sbb
cmp
inc
sbb
clc
push
dec
jge
inc
and
adc
fs
and
int3
pop
push
and
ja
pop
in
out
pop
sbb
and
dec
sbb
sbb
rol
repnz
dec
and
inc
cli
aaa
xchg
pop
adc
inc
push
cmp
ds
lds
das
sbb
in
test
and
mov
sbb
mov
fsubr
xlat
(bad)
dec
pop
mov
push
cmp
cwd
js
aam
aas
mov
inc
int
mov
inc
sub
clc
cld
add
cmp
setb
test
ror
xor
lahf
add
dec
adc
data16
clc
mov
push
lods
aaa
add
das
xor
jle
je
push
fstp
pop
inc
sbb
sub
(bad)
outs
add
es
dec
push
je
dec
mov
sub
inc
test
push
mov
hlt
sub
mov
mov
xchg
dec
(bad)
(bad)
adc
add
shr
jb
fcomp
inc
and
das
push
xlat
add
fwait
test
fbld
pop
add
mov
ror
pop
fs
mov
daa
bound
mov
outs
out
imul
pop
jmp
jne
push
add
adc
push
not
sub
fild
add
int
xchg
ret
mov
sub
add
xchg
dec
jl
push
dec
push
xchg
add
scas
adc
or
dec
and
or
jmp
push
(bad)
pop
pop
jb
inc
rcl
cld
jno
add
das
inc
xor
add
and
into
xchg
std
dec
dec
sbb
push
jmp
aaa
cld
xchg
in
lds
dec
std
int3
js
fsubrp
xchg
out
add
mov
push
push
and
int
popf
jnp
or
call
(bad)
and
push
inc
int
ror
(bad)
push
push
rol
cmp
cs
jns
push
in
enter
push
pop
fmul
call
dec
xchg
out
push
sub
jb
ins
aam
sub
or
aaa
push
dec
fcmove
add
sar
add
jns
les
shl
loope
out
popf
sbb
jge
sti
push
xor
push
les
push
nop
retf
stos
test
add
xor
cmp
push
(bad)
mov
mov
in
mov
add
aaa
xchg
addr16
push
sbb
mov
lods
mov
push
sbb
arpl
das
jmp
mov
nop
cmp
sub
and
not
ins
test
or
and
sub
jo
cmp
imul
push
push
push
outs
daa
add
xchg
or
jnp
imul
adc
or
push
scas
aam
mov
pop
push
in
dec
cmps
out
add
adc
pop
fld
mov
xchg
mov
mov
add
test
sbb
sbb
jge
retf
cmp
enter
(bad)
or
add
push
cmps
loopne
cdq
and
xor
push
mov
fistp
xchg
pop
push
push
adc
(bad)
retf
jmp
fbstp
mov
cmp
mov
sbb
clc
mov
pop
ret
je
jb
mov
pushf
sbb
out
call
dec
mov
jmp
dec
mov
sub
mov
push
mov
jbe
fwait
mov
add
mov
add
inc
xor
shl
shr
js
mov
sub
std
push
fmulp
js
cmp
jge
mov
mov
mov
cmp
sbb
clc
out
or
push
pusha
jle
call
jmp
inc
mov
push
sahf
or
or
std
fsubr
sbb
jns
fcomp
pop
je
repz
je
fsub
pop
test
jne
inc
nop
sbb
popf
stos
mov
xchg
iret
sbb
dec
mov
cmp
in
mov
daa
cld
(bad)
sub
inc
sete
adc
loope
xchg
add
mov
adc
inc
mov
popf
shl
jo
ret
scas
bound
dec
out
mov
pop
rcr
sbb
add
ins
enter
or
(bad)
mov
inc
fwait
mov
rcr
dec
add
test
aad
adc
loopne
clc
pop
push
push
js
cmp
ror
lods
pop
pop
add
(bad)
(bad)
sti
push
dec
lock
loope
add
add
ret
pop
inc
sar
push
push
push
xor
mov
jno
push
fwait
bound
mov
call
cld
jnp
ins
mov
fcom
mov
lods
fnsave
aad
outs
xchg
hlt
repnz
sbb
jae
daa
push
xchg
push
or
in
bound
mov
pushf
retf
add
jmp
mov
out
add
dec
outs
in
out
mov
in
jl
enter
pop
pop
loopne
sbb
adc
clc
mov
mov
lods
in
adc
mov
test
lock
repz
in
cwde
(bad)
repnz
ja
fdiv
sbb
push
mov
and
push
dec
sub
sbb
popa
cmp
xor
or
stos
and
in
cwde
rcl
cmps
cmp
cs
dec
or
ins
xchg
jle
jge
push
ret
(bad)
adc
daa
xor
mov
ins
sti
shl
pop
or
adc
scas
cs
cmp
je
or
mov
jno
aaa
pop
xchg
ror
sbb
popa
aaa
scas
dec
pop
inc
cmp
ret
sbb
cmps
adc
jle
clc
sub
movs
adc
add
cs
cmp
ror
hlt
add
push
jbe
test
clc
push
push
ret
dec
xchg
retf
xchg
rcr
ret
push
add
and
sar
mov
cmp
clc
outs
lods
hlt
das
mov
in
(bad)
jmp
aaa
hlt
mov
mov
or
jbe
or
push
push
add
push
outs
or
xchg
ror
popf
dec
jp
push
hlt
loopne
add
sub
jp
dec
mul
xchg
mov
lahf
add
inc
in
jb
hlt
fwait
sar
das
sub
jg
mov
xlat
(bad)
addr16
out
ret
push
sbb
aaa
(bad)
out
inc
retf
dec
in
cmp
clc
ins
adc
jp
in
or
mov
add
clc
fistp
or
sub
mov
js
mov
adc
test
add
push
xor
xor
pop
jg
loop
sbb
push
movzx
sub
push
(bad)
gs
je
cmp
cmc
rsqrtps
stos
push
lea
push
test
inc
icebp
and
in
push
shl
fcmovb
retf
cmp
ins
jbe
jbe
pop
push
mov
call
jo
call
jo
pop
mov
and
sbb
mov
call
adc
cwde
inc
ins
jo
pop
ss
push
push
fisttp
in
nop
sbb
es
adc
inc
cmp
dec
addr16
je
push
inc
dec
jmp
jl
dec
mov
adc
rcr
(bad)
jbe
mov
push
jge
dec
add
test
cld
mov
out
adc
cld
xchg
sub
and
inc
in
les
retf
in
jbe
mov
push
bound
scas
or
push
cmp
loopne
icebp
in
lea
and
pusha
(bad)
mov
xchg
pop
aas
or
xchg
ss
cs
cmp
out
add
add
lock
jne
inc
stc
xchg
pop
jp
xchg
dec
sub
hlt
test
inc
mov
xor
push
mov
mov
cdq
arpl
dec
xor
inc
in
or
(bad)
push
cmp
cmps
not
push
push
inc
and
je
sbb
jno
pop
(bad)
jo
pop
jns
cdq
jb
test
mov
cmp
mov
cmp
mov
add
popa
xchg
mov
mov
add
mov
push
sahf
inc
movs
shr
jmp
ja
add
cmp
fild
cmps
push
sbb
mov
fnstcw
icebp
(bad)
mov
jmp
inc
sbb
shr
adc
popf
add
aam
adc
lea
pop
pusha
cmp
dec
leave
or
sbb
inc
pop
mov
inc
mul
xor
mov
xor
mov
cmps
dec
mov
leave
sub
add
call
sar
daa
(bad)
push
adc
push
push
mov
fs
lock
mov
cmp
retf
sub
ja
mov
cs
jmp
lock
cmp
or
icebp
dec
add
cmp
fs
add
cmp
jmp
push
add
fnstenv
scas
(bad)
mov
push
mov
or
mov
les
push
xor
sbb
ret
dec
push
cmp
cwde
mov
xchg
and
jb
mov
cmps
cmp
push
inc
adc
dec
sti
sbb
sub
mov
add
nop
sub
lods
or
ret
(bad)
or
add
mov
mov
jle
push
call
ds
ja
adc
or
add
rcl
ret
sbb
pop
imul
mov
sbb
inc
or
call
or
imul
sub
add
shr
push
mov
adc
lds
cmp
adc
test
pop
ins
test
sub
mov
jo
sbb
sbb
fistp
sub
inc
adc
fnsave
add
arpl
retf
xchg
adc
pushf
out
sbb
or
iret
xchg
lock
push
setne
mov
pop
dec
(bad)
jne
dec
cmp
das
xor
mov
cmps
sbb
push
add
adc
or
pop
jne
movs
and
push
push
rcr
or
push
icebp
or
shl
and
xchg
nop
or
and
and
add
push
imul
inc
int3
push
pop
sub
test
arpl
jnp
cmp
mov
and
pusha
or
jg
not
sub
test
mov
cdq
dec
out
mov
jmp
mov
push
std
out
rcr
xchg
push
fcom
jmp
imul
and
nop
push
aad
or
mov
sti
test
aaa
adc
add
lds
and
neg
xor
push
pop
dec
jne
mov
sbb
ret
hlt
fwait
xor
push
add
call
idiv
daa
inc
hlt
mov
ret
nop
cmc
cmp
das
sub
or
in
dec
js
pop
pop
popa
outs
cmp
int3
rol
(bad)
cmp
sub
fld
js
or
rcl
add
xlat
in
lea
loope
imul
adc
idiv
adc
icebp
mov
fistp
xchg
int
(bad)
cmps
pop
pop
sbb
xchg
push
imul
dec
and
add
mov
pop
and
adc
push
xchg
pushf
jmp
(bad)
add
ror
adc
icebp
inc
jne
or
out
dec
sbb
rol
inc
or
push
add
add
sbb
rcl
dec
shr
dec
or
xor
mov
cmp
dec
enter
mov
or
xchg
mov
mov
ds
test
lock
test
inc
sbb
pop
jae
loopne
cmp
sbb
outs
aas
or
xor
add
mov
fidiv
lea
mov
jp
add
cdq
hlt
pop
pop
mov
xor
sbb
mov
ret
cs
mov
push
fisubr
xchg
adc
loop
add
shr
lea
adc
leave
sahf
xchg
ror
or
ins
mov
push
inc
mov
frstor
adc
scas
ret
sbb
test
cmps
mov
scas
push
arpl
pop
pop
outs
popa
add
xchg
fs
lock
add
dec
xchg
mov
cmp
push
ret
add
add
lock
movs
xor
scas
fdivr
fucomip
add
sbb
test
add
push
(bad)
adc
xchg
and
scas
in
loopne
movs
jbe
and
push
in
mov
jo
jae
adc
xlat
pushfw
mov
(bad)
fdivp
add
mov
add
(bad)
push
rcl
or
inc
cmp
mov
pop
adc
pop
mov
mov
xor
mov
xchg
pop
lahf
mov
sub
cli
ins
sub
xchg
rcl
loopne
mov
ret
mov
mov
or
sub
push
pop
add
or
or
jnp
jnp
pop
xor
mov
lock
pop
icebp
outs
jecxz
inc
inc
add
inc
out
hlt
xor
xchg
das
ss
sub
push
or
popa
cdq
dec
pop
add
cmp
jo
pop
or
xor
ror
and
test
xor
push
retf
pop
retf
mov
lock
pushf
arpl
out
add
dec
sbb
push
enter
push
outs
mov
xchg
cli
push
push
xchg
dec
push
mov
add
scas
je
rcl
mov
pushf
cld
dec
push
cmp
pushf
pop
xor
or
jns
sbb
fld
push
bound
call
outs
inc
ins
push
gs
test
push
sbb
push
jo
lock
jno
jns
xchg
js
xor
mov
mov
mov
mov
or
ds
add
cmp
repz
or
fiadd
outs
imul
pop
add
sub
loopne
sbb
dec
shr
add
push
inc
pop
js
add
push
jne
inc
pop
dec
test
pop
mov
outs
mov
inc
outs
jecxz
mov
adc
pop
pop
sub
sub
jl
shl
mov
frstor
js
add
sub
push
rol
push
shr
add
mov
bswap
fwait
loopne
mov
pop
pusha
xor
and
(bad)
xchg
and
popf
add
pop
jne
mov
loope
pop
call
stos
loopne
xor
and
push
push
or
dec
fadd
fldenv
cmps
pop
idiv
or
inc
and
aam
cmp
idiv
dec
fadd
enter
imul
pop
test
xchg
dec
pop
push
cmp
cli
push
mov
sub
je
adc
jmp
push
add
popa
imul
push
xlat
sbb
jnp
push
dec
xor
inc
or
sbb
movnti
sbb
mov
xor
or
rcl
ret
(bad)
retf
push
jno
xor
mov
mov
jne
push
pop
cmp
je
push
in
mov
(bad)
xor
(bad)
pop
adc
cmps
adc
sbb
clc
cwde
xor
and
sti
push
xor
and
push
and
inc
and
pop
lea
adc
and
cmp
mov
and
pop
add
add
cmp
sub
es
pusha
xor
dec
push
test
lods
xchg
lock
inc
add
push
jge
mov
test
fsubr
mov
sahf
int3
sub
jl
pusha
push
xor
or
gs
mov
loopne
sub
push
fcom
aas
aam
mov
daa
das
mov
xor
das
cs
dec
pop
jns
icebp
dec
push
sbb
rcl
inc
mov
ins
push
aaa
jns
into
int3
xor
dec
mov
ins
dec
or
push
(bad)
clc
cmc
dec
sahf
(bad)
xchg
jge
jns
xchg
mov
adc
and
(bad)
shl
cmp
jae
repz
add
add
enter
stos
xor
add
pop
mov
or
mov
xor
add
sahf
(bad)
xchg
lock
je
xor
push
dec
retw
rcr
add
fld
mov
(bad)
sub
and
loope
jl
or
xor
out
add
mov
imul
jmp
leave
mov
inc
adc
push
adc
js
and
push
lea
pop
and
fsub
jg
mov
ins
mov
loope
dec
ins
jne
jne
pop
sub
inc
into
test
push
cwde
lock
adc
cmp
cmps
fld
scas
std
ror
sbb
in
out
loopne
sbb
mov
inc
movs
dec
pop
or
dec
pop
pop
and
movs
aam
mov
xor
add
push
xchg
or
mov
pop
lock
jnp
or
ret
ins
and
jae
fisttp
rcl
jne
jge
(bad)
sub
(bad)
into
in
int3
pusha
push
adc
pop
lea
loope
dec
(bad)
ficomp
pop
das
sete
push
push
xchg
ss
je
xchg
xchg
retf
out
fwait
ss
push
pushw
mov
das
add
xlat
pop
xor
inc
cmp
push
inc
xor
add
add
and
ret
je
and
mov
cmp
pop
push
mov
mov
lods
dec
inc
add
bound
add
xchg
adc
mov
push
mov
(bad)
push
sub
in
mov
sub
mov
mov
mov
add
sbb
in
retf
addr16
add
ds
sub
add
xchg
outs
(bad)
xlat
xchg
mov
mov
cdq
call
hlt
sub
push
arpl
int
jo
enter
jno
or
push
mov
push
jbe
jmp
mov
or
push
stc
sub
sub
sbb
loopne
push
mov
xchg
mov
call
ja
add
adc
inc
or
fist
stos
into
dec
mov
shl
adc
or
iret
pop
dec
ror
cmp
into
ror
mov
push
ret
xchg
inc
outs
push
add
mov
cs
pop
cmc
cmp
push
movzx
mov
sbb
(bad)
sub
push
int3
push
inc
inc
ret
push
pop
add
mov
cdq
sub
dec
mov
pop
push
add
sti
enter
sub
aam
sbb
fld
(bad)
mov
xor
inc
lock
fbstp
nop
mov
sub
inc
arpl
mov
je
or
cmp
enter
push
out
pop
jp
lods
xchg
ret
nop
pop
add
cmp
push
add
add
push
ret
adc
shl
and
call
cmp
sahf
dec
push
cmps
sbb
ja
push
arpl
lods
and
mov
dec
loope
clc
je
pop
clc
ds
adc
call
loopne
stc
sub
lea
push
lea
push
inc
push
dec
inc
out
add
(bad)
cmps
imul
ret
(bad)
cwde
call
aas
push
cmps
(bad)
dec
retf
cmp
jl
cmp
mov
hlt
int3
xor
sar
icebp
sub
push
jle
push
add
icebp
jne
sub
neg
add
call
push
(bad)
push
mov
adc
dec
arpl
test
out
call
cmp
je
sub
data16
mov
push
std
fstp
xor
add
fldenv
xchg
test
adc
push
sar
rcl
pop
sub
jmp
sub
adc
push
mov
lahf
in
xor
xor
fldcw
shl
clc
fisttp
js
dec
or
in
xor
(bad)
out
sub
and
ins
enter
or
mov
cli
adc
test
add
inc
call
(bad)
pop
and
cmp
(bad)
ins
ja
pop
fs
loopne
repz
clc
std
push
lahf
idiv
scas
out
lock
clc
xor
add
or
jae
cs
dec
mov
jl
sub
jbe
popf
test
add
cmp
inc
or
movhps
mov
jb
neg
cwde
fwait
sub
pushf
sahf
jecxz
js
sub
js
push
hlt
dec
or
ret
out
rcr
jmp
test
mov
dec
add
inc
pushf
aaa
nop
scas
push
push
test
mov
push
add
sbb
xor
dec
or
sbb
jbe
adc
dec
push
add
dec
sub
mov
jecxz
mov
sbb
clc
scas
xor
test
out
pusha
loop
inc
outs
inc
aaa
(bad)
shr
push
pop
and
leave
add
aaa
push
pop
or
or
in
fld
cmp
test
rcr
cmp
cmp
push
ss
xor
push
cmp
je
push
jg
or
mov
and
and
inc
dec
push
jle
scas
add
pop
repnz
ret
cmps
div
stos
adc
popa
adc
dec
stos
test
mov
xor
push
(bad)
fisubr
jmp
jl
ret
sbb
shl
jmp
mov
(bad)
jno
cmp
push
inc
cmp
jae
sub
add
push
ins
cmp
inc
rol
sahf
mov
jmp
ret
cmp
cmp
test
xor
ja
lea
jle
fcmovnb
cmp
aaa
cdq
sbb
dec
mov
pop
cld
ror
mov
sub
jmp
lods
inc
dec
jns
pop
sub
fild
retf
mov
pop
xchg
xchg
dec
or
adc
xor
(bad)
jae
pushf
add
jo
jl
or
adc
inc
cmp
or
div
or
cmp
jbe
dec
and
xchg
fsubr
sbb
xor
or
adc
outs
stos
cmps
rcl
sub
push
push
or
dec
adc
mov
hlt
inc
xor
addr16
or
mov
mov
fsubr
cmp
mov
xor
imul
imul
mov
dec
test
jo
push
mov
cmp
je
xchg
jmp
push
push
or
xchg
pop
retf
mov
push
mov
jecxz
clc
cmc
sti
je
ins
sbb
xchg
(bad)
xchg
ret
and
push
rol
jle
push
sbb
inc
push
jl
inc
push
fsub
mov
dec
rcl
lock
sub
dec
cli
cmp
adc
std
js
push
push
sub
adc
pop
mov
push
test
in
inc
or
ret
ror
jmp
and
or
sub
inc
or
or
bound
test
inc
ins
push
in
jbe
lock
jbe
pop
fdivr
ficom
add
mov
mov
or
or
out
jne
test
mov
adc
push
push
je
inc
ins
fcomp
jno
add
xor
pop
inc
pop
icebp
jne
daa
push
call
and
dec
arpl
pop
mov
and
mov
lds
loopne
mov
ins
and
jmp
retf
addr16
mov
mov
mov
fadd
and
mov
in
push
nop
test
or
out
jbe
loope
push
or
and
(bad)
jle
adc
xor
dec
iret
ret
mov
or
ja
and
bound
lock
xor
int
xchg
sub
les
or
dec
arpl
adc
dec
pop
inc
adc
idiv
push
inc
fstp
test
cmp
push
pop
add
mov
dec
jmp
ins
shr
jbe
dec
inc
push
and
aaa
adc
movs
outs
iret
adc
js
jl
adc
xor
in
add
mov
popf
xor
mov
push
add
sbb
sbb
movs
or
pop
and
add
xor
pop
mov
fisttp
push
pop
cmc
dec
pop
mov
push
or
pop
xchg
pop
sub
enter
push
je
jo
add
pop
popf
push
dec
dec
outs
pop
fs
cmp
sub
in
gs
add
jmp
mov
pop
das
dec
mov
ret
ins
or
lods
(bad)
cld
adc
mov
jno
lods
or
mov
mov
add
mov
or
js
test
push
add
jne
fsubr
sub
lock
jg
or
dec
adc
ins
mov
mov
add
movs
or
push
jmp
je
mov
sbb
or
cwde
arpl
pop
cmp
mov
fdiv
stos
test
ss
add
add
sbb
or
mov
popf
dec
pop
dec
loopne
ja
mov
inc
shl
mov
jmp
mov
or
loopne
jae
add
loope
pop
ldmxcsr
lods
mov
pop
and
mov
mov
fwait
(bad)
(bad)
cmc
adc
rdmsr
dec
(bad)
cld
lea
fld
mov
leave
and
push
sbb
push
and
xor
push
and
adc
mov
aam
mov
xor
add
cmp
dec
fcmovnbe
push
cmp
push
cmp
mov
pop
push
loopne
js
ret
pop
repz
test
mov
jae
ds
mov
xlat
jmp
xor
arpl
js
push
push
fcomp
adc
and
retf
or
push
dec
shr
ins
xor
inc
mov
or
sub
push
mov
sar
shl
bswap
lea
jg
outs
jle
jae
pminsw
movs
hlt
enter
int3
outs
add
(bad)
clc
adc
enter
pop
mov
cld
push
dec
xor
js
loope
inc
gs
mov
add
cmp
aaa
cmp
je
sbb
jmp
hlt
dec
shl
xor
test
sbb
mov
addr16
je
inc
sbb
and
pop
cmp
or
sbb
xor
jbe
sahf
js
push
inc
or
or
push
int3
mov
fld
stos
aas
pop
sub
add
lea
inc
xchg
jnp
push
cs
sbb
cdq
sbb
dec
add
ins
aaa
xor
lds
dec
inc
mov
loop
aas
inc
sub
jns
rol
das
mov
and
inc
or
mov
push
ins
xchg
fnsave
(bad)
mov
add
and
sub
clc
add
js
xchg
fadd
add
pop
or
out
add
call
mov
inc
or
dec
scas
jb
and
pushf
sbb
sbb
xor
int
sbb
add
addr16
or
sub
fdivr
faddp
sbb
inc
xchg
jo
mov
or
xchg
test
inc
inc
push
add
pop
cmp
call
dec
pop
inc
outs
shl
inc
pop
sub
and
adc
pusha
jb
sbb
cmp
jecxz
mov
std
lods
add
test
and
iret
xor
dec
adc
push
and
mov
inc
jg
stos
mov
mov
push
test
pop
and
das
push
mov
fiadd
repz
adc
aas
test
push
into
adc
sbb
jne
mov
inc
jne
push
mov
jb
mov
sbb
or
add
iret
push
inc
sub
ret
sbb
mov
arpl
fimul
xor
aad
push
retw
test
push
popa
imul
and
push
in
push
dec
sub
call
dec
and
push
cmp
sahf
pop
stos
mov
adc
dec
sar
js
adc
dec
fild
in
mov
cmp
jnp
inc
hlt
lea
push
rol
ss
ds
pop
mov
jne
adc
pop
stos
sbb
cmp
dec
hlt
add
push
imul
in
int
fadd
inc
push
retf
dec
push
out
pop
or
inc
adc
movs
mov
cmc
jp
stos
mov
or
aam
and
(bad)
push
out
jo
push
xlat
enter
fnsave
push
test
sub
les
add
ficom
mov
outs
pusha
jo
inc
ins
jmp
mov
out
or
loope
outs
mov
hlt
enter
mov
inc
pop
xchg
jl
push
mov
sub
inc
push
test
mov
sbb
in
pop
mov
nop
mov
add
clc
or
add
loope
shl
mov
test
xor
jns
mov
and
in
xor
and
mov
sahf
(bad)
jo
not
mov
push
loope
mov
push
stos
je
mov
dec
push
je
xchg
sar
test
fdivr
daa
ins
xchg
add
int3
and
movs
fsubp
jle
ret
push
xor
push
lea
outs
xor
jle
push
inc
push
idiv
push
cmp
inc
mov
aam
jmp
bound
clc
cmp
mov
aam
clc
popf
mov
out
inc
add
in
jmp
cdq
xchg
mov
or
inc
cwde
cmp
dec
stos
ss
and
inc
pusha
enter
push
clc
out
iret
dec
cmp
sub
cld
inc
push
and
test
sbb
mov
retf
mul
pusha
and
adc
mov
mov
test
lock
mov
cmp
sti
add
xchg
mov
jge
push
pop
adc
mov
mov
fstp
pop
sbb
gs
mov
add
aam
mov
adc
iret
ss
sub
add
xor
push
arpl
inc
push
cmp
movs
dec
mov
add
or
les
add
xor
(bad)
adc
pusha
and
xor
mov
nop
sti
shr
push
fild
mov
or
loop
push
pop
clc
aas
dec
rcr
sub
jno
lds
test
sbb
sub
add
cmp
push
jmp
js
dec
loopne
es
cmp
movs
pop
in
mov
inc
cmps
mov
pop
dec
or
out
and
or
push
push
ret
(bad)
bound
je
ror
and
jb
popa
mov
inc
mov
cmp
or
add
ret
or
jp
adc
lahf
cmp
pop
pop
adc
push
das
or
out
xor
dec
add
loopne
or
adc
adc
imul
pop
dec
and
inc
push
cld
sub
inc
icebp
add
pop
das
lods
mov
and
push
mov
sbb
add
or
sbb
cmp
into
and
aas
xor
lods
gs
cmp
pushf
adc
ror
outs
jle
cmp
jae
pop
push
xchg
sbb
jno
fsubr
aam
out
add
xor
pop
(bad)
sbb
std
sub
lock
push
mov
cmp
pop
test
jmp
mov
mov
jns
loopne
rcl
dec
ins
push
push
push
sti
adc
(bad)
cmc
addr16
je
sbb
(bad)
subps
sahf
popa
cmp
das
sub
rol
cli
cdq
mov
push
dec
out
mov
xor
inc
add
movs
jge
aam
movs
cdq
push
pop
aam
push
sbb
add
aaa
fld
add
pop
shr
pop
(bad)
jmp
aaa
sub
inc
mov
lods
stos
lods
or
or
or
adc
xchg
stc
je
adc
sbb
dec
push
pop
adc
and
or
pop
pop
sub
or
mov
mov
fnstenv
xchg
enter
sub
or
enter
fdivr
xchg
jbe
push
inc
dec
cmp
mov
fwait
xor
xchg
sahf
jmp
add
ins
shl
les
add
data16
inc
or
jb
sbb
mov
sbb
fcomp
inc
xchg
cs
push
or
sub
push
cmp
cwde
inc
xor
rcl
and
push
push
inc
dec
pusha
xchg
fsub
pop
push
lea
mov
jge
pusha
aad
hlt
mov
jecxz
xchg
retf
in
dec
add
inc
add
adc
sbb
xchg
and
adc
xor
mov
loopne
add
dec
int
(bad)
aad
leave
icebp
scas
pop
xlat
dec
in
jno
cs
pop
pop
cwde
lea
mov
inc
xchg
dec
and
sbb
mov
imul
mov
bound
out
or
pop
mov
jl
jl
js
add
leave
and
leave
daa
call
dec
out
dec
mov
xor
ds
mov
mov
dec
and
jge
cmp
mov
cmp
mov
jno
shl
in
or
shl
pop
mov
cmp
mov
out
lods
sub
or
scas
mov
adc
and
mov
fdivr
xchg
into
mov
inc
cvttps2pi
dec
cmp
je
jmp
call
cmp
cmp
push
add
mov
push
popa
or
xor
out
and
mov
mov
cmps
xor
and
shl
out
popa
add
add
call
je
jg
outs
mov
rcr
jmp
push
jae
dec
stos
in
pop
sbb
lods
add
shl
cmp
rcr
rol
dec
xlat
scas
sub
popf
jb
adc
sbb
ret
(bad)
push
sbb
mov
mov
mov
and
(bad)
aaa
sbb
bound
xor
push
or
jmp
popa
add
sub
adc
add
jge
and
adc
in
xor
mov
push
fbld
fiadd
add
ss
mov
(bad)
shl
jno
inc
mov
scas
fistp
jecxz
sub
cld
mov
and
je
dec
jne
pusha
dec
or
adc
mov
xchg
shr
and
xchg
stos
test
jmp
push
pop
push
ins
and
out
add
int
mov
das
jl
sbb
pop
mov
cmp
outs
loopne
je
mov
xor
test
sub
mov
das
adc
cmp
jge
sti
and
adc
or
imul
jae
jo
test
bound
idiv
sti
jne
mov
lea
cli
jb
adc
or
push
test
dec
or
outs
mov
jmp
lea
(bad)
retf
mov
inc
pop
ja
xchg
ss
sub
je
mov
(bad)
dec
or
add
dec
push
pop
out
pushf
sub
jge
std
test
jno
push
pop
loope
ret
and
mov
xchg
nop
(bad)
es
inc
(bad)
sbb
pop
fs
jnp
pushf
test
bound
retf
test
add
jg
movs
shl
push
cmp
test
add
movs
dec
lock
xor
(bad)
ds
je
addr16
ds
ror
pop
mov
ret
xor
cmps
mov
mov
sub
lock
int3
or
call
repnz
pop
push
in
and
cmp
call
or
icebp
cmp
inc
pop
or
add
xchg
in
fld
push
push
lods
adc
int3
xchg
ret
aaa
push
ja
jmp
jmp
cmp
cmps
lods
mov
je
aaa
js
rol
dec
add
or
adc
call
jmp
pop
int3
ret
xchg
adc
jp
pop
dec
xchg
jmp
add
call
popa
and
xor
fnsave
packsswb
pop
vpshaq
push
pusha
xor
adc
ins
inc
mov
inc
(bad)
fnstcw
pop
and
pop
push
or
add
rol
adc
xor
(bad)
sbb
push
fist
cmp
and
push
or
adc
adc
push
sbb
sub
popa
mov
and
(bad)
pusha
imul
jae
adc
(bad)
jbe
les
mov
mov
adc
or
add
mov
mov
fcmove
add
inc
adc
push
and
sub
xor
dec
sbb
mov
inc
dec
push
imul
imul
push
mov
pop
mov
mov
ret
push
adc
repz
dec
pusha
movs
inc
adc
mov
nop
sbb
scas
and
shl
jg
ja
jge
adc
mov
or
sbb
adc
fdivr
ins
xchg
not
pop
nop
out
out
add
inc
jno
lods
inc
ret
and
xor
pop
xor
sub
popf
pop
mov
mov
loope
mov
mov
nop
les
adc
xor
add
adc
inc
sar
mov
ffreep
sahf
loope
ss
mov
sub
and
mov
dec
js
xor
mov
or
mov
daa
fistp
ins
or
mov
ja
or
sbb
sbb
or
dec
clc
mov
xchg
cmp
cmp
je
push
mov
xor
es
cmp
movs
xchg
push
stos
push
sub
dec
push
fisubr
lods
or
fdivr
inc
lods
loope
ins
inc
mov
inc
inc
push
cdq
pop
or
sub
and
or
mov
inc
std
pusha
lds
pop
or
and
mov
je
mov
xor
cmp
mov
or
pop
and
mov
dec
imul
gs
iret
sub
pop
pop
mov
push
daa
inc
jmp
repnz
push
add
mov
das
add
add
add
into
ret
aaa
stos
ret
fadd
das
jl
sub
les
mov
inc
movs
pop
xor
popf
pushf
in
js
and
push
mov
loopne
cmps
mov
mov
sub
pop
xchg
int
mov
push
inc
pop
adc
mov
mov
sbb
push
mov
inc
dec
clc
jo
fcom
mov
jbe
cmp
(bad)
mov
dec
aam
dec
or
mov
dec
inc
or
or
sub
push
ret
pop
push
test
in
cmp
pop
adc
and
add
add
sub
data16
lea
cli
sbb
inc
(bad)
sbb
adc
adc
sbb
fsubr
push
(bad)
lods
test
or
sub
outs
ja
cld
mov
xlat
inc
pop
and
cmp
sbb
dec
cmp
cmp
mov
cmp
adc
mov
test
vhaddpd
daa
pop
std
push
test
mov
(bad)
xchg
push
dec
mov
jle
call
lock
dec
mov
idiv
push
outs
inc
sti
pop
xchg
mov
and
mov
aas
(bad)
fist
int3
aas
daa
xchg
sub
ins
cmp
pop
ror
in
sub
lods
xor
in
shr
aad
gs
push
out
aad
retf
inc
add
(bad)
fstp
add
movs
mov
xor
cmps
mov
xchg
cmp
stc
add
in
xchg
lods
push
dec
and
sbb
test
add
pop
and
jl
in
mov
inc
sub
enter
jl
pusha
add
push
or
fst
aaa
mov
inc
and
push
fidivr
sub
pop
in
pop
and
mov
je
or
xchg
push
xchg
adc
pop
sbb
cmp
dec
add
xchg
imul
pop
or
xchg
sub
pop
or
xchg
push
dec
add
retf
mov
fwait
adc
loopne
in
in
(bad)
push
nop
popf
mov
xchg
inc
sahf
inc
or
xchg
dec
pop
add
sti
movs
jb
and
xchg
std
aas
mov
jns
inc
pop
mov
xor
xchg
inc
push
adc
xchg
sub
push
dec
shr
xchg
or
mov
dec
sbb
jb
gs
push
imul
movs
arpl
pop
push
sub
or
ins
aad
and
nop
inc
jmp
gs
xor
rol
mov
or
cdq
add
pusha
mov
mov
or
cmp
scas
sti
and
push
cs
mov
sub
push
mov
cld
fldcw
test
pop
cdq
adc
and
sub
jge
mov
cmp
(bad)
and
mov
jmp
test
mov
inc
sub
xor
scas
nop
pop
xor
xor
pop
xor
sbb
enter
xor
and
rol
inc
pop
or
popf
pop
inc
push
movs
mov
adc
sbb
sub
jno
or
pushf
inc
aaa
ss
adc
or
test
and
cmp
out
dec
xor
les
mov
jno
in
cli
jp
push
stos
adc
out
je
(bad)
xor
mov
lock
sub
fdiv
or
movs
outs
das
or
lea
or
and
(bad)
stc
push
rol
inc
ss
inc
not
mov
or
icebp
adc
add
push
movs
outs
mov
rcr
sub
or
dec
cmp
adc
cmp
jns
mov
pop
repz
stc
cmps
adc
dec
sub
lods
lods
add
cmp
mov
mov
push
cmp
add
(bad)
retf
push
cmp
cmp
or
mov
pop
inc
push
and
jnp
movs
cmp
cmp
jmp
sbb
loope
dec
fst
jbe
cmp
mov
dec
test
mov
push
jo
push
sub
lahf
nop
add
adc
fld
lock
inc
pop
fist
je
add
mov
(bad)
sbb
je
jmp
ret
mov
pop
push
jns
push
xor
lea
sub
lahf
loop
lea
dec
cs
inc
repz
call
adc
mov
xor
inc
sub
push
xchg
es
jne
or
pusha
and
arpl
jnp
dec
je
fld
xlat
neg
imul
call
shl
cmps
xchg
cld
dec
push
(bad)
dec
xchg
(bad)
or
push
das
adc
jmp
je
test
lea
mov
mov
aad
mov
and
ret
or
or
add
mov
dec
aaa
sbb
iret
fist
dec
(bad)
int3
mov
push
push
mul
(bad)
js
mov
cwde
jb
mov
sub
js
and
retf
in
cmps
push
in
fadd
fs
test
pop
daa
inc
xchg
cwde
cmp
mov
cmp
cs
xchg
in
div
mov
jne
inc
or
pop
daa
adc
jmp
adc
pop
aam
xchg
rol
push
pop
jge
rcr
xchg
test
push
in
pop
aam
push
cmps
or
mov
ss
adc
das
inc
and
jle
mov
hlt
cs
mov
scas
test
jno
and
mov
xor
lods
shl
aam
pop
call
sar
pop
mov
pop
mov
adc
push
sbb
(bad)
push
into
pop
imul
mov
cs
lds
pop
(bad)
cmps
push
loopne
lahf
sbb
xchg
mov
inc
out
lea
(bad)
mov
les
inc
xor
scas
int
pop
sbb
push
sbb
inc
cs
enter
and
loopne
add
sbb
and
mov
ss
iret
dec
and
sbb
and
and
pop
sbb
or
pop
sub
xor
daa
adc
sub
daa
stc
xchg
inc
nop
pop
and
sub
mov
adc
sub
dec
test
or
pop
sub
nop
retf
sub
loop
mov
ins
inc
mov
push
cmp
mov
push
push
and
scas
mov
inc
imul
mov
pop
das
inc
fimul
in
jae
jecxz
dec
mov
push
xchg
mov
dec
pop
add
and
cmp
outs
jle
dec
mov
movs
cdq
fcom
adc
movs
mov
fadd
call
mov
inc
or
dec
sbb
or
lea
fsub
movs
dec
dec
repz
adc
and
or
add
add
xchg
inc
add
or
and
xor
cmp
xchg
dec
test
enter
das
adc
sbb
ret
and
hlt
in
(bad)
ins
adc
jb
pushf
sub
pop
mov
in
jmp
ins
sub
test
adc
dec
fisttp
xchg
js
ins
and
pop
call
pop
dec
int3
pop
lock
mov
push
sbb
add
adc
and
test
aaa
aam
lahf
mov
sbb
in
clc
ficomp
jbe
push
add
inc
add
into
fsubr
sbb
jl
ret
shl
add
fst
pop
adc
push
lock
push
cwde
jne
in
inc
fadd
stos
jo
add
ret
movs
fiadd
aaa
cmps
xor
je
cmp
int3
out
mov
hlt
dec
sub
or
movs
dec
mov
(bad)
pop
push
pop
push
xor
pop
mov
push
dec
adc
push
adc
inc
test
adc
xor
loop
dec
call
xor
pop
les
inc
test
fs
loopne
push
push
icebp
or
js
jno
mov
lods
lock
or
sbb
adc
or
imul
cmp
add
push
push
xchg
test
or
je
shl
imul
jecxz
add
xor
arpl
push
inc
icebp
sbb
int3
call
add
stc
inc
add
xchg
dec
add
ja
xchg
pop
push
je
daa
xchg
inc
call
xor
and
call
adc
push
mov
jnp
cmp
push
dec
es
into
inc
aad
push
aam
push
shl
enter
sbb
je
jmp
int
enter
push
les
xlat
xchg
add
mov
inc
xor
shr
or
(bad)
fidivr
hlt
cmp
xchg
push
add
ja
add
xor
cmp
jmp
push
cld
push
add
inc
adc
cdq
(bad)
dec
fadd
cld
pop
aaa
mov
clts
repnz
jecxz
loopne
add
sub
pop
adc
repnz
es
push
pop
mov
inc
jne
push
loopne
std
pop
mov
sar
jge
mov
or
imul
xchg
add
add
aaa
add
add
and
les
push
push
sub
mov
and
xchg
ud2
rol
and
in
pop
pop
add
push
fist
movs
dec
iret
adc
mov
sbb
in
lods
add
loopne
dec
adc
mov
movs
mov
sahf
lods
adc
mov
adc
inc
jmp
mov
sub
aam
mov
xchg
(bad)
adc
int
pusha
sbb
adc
jae
mov
retf
and
cmp
jle
clc
cs
sbb
adc
pop
les
lea
hlt
inc
pop
repnz
cdq
inc
ret
xor
xor
or
leave
daa
mov
in
cli
das
sbb
aam
add
inc
in
sbb
and
dec
or
cmp
inc
xlat
mov
sbb
push
inc
jmp
mov
shl
xchg
bound
test
add
adc
pop
xchg
push
mov
xchg
fist
add
mov
inc
add
shl
inc
and
fstp
sahf
push
pop
mov
add
nop
sbb
movs
sbb
(bad)
stos
mov
sbb
pop
inc
sar
cmp
nop
mov
mov
or
mov
pop
sbb
mov
pop
sub
mov
mov
adc
mov
mov
sbb
les
rcr
cwde
cmc
nop
pop
lods
call
lods
pop
call
dec
xor
xchg
ret
push
test
and
xor
jo
cmc
or
jmp
mov
(bad)
jb
out
faddp
add
ret
test
mov
cmps
or
sbb
pop
mov
in
inc
or
sbb
jg
loop
enter
jae
inc
add
outs
mov
loopne
outs
loope
sbb
and
loopne
ret
pop
adc
cmp
sbb
ficomp
or
fadd
outs
enter
adc
push
mov
and
add
ins
pop
sbb
retf
jp
cdq
add
adc
lock
rol
out
mov
dec
inc
aaa
add
xor
mov
repnz
sbb
pop
inc
ds
dec
sub
push
inc
arpl
add
push
les
fs
stos
pop
cwde
sub
cmp
(bad)
mov
xor
cmp
mov
fsubr
cmp
or
js
mov
or
leave
pop
bound
push
ds
sbb
inc
inc
in
jbe
add
lea
test
mov
aam
mov
dec
pushf
fmul
or
jb
pushf
or
(bad)
(bad)
das
or
sbb
retf
adc
cmc
xchg
and
jmp
scas
fadd
movs
adc
cmp
or
push
add
shl
dec
add
sar
or
dec
and
or
cmp
and
movs
imul
and
lea
or
dec
out
adc
or
add
cmp
popf
movzx
loop
add
dec
sbb
cs
sub
xor
adc
mov
ror
add
inc
or
sub
jb
xor
inc
mov
xor
mov
xor
inc
mov
outs
inc
dec
popf
in
sti
in
pusha
xor
add
inc
or
jb
mov
or
sbb
xchg
push
adc
sbb
mov
inc
lea
das
pop
dec
push
popa
dec
loope
inc
inc
ja
sub
inc
retf
call
jo
cwde
je
inc
imul
push
ficom
mov
loope
enter
mov
mov
inc
dec
pop
imul
ins
clc
rol
daa
std
sbb
loop
(bad)
int
(bad)
pop
adc
in
popf
cdq
and
or
(bad)
mov
movs
and
mov
mov
and
push
rcl
pop
cmp
aaa
sti
sbb
pop
push
push
sbb
cmc
mov
mov
mov
sbb
sub
ret
jo
ret
je
sahf
inc
rol
lds
iret
leave
push
jcxz
pop
fdivr
inc
xchg
ret
inc
sbb
ror
dec
cmp
push
push
sbb
loope
adc
add
hlt
or
je
test
rol
xor
push
sub
cmc
dec
test
sbb
and
inc
stc
test
int
cmp
sub
les
icebp
dec
bound
and
add
test
ja
dec
sub
push
adc
xor
pop
repnz
lods
cmp
cmp
(bad)
ja
push
(bad)
inc
(bad)
mov
in
dec
adc
sub
add
fistp
int
or
into
mov
inc
xchg
jp
or
dec
(bad)
popa
aas
pop
or
xchg
sahf
shld
inc
lea
fcom
in
aam
fimul
sbb
or
sub
xor
inc
js
fidivr
and
fidivr
adc
ficom
xor
xchg
and
nop
imul
or
out
adc
cwde
or
push
out
cmp
cld
mov
adc
or
xor
lods
add
mov
sbb
enter
add
adc
add
adc
add
xchg
or
retf
cmp
bound
add
loope
adc
sub
je
(bad)
cli
(bad)
push
adc
hlt
jno
or
sbb
add
sub
sbb
sbb
push
jmp
inc
push
mov
add
push
mov
xor
push
cmp
call
dec
add
xchg
add
(bad)
in
ret
push
ds
add
and
pop
cmp
xor
lods
and
ins
xor
xor
fstp
ds
mov
imul
js
xchg
outs
movs
cmp
or
push
mov
cwde
or
add
or
push
repz
mov
fld
movs
xor
loop
arpl
xor
scas
push
sub
sbb
xor
xchg
jge
and
or
sbb
xchg
cmc
loopne
mov
dec
fsubr
xor
jmp
jo
dec
xor
xchg
jns
push
jmp
cmp
pop
xlat
xor
mov
jle
or
cmp
xlat
mov
cmp
xchg
ins
jo
push
adc
mov
sti
push
and
mov
into
add
outs
int
cld
inc
(bad)
sub
xor
sub
fs
outs
or
int
int
dec
add
and
add
inc
sbb
out
push
cwde
xchg
adc
jecxz
jne
dec
sbb
dec
add
mov
aam
loopne
sbb
lock
stos
inc
ret
or
sub
sub
call
inc
cmp
and
stos
sbb
ror
add
mov
popa
jno
inc
pop
push
in
mov
cmp
(bad)
mov
pusha
inc
test
mov
clc
mov
scas
or
add
sbb
or
mov
dec
jmp
enter
xchg
bound
popa
dec
mov
cld
or
add
xchg
inc
inc
add
and
jo
scas
or
in
or
jnp
lods
in
adc
test
jle
daa
push
and
dec
sub
inc
xchg
test
add
popa
xchg
sar
out
push
push
sub
lods
iret
push
fsincos
sar
jge
mov
sub
xchg
push
sub
mov
mov
test
test
jns
test
jb
xor
xchg
or
dec
dec
in
cmp
or
xor
lea
add
call
push
dec
cli
sbb
test
mov
sbb
rol
inc
dec
frstor
shr
adc
mov
aas
ret
sbb
inc
jmp
mov
and
push
push
xor
cmps
push
add
lds
push
lods
dec
sbb
sbb
leave
movs
mov
push
neg
pop
add
popf
imul
mov
push
push
dec
(bad)
mov
xchg
icebp
sub
dec
cmp
sbb
arpl
jle
add
js
movsx
call
(bad)
jno
jne
jae
pop
sub
je
or
je
adc
fwait
dec
and
dec
inc
ins
arpl
push
push
das
mov
hlt
mov
cmp
retf
inc
hlt
mov
hlt
push
inc
xlat
call
rol
pop
dec
ds
inc
je
push
cdq
ins
aas
cmp
pop
js
je
retf
in
adc
retf
ins
jo
fs
mov
daa
sbb
lock
cmp
xchg
sub
pop
cmc
cmps
aas
lea
(bad)
lock
fwait
push
in
mov
sub
mov
sbb
ss
fwait
push
xor
add
and
sub
call
scas
push
xor
pop
es
iret
xor
adc
mov
fwait
and
sub
mov
sbb
inc
and
lock
sub
xor
push
inc
or
jecxz
or
mov
cmp
(bad)
xlat
push
and
mov
fadd
out
dec
lods
cmp
pop
xchg
sub
push
add
pop
or
xchg
push
push
push
ja
in
mov
sub
das
ret
mov
stos
mov
hlt
and
inc
scas
ins
sub
ffree
leave
inc
mov
push
push
ror
sbb
and
jo
adc
add
or
sub
push
or
and
xor
adc
pmulhuw
pop
xchg
cmc
inc
mov
mov
sbb
xchg
das
push
inc
test
inc
pushf
call
les
xor
sti
icebp
adc
loop
xchg
icebp
(bad)
pop
dec
sbb
inc
test
clc
xchg
xor
or
inc
push
mov
lods
adc
xor
call
cmc
mov
stos
mov
leave
daa
or
or
adc
and
les
push
lea
retf
mov
add
outs
mov
mov
add
xlat
or
fisttp
ret
add
pop
fabs
xchg
test
jne
arpl
mov
cmp
arpl
pop
repnz
shr
loop
xchg
nop
retf
retf
jb
push
add
mov
icebp
ret
iret
dec
mov
mov
jnp
add
mov
sbb
gs
pop
dec
js
int
ror
mov
shrd
out
rol
and
std
inc
adc
sub
pop
rcl
mov
pop
arpl
(bad)
adc
mov
dec
test
jae
and
pop
adc
neg
and
sbb
dec
dec
or
adc
mov
mov
add
aas
(bad)
push
(bad)
jnp
imul
pop
add
(bad)
mov
push
jne
outs
les
int3
shr
xor
leave
popa
add
adc
add
mov
dec
dec
pop
nop
stos
es
ret
mov
sub
mov
adc
sbb
sub
ss
jge
add
movs
jo
in
in
adc
sub
loopne
movs
pop
popa
add
add
rcr
xchg
add
or
pop
pusha
inc
aas
out
and
js
adc
push
and
aam
hlt
adc
aaa
dec
ins
sub
sub
(bad)
(bad)
dec
loopne
aam
clc
sub
cmp
dec
push
clc
push
add
push
push
push
push
mov
mov
int
ret
sbb
and
add
aam
movs
icebp
cmp
mov
mov
nop
call
sub
push
popa
rol
inc
push
cmp
adc
rol
jne
mov
add
adc
mov
or
lea
mov
int
mov
jb
les
and
test
loopne
(bad)
push
push
push
adc
popf
jge
sbb
mov
adc
fcmovb
into
xor
sub
cs
mul
jne
cld
jmp
push
aam
ins
shr
test
xchg
jnp
jno
js
cmp
movs
ficom
pushf
jmp
push
inc
cwde
ror
cmp
push
mov
(bad)
dec
shr
jae
(bad)
(bad)
scas
push
mov
inc
add
in
pop
add
cwde
cld
mov
lods
fnstsw
mov
mov
push
pushf
cmp
jle
rcr
cmp
js
add
xor
out
sbb
jbe
js
cwde
shl
jle
jle
jge
cmp
sbb
sbb
push
xlat
xor
jo
mov
inc
adc
jno
cli
addr16
jae
stos
ds
push
add
push
es
lahf
pop
popa
push
sub
sub
adc
pop
add
add
mov
mov
into
or
push
add
scas
adc
push
stos
jo
cwde
xor
mov
cwde
pop
enter
push
inc
in
pop
adc
test
push
push
je
adc
pop
pop
mov
rcl
mov
mov
pop
dec
jmp
shl
fidiv
cmp
sti
in
adc
sti
movs
mov
jno
jne
ret
jb
or
ja
idiv
or
push
adc
adc
imul
inc
fadd
mov
sbb
mov
dec
add
lea
cwde
or
mov
add
mov
inc
add
hlt
jg
push
es
or
pop
push
adc
cmp
outs
int
jo
es
shr
cld
jb
mov
mov
movs
iret
push
push
lds
or
stos
fcom
xchg
cmp
das
sbb
cmc
imul
and
les
mov
in
push
jg
jecxz
dec
enter
lods
xchg
cmp
pop
sbb
(bad)
(bad)
push
rcl
and
dec
stos
je
sbb
adc
in
push
int3
mov
lods
ret
pusha
sub
inc
add
test
outs
mov
add
xchg
mov
xlat
push
scas
add
pop
dec
pop
sub
and
ret
shl
adc
and
lahf
add
cmp
je
push
int3
pop
jl
and
push
popa
adc
cld
pushf
ficom
jmp
addr16
je
push
push
and
add
mov
retf
push
or
sbb
pushf
stos
mov
mov
adc
ins
cmp
pop
cmp
ret
push
sbb
adc
aam
add
test
fs
imul
push
out
jno
add
inc
pushw
push
and
mov
pop
push
inc
mov
lods
push
mov
nop
retf
mov
scas
scas
add
aam
xchg
sbb
clc
add
pop
repnz
mov
mov
pop
push
in
into
sbb
push
popa
xchg
mov
in
shl
fcmovnb
inc
mov
fldenv
sbb
loopne
cmp
push
loopne
pop
rol
or
loopne
inc
mov
sbb
and
ret
mov
xchg
ss
stc
add
mov
pop
js
(bad)
loope
inc
shr
pusha
test
mov
mov
and
adc
fs
jle
add
sub
out
cmp
cmp
sbb
cmp
or
mov
push
pop
add
ss
push
(bad)
fistp
sub
mov
add
sar
into
(bad)
out
sub
jle
je
jbe
xor
jns
adc
cs
sub
pop
jns
sub
pop
test
adc
inc
cmp
add
aad
pop
fwait
mov
clc
or
test
jl
sub
jmp
fstp
nop
(bad)
dec
mov
pop
cmp
push
adc
ror
repz
(bad)
(bad)
cmps
add
test
icebp
cmp
aas
out
add
daa
sahf
sub
fcmovb
mov
and
fild
popa
bound
xor
jae
enter
sbb
mov
push
add
cmps
cs
xor
ds
mov
pop
and
pop
and
enter
inc
bound
hlt
jne
jb
xchg
mov
dec
push
outs
ins
inc
xlat
cmovg
pop
dec
pop
push
pop
push
fmul
jo
pop
and
and
lea
adc
xor
or
ins
add
faddp
pop
adc
sbb
mov
je
mov
movs
adc
push
imul
jns
push
push
icebp
inc
out
or
and
sbb
push
pop
pop
push
pop
cmp
lea
outs
fisttp
pusha
and
cmc
movs
push
or
jne
xor
mov
pop
dec
loopne
adc
mov
ret
cmps
call
inc
xor
xor
lock
cmp
mov
(bad)
adc
stc
mov
adc
pusha
adc
mov
mov
add
es
inc
iret
mov
ss
and
pop
call
das
in
leave
in
add
mov
cld
test
lock
jmp
sub
sub
mov
and
or
test
xchg
shl
lods
popa
adc
stos
mov
jge
icebp
jbe
inc
adc
push
dec
push
int3
and
push
add
inc
add
inc
pusha
mov
jbe
inc
pop
mov
pop
or
jle
sbb
daa
rcr
cld
xchg
push
cmp
pop
je
or
aam
push
and
xchg
scas
or
cwde
leave
xchg
adc
je
xchg
in
adc
and
push
pop
cmps
and
in
mov
add
js
pop
jne
test
fadd
sbb
(bad)
sub
inc
lea
fimul
ins
repnz
mov
xchg
js
inc
dec
pop
jne
imul
test
ss
ins
jns
jo
mov
push
and
and
cli
adc
push
adc
mov
mov
test
adc
push
and
mov
fld
neg
clc
(bad)
push
mov
push
nop
scas
hlt
sbb
xchg
outs
jbe
jmp
fld
movs
push
xchg
loopne
stos
xchg
dec
ins
leave
pop
xor
add
inc
daa
lea
call
dec
movs
mov
scas
push
add
stc
dec
mov
(bad)
leave
sub
push
inc
(bad)
test
xor
fldln2
imul
xor
adc
pushf
pop
enter
push
inc
sub
inc
mov
or
clc
repz
ret
sub
jmp
das
das
and
dec
inc
inc
test
mov
repnz
add
aas
or
xchg
jecxz
mov
shl
dec
in
push
inc
aaa
jmp
mov
mov
pop
jmp
push
push
das
adc
ret
add
or
and
pop
mov
movs
ret
or
retf
inc
test
jmp
push
in
inc
pop
pop
sub
out
inc
push
(bad)
add
sbb
push
lahf
adc
dec
jo
pusha
add
push
xor
test
gs
adc
div
add
addr16
daa
add
ins
cwde
and
or
mov
enter
add
stos
pop
aaa
adc
or
mov
mov
sbb
movs
es
dec
addr16
push
mov
fmul
mov
push
dec
sub
test
or
jmp
or
mov
dec
ficomp
pop
mov
mov
pop
dec
mov
cmp
repnz
inc
inc
dec
cmp
test
scas
mov
mov
adc
and
jne
push
call
sbb
inc
push
pop
jne
sub
sbb
xor
test
or
and
mov
xchg
push
leave
jo
loop
fwait
jmp
mov
pop
or
dec
push
push
mov
outs
cli
lea
call
xchg
dec
fadd
dec
js
xor
sbb
mov
pop
sub
mov
or
pop
mul
push
aaa
(bad)
push
clc
mov
int3
sbb
test
into
shl
or
dec
pop
add
mov
add
jmp
mov
xchg
sbb
sub
mov
rcl
mov
clc
push
imul
mov
sahf
mov
js
mov
repz
mov
sub
sbb
pop
sub
outs
mov
add
inc
push
ror
pop
pop
mov
or
jmp
mov
mov
mov
cmp
movs
js
adc
xchg
mov
loopne
mov
sbb
lea
push
push
sub
jmp
movs
leave
fbstp
cmp
mov
xchg
popa
jnp
fldenv
jbe
cmp
and
icebp
(bad)
jmp
add
les
sbb
dec
push
adc
fwait
popf
js
dec
pushf
cs
pop
pop
or
dec
loope
sub
sub
add
ins
out
push
jae
push
jp
cmp
adc
jbe
imul
xor
sbb
call
int
mov
mov
and
jmp
mov
or
xor
adc
lea
mov
mov
ds
mov
lds
push
pop
repz
mov
ins
lea
push
test
xchg
popf
mov
cmp
std
inc
ret
out
and
and
pop
or
adc
cmc
mov
lods
cmp
jmp
push
jg
lods
clc
repz
dec
cmp
mov
xor
out
pop
test
sbb
pop
and
xchg
pop
add
bound
into
sbb
inc
push
or
in
mov
and
loopne
xor
(bad)
idiv
pop
icebp
gs
call
jl
push
cmp
jne
xor
mov
jmp
pop
adc
mov
nop
popf
pop
imul
inc
mov
cdq
test
xchg
cld
cmp
mov
or
(bad)
aad
add
pushf
jne
push
push
and
out
js
and
mov
push
test
loop
nop
cmp
(bad)
enter
and
out
(bad)
fst
sub
ror
push
test
cmp
mov
movs
aas
jbe
in
popa
push
sbb
shl
cmp
push
or
ret
call
mov
retf
je
mov
xchg
cwde
sbb
imul
mov
jp
push
retf
xor
xor
clc
ret
int3
mov
mov
lar
test
jns
and
les
loope
xor
jne
mov
out
retf
or
rdpmc
fs
cmps
ja
inc
mov
ins
mov
xchg
pushf
pushf
inc
jp
pop
inc
or
sbb
loope
(bad)
jo
adc
or
cmp
or
mov
adc
adc
lahf
and
add
dec
sub
in
mov
mov
adc
xchg
or
enter
in
mov
cld
lea
and
add
mov
call
push
push
loop
push
pop
and
int3
cmp
and
leave
cmp
cmps
sub
xor
pop
add
and
add
addr16
or
mov
inc
loop
dec
ins
clc
sub
and
push
or
add
or
mov
sbb
dec
fild
mov
mov
or
pop
push
or
or
push
rol
in
rcr
adc
inc
ins
pop
aam
jecxz
sub
sub
mov
fidivr
dec
mov
and
rcr
and
jne
push
in
adc
adc
rcr
xchg
push
xor
add
lea
enter
repz
jb
ins
enter
xor
or
es
or
adc
adc
repnz
adc
inc
in
pop
pop
cmp
sub
shl
mov
int3
popf
or
ret
xor
mov
jo
or
sahf
ss
int
mov
push
jns
hlt
adc
or
xor
and
or
call
inc
fadd
popa
push
and
iret
xor
and
repnz
adc
popf
or
test
add
ret
and
push
pop
add
jne
mov
retf
pop
and
jno
xor
cmp
and
or
inc
dec
sbb
add
dec
or
xchg
jle
sub
cmp
ret
je
adc
adc
cdq
arpl
or
addr16
push
in
mov
and
and
mov
add
push
int
push
or
ins
test
pop
xor
adc
test
adc
adc
inc
push
sbb
dec
dec
imul
dec
scas
add
sbb
imul
or
test
movs
sbb
pop
add
cmp
popa
aaa
xchg
sub
lods
mov
jecxz
loope
sub
loop
(bad)
ror
fwait
mov
pop
cmps
push
add
xor
or
lods
sbb
or
sub
cwde
test
lahf
add
aas
push
jp
lock
sub
ins
adc
and
movs
sbb
lds
mov
and
pusha
mov
fwait
mov
rol
push
fnsave
in
sbb
cmp
mov
push
rcl
out
leave
daa
and
and
jbe
mov
ins
jb
adc
es
jns
xlat
pusha
xor
push
aad
ret
pop
sbb
pop
and
movs
out
popf
cld
icebp
mov
and
push
add
stos
in
push
div
push
movs
sub
int
cdq
sub
js
ins
xchg
jl
loope
inc
imul
daa
adc
cmp
sbb
aas
dec
add
shl
fs
inc
les
or
fld
push
cwde
pop
loop
gs
adc
adc
cmc
or
inc
(bad)
aam
scas
adc
inc
mov
lock
dec
call
ins
adc
fmul
js
push
xchg
loope
or
xchg
ficom
add
or
mov
lea
inc
xchg
ins
lea
push
xor
or
push
push
sub
inc
pop
cmp
xchg
dec
imul
cmp
pop
sti
add
sub
fwait
and
repz
mov
sbb
xchg
xchg
or
sub
or
sub
jle
dec
lock
inc
inc
out
out
dec
ret
xchg
jns
jnp
(bad)
sbb
dec
xor
nop
(bad)
jge
les
test
sbb
and
(bad)
pop
pop
dec
test
dec
adc
mov
mov
push
xor
xchg
aad
xor
out
pop
push
das
test
cmp
popf
mov
mov
or
cmovo
je
aaa
call
xor
inc
jb
and
inc
mov
pop
fist
loope
xor
cmp
mov
lods
mov
fadd
cmp
push
iret
push
dec
push
and
mov
push
pop
jp
sbb
or
mov
aam
js
ficom
add
add
test
adc
mov
vphsubbw
add
movzx
popa
xor
pop
jmp
sbb
mov
xchg
add
fild
inc
loope
inc
sub
inc
or
dec
jbe
dec
push
sar
jbe
push
ja
add
xor
xchg
addr16
and
adc
push
jnp
or
inc
sub
mov
sub
cmp
mov
mov
jecxz
jmp
mov
ret
lods
xor
mov
or
sbb
aam
pop
fild
es
daa
jo
or
mov
scas
xor
mov
pusha
sub
xchg
ror
out
jns
shl
push
gs
xor
jo
push
psubsw
ror
push
push
mov
call
adc
add
cld
in
mov
and
add
or
ds
sahf
movs
push
push
mov
dec
or
or
and
pop
adc
dec
inc
or
ins
gs
mov
adc
push
adc
or
mov
arpl
les
js
clc
push
(bad)
push
jns
icebp
(bad)
mov
cmp
pop
mov
adc
inc
jo
mov
inc
mov
movs
pop
scas
or
sub
push
pop
add
sbb
or
pop
jecxz
sti
adc
rcl
les
pop
jge
dec
pop
or
rcl
xchg
ss
retf
dec
enter
adc
push
mov
sbb
fwait
mov
pop
add
push
add
adc
nop
sbb
hlt
xchg
cmp
fist
add
cwde
sbb
and
add
pusha
xchg
mov
jno
jmp
xchg
inc
adc
adc
jbe
adc
sbb
sub
dec
dec
in
mov
xor
fmul
das
icebp
push
push
jl
xchg
sbb
push
mov
sbb
pop
scas
imul
fist
les
xchg
jno
movs
loop
fbstp
shr
call
or
dec
ds
inc
sbb
and
and
sbb
ins
mov
sbb
test
xor
jmp
xor
rol
aaa
sbb
mov
push
dec
inc
clc
add
mov
jp
xchg
into
adc
pusha
dec
cmp
inc
push
fsub
inc
sbb
xchg
out
add
adc
adc
mov
ja
sub
dec
loope
pop
sbb
and
dec
jne
push
jno
pop
movs
(bad)
push
or
repnz
ret
push
and
adc
dec
icebp
or
inc
ja
push
test
je
push
mov
push
or
sbb
addr16
or
mov
push
in
pop
and
rcl
mov
nop
add
add
mov
push
push
mov
fimul
ja
jne
mov
cmps
nop
ins
fisttp
xlat
jmp
push
lds
ins
in
jae
mov
and
sbb
rol
nop
sbb
jp
jmp
or
cmp
jne
and
imul
adc
push
in
ret
xchg
pushf
add
and
ins
mov
adc
test
sbb
(bad)
das
out
cwde
shl
inc
and
in
push
inc
cmp
push
or
xchg
add
bound
loop
test
sbb
sub
das
lock
cwde
data16
inc
mov
shl
adc
stos
adc
stos
push
(bad)
int
mov
lods
add
jp
push
mov
cli
pop
test
rol
pop
hlt
dec
int3
xchg
mov
mov
test
ror
sub
cld
dec
popa
mov
test
in
adc
and
std
je
(bad)
sbb
adc
mov
add
mov
jg
aaa
(bad)
push
aaa
mov
push
adc
add
adc
mov
or
(bad)
in
add
pop
push
adc
and
xor
mov
and
or
sbb
sub
sbb
pusha
sbb
mov
sbb
inc
jno
(bad)
shl
iret
or
xor
inc
cmp
out
cmp
and
push
fisttp
loope
jnp
mov
mov
in
aam
mov
lods
ret
push
ret
mov
test
push
xchg
aad
mov
mov
inc
pop
aas
sbb
cmp
sub
loopne
adc
pop
push
mov
pop
lock
sub
jnp
jecxz
movs
lock
adc
stos
in
push
xchg
test
sbb
mov
shl
xchg
in
adc
repnz
xchg
xchg
or
push
xchg
jl
jmp
or
or
add
push
mov
stc
jne
das
fsubr
adc
add
adc
out
or
push
jg
push
fld
push
(bad)
inc
mov
pop
daa
jo
xor
push
inc
and
xchg
mov
ss
vcvtsi2ss
jo
int
rol
xchg
xor
cmp
je
push
mov
pop
pop
jle
cmps
or
adc
or
mov
mov
xor
or
xor
mov
jmp
or
cmp
sub
or
or
in
add
test
pop
push
push
cmp
cmp
pop
dec
rcl
test
sub
push
push
(bad)
fldl2t
sbb
jne
cmp
imul
mov
and
xchg
dec
pop
push
adc
shr
xor
adc
shl
gs
or
stos
clc
push
mov
arpl
je
(bad)
push
inc
cmp
xchg
jb
jmp
loope
in
xor
in
sub
(bad)
sub
mov
call
adc
sub
cmp
mov
in
mov
pop
and
(bad)
iret
cmp
call
add
cs
mov
punpckhbw
jmp
mov
inc
cwde
mov
sub
cli
test
pop
neg
xor
iret
push
sub
lea
push
pusha
ins
add
sar
jne
add
pusha
adc
in
add
sbb
push
leave
adc
fdiv
hlt
mov
cmp
dec
jl
push
push
cdq
and
push
or
sbb
jmp
cmps
dec
lds
loopne
fcom
dec
aam
ret
or
push
mov
sub
mov
sub
stos
inc
and
fwait
retf
sbb
mov
adc
add
sbb
and
jmp
push
xchg
je
int
bound
push
ror
aas
fs
push
imul
neg
test
arpl
push
xchg
shr
jle
adc
test
xor
push
pop
arpl
mov
push
jne
popf
in
add
dec
cmp
shr
jns
bound
inc
adc
imul
fs
inc
in
in
adc
mov
push
add
sub
dec
dec
xchg
or
clc
jno
pop
dec
rol
or
mov
ret
add
pop
shl
in
push
test
or
iret
xchg
jb
fwait
and
mov
in
test
cmp
inc
mov
(bad)
rcr
add
mov
loope
dec
inc
adc
imul
fldz
and
add
and
cmp
and
scas
jge
add
sub
pop
xor
cmp
sbb
fiadd
sub
push
xchg
mov
in
cmps
push
sbb
aam
mov
push
add
data16
sub
outs
(bad)
gs
xor
xor
add
bound
scas
sub
cwde
push
xor
push
rcr
and
in
das
pop
retf
pop
fmul
mov
int
jmp
inc
ins
pop
add
lea
fsub
fmul
pop
pusha
stos
cmps
mov
adc
cmp
jecxz
push
and
cmps
add
jns
add
cdq
outs
add
fadd
jg
jle
push
jmp
test
adc
cmp
jl
lahf
jg
mov
cmp
jle
cmp
jp
push
cmp
cmp
jg
mov
cmp
mov
mov
push
add
inc
jmp
test
(bad)
and
mov
ja
inc
xchg
adc
pop
mov
cld
addr16
inc
or
fs
pop
idiv
call
xor
mov
xor
mov
test
cmps
or
or
mov
adc
adc
test
sub
mov
jno
push
popa
or
outs
cld
outs
push
push
or
xor
lea
repz
mov
data16
sub
mov
stos
aaa
pop
daa
sub
jnp
add
or
and
sub
iret
and
adc
dec
sub
pop
add
xchg
pop
pop
pop
aas
pop
int
cmp
or
stos
adc
xor
movs
shr
cmp
add
mov
xor
ror
cdq
in
add
and
or
inc
push
cdq
pushf
push
dec
das
bound
sbb
pop
pop
repz
push
adc
nop
or
shl
inc
mov
ror
and
enter
add
pushf
inc
cmp
mov
push
push
ror
lds
xchg
aad
inc
ins
push
pop
and
and
jo
pop
cwde
jl
outs
lock
and
adc
mov
fistp
add
push
data16
movs
lods
fcomp
push
sub
inc
enter
shl
mov
inc
sub
add
xchg
sbb
jbe
mov
sub
sahf
xchg
dec
push
xchg
pusha
push
add
sbb
add
dec
adc
pop
js
(bad)
or
adc
ror
or
add
sub
inc
cmp
pop
sub
lods
push
and
or
sbb
cwde
inc
and
dec
inc
push
cmp
sbb
loop
icebp
sbb
sbb
retf
push
popa
mov
aam
mov
cmp
rcl
movs
cmp
xchg
inc
inc
sbb
stc
add
and
adc
pusha
int
(bad)
outs
and
sbb
pop
sub
fstp
mov
push
lea
adc
cdq
sub
xchg
push
test
ret
lds
in
push
push
or
mov
icebp
mov
adc
(bad)
shr
dec
xchg
sbb
jb
push
push
nop
sbb
and
mov
and
adc
movs
cdq
inc
sbb
mov
nop
leave
inc
add
sbb
mov
mov
loopne
aas
pop
add
or
stos
pusha
mov
lods
or
ins
lea
xchg
or
loopne
fs
stos
ror
clc
les
mov
add
or
in
mov
stos
add
sbb
push
(bad)
fwait
loope
and
or
add
xchg
dec
loopne
rol
jae
lds
sbb
push
adc
and
sbb
leave
and
adc
int3
push
sub
ret
adc
add
loop
or
sbb
inc
sbb
pop
aas
pusha
popf
xor
push
sbb
jl
lods
je
pusha
xchg
add
pop
xor
(bad)
jecxz
outs
add
pusha
ror
inc
inc
cmps
in
inc
push
pop
push
jp
inc
xchg
add
in
pusha
mov
inc
add
fadd
push
pop
aaa
lock
jp
and
fist
xchg
pop
or
lds
enter
icebp
hlt
add
(bad)
cmp
jmp
jne
fcomp
sbb
mov
or
jp
sbb
jae
jb
mov
popa
xor
ret
int3
inc
jge
imul
or
sbb
jbe
jb
mov
and
std
jb
test
jbe
(bad)
pop
in
sbb
adc
fld
addr16
push
ja
lock
call
fs
mov
add
push
gs
sbb
icebp
mov
pop
push
popa
stos
cmp
pop
fcom
jne
stc
push
stos
scas
adc
popa
cwde
loop
fst
aad
fst
fadd
xchg
xlat
xor
fild
fild
inc
mov
test
sbb
ins
push
cmp
(bad)
pop
ja
stc
add
xor
adc
add
mov
shl
pop
jmp
(bad)
test
inc
je
ret
mov
cmp
adc
inc
sub
lods
popa
push
pop
pusha
adc
arpl
inc
mov
pop
pop
mov
add
add
xchg
add
enter
adc
push
pop
inc
adc
jno
mov
out
rcr
cmp
add
push
cmp
je
outs
add
xor
jle
jle
push
dec
ffreep
jecxz
add
mov
add
inc
dec
jl
fisttp
cmp
cmp
mov
mov
or
pop
xchg
inc
xor
ror
mov
push
xor
push
mov
(bad)
mov
out
(bad)
retf
jmp
or
loop
cwde
or
call
ret
dec
ins
mov
lock
fld
fnstsw
test
je
sbb
and
or
jp
mov
loope
push
fld
push
sbb
inc
cmc
dec
cld
std
jbe
sbb
and
aam
(bad)
bound
nop
mov
inc
imul
mov
pop
or
adc
loope
fist
pop
fsub
pop
fsubrp
pop
aaa
cmp
xor
inc
(bad)
mov
repnz
sbb
pop
stos
in
mov
ret
mov
dec
jb
pop
clc
pop
sbb
cmps
mov
dec
pop
sub
in
ins
fwait
and
dec
mov
inc
jmp
pusha
int3
nop
mov
sub
dec
xchg
push
movs
jge
mov
cmps
std
dec
ins
cmps
shl
(bad)
ins
or
or
out
sub
sbb
into
jo
call
xchg
call
(bad)
loopne
test
xchg
xlat
xor
pop
iret
mov
jle
jnp
ja
rol
aaa
test
ins
data16
adc
or
and
outs
hlt
inc
imul
loope
sbb
daa
cdq
clc
dec
jmp
push
sub
xor
jnp
ficomp
add
add
hlt
mov
mov
clc
dec
or
push
jmp
jb
sbb
leave
shld
add
add
jb
ja
lea
push
push
sbb
add
push
je
dec
adc
mov
or
push
mov
push
push
add
adc
push
sub
sahf
sbb
sbb
push
push
push
push
and
dec
pop
add
shl
pop
leave
or
ins
push
inc
push
nop
test
ror
push
mov
call
jne
ret
xchg
scas
push
sti
ja
push
adc
sub
sahf
mov
push
sbb
jle
js
inc
(bad)
cmp
jne
outs
jle
push
push
adc
inc
inc
cld
cmp
and
jmp
push
push
jl
inc
xchg
mov
pushf
lea
cmp
(bad)
std
mov
or
push
leave
lock
push
push
push
cmp
fdivr
and
gs
and
sub
xor
ror
rol
inc
add
repz
sbb
xchg
add
add
sbb
in
ds
add
adc
les
(bad)
sbb
ret
push
xchg
or
and
jle
cli
push
mov
jnp
push
xlat
push
jae
push
lock
shl
das
push
mov
fdivr
arpl
add
add
jmp
leave
jp
or
push
(bad)
adc
pop
cld
rcl
push
scas
cdq
cmp
add
mov
out
sbb
fisttp
pop
cmp
pushf
sar
inc
int3
or
movs
std
sub
adc
(bad)
and
xor
sub
pusha
inc
retf
aaa
mov
xchg
push
adc
add
pop
push
popa
xchg
imul
rcr
call
mov
jl
outs
or
gs
pop
test
jl
lds
daa
mov
mov
sbb
or
add
js
sub
and
add
inc
cmp
add
test
pop
scas
inc
cwde
push
xchg
cdq
push
je
mov
xor
cmp
or
cdq
add
data16
xchg
cmp
(bad)
fistp
push
popf
sub
popa
and
stos
div
xor
mov
push
mov
dec
cwde
mov
int
xor
call
mov
inc
nop
cmp
emms
pop
xchg
or
sbb
xchg
xchg
adc
mov
pop
ficomp
fild
or
push
adc
mov
push
dec
clc
jmp
lea
shl
cmp
pop
push
add
pop
adc
(bad)
pop
cmps
mov
test
or
loopne
popf
jno
(bad)
push
repz
add
ret
push
add
push
xchg
mov
push
jo
sbb
push
jo
push
sahf
and
mov
or
rol
loopne
cli
rol
icebp
or
fmul
movs
push
mov
xchg
test
es
sub
sub
xchg
popa
fadd
push
ja
call
dec
fdiv
jmp
cmps
je
movs
mov
sbb
inc
(bad)
jge
jmp
icebp
and
xor
inc
adc
fs
add
retf
dec
sar
lods
or
int3
and
je
add
sbb
jg
es
dec
jne
jmp
push
ja
sbb
adc
xchg
cmp
jno
or
pop
in
test
jg
out
push
sar
pop
sbb
or
push
scas
pop
mov
push
test
cld
adc
mov
lea
in
xchg
push
and
test
inc
mov
arpl
cdq
jp
push
jmp
push
cmp
push
in
nop
aam
mov
jnp
nop
inc
mov
je
fadd
jl
push
stos
mov
pop
push
pop
cmp
inc
mov
and
jge
xchg
enter
movs
sbb
fdivr
enter
lahf
jle
cmp
and
mov
sbb
enter
xor
cmp
dec
ins
nop
mov
push
ins
and
xchg
mov
or
xlat
lock
imul
xchg
out
sahf
out
movs
scas
mov
sahf
int
loope
adc
repz
xor
iret
repz
outs
jns
iret
repz
lea
cmp
repz
rcr
out
jns
out
sti
add
pop
stos
jo
and
sbb
cdq
stos
dec
pop
push
push
sbb
push
and
and
int
js
push
icebp
mov
pop
mov
inc
or
fisub
nop
adc
adc
pop
test
nop
je
cmp
add
and
cmp
bound
sub
cmp
jle
out
xchg
fwait
jmp
jl
mov
sub
add
mov
inc
mov
push
std
xchg
aam
pop
mov
adc
popf
push
xor
leave
cmp
cmp
pop
shl
test
fmul
add
mov
mov
fadd
adc
sbb
or
xchg
push
loope
ret
inc
ds
lods
aam
and
dec
test
mov
(bad)
loopne
test
adc
pop
sbb
div
ffreep
dec
mov
xor
push
cmp
and
sbb
lea
sbb
shr
push
cmp
push
sub
shl
and
(bad)
shl
scas
fcomp
xchg
push
fild
stc
add
mov
cmps
jg
inc
add
rcl
shr
inc
out
sub
test
gs
push
xchg
add
cdq
enter
or
sbb
ret
test
fadd
shr
enter
sub
pop
xchg
adc
sar
or
popa
mov
and
mov
push
cmp
adc
add
adc
mov
scas
add
test
imul
pop
push
adc
jge
and
mov
xor
cwde
dec
inc
push
or
cs
sub
sbb
aad
add
xor
xchg
gs
push
pop
push
inc
xchg
loopne
out
and
les
xor
in
mov
mov
mov
fwait
sbb
push
adc
or
cmp
hlt
jne
xchg
xchg
je
mov
leave
jnp
push
mov
sub
and
mov
add
mov
cmp
mov
xchg
xor
mov
rol
icebp
push
jg
mov
fimul
aad
inc
push
xor
dec
neg
sbb
push
into
out
lea
push
mov
jo
fisttp
cmp
mov
test
push
pop
mov
ret
xor
mov
jle
dec
fidiv
xor
jl
in
test
push
jle
mov
xor
pop
mov
sbb
out
out
enter
out
out
ins
cs
out
out
jl
cwde
xchg
out
out
test
movs
inc
movs
call
push
sub
mov
mov
cmp
pop
int3
jl
mov
add
adc
xchg
retf
cmp
push
ins
xlat
movs
inc
loop
aas
mov
mov
cld
or
pop
cmp
xchg
adc
lds
push
and
js
stos
and
je
push
jbe
int
scas
adc
sub
mov
(bad)
imul
mov
sub
lods
jl
gs
add
int3
pop
inc
es
sbb
sbb
xchg
push
mov
xor
dec
pop
dec
inc
xchg
jns
xchg
mov
xor
add
sub
sbb
and
and
dec
adc
lahf
sub
repnz
ret
adc
xor
scas
fwait
or
adc
fist
push
mov
cmp
mov
icebp
xchg
push
dec
push
cmp
test
xchg
or
mov
jle
(bad)
cld
inc
out
sbb
mov
cld
test
cmp
ror
dec
rol
ror
(bad)
int3
sar
dec
cmp
in
test
retf
sub
xor
movs
pop
xlat
scas
daa
aas
push
sbb
bound
inc
push
adc
inc
add
and
adc
cmp
adc
aaa
and
retf
jo
mov
nop
mov
es
push
adc
daa
cmp
das
or
inc
test
mov
cmp
sub
popa
mov
push
addr16
pop
(bad)
ror
add
mov
push
shr
xchg
(bad)
nop
add
cwde
je
mov
loopne
test
mov
scas
dec
adc
inc
lock
shl
nop
mov
xchg
pop
adc
outs
jno
jmp
mov
sub
pusha
aaa
and
jne
fldcw
cmp
sub
movs
push
les
adc
pop
rcr
ror
xchg
(bad)
xchg
mov
sbb
jae
push
lods
movs
cmp
mov
jle
push
mov
cmp
inc
(bad)
xchg
lods
or
adc
retf
and
inc
out
add
mov
inc
add
or
pusha
jg
ja
push
push
adc
push
mov
push
or
mov
lock
xor
push
and
or
add
xor
aam
lods
repz
fiadd
jo
mov
jae
lods
retf
xchg
in
hlt
and
add
loop
call
imul
inc
nop
sbb
push
and
or
or
movs
test
jo
and
mov
or
aaa
outs
push
repnz
mov
cmp
mov
js
push
inc
jl
add
enter
(bad)
scas
jne
test
or
dec
sahf
inc
sahf
nop
push
call
call
dec
sahf
fsub
adc
adc
inc
repz
add
adc
xchg
mov
jns
adc
push
pop
test
adc
inc
push
aam
fcomp
inc
inc
mov
enter
mov
cwde
push
dec
sbb
int
in
and
push
neg
lods
fsubr
sti
ror
or
sbb
test
rcr
sub
dec
push
mov
mov
push
nop
fwait
or
mov
and
inc
pop
clc
ret
adc
rol
cmps
mov
test
and
mov
lea
int
add
jge
push
aaa
inc
sbb
dec
js
cwde
pop
sub
rcr
movs
sbb
sub
push
cmp
and
je
adc
push
dec
cmps
pop
movs
pop
jb
pop
pushf
xchg
mov
pop
jae
pop
fisttp
adc
je
ins
dec
xor
int
fs
pop
es
pusha
add
call
pop
add
inc
or
sub
shl
fwait
les
int3
push
sbb
add
je
sub
add
rol
xor
add
popf
in
pop
add
and
sub
adc
aam
retf
xchg
dec
or
xor
icebp
inc
jo
sahf
jb
adc
jbe
movs
xchg
inc
movs
in
dec
in
rol
test
and
adc
jp
add
mov
jb
xor
repnz
test
lods
add
jecxz
shr
fimul
inc
pop
cmp
xor
fcom
jo
jbe
aad
mov
loope
cmp
cmp
arpl
inc
or
push
or
or
lods
sub
int
sbb
adc
mov
or
push
add
xlat
dec
mov
mov
test
jle
sbb
psllw
xchg
ret
test
pop
push
mov
sub
push
loop
mov
adc
sub
or
adc
xor
ret
leave
ror
(bad)
ret
sbb
and
arpl
mov
les
push
mov
rcl
mov
ret
loope
mov
dec
enter
adc
push
push
inc
pop
cmp
adc
lods
fs
push
push
inc
jmp
adc
rcl
sbb
(bad)
imul
sub
pop
sbb
rol
movs
arpl
sub
sbb
push
outs
and
pusha
sbb
push
ss
add
push
sbb
mov
xchg
xchg
xlat
jecxz
(bad)
add
inc
popf
pop
loopne
xchg
test
pop
or
xchg
pop
and
and
mov
mov
and
push
sub
adc
mov
sub
dec
movs
pop
adc
or
stos
sub
push
imul
pop
es
pop
adc
fs
jae
sub
sub
mov
sub
fwait
nop
dec
pusha
push
sub
movs
cdq
nop
fsubr
pop
ins
movs
ror
shr
sub
movs
pop
cs
pushf
fmul
movs
lea
mov
movs
push
dec
dec
imul
je
mov
jo
cdq
add
lods
dec
jnp
das
mov
inc
push
pop
add
popa
xor
dec
popa
loop
dec
mov
inc
xlat
popf
das
not
icebp
mov
imul
int
sub
sub
ror
sub
push
sub
fs
test
and
dec
xor
and
xor
shl
dec
xor
int
mov
ror
sbb
test
sbb
imul
and
les
aam
movs
cdq
pop
rcl
(bad)
jno
or
sbb
fdiv
or
mov
pop
cmp
mov
sbb
inc
lea
add
les
cmp
fs
out
or
xor
pop
iret
cs
sub
test
and
mov
cdq
icebp
fdivr
push
jne
sbb
lds
push
fs
mov
je
repz
repz
dec
push
push
les
xor
mov
ss
mov
pop
or
scas
aam
pop
and
push
dec
and
or
cmp
pop
jge
jb
fcomp
pop
jg
adc
mov
or
push
and
data16
add
lahf
sub
inc
pop
ror
cmc
push
sub
mul
xlat
nop
push
add
xchg
lock
pushf
loop
inc
mov
fiadd
push
dec
cmp
inc
or
movs
xchg
dec
push
cmp
adc
xchg
add
cmp
mov
inc
add
xchg
xor
clc
cmp
int
lea
ja
and
xlat
ins
ret
repnz
sbb
jns
cmp
jo
push
test
add
or
and
pusha
aam
loopne
popa
lods
popf
jmp
inc
js
dec
mov
adc
dec
lods
mov
push
mov
sub
mov
das
cmc
sub
sub
mov
movs
jle
loop
push
fucomp
xor
sub
fld
mov
pop
and
cwde
dec
stc
aad
fsubr
in
push
pop
fwait
jl
fsub
mov
leave
xor
fst
inc
inc
xor
repnz
cmp
sbb
xor
cmp
cmp
mov
mov
push
clc
test
cdq
sahf
loope
push
jbe
add
adc
call
das
dec
(bad)
mov
imul
push
add
xchg
mov
into
inc
mov
leave
sub
and
lds
pop
cmp
sbb
clc
mov
push
sbb
xlat
jbe
mov
xchg
cmp
jne
inc
add
fsub
ret
jl
and
bound
add
fcomp
push
hlt
sub
or
iret
jne
mov
inc
clc
add
fcomi
enter
jae
inc
adc
imul
pop
or
iret
je
mov
dec
and
sub
jb
or
or
inc
sub
cmp
sub
fnstsw
push
mov
popa
mov
loop
ret
xchg
int3
aam
push
leave
rol
adc
sbb
fnsave
dec
cmp
fcmovbe
aad
pushf
aad
ret
cmp
leave
sub
inc
out
imul
mov
push
inc
vcvtdq2ps
hlt
mov
cmp
jo
in
shr
sub
icebp
or
mov
call
imul
push
mov
jae
(bad)
xchg
pop
test
in
cmps
sbb
test
test
xor
inc
adc
shl
pop
and
sub
or
aam
sbb
mov
cmp
ds
jl
or
(bad)
je
cld
call
cmp
inc
jmp
movzx
mov
movsx
shr
mov
dec
test
push
add
pop
dec
add
in
xchg
pop
jmp
jg
adc
pop
pop
jno
sub
bound
mov
push
fadd
(bad)
inc
or
mov
hlt
ficomp
(bad)
adc
mov
rcr
or
and
dec
pop
mov
dec
movs
add
pop
test
add
in
adc
add
dec
ss
mov
and
sti
xchg
ss
pop
cmps
inc
lock
xchg
repnz
mov
inc
pop
jle
cmp
je
dec
and
pop
fisttp
push
gs
cmc
or
inc
retf
jmp
scas
sub
test
dec
pop
adc
pop
cmp
push
pop
fadd
jmp
popa
inc
sub
add
cmp
push
out
cmp
or
cmp
je
cmp
dec
daa
xor
jne
cmp
jl
lods
in
add
shl
cli
jp
arpl
add
dec
popa
imul
ja
jne
mov
(bad)
fwait
jp
xlat
test
ficomp
test
(bad)
fnsave
jp
inc
push
add
popf
add
ins
outs
adc
adc
rcl
jne
nop
inc
push
adc
inc
xchg
cld
sub
pop
adc
mov
jmp
aad
and
in
xchg
jns
inc
mov
pop
pop
xchg
pop
mov
ds
out
scas
add
cmp
cwde
inc
sub
aad
fdivr
or
jge
fild
mov
ret
pop
and
pushf
lock
daa
add
mov
repnz
and
or
or
inc
jg
outs
lods
repnz
xchg
push
in
push
mov
push
cmp
xor
inc
dec
or
cmp
pusha
mov
push
add
adc
xchg
rcl
and
test
add
inc
jecxz
push
repz
pop
mov
push
rcr
fisttp
nop
dec
faddp
sub
in
add
sbb
(bad)
xchg
sub
pop
clc
(bad)
adc
mov
cmp
mov
mov
push
dec
adc
ror
and
xchg
stc
ds
sub
test
dec
add
and
sub
sbb
sub
dec
mov
into
mov
mov
push
cmps
dec
dec
sar
fs
sbb
shr
add
mov
push
push
sbb
mov
les
icebp
or
adc
cmp
test
adc
aad
add
cmc
sub
mov
(bad)
repz
sbb
sub
ret
push
mov
adc
out
cmp
cmp
sub
xchg
pusha
xor
aaa
cmp
cmp
aad
cmp
std
cmp
enter
xor
rcl
pusha
arpl
test
xchg
sub
inc
ja
add
add
ja
fistp
nop
(bad)
out
jle
js
and
jo
mov
rol
jmp
cmc
jg
rol
test
or
fisttp
add
mov
xchg
test
out
ror
rcr
or
and
(bad)
hlt
push
inc
sbb
(bad)
xor
scas
nop
es
fadd
sbb
adc
add
jo
push
lea
ins
pop
cmp
sub
and
sbb
enter
mov
aam
mov
pop
enter
int3
and
sar
in
add
inc
add
out
cmps
add
sub
jle
fild
jle
inc
mov
push
pusha
fdivr
scas
cmp
inc
clc
or
add
xor
(bad)
ret
or
or
xchg
push
lahf
pusha
push
jmp
ror
add
adc
aas
jb
js
(bad)
test
add
loope
clc
cmps
je
stos
mov
(bad)
lea
test
lock
add
pop
(bad)
cmp
in
or
add
mov
or
xor
call
pop
je
push
(bad)
aam
gs
adc
les
je
scas
dec
inc
cmps
js
sbb
jmp
in
add
les
xchg
hlt
inc
call
ins
clc
test
(bad)
dec
jno
xor
shr
jecxz
nop
push
inc
pshufw
fstp
test
je
comiss
test
in
add
loope
mov
pop
dec
adc
mov
movs
or
push
xor
jne
das
add
call
cmp
jl
lock
outs
fs
js
add
div
add
ds
(bad)
and
int3
idiv
ins
sbb
xor
inc
cwde
add
inc
cmp
faddp
mov
ins
adc
nop
rol
pushf
inc
cmps
movs
jb
enter
icebp
outs
mov
xor
xor
inc
adc
add
xchg
mov
in
std
fmul
mov
lods
sub
je
jne
imul
add
mov
rcr
les
mov
and
daa
sbb
and
xor
or
imul
rol
mov
rdtsc
xor
jnp
ds
ror
sbb
loope
or
lods
push
scas
push
shl
inc
inc
clc
inc
das
je
fbstp
mov
jge
lea
mov
jg
pop
es
outs
das
mov
push
sahf
fsubr
adc
dec
movs
in
jle
in
cmp
test
jne
es
loopne
mov
pop
push
or
jno
fmul
mov
sbb
or
jl
or
bound
jo
int
cmps
push
and
fisttp
(bad)
imul
jmp
push
lea
mov
sbb
pop
sub
mov
scas
sbb
mov
xor
xchg
mov
arpl
inc
frstor
push
popa
sub
jl
and
mov
imul
add
push
mov
inc
jne
test
jmp
mov
retf
ror
ds
add
jg
mov
in
sub
mov
inc
add
inc
or
push
jge
pop
not
sub
pop
add
push
inc
sbb
pop
pop
ins
jno
inc
add
mov
test
jne
sbb
mov
ret
pop
cmp
push
pop
test
(bad)
jns
inc
fnsave
pop
inc
cmp
ins
jge
enter
rcl
jbe
fld
adc
aas
cdq
push
data16
cmp
popf
fbstp
inc
add
out
jne
daa
bnd
sahf
lahf
out
adc
hlt
jne
or
jne
or
inc
jo
clc
push
mov
mov
xchg
cmps
cmps
js
pop
mov
ret
xchg
aad
xchg
cmp
pop
push
lea
mov
movs
iret
inc
dec
(bad)
fcmovnb
push
dec
push
sub
add
(bad)
jl
mov
movs
push
dec
mov
hlt
lea
adc
jne
and
lea
pop
or
inc
add
fcom
inc
xchg
addr16
out
xchg
push
adc
stc
fs
add
neg
xlat
or
xchg
or
loopne
xchg
mov
push
xor
add
(bad)
fadd
clc
adc
in
dec
pushf
rcl
frstor
add
adc
pop
fstp
push
jo
xor
adc
mov
add
mov
sub
cmp
jnp
icebp
loopne
cmps
out
lahf
lock
scas
push
ss
shr
sbb
pop
ret
jg
loopne
or
pop
or
(bad)
push
xchg
rol
cdq
shr
mov
add
call
xor
mov
mov
mov
pusha
cmp
test
mov
jb
or
fs
test
add
jne
fmul
mov
or
lods
and
enter
jns
mov
dec
ficom
mov
xor
fwait
mov
mov
mov
clc
xchg
rcr
push
push
add
je
or
mov
js
es
clc
clc
out
and
mov
call
pop
add
ror
int3
or
es
daa
test
inc
sub
outs
xor
mov
fbld
xchg
dec
xchg
add
pop
sbb
push
fild
mul
dec
and
loop
and
jns
mov
push
enter
push
or
mov
pop
xor
mov
push
mov
jmp
fnsave
pop
mov
fadd
mov
mov
and
loopne
gs
pop
sbb
cs
lea
cmp
xor
loope
mov
mov
push
cs
jnp
ins
push
test
fs
push
adc
mov
mov
fwait
inc
sub
pop
or
je
fadd
jno
popf
mov
add
loop
pop
or
hlt
jae
sbb
dec
pop
daa
or
stc
or
and
push
sbb
sbb
call
dec
das
and
das
pop
sbb
xchg
push
sub
push
dec
fnstsw
in
and
adc
pop
cmp
sbb
and
leave
adc
mov
dec
push
cdq
inc
adc
jo
arpl
lea
std
lds
nop
inc
adc
mov
sbb
sub
pop
cdq
nop
cdq
xlat
xor
push
sbb
dec
push
sbb
adc
sbb
adc
mov
jmp
mov
sub
push
jne
sti
mov
inc
leave
push
rcr
cmp
xchg
arpl
es
dec
cmp
adc
shl
dec
out
mov
pop
movs
(bad)
adc
je
push
lea
jb
adc
push
sbb
mov
mov
push
sbb
cdq
or
movs
cdq
fcom
mov
sbb
xor
add
sub
add
dec
push
out
adc
ins
ror
inc
sti
aam
mov
push
adc
pop
jo
rol
fdivr
and
adc
xor
and
js
jg
adc
jae
je
push
xchg
daa
adc
add
aaa
xor
aam
inc
sbb
fcom
loopne
sbb
test
dec
adc
sar
jne
movs
mov
fist
shl
xlat
test
leave
pop
add
sub
push
or
int
adc
add
or
dec
inc
test
inc
adc
cmps
aas
add
push
inc
out
adc
xchg
push
jmp
stos
sbb
xchg
push
aad
call
and
jmp
movs
jne
jno
in
push
or
or
adc
add
int
inc
lahf
inc
ds
or
aam
push
add
dec
(bad)
stc
sar
gs
jecxz
mov
add
push
lock
fsubr
mov
pop
inc
std
xor
lods
inc
inc
popf
fldl2t
adc
cld
mov
jo
add
mov
rcl
jl
mov
nop
ror
pop
ficom
adc
aam
fisub
mov
add
ja
xor
push
and
stc
mov
sub
or
lds
push
fadd
or
lock
shr
xchg
shl
inc
mov
push
test
les
jo
adc
outs
fcom
inc
loopne
out
mov
pusha
jne
pop
stos
mov
cmp
clc
ins
es
jne
mov
imul
push
jmp
das
cmp
or
or
push
gs
and
sub
das
adc
xor
push
ins
rcl
and
push
adc
(bad)
retf
ret
cmp
cdq
bound
fdiv
mov
xor
or
sub
rcr
jp
loopne
mov
clc
rcr
xor
jns
cmp
dec
inc
pop
dec
cld
pop
push
push
jge
imul
js
clc
rol
jle
add
dec
or
xlat
les
sar
je
pop
push
aas
cmps
lea
pop
sbb
sub
ret
inc
or
add
mov
mov
pop
(bad)
and
stos
lds
test
bndstx
call
jmp
retf
das
out
je
push
lds
mov
ficomp
inc
pop
or
(bad)
and
fdivr
adc
pop
movs
adc
js
mov
int3
mov
add
and
inc
jmp
(bad)
repz
push
xor
add
fisttp
push
enter
aas
add
frstor
dec
sbb
push
dec
popa
cmp
xor
cmp
ret
jbe
jmp
xor
cmp
mov
xchg
push
rol
adc
or
sbb
addr16
cs
ins
jae
arpl
imul
aaa
pop
es
xchg
mov
add
add
inc
xchg
adc
loopne
dec
dec
sub
add
imul
and
jo
add
aas
neg
jmp
mov
shr
or
dec
mov
jp
lahf
lahf
xchg
or
sbb
pop
jno
movs
ret
outs
jo
and
dec
lock
ret
push
je
movs
ja
xchg
int3
leave
or
ins
jle
or
mov
leave
cmp
je
or
mov
retf
adc
rol
(bad)
sbb
sete
mov
pop
pop
int3
iret
call
(bad)
mov
push
ret
js
hlt
jae
mov
mov
cli
sbb
inc
mov
dec
repz
lahf
mov
add
outs
xor
sbb
pop
jmp
enter
jmp
inc
inc
mov
add
or
jecxz
or
add
inc
cmp
jl
cmp
pop
imul
sar
add
gs
mov
hlt
clc
xor
ss
jl
or
cmp
jecxz
sbb
inc
jne
mov
retf
shr
xor
mov
mov
dec
jne
fdiv
adc
pop
pop
adc
pop
dec
inc
das
into
mov
sbb
push
xor
mov
aam
nop
mov
add
push
push
push
sar
inc
jo
shld
lea
inc
adc
rol
pusha
(bad)
adc
mov
clc
and
outs
data16
push
cmp
jl
or
jle
ins
aas
mov
mov
mov
je
rol
mov
loopne
mov
(bad)
(bad)
out
push
mov
add
fild
aas
arpl
ret
test
rol
shl
cmp
xor
add
dec
lahf
push
ret
or
rcl
adc
rcl
dec
leave
xchg
jmp
inc
mov
push
ror
adc
xor
stos
pop
shl
pop
ficomp
ss
mov
pop
cmps
push
xor
in
push
xor
mov
adc
xor
pop
in
dec
leave
sbb
pop
push
cmp
ret
sbb
sub
and
add
pop
push
and
adc
jne
adc
jecxz
push
loopne
iret
pop
push
jmp
test
push
pushf
inc
push
cmp
push
push
cdq
mov
push
out
fcomp
pop
enter
test
dec
pop
add
leave
and
pop
jmp
push
add
bswap
in
push
push
adc
push
and
push
mov
in
and
sbb
ucomiss
xchg
mov
dec
js
hlt
sbb
(bad)
push
call
pop
std
lods
push
pop
ss
jns
retf
add
int3
stos
add
out
in
cmp
movs
adc
lods
jle
lahf
mov
inc
sub
and
mov
lea
hlt
and
inc
sub
adc
loopne
inc
sbb
je
push
push
jp
push
popf
dec
(bad)
fsubr
add
dec
and
(bad)
cmp
scas
mov
jnp
jbe
mov
jmp
mov
(bad)
xchg
pop
push
sbb
sbb
js
cmp
mov
movs
jg
loopne
jl
sub
push
les
test
ror
dec
or
rol
lahf
test
movs
pop
or
cmp
jecxz
ins
mov
add
int3
jge
and
add
cmc
rcl
cdq
dec
push
daa
sub
add
mov
dec
fisub
mov
mov
je
test
repz
shl
adc
or
pop
jb
shr
push
arpl
cmp
pop
fisub
push
push
pop
aam
xlat
scas
dec
jae
mov
ficom
jne
pop
cld
mov
or
aaa
mov
adc
pop
xlat
push
shl
jge
rcl
and
jae
jns
mov
cmp
cmp
pop
sub
mov
loope
sbb
add
cmp
(bad)
clc
pop
bound
cmp
clc
dec
loopne
sar
cmps
je
icebp
imul
ret
call
out
jne
adc
das
and
lods
or
and
cmp
inc
adc
xor
ficom
push
xchg
cmp
add
mov
jne
cmc
inc
gs
xchg
adc
aam
add
add
lods
jle
cs
xor
push
jge
add
aam
xlat
and
or
cmp
jl
cwde
loopne
fmul
test
mov
sub
pop
test
fs
sbb
test
push
daa
movsx
add
add
dec
push
ret
mov
dec
mov
or
rol
out
test
sbb
retf
mov
sbb
cmps
pop
je
and
add
add
cmp
xor
pop
jmp
je
add
push
adc
dec
dec
xlat
movs
cmovle
add
out
stos
pop
mov
mov
inc
add
popf
(bad)
mov
add
mov
adc
les
pop
sbb
push
xchg
xor
ins
in
lock
iret
popf
inc
pop
stos
sbb
add
xor
mov
and
(bad)
shl
mov
xor
xor
sub
xchg
sub
or
ror
or
lock
je
(bad)
fdivr
mov
mov
stc
mov
mov
mov
clc
pop
mov
(bad)
push
sar
mov
dec
adc
push
lds
xchg
(bad)
dec
mov
xor
cmp
add
mov
inc
push
dec
mov
mov
mov
push
xor
adc
add
movzx
mov
rol
sbb
js
jl
dec
sbb
add
gs
iret
push
std
scas
mov
inc
mov
add
out
pop
or
mov
nop
bound
nop
add
or
jmp
push
xor
mov
inc
call
jne
pop
sbb
jno
push
mov
stc
xchg
or
fwait
jb
lea
aam
in
dec
xchg
add
pop
loop
call
ins
into
push
cmp
jno
inc
pop
add
push
icebp
fimul
xor
push
mov
push
nop
cmp
retf
in
in
aas
daa
fs
mov
xor
ret
or
nop
int3
(bad)
loopne
pusha
cli
sub
test
adc
inc
sahf
mov
cmp
out
pop
adc
push
enter
ja
sub
lahf
retf
push
packsswb
jae
and
pop
xlat
mov
nop
popa
imul
push
daa
pop
adc
inc
sbb
add
mov
xor
sub
loopne
and
adc
add
add
mov
pusha
push
and
fadd
sbb
pminsw
push
out
mov
sub
je
mov
test
jmp
js
mov
push
adc
sbb
rcl
sub
arpl
jb
cwde
mov
cld
dec
in
stc
sub
ss
lea
cmp
jbe
cmp
jbe
mov
aad
retf
push
mov
or
jle
add
sahf
mov
aas
ins
mov
sbb
cmc
xor
adc
fcmovnu
pop
add
mov
push
cmp
and
mov
es
cmp
add
jne
push
adc
test
jae
call
fcom
jae
push
push
push
cmp
pusha
sub
sbb
and
push
aas
call
mov
mov
and
inc
mov
aam
xchg
mov
mov
popf
lods
test
mov
aad
push
repnz
call
mov
lock
cmp
cmps
je
lea
ss
add
xchg
push
push
xchg
xor
outs
add
repnz
test
nop
std
or
sub
icebp
pop
adc
cmp
mov
into
jmp
jnp
in
cmp
sbb
push
or
shl
push
sbb
or
popf
aas
mov
add
jb
movs
sub
jo
pop
jmp
pop
cmp
cs
push
pop
in
retf
adc
leave
adc
dec
cmp
and
adc
ins
pop
sbb
add
icebp
(bad)
add
adc
mov
and
or
and
stos
mov
ror
fsubrp
pop
pop
and
loopne
mov
sub
test
jmp
push
stos
iret
sub
pop
add
push
and
pop
push
mov
xor
and
adc
adc
dec
and
mov
pop
or
adc
inc
mov
sbb
(bad)
mov
rcl
loopne
mov
xchg
outs
dec
sti
dec
scas
cmp
and
add
hlt
shr
shr
stos
jle
add
lods
xor
scas
add
jl
mov
push
aam
xlat
and
push
add
stc
dec
cmps
add
sbb
imul
sbb
push
je
push
adc
enter
fisub
les
mov
add
xlat
or
mov
maxps
pavgw
push
inc
push
mov
cmp
adc
dec
inc
cmp
(bad)
adc
fs
ror
fs
push
add
ja
jmp
push
js
dec
or
fsubr
and
out
fdiv
adc
push
ror
inc
add
jle
movs
jo
leave
push
ins
or
sub
inc
aam
add
cmps
int
sub
inc
or
push
pop
sbb
outs
je
mov
test
mov
mov
mov
aam
popf
pop
pop
cmp
xchg
movs
cli
out
sub
mov
dec
add
into
pop
out
push
ins
jnp
addr16
daa
xchg
outs
mov
push
pop
dec
div
out
int3
mov
or
sbb
fild
outs
gs
add
dec
adc
movs
je
mov
test
fdivr
inc
aad
push
(bad)
jmp
ret
loope
pop
mov
stos
int3
ror
pop
loopne
test
or
adc
push
cli
iret
pop
push
push
push
mov
mov
xchg
dec
rcl
jne
dec
inc
or
sbb
jecxz
cwde
jo
scas
(bad)
push
push
or
imul
pop
sub
js
sub
cmp
pop
push
sbb
retf
pop
inc
mov
jnp
pop
add
sub
adc
retf
cmp
ds
cmps
or
cmp
sub
cmc
out
xchg
daa
sbb
pop
clc
jne
mov
push
cmp
adc
push
popa
adc
mov
int3
add
add
in
xor
cld
(bad)
xchg
out
fsubr
call
imul
hlt
cmp
xchg
lea
or
xlat
xchg
rcr
adc
pop
(bad)
fcom
call
cmp
sbb
es
add
xlat
and
and
jmp
ret
sub
xchg
ror
pop
mov
es
fwait
add
sar
shl
aaa
or
jmp
add
mov
aam
mov
not
sbb
enter
out
add
fwait
dec
mov
xchg
add
je
dec
mov
add
pop
test
xor
sbb
jo
jmp
jmp
cmp
cmps
sar
push
pop
cmp
xchg
mov
ror
enter
jg
or
repz
fs
xor
add
and
add
es
sub
es
xchg
add
xchg
mov
xor
lahf
out
cmp
cwde
push
jae
fsub
push
pop
in
pop
mov
inc
sub
mov
xlat
ds
and
sub
mov
push
adc
ins
or
pop
loope
fcomp
inc
xchg
dec
push
xor
jo
cwde
ret
mov
dec
call
push
jg
leave
xchg
das
sub
xchg
mov
or
sub
push
add
test
cs
or
lock
pop
dec
push
or
inc
loopne
inc
mov
inc
xor
sub
shl
or
dec
xor
xchg
mov
stos
jae
mov
add
or
and
adc
and
dec
or
mov
and
arpl
in
mov
cmp
push
add
xor
scas
mov
mov
and
out
ror
neg
sahf
stos
cmp
pop
cwde
outs
shl
enter
jne
scas
je
dec
test
push
(bad)
cmp
push
movs
adc
mov
aad
(bad)
ret
add
cmps
loopne
xchg
outs
or
(bad)
adc
and
sub
push
adc
mov
pop
aaa
sbb
jne
add
xchg
sbb
mov
(bad)
sub
or
inc
push
or
sar
bound
adc
sbb
in
dec
cmc
cmp
les
mov
mov
dec
lods
sti
fcomp
push
sub
(bad)
clc
xchg
iret
fcmovb
mov
inc
loope
dec
jb
daa
mov
or
ret
in
sub
lahf
fdivr
inc
mov
and
xchg
mov
sbb
or
ja
pusha
mov
pop
push
cmp
sub
adc
and
cmp
rcl
push
inc
das
cs
inc
sub
lock
lods
and
and
test
dec
ret
int3
add
shl
jb
xchg
mov
or
dec
sub
imul
js
inc
dec
popa
inc
and
xchg
add
xchg
inc
fcom
and
fdivr
inc
sub
loopne
mov
jmp
mov
not
mov
jmp
add
pop
pushf
jb
std
bound
xor
jbe
mov
movs
les
jmp
(bad)
data16
xchg
scas
je
push
lea
iret
les
add
mov
sbb
jge
dec
rcr
pop
or
push
push
mov
loope
(bad)
and
jbe
(bad)
push
cdq
inc
add
cmp
icebp
mov
push
push
cmp
jb
cmp
cmp
je
push
mov
inc
inc
jecxz
rcr
fisubr
push
dec
je
add
lock
push
sbb
cs
mov
mov
jo
shl
and
pop
add
je
pop
fisubr
sub
jmp
add
mov
mov
adc
fild
or
mov
cmp
repz
fist
cmp
je
cmp
jne
mov
sbb
add
mov
push
inc
mov
pop
dec
(bad)
cmp
jns
or
cmps
push
jmp
test
je
neg
js
or
adc
fnsetpm(287
cld
cmp
jbe
out
pop
add
(bad)
daa
mov
cmp
je
sub
inc
jmp
inc
and
arpl
scas
popf
test
pop
mov
outs
xor
call
clc
mov
jge
jo
cmp
pushf
dec
sbb
mov
push
adc
into
loope
das
rcl
lods
push
xor
outs
(bad)
or
in
test
inc
pop
data16
dec
cld
inc
pop
cmp
jne
jo
sti
cmp
outs
hlt
xor
fs
cmp
bound
pop
les
pop
push
adc
ror
pop
ins
jb
test
adc
js
sub
cmp
sbb
nop
push
or
xchg
push
(bad)
lds
cmps
inc
cld
rcl
xchg
(bad)
xchg
popa
fld
mov
pusha
outs
mov
out
(bad)
jmp
loopne
jne
mov
add
sbb
(bad)
add
data16
test
inc
aaa
jae
mov
mov
pop
shl
add
jmp
pushf
sub
ret
mov
ins
sti
and
cmps
and
xor
js
fs
add
pusha
xor
lock
sub
mov
or
push
popa
inc
cmp
dec
shl
cli
outs
jecxz
lods
sub
lock
loopne
mov
or
add
lea
or
cmp
das
retf
xchg
inc
jg
or
jge
int
rol
xor
and
es
test
jle
sub
sub
and
pop
or
jl
or
push
adc
jle
pusha
push
or
pop
aam
cmp
jbe
and
daa
mov
test
xchg
and
add
test
js
cs
test
jne
pop
sub
push
mov
std
sub
jb
clc
add
loopne
cmp
and
pop
add
adc
mov
inc
mov
sub
sub
push
push
sti
daa
xor
jno
mov
inc
and
mov
and
ja
push
mov
inc
pop
mov
adc
xor
loopne
add
daa
sbb
hlt
lock
adc
call
inc
jbe
push
(bad)
jp
push
mov
adc
packsswb
mov
jmp
aam
add
push
push
(bad)
out
(bad)
and
leave
in
inc
inc
adc
pop
cli
dec
inc
xchg
pop
ret
add
rcl
jne
clc
adc
cwde
xor
mov
inc
js
mov
sahf
mov
imul
pop
jl
inc
inc
xchg
mov
mov
sbb
fnstcw
in
cmp
push
mov
rol
loop
and
cmps
int
and
add
or
mov
adc
mov
mov
push
dec
int
and
push
and
xor
je
and
popf
mov
xchg
add
cs
pop
mov
sbb
adc
out
sub
jne
and
ss
cmp
dec
mov
jmp
and
pop
or
sbb
cdq
aaa
jp
xor
xchg
or
in
test
aad
stos
mov
repnz
push
pop
push
mov
lds
pop
mov
xor
push
xchg
add
cmp
loopne
inc
push
cmp
inc
test
cli
xor
inc
xchg
push
mov
test
ror
pusha
and
add
mov
add
adc
ret
jmp
int
push
movs
or
cmp
sbb
push
push
lods
and
mov
pop
in
imul
outs
fsubr
jae
pop
push
lock
cld
cmp
fdivr
inc
add
cmp
mov
data16
pop
psubd
lea
mov
data16
pop
sub
xor
(bad)
pop
fbstp
mov
inc
fcmovbe
pop
xor
and
cmp
sub
jge
jle
outs
das
push
gs
add
inc
ret
inc
inc
fwait
cmp
pop
add
pop
pop
nop
push
std
jo
inc
out
adc
xor
popf
sbb
or
dec
push
mov
push
mov
xchg
stos
pop
es
lock
(bad)
xchg
sbb
lock
je
test
dec
push
inc
xlat
loopne
inc
inc
jmp
xor
push
ins
add
dec
fs
xchg
or
xchg
adc
pop
xchg
lods
xor
push
dec
mov
or
pop
gs
shl
ret
or
mov
push
in
clc
mov
pop
inc
mov
loop
jl
add
pusha
sbb
xchg
sbb
lods
adc
or
push
in
mov
adc
add
sahf
mov
mov
push
aaa
les
loop
adc
push
add
add
pop
add
in
movs
xchg
push
xor
xchg
jb
sar
mov
lods
add
loope
cmc
ficom
push
ret
or
sti
pusha
jb
out
(bad)
int3
jae
mov
adc
rol
sbb
data16
je
jmp
adc
adc
(bad)
movs
mov
mov
pushf
sahf
sahf
add
push
and
cdq
adc
out
inc
adc
sub
inc
push
jmp
push
clc
mov
adc
pop
loope
cwde
cmp
push
clc
lods
std
sbb
inc
inc
push
push
popf
test
jbe
inc
pop
xchg
add
mov
xchg
dec
ins
push
pop
add
int3
popa
movs
jle
lea
or
xchg
adc
leave
add
pop
frstor
sub
xchg
inc
push
fsub
pop
xchg
fs
add
lods
xor
push
xchg
imul
in
or
and
cmp
(bad)
sub
call
jb
add
fmul
arpl
or
imul
push
hlt
pop
(bad)
sbb
dec
lds
sbb
jnp
mov
sbb
pop
mul
cmp
dec
push
add
pushf
not
test
rcl
retf
xor
fbld
or
pop
fmul
fild
adc
jnp
das
(bad)
push
pop
movs
div
das
js
jle
or
cmp
in
and
push
add
inc
add
in
sub
cmp
fsub
or
and
rol
add
jmp
bound
and
jnp
fstp
cmp
mov
push
sbb
or
int3
adc
jne
lods
popf
jne
push
mov
jne
lock
or
stos
aaa
adc
icebp
pop
mov
push
vmptrld
xchg
sbb
dec
cmp
adc
sub
push
mov
adc
ficom
sbb
adc
mov
ret
jbe
cmc
xchg
jne
mov
icebp
and
lods
fwait
or
loopne
fsub
mov
dec
xlat
ret
in
cld
out
push
aas
je
cmp
push
pop
jne
les
cwde
dec
aam
cmps
jne
push
fcomi
imul
or
pop
jne
pop
call
sbb
add
xor
ins
(bad)
jg
(bad)
jne
jmp
xor
in
sbb
sub
into
mov
mov
aaa
push
adc
add
mov
jmp
jnp
pop
lea
fld
add
je
mov
ficom
in
sub
push
jno
inc
mov
push
imul
and
dec
(bad)
repz
jmp
ins
(bad)
into
jno
mov
jae
scas
jg
and
retf
sub
add
inc
leave
daa
fs
loopne
xlat
xchg
std
and
mov
sub
dec
adc
cmp
and
and
xchg
add
xchg
rol
cmc
or
cs
or
fstp
jb
push
inc
bound
or
or
sbb
push
and
fwait
ret
push
push
mov
cld
add
lahf
pop
call
mov
push
lock
pusha
cmp
std
push
mov
call
popa
adc
push
movs
aas
push
popa
adc
add
inc
arpl
push
pop
ror
or
aas
add
jno
xchg
movs
gs
xlat
push
push
push
mov
pop
pop
pop
pop
jo
in
pusha
pusha
or
rcr
test
push
push
xor
inc
push
sub
out
add
cdq
mov
mov
or
js
jl
add
mov
push
mov
(bad)
not
mov
dec
in
jmp
loopne
push
rcl
retf
mov
int
and
sbb
adc
mov
sbb
repnz
jl
mov
stos
xchg
ficom
push
aaa
outs
(bad)
(bad)
in
add
ins
or
cs
add
daa
mov
outs
xor
es
(bad)
pop
push
scas
sbb
(bad)
jmp
fmulp
xor
mov
mov
(bad)
xchg
mov
push
pop
jmp
adc
mov
stc
sub
enter
or
sbb
jmp
mov
lock
xchg
es
mov
or
adc
cmp
imul
mov
cld
je
lock
cmc
jge
lods
xor
mov
push
mov
(bad)
or
es
push
adc
jl
lods
rcr
mov
in
inc
imul
mov
mov
rep
push
mov
mov
or
inc
cmp
popa
loope
mov
(bad)
(bad)
dec
aam
outs
ss
(bad)
je
call
cmp
mov
je
mov
daa
dec
cmp
jne
ss
in
ins
es
inc
jmp
(bad)
in
into
gs
jnp
or
je
jg
and
adc
and
inc
ret
std
fwait
inc
mov
cdq
sbb
and
pop
sbb
and
aas
dec
pop
xchg
adc
inc
pushf
add
pop
sbb
pop
and
push
arpl
add
ret
adc
cmp
into
sbb
jbe
push
cvtps2pi
mov
jne
mov
daa
or
sub
loop
call
add
in
jl
mov
(bad)
mov
cmp
jne
or
cmps
push
push
into
pusha
or
cmp
xor
cmps
lods
pop
adc
sbb
sbb
mov
je
or
loope
repnz
rcr
imul
aas
js
pop
jmp
mov
sbb
inc
and
cmp
inc
dec
movs
or
stos
mov
mov
ret
sub
mov
cmc
adc
mov
mov
lods
sbb
mov
xor
jge
int
cdq
mov
pusha
je
cli
ins
xor
div
ds
xchg
imul
jle
or
push
inc
add
push
sbb
mov
imul
jb
sbb
leave
inc
cmp
lea
push
mov
mov
mov
mov
arpl
call
or
mov
cmp
jmp
hlt
mov
(bad)
add
push
pop
(bad)
jb
dec
mov
les
int3
push
sbb
inc
(bad)
jmp
mov
in
and
cdq
mov
daa
retf
jecxz
and
and
rol
push
pop
push
jle
push
mov
sar
push
popa
loopne
add
lea
or
iret
inc
mov
or
int
and
push
jbe
call
cmp
adc
add
fisub
push
push
rol
hlt
test
add
test
mov
je
ret
dec
aam
add
mov
mov
mov
inc
pusha
scas
xchg
push
cmp
pop
sub
jns
add
mov
xor
and
or
addr16
push
(bad)
fsub
lea
call
test
add
xchg
sbb
mov
rcl
push
cmp
push
adc
pop
adc
push
loope
in
sahf
push
pop
push
test
pusha
es
pusha
(bad)
push
mov
inc
je
adc
bound
jns
loope
and
mov
scas
ret
mov
clc
jmp
sub
push
push
stc
push
adc
push
popa
mov
test
mov
out
push
add
adc
lock
dec
cmp
mov
adc
pop
movs
xchg
cwde
inc
and
(bad)
and
add
jo
cmp
and
ins
xchg
(bad)
sti
in
mov
or
rcr
(bad)
mov
cmp
cmc
loop
or
dec
jne
jns
pushf
cmp
add
lea
sbb
daa
adc
jg
jbe
push
loopne
adc
in
shr
mov
and
cmp
and
mov
jl
ficom
int3
dec
fadd
iret
in
shl
adc
sbb
jae
dec
add
adc
sub
sub
in
cmp
sar
add
fld
mov
(bad)
(bad)
add
push
outs
mov
jmp
rol
xor
xchg
imul
push
(bad)
fist
push
mov
fs
fs
sbb
cmc
daa
pop
adc
fild
test
das
inc
cmp
cmps
push
test
loope
pop
pop
mov
inc
(bad)
(bad)
xchg
clc
sbb
add
and
movs
mov
adc
test
xchg
sahf
push
cmp
jo
sti
mov
sbb
sbb
sahf
xchg
shl
mov
xchg
stos
imul
xor
dec
mov
add
xor
cmp
jge
and
sub
sub
dec
fsubr
rep
ret
aam
pusha
imul
adc
add
cmp
inc
sub
cmp
jmp
pop
xchg
add
adc
fmulp
test
enter
and
inc
fld
retf
push
push
aaa
jo
shl
mov
cmp
pop
add
adc
int3
push
adc
adc
add
fmul
movs
int3
or
aas
ret
ret
pop
pop
xchg
or
dec
je
sbb
gs
cmp
sbb
xchg
hlt
sub
jno
mov
push
pop
add
push
in
pusha
sub
test
xor
shl
and
pop
add
inc
inc
ins
inc
push
adc
mov
inc
inc
add
sub
test
movs
mov
xlat
mov
or
cmp
or
or
popa
pop
mov
adc
sar
pop
test
and
pop
inc
test
or
add
cmp
push
adc
mov
ins
mov
mov
pop
sbb
out
jmp
push
loopne
or
mov
cmp
repnz
mov
add
xor
push
sub
jge
pop
add
cmp
jle
jne
jo
(bad)
lods
push
add
push
push
shl
push
mov
sbb
xchg
xlat
loop
push
pop
ret
push
push
iret
mov
or
ja
cmps
jo
mov
std
add
iret
add
cmp
repnz
(bad)
cmp
sbb
push
push
test
sub
push
xchg
loopne
mov
inc
inc
data16
in
pop
dec
inc
pop
cmp
pop
iret
mov
mov
stos
cs
jge
xor
sbb
pop
movs
mov
xchg
shr
(bad)
dec
loopne
xchg
sahf
or
cmc
bound
popa
or
mov
popa
add
sub
aam
(bad)
or
clc
call
ret
(bad)
iret
xchg
or
cmp
or
fcmovb
sub
or
movs
cmp
bound
sub
adc
push
inc
or
xlat
inc
sbb
cwde
dec
cli
xor
or
push
loop
lock
fadd
cmps
dec
sbb
or
loop
pop
mov
jbe
jb
xchg
cmc
retf
stos
xor
push
xchg
and
add
xchg
xlat
xlat
push
dec
and
in
push
leave
cld
adc
call
and
adc
and
outs
iret
or
push
rcl
cwde
adc
pop
jnp
inc
mov
adc
out
pusha
popa
adc
pop
mov
jbe
dec
in
push
inc
out
cmps
mov
push
and
out
ja
xlat
mov
push
pop
sbb
stos
rcl
sbb
sbb
or
and
pop
psubb
sub
inc
adc
ret
dec
sti
outs
adc
xchg
bound
add
push
adc
imul
add
cld
xor
pop
or
sub
jmp
cmp
(bad)
sbb
mov
(bad)
push
arpl
add
cmp
inc
xor
scas
sbb
add
jo
scas
push
fidiv
inc
add
dec
lea
mov
or
retf
sbb
inc
or
fadd
(bad)
sub
inc
push
fsub
push
(bad)
in
into
mov
sub
mov
xchg
stos
mov
retf
or
or
repz
es
aad
sbb
pop
push
jae
mov
sbb
fsub
add
dec
call
outs
aaa
xor
adc
pop
fdiv
dec
and
nop
pushf
fsub
leave
sbb
mov
mov
mov
inc
jnp
(bad)
ins
js
sbb
sub
dec
cmp
add
shl
jge
jge
mov
cld
or
mov
or
adc
add
pop
xchg
jecxz
mov
movs
jne
dec
sub
push
mov
nop
dec
imul
xchg
test
cmp
jne
out
or
and
inc
lods
cdq
les
lea
inc
push
or
mov
js
xchg
mov
ficomp
and
or
inc
and
push
inc
mov
add
call
jns
and
or
push
and
sub
add
dec
loope
dec
add
adc
mov
and
push
pop
lock
cmp
es
mov
mov
cld
sub
xchg
rcl
and
sbb
cmp
loope
sbb
inc
or
in
or
and
pop
jbe
xchg
sbb
mul
push
enter
push
sub
jge
retf
add
mov
and
push
and
aaa
ins
dec
pop
mov
inc
jae
mov
push
push
adc
sub
pop
arpl
dec
sbb
rol
inc
in
sbb
ss
imul
aaa
rcr
xor
push
stc
sbb
into
jnp
pusha
sahf
jmp
jge
adc
mov
mov
ret
shl
cwde
pop
mov
mov
lea
jle
push
icebp
rcl
cld
sub
and
ret
lea
ret
in
cmp
pop
adc
or
push
mov
mov
jo
and
dec
inc
push
in
dec
add
(bad)
jo
jnp
add
adc
xchg
adc
mov
pop
mov
and
or
mov
sub
fs
popf
jmp
dec
lods
or
jmp
mov
xor
or
movs
cmp
and
sbb
dec
cdq
inc
ss
jmp
sbb
cwde
xchg
fadd
aam
loop
test
cmp
push
sub
dec
mov
lock
iret
pusha
sub
inc
jmp
xor
sbb
popf
retf
je
cmp
xchg
lock
adc
mov
lods
scas
jge
bound
xchg
mov
fcomp
and
cmp
xchg
xor
fild
fcom
data16
rcl
inc
sbb
dec
cli
cmp
hlt
inc
jbe
adc
inc
jmp
(bad)
div
sbb
cld
clc
mov
loopne
push
sbb
xchg
popf
fistp
rol
bound
xor
cmp
retf
pop
sahf
pop
xchg
dec
fdiv
ret
mov
mov
js
ins
stos
add
add
sar
jo
adc
sbb
push
dec
push
pop
sbb
adc
mov
fild
sbb
or
mov
cmp
pop
push
aam
jne
cmp
push
fsubr
adc
inc
dec
outs
mov
adc
add
dec
dec
dec
mov
push
movs
aam
outs
test
cmp
les
fdiv
inc
mov
mov
shr
arpl
cs
lldt
hlt
daa
pop
ja
les
cmp
xor
dec
and
pop
cmp
mov
ss
iret
jmp
mov
mov
push
push
outs
and
mov
or
lock
sbb
pop
mov
mov
ret
jo
cs
movs
cdq
cdq
imul
push
mov
fwait
xor
xchg
inc
sti
dec
cmp
(bad)
setbe
cmp
pusha
jecxz
sbb
pop
cmc
jnp
mov
jle
and
xor
mov
pop
pusha
test
mov
lea
cwde
xchg
popa
xchg
pop
push
ret
jb
and
hlt
inc
call
fbstp
inc
and
jne
inc
adc
loope
popf
inc
and
push
cdq
jle
jmp
imul
fsub
sbb
push
sbb
mov
hlt
(bad)
jne
ficom
ins
leave
sub
cmp
shr
add
jbe
sub
add
mov
test
push
icebp
das
movs
push
pop
or
add
fst
jmp
daa
push
inc
push
adc
loopne
jle
ds
jb
jnp
push
push
inc
clc
adc
inc
push
ror
push
shl
jbe
cmp
shr
xchg
scas
aas
xor
or
pop
xor
pop
and
dec
cwde
jmp
xor
push
jp
jp
ds
fs
cmp
jne
je
push
shl
hlt
sub
add
out
xor
test
dec
add
test
rol
mov
mov
mov
test
fsub
inc
add
sbb
sbb
mov
popa
xor
or
dec
adc
sub
sbb
mov
mov
pop
mov
xchg
and
cli
adc
xchg
pop
adc
repnz
stos
inc
jg
and
das
dec
fwait
pop
adc
push
and
mov
dec
mov
or
adc
test
adc
adc
dec
xor
push
es
leave
out
mov
ror
push
push
push
sbb
jl
jge
add
dec
cmp
ficom
cmp
icebp
xor
dec
clc
mov
rcr
push
aas
mov
xor
daa
xchg
adc
out
adc
push
nop
adc
adc
adc
adc
and
adc
aas
inc
push
cdq
adc
int3
mov
jno
adc
cmp
pop
xchg
add
push
cmp
stos
xchg
xor
sub
pop
mov
add
retf
dec
ja
push
xor
mov
inc
(bad)
lods
lods
sub
push
jl
sbb
adc
loopne
adc
mov
or
aam
mov
mov
xchg
fs
mov
pop
ins
lock
inc
and
das
loopne
mov
jmp
cmp
bound
cmp
test
jbe
daa
or
or
cmp
dec
adc
push
movs
cmp
dec
sbb
js
in
lea
daa
fsubr
in
mov
inc
xchg
movs
stc
mov
push
les
pop
pusha
test
in
cmp
mov
dec
mov
ss
xchg
push
aaa
sbb
retf
mov
inc
push
add
xor
jnp
jmp
sbb
jns
cmp
outs
nop
xor
test
popf
call
test
test
mov
retf
popa
popf
inc
jge
jb
aam
clc
rol
inc
rol
lea
jle
pop
ins
imul
imul
push
lods
imul
sub
cmps
add
and
scas
je
cmp
push
add
dec
xchg
rol
out
mov
nop
mov
add
cmp
aam
(bad)
pop
fst
mov
and
mov
inc
or
and
xchg
into
push
pushf
int
jnp
lods
pop
sahf
jmp
xor
dec
cmp
out
fimul
cwde
or
test
inc
lock
adc
sub
inc
inc
add
ret
(bad)
xlat
push
(bad)
es
mov
clc
jo
mov
mov
adc
jno
sub
mov
or
stos
add
adc
out
hlt
push
push
add
mov
(bad)
push
adc
and
and
xor
sub
cmp
loop
cmps
jle
clc
add
adc
out
std
jmp
push
cmp
pop
mov
or
in
add
or
rol
and
movs
and
cmp
push
ret
inc
neg
sub
hlt
and
test
cwde
mov
sar
pop
fld
mov
xor
ret
pop
mov
ret
imul
pop
adc
push
xor
add
dec
ret
and
fstp
ds
sbb
out
push
jae
and
mov
push
cmp
test
retf
shr
dec
fs
or
out
test
nop
dec
mov
mov
test
and
imul
pop
scas
or
mov
inc
sbb
inc
push
movs
lahf
dec
cmp
jge
dec
push
xchg
sub
ror
(bad)
mov
push
add
jno
pop
add
repnz
jno
jecxz
pop
(bad)
mov
mov
ror
xor
mov
call
mov
lea
shr
les
rol
rol
(bad)
or
inc
inc
or
test
popa
into
push
cmp
data16
push
add
pop
inc
jno
push
test
clc
mov
inc
test
adc
push
jae
cli
adc
mov
sar
loope
dec
adc
rol
push
push
mov
cmp
sbb
in
pop
push
mov
sbb
add
inc
inc
retf
sub
(bad)
daa
mov
dec
xchg
or
gs
retf
pop
ror
aad
jp
into
or
int
dec
jmp
test
fs
sbb
mov
xor
shl
pop
inc
jmp
jbe
adc
adc
sbb
sysret
in
hlt
stc
call
sub
pusha
pop
add
mov
mov
fnstsw
push
mov
aad
or
dec
sub
inc
push
jne
fistp
jne
cmp
add
sub
rcl
rcr
mov
bound
jns
fiadd
push
inc
and
inc
or
xchg
mov
hlt
sub
inc
push
inc
cmp
test
rol
cmp
(bad)
and
pop
sbb
push
stos
outs
and
and
lea
fisub
cwde
sti
(bad)
adc
test
rol
push
jecxz
and
xor
sbb
pop
fstp
sbb
add
sub
xor
cs
jl
xor
dec
jl
add
push
dec
cdq
pushf
jge
push
jns
es
ror
enter
fld
daa
mov
sbb
adc
inc
inc
ror
bound
add
dec
es
inc
dec
xchg
push
scas
or
adc
pop
call
(bad)
loopne
movs
and
dec
inc
cmps
jmp
mov
adc
dec
push
add
adc
sub
jne
dec
fnstsw
add
dec
add
xor
fs
xchg
push
pop
sar
(bad)
inc
jo
dec
sub
ror
ficom
add
push
(bad)
adc
xor
loope
enter
adc
pop
add
or
push
pop
jge
inc
retf
or
add
adc
xor
or
add
adc
dec
xchg
mov
add
inc
add
test
push
adc
add
add
popa
pusha
nop
data16
and
sub
adc
shl
add
fs
jmp
add
mov
xchg
pop
test
and
pusha
xor
lods
rol
sub
cmp
and
adc
or
mov
out
cmp
lea
(bad)
push
dec
jae
shl
in
cmps
inc
rcr
test
xchg
mov
add
js
jae
cld
in
call
lea
jmp
cmp
sub
shl
push
push
push
loop
aam
push
(bad)
xor
ficom
mov
in
ror
push
add
mov
add
add
sub
or
or
xchg
dec
adc
shr
add
xor
mov
call
add
hlt
call
and
add
aad
pop
xor
pop
pusha
add
rcl
shl
and
xchg
sbb
sub
mov
add
out
add
jb
inc
add
push
and
pop
rcl
xor
pop
sar
sti
add
pop
and
loopne
fisubr
pop
pop
add
xor
push
aaa
adc
jnp
lea
movs
inc
stos
xchg
test
mov
mov
cmp
dec
jo
xchg
movs
mov
jg
inc
sub
mov
xchg
mov
mov
mov
pop
cdq
jecxz
inc
push
sub
mov
xchg
push
je
cwde
xchg
je
add
out
pop
jmp
cmp
nop
mov
(bad)
iret
xchg
js
cmp
stc
xchg
and
sub
or
test
xchg
add
cmp
push
xchg
test
or
fmul
pop
mov
add
mov
dec
ds
dec
jb
ins
int
fimul
jmp
xor
mov
je
cmp
test
jb
pop
mov
sbb
clc
push
push
and
inc
jo
add
inc
lahf
sti
sbb
sti
cmp
inc
and
cmc
std
cmp
mov
add
dec
enter
sahf
test
jb
addr16
push
shl
pop
mov
(bad)
push
or
test
fstp
add
imul
jae
push
xchg
pop
aaa
mov
adc
jl
add
mov
xchg
outs
aad
or
pop
loope
sub
mov
add
xor
add
test
adc
mov
pusha
mov
push
adc
pop
or
jnp
cmp
scas
add
mov
cmp
data16
and
in
fsubr
fdiv
or
je
test
addr16
ror
clc
jne
mov
inc
retf
jle
push
test
cmp
dec
or
sub
shr
test
loopne
cmp
add
es
or
daa
dec
imul
jbe
sbb
hlt
loop
mov
or
or
mov
ds
add
jbe
pop
xor
cmp
call
add
sbb
fnstenv
mov
js
ror
push
fist
cld
loopne
fnstenv
mov
cld
lods
push
mov
adc
adc
push
retf
dec
inc
mov
xor
pop
xchg
(bad)
or
push
cmp
adc
inc
in
setg
xor
add
lea
in
jne
ins
or
or
ret
pop
pusha
push
retf
mov
sahf
mov
mov
hlt
neg
sbb
and
bnd
in
test
push
sub
push
adc
ins
les
ret
leave
dec
mov
test
js
push
mov
add
jmp
je
(bad)
pusha
leave
jge
sbb
add
add
sbb
mov
and
push
retf
mov
(bad)
mov
cmp
jne
cmp
jbe
or
jne
push
adc
mov
sbb
movs
add
hlt
shld
add
ds
data16
mov
pop
push
push
xchg
popa
mov
std
cs
cmc
jmp
pop
jl
pop
mov
add
dec
xchg
rcr
or
adc
sbb
and
fist
jae
cwde
sbb
pop
stos
mov
or
mov
scas
push
push
cmp
loope
inc
add
and
js
adc
nop
test
xchg
xchg
jg
xor
inc
dec
ss
add
test
pop
inc
xor
imul
or
dec
shl
pushf
push
pushf
or
nop
jnp
ret
jnp
inc
out
(bad)
retf
ucomiss
(bad)
ds
das
push
adc
das
repz
je
inc
pop
inc
in
xchg
pop
nop
daa
das
or
inc
(bad)
std
adc
inc
or
sub
xor
das
mov
das
call
add
leave
(bad)
loopne
adc
push
sahf
or
mov
and
data16
leave
ret
mov
or
movs
clc
popa
add
cmp
(bad)
(bad)
jmp
pop
ds
push
daa
pop
cli
and
cmp
imul
sbb
(bad)
mov
and
cmps
dec
popf
mov
sbb
pop
xor
or
adc
loopne
mov
jmp
loopne
or
mov
out
add
iret
ret
pushf
out
sub
pop
jecxz
push
aas
push
mov
cld
aaa
xor
aam
mov
sub
shl
cmp
adc
or
xor
lock
rol
mov
cmp
mov
add
xchg
xchg
or
xchg
fstp
out
aad
cmp
mov
jmp
je
int
xor
and
sbb
sub
push
test
test
nop
xor
xchg
cwde
and
cwde
mov
ins
push
cmp
dec
dec
pusha
sti
jp
jb
push
jae
cdq
or
jp
add
add
and
push
xchg
push
jb
jbe
mov
test
jp
cmp
add
je
cmp
lahf
and
adc
(bad)
dec
out
lods
push
js
xor
and
(bad)
loopne
jp
jae
sbb
cdq
push
pop
add
mov
std
cmp
add
leave
outs
inc
ins
popf
in
cmps
pop
add
pop
out
or
test
dec
or
push
retf
pop
sbb
call
mov
xor
fwait
jp
mov
or
ds
loope
fstp
cdq
mov
mov
je
jmp
push
ss
pop
mov
inc
scas
mov
fstp
addr16
int3
(bad)
aam
sar
addr16
adc
lea
je
dec
add
jle
test
or
fsub
xchg
lea
xlat
(bad)
hlt
xor
dec
push
mov
sub
test
lds
fdiv
or
scas
xor
and
loop
les
add
pop
xlat
call
add
loopne
js
adc
push
je
push
pop
jl
push
es
push
cmp
or
adc
and
sub
sub
adc
and
inc
sub
mov
xor
test
inc
jb
add
les
mov
fsin
mov
xchg
sbb
mov
mov
jae
inc
shr
std
clc
jnp
out
sbb
add
or
xchg
cmp
aam
cmp
fcomp
add
mov
rcr
and
pushf
pusha
sbb
mov
mov
or
ficom
mov
nop
test
or
call
nop
push
jge
xchg
cli
sahf
lds
lock
mov
(bad)
fdivr
cmp
inc
jle
push
push
add
pop
out
xchg
push
push
dec
pop
arpl
in
rcr
or
fnstsw
inc
or
mov
fisttp
aas
sar
ret
sub
outs
rcr
xchg
or
xchg
int3
rcr
or
sti
jb
(bad)
mov
sbb
mov
mov
sub
xor
cwde
scas
push
add
lea
fistp
in
or
jbe
xor
test
sbb
pop
aaa
mov
pushf
xor
je
xor
sub
cmp
inc
sub
test
and
je
pop
sbb
push
jae
lea
jg
inc
dec
ja
cmp
jne
fidiv
mov
out
addr16
jge
lea
push
pop
push
sbb
xchg
jae
stc
xor
(bad)
cld
mov
jb
sub
or
addr16
mov
lea
push
or
sbb
push
xchg
fmulp
or
dec
mov
loope
xor
retf
or
in
adc
mov
leave
jmp
push
inc
sub
mov
test
dec
and
(bad)
mov
push
xchg
xchg
fs
push
pop
dec
ins
movs
adc
add
mov
or
jo
fisttp
mov
movs
loope
add
aam
cmps
pop
push
sbb
mov
mov
and
fwait
and
mov
je
mov
jo
xor
jae
push
mov
or
adc
cmp
adc
loopne
cmc
test
xor
dec
and
inc
and
sub
inc
push
lods
cmp
bound
cmp
xor
push
data16
jmp
jle
movs
sub
or
mov
jb
pop
adc
mov
mov
pushf
nop
and
or
fcom
add
stos
pop
push
add
xor
push
pop
pop
dec
or
xchg
imul
in
adc
jo
or
add
mov
jmp
add
mov
lods
jmp
stos
add
cmp
in
add
adc
pop
movs
jns
inc
cmps
add
xor
shl
and
lock
or
popa
(bad)
sbb
and
jo
das
add
ror
adc
mov
in
aad
mov
je
movs
jne
imul
ss
les
or
test
adc
ss
mov
scas
jbe
test
out
jmp
add
xor
adc
push
push
pop
sbb
xchg
mov
mov
aas
cmp
mov
mov
daa
bnd
mov
adc
cmp
push
cmp
ret
push
xor
lea
push
sub
sbb
les
adc
add
stos
inc
dec
fild
lock
pop
ret
mov
or
pop
scas
sbb
dec
sub
cmc
loopne
dec
sti
xor
leave
pusha
clc
jge
cmp
fdiv
cmp
out
call
add
out
push
cmp
cmp
sub
mov
jb
cmp
and
pop
adc
lock
mov
add
mov
push
pop
sbb
jb
sub
sub
movs
repnz
xchg
out
push
sti
test
dec
jp
add
sub
lods
mov
ins
neg
call
sub
fst
dec
jbe
add
cmc
dec
in
ror
pop
daa
push
ds
shl
push
cmp
jbe
mov
dec
es
popa
ror
jb
add
test
lock
adc
lock
lea
js
ret
push
test
(bad)
in
pushf
mov
or
add
xlat
push
cmps
and
out
in
mov
push
aad
xor
or
aad
sub
into
dec
jp
mov
adc
sbb
nop
call
sub
int
pop
cmps
loope
or
je
xor
jge
cmp
lds
add
addr16
lea
sbb
lahf
mov
cmp
jb
adc
sbb
inc
mov
dec
mov
pshufw
mov
inc
adc
cmp
sub
add
or
add
es
sub
test
mov
and
or
or
and
sahf
adc
cld
xchg
jmp
jecxz
test
sbb
adc
or
in
mov
outs
jnp
add
cmp
arpl
addr16
xor
mov
push
imul
mov
sbb
sbb
nop
lock
pop
in
(bad)
or
enter
add
push
push
jbe
cmp
sbb
mov
std
push
or
jecxz
mov
arpl
or
mov
ror
add
sbb
test
iret
push
cmp
adc
lods
mov
or
or
pop
imul
jo
outs
test
push
hlt
mov
cmp
pop
pop
sbb
(bad)
shl
pop
jl
loope
cmp
add
scas
lahf
popa
push
add
add
and
iret
(bad)
mov
pop
cld
mov
jmp
mov
adc
xor
jbe
cmp
mov
push
ret
scas
lods
mov
cmp
iret
sbb
(bad)
push
sbb
or
sahf
push
mov
mov
push
push
ror
in
xchg
movs
sub
cmp
pop
movs
es
sbb
cld
dec
mov
adc
aaa
lock
jmp
cmp
adc
push
loopne
aas
mov
cmp
mov
popa
add
xchg
repz
pop
and
dec
(bad)
iret
inc
mov
add
mov
sub
dec
push
add
in
or
and
jle
and
mov
or
mov
pop
jno
mov
(bad)
adc
dec
inc
pushf
(bad)
pop
fistp
adc
or
mov
sbb
pop
dec
dec
sub
cmp
add
bound
call
jmp
enter
ja
mov
ret
fsubr
sbb
add
mov
pop
loope
lods
add
xchg
mov
rol
pop
push
pop
sub
ins
and
mov
mov
rcl
into
add
pop
pop
mov
mov
push
dec
aad
mov
nop
js
and
or
sub
pop
sub
js
nop
mov
mov
pop
cmps
(bad)
ds
add
adc
sub
dec
leave
adc
mov
xchg
test
and
dec
add
and
push
mov
or
cmp
fisub
sub
push
sti
rcl
stc
seto
and
jmp
jns
fmul
in
call
adc
or
mov
pop
stos
adc
adc
push
out
mov
(bad)
push
or
mov
cmp
or
mov
cmp
or
jb
pop
push
cmp
ret
push
xlat
mov
sub
or
mov
mov
aas
cld
jo
adc
pop
(bad)
mov
std
adc
lods
jnp
fst
icebp
fimul
adc
cmp
cmps
cs
loopne
add
out
xor
xor
or
in
inc
pop
aaa
pushf
inc
adc
pop
fwait
ret
loope
in
leave
mov
or
into
push
push
out
out
push
imul
add
jmp
jbe
call
mov
add
dec
add
mov
push
and
push
jo
ret
fst
pop
push
mov
lods
mov
xchg
adc
push
cmp
(bad)
loop
or
inc
dec
std
mov
das
jmp
cmp
adc
jne
clc
push
push
psrlw
push
push
js
fdivr
cld
push
cmc
push
adc
jno
mov
movs
ret
mov
psrlq
inc
rcr
sbb
dec
push
xchg
mov
pop
and
xchg
out
nop
or
jecxz
sbb
sbb
and
test
dec
clc
add
ret
jb
and
sar
mov
cvtps2pi
or
dec
aam
xchg
iret
addr16
pop
in
pusha
pop
pop
inc
pop
rol
push
dec
cmc
xchg
sub
popa
inc
les
(bad)
pop
jle
sub
ins
mov
in
test
mov
sbb
imul
or
arpl
out
mov
jb
push
sub
add
or
je
scas
jmp
mov
mov
mov
adc
dec
outs
hlt
stos
or
mov
dec
into
inc
mov
ret
jbe
xor
push
cmc
daa
rcr
ret
or
dec
cli
push
ret
ds
push
xchg
and
pop
dec
inc
sbb
repz
iret
mov
add
add
sti
inc
jmp
js
mov
xchg
dec
ss
add
sti
dec
jb
add
clc
xor
or
add
sub
add
loopne
sbb
jne
mov
jnp
pop
pop
fs
push
push
sbb
mov
mov
popa
mov
cmp
enter
mov
add
jp
push
sbb
rcr
daa
jge
adc
sbb
js
cmp
mov
pop
xchg
cmp
hlt
fcmovb
adc
mov
cmp
jl
dec
loop
inc
sub
into
xchg
add
je
cmp
sbb
push
lea
or
dec
es
adc
jmp
sub
int
lods
mov
inc
jmp
or
and
pop
mov
push
sub
push
mov
inc
or
mov
jnp
mov
enter
inc
or
pop
rcl
(bad)
dec
mov
mov
std
push
repnz
dec
in
rcr
jae
scas
xor
lods
ja
pop
sub
push
arpl
jmp
adc
mov
in
out
inc
idiv
push
cmp
dec
push
(bad)
pop
or
loope
out
pusha
jbe
mov
into
add
in
loope
shl
fdivr
jg
idiv
loopne
clc
push
cmp
lea
into
xor
mov
das
outs
push
xor
add
inc
loop
dec
inc
or
loop
dec
inc
(bad)
jl
mov
leave
cdq
add
std
rol
xor
dec
or
test
mov
stos
adc
mov
sub
dec
dec
jns
adc
rol
mov
sub
mov
add
adc
ror
pop
adc
es
add
jmp
das
imul
(bad)
sbb
cld
or
mov
outs
imul
xor
or
inc
mov
or
inc
ret
setb
or
push
xchg
xchg
mov
xchg
nop
xchg
or
cmc
mov
and
cs
jle
add
aam
xor
push
(bad)
outs
nop
mov
dec
fisub
jmp
lods
jae
adc
and
pushf
jo
push
scas
sub
dec
push
adc
and
adc
xor
dec
xchg
xor
mov
movs
mov
xchg
mov
add
js
mov
push
add
or
sbb
push
xor
aas
push
push
ds
xlat
push
sub
jmp
mov
loopne
fs
retf
xchg
shl
push
cmp
daa
bound
xchg
inc
in
pop
pop
pop
outs
mov
pop
mov
inc
mov
adc
loope
imul
push
mov
sbb
xchg
inc
adc
daa
push
mov
phaddd
call
clc
sar
push
lods
pop
loop
and
inc
loop
mov
cmc
ror
popf
les
add
test
add
(bad)
xor
arpl
rcl
mov
sbb
mov
and
lea
cmp
sbb
es
movs
ins
jp
push
and
jne
adc
sbb
dec
repz
sub
mov
jg
(bad)
jne
or
jne
cdq
or
add
in
int3
daa
jno
adc
push
jmp
mov
into
and
pop
add
cmp
retf
inc
add
lea
fcom
jbe
retf
clc
bnd
sbb
sbb
sbb
in
test
lods
repnz
cld
not
popa
icebp
mov
cmp
push
in
movs
pop
rcr
mov
mov
or
push
xchg
push
pop
pop
stc
movs
inc
mov
inc
ror
jge
push
outs
xor
sar
sub
mov
push
mov
out
dec
xor
push
push
test
fiadd
in
ret
imul
enter
mov
cmp
push
sbb
sar
scas
ins
popf
pop
addr16
push
ret
aam
pop
jecxz
xor
jg
and
jl
pushf
pop
sbb
pusha
pop
mov
loop
rcl
cmp
push
add
jmp
gs
ds
adc
retf
cmp
ins
adc
fst
adc
daa
adc
(bad)
je
(bad)
mov
js
loope
loope
aam
push
rol
xchg
cmp
int3
dec
and
and
mov
fs
rol
push
jne
dec
push
fidiv
cli
or
pop
sub
sbb
jne
out
sar
dec
push
arpl
xchg
push
je
xor
outs
sbb
xor
ins
jne
push
and
inc
jno
jne
scas
aaa
and
jnp
push
mov
mov
mov
leave
jo
int3
or
cmp
je
add
inc
sbb
in
push
or
ror
lods
xchg
fwait
aam
mov
and
fsub
xlat
(bad)
push
data16
jg
cmp
sbb
outs
push
jnp
push
cmp
dec
xor
pop
push
push
pop
sti
inc
mov
inc
fdivr
(bad)
jl
mov
mov
int3
jecxz
add
push
xor
loope
mov
mov
in
push
cmc
pushf
lds
pop
xor
pop
shl
and
sbb
movs
cmps
loopne
jns
outs
fmul
mov
push
outs
mov
stc
mov
loope
fs
jne
add
or
fidiv
mov
mov
icebp
test
add
adc
test
sbb
imul
or
fldcw
lock
xchg
xchg
mov
or
mov
or
fwait
mov
movs
xlat
movs
or
and
adc
jecxz
cmp
dec
or
cmp
inc
sbb
inc
or
add
stos
rcr
xor
jbe
jns
jb
mov
or
clc
mov
jae
or
bound
xchg
add
sbb
dec
lea
cmp
push
pusha
xor
shl
push
push
mov
enter
or
call
sbb
pushf
cwde
or
add
adc
mov
adc
sub
pop
jbe
in
adc
xor
addr16
scas
into
xor
imul
mov
lods
(bad)
add
loopne
nop
in
jle
mov
cmps
or
add
les
ret
pusha
xchg
mov
mov
pop
xchg
sub
push
fdiv
and
cmp
sbb
add
and
jo
push
fs
lds
jbe
(bad)
sub
adc
dec
xor
push
and
push
jo
mov
out
loopne
(bad)
inc
push
pop
sbb
mov
jne
mov
push
jo
mov
cmp
(bad)
and
lods
xor
pop
adc
and
dec
iret
add
push
adc
shl
(bad)
movs
fstp
xchg
add
xchg
pusha
cmp
mov
and
dec
inc
mov
dec
add
sbb
inc
out
jne
sbb
adc
or
xchg
call
cmp
sbb
es
mov
mov
not
fbstp
mov
xor
jo
cmps
xor
arpl
adc
adc
mov
ins
push
cmp
nop
dec
and
inc
sub
sub
imul
shl
ret
mov
sbb
add
xlat
pusha
jo
ds
and
ins
push
aaa
fld
inc
xor
mov
fdivr
xor
add
lock
push
jne
or
ret
loope
std
dec
adc
imul
popa
xor
adc
std
jmp
and
xchg
add
div
mov
adc
das
call
movs
stc
fld
sar
addr16
xchg
out
lds
add
out
cmp
sub
outs
push
clc
sub
mov
inc
xchg
les
mov
add
mov
stc
push
jne
mov
scas
movs
or
xchg
addr16
jne
cmp
add
pop
mov
je
xor
mov
xor
es
(bad)
ja
fwait
pop
lahf
sub
mov
hlt
cld
pusha
mov
push
dec
mov
add
adc
sbb
aam
add
into
js
mov
idiv
mov
fs
pop
sbb
rol
in
mov
dec
inc
les
and
sub
pop
xchg
push
jne
popf
lock
pusha
movs
lahf
mov
jle
popf
sbb
jo
cli
out
fidivr
and
or
inc
lods
pop
mov
dec
jb
popa
sbb
outs
push
sbb
cli
mov
or
dec
or
lods
ret
les
cmp
sqrtps
fadd
out
movs
sti
ins
adc
or
sub
adc
inc
and
push
rol
out
fcmove
and
jmp
call
leave
mov
push
sub
or
sub
adc
je
adc
lea
not
sbb
xor
and
mov
and
jp
adc
or
push
pusha
mov
int3
lock
inc
mov
mov
push
inc
inc
lock
fcom
or
aaa
sbb
je
sub
jnp
mov
je
fs
pop
pop
fs
pusha
inc
push
sbb
ins
ins
push
pop
scas
(bad)
out
movs
xor
push
mov
sub
idiv
cwde
dec
xchg
inc
pushf
cmp
pop
fistp
cli
je
popf
add
adc
or
adc
inc
pop
mov
push
jo
sbb
adc
push
push
js
ss
fwait
inc
and
mov
cmps
fwait
jmp
push
jne
or
add
xchg
push
add
add
lock
nop
dec
or
lock
enter
lock
addr16
lahf
push
ror
and
out
lods
sub
push
push
pop
adc
adc
mov
sub
aam
inc
mov
movs
movsx
in
push
mov
retf
add
and
rcr
retf
sub
xor
pop
loope
lods
cmp
xor
or
push
fld
pop
sbb
sbb
add
sbb
dec
fcom
arpl
(bad)
aam
shl
adc
inc
inc
inc
out
test
pop
mov
fadd
jl
sbb
mov
xchg
ins
jbe
clc
jne
adc
add
nop
cmps
sub
jns
push
sbb
adc
ins
stc
jl
jne
push
test
popa
fwait
add
ficom
and
mov
int3
cs
mov
mov
cmp
test
aas
jne
outs
fdiv
fld
movs
xor
shr
loopne
cmp
mov
mov
pusha
mov
ret
mov
int
fidivr
jbe
sub
sub
mov
cmp
sbb
test
adc
push
and
add
loopne
dec
push
lea
or
adc
out
adc
pop
sbb
adc
dec
push
or
out
add
xor
lock
jl
ror
fcom
add
les
mov
mov
or
xchg
(bad)
add
or
clc
(bad)
pop
arpl
mov
sub
imul
ret
sbb
and
dec
sete
lock
add
cwde
or
and
out
cmp
hlt
pop
add
push
add
adc
test
cmp
fdiv
mov
mov
sub
pusha
push
mov
cmp
loopne
sbb
inc
add
arpl
loopne
shl
and
cmp
mov
jmp
mov
add
sbb
xchg
dec
ins
or
movs
mov
fidivr
add
popa
(bad)
and
inc
sbb
push
dec
nop
dec
cmp
inc
repz
and
adc
xor
dec
pop
test
pop
adc
ret
dec
sahf
and
pop
out
push
lea
and
mov
cli
sub
xchg
cmc
push
(bad)
xchg
dec
gs
sub
mov
push
push
push
or
sbb
push
adc
fiadd
mov
mov
push
push
js
cmp
jecxz
sub
push
fmul
lds
push
jp
mov
rol
je
push
inc
add
test
pop
mov
mov
rcr
or
aaa
xchg
add
xor
xor
fisttp
dec
pop
mov
movs
mov
js
jl
push
dec
mov
(bad)
sbb
popa
lock
push
adc
sbb
jmp
daa
sub
mov
jg
hlt
push
mov
and
pusha
or
(bad)
mov
xor
push
enter
jmp
aaa
cmp
and
pop
dec
sbb
fdivp
(bad)
fmulp
mov
cmp
or
imul
fidiv
and
xchg
out
push
and
sbb
movs
inc
and
(bad)
mov
ss
and
test
fimul
je
inc
or
aaa
stc
adc
rcr
xchg
ret
sub
push
aam
jbe
xchg
mov
adc
adc
xchg
mov
scas
sub
or
fsubr
jno
inc
push
or
pop
fstp
adc
xor
and
and
sub
(bad)
in
adc
lds
sub
sbb
(bad)
rol
popf
inc
jg
pusha
aam
ins
adc
pop
hlt
lods
xor
push
(bad)
adc
push
clc
cmp
or
cmps
ret
shr
push
pop
scas
push
mov
dec
jnp
out
push
js
add
xchg
add
sti
cmp
push
add
pop
call
xor
(bad)
(bad)
(bad)
pusha
mov
jb
and
loopne
lock
xchg
arpl
inc
xchg
pop
pop
mov
adc
or
or
add
imul
and
mov
call
add
inc
xor
sahf
push
mov
sub
fadd
leave
jo
js
clc
add
xor
mov
pop
sub
mov
fnsave
xchg
push
xor
push
test
push
push
or
sbb
pop
fimul
push
mov
call
xchg
push
mov
inc
imul
pushf
adc
add
add
and
sbb
xor
inc
add
xchg
jbe
sbb
xchg
jnp
dec
leave
add
xor
push
(bad)
nop
mov
push
xchg
and
pusha
dec
xchg
pop
and
movq
push
push
sahf
mov
fwait
xchg
cmp
or
dec
inc
in
add
pop
adc
adc
sbb
ins
jmp
pop
mov
pop
push
inc
jmp
sbb
add
(bad)
(bad)
std
jmp
mov
jnp
cmp
pusha
sub
imul
out
sub
dec
pop
fcmovb
je
inc
or
add
xor
xchg
mov
xchg
lods
push
sub
mov
inc
cmc
js
aas
scas
and
les
jmp
push
mov
loopne
jne
cmp
pop
add
push
or
push
fmul
or
dec
push
inc
xor
jp
nop
rcl
int3
push
ret
or
es
pop
pop
mov
inc
neg
dec
push
sub
mov
jl
and
push
adc
add
ret
pop
add
stos
cdq
dec
xlat
pop
add
pop
dec
xor
dec
mov
or
cmp
sahf
dec
xor
pop
jo
push
int3
jo
sbb
adc
(bad)
jbe
mov
sbb
adc
fbld
adc
mov
adc
or
adc
adc
sbb
test
vunpcklpd
shl
push
ret
push
xor
call
and
(bad)
xor
xor
je
call
pop
loopne
sar
adc
cmps
xor
pop
jmp
mov
loope
and
adc
lock
jno
adc
pop
pop
cmp
jl
push
xor
inc
rcl
(bad)
nop
push
popa
fsub
mov
push
icebp
sub
add
pop
shl
xor
push
pop
lock
or
xor
mov
or
jle
xor
scas
add
cs
cmp
outs
test
mov
imul
add
scas
adc
xchg
cmp
or
(bad)
outs
(bad)
and
dec
or
dec
jl
loope
xor
mov
fist
xor
or
xchg
les
pop
mov
fisttp
mov
inc
mov
leave
pop
adc
sub
pop
xchg
cmc
mov
mov
out
cmps
sub
inc
ins
xor
add
mov
aas
xor
or
mov
xchg
lock
add
inc
push
pop
adc
add
popa
jmp
movs
sar
aaa
push
jb
jb
add
add
jge
sbb
movs
push
fdivr
scas
dec
enter
or
or
xor
mov
inc
rcl
data16
push
test
add
xchg
loopne
adc
or
or
add
sbb
test
leave
xlat
fs
mov
cmp
jns
push
mov
xchg
int
mov
cmp
and
call
or
neg
adc
xchg
or
(bad)
jmp
jo
or
mov
es
mov
shr
push
mov
outs
movs
pop
push
push
push
inc
pop
sub
add
add
stos
retf
mov
add
add
stos
xchg
dec
add
ret
push
fwait
xchg
retf
mov
or
dec
push
and
mov
movs
bswap
movs
mov
jecxz
add
push
mov
adc
push
mov
add
dec
and
leave
push
repnz
sub
rol
mov
xchg
mov
pop
dec
pop
adc
or
popf
add
sub
daa
js
xor
das
dec
fist
test
sti
shr
adc
cmp
pop
mov
test
je
add
push
stos
rcl
test
mov
ret
sub
std
inc
adc
mov
push
sbb
xchg
or
adc
adc
sbb
jbe
arpl
cli
xchg
sub
and
sbb
mov
in
dec
outs
push
inc
outs
push
cmp
inc
leave
push
add
add
xchg
mov
mov
jae
or
movs
add
out
cwde
xchg
pusha
fsub
and
mov
xor
jle
je
rcl
xchg
xor
add
push
add
add
stos
call
and
enter
jb
jecxz
cmp
adc
push
xor
out
mov
jne
mov
jle
pop
mov
xor
add
xadd
bound
mov
aam
push
jg
xor
mov
push
fild
add
add
sbb
shl
aas
out
rol
ret
jbe
imul
and
inc
cli
push
cld
dec
(bad)
push
add
xchg
pop
pop
mov
fucom
pmuludq
pop
adc
inc
ins
shr
inc
add
mov
mov
call
loopne
adc
inc
ret
cmp
(bad)
arpl
add
jp
scas
sbb
pusha
ins
std
pop
xchg
je
inc
push
push
mov
adc
add
adc
ins
fnsave
lods
push
(bad)
in
outs
ins
out
in
(bad)
(bad)
adc
lods
jae
movs
mov
shl
sbb
jne
scas
mov
rcl
arpl
icebp
retf
cmp
pop
adc
inc
lock
add
repnz
push
dec
mov
add
retf
push
int
(bad)
cmp
test
sbb
xor
test
js
dec
push
push
ins
sar
or
or
push
int3
xchg
inc
inc
loope
and
pop
arpl
adc
xor
mov
xor
mov
outs
adc
cmp
or
test
jmp
dec
icebp
add
inc
mov
mov
or
add
ins
ins
shr
aam
or
cmp
nop
cmps
loopne
add
jmp
mov
cs
adc
sbb
movs
xor
je
jo
(bad)
imul
add
cwde
adc
add
sar
or
jmp
push
pop
mov
add
js
clc
jbe
mov
push
out
in
jecxz
lds
dec
xor
jle
sub
sub
pop
mov
ds
add
es
sub
ret
jbe
mov
fs
mov
cmp
xor
or
rcl
inc
mov
push
retf
cmp
pop
fisub
adc
xchg
les
into
sub
mov
rol
xor
push
mov
dec
inc
push
or
add
test
add
das
test
adc
jg
(bad)
push
cmovns
pusha
pop
inc
add
mov
jne
(bad)
adc
pop
inc
aaa
test
inc
es
ret
in
lea
arpl
in
xchg
add
fsub
inc
adc
push
push
and
inc
push
cwde
ret
mov
jno
fwait
pop
fs
or
scas
or
(bad)
fcos
add
dec
stos
mov
pusha
sub
xor
(bad)
mov
cmp
test
cmp
mov
xor
fs
or
mov
pop
test
xchg
sahf
add
enter
mov
adc
inc
cli
xor
rcl
leave
pop
xchg
rol
xor
rol
out
mov
push
loop
js
add
and
dec
sub
adc
pop
pop
push
push
retf
call
sbb
out
cmp
mov
jl
cwde
fnsave
add
ss
sti
xchg
lock
pop
push
add
test
pxor
jle
xor
or
mov
addr16
add
dec
rcr
dec
xchg
cmps
add
mov
imul
jno
xchg
add
sbb
push
jae
push
push
fsubr
imul
sbb
sbb
cdq
in
lods
jmp
pop
pop
push
push
dec
adc
push
or
dec
int
mul
pusha
xor
and
clc
test
js
push
jne
push
xor
dec
adc
mov
push
mov
sahf
jb
pinsrw
test
xor
retf
mov
or
mov
sub
shr
sbb
fisttp
mov
xchg
sbb
fidivr
lods
loope
or
add
add
retf
rcl
xchg
mov
and
sub
jns
aad
adc
pop
push
sbb
ret
mov
inc
sbb
aad
push
stos
sti
push
sub
jno
loopne
lea
cmps
ret
adc
out
cwde
and
arpl
xchg
add
in
dec
add
retf
mov
test
adc
xor
ret
sub
lea
add
cmp
mov
addr16
pop
push
cwde
add
cld
push
dec
les
add
je
fs
and
lahf
cmp
inc
shl
mov
sub
cdq
adc
es
dec
pop
or
pop
cld
pop
adc
and
jne
mov
(bad)
stc
jbe
jp
cmps
jne
ret
outs
mov
in
lahf
adc
cmp
ja
je
or
je
or
mov
adc
sub
icebp
and
das
adc
cli
jnp
cmp
or
cmp
jl
ret
xchg
or
jne
xor
jnp
jl
in
xor
jmp
cmp
fidiv
adc
adc
xchg
xor
inc
adc
lea
inc
push
test
or
int3
lds
test
cdq
mov
inc
mov
jbe
call
cmps
xor
push
add
or
cmp
sub
retf
js
mov
adc
lahf
daa
mov
adc
pop
sbb
sbb
dec
ret
or
adc
ret
fstp
or
xchg
and
pushf
cmp
aad
mov
mov
add
inc
movs
mov
push
outs
loop
inc
in
mov
xor
or
push
mov
push
rol
in
inc
je
push
outs
sbb
mov
mov
or
lds
or
push
adc
dec
push
aad
inc
or
pop
or
in
cmc
fs
adc
xchg
lods
repz
pusha
(bad)
or
std
ja
add
add
dec
sbb
add
adc
enter
and
stos
dec
push
mov
shr
rol
jbe
retf
sub
jmp
add
push
cmps
in
pop
sbb
sbb
push
icebp
or
pop
fsub
xor
and
inc
in
repz
push
test
inc
das
sub
xchg
nop
stc
mov
push
sbb
add
push
xchg
movs
sbb
sub
call
sub
pop
(bad)
push
or
into
popa
loopne
push
rcl
sub
das
push
and
call
daa
push
adc
xor
jnp
call
xchg
push
mov
xchg
cmps
fdiv
les
and
push
mov
dec
push
dec
push
das
add
stos
add
pop
and
ds
inc
add
add
cmp
call
pop
ds
and
or
add
jb
in
dec
adc
push
out
repz
(bad)
add
xor
mov
add
sub
sbb
cmp
js
add
inc
retf
xor
out
push
sub
in
push
xor
mov
(bad)
push
ret
out
cmps
(bad)
pop
cmc
fsub
inc
sbb
or
xchg
push
les
jl
push
imul
pop
clc
cwde
xor
add
xor
aas
mov
or
dec
aam
les
call
jo
fucomp
icebp
xor
dec
mov
push
xchg
dec
adc
xlat
dec
adc
mov
sub
lods
or
sbb
push
ss
shl
movs
imul
cmp
imul
repz
adc
push
cmp
adc
or
inc
jo
popa
stos
xchg
(bad)
adc
xor
push
jmp
movs
push
jg
sahf
es
dec
or
dec
fs
adc
xor
and
or
push
lahf
jns
cmp
mov
push
xchg
and
mov
mov
mov
(bad)
pop
inc
(bad)
and
pop
xchg
jge
sti
call
lahf
ds
cld
sbb
sub
icebp
test
stos
dec
push
pop
or
pop
mov
rcr
push
pop
jmp
jnp
sub
pop
xchg
xchg
mov
cmps
dec
push
mul
push
daa
aaa
movs
fcomp
push
fild
lahf
loopne
add
pop
fs
jle
rol
or
dec
mov
mov
aas
pop
js
adc
lea
mov
jge
xor
push
movs
xor
lods
xor
mov
cdq
and
retf
xchg
xchg
xchg
inc
inc
inc
ss
fdiv
mov
cmp
loopne
pop
add
dec
loope
aad
nop
mov
mov
or
pop
push
das
(bad)
(bad)
repnz
in
nop
add
int3
cmps
mov
pop
add
inc
jp
push
gs
push
inc
movs
xchg
sub
sub
pop
push
inc
leave
je
shl
pop
ss
fadd
(bad)
adc
mov
sahf
mov
or
sti
ds
sub
dec
sahf
ror
mov
imul
repz
inc
xor
hlt
jo
scas
xor
aaa
divps
inc
add
mov
xor
dec
cmp
hlt
mov
push
es
dec
fwait
inc
test
out
inc
add
inc
cmps
pop
pop
sbb
adc
jae
nop
cmp
sbb
mov
xor
loopne
mov
(bad)
or
fadd
or
adc
xchg
jl
add
adc
pop
ror
and
cmp
data16
add
rol
sahf
push
sub
popf
xchg
rcl
out
adc
push
and
or
xor
scas
jge
cmp
adc
xor
and
in
inc
jne
cmps
and
repnz
xchg
xchg
jp
sbb
mov
jge
cmc
add
iret
sub
call
pop
mov
es
cmp
or
cmc
add
(bad)
cmp
ret
cmp
sti
and
test
stos
or
les
fisubr
mov
inc
and
lahf
push
jmp
or
push
pop
jb
(bad)
mov
mov
xor
adc
in
xor
mov
or
push
aas
pop
sbb
add
test
sbb
jp
cmp
mov
in
adc
fwait
cwde
cmp
lock
out
sar
int
(bad)
sti
or
inc
loope
sar
sbb
and
ret
ret
push
sbb
out
push
loopne
jmp
std
and
adc
aad
jmp
cmps
inc
(bad)
xor
or
add
imul
adc
pop
inc
daa
pushf
pop
cmp
stos
call
or
push
xchg
jae
jnp
xor
sub
add
xor
mov
mov
inc
and
pop
fdivr
xor
ja
mov
adc
jno
sub
sbb
fistp
jle
lods
sbb
cli
or
pop
pop
push
jbe
pusha
sbb
push
call
(bad)
ss
adc
xor
fcom
test
pop
fsub
add
add
or
xchg
jnp
push
sub
or
jno
(bad)
push
das
and
and
stos
and
mov
mov
adc
sub
mov
xchg
push
sbb
xchg
xor
or
(bad)
rdmsr
addr16
lods
mov
mov
cmps
repnz
out
pop
jmp
int
in
(bad)
loope
mov
lods
dec
mov
inc
lock
dec
cdq
push
mov
pushf
cmp
pop
mov
lods
and
add
cmp
inc
popa
hlt
imul
je
push
data16
pop
add
and
test
cmp
or
(bad)
leave
nop
lock
aas
inc
and
or
daa
sub
out
in
push
xor
outs
push
retf
cmp
je
out
push
mov
sbb
jo
and
test
dec
mov
outs
inc
dec
jns
dec
adc
push
or
fdivrp
and
retf
mov
and
push
sti
das
dec
dec
push
repnz
pop
je
sub
in
push
mov
lahf
pop
and
and
pop
movs
dec
mov
outs
jnp
cmps
movs
sar
sahf
aam
and
cld
jns
jp
or
icebp
cmp
adc
loope
add
call
rcl
pop
mov
push
rcr
add
push
cmp
dec
movs
push
outs
sti
xor
je
mov
cmp
nop
cmc
xchg
push
data16
and
fdiv
or
jp
cld
fld
(bad)
mov
jo
test
or
inc
lea
ror
fdiv
mov
or
popf
inc
std
mov
pop
enter
xchg
inc
outs
pop
adc
stos
cdq
push
jb
or
ret
and
xor
sub
sbb
retf
adc
or
outs
dec
or
je
adc
std
inc
push
into
jl
int
sbb
lahf
jne
imul
sbb
and
cmp
imul
add
adc
fldenv
xor
add
sub
mov
out
outs
xchg
dec
adc
dec
xor
push
push
data16
adc
xchg
xchg
and
xchg
cmp
xor
pop
sub
jle
inc
push
mov
fwait
retf
sbb
inc
fwait
jle
inc
and
sub
jecxz
imul
mov
fs
inc
dec
fs
data16
add
jmp
push
push
or
dec
jmp
push
sbb
fnstcw
mov
sar
nop
mov
xor
xor
fwait
in
je
push
fild
sbb
js
into
repz
movs
pusha
or
or
lahf
dec
sub
jne
push
stos
lea
mov
test
push
jp
mov
mov
push
dec
or
sbb
sbb
and
pop
adc
and
xchg
cmps
push
dec
adc
push
mov
push
sub
add
pushf
retf
mov
jbe
int3
add
inc
lods
sbb
addr16
movs
movs
(bad)
push
sbb
shr
movs
jb
add
mov
popa
lea
scas
test
pop
push
ffreep
int3
adc
pushf
jo
outs
jmp
arpl
mov
and
loop
sub
push
dec
leave
or
fdivr
or
jg
pusha
and
sub
hlt
and
mov
in
or
ret
in
add
add
inc
in
cs
int
push
xchg
call
jne
stos
in
and
dec
jae
dec
pop
in
push
test
test
or
cmp
xchg
mov
call
add
mov
xchg
loopne
loop
outs
leave
pop
sar
jb
xchg
pand
inc
jne
cmc
add
or
js
pop
imul
jl
cdq
std
or
push
sbb
popf
add
sub
shl
js
adc
mov
or
fs
push
int3
push
jne
sbb
pop
lock
cmp
fs
xlat
aaa
add
sti
retf
loopne
and
dec
add
pop
in
int3
les
or
shl
mov
rcr
add
add
movs
push
xor
sbb
call
mov
mov
loopne
dec
imul
jno
stos
add
loopne
shl
jno
sub
scas
or
add
xor
ja
in
loope
lea
pop
xor
push
xchg
add
mov
sbb
add
jb
mov
aaa
push
sub
mov
leave
jae
push
jl
call
dec
or
pop
pop
outs
add
push
mov
add
mov
inc
sbb
add
test
or
pop
and
scas
mov
add
xchg
arpl
add
add
clc
push
add
shl
sub
jae
jb
jns
lahf
ja
xchg
fld
xchg
leave
sti
test
js
dec
sub
push
and
or
jmp
out
pop
jne
mov
into
in
and
movs
mov
outs
mov
jge
adc
sbb
imul
mov
jo
fwait
inc
lods
add
mov
and
mov
push
shr
sbb
jns
inc
mov
daa
clc
inc
lock
xlat
sub
jge
adc
scas
push
push
sub
and
pop
cmp
and
pop
push
sub
xchg
mov
aam
loopne
mov
and
daa
adc
xchg
pop
and
pop
adc
adc
push
ja
jbe
mov
pop
imul
bound
or
xchg
push
sbb
cmps
adc
add
push
sub
sub
mov
test
cmps
cmp
pop
dec
lock
xchg
jge
lock
fs
add
das
and
or
mov
push
(bad)
std
in
adc
mov
cmp
jbe
add
xor
push
leave
push
xor
jns
xor
xchg
and
or
ret
sub
adc
add
cwde
inc
lock
mov
and
dec
dec
in
mov
sbb
cld
inc
sbb
mov
sbb
sbb
xchg
clc
adc
nop
push
or
dec
add
adc
jne
test
push
test
push
sub
jo
jae
sub
add
mov
cmp
push
cmp
sbb
mov
jmp
mov
arpl
jo
push
mov
fld
xchg
jno
dec
or
sub
fsub
pop
test
stos
mov
cmps
xor
das
test
sub
gs
(bad)
mov
inc
pop
fild
fs
or
jge
repz
lock
sub
mov
add
or
in
adc
das
push
mov
inc
enter
push
cvtpi2ps
movs
mov
push
mov
adc
sub
xor
adc
(bad)
das
fisttp
and
cld
into
inc
and
mov
jno
sub
pop
inc
fstp
shr
imul
sub
jnp
or
jae
cs
fdiv
jb
pop
xor
sbb
std
xchg
jno
shr
sbb
or
and
xchg
repnz
jle
cld
adc
mov
push
clc
sub
push
sub
shl
push
(bad)
iret
loopne
jo
push
inc
push
cmp
push
push
loopne
inc
xor
mov
in
mov
rol
push
repnz
popf
stos
add
add
icebp
mov
jl
push
int
push
mov
push
lea
adc
leave
mov
rcl
loop
cmp
pop
sbb
xor
xchg
and
adc
cmp
(bad)
pusha
lods
fdiv
add
mov
clc
jmp
sbb
sbb
sub
adc
imul
inc
jecxz
loopne
iret
sbb
dec
mov
dec
xor
xchg
(bad)
outs
arpl
stos
xor
imul
push
dec
stos
ficomp
imul
push
lock
dec
loop
sbb
inc
(bad)
test
je
es
loope
or
pop
test
fnstsw
scas
adc
and
jne
dec
xchg
cmps
push
pop
or
retf
imul
or
(bad)
push
push
imul
test
mov
sub
push
mov
xor
and
imul
sbb
jne
cmp
xor
or
mov
pushw
xor
push
adc
add
cmp
js
or
sub
aaa
dec
ret
mov
adc
cmp
aaa
mov
aaa
and
cdq
sbb
or
xor
or
or
jge
add
pop
xchg
mov
push
cs
sub
pop
push
and
and
cli
fdivr
xchg
(bad)
pop
sub
fisttp
cmp
hlt
jno
push
clc
test
cmp
pop
rcr
jmp
dec
not
jns
icebp
aam
add
xchg
mov
or
add
xchg
push
sar
dec
rcl
push
add
sbb
daa
lods
adc
push
fadd
pusha
mov
add
test
cmp
mov
pop
push
lea
or
ja
fsubr
shl
sub
or
mov
adc
xor
xlat
popf
mov
stos
jl
push
clc
shl
dec
call
ss
cmc
cmp
adc
data16
sub
aas
push
mov
ins
sahf
inc
pop
add
or
mov
push
das
jae
lea
or
push
test
cmp
jb
cmp
int
aad
dec
push
je
cmp
xor
iret
das
movs
mov
add
sti
mov
inc
sbb
cmp
js
jne
cli
mov
pop
ins
add
lsl
inc
xor
pop
add
push
pop
xchg
mov
add
inc
push
inc
inc
sti
jl
fstp
mov
test
addr16
sbb
ss
imul
or
ret
mov
adc
dec
or
push
dec
jnp
xor
xchg
sub
shr
not
(bad)
lods
mov
test
out
adc
push
es
pop
sbb
das
xor
push
icebp
inc
test
dec
xchg
test
aas
sub
or
and
aam
or
inc
xchg
das
das
das
xor
xor
cmp
cmps
inc
popf
xchg
xchg
xchg
and
cmp
dec
lods
imul
push
add
test
add
xor
mov
mov
inc
add
(bad)
sub
jae
sub
inc
mov
test
outs
and
dec
jno
jne
jecxz
cmp
bound
bound
les
pop
xor
pushf
xor
movs
sbb
jmp
adc
popf
sbb
add
mov
push
mov
pop
es
xor
jns
jmp
iret
inc
adc
adc
and
dec
inc
cmp
pop
shr
jl
pushf
sub
add
sbb
push
sub
and
or
dec
loopne
inc
in
test
mov
pop
arpl
dec
cmp
add
leave
cmp
push
mov
add
sbb
inc
retf
cwde
add
jno
adc
cmp
xor
pop
push
mov
inc
mov
xchg
aaa
sub
and
xchg
xor
jle
loop
pop
aam
sub
xchg
sbb
mov
aam
xchg
xor
test
and
add
sub
movs
jno
pop
cmp
test
ret
lea
repz
or
call
sub
or
sbb
cmp
jae
pop
js
add
call
inc
pushf
jae
sbb
and
jg
dec
jnp
and
jne
push
push
daa
(bad)
jae
push
push
mov
cmps
xlat
push
and
jmp
icebp
push
push
mov
cli
pop
loopne
adc
mov
imul
je
xor
das
in
sub
sub
popa
pop
adc
and
pop
adc
sbb
(bad)
aas
mov
push
mov
or
data16
es
mov
push
adc
xor
sti
and
scas
push
test
jno
dec
cmp
jb
lock
and
or
mov
dec
shl
push
iret
test
in
test
shl
pop
mov
mov
push
push
push
popa
mov
and
add
popf
inc
pop
sbb
rcr
push
sbb
sub
or
adc
fmul
push
xchg
cdq
imul
jecxz
dec
mov
push
dec
push
inc
jecxz
call
gs
jmp
xor
adc
pop
jl
cmp
lea
cmp
push
in
xor
bound
and
mov
adc
mov
add
loopne
add
inc
ret
pushf
jo
rol
push
add
add
dec
sbb
sbb
mov
inc
inc
and
sar
dec
jne
call
mov
mov
pop
sbb
jmp
loope
sbb
loop
les
and
js
mov
cmp
sbb
cmp
push
ss
inc
pop
hlt
adc
in
add
xchg
xchg
adc
ret
(bad)
sti
sub
loop
fistp
in
pop
adc
arpl
mov
ret
add
push
and
add
in
sbb
inc
push
and
push
jg
inc
adc
fs
push
dec
pop
call
mov
data16
movs
or
test
mov
cmc
jp
mov
jle
pop
or
cmp
int3
out
dec
loopne
cmp
sti
xor
adc
or
or
push
mov
(bad)
cli
sub
sar
aam
jp
ja
or
add
rcr
ret
sbb
mov
imul
sub
jecxz
pusha
xor
in
jbe
sbb
jb
jo
mov
popf
add
xchg
mov
inc
or
ret
push
dec
add
push
mov
sahf
and
push
mov
fisttp
push
xchg
hlt
dec
mov
ror
sahf
call
dec
jne
push
xchg
inc
xor
loope
add
ret
sbb
shr
and
mov
and
jl
sbb
mov
or
mov
mov
push
jmp
std
lods
sub
rol
pop
or
mov
jl
jno
push
dec
xchg
fs
mov
mov
jle
dec
sub
sub
adc
adc
inc
mov
xchg
jne
pushf
sbb
jl
ret
outs
loope
inc
inc
in
push
or
pushf
dec
or
sub
add
aad
fwait
add
jmp
(bad)
imul
pop
dec
ss
mov
stc
or
push
js
jne
sub
outs
sar
sbb
pop
bound
push
sub
adc
mov
jb
jae
sbb
sbb
push
add
mov
dec
hlt
jae
and
xchg
push
mov
jg
fidiv
or
ret
dec
mov
mov
lea
add
push
lahf
and
mov
push
dec
push
inc
cli
sub
enter
loop
or
int
push
in
cmp
adc
pop
dec
mov
(bad)
rcr
cdq
test
cmp
mov
(bad)
aam
add
mov
pop
and
jne
xchg
dec
enter
sbb
jmp
or
sbb
push
mov
(bad)
cli
sysexit
std
mov
in
jecxz
jne
fdiv
xor
fs
lds
cld
shr
shr
or
or
push
inc
shl
sar
xor
sbb
loopne
push
push
push
xor
push
test
or
nop
sar
push
(bad)
clc
ret
sub
jp
adc
in
nop
scas
mov
or
cmp
rcr
mov
pusha
xchg
and
arpl
cmp
nop
and
or
dec
outs
xchg
inc
or
fstp
adc
or
mov
mov
(bad)
xchg
arpl
stc
mov
mov
cmp
jb
mov
adc
and
xchg
cmp
pop
add
xlat
pop
add
in
or
cmps
into
retf
or
ja
inc
das
lods
adc
pop
mov
or
sub
inc
lods
fcmovnu
xchg
pushf
je
and
cmp
ret
inc
loope
rcl
or
and
data16
add
or
push
inc
call
xor
add
push
fisttp
dec
dec
and
inc
jae
rcr
mov
aas
and
lahf
and
nop
add
aam
lock
nop
add
mov
and
nop
add
int3
sub
in
add
jo
add
nop
sub
hlt
cs
rcl
dec
or
and
pop
lods
mov
cmp
pop
and
mov
cmp
inc
push
sbb
and
xor
jne
sub
pop
jne
cmp
pop
mov
mov
lahf
jmp
test
cmp
cmp
xchg
or
in
ror
pop
add
in
dec
(bad)
jbe
or
sbb
adc
(bad)
into
sub
adc
push
dec
sbb
call
inc
scas
adc
fisubr
pop
mov
and
add
ret
inc
adc
mov
mov
imul
pop
add
mov
inc
sub
fnsave
push
pusha
imul
push
sahf
inc
jae
popa
lock
adc
lds
imul
mov
imul
cmps
cdq
movs
lahf
enter
jo
int3
inc
out
jns
loopne
in
aam
jo
sbb
adc
inc
or
pop
jo
jo
pop
(bad)
(bad)
call
pop
hlt
mov
and
push
(bad)
enter
push
ss
mov
jo
jo
out
out
sbb
pop
xor
sub
(bad)
cmp
sar
rcr
push
mov
pop
add
add
adc
paddw
cld
jne
pop
call
mov
or
inc
dec
add
lock
jno
mov
mov
jne
mov
(bad)
leave
pop
loopne
les
xor
loope
sbb
ret
add
inc
(bad)
lea
ret
js
mov
xchg
clc
or
push
loope
imul
add
sbb
sbb
jge
or
adc
and
and
cmp
xor
cmps
ret
mov
push
mov
inc
test
add
rol
and
cmp
aas
or
je
mov
jge
or
bound
popf
in
stos
pushf
fcom
je
push
cmp
out
out
cmp
test
xor
ins
dec
sub
lds
cmp
adc
scas
cmp
add
mov
mov
adc
inc
mov
test
dec
sbb
fdiv
les
test
pop
fidiv
mov
jge
call
sub
or
add
mov
adc
test
xor
pop
cmp
inc
mov
xchg
lock
dec
pop
inc
push
push
xchg
sub
(bad)
and
ret
ins
mov
inc
sbb
scas
add
dec
sbb
xchg
pop
nop
test
ins
add
ror
lds
cdq
pusha
pusha
jp
mov
add
push
aam
aam
push
or
xchg
add
lock
mov
adc
popf
or
cmps
and
add
cmp
pop
push
jno
mov
out
call
and
call
add
cmp
adc
aam
adc
in
pop
(bad)
mov
jae
sbb
mov
mov
add
les
push
push
and
retf
in
mov
or
loopne
adc
or
inc
xchg
mov
mov
in
cli
aam
add
pop
(bad)
adc
fcomp
cmps
sub
mov
fucomi
jl
mov
push
sub
and
sbb
rol
push
xchg
cwde
dec
ret
or
inc
sbb
jb
or
sti
mov
pop
clc
jl
mov
adc
adc
fidiv
adc
mov
cli
lahf
inc
outs
xor
xor
push
inc
js
mov
cdq
clc
mov
adc
add
nop
cs
retf
cmp
adc
dec
push
push
jmp
pop
pusha
inc
lods
mov
call
inc
mov
sub
jno
add
inc
xor
pusha
or
loope
test
add
push
xor
retf
lds
loop
mov
nop
cld
pop
and
lea
sbb
xor
fisubr
stos
(bad)
xchg
pop
push
push
mov
adc
fstp
lea
push
cmp
and
stos
mov
add
imul
lods
arpl
dec
push
and
mov
fdiv
je
pop
cmp
push
push
call
push
rol
xchg
push
es
push
(bad)
call
fs
les
into
fs
add
(bad)
cdq
push
or
mov
xchg
nop
sub
mov
mov
aaa
xchg
mov
push
ins
add
push
add
xchg
sub
xchg
pushf
pop
mov
push
sub
or
iret
xchg
xchg
or
test
pop
or
lock
push
cmp
loopne
call
ret
rcr
and
xor
cmp
push
push
pop
inc
pop
shl
xor
mov
pop
pusha
add
pop
jmp
ror
mov
fcmovu
dec
movs
aam
and
push
add
imul
push
ins
push
push
lea
test
or
mov
leave
xor
mov
dec
and
push
fisubr
mov
pop
int3
sub
jbe
xor
fnstsw
shl
xor
sub
inc
or
ror
adc
movs
push
lea
pusha
mov
out
loope
in
shr
or
sbb
ror
inc
pusha
push
push
fadd
out
cmp
cmc
loope
jbe
mov
movs
cmps
fcomp
movs
cs
jno
inc
outs
sbb
inc
push
stos
mov
sti
push
sahf
dec
in
cmp
arpl
scas
ja
xchg
pop
push
push
dec
loopne
cmp
jbe
jne
xchg
pop
push
sbb
into
pop
mov
fs
pop
xor
push
loop
test
(bad)
mov
pusha
sbb
xor
jne
fwait
jp
das
and
push
mov
adc
xchg
jmp
add
fadd
movs
sbb
push
sub
lahf
add
enter
sub
(bad)
push
jge
and
sbb
icebp
jne
adc
and
cmp
mov
adc
int3
je
adc
ins
xchg
add
inc
aaa
xchg
cwde
push
ficom
test
dec
stos
scas
dec
movs
jo
lea
stos
jne
pop
test
mov
xchg
sbb
and
cmp
js
loopne
movs
scas
inc
cwde
adc
fs
stc
cmps
stos
adc
adc
(bad)
add
repz
pop
add
adc
jnp
add
dec
jmp
aam
lods
jl
push
add
xor
test
adc
inc
mov
(bad)
jne
stos
ins
mov
dec
sbb
mov
xchg
or
push
cmp
int
jae
or
rcl
push
sub
mov
pop
mov
sbb
add
xchg
inc
mov
cmp
popf
(bad)
imul
xor
push
jle
dec
mov
add
repnz
sar
push
add
ror
inc
and
in
sbb
xlat
and
mov
mov
push
jnp
add
mov
xchg
mov
les
pusha
rcl
fnsave
test
cmp
jb
dec
fs
lock
popa
mov
mov
in
hlt
(bad)
dec
in
adc
mov
xor
cmc
(bad)
ins
inc
pop
xor
xchg
fwait
inc
sub
leave
push
ret
ss
sub
mov
sahf
cs
scas
data16
pushf
stos
jno
test
adc
pop
xchg
mov
dec
xchg
retf
fadd
pop
cmp
inc
mov
rcr
in
adc
ss
call
add
pop
push
pop
inc
(bad)
sbb
fdivrp
xchg
xchg
dec
push
push
not
icebp
or
xor
push
clc
and
aad
inc
push
clc
xor
rol
loop
das
inc
cmp
cmp
dec
nop
push
push
xor
shr
or
push
retf
rcl
repnz
mov
or
repnz
sbb
enter
or
rol
pop
fadd
jo
(bad)
cmp
inc
adc
imul
or
xchg
lock
mov
aas
push
rcl
adc
je
cmp
jne
push
pop
sub
ins
xchg
loopne
push
jne
retf
xlat
adc
test
mov
nop
push
and
xchg
xchg
cwde
pushf
imul
push
call
and
sar
mov
mov
shr
scas
mov
sub
or
pop
test
inc
mov
sti
cs
xchg
mov
sub
xchg
and
xchg
ja
movs
rcr
fldenv
mov
inc
adc
push
aad
fcomp
or
cmp
scas
icebp
jo
enter
mov
mov
inc
xchg
stos
cmp
dec
adc
in
mov
into
(bad)
jle
push
jge
mov
push
js
jae
aam
(bad)
or
lea
rol
scas
jge
dec
mov
mov
cmps
add
sub
xor
push
cmp
mov
dec
mov
jmp
push
fwait
jae
jne
or
mov
sub
add
cmp
mov
cmp
mov
jmp
dec
sbb
dec
mov
mov
lahf
int
sub
pop
or
stos
aas
pop
xchg
and
pop
add
fimul
loope
adc
dec
pusha
std
push
cmp
in
cmp
push
lods
sub
or
cmp
inc
addr16
test
inc
clc
adc
jb
mov
push
js
pop
pop
stos
jne
mov
es
cmp
push
pop
cmps
rol
push
push
push
jns
dec
fdivr
cmp
push
push
repz
pop
xor
mov
mov
pop
cmp
inc
je
shl
add
xchg
loopne
add
jmp
lahf
mov
nop
das
inc
imul
jb
or
cmp
add
movs
ins
xlat
mov
push
xor
xlat
xchg
cmp
adc
or
cmps
mov
mov
sbb
loope
jo
jbe
push
jo
push
test
add
inc
(bad)
div
fldcw
mov
push
outs
add
retf
stc
xchg
popf
sbb
enter
jne
or
jne
mov
push
fnsave
test
ja
cdq
sub
mov
add
jo
dec
and
dec
sbb
inc
hlt
lea
mov
push
jo
aaa
pop
inc
or
mov
jl
shr
xchg
sbb
call
cmp
enter
xor
add
dec
fwait
or
sbb
sbb
jge
leave
enter
in
repz
or
test
dec
repnz
xchg
aam
pop
fsubr
push
pushf
int
and
push
mov
out
outs
mov
(bad)
push
sahf
or
and
add
or
inc
adc
jae
stos
push
das
push
add
push
loope
mov
dec
pop
fsub
hlt
add
jo
popa
loope
clc
mov
hlt
lock
sbb
add
push
inc
aam
ret
hlt
cmp
mov
xchg
push
adc
or
stc
pcmpeqw
cmp
adc
add
cmp
aad
lea
es
mov
ret
fs
sbb
inc
fwait
paddusb
sbb
bound
or
cmp
push
pusha
sbb
aam
and
test
mov
mov
loopne
pop
sub
jl
and
push
(bad)
or
int3
mov
jae
ds
cmp
push
test
inc
jb
mov
xchg
or
call
shr
push
add
sub
in
add
pop
xor
jge
sbb
pusha
and
inc
fdiv
pop
mov
(bad)
fsubr
lock
inc
popa
push
inc
add
lods
out
pop
cmp
loopne
test
(bad)
push
or
xor
jne
fmul
fdiv
dec
lods
add
mov
sbb
xchg
retf
sbb
loopne
add
cmps
dec
cmp
mov
add
cdq
pusha
add
pop
cld
adc
not
add
add
mov
xor
pop
mov
add
sub
adc
mov
sub
push
fwait
mov
loopne
cmp
jmp
in
or
inc
push
add
pop
cmps
jb
popf
mov
adc
mov
or
dec
mov
push
fadd
(bad)
sbb
lods
adc
mov
add
lahf
mov
mov
shl
and
xchg
rcl
cmp
movs
test
rcl
cmps
ss
pop
sub
pusha
mov
aaa
add
daa
xlat
jmp
outs
lock
cmp
adc
outs
mov
repz
test
js
cmps
or
push
call
add
xchg
dec
cmp
(bad)
inc
hlt
push
mov
hlt
mov
push
sar
or
jne
push
das
aas
in
test
cmp
xor
neg
pop
std
stos
xor
jp
jp
je
and
adc
inc
ja
je
data16
sub
xchg
pop
dec
fimul
mov
fist
mov
ja
sub
cmp
jg
outs
adc
int
sub
cmp
or
outs
add
inc
sub
jge
push
jle
cmp
jns
xchg
(bad)
push
ficomp
(bad)
jp
outs
and
mov
bound
sbb
mov
arpl
pusha
xor
inc
(bad)
(bad)
fisttp
jb
jmp
div
jge
cmps
dec
cmp
cmp
xor
mov
sbb
xor
mov
inc
inc
jmp
inc
jo
add
(bad)
addr16
and
or
cld
lock
mov
add
ret
xchg
and
movs
push
or
cmp
xlat
dec
cmp
adc
mov
ds
jmp
pop
cmps
xchg
add
mov
mov
adc
pop
push
ins
pop
pop
sbb
fcomp
push
pop
dec
seta
jle
mov
mov
js
test
mov
sbb
and
and
adc
push
mov
scas
add
shr
cmp
jp
add
fdiv
retf
xchg
retf
mov
xchg
les
aam
in
add
jl
fldcw
adc
add
mov
add
stos
cmp
sbb
jo
jl
push
inc
movs
adc
mov
add
stos
pop
push
push
dec
stos
nop
jg
mov
movs
in
jns
adc
test
add
mov
adc
push
in
and
jl
rol
push
imul
xchg
popa
aaa
imul
and
enter
or
or
popa
add
jo
push
or
jae
push
mov
out
or
and
dec
cmp
loop
push
(bad)
(bad)
div
jo
cdq
rcl
xchg
(bad)
pop
add
ins
xchg
jb
sbb
adc
fs
nop
(bad)
mov
xchg
call
(bad)
cdq
xchg
lods
movd
arpl
cmp
lea
test
icebp
test
jge
cmp
mov
fld
call
and
pop
outs
push
xchg
jmp
(bad)
pop
and
adc
cmp
mov
push
or
shl
and
mov
pusha
loope
outs
push
pop
or
jge
scas
push
cmp
lea
cmp
mov
jo
or
adc
and
hlt
cmp
push
sbb
add
jo
dec
or
fwait
(bad)
mov
add
dec
and
xor
jge
nop
or
cwde
add
push
cmps
fistp
lods
xor
repz
cwde
ror
jge
dec
push
popa
mov
mov
xor
sub
push
into
dec
cmc
mov
adc
sti
in
lea
push
push
and
add
and
mov
lds
sti
dec
or
inc
cmp
inc
adc
je
cdq
mov
push
cmp
inc
mov
or
inc
call
inc
add
xor
inc
in
jmp
scas
enter
mov
add
cmp
push
ret
fldenv
inc
sbb
mov
dec
pop
push
sbb
jle
sar
cmp
sahf
push
call
sbb
cmp
imul
mov
in
fcom
das
mov
xor
jle
add
add
mov
cmp
mov
sub
inc
test
xor
cmp
rol
lds
movs
add
fbstp
rol
shr
add
inc
nop
loopne
fcom
sbb
adc
mov
dec
cmp
out
mov
ret
shr
cmp
jbe
add
jmp
add
push
and
add
outs
add
ret
and
dec
loop
inc
dec
jo
mov
mov
mov
or
inc
shl
mov
cmp
adc
sub
push
cmp
add
dec
mov
push
sbb
pop
push
in
lods
mov
test
xor
ds
loopne
ins
fimul
add
inc
adc
call
mov
gs
rcl
add
popa
and
imul
or
sbb
aad
push
or
push
and
mov
jl
cmps
inc
fwait
add
sbb
xor
add
mov
sti
xor
or
jmp
mov
fdiv
xor
rcl
sub
call
jb
push
add
addr16
xor
sub
pop
sbb
jbe
cwde
arpl
xchg
outs
xor
push
dec
sub
xlat
adc
fsub
je
leave
mov
pusha
call
into
ror
sbb
add
lea
xchg
scas
cmp
sbb
pop
in
inc
adc
lods
es
xor
test
cmp
push
in
jno
imul
cwde
pusha
add
jmp
into
shr
push
inc
adc
inc
call
inc
inc
scas
xchg
push
or
push
sbb
xchg
xchg
cmp
les
repnz
in
add
cmp
pop
mov
dec
add
scas
mov
dec
pop
call
nop
inc
mov
push
mov
sub
add
mul
jmp
mov
inc
dec
loopne
test
imul
push
push
add
add
js
xor
or
mov
jmp
ins
and
movs
out
or
xor
xor
push
movs
dec
add
inc
mov
fnsave
and
repz
dec
xor
dec
pop
fs
ss
cmp
push
stos
or
push
cmp
sub
femms
popa
pop
enter
xchg
mov
popa
mov
fdiv
adc
push
fs
adc
jmp
sub
or
push
sub
imul
lods
repnz
inc
jns
fcom
ss
jl
(bad)
mov
xor
push
dec
xchg
int
push
pop
(bad)
cmp
cmps
repnz
mov
adc
xor
js
inc
add
cmp
mov
mov
push
test
pop
pop
xchg
lods
inc
push
rol
xchg
test
in
adc
jg
popf
clc
fsubr
mov
fistp
pop
loopne
pop
cmp
add
xchg
movs
mov
mov
inc
fsubr
(bad)
inc
das
aam
ins
sub
cs
adc
retf
loope
sbb
scas
jne
cmps
(bad)
jb
rol
inc
(bad)
inc
fild
mov
ja
adc
mov
and
rcl
inc
or
js
sub
and
push
xor
cld
xchg
adc
sub
or
stos
or
es
push
pop
xor
pop
pop
aas
rep
mov
cmp
sub
neg
and
inc
xor
pusha
cwde
es
or
jno
push
xor
outs
or
push
clc
adc
sub
push
je
push
jecxz
sahf
movs
mov
sub
xor
mov
imul
push
jno
push
ret
shl
inc
jle
lea
adc
or
adc
xchg
repz
xor
aam
sub
mov
outs
push
add
xchg
pusha
dec
and
mov
jnp
imul
hlt
or
or
dec
movs
inc
cmps
xor
popa
clc
jbe
mov
xchg
fmul
add
jnp
cmp
or
fsubr
jne
jmp
mov
pop
ret
retf
xor
add
lds
ffreep
xchg
cmp
rcr
enter
and
cli
push
aaa
mov
jmp
pop
dec
xchg
sahf
xor
cmp
(bad)
jmp
or
pop
mov
pop
add
xor
outs
ja
pop
mov
test
loopne
add
stos
(bad)
jo
mov
inc
and
mov
dec
inc
xor
outs
mov
iret
bnd
arpl
add
add
mov
and
or
push
mov
adc
dec
mov
dec
rcl
dec
xor
arpl
loop
sbb
inc
sub
repnz
ins
add
jecxz
xchg
test
arpl
dec
sahf
sbb
retf
adc
shl
adc
leave
adc
rol
nop
lock
ror
repnz
push
cmp
mov
popa
pop
and
cmp
sbb
pop
imul
jmp
mov
(bad)
in
mov
scas
test
loopne
(bad)
push
cmp
jp
lea
gs
adc
adc
cmps
xor
and
adc
sbb
push
ins
in
or
hlt
jecxz
lea
add
add
add
sub
mov
dec
cmp
rol
punpckhdq
xchg
sbb
jne
les
repz
jns
pop
pop
or
jecxz
test
loopne
inc
fstp
cmp
jl
or
mov
and
test
inc
dec
icebp
sbb
add
sbb
rcl
scas
inc
inc
pop
cmp
aam
inc
(bad)
mov
retf
inc
mov
mov
sub
sti
push
jl
push
xchg
mov
add
ret
jle
push
outs
pop
jnp
adc
aaa
loopne
movs
push
call
ins
cli
dec
xchg
jno
jle
push
pop
xchg
mov
aaa
push
jne
push
cmps
cmp
dec
jbe
push
cmp
mov
push
mov
mov
mov
ret
addr16
inc
pop
cmp
shr
pop
xor
pop
pusha
xor
arpl
retf
and
add
pop
mov
and
sub
outs
mov
popa
sbb
add
movs
jecxz
(bad)
pop
mov
push
inc
test
xor
js
ins
mov
jecxz
pop
mov
(bad)
sbb
jl
push
mov
and
cmp
xor
mov
pusha
and
rcr
adc
ss
or
or
inc
or
loop
inc
popa
and
and
add
pop
mov
and
lea
js
not
sbb
int3
add
add
xchg
mov
jo
inc
test
xor
mov
cwde
aaa
lods
jns
adc
test
mov
pop
or
pop
dec
cs
or
adc
fldcw
nop
add
sub
movs
jl
jns
lods
mov
mov
mov
xor
dec
shl
jmp
sbb
stc
cmp
loop
adc
lea
retf
pusha
sub
mov
add
xor
push
or
push
mov
mov
mov
ja
mov
add
mov
lods
sbb
sbb
adc
sbb
or
sbb
fbld
ins
test
and
xor
test
in
sub
jl
movs
xor
adc
sbb
fadd
or
popf
add
cdq
nop
or
js
mov
mov
test
cwde
loop
mov
add
shl
jbe
mov
mov
into
cmc
fld
xor
and
lods
fmul
mov
in
push
cmp
inc
pusha
push
xchg
test
loope
ret
and
jge
dec
fisttp
fdiv
stos
ret
lock
and
jne
push
mov
(bad)
xor
(bad)
xlat
imul
loope
push
inc
mov
es
call
add
pop
les
and
mov
aaa
imul
inc
and
add
sbb
lock
rcr
mov
aaa
(bad)
adc
aaa
cmp
es
shr
and
mov
adc
cwde
mov
cmp
push
(bad)
movs
mov
mov
xor
lods
les
les
fidivr
push
push
pop
lock
retf
loop
mov
dec
enter
(bad)
or
sbb
loopne
add
arpl
imul
clc
push
cs
loopne
jge
jl
cmps
test
push
js
mov
xor
daa
(bad)
lahf
lock
imul
or
push
inc
mov
cs
pop
cmp
push
xlat
push
cmp
inc
(bad)
or
test
mov
pop
rcl
pop
movs
je
jge
mov
adc
or
repz
and
pop
rcr
cli
(bad)
add
(bad)
push
lods
movaps
and
pop
mov
push
xchg
std
or
cmps
mov
ror
adc
adc
mov
mov
mov
sub
mov
pop
ret
gs
fnsave
jecxz
or
jne
ror
inc
rol
imul
or
or
aas
loopne
push
scas
adc
pop
in
fist
cmp
cmp
jmp
pop
cmp
add
mov
jg
aad
push
cmps
or
dec
push
ds
jl
sub
sbb
ja
pop
retf
pusha
or
add
cdq
and
adc
xor
mov
push
add
jo
stos
cmps
add
and
leave
jne
mov
test
mov
cmp
mov
in
je
inc
push
inc
add
xchg
and
not
aam
sub
imul
xchg
dec
jge
ds
shr
pop
(bad)
inc
std
mov
mov
call
add
repz
ss
mov
jl
inc
(bad)
push
and
sbb
cmp
mov
xchg
cmc
pop
mov
or
add
aam
mov
aam
mov
enter
jp
out
icebp
lock
out
movs
xor
test
pop
mov
movs
push
push
movs
inc
fadd
fld
dec
push
clc
push
fcomp
fnstsw
std
mov
pushf
fld
pop
fsubr
pop
faddp
and
xchg
mov
fstp
fist
or
ins
inc
push
dec
mov
cs
popf
sub
retf
mov
inc
loopne
fs
xchg
lods
push
mov
inc
enter
into
push
add
std
sbb
dec
aam
sub
or
fstp
loop
es
pop
frstor
in
push
adc
sub
(bad)
pop
cdq
mov
dec
inc
add
cmp
sub
sub
pusha
jnp
push
mov
or
ins
xchg
push
and
adc
jmp
add
jmp
dec
adc
pop
(bad)
push
inc
imul
pshufw
out
dec
cli
mov
movs
push
test
call
inc
int3
dec
sbb
or
lock
push
call
inc
div
jne
pop
in
sub
cmp
add
or
dec
das
pop
dec
push
jmp
mov
cmp
rcl
and
or
rol
loope
bound
mov
mov
rcl
ud0
pop
or
and
xchg
mov
add
jmp
mov
sub
cwde
mov
test
icebp
mov
aam
add
cmp
xor
push
push
mov
mov
pop
lods
sbb
loope
add
shr
into
inc
add
xchg
and
sbb
jbe
dec
jns
mov
mov
stos
adc
je
or
pop
mov
bound
pop
aad
fstp
pop
bound
or
xchg
sub
adc
mov
adc
js
push
inc
test
xor
jo
ja
ror
sbb
jmp
popa
sbb
das
loope
xor
xor
dec
inc
adc
(bad)
shl
jmp
movs
pushf
imul
inc
iret
aad
cli
clc
sbb
xlat
out
ins
or
push
imul
nop
xlat
inc
push
call
mov
in
jno
inc
mov
test
ja
enter
jle
or
mov
push
test
in
(bad)
and
(bad)
xchg
adc
retf
or
inc
loop
lds
push
dec
xor
sub
push
xchg
and
in
lahf
aas
cmp
mov
stos
xor
adc
rcr
xor
or
fisttp
inc
sub
dec
hlt
push
fmul
inc
inc
fnstenv
mov
xlat
in
inc
add
xchg
jg
adc
or
je
or
and
push
adc
cdq
fcom
xor
sub
mov
cmp
pusha
dec
mov
and
xor
ret
push
or
adc
cs
push
sub
mov
mov
or
bound
arpl
inc
jp
cmp
adc
mov
inc
xor
add
lea
sub
adc
inc
sub
bound
inc
sub
adc
rcl
les
sbb
clc
or
rol
hlt
repz
pop
cmp
push
pop
and
lock
sbb
mov
mov
ret
cmp
jge
gs
pop
in
push
hlt
movs
push
lock
inc
cmp
arpl
and
mov
mov
pushaw
mov
mov
out
out
enter
add
pusha
ins
cld
push
mov
jne
add
push
out
inc
push
xor
ss
nop
xchg
jo
in
cmp
shr
xor
push
(bad)
xchg
xchg
or
cs
dec
xchg
mov
movs
jb
and
fsubr
and
or
push
or
push
pop
je
push
lods
jmp
addr16
fcom
mov
add
adc
add
es
push
mov
or
inc
or
mov
cmps
icebp
add
cmp
pop
outs
add
scas
sbb
pop
js
gs
pop
stc
push
or
add
mov
adc
lods
fidivr
ret
jle
mov
adc
call
movs
and
imul
dec
cdq
push
cmp
mov
push
cmp
arpl
dec
xor
popa
js
and
dec
ja
sub
mov
addr16
sub
in
cmp
sub
mov
mov
or
sbb
xchg
adc
outs
adc
or
mov
mov
pop
lods
dec
push
icebp
test
mov
and
test
imul
neg
call
mov
shl
ja
ins
mov
and
cmps
jne
mov
dec
add
jmp
cmp
ret
or
inc
add
(bad)
mov
xor
(bad)
xchg
adc
cmp
inc
pop
(bad)
and
jns
test
fiadd
xlat
jmp
push
and
shl
mov
mov
sub
adc
sahf
mov
sbb
mov
xor
je
loopne
inc
outs
push
ins
adc
or
mov
xchg
add
lods
xor
mov
(bad)
cmp
fwait
jmp
cmp
call
popa
jne
sar
rol
jo
iret
sub
mov
mov
lahf
lock
jnp
test
inc
push
inc
xlat
imul
cmp
mov
aam
lods
dec
push
push
dec
mov
hlt
ret
xchg
xor
xor
aas
pop
xor
sbb
inc
cmp
push
fadd
xchg
out
lock
inc
push
jo
xchg
aas
xor
xchg
push
mov
jne
or
gs
into
lock
(bad)
mov
and
clc
dec
jmp
cmp
ret
pop
or
sahf
mov
adc
xchg
push
paddq
in
out
lock
and
jnp
xchg
jl
mov
mov
mov
(bad)
pop
js
test
dec
leave
lock
and
call
xchg
adc
clc
push
sti
adc
lahf
inc
(bad)
lahf
into
das
in
cld
(bad)
jno
aam
rcl
(bad)
in
sbb
dec
retf
fistp
xor
aam
mov
dec
out
xchg
dec
push
push
ret
push
loope
test
sbb
dec
js
jo
in
mov
cmp
xchg
push
sbb
jbe
jo
in
mov
nop
adc
add
lahf
pop
imul
and
test
sub
lahf
test
enter
jp
add
mov
add
and
fild
add
nop
add
leave
sbb
test
push
stos
lock
jmp
xchg
mov
mov
jb
aad
pop
clc
jl
pushf
mov
shl
sbb
sbb
sub
sbb
loopne
cwde
xchg
out
rol
xchg
dec
leave
loopne
inc
es
inc
push
fwait
sbb
inc
sahf
les
add
push
jb
mov
add
or
test
sti
sbb
cmp
adc
dec
out
std
call
xor
and
jl
inc
jne
sub
loope
movs
mov
aad
ds
jp
inc
xor
mov
data16
pop
cmp
push
sub
stc
cmc
hlt
or
sbb
xchg
cmp
push
adc
dec
push
sub
movs
inc
adc
movs
push
cdq
pop
mov
int
mov
cdq
push
add
fs
jp
popa
inc
ror
out
or
pusha
jecxz
push
clc
stos
mov
push
add
push
hlt
jge
inc
adc
jge
pop
inc
push
sbb
cmp
pop
pop
mov
and
stc
pop
or
cld
shl
pop
inc
dec
sbb
in
mov
enter
sub
inc
xchg
and
fmul
mov
outs
inc
in
in
loopne
sub
out
add
popa
leave
int
add
adc
jns
mov
pop
les
add
jo
and
ror
ins
or
mov
rcl
rcl
inc
xchg
sub
push
out
mov
fld
sbb
mov
ror
push
pop
add
sub
inc
xchg
ss
daa
sbb
nop
idiv
imul
mov
mov
xor
mul
dec
dec
(bad)
cmps
cmp
call
xor
add
lahf
mov
outs
mov
loopne
dec
je
js
lock
sub
fnstenv
loopne
ss
add
or
mov
mov
and
fcom
sub
pop
cs
xor
hlt
pop
inc
xor
cmp
push
fild
cmp
icebp
push
sub
into
jnp
call
push
(bad)
push
inc
adc
cdq
fstp
add
and
dec
sbb
mov
xchg
push
push
ss
aad
sub
jbe
sbb
xchg
sbb
bound
push
fistp
push
inc
or
sub
pop
inc
jmp
adc
data16
push
push
dec
inc
inc
cmp
sbb
loopne
mov
mov
and
mov
push
mov
inc
jg
and
inc
sbb
jns
or
xchg
jge
loop
data16
cmp
mov
and
outs
or
jmp
add
push
add
pop
mov
and
retf
sub
push
xor
xor
inc
pop
add
cmp
or
xor
mov
xor
jns
cmp
inc
inc
dec
push
sbb
or
pop
sub
adc
es
inc
aam
mov
lock
retf
dec
sub
(bad)
repz
sbb
inc
and
xchg
add
or
and
lea
xchg
adc
jbe
pusha
and
dec
mov
jl
(bad)
out
or
fst
ror
adc
inc
mov
test
cmp
dec
push
sar
mov
ror
add
aas
sbb
pop
or
adc
cmp
cmp
xor
fiadd
or
dec
loop
mov
cmp
push
inc
adc
mov
shr
xlat
xor
in
fadd
sub
push
sbb
sbb
xor
xchg
retf
or
iret
into
leave
jo
sbb
xchg
out
sahf
adc
nop
sub
in
push
or
mov
pop
xor
mov
xchg
and
cwde
js
pop
sbb
fdiv
in
sbb
sub
dec
ffree
(bad)
ss
data16
retf
xor
in
sbb
inc
popf
test
fld
push
sub
dec
clc
inc
aaa
add
mov
add
pop
and
mov
sar
add
cmp
add
(bad)
pop
adc
cmp
add
push
inc
push
scas
cmps
push
push
mov
xchg
sbb
popa
(bad)
push
nop
push
push
inc
adc
sub
push
mov
mov
fstp
and
pop
and
mov
dec
(bad)
aad
cmp
sbb
adc
adc
xor
add
push
inc
and
lahf
sbb
sub
pop
(bad)
xchg
test
adc
in
pusha
lea
mov
call
and
and
pop
enter
sub
or
and
scas
enter
jl
xor
retf
into
sub
es
fiadd
fadd
cmp
adc
cmp
pop
mov
sub
dec
push
cmp
es
sbb
jl
shr
aas
scas
dec
mov
enterw
jp
repnz
sbb
std
dec
repnz
pop
mov
push
pop
je
push
mov
cmp
adc
add
jl
jmp
or
sbb
mov
adc
xchg
test
inc
(bad)
and
cmps
loopne
jbe
jne
jns
pop
sbb
mov
push
jmp
push
(bad)
sbb
call
sub
dec
int
clc
lock
stos
xor
pop
imul
jne
jl
(bad)
jnp
les
dec
push
jge
retf
xor
xchg
int3
scas
loop
lea
shl
cs
push
lds
or
push
sub
cs
mov
jmp
mov
sar
jge
clc
and
pop
push
pop
stos
sbb
aas
dec
mov
adc
js
add
mov
(bad)
jne
adc
imul
push
inc
loopne
lock
push
pop
sahf
add
fs
stos
or
(bad)
xor
mov
sub
push
fcmovbe
pop
and
movs
test
pop
dec
pop
movs
push
mov
bound
fwait
cmp
and
sub
inc
inc
add
jge
pop
push
add
push
lods
mov
mov
loopne
jle
push
xor
adc
aaa
iret
inc
add
adc
xchg
leave
out
mov
mov
mov
or
test
retf
enter
sbb
(bad)
mov
push
xor
mov
or
(bad)
fcomp
popa
out
xchg
xchg
sbb
test
lods
dec
inc
push
pusha
shl
imul
outs
shl
pop
adc
or
push
test
(bad)
mov
push
push
cmp
or
data16
jne
xchg
jo
mov
mov
jmp
fld
add
scas
out
call
and
dec
mov
mov
ret
push
or
mov
rol
mov
inc
sbb
cmc
add
xchg
cld
push
out
xor
xor
sbb
fdiv
je
ffree
add
repz
daa
movs
push
sub
mov
in
cmp
dec
stos
jge
jne
push
jmp
cmp
xchg
mov
push
pop
xor
and
pop
add
xor
jmp
or
cmp
mov
inc
push
les
mov
inc
(bad)
push
pusha
pop
adc
and
mov
push
das
push
xchg
stos
mov
in
sbb
popa
cmps
shl
aaa
cmc
mov
cdq
daa
mov
inc
dec
dec
mov
mov
enter
mov
push
pop
jge
(bad)
nop
add
ss
or
jmp
jnp
pusha
sub
cmp
shl
or
int
test
mov
xchg
sub
ret
das
rol
iret
rcr
div
add
shl
mov
jne
xchg
stos
mov
loope
inc
jecxz
pop
pop
or
push
push
adc
shr
adc
lods
cmps
scas
jmp
or
sub
xchg
mov
daa
mov
loopne
rcr
(bad)
push
stos
jmp
or
mov
push
dec
xor
cdq
xor
push
or
pop
xchg
push
sub
icebp
adc
mov
psubusb
ins
popf
sti
add
push
into
stc
stos
push
dec
add
std
stos
(bad)
cmp
mov
scas
xor
shl
stos
movs
int
std
inc
loopne
je
sub
add
fidiv
mov
jne
inc
mov
dec
push
(bad)
ins
(bad)
out
mov
inc
xor
jne
mov
push
test
adc
mov
or
inc
sub
adc
dec
cld
inc
and
iret
jge
pop
out
adc
push
add
push
xlat
inc
pop
lods
or
ficomp
cs
stos
loopne
or
in
adc
loope
inc
sbb
in
adc
dec
fadd
jne
mov
jo
and
sub
xchg
jmp
ja
sbb
jle
(bad)
ja
mov
and
sbb
and
lahf
xchg
inc
or
mov
fimul
ins
bound
add
rol
inc
jno
mov
pop
sub
imul
test
fldl2t
adc
clc
add
je
ror
arpl
cmp
add
adc
rcl
clc
retf
(bad)
sub
push
out
or
pop
mov
jmp
rol
dec
push
jmp
or
adc
adc
(bad)
bound
lods
dec
or
jg
cmp
popf
rol
or
ret
ja
pop
add
ds
mov
mov
fwait
dec
inc
popa
ret
cmp
lahf
add
les
sub
leave
repz
ins
mov
mov
scas
pop
mov
lods
xchg
dec
sti
jmp
xchg
sub
lahf
mov
jmp
lods
push
sub
hlt
jl
push
push
call
sub
mov
mov
inc
and
push
cmps
mov
test
mov
daa
loope
ds
push
hlt
stos
cli
lea
push
sub
mov
mov
dec
push
mov
push
sub
mov
hlt
mov
dec
sar
or
ror
imul
ficom
jecxz
shr
push
mov
ins
cmps
or
mov
fadd
adc
xor
in
cmp
or
mov
shl
cmp
inc
dec
add
inc
imul
push
mov
inc
mov
cwde
and
sub
sbb
push
in
jno
rcr
(bad)
mov
pop
imul
dec
jb
push
push
pop
adc
xchg
cwde
mov
inc
sub
nop
push
add
dec
loop
adc
mov
adc
inc
or
or
neg
mov
cld
dec
sbb
mov
xor
pop
sbb
in
inc
movs
iret
jnp
sbb
push
and
add
push
dec
cmps
inc
push
add
les
adc
neg
test
mov
mov
or
add
pop
or
and
add
mov
adc
push
fsub
push
lea
adc
sbb
cdq
xchg
setnp
or
or
mov
push
bnd
mov
pop
leave
and
add
add
push
push
sbb
pop
dec
xor
push
pop
jl
dec
fsub
mov
test
sbb
cmp
retf
dec
add
or
push
iret
shr
add
push
push
xor
or
nop
sub
and
jb
add
pop
adc
push
mov
sub
jno
or
out
sbb
fadd
mov
dec
or
cmp
push
xor
fwait
sub
push
push
dec
push
cli
ss
pop
jb
stos
adc
push
repnz
sbb
lods
mov
in
std
daa
rcl
sbb
inc
(bad)
pop
push
push
push
rol
adc
push
xor
mov
ret
jb
pop
test
clc
adc
add
jae
add
push
adc
sbb
sub
repz
arpl
pop
dec
add
inc
or
lods
mov
loopne
mov
add
fwait
push
mov
lock
mov
jb
jl
adc
clc
and
adc
sbb
jmp
push
and
or
cmp
punpckhwd
xor
add
add
ins
cmp
or
dec
and
test
pop
jo
mov
adc
mov
(bad)
xor
shr
mov
inc
pop
cmp
cmp
mov
dec
mov
mov
movs
sub
and
sbb
dec
sbb
mov
mov
adc
pop
call
sub
cwde
movs
cmp
push
sahf
lea
cmp
dec
lock
xchg
call
or
(bad)
add
das
mov
adc
ret
popa
jmp
in
push
lea
mov
push
adc
cs
or
fucomi
fs
movs
(bad)
jno
int3
mov
and
sbb
jne
and
jb
and
mov
scas
fsubr
add
lods
cli
cmps
inc
sub
and
movs
repnz
leave
sbb
dec
fadd
frstor
pop
retf
fsubr
push
fmul
adc
lds
fdivr
mov
shl
push
cmp
outs
mov
stos
add
rcl
mov
jmp
out
xchg
out
push
sub
mov
xchg
in
jbe
stos
mov
int
(bad)
in
(bad)
(bad)
xor
loopne
hlt
mov
jbe
jecxz
test
bound
and
adc
xor
nop
sbb
or
or
or
es
popa
dec
adc
sbb
adc
sbb
jl
xlat
inc
jb
adc
push
pop
popa
sbb
mov
xchg
xor
sar
pop
inc
test
mov
inc
mov
(bad)
or
les
push
push
xor
or
scas
retf
aam
mov
pop
add
mov
ror
xor
and
push
cmp
stos
sub
aad
call
mov
movs
fbstp
adc
add
jecxz
sbb
xor
xor
or
xchg
imul
adc
icebp
jnp
test
int
and
test
mov
shl
shufps
test
mov
sbb
xor
cs
xchg
dec
jle
mov
inc
rol
retf
lods
cmps
mov
test
mov
xchg
cmp
pop
lds
cld
je
push
mov
adc
ins
movs
in
in
pushf
pusha
retf
push
je
push
push
sahf
mov
and
movzx
xor
mov
lahf
int
cs
std
enter
lods
inc
push
jae
push
jae
sbb
inc
fucomip
test
sar
add
or
jl
lock
or
not
sar
jmp
loop
push
or
push
shl
push
mov
imul
adc
or
sbb
stc
push
inc
(bad)
xor
pop
adc
cmp
nop
shl
pop
fsub
fiadd
push
mov
inc
stos
shl
push
sti
push
aam
dec
cmp
jnp
lahf
jbe
adc
adc
in
js
cmp
add
sbb
dec
imul
nop
pop
icebp
push
push
sbb
rcr
pushf
fcom
stos
pop
repnz
in
push
or
ficomp
adc
cmp
push
fs
rcl
enter
dec
int3
inc
cmp
xchg
cmp
cwde
mov
pop
bnd
stos
sti
and
add
inc
or
inc
iret
mov
sub
pop
push
imul
cld
adc
je
scas
or
shl
mov
adc
jmp
sar
mov
sar
pop
in
adc
jmp
cmp
imul
adc
nop
jg
push
xor
sbb
out
add
rcr
xor
jne
movsx
mov
pop
xchg
jl
push
cmps
cmp
jb
jbe
push
paddb
into
pop
or
push
mov
pop
add
loopne
sbb
push
test
xor
mov
sbb
sub
adc
push
dec
sub
and
pop
push
jo
cdq
js
inc
add
jle
fsubr
pop
push
adc
sub
out
dec
mov
xchg
mov
adc
cmp
jl
sar
or
cmp
xchg
push
dec
or
push
ins
sub
clc
dec
aaa
iret
mov
loopne
jbe
mov
cmp
jbe
ret
jmp
add
fldenv
adc
push
rol
xchg
fsubp
cli
push
dec
ja
adc
sub
inc
fist
or
je
mov
xchg
xchg
push
popa
mov
lods
push
add
xchg
xchg
xchg
xchg
add
push
pop
int
xchg
xchg
or
or
jnp
or
jbe
int
int
jmp
or
por
int
int
jmp
adc
pop
adc
push
adc
dec
adc
int
int
dec
adc
aas
pop
jmp
sbb
int
int
xor
jmp
sbb
es
int
int
and
pop
pop
jmp
and
mov
and
adc
dec
pop
sub
(bad)
and
test
jae
cmovo
mov
cmp
push
ror
iret
idiv
call
add
cmp
repz
and
xor
cmp
repz
iret
repz
dec
push
pop
pop
bound
iret
repz
jno
jnp
repz
repz
repz
sahf
mov
mov
sub
add
add
push
pop
or
and
or
or
push
movups
adc
mov
call
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
aas
push
push
dec
cmp
sar
sub
icebp
test
inc
sub
mov
outs
mov
add
push
sub
xor
je
(bad)
or
rol
aam
adc
push
in
out
bsf
add
push
les
or
popa
or
or
(bad)
cmp
jb
inc
add
sbb
jmp
loope
xchg
and
sub
dec
jo
fsub
mov
jo
and
jae
and
sbb
daa
retf
add
jb
fwait
hlt
and
sbb
js
xor
mov
jge
jb
call
shl
and
inc
xchg
pop
nop
pusha
sbb
popa
out
mov
les
mov
mov
or
fmul
jmp
fcomp
mov
mov
test
setge
or
adc
and
jmp
clc
nop
jecxz
mov
mov
dec
jge
jnp
adc
push
mov
inc
push
mov
add
push
mov
pop
imul
xchg
xor
jo
pop
add
push
adc
push
in
dec
loop
jmp
mov
pusha
cli
call
pusha
(bad)
push
mov
ror
xor
shr
xor
std
(bad)
out
sub
ret
or
or
icebp
add
add
add
or
or
iret
or
mov
push
or
and
xor
add
mov
sti
add
push
add
xlat
in
(bad)
fsubr
add
or
mov
ror
mov
fisub
iret
iret
add
xor
and
and
mov
push
rol
data16
inc
test
xor
xor
sub
(bad)
repnz
sub
fmul
pop
invd
mov
push
loopne
xlat
and
ror
add
add
add
push
nop
cmps
sub
call
ror
clts
mov
push
xor
sub
xor
(bad)
cli
mov
rol
dec
jae
mov
add
push
xor
fsub
shl
xchg
in
test
in
test
call
push
sbb
in
push
cmp
data16
cwde
xchg
xchg
pop
mov
add
mov
aaa
add
ret
fwait
call
shl
loopne
in
sbb
loopne
add
pop
add
imul
pop
aaa
mov
jo
xchg
test
mov
or
xchg
rol
or
xor
xchg
div
and
call
or
add
pop
inc
cmp
and
xor
add
add
enter
push
mov
aas
mov
jge
push
ret
push
inc
inc
scas
shl
adc
dec
pusha
or
pushf
sar
or
cmps
out
cmp
add
inc
(bad)
es
mov
mov
lea
(bad)
js
call
ins
and
fisubr
add
clc
jl
push
and
add
and
inc
call
nop
cmps
imul
jl
sar
icebp
(bad)
aam
xchg
ficomp
add
cli
mov
xor
movs
inc
xchg
mov
dec
xor
ror
inc
in
jb
xor
in
mov
inc
shl
rol
dec
jecxz
jo
cmp
ss
push
xchg
inc
ror
add
inc
sub
dec
pushf
pop
and
in
rol
inc
add
cdq
and
imul
sub
add
push
xor
add
dec
int
dec
jae
dec
xor
pop
or
dec
xchg
push
pop
xor
add
cmp
enter
and
add
pop
cmp
push
leave
and
pop
int
push
test
scas
push
add
sub
push
xadd
or
xor
scas
inc
pop
aam
pop
and
ror
pusha
inc
mov
pushf
adc
sar
or
adc
dec
scas
fs
adc
call
retf
fs
dec
dec
iret
enter
stc
stc
stc
mov
lods
jo
fxch
pop
push
mov
dec
inc
mov
inc
imul
fmul
adc
fiadd
cmps
adc
lods
call
in
adc
adc
mov
sbb
and
nop
hlt
jo
push
mov
shr
(bad)
pop
sbb
pop
out
pop
add
sub
mov
and
inc
add
add
and
push
cld
lea
xchg
scas
dec
movs
add
sub
pusha
loope
push
pop
xor
xchg
fadd
jmp
mov
out
in
aaa
sbb
retf
loop
inc
rol
and
xchg
(bad)
or
enter
(bad)
imul
push
inc
jae
stos
or
gs
sub
pop
lock
aas
lea
jmp
clc
pop
mov
push
sub
push
ss
mov
fimul
pop
jne
pop
inc
jmp
pop
data16
mov
cmps
jge
add
or
enter
clc
aaa
sbb
xchg
fidiv
or
or
sti
ins
inc
add
jae
push
pop
rol
rep
(bad)
fld
dec
add
movs
xchg
sbb
retf
imul
(bad)
dec
pusha
outs
pop
fdivp
ror
mov
hlt
pusha
or
jl
shr
xchg
and
jb
pop
mov
(bad)
lea
call
adc
rcr
int3
mov
loopne
or
dec
js
ret
mov
add
xchg
mov
popa
retf
jbe
dec
lods
add
sbb
pushf
mov
add
shl
sub
lock
ror
clc
rcr
fwait
sbb
or
xchg
stos
xchg
in
fstp
(bad)
mov
lea
imul
cmp
ja
inc
push
or
stos
call
push
or
stos
mov
enter
sbb
lock
rol
sbb
add
xor
test
and
ds
add
stos
add
push
mov
push
sub
pop
push
and
outs
lock
pop
mov
push
and
add
pop
pop
pminsw
mov
mov
inc
mov
shl
jno
loopne
inc
pop
stos
xchg
icebp
jecxz
popa
test
addr16
fstp
ins
outs
je
fwait
push
mov
(bad)
lock
pop
add
add
xchg
les
lock
adc
xchg
dec
ins
movs
push
add
mov
pusha
mov
xchg
xchg
pop
rcr
xor
sbb
add
sbb
mov
pop
xchg
sbb
pushf
and
adc
cld
adc
adc
jmp
mov
xchg
cli
mov
add
and
adc
push
cdq
mov
ror
mov
add
xchg
enter
mov
and
dec
fmul
sub
sti
or
mov
inc
dec
push
inc
jnp
ret
mov
jno
sbb
clc
rol
mov
fcmovnu
mov
jl
or
nop
dec
inc
lods
sub
pop
dec
test
pop
ins
das
sbb
jle
xor
mov
cmp
jne
lea
cmp
add
xchg
mov
jg
and
or
js
xor
jl
or
adc
cmp
push
aad
or
xor
cmp
mov
dec
cmp
jl
lahf
dec
mov
cmp
push
js
test
jae
in
imul
movs
test
dec
daa
loope
xchg
dec
lods
test
and
movzx
adc
add
rol
and
adc
test
js
js
or
mov
push
aam
loopne
pusha
and
cmp
mov
mov
add
ret
mov
leave
sbb
mov
dec
call
mov
sub
xchg
xchg
jp
dec
imul
into
loopne
sub
inc
popf
add
mov
fwait
and
mov
dec
jl
add
push
ror
sbb
xchg
fs
scas
mov
mov
add
ja
or
or
ins
add
sub
mov
adc
cmp
sbb
add
loopne
adc
sub
jne
sub
inc
mov
dec
sti
mov
adc
sub
inc
push
jmp
sbb
add
jo
cmp
sub
xchg
add
add
arpl
add
mov
inc
push
sub
add
xor
push
lea
push
and
jbe
sbb
xchg
mov
mov
inc
dec
push
retf
cmps
push
or
les
and
jg
add
push
xor
sbb
adc
xor
xchg
add
sbb
ret
pop
inc
fstp
sbb
cwde
dec
inc
pop
inc
add
pop
dec
sbb
xor
nop
add
ja
outs
sbb
push
jmp
push
jmp
loop
jmp
daa
pushf
inc
test
adc
pop
cmc
push
ror
pop
push
and
push
and
jg
sub
je
ret
or
(bad)
push
fdiv
mov
pop
neg
adc
popa
ins
or
dec
inc
dec
lods
fld
adc
xchg
hlt
retf
push
out
mov
test
and
out
pop
pop
out
ret
fwait
outs
das
sbb
push
or
std
inc
push
mov
jmp
cmp
jmp
adc
mov
push
jg
pop
inc
push
push
adc
or
mov
push
aam
mov
fcmovnb
or
in
xor
push
or
xchg
bound
dec
jo
je
inc
call
fadd
pushf
pop
lea
push
and
adc
cmp
push
cmp
cmps
out
nop
or
mov
xor
lods
xchg
mov
retf
lods
adc
dec
dec
cli
push
xchg
sub
mov
mov
cmp
(bad)
aaa
xchg
sub
and
jnp
ror
jo
pop
mov
push
scas
pop
dec
adc
jmp
cdq
ret
sbb
rol
adc
and
das
push
pusha
dec
dec
sub
push
xor
mov
adc
sahf
adc
xchg
jmp
inc
jg
mov
mov
mov
pop
dec
push
stos
mov
ins
push
cmp
and
cmp
ds
test
das
or
pusha
std
or
mov
mov
dec
mov
dec
imul
or
cmp
cmp
sbb
inc
pop
inc
inc
ror
ret
jmp
sub
sub
push
or
xchg
or
pop
ins
cmp
rol
dec
fnstenv
xchg
jb
pop
das
ss
enter
sbb
adc
frstor
jl
mov
xor
xchg
retf
adc
sbb
cdq
jae
push
movs
adc
sbb
cld
cmp
imul
inc
out
cwde
lds
gs
sub
or
pop
test
adc
and
push
pop
push
xchg
or
mov
sbb
daa
mov
mov
data16
and
cdq
test
mov
data16
push
fdiv
xor
mov
push
lods
mov
adc
test
push
(bad)
push
cmp
push
dec
sub
pop
jmp
stos
jmp
and
mov
ret
mov
adc
mov
(bad)
and
ja
xchg
popa
ror
scas
mov
cld
jae
add
xor
dec
mov
xor
push
sbb
pop
jnp
sub
cmp
scas
stos
adc
adc
inc
push
mov
pop
(bad)
jle
popf
int3
mov
stc
cmp
xchg
cmp
call
xchg
mov
xchg
inc
dec
inc
adc
cmp
jmp
mov
icebp
or
pop
and
pop
push
pusha
and
adc
push
xor
lds
imul
pusha
adc
pop
aad
je
xchg
or
imul
xor
rol
je
push
xor
(bad)
loope
jbe
push
dec
idiv
je
(bad)
and
sti
sub
and
es
data16
xchg
and
push
xor
xor
enter
mov
mov
xchg
call
inc
xchg
pop
mov
push
out
push
xor
movs
push
push
or
and
push
mov
sub
sub
cld
nop
fnstenv
and
jg
mov
fstp
(bad)
mov
xor
and
imul
cmp
push
pop
sub
movs
test
daa
movs
xor
das
xchg
jp
lea
dec
adc
sbb
or
dec
loopne
inc
cmp
mov
inc
and
xchg
add
or
adc
aaa
dec
pop
movs
mov
push
and
and
and
arpl
sbb
pushf
jb
push
push
in
cld
repnz
stc
xor
pop
add
pop
xchg
je
sbb
leave
leave
sbb
lods
rcr
xor
mov
sub
pop
jne
push
cdq
or
jle
lock
out
mov
out
ja
inc
mov
inc
sbb
js
jle
jecxz
lods
cdq
(bad)
in
dec
adc
aaa
xor
cmp
jns
lea
fld
inc
mov
nop
and
fisttp
sbb
dec
pop
inc
movs
cli
adc
vroundps
clc
pop
cmp
add
xchg
frstor
loop
enter
push
sub
mov
mov
mov
addr16
ja
jbe
dec
sbb
sbb
popa
mov
js
mov
sbb
js
les
or
mov
cmp
je
cmp
jle
xor
push
push
cmp
mov
fdivr
dec
jbe
and
mov
jle
mov
mov
aas
adc
sub
and
cmp
xchg
or
add
nop
adc
or
aam
inc
fstp
and
push
jns
mov
test
and
cmp
sub
mov
inc
fidivr
stos
rcr
stc
inc
jo
pusha
shr
mov
enter
adc
pop
mov
push
stos
ss
repnz
sub
call
daa
ja
and
sbb
or
push
repnz
call
mov
sbb
mov
or
test
add
call
push
inc
pusha
cmp
pop
cmp
dec
ret
or
fidiv
pop
sub
push
mov
pushf
les
push
aad
(bad)
mov
mov
lea
dec
inc
inc
cs
dec
je
cmp
add
outs
adc
shr
push
cmp
jge
mov
jg
pusha
pop
and
push
bswap
les
jg
loope
sub
mov
ror
popa
jl
and
xchg
ins
xor
lock
clc
clc
cld
sub
xchg
add
dec
gs
cs
add
add
add
push
sub
dec
imul
xor
xor
jne
mov
and
dec
or
mov
shr
sbb
loope
mov
mov
or
mov
sub
or
rcl
mov
loope
rcl
mov
sub
cmps
adc
add
adc
je
dec
je
push
add
pop
ins
outs
out
loop
(bad)
loope
sub
repnz
or
add
retf
sub
in
mov
push
mov
test
je
cmp
jne
sbb
jle
mov
pushf
cmp
dec
sar
ror
jmp
or
inc
inc
add
int
cs
xor
inc
or
fmul
sbb
or
cld
pop
rol
idiv
inc
inc
imul
lock
or
push
clc
jb
push
adc
pop
xchg
push
fiadd
aam
je
mov
add
add
sbb
aas
cmp
mov
stc
pop
repz
adc
mov
push
inc
or
lock
cmp
mov
out
dec
pop
jbe
inc
test
jmp
pop
inc
cmps
daa
pop
out
push
cmp
adc
aaa
sar
ret
mov
cld
mov
pop
outs
gs
jae
xor
sbb
out
lods
(bad)
jmp
mov
mov
mov
aas
pop
ins
test
fs
cmp
je
xor
jg
cmp
push
cmp
jne
inc
jne
xlat
inc
adc
fld
and
add
xor
inc
rol
add
inc
adc
pop
jae
and
test
and
loop
xchg
adc
(bad)
cmp
dec
ret
rol
fdivr
sbb
add
(bad)
add
push
std
(bad)
pusha
mov
mov
call
jmp
jp
jl
or
jg
mov
jmp
aad
push
imul
adc
mov
int
and
mov
jp
add
shl
dec
mov
jbe
or
fdivr
dec
adc
in
mov
(bad)
outs
adc
test
or
call
inc
ds
retf
mov
add
push
mov
sbb
cli
push
shl
push
out
mov
adc
and
push
jge
rcl
push
inc
cmp
xchg
add
push
inc
fnsave
mov
adc
ds
(bad)
aaa
cmp
xor
or
inc
cmps
pop
push
movs
inc
xor
aaa
mov
jge
adc
pop
das
movs
xor
xor
fsub
inc
cmp
mov
in
ficom
add
inc
inc
push
adc
out
jmp
xor
inc
nop
fsub
out
xor
mov
push
xchg
add
push
mov
add
pop
ucomiss
mov
push
xor
shr
push
cmp
cmp
mov
lods
xchg
sub
or
or
enter
and
cmps
and
loope
je
clc
pop
cmps
out
mov
or
add
pop
xor
clc
jle
clc
arpl
fld
push
loop
adc
ds
cld
imul
inc
lods
retf
inc
mov
sar
imul
je
xor
leave
or
cmp
(bad)
mov
jmp
test
and
push
mov
ret
in
sbb
sub
inc
push
dec
enter
mov
pusha
(bad)
icebp
adc
or
in
xor
std
pop
adc
mov
xchg
or
inc
sti
rol
push
aam
aam
sub
jge
jne
adc
xchg
add
je
and
push
sbb
pop
push
add
(bad)
and
test
xchg
xchg
inc
inc
mov
ss
int3
add
add
cmp
and
test
and
js
mov
or
xchg
mov
pop
fild
or
adc
js
stos
and
icebp
jmp
push
rol
or
mov
inc
add
(bad)
xor
fs
dec
cmc
xchg
rcl
(bad)
arpl
js
mov
sbb
push
jl
jl
ins
xchg
xor
push
mov
mov
or
movs
sbb
daa
dec
or
dec
push
mov
loopne
push
xor
mov
push
cwde
sbb
dec
inc
call
and
push
cmp
pop
xor
cmp
mov
adc
cmp
rcr
xchg
push
mov
adc
in
xor
pop
mov
pop
sub
cmp
inc
push
imul
inc
ds
and
out
cmp
outs
mov
ins
xor
mov
or
and
pop
mov
popf
and
xor
inc
mov
leave
enter
sbb
mov
jbe
pusha
les
fs
sbb
push
cmp
add
inc
sahf
outs
std
add
cmp
jne
mov
or
not
les
mov
rcr
stos
(bad)
push
arpl
fnstenv
call
dec
ret
add
sbb
mov
cmp
xchg
push
aas
add
lods
sub
mov
sbb
mov
xchg
mov
aam
test
mov
into
push
jb
sub
scas
adc
arpl
cld
fs
or
rol
push
sub
lock
inc
ss
jecxz
fstp
(bad)
pop
hlt
sub
add
(bad)
adc
or
arpl
pop
adc
ins
push
inc
mov
add
and
dec
shl
rol
mov
jmp
mov
mov
or
loopne
dec
dec
and
arpl
clc
cli
xchg
dec
xchg
cmps
push
inc
test
push
jp
fdiv
mov
pop
jae
ret
jb
pusha
clc
inc
ins
ds
inc
or
push
sub
push
(bad)
scas
sbb
mov
shl
cli
add
pop
dec
push
mov
xor
push
cmp
push
mov
inc
fs
inc
fisttp
xor
dec
pushf
in
imul
xlat
push
mov
arpl
inc
stos
push
jbe
(bad)
adc
adc
add
sti
fistp
push
pop
jnp
jo
push
jnp
push
or
sbb
das
loope
(bad)
fnstcw
in
rcl
inc
test
push
xchg
mov
nop
js
adc
xchg
sub
out
sahf
outs
inc
int
loop
pop
mov
add
sub
push
pop
mov
sbb
xor
xchg
dec
loop
and
or
loope
mov
dec
popa
xor
ror
jns
mov
adc
ins
test
in
mov
push
leave
in
sub
retf
sahf
mov
lods
bound
pop
cli
rcl
push
jae
cmp
loope
out
xor
(bad)
in
call
inc
xor
cmp
jb
pusha
hlt
cli
push
dec
jmp
push
dec
inc
sbb
call
mov
push
je
ret
(bad)
imul
sbb
test
or
push
or
add
mov
jnp
dec
or
mov
mov
loopne
xor
adc
mov
add
push
mov
(bad)
scas
mov
inc
dec
jne
and
or
dec
adc
push
out
inc
sub
fwait
arpl
rcl
cld
ror
xchg
minps
dec
cmp
mov
jne
lea
jb
adc
jle
inc
push
scas
push
inc
add
jno
mov
fdiv
dec
sbb
in
shl
pop
cmp
adc
adc
out
dec
mov
push
mov
and
fcomp
and
push
(bad)
or
jmp
xor
xchg
mov
push
sub
or
sbb
cmp
pusha
inc
(bad)
cwde
dec
adc
add
pop
dec
aas
add
add
dec
inc
and
add
iret
(bad)
test
push
jno
xor
add
inc
stc
cmp
retf
or
xchg
jo
lea
pop
sbb
push
fbstp
jmp
cmp
jne
or
rol
aas
(bad)
add
push
bound
xchg
mov
push
jno
in
xor
icebp
and
data16
iret
ins
pop
mov
(bad)
sbb
xor
cmp
enter
pop
int3
mov
xor
sbb
sbb
push
jmp
sbb
xchg
test
mov
add
test
push
add
xor
mov
push
hlt
xor
movs
in
dec
shl
jmp
mov
adc
jnp
add
out
ret
addr16
xchg
or
jge
cmp
inc
mov
pop
sbb
sbb
mov
jno
jno
or
cmp
(bad)
fist
mov
or
or
in
mov
sub
inc
pop
imul
jns
and
xor
jecxz
into
add
dec
loope
dec
adc
mov
(bad)
push
sub
ret
pushf
fstp
scas
cmp
push
mov
sub
mov
mov
scas
lea
jns
pop
dec
push
mov
xchg
(bad)
xor
pop
mov
cmps
add
lock
add
sahf
mov
mov
and
mov
inc
pop
sbb
mov
xchg
pop
mov
adc
cdq
and
and
push
xchg
or
push
push
pop
or
jno
mov
ins
repz
test
mov
xlat
(bad)
call
pop
push
loop
adc
or
nop
cwde
lock
cmp
or
sbb
add
push
and
add
(bad)
mov
push
xchg
or
test
jmp
bound
mov
sub
jecxz
push
or
xor
nop
or
and
push
inc
push
adc
sub
adc
add
xchg
test
mov
fst
retw
xchg
pop
stc
jno
fdivr
mov
xor
or
push
jnp
adc
cs
aaa
pusha
lock
adc
push
shl
jb
test
stc
sub
mov
enter
mov
(bad)
fdiv
cwde
dec
add
sub
bound
pop
leave
call
add
inc
xor
xchg
pop
js
push
pop
test
mov
or
xchg
mov
xchg
or
push
or
sbb
sub
mov
mov
inc
pop
cmp
shl
sbb
shl
ss
push
xor
dec
sar
shl
pop
cwde
cmp
fidiv
ss
mov
or
xor
sar
loopne
mov
sbb
pop
loope
adc
sahf
and
jp
xor
jmp
rcl
mov
mov
inc
jmp
inc
inc
call
adc
cmp
add
mov
adc
inc
push
xchg
popa
xchg
cdq
pop
imul
cmp
pop
push
ret
es
ret
outs
and
and
dec
jecxz
leave
imul
xchg
movs
popf
ins
jne
or
mov
jmp
and
or
xchg
(bad)
rcl
dec
xor
aad
lods
test
fistp
cmp
inc
aaa
add
hlt
inc
adc
pop
jmp
ror
stos
adc
adc
or
fist
ret
out
xchg
lods
popf
shr
out
add
mov
or
jae
je
adc
and
mov
test
fcomp
(bad)
aas
push
mov
mov
mov
add
(bad)
or
aaa
repnz
cmp
sub
jbe
(bad)
sbb
int
push
lods
mov
add
(bad)
pop
rcl
mov
cmp
repz
test
add
inc
or
push
sub
add
dec
mov
sahf
push
sub
sub
add
test
out
mov
adc
ret
adc
outs
scas
rcl
adc
inc
inc
mov
icebp
ret
mov
cld
mov
cmp
leave
enter
push
out
outs
add
jmp
xor
sub
or
int3
mov
sbb
pusha
inc
inc
fs
in
pop
inc
pop
jmp
mov
mov
sbb
jne
pop
push
rol
mov
jae
mov
push
adc
and
jns
inc
xor
add
push
or
lock
ds
xor
dec
mov
inc
push
fmul
cmp
jmp
lea
mov
adc
pop
std
xor
pop
dec
ds
xchg
or
aas
or
adc
cmps
push
sbb
js
es
add
push
mov
stos
mov
mov
dec
leave
push
adc
inc
in
out
fisttp
sbb
and
or
cmp
jge
and
mov
js
sbb
and
jl
ss
xchg
nop
(bad)
mov
mov
test
sbb
fwait
and
test
aas
fs
push
sub
aas
and
jp
pop
jmp
aam
or
or
xchg
add
xchg
mov
ja
dec
adc
pop
sub
xchg
inc
sub
mov
mov
push
cmp
pop
mov
bnd
sbb
mov
push
push
fldcw
inc
and
xchg
adc
ins
in
push
jb
mov
adc
pop
mov
sub
ret
xchg
loopne
xor
xchg
adc
sub
inc
dec
ja
shr
mov
out
xor
jge
or
and
xchg
ss
dec
test
lock
rcr
loop
or
mov
add
leave
data16
push
loopne
or
gs
dec
sbb
in
inc
add
pop
mov
loope
addr16
and
pop
mov
push
scas
stos
pop
aaa
popf
sahf
into
and
sub
mov
jp
adc
push
imul
xor
ins
in
push
jae
shl
ja
mov
jae
fisttp
and
call
or
cld
push
fnstcw
xchg
push
cli
je
sbb
mov
shr
xor
cmp
or
out
jmp
push
or
loope
add
popa
lods
fadd
xchg
fwait
lods
enter
ds
out
imul
mov
mov
jle
pop
js
mov
fdivr
push
jmp
movs
or
jbe
add
dec
cmp
ins
loopne
jo
sub
jg
xor
call
mov
mov
and
xor
sub
xchg
scas
mov
call
aad
in
mov
add
mov
xchg
or
sub
adc
daa
push
inc
mov
push
xor
pop
mov
pop
cmp
sbb
int3
inc
or
outs
sbb
repz
call
jmp
inc
sbb
or
imul
aas
xor
retf
je
arpl
(bad)
and
jnp
mov
js
data16
mov
fcmovnb
mov
and
aas
pop
cs
call
sahf
rcr
mov
call
or
nop
add
adc
int
sub
pop
mov
or
sbb
mov
gs
je
pop
push
push
xchg
hlt
sub
mov
ins
push
(bad)
imul
inc
in
dec
sub
push
fst
inc
add
or
aas
mov
sbb
int
or
adc
in
fist
shl
cmp
xchg
push
(bad)
div
and
mov
push
adc
sbb
cmp
cwde
add
les
jmp
bound
test
(bad)
pop
enter
inc
adc
ds
shl
xor
in
add
jge
mov
jmp
push
mov
and
jge
sbb
(bad)
pop
push
jg
rcl
push
(bad)
pop
sbb
sub
cmp
out
cs
inc
inc
sbb
ss
mov
test
ret
push
aaa
ds
stos
ins
inc
add
sbb
es
mov
leave
les
inc
(bad)
xchg
(bad)
sbb
adc
or
mov
or
sub
(bad)
shl
add
rol
lds
mov
add
je
cmp
jbe
push
popf
mov
or
cmp
loop
jecxz
pop
dec
ror
pop
push
mov
pop
fild
test
inc
or
adc
int3
or
mov
lods
lock
pop
inc
arpl
push
or
mov
cwde
fcomp
inc
mov
(bad)
xor
add
mov
jb
wbinvd
push
push
clc
push
cmp
or
dec
jo
adc
pop
mov
fsubr
xor
push
inc
data16
adc
mov
scas
lods
push
mov
pop
jmp
icebp
test
sub
enter
gs
lock
test
cmp
sub
adc
cmp
ror
mov
call
jb
inc
pop
pop
cmpxchg
aaa
or
push
dec
or
push
inc
mov
sbb
(bad)
ja
shl
and
sti
sub
push
test
jmp
out
mov
cmc
aaa
jl
jne
mov
adc
outs
ret
addr16
adc
in
cmc
fistp
jle
push
xor
pop
div
hlt
add
lea
adc
or
fisttp
and
xchg
sub
push
mov
inc
(bad)
push
xchg
test
lds
push
add
cmps
add
push
xor
lea
add
movs
inc
pop
mov
xchg
repz
xchg
je
stc
xchg
sub
inc
fisttp
sbb
and
dec
(bad)
stc
push
std
in
jmp
add
or
pusha
add
add
jne
or
ins
cmp
sub
nop
fisub
je
xor
ret
jo
dec
xlat
outs
push
shl
adc
sub
sub
jne
and
ins
bound
adc
adc
push
std
pop
mov
retf
fidivr
clc
int3
add
mov
mov
ds
or
add
jb
cmp
cli
nop
(bad)
mov
and
cli
add
xor
(bad)
clc
in
ror
jmp
loopne
add
xchg
ror
je
rep
jge
xor
or
rcr
add
das
push
push
jbe
push
dec
sbb
ds
test
mov
push
or
xor
dec
cmp
sub
cmc
dec
shr
mov
je
popf
xor
xchg
add
push
or
add
fs
enter
scas
pop
push
scas
(bad)
in
push
pop
and
sbb
psubusw
test
outs
adc
loopne
clc
jg
fs
fistp
add
movd
movaps
fdivrp
push
enter
shl
jle
xor
test
ror
test
dec
fnstcw
and
retf
or
jg
std
int
mov
adc
(bad)
jnp
mov
mov
aam
ret
pop
cmp
and
mov
aaa
out
push
cmp
add
xor
fisub
jbe
and
rcl
xlat
(bad)
addsd
int
add
es
jns
sbb
sbb
sti
cmp
pop
test
addr16
inc
shr
or
ret
mov
mov
mov
rol
(bad)
pop
rcr
loop
add
cld
jb
test
mov
xor
adc
int3
jmp
ficomp
sub
ret
adc
shl
nop
inc
std
cld
stc
lea
add
frstor
movs
jp
mov
push
stos
scas
(bad)
or
in
retf
imul
sub
xor
or
cmp
sub
scas
jg
jb
add
lods
or
inc
mov
push
sub
cs
ds
inc
sub
mov
jge
ja
mov
jbe
push
(bad)
lahf
in
je
cmp
jne
inc
cmp
out
or
add
or
inc
lock
dec
mov
inc
inc
and
adc
or
or
mov
add
ret
daa
pushf
data16
addr16
or
adc
jne
jmp
mov
or
xor
aaa
xchg
jo
push
xchg
int3
xchg
adc
xor
clts
sbb
mov
rdtsc
shl
test
int3
js
je
add
ss
mov
dec
cmp
(bad)
mov
ins
daa
cdq
push
in
push
cmp
scas
pop
sbb
jns
in
scas
mov
outs
test
pop
sbb
push
jne
inc
adc
ret
mov
push
push
mov
les
ret
sbb
pushf
pop
addr16
lock
sbb
sbb
ret
push
and
cmp
push
and
enter
iret
xor
cmc
mov
cmps
dec
push
inc
jmp
pop
mov
inc
fldenv
pop
retf
pop
cmp
jmp
aaa
add
inc
ror
mov
inc
test
or
out
fnstsw
or
or
push
mov
push
xor
cmp
push
cs
and
int3
stc
inc
out
xor
or
test
adc
mov
sbb
arpl
cmp
cmovo
icebp
cmp
mov
push
adc
dec
add
cmp
cli
adc
adc
(bad)
adc
cmp
ins
push
bound
or
sub
dec
shl
sub
ror
data16
data16
add
fs
shl
mov
mov
push
sbb
add
je
jae
rcr
enter
mov
xor
add
icebp
pop
pop
xchg
push
cmp
jns
js
sahf
xchg
adc
xchg
popa
rol
pop
shr
arpl
nop
or
loop
icebp
mov
xchg
out
add
mov
rcl
mov
cmp
das
cwde
cwde
xlat
pop
mov
pop
jecxz
in
pop
inc
inc
mov
bound
xchg
and
pop
test
jmp
ret
(bad)
in
add
jne
out
(bad)
pop
add
test
je
inc
mov
cmp
cld
in
fwait
and
loope
or
cmp
jne
dec
jmp
shl
(bad)
popa
outs
retf
retf
jne
inc
aaa
push
sub
mov
push
loope
bnd
iret
cmp
inc
jno
push
pop
mov
fstp
test
inc
retf
stos
inc
mov
xor
or
inc
sbb
mov
jmp
inc
mov
pop
and
es
pop
ror
inc
pop
jne
fnstenv
clc
dec
add
cmp
jb
rep
jmp
push
scas
add
cmp
or
mov
adc
gs
idiv
push
in
nop
je
mov
xchg
clc
and
add
xor
mov
or
lods
adc
push
repnz
dec
add
and
nop
inc
add
xchg
mov
cmp
mov
sub
and
adc
stc
aas
iret
or
mov
mov
call
call
hlt
jo
out
hlt
clc
clc
cld
loope
call
add
add
out
or
push
push
sbb
lock
nop
inc
xor
push
lods
pop
sti
and
popa
xchg
and
lea
jl
dec
jb
cmp
pop
and
std
(bad)
cld
jno
pop
stc
out
in
addr16
adc
pushf
xchg
add
and
stc
sub
daa
pop
nop
add
and
dec
gs
mov
mov
add
ret
mov
inc
push
mov
sub
push
add
test
mov
cmps
shl
push
mov
or
jns
out
push
mov
ror
sahf
out
icebp
jecxz
aaa
sbb
sbb
jns
out
adc
adc
or
jns
out
or
add
cmps
jge
and
cld
or
push
adc
test
aaa
push
add
and
adc
cdq
push
inc
cdq
hlt
dec
push
jbe
(bad)
pusha
aam
inc
jae
xor
inc
imul
rol
push
mov
cmp
aad
fucomi
test
pop
and
cmp
jae
sub
out
add
push
enter
fild
add
or
add
movs
sbb
movs
push
sbb
dec
iret
xchg
and
or
jge
adc
sbb
rol
jge
pop
test
out
push
add
daa
sbb
rcl
pop
out
int
cmp
test
iret
push
cmp
mov
and
mov
popf
mov
retf
cmp
adc
inc
xchg
add
inc
pop
test
enter
inc
iret
aam
out
lock
sub
loope
dec
jle
lock
je
mov
mov
test
add
das
in
mov
cdq
pop
jge
pop
and
jb
mov
adc
cdq
pop
fistp
and
(bad)
jno
sbb
call
pop
fistp
push
mov
arpl
fist
push
es
sub
inc
aaa
jle
sub
in
pop
cmp
pushf
mov
cmp
into
lea
cmp
frstor
in
inc
push
retf
sub
cmp
cmps
imul
adc
or
add
add
or
pop
and
push
mov
pop
cld
dec
xchg
ror
xchg
cmp
scas
add
and
add
outs
mov
push
push
and
ror
ss
xor
cmp
adc
dec
pusha
inc
jp
push
js
into
mov
push
inc
fnsave
pop
jmp
fadd
adc
push
push
jbe
mov
and
cs
xchg
iret
shl
lods
int
push
pop
mov
iret
pop
and
pop
dec
sti
pop
xlat
loopne
xor
pushf
xchg
loopne
(bad)
mov
fnsave
aaa
and
dec
or
retf
pop
and
inc
or
loope
pop
cmp
ss
adc
les
jb
push
test
mov
adc
nop
push
mov
pusha
cmp
jne
mul
jno
pop
outs
or
or
xchg
pushf
rol
dec
loopne
into
pop
test
arpl
cld
cmp
or
pop
clc
pop
(bad)
ror
add
call
lea
cs
or
add
or
jl
and
xlat
jg
gs
aaa
push
jmp
in
xchg
sub
popa
push
adc
jmp
push
sub
inc
sbb
cmps
sbb
cmps
jno
push
or
fisttp
ffree
js
or
pop
cmp
out
fs
jnp
loope
cs
cmp
call
push
shl
pop
mov
ror
push
add
imul
sub
jns
or
pop
jbe
lea
adc
sbb
pop
add
jp
sbb
pop
call
sbb
test
mov
inc
cmp
and
and
cmps
out
mov
mov
loop
add
adc
daa
icebp
jmp
scas
mov
adc
jmp
push
add
sbb
scas
push
shl
rol
pop
pusha
lds
lods
cld
jbe
test
aam
add
jnp
mov
pushf
pop
popa
mov
mov
inc
js
dec
cmp
es
out
call
outs
cmp
pushf
mov
inc
bound
mov
pushf
add
repnz
test
std
(bad)
addr16
je
sub
test
xor
xchg
es
lock
or
mov
xor
mov
inc
test
jl
pusha
mov
pop
and
pop
or
js
hlt
add
sbb
pusha
hlt
(bad)
rol
shl
sbb
xchg
test
pusha
or
leave
inc
dec
push
rol
cmp
xchg
sbb
test
shl
and
sub
stos
inc
cwde
rcr
xlat
lea
sbb
or
or
add
out
pop
or
sbb
out
pop
out
pusha
sub
sar
adc
cdq
rcl
mov
test
inc
xchg
pop
jo
frstor
shl
pop
inc
ror
aam
ret
pop
dec
div
clc
add
mov
test
jp
daa
dec
jne
mov
and
cs
cmp
xchg
adc
test
or
loope
cmps
dec
jne
mov
imul
xor
and
or
fisttp
or
shl
and
stos
movs
jle
xchg
cli
cmp
jne
add
rol
push
outs
add
mov
into
pusha
jg
add
fisub
dec
mov
imul
std
jne
(bad)
lods
data16
out
jne
call
aam
ins
lds
jb
jmp
push
inc
inc
dec
out
jns
mov
(bad)
(bad)
jmp
std
and
jns
push
xor
cld
cld
jmp
fild
adc
in
adc
adc
inc
inc
inc
inc
jecxz
(bad)
out
out
pop
mov
or
add
pop
repnz
std
or
adc
push
or
sub
dec
mov
out
push
sub
movs
sub
and
jne
mov
repnz
rol
or
jo
retw
bound
push
or
ins
mov
adc
aaa
nop
add
std
arpl
or
or
pop
pop
inc
es
es
pop
push
sub
repnz
cmps
fs
or
js
enter
sbb
mov
jmp
push
mov
mov
movs
add
rcl
mov
je
mov
mov
cmp
jg
add
adc
jmp
and
test
mov
or
popa
call
push
push
into
inc
call
and
mov
ja
shl
push
outs
jae
out
fs
cld
jo
adc
jb
lea
scas
les
sub
inc
xor
outs
and
and
pop
pop
sbb
arpl
nop
ror
jo
bound
sub
imul
push
imul
call
addr16
mov
stos
add
push
add
or
gs
push
ror
adc
call
mov
jae
lea
and
dec
in
hlt
mov
es
push
pop
or
push
mov
ror
clc
add
popa
or
sbb
(bad)
mov
int3
sbb
fmul
lock
and
mov
hlt
sub
(bad)
sub
cmp
push
(bad)
sti
jno
sbb
cld
push
in
sub
adc
adc
add
add
xchg
mov
pop
mov
dec
sbb
jne
int
mov
mov
push
call
xchg
jmp
mov
cmp
ja
mov
fistp
mov
lea
neg
mov
sbb
jl
outs
inc
cli
or
add
jmp
or
mov
inc
inc
push
out
mov
sbb
dec
je
scas
(bad)
mov
pop
add
mov
inc
cmp
jb
add
and
jae
pop
fbld
loopne
inc
cld
addr16
push
fld
mov
shr
or
push
inc
add
and
loopne
test
add
lahf
jne
int
iret
sbb
jne
or
add
jecxz
push
adc
aad
into
and
xor
dec
stc
xor
adc
iret
xor
jo
and
jmp
add
pop
mov
jne
test
ss
dec
inc
cld
mov
ss
cmp
je
push
sub
cmp
push
aam
xchg
pop
addr16
test
std
cld
inc
or
xchg
sbb
sbb
test
mov
jmp
div
add
mov
mov
hlt
jae
jecxz
inc
or
jl
and
retf
fwait
daa
loope
push
mov
mov
add
xor
dec
sbb
push
pop
inc
arpl
and
jmp
cmp
fstp
sbb
adc
jne
sub
xchg
scas
jmp
inc
adc
(bad)
cmp
push
push
xor
dec
test
cli
js
or
push
pop
in
and
adc
adc
push
fdiv
pop
mov
pop
add
lea
pop
lods
adc
mov
inc
test
xor
jmp
rol
retf
sbb
jg
dec
pusha
je
lea
mov
xlat
sahf
sbb
test
and
loopne
test
fisubr
sahf
dec
sub
push
inc
mov
push
add
and
dec
movs
and
movs
xor
rcl
push
mov
add
loopne
std
mov
sbb
adc
sbb
into
sbb
xor
dec
in
sub
adc
add
cmp
lock
jmp
pop
cli
in
popa
jmp
push
inc
mov
push
sub
sbb
push
pushf
adc
jmp
aaa
ja
inc
loope
add
sub
lock
and
(bad)
hlt
mov
inc
mov
dec
jne
fs
add
add
bound
(bad)
adc
pop
ins
mov
adc
pop
ins
mov
mov
leave
push
add
xlat
lds
push
sti
push
inc
lods
sub
push
adc
or
cmp
and
sbb
sbb
dec
sub
adc
jns
test
into
icebp
out
add
mov
xor
loop
nop
jmp
jne
jl
add
xor
(bad)
fdivr
ret
(bad)
and
mov
sub
push
dec
in
push
adc
retf
fisttp
adc
(bad)
xor
enter
add
xchg
mov
mov
mov
xchg
lea
and
adc
xor
cmp
push
pushf
xchg
cdq
clc
or
lock
or
inc
daa
jne
or
rcr
push
jno
and
push
inc
repz
jnp
xchg
sub
out
dec
ret
push
push
imul
cmovl
or
mov
inc
cmp
push
movs
out
int3
mov
es
test
call
out
jmp
mov
and
mov
inc
sti
mov
mov
sbb
cvtps2pi
jmp
add
or
add
jp
jne
ret
clc
inc
and
adc
je
xor
inc
jecxz
inc
(bad)
and
xor
add
add
arpl
clc
push
retf
repnz
mov
add
adc
inc
mov
sub
loop
enter
ret
push
or
sti
or
mov
enter
rol
js
adc
sbb
push
or
push
jp
push
jmp
xor
adc
loop
or
mov
jle
mov
rcr
mov
jne
ja
btr
pop
cmp
push
stos
das
dec
adc
push
mov
xchg
push
jge
or
or
gs
rcr
jbe
inc
retf
in
inc
dec
jae
adc
outs
fst
lods
sar
in
loop
dec
push
push
aaa
cmc
xor
(bad)
pop
add
jnp
add
dec
cmp
pop
pop
sub
cmps
fst
mov
jbe
(bad)
hlt
cdq
pop
idiv
(bad)
dec
jl
enter
cmp
stos
scas
call
cdq
cmps
push
cmc
inc
xor
rol
imul
adc
mov
mov
jb
dec
ficom
pop
popa
mov
dec
pop
mov
in
dec
pushf
push
pop
push
pop
inc
jmp
mov
mov
dec
fsubr
adc
and
mov
pop
add
iret
jmp
fdivr
push
in
sbb
inc
adc
or
sahf
out
push
repnz
add
or
jge
(bad)
dec
clc
cmp
test
ja
into
push
and
xchg
loopne
mov
lock
push
push
jecxz
xlat
inc
add
or
stos
ret
fcom
fist
pop
inc
sub
fcmovb
in
mov
adc
and
lods
add
add
rcl
cdq
int
cmp
push
in
xor
pushf
test
pop
iret
push
push
sbb
loopne
je
ror
js
call
or
lods
das
lods
popf
jmp
daa
adc
sbb
aaa
mov
jbe
or
imul
sti
(bad)
or
aam
jmp
dec
je
add
aas
cli
dec
sbb
dec
jne
push
pop
jae
push
or
jno
ds
sbb
add
jmp
push
lea
dec
push
mov
and
add
push
mov
push
lea
dec
push
cmp
test
je
pushf
jbe
and
add
ins
adc
xchg
push
lock
addr16
jnp
in
push
jne
mov
addr16
add
dec
or
push
jmp
mov
fs
pop
adc
sbb
imul
and
fist
(bad)
pop
jns
fadd
mov
sub
mov
add
add
cld
push
or
js
dec
mov
xchg
jbe
leave
add
ja
push
jmp
ror
add
dec
jb
sbb
fidivr
jmp
sub
and
mov
pop
jae
adc
or
push
fcom
cmp
sub
je
add
(bad)
js
jp
imul
jae
cld
fisttp
sub
jmp
cmp
jae
pop
add
push
outs
je
jmp
jne
test
inc
push
sbb
pop
loopne
int3
inc
sub
mov
cli
mov
pop
lea
add
sub
jo
xor
sub
adc
or
or
fst
fsubr
add
xor
mov
jns
sbb
dec
and
loopne
shl
or
pmaxsw
arpl
mov
pop
jle
push
aaa
push
pusha
ss
cli
or
out
popf
xchg
pop
lea
xchg
xchg
and
dec
imul
sbb
sub
aam
pushf
push
frstor
sbb
add
or
mov
push
(bad)
sub
add
leave
sbb
pop
jbe
call
push
push
pop
sub
mov
adc
sbb
add
push
push
dec
out
outs
ror
mov
sbb
(bad)
mov
add
adc
retf
push
push
add
dec
cmps
mov
push
inc
lods
movs
fld
push
stos
sbb
mov
or
scas
sub
cmp
push
mul
lea
sbb
jl
inc
inc
xor
bound
jbe
lahf
out
jnp
jns
add
inc
cmp
je
fldcw
cmp
cmp
stc
mov
ror
mov
int
imul
add
sbb
jge
ins
inc
shl
pop
adc
push
lods
mov
inc
dec
or
je
ret
mov
sbb
cmp
xchg
mov
push
call
and
test
pop
inc
mov
cmp
mov
push
hlt
cmps
or
sub
shr
popa
cmp
xor
ins
push
cdq
pop
jne
cs
pop
sets
inc
rcr
push
push
aas
push
inc
fcmovne
inc
push
mov
jg
pop
das
in
(bad)
add
aam
int3
push
push
add
js
imul
mov
fs
(bad)
retf
inc
dec
mov
add
push
mov
xlat
xchg
sbb
js
in
cmps
aad
xor
or
dec
add
lea
jl
xor
lea
jp
jns
aaa
jb
push
sbb
xchg
ins
fmul
add
popa
rol
or
push
aas
and
jmp
dec
and
jbe
hlt
mov
aam
push
push
mov
jl
jge
cli
loop
lods
or
jmp
pop
movs
adc
aam
pop
retf
movs
sbb
lods
into
dec
add
daa
mov
fmul
outs
cmc
jp
retf
push
mov
adc
add
sbb
mov
adc
jge
cwde
push
push
in
call
ds
and
dec
js
js
pop
jp
pushf
mov
jbe
ja
mov
xchg
call
add
enter
movs
pop
xor
and
(bad)
ins
not
cmp
fisttp
jmp
adc
rcr
and
push
repnz
sub
mov
loopne
sub
mov
ja
or
mov
cmp
jne
jbe
dec
call
mov
push
lock
add
jne
push
jecxz
mov
pop
out
dec
movs
mov
retf
pop
or
xor
inc
jae
stc
xlat
repnz
jle
add
or
lock
inc
jp
cmc
fsubr
inc
sar
and
dec
sub
out
dec
das
test
adc
je
mov
mov
jne
mov
loop
into
xlat
jl
repnz
and
loopne
nop
xchg
pop
jl
add
xlat
jnp
cmp
push
sub
and
inc
sahf
dec
retf
mov
(bad)
xchg
add
jl
shl
aad
mov
popf
imul
push
leave
jl
enter
call
mov
jnp
pop
in
loopne
nop
push
add
icebp
mov
inc
mov
mov
and
dec
dec
jno
inc
repz
pushf
xchg
mov
mov
test
ds
jmp
pop
adc
in
xchg
inc
enter
(bad)
pop
nop
and
push
int3
(bad)
push
call
mov
mov
mov
or
jns
out
push
xor
inc
dec
push
pop
add
icebp
arpl
inc
jl
test
xchg
test
sub
push
lds
nop
es
mov
xor
aaa
and
cmp
pushf
pusha
nop
push
xlat
jno
iret
dec
div
push
or
je
mov
(bad)
xchg
icebp
inc
icebp
sub
jne
pop
mov
leave
sbb
repnz
cli
add
(bad)
pop
or
or
mov
shr
mov
test
jne
push
pop
sbb
xchg
stc
xor
loopne
lea
inc
and
cmp
jbe
or
and
repz
dec
add
adc
push
imul
mov
push
inc
data16
sub
adc
sbb
push
push
test
test
mov
(bad)
jmp
idiv
je
movs
pop
test
(bad)
sub
jo
mov
add
es
sbb
or
inc
sub
call
shl
mov
out
int3
xchg
stc
xchg
add
pop
or
inc
lock
icebp
sub
fild
pop
sar
mov
shl
mov
jns
push
push
add
add
mov
dec
xchg
push
std
pop
shl
shl
js
mov
sbb
and
sbb
cmp
push
jp
push
lock
daa
rcr
and
xor
add
pop
loope
inc
loop
js
cmp
and
pop
jbe
jb
sub
push
mov
(bad)
in
je
sbb
adc
cld
add
mov
adc
push
push
lds
shr
push
jo
push
xchg
ins
xchg
xchg
push
clc
mov
or
dec
stc
add
fmul
or
inc
cwde
mov
leave
adc
loope
dec
and
and
sub
nop
mov
xchg
xchg
fstp
xor
fistp
mov
mov
test
pop
int
lods
movs
(bad)
mov
or
mov
lods
mov
cmp
es
xchg
push
and
dec
sar
xchg
mov
adc
stc
ds
out
mov
sub
dec
js
xor
or
(bad)
pop
sub
push
push
int3
adc
push
xor
fdiv
ror
in
push
mov
jmp
sub
leave
sbb
mov
stos
xchg
and
mul
dec
loopne
add
push
dec
pusha
dec
popa
xor
pop
arpl
retf
addr16
(bad)
fcom
sbb
retf
mov
or
pop
pop
popf
enter
shr
les
add
push
out
imul
dec
popf
mov
cld
xor
inc
adc
jo
adc
and
in
xchg
pushw
clc
jno
ins
push
pushf
push
stos
or
ins
repnz
(bad)
adc
cli
ret
mov
add
or
push
loope
shl
push
mov
add
call
ja
int3
call
in
add
and
add
test
clc
or
add
fimul
and
xor
sub
enter
mov
adc
mov
inc
push
mov
adc
jbe
push
inc
dec
das
test
jne
outs
or
pusha
call
fs
add
nop
fcmovu
(bad)
mov
pop
div
dec
cmp
cmc
cwde
(bad)
add
es
mov
dec
push
mov
xchg
call
push
push
jne
rcr
call
imul
repz
mov
rcl
push
in
pop
mov
mov
pop
add
adc
lds
inc
push
push
pop
jmp
ret
push
jmp
jmp
nop
into
fld
push
dec
add
or
pop
enter
js
sub
ins
cmp
fisttp
call
or
loopne
mov
out
mov
jl
ret
jle
mov
popf
jne
sbb
sub
and
push
popf
call
mov
xor
lods
call
pop
cmps
ficomp
or
fdiv
into
pop
add
cmp
sbb
jl
lea
jbe
ja
loope
or
movsx
adc
lahf
jle
test
push
sbb
or
add
repz
les
push
mov
inc
shl
add
lea
(bad)
cwde
sti
or
jnp
pop
fisub
retf
outs
fwait
aam
dec
or
je
or
aam
test
and
ins
fs
pop
or
add
push
retf
in
and
shr
cmp
pop
(bad)
sbb
mov
jl
sub
push
imul
shr
jmp
movs
mov
adc
lods
add
in
sub
jae
adc
stc
lock
or
inc
ins
sbb
inc
ins
add
test
xchg
ficom
mov
ds
xchg
pusha
sub
or
pop
and
push
ss
js
add
mov
sbb
xor
xor
inc
xor
shl
ins
aaa
sbb
imul
outs
and
dec
jae
adc
movs
inc
sub
sbb
call
rcr
inc
adc
add
das
shl
sbb
sbb
jle
inc
je
pop
jge
sbb
push
fadd
and
cwde
mov
inc
xchg
push
jno
movs
dec
call
mov
rcr
pop
jge
push
arpl
add
pusha
call
cmps
xchg
(bad)
jnp
add
jl
or
dec
and
in
js
or
push
xor
dec
sbb
mov
in
add
sbb
mov
add
stos
push
adc
aad
ror
inc
push
ins
cmp
push
jl
jl
xor
jo
int3
cmc
add
jno
pushf
js
test
mov
xchg
sbb
adc
sub
and
movs
test
adc
mov
mov
push
loopne
les
or
inc
data16
xchg
(bad)
icebp
inc
push
adc
(bad)
dec
xchg
jmp
mov
inc
ds
fsubr
cmc
inc
rcr
icebp
rol
movs
push
xor
rol
jl
je
xchg
cmp
pushf
mov
sbb
movs
imul
dec
rcl
clc
inc
mov
in
and
add
addr16
pop
hlt
inc
jmp
or
sub
ss
ins
arpl
fsubr
fwait
pop
or
je
xor
cwde
aaa
gs
cmp
pop
fimul
out
test
mov
and
add
or
mov
and
and
out
sbb
and
shl
cmps
add
fist
push
add
mov
dec
mov
add
xchg
hlt
rcr
cmp
jle
imul
aaa
and
pop
push
out
fs
test
xchg
and
push
sbb
or
out
movs
jo
push
jmp
dec
nop
cmp
pop
repnz
imul
fbstp
out
dec
pop
xor
into
bound
dec
mov
mov
out
imul
push
push
push
popf
mov
pushf
iret
sbb
lods
clc
inc
scas
inc
push
cmp
jne
and
push
sbb
(bad)
aam
xchg
mov
mov
pop
aam
jae
imul
xlat
add
jo
inc
daa
add
adc
adc
and
mov
mov
push
into
mov
adc
fs
mov
je
and
sbb
jle
mov
or
add
or
ror
sub
rcl
jl
jae
add
mov
fidivr
xor
test
or
jnp
lock
mov
adc
lahf
cmp
lahf
daa
mov
or
arpl
pusha
or
sti
mov
and
jnp
sbb
xor
inc
clc
add
push
push
push
loope
hlt
mov
cmp
in
idiv
repnz
sahf
mov
rcr
xchg
sub
inc
cmp
cmp
sti
popf
inc
mov
and
or
inc
add
jmp
stos
mov
add
movs
aas
mov
es
cld
mov
sub
sar
int
inc
sub
pusha
test
std
daa
inc
sub
pop
add
sub
sbb
jmp
cdq
push
mov
mov
loope
shr
mov
adc
pxor
push
and
xor
and
pop
pusha
mov
je
fisub
mov
les
lahf
jne
jae
or
das
adc
push
iret
mov
mov
xchg
cmps
xchg
xlat
mov
aam
add
in
or
adc
movs
fwait
ret
dec
dec
stc
dec
shr
jl
and
xor
cdq
fst
add
inc
cs
jmp
adc
mov
push
pop
jge
push
lock
into
or
or
sub
sub
cmc
mov
xchg
sbb
cld
out
clc
cmp
mul
sbb
or
loope
or
xchg
mov
(bad)
rol
lods
sbb
jge
xchg
pop
jmp
xchg
add
and
ret
nop
inc
fwait
nop
cdq
push
pop
mov
or
cmp
mov
outs
movs
or
lods
cmp
daa
mov
push
aam
or
adc
xor
mov
push
pop
scas
xchg
jmp
adc
add
sahf
int3
int3
mov
pop
ret
mov
std
adc
(bad)
inc
xor
in
mov
mov
test
mov
or
and
dec
pusha
cdq
lahf
xor
test
sub
cmp
les
aam
add
test
or
in
mov
and
sub
je
or
and
jle
int3
push
adc
lods
xchg
jae
cld
jle
scas
pop
jmp
mov
mov
or
jae
jmp
ins
dec
dec
arpl
into
mov
(bad)
aam
mov
sub
adc
add
pop
dec
loopne
fwait
sub
and
rcr
pop
push
push
jno
pusha
mov
das
les
ror
int
mov
gs
mov
(bad)
adc
sti
mov
hlt
mov
xchg
clc
fmul
cmp
lock
shr
add
neg
aas
idiv
push
ins
and
lahf
xchg
test
ja
sbb
jp
add
push
mov
stos
mov
stos
or
lods
(bad)
aam
push
cmp
fsubr
pushf
cmp
out
loopne
push
sub
adc
loopne
xor
pop
cdq
sub
mov
push
inc
and
mov
mov
sub
xchg
(bad)
xchg
sub
and
push
pop
sbb
mov
xor
test
popa
ret
or
or
clc
pop
inc
mov
xchg
mov
out
lds
aam
retf
cld
add
or
add
(bad)
and
or
push
xchg
inc
jae
or
call
add
xor
sub
pop
and
mov
and
nop
xor
and
(bad)
sub
push
jmp
adc
jge
aaa
or
and
pop
mov
sub
retf
xor
and
sub
jg
pop
push
outs
mov
push
aas
xor
inc
shr
sub
lea
into
inc
cmp
mov
stos
mov
xchg
bndldx
mov
movs
or
int3
inc
int3
in
xchg
push
ss
push
dec
js
xchg
mov
shr
mov
test
and
mov
loop
je
cmp
inc
mov
jmp
nop
inc
sbb
cmp
mov
div
mov
push
aaa
fdivrp
xor
and
pop
ret
and
std
cmc
shl
sbb
in
pop
inc
jb
dec
out
jecxz
mov
lods
fldcw
pop
push
inc
jb
cmp
push
arpl
icebp
pop
sub
sub
inc
(bad)
push
adc
inc
push
add
into
aas
sahf
pop
push
ret
mov
mov
mov
mul
jmp
pop
hlt
sub
ins
lds
ficom
pusha
pop
test
fisttp
sub
rcr
adc
frstor
jecxz
loopne
xor
ins
push
mov
xchg
mov
leave
lock
push
add
lock
test
push
ret
mov
fild
int
xor
mov
lods
add
nop
dec
pop
(bad)
cmps
xor
pop
add
xor
push
sbb
popa
imul
(bad)
sbb
adc
add
cld
mov
pop
(bad)
sti
or
pop
lea
cld
dec
xchg
adc
clc
xchg
add
mov
bound
sar
cs
jl
jg
fidivr
into
addr16
or
add
fs
hlt
dec
jo
shr
cmp
sub
cmp
push
push
(bad)
mov
rcr
push
outs
in
(bad)
xchg
cmp
and
and
pop
lds
rol
shr
je
adc
push
add
sub
pop
pushf
mov
mov
ja
dec
retf
lods
retf
test
lds
mov
test
je
cmps
xor
inc
loopne
or
addr16
add
xor
inc
pop
ss
rol
inc
inc
adc
aaa
or
push
jmp
and
add
dec
retf
mov
add
mov
ds
fiadd
inc
add
aas
das
pop
pop
jg
or
data16
jp
push
mov
ret
push
aad
sub
in
dec
sub
outs
sub
mov
sbb
movs
mov
popf
loopne
lea
rol
arpl
fimul
xor
jne
les
jl
loopne
pop
inc
outs
test
jne
cmp
cmp
jp
or
ret
cmp
mov
mov
adc
test
mov
adc
jmp
cmp
popf
xchg
cld
lods
mov
pop
ja
or
in
mov
fdivr
icebp
jl
sbb
xor
enter
and
shl
mov
adc
mov
push
fwait
pop
mov
imul
add
or
adc
cmp
push
cmp
out
cwd
pop
jmp
mov
repz
sbb
cdq
scas
outs
popf
sbb
and
pop
enter
hlt
icebp
jb
rep
xchg
push
inc
int3
mov
out
push
fistp
ins
jne
jp
(bad)
pop
and
pop
mov
ins
jg
adc
jno
cmp
imul
xchg
xor
pushf
pushf
pushf
je
inc
cmp
pushf
pushf
and
(bad)
aam
jo
dec
push
rcr
sahf
xchg
dec
mov
xor
jmp
add
or
loope
push
stos
mov
(bad)
sub
lds
mov
xchg
mov
push
enter
clc
leave
mov
dec
mov
fst
cmc
mov
adc
dec
and
stc
fild
adc
pop
mov
rcr
ffreep
push
xchg
dec
mov
js
add
jns
sub
mov
adc
sbb
jns
or
movs
pop
rcr
mov
cmps
sub
xor
and
in
out
in
popa
pop
enter
je
pop
sub
outs
jno
pop
mov
xchg
sbb
push
jae
jmp
jae
inc
push
jns
(bad)
loopne
ss
mov
cdq
add
mov
mov
movs
outs
cmps
push
jg
loop
addr16
push
dec
xchg
stos
inc
push
cmp
xor
mov
and
pop
lea
dec
mov
pop
test
or
xchg
clc
add
(bad)
and
ret
xor
push
pop
dec
dec
cs
jecxz
push
mov
mov
loopne
inc
xor
aas
inc
pop
aas
inc
dec
pop
adc
lods
jmp
(bad)
jg
fcom
sub
call
lods
or
in
loopne
mov
lea
adc
mov
int3
dec
je
adc
push
fcomp
aaa
mov
sub
jae
sub
add
loopne
pop
or
push
fstp
and
jnp
push
sahf
pop
ror
dec
push
add
jb
jmp
pushf
jns
xchg
or
inc
(bad)
mov
jns
xchg
or
add
and
loopne
push
enter
jns
push
jo
add
inc
pop
and
cli
aam
fs
loopne
sbb
enter
test
les
push
sub
push
pop
(bad)
cmp
adc
mov
push
or
pop
add
outs
movs
bound
mov
scas
inc
push
lods
scas
sahf
out
or
sub
pusha
loopne
fxtract
std
inc
cdq
scas
adc
dec
cmp
push
fidiv
inc
lea
mov
test
cli
and
mov
aam
push
mov
xrelease
push
clc
xchg
mov
xchg
cmp
push
mov
jne
push
pop
rcl
pop
cmp
mov
push
adc
xor
pop
push
movs
dec
ret
sbb
loop
pop
pusha
das
mov
or
fsubr
add
rcl
adc
and
cdq
xchg
bound
bound
test
lds
jb
sub
push
add
dec
iret
hlt
in
neg
jne
or
cmp
and
nop
int3
sti
mov
sbb
adc
stos
cmps
fisubr
sbb
xor
rcl
jo
sbb
ror
inc
ss
xchg
neg
pop
push
sbb
add
cs
xchg
add
(bad)
jl
sbb
sub
ret
and
pop
or
add
push
sub
mov
adc
or
lock
xor
hlt
dec
xor
sbb
or
rcl
xchg
icebp
add
fld
cs
or
outs
stos
add
adc
mov
and
hlt
add
sbb
push
add
or
popa
or
mov
sbb
push
dec
shl
aaa
sbb
ror
outs
cmp
dec
and
jo
test
mov
out
pop
and
push
mov
push
popf
out
cli
or
add
ja
push
mov
shr
shr
xchg
rcl
pop
aaa
mov
push
cmp
retf
and
cld
ficom
push
xor
adc
arpl
mov
mov
push
inc
inc
cld
pop
jae
add
dec
and
loopne
dec
jge
retf
(bad)
push
or
mov
sti
xchg
into
dec
push
mov
sbb
pushf
adc
mov
xchg
ins
mov
in
leave
sub
mov
cmp
call
lea
cmp
ja
mov
sbb
sbb
and
cld
jmp
pop
mov
movs
(bad)
adc
das
sbb
ja
fcomp
clc
mov
jg
je
test
ja
jge
sbb
stos
xchg
das
mov
pop
mov
adc
push
movs
inc
add
add
cmp
and
iret
add
jno
mov
dec
mov
mov
push
cmp
je
lods
bnd
mov
shl
xor
pop
jge
mov
cmp
jne
mov
fisttp
add
cmp
std
jne
sub
(bad)
jmp
sub
ins
popf
(bad)
xchg
sub
jmp
jo
or
xchg
rol
push
and
add
pop
lods
sti
mov
push
mov
mov
arpl
mov
inc
(bad)
pop
call
shr
xor
inc
shl
into
std
mov
in
push
jmp
lock
sbb
jae
xchg
fist
enter
test
jge
scas
aas
rol
jnp
jae
cmp
call
sbb
lods
shl
jne
sahf
sbb
pop
inc
push
leave
inc
clc
add
int
leave
xor
adc
or
jmp
inc
in
leave
add
cmc
std
std
mov
mov
cmp
retf
scas
jmp
mov
inc
add
mul
xor
(bad)
dec
frstor
adc
push
out
xor
mov
and
or
inc
xchg
dec
push
push
dec
jne
mov
dec
sbb
lods
test
mov
idiv
fnstsw
test
mov
inc
dec
jne
mov
stos
mov
jmp
or
add
data16
cdq
push
jnp
cmps
cmp
adc
adc
jo
sbb
and
add
pop
callw
js
xchg
popa
push
test
push
and
test
add
das
sar
push
cmp
xchg
sub
lods
ja
pop
xlat
add
xlat
pop
rcr
pop
sbb
dec
cmp
shr
dec
shr
(bad)
pop
push
xlat
test
ins
jmp
add
sub
push
imul
and
dec
sar
jb
mov
or
push
inc
ret
sub
jge
into
dec
out
fucomip
push
ror
call
and
(bad)
jge
mov
mov
add
scas
add
ret
cmp
or
test
sbb
jge
inc
cmc
mov
jmp
popf
jmp
and
cmp
imul
(bad)
movs
mov
lock
and
stos
pop
pusha
and
jns
push
movs
imul
fiadd
xchg
dec
cmp
js
sbb
mov
lea
inc
jne
fimul
test
jnp
xor
(bad)
gs
in
aaa
cmp
xchg
xchg
test
pop
ret
adc
sub
add
pushf
sub
imul
inc
xor
pop
sub
sub
pusha
sub
inc
clc
retf
push
cmp
outs
sar
shl
and
pop
ja
movs
sbb
mov
xor
movs
or
xor
push
sbb
ficom
sbb
add
or
mov
rcl
cwde
shr
cmp
test
sbb
jno
aam
jle
jg
je
call
js
test
pop
cld
(bad)
inc
add
add
inc
and
movs
or
mov
or
and
and
push
mov
in
xor
addr16
out
nop
lock
or
pop
sbb
pop
jecxz
sub
lock
lods
or
sub
or
or
lea
(bad)
ins
leave
mov
pop
mov
aas
sub
mov
jmp
pop
push
fld
sub
jb
ret
or
add
pushf
or
test
or
mov
inc
mov
std
ss
mov
mov
lods
push
push
push
pusha
mov
sub
or
aas
push
scas
jo
sbb
cs
pop
sub
mov
mov
fdivr
inc
(bad)
shl
pop
data16
add
push
bound
add
mov
(bad)
adc
dec
add
push
(bad)
add
test
mov
inc
fstp
inc
mov
mov
xchg
mov
jg
sbb
shr
imul
cmp
fidiv
adc
ret
or
clc
and
pop
dec
scas
or
test
sub
enter
push
push
ds
mov
adc
mov
mov
push
clc
and
mov
or
xor
sub
test
shl
pop
test
pop
iret
push
adc
retf
xchg
outs
clc
mov
xchg
xor
xor
jb
pop
cmp
inc
mov
jb
dec
pop
cmp
xor
and
pop
pusha
cmp
sbb
jmp
push
mov
test
lahf
ds
mov
jbe
and
pop
dec
(bad)
enter
mov
jmp
mov
loope
ins
jg
cmp
adc
ror
sar
and
lods
or
outs
mov
add
ror
mov
mov
mov
dec
dec
rol
mov
es
es
adc
(bad)
ds
mov
inc
je
shl
pop
les
imul
out
cmp
mov
add
or
dec
or
pop
nop
cdq
aad
(bad)
xor
pop
add
pop
xor
mov
arpl
mov
inc
(bad)
jne
cmp
push
inc
sub
dec
adc
xchg
mov
adc
cmp
pusha
lods
js
add
rcr
(bad)
sub
loopne
or
push
js
push
sub
inc
js
sub
mov
lods
std
jle
push
inc
add
or
cmp
add
pop
clc
mov
sub
add
sbb
or
add
test
jmp
bound
pxor
push
push
lock
jg
cmp
jg
call
out
(bad)
fistp
jg
push
inc
adc
and
pop
test
pusha
jo
mov
dec
jne
shl
pushf
push
mov
jg
ins
mov
or
xor
mov
je
xor
fistp
add
mov
dec
adc
shl
push
xor
hlt
mov
sbb
cli
pop
pop
ret
outs
fcmovnu
or
sbb
shl
add
or
dec
ja
shr
add
icebp
aaa
test
push
mov
add
or
pop
in
adc
xchg
lods
xchg
cmp
mov
adc
adc
arpl
push
adc
and
pop
mov
push
adc
and
not
and
dec
and
push
and
(bad)
mov
ins
aaa
call
movs
push
adc
loopne
ja
mov
cmps
or
clts
pop
mov
and
movs
sbb
push
add
retf
lahf
and
dec
or
gs
xchg
(bad)
test
add
adc
je
push
or
or
inc
add
xor
aam
ss
or
outs
inc
or
mov
push
call
int
push
rcl
in
dec
add
sub
fnstcw
enter
out
and
mov
jno
xchg
mov
jp
and
repnz
mov
das
mov
xor
mov
sbb
outs
dec
sub
dec
add
and
sbb
sub
cs
add
sbb
and
sar
sbb
pusha
pop
inc
fld1
loopne
or
xchg
dec
cld
and
or
stc
shl
push
int
or
fwait
xchg
jmp
dec
js
jmp
mov
mov
mov
pop
adc
aam
dec
repnz
fmul
fst
mov
sub
adc
pop
icebp
lds
and
adc
loop
nop
lods
int3
dec
mov
cmp
repz
mov
iret
repz
jmp
pop
push
in
push
scas
jge
mov
rcr
js
es
mov
add
int3
and
cdq
in
stos
push
cmp
mov
jb
push
inc
pop
push
mov
imul
int3
sbb
and
push
ja
std
test
cdq
jmp
inc
fadd
or
or
jmp
test
and
inc
xor
jmp
sti
iret
mov
xchg
and
ret
and
push
push
test
mov
sub
pop
or
mov
jo
adc
jge
aam
cld
outs
mov
test
cld
div
adc
xchg
xchg
(bad)
and
pop
push
mov
sbb
jl
add
jg
xor
jle
mov
sbb
sub
mov
sbb
shl
je
jmp
bound
add
loopne
inc
out
sbb
popa
out
or
inc
cmp
sbb
pop
pusha
xchg
aad
adc
or
clc
adc
loop
ret
or
adc
xchg
dec
cwde
or
xchg
ds
jl
mov
jbe
repnz
jne
cmp
outs
jnp
(bad)
mov
sub
dec
add
jmp
movs
pop
mov
or
data16
jb
mov
pop
and
xchg
std
mov
lods
std
ror
jmp
jne
xchg
xchg
xchg
add
cmp
adc
xchg
dec
rol
inc
xchg
dec
ror
push
inc
dec
push
stc
test
mov
jno
or
gs
cmp
sbb
xchg
test
mov
(bad)
imul
mov
push
ret
call
mov
jns
mov
enter
shl
ror
push
xchg
enter
mov
xchg
out
inc
mov
mov
mov
pop
and
cmps
mov
pop
cs
int3
pop
or
add
sub
xor
sub
xlat
es
lock
pop
push
ins
ds
popa
mov
jns
idiv
jb
inc
xor
lods
es
adc
adc
mov
fsub
cwde
pop
xor
or
inc
sbb
test
sub
dec
cmp
inc
sub
jo
lods
pop
aad
pop
pop
inc
call
ss
cmp
ret
add
cmp
xor
mov
mov
cmp
push
outs
ss
cmps
rcl
js
pop
xchg
cmps
loop
push
mov
and
and
ret
clc
adc
mov
mov
push
pop
fimul
mov
stos
(bad)
pop
inc
in
test
es
inc
push
cmp
mov
pop
mov
ror
push
or
stos
nop
cmp
out
xchg
mov
or
or
and
mov
pop
les
jne
xor
adc
test
mov
push
adc
loopne
push
ins
cwde
imul
rol
or
les
add
shl
sbb
jg
mov
jg
or
cmp
sahf
cmps
aam
sub
jnp
mov
pop
aam
mov
adc
fcomp
pop
fnstenv
adc
inc
cs
rol
adc
xor
sbb
add
mov
mov
push
dec
cmp
adc
cs
fwait
sub
fwait
cmp
outs
inc
sbb
jns
jl
out
scas
mov
and
test
test
add
jae
mov
or
jo
in
sub
xor
sub
fdivr
jecxz
inc
fstp
and
loopne
cmp
add
or
jl
adc
pop
scas
loopne
mov
mov
push
fisub
adc
sar
and
cmp
je
pop
clc
jmp
cmp
mov
xchg
xor
mov
test
stos
test
ficomp
sar
dec
int
mov
xchg
lea
add
mov
push
fsubr
pushf
adc
cmp
ins
inc
lahf
xor
cmp
lahf
js
in
push
jl
lds
in
imul
hlt
and
sub
push
inc
scas
xchg
dec
or
scas
add
push
mov
adc
and
mov
xor
aad
je
mov
mov
fisubr
adc
test
dec
sbb
pop
adc
fcom
(bad)
neg
ret
cmps
push
cmp
movs
jmp
das
daa
movs
adc
movs
cmp
cmp
jne
enter
or
lods
or
mov
pop
inc
bt
xor
cmps
xchg
fadd
pop
or
sub
push
and
push
ficom
inc
add
inc
jmp
dec
cs
leave
add
jb
shl
ss
sti
das
adc
mov
xchg
xchg
inc
fiadd
fwait
sub
fstp
ja
mov
or
push
sub
in
inc
clc
sub
or
adc
sti
pop
and
int3
mov
mov
sub
(bad)
pop
mov
cmp
sbb
fwait
push
not
mov
push
sahf
xchg
or
inc
pop
sub
fst
mov
mov
test
mov
sub
jno
jmp
mov
out
pop
add
hlt
in
pop
add
mov
xchg
add
hlt
push
nop
xchg
loopne
add
loope
outs
sbb
cmps
jmp
sbb
push
ret
jne
enter
dec
push
add
je
or
stos
xchg
adc
ja
inc
adc
imul
ret
mov
fisubr
pop
call
xlat
ret
mov
mov
jno
xor
rol
cmp
ds
repz
nop
pop
ror
leave
test
pushf
add
test
add
(bad)
pop
mov
fsub
(bad)
push
sub
xchg
sbb
mov
ret
pop
push
pop
lea
leave
or
js
rol
aas
cmps
out
icebp
loope
pop
ss
jnp
scas
popa
sbb
retf
push
inc
repnz
sub
leave
lock
ret
pop
add
xor
aaa
aas
dec
loop
lods
outs
aas
pusha
aas
aaa
xor
mov
adc
into
xor
inc
xor
push
aad
inc
pop
sbb
and
inc
movs
sbb
inc
addr16
mov
aaa
or
mov
lods
inc
mov
and
dec
sub
add
or
mov
and
add
fs
retf
sbb
call
movs
aad
daa
inc
cs
cmp
aad
jmp
xchg
dec
outs
fsubr
and
iret
enter
mov
sub
outs
and
inc
(bad)
aas
nop
mov
add
and
jl
dec
cld
push
outs
dec
(bad)
push
dec
cwde
inc
nop
or
and
sub
adc
lea
cmp
dec
sub
test
test
xchg
pushf
pushf
sar
pop
mov
stos
pop
jecxz
adc
(bad)
addr16
and
sbb
cmp
je
inc
dec
mov
repnz
and
and
cwde
pushf
daa
add
and
enter
mov
cmp
pushf
nop
add
pushf
cwde
add
in
mov
pushf
jmp
(bad)
js
popa
ss
or
hlt
mov
xchg
call
sub
jmp
repz
mov
mov
sbb
xor
mov
ret
mov
mov
mov
ret
sub
test
mov
xor
mov
popf
aam
or
pop
pop
add
test
xchg
sbb
sbb
push
pop
cmp
lods
push
sbb
icebp
xor
and
cmp
xor
fsubr
push
jmp
cmp
ja
fstp
add
push
jg
mov
test
sbb
mov
and
verr
jno
pop
mov
jl
inc
movs
dec
pop
sbb
pop
or
lock
mov
shl
jl
ret
jne
mov
mov
jb
adc
inc
sbb
mov
sub
movs
push
daa
adc
and
shr
inc
(bad)
and
or
(bad)
cmp
icebp
push
sbb
loope
shr
je
out
sti
dec
test
fwait
pop
outs
push
push
dec
adc
push
shl
and
jle
dec
stc
jl
iret
push
pop
outs
inc
or
jbe
cmp
xchg
lock
cmps
outs
ja
mov
jg
lea
mov
jo
in
int3
test
(bad)
pop
ffreep
lea
lea
inc
out
mov
and
cmps
in
and
mov
xor
cmps
mov
pusha
arpl
or
inc
push
neg
sti
(bad)
lock
mov
retf
ret
mov
adc
pusha
das
shr
dec
inc
inc
push
(bad)
and
xor
pop
into
sbb
or
mov
or
retf
fdivr
push
dec
cmps
or
call
and
push
push
dec
or
rcl
add
jecxz
add
or
hlt
sbb
stos
add
jmp
mov
xor
hlt
cs
xor
(bad)
mov
and
mov
mov
outs
clc
pop
or
sub
cmp
adc
and
out
inc
cmp
and
cmp
test
cmp
scas
imul
xchg
or
dec
pop
add
mov
adc
rcl
out
sub
movs
(bad)
out
add
xor
inc
cmp
rol
in
shl
pushf
adc
(bad)
cli
add
mov
add
add
pop
and
pusha
sub
add
js
push
jne
cld
jle
and
or
stc
mov
mov
mov
pop
sbb
repz
cmp
pop
sub
add
or
dec
cmp
(bad)
mov
cs
mov
dec
xlat
mov
pop
pop
mov
pop
push
popa
sbb
mov
jmp
rcl
push
loopne
sahf
pop
cwde
shl
dec
clc
sbb
out
ins
loope
mov
pop
cmp
push
adc
mov
pop
movs
ror
sar
or
jmp
inc
or
adc
push
out
push
inc
pop
or
bound
test
push
(bad)
pop
cmp
clc
adc
and
xchg
cmps
out
movs
inc
push
adc
push
cmp
fsub
sbb
ficom
adc
gs
jmp
outs
xchg
mov
sub
push
jbe
add
gs
jle
jecxz
fadd
xchg
shl
and
xor
pop
add
inc
dec
and
inc
pusha
je
lods
mov
pushf
cdq
fs
out
dec
adc
cmp
add
stc
inc
xor
adc
pop
xor
sbb
shl
or
xor
adc
push
sbb
pop
or
mov
add
xor
std
jbe
cwde
sar
cld
enter
or
jne
push
pop
add
dec
sbb
adc
adc
popf
shl
mov
addr16
add
scas
fld
out
sub
fidivr
movs
adc
xor
mov
inc
cs
retf
shl
stos
mov
add
dec
mov
and
xchg
or
push
mov
jmp
adc
and
popa
push
pop
jle
in
sbb
cld
add
or
cmp
sbb
or
jmp
or
push
mov
pop
std
cmp
cli
adc
xor
in
sub
pop
and
out
jo
shl
shl
fcomi
js
cmp
mov
mov
and
scas
(bad)
and
mov
clc
int3
adc
ficomp
push
lock
inc
scas
shl
call
push
cmp
int3
jae
lea
add
gs
add
push
xor
out
fst
icebp
cmp
lea
push
xchg
and
mov
shl
dec
adc
fldenv
ror
pusha
inc
or
rol
pop
loopne
push
push
je
cdq
jp
call
clc
(bad)
push
sub
lea
push
fldcw
pushf
test
mov
push
cmps
mov
int3
test
pop
dec
mov
push
push
pop
push
int
daa
add
fadd
mov
nop
sbb
mov
mov
push
popa
lock
mov
mov
adc
mov
and
xor
dec
out
mov
repnz
int
mov
jmp
inc
xchg
call
push
add
scas
inc
add
add
mov
push
push
fidivr
cmp
movs
or
stos
add
push
add
and
daa
and
jle
fadd
add
xor
aas
loopne
jnp
cmp
or
ror
and
into
adc
std
sub
shl
xor
jl
inc
sbb
xor
jb
dec
inc
popa
int3
retf
pop
push
sar
dec
or
jmp
or
sbb
cmp
pop
ret
add
xor
jmp
jns
fadd
bound
mov
push
and
inc
jo
aad
add
dec
mov
repz
aaa
inc
sti
push
push
or
jmp
(bad)
mov
add
or
(bad)
mov
test
sbb
cmps
inc
sub
push
aaa
xor
push
mov
leave
mov
mov
jne
jmp
shl
or
je
push
mov
dec
mov
add
add
jmp
push
pop
loope
add
nop
adc
push
push
mov
aam
cwde
cwde
sub
lods
lea
add
dec
cmp
adc
inc
mov
out
stos
bound
mov
push
div
pop
dec
call
cld
xor
inc
and
retf
out
push
paddusb
push
fcmove
dec
or
and
mul
push
pop
int3
dec
mov
test
mov
sbb
or
mov
movs
xor
fiadd
jb
adc
outs
je
push
mov
adc
mov
mov
sti
ins
push
pusha
push
sbb
out
leave
neg
push
sub
push
lock
jb
inc
jb
mov
int
dec
fs
dec
mov
add
and
cdq
movs
out
add
fist
ret
popf
mov
or
xor
imul
xchg
xchg
leave
mov
xchg
das
push
push
jb
pop
sbb
aas
cmp
push
and
lahf
ffreep
push
jnp
inc
cmp
fld
loopne
daa
jg
(bad)
out
loope
dec
xor
xor
add
stos
stos
or
in
add
lock
xor
mov
inc
adc
jmp
jge
inc
mov
pop
inc
dec
mov
dec
dec
test
adc
xchg
xor
in
retf
or
std
inc
test
inc
mov
lods
and
inc
dec
or
dec
adc
dec
fs
dec
(bad)
push
pop
test
mov
xchg
pop
pop
mov
lods
xchg
xor
pavgw
dec
dec
add
xchg
imul
leave
xchg
inc
in
pop
scas
sbb
test
pop
inc
or
lock
adc
jne
add
imul
sub
mov
mov
and
xor
push
clc
stc
mov
push
div
pop
stos
and
outs
dec
data16
dec
call
ret
lock
or
pop
int3
and
push
push
mov
adc
or
and
jle
mov
dec
cmp
test
dec
inc
jb
not
mov
cs
mov
inc
push
sbb
jecxz
xor
pop
and
or
add
xchg
pop
inc
xor
sub
add
scas
or
imul
add
ins
push
into
mov
std
call
and
aas
dec
push
mov
jmp
test
hlt
in
out
pop
rcr
(bad)
adc
xchg
jno
inc
pop
(bad)
(bad)
sbb
shl
or
and
into
(bad)
mov
ins
sbb
outs
enter
or
stos
inc
jns
ret
ss
ja
mov
ja
test
pop
test
add
test
ficom
lea
xchg
push
aas
rol
rol
clc
lock
loop
pusha
ss
lods
and
or
push
call
and
or
sbb
sbb
pop
loope
outs
adc
pop
lea
inc
movs
adc
enter
push
adc
mov
or
sbb
jb
sub
add
cld
les
jb
mov
pop
xchg
inc
xor
fadd
ret
sub
jmp
jmp
pop
push
ror
rol
pop
adc
push
or
neg
ret
adc
push
lock
mul
neg
mov
(bad)
lsl
jmp
push
pop
push
push
pushf
sub
jmp
rcr
or
mov
repz
dec
fld
retf
dec
test
mul
pop
jb
rcr
mov
jb
cmp
or
xor
and
aas
iret
pusha
push
adc
or
ficom
push
push
inc
(bad)
retf
iret
adc
or
ret
adc
dec
(bad)
and
sub
cmp
mov
test
cmp
cmc
inc
in
sub
aam
shl
mov
mov
xchg
daa
or
xchg
or
(bad)
xor
xor
xor
jb
mov
push
pushf
ds
cmp
stos
or
adc
push
dec
mov
inc
(bad)
daa
enter
mov
dec
loop
out
leave
cli
and
adc
xchg
inc
inc
and
add
lods
in
mov
sbb
mov
xlat
inc
loopne
icebp
mov
push
repz
push
pop
inc
clc
pop
xor
movlps
imul
ins
or
and
loop
ret
and
push
bts
pusha
enter
mov
(bad)
and
add
rcr
dec
fist
sbb
add
push
pop
cmp
cwde
movs
retf
jo
add
cmp
mov
sub
inc
xor
adc
icebp
pop
mov
mov
jne
push
add
adc
sbb
pop
inc
cmp
mov
and
rol
and
(bad)
adc
es
(bad)
(bad)
loopne
sbb
dec
dec
mov
loope
push
adc
jmp
ror
add
xor
pop
or
nop
add
or
jb
nop
push
ins
mov
enter
test
dec
mov
ret
mov
outs
mov
leave
in
ret
jns
lods
xchg
retf
movs
sbb
lods
fdivr
into
pop
sub
ins
ja
cmovnp
dec
cmp
push
sub
sar
xchg
jne
popa
ja
sub
je
mov
or
adc
dec
mov
sub
mov
sbb
push
inc
push
adc
cmp
xor
and
test
lds
inc
fisub
push
add
xchg
add
imul
(bad)
frstor
idiv
sbb
aam
rol
add
sub
mov
push
jbe
outs
sub
push
fisttp
push
mov
push
push
mov
or
test
push
imul
jmp
adc
outs
push
repnz
or
adc
or
adc
adc
dec
movs
frstor
dec
out
cmp
(bad)
(bad)
fsub
icebp
out
jne
inc
sbb
aam
or
jnp
cmp
fidiv
das
rol
cmp
push
mov
mov
dec
add
sub
mov
mov
daa
mov
cmps
adc
sub
cmc
mov
adc
inc
jmp
fisttp
cli
js
(bad)
lds
cmp
mov
mov
imul
shr
sbb
cmc
aas
sbb
inc
or
cmp
dec
push
sbb
cwde
in
inc
jecxz
daa
outs
je
dec
loopne
cmps
sar
or
pusha
pop
fdivr
lock
xor
icebp
xor
dec
or
and
add
ins
jne
push
adc
mov
or
inc
shr
dec
mov
stos
into
mov
add
pop
mov
fild
cmp
jge
push
xor
jae
(bad)
out
imul
add
push
and
mov
cwde
inc
pop
sbb
scas
add
sub
push
xor
sti
jl
push
pop
inc
rcl
sti
aas
jmp
cli
and
shl
sbb
xchg
and
pushf
or
popa
cmc
fstp
js
mov
cld
or
cmp
mov
mov
retf
mov
and
jo
add
div
mov
sub
rcl
mov
(bad)
or
or
sub
and
adc
add
mov
dec
dec
xchg
in
int3
or
imul
repz
pop
cmp
or
sub
xchg
xchg
lock
ja
ins
lods
sti
(bad)
sub
inc
adc
mov
sbb
xor
mov
push
mov
shl
clc
scas
push
fs
push
xor
sbb
mov
or
xor
mov
push
jmp
xchg
cli
adc
jg
and
lea
lea
or
fdivr
jnp
out
sahf
fdiv
add
jo
loopne
mov
pop
js
mov
inc
add
dec
sbb
xor
dec
cmp
sbb
enter
rol
push
aaa
add
jl
repnz
or
js
mov
ss
sti
cdq
dec
and
push
add
jno
push
lods
or
mov
popf
inc
xchg
arpl
xor
test
jp
stos
jmp
push
inc
cmp
ds
sbb
push
push
push
popa
add
and
enter
and
adc
sbb
and
sub
(bad)
cwde
add
and
xchg
jo
cmp
(bad)
pop
dec
xor
test
scas
cmc
sbb
retf
jne
sub
call
xor
in
pop
and
add
aas
push
push
pop
xchg
sar
outs
add
mov
cmps
inc
pop
ds
or
es
daa
mov
add
ja
scas
call
jecxz
mov
sbb
es
loopne
jbe
pop
pop
cmp
cmps
ins
push
add
cmp
test
movs
fld
push
fadd
or
rol
imul
lock
test
loopne
mov
jmp
or
retf
call
cmp
rcr
push
imul
dec
clc
das
xor
sahf
push
popf
mov
gs
adc
push
cmp
jae
test
adc
dec
lods
das
sbb
shr
add
inc
cmp
(bad)
ret
xchg
adc
push
out
adc
icebp
inc
mov
mov
icebp
ins
bound
es
push
xchg
aam
enter
or
or
das
call
sub
mov
aaa
jno
add
inc
fisttp
xor
addr16
outs
popf
mov
jmp
mov
int
push
leave
fcmovb
pmaddwd
adc
cmps
push
cmp
stos
jo
add
pop
ret
loope
sub
jl
adc
push
mov
push
push
nop
rcr
inc
push
dec
mov
cwde
or
dec
movs
mov
dec
and
dec
adc
fprem
pop
cwde
push
lods
mov
cmp
in
or
jle
ror
or
push
mov
cs
imul
xchg
scas
mov
mov
and
mov
add
add
add
mov
push
cmp
or
add
cmp
sbb
or
movs
jp
inc
or
push
jmp
mov
jb
test
stos
popf
add
inc
adc
and
push
pop
mov
das
cwde
cmp
jle
sbb
clc
or
cmp
xor
sbb
jmp
dec
push
ss
or
cmp
xchg
xchg
cmp
add
cmp
cld
pop
push
test
clc
pop
lock
inc
sbb
sbb
ins
xchg
test
mov
sub
ret
adc
clc
pop
jge
(bad)
jnp
jae
mov
idiv
jbe
nop
sti
lods
dec
mov
movs
jne
out
dec
jae
imul
sbb
aad
cmp
loope
jmp
and
outs
mov
rcl
bound
fisubr
sub
dec
mov
or
pop
adc
fidiv
mov
lods
mov
scas
mov
lods
sub
xchg
mov
test
mov
js
push
mov
jge
pop
xor
nop
mov
mov
or
cmp
div
scas
mov
add
inc
test
or
inc
jmp
sbb
cmp
pop
dec
mov
clc
cmp
cmp
leave
fdiv
lea
cmp
fcom
or
jecxz
push
mov
inc
jmp
cmp
pop
xlat
shl
xor
mov
pop
shl
dec
push
hlt
lock
or
jne
pop
jno
lods
repnz
cmp
rol
jb
dec
adc
push
inc
sbb
xlat
test
cmp
sti
es
sar
add
into
outs
sbb
inc
ret
sub
xor
mov
push
mov
adc
add
push
loopne
int3
ss
lods
sar
add
mov
mov
sbb
ss
lea
push
data16
movs
and
mov
lea
enter
xchg
mov
out
add
jne
mov
call
shl
rol
or
mov
sbb
nop
inc
imul
and
cmps
pop
mov
push
or
mov
mov
mov
std
and
mov
test
out
jne
test
xchg
lock
out
mov
push
call
and
adc
cmp
pushf
and
sahf
cdq
xor
test
mov
or
(bad)
jb
cwde
xchg
test
push
pushf
fstp
lea
call
or
adc
icebp
ret
add
sub
push
jg
xor
cmp
jb
mov
push
mov
inc
ja
js
pop
lods
inc
cmp
ins
mov
xchg
pushf
mov
ins
dec
mov
sbb
sti
jg
add
add
rol
fs
xchg
push
inc
inc
aam
call
fwait
cli
test
shr
aas
or
push
jge
adc
into
movs
mov
sub
inc
mov
add
into
neg
lods
lods
(bad)
jl
sti
pop
push
shl
shr
or
mov
mov
dec
mov
jne
outs
mov
mov
aam
(bad)
mov
ja
push
cmp
test
sub
(bad)
rcr
ficom
add
fiadd
mov
dec
lock
jmp
jmp
or
push
lods
push
jnp
(bad)
mov
popa
icebp
push
sbb
nop
mov
aam
add
push
jl
dec
int3
int3
jmp
adc
or
daa
mov
and
jmp
lods
daa
(bad)
es
rol
push
jae
dec
and
les
les
add
sbb
imul
jne
push
retf
xchg
jmp
sub
cmp
add
adc
call
mov
inc
mov
(bad)
inc
aaa
sub
mov
mov
and
pop
repz
inc
add
push
and
stc
cmp
rcl
shl
cmp
cmps
sub
pusha
fdiv
faddp
dec
rcl
inc
jne
test
adc
sbb
mov
mov
add
mov
pusha
es
addr16
int3
sbb
ss
pop
add
add
cmp
retf
(bad)
int
add
and
fadd
lock
dec
pop
in
arpl
mov
push
or
dec
cmp
ins
xchg
or
in
or
bound
shl
ret
add
add
rcl
repz
mov
mov
mov
pop
mov
rol
imul
and
xchg
cld
int
imul
mov
mov
or
shr
pop
lea
cmps
dec
fwait
mov
and
jbe
add
xchg
mov
inc
jl
sub
call
ret
les
ret
in
jnp
xchg
or
xor
shl
xor
jne
jne
lods
adc
dec
push
inc
adc
pop
add
mov
mov
rol
push
(bad)
sbb
mov
leave
inc
xor
call
xchg
or
jge
sbb
fdiv
inc
rcl
or
pop
leave
add
cs
push
(bad)
lock
and
loope
sbb
or
or
(bad)
data16
mov
and
jmp
ret
jmp
mov
retf
stc
pop
cmc
push
movs
inc
jmp
mov
and
jnp
pop
fimul
xor
out
or
aam
fild
enter
cmp
ds
(bad)
push
lea
add
jle
pop
mov
add
sar
mov
aas
or
add
loop
or
dec
adc
xchg
sbb
(bad)
mov
into
add
and
psadbw
jge
mov
shr
cmc
lods
push
cdq
lods
loop
pop
xor
cmp
sbb
or
dec
push
and
mov
push
inc
push
mov
js
cli
mov
jo
pop
pusha
cmp
ror
push
push
ds
sbb
ret
test
or
cmps
push
sub
xchg
add
es
inc
mov
cmp
add
mov
iret
or
mov
add
mov
mov
fst
push
hlt
mov
and
jecxz
and
shr
pusha
and
pop
imul
sub
add
mov
enter
cmps
ror
movs
test
sbb
popa
xchg
xchg
lock
inc
call
jmp
ret
mov
outs
mov
inc
xlat
test
dec
hlt
rcr
lea
lods
inc
cmp
fwait
jnp
xor
pusha
setne
inc
dec
add
sbb
lea
je
xor
jns
or
lods
inc
xchg
scas
mov
and
aam
push
dec
mov
inc
cmps
int
push
jnp
imul
(bad)
push
or
pop
daa
cmp
mov
(bad)
aas
sbb
es
test
jne
popa
inc
xchg
xor
icebp
pusha
cmps
sbb
jnp
sub
repz
push
jmp
inc
sub
ret
sub
push
scas
pop
jl
loop
pusha
dec
iret
test
inc
add
mov
add
arpl
sbb
sbb
inc
pop
fisttp
cmp
test
push
mov
inc
mov
movs
xchg
loopne
sbb
dec
xor
push
mov
ret
data16
or
inc
mov
xchg
retf
int
clc
adc
cmp
pop
cwde
mov
mov
cmp
jne
push
inc
pushf
shufps
mov
push
add
adc
aad
gs
xchg
sub
sub
lea
mov
fisttp
jne
clc
fidivr
sub
xor
sub
add
adc
int
shl
jbe
fs
pop
or
loopne
jns
adc
fiadd
into
or
sbb
mov
pop
addr16
add
test
sub
and
in
dec
mov
jmp
into
sbb
(bad)
movs
jne
sbb
mov
stc
cmp
loope
cmp
jmp
inc
add
sbb
sti
leave
add
push
or
sub
lock
lods
shl
es
and
adc
adc
dec
ficomp
pusha
mov
add
adc
mov
call
retf
jmp
inc
mov
nop
sub
rcr
outs
fucom
retf
icebp
sbb
jae
push
imul
lods
cmp
cmps
sub
in
into
xchg
call
je
inc
test
add
or
cmp
add
je
xor
rcr
and
sbb
cmp
cmps
or
jmp
adc
outs
shr
add
xchg
adc
mov
call
cmp
stos
ret
pop
test
icebp
and
adc
loop
xchg
push
xor
or
xor
js
sbb
pusha
xor
sbb
mov
mov
ret
add
out
adc
out
or
adc
inc
jns
or
test
push
xchg
add
nop
adc
push
xor
cs
test
cmp
aam
mov
pop
adc
sub
ret
mov
and
cmp
pop
shl
add
rcr
mov
or
sbb
jecxz
xor
lock
add
mov
sbb
cmp
xchg
push
pop
call
jmp
test
push
pop
adc
cmps
jecxz
enter
jl
(bad)
jmp
sbb
cmp
inc
add
js
pop
sbb
jmp
pop
xchg
sbb
scas
popa
push
xchg
pusha
mov
xchg
mov
xor
mov
add
jmp
jb
mov
push
sbb
enter
inc
call
adc
dec
push
ficomp
ror
xchg
test
dec
icebp
add
inc
jbe
bound
dec
pop
adc
scas
xchg
push
dec
retf
inc
jmp
cmps
dec
push
popa
jge
popf
sub
jo
mov
imul
add
loope
shl
enter
mov
mov
pop
pop
pop
dec
sbb
std
les
cmp
and
pop
add
test
mov
data16
mov
sub
or
arpl
cmp
sub
cmp
push
fist
ret
icebp
jmp
rol
iret
lock
shl
mov
aas
mov
mov
adc
cmp
(bad)
(bad)
sbb
aaa
and
rcr
push
and
and
add
mov
(bad)
or
test
push
pop
dec
rcl
mov
jo
(bad)
or
push
out
and
pop
cwde
(bad)
push
jne
push
jge
mov
out
int
xor
pop
movs
dec
rcr
or
enter
call
sar
inc
inc
pushf
pop
mov
xor
push
sbb
mov
jmp
push
aad
scas
sbb
(bad)
jne
test
push
push
push
jnp
xchg
pop
pop
jne
pop
push
pcmpeqw
sbb
add
adc
or
js
or
(bad)
in
or
lea
xchg
xchg
mov
adc
in
pop
xchg
mov
xchg
adc
inc
xor
ss
cwde
clc
pop
mov
je
mov
in
daa
lock
mov
or
push
dec
icebp
imul
add
ss
adc
lods
jb
or
in
in
imul
dec
or
cmp
div
mov
pop
adc
shr
call
imul
or
scas
ret
cmp
pop
dec
and
or
dec
jecxz
push
jne
jge
push
or
xor
loope
inc
mov
or
push
or
rcl
jbe
inc
adc
nop
mov
std
sbb
je
inc
and
adc
out
fsubr
jmp
mov
push
mov
xchg
or
and
pop
push
jno
fld
cs
loopne
aas
cmp
pop
and
lock
mov
sbb
or
loope
adc
mov
sti
cmps
jge
and
cs
sbb
inc
mov
sub
loopne
fmul
div
in
sbb
or
cmps
mov
sub
inc
mov
lahf
push
icebp
nop
bound
push
stos
xchg
add
popa
(bad)
mov
(bad)
stc
and
mov
pop
aaa
sub
bound
push
adc
fs
shl
and
or
jg
add
jp
fwait
clc
lea
inc
cmp
rol
or
sub
and
cdq
mov
or
bound
inc
loop
jno
push
shr
sbb
sbb
cmp
mov
inc
dec
mov
jb
sub
sub
jmp
adc
sbb
add
mov
add
push
push
pop
adc
loope
mov
inc
jnp
or
into
pop
adc
or
jo
cld
push
cs
add
xor
enter
add
pusha
inc
and
jne
fsub
pop
out
fadd
add
fist
sub
jne
rcl
popa
(bad)
mov
inc
in
sub
pop
inc
test
call
add
call
sbb
xchg
test
add
pop
jge
xor
xor
mov
or
adc
rcr
cmp
dec
push
movs
xor
inc
xchg
mov
mov
pop
mov
jo
and
or
and
xchg
ret
inc
or
push
je
inc
sub
clc
jo
je
mov
xchg
mov
add
push
or
dec
mov
les
sub
or
adc
pop
mov
mov
jbe
and
xor
jnp
add
gs
loope
test
(bad)
adc
dec
jmp
mov
imul
mov
jne
stos
out
ror
or
ret
jmp
adc
adc
pop
gs
hlt
adc
xchg
jmp
movs
dec
arpl
popf
mov
mov
sbb
enter
adc
or
nop
adc
xchg
(bad)
iret
imul
jg
xor
(bad)
push
int3
outs
loope
mov
sahf
movs
sahf
loop
jo
push
in
mov
sbb
jl
pop
sbb
mulps
sub
leave
je
shr
and
mov
adc
push
inc
add
jecxz
mov
arpl
cmp
imul
cmp
ss
in
and
sub
loopne
in
xor
cmp
inc
and
inc
bswap
leave
leave
leave
dec
dec
push
push
jb
jb
pop
add
jb
jb
ins
jo
sbb
jb
js
dec
es
mov
cdq
fs
mov
xchg
dec
pushf
mov
es
shl
and
(bad)
enter
cdq
pusha
sar
leave
and
loopne
xor
and
call
xchg
dec
lock
clc
xchg
inc
dec
xor
add
add
fiadd
or
gs
adc
adc
sbb
dec
xor
and
sub
xor
and
xor
dec
shl
inc
gs
cdq
jbe
xchg
dec
dec
mov
xchg
dec
es
pop
pop
jo
daa
cdq
pusha
sbb
or
cmp
add
jl
add
test
and
mov
mov
mov
xor
sbb
call
and
adc
sbb
pushf
dec
xor
int
mov
ror
cmp
mov
inc
rol
rol
dec
enter
int
int3
dec
mov
mov
pop
not
mov
sub
loope
fsub
push
test
es
or
dec
adc
popf
in
je
out
xor
or
fcom
dec
sub
inc
or
les
jle
pop
push
or
lock
mov
xchg
push
dec
xlat
sub
and
jmp
retf
and
add
xor
in
or
or
out
repnz
not
xor
loope
sbb
div
leave
and
shr
xchg
fild
add
gs
fcom
js
in
test
adc
or
inc
xchg
icebp
pop
adc
and
je
rcl
or
mov
push
(bad)
loop
mov
aad
dec
cld
cdq
call
add
dec
mov
pop
adc
lock
and
mov
mov
jl
and
jecxz
sbb
push
dec
jae
add
or
rcl
sub
loopne
ja
mov
xor
sub
aaa
jge
je
mov
loope
fld
and
pop
adc
fistp
pusha
mov
pusha
loope
pop
sub
xor
sub
adc
psrld
pusha
fld
push
cmps
cmp
ins
ss
mov
inc
push
mov
push
in
(bad)
jns
dec
in
or
add
add
int
out
test
fistp
xchg
sub
mov
jl
das
pop
or
sub
push
scas
jmp
push
and
add
pop
and
test
mov
test
pop
and
popf
mov
sub
and
or
loope
adc
fld
fstp
jmp
bound
fild
xchg
adc
push
push
inc
lahf
fndisi(8087
inc
sub
inc
dec
push
hlt
adc
jbe
xchg
push
add
pop
sub
mov
add
arpl
adc
mov
push
xor
test
cmp
adc
or
call
fs
aaa
sbb
out
jle
sbb
cmp
fld
add
dec
sub
pop
aaa
pop
sub
jmp
sub
sub
sbb
lods
sbb
test
into
call
sub
test
shr
sub
mov
nop
and
mov
arpl
fstp
or
cmp
mov
repz
pop
push
inc
xchg
in
inc
rcr
sbb
cli
repnz
mov
mov
cld
dec
push
movs
imul
xchg
and
cli
shr
mov
scas
inc
pop
or
fchs
mov
mov
push
cld
nop
pop
lds
pop
jmp
pop
cs
nop
sbb
icebp
adc
jl
pushf
pop
call
scas
mov
add
push
call
push
arpl
adc
jg
xor
popf
add
clc
sub
fisub
sbb
cmps
retf
add
mov
and
mov
inc
or
(bad)
sbb
bound
shr
mov
cmp
or
push
je
(bad)
sbb
loopne
jns
retf
imul
or
sbb
sub
cld
sbb
hlt
pop
mov
mov
cdq
and
and
sub
cmp
inc
or
fsubr
jno
push
sbb
jge
or
xor
fsubrp
fwait
call
dec
inc
and
or
push
inc
jne
int
js
or
fisttp
ret
pusha
mov
or
jo
sbb
std
sub
xor
pop
loopne
mov
lods
in
sub
lock
ins
es
mov
and
push
mov
inc
retf
push
jle
es
or
sbb
(bad)
pusha
add
adc
mov
outs
sahf
inc
mov
out
int3
mov
sbb
out
and
adc
and
jl
push
jnp
ror
dec
add
cmp
cdq
push
and
jo
mov
loopne
jecxz
into
dec
xchg
add
sbb
dec
adc
mov
push
neg
add
rol
or
mov
stos
push
retf
lock
or
cdq
jge
sbb
push
fcmovnbe
ins
add
push
mov
xor
into
pop
out
popf
mov
cmp
sbb
add
xchg
ret
ss
mov
cli
push
mov
rcr
pop
fchs
xchg
jge
mov
out
mov
mul
mov
xchg
or
xor
icebp
das
xchg
push
inc
sbb
sbb
fisub
push
or
loop
shl
add
add
or
push
out
mov
pop
pop
and
pop
je
je
sahf
jge
or
push
and
shl
in
ficom
sub
sub
adc
push
pop
push
ror
dec
jmp
inc
jnp
fnstsw
movsx
add
(bad)
mov
inc
fstp
push
mov
not
dec
ficomp
xchg
mov
or
ins
or
xchg
in
rcl
dec
cwde
or
sub
adc
in
cs
adc
sbb
maxps
sub
repnz
rcr
jle
movs
fldpi
xor
cmp
xor
sub
jae
mov
sbb
push
retf
dec
inc
icebp
call
je
scas
xsaveopt
sahf
xor
call
mov
jo
movs
mov
pop
and
or
mov
mov
test
nop
test
adc
or
and
mov
sbb
fwait
clc
push
adc
jg
pushf
or
xor
rol
test
lock
mov
je
or
push
jns
rcr
add
adc
adc
xor
adc
test
and
cmp
xor
or
adc
inc
clc
dec
fdiv
imul
mov
add
retf
je
jle
inc
pushf
push
inc
cdq
xor
into
fist
xchg
inc
adc
ffree
in
test
sub
inc
arpl
jb
cli
std
jle
or
or
loope
cli
test
mov
in
add
push
pop
les
mov
or
fwait
cmp
push
mov
dec
imul
dec
push
les
outs
add
push
lods
sub
adc
cmp
push
adc
adc
loopne
test
xlat
pop
mov
hlt
mov
or
xlat
push
dec
fisubr
pop
mov
arpl
push
push
movs
push
cmp
jmp
pop
sbb
ret
inc
and
mov
arpl
jns
dec
or
inc
lea
pop
sbb
sbb
mov
retf
rol
and
mov
call
loop
rol
push
inc
jmp
cmp
and
jmp
push
pop
pop
and
ins
lock
mov
out
mov
inc
adc
iret
test
dec
gs
dec
mov
add
cmp
cmp
mov
mov
xor
lods
push
add
js
sub
adc
or
mov
pop
sar
mov
rcr
jge
lea
cld
test
je
inc
mov
sub
cmp
loope
or
xchg
jmp
test
(bad)
or
enter
mov
xor
cmp
jl
push
movs
das
sbb
add
loopne
cmp
retf
sub
sub
and
rcl
jb
mov
and
push
ds
push
adc
(bad)
les
scas
and
aam
out
dec
mov
es
sub
jl
inc
dec
xchg
es
add
into
pop
sbb
das
adc
loope
je
lahf
or
dec
jns
mov
push
sub
xchg
mov
fadd
hlt
cmp
test
mov
dec
cld
enter
dec
out
or
inc
pop
or
dec
xor
ffree
cmp
push
cli
lds
rcr
jmp
pop
mov
push
jb
test
icebp
pop
enter
dec
jns
mov
aam
ss
rcl
hlt
push
aas
mov
mov
lea
cmp
sub
(bad)
(bad)
and
dec
movs
addr16
cmp
addr16
sbb
mov
arpl
js
or
sbb
cmp
add
and
out
into
lea
and
xchg
out
mov
aaa
rcl
mov
and
dec
xor
sbb
in
adc
imul
dec
lods
shl
test
pop
jecxz
or
dec
or
cmps
loope
(bad)
inc
or
add
cmp
cwde
cmp
push
sub
adc
clc
pop
push
lock
and
adc
mov
cs
push
mov
push
dec
push
push
add
dec
sub
push
add
and
jmp
inc
les
and
adc
xor
inc
jb
dec
push
pop
jmp
push
out
or
mov
mov
or
in
scas
mov
icebp
cmp
and
xchg
add
jb
mov
inc
mov
test
inc
mov
mov
ror
mov
sbb
into
repz
xchg
out
add
xchg
jo
or
mov
scas
cmp
mov
cmp
ins
inc
cs
or
or
(bad)
(bad)
jmp
cmp
je
or
out
mov
dec
call
mov
cmp
pop
jne
dec
mov
inc
sub
inc
mov
jmp
and
sub
fisttp
lea
inc
jp
arpl
mov
add
and
inc
sub
gs
add
jle
dec
add
adc
or
bt
xchg
xor
movs
sbb
jbe
sub
jge
cmp
jno
cmp
xchg
jg
das
push
data16
sub
rol
fadd
or
sub
push
pop
movs
or
fdiv
or
jle
lahf
shr
inc
ffreep
mov
pop
sbb
ror
sub
dec
(bad)
adc
les
sub
mov
adc
leave
push
jle
scas
adc
aas
sub
push
mov
jae
and
jb
cld
mov
adc
or
sbb
cmp
add
add
lods
mov
shl
xor
jmp
sub
add
and
aad
jl
add
push
mov
inc
inc
test
das
mov
dec
jns
neg
mov
fs
cdq
push
rol
fwait
mov
or
add
add
and
rol
adc
nop
sbb
ret
rcl
dec
rcl
out
in
mov
adc
test
movhps
dec
dec
or
mov
add
inc
inc
jp
sbb
pusha
inc
fist
mov
iret
add
call
lock
jge
pop
add
adc
adc
cmp
xchg
movs
push
push
adc
pop
js
cmp
xor
pop
push
adc
inc
jns
into
cmp
sbb
and
ins
or
das
(bad)
push
jmp
add
pop
aam
ins
dec
out
pop
mov
cmps
(bad)
and
push
fadd
mov
mov
pop
add
jl
cmp
icebp
nop
stos
inc
jge
adc
and
xchg
retf
sar
or
push
sbb
cmps
shr
add
inc
inc
xor
mov
push
and
or
jne
shr
xor
mov
loopne
imul
push
inc
lea
jae
loope
fdiv
ins
ret
push
adc
mov
neg
add
and
xor
scas
nop
push
sub
test
test
jbe
enter
js
sub
or
sub
add
cld
push
js
sub
xchg
dec
and
add
ins
mov
out
and
mov
out
ret
push
cs
inc
popf
neg
sbb
mov
stos
enter
adc
jg
ret
ins
or
jne
addr16
loopne
bound
xor
xor
pop
(bad)
adc
sub
pop
and
call
mov
inc
xor
mov
jb
push
push
cmp
lods
or
mov
inc
fwait
mov
mov
in
sub
or
xor
or
adc
cmp
push
clc
sub
sbb
js
sbb
ret
inc
pop
and
push
rol
movs
adc
mov
jbe
fs
das
cmc
ins
cld
add
hlt
shrd
sbb
sub
dec
cmp
add
test
push
movs
clc
cwde
xor
add
pop
push
ins
in
inc
and
xor
out
and
xor
sub
xor
mov
ror
inc
call
ins
cmps
lea
inc
icebp
or
stos
fcmovu
lock
xor
jo
jnp
mov
and
lock
sar
jg
ret
js
fdiv
xor
jmp
jl
xor
neg
mov
xor
sar
push
cli
fidiv
adc
push
in
lock
or
add
mov
mov
dec
dec
inc
dec
xor
out
pop
or
or
sbb
cmp
sar
jo
add
push
mov
(bad)
sbb
and
mov
inc
es
add
jbe
adc
aad
mov
adc
xchg
mov
push
std
(bad)
mov
xor
xor
ficomp
jle
cmp
loopne
in
push
sbb
imul
push
lock
sahf
fwait
adc
sub
xchg
cs
jnp
es
call
inc
(bad)
adc
ret
aaa
push
lods
inc
add
pusha
xor
leave
movzx
fiadd
mov
das
cmp
pop
cmp
cmp
je
aad
add
adc
jbe
test
mov
mov
pusha
xor
fwait
add
push
sbb
cmp
add
sbb
and
cmp
pop
push
div
imul
test
xor
mov
xchg
cmp
mov
cmp
xor
xor
enter
ins
lods
loopne
push
push
scas
push
dec
xor
pop
out
dec
out
aaa
loop
or
cld
jl
loopne
jge
inc
or
test
stc
mov
push
or
pop
ret
popf
jo
adc
sbb
mov
add
fs
jle
clc
gs
or
pop
data16
retf
mov
mov
popa
je
inc
je
dec
add
pop
in
(bad)
jmp
xor
(bad)
jmp
adc
pop
sub
xor
mov
cwde
dec
cmc
push
mov
or
adc
retf
ins
push
popa
jnp
lods
loopne
or
add
add
rol
popa
ins
mov
or
push
pop
cmp
loopne
push
push
fld
pop
dec
inc
test
movs
xor
out
and
or
daa
push
adc
or
cmp
cmp
test
mov
mov
push
pop
jmp
pop
and
push
or
add
jns
cmp
not
push
fild
je
mov
hlt
ja
dec
add
push
enter
inc
(bad)
pop
xlat
aam
imul
sub
sub
jns
(bad)
jmp
cmc
cmp
push
setnp
enter
sbb
pop
pop
aam
aam
push
xor
arpl
sub
mov
push
and
adc
push
les
push
and
xchg
nop
cli
inc
add
mov
xchg
sub
mov
lock
cmp
test
mov
mov
movs
nop
jp
mov
pop
lock
jmp
mov
aam
popa
ins
fwait
xchg
xchg
fisttp
cmp
test
mov
cmp
loopne
or
mov
or
mov
pop
dec
adc
xor
imul
pop
pop
pop
pop
pop
cld
rol
add
dec
adc
retf
jl
cmp
imul
test
jb
and
and
jmp
mov
sbb
dec
je
dec
add
mov
push
push
jmp
or
jmp
mov
cmp
rcl
sbb
(bad)
cdq
in
repz
inc
and
pop
ret
add
sbb
lock
stos
data16
int3
or
push
adc
add
push
push
arpl
iret
xor
shl
adc
sahf
and
xor
cmp
sbb
aam
mov
or
and
jnp
int3
add
lods
cmps
mov
lahf
jbe
or
mov
mov
adc
retf
ds
adc
inc
xchg
cmp
or
push
or
repz
dec
inc
ror
mov
add
pop
sbb
or
imul
and
ficom
and
or
sbb
or
xchg
xor
dec
add
ror
pop
inc
or
or
(bad)
fbld
mov
repz
jge
shr
jg
and
add
mov
add
shr
or
(bad)
push
push
adc
test
and
add
push
or
(bad)
mov
not
xchg
outs
leave
ss
jb
add
mov
add
add
dec
mov
jbe
add
jl
in
sbb
cmp
xchg
mov
pop
and
add
mov
and
inc
fisttp
cmp
adc
bound
xor
inc
inc
xor
mov
clc
xor
adc
cli
sub
mov
or
xchg
test
dec
mov
mov
mov
aam
or
(bad)
and
xchg
or
add
mov
mov
nop
or
adc
and
sbb
cmps
xor
clc
mov
ss
loope
pusha
loop
pop
add
mov
add
(bad)
cli
jne
mov
in
mov
push
add
test
add
(bad)
push
or
pop
inc
mov
shl
adc
or
in
jbe
les
dec
sahf
mov
sbb
adc
test
retf
je
sub
inc
repnz
jmp
cmps
xchg
nop
sbb
test
pop
mov
jmp
repnz
cmp
add
pop
or
nop
sub
test
add
retf
test
dec
jo
rol
and
leave
dec
xchg
xor
sub
(bad)
or
add
dec
inc
popa
add
stos
or
mov
mov
nop
jge
or
sbb
fs
or
fild
imul
sub
test
sub
and
shr
jne
xor
outs
rcr
mov
push
arpl
outs
dec
lods
outs
inc
push
leave
clc
or
cmp
fiadd
cmc
sbb
sub
and
sbb
movs
sbb
adc
sbb
sbb
(bad)
sbb
inc
test
aas
add
mov
push
repnz
cmp
mov
mov
std
sbb
add
pop
je
and
mov
mov
dec
bound
push
add
adc
add
mov
push
mov
xchg
add
inc
(bad)
adc
jno
shr
xchg
xchg
add
push
add
adc
fld
and
sub
ds
push
sbb
movs
pop
mov
pusha
push
jmp
push
xor
push
enter
sub
lea
add
add
cmp
push
sbb
sub
pop
sub
in
int
add
mov
cmp
jle
inc
and
je
dec
repz
jp
int
test
test
mov
mov
mov
pop
pusha
std
ins
je
es
adc
add
call
cmp
inc
sbb
mov
inc
aam
push
or
(bad)
or
mov
push
arpl
add
jmp
cmp
add
push
push
imul
mov
movs
mov
ds
mov
cld
and
dec
pop
nop
or
sub
and
pop
aas
jmp
nop
jne
cmp
jne
inc
pop
inc
rcr
cmps
cmp
add
popa
push
adc
or
or
inc
add
dec
std
adc
add
add
or
(bad)
je
mov
iret
push
add
rcl
or
or
mov
jmp
cmp
scas
jecxz
rol
pop
pop
mov
imul
adc
jne
loopne
and
xor
or
pop
jmp
add
loopne
addr16
call
and
add
pop
add
cmp
lea
rcl
sub
cs
dec
jge
cmp
inc
push
neg
neg
sbb
sub
sbb
sbb
inc
sbb
int
loopne
mov
or
adc
ins
scas
mov
push
inc
and
fldcw
fcomi
sbb
mov
sbb
sbb
mov
sbb
leave
dec
jns
ret
push
or
daa
pop
add
ret
aam
push
mov
adc
lods
rcl
jmp
dec
and
shr
sub
adc
(bad)
xor
and
xchg
cld
lock
je
push
pop
sub
lods
rol
push
xor
sbb
les
retf
inc
into
add
pop
pop
lods
sbb
dec
adc
sbb
adc
dec
mov
fs
sub
or
aad
inc
cmp
(bad)
jbe
aas
or
hlt
adc
and
pop
cmc
shl
or
push
pop
push
mov
add
cmp
sub
test
push
loopne
into
paddusb
mov
add
adc
xor
pop
or
cmp
push
xchg
gs
add
or
scas
scas
(bad)
cs
add
in
or
jne
cld
inc
ss
or
sub
cmps
and
push
cmp
mov
out
cld
popf
dec
mov
leave
jne
adc
inc
add
mov
lock
add
add
js
adc
xor
add
inc
inc
dec
test
leave
push
sub
lds
mov
push
xchg
adc
cld
inc
push
cs
mov
je
(bad)
pop
add
adc
jl
out
push
cmp
ja
add
cmp
(bad)
and
repz
(bad)
cmp
jne
(bad)
shl
cli
mov
mov
adc
mov
xchg
cs
pop
pop
(bad)
je
xchg
test
cmp
xor
mov
iret
and
jb
dec
sub
and
push
mov
inc
test
data16
or
fdivr
aas
cs
mov
mov
jmp
or
jmp
inc
add
add
dec
inc
stc
mov
inc
call
ret
inc
sti
dec
and
mov
add
int
call
xchg
jno
mov
mov
daa
test
sbb
xor
jb
mov
loope
add
adc
ins
fdivr
inc
jb
jne
ret
sbb
add
out
and
sbb
mov
add
push
add
cmp
mov
hlt
cs
imul
call
push
rol
imul
lea
sar
ror
cmp
mov
xchg
fld
es
jmp
cwde
mov
movs
(bad)
inc
ret
add
shl
inc
call
fwait
inc
jnp
adc
push
sti
add
addr16
adc
dec
cwde
mov
push
test
lods
and
jl
in
mul
(bad)
jle
repnz
rcr
les
mov
scas
adc
test
and
(bad)
and
lea
inc
(bad)
xor
shr
add
into
sahf
cmp
push
sub
pop
xchg
fucom
and
in
stc
pushf
mov
inc
call
jno
jmp
ss
jg
or
inc
pop
mov
and
lea
rol
lods
xor
mov
dec
or
push
pushf
fcom
dec
or
push
nop
mov
movs
xor
cmp
imul
sub
loope
pusha
data16
xchg
inc
jae
lods
mov
mov
jl
outs
call
rol
add
jae
jle
cmp
cmp
shl
jbe
push
mov
add
shr
or
and
out
mov
clc
ror
sbb
push
retf
jae
mov
(bad)
inc
(bad)
sbb
and
inc
js
mov
jle
cwde
shr
loope
shr
or
mov
sti
jmp
xor
jp
mul
cmp
ja
dec
xchg
xchg
sahf
(bad)
and
push
pop
scas
xor
test
dec
cli
cli
inc
dec
retf
repz
cli
div
pop
inc
or
(bad)
sahf
xchg
dec
jae
test
or
nop
loopne
xchg
pop
pusha
dec
imul
mov
and
test
scas
mov
dec
das
inc
xor
jbe
push
fidiv
fldenv
enter
jg
or
push
ins
mov
enter
dec
dec
rol
lock
mov
dec
sbb
add
push
out
inc
repnz
rcl
test
sbb
loop
out
sub
shl
test
bound
sub
fisttp
inc
push
jne
aam
daa
adc
cmp
or
push
icebp
inc
outs
jns
inc
shl
fdivr
aam
and
jbe
dec
sub
xor
nop
jge
adc
rcl
mov
mov
dec
or
call
mov
or
cmp
dec
add
fld
rcl
mov
mov
(bad)
ins
test
cli
mov
int3
jg
add
xchg
add
(bad)
idiv
xchg
rol
sti
mov
idiv
or
adc
push
sbb
adc
lock
or
out
or
jge
pop
enter
lock
jb
jb
or
stc
add
jne
fs
movs
repnz
fnsetpm(287
loopne
push
add
pushf
pusha
mov
sub
fwait
pusha
pusha
add
sbb
sub
add
es
idiv
pop
mul
sbb
mov
dec
cmps
cmp
jle
push
sbb
test
pop
outs
call
inc
pop
retf
mov
and
or
shl
leave
and
rcr
xchg
mov
sahf
(bad)
loop
pop
xchg
cli
fcom
xor
fiadd
xor
call
mov
imul
call
mov
fsub
pop
add
stc
xor
daa
and
loope
push
in
adc
mov
pop
sti
mov
jns
add
shl
or
mov
enter
mov
test
or
sbb
test
(bad)
jmp
inc
js
add
enter
mov
mov
and
dec
int3
or
mov
sub
test
call
or
add
into
pop
add
cld
or
mov
inc
jmp
jmp
ins
or
sub
cmp
jge
push
cld
stos
aas
sub
cmp
or
add
dec
cmp
xlat
aam
(bad)
inc
dec
add
add
fadd
test
mov
(bad)
call
ret
jp
jne
dec
xchg
xor
div
int
pop
or
hlt
cmp
in
fild
or
mov
retf
or
add
push
mov
mov
jp
ret
adc
imul
popa
push
call
rcl
mov
mov
add
sub
mul
or
push
push
mov
or
sub
imul
jle
xor
pop
jne
or
stos
add
push
pop
scas
ds
xor
ret
sbb
adc
mov
push
cld
mov
ret
or
dec
retf
add
xchg
adc
or
or
ret
add
mov
iret
and
xchg
out
retf
into
pusha
inc
and
pop
imul
sub
and
pop
pop
mov
xor
cmpps
push
sub
prefetchw
sahf
inc
ret
or
imul
push
lock
push
ficomp
jne
or
or
loopne
xchg
cmps
add
add
aad
retf
inc
(bad)
je
pop
rol
jnp
(bad)
mov
out
sbb
or
push
pop
or
add
adc
jnp
sbb
and
mov
ret
ret
test
pop
fmul
add
shl
ret
add
dec
jmp
dec
adc
add
add
loopne
loop
clc
mov
sbb
sub
or
add
push
push
scas
sbb
cmp
mov
add
xchg
add
test
loopne
mov
xor
sar
repnz
test
adc
call
scas
pop
pushf
sbb
xchg
into
mov
mov
sbb
and
sbb
xchg
xchg
out
inc
jg
into
into
xchg
mov
or
mov
sar
push
pop
nop
ins
or
jecxz
sahf
pop
mov
aam
test
and
lds
sbb
stos
push
sub
js
mov
retf
sub
add
leave
lahf
repnz
lea
out
adc
or
movs
aaa
mov
push
cmp
mov
into
mov
and
cdq
test
or
sbb
or
sub
jmp
mov
mov
retf
aaa
cmp
pminsw
out
stos
push
xor
add
scas
pop
mov
clc
and
test
adc
fabs
dec
pop
add
or
or
bound
add
xchg
add
scas
inc
sbb
inc
lock
scas
push
mov
fcomp
rcr
in
hlt
lfs
out
pop
cdq
cmp
mov
enter
cmp
cs
daa
inc
js
movs
repz
xor
adc
sbb
adc
popf
and
je
dec
sub
dec
loop
jb
into
cmp
je
mov
pop
sub
hlt
mov
cmp
jb
push
test
add
retf
dec
sub
jmp
inc
push
stc
push
push
xchg
cwde
sub
mov
fisubr
cmc
in
add
leave
mov
into
push
or
aam
pop
mov
mov
mov
les
inc
xor
jmp
push
popa
test
mov
scas
xchg
mov
sbb
push
adc
scas
sub
cmp
push
mov
loope
mov
and
push
push
mov
pop
and
mov
imul
mov
in
movs
cdq
add
enter
push
push
push
ret
movs
rcl
stos
cmp
adc
sahf
mov
push
shl
fcom
rcl
cmp
iret
loope
push
cmp
aas
popf
jmp
inc
test
aaa
sbb
dec
mov
scas
push
xlat
mov
ret
add
cmp
add
test
sub
fstp
popa
sar
in
sub
xchg
pop
jmp
stos
sub
pop
mov
(bad)
inc
push
add
mov
mov
add
stos
sub
and
test
fmul
inc
in
sub
lahf
pop
rol
loope
aaa
jne
dec
cmp
test
add
call
ja
js
je
ss
ret
push
push
cmp
fwait
dec
push
jg
call
inc
ins
cmp
dec
mov
cmps
jo
and
mov
mov
in
cmp
mov
in
dec
dec
loope
cmp
in
fisttp
pop
push
add
ja
fs
fimul
xchg
ror
loopne
call
or
ret
dec
call
xor
xchg
loop
shl
rol
add
pop
daa
ins
cmps
mov
dec
mov
inc
push
lods
jae
jle
out
or
cmps
loopne
jmp
or
mov
movs
fild
imul
ss
sub
push
mov
or
js
push
adc
push
sbb
mov
or
mov
out
aam
loopne
dec
sbb
inc
ins
add
xchg
push
xor
iret
xor
pushf
xor
aas
push
(bad)
sub
add
fs
adc
inc
ss
mov
es
(bad)
sbb
hlt
dec
(bad)
pcmpeqb
jg
push
or
aam
pop
daa
mov
aas
pop
cmp
push
(bad)
jae
ret
push
push
rcl
pop
or
cs
mov
dec
aas
inc
fs
and
add
repnz
pop
mov
cmp
pop
xchg
lea
pop
nop
cmp
fcomp
gs
inc
inc
push
mov
ret
cmp
pop
js
daa
mov
test
movs
invd
pop
pop
xor
sahf
test
sub
sub
pop
dec
push
pusha
imul
push
mov
mov
jl
push
ret
jmp
xlat
push
outs
shl
or
movs
enter
sbb
ret
mov
xchg
adc
cs
jmp
sub
xlat
mov
add
ret
sub
icebp
mov
push
add
adc
jnp
add
bound
dec
push
sar
xor
sbb
dec
pop
push
sbb
aas
mov
and
pop
sub
lea
jl
arpl
pop
ror
sar
stos
inc
sub
sbb
aas
mov
dec
rcr
xor
movs
inc
fadd
in
jecxz
mov
xor
mov
pop
out
add
es
mov
xchg
movs
aas
add
stc
gs
mov
pushf
ret
jb
inc
jbe
call
jl
or
jmp
cmp
push
(bad)
sbb
cmps
pop
ss
add
mov
aad
ins
cld
mov
loopne
pop
pop
xchg
and
popa
sub
fsub
test
sub
jno
xchg
daa
outs
adc
pop
mov
add
inc
add
pop
rcl
cmp
(bad)
xor
imul
mov
pop
jb
add
retf
dec
inc
imul
dec
or
into
inc
mov
xchg
and
jns
sbb
jbe
(bad)
xor
adc
add
mov
add
arpl
xchg
lock
cs
mov
repnz
in
sbb
stos
xor
sbb
addr16
adc
fisubr
pop
add
clc
pop
inc
mov
and
aad
sar
rcl
fiadd
adc
outs
or
add
inc
mov
sbb
sub
cwde
mov
imul
or
push
inc
sbb
fisttp
xor
fs
ret
std
data16
xor
inc
and
adc
ins
jmp
push
in
sbb
gs
imul
dec
call
mov
rcl
sub
ret
bound
cld
or
mov
arpl
imul
fidivr
cmp
ja
pop
adc
js
fsubrp
sub
ret
and
adc
fld
jge
cmp
pop
or
movs
call
jp
inc
mov
sbb
cmp
ja
jbe
adc
xor
push
lds
xlat
cwde
xor
in
mov
sbb
fbld
add
cmp
jp
repnz
dec
test
jg
adc
mov
stc
call
mov
adc
xor
jmp
inc
add
loope
popa
jmp
call
retf
pop
je
hlt
fadd
in
xor
pusha
xchg
push
dec
mov
outs
jl
push
add
sub
sub
in
inc
jo
adc
mov
and
mov
jb
lea
mov
aas
leave
xchg
or
push
push
sbb
sub
push
add
mov
mov
mov
div
or
test
or
aaa
call
pop
sub
loopne
pop
ret
xor
or
cmp
xor
and
jnp
and
mov
das
push
or
pop
dec
cmp
mul
xchg
cdq
retf
inc
cmp
cmp
sbb
cmp
ds
inc
cmp
xor
cmp
cmp
add
data16
mul
push
mov
push
cli
mov
loope
and
fwait
shl
cdq
mov
fsub
mul
in
sahf
cmp
js
or
mov
push
inc
cmp
(bad)
call
push
sti
xor
and
and
inc
sbb
push
aas
inc
or
mov
std
arpl
js
fwait
inc
dec
or
sahf
retf
and
call
sbb
add
dec
or
test
adc
sub
ss
sbb
mov
outs
loop
jl
jl
hlt
or
test
push
add
add
xchg
push
or
cmp
jbe
adc
inc
and
mov
pop
jle
push
fucomp
add
dec
sbb
mov
and
dec
push
push
push
adc
inc
add
mov
or
dec
dec
loopne
leave
pusha
inc
dec
sub
jge
inc
hlt
add
pop
jl
in
mov
call
pop
retf
stos
sbb
rcr
mov
lds
add
call
push
popa
loope
lock
sub
fs
mov
or
rcl
ret
mov
out
mov
fs
fsubr
xlat
in
mov
shr
sbb
outs
outs
aaa
loope
fdiv
mov
push
inc
inc
loope
je
jge
push
lods
(bad)
pop
and
cmp
jg
shr
or
adc
or
sbb
(bad)
fild
jae
js
pop
adc
cmp
jae
mov
stos
sbb
mov
retf
cmp
jg
mov
dec
sar
xor
mov
mov
add
mov
pop
push
xor
cmps
and
jae
push
pop
outs
fcomp
pop
mov
movs
push
mov
repz
cmp
in
ret
push
pop
cmp
sub
mov
push
inc
scas
out
ret
ror
add
shl
(bad)
addr16
scas
sbb
mov
imul
in
sti
and
cmp
adc
add
dec
dec
or
xor
and
push
pop
cmp
hlt
add
or
dec
inc
inc
scas
loop
movs
push
pusha
ds
into
ja
cmp
jbe
jae
out
repnz
add
test
sbb
or
mov
cmps
outs
imul
dec
cmps
test
je
(bad)
popf
and
loopne
scas
or
jg
mov
inc
fwait
jl
xlat
pop
fwait
mov
pushf
cmp
add
mov
xchg
je
mov
nop
imul
aas
sbb
sbb
cli
test
xor
inc
dec
cmp
add
push
mov
push
inc
xchg
loope
xchg
std
repnz
shl
in
mov
sub
xchg
adc
iret
push
xchg
sub
push
xor
je
dec
jne
push
or
inc
jno
push
(bad)
jmp
xor
pop
add
xor
je
add
cs
adc
imul
hlt
or
push
sub
cmp
mov
daa
outs
or
cli
inc
mov
icebp
mov
cli
arpl
mov
clc
je
mov
mov
adc
mov
dec
aas
mov
pop
loope
dec
adc
inc
js
lds
mov
push
test
jmp
cdq
xchg
in
xchg
pop
mov
push
lods
pop
les
push
push
bound
jnp
push
jb
arpl
add
call
popf
clc
push
lea
cli
or
inc
mov
rol
in
add
popf
push
(bad)
in
cmp
sub
add
and
int
xchg
pop
out
ins
cmp
addr16
jmp
clc
mov
les
fild
adc
jb
pop
ret
fcom
ret
pop
sbb
push
(bad)
cmp
adc
je
push
push
add
cmp
frstor
or
push
mov
retf
mov
mov
imul
gs
out
pusha
das
or
add
cmp
add
push
ror
rol
xlat
add
push
sbb
test
xchg
sbb
mov
add
hlt
jne
adc
fistp
or
push
mov
add
mov
lock
jmp
pop
fs
mov
mov
sbb
les
mov
cmps
les
mov
or
mov
push
scas
sub
inc
bound
dec
cmp
js
jo
dec
dec
dec
push
mov
jg
rcl
cmp
or
and
adc
scas
test
into
xchg
dec
adc
add
(bad)
pop
popa
mov
cmp
jg
cmp
adc
scas
jle
out
sub
lods
loopne
pop
fiadd
and
mov
and
xor
test
or
mov
cmp
fstp
xchg
call
mov
jmp
adc
add
sub
and
cmp
mov
jmp
cmp
ret
jae
jb
or
adc
and
push
fiadd
pop
aaa
pop
pushf
and
xor
loop
mov
pop
scas
mov
push
loope
jno
and
scas
xchg
arpl
scas
push
xor
dec
and
ret
es
data16
adc
inc
stos
add
es
pop
push
outs
stc
rol
pop
sti
ins
pop
dec
test
ins
and
js
sub
sub
xchg
jns
inc
cli
ret
or
mov
adc
add
sbb
mov
and
jl
push
pop
mov
test
jae
inc
mov
outs
adc
mov
push
jmp
inc
ss
and
jb
je
cmp
xlat
pop
push
dec
jle
xor
cmp
jbe
clc
mov
xlat
push
push
push
or
movs
or
mov
push
mov
push
add
shr
jmp
das
aaa
out
pop
shl
(bad)
ins
mov
mov
fisubr
push
mov
test
mov
call
fstp
fstp
pop
jmp
cli
jne
cwde
lock
pop
pop
sbb
or
mov
jp
fs
or
mov
xchg
push
push
ins
mov
and
xor
jmp
in
fst
push
inc
repnz
hlt
push
(bad)
mov
retf
jmp
je
rcr
mov
jb
mov
mov
repnz
sbb
xchg
add
mov
and
push
xchg
mov
fisubr
jmp
adc
movs
rcr
and
adc
dec
shl
ficom
mov
test
mov
and
jnp
test
pop
and
inc
xchg
lock
fldcw
mov
fild
rol
shl
xchg
fstp
mov
xor
in
xchg
rol
mov
or
sub
das
fcomp
out
inc
in
adc
adc
ret
fstp
add
cmps
pop
sbb
or
and
in
dec
xchg
inc
pop
or
shr
xchg
mov
xchg
nop
mov
inc
lea
mov
mov
dec
inc
adc
or
inc
enter
ret
jg
or
add
sbb
les
xchg
jb
mov
test
inc
mov
test
mov
stos
shl
pop
dec
enter
cvttps2pi
das
fdiv
or
or
pusha
sub
add
dec
mov
addr16
nop
mov
inc
push
in
nop
mov
in
add
mov
sub
inc
nop
ss
nop
fmul
pop
cld
push
or
fs
test
pop
mov
pushf
inc
rcr
adc
add
push
mov
xor
or
icebp
sub
or
clc
mov
push
cmp
xlat
dec
dec
rol
nop
stos
jns
push
rol
jo
inc
pop
ret
push
jb
arpl
add
inc
cmps
fsubr
enter
dec
in
cmp
push
in
or
mov
in
cmp
es
adc
ror
or
(bad)
into
adc
adc
mov
loop
or
and
and
dec
mov
es
ret
xor
inc
fs
ins
xchg
outs
imul
xor
outs
call
js
adc
pop
sbb
xchg
pop
mov
popa
or
pop
and
inc
sbb
jl
pop
sbb
mov
pop
ds
inc
sbb
cwde
dec
and
inc
sbb
jle
mov
xor
or
enter
mov
cmp
pushf
test
xlat
and
jo
mov
mov
loopne
pop
mov
out
fsub
cwde
mov
rcl
mov
xor
les
jbe
cmps
xor
adc
fcmovnbe
pop
in
unpcklps
pop
or
sbb
in
mov
mov
jae
std
push
jno
dec
es
in
fs
ins
jo
js
pusha
nop
dec
jl
sub
jb
ds
call
adc
js
cdq
mov
jno
test
mov
xor
sub
push
fwait
or
sbb
aam
jl
cdq
cmp
sbb
in
cdq
movs
mov
in
push
fcom
add
sub
popa
(bad)
and
mov
xlat
in
sti
gs
shl
xor
mov
sbb
dec
aad
lea
les
leave
ja
sub
test
mov
int
sbb
jl
lahf
pop
mov
jp
or
sub
and
mov
xor
jl
add
ja
cmp
mov
mov
bound
adc
ins
sbb
test
loope
cwde
inc
mov
or
ins
mov
enter
adc
xor
nop
outs
sbb
aam
enter
adc
xchg
ins
les
mul
test
jnp
push
imul
lock
arpl
inc
cmc
hlt
or
and
adc
adc
add
loopne
push
sub
push
jns
sbb
leave
test
sbb
ins
adc
in
jnp
sbb
mov
cmp
mov
and
sbb
test
inc
xchg
clc
jo
or
fcomp
scas
aas
adc
fnstsw
sbb
cdq
dec
enter
mov
in
aam
mov
xchg
mov
loopne
or
imul
daa
inc
and
fs
call
movs
aas
or
add
call
inc
xchg
dec
push
xor
fwait
inc
cmp
or
aam
shl
dec
add
test
add
das
or
rcr
xchg
fisttp
mov
push
lea
adc
add
sbb
cmps
push
call
jl
lahf
pop
rcl
fs
and
adc
lea
xor
fadd
sub
mov
stos
in
xchg
ins
adc
push
inc
mov
cdq
dec
dec
fs
adc
fadd
daa
or
mov
or
jb
stos
cwde
loop
or
pop
fidiv
mov
bound
and
xor
cmps
cmps
scas
xor
mov
enter
add
sub
pop
add
adc
in
popa
xor
or
sub
push
sub
mov
inc
call
in
and
in
and
pop
enter
fwait
dec
stos
loop
imul
mov
loope
in
or
inc
fmul
xchg
stc
jg
or
sbb
jo
fldcw
je
add
sub
in
mov
test
or
and
or
cmp
jnp
and
xlat
icebp
or
es
push
mov
int3
jmp
outs
jmp
pop
nop
popa
aad
xchg
nop
(bad)
cmp
movd
(bad)
mov
imul
lea
pushf
cmp
cmp
or
shr
mov
inc
mov
push
sub
xor
and
sbb
xchg
test
xchg
pop
outs
and
cmp
es
fs
aam
ror
cmp
xchg
fist
dec
test
push
imul
test
mov
daa
xchg
nop
xchg
mov
inc
or
add
outs
sub
lock
inc
sub
pop
stc
adc
mov
cmp
aam
je
in
dec
sub
or
inc
push
cmp
or
or
mov
or
and
call
(bad)
enter
mov
and
adc
jns
jae
test
mov
add
xor
scas
sbb
rol
xchg
add
or
mov
sbb
gs
mov
jae
imul
popf
dec
mov
xor
and
inc
add
xchg
push
ss
xchg
mov
pushf
jp
sbb
mov
sbb
cmp
sbb
add
popf
xor
mov
ret
fadd
adc
retf
mov
jnp
es
mov
or
inc
jb
sub
les
add
bound
sub
ret
push
iret
dec
sub
adc
movs
in
test
add
enter
and
test
(bad)
rcl
xor
cwde
scas
cmp
aaa
cmp
cdq
aam
cmp
push
jb
sub
cld
dec
in
and
ret
adc
adc
xchg
cmp
jge
das
rcr
fcom
jo
mov
mov
sub
and
push
psubsb
jb
daa
mov
fs
or
fs
xor
(bad)
(bad)
inc
dec
push
or
sub
adc
mov
add
call
leave
in
fild
das
ret
in
pop
mov
daa
pop
das
add
in
loopne
add
push
pavgb
enter
mov
sub
push
mov
movs
inc
adc
or
xor
add
dec
cs
lock
or
adc
mov
dec
and
jecxz
xchg
or
xor
or
push
mov
fnstcw
or
iret
push
jp
xor
xchg
xor
add
out
sub
push
enter
retf
dec
xor
ret
xchg
mov
add
jge
mov
xchg
mov
call
add
js
in
mov
in
sbb
imul
adc
push
test
adc
pop
push
loope
hlt
xor
push
xor
xor
push
xor
xchg
or
cmps
or
sbb
push
shl
clc
mov
sbb
sbb
cmp
mov
and
stc
cld
jne
lea
adc
nop
inc
scas
adc
or
gs
push
in
or
jo
or
push
mov
lods
xor
add
(bad)
jg
fcom
out
inc
cwde
and
cld
xchg
int3
and
lock
fnstsw
xchg
inc
ss
sub
xchg
add
fwait
jl
inc
pop
ret
pop
inc
mov
add
push
and
cmovs
mov
aaa
dec
scas
enter
(bad)
(bad)
(bad)
mov
repnz
arpl
sbb
aam
inc
int3
ror
push
loop
aad
aam
enter
shl
and
cmp
aam
fcomp
adc
sbb
mov
or
inc
xchg
leave
mov
fsub
adc
ins
xor
add
push
nop
ins
inc
jmp
mov
and
pop
int
jae
fisttp
push
mov
xchg
cmp
loopne
ins
mov
(bad)
xor
push
jns
sub
pop
add
cmp
sti
ins
or
jne
jnp
mov
push
push
aas
aam
xchg
ret
adc
aas
inc
or
cmp
mov
cmp
loope
cdq
cwde
ins
or
call
cmc
xchg
pop
loop
or
cmp
pushf
fwait
mov
and
pushf
les
in
mov
xor
mov
fsub
inc
fwait
lods
popf
(bad)
xchg
sub
sar
and
mov
jmp
test
imul
and
(bad)
xchg
inc
or
adc
sub
leave
xor
and
movs
fdivr
cmp
or
movs
and
movs
das
or
cmp
fnstcw
cmp
and
test
imul
or
es
fnsave
int3
ret
adc
adc
mov
pop
fcom
fs
cwde
jmp
cmp
push
leave
int
aas
push
add
jo
adc
nop/reserved
push
movs
int
inc
in
sub
loop
xchg
js
pop
or
pusha
xor
jmp
and
inc
and
lea
mov
push
mov
out
ror
fadd
xchg
ficom
out
ror
loop
add
shl
or
inc
rol
stos
adc
add
sub
lea
fdivr
(bad)
not
push
mov
xchg
sbb
xor
das
xor
mov
test
xchg
inc
cmp
gs
dec
inc
dec
in
dec
push
das
es
dec
pop
mov
xchg
(bad)
cmps
push
cwde
movs
(bad)
aad
es
push
xor
xor
cmp
jnp
aaa
popf
cmp
or
or
add
test
nop
inc
shl
xor
call
mov
add
sbb
and
jge
add
xor
or
enter
or
aad
pop
lea
ret
daa
sub
push
and
mov
xor
mov
mov
inc
lods
mov
adc
inc
sub
fsub
jno
sub
fcomp
aaa
xchg
inc
push
mov
cmps
cmc
popf
jl
add
push
jb
test
call
and
rcr
adc
pusha
or
inc
sub
fs
nop
and
add
xor
sbb
jecxz
add
movs
jne
orps
loope
dec
imul
imul
sar
test
fld
aam
pushf
add
dec
popf
push
mov
or
(bad)
call
cmp
mov
adc
xchg
data16
popf
dec
lods
cwde
(bad)
inc
cmp
push
adc
adc
push
add
cmp
aad
sbb
cmp
or
bound
xor
jne
pop
or
mov
clc
pop
int3
and
(bad)
dec
not
fs
sub
into
or
adc
add
inc
test
aam
mov
daa
mov
dec
ror
push
nop
and
mov
gs
or
ret
int3
test
les
rcl
cmp
sbb
dec
nop
inc
lds
div
in
push
aaa
lock
fs
sub
mov
push
lock
ror
or
xchg
jne
sub
jl
sbb
sbb
sub
dec
popa
dec
dec
inc
test
das
dec
mov
pusha
adc
cmp
adc
or
adc
test
jne
je
sbb
pop
inc
and
push
aas
sbb
push
and
inc
add
outs
xor
mov
dec
push
xor
gs
nop
dec
jo
dec
or
or
rcl
jb
push
sbb
mov
int3
fsubr
add
pop
mov
mov
lods
test
sbb
cmp
mov
cli
add
cmp
jmp
test
pop
bound
mov
xor
lods
mov
scas
cmp
pusha
leave
pushf
cwde
or
or
test
popf
xchg
fs
data16
mov
ret
gs
mov
xchg
push
pop
mov
mov
(bad)
stos
adc
add
cmp
push
jmp
fistp
mov
xor
addr16
test
push
imul
mov
and
push
rcl
sbb
push
bound
inc
loop
or
mov
retf
cmp
js
call
adc
xchg
dec
xor
dec
inc
nop
nop
sbb
mov
ins
test
xor
add
js
push
fldenv
test
movzx
inc
dec
fs
push
mov
dec
cmps
pop
and
or
lods
xor
jmp
int3
mov
mov
enter
fld
push
mov
imul
mov
and
mov
aaa
add
sub
fadd
mov
test
mov
nop
xchg
test
pop
rcr
push
mov
push
and
in
cmp
mov
movs
test
mov
stos
test
fsub
mov
fsub
cwde
lock
rep
sub
xor
add
call
add
inc
push
in
xchg
ret
ja
cmp
xchg
bswap
and
or
cmp
add
cli
sbb
imul
push
lds
xrelease
fsub
cdq
push
test
not
movs
push
add
inc
push
in
pop
call
leave
gs
iret
ret
sbb
mov
jmp
add
pop
inc
call
xor
(bad)
clc
xchg
js
jns
pop
mov
nop
ja
inc
cwde
sub
leave
add
movs
cdq
adc
and
idiv
dec
dec
pop
or
imul
fs
add
adc
inc
fwait
push
ins
mov
leave
mov
inc
push
pusha
adc
xor
and
dec
xor
cmp
sbb
dec
xor
and
cmp
shl
sub
xor
or
pop
rcr
xchg
xchg
xchg
mov
inc
loop
pop
stc
or
jb
add
pop
jne
jp
xor
inc
inc
cmp
jg
xor
das
xchg
pop
inc
or
add
or
and
pop
rol
test
mov
push
aad
push
add
pop
ror
movs
add
push
dec
sbb
add
loopne
adc
dec
xor
outs
fmul
sub
ret
xor
or
nop
add
sti
mov
fs
mov
shl
mov
lods
test
add
adc
add
gs
push
inc
cmps
inc
je
pop
ins
dec
cs
test
movs
rcl
mov
ret
movs
mov
mov
add
inc
sbb
es
movs
sbb
xor
push
and
cmp
add
sbb
inc
xor
enter
lock
sub
dec
nop
fild
int
pop
int3
in
and
mov
outs
ret
dec
out
adc
scas
adc
cdq
popa
and
in
pop
adc
sbb
fs
fsubr
and
unpckhps
add
rol
jb
jae
mov
bound
push
adc
mov
(bad)
in
or
pop
movs
or
pop
fcmovb
cmp
aas
out
je
les
and
repnz
arpl
sbb
pushf
ret
arpl
les
dec
imul
movs
and
sub
sub
fs
cs
xchg
scas
lods
fs
sub
pusha
gs
loope
pusha
sbb
test
test
call
int
imul
mov
shl
xchg
mov
ss
mov
mul
jne
adc
and
fcom
push
or
or
addr16
rcl
aad
and
add
aam
pop
jo
add
sti
adc
xor
xchg
xchg
inc
scas
mov
pusha
add
aad
jbe
inc
or
repnz
xor
xor
imul
and
mov
es
cmp
adc
sub
sbb
xor
rol
xor
sbb
mov
call
inc
shr
addr16
test
cmps
dec
mov
push
dec
push
inc
jae
and
push
rcl
in
jns
add
enter
xchg
(bad)
add
aad
or
pushf
cld
push
cdq
enter
ins
lock
ret
cmp
xchg
pop
mov
xchg
adc
inc
(bad)
in
ja
sub
or
imul
or
dec
sbb
ror
pusha
and
dec
pusha
pop
jg
repnz
popa
mov
push
xchg
add
pop
xor
sub
ins
xor
and
aam
or
pop
pop
in
push
aam
pop
aam
bound
aaa
and
mov
pop
fsubr
fist
mov
aaa
es
adc
int
in
shl
dec
hlt
pushf
dec
das
mov
cld
outs
mov
pop
and
rcl
aam
cmp
add
dec
fcom
jl
xchg
enter
mov
sbb
lods
mov
imul
push
dec
push
test
dec
outs
das
dec
adc
and
je
mov
xchg
dec
ret
aad
or
pop
or
push
sbb
or
sub
mov
and
fcomp
in
pop
ror
aam
les
pop
adc
nop
sbb
and
xor
add
and
test
add
and
and
xor
or
movs
lods
dec
ss
inc
jecxz
adc
dec
pushf
ins
dec
es
lods
push
mov
cdq
fs
test
cdq
fs
dec
pop
je
fs
dec
mov
es
mov
dec
and
fs
aam
ins
push
inc
mov
stc
inc
dec
jmp
lds
fld
in
shl
jns
xor
mov
fcom
xchg
dec
enter
fs
and
inc
mov
mov
cmp
fldenv
out
loopne
mov
sbb
xor
add
ins
je
enter
inc
test
mov
movs
lods
xchg
enter
int3
not
fsub
aam
aam
fs
push
cmp
add
push
mov
cmp
mov
mov
leave
mov
mov
popa
and
test
pushf
(bad)
std
and
(bad)
pop
aam
int3
xchg
xchg
xchg
xchg
les
xchg
movs
pushf
xchg
mov
test
adc
leave
and
pop
xchg
mov
adc
xor
(bad)
jo
outs
popa
test
xor
or
ds
ud2
xchg
sub
inc
test
xchg
inc
lods
sub
aas
cmp
lahf
mov
push
iret
js
imul
inc
mov
inc
(bad)
aam
xchg
dec
adc
inc
jo
aaa
cmp
jb
cwde
sbb
add
and
xchg
sub
movs
call
mov
cs
xchg
rcr
add
inc
test
pop
lds
pop
adc
into
fwait
jnp
js
lods
in
mov
sub
add
rol
xor
mov
mov
rcr
pop
inc
jae
jns
add
xor
sub
not
movs
movs
dec
cmp
dec
adc
cdq
fs
sbb
and
pop
jo
dec
push
pusha
test
or
push
call
or
leave
dec
cmps
not
pop
dec
dec
and
sub
ret
shl
fld
adc
and
sub
ficom
mov
push
ins
adc
fs
sti
inc
add
or
xor
pop
adc
jg
sbb
push
out
and
test
or
vmptrst
adc
dec
aam
or
bound
xchg
mov
mov
popa
and
rcr
or
sub
push
xor
add
nop
mov
int3
or
jge
mov
icebp
adc
test
add
pop
mov
pusha
add
mov
xchg
sbb
or
xor
pushf
pop
lea
shl
enter
cdq
sub
and
adc
fmul
les
stc
les
mov
mov
push
cmp
movs
test
mov
in
jl
rcl
enter
lods
or
mov
ror
leave
ror
cmp
or
mov
xlat
xor
pushf
sub
sub
or
jmp
jle
xchg
or
mov
pop
adc
and
mov
or
in
add
mov
adc
cmp
xor
mov
sub
ficom
cmps
dec
add
mov
pop
fidiv
jl
rol
pushf
mov
pop
adc
movs
(bad)
mov
push
lods
pop
inc
into
mov
xor
or
push
enter
das
inc
add
mov
mov
add
lods
popf
add
repnz
mov
cmp
sbb
xlat
arpl
inc
lea
loop
dec
push
or
popf
xor
in
adc
mov
inc
push
and
adc
ins
hlt
cdq
inc
add
add
inc
jno
repz
ins
push
pop
sbb
(bad)
xchg
add
adc
add
sub
add
les
xor
sub
clc
mov
cmp
cmp
add
icebp
sar
sbb
lds
xchg
sub
icebp
add
mov
and
fcmovne
in
ret
in
mov
ins
or
xor
mov
push
jb
aas
push
pusha
push
rol
sub
push
xor
shr
scas
dec
shr
adc
inc
lea
jp
pop
xor
das
cmp
mov
jg
cmp
sbb
mov
ror
nop
mov
push
aas
out
and
pop
add
jmp
mov
loope
add
xor
fld1
mov
sbb
mov
movs
or
movaps
mov
mov
test
xchg
imul
inc
and
scas
imul
adc
dec
test
and
sbb
lods
dec
dec
jno
jne
mov
sbb
and
or
test
pop
pusha
inc
mov
adc
es
jecxz
or
sub
adc
imul
test
fwait
mov
ins
adc
call
push
pushf
call
push
inc
mov
pusha
mov
rep
neg
inc
mov
mov
enter
add
popa
and
stos
or
addr16
mov
adc
scas
xchg
push
cmp
cdq
adc
movs
push
scas
or
pushf
aam
imul
mov
sbb
inc
mov
push
jo
xor
sbb
movs
pusha
ins
add
js
pushf
mov
mov
and
xor
or
js
jno
mov
or
aas
ret
xor
std
sub
xchg
arpl
mov
fs
movs
mov
xlat
sub
xchg
arpl
ins
jbe
add
mov
push
call
lods
pop
pop
sbb
push
jns
bound
adc
jmp
test
xchg
and
dec
daa
(bad)
push
pop
adc
rep
imul
cdq
dec
xchg
push
leave
cwde
fld
test
or
ins
je
cmp
sbb
and
cmps
dec
ret
inc
add
mov
sbb
popf
mov
shr
lahf
add
shl
pusha
cmp
dec
or
xchg
cmp
push
nop
cmp
shl
(bad)
xchg
sbb
lods
(bad)
out
mov
adc
cmp
mov
shr
(bad)
cmp
js
add
or
pop
inc
mov
or
out
int
fcmovbe
inc
xchg
bound
sbb
sbb
jno
xchg
or
mov
mov
add
in
pop
nop
test
ret
scas
jne
(bad)
ins
ret
inc
add
or
xor
push
ret
dec
test
lods
pusha
and
lahf
and
add
or
mov
mov
xor
lds
les
adc
lods
adc
fs
mov
icebp
movs
push
push
sbb
mov
or
pop
repnz
mov
jno
pop
test
jno
stos
sub
fmul
sbb
sysexit
test
sbb
fadd
movs
mov
push
dec
inc
nop
sub
cmp
nop
dec
ret
push
movs
pop
test
push
mov
xchg
std
fdivp
push
push
inc
mov
xor
ficomp
hlt
dec
pop
cld
inc
push
xor
outs
in
sub
iret
xor
push
jns
push
push
cld
inc
mov
and
add
stc
pushf
mov
add
jecxz
sahf
or
arpl
or
movs
std
jnp
popf
mov
jno
stos
sub
fst
or
ins
and
add
mov
fcomp
mov
enter
and
cmp
push
rcl
stc
inc
add
pop
adc
sbb
adc
dec
loop
sub
and
movs
add
ret
out
and
in
cmp
adc
cmp
and
dec
sub
sti
or
xchg
div
xor
dec
out
cld
mov
pop
mov
cdq
mov
sub
or
mov
shl
sti
mov
sbb
cmp
add
dec
(bad)
or
loop
js
ss
mov
das
ret
mov
es
or
jl
mov
push
out
mov
jl
push
pop
mov
inc
int3
mov
mov
inc
std
add
inc
and
cs
inc
push
out
ds
imul
stc
syscall
xor
jl
iret
repz
mov
out
add
push
aad
int3
rol
retf
mov
add
jmp
aas
mov
rdmsr
jnp
mov
push
sar
(bad)
aas
inc
or
jnp
mov
add
pop
das
mov
sar
xchg
adc
or
cmp
rcl
cmp
test
rcr
add
nop
add
into
pop
adc
test
dec
push
out
add
repz
sar
push
push
fcomp
call
jb
or
xchg
push
ja
lock
mov
add
(bad)
inc
(bad)
sub
popa
in
push
bound
(bad)
idiv
and
ins
outs
arpl
imul
(bad)
fist
lods
jb
sub
popa
arpl
jne
jb
outs
je
test
imul
das
add
push
ins
adc
outs
(bad)
out
pop
outs
lock
inc
outs
jb
js
je
jb
gs
add
or
outs
add
add
add
add
jne
les
and
jb
lock
add
add
add
add
rol
or
int
dec
add
xor
inc
push
add
inc
aas
push
stos
pop
scas
pop
ja
dec
add
sub
sbb
ja
push
ins
xchg
je
je
and
jae
cmp
das
dec
fisttp
fs
mov
jge
ins
push
push
or
push
mov
retf
jns
out
sbb
popa
(bad)
outs
dec
jnp
aas
imul
outs
repnz
or
out
div
addr16
and
outs
cs
jo
mov
jbe
xor
stos
ins
sub
push
clts
or
cmp
out
fnstsw
jne
inc
push
data16
xchg
(bad)
neg
popa
xchg
ds
jp
sub
(bad)
sub
jnp
arpl
xor
mov
lahf
popa
push
sbb
inc
arpl
jo
scas
mov
dec
jbe
in
push
outs
(bad)
in
ds
je
adc
sbb
jo
out
lods
js
arpl
mov
fisttp
sub
leave
shr
imul
das
jb
mov
fidivr
xchg
xor
outs
xor
fidivr
or
(bad)
or
outs
xchg
lahf
mov
sub
aaa
jg
dec
sbb
cmps
iret
fbstp
inc
imul
sbb
(bad)
jne
jbe
shl
xchg
jb
jne
jb
fsubr
ds
adc
push
das
lods
mov
jae
mov
jmp
push
jo
lahf
outs
aas
or
loopne
or
arpl
(bad)
sbb
pop
mov
xlat
loopne
cmp
(bad)
aaa
ins
mov
imul
add
inc
in
imul
shl
jnp
push
dec
cmps
rdtsc
cmps
outs
pop
cs
sub
pop
xchg
mov
pop
jb
cmp
add
pop
stos
mov
mov
retf
je
scas
sbb
popa
mov
mov
scas
pop
dec
jne
popw
pop
jecxz
test
sub
ins
add
dec
addr16
pop
ret
fs
add
push
jno
and
or
inc
iret
sti
div
push
adc
dec
sar
push
adc
iret
sar
sbb
sbb
mov
sahf
out
cmp
sbb
stc
sahf
jnp
das
push
pop
sahf
push
sbb
sahf
sar
mov
clc
pop
js
jns
jns
jns
jp
push
cld
adc
pop
cmp
dec
inc
adc
mov
jp
inc
mov
sar
add
push
mov
dec
jb
fcmovne
add
(bad)
pop
mov
jl
adc
imul
mov
or
pop
mov
shl
fiadd
fwait
cmp
dec
add
fdivr
xor
(bad)
outs
das
pop
add
and
add
das
das
and
pop
mov
(bad)
mov
dec
inc
and
sbb
popa
jmp
je
dec
idiv
stc
lock
aas
dec
inc
lea
sbb
popa
jnp
outs
clc
ds
daa
outs
and
pop
pop
dec
and
pop
xor
neg
fsubr
out
iret
jns
out
shr
arpl
iret
(bad)
and
mov
push
arpl
pop
cmps
imul
jp
jae
push
and
sti
ss
dec
jne
dec
pop
mov
push
ds
test
iret
mov
(bad)
call
fisttp
ins
ins
cmp
cmp
fs
dec
and
jns
mov
xlat
mov
push
das
das
adc
push
inc
pop
sti
(bad)
arpl
bound
dec
outs
jbe
dec
arpl
add
jo
sub
addr16
cld
inc
jnp
xor
ins
xchg
outs
xchg
inc
jo
imul
popa
jb
jg
bound
cmp
out
popf
inc
popa
outs
adc
out
jae
xchg
pop
ja
out
mov
je
jb
xor
outs
in
push
push
gs
sbb
out
sti
cmp
push
jne
xchg
popf
jbe
cmp
inc
aas
add
ds
xor
jnp
mov
out
add
ins
jae
push
push
shl
popa
ins
jne
inc
inc
(bad)
ins
or
mov
adc
and
sub
(bad)
(bad)
jmp
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
aam
fprem
dec
dec
dec
dec
dec
mov
mov
pop
pop
pop
aam
or
bound
gs
imul
jo
add
jbe
pop
movs
push
jns
jnp
jge
jg
adc
call
pop
mov
and
add
popa
fistp
or
sar
retf
jno
loop
(bad)
stc
icebp
pusha
inc
mov
clc
ret
movs
add
xor
outs
shr
outs
imul
sbb
outs
das
cmp
jmp
add
jo
xor
popa
js
add
ret
dec
pop
sbb
out
loopne
sahf
pusha
ret
ret
sub
imul
add
adc
add
mov
sti
push
add
add
add
and
push
pop
push
add
xor
pop
call
add
pusha
push
fstp
inc
add
or
xor
sbb
(bad)
mov
add
add
mov
imul
and
adc
pop
(bad)
daa
push
addr16
mov
push
and
sub
jb
pusha
mov
jnp
push
jo
add
adc
push
mov
push
outs
imul
outs
and
push
or
nop
xchg
add
loope
loop
jp
cmp
mov
push
ror
add
cmp
lea
mov
nop
xchg
xchg
xor
dec
cs
mov
mov
push
in
add
fst
mov
inc
scas
mov
jmp
pop
pop
lods
push
stos
lods
mov
imul
or
cmp
ja
xor
inc
sub
ss
inc
pop
stos
stc
mov
push
pop
mov
xchg
je
hlt
jbe
mov
dec
bound
je
outs
data16
fst
ins
xor
ss
out
je
xor
fist
rcl
jo
pop
sar
jae
lea
mov
outs
js
push
test
and
ins
jo
jo
mov
fldenv
int
dec
xchg
shl
aaa
ins
in
pop
or
les
dec
imul
mov
or
inc
cmp
dec
inc
jb
imul
cmps
cs
stos
ss
jns
mov
mov
outs
lock
and
arpl
je
and
push
rcr
mov
outs
jle
jbe
mov
push
xor
outs
pop
jb
div
sbb
and
xor
inc
pusha
aaa
push
jns
inc
ss
lods
jp
mov
mov
pusha
xchg
pushw
pop
cs
mov
cmp
pop
and
push
sbb
xchg
pop
daa
bound
ins
adc
dec
test
pusha
lock
push
outs
mov
pop
pop
pop
push
push
jae
or
pop
in
cmp
cmp
sub
hlt
clc
addr16
or
mov
das
outs
gs
mov
add
icebp
jbe
mov
in
(bad)
adc
inc
push
push
push
push
dec
test
push
jne
repnz
push
push
ret
push
lods
(bad)
fild
lea
dec
dec
jge
adc
ds
jle
jb
xor
and
push
imul
mov
jg
inc
adc
adc
in
xchg
or
clc
mov
sbb
bound
push
inc
jg
loop
test
mov
das
je
outs
pop
loope
ins
xchg
daa
xchg
mov
ds
jnp
popw
pop
cmp
cmp
repz
fisttp
ds
and
sub
ret
je
jl
push
addr16
jle
addr16
je
cmp
dec
add
sub
pop
adc
jnp
or
sbb
das
push
jb
call
aaa
and
push
mov
(bad)
xchg
xchg
fcmovbe
mov
outs
stos
addr16
push
fstp
add
adc
xor
or
pop
shl
pop
mov
int3
lock
dec
sbb
(bad)
mov
xchg
inc
jo
cmp
and
(bad)
push
jl
repz
sub
pop
cs
add
cmp
repz
xor
adc
cld
mov
lock
push
test
out
(bad)
push
(bad)
push
aam
int3
mov
mov
lods
iret
repz
cmps
push
movs
outs
mov
sar
mov
mov
iret
pop
test
sahf
out
jo
push
sahf
out
pop
push
push
dec
lahf
out
sahf
inc
xor
and
cld
sub
iret
repz
enter
imul
or
sub
out
sahf
out
xor
lahf
out
sahf
push
xor
sbb
lock
repz
test
pop
sub
repz
repz
sub
push
pushf
jo
repz
xchg
jg
push
and
adc
sub
loopne
dec
aam
push
cdq
nop
sbb
add
and
mov
xchg
test
add
fcmovb
push
and
add
add
add
xor
rol
inc
add
loopne
add
add
add
test
pop
mov
add
jnp
outs
add
in
pop
mov
add
fild
jle
daa
or
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
(bad)
(bad)
(bad)
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
(bad)
(bad)
inc
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
(bad)
(bad)
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
inc
or
loope
and
mov
stos
test
and
pop
stos
add
call
gs
movs
mov
je
pop
shl
jns
push
xor
add
fcmovb
mov
mov
aaa
push
aas
in
dec
arpl
inc
ins
fs
cmp
jne
sbb
mov
outs
lods
mov
or
push
pavgb
lahf
push
pushf
pcmpgtw
xor
push
inc
xlat
add
dec
and
es
xor
push
dec
inc
dec
cmovns
outs
inc
das
push
adc
sub
adc
cmp
into
mov
mov
out
xor
jnp
inc
loop
mov
ds
repnz
cmp
retf
sbb
jb
jge
aas
xchg
jge
arpl
cmp
jg
repnz
jno
in
fst
mov
and
(bad)
jg
stc
cmp
dec
imul
retf
add
inc
mov
mov
and
inc
sub
fwait
ss
sbb
pop
push
out
vmwrite
inc
xor
inc
int3
dec
dec
xor
dec
popf
pxor
(bad)
(bad)
dec
xor
retf
aaa
push
div
inc
sub
dec
xchg
cmp
cmps
das
xchg
pop
(bad)
(bad)
call
and
xchg
retf
sahf
icebp
mov
cld
or
loopne
cmp
inc
mov
mov
out
fcom
mov
or
ins
mov
(bad)
out
leave
push
cld
aas
(bad)
jmp
or
popa
push
or
scas
int
mov
inc
mov
sahf
xchg
dec
add
scas
(bad)
lods
dec
dec
in
mov
xor
pop
mov
pop
pop
repnz
adc
xor
and
es
mov
fld
sbb
call
pop
jne
mov
and
add
adc
add
xchg
add
push
into
mov
enter
and
mov
dec
jns
inc
add
mov
out
xchg
pop
and
test
imul
outs
addr16
fadd
jae
retf
xchg
push
mov
xlat
scas
cmp
push
or
xchg
mov
arpl
bound
jne
sbb
pcmpeqw
lock
mov
jmp
test
xchg
fcmovnbe
sub
daa
je
pop
ret
jmp
(bad)
ins
add
stos
test
lahf
je
or
add
jmp
xchg
retf
adc
and
addr16
cs
fcomi
inc
jb
add
xlat
adc
jg
loopne
sub
pop
xchg
dec
dec
dec
outs
imul
add
xlat
ins
push
fimul
push
pop
jno
or
cmps
mov
or
lock
jg
(bad)
repz
jno
ret
fbstp
mov
ins
mov
ret
push
push
mov
sbb
push
mov
sub
daa
jnp
cmps
fldcw
ret
sbb
add
sub
jg
out
sti
or
or
(bad)
jns
sbb
xlat
cs
xor
jmp
cmps
ret
ret
inc
and
adc
jmp
mov
rcr
push
sub
stos
adc
ja
fild
push
cmp
mov
pop
mov
adc
push
shr
push
imul
sti
jo
es
es
sti
cmp
div
cmp
nop
sbb
out
sbb
sub
jmp
inc
sub
ins
ret
dec
(bad)
mov
rcl
(bad)
dec
jp
xchg
loope
or
aaa
pop
jecxz
jno
imul
dec
ret
adc
pusha
inc
mov
pop
inc
addr16
daa
fild
addr16
je
ins
int
inc
and
aas
cmp
ins
aaa
arpl
daa
pop
arpl
add
gs
jne
xor
cmps
jo
out
push
retf
xor
add
cli
pop
fistp
pop
inc
cmp
jbe
mov
add
pop
xor
imul
add
shr
xchg
test
fmul
sub
test
daa
ss
push
addr16
scas
or
mov
mov
aas
mov
ret
ds
jecxz
mov
je
jb
push
(bad)
or
push
mov
push
pop
call
inc
inc
mov
mov
rol
adc
or
xor
das
bound
out
jnp
adc
out
inc
push
ja
in
mov
pop
xchg
mov
mov
das
push
and
lods
pop
aaa
jecxz
stos
jp
jne
sub
sub
or
aas
sbb
lock
inc
pop
daa
jne
(bad)
dec
xor
das
dec
pop
outs
loopne
(bad)
dec
fwait
push
sbb
pop
mov
push
adc
jl
pop
inc
push
ret
js
adc
jno
idiv
adc
rol
mov
inc
outs
out
or
jg
ret
fdivr
jbe
sub
outs
sub
add
mov
scas
out
pop
push
fiadd
div
push
daa
bound
jae
push
pop
mov
addr16
sti
and
jno
mov
xor
or
or
mov
out
arpl
pop
outs
inc
cmp
jmp
lahf
jbe
test
les
outs
cmps
sub
mov
add
es
mov
ins
mov
(bad)
out
inc
(bad)
push
inc
mul
jno
scas
imul
mov
or
xchg
inc
inc
rcl
add
outs
imul
mov
ins
or
inc
ss
mov
dec
loop
inc
xor
xchg
jmp
out
inc
pop
je
pop
mov
out
dec
por
aas
js
sub
pop
mov
scas
inc
bound
(bad)
push
in
das
outs
mov
lds
(bad)
xchg
inc
arpl
pop
ret
mov
neg
aas
mul
pop
adc
inc
inc
neg
adc
mov
mov
inc
jl
adc
(bad)
pop
aam
pop
jl
imul
push
xchg
cmp
loopne
fmulp
and
addr16
bound
das
mov
push
das
mov
mov
fs
in
mov
stos
jecxz
xchg
es
out
xor
push
adc
jl
scas
loopne
mov
jnp
sbb
jmp
es
ja
(bad)
mov
add
ja
fnstsw
(bad)
outs
sbb
add
add
xor
jno
push
adc
cmp
ds
dec
outs
retf
jl
jo
cmp
cmp
aaa
push
lock
lock
lock
fisubr
fs
lock
lock
mov
imul
lea
jl
and
popa
repnz
(bad)
lock
adc
pop
cmp
es
addr16
and
and
mov
push
sub
(bad)
push
push
push
in
sub
fist
fild
push
mov
lods
jge
aaa
sbb
(bad)
xor
or
dec
jp
or
inc
jns
jae
mov
mov
and
fadd
fisttp
inc
adc
pop
mov
sbb
add
jl
arpl
mov
sub
pop
inc
scas
stos
pop
xor
pop
data16
pusha
(bad)
daa
aaa
push
shr
dec
inc
ins
inc
adc
pop
je
aaa
or
mov
jnp
outs
loop
lock
das
addr16
mov
bound
dec
adc
add
pusha
sbb
dec
jge
repz
gs
lock
mov
sub
add
out
sbb
in
ss
pop
inc
pop
cwde
fldcw
inc
push
push
sub
es
push
mov
mov
push
mov
dec
ds
push
jp
div
iret
out
push
cmp
out
jne
ins
mov
pop
push
push
cmp
fnstcw
cs
rcr
push
fst
jl
pop
out
inc
pop
mov
cs
js
aas
pop
sub
jl
test
pop
out
pop
push
mov
sahf
out
sbb
mov
leave
idiv
jnp
push
cld
or
xchg
inc
outs
jg
out
pop
sbb
push
cmp
dec
sar
or
dec
push
outs
ja
rol
mov
mov
ja
dec
sub
push
outs
pop
mov
jg
jo
jns
adc
mov
daa
inc
push
sub
cmps
push
push
add
or
ins
scas
push
or
sbb
sti
aas
pop
popa
cmp
rcl
jae
fs
and
popa
outs
arpl
push
gs
ins
pusha
push
cli
push
pop
out
popa
jne
or
and
dec
bound
ss
xor
icebp
loop
and
jae
sbb
aaa
mov
je
push
pop
push
pop
mov
mov
jne
cmp
int
xchg
cwde
push
lahf
mov
iret
std
xor
dec
loopne
adc
adc
dec
fs
ja
aad
and
(bad)
(bad)
lock
add
gs
je
cmp
mov
push
push
jo
jb
mov
jb
mov
and
jae
sbb
and
and
out
sti
(bad)
arpl
arpl
xor
cmp
fs
xor
mov
pop
clc
push
adc
mov
fidivr
adc
bound
data16
outs
sub
jae
data16
aam
imul
and
push
movs
in
push
pop
lea
pop
cwde
or
pop
jne
sbb
daa
imul
mov
mov
test
call
str
cmp
xchg
add
ret
xor
or
jmp
dec
inc
mov
mov
inc
push
cmp
cmps
add
cmps
add
pop
int
cs
sub
add
cmp
pop
jl
xor
outs
pop
test
and
xchg
ins
lahf
xlat
or
inc
inc
sub
out
or
fild
pop
pop
jmp
call
or
dec
sub
outs
cmp
xor
aam
mov
mov
push
mov
lock
push
shl
jo
fld
dec
xor
jg
and
and
dec
or
sub
pusha
shl
sbb
push
push
dec
lods
sbb
mov
mov
aas
pop
rcl
sbb
add
push
adc
jo
or
pop
mov
and
ja
sbb
push
mov
inc
mov
pcmpeqb
inc
push
inc
pop
dec
jg
inc
clc
or
dec
stos
sti
push
les
iret
sub
cmp
mov
gs
mov
fwait
or
xchg
adc
mov
pop
imul
add
lods
lahf
mov
jnp
(bad)
outs
pop
mov
push
outs
mov
imul
push
stos
mov
sbb
jnp
loope
(bad)
add
pop
sub
popa
pop
adc
and
mov
jbe
gs
lods
out
imul
push
jecxz
jp
jp
cs
pop
arpl
push
inc
aaa
or
push
bound
xor
jmp
icebp
xchg
jge
dec
(bad)
jb
fs
je
data16
add
js
les
xor
dec
inc
lahf
loopne
mov
pusha
into
inc
add
adc
mov
fild
inc
retf
iret
mov
push
ja
add
jbe
jmp
cmps
sbb
arpl
inc
and
push
push
inc
add
adc
adc
sub
out
call
shl
or
sbb
lods
iret
mov
sub
js
add
add
jge
cmp
inc
jg
push
fisubr
sahf
xor
sbb
jmp
aad
add
mov
or
xchg
(bad)
(bad)
or
addr16
mov
arpl
outs
jo
pop
pop
add
ja
mov
pushf
push
cmc
(bad)
out
out
or
nop
xlat
arpl
je
lahf
push
and
push
dec
shl
jmp
xchg
popf
cmp
mov
cs
jb
or
push
xchg
test
faddp
lds
push
cs
add
stos
lahf
(bad)
mov
cmps
mov
lods
inc
xchg
inc
shl
push
sbb
je
inc
sbb
jmp
nop
sbb
add
or
jnp
inc
pop
push
repz
pop
add
lea
cmp
push
imul
push
or
inc
arpl
mov
jae
mov
aaa
jno
push
add
fistp
and
mov
outs
(bad)
lock
or
pop
das
pop
adc
inc
sbb
arpl
shr
imul
ss
inc
and
into
shl
(bad)
rcl
ret
(bad)
add
retf
outs
inc
and
out
pop
rcr
out
test
jmp
add
mov
inc
inc
repz
mov
std
ret
cmps
xchg
xor
(bad)
cmp
mov
sub
pop
pop
jb
pop
scas
inc
outs
cmp
sbb
xor
ficomp
fld
sbb
xchg
out
mov
mov
jecxz
mov
mov
loopne
lahf
sti
pop
shl
or
cmp
jp
xchg
push
and
pop
xchg
push
fstp
mov
jnp
jb
xlat
test
push
mov
inc
sti
jp
rcr
cmp
test
adc
add
and
or
addr16
xor
jnp
cmps
xchg
aas
xor
xor
arpl
push
sub
add
xlat
es
cmp
pop
inc
(bad)
outs
daa
es
mov
cmp
ja
arpl
cmp
shl
popa
shr
mov
jae
dec
sbb
cmp
xor
hlt
push
inc
(bad)
arpl
out
pop
xor
scas
inc
jne
and
adc
xor
out
jecxz
sbb
fwait
test
test
xchg
loopne
adc
add
mov
jne
arpl
jne
sub
imul
ret
test
pop
add
push
scas
popf
outs
push
xor
inc
sbb
inc
mov
icebp
push
xor
sub
aaa
or
nop
xor
das
pop
fld
outs
bound
mov
inc
dec
addr16
les
ins
add
sub
das
add
dec
xchg
sbb
push
rcl
or
cdq
call
dec
xor
lahf
push
movq
pop
pop
lock
call
loopne
inc
sahf
push
sbb
xor
dec
or
or
(bad)
ins
clc
dec
xchg
ror
cmp
loop
popa
xchg
jmp
dec
pop
pusha
or
or
stos
inc
pop
push
sti
xor
cmp
adc
vmovsd
dec
mov
push
or
and
push
adc
cmp
dec
arpl
xchg
movs
ret
cs
ja
sbb
sbb
xchg
arpl
lods
adc
movs
or
pop
add
jmp
data16
cmp
fmul
mov
mov
xor
sub
xchg
fld
(bad)
div
adc
inc
es
unpckhps
daa
xor
inc
das
jb
icebp
dec
cmp
scas
push
push
ret
aaa
add
pop
minps
aas
push
adc
mov
lahf
cmp
push
jle
dec
mov
(bad)
push
pop
(bad)
imul
ins
repz
push
mov
mov
scas
iret
loope
push
pop
outs
push
mul
and
xchg
inc
pop
pop
test
iret
jp
(bad)
mov
cs
pop
dec
add
les
ins
(bad)
jnp
push
sub
fistp
scas
pop
add
fcom
fistp
cmp
out
add
sub
lods
movhps
inc
fld
and
inc
xchg
sti
mov
out
mov
push
pop
leave
dec
or
lahf
xchg
or
movs
adc
cmps
fld
test
cld
pop
adc
pop
pop
mov
dec
sbb
inc
call
outs
popa
mul
frstor
push
and
mov
cs
push
ss
outs
bound
xlat
(bad)
xor
xor
pop
pusha
pop
cmp
sbb
icebp
jbe
cmp
les
popa
xor
loop
mov
jo
xchg
add
jae
push
sub
push
pop
(bad)
sub
aaa
loop
sahf
xchg
pop
add
das
add
pop
cmp
jne
outs
sti
cwde
in
fdiv
add
sti
scas
daa
cmp
pop
pop
xor
outs
dec
(bad)
and
adc
out
push
movs
retf
push
sub
clc
scas
out
jns
fidiv
mov
test
or
xor
out
sbb
out
iret
or
bound
mov
mov
inc
jmp
inc
sbb
pop
das
and
mov
ror
adc
enter
and
pop
(bad)
xlat
imul
jp
das
aaa
and
mov
mov
inc
jbe
bound
(bad)
push
mov
repz
jnp
dec
lahf
(bad)
add
mov
add
loopne
(bad)
(bad)
data16
mov
push
and
fs
icebp
pop
jno
and
das
outs
sbb
aad
daa
aaa
inc
cmp
sbb
push
ins
xor
(bad)
add
sub
dec
cmp
test
inc
dec
add
sti
fisttp
push
ins
arpl
not
bound
or
pop
pop
mov
push
or
sbb
mov
sbb
jl
aas
mov
out
inc
jg
push
mov
mov
inc
jl
xchg
test
mov
in
loope
leave
push
xor
cmps
xchg
loopne
push
leave
stos
in
add
pop
or
fisub
scas
xchg
adc
fnsave
push
jb
sbb
fmul
xchg
test
xchg
mov
xchg
push
leave
xor
fimul
in
and
inc
sub
cwde
push
leave
stos
in
lock
mov
push
add
(bad)
pusha
xchg
mov
aad
leave
push
xor
mov
push
sub
shr
and
stos
in
cdq
js
pop
and
mov
push
sub
call
les
fld
and
xlat
and
out
pop
and
push
jg
lea
sub
mov
pop
rcl
mov
cmps
ret
and
xor
fwait
or
push
inc
fiadd
mov
add
rcl
mov
inc
xlat
iret
cmp
dec
daa
das
sub
xlat
inc
xor
shr
out
bound
dec
pop
arpl
dec
dec
inc
and
mov
mov
push
sbb
pop
push
dec
sbb
pop
sbb
fld
and
push
dec
cmps
shl
mov
aas
mov
shl
mov
aam
push
inc
xlat
push
adc
stos
shr
dec
not
pusha
imul
movs
inc
inc
adc
add
sbb
cmp
inc
ins
mov
aas
(bad)
xchg
sub
fild
inc
scas
jg
mov
inc
scas
cmps
lahf
scas
je
test
pop
inc
or
jo
add
adc
add
cmp
jp
jno
or
mov
sbb
push
ret
jmp
das
xor
shl
push
or
aaa
outs
or
outs
(bad)
scas
(bad)
fsub
push
add
push
dec
sbb
ret
inc
rcr
sbb
pop
fisub
aas
jp
add
jne
adc
mov
aaa
out
sub
sub
and
pop
inc
(bad)
mov
(bad)
iret
inc
mov
fimul
sbb
sbb
loop
sbb
call
adc
push
jg
jbe
dec
push
dec
pop
inc
xlat
mov
jg
add
(bad)
add
add
or
xlat
pop
add
pop
sub
(bad)
popa
xor
pop
lea
pop
inc
inc
add
sti
push
pop
sub
jnp
pop
or
(bad)
mov
add
push
sub
(bad)
push
push
sbb
add
xchg
jb
and
out
pop
inc
pop
inc
and
lahf
cmps
addr16
mov
add
es
addr16
bound
xor
fst
es
or
mov
cmp
sub
mov
push
and
dec
pop
movs
lds
mov
loop
fbld
xchg
jae
add
pop
or
sub
jo
es
div
es
imul
mov
faddp
dec
mov
push
jbe
xor
js
push
xor
daa
outs
xor
add
lea
cmp
in
ja
adc
sahf
add
jae
mov
mov
dec
js
fs
pop
leave
or
fistp
mov
stos
(bad)
jmp
popa
push
push
sbb
in
or
add
iret
and
shl
push
push
repz
and
movs
imul
scas
jae
out
cmp
sahf
out
sahf
pop
sbb
jns
out
push
and
dec
(bad)
jmp
ss
dec
xchg
add
mov
add
or
adc
adc
jns
and
sub
xor
mov
ins
sbb
push
mov
ss
mov
popa
xchg
add
shl
cdq
int
test
sub
shr
xchg
pop
int
fldcw
push
adc
pop
add
sub
sbb
retf
fucomi
data16
add
xchg
and
call
inc
xor
inc
xor
or
push
push
push
jl
jnp
mov
push
ret
aaa
push
repnz
(bad)
sar
sahf
pop
scas
ins
ss
out
retf
fdivr
gs
fs
xchg
loopne
std
or
pushf
adc
mov
and
lock
stos
sbb
ja
ds
mov
jae
inc
pop
(bad)
mov
mov
inc
inc
jbe
mov
(bad)
sub
mov
not
mov
inc
xchg
pop
push
jo
jbe
iret
pop
inc
pop
lea
addr16
imul
out
outs
popf
stc
add
rdmsr
test
jne
xor
ins
fist
es
das
or
cmps
(bad)
int
idiv
xlat
adc
mov
cmp
out
push
push
sbb
aas
dec
lods
add
test
jns
and
or
mov
fiadd
cmp
pop
adc
or
lahf
xchg
xchg
and
add
dec
and
push
les
lea
add
dec
fcomp
sbb
inc
mov
cmps
pop
pop
adc
in
push
mov
cmps
xor
pop
das
lods
xor
lea
outs
pop
sub
out
xor
je
push
sahf
push
cs
cmp
push
(bad)
xor
push
out
mov
imul
add
push
sub
add
jnp
sub
cmp
jns
xor
jae
fs
mov
sub
into
xor
pop
js
aad
jecxz
pop
pop
dec
shl
pop
sub
mov
or
add
js
xor
cmp
or
es
pop
mov
dec
or
inc
push
adc
scas
fnstsw
ss
push
(bad)
dec
mov
bound
sahf
ja
adc
xor
out
mov
xor
cs
retf
cs
jb
loop
push
ret
sar
cmps
xchg
ja
retw
fsubrp
cmp
pop
mov
xor
push
dec
jmp
arpl
jnp
loop
sub
arpl
fs
mov
iret
cmp
adc
dec
daa
inc
xor
out
imul
push
mov
cs
loopne
fst
bound
imul
pop
pop
into
fnstsw
mov
push
es
ss
outs
pop
push
pandn
not
daa
dec
jb
das
inc
pop
(bad)
lods
loope
dec
es
das
add
and
jns
inc
pop
push
sysexit
mov
scas
jns
dec
cs
sahf
push
outs
jecxz
cmp
push
push
mov
pop
sahf
jle
push
ins
mov
fidivr
push
inc
cs
xor
push
ds
ret
repz
push
fimul
mov
jg
dec
das
xor
mov
pop
outs
pop
sar
(bad)
js
push
into
rol
outs
enter
imul
sbb
pop
push
imul
xchg
inc
jg
loop
ffree
add
sub
jae
fadd
xchg
test
dec
lahf
psraw
xor
mov
fsub
jnp
mov
and
add
int
and
xor
push
inc
inc
fstp
aas
(bad)
pop
cmp
jae
xchg
and
pop
jmp
xor
xchg
and
lods
pop
xor
or
inc
sub
jnp
push
push
or
scas
mov
fwait
sub
arpl
push
cmp
test
call
test
popf
cmp
add
arpl
push
add
outs
mov
ret
xlat
stos
scas
or
or
dec
test
in
sti
mov
push
cmp
add
dec
daa
mov
sti
lahf
sub
movs
out
inc
mov
mov
mov
jno
or
lahf
lods
int
mov
dec
outs
mov
jno
and
ret
xlat
inc
dec
stos
bound
aaa
addr16
addr16
or
sub
jmp
rcl
push
dec
inc
or
inc
mov
fs
outs
lods
and
or
and
popa
lea
pop
mov
das
sbb
sbb
mov
addr16
inc
(bad)
test
div
repz
push
scas
js
mov
outs
lods
cs
add
xchg
rcr
inc
fs
inc
jge
scas
addr16
sbb
mov
arpl
mov
test
inc
inc
mov
repz
mov
pop
(bad)
push
mov
jno
push
xor
dec
loopne
in
adc
iret
imul
cs
repz
ins
add
pusha
add
call
dec
fstp
ja
pop
cmp
mov
fs
arpl
xor
and
std
add
xor
xor
push
xchg
sub
outs
push
mov
pop
repz
les
ja
jae
pop
je
test
xor
aad
test
mov
add
mov
lds
xchg
or
adc
add
das
adc
add
push
sub
vcvtsd2si
adc
mov
lahf
push
fild
outs
and
test
mov
xchg
inc
ret
or
sub
sub
addr16
and
iret
push
xor
stos
pop
sti
and
cmp
mov
and
das
test
fwait
nop
mov
or
es
pop
(bad)
popa
fld
pusha
mov
aaa
nop
or
cdq
sub
popf
mov
xchg
ja
inc
mov
pop
shr
push
mov
xchg
jnp
dec
jmp
add
jns
imul
rcl
fild
mov
xor
mov
jae
ret
jae
daa
jbe
or
dec
data16
outs
aas
push
mov
xor
mov
mov
(bad)
aaa
ss
add
mov
mov
mov
add
sub
dec
mov
ds
fld
pop
cmc
adc
jle
sub
pop
rol
push
lgs
ja
dec
add
das
mov
ja
mov
inc
js
xor
sub
imul
sub
popa
fcmovnu
xlat
and
xchg
and
or
jbe
loope
ror
jbe
xlat
push
cmps
ins
jmp
and
ins
call
es
pop
daa
inc
pop
xor
add
nop
jmp
shl
mov
mov
push
(bad)
push
jg
push
and
mov
add
adc
xchg
mov
mov
lods
pop
dec
movs
enter
(bad)
std
dec
push
mov
inc
push
ins
ss
adc
cli
mov
sub
std
mov
jae
sbb
mov
sbb
mov
fsin
test
ds
pop
sbb
xor
mov
das
ss
dec
(bad)
fsub
sbb
mov
xor
dec
xchg
jecxz
dec
push
lds
test
add
pop
adc
movs
or
and
mov
inc
mov
js
shl
xchg
jnp
inc
fiadd
ins
add
lods
fs
push
add
bswap
pop
inc
jbe
aam
jne
and
xchg
push
mov
push
dec
xor
pop
leave
jae
pop
adc
add
xlat
cs
in
fwait
in
inc
aam
in
cmp
mov
dec
sahf
xchg
cmp
in
test
je
cmp
add
or
data16
xor
stos
(bad)
rcr
lahf
cs
sbb
adc
inc
pop
dec
xchg
jmp
shr
arpl
mov
arpl
pop
test
sbb
popf
rol
and
rol
cmp
out
mov
cmp
sub
pop
xor
inc
adc
inc
push
inc
xor
mov
inc
addr16
(bad)
idiv
cmps
jp
mov
jge
bound
or
popa
pop
stos
dec
add
aaa
cdq
add
dec
(bad)
inc
test
imul
cmp
cwde
adc
bound
imul
dec
lea
ficomp
mov
cmp
push
and
add
add
xor
aaa
fisubr
rcl
cmp
sbb
dec
popa
push
pop
mov
shl
scas
pop
push
rcl
not
fwait
pop
mov
loopne
dec
push
push
scas
xlat
jp
xor
inc
imul
(bad)
imul
imul
xchg
outs
dec
addr16
sbb
add
(bad)
das
mov
popa
inc
pop
js
xlat
aas
(bad)
inc
dec
xchg
inc
call
xor
adc
push
syscall
cmp
and
xlat
out
ss
stos
(bad)
jae
jb
adc
(bad)
jnp
mov
mov
adc
(bad)
sub
lods
nop
mov
cmps
mov
sbb
(bad)
fbstp
lods
stos
xor
fbstp
ins
stos
adc
dec
xor
cdq
dec
dec
push
push
mov
aaa
dec
inc
arpl
xor
cmps
push
add
pop
aad
cli
out
xchg
jle
call
scas
xor
pop
xchg
stos
xchg
pop
jae
mov
les
cmp
ja
(bad)
fucomp
imul
or
xchg
in
jnp
push
pop
call
idiv
cdq
pop
or
lods
sysret
data16
xor
and
pop
adc
ds
mov
mov
fs
xor
inc
fcom
inc
xchg
pop
add
jp
push
retf
xor
sysret
or
es
fld
mov
pop
cmp
scas
or
add
fidiv
sub
jne
cmps
cmp
in
jnp
in
aam
dec
aaa
xchg
or
jp
push
aaa
ins
fistp
xchg
push
fs
sub
cmp
mov
push
cmc
mov
pop
fst
ins
ds
push
mov
retf
or
xor
jns
iret
aam
inc
and
loop
sbb
test
push
cmp
fs
inc
rol
es
xor
inc
sbb
lea
push
aaa
mov
div
jnp
scas
push
mov
pop
push
fwait
jge
xchg
cmp
dec
push
pop
push
sub
repz
xchg
push
(bad)
fxtract
push
jge
cmp
push
pop
jo
pop
nop
mov
and
imul
aaa
mov
mov
(bad)
pop
xlat
or
cdq
cmps
jge
repz
icebp
sti
add
stos
jge
jnp
clc
call
sub
cmps
sbb
cmps
push
jge
ss
sbb
out
fidivr
es
mov
sub
out
out
(bad)
inc
and
rol
push
xchg
inc
iret
repz
aad
dec
push
outs
mov
retf
dec
mov
dec
scas
cmp
ja
push
and
in
add
out
cmp
mov
push
shl
test
data16
dec
sub
ins
lahf
repz
out
in
dec
sub
repz
je
enter
iret
repz
jns
mov
sahf
out
call
(bad)
out
sar
sbb
push
add
dec
xor
push
jecxz
(bad)
jg
dec
sbb
scas
sub
adc
and
and
(bad)
rcr
push
push
mov
xor
adc
data16
xlat
add
mov
and
push
mov
movs
test
loopne
mov
jg
jg
adc
push
and
pop
sbb
enter
adc
stc
jg
xchg
inc
repnz
iret
pusha
or
test
adc
sub
pop
xchg
shl
inc
ss
cmp
retf
clc
mov
lock
sub
xlat
imul
std
and
iret
cmp
or
push
outs
jp
xor
push
js
xor
mov
pop
ins
cmovs
xor
sbb
and
dec
xchg
pop
mov
fcmovbe
lods
xchg
fild
rcr
stos
fwait
jmp
jo
add
(bad)
rcl
dec
lock
push
push
pop
inc
outs
xor
push
popa
je
inc
test
adc
fcomp
scas
push
xchg
xchg
cmp
fnstenv
shr
out
pop
push
ficom
ins
mov
fisubr
pop
dec
aaa
xchg
imul
aam
pusha
xor
sbb
cmps
addr16
inc
or
pusha
cmps
push
mov
lahf
pop
sub
inc
lods
not
pop
sub
jg
jae
loop
mov
mov
js
or
pop
dec
syscall
mov
lods
mov
jo
inc
bound
dec
sbb
xchg
pop
inc
jecxz
adc
mov
jecxz
xor
test
popa
imul
fs
add
pop
pop
jb
add
pop
aaa
rcl
xor
xchg
sub
or
sub
adc
sahf
add
pop
add
mov
mov
out
dec
push
and
movs
push
cmp
jp
outs
dec
icebp
jae
xor
daa
call
cmp
xor
pop
and
push
sub
jmp
jbe
dec
(bad)
fs
jo
xor
pop
test
daa
dec
dec
fucomip
or
outs
imul
jnp
gs
dec
cmp
add
rol
dec
mov
sbb
ins
jg
jg
and
adc
xor
xlat
addr16
pop
pop
shr
shr
pop
pop
mov
pop
dec
ror
add
jbe
sbb
add
bound
inc
sbb
stos
sar
aaa
add
inc
mov
scas
jmp
lea
push
add
popa
loopne
aam
das
das
sub
mov
scas
push
jae
push
inc
push
pop
jnp
fst
(bad)
cmps
pop
into
loopne
and
fisttp
cmps
(bad)
jae
sbb
dec
add
push
es
cmp
mov
pop
paddq
inc
sti
push
ja
push
cmp
ss
das
pop
push
out
xor
aas
mov
mov
or
or
push
sub
mov
rol
mov
mov
cs
popw
outs
aaa
aaa
imul
mov
pop
inc
xchg
das
add
jg
shl
popa
imul
ins
adc
test
sbb
add
push
pop
dec
mov
mov
pop
add
push
xchg
fiadd
push
pop
loopne
inc
jle
jnp
fmul
and
jecxz
fidivr
(bad)
out
inc
into
inc
add
inc
push
mov
bound
lahf
imul
neg
push
cmp
add
aas
rol
loopne
push
(bad)
xrelease
(bad)
mov
fisubr
adc
aad
iret
add
loopne
xor
xor
fcmovbe
adc
addr16
mov
pusha
adc
outs
xlat
pop
push
test
or
pop
pop
push
pushf
add
outs
mov
ja
add
mov
sub
movhps
inc
inc
push
inc
daa
sbb
cs
sub
push
(bad)
sbb
out
inc
cmp
fidiv
adc
pop
inc
add
dec
dec
inc
jle
jbe
mov
bound
sub
mov
mov
pop
xor
pop
test
and
lahf
(bad)
mov
xor
lock
jg
add
shl
xlat
cmp
inc
mov
ret
test
xor
pop
push
call
es
jns
je
or
pop
and
outs
mov
pop
das
adc
and
add
adc
jbe
es
ins
jo
(bad)
je
pop
pop
ja
outs
movs
addr16
jo
jae
daa
pop
jno
outs
arpl
ud2
push
bound
xchg
mov
cmp
jns
je
jne
or
adc
je
test
ja
out
pop
ins
xor
mov
jae
pop
inc
adc
dec
hlt
ss
bound
mov
sub
popf
nop
shl
imul
ja
dec
outs
push
or
xchg
sub
jbe
inc
or
lods
inc
mov
shr
push
push
pop
sbb
dec
adc
sbb
inc
outs
ret
push
push
loop
bound
cmp
cmps
shl
nop
ret
sub
test
test
or
dec
push
push
xchg
push
mov
jmp
dec
adc
mov
cmps
pop
pop
push
stos
add
ins
jp
push
push
addr16
adc
cmp
push
aam
jns
jb
add
scas
iret
lea
lock
push
ret
add
movs
mov
xlat
mov
out
inc
outs
outs
xchg
adc
fisttp
js
aaa
inc
ins
jo
xor
daa
out
les
pop
mov
mov
out
jb
out
js
adc
imul
mov
pop
inc
dec
inc
dec
push
mov
xchg
addr16
add
add
ds
and
inc
sub
add
ret
(bad)
jbe
add
add
add
mov
addr16
jg
xor
inc
xchg
inc
aaa
(bad)
(bad)
(bad)
push
sti
shl
ret
icebp
adc
pop
movs
cmp
aad
sbb
cwde
stos
pop
fadd
pop
cmp
(bad)
call
mov
jge
push
je
mov
and
fwait
rol
fwait
in
inc
mov
out
(bad)
popf
ror
mov
jmp
dec
fsubr
stc
jbe
push
ds
ins
(bad)
xor
(bad)
(bad)
jmp
(bad)
jg
mov
inc
xchg
cmps
aad
arpl
push
sub
adc
or
(bad)
(bad)
(bad)
jmp
cld
ins
sub
adc
or
or
cs
ret
sub
xchg
mov
data16
(bad)
(bad)
jmp
mov
call
cdq
(bad)
test
push
push
shl
(bad)
call
dec
ja
daa
mov
mov
mov
sbb
dec
stos
fmul
retf
rep
cs
outs
arpl
js
js
test
add
mov
dec
jmp
push
(bad)
(bad)
(bad)
jmp
js
(bad)
addr16
push
scas
addr16
cmp
dec
movs
jg
push
push
mov
dec
cmp
call
sbb
loopne
and
dec
ret
push
and
pop
mov
mov
xchg
mov
and
ds
das
sbb
add
mov
int3
jle
repz
daa
daa
daa
push
and
mov
pop
inc
inc
inc
push
inc
pop
and
or
aas
js
cmp
mov
mov
push
and
xor
lods
inc
test
gs
shl
jge
iret
sub
and
ds
push
popw
push
out
pusha
jo
sbb
push
fdivr
ss
add
mov
jg
pop
cmp
sub
push
lods
mov
mov
sub
inc
outs
div
jbe
pop
mov
mov
xor
cmp
lahf
push
outs
inc
fnstcw
push
cs
sar
movs
and
or
fisub
xchg
lods
mov
and
rcr
and
repz
mov
pop
outs
cmp
and
or
mov
pop
lahf
dec
pop
xchg
and
push
inc
out
or
(bad)
push
lds
ror
mov
xor
xor
jmp
fiadd
jb
push
rcr
sbb
out
push
imul
adc
popa
test
and
and
arpl
ins
mov
cmp
je
imul
cmp
jns
aam
xchg
and
push
mov
mov
popa
stos
and
push
mov
inc
adc
dec
sbb
sub
sub
push
lock
sar
ret
dec
inc
push
sti
int3
int3
mov
adc
jo
movs
push
xchg
add
ins
outs
fs
gs
ret
out
jo
jns
iret
inc
mov
push
loopne
pop
pop
outs
ins
jne
dec
les
mov
shr
add
or
lds
cmp
and
jecxz
je
bound
aaa
mov
or
inc
ins
dec
jbe
xchg
fiadd
inc
popa
imul
inc
sahf
aaa
(bad)
loop
outs
xor
pop
fcomp
jnp
add
gs
(bad)
mov
jnp
dec
adc
xchg
dec
inc
xadd
(bad)
cld
(bad)
das
sbb
inc
cmovo
div
cmp
aas
(bad)
nop
jo
cmovl
pop
pop
pavgb
fiadd
mov
xor
jmp
sub
dec
and
cmps
add
loopne
imul
or
rcr
lea
cmp
ds
or
sbb
dec
and
daa
push
xor
(bad)
ins
out
push
inc
push
pop
das
inc
add
outs
pop
iret
js
ja
mov
(bad)
(bad)
lahf
add
cmp
sar
les
loopne
inc
daa
outs
push
int
inc
xchg
mov
in
jnp
fadd
retf
ja
fidivr
mov
inc
dec
fsub
pop
pop
jnp
fisttp
inc
test
add
pop
add
sahf
add
pop
jle
pop
mov
dec
mov
scas
in
xor
clc
cdq
loop
jbe
or
outs
adc
outs
add
dec
enter
inc
push
dec
addr16
ficom
add
neg
sub
fsub
repz
enter
in
aad
std
push
adc
inc
inc
add
pop
dec
adc
and
xor
pop
pop
and
xchg
dec
outs
xchg
in
nop
out
pusha
jo
cs
mov
sahf
or
mov
nop
movs
lods
rcr
mov
xchg
clc
addr16
(bad)
aas
add
clc
add
inc
int3
mov
aaa
and
pop
push
movs
das
inc
cdq
fsubr
xor
pop
mov
mov
(bad)
aas
dec
mov
or
addr16
push
xchg
cmp
repnz
lock
lahf
mov
aam
mov
int
out
dec
dec
(bad)
xor
inc
push
nop
enter
mov
dec
aas
ja
cs
lahf
aam
cmp
or
int
pop
ins
and
inc
loopne
lods
pop
in
out
pop
and
aam
mov
mov
lock
(bad)
cmp
inc
daa
lock
mov
mul
inc
enter
mov
daa
test
scas
enter
mov
nop
les
out
ds
jb
aaa
je
adc
sbb
(bad)
(bad)
and
sub
push
fisub
mov
and
iret
push
imul
mov
daa
add
mov
mov
aam
cld
enter
add
aam
fiadd
rol
fmul
in
push
push
xchg
cld
ins
sar
push
sbb
test
jo
pop
cmp
jns
div
cwde
cld
rcl
or
or
push
dec
in
dec
add
mov
ror
test
pop
ins
rcl
cld
(bad)
push
ja
add
pushf
mov
mov
enter
in
fs
ds
cld
or
xor
mov
cmp
and
jnp
dec
push
pop
lahf
pusha
nop
out
pop
ja
mov
lods
mov
or
mov
mov
fsub
sub
pop
sub
push
push
shl
fdiv
fistp
out
mov
adc
mov
cmps
push
cmps
sbb
in
mov
cmps
cmp
aaa
and
cmp
push
enter
push
dec
fisub
(bad)
jg
mov
cs
mov
or
and
fbstp
in
and
idiv
push
xor
cmps
in
out
mov
jg
and
nop
out
nop
js
pushf
fmul
cmp
push
cmps
js
out
sahf
dec
int3
fdiv
jl
enter
dec
int3
mov
and
xor
inc
mov
test
loop
js
jne
iret
mov
mov
scas
jbe
repnz
xchg
(bad)
dec
add
inc
enter
inc
cs
enter
lahf
or
adc
and
fiadd
cdq
fdiv
lahf
clc
ja
inc
call
cmp
nop
test
fs
sahf
or
(bad)
in
mov
aaa
push
jl
js
fadd
adc
push
loope
aad
fmul
push
mov
cmps
cmps
iret
push
cmps
test
jb
loopne
enter
mov
jns
pop
lods
adc
add
cs
and
addr16
mov
jg
cmps
push
cmps
cmps
iret
test
addr16
cmp
jb
cmps
push
ins
test
in
xchg
addr16
iret
test
lahf
test
clc
dec
ss
mov
out
ficomp
pop
in
and
clc
cmps
loopne
lahf
or
dec
ficomp
aas
mov
jg
sbb
mov
test
mov
fidivr
inc
push
fsub
mov
add
ds
and
ins
dec
pop
cmps
hlt
mov
dec
fstp
pop
sahf
push
dec
dec
aas
ja
and
ins
lahf
rcr
mov
repz
out
call
inc
jl
fdiv
out
dec
lods
sub
shr
jl
jbe
inc
jbe
dec
mov
push
pushf
push
mov
pop
mov
or
push
inc
jg
pop
repnz
inc
js
lock
cs
loopne
inc
loopne
lock
push
push
movs
(bad)
push
enter
jg
outs
in
stc
dec
int3
test
addr16
lahf
pusha
ins
inc
jo
inc
ja
pop
enter
aam
clc
fstp
xchg
push
lock
aam
enter
shr
fidivr
fisubr
aam
dec
inc
ja
adc
sbb
sar
ficom
xchg
mov
call
mov
jo
int3
inc
jo
or
lahf
jo
inc
ds
jb
cwde
sbb
rcl
outs
sub
inc
fist
mov
jg
int3
rol
aad
rcr
lahf
int3
inc
add
add
inc
shl
and
in
iret
pop
pop
add
ss
xchg
xor
loopne
lahf
imul
fwait
nop
iret
add
pusha
fs
push
add
fadd
nop
out
fidivr
nop
mov
enter
mov
mov
sbb
clc
push
sub
iret
mov
pop
jg
in
pop
daa
add
ins
lahf
in
inc
nop
out
mov
inc
adc
lods
aaa
mov
mov
push
mov
cmps
inc
dec
in
inc
lock
inc
adc
lahf
dec
int3
(bad)
push
add
pop
repnz
pusha
jo
and
enter
pop
repnz
enter
mov
test
mov
and
jecxz
jecxz
iret
test
in
cs
nop
jecxz
pusha
in
mov
inc
ja
adc
sub
mov
fmul
nop
inc
dec
lods
mov
in
inc
ds
jb
loopne
xor
fsub
mov
inc
xchg
inc
sti
(bad)
push
mov
outs
aas
js
nop
push
repnz
cwde
add
repnz
in
cdq
mov
xor
sbb
iret
fdivr
or
int3
shl
push
xchg
inc
outs
nop
iret
lds
xchg
clc
inc
in
xchg
out
push
pusha
enter
lods
sub
sbb
mov
dec
adc
daa
in
loopne
(bad)
jmp
lock
iret
test
lock
xchg
aaa
and
mov
push
push
mov
daa
aas
daa
data16
cdq
or
adc
daa
pushf
pop
and
out
fcom
mov
scas
(bad)
ins
xlat
mov
mov
adc
out
or
jmp
push
add
aas
call
add
ja
pop
adc
pushf
ja
sbb
(bad)
mov
outs
mov
add
cmp
and
mov
in
xlat
data16
sub
fistp
call
daa
xchg
push
jae
(bad)
addr16
push
ret
aas
pop
out
pop
mov
sbb
jbe
daa
sbb
test
dec
scas
in
scas
inc
inc
cmp
in
xor
in
scas
in
sub
ret
dec
scas
add
cmp
pop
mov
jl
jae
push
dec
push
xor
icebp
mov
out
cmp
clc
add
es
push
and
repz
out
mov
cmp
clc
out
push
cmp
mov
ds
push
push
stc
clc
in
movs
mov
cmp
repz
pop
cmp
add
stos
push
int
scas
fisub
xchg
jmp
add
pushf
in
dec
test
cld
xchg
aas
imul
xchg
cmp
sub
nop
add
dec
sahf
out
jmp
add
fidivr
mov
jg
push
xor
mov
fdivp
push
inc
out
cld
inc
mov
push
add
and
mov
and
xchg
dec
and
jbe
inc
dec
outs
xchg
sti
or
leave
inc
sbb
push
loopne
cs
fsubr
fmul
movs
dec
outs
add
and
fs
pushf
inc
(bad)
jge
adc
in
call
dec
in
fmul
movs
fild
fild
mov
test
clc
(bad)
(bad)
cmp
adc
xchg
pop
popa
and
add
pop
sub
jmp
(bad)
pop
leave
and
fnstsw
mov
adc
xchg
test
dec
repnz
movs
out
scas
add
outs
inc
mov
popa
out
(bad)
xor
jb
pop
xor
dec
repnz
enter
outs
leave
mov
or
fild
test
pop
dec
loop
sub
call
aaa
js
cwde
jns
sub
cmp
sub
out
mov
iret
sbb
lock
fs
dec
jg
xor
ja
or
sub
mov
leave
push
lods
add
in
pushf
pop
loopne
in
lock
or
outs
add
and
fisubr
add
and
mov
inc
xchg
jmp
mov
mov
jbe
cwde
pop
scas
or
pop
mov
out
dec
ficom
or
daa
add
and
test
xlat
cmps
in
xchg
stc
out
mov
xchg
cmp
add
dec
test
call
xchg
popa
add
pop
adc
shl
call
xor
adc
call
int
imul
push
cwde
aam
jg
or
repz
loopne
jnp
adc
xor
aaa
inc
repz
sub
xchg
lock
(bad)
jecxz
add
(bad)
js
aam
add
xchg
(bad)
fiadd
push
dec
test
in
lock
outs
cmp
jbe
push
push
outs
jg
xchg
mov
hlt
mov
test
sar
xchg
scas
push
movs
clc
push
mov
hlt
fnstsw
test
cmp
xchg
clc
xlat
push
xchg
call
push
mov
dec
hlt
mov
loope
or
or
ficom
and
or
dec
idiv
add
mov
cmps
mov
cmp
dec
inc
test
not
in
adc
in
cmc
mov
test
and
ss
shr
call
jl
loopne
mov
div
ror
or
and
addr16
rcl
aaa
sbb
outs
icebp
dec
xchg
add
lds
cmp
cmps
pusha
div
scas
dec
and
movs
xchg
(bad)
lods
xchg
mov
call
or
jg
hlt
ja
sbb
iret
and
jg
pushf
pop
sbb
addr16
add
repnz
enter
add
aaa
pusha
and
dec
dec
sub
clc
in
sti
pop
push
fadd
mov
stos
aad
lods
(bad)
aaa
pop
cmp
xchg
sub
pop
cmp
xor
sbb
ss
push
dec
leave
adc
add
or
and
mov
add
int3
sbb
xlat
add
iret
(bad)
daa
mov
out
pop
cli
daa
or
mov
jnp
ret
fwait
aaa
ins
push
in
cwde
push
xchg
add
out
sahf
out
sti
int3
js
or
js
in
outs
mov
or
aas
add
dec
cli
cmps
xor
and
pop
add
xchg
scas
das
adc
push
inc
sti
das
outs
mov
pop
or
fist
mov
add
pop
and
add
cld
cs
enter
pop
ror
scas
add
ins
outs
out
pop
leave
adc
or
lahf
addr16
or
jbe
mov
cli
out
mov
in
scas
in
add
add
ret
out
std
addr16
push
jl
aas
addr16
daa
lods
int
inc
sahf
mov
movs
in
sahf
aam
sub
in
aad
lods
retf
push
dec
imul
xor
mov
(bad)
mov
inc
(bad)
xchg
inc
(bad)
cmp
test
(bad)
jmp
(bad)
push
nop
(bad)
bound
add
(bad)
aaa
jo
in
nop
out
rcl
or
fdiv
and
push
xor
lahf
(bad)
fiadd
cdq
fdiv
and
(bad)
(bad)
clc
out
push
jl
shl
les
clc
ja
sbb
push
or
call
adc
(bad)
aas
(bad)
cmps
pop
lock
and
add
dec
repz
int
jb
jae
xchg
lock
sahf
out
xchg
into
iret
repz
cld
and
sahf
cmps
stc
cmp
push
mov
imul
push
jns
iret
repz
sar
mov
cmps
stc
cmp
push
xchg
loope
lea
int
fnsave
mov
push
call
jns
out
jns
nop
popa
jl
repz
repz
mov
jmp
repz
test
sti
ds
sub
not
xchg
out
push
push
cmps
stc
cmp
ins
call
jns
push
stos
shl
mov
xlat
adc
cmp
sar
cs
jbe
jns
iret
repz
out
adc
push
xchg
repz
out
jmp
repz
out
fwait
inc
or
pushf
out
cmp
push
popf
iret
repz
ins
or
int
jns
lahf
cmp
jbe
rol
out
ins
test
push
imul
sbb
repz
lds
movs
jne
enter
imul
lods
jmp
add
aas
sahf
shl
sahf
cmps
stc
fs
retf
out
push
shl
mov
cmp
out
ss
imul
cmp
add
mov
mov
mov
sahf
out
cmp
aad
mov
jg
int
jns
int
mov
ret
jns
out
jmp
mov
ins
xlat
stc
cmp
out
dec
mov
enter
xor
cmps
ss
mov
ds
jle
es
ds
mov
hlt
ds
ds
mov
push
fst
mov
js
out
mov
repz
repnz
cmp
out
push
sar
jns
out
ret
mov
ret
cmps
stc
cmp
pop
fwait
jmp
fld
push
icebp
push
mov
push
sbb
repz
dec
leave
cmp
leave
repz
retf
retf
mov
mov
push
nop
ds
mov
out
int
into
mov
add
imul
sar
cmp
shr
shl
sar
cmp
cmps
jno
rcl
xor
cmps
cmps
leave
and
pusha
mov
jns
iret
in
sub
je
hlt
out
ds
(bad)
test
xlat
inc
jo
lahf
ja
fwait
add
xchg
fst
fldcw
ficom
stc
cmp
repz
fld
jecxz
fsubr
lahf
cmps
mov
fsubrp
sti
cmp
repz
ins
mov
sub
xchg
mov
lock
push
clc
pop
jmp
fldcw
push
xchg
in
and
rep
ss
dec
mov
addr16
out
sahf
data16
cmp
(bad)
cld
es
lods
mov
add
push
data16
mov
add
lahf
int3
nop
pop
ficom
jle
inc
aas
aam
call
jnp
mov
xor
or
scas
sbb
sbb
push
mov
jl
xchg
ja
pop
fs
aaa
fucomp
inc
mov
leave
adc
sub
ins
and
adc
loope
dec
enter
xchg
aas
mov
in
pop
cmps
fcomp
test
daa
fimul
popf
mov
das
bound
(bad)
movs
or
les
and
in
test
inc
mov
inc
pop
mov
call
call
pushf
cs
add
je
ror
es
(bad)
iret
cmove
pop
sbb
das
stos
sbb
mov
enter
inc
sbb
ss
cmp
aas
sti
xor
xor
mov
cmp
not
aas
in
imul
inc
cmc
jne
std
push
inc
pop
ins
jo
daa
inc
push
cmp
or
add
adc
daa
in
add
mov
or
push
ffreep
cmp
xor
jbe
xor
sbb
cwde
ja
cmp
or
and
jb
or
and
mov
aas
and
add
pop
cdq
jnp
and
sub
xor
jl
xchg
xor
jo
les
fwait
cmp
pop
lock
add
mov
bound
xlat
pop
inc
leave
or
(bad)
in
pop
inc
rol
cmp
dec
out
inc
scas
hlt
push
mov
add
sub
inc
pop
xor
in
je
and
daa
inc
scas
es
out
push
dec
cmp
ja
in
fist
data16
ja
push
mov
push
or
addr16
loopne
aaa
inc
jnp
leave
mov
mov
leave
jmp
mov
lahf
test
jne
inc
push
daa
dec
push
(bad)
push
xchg
fistp
and
fwait
and
sub
xchg
mov
and
das
jmp
jmp
push
aas
pop
leave
mov
push
mov
xor
loop
in
push
(bad)
push
mov
and
cmp
cmovs
xchg
xchg
inc
scas
cmp
out
pop
xchg
scas
dec
daa
ins
mov
out
mov
leave
xchg
mov
sbb
dec
xchg
xchg
push
out
push
shl
das
inc
test
inc
adc
call
push
and
mov
push
mov
mov
sbb
mov
and
pop
and
rol
dec
push
leave
xchg
mov
adc
sbb
mov
out
add
xchg
mov
push
lahf
cmp
leave
and
iret
jmp
int
pop
fmul
add
outs
sub
pop
sti
cmps
push
dec
hlt
and
and
and
dec
or
addr16
jbe
sub
push
xlat
push
js
leave
add
add
leave
leave
cmps
scas
mov
(bad)
daa
aam
add
dec
xlat
data16
cmp
cmps
fstp
sbb
pop
add
in
shr
and
lar
es
push
jo
mov
adc
mov
daa
xchg
(bad)
mov
add
mov
enter
ror
xchg
ror
mov
cld
cmps
mov
repnz
or
adc
sbb
pop
leave
and
and
pop
inc
outs
mov
ja
cmovg
addr16
mov
ja
pop
pop
lods
fs
add
out
in
in
mov
jmp
repz
push
in
out
push
cmps
stc
cmp
or
or
jns
adc
sbb
dec
adc
push
or
movs
jg
daa
gs
jo
loope
jb
js
mov
repnz
pushf
adc
out
sahf
mov
mov
adc
loope
push
inc
push
nop
jo
out
jb
mov
xchg
enter
fmul
call
add
inc
call
loopne
frstor
and
sbb
(bad)
lahf
(bad)
lods
(bad)
mov
in
xchg
pop
(bad)
int
fmul
in
repnz
std
test
(bad)
js
es
mov
nop
cmp
dec
pop
pop
nop
pop
je
push
out
pop
das
push
and
sbb
push
xor
jno
daa
pop
xchg
xchg
or
nop
lahf
cmp
imul
fisttp
add
add
scas
sbb
retf
mov
xchg
loope
fisttp
adc
add
sub
pop
pop
(bad)
adc
or
or
leave
shl
cmp
pop
inc
push
pop
xor
push
addr16
addr16
pushf
pop
xchg
pop
mov
in
mov
dec
loopne
sbb
add
sbb
repnz
je
inc
je
adc
xchg
lods
sbb
push
jb
dec
outs
dec
(bad)
pusha
xchg
sbb
pop
clc
shl
xchg
xchg
add
sbb
out
mov
ret
nop
aad
jne
retf
add
leave
or
xchg
sbb
loopne
daa
push
xchg
push
push
scas
fnsave
daa
es
(bad)
cs
jg
xchg
pop
in
xchg
pushf
sbb
arpl
in
jnp
push
sbb
loopne
adc
and
vmwrite
push
cmp
add
push
pushf
out
push
daa
and
ficom
inc
push
adc
sbb
cmp
push
out
add
or
add
mov
mov
jb
nop
push
adc
scas
xor
in
sub
pop
test
xchg
in
mov
xchg
push
sbb
push
les
mov
pop
ja
add
push
mov
xchg
in
mov
std
out
dec
push
pushf
in
xchg
cmp
ja
xchg
add
jo
iret
mov
data16
push
punpcklwd
pushf
(bad)
and
add
or
stc
mov
leave
xchg
pushf
push
pop
and
outs
rol
mov
mov
ins
push
(bad)
repnz
lods
nop
cwde
(bad)
xchg
repz
repnz
iret
repz
and
leave
repz
pop
push
pop
xchg
(bad)
enter
ins
mov
jmp
addr16
iret
add
mov
jl
(bad)
xchg
pushf
iret
and
cmp
add
xchg
fsub
cs
pop
push
xchg
iret
push
pop
(bad)
ins
fstp
ja
sbb
mov
mov
mov
mov
addr16
in
mov
mov
add
xchg
mov
and
mov
cwde
jmp
mov
pop
mov
pop
leave
mov
add
mov
ins
xchg
cdq
rcl
loop
pop
leave
cld
jns
and
jns
mov
and
inc
jb
loope
and
cmps
pfmul
pop
leave
xor
outs
call
mov
mov
rcr
sbb
jns
cs
hlt
pusha
push
ds
cs
mov
add
sbb
jl
inc
pop
inc
sbb
mov
and
in
es
pop
inc
xchg
cmp
daa
inc
and
jo
jmp
jns
xchg
es
repnz
(bad)
daa
add
mov
xlat
push
cmp
add
dec
dec
sbb
in
hlt
sub
out
sahf
pop
popf
movlps
rcl
cmp
lahf
or
mov
pop
inc
jg
adc
xor
add
jns
clc
xlat
pop
cmp
add
adc
jg
aas
fs
popf
popf
popf
fs
popf
popf
popf
pop
pop
jb
paddw
rol
or
test
and
mov
pop
pop
add
outs
aaa
jb
mov
pop
pusha
sub
fisttp
push
out
jo
mov
stos
mov
mov
mov
cmps
test
xchg
ins
call
imul
ja
ins
ja
ss
(bad)
lahf
dec
repnz
pop
das
gs
add
jbe
(bad)
or
(bad)
dec
es
lahf
das
pushf
scas
mov
xchg
xchg
or
(bad)
add
push
(bad)
jmp
inc
push
addr16
fwait
push
outs
mov
push
push
xchg
and
in
mov
mov
test
leave
jae
fsub
mov
dec
adc
push
scas
cmp
in
inc
sub
mov
xchg
push
xor
push
pop
sahf
ja
ja
sahf
pushf
pop
repz
mov
mov
das
jmp
sub
push
push
dec
popa
ins
daa
fisttp
push
pusha
ja
into
inc
jmp
sub
jae
pop
ja
jg
sub
fcomp
test
cmps
push
jb
cmp
mov
pop
push
mov
test
pop
push
add
push
loopne
mov
lahf
sahf
cmps
cmp
push
add
in
dec
ins
add
xor
dec
sahf
push
mov
fild
into
scas
idiv
daa
iret
jae
rcr
push
out
imul
movs
inc
adc
movs
adc
cs
lods
mov
xlat
mov
jp
fild
mov
iret
lods
(bad)
out
adc
out
mov
or
jo
addr16
xchg
in
or
cs
daa
sub
mov
push
movs
pop
push
nop
or
adc
imul
ror
imul
fld
xchg
add
jg
push
xor
push
cmps
call
cmps
xor
add
xchg
inc
xchg
dec
xchg
push
pop
xor
xchg
enter
xor
xor
xor
sti
inc
fmul
cmps
xchg
inc
xor
xchg
mov
and
xor
inc
or
mov
add
cmps
jbe
outs
sub
in
loope
sbb
pop
cmp
dec
jno
or
das
cmps
push
jmp
fisttp
fstp
(bad)
fcmovne
repz
add
fisttp
outs
iret
or
in
es
inc
dec
adc
or
jecxz
pop
push
(bad)
cmp
rep
pop
cmp
add
add
sahf
push
test
pop
test
push
icebp
jbe
aaa
jg
xchg
shl
ret
sbb
inc
pushf
dec
out
push
test
sbb
push
cmp
jmp
add
aaa
test
mov
adc
js
mov
xchg
xchg
or
sub
mov
leave
xchg
xchg
or
in
popf
in
xchg
test
mov
stos
push
cmc
mov
stos
push
xchg
mov
xor
ins
ja
iret
fnstsw
mov
pmulhw
mov
test
stos
inc
cmp
stos
sub
jb
add
popa
sub
pop
mov
jae
mov
iret
cmps
imul
mov
mov
aaa
cmp
jmp
cli
stos
pop
add
pushf
cmp
adc
sbb
or
or
inc
repz
repz
or
iret
leave
pop
bound
push
fwait
cmp
repz
or
repnz
adc
call
sbb
mov
jbe
cmc
lods
aaa
add
jmp
rcr
jmp
not
cmps
imul
shl
nop
xchg
mov
jmp
dec
dec
xchg
aam
cmp
scas
inc
rdtsc
cmp
fwait
cmp
add
mov
mov
iret
lods
mov
mov
fst
jg
push
ud1
mov
dec
or
ror
jae
jae
(bad)
xchg
mov
das
jmp
add
jecxz
push
fistp
inc
aas
loopne
dec
(bad)
pop
xchg
pop
in
int3
pop
sub
dec
mov
push
cmp
or
push
leave
cmp
popf
pusha
adc
dec
adc
cmp
into
xor
(bad)
pop
cpuid
les
jns
enter
cmp
cmp
cmp
mov
or
aaa
scas
inc
push
sbb
add
leave
leave
xor
and
iret
push
dec
cmp
or
outs
jns
outs
cmpxchg
pop
or
sahf
cmp
mov
(bad)
clc
pop
ror
fdivr
add
iret
cli
(bad)
stc
jbe
add
jns
out
movups
(bad)
js
pop
and
daa
inc
cmp
inc
mov
cs
aas
push
mov
btr
fwait
out
jge
add
(bad)
cdq
cmp
mov
push
mov
mov
out
mov
push
mov
lahf
or
cmp
mov
out
pop
push
pop
push
add
sahf
xor
jns
out
ins
push
jl
sahf
out
sahf
mov
call
jns
or
shl
dec
cmp
sub
add
push
cmp
add
cld
cmp
add
or
xor
dec
leave
repnz
ds
ds
lea
leave
jl
mov
mov
pop
jb
(bad)
jp
cmp
jne
pop
sub
in
(bad)
mov
mov
int
in
in
lds
mov
mov
movs
mov
xor
xchg
in
loope
mov
clc
mov
in
xchg
or
and
inc
fwait
mov
packuswb
in
daa
outs
xchg
add
fild
mov
call
inc
push
mov
pop
push
jmp
push
outs
push
mov
push
mov
fidiv
cmps
push
mov
pushf
cmps
cmp
addr16
jae
dec
push
mov
xchg
fnstsw
das
(bad)
aaa
repnz
fisttp
mov
lods
push
dec
sahf
or
push
mov
jecxz
xchg
in
add
add
sbb
fbstp
rol
inc
and
xlat
sbb
ror
in
or
scas
sub
and
cmp
mov
fs
dec
loop
pop
ja
add
(bad)
bound
mov
push
repnz
cwde
inc
xchg
out
(bad)
cmp
lods
cmp
scas
pop
mov
mov
(bad)
bswap
iret
or
fadd
pop
jb
repnz
lahf
repnz
dec
adc
daa
mov
call
aas
inc
mov
push
cmps
jl
jb
mov
ja
dec
cmp
mov
cmp
sti
xor
scas
mov
add
cdq
sub
mov
add
sub
and
mov
mov
xor
jb
shl
mov
mov
mov
jecxz
mov
cmp
pop
lock
mov
aam
mov
xchg
pop
and
js
movs
mov
pop
and
add
repnz
test
das
xchg
out
ror
daa
daa
std
add
sahf
dec
mov
xchg
mov
jg
push
das
jg
fimul
xchg
cmps
fcom
cmp
leave
mov
cmps
mov
in
icebp
cld
pop
mov
daa
xchg
inc
cmp
mov
pop
push
xchg
in
add
js
xchg
add
or
jmp
or
popf
cmp
mov
or
jmp
das
femms
idiv
and
invlpg
xchg
ret
inc
xchg
mov
das
(bad)
repz
pushf
cmp
pop
addr16
xchg
fmulp
outs
ja
movq
addr16
dec
rcl
mov
movnti
retf
in
xchg
xchg
pop
int
mov
bsf
push
add
add
jne
jns
dec
lahf
push
divps
outs
repnz
pop
push
cmp
or
jl
and
and
cdq
mov
pop
pop
xor
fsubr
out
and
daa
cli
xchg
xchg
out
icebp
sub
int
and
pusha
mov
or
xchg
popf
cmp
popw
imul
pop
mov
mov
dec
add
mov
outs
push
shr
inc
push
(bad)
mov
dec
punpcklbw
add
fwait
push
dec
jo
or
fimul
xchg
lock
pop
dec
push
jbe
ja
mov
pop
(bad)
pop
outs
aas
out
fisttp
aas
push
iret
fisub
jns
add
cmp
adc
add
and
dec
ret
dec
pop
mov
pushf
fsub
lahf
imul
push
cmp
stos
iret
mov
pushf
cmp
lods
mov
rcr
(bad)
mov
pop
leave
jae
mov
fmulp
adc
and
in
je
or
xchg
push
pop
out
outs
daa
pusha
xchg
aaa
xchg
mov
mov
push
add
cmp
out
outs
mov
dec
jmp
jns
retf
adc
sbb
and
add
cmp
(bad)
inc
mov
mov
mov
sub
fidiv
sar
dec
dec
cs
scas
leave
inc
repnz
mov
fcmovnu
psrad
xchg
(bad)
in
xchg
ret
ret
mov
inc
xchg
pop
fwait
sbb
ret
xchg
out
jb
jnp
add
fwait
add
sahf
(bad)
fbstp
shl
xchg
scas
add
(bad)
rcr
out
sbb
aas
push
jmp
add
clts
mov
mov
inc
xlat
fld
pop
inc
ret
mov
cmp
movs
cmp
lods
lods
ja
jno
mov
jbe
xchg
lahf
fcmovne
leave
rcr
loop
push
sub
or
dec
and
les
mov
adc
cmp
jns
les
pop
adc
xchg
fstp
or
cmp
add
dec
popa
inc
cmp
in
and
mov
sti
xlat
in
ins
in
lds
and
xlat
sub
push
(bad)
lds
popf
mov
scas
mov
push
pop
xchg
jg
pop
jo
cmp
(bad)
jns
xor
out
loope
push
repnz
jmp
js
popf
jecxz
(bad)
iret
pop
(bad)
iret
and
sub
addr16
cmp
inc
cmovle
pslld
or
cmp
jae
or
shl
dec
cmps
(bad)
adc
mov
nop
sbb
xchg
jb
stc
xchg
or
adc
jecxz
vpxor
das
aaa
(bad)
js
(bad)
jg
ja
push
add
(bad)
pop
clts
push
pop
cmp
repz
or
cmp
jbe
ja
ja
stc
hlt
pushf
mov
adc
push
push
push
in
fist
dec
pmulhuw
enter
loopne
sahf
fmul
daa
xor
imul
push
and
scas
push
mov
push
daa
js
add
add
dec
push
outs
(bad)
push
add
fisttp
repz
jge
push
test
fisttp
push
iret
xchg
or
cmp
pop
mov
loope
repnz
jg
push
add
iret
repz
or
lahf
push
add
jae
cmp
and
push
leave
jmp
pusha
push
push
push
leave
jmp
dec
cs
stos
jae
dec
dec
mov
add
sahf
fcmovne
leave
mov
lock
dec
out
pop
retf
or
sub
xor
cmp
cmp
inc
cmovp
pop
mov
sahf
cwde
push
out
fsub
push
add
pushf
je
mov
add
iret
push
(bad)
(bad)
loope
or
imul
or
retf
or
enter
or
sbb
push
clc
outs
and
xchg
push
dec
retf
push
cvtdq2ps
xchg
pop
adc
retf
(bad)
mov
dec
outs
setbe
lea
scas
scas
retf
mov
or
mov
push
rcr
sahf
out
pushf
fnstenv
add
(bad)
sbb
pop
out
cmp
je
mov
int3
(bad)
fist
cmp
mov
inc
mov
or
fwait
xchg
push
out
cmps
cmp
mov
out
mov
outs
lds
fist
int3
push
int3
xor
sbb
pop
repz
repz
or
popf
cmp
xor
ds
push
or
push
push
pop
punpckhdq
jns
out
jne
adc
out
sahf
out
xchg
adc
adc
lods
push
mov
ret
sahf
out
int
fcomp
jecxz
leave
dec
aaa
prefetcht1
push
leave
leave
leave
leave
adc
leave
leave
leave
adc
femms
ins
ds
or
ret
adc
mov
into
cmp
sbb
add
cs
ret
and
scas
nop
idiv
pop
inc
inc
pop
inc
daa
xchg
and
sbb
push
pushf
je
popf
pop
lahf
popa
push
imul
lods
mov
out
(bad)
jns
dec
dec
mov
sbb
pop
jo
daa
or
mov
loopne
sub
aad
jb
leave
into
call
fild
push
xlat
pop
mov
and
sub
jb
rcl
pop
jb
mov
and
(bad)
iret
iret
xchg
iret
lahf
iret
cmp
in
cmps
iret
scas
iret
mov
push
mov
or
loop
cmp
pop
jb
and
rcr
xchg
sbb
rcr
push
bound
test
call
xchg
icebp
jbe
mov
ror
leave
inc
dec
ja
jecxz
pop
jae
mov
xchg
test
psrlw
rcl
xchg
dec
dec
sahf
sahf
rcl
pop
imul
call
outs
mov
or
sar
in
sahf
pop
fiadd
out
cmc
cmp
out
clc
pop
push
shl
inc
mov
sar
outs
and
cmovbe
fisttp
push
pop
push
repnz
out
push
or
jns
ja
push
or
or
sahf
push
mov
or
and
addr16
adc
inc
dec
dec
cs
mov
pop
in
mov
test
pop
mov
scas
sbb
add
cdq
or
jmp
or
pusha
repnz
popa
pop
cmp
divps
rcr
cmp
outs
jbe
jle
xchg
mov
fisttp
leave
xor
push
sahf
ror
call
cmps
test
mov
mov
push
daa
mov
dec
cs
mov
jns
fimul
add
or
adc
ss
sbb
enter
xchg
and
push
ja
adc
mov
cwde
push
xchg
int
fcom
or
mov
inc
rol
aad
mov
dec
addr16
xchg
sub
push
(bad)
aad
fs
out
test
add
mov
aad
or
(bad)
sbb
ficom
push
add
(bad)
sbb
pop
xchg
jb
and
or
outs
fst
inc
sbb
aaa
pop
or
sub
or
pop
out
xchg
dec
packssdw
(bad)
add
cmp
test
outs
daa
test
mov
mov
rol
scas
push
lahf
rcr
push
dec
outs
fucom
fimul
add
add
xchg
out
jns
jmp
psubd
add
adc
repnz
and
fild
xor
cmp
pusha
push
imul
pushf
xchg
cld
mov
outs
jmp
push
mov
push
xor
fcom
into
pop
or
aaa
jns
in
push
add
(bad)
daa
daa
dec
push
dec
push
pusha
push
jb
or
test
xchg
sahf
fdivr
sub
pop
push
shr
jb
call
hlt
ja
sbb
ja
fsub
pop
xor
cs
aas
fst
repnz
cs
fstp
iret
cmp
invd
jae
push
or
(bad)
setg
sub
mov
dec
push
repnz
fnstcw
cmc
xchg
dec
cs
std
add
and
and
mov
xchg
xchg
loop
iret
fiadd
or
movmskps
cmc
test
pop
cdq
pop
test
push
cmp
jg
push
daa
adc
daa
scas
cmp
or
or
mov
mov
push
ja
add
(bad)
lahf
add
sub
mov
not
(bad)
mov
mov
push
int3
pushf
loope
pop
in
pop
push
fld
fcmovnb
mov
adc
and
fist
packsswb
xchg
shl
mov
cmp
retf
bound
jb
xchg
(bad)
das
push
fadd
ins
(bad)
fst
lahf
cmp
inc
(bad)
out
cmp
in
push
push
add
es
repz
push
jno
jb
jmp
add
add
add
cmp
jae
jns
or
mov
or
xchg
in
repnz
push
cdq
fcom
ins
fcmovne
enter
(bad)
int3
ja
adc
stos
add
or
pop
aaa
jns
adc
add
push
mov
pop
(bad)
mov
cmovo
nop
push
ror
dec
fisttp
add
imul
(bad)
fstp
sub
pop
ror
(bad)
inc
mov
pop
repz
pop
stos
jg
dec
xchg
setnp
or
pop
fsub
mov
mov
jns
out
adc
pushf
je
retf
movups
add
mov
xchg
fimul
adc
sbb
mov
sub
sbb
repz
cmp
inc
mov
iret
cmp
push
push
and
mov
imul
jae
sub
cmp
repz
jnp
sub
iret
repz
sub
daa
iret
repz
stos
das
mov
jns
add
ret
ficomp
xor
pop
fsubp
pusha
pop
adc
ss
jns
mov
mov
add
lea
push
test
dec
out
push
daa
or
adc
push
ja
(bad)
dec
outs
adc
jo
ja
inc
sahf
fwait
adc
pop
jb
mov
call
xchg
add
cs
push
fbstp
repnz
call
mov
or
add
add
pop
loopne
dec
mov
pop
sysret
das
or
in
jbe
cmp
das
push
dec
pop
setae
jns
push
ja
test
jae
mov
retf
sahf
out
es
adc
jns
clc
pop
add
sbb
cmp
repz
sbb
cmp
sbb
sbb
sbb
cmp
pop
pop
imul
jbe
and
iret
repz
and
in
repz
les
mov
loope
sbb
jb
loope
loope
loope
loop
iret
repz
adc
sub
cmp
repz
cmp
inc
push
jbe
jbe
aas
pop
pop
addr16
loop
jge
mov
mov
fist
daa
test
es
mov
iret
retf
and
and
iret
repz
and
pop
add
or
sbb
jns
out
sbb
jns
out
pop
dec
adc
sahf
out
sahf
dec
fs
outs
dec
jp
sahf
out
dec
test
dec
aaa
jns
in
sqrtps
pop
in
dec
pop
push
jle
pop
dec
cmovp
out
adc
ret
cmp
jbe
fsubr
out
repnz
push
std
fstp
lock
add
push
mov
and
cmp
mov
outs
push
maxps
xrelease
cmp
cwde
push
mov
iret
repz
or
or
lock
repz
or
or
jle
in
movd
in
out
ficom
push
adc
adc
jns
adc
adc
out
dec
pop
push
sbb
sbb
jnp
jns
out
test
sbb
out
cmps
pop
mov
jbe
jns
mov
(bad)
mov
in
loope
in
(bad)
hlt
scas
cld
iret
add
cmp
repz
femms
sbb
sbb
repz
repz
sub
xor
iret
cmp
adc
repz
adc
gs
(bad)
push
jne
into
repz
jge
test
lea
push
or
or
out
push
sahf
outs
repnz
inc
(bad)
pop
call
sbb
cmp
mov
je
push
out
fcom
cdq
addr16
(bad)
xchg
out
mov
add
mov
wbinvd
push
inc
repz
(bad)
push
push
iret
repz
or
outs
daa
iret
repz
jbe
jle
in
in
outs
jle
cmp
leave
leave
test
mov
sbb
jbe
mov
push
pushf
ja
inc
push
and
call
sahf
out
push
add
add
dec
xchg
fcmovne
repz
add
daa
daa
daa
mov
das
je
test
pushf
xcrypt-cfb
cmps
in
daa
iret
adc
leave
leave
leave
in
ror
fninit
jmp
in
leave
repz
add
or
leave
in
in
sbb
and
pop
iret
leave
repz
and
and
pop
adc
jmp
pop
fs
push
add
xchg
pop
call
daa
mov
(bad)
pop
les
fisttp
int3
push
or
(bad)
dec
sahf
ja
fsub
push
push
in
hlt
fcmovne
out
dec
cld
push
adc
or
in
rcl
adc
and
pop
jg
jmp
add
cmp
jmp
pop
in
jmp
xchg
out
mov
mov
leave
push
push
aam
push
fild
iret
repz
adc
jmp
mov
out
mov
adc
aaa
cmovb
dec
sbb
arpl
in
dec
outs
sbb
in
dec
sahf
sbb
jns
sahf
out
and
out
rcr
and
in
daa
std
or
(bad)
out
in
push
sub
icebp
in
sahf
cs
das
push
pusha
in
in
repnz
outs
xor
xchg
in
mov
jb
in
movs
in
scas
in
mov
sahf
out
test
or
out
rol
fisttp
lahf
sahf
cmp
repz
out
or
add
daa
daa
mov
outs
or
adc
and
daa
daa
sub
cmp
sahf
out
repnz
dec
pop
push
push
pop
fucom
jns
arpl
imul
je
out
push
jae
jnp
sbb
sbb
mov
and
push
leave
mov
enter
leave
rcr
loop
mov
dec
add
or
(bad)
adc
dec
jl
fstp
dec
pushf
mov
push
add
data16
mov
fist
repz
mov
or
scas
fwait
prefetch
fsub
pop
out
ja
mov
add
mov
sahf
out
sahf
adc
adc
sahf
fmul
andnps
lock
jns
out
aaa
push
sbb
inc
sbb
sbb
pop
push
imul
push
fisubr
xchg
js
pop
mov
lahf
movs
lock
jbe
int
scas
punpcklbw
ins
vmread
out
jnp
dec
sub
sub
out
out
mov
jg
cs
das
lds
shl
fcomi
mov
xor
icebp
xor
repz
cld
pop
(bad)
ss
adc
pop
fdiv
cmp
lahf
push
cmp
aas
fisttp
call
sahf
out
(bad)
aas
or
adc
sahf
out
int
pop
cvtpi2ps
inc
jns
out
inc
inc
dec
inc
pop
cmp
jbe
addr16
jb
jge
adc
push
xchg
into
repz
jnp
jno
mov
into
in
mov
push
jge
shr
(bad)
icebp
mov
push
iret
fdiv
out
bnd
enter
icebp
or
adc
cmp
and
or
sahf
fild
push
or
jns
push
ja
test
mov
adc
iret
repz
mov
in
pop
sbb
jmp
neg
repz
sbb
daa
iret
mov
ds
andps
adc
pop
push
jg
mov
and
push
add
and
dec
adc
scas
ja
lds
ja
push
add
push
pop
iret
in
ss
hlt
adc
sbb
daa
or
cmp
repz
push
or
or
repz
jno
repz
adc
unpckhps
mov
popf
cmp
into
sbb
in
sbb
jns
out
sbb
add
pushf
fsubr
sbb
xchg
es
repz
xor
cmp
inc
out
mov
rsqrtps
cs
push
sub
jle
(bad)
jns
lahf
push
sub
(bad)
cmc
push
and
cwde
xor
sub
cmc
or
adc
out
push
sbb
or
xchg
out
aaa
aas
aas
xor
mul
cmp
inc
cmp
test
call
out
jbe
psrlw
or
or
or
push
pop
mov
test
movlps
push
push
repz
repz
adc
iret
inc
fcmovne
inc
dec
pop
mov
push
and
bound
ins
iret
jnp
fistp
fisub
clc
js
sbb
test
xchg
push
popf
pop
test
leave
leave
repz
iret
repz
and
and
repz
push
clc
(bad)
adc
iret
mov
out
xor
add
scas
jo
inc
jg
(bad)
popf
out
xchg
sbb
add
inc
das
jns
dec
mov
push
add
add
mov
fucomip
clc
test
xchg
xchg
clc
add
push
or
sbb
leave
repz
or
dec
push
loopne
inc
adc
sahf
out
adc
jne
push
(bad)
iret
adc
clflush
jns
out
sbb
xchg
jl
jp
stc
(bad)
push
js
sahf
xchg
push
cmp
cli
pop
push
add
push
inc
dec
dec
sub
xor
cli
push
pop
daa
dec
aaa
jns
wbinvd
pusha
push
or
push
or
repz
mov
cmp
in
push
adc
sahf
fcmovne
repz
sbb
out
in
in
sbb
lea
sbb
sbb
sti
movntq
out
push
pop
pop
pop
and
and
sahf
daa
and
sti
and
dec
pop
sti
arpl
outs
popf
out
fstp
jns
xchg
out
loopne
outs
xcrypt-ecb
cmps
dec
pop
iret
repz
or
or
outs
retf
lods
daa
fdivrp
call
psrad
(bad)
push
scas
hlt
sti
(bad)
sti
or
dec
sahf
out
adc
ss
in
das
inc
push
adc
push
iret
repz
sbb
dec
sbb
fs
iret
repz
outs
sbb
in
push
pop
nop
fwait
cld
jg
cld
sahf
out
es
dec
and
(bad)
and
sbb
call
sub
xchg
stc
int3
cmc
push
add
cmp
std
dec
push
pop
pop
popf
lods
pop
std
mov
std
push
fisub
das
jb
das
movs
std
add
aad
cmps
mov
daa
daa
daa
daa
rcl
fucomp
leave
leave
shr
syscall
repz
fwait
jmp
(bad)
call
or
pop
cmp
jae
syscall
or
or
popf
inc
das
dec
(bad)
pop
js
in
sahf
adc
adc
movs
pop
cld
inc
dec
repz
pop
adc
pop
sbb
jns
xor
sbb
sbb
sahf
push
pop
jbe
cwde
iret
jae
mov
shl
sahf
out
daa
out
es
daa
cld
mov
out
pop
(bad)
or
pop
mov
sahf
sub
xor
out
movs
fwait
cmp
movhps
cs
sahf
ja
cmp
push
pop
push
ss
lock
seta
sahf
scas
rep
daa
iret
cmp
cmp
(bad)
aas
scas
icebp
(bad)
fisttp
lahf
inc
clc
mov
into
pmullw
mov
por
repnz
add
push
push
push
sbb
in
jbe
das
xor
cmp
inc
fcmovne
repz
push
or
push
sahf
out
mov
jo
xchg
fcmovne
repz
mov
das
sahf
out
mov
bswap
push
pop
ficomp
in
sahf
fmul
paddw
add
and
push
sub
setae
jns
inc
and
jbe
cmp
cmps
pop
push
and
jns
out
sub
sub
in
sbb
sahf
sub
inc
add
add
xchg
out
iret
push
cs
ins
iret
jae
mov
mov
cdq
fcmovne
jnp
call
(bad)
mov
or
adc
pushf
fist
movs
add
scas
bsf
xchg
jl
dec
inc
sub
push
add
push
jns
not
repnz
pop
push
cli
scas
fwait
mov
add
add
push
adc
ins
lods
cmp
push
das
lmsw
add
inc
add
pop
orps
addr16
xor
dec
in
shl
sbb
into
test
push
cmp
outs
adc
pop
adc
dec
push
push
es
pop
adc
cmp
xchg
dec
push
mov
pop
mov
pop
pop
test
jae
rcl
aam
stos
adc
out
adc
ror
nop
das
adc
jbe
mov
push
add
mov
loopne
aam
aas
inc
push
and
mov
or
stos
sub
mov
cs
adc
dec
aaa
xlat
mov
xlat
add
push
add
inc
xchg
xchg
aas
lahf
or
mov
aas
push
and
or
aaa
or
fnstsw
scas
adc
cmp
das
and
jb
inc
push
addr16
das
fsubr
fist
push
mov
ins
daa
iret
repz
and
jb
outs
mov
outs
pop
and
cmp
xchg
out
dec
test
leave
ins
pop
mov
in
shl
pop
and
mov
mov
mov
or
bound
dec
add
or
mov
movs
push
aam
add
push
and
mov
fadd
add
movs
add
jns
and
mov
lahf
loopne
inc
jle
test
shl
mov
inc
jg
pop
mov
pop
inc
mov
iret
mov
inc
(bad)
sbb
in
call
adc
push
aas
and
ficomp
pop
fisubr
xor
fcomp
loopne
add
jle
jns
aaa
or
pushf
and
xchg
out
sahf
out
mov
jns
je
pusha
push
dec
inc
jns
out
cmp
xor
sub
jns
out
and
sbb
dec
repz
adc
or
and
in
cmp
jnp
and
push
fadd
aam
shl
iret
repz
movs
mov
iret
xor
repz
out
ins
push
fs
pop
push
dec
mov
into
out
retf
sbb
clc
and
cmp
repz
aam
mov
cmp
mov
js
sahf
out
pop
jo
pusha
push
cmp
mov
sbb
or
and
jge
cmps
call
jbe
push
push
fistp
pushf
push
je
pusha
and
icebp
sub
ins
add
imul
sbb
push
cmp
ins
push
(bad)
js
clc
mul
ins
popf
(bad)
inc
dec
hlt
xor
idiv
sti
daa
aas
sbb
es
push
adc
or
xor
adc
cwde
cs
aam
popf
loopne
jo
lock
call
push
mov
push
inc
jg
mov
mov
mov
mov
inc
sgdtd
push
mov
jg
xor
adc
mov
add
adc
add
pusha
(bad)
in
mov
inc
mov
or
fld
mov
outs
(bad)
cmp
push
iret
xchg
pushf
add
add
fwait
push
test
inc
stc
pop
jg
shld
jl
add
pop
out
jne
add
repnz
(bad)
push
test
inc
out
xchg
es
out
pop
pop
scas
sbb
dec
repz
sbb
push
fdivp
cmp
pop
push
sbb
iret
adc
ds
and
mov
pop
push
push
fcom
push
iret
repz
aam
ror
or
sahf
idiv
adc
fcomp
push
adc
xor
push
sahf
out
sub
and
push
iret
repz
and
adc
jo
repz
add
clc
aaa
inc
test
ins
cmp
imul
daa
xor
mov
mov
lea
inc
cmp
xor
fcomi
cmp
jmp
cmp
pop
js
mov
out
cmp
enter
ins
add
cmp
pop
ja
mov
iret
loopne
shl
jae
das
push
dec
xor
lods
loopne
dec
pop
jns
(bad)
push
pop
mov
pop
repnz
cli
or
or
ret
cmovnp
repnz
adc
stc
mov
ficom
pop
and
sbb
(bad)
dec
mov
in
int3
into
sbb
ror
and
sahf
mov
sub
inc
rcr
(bad)
(bad)
(bad)
jmp
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
(bad)
(bad)
inc
mov
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
(bad)
(bad)
(bad)
(bad)
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
(bad)
(bad)
call
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
jmp
mov
or
add
cmps
xchg
cmp
xor
dec
cmps
in
cmp
lds
mov
cmps
lock
mov
popa
sar
mov
sbb
(bad)
dec
xchg
clc
repz
mov
sub
fwait
xchg
and
aas
xor
leave
push
add
int3
add
aas
jno
or
inc
cli
out
xlat
mov
pop
fs
(bad)
(bad)
(bad)
call
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
(bad)
(bad)
(bad)
push
mov
xor
aad
mov
std
std
into
popa
test
ja
stos
(bad)
(bad)
(bad)
jmp
aas
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
(bad)
(bad)
jmp
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
(bad)
push
mov
inc
inc
aas
movs
jmp
jg
sub
jge
mov
inc
(bad)
(bad)
(bad)
call
fst
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
(bad)
inc
std
xlat
cmp
mov
sbb
(bad)
(bad)
push
nop
test
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
(bad)
(bad)
call
movs
and
mov
cmps
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
pop
add
rcr
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
push
xchg
jge
pop
ficomp
frstor
stos
leave
into
or
and
add
lock
jg
pop
jo
add
inc
je
inc
pop
add
and
dec
addr16
jge
std
mov
dec
inc
push
dec
inc
aaa
xor
jg
mov
gs
ror
inc
push
inc
pop
push
inc
dec
inc
jo
inc
popa
push
add
outs
jbe
imul
mov
outs
mov
aas
dec
ins
imul
dec
push
pop
sub
outs
loope
iret
xor
mov
icebp
clc
rcl
adc
push
inc
dec
push
daa
pusha
push
or
jo
mov
add
inc
inc
test
out
dec
inc
gs
pop
adc
outs
gs
mov
ins
les
ds
arpl
mov
inc
or
sub
dec
inc
sbb
push
dec
pop
mov
sbb
add
popf
call
ins
and
mov
ror
push
fs
pusha
sub
cmps
aas
dec
or
or
or
adc
jae
imul
data16
and
inc
inc
inc
jg
inc
jns
dec
mov
loopne
lahf
push
push
push
push
push
cmp
pop
cs
jns
push
adc
xor
sub
mov
dec
in
inc
(bad)
add
inc
je
jb
dec
push
dec
dec
ins
lods
std
dec
lds
jae
jbe
dec
scas
movs
cmps
sbb
pop
dec
mov
movs
cwde
or
dec
adc
dec
inc
cmp
popa
jne
arpl
outs
push
push
bound
dec
dec
pop
xlat
push
adc
xchg
add
(bad)
sub
les
sbb
mov
inc
xchg
push
mov
push
js
cli
dec
add
adc
push
inc
fisub
add
dec
not
push
loope
push
not
cmp
ds
xor
jbe
sub
mov
das
push
or
adc
push
clc
stos
inc
mov
jne
push
fcom
adc
mov
repnz
mov
cmp
push
inc
arpl
push
ins
les
cmps
inc
push
pushf
nop
pusha
out
sub
repz
jg
mov
mov
pop
pop
adc
or
and
mov
lods
mov
xchg
add
outs
data16
xchg
inc
add
fisttp
ja
mov
pusha
pop
ja
fisttp
xchg
ja
or
les
stos
push
pop
pop
sbb
aam
pop
push
stc
jl
add
lahf
icebp
shl
push
ja
std
push
mov
inc
cmps
push
dec
je
mov
scas
xlat
xchg
aad
dec
dec
lahf
sub
add
lahf
add
test
pop
stos
and
dec
mov
adc
sbb
jg
stos
(bad)
leave
add
mov
push
lahf
or
or
adc
cmp
sub
xchg
dec
movs
daa
xor
cli
push
dec
dec
idiv
sub
or
xchg
jae
in
cmp
push
inc
push
inc
mov
sbb
imul
jne
inc
stos
adc
rol
adc
imul
outs
addr16
or
or
ins
mov
iret
pop
les
inc
stos
add
cmp
xlat
out
mov
mov
dec
cmps
push
test
adc
cmps
stc
cmp
call
jge
out
test
les
inc
cmp
cwde
or
push
add
cmp
jae
cmp
push
and
add
lahf
push
pusha
jne
(bad)
(bad)
(bad)
mov
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
(bad)
(bad)
(bad)
jmp
mov
push
movs
mov
aad
mov
rcl
mov
sub
(bad)
(bad)
(bad)
(bad)
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
ins
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
or
pop
adc
in
pusha
aad
jno
mov
inc
aam
dec
std
test
(bad)
(bad)
dec
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
(bad)
mov
(bad)
fcomp
shr
cmp
ficom
push
xlat
enter
(bad)
(bad)
call
mov
and
mov
cdq
xchg
mov
mov
or
or
jmp
loop
mov
jl
das
adc
stos
sbb
push
lods
(bad)
jmp
nop
inc
fdiv
jno
add
aad
(bad)
(bad)
out
call
mov
movs
in
lahf
xor
mov
js
stc
(bad)
call
xchg
test
xchg
sbb
push
sub
ins
fs
add
(bad)
jmp
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
(bad)
(bad)
dec
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
std
call
(bad)
aam
pop
popa
mov
into
pop
cmp
mov
inc
movs
fisttp
xchg
fdivr
(bad)
(bad)
mov
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
(bad)
(bad)
push
pop
dec
or
cmp
add
daa
adc
or
and
test
(bad)
(bad)
jmp
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
(bad)
(bad)
jmp
cmp
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
add
fild
push
fdiv
or
test
fs
(bad)
(bad)
jmp
push
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
inc
inc
push
imul
xor
sbb
push
imul
(bad)
(bad)
(bad)
call
(bad)
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
call
(bad)
jle
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
(bad)
(bad)
(bad)
dec
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
jmp
sbb
outs
and
xchg
ja
int3
add
mov
das
es
(bad)
(bad)
(bad)
mov
mov
pop
mov
add
mov
cmps
call
ret
shl
sbb
ret
(bad)
jmp
repnz
pushf
mov
ins
add
ss
jmp
addr16
jb
push
(bad)
(bad)
(bad)
fcomip
or
adc
mov
jnp
sbb
xchg
or
out
fdivr
(bad)
(bad)
(bad)
(bad)
or
rcl
xchg
aam
clc
mov
push
int
mov
mul
ja
outs
ja
(bad)
out
clc
inc
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
(bad)
call
sar
imul
push
js
or
push
add
mov
cmp
addr16
(bad)
(bad)
jmp
dec
inc
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
test
jg
mov
jmp
repnz
retf
mov
cmps
mov
sar
(bad)
(bad)
(bad)
mov
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
(bad)
mov
mov
sbb
inc
out
add
iret
push
mov
fld
dec
xor
add
mov
test
outs
inc
jne
inc
cmp
push
imul
dec
je
push
ins
imul
mov
fistp
add
call
jbe
push
jns
arpl
arpl
mov
pusha
cmps
lods
in
push
inc
ins
jns
mov
rcl
jne
outs
ins
addr16
and
inc
imul
daa
fs
daa
fst
ins
add
adc
cmp
dec
inc
js
inc
ret
(bad)
mov
jmp
or
inc
inc
inc
js
popa
or
or
pop
dec
mov
jno
xor
pop
inc
cmp
pop
bound
lods
ins
(bad)
jmp
aaa
cmp
popa
arpl
cmp
arpl
or
xor
gs
xor
ins
xchg
jbe
pop
sbb
inc
add
xor
inc
push
fist
add
inc
or
sbb
inc
ret
xchg
int3
dec
xor
add
sub
cmp
imul
in
popa
stos
pop
push
jbe
arpl
pop
movs
push
jmp
inc
aas
xchg
popa
rcpps
bound
loopne
push
sar
dec
add
pop
xchg
ins
popa
jns
imul
push
push
dec
ins
and
push
nop
pusha
add
aaa
je
or
push
aaa
aas
inc
push
add
ficom
and
jae
jmp
bound
aas
dec
inc
mov
sahf
push
mov
inc
(bad)
pusha
jnp
adc
sbb
inc
pop
jg
test
sub
jae
inc
inc
inc
fimul
mov
add
ds
adc
int
mov
dec
add
mov
xchg
sub
ins
mov
fistp
fs
ja
outs
jne
fiadd
mov
dec
jge
addr16
pop
xor
xor
or
push
pop
aad
add
addr16
push
xchg
into
pop
jo
or
ds
inc
cmp
adc
aaa
and
dec
out
imul
add
ror
pop
mov
push
adc
lahf
adc
xor
ss
mov
sbb
xlat
inc
add
push
mov
loopne
add
xchg
daa
inc
jb
and
cmp
sbb
cmp
dec
popa
jo
js
nop
sub
xor
outs
add
in
dec
pop
push
jno
pop
test
and
xchg
add
in
nop
test
pop
cmp
pop
test
add
(bad)
sbb
rcl
ror
and
mov
mov
pop
xor
shl
(bad)
aad
inc
das
inc
pusha
push
popa
jb
push
xchg
shr
sub
into
nop
adc
xor
iret
mov
bound
pusha
xor
rcl
push
aaa
ja
push
and
jae
add
adc
xor
imul
or
push
sub
aaa
pop
icebp
xchg
push
and
pop
adc
inc
scas
addr16
xor
test
pop
push
ret
jns
scas
push
push
mov
push
push
in
inc
mov
adc
pusha
cmp
jbe
aaa
push
loop
xchg
inc
je
aaa
push
outs
cwde
push
inc
aaa
jno
lds
adc
aas
pop
inc
and
add
mov
loopne
add
fwait
add
adc
mov
dec
pop
nop
pop
dec
popa
adc
out
stos
inc
mov
clc
or
add
mov
int
mov
aas
add
pop
and
popa
ins
xchg
add
and
movs
hlt
mov
or
inc
dec
push
and
mov
or
cmps
dec
shrd
popa
inc
cld
mov
out
bswap
(bad)
mov
into
jmp
(bad)
jmp
jmp
repnz
in
push
mov
mov
pusha
jmp
retf
cli
push
cld
add
mov
lahf
daa
jmp
push
push
inc
es
add
dec
loopne
add
or
or
(bad)
ins
daa
aam
cmp
jge
int
add
pop
add
(bad)
verr
add
sbb
js
sub
add
xor
push
test
sahf
and
and
stos
and
sub
push
jl
inc
call
dec
and
test
pop
add
cs
xor
lea
and
and
push
ds
lods
add
cs
rcr
and
outs
and
cs
cmp
mov
or
rol
xchg
sahf
jae
arpl
xlat
out
in
mov
jb
enter
test
push
pop
and
mov
or
cmps
xor
bound
dec
add
shl
xchg
jle
hlt
pop
mov
dec
sub
lea
inc
test
push
sbb
or
or
icebp
or
in
dec
jne
mov
ss
fiadd
jp
xchg
in
sbb
dec
jmp
push
xchg
jp
sbb
jbe
xor
push
push
fs
mov
sbb
out
xor
jno
int3
fucomi
gs
das
sub
(bad)
ja
imul
jmp
mov
(bad)
xor
cdq
das
pop
iret
or
call
mov
retf
jb
xchg
mov
shr
cdq
add
adc
sar
and
mov
outs
adc
movs
adc
test
jl
les
cmp
xor
(bad)
adc
push
push
pop
ds
sar
jnp
rcl
and
lea
sub
mov
jmp
push
mov
aad
rcl
sbb
mov
call
nop
fcom
lea
dec
mov
mov
adc
ins
das
sub
rol
mov
add
adc
mov
cmp
pop
adc
xchg
xchg
aam
dec
push
add
add
cmp
sbb
fcomp
rcl
in
stc
adc
loopne
sub
push
test
sar
movs
mov
or
jecxz
and
sbb
push
mov
push
dec
ret
mov
sub
ret
inc
clc
pushf
and
aad
(bad)
sub
xor
push
nop
(bad)
jns
inc
(bad)
imul
add
adc
ins
push
sub
cmp
mov
xor
pop
arpl
sub
sub
dec
xsavec
mov
and
jne
push
imul
push
jo
(bad)
imul
es
rcl
ins
mov
jmp
push
movs
sub
pop
add
mov
aas
cld
add
mov
fcom
push
imul
or
fdivp
test
enter
push
mov
push
or
dec
loop
cmps
mov
leave
push
out
or
mov
pop
pop
ror
add
dec
out
mov
push
push
and
xor
ins
loope
push
test
in
add
xchg
sahf
jp
dec
mov
push
ret
fs
jmp
aad
loop
sahf
nop
sbb
das
push
push
jb
lea
sti
mov
sbb
push
jmp
rol
aas
gs
test
push
mov
jle
call
push
aam
fcmovnb
jg
je
inc
test
mov
dec
adc
add
push
popa
ret
jb
push
mov
aam
lea
mov
and
fdiv
(bad)
sbb
loope
mov
imul
and
or
add
push
jne
je
shr
pop
inc
xchg
fsub
add
cmps
pop
sbb
dec
lock
or
jo
mov
pop
or
repnz
dec
inc
pop
mov
push
iret
inc
sbb
movs
test
movs
cmps
sbb
call
int
and
and
dec
jge
push
mov
jmp
jae
aas
adc
xchg
pop
sbb
popf
mov
fcom
and
sar
pop
lds
jmp
imul
pop
je
call
cmp
inc
push
push
ins
fdiv
sub
and
sbb
and
lahf
push
mov
and
jb
aam
inc
mov
pop
sar
test
mov
add
or
mov
jbe
jno
daa
push
rep
and
aaa
call
sbb
sbb
jp
fwait
mov
cmp
push
lea
inc
mov
pusha
cmc
xlat
pop
jp
push
cdq
clc
jmp
call
or
pop
and
iret
ficom
pop
xchg
sbb
test
ja
ror
adc
pop
rol
unpcklps
outs
lock
push
jnp
int
popa
pop
inc
int
pop
xchg
pushf
loope
xor
sti
lds
ret
cmc
jmp
add
and
add
in
add
test
in
sub
out
pushf
es
and
sbb
inc
jo
add
cmps
add
add
rcl
retf
or
push
push
movs
retf
clc
test
push
jmp
cmp
cmps
push
call
call
cmps
mov
pop
jne
xchg
lea
xor
xor
daa
aad
es
xor
mov
pop
fdivrp
nop
(bad)
sub
add
xor
dec
hlt
jmp
les
lods
add
add
mov
add
call
xlat
add
dec
adc
jp
add
call
pop
and
std
ins
mov
iret
mov
ja
pop
mov
mov
xchg
push
jnp
out
mov
dec
call
mov
dec
push
inc
push
mov
mov
loopne
push
dec
push
or
sub
in
lea
loopne
sbb
sbb
sub
sbb
cs
push
or
in
shl
or
cmp
push
pop
sbb
fwait
clc
mov
sbb
popa
retf
xor
lea
scas
mov
ret
sub
or
(bad)
xor
mov
push
xor
jo
mov
xor
cmc
(bad)
mul
or
test
pop
xor
mov
mov
sbb
popf
mov
or
lds
and
push
pop
lahf
jno
stos
pop
mov
movs
gs
dec
cdq
mov
adc
xchg
je
je
sub
and
add
test
hlt
push
jmp
cld
push
jns
ret
gs
adc
pop
loop
jo
inc
bound
data16
inc
loope
icebp
push
pop
xchg
push
jl
sbb
retf
sub
loope
aad
aam
push
xchg
inc
test
call
adc
xor
inc
jns
cmp
ds
sbb
push
sbb
shl
addr16
loop
sub
xlat
fdivr
xor
sub
outs
mov
dec
push
into
inc
sti
cdq
and
mul
fdiv
imul
loopne
pop
ja
adc
pop
pusha
push
(bad)
test
sub
call
xor
or
xchg
ficom
sub
pop
sub
stc
jle
lds
and
adc
stc
and
add
and
jge
push
jb
call
sub
jmp
push
pop
test
xor
jle
mov
addr16
xchg
xchg
sbb
mov
jne
in
dec
pop
xchg
push
lea
adc
adc
movs
in
jbe
cmp
or
inc
mov
sbb
mov
inc
xchg
pop
dec
pop
mov
or
lock
mov
call
fild
imul
push
fadd
imul
push
add
hlt
std
xlat
call
(bad)
push
jno
(bad)
(bad)
loop
xor
xchg
enter
mov
mov
es
in
rcr
pop
mov
pop
psubsw
push
iret
fstp
xchg
aas
xor
add
jl
(bad)
call
mov
out
aad
dec
mov
mov
fld
adc
and
retf
ror
adc
push
call
inc
stos
dec
leave
mov
(bad)
mov
enter
cmps
lea
add
add
dec
pop
jo
movs
push
cdq
popa
sbb
and
outs
not
shl
jle
rcl
aas
mov
and
outs
adc
adc
adc
fild
or
jne
ins
sub
adc
push
pop
ins
add
or
mov
mov
sbb
(bad)
inc
shl
or
or
pushf
mov
inc
mov
push
fdiv
xchg
rcr
outs
push
jb
daa
fdiv
dec
je
jmp
push
jmp
xchg
pop
pop
xchg
and
add
pop
mov
jl
sbb
je
mov
add
scas
sbb
mov
push
mov
or
push
adc
push
xor
dec
adc
xlat
in
jb
adc
xchg
pushf
mov
ss
imul
and
into
rcl
cmp
push
mov
(bad)
retf
xor
(bad)
hlt
or
pop
pop
and
jb
mov
sbb
and
js
mov
mov
sub
in
xor
enter
push
adc
lods
mov
and
or
ins
or
and
adc
lock
cmp
mov
cwde
push
daa
cmp
mov
sub
push
jae
and
leave
or
mov
jmp
adc
test
xor
and
gs
repz
fs
in
in
push
add
jne
dec
push
and
pop
enter
jmp
inc
inc
jle
jo
ficomp
and
in
cdq
stc
jmp
xor
ret
rol
xchg
loope
and
sub
stc
jo
dec
in
push
sub
in
(bad)
in
shr
pop
mov
or
xor
test
push
ins
cmp
pop
ret
mov
sub
mov
push
and
sub
xchg
lods
mov
rcr
in
mov
push
adc
mov
pop
mov
inc
add
stos
bnd
inc
pop
mov
(bad)
les
mov
adc
jmp
in
mov
jne
je
in
pop
sahf
sbb
in
in
lds
push
jbe
test
icebp
pop
add
inc
enter
pop
cmp
pusha
push
mov
imul
ret
imul
es
cmps
adc
test
fistp
push
fist
aaa
xor
pop
test
mov
mov
cmp
lods
push
xor
jb
cmp
fidivr
push
jbe
xor
sbb
push
cmp
shl
mov
ficomp
xor
xor
xchg
cmps
adc
jmp
dec
andnps
fdivr
mov
enter
cmp
data16
mov
fld
les
adc
test
cmp
mov
lods
dec
xlat
push
push
mov
jecxz
repz
sub
ret
lea
call
add
les
mov
in
dec
adc
jbe
lods
ret
and
and
sar
sub
in
add
jne
icebp
xchg
sub
mov
sahf
loop
test
cld
int3
xor
add
pop
sub
daa
add
mov
in
jne
add
rcl
ror
scas
jns
nop
mov
sbb
inc
lods
dec
sahf
icebp
or
gs
sahf
and
loop
jbe
push
add
add
out
enter
cmp
adc
(bad)
cld
mov
or
xor
cmp
or
mov
xchg
inc
inc
and
pop
cmp
pusha
(bad)
popa
inc
dec
pop
and
je
or
push
jmp
add
sub
scas
leave
ret
cmp
adc
and
push
loope
call
mov
cld
inc
mul
dec
mov
push
sbb
or
push
ins
push
jmp
mov
fs
xor
call
xor
jmp
scas
aad
inc
push
(bad)
cld
call
shl
mov
mov
pop
cdq
ins
cld
adc
sbb
nop
add
or
mov
push
mov
add
ror
movs
les
jns
lods
jbe
cmc
mov
xor
cmp
in
mov
dec
test
adc
mov
cdq
lods
add
cmp
jne
push
loopne
pop
pop
xor
mov
mov
out
push
xchg
push
inc
shl
hlt
repnz
fidiv
or
rcl
dec
inc
xchg
cdq
push
inc
inc
xor
mov
aas
fist
or
or
shr
push
imul
or
jnp
mov
ss
stos
std
std
push
stc
sbb
push
xor
xor
cld
cmp
pop
and
or
add
xor
enter
sbb
sbb
aam
enter
mov
dec
xor
sub
test
movs
xor
mov
cmp
dec
mov
jo
cld
sub
inc
push
fcom
xchg
pop
adc
std
adc
add
cmps
adc
ds
(bad)
xor
or
or
scas
jecxz
inc
loopne
mov
loopne
cmp
cmp
(bad)
in
add
add
pop
mov
jns
add
(bad)
mov
and
repz
enter
mov
mov
rcr
js
aam
sbb
ja
xlat
sub
sub
push
pop
clc
mov
int
mov
add
movs
or
add
ror
inc
xchg
mov
les
xor
mov
mov
add
int3
lods
or
sbb
fld
and
cdq
push
push
lock
daa
fucomp
add
jl
adc
xchg
adc
mov
pop
pop
cmp
push
cwde
sbb
adc
xor
push
mov
shr
jg
pop
cmp
cwde
inc
jecxz
push
mov
call
inc
pop
ds
scas
emms
rol
sub
inc
jbe
inc
add
push
lea
mov
mov
xchg
pop
xor
in
sbb
xchg
sar
xor
or
mov
popf
jbe
stos
ins
and
jne
xor
push
in
std
jmp
ins
mov
push
and
xor
add
and
jmp
in
or
cmp
sub
js
xor
imul
inc
xor
or
clc
sbb
ins
adc
(bad)
sub
xor
xor
inc
sar
add
sub
rcr
(bad)
sub
or
fsub
or
rol
test
imul
cmp
retf
dec
fbld
rcl
mov
inc
mov
dec
sahf
push
sar
(bad)
fwait
and
jne
mov
jmp
or
add
movs
cmp
int
xchg
pop
or
push
or
lea
ret
or
add
inc
dec
cmp
rol
and
dec
daa
sub
push
leave
ror
push
dec
jecxz
sar
mov
inc
inc
push
add
add
es
push
loope
xchg
(bad)
jmp
sbb
push
call
jge
imul
cmp
es
xor
sbb
cmp
ins
enter
mov
mov
mov
push
push
push
mov
or
mov
inc
mov
(bad)
xchg
(bad)
mov
(bad)
push
fucomip
cmp
inc
stos
std
fnstenv
push
jbe
movs
loopne
movs
jbe
xlat
adc
jg
nop
clc
mov
mov
pop
jbe
xchg
mov
or
cwde
sbb
push
in
shl
push
mov
daa
xor
pushf
cli
adc
bound
shl
jae
or
loop
(bad)
lock
test
inc
jmp
add
inc
cmp
loopne
stos
fwait
add
push
test
lock
jb
clc
mov
sbb
adc
mov
adc
mov
sbb
jbe
ds
fidivr
aaa
push
mov
hlt
adc
fsubr
jo
push
sbb
cmp
cmp
in
mov
into
lea
lds
lods
sbb
scas
jbe
fild
push
inc
adc
je
xchg
pop
add
and
cmp
push
(bad)
cdq
je
mov
(bad)
dec
jle
mov
jns
push
pop
out
in
push
sub
xchg
loop
leave
lock
push
add
push
push
mov
push
lea
mov
outs
test
xchg
mov
push
push
sbb
jne
data16
imul
cmp
and
cmps
aam
in
pop
fdiv
sbb
push
popa
jecxz
pop
cli
call
shl
sbb
push
push
rcr
fcom
int
loopne
pop
scas
dec
je
call
dec
push
push
push
cs
shl
add
or
mov
xor
push
enter
sete
jnp
lds
sbb
mov
or
fstp
imul
mul
aaa
in
ret
mov
jmp
and
cmp
push
int
mov
xchg
adc
sbb
mov
retf
sub
lock
cmp
add
mov
adc
mov
ss
aad
hlt
repz
and
cmp
push
sbb
jmp
inc
inc
pusha
test
dec
lods
fst
jmp
adc
and
add
add
sub
jecxz
ss
mov
je
ffreep
or
dec
xor
loop
lahf
adc
inc
call
push
pop
mov
sbb
mov
push
fdivr
lea
mov
shl
inc
or
pop
addr16
ss
js
pop
sbb
sbb
sbb
jne
into
sbb
out
cmp
jmp
add
push
cmp
jne
push
shl
pop
(bad)
and
or
je
int3
jecxz
enter
dec
loop
aaa
mov
jmp
enter
nop
xor
add
mov
sar
(bad)
icebp
call
sbb
sar
inc
call
cld
test
fldenv
push
bndldx
cmp
js
pop
xchg
out
xchg
add
sbb
(bad)
movs
sbb
cmc
mov
add
pop
jb
xchg
push
push
loope
js
neg
jge
daa
mov
push
dec
xor
fisttp
fxtract
jmp
jne
(bad)
lahf
pop
xor
movs
inc
or
leave
sbb
outs
mov
mov
or
push
xchg
add
pop
push
adc
add
ret
fdivr
or
(bad)
cmc
pop
mov
sbb
push
call
mov
and
in
movs
jmp
js
repnz
cmp
in
mov
mov
dec
push
call
jmp
cmp
cld
sbb
sbb
icebp
mov
mov
push
ror
ret
or
mov
push
stc
sub
fcomp
or
shl
out
push
or
push
sbb
test
clc
or
cmp
pop
cwde
or
mov
mov
pushf
or
cmp
test
ret
cmps
test
stos
push
cmp
je
inc
loopne
fs
arpl
mov
inc
mov
inc
mov
jo
and
cmp
jg
push
dec
(bad)
call
add
pop
mov
mov
call
test
lea
sbb
mov
fnstenv
lea
jl
and
or
xchg
nop
push
dec
or
push
jl
mov
cmp
fadd
dec
jne
movzx
add
push
add
add
xor
movs
nop
and
and
and
add
test
push
cmp
add
push
sbb
sub
add
pop
xor
jmp
ret
in
das
in
and
adc
cli
sub
(bad)
sbb
and
ja
fcmovu
aas
xor
mov
lea
inc
xor
inc
pop
inc
inc
adc
ror
jnp
dec
sub
ror
out
add
push
mov
in
in
pop
inc
jne
inc
loopne
dec
mov
adc
push
call
push
cdq
and
push
dec
clc
xchg
push
push
push
call
inc
rol
das
dec
add
push
sub
dec
aaa
mov
and
xchg
je
clc
cmp
adc
inc
add
dec
pop
and
pop
add
xchg
jge
aas
enter
or
shr
adc
mov
arpl
adc
xor
xchg
adc
pop
or
mov
push
add
adc
add
inc
cli
adc
adc
cmp
nop
pop
out
adc
inc
push
adc
add
inc
adc
nop
shl
adc
add
adc
xor
sbb
inc
adc
test
push
mov
push
add
add
outs
pop
adc
adc
rcr
pop
adc
inc
aaa
xor
dec
push
sbb
daa
and
adc
shl
(bad)
(bad)
rol
and
adc
ror
popf
sbb
mov
pop
xchg
pusha
inc
shl
or
inc
jo
lock
test
pusha
xchg
cli
or
or
push
cli
mov
jp
jle
mov
div
mov
pop
call
call
aas
sbb
popa
js
dec
aam
fnstenv
inc
adc
cmp
call
jl
pop
js
call
int3
pop
hlt
ins
inc
or
xchg
cmp
movs
dec
pop
leave
rcr
out
fnstsw
cmp
or
inc
mov
add
psubsb
add
pop
(bad)
sti
enter
scas
xchg
pushf
xchg
sbb
arpl
imul
push
cmp
push
sbb
retf
sbb
out
cmps
mov
mov
sar
xchg
dec
pushf
push
xchg
xor
jo
enter
pop
push
bound
push
sub
fisub
dec
jmp
sub
inc
jmp
or
xchg
sbb
jo
dec
jmp
push
xlat
(bad)
xchg
sbb
push
adc
(bad)
cmp
or
adc
leave
test
and
add
push
loope
mov
push
add
or
pop
mov
push
and
inc
fiadd
push
je
arpl
inc
jne
push
push
es
cmps
add
xor
fs
or
jns
into
xor
out
cmp
je
inc
xor
push
es
and
inc
lds
fist
imul
fs
xor
push
or
in
ficomp
test
rcr
push
and
int3
xchg
sbb
enter
das
js
pusha
dec
dec
or
sbb
and
jbe
push
imul
push
call
sbb
and
cmp
pop
shl
sub
sbb
add
(bad)
aas
push
jns
push
xchg
pop
aaa
(bad)
and
fs
mov
movs
adc
add
inc
int3
scas
adc
push
test
call
xchg
pop
rol
loope
cwde
ror
xchg
push
outs
pop
pop
xor
pop
aaa
and
push
adc
fwait
les
pop
xchg
dec
enter
xor
xchg
xchg
or
cwde
shr
dec
cwde
shl
sub
adc
xor
and
call
push
jo
shl
call
daa
jno
shl
or
inc
dec
daa
dec
addr16
inc
cs
pusha
repz
ins
daa
sbb
je
mov
movs
daa
dec
jne
sar
dec
xchg
loop
movs
daa
xchg
or
push
sub
sbb
ins
dec
out
or
xor
xchg
(bad)
jmp
out
je
daa
or
out
mov
adc
mov
inc
in
nop
add
and
ins
dec
out
dec
daa
sbb
outs
inc
daa
les
xchg
push
daa
repz
or
push
mov
movs
repz
ror
jecxz
or
ss
inc
nop
into
sar
push
adc
les
sbb
int3
add
push
mov
or
cmps
fadd
xchg
mov
and
jge
movs
xor
mov
or
ins
push
cmp
and
loopne
ja
push
pop
jmp
cmp
je
mov
jmp
jb
add
sub
or
lahf
ret
lea
or
enter
inc
xor
jns
scas
mov
pop
add
sahf
retf
sub
add
add
fiadd
retf
jg
ds
cmp
je
xchg
add
dec
fmulp
xchg
mov
in
in
push
push
push
gs
jns
pop
pop
inc
push
repnz
or
xchg
or
retf
sub
or
cld
add
dec
sahf
or
fisttp
xchg
sub
(bad)
add
leave
mov
or
enter
or
jb
iret
push
push
push
punpckhwd
pop
enter
adc
mov
pop
adc
pop
in
adc
and
and
adc
adc
rcl
add
adc
adc
xor
adc
push
fs
push
pop
and
enter
and
movs
mov
sbb
jns
jmp
dec
sahf
xchg
fcomp
sbb
sbb
sbb
fwait
sbb
je
push
sbb
sub
xor
xor
sbb
pop
push
push
inc
neg
test
jne
add
add
sub
add
in
(bad)
pop
dec
mov
xchg
and
lods
pop
cld
popf
pop
add
cwde
xchg
push
in
push
in
imul
adc
repnz
ret
leave
jnp
xlat
in
in
repz
leave
repz
mov
enter
in
call
call
adc
in
mov
cmp
sub
scas
cmp
adc
adc
jno
push
or
in
mov
xchg
aad
in
cmp
and
out
out
add
out
or
mov
call
mov
icebp
cmp
das
and
pop
jnp
or
cmp
in
cdq
push
hlt
imul
std
inc
scas
neg
cmp
sub
mov
sbb
sub
nop
mul
clc
clc
sbb
aas
stc
jns
scas
in
and
cli
inc
sahf
xchg
sub
sti
sti
sbb
cld
cld
je
cld
push
xchg
idiv
push
nop
shl
mov
xor
mov
iret
fwait
sbb
(bad)
(bad)
xor
add
sbb
inc
mul
sub
jb
push
cli
dec
lahf
shr
jg
sbb
pop
jmp
pusha
nop
xchg
adc
jecxz
enter
xor
push
jmp
cmp
or
aam
or
fisub
dec
out
out
scas
nop
mov
(bad)
sti
and
bound
or
dec
jmp
jmp
das
test
scas
daa
in
cdq
or
add
push
and
cli
or
(bad)
cli
out
out
out
sub
xchg
mov
inc
repnz
xor
aas
repz
xchg
sbb
add
stc
(bad)
push
cmp
mov
mov
stos
dec
div
mov
xchg
and
xor
pushf
pusha
pop
repnz
stc
sbb
movs
test
or
sub
cld
cmp
jmp
push
in
push
mov
fild
dec
mov
stos
xchg
cmp
clc
mov
jmp
loop
sub
shl
loope
in
repnz
clc
and
inc
dec
add
or
stos
or
out
xchg
pop
leave
or
in
ror
mov
push
jmp
nop
mov
pop
not
sub
hlt
imul
pushf
mov
into
mul
jns
mov
scas
neg
test
repnz
inc
and
test
repz
not
push
dec
push
or
mov
xchg
cmc
div
test
jbe
jne
mov
sbb
cmp
jmp
cmp
movs
cli
xchg
cmp
inc
repnz
cmc
aaa
inc
mov
cli
hlt
or
push
inc
(bad)
(bad)
lock
push
out
add
dec
sbb
shl
mov
clc
sti
mov
loope
enter
loope
jp
bswap
and
pop
hlt
cmp
cmps
jb
popa
mov
hlt
in
add
xchg
in
repz
leave
or
in
rcl
push
dec
jmp
add
ins
repz
repz
and
repz
int
in
mov
in
(bad)
repnz
and
repnz
movs
jmp
das
xchg
cmp
adc
repnz
pop
repnz
repnz
cld
icebp
cmc
cmc
ins
and
inc
mov
xchg
push
push
test
push
cwde
icebp
call
stc
xchg
adc
pop
mov
pop
pop
xor
movups
lods
jmp
ror
xchg
pop
mov
test
jp
jmp
sbb
movs
je
int
push
(bad)
push
sub
ffreep
push
inc
jmp
sub
ins
loope
inc
cmp
mov
add
mov
push
mov
jmp
jge
xchg
push
mov
in
pop
ret
jne
sti
in
bound
xor
jmp
xchg
cmc
enter
add
ss
cmp
daa
xor
push
inc
mov
dec
push
nop
push
jns
rcr
test
dec
push
aaa
or
cmps
fnstcw
add
fldcw
jp
sub
push
jecxz
repz
repz
mov
dec
jae
ins
sbb
xor
push
aad
in
xchg
(bad)
gs
dec
je
repz
or
mov
mov
daa
sar
cmps
cld
dec
mov
add
ds
pop
stc
pop
and
lea
inc
cmp
and
ficomp
pop
mov
test
or
sbb
jb
ret
or
xchg
or
inc
sub
fist
push
add
xchg
xchg
pop
jmp
xor
ja
xchg
or
ins
push
in
fiadd
ja
dec
xchg
push
sar
(bad)
sbb
push
xlat
pop
mov
ss
daa
sti
movs
mov
mov
add
call
sbb
add
std
fs
jmp
xchg
inc
inc
add
pusha
sub
and
in
fsub
call
les
xor
pushf
ss
adc
jmp
adc
push
shl
or
xor
xor
mov
lods
and
xor
xchg
je
lahf
popf
adc
push
dec
xor
das
pop
xor
stos
adc
mov
adc
mov
cwde
add
shl
adc
std
aas
cmp
pop
sub
sub
imul
xor
add
add
test
mov
pop
inc
imul
sub
inc
ds
dec
ret
add
dec
xchg
pop
in
scas
add
xor
jo
xor
movs
xor
add
popa
mov
fsub
bound
(bad)
call
dec
nop
outs
cdq
sbb
inc
adc
pusha
adc
and
or
add
and
data16
dec
nop
push
xor
data16
icebp
rol
sbb
and
or
in
retf
xor
jmp
je
and
ds
stos
push
add
or
push
mov
movs
xchg
rcl
rcr
call
ret
cmp
or
mov
outs
(bad)
jg
cmps
nop
into
sub
stos
dec
cmc
in
push
xor
xlat
fild
sti
iret
(bad)
in
push
test
stc
push
movs
in
sbb
xor
and
dec
nop
fsubr
fist
fwait
in
and
mov
sbb
out
and
stos
add
pop
xchg
push
fbstp
mov
pop
push
sbb
popf
psubw
rcl
jmp
ror
or
jo
or
(bad)
adc
cli
pop
enter
in
xchg
and
nop
pop
and
mov
xor
je
ss
dec
es
push
sbb
or
dec
pop
daa
out
or
rcr
lds
ror
cmp
arpl
push
pushf
pop
and
nop
aaa
push
and
ja
and
cmp
xor
cmp
cmp
and
psraw
xor
push
or
repnz
out
fistp
push
jecxz
mov
fisttp
iret
jb
mov
rcr
mov
push
fild
jp
sbb
call
pop
push
enter
fist
add
sub
adc
jmp
mov
enter
inc
mov
in
test
dec
add
and
push
or
retf
jae
cmova
jmp
push
(bad)
sbb
test
ins
pop
aaa
or
sub
fsubrp
mov
cmps
loopne
stos
ror
call
push
fisubr
nop
sub
stc
aaa
xchg
or
iret
fsubp
mov
leave
aam
je
outs
push
pop
scas
mov
mov
hlt
cmp
add
aam
les
and
lahf
(bad)
jmp
push
(bad)
(bad)
mov
sti
add
data16
inc
mov
inc
sbb
dec
movs
pushf
cwde
test
lea
xor
mov
push
dec
popf
popf
push
push
cmp
aad
mov
inc
stos
imul
and
daa
and
mov
sbb
arpl
rcr
dec
icebp
inc
enter
in
adc
mov
(bad)
or
gs
inc
xchg
inc
je
mov
lea
push
xor
clc
mov
mov
movs
cmps
mov
add
aaa
stos
adc
or
add
test
out
pop
mov
scas
sub
sub
pusha
or
or
and
cmp
retf
jle
and
inc
xchg
popf
add
xchg
test
jmp
dec
cmp
mov
xor
dec
push
mov
inc
pusha
push
or
in
jo
xor
mov
sub
mov
neg
loop
loopne
jne
sbb
sahf
leave
mul
xor
clc
or
sti
jmp
mov
pop
popa
fsub
push
and
push
jmp
adc
sbb
xor
pop
cdq
stos
jmp
sbb
jg
shr
data16
data16
loope
xchg
and
jnp
and
dec
stos
jbe
and
pusha
jl
out
push
cmp
inc
inc
inc
xlat
aas
ss
dec
je
sub
mov
or
(bad)
jns
and
add
jns
and
es
loopne
sbb
cmp
adc
jns
xchg
nop
push
int3
jns
into
pop
inc
xchg
lds
(bad)
sub
push
daa
dec
mov
inc
fs
jns
and
movs
adc
jns
xchg
cwde
scas
jb
mov
inc
dec
mov
dec
ja
repz
and
je
repz
cs
mul
ret
or
mov
out
movs
mov
movs
jmp
mov
sbb
mov
imul
push
sbb
and
push
dec
imul
imul
inc
imul
dec
imul
call
ins
cmp
or
js
je
loopne
inc
push
sar
mov
push
imul
nop
pop
or
scas
test
imul
jmp
sbb
xor
call
dec
neg
in
loope
inc
adc
sbb
imul
xor
mov
dec
dec
imul
sar
inc
cs
imul
imul
fs
add
test
mov
test
mov
push
jp
fs
aad
hlt
mov
imul
cmp
stos
test
xor
test
imul
xor
mov
xor
imul
imul
inc
imul
ss
imul
mov
push
(bad)
hlt
test
jmp
rcl
push
cmps
and
hlt
call
sbb
stos
aaa
push
dec
inc
imul
rcl
imul
icebp
fdiv
xor
xchg
(bad)
push
imul
dec
or
dec
je
xor
mov
mov
xor
or
imul
imul
sbb
and
sbb
push
jmp
sbb
pop
movs
test
imul
push
mov
imul
jp
sub
sbb
imul
pusha
and
mov
imul
mov
inc
or
or
sub
cmp
aam
or
or
mov
dec
cmp
sbb
mov
das
sbb
push
cld
sbb
fwait
test
imul
xchg
or
and
adc
mov
pop
mov
dec
cmp
aam
imul
xor
nop
mov
rcl
or
dec
inc
aaa
imul
add
xor
sbb
pop
rcl
out
ret
call
push
sbb
jae
imul
add
int3
sbb
lock
xor
in
call
xchg
or
int
jl
cmp
ss
call
pop
xor
pop
and
imul
call
add
mov
imul
retf
jo
inc
imul
mov
pop
imul
imul
xor
sub
xchg
sar
add
sti
retf
dec
movs
jne
jb
mov
xchg
jbe
test
mov
in
stos
(bad)
cmp
pop
jo
xchg
and
cmp
in
imul
xor
ret
imul
rol
jmp
jp
out
dec
push
add
dec
pop
inc
push
xor
les
xchg
pop
lods
fisub
test
imul
cmps
mov
add
xor
movs
shr
dec
inc
aaa
jg
imul
push
xor
mov
cdq
sbb
xor
enter
cmp
inc
enter
push
pop
dec
xchg
into
loop
dec
pop
cmp
sbb
pop
call
call
adc
sbb
or
popa
jo
jo
cmps
imul
daa
adc
xchg
push
pop
dec
imul
rol
leave
in
cs
loope
jge
aaa
imul
and
aaa
popf
aaa
dec
pop
aam
xor
sub
push
repz
adc
in
pop
out
lods
mov
inc
xlat
or
add
push
mov
jnp
outs
inc
(bad)
dec
pop
ret
fucomi
adc
push
mov
sbb
cmp
popf
xor
ret
mov
jmp
dec
inc
inc
dec
hlt
sbb
cmps
inc
popf
test
test
and
enter
addr16
idiv
jl
dec
and
sub
loopne
enter
pop
(bad)
rcl
sar
push
shl
rol
inc
jnp
nop
inc
push
outs
add
xlat
mov
sbb
cmps
inc
les
sbb
and
daa
or
es
sti
movs
and
cs
adc
inc
pushf
or
sub
cmp
sbb
pop
das
mov
or
cmp
das
das
add
dec
dec
mov
or
popf
mov
add
js
and
movs
mov
je
add
sbb
and
mov
les
sbb
xchg
cli
cmps
mov
pop
das
dec
mov
add
jge
push
jb
push
in
cmp
inc
dec
push
xchg
push
leave
ret
jo
add
mov
xchg
ror
call
sub
mov
jp
jl
aam
in
dec
or
sbb
movs
adc
popf
jg
dec
sub
jo
je
add
test
mov
xor
es
or
popf
sub
popa
add
popf
mov
shr
or
xchg
and
or
mov
adc
and
add
pop
not
and
call
push
jl
sbb
jle
popa
dec
or
sub
cmp
mov
psubsb
dec
xchg
pop
jge
pop
jbe
fimul
call
add
jmp
and
inc
mov
add
or
push
cwde
xchg
and
fst
sbb
sub
or
ret
idiv
add
mov
nop
hlt
push
xchg
add
rcr
xchg
inc
add
rol
inc
sub
add
adc
mov
lahf
add
test
and
add
scas
xchg
or
add
loopne
ror
inc
mov
inc
xchg
hlt
lock
pop
add
pop
xchg
add
cmp
es
add
xchg
pop
mov
pop
dec
call
jl
mov
mov
add
and
cwde
xchg
xchg
cmc
lds
rol
jo
push
cmc
and
pop
cmp
mov
or
inc
cs
xor
ffree
push
push
dec
hlt
inc
or
call
jb
cmc
aaa
cs
xor
cmc
lea
ja
inc
cmc
adc
nop
fs
xor
cmc
jmp
cmc
mov
mov
mov
mov
cmc
aaa
inc
adc
test
daa
cmc
and
call
dec
(bad)
cmc
push
mov
jno
inc
pop
outs
jae
lea
jle
push
fld
adc
add
mov
loop
cmps
pop
jmp
dec
daa
movs
add
inc
mov
sub
jl
je
add
xchg
push
call
or
xor
icebp
mov
adc
or
test
jmp
test
mov
loope
sbb
adc
pusha
add
pop
ins
jo
dec
or
push
mov
sub
pop
inc
mov
and
out
aad
cmp
call
adc
xor
add
or
(bad)
adc
xchg
adc
out
sub
add
jmp
cli
retf
shl
test
in
mov
adc
repnz
cs
inc
jg
(bad)
mov
nop
inc
and
cmp
pop
in
push
push
mov
add
jb
icebp
shl
xor
push
inc
call
add
pusha
imul
ss
jmp
inc
add
rcr
xor
aaa
cmp
cmp
(bad)
ror
or
jne
push
mov
dec
mov
cmc
(bad)
mov
ins
cmp
add
cmp
inc
jmp
dec
jmp
xor
pop
das
or
push
inc
inc
cmc
cmps
or
adc
sbb
fiadd
add
inc
pop
je
pop
es
add
xor
mov
ror
cmp
xor
mov
or
lock
mov
stc
adc
pop
mov
out
ror
je
inc
or
sbb
test
mov
cld
pop
and
cmp
leave
or
add
into
call
lea
xor
inc
jmp
(bad)
mov
xchg
arpl
jmp
fs
pop
(bad)
cwde
push
sbb
movs
or
xchg
ror
sbb
mov
push
and
inc
fadd
sbb
call
popa
push
mov
push
pop
sbb
inc
add
lock
xchg
mov
imul
and
or
xlat
push
aaa
aaa
hlt
fadd
popa
pop
mov
out
js
jb
cmp
repz
and
jge
(bad)
push
push
or
sti
dec
mov
into
rol
and
inc
cmps
fwait
jo
in
inc
jmp
cmp
xor
(bad)
lock
push
add
ret
push
sar
inc
movs
lea
dec
push
adc
xlat
ret
dec
and
mov
sub
push
hlt
dec
inc
sbb
push
sub
int
jecxz
cmc
inc
adc
sub
cmps
movs
in
cmp
pop
pop
cdq
nop
jmp
mov
inc
ror
sbb
sbb
xor
push
dec
cmps
push
jno
les
call
add
fist
xor
test
rcl
adc
sbb
push
xchg
mov
jmp
add
sbb
(bad)
in
push
enter
ja
mov
outs
out
push
inc
push
add
rol
jp
lock
cmp
adc
call
xchg
outs
retf
rol
add
xchg
les
dec
gs
xor
mov
or
inc
ds
loopne
add
iret
dec
rol
mov
js
sar
imul
popf
fadd
retf
in
call
scas
or
movs
mov
add
dec
sub
cmc
fist
and
sbb
lea
xlat
sbb
mov
mov
mov
movs
mov
push
lea
xchg
pop
imul
mov
mov
and
xor
jg
imul
xchg
int3
or
push
lea
fcom
jmp
jge
xchg
ins
dec
cmps
sbb
xchg
jbe
pop
repnz
pop
add
pop
add
push
pop
fwait
inc
sbb
xor
inc
sbb
push
ret
add
mov
jmp
mov
mov
or
push
int3
mov
adc
mov
jmp
cdq
popf
add
es
xchg
or
sar
adc
xchg
xchg
xor
imul
dec
sbb
jmp
xchg
xchg
pop
and
inc
movs
add
jge
pop
xchg
jg
jae
ins
mov
test
(bad)
mov
cli
pop
pop
repnz
call
jne
aad
rcl
or
or
pop
inc
xchg
jg
add
pusha
add
cmp
stos
pop
or
es
or
or
out
rol
and
test
jns
imul
nop
xchg
xchg
sbb
mov
jmp
push
arpl
mov
pop
jecxz
dec
push
(bad)
mov
ret
cwde
add
dec
inc
aaa
mov
inc
cmp
loop
inc
or
sub
aaa
sbb
jns
shl
mov
xchg
xchg
jns
or
push
out
cmp
xchg
repnz
inc
and
or
and
std
inc
loopne
and
push
xor
add
bound
xchg
or
pop
cld
cmp
in
adc
or
jecxz
arpl
xor
and
in
xor
jmp
fadd
repnz
xor
call
loopne
jecxz
xor
xor
gs
addr16
ret
adc
add
cmp
shl
add
add
add
rcl
sbb
sbb
enter
mov
xchg
sbb
inc
cmp
and
inc
push
xchg
pop
ror
out
sub
fadd
dec
imul
mov
arpl
xor
sbb
push
jecxz
cmps
sbb
loope
add
jmp
imul
int
pusha
mov
enter
and
xor
ror
imul
push
dec
jp
or
fcom
xor
xor
and
pop
and
pop
sar
add
and
add
std
fwait
pop
shl
mov
arpl
in
and
and
in
cmp
xchg
shl
movs
push
pop
push
jne
jmp
push
cmp
loopne
xor
add
test
add
pop
or
sbb
sub
cmp
push
fsubr
jmp
xchg
daa
outs
and
pop
ins
jb
adc
and
mov
dec
test
push
add
mov
dec
stos
ins
add
psadbw
xor
push
popf
fstp
shl
dec
mov
lock
mov
movs
jmp
lock
jmp
sub
xchg
dec
adc
jecxz
call
jmp
fst
rol
adc
push
dec
mov
int3
inc
imul
push
pop
mov
leave
out
pop
and
ret
icebp
xchg
lds
call
ret
mov
daa
pop
sub
and
pop
adc
pop
push
fdivr
or
addr16
mov
inc
lea
iret
sar
rcr
mov
outs
mov
cmps
adc
sbb
loop
cmp
adc
out
jecxz
mov
loopne
push
cmps
mov
inc
cmps
ds
loopne
mov
dec
call
mov
pop
lock
add
mov
cmps
mov
mov
or
js
adc
jo
add
sbb
or
out
sbb
xchg
popf
fstp
out
push
xor
adc
dec
sbb
sbb
inc
push
mov
sub
sbb
test
pop
lods
(bad)
lea
std
mov
leave
inc
or
std
stos
mov
out
adc
std
cmps
or
addr16
push
test
xchg
in
pop
sbb
or
dec
mov
mov
int3
push
inc
mov
mov
and
adc
cdq
pop
push
sub
inc
pop
add
or
mov
mov
packuswb
mov
loopne
add
or
and
mov
ja
shr
mov
aam
pop
call
aam
mov
add
mov
and
mov
mov
cmp
mov
xchg
nop
shl
mov
add
enter
cmps
pop
and
mov
adc
sub
mov
loopne
cmp
pop
and
idiv
ror
xor
enter
retf
xchg
xchg
mov
push
call
test
xor
add
rcl
(bad)
pop
pop
or
xchg
adc
mov
call
xchg
nop
jmp
jmp
jne
pop
xor
xchg
and
and
mov
jbe
lock
xor
mov
je
mov
and
xor
in
mov
sbb
mov
jb
or
mov
mov
(bad)
adc
mov
loop
mov
call
hlt
jno
pop
or
daa
jp
loop
mov
dec
push
xchg
mov
add
inc
mov
and
add
mov
sbb
mov
jmp
nop
push
inc
jo
or
jo
mov
adc
fstp
and
mov
mov
xor
loopne
mov
aad
mov
add
inc
and
add
lods
and
inc
pop
mov
pop
mov
aaa
pop
and
adc
jmp
ja
inc
inc
mov
popf
retf
mov
rcl
mov
add
push
popf
sbb
imul
sbb
mov
adc
cmps
loopne
imul
or
je
add
fs
and
outs
ja
rcl
mov
mov
mov
cmp
test
pushf
sbb
xor
and
inc
fadd
mov
inc
inc
mov
nop
pusha
mov
add
push
enter
int
call
in
mov
push
pop
and
mov
inc
ja
mov
add
xor
inc
pop
xor
pop
mov
leave
rcr
cs
call
mov
dec
xchg
or
sub
dec
add
lds
sbb
pop
je
rcr
fs
leave
(bad)
mov
(bad)
cmp
jl
sub
dec
xchg
or
(bad)
fwait
in
das
sbb
setnp
cmp
xchg
dec
rol
and
sbb
xchg
mov
jmp
pop
imul
fwait
loope
sbb
mov
or
jge
xchg
sub
fiadd
pop
xchg
cmp
or
call
fwait
jae
cmp
mov
mov
dec
cs
fcomp
push
adc
jns
test
stc
mov
dec
outs
fs
pop
or
inc
cs
cmp
xchg
pop
call
pop
enter
rcl
xchg
test
outs
pushf
and
mov
mov
inc
shl
and
cmps
xchg
outs
sti
mov
ret
push
(bad)
dec
inc
out
mov
test
outs
call
push
outs
mov
jmp
test
fs
xor
pushf
and
pop
jo
nop
jge
mov
or
xchg
rcr
xchg
ror
fld
mov
fdivrp
add
and
loopne
jae
stos
xchg
ret
dec
pop
cwde
ins
call
inc
add
pop
inc
xor
and
test
sbb
fs
nop
sub
sbb
loopne
nop
mov
mov
sahf
adc
ss
enter
nop
add
fs
rsqrtps
mov
sbb
jne
sbb
pop
pop
xchg
or
jmp
sbb
or
ss
xchg
pop
xchg
push
mov
adc
test
test
jecxz
and
xchg
test
(bad)
jecxz
ins
comiss
pop
int3
sub
in
mov
mov
dec
push
inc
stos
add
movlps
inc
mov
or
inc
adc
jnp
jecxz
and
pop
adc
push
mov
sbb
and
popa
xchg
pusha
cmp
stos
ret
test
adc
push
ret
push
and
dec
xor
adc
add
push
enter
bound
call
popf
cmc
in
outs
nop
xchg
shl
mov
push
sub
cwde
nop
push
xchg
pop
adc
lds
xchg
psubd
push
xchg
aad
je
fnstenv
add
mov
mov
xchg
push
adc
xchg
push
adc
mov
mov
cmp
and
pop
ss
in
mov
cmp
call
in
call
adc
das
cmps
cli
out
or
daa
(bad)
call
movsx
and
adc
call
xor
clc
retf
in
xchg
sub
lock
call
and
cmp
(bad)
and
dec
call
pop
mov
andps
movs
pop
call
in
xchg
das
pusha
call
push
stc
repnz
call
je
gs
pop
sub
cmp
call
mov
inc
sbb
cmp
sub
es
sbb
adc
retf
retf
movs
rcl
push
in
fnstenv
jl
unpckhps
ret
les
xchg
retf
enter
retf
fld
mov
movs
jb
jle
jae
jb
pop
sub
pop
call
push
in
inc
aam
movs
jb
pop
lock
es
sub
adc
add
add
leave
or
movs
mov
or
loope
adc
cs
sbb
cs
dec
in
mov
stos
and
push
mov
sub
cs
dec
mov
jle
jae
in
mov
cs
inc
gs
dec
mov
dec
xor
push
adc
and
or
pop
add
inc
inc
inc
or
push
or
push
cs
jb
inc
inc
cmp
enter
jo
xor
sahf
cmp
test
fistp
enter
je
data16
js
imul
data16
sbb
xor
dec
call
or
cmp
inc
and
cli
(bad)
cmp
call
call
sub
cmp
mov
cli
mov
movs
mov
mov
(bad)
adc
adc
cmps
rcr
je
cmps
mov
cmps
pop
add
jae
frstor
or
adc
add
call
or
test
and
or
pusha
out
push
mov
inc
pop
pop
mov
aaa
call
inc
popf
in
mov
pop
out
inc
sbb
mov
add
or
out
inc
call
dec
(bad)
lods
pop
pop
aam
dec
aaa
(bad)
dec
pop
aaa
and
add
sub
sbb
push
inc
call
stos
sbb
adc
or
adc
push
mov
cld
dec
es
scas
sbb
pop
call
or
xchg
sbb
cmp
inc
imul
popa
fsubrp
add
pop
adc
jp
ret
push
mov
xchg
and
mov
popf
dec
push
pop
adc
mov
mov
call
mov
pop
inc
add
adc
and
adc
cmp
inc
mov
sbb
adc
adc
ja
push
stc
mov
mov
sub
or
push
pop
push
or
pop
or
jno
pusha
enter
push
or
lea
xor
adc
lea
mov
add
pusha
adc
dec
addr16
cmp
inc
adc
nop
movs
adc
inc
xchg
or
and
test
xor
ret
lea
adc
push
stos
cmps
cwde
sub
mov
mov
outs
push
test
cmc
mov
sub
push
mov
fld1
inc
cmp
push
push
sbb
test
ror
jg
fsubr
xchg
push
cmp
mov
xor
(bad)
je
ja
push
in
push
pop
or
in
pop
cmps
xchg
push
cmp
mov
push
cmp
and
dec
jmp
cs
pop
or
sub
das
push
jb
fwait
and
xchg
mov
sub
xchg
sub
test
push
xor
push
call
outs
call
outs
or
push
stos
dec
push
ret
and
xor
cli
adc
push
movs
rol
or
mov
cmp
movs
add
sahf
xor
sub
jp
push
mov
xchg
out
xor
push
adc
movs
push
add
adc
dec
push
call
fs
jle
push
mov
push
push
mov
push
sub
rcl
xchg
push
cwde
rol
add
sub
xor
push
and
in
mov
push
sbb
dec
mov
lods
inc
mov
xchg
fwait
shl
push
cwde
or
mov
or
out
inc
mov
adc
or
pop
xchg
adc
jns
aaa
adc
fucomp
pushf
cmp
ja
inc
inc
jnp
jmp
or
adc
adc
xchg
rcr
test
xor
jge
mov
xchg
jmp
rcr
jnp
inc
xchg
clc
xor
lods
push
sbb
gs
test
or
jnp
xchg
ja
rcr
push
loopne
nop
es
je
xchg
ret
shl
ja
mov
sahf
adc
mov
mov
pop
xor
cwde
call
or
xchg
adc
mov
mov
or
mov
or
mov
pop
mov
ins
pop
call
xlat
add
test
rol
loopne
xor
xor
mov
jp
or
xchg
or
fs
and
inc
xchg
or
out
sbb
imul
shr
int
inc
inc
add
mov
xor
in
(bad)
fldenv
xchg
(bad)
jae
neg
call
fidiv
lea
call
in
test
sar
call
mov
sub
mov
ja
fadd
pop
rol
(bad)
ja
pop
rcr
retf
sbb
loope
cmps
sub
and
inc
sbb
popa
pop
mov
xchg
pop
inc
cmp
fadd
mov
sbb
pop
nop
cmp
jl
ins
inc
cs
in
push
ja
jmp
or
add
mov
xor
and
bound
and
aam
mov
bound
sbb
ja
jmp
arpl
sbb
shl
cdq
or
add
fadd
mov
outs
mov
cmp
jb
mov
cmp
add
mov
inc
call
push
test
mov
mov
daa
ror
test
lods
inc
add
(bad)
out
adc
cmovge
sbb
and
mov
cmp
jns
sbb
ret
add
call
cmps
icebp
sbb
fisttp
inc
jp
inc
adc
or
cmps
sub
adc
ror
add
jle
loopne
sbb
xchg
jp
cwde
inc
fwait
jp
adc
adc
lea
cmps
inc
push
inc
and
add
das
xor
cmps
and
mov
cmps
xor
mov
enter
adc
adc
ja
adc
adc
scas
pop
ror
push
shl
push
or
pushf
pop
cmp
mov
rol
pop
mov
dec
push
ror
pop
jmp
dec
pusha
pop
xchg
adc
mov
pushf
push
movs
mov
rol
nop
popa
dec
or
pop
shr
pop
shl
jo
rcr
out
pop
lods
pop
add
mov
pop
les
xor
out
into
and
push
pop
in
push
or
xchg
mov
mov
jecxz
daa
sub
mov
cmp
adc
add
inc
jmp
sbb
adc
fldenv
mov
inc
inc
sub
inc
movs
xchg
inc
inc
cmps
sti
xor
pop
shl
dec
xor
sub
shl
push
imul
pop
and
xchg
inc
cs
lods
pop
test
out
mov
lock
fs
xor
add
dec
inc
inc
xor
xor
rol
adc
nop
xor
xor
mov
xchg
shl
add
xor
dec
adc
xor
sahf
inc
aam
add
sbb
sahf
sbb
push
inc
aam
add
test
add
sbb
jmp
ins
pop
mov
fistp
sbb
add
nop
sub
mov
fisubr
call
push
xor
fbld
push
mov
out
call
jnp
or
mov
fdivr
sahf
jno
out
pop
pop
fst
ja
dec
cmps
jne
or
dec
jne
loope
xor
ins
xchg
js
hlt
cld
sbb
je
add
add
ja
jmp
cmp
mov
aam
jne
fistp
adc
rcr
arpl
pop
ss
push
rol
inc
imul
loope
add
sbb
sub
movs
imul
push
sti
fwait
repz
adc
jnp
adc
jo
repnz
xlat
xor
push
jnp
fwait
or
dec
xor
out
jb
in
mov
adc
xchg
fwait
jge
cmp
les
adc
jb
ins
adc
movs
ficom
sbb
mov
outs
mov
imul
mov
fbld
mov
dec
pop
lds
ret
xchg
add
add
mov
and
cmp
or
dec
ja
(bad)
mov
jmp
mov
(bad)
movs
repz
enter
retf
mov
add
and
fcomi
inc
nop
push
xlat
mov
mov
or
mov
test
mov
cmp
cdq
add
jo
inc
push
movs
adc
adc
cdq
adc
outs
nop
jo
mov
loope
(bad)
jmp
push
(bad)
daa
imul
mov
or
jb
or
mov
adc
fwait
sbb
and
iret
and
lahf
out
cmp
add
and
or
sbb
repz
repz
mov
repz
bound
sub
or
out
ds
sbb
aam
push
iret
repz
mov
pushf
pop
push
lods
push
mov
idiv
push
inc
push
push
sub
sahf
cmps
jge
push
nop
movs
push
push
xchg
jl
neg
cmp
push
sahf
out
sahf
push
sbb
repz
repnz
fmulp
mov
test
mov
ret
into
sbb
sahf
neg
repnz
loop
cmp
sar
out
aam
mov
sahf
mov
sbb
jns
out
pushf
scas
retf
repz
cld
or
and
pop
cmp
repz
jb
nop
sahf
repz
rep
mov
fsubrp
cmp
jnp
dec
(bad)
ss
inc
push
sar
outs
jle
sahf
sahf
div
sti
mov
daa
rol
loop
clc
adc
push
cmp
aaa
je
fs
push
fimul
adc
daa
pop
mov
ror
repz
jbe
add
mov
jbe
push
cwde
cmps
ins
mov
iret
jecxz
xor
jns
dec
xchg
push
jbe
push
scas
jo
adc
test
aas
or
push
mov
cmp
add
(bad)
aam
adc
jne
sub
adc
jle
mov
mov
sub
mov
or
dec
mov
je
pop
xor
outs
lods
add
ja
add
adc
mov
push
out
es
adc
xor
in
daa
xor
add
dec
add
fcom
outs
ss
popa
and
or
retf
sub
in
mov
popa
xor
mov
mov
es
dec
cmp
lahf
or
das
pop
call
fcom
mov
imul
jne
inc
add
outs
inc
sub
dec
and
adc
shl
ret
push
pcmpeqd
and
ror
add
add
dec
add
vblendpd
stos
outs
mov
sbb
pop
data16
add
jo
xor
and
das
jg
ret
and
lock
aas
test
add
inc
push
outs
cs
call
push
inc
pop
inc
outs
outs
ror
xor
dec
ror
lods
pop
mov
cmps
sbb
mov
fwait
aam
dec
and
pop
jg
hlt
dec
arpl
jae
pop
dec
jae
inc
jg
test
jne
outs
je
jae
inc
js
test
popa
xor
je
outs
(bad)
(bad)
jnp
inc
xor
sub
sub
sub
inc
inc
xor
sub
push
xor
xor
jge
xor
xor
inc
xor
lahf
std
fild
sub
sub
cmp
xor
clc
inc
push
cmovnp
inc
xor
mov
add
lar
sub
sets
fnstcw
jo
mov
sub
or
cmp
xor
push
xor
or
pop
outs
call
push
and
inc
aaa
adc
xor
inc
pop
inc
and
rol
push
jne
mov
arpl
xor
jo
loope
dec
and
cmp
ss
pushf
xor
or
and
dec
dec
outs
mov
inc
cmps
push
and
test
xchg
rcr
in
scas
data16
inc
push
push
dec
hlt
sbb
popa
adc
push
call
push
repz
out
inc
out
adc
push
sub
out
cmp
in
mov
lods
fnstcw
sahf
add
movd
cmp
ret
test
adc
cmp
retf
cs
jo
outs
xor
test
pop
mov
inc
je
push
push
mov
sub
xchg
inc
cmp
push
pop
mov
sbb
xchg
fwait
fwait
mov
popf
push
mov
jp
fld
rol
sub
neg
std
inc
arpl
ins
mov
icebp
fsubp
inc
xchg
and
outs
ret
(bad)
rcl
retf
les
retf
dec
inc
xor
arpl
jle
or
pop
(bad)
pusha
mov
pop
cdq
cmps
sbb
inc
sbb
inc
and
pop
int
div
pusha
push
and
dec
popa
jae
and
mov
push
imul
jmp
jne
xchg
or
call
je
lods
popf
fisubr
dec
fs
imul
push
cdq
push
push
(bad)
jo
(bad)
pusha
sub
repz
adc
xor
dec
movs
jmp
imul
jae
outs
push
pop
arpl
inc
cs
mov
push
push
add
(bad)
ja
(bad)
cmps
les
shl
fsub
add
popa
imul
test
dec
(bad)
cmc
or
fsubr
sbb
fdiv
outs
pop
add
(bad)
mov
xchg
adc
rcl
dec
repnz
out
nop
inc
rol
xor
test
dec
ror
aaa
in
aaa
sbb
and
xchg
pushf
add
sbb
push
sbb
add
addr16
adc
add
sbb
xchg
sbb
pop
(bad)
add
cmps
fadd
cmp
xor
push
or
jnp
out
or
add
mov
das
stos
and
sahf
push
adc
xchg
adc
int
jns
push
sbb
sbb
(bad)
sbb
sbb
std
sbb
and
push
xlat
imul
cmp
js
imul
push
jns
stc
jp
push
cld
popa
pushf
out
fdivr
mov
cmps
xor
inc
dec
sub
mov
pop
aad
pop
mov
and
mov
es
arpl
test
xchg
cwde
add
aaa
push
adc
ja
push
lds
push
dec
sbb
or
iret
lods
ret
(bad)
adc
push
cld
sahf
out
call
ins
pushf
out
mov
repz
xor
mov
cmp
repz
mov
cmp
ins
push
pop
jns
out
push
push
dec
dec
inc
iret
repz
out
cmp
xor
sub
iret
repz
and
sbb
repz
repz
or
add
jns
iret
add
or
hlt
call
(bad)
enter
jl
out
jo
xor
lock
repz
ror
mov
ins
inc
out
cmp
sub
adc
cld
push
sahf
out
sahf
fcom
les
jns
sub
aam
mov
xchg
jo
sbb
add
sahf
mul
call
cwde
jl
pop
dec
(bad)
iret
inc
gs
or
pop
jne
les
pop
imul
pushf
mov
xchg
mov
mov
scas
and
inc
dec
adc
jnp
mov
sub
inc
inc
add
adc
or
fld
cmp
daa
outs
cdq
js
idiv
mov
adc
sbb
pusha
scas
pop
jecxz
add
sbb
push
shl
mov
pop
and
mov
dec
xor
bound
sbb
lds
and
daa
xor
bound
pushf
dec
data16
push
shl
and
push
(bad)
jbe
adc
(bad)
jmp
jnp
js
shr
mov
pushf
add
(bad)
jmp
sub
inc
mov
dec
ret
jns
rcl
pop
push
out
and
sbb
push
out
push
inc
push
xor
xchg
rol
inc
mov
jnp
out
jnp
je
jae
ins
add
pop
stc
sbb
xor
mov
push
je
imul
inc
pop
push
fidiv
arpl
dec
outs
mov
jo
push
adc
xor
jp
cs
bound
jecxz
and
jnp
push
pop
daa
push
push
push
and
fld
iret
mov
jl
add
pop
ja
lahf
add
add
mov
loopne
xchg
mov
ds
and
mov
add
enter
(bad)
xchg
inc
sub
aas
in
dec
enter
push
cmp
dec
es
cmp
ret
test
sete
int3
add
jmp
add
lds
jecxz
rcr
fld
in
cmp
ss
call
setl
retf
(bad)
fild
mov
mov
or
push
popf
jo
push
jl
in
push
dec
push
sbb
aas
sbb
and
sbb
mov
and
(bad)
aaa
mov
and
mov
jecxz
ror
jg
enter
cs
leave
pop
outs
setno
rol
out
cmp
adc
jp
ins
adc
scas
fisttp
fs
loopne
dec
mov
movs
dec
adc
jnp
xor
loopne
daa
(bad)
lock
enter
imul
leave
sbb
mov
xor
pop
pop
test
push
dec
pop
add
sbb
inc
inc
les
dec
imul
adc
ltr
sub
call
scas
pop
push
and
and
inc
push
xchg
call
jae
outs
ja
xor
retf
gs
jle
jb
sub
add
fidiv
ja
out
daa
movs
and
and
add
test
rol
outs
inc
in
sar
mov
jmp
pusha
add
sbb
bound
dec
or
and
mov
ss
inc
add
ins
jo
dec
pop
es
shr
push
add
out
mov
xchg
add
push
(bad)
mov
cli
add
jae
movs
loopne
outs
push
jae
push
adc
dec
outs
popa
sbb
push
add
jb
inc
mov
in
pop
sbb
out
adc
inc
adc
cmp
push
inc
sbb
mov
mov
add
clc
push
jno
shl
add
sub
xchg
dec
(bad)
push
sbb
push
mov
pop
das
adc
or
or
sbb
mov
cmp
push
jo
jb
jns
xchg
mul
imul
retf
rol
push
das
mov
mov
lods
cmps
xor
push
sbb
sbb
xchg
outs
sbb
mov
mov
adc
jnp
jne
jge
and
(bad)
pusha
inc
test
inc
not
push
inc
imul
jge
xchg
push
jecxz
retf
xor
adc
(bad)
ja
adc
dec
inc
add
(bad)
arpl
push
jnp
inc
jmp
inc
or
inc
stos
fcmovnbe
fnop
sub
addr16
push
dec
push
es
mov
push
scas
xchg
dec
inc
ret
shl
cmps
dec
jno
mov
jmp
nop
pop
sub
fs
int3
pop
je
lahf
xor
pop
retf
dec
icebp
cdq
mov
push
inc
cs
gs
push
adc
jle
jecxz
sbb
and
push
call
pop
adc
ror
or
lahf
outs
xor
or
add
mov
inc
rol
shl
outs
(bad)
mov
jne
sub
scas
inc
add
stc
add
add
call
inc
bound
pop
mov
push
dec
dec
dec
pop
add
pavgw
arpl
xor
ja
mov
retf
inc
push
outs
sbb
retf
cmp
xchg
lock
and
rol
push
frstor
push
mov
movs
cmp
mov
mov
lock
mov
mov
sbb
ins
imul
jb
mov
loope
pop
outs
adc
arpl
inc
jmp
enter
(bad)
sbb
fidiv
dec
inc
jb
sbb
aas
inc
cmc
sbb
shr
inc
jnp
push
xor
inc
stos
enter
imul
xchg
or
mov
sub
(bad)
dec
add
jo
sbb
outs
inc
movs
rcl
pop
mov
fs
xor
sub
daa
dec
ds
xor
cmps
aam
pusha
push
jo
jno
mov
loopne
arpl
dec
xchg
mov
in
jmp
or
jmp
dec
imul
add
mov
int
sbb
retf
xchg
into
out
outs
cli
mov
fwait
inc
cmps
add
push
mov
jo
jo
imul
push
push
test
sub
imul
jns
bound
clc
add
inc
jae
adc
sbb
inc
jmp
push
je
ja
add
(bad)
jno
outs
xor
and
add
xor
xchg
sub
out
jno
rol
out
into
ins
retf
pop
mov
sbb
add
cmp
cmp
push
dec
(bad)
xor
sbb
push
sahf
ret
fbld
retf
fbld
ds
rcl
ficomp
mov
push
popa
sbb
scas
std
fwait
xchg
and
push
(bad)
and
inc
cwde
ins
adc
jecxz
add
ja
push
pop
in
mov
sbb
jae
lock
and
mov
add
pop
pop
push
ins
push
sbb
xchg
pusha
idiv
sub
iret
icebp
pop
and
dec
xchg
js
add
and
add
inc
mov
mov
add
add
xor
pop
gs
cmp
lods
dec
cmp
inc
xor
sti
fsubr
push
or
push
ret
int3
jo
pusha
jmp
pop
pushf
xlat
or
hlt
(bad)
mov
rcr
push
add
adc
daa
adc
add
test
gs
adc
push
mov
and
daa
sbb
jns
xlat
mov
or
repz
add
out
lock
repz
mov
jns
rep
test
pop
mov
sahf
cwde
xchg
nop
mov
jo
pusha
push
pop
push
repz
repz
cmp
and
shr
sbb
cld
in
lock
loopne
fmul
repz
ror
sar
cmp
je
push
cmp
cmp
repz
and
adc
imul
in
hlt
in
lahf
out
sahf
in
int3
mov
sahf
mul
xchg
push
mov
js
push
iret
repz
and
or
adc
popf
jmp
lea
or
add
add
push
or
push
(bad)
cmp
mul
and
sahf
call
and
out
idiv
mov
push
nop
ins
and
sbb
and
and
test
inc
adc
idiv
adc
fild
pop
jg
fs
inc
dec
pop
mov
cmps
mov
and
sbb
in
pop
or
daa
mov
(bad)
dec
and
fstp
jne
shr
sub
push
or
xor
out
adc
pop
add
in
mov
sbb
cmp
or
inc
mov
push
popf
fiadd
sbb
cmp
ins
inc
fisttp
xor
popa
cld
(bad)
xchg
cmp
ins
cs
and
(bad)
call
pusha
lahf
xor
xor
ds
add
mov
loopne
pop
mov
xor
jae
jno
imul
lods
popf
ror
inc
jnp
mov
sbb
cmp
aaa
add
dec
sub
and
mov
or
adc
rol
jae
xchg
mov
popa
ins
into
dec
sub
ins
sar
sti
inc
loopne
pusha
ss
sbb
in
push
sbb
inc
add
inc
ins
jnp
inc
pop
pop
adc
(bad)
(bad)
jg
fcmovbe
add
les
(bad)
xor
sbb
bound
loopne
sbb
das
xor
xor
xor
(bad)
(bad)
(bad)
push
or
sub
xor
xor
movs
xor
xor
xor
xor
xor
xor
xor
(bad)
(bad)
(bad)
push
xor
xor
xor
dec
xor
xchg
shl
inc
ss
out
(bad)
push
repnz
es
dec
aaa
push
aaa
mov
iret
aaa
call
aaa
adc
(bad)
(bad)
(bad)
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
jmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
(bad)
clc
cmp
cmp
sub
ret
add
push
lock
idiv
(bad)
jg
cmp
xchg
add
adc
and
dec
xor
xor
pop
cld
push
outs
xor
popf
xor
xor
(bad)
xor
xor
xor
xor
clc
(bad)
jmp
mov
xor
xor
xor
xor
out
xor
push
xor
jge
mov
xor
xor
fidiv
scas
xor
(bad)
inc
xor
fnsave
out
xor
(bad)
(bad)
push
push
ss
cdq
ss
ss
ss
aaa
sbb
jno
mov
aaa
loopne
xchg
mov
out
cmp
test
inc
cmp
loopne
(bad)
(bad)
(bad)
cmp
cmp
cmp
or
cmp
cmp
cmp
push
cmp
jl
cmp
mov
cmp
cmp
cmp
push
adc
cmp
cmp
cmp
cmp
pop
xor
imul
cmp
cmp
fdivrp
(bad)
(bad)
jg
cmp
jo
test
mov
aas
adc
xor
inc
aas
popa
aas
cmp
aas
mov
les
into
aas
out
jmp
repz
and
xor
xor
xor
xor
jl
mov
mov
(bad)
(bad)
(bad)
push
std
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
cmc
(bad)
mov
inc
inc
xor
pop
xor
jo
xchg
xor
xor
(bad)
frstor
xor
xor
xor
xor
xor
xor
fcomip
stos
xor
aaa
ss
clc
loop
cmp
cmp
cmp
mov
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
mov
xchg
cmp
cmp
cmp
sbb
sar
xchg
aas
inc
aas
pop
aas
ja
pusha
das
jle
inc
pop
push
or
cmp
pop
xor
jmp
jmp
push
xor
xor
xor
xor
xor
xor
xor
pop
cld
pop
or
cmps
push
xor
xor
call
push
hlt
xor
xor
xor
test
mov
mov
nop
xor
out
jmp
lock
xor
scas
clc
xor
cmp
(bad)
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
in
in
cmp
cmp
std
cmp
cmp
mov
call
das
mov
cmp
ds
aas
jmp
dec
xor
mov
ss
ss
xchg
cmp
jmp
(bad)
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
and
ja
call
cmp
mov
aas
push
mov
cmp
aas
sar
aas
in
out
std
mov
push
movs
xor
cld
add
xor
xor
xor
fisubr
xor
std
(bad)
call
loop
xor
xor
xor
mov
xor
xor
(bad)
inc
scas
std
xor
cmps
data16
ss
add
or
(bad)
jg
cmc
aaa
and
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
imul
xchg
push
xchg
mov
xchg
aaa
mov
aaa
xor
cmp
xchg
outs
cmp
(bad)
jmp
cmp
mov
cmp
cmp
sbb
push
cmp
(bad)
aas
(bad)
(bad)
inc
cmp
dec
cmp
popa
cmp
cmp
cmp
call
(bad)
pop
push
stos
cmp
cmp
or
cmp
cmp
cmp
cmp
cmp
sub
mov
adc
sub
xor
cmp
(bad)
dec
dec
cmp
push
cmp
ins
cmp
js
cmp
mov
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
out
dec
cmp
inc
cmp
pop
cmp
mov
adc
cmp
jp
jg
cwde
ds
ds
ds
out
ds
das
aas
or
je
jge
mov
movs
aas
stos
aas
mov
mov
hlt
cli
out
rcl
xor
call
sahf
xchg
les
fidiv
in
aas
std
(bad)
or
adc
and
sub
cmp
jb
mov
xor
xor
xor
cmc
push
call
xor
xor
mov
jl
cmps
xor
xor
outs
sar
jno
xchg
xor
xor
xor
cmps
push
xor
inc
cmps
xor
cmps
xor
xor
aaa
fwait
sahf
cmps
sbb
sbb
scas
cmp
or
cmp
fdivr
aaa
cmp
xchg
jo
mov
mov
(bad)
jg
fimul
nop
cmp
cmp
cmp
pop
xor
mov
jle
push
or
(bad)
(bad)
mov
cmp
bound
data16
push
outs
aaa
jb
jbe
xchg
(bad)
(bad)
(bad)
fbstp
js
jge
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
jle
dec
loopne
jbe
cmp
sbb
stos
dec
pop
(bad)
ds
xor
xchg
aas
push
mov
das
clc
inc
xor
(bad)
mov
xor
xor
xor
(bad)
push
ss
fiadd
aaa
ret
shl
aaa
jmp
repnz
or
cmp
pop
cmp
(bad)
(bad)
jg
jge
mov
cmp
cmp
jbe
xchg
cmp
cmp
cmp
(bad)
push
mov
and
(bad)
cmp
cmp
fdivr
push
aas
jne
je
jbe
mov
or
mov
xlat
xlat
push
fwait
xor
xor
dec
or
aaa
mov
xor
xor
div
pop
xor
hlt
call
xor
es
dec
ss
outs
not
stos
jg
push
enter
in
and
cmp
cmp
cmp
mov
pop
mov
sbb
cmp
das
inc
add
cmp
jne
test
mov
jg
pop
mov
cmp
dec
cmp
cmp
(bad)
call
jae
aam
fnstsw
jecxz
imul
mov
cmp
cmp
pop
sar
dec
dec
cmp
mov
(bad)
call
pop
and
push
cmp
cmps
ds
ds
ret
idiv
add
sbb
addr16
loope
rol
jg
popa
cld
xchg
xor
xor
pop
xor
xor
(bad)
(bad)
dec
cmp
or
xor
xor
xor
xor
xor
mov
xor
scas
inc
push
call
ds
dec
aaa
pop
aaa
js
mov
stos
inc
cld
pop
cli
fidiv
out
in
aaa
cli
aaa
mov
cmp
ret
(bad)
jmp
cdq
cmp
cmp
cmp
cmp
cmp
cmp
jmp
inc
cmp
cmp
cmp
adc
jbe
cmp
cmp
(bad)
jmp
movs
cmp
adc
and
pusha
aas
cmp
aas
fdivr
loop
out
out
loop
push
sub
xor
dec
push
adc
xor
jae
cmp
jne
jg
xchg
xor
xor
xor
push
jge
sub
xor
jmp
jbe
loopne
adc
adc
(bad)
(bad)
(bad)
call
xor
sub
sub
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
fwait
(bad)
cmp
push
out
xor
nop
jo
xor
into
cmp
inc
xor
xor
xor
jl
jmp
push
dec
lods
xor
int3
push
or
pop
mov
xor
xor
aaa
or
xor
cmp
sub
sub
xor
cmp
inc
cs
(bad)
inc
cmp
dec
cmp
push
rcr
cmp
dec
adc
js
jl
cmp
cmp
push
mov
push
mov
enter
(bad)
push
mov
cmp
cmp
mov
cmp
inc
cli
call
hlt
dec
cld
push
add
or
adc
lock
mov
stos
sbb
and
and
sub
sub
xor
jg
add
cmp
inc
cmp
cmp
pop
aas
sar
cmp
cmp
ins
cmp
je
jl
cmp
fadd
nop
xchg
cwde
mov
mov
sub
xor
inc
mov
push
aas
push
jmp
aas
xchg
aas
cwde
aas
lods
aas
mov
shr
aas
fdivr
loopne
clc
lahf
jle
cmp
push
or
xor
xchg
xor
push
cwde
xor
xor
inc
xor
xor
cwde
push
cwde
lock
mov
xor
xor
xor
cmps
cmp
mov
xor
mov
fcomp
xor
and
add
aaa
fld
or
or
(bad)
ss
jmp
shl
aam
fdiv
fdiv
loopne
in
call
ss
ss
ss
dec
sbb
aaa
or
or
adc
adc
(bad)
(bad)
pop
ret
aaa
and
and
sub
sub
xor
cmp
cmp
inc
aaa
inc
aaa
aas
cli
jmp
push
aaa
pop
aaa
pop
aaa
pusha
aaa
jo
je
jl
xor
les
loope
aaa
mov
nop
aaa
xchg
aaa
cwde
into
mov
and
sub
mov
aaa
enter
mov
int3
aaa
shl
aam
fdiv
fcomp
in
pop
mov
pop
out
aaa
hlt
xor
aaa
hlt
add
or
adc
adc
sbb
cmp
sbb
cmp
mov
cli
mov
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
aad
jl
test
mov
mov
or
jmp
cmp
mov
cmp
inc
mov
or
jmp
(bad)
out
xchg
xchg
jge
or
or
repnz
mov
mov
jmp
jl
(bad)
push
and
mov
outs
add
(bad)
out
int
daa
or
int
imul
sbb
ds
add
add
mov
xor
sub
add
movs
add
mov
daa
out
jne
mov
test
(bad)
out
adc
imul
int3
sub
sub
and
sahf
out
and
dec
mov
call
sahf
add
push
repnz
out
sbb
loope
adc
add
pop
dec
and
dec
ret
shr
rcr
dec
push
or
add
loope
sub
and
mov
push
sub
fadd
rep
je
sbb
ror
and
push
and
test
movs
pop
out
test
enter
dec
sahf
(bad)
icebp
and
je
enter
pop
nop
inc
mov
in
push
sub
pop
sbb
jne
push
mov
je
push
cmp
add
inc
nop
pop
les
mov
mov
push
loopne
adc
xchg
rol
ds
xor
das
inc
xor
adc
adc
push
lea
ins
in
aas
cwde
jp
cld
push
and
pop
or
adc
pushf
sbb
push
cmp
gs
add
jne
aam
and
adc
xor
adc
jns
xlat
and
pop
or
inc
mov
cmp
add
sbb
sbb
movs
imul
clc
cmp
je
cmp
outs
int3
adc
sub
inc
(bad)
jp
add
or
xor
sub
outs
and
sar
or
jb
lea
call
adc
lea
jmp
add
cmp
out
inc
lahf
xchg
fild
mov
add
dec
mov
(bad)
adc
cmps
push
or
or
jne
pop
outs
push
push
add
xchg
cld
or
mov
jge
inc
lea
push
push
pop
jb
cmp
fsub
rcl
sub
clc
sti
xchg
xor
mov
call
inc
push
push
call
hlt
retf
xor
stos
add
pop
gs
mov
add
enter
pop
add
imul
lahf
fidiv
inc
cmp
and
call
adc
(bad)
and
jecxz
repnz
enter
push
ins
dec
rcr
jge
in
or
mov
mov
add
shr
xor
and
call
mov
out
xor
push
(bad)
mov
rcr
jmp
retf
mov
dec
(bad)
push
loopne
movs
scas
cli
sti
mov
or
pop
push
adc
lods
lods
xor
cs
push
loop
sbb
cld
adc
add
xor
jmp
ret
shr
push
add
fsubr
add
jo
jl
sub
xchg
add
es
xchg
mov
lods
inc
ja
dec
cld
sub
or
jge
fsub
and
xchg
or
xchg
jo
add
xor
xchg
mov
add
push
xchg
mov
fcomp
cmp
sbb
call
aad
or
jmp
add
jno
lea
out
ret
push
nop
dec
fucomi
pop
pop
add
jbe
jge
xor
inc
icebp
fld
hlt
push
addr16
das
add
pop
pop
or
sbb
test
mov
or
imul
rcl
add
outs
aaa
dec
ja
jnp
xchg
mov
(bad)
and
fsubr
pusha
xor
sub
sar
push
mov
or
retf
push
nop
ror
pop
mov
inc
inc
ret
adc
and
inc
pop
mov
or
dec
clc
push
cmp
inc
mov
push
push
jne
mov
cmp
adc
imul
ins
repz
mov
xor
inc
cmc
xchg
pop
push
push
cmp
sbb
hlt
sub
jnp
stos
fs
sbb
push
push
aaa
shl
mov
inc
or
push
adc
dec
dec
mov
push
repnz
cmp
or
fcomip
push
outs
or
mov
cmps
jl
mov
or
add
test
mov
cmp
mov
int3
mov
in
cmp
push
ja
out
test
xchg
repz
jbe
mov
sub
jl
pop
xor
pop
in
add
pop
jge
mov
add
or
push
push
and
xor
add
lods
sar
jno
cmps
xchg
(bad)
mov
lods
aam
mov
xlat
call
add
jnp
sbb
pusha
mov
mov
loop
aas
adc
inc
fst
push
ja
add
sbb
cmp
and
add
movs
adc
or
inc
push
sar
dec
jecxz
push
in
(bad)
cmps
or
imul
add
add
imul
add
xchg
sbb
inc
jns
and
xchg
pushf
jns
loope
sub
dec
mov
rcl
and
push
add
pop
iret
pop
inc
sub
push
adc
inc
and
sbb
iret
inc
and
and
iret
sub
iret
add
int3
iret
pop
xlat
test
pusha
or
jle
iret
ror
inc
jo
lods
mov
ret
and
iret
xor
mov
mov
cmp
neg
jae
add
or
inc
or
push
inc
imul
inc
iret
shl
inc
aad
pop
enter
in
add
and
mov
push
and
repnz
push
(bad)
adc
inc
mov
pop
push
mov
add
push
(bad)
stos
adc
push
fsub
cmp
aam
iret
ss
out
mov
push
retf
sub
adc
hlt
pop
ret
in
ds
or
out
adc
or
movs
mov
mov
test
shr
push
or
mov
and
push
aad
retf
mov
dec
int
mov
push
sbb
pop
xchg
rol
shl
pop
(bad)
mov
icebp
fcom
xchg
icebp
daa
xor
sbb
adc
lds
mov
retf
scas
outs
ins
popa
or
add
or
pop
and
xchg
pop
pop
add
enter
retf
inc
dec
pop
pusha
or
or
jecxz
inc
sbb
call
das
fbld
adc
dec
or
xchg
(bad)
out
mov
cmps
loopne
add
adc
sbb
shl
in
call
mov
inc
stc
(bad)
outs
fcom
dec
mov
or
retf
and
add
mov
jl
nop
or
jp
imul
out
cmp
leave
jmp
pop
call
dec
mov
sahf
mov
jmp
pop
shl
dec
jmp
mov
out
mov
xchg
es
and
sub
or
(bad)
mov
inc
movs
dec
inc
mov
jnp
push
pop
xor
push
add
sbb
popf
aaa
and
push
and
bound
or
shr
push
push
or
mov
add
sbb
inc
sbb
adc
fwait
sub
test
pop
pop
inc
xor
sbb
xor
imul
adc
sbb
adc
inc
and
and
mov
inc
addr16
and
das
mov
or
sbb
cmp
das
and
adc
push
mov
(bad)
dec
inc
out
mov
add
mov
ja
mov
xor
jnp
add
cmps
add
dec
mov
mov
push
adc
and
ds
xor
push
pusha
pop
inc
xchg
sub
mov
sahf
mov
pop
push
rcr
int3
test
adc
mov
mov
mov
mov
mov
ins
retf
dec
fs
mov
xchg
xor
cmps
cs
ja
and
pop
xchg
and
iret
data16
nop
nop
push
adc
es
push
hlt
xchg
xchg
jne
mov
push
dec
pop
out
out
xchg
fs
pop
push
pop
out
sahf
dec
inc
cmp
pop
adc
dec
xchg
jmp
mov
movs
mov
xchg
inc
pop
int3
and
fcmovnu
dec
jo
and
pop
nop
xor
call
push
jl
ror
pop
xchg
cmps
lods
dec
push
xchg
cmp
fadd
loopne
retf
fdivp
cmp
clc
add
push
inc
add
repz
push
inc
pop
pop
sub
cmps
xchg
pop
in
pop
add
xlat
mov
jns
sbb
adc
cmps
and
pop
sbb
cmp
push
jb
inc
inc
jns
enter
jns
sbb
hlt
addr16
inc
or
inc
inc
daa
in
jns
lock
xchg
push
mov
inc
popa
ror
jo
pusha
mov
pop
or
sub
jb
hlt
push
hlt
test
test
push
cmps
ret
push
and
nop
mov
add
sub
sbb
sub
inc
call
push
sub
sub
xor
sub
sub
sub
sub
xor
sub
add
sub
or
sub
sub
xor
sub
sub
push
enter
sub
sub
sub
add
sub
sub
sub
scas
mov
dec
dec
neg
jmp
sbb
add
sub
mov
repz
cs
mov
pop
push
lock
adc
pop
nop
imul
inc
fist
ins
movs
iret
fyl2xp1
push
scas
or
push
retf
call
sub
or
add
mov
call
xchg
mov
and
inc
add
push
stos
cmc
cmp
and
rol
mov
mov
adc
les
sub
cwde
pop
nop
inc
jo
ds
nop
dec
push
inc
iret
push
bound
retf
xchg
in
je
sub
inc
mov
rol
push
inc
cmp
inc
mov
inc
push
dec
les
imul
pop
shl
sahf
xchg
test
xor
inc
xor
popf
fild
mov
cmp
cmp
or
jae
inc
inc
out
mov
call
add
sbb
xor
arpl
mov
outs
inc
jmp
(bad)
adc
movs
(bad)
fiadd
pop
mov
in
loop
mov
or
test
mov
adc
mov
ret
cmp
cwde
pop
test
push
lahf
dec
fmul
xor
rol
inc
out
cwde
dec
pushf
test
or
and
pusha
call
aaa
dec
and
pop
sbb
es
(bad)
cmp
aaa
xchg
mov
loop
mov
daa
xchg
fsubr
jns
pusha
sub
sbb
and
js
bound
rol
sbb
and
xor
mov
dec
jns
jmp
icebp
sbb
jo
jns
scas
push
test
inc
icebp
mov
mov
outs
mov
dec
popf
shl
fbstp
cmps
outs
mov
xchg
cmps
mov
cmps
sub
jmp
outs
cmps
mov
cmp
mov
cmps
sub
jmp
clc
ins
push
out
les
or
out
mov
mov
dec
gs
pop
dec
dec
xchg
pop
push
jo
mov
cmp
rol
enter
sbb
mov
lds
mov
loop
pop
call
push
aam
fst
cmps
sbb
cmps
(bad)
(bad)
ins
push
and
dec
shl
jno
mov
mov
in
fisub
cwde
dec
mov
jl
or
mov
retf
nop
mov
inc
push
fst
jne
cmps
add
or
inc
adc
call
mov
aam
adc
mov
push
pop
jo
cmps
xchg
xor
test
adc
push
cmps
add
test
or
inc
and
mov
outs
mov
cmps
call
cmps
inc
popf
out
das
push
nop
scas
adc
mov
add
mov
inc
jnp
dec
and
inc
enter
je
das
pop
ret
or
add
je
mov
mov
mov
mov
(bad)
and
nop
out
or
(bad)
dec
mov
push
ror
fld
pop
mov
xor
js
dec
cld
sub
nop
xchg
repnz
push
or
dec
mul
mov
jmp
lods
sbb
inc
mov
adc
cmp
test
arpl
adc
adc
and
xor
pusha
mov
pop
push
es
dec
sbb
aam
mov
mov
loope
xor
shl
add
js
mov
je
mov
sbb
jno
sbb
xor
sbb
sbb
inc
inc
sbb
sbb
cmp
rcr
sbb
or
in
movs
mov
or
add
push
icebp
add
arpl
hlt
lock
jo
or
nop
mov
xor
cmp
enter
sub
pop
jno
dec
mov
mov
scas
call
ins
les
push
enter
(bad)
xor
and
inc
retf
pop
in
mov
cwde
bt
jo
mov
test
aam
scas
sub
pushf
or
xor
out
aad
test
dec
dec
jno
cmp
mov
dec
fwait
cmps
and
nop
fsub
test
mov
pop
sbb
jl
(bad)
xor
sbb
xor
fistp
mov
aad
pop
(bad)
call
xor
cmp
sbb
fwait
aad
nop
inc
push
rol
add
shr
adc
nop
inc
aad
es
div
dec
lahf
or
mov
add
mov
ss
push
leave
cmp
add
fisttp
fnsave
ret
(bad)
imul
je
or
mov
add
add
adc
in
add
or
and
jb
add
mov
mov
adc
xchg
pop
enter
cmp
pop
les
lock
int3
rcl
lock
xchg
mul
add
retf
adc
cmp
mov
int3
pop
fmul
mov
push
in
and
test
fild
add
pop
add
jecxz
jnp
repnz
(bad)
pusha
jp
pop
les
out
push
dec
loope
and
enter
call
nop
icebp
pusha
das
shl
jnp
mov
loopne
and
xchg
out
mov
xchg
das
dec
add
push
xchg
and
push
xchg
movs
add
or
add
imul
or
mov
dec
retf
mov
inc
das
sbb
loopne
mov
adc
lods
mov
std
stc
adc
stc
push
pop
lea
stc
adc
mov
mov
mov
dec
repnz
fdiv
mov
fcom
pop
pop
xor
aas
jb
mov
xor
add
stc
push
(bad)
push
fcomp
dec
push
call
fcom
mov
adc
fstp
mov
clc
adc
jb
ds
xlat
mov
sbb
clc
daa
call
stos
pop
(bad)
shl
or
repnz
leave
daa
fnstsw
icebp
fcomp
pusha
xchg
xor
jne
mov
inc
rol
jmp
jmp
jne
out
sbb
add
jne
gs
fidiv
cs
stc
sub
fcmovnu
(bad)
iret
xor
inc
call
add
jne
sbb
lock
(bad)
out
adc
(bad)
(bad)
sbb
nop
add
aas
iret
aam
mov
push
inc
adc
call
mov
repz
ins
xor
or
push
adc
cmp
mov
(bad)
sbb
sub
cmc
jle
loop
adc
ret
call
adc
xchg
and
adc
iret
fdiv
je
or
retf
retf
jge
pop
xor
push
dec
idiv
add
js
jl
sbb
popf
test
mov
add
and
xor
and
ror
shr
scas
mov
cmp
rcr
fld
stos
sar
mov
cmps
or
pushf
mov
imul
jmp
sbb
pop
adc
or
retf
shr
push
and
jnp
shl
mov
sbb
sbb
dec
aam
mov
movs
add
fnstcw
pusha
push
or
xor
mov
or
and
mov
pop
mov
pop
inc
cdq
inc
mov
rol
dec
in
xchg
push
out
mov
adc
push
aam
pusha
pushf
fcom
add
xor
cmp
sbb
lahf
repz
mov
pop
adc
inc
sub
jae
adc
xor
mov
pop
or
mov
sbb
add
push
adc
inc
pop
adc
rol
pusha
pop
adc
add
pusha
sub
adc
inc
inc
sbb
push
pop
into
adc
add
xchg
aam
fldcw
aam
sahf
sbb
in
rol
ftst
inc
leave
test
sub
repnz
fst
sbb
xchg
(bad)
lods
adc
xchg
sbb
movs
shr
pop
pop
adc
and
jge
adc
inc
add
pusha
or
repnz
cmp
inc
dec
(bad)
fld
inc
dec
setge
dec
adc
inc
mov
sub
aaa
push
imul
sti
es
dec
adc
arpl
shl
sub
add
mov
cmp
movs
adc
adc
dec
push
pop
mov
adc
adc
pusha
inc
fdiv
mov
dec
adc
test
push
call
inc
jmp
adc
sub
add
rcr
push
in
jmp
sub
or
adc
adc
jnp
in
cmps
stos
push
dec
sbb
sub
nop
cmp
daa
mov
jb
cdq
cmps
push
fcom
push
retf
xchg
(bad)
adc
dec
pop
jle
mov
rcl
sub
ds
add
sahf
iret
inc
xchg
(bad)
aaa
and
dec
in
mov
cmp
shl
call
sbb
dec
pusha
xor
jb
out
xchg
cmp
(bad)
das
call
mov
push
stos
inc
jge
add
mov
call
in
vpand
lods
fcmovnu
(bad)
lds
fdiv
adc
mov
xlat
or
and
ret
pop
gs
test
inc
cs
sub
frstor
in
or
loopne
ret
pop
cmp
outs
push
dec
mov
xchg
mov
push
push
test
call
aam
aaa
sbb
mov
call
push
pop
aam
push
das
test
(bad)
aaa
test
outs
pop
fcom
push
push
mov
mov
pop
mov
ret
pop
xchg
in
push
rcr
mov
lods
cs
ficomp
xchg
sub
or
xchg
aaa
test
pop
cmc
or
ret
loopne
gs
pop
test
jp
sbb
sub
mov
pop
mov
inc
fst
or
jne
mov
cli
ficomp
aaa
out
jns
sub
xor
sub
daa
pop
hlt
movs
sbb
call
rol
enter
push
pop
dec
jecxz
mov
push
outs
loopne
and
sub
xor
test
add
scas
enter
pop
jle
enter
dec
or
add
in
shl
add
or
pop
enter
cs
adc
js
pop
call
push
loopne
dec
mov
leave
jecxz
int3
and
adc
stc
xchg
mov
retf
pop
or
push
bound
mov
mov
mov
mov
sbb
adc
sti
mov
lock
fcom
sar
mov
mov
mov
xchg
xchg
mov
cmp
mov
and
cmp
push
mov
nop
sbb
mov
enter
adc
in
pop
cmp
mov
repnz
sbb
lds
inc
push
lods
mov
sbb
and
mov
push
jb
sub
mov
enter
ds
in
sub
push
repnz
mov
and
cmp
out
mov
nop
sbb
mov
enter
lods
mov
in
pop
cmp
mov
push
pop
mov
inc
push
inc
mov
and
and
and
dec
ror
or
mov
hlt
and
or
and
call
out
in
or
mov
nop
pop
or
data16
mov
add
adc
call
push
sbb
imul
data16
adc
and
inc
dec
call
movs
mov
mov
data16
inc
xor
call
ret
mov
and
pop
ror
and
and
inc
mov
and
rol
popa
dec
jo
in
xor
cmp
repz
and
pop
adc
mov
cmp
and
stc
mov
in
repnz
jmp
sub
xchg
nop
sbb
rol
push
repnz
push
mov
xchg
rol
sti
test
xor
aas
pop
scas
push
ja
fnstcw
inc
sub
pop
push
and
push
jg
and
inc
inc
or
rcl
mov
pop
test
adc
inc
xchg
or
ror
repnz
push
retf
iret
test
inc
sub
fistp
dec
add
push
sub
xchg
and
xchg
into
sbb
jo
or
or
addr16
jecxz
gs
inc
adc
sub
push
pop
mov
inc
iret
js
mov
iret
push
sub
mov
or
xchg
dec
push
mov
push
iret
and
jb
bound
cmp
dec
iret
leave
sar
mov
mov
pop
iret
cmps
sub
scas
stos
gs
jle
dec
out
stos
gs
outs
pop
mov
push
sub
push
inc
aam
xor
pop
iret
int3
xchg
push
inc
sub
out
stos
gs
dec
js
add
inc
jmp
ret
and
push
xor
cs
pop
and
push
iret
and
test
retf
xchg
scas
iret
mov
xlat
mov
push
aam
je
iret
and
shr
iret
pop
push
or
ficomp
and
mov
push
sub
sub
iret
mov
dec
cmps
cmp
imul
je
shl
mov
adc
iret
in
jbe
xchg
fwait
and
mov
movs
sbb
mov
jae
push
loop
xchg
iret
sub
or
cmp
call
mov
cmp
mov
and
dec
dec
loopne
fcom
ror
ins
jno
or
mov
dec
imul
fcom
dec
cld
sbb
call
inc
sub
neg
into
and
inc
(bad)
iret
imul
je
iret
bound
ja
sbb
inc
mov
pop
cmp
mov
lods
sbb
push
iret
out
sub
or
pop
add
gs
or
adc
(bad)
out
inc
xchg
inc
pinsrw
iret
fdiv
call
pop
xor
push
inc
aad
je
iret
sbb
sub
pop
lods
iret
sub
imul
iret
dec
aaa
push
retf
shr
xchg
test
mov
arpl
stos
xchg
iret
icebp
int
gs
xor
hlt
inc
xchg
out
add
mov
ds
ss
sub
mov
popf
div
sahf
iret
outs
mov
push
sbb
in
push
or
sub
sub
iret
pop
scas
push
jb
iret
xchg
aad
fs
iret
xor
cs
(bad)
jbe
shl
scas
push
je
push
iret
inc
test
cmp
jg
dec
loopne
fwait
xchg
cmp
mov
xchg
jge
xor
and
cwde
adc
xor
xchg
iret
push
push
mov
cmp
iret
mov
iret
stos
gs
mov
or
push
rcl
pop
iret
push
sbb
add
iret
imul
pop
test
clc
aad
dec
sub
popa
sub
push
retf
rcl
iret
stos
xchg
movs
shl
mov
sbb
aam
je
in
iret
stos
xchg
and
or
and
addr16
sbb
xchg
call
je
mov
outs
gs
sahf
fs
stos
iret
nop
mov
or
mov
fsub
inc
add
sbb
push
loop
jp
mov
and
retf
test
dec
movs
xchg
dec
iret
jne
mov
and
push
retf
shr
shl
mov
ret
cmps
mov
xor
mov
push
mov
iret
xchg
(bad)
repnz
movs
sbb
in
or
rcr
xchg
iret
jecxz
push
retf
rol
pop
retf
ror
addr16
or
jno
pop
or
ja
inc
mov
cmp
cmp
shl
test
iret
fsubr
pop
popw
push
sub
xchg
movs
or
iret
ret
sub
jns
pop
xchg
inc
mov
pop
xchg
out
push
inc
(bad)
or
mov
mov
adc
ret
rol
bswap
add
or
jae
(bad)
out
and
inc
xchg
scas
pop
inc
es
push
cdq
std
(bad)
dec
push
call
or
or
add
popf
pusha
xor
mov
fdiv
call
fwait
enter
adc
(bad)
mov
add
xor
pop
fist
dec
inc
daa
call
dec
repnz
jbe
inc
cwde
adc
ins
movs
pop
lods
in
mov
xor
clc
(bad)
and
xchg
inc
add
xor
inc
imul
sbb
pop
or
lods
mov
cmp
or
push
in
mul
inc
lahf
bound
in
js
mov
in
adc
retf
cmps
push
cs
repz
dec
pusha
jo
jns
iret
repz
add
adc
out
sahf
out
bound
mov
cmps
mov
iret
sar
push
xor
repz
repz
cwde
cmps
mov
stc
cmp
ret
or
push
sahf
out
sahf
sub
dec
pop
data16
sahf
out
mov
cmp
out
push
stos
and
iret
repz
push
pusha
ins
jbe
xchg
or
mov
xrelease
aas
adc
jge
add
(bad)
adc
adc
push
int
xor
and
pop
movs
sbb
out
int
push
fcom
sbb
aad
outs
int
cmp
mov
(bad)
clc
mov
fwait
sbb
mov
cwde
iret
mov
sub
add
adc
mov
cmp
pusha
clc
push
mov
jns
or
add
test
adc
sahf
jnp
adc
push
adc
xchg
sbb
sahf
cmps
stc
cmp
call
push
int3
out
or
test
in
ror
pop
mov
and
imul
cmp
repz
jns
jp
cmp
cmp
aam
sbb
(bad)
out
adc
mov
pop
inc
adc
mov
xchg
mov
addr16
and
test
call
ins
or
xor
sbb
imul
xchg
hlt
call
(bad)
aam
enter
out
sar
out
mov
out
sahf
nop
mov
sahf
out
js
jo
push
fs
pop
pop
push
sahf
out
sahf
push
dec
dec
inc
inc
cmp
sahf
out
cmp
sub
sar
sbb
or
nop
in
repz
fadd
movs
test
pop
idiv
add
push
shl
pop
dec
dec
inc
dec
repz
xor
clc
mov
int3
cmp
repz
test
jns
cmps
stc
in
(bad)
enter
mov
lea
push
add
in
mov
stos
add
mov
push
enter
xor
or
inc
je
inc
dec
add
push
aad
mov
aaa
xor
mov
sub
inc
pop
test
xchg
xor
adc
je
ins
out
mov
mov
aaa
and
outs
shl
js
push
cmps
push
dec
and
loopne
or
dec
sbb
sbb
daa
add
and
dec
ret
ins
daa
aas
xchg
loop
sub
xor
push
pop
lods
fcmovnu
jo
mov
inc
add
mov
mov
pop
sti
(bad)
(bad)
lahf
add
das
xor
push
pop
pop
adc
push
sub
sbb
mov
and
test
adc
lea
jl
push
ja
aas
pop
enter
daa
shl
fsubr
inc
pop
es
into
jge
xor
cmp
jbe
loopne
pop
pop
inc
fistp
out
aas
sbb
popf
sub
sbb
jg
mov
mov
aas
test
cmp
xor
cmps
fwait
cmp
(bad)
fsub
dec
pushf
mov
mov
iret
jg
lock
sahf
fsub
cli
ud0
xchg
int3
xor
lods
cmp
das
push
jl
pop
les
xchg
nop
imul
(bad)
jge
ins
xchg
jne
adc
daa
dec
ins
inc
push
lock
dec
push
add
adc
in
outs
jbe
xchg
ins
iret
push
sbb
or
cs
clts
xor
inc
mov
or
push
xchg
movs
add
cdq
loop
mov
loop
data16
or
jne
mov
mov
adc
cdq
jbe
rcl
adc
pop
icebp
cld
and
xchg
mov
pop
or
sar
inc
aas
cmp
jne
push
push
aas
gs
in
imul
or
imul
push
jae
inc
push
mov
xor
cmp
gs
adc
inc
mov
sub
fild
movs
adc
or
mov
push
sbb
aaa
outs
add
push
or
mov
sub
xchg
inc
bound
push
pop
sub
sbb
and
mov
mov
pusha
mov
or
push
sub
sbb
mov
mov
mov
mov
sbb
mov
sub
jae
rol
xchg
inc
and
or
shl
add
or
mov
mov
mov
push
sbb
or
adc
(bad)
and
add
xchg
mov
(bad)
aaa
pop
mov
add
nop
add
pop
or
dec
inc
(bad)
mov
sbb
rol
inc
jns
loopne
xchg
movs
xchg
test
out
sahf
out
xchg
nop
mov
je
pop
push
pop
dec
repz
repz
inc
cmp
xor
repz
xor
and
sbb
iret
repz
adc
xchg
hlt
xchg
cmp
jnp
in
push
in
(bad)
enter
repz
adc
jl
cmp
push
ins
push
fs
push
dec
fcomip
cmp
mov
push
and
add
in
xchg
repz
cmp
enter
iret
repz
test
cwde
nop
mov
js
jo
pop
inc
repz
and
adc
out
sahf
out
xchg
loopne
mov
sahf
test
ins
pop
adc
inc
dec
test
mov
dec
pop
fisubr
mov
jo
cwde
into
xor
and
adc
rcr
ror
fs
push
retf
inc
add
and
xchg
cs
call
(bad)
(bad)
leave
pop
jg
in
push
adc
pop
enter
loop
pop
pop
xchg
outs
stos
call
xchg
cmps
ins
push
ret
ret
push
mov
xchg
pop
mov
iret
dec
push
or
popa
les
inc
inc
adc
adc
add
pop
xor
mov
mov
mov
dec
jnp
iret
xor
xor
sahf
xor
sar
and
push
xor
xor
xor
aaa
fbstp
inc
aaa
arpl
cmp
cmp
test
popf
xor
push
cmp
and
bound
clc
stos
mov
cmp
sahf
fdivr
(bad)
jmp
(bad)
cmp
cmp
xchg
lahf
cmp
mov
mov
ficom
and
pop
ds
ds
mov
fs
imul
aas
jecxz
call
(bad)
push
xchg
mov
and
sub
xor
jecxz
xor
fs
cmp
out
jg
mov
push
out
xor
repnz
xor
xor
and
(bad)
(bad)
in
xor
xor
cmp
inc
xor
push
xor
imul
xor
lea
xchg
xor
adc
xor
xor
xor
cmps
inc
(bad)
fistp
test
mov
xchg
xor
mov
out
xor
xor
and
sub
sub
xor
inc
jmp
mov
repnz
ss
and
call
xor
xor
xor
xor
xor
push
mov
mov
jg
sub
mov
xor
xor
xor
xor
sbb
push
jp
mov
xor
out
aaa
enter
(bad)
push
jp
aaa
cmp
ins
cmp
arpl
xchg
leave
stos
popa
cld
pop
jbe
cmp
sbb
sbb
and
and
sub
mov
jmp
xor
jp
test
mov
mov
repnz
cmp
sbb
and
dec
cmp
test
xchg
arpl
fistp
(bad)
ss
dec
cmp
cmp
cmp
ins
or
(bad)
xor
xchg
cmp
mov
sub
cmp
add
dec
ds
ds
mov
aas
dec
xchg
movs
imul
wrmsr
and
push
sbb
xor
inc
xor
xchg
mov
popa
fdivr
xor
jle
xor
retf
adc
aam
fidivr
popa
cld
aaa
dec
in
dec
xor
cmps
(bad)
repz
stc
xor
test
retf
push
add
clc
sub
mov
mov
retf
outs
pop
xchg
(bad)
clc
xchg
sub
cmp
inc
js
jle
xchg
icebp
push
xor
mov
mov
ret
clc
test
aad
in
adc
ss
cmp
fs
push
xchg
jb
cmp
add
fisttp
jecxz
cmp
jne
jnp
sub
cmp
inc
(bad)
cmp
mov
outs
nop
mov
in
jmp
lock
sub
ja
jmp
xor
sar
or
ins
cmp
cmp
cmp
cmp
cmp
sub
(bad)
mov
cmp
push
ds
ds
clc
mov
aas
adc
and
dec
aas
push
aas
or
gs
mov
pop
fidiv
icebp
jo
mov
inc
daa
xor
jg
mov
cld
test
in
cmc
xor
xor
shl
jmp
xor
mov
test
cli
retf
(bad)
xor
adc
cld
ja
loope
xor
aaa
jnp
mov
inc
add
or
cmp
mov
rol
push
cmp
sbb
xchg
cmp
dec
sbb
icebp
sbb
jmp
mov
pop
cmp
outs
pop
shl
nop
ss
sub
jno
ret
clc
inc
adc
cmp
cmp
cmp
cmp
fs
push
scas
push
addr16
cmp
leave
clc
cmp
cmp
cmp
cmp
sbb
icebp
aas
es
sub
pushf
sar
jo
inc
or
inc
outs
or
js
lock
xor
jecxz
fcom
loop
pop
push
cmps
xor
xor
jmp
and
or
xor
mov
jmp
in
out
push
adc
sbb
das
ss
mov
mov
aaa
pop
mov
pop
cmp
push
mov
sbb
mov
fdivp
cmp
cmp
cmp
jg
mov
mov
bound
imul
cmp
(bad)
cmp
cmp
test
lahf
cmp
aas
iret
aas
loope
aam
sbb
(bad)
fistp
cmp
xor
test
xchg
inc
xchg
mov
xor
xor
push
push
jge
mov
push
mov
hlt
xor
aaa
inc
ss
ss
aaa
gs
cmp
cmp
pop
test
(bad)
cmp
cmp
cmp
jo
test
jecxz
in
xor
xor
ss
pop
loopne
out
jle
cmp
fiadd
(bad)
inc
cmp
shl
cmp
dec
jmp
js
xchg
out
mov
xor
ret
cmp
xor
sbb
mov
xor
xchg
ret
xor
xor
cmp
clc
add
cwde
xor
aaa
mov
xchg
or
mov
xchg
mov
movs
jle
je
mov
aam
in
xor
add
jno
xchg
stc
int3
out
adc
sub
xchg
jno
mov
js
jl
and
mov
enter
mov
mov
fcmovb
xor
(bad)
int3
xor
sub
jmp
call
inc
sub
or
adc
scas
mov
cmp
inc
xor
jg
lea
push
xor
xor
clc
push
xor
ins
push
je
add
mov
xor
cwde
xor
xor
and
mov
(bad)
and
bound
lods
div
je
xor
aaa
mov
lock
add
jle
jp
mov
push
xor
push
mov
mov
int3
xor
cmp
inc
xchg
dec
add
shl
sahf
fiadd
fsubr
pop
sar
cmps
xor
inc
xor
xor
xchg
inc
sbb
movs
jnp
loop
mov
bound
xor
pusha
shr
jecxz
xor
(bad)
movs
add
out
xchg
inc
shl
loope
sbb
stos
sbb
mov
pop
fadd
in
call
dec
out
data16
and
add
sub
xor
jb
push
fstp
repz
cld
cmp
inc
pop
pop
sbb
xchg
dec
xchg
push
call
(bad)
push
xor
xor
jp
xor
xor
xor
xor
xor
xor
xchg
sub
(bad)
rcr
loopne
loopne
and
test
xchg
pop
inc
xor
xlat
mov
and
adc
and
jo
nop
jmp
lods
and
inc
(bad)
fdivr
add
inc
adc
dec
xor
movs
pop
cli
pop
pusha
jo
(bad)
(bad)
cmp
add
or
pop
pop
push
or
fcomi
dec
or
or
or
or
adc
adc
push
adc
mov
jae
les
or
pop
sbb
adc
adc
adc
fnsave
jbe
or
pop
cld
push
inc
add
or
xchg
add
add
adc
add
(bad)
(bad)
add
add
mov
dec
mov
ds
(bad)
(bad)
(bad)
inc
push
adc
pop
and
xor
inc
mov
adc
xor
adc
sbb
sbb
les
cmps
xor
lea
dec
xchg
mov
jns
inc
inc
or
imul
into
cmp
add
add
sub
cmp
adc
aaa
inc
push
pop
popa
jno
and
adc
mov
inc
repz
adc
loope
icebp
adc
sbb
mov
mov
xor
add
rcl
add
js
adc
adc
mov
push
cld
pop
add
lds
cld
cli
and
mov
inc
jnp
test
jge
ficomp
cmps
xor
(bad)
(bad)
inc
mov
test
pop
lahf
mov
movs
jecxz
cli
pop
mov
outs
inc
push
push
stc
or
xchg
jg
or
ins
sub
addr16
(bad)
(bad)
(bad)
jmp
out
or
(bad)
push
push
xchg
add
repnz
inc
lock
scas
(bad)
jle
fcmovnu
sbb
cmp
fisubr
in
mov
or
int3
call
push
push
pop
mov
pop
pop
mov
pop
mov
xchg
sbb
scas
adc
(bad)
(bad)
inc
mov
xor
lods
scas
xchg
test
aam
and
sbb
sar
(bad)
jmp
and
rol
fwait
movs
jmp
push
retf
push
out
in
and
ss
repz
(bad)
jmp
cmps
pop
outs
icebp
mov
pop
lock
std
or
pop
mov
daa
test
aaa
dec
dec
pop
(bad)
(bad)
(bad)
call
out
outs
loope
loope
ror
mov
int
arpl
push
out
or
cmps
sbb
(bad)
push
sahf
pop
clc
(bad)
push
(bad)
sti
jg
jno
lock
jg
inc
icebp
xchg
std
sar
xor
hlt
and
xchg
(bad)
(bad)
pop
jge
(bad)
jmp
sbb
add
rol
mov
mov
sub
pop
mov
scas
sbb
arpl
dec
jp
push
gs
jg
(bad)
idiv
hlt
push
add
stc
loope
(bad)
mov
sar
and
aas
icebp
idiv
test
fisttp
sbb
scas
fadd
icebp
(bad)
(bad)
jmp
jns
mov
in
repnz
jno
pop
sub
jg
scas
cld
or
push
inc
sbb
paddb
aam
sub
jb
adc
push
lock
lods
jp
test
(bad)
(bad)
push
sbb
into
fcomp
sbb
sbb
into
and
aas
loopne
mov
adc
aaa
xchg
in
add
inc
adc
loope
fisttp
je
hlt
es
aas
std
cli
push
push
push
idiv
(bad)
jg
inc
cmp
sub
(bad)
inc
scas
inc
mov
jg
cs
sub
jg
imul
(bad)
(bad)
mov
stc
mov
mov
inc
es
gs
jns
enter
or
push
pushf
push
scas
xlat
sub
(bad)
(bad)
inc
aas
sti
punpckhbw
cmps
or
mov
lock
jmp
xchg
pop
clc
pop
fistp
xor
movs
add
lea
jg
jmp
lock
std
xor
jg
aad
adc
ret
(bad)
das
jmp
sar
pop
pop
shl
out
sar
sbb
jno
or
(bad)
(bad)
jg
sar
std
pop
les
cli
mov
mov
inc
arpl
stos
mov
(bad)
push
and
ins
add
leave
push
scas
loop
jge
push
shr
mov
push
mov
adc
push
pop
jns
and
sbb
xchg
jo
and
out
test
jae
push
iret
sti
cmp
fdivrp
(bad)
(bad)
call
aam
sahf
imul
fcmovnu
ror
ins
stos
arpl
add
(bad)
(bad)
(bad)
(bad)
cld
call
js
cmp
scas
lods
hlt
cmp
fist
mov
adc
push
movs
xchg
or
pop
cld
call
mov
stos
dec
lods
xor
cs
cmps
addr16
(bad)
jg
scas
popa
in
pop
or
mov
xlat
pushf
cld
aas
clc
jge
jnp
sbb
outs
mov
sbb
(bad)
(bad)
dec
jecxz
inc
adc
mov
adc
adc
push
jo
pusha
imul
add
(bad)
push
ja
xor
cmp
xchg
mov
(bad)
cwde
pop
xchg
ftst
jbe
xchg
(bad)
(bad)
inc
lods
add
add
jae
shr
shl
out
aas
stc
add
sti
(bad)
(bad)
jmp
pop
gs
jno
fidivr
lock
(bad)
adc
pop
cld
add
adc
pop
lock
and
lahf
fmul
enter
jecxz
push
cdq
mov
pop
mov
sub
mov
(bad)
dec
(bad)
inc
fisubr
aas
mov
(bad)
or
cld
inc
or
bound
cmps
push
pop
jg
add
jg
jbe
(bad)
mov
(bad)
aad
test
mov
mov
iret
sar
fld
push
jbe
push
sbb
stos
icebp
pop
inc
sti
jmp
dec
jno
adc
push
inc
jecxz
sbb
sar
mov
std
adc
loopne
and
clc
xor
mov
imul
dec
cmp
jg
push
in
aas
mov
fsubr
add
fisub
lock
(bad)
and
jmp
push
clc
xchg
pushf
mov
repnz
fadd
das
clc
and
mov
adc
inc
aas
push
rcr
ds
(bad)
mov
jb
fistp
adc
call
jno
out
mov
addr16
scas
inc
sti
arpl
daa
std
or
sbb
loope
inc
mov
inc
cmps
popf
push
loop
sbb
or
imul
xor
dec
xor
fsubr
fild
call
lds
fidivr
jg
stos
pop
jl
call
jbe
dec
mov
sub
jge
xor
lahf
les
sbb
dec
in
neg
cld
add
sbb
mov
lahf
outs
int3
(bad)
push
jo
push
sbb
pop
paddsw
pop
arpl
out
out
outs
xchg
inc
test
clc
inc
cld
in
jge
popa
push
test
jbe
outs
hlt
sti
fsub
shl
dec
cs
jmp
dec
adc
lahf
mov
or
out
call
fistp
pop
shl
cld
mov
adc
stos
(bad)
pop
jg
pop
sar
jmp
fild
rcl
jg
adc
xor
pop
rcr
dec
mov
gs
dec
movs
idiv
aad
sti
jp
(bad)
jnp
jecxz
adc
inc
lds
push
pop
adc
(bad)
(bad)
jmp
imul
or
inc
pop
(bad)
xor
ror
and
(bad)
lea
push
sbb
mov
(bad)
(bad)
call
cmps
enter
mov
into
test
xchg
movs
ins
or
and
xchg
lock
ins
test
lock
repz
sbb
lock
in
jmp
out
jmp
mov
clc
push
std
mov
or
lods
out
jne
or
cld
(bad)
(bad)
push
mov
push
mov
fsubrp
dec
sahf
enter
fcmovb
inc
adc
inc
loopne
test
(bad)
out
shr
fisttp
out
pop
or
or
dec
ss
les
or
repnz
(bad)
clc
dec
cmc
mov
jl
call
jle
inc
jno
retf
(bad)
pop
in
cmp
stc
fwait
mov
jmp
mov
pop
lock
jmp
hlt
dec
mov
mov
(bad)
aas
mov
jg
inc
fdiv
mov
sub
addr16
sbb
cld
daa
jp
std
mov
fucomi
adc
cdq
or
mov
ret
nop
cmp
push
loop
cmc
das
inc
lock
pop
pop
div
(bad)
cld
idiv
xlat
(bad)
add
scas
stc
lahf
loope
js
or
jae
jmp
idiv
fbstp
out
xchg
add
out
sbb
xchg
(bad)
mov
loope
mov
cmps
popf
sbb
xchg
mov
fbstp
push
daa
outs
das
outs
ss
cmps
cmp
call
pop
mov
dec
adc
mov
or
adc
call
shr
popf
dec
or
add
fs
inc
add
loop
out
mov
aaa
std
fistp
cmp
inc
sbb
xchg
mov
pop
cmp
mov
aas
icebp
ret
ror
sbb
mov
adc
sub
adc
aas
pop
clc
loope
loope
mov
or
jp
dec
add
xlat
ins
(bad)
push
xor
sbb
and
ins
lock
adc
jne
push
cmp
repz
pop
and
sub
jo
sar
pop
out
jg
jno
ret
movs
and
loope
cmps
inc
arpl
out
inc
(bad)
(bad)
(bad)
call
jge
pop
clc
xchg
cmps
jmp
ds
inc
mov
in
sbb
xchg
imul
jle
bswap
sub
jmp
add
mov
daa
jmp
fadd
mov
inc
push
jae
call
push
imul
pop
stc
push
dec
adc
jmp
cmp
mov
(bad)
mov
enter
(bad)
mov
push
inc
dec
or
add
push
sti
pop
inc
add
or
nop
mov
test
(bad)
(bad)
inc
add
or
dec
jmp
dec
dec
or
push
ja
mov
mov
mov
(bad)
jmp
cmps
aad
sub
das
pop
mov
jge
sahf
xchg
mov
lods
inc
xchg
xor
(bad)
(bad)
(bad)
push
mov
outs
(bad)
jl
into
xchg
sbb
mov
mov
adc
xchg
(bad)
(bad)
clc
mov
add
dec
sub
cmp
int3
sub
add
sbb
leave
dec
or
(bad)
(bad)
dec
sbb
stos
xor
and
jns
sub
bound
sbb
pushw
(bad)
(bad)
(bad)
jmp
xor
push
sbb
sahf
cwde
add
mov
sub
test
sahf
imul
dec
add
mov
mov
add
div
adc
jns
loopne
inc
inc
dec
(bad)
(bad)
(bad)
push
gs
jne
sub
adc
mul
sbb
and
jp
and
and
stc
or
(bad)
jmp
jb
mov
popf
xchg
repnz
popa
add
shl
mov
js
(bad)
(bad)
dec
jbe
out
mov
push
arpl
or
jnp
test
add
(bad)
mov
(bad)
(bad)
fdiv
int
xchg
pop
pushw
shr
cmp
and
pusha
and
mov
cmp
(bad)
inc
pop
add
es
xchg
rcl
or
sub
in
(bad)
(bad)
jmp
nop
and
add
adc
rol
xor
xor
imul
dec
lea
xor
pop
or
mov
retf
fdivr
sbb
shr
(bad)
(bad)
(bad)
push
and
cmp
xchg
das
cmp
jl
rcr
scas
scas
cmpxchg
dec
ds
add
lock
(bad)
(bad)
call
lds
lods
xchg
ret
or
add
jne
test
inc
aas
aaa
pop
(bad)
(bad)
(bad)
(bad)
mov
or
push
mov
jmp
(bad)
repnz
cmp
inc
(bad)
(bad)
(bad)
dec
add
retf
mov
or
mov
sti
fiadd
pop
mov
jle
adc
(bad)
(bad)
(bad)
push
jbe
mov
movs
out
leave
sbb
jo
(bad)
out
mov
jle
push
pop
(bad)
(bad)
(bad)
cmp
push
inc
and
inc
addr16
mov
pop
mov
xor
jge
jae
adc
push
test
and
les
sbb
out
mov
adc
(bad)
(bad)
(bad)
call
cs
inc
sbb
fcomp
lds
in
push
pusha
mov
jge
sbb
mov
xchg
cmp
(bad)
(bad)
(bad)
push
xor
ret
xor
mov
sbb
push
aas
lods
aaa
or
or
(bad)
(bad)
call
in
push
ds
add
mov
mov
out
mov
enter
ret
imul
cdq
hlt
mov
mov
pop
lahf
outs
xor
xchg
push
jb
jb
sub
mov
(bad)
call
jmp
xor
shl
in
imul
jp
adc
daa
fs
cmps
and
arpl
(bad)
(bad)
out
clc
repz
add
fs
cdq
sbb
imul
(bad)
(bad)
(bad)
call
xchg
sub
fnstsw
(bad)
mov
je
ins
in
lods
pop
push
mov
(bad)
(bad)
(bad)
mov
cld
push
dec
fild
mov
or
jl
scas
scas
pushf
cmp
(bad)
(bad)
(bad)
inc
out
sbb
fsub
push
(bad)
fdivr
cmps
out
sbb
sahf
inc
gs
mov
(bad)
mov
push
outs
aas
outs
movs
loop
push
sahf
or
cli
mov
dec
mov
test
and
fnstenv
push
pushf
jp
inc
out
cmps
sti
jae
jbe
xor
inc
xchg
js
ja
(bad)
(bad)
push
std
les
cmp
mov
xor
jge
adc
int3
stos
xchg
mov
jmp
sbb
fsub
cmc
ret
rol
push
pushf
xchg
push
and
dec
mov
popa
movs
xor
sbb
cs
(bad)
(bad)
(bad)
jmp
sbb
scas
mov
fnstcw
jb
xor
(bad)
stc
(bad)
leave
(bad)
sub
(bad)
(bad)
(bad)
(bad)
fild
popf
dec
inc
mov
cmps
cli
popa
jmp
mov
mov
iret
outs
mov
idiv
(bad)
(bad)
(bad)
mov
mov
xor
ja
inc
mov
and
test
adc
jg
call
cld
mov
jnp
xchg
pop
imul
jle
lods
rcl
sbb
(bad)
(bad)
(bad)
jmp
outs
inc
scas
retfw
jno
push
inc
int3
push
mov
data16
or
xchg
push
ficom
jg
mov
pusha
mov
or
(bad)
push
aad
shl
out
pop
test
jae
scas
mov
loope
in
call
push
repnz
xlat
xor
lods
movs
add
pop
(bad)
adc
mov
out
lds
lods
inc
mov
inc
ins
mov
movs
adc
(bad)
jmp
aaa
add
mov
push
rcr
rcr
xchg
xor
iret
jno
sbb
cld
rcr
xor
inc
xor
cmp
cmp
aad
mov
(bad)
(bad)
call
cmp
jmp
inc
das
adc
pop
cdq
dec
adc
push
mov
or
(bad)
(bad)
(bad)
dec
jne
mov
in
mov
mov
clc
data16
mov
pop
shl
cmp
(bad)
(bad)
(bad)
jmp
(bad)
retf
mov
xchg
rcr
mov
adc
pop
js
add
(bad)
dec
bound
xor
fcom
rol
cwde
mov
stos
dec
pop
(bad)
(bad)
(bad)
(bad)
jns
adc
mov
fdivp
arpl
add
dec
mov
mov
(bad)
(bad)
push
sub
or
pusha
sub
popa
shl
retf
mov
clc
push
popf
jmp
cmp
push
stos
xor
or
scas
push
inc
fs
call
(bad)
(bad)
(bad)
jns
adc
push
fs
in
push
in
in
dec
jmp
add
ror
mov
lods
sbb
jmp
jle
xchg
adc
sub
clc
es
cdq
push
adc
data16
(bad)
(bad)
call
pop
add
or
into
sbb
test
or
add
fnstsw
mov
xor
loop
jb
pop
push
test
push
sub
imul
shl
xor
(bad)
(bad)
(bad)
(bad)
(bad)
mov
call
mov
dec
in
icebp
or
pop
jbe
mov
jmp
stos
inc
or
sti
enter
pop
jne
repz
jg
and
pushf
movsx
(bad)
(bad)
jle
rcl
movs
nop
cmp
aas
sti
adc
and
pushf
xchg
mov
(bad)
push
aad
es
ja
sbb
(bad)
dec
cmp
rcr
add
mov
jmp
(bad)
(bad)
push
loope
adc
sub
cmc
push
into
jae
add
mov
shl
and
jle
mov
(bad)
(bad)
(bad)
jmp
mov
cmp
mov
xor
inc
dec
out
push
xchg
aam
jne
jbe
das
push
cld
push
movq
pop
leave
(bad)
(bad)
(bad)
call
mov
lods
sbb
inc
xchg
pop
sbb
mov
stos
fbstp
push
(bad)
(bad)
(bad)
jmp
mov
xor
jnp
fyl2x
jmp
add
xlat
loope
idiv
inc
or
popf
mov
pop
mov
jno
and
adc
out
pop
push
push
(bad)
xor
(bad)
inc
add
and
dec
(bad)
in
outs
push
or
pop
nop
pushf
into
fimul
push
cmp
(bad)
fcomip
call
pop
adc
add
jl
fdiv
outs
dec
push
rol
or
in
mov
(bad)
jl
xlat
scas
push
leave
dec
cmp
sub
clc
sub
add
dec
pop
inc
out
push
or
add
jbe
dec
inc
push
and
mov
sub
sub
ja
xor
(bad)
dec
push
dec
aam
repnz
ror
cld
ds
fnsave
adc
mov
aad
jmp
es
addr16
or
jp
sbb
gs
(bad)
(bad)
jg
es
ss
jns
jle
xor
ror
(bad)
mov
mov
retf
cmp
daa
pusha
in
(bad)
(bad)
call
cmps
lock
sub
and
loope
movs
jmp
adc
pop
icebp
sub
or
and
in
rcr
add
scas
jae
addr16
(bad)
(bad)
out
outs
cmp
adc
stc
out
mov
leave
mov
xchg
inc
fisttp
xchg
ss
inc
adc
(bad)
cmp
mov
mov
mov
lods
shr
xor
test
(bad)
mov
sbb
(bad)
loop
(bad)
call
mov
ins
pop
int
scas
in
xor
icebp
mov
es
jb
(bad)
(bad)
mov
jns
sahf
aad
push
call
mov
cwde
(bad)
mov
cmps
or
push
(bad)
(bad)
(bad)
jmp
mov
jp
je
adc
aam
(bad)
cmc
mov
scas
pop
jbe
dec
xor
enter
(bad)
(bad)
jmp
jg
jmp
pushf
mov
test
nop
out
mov
mov
(bad)
(bad)
(bad)
(bad)
cli
test
loopne
jle
mov
push
outs
sbb
mov
push
stos
shr
push
mov
mov
enter
sar
(bad)
dec
pop
imul
fbld
adc
int3
mov
fcomip
out
push
je
in
xor
bound
cmp
(bad)
(bad)
(bad)
shl
push
add
aas
ins
(bad)
cmp
popa
adc
fs
fidiv
imul
bound
pop
inc
jns
test
(bad)
(bad)
dec
mov
jb
loope
mov
gs
add
dec
push
inc
jae
cs
and
jmp
popf
inc
push
cmp
mov
or
test
jmp
test
sbb
jmp
cli
push
outs
or
test
jp
mov
push
dec
test
aaa
mov
lock
call
inc
pop
cmp
cli
xchg
mov
les
(bad)
(bad)
(bad)
inc
mov
fdivr
inc
rcr
push
xor
xor
std
(bad)
sbb
out
pop
sub
(bad)
(bad)
(bad)
jmp
test
sub
stos
dec
rcl
fwait
(bad)
loope
test
cmp
(bad)
(bad)
out
sub
loopne
cwde
js
test
imul
and
into
(bad)
(bad)
(bad)
jg
out
(bad)
cmp
mov
xchg
cld
enter
or
mov
es
adc
mov
test
push
xchg
or
(bad)
and
mov
sub
lods
std
push
push
pop
inc
das
mov
jmp
enter
mov
push
cmp
jne
xlat
out
push
lock
adc
ins
mov
sbb
(bad)
call
xor
dec
push
ret
stos
jno
cmp
test
hlt
sub
call
out
loope
je
pop
xchg
jb
xor
pop
or
sbb
loopne
leave
ret
repz
jg
dec
xor
pop
dec
loope
js
out
(bad)
jmp
adc
or
iret
hlt
mov
cld
pop
dec
push
xor
mov
std
jmp
rol
fisubr
cdq
shr
cmps
pop
and
cmp
mov
and
ins
dec
jne
jl
adc
(bad)
(bad)
(bad)
dec
mov
mov
mov
ins
cmp
cmp
sahf
in
jmp
pop
push
inc
(bad)
(bad)
(bad)
jmp
push
lea
xchg
mov
mov
mov
add
repnz
xchg
retf
in
in
call
or
mov
xchg
jne
pop
lods
fistp
dec
rol
cmp
(bad)
cmp
shr
or
sbb
fsub
mov
ja
sub
push
adc
ds
sub
cmc
jno
push
imul
(bad)
dec
and
xchg
pop
(bad)
or
int3
scas
stc
jle
sub
shl
dec
or
(bad)
(bad)
(bad)
mov
mov
xchg
test
and
lahf
dec
inc
out
xchg
(bad)
(bad)
inc
fucomi
push
inc
ret
push
xchg
xor
clc
(bad)
jmp
(bad)
push
pop
outs
add
in
ins
mov
pop
dec
cmp
cmp
inc
xor
dec
(bad)
(bad)
(bad)
(bad)
fbstp
push
jmp
xchg
pop
pop
imul
jae
in
and
cdq
popf
dec
(bad)
(bad)
(bad)
(bad)
inc
inc
add
in
pop
cdq
(bad)
inc
push
xor
int
gs
sub
inc
inc
cmp
mov
or
(bad)
(bad)
call
push
xchg
mov
jge
inc
packssdw
fs
mov
xchg
push
(bad)
(bad)
jmp
xchg
js
sub
jecxz
clc
pop
mov
xor
push
imul
adc
nop
adc
add
cmp
cs
sub
(bad)
(bad)
(bad)
fistp
xchg
mov
dec
fsubr
fbld
nop
gs
inc
sub
xor
retf
(bad)
jmp
hlt
mov
jp
dec
aas
test
test
xor
xchg
xchg
mov
xchg
sub
cmp
jmp
dec
ds
xchg
(bad)
ret
(bad)
sbb
or
mov
clc
push
enter
cs
push
stos
add
retf
retf
daa
and
(bad)
(bad)
call
add
aaa
pop
mov
inc
enter
mov
mov
addr16
movs
not
aad
inc
(bad)
(bad)
(bad)
inc
out
or
js
les
fisttp
pop
loope
lods
sub
aaa
pusha
jmp
cdq
loop
adc
(bad)
(bad)
dec
loope
imul
push
xor
push
mov
ret
test
outs
xchg
mov
jle
pop
xor
in
aad
retf
cdq
sbb
push
sbb
push
pop
jge
mov
fdivr
add
dec
(bad)
sub
test
cmps
mov
mov
idiv
push
mov
cmps
(bad)
jmp
dec
in
mov
adc
in
out
pop
jmp
pushf
cmp
movs
jnp
push
cli
push
mov
mov
xchg
lds
dec
es
pushf
xchg
inc
xor
(bad)
call
lods
shl
sub
jbe
adc
xor
leave
mov
icebp
pop
mov
jnp
(bad)
jg
dec
or
cmovo
xchg
mov
push
rol
fsubr
repz
sub
lahf
(bad)
(bad)
(bad)
dec
stos
push
pop
imul
push
aam
sub
rol
inc
xchg
bound
sbb
clc
(bad)
jmp
and
mov
and
idiv
cdq
aam
aam
int
and
adc
inc
jle
push
nop
ins
mov
cmc
xchg
ins
pop
cld
sub
rcl
cld
(bad)
(bad)
call
and
xlat
movs
cmp
jp
push
mov
cmp
ror
(bad)
inc
mov
(bad)
cmps
cmc
push
jg
pop
jo
(bad)
xchg
popa
xor
cmp
(bad)
mov
and
xor
test
xchg
fcomi
ins
lods
mov
sbb
repz
(bad)
(bad)
(bad)
call
mov
sub
cwde
push
scas
stos
mov
mov
dec
push
cmp
or
pop
ror
bound
loop
adc
mov
(bad)
call
sahf
movs
and
scas
(bad)
mov
adc
retf
push
fdivr
(bad)
dec
jecxz
nop
or
pop
push
fistp
cmp
(bad)
inc
and
and
icebp
cs
arpl
loope
retf
jo
out
(bad)
mov
aad
xor
movs
mov
cli
loop
dec
mov
stos
push
(bad)
sahf
scas
pop
pusha
add
loope
pop
mov
push
sub
hlt
and
add
xchg
(bad)
std
cdq
mov
jg
add
(bad)
fld
mov
and
sbb
(bad)
in
leave
or
ds
(bad)
(bad)
jg
sbb
repz
xchg
fistp
pusha
inc
sbb
xchg
out
enter
std
push
(bad)
push
sahf
call
lds
pop
or
mov
mov
push
pop
or
mov
aam
das
cli
jmp
rol
push
cmp
lods
rcl
inc
jbe
mov
imul
dec
sbb
(bad)
(bad)
(bad)
call
sub
jge
or
mov
pop
enter
add
mov
or
(bad)
(bad)
push
lock
sub
mov
cmps
mov
fisub
movs
sahf
dec
mov
hlt
(bad)
(bad)
inc
jns
mov
mov
mov
and
fwait
loop
jg
jns
scas
pushf
pop
call
fild
(bad)
in
lea
or
shl
mov
ins
popf
es
cli
sub
sti
inc
pop
int
xor
xchg
fdivr
push
mov
(bad)
dec
adc
enter
and
cmc
sbb
call
xchg
(bad)
call
jmp
dec
mov
movs
fs
sub
jne
xor
mov
mov
(bad)
(bad)
call
xchg
lods
mov
push
push
xor
(bad)
fisttp
sbb
mov
fst
(bad)
(bad)
fcomip
dec
sbb
and
jmp
imul
in
xchg
ret
jb
(bad)
(bad)
jmp
aad
enter
lock
ins
adc
sbb
mov
hlt
ficom
(bad)
(bad)
fcomip
jb
sbb
or
shr
sar
sbb
icebp
imul
scas
rol
lock
pushf
mov
mov
or
loopne
lods
dec
imul
aad
xchg
jne
pop
hlt
dec
stos
repnz
xchg
push
repnz
pusha
(bad)
xor
aam
(bad)
(bad)
call
bound
or
dec
dec
repz
mov
clc
lods
jne
shr
fbld
(bad)
(bad)
(bad)
clc
dec
loope
aas
fldcw
xor
xchg
adc
and
sub
add
ficom
ins
cmc
(bad)
(bad)
(bad)
clc
dec
pop
mov
and
mov
adc
mov
fld
pop
add
mov
cmp
mov
ins
out
test
dec
mov
je
xor
jb
or
add
fwait
jo
std
popf
pop
xor
dec
adc
cmp
xor
mov
(bad)
call
es
aam
stos
pop
ds
std
loope
loopne
out
adc
adc
mov
nop
call
mov
dec
loopne
pop
sub
cmp
xor
repz
sbb
(bad)
(bad)
dec
mov
test
xor
sahf
push
jmp
jp
nop
xchg
jp
pop
cmp
pop
clc
(bad)
(bad)
(bad)
(bad)
fsub
sbb
(bad)
hlt
sbb
mov
sbb
fnstsw
enter
(bad)
daa
(bad)
(bad)
(bad)
call
or
iret
sbb
into
lds
imul
jae
nop
add
jmp
stos
push
test
ud0
(bad)
dec
xchg
mov
mov
cmp
pushf
sbb
leave
push
dec
xor
adc
rcr
sub
call
rcl
imul
daa
xchg
sub
fs
std
js
je
outs
out
sub
inc
sti
ja
or
sub
cmp
dec
movs
(bad)
out
clc
call
test
cmp
lods
push
popf
cli
and
nop
jbe
sbb
std
jae
sub
(bad)
(bad)
call
retf
inc
mov
scas
int
gs
imul
aas
pop
and
mov
fwait
jns
fsincos
push
cmps
shl
bound
jecxz
sbb
out
xor
add
(bad)
(bad)
push
lods
sbb
hlt
mov
and
pop
outs
mov
push
mov
rcr
mov
out
data16
(bad)
(bad)
call
cmc
mov
jnp
mov
arpl
lds
inc
inc
mov
mov
cld
sbb
mov
pop
out
mov
sub
inc
jmp
jmp
jmp
cdq
lea
in
lahf
xchg
mov
bound
(bad)
call
pop
inc
dec
fld
mov
aaa
pop
xchg
jp
and
das
sbb
retf
cmp
inc
cmps
push
push
test
xor
adc
xor
cmps
(bad)
(bad)
(bad)
jmp
inc
rcr
mov
cmp
cmp
in
std
es
xor
mov
sbb
pusha
(bad)
(bad)
(bad)
call
xchg
fwait
lods
jmp
xchg
(bad)
call
dec
in
test
cmp
mov
fsubr
dec
imul
scas
stos
push
lods
aad
jbe
dec
mov
loopne
dec
sti
scas
or
cli
mov
out
fld
push
div
gs
xchg
(bad)
(bad)
(bad)
mov
add
shr
sbb
push
out
repz
cdq
sub
ins
je
fcomp
inc
cdq
pop
xchg
jmp
loop
(bad)
lods
mov
fisub
or
(bad)
(bad)
(bad)
mov
adc
dec
es
pop
pusha
outs
and
dec
outs
in
out
outs
popf
or
inc
and
xor
retf
xor
nop
mov
sbb
call
(bad)
xor
push
aam
(bad)
jg
mov
inc
sub
jle
rcr
or
push
fxam
pop
sub
out
test
clc
call
mov
sub
icebp
popa
ins
jecxz
mov
inc
jmp
(bad)
(bad)
jmp
int3
xchg
adc
jle
xchg
neg
mov
out
cmp
cwde
push
cmps
adc
push
ja
xor
xor
xor
and
movs
push
dec
hlt
mov
push
sbb
xchg
cld
mov
fcomip
es
scas
mov
arpl
mov
and
bnd
pop
(bad)
push
lock
mov
fiadd
inc
hlt
ror
mov
inc
clc
(bad)
(bad)
(bad)
(bad)
(bad)
in
ret
cmps
or
cmp
add
mov
add
mov
outs
mov
pusha
mov
pop
daa
mov
xchg
lahf
setno
sub
retf
loope
ficom
xor
ss
test
(bad)
cmp
fdiv
out
xor
and
popf
aaa
xchg
imul
bound
push
(bad)
fcomp
inc
(bad)
(bad)
(bad)
dec
movs
movs
stos
push
shl
push
cwde
cmc
cmp
(bad)
pop
jnp
sbb
(bad)
cmc
mov
adc
xchg
xor
jl
push
rcl
sahf
arpl
lahf
out
dec
retf
jp
scas
xchg
jo
(bad)
(bad)
(bad)
inc
sar
mov
aas
fbld
sbb
jne
(bad)
ret
mov
(bad)
jmp
fprem
mov
xor
add
cmp
pusha
clc
push
sahf
push
pop
sbb
mov
pop
xlat
call
push
cmp
mov
repnz
jbe
(bad)
(bad)
(bad)
mov
jp
sti
leave
pop
cmps
jns
jge
add
cld
and
jl
xchg
jno
jns
push
cmp
call
mov
fiadd
fdiv
lds
aam
mov
call
sub
push
cmp
pop
adc
movs
or
mov
dec
call
idiv
daa
pop
popa
fisubr
inc
aas
mov
adc
(bad)
(bad)
jmp
cmps
xor
inc
mov
xchg
(bad)
in
xchg
pushf
mov
or
retf
push
pop
jnp
popa
call
repnz
and
jmp
shl
scas
cdq
(bad)
dec
mov
mov
fcompp
das
in
xchg
movs
inc
mov
clc
(bad)
(bad)
mov
aas
rcl
push
and
jmp
stc
pushf
nop
and
ret
or
(bad)
(bad)
jmp
out
push
(bad)
aam
adc
or
in
jge
push
into
mov
xor
push
sub
cli
inc
aam
(bad)
(bad)
call
mov
setle
cmp
jne
shl
sbb
call
jo
xor
dec
push
repz
(bad)
(bad)
inc
ja
movs
jp
pop
mov
call
adc
jge
mov
mov
test
and
in
xchg
and
dec
push
xlat
mov
or
aam
(bad)
pusha
(bad)
(bad)
(bad)
inc
push
dec
ret
lds
inc
cmc
fwait
mov
or
in
jecxz
xlat
sbb
stos
aas
in
mov
adc
mov
int
in
lahf
jne
cli
push
xchg
xchg
mov
mov
jl
(bad)
(bad)
call
adc
cli
xor
cmp
jmp
xor
mov
or
repnz
xor
sbb
adc
(bad)
(bad)
inc
mov
shl
mov
jmp
pop
inc
mov
or
(bad)
jbe
mov
dec
(bad)
(bad)
(bad)
(bad)
mov
repz
pop
or
push
in
loope
push
pop
pushf
out
xchg
xchg
jne
lea
sub
push
jp
mov
cmp
add
jge
in
jp
retf
int3
stos
popa
scas
lods
ds
(bad)
(bad)
call
sub
mov
dec
xchg
add
(bad)
xor
js
ret
clc
(bad)
(bad)
inc
mov
push
out
rcl
aas
jmp
or
sub
dec
shl
mov
xor
js
mov
lock
xor
(bad)
(bad)
jmp
jmp
dec
jp
les
lds
(bad)
(bad)
adc
push
jmp
dec
hlt
(bad)
push
ins
(bad)
(bad)
(bad)
call
leave
jb
sub
sbb
xchg
mov
and
sahf
mul
inc
add
lds
inc
mov
cld
loop
iret
shr
xor
xchg
repz
(bad)
(bad)
jg
jl
jae
ds
inc
push
int3
nop
leavew
shl
int3
xchg
jl
(bad)
(bad)
(bad)
(bad)
(bad)
add
dec
fmulp
mov
add
daa
mov
xchg
enter
addr16
hlt
jge
jmp
repnz
mov
scas
sub
mov
inc
test
xor
or
(bad)
fcomip
inc
inc
cmp
or
jp
xchg
cmp
dec
push
push
fld
(bad)
(bad)
call
ins
outs
sub
push
cmp
lock
(bad)
jp
xor
jo
jl
sub
or
or
inc
dec
inc
repnz
pop
clc
mov
push
(bad)
push
mov
cmp
jg
fs
mov
(bad)
fucom
pop
adc
popf
stos
and
out
adc
push
and
inc
ret
mov
(bad)
(bad)
push
inc
fsubr
cmps
push
add
mov
iret
push
jae
cli
xor
sti
test
mov
test
xor
(bad)
(bad)
push
mov
inc
mov
in
lods
push
jp
mov
cwde
aam
pop
rcr
cwde
dec
sub
inc
mov
mov
test
xchg
inc
repnz
push
pop
sub
adc
call
xchg
pop
xchg
scas
int
cdq
sahf
(bad)
es
(bad)
inc
idiv
ret
add
fldcw
sub
push
push
hlt
(bad)
(bad)
(bad)
jg
sub
pop
ins
xor
icebp
sti
ds
push
jge
push
cdq
lahf
sbb
rol
rol
(bad)
(bad)
(bad)
(bad)
jmp
sub
pop
stc
inc
pop
loopne
out
xor
ins
icebp
mov
mov
sbb
(bad)
(bad)
(bad)
dec
imul
xor
sahf
into
fwait
sub
pop
in
adc
pop
and
xchg
jle
inc
es
fs
dec
push
xor
nop
push
mov
sbb
ret
arpl
cdq
inc
ret
mov
fcom
(bad)
(bad)
dec
sub
mov
cwde
xor
pop
push
popa
and
mov
pinsrw
cmp
into
mov
pop
inc
pop
mov
es
retf
or
and
dec
jge
(bad)
push
(bad)
(bad)
(bad)
dec
cmp
call
mov
inc
jns
sbb
nop
mov
jmp
(bad)
call
push
scas
xchg
cwde
cld
jb
push
jl
mov
sub
(bad)
call
cld
lods
int
loop
jmp
call
lock
fsub
adc
aad
xor
out
aas
sbb
leave
add
shl
adc
retf
sub
cwde
pop
(bad)
push
and
adc
xor
and
lea
xlat
cmp
call
mov
pop
jmp
cwde
or
mov
xchg
ins
mov
jp
jge
call
std
loop
out
push
or
and
mov
and
push
lds
dec
mov
dec
(bad)
mov
mov
in
cld
cmp
adc
dec
pusha
cmp
clc
dec
add
jecxz
xor
gs
push
test
mov
dec
out
daa
inc
test
xlat
and
fwait
aaa
(bad)
(bad)
(bad)
push
xor
fidivr
mov
xor
sbb
iret
lods
addr16
mov
(bad)
cmp
fild
sub
imul
dec
sbb
sub
outs
clc
jmp
push
and
retf
jge
xor
cmp
fisttp
add
jmp
enter
and
fimul
mov
lahf
adc
ret
jne
(bad)
gs
sbb
(bad)
(bad)
clc
mov
xchg
or
sbb
arpl
(bad)
call
mov
mov
mov
or
aam
call
or
xchg
(bad)
fst
daa
pop
js
nop
ins
lahf
scas
lea
outs
xchg
mov
mov
sbb
in
test
(bad)
(bad)
(bad)
jmp
mov
push
pop
and
nop
and
enter
inc
dec
(bad)
stos
adc
(bad)
(bad)
(bad)
(bad)
aas
nop
push
out
adc
dec
push
dec
xor
pop
mov
xlat
(bad)
cmp
push
pop
in
mov
sub
call
cmp
rcr
fild
sub
xor
pop
call
shr
retf
mov
push
stc
scas
mov
or
and
xor
call
mov
adc
push
sub
sbb
imul
outs
mov
sti
(bad)
fsub
(bad)
(bad)
(bad)
jmp
add
bound
bound
in
(bad)
mov
cmp
and
add
(bad)
push
daa
and
leave
aas
int
cmps
pushf
into
push
xchg
imul
enter
cmp
(bad)
jg
fnstcw
add
cmp
test
(bad)
fimul
sub
(bad)
jg
xchg
clc
cmp
fcomp
cmc
mov
mov
int3
dec
out
ret
mov
call
(bad)
xchg
mov
in
cwde
fisttp
in
mov
into
cwde
xchg
stc
(bad)
aas
daa
push
pop
aas
(bad)
(bad)
(bad)
dec
loope
cmp
mov
pop
cli
ret
or
mov
int
xor
(bad)
sub
(bad)
(bad)
(bad)
fcmovu
mov
dec
das
sbb
aad
adc
dec
cmp
pop
push
data16
pushf
xor
fld
push
mov
mov
add
(bad)
inc
(bad)
inc
jp
pop
pop
cmp
pop
jno
sub
or
xor
enter
(bad)
call
jg
pop
inc
jbe
cwde
jno
fsubp
cmp
mov
push
jae
jmp
and
pop
(bad)
(bad)
jmp
jmp
jno
dec
mov
mov
pop
push
sbb
les
cmp
call
xchg
xchg
cmc
dec
mov
cld
dec
add
mov
(bad)
(bad)
sub
aad
xchg
pop
xor
scas
xor
cwde
ror
cmc
fld
cli
xchg
add
sahf
sub
jo
hlt
sbb
xchg
sar
push
out
xchg
ficom
push
cmp
sbb
outs
pop
mov
pop
gs
xchg
inc
dec
cmp
adc
(bad)
(bad)
(bad)
(bad)
aas
pop
jmp
and
xor
cmp
mov
jbe
(bad)
(bad)
(bad)
jg
ds
(bad)
repnz
pop
aam
dec
push
in
ins
xchg
arpl
daa
sahf
xor
fcomip
push
xchg
loop
adc
xor
mov
shl
mov
icebp
mov
and
(bad)
jg
xchg
cli
inc
jae
popf
adc
add
inc
scas
std
mov
xchg
movs
stos
imul
dec
dec
cmc
mov
shl
push
cmp
fs
or
lea
dec
dec
sbb
in
pop
ja
ret
daa
sbb
imul
shr
pushf
adc
add
push
jl
fucomi
push
adc
rcr
out
jmp
pop
mov
xchg
(bad)
(bad)
inc
pop
jae
ds
ror
inc
data16
movs
cmp
loopne
and
data16
pop
push
(bad)
(bad)
mov
out
movs
sub
sbb
push
push
aad
dec
inc
ret
(bad)
xchg
(bad)
(bad)
(bad)
cmp
mov
sub
dec
fstp
(bad)
jae
cmps
xor
mov
xchg
jecxz
sbb
cmp
jg
and
push
aas
std
addr16
call
aad
cmp
push
push
(bad)
(bad)
(bad)
inc
pop
in
arpl
mov
or
pop
xor
pop
fs
arpl
xchg
xor
loop
(bad)
into
mov
into
pop
clc
jg
inc
aaa
scas
(bad)
ds
pop
fsubr
add
(bad)
(bad)
jmp
mov
inc
ds
ins
dec
xchg
or
call
es
(bad)
jmp
and
test
jmp
test
lods
outs
test
cmc
dec
add
(bad)
(bad)
(bad)
(bad)
in
scas
mov
(bad)
jnp
mov
out
cli
int3
sub
xor
in
mov
(bad)
int3
fs
icebp
mov
(bad)
(bad)
(bad)
call
imul
mov
pusha
xor
in
test
sub
mov
dec
push
das
clc
(bad)
jmp
aad
imul
and
inc
aaa
pop
js
add
inc
or
jmp
inc
(bad)
pop
mov
rcl
in
sub
mov
sti
(bad)
(bad)
(bad)
inc
jne
mov
and
fcom
les
cld
jnp
and
push
mov
(bad)
(bad)
(bad)
inc
or
pop
pop
stc
cld
xor
or
and
lahf
enter
daa
add
jmp
popf
xor
pop
jns
xchg
add
scas
xchg
and
ss
les
inc
jl
clc
push
lahf
(bad)
(bad)
(bad)
call
es
or
mov
test
and
bound
or
xchg
(bad)
(bad)
(bad)
inc
pop
cdq
push
arpl
xlat
loop
jmp
and
dec
mov
das
iret
push
xchg
sbb
call
out
cld
(bad)
popa
in
or
cmp
cmp
push
(bad)
jmp
shr
test
jge
inc
push
movs
daa
jg
(bad)
call
sbb
jecxz
jmp
ror
mov
fmul
mov
(bad)
jmp
scas
dec
cs
xor
cdq
int3
retf
es
sbb
xor
or
pop
cli
icebp
inc
mov
(bad)
call
push
mov
out
sti
push
inc
loope
cli
or
cmp
lahf
ret
popf
xchg
or
jmp
dec
sti
(bad)
and
and
or
out
xor
sbb
call
fucom
sbb
cs
mov
scas
lds
add
retf
sbb
dec
pop
push
stc
jb
dec
mov
das
adc
xchg
(bad)
jecxz
neg
jbe
push
adc
inc
(bad)
(bad)
(bad)
jmp
add
imul
lahf
dec
pop
ins
push
cmp
cwde
cmps
(bad)
mov
je
adc
(bad)
inc
sub
pop
cmps
fs
rcr
retf
xor
xor
jo
mov
pop
cmp
daa
add
fdiv
int
test
cmps
inc
push
or
inc
pop
inc
nop
(bad)
(bad)
(bad)
in
sbb
fisub
das
inc
and
xchg
pop
mov
rcr
jmp
es
xchg
jae
loopne
mov
mov
mov
xchg
enter
sbb
(bad)
(bad)
(bad)
call
xor
int3
xor
in
rol
push
inc
xchg
add
cmp
loopne
mov
(bad)
jmp
ficom
dec
pop
in
jmp
dec
inc
fimul
outs
(bad)
sahf
mov
fld
js
fsubr
add
xor
fsub
(bad)
mov
aas
jno
lds
test
repnz
clc
dec
mov
push
xchg
sbb
dec
mov
mov
adc
sahf
jne
cmp
fcomip
dec
or
es
out
dec
imul
xor
xor
arpl
loop
xchg
aas
dec
iret
fsqrt
(bad)
call
xchg
jp
(bad)
not
mov
add
(bad)
(bad)
dec
cs
jae
or
jp
ror
ficomp
lods
xchg
ins
fwait
cmp
(bad)
mov
inc
mov
mov
arpl
in
or
movaps
and
pop
fnstsw
cld
mov
(bad)
int3
in
push
push
mov
sti
pop
cmp
sub
das
adc
(bad)
cli
(bad)
cmp
out
out
call
pop
std
push
icebp
arpl
add
mov
mov
mov
mov
(bad)
(bad)
call
ret
jmp
std
sbb
daa
jl
and
push
pop
scas
and
daa
push
adc
(bad)
(bad)
inc
xchg
fs
je
lods
pusha
jo
ds
popa
pop
fnstcw
shl
mov
in
and
addr16
push
and
and
mov
movs
adc
inc
dec
adc
(bad)
(bad)
inc
or
pop
mov
inc
fild
inc
or
mov
inc
iret
test
mov
(bad)
(bad)
inc
icebp
lock
int3
and
mov
inc
fimul
addr16
sbb
or
sbb
idiv
(bad)
(bad)
call
mov
iret
imul
dec
push
xchg
outs
(bad)
stc
mov
xchg
xchg
arpl
(bad)
(bad)
mov
sbb
cld
hlt
and
sbb
push
pop
adc
(bad)
(bad)
(bad)
inc
mov
pushf
cs
aad
and
es
lods
and
pop
dec
mov
(bad)
(bad)
(bad)
cmp
sbb
push
gs
lock
xor
dec
mov
mov
out
lock
mov
mul
mov
inc
cwde
call
push
xchg
movs
cmps
push
(bad)
(bad)
(bad)
call
es
jge
movs
add
adc
push
out
sub
inc
and
scas
add
addr16
out
(bad)
(bad)
inc
pop
add
dec
rcr
ror
sar
in
pop
xor
jae
jno
(bad)
fbld
sub
add
add
cdq
pusha
inc
out
stos
jbe
stc
cmp
inc
mov
int
pop
in
xchg
push
push
mov
xchg
xor
call
repz
rcr
xchg
dec
stc
mov
call
pop
lea
dec
pop
ins
popf
pop
push
pop
xchg
inc
pop
(bad)
jo
jbe
(bad)
(bad)
jmp
outs
xchg
loop
loopne
jge
fistp
adc
inc
mov
mov
cmp
sbb
add
(bad)
(bad)
call
pop
jne
int
inc
cmps
(bad)
fild
push
in
jo
or
and
shl
div
jg
(bad)
rcr
stos
clc
and
leave
out
addr16
push
(bad)
dec
outs
adc
pop
mov
push
sbb
fdiv
idiv
out
aam
and
ins
sub
(bad)
mov
jle
scas
ror
xor
aas
fcmovnu
pop
or
inc
fwait
into
mov
(bad)
(bad)
stc
aaa
loop
int
adc
jae
ins
push
pop
sub
cld
ja
rol
mov
mov
sar
xlat
push
ins
inc
scas
mov
jns
mov
in
out
aaa
repz
sub
and
mov
aad
nop
lock
call
stos
add
scas
dec
push
outs
mov
mov
inc
xchg
scas
sbb
pop
push
inc
(bad)
(bad)
(bad)
push
aaa
ins
jmp
cmc
iret
push
cmp
dec
cmc
push
stos
iret
std
jne
pop
mov
mov
sub
dec
xchg
int3
rol
shr
pop
jecxz
les
call
loopne
loope
int
jmp
(bad)
pop
push
popa
pop
sbb
aaa
cld
push
dec
inc
adc
out
shl
stos
xchg
loopne
xor
das
jmp
aaa
cld
rol
aas
or
(bad)
cmp
lds
xor
jns
cmps
ds
out
sub
jns
ret
call
mov
aad
fist
cmp
stos
pop
xchg
mov
(bad)
lods
mov
scas
mov
(bad)
(bad)
mov
pop
sub
(bad)
mov
xchg
add
imul
(bad)
(bad)
cld
xchg
out
int3
call
push
lahf
daa
imul
into
dec
jg
pop
cmp
leave
je
and
arpl
sub
lock
(bad)
popf
mov
rcr
(bad)
movs
(bad)
(bad)
(bad)
ret
jb
test
add
mov
mov
pop
jle
and
pop
jno
(bad)
(bad)
call
adc
mov
inc
sbb
mov
sub
test
stc
sbb
ss
(bad)
inc
cmps
(bad)
stos
int3
add
inc
loopne
mov
(bad)
(bad)
(bad)
(bad)
fbstp
dec
fwait
rcl
mov
imul
scas
lock
sbb
gs
(bad)
(bad)
(bad)
inc
dec
cmps
cmps
gs
movs
loop
mov
dec
jmp
mov
js
jne
minps
(bad)
push
dec
retf
mov
add
push
lock
jle
scas
and
lods
retf
cmps
mov
sbb
(bad)
(bad)
jmp
lods
jae
adc
bound
dec
ja
jbe
adc
lock
scas
loop
dec
gs
(bad)
fcomip
fidiv
les
daa
stos
adc
aas
mov
jl
int3
cmc
ss
push
cmp
sub
(bad)
jmp
sub
cmps
loope
mov
jb
pop
mov
inc
aad
shl
cmp
xor
or
sub
fscale
les
(bad)
(bad)
jmp
imul
loop
xchg
test
xchg
loope
into
xor
xor
(bad)
(bad)
call
mov
shl
sbb
mov
sub
mov
loope
and
jecxz
call
stos
ret
add
in
sub
xchg
mov
(bad)
(bad)
sub
fwait
jg
mov
std
xor
and
(bad)
(bad)
dec
mov
sbb
stos
mov
dec
and
and
sahf
clc
(bad)
(bad)
(bad)
call
jmp
jmp
fidivr
jns
mov
aas
xchg
xchg
lahf
pop
or
or
(bad)
(bad)
call
and
out
mov
leave
(bad)
jbe
mov
nop
nop
out
outs
loopne
outs
loope
jmp
xchg
call
push
add
xchg
repnz
das
cwde
push
mov
cld
xchg
cmp
add
sbb
dec
call
(bad)
push
rcr
fist
outs
in
bound
and
jmp
(bad)
xlat
sbb
mov
cmp
out
jg
adc
inc
gs
mul
or
mov
addr16
pop
sbb
(bad)
jmp
or
aas
jne
and
xor
xchg
adc
call
je
aaa
cld
(bad)
jmp
cmc
fwait
clc
mov
pop
pop
loope
add
sub
test
daa
pushf
jmp
call
adc
cwde
mov
or
mov
xchg
(bad)
(bad)
(bad)
call
mov
sub
dec
cmp
enter
mov
(bad)
(bad)
jg
stos
dec
dec
add
repnz
xor
popa
cmps
cmps
scas
fnstcw
dec
add
mov
lds
lock
pushf
cmc
sbb
jg
(bad)
push
jne
mov
add
lock
ror
mov
add
mov
popf
jle
call
call
int3
dec
jl
push
stos
sub
cmp
(bad)
jg
js
lea
mov
imul
jae
jle
push
add
and
fwait
(bad)
(bad)
(bad)
(bad)
mov
into
or
les
retf
bound
test
aad
xchg
and
sub
push
fxch
(bad)
(bad)
(bad)
call
ja
lds
int
mov
or
cmps
mov
mov
and
(bad)
(bad)
push
dec
cmp
imul
cmp
out
lahf
inc
jo
mov
jne
sub
movs
jae
(bad)
jg
jg
adc
jmp
in
dec
push
adc
retf
(bad)
call
and
sbb
push
call
repz
mov
or
lock
jmp
leave
mov
push
mov
dec
ret
movs
add
(bad)
(bad)
(bad)
inc
(bad)
das
xchg
push
add
repnz
cmp
add
mov
push
mov
(bad)
(bad)
(bad)
jmp
hlt
xor
test
ds
cs
js
das
sub
adc
in
push
ret
sub
js
pop
xchg
sbb
cmps
js
loop
int
or
inc
and
aaa
push
(bad)
(bad)
(bad)
call
or
test
lods
adc
jmp
ror
aad
push
mov
(bad)
push
push
in
fcmovnu
lock
xor
jmp
sbb
jg
fidiv
fnstsw
push
fs
fst
cli
test
mul
mov
(bad)
(bad)
mov
sbb
xor
imul
inc
lds
jmp
and
dec
cmp
sbb
cmps
cmp
lods
sahf
push
loop
ds
add
jmp
or
add
iret
fadd
push
jge
test
loopne
retf
mov
adc
shl
push
dec
mov
xchg
push
sub
clc
dec
lods
xor
push
cmc
hlt
adc
shl
sar
(bad)
jmp
test
je
in
jmp
pop
xchg
arpl
adc
in
jg
add
(bad)
(bad)
(bad)
call
lods
jg
rcr
adc
jno
jo
cdq
repnz
cdq
fs
mov
hlt
jg
(bad)
(bad)
push
push
mov
push
sub
pusha
mov
sti
xor
mov
imul
sub
std
test
(bad)
(bad)
jmp
and
pop
ret
loop
pop
sbb
sbb
mov
retf
(bad)
add
clc
(bad)
push
pop
cli
add
pop
pop
inc
mov
mov
cli
cmp
mov
(bad)
push
xchg
popa
in
push
sbb
je
mov
pop
mov
or
(bad)
fild
(bad)
ret
dec
adc
(bad)
(bad)
(bad)
call
cmp
fwait
icebp
push
inc
rcr
xchg
or
and
jmp
(bad)
inc
std
adc
mov
mov
data16
je
cmp
inc
test
mov
out
(bad)
(bad)
jmp
fs
lea
push
xor
(bad)
(bad)
mov
repz
mov
sbb
test
inc
(bad)
jmp
sbb
(bad)
jo
xor
in
imul
cmps
add
or
aas
retf
pop
jno
dec
xor
mov
out
adc
sub
idiv
(bad)
(bad)
push
sub
and
sbb
adc
or
scas
sets
mov
daa
(bad)
(bad)
(bad)
inc
call
(bad)
out
xchg
xchg
xor
cmp
outs
push
or
and
fxch
test
(bad)
push
in
mul
addr16
jmp
adc
jae
inc
fdivr
sar
(bad)
call
bound
pusha
sti
inc
jae
adc
ret
pop
xchg
pop
aad
and
pusha
clc
cdq
retf
and
lods
(bad)
inc
pop
inc
push
mov
retf
dec
call
aaa
(bad)
(bad)
mov
in
and
jbe
mov
ins
inc
cdq
xor
mov
test
push
cmp
(bad)
test
mov
nop
(bad)
jp
and
sar
(bad)
(bad)
dec
inc
mov
adc
jnp
push
pop
mov
shl
push
mov
call
in
xchg
and
ret
or
inc
ja
aad
pop
cmp
pop
and
cmp
inc
shr
cmps
movs
sub
loop
dec
sbb
sub
hlt
push
or
inc
idiv
pop
mov
fwait
xchg
imul
hlt
jge
dec
std
add
dec
push
retf
(bad)
push
(bad)
sbb
in
mov
sar
add
dec
es
aas
or
out
or
jg
(bad)
call
nop
lea
stc
jne
ja
xlat
dec
sub
mov
inc
push
iret
mov
(bad)
popf
je
push
pusha
inc
and
leave
inc
sub
(bad)
(bad)
call
bnd
jl
push
dec
(bad)
stc
dec
xor
sbb
jmp
mov
jne
xchg
xor
test
fstp
sbb
ds
outs
pop
sub
addr16
lods
out
push
ror
mov
sbb
xor
loope
xchg
mov
leave
popf
(bad)
xor
mov
xchg
ja
(bad)
(bad)
(bad)
inc
sar
out
bound
shl
icebp
gs
stc
bound
cmc
sahf
push
and
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
cdq
jmp
inc
ja
addr16
pop
ficom
(bad)
(bad)
(bad)
push
aad
loop
push
rcr
cwde
mov
bound
jns
xor
movs
lods
call
std
mov
fs
and
push
lahf
inc
and
push
(bad)
(bad)
jmp
jbe
sub
(bad)
gs
fwait
(bad)
fisttp
xor
ret
test
inc
push
mov
adc
inc
sbb
xor
adc
(bad)
jmp
mov
jb
and
cmp
sbb
mul
outs
inc
xchg
(bad)
(bad)
push
or
xchg
xor
jle
push
nop
inc
ror
push
fnstcw
(bad)
(bad)
inc
fadd
or
pop
in
loopne
mov
xchg
(bad)
and
sbb
pop
cs
mov
push
push
out
mov
adc
xchg
push
adc
push
sbb
add
arpl
outs
out
sub
js
dec
jns
sbb
push
lahf
inc
jae
mov
or
mov
mov
cmp
(bad)
(bad)
call
daa
outs
(bad)
inc
mov
inc
std
inc
nop
lods
js
in
out
add
add
adc
(bad)
(bad)
(bad)
fcmovnu
adc
pop
(bad)
push
xor
call
dec
add
and
outs
fldcw
(bad)
call
popa
rcr
jmp
cs
and
shl
sbb
and
sbb
stos
dec
jecxz
idiv
pop
add
push
xchg
out
fisub
add
jl
xor
jecxz
mov
in
sub
pushf
jmp
(bad)
mov
xchg
sub
lods
jl
mov
mov
and
or
(bad)
(bad)
(bad)
(bad)
stc
shl
and
push
das
inc
add
not
xchg
sub
push
mov
rol
add
fld
(bad)
(bad)
(bad)
(bad)
jmp
mov
add
xchg
call
adc
dec
movs
pop
adc
ins
(bad)
(bad)
(bad)
inc
and
test
sub
rol
xchg
jmp
(bad)
(bad)
(bad)
jmp
sbb
leave
inc
sbb
ja
mov
mov
pop
call
dec
fnstcw
imul
push
fild
(bad)
(bad)
call
popf
push
or
shl
stc
and
sub
xchg
fist
jbe
jg
(bad)
cld
fsubrp
cmp
mov
jbe
(bad)
out
cli
jmp
loope
jno
xchg
pop
mov
jg
jecxz
lock
adc
(bad)
jmp
push
mov
scas
arpl
pop
cmp
in
xchg
push
inc
rcl
leave
mov
in
and
push
cld
xor
(bad)
(bad)
(bad)
cld
lea
clc
movs
scas
outs
aam
ret
and
pop
arpl
cmp
(bad)
pop
mov
(bad)
(bad)
(bad)
jmp
xchg
xor
sbb
bswap
or
jo
jmp
sbb
xchg
fcomip
push
fwait
(bad)
cmp
dec
daa
dec
aas
lock
and
cmc
bound
mov
jns
enter
(bad)
(bad)
(bad)
call
je
xlat
push
leave
test
sbb
mov
jmp
adc
mov
sbb
mov
(bad)
call
xor
idiv
mov
add
loop
mov
sub
xor
loope
(bad)
clc
(bad)
push
sub
scas
add
cmp
mov
outs
sahf
and
sbb
jg
inc
ror
inc
ret
out
jp
dec
mov
cmp
ror
xchg
(bad)
(bad)
(bad)
call
cmps
jne
mov
call
xor
inc
cmps
es
js
xor
icebp
cdq
sbb
(bad)
push
test
lahf
mov
dec
jmp
pop
sbb
pop
int
jo
sub
jecxz
jp
jecxz
(bad)
(bad)
(bad)
jmp
add
loope
mov
je
inc
(bad)
hlt
jmp
pop
lahf
(bad)
xlat
xlat
ja
and
hlt
fwait
(bad)
(bad)
call
test
mov
jns
push
js
in
mov
jbe
pop
jmp
out
std
sub
(bad)
call
inc
pushf
jns
cmps
pusha
push
jns
jb
call
(bad)
jg
add
xchg
leave
nop
cli
inc
cmp
sub
pop
repz
jmp
(bad)
(bad)
(bad)
dec
jo
loop
xor
inc
scas
pop
xor
es
mov
nop
icebp
retf
fwait
int
(bad)
(bad)
(bad)
(bad)
call
bound
inc
pop
xor
retf
mov
je
scas
adc
add
or
loopne
jl
pop
jecxz
sbb
(bad)
(bad)
bound
fist
call
adc
iret
sbb
call
in
cs
mov
in
ja
cmps
sbb
inc
iret
push
movs
jg
cli
call
push
call
mov
adc
inc
sbb
(bad)
(bad)
jmp
push
cmp
(bad)
clc
bound
leave
adc
dec
and
sbb
dec
call
shr
push
addr16
das
add
repnz
push
cs
aad
xlat
(bad)
(bad)
(bad)
fidivr
mov
add
jmp
(bad)
jb
(bad)
jmp
mov
ret
mov
xchg
and
sub
mov
(bad)
jmp
mov
mov
out
mov
cmp
pusha
je
xchg
fnsave
mov
ficom
xchg
xchg
jl
or
mov
or
out
and
inc
ror
(bad)
(bad)
(bad)
call
lods
int
cmps
ret
mov
cmp
adc
pushf
dec
mov
in
scas
cli
pop
jmp
(bad)
(bad)
(bad)
dec
add
cmp
fstp
dec
pop
jae
jge
retf
pop
stos
jmp
(bad)
(bad)
call
mov
stc
movs
lods
lods
pop
push
pop
mov
cld
rcl
call
and
mov
fnstenv
xor
movs
push
out
mov
(bad)
(bad)
(bad)
push
xchg
mov
in
popa
pop
rol
lds
sub
fstp
jg
dec
dec
stos
dec
std
mov
(bad)
push
aam
dec
inc
repnz
int
pop
push
ret
fst
sbb
xchg
data16
(bad)
jg
neg
dec
mov
add
scas
pop
pop
scas
cmp
in
(bad)
jmp
inc
push
je
inc
push
or
scas
cmp
sbb
push
addr16
imul
(bad)
(bad)
push
sub
int3
loope
adc
mov
sub
sbb
adc
jmp
jno
(bad)
(bad)
(bad)
call
dec
ret
popa
loopne
pop
stos
(bad)
inc
(bad)
shr
sbb
rcl
mov
stos
push
jge
(bad)
(bad)
(bad)
call
imul
das
push
push
mov
jb
ss
add
fs
scas
fst
sti
or
xor
mov
pop
hlt
jnp
fcomp
pop
outs
xlat
or
sub
(bad)
dec
add
mov
sar
xchg
icebp
(bad)
(bad)
(bad)
jmp
in
pusha
sub
xor
xchg
js
mov
dec
pusha
test
sub
pop
(bad)
(bad)
(bad)
dec
jns
jg
cs
xchg
cmp
pop
gs
lds
(bad)
fcom
out
(bad)
(bad)
(bad)
jmp
jecxz
ss
jns
in
retf
gs
jnp
mov
push
and
test
dec
(bad)
(bad)
(bad)
cmp
mov
fsubr
xor
mov
fnsave
adc
jbe
pop
(bad)
cmp
sbb
cmps
push
and
(bad)
loope
mov
(bad)
(bad)
jg
cmp
xchg
icebp
dec
mov
cld
or
or
sbb
jb
das
pop
mov
(bad)
push
inc
int3
pop
aam
icebp
repz
jb
inc
and
cmc
mov
sbb
jne
ud0
(bad)
push
mov
sbb
mov
ds
scas
dec
inc
cwde
retf
fistp
push
in
adc
das
push
lea
mov
out
xor
(bad)
(bad)
(bad)
ds
sti
stc
and
or
adc
xchg
adc
daa
xchg
jmp
aaa
jge
push
push
arpl
(bad)
jmp
push
dec
sub
imul
jo
and
xchg
test
(bad)
(bad)
jmp
sar
das
mov
xchg
cmp
inc
dec
pop
sbb
push
and
sub
(bad)
call
test
inc
or
and
jmp
sbb
jae
je
jmp
or
mov
(bad)
call
cs
ffree
mov
cmps
scas
push
or
mov
out
push
(bad)
sbb
in
(bad)
(bad)
(bad)
jmp
adc
push
cmps
ins
inc
adc
ret
dec
arpl
dec
sti
icebp
add
pop
and
(bad)
jmp
icebp
arpl
jb
dec
mov
mov
fwait
mov
(bad)
(bad)
call
(bad)
iret
xchg
xor
imul
xchg
ins
adc
loope
mov
sbb
test
xlat
inc
mov
inc
sub
xor
lock
ins
icebp
sub
mov
loope
jmp
rol
dec
xchg
fimul
xchg
pop
sub
xchg
aad
mov
(bad)
dec
mov
inc
pop
mov
mov
out
(bad)
in
(bad)
dec
ins
mov
mov
lea
pusha
cld
(bad)
pusha
bound
fisubr
pop
push
jns
xor
and
jmp
cmp
push
icebp
jo
fcomip
(bad)
(bad)
cli
mov
clc
sahf
add
dec
or
arpl
pop
stc
daa
mov
clc
jmp
add
jae
shl
inc
cmp
(bad)
jmp
(bad)
pop
add
push
loopne
mov
pop
iret
das
in
push
dec
xchg
imul
call
jge
xchg
or
loope
and
jmp
in
inc
mov
cmps
or
loope
hlt
call
inc
clc
fcomp
test
out
cli
sbb
push
sub
xchg
lds
int
sub
xor
cli
jb
jb
xor
retf
cmp
cmc
test
paddd
(bad)
push
jne
cmps
mov
in
xor
imul
out
mov
and
das
fdivr
sub
(bad)
jg
les
in
rcl
jnp
in
or
cmp
ds
stos
(bad)
(bad)
(bad)
call
mov
ss
int
pop
dec
mov
aaa
push
sti
(bad)
aad
fimul
(bad)
jg
ret
jb
jl
xchg
pop
or
cmps
push
movs
cmps
leave
aad
mov
iret
loope
or
(bad)
call
(bad)
mov
xor
sti
and
dec
jmp
sub
(bad)
cwde
sub
test
(bad)
jmp
lock
cmps
jl
(bad)
push
les
into
sbb
idiv
(bad)
out
xor
dec
vaddsubpd
xchg
lea
adc
loope
int
(bad)
(bad)
(bad)
out
xlat
in
cmc
dec
xor
jmp
adc
fdiv
fs
xchg
adc
lods
dec
scas
and
inc
mov
(bad)
(bad)
jnp
das
xor
or
push
push
cmps
push
push
or
das
rcl
je
add
jo
cwde
jbe
(bad)
(bad)
dec
jle
xchg
mov
xchg
jo
cmp
js
cmp
xchg
sti
inc
cdq
pop
scas
call
sbb
dec
ja
push
jle
fiadd
mov
(bad)
inc
mov
ja
mov
or
cmps
mov
mov
ret
test
clc
pop
nop
stos
add
push
jl
scas
(bad)
fwait
sbb
ja
(bad)
jmp
movs
mov
popf
arpl
pop
enter
loope
cli
test
inc
cld
bnd
fistp
(bad)
(bad)
(bad)
call
fisubr
cli
xchg
dec
xchg
lds
push
mov
aad
and
inc
(bad)
pop
icebp
ret
sbb
lock
call
ja
dec
mov
inc
push
xlat
mov
sbb
jecxz
(bad)
(bad)
(bad)
call
fdivrp
dec
das
pop
(bad)
mov
jle
pop
add
dec
lahf
scas
sbb
sbb
adc
leave
(bad)
(bad)
(bad)
(bad)
jmp
sbb
sub
int3
clc
and
push
sub
lock
cmp
and
call
dec
push
cli
cld
sbb
popf
loopne
sub
mov
ud0
mov
push
mov
cdq
xchg
es
(bad)
(bad)
dec
mov
in
inc
push
xchg
shr
add
sahf
outs
cld
(bad)
mov
and
add
(bad)
(bad)
call
xor
out
fst
mov
jl
mov
push
pop
jbe
mov
fdivr
push
and
push
ret
jnp
dec
ret
or
es
(bad)
(bad)
inc
push
xchg
inc
ss
jbe
adc
xchg
retf
jns
cmc
cwde
sbb
out
pop
test
ret
jo
stos
(bad)
(bad)
(bad)
push
push
dec
outs
in
pop
imul
or
ja
gs
sub
sar
outs
mov
enter
(bad)
(bad)
push
pop
repnz
mov
add
(bad)
enter
mov
dec
fst
(bad)
(bad)
(bad)
jmp
dec
mov
fs
sub
add
and
jl
jo
mov
mov
(bad)
(bad)
(bad)
call
pop
aad
add
fwait
cmps
ficom
loop
xchg
mov
sahf
aam
imul
(bad)
jmp
jb
(bad)
repz
movs
(bad)
inc
mov
dec
imul
or
cld
(bad)
(bad)
jmp
xor
shr
popa
mov
add
adc
mov
push
adc
push
jp
shl
shl
push
or
or
aad
cmp
xlat
(bad)
inc
mov
xor
sti
push
repz
mov
or
(bad)
(bad)
inc
sbb
pop
add
and
xor
scas
mov
mov
push
out
xchg
(bad)
(bad)
inc
and
adc
mov
shl
mov
retf
mov
(bad)
(bad)
call
jmp
adc
and
mov
call
(bad)
(bad)
(bad)
jns
cld
push
push
enter
stos
in
inc
mov
mov
inc
scas
fwait
xchg
ret
sahf
add
pop
sti
add
pop
(bad)
(bad)
(bad)
jmp
mov
and
leave
fcomip
or
add
jnp
and
push
les
aam
dec
cmp
(bad)
(bad)
jmp
fnsave
and
sub
push
fadd
pushfw
dec
mov
jmp
cli
inc
or
jecxz
jle
and
mov
cmps
xchg
cld
(bad)
(bad)
jg
repnz
test
sbb
popa
mov
les
shl
(bad)
(bad)
call
dec
or
mov
add
sbb
mov
shl
(bad)
out
ret
(bad)
(bad)
(bad)
call
stos
mov
xchg
or
dec
jne
cwde
xchg
mov
je
les
cmp
or
(bad)
(bad)
call
mov
mov
push
dec
lods
dec
neg
jb
pop
xchg
and
xchg
ds
sar
adc
dec
add
or
and
int
inc
into
sbb
call
rol
add
icebp
inc
or
pop
xchg
call
(bad)
(bad)
(bad)
cmp
fisubr
mov
out
mov
jne
rcl
and
and
or
jmp
mov
cdq
pop
(bad)
in
push
std
lods
jg
pushf
loopne
mov
jmp
fld
dec
in
loope
clc
call
inc
lahf
sbb
and
(bad)
(bad)
(bad)
mov
fld
retf
and
sub
int
iret
jecxz
xchg
mov
(bad)
(bad)
(bad)
jmp
mov
retf
jo
mov
cmp
sti
mov
ins
add
xchg
add
imul
or
(bad)
push
xchg
test
ret
(bad)
sub
scas
jns
add
repz
(bad)
(bad)
push
jnp
dec
jbe
dec
out
pushf
push
dec
mov
pop
call
xchg
dec
mov
(bad)
(bad)
(bad)
dec
or
sub
mov
dec
dec
dec
mov
fst
or
(bad)
(bad)
jmp
sbb
pusha
aam
dec
lds
or
jmp
loopne
mov
xor
das
sar
jl
pop
inc
test
adc
mov
mov
loop
lock
ret
(bad)
(bad)
(bad)
push
outs
jnp
ret
sti
inc
and
jnp
mov
and
repnz
add
xor
(bad)
(bad)
(bad)
dec
enter
pushf
mov
dec
pop
in
push
cdq
cld
aas
hlt
mov
push
push
in
imul
(bad)
jmp
mov
mov
(bad)
lock
stc
adc
xchg
inc
or
pop
repz
sbb
push
push
(bad)
(bad)
(bad)
(bad)
jnp
add
movs
popf
cdq
arpl
cmps
(bad)
cmp
inc
sbb
mov
cwde
scas
fdivr
out
clc
jmp
repz
stc
jae
fldenv
cmp
and
(bad)
call
jb
lods
into
mov
jecxz
int
imul
mov
xchg
mov
inc
(bad)
mov
dec
mov
lods
test
and
jp
(bad)
and
cmp
ret
out
mov
rcr
cmp
sub
sbb
cmp
(bad)
call
pop
pop
fst
stos
ins
fcom
stos
arpl
jge
dec
cmps
aam
fimul
xchg
push
or
(bad)
(bad)
(bad)
stc
out
lods
sahf
ins
mov
sbb
fidiv
xchg
sbb
iret
test
(bad)
(bad)
(bad)
jmp
xchg
lods
cld
xor
jg
addr16
cmp
ret
rcr
jb
ds
iret
dec
iret
(bad)
(bad)
jmp
cli
(bad)
inc
stos
jl
shl
xor
jne
ins
inc
mov
not
in
fwait
(bad)
(bad)
gs
inc
mov
push
fcom
ss
fist
(bad)
(bad)
jmp
lea
sbb
or
nop
lock
pop
add
jmp
jb
add
(bad)
(bad)
std
and
out
mov
mov
fadd
xchg
aam
std
add
(bad)
(bad)
(bad)
inc
push
gs
xchg
cs
test
das
and
cmp
aas
sub
or
scas
ins
(bad)
(bad)
(bad)
push
xchg
fcomp
imul
maxps
pop
mov
inc
xchg
or
loopne
std
jmp
xchg
pushf
jecxz
dec
retf
pop
adc
cs
mov
mov
(bad)
mov
and
(bad)
mov
mov
neg
pop
in
call
dec
sahf
popa
jns
js
shl
or
adc
ins
ja
ja
xchg
cmp
mov
mov
mov
sahf
push
xchg
push
les
jne
stos
mov
(bad)
inc
add
jmp
and
pusha
push
jmp
jg
xchg
cmps
imul
adc
add
aas
mov
(bad)
sti
ja
pop
(bad)
(bad)
(bad)
(bad)
in
jo
cs
mov
repz
push
push
cdq
into
adc
ret
cdq
inc
(bad)
js
and
adc
popa
scas
push
jg
(bad)
dec
lock
(bad)
fsubr
mov
(bad)
mov
cli
outs
cli
dec
mov
or
cmps
sbb
rep
inc
and
sub
nop
(bad)
(bad)
jmp
xor
imul
(bad)
or
or
(bad)
xor
rsm
push
clc
loope
scas
clc
call
int3
xor
stc
das
add
retf
and
leave
push
test
mov
sahf
mov
pop
loopne
xor
and
mov
pushf
jb
jmp
add
push
inc
mov
lods
pop
sbb
mov
mov
(bad)
pop
sbb
fwait
jge
(bad)
(bad)
(bad)
call
lock
rol
(bad)
xchg
mov
popa
xor
fidiv
inc
out
add
lea
dec
cdq
add
(bad)
dec
dec
shl
aam
xchg
mov
xchg
in
mov
inc
ret
cs
jg
(bad)
dec
mov
sub
loop
std
aam
(bad)
stos
mov
xchg
add
and
(bad)
mov
icebp
(bad)
(bad)
dec
adc
call
sbb
jmp
loop
adc
mov
xchg
mov
xchg
(bad)
fist
cmps
and
push
jl
dec
xchg
(bad)
(bad)
(bad)
jmp
scas
sub
dec
adc
mov
daa
adc
jno
ja
jg
int3
sub
loopne
call
xor
call
jmp
aas
fwait
enter
in
retf
(bad)
(bad)
(bad)
(bad)
jge
push
nop
jnp
test
push
or
ret
jge
mov
sub
dec
adc
(bad)
(bad)
(bad)
(bad)
inc
jp
pop
imul
or
test
cmp
mov
dec
push
mov
call
or
push
inc
xchg
das
out
aas
je
fisub
inc
xchg
outs
xlat
call
cmc
(bad)
jmp
cs
loopne
call
je
(bad)
cwde
mov
jb
(bad)
(bad)
jmp
daa
cli
(bad)
xchg
cmp
lahf
test
or
pop
pop
sub
jns
inc
push
aad
sub
add
or
outs
and
loop
or
int
(bad)
(bad)
ffreep
syscall
jns
pop
lahf
rol
sbb
cmp
or
mov
inc
push
pushf
push
and
jo
xor
(bad)
(bad)
(bad)
(bad)
call
iret
add
push
xor
inc
push
rol
test
xchg
add
movs
xor
(bad)
(bad)
jmp
xchg
and
mov
push
push
xchg
mov
fidiv
adc
outs
dec
adc
dec
(bad)
(bad)
(bad)
mov
inc
rol
push
dec
stos
and
(bad)
jnp
adc
jne
hlt
cmps
out
(bad)
(bad)
(bad)
dec
and
jno
(bad)
and
div
aas
dec
gs
xor
push
loop
pop
(bad)
(bad)
(bad)
push
push
inc
mov
mov
push
jo
out
pop
add
pop
mov
sbb
fwait
and
mov
(bad)
(bad)
js
int3
int3
into
xchg
inc
pop
shl
mov
stc
mov
xchg
mov
mov
(bad)
jmp
and
mov
and
xor
outs
xchg
cdq
out
pop
ss
lahf
daa
mov
(bad)
push
dec
fxch
xor
push
jo
rcr
les
or
mov
aas
mov
(bad)
(bad)
dec
jnp
aaa
les
fsubr
lds
sub
xlat
jns
fdiv
or
(bad)
(bad)
call
push
shl
sti
das
in
enter
xlat
bound
iret
jmp
in
bound
scas
inc
rcl
(bad)
jmp
aas
in
sar
fdiv
push
jae
jmp
mov
js
dec
sub
cmp
mov
je
scas
dec
xor
and
(bad)
(bad)
jmp
test
mov
jbe
mov
jmp
lahf
fwait
jecxz
out
dec
sti
jo
cmp
(bad)
(bad)
jmp
ret
mov
fldl2e
inc
shr
sahf
adc
jp
jne
xlat
sar
iret
(bad)
(bad)
mov
into
repz
and
jbe
add
pop
test
pop
(bad)
(bad)
(bad)
jmp
cmps
mov
sub
xchg
mov
into
add
fidivr
mov
xor
(bad)
(bad)
dec
dec
mov
inc
mov
adc
cmp
xor
(bad)
dec
sub
lds
gs
int
scas
sbb
and
pushf
ss
(bad)
(bad)
(bad)
(bad)
sub
fidiv
dec
loope
out
and
lea
popa
pop
sbb
(bad)
(bad)
(bad)
mov
jecxz
inc
ror
nop
xchg
(bad)
push
scas
lahf
in
aad
fidivr
ss
xlat
ret
jb
(bad)
(bad)
push
sbb
add
lahf
stc
out
mov
inc
jl
pusha
imul
mov
(bad)
dec
xchg
xchg
mov
hlt
call
mov
xor
scas
in
(bad)
(bad)
(bad)
jmp
jbe
jae
(bad)
or
sub
mov
ins
pushf
mov
cld
dec
call
jnp
(bad)
(bad)
call
ret
in
pop
pop
sti
jnp
push
mov
mov
jl
push
inc
ss
(bad)
call
jl
outs
mov
and
sub
js
lahf
(bad)
ja
(bad)
(bad)
mov
mov
iret
adc
dec
fwait
jp
push
outs
js
fild
(bad)
(bad)
(bad)
jmp
mov
outs
push
call
jno
ds
and
push
pop
mov
add
std
call
hlt
push
cmp
dec
dec
lea
xchg
push
and
cs
(bad)
(bad)
(bad)
jmp
xchg
and
jne
adc
popa
xor
mov
inc
stos
sbb
hlt
xchg
es
dec
mov
dec
mov
adc
jmp
add
add
push
loopne
push
sti
or
sub
push
cld
mov
jge
(bad)
(bad)
inc
add
pop
test
mov
rol
push
and
or
sub
jg
mov
jae
mov
dec
outs
dec
pushf
out
js
mov
(bad)
fcomip
fdivr
cdq
scas
adc
adc
cmp
mov
and
mov
(bad)
mov
jno
imul
stos
(bad)
call
lods
pop
inc
outs
pop
lds
pop
(bad)
adc
ins
cmp
cmp
push
jae
(bad)
(bad)
jmp
mov
sub
push
scas
mov
fbld
jmp
mov
(bad)
(bad)
(bad)
(bad)
fist
fcomp
adc
rcr
push
mov
jbe
nop
mov
(bad)
(bad)
(bad)
jmp
fwait
push
pop
jp
rcr
mov
push
push
fld
mov
ins
(bad)
push
(bad)
(bad)
(bad)
call
loope
pop
lock
mov
out
cmp
mov
aad
dec
pop
es
pushf
sub
(bad)
(bad)
jmp
pop
lea
xchg
mov
mov
(bad)
push
and
xchg
xor
jbe
(bad)
(bad)
call
jae
mov
jno
lods
cld
mov
dec
mov
shl
call
pop
xor
pop
mov
dec
sti
dec
mov
xchg
push
pop
mov
iret
xchg
rol
or
push
adc
loop
or
mov
mov
gs
pop
jg
leave
pop
es
scas
push
mov
pop
sahf
mov
call
idiv
add
cmp
push
cmp
add
push
jns
(bad)
call
adc
out
repnz
sub
xor
(bad)
out
or
outs
ret
xchg
xchg
and
(bad)
in
mov
push
les
dec
std
sbb
jns
jge
pop
xchg
inc
add
dec
(bad)
mov
sub
mov
movs
(bad)
jg
inc
inc
and
sbb
lods
sbb
in
aaa
mov
adc
and
es
fstp
sbb
xchg
push
(bad)
push
dec
jmp
sbb
add
jbe
fnsave
or
push
dec
test
(bad)
ret
lods
cmc
dec
ret
jae
xchg
sbb
xchg
out
dec
mov
call
cmp
int
cmp
cmp
mov
stos
and
fwait
pusha
int3
sbb
mov
inc
(bad)
aas
scas
(bad)
call
xchg
pop
push
adc
xlat
out
aas
jmp
inc
and
cdq
and
jns
dec
push
mov
(bad)
(bad)
(bad)
push
in
xchg
inc
pushf
sbb
mov
out
sub
and
jbe
jns
daa
(bad)
sbb
loopne
(bad)
(bad)
(bad)
push
push
sub
scas
xor
jns
icebp
mov
in
(bad)
test
xlat
ins
dec
(bad)
(bad)
(bad)
dec
lods
ins
div
in
sub
and
scas
dec
stos
mov
jns
lock
dec
mov
dec
je
sbb
mov
xor
ins
gs
dec
dec
and
aam
sar
aad
xor
push
(bad)
jg
inc
push
adc
jge
sbb
mov
in
sub
lds
(bad)
(bad)
(bad)
jmp
jno
sbb
test
jle
inc
shr
cmps
cmp
fld
push
imul
cmp
push
fnsave
(bad)
(bad)
(bad)
(bad)
mov
or
mov
iret
test
pop
leave
pop
mov
in
mov
dec
ret
inc
cmp
(bad)
cli
in
loope
outs
aad
and
sbb
ror
push
add
jnp
(bad)
jmp
xchg
iret
jl
push
jge
jge
cmc
xlat
fadd
mov
and
enter
pop
std
adc
ret
dec
jne
mov
fwait
iret
stos
pop
or
(bad)
(bad)
dec
icebp
fwait
loop
inc
mov
in
sahf
mov
lea
lods
pop
pop
test
add
push
cmps
jmp
mov
clc
cmp
mov
mov
mov
div
jle
and
(bad)
(bad)
jmp
dec
or
sbb
xchg
inc
mov
imul
icebp
add
sub
call
add
xor
sbb
jae
fwait
sbb
cmps
loop
jl
fldcw
mov
(bad)
(bad)
jnp
mov
mov
leave
pushf
pop
test
cmp
aas
push
inc
loop
xchg
(bad)
(bad)
(bad)
ds
cmp
call
push
arpl
xor
in
out
jns
cdq
and
adc
mov
(bad)
(bad)
jmp
xlat
mov
dec
or
rcr
neg
(bad)
test
push
sahf
sub
shr
inc
dec
add
mov
inc
(bad)
sti
loop
xor
push
xor
cmp
popa
mov
mov
loopne
outs
cli
adc
test
add
stc
cmp
(bad)
(bad)
call
cli
imul
mov
sub
outs
sub
jg
popf
mov
xchg
push
(bad)
(bad)
(bad)
inc
gs
cld
imul
loop
cld
dec
fisubr
clc
jge
xor
stos
ret
stos
(bad)
(bad)
(bad)
(bad)
cmp
jnp
es
jl
loope
pop
or
push
cli
mov
in
ret
sbb
jno
cdq
outs
movs
rol
pavgw
mov
pusha
push
pop
xor
imul
or
mov
(bad)
(bad)
dec
ror
aad
stc
mov
add
repnz
mov
cli
xchg
cmp
loope
outs
lahf
sti
adc
jge
add
add
cmp
fdivr
push
inc
mov
aaa
mov
sub
sti
shl
jg
data16
lods
cmc
(bad)
(bad)
jmp
cmp
call
aaa
push
call
shl
and
sbb
cmp
(bad)
jmp
pop
sub
retf
test
addr16
(bad)
(bad)
inc
and
out
leave
ss
cmp
cwde
outs
or
jb
mov
and
loopne
inc
adc
push
daa
adc
inc
(bad)
(bad)
call
pop
mov
mov
dec
push
arpl
inc
mov
daa
xchg
sub
mov
(bad)
(bad)
(bad)
inc
sbb
fdiv
jno
jnp
lahf
xor
dec
retf
push
pushf
mov
jg
(bad)
jmp
test
xor
repnz
cmp
ror
adc
cdq
in
aas
sub
in
js
loop
cmp
cmc
test
sahf
(bad)
(bad)
(bad)
call
jne
loope
mov
mov
cmps
or
lahf
adc
jno
popa
jns
ins
jmp
xchg
cmp
stc
fadd
adc
test
enter
mov
scas
xor
out
add
or
in
or
(bad)
(bad)
(bad)
jmp
pop
in
pop
and
mov
jnp
inc
add
jmp
lds
mov
(bad)
(bad)
(bad)
inc
adc
or
in
imul
sub
mov
jne
xor
icebp
sbb
(bad)
(bad)
(bad)
mov
mov
push
or
push
mov
push
dec
adc
mov
xor
jno
(bad)
jmp
fistp
mov
icebp
mov
sub
or
call
(bad)
push
jle
mov
stos
mov
sub
pop
pop
and
push
addr16
in
(bad)
dec
into
sar
dec
iret
into
xchg
popf
lods
mov
add
dec
divps
fwait
call
(bad)
cmp
pop
in
pop
mov
dec
dec
mov
into
repnz
mov
fwait
(bad)
(bad)
(bad)
jmp
cli
or
jp
test
and
mov
jmp
ins
xchg
cs
ja
pop
sub
dec
fdivr
pop
or
into
pop
rcl
push
pop
lea
xchg
(bad)
(bad)
(bad)
jmp
sub
(bad)
out
rcl
dec
pop
mov
ret
or
(bad)
call
imul
jl
out
(bad)
das
(bad)
pop
aam
sub
jne
sub
and
add
call
dec
inc
pop
xchg
fidivr
and
adc
stc
mov
inc
mov
push
(bad)
hlt
xor
(bad)
push
aam
cmp
out
dec
dec
paddw
push
mov
(bad)
pushf
stos
dec
loop
mov
std
pop
push
and
(bad)
jmp
popf
or
in
mov
dec
shl
inc
jg
pop
mov
pushf
jmp
adc
dec
not
fucomip
mov
mov
push
dec
fmul
xor
sbb
jae
(bad)
(bad)
call
cdq
push
inc
cmc
add
test
xchg
in
add
xor
sub
pop
xor
(bad)
(bad)
dec
mov
(bad)
dec
call
or
out
mov
or
aaa
std
xor
inc
push
ins
fld
bnd
out
int
stc
popa
retf
std
(bad)
(bad)
(bad)
jle
dec
shl
call
cmp
xor
hlt
dec
fnstcw
mov
push
pop
fisub
pop
loop
stos
jge
xchg
scas
(bad)
(bad)
jmp
inc
mov
js
xchg
mov
push
retf
push
pop
push
jne
repnz
fwait
popf
jns
cmp
xchg
inc
call
div
inc
push
in
frstor
jmp
push
call
pop
in
jns
ins
push
pop
cdq
loop
jb
ins
pop
pop
jne
(bad)
(bad)
(bad)
jmp
sub
xor
out
stc
dec
out
sub
mov
inc
(bad)
xor
(bad)
jmp
or
ret
enter
or
xchg
jne
int3
push
adc
pusha
(bad)
cmp
add
(bad)
cmp
popa
add
call
cmc
jns
nop
jmp
jbe
inc
and
ret
(bad)
(bad)
call
jmp
stc
or
(bad)
cli
pop
dec
cmp
mov
push
dec
jnp
and
lock
call
cmps
jno
mov
adc
mov
xchg
and
pop
push
std
pop
cmp
add
ja
out
fidivr
pusha
sbb
nop
mov
push
mov
dec
fdiv
jns
dec
call
ret
and
scas
or
jb
(bad)
(bad)
push
cmp
std
dec
add
pcmpgtw
fcom
call
bnd
mov
push
xchg
and
(bad)
and
or
inc
enter
dec
aaa
sbb
cmp
ins
(bad)
(bad)
jg
mov
inc
cmp
mov
inc
sub
sbb
mov
pop
xchg
inc
mov
add
(bad)
(bad)
jmp
mov
inc
jns
jmp
pop
(bad)
sub
and
sub
icebp
xchg
(bad)
dec
dec
in
shr
push
sub
mov
adc
popf
xor
jle
gs
push
mov
jmp
das
pop
sub
sbb
adc
lods
xchg
cmps
rol
(bad)
mov
aad
cmp
loop
xchg
shl
fcom
sbb
(bad)
in
adc
call
fwait
mov
cwde
mov
push
in
outs
retf
inc
xchg
or
push
push
jo
xchg
int
dec
(bad)
das
mov
ds
bound
mov
push
(bad)
out
imul
fiadd
push
push
(bad)
(bad)
(bad)
dec
in
dec
fcmovnbe
lock
jb
push
and
(bad)
fstp
test
xor
retf
aas
jmp
(bad)
sub
sbb
loop
pop
dec
shl
or
int3
(bad)
(bad)
(bad)
jmp
jge
outs
mov
stos
(bad)
mov
push
pop
adc
mov
dec
enter
(bad)
jmp
imul
mov
ds
mov
mov
rcr
call
cld
mov
pop
cmp
popa
sub
add
push
in
popa
pop
out
(bad)
call
and
or
push
push
mov
mov
xchg
fiadd
dec
out
dec
pop
dec
xchg
dec
cmps
xor
xor
hlt
jg
sbb
sar
mov
bound
(bad)
(bad)
(bad)
dec
cmp
stos
sub
inc
(bad)
aad
call
sub
and
stc
inc
repnz
call
(bad)
in
shl
dec
and
outs
mov
fbld
repz
adc
les
dec
ins
jne
push
addr16
das
mov
rcr
clc
cmp
bnd
or
cli
jae
dec
(bad)
jns
push
adc
add
call
pop
push
sub
xlat
mov
std
jmp
xchg
pop
push
pop
add
out
xor
(bad)
(bad)
call
aam
je
inc
clc
data16
pop
clc
test
sbb
mov
xchg
push
mov
(bad)
jg
jno
jb
mov
clc
dec
scas
movs
in
xor
push
jge
mov
and
mov
(bad)
(bad)
fwait
imul
mov
mov
pop
push
mov
(bad)
jmp
ins
mov
push
add
out
mov
mov
aaa
push
cmps
mov
(bad)
push
inc
iret
lahf
fidivr
sahf
iret
out
cs
fstp
aaa
and
in
xor
dec
fdiv
cmp
out
or
(bad)
jmp
ror
in
or
lds
scas
daa
jg
and
cmp
(bad)
(bad)
call
ret
mov
(bad)
sti
pop
pop
xchg
retf
fstp
lahf
lods
mov
xor
ret
add
add
mov
or
xchg
mov
pop
(bad)
call
std
(bad)
(bad)
(bad)
inc
loopne
adc
fmul
xchg
aam
pop
out
fwait
ja
mov
dec
(bad)
lods
fst
cwde
mov
xor
(bad)
mov
lds
scas
mov
or
call
call
test
cmp
ficomp
xor
push
shl
loop
in
jle
pushf
loopne
lea
cmp
adc
addr16
(bad)
dec
push
sub
js
movs
mov
aad
mov
(bad)
or
std
xchg
xlat
sub
(bad)
out
mov
push
movs
inc
jmp
call
mov
cmc
out
fild
cmp
(bad)
(bad)
inc
adc
out
cld
loop
cmp
out
(bad)
ret
cs
cmps
shr
test
xchg
daa
fs
add
jmp
and
cmc
push
enter
jle
mov
pop
std
call
mov
popf
clc
push
(bad)
data16
inc
sbb
mov
adc
adc
mov
imul
mov
pusha
push
add
sbb
xor
lds
inc
pop
imul
xor
mov
mov
(bad)
(bad)
(bad)
(bad)
cmp
cdq
loop
pop
and
lea
add
pushf
xchg
xor
cmp
jecxz
jns
jmp
push
jnp
cs
push
leave
fild
push
in
cmp
pop
(bad)
fdivr
aas
mov
mov
pop
and
lock
movs
sbb
popa
cs
loopne
(bad)
(bad)
jg
rcr
mov
jbe
jl
mov
jecxz
and
int3
dec
jl
fbld
push
jno
push
mov
cmp
js
pxor
(bad)
(bad)
(bad)
(bad)
fsqrt
or
mov
or
push
or
or
sti
mov
stos
retf
ds
lds
push
(bad)
(bad)
jl
jne
jp
leave
sti
adc
cmp
xlat
pushf
js
push
adc
in
aaa
(bad)
(bad)
(bad)
push
pop
dec
shl
cmps
inc
mov
push
cdq
adc
add
pop
xchg
mov
add
clc
(bad)
push
ffree
inc
push
adc
pop
outs
pop
out
mov
repnz
pop
fs
push
hlt
icebp
push
jmp
enter
rcl
cmc
cmp
lahf
dec
sbb
pop
(bad)
(bad)
push
jbe
lods
std
xchg
mov
clc
adc
jmp
mov
test
out
(bad)
(bad)
(bad)
jmp
or
(bad)
mov
movs
cli
sti
arpl
call
mov
inc
push
test
(bad)
push
jb
adc
mov
in
sub
test
test
cmps
inc
xchg
(bad)
(bad)
(bad)
dec
aad
fst
mov
mov
mov
call
mov
(bad)
(bad)
jg
add
cs
sbb
add
ret
into
jae
xor
push
leave
mov
je
(bad)
cmp
dec
pop
fidiv
cmc
lea
mov
repnz
(bad)
(bad)
(bad)
xor
mov
and
into
sbb
jge
addr16
aaa
inc
push
push
fmul
inc
(bad)
daa
psrad
jns
pop
sub
out
js
xchg
xor
hlt
xor
cmp
jg
push
xor
inc
sub
test
pop
add
enter
scas
rcl
call
push
or
lahf
sti
sub
aad
and
sbb
ror
or
xor
(bad)
(bad)
(bad)
jmp
sub
push
mov
mov
sub
jno
mov
icebp
loop
dec
loope
lds
(bad)
mov
xchg
sti
ins
les
bound
(bad)
(bad)
(bad)
cmp
dec
mov
add
cmp
pop
aaa
sbb
jl
or
(bad)
(bad)
jg
push
outs
cdq
and
pop
shl
xchg
jmp
int
sub
jmp
addr16
jg
jg
xor
(bad)
(bad)
xchg
inc
shr
xor
mov
fst
(bad)
call
in
xchg
daa
mov
cli
and
es
enter
dec
(bad)
(bad)
(bad)
(bad)
call
addr16
xchg
les
fistp
adc
dec
pusha
jnp
sbb
(bad)
(bad)
call
test
ss
jnp
mov
fs
pop
lods
mov
adc
pop
push
dec
pop
ficom
loope
repz
adc
adc
inc
add
ins
nop
or
(bad)
(bad)
(bad)
mov
sbb
shr
ret
push
dec
test
jecxz
rcr
dec
jo
bound
les
sbb
mov
mov
adc
scas
test
ja
xchg
ins
xlat
cmp
icebp
fld
arpl
(bad)
(bad)
(bad)
inc
test
mov
inc
xchg
addr16
push
dec
in
cmp
push
xor
push
aas
mov
push
mov
push
mul
outs
mov
test
pop
das
jge
clc
inc
cmc
out
cli
dec
stos
lahf
sub
inc
mov
es
gs
sub
cmp
xchg
test
(bad)
(bad)
(bad)
pushf
jg
push
test
and
jb
lock
(bad)
(bad)
(bad)
(bad)
jmp
mov
(bad)
mov
mov
gs
xor
aad
bound
ds
(bad)
(bad)
push
mov
test
ja
scas
pop
push
mov
push
shl
shl
std
and
clc
add
adc
call
imul
cwde
push
and
add
push
fisttp
je
test
(bad)
(bad)
jg
push
or
cwde
add
mov
push
or
dec
arpl
fisubr
mov
test
add
repz
(bad)
(bad)
dec
add
in
and
loopne
in
mov
mov
fsub
cmp
int
push
shl
sti
jg
inc
xor
mov
xor
lods
and
or
push
ins
mov
(bad)
jg
dec
xchg
fldcw
and
add
repnz
jle
dec
bound
rol
rol
mov
inc
add
pop
loop
aad
pushf
sbb
(bad)
(bad)
call
arpl
es
lahf
jno
xchg
jae
pushf
cli
fadd
(bad)
xor
(bad)
(bad)
(bad)
call
dec
sub
das
mov
mov
sbb
rcr
(bad)
mov
mov
test
mov
popf
cmp
lock
(bad)
(bad)
fisub
sub
ret
rcr
xor
dec
or
jb
jl
call
dec
test
mov
adc
imul
aam
stc
out
ins
loope
std
(bad)
call
cvttps2pi
push
fidivr
fld1
mov
pop
int3
outs
loopne
ror
(bad)
(bad)
(bad)
call
int
shl
cmc
fidiv
sti
outs
sub
pop
push
cs
ins
add
jmp
xlat
(bad)
dec
shr
xor
repnz
push
lahf
shl
call
mov
cwde
imul
cli
int3
arpl
inc
ins
stos
jg
(bad)
call
adc
jg
cmp
adc
mov
pop
bound
stos
dec
fidiv
push
cmp
in
cld
js
out
and
(bad)
(bad)
(bad)
(bad)
fsubr
movs
inc
imul
and
inc
das
inc
dec
test
ins
push
xchg
rcr
ror
or
in
lock
dec
cmps
mov
push
or
inc
fsub
dec
(bad)
idiv
pop
clc
lea
pmulhw
ret
add
cli
sub
mov
cmp
(bad)
clc
(bad)
(bad)
call
mov
fistp
scas
hlt
dec
repnz
xchg
add
jo
iret
mov
jp
inc
push
pop
repz
pusha
call
scas
pop
add
lahf
mov
xor
jle
lock
shl
test
xor
xlat
ret
dec
movs
sub
bound
push
pop
mov
pop
or
push
jmp
ins
xchg
inc
test
(bad)
(bad)
dec
in
aaa
scas
cdq
mov
and
jo
mov
adc
jae
jno
(bad)
(bad)
jg
mov
add
jmp
bound
pop
sbb
adc
xchg
adc
jg
call
sub
aas
inc
movs
mov
dec
jecxz
ror
xor
add
(bad)
(bad)
push
xchg
push
sbb
xorps
loope
or
xor
call
push
jl
call
jns
fcmovu
out
xchg
pop
addr16
inc
jmp
adc
mov
sbb
shl
(bad)
scas
(bad)
(bad)
jmp
xchg
xor
mov
test
jo
mov
mov
or
in
ins
jns
adc
test
jg
popf
loop
xchg
ret
dec
inc
and
(bad)
(bad)
jmp
xchg
arpl
out
lock
movs
mov
adc
mov
cmp
jmp
(bad)
inc
mov
popa
jmp
(bad)
adc
lods
inc
inc
mov
cmp
add
(bad)
(bad)
pop
xchg
clc
fisubr
dec
idiv
pop
dec
dec
in
enter
add
(bad)
inc
push
arpl
arpl
pop
adc
icebp
std
dec
jo
das
movs
scas
in
add
or
dec
ja
lods
lahf
dec
adc
adc
(bad)
(bad)
call
mov
fcomp
icebp
cmp
scas
fild
inc
jnp
xchg
(bad)
in
sbb
(bad)
inc
lods
inc
rol
sbb
imul
mov
cs
rcl
jo
cld
call
push
jmp
scas
cli
(bad)
inc
ja
pop
adc
push
inc
xor
xchg
ins
aam
xchg
out
(bad)
(bad)
(bad)
push
jle
inc
std
fcom
mov
dec
cs
in
inc
mov
pop
aad
add
and
sub
in
icebp
test
sub
dec
or
scas
dec
sub
test
dec
shr
(bad)
pop
dec
xor
mov
rcl
(bad)
inc
loope
inc
inc
icebp
(bad)
outs
jno
dec
sub
adc
popa
push
xchg
mov
jns
rcr
mov
(bad)
jmp
loop
adc
sbb
(bad)
jmp
xor
pop
hlt
(bad)
push
(bad)
out
enter
adc
mov
mov
lahf
pop
xchg
adc
xchg
(bad)
(bad)
(bad)
call
add
sub
sub
cmps
sbb
in
scas
popf
mov
pop
imul
(bad)
dec
pusha
xchg
inc
jbe
(bad)
out
adc
mov
test
test
push
mov
fild
and
(bad)
(bad)
call
call
data16
xlat
xor
sub
adc
iretw
cmp
cmp
sbb
xor
jmp
ja
jp
pop
clc
inc
inc
push
add
mov
daa
jno
fldcw
loopne
sti
jne
xchg
xor
xchg
fdivr
(bad)
inc
fsubp
pop
(bad)
ss
push
in
pop
retf
(bad)
stos
sub
add
call
jmp
and
or
data16
cli
xchg
fbld
push
sbb
fucomp
sub
movs
mov
mov
out
outs
mov
add
cmp
pop
loopne
lods
shr
aam
adc
xor
fstp
mov
mov
dec
mov
sar
outs
pop
sbb
in
ins
or
mov
xchg
(bad)
(bad)
(bad)
(bad)
jmp
or
imul
popa
(bad)
(bad)
and
out
pop
daa
enter
adc
(bad)
(bad)
mov
sub
enter
or
cld
fmul
ds
or
mov
(bad)
(bad)
push
inc
mov
enter
sbb
movs
aam
ja
mov
jl
movaps
adc
jp
(bad)
(bad)
(bad)
inc
xor
movs
push
add
jmp
(bad)
lock
mov
pop
mov
and
dec
xor
mov
call
daa
shr
arpl
les
sub
mov
adc
or
(bad)
(bad)
jmp
fnstsw
imul
jne
test
cs
push
mov
div
aam
(bad)
(bad)
(bad)
inc
enter
out
jg
xchg
mov
sbb
(bad)
lock
call
(bad)
(bad)
(bad)
jmp
sub
mov
inc
sub
ret
xor
fist
fs
ins
or
(bad)
or
jmp
xor
mov
mov
pop
(bad)
(bad)
(bad)
fistp
mov
movs
loop
mov
pop
rol
or
sbb
fdivrp
(bad)
(bad)
(bad)
fisubr
adc
into
(bad)
fisub
pop
jle
pushf
(bad)
stc
sti
cmp
imul
out
push
inc
fxch
mov
xchg
adc
rcl
jmp
sub
push
int3
call
fdiv
es
cmps
sbb
sti
xor
js
fwait
popf
and
sbb
mov
(bad)
pusha
rcl
(bad)
(bad)
(bad)
push
inc
add
fidiv
xchg
pop
push
unpckhps
inc
movs
mov
test
test
xchg
mov
(bad)
(bad)
push
and
loopne
shr
in
(bad)
std
dec
jae
leave
add
dec
push
xchg
mov
pmulhw
(bad)
(bad)
(bad)
call
sbb
daa
sahf
test
rol
fwait
into
js
xor
or
(bad)
push
or
leave
movs
retf
lock
xlat
push
jae
ins
clc
pop
sbb
mov
mov
cmp
(bad)
cdq
dec
push
(bad)
inc
pusha
push
jo
cmp
ds
mov
fst
fcmovnbe
(bad)
(bad)
(bad)
call
xchg
sub
mov
cmps
pop
outs
mov
sahf
ins
push
in
cmp
pushf
pop
pop
sub
shl
(bad)
(bad)
(bad)
jmp
inc
nop
pop
aam
inc
inc
jmp
dec
xor
mov
xor
mov
js
test
(bad)
call
sub
imul
adc
fwait
ss
jmp
test
mov
cmp
pop
into
ret
mov
sub
fcomip
(bad)
inc
aaa
xchg
dec
(bad)
adc
test
xchg
mov
(bad)
(bad)
call
js
leave
test
fnstsw
mov
pop
or
mov
out
into
jns
xchg
cs
out
idiv
(bad)
(bad)
(bad)
inc
mov
add
mov
dec
retf
mov
repnz
cdq
(bad)
lahf
mov
push
out
inc
nop
(bad)
(bad)
(bad)
call
inc
mov
jb
xor
jmp
cmc
retf
jno
cli
mov
jne
dec
(bad)
(bad)
(bad)
inc
enter
loop
movs
fld
iret
fisubr
rcl
lods
fdiv
idiv
mov
enter
int
scas
inc
pop
in
fisttp
js
cmp
inc
xor
dec
(bad)
test
adc
repz
mov
mov
mov
inc
xchg
ret
test
mov
push
(bad)
daa
xchg
mov
push
std
mov
sbb
inc
jl
(bad)
(bad)
inc
popa
inc
sbb
scas
test
sti
sbb
xchg
stos
xchg
pop
cmps
inc
xor
outs
test
inc
mov
jae
(bad)
(bad)
jg
mov
sbb
mov
adc
call
into
xchg
lods
or
mov
test
mov
pop
mov
in
pop
nop
sub
adc
sub
jmp
mov
sub
(bad)
fadd
inc
sub
xor
mov
aas
sub
aad
mov
aam
(bad)
(bad)
fild
enter
inc
mov
mov
add
(bad)
out
loop
jbe
retf
push
(bad)
xchg
lods
(bad)
(bad)
mov
fdivr
xor
sub
cwde
jno
xchg
test
inc
ss
(bad)
(bad)
(bad)
jmp
jno
shr
or
fisub
inc
jmp
push
push
ds
out
pushaw
fistp
dec
addr16
pop
adc
mov
test
popf
xor
out
nop
sbb
add
inc
loope
leave
mov
xchg
(bad)
(bad)
aad
je
sub
sti
into
cmp
dec
push
(bad)
(bad)
jg
idiv
dec
int3
or
ror
fnstenv
adc
mov
mov
(bad)
(bad)
mov
mov
xor
sti
or
std
adc
jb
je
cmp
cli
das
cli
cmp
mov
pushf
add
jp
inc
int3
pop
mov
(bad)
(bad)
(bad)
fidivr
pusha
jb
jle
cwde
cmp
imul
pop
push
scas
ret
pop
pushf
(bad)
dec
push
dec
jb
(bad)
(bad)
(bad)
push
mov
sbb
jg
clc
sub
fsub
mov
shl
mov
(bad)
(bad)
(bad)
inc
mov
fwait
jg
jmp
aaa
test
clc
test
push
movs
aaa
jmp
clc
jmp
rol
adc
xor
dec
xchg
loopne
adc
(bad)
jmp
jmp
push
mov
pop
int3
cmp
sti
retf
cmp
cmps
add
sub
xchg
adc
pusha
(bad)
(bad)
(bad)
call
jg
call
test
nop
daa
inc
test
xchg
jg
sbb
xlat
loopne
ds
xchg
mov
(bad)
call
lds
xchg
(bad)
out
into
(bad)
sub
in
fisttp
lods
(bad)
(bad)
(bad)
dec
dec
je
outs
loope
daa
mov
mov
adc
pop
inc
xlat
fadd
(bad)
jmp
icebp
jle
retf
and
xor
mov
mov
(bad)
(bad)
(bad)
jmp
nop
imul
sub
xchg
std
ror
test
and
loop
loop
jne
sub
lock
(bad)
in
xchg
push
out
adc
jmp
jl
jbe
rol
mov
(bad)
jmp
cmp
xchg
mov
mov
pop
dec
sub
(bad)
(bad)
(bad)
call
pop
xlat
and
js
xchg
test
pop
push
outs
sahf
mov
pop
pop
lahf
dec
mov
xlat
out
pushf
in
call
push
adc
push
cmp
nop
aam
(bad)
(bad)
jmp
or
add
cld
je
imul
sti
sub
pushf
leave
es
push
adc
(bad)
(bad)
(bad)
call
jb
or
adc
not
loope
out
sub
add
(bad)
(bad)
mov
cmps
scas
jae
fcmovbe
sub
mov
out
xor
add
(bad)
pop
mov
(bad)
(bad)
dec
inc
xor
xor
xor
dec
leave
xchg
shr
(bad)
(bad)
push
jne
fmul
jb
and
stos
shl
nop
leave
and
idiv
(bad)
push
imul
ffreep
mov
mov
pop
jmp
rcl
add
(bad)
ja
or
int
popa
jne
jg
das
pop
(bad)
adc
push
fwait
sbb
cmp
ins
(bad)
push
sahf
ja
je
or
(bad)
(bad)
inc
addr16
push
imul
adc
mov
jle
nop
xchg
adc
fsubr
push
outs
and
imul
hlt
jmp
ffreep
adc
xchg
stc
aad
test
xor
out
xor
call
mov
inc
mov
rcr
lods
fld
(bad)
(bad)
call
je
add
jl
add
das
mov
out
call
mov
mov
shl
(bad)
stos
dec
mov
pop
jp
std
adc
jae
mov
pop
cmc
push
daa
jl
pop
push
and
jbe
sbb
inc
pushf
(bad)
(bad)
(bad)
call
and
test
es
(bad)
lds
dec
mov
mov
sbb
add
jg
(bad)
fdivr
lods
cmp
cmp
rcl
push
(bad)
(bad)
(bad)
inc
ret
clc
inc
inc
fdivr
mov
mov
mov
adc
sti
jle
cmp
outs
clc
add
rcr
pop
mov
dec
fisubr
shl
xchg
inc
xor
(bad)
(bad)
xchg
cmp
xchg
jl
xchg
jae
jno
cmp
clc
addr16
cs
xchg
aaa
data16
call
push
(bad)
(bad)
(bad)
call
xchg
movs
mov
or
push
ins
jae
mov
retf
bound
aaa
int3
sub
jmp
mov
jge
shl
or
pusha
add
repz
(bad)
(bad)
call
inc
repz
mov
cmps
xchg
dec
xor
mov
ins
or
pop
dec
nop
add
imul
pop
cdq
(bad)
inc
aas
icebp
stos
sbb
sbb
cmp
(bad)
(bad)
(bad)
call
pop
and
shl
pop
retf
test
xchg
ins
mov
call
(bad)
(bad)
jmp
inc
push
cmp
aaa
scas
les
iret
jecxz
cmp
(bad)
mov
jbe
and
push
das
xor
ret
(bad)
(bad)
(bad)
jmp
sbb
neg
out
popa
xchg
xlat
or
arpl
sbb
sub
pop
jmp
(bad)
(bad)
(bad)
jmp
cmp
scas
aaa
push
ret
xor
int3
arpl
cli
sub
cmp
(bad)
dec
push
mov
xchg
pop
or
cs
cmp
aaa
xchg
pop
cmp
gs
(bad)
push
jno
sbb
pop
inc
fmul
cmps
push
add
and
lahf
xchg
(bad)
(bad)
(bad)
inc
pop
fs
sub
push
inc
mov
leave
xor
push
retf
rcr
dec
pushf
or
shl
(bad)
(bad)
push
dec
jae
sub
aaa
mov
add
xor
bound
ja
pop
mov
mov
std
(bad)
jmp
or
mov
xor
dec
sub
or
xor
sahf
mov
inc
or
add
int
scas
inc
mov
cmps
inc
popa
repz
and
jl
outs
int
mov
popa
and
add
(bad)
(bad)
cmp
mov
arpl
mov
pop
arpl
pop
jne
add
inc
(bad)
(bad)
(bad)
jmp
nop
xor
jo
jne
dec
pop
loop
jmp
call
mov
fwait
hlt
(bad)
dec
ins
(bad)
retf
mov
into
mov
out
push
xlat
jae
rcr
mov
(bad)
(bad)
inc
ret
(bad)
je
in
out
dec
arpl
inc
shl
lock
push
push
pop
(bad)
call
fs
cmp
aam
dec
jge
(bad)
(bad)
call
packuswb
aam
jg
lods
lds
aaa
or
inc
es
adc
popa
push
ret
push
or
(bad)
(bad)
jmp
sbb
cmp
je
dec
xor
add
pop
mov
loope
push
inc
mov
lahf
dec
(bad)
aaa
std
inc
test
jmp
mov
and
cli
cmps
call
or
(bad)
cmp
cli
neg
je
adc
jl
jmp
call
mov
bound
in
xchg
scas
and
mov
mov
jmp
xchg
ins
and
dec
mov
inc
sub
add
pushf
(bad)
fcomip
(bad)
mov
mov
fs
push
arpl
sbb
hlt
inc
(bad)
call
or
int3
loopne
rol
imul
xor
ret
(bad)
(bad)
call
xchg
movs
sahf
jge
pushf
hlt
imul
cmp
test
sub
push
and
stos
(bad)
inc
mov
or
jge
in
and
dec
adc
mov
(bad)
(bad)
(bad)
push
(bad)
je
lea
dec
adc
int3
and
bound
jno
or
mov
(bad)
(bad)
sub
adc
mov
pusha
sbb
outs
cmps
xchg
sbb
imul
mov
push
push
sub
mov
jns
out
mov
or
mov
stos
(bad)
jmp
std
cs
fld
je
loopne
fsub
ret
mov
(bad)
out
cli
sbb
out
lds
push
leave
sar
jbe
xor
pushf
add
(bad)
jmp
pop
(bad)
sub
clc
jb
jne
(bad)
rol
mov
daa
xor
add
(bad)
jmp
pop
(bad)
pushf
push
out
retf
jmp
pop
and
je
outs
(bad)
(bad)
jmp
jne
int3
xchg
xor
mov
pop
xchg
jle
fidiv
jge
(bad)
(bad)
(bad)
(bad)
mov
cmp
mov
adc
fisub
xchg
push
jg
jmp
adc
add
jg
dec
pop
cmc
mov
adc
in
push
stc
bound
jge
or
lods
pop
(bad)
(bad)
(bad)
dec
sub
fisub
repnz
mov
outs
cmp
into
cli
out
movs
lods
or
movs
addr16
(bad)
(bad)
(bad)
jmp
(bad)
cmps
jns
jo
into
ins
mov
jl
push
adc
xchg
fdivr
(bad)
(bad)
(bad)
(bad)
cld
ss
adc
mov
addr16
sahf
dec
je
lock
sub
jae
sahf
(bad)
(bad)
(bad)
(bad)
out
sub
stos
inc
ret
cmp
in
push
mov
add
sbb
push
push
ret
or
(bad)
push
shr
in
enter
shl
fisubr
mov
adc
xor
push
jcxz
push
es
sbb
or
xor
(bad)
(bad)
push
and
xlat
scas
sbb
dec
mov
sbb
stos
add
in
shl
test
(bad)
push
(bad)
fisttp
jne
add
push
cmp
dec
sbb
mov
std
inc
or
test
ins
cld
aad
fisubr
call
cmps
xchg
xchg
ins
mov
mov
ja
(bad)
cmp
movs
fild
(bad)
jmp
aam
inc
inc
loope
mov
pop
std
cmp
int3
mov
lock
fcmovnu
enter
outs
pusha
(bad)
xchg
add
(bad)
(bad)
call
das
or
nop
mov
mov
push
fidivr
femms
xor
(bad)
(bad)
dec
cld
ins
outs
sti
mov
aam
imul
fwait
in
paddusw
jns
fwait
add
xchg
sub
and
(bad)
(bad)
call
cld
pop
jg
push
sbb
popf
mov
or
popa
dec
push
and
jg
rol
enter
(bad)
imul
mov
jl
ret
mov
fisttp
pop
jmp
movs
data16
repnz
xor
leave
and
and
es
gs
enter
or
mov
or
xchg
ror
and
(bad)
(bad)
inc
ret
dec
adc
or
mov
jns
sbb
aaa
outs
jle
ret
sar
(bad)
(bad)
mov
out
add
adc
mov
lods
inc
adc
adc
dec
push
xchg
(bad)
mov
push
sub
xchg
pop
out
(bad)
in
inc
cld
push
push
adc
(bad)
(bad)
(bad)
inc
jnp
mov
retf
mov
int
test
jl
outs
pushf
dec
sahf
push
sub
mov
call
push
pop
mov
or
cmp
(bad)
aaa
not
ja
sahf
or
mov
(bad)
(bad)
(bad)
call
pop
movs
jmp
mov
add
jg
lods
adc
mov
imul
mov
pushf
sbb
dec
pop
cld
(bad)
cmp
mov
xor
sbb
lahf
mov
jmp
mov
mov
xchg
pop
mov
(bad)
cld
(bad)
call
add
clc
push
sahf
(bad)
push
and
ds
or
aaa
jbe
mov
pop
les
ror
pop
aas
stos
cmp
add
or
inc
fucomp
cmp
dec
loopne
test
mov
(bad)
push
sar
xchg
mov
std
sub
push
popf
add
aas
(bad)
(bad)
(bad)
call
pushf
lods
popa
mov
jecxz
mov
stc
inc
jbe
ins
mov
(bad)
out
push
add
lods
clc
test
dec
(bad)
(bad)
(bad)
(bad)
out
fcmove
cmp
test
sbb
cwde
and
dec
sub
sbb
retf
arpl
ds
(bad)
(bad)
(bad)
push
fmul
imul
test
mov
mov
xor
rcr
dec
sub
loope
cmp
enter
loop
mov
test
mov
jmp
mov
js
mov
mov
xlat
push
out
sbb
adc
(bad)
(bad)
inc
rol
push
repnz
adc
out
mov
imul
test
(bad)
jmp
ret
or
mov
jge
retf
push
int3
ret
ss
adc
or
jo
(bad)
push
cld
jmp
pop
movs
pusha
add
sub
ror
xor
jae
ret
pop
(bad)
(bad)
(bad)
inc
clc
out
daa
cmp
mov
mov
dec
dec
arpl
add
out
jg
(bad)
push
push
test
mov
inc
scas
adc
mov
xor
clc
aas
and
dec
(bad)
mov
or
push
sbb
out
mov
std
push
xchg
ja
push
es
mul
lods
out
ret
mov
aas
(bad)
(bad)
(bad)
(bad)
jnp
adc
lahf
or
dec
xchg
int3
in
push
mov
fnsave
mov
(bad)
(bad)
call
jbe
neg
repz
ret
dec
dec
inc
dec
inc
sahf
call
xchg
xchg
push
fsub
ds
mov
push
rcr
and
outs
push
sti
(bad)
(bad)
(bad)
call
mov
rol
js
bound
movs
std
sub
test
(bad)
(bad)
(bad)
(bad)
ds
lahf
lds
mov
adc
or
pushf
sub
std
ins
rcl
das
cli
das
jmp
ret
pop
mov
ja
add
jno
inc
jo
int
sub
test
call
cld
lahf
xor
mov
pop
jl
mov
jns
stc
fst
(bad)
call
adc
out
mov
bound
fiadd
aad
scas
clc
mov
enter
xchg
icebp
imul
lahf
cs
lds
jae
pop
movs
pop
mov
dec
outs
xchg
jmp
pusha
push
(bad)
mov
push
jmp
(bad)
(bad)
jmp
jl
(bad)
das
inc
cs
inc
es
lods
ret
loop
popf
or
or
into
mov
adc
cmp
icebp
(bad)
cmp
(bad)
xchg
(bad)
xor
das
rol
clc
mov
xchg
ret
nop
cld
xrelease
dec
sub
push
cmp
dec
popf
sub
inc
and
cmp
(bad)
(bad)
jmp
loope
(bad)
into
dec
mov
jmp
loop
lock
(bad)
jmp
pop
add
cmc
(bad)
(bad)
in
and
xchg
mov
sbb
ja
call
je
mov
xlat
test
mov
adc
jnp
es
retf
and
(bad)
jmp
mov
idiv
test
add
push
fdivr
hlt
fnstenv
(bad)
test
ins
mov
jae
cmps
int3
add
add
adc
int3
cdq
sbb
mov
test
xchg
jo
mov
jns
retf
xor
repnz
jmp
aaa
(bad)
(bad)
(bad)
jmp
cli
xor
xchg
stos
cmp
test
or
test
aam
(bad)
(bad)
jmp
push
ins
cmp
fwait
mov
pandn
sti
and
mov
pop
cmp
(bad)
push
das
pushf
cli
mov
dec
jp
inc
inc
mov
sbb
cmp
adc
(bad)
pop
ret
jmp
(bad)
jmp
sti
and
mov
js
retf
mov
imul
push
push
icebp
lock
test
(bad)
(bad)
call
hlt
outs
mov
or
xchg
lods
sbb
adc
xor
pop
das
mov
inc
pusha
(bad)
(bad)
(bad)
dec
hlt
ret
push
test
inc
cli
mov
stc
jne
retf
shl
(bad)
xchg
shl
loopne
pop
add
sbb
(bad)
inc
and
mov
jnp
push
test
jmp
in
xor
mov
in
int
xchg
mov
call
pop
adc
xchg
into
sbb
jmp
popa
mov
sbb
dec
addr16
xor
cli
jnp
fst
stc
sbb
lock
mov
sub
mov
pop
push
sbb
mov
(bad)
(bad)
(bad)
inc
je
jmp
das
(bad)
into
adc
jp
add
cmps
fwait
pop
dec
shl
adc
movs
aad
(bad)
(bad)
inc
push
in
lock
add
push
aaa
push
retf
aaa
rol
into
jge
(bad)
and
(bad)
(bad)
(bad)
inc
ins
and
out
push
mov
out
mov
cwde
sbb
ja
sbb
jbe
jmp
lods
cmp
outs
and
inc
mov
adc
into
mov
(bad)
(bad)
inc
pop
(bad)
mov
in
push
dec
and
repz
ins
ret
aad
pushf
xchg
mov
clc
(bad)
(bad)
call
sar
mov
clc
in
xlat
daa
shl
data16
outs
xchg
in
xchg
cmp
scas
movs
(bad)
cmc
jg
(bad)
(bad)
jmp
mov
pusha
or
xchg
cli
(bad)
cmps
jns
cmp
bound
popa
(bad)
mov
jmp
(bad)
(bad)
(bad)
(bad)
clc
or
arpl
pop
rcr
cmc
jle
aad
sbb
mov
xchg
out
repz
xchg
ret
mov
inc
repz
mov
icebp
xchg
cmp
sar
fisttp
add
loop
repz
mov
(bad)
(bad)
push
jb
jecxz
(bad)
add
xor
add
adc
or
not
push
je
aas
mov
xor
mov
inc
nop
jmp
dec
adc
fnstsw
xlat
clc
(bad)
call
push
cmp
lods
ss
push
push
pop
and
shl
adc
jne
or
(bad)
(bad)
jmp
push
lea
adc
loop
inc
loope
sbb
loopne
dec
out
sub
inc
(bad)
(bad)
(bad)
jmp
xor
mov
lods
mov
lods
cld
xchg
adc
lds
(bad)
(bad)
(bad)
dec
sahf
mov
jno
or
mov
fisubr
push
mov
xchg
xchg
mov
out
shr
mov
push
test
(bad)
jg
mov
repz
ds
mov
lds
and
or
enter
and
(bad)
(bad)
jg
int
mov
cmps
cmps
lods
scas
rep
dec
jecxz
ficom
and
and
(bad)
push
rcl
sbb
aas
push
lods
sub
les
popf
fcom
dec
cld
(bad)
jg
call
pop
and
mov
dec
bound
mov
sub
xchg
mov
or
pop
sar
push
(bad)
call
(bad)
pop
not
sub
fstp
pop
loope
(bad)
jmp
add
push
les
inc
push
and
sbb
dec
or
(bad)
lahf
push
lea
cld
cmps
add
fild
sbb
(bad)
(bad)
(bad)
(bad)
jmp
pop
das
pop
add
dec
jne
aad
bound
adc
cmp
(bad)
(bad)
(bad)
(bad)
jmp
adc
cs
mov
sbb
imul
gs
fs
scas
shl
(bad)
call
cld
cmp
idiv
jno
xchg
mov
cmp
(bad)
dec
dec
xchg
jne
jecxz
xor
add
loop
sub
and
call
aas
jl
jecxz
jmp
movs
inc
push
scas
jno
pop
iret
or
jmp
mov
cld
jmp
jbe
mov
xchg
aaa
cmps
push
sbb
(bad)
dec
rcr
rcl
inc
xor
rcl
arpl
adc
iret
ja
lahf
cmp
sbb
fnsave
mov
sub
cmps
cmc
jb
bound
and
loop
sbb
stc
(bad)
(bad)
(bad)
inc
sub
xchg
loopne
push
fdivr
sub
pop
adc
rcl
fs
mov
test
cs
test
jmp
mov
xor
cmps
push
dec
mov
push
in
aaa
stos
push
push
adc
adc
mov
jbe
stos
(bad)
stos
sahf
or
jb
xchg
dec
mov
(bad)
call
cli
call
mov
cld
mov
mov
mov
(bad)
in
mov
lods
push
mov
(bad)
inc
adc
dec
sbb
(bad)
mov
cmc
jnp
mov
jns
xchg
jg
hlt
dec
add
push
fmul
nop
arpl
push
sbb
loop
inc
sar
(bad)
push
adc
mov
and
inc
inc
xchg
lds
push
inc
(bad)
int3
xchg
(bad)
hlt
sub
(bad)
(bad)
(bad)
jg
inc
add
push
xchg
adc
sub
and
sub
out
and
dec
sti
push
inc
mov
push
jg
xor
mov
dec
cli
xor
fidiv
test
jmp
mov
and
xchg
adc
jae
dec
loope
ret
jnp
jo
cmps
pop
sbb
jmp
push
or
jne
ror
xchg
stos
test
(bad)
xchg
xchg
cdq
fild
ins
inc
cmps
(bad)
(bad)
(bad)
std
jne
or
pop
dec
add
fdivr
fdiv
lock
and
jg
(bad)
call
aad
mov
mov
cmp
mov
les
dec
loopne
call
loopne
xor
sahf
sbb
push
jns
cmps
mov
dec
dec
or
lods
std
rdtsc
sbb
push
clc
jmp
pop
push
cmp
call
outs
add
xor
out
push
add
(bad)
jmp
cmp
inc
adc
scas
call
inc
push
push
jnp
xor
movs
fidiv
(bad)
push
scas
int
(bad)
(bad)
inc
mov
inc
inc
ret
and
jge
sub
sbb
lods
lods
or
cld
mov
je
fisttp
or
adc
into
arpl
into
sub
(bad)
push
or
add
jg
xor
mov
imul
(bad)
(bad)
call
shr
inc
xor
dec
mov
or
mov
and
(bad)
(bad)
call
inc
mov
fiadd
icebp
or
inc
movs
mov
test
movs
xchg
jbe
outs
fwait
les
icebp
stos
jmp
inc
jp
inc
xchg
in
push
sbb
out
iret
mov
(bad)
dec
out
imul
and
jo
mov
push
(bad)
adc
(bad)
(bad)
call
test
xor
in
cmp
mov
repz
sbb
dec
shl
xor
pop
mov
and
xor
fcomip
(bad)
fild
jge
and
(bad)
push
xchg
hlt
or
xchg
and
jbe
shr
pop
test
iret
(bad)
cmp
push
hlt
or
push
add
dec
rcr
aaa
shl
(bad)
(bad)
jmp
(bad)
std
les
jns
mov
cmp
fs
retf
cmps
or
test
jecxz
(bad)
mov
popa
sbb
adc
mov
mov
lods
cld
loope
fld
movs
mov
push
shr
push
add
or
(bad)
(bad)
jmp
sbb
xchg
(bad)
in
pusha
cmps
sbb
sar
(bad)
(bad)
mov
push
icebp
std
and
adc
mov
adc
mov
sahf
out
imul
fsubr
jo
(bad)
imul
pop
(bad)
outs
dec
lods
rcl
add
scas
rcl
mov
mov
mov
or
cs
push
push
mov
cmps
pop
stos
ds
rcr
jl
xchg
push
(bad)
(bad)
(bad)
inc
mov
lds
mov
sub
mov
cmp
sub
mov
(bad)
(bad)
(bad)
push
mov
cdq
jbe
(bad)
dec
arpl
aas
das
cmps
leave
dec
push
mov
test
(bad)
(bad)
(bad)
jmp
jp
(bad)
(bad)
(bad)
xchg
cmc
sahf
cmp
in
pop
mov
inc
inc
call
out
jbe
(bad)
(bad)
(bad)
(bad)
ds
mov
js
add
cdq
xor
pushf
into
cmp
xor
mov
xor
cli
(bad)
(bad)
mov
es
mov
jl
out
cmp
(bad)
call
or
fdiv
mov
fld
pop
pop
mov
or
mov
and
and
(bad)
retf
cmp
retf
js
sub
aad
inc
hlt
(bad)
in
xor
sub
adc
xor
mov
(bad)
(bad)
(bad)
dec
mov
xlat
sbb
sbb
push
push
mov
add
mov
sub
outs
ins
loop
push
std
jmp
lea
jns
jl
add
sahf
dec
fdecstp
data16
mov
(bad)
(bad)
dec
xchg
rol
add
jmp
loope
hlt
xchg
pop
and
adc
cmp
(bad)
(bad)
(bad)
(bad)
jmp
jb
fisub
ficom
neg
clc
dec
sbb
int3
setle
add
(bad)
jmp
or
and
pushf
fiadd
mov
(bad)
cld
js
xor
retf
mov
push
std
(bad)
push
cwde
data16
ret
hlt
mov
arpl
mov
jbe
pop
in
(bad)
jg
push
mov
das
cmp
push
fs
lods
daa
push
cmp
sar
cmp
(bad)
(bad)
(bad)
mov
fstp
(bad)
bound
dec
sti
repnz
test
push
das
(bad)
xor
sub
adc
fiadd
iret
cs
sbb
pop
scas
inc
cmps
stos
mov
popf
xchg
lahf
(bad)
push
push
mov
add
mov
push
mov
in
lods
loope
pop
sub
cmp
and
mov
cmc
inc
mov
pop
push
dec
bnd
mov
or
jmp
xchg
sbb
fdiv
loopne
mov
mov
mov
(bad)
(bad)
(bad)
call
fldcw
pop
ficomp
repnz
in
popf
pop
bound
arpl
pop
jecxz
pop
push
add
push
(bad)
(bad)
(bad)
inc
push
aas
retf
or
and
mov
stc
jg
jns
sub
(bad)
jl
fsubr
sbb
mov
jge
pop
cmc
(bad)
call
sahf
js
lahf
push
fwait
and
fistp
xor
push
jno
pop
jp
(bad)
(bad)
dec
sbb
fist
pop
pusha
and
cmp
dec
push
arpl
fild
xor
nop
sbb
adc
(bad)
(bad)
jmp
and
xchg
sti
push
ins
ins
mov
not
lods
push
xchg
and
adc
mov
loop
int3
hlt
je
xor
add
inc
xchg
mov
(bad)
(bad)
(bad)
call
clc
push
adc
mov
js
jo
mov
xlat
addr16
scas
sub
xlat
(bad)
(bad)
(bad)
call
dec
mov
cs
loope
sbb
dec
popa
setnp
adc
push
push
push
ja
cs
fcomip
(bad)
jge
outs
mov
mov
add
jbe
imul
xor
push
jmp
clc
inc
mov
neg
mov
xor
and
in
or
inc
es
(bad)
push
mov
mov
and
add
pop
(bad)
ret
jg
rcl
and
inc
test
mov
adc
loope
jmp
fnstcw
(bad)
(bad)
(bad)
jmp
push
repnz
lods
sub
fisubr
cmc
sub
xchg
jp
test
(bad)
call
sbb
xlat
cmp
sub
iret
add
clc
xor
inc
fisub
das
clc
idiv
fwait
jo
mov
sub
sbb
push
sbb
(bad)
pop
test
jmp
jecxz
arpl
sbb
aas
xchg
out
rol
lock
call
inc
loopne
(bad)
(bad)
push
jbe
in
and
dec
pop
cmp
adc
sbb
loop
rcr
mov
mov
xor
or
xchg
jnp
or
dec
jmp
scas
mov
(bad)
out
lahf
jns
push
add
(bad)
dec
pop
mov
fimul
jp
rol
add
jbe
push
pop
push
inc
ds
mov
(bad)
call
int3
retf
popf
dec
mov
adc
outs
xchg
add
inc
arpl
xchg
(bad)
(bad)
push
pushf
adc
(bad)
sbb
and
ret
out
push
push
and
pushf
test
jae
and
ret
fisub
(bad)
das
cli
jmp
xchg
pop
mov
mov
adc
jo
cwde
or
inc
pop
into
fiadd
mov
mov
pop
sub
xchg
scas
pop
xor
shl
cs
repz
mov
gs
(bad)
(bad)
(bad)
fmul
jns
js
cmps
ret
ds
mov
cmp
sbb
sub
ja
push
fisub
xchg
mov
outs
or
call
lds
mov
jb
mov
(bad)
jmp
clc
sbb
out
and
ss
sti
xchg
and
mov
jg
push
pushf
cdq
jge
add
dec
xchg
aas
(bad)
cmps
(bad)
(bad)
call
jb
sar
test
icebp
mov
in
add
jb
idiv
(bad)
(bad)
dec
xchg
add
stos
hlt
mov
call
loop
stc
and
jp
mov
(bad)
(bad)
dec
loopne
shl
jg
add
add
loopne
add
mov
stc
(bad)
(bad)
(bad)
call
fild
test
sbb
mov
arpl
rcr
jl
std
loop
loop
and
jmp
loopne
adc
ror
in
nop
out
jle
(bad)
(bad)
(bad)
(bad)
jns
cmovl
or
xchg
xor
scas
das
dec
test
cmp
ret
sub
push
cmp
sti
ror
inc
ret
loope
sub
repnz
outs
push
cmps
xchg
sbb
and
std
out
adc
mov
(bad)
dec
jecxz
dec
stos
mov
pushf
ins
fsubr
sub
je
adc
(bad)
jmp
int3
pusha
mov
add
ja
mov
pop
ds
adc
sar
mov
in
int
mov
jge
jg
inc
cs
cmps
add
(bad)
jg
pop
cwde
in
dec
jne
aam
icebp
inc
iret
(bad)
inc
je
fcom
loop
mov
pop
loop
sbb
inc
jo
dec
push
sub
sub
or
or
dec
jno
xlat
iret
out
int
mov
shl
aas
and
fsub
(bad)
(bad)
(bad)
inc
(bad)
int3
mov
jns
xor
push
fild
(bad)
repz
scas
dec
and
cmc
int3
jmp
scas
inc
and
push
pop
(bad)
pop
push
rol
(bad)
jmp
test
mov
jmp
shl
adc
aaa
call
(bad)
(bad)
(bad)
(bad)
jg
sbb
push
(bad)
test
scas
inc
iret
imul
push
dec
imul
fldenv
mov
sub
repnz
call
fdivr
bound
ja
test
push
popa
lock
(bad)
(bad)
(bad)
jmp
rcr
pop
outs
popf
retf
inc
or
jge
dec
jne
fdiv
add
in
lds
dec
and
jle
pushf
pop
bound
or
cmp
lods
call
push
cmp
fist
movs
inc
outs
add
shr
mov
mov
(bad)
(bad)
dec
shl
ins
aas
jne
ds
outs
test
add
(bad)
out
pop
pop
inc
hlt
cmp
inc
and
(bad)
(bad)
(bad)
stc
outs
add
outs
retf
mov
push
jecxz
pop
rcr
adc
cli
nop
xor
push
call
push
pusha
xchg
(bad)
mov
sub
pop
enter
in
adc
xchg
(bad)
(bad)
dec
rcl
iret
aas
mov
call
dec
push
repnz
(bad)
(bad)
inc
fnstsw
pushf
fdiv
xor
in
(bad)
retf
(bad)
xlat
in
add
(bad)
(bad)
jmp
mov
xchg
movs
jg
retf
sub
les
imul
cs
jno
loope
(bad)
(bad)
(bad)
inc
imul
ja
lea
and
push
(bad)
cvttpd2pi
jp
retf
ror
outs
cli
(bad)
call
fdiv
shr
daa
fmul
push
loopne
cmps
(bad)
(bad)
(bad)
(bad)
out
or
dec
mov
retf
xchg
mov
cdq
mov
and
repnz
nop
stc
jge
repz
call
cld
push
into
fmul
shl
jg
cmp
dec
bound
(bad)
out
pop
inc
fwait
mov
popf
cmp
xchg
arpl
xor
cmps
pop
push
mov
shl
jg
idiv
jmp
lock
lock
add
push
xchg
repz
ficom
bound
jmp
sbb
test
fucom
test
pop
push
shl
test
test
xor
les
repnz
lods
(bad)
(bad)
jmp
mov
not
cmp
xor
cmp
pop
mov
repz
shr
or
sbb
(bad)
(bad)
inc
cmc
pop
ds
jo
addr16
imul
test
mov
mov
or
pop
jno
or
mov
ins
popa
lahf
movs
mov
rcr
adc
aad
pop
xchg
aam
pop
inc
in
lock
mov
sbb
mov
or
pop
(bad)
in
pop
arpl
jo
(bad)
(bad)
jmp
int
mov
dec
push
rcl
push
dec
and
mov
adc
sbb
lock
(bad)
dec
mov
ret
ror
outs
int
fld
push
enter
adc
out
mov
ret
call
(bad)
(bad)
(bad)
jmp
test
test
xlat
gs
sub
or
js
push
xchg
mov
(bad)
(bad)
(bad)
(bad)
cli
push
lahf
inc
ins
mov
in
out
jnp
xor
repnz
ss
sbb
cli
sub
sbb
int
in
mov
dec
and
adc
rol
sbb
ja
(bad)
inc
bound
bnd
aas
iret
or
lea
fsubr
sub
scas
arpl
(bad)
(bad)
dec
jne
pop
retf
dec
lods
test
add
xor
nop
into
inc
and
loop
in
mov
aas
movs
and
(bad)
mov
sbb
gs
es
(bad)
(bad)
(bad)
push
pop
pop
rcl
popa
(bad)
or
and
push
aas
stc
push
inc
mov
shl
inc
mov
push
or
push
(bad)
(bad)
jg
xchg
mov
js
jbe
pop
inc
stos
or
mov
lahf
test
jmp
jle
xor
sub
xor
sub
call
jmp
xchg
and
adc
idiv
jecxz
out
mov
mov
(bad)
mov
sbb
jp
imul
shl
ret
push
es
push
aaa
mov
(bad)
out
std
add
add
out
cmc
aam
jns
inc
fild
ss
fldenv
ret
mov
xor
std
mov
cli
call
shl
push
push
jecxz
dec
mov
inc
mov
(bad)
(bad)
(bad)
jmp
mov
xchg
xor
rcr
mov
add
cs
sub
cmp
sbb
or
mov
(bad)
(bad)
jmp
rol
fwait
inc
sub
outs
js
mov
cmp
daa
jmp
cli
inc
in
retf
push
lods
fdiv
xchg
out
retf
or
jge
test
(bad)
(bad)
jg
lods
sub
cmp
push
or
leave
das
jns
sbb
mov
jmp
and
test
xchg
inc
or
add
mov
daa
pusha
xchg
popa
jmp
dec
dec
(bad)
(bad)
(bad)
jmp
mov
pop
nop
test
out
js
xor
mov
mov
jl
pop
mov
(bad)
(bad)
(bad)
push
(bad)
sti
cmc
xlat
mov
das
jne
lds
mov
push
and
fisubr
jnp
inc
or
(bad)
jg
inc
icebp
retf
jbe
pop
inc
mov
or
mov
daa
xlat
(bad)
(bad)
call
xchg
es
jno
push
popa
mov
pusha
inc
pop
in
sar
dec
push
movs
addr16
clc
jg
inc
add
loop
popf
sar
ror
fs
xchg
mov
push
cli
lods
lods
ror
jns
lods
cmps
dec
mov
hlt
iret
sbb
jae
mov
and
push
jnp
(bad)
inc
sub
sahf
repz
shr
mov
aaa
mov
mov
call
movs
cld
inc
add
neg
inc
push
fbstp
mov
cmp
movs
fdivr
mov
inc
inc
jp
jl
jle
pop
mov
inc
pop
sbb
stos
cmps
out
stc
fstp
(bad)
(bad)
(bad)
mov
jns
ds
lds
sbb
aas
pop
push
pop
pop
shl
or
(bad)
jg
dec
(bad)
mul
ja
push
xor
int3
call
es
jmp
xor
(bad)
jmp
and
call
call
out
movs
loope
(bad)
icebp
pushf
mov
pop
and
cs
(bad)
(bad)
(bad)
cmp
push
and
xchg
lock
sbb
adc
mov
dec
add
mov
(bad)
(bad)
fild
js
je
push
jmp
xor
sub
dec
pop
(bad)
(bad)
call
or
jle
xor
js
movs
sbb
jg
pop
movs
cmp
push
push
xchg
add
aas
adc
mov
xor
sub
ds
jp
movs
cmp
int3
pop
(bad)
(bad)
(bad)
push
ret
push
add
sbb
test
loope
sbb
pop
dec
test
or
jmp
pop
cmp
xlat
and
call
loope
fsub
xchg
sub
inc
mov
inc
sbb
mov
les
mov
in
mov
lds
call
inc
fild
getsec
pusha
push
repnz
add
in
dec
sub
cli
xor
(bad)
(bad)
(bad)
fisttp
in
add
add
jo
and
mov
repz
jg
mov
popf
jg
mov
(bad)
(bad)
jmp
sbb
and
cdq
pushf
test
mov
and
hlt
push
xchg
test
(bad)
(bad)
call
js
gs
push
and
mov
pop
loope
xlat
mov
(bad)
(bad)
(bad)
jmp
out
push
fstp
push
addr16
xor
es
cmp
dec
js
pop
(bad)
(bad)
(bad)
jmp
ins
mov
pop
or
movs
jmp
xchg
dec
mov
(bad)
popa
mov
push
fucom
fsubr
xor
adc
mov
(bad)
in
loope
sbb
(bad)
(bad)
inc
stc
enter
inc
out
shl
in
scas
xchg
xor
fstp
jmp
les
(bad)
inc
sub
ret
or
call
gs
mov
(bad)
mov
sub
inc
inc
rol
data16
mov
ins
aas
adc
sub
mov
add
or
(bad)
(bad)
push
cmp
pop
xchg
shr
dec
jmp
dec
out
daa
dec
inc
add
push
in
sub
adc
jp
cmps
out
ins
sbb
(bad)
out
test
in
pusha
outs
mov
(bad)
addr16
jb
js
(bad)
(bad)
(bad)
jg
push
mov
test
into
sub
fcomi
cmp
pop
ins
push
in
and
(bad)
(bad)
(bad)
cmp
pop
les
inc
arpl
dec
mov
popa
call
xor
add
lods
inc
call
dec
xor
push
sbb
push
icebp
nop
hlt
(bad)
(bad)
jmp
cmp
test
xchg
(bad)
lock
cmp
and
cdq
mov
(bad)
int3
nop
jb
inc
mov
fcomip
(bad)
call
outs
cmp
xor
jmp
mov
fimul
xor
push
dec
adc
xchg
fs
pop
add
data16
sti
inc
daa
xor
jmp
(bad)
gs
inc
shr
ins
cmp
scas
popa
in
and
jecxz
stos
xor
push
jnp
cld
(bad)
push
jne
lock
aaa
loopne
dec
test
(bad)
xlat
ja
cmp
(bad)
mov
adc
int
or
pushf
lods
into
cli
shl
jge
mov
scas
adc
or
(bad)
(bad)
fst
retf
out
add
sub
stc
pop
xchg
test
fadd
das
pop
fidivr
push
addr16
in
(bad)
jne
call
(bad)
(bad)
mov
repz
inc
and
shl
nop
fs
cli
outs
and
js
push
xor
push
cmp
call
dec
jb
xchg
out
ret
sar
cmp
pop
(bad)
(bad)
(bad)
push
stos
sub
js
fnstsw
adc
jmp
mov
pop
mov
adc
mov
ins
scas
sti
popf
(bad)
(bad)
(bad)
call
adc
dec
and
scas
push
lahf
out
add
xchg
loop
(bad)
push
xchg
repnz
ret
icebp
data16
movs
inc
add
int3
and
(bad)
(bad)
jmp
stos
push
or
fadd
imul
dec
rcr
(bad)
mov
xor
fwait
int3
out
addr16
mov
test
xchg
push
ss
(bad)
sahf
loopne
fldenv
in
loope
add
inc
shl
fwait
or
dec
xchg
sahf
int3
ins
cmp
in
sbb
sar
sub
inc
mov
mov
sbb
pop
int
xchg
ret
dec
test
daa
retf
fisttp
jbe
ret
(bad)
jg
call
cmps
mov
dec
cmp
idiv
stos
push
and
jmp
cmp
xor
mov
out
pop
(bad)
(bad)
jmp
sbb
mov
shl
pop
(bad)
jecxz
test
and
pop
mov
cmps
cmp
push
jbe
inc
(bad)
jmp
xor
ficomp
dec
xchg
cld
int3
pushw
ret
jbe
mov
in
mov
lock
and
in
jmp
aaa
in
dec
mov
push
and
stos
fld
call
lock
mov
sbb
sub
and
dec
(bad)
(bad)
(bad)
inc
jbe
mov
xchg
dec
fimul
cmps
add
rol
fcmovnb
and
(bad)
inc
imul
sti
into
daa
fs
sbb
adc
jl
jg
lea
imul
nop
xchg
jne
pop
cld
retf
xchg
push
cwde
xlat
ins
mov
mov
lahf
xchg
xor
sbb
(bad)
(bad)
(bad)
jmp
std
mov
xchg
mov
mov
lahf
and
adc
xchg
sbb
clc
jmp
mov
mov
cmps
imul
jmp
pushf
mov
(bad)
mov
adc
inc
lock
setns
pushf
or
out
(bad)
pop
fisub
pop
mov
jecxz
(bad)
(bad)
push
into
xchg
pushf
test
fs
dec
(bad)
cmp
mov
fbld
sbb
adc
(bad)
(bad)
jmp
mov
call
and
(bad)
xor
call
add
or
repnz
push
and
(bad)
call
out
sub
popa
outs
xchg
outs
outs
sti
int3
push
loopne
sahf
cmp
(bad)
(bad)
call
(bad)
fld
cdq
xchg
and
xchg
adc
(bad)
call
call
out
stc
adc
sub
jle
out
lea
scas
loope
push
aaa
or
pusha
push
or
lods
icebp
mov
sub
(bad)
(bad)
mov
sub
mov
sti
loop
dec
out
test
icebp
add
outs
ja
std
(bad)
call
cmp
jecxz
clc
outs
sti
sar
add
call
(bad)
dec
fnstenv
scas
inc
lahf
mov
lods
jns
(bad)
mov
int
arpl
cmp
cld
jmp
repnz
call
loop
xor
xor
add
fstp
pop
sahf
aaa
imul
jecxz
pop
rcl
adc
fdiv
stc
pop
aam
mov
cmp
cmps
test
adc
(bad)
ss
cmp
ss
shr
push
pop
mov
cmc
jmp
psllq
inc
sbb
scas
outs
cli
(bad)
jmp
sub
or
shl
into
or
xor
das
shl
stc
dec
sub
or
xchg
(bad)
(bad)
(bad)
dec
xor
or
jg
jo
ret
stos
inc
pop
loope
dec
out
loopne
enter
(bad)
(bad)
inc
dec
sub
xchg
shr
push
data16
les
scas
push
inc
pop
cdq
mov
mov
(bad)
(bad)
(bad)
jmp
retf
pushf
add
test
cmp
test
mov
(bad)
(bad)
push
push
dec
call
sbb
sbb
mov
cmp
and
ins
xchg
aaa
mov
(bad)
(bad)
in
jne
jo
jns
xchg
xor
inc
inc
xor
test
mov
aas
and
(bad)
and
das
clc
push
mov
and
shl
push
mov
cld
mov
jmp
sub
pop
imul
mov
cli
sbb
ret
aam
bound
add
dec
sbb
cli
and
ja
(bad)
jmp
inc
and
mov
mov
(bad)
xor
das
mov
xchg
inc
cwde
and
add
int3
jae
dec
fld
in
xchg
mov
inc
(bad)
xchg
or
xchg
icebp
push
sbb
push
test
jmp
ins
ficomp
cld
mov
in
div
sub
sar
(bad)
(bad)
(bad)
call
inc
pop
popf
shl
push
push
ins
movs
lea
movs
call
jg
movs
nop
sbb
mov
loopne
jge
sar
jge
inc
cmp
jo
ficom
call
stc
cli
(bad)
jg
stos
lahf
mov
dec
mul
pop
push
xlat
bnd
shl
cld
jne
or
add
pop
xor
push
les
in
mov
inc
cmc
and
or
mov
mov
adc
push
(bad)
(bad)
(bad)
jg
jle
jnp
or
push
dec
cmp
mov
ss
xchg
and
pop
sub
ret
clc
jg
(bad)
dec
adc
and
push
scas
out
popf
push
pushf
pushf
mov
hlt
mov
inc
cld
das
scas
pushf
loopne
(bad)
aam
pop
mov
aam
jl
ror
(bad)
(bad)
push
jbe
adc
js
push
push
out
mov
enter
mov
es
mov
cmps
imul
mov
add
adc
add
mov
cli
(bad)
(bad)
(bad)
inc
or
mov
mov
mov
and
pop
push
and
mov
fcomip
inc
fwait
or
fnstsw
cmps
add
fidiv
push
shl
(bad)
(bad)
(bad)
(bad)
(bad)
sub
and
pop
stos
pop
lods
outs
mov
xor
enter
mov
test
imul
jmp
sub
pushf
pusha
repnz
cmc
fld
out
fimul
mov
mov
lods
retf
(bad)
out
sar
(bad)
lds
inc
cmp
mov
cli
lea
(bad)
(bad)
(bad)
jmp
xor
jnp
dec
fist
mov
push
add
inc
fbstp
xor
push
push
fwait
(bad)
(bad)
(bad)
dec
jae
cs
mov
push
lods
fild
mov
(bad)
(bad)
call
(bad)
imul
jmp
sbb
int
or
mov
int3
(bad)
(bad)
(bad)
dec
stos
mov
jmp
xor
rcl
cmp
or
(bad)
(bad)
push
pop
sbb
psadbw
jl
push
sahf
mov
inc
in
push
dec
xchg
out
ins
int3
in
in
adc
mul
jmp
es
int3
xor
jle
xchg
pusha
push
cmp
in
cmps
out
(bad)
mov
(bad)
int
(bad)
adc
retf
shl
cld
xchg
(bad)
push
jmp
sub
lock
sub
retf
loopne
(bad)
push
push
jle
mov
inc
inc
jmp
sub
jmp
fcom
xchg
adc
mov
shl
adc
je
ret
cli
xchg
mov
call
cmp
mov
mov
adc
adc
inc
push
shr
cmc
dec
xchg
lock
(bad)
inc
jmp
mov
xchg
in
push
and
mov
cli
(bad)
call
add
jmp
mov
in
out
(bad)
sti
test
repnz
(bad)
(bad)
pop
add
jmp
cmps
dec
push
inc
jg
out
add
movs
ret
test
cwde
cmps
mov
mov
xor
fimul
adc
ds
dec
sahf
mov
mov
push
dec
xchg
pop
in
jle
xchg
mov
sub
(bad)
dec
mov
mov
cmps
sub
mov
aam
cmp
rcr
enter
test
add
(bad)
(bad)
(bad)
call
dec
ja
or
repnz
sar
es
cmc
jmp
lea
std
(bad)
(bad)
(bad)
inc
xchg
sbb
lea
(bad)
cmps
aam
enter
out
cmp
arpl
sti
xchg
ja
in
(bad)
(bad)
push
xchg
xchg
adc
mov
add
pop
jno
gs
jp
xor
je
ins
or
not
retf
xchg
dec
push
outs
(bad)
pushf
call
(bad)
mul
dec
fwait
popf
dec
xchg
fisttp
xchg
pop
out
cmp
jns
jae
mov
jae
xchg
out
lds
cld
(bad)
push
xchg
aad
push
push
or
aam
(bad)
sbb
fst
sti
cmp
(bad)
call
je
lods
jo
xor
jl
rcr
pop
add
mov
icebp
mov
mov
(bad)
(bad)
(bad)
inc
jb
cmps
dec
adc
pop
in
add
and
cmp
scas
jae
lods
inc
pop
iret
push
daa
(bad)
call
add
pop
sbb
aam
shl
ins
daa
mov
pushf
icebp
out
(bad)
(bad)
(bad)
jmp
rcl
push
sbb
out
cmp
out
push
mov
fwait
or
push
(bad)
(bad)
(bad)
call
mov
scas
fisub
sbb
test
(bad)
pop
jge
push
mov
ins
(bad)
(bad)
call
int3
inc
ins
cmp
sar
xchg
lods
shl
out
xchg
adc
(bad)
(bad)
jg
pop
sub
lea
mov
(bad)
movs
gs
sub
(bad)
(bad)
jmp
sub
pop
aaa
mov
jp
and
xlat
test
push
mov
dec
(bad)
(bad)
(bad)
call
and
jecxz
sbb
sub
ss
xor
cmp
lock
(bad)
inc
mov
repz
sub
clc
or
fs
or
cmps
lds
or
sahf
(bad)
sbb
mov
inc
sbb
into
test
lods
xor
adc
(bad)
dec
ss
icebp
mov
out
data16
aam
or
push
cmc
loope
repz
push
(bad)
(bad)
(bad)
push
ins
imul
or
imul
xor
pushf
js
cmp
loope
or
lods
loope
cmp
jl
out
push
(bad)
xor
add
call
movs
ins
dec
sub
ds
enter
push
mov
(bad)
(bad)
mov
add
sbb
scas
rcr
cmp
dec
ss
(bad)
(bad)
call
and
cmp
xchg
xchg
stos
push
and
(bad)
(bad)
mov
inc
loop
mov
mov
dec
in
(bad)
(bad)
and
push
dec
std
ret
mov
inc
jns
and
cld
inc
inc
xchg
xchg
jbe
int3
xchg
(bad)
(bad)
(bad)
mov
cs
and
stos
int3
clc
pushf
(bad)
and
(bad)
mov
js
lahf
arpl
cwde
jo
fld
(bad)
(bad)
(bad)
jmp
cmp
push
test
jge
loopne
adc
mov
hlt
mov
xchg
push
pop
mov
(bad)
call
stos
xchg
cmp
les
cmp
and
cwde
sub
mov
int
and
push
add
adc
inc
cld
popa
sub
mov
mov
ins
movs
push
pop
push
fwait
or
xor
pusha
push
xor
push
in
(bad)
and
sbb
jne
push
(bad)
jb
call
jg
xchg
pushf
add
jmp
mul
jae
xlat
iret
xchg
in
cli
cmp
push
push
imul
cmps
sub
dec
push
xchg
or
pushf
xor
pop
add
mov
add
pop
mov
inc
imul
aaa
(bad)
fs
mov
scas
aam
sub
sti
sahf
sti
and
jns
(bad)
(bad)
(bad)
call
sbb
jo
stc
shl
inc
loopne
sub
psubsw
inc
sbb
shl
cwde
jl
or
adc
ss
inc
push
sahf
jnp
iret
aaa
sbb
mov
(bad)
(bad)
dec
call
popa
iret
sbb
push
jg
idiv
inc
pop
mov
jno
(bad)
mov
popa
int3
push
sbb
xor
fcomp
hlt
cld
(bad)
out
cli
sub
sub
mov
arpl
clc
movs
daa
repnz
or
or
(bad)
inc
xchg
aam
ret
mov
inc
(bad)
icebp
mov
or
sbb
repnz
inc
ffreep
test
(bad)
push
push
cld
pop
jg
sub
dec
cmp
mov
fs
fsubrp
xor
popf
fdivr
stos
movs
or
adc
(bad)
(bad)
(bad)
mov
adc
clc
cmps
mov
cmps
enter
jns
mov
imul
ja
xchg
arpl
fcmovb
mov
add
push
adc
adc
sub
xor
push
sar
jmp
xchg
das
je
adc
xchg
repz
mov
pop
in
and
out
cmp
(bad)
(bad)
call
and
(bad)
call
fs
stos
mov
cdq
cmp
arpl
pushf
(bad)
(bad)
fcomip
xchg
ficom
xor
inc
ss
addr16
or
mov
xor
sahf
std
(bad)
(bad)
inc
pop
pushf
xor
sbb
xor
les
jp
inc
leave
mov
fs
imul
mov
(bad)
push
enter
sahf
gs
mov
sar
repnz
mov
push
in
(bad)
(bad)
jg
adc
dec
shl
xor
xor
xchg
sub
(bad)
(bad)
(bad)
(bad)
cmp
xchg
stos
mov
xchg
daa
dec
iret
ja
inc
add
pop
aas
(bad)
sub
xor
(bad)
(bad)
call
pop
mov
push
mov
adc
out
loopne
or
aaa
adc
(bad)
(bad)
cli
mov
das
xor
mov
in
mov
push
sub
outs
(bad)
sub
xchg
xor
fwait
jno
add
(bad)
dec
data16
popf
(bad)
(bad)
mov
and
pop
pop
inc
jp
es
xor
lahf
aam
pop
fisttp
(bad)
inc
jno
sahf
xor
loope
adc
clc
call
lds
sbb
pusha
mov
dec
push
data16
(bad)
(bad)
jmp
cmp
jae
cdq
out
in
push
fistp
mov
inc
ins
in
or
(bad)
(bad)
call
sbb
out
mov
stc
jo
push
cld
xor
(bad)
into
mul
pop
fwait
int3
pop
push
(bad)
out
clc
inc
push
(bad)
addr16
mov
or
mov
clc
loope
rol
xor
sbb
or
aad
(bad)
(bad)
(bad)
jge
cmp
cmp
push
dec
stos
in
inc
int
test
jg
in
aas
adc
aaa
in
data16
xor
(bad)
(bad)
jmp
mov
out
je
fdivr
or
jne
addr16
push
push
test
cld
fs
mov
cli
cmp
fwait
dec
push
fldcw
mov
adc
or
fsub
into
repnz
stc
dec
sub
xchg
push
fidiv
push
xchg
mov
daa
icebp
(bad)
(bad)
(bad)
(bad)
in
cmp
ret
mov
push
mov
pushf
ins
mov
jbe
dec
loop
div
xchg
pop
cli
(bad)
(bad)
jmp
mov
fwait
out
jl
jne
sti
add
or
sub
or
(bad)
(bad)
jmp
fidiv
data16
mov
or
fldcw
lea
mov
pop
in
(bad)
jmp
shl
imul
(bad)
pop
aaa
pop
cs
ins
lods
push
call
icebp
inc
inc
mov
jmp
jmp
das
mov
fs
jmp
movs
ja
movs
fsubr
push
sub
mov
sbb
test
mov
jb
push
loope
add
(bad)
(bad)
(bad)
jmp
and
loopne
(bad)
sub
xchg
pop
sbb
ds
lds
sar
test
jp
push
xchg
add
sub
push
out
movs
lods
das
pop
popf
xchg
les
push
(bad)
cld
push
add
(bad)
(bad)
jg
loop
push
test
aas
cmp
addr16
(bad)
outs
je
push
pusha
push
daa
or
(bad)
(bad)
jmp
bound
imul
inc
mov
in
addr16
push
xchg
add
dec
push
scas
mov
(bad)
(bad)
cli
stc
jns
cs
mov
daa
sbb
push
mov
jg
movs
dec
out
bound
ja
(bad)
(bad)
cld
popf
imul
or
inc
xchg
add
and
pop
add
push
retf
sub
(bad)
jg
lds
xchg
aad
movs
xchg
xor
jb
mov
dec
loopne
push
repnz
xchg
cmps
push
xchg
inc
stos
push
(bad)
call
std
push
and
ror
fsub
mov
xchg
jmp
test
pushw
jmp
sbb
mov
pusha
sub
leave
in
sbb
inc
xor
sbb
jne
mov
inc
aam
in
icebp
pop
std
(bad)
(bad)
fist
adc
xchg
inc
cwde
xchg
jg
push
icebp
add
fstp
cld
mov
(bad)
(bad)
jg
in
pop
mov
xchg
ds
sbb
sub
fstp
fwait
pop
test
call
(bad)
and
cld
nop
ja
xor
je
lods
sbb
mov
adc
adc
dec
pop
inc
(bad)
push
call
sbb
sub
fild
call
test
adc
(bad)
(bad)
cmp
call
pop
cmp
or
pop
xchg
retf
inc
pop
mov
imul
(bad)
(bad)
mov
mov
loope
repnz
push
push
dec
sub
(bad)
(bad)
(bad)
inc
and
outs
imul
ins
pop
or
fimul
and
cwde
movs
popa
scas
mov
loopne
sbb
mov
(bad)
jmp
mov
aam
(bad)
inc
lock
fcomp
popa
loopne
mov
ficom
pop
jmp
mov
xchg
out
imul
test
sub
mov
jmp
inc
outs
jg
or
jl
push
sub
nop
add
popa
jbe
mov
(bad)
dec
cli
icebp
jmp
or
pop
push
cmps
pusha
hlt
fisubr
xchg
lods
test
cmp
(bad)
(bad)
jmp
iret
mov
and
xor
cmp
je
lahf
jmp
xchg
pop
push
mov
out
inc
(bad)
(bad)
jmp
nop
or
jns
mov
cmp
stc
ja
mov
into
test
mov
cmp
sbb
push
lods
xor
dec
mov
xchg
or
(bad)
in
jmp
sbb
dec
inc
sub
jg
dec
out
xor
loope
xor
adc
(bad)
(bad)
mov
cs
fmul
(bad)
pop
mov
gs
(bad)
mov
scas
lock
xor
add
leave
ret
test
mov
mov
jg
(bad)
(bad)
clc
push
retf
retf
jnp
(bad)
dec
jo
inc
call
out
cs
jmp
(bad)
(bad)
inc
jle
repnz
and
enter
and
inc
cmc
shl
or
(bad)
(bad)
call
xchg
in
mov
lahf
cdq
jg
sti
mov
mov
add
xor
call
cmp
mov
inc
(bad)
and
xchg
pop
cmp
sbb
push
and
stos
jge
pushf
and
jl
ja
adc
pop
cs
mov
fcos
(bad)
(bad)
call
push
xlat
ret
xchg
aam
lea
or
out
dec
xor
mov
stos
cli
xchg
mov
(bad)
(bad)
(bad)
jmp
inc
test
into
pop
outs
mov
std
in
(bad)
dec
jne
add
(bad)
(bad)
(bad)
(bad)
fadd
popa
adc
jg
lods
int3
pop
xchg
jmp
dec
pop
add
push
jmp
sbb
inc
pop
dec
call
jae
sub
push
aaa
xchg
(bad)
(bad)
(bad)
push
sbb
xor
scas
inc
sbb
imul
pusha
(bad)
int3
clc
and
hlt
pop
cmp
cmps
(bad)
mov
add
mov
inc
(bad)
jns
xor
cmps
adc
(bad)
(bad)
(bad)
dec
punpckhwd
mov
sbb
and
or
pop
(bad)
push
inc
xor
(bad)
mov
loopne
test
adc
mov
movs
jmp
js
(bad)
jmp
pusha
gs
movs
out
daa
jbe
mov
jp
je
mov
loop
xchg
and
ds
sub
js
push
and
mov
shr
arpl
sbb
lods
movs
mov
test
in
jo
mov
(bad)
(bad)
push
rcr
test
test
repz
dec
test
push
adc
dec
ror
arpl
je
adc
jp
pop
mov
test
(bad)
lock
mov
lock
pushf
retf
adc
(bad)
(bad)
(bad)
call
cmps
ja
and
shld
pop
push
aam
and
mov
push
mov
(bad)
(bad)
(bad)
push
or
sub
dec
retf
jmp
jecxz
pop
sub
(bad)
cmp
lods
test
loop
xor
mov
ins
pop
mov
(bad)
(bad)
jmp
add
pop
inc
sbb
fwait
sub
adc
mov
xchg
cmp
ret
mov
sub
test
jmp
mov
xchg
fldenv
icebp
hlt
or
cmps
test
or
das
(bad)
idiv
inc
arpl
mov
add
add
(bad)
jmp
cld
jg
stc
rcr
cmp
mov
fdivrp
jg
or
(bad)
addr16
fisttp
dec
jmp
fisubr
dec
fld
dec
stos
sub
push
jge
xchg
in
mov
test
mov
and
fstp
(bad)
push
mov
fsub
mov
cmp
enter
sub
iret
ror
stos
call
xchg
out
inc
dec
dec
ret
mov
pop
inc
ins
cmps
or
(bad)
(bad)
(bad)
(bad)
fnclex
cmp
cmp
fs
xchg
lock
and
push
xor
pop
test
add
(bad)
(bad)
fimul
ins
rcr
push
mov
das
clc
dec
mov
jmp
lods
push
xlat
jp
push
loope
fnsave
push
(bad)
(bad)
(bad)
(bad)
fiadd
ret
ins
xlat
dec
not
popa
xor
inc
in
movs
mov
scas
repz
xchg
movs
scas
and
jmp
jb
add
mov
sbb
(bad)
sti
cld
int3
cwde
mov
cwde
call
jmp
lock
les
adc
(bad)
rcr
mov
or
sub
arpl
xor
mov
out
sbb
movs
pop
outs
and
(bad)
(bad)
(bad)
jmp
cdq
and
xor
test
mov
daa
hlt
(bad)
dec
imul
sti
ror
(bad)
jmp
and
xor
push
daa
stos
sti
jge
out
cld
xor
dec
fdivr
and
pop
and
ins
(bad)
jb
jns
lock
xchg
xor
jne
jae
mov
dec
into
pop
out
xchg
cmp
add
(bad)
(bad)
jmp
jne
mov
call
shr
mov
pushf
je
outs
je
hlt
xchg
cmp
push
(bad)
jge
mov
jnp
sub
mov
shl
jmp
mov
movs
int
adc
mov
pop
xchg
mov
fnstenv
fbstp
mov
(bad)
(bad)
(bad)
mov
mov
cmovnp
mov
inc
dec
jl
xchg
inc
push
es
ins
pop
mov
(bad)
(bad)
(bad)
dec
sbb
adc
xchg
fwait
mov
(bad)
stos
es
jno
or
not
inc
clc
(bad)
(bad)
push
pop
xchg
pop
movs
jnp
retf
dec
jnp
pop
shl
movs
jbe
fs
ja
mov
loope
cmps
and
xor
adc
(bad)
(bad)
mov
rcl
xor
daa
add
lods
inc
sbb
loope
jl
(bad)
dec
(bad)
(bad)
(bad)
jmp
stc
punpckhbw
test
push
ss
sub
push
das
mov
fdiv
jp
(bad)
(bad)
(bad)
mov
pop
mov
in
mov
mov
stos
mov
jge
xor
pop
loopne
stos
xor
mov
xor
adc
dec
std
outs
jg
add
push
cld
call
rcl
add
(bad)
pushf
int
and
or
sub
(bad)
(bad)
call
jbe
ds
push
pop
in
dec
lea
(bad)
or
mov
sti
cmp
cli
mov
(bad)
call
fdiv
xor
dec
inc
add
jmp
enter
adc
cmp
addr16
dec
popf
sub
test
cdq
out
adc
xchg
cmps
mov
(bad)
(bad)
mov
rcl
pop
inc
xor
pop
mov
xchg
fwait
cmp
(bad)
iret
push
jp
lock
(bad)
(bad)
inc
out
stos
test
in
out
aaa
cli
js
fs
jecxz
mov
call
call
push
daa
mov
sub
xchg
fld
mov
mov
sbb
push
(bad)
(bad)
(bad)
call
jae
push
xchg
popa
retf
and
test
test
push
add
jbe
mov
jmp
add
xchg
ins
lea
jmp
cmp
ret
seto
(bad)
jmp
xor
ja
jle
pop
adc
enter
dec
(bad)
jmp
loope
cdq
mov
arpl
retf
or
movs
ins
stc
(bad)
jmp
cs
in
rcl
fsubrp
jne
cmps
sub
icebp
in
jg
mov
aam
xchg
cmc
xchg
mov
lahf
loop
push
test
dec
lahf
cmp
mov
loopne
jmp
jmp
mov
jns
pop
push
xchg
call
dec
jle
xor
inc
mov
push
popa
and
or
das
inc
fbstp
aam
pop
stos
dec
sub
sub
data16
(bad)
(bad)
inc
sbb
je
loopne
xor
scas
fimul
sti
enter
fcomp
repnz
lahf
fbstp
(bad)
(bad)
(bad)
push
jmp
ficomp
cli
bsr
push
lods
inc
cli
inc
and
dec
mov
ins
jb
(bad)
(bad)
(bad)
jmp
pop
mov
test
jnp
stos
aas
dec
les
movs
lea
mov
hlt
clc
xchg
(bad)
mov
int3
loopne
bound
dec
mov
push
nop
int
cld
(bad)
cmp
mov
and
call
and
mov
mov
enter
sub
out
(bad)
(bad)
(bad)
cmp
push
fist
jmp
sub
loop
adc
nop
and
clc
call
or
xor
push
pushf
xchg
xchg
fcmovnu
sub
ret
dec
enter
(bad)
call
fsub
retf
mov
pusha
into
pop
adc
clc
addr16
inc
and
(bad)
call
or
mov
or
mov
call
jg
and
ret
jp
call
call
mov
icebp
pop
lods
push
popf
xor
gs
mov
cli
xchg
mov
(bad)
jmp
cli
call
outs
push
cld
push
mov
ror
or
outs
cli
shr
cmc
(bad)
hlt
mov
fdiv
dec
dec
dec
dec
loopne
pop
ins
clc
call
mov
daa
jae
sbb
mov
aam
or
(bad)
push
into
ins
mov
sar
push
cmps
inc
movs
(bad)
(bad)
mov
fiadd
add
popa
inc
pop
inc
retf
pop
int
jl
inc
(bad)
(bad)
jmp
push
les
mov
or
jns
adc
dec
aad
fmul
sbb
(bad)
jmp
ret
jmp
inc
cmp
movs
jns
fwait
push
retf
call
mov
and
je
aam
push
adc
fstp
test
or
cmp
aad
sbb
(bad)
ins
or
mov
imul
cmp
out
int3
jge
dec
ja
(bad)
(bad)
(bad)
jmp
push
dec
jecxz
mov
jne
addr16
xor
retf
das
push
pop
data16
cwde
or
xor
jno
xor
adc
xchg
pop
inc
out
mov
jge
and
mov
(bad)
out
ficomp
mov
movs
mov
pop
and
dec
nop
mov
mov
and
adc
mov
and
fwait
sub
jle
movs
std
mov
jne
pusha
adc
ins
jmp
(bad)
call
pop
mov
cmp
adc
sbb
dec
dec
sub
repnz
inc
sar
(bad)
call
jns
(bad)
fidiv
test
dec
scas
mov
call
sub
jg
(bad)
(bad)
(bad)
out
cmp
enter
mov
push
xchg
add
xor
cmp
inc
push
adc
or
nop
adc
fwait
ins
pushf
mov
cli
jmp
in
repnz
mov
mov
xchg
ins
std
ret
push
mov
ja
mov
xlat
inc
inc
jns
and
ror
add
(bad)
(bad)
(bad)
jmp
jns
ins
jmp
aam
test
(bad)
jp
not
(bad)
(bad)
(bad)
mov
sub
lock
fadd
fwait
pop
mov
in
lods
xor
das
xor
(bad)
(bad)
dec
icebp
lds
pop
call
ret
test
mov
fstp
movs
cmp
sar
(bad)
(bad)
in
in
jbe
mov
or
iret
mov
cmp
and
mov
hlt
lock
mov
push
ret
mov
mov
mov
xchg
(bad)
mov
aaa
bound
daa
jno
cmp
sub
jns
(bad)
pop
cmp
call
cmps
add
mov
xchg
outs
inc
test
cmp
cmp
xchg
mov
pop
popa
(bad)
xchg
(bad)
pop
fsub
aad
ror
xor
or
pop
xor
pop
ror
and
push
retf
(bad)
(bad)
(bad)
jmp
int3
ja
sub
cmp
stos
jle
shr
pop
add
mov
pop
jmp
(bad)
(bad)
(bad)
(bad)
fadd
outs
add
shl
inc
leave
int3
pop
lods
and
mov
ins
inc
jl
das
xor
inc
(bad)
(bad)
fisttp
and
clc
or
mov
test
into
add
sub
sub
(bad)
jmp
inc
adc
inc
test
cdq
(bad)
lahf
rcl
mov
scas
jmp
or
cmp
cwde
xor
mov
inc
(bad)
(bad)
(bad)
inc
fadd
xchg
adc
sbb
out
pop
js
xor
mov
or
(bad)
(bad)
(bad)
call
jno
(bad)
sub
scas
push
sbb
xchg
outs
or
addr16
call
push
or
cmp
jnp
ins
les
imul
sub
dec
and
(bad)
xlat
icebp
xchg
cmp
in
lods
rol
stos
xchg
and
push
arpl
and
(bad)
(bad)
(bad)
(bad)
cmp
jb
mov
(bad)
inc
inc
mov
pop
mov
jns
dec
movs
adc
inc
loope
fcomp
retf
cs
int
out
xchg
sbb
pop
rol
(bad)
(bad)
call
imul
push
aas
ins
mov
mov
mov
mov
sub
fwait
mov
and
sti
ror
sbb
inc
mov
dec
lock
inc
cmps
mov
aas
xor
or
sub
fcomp
jge
stc
cld
cli
(bad)
(bad)
call
adc
addr16
inc
add
cmp
xor
or
std
outs
xor
(bad)
jmp
mov
lods
cmp
cmp
and
pop
rcl
test
(bad)
jmp
pusha
xor
pop
cmps
stos
data16
out
shl
outs
addr16
add
(bad)
jg
imul
or
fwait
out
push
lds
adc
pop
cmp
xor
dec
adc
cmp
cmp
(bad)
(bad)
(bad)
mov
movs
fwait
mov
loopne
cld
test
cmp
push
shl
lods
fdivr
push
cld
sub
test
popa
iret
fadd
cld
out
push
push
sub
push
(bad)
cli
xor
call
or
xlat
xor
out
int3
sbb
sar
(bad)
(bad)
(bad)
fbld
retf
pop
je
mov
inc
adc
test
test
mov
data16
iret
xor
sbb
(bad)
(bad)
jg
inc
sub
dec
xchg
ret
out
sub
xor
mov
jmp
mov
dec
call
(bad)
(bad)
(bad)
cmp
inc
mov
or
mov
mov
and
adc
xchg
dec
aam
sbb
adc
xor
mov
outs
dec
retf
xlat
faddp
mov
fsub
pop
leave
adc
adc
sar
mov
retf
loop
hlt
sub
jg
not
shl
mov
call
out
pushw
imul
jmp
push
leave
and
jg
sub
pushf
(bad)
(bad)
(bad)
inc
stos
rcl
iret
out
pop
sub
mov
push
sub
push
iret
retf
mov
fidiv
jnp
adc
(bad)
inc
jbe
mov
sub
or
or
mov
mov
sub
pop
int
jno
mov
push
jg
pop
call
loop
or
sub
(bad)
mov
call
mov
leave
inc
std
in
(bad)
out
cmp
test
pop
(bad)
fnstenv
rol
std
retf
aam
dec
mov
aaa
mov
(bad)
(bad)
call
jmp
push
test
scas
sub
pusha
loopne
sbb
stos
lahf
(bad)
(bad)
(bad)
(bad)
mov
xor
adc
and
setl
inc
(bad)
push
or
jl
jle
push
jnp
(bad)
(bad)
jg
scas
mov
loopne
pusha
pop
dec
leave
pop
ss
rcr
jns
lds
mov
ins
test
push
add
inc
les
mov
mov
aas
nop
jo
je
in
add
jl
(bad)
(bad)
call
data16
push
sub
dec
stc
pop
fs
pushf
stos
popa
adc
pop
(bad)
(bad)
(bad)
jmp
xchg
stos
fisttp
or
cs
out
xchg
mov
or
(bad)
(bad)
(bad)
push
add
retf
jmp
jmp
hlt
lea
(bad)
lock
or
add
(bad)
call
std
iret
inc
es
dec
push
xchg
shl
fisubr
fbld
(bad)
ret
jnp
mov
(bad)
(bad)
mov
adc
movs
je
stc
sbb
les
mov
aas
push
inc
(bad)
(bad)
jmp
imul
fbld
mov
jbe
sbb
sbb
sbb
(bad)
call
loop
stos
aas
aaa
push
aaa
xchg
mov
lods
push
pop
or
pushf
pop
es
sbb
mov
adc
jmp
mov
cmp
in
test
add
cdq
sar
out
cli
in
imul
and
mov
mov
dec
movs
addr16
(bad)
(bad)
push
pop
out
cmp
daa
dec
jmp
dec
add
call
sub
mov
push
mov
xchg
inc
fwait
es
fadd
mov
stos
cmp
(bad)
lods
xor
mov
xor
jl
mov
and
sbb
add
das
cmps
jg
(bad)
(bad)
in
cmps
adc
das
or
sbb
dec
xchg
cmp
fdivr
jg
(bad)
(bad)
(bad)
push
in
lods
cmp
lock
adc
test
pop
push
loopne
call
out
loope
or
mov
(bad)
inc
mov
ins
mov
pop
imul
push
mov
xor
fisttp
lock
(bad)
push
pop
mov
jns
mov
xchg
das
inc
adc
ror
inc
lahf
leave
cmp
(bad)
(bad)
dec
xchg
retf
(bad)
test
jmp
add
dec
inc
(bad)
xcrypt-ecb
cmps
(bad)
vmread
call
xchg
pusha
or
sub
and
mov
daa
mov
inc
fnstcw
adc
pop
fsubr
jae
cmp
js
fisttp
(bad)
(bad)
(bad)
jns
and
lods
in
dec
nop
out
sub
in
jno
sub
pop
in
stc
push
imul
push
inc
leave
or
inc
inc
mov
mov
fcomp
inc
out
stc
out
cmp
cmp
inc
jmp
push
cmc
xlat
out
mov
pop
aaa
(bad)
(bad)
(bad)
(bad)
jle
mov
inc
mov
ret
ficomp
push
movs
loopne
or
pop
cmc
fbld
xor
mov
sar
jg
cld
dec
xchg
xchg
cmc
mov
inc
push
retf
je
dec
retf
(bad)
(bad)
(bad)
jg
pop
(bad)
jg
and
jo
xchg
jmp
mov
out
mov
inc
cs
mov
ja
jne
mov
fisub
(bad)
pop
mov
(bad)
(bad)
dec
je
mov
(bad)
add
not
cmp
andps
(bad)
jmp
dec
(bad)
xchg
stc
outs
mov
arpl
and
(bad)
dec
mov
mov
fdivr
xor
xor
(bad)
lock
inc
adc
(bad)
(bad)
cmp
push
mov
call
add
(bad)
jmp
xchg
inc
mov
cld
rcr
mov
into
(bad)
(bad)
(bad)
call
ins
out
dec
mov
fdivp
or
popa
xor
cmp
inc
sub
(bad)
jmp
push
sub
int
mov
cmp
retf
loop
imul
cmc
pop
(bad)
out
shl
push
mov
jge
daa
js
push
(bad)
jg
(bad)
mov
or
mov
adc
xchg
push
push
outs
cli
sub
adc
rcr
out
cmp
cmps
test
int
(bad)
(bad)
(bad)
inc
call
dec
dec
cmp
xchg
inc
pop
ins
imul
out
shr
(bad)
(bad)
(bad)
(bad)
inc
jb
ja
adc
call
ds
rol
adc
mov
(bad)
call
xchg
jno
xchg
xchg
(bad)
mov
and
xor
in
aad
(bad)
(bad)
jmp
test
sahf
or
pop
push
inc
jb
add
inc
and
and
(bad)
dec
sub
add
add
retf
mov
dec
dec
adc
stos
ss
ja
(bad)
xchg
(bad)
(bad)
(bad)
jmp
imul
in
and
or
cmc
imul
add
mov
or
stc
push
ja
cli
jbe
loop
sbb
xchg
lea
or
sub
test
addr16
pop
fld
xchg
inc
out
imul
stos
mov
pop
cld
cmps
mov
sub
sub
inc
xor
cmp
cmp
xchg
or
adc
bound
scas
jl
jmp
(bad)
call
push
data16
push
sub
jmp
dec
inc
sar
(bad)
(bad)
jg
cmp
push
sbb
add
adc
jl
inc
and
or
(bad)
(bad)
(bad)
call
add
out
test
daa
pop
out
adc
sar
mov
nop
push
jmp
(bad)
mov
inc
sahf
jge
xor
sub
or
adc
or
(bad)
call
xor
lds
pushf
add
jmp
jecxz
(bad)
fisttp
es
sub
push
je
push
inc
dec
xchg
mov
mov
(bad)
es
mov
xchg
xor
inc
stos
add
pushw
cdq
sbb
pop
ret
xlat
aad
(bad)
(bad)
(bad)
dec
jae
sub
nop
movs
dec
cmc
fldenv
pushf
add
mov
shl
cmp
push
mov
(bad)
fwait
mov
jmp
ja
mov
dec
in
or
add
pop
pop
into
pop
inc
std
inc
fwait
ror
lods
rcr
adc
ins
mov
push
std
(bad)
push
sub
add
xchg
lock
ins
push
xchg
leave
enter
(bad)
(bad)
std
push
push
push
jne
es
sub
mov
rol
or
sub
jmp
pop
int
or
push
cmp
adc
(bad)
(bad)
jg
gs
imul
xor
scas
mov
int3
adc
xor
sahf
ret
(bad)
push
pusha
sahf
xor
fistp
jmp
cmps
retf
add
fnstenv
fwait
sub
(bad)
(bad)
(bad)
jmp
mov
cli
push
sbb
add
pop
cmp
stos
xchg
enter
(bad)
jmp
popf
imul
pop
jecxz
daa
daa
and
ds
sub
mov
pop
mov
dec
(bad)
(bad)
(bad)
call
fwait
mov
jo
sbb
pusha
mov
outs
xor
mov
add
sbb
pop
(bad)
(bad)
(bad)
call
xchg
mov
jl
dec
jecxz
jo
lahf
pop
in
popa
jae
pop
or
add
inc
retf
nop
(bad)
(bad)
(bad)
jmp
jmp
push
lahf
xchg
nop
out
push
test
push
dec
icebp
mov
ret
cmp
pop
lds
(bad)
inc
inc
(bad)
and
retf
(bad)
in
xchg
inc
scas
bound
mov
xchg
jo
(bad)
(bad)
(bad)
call
jo
fisub
js
and
sub
push
jmp
mov
cmp
(bad)
jmp
sub
bound
inc
fsub
(bad)
mov
lds
iret
retf
jnp
mov
vmaxsd
call
repz
scas
pop
adc
imul
test
fdiv
(bad)
(bad)
jg
xor
jg
pop
cmp
jno
hlt
rcr
cmp
adc
add
(bad)
(bad)
(bad)
mov
lds
mov
fs
adc
rcl
jo
sbb
push
dec
mov
(bad)
(bad)
(bad)
(bad)
clc
inc
xchg
punpckhwd
push
imul
inc
cmp
pushf
push
xchg
cmps
sub
arpl
sar
mov
push
jns
cmp
test
clc
add
jnp
int3
(bad)
(bad)
(bad)
jg
sbb
call
in
jo
bound
pushf
nop
pop
push
data16
pushf
jecxz
cmc
sbb
and
inc
aaa
cld
es
outs
jle
fldcw
stos
in
loop
inc
fst
cli
inc
les
cmc
xor
(bad)
add
or
jmp
mov
push
push
test
enter
aaa
adc
xlat
call
(bad)
inc
push
movs
or
fnstenv
jnp
mov
xor
xchg
daa
outs
(bad)
inc
(bad)
pop
mov
cmp
pop
mov
adc
addr16
ss
cdq
fldcw
mov
stos
adc
xchg
mov
jmp
loope
sbb
fcom
loopne
mov
lds
mov
(bad)
(bad)
(bad)
call
pushf
inc
xchg
push
lods
push
push
jg
rol
inc
push
stc
(bad)
iret
xor
repz
in
popf
mov
push
(bad)
(bad)
(bad)
call
aad
into
xor
rcl
or
mov
pop
dec
fdecstp
call
inc
mov
std
js
in
(bad)
(bad)
(bad)
call
cld
and
push
inc
xor
and
adc
icebp
or
sub
pop
cmp
xchg
mov
shl
loope
pop
jbe
rcr
xchg
in
sbb
daa
inc
and
(bad)
(bad)
mov
scas
adc
sbb
sar
mov
repz
idiv
(bad)
mov
bound
mov
popa
sbb
inc
fdiv
movs
sbb
std
(bad)
(bad)
fimul
adc
pop
or
or
dec
mov
jmp
pop
mov
adc
call
add
retf
loope
pop
iret
pop
xchg
jbe
fild
(bad)
(bad)
std
mov
inc
pop
mov
jmp
movs
fwait
mov
ss
loop
(bad)
add
(bad)
mov
(bad)
inc
cmp
aaa
ret
dec
sub
lods
push
xchg
and
cs
fcomip
das
mov
dec
or
call
mov
dec
cmp
les
adc
ss
jge
xchg
or
repnz
inc
jnp
leave
adc
lds
(bad)
call
(bad)
stc
scas
ror
and
jecxz
cmps
dec
stc
aaa
adc
mov
(bad)
push
or
jle
jg
mov
aad
push
rcr
jae
imul
es
mov
sar
je
xchg
xor
int3
push
sbb
(bad)
(bad)
(bad)
inc
inc
push
add
jmp
loop
xchg
add
xor
dec
sbb
call
adc
int3
xor
or
mov
xchg
cmp
(bad)
jmp
fwait
in
cdq
adc
xor
je
push
stos
jnp
fisttp
sahf
mov
adc
test
or
jne
enter
ss
xchg
aam
sbb
(bad)
(bad)
jmp
icebp
dec
fldenv
fnstenv
mov
mov
hlt
and
dec
clc
mov
xor
in
mov
(bad)
(bad)
(bad)
jmp
cwde
aaa
out
lds
jae
sub
call
pop
push
test
repz
xor
(bad)
(bad)
push
adc
push
into
cmp
xchg
rcr
mov
popf
xor
dec
(bad)
(bad)
jmp
or
mov
pop
jecxz
clc
test
push
inc
idiv
sub
sbb
loopne
ins
arpl
xor
mov
sub
adc
pop
iret
icebp
(bad)
(bad)
mov
call
daa
psubb
mov
push
scas
sub
inc
jp
fnstsw
sti
sar
(bad)
jmp
xchg
sbb
and
push
hlt
sub
pop
movs
inc
std
sub
ret
(bad)
(bad)
(bad)
inc
pop
pushf
aaa
movs
stc
sbb
daa
adc
lods
cmps
cwde
int3
test
pop
in
repz
iret
daa
imul
mov
call
lock
inc
loopne
cwde
mov
(bad)
(bad)
call
rol
in
dec
cli
jns
out
call
xor
ret
scas
gs
(bad)
jg
(bad)
loop
lods
push
icebp
sub
(bad)
in
movs
sub
pop
leave
fwait
xor
jmp
rol
mov
jge
mov
jmp
push
mov
(bad)
(bad)
dec
fistp
retf
out
sbb
jb
jecxz
in
jge
pop
push
lea
mov
ret
(bad)
(bad)
(bad)
(bad)
mov
lods
mov
cmp
into
cmps
jno
sbb
or
hlt
icebp
jo
(bad)
dec
call
sbb
dec
mov
or
imul
xchg
ds
(bad)
(bad)
dec
pop
ror
out
cmp
push
(bad)
into
xchg
sbb
out
mov
(bad)
(bad)
jmp
xchg
sar
stos
popf
push
loop
lea
iret
cmps
xchg
jmp
(bad)
movs
fsub
(bad)
test
(bad)
(bad)
(bad)
push
ret
push
push
adc
lods
movs
pop
mov
js
inc
fwait
dec
jnp
repnz
inc
ret
push
dec
scas
dec
jne
(bad)
(bad)
jmp
xchg
cmp
xchg
aam
jle
std
push
mov
mov
push
mov
or
dec
enter
aaa
std
(bad)
(bad)
jle
mov
mov
xchg
test
or
pusha
stos
push
loop
leave
imul
(bad)
call
ja
out
lock
pop
ret
jle
sub
call
xchg
inc
sar
pop
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
xchg
call
adc
fisubr
repz
out
dec
push
ret
push
aad
sub
(bad)
push
pop
jg
jmp
pop
add
and
das
out
ret
ja
ret
mov
xor
dec
push
mov
jle
push
mov
mov
stc
loopne
lods
(bad)
call
pop
movs
fnsave
call
mov
and
mov
(bad)
(bad)
inc
int
daa
mov
inc
in
neg
ds
fidiv
cmp
sub
(bad)
call
jo
lock
into
call
inc
push
arpl
jp
addr16
or
cmps
push
loopne
cld
cmps
or
push
hlt
push
cmps
bts
movs
icebp
test
cmp
(bad)
dec
xchg
ret
ins
xchg
es
dec
shl
xchg
push
shr
or
or
(bad)
call
(bad)
(bad)
pop
aaa
and
mov
mov
adc
add
ror
(bad)
(bad)
(bad)
cmp
push
inc
call
pop
popf
cld
push
jno
xchg
jecxz
mov
test
mov
(bad)
out
dec
xchg
and
xchg
les
ret
sub
xor
mov
or
sub
push
ficomp
xchg
and
fst
(bad)
sbb
cmc
cmps
pushf
test
lds
mov
jle
xchg
popa
jle
(bad)
(bad)
(bad)
(bad)
stc
imul
pop
push
mov
mov
xor
mov
push
sub
(bad)
push
cli
mov
mov
(bad)
jmp
xor
aas
mov
call
int3
fisttp
cmps
mov
into
cmp
(bad)
jmp
push
and
mov
aaa
dec
test
outs
movs
or
or
outs
es
(bad)
(bad)
(bad)
push
repz
mov
int3
es
out
faddp
fsub
adc
adc
(bad)
(bad)
cmp
(bad)
stc
push
or
loop
push
clc
jae
push
fcos
(bad)
(bad)
call
inc
jbe
cmovne
sub
xor
push
fucomp
pop
mov
push
imul
(bad)
(bad)
call
stc
mov
xchg
dec
xchg
fs
pop
out
inc
into
or
(bad)
push
or
int
or
jmp
sub
pop
bound
adc
(bad)
jmp
rol
out
adc
dec
scas
adc
sahf
pop
push
pop
call
push
aaa
leave
xchg
out
aaa
dec
sub
fst
adc
push
dec
loop
jns
mov
cmc
xor
inc
aaa
fsub
mov
das
xchg
mov
test
pop
xchg
aam
(bad)
(bad)
(bad)
jp
xor
add
xchg
pop
enter
cmps
cli
jg
int3
dec
pop
cmc
add
aaa
sti
(bad)
(bad)
(bad)
dec
repnz
sbb
sub
pop
lea
sahf
jnp
clc
adc
inc
psubq
(bad)
jmp
fisub
inc
push
dec
push
aaa
jns
outs
int3
xchg
add
and
mov
adc
(bad)
dec
jg
add
pop
iret
repnz
in
icebp
(bad)
pop
gs
popf
pop
dec
jle
cmp
xchg
and
aad
adc
not
jne
mov
dec
and
jl
mov
jne
mov
pop
cmp
mov
es
xchg
clc
retf
das
lods
ror
scas
mov
or
(bad)
call
and
in
add
sbb
adc
fst
into
mov
cwde
scas
jmp
jnp
jnp
xchg
int3
push
test
lea
mov
sbb
nop
ins
lock
test
or
mov
(bad)
jnp
movs
pop
add
mov
cwde
sar
retf
pop
xor
adc
(bad)
push
jnp
cmc
ds
hlt
test
cmp
aam
neg
cmp
aad
imul
iret
mov
add
adc
cmps
pop
fnstsw
ret
(bad)
(bad)
push
cmc
lods
stc
sub
sbb
xchg
ins
push
add
jecxz
(bad)
mov
aam
dec
and
in
fsub
aaa
(bad)
sbb
mov
jg
jge
jae
cmp
and
fs
mov
xor
xchg
(bad)
call
(bad)
xor
test
mov
cs
int
cli
jns
xchg
sub
(bad)
(bad)
push
fld
push
mov
call
(bad)
fbld
xchg
movs
out
test
jne
ror
mov
(bad)
push
movs
mov
sbb
lods
fsub
shr
es
mov
cli
cmp
(bad)
(bad)
dec
pop
mov
test
jecxz
add
in
and
inc
data16
int3
push
iret
nop
int
(bad)
(bad)
(bad)
jmp
xor
cmp
test
inc
je
mov
inc
pop
mov
mov
out
xor
and
(bad)
(bad)
in
in
pop
push
call
loopne
fisttp
pop
push
mov
pop
imul
(bad)
fbstp
and
pop
stc
clc
int3
mov
add
fwait
lods
xchg
xor
xchg
dec
dec
fnstenv
xchg
jg
(bad)
jmp
stos
les
cmp
inc
pop
fimul
movs
add
out
loopne
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
cmp
stc
in
cmp
inc
pop
mov
cmp
movs
ins
or
and
out
cmps
lock
add
add
(bad)
retf
cwde
(bad)
(bad)
(bad)
call
int
adc
pop
mov
jo
out
adc
jb
sbb
sar
xlat
push
jnp
popf
(bad)
mov
jnp
jg
call
or
inc
sub
mov
cwde
or
jp
cmps
loop
and
jecxz
cld
pop
jbe
ins
enter
mov
(bad)
(bad)
dec
dec
and
cmp
xor
in
xor
adc
mov
jae
push
push
xor
push
jo
adc
test
dec
mov
scas
pop
jmpw
les
lock
not
dec
dec
push
fbld
pop
ror
dec
aas
cmps
dec
call
jecxz
pop
test
sbb
pop
push
and
adc
(bad)
(bad)
(bad)
call
(bad)
and
pop
bound
jmp
lahf
xlat
cmp
adc
mov
add
(bad)
(bad)
(bad)
call
push
js
movs
xchg
add
add
dec
scas
fnstenv
ins
loope
scas
dec
sub
sahf
push
(bad)
jmp
out
pusha
lahf
inc
mov
ja
cmps
push
mov
push
mov
add
sub
test
(bad)
(bad)
(bad)
(bad)
mov
rcr
out
inc
popf
mov
sub
jle
push
mov
lahf
dec
mov
dec
(bad)
sbb
dec
mov
inc
pop
mov
jns
mov
adc
jge
lahf
jb
ja
(bad)
xchg
mov
(bad)
(bad)
(bad)
call
add
repz
pusha
enter
push
movs
cmp
sahf
imul
xor
stc
sub
(bad)
(bad)
call
dec
(bad)
jno
pushf
or
and
dec
sar
rol
ja
jnp
inc
xor
jb
(bad)
(bad)
dec
mov
lock
fldcw
cwde
mov
push
cmp
jecxz
sti
aaa
outs
lock
pop
cmp
or
and
pop
(bad)
(bad)
dec
cwde
int
dec
mov
in
retf
jb
iret
xchg
(bad)
jbe
nop
add
icebp
(bad)
(bad)
(bad)
(bad)
mov
or
stos
xor
aas
sbb
and
test
test
or
leave
js
int3
test
push
out
test
sub
(bad)
(bad)
(bad)
call
sub
jecxz
mov
dec
ret
jno
push
loop
aas
mov
fwait
(bad)
(bad)
(bad)
call
dec
jbe
shr
push
dec
imul
mov
shl
mov
jo
dec
fcom
out
mov
test
mov
xchg
xor
mov
es
(bad)
(bad)
push
popa
push
sub
push
cmc
mov
dec
cmp
xchg
test
cmp
test
(bad)
(bad)
dec
div
in
cld
sub
retf
mov
xchg
ins
sbb
inc
jbe
mov
inc
sub
movs
cmps
inc
movs
inc
scas
jle
in
icebp
out
jge
pop
adc
sbb
sbb
(bad)
call
mov
inc
sub
sti
call
mov
ja
or
xchg
mov
in
and
inc
loope
cs
sbb
add
xchg
mov
in
pop
mov
sub
inc
sbb
(bad)
mov
enter
sbb
adc
xor
stc
mov
(bad)
(bad)
jmp
mov
xchg
dec
inc
sub
imul
pop
jp
mov
sbb
(bad)
jmp
push
shl
mov
arpl
out
cmp
popf
push
mov
xchg
xchg
(bad)
(bad)
(bad)
(bad)
jl
leave
dec
outs
in
out
cmp
xchg
push
aas
shl
fmul
dec
dec
xchg
aad
in
jg
(bad)
call
and
js
push
ins
les
sub
fnstsw
inc
xor
(bad)
(bad)
(bad)
fdiv
sti
(bad)
in
fst
out
sub
data16
loope
retf
xchg
jnp
mov
sbb
add
mov
dec
pop
jecxz
test
jno
inc
sahf
movs
cli
daa
add
xchg
pop
mov
cld
push
inc
fldl2t
inc
or
movs
xchg
xchg
leave
mov
aaa
cs
sub
(bad)
cld
push
dec
add
ja
sub
mov
call
ret
enter
lahf
repz
jns
ds
cmp
out
nop
(bad)
call
and
int
(bad)
jbe
out
mov
pop
jnp
cs
inc
fwait
push
pushf
out
jg
(bad)
dec
addr16
ins
or
shr
ror
ret
popf
sub
and
pop
cmc
call
jns
jnp
repz
scas
ret
cmp
mov
imul
clc
(bad)
jmp
jb
jge
dec
pop
push
sub
fild
push
outs
aaa
std
stos
out
lds
xchg
arpl
das
mov
not
ficomp
dec
jae
dec
dec
inc
pop
ins
fidiv
(bad)
(bad)
(bad)
call
jnp
jmp
clc
sub
mov
xor
xchg
scas
mov
(bad)
push
cdq
aaa
(bad)
test
int3
jo
in
sbb
adc
mov
stos
inc
mov
jg
push
or
cmp
(bad)
inc
push
xor
push
cmps
mov
xchg
test
mov
ror
(bad)
(bad)
(bad)
jmp
push
cmp
push
lods
push
out
jae
fs
add
int3
sub
fdiv
inc
daa
icebp
mov
pop
push
fxch
xor
xor
mov
aas
xchg
cdq
shl
cmp
sub
push
pop
xchg
and
jne
jne
pop
xchg
inc
(bad)
(bad)
(bad)
push
mov
mov
xlat
in
push
ins
imul
inc
pusha
ins
cmps
jp
enter
(bad)
(bad)
fcom
inc
repz
xor
or
mov
jns
cmps
cli
pop
addps
pop
cld
(bad)
call
xor
inc
xor
not
(bad)
(bad)
js
jno
mov
xor
sbb
add
adc
lock
xor
into
mov
rcr
xor
scas
enter
dec
sub
dec
dec
push
add
add
cdq
adc
dec
aas
(bad)
sbb
jmp
adc
mov
call
(bad)
mov
loopne
pop
ds
fucom
sbb
popa
push
mov
inc
add
(bad)
cmp
fldcw
dec
or
nop
int3
add
scas
(bad)
(bad)
(bad)
push
arpl
mov
push
xor
add
cmps
mov
pop
scas
shl
aad
(bad)
(bad)
jmp
das
movs
rcl
or
xor
(bad)
sbb
sub
(bad)
(bad)
call
rcr
loop
push
push
les
mov
dec
sub
in
test
mov
call
pop
inc
test
jecxz
in
cli
cdq
ja
lea
out
jnp
jnp
xchg
xchg
(bad)
(bad)
(bad)
(bad)
mov
and
and
sbb
ss
cmps
or
inc
leave
pop
pop
mov
mov
ds
(bad)
(bad)
(bad)
dec
sbb
cdq
stos
in
and
das
inc
pop
jl
cmp
add
inc
cs
out
(bad)
(bad)
(bad)
(bad)
fsub
fs
push
jge
jmp
mov
pop
daa
addr16
pop
cmc
jne
mov
imul
ja
les
gs
jo
ds
cmp
inc
loop
add
imul
adc
lods
mov
sbb
(bad)
(bad)
(bad)
mov
mov
test
mov
and
ss
xchg
icebp
xor
(bad)
(bad)
lock
call
outs
push
mov
xor
inc
(bad)
ds
movs
outs
aas
jmp
sub
jo
(bad)
(bad)
ffreep
popf
gs
add
mov
pushf
imul
inc
cmp
idiv
(bad)
(bad)
call
push
mov
ret
xchg
ins
mov
cdq
or
out
int3
es
jno
sub
(bad)
(bad)
js
mov
mov
and
rcl
push
mov
out
(bad)
(bad)
(bad)
call
fisub
dec
mov
xchg
and
mov
pushf
out
lock
dec
inc
(bad)
xchg
(bad)
(bad)
mov
pusha
repz
cwde
fwait
pop
push
fdivr
in
addr16
and
adc
(bad)
out
and
push
push
pushf
xchg
inc
pop
ins
ins
(bad)
adc
sub
dec
dec
data16
pop
loop
(bad)
dec
(bad)
aam
xor
pop
sti
(bad)
retf
cmc
(bad)
stos
sub
arpl
call
fisub
(bad)
mov
xor
je
adc
push
retf
stc
dec
(bad)
(bad)
jmp
push
fldenv
movs
jg
int
mov
call
add
in
(bad)
mov
std
inc
add
add
inc
ror
int3
mov
(bad)
(bad)
(bad)
jmp
adc
and
mov
(bad)
pop
and
ja
sub
jmp
cs
fidiv
les
imul
mov
push
push
(bad)
jg
add
aam
lea
xchg
cmp
or
in
lahf
(bad)
(bad)
(bad)
jmp
inc
push
cs
cwde
mov
cmp
ins
mov
(bad)
and
mov
ins
or
push
lods
je
cwde
push
(bad)
(bad)
jmp
adc
jl
jecxz
xlat
mov
ins
std
cmps
xor
in
cdq
imul
xchg
push
dec
dec
lock
xor
shr
mov
jo
call
sar
(bad)
mov
test
out
mov
mov
or
add
mov
(bad)
(bad)
jg
and
ds
ins
ss
cmp
inc
shr
dec
sbb
(bad)
dec
call
pop
mov
xor
jns
mov
sub
sub
repnz
jmp
sub
jno
imul
mov
(bad)
inc
test
fsub
or
stos
(bad)
(bad)
jmp
add
inc
push
stos
push
and
in
cmp
ret
nop
call
movs
in
adc
or
inc
out
jg
pop
les
in
add
arpl
push
pop
popa
ins
mov
cmps
outs
cld
retf
aad
xor
dec
or
das
or
shr
ret
(bad)
push
std
pop
jns
test
jbe
ja
rol
push
test
pop
clc
in
gs
js
test
js
(bad)
(bad)
call
mov
cld
jbe
ret
jle
mov
out
outs
sub
mov
sbb
ins
stc
sbb
sub
inc
bswap
mov
(bad)
fisttp
(bad)
dec
pushf
je
and
mov
sahf
pop
jmp
mov
and
push
popf
int
fcmovnbe
xchg
aad
scas
fistp
(bad)
jmp
ins
inc
popf
and
call
xchg
mov
dec
cmps
push
mov
pop
(bad)
(bad)
(bad)
call
lock
in
cld
mov
ds
sbb
mov
inc
jp
add
pusha
xor
sub
or
dec
or
aas
pop
push
out
push
popa
mov
arpl
sub
cmps
inc
push
nop
(bad)
sub
jmp
mov
push
sbb
in
adc
pop
retf
mov
and
stos
pop
jmp
aas
outs
push
add
scas
ret
xor
scas
mov
call
add
js
int
fbstp
push
or
xor
(bad)
jmp
xchg
push
jb
pop
stos
mov
(bad)
or
or
inc
aam
mov
cld
push
inc
dec
(bad)
(bad)
(bad)
jmp
and
repnz
loope
outs
aad
xor
data16
xlat
cmp
inc
sahf
xchg
aad
sbb
in
in
xor
or
(bad)
(bad)
jmp
out
mov
test
sbb
sbb
add
cmp
ja
sar
(bad)
jmp
mov
movs
sub
fcom
iret
and
je
adc
sub
and
cdq
ret
(bad)
inc
cmp
adc
inc
(bad)
(bad)
call
lods
mov
in
nop
out
lahf
das
push
and
xchg
cmp
mov
pusha
retf
dec
xchg
mov
push
push
pushf
sbb
pop
cmp
dec
add
mov
mov
jecxz
jle
add
xchg
dec
popf
ret
rcl
sub
xor
sub
(bad)
(bad)
(bad)
jmp
adc
in
inc
ja
mov
dec
add
shl
inc
jmp
dec
(bad)
(bad)
(bad)
push
cmps
cdq
dec
test
pop
mov
sbb
jnp
imul
sub
aam
jno
out
sub
adc
cmc
jmp
(bad)
jmp
hlt
stc
or
xor
daa
sub
sub
push
ss
sti
(bad)
mov
test
jmp
aad
mov
test
(bad)
(bad)
(bad)
(bad)
in
push
jbe
rcr
fwait
jmp
fcmovb
stc
scas
fs
dec
jae
cwde
clc
jmp
mov
add
aad
es
ds
(bad)
(bad)
call
sbb
adc
xchg
xchg
inc
mov
stos
pop
js
mov
fidivr
jmp
xchg
pop
ins
and
adc
sbb
dec
pop
and
shl
addr16
add
dec
hlt
cmps
(bad)
(bad)
dec
xchg
mov
(bad)
push
xchg
sub
fs
push
add
push
ss
lods
push
mov
aas
(bad)
into
push
outs
aaa
lahf
jmp
or
push
cld
or
test
cmps
inc
jp
ja
cli
mov
stos
out
pop
inc
(bad)
(bad)
(bad)
call
mov
sbb
cs
dec
push
rol
ins
popf
cmp
(bad)
call
call
cmps
outs
mov
jno
mov
ror
(bad)
(bad)
push
or
outs
repnz
ret
mov
fisubr
fcomp
inc
sub
mov
popf
aad
(bad)
(bad)
(bad)
push
inc
or
pop
aas
je
inc
test
inc
out
xor
cmp
out
mov
cmp
shl
adc
xchg
(bad)
(bad)
(bad)
(bad)
out
or
xchg
adc
ss
mov
jecxz
jmp
dec
jle
push
out
(bad)
sar
dec
xor
fldenv
jns
iret
fcmovnu
ins
(bad)
(bad)
(bad)
(bad)
mov
mov
test
call
std
push
xchg
stc
outs
push
push
gs
pop
sbb
mov
add
adc
loopne
test
(bad)
aad
retf
sahf
mov
(bad)
(bad)
call
dec
mov
and
sbb
arpl
mov
ret
repz
xchg
imul
mov
cmps
xor
pusha
ins
cwde
ret
sbb
ret
dec
push
add
mov
or
sbb
cwde
add
xlat
jl
inc
ficom
dec
loopne
cdq
int3
jg
(bad)
(bad)
(bad)
dec
clc
popf
ds
das
imul
jge
cmp
xor
icebp
push
adc
(bad)
push
call
push
fisttp
es
(bad)
clc
stos
push
mov
sub
or
dec
imul
(bad)
(bad)
jmp
jno
or
push
sbb
mov
stos
jl
xor
push
inc
daa
add
push
dec
cmp
push
icebp
(bad)
(bad)
(bad)
mov
inc
adc
retf
push
enter
inc
imul
and
or
loop
xor
sti
sahf
inc
(bad)
inc
add
(bad)
and
outs
mov
mov
dec
jmp
jmp
fist
jle
inc
and
retf
xor
jnp
and
cmc
ret
or
pop
nop
int3
sbb
jmp
movs
xchg
daa
push
inc
pop
loop
lahf
push
popa
mov
and
inc
ins
ror
sbb
cmp
and
mov
adc
jge
(bad)
(bad)
dec
mov
mov
cmp
sti
nop
push
leave
shl
js
(bad)
(bad)
call
jecxz
mov
inc
cmp
mov
xchg
out
les
fidiv
pop
icebp
call
fucomip
sub
or
(bad)
icebp
into
xchg
mov
mov
arpl
sbb
add
test
cmp
adc
cmc
jmp
cli
sbb
pop
aaa
daa
dec
mov
push
je
adc
inc
sub
inc
adc
adc
jle
js
adc
and
jmp
and
out
mov
ror
cmp
add
(bad)
jmp
iret
fdiv
enter
ror
leave
lds
stc
arpl
pop
call
jo
ins
into
mov
stos
rcr
adc
(bad)
out
mov
mov
int
push
sub
jo
ja
inc
(bad)
call
in
xchg
stos
pop
jle
push
cdq
xor
xchg
and
loope
cli
add
test
(bad)
(bad)
fldcw
jle
test
dec
ss
arpl
lock
(bad)
(bad)
(bad)
jmp
push
lock
xchg
push
jne
xor
inc
loope
xchg
call
xlat
call
inc
shl
sbb
pop
js
push
mov
jnp
push
repnz
(bad)
(bad)
jg
leave
xchg
enter
mov
adc
sub
aad
bound
adc
mov
cmps
in
retf
(bad)
sub
push
ds
dec
pushf
add
int
out
sub
(bad)
(bad)
(bad)
cmp
xor
out
sbb
mov
cmp
test
cld
(bad)
push
aam
push
mov
xchg
retf
dec
(bad)
adc
cwde
inc
scas
add
rcr
cmp
and
jg
dec
shr
jo
or
xchg
imul
sti
call
ja
sti
adc
sbb
and
out
mov
sbb
pop
and
fld
(bad)
push
adc
iret
sub
mov
daa
and
inc
inc
shr
dec
jo
stos
mov
(bad)
call
cld
mov
pop
int3
out
sbb
fdiv
pop
clc
xor
mov
ret
inc
sub
dec
(bad)
jmp
or
xor
or
cmp
imul
cs
js
test
call
mov
imul
and
(bad)
jmp
int3
(bad)
int3
out
movs
mov
push
retf
sbb
cmc
push
mov
mov
push
(bad)
push
jmp
loope
dec
sbb
xchg
sbb
push
inc
sahf
rol
push
(bad)
jne
mov
test
(bad)
(bad)
jg
inc
cmp
push
gs
mov
mov
xor
cmp
and
call
xchg
aad
stos
cmps
pop
add
or
movs
add
add
(bad)
(bad)
inc
add
cmp
xor
cwde
pop
or
xor
mov
mov
(bad)
dec
enter
jne
lock
fcmovu
push
movs
outs
lahf
(bad)
(bad)
jmp
inc
sti
mov
scas
fild
(bad)
out
loopne
imul
mov
(bad)
sub
outs
or
sub
mov
or
add
test
dec
(bad)
(bad)
(bad)
dec
sahf
and
jmp
pop
mov
xor
xchg
jb
pop
in
ins
jns
xor
inc
jg
mov
fiadd
shl
pop
jne
inc
push
add
pop
(bad)
jg
jmp
inc
mov
xchg
push
out
xor
add
mov
mov
gs
fidiv
(bad)
jg
sbb
imul
pop
hlt
jmp
xor
push
mov
pusha
jns
or
xchg
push
xor
lahf
dec
mov
ins
or
aaa
test
call
(bad)
(bad)
(bad)
jmp
adc
inc
dec
std
iret
int3
xor
jo
adc
cmp
mov
cmp
pop
cmps
je
push
pop
(bad)
(bad)
(bad)
jmp
add
mov
movs
dec
lods
mov
nop
xchg
fsubr
loop
cmp
scas
enter
(bad)
jmp
or
fisttp
mov
inc
mov
xor
jae
dec
in
mov
mov
icebp
sub
enter
jmp
cli
adc
mov
dec
test
mov
jb
cmp
cld
xchg
popa
popa
push
movups
fsub
neg
mov
xor
fiadd
mov
mov
xchg
push
out
xlat
adc
(bad)
(bad)
push
imul
loope
test
push
inc
rcl
add
retf
out
loop
dec
(bad)
(bad)
(bad)
call
mov
in
das
mov
pusha
iret
lds
or
mov
push
in
cld
inc
or
(bad)
(bad)
(bad)
(bad)
in
sub
xlat
inc
hlt
add
enter
movs
adc
fldenv
inc
sub
sbb
movs
mov
pop
xor
pop
add
mov
adc
sti
sbb
mov
int3
mov
es
fwait
cmp
and
adc
sub
xchg
ret
pusha
sbb
call
clc
test
(bad)
call
popf
sub
fcmovnbe
cmps
lahf
lahf
gs
inc
mul
mov
fwait
xor
dec
(bad)
mov
out
xchg
test
repz
mov
daa
popf
adc
(bad)
jmp
(bad)
ret
cmp
fidiv
mov
jle
add
jg
sub
imul
aad
cmc
test
push
icebp
cmp
jmp
pop
cmp
jmp
fistp
inc
cmc
out
dec
leave
mov
cs
loope
call
jmp
fcomp
sub
sub
sub
mov
cmp
xchg
pop
xchg
(bad)
(bad)
(bad)
push
out
stos
and
cmp
jge
push
pop
pop
iret
repz
cmps
mov
fiadd
sub
sbb
or
(bad)
or
fisub
cmps
sub
(bad)
(bad)
jmp
cmp
mov
jl
mov
mov
int
icebp
jnp
shl
(bad)
(bad)
push
inc
adc
adc
xchg
jae
pop
cmp
icebp
dec
addr16
sbb
arpl
(bad)
mov
cs
ret
dec
sub
ds
adc
(bad)
(bad)
call
or
adc
push
and
(bad)
dec
int3
jp
sbb
push
fs
fstp
xchg
adc
outs
and
sti
mov
xchg
iret
in
jecxz
mov
icebp
(bad)
push
sbb
(bad)
xchg
aad
retf
(bad)
cmp
mov
fidiv
fbstp
test
cmp
cmp
xor
(bad)
call
popa
mov
inc
popa
cmps
or
ret
scas
jno
sbb
popf
outs
dec
sbb
enter
inc
inc
jp
inc
lock
dec
sar
pop
icebp
in
jl
mov
sbb
mov
xchg
or
scas
(bad)
(bad)
call
xor
xchg
ret
jmp
jp
loope
cmp
jmp
cmp
jne
cdq
jmp
mov
xchg
fcomi
xor
(bad)
jmp
repnz
stos
jae
mov
inc
addr16
aam
call
clc
(bad)
inc
(bad)
jo
or
mov
(bad)
xchg
sar
popa
jmp
mov
cld
jne
fsubr
mov
jge
fidiv
push
mov
adc
call
push
sub
ret
imul
aaa
push
and
fmulp
xchg
mov
(bad)
mov
gs
jl
jg
stc
pop
hlt
mov
fisttp
sub
jmp
jae
mov
mov
(bad)
(bad)
dec
add
inc
loopne
xchg
dec
mov
jmp
js
adc
or
push
(bad)
jmp
jo
in
icebp
push
lods
xchg
sub
xchg
test
mov
(bad)
out
cmc
(bad)
push
push
xor
(bad)
(bad)
(bad)
mov
and
or
push
cwde
inc
jne
sub
lea
mov
push
jne
fs
ins
mov
sbb
ja
xchg
dec
or
mov
jl
ja
dec
(bad)
(bad)
(bad)
call
sub
jp
(bad)
fcomp
fwait
mov
dec
pop
lods
aad
mov
js
xor
push
jmp
ficomp
inc
clc
adc
(bad)
call
fs
(bad)
sbb
div
ret
ds
jg
push
and
(bad)
(bad)
(bad)
call
adc
outs
xchg
mov
add
lahf
xor
cmp
add
push
jnp
jbe
cmp
(bad)
inc
fwait
pop
jp
xchg
aam
(bad)
push
add
shr
cli
scas
dec
repz
fcmovne
popa
xlat
mov
add
mov
add
repnz
pusha
dec
pusha
push
push
fcmovbe
sub
(bad)
fdiv
shr
pop
inc
pop
pop
inc
and
xchg
sbb
in
xchg
sub
lock
mov
(bad)
(bad)
(bad)
jmp
jmp
xchg
sbb
es
cmp
cmps
jg
in
pop
(bad)
call
pop
jo
jp
repz
jno
ja
clc
add
fisub
and
loopne
xlat
mov
std
call
push
push
jg
mov
mov
test
jg
adc
(bad)
lea
mov
cmps
cli
or
mov
mov
scas
rcr
jae
(bad)
(bad)
(bad)
cmp
mov
pop
or
mov
out
inc
xlat
xchg
add
outs
dec
cmp
mov
lock
jno
inc
and
call
xor
and
pop
lea
xchg
jmp
sub
and
mov
jmp
push
pushf
cmp
push
pop
sub
adc
out
and
pop
pusha
ss
(bad)
(bad)
jmp
jl
shr
inc
lods
and
test
cs
and
sub
imul
(bad)
(bad)
jmp
mov
sub
scas
xchg
ins
movs
mov
pop
aas
push
fwait
sub
(bad)
(bad)
inc
(bad)
inc
aad
movs
mov
pop
jg
sbb
add
pop
mov
and
sub
push
jmp
jecxz
stos
pushf
or
xor
mov
cwde
or
jl
add
jmp
(bad)
(bad)
jmp
cmp
cmp
fmul
fsub
sbb
dec
punpcklbw
sbb
ins
and
jp
(bad)
(bad)
call
push
fst
xor
cmp
mov
fadd
(bad)
mov
push
xchg
or
in
cld
jmp
jbe
aaa
into
cmp
jmp
cmps
cmovl
imul
(bad)
cmp
lods
out
pop
mov
xchg
sbb
(bad)
(bad)
(bad)
push
test
scas
mov
inc
sbb
rcr
retf
push
nop
inc
test
inc
dec
push
outs
clc
jg
jg
retf
sahf
sbb
push
jne
pop
loope
mov
pop
(bad)
(bad)
(bad)
call
xor
cmp
push
call
adc
repz
add
js
jb
mov
xor
(bad)
(bad)
jmp
pop
xlat
call
stc
test
imul
retf
mov
adc
push
dec
adc
aas
lods
xchg
retf
imul
out
jge
sti
out
push
mov
jmp
loope
lods
adc
in
and
mov
add
sar
hlt
mov
cmp
xor
sbb
mov
add
fisub
out
cmp
xor
fwait
jae
inc
(bad)
(bad)
(bad)
call
mov
adc
fwait
cld
and
jmp
lock
repz
push
neg
jecxz
(bad)
in
mov
ret
cmp
in
pop
pusha
repz
sbb
pop
mov
push
inc
and
(bad)
(bad)
cmp
mov
pop
out
lods
pop
out
pop
loop
or
add
sar
mov
(bad)
jg
inc
je
jg
ret
adc
mov
mov
outs
adc
jmp
jae
loop
(bad)
out
(bad)
inc
or
adc
xor
inc
test
shl
gs
(bad)
call
xchg
pop
(bad)
(bad)
dec
out
add
cmp
pop
inc
pushf
jno
stos
pop
repnz
pop
xchg
dec
ret
call
cmp
vpunpckhdq
pop
out
cmps
out
inc
push
xchg
mov
(bad)
jg
cmp
int3
mov
sbb
mov
int3
xor
call
(bad)
jle
lahf
fiadd
cmp
mov
xchg
pushf
lea
loope
call
add
mov
pop
(bad)
cmp
jns
push
push
pop
(bad)
(bad)
push
dec
rol
inc
sub
out
stos
jg
jl
out
jb
and
inc
jbe
test
test
std
fisttp
mov
(bad)
mov
das
clc
(bad)
jmp
mov
std
mov
loopne
push
rcr
xchg
dec
mov
add
stos
(bad)
dec
sbb
jmp
not
fstp
stc
repnz
daa
(bad)
(bad)
(bad)
jmp
mov
adc
mul
das
aam
movs
jge
fidiv
adc
pop
clc
push
pop
mov
(bad)
or
pop
or
cmp
add
(bad)
(bad)
(bad)
jg
xchg
iret
and
test
or
dec
or
jl
mov
aad
or
lds
pop
and
addr16
sbb
sar
(bad)
(bad)
inc
retf
gs
movs
stos
sub
adc
scas
aam
inc
mov
rcr
inc
mov
(bad)
(bad)
(bad)
jle
out
js
ret
ret
mov
add
mov
lea
and
(bad)
(bad)
(bad)
jmp
pop
in
push
push
daa
outs
mov
push
xchg
adc
jg
inc
jge
aad
adc
(bad)
(bad)
(bad)
push
je
leave
push
inc
repz
mov
push
push
jg
sbb
adc
ss
call
jmp
pop
jns
les
(bad)
movs
pop
pop
xchg
shl
push
xchg
xchg
jmp
repnz
(bad)
push
movs
adc
adc
outs
(bad)
fcomp
cmp
(bad)
mov
int3
cmps
pop
cld
sbb
jge
add
das
jge
es
(bad)
(bad)
call
jmp
push
mov
cld
call
stos
lods
(bad)
sub
mov
jns
inc
(bad)
(bad)
(bad)
push
sbb
jae
cmp
jo
scas
pop
arpl
nop
data16
sub
(bad)
(bad)
(bad)
jmp
sti
xor
or
mov
cmc
pop
movs
int3
dec
mov
out
jg
loope
(bad)
(bad)
(bad)
mov
mov
jns
outs
mov
ins
pavgb
retf
sbb
cli
mov
cld
(bad)
mov
cdq
jle
imul
fadd
int
jns
ss
or
xchg
repnz
sbb
pop
je
sbb
outs
mov
push
popa
jge
cld
test
fs
(bad)
(bad)
jmp
dec
fdivr
pop
std
or
arpl
push
lea
jl
and
test
sub
(bad)
(bad)
push
stos
dec
repz
daa
ror
shl
fsub
push
or
jo
movs
repz
(bad)
(bad)
(bad)
dec
and
mul
ja
outs
out
aad
sbb
jno
push
bound
inc
(bad)
(bad)
(bad)
call
test
jmp
push
sbb
jno
hlt
jnp
retf
retf
push
pop
mov
mov
cld
add
and
aas
mov
push
add
mov
add
(bad)
call
call
outs
call
pop
lahf
js
jbe
ds
xchg
call
sahf
je
(bad)
(bad)
(bad)
(bad)
call
and
faddp
push
cmp
frstor
mov
cmp
pop
pop
xor
cli
iret
push
mov
(bad)
popa
sub
xchg
fadd
mov
aaa
dec
mov
(bad)
(bad)
(bad)
jmp
dec
out
cmc
fsubp
ins
enter
mov
iret
jns
test
ret
scas
fidiv
inc
sub
jae
inc
mov
and
mov
mov
fist
jmp
xor
jmp
push
scas
add
mov
adc
sbb
popa
mov
outs
(bad)
(bad)
(bad)
fcomip
push
in
sub
or
and
mov
dec
jae
or
addr16
(bad)
(bad)
push
lods
or
pop
fwait
sub
fnstsw
pop
dec
xchg
(bad)
cdq
aaa
sbb
xlat
push
cli
(bad)
(bad)
call
cmp
cmp
jnp
adc
stos
aaa
mov
mov
pop
xor
jbe
rol
(bad)
(bad)
(bad)
fdiv
(bad)
rcl
or
aas
adc
push
and
dec
pop
push
mov
or
mov
imul
sub
aad
(bad)
jg
call
mov
in
lahf
cmc
sub
sahf
retf
(bad)
cwde
(bad)
(bad)
(bad)
call
jmp
inc
test
xor
xchg
test
in
or
mov
(bad)
call
xor
mov
int3
retf
rcr
pushw
loope
sub
jg
(bad)
jmp
mov
adc
jnp
call
mov
pop
ss
(bad)
(bad)
jmp
add
aaa
dec
es
xor
in
dec
retf
(bad)
stos
je
imul
jl
mov
lock
pop
lock
std
xchg
push
pop
jl
and
and
lea
(bad)
(bad)
(bad)
jmp
mov
xor
jnp
push
test
xor
sub
add
mov
into
(bad)
out
xchg
lock
arpl
cdq
ja
and
sub
(bad)
(bad)
jmp
pop
(bad)
mov
dec
cmps
adc
(bad)
and
addr16
dec
test
pop
xchg
imul
inc
inc
movs
repnz
sbb
jns
sbb
dec
push
call
ret
ja
jle
cmp
(bad)
push
neg
sub
mov
jmp
out
fcom
ins
cmps
stc
stos
call
cld
push
bnd
jge
in
imul
outs
mov
jmp
call
push
dec
(bad)
push
mov
cmp
bound
arpl
and
clc
ficom
ja
(bad)
(bad)
(bad)
(bad)
(bad)
in
jae
sbb
xchg
pop
lods
cmp
and
outs
pop
pop
jbe
mov
ret
dec
cmp
cwde
or
pop
push
stc
movs
iret
ss
lds
mov
(bad)
call
test
(bad)
mov
mov
push
test
cmps
push
movs
cs
push
xchg
pop
popf
mov
pop
push
mov
clc
cmps
xor
push
rol
and
mov
ins
es
mov
(bad)
(bad)
jg
pushf
add
dec
addr16
cdq
jb
call
jmp
xlat
inc
ins
adc
ins
lods
pusha
add
leave
cmps
cmp
popa
(bad)
(bad)
jmp
jge
rol
add
inc
xor
dec
inc
sub
call
mov
pop
(bad)
(bad)
(bad)
inc
jle
stos
sub
inc
xor
cmp
retf
call
imul
sbb
add
repz
movs
push
(bad)
fmul
mov
pop
push
xchg
mov
mov
xchg
fldcw
ret
(bad)
(bad)
(bad)
fisttp
ja
pop
cmp
pop
jns
add
sbb
sbb
jae
cli
clc
or
mov
scas
mov
jmp
icebp
popa
retf
cmc
mov
xor
xor
cld
(bad)
(bad)
in
mov
or
push
rol
mov
ins
test
loopne
dec
pop
sub
movs
adc
retf
fld
gs
clc
mov
pop
mov
(bad)
(bad)
call
mov
mov
mov
jns
scas
inc
jmp
(bad)
(bad)
(bad)
dec
sbb
jbe
pop
icebp
das
fimul
xchg
xlat
out
jo
inc
rol
cmp
cmp
(bad)
mov
cmp
xchg
push
sti
sub
adc
jecxz
call
not
jl
mov
inc
repnz
(bad)
(bad)
push
stc
jbe
jge
call
add
sub
scas
ins
xor
aad
adc
enter
repz
(bad)
(bad)
inc
pop
leave
cwde
and
popa
add
jge
dec
rcr
pop
adc
and
add
sbb
hlt
dec
jnp
test
mov
not
mov
pop
leave
inc
push
(bad)
(bad)
jmp
pop
(bad)
push
pop
jns
mov
sub
(bad)
(bad)
push
mov
test
mov
rol
aaa
jp
mov
test
adc
into
int3
push
mov
pop
xor
dec
push
btr
jmp
into
xchg
add
outs
(bad)
(bad)
(bad)
call
mov
mov
xor
pop
pop
gs
icebp
pop
mov
in
das
jmp
cli
(bad)
(bad)
(bad)
call
jg
jp
mov
cmp
xor
add
pop
bound
dec
imul
mov
hlt
(bad)
mov
mov
dec
sub
daa
adc
cmps
cmp
clc
leave
fcom
dec
scas
push
sub
jbe
push
xlat
cmp
mov
test
adc
(bad)
push
push
sub
in
(bad)
(bad)
(bad)
(bad)
in
lock
xchg
push
inc
jne
retf
cmp
sti
jmp
mov
leave
sub
in
idiv
(bad)
(bad)
call
ret
loopne
or
adc
cli
call
inc
movs
loop
out
push
sbb
xchg
(bad)
(bad)
dec
cwde
ja
adc
aad
inc
push
jns
test
scas
(bad)
out
(bad)
outs
lods
cmp
mov
popa
outs
test
mov
out
pop
jle
(bad)
xchg
jbe
(bad)
(bad)
(bad)
(bad)
ficom
inc
push
pop
adc
and
or
sbb
adc
and
(bad)
dec
mov
ret
pop
arpl
sar
(bad)
cmp
xchg
call
dec
lock
es
(bad)
in
test
pusha
mov
out
jmp
sar
xchg
fistp
fidivr
aaa
jmp
mov
(bad)
(bad)
dec
dec
push
push
jo
ret
sbb
push
loopne
aam
pop
mov
fdivr
(bad)
(bad)
(bad)
(bad)
jmp
imul
fwait
(bad)
les
xor
daa
sbb
jp
(bad)
(bad)
(bad)
(bad)
fdiv
fstp
call
sub
adc
pop
mov
and
xor
test
mov
mov
addr16
(bad)
(bad)
(bad)
(bad)
fisttp
clc
ds
lods
scas
push
xor
push
mov
js
pop
mov
aaa
enter
loopne
(bad)
(bad)
dec
sti
xor
out
stos
sub
mov
adc
sbb
xchg
fs
lods
adc
imul
(bad)
jmp
int
and
add
out
pop
pop
inc
enter
shl
sbb
pusha
aad
ss
sbb
add
cmc
(bad)
(bad)
cld
mov
aad
movs
xchg
shr
rcr
cmps
sbb
add
fdivrp
(bad)
(bad)
jg
mov
aas
repz
add
xor
cmp
pushf
test
mov
or
(bad)
(bad)
(bad)
(bad)
mov
jns
(bad)
or
cmp
popa
and
sbb
cs
dec
push
mov
(bad)
(bad)
(bad)
(bad)
fldenv
nop
stos
paddw
xor
loopne
inc
cmps
add
stc
jmp
jl
cmc
pop
fiadd
(bad)
clc
(bad)
(bad)
inc
lock
sub
test
mov
or
in
in
jmp
jmp
scas
add
jbe
inc
xlat
and
xor
jb
xor
aaa
sbb
enter
xor
adc
scas
adc
out
mov
pop
sar
dec
jne
clc
sub
es
aas
lock
iret
int3
pop
out
call
(bad)
cmp
mov
pop
pusha
bndstx
add
xchg
jg
(bad)
jmp
mov
xor
call
mov
lods
jl
fmul
dec
dec
cld
arpl
add
dec
jnp
repz
(bad)
(bad)
push
repnz
shl
push
xchg
pop
fwait
stc
imul
inc
mov
dec
cmps
ror
hlt
js
sub
jle
mov
(bad)
(bad)
(bad)
(bad)
std
fcmovbe
(bad)
daa
add
push
sahf
sbb
inc
int
jo
out
jl
mov
pushf
mov
push
cdq
jnp
jae
mov
retf
inc
loope
in
test
xchg
ds
aaa
bound
sub
hlt
add
dec
pushf
out
nop
mov
cmp
std
or
push
and
mov
(bad)
cmp
idiv
cld
xchg
push
mov
movs
adc
cs
ins
jmp
(bad)
call
mov
sub
inc
rcr
stos
(bad)
arpl
fcom
cmps
cli
shl
loope
mov
ja
sti
cmp
mov
or
test
leave
sub
mov
in
add
hlt
(bad)
jg
sbb
lahf
in
sub
leave
and
out
xchg
push
xlat
adc
mov
dec
xchg
(bad)
(bad)
push
xchg
(bad)
cmp
mov
push
cmp
call
jmp
aam
imul
mov
inc
pop
test
aaa
or
jae
sub
out
cs
in
shl
loope
push
sub
push
aam
imul
fistp
jmp
cld
inc
lds
push
add
mov
std
das
jp
ficom
btc
es
sahf
mov
clc
push
jmp
cmp
dec
scas
jbe
out
xor
clc
(bad)
jmp
fwait
sar
lods
cld
mov
and
aam
inc
fwait
popf
push
retf
mov
(bad)
(bad)
(bad)
call
pop
sbb
shl
cld
gs
outs
mov
jp
xchg
fs
sahf
adc
(bad)
(bad)
(bad)
jmp
das
xchg
test
call
sub
fisubr
popf
aad
lahf
fdivrp
(bad)
call
jbe
xchg
inc
cmps
sbb
xchg
push
or
inc
into
jg
in
push
sar
push
mov
ficomp
imul
ror
clc
in
cwde
retf
push
outs
adc
jg
dec
es
(bad)
inc
mov
mov
test
(bad)
mov
xor
pop
mov
(bad)
(bad)
mov
and
test
xchg
in
dec
inc
sbb
in
or
jg
jmp
out
call
test
sbb
adc
int
fs
mov
out
aaa
mov
xor
jle
clc
xor
add
push
shl
mov
and
sub
mov
call
cmps
add
pop
mov
sbb
(bad)
xlat
sar
out
(bad)
(bad)
jg
out
jle
mov
ret
adc
xchg
mov
sbb
neg
not
call
or
pop
jmp
mov
or
adc
(bad)
in
fyl2x
call
jnp
add
dec
cs
xchg
ret
inc
mov
cmp
dec
int
(bad)
or
(bad)
(bad)
jmp
push
addr16
cdq
pop
xchg
mov
sti
cmps
sub
int3
(bad)
dec
or
cmp
cmp
outs
jae
dec
mov
adc
call
call
inc
add
data16
fist
mov
xor
(bad)
(bad)
call
dec
mov
mov
mov
movs
cmc
mov
mov
add
mov
je
cld
(bad)
(bad)
dec
in
fild
mov
add
dec
(bad)
mov
pop
cmps
or
jmp
jecxz
inc
or
fidiv
jo
arpl
sub
call
sar
xchg
fmulp
sbb
in
jo
pop
mov
out
fdiv
(bad)
(bad)
dec
add
fs
xchg
sub
mov
gs
ror
mov
(bad)
(bad)
(bad)
jns
int
(bad)
add
add
or
ins
cmp
mov
adc
ja
inc
(bad)
(bad)
mov
daa
sub
pop
adc
add
mov
daa
(bad)
ins
dec
sbb
push
ins
mov
cli
test
loopne
(bad)
(bad)
(bad)
(bad)
aas
and
jl
pop
dec
jb
cdq
cli
ds
push
adc
mov
jmp
inc
inc
cdq
ins
in
mov
(bad)
(bad)
jmp
cli
cmp
mov
cmps
dec
inc
cmp
sbb
jle
loopne
xor
loop
cmps
lahf
(bad)
call
pusha
dec
mov
into
mov
xchg
daa
fsubr
sub
fcmovnbe
out
pop
(bad)
(bad)
out
clc
mov
add
pop
scas
mov
ficomp
pop
mov
fwait
adc
call
stc
in
je
push
lds
in
(bad)
(bad)
(bad)
inc
sub
bound
push
sbb
mov
xor
or
xor
dec
adc
inc
jne
(bad)
(bad)
jmp
sub
sbb
cmps
jmp
ror
lds
ds
inc
mov
(bad)
(bad)
jmp
clc
imul
and
jp
mov
lock
repz
pop
test
xor
mov
jle
(bad)
dec
jmp
add
mov
and
xor
stos
mov
mov
cmp
fidivr
add
or
rol
stos
loopne
add
(bad)
push
iret
inc
test
addr16
sub
or
xor
out
adc
add
jecxz
retf
adc
xchg
mov
icebp
in
aam
xchg
xchg
jno
(bad)
(bad)
(bad)
jmp
xor
cwde
push
xor
lea
jmp
add
adc
(bad)
adc
(bad)
in
stc
add
enter
(bad)
call
sar
adc
xor
jbe
sub
jnp
mov
add
(bad)
(bad)
call
imul
sti
inc
outs
fld
fisub
(bad)
dec
inc
imul
inc
sar
(bad)
(bad)
dec
and
shl
and
(bad)
out
jno
jb
icebp
sbb
in
(bad)
mov
xor
mov
out
(bad)
(bad)
(bad)
jmp
xchg
mov
les
adc
cwde
pop
lock
mov
adc
repnz
push
loopne
gs
(bad)
(bad)
jmp
pop
int
fcom
xor
ds
lods
inc
out
lock
push
jns
cmc
jb
ss
(bad)
(bad)
jg
sub
add
pop
data16
inc
xchg
retf
ja
jecxz
fcomi
mov
adc
mov
push
sbb
icebp
mov
movs
retf
xor
(bad)
(bad)
(bad)
(bad)
cmp
xlat
sub
add
(bad)
es
pop
shl
mov
mov
lock
retf
call
push
xlat
sbb
fnsave
xchg
inc
(bad)
(bad)
(bad)
call
push
test
sti
cmp
dec
dec
das
mov
adc
dec
dec
jg
test
ss
inc
das
push
jp
dec
std
je
pushf
push
adc
cli
mov
pop
xchg
in
sub
(bad)
(bad)
call
cmp
pop
stos
shl
dec
sbb
enter
dec
inc
adc
(bad)
(bad)
fdivp
hlt
aad
or
pop
push
xor
popa
je
js
(bad)
daa
inc
shl
loop
add
inc
(bad)
(bad)
(bad)
push
mov
popf
jbe
addr16
fisubr
ja
mov
mov
cmp
iret
mov
(bad)
(bad)
(bad)
(bad)
stc
cld
ficom
add
(bad)
jae
test
push
pop
or
rcr
(bad)
ret
lea
pusha
out
test
or
push
xchg
cld
mov
inc
test
xchg
in
sub
add
(bad)
(bad)
in
(bad)
pop
mov
push
popa
jns
push
test
xor
fistp
(bad)
dec
ins
pop
and
outs
dec
jmp
add
and
test
mov
and
add
scas
ja
ja
das
and
lock
stos
mov
ds
vaddsd
(bad)
dec
push
mov
push
imul
inc
sahf
and
popf
aaa
aaa
mov
div
push
out
aam
cs
push
sub
xor
ficom
jmp
jg
sbb
pop
cmp
add
mov
ins
adc
(bad)
(bad)
push
fcomp
adc
enter
push
dec
mov
xchg
stos
and
lds
dec
pop
(bad)
(bad)
(bad)
(bad)
clc
lods
jle
pop
es
jbe
jg
popf
xchg
jge
dec
inc
cli
js
mov
not
push
jmp
sub
shr
rcl
test
cmp
fbstp
fdivr
pop
dec
adc
(bad)
inc
popf
repz
movs
clc
or
rcl
call
(bad)
(bad)
(bad)
push
bound
mov
push
out
or
aam
jp
ins
icebp
sti
pop
adc
xchg
push
sub
jmp
xchg
cmp
mov
jge
std
(bad)
(bad)
call
xchg
sbb
inc
and
fld
ret
imul
sbb
icebp
(bad)
(bad)
mov
and
iret
sbb
mov
fmul
icebp
xchg
ja
dec
repnz
(bad)
(bad)
call
ret
push
jle
(bad)
popa
or
dec
dec
mov
stos
dec
mov
push
xchg
pop
enter
movs
adc
and
scas
(bad)
(bad)
(bad)
push
in
mov
sub
ror
shr
sbb
and
or
or
jno
lods
sub
sar
cmp
ret
and
(bad)
(bad)
(bad)
(bad)
out
cmc
dec
xlat
test
adc
sbb
loop
int
sbb
rol
mov
cs
call
repz
jbe
(bad)
iret
mov
mov
movs
outs
pop
(bad)
(bad)
(bad)
jmp
repnz
clc
rcr
loop
xchg
dec
lahf
jle
loopne
push
popa
lea
in
cmp
fcomip
into
jg
adc
xor
push
pusha
neg
test
fs
in
xchg
xchg
sub
(bad)
jmp
push
xchg
arpl
js
rol
dec
xor
inc
cmp
repz
pop
add
(bad)
(bad)
inc
fst
ret
sbb
mov
(bad)
cs
ins
dec
jno
lods
sar
dec
jae
loope
xchg
pusha
push
and
daa
jmp
fld
or
and
push
cs
cmp
pop
add
inc
mov
pop
inc
sbb
(bad)
sti
pusha
adc
(bad)
loopne
mov
push
fwait
movs
loopne
sbb
mov
mov
(bad)
(bad)
(bad)
push
adc
js
std
mov
xor
inc
(bad)
and
or
rcl
(bad)
(bad)
cmp
push
jg
(bad)
push
cld
dec
or
cmp
push
ins
push
cmp
fwait
sub
cmp
test
out
popf
cwde
add
(bad)
(bad)
(bad)
push
pop
inc
in
retf
mov
pop
adc
adc
call
add
(bad)
(bad)
inc
clc
xor
cmp
scas
(bad)
sub
int
retf
add
xlat
add
mov
jno
sub
add
cmp
retf
push
inc
cmp
and
sahf
ret
mov
push
adc
pop
loopne
xchg
scas
jmp
ins
dec
jmp
push
sbb
pop
aad
pop
repz
mov
dec
add
std
(bad)
(bad)
(bad)
(bad)
inc
pop
sbb
push
pop
pushf
hlt
imul
or
xchg
rcr
cmp
(bad)
(bad)
call
(bad)
jle
fld
xchg
dec
cmp
call
aam
xchg
pusha
xchg
xor
jge
add
out
mov
cmp
pushf
imul
add
into
(bad)
(bad)
(bad)
jmp
cli
push
pop
and
shl
out
jg
or
sub
pop
mov
xchg
int
sub
call
inc
stc
push
stos
mov
into
jmp
test
add
fidiv
shr
(bad)
inc
cld
xchg
(bad)
adc
xchg
out
cmovne
inc
ja
sbb
int3
fstp
lea
(bad)
push
fimul
inc
pop
and
push
(bad)
sahf
jp
in
push
retf
inc
fdivr
(bad)
(bad)
push
call
ja
les
and
xor
enter
push
adc
add
inc
pop
adc
sub
jne
dec
(bad)
pop
pop
push
mov
xchg
aad
sub
push
fbstp
(bad)
(bad)
(bad)
jmp
mov
xor
sub
mov
sar
iret
(bad)
mov
rol
mov
sar
retf
jb
scas
adc
jmp
in
stos
pop
clc
dec
not
daa
aam
lahf
or
jmp
aam
lock
(bad)
dec
pop
or
pop
xchg
mov
cmc
lods
xchg
(bad)
sbb
icebp
hlt
ret
clc
mov
(bad)
fisttp
data16
sbb
push
pop
cmp
(bad)
(bad)
fbstp
test
loopne
test
xlat
ins
loope
fisubr
adc
adc
xor
sbb
cld
(bad)
(bad)
fcomip
sbb
out
mov
imul
dec
pop
in
pop
loopne
push
dec
movs
and
(bad)
(bad)
(bad)
cmp
jnp
daa
mov
cs
adc
cmp
loop
aaa
xor
neg
inc
xchg
cmps
inc
dec
cwde
outs
sahf
stc
shl
and
xchg
jmp
xor
lock
sbb
sbb
(bad)
(bad)
jmp
jmp
lahf
(bad)
call
inc
or
out
cdq
cmp
push
arpl
(bad)
ds
adc
push
das
mov
add
jne
cmp
pop
js
add
fcomip
(bad)
jg
add
stos
ins
push
ja
sub
xor
push
xchg
(bad)
pop
xchg
lea
pusha
(bad)
(bad)
(bad)
(bad)
aas
xor
sub
xor
cmps
addr16
xchg
(bad)
mov
mov
lods
pusha
movs
mov
cmp
outs
cli
(bad)
(bad)
mov
push
mov
add
das
test
fild
out
hlt
aaa
aam
nop
(bad)
fbld
imul
fs
ins
xlat
pop
add
hlt
call
and
inc
pusha
fstp
push
ret
(bad)
pop
ss
mov
cmp
cli
mov
pop
scas
pop
inc
push
cmp
mov
add
jecxz
mov
lock
(bad)
jmp
mov
mov
add
es
stos
fild
stos
aas
fiadd
(bad)
jg
jmp
jecxz
out
les
dec
fs
mov
les
mov
call
jmp
xchg
push
fwait
mov
imul
scas
sar
fs
xchg
sub
dec
mov
jbe
xchg
mov
mov
inc
cmp
mov
dec
cmc
cmp
in
repz
cmp
enter
mov
std
cmp
test
(bad)
int
mov
pop
(bad)
(bad)
jg
cmovae
out
addr16
ficomp
pusha
inc
mov
pop
mov
push
(bad)
(bad)
(bad)
push
repz
imul
and
mov
cmp
enter
and
(bad)
(bad)
jmp
daa
mov
(bad)
jmp
pop
stc
adc
mov
jmp
dec
and
movs
not
pop
and
xor
pusha
ret
xor
mov
mov
out
lods
out
adc
popa
std
(bad)
(bad)
cli
ja
aas
jno
sub
pushf
ss
mov
dec
fistp
test
jmp
xor
into
adc
out
mov
mov
in
add
movs
adc
pop
cmp
stc
fdivrp
pop
pop
jmp
call
arpl
adc
gs
mov
(bad)
cwde
ins
repnz
sbb
lods
mov
(bad)
(bad)
(bad)
jmp
iret
in
mov
or
push
dec
movs
aam
in
cdq
xchg
jne
dec
sbb
jg
inc
dec
pop
xchg
inc
push
xor
les
(bad)
call
pop
dec
out
sub
in
adc
mov
xchg
xor
out
and
repz
jb
(bad)
(bad)
push
xor
test
dec
inc
inc
pop
xchg
adc
mov
loop
idiv
arpl
(bad)
(bad)
(bad)
mov
ret
jmp
rcl
jb
nop
pop
in
(bad)
out
or
pop
inc
push
push
loope
xchg
clc
(bad)
inc
std
jae
sahf
nop
inc
push
es
retf
pop
lods
push
inc
and
(bad)
dec
leave
out
pop
adc
lods
mov
stos
push
mov
pop
inc
xchg
push
addr16
(bad)
inc
cmps
dec
sub
rcr
sbb
sub
sar
clc
jmp
fisub
pop
cli
call
(bad)
push
lods
dec
dec
pop
mov
cli
call
push
adc
xor
cdq
jne
in
(bad)
(bad)
(bad)
jmp
(bad)
mov
std
nop
dec
or
(bad)
pop
cmps
and
loop
es
cmp
mov
(bad)
(bad)
(bad)
(bad)
out
xchg
sbb
push
inc
push
outs
mov
mov
sbb
sbb
and
outs
push
inc
mov
xchg
sub
std
(bad)
(bad)
call
jnp
rcr
addr16
pop
or
fs
jb
pop
in
cld
xor
outs
and
ficom
push
and
rcr
lds
inc
not
aas
xor
adc
call
xor
inc
dec
xor
(bad)
(bad)
(bad)
(bad)
(bad)
cld
test
or
les
mov
mov
gs
mov
dec
dec
out
mov
jmp
or
push
sub
dec
retf
retf
pop
push
and
push
out
repz
mov
add
push
pop
je
push
xor
retf
retf
mov
outs
ins
daa
dec
pause
nop
cld
or
jmp
add
mov
bound
jb
xchg
(bad)
call
inc
mov
mov
in
cwde
and
loope
sub
sub
sub
aaa
(bad)
(bad)
(bad)
inc
inc
pop
clc
out
inc
dec
cmp
sar
sbb
adc
xchg
out
mov
xor
cmps
(bad)
call
add
lods
enter
pop
(bad)
jo
ja
sub
out
mov
(bad)
(bad)
call
sti
lods
mov
sbb
sbb
push
pushf
je
xor
popf
mov
addr16
(bad)
(bad)
call
nop
mov
cmc
div
fnstenv
mov
arpl
repnz
inc
fcomp
(bad)
dec
repz
shl
fidivr
xor
jge
inc
mov
data16
jmp
mov
jl
inc
push
mov
outs
sbb
das
pop
jb
leave
pop
(bad)
(bad)
call
cwde
or
push
fild
sbb
add
dec
(bad)
(bad)
(bad)
call
retf
ins
fistp
add
mov
loope
xchg
sbb
jnp
or
fcom
(bad)
(bad)
(bad)
jmp
icebp
aaa
and
into
sbb
addr16
stos
lahf
xchg
pop
jns
outs
scas
rol
mov
cmp
(bad)
(bad)
(bad)
call
and
test
scas
jo
adc
or
inc
(bad)
cwde
xchg
lea
dec
imul
(bad)
(bad)
(bad)
push
adc
out
pop
mov
xor
mov
and
inc
inc
hlt
mov
call
jae
ja
add
faddp
aaa
mov
rcl
mov
dec
js
cld
retf
(bad)
(bad)
out
ins
push
sahf
popa
shr
add
inc
add
adc
cmp
inc
add
mov
jg
pop
out
sub
fucomi
push
clc
mov
stos
mov
(bad)
push
mov
sbb
test
jp
cmp
cmp
mov
test
push
xor
(bad)
(bad)
jmp
int
mov
fst
dec
or
mov
xor
adc
shl
cwde
(bad)
(bad)
(bad)
call
int3
xor
or
jno
lea
movs
or
bound
les
cmp
pop
(bad)
mov
popf
in
mov
mov
add
inc
cld
aaa
cld
jmp
fsqrt
sub
arpl
retf
xor
pop
pop
jl
add
cmp
dec
aas
xchg
ins
and
inc
jmp
(bad)
(bad)
mov
js
inc
int
mov
mov
mov
adc
movs
dec
cdq
mov
arpl
(bad)
mov
jl
adc
mov
and
jo
lods
xchg
and
fsub
hlt
push
nop
inc
mov
mov
xor
fild
(bad)
inc
stos
inc
or
pop
sahf
sub
jecxz
mov
dec
outs
inc
cmc
pusha
pop
js
in
add
mov
outs
into
sar
cli
mov
inc
mov
in
add
lock
inc
in
int3
je
gs
ret
call
in
(bad)
(bad)
test
add
mov
out
dec
jb
jmp
jg
inc
mov
sub
es
inc
cmp
ror
inc
bound
js
stos
(bad)
xlat
push
pop
dec
sbb
(bad)
(bad)
call
fwait
inc
xor
out
push
mov
pop
ret
sub
dec
push
test
mov
call
popf
cmp
mov
and
sbb
stos
pusha
pop
call
in
push
push
cmps
jmp
pop
(bad)
(bad)
(bad)
(bad)
jmp
movs
fbstp
xor
cmp
lods
nop
fdiv
retf
xchg
cwde
jmp
pushf
mov
mov
sub
call
std
ret
jbe
stos
pop
out
in
fbstp
sbb
mov
adc
push
mov
shl
fild
fistp
fs
iret
mov
mov
and
mov
(bad)
call
cs
and
mov
pushf
aas
cmc
movs
dec
(bad)
(bad)
int
outs
pop
pop
mov
xor
out
sbb
(bad)
jmp
shr
dec
iret
daa
sbb
aad
sub
jae
loope
loopne
das
mov
std
(bad)
cmp
or
stc
mov
adc
retf
repnz
and
(bad)
(bad)
push
sub
gs
dec
cld
mov
inc
shr
fadd
aam
into
(bad)
sub
sti
call
jmp
scas
mov
pop
mov
or
in
or
add
lods
call
test
movs
fs
(bad)
(bad)
(bad)
jge
stos
test
sub
inc
xor
cmps
jge
mov
xlat
dec
stos
or
sub
(bad)
(bad)
(bad)
jmp
pop
jno
dec
xor
inc
sbb
mov
rcl
sbb
es
mov
repnz
xchg
mov
data16
mov
outs
jno
pop
stos
fcomi
mov
and
(bad)
(bad)
(bad)
jmp
dec
cmps
cli
push
push
jo
loope
xchg
add
push
loop
xlat
xor
mov
(bad)
(bad)
mov
enter
pop
lods
inc
adc
fwait
ss
test
jmp
or
fcomp
and
shl
pop
mov
pop
stos
shl
sbb
call
daa
sub
sbb
cmp
and
pop
xor
call
add
call
xchg
mov
in
jmp
mov
outs
out
scas
gs
paddsw
lods
push
(bad)
add
jmp
xor
fadd
mov
in
(bad)
(bad)
(bad)
jmp
and
xor
push
dec
and
dec
mov
ins
sahf
sbb
mov
ss
shl
jo
add
xor
mov
push
sti
jae
in
xor
mov
or
or
arpl
adc
dec
xchg
cmp
dec
sbb
sbb
in
fimul
fs
jbe
shr
sub
movs
(bad)
(bad)
(bad)
jmp
dec
cmp
inc
outs
add
xor
js
push
jae
jns
sub
lods
(bad)
jg
dec
add
xchg
sbb
or
cdq
cmps
and
and
adc
inc
loope
push
xor
test
leave
xchg
pop
stos
mov
and
xchg
mov
or
addr16
fnstenv
rcl
inc
sub
movs
retf
push
mov
(bad)
(bad)
jmp
setae
pop
cmps
xor
pop
stos
cmp
outs
stos
fcomp
jne
mul
xchg
jmp
or
jle
mov
hlt
leave
fwait
in
or
call
call
stc
in
and
in
(bad)
pop
xchg
repz
call
mov
and
mov
(bad)
mov
loope
sbb
jns
inc
sub
inc
adc
xor
popf
add
fst
sbb
mov
xchg
ror
fst
(bad)
pop
outs
dec
mov
cld
outs
mov
push
sbb
(bad)
(bad)
jg
or
push
in
dec
lds
push
nop
mov
adc
movs
cmp
std
call
adc
sub
xlat
jns
adc
jne
mov
lock
lods
clc
ror
shr
fimul
mov
sbb
data16
(bad)
(bad)
call
or
call
fist
push
repnz
add
adc
shl
(bad)
(bad)
(bad)
inc
pusha
test
(bad)
mov
dec
dec
sbb
ret
cwde
es
jmp
cs
ret
pop
sub
mov
test
inc
data16
cmp
stc
hlt
sbb
cld
(bad)
jg
mov
int
daa
test
loop
ins
out
add
cmp
(bad)
(bad)
dec
cdq
out
add
and
xchg
jns
fild
jecxz
adc
(bad)
mov
sub
or
mov
inc
movs
and
sub
aad
jb
mov
rcl
cwde
in
das
repnz
sar
dec
(bad)
(bad)
(bad)
inc
xor
in
jmp
vucomiss
pop
push
jl
retf
or
mov
movs
fsubr
icebp
stos
sbb
(bad)
(bad)
call
inc
test
mov
add
xchg
das
dec
mov
js
dec
int
xchg
push
lods
push
fcom
(bad)
(bad)
(bad)
jmp
icebp
mov
xlat
add
fwait
push
das
or
push
sbb
mov
or
or
(bad)
jmp
add
add
jmp
imul
push
retf
aaa
jmp
in
xor
sub
test
(bad)
(bad)
jmp
cmp
out
iret
mov
push
loope
sbb
mov
push
ret
rol
mov
(bad)
(bad)
(bad)
(bad)
fidivr
cmps
cmp
or
mov
lods
dec
adc
sbb
movs
out
in
rol
cdq
xor
(bad)
(bad)
jmp
jo
xchg
lea
movs
aam
ja
ins
pop
pop
add
sub
movs
test
je
popa
add
(bad)
(bad)
call
enter
ja
aaa
cmp
and
sub
int
push
outs
push
std
add
inc
pop
inc
hlt
fld
sub
std
adc
xchg
sahf
sbb
mov
repz
fnstcw
(bad)
(bad)
push
call
mov
push
pop
xchg
lds
fsub
ret
xchg
push
xchg
pop
(bad)
call
loope
inc
(bad)
test
cs
adc
push
pop
test
cmp
das
sar
scas
adc
sbb
pop
add
mov
inc
jecxz
add
add
fld
(bad)
(bad)
(bad)
call
add
pop
sbb
nop
cli
lods
inc
fbstp
mov
test
arpl
jmp
call
mov
xchg
xor
add
cmps
movs
pushf
ja
(bad)
(bad)
(bad)
dec
enter
in
mov
bound
mov
mov
mov
es
sahf
mov
(bad)
(bad)
(bad)
jmp
test
mov
adc
lds
pop
fiadd
pop
xor
jp
or
ja
push
out
das
rol
mov
lods
aad
in
jno
mov
jmp
(bad)
call
ds
nop
inc
pop
hlt
shl
imul
push
jecxz
ds
adc
jne
dec
test
pop
pop
lds
ja
add
add
adc
call
xor
fcmove
imul
mov
sub
inc
pop
cmp
(bad)
lahf
pop
lahf
push
inc
lahf
and
sub
outs
rcr
pusha
adc
(bad)
(bad)
push
pop
ret
pop
ror
movs
ror
(bad)
cld
(bad)
mov
adc
xchg
sub
push
std
(bad)
dec
shl
cmp
fsubr
loopne
add
mov
xchg
outs
xor
and
(bad)
(bad)
push
adc
popf
push
xlat
inc
scas
dec
call
in
and
leave
mov
and
pop
cld
js
sub
and
push
ficomp
cdq
inc
aas
and
repz
nop
cmp
jp
clc
dec
loope
(bad)
mov
aad
mov
(bad)
(bad)
(bad)
jmp
or
repz
add
pop
out
adc
retf
sbb
xchg
jb
mov
xchg
jl
xchg
mov
jg
(bad)
jmp
popa
cmp
fs
test
in
stc
push
stos
sub
call
(bad)
and
test
xor
ror
or
bound
iret
jecxz
mov
popa
loope
(bad)
dec
lock
jae
lock
push
inc
aas
hlt
or
dec
(bad)
sbb
or
mov
and
mov
shl
(bad)
call
or
sbb
movs
xchg
jae
je
mov
icebp
loopne
and
push
inc
(bad)
das
cli
(bad)
dec
push
gs
cwde
ins
mov
sbb
cmp
test
dec
loope
jecxz
pop
push
pop
cmp
mov
imul
hlt
mov
(bad)
outs
cli
cmp
test
xor
(bad)
push
cmps
retf
mov
inc
shr
std
call
lock
loopne
fnstsw
cmp
jle
xor
test
js
cmps
and
mov
sbb
add
ds
mov
dec
seto
push
xchg
xchg
je
bound
or
ret
mov
cld
(bad)
(bad)
(bad)
fstp
out
fild
rcr
arpl
test
dec
mov
into
shr
ins
lds
xor
inc
mov
xchg
mov
or
shr
mov
(bad)
(bad)
cmp
add
cmp
jb
add
xchg
mov
(bad)
(bad)
dec
and
cmp
test
and
dec
les
out
icebp
jae
(bad)
lods
mov
(bad)
push
adc
mov
mov
imul
inc
jl
ds
sub
arpl
dec
sar
(bad)
(bad)
cmp
sub
fdiv
jnp
cmp
out
dec
std
xor
lods
xor
cli
push
inc
adc
sbb
push
push
push
adc
neg
test
sub
retf
scas
push
mov
movs
hlt
jp
push
lods
or
mov
fmul
(bad)
(bad)
mov
les
mov
int3
mov
jmp
adc
ds
sub
(bad)
call
and
mov
xchg
add
ins
mov
mov
dec
rol
jns
cmp
(bad)
(bad)
jmp
das
sub
push
and
int3
mov
ret
xor
mov
test
test
(bad)
(bad)
fnstsw
xor
int
lahf
call
mov
xor
adc
(bad)
(bad)
(bad)
call
shl
and
lods
addr16
stos
pop
cld
jmp
daa
pop
stos
repnz
dec
mov
pushf
jmp
xchg
(bad)
(bad)
(bad)
call
dec
ror
sbb
push
sahf
dec
pusha
add
popa
fs
mov
xor
inc
hlt
xlat
sub
mov
(bad)
(bad)
(bad)
call
jge
popf
pop
stos
mov
dec
lods
sti
dec
and
jnp
sar
ret
test
out
cmp
test
(bad)
(bad)
(bad)
fbstp
sbb
sar
xor
inc
mov
fwait
aad
mov
addr16
add
xchg
hlt
xchg
(bad)
(bad)
jmp
fcmovnbe
daa
add
nop
xor
mov
ss
scas
jp
mov
adc
ins
aaa
xchg
inc
cwde
(bad)
(bad)
(bad)
call
pop
(bad)
in
jmp
es
mov
pop
stos
adc
push
add
fs
retf
mov
popf
pop
(bad)
(bad)
(bad)
(bad)
cmp
into
dec
mov
mov
movs
aaa
push
jmp
out
mov
adc
in
enter
(bad)
jmp
addr16
mov
popf
(bad)
pop
adc
xchg
push
nop
ja
fiadd
(bad)
inc
iret
ja
pusha
addr16
lods
test
ins
sbb
(bad)
xor
or
mov
mov
and
(bad)
data16
mov
jecxz
pop
push
test
(bad)
(bad)
cli
scas
or
mov
xchg
mov
call
call
daa
addr16
cld
cmc
dec
xchg
call
inc
test
cld
(bad)
(bad)
cmp
jmp
sti
loop
(bad)
pushf
pop
pushf
jnp
cmp
jg
mov
sub
(bad)
cli
outs
fcmovb
inc
pop
xchg
out
(bad)
xchg
(bad)
in
(bad)
push
in
push
ror
pop
(bad)
(bad)
fs
xchg
sub
imul
sub
cmp
cmp
dec
ja
fcomip
call
push
pop
out
sub
pop
fidivr
mov
test
mul
dec
pop
jecxz
loope
movs
jl
mov
and
mov
(bad)
es
les
push
mov
(bad)
or
(bad)
inc
pop
mov
movs
repz
shl
iret
pop
and
test
(bad)
jg
call
pushf
xchg
add
loopne
pop
lea
mov
sbb
xchg
xlat
jmp
inc
jmp
pop
xlat
inc
xchg
loop
sbb
push
dec
jmp
shl
cli
mov
dec
cmp
xor
jno
fld
(bad)
inc
(bad)
xchg
ss
in
rcl
mov
inc
mov
call
mov
call
push
mov
and
adc
mov
xchg
fnstsw
retf
jp
(bad)
(bad)
(bad)
(bad)
call
sbb
inc
(bad)
stos
push
dec
scas
loope
aaa
dec
aad
pop
pop
sbb
sub
out
add
dec
(bad)
fs
rol
ins
mov
popf
mov
inc
inc
retf
push
shr
(bad)
(bad)
(bad)
(bad)
mov
repnz
and
pop
fs
jge
popa
push
iret
scas
xor
dec
adc
out
(bad)
(bad)
(bad)
(bad)
jp
jmp
fdivp
inc
test
xchg
in
cmp
xchg
pop
adc
or
popa
dec
loopne
dec
enter
call
and
sub
movs
(bad)
jne
ins
adc
mov
(bad)
jp
xchg
mov
pop
test
daa
call
cmp
push
test
rcr
mov
(bad)
out
clc
aam
lods
(bad)
cmp
in
adc
mov
sbb
loope
(bad)
(bad)
call
adc
mov
or
xlat
fadd
cmc
xor
mov
inc
clc
(bad)
inc
test
pop
dec
inc
mov
mov
loope
loopne
pusha
mov
es
rcl
pop
xchg
mov
or
in
lods
mov
fld
sub
and
stc
xor
cli
(bad)
push
push
loope
retf
xor
(bad)
mov
dec
add
jg
jo
(bad)
(bad)
(bad)
(bad)
cld
xchg
test
(bad)
lds
or
fwait
sti
inc
inc
xchg
out
sahf
lock
sahf
in
xchg
scas
mov
and
inc
mov
cmp
call
into
rol
adc
jmp
sub
adc
les
mov
push
add
mov
loope
(bad)
(bad)
(bad)
jmp
mov
cmp
test
lahf
sbb
(bad)
icebp
or
jnp
cmp
loopne
(bad)
inc
je
cs
ret
enter
jle
cmp
out
out
leave
cli
retf
neg
mov
mov
add
and
dec
lods
ror
hlt
cmc
mov
mov
dec
in
and
(bad)
(bad)
dec
test
scas
jecxz
cmp
inc
mov
jno
jno
retf
mov
inc
mov
cmp
ds
push
(bad)
push
adc
xchg
jp
sub
and
mov
dec
fstp
out
xchg
jl
(bad)
(bad)
(bad)
(bad)
fsub
xchg
push
aaa
lods
dec
jg
repz
xchg
push
fild
lea
jmp
push
ret
bound
push
fprem1
fimul
pushf
js
or
data16
jg
jmp
out
fcmovnbe
sub
retf
jp
mov
lea
out
xor
(bad)
(bad)
(bad)
dec
push
ja
pop
push
call
loope
xchg
das
imul
mov
mov
dec
and
int
push
stos
and
jecxz
jo
sub
fsub
lock
(bad)
jg
in
mov
adc
sti
jae
dec
jmp
out
adc
test
(bad)
sbb
push
sbb
cmps
loopne
adc
into
sahf
pop
sub
dec
jle
cs
clc
push
sbb
xor
xor
call
call
mov
jl
mov
xchg
jae
mov
(bad)
(bad)
(bad)
dec
mov
fwait
mov
jle
imul
mov
dec
mov
push
pusha
(bad)
mov
sbb
push
rol
jne
cwde
push
ret
xchg
neg
int3
(bad)
(bad)
(bad)
inc
xchg
inc
mov
mov
out
mov
pusha
cmc
push
and
and
jle
out
ins
inc
add
jl
mov
xor
pop
and
jmp
xor
outs
jns
cmps
mov
mov
mov
call
dec
add
cmp
inc
std
dec
call
fdiv
cli
dec
(bad)
(bad)
(bad)
call
xchg
xchg
xchg
mov
iret
sub
mov
mov
mul
or
jnp
ja
out
scas
add
adc
(bad)
(bad)
jmp
dec
add
pop
push
in
jecxz
and
sub
(bad)
adc
(bad)
(bad)
inc
push
push
mov
movs
or
ficom
ins
(bad)
jno
cmp
sub
loopne
inc
dec
adc
push
add
stos
xchg
ss
pop
add
outs
fcomp
pop
sbb
enter
fnstenv
push
retf
or
and
dec
dec
out
inc
movs
mov
xchg
not
pop
sub
repz
cmp
sub
xchg
cmp
inc
cdq
je
sar
(bad)
call
xor
pop
rol
xlat
xor
addr16
xor
sub
rol
pop
add
push
out
push
out
dec
(bad)
pop
fnstcw
dec
hlt
lea
mov
data16
test
wbinvd
xchg
and
(bad)
jmp
imul
pop
in
out
mov
pop
(bad)
fisttp
leave
cmp
add
inc
daa
and
jmp
sbb
xor
mov
das
clc
add
lock
ret
scas
pusha
mov
dec
xor
pop
hlt
add
push
pushf
or
js
mov
fldcw
cld
leave
push
(bad)
dec
push
daa
xchg
mov
call
dec
and
mov
push
dec
push
cmp
sbb
xchg
(bad)
test
jns
outs
xchg
retf
sar
(bad)
(bad)
fnstcw
and
movs
xchg
loop
jp
sub
into
enter
lea
(bad)
adc
inc
iret
xchg
dec
rol
dec
dec
(bad)
(bad)
(bad)
mov
push
test
cmp
or
out
push
inc
test
in
pusha
and
fisubr
jnp
icebp
lock
sbb
push
std
inc
cs
jb
xor
nop
aad
fistp
es
cmp
push
pop
add
clc
icebp
push
push
xchg
jl
adc
cwde
cmp
lods
leave
and
(bad)
(bad)
(bad)
(bad)
clc
pusha
fbstp
xchg
push
bound
rol
loope
mov
mov
xlat
and
(bad)
(bad)
(bad)
jmp
push
clc
mov
call
call
cmc
retf
push
dec
mov
pop
xor
(bad)
call
rol
adc
push
sahf
mov
ret
dec
and
mov
(bad)
mov
dec
iret
jb
push
aad
sbb
inc
mov
retfw
sub
or
div
xor
inc
xchg
pushf
mov
xchg
cmp
xchg
dec
ficom
jl
inc
(bad)
(bad)
(bad)
call
xchg
sbb
fst
xchg
jmp
adc
jbe
add
inc
xchg
or
and
cmps
or
popf
mov
enter
(bad)
(bad)
inc
(bad)
fistp
mov
add
jmp
mov
or
movs
cmp
lods
add
in
(bad)
(bad)
(bad)
call
sbb
xchg
loop
ins
int3
test
jo
cmps
hlt
(bad)
xor
(bad)
(bad)
(bad)
(bad)
dec
inc
adc
repz
hlt
test
cmp
mov
and
xchg
cwde
push
mov
push
ins
mov
add
push
ret
repz
push
mov
imul
lds
(bad)
(bad)
jmp
call
mov
mov
adc
jb
retf
hlt
nop
pop
mov
ret
sbb
lods
cld
mov
addr16
xchg
jo
(bad)
(bad)
(bad)
call
mov
pop
and
pop
pop
pop
jp
mov
cmp
cmp
jge
push
jl
push
mov
(bad)
outs
cmc
mov
loopne
out
mov
xchg
push
(bad)
(bad)
(bad)
jmp
gs
daa
mov
mov
or
adc
cmps
ds
clc
sar
fisub
(bad)
call
(bad)
call
(bad)
lea
ins
mov
mov
dec
not
inc
or
pop
pop
sbb
(bad)
(bad)
call
add
mov
jbe
pop
or
(bad)
pusha
inc
xor
adc
addr16
mov
lods
xchg
sub
ja
clc
(bad)
call
ficom
cld
mov
imul
sub
rcl
fdivr
(bad)
(bad)
inc
sbb
mul
scas
xchg
ret
add
adc
fcmove
mov
mov
mov
cs
fadd
shl
jle
inc
pop
hlt
out
aas
in
pop
out
pop
jg
jns
or
(bad)
dec
ror
fist
ret
sub
dec
xchg
outs
or
jg
ja
pop
and
mov
aaa
pop
loop
mov
pop
jecxz
(bad)
(bad)
(bad)
in
scas
sub
mov
sti
cmp
mov
bound
adc
dec
and
jle
cld
(bad)
mov
mov
stos
cmp
add
in
pop
or
scas
push
in
or
popa
inc
gs
outs
pusha
mov
loopne
lods
push
enter
(bad)
call
push
fdiv
mov
outs
lock
add
popa
mov
shr
repz
push
lods
mov
cwde
pop
mov
shl
retf
adc
mov
(bad)
(bad)
jg
pop
loopne
xchg
out
or
(bad)
mov
sub
imul
(bad)
push
pop
in
lahf
fcomp
and
pushf
(bad)
push
movs
cmp
pop
xchg
mov
(bad)
(bad)
jg
sbb
lock
int3
push
imul
imul
ds
(bad)
(bad)
(bad)
jmp
dec
ret
sub
cld
jne
lods
lea
fdivr
out
or
xor
sub
movs
shr
dec
cmps
sbb
fisub
lock
ret
dec
or
ja
cmp
enter
ds
(bad)
(bad)
(bad)
fbld
jno
and
mov
adc
pushf
cmp
cmp
es
popf
int3
lds
jno
gs
les
dec
into
adc
(bad)
(bad)
(bad)
call
shl
cmc
fstp
popa
dec
or
clc
scas
out
int
cwde
fnsetpm(287
mov
ret
push
(bad)
(bad)
(bad)
inc
popf
repz
lods
test
sub
adc
scas
fcmovbe
mov
popf
jne
inc
jbe
mov
jnp
or
adc
out
bound
ins
nop
je
cmp
and
test
mov
mov
call
xchg
pop
jb
inc
stc
push
dec
sbb
mov
rol
jbe
dec
fisubr
mov
xchg
dec
sti
(bad)
dec
lock
aad
jno
push
scas
aam
cmp
mov
push
lods
clc
(bad)
jmp
inc
jmp
push
xchg
dec
pop
or
shr
(bad)
push
je
push
inc
jne
xor
mov
in
adc
dec
mov
mov
sti
mov
mov
push
xchg
ins
(bad)
ja
jmp
retf
sahf
ds
std
ror
(bad)
(bad)
call
adc
cdq
cmp
ret
jmp
cmp
popf
jecxz
or
cdq
cmp
(bad)
dec
or
adc
mov
fstp
into
xor
nop
inc
sbb
ja
inc
gs
cld
(bad)
jmp
(bad)
xchg
push
inc
je
out
fsubr
mov
jmp
test
(bad)
(bad)
(bad)
in
sti
pop
inc
mov
arpl
jbe
add
pushf
or
call
(bad)
mov
in
pop
outs
imul
inc
ret
xor
aas
or
(bad)
(bad)
jmp
dec
test
sub
jle
pushf
arpl
mov
xor
mov
sub
(bad)
xor
(bad)
(bad)
rcr
adc
and
test
mov
(bad)
(bad)
(bad)
sti
cmc
dec
test
dec
retf
repnz
sub
pop
sub
ret
pop
icebp
xor
cli
mov
fs
fdivr
xor
cmp
(bad)
(bad)
jmp
sbb
ds
clc
jbe
repnz
cmps
lds
jnp
push
and
(bad)
jmp
fcom
pop
in
xchg
(bad)
and
mov
ins
movs
dec
add
or
dec
pminub
or
dec
cmp
std
push
jno
dec
jbe
mov
xchg
cld
inc
push
adc
add
jmp
fnstenv
call
jne
ss
dec
push
(bad)
adc
push
loop
jb
jae
das
iret
out
dec
jno
or
sahf
cmp
call
mov
into
jbe
packsswb
mov
(bad)
or
into
push
in
imul
imul
call
sub
fxch
xchg
dec
and
jbe
or
call
lock
mov
lock
xchg
mov
(bad)
in
add
les
das
jno
push
mov
aad
gs
mov
pop
push
outs
pop
nop
mov
in
pop
dec
push
hlt
push
adc
pop
cmp
mov
or
cli
dec
mov
mov
xchg
stos
and
(bad)
(bad)
push
adc
inc
mov
mov
out
jno
imul
pop
xor
push
sahf
pushf
inc
cmps
(bad)
(bad)
call
inc
xchg
adc
cwde
push
popa
scas
sbb
out
lds
int
scas
ret
and
inc
jmp
mov
inc
out
xor
movs
mov
mov
clc
(bad)
fidivr
sub
sub
aam
xchg
movs
(bad)
(bad)
(bad)
call
and
shl
sub
xor
pop
pop
lock
jg
int3
push
test
(bad)
push
fnstcw
adc
inc
jecxz
mov
in
jg
cmp
(bad)
out
fcom
jp
in
mov
in
cmp
gs
mov
les
adc
(bad)
(bad)
(bad)
fisttp
push
xchg
hlt
add
fcomp
inc
(bad)
rcl
arpl
sbb
(bad)
loop
sar
(bad)
jmp
out
inc
or
leave
mov
imul
out
sahf
ror
ins
cld
(bad)
call
sahf
dec
lods
add
sar
(bad)
std
(bad)
call
stc
cmp
clc
lock
scas
adc
ror
into
sbb
cmp
mov
icebp
retf
mov
int3
in
test
adc
sub
pop
or
and
(bad)
jg
add
add
sub
mov
mov
lods
or
aad
pop
enter
lods
mov
jle
sbb
fsub
(bad)
(bad)
mov
dec
mov
sub
mov
xor
dec
int3
inc
sub
popa
(bad)
(bad)
(bad)
dec
out
fnstenv
inc
inc
mov
ret
sub
int
or
adc
(bad)
(bad)
(bad)
jmp
jmp
pop
adc
sbb
mov
inc
rcr
out
xchg
adc
iret
cmp
mov
cmp
adc
dec
jp
(bad)
ret
cld
aas
fcomp
dec
mov
add
(bad)
(bad)
(bad)
call
inc
retf
push
mov
pop
js
jp
mov
repz
inc
mov
or
cdq
add
int
fwait
jmp
ds
test
add
retf
(bad)
(bad)
call
dec
xchg
lahf
sub
aaa
inc
sahf
fisttp
xor
fwait
mov
(bad)
(bad)
(bad)
(bad)
jge
mov
push
xchg
ret
xor
imul
push
ror
push
cmp
test
lods
jmp
xor
push
sub
outs
cwde
cmp
mov
mov
dec
movs
(bad)
(bad)
mov
mov
dec
lock
lods
ret
bound
ror
inc
cld
or
mov
(bad)
(bad)
dec
xor
xor
sbb
adc
mov
(bad)
fild
lahf
lock
nop
jno
pop
(bad)
aam
inc
aaa
ja
les
into
cli
add
pop
(bad)
fbld
call
fwait
xchg
das
popa
std
loope
jo
popf
call
pop
cld
push
fdivr
shl
loop
loopne
js
sti
pop
sahf
cmp
test
stos
(bad)
(bad)
mov
jg
xlat
inc
jle
lods
stos
pop
push
and
movs
imul
test
(bad)
sub
pop
int3
pop
jmp
call
mov
cli
dec
push
cmp
fidiv
cmp
js
mov
dec
dec
cmp
fsub
mov
inc
(bad)
pop
and
sub
sbb
stc
jne
movs
pop
mov
mov
ja
cmc
(bad)
inc
adc
sbb
and
or
pop
xchg
mov
dec
ds
loop
(bad)
jmp
add
dec
or
pop
mov
and
xchg
lds
imul
dec
mov
(bad)
mov
cmp
retf
pusha
adc
xchg
xchg
xor
dec
je
sar
ret
cld
sub
inc
sub
scas
add
stc
rol
sbb
inc
add
(bad)
fst
push
dec
mov
outs
push
out
repnz
(bad)
dec
arpl
sahf
pop
xor
cmc
iret
js
es
inc
pop
xor
pop
pop
sbb
inc
jl
test
aam
les
ins
or
addr16
xchg
add
fistp
cli
cmp
addr16
sub
pusha
jecxz
(bad)
aad
call
mov
(bad)
(bad)
call
inc
adc
pop
pop
das
aad
and
pusha
mov
sar
cmp
xor
(bad)
(bad)
push
gs
repz
(bad)
cld
cs
ror
mov
out
fld
ins
nop
(bad)
(bad)
(bad)
(bad)
mov
scas
stos
data16
in
jbe
in
das
mov
mov
clc
sbb
(bad)
(bad)
(bad)
fadd
bound
js
into
lock
dec
and
fcomp
and
(bad)
dec
fidiv
int3
jns
mov
lea
jae
push
push
and
cli
call
cmc
xchg
inc
adc
daa
jmp
push
lds
push
(bad)
std
outs
sti
dec
sbb
sub
xor
sub
imul
arpl
pop
sub
idiv
jmp
mov
xchg
mov
mov
pusha
std
bt
das
call
cli
(bad)
(bad)
(bad)
call
mov
es
fld
pop
or
jmp
loop
push
or
mov
push
fstp
cs
mov
fimul
jb
lock
cmp
popa
jg
push
inc
add
fdivr
mov
pushf
or
cmp
into
jge
push
pop
inc
in
(bad)
(bad)
(bad)
push
pop
or
cmp
out
stos
and
ja
mov
mov
mov
or
(bad)
(bad)
jmp
(bad)
bound
mov
mov
fwait
mov
jecxz
xor
hlt
or
jb
mov
ss
(bad)
(bad)
push
jmp
sub
mov
or
pop
cmp
(bad)
(bad)
(bad)
cld
out
int
mov
and
stos
push
xlat
je
bound
sub
pop
mov
(bad)
(bad)
push
inc
bound
sbb
push
sti
mov
cmc
xchg
xchg
test
sti
xchg
iret
adc
hlt
and
(bad)
(bad)
(bad)
cmp
ja
cmps
leave
sbb
data16
inc
out
jbe
dec
push
jp
cmc
ss
ja
out
xchg
xchg
push
jmp
xlat
ss
(bad)
push
push
ja
jnp
push
inc
(bad)
(bad)
call
xchg
mov
mov
cwde
mov
xor
sbb
pop
push
lods
jmp
loope
(bad)
inc
into
jmp
pop
dec
or
sahf
mov
je
lds
cmp
sar
fistp
icebp
scas
mov
jmp
dec
or
jns
cmp
ret
stos
cmps
cmp
cld
dec
mov
int3
repz
stos
xor
mov
(bad)
(bad)
(bad)
jg
sub
adc
cmps
es
dec
adc
sbb
mov
push
pusha
sbb
jbe
sub
fadd
mov
iret
fisubr
in
shl
(bad)
(bad)
(bad)
dec
shl
mov
shl
jae
xchg
fs
fs
pop
fwait
or
(bad)
sub
(bad)
(bad)
inc
lock
xchg
leave
shl
stc
mov
pop
inc
mov
repnz
mov
mov
(bad)
call
sti
das
or
sbb
call
out
fcom
(bad)
(bad)
inc
pop
mov
xchg
in
mov
call
jns
xchg
push
hlt
(bad)
dec
and
sub
scas
dec
cmp
aad
(bad)
(bad)
call
sub
imul
gs
mov
jl
lock
sbb
mov
jl
jmp
call
out
jnp
xlat
pushw
push
jbe
and
(bad)
(bad)
(bad)
inc
dec
mov
mov
and
and
jne
cmps
and
mov
xchg
cmp
lock
xor
(bad)
(bad)
(bad)
jmp
lds
aas
push
pop
int
fcomip
cdq
dec
shl
inc
imul
stos
pop
xor
retf
mov
(bad)
(bad)
inc
mov
xor
cdq
or
dec
rcr
add
dec
and
(bad)
inc
(bad)
or
shl
fmul
and
(bad)
(bad)
sti
xchg
mov
adc
enter
arpl
xor
adc
(bad)
(bad)
(bad)
call
or
movs
fldenv
jnp
aad
adc
xor
jp
sbb
push
push
out
gs
(bad)
(bad)
call
into
(bad)
push
jl
test
mov
bound
jae
inc
mov
sar
mov
ret
lds
je
popa
jl
(bad)
(bad)
inc
mov
mov
xchg
arpl
test
add
cmp
sar
call
pop
xor
lock
xchg
adc
push
cmps
sbb
in
mov
cld
sahf
(bad)
(bad)
(bad)
push
xor
pop
or
daa
out
clc
mov
mov
pop
cld
xchg
jnp
sti
push
cmps
xchg
sar
mov
push
xchg
mov
and
clc
sub
inc
mov
fild
push
(bad)
(bad)
(bad)
jmp
mov
mov
movs
test
outs
ins
push
lock
lahf
jg
inc
shl
(bad)
jmp
fcomip
push
xor
enter
mov
and
adc
mov
daa
stos
js
(bad)
(bad)
call
adc
stc
or
test
jmp
data16
movs
jecxz
pop
jecxz
in
xor
fcmovb
das
clc
adc
push
xchg
fisub
test
(bad)
(bad)
mov
sbb
mov
sub
sbb
dec
sbb
xchg
(bad)
sbb
and
nop
retf
nop
jmp
mov
scas
add
sti
adc
outs
mov
xlat
mov
(bad)
push
mov
dec
out
jl
mov
les
outs
aas
push
xchg
dec
sub
stos
(bad)
(bad)
jmp
and
stos
loopne
(bad)
mov
test
or
call
loope
mov
mov
cs
pop
xor
repz
jmp
mov
jle
gs
pop
rol
mov
dec
js
(bad)
cld
(bad)
mov
(bad)
cmc
fisubr
jae
imul
rcl
cmc
cmps
(bad)
(bad)
push
es
or
mov
fsub
shl
jo
cmps
(bad)
(bad)
(bad)
dec
mov
repz
inc
iret
xchg
push
jne
dec
ins
retf
retf
es
popa
add
rcr
lock
and
or
dec
inc
cmp
pop
int
jbe
popf
(bad)
mov
(bad)
(bad)
(bad)
call
sbb
lds
mov
clc
or
fldz
push
retf
and
jge
(bad)
fcomip
jmp
int
sbb
lock
pop
jne
xchg
loope
sub
stos
popf
or
cmovo
dec
add
adc
jp
add
std
retf
xchg
lahf
sub
call
and
xor
push
pop
jne
mov
(bad)
(bad)
push
xchg
xchg
add
out
aad
(bad)
xor
xchg
sbb
popa
or
sub
mov
jmp
ret
shl
ins
add
pop
pop
sbb
cld
and
gs
push
(bad)
(bad)
(bad)
mov
and
dec
xchg
in
ja
or
pop
jg
popa
or
mov
ins
gs
(bad)
(bad)
(bad)
(bad)
mov
int
add
loope
or
int3
pop
mov
sub
iret
ret
push
mov
(bad)
(bad)
(bad)
jmp
cmp
and
jmp
jnp
icebp
stos
pop
pushf
inc
mov
mov
aaa
nop
sti
push
adc
call
xor
cdq
ss
lahf
shl
push
icebp
or
pop
sbb
out
shl
ds
mov
push
xchg
(bad)
(bad)
call
gs
je
inc
nop
mov
jns
mov
jmp
dec
add
push
pop
idiv
or
jg
(bad)
jmp
xor
(bad)
sub
and
mov
cmps
jl
jo
(bad)
(bad)
dec
push
(bad)
retf
mov
pop
add
gs
inc
je
add
push
add
sbb
push
xor
jmp
and
ja
cmp
mov
push
mov
ret
je
sub
lds
lea
xlat
shl
xor
(bad)
(bad)
jmp
iret
pop
xor
adc
leave
cmp
cmp
push
retf
aaa
shl
(bad)
(bad)
(bad)
call
mov
fadd
lock
xchg
add
mov
xchg
dec
dec
pop
not
loop
call
cmp
jge
(bad)
jmp
dec
xor
push
push
bound
mov
ins
call
adc
xor
(bad)
(bad)
(bad)
inc
add
mov
sti
or
fidivr
lea
arpl
lods
cmp
sbb
loop
cdq
jecxz
(bad)
(bad)
(bad)
push
fcmovne
test
and
sbb
aaa
es
je
inc
stos
jbe
nop
scas
push
xor
pop
mov
jo
inc
(bad)
call
ds
cmps
std
cli
pop
mov
sahf
jnp
(bad)
(bad)
(bad)
jmp
addr16
cmp
adc
push
mov
pop
push
scas
aaa
inc
fild
xor
call
fsubr
inc
xchg
add
jne
ja
adc
ds
mov
mov
jo
xchg
cmp
jno
scas
cmp
mov
into
sub
xchg
dec
imul
ins
cdq
adc
mov
dec
(bad)
call
ds
xchg
ja
cwde
test
mov
lock
lods
(bad)
(bad)
(bad)
jg
cmp
sub
repz
mov
and
mov
and
neg
cli
ja
cmp
(bad)
mov
sti
inc
jnp
mov
or
cld
jns
loop
(bad)
(bad)
push
fs
or
in
mov
xchg
xor
js
lock
sub
pop
mov
xchg
xchg
fsub
in
or
es
scas
cli
and
xchg
aad
test
push
enter
adc
(bad)
jecxz
addr16
jb
loopne
arpl
(bad)
(bad)
push
or
jge
arpl
mov
jmp
jle
lea
in
addr16
mov
je
(bad)
mov
and
xchg
xchg
imul
dec
(bad)
std
sbb
enter
add
aam
cmps
pop
jl
xchg
inc
mov
or
add
(bad)
(bad)
jmp
std
in
dec
pop
push
int
sbb
inc
pop
jp
xor
jno
lahf
data16
cld
jg
mov
xor
(bad)
jmp
adc
movs
push
pop
cmps
xor
div
jb
jg
and
mov
inc
add
dec
pop
mov
adc
jb
xchg
loope
imul
dec
gs
jge
cdq
dec
into
aad
adc
mov
pop
jmp
ret
(bad)
jmp
mov
dec
hlt
stos
inc
cwde
enter
call
mov
subps
(bad)
jg
fdiv
repnz
lods
inc
jge
inc
xchg
jg
adc
test
fcom
shl
jl
cmp
dec
nop
(bad)
(bad)
(bad)
(bad)
call
mov
mov
cmc
dec
jne
imul
push
sub
bnd
push
jb
leave
ret
daa
push
push
iret
(bad)
(bad)
(bad)
call
dec
xchg
imul
push
stos
inc
push
jae
cmp
retf
sub
sub
dec
fs
cmp
out
out
inc
mov
nop
add
mov
fisubr
ds
sub
es
rcr
pop
into
inc
into
jge
out
clc
dec
scas
pop
push
stos
out
popa
sar
add
push
mov
out
sub
jmp
and
out
call
dec
jne
out
push
sub
xor
jle
aad
aad
(bad)
call
adc
add
iret
scas
mov
stos
xor
loopne
enter
mov
mov
push
mov
gs
leave
inc
and
sbb
not
sub
xor
into
cmp
jnp
clc
movs
adc
dec
mov
(bad)
(bad)
call
and
nop
ja
sbb
and
inc
jae
pusha
xlat
or
and
pop
pop
(bad)
call
push
xchg
test
shl
es
or
(bad)
mov
inc
outs
call
cld
imul
push
test
or
pop
(bad)
rol
ins
std
cmps
jmp
mov
and
xchg
xlat
pop
jmp
aam
mov
vmwrite
mov
push
test
push
inc
cwde
and
push
add
cmp
mov
(bad)
call
loope
cld
cmp
jg
ret
lods
mov
mov
jp
cdq
add
push
(bad)
call
(bad)
sub
out
xlat
stos
fs
(bad)
(bad)
(bad)
jmp
call
lods
jno
cmps
nop
arpl
sbb
jge
sub
jmp
imul
mov
sbb
and
lahf
cmp
fbld
jecxz
inc
mov
test
(bad)
nop
icebp
push
inc
dec
add
add
fdiv
fnsave
leave
stc
fwait
mov
mov
mov
xchg
inc
pushf
vmread
popa
pop
add
jg
mov
and
mov
dec
sub
(bad)
(bad)
dec
test
arpl
sti
and
lahf
add
ds
fisttp
call
or
jecxz
call
jecxz
stos
adc
(bad)
jmp
pop
push
push
(bad)
pop
aam
imul
(bad)
fnstsw
fucomp
push
cmc
push
sub
mov
lock
data16
and
dec
(bad)
(bad)
(bad)
push
mov
jp
scas
inc
xchg
ss
dec
ins
cs
out
mov
sub
xor
jl
xor
jg
movs
jmp
jmp
das
cmp
(bad)
push
add
repnz
jmp
mov
loopne
cmp
leave
or
mov
mov
outs
(bad)
push
xchg
inc
add
shl
icebp
data16
rcr
xchg
sub
(bad)
(bad)
(bad)
call
ja
xchg
stc
xor
push
and
xchg
ret
jae
mov
into
retf
sahf
outs
dec
push
std
out
xor
ror
cmps
push
fwait
push
mov
int3
movs
mov
(bad)
inc
loop
iret
or
lds
ja
mov
pop
pop
(bad)
(bad)
mov
(bad)
(bad)
jmp
adc
in
pop
cli
push
push
stc
mov
dec
mov
and
retf
jns
pop
mov
xor
clc
fucomi
jb
pop
lods
dec
or
pop
push
arpl
(bad)
out
clc
jmp
div
add
and
test
cli
push
jbe
push
jne
sbb
gs
(bad)
(bad)
(bad)
(bad)
call
push
fiadd
(bad)
aad
arpl
dec
mov
mul
or
xor
(bad)
(bad)
push
inc
inc
dec
sub
(bad)
sub
jo
push
mov
push
ficom
leave
js
or
push
xchg
(bad)
retf
cdq
mov
adc
pop
lods
or
(bad)
(bad)
(bad)
(bad)
call
xor
stc
inc
cld
push
les
jno
scas
aad
out
test
add
mov
sub
pushw
call
outs
xchg
inc
jl
lods
mov
sub
leave
inc
sub
xor
or
xchg
popf
xor
es
in
jmp
push
cdq
std
mul
mov
dec
inc
mov
jmp
add
and
mov
jmp
mov
mov
add
das
ret
dec
xchg
(bad)
(bad)
(bad)
fcomp
or
fistp
out
shl
xor
daa
and
jns
mov
ficom
sar
inc
cdq
(bad)
(bad)
(bad)
inc
adc
lock
nop
mov
aad
xor
push
imul
jmp
sub
push
repz
aam
cli
jno
mov
mov
xchg
pop
push
(bad)
(bad)
(bad)
call
mov
adc
into
push
xor
xchg
xchg
add
push
mov
jno
mov
mov
(bad)
call
or
(bad)
frstor
push
cmp
stos
pop
mov
jecxz
pop
sub
pop
dec
sar
call
push
out
xchg
push
outs
fcomp
push
mov
pop
and
pop
add
xchg
push
sub
mov
call
sub
xor
mov
popf
int
adc
data16
hlt
mov
(bad)
push
(bad)
jg
inc
mov
clc
(bad)
mov
aad
dec
push
imul
pop
or
(bad)
(bad)
(bad)
(bad)
mov
pop
popf
outs
add
imul
ret
and
and
dec
aas
push
ds
sub
call
pop
test
add
ins
pop
scas
dec
mov
pop
inc
sub
shr
and
lds
ficom
add
push
pop
fst
cmp
arpl
jno
sbb
xor
mov
(bad)
(bad)
(bad)
(bad)
mov
aas
mov
call
adc
and
jo
(bad)
push
lea
ins
mov
ds
cmps
daa
in
cmc
test
and
mov
mov
js
push
addr16
not
fwait
(bad)
(bad)
mov
cmp
into
fldcw
enter
ss
xchg
mov
imul
nop
mov
std
pop
jl
adc
push
push
add
aas
cmps
int
xor
push
(bad)
(bad)
(bad)
(bad)
cld
xchg
add
push
aas
cmc
mov
in
test
(bad)
lahf
push
cmps
xlat
xor
xor
stc
in
jmp
in
mov
je
sbb
popf
mov
(bad)
jmp
add
retf
jge
sahf
push
in
xchg
mov
out
inc
out
sbb
(bad)
(bad)
inc
hlt
sbb
jns
inc
imul
inc
jge
pop
mov
outs
dec
les
hlt
adc
add
fsubr
shr
imul
stc
adc
jmp
inc
fisub
(bad)
(bad)
(bad)
jmp
xchg
mov
cwde
add
std
aam
jl
(bad)
or
loopne
inc
(bad)
fnstcw
es
cs
cmp
sub
jg
and
rcl
sar
dec
add
test
std
lock
(bad)
call
xchg
aad
lds
xor
mov
fiadd
out
pop
mov
jb
(bad)
(bad)
dec
enter
dec
inc
fisttp
rol
jns
clc
dec
bound
nop
mov
cmps
mov
jmp
dec
in
sbb
stc
retf
(bad)
dec
into
fisub
nop
aas
and
pop
cmc
scas
mov
arpl
dec
pop
cmp
adc
call
repnz
pop
mov
sbb
mov
call
fwait
dec
clc
pop
repz
xchg
or
repz
(bad)
(bad)
(bad)
push
pop
push
inc
iret
in
movs
neg
pop
lea
jmp
push
cli
fucom
inc
movq
and
jg
dec
sbb
nop
dec
dec
inc
int
push
retf
cmps
sbb
mov
push
push
sbb
pop
mov
cmp
pop
retf
fs
in
push
dec
pop
(bad)
(bad)
fist
loopne
sbb
xchg
ds
mov
and
inc
icebp
hlt
sub
(bad)
in
(bad)
call
lock
cld
cmp
push
jecxz
adc
xchg
inc
pop
mov
xchg
iret
mov
(bad)
(bad)
(bad)
fadd
shl
pop
or
pop
pop
shl
(bad)
div
sbb
inc
mov
icebp
dec
mov
mov
(bad)
(bad)
inc
ror
(bad)
test
pop
add
fs
rcl
ret
gs
test
ins
pop
aad
(bad)
jmp
or
dec
pop
mov
jecxz
ds
and
mov
(bad)
(bad)
(bad)
(bad)
jmp
dec
fbstp
adc
jnp
xor
sahf
xchg
mov
adc
std
mov
or
sbb
xchg
arpl
jno
sub
call
push
jle
(bad)
(bad)
call
push
fiadd
mov
in
movd
jne
stos
lods
sub
and
xchg
adc
mov
pop
test
es
mov
mov
add
jae
push
mov
int
dec
enter
inc
ds
repnz
(bad)
jmp
fldcw
adc
cmp
jmp
pop
clc
xor
inc
mov
(bad)
push
mov
iret
ja
push
inc
cmp
(bad)
(bad)
mov
or
sahf
test
loopne
imul
aam
mov
inc
jae
repz
xchg
push
daa
(bad)
dec
(bad)
jmp
cli
push
imul
pop
ja
test
dec
push
scas
cmp
div
stos
out
inc
sub
sbb
mov
hlt
adc
adc
(bad)
lods
fnstenv
(bad)
(bad)
push
rcpps
shl
in
je
nop
xor
add
test
push
mov
lock
(bad)
(bad)
push
sub
add
ds
adc
xchg
add
neg
daa
pop
arpl
add
(bad)
stos
(bad)
mov
cmp
sub
adc
or
stc
push
push
sbb
xchg
or
push
jl
xlat
mov
add
call
pop
cmp
or
movs
xor
(bad)
mov
not
inc
shl
push
cwde
sbb
jl
int3
adc
inc
sbb
xlat
mov
(bad)
(bad)
inc
jle
popf
sub
aas
test
mov
and
scas
sahf
and
lods
cld
sti
jo
(bad)
(bad)
(bad)
dec
js
and
push
mov
imul
lahf
inc
xor
(bad)
pop
and
mov
mov
(bad)
call
mov
push
repz
scas
idiv
sbb
jo
mov
or
inc
retf
mov
lock
jmp
adc
(bad)
fidiv
adc
(bad)
inc
sar
push
rep
sub
sub
push
cli
jns
lock
adc
(bad)
call
scas
cmp
jg
inc
push
xor
loope
xor
add
neg
pop
ds
(bad)
and
stos
(bad)
mov
(bad)
(bad)
(bad)
dec
cmps
out
addr16
(bad)
out
fcomp
mov
sbb
mov
mov
aas
mov
xchg
jmp
in
sub
adc
(bad)
fwait
sbb
xor
aaa
xchg
call
pop
cdq
(bad)
inc
mov
xchg
mov
loop
mov
lock
icebp
(bad)
(bad)
push
mov
dec
clc
jno
and
es
or
mov
in
push
call
dec
mov
mov
cmps
mov
xor
test
das
push
std
clc
fwait
adc
dec
xlat
(bad)
mov
(bad)
sub
fcomip
fwait
push
mov
jp
mov
inc
iret
inc
cmps
hlt
xchg
call
icebp
jae
cmps
mov
mov
out
cmp
int3
and
pusha
clc
into
push
test
mov
enter
sub
call
mov
retf
and
lea
es
addr16
push
je
mov
int
popa
xchg
jmp
test
pusha
leave
cmp
movs
jb
mov
pusha
sub
dec
stos
(bad)
jno
das
mov
mov
std
mov
pop
rol
adc
add
mov
clc
jl
(bad)
aam
out
enter
test
inc
(bad)
(bad)
(bad)
call
xchg
js
xchg
ja
fwait
or
pop
div
jmp
out
cmp
mov
(bad)
push
daa
or
int
add
jge
call
push
fwait
scas
and
in
(bad)
sbb
fcomp
or
adc
call
push
sbb
xor
pop
sbb
lods
std
xchg
nop
(bad)
jg
lea
jmp
push
mov
xchg
out
cwde
pop
xor
(bad)
(bad)
(bad)
call
sub
sub
xchg
or
sub
and
cmp
and
sbb
push
cld
cmc
jnp
mov
test
xchg
mov
js
mov
mov
sub
daa
sub
pusha
sbb
add
imul
(bad)
jg
jecxz
cmp
(bad)
jmp
aam
push
rcr
arpl
aam
push
push
das
cmp
and
jg
adc
push
sub
push
int
xchg
(bad)
mov
(bad)
stos
jb
loop
rol
push
in
enter
mov
adc
retf
(bad)
mov
add
or
jmp
or
adc
sti
pop
(bad)
cs
addr16
jg
mov
xchg
cwde
cmp
xchg
sqrtps
daa
cmp
add
inc
scas
jae
push
mov
xor
sar
inc
sbb
pop
mov
out
cwde
sub
ja
(bad)
(bad)
(bad)
mov
sub
or
sbb
pop
sub
pop
sub
pop
xor
jne
xor
lea
cwde
lahf
xor
sbb
mov
out
ror
scas
add
mov
cli
outs
mov
or
(bad)
xor
(bad)
mov
outs
sbb
push
ins
in
lods
mov
mov
das
xchg
sbb
call
pop
std
push
cmp
dec
lds
loope
daa
lock
cwde
or
(bad)
push
dec
cli
cmps
out
mov
mov
jmp
push
call
loopne
out
repz
jmp
jo
pop
icebp
(bad)
dec
xor
add
push
nop
cmps
or
iret
push
bound
mov
idiv
fild
add
jecxz
cmp
dec
push
call
xchg
(bad)
(bad)
(bad)
jmp
repz
cmps
enter
pop
cmp
xchg
test
or
or
or
(bad)
(bad)
(bad)
dec
repnz
in
jbe
fs
scas
jmp
fmul
mov
xchg
(bad)
jmp
mov
retf
outs
rcl
sub
dec
inc
xor
pop
cmps
jo
into
sar
inc
xchg
jecxz
push
scas
dec
call
jae
cmc
(bad)
mov
mov
xchg
sub
sbb
mov
in
jae
inc
es
sbb
cli
(bad)
(bad)
(bad)
inc
fdivr
sahf
mov
sbb
lahf
les
add
mov
ss
mov
push
call
nop
ret
outs
(bad)
jmp
xchg
xchg
mov
inc
ret
test
sbb
(bad)
(bad)
(bad)
mov
inc
lea
cmp
lahf
movs
(bad)
subps
sbb
jg
and
inc
sub
call
ja
jne
or
cld
add
int3
data16
jmp
and
add
(bad)
or
dec
jecxz
daa
jnp
loope
(bad)
fsubr
in
add
dec
add
fwait
int3
sar
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
pop
push
xor
dec
out
xchg
pop
jg
xchg
push
(bad)
(bad)
(bad)
call
dec
std
retf
iret
call
dec
fldz
xor
mov
stc
rcl
fwait
scas
movs
pop
int
(bad)
(bad)
(bad)
jmp
jp
xor
adc
pop
outs
ret
xchg
jnp
dec
jp
call
int3
bound
call
push
hlt
or
push
(bad)
and
and
(bad)
(bad)
(bad)
jmp
dec
sbb
mov
push
mov
in
call
cmp
loope
adc
pop
mov
cli
sbb
fst
xor
aaa
pop
(bad)
(bad)
(bad)
jmp
jmp
sub
stos
fadd
pop
xchg
xchg
dec
sbb
push
and
movs
xchg
repz
call
and
loope
pushf
dec
add
popf
jle
imul
mov
mov
loopne
inc
mov
dec
inc
or
movs
adc
not
in
inc
xchg
not
xchg
mov
or
jns
adc
out
(bad)
(bad)
fild
loopne
dec
mov
push
je
and
and
lahf
(bad)
adc
(bad)
sbb
(bad)
mov
xchg
cmp
mov
mov
stc
cmp
pusha
dec
cwde
cwde
sbb
jmp
(bad)
jmp
aaa
and
mov
popa
adc
inc
movs
popf
xchg
jecxz
or
push
jl
(bad)
(bad)
mov
fcomp
int
fdivr
sub
or
retf
push
movs
adc
pop
imul
cld
jmp
inc
retf
push
push
ja
cld
push
adc
cmp
(bad)
(bad)
(bad)
cld
test
lods
aad
add
xor
jb
sbb
scas
jns
int3
adc
jb
sar
data16
adc
cwde
(bad)
(bad)
(bad)
inc
jnp
jae
mov
dec
jge
hlt
mov
jp
(bad)
into
not
inc
cmp
sbb
and
ins
jno
add
mov
and
adc
(bad)
jmp
cmp
shl
add
cmc
mov
loope
sbb
jb
cmp
repz
icebp
(bad)
(bad)
jmp
inc
dec
jge
call
sub
mov
cmp
lds
ss
(bad)
call
pop
outs
fwait
mov
movs
mov
pop
std
jp
jne
push
shl
cmp
push
repz
jmp
or
inc
mov
lock
out
mov
inc
int3
inc
(bad)
(bad)
dec
jmp
push
ja
mov
add
or
dec
stos
and
ss
rcl
(bad)
(bad)
fld
sub
push
jl
adc
scas
jg
adc
bound
test
sbb
clc
(bad)
inc
popa
inc
and
ins
push
xchg
shl
ins
test
or
dec
lds
dec
mov
(bad)
(bad)
(bad)
push
inc
push
pusha
ret
mov
push
adc
repnz
inc
mov
ins
scas
(bad)
add
sbb
js
std
pusha
test
(bad)
(bad)
(bad)
inc
pop
jnp
test
cdq
loope
je
out
jbe
shl
lods
imul
(bad)
(bad)
(bad)
call
push
(bad)
outs
fs
pop
add
repz
sbb
scas
loop
inc
dec
sbb
cmps
sub
jg
push
jecxz
(bad)
mov
je
push
and
sti
(bad)
mov
or
clc
clc
jb
cs
mov
mov
call
cld
jmp
push
mov
inc
fist
xor
retf
lahf
stos
or
call
jnp
sbb
mov
push
xor
hlt
(bad)
inc
call
dec
loope
lods
push
ds
inc
cs
(bad)
jmp
dec
mov
xor
xchg
xchg
nop
mov
stc
xor
push
mov
popa
fld
fcomip
mov
sub
or
push
ud0
(bad)
(bad)
aas
mov
das
lea
repnz
sub
shl
cmp
push
add
(bad)
call
mov
hlt
cdq
in
inc
leave
sub
xor
popf
push
and
ret
sub
dec
sar
sub
inc
fldenv
mov
pop
js
or
mov
jle
sar
inc
shl
sub
pop
mov
mov
or
or
sbb
ins
and
and
lods
(bad)
(bad)
(bad)
call
dec
mov
stos
push
or
std
(bad)
(bad)
mov
mov
(bad)
(bad)
dec
adc
dec
mov
movs
cmps
aad
retf
stos
mov
adc
cmc
dec
mov
(bad)
jg
dec
ins
xchg
mov
push
sub
and
adc
ins
out
cld
es
es
stc
mov
mov
loopne
jo
sbb
aas
(bad)
dec
add
sar
das
addr16
fwait
cmp
shl
leave
sar
pusha
or
xchg
call
pop
outs
jbe
aaa
cmp
push
test
cmp
xchg
inc
dec
dec
adc
pop
jo
(bad)
inc
popa
stos
mov
or
jnp
mul
mov
retf
(bad)
inc
cmps
idiv
push
mov
outs
pop
clc
push
mul
xchg
(bad)
(bad)
(bad)
jmp
adc
sub
ins
hlt
jns
test
popa
cmp
mov
(bad)
call
je
mov
pop
dec
or
push
imul
hlt
test
into
iret
call
mov
sbb
stc
sub
cwde
scas
leave
(bad)
lock
(bad)
jg
mov
push
out
dec
test
mov
xor
xchg
jmp
jle
(bad)
(bad)
jmp
(bad)
(bad)
fist
lahf
cmps
ss
fwait
mov
fldcw
dec
imul
sub
(bad)
(bad)
(bad)
ss
pop
int
xchg
aas
mov
push
fild
nop
(bad)
jp
push
in
sub
jae
pusha
inc
cmc
outs
(bad)
dec
push
xlat
dec
adc
fwait
sti
pop
mov
dec
shl
not
pop
jo
and
daa
movs
in
push
push
mov
call
sub
mov
(bad)
(bad)
jge
mov
sub
mov
or
sub
cmp
je
xchg
xchg
(bad)
(bad)
(bad)
(bad)
push
dec
jns
fbstp
xchg
bound
aas
and
push
mov
add
out
mov
out
(bad)
(bad)
jmp
mov
adc
push
jns
xchg
fsubr
fld
in
test
(bad)
(bad)
(bad)
inc
loopne
add
cmps
push
xor
sahf
(bad)
lock
push
loope
xor
mov
cwde
jns
cmp
(bad)
(bad)
inc
or
retf
sub
imul
push
mov
not
lds
(bad)
(bad)
jmp
rcr
push
ss
fidiv
imul
xchg
sbb
call
rcr
aad
mov
mov
cmp
or
popf
(bad)
(bad)
mov
dec
pop
movs
int3
stos
or
mov
rol
cdq
xor
add
mov
(bad)
push
scas
(bad)
or
leave
cmp
sbb
pop
xchg
or
imul
pop
cmp
(bad)
(bad)
call
xor
xor
and
fldenv
ss
cmc
cmp
arpl
xchg
jl
(bad)
(bad)
dec
add
inc
pop
stc
add
pop
push
mov
mov
cmc
adc
inc
ds
(bad)
dec
frstor
les
jb
addr16
pop
fiadd
mov
dec
(bad)
jmp
lods
push
mov
jge
mov
in
pushf
push
out
aaa
call
inc
pusha
and
xchg
loop
dec
sub
call
dec
mov
cld
mov
jmp
xor
cmp
mov
rcr
popa
es
pop
inc
and
dec
out
ror
inc
jecxz
(bad)
fild
aaa
push
xchg
mov
pop
and
(bad)
cli
inc
sti
cmp
push
hlt
fstp
(bad)
daa
push
xor
adc
ds
jge
jns
(bad)
in
scas
adc
sti
dec
lock
xor
push
movs
hlt
mov
loope
(bad)
(bad)
(bad)
(bad)
push
jns
imul
dec
fst
lea
jge
lods
mul
xor
push
ret
dec
or
fistp
lahf
sbb
add
(bad)
sbb
cdq
adc
jmp
sbb
adc
(bad)
cmp
dec
ror
dec
inc
and
push
xlat
mov
(bad)
(bad)
(bad)
call
and
outs
aad
daa
adc
cdq
mov
inc
xor
dec
int3
lods
sbb
ret
jne
hlt
(bad)
(bad)
call
pop
xor
dec
imul
in
aas
and
xor
es
(bad)
(bad)
call
jae
dec
sbb
test
jg
xor
pop
jo
lds
loope
cmps
mov
inc
arpl
lock
cmp
xor
push
repz
sti
mov
call
dec
push
mov
movs
es
push
pop
stos
pop
and
dec
lock
xor
jecxz
xchg
adc
retf
fisubr
rol
fsub
sub
add
pushf
pop
(bad)
(bad)
mov
scas
imul
inc
stos
rol
cld
out
sub
or
loope
(bad)
gs
in
push
mov
(bad)
(bad)
(bad)
fild
daa
test
daa
cmp
pop
xchg
jbe
stos
mov
and
loope
(bad)
int3
iret
jmp
push
call
loop
or
pushf
ds
adc
fistp
out
fnsave
(bad)
cmp
xchg
jmp
mov
xor
push
rcr
pushf
loopne
push
cwde
adc
pop
ins
mov
pop
test
xor
ds
adc
push
jb
add
mov
icebp
into
outs
push
hlt
jp
mov
cs
xor
and
icebp
daa
add
mov
fiadd
add
dec
and
rcl
in
(bad)
and
dec
add
push
int3
out
fst
mov
aaa
(bad)
(bad)
mov
mov
jnp
inc
ret
xchg
push
mov
(bad)
(bad)
push
pop
icebp
iret
popa
sub
(bad)
movs
xchg
mov
fld
jns
out
addr16
and
stos
(bad)
jp
ins
cmps
cmp
add
gs
or
push
scas
cmc
mov
mov
mov
add
and
js
(bad)
(bad)
jg
jmp
jg
fimul
das
mov
dec
(bad)
cmc
aaa
or
rcr
scas
dec
(bad)
mov
jmp
mov
cdq
popa
and
push
mov
dec
push
ss
movs
jae
xchg
jp
xor
pop
mov
add
mov
sub
idiv
mov
xchg
(bad)
(bad)
(bad)
call
ret
mov
scas
pop
mov
idiv
addr16
dec
mov
ret
xchg
popf
pop
and
pop
push
dec
not
sbb
call
std
loopne
mov
fld
mov
ins
lock
mov
aaa
out
mov
lds
dec
jnp
mov
rol
dec
daa
(bad)
(bad)
(bad)
jmp
sub
xor
xchg
add
dec
ret
mov
hlt
stos
sub
cdq
into
add
mov
repnz
push
add
and
es
cmp
(bad)
(bad)
jmp
out
push
and
daa
sbb
jo
into
sar
pavgb
xor
push
dec
xchg
mov
(bad)
(bad)
dec
sub
sub
cmp
sub
mov
jmp
cmps
mov
call
and
cmps
lds
icebp
hlt
jmp
push
add
push
(bad)
(bad)
(bad)
inc
enter
inc
cmp
iret
inc
cdq
push
aas
pop
dec
add
lods
outs
inc
pusha
pop
(bad)
(bad)
jmp
sbb
add
loopne
pop
inc
(bad)
enter
test
push
jge
(bad)
(bad)
(bad)
inc
test
or
int
and
pop
mov
dec
sbb
jno
add
push
cdq
mov
in
lock
(bad)
(bad)
aas
lds
add
arpl
cmp
mov
xchg
jge
pop
inc
sub
jno
dec
xchg
scas
dec
retf
(bad)
pop
movs
(bad)
mov
ficom
das
iret
mov
inc
ds
gs
pop
ja
repz
pop
mov
cmp
pop
ret
gs
push
rcr
xor
scas
pop
aam
inc
cmp
mov
xchg
add
test
outs
jl
(bad)
aaa
(bad)
call
inc
jecxz
push
out
add
cmp
and
call
retf
mov
gs
icebp
nop
dec
jg
mov
in
loopne
pop
pop
iret
push
jbe
(bad)
(bad)
(bad)
jmp
nop
xor
xor
mov
popa
pop
iret
sbb
mov
outs
cli
(bad)
(bad)
in
test
dec
mov
inc
fld
test
xchg
push
faddp
pop
popf
mov
test
(bad)
(bad)
(bad)
(bad)
js
lock
repz
aad
push
xlat
push
mov
ins
outs
jnp
repz
outs
cli
jmp
lahf
adc
mov
sub
out
scas
sar
(bad)
fcomip
(bad)
jns
ficom
addr16
adc
or
ss
inc
nop
jg
(bad)
push
pop
pop
mov
into
push
xchg
jle
sbb
jns
shl
movs
xchg
movs
jmp
icebp
xchg
loope
aaa
mov
retf
jb
ret
xchg
inc
lods
xchg
lock
test
sbb
add
pop
dec
hlt
es
ss
dec
add
data16
fwait
imul
movs
(bad)
(bad)
call
lock
dec
popf
sub
mov
inc
arpl
or
ret
mov
icebp
push
mov
mov
xor
xlat
dec
pop
sub
mov
icebp
fucomi
cmps
mov
test
and
cli
dec
lock
ficomp
add
jmp
lahf
nop
or
clc
ss
(bad)
(bad)
(bad)
call
push
mov
loope
sub
dec
repz
xor
or
jno
ret
(bad)
(bad)
(bad)
push
ret
out
mov
adc
adc
retf
scas
add
sub
shr
arpl
je
enter
pop
xor
out
cmp
inc
mov
jb
xor
dec
adc
(bad)
push
add
sahf
add
cmps
outs
sbb
nop
popf
push
mov
popa
(bad)
pop
lock
je
push
or
imul
dec
add
mov
scas
(bad)
inc
test
and
adc
sbb
imul
loop
adc
cwde
xchg
mov
cli
inc
into
jae
sahf
adc
adc
or
cmps
xchg
das
pop
and
(bad)
jmp
jne
or
jmp
mov
jg
repz
or
mov
ud0
(bad)
call
mov
call
dec
into
(bad)
adc
test
cmp
call
(bad)
(bad)
(bad)
jmp
int3
or
xchg
mov
mov
out
loop
lock
mov
arpl
(bad)
(bad)
push
or
dec
sub
xchg
dec
daa
xor
dec
lock
repz
xor
push
std
inc
in
inc
in
inc
inc
in
push
idiv
jno
pop
inc
mov
sar
in
out
and
push
lods
adc
inc
pop
lods
repz
sub
mov
push
ja
aas
out
movs
mov
add
mov
add
inc
mov
jae
or
push
repnz
jo
mov
jg
add
sbb
jg
ss
push
enter
add
dec
or
test
pop
mov
mov
sahf
dec
sub
and
or
dec
jno
jg
add
nop
test
dec
scas
dec
(bad)
fsub
test
jno
outs
mov
stc
mov
jnp
xchg
movs
push
daa
add
xchg
dec
and
mov
push
and
cs
push
movs
push
movs
cli
popf
xor
inc
scas
push
stos
push
and
outs
out
push
push
test
and
imul
push
repz
pop
add
mov
pop
sbb
add
mov
pusha
sbb
mov
fimul
les
push
adc
fs
mov
ins
or
int
inc
retf
imul
imul
imul
into
mov
jbe
fxch
pop
inc
jmp
pop
stos
jbe
and
nop
(bad)
jb
ss
clc
ins
sti
jbe
add
jo
mov
push
shl
add
outs
push
shl
lods
loopne
push
fidivr
iret
outs
or
push
ret
jbe
(bad)
je
fidivr
out
jge
fisttp
test
jmp
movs
push
add
mov
sbb
jae
shl
mov
push
sti
call
jne
push
aam
push
lock
retw
add
mov
adc
outs
ss
pop
dec
add
cmp
data16
inc
xchg
ds
scas
add
push
push
(bad)
shl
retf
fnstcw
add
ja
push
rcr
not
xlat
jne
add
ja
push
(bad)
ds
ins
aad
push
xlat
ja
js
push
(bad)
jns
push
jl
rol
jp
jp
inc
push
fidivr
sar
sub
int3
ja
fld
ret
ror
jmp
xchg
fiadd
sub
xchg
xor
xchg
ins
push
xchg
pop
xor
imul
(bad)
ds
aaa
push
call
push
cmp
jl
ins
push
pushf
cmp
popf
xchg
popf
aas
in
xchg
push
sahf
inc
push
lahf
inc
lahf
mov
mov
push
push
jecxz
push
imul
(bad)
jns
mov
(bad)
out
out
push
hlt
out
sahf
out
stc
cli
sti
cld
sbb
jg
std
inc
jecxz
arpl
inc
jae
data16
add
jo
imul
mov
add
pop
add
pop
add
add
cs
pop
xchg
add
mov
out
out
pop
push
add
or
add
add
mov
push
or
or
test
test
and
or
or
pop
cmp
pop
pop
adc
int
cmps
pop
adc
lods
add
pop
and
femms
lods
lods
pop
push
fcmovne
(bad)
mov
add
scas
ins
add
ins
in
lods
pop
pop
adc
and
pop
cmp
pop
scas
sbb
inc
and
scas
scas
scas
scas
sbb
mov
int
enter
and
adc
adc
and
sbb
lock
adc
mov
mov
and
and
mov
and
and
sub
pop
sub
mov
retf
mov
(bad)
pop
sub
adc
mov
outs
add
sbb
mov
xor
xor
jbe
fstp
mov
cmp
cmps
add
mov
xor
xor
pop
or
div
mov
or
add
pop
pop
(bad)
(bad)
jg
gs
pop
pop
das
push
cs
xor
add
xor
das
pop
push
push
xor
call
pop
push
cs
dec
inc
das
inc
inc
xor
adc
mov
jmp
xor
push
push
popa
jbe
cmp
jl
jge
jno
(bad)
jg
jo
xor
pushw
dec
dec
cmp
jo
mov
inc
xor
movs
mov
cwde
sahf
mov
pushf
fwait
call
mov
outs
(bad)
dec
mov
inc
xchg
push
dec
ja
jns
dec
jnp
movs
repnz
bound
js
imul
clc
jne
je
or
add
fstp
jo
pusha
lsl
xor
scas
aas
adc
or
out
jg
jle
xchg
pop
push
dec
add
push
mov
movs
dec
and
fimul
push
sub
js
xor
sbb
div
add
push
ja
jb
add
add
sahf
pop
mov
mov
fstp
jle
and
push
mov
xchg
(bad)
in
rcr
pop
push
inc
mov
cmp
mov
inc
add
sar
enter
(bad)
xchg
jp
inc
push
popf
inc
mov
aaa
add
xchg
mov
lahf
stc
jno
retf
push
bound
mov
mov
cmp
lahf
inc
inc
push
sahf
mov
ins
add
ds
xchg
outs
add
xchg
xchg
pop
push
test
cmps
dec
push
dec
and
movs
(bad)
jae
add
jb
shl
pop
push
pop
outs
pop
xlat
pushf
push
out
adc
jg
add
fwait
imul
call
outs
mov
scas
div
mov
add
ja
sahf
jbe
fistp
imul
iret
add
ds
push
add
and
es
pop
jmp
mov
data16
shr
out
out
ins
pop
outs
push
outs
ror
push
adc
ja
ds
mov
sub
push
jg
fiadd
call
or
lock
cmp
add
mul
mov
out
arpl
jmp
mov
jb
push
jne
cmp
xchg
in
push
jle
or
mov
fiadd
fnstcw
aad
push
movs
jns
imul
push
fild
adc
push
sbb
add
sbb
test
adc
fadd
in
mov
push
xchg
nop
and
out
xchg
(bad)
in
xchg
rol
lock
sub
sub
imul
outs
out
xchg
das
push
xchg
repnz
xor
cwde
push
cmc
sahf
xor
push
call
cmps
pop
cmp
mov
aam
or
das
pop
jle
push
cmps
scas
jo
test
sahf
fcomp
push
adc
pop
jbe
stos
into
shl
mov
lgs
(bad)
int
mov
mov
fnstenv
rcr
rcl
mov
push
aad
jle
data16
add
adc
inc
addr16
dec
xchg
inc
mov
out
je
dec
daa
or
add
add
mov
in
mov
or
or
or
es
pop
in
pop
push
adc
push
add
add
ds
pop
repnz
sbb
add
mov
adc
sbb
xchg
push
mov
and
sbb
add
mov
and
mov
and
cs
mov
aas
and
sub
xor
pop
dec
lock
aas
aas
test
enter
pop
add
jae
aaa
add
cmp
ds
jbe
and
inc
jle
cmp
xlat
xor
dec
mov
addr16
dec
aas
adc
ds
xor
mov
imul
inc
scas
in
sbb
pop
add
mov
pop
mov
ds
lods
stos
test
cmps
cmps
cmps
cmps
sti
jg
jle
test
test
test
mov
mov
or
daa
sub
sub
sub
sub
(bad)
outs
and
xor
inc
mov
push
push
call
imul
push
pop
push
push
push
imul
fs
das
pop
imul
nop
cdq
mov
xchg
xchg
xchg
xchg
mov
nop
test
ins
popf
mov
jge
dec
(bad)
(bad)
jns
jns
jle
add
jo
outs
pushf
sti
add
ins
push
lds
push
rol
add
add
add
or
out
or
push
std
mov
cli
cmc
repz
dec
xor
aas
add
(bad)
(bad)
inc
xchg
pop
cmp
test
add
mov
add
mov
push
mov
adc
mov
add
cmc
repnz
mov
xchg
addr16
add
pushf
add
mov
push
in
call
mov
push
arpl
mov
push
push
inc
jae
js
into
xchg
add
hlt
(bad)
fcomi
mov
mov
test
scas
xchg
js
in
and
out
xlat
mov
add
nop
sub
(bad)
sub
xchg
push
(bad)
push
nop
sub
xchg
xor
xchg
xor
(bad)
outs
call
leave
jbe
(bad)
ins
mov
mov
shl
iret
push
retf
sub
iret
ins
loopne
push
(bad)
(bad)
std
into
dec
stos
or
(bad)
div
fwait
int
out
xchg
add
test
jg
jle
jge
or
or
jg
call
add
pop
add
push
dec
or
mov
cmp
adc
dec
or
add
fcomp
mov
add
or
pop
pop
cmovg
aas
(bad)
jl
inc
push
dec
sbb
inc
adc
jmp
inc
inc
inc
adc
sbb
dec
add
dec
(bad)
fld
test
inc
ds
cmp
cmp
cmp
daa
and
mov
(bad)
call
sbb
and
add
dec
ss
xor
sub
sub
add
push
add
mov
add
add
sub
mov
push
add
and
sbb
pop
inc
into
inc
adc
enter
add
push
cmps
adc
inc
(bad)
jbe
mov
pop
sbb
test
jmp
scas
push
clc
sbb
inc
inc
mov
xor
pop
mov
es
cdq
test
popa
ds
test
lock
mov
or
push
push
jg
sub
or
ja
mov
adc
outs
add
and
sahf
jg
or
mov
test
xchg
pusha
mov
add
(bad)
cli
add
xchg
or
push
or
cli
inc
lds
pusha
and
ins
mov
das
sti
cmp
jle
mov
inc
sub
dec
sti
add
or
xchg
adc
stos
jg
and
adc
jg
pop
sbb
(bad)
mov
pusha
and
jg
and
lods
push
(bad)
cld
jg
jo
add
jbe
and
(bad)
std
ja
sub
cmp
inc
dec
mov
jg
or
adc
jg
dec
and
mov
fs
pusha
mov
and
leave
mov
dec
or
(bad)
call
(bad)
addr16
or
cwde
sub
(bad)
inc
sbb
sbb
ficomp
jg
mov
mov
add
add
ds
jo
lea
push
jbe
les
fld
pop
add
adc
lea
and
adc
fld
add
sbb
lods
jle
retf
les
mov
addr16
add
jle
mov
mov
xor
add
inc
xor
or
data16
inc
loopne
push
jg
adc
add
inc
inc
pusha
add
and
inc
ss
pop
xchg
or
inc
dec
jg
or
mov
mov
mov
jmp
fisubr
imul
(bad)
daa
aas
aaa
pop
pop
outs
mov
add
pop
jle
js
shl
add
or
(bad)
(bad)
mov
jle
sbb
add
test
jle
push
dec
xchg
popf
xlat
dec
test
mov
(bad)
push
comiss
daa
push
arpl
inc
ins
(bad)
pop
push
mov
arpl
out
dec
xor
dec
inc
iret
xor
(bad)
call
push
or
(bad)
(bad)
jmp
dec
xchg
rcl
inc
push
ds
jle
xor
push
(bad)
fnsave
aam
push
(bad)
fnstenv
add
enter
push
jne
pop
push
jbe
push
movs
ins
inc
out
push
jnp
push
jp
fild
js
dec
jbe
pop
pop
xlat
(bad)
fadd
pop
mov
mov
test
es
(bad)
push
outs
inc
popf
push
daa
jmp
inc
shl
jle
dec
jmp
outs
ss
(bad)
out
test
xchg
dec
ja
inc
cmps
xchg
call
test
jns
fiadd
inc
(bad)
outs
lahf
mov
push
mov
fisub
sahf
inc
(bad)
out
or
sbb
ins
fwait
int
cs
aas
popf
inc
push
pushf
cmp
mov
jb
cwd
mov
push
xchg
xor
xchg
xor
sub
fidiv
nop
daa
ss
cs
in
ss
or
(bad)
outs
test
push
(bad)
call
call
mov
jg
test
ja
xor
call
sahf
(bad)
pusha
enterw
es
or
ins
xchg
cs
add
pop
ja
dec
push
int3
rcl
xchg
mov
movs
call
imul
mov
add
add
les
mov
test
sbb
sub
add
mov
outs
pop
add
xchg
mov
adc
adc
aas
push
adc
iret
repz
mov
lea
(bad)
(bad)
jg
push
popf
push
imul
mov
sbb
test
push
mov
dec
repz
cmp
cmp
jmp
in
icebp
imul
add
(bad)
sub
jmp
mov
dec
(bad)
out
imul
mov
pop
mov
mov
fisttp
sbb
xor
dec
cli
or
sti
xchg
fidiv
xchg
std
into
jmp
syscall
mov
sub
xchg
fcmovb
add
pop
xchg
sbb
inc
pop
call
or
mov
sub
or
addr16
daa
cld
pop
das
or
mov
cld
(bad)
call
call
xchg
std
out
mov
pop
call
or
mov
mov
push
fdivr
ds
lods
xor
xchg
inc
(bad)
fadd
inc
fmul
out
jmp
sub
dec
push
xor
adc
inc
sbb
sub
xor
cmps
scas
jmp
xchg
cmp
dec
mov
jno
add
(bad)
fmul
xor
inc
mov
punpckhwd
pop
call
inc
mov
xor
add
sysret
out
push
add
jmp
sub
xor
inc
xor
push
sub
pop
shl
outs
sti
push
std
(bad)
jmp
mov
out
adc
push
ror
inc
call
cmps
bound
add
pop
stc
(bad)
xchg
fadd
push
call
jg
inc
inc
cwde
out
cli
mov
fwait
test
jmp
sub
add
sbb
inc
test
push
jmp
ss
sbb
pop
in
ins
fnstenv
pop
movs
or
ins
aaa
mov
fidiv
mov
push
mov
shl
or
push
dec
sahf
ret
dec
scas
nop
xchg
push
adc
(bad)
jns
mov
test
lahf
inc
inc
push
inc
fidiv
pop
cmp
es
mov
fcom
sahf
movs
dec
push
stos
push
leave
mov
cmps
dec
dec
inc
scas
imul
out
add
cmps
add
push
and
out
push
sbb
jl
shr
rcl
outs
shr
shl
jb
push
in
dec
imul
push
iret
ins
cdq
out
int3
push
pop
daa
outs
pop
imul
not
push
movs
sub
push
jmp
jmp
call
inc
dec
dec
pop
add
repnz
aam
push
jmp
and
fild
pushf
cmp
aas
(bad)
dec
cwde
xor
(bad)
lahf
push
inc
push
xchg
ins
mov
xchg
push
push
aaa
push
call
jmp
es
xchg
xchg
xchg
not
sub
xchg
aam
(bad)
push
dec
scas
inc
shr
data16
fisub
pusha
mov
push
push
dec
call
js
std
fadd
jge
push
jnp
xor
imul
or
jl
or
dec
movs
fstp
jl
push
jge
jg
es
fwait
cdq
std
add
adc
fidivr
push
dec
push
dec
repnz
std
jns
repnz
jae
pop
fidivr
push
mov
jnp
xlat
lock
jge
hlt
in
add
int3
outs
nop
mul
add
mov
stc
sbb
or
pop
jne
lahf
push
adc
adc
push
and
int
push
jns
inc
sahf
add
dec
dec
es
add
or
outs
call
and
xchg
out
push
sub
iret
out
outs
test
jo
mov
cli
push
clc
push
idiv
or
push
jb
sub
xchg
outs
sbb
fnstenv
cld
mov
jno
sub
jg
mov
lods
and
cdq
icebp
(bad)
jg
and
mov
je
daa
jg
mov
ja
sub
xchg
dec
loope
xchg
cld
jo
repnz
dec
es
xchg
aaa
enter
inc
out
xchg
mov
mov
dec
lods
sub
pop
sahf
loope
sub
dec
and
jge
test
dec
inc
sbb
push
push
fsub
pop
and
jmp
(bad)
fidivr
push
mov
jle
mov
fidivr
arpl
clc
lods
inc
jmp
popf
inc
jp
pop
push
pop
(bad)
push
push
test
jmp
mov
call
int
push
(bad)
jns
mov
data16
das
push
mov
jmp
xchg
jmp
mov
push
xchg
mov
pop
test
loop
adc
xchg
out
sbb
loope
and
retf
jg
out
mov
ins
or
or
add
cmp
outs
add
ja
inc
or
push
xlat
push
cmovno
dec
push
pop
out
push
es
adc
fld
jnp
push
les
or
add
or
add
mov
mov
jl
movs
push
retf
adc
adc
cmp
sbb
xchg
push
jmp
jae
pop
inc
test
pop
push
(bad)
into
mov
add
push
sbb
push
or
movs
imul
or
sbb
outs
or
push
sbb
inc
add
or
nop
push
add
and
pop
add
xchg
movs
test
mov
mov
add
add
push
sub
icebp
inc
push
gs
jo
das
push
mov
xchg
cdq
mov
push
ret
dec
sbb
stos
and
gs
adc
adc
jae
or
arpl
adc
xchg
scas
add
mov
test
xchg
sbb
jmp
lahf
jo
das
jecxz
sub
sbb
test
ret
add
imul
(bad)
pop
std
pusha
ins
loop
nop
mov
add
push
test
scas
add
lods
inc
inc
jno
mov
xor
inc
mov
cmp
scas
add
gs
push
sbb
cs
and
mov
ins
push
mov
mov
lods
pop
popf
in
fld
jne
popa
shl
xor
adc
(bad)
(bad)
jb
fstp
addr16
xor
add
(bad)
lds
inc
push
add
mov
and
xor
dec
and
push
pop
add
ins
sub
add
adc
test
xor
dec
les
test
sbb
outs
imul
jo
xor
dec
push
outs
loop
ins
fadd
(bad)
ficom
sub
xchg
fstp
jmp
mov
dec
ins
out
inc
imul
sub
out
dec
inc
mov
in
ins
jne
sbb
inc
sub
test
fwait
add
and
or
inc
pop
mov
or
ins
cmp
inc
arpl
jmp
mov
arpl
mov
mov
or
push
in
add
fiadd
ins
mov
pop
push
jecxz
xchg
push
popa
xchg
cmp
adc
cs
(bad)
mov
pop
and
mov
mov
pop
sub
xor
(bad)
cmp
dec
in
adc
jmp
lahf
cs
aad
pusha
mov
mov
cmp
sub
mov
jbe
dec
outs
push
add
add
adc
pop
add
push
xor
dec
add
jmp
sub
dec
push
xchg
add
cwde
(bad)
jmp
or
aas
fsub
jo
shl
inc
je
jmp
mov
iret
adc
mov
cmp
cdq
lea
mov
icebp
popa
and
pop
test
jbe
lds
pop
push
loopne
icebp
and
xor
sbb
movs
lea
xchg
add
sub
ss
sub
ret
pop
push
dec
(bad)
add
mov
xor
add
fld
sub
pop
add
das
arpl
in
xchg
inc
imul
ins
ja
sbb
(bad)
push
mov
test
mov
inc
jg
inc
adc
icebp
test
arpl
push
ja
push
jne
inc
cli
pop
sbb
mov
outs
jae
nop
pop
lock
loop
outs
xor
mov
mov
push
mov
mov
push
add
adc
xor
pop
fisub
pushf
push
lahf
sub
jno
mov
and
fadd
das
sub
aas
sub
xchg
pop
movs
lods
add
sub
mov
cmp
retf
sbb
sti
inc
movs
ins
ins
cmp
dec
std
and
aaa
push
pop
xchg
mov
fldcw
xchg
mov
into
arpl
fcmovnu
jo
jae
movs
mov
test
shl
in
add
or
cmp
fdiv
xlat
and
inc
jbe
imul
mov
fstp
mov
xchg
sbb
or
fs
or
mov
popa
rcpps
js
mov
push
jb
inc
inc
xchg
jmp
sub
jmp
imul
lds
ins
push
sbb
movs
jbe
jae
sahf
daa
push
push
jo
push
cld
sub
outs
pop
sub
fwait
push
ret
fidiv
out
loopne
stos
dec
inc
add
xchg
add
outs
jne
sub
jg
add
sbb
and
cmp
and
push
les
xor
dec
std
addr16
and
jb
xor
inc
inc
push
xor
cmp
lods
and
fs
inc
sbb
ins
mov
or
fisub
pop
inc
je
out
adc
ins
dec
outs
dec
std
lea
cli
mov
pop
adc
das
(bad)
xor
sub
push
push
js
add
mov
dec
add
sbb
mov
dec
rcr
add
or
xor
shl
movhps
mov
or
mov
dec
pop
add
es
pop
add
inc
add
push
inc
outs
or
add
sbb
and
add
rcr
imul
and
shl
ret
pop
out
test
pop
or
xor
sbb
ins
sub
je
adc
inc
loopne
scas
mov
sub
pop
add
scas
dec
xchg
sbb
cli
test
xor
mov
xor
jno
sbb
js
add
adc
xchg
and
sbb
jo
inc
(bad)
sbb
scas
call
or
mov
or
fdivr
adc
mov
mov
inc
cmp
xchg
lods
dec
mov
arpl
cmp
neg
fs
push
jge
cmp
pusha
inc
out
pushf
xor
dec
js
push
xor
and
aad
call
aad
pop
imul
push
jo
popa
cmp
mov
lock
fsubr
sub
hlt
mov
nop
inc
gs
lea
xlat
adc
push
movs
xor
mov
adc
inc
mov
jg
nop
pusha
ins
inc
inc
xor
dec
xchg
sbb
out
arpl
outs
bound
inc
(bad)
and
mov
mov
inc
ret
lods
outs
jbe
pusha
lds
test
sbb
adc
es
add
mov
cs
dec
ins
jmp
inc
push
xchg
mov
sub
or
rcr
daa
dec
cld
addr16
adc
arpl
xchg
pop
imul
jne
pop
xor
es
mov
jmp
and
data16
rol
sbb
in
push
mov
mov
mov
fdivr
push
arpl
sbb
pusha
in
inc
cmp
js
push
jg
out
jp
test
xchg
cmp
inc
jmp
sbb
adc
fild
jne
or
pop
mov
pop
lods
mov
lods
jbe
enter
dec
adc
aad
push
mov
(bad)
inc
push
inc
inc
sub
fidivr
inc
sub
lods
xchg
pop
addr16
dec
pop
or
arpl
jo
in
lock
call
gs
out
inc
test
cmc
rcl
xchg
jae
xor
dec
mov
aaa
sub
add
adc
rol
mov
ss
push
cmp
and
sbb
sub
jl
and
add
cli
add
sbb
daa
or
(bad)
cld
inc
sbb
add
jo
push
ins
jmp
mov
scas
popf
or
pop
add
popf
(bad)
lock
dec
and
add
inc
dec
dec
mov
addr16
add
rcr
sub
fcomp
adc
push
ja
movs
xchg
addr16
mov
cmp
push
inc
or
xlat
out
arpl
or
jo
mov
adc
dec
inc
inc
dec
adc
ins
ficomp
jg
je
add
push
xchg
and
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
inc
add
