sbb
add
outs
jns
mov
push
mov
lea
stos
imul
dec
outs
jo
cdq
hlt
pop
int
add
push
mov
adc
lock
nop
hlt
mov
aas
push
lds
(bad)
dec
shl
ja
es
cmc
jbe
and
push
cdq
jmp
fld
jg
imul
sbb
je
aaa
mov
sbb
sbb
inc
(bad)
jmp
mov
leave
mov
push
cdq
fs
sub
movs
mov
call
pop
(bad)
mov
inc
nop
xchg
pop
xor
dec
push
or
cwde
mov
stos
jnp
or
inc
jp
and
pop
cmp
xor
mov
loope
in
pop
xchg
dec
cwde
ret
xor
mov
xor
inc
lahf
or
pop
add
adc
js
retf
push
movs
mov
adc
xor
and
dec
call
repnz
call
mov
mov
xor
sar
pop
dec
mov
cld
out
pop
push
jecxz
data16
xchg
mov
add
dec
hlt
add
push
jne
ret
fs
sbb
out
or
and
shl
(bad)
repz
xchg
cs
aaa
sub
pop
mov
rcr
cmp
inc
fiadd
test
or
cmps
jmp
sahf
leave
cmps
lock
aaa
(bad)
pop
cmp
pop
out
xlat
and
les
outs
jne
push
jecxz
sub
jne
inc
data16
xor
sub
xlat
jbe
div
or
adc
add
(bad)
shl
push
xchg
aam
in
cmp
dec
mov
ds
rcr
pop
sbb
mov
js
inc
or
mov
mov
inc
mov
mov
xor
or
mov
sub
daa
cmp
sub
lods
aaa
add
jbe
lock
shr
jae
jecxz
mov
dec
jmp
leave
icebp
pop
loopne
jp
outs
sub
xchg
mov
dec
(bad)
sub
fdivr
in
fsub
mov
cmp
cmc
cmp
sbb
aam
js
push
pop
xor
dec
out
push
lds
add
mov
js
retf
fwait
xor
icebp
jge
icebp
in
push
repz
sub
rcr
mov
pop
adc
inc
dec
mov
test
xchg
arpl
cld
mov
aad
mov
mov
jp
dec
jae
push
or
rcr
in
enter
out
pop
pop
jp
jns
dec
push
jb
mov
jne
mov
rol
cwde
add
cmp
call
jnp
cwde
div
sub
fcom
sub
je
repnz
sahf
jl
pushf
and
fist
push
and
inc
sub
and
add
jns
push
mov
dec
das
sub
imul
in
out
pop
jae
mov
aas
dec
lods
rcr
test
xchg
xor
repnz
mov
into
push
dec
pop
outs
inc
jbe
inc
ins
icebp
cwde
and
stos
retf
out
rcr
and
cmp
mov
aaa
pushf
sub
sub
aam
cld
aad
xchg
inc
mov
cli
mov
sbb
dec
inc
dec
js
push
inc
pop
inc
cmps
push
add
sub
scas
jmp
cli
aas
xlat
and
or
push
sbb
add
cwde
inc
pop
out
fisubr
loope
jl
cmc
stos
shr
in
cwde
repz
xchg
mov
adc
jnp
xchg
and
leave
and
pop
mov
ret
icebp
sbb
test
(bad)
mov
sub
test
jb
(bad)
cld
push
inc
push
and
gs
xor
add
in
mov
fisttp
shl
std
and
(bad)
retf
(bad)
std
int3
js
push
fadd
cmp
dec
sbb
jnp
movs
stos
xor
inc
test
xchg
push
dec
and
aad
cmps
ror
sbb
call
es
js
cmp
mov
or
shl
dec
ja
push
cli
test
outs
sbb
pop
jne
inc
imul
pushf
jg
mov
pusha
xlat
loopne
repz
lds
xor
nop
mov
xchg
test
and
mov
xor
cmp
not
sti
in
jge
cdq
pop
pop
cwde
rol
or
xchg
out
cmp
xor
jmp
lods
sbb
shl
out
fwait
mov
mov
ss
pop
ficom
jo
cwde
or
aam
ja
movs
repz
mov
je
or
inc
pushf
mov
dec
pop
adc
ja
add
pop
lock
xor
fwait
imul
push
jne
(bad)
out
repnz
add
clc
push
(bad)
sub
lods
sub
jns
inc
mov
push
push
jae
jo
movs
gs
loope
repz
test
adc
cdq
pop
lods
aaa
leave
xchg
add
jl
movs
xchg
retf
mov
inc
jno
mov
imul
dec
and
ret
cmc
mov
fucomip
inc
lods
in
dec
gs
add
mov
dec
mov
scas
fnsave
push
sub
call
ror
test
dec
ja
les
ins
push
addr16
ss
push
retf
jl
aas
repnz
pop
sbb
(bad)
out
sub
sbb
ror
fs
(bad)
fcmovnb
ud1
and
rcr
mov
push
push
lds
mov
(bad)
fxch
neg
movs
das
push
out
mov
sub
sbb
sar
outs
jle
xchg
inc
jo
imul
arpl
jae
xor
xor
add
xchg
and
mov
sbb
fs
inc
mov
rcl
push
and
or
cwde
inc
xchg
xchg
les
scas
les
cwde
xor
fldenv
into
scas
fs
js
in
aad
out
mov
aas
aad
mov
outs
push
pop
xchg
fs
xor
jb
mov
leave
mov
lods
daa
cld
shl
inc
shl
pop
sub
inc
inc
cli
pop
add
dec
and
stc
stos
ins
lock
xor
cmp
mov
jmp
movs
and
sub
xchg
sub
sub
cmp
pop
mov
scas
stos
sbb
jo
(bad)
push
jmp
scas
mov
in
imul
adc
adc
mov
enter
dec
(bad)
rcr
in
pop
adc
xchg
jb
into
jne
shl
and
test
xchg
gs
pop
retf
ja
push
cld
je
dec
ret
cwde
jecxz
movs
in
inc
jge
add
mov
out
std
xor
push
pop
sub
jae
shr
mov
jge
js
out
add
test
inc
fdiv
dec
mov
cwde
mov
cwde
inc
out
jp
mov
mov
jle
pop
xor
pop
sub
push
mov
inc
fidivr
mov
arpl
push
out
in
cmps
push
fidivr
xchg
add
adc
mov
daa
leave
js
rcr
mov
add
and
mov
cmp
mov
sar
inc
push
shr
mov
jl
xchg
sub
cli
sub
stos
inc
inc
popf
out
addr16
stc
sbb
dec
mov
arpl
sub
neg
xchg
sar
push
out
movs
add
movs
add
dec
rcl
shl
mov
inc
inc
mov
dec
and
stc
pusha
cmp
shl
inc
or
sub
aam
push
push
lods
jnp
repnz
lock
scas
add
lods
add
loop
fild
ins
sbb
and
pop
and
adc
mov
push
daa
test
adc
adc
into
sahf
mov
xchg
loopne
mul
cmp
inc
push
ins
aad
call
mov
jae
scas
test
sbb
mov
push
rcl
retf
jnp
adc
mov
push
pushf
inc
inc
cdq
fdiv
push
mov
sar
div
test
jbe
pop
add
jp
xchg
and
adc
shrd
ins
sub
add
bound
xchg
sbb
clc
mov
outs
pop
sbb
shl
pop
and
pop
push
jle
push
push
test
adc
in
aam
ja
outs
inc
pop
dec
fdiv
inc
cmps
nop
dec
aad
cmp
js
jno
pop
jle
ror
stos
inc
leave
pop
andnps
ins
fcmovbe
call
add
imul
cmp
xchg
shl
jmp
pop
mov
jo
aaa
mov
jae
sub
aad
inc
adc
dec
or
and
xor
idiv
add
xchg
ds
xor
rcl
and
add
pop
mov
ret
lahf
addr16
and
add
nop
inc
ror
mov
jno
mov
mov
pop
and
xchg
add
into
arpl
ins
cwde
popf
dec
repnz
push
cwde
jns
cmp
jnp
cwde
dec
cmp
enter
fs
push
mov
add
mov
push
out
pusha
sbb
pop
je
aas
test
dec
arpl
ret
add
mov
cs
(bad)
in
push
mov
jae
fsubr
pop
outs
pop
mov
cld
mov
fs
add
neg
in
(bad)
xor
xlat
fwait
sbb
cmp
xchg
outs
pop
dec
jecxz
popf
cld
or
mov
mov
push
jg
jmp
test
daa
mov
adc
data16
pop
xor
jecxz
inc
sub
cmp
cli
pop
mov
xchg
mov
mov
push
add
jmp
cmp
aas
mov
push
xchg
gs
cmp
rcl
dec
sbb
jb
pop
xlat
aam
xor
cmp
mov
lahf
int3
pop
or
(bad)
loopne
sti
pop
push
fimul
dec
sbb
mov
int
and
ja
movs
and
dec
cld
xlat
loopne
sub
xor
cld
(bad)
enter
mov
or
add
stc
jne
xchg
or
movs
and
cld
cmp
into
inc
add
mov
dec
adc
mov
repnz
pop
sbb
loopne
inc
mov
pop
sbb
mov
jne
ss
mov
or
je
rol
imul
sbb
into
sbb
pop
lds
xor
push
outs
mov
movs
movs
add
cwde
push
cmc
enter
or
pop
mov
mov
sbb
cld
es
je
sbb
imul
(bad)
and
out
adc
mov
dec
(bad)
retf
mov
adc
je
ret
jmp
pop
dec
dec
ins
xor
retf
cli
cmp
lods
add
mov
jbe
adc
(bad)
and
test
cmps
and
xor
xchg
out
in
cmp
retf
cld
data16
cmp
pop
or
clc
dec
mov
and
push
add
outs
mov
lods
fcmovnb
push
push
xchg
pop
mul
not
push
inc
sahf
mov
addr16
lahf
rcr
mov
outs
fucomp
jle
retf
mov
cmc
mov
jb
push
stc
retf
call
scas
(bad)
jecxz
jecxz
and
sbb
call
and
dec
lea
xlat
sbb
inc
in
lahf
xor
sti
in
mov
xlat
jbe
cmp
push
mov
je
mov
jmp
retf
fild
fimul
sub
scas
in
adc
pop
jns
xchg
push
fisub
pop
fs
dec
jb
xor
fbstp
dec
sub
js
shr
ficom
dec
data16
xor
push
test
and
add
jbe
xor
push
scas
jecxz
shl
arpl
in
ja
jbe
mov
(bad)
mov
mov
rcr
clc
std
push
in
add
mov
mov
sub
mov
mov
repnz
movs
int3
mov
div
or
jns
cmp
icebp
add
fcomi
mov
shl
sub
into
dec
imul
xchg
dec
in
imul
punpckldq
pushf
mov
xchg
(bad)
push
rcr
xor
jg
(bad)
lods
dec
loopne
dec
daa
jo
sub
cmp
jo
dec
dec
rcl
movnti
not
test
fsubr
lock
push
imul
retf
loopne
in
jge
mov
stos
cmp
xor
xchg
ficom
ret
in
(bad)
repnz
fcom
(bad)
repz
(bad)
daa
retf
sahf
fstp
mov
xchg
jo
arpl
cmp
pusha
retf
inc
mov
std
jae
aam
fldenv
scas
mov
jne
and
clc
inc
sbb
adc
jo
je
jns
je
xor
scas
retf
push
pop
jo
inc
enter
pop
fist
fisttp
test
pop
sbb
ss
jnp
in
dec
aam
mov
movs
out
stc
sbb
scas
xchg
pop
es
push
and
adc
fldenv
(bad)
and
jno
scas
xchg
or
add
shl
mov
gs
es
outs
lds
leave
jmp
xchg
mov
inc
jg
xor
fldl2e
jg
inc
xchg
pop
xor
dec
fadd
add
in
aam
retf
and
popf
mov
cmp
rol
ds
jb
dec
xor
mov
sub
mov
mov
test
test
jo
test
(bad)
pavgb
imul
fwait
push
mov
fist
or
stc
das
inc
cmp
repz
jecxz
leave
fmul
dec
push
pop
cdq
jp
sbb
push
or
xchg
ins
jae
stos
jns
iret
das
mov
push
or
repnz
pop
repz
add
dec
sub
aam
xchg
xor
inc
call
or
mov
push
mov
fist
jp
inc
aaa
pusha
(bad)
out
sbb
xchg
push
ret
sbb
sbb
jnp
stos
or
or
or
cmp
jne
add
cld
sbb
jmp
ins
rol
rcl
sbb
xchg
fimul
dec
sahf
fucom
sub
cmp
inc
jge
push
jno
iret
push
mov
xor
push
push
das
out
shl
icebp
std
sub
inc
adc
mov
int
jg
ds
mov
and
and
ss
loope
outs
push
push
or
inc
movs
sbb
aad
add
retf
repnz
loopne
test
jno
test
loopne
(bad)
sbb
inc
mov
gs
and
mov
call
test
pop
ret
les
aas
xor
mov
jmp
jge
stos
adc
jp
and
dec
lods
call
dec
out
pushf
rcl
ins
xor
xchg
cld
inc
dec
and
mov
rcl
mov
test
mov
aam
jle
xchg
and
adc
ds
popf
test
push
fsub
or
test
popa
into
sbb
sbb
xor
into
sbb
bnd
jp
je
inc
pop
(bad)
in
inc
mov
aam
ja
xchg
add
mul
mov
int3
inc
xchg
sub
fistp
push
(bad)
(bad)
(bad)
jle
jg
inc
out
mov
ss
fwait
shl
(bad)
cwde
or
dec
mov
iret
or
and
adc
sbb
pop
xor
aas
xor
inc
xor
xchg
pop
xchg
adc
in
mov
add
aas
out
pop
jne
mov
rcr
ret
mov
call
dec
xchg
bound
retf
inc
lds
or
mov
inc
add
inc
xchg
icebp
out
out
fiadd
aaa
and
je
ja
call
in
sbb
das
(bad)
add
fidivr
mov
out
sub
aam
idiv
sub
pusha
stc
call
mov
inc
fmul
mov
xchg
and
stc
pop
sub
sbb
aad
jae
jg
pop
call
inc
mov
or
movs
push
ja
mov
dec
adc
cdq
xchg
mov
sub
and
jno
adc
push
sbb
pop
clc
mov
cmps
movs
adc
sbb
(bad)
retf
movs
lahf
pop
pop
mov
call
sbb
inc
movs
adc
adc
inc
retf
xchg
mov
sbb
ror
pop
int
jb
test
test
stos
xchg
ffree
js
or
jne
call
ror
or
mov
fisubr
outs
mov
cwde
inc
xor
scas
add
repz
push
add
cld
pcmpeqd
or
add
jnp
or
pop
clc
inc
in
lods
ds
iret
inc
push
xchg
pop
out
xor
out
sbb
dec
dec
jns
push
xchg
or
mov
mov
movs
in
mov
int
jmp
cmp
add
not
jns
aam
(bad)
sahf
mov
sbb
adc
lea
sub
xchg
sbb
fldcw
mov
xor
dec
dec
dec
repz
inc
add
pop
inc
fsubp
rcr
push
inc
push
jge
mov
nop
mov
xor
call
sar
imul
je
push
push
add
cmp
div
push
cs
mov
in
cmps
jp
adc
cmp
mov
push
add
adc
jno
push
push
imul
fdivp
out
in
adc
fwait
int3
pop
aad
sti
or
sbb
pop
test
aam
aad
push
fnstsw
das
jae
test
call
mov
jns
jp
lds
sub
repnz
xchg
push
inc
cwde
xor
je
ficom
ds
inc
mov
mov
cmp
sub
ss
fwait
sub
ficomp
mov
mov
stc
mov
scas
inc
ret
lods
cmps
mov
or
jae
fidivr
jmp
in
mov
int3
jmp
retf
shl
adc
sub
call
das
xchg
sub
(bad)
in
shl
outs
jno
sbb
mov
sub
mov
mov
dec
cs
mov
retf
out
and
jbe
mov
and
mov
jae
adc
int3
push
test
mov
push
xchg
sbb
mov
hlt
rol
mov
xor
stos
aad
xchg
jbe
push
test
and
pop
nop
jae
sbb
es
push
push
push
call
mov
mov
enter
and
mov
repz
add
dec
mov
out
sub
(bad)
jmp
hlt
pop
popa
mov
xor
aad
or
cmc
mov
xchg
mov
arpl
or
pop
gs
mov
push
inc
jo
inc
aam
pop
xor
push
or
inc
xlat
retf
pop
std
les
push
lahf
push
in
jp
dec
mov
dec
scas
sahf
add
push
mov
out
lock
call
cmp
mov
xchg
jl
push
out
jbe
cmps
loopne
adc
adc
inc
add
adc
adc
popf
jno
ins
dec
mov
call
sbb
add
in
add
mov
aaa
ja
or
test
jns
into
xchg
jae
mov
sub
clc
retf
push
jle
add
push
inc
cmp
pop
xor
and
rcl
and
jmp
leave
stc
cli
dec
cmp
sbb
sub
and
adc
push
pop
arpl
test
arpl
(bad)
rol
sub
shr
shl
jmp
or
and
loope
adc
jmp
ret
enter
gs
mov
ins
dec
mov
mov
and
icebp
mov
fisttp
cld
lods
jb
ffreep
rcr
xchg
std
lock
add
pop
mov
test
adc
pop
mov
int
dec
jp
cmp
pop
jg
mov
mov
dec
test
dec
clc
loop
(bad)
jp
cmp
fwait
push
pop
and
std
ftst
mov
add
xchg
fsubr
(bad)
or
jmp
sti
(bad)
cmc
rol
sub
pop
sub
adc
mov
dec
test
cmp
jns
fld
into
and
gs
sbb
test
xchg
popf
push
xor
loopne
mov
call
mov
push
pusha
or
jb
das
add
gs
dec
mov
enter
jp
sbb
jno
add
jnp
jmp
ins
mov
jg
jns
jb
sbb
ins
gs
scas
mov
cmps
(bad)
test
sti
adc
adc
pop
xor
popa
ins
retf
bound
cmc
add
scas
std
rcl
jle
sbb
inc
das
shr
outs
rcl
mov
xor
sar
or
xchg
outs
out
icebp
imul
dec
test
call
mov
sub
aaa
mov
xchg
xchg
adc
mov
int3
sahf
sbb
daa
lock
inc
and
adc
mov
aad
push
pop
paddsw
add
arpl
fs
stc
pop
adc
loopne
int
stos
add
stos
(bad)
aas
mov
lods
mov
ret
xchg
stos
mov
ds
jae
jge
enter
dec
test
lahf
cdq
cld
dec
scas
js
dec
jo
jnp
lods
enter
push
cmps
pushf
outs
mov
test
rcl
adc
lahf
adc
mov
je
aad
loopne
je
cmps
mov
in
js
(bad)
ins
pop
sub
lock
sbb
push
das
push
add
xchg
jp
xor
sbb
cmp
js
into
fcmovb
imul
and
jns
and
sbb
les
call
cmp
xchg
cwde
cdq
ja
mov
xchg
ds
loope
stc
xor
icebp
mov
loope
mov
sbb
adc
pushf
dec
ds
mov
fcomp
jle
call
rcr
rcr
sub
xor
cmp
scas
ficomp
pop
push
jmp
dec
cmc
xor
rcl
call
inc
xchg
mov
jne
cmp
xor
sbb
mov
cmp
mov
mov
pop
mov
mov
je
mov
icebp
xchg
fst
mov
xor
and
mov
dec
and
dec
xchg
jmp
(bad)
or
mov
xor
and
aas
clc
out
int3
jbe
cld
mov
dec
out
cs
push
out
cmp
call
loope
xchg
ret
jb
jns
sbb
in
repnz
ss
add
ins
dec
jge
inc
sahf
lock
push
mov
fisttp
and
xchg
sbb
(bad)
fsub
cdq
(bad)
pop
mov
mov
inc
mov
xor
ret
stos
mov
pop
mov
std
sub
mov
popf
and
aad
gs
mov
and
invd
sub
cmp
jl
mov
out
(bad)
int3
aaa
sub
mov
iret
lock
inc
mov
sbb
dec
sub
mov
(bad)
inc
ja
loop
pop
faddp
add
or
out
xchg
nop
mov
scas
mov
mov
sub
popf
mov
or
adc
cmp
adc
into
jecxz
sar
mov
pusha
lds
das
push
outs
jns
js
sub
mov
xchg
xchg
mov
jae
or
(bad)
push
pop
loope
(bad)
cs
jnp
nop
shr
call
or
fidiv
inc
mov
aaa
fwait
adc
dec
dec
sub
dec
shl
scas
cdq
and
cld
push
mov
sti
out
mov
scas
and
movs
loope
add
(bad)
test
dec
cs
mov
or
gs
mov
push
inc
fist
pop
mov
jo
sbb
(bad)
push
cld
ret
xchg
mov
int
arpl
gs
sbb
popa
or
ins
mov
mov
push
push
add
outs
pop
push
xor
cli
data16
jecxz
push
sub
sti
mov
ret
mov
pop
movs
sub
jl
xchg
push
not
mov
dec
jae
xchg
push
mov
xchg
inc
dec
dec
pop
jmp
test
pop
out
mov
adc
xchg
sub
or
adc
das
inc
add
ret
pop
leave
jge
jmp
cmp
pusha
fsubr
stos
mov
xchg
ja
sub
lds
xchg
inc
fisub
cmp
lea
into
out
repnz
(bad)
jne
pop
out
movs
or
mov
not
adc
push
lahf
mov
and
mov
adc
or
sub
mov
mov
push
mov
dec
cdq
lahf
aam
xchg
es
xor
inc
pop
sub
and
cmp
push
icebp
repz
mov
sbb
jmp
(bad)
jbe
ds
pop
(bad)
popa
into
jno
repnz
repz
inc
aad
or
sub
mov
cmp
retf
mov
repz
xchg
into
retf
cs
shr
in
jne
jecxz
shl
adc
inc
call
jmp
lods
test
jnp
lea
push
jno
mov
jmp
and
or
lds
sub
outs
mov
jl
mov
xchg
aam
sub
xor
out
fcom
movs
mov
shl
jmp
movs
gs
jl
xor
and
shl
cmp
fidivr
ja
mov
es
push
cmp
mov
ret
push
(bad)
mov
dec
jns
scas
cwde
sbb
inc
push
pop
pop
loope
hlt
pushf
int3
popa
mov
pop
add
and
jle
call
cmp
xchg
dec
call
dec
sbb
gs
leave
icebp
pop
(bad)
shld
sar
mov
xor
call
enter
cmp
daa
int3
inc
jns
xor
ficom
add
in
adc
call
mov
xchg
movs
pop
mov
inc
or
pop
mov
inc
repz
mov
in
or
pop
jbe
pop
(bad)
cmp
xchg
inc
or
lods
add
lahf
and
inc
jno
les
fxch
inc
enter
push
shl
movs
jbe
mov
mov
xor
adc
idiv
test
push
sahf
test
je
xor
sar
lahf
outs
cmps
(bad)
aaa
pop
push
sub
aad
mov
retf
pop
mov
sub
jns
xor
xchg
stos
jo
push
sbb
sti
lahf
push
adc
jnp
fdivr
aad
add
jmp
sub
and
lds
and
xor
stos
aaa
sub
fnstcw
pop
xor
xor
inc
aam
cs
pop
add
push
daa
mov
in
xchg
scas
aad
mov
aas
pop
push
imul
or
int3
push
jbe
sub
pusha
mov
pop
test
aas
jmp
(bad)
push
movs
out
xchg
cmp
mov
stos
sbb
cmp
pop
in
xor
sar
pop
ret
shl
test
jg
mov
ins
aas
sub
pop
xlat
add
or
sub
les
jae
adc
les
clc
pop
outs
pop
push
jl
clc
and
les
movs
dec
or
adc
test
mov
retf
aam
jmp
in
shl
aam
iret
mov
(bad)
scas
and
jle
and
xor
std
stos
out
jno
cmp
jmp
push
fdiv
and
cmp
jnp
iret
jmp
pop
out
ins
adc
add
sbb
inc
dec
pop
aas
mov
xchg
xchg
ds
cld
dec
je
jne
pop
jb
cmc
cmp
inc
(bad)
sub
inc
jp
in
(bad)
xor
sub
dec
adc
sar
pusha
jmp
jns
scas
fisttp
in
dec
sbb
movs
dec
cmp
mov
dec
jmp
push
ret
stos
pop
jmp
sahf
sub
inc
or
call
xchg
in
scas
adc
push
retf
cmp
into
fcmovb
dec
sti
rcl
fmul
mov
sbb
retf
mov
sar
add
jecxz
repnz
std
mov
push
push
dec
repz
inc
pop
push
mul
ror
std
les
std
dec
jo
inc
push
xchg
mov
inc
jp
push
retf
dec
inc
sub
js
(bad)
movs
dec
jmp
mov
outs
jb
neg
adc
add
scas
loopne
mov
mov
adc
jo
arpl
lods
sub
inc
lods
aad
iret
sbb
call
clc
mov
mov
ret
lods
ja
lea
add
fwait
popf
cli
sub
hlt
loopne
dec
stos
mov
sub
out
cmp
cmp
mov
imul
shl
pop
xchg
rcr
mov
push
xchg
mov
sbb
jns
xchg
add
js
xor
and
or
std
cmp
or
stos
mov
retf
mov
into
stos
pop
mov
inc
pop
push
mov
adc
fcomip
(bad)
mov
jno
leave
xor
jmp
rcr
cli
xor
jno
adc
mov
pop
in
cmp
stos
addr16
mov
inc
call
gs
xchg
xchg
or
cli
(bad)
jle
sti
mov
push
jle
std
push
adc
out
cwde
cmp
push
xor
(bad)
fs
mov
push
and
out
or
loopne
outs
ret
xchg
cli
xchg
dec
fucom
mov
jge
test
ret
jmp
fistp
and
push
lods
(bad)
pop
stos
movs
adc
sbb
xchg
or
not
adc
jl
shl
(bad)
lahf
cmp
arpl
std
popa
pop
daa
xchg
dec
(bad)
lock
fbld
dec
int3
jl
inc
pop
jo
push
sbb
in
sbb
neg
out
xlat
lar
out
mov
ret
js
stos
mov
sbb
add
inc
pop
std
and
cs
nop
sti
fadd
and
and
imul
movs
inc
mul
pop
loop
mov
or
int
mov
inc
loope
sbb
mov
inc
loope
cmp
lea
fwait
lds
xchg
loope
dec
mov
imul
xor
dec
pop
fild
jp
push
fstp
lods
sbb
leave
push
mov
jb
jp
fadd
inc
jge
outs
mov
out
in
das
repnz
mov
mov
cmps
fst
jp
mov
push
in
cmps
sti
call
bound
mov
sub
cmp
test
(bad)
cli
js
aas
ins
cmps
(bad)
inc
and
adc
scas
int
ret
xlat
push
cmps
cmp
jg
xor
inc
jecxz
dec
loopne
and
ret
mov
aaa
andps
sub
or
xlat
jle
sub
inc
ja
pop
call
rol
dec
repnz
add
ds
lds
fs
pusha
jle
nop
and
sbb
outs
fild
cmp
push
inc
xor
scas
pop
adc
or
ror
out
dec
mov
ret
pop
add
pop
sub
push
push
outs
pusha
nop
xchg
mov
dec
clc
enter
jo
mov
in
pop
xor
fsub
mov
scas
(bad)
test
adc
mov
add
lea
cli
movs
mov
mov
(bad)
stc
mul
cmp
int
rol
repz
mov
mov
cmp
inc
sub
add
or
mov
ror
in
int3
div
outs
cmp
enter
fcom
jae
int
inc
shl
dec
in
clc
cmp
test
cmp
sub
push
xchg
icebp
enter
out
push
jno
inc
adc
push
stos
movs
test
cli
repnz
pop
xor
or
mov
fwait
dec
sub
adc
fstp
push
test
jp
lods
test
std
ins
mov
fimul
retf
cmp
push
xor
pushf
(bad)
mov
loope
jmp
mov
xor
dec
outs
enter
in
dec
cmp
xor
mov
ret
cmp
mov
and
adc
lock
mov
xlat
imul
pop
js
adc
ror
xchg
xchg
mov
mov
into
push
mov
cmps
movs
dec
fisubr
call
cmp
rcl
test
sub
inc
dec
or
sub
ror
mov
push
fldcw
sahf
xor
jno
jne
mov
rol
movs
arpl
or
push
xor
fisubr
imul
xchg
ror
mov
nop
add
aas
mov
lods
ret
in
ficom
enter
xlat
ret
popa
sub
and
fwait
cmp
or
shr
rcl
mov
mov
fwait
adc
loope
jnp
jnp
add
sbb
sbb
push
cmp
jae
int
movs
call
fnstcw
inc
push
dec
and
jmp
jg
icebp
xor
sbb
(bad)
jge
in
mov
outs
fsub
cmp
sbb
sub
test
stos
adc
retf
push
rcl
push
sti
fsub
mov
mov
inc
cmp
or
loop
inc
cmp
stc
fucomi
sub
add
push
sar
and
repnz
fistp
in
inc
adc
test
cmp
ins
jnp
outs
aas
movs
and
stos
sahf
arpl
ja
and
xchg
stos
push
stos
imul
and
mov
dec
sti
dec
inc
cwde
sti
adc
jbe
xchg
xchg
es
ds
xlat
mov
test
fisttp
lds
sar
das
hlt
int3
push
rol
out
jb
fistp
pop
pop
push
xchg
mulps
pop
pushf
dec
push
push
aas
imul
jne
data16
gs
test
mov
push
xor
rol
pop
aas
pop
push
mov
ins
pop
cwde
or
lods
mov
js
dec
jl
pusha
mov
jns
jns
ds
adc
push
or
pusha
inc
sti
cmps
sbb
lea
adc
mov
dec
out
add
xor
loope
jp
push
jb
js
test
mov
jmp
inc
cmp
into
xchg
xor
shr
test
push
pop
adc
loop
jbe
popf
arpl
xchg
dec
mov
dec
ds
dec
fimul
sub
fisubr
ins
push
mov
adc
sbb
into
lods
pop
mov
(bad)
mov
imul
frstor
es
push
nop
push
xor
loopne
cmps
pop
push
sti
add
arpl
(bad)
mov
fist
xchg
gs
mov
xchg
mov
jae
xor
cdq
mov
fucomp
enter
lahf
popa
in
aas
xor
cmps
xchg
fwait
enter
sbb
xor
xchg
adc
test
lds
loope
cmp
fcmove
aaa
inc
scas
les
mov
cmp
xchg
daa
ins
sbb
jp
or
adc
mov
cmp
fnstsw
stc
xor
mov
mov
das
push
sub
fisttp
das
push
dec
cmps
cli
cmp
xor
jmp
lds
fsubp
mov
mov
cmp
test
dec
mov
sbb
xor
xchg
(bad)
sbb
mov
cmp
fisttp
jo
fwait
jmp
dec
stc
jns
fisttp
dec
jp
and
jge
add
das
mov
(bad)
jmp
pop
push
les
mov
and
xchg
pop
or
and
push
adc
jnp
xchg
or
(bad)
loop
mov
fdiv
das
and
or
mov
cmp
jae
add
and
rcr
sub
bound
sti
cs
std
dec
cmp
mov
xchg
js
inc
inc
lock
pop
xor
rol
inc
cmp
repnz
inc
call
outs
shr
xchg
push
pushf
ror
or
outs
pop
popf
jnp
pop
add
gs
aas
dec
or
das
daa
stc
loope
jne
cdq
and
neg
mov
adc
popaw
test
stos
ja
in
int
sbb
jo
cmp
pop
sub
adc
sub
sbb
fld
or
hlt
pop
sub
add
int3
jb
fdivr
mov
lea
mov
and
pop
mov
sub
scas
push
leave
pushf
fmul
jge
ins
jbe
test
adc
jg
ret
movs
pop
push
movs
pop
push
mov
in
jne
int3
sub
fs
or
mov
in
cmp
or
dec
sbb
add
es
xor
daa
mov
out
jbe
push
xchg
mov
test
test
mov
jmp
repnz
lods
dec
stos
dec
cmp
cli
push
pop
std
cli
test
mov
idiv
repz
pop
cmp
cmp
daa
push
nop
imul
or
cdq
add
inc
jge
sub
cli
pop
call
or
jae
cmp
(bad)
xor
pop
ss
ins
dec
iret
pop
or
std
xor
pop
jg
mov
xor
test
push
(bad)
mov
sbb
xchg
aaa
popf
or
fist
jno
fdiv
mov
xor
add
xchg
scas
xor
and
ficomp
(bad)
lods
mov
pusha
and
mov
cmp
push
cdq
sbb
ja
outs
add
addr16
(bad)
in
xchg
xor
sub
inc
xlat
dec
pop
fmul
dec
inc
mov
lea
es
ror
pop
mov
les
mov
dec
sub
or
test
mov
nop
int3
inc
sub
(bad)
out
into
mov
imul
and
pop
cs
mov
mov
push
lock
jmp
sar
popa
mov
xchg
mov
adc
xchg
retf
pop
sahf
outs
xchg
adc
into
cmp
xor
push
jl
jnp
test
pop
cwde
arpl
push
mov
cwde
scas
jne
adc
sbb
vmread
dec
jnp
xchg
and
cmc
xor
lods
ret
or
dec
jl
test
aas
fbld
dec
mov
in
xor
push
adc
jmp
xor
mov
xchg
and
xlat
push
cmp
push
pop
mov
pop
push
sub
mov
fistp
repnz
push
xchg
inc
pop
jns
push
jg
scas
ins
and
jb
pop
fistp
sbb
iret
sar
iret
dec
inc
push
mov
mov
mov
in
aaa
pop
dec
pop
and
push
movs
adc
in
shl
jmp
call
imul
gs
out
mov
imul
xor
and
add
and
cld
fild
test
inc
push
ds
mov
sub
nop
aas
jl
push
sar
and
xchg
mov
(bad)
ss
imul
or
ins
pushf
mov
in
in
mov
dec
cmps
imul
pop
data16
pop
addr16
dec
push
inc
test
arpl
mov
inc
or
xor
cmp
addps
mov
adc
mov
ss
jo
pop
xor
sub
fnstsw
gs
push
xchg
subps
xor
jmp
lahf
fstp
imul
sar
movs
(bad)
jecxz
push
call
inc
mov
or
adc
xor
xchg
(bad)
popa
aam
jle
mov
cdq
xchg
mov
hlt
ret
xor
cmp
push
jae
rcl
jecxz
in
push
push
int
cdq
test
jne
mov
loop
jmp
push
xor
sub
inc
or
test
and
jl
dec
dec
sub
adc
add
or
aam
enter
ins
xchg
int3
lds
js
ficom
jno
iret
loopne
in
shl
mov
sub
adc
in
iret
ror
sub
pop
imul
out
xchg
adc
sbb
retf
aas
loop
das
and
(bad)
out
xor
les
in
bound
mov
sbb
retf
js
icebp
jmp
mov
push
cmps
loop
bound
call
clc
mov
inc
pop
stos
cli
jbe
stos
push
mov
mov
pop
sub
mov
jl
frstor
xor
jg
add
sbb
popf
stos
fldcw
jne
xchg
mov
es
inc
cmps
daa
add
pop
cli
and
add
(bad)
mov
sbb
cmp
push
int3
clc
(bad)
lahf
in
retf
xchg
adc
(bad)
js
xchg
xchg
mov
fdiv
xor
jnp
push
aas
enter
aam
adc
xor
sub
dec
xchg
inc
ret
and
repnz
ret
xor
push
xor
adc
inc
out
sbb
jecxz
and
jecxz
call
clc
sub
imul
cmp
or
push
sub
lea
scas
jmp
les
mov
mov
and
fistp
fbstp
loop
retf
dec
(bad)
dec
inc
or
lahf
jbe
sahf
sbb
ret
(bad)
sar
inc
mov
xchg
addr16
pop
xor
adc
dec
(bad)
jecxz
adc
mov
lods
retf
(bad)
call
pop
bound
add
or
pop
adc
popa
xchg
or
hlt
and
mov
add
mov
movs
or
or
jae
loope
clc
ret
push
add
pusha
xchg
cmp
je
inc
push
push
shr
arpl
dec
adc
inc
pop
fisttp
(bad)
jmp
repnz
adc
adc
push
imul
and
dec
dec
push
or
sbb
and
sbb
xchg
xchg
push
pop
(bad)
call
or
add
mov
and
sbb
mov
jae
push
pop
adc
fsubr
mov
test
push
jp
xchg
rol
outs
int
push
fcomp
lods
dec
xchg
or
adc
xchg
mov
xchg
ss
xchg
jmp
mov
xor
rcl
mov
and
and
fwait
das
or
sub
inc
in
jle
popa
mov
in
ror
outs
(bad)
je
repz
int3
test
test
mov
test
add
imul
xor
aas
jb
xchg
mov
imul
sub
sbb
sub
fcomp
gs
outs
sub
push
ja
mov
and
fld
inc
ret
push
jge
out
cdq
inc
test
pop
push
lock
sbb
dec
xor
or
pop
adc
mov
xchg
popa
cdq
xor
push
xchg
fbld
cmps
test
(bad)
dec
pop
outs
aaa
push
clc
mov
std
mov
loop
scas
jp
cmc
mov
sahf
movs
pop
pop
test
cli
push
pusha
push
xlat
stos
sub
sbb
dec
fistp
jecxz
and
xor
leave
sbb
push
bound
(bad)
cmp
fs
lods
sub
push
icebp
adc
or
ja
inc
out
push
into
lds
stos
pop
push
lock
sub
inc
retf
jecxz
cmps
lods
xchg
jp
mov
nop
retf
mov
movs
movs
inc
lahf
retf
push
sti
into
sar
ins
gs
push
sub
dec
jp
enter
adc
adc
stos
add
mov
aas
shl
imul
xchg
mov
xchg
sbb
test
dec
mov
jb
into
xchg
movs
push
xchg
icebp
fmul
out
sbb
mov
xor
pop
fs
mov
jp
jae
ret
or
or
mov
(bad)
xchg
add
add
xchg
ficomp
dec
mov
xor
popf
xchg
mov
dec
js
push
mov
mov
jl
push
xchg
icebp
bound
retfw
data16
jb
push
cmc
push
ret
adc
cmp
adc
clc
sub
arpl
jae
adc
dec
loope
push
in
inc
outs
push
or
mov
je
out
push
mov
shl
(bad)
and
jo
jne
lods
lods
leave
ins
mov
sbb
or
je
neg
xchg
mov
ds
mov
xchg
dec
iret
xchg
sub
out
mov
sbb
idiv
xchg
lock
push
xchg
jnp
mov
nop
aad
in
pshufw
imul
mov
out
clc
mov
cmp
cmp
fidivr
xor
pop
nop
imul
jb
shl
ins
nop
mov
nop
jge
jnp
(bad)
mov
rol
jnp
out
mov
dec
leave
test
cld
or
loop
adc
jge
or
ins
sbb
jmp
mov
loopne
push
pop
sbb
ror
ja
fcom
mov
inc
(bad)
je
dec
fist
xchg
dec
adc
jmp
sbb
inc
pop
in
out
push
jmp
cmp
jo
mov
fadd
ret
cmp
sub
pop
dec
movs
leave
repz
push
mov
mov
or
rcr
addr16
movs
push
inc
cli
in
mov
aad
inc
(bad)
je
and
sbb
mov
dec
fs
hlt
jp
mov
xlat
add
lea
push
and
adc
(bad)
cmc
ja
in
jmp
test
mov
xor
push
sti
pop
addr16
and
or
sub
or
ja
arpl
dec
inc
jp
dec
or
xchg
mov
mov
adc
in
ins
sti
sti
cmc
retf
(bad)
outs
outs
jmp
adc
mov
scas
xor
sahf
push
popf
lods
adc
test
stc
out
repnz
in
pop
mov
xor
aam
sbb
out
pop
jno
mov
xchg
pop
xchg
rcr
ss
sbb
inc
cmp
and
sbb
ret
loop
jmp
aad
dec
xor
aam
dec
inc
sahf
xchg
mov
out
pusha
mov
popa
adc
stc
js
(bad)
cs
mov
add
pop
push
stc
ret
imul
cmovge
xchg
dec
shr
loope
or
xchg
cli
ror
lds
aas
or
and
ins
and
lods
mov
mov
xor
cmp
and
lahf
inc
pop
clc
int
sbb
mov
pushf
es
arpl
inc
out
out
pop
pop
(bad)
icebp
sub
cmp
cs
xorps
add
add
push
cld
cmp
and
cmp
mov
adc
pop
test
sub
mov
xchg
add
in
fwait
pop
sub
mov
inc
cli
push
sti
pop
outs
lock
add
xor
mov
xchg
xchg
mov
sahf
inc
test
xor
fld
or
(bad)
cmp
lea
das
inc
xchg
mov
jns
dec
mov
imul
jmp
sbb
rol
jne
adc
xchg
les
icebp
mov
(bad)
xor
movs
cmp
inc
icebp
and
push
dec
jl
and
test
adc
in
aaa
lock
mov
xor
cmps
and
push
test
fs
outs
cmp
inc
xchg
frstor
loope
imul
mov
sbb
inc
and
pop
dec
cs
fidivr
cwde
stc
mov
jl
and
jns
loope
pop
rcr
in
out
ins
sbb
call
popf
daa
push
stos
rol
push
xor
imul
ret
psubw
pop
fnstsw
xor
cmp
daa
sub
fsub
aam
pop
ret
test
cmps
push
jecxz
cmp
or
retf
ins
add
sbb
call
stc
add
in
xchg
enter
ret
outs
push
mov
cli
xchg
sbb
pop
idiv
popa
out
aaa
fsubrp
ss
and
inc
(bad)
fistp
sub
repnz
mov
aas
cmp
xchg
sbb
sub
pop
idiv
iret
xchg
dec
mov
ret
add
mov
int
sbb
lahf
pop
jnp
mov
adc
aaa
push
xor
pop
shl
das
cmp
mov
scas
pop
mov
cmp
lods
cmps
pusha
stc
dec
shl
pop
jo
dec
daa
shr
mov
xchg
adc
add
mov
push
scas
in
sub
movs
test
sub
add
and
mov
lods
mov
fbstp
pop
push
fistp
movs
test
or
xchg
xchg
push
xchg
xor
jmp
cwde
jae
or
in
in
mov
sub
lock
sbb
fwait
mov
cmp
gs
ret
aad
(bad)
xchg
cdq
repz
je
sbb
inc
loop
cli
pushf
cmps
xchg
adc
push
mul
das
dec
fsubr
ret
and
inc
and
jnp
out
stc
add
push
shr
jo
or
xchg
jbe
jl
fild
inc
mov
cmps
sub
into
adc
stos
stos
in
push
lahf
pop
and
bound
mov
and
enter
adc
nop
fs
pop
dec
sbb
inc
jmp
les
mov
sbb
cdq
dec
inc
xchg
sbb
int
jbe
mov
jp
jnp
mov
vmwrite
je
mov
jg
sbb
xchg
int
add
cmp
jle
je
xor
pop
dec
out
test
call
sub
inc
pop
imul
ret
jo
sub
adc
sahf
xchg
movs
je
loopne
lock
test
push
nop
sbb
pop
cdq
sub
add
fld
mov
or
sub
sbb
fstp
je
fs
fistp
or
jne
mov
mov
lahf
ins
push
adc
fld
sbb
dec
sbb
inc
mov
jge
in
in
in
test
and
push
push
js
mov
fist
xor
xchg
movs
inc
fisubr
jge
pop
push
adc
or
cmps
into
or
sbb
fwait
push
adc
dec
stos
repz
jp
popf
push
pop
(bad)
aad
push
or
xlat
cld
sahf
xchg
mov
in
popf
or
mov
mov
enter
cs
(bad)
pop
push
jae
dec
(bad)
pop
push
xor
mov
dec
cmp
(bad)
outs
data16
loop
int
scas
loope
or
stc
sbb
cmp
inc
out
mov
cmp
add
push
mul
bound
pusha
mov
dec
test
sti
pcmpgtb
pop
ins
sbb
dec
mov
repnz
inc
mov
sub
inc
in
xchg
push
gs
repz
push
adc
mov
mov
push
mov
loope
test
fisttp
es
outs
iret
cmp
adc
dec
mov
jo
jle
or
sub
imul
ret
(bad)
aad
into
inc
sub
ss
inc
pop
sbb
cmp
push
into
add
jge
je
push
leave
add
in
jbe
inc
movs
sahf
cld
aaa
ins
dec
xchg
inc
jg
and
out
mov
int3
cs
rol
inc
pop
jmp
push
ins
ins
mov
or
add
arpl
cmp
call
xchg
leave
push
adc
movups
add
int
sti
inc
xchg
dec
imul
mov
aaa
arpl
fadd
pop
pop
idiv
mov
daa
pop
ds
in
pop
rcl
and
out
mov
fwait
pop
cwde
mov
push
inc
sub
enter
(bad)
(bad)
mov
pop
dec
test
and
or
inc
xchg
dec
in
push
mov
mov
mov
test
mov
inc
in
mov
icebp
mov
pop
jmp
mov
lds
jne
inc
fnstsw
sub
jmp
mov
cli
loop
imul
adc
call
xchg
pop
and
push
ja
cmp
fld
mov
les
mov
loope
sbb
fs
test
mul
xor
push
xchg
xchg
rol
lock
bound
icebp
aaa
ja
push
fild
inc
enter
adc
rol
test
stc
cmp
sti
cmps
xor
sbb
dec
jl
test
hlt
dec
in
in
pop
push
call
fcom
data16
or
imul
add
or
cmp
ds
jb
retf
jmp
push
out
sahf
dec
dec
pop
push
pop
jnp
stos
xor
or
ror
ins
mov
jo
xor
fisttp
dec
out
jl
jne
cdq
jle
pop
call
lea
call
in
aas
lods
push
out
xchg
loop
inc
loopne
fldl2t
ds
cmp
rcr
mov
mov
bound
dec
es
sbb
dec
pop
xchg
cwde
pop
inc
or
fst
and
mov
adc
adc
pop
stos
ret
js
cmp
aad
das
cdq
out
addr16
add
push
add
xchg
out
retf
jno
cli
movs
int3
inc
movs
(bad)
jge
loop
imul
dec
fwait
inc
cmps
add
adc
ret
fldcw
dec
cdq
(bad)
or
xchg
jmp
int
mov
cmp
es
jns
push
cmp
push
mov
out
and
sbb
ins
push
mov
call
lods
hlt
into
pushf
xchg
jno
(bad)
jbe
ror
test
inc
cmp
leave
repz
mov
arpl
mov
repnz
in
pop
push
dec
in
dec
icebp
sub
ja
jmp
movs
movs
cmps
lds
dec
loopne
retf
cwde
or
xor
or
in
aam
outs
shr
add
dec
shl
push
inc
ins
xchg
mov
xor
shr
cmps
sub
xor
lods
fwait
mov
or
push
and
mov
lods
push
push
lock
and
(bad)
stos
cmp
add
fistp
sub
and
ss
adc
push
ret
inc
sbb
mov
jne
pop
fmulp
sahf
stc
push
inc
mov
test
xchg
sub
mov
lahf
out
push
movs
jecxz
mov
mov
mov
shr
bound
daa
pop
imul
mov
shl
cmp
imul
loope
lods
jbe
mov
not
dec
out
jmp
pop
mov
or
xchg
int3
mov
hlt
test
mov
dec
inc
mov
aad
out
and
push
pop
sahf
loope
inc
xchg
push
pop
add
shl
mov
fsubrp
or
(bad)
cmp
mov
shr
add
pop
push
inc
xor
sub
outs
xchg
popa
pop
daa
add
xor
and
sbb
push
or
enter
into
repz
sub
cld
mov
xchg
and
push
leave
cmp
cmp
mov
aam
sbb
cld
test
mov
ja
or
mov
xor
push
mov
xor
sub
and
dec
leave
sti
push
ror
rol
(bad)
adc
pop
push
mov
xor
(bad)
pop
adc
fisub
push
idiv
sbb
sub
aaa
lock
xor
pop
dec
(bad)
sub
jge
or
mov
inc
and
and
aas
dec
adc
push
sahf
mov
ret
mov
es
pop
loop
dec
out
inc
mov
test
mov
hlt
scas
das
pop
jbe
pop
pop
pusha
jmp
xchg
stc
jmp
shl
mov
das
js
mov
jno
ret
mov
daa
mov
jo
bound
or
xor
or
cmp
mov
jbe
xlat
add
dec
push
mov
stos
push
dec
mov
sbb
test
outs
inc
fwait
mov
shl
push
mov
add
sub
xor
nop
data16
cmp
pop
out
xlat
(bad)
mov
xchg
fnstcw
sbb
mov
test
adc
cmp
mov
stos
ror
stos
xor
sbb
cli
cmc
mov
jmp
movs
push
scas
adc
ds
pop
retf
lods
sbb
fsub
sub
dec
loop
push
add
dec
mov
call
push
push
mov
in
dec
out
pushf
jno
push
jge
das
(bad)
(bad)
pushf
mov
sar
and
outs
mov
xchg
sub
fld
popa
sub
xor
sub
xchg
push
ss
std
(bad)
(bad)
sub
add
inc
adc
sub
jge
sbb
shr
add
rol
or
fwait
les
jb
out
jae
sbb
dec
push
adc
fld
inc
mov
fcmovb
jno
fnstsw
ret
mov
cmc
sub
sbb
adc
clc
dec
jbe
loope
ret
sub
push
fldenv
into
jae
ret
mov
imul
jl
mov
imul
dec
dec
or
test
ret
xor
lods
lahf
dec
int3
mov
repz
xlat
bound
jmp
ja
add
jmp
clc
stc
addr16
xchg
cli
sbb
fcmovnu
or
adc
das
icebp
leave
and
sbb
jl
adc
fcomp
in
adc
enter
adc
ret
mov
push
and
mov
xchg
add
mov
movs
cwde
jp
and
mov
mov
xchg
fnstenv
out
xlat
clc
sbb
js
xor
sub
jae
imul
mov
mov
push
inc
jge
pop
sub
push
test
leave
mov
je
imul
scas
and
xor
xor
fst
jb
pop
dec
adc
mov
sbb
xchg
add
sub
mov
sub
jle
jae
jle
pop
fsub
imul
addr16
pusha
push
jbe
xchg
inc
(bad)
sbb
int
adc
pushf
fwait
and
inc
rcl
mov
jg
daa
sub
pop
push
in
sbb
int3
add
mov
and
test
fld1
push
and
add
mov
cmp
(bad)
(bad)
fadd
xchg
mov
fs
mov
gs
call
call
push
fwait
js
xchg
mov
(bad)
add
mov
inc
add
aad
push
retf
or
inc
mov
inc
jne
mov
push
in
push
xor
pop
mov
mov
out
popa
push
xchg
pop
cmps
adc
sub
(bad)
xor
aas
retf
shl
fisttp
xchg
retf
arpl
sbb
xchg
inc
pop
(bad)
lock
aad
xchg
xor
sbb
add
jnp
(bad)
lods
imul
adc
or
and
leave
push
and
inc
sub
cli
mov
mov
lods
mov
(bad)
lds
adc
inc
push
sbb
jge
(bad)
or
mov
add
addr16
jno
fstp
pop
push
in
inc
jge
sbb
mov
icebp
jns
or
push
mov
mov
pusha
loopne
mov
shr
dec
mov
in
xor
(bad)
pusha
jnp
pusha
je
xor
xor
pop
sub
inc
mov
pop
mov
jno
push
retf
retf
dec
(bad)
cwde
sbb
jle
pop
dec
adc
xchg
push
icebp
cmp
cmp
cmc
sub
stos
out
test
mov
jo
jl
dec
sub
sbb
adc
or
mov
(bad)
push
jp
movs
lahf
and
cmc
ins
test
js
dec
popf
ret
aam
xchg
mov
test
push
enter
lods
push
xchg
(bad)
test
cmps
xor
push
cmp
es
fs
fistp
shl
or
cmp
lods
stos
lea
push
nop
cwde
(bad)
data16
cmps
adc
and
pop
xchg
push
jg
pop
gs
sbb
fdiv
hlt
mov
lahf
int
sub
stos
repnz
dec
mov
sbb
cli
int
cli
sbb
mov
jmp
das
mov
adc
or
ins
(bad)
movs
adc
in
scas
adc
shl
in
in
daa
ficomp
lods
cmps
jg
test
(bad)
dec
xor
dec
sub
xchg
and
js
arpl
push
xlat
clc
outs
ret
lea
xchg
fisttp
loop
imul
lea
imul
pop
xchg
hlt
int3
or
push
mov
stos
jae
pop
lahf
and
rcr
and
cmp
arpl
xchg
xchg
xchg
sub
jns
mov
mov
stos
fcmovne
outs
nop
sbb
(bad)
mov
push
add
inc
icebp
fldcw
fnstcw
pop
pop
adc
out
ret
mov
and
inc
cli
push
sub
pop
mov
fsubp
push
fmul
(bad)
std
add
push
daa
pop
retf
js
stos
mov
je
push
inc
push
adc
mov
outs
adc
outs
pop
std
leave
stc
adc
dec
sahf
cmp
cmc
imul
xchg
xor
push
jbe
imul
push
popf
mov
cmp
scas
cmp
xor
nop
clc
cmp
pop
push
jge
(bad)
dec
adc
sub
cmp
inc
fld
push
and
mov
mov
xchg
dec
inc
aam
mov
mov
mov
jne
gs
cmps
cmc
cld
fisttp
cwde
xor
or
pop
movs
xchg
mov
ror
pop
enter
fyl2xp1
fist
retf
or
or
sbb
aam
cld
retf
push
xchg
scas
or
dec
jnp
mov
lods
and
popf
aam
mov
cmp
int3
(bad)
push
adc
(bad)
repz
dec
sub
lds
pop
lods
outs
jp
push
mov
xor
cmp
dec
add
jmp
lahf
icebp
mov
sbb
cmp
mov
cwde
adc
pop
or
pop
out
sbb
fcomp
jae
inc
jbe
push
push
jo
cmp
cmps
xor
jb
xor
jns
stc
inc
xor
jecxz
pusha
movs
pop
sub
ret
jecxz
jmp
enter
ds
xchg
ja
xor
ret
adc
jae
repnz
sub
pop
aam
mov
ds
sbb
stos
sub
xor
inc
jmp
add
and
shufps
int3
dec
sub
jg
jl
mov
rol
and
ror
loopne
idiv
dec
ret
xchg
aad
aas
xor
ret
in
add
jg
xlat
adc
out
(bad)
call
lea
inc
push
pop
mov
push
out
or
sub
mov
hlt
stos
mov
out
and
adc
sbb
addr16
js
mul
mov
pop
dec
icebp
mov
fst
cmps
les
fisttp
jecxz
lods
int3
fsubr
(bad)
and
retf
dec
repz
ret
mov
(bad)
cmc
pop
cdq
cmps
ins
cdq
mov
mov
and
in
imul
jne
(bad)
push
sbb
add
in
sahf
jne
mov
mov
mov
mov
dec
pushf
or
mov
mov
ja
in
lahf
inc
cmp
imul
outs
out
jl
jle
test
mov
pushf
mov
(bad)
repz
push
repz
mov
sbb
idiv
mov
fisttp
pop
sbb
xor
xor
call
dec
mov
xchg
jb
lods
jp
(bad)
loopne
xchg
mov
cmp
cld
mov
ror
and
sbb
iret
std
cmp
push
lahf
js
inc
pop
sbb
mov
pop
mov
inc
call
out
retf
loop
inc
pause
mov
add
pop
lods
daa
test
aad
mov
enter
sub
jns
out
adc
jnp
push
mov
ins
(bad)
sbb
jmp
retf
add
scas
pop
pmaddwd
dec
push
scas
dec
adc
psrad
push
add
xor
(bad)
push
(bad)
and
out
out
and
adc
outs
pop
out
pop
or
cmc
inc
idiv
adc
sub
test
jno
xchg
ja
test
mov
out
daa
outs
out
shl
lds
mov
jno
shr
xchg
push
inc
sti
jmp
adc
or
js
push
sbb
xchg
xlat
and
mov
sbb
test
cmps
push
mov
sub
jno
push
vrcpps
sub
jecxz
int3
adc
std
xor
enter
aas
cmp
xchg
imul
frstor
lahf
mov
(bad)
mov
adc
rol
fwait
sub
aas
ret
xchg
addr16
(bad)
dec
add
fmulp
and
mov
outs
es
mov
cmp
and
push
lods
adc
(bad)
icebp
cmc
jmp
es
jo
cld
out
inc
dec
mov
imul
bound
dec
xchg
sahf
mov
pop
ficomp
pusha
mov
les
sub
mov
jge
cmp
loopne
add
and
ins
retf
pop
stos
cmc
aam
mov
movs
mov
outs
cmp
shrd
fst
jne
nop
movs
shr
pop
pushf
push
adc
push
call
and
(bad)
sar
adc
push
test
pop
push
add
in
mov
dec
in
mov
popa
adc
fdivr
fldcw
mov
xchg
pop
mov
cmp
push
xchg
push
fcomi
adc
aad
std
xchg
test
sbb
mov
and
pop
repnz
test
sbb
(bad)
mov
inc
fist
add
jns
xchg
mov
std
xor
jmp
ds
rcr
hlt
jge
or
cmp
mov
ins
sub
jbe
jbe
rol
(bad)
sbb
xchg
jp
and
and
and
pop
adc
das
imul
pop
adc
cmc
test
push
pushf
add
sub
xor
std
cmp
dec
lock
or
xor
mov
inc
and
movs
dec
xchg
push
sbb
(bad)
jp
cmp
pop
cdq
mov
cmps
scas
sahf
repnz
mov
retf
mov
fmul
mov
xor
outs
std
cmp
sub
sub
mov
mov
mov
in
push
sub
aam
loopne
(bad)
sub
or
mov
repnz
pop
inc
mov
(bad)
or
addr16
pushf
mov
cmp
ins
pusha
mov
and
push
es
and
xor
stc
sub
in
adc
inc
mov
fcomp
xchg
xor
xor
ins
ins
loope
jnp
ins
adc
dec
inc
aam
das
add
fild
ret
ja
push
xchg
xchg
cld
adc
scas
xchg
xchg
sbb
dec
fcom
adc
fisub
pushf
jl
gs
cmp
shl
(bad)
fwait
pop
test
xchg
mov
and
imul
outs
mov
bnd
xor
xor
push
xor
ret
out
dec
push
nop
adc
aam
in
in
lds
sbb
cwde
push
pop
pop
dec
pop
int
arpl
add
in
pushf
cmp
and
adc
adc
xor
xchg
dec
jbe
push
sahf
cmp
das
pop
ds
pop
adc
bound
or
xor
sar
das
(bad)
(bad)
(bad)
(bad)
fcomp
adc
xchg
lahf
add
adc
clc
jo
scas
mov
dec
add
out
adc
pop
test
int3
xchg
std
xchg
sbb
rcl
lock
push
jecxz
xchg
pop
mov
jecxz
pop
scas
cli
mov
ss
scas
push
adc
ins
sti
push
(bad)
adc
sub
push
rcl
dec
sub
addr16
(bad)
cs
(bad)
cmc
pop
push
jl
(bad)
sbb
push
cmp
pop
shl
daa
outs
mov
neg
sub
mov
xor
or
rcl
rol
out
sar
shl
push
mov
addr16
mov
loope
and
inc
mov
syscall
xor
dec
fsubr
rol
dec
xchg
xchg
pop
inc
(bad)
les
push
and
in
leave
mov
dec
xchg
lds
adc
movs
inc
inc
jg
lods
or
fstp
xchg
xchg
inc
dec
test
push
dec
mov
sar
jl
push
add
fsubr
in
jmp
je
sbb
das
push
or
(bad)
jmp
xchg
ins
xchg
push
retf
mov
enter
aaa
xor
movs
jle
cld
xor
xchg
rcr
aas
jecxz
dec
xchg
add
scas
push
in
mov
shl
out
aas
neg
jl
loop
and
std
mov
xchg
jmp
daa
sub
pop
dec
add
lea
xor
or
adc
push
cmp
push
mov
cmc
cdq
mov
sub
xchg
xchg
cmp
pop
push
icebp
add
(bad)
jg
div
pop
jno
outs
push
jg
xchg
pop
push
jle
mov
jne
or
sbb
lods
push
push
xchg
jnp
nop
add
dec
xchg
jle
test
xor
jnp
rol
cmc
and
sbb
adc
and
mov
mov
xchg
mov
call
out
mov
into
mov
dec
mov
mov
addr16
mul
or
and
pusha
cmp
sbb
call
add
ins
jb
cmp
xor
inc
mov
xor
ret
sbb
add
jae
ret
push
shl
cmp
call
sbb
fidivr
fisubr
popf
nop
dec
jae
sbb
pop
jg
lods
cmp
jp
jnp
pushf
fdiv
test
or
adc
push
adc
aad
les
jecxz
or
xor
push
xchg
sub
cmp
inc
std
clc
fadd
or
pop
cwde
mov
je
ficom
inc
sbb
adc
pop
lods
cmp
dec
stc
and
mov
inc
xchg
retf
(bad)
in
or
(bad)
mov
pop
out
ss
mov
and
sbb
fiadd
(bad)
retf
(bad)
lock
dec
cdq
xor
xlat
test
pop
mov
test
jp
and
cmp
movlps
jns
and
enter
sub
or
ret
mov
imul
push
jp
loop
push
mov
out
pop
sbb
cmp
mov
outs
sbb
add
lahf
shl
sub
cmps
gs
out
loopne
popa
jae
xchg
sub
mov
mov
fidiv
cmp
mov
jo
(bad)
fst
out
xor
sbb
pop
jg
pop
jae
or
sar
adc
test
int3
xor
jle
mov
movs
aas
pop
push
imul
cmp
outs
push
(bad)
jg
push
jg
icebp
sbb
bound
pushf
dec
xor
(bad)
push
mov
iret
add
popf
loope
sub
add
xchg
sahf
or
in
stos
fucomp
xchg
imul
sbb
mov
shr
jl
sbb
fbld
dec
bound
das
xchg
(bad)
fidiv
mov
retf
and
fs
xor
dec
cmp
or
or
bound
inc
push
popf
mov
or
rcl
mov
cdq
mov
pop
je
pop
in
dec
sub
mov
jle
cmp
jmp
adc
fbstp
lods
or
in
sub
(bad)
out
std
in
push
mov
pop
jp
push
cli
or
repnz
dec
repz
mov
push
pop
imul
xchg
retf
sub
scas
cli
rcl
push
int
cmp
xchg
outs
in
jg
cmp
sbb
jecxz
dec
cli
sub
int
sub
pushf
push
fbstp
add
lods
cli
jecxz
push
adc
stos
stos
and
clc
sub
push
cmps
ret
push
test
or
push
aaa
push
sbb
and
fisubr
or
(bad)
scas
enter
cmp
xor
imul
outs
arpl
sub
mov
jbe
neg
fidivr
out
push
jp
pop
outs
pop
inc
sbb
fidivr
call
sbb
js
neg
pop
call
jb
rep
adc
mov
cmp
sub
sti
dec
adc
xchg
dec
lds
js
jmp
fs
mov
xchg
pop
adc
aad
rol
int
add
xchg
inc
jnp
dec
shl
aad
outs
(bad)
xlat
push
cli
push
mov
mov
enter
out
mov
jb
add
sbb
test
lds
loop
inc
mov
sub
adc
in
mov
cmp
mov
ret
das
sbb
push
xchg
push
(bad)
call
xchg
(bad)
cmp
(bad)
in
clc
call
sar
inc
push
mov
mov
push
mov
inc
inc
inc
sub
pop
lock
aaa
idiv
in
popf
sub
jne
jg
mov
dec
push
test
sub
setne
fsubr
pushf
jbe
outs
jbe
xchg
and
icebp
in
retf
in
push
test
cmp
add
adc
imul
repz
ret
push
mov
adc
das
cmp
xor
sbb
inc
aas
(bad)
jmp
mov
aam
xchg
cli
or
retf
out
cld
mov
(bad)
daa
xlat
out
mov
jmp
jmp
jnp
inc
dec
add
xor
inc
iret
jns
inc
stos
push
cmp
jp
ss
out
fadd
in
xchg
mov
arpl
sub
das
cli
or
mov
out
lock
out
pop
mov
pop
cdq
lock
add
fwait
idiv
pop
es
add
jne
dec
sub
jae
jge
repnz
enter
mov
inc
outs
push
sub
test
or
in
mov
mov
fcmovu
cmp
push
jle
aad
imul
mov
sar
jno
pusha
add
xor
sub
iret
mov
add
stos
xor
jmp
hlt
lahf
cmp
cmc
rol
lds
mov
mov
adc
mov
mov
or
jnp
(bad)
sbb
and
daa
movs
xlat
lods
cli
cmp
mov
das
clc
movs
out
dec
sbb
dec
mov
mov
out
aam
scas
cmc
jmp
mov
popa
inc
pushf
mov
imul
(bad)
jp
inc
adc
push
inc
jge
(bad)
iret
ror
or
jmp
sti
sbb
call
push
jo
fcomp
aas
hlt
sti
inc
bound
fld
daa
les
pop
adc
pop
inc
gs
cmps
adc
pop
or
mov
and
xchg
scas
loope
mov
or
and
cli
xlat
or
mov
xor
jmp
pushf
adc
lods
js
push
push
push
out
popf
pop
and
sbb
fs
xchg
retf
jecxz
add
pop
mov
dec
shl
sbb
scas
jecxz
mov
movs
cmp
in
adc
pop
jae
outs
in
cmp
mov
test
dec
xchg
push
sub
jmp
pop
jnp
cmc
retf
stc
call
pop
mov
jmp
mov
xchg
pop
mov
aam
cmp
out
adc
mov
jmp
add
sub
jmp
xor
shl
fbstp
imul
aam
pusha
inc
stos
or
and
dec
mov
test
je
xchg
pop
adc
aaa
xor
mov
stc
pop
mov
out
xchg
mov
pop
cmps
fmul
sub
inc
adc
mov
imul
movs
les
push
xchg
pop
ja
dec
mov
push
js
pop
dec
arpl
mov
test
js
test
or
add
and
inc
dec
adc
cmp
pop
bound
xor
lahf
inc
jnp
jge
ffree
iret
scas
pop
xchg
pushf
cmp
or
call
push
ja
js
mov
mov
sbb
pushf
inc
jmp
pavgb
cmp
js
ss
aas
fdivr
add
test
sar
outs
outs
and
or
mov
out
test
or
arpl
loopne
js
dec
ins
jecxz
add
mov
sub
stos
mov
vpackssdw
(bad)
imul
inc
and
push
std
inc
lds
pop
or
or
dec
xlat
sub
fucom
xchg
jnp
(bad)
and
pusha
adc
gs
xchg
ins
mov
inc
mov
xchg
and
ret
in
sub
scas
js
adc
ds
push
sbb
(bad)
movs
cwde
xchg
or
stos
mov
mov
or
outs
mov
jns
ror
pop
cmp
or
xchg
jo
jns
daa
iret
sub
inc
mov
push
push
inc
mov
fidiv
xor
sub
mov
sub
mov
sbb
shr
out
fs
sbb
xor
test
imul
or
sti
mov
mov
div
movs
adc
sbb
fidivr
pop
dec
mov
jle
ins
sbb
aaa
out
add
outs
mov
xchg
lods
jnp
fnsave
test
fwait
xor
mov
sbb
sbb
iret
retf
xchg
and
inc
fidivr
dec
shl
pusha
loop
stc
test
out
push
imul
rol
stc
scas
enter
mov
cli
lds
pop
cmp
es
cmp
cs
(bad)
repz
cwde
xor
dec
std
push
push
adc
imul
xor
jnp
aas
jbe
jecxz
jnp
add
jns
pop
adc
(bad)
pop
pop
pop
mov
pop
lea
jecxz
push
xor
or
jecxz
out
and
fs
push
leave
lds
arpl
lds
test
jbe
lea
push
hlt
scas
clc
sbb
(bad)
clc
mov
outs
pop
or
mov
xchg
mov
jg
pop
xchg
dec
jae
sahf
lds
loopne
push
popa
jns
std
dec
inc
mov
xor
in
xor
scas
mov
xlat
lods
fbld
fdivr
jmp
test
jle
xchg
xor
out
outs
test
add
and
out
iret
fstp
into
push
jbe
mov
xchg
popa
fcom
pop
cmps
bound
inc
aad
cs
(bad)
dec
popf
dec
mov
xchg
mov
pop
cli
and
dec
xor
inc
repz
imul
xlat
ffree
daa
loopne
cmp
out
(bad)
fidiv
test
jnp
inc
ins
sub
sbb
dec
rol
cmp
jge
xchg
adc
or
into
shl
das
out
in
xor
(bad)
fst
cmp
ins
mov
inc
mov
test
jp
pushf
idiv
jp
inc
sub
sub
cmps
jmp
in
and
test
ja
test
cmc
jae
mov
jns
iret
dec
into
cli
daa
sahf
dec
xchg
repnz
(bad)
cld
imul
or
or
cwde
sti
loop
call
dec
fs
call
mov
jecxz
int3
xor
inc
sub
sti
dec
loopne
adc
push
push
sbb
fld
nop
mov
push
mov
fucom
scas
mov
bound
inc
add
sbb
add
scas
leave
in
daa
loope
dec
mov
ret
push
jge
das
fs
into
addr16
shl
cmp
jnp
and
or
push
stc
mov
fiadd
js
popf
dec
add
mov
pop
fisub
(bad)
ror
add
cmp
inc
pop
loope
outs
adc
aad
js
adc
out
or
adc
pop
mov
or
add
pop
or
xchg
mov
sbb
stos
jp
mov
xchg
dec
sub
sub
fsqrt
or
xchg
test
out
mov
pop
stos
add
dec
scas
hlt
jp
sbb
scas
in
in
movs
sbb
cmc
mov
xadd
jge
sub
mov
mov
xor
dec
loope
mov
in
aas
popf
pop
lods
mov
gs
jno
cmp
enter
vmaxss
jp
inc
call
mov
leave
mov
rol
jo
sub
repz
mov
lods
xchg
in
shr
mov
pop
shl
jecxz
pop
sbb
(bad)
cmc
xor
sbb
push
dec
mov
push
push
iret
icebp
addr16
ss
test
push
push
int
mov
push
xchg
sbb
repnz
sbb
dec
je
push
cmp
call
nop
addr16
imul
(bad)
aas
fidivr
dec
jl
pop
mov
retf
xchg
test
mov
fld
jb
aas
add
aaa
(bad)
nop
mov
outs
ret
sub
jl
out
lock
pushf
lods
mov
(bad)
cmovnp
adc
xchg
adc
adc
in
aas
dec
aaa
pop
xchg
hlt
adc
(bad)
xlat
ficom
jae
jle
xchg
fist
in
or
ds
xchg
int
adc
mov
cmp
pop
lds
pop
cs
stos
fsub
stos
aam
rcr
ins
dec
sbb
rol
and
adc
push
sti
nop
ret
mov
dec
pop
pop
xchg
(bad)
sub
add
fsub
iret
jno
mov
push
jns
addr16
in
add
aas
mov
leave
sub
pop
int3
pop
out
xchg
lds
inc
and
add
enter
hlt
jg
pop
loop
adc
pop
push
xor
mov
mov
dec
jle
fnsave
scas
lahf
dec
js
or
mov
push
lahf
adc
add
pop
mov
dec
adc
dec
fwait
mov
clc
push
jmp
adc
dec
ret
jns
enter
jns
fmul
lock
mov
jmp
frstor
iret
add
(bad)
test
das
and
mov
into
xchg
or
out
enter
sbb
adc
rcl
cmp
cmp
popf
push
fstp
hlt
dec
sahf
std
dec
cmp
and
jl
icebp
(bad)
sub
xlat
ret
mov
jp
cmp
jecxz
mov
sbb
xor
adc
mov
(bad)
pop
fcom
mov
pop
mov
jbe
fwait
sub
jne
xchg
xchg
iret
ret
inc
cmovns
xchg
pop
fsubr
mov
push
test
repz
push
sbb
pushf
and
or
xchg
nop
stc
push
js
mov
dec
je
pop
sub
cmp
cmp
scas
mov
or
adc
fisttp
or
cmp
repz
sub
sti
xor
clc
xor
cmp
mov
jg
jmp
sub
and
push
mov
xchg
dec
cmp
push
outs
pop
push
xor
in
or
inc
push
lea
out
cmp
mov
sbb
sbb
adc
sbb
and
xchg
adc
stc
loop
cmovbe
lea
clc
mov
in
sbb
push
call
push
or
dec
sbb
lods
push
rcr
call
div
adc
xchg
loope
and
jne
mov
jmp
adc
adc
fld
and
cmp
jns
or
adc
shl
test
or
bound
pop
and
loop
pusha
mov
adc
pop
(bad)
dec
loop
mov
pop
pusha
int
add
mov
mov
xchg
loope
mov
sbb
jle
idiv
pop
sub
add
mov
aam
xchg
sahf
clc
dec
or
pusha
rcl
xor
shr
in
pop
dec
add
inc
es
enter
fldenv
pop
xor
jne
inc
neg
push
stos
stos
mov
and
and
(bad)
outs
xor
xor
jno
ss
push
icebp
pushf
(bad)
mov
pushf
add
out
shl
sbb
pop
int
pop
cli
inc
jbe
adc
stos
cmp
pop
dec
xor
stos
fild
jb
jl
mov
jle
prefetcht1
push
lea
or
jge
and
loopne
mov
popa
add
mov
out
iret
std
add
cmps
test
inc
cli
adc
cmps
mov
add
(bad)
out
(bad)
movs
or
push
push
popa
mov
or
inc
xor
push
mov
outs
add
pushf
dec
into
lock
adc
movs
ret
xchg
(bad)
pop
pop
xchg
popa
(bad)
aas
or
sti
push
mov
mov
xchg
cmp
mov
jb
(bad)
out
pop
icebp
in
sbb
scas
popf
cmp
mov
gs
mov
into
lea
jns
mov
push
in
inc
sub
in
out
bound
rcr
gs
hlt
jecxz
xchg
push
xchg
loope
nop
xor
mov
mov
sbb
dec
jl
pop
cmp
rcl
scas
sub
mov
gs
mov
dec
mov
dec
inc
lds
lds
cwde
jmp
faddp
(bad)
enter
mov
ret
(bad)
mov
mov
or
(bad)
popf
push
ja
scas
push
shl
popa
cmps
cli
sbb
xor
mov
jle
test
int3
repz
cmp
in
dec
or
fild
mov
xor
cdq
idiv
leave
cmps
adc
call
cmp
scas
jle
sub
jmp
cmp
dec
and
addr16
ins
retf
cmp
xor
sbb
lods
push
mov
mov
ret
xchg
inc
inc
jb
add
mov
mov
cld
into
dec
adc
int
loope
cs
clc
loopne
mov
or
ror
xlat
or
cs
jl
(bad)
mov
and
clc
add
push
in
shr
inc
push
ins
cmps
div
xchg
inc
ret
inc
les
mov
test
fbstp
imul
mov
dec
hlt
les
in
bound
push
dec
(bad)
sub
in
add
xor
jo
neg
sbb
adc
repnz
(bad)
neg
mov
mov
mov
or
sbb
mov
ins
hlt
ficomp
es
inc
stc
fnstsw
jmp
dec
push
mov
in
popf
xchg
and
icebp
jb
inc
inc
mov
ja
cmp
daa
retf
or
and
dec
xor
cmp
popf
inc
cmc
cmp
or
lods
scas
pushf
cmp
bound
mov
adc
sub
call
sbb
mov
or
stos
test
and
dec
xor
mov
icebp
bnd
sub
stos
(bad)
in
pop
xor
out
push
mov
(bad)
out
push
int
mov
imul
jo
cs
aam
ror
(bad)
fxch
adc
adc
pushf
mov
(bad)
push
addr16
xchg
in
sub
(bad)
pop
jmp
mov
mov
mov
aaa
test
outs
inc
push
adc
icebp
inc
movs
xchg
(bad)
loope
dec
xor
jmp
test
stos
jmp
and
cli
jns
aaa
inc
jge
lea
push
xor
mov
sub
addr16
scas
xchg
inc
nop
aas
xchg
pop
fimul
jb
xchg
fadd
xor
mov
cld
popa
xlat
sub
add
mov
daa
cwde
jecxz
sub
adc
inc
dec
xor
sbb
jns
cld
mov
pusha
int3
sar
pop
sub
inc
sahf
iret
lds
mov
mov
arpl
add
add
cmps
add
cmp
aam
jge
bnd
ret
movs
out
mov
cmp
popf
(bad)
or
gs
mov
std
sub
inc
in
gs
xor
stc
fst
frstor
inc
pushf
xor
into
imul
(bad)
sub
push
sbb
adc
push
lds
sub
sub
mov
xchg
pusha
adc
repz
dec
pop
pop
fsubrp
xchg
mov
jno
sbb
mov
adc
sbb
pxor
dec
dec
imul
test
mov
cmps
mov
xor
call
(bad)
sub
adc
and
add
arpl
pop
das
mov
data16
in
ficom
nop
cdq
cmp
shl
enter
cmp
push
daa
in
xchg
jbe
adc
lea
pop
aaa
adc
sti
sbb
xchg
pop
icebp
clc
xchg
inc
inc
das
mov
xchg
sub
push
or
sbb
and
pop
xor
adc
(bad)
push
jb
fimul
xchg
and
(bad)
xchg
lahf
leave
and
mov
imul
push
add
(bad)
pop
pop
scas
and
rol
push
xchg
push
push
sar
test
xor
retf
pop
into
call
call
stc
shr
out
adc
add
loop
or
not
outs
and
jno
sub
in
mov
call
dec
cmp
movs
in
sar
loopne
sub
xchg
nop
popa
into
frstor
xchg
in
push
xchg
sub
mov
outs
and
inc
mov
shl
sbb
mov
rol
retf
jmp
les
loopne
imul
xchg
push
pop
call
sbb
cs
shl
mov
cwde
sub
iret
pop
inc
sbb
jecxz
xchg
jge
xchg
lock
and
std
lods
aad
sbb
outs
xor
jl
lods
in
dec
dec
mov
int3
xor
ds
jecxz
jecxz
shl
push
mov
push
sbb
sbb
sbb
test
test
cld
pop
fwait
push
jb
int
loopne
loopne
cmp
fs
sbb
mov
or
mov
ror
xchg
mov
jmp
or
mov
bound
push
cmp
mov
(bad)
push
and
je
and
stos
rol
int3
lahf
push
adc
dec
and
or
test
and
mov
jmp
clc
xchg
xor
mov
fwait
xchg
xchg
push
pop
or
push
aad
scas
lahf
ins
cmp
inc
ret
mov
mov
sbb
and
popa
jns
mov
cmc
and
mov
adc
adc
sub
fistp
stc
arpl
sub
add
js
(bad)
cmp
push
jo
jmp
out
pop
loopne
mov
test
cli
lahf
enter
ins
and
imul
add
pop
and
cs
ret
or
cmps
fsubr
inc
std
ficomp
mov
pop
mov
imul
xchg
es
imul
mov
adc
ss
sbb
and
fistp
sbb
push
jnp
inc
stos
add
and
jmp
repnz
mov
dec
(bad)
loop
jmp
inc
mov
mov
or
sub
jmp
and
and
dec
push
inc
scas
lea
fwait
mov
xchg
movs
jbe
jno
retf
nop
sbb
cmp
or
push
mov
xchg
jns
mov
push
fs
mov
dec
mov
jnp
pop
cmp
xor
ss
xor
imul
cmps
fs
xor
xor
cwde
call
ds
dec
mov
jno
push
push
push
retf
jne
push
fisttp
or
int3
inc
mov
fsub
push
lea
out
mov
je
(bad)
pop
out
jbe
sbb
mov
adc
movs
jmp
sbb
ss
sbb
(bad)
es
shl
shr
sub
(bad)
jmp
mov
xor
retf
stos
add
sbb
sbb
cmp
fnstcw
or
push
leave
cmp
lods
dec
pop
jnp
mov
xchg
fs
ins
pushf
std
xor
push
lds
cmp
add
imul
jmp
xor
and
es
xor
push
pop
iret
and
mov
out
jecxz
or
stc
dec
mov
shl
xor
fiadd
fld
(bad)
mov
push
ja
mov
adc
mov
cdq
or
in
add
jno
sbb
cld
ja
jmp
cmps
das
adc
lods
push
sub
lock
pop
enter
mov
add
inc
and
inc
mov
or
xor
push
repnz
xor
stos
xchg
nop
imul
and
push
and
xchg
mov
cmp
mov
xor
adc
sbb
stos
mov
arpl
popa
mov
and
xchg
dec
mov
fld
loope
mov
dec
in
fldpi
mov
pop
adc
(bad)
jmp
hlt
enter
push
push
or
out
xchg
jge
jbe
ret
dec
nop
jno
cmp
jbe
cmp
repnz
pop
or
jno
int
push
xchg
dec
jo
dec
(bad)
loop
adc
pmaxsw
and
add
or
push
out
xor
lea
jns
call
or
sub
push
je
mov
stos
lahf
jbe
inc
jmp
mov
mul
test
mov
fcomp
or
cmp
jge
inc
push
fsub
and
adc
fisubr
jmp
xchg
xor
mov
pop
jmp
es
mov
into
cmp
mov
cdq
mov
(bad)
lock
xchg
dec
pop
and
cmps
add
pusha
push
xor
mov
cmps
mov
inc
xor
jecxz
fs
mov
mov
popa
push
test
xor
daa
jmp
dec
xchg
push
push
push
sub
fcom
and
dec
xchg
in
sub
sbb
scas
loop
retf
xor
sub
scas
push
dec
aad
jmp
ds
pop
sbb
push
or
std
div
mov
pop
cmps
inc
test
retf
adc
lds
jge
sub
rol
jns
fdiv
(bad)
scas
inc
pop
pop
imul
adc
lods
cmp
cmp
cmp
retf
xor
out
cmp
cs
pushf
cld
mov
(bad)
aam
mov
ds
mov
jae
add
add
out
fmulp
out
xchg
aaa
rcr
sub
xchg
int3
icebp
sti
out
pop
or
call
popf
scas
lahf
(bad)
arpl
jb
push
cmp
jmp
mov
pop
mov
or
mov
fst
adc
sti
pmuludq
jmp
push
dec
push
jmp
adc
adc
retf
pop
xchg
adc
inc
fld
test
xchg
adc
xchg
outs
pop
test
fwait
gs
pop
xor
shr
inc
and
pop
adc
cmp
add
sahf
test
repz
std
push
sbb
pop
dec
mov
loop
xor
or
popa
cwde
xchg
xchg
fwait
xchg
jno
and
mov
push
leave
or
and
inc
pushf
out
ds
outs
dec
test
rol
inc
call
sub
js
repnz
fninit
or
sbb
sbb
pop
xor
ret
add
adc
mov
and
(bad)
mov
jo
cmps
aaa
test
xchg
stos
pop
sbb
je
jge
sub
cmp
movs
fcomp
adc
push
das
outs
sbb
mov
fs
jns
ficom
pop
jne
sub
cld
add
or
pop
adc
jnp
push
outs
test
fisttp
stos
repz
and
pop
adc
stc
dec
xchg
jmp
pop
sbb
mov
xchg
out
(bad)
mov
aad
adc
sbb
xor
retf
adc
xor
hlt
je
sti
jns
(bad)
jo
std
adc
pop
cmp
bound
mov
and
add
sar
lds
mov
ret
ins
imul
ja
or
push
inc
in
xchg
in
mov
sbb
pop
gs
dec
inc
push
mov
xchg
xlat
rcl
retf
out
loop
push
sub
repz
lea
retf
inc
mov
ja
ror
xchg
cmp
adc
hlt
fiadd
sub
je
add
in
adc
pop
loopne
adc
dec
call
repz
and
stc
mov
mov
mov
ror
fmul
or
icebp
repnz
inc
sar
(bad)
in
xchg
stos
scas
iret
jno
cmc
sub
ret
icebp
inc
neg
fimul
stos
jae
stos
popf
ret
int
inc
mov
lods
out
inc
aaa
push
retf
sahf
mov
clc
popa
inc
push
hlt
pop
dec
and
out
xor
test
xchg
test
(bad)
int
xchg
movs
aad
sbb
addr16
loopne
stos
aas
outs
popf
fwait
lods
or
add
pusha
inc
test
daa
out
neg
pop
fst
loop
inc
adc
xchg
fdivr
inc
in
test
scas
loop
cmp
push
jne
and
loopne
dec
mov
retf
ror
xchg
cmp
mov
cmps
push
dec
adc
or
and
mov
movs
and
xor
inc
fnstsw
jmp
call
xor
inc
or
adc
xchg
addr16
loop
out
push
(bad)
arpl
fadd
stc
cmp
add
cmp
sub
sbb
shr
push
out
sub
es
cmp
mov
mov
imul
cmps
das
clc
add
mov
mov
sahf
leave
cmp
push
call
stos
mov
cmp
push
adc
inc
jno
(bad)
std
mov
pop
push
add
lods
jae
stos
inc
sub
mov
test
ds
jbe
movs
inc
dec
nop
push
mov
cmp
push
pop
stos
inc
ss
cmps
mov
stos
jl
push
push
sbb
mov
push
xchg
adc
shr
mov
lea
cmp
hlt
sahf
out
in
scas
and
fcmovnb
addr16
call
popa
mov
test
mov
mov
fs
mov
sbb
(bad)
(bad)
jno
push
pop
stc
(bad)
pop
test
add
push
jecxz
mov
sbb
movs
sbb
rcr
mov
and
and
pushf
pop
hlt
stos
mov
mov
pop
cmps
addr16
imul
outs
cwde
jecxz
mov
mov
mov
adc
cmp
adc
cmp
clc
hlt
imul
push
outs
retf
in
adc
sbb
and
or
stc
lock
adc
push
icebp
jp
hlt
stc
out
bound
pop
outs
jb
fstp
cmp
pop
call
cmp
(bad)
push
add
aas
mov
leave
sbb
(bad)
repz
cmp
mov
ja
xchg
sar
and
icebp
ss
jge
sub
jbe
mov
xor
imul
mov
mov
pop
lahf
cli
push
push
push
dec
pop
cmp
xchg
and
pop
xchg
pop
add
inc
inc
pop
ins
add
push
ins
int3
sar
dec
xor
and
imul
jnp
inc
icebp
ins
mov
dec
scas
loopne
rol
shl
or
push
mov
pop
ins
cld
sbb
xor
push
mov
call
sbb
je
cdq
xor
jno
pop
push
mov
mov
mov
push
cmps
(bad)
in
loopne
or
es
jmp
xchg
psubsw
pushf
mov
mov
rcr
jbe
in
pushf
xchg
dec
jnp
sbb
daa
or
or
sub
sbb
mov
(bad)
xchg
scas
cs
ss
jl
in
push
cmp
cmp
pop
mov
pushf
mov
xlat
push
cld
movs
sbb
push
sbb
popw
push
xor
ror
repnz
outs
pop
dec
xchg
jecxz
int
jb
dec
mov
(bad)
es
mov
(bad)
retf
xor
shr
nop
in
sub
lods
xchg
mov
(bad)
adc
sti
pop
jl
out
jne
and
jl
cld
mov
fnstcw
sbb
inc
daa
bound
aaa
in
fcmovb
push
mov
das
shl
cmps
add
sahf
fs
pop
inc
or
cli
jl
xchg
shl
or
add
mov
test
push
sub
lds
mov
dec
(bad)
jnp
and
cwde
push
dec
pop
loopne
jg
in
push
push
int3
xchg
push
xchg
into
in
sbb
dec
cmp
jp
sbb
cmc
(bad)
std
mov
pop
std
adc
xchg
adc
in
lods
jecxz
iret
xor
cmp
mov
(bad)
pop
fdivr
(bad)
ffreep
(bad)
outs
loop
xchg
mov
or
enter
cwde
xchg
xor
popa
mov
mov
jmp
bound
(bad)
ret
test
jp
mov
loope
loop
jo
stos
fsubr
and
aas
push
and
jp
dec
jae
and
loope
xor
dec
cs
rol
das
mov
pop
cmp
aam
and
mov
push
dec
pop
cmps
or
push
cmp
call
icebp
cwde
int
sub
mov
inc
mov
popf
pushf
push
sub
pop
pushf
out
dec
dec
cmps
outs
jo
mov
mov
in
stc
add
(bad)
and
mov
inc
jecxz
inc
inc
ins
sahf
out
add
xor
jp
add
(bad)
xor
cmps
cs
sub
add
lock
inc
leave
mov
cmp
imul
test
fdivrp
push
xor
cdq
stc
jge
sbb
jo
hlt
(bad)
in
cmps
jae
neg
fcmovnu
cmps
cmc
ja
popf
sbb
aam
nop
push
daa
xchg
push
and
test
sbb
dec
imul
lds
push
mov
mov
jp
mov
clc
not
icebp
mov
pop
sub
sub
mov
aam
fst
or
aaa
psubb
inc
sbb
adc
sub
pop
jmp
ins
mov
inc
scas
imul
inc
(bad)
shl
aad
dec
pop
retf
test
nop
jp
add
xor
sar
fnstenv
sub
movs
(bad)
outs
call
or
cdq
push
loope
dec
push
xor
dec
lods
int3
in
or
pop
lock
mul
xor
ret
test
in
xor
nop
inc
jle
push
pusha
push
loopne
fucom
scas
push
sar
push
cmp
imul
xor
push
xchg
gs
pop
or
push
add
mov
lock
dec
sbb
dec
jbe
inc
add
adc
jno
into
aaa
push
cmp
dec
std
fcmovb
loop
cs
adc
ja
dec
inc
test
sti
fdivr
shr
push
cmps
push
cdq
outs
or
lea
mov
je
fsub
xchg
or
push
jne
sbb
out
or
adc
jbe
stos
jmp
mov
into
cmc
dec
scas
mov
mov
push
movs
into
int
test
scas
sar
js
add
out
jmp
pop
lods
shl
hlt
ins
xor
mov
mov
jae
cmp
imul
jmp
lods
cmc
xchg
mov
sbb
int
mov
inc
mov
mov
pop
enter
or
sub
jnp
ja
jecxz
lahf
mov
push
repnz
shl
mov
inc
push
add
add
ja
xlat
adc
mov
cld
nop
mov
ficom
(bad)
dec
jbe
ins
(bad)
lea
cmc
cmp
jg
in
bound
mov
es
push
adc
adc
or
push
(bad)
mov
cmp
push
das
cmp
test
popf
jl
imul
dec
inc
je
cmp
into
inc
add
(bad)
mov
repnz
inc
outs
jnp
mov
xor
ss
cmp
les
inc
adc
test
push
sbb
pop
cmc
xor
gs
sbb
add
je
ja
fsubr
push
stos
in
jmp
jb
daa
loop
jecxz
add
fwait
add
lahf
(bad)
shl
sub
xchg
ficomp
and
aad
pop
mov
pop
lods
retf
ds
and
xor
jb
ret
or
pop
(bad)
sti
mov
xchg
sar
stos
test
outs
sub
fsubr
ret
xchg
jmp
inc
xor
movs
loopne
arpl
xlat
jmp
(bad)
icebp
fnstenv
dec
xor
jge
xor
push
xor
inc
mov
cmp
ins
pop
cmps
lahf
cmp
inc
and
push
fwait
jmp
cmp
jmp
dec
loope
out
test
cmps
mov
mov
jno
xchg
stos
daa
call
sub
push
in
stos
pushf
mov
pop
(bad)
or
cmp
jmp
pop
outs
push
adc
sar
sbb
pop
hlt
lock
mov
mov
(bad)
xchg
pop
cld
mov
adc
out
sub
dec
jbe
mov
adc
daa
xchg
or
dec
clc
popf
nop
dec
sbb
hlt
push
cmp
pop
mov
imul
outs
pop
out
ss
xchg
mov
test
pop
cmps
inc
and
aam
sar
cmps
test
jo
sar
ss
mov
xchg
ds
repnz
scas
or
pop
and
fild
pop
shl
test
sub
outs
fld
popf
(bad)
je
adc
push
cmps
imul
mov
addr16
data16
pop
test
(bad)
push
inc
jle
(bad)
sbb
dec
jle
stos
mov
jne
fwait
mov
div
adc
pop
mov
les
jecxz
or
sbb
leave
xchg
add
add
cmp
dec
je
ret
ficom
jo
arpl
dec
outs
shl
mov
xor
syscall
and
cld
cmp
cmp
add
jge
adc
adc
and
jl
mov
lds
and
add
pop
and
invd
or
hlt
cmp
mov
(bad)
mov
mov
sbb
jno
pop
loopne
pop
push
popf
inc
lahf
add
fstp
jo
out
sbb
scas
pop
jle
lahf
mov
xchg
les
(bad)
sub
or
ror
faddp
push
adc
push
into
and
adc
mov
sbb
loop
iret
pop
in
mov
call
retf
mov
rol
mov
sbb
sbb
pop
mov
xchg
mov
mov
ss
loopne
nop
shl
in
xchg
sbb
cli
mov
aas
nop
rcl
mov
test
mov
xor
xor
xchg
pop
fild
jl
mov
push
push
sub
jns
in
add
push
adc
and
call
mov
cs
daa
shr
cmp
add
cld
ja
add
sbb
mov
adc
mov
aas
call
jp
cmp
outs
push
loope
xor
mov
fstp
mov
call
sbb
pop
xor
(bad)
jmp
sub
(bad)
xchg
cmp
inc
pusha
xchg
mov
pop
add
xor
sbb
dec
adc
mov
push
mov
icebp
mov
mov
cmp
(bad)
ror
cli
sbb
pop
jg
addr16
xor
mov
xor
jg
mov
adc
mov
jmp
sar
out
scas
cdq
lar
dec
sti
pop
jg
cmc
cmps
mov
inc
repz
cmps
dec
xor
pop
scas
loope
or
scas
push
lahf
add
add
xor
stc
fchs
or
fdiv
bswap
and
icebp
xchg
inc
sahf
fcomp
push
sbb
sbb
cmp
in
movs
add
dec
add
push
aas
sti
cmp
push
pusha
out
xchg
popf
sub
mov
add
scas
into
dec
jecxz
fdivr
cmp
popf
gs
adc
in
push
push
and
jl
(bad)
pop
and
or
(bad)
sbb
push
je
mov
jne
outs
sbb
std
(bad)
push
cmp
into
xor
sbb
jle
rol
mov
shr
or
inc
in
(bad)
and
fsub
scas
(bad)
adc
rcl
mov
(bad)
sbb
or
dec
call
enter
add
push
sbb
paddsw
div
jbe
cld
mov
addr16
or
lahf
pop
fwait
and
xor
pop
cdq
mov
jmp
dec
and
inc
das
scas
mov
xchg
enter
and
lods
ins
jbe
mov
cdq
aad
push
push
push
xchg
bound
or
jmp
push
xor
(bad)
mov
sub
or
retf
popf
aam
pop
pop
add
not
lods
or
mov
out
jl
or
out
adc
iret
(bad)
icebp
ins
mov
inc
jno
rcr
dec
jp
add
xor
cmp
mov
push
push
rcr
cmp
aaa
dec
lock
pushf
fidiv
mov
fst
iret
pop
lahf
addr16
loopne
sbb
pop
test
retf
pop
iret
sub
retf
mov
loopne
jns
pop
js
ret
push
mov
fs
lock
gs
pop
pop
sbb
aaa
or
jae
inc
cmp
es
cmp
aaa
dec
fld
fadd
mov
retf
mov
adc
ficomp
mov
scas
imul
cmp
mov
lea
rcl
ins
xchg
inc
clc
sub
mov
dec
jo
push
cmps
cmps
sar
and
in
mov
and
out
and
lods
inc
into
loop
sbb
pop
rcl
cmp
leave
(bad)
cwde
mov
add
jns
aam
daa
xor
cdq
mov
fwait
(bad)
mov
repnz
cmp
sti
mov
fadd
mov
pop
xor
outs
sub
push
sub
adc
push
out
inc
sub
jb
xchg
pop
rcl
and
xor
mov
loope
cmc
cdq
das
pop
sbb
mov
xchg
loopne
xchg
ret
xor
push
xchg
dec
xchg
or
std
mov
xchg
xchg
cdq
and
mov
add
jo
(bad)
pushf
mov
movs
out
ds
out
lods
cmp
js
data16
or
out
adc
mov
pusha
mov
inc
adc
nop
in
jb
loope
aad
sti
dec
ins
sbb
leave
movs
loopne
aam
jle
adc
cmp
scas
jne
sar
in
(bad)
ins
push
arpl
push
imul
or
mov
add
or
add
aad
clc
cld
daa
and
sub
jmp
push
(bad)
pop
mov
cmc
loop
adc
(bad)
xor
aaa
sub
mov
cmps
inc
(bad)
scas
fld
inc
fsub
jno
dec
std
fsub
call
jbe
int
jb
out
jmp
sbb
jns
lock
adc
mov
ins
xor
repnz
adc
and
and
frstor
mov
xchg
cmp
bound
sub
(bad)
test
inc
sar
sub
pushf
out
int
test
frstor
enter
stc
stos
ret
movs
sahf
(bad)
loop
mov
in
jg
jge
xchg
outs
daa
jmp
in
xchg
cmp
dec
popa
rcl
dec
cmc
fisttp
xor
shr
inc
ret
(bad)
sbb
lods
inc
pushf
inc
pop
es
push
pop
lds
pop
jo
mov
push
adc
lods
mov
ret
clc
cmp
loopne
push
test
mov
xor
mov
out
lds
mov
ins
mov
bnd
shl
das
into
xor
addr16
outs
xchg
loop
scas
mov
adc
test
mov
mov
into
retf
rol
cs
pop
lds
int3
mov
cmp
xchg
push
adc
rcr
fnstenv
jae
aam
sub
and
or
fwait
cdq
fnstsw
jp
jp
rcl
stc
ins
cmps
mov
push
mov
and
(bad)
inc
int3
jnp
sbb
mov
mov
lds
ja
scas
int3
xchg
ja
dec
push
jne
push
das
movs
jo
push
or
mov
lea
cmp
pop
outs
pop
or
jns
xchg
call
dec
or
aaa
push
int
mov
and
repz
jp
lods
ret
int
popa
mov
mov
iret
add
cmp
inc
or
call
mov
es
lods
nop
rcl
inc
lods
xchg
inc
xor
xor
xor
ds
lods
aaa
mov
mov
xor
or
pop
cmp
shl
cld
cmp
add
jae
arpl
xchg
add
xor
jle
fadd
jae
aam
cld
leave
mov
outs
es
in
mov
jg
dec
loop
ds
in
fmul
mov
pop
retf
fcom
outs
pop
int3
mov
nop
cmc
mov
call
cdq
jne
adc
adc
pop
mov
adc
aas
push
jns
pop
ja
stos
cmp
pop
outs
jns
adc
mov
lds
add
mov
dec
in
mov
mov
cmps
ret
int3
push
(bad)
jmp
sahf
in
cmp
xchg
adc
dec
aas
push
retf
push
push
outs
shr
dec
mov
test
cdq
mov
pop
sti
les
fnstcw
lock
das
sar
ficom
(bad)
inc
movs
pop
push
push
call
mov
fiadd
mov
(bad)
xchg
jae
test
or
push
mov
pop
push
jp
es
adc
ret
scas
xor
push
jp
cmp
cmps
add
jle
dec
push
push
or
mov
xor
std
jle
scas
push
jno
jmp
dec
add
sub
les
jle
jecxz
mov
dec
xchg
test
dec
sbb
fadd
and
push
xor
adc
cld
iret
mov
movs
imul
inc
rol
add
mov
xor
je
adc
or
fmul
inc
jb
jp
rol
ins
inc
ds
jae
lock
inc
sub
xchg
xor
nop
mov
mov
in
dec
xor
(bad)
adc
jecxz
push
ins
xchg
fwait
and
test
mov
push
sub
or
dec
nop
or
push
mov
les
jmp
jge
ds
mov
xor
cmp
sub
xchg
mov
push
dec
shl
fimul
sub
das
test
imul
and
inc
add
idiv
mov
push
sub
imul
sub
dec
xor
and
mov
and
jno
icebp
aaa
mov
or
mov
(bad)
popf
inc
cmps
int
out
xchg
ret
jnp
outs
fidivr
retf
pop
cmp
add
(bad)
rcr
retf
dec
test
dec
loopne
pusha
mov
test
stc
popa
adc
call
xor
imul
xchg
test
xchg
mov
(bad)
mov
cmp
int3
lock
out
mov
cmp
push
xchg
mov
hlt
iret
xchg
inc
or
jg
xor
test
jle
xchg
fidivr
pusha
sub
loop
mov
cmps
jns
lea
(bad)
in
sub
mov
rcl
int
pushf
push
out
aaa
or
adc
push
pop
and
cmp
pop
bound
jecxz
in
loop
cld
ret
ins
out
dec
cmp
mov
mov
sub
inc
dec
xchg
push
(bad)
clc
scas
out
mov
pop
pop
or
imul
pushf
mov
jne
call
add
mov
dec
ins
adc
cmps
(bad)
mov
adc
in
push
or
mov
cmp
sti
nop
and
out
rol
lea
adc
lds
dec
xchg
dec
mov
rol
mov
xor
fs
and
pop
jmp
sar
or
gs
and
xlat
pop
sbb
mov
cmp
xchg
adc
outs
xchg
ret
mov
retf
inc
imul
cld
fwait
cmp
adc
je
(bad)
mov
or
dec
push
push
les
jo
(bad)
xchg
loop
xchg
push
sub
cli
outs
xor
and
pop
sbb
cmps
jns
mov
popw
lock
jb
mov
pushf
or
fstp
sar
mov
in
xor
sbb
(bad)
out
mov
pop
cmps
ins
sbb
test
dec
lea
mov
outs
mov
retf
gs
es
js
mov
cld
cwde
bound
outs
ret
pop
sub
pop
mov
push
and
pop
xchg
dec
mov
mov
jo
pop
ret
push
aam
(bad)
stos
push
sbb
push
loop
lea
jmp
pushf
ins
mov
inc
pop
dec
and
in
mov
or
mov
push
in
sbb
xchg
sahf
adc
std
cld
(bad)
xchg
mov
mov
jo
cmp
xchg
xor
pop
je
jno
daa
mov
aad
adc
adc
pop
in
es
and
test
xchg
fwait
pop
arpl
je
arpl
add
es
rcl
or
push
test
inc
xor
loope
cwde
pop
xor
xor
sbb
or
std
mov
jp
les
adc
cmp
js
call
sub
jle
popf
add
adc
mov
aad
mov
rcl
(bad)
stc
jmp
xchg
xor
xchg
not
pop
adc
pop
loop
lods
loope
pop
xor
cld
(bad)
aad
loope
ss
and
data16
jmp
push
out
inc
push
jmp
aad
cmp
push
repz
mov
nop
xlat
cmp
hlt
cmp
das
call
lods
push
mov
jae
(bad)
push
mov
aas
in
cs
mov
cwde
pop
add
and
sbb
mov
push
cmps
jb
jg
lods
fs
mov
xor
pop
mov
ja
inc
ficom
jnp
nop
jmp
push
out
fwait
xchg
dec
hlt
push
pcmpeqb
mov
or
sub
sub
push
popa
cld
cmp
push
cmps
pop
aas
dec
mov
cmp
adc
stos
ret
imul
dec
sub
dec
fbstp
push
push
dec
inc
nop
inc
push
mov
mov
ins
fadd
mov
lods
jg
retf
aad
push
mov
icebp
outs
mov
add
xlat
(bad)
fdivr
mov
leave
mov
(bad)
jns
loopne
or
xchg
adc
mov
je
mov
xor
bound
dec
sub
mov
cmp
xor
or
jecxz
int
sub
inc
pusha
cdq
fnstsw
hlt
inc
int
mov
das
stc
jge
push
scas
bound
mov
jae
stos
mov
sub
push
or
imul
out
sbb
test
push
xor
ins
imul
cli
(bad)
hlt
mov
jg
(bad)
out
mov
pop
xor
xchg
dec
in
pop
push
sti
xor
pop
outs
stc
jne
aad
int3
xor
jo
mov
popf
and
call
and
in
lods
jmp
ret
es
mov
imul
push
inc
das
fmulp
or
les
xchg
mov
je
and
xchg
inc
push
cdq
lds
xchg
sbb
sbb
sub
mov
mov
imul
cmp
add
out
aad
sbb
xor
pop
or
popa
(bad)
mov
push
push
outs
jp
mov
ds
cmp
pop
jo
arpl
xchg
pop
pop
cwde
ss
adc
mov
jno
nop
sahf
aam
mov
sbb
mov
ins
and
pop
icebp
dec
pop
fcom
pop
(bad)
jb
out
inc
adc
add
xor
pop
xor
mov
test
not
inc
or
lock
pushf
sbb
mov
adc
dec
inc
mov
int
sbb
inc
jg
add
xor
int
ret
aas
cmp
loopne
cmp
push
ss
clc
and
scas
fld
int3
in
dec
xor
inc
in
adc
in
enter
dec
test
lods
call
mov
mov
xor
fist
es
or
fdivr
mov
dec
adc
in
sub
cmps
sti
movhps
outs
push
push
or
jmp
dec
ret
adc
es
adc
inc
(bad)
fsubr
hlt
push
fcmovnb
push
dec
(bad)
ins
pop
pop
mov
or
jno
or
xor
inc
aad
jns
jecxz
(bad)
pop
push
or
jecxz
aaa
mov
add
xor
dec
ret
and
sub
pop
nop
push
inc
out
mov
in
clc
jmp
pop
(bad)
test
shl
inc
imul
jl
cmp
and
mov
(bad)
jg
test
repz
jb
add
add
stos
xchg
arpl
les
fwait
aad
push
xchg
jl
cwde
ret
xchg
mov
cmps
pop
cmp
cwde
dec
or
loop
mov
outs
clc
lods
adc
shr
lock
jp
call
stos
mov
inc
pop
out
out
movs
inc
sbb
into
movs
lea
mov
jmp
dec
push
xchg
lds
mov
aaa
cli
int3
inc
push
cmp
xor
dec
mov
cdq
push
movs
dec
ret
sub
cmp
lea
adc
xchg
movs
cwde
push
add
add
pop
lods
rcr
and
push
ja
or
mov
shr
adc
add
xchg
int
retf
out
sbb
bound
loopne
loopne
out
loopne
in
sbb
inc
ret
ins
hlt
aad
inc
lahf
(bad)
jmp
mov
xchg
data16
or
push
std
xchg
xchg
fldenv
aas
dec
popa
mov
out
or
in
push
mov
xor
call
adc
je
ficom
rcl
add
jnp
pop
cmp
xor
repz
jge
mov
fs
dec
mov
xchg
pushf
nop
push
and
push
aam
mov
jae
adc
mov
inc
inc
cmp
repz
pop
jp
jno
fadd
faddp
repz
das
enter
idiv
jb
inc
sub
(bad)
or
cmc
xor
lahf
and
mov
das
mov
stc
push
xchg
xchg
das
pop
aas
adc
or
aam
mov
retf
mov
inc
jl
addr16
xchg
pop
push
mov
jl
ss
inc
fisub
push
mov
mov
hlt
out
push
jae
out
inc
jmp
mov
or
dec
fld
ss
sub
in
cmp
ds
(bad)
jae
dec
bound
outs
sbb
adc
retf
mov
daa
adc
cmp
imul
mov
ins
dec
mov
push
jae
fs
push
adc
push
adc
fwait
lock
and
neg
sbb
push
pop
xor
pop
out
mov
(bad)
mov
sub
outs
adc
inc
and
lds
in
and
and
neg
inc
imul
or
xchg
out
pop
sbb
pop
daa
jmp
loope
int
dec
adc
sbb
push
jmp
leave
jge
mov
and
into
fwait
stos
and
dec
xchg
loopne
(bad)
arpl
jmp
test
(bad)
xchg
iret
push
pop
call
fld
mov
mov
in
test
xchg
clc
int
imul
add
jge
xchg
sbb
in
sub
cmp
inc
adc
pop
popf
jmp
pop
add
or
adc
movs
adc
into
cwde
push
aaa
push
mov
ret
outs
dec
les
mov
js
out
lds
and
pop
call
ss
mov
push
arpl
lods
in
sub
(bad)
mov
jmp
dec
push
call
xor
mov
jo
xor
sub
mov
add
mov
mov
call
dec
mov
add
test
pop
xchg
mov
sbb
stos
mov
jmp
ins
inc
inc
cmp
mov
push
lds
shl
in
adc
ja
mov
int
lahf
pop
sub
mov
mov
das
sub
sbb
out
and
xor
adc
adc
call
cmp
cdq
nop
lock
xchg
aaa
je
outs
mul
lods
jnp
push
jge
adc
add
aam
dec
(bad)
mov
xor
das
pop
loop
jne
cmp
call
leave
fidivr
rcr
neg
cmp
(bad)
leave
popf
data16
int
or
rol
pop
adc
sbb
push
mov
arpl
cli
sahf
add
fbstp
lea
test
sar
mov
mov
xor
push
repnz
sub
dec
or
jo
and
outs
mov
fs
and
pusha
pop
sbb
jae
rcl
mov
fidivr
mov
mov
cmps
cmp
inc
int3
jmp
stos
shl
or
mov
repz
(bad)
adc
call
sti
cmps
pop
inc
adc
cmps
xchg
fiadd
lods
ret
mov
adc
or
in
lds
adc
call
cmp
loope
sub
add
mov
out
outs
xor
inc
es
adc
into
lock
ret
or
pop
addr16
ins
and
scas
or
or
mov
repnz
push
dec
gs
out
and
cmp
jge
stc
sbb
adc
cwde
outs
call
sbb
out
push
mov
leave
mov
mov
in
fcom
mov
add
sbb
cli
in
imul
dec
pop
aas
fstp
retf
inc
(bad)
enter
mov
or
aad
add
(bad)
(bad)
jnp
mov
cwde
dec
jo
push
pop
stos
adc
aaa
rep
xlat
pop
pop
ficom
dec
das
jg
dec
scas
push
mov
loopne
dec
dec
add
push
gs
dec
cmp
in
push
outs
mov
dec
mov
mov
and
cwde
jecxz
(bad)
jge
sub
shl
cmp
les
out
or
mov
cmp
sbb
xor
jl
xor
arpl
je
sub
aaa
adc
sub
xor
lds
js
mov
je
xchg
or
shl
jl
add
fild
scas
jae
dec
out
mov
ja
and
repnz
(bad)
fild
add
loopne
jmp
xchg
stos
out
sub
iret
push
addr16
std
rcl
sub
jno
test
cwde
and
and
ss
adc
mov
pop
jl
ins
jl
cmp
cmp
leave
pop
jae
cmp
mov
popf
mov
je
fmul
test
mov
jmp
(bad)
or
mov
stos
pop
(bad)
inc
scas
mov
dec
push
or
jg
pop
loop
pushf
(bad)
loopne
xor
sbb
lods
in
dec
sahf
jne
les
movs
arpl
shr
xchg
call
add
and
es
out
arpl
jmp
and
call
jne
cmps
bound
sub
adc
push
xor
push
jle
add
rcr
fcmovnbe
and
adc
mov
rol
popf
push
out
loop
or
imul
mov
pop
cmps
jno
and
or
hlt
retf
dec
retf
pop
imul
scas
xlat
cmp
push
loope
ret
inc
cmp
jmp
lds
push
int
lods
(bad)
enter
sahf
ret
adc
sub
mov
dec
mov
das
mov
pusha
lock
mov
psubsw
ja
mov
cld
push
ss
movs
pop
mov
call
push
test
movs
imul
push
data16
imul
fwait
push
ffreep
cmp
jg
test
xchg
xor
enter
in
mov
popa
adc
adc
cmps
sub
daa
pop
outs
es
xor
xor
mov
fwait
das
cmp
mul
fwait
loop
shl
leave
outs
mov
ds
add
stos
jecxz
mov
jno
int3
stos
inc
in
xchg
(bad)
test
es
(bad)
sar
adc
jns
movs
or
les
xchg
arpl
scas
imul
push
pop
scas
sbb
or
mov
xor
shr
sbb
mov
iret
outs
pop
std
leave
(bad)
push
sbb
stos
sbb
fs
in
test
jmp
mov
stos
lods
loopne
mov
lock
jne
inc
pop
out
data16
xor
scas
sbb
mov
data16
jns
xor
lds
push
out
pop
sahf
fisttp
dec
test
jle
loop
mov
popa
fst
and
lods
inc
stos
dec
and
into
sub
call
inc
xchg
sbb
and
fwait
das
int
jnp
inc
dec
inc
adc
cld
ins
aam
and
dec
sbb
adc
out
sub
repnz
je
dec
in
push
sbb
ins
(bad)
stos
bound
push
fucom
popa
popa
or
stos
pop
call
call
test
adc
enter
dec
test
cmp
es
fild
es
push
mov
and
ja
xchg
sbb
mov
inc
fcmovnbe
adc
or
push
pusha
scas
daa
rcl
pop
ss
and
push
pop
pop
cwde
or
xchg
jbe
inc
loope
hlt
and
mov
sub
cmp
adc
mov
ja
mov
repnz
jg
and
(bad)
or
test
fld
test
pop
xlat
call
sbb
movs
mov
push
jno
sbb
sub
and
push
repz
push
pop
mov
ins
int3
test
inc
scas
cmp
por
out
xchg
mov
shl
arpl
int3
bound
mov
mov
sub
sahf
lds
std
call
adc
je
jmp
push
mov
fidivr
push
cmp
dec
repz
arpl
jmp
into
or
fwait
add
out
cmp
shr
sbb
xor
mov
sub
mov
lods
add
leave
popa
xor
mov
push
pop
pusha
add
inc
call
mov
xor
in
xor
data16
int3
xchg
rol
sbb
loope
mov
retf
dec
and
mov
pushf
pop
test
aam
repnz
retf
enter
cld
jl
mov
or
jmp
dec
imul
jmp
xor
inc
jmp
pop
dec
es
test
or
rcr
xor
out
jno
iret
fst
sub
lds
gs
cld
sbb
jp
in
push
jecxz
pop
sbb
sub
fwait
xchg
and
mov
les
ss
add
and
(bad)
repz
and
push
mov
cwde
cld
inc
fnstcw
fimul
xor
test
js
mov
and
lods
cmps
push
es
push
es
mov
loopne
xor
pop
inc
cmp
sub
mov
mov
jecxz
movs
inc
pop
and
sub
push
sbb
push
icebp
jnp
xor
addr16
sub
add
mov
bound
push
int
fstp
push
dec
sub
fild
cs
fidiv
dec
mov
sar
cld
and
mov
sahf
inc
ja
or
add
fprem
in
aas
mov
stos
inc
neg
mov
push
jmp
aas
mov
pop
mul
mov
ds
pop
mov
fsubr
(bad)
xor
xchg
dec
adc
sub
int3
jns
or
jb
test
xor
movs
mov
cmp
call
dec
rcl
cmp
iret
(bad)
jne
and
mov
movs
add
mov
sbb
mov
jmp
das
lea
inc
cmp
popa
adc
sbb
jb
xchg
fadd
(bad)
in
rcl
jecxz
lock
mov
retf
push
and
xor
mov
sbb
retf
push
dec
cmps
sub
jp
(bad)
adc
mov
call
loop
push
sub
adc
sub
into
fcmove
jo
mul
mov
cmova
cmp
xchg
pop
call
inc
clc
ja
mov
out
jmp
jp
shl
cwde
mov
jo
popf
iret
in
inc
(bad)
dec
ja
in
test
scas
mov
jp
pusha
(bad)
mov
jns
cmp
gs
daa
not
(bad)
pop
mov
ss
adc
add
xchg
call
mov
(bad)
mov
ficomp
test
mov
in
pop
rcr
push
push
je
cmps
pop
retf
ins
add
shr
mov
out
pusha
mov
nop
mov
cli
fimul
jbe
jg
mov
adc
pop
popa
in
fwait
outs
sub
hlt
or
xchg
cmp
mov
js
pop
adc
push
dec
rcl
jp
imul
fimul
lods
jecxz
cmp
sub
jp
push
or
je
enter
mov
call
mov
cld
cmp
cmp
movs
push
xchg
iret
fsub
fmul
fst
and
loope
sbb
dec
jmp
add
mov
xor
mov
mov
into
aam
add
cld
sti
shr
and
add
xrelease
stos
popf
cmps
jl
outs
jne
cmp
xor
mov
outs
mov
inc
movs
dec
int
xlat
outs
dec
std
cmc
push
mov
inc
sbb
cmps
xor
sub
test
lock
arpl
frstor
inc
xor
mov
sub
jmp
pop
inc
iret
or
stos
fwait
rcr
or
int3
sub
and
pop
pop
jbe
jl
sub
xchg
les
test
sbb
jmp
pop
ror
sbb
movs
aam
pushf
rol
cmp
inc
out
fistp
mov
aaa
lds
mov
xchg
jns
lock
add
popa
repnz
sbb
in
mov
les
xchg
pushf
int3
and
jne
push
dec
mov
in
inc
xchg
cmp
ja
test
outs
je
push
fnstsw
imul
adc
adc
push
sbb
and
cmps
push
sub
in
shr
pop
fs
cmp
(bad)
popa
sub
or
int
push
(bad)
pushf
mov
cmp
stos
leave
arpl
addr16
stc
inc
rcl
fistp
cmp
mov
pushf
hlt
mov
outs
mov
std
inc
cmps
push
jmp
dec
push
mov
pop
pop
cs
cs
retf
pop
(bad)
lock
vpcomub
js
mov
and
ds
dec
test
aaa
out
sbb
jo
ret
dec
std
mov
icebp
cmp
repnz
jecxz
fnstcw
loop
cs
push
dec
jnp
fst
in
push
retf
push
test
xchg
adc
xchg
push
cmps
dec
and
addr16
jmp
dec
dec
pop
push
fistp
dec
retf
mov
fwait
or
xor
enter
fcomi
cmp
jne
les
pop
cdq
int3
and
and
jg
sub
test
xchg
pop
inc
or
lods
add
xlat
push
cmc
xor
xor
push
or
cmp
push
dec
pop
xor
cli
(bad)
pop
push
mov
mov
sbb
cmp
popa
jo
sahf
fmul
outs
inc
xchg
enter
mov
xchg
int3
sub
leave
fild
cmc
dec
inc
sub
hlt
adc
stos
and
fucomip
add
mov
or
mov
fstp
mov
fisub
sub
fwait
push
leave
fidivr
push
hlt
fs
dec
xchg
fidivr
cld
pop
mov
fidivr
mov
stos
cli
mov
jp
sbb
retf
jp
mov
(bad)
xlat
leave
cmp
aaa
gs
in
and
rol
jp
(bad)
cmc
and
mov
fld
sbb
fiadd
fstp
test
std
push
mov
cmps
sub
dec
enter
sbb
mov
jmp
jp
inc
lds
sub
jnp
dec
push
mov
push
dec
pop
movs
jle
ja
jmp
adc
inc
sbb
(bad)
mov
fstp
fwait
xchg
add
clc
and
push
loope
cmp
push
nop
test
mov
or
pop
and
mov
ret
xor
xor
std
lea
push
je
xor
xor
es
cmps
jecxz
popf
or
fdiv
fs
test
inc
inc
mov
jno
sbb
mov
(bad)
pop
(bad)
je
out
movs
mov
hlt
push
fadd
pop
and
in
iret
xor
xchg
jp
mov
sbb
nop
push
es
inc
inc
jmp
or
inc
in
test
scas
mov
mov
test
lds
add
xor
sbb
into
fadd
pop
add
add
mov
outs
add
aad
test
loope
in
jo
clc
or
rcl
sbb
adc
cmp
add
xor
pop
movs
out
pusha
inc
cli
and
aam
xor
fiadd
sub
out
adc
paddsw
and
mov
aaa
loop
pop
inc
loop
mov
dec
pop
dec
cmp
and
gs
adc
lods
adc
inc
shl
push
dec
stos
sbb
add
sti
ficom
aaa
fnstsw
hlt
lea
retf
xchg
sti
or
xchg
ins
and
fisttp
xor
scas
push
pop
das
dec
sbb
inc
(bad)
lock
loope
mov
movs
stos
xchg
push
jbe
pushf
lods
cmps
or
popf
sbb
inc
iret
cmp
push
pop
mov
xor
lock
inc
fadd
icebp
dec
cmp
add
ret
leave
mov
mov
iret
add
shl
jmp
out
enter
shl
mov
xor
dec
es
jl
push
int3
scas
xor
mov
mov
push
cs
mov
enter
xor
fs
imul
jp
xchg
push
jns
bound
fild
mov
aaa
sahf
cld
cmp
gs
sbb
sub
retf
int3
cmps
rcr
neg
loope
xlat
cwde
cmp
(bad)
mov
cmc
cmps
idiv
cld
or
sub
(bad)
(bad)
(bad)
fist
test
inc
arpl
pop
sbb
jmp
push
fbld
jmp
mov
cld
xor
jp
fnsave
inc
repz
(bad)
frstor
mov
das
dec
aas
invd
or
outs
test
add
fistp
cmp
shl
inc
scas
mov
jg
add
sbb
rol
rcr
rol
in
dec
inc
movs
mov
or
lea
daa
add
inc
lds
xchg
outs
mov
cdq
or
das
scas
push
inc
shl
or
jle
ins
add
addr16
ficom
xchg
fdivr
repz
out
cmc
xor
data16
sbb
lea
jmp
into
cmp
outs
adc
pop
vpsraw
mov
push
lods
push
in
mov
xchg
sbb
jns
pop
or
mov
loope
add
cs
cmp
in
fsub
pop
xchg
push
cld
or
test
dec
sub
pusha
add
cmp
mov
sub
inc
idiv
mov
sbb
jo
fdiv
jae
add
mov
inc
ins
shl
sti
and
mov
dec
add
sub
jmp
(bad)
and
pusha
call
hlt
sbb
and
pop
cmp
ja
stc
mov
mov
retf
ret
xor
mov
pop
cwde
in
scas
loop
dec
mov
ja
loop
xchg
movs
cli
and
call
gs
or
mov
xor
shl
sub
out
sbb
sub
mov
sub
stc
(bad)
sub
out
add
fistp
xor
aaa
sub
ja
stos
mov
(bad)
sbb
lahf
ror
pop
loop
(bad)
outs
gs
in
repnz
pop
in
fld
lds
inc
xor
jb
or
sub
popa
enter
int
mov
push
loope
jb
xchg
ss
fcomp
and
mov
xor
pushf
out
cmp
loopne
xchg
loopne
add
mov
add
pusha
pop
jnp
mov
mov
stos
cmp
and
sbb
dec
cld
push
cmp
adc
dec
popa
mov
sti
popf
arpl
add
lods
xchg
dec
push
retf
fidivr
mul
inc
add
pusha
lds
sbb
(bad)
or
xchg
fisttp
pop
lods
(bad)
mov
imul
nop
and
xchg
stc
mov
mov
rcl
imul
aas
sbb
das
test
fst
cwde
and
int3
cmp
mov
repnz
int
mov
cld
xor
jnp
mov
ja
jbe
cwde
es
out
dec
pushf
movs
cdq
sbb
xchg
cmps
cld
and
retf
stos
rol
jnp
dec
xchg
push
inc
push
js
scas
movs
inc
lock
and
lods
mov
icebp
mov
sub
add
push
xor
ss
loopne
shl
add
xchg
xchg
out
(bad)
dec
jo
je
out
and
jmp
jp
cmp
mov
out
arpl
pop
adc
lods
pop
ins
jmp
xchg
mov
scas
mov
test
cs
lahf
cli
retf
test
std
adc
and
sahf
mov
lock
mul
and
stc
dec
push
jns
(bad)
mov
jb
addr16
clc
idiv
cmp
bnd
adc
jae
mov
add
or
nop
ret
test
fwait
push
inc
push
cmp
mov
sbb
add
test
call
adc
push
jo
push
aad
mov
xchg
fstp
jl
loope
lods
imul
xchg
xor
stos
cmps
fbld
push
jg
dec
fmul
es
dec
(bad)
cmc
pop
mov
mov
repnz
mov
into
not
fcom
in
jbe
leave
mov
mov
mov
or
ret
jbe
js
inc
push
inc
jmp
adc
arpl
stos
jbe
fbstp
add
pop
cmp
inc
inc
push
fdivrp
mov
add
ins
mov
rol
in
xchg
xor
sbb
jns
push
dec
inc
mov
sub
mov
or
and
and
aam
push
mov
ss
cmp
cmc
shr
cmp
mul
arpl
mov
xchg
in
jle
mov
div
xor
call
pop
xchg
sbb
inc
sub
sbb
inc
in
rcr
(bad)
adc
mov
or
jo
cmp
mov
dec
xchg
or
clc
push
aas
out
or
lock
and
stos
sbb
rcr
mov
push
pusha
leave
cmps
push
jns
aam
test
pop
nop
cmp
cmp
ss
mov
pop
push
push
es
jno
nop
adc
addr16
ds
hlt
ins
push
test
add
lods
mov
jns
iret
xchg
mov
xor
pop
pop
shr
iret
test
fwait
inc
push
rcr
fimul
fsubr
stos
xor
aad
sahf
jmp
or
cmc
adc
dec
lahf
inc
mov
shl
mov
sbb
cmp
xor
push
int3
sbb
outs
and
fidiv
aas
in
mov
in
xchg
push
and
hlt
xlat
mov
jne
lock
sub
mov
fisttp
mov
dec
xor
adc
push
aas
and
sub
push
outs
mov
sub
aaa
push
or
sub
ror
add
mov
(bad)
fsub
adc
mov
lds
gs
idiv
jge
push
nop
repnz
mov
mov
ins
cli
out
jo
xor
icebp
nop
and
iret
sar
mov
pop
jbe
push
sub
stc
xor
xor
int3
pop
cdq
xchg
test
mov
cmps
loope
or
pop
jbe
icebp
lods
fsubr
shl
retf
jae
jge
fwait
mov
mov
cmp
xchg
int
lea
hlt
ftst
lods
mov
iret
sbb
push
ja
cmps
pop
imul
add
and
adc
add
sub
lock
cwde
dec
int
aam
std
inc
fxch
push
ins
adc
aam
in
inc
arpl
dec
xlat
mov
movs
les
adc
out
mov
loope
dec
xchg
mov
adc
adc
ss
sub
stos
lods
sub
movntps
jo
jle
push
xchg
test
in
add
mov
and
cmps
jmp
jmp
dec
aas
into
fucomi
xchg
fs
adc
xor
xchg
jbe
hlt
(bad)
mov
mov
xor
aas
mov
xor
push
mov
or
push
int3
das
loope
mov
xor
adc
mov
std
daa
mov
pop
stos
(bad)
fcomp
pusha
jb
jmp
dec
jmp
jno
or
into
jb
scas
nop
sbb
pop
and
aam
mov
push
scas
inc
ins
and
jge
pop
pop
mov
mov
cs
es
lea
push
push
pop
das
mov
jne
outs
xor
jb
loop
mov
ins
xchg
data16
adc
lods
inc
cmps
jne
rcl
pop
and
jo
inc
jns
mov
mov
dec
xor
push
int
dec
push
fwait
stos
xchg
push
loope
mov
mov
jbe
in
cmp
xor
dec
dec
mov
bound
lds
stos
xor
pop
sbb
fadd
xchg
inc
and
push
ret
jmp
adc
mov
fs
cs
xor
xor
shl
mov
cmp
(bad)
lahf
lock
pop
ss
cmp
cmp
pop
xchg
xor
cmp
adc
loope
imul
mov
mov
stc
in
in
int
stc
sub
push
cdq
xchg
mov
sub
cmp
jo
jns
mov
mov
hlt
fwait
popf
cmps
add
or
inc
lods
imul
popa
mov
jg
push
xchg
imul
jp
xchg
push
les
cmps
aam
sbb
ss
sbb
cmp
sti
mov
sub
pop
xchg
mov
pop
adc
sar
sbb
pop
shl
sub
stc
inc
cmp
push
sar
retf
jmp
adc
mov
pop
js
mov
jns
xchg
arpl
mov
aad
(bad)
jge
idiv
jns
arpl
push
shl
or
mov
sar
pop
or
mov
add
add
xor
adc
jno
inc
outs
mov
cmp
fld
mov
or
iret
fdiv
fld
test
leave
push
push
sub
bound
lds
push
sbb
xchg
inc
neg
dec
lods
xchg
jnp
cdq
fs
ins
push
pop
cmps
pop
add
shr
sub
dec
in
clc
jl
mov
and
aaa
jns
mov
pop
mov
leave
cmp
scas
int3
mov
cmp
ja
clc
xor
sahf
shl
mov
pop
xor
push
adc
xchg
push
mov
mov
dec
mov
dec
shl
mov
nop
mov
pop
pushf
push
bound
pop
ret
add
jp
xor
shl
sahf
cmp
mov
cmp
data16
iret
sub
xor
in
mov
mov
xor
pop
add
ret
xor
in
adc
jns
(bad)
or
mov
test
sub
jg
add
ja
(bad)
mov
outs
xchg
je
lea
cmp
dec
mov
xor
jg
adc
mov
(bad)
(bad)
push
fiadd
adc
clc
sti
lods
inc
int3
stos
xor
or
mov
xchg
js
stc
popf
ins
stos
repz
(bad)
jg
nop
scas
xchg
dec
or
push
mov
xchg
sub
cmps
push
dec
frstor
int3
outs
xchg
jb
loope
pop
and
push
mov
out
enter
ret
jo
int
jmp
(bad)
(bad)
cli
stos
les
sbb
push
or
sbb
cmp
xchg
out
mov
popf
inc
out
cmp
mov
sbb
or
cmps
jns
inc
dec
movs
inc
fwait
call
std
loop
ret
push
adc
inc
xor
(bad)
jg
aaa
int3
push
push
mov
dec
mov
sar
not
pushf
pop
sti
pushf
clc
cmp
cmp
aaa
mov
push
scas
pop
push
inc
mov
js
adc
mov
aas
mov
jbe
retf
outs
cs
out
iret
enter
rcl
jbe
mov
inc
mov
addr16
cmp
hlt
sbb
push
or
or
adc
ret
mov
xchg
cmp
sbb
xchg
int
jp
rcr
pop
rcl
lea
sub
mov
push
jae
pop
jns
pop
rol
aam
lea
dec
dec
mov
pop
cmps
dec
nop
push
jb
mov
shl
cli
iret
sbb
aad
inc
popa
or
xor
pop
test
adc
loope
push
cwde
mov
push
lods
adc
mov
xchg
aad
push
or
neg
push
or
call
fild
sar
pop
lea
scas
xchg
cmps
(bad)
es
mov
or
sbb
pop
mov
sub
(bad)
shl
jnp
scas
sub
jg
or
aas
out
cs
std
mov
adc
mov
adc
enter
(bad)
(bad)
fmul
mov
or
cdq
mov
push
mov
sbb
add
stos
push
sub
push
inc
stc
jge
or
or
jl
adc
pop
or
fnstenv
gs
lea
test
add
loop
inc
aas
or
inc
inc
fsubr
jne
xchg
or
test
loope
cmp
dec
lds
dec
add
icebp
lea
outs
ficomp
pop
cdq
stos
adc
mov
push
lds
xor
push
inc
repz
fnsave
aaa
jge
cli
cwde
adc
(bad)
sub
fisttp
pop
lock
adc
inc
lods
lods
inc
retf
cs
(bad)
jae
test
(bad)
sbb
mov
movs
pop
cli
or
(bad)
ins
aas
xor
xor
dec
rcl
cmp
push
ret
lea
push
add
cmp
rol
mov
xchg
dec
aas
(bad)
int3
push
pop
and
xlat
jno
in
daa
call
hlt
inc
mov
dec
inc
lds
push
mov
stos
scas
frstor
(bad)
icebp
mov
push
cmp
pop
imul
push
jne
sub
dec
push
in
sbb
pop
cmp
stc
and
outs
pop
imul
and
aas
cmp
ds
les
es
mov
pop
adc
sbb
sahf
sbb
push
jge
jmp
mov
outs
stc
and
ret
mov
std
rcl
fisttp
inc
push
add
xlat
in
pop
(bad)
push
add
ret
test
xchg
jp
pop
arpl
fstp
jmp
stos
out
add
leave
adc
add
rcl
xlat
cmp
ins
jge
jnp
add
cmp
call
adc
fnsave
stos
mov
push
add
dec
call
pop
jmp
neg
ins
pop
ds
fisub
sub
lods
mov
push
ret
es
mov
add
(bad)
mov
stc
enter
and
xor
sub
mov
pop
pusha
out
push
test
(bad)
out
mov
int
cmp
dec
mov
cmps
shl
ret
cli
sub
jae
adc
daa
mov
ins
mov
rcr
pop
cmps
dec
(bad)
es
call
xchg
iret
mov
mov
mov
ins
mov
pusha
sbb
ret
add
in
outs
add
sbb
loope
or
push
outs
stc
pop
cli
mov
pop
mov
mov
lods
cmps
cmp
mov
inc
adc
std
push
xor
pop
sbb
xchg
jge
xor
xor
fcomp
popf
mov
sar
outs
add
rcr
dec
popf
aad
inc
xchg
xor
pop
out
mov
add
xor
mov
mov
aaa
pop
mov
xchg
adc
cmp
adc
xchg
xor
mov
(bad)
push
sub
xor
push
pushf
popa
daa
lahf
daa
(bad)
mov
mov
mov
(bad)
adc
mov
int3
dec
pusha
imul
loopne
sbb
cmp
(bad)
push
fmul
cmp
add
mov
mov
aaa
les
ss
jae
out
ja
in
xchg
out
ds
jle
(bad)
adc
adc
sub
(bad)
jp
mov
or
add
mov
mov
sub
sub
enter
div
loop
xchg
int3
adc
sub
scas
cld
fisttp
gs
stc
xchg
mov
pop
and
mov
cli
movs
(bad)
aad
idiv
dec
cwde
and
loope
inc
push
and
jmp
lods
sbb
test
out
shl
(bad)
sbb
pop
sub
in
xchg
adc
mov
cmp
dec
cmps
icebp
inc
cdq
cmp
mov
imul
sbb
mov
jmp
ds
stos
push
cs
xlat
mov
fldenv
add
sbb
mov
push
push
push
imul
sub
movhps
sub
cli
stos
sub
mov
lods
fwait
pop
ins
(bad)
popa
sti
mov
mov
inc
inc
mov
sub
add
cmp
adc
rcl
ins
cmc
xchg
(bad)
jp
in
push
jmp
ins
dec
addr16
add
test
jns
enter
popf
jmp
jnp
aam
(bad)
out
add
inc
push
lahf
jecxz
fldcw
and
inc
sub
xchg
ins
ss
mov
loop
icebp
cdq
in
jbe
cmp
xchg
fucomip
fldcw
sub
out
cs
in
jle
cmp
cli
jg
pop
xor
ja
or
jmp
pop
adc
fwait
stos
xor
outs
imul
test
cmp
jecxz
fiadd
pop
xor
xchg
cld
cdq
xchg
imul
dec
xor
out
xor
stos
minps
mov
mov
shl
out
pop
(bad)
movs
fucomi
jmp
pop
jo
or
xchg
stos
iret
push
aaa
nop
neg
pop
cld
sbb
add
jo
mov
mov
popa
outs
cmp
or
leave
retf
or
cmc
xor
cmp
loop
inc
clc
out
js
loopne
inc
bound
xlat
retf
retf
inc
push
xor
xchg
(bad)
dec
add
inc
mov
in
aad
xchg
in
push
inc
adc
cmp
xlat
push
test
mov
jge
jg
mov
ds
push
pushf
imul
xchg
fdiv
cmp
mov
shr
jg
xchg
jle
push
in
cmp
popa
jns
jmp
sub
jmp
lods
dec
sub
out
cmps
icebp
fidivr
mov
je
test
push
(bad)
arpl
bound
test
mov
pop
call
xor
mov
out
or
scas
aas
js
and
test
mov
stos
pop
xchg
xchg
inc
pop
popa
sbb
push
ret
dec
loopne
cwde
test
call
xchg
je
fisubr
xor
sub
sbb
addr16
packssdw
cmp
dec
xchg
and
in
in
in
add
mov
push
fcmovu
loopne
mov
lea
arpl
sub
add
data16
dec
shl
out
(bad)
cwde
sbb
popa
(bad)
fimul
sbb
pmaxsw
jl
pusha
fs
xchg
xor
sbb
add
outs
mov
ss
std
movs
loop
cmps
jmpw
jne
mov
lahf
in
sahf
jp
aam
jnp
mov
les
fs
cmp
fcom
jmp
(bad)
pop
popa
cli
dec
scas
dec
in
inc
cmps
mov
(bad)
cdq
iret
fdiv
ret
lods
pop
scas
inc
or
ins
loop
scas
xor
xchg
inc
out
test
js
pop
and
jmp
(bad)
jg
xor
test
repnz
cmp
jns
mov
xchg
sub
sahf
movs
mov
sbb
xor
pop
lahf
push
inc
mov
je
ins
movs
push
leave
and
jecxz
rol
cdq
cli
pushf
mov
dec
sti
inc
out
mov
in
mov
cli
inc
xchg
or
jo
pop
push
jle
or
movs
mov
push
out
mov
mov
and
dec
shl
outs
stc
aam
mov
push
je
fisttp
cs
xchg
repnz
xchg
sbb
jns
mov
daa
push
pop
sahf
not
jo
or
inc
retf
add
mov
mov
add
inc
pop
pop
sbb
sbb
cdq
dec
dec
mov
mov
fld
movs
cli
test
inc
push
idiv
adc
stc
lods
leave
pushf
daa
stc
push
popa
stc
jb
mov
and
mov
xor
or
push
push
dec
movs
sub
dec
sbb
int3
iret
mov
sbb
clc
push
call
xor
mov
aam
push
add
add
mov
add
aaa
cmc
rcr
int
gs
pop
pusha
sub
ror
cli
fs
nop
pop
loope
xor
mov
fwait
mov
or
out
cwde
mov
sub
push
xor
sub
xor
int
push
xchg
and
push
stos
push
jle
popa
jmp
pop
push
gs
arpl
mov
mov
leave
ss
mov
pop
mov
jo
js
lods
aad
stos
jl
xor
mov
cmps
pop
adc
cwde
sub
pushf
jge
pusha
xor
and
jmp
add
cwde
adc
jb
dec
xchg
xlat
xchg
mov
xchg
and
arpl
fmulp
das
xchg
retf
cld
test
mov
out
sbb
push
js
lds
ins
neg
push
scas
inc
pop
(bad)
shr
ud0
pop
add
xor
jg
sub
in
mov
les
xchg
mov
icebp
dec
clc
cmp
lock
ins
add
cs
mov
ret
add
add
sub
in
lods
out
sub
add
call
rol
imul
inc
test
imul
cmp
into
mov
or
xchg
pop
fs
cmp
inc
xor
or
ja
lods
push
hlt
mov
ins
scas
(bad)
jmp
stos
loop
retf
fbstp
mov
loope
aas
adc
add
sbb
sub
mov
pop
xor
imul
gs
jbe
push
int
jp
sti
and
aam
aaa
movs
pop
add
xor
int
push
(bad)
rdmsr
sub
dec
dec
pop
fnstsw
mov
pop
adc
inc
and
add
mov
repz
lock
frstor
sbb
pusha
dec
stc
mov
jl
xchg
cdq
dec
pop
add
fst
pop
inc
push
dec
sub
mov
leave
sub
jle
fadd
add
aas
shl
ins
cld
dec
mov
fst
sbb
jb
jp
es
bound
mov
cwde
jnp
add
fist
add
ins
mov
enter
pop
adc
cmps
mov
push
les
movs
mov
xor
sbb
mov
adc
xchg
addr16
shl
mov
dec
jno
mov
std
adc
mov
jns
mov
pop
retf
scas
sbb
push
or
aam
sub
and
out
test
test
jns
pop
(bad)
sbb
inc
movs
scas
cmp
mov
daa
pop
in
outs
push
icebp
cmp
push
loopne
push
hlt
loop
adc
xchg
mov
pop
cmp
jge
or
cmp
outs
retf
mov
xor
cmp
adc
mov
sub
dec
add
stos
dec
(bad)
out
lds
ja
jmp
ds
and
aaa
je
call
push
xor
(bad)
loope
xor
adc
sbb
hlt
inc
sbb
xchg
sub
xor
push
dec
xor
add
and
pusha
fsub
xor
popf
mov
pop
add
(bad)
repz
cmp
leave
mov
xchg
aam
mov
mov
dec
push
push
xchg
pusha
stos
neg
cld
add
lods
lock
jnp
pop
clc
pop
xchg
push
jo
cmp
xor
in
(bad)
fldcw
mov
inc
cld
mov
mov
mov
pop
mov
ss
dec
aam
ret
cmp
pop
jnp
test
cmp
dec
dec
or
ret
xchg
sub
or
aad
add
push
lock
loopne
pushf
xor
push
inc
jbe
jnp
in
cdq
stos
push
jecxz
sub
fwait
cmp
xor
jl
cs
adc
dec
das
sub
ret
xchg
xor
jns
mov
sbb
ret
pusha
mov
mov
mov
pop
popa
sbb
pop
aaa
push
cld
in
fimul
xchg
sti
mov
push
xchg
js
xchg
adc
das
xlat
imul
xchg
mov
dec
movs
nop
jle
jnp
test
cmp
push
dec
aas
add
jl
mov
add
inc
dec
sbb
sub
movq
mov
aaa
dec
ds
xor
aaa
inc
ret
adc
fdiv
cld
cmc
xchg
add
mov
rol
push
loop
mov
mov
jle
lea
inc
pop
push
movs
cli
in
xchg
ficomp
pop
pop
enter
dec
jmp
adc
in
jno
std
or
jmp
neg
in
pop
ret
cmp
pop
icebp
adc
adc
mov
cdq
pop
cld
dec
fistp
push
ror
imul
pop
nop
jmp
aaa
cmp
lods
xor
inc
push
pop
retf
fisttp
cmps
adc
cmc
pop
sub
add
sar
fldcw
retf
ja
cdq
icebp
jmp
cmp
cli
stc
mov
pop
dec
fwait
int
jmp
sub
test
or
inc
mov
xor
(bad)
or
pusha
movs
fwait
test
jne
xchg
or
ret
test
xchg
sbb
iret
pop
and
adc
dec
call
sub
and
les
xor
test
ins
xor
fnstsw
xchg
dec
(bad)
sbb
cmp
jo
cwde
pushf
mov
call
mov
out
jmp
iret
cmps
xchg
jecxz
adc
add
cmps
rcr
pop
inc
ss
add
sub
sbb
xchg
or
test
or
leave
jl
sub
aad
cmps
jae
stos
jle
jecxz
sub
dec
add
jg
(bad)
xchg
push
movs
jne
int3
movs
or
out
stos
push
aad
lds
dec
xchg
int
outs
mov
sbb
or
js
adc
shr
aas
sbb
and
and
inc
pop
mov
bound
adc
loopne
mov
loopne
in
jns
mov
stc
push
jl
xor
adc
jno
lods
(bad)
rcr
xor
add
std
push
int
icebp
lds
stos
pop
dec
mov
rsm
arpl
mov
outs
movs
ins
push
cmp
faddp
sub
pop
and
inc
cmp
dec
cli
push
pop
retf
sbb
jmp
inc
adc
mov
add
inc
cs
xchg
add
xchg
in
out
test
lods
xor
sub
cwde
mov
call
fnstcw
(bad)
outs
idiv
imul
js
push
pop
mov
lods
lods
jmp
xor
add
(bad)
pop
jge
mov
(bad)
dec
retf
mov
jecxz
in
mov
jg
mov
sub
cmp
mov
or
push
jg
stos
pop
test
cmp
push
(bad)
sbb
leave
adc
call
cwde
xchg
pop
dec
mov
or
dec
sbb
sub
inc
outs
sbb
ja
aad
stc
jo
add
mov
xchg
lock
and
pop
lods
(bad)
xor
dec
shr
sbb
outs
js
cmp
leave
inc
mov
mov
xchg
out
or
ret
sbb
xor
inc
repnz
xchg
inc
pop
les
xchg
je
cmc
aad
xchg
sbb
push
cpuid
mov
fcmovnb
add
rcl
mov
jmp
gs
loope
and
push
clc
aas
sbb
jg
push
mov
sub
push
(bad)
in
push
cmp
and
mov
popa
mov
in
mov
inc
cmps
dec
push
xlat
sub
ud2
and
inc
jnp
xrelease
in
movs
aaa
sbb
fdiv
add
cs
sub
push
test
retf
jns
push
pop
fs
hlt
jns
push
cmp
jno
js
les
arpl
jmp
fldenv
nop
test
and
call
sbb
mov
xchg
popf
mov
mov
mov
loope
sub
nop
jecxz
xchg
add
or
outs
and
sub
sbb
xchg
sub
push
ror
jne
add
adc
lock
push
js
add
call
jmp
js
pusha
xor
lea
jbe
rol
cmp
jecxz
add
enter
sub
test
and
cld
rcl
sub
dec
setle
mov
out
in
mov
fwait
arpl
test
mov
add
jne
mov
(bad)
jmp
stc
xor
daa
cmc
repz
mov
adc
jle
cmp
sub
xlat
add
sub
frstor
cmp
pop
fsub
ss
cmc
sbb
cmps
xchg
frstor
pop
jmp
sbb
mov
ins
or
mov
pusha
movs
dec
push
mov
cmps
fisub
mov
movs
jmp
loopne
bound
add
sub
ins
cmp
retf
lea
adc
sub
inc
int3
fs
jno
adc
test
mov
repnz
sub
push
xor
push
icebp
inc
lea
sbb
push
leave
call
movs
sbb
xlat
rcr
out
test
cmp
shl
push
ja
pushf
jbe
add
in
mov
adc
add
xchg
push
gs
dec
movs
mov
daa
mov
cmp
lds
imul
xor
inc
mov
(bad)
dec
bound
rcl
and
mov
mov
sub
popf
outs
jns
add
in
icebp
sub
scas
and
retf
in
fs
jo
out
xor
in
ins
imul
push
push
ja
sub
jle
cs
xchg
aam
inc
test
push
fisttp
fisub
aas
scas
scas
fldcw
or
mov
cmps
mov
or
cwde
into
dec
jg
xchg
jb
mov
add
fs
out
outs
lea
lea
mov
mov
inc
cwde
dec
scas
std
adc
jbe
je
in
mov
cmp
hlt
outs
imul
outs
loopne
xchg
dec
mov
movs
leave
add
xor
loop
cmps
jns
or
adc
cld
xchg
out
shr
or
loop
cpuid
xor
push
mov
adc
pop
sbb
(bad)
cmp
and
push
aam
cmps
gs
cli
adc
cmps
mov
ud0
push
dec
ret
cwde
cmc
ds
ud1
(bad)
(bad)
jle
inc
mov
pop
adc
(bad)
pop
lods
jg
(bad)
out
jae
loope
retf
inc
fmul
ror
fidiv
hlt
jae
outs
(bad)
in
mov
xor
repz
cs
pop
adc
push
cli
shl
gs
mov
inc
pop
cmps
pop
shl
arpl
ret
cmps
pushf
mov
fs
adc
push
sub
cli
aas
loopne
iret
push
xor
and
clc
xchg
cmps
jmp
rcl
and
lds
inc
les
lods
bound
ja
addr16
and
div
jae
jmp
(bad)
pop
adc
pop
push
and
dec
into
push
pop
jne
dec
sbb
xor
mov
call
jne
mov
sbb
push
pop
rcr
(bad)
sub
mov
pop
enter
leave
pop
fwait
int3
ja
push
jl
mov
hlt
pusha
add
adc
sbb
popa
add
xchg
mov
xchg
pushf
and
xchg
test
push
jg
fst
xchg
call
push
nop
cmc
inc
repnz
in
mov
inc
imul
pushf
mov
rcr
cmp
sub
adc
sahf
scas
pop
enter
cmps
or
stc
wrmsr
inc
sub
sahf
fsub
xlat
or
pop
call
js
xchg
cmp
or
dec
xchg
sbb
pop
jmp
icebp
loop
mul
out
cld
fnstsw
outs
fmulp
clc
fldcw
cmp
add
and
fmulp
pop
cdq
push
retf
push
jge
lods
mov
leave
loope
sbb
fild
xor
pop
xchg
ficom
shl
mov
mov
push
fwait
adc
fwait
sbb
mov
pop
gs
xor
scas
call
mov
adc
or
bndstx
push
addr16
arpl
push
sbb
pop
(bad)
dec
add
lea
inc
xchg
inc
pop
in
xchg
movs
adc
mov
lea
call
add
add
inc
mov
mov
fwait
leave
or
out
push
jp
mov
fcom
push
je
dec
sub
adc
push
adc
cdq
cmp
jo
dec
out
jle
mov
push
scas
push
mov
cmp
adc
jmp
jno
xchg
popa
xchg
pusha
and
add
dec
mov
xchg
test
pop
aaa
mov
mov
cmp
jmp
sbb
sub
lock
mov
packssdw
mov
and
dec
int
dec
jecxz
dec
mov
jae
push
aas
hlt
xor
push
lea
out
xchg
dec
jmp
adc
scas
fist
add
clc
xchg
lock
or
push
leave
ret
dec
jmp
cdq
and
clc
sbb
cli
mov
ror
or
sub
imul
cmp
shr
push
push
(bad)
mov
mov
sub
or
fsub
adc
(bad)
rsm
add
and
(bad)
popf
int3
into
out
test
fisttp
mov
out
gs
fsub
dec
iret
xor
mov
or
dec
jp
pop
addr16
(bad)
ss
fcom
jmp
ficom
and
cmps
mov
dec
popf
enter
mov
ins
sub
mov
fiadd
mov
into
dec
pop
sahf
xchg
aam
in
cmp
(bad)
pop
fwait
mov
lods
xchg
and
push
sub
icebp
inc
bound
in
jbe
jg
or
inc
xchg
and
fs
das
inc
xchg
inc
fdivr
mov
in
movs
arpl
jge
or
mov
jg
outs
rcr
jle
push
daa
arpl
xchg
add
cmp
dec
cmps
pusha
sar
test
cmp
pop
sub
imul
jle
nop
or
xchg
jge
xlat
pop
inc
sbb
jp
push
add
sbb
cmp
(bad)
sub
push
lds
push
adc
outs
scas
sub
xchg
mov
int
lods
push
fisubr
and
(bad)
into
rol
mov
jg
lea
xchg
lods
adc
(bad)
ret
fisubr
push
popa
ja
sub
stos
cmp
aaa
jmp
and
xor
in
mov
jl
ds
(bad)
sub
add
test
jecxz
xor
sub
mov
sub
lea
je
cdq
ds
mov
jmp
(bad)
push
inc
mov
xchg
imul
pop
inc
dec
mov
inc
push
inc
push
or
movs
sub
imul
pop
push
les
rcl
aas
mov
jns
jmp
sub
cmp
call
mov
mov
jmp
push
movs
jge
and
add
pop
scas
jae
pushf
cmc
sub
aas
push
outs
push
cmp
cld
mov
aaa
sub
mov
retf
and
dec
(bad)
push
into
mov
mov
xchg
cmps
pop
push
ins
push
and
lds
mov
dec
aad
out
retf
push
mov
scas
inc
jne
mov
fdivr
sub
cmp
retf
jge
leave
in
imul
stc
fsubr
push
cmp
adc
ret
sub
nop
(bad)
lock
push
pop
mov
pusha
xchg
sar
das
movs
sbb
cli
push
jg
pop
fisttp
add
sbb
dec
ficom
xchg
fwait
inc
call
or
ficom
mov
jns
dec
mov
dec
and
sbb
leave
lahf
ds
repz
or
loop
dec
idiv
fisttp
and
cmc
or
(bad)
push
jns
push
out
imul
and
ret
out
or
movs
gs
pop
jl
jmp
mov
out
outs
dec
adc
iret
cli
in
dec
popa
cld
aaa
clc
rcl
sbb
mov
xor
push
inc
ret
sti
aas
movs
cmp
ret
or
ffree
out
adc
cmp
out
out
xchg
lock
loop
(bad)
mov
out
xchg
pop
jae
pop
inc
mov
cmp
mov
out
jno
in
fs
mov
xor
add
push
sub
retf
pop
pop
(bad)
hlt
mov
sbb
and
xor
xor
mov
les
and
jge
or
scas
sar
ins
push
and
ds
out
pop
in
in
xlat
push
icebp
stos
outs
test
and
cld
ss
(bad)
shl
jnp
xchg
xlat
fucom
push
div
inc
adc
xchg
sub
xor
outs
xor
sbb
sahf
and
sbb
pop
int
jns
scas
jecxz
fwait
sub
and
pop
cmp
dec
add
cli
sbb
pushf
push
pop
mov
(bad)
and
loope
sbb
repnz
jnp
jo
push
and
jmp
push
fst
das
xor
adc
data16
repnz
lds
push
push
popa
and
icebp
(bad)
das
jmp
mul
aas
dec
fldenv
fnstcw
add
pushf
and
ins
and
enter
or
ss
inc
mov
mov
adc
fadd
or
das
xor
jle
push
add
mov
outs
xor
mov
add
(bad)
push
mov
and
pop
push
add
mov
fs
sbb
scas
scas
ja
(bad)
das
xchg
out
pusha
or
aaa
adc
sbb
ins
scas
(bad)
push
and
jmp
lds
test
fs
mov
pop
and
mov
jbe
and
leave
int3
lea
xchg
retf
jg
add
xor
push
int3
int
pusha
ja
cmc
mov
and
xor
xor
loop
iret
sbb
mov
fwait
mov
push
inc
jl
mov
add
arpl
ja
ins
aam
pop
pusha
(bad)
mov
sub
sub
(bad)
popf
or
movs
cmps
mov
mov
push
dec
dec
and
inc
fisttp
sbb
add
sub
jne
add
sar
in
fstp
xor
push
adc
shl
xor
xchg
push
sub
xlat
xor
out
lock
mov
mov
mov
repz
setnp
push
ja
cdq
clc
fstp
mov
jns
xchg
cmp
inc
adc
jl
dec
ror
inc
mov
jmp
scas
xchg
stos
and
inc
sahf
aaa
movs
cs
cmp
test
sbb
(bad)
jns
loopne
retf
int
inc
movs
sub
pop
xor
push
sbb
lock
push
sbb
adc
sub
xchg
mov
rol
and
inc
call
sub
sub
pop
push
js
call
pop
cmp
xchg
sbb
lea
xlat
dec
mov
cmp
pop
and
xor
cmp
adc
call
jb
mov
js
jno
test
in
aaa
aaa
adc
scas
push
dec
pop
out
repnz
and
retf
sbb
push
clc
mov
fdivr
inc
call
add
daa
xchg
jb
dec
pop
dec
or
lahf
cmps
mov
sbb
xchg
scas
jg
pushf
sub
sbb
sbb
sbb
push
ja
and
rcl
out
add
fs
adc
xor
pusha
jmp
mov
xchg
call
mov
repnz
stc
cmp
nop
lock
pushf
ret
sbb
xchg
out
fs
test
pop
fisub
rol
sub
pop
sbb
fs
movs
pop
inc
or
daa
mov
xchg
jns
dec
outs
call
into
test
add
pop
clc
out
hlt
jg
outs
stc
idiv
mov
repnz
cwde
cmps
and
inc
sbb
inc
ror
mov
out
and
je
jl
stos
ret
pop
test
clc
sub
(bad)
jp
sti
cli
add
jl
jmp
sub
iret
mov
push
sbb
dec
js
stc
jp
cmp
pop
mov
sub
inc
mov
sub
fdivr
out
out
cmp
sahf
mov
cmps
imul
std
mov
cmp
jmp
add
mov
shl
cmps
mov
adc
push
pop
jecxz
dec
xlat
stos
loop
pop
div
xchg
adc
push
mov
xchg
ss
lock
adc
xchg
or
mov
(bad)
aad
push
push
rcr
jl
bound
push
xor
and
cmp
cmp
fidivr
(bad)
fdivr
jecxz
lods
dec
shr
stos
mov
push
pop
inc
sbb
stos
test
sub
xor
jo
scas
add
out
push
into
jo
sbb
sbb
mov
mov
retf
mov
rep
sbb
in
jle
sti
pop
pop
ret
inc
jnp
sub
sbb
dec
jne
cld
xchg
addr16
sbb
fwait
cld
mov
in
movs
dec
add
inc
mov
jmp
or
inc
pop
push
push
xor
mov
rcr
imul
or
mov
call
mov
(bad)
out
pop
dec
pop
cld
into
cld
jno
jbe
cmp
jne
xchg
lods
sahf
push
inc
out
in
lahf
mov
jnp
mov
jnp
sbb
lods
or
bound
push
and
sub
adc
xor
jp
push
lahf
jl
push
mov
aad
and
inc
sbb
shl
fild
sbb
cmp
pop
push
in
jge
xor
cmp
inc
loop
aaa
fsubr
sbb
(bad)
daa
jmp
ins
loopne
pop
cmp
cld
call
enter
stos
adc
int
xchg
scas
sti
ficomp
int3
shr
xor
fwait
xchg
and
mov
fs
jnp
test
mov
fadd
pop
scas
jp
dec
push
xchg
imul
pop
push
ret
stos
loopne
cmp
sub
sbb
scas
dec
mov
int
mov
gs
les
ficom
call
scas
scas
fistp
xchg
in
icebp
scas
and
movq
mov
inc
inc
add
das
cli
or
mov
aas
(bad)
xchg
mov
neg
mov
repz
dec
cmp
sub
fldcw
mov
pop
cmc
or
xchg
cmp
jnp
fiadd
sbb
ficom
imul
mov
aad
xor
mov
std
or
js
addr16
das
push
push
loope
lods
and
and
cs
mov
rcl
mov
add
mov
pop
daa
mov
mov
pop
cmc
push
xchg
ret
inc
lds
mov
das
xchg
in
cwde
push
clc
add
lea
ret
jmp
in
push
adc
or
cmp
in
sti
mov
mov
mov
jno
std
pop
xchg
ss
pop
loopne
and
and
movs
jecxz
and
(bad)
enter
ja
lahf
mov
mov
out
dec
dec
leave
pop
pop
inc
iret
or
fdiv
nop
jne
mov
inc
or
imul
mov
rcl
mov
outs
jnp
add
jae
push
push
xor
mov
stc
mov
sbb
push
in
xchg
push
dec
dec
jno
ins
outs
inc
push
xor
sbb
icebp
jbe
cmp
jo
pushf
daa
lods
dec
ror
xchg
dec
or
add
hlt
mov
std
psraw
cmp
pop
push
mov
ins
dec
push
ss
or
rcr
test
xchg
dec
xor
test
jnp
stos
mov
sti
stos
repnz
js
loop
dec
je
and
adc
jo
in
sub
loope
and
imul
mov
test
mov
cmp
and
data16
(bad)
ficom
pop
imul
or
sub
retf
test
cmp
clc
sub
loopne
mov
push
iret
push
jne
(bad)
cmp
dec
xchg
inc
fwait
jp
pop
int
movs
movs
ficom
es
pop
jl
dec
push
adc
leave
call
(bad)
shl
sti
add
idiv
into
imul
addr16
pop
outs
and
xlat
in
pop
mov
sub
repnz
(bad)
push
retf
or
jmp
test
(bad)
iret
imul
int3
test
mov
or
dec
not
adc
sbb
es
dec
(bad)
out
sbb
xchg
xor
push
mov
call
jecxz
add
in
xchg
int
mov
ds
ja
hlt
repz
mov
mov
and
cmp
sbb
aad
push
outs
outs
xor
lods
xchg
and
cmp
dec
es
add
data16
outs
in
inc
add
cmc
(bad)
enter
sbb
test
mov
fcom
pop
out
push
mov
inc
cmp
push
inc
cmp
lds
enter
pop
or
dec
mov
pusha
jmp
sub
shl
dec
cmps
push
ja
mov
js
push
mov
cmp
xor
retf
rol
test
jmp
pop
neg
es
fisubr
adc
(bad)
xor
jbe
sahf
mov
ret
movs
inc
jmp
clc
xor
pushf
and
repz
push
addr16
dec
aad
imul
adc
gs
mov
int
dec
dec
jmp
popa
mov
mov
lea
scas
xor
lods
out
pop
repz
retf
xchg
call
jle
xchg
jp
mov
scas
enter
or
enter
test
movs
lods
cmp
nop
xchg
(bad)
inc
adc
or
cwde
inc
fcomp
inc
add
cmp
ret
dec
jnp
in
pop
xor
loope
or
repz
shl
pop
mov
jmp
dec
imul
and
arpl
xchg
cmps
fld
push
mov
shr
mov
mov
xor
mov
xcrypt-ofb
cmps
test
enter
mov
jo
xor
mov
sbb
xlat
(bad)
(bad)
mov
pop
fmul
ins
xor
jns
sub
xor
jle
mov
daa
xchg
es
push
ins
int3
outs
arpl
adc
ja
jae
jmp
shr
sbb
push
stc
cmc
push
cmp
(bad)
into
aam
out
jae
pop
in
add
push
or
mov
pop
mov
je
call
adc
pusha
mov
in
cmps
dec
inc
add
mov
mov
xchg
hlt
add
fdivr
push
fldz
and
pop
or
in
pop
aas
retf
sahf
cmc
adc
stos
aam
lods
mov
push
push
retf
xchg
stc
inc
aam
mov
out
xor
push
add
(bad)
xchg
jbe
out
stc
inc
iret
mov
xor
dec
sub
mov
push
dec
push
mov
js
hlt
push
adc
test
int3
repz
data16
mov
mov
push
push
ins
xchg
shl
rcr
loope
and
(bad)
jns
mov
mov
sbb
dec
dec
sub
stos
mov
add
sbb
xchg
les
rcl
pop
cmps
xchg
dec
out
cli
push
nop
std
popa
mov
xor
sbb
mov
imul
xchg
(bad)
(bad)
or
ds
pusha
(bad)
fcomp
or
sub
and
pop
fwait
sub
pusha
loop
(bad)
mov
int
nop
mov
pop
mov
repnz
dec
adc
xchg
into
rol
or
sbb
cmp
xor
shl
icebp
cmp
sub
cmp
xor
fadd
test
ins
call
imul
xchg
mov
sbb
xor
shl
addr16
adc
lds
and
sbb
cmp
jmp
xor
scas
sbb
shr
das
cs
sub
mov
fild
sbb
add
xor
mov
and
enter
out
cwde
sub
mov
cmp
pushf
jno
mov
add
jl
cmp
inc
xchg
jne
cdq
lods
mov
sub
in
(bad)
ror
mov
dec
push
push
mov
ins
call
sub
push
repz
inc
jge
out
jo
pop
mov
std
jno
and
cmp
mov
adc
xchg
mov
repz
std
sbb
mov
jnp
inc
addr16
ror
fadd
or
and
sahf
sub
mov
test
es
inc
mov
mov
sti
retf
pusha
cmp
sub
jle
fcomp
cmp
scas
(bad)
cli
mov
sbb
mov
cmp
sbb
sub
test
movs
divps
test
je
loopne
or
stos
push
pop
jl
int3
ins
adc
xchg
test
push
adc
push
shl
xor
scas
push
pop
adc
or
mov
ret
test
push
sub
inc
xchg
dec
sti
sub
push
push
cmp
jp
nop
dec
inc
(bad)
sti
hlt
(bad)
fisub
test
fcmove
sbb
xchg
outs
push
or
jmp
call
iret
aad
and
xchg
mov
pop
dec
jp
dec
jecxz
aaa
enter
retf
xor
cld
lahf
jle
xchg
mov
mov
shr
pop
ficom
movs
aad
mov
scas
(bad)
bound
in
push
xchg
leave
das
(bad)
or
popa
xor
shr
or
pop
xchg
in
aad
jmp
mov
mov
outs
push
inc
jo
add
fstp
rol
stos
mov
mov
pop
repnz
ja
inc
sbb
mov
cdq
mov
(bad)
cmp
frstor
mov
cmp
repz
(bad)
pushf
push
mov
push
mov
fld
je
loop
neg
sbb
push
cs
inc
jmp
shr
aad
cdq
add
xor
adc
mov
fsubp
call
repnz
add
push
xor
cmp
xchg
jns
not
xor
daa
and
in
shl
mov
mov
or
or
pop
dec
push
daa
sub
mov
repz
and
fstp
cmp
dec
loope
dec
push
not
fadd
gs
cmp
add
imul
dec
es
push
jle
test
adc
sbb
jno
mov
cmps
xor
mov
iret
out
jg
xlat
push
cdq
jle
or
stos
in
daa
push
mov
cdq
sbb
addr16
and
(bad)
out
cmp
mov
out
xchg
mov
fimul
das
shl
fwait
push
or
xchg
movs
rcl
sar
repnz
add
int3
mov
sub
cmp
adc
push
xchg
xchg
xor
sti
loop
outs
or
and
sbb
push
mov
and
rcl
or
and
mov
rcl
push
mov
push
loop
std
aad
push
mov
mov
push
scas
aam
outs
rcl
sub
mov
jge
pop
imul
dec
div
mov
and
popa
rcr
cmps
dec
fcom
stc
sub
sbb
cmp
int3
inc
cmc
js
add
nop
lods
mov
jecxz
retf
xchg
xor
adc
arpl
push
test
std
inc
sbb
(bad)
inc
mov
test
adc
cmp
test
dec
test
pushf
ror
dec
sub
(bad)
bound
and
fisub
in
test
pushf
imul
int
lds
cmovs
ss
mov
pop
jns
adc
fldenv
add
repnz
adc
adc
cwde
cmp
out
jmp
stos
xchg
dec
mov
mov
(bad)
out
jns
mov
sbb
push
or
sar
mov
push
and
stc
or
pop
xchg
pop
push
pop
inc
pop
sbb
lds
dec
push
mov
xor
mov
or
in
aas
jl
push
das
sti
aaa
out
pop
cmps
outs
popf
push
dec
xor
sbb
xchg
jle
repnz
(bad)
lds
in
aas
inc
jne
int3
adc
xchg
sbb
dec
adc
add
push
cli
and
add
cmp
cmp
pop
xor
xor
mov
and
mov
mov
addr16
push
pop
sbb
dec
xor
lahf
xchg
ret
sub
loop
pop
push
data16
sbb
add
les
push
push
cwde
call
imul
std
and
popa
bound
fsubr
mov
jbe
and
jns
sub
fisttp
shl
inc
inc
dec
adc
push
push
xor
addr16
out
pop
push
jb
add
scas
jb
nop
add
and
push
push
sub
xchg
pusha
imul
cld
into
outs
mov
js
pop
sub
cmp
xchg
out
jp
dec
call
push
and
ror
pop
ret
xor
jle
mov
out
enter
das
mov
cld
sti
mov
popf
push
ja
test
sahf
jb
push
jnp
xchg
addr16
sbb
add
cmps
xchg
cmps
or
mov
loope
jo
adc
or
xlat
sub
icebp
jns
mov
(bad)
mov
sbb
cmp
mov
rcl
sub
xchg
cwde
sub
mov
jmp
mov
dec
ins
pop
mov
pop
push
jmp
inc
(bad)
push
sbb
gs
shl
xor
push
shl
jbe
dec
ret
je
gs
or
xchg
jle
fdiv
ret
cld
mov
push
out
shl
outs
lds
jecxz
jbe
mov
push
jmp
xchg
fdiv
ror
jbe
movs
push
add
out
jp
cmp
out
adc
clc
fcomp
adc
cmp
dec
mov
jle
out
js
call
push
mov
mov
sub
add
leave
lods
pop
xchg
push
fldcw
inc
cs
xchg
js
mov
and
sub
addr16
xor
adc
push
shl
dec
lods
inc
repz
enter
pushf
shl
call
aam
(bad)
rcr
es
sbb
enter
cwde
ins
std
fucomip
inc
add
jmp
cld
ret
bound
inc
fwait
jbe
cmps
pop
pop
iret
cmp
mov
rol
jmp
stos
iret
imul
sbb
iret
cmc
aaa
sbb
call
push
daa
unpckhps
fst
shr
jmp
or
ret
test
js
push
cmps
cs
mov
enter
in
mov
ins
add
outs
fst
js
inc
scas
fidivr
in
adc
mov
mov
iret
into
push
cmp
mov
mov
and
movs
imul
popf
pop
push
push
xor
sbb
sahf
jae
pop
sub
stos
or
fdivr
bound
jmp
or
imul
sbb
test
fsubr
mov
out
js
cmc
inc
xor
or
xchg
imul
ds
xlat
sbb
lea
cs
adc
retf
shr
mov
add
jae
iret
jo
push
lds
rol
or
test
dec
mov
sbb
xchg
popf
call
stc
pop
cmp
dec
mov
dec
lods
dec
and
jmp
push
pop
inc
sbb
sub
ret
push
and
mov
jo
imul
mov
cld
push
push
mov
pop
jnp
mov
fisttp
into
inc
loopne
mov
js
mov
loop
clc
or
cdq
xchg
int
outs
xchg
mov
arpl
clc
in
(bad)
les
push
sar
in
in
push
pop
(bad)
movs
retf
mov
sbb
imul
cmps
jecxz
out
cmps
mov
(bad)
push
aas
pusha
push
sbb
cli
mov
pop
sbb
push
jmp
int
cmps
xor
mov
lock
mov
add
mul
mov
out
(bad)
jno
push
fwait
xchg
sub
xchg
and
(bad)
dec
int
mov
ret
and
hlt
inc
pop
cdq
mov
lods
push
sar
lods
fld
mov
nop
push
xchg
xchg
leave
fcmovbe
pop
(bad)
or
shr
pop
sbb
xchg
fld
addr16
adc
cmp
lea
rcr
and
into
outs
(bad)
int
sbb
repnz
js
(bad)
adc
cmp
cmp
rcl
fdiv
loop
retf
xchg
jmp
pop
jns
jnp
(bad)
lea
les
lahf
add
stos
(bad)
test
xor
push
lds
inc
cld
push
mov
fs
ss
fisub
cs
movs
mov
inc
lds
pop
sti
or
stos
shl
xchg
adc
or
xor
retf
add
mov
cmps
jb
aaa
fbld
movs
xor
sub
inc
cmps
xor
lahf
in
xor
sbb
xor
xlat
into
mov
shr
mov
inc
mov
jecxz
icebp
int3
popf
iret
in
fbld
sar
xchg
das
mov
pop
arpl
lods
or
mov
das
mov
add
xor
pop
fsub
mov
ss
or
pop
mov
mov
lea
cmp
pushf
test
adc
adc
xor
push
aaa
jg
push
mov
dec
or
mov
sub
sub
mov
ret
sub
fwait
ds
xchg
inc
iret
jne
add
inc
xchg
inc
jl
mov
hlt
mov
sahf
lea
addr16
shr
push
mov
loope
(bad)
sbb
and
jae
(bad)
push
sbb
ror
arpl
pop
xor
dec
or
daa
imul
xor
mov
dec
or
shl
(bad)
ror
jecxz
test
xor
cwde
cmp
mov
push
pushf
mov
jns
ficom
mov
leave
cmp
jmp
jmp
lods
dec
push
test
ret
dec
adc
pop
mov
jno
out
add
lods
fs
cmp
lock
lods
sub
jmp
sbb
mov
push
dec
inc
mov
mov
push
pop
jno
lods
jge
loope
dec
iret
sub
pop
jb
lahf
jg
pop
test
and
scas
in
adc
sbb
sbb
mov
sub
popa
or
sahf
cmp
push
ret
push
popf
adc
lea
fild
adc
shr
retf
ror
clc
adc
and
movs
and
xor
adc
aaa
lods
pop
xchg
jle
lahf
mov
fwait
jae
enter
scas
sbb
mov
xchg
pop
cwde
dec
stc
xor
iret
shr
inc
retf
jbe
and
pop
(bad)
int3
cmps
mov
dec
inc
sub
lds
icebp
sub
lods
test
mov
inc
fs
xchg
sub
in
nop
popf
add
cld
es
cmp
mov
sbb
in
and
movs
and
push
sbb
(bad)
fld
in
test
jbe
shr
push
push
sub
popf
jecxz
fcmovb
jae
mov
adc
sbb
jmp
shl
in
addr16
(bad)
sar
cmp
gs
lods
and
dec
jbe
ret
adc
inc
fiadd
mov
add
mov
mov
scas
xchg
xchg
adc
sub
push
aas
fimul
ficom
sti
mov
loop
inc
lahf
or
enter
cmp
dec
inc
inc
cmp
ret
push
das
adc
pop
test
aam
xlat
cmp
fs
adc
mov
in
and
add
push
push
inc
and
lods
lods
jbe
in
out
mov
clc
or
and
maxps
jmp
inc
ret
jmp
aam
and
jae
ins
fstp
neg
dec
mov
sub
por
test
dec
push
(bad)
mov
(bad)
imul
js
cmp
sbb
pop
inc
push
scas
sbb
fidiv
ins
adc
xchg
test
xor
iret
jno
xor
add
push
mov
xchg
xchg
jmp
int
mov
imul
sbb
retf
imul
sub
pop
dec
push
mov
add
(bad)
retf
test
cld
adc
xchg
add
nop
add
iret
out
scas
dec
ja
push
popf
std
mov
dec
in
iret
(bad)
jecxz
mov
mov
lar
dec
sbb
nop
jae
arpl
adc
es
(bad)
dec
rol
gs
or
scas
inc
sub
mov
adc
pshufw
jb
rcl
push
mov
and
enter
cs
jl
push
test
jns
jo
mov
arpl
cli
pop
movs
mov
xchg
adc
xchg
(bad)
and
mov
fldcw
dec
push
mov
sub
mov
fidiv
js
addr16
pop
stc
add
sbb
into
inc
sahf
mov
outs
in
cwde
call
das
out
mov
cmp
das
sub
mov
sbb
sub
jns
leave
pop
lods
pusha
sti
fcmovnu
mov
nop
fadd
mov
cmp
retf
enter
fisub
or
or
and
cmp
pop
cmp
xchg
cmp
xchg
pop
loopne
sub
and
fmul
add
inc
cmc
and
inc
test
cmp
cld
jle
(bad)
aad
retf
xchg
or
inc
push
mov
sbb
inc
repz
mov
mov
imul
pop
jmp
mov
loope
repz
mov
mov
add
dec
inc
mov
cli
(bad)
mov
popf
rcl
call
cmps
rcl
pop
cmp
dec
in
mov
inc
mov
mov
setl
loop
adc
and
imul
daa
inc
arpl
cmp
cli
jns
dec
cmp
pop
xchg
dec
lods
sbb
jo
jns
das
mov
inc
es
loop
inc
lahf
sbb
sbb
pop
inc
xor
or
in
mov
loope
leave
xchg
loopne
inc
sbb
mov
inc
cs
loopne
rcl
xor
rcl
xchg
dec
jmp
sbb
mov
cmp
clc
or
dec
sub
aas
out
push
mov
push
int3
mov
inc
loopne
nop
mov
cmps
mov
or
fcomp
xor
sti
data16
jno
sti
cmp
int
mov
aam
sub
fwait
pop
mov
cmp
inc
mov
gs
xchg
cs
sub
lea
cmps
inc
rcl
out
test
mov
aam
out
lea
dec
jmp
adc
lock
and
pop
pop
repz
sbb
inc
out
data16
ins
(bad)
sar
add
clc
xor
fwait
daa
dec
push
or
in
xor
test
jecxz
mov
repnz
push
sub
sbb
mov
mov
jle
xor
dec
stc
pop
inc
out
inc
jne
or
mov
sti
or
dec
and
nop
adc
(bad)
and
fstp
in
xor
ret
(bad)
call
mov
inc
inc
repnz
xchg
pop
mov
push
push
sub
xor
add
loope
mov
mov
jmp
xor
pusha
pop
movs
inc
pop
lock
pop
test
and
mov
aas
adc
dec
push
mov
pop
mov
mov
cmp
rcr
sub
mov
ins
int
fimul
cmps
or
(bad)
lahf
cli
scas
or
cs
dec
push
cmps
mov
mov
arpl
mov
repnz
xchg
jb
sbb
sbb
sbb
inc
fwait
popa
xor
add
push
imul
sbb
mov
ss
lds
pop
test
imul
imul
pop
sub
dec
push
or
xor
adc
inc
jmp
jp
es
clc
cmps
pop
xchg
xor
pop
enter
mov
imul
push
mov
pusha
fmul
mov
(bad)
and
sbb
scas
adc
or
ins
mov
dec
sub
and
shr
add
iret
pop
pop
(bad)
out
xlat
rcr
mov
out
imul
sbb
mov
(bad)
xor
lods
sahf
ret
add
add
dec
xor
mov
mov
inc
sbb
xchg
adc
adc
dec
rcr
loopne
dec
iret
or
jnp
sbb
jne
jg
fiadd
inc
add
pop
repnz
retf
sbb
imul
mov
neg
fldl2e
and
xlat
or
jmp
in
push
aam
retf
adc
les
xchg
clc
dec
mov
repz
sub
nop
or
aas
sbb
clc
ret
arpl
sbb
pop
mov
adc
xlat
mov
or
outs
test
repz
stos
push
sub
dec
push
xchg
mov
jp
lods
jle
and
cmc
push
sub
pop
fwait
dec
nop
int3
mov
adc
dec
inc
sti
gs
or
xlat
pushf
sub
leave
dec
dec
or
test
je
je
jmp
ins
loope
out
mov
std
and
pop
imul
sbb
stos
mov
lock
popf
adc
leave
mov
and
lock
imul
or
and
cld
adc
into
mov
into
popf
mov
mov
mov
xchg
inc
popa
and
dec
jmp
in
scas
push
xor
dec
ret
xchg
jmp
fisttp
inc
jecxz
scas
jecxz
dec
(bad)
adc
fcmovnbe
push
ins
and
mov
sbb
mov
movs
xchg
add
fidiv
aaa
bswap
xchg
mov
jp
jmp
(bad)
mov
lahf
add
jmp
pop
push
shr
mov
jb
sub
dec
mov
jge
sub
sub
fstp
pop
sbb
mov
jno
inc
nop
outs
ins
fwait
sbb
sti
aas
stos
outs
xchg
jno
mov
mov
xlat
mov
mov
dec
outs
call
xchg
push
pop
mov
pushf
imul
inc
inc
imul
jno
push
add
jge
arpl
cwde
xor
(bad)
push
call
les
aas
xchg
jae
mov
cdq
jl
sub
jp
and
mov
ret
bound
dec
pop
scas
mov
jne
pop
sbb
xchg
mov
ror
xor
jp
push
mov
clc
mov
(bad)
mov
mov
fcmovb
add
cmps
cmp
enter
mov
test
pop
dec
stos
push
jecxz
xchg
js
sub
not
jg
jb
in
mov
fwait
jnp
mov
jbe
out
mov
adc
mov
push
test
dec
mov
xchg
int3
nop
sahf
(bad)
xlat
out
stos
inc
sahf
sub
xor
push
imul
cmc
gs
xchg
sbb
push
ret
sahf
push
scas
pop
shl
pop
inc
rol
and
jb
enter
inc
inc
cmp
jle
sub
in
mov
fbld
inc
mov
xchg
dec
ss
jge
xchg
mov
xor
inc
stos
out
into
or
int3
push
mov
adc
sbb
xor
mov
sahf
xchg
xor
jl
xchg
cli
icebp
sub
cli
das
adc
xchg
scas
gs
dec
dec
xor
movs
in
push
bnd
mov
push
js
mov
xchg
mul
daa
mov
mov
xchg
stos
les
mov
(bad)
(bad)
jae
sub
jo
xor
dec
fwait
cld
repnz
cwde
outs
iret
(bad)
sub
cmps
mov
mov
add
push
popa
pusha
or
mov
mov
pop
std
lahf
in
cmp
(bad)
or
xchg
add
inc
pop
mov
out
or
test
ret
add
and
ins
mov
jg
mov
mov
popf
jl
repz
adc
sbb
adc
outs
push
sbb
movs
mov
loopne
ret
dec
xchg
test
pop
push
fidivr
or
mov
xor
rcl
loope
rcl
sbb
test
jne
jge
imul
in
inc
mov
push
clc
dec
ror
adc
inc
dec
sub
xor
loope
ins
fisttp
fs
xchg
popa
pop
xlat
jecxz
push
lods
lods
sub
test
jmp
stos
popa
push
repz
call
sbb
adc
push
fst
aaa
cld
popf
push
dec
leave
test
(bad)
cmp
scas
xchg
mov
fcomp
jb
repnz
inc
(bad)
hlt
add
lahf
lds
jp
cmps
in
push
(bad)
(bad)
mov
call
div
test
sar
ret
dec
fild
popa
add
lock
jno
mov
nop
pop
ins
rol
popa
in
out
int3
add
sub
cmp
xor
adc
xor
jp
cmp
sbb
call
or
inc
jnp
mov
retf
ficomp
lahf
push
inc
loopne
ja
loop
xor
add
jp
fs
movnti
xor
shr
sbb
pushf
cld
lds
aaa
cmp
add
pop
mov
dec
xlat
and
sar
sbb
call
or
hlt
div
xchg
xchg
fistp
xor
jae
adc
dec
push
inc
pop
sar
xor
jnp
sub
retf
(bad)
popa
scas
lea
adc
aaa
mov
fistp
ja
popa
bound
popf
push
(bad)
scas
and
rep
in
and
mov
sub
loopne
sub
cmp
call
scas
je
imul
push
push
push
or
out
xor
aas
pop
and
xchg
rcr
imul
mov
inc
mov
lahf
inc
jne
jl
xor
jae
mov
icebp
mov
pushf
and
jmp
pop
popa
cmp
jmp
ins
xor
mov
jne
sub
pop
scas
add
arpl
and
scas
mov
sbb
jbe
mov
jge
outs
mov
mov
daa
sbb
jae
xor
dec
ins
shl
mov
setl
call
xor
sub
call
push
loopne
adc
sub
out
add
sub
mov
ret
xor
imul
jp
sub
cmp
mov
lds
inc
jmp
test
pop
arpl
or
pop
sbb
lea
shr
push
les
jbe
add
in
repnz
xor
sbb
leave
repnz
and
imul
mov
popa
mov
js
sub
mov
shl
inc
mov
mov
(bad)
(bad)
test
push
arpl
rol
enter
shl
ret
sahf
xchg
je
out
push
mov
or
mov
push
sti
fisubr
shl
cmovle
sub
xchg
jmp
ss
mov
inc
xchg
sbb
jnp
lock
dec
ss
or
mov
mov
out
lods
stos
imul
jmp
in
push
stos
inc
daa
test
push
push
mov
and
mov
adc
cwde
vpsubusb
cmp
push
in
icebp
in
bsr
add
pop
test
icebp
or
sub
inc
cmp
and
or
adc
out
cmc
add
inc
fisttp
test
xchg
fild
xchg
fld1
lds
cmp
mov
fmul
enter
fstp
js
lds
cmp
test
in
xchg
jb
(bad)
xor
cmp
bnd
mov
stc
sbb
cmp
jl
xchg
and
push
imul
cmp
mov
fcom
mov
daa
pop
push
and
cmc
cmps
std
jp
mov
adc
ja
aam
(bad)
retf
lahf
loop
sbb
movs
push
mov
or
rcl
sbb
rcl
and
push
jns
outs
loop
dec
and
fiadd
dec
xchg
cmp
ror
(bad)
stos
dec
stos
sub
push
mov
and
xor
lds
bnd
(bad)
test
test
aad
jecxz
push
inc
sub
add
xor
and
sub
movs
xlat
adc
dec
lock
jge
fsub
inc
adc
push
stos
xor
out
in
(bad)
loope
frstor
pop
in
movs
cmp
xor
adc
push
inc
push
leave
int
xlat
cwde
fmul
(bad)
repz
mov
leave
shl
add
call
retf
dec
lods
arpl
test
fisub
pop
fucomip
jecxz
adc
mov
sbb
cmc
std
pop
pop
in
ins
je
rcl
(bad)
or
inc
adc
mov
outs
xchg
(bad)
shl
push
push
cmp
and
pusha
in
push
fcom
shl
xchg
add
mov
push
dec
les
and
dec
fisubr
mov
xor
mov
xchg
cmps
jae
sbb
adc
and
das
mov
mov
loopne
pop
test
popf
hlt
dec
inc
scas
shr
pop
and
add
or
inc
out
mov
call
and
jecxz
jg
repz
ins
mov
fst
or
(bad)
xor
daa
test
(bad)
div
sbb
shl
out
out
pop
dec
fsubr
in
cmp
jle
xor
xchg
cmps
pusha
jmp
stc
rcr
and
add
pushf
std
leave
mov
clc
(bad)
loope
sub
xchg
shl
inc
or
(bad)
dec
mov
aam
push
mov
mov
icebp
pop
cdq
retf
xchg
jmp
and
jns
addr16
jecxz
das
mov
mov
aas
sbb
inc
cmp
fdiv
out
scas
jmp
inc
ret
pop
out
lods
out
or
mov
inc
bound
test
adc
inc
cwde
mov
outs
push
pop
push
fld
cdq
pop
ret
repnz
cdq
push
int
ficomp
jge
rol
pop
cmp
fidivr
dec
sar
add
je
cmps
xchg
loope
out
jns
cmp
xchg
add
idiv
mov
(bad)
add
and
cmp
sbb
pop
and
call
mov
imul
and
jecxz
jno
cli
in
mov
dec
adc
fistp
xchg
xchg
cs
es
add
in
stos
aam
adc
mov
movs
loop
popf
mov
adc
jl
clc
jmp
mov
sub
in
xor
dec
add
mov
daa
pop
jge
iret
sub
retf
pop
icebp
mov
inc
mov
call
clc
sub
push
mov
mov
or
xchg
adc
imul
rol
or
icebp
inc
sahf
xor
iret
or
add
mov
aad
out
test
mov
inc
inc
add
pop
mov
push
(bad)
in
inc
inc
bound
or
jns
std
rcr
repz
jnp
jae
xchg
into
sti
sub
jecxz
dec
cwde
outs
into
(bad)
mov
jns
mov
adc
add
push
ret
cmp
xor
iret
push
push
outs
mov
mov
mov
cdq
inc
test
repnz
fist
inc
add
jecxz
dec
xor
xor
cmp
out
lsl
inc
adc
jnp
xchg
pop
sub
(bad)
std
jno
jmp
push
fstp
sti
aam
xor
data16
push
in
mov
or
inc
repnz
cli
pop
push
loop
sbb
sbb
or
mov
iret
idiv
adc
in
mov
jns
in
and
jno
aas
inc
mov
mov
mov
int3
cld
sub
out
jmp
pop
adc
outs
test
pop
movs
sub
aad
mov
sti
xchg
cmp
int3
and
pinsrw
int
mov
shr
cwde
fistp
inc
xor
std
dec
in
shl
cmp
shl
mov
push
call
sub
xchg
into
cmp
push
dec
cld
push
popf
sbb
fwait
jae
movs
ror
xor
push
and
and
add
aaa
push
(bad)
call
mov
call
add
dec
leave
mov
shl
aaa
mov
add
add
sahf
push
mov
scas
dec
rcr
fild
test
xchg
rol
dec
loop
sbb
inc
mov
jmp
mov
xor
test
je
sbb
hlt
(bad)
fist
jae
mov
(bad)
cmp
cmp
pmaxub
inc
xchg
retf
jno
icebp
jecxz
in
dec
or
popf
mov
test
shl
xor
sti
and
sbb
test
push
xor
addr16
fbstp
es
shl
mov
and
inc
pop
mov
or
pop
aam
jae
stos
test
test
or
arpl
out
jmp
xor
mov
movs
outs
scas
sub
sub
ds
les
add
add
mov
cmp
test
mov
jb
adc
push
dec
fwait
xchg
jns
cmp
push
int3
test
xchg
and
aas
sbb
mov
ret
mov
mov
mov
jl
aad
mov
xchg
fdivr
aam
lods
dec
mov
fcmovbe
dec
les
ins
inc
or
in
mov
xchg
dec
aad
popa
push
xchg
outs
ds
sbb
jp
aad
div
enter
cdq
sbb
pop
gs
sbb
mov
repnz
(bad)
pop
jns
jp
adc
push
call
sbb
push
mov
mov
jae
sbb
ficomp
mov
fsubr
or
(bad)
mov
cmp
repnz
idiv
mov
hlt
in
hlt
cmp
jl
jle
repz
mov
fstp
mov
mov
in
(bad)
add
sub
fwait
mov
daa
dec
aas
stc
xchg
les
mov
scas
add
dec
adc
shl
ret
xor
jne
int3
fnstenv
ror
sahf
cmp
stos
cmp
aad
clc
shl
addr16
cmp
add
arpl
cmps
loopne
stos
jne
and
ins
mov
fisubr
and
push
idiv
add
cmp
les
test
aaa
mov
pop
or
and
cld
ror
hlt
cmps
mov
cmp
inc
cwde
jne
fsub
aaa
enter
cmps
lahf
or
fucomp
push
dec
iret
fisub
cmp
sbb
movs
mov
out
ins
js
dec
mov
stos
lahf
test
dec
dec
iret
lods
or
mov
and
or
cwde
xchg
arpl
popa
jle
dec
dec
das
outs
daa
or
jb
sbb
jmp
mov
dec
pop
gs
mov
daa
xchg
pop
push
je
daa
sbb
je
adc
jo
xchg
or
popa
pop
fmul
and
clc
jno
pop
adc
dec
retf
jp
jge
jmp
push
hlt
pop
mov
xor
or
mov
jg
and
aad
and
mov
or
cmc
and
add
in
mov
fdiv
bound
mov
sti
dec
and
in
int
pop
cmp
out
jmp
in
arpl
dec
(bad)
pushf
(bad)
repnz
loop
or
xor
dec
imul
mov
ss
ret
frstor
cmp
cs
jne
mov
aad
rcr
and
xchg
lock
cmp
vmovaps
mov
call
sbb
mov
or
jnp
fwait
mov
mov
inc
stos
icebp
mov
push
fs
xor
push
repnz
jb
mov
mov
gs
cmp
movs
std
pop
repnz
dec
mov
pop
jo
cmp
xchg
jbe
jmp
icebp
jae
aaa
out
rcl
nop
outs
jecxz
call
out
cmp
pop
lea
add
or
push
push
adc
mov
pop
fistp
and
dec
in
loop
and
scas
repnz
add
or
push
jae
jmp
mov
adc
js
jns
pinsrw
hlt
ret
test
in
dec
dec
sahf
xchg
fdivr
enter
les
pop
add
fld
stos
xor
ret
loope
push
pop
(bad)
mov
pop
pop
jl
sub
mov
mov
pop
iret
popa
addr16
js
dec
sbb
or
fiadd
sub
pushf
pop
mov
cs
lock
loopne
push
xlat
or
dec
dec
aaa
xor
or
adc
dec
pop
ret
jns
cmp
iret
push
idiv
push
pop
inc
repz
fild
mov
les
icebp
movs
push
gs
pop
stos
(bad)
std
aaa
es
call
pop
sbb
test
sti
inc
es
mov
and
jno
aaa
rol
cmp
xor
imul
cmp
add
cmp
ret
sub
cmp
xor
pop
outs
(bad)
test
sar
mov
sbb
xchg
push
fcomp
sbb
in
in
inc
(bad)
mov
push
scas
pop
dec
push
pop
mov
push
mov
cwde
or
pop
mov
jae
push
in
out
sti
call
xor
jbe
cwde
pop
pop
jmp
xchg
es
loope
add
pop
add
icebp
cmp
scas
shl
cld
lock
pop
loopne
lods
ja
scas
mov
lahf
arpl
fnstenv
push
bound
sbb
mov
mov
loopne
es
push
inc
add
jnp
dec
iret
ficom
int3
xchg
adc
sbb
push
sbb
int3
pop
test
cmc
lahf
test
jne
xor
jg
in
add
add
call
push
in
dec
adc
int
out
sbb
mov
cmp
(bad)
adc
out
lods
pop
enter
xor
dec
pop
enter
mov
add
jmp
mov
cli
push
fidivr
mov
inc
hlt
dec
xor
movs
and
repnz
adc
movs
inc
lock
hlt
cmp
jp
push
stos
sub
push
cld
clc
leave
imul
pop
repnz
sub
or
sub
xchg
or
imul
adc
add
fdivr
pop
mov
(bad)
adc
scas
jp
mov
or
xchg
pop
push
leave
adc
dec
lds
cwde
neg
cmp
xchg
sar
lods
shr
int
call
xor
pusha
gs
pop
pop
adc
sbb
lahf
push
adc
jmp
xchg
or
sbb
ins
sub
jecxz
sub
daa
test
sbb
aad
xor
mov
and
sub
out
jne
jbe
in
(bad)
das
lods
cdq
loopne
sub
mov
imul
mov
es
xor
retf
sbb
sub
jmp
call
out
gs
aaa
mov
fcomp
cld
pop
sahf
xor
out
add
pusha
(bad)
hlt
scas
outs
(bad)
pushf
out
inc
jmp
sub
xchg
imul
nop
xor
aaa
cmp
xchg
adc
jle
push
fistp
idiv
adc
jno
and
js
stos
daa
mov
sbb
or
pop
arpl
movs
cmp
inc
out
sbb
sub
fwait
int3
out
in
cmp
and
test
pop
cmp
and
xchg
cmp
jmp
push
or
adc
cmp
sub
push
or
lahf
add
jno
jge
scas
push
jnp
pop
mov
adc
inc
shl
das
add
je
fsubr
pop
imul
cmp
sub
test
ins
scas
jns
inc
mov
out
(bad)
icebp
outs
ret
dec
outs
ret
shl
cli
es
add
aad
ins
add
fisub
xor
inc
test
test
push
imul
daa
sub
aaa
inc
rcr
(bad)
call
sub
cli
add
iret
cmp
sbb
sbb
nop
and
outs
mov
pop
pop
das
push
ret
loop
mov
mov
fwait
lds
xchg
or
sub
iret
jmp
aam
ins
sub
inc
adc
daa
and
(bad)
ret
cwde
mov
mov
jne
push
mov
xor
inc
ja
push
ror
pop
aaa
mov
outs
pop
jecxz
les
xchg
hlt
dec
push
mov
pushf
add
pop
fcmovnbe
mov
rol
les
xchg
addr16
adc
out
data16
rcr
loop
cmp
mov
jg
pop
jae
aas
xor
data16
das
push
or
nop
add
mov
jmp
mov
mov
inc
or
mov
mov
or
adc
in
mov
xchg
jmp
outs
push
inc
fcom
lds
addr16
retf
pop
xor
mov
inc
jo
pop
std
jmp
pop
or
mov
and
int
xchg
sub
retf
movs
and
push
popw
xlat
fwait
inc
xchg
mov
call
movs
jo
lock
repz
mov
fincstp
inc
arpl
mov
test
lea
ret
cmp
jg
fcomp
stc
inc
loope
into
push
mov
mov
and
bound
xor
adc
mov
cmp
call
jns
jbe
cmp
js
jne
cwde
dec
jmp
test
sbb
(bad)
cmc
ret
add
mov
sub
jmp
icebp
add
fdivr
pop
and
mov
xchg
fsub
in
xchg
sub
xor
xchg
cwde
outs
cmp
push
adc
push
ret
cmp
dec
inc
inc
pop
and
or
dec
mov
dec
push
mov
into
cli
ret
pop
pushf
mov
repnz
jmp
test
fisub
scas
in
mov
mov
sbb
or
inc
cmovg
add
and
stos
not
push
(bad)
in
retf
dec
push
add
ja
int3
std
inc
mov
pop
out
or
push
call
mov
xchg
jecxz
jae
cmps
ins
and
mov
nop
cmp
fdivp
xor
into
dec
sar
scas
aad
and
aad
movs
jle
out
jno
repnz
adc
inc
push
push
mov
pop
(bad)
rol
movs
scas
jp
loopne
dec
push
not
jns
call
xlat
xor
lahf
stos
aad
pusha
push
cli
int3
sub
mov
in
out
ds
pshufw
and
dec
popa
nop
jo
rcr
push
jge
cmps
cmp
das
data16
xor
dec
pop
or
pop
mov
xchg
repnz
sbb
mov
jbe
mov
mov
popf
xor
and
mov
dec
pop
cwde
sbb
jmp
and
sbb
add
iret
fxch
leave
je
and
hlt
sub
cwde
jne
mov
inc
cmp
dec
mov
dec
xchg
sbb
imul
mov
jge
arpl
shr
bound
mov
imul
retf
scas
nop
jmp
leave
out
push
mov
inc
ja
add
cmp
(bad)
mov
test
mov
jne
pushf
push
or
pop
pop
adc
dec
xchg
addr16
ror
cdq
xchg
ss
aam
lods
(bad)
jge
inc
cmc
in
es
inc
mov
or
shl
imul
clc
mov
ins
and
mov
not
lds
and
jo
xchg
xor
mov
sbb
aaa
sbb
inc
xor
neg
(bad)
or
pusha
in
xrelease
out
stos
arpl
jg
xchg
retf
dec
mov
jg
or
fstp
repnz
cmps
xchg
push
mov
daa
jle
ins
loope
(bad)
mov
or
jg
mov
push
inc
loop
call
icebp
popf
xchg
dec
sbb
icebp
test
stc
bound
sub
hlt
mov
pinsrw
mov
retf
jo
int3
std
stos
cmp
lods
cdq
and
jno
bound
mov
je
fsub
fcom
sbb
adc
dec
add
pop
pop
repnz
jbe
out
xchg
fcomp
jge
ror
or
xor
sbb
xchg
mov
mov
dec
leave
stos
push
sub
jo
xchg
nop
retf
mov
fsub
loope
scas
dec
sbb
sbb
dec
(bad)
repnz
inc
xchg
int
or
int
pop
fnstenv
sbb
fwait
and
xchg
push
pop
aad
xor
push
pushf
and
mov
cmp
jmp
sahf
pop
data16
jecxz
mov
call
js
int
xor
aam
dec
inc
inc
mov
adc
and
lods
xchg
cmp
lock
cmp
xchg
mov
jno
xlat
cmps
hlt
mov
xor
ret
stos
and
rcr
adc
cmps
jno
push
add
xchg
enter
inc
das
add
mov
in
leave
inc
int
mov
pop
add
lock
adc
dec
aad
stos
adc
repz
lods
fs
and
shr
(bad)
call
pop
(bad)
mov
je
push
push
mov
push
call
popf
xchg
cs
adc
pushf
xchg
sub
inc
xchg
cmps
add
xor
std
cmp
add
mov
jae
dec
dec
cmp
icebp
xor
imul
pop
pushf
into
sahf
add
jle
out
in
mov
xor
xor
bound
cmp
pxor
retf
jo
adc
retf
hlt
jbe
inc
mov
jmp
icebp
add
inc
push
mov
push
push
and
sar
mov
mov
push
cli
(bad)
js
pop
arpl
addr16
inc
fbstp
int
(bad)
test
mov
enter
sbb
fdivr
fst
pop
repnz
mov
js
sbb
xor
out
jnp
ret
dec
or
scas
xchg
fwait
nop
mov
jae
loope
imul
push
mov
(bad)
cmps
xor
mov
xchg
mov
nop
retf
hlt
cwde
test
outs
ror
jmp
mov
push
int3
bound
fs
sbb
ins
dec
imul
(bad)
addr16
xor
sar
sar
std
mov
and
movs
call
mov
(bad)
cli
and
xchg
loopne
cmp
addr16
jl
cmp
jnp
pop
pop
and
inc
out
test
test
mov
(bad)
stos
ja
cld
xchg
sbb
adc
dec
xchg
jge
mov
out
cmp
and
sar
mov
or
pop
inc
retf
and
out
sahf
adc
es
retf
movs
sbb
movs
iret
aaa
cwde
test
pop
mov
mov
jno
out
jmp
adc
in
or
data16
cmp
xor
(bad)
adc
aaa
out
loop
inc
sbb
xchg
sbb
sub
xchg
sub
idiv
test
jno
pushf
or
sar
loopne
xchg
and
and
into
les
cdq
imul
adc
push
in
imul
and
and
ss
movs
cdq
add
xchg
pop
jmp
jnp
cmps
mov
xor
jmp
push
out
adc
hlt
das
jmp
test
sar
mov
mov
outs
and
push
mov
std
cdq
xchg
(bad)
ret
ja
adc
les
xchg
ss
xchg
sub
mov
mov
int3
sub
aam
shl
(bad)
dec
and
sub
popa
mov
dec
xchg
adc
push
dec
pusha
pushf
and
jbe
int
loope
dec
icebp
shl
cli
dec
jmp
jae
pop
loop
xchg
sar
jmp
mov
mov
mov
mov
mov
loopne
xchg
push
jb
xor
sbb
call
mov
out
movs
sbb
jecxz
je
xchg
out
fcomp
mov
jecxz
jmp
shl
fcomp
stc
fisttp
nop
mov
jg
sahf
and
push
jae
mov
lods
stc
sub
bound
mov
xor
xor
stos
fcomp
inc
ins
mov
dec
(bad)
sub
push
mov
stc
scas
ins
daa
mov
cmp
mov
pop
jmp
inc
cwde
jne
xchg
mov
pusha
mov
sbb
inc
adc
and
arpl
outs
dec
(bad)
adc
call
stc
shr
bound
pop
pop
mov
iret
into
cmp
pop
scas
enter
fidiv
xchg
jmp
(bad)
ss
pusha
xor
icebp
shr
js
dec
dec
clts
sbb
aam
movs
fidivr
ss
ss
sbb
mov
sub
pop
cdq
inc
cmp
push
fld
clc
not
cmp
cmp
fisub
xchg
movs
sub
jo
cmp
mov
ins
pop
push
xchg
sbb
jo
or
mov
out
test
xchg
mov
dec
mov
sub
pusha
(bad)
mov
jg
int3
addr16
xchg
mov
or
fild
jl
inc
dec
js
pop
mov
xor
inc
clc
por
xlat
mov
xchg
shl
jo
aad
sub
cmp
cli
pop
ja
sub
dec
loopne
retf
in
inc
cmp
je
sbb
gs
dec
pop
in
sbb
lods
pop
std
sti
push
cmp
jecxz
push
mov
data16
les
pusha
not
pop
cmc
or
mov
sbb
add
in
in
push
mov
retf
aaa
fucomp
push
bound
ds
stos
ds
mov
retf
sub
or
sbb
repnz
cmp
sbb
or
sbb
rcl
inc
stos
pushf
or
inc
repnz
jbe
push
push
movs
push
popf
add
sub
mov
inc
or
or
aaa
sbb
and
scas
aam
sahf
mov
xchg
out
(bad)
sub
repz
cmps
sahf
add
adc
ins
sbb
dec
xchg
lods
push
aaa
imul
mov
push
adc
jle
pushf
add
retf
xchg
cmc
push
or
js
pop
mov
fld
mov
or
sbb
or
jnp
mov
adc
pop
mov
mov
ins
sub
jecxz
jno
(bad)
cmps
or
sbb
fstp
xor
xor
xchg
(bad)
fisttp
leave
xchg
or
jae
inc
pop
fimul
rcr
jnp
xchg
addr16
stos
and
or
aaa
test
dec
into
lock
in
adc
jnp
lahf
push
inc
into
add
addr16
popf
xchg
fnstsw
dec
push
pop
push
(bad)
cld
push
inc
mov
lods
shl
sub
cs
retf
pop
hlt
popa
pop
inc
xchg
(bad)
std
jl
mov
or
and
mov
imul
mov
cmp
lds
sub
inc
pop
fdivr
pop
into
js
adc
push
(bad)
inc
jns
popa
out
fcom
in
cmp
dec
iret
xchg
lahf
outs
loop
mov
xchg
call
pop
pop
fs
sub
(bad)
xor
sub
add
mov
or
fadd
pop
out
sbb
mov
dec
aam
pop
xchg
mov
(bad)
mov
or
and
jnp
xchg
push
sbb
stc
test
xlat
add
fdiv
or
cmps
out
scas
and
stc
sbb
mov
pop
and
ret
in
sbb
or
pop
sbb
and
push
sub
(bad)
addr16
std
pop
je
or
jno
xor
out
or
rcr
stc
nop
movs
cmp
cmp
xlat
and
in
and
stos
lods
mov
or
nop
mov
out
ret
loop
mov
add
sbb
cli
lock
fistp
les
and
shl
mov
or
dec
(bad)
fst
std
call
es
cwde
jle
inc
idiv
mov
into
or
mov
scas
mov
iret
inc
pop
mov
idiv
pop
sub
add
(bad)
adc
mov
fisub
f2xm1
shl
cmp
sub
sbb
popf
bound
inc
outs
sub
(bad)
sbb
lea
xchg
ror
fcmovne
hlt
les
nop
mov
sar
sub
(bad)
es
push
int3
pop
leave
ffree
(bad)
idiv
inc
push
pusha
adc
retf
or
(bad)
out
xchg
arpl
lods
jmp
dec
push
jo
push
xor
ds
movs
sub
mov
sub
or
push
inc
dec
add
shl
sub
fiadd
sbb
pusha
mov
(bad)
cs
mov
and
jb
push
pushf
adc
outs
xchg
cmp
das
cmp
ss
push
outs
add
lods
ret
cmp
push
popa
cmps
pop
cmp
jns
call
test
jl
sub
dec
frstor
sub
cdq
push
scas
xchg
push
xchg
add
sti
pop
retf
jae
(bad)
scas
dec
add
mov
pop
dec
fst
sbb
(bad)
lds
xrelease
xchg
or
cmps
mov
test
add
jge
mul
jle
(bad)
push
push
push
cmp
out
out
adc
pop
and
push
mov
(bad)
gs
ins
rcr
stc
add
add
sbb
retf
fxam
(bad)
mov
or
repnz
pop
xor
inc
(bad)
push
les
and
and
dec
add
pop
cli
mov
nop
add
sahf
push
loopne
push
sbb
mov
ss
mov
mov
scas
sub
mov
push
clc
(bad)
scas
jb
(bad)
sahf
sahf
out
push
mov
xchg
arpl
dec
pop
in
or
mov
jbe
pushf
sbb
xchg
and
sub
push
dec
(bad)
int3
xor
arpl
dec
cmp
loope
push
mov
pop
das
in
pop
xchg
lahf
pop
add
cli
jle
lods
or
xchg
popf
jo
dec
cmps
(bad)
call
xchg
xchg
(bad)
addr16
inc
movs
(bad)
jmp
sub
adc
call
mov
popa
aad
push
dec
(bad)
mov
adc
cld
or
jp
in
out
cmp
loop
fsub
popf
pop
sub
inc
lea
mov
jae
cmp
pop
mov
nop
mov
lods
inc
mov
outs
nop
movs
push
fiadd
or
fnstenv
hlt
pop
in
or
jl
in
xchg
(bad)
cmp
inc
inc
mov
retf
sub
xchg
clc
jg
inc
icebp
adc
pop
inc
xchg
(bad)
dec
hlt
repnz
pop
loope
mov
sub
jne
sbb
xchg
dec
sahf
jb
je
inc
xor
and
int3
inc
cmps
cli
dec
nop
retf
int3
dec
jae
movs
stos
fnstsw
test
pop
jmp
and
adc
nop
xor
enter
mov
sbb
mov
cmp
clc
repz
stos
or
data16
fiadd
nop
cmp
fs
cdq
outs
pop
scas
dec
test
sahf
xor
das
test
movs
xlat
ja
sub
pop
xchg
adc
sbb
icebp
repz
pop
outs
sub
loop
aas
jo
imul
and
pop
fisttp
movs
mov
fbld
mov
ins
xor
mov
dec
aaa
int
inc
xor
into
inc
jmp
mov
adc
es
sti
push
outs
(bad)
cmp
sub
mov
fiadd
push
fstp
adc
adc
inc
lock
dec
and
inc
inc
shl
scas
push
stos
add
pushf
mov
imul
dec
jns
idiv
out
xor
and
leave
sbb
outs
mov
(bad)
xor
and
cmc
xchg
cmp
je
inc
jmp
outs
adc
cli
or
lods
xchg
xor
dec
fstp
mov
push
test
stos
add
out
xlat
(bad)
adc
or
inc
bt
or
mul
popa
ins
jae
test
mov
or
movs
das
or
adc
mov
into
cwde
icebp
xlat
jnp
stc
(bad)
sbb
push
and
data16
mov
arpl
xor
lea
pushf
inc
mov
mov
xor
sahf
fadd
and
cmp
test
add
fisub
lahf
sti
mov
cmp
and
jge
lds
popf
xchg
test
dec
add
out
mov
push
inc
mov
add
push
imul
cmp
push
mov
shl
js
fidivr
out
sub
cmp
dec
cmp
fiadd
loopne
adc
jb
cmc
sbb
dec
idiv
dec
bound
xchg
cwde
mov
inc
push
arpl
clc
aad
fld
or
retf
repnz
(bad)
fild
fcmovnb
push
mov
mov
xor
push
adc
push
out
jle
push
rcr
arpl
push
fbstp
mov
sti
adc
pushf
hlt
out
pop
loope
clc
add
hlt
int
add
dec
push
xlat
inc
mov
push
sub
ret
inc
retf
(bad)
in
test
mov
jo
sub
cmc
xchg
xor
test
push
mov
push
mov
mov
ins
mov
pop
sub
push
sub
add
sti
or
loope
jae
test
not
inc
jb
sub
mov
retf
gs
lds
mov
shl
(bad)
push
adc
mov
xor
cmp
(bad)
jnp
cmp
mov
fist
in
fld
sbb
push
sti
daa
pusha
rcl
mov
inc
enter
pop
rcr
outs
stos
jge
jge
dec
rol
inc
push
pop
enter
daa
push
lock
sbb
popa
mov
shl
shl
sub
loop
hlt
dec
ret
lahf
push
jnp
push
adc
int
fadd
xchg
pop
mov
in
pop
inc
enter
mov
push
and
(bad)
sub
add
pop
jnp
sbb
fist
clc
push
mov
int
cmps
inc
mov
cmc
mov
imul
jg
sbb
and
adc
and
das
xchg
retf
movs
pop
repz
ret
cwde
cmps
ins
mov
and
addr16
pop
inc
loope
xor
loopne
test
dec
pop
je
inc
fiadd
mov
adc
adc
xchg
test
cmc
mov
popf
sbb
jp
add
push
jmp
movs
ins
and
push
lock
add
mov
sti
fidivr
push
push
test
mov
mov
shl
lock
pushf
std
jne
mov
xchg
rcr
aam
test
sub
aam
inc
sub
repnz
pop
mov
(bad)
jle
arpl
xchg
dec
hlt
sub
call
(bad)
movs
fnstenv
jnp
cmp
mov
cld
xor
imul
jno
cs
mul
bound
xchg
mov
into
mov
xchg
mov
push
mov
retf
xchg
daa
jmp
cmp
lahf
pop
push
aaa
test
adc
jle
and
sub
mov
mov
imul
lea
adc
or
vucomisd
cmc
cmp
ret
aaa
push
xor
(bad)
leave
cmp
dec
pushf
and
mov
xchg
mov
nop
sahf
nop
stos
dec
jae
aas
loopne
pop
jl
push
jmp
repz
inc
push
jmp
and
jno
jbe
popa
fsub
stc
in
es
stc
xor
jmp
or
mov
div
iret
mul
jle
das
cdq
movs
sbb
cmp
fisttp
test
jae
js
sbb
mov
and
adc
imul
ds
data16
push
lods
call
xor
fdiv
jmp
and
cmp
repnz
mov
leave
xlat
in
hlt
bound
mov
rol
fs
jno
inc
arpl
pop
mov
xchg
or
call
sbb
fsubr
jb
and
jne
push
pop
push
call
mov
cmp
inc
int
xor
adc
push
pop
sahf
or
outs
pop
dec
(bad)
icebp
test
xlat
mov
xor
add
and
sahf
xchg
(bad)
lahf
popa
add
out
ret
hlt
loope
lahf
out
aad
call
mov
mov
xlat
jmp
xchg
add
jns
call
mov
sti
xor
outs
jns
shl
xchg
mov
stc
mov
cmp
or
pop
sbb
add
dec
call
call
or
repz
cmp
xchg
gs
and
sub
mov
lea
dec
jbe
pop
mov
cmp
pop
push
add
lds
inc
in
cmp
popf
test
dec
dec
mov
ins
mov
jle
pop
call
push
pop
mov
mov
adc
retf
jno
push
xlat
out
add
cli
push
adc
in
leave
add
enter
cs
imul
mov
sbb
xor
and
fistp
inc
sub
push
mov
ficomp
dec
fsubr
shr
les
repnz
inc
shl
scas
iret
adc
retf
ficomp
xchg
rol
xor
scas
out
jle
rol
loop
popf
scas
sub
push
pop
dec
adc
ret
and
sbb
inc
or
data16
shr
call
mov
or
in
cmp
pop
mov
sub
repz
or
jnp
stos
inc
(bad)
(bad)
jmp
push
inc
add
scas
mov
jbe
nop
pop
enter
aas
push
es
pusha
pop
fwait
pop
jno
dec
stc
clc
inc
adc
ret
mov
pusha
inc
out
stos
scas
push
push
mov
rol
or
sub
fdiv
cmp
stos
lock
pop
mov
(bad)
pop
adc
xor
inc
pop
cmp
cmp
jbe
ins
test
cmp
test
outs
fsubr
add
mov
cmp
or
mov
cdq
sub
dec
jbe
(bad)
lock
cmp
mov
out
jp
jle
jo
lock
enter
push
imul
jg
mov
call
rcr
dec
cmp
shr
push
xor
(bad)
call
jmp
dec
stos
add
sbb
xor
js
rcl
outs
cli
adc
fsub
inc
pushf
idiv
jmp
xor
mov
in
jl
or
dec
sbb
adc
ins
int3
jb
jmp
pop
adc
jge
mov
dec
sbb
push
jbe
popa
cmp
jb
pop
pusha
aaa
push
add
or
push
ja
shl
fldenv
mov
adc
dec
mov
loopne
and
hlt
pop
sub
repz
cmp
cmps
call
and
fistp
pushf
(bad)
adc
cdq
(bad)
xchg
aad
inc
and
mov
push
nop
pop
(bad)
je
adc
add
jmp
mov
xor
test
xor
mov
pop
mov
inc
out
sub
(bad)
fiadd
(bad)
cmp
mov
pop
sub
and
hlt
icebp
jp
push
scas
cdq
and
mov
push
lds
pop
mov
push
add
daa
jp
sub
das
add
xor
mov
inc
es
addr16
iret
and
mov
pushf
das
jno
lods
mov
ins
cs
mov
scas
loope
lea
aam
sub
mov
lds
(bad)
pop
dec
mov
dec
dec
outs
fsubp
mov
jl
push
mov
test
mov
mov
dec
sub
adc
jp
fcom
pop
adc
push
pusha
fist
fld
addr16
out
fidivr
pop
jp
cdq
mov
xor
fmulp
imul
push
sub
xor
iret
add
lods
xchg
rol
clc
sub
pop
pop
xchg
adc
and
adc
or
ds
fdivr
popf
pushf
scas
jo
rcl
arpl
scas
mov
(bad)
jp
jns
pop
pop
out
push
mov
hlt
sbb
jecxz
sbb
pop
or
dec
mov
out
push
or
scas
test
rol
mov
arpl
(bad)
cld
add
pushf
in
jbe
sub
test
loop
jecxz
(bad)
push
hlt
jmp
mov
cmps
cmc
imul
sbb
pop
out
and
bnd
mov
xor
outs
mov
aas
dec
pop
js
and
mov
xor
mov
dec
mov
jle
push
(bad)
xchg
mov
jmp
add
aad
or
call
inc
fstp
cmp
outs
lea
mov
test
leave
add
or
(bad)
dec
mov
cli
(bad)
test
mov
cmps
sub
add
ret
rol
enter
xchg
jbe
add
mov
cmps
iret
xor
jne
retf
pop
lahf
loopne
stos
movs
pop
and
ror
aam
ja
xchg
sub
dec
test
repz
in
popf
adc
inc
sbb
sbb
or
push
inc
jg
push
mov
cmp
sahf
add
and
cmp
or
mov
addr16
xchg
in
jbe
mov
sub
dec
pop
fnstenv
jnp
sbb
lds
mov
push
(bad)
push
cmp
jne
and
jle
mov
inc
cmps
rcr
xlat
rol
repz
sub
stos
cmp
xchg
loop
out
sub
mov
cs
sbb
hlt
or
inc
sbb
xor
pop
xor
out
in
mov
mov
sti
bound
pop
xor
in
xchg
or
add
es
inc
mov
adc
push
mov
and
ret
es
outs
dec
iret
ret
xchg
dec
mov
and
add
pop
sbb
push
cli
cdq
sbb
movs
add
retf
xor
dec
pop
pop
je
bound
xlat
fs
mov
mov
pushf
sub
xchg
add
ror
adc
sub
jp
xor
jle
pop
fnclex
pop
sbb
stc
mov
sbb
test
pop
pop
fbstp
(bad)
ja
daa
ret
loope
mov
ss
pop
leave
dec
inc
sbb
pop
pusha
call
jns
cmp
aaa
ins
and
mov
cmp
adc
loop
sbb
mov
out
xor
loop
dec
nop
push
enter
mov
adc
sub
mov
aaa
outs
push
into
shl
add
mov
inc
sbb
inc
sbb
push
mov
stos
ins
stos
sub
test
sub
lods
sbb
jbe
and
mov
mov
mov
ret
mov
sub
and
inc
jnp
mov
xor
pop
and
loopne
pop
jns
cmp
sub
adc
rol
iret
inc
hlt
mov
sbb
fmul
mov
xor
mov
cwde
or
jl
clc
mov
adc
test
ret
add
mov
mov
into
imul
arpl
outs
push
loopne
mov
jns
stos
mov
push
push
fild
out
repz
pop
movs
sbb
add
jno
xchg
imul
stos
arpl
test
rcl
dec
shr
ret
and
inc
push
cld
mov
dec
and
gs
mov
lods
cmps
jl
dec
sbb
and
aad
adc
loopne
out
adc
xchg
ficomp
aas
jb
rcl
xchg
cmc
in
xor
inc
jmp
and
call
loop
inc
adc
aaa
into
dec
pop
mov
mov
xchg
or
pop
xor
jnp
mov
adc
ins
and
add
gs
repz
sti
sbb
xchg
fst
or
mov
movs
call
addr16
cwde
inc
(bad)
or
inc
imul
or
addr16
not
leave
mov
push
pop
mov
sub
mov
lahf
xor
mov
not
ror
ret
pop
add
push
fisub
scas
shl
repnz
and
mov
add
in
xchg
in
lods
adc
daa
jnp
cmp
jne
ins
out
xor
in
add
call
test
jns
aas
imul
sbb
sahf
mov
int
fucom
xor
les
push
out
div
inc
adc
cmp
fidivr
sub
and
sti
sbb
inc
js
mov
dec
push
in
adc
mov
retf
pop
dec
dec
into
cli
data16
pop
or
or
fcomp
aam
push
je
pusha
mov
test
jg
aad
jl
aad
cmp
xor
das
sub
xchg
sbb
(bad)
lahf
xchg
jmp
sbb
in
sub
out
iret
pushf
sub
repnz
push
jl
inc
mov
pop
dec
sub
xor
into
fsub
repnz
cmp
pushf
sub
inc
cmp
test
fcmove
mov
je
and
xchg
cdq
daa
pop
outs
cmc
pop
(bad)
retf
fmul
adc
add
mov
neg
ret
inc
sbb
mov
dec
ins
and
pop
xor
retf
or
mov
iret
sbb
retf
mov
loope
cmps
jmp
jne
jne
daa
es
jmp
jle
or
sbb
in
call
es
sbb
xlat
cmp
jge
sub
dec
aas
dec
push
jns
into
and
pop
(bad)
mov
mov
leave
xchg
jmp
jbe
scas
fsubr
push
in
cmp
fnstsw
stos
loop
out
bound
xor
fidivr
cs
mov
push
and
dec
mov
jmp
xchg
sub
jecxz
inc
test
mov
xchg
push
mov
fwait
ss
push
call
fstp
icebp
jmp
dec
fbld
mov
and
fistp
lea
cmp
ins
fistp
retf
imul
pop
sar
adc
push
addr16
xor
push
adc
lahf
cwde
lea
xor
jecxz
jns
in
loop
mov
mov
stos
int3
xchg
jno
mov
adc
sbb
sbb
fnstsw
mov
inc
fst
inc
sub
aad
xor
sar
icebp
loope
inc
xor
add
mov
cmc
inc
inc
(bad)
mov
test
iret
mov
cwde
mov
xchg
aas
sub
mov
jno
cwde
and
push
(bad)
(bad)
push
mov
or
push
cdq
daa
or
jecxz
jb
test
fidiv
movs
lea
sbb
adc
int3
fisub
and
pusha
ds
pop
push
xor
add
cmp
jmp
daa
stos
inc
addr16
imul
aaa
push
xchg
or
psubq
mov
cmp
xor
xchg
jo
cmp
icebp
mov
ins
xchg
xor
mov
pop
shl
push
sbb
test
xchg
push
mov
xlat
aad
mov
inc
imul
add
mov
jle
movs
push
aas
push
push
fimul
imul
fcom
pop
test
cmovs
in
xchg
enter
cdq
gs
jbe
stos
xlat
iret
jmpw
sbb
pop
or
sti
jae
movs
lock
into
push
stc
clc
lea
ss
ficom
in
mov
fstp
scas
ror
mov
and
sub
jmp
out
lds
das
icebp
dec
ret
adc
out
mov
les
or
add
jne
in
adc
mov
mov
mov
hlt
rcr
je
add
sub
mov
dec
fsubp
pusha
pop
push
lock
mov
int3
icebp
jp
aas
fisub
inc
pop
sbb
rep
leave
sub
mov
dec
ds
mov
popf
jge
(bad)
or
enter
adc
jnp
pusha
cdq
retf
push
and
sahf
ss
dec
mov
push
lock
loope
inc
nop
push
adc
fstp
repnz
or
cmp
jno
add
(bad)
das
sbb
aam
es
mov
out
xor
inc
jge
mov
mov
pushf
fidiv
mov
jle
or
scas
fisub
inc
pop
adc
fs
ja
xchg
icebp
jp
out
xor
adc
xchg
clc
sbb
(bad)
hlt
shl
jg
xchg
outs
out
xor
outs
push
mov
adc
loopne
(bad)
repz
fistp
jl
push
lock
jmp
pop
aaa
jp
sub
and
mov
aad
mov
ret
clc
xchg
(bad)
jl
sbb
jge
mov
sbb
or
inc
sub
and
and
lods
mov
imul
push
ds
ret
fbstp
das
add
push
(bad)
pusha
adc
in
in
mov
cs
adc
fsubr
imul
je
les
daa
outs
inc
cmp
iret
mov
lahf
or
xchg
gs
mov
pop
ss
ret
lods
mov
cwde
dec
xchg
mov
push
pop
cmps
in
inc
jnp
jecxz
pop
inc
addr16
inc
hlt
bound
mov
enter
leave
mov
fbld
sub
imul
add
xchg
int3
cmp
test
and
pop
shl
data16
mov
sub
mov
not
fistp
adc
out
(bad)
or
inc
cmp
lods
xchg
jge
shr
ror
and
scas
mov
pusha
push
inc
mov
inc
jne
mov
out
out
jmp
add
outs
sub
mov
lock
and
add
push
xchg
fisttp
cld
and
adc
inc
mov
cmp
and
jo
call
pavgw
xchg
call
mov
icebp
jb
sub
lea
mov
clc
pop
test
cld
fstp
mov
adc
push
leave
mov
gs
dec
iret
push
pushf
mov
mov
stos
mov
(bad)
mov
pop
dec
jno
out
imul
fsubrp
into
lea
cmp
sub
cli
loop
fucomp
(bad)
das
mov
mov
cmp
or
sti
rol
sub
xchg
data16
test
inc
inc
mov
mov
xchg
int
add
xchg
jge
fcom
fimul
xor
push
fcomp
cdq
sub
push
fld
js
pop
push
inc
cdq
popa
and
jae
shr
mov
ins
(bad)
jle
cmp
jno
add
in
clc
aad
cli
sub
adc
(bad)
icebp
call
nop
dec
jmp
mov
xchg
jl
or
pop
sub
mov
push
test
fst
aad
inc
adc
(bad)
aad
iret
retf
jmp
mov
gs
or
(bad)
in
scas
into
aad
adc
lea
sbb
adc
jle
fsub
nop
ds
jle
pop
mov
sahf
out
bound
data16
fs
lahf
dec
push
fst
fsubr
scas
and
inc
push
daa
mov
pop
and
mov
or
adc
fidiv
xor
mov
int
retf
sbb
dec
pop
(bad)
fcomp
lds
daa
test
popa
fnstenv
call
cdq
out
test
(bad)
or
xchg
or
push
pusha
mov
xor
lods
rcl
mov
mov
mov
xor
ret
(bad)
and
push
cmc
and
adc
mov
pop
fsub
push
sub
int
inc
sub
stos
inc
jae
shl
adc
jl
mov
loop
mov
pop
stc
adc
xor
cwde
int
ffree
shl
repz
xor
rol
push
add
lods
jb
adc
cmp
dec
popf
int
mov
stc
sub
jl
mov
test
sub
pusha
pop
cld
mov
ror
mov
enter
jb
fistp
mov
std
mov
ins
mov
sub
adc
f2xm1
stos
mov
fs
mov
mov
push
loope
sbb
fwait
adc
in
and
pop
scas
pop
cs
jg
iret
add
sub
push
aad
popf
movs
iret
(bad)
movs
loop
pop
in
push
mov
pop
shr
aaa
mov
lods
dec
fsub
mov
into
cmovl
outs
and
js
outs
test
dec
gs
cmc
or
fs
sub
jmp
pop
jmp
sbb
pop
xor
push
adc
inc
jae
jle
jbe
movs
fisubr
mov
aam
mov
out
cmp
pop
jp
shl
xchg
push
xor
cmc
std
ds
shl
fcom
add
xlat
or
jge
push
into
jno
cmp
xchg
jne
pop
cld
cmp
mov
pop
sub
jbe
push
pop
ja
cmp
mov
push
je
adc
adc
pop
js
aaa
add
arpl
call
mov
dec
xchg
inc
xchg
lds
mov
fidiv
add
or
aas
cmp
in
cmps
pop
adc
push
xchg
cmp
mov
inc
ins
dec
(bad)
push
ror
xchg
sbb
movs
ss
cmps
sub
adc
cdq
or
and
mov
(bad)
fisubr
pusha
xchg
mov
cmp
pop
data16
mov
and
mov
inc
clc
(bad)
rol
cmp
js
push
mov
gs
add
aas
iret
fistp
xor
aam
pop
jae
mov
fwait
aaa
ret
js
jmp
inc
bound
push
movs
xor
add
rcl
or
cdq
mov
xor
in
and
and
retf
add
out
ret
fild
pop
into
inc
jnp
and
test
inc
xor
xlat
rol
pop
cmps
adc
fwait
ret
ror
div
adc
cwde
mov
pop
je
push
ror
lock
out
das
in
and
aam
sub
dec
shl
xor
sahf
std
cmps
ret
shl
mov
scas
sbb
xchg
daa
fs
in
xchg
cmps
cmp
dec
push
test
pop
lock
inc
fidivr
xchg
jo
cmp
adc
push
aam
(bad)
or
pop
out
mov
stc
pop
xor
xchg
dec
fxam
aam
xor
out
adc
mov
loope
scas
sub
mov
cmovae
fwait
js
sbb
test
mov
add
jo
push
test
inc
cmp
(bad)
push
sti
cmps
adc
pop
mov
sahf
add
sub
pop
sahf
mov
lods
aas
xchg
dec
nop
les
mov
push
xchg
jmp
in
pop
push
push
adc
(bad)
xchg
adc
jge
or
xor
jne
pop
mov
add
pushf
movs
les
retf
mov
jb
xchg
int
mov
push
shl
nop
mov
ds
push
rol
aam
push
mov
pop
jb
push
imul
popf
jnp
adc
popf
lahf
clc
or
and
xlat
arpl
movups
or
rol
inc
pop
cmp
adc
add
nop
or
out
xor
shr
push
fwait
shl
lods
sub
jg
test
ins
stc
cs
sub
push
shl
fild
(bad)
fstp
mov
out
retf
mov
fmul
xchg
shr
sub
inc
sbb
or
xor
dec
into
mov
adc
rcl
or
inc
cmps
pop
mov
inc
cdq
pop
dec
cld
je
inc
mov
jge
xor
test
loop
les
inc
add
mov
pop
ds
xchg
mov
cmps
lea
stos
mov
xchg
sbb
pop
adc
sub
mov
cmps
pop
push
add
pushf
fld
sbb
ficomp
pop
push
icebp
push
out
fcomp
popa
call
nop
(bad)
int3
xchg
xchg
xchg
adc
rcr
shr
pop
mov
fidivr
jo
inc
cmp
xchg
add
inc
loopne
push
pop
or
xchg
add
idiv
das
gs
or
xchg
mov
dec
rol
cmp
stc
jg
popa
lahf
dec
mov
(bad)
jbe
cmc
fimul
jae
mov
aas
xchg
xchg
mov
xor
add
push
ror
shr
enter
cmp
xor
mov
std
ss
retf
xor
and
cmp
pop
push
sbb
xor
dec
sbb
outs
or
call
mov
adc
(bad)
aaa
or
fcmovne
cmp
sub
scas
addr16
cwde
cdq
fwait
not
das
inc
cdq
mov
jp
add
mov
or
mov
ret
pop
xchg
retf
jle
sbb
cmp
dec
cs
inc
add
pop
mov
ret
or
push
adc
mov
fwait
jns
jecxz
mov
jbe
push
push
mov
pop
lahf
xchg
cmp
jmp
cmp
imul
scas
ja
sub
in
fistp
leave
bound
push
pop
pop
ins
retf
call
push
sahf
mov
sahf
(bad)
aad
xlat
pop
and
cwde
and
jns
scas
in
pop
jmp
fstp
(bad)
in
stos
xchg
sar
nop
iret
pop
addr16
adc
(bad)
repnz
retf
enter
push
nop
inc
add
lahf
shr
cmp
inc
mov
cli
mov
cdq
add
push
lods
cdq
test
push
rcl
fistp
inc
loope
dec
or
adc
fcomp
fld
movs
sti
push
out
(bad)
push
mov
cwde
mov
xchg
fcom
gs
ins
push
cmps
inc
jmp
ror
dec
push
mov
fist
in
ret
lahf
out
loope
and
icebp
sbb
mov
jg
shl
iret
iret
aas
ret
in
sbb
jle
movs
mov
sbb
mov
sar
rcr
mov
xor
retf
loop
int
xchg
inc
jmp
sub
aam
adc
mov
jmp
jns
jbe
pop
cmps
inc
xor
dec
push
scas
adc
mov
mov
retf
sub
test
iret
push
mov
xchg
jmp
fld
or
push
and
cmp
and
dec
into
outs
stc
inc
push
cmp
adc
jmp
popf
(bad)
rcl
pop
pop
mov
xchg
ins
dec
jmp
popa
pop
addr16
mov
mov
sti
scas
jbe
xchg
(bad)
sub
jnp
sti
ret
sub
push
xor
sbb
stos
aad
rol
ror
test
enter
push
mov
push
in
outs
stc
js
mov
xor
push
or
add
pop
cmp
repnz
lods
cld
sub
lahf
sti
dec
add
(bad)
cmps
aaa
ret
xor
cld
adc
jmp
mov
push
mov
dec
push
in
repz
mov
mov
push
jl
or
adc
lea
cmc
or
int
xchg
sbb
movs
xlat
js
pushf
pop
jp
sub
dec
rcr
pop
mov
sbb
pop
inc
(bad)
sar
stc
ds
push
mov
arpl
stc
push
push
repnz
daa
add
(bad)
mov
pop
jp
sbb
cmp
pop
arpl
retf
jmp
and
xlat
dec
sar
outs
outs
je
jno
std
xchg
adc
xlat
mov
mov
aas
lea
out
dec
sbb
popf
or
dec
and
iret
test
dec
(bad)
lods
lods
stc
pushf
rol
or
rcr
hlt
push
mov
dec
mov
inc
sbb
(bad)
sbb
push
add
leave
test
ficom
and
and
adc
and
ficom
jmp
gs
jno
pop
das
cmp
and
out
lahf
adc
cld
out
mov
dec
fucomip
fwait
mov
mov
inc
pop
xchg
mov
(bad)
ret
imul
fadd
int3
fdiv
arpl
inc
sbb
or
cmp
jl
retf
dec
jno
movs
and
fnsave
or
mov
rcr
test
cmpps
xchg
mov
in
mov
xlat
pop
pop
mov
jg
cmps
mov
mov
push
ja
out
imul
arpl
sbb
mov
adc
xor
xor
add
pop
ins
(bad)
pop
imul
imul
rcr
js
jecxz
shl
loope
push
cmp
xchg
xchg
pushf
dec
lds
sbb
jbe
icebp
out
jno
push
jg
jge
iret
daa
sbb
push
int3
test
adc
lea
out
nop
and
cmc
jmp
mov
cmp
rcr
addr16
cmp
jle
iret
pop
mov
mov
int
push
mov
cmps
sbb
dec
jecxz
sbb
out
sub
addr16
cmps
fsub
es
push
bound
fdivrp
ins
or
mov
dec
out
lods
mul
inc
fdivr
jne
arpl
dec
lahf
popa
(bad)
cmps
imul
nop
cmp
push
push
xchg
jmp
in
dec
and
xchg
mov
mov
pop
push
pop
mov
call
call
data16
iret
mul
adc
call
jmp
jle
packsswb
push
(bad)
mov
rol
mov
fdivr
je
mov
xor
jl
xchg
ret
mov
cmp
call
pop
das
mov
pop
dec
mov
jle
int3
int3
mov
in
dec
jmp
inc
xchg
pop
push
pop
lock
sbb
loop
or
push
call
and
shl
pop
rcl
dec
mov
(bad)
(bad)
lods
addr16
js
out
adc
xchg
dec
xchg
dec
sbb
cmp
mov
xchg
add
dec
and
stos
lods
cmc
addr16
pushf
retf
push
repz
repnz
cs
ret
popa
mov
enter
inc
sub
push
ret
mov
adc
movs
sub
pop
sti
sbb
stc
js
fwait
cmp
mov
mov
mov
cmp
stc
xchg
lods
les
ror
pop
cli
div
push
(bad)
aaa
push
adc
mov
lahf
pop
mov
stos
jo
retf
add
xchg
xchg
push
out
adc
mov
mov
aam
adc
mov
pop
je
test
pop
cmp
xor
sbb
enter
inc
pop
push
xchg
cwde
shr
mov
mov
mov
inc
faddp
popa
sbb
push
popf
call
adc
cwde
dec
mov
call
rcr
rcr
xor
and
fst
dec
ins
pop
pop
aaa
cmp
push
movs
jmp
out
jmp
test
push
xchg
(bad)
scas
ja
test
and
jp
iret
cwde
sbb
sbb
call
xlat
push
stc
mov
adc
cmp
adc
test
jg
adc
cmp
fidiv
and
pop
mov
lods
fwait
movs
(bad)
adc
xchg
jecxz
pop
test
jne
jb
adc
push
mov
cmp
or
push
sub
iret
loope
xor
jle
mov
inc
push
mov
mov
outs
xchg
retf
inc
lods
out
push
push
push
repz
in
mov
lahf
aad
push
adc
fcomp
add
bound
adc
mov
pop
mov
and
sbb
stc
dec
es
retf
adc
mov
enter
aaa
into
add
enter
jmp
rcl
(bad)
pop
in
retf
jb
cmp
retf
mov
cmp
inc
pop
or
(bad)
adc
outs
pop
pushf
ret
mov
les
pop
sbb
(bad)
in
sub
xlat
leave
fadd
pop
retf
pop
test
jg
jno
mov
pop
mov
cmps
and
js
or
mov
xor
or
lahf
sahf
call
nop
rcl
stos
dec
cmc
ds
mov
pop
sbb
aas
fld
jo
int3
stos
iret
inc
mov
inc
out
imul
lods
mov
jle
call
fstp
push
mov
cmps
adc
ins
push
nop
aas
popa
call
or
sub
cli
dec
xor
nop
je
jmp
in
pop
adc
lds
mov
stos
ror
out
call
mov
fwait
mov
jbe
mov
nop
add
push
es
sbb
xor
inc
xchg
mov
outs
imul
cwde
ror
pop
pop
repnz
stos
mov
(bad)
cli
outs
add
and
shr
mov
popf
or
xor
adc
ins
and
in
ss
aaa
cmp
pop
dec
pop
icebp
lods
xchg
mov
test
je
das
push
push
fcom
push
jbe
test
nop
test
cwde
les
aad
jmp
ret
cmp
pop
push
(bad)
jmp
inc
repz
jns
dec
clc
js
cmp
mov
mov
outs
inc
fs
aas
mov
push
mov
jmp
popa
pop
nop
test
ja
call
xchg
mov
xor
ss
cld
adc
pushf
pusha
cmp
push
(bad)
mov
loopne
add
fmul
inc
xchg
fmul
cmps
pushf
fwait
fwait
inc
sub
adc
cmp
popf
ja
mov
inc
fistp
js
iret
int
dec
adc
and
ss
repnz
std
pop
push
bound
sub
ficom
xchg
xchg
ret
inc
mov
iret
ror
jae
mov
cmps
sub
jo
mov
in
jl
xchg
aas
ret
or
jge
test
or
and
retf
jmp
pop
push
push
and
push
jmp
mov
sbb
xor
pop
or
xor
sub
and
aas
fisttp
adc
ja
addr16
cwde
pop
ret
test
add
xchg
mov
xor
ror
lea
and
icebp
and
mov
inc
jl
aam
popf
and
sub
sbb
out
mov
mov
fs
movs
cmc
jmp
add
popa
xchg
cdq
stos
ja
retf
mov
bound
pop
xlat
xchg
rcl
out
mov
clc
icebp
leave
or
jmp
sub
mov
test
jns
push
cs
(bad)
jmp
fwait
sar
xlat
jbe
std
fadd
bound
test
jnp
lods
xor
jecxz
adc
test
dec
pop
hlt
psrlw
(bad)
out
mul
fst
out
mov
xor
sub
lahf
mov
mov
dec
cs
push
xor
fwait
and
xchg
pop
out
(bad)
pop
add
lock
ins
and
aam
(bad)
jmp
je
or
pop
outs
mov
stos
cmps
enter
xor
jmp
sahf
and
fnstsw
lock
pop
sar
mov
mov
movs
inc
dec
or
jmp
jae
leave
cmp
test
or
aas
pop
js
ror
mov
xchg
mov
mov
sub
test
push
fwait
pop
das
(bad)
shl
adc
jp
sbb
jns
fadd
pop
pop
push
sahf
dec
mov
repz
loope
rol
retf
je
out
fdivr
js
ret
ds
jge
gs
mov
popa
and
and
ds
aas
adc
call
xlat
inc
jmp
mov
arpl
ss
cld
cli
xor
sub
add
ds
inc
and
(bad)
cs
repnz
or
mov
inc
pop
cmp
or
das
(bad)
dec
push
jge
cmp
cmp
jns
mov
cwde
jmp
push
mov
icebp
outs
(bad)
ror
bswap
into
imul
mov
push
jecxz
lods
pusha
outs
inc
or
pop
jns
test
iret
xchg
aaa
dec
cmp
push
mov
mov
out
jnp
loopne
das
je
pushf
sbb
outs
je
add
pop
mov
nop
cmps
adc
scas
add
test
dec
dec
lahf
pop
jns
movs
pop
and
popf
lods
repnz
dec
enter
fcom
aam
pop
xor
iret
adc
inc
fidivr
cli
call
mov
shl
xor
add
ja
jge
or
pop
add
aas
cmc
xchg
add
push
cmp
lods
ins
dec
test
sbb
cmps
in
or
sahf
jno
sub
mov
das
mov
xchg
into
mov
shl
mov
xchg
inc
repnz
add
inc
mov
sub
je
mov
mov
sahf
adc
fwait
add
sub
adc
push
les
push
mov
jbe
and
and
and
dec
fdivr
int
leave
inc
and
push
imul
daa
mov
hlt
cmc
add
mov
mov
jmp
(bad)
jmp
push
sub
retf
dec
cmp
ins
jno
movs
push
sbb
scas
mov
xchg
inc
mov
cmp
mov
ins
cdq
daa
or
fisttp
call
cmc
jmp
cmp
dec
in
imul
pop
les
pop
fstp
ret
jle
lahf
cmp
pushf
sti
and
mov
jne
into
mov
outs
inc
mov
or
adc
mov
lea
clc
(bad)
adc
aaa
mov
xchg
outs
ins
daa
cmc
jmp
test
xchg
mov
int3
cmp
ror
push
or
inc
icebp
stos
mov
sub
sub
jnp
dec
mov
pop
pop
repz
(bad)
pusha
push
jae
mov
mov
sbb
jno
jnp
push
pop
pop
test
push
outs
sub
xchg
mov
jp
out
push
aam
adc
outs
out
jmp
imul
dec
iret
dec
mov
or
pop
sbb
lods
imul
and
js
push
adc
imul
lods
imul
pop
(bad)
mov
pop
xchg
int3
add
mov
sbb
jecxz
push
pusha
retf
js
test
cmps
js
sbb
xchg
or
cmp
push
arpl
push
add
ficom
js
loope
(bad)
and
jg
push
or
std
jmp
call
adc
das
add
mov
push
jmp
xor
imul
cdq
push
sbb
push
push
loopne
lea
outs
cmps
sub
gs
aas
add
ja
or
add
pusha
popa
pusha
aaa
(bad)
(bad)
pop
out
lea
dec
(bad)
mov
mov
(bad)
cmp
jo
mov
sbb
test
jmp
call
js
jne
arpl
fmul
pop
into
dec
jmp
arpl
jmp
sti
and
fmulp
or
pop
sub
mov
or
aad
sbb
outs
fs
jb
fmul
sbb
lock
sbb
inc
jmp
jo
mul
cmps
out
(bad)
movs
pop
sub
lahf
or
mov
or
mov
aam
cli
call
xchg
repz
sub
out
fwait
mov
cmp
lea
ror
add
gs
call
std
push
aam
(bad)
addr16
jo
outs
inc
lahf
bound
sub
lods
mov
mov
adc
adc
mov
scas
push
clc
mov
rcl
or
sbb
push
mov
and
int3
sti
cmp
dec
push
add
aas
pop
sub
push
stos
dec
mov
add
je
icebp
mov
out
(bad)
aad
cmp
cmps
cmps
add
pop
gs
iret
cwde
and
inc
cs
es
cmp
retf
mov
jo
loop
inc
and
ins
xchg
jmp
loop
xchg
push
and
push
(bad)
sbb
xchg
(bad)
dec
bound
pop
ins
mov
inc
fidivr
bound
xchg
pop
mov
pop
lea
xor
outs
mov
loop
stc
mov
loop
sub
gs
arpl
or
jp
das
add
lahf
pop
cmp
dec
mov
dec
dec
mov
scas
and
hlt
fucomi
out
mov
mov
jmp
sbb
shl
push
call
rcr
test
mov
(bad)
push
jmp
cmp
xor
repz
shr
xchg
aam
dec
pushf
loope
jp
call
mov
scas
jge
mov
inc
popa
pop
stos
mov
mov
mov
jne
pop
and
cmps
xchg
or
les
js
in
cmps
fimul
jge
mov
xor
jb
add
mov
pop
adc
xor
jnp
daa
jmp
call
loope
lods
mov
cmp
scas
jl
inc
push
sbb
(bad)
mov
mov
xor
jmp
xchg
ret
cmc
pop
mov
pop
or
ins
xlat
ds
aas
scas
jl
mov
inc
mov
test
dec
inc
rcr
xlat
dec
fisubr
xor
cmc
and
sub
mov
mov
repz
pop
fwait
stos
(bad)
fdiv
cmc
ror
lock
add
mov
cli
inc
or
mov
adc
retf
pop
push
icebp
mov
in
gs
mov
xlat
push
shl
fucomp
sub
mov
gs
out
into
sub
stos
pop
inc
stos
dec
xchg
or
rep
test
and
mov
dec
dec
add
fistp
adc
jne
dec
xor
lds
jle
mov
pop
nop
xchg
or
adc
inc
lahf
or
xchg
xor
push
dec
sub
in
mov
lods
xor
lods
repnz
arpl
push
sub
sti
jmp
mov
sar
mov
test
pop
add
mov
mov
lahf
pop
cmps
dec
push
leave
xlat
mov
pop
and
inc
lock
push
mov
xchg
cld
sub
jge
adc
jg
les
inc
dec
dec
pop
cmp
aas
(bad)
fdiv
int3
cs
dec
out
in
mov
mov
loopne
sbb
mov
cmp
pop
(bad)
lds
or
mov
dec
mov
ja
adc
imul
jo
in
add
xchg
in
cmp
test
jnp
adc
and
in
xchg
xchg
mov
(bad)
jnp
es
lods
or
inc
adc
inc
push
icebp
in
cli
or
movs
push
aam
lods
or
mov
jne
mov
cwde
icebp
aaa
mov
nop
test
cmps
lods
aad
or
mov
jl
or
push
xchg
xor
loope
idiv
push
or
aam
repz
js
or
add
push
cli
add
mov
inc
sbb
fstp
test
cmps
out
sahf
nop
xchg
push
loopne
jns
cmps
sub
lods
loope
icebp
je
mov
cmps
inc
clc
inc
idiv
fwait
cmp
mov
push
scas
inc
inc
cmp
mov
jmp
in
xchg
pushf
jg
cs
push
or
jno
xchg
scas
pop
push
xor
cmp
jo
and
mov
mov
loopne
sub
into
dec
mov
fcom
jmp
xchg
and
dec
test
xor
test
xchg
jl
fcomp
jmp
adc
popf
pop
fstp
pushf
mov
mov
sbb
scas
sub
sbb
lods
aam
jge
int3
lea
inc
stc
sbb
fdivr
test
and
(bad)
dec
push
jno
xchg
xchg
ror
fdiv
jge
mov
jmp
inc
call
adc
pop
stos
lds
xor
fs
pop
fsubr
call
imul
les
add
lds
jnp
sar
xchg
fwait
mov
mov
push
mov
adc
xchg
nop
mov
xor
jne
xchg
neg
xor
or
jp
ret
lock
mov
lods
sbb
dec
sub
sbb
mov
and
sub
jbe
int3
iret
loope
mov
mov
xchg
popa
(bad)
cld
test
push
lods
mov
mov
mov
enter
dec
(bad)
outs
cs
pop
stos
jl
cmps
call
sahf
repz
fnstsw
aad
inc
mov
cld
es
rcl
jae
fwait
xor
cmp
inc
stos
push
dec
mov
xor
test
movs
gs
es
xchg
das
leave
aam
mov
(bad)
lahf
mov
jle
xchg
mov
cmps
xor
(bad)
or
nop
sub
xchg
inc
jo
sbb
jl
mov
pusha
jmp
sbb
call
inc
inc
movs
pop
leave
xchg
sub
arpl
fdivr
pop
(bad)
jg
or
jle
lods
inc
jmp
xchg
xchg
out
mov
inc
pop
fmulp
pusha
lock
jne
mov
dec
(bad)
icebp
dec
lea
lea
sbb
pop
push
outs
arpl
or
cmp
inc
stos
cwde
lds
aad
cmp
cmc
push
es
jecxz
in
adc
std
pop
and
or
lods
or
scas
xchg
ret
mov
mov
sbb
test
cmp
scas
push
sar
mov
xor
jl
cmps
movs
sbb
jmp
in
and
and
mov
pop
shl
outs
and
jno
ds
push
lahf
mov
mov
inc
mov
cmp
mov
je
out
aas
adc
enter
adc
mov
arpl
mov
sbb
mov
adc
or
mov
xor
dec
cmp
into
pusha
dec
icebp
and
lock
retf
fld
fstp
mov
mov
dec
mov
xchg
lock
pop
cs
lods
push
add
shl
jae
push
jmp
xchg
fist
and
push
stos
cmp
sbb
inc
mov
cld
dec
cmps
xor
and
ret
in
pop
lods
lahf
add
xchg
jecxz
lea
cs
rcl
iret
call
add
aaa
frstor
in
adc
mov
jp
fdivr
jp
jae
adc
sub
sbb
push
push
rol
pop
xor
cmps
add
mov
enter
jle
xchg
ret
push
cs
je
aad
fidiv
jno
mov
jno
out
sbb
dec
push
enter
lahf
sub
fwait
std
(bad)
pop
ret
jge
mov
and
push
push
cmp
movs
sbb
xor
aam
sbb
mov
lods
ror
(bad)
shr
xor
inc
cmp
mov
xchg
mov
enter
sub
jecxz
push
xchg
cmp
inc
shl
xlat
jecxz
outs
lods
add
inc
ja
mov
mov
fdiv
xor
pop
xor
xchg
sbb
cwde
ret
and
jp
das
(bad)
and
into
bound
cwde
test
aaa
mov
or
push
xchg
pop
pop
popf
mov
mov
(bad)
jmp
lds
and
inc
mov
push
mov
es
sub
dec
xchg
in
sub
inc
movs
and
pop
das
ret
icebp
jno
movs
sar
pop
movs
aam
lods
add
cli
xchg
popf
adc
push
xchg
(bad)
jmp
xchg
xchg
addr16
sbb
cld
in
rcr
jp
sub
push
sub
lds
dec
int
dec
and
pop
mov
repz
aad
lea
jb
mov
mov
xor
jmp
mov
loop
jg
ret
dec
aad
(bad)
call
sti
sbb
cmp
mov
icebp
cld
in
leave
jne
sti
sub
cmps
mov
movs
push
inc
adc
sub
adc
out
(bad)
into
mov
imul
int
iret
jecxz
lds
dec
clc
adc
push
or
dec
in
mov
adc
push
imul
sub
and
scas
js
sub
cmps
(bad)
es
bound
popf
pop
xor
push
sahf
ins
popa
jno
cmp
sub
int
test
leave
ficomp
mov
rcl
sbb
shl
lock
shr
mov
in
loope
(bad)
cmps
rol
inc
shr
add
imul
pop
xchg
inc
int3
jmp
cmps
inc
arpl
xchg
adc
sbb
rol
adc
sbb
fst
stos
pop
out
push
inc
pminsw
push
lahf
adc
loop
int3
mov
retf
xchg
aad
or
pop
aad
pusha
pop
push
mov
mov
ds
pop
jae
xchg
ins
pop
and
fadd
jno
popa
iret
and
(bad)
sbb
jecxz
xchg
mov
push
test
xor
sbb
add
test
cmps
cmp
lea
sub
inc
sbb
dec
cli
push
adc
daa
lahf
pop
jne
inc
pop
jecxz
aam
fdiv
mov
gs
xor
mov
adc
mov
cmp
mov
pop
les
push
sbb
push
js
cmp
popf
fidiv
jo
xchg
xor
mov
sub
and
jne
cmps
mov
and
ss
js
jns
(bad)
and
sbb
xchg
lds
outs
add
mov
dec
mov
mov
outs
mov
or
idiv
pop
mov
jb
inc
cmp
ret
fs
push
sub
jp
test
fsub
mov
aam
inc
pop
jmp
into
(bad)
push
xchg
xchg
mov
sub
jmp
dec
scas
loope
add
(bad)
rol
cmp
je
push
and
xchg
add
pop
aad
jg
add
dec
stos
fs
movs
shr
mov
fmul
inc
jne
xchg
ret
sbb
jle
iret
and
xor
xchg
imul
push
mov
jne
aaa
inc
jo
and
arpl
cmp
inc
sbb
pop
dec
pop
fimul
in
mov
jnp
or
jp
lds
pop
xchg
outs
pop
push
popa
in
inc
xor
pop
and
pop
pop
mov
adc
xchg
(bad)
pop
aad
pop
es
mov
sub
pushf
inc
ret
(bad)
push
jne
out
repnz
or
mov
test
in
loope
bound
mov
fcmovbe
pop
adc
push
jge
inc
imul
cwde
or
lods
sub
cmp
pop
xchg
mov
push
pop
ror
push
scas
jno
push
or
xor
push
and
inc
mov
jmp
inc
neg
cs
pop
jo
(bad)
dec
jo
mov
push
push
pop
jb
cmp
mov
mov
movs
out
fs
loopne
dec
in
rep
scas
mov
mov
pushf
pop
ins
cmp
cmps
in
inc
cmp
fnstsw
loopne
lods
push
mov
mov
cmps
pop
xlat
lds
test
popf
pusha
loope
das
(bad)
hlt
ins
adc
cli
mov
mov
aas
(bad)
repz
sbb
in
retf
adc
enter
bound
imul
pushf
enter
ret
or
popf
push
mov
inc
push
mov
push
cmp
mov
xchg
push
or
movs
push
mov
sahf
cmps
xchg
pmaddwd
jmp
lahf
jl
and
jg
push
icebp
js
xchg
into
call
adc
xor
and
add
jbe
ret
lahf
mov
mov
push
xchg
push
xchg
rol
outs
cmp
xor
push
int3
xchg
cli
cmps
(bad)
or
stos
and
sub
lahf
jbe
fisubr
dec
xor
push
loopne
cmps
xchg
pop
daa
add
retf
jg
mov
jl
loop
push
jmp
inc
sahf
mov
fmul
scas
test
and
jp
mov
jno
and
mov
ror
mov
pop
(bad)
and
rol
stc
or
stos
pop
xor
pop
or
mov
inc
jmp
fild
and
sti
inc
loopne
jae
hlt
mov
mov
icebp
cmp
mov
loope
lods
pop
ficomp
xor
icebp
and
loopne
movs
dec
fisttp
pushf
and
and
adc
retf
sbb
adc
jno
je
pop
call
repnz
fsub
mov
jns
jb
not
loopne
sub
jg
jl
rcl
cs
cmc
pop
jae
adc
jbe
mov
bound
inc
aad
in
aam
cmp
cmp
add
sub
and
cmp
jnp
and
clc
jl
mov
sbb
xor
loope
sbb
div
dec
push
fbld
xchg
adc
mov
daa
les
and
mov
retf
jle
xchg
mov
mov
xchg
mov
cmp
mov
mov
dec
scas
dec
inc
cwde
push
es
imul
test
(bad)
call
inc
(bad)
sub
pop
jg
clc
or
pop
sub
push
xchg
je
and
mov
mov
movs
push
pop
push
add
leave
(bad)
imul
pop
test
xor
mov
add
xor
add
cmc
mov
fisub
mov
ret
push
inc
movs
mov
aas
jae
add
sub
jae
mov
xor
fmul
aad
pop
sbb
sub
shl
dec
mov
xchg
ficom
cmp
mov
loop
mov
xor
fsub
mov
(bad)
ret
adc
lds
int
out
cdq
mov
pop
lahf
add
sahf
outs
inc
sahf
push
or
add
arpl
cmp
in
loopne
push
dec
jge
in
sub
aaa
test
iret
jmp
imul
call
adc
inc
xchg
xchg
fnstsw
outs
fisub
add
bound
cld
adc
outs
sub
data16
jp
pop
jae
xchg
mov
out
es
or
cmps
adc
das
jg
or
adc
jge
mov
frstor
adc
movs
adc
lods
xchg
sti
jp
jae
jmp
daa
stc
mov
xchg
xor
pop
mov
ins
aam
mov
in
(bad)
mov
ret
inc
pcmpgtb
sub
ins
pop
arpl
sub
inc
xor
jmp
imul
imul
call
add
and
test
int
jge
cwde
sub
fldl2t
push
addr16
jns
mov
cmps
hlt
jo
jle
xchg
mov
loopne
push
test
aad
sub
mov
stos
je
push
(bad)
sahf
mov
add
pop
test
ret
stos
int3
pop
fimul
and
xor
xchg
xchg
push
mov
test
ins
sbb
lods
imul
sub
mov
fst
sbb
push
jl
rcl
inc
inc
movs
sbb
add
and
mov
sbb
movs
repz
inc
mov
or
mov
sub
out
in
cmp
adc
fld
pop
jns
dec
lods
retf
adc
arpl
bound
lock
dec
(bad)
xlat
jmp
icebp
popa
sahf
mov
cmp
aaa
sub
in
pop
ins
jmp
in
cmps
xchg
mov
sub
fidiv
jns
jae
xor
ss
out
imul
mov
xchg
aam
pushf
aaa
aad
fwait
mov
lods
sub
repz
add
cmp
push
leave
sbb
movs
jb
cmp
sbb
xchg
inc
sub
cmp
(bad)
in
mov
sub
pushf
sti
nop
test
sbb
add
and
or
push
xchg
imul
mov
fnsave
daa
hlt
and
iret
fs
leave
loop
das
aas
sbb
int3
cmps
mov
and
mov
aam
in
lds
mov
cmps
add
ins
push
les
out
cmp
stos
dec
adc
adc
pop
pop
jns
and
inc
add
ins
out
inc
ror
daa
sub
push
xor
or
fdivr
push
aaa
push
repnz
add
xor
pusha
cmp
std
mov
mov
lock
mov
inc
sub
ds
mov
cmp
repz
xor
cmp
fbld
mov
dec
in
out
lds
aas
push
cli
sbb
jnp
cmps
daa
test
sahf
xor
icebp
sahf
rcl
mov
ds
add
shr
imul
adc
adc
call
popf
ins
in
mov
mov
sub
int
xchg
or
jns
fdivr
or
jmp
mov
push
sub
sbb
add
(bad)
and
dec
pop
test
xchg
add
out
mov
pop
cmps
adc
push
data16
sub
jge
sub
push
cmp
dec
and
mul
les
cwde
jg
xchg
adc
ds
and
adc
dec
loop
(bad)
rep
scas
pusha
jae
push
sub
pop
fiadd
gs
push
sbb
retf
mov
sahf
adc
sbb
mov
dec
out
fsubr
aaa
mov
lds
pop
fadd
js
neg
jmp
pop
fmul
xchg
pop
(bad)
inc
ins
and
mov
lahf
mov
mov
adc
add
cmps
bound
retf
loopne
jge
(bad)
inc
jle
cmc
scas
jmp
add
shl
mov
mov
push
mov
mov
addr16
mov
and
das
xchg
sahf
iret
mov
jnp
jnp
pop
sub
mov
add
add
sbb
adc
test
jge
call
leave
daa
mov
ja
mov
jo
(bad)
adc
jnp
mov
dec
or
leave
pop
xchg
xchg
lods
shr
push
push
ret
push
loope
imul
leave
add
mov
gs
xchg
pop
mov
rol
jmp
xchg
rcl
cmc
mov
(bad)
retf
(bad)
aaa
daa
(bad)
stc
mov
jmp
iret
stos
xchg
push
jge
or
cmp
outs
test
mov
sub
jge
sbb
xchg
sbb
or
adc
dec
inc
push
movs
je
out
jmp
mov
or
jmp
xchg
xor
inc
dec
cmc
adc
stos
cld
cmp
inc
dec
sbb
in
lods
sub
cmps
dec
adc
add
add
xchg
dec
adc
frstor
mov
(bad)
pusha
inc
(bad)
mov
int3
mov
(bad)
outs
jmp
stos
aam
push
nop
int
int3
mov
xor
(bad)
or
pop
dec
cwde
add
jmp
mov
loope
out
std
jnp
push
mov
push
xor
adc
xchg
cmps
jo
sbb
fwait
xor
addr16
xchg
adc
loop
and
stos
add
out
retf
xchg
push
mov
retf
ror
mov
dec
pop
dec
mov
mov
repz
sbb
movs
in
cwde
lods
(bad)
sbb
daa
xor
dec
push
stos
dec
and
mov
imul
jmp
cmp
pop
out
xchg
jecxz
ins
cmps
add
mov
jmp
out
lods
outs
or
dec
int
inc
xchg
dec
cmp
sbb
adc
cmps
mov
and
ins
lds
jae
and
out
std
aaa
mov
dec
pushf
fstp
pop
je
mov
and
pop
add
hlt
dec
js
outs
in
or
popf
in
xchg
or
mov
rcr
pushf
push
cmp
retf
or
jno
pop
rol
xor
mov
adc
mov
inc
das
xor
js
push
retf
jns
addr16
jg
(bad)
out
(bad)
clc
cdq
popa
dec
add
call
sub
add
movs
cli
lods
push
idiv
test
iret
pop
jb
inc
pop
cmp
push
xor
stos
sub
lds
add
jecxz
jae
outs
fcmovnu
dec
in
mov
call
adc
(bad)
movs
shr
pop
in
out
mov
push
loopne
ja
adc
ds
mov
xchg
retf
and
mov
mov
mov
push
add
imul
jp
jne
ficomp
jno
cmps
push
jae
lods
lock
outs
push
ins
int
out
xchg
(bad)
sub
aam
xor
jl
loope
pop
pusha
out
inc
push
jbe
inc
xor
mov
jl
hlt
xlat
pop
(bad)
or
(bad)
scas
dec
mov
adc
jno
or
sub
stos
aam
in
mov
dec
aad
xor
pushf
pusha
jae
cld
gs
jae
mov
out
(bad)
jecxz
sti
outs
loop
lock
movs
mov
retf
pop
fmul
pop
sahf
mov
in
add
out
fdivr
add
cmp
sbb
sar
and
in
aas
jns
sti
hlt
mov
push
shl
inc
xchg
imul
out
leave
sub
mov
(bad)
and
dec
out
fcmove
pop
stos
dec
or
outs
mov
scas
ror
pop
mov
inc
push
mov
add
scas
xchg
jmp
dec
jg
push
mov
cmp
inc
mov
inc
push
seta
dec
data16
out
pop
mov
xchg
add
xchg
push
mov
(bad)
fwait
mov
dec
push
ret
inc
cs
js
shr
push
fwait
lods
call
pop
lea
fidiv
cli
popf
dec
xchg
pop
push
and
add
dec
gs
hlt
in
pusha
cmps
pop
mov
loopne
and
sbb
pop
dec
and
das
dec
ror
pop
stos
xor
push
sbb
shl
(bad)
fmul
xor
sub
sub
pushf
adc
jb
mov
xlat
pop
sub
or
aad
dec
das
jbe
cli
nop
retf
sub
push
xor
(bad)
push
and
retf
sbb
pop
sbb
mov
int3
mov
mov
leave
jmp
mov
call
(bad)
jle
scas
(bad)
pop
dec
stc
jae
cmc
std
pop
mov
test
arpl
out
fwait
jp
jo
fwait
cmp
test
icebp
or
adc
mov
scas
scas
imul
mov
mov
aaa
sub
shl
fisttp
xchg
mov
rcl
(bad)
push
ja
(bad)
popa
xchg
sub
mov
xor
not
xchg
test
lods
xchg
loopne
sub
push
xchg
jp
(bad)
arpl
scas
cmp
(bad)
jmp
shl
cs
adc
rol
repnz
push
inc
shl
push
mov
inc
retf
xchg
xchg
jae
or
clc
jge
mov
sbb
daa
jmp
pop
sbb
repz
cld
jnp
mov
and
fistp
sbb
dec
pop
iret
mov
cmp
mov
add
retf
arpl
test
retf
out
movs
mov
inc
xchg
outs
mov
xchg
ss
pop
dec
or
dec
inc
mov
fdivr
dec
push
ret
rcr
scas
sub
push
ja
mov
sbb
stos
mov
and
hlt
add
inc
mov
scas
push
sbb
xchg
add
pushf
inc
hlt
push
inc
mov
ins
jne
int
shl
test
fcmovbe
add
pop
jmp
and
neg
mov
pop
xchg
repnz
mov
mov
sub
inc
lds
popa
and
and
or
outs
in
fild
cld
mov
mov
ss
in
sub
div
mov
cwde
cmps
xor
jae
scas
adc
ds
idiv
mov
pop
cmc
sbb
sbb
scas
cwde
inc
sbb
out
xchg
clc
call
mov
into
loop
(bad)
cld
mov
push
and
inc
or
pusha
inc
daa
ins
hlt
jle
inc
test
mov
xchg
fnstenv
(bad)
mov
int3
imul
into
scas
inc
mov
pop
xchg
mov
xlat
ret
fisttp
jo
nop
shl
loop
into
push
daa
mov
sar
push
push
mov
adc
cmp
jmp
push
cmp
les
cmp
or
fwait
aad
popf
xchg
cmp
cmps
cld
fstp
or
shr
addr16
stos
adc
push
cmp
pusha
xor
inc
call
pusha
hlt
out
fistp
mov
cmps
jmp
movs
adc
rcl
pop
jnp
(bad)
cld
and
jbe
das
jnp
enter
jl
sti
push
mov
ss
jmp
cmc
mov
ror
mov
fbstp
mov
out
fcom
int
sbb
adc
adc
jmp
cld
mov
test
fcmovb
and
icebp
imul
push
stos
push
call
mov
stc
je
scas
xchg
sbb
fiadd
movs
pushf
add
dec
push
stc
std
mov
cmp
cld
lods
xchg
pop
jno
add
mov
rcl
pop
xor
push
mov
inc
mov
cmp
adc
cmp
(bad)
int
cwde
arpl
into
data16
sbb
xchg
xchg
aaa
inc
ins
push
arpl
mov
cs
fsub
adc
dec
loopne
ret
dec
push
jmp
push
xchg
cmp
add
xchg
cmp
in
ficomp
and
jmp
inc
test
fistp
or
adc
jl
stc
inc
dec
mov
add
pop
dec
mov
add
sub
loopne
xor
retf
adc
fdiv
xchg
(bad)
xor
es
sbb
or
xlat
xor
mov
pop
mov
jb
and
xor
inc
data16
icebp
test
nop
in
add
lods
fadd
pop
xchg
les
jecxz
mov
cwde
in
into
les
jb
xchg
ss
mov
in
inc
mov
pop
int3
lea
shr
push
mov
dec
add
test
mov
leave
mov
mov
mov
in
pop
call
xchg
and
xor
iret
test
rcl
leave
xchg
mov
jl
data16
arpl
ins
xlat
xchg
fdiv
sbb
in
and
lea
pop
or
das
rcr
ss
inc
push
pusha
mov
bound
jo
icebp
jb
inc
xor
not
repnz
neg
jne
mov
fld
push
xchg
sbb
xchg
inc
push
outs
lods
and
ret
add
pop
ins
pop
jecxz
inc
mov
stos
outs
outs
cld
call
outs
inc
mov
addr16
inc
add
rol
out
es
adc
sub
sahf
sub
dec
xchg
dec
cmps
lock
stos
into
mov
enter
mov
jg
mov
pop
les
call
lods
lahf
mov
data16
fs
jecxz
stos
pop
inc
push
loope
jp
dec
aas
data16
aam
leave
adc
js
xor
fild
xor
cmc
xchg
or
mov
xchg
test
or
(bad)
adc
and
mov
mov
outs
jl
jb
mov
and
test
test
mov
cmps
imul
retf
sub
retf
out
mov
dec
aas
mov
dec
loop
movs
jb
sub
stos
push
ds
aam
pop
sub
or
ror
dec
jmp
imul
inc
jo
push
aaa
ins
out
movs
xchg
cmp
loope
pusha
cdq
mov
jl
icebp
jae
mov
jae
scas
jmp
xchg
fs
dec
sbb
xor
jmp
xchg
into
dec
sub
(bad)
aas
mov
retf
push
call
outs
mov
jns
in
ins
push
mov
xchg
cwde
fld
test
scas
stc
movs
hlt
inc
neg
into
xor
pushf
sbb
xchg
aaa
mul
movs
(bad)
adc
dec
outs
fst
cmps
mov
ficom
sub
inc
or
add
or
mov
test
jo
sbb
jo
loope
xor
mov
fist
xor
mov
push
push
icebp
iret
scas
shr
mov
inc
jg
iret
cmps
and
jg
outs
gs
or
std
in
fadd
jp
stc
dec
pop
sbb
bound
jl
loop
inc
jg
add
sbb
jo
inc
out
sub
loope
cwde
or
repnz
jge
xor
adc
xor
loopne
jae
aas
dec
lock
mov
mov
mov
jnp
push
inc
mov
inc
dec
ret
inc
dec
cdq
adc
lods
push
rcl
(bad)
in
add
daa
or
jnp
cmps
inc
mov
xchg
popf
push
lods
add
jle
shl
ja
mov
pop
jno
pushf
iret
or
cs
pop
jl
xchg
sbb
ret
xchg
pop
xor
in
popa
pop
mov
cmps
popa
fstp
push
xor
cmp
shl
xchg
push
xor
or
xor
cmp
retf
pop
aam
test
or
call
sub
push
ins
fcomp
jl
repz
xchg
inc
imul
popf
(bad)
pop
addr16
mov
test
jecxz
out
xor
aas
repnz
leave
int3
or
mov
fwait
(bad)
(bad)
sti
and
inc
jmp
pushf
out
sbb
sbb
cwde
sbb
out
stos
jmp
ss
adc
sub
retf
mov
and
and
sub
rcl
rcr
into
pop
jb
shr
push
add
and
mov
pop
xchg
data16
ficom
sar
jmp
call
out
jmp
dec
cmp
ret
inc
movs
ficomp
sbb
(bad)
cwde
nop
mov
ret
pop
sub
cmps
jnp
push
dec
movs
inc
pop
pop
lock
push
movs
pop
dec
fs
push
clc
xor
inc
cld
xor
pop
out
mov
icebp
mov
xchg
dec
test
mov
out
aad
fisubr
jecxz
push
dec
aam
sbb
cmp
int3
jb
ror
ds
cmps
adc
xor
mov
lods
daa
repnz
addr16
inc
lds
mov
sbb
cmps
sub
pop
test
mov
test
push
mov
iret
mov
icebp
cdq
jae
pop
scas
sbb
push
sub
adc
cld
call
ds
jno
cmp
or
or
ficom
jmp
popa
lahf
jae
das
xchg
fwait
retf
xlat
shl
and
pop
push
jle
in
add
push
enter
jbe
(bad)
inc
lock
fsub
dec
int
xchg
bound
mov
aaa
call
cmp
int3
pop
fimul
ja
add
push
data16
pop
lods
xchg
fwait
dec
addr16
mov
mov
inc
and
data16
sub
dec
retf
sub
jecxz
xchg
popa
not
inc
bound
adc
js
dec
dec
jne
mov
push
rol
or
add
leave
or
call
push
add
xchg
stos
loope
jecxz
pop
adc
sub
ret
mov
cmp
mov
jb
stos
mov
mov
dec
je
push
(bad)
sar
and
(bad)
sub
jbe
and
cmp
and
cld
(bad)
sti
imul
jnp
adc
ja
or
out
rep
pushf
sbb
retf
jg
test
push
cmp
push
call
xchg
movs
es
cli
sbb
hlt
sub
jle
repnz
push
xor
dec
xor
pop
rol
sub
mov
(bad)
out
sub
sub
scas
in
std
(bad)
cli
(bad)
mov
inc
cmp
das
mov
aaa
lahf
and
sbb
mov
or
pop
push
shr
jo
jge
ja
lock
jns
ret
fld
push
push
out
mov
(bad)
pop
dec
test
call
(bad)
xchg
fwait
pop
push
push
push
jns
bound
mov
cmc
pop
leave
cmps
rcr
icebp
retf
and
(bad)
stc
ins
(bad)
test
dec
xor
push
test
hlt
pop
imul
popa
inc
mov
add
pop
cmp
rcl
fs
cwde
mov
sbb
pop
idiv
pushf
xlat
popf
push
mov
ss
mov
pop
adc
sub
cld
inc
shl
mov
push
in
mov
push
fnstsw
mov
jb
xchg
jo
ins
addr16
sar
dec
shl
xlat
sbb
xchg
push
or
cmp
sbb
push
mov
pop
sbb
fst
(bad)
xlat
xchg
fs
(bad)
and
arpl
xor
ja
lock
and
and
dec
inc
ret
test
fwait
imul
fnstenv
movs
xor
mov
adc
das
xchg
or
jle
mov
imul
and
dec
arpl
sub
pop
ja
iret
ins
lods
mov
imul
push
xor
cmp
movsx
sbb
test
sbb
cmp
push
mov
dec
outs
inc
pushf
sbb
pop
xor
or
xor
rol
jmp
das
fmulp
in
loope
(bad)
push
xchg
jb
pusha
inc
sbb
mov
adc
(bad)
std
mov
jno
in
out
cwde
enter
and
jmp
add
jbe
out
add
mov
mov
lods
nop
adc
in
scas
cs
xor
cmps
sbb
fisttp
jnp
mov
stos
pop
iret
adc
aaa
in
jae
or
cs
sbb
rcl
not
cmp
stos
mov
xor
dec
jbe
pop
leave
sub
test
nop
mov
cld
and
loope
xor
jmp
hlt
cs
mov
rol
scas
pop
ret
push
cwde
mov
test
add
dec
test
ret
cwde
inc
pusha
in
push
push
imul
sbb
pop
xchg
ins
add
add
popf
pop
adc
fs
jbe
mov
xchg
unpcklps
cmps
push
(bad)
in
lods
int3
retf
add
je
lea
push
adc
out
or
cld
inc
adc
dec
test
rcl
and
nop
mov
in
fsubr
arpl
data16
pop
mov
xor
ficomp
cmp
inc
sbb
pushf
mov
mov
push
fcom
cmp
or
into
in
add
push
push
std
loope
pushf
in
mov
(bad)
xor
retf
mov
mov
xchg
pushf
sbb
sahf
sub
adc
pusha
addr16
ficomp
sbb
(bad)
ficom
jns
jnp
repnz
enter
push
jno
xor
pop
jb
out
inc
lods
push
adc
pop
or
das
test
dec
std
dec
out
push
jg
mov
fiadd
lds
mov
pop
stc
mov
cmp
test
es
jnp
cmps
pop
mov
mov
imul
inc
arpl
dec
sti
mov
xchg
ins
pop
jl
cs
shl
sub
call
xor
leave
aam
jne
outs
or
inc
cmp
fdivr
xchg
aaa
or
mov
mov
jb
jmp
daa
xchg
loopne
inc
xchg
lds
mov
mov
cmp
jge
(bad)
call
mov
fwait
mov
cwde
in
push
and
cwde
mov
jge
(bad)
jge
push
std
jne
stos
sbb
inc
sub
and
xor
imul
push
mov
add
push
out
push
push
or
inc
cmp
xchg
inc
icebp
xor
mov
cld
sbb
mov
or
iret
mov
push
push
xchg
pop
or
mov
mov
jno
sub
addr16
xlat
fwait
cmp
push
xor
mov
(bad)
movs
xor
xchg
cld
jle
xor
pop
mov
xchg
xchg
mov
or
rcpps
adc
pop
sbb
out
ja
call
xchg
cmps
mov
lahf
inc
int3
ja
test
xor
push
retf
fstp
lods
xchg
mov
out
mov
movs
xor
cmp
pop
or
jg
mov
cmc
sub
aaa
push
push
inc
nop
or
add
mov
pushf
gs
fcom
ret
xor
iret
lea
adc
sub
fimul
xor
sti
jb
les
popf
xchg
shl
scas
xchg
lock
idiv
test
(bad)
mov
cmp
in
inc
retf
fs
sbb
sar
daa
xchg
ins
movs
jb
jg
aad
mov
jns
add
xchg
ds
in
call
mov
cli
adc
xor
ss
jno
add
or
lods
pop
out
adc
cmp
outs
stc
jmp
push
sub
push
lods
jb
mov
mov
mov
stc
xchg
stc
mov
xchg
icebp
push
mov
mov
std
mov
pop
jecxz
call
retf
mov
sbb
push
jo
mov
push
add
(bad)
pop
xchg
cdq
jmp
into
out
xchg
fst
in
xlat
int
(bad)
clc
ss
mov
mov
xchg
in
ja
stos
jp
mov
cmps
popf
and
cli
hlt
sub
dec
fwait
fwait
bound
mov
mov
xchg
es
jns
in
mov
lds
fwait
(bad)
sbb
int3
jg
push
ins
mov
dec
mov
test
mov
mov
jle
mov
add
mov
inc
mov
mov
xor
iret
mov
(bad)
fisubr
xor
outs
xchg
mov
push
push
stc
repz
loopne
ins
int
loope
bound
clc
jle
pop
mov
daa
popf
test
lods
dec
movs
nop
jmp
aas
ins
pop
adc
xchg
and
jp
cmp
push
xor
data16
cmp
or
xor
adc
dec
lods
fcom
fmul
test
ja
fild
push
xchg
adc
mov
(bad)
aaa
lock
xlat
fsub
mov
sub
dec
push
pop
(bad)
(bad)
sbb
rol
jmp
cmp
mov
pusha
pop
inc
leave
popa
enter
loopne
cdq
js
fmul
mov
les
movs
pop
adc
rol
mov
lock
add
pop
out
cdq
fstp
dec
push
ficomp
call
cs
test
sbb
cmovnp
dec
inc
mov
mov
sbb
mov
neg
add
mul
sub
sahf
jns
call
aam
dec
dec
int3
mov
xlat
sbb
pop
mov
repz
mov
xchg
std
ja
leave
push
repnz
mov
je
dec
cmp
rcl
push
inc
pop
mov
xchg
adc
cwde
xor
xchg
xor
fld
loop
sub
movs
out
adc
stc
or
add
(bad)
bound
cmp
(bad)
xor
push
(bad)
cmp
push
jnp
popa
cmps
pop
daa
stos
adc
jmp
pop
movs
popf
mov
out
and
(bad)
and
push
mov
pop
sti
jae
sub
push
cmp
js
test
cs
inc
cmp
pushf
jb
outs
or
aam
retf
adc
xor
push
ja
rcl
jbe
cmps
xlat
stos
aad
xor
fsubr
pop
scas
imul
mov
test
pop
or
mov
jecxz
xchg
daa
or
pushf
push
(bad)
pop
adc
pop
pop
or
ret
leave
dec
adc
lds
shl
lahf
shl
enter
cmp
inc
jnp
jbe
les
mov
and
pop
push
js
push
ins
push
add
jns
hlt
and
or
test
jb
add
das
mov
add
pop
std
(bad)
mov
xchg
popf
cmp
jmp
add
(bad)
repnz
ror
sbb
inc
dec
sub
call
out
les
jb
cmp
push
xchg
sti
sbb
push
inc
push
fild
(bad)
cmps
mov
mov
sub
daa
popa
push
call
pop
sahf
int3
fcos
mov
ins
pop
data16
repnz
xchg
std
sti
bound
js
or
jmp
add
pushf
popa
std
int3
enter
xor
inc
fldenv
dec
and
std
ficomp
xor
add
inc
mov
movs
mov
jecxz
cmps
xchg
int3
scas
sub
dec
and
inc
hlt
scas
or
pcmpeqd
add
retf
xchg
adc
adc
les
jl
(bad)
fild
rcr
jb
or
cmc
add
cwde
and
and
push
les
mov
and
fadd
add
mov
in
aas
les
test
xchg
mov
push
and
mov
addr16
mov
inc
(bad)
dec
lahf
fsubrp
cmp
retf
and
icebp
(bad)
fmul
lds
aaa
rcl
sar
and
add
mov
fsubrp
xchg
fcom
sub
sub
mov
cmp
mov
icebp
mov
(bad)
jecxz
aas
test
cdq
stc
(bad)
mov
adc
outs
add
fs
loop
cmc
xchg
imul
ror
sti
test
rcr
and
neg
jmp
(bad)
lock
sub
adc
repnz
push
test
push
mov
shr
mov
(bad)
mov
fdiv
adc
out
clc
imul
dec
adc
inc
push
icebp
mul
inc
cmp
int
sub
stos
push
fdiv
sbb
pop
mov
aad
cmp
add
mov
call
out
cmc
clc
lahf
stc
call
sub
xchg
cmps
push
pop
mov
push
dec
jnp
xor
adc
imul
mov
in
lea
inc
or
dec
add
mov
cmc
test
mov
pushf
or
imul
sahf
data16
mov
std
pushf
mov
out
mov
fcmovbe
sbb
push
push
cmp
ins
pop
mov
shl
push
dec
idiv
std
mov
xor
lods
cmp
inc
shl
mov
stc
test
shl
cli
cmp
cmp
bound
shr
clc
not
mov
in
add
int3
push
hlt
cmp
mov
mov
inc
ficom
sahf
das
ja
dec
rcl
jbe
mov
push
push
mov
jne
push
cld
dec
iret
cmc
pop
clc
ret
sbb
pop
icebp
or
loope
into
add
push
pop
rcl
(bad)
(bad)
in
add
xchg
jb
jo
sahf
jp
cmp
sbb
mov
push
adc
xchg
(bad)
shl
call
movs
add
add
(bad)
dec
cdq
dec
push
mov
pop
shl
mov
in
mov
dec
jae
inc
xchg
inc
mov
cwde
cwde
pop
push
(bad)
test
cmp
sub
sahf
push
xor
out
outs
xlat
xchg
inc
or
cld
test
push
inc
stos
fwait
mov
cmps
ror
mov
test
cmp
ror
rol
jnp
dec
and
das
lahf
push
fmul
pusha
loopne
add
mov
cmp
xchg
or
mov
jbe
xchg
push
cwde
into
lds
add
inc
jns
xor
ds
xchg
push
ins
xchg
std
fwait
or
mov
pop
xor
(bad)
cs
movnti
ins
add
dec
inc
call
shl
sar
push
add
xor
sub
ss
cdq
in
enter
not
or
or
ss
sub
lock
mov
adc
rol
packsswb
xor
jo
mov
mov
push
scas
and
pop
cli
mov
retf
cdq
mov
inc
sub
test
shr
cmp
aam
cmp
push
cmps
mov
xchg
push
sub
or
ror
stc
and
dec
or
cs
jbe
pop
int
popa
mov
ror
enter
push
mov
rcl
cmps
adc
sbb
adc
sbb
mov
sub
push
sahf
faddp
out
jne
in
or
stos
sub
sub
dec
mov
inc
imul
ret
and
jle
lods
ds
jno
xchg
arpl
adc
les
push
sub
imul
scas
xchg
stos
rcr
sbb
js
cmp
jbe
popf
add
nop
and
add
leave
or
jbe
adc
test
dec
jo
jge
sbb
adc
pusha
sti
fnsave
leave
xlat
push
jb
fnstcw
mov
fidivr
retf
cmovns
jp
in
lea
mov
loopne
ss
rcr
push
and
mov
jl
push
xchg
add
adc
sbb
in
cmp
dec
mov
sbb
aas
in
mov
xor
sahf
arpl
jbe
inc
cwde
retf
inc
xor
out
mov
mov
int3
pop
cmp
loope
inc
fbstp
lods
or
xchg
das
and
add
inc
out
fisttp
dec
dec
je
mov
add
push
(bad)
jmp
push
inc
fcmove
xchg
pop
or
ret
jge
and
ret
mov
sub
jmp
movs
mov
push
loop
shr
dec
mov
mov
out
popa
pop
pop
dec
ins
inc
mov
mov
sub
push
into
inc
push
push
stc
ins
out
outs
mov
mov
push
mov
adc
mov
push
imul
jecxz
fwait
mov
sbb
and
pop
sahf
pop
mov
rol
add
mul
jl
ja
and
mov
data16
in
mov
mov
mov
mov
inc
(bad)
and
outs
adc
or
push
stos
call
lds
adc
sub
fisttp
outs
pop
jbe
mov
cmp
scas
xchg
mov
lea
add
pop
inc
pop
dec
mov
popf
pusha
(bad)
jmp
add
in
mov
ret
dec
aas
sbb
inc
(bad)
or
lahf
sub
loopne
inc
(bad)
outs
push
dec
arpl
push
jg
add
add
test
add
jno
out
or
fidivr
inc
xchg
retf
xchg
sahf
outs
mov
add
fisttp
xchg
mov
or
mov
pop
or
lahf
shl
movs
mov
pop
sub
dec
push
into
push
ror
fcom
iret
xor
mov
ins
daa
cmps
movs
and
xchg
adc
add
movs
aad
sub
pop
xor
mov
jb
bound
adc
call
sbb
jnp
nop
cld
daa
mov
jne
sbb
cmp
cmp
stc
inc
pop
dec
dec
in
mov
dec
popf
inc
cmc
inc
jno
in
add
(bad)
in
int
jo
and
aaa
add
add
pop
sbb
in
xor
shl
jne
sbb
cmps
and
or
jb
pop
test
(bad)
cmp
mov
xchg
sbb
pop
push
xchg
inc
jb
pusha
stos
movs
fisubr
inc
mov
aam
cmps
mov
addr16
cmps
mov
es
clc
rol
jle
fwait
mov
add
xchg
cmp
mov
nop
in
xor
push
and
cmps
sub
add
jl
inc
cld
leave
aam
test
mov
(bad)
bound
inc
scas
add
ret
or
movs
ins
(bad)
sar
pop
cdq
in
inc
dec
das
into
lods
cmp
pop
lock
cmc
jnp
push
nop
sti
or
pop
stc
pop
fxch
(bad)
fistp
xchg
ins
mov
sub
test
aas
jg
mov
and
mov
bound
sub
sub
out
nop
xchg
fiadd
mov
cmps
cwde
in
xor
inc
sbb
scas
loop
mov
cmps
pop
inc
mov
cmc
mov
sbb
ins
shl
cmp
push
jnp
jae
jnp
mov
ret
jge
push
jmp
push
loop
mov
cmp
cwde
jmp
out
mov
shl
movs
push
gs
adc
test
shl
xor
xor
jle
mov
push
xor
mov
in
ror
mov
or
outs
cmp
add
cmp
adc
je
and
popa
mov
mov
rol
pusha
mov
add
pop
dec
retf
inc
jo
inc
jo
popa
mov
pop
xchg
sub
leave
jmp
push
push
mov
aas
mov
or
cmp
shl
pushf
mov
stc
cmp
das
mov
mov
ds
jne
pushf
sbb
call
xor
std
add
or
adc
sbb
jecxz
sub
xchg
push
jne
jle
loop
scas
cmp
xchg
fidiv
test
xor
std
dec
enter
mov
xor
out
pop
mov
mov
sbb
movs
scas
pop
imul
jmp
cdq
aad
pop
scas
jae
popf
inc
aad
mov
and
shl
jo
test
ror
(bad)
lods
cwde
pop
mov
xor
jge
mov
xor
cmp
aaa
(bad)
xchg
mov
sar
dec
dec
enter
push
jne
ins
sbb
outs
mov
bound
ins
sub
and
ss
pushf
inc
adc
rcr
xlat
fnsave
xor
lods
jp
add
dec
popa
sub
push
jnp
cld
nop
outs
lds
mov
stc
outs
call
push
neg
lods
out
sub
jno
mov
aad
je
sbb
ss
xor
daa
cmps
es
(bad)
scas
ins
(bad)
jbe
fld
or
lds
in
cmp
mov
mov
push
(bad)
jnp
iret
xchg
shl
int3
cdq
sbb
mov
ret
retf
repz
add
pop
dec
xor
cmps
out
popa
pop
scas
mov
jmp
xor
xor
adc
outs
aas
xchg
rol
rcl
push
nop
xchg
call
pop
repnz
cli
mov
(bad)
daa
(bad)
popf
rdtsc
fadd
mov
mov
ja
cmp
sub
std
xchg
out
(bad)
mov
mov
and
cmps
mov
sbb
xchg
outs
mov
pop
in
push
lods
push
mul
arpl
scas
nop
xchg
aas
scas
mov
mov
movs
nop
ins
stos
js
icebp
push
or
push
cs
and
pop
gs
sbb
sub
pop
push
test
lahf
mov
inc
clc
retf
jb
jp
mov
ret
fadd
xor
cmp
adc
test
pop
mov
(bad)
hlt
or
and
outs
ss
cmc
shl
jo
fimul
scas
xor
push
jmp
sahf
pop
sti
cmp
lock
ds
mov
gs
jne
js
mov
jns
fcomip
in
ins
test
ret
pusha
jne
or
xchg
adc
ja
pop
stos
and
es
sbb
xchg
sbb
(bad)
loop
xchg
dec
scas
js
sub
movs
sahf
inc
shr
movs
inc
pop
pop
fistp
pop
mov
cmp
push
pushf
cmp
jmp
cmp
sbb
in
pop
mov
into
lds
lea
mov
xchg
mov
(bad)
and
mov
mov
lahf
addr16
sub
xchg
aas
cwde
js
sub
mov
mov
pop
jmp
sbb
gs
dec
add
adc
xchg
inc
test
or
ds
lods
cmps
pop
pop
out
rdmsr
cwde
aaa
jbe
dec
enter
adc
jmp
pop
and
cwde
jp
repz
cmp
lds
inc
jns
iret
inc
cmp
xor
addr16
ret
fld
xchg
push
nop
and
ins
mov
xchg
cmp
data16
(bad)
add
out
jbe
sbb
call
jp
mov
call
and
push
xor
neg
add
popa
or
mov
mov
xchg
nop
out
lea
test
add
mov
shr
pop
shl
adc
cmps
xlat
jl
ret
shr
repnz
or
sbb
movs
cmp
hlt
not
jno
ror
(bad)
outs
int
adc
jnp
sub
fiadd
inc
setne
addr16
and
add
dec
cmp
sub
ret
adc
mul
jmp
mov
into
retf
sub
inc
jmp
mov
aad
pop
repnz
pop
and
scas
xor
(bad)
(bad)
and
scas
cld
arpl
mov
dec
mov
xchg
out
push
aam
fmul
outs
movs
xchg
aas
enter
test
mul
push
dec
(bad)
adc
je
ret
inc
adc
(bad)
jo
(bad)
fsubr
pop
dec
aaa
add
addr16
fiadd
cwde
or
xchg
(bad)
xlat
push
mov
inc
fdivr
cmp
adc
xchg
jne
or
(bad)
aad
mov
scas
adc
test
jmp
fs
outs
or
push
jbe
mov
std
jae
jg
aam
mov
out
and
test
mov
dec
in
aad
mov
mov
mov
dec
cmp
dec
adc
mov
lahf
hlt
gs
rcr
cmp
xchg
fstp
pop
fdivr
cld
push
ret
mov
pop
jge
jmp
push
outs
aad
popa
xor
push
mov
das
mov
pop
cmp
sub
sbb
xor
or
pop
fwait
pop
push
mov
sbb
scas
ror
sbb
mov
psubq
sub
and
sub
adc
cmp
outs
pop
mov
or
sbb
jg
push
jmp
push
or
pop
or
ins
jbe
cwde
pop
lock
in
lds
adc
jmp
jne
(bad)
sub
jbe
int3
and
xor
add
jge
dec
mov
or
cmp
nop
cli
xchg
mov
xor
fcmove
xchg
jmp
and
mov
pop
ja
inc
and
cld
mov
jmp
dec
sar
daa
xor
and
cmp
mov
pop
or
inc
jae
xlat
mov
push
lock
pop
dec
popf
fidiv
lods
mov
rol
clc
iret
inc
pop
jecxz
inc
mov
mov
scas
cmp
fstp
pop
add
test
pop
test
std
aas
pusha
int
push
icebp
imul
xor
push
xchg
out
mov
push
bound
inc
or
and
xchg
ins
js
dec
and
jo
pop
repnz
push
(bad)
mov
mov
sub
mov
mov
lds
iret
dec
movs
test
ds
mov
bound
dec
adc
lods
adc
arpl
sub
mov
or
aaa
cli
ror
sub
cli
fisubr
xchg
jmp
xor
mov
mov
jbe
mov
and
rcr
push
sbb
movs
scas
(bad)
pop
cmp
push
rol
jae
in
pusha
in
and
inc
and
or
and
repz
lock
xor
(bad)
rcl
jno
adc
inc
adc
jp
or
leave
mov
pop
cli
fucomip
cmps
fimul
inc
clc
xlat
cmp
mov
into
push
repz
loop
push
sbb
mov
cmp
dec
cmp
and
rol
jmp
aaa
dec
sar
ss
adc
mov
pop
push
stc
or
outs
iret
inc
test
test
mov
out
add
sub
jp
nop
cmps
stc
mov
(bad)
push
call
fnstsw
es
(bad)
hlt
jb
pop
js
cmp
sbb
inc
popf
mov
xchg
cld
pop
pusha
wrmsr
or
mov
cmc
push
enter
lahf
mov
inc
mov
jmp
jge
leave
mov
jmp
ret
jmp
push
and
add
pop
(bad)
adc
adc
mov
and
out
push
xor
in
popa
and
ja
or
inc
cdq
jne
loope
cmp
movs
inc
push
aad
add
dec
mov
je
dec
sti
retf
pop
nop
dec
ja
scas
xchg
movs
push
das
fwait
popf
out
mov
xchg
fneni(8087
push
or
mov
rol
jo
xlat
dec
inc
sub
xlat
sub
xlat
shl
addr16
mov
jge
add
pushf
movs
push
sahf
jbe
sub
aas
rol
call
pop
mov
xchg
inc
mov
mov
inc
adc
jns
outs
test
js
outs
mov
jge
jmp
jmp
mov
cmp
pop
jmp
imul
(bad)
outs
jge
movs
mov
mov
mov
inc
repnz
sub
mov
dec
sar
or
add
xor
lods
adc
xchg
jle
js
int
pop
js
ja
inc
adc
jo
inc
adc
gs
sbb
and
adc
loop
adc
or
dec
push
jge
adc
call
into
sar
mov
add
imul
repz
jbe
cmps
push
mov
adc
popf
cmovo
pop
jmp
jae
sahf
daa
jne
dec
call
xor
mov
sbb
sbb
add
sbb
inc
mov
xchg
push
popa
stos
inc
sub
cmps
xor
std
arpl
inc
inc
or
xchg
mov
push
xor
fs
jne
inc
es
sub
or
movs
rol
mov
nop
adc
push
jmp
pop
add
(bad)
inc
btr
retf
hlt
hlt
test
sahf
jae
mov
cmps
mov
in
repnz
addr16
push
test
in
popa
xchg
add
in
out
xchg
sub
fwait
and
mov
add
enter
or
iret
jp
shl
in
push
mov
jmp
mov
sbb
xor
mov
faddp
mov
fimul
fst
mov
mov
and
aas
lahf
fisttp
sbb
xor
test
pop
or
std
mov
(bad)
fwait
sbb
mov
in
add
iret
mov
xchg
int3
and
std
int
mov
jmp
pop
add
inc
int
test
mov
popf
dec
xlat
retf
mov
outs
inc
js
fwait
or
and
cmc
addr16
inc
je
or
jne
adc
mov
cmp
dec
popf
gs
mov
mov
pusha
out
cs
mov
pop
pop
inc
push
retf
mov
cwde
out
inc
fcmovnu
or
(bad)
sti
out
call
adc
jmp
fld
add
ret
ins
jne
xor
push
jb
and
nop
sbb
mov
ds
jae
cmps
jle
dec
add
inc
and
retf
push
inc
aam
xchg
jp
icebp
cmp
adc
cmp
and
add
mov
mov
jo
cmc
(bad)
ret
inc
mov
jae
and
jle
or
mov
sub
das
push
jo
jne
loopne
dec
in
enter
or
xchg
mov
mov
(bad)
jmp
rol
push
jne
mov
jae
call
aaa
cmp
and
mov
stc
xchg
push
loopne
xor
inc
mov
call
into
sbb
inc
pop
mov
(bad)
xor
data16
pop
bound
inc
sub
add
jmp
cdq
popf
test
sbb
in
push
adc
fst
jp
and
sub
and
mov
xor
push
(bad)
sub
xchg
(bad)
pop
mov
mov
addr16
retf
and
sbb
mov
inc
adc
rcr
loopne
loope
xchg
push
dec
sbb
dec
(bad)
stc
push
xor
dec
ret
into
icebp
inc
ret
stos
nop
xor
inc
mov
imul
fsubr
mov
jae
sbb
fisubr
mov
jecxz
fs
fld
ss
frstor
inc
inc
in
aaa
add
out
jecxz
pop
xor
cmc
dec
cmc
out
adc
data16
out
(bad)
pop
loopne
ds
into
xchg
sbb
push
ror
retf
mov
mov
mov
stos
add
mov
add
pushf
xchg
addr16
push
lahf
push
shl
in
jmp
jp
popf
icebp
xchg
in
call
mov
shl
(bad)
aad
sbb
add
pushf
dec
sub
push
mov
jle
and
outs
jmp
popa
sub
push
sti
inc
inc
rcl
(bad)
inc
and
jge
cmp
mov
push
push
pop
and
cmps
mov
sub
cmp
mov
add
pop
repnz
xor
in
out
jbe
dec
mov
outs
push
xchg
xor
inc
inc
std
or
or
out
xchg
pop
call
add
dec
pop
aad
sahf
call
ret
xchg
scas
movs
push
icebp
dec
rcr
or
outs
sub
cmps
adc
mov
into
add
pusha
not
fst
xchg
dec
movs
loopne
arpl
jmp
or
leave
jmp
sbb
fadd
imul
icebp
cmps
xchg
and
(bad)
jp
xor
pop
lea
test
cli
in
imul
xor
push
mov
and
jmp
(bad)
rep
fiadd
mov
pop
loopne
xchg
aaa
pop
inc
mov
fsubr
pop
xchg
aas
and
sub
cld
lods
mov
jb
je
mov
movs
or
xor
add
pop
push
push
out
aaa
sub
xor
mov
xchg
jp
jg
rcl
test
sub
ds
mov
pop
jl
or
jge
jb
out
sahf
into
mov
inc
mov
mov
jne
add
sub
jmp
sbb
into
jge
cdq
and
lea
call
std
daa
push
mov
shr
inc
inc
arpl
jmp
push
js
sbb
xchg
xchg
pop
inc
jecxz
push
jb
fstp
js
xor
jo
fld
mov
add
out
mov
adc
scas
sub
fidiv
sub
mov
push
mov
and
or
jmp
push
ret
pop
inc
push
in
mov
mov
push
pop
enter
popf
dec
fimul
mov
jecxz
xor
pop
cmp
pop
inc
xor
rol
or
icebp
sbb
int
or
test
xchg
jg
jecxz
adc
popa
ret
and
xchg
cmc
enter
cld
sub
inc
fwait
cmp
mov
dec
push
sub
add
mov
sbb
mov
movs
or
pop
scas
adc
dec
jl
lahf
ss
jmp
aaa
pop
loope
dec
movs
mov
cli
mov
and
mov
cwde
hlt
loopne
out
sbb
inc
ficom
pop
loop
cmp
xor
leave
pusha
mov
mov
push
jns
test
xor
sbb
xor
mov
cmps
mov
ja
mov
xor
fnsave
dec
jmp
sbb
adc
ja
add
mov
sbb
and
cwde
add
outs
mov
jl
xchg
mov
or
add
and
inc
sub
ret
pop
jl
push
cwde
retf
sub
jge
pop
pop
sub
push
mov
add
dec
(bad)
stc
mov
fld
out
fsub
add
das
loopne
mov
ins
iret
or
movs
ins
xchg
and
inc
jmp
adc
fs
ins
xor
fwait
pop
adc
cs
push
and
fst
ret
jle
icebp
and
ins
sub
adc
add
loope
ret
cld
je
mov
adc
js
pop
cbw
add
add
out
mov
sbb
(bad)
jl
jp
jnp
neg
mov
jmp
xlat
retf
sti
or
sbb
out
cmp
add
loope
popf
jae
adc
sbb
jmp
out
ds
cmp
pop
and
rcl
dec
jae
add
mov
inc
mov
xlat
scas
jmp
or
push
jns
pop
adc
adc
inc
xchg
sahf
test
(bad)
movs
(bad)
(bad)
and
push
push
hlt
cmps
add
or
retf
ficom
stc
or
out
leave
ds
push
cmp
and
dec
dec
sti
daa
jnp
xlat
arpl
int
jmp
cwde
inc
je
and
pop
pop
jg
inc
lods
dec
pushf
daa
sub
mov
push
ror
in
mov
mov
pop
addr16
rol
cs
dec
sbb
in
movs
mov
jno
aaa
jl
mov
inc
hlt
ins
aad
inc
xor
push
scas
retf
call
std
dec
popf
xchg
cmc
pop
stos
aaa
inc
cmp
scas
sbb
push
movs
test
xor
movs
sub
aaa
sbb
inc
and
mov
xchg
jbe
xchg
fs
lea
lods
cld
daa
push
stos
pop
movs
mov
xchg
data16
dec
add
popa
pop
jnp
xchg
mov
imul
jae
cmp
in
fmulp
dec
mov
les
outs
mov
jbe
adc
in
lds
cld
sbb
jle
jle
sub
nop
adc
or
or
push
mov
test
and
xchg
fiadd
enter
inc
fst
cs
mov
jle
fistp
lock
daa
shl
ret
or
pop
imul
pushf
rcl
mov
aad
mov
call
leave
mov
cmc
in
xchg
ja
cdq
jbe
sub
adc
retf
loop
mov
fldcw
push
icebp
(bad)
jmp
lock
inc
iret
popf
in
cmp
mov
aad
xchg
dec
pusha
mov
xchg
daa
sub
sbb
push
in
into
loope
rol
dec
pop
popfw
jne
movs
adc
mov
fstp
jb
sti
out
in
push
mov
ins
xor
push
nop
outs
pushf
nop
and
pop
imul
(bad)
int
js
lods
and
bound
cmp
adc
jns
outs
cmp
mov
jp
ret
outs
sbb
imul
scas
push
popf
xchg
and
(bad)
icebp
xchg
xchg
xlat
push
mov
jl
std
xchg
bound
jo
sub
fmul
pop
cmp
pop
(bad)
lea
test
jle
jge
mov
pusha
add
push
das
out
lods
dec
in
dec
inc
test
mov
pop
inc
inc
rcr
sbb
inc
add
jmp
cmp
inc
and
mov
out
gs
mov
xor
sbb
ins
call
addr16
pop
adc
cs
repnz
out
(bad)
pop
add
loopne
int3
sub
add
jo
mov
push
repz
xchg
scas
dec
inc
ror
movs
dec
ret
or
shl
cdq
mov
sbb
jo
push
inc
stos
push
mov
push
lss
adc
imul
xchg
lods
mov
xor
cmp
ss
mov
sub
das
imul
mov
mov
dec
xchg
jle
dec
mov
xor
mov
or
jg
sub
test
sub
pop
cmp
add
mov
lahf
or
clc
dec
lock
nop
mov
and
sahf
clc
adc
or
or
outs
(bad)
cmp
push
(bad)
dec
movs
inc
stc
int
add
mov
pop
movs
sbb
xor
into
nop
dec
xor
hlt
adc
icebp
cmp
fisttp
mov
shl
pmaxsw
in
push
sbb
add
adc
pusha
xchg
sahf
inc
rcl
sar
cmp
lea
push
or
or
lock
scas
pop
xor
out
pop
fist
mov
arpl
cs
retf
push
xor
sbb
xchg
pop
lods
movs
std
nop
imul
sub
mov
mov
inc
cmc
rcr
xlat
add
ins
push
shr
lods
xchg
mov
stos
fbstp
loopne
jp
mov
fs
sub
stc
retf
cmp
fldenv
aaa
mov
mov
sub
je
repz
sbb
les
xchg
das
and
inc
mov
stc
pusha
xchg
sbb
shr
es
inc
or
pop
pop
pop
sbb
jmp
sbb
inc
call
jo
scas
sub
cmc
ficom
test
jmp
mov
jmp
cmc
fist
mov
bound
lock
mov
int3
sbb
lea
adc
fldcw
pop
jge
ss
rcl
rcr
push
mov
pop
mov
in
mov
popf
mov
pop
dec
(bad)
fist
push
jb
sti
add
and
mov
lock
push
popf
push
leave
push
jns
push
fisub
jp
sahf
wrmsr
xor
cdq
mov
xor
xchg
mov
dec
es
push
adc
lds
test
stos
adc
sbb
and
cmp
mov
mov
(bad)
jge
pop
add
(bad)
mov
xchg
sbb
ror
inc
lahf
iret
imul
sahf
sub
jns
xchg
fistp
sbb
lods
mov
mov
scas
xchg
data16
add
or
jns
hlt
test
lahf
xor
icebp
jb
xchg
dec
dec
mov
inc
inc
mov
adc
xchg
add
jo
jmp
pop
sbb
stos
mov
into
cmc
adc
in
iret
push
pusha
(bad)
mov
inc
pop
mov
push
dec
test
dec
std
cmc
xchg
retf
retf
xor
xchg
and
popa
into
in
add
and
fs
dec
cli
fsubr
push
lods
repz
xchg
or
cmp
aad
xchg
(bad)
pop
push
sar
enter
xchg
add
pop
in
pop
add
je
inc
jl
ds
xchg
sub
jae
call
ror
xor
push
pop
fwait
mov
and
push
imul
jp
mov
(bad)
fld
lds
in
adc
(bad)
lods
in
inc
dec
out
push
xchg
xor
and
stos
inc
push
jg
adc
jl
fimul
cmps
add
outs
adc
retf
add
add
int3
pop
cmp
into
rcl
mov
cdq
jge
pushf
xor
cmp
sub
leave
xchg
gs
rcr
loopne
pushw
mov
push
call
ins
ret
lea
xor
pop
pop
shl
dec
and
cmps
xchg
push
loopne
jp
sub
push
leave
mov
int3
setns
pop
inc
pop
xlat
add
xchg
mov
sahf
(bad)
in
out
add
push
pop
mov
stos
adc
clc
lea
jns
mov
daa
retf
xchg
(bad)
sti
mov
test
push
daa
xor
into
call
loop
stos
xor
dec
mov
mov
mov
xchg
ror
daa
dec
es
mov
(bad)
jae
sbb
pusha
fisttp
push
xor
push
out
adc
pop
pop
fimul
ins
jle
into
lahf
mov
call
jnp
cmps
push
jp
in
jmp
jle
push
sbb
cmp
adc
ret
leave
retf
retf
sub
fisubr
sub
movs
push
sbb
xchg
cs
adc
(bad)
imul
dec
loope
fnsave
ja
aaa
in
sbb
mov
mov
xlat
rol
imul
(bad)
pop
pop
xchg
mov
out
push
mov
pop
daa
jecxz
sbb
adc
sahf
not
addr16
pop
fst
or
adc
movs
shr
and
fwait
sub
or
cdq
retf
rol
test
or
and
mov
xchg
push
test
mov
gs
fcmovu
push
sub
and
ror
stc
imul
ins
rcr
xchg
xchg
push
inc
shl
pop
out
in
mov
cmp
jae
sub
adc
lea
sub
jl
jge
mov
adc
rcl
sar
call
popf
arpl
dec
ror
and
mov
xchg
jg
mov
and
enter
add
hlt
movs
dec
mov
sar
push
mov
and
add
push
movs
sub
jns
repz
adc
dec
push
ret
xchg
mov
hlt
sub
in
lods
stc
rol
aaa
push
jo
addr16
stos
sbb
xor
adc
pop
adc
add
loop
aas
mov
or
or
sub
mov
retf
pop
cmp
daa
push
stc
mov
inc
(bad)
stos
mov
xor
adc
es
sub
pop
(bad)
bswap
mov
into
mov
pop
adc
or
lahf
mov
lahf
sub
pop
les
or
(bad)
inc
adc
cmp
jp
dec
adc
lods
push
shr
adc
or
aad
mov
mov
mov
push
ror
hlt
jne
xchg
sahf
dec
in
pop
jecxz
mov
inc
mov
inc
scas
outs
std
mov
cmp
push
add
push
mov
repnz
scas
fistp
xor
adc
movs
or
inc
mov
(bad)
fcom
pop
ror
lods
mov
jmp
popf
popa
xchg
pop
inc
xor
push
pop
xor
rcl
sbb
mov
enter
dec
xchg
and
hlt
xchg
add
mov
add
xchg
mov
fild
jle
stos
inc
das
push
or
test
pop
sbb
ins
in
lds
sbb
mov
push
cdq
mov
dec
stos
and
dec
xchg
mov
push
and
stos
leave
scas
jns
outs
sub
fld
pop
jb
add
call
push
xchg
jecxz
repnz
fs
jns
mov
sub
xchg
cmp
cli
fcomp
fsub
dec
cmc
in
leave
bound
(bad)
aad
jmp
sti
mov
or
sbb
cmps
fsub
xchg
icebp
aaa
test
or
pop
adc
dec
mov
es
mov
mov
out
jmp
push
adc
push
pop
pop
cld
adc
mov
pop
lods
dec
push
sbb
ret
iret
xor
push
cs
pushf
cmp
jae
clc
repnz
dec
mov
in
fld
retf
add
xchg
imul
aam
inc
xchg
jbe
rol
test
shl
sub
stos
mov
retf
mov
jnp
or
cmp
sub
jne
loope
or
push
jmp
test
je
mov
lds
cvtps2pi
fwait
aas
loop
(bad)
aam
int
mov
call
fidivr
scas
stc
push
xchg
cmp
das
imul
in
loop
imul
pop
frstor
xor
mov
mov
lods
mov
std
lods
fucomip
mov
je
jle
in
add
xchg
ret
sub
loope
jnp
and
cs
jp
cmp
jns
imul
add
add
ss
or
ins
cmp
int3
mov
push
sbb
jp
sub
mov
sti
or
pop
daa
mov
push
jb
cli
adc
sbb
ins
xor
sub
and
mov
std
clc
dec
inc
std
and
xchg
lds
push
cli
call
and
addr16
inc
mov
or
mov
arpl
pop
clc
mov
pop
fadd
stos
xchg
lea
sahf
mov
mov
jge
jbe
pop
shr
div
jge
xchg
pop
in
push
cmp
push
sahf
add
test
lods
xor
in
lods
or
mov
add
sub
mov
jmp
ja
ds
pusha
mov
xlat
ja
jne
aaa
pushf
call
mov
mov
addr16
mov
std
enter
adc
rol
fist
inc
loope
les
or
fidivr
dec
push
sub
mov
iret
mov
popf
mov
cmp
adc
inc
mov
push
adc
popf
ds
push
or
mov
sub
jmp
xor
push
repnz
mov
lods
loop
cmc
push
int3
push
cld
sahf
jmp
push
inc
and
jmp
sbb
cmc
enter
retf
or
ins
pop
ror
shl
push
push
(bad)
mov
mov
mov
mov
outs
mov
xor
mov
ror
push
in
push
xor
jmp
es
nop
aad
fimul
pop
jno
leave
and
lock
xchg
loopne
cmp
call
movs
les
add
mov
mov
add
cmp
jo
lea
scas
adc
xchg
mov
xlat
fs
jb
xor
inc
adc
add
xor
cmc
clc
jle
lock
mov
dec
push
lods
cmp
jnp
push
lock
jae
fwait
and
loop
les
shr
dec
das
cmp
fs
retf
or
out
push
mov
mov
(bad)
cmps
or
in
and
add
mov
jo
adc
in
repz
mov
out
pop
aas
cmps
mov
sbb
xchg
addr16
mov
mov
add
inc
jmp
xor
out
sbb
pushf
xor
dec
mov
sbb
push
cli
push
(bad)
cli
sub
push
idiv
cmc
gs
pop
jne
mov
and
push
xchg
xor
push
shl
adc
or
inc
inc
mov
outs
bound
cmp
push
cmp
mov
(bad)
es
xor
xor
int
adc
mov
dec
leave
cmp
fnstcw
push
dec
jbe
sbb
add
push
mov
push
cwde
xor
sti
jg
push
add
cmp
fwait
mov
lods
jge
leave
push
mov
nop
test
(bad)
(bad)
sti
mov
dec
and
sub
(bad)
cli
add
mov
inc
daa
(bad)
mov
ins
xchg
or
cs
jmp
push
dec
ja
mov
add
xor
enter
int3
sbb
pop
xchg
sti
cmp
ja
test
add
push
add
mov
das
cmp
js
sar
mov
or
sub
ja
test
inc
les
adc
ins
add
jne
push
pcmpgtd
add
mov
lods
sbb
jge
or
pop
pop
aaa
push
aaa
scas
movs
lods
and
sbb
push
es
es
mov
nop
ins
sub
cmp
inc
adc
inc
xor
ret
enter
movs
pop
jg
ins
out
sbb
add
mov
in
cmp
mov
xchg
fcomp
loope
xchg
nop
fistp
call
stos
push
in
or
movs
mov
loopne
jmp
mov
popf
aaa
and
jae
xlat
mov
xchg
jecxz
int3
or
sbb
xor
sbb
dec
xchg
outs
and
outs
scas
faddp
xchg
ror
gs
or
jmp
and
daa
xor
lea
mov
cwde
inc
ja
inc
dec
pushf
add
or
mov
mov
into
test
sbb
into
lea
jne
stos
xchg
fwait
out
loopne
cmps
ss
(bad)
icebp
imul
(bad)
div
enter
jge
inc
ret
inc
push
and
mov
sub
test
xor
cmp
fadd
mov
es
add
out
in
xchg
sub
pop
pop
xor
mov
inc
dec
cmp
neg
pop
mov
sub
inc
loop
not
xchg
stc
pop
ss
ret
cmp
inc
cmp
gs
fild
push
mov
js
ins
push
xchg
bound
lods
and
in
loopne
iret
add
iret
pop
sub
mov
mov
jne
outs
sub
add
fimul
stc
xchg
sub
or
add
mov
sub
test
push
adc
jb
pusha
ret
xchg
jno
cmp
adc
shl
mov
inc
push
cdq
adc
jnp
pusha
aam
mov
call
out
dec
jo
inc
inc
adc
arpl
lock
mov
pop
add
or
mov
add
fdiv
xor
mov
xor
retf
mov
test
cmps
xor
xchg
aas
in
gs
stos
mov
mov
leave
aam
jge
jne
into
sbb
cmp
push
rol
rol
not
add
push
(bad)
ror
imul
sbb
jno
imul
clc
test
push
push
ret
sbb
cmp
push
push
and
lods
fcomi
xchg
aam
push
push
xchg
jp
scas
stos
jae
sub
dec
push
std
test
aaa
into
push
add
cmc
fs
xor
(bad)
adc
leave
into
movs
mov
cmp
dec
add
fidivr
mov
retf
jmp
inc
cld
fmul
das
mov
into
dec
sbb
mov
xor
xor
mov
mov
dec
fdiv
mov
add
or
xlat
adc
scas
mov
(bad)
xchg
out
lds
sub
add
ret
adc
mov
jae
xchg
adc
xchg
lea
stos
mov
cmp
sahf
sub
pop
mov
daa
sbb
jbe
das
mov
adc
add
mov
or
in
retf
xor
mov
dec
mov
mov
vminpd
push
outs
out
aam
cmc
sar
shr
int3
xlat
cmps
in
xchg
mov
adc
(bad)
call
f2xm1
js
loope
push
movs
(bad)
mov
les
in
ds
inc
or
push
mov
push
aam
cmps
nop
rol
adc
(bad)
stc
push
adc
inc
push
xchg
pop
imul
outs
add
jg
stos
test
popa
xchg
cli
xchg
mov
cmp
shl
jns
mov
dec
jbe
or
repnz
iret
pmaddwd
pop
mov
dec
clc
(bad)
mov
sbb
push
das
cmp
lahf
inc
scas
xchg
and
lahf
arpl
mov
adc
lods
jmp
out
add
aam
loopne
retf
(bad)
shr
or
dec
sbb
int
ret
mov
push
outs
lods
or
fidiv
or
dec
call
or
cld
sub
cwde
sbb
popf
lock
cmp
out
pop
push
sbb
lea
ins
icebp
pop
mov
cmps
push
cs
add
pop
div
cmps
bound
imul
aad
ds
mov
sub
aas
dec
int
xor
outs
call
rcr
pop
sub
or
stos
ror
push
mov
or
jmp
sub
cmp
rcr
sub
mov
jbe
jae
outs
push
and
xchg
cvttps2pi
and
dec
and
dec
lds
xor
jne
hlt
loope
sub
jo
jg
mov
push
or
scas
mov
cmp
mov
jg
push
xchg
pop
leave
xchg
loope
retf
xchg
hlt
jmp
mov
mov
jnp
test
repz
mov
jae
sub
mov
sbb
mov
push
sbb
dec
jmp
mov
ins
fild
inc
cmps
test
out
mov
sbb
int
cs
sbb
arpl
xor
repnz
mov
out
(bad)
retf
nop
pop
xchg
inc
push
fwait
xor
rol
adc
adc
les
loope
inc
mov
nop
imul
cdq
sbb
(bad)
mov
mov
adc
loop
add
cli
std
dec
iret
imul
aad
sub
out
and
fist
mov
mov
cmp
adc
movs
sub
test
mov
xchg
scas
xor
dec
mov
es
(bad)
jmp
rcr
nop
lods
mov
pop
test
sub
scas
push
dec
(bad)
pop
xor
inc
int
xchg
or
stos
sbb
adc
push
mov
sub
push
fcmovne
sbb
cmp
pop
sbb
(bad)
cli
pop
add
mov
jns
in
out
mov
ins
mov
jecxz
nop
xchg
add
mov
mov
push
xchg
loopne
sub
pop
cmp
gs
test
into
mov
mov
push
mov
cmps
(bad)
(bad)
xchg
add
in
jp
xchg
icebp
push
inc
jbe
cmc
clc
jae
mov
sar
test
and
ins
dec
push
rol
in
fs
xor
hlt
mov
addr16
inc
xor
add
sub
push
leave
jl
int
int
push
adc
add
adc
in
jmp
sbb
mov
inc
int
test
sub
mov
xchg
xor
in
into
sbb
test
bnd
call
mov
retf
ss
std
rcr
mov
xor
and
sbb
imul
mov
or
adc
pop
call
test
ror
in
and
out
stos
and
dec
or
in
outs
mov
loopne
mov
cld
mov
xor
jae
cmp
pop
inc
xchg
jb
fadd
(bad)
test
sub
jg
(bad)
sub
int3
mov
push
popf
and
mov
fnstsw
pop
xchg
xor
dec
add
pop
outs
ret
xlat
loopne
pop
mov
addr16
adc
pop
xor
jmp
push
xchg
and
mov
cwde
inc
js
and
pop
sbb
jbe
jne
mov
lods
mov
push
sahf
mov
add
xor
push
pusha
push
add
mov
or
xor
xor
mov
push
push
inc
or
inc
jbe
popa
push
cmps
push
add
aaa
cmps
add
lods
add
sub
jmp
add
and
dec
nop
push
es
loope
(bad)
(bad)
outs
or
scas
shl
clc
sbb
enter
scas
scas
ror
inc
jp
ss
arpl
shl
(bad)
mov
inc
call
cmp
mov
push
push
loop
inc
mov
stc
fdivr
lock
dec
loope
popa
mov
adc
mov
xor
xchg
stc
mov
lock
hlt
fstp
leave
rcl
push
xchg
mov
mov
dec
mov
je
sbb
and
in
lea
cmp
push
retf
popf
outs
out
jp
icebp
push
clc
or
jg
cmp
inc
lds
bound
pop
(bad)
ins
pop
mov
das
cmp
mov
out
inc
inc
jle
xchg
cwde
push
std
pop
ret
xchg
pop
push
data16
push
movs
adc
adc
mov
test
imul
inc
ja
(bad)
mov
(bad)
div
je
in
mov
or
fistp
sub
fld
fidivr
and
cwde
mov
arpl
out
ror
stos
loop
adc
daa
inc
cs
mov
add
xchg
ja
rcr
sub
mov
mov
jo
into
or
aas
pushf
push
das
and
ja
pop
lea
arpl
loop
xor
xor
mov
lahf
jns
pop
and
out
inc
jmp
sbb
inc
mov
mov
sub
cmp
mov
inc
es
jecxz
out
hlt
hlt
cwde
jmp
inc
jo
sbb
std
cmp
and
icebp
jmp
cli
repz
cmp
jl
adc
mov
mov
cmp
(bad)
mov
inc
js
xor
ins
repnz
shl
repz
mov
push
fs
(bad)
out
fisub
xchg
pop
jmp
movs
sub
call
retf
xor
jns
pop
sbb
and
sbb
dec
out
xlat
jb
xor
cmps
int
xchg
sub
mov
iret
cmps
jle
push
stc
std
pop
fstp
push
into
or
icebp
lds
xor
fdiv
rcl
mov
test
mov
pop
test
mov
push
and
cmp
adc
xor
and
pop
fidivr
push
sahf
mov
cld
repnz
loopne
imul
movs
push
rcr
dec
jo
mov
add
(bad)
lahf
inc
cmp
mov
and
stos
or
frstor
mov
repz
inc
lahf
pushf
scas
call
fcomp
sub
cld
inc
cli
ror
add
and
loope
push
jmp
leave
dec
lock
adc
push
retf
mov
cwde
and
jge
hlt
std
aam
fwait
add
xor
xor
jecxz
ins
sub
push
inc
adc
out
push
repnz
inc
test
push
popa
cwde
push
inc
dec
jb
jp
out
imul
(bad)
and
jle
mov
or
xor
xor
or
shl
rol
sar
jmp
jl
pop
lock
cmc
lods
add
cmp
(bad)
test
ins
and
pop
adc
mov
xor
in
push
lahf
(bad)
outs
xchg
call
jg
cmps
scas
jge
nop
cmp
mov
in
pop
stc
into
adc
test
push
fsub
or
mov
sbb
jp
cmps
jp
xchg
adc
xchg
mov
cmc
ret
fnstcw
aad
lods
cmp
xor
cmps
leave
adc
rcr
dec
(bad)
into
adc
dec
outs
push
stc
sti
adc
mov
jl
cli
pop
dec
in
jg
test
call
push
ficomp
dec
movs
xor
cmc
shl
dec
paddd
out
call
dec
mov
add
gs
inc
aas
push
test
cld
dec
or
push
push
adc
into
imul
cld
mov
ret
jns
mov
or
cmp
test
fcomp
cmp
movlps
out
inc
cmc
ins
shr
mov
rcl
xchg
movs
call
mov
aam
xor
pop
cmp
and
cdq
and
sahf
int
fsub
jo
mov
ret
lock
inc
out
or
mov
cmps
mov
inc
mov
mov
test
mov
cmp
dec
(bad)
lea
leave
in
icebp
test
fwait
xchg
fnstenv
cwde
pop
xchg
pop
mov
xor
mov
mov
out
jo
in
(bad)
and
xchg
xchg
std
or
inc
pop
int3
add
cmp
xchg
xchg
or
sbb
movs
ins
dec
retf
fsubr
(bad)
imul
loope
loop
jnp
sub
daa
fstp
mov
enter
or
jmp
in
(bad)
mov
hlt
or
in
mov
pop
movs
dec
xor
fisttp
add
dec
xchg
mov
sbb
pusha
adc
das
rcr
(bad)
sti
dec
and
nop
enter
jb
js
xchg
jno
mov
dec
xchg
mov
push
fnstcw
mov
es
jg
adc
test
mov
xchg
sti
dec
js
xor
and
xor
or
xor
mov
jge
cdq
icebp
lods
popf
mov
loop
sub
push
jb
test
sbb
xor
dec
ja
jns
(bad)
fwait
or
add
les
inc
hlt
int
test
pop
in
fwait
or
cmc
xchg
movs
push
ret
outs
push
lods
add
enter
int3
adc
mov
fs
in
es
sub
xchg
sub
ret
or
aam
ret
inc
int
adc
xchg
ds
movs
add
mov
imul
dec
ja
bound
int3
sub
pop
and
mov
adc
scas
mov
test
std
sbb
cdq
test
fiadd
sti
jmp
cmp
inc
add
cmc
cmp
call
mov
and
retf
icebp
mov
leave
es
inc
aas
test
bound
xchg
jmp
pop
(bad)
mov
push
(bad)
les
out
cli
cmc
mov
inc
jmp
mov
fcomp
pop
cli
inc
movs
lods
js
mov
pop
aam
and
adc
xor
outs
or
in
xchg
fsub
push
(bad)
pop
mov
mov
sub
cli
dec
mov
push
in
jmp
mov
and
lock
fadd
and
rcr
inc
adc
bound
push
pop
jle
xchg
iret
push
pop
pop
mov
aad
pop
xor
icebp
inc
aas
xor
shr
pop
mov
daa
mov
sbb
mov
je
jno
mov
mov
lahf
mov
stos
inc
das
xor
stos
out
sub
push
add
pop
add
mov
(bad)
mov
pop
xor
dec
dec
aam
pavgw
xor
dec
inc
icebp
nop
cmp
(bad)
sub
jne
jmp
jae
mov
mov
shl
movs
lds
test
(bad)
mov
xor
les
int
xor
inc
xor
pop
nop
sahf
(bad)
call
add
dec
or
push
jle
das
retf
movs
call
ins
dec
or
addps
or
jo
jne
call
xchg
cmp
loope
ds
mov
cmp
in
pop
xchg
pop
xchg
pop
mov
fsub
sub
or
push
clc
imul
scas
out
(bad)
rol
adc
pop
leave
out
mov
cwde
adc
jmp
mov
mov
pop
mov
add
loopne
lods
fwait
into
cld
stc
xchg
shl
push
mov
imul
and
(bad)
inc
test
daa
push
ja
mov
loop
cmp
add
inc
shl
scas
scas
mov
iret
std
pop
inc
ins
clc
mov
mov
gs
adc
mov
sbb
xchg
cmovle
enter
sub
sub
adc
movs
mov
xor
in
aas
lea
add
and
cmps
fdivr
faddp
test
int3
and
fild
inc
sub
sbb
push
cwde
mov
fiadd
sahf
sub
mov
(bad)
in
test
shl
int3
push
jno
add
aad
fstp
je
out
sti
jmp
mov
sub
and
call
fisttp
into
pop
and
mov
pop
sti
int3
or
mov
outs
add
enter
cwde
jno
mov
js
imul
sub
xlat
dec
out
push
pop
xor
pop
clc
xchg
bound
dec
add
cmp
mov
sub
inc
add
xchg
sti
xor
xlat
sti
add
in
aaa
sub
test
ja
popa
sbb
in
(bad)
jns
jle
jb
or
jmp
xchg
(bad)
out
cdq
es
adc
cmps
das
mov
xchg
mov
add
out
mov
mov
shr
push
lods
push
inc
cmp
pushf
into
xor
outs
fst
aad
sub
jo
ja
call
imul
enter
dec
mov
and
hlt
push
neg
mov
fcmovne
pushf
lds
pop
cmp
inc
shl
mov
dec
jge
in
xchg
cmp
repnz
mov
xor
lahf
mov
fstp
aam
xchg
lahf
add
pop
dec
daa
rol
idiv
mov
test
adc
and
js
adc
fadd
adc
jmp
mov
rol
add
ret
in
inc
cmp
rol
inc
xor
(bad)
push
mov
sbb
xor
daa
or
jne
ds
xor
call
test
inc
or
(bad)
pop
fcomp
xchg
test
add
icebp
mov
imul
addr16
inc
dec
lea
test
scas
xchg
jmp
mov
and
cmps
int
mov
das
rcr
pop
in
mov
inc
xor
xchg
(bad)
xor
or
aas
pop
imul
mov
aaa
iret
jle
adc
call
sbb
jnp
ret
out
ror
push
sbb
xchg
sbb
push
push
adc
mov
mov
adc
and
pushf
aad
pop
inc
icebp
outs
mov
adc
dec
outs
cmp
std
push
in
inc
push
pop
mov
mov
and
das
sub
cli
pop
sub
in
fnstcw
mov
je
addr16
ret
pop
xor
mov
inc
dec
loop
and
mov
mov
leave
dec
inc
mov
mov
mov
clc
mov
aam
test
mov
push
mov
push
mov
adc
aam
das
push
(bad)
mov
(bad)
xor
mov
cmps
scas
rcl
xlat
movs
pop
xlat
push
rcl
fldenv
and
mov
or
cmp
pop
and
inc
loopne
push
push
in
mov
retf
scas
mov
outs
and
cdq
test
push
ins
jns
mov
icebp
(bad)
mov
mov
repz
mov
xchg
push
in
xchg
xchg
xor
cmps
(bad)
fiadd
repz
js
addr16
sub
(bad)
pop
int
sbb
movs
adc
xchg
sub
push
mov
adc
in
dec
cli
sub
ins
popa
adc
in
(bad)
(bad)
sub
pop
pop
jp
jmp
push
sbb
xchg
popf
outs
pop
jge
ret
inc
add
cmp
cmp
repnz
or
and
xlat
mov
pop
je
mov
add
stc
stos
int
pop
das
mov
pop
pop
cmp
loope
mov
mov
xor
ror
js
jno
ja
js
add
cmp
test
fsub
inc
cmc
je
jge
mov
push
(bad)
jmp
inc
cmp
and
loopne
adc
out
mov
push
jge
test
cli
push
es
mov
inc
fnstsw
and
add
dec
pusha
push
es
popa
pop
push
imul
fisub
adc
out
ja
gs
xor
fimul
sub
adc
add
xor
xchg
sbb
sbb
repz
xor
outs
inc
jns
jmp
iret
jo
mov
add
lods
push
cwde
xor
test
push
jnp
cmc
xor
(bad)
retf
loope
std
scas
popf
mov
loop
pop
mov
xor
cmp
mov
jne
jl
(bad)
pop
pop
jnp
and
dec
sbb
lock
inc
push
lds
or
aaa
jmp
cmp
out
or
push
nop
xchg
cld
inc
cmp
sti
test
jne
imul
(bad)
rol
mov
out
jge
sub
cld
cmps
and
sub
(bad)
jo
inc
out
fdiv
mov
ins
sub
pop
daa
adc
jb
mov
jnp
mov
mov
adc
adc
pushf
cmp
jns
sub
stos
xchg
dec
adc
adc
or
out
ret
nop
leave
gs
ins
movs
call
out
push
sub
outs
(bad)
jo
and
rcr
ins
mov
sub
mov
ins
jg
mov
lods
imul
push
in
push
xchg
mov
or
jp
and
arpl
mov
and
iret
dec
inc
mov
pop
je
stos
mov
ds
cli
adc
add
stos
scas
icebp
mov
xchg
dec
fdiv
mov
ror
push
ret
loope
loop
pop
push
data16
sub
pop
xor
out
sti
daa
inc
xor
mov
dec
sub
popf
dec
mov
xor
xor
dec
loop
call
xor
pop
dec
repnz
aam
enter
ret
jmp
je
and
jecxz
mov
jno
adc
(bad)
(bad)
int3
dec
dec
xchg
pop
das
dec
or
stc
fwait
outs
popa
popf
push
mov
cmp
adc
sub
imul
push
xor
pop
int3
mov
div
outs
sub
daa
repnz
movs
int3
pop
cmps
and
clc
jne
cld
mov
mov
fcomp
in
sub
push
je
dec
push
mov
js
push
adc
test
xlat
retf
(bad)
cmp
ins
inc
add
sub
xchg
mov
mov
out
scas
mov
sbb
xchg
lods
dec
mov
push
call
gs
xor
and
jmp
jne
jg
dec
aad
jo
mov
stos
push
imul
test
fs
scas
jbe
mov
into
daa
cmp
in
push
shl
mov
push
(bad)
lods
or
xor
iret
mov
push
cmp
push
(bad)
mov
mov
addr16
fld
lods
out
test
pushf
js
add
push
xor
mov
aam
icebp
in
xchg
(bad)
mov
aam
adc
rcr
jbe
lods
pop
fild
jl
mov
mov
popa
jmp
sbb
add
lahf
das
mov
inc
and
or
and
jns
cmc
xchg
loop
fsubr
sbb
cmp
xor
push
hlt
mov
dec
cli
sbb
push
dec
sar
bound
out
sub
sbb
mov
scas
fdiv
jno
(bad)
test
push
push
das
mov
push
std
xor
shr
call
jnp
rcr
pusha
pop
sar
adc
sbb
inc
(bad)
cmps
push
fild
cld
aas
mov
loop
ret
adc
pop
(bad)
push
loopne
out
add
cmp
das
in
sub
popf
std
jp
lods
cs
xchg
sub
mov
adc
sub
mov
int
or
cmp
call
dec
add
mov
(bad)
lds
nop
xchg
sub
mov
iret
cdq
cmp
(bad)
jnp
les
mov
push
cmp
jne
jns
xchg
outs
add
out
fidiv
ss
jmp
and
fcmovbe
cmps
sbb
add
(bad)
repnz
cmp
sbb
adc
bound
and
sar
adc
mov
cmps
and
sbb
push
push
aad
in
shl
add
adc
or
ss
cmps
xor
push
xor
ss
jo
inc
aaa
cmc
mov
mov
mov
dec
push
push
xchg
out
push
(bad)
or
or
and
test
loopne
xchg
out
mov
pushf
lds
frstor
jo
mov
pop
out
jg
repnz
imul
mov
or
mov
rcr
add
pop
mov
dec
push
retf
push
push
ss
daa
leave
shl
cli
mov
rol
(bad)
xor
call
mov
retf
ins
xor
arpl
mov
sub
sbb
push
cmp
adc
pusha
jmp
mov
imul
jnp
mov
sub
mov
jp
lock
lods
xchg
jne
mov
inc
sub
ss
(bad)
ret
jne
xchg
daa
(bad)
div
test
pop
sub
daa
xchg
xor
(bad)
sbb
cmp
ret
fbstp
test
adc
mov
aas
fwait
fs
int3
xor
je
je
dec
ret
xchg
test
ins
shr
repz
lods
inc
push
pop
push
loope
retf
adc
xor
mov
xchg
jl
aam
sub
cmp
mov
xchg
das
jl
fadd
dec
pop
mov
dec
jbe
dec
and
mov
jne
pop
adc
fucom
mov
sbb
cmps
shr
ss
inc
shl
dec
fist
add
clc
mov
mov
sub
iret
sub
sub
mov
cdq
lea
(bad)
adc
sbb
leave
mov
jb
inc
mov
jae
inc
pop
clc
jge
loope
(bad)
ins
push
dec
fwait
in
add
and
lahf
test
push
xor
rcr
jb
and
inc
sbb
xchg
pop
or
mov
pop
fwait
or
fwait
mov
call
ror
cmp
push
add
js
pusha
add
jno
je
mov
mov
ins
and
push
dec
mov
enter
(bad)
pop
inc
xchg
loop
fsubr
mov
mov
inc
mov
push
jmp
and
push
jmp
mov
jbe
cmc
or
dec
inc
mov
call
adc
pop
xor
xchg
sete
cmp
fwait
mov
push
fnstcw
stos
dec
mov
push
jne
mov
cmp
leave
pop
cld
lock
add
and
xchg
es
lahf
lods
movs
(bad)
sub
or
movs
push
lea
pop
sbb
repz
scas
icebp
sti
out
in
jnp
adc
push
lods
mov
inc
cmp
movs
sub
stos
mov
jmp
shl
jl
int3
add
cmp
cmc
or
and
jno
adc
outs
or
and
or
sbb
mov
xor
shl
jmp
dec
shr
rcl
cmps
mov
in
repnz
xor
sub
repz
mov
sub
xchg
test
push
pushf
inc
jmp
push
ret
lahf
xchg
cmps
push
gs
mov
mov
aaa
mov
out
daa
rcr
jo
jg
pop
daa
pop
and
movs
mov
popa
imul
ins
or
or
jge
scas
(bad)
push
xor
cdq
pop
mov
dec
xlat
rcl
and
lods
pushf
and
pop
outs
(bad)
inc
sbb
enter
mov
or
add
scas
fs
ss
lock
out
loope
data16
jo
jno
retf
pushf
aad
mov
mov
gs
jae
mov
int3
push
ficomp
lods
add
sahf
jnp
call
mov
div
mov
movs
xor
jo
fst
and
shl
lahf
mov
leave
stc
jl
push
xor
icebp
scas
push
repz
push
dec
ins
jb
call
std
mov
cmp
cwde
popa
adc
(bad)
push
sub
xchg
(bad)
and
aad
mov
sub
daa
mov
mov
mov
ja
push
(bad)
cmp
mov
xchg
ds
sbb
pop
xor
sub
dec
jge
push
cmp
std
and
popa
mov
rep
jne
sbb
(bad)
and
ins
test
(bad)
fistp
int3
aas
jp
sbb
jmp
add
push
rol
push
pushf
xchg
or
les
mov
push
lods
test
push
in
int
or
jge
andnps
inc
sbb
fldcw
jns
aas
pop
cwde
and
movups
push
mov
adc
dec
fcmovu
cmps
sti
movs
inc
mov
mov
sbb
xchg
mov
xor
jge
inc
gs
mov
and
dec
es
std
pop
sub
push
cmps
push
pop
pop
aaa
push
push
pop
fstp
sahf
pop
add
pop
in
fmul
push
push
xchg
xchg
xchg
lahf
dec
sub
push
push
aam
sti
loopne
sbb
jo
xlat
rcl
xor
mov
mov
mov
sub
xor
cmps
mov
inc
mov
stos
push
nop
imul
push
dec
sbb
in
icebp
jae
in
ds
jno
lea
fisub
ret
cmp
push
mov
mov
shl
mov
jge
jb
in
mov
daa
aam
(bad)
aam
adc
nop
push
idiv
jns
movs
jno
and
add
sub
nop
mov
mov
ret
test
or
rcl
and
enter
xchg
mov
mov
mov
out
pusha
nop
stc
das
adc
lock
pushf
int3
addr16
ds
or
dec
inc
cmps
or
les
add
cmp
inc
movs
mov
add
ja
cmc
jo
fnstcw
out
fbstp
dec
mov
inc
jle
push
mov
(bad)
mov
and
push
cmp
cmp
js
arpl
xchg
std
arpl
mov
fisub
pop
push
cwde
popf
sub
(bad)
sti
fild
mov
xchg
jle
push
jmp
or
cmc
fild
or
sbb
xchg
jmp
lea
jge
inc
dec
out
jl
aas
daa
das
xchg
or
sbb
int
push
fild
jae
icebp
cmps
or
enter
sbb
jg
xchg
mov
add
dec
adc
shr
add
out
(bad)
pop
or
fnstenv
add
cli
cli
stos
xor
dec
inc
call
inc
mov
sub
mov
or
into
pop
cmp
push
mov
mov
jbe
xchg
add
out
test
jp
sbb
xlat
sub
ret
cmp
bound
ja
je
xor
xchg
xor
cli
stc
(bad)
cmp
(bad)
(bad)
mov
(bad)
imul
push
sbb
into
mov
test
lods
mov
mov
and
mov
mov
fstp
outs
jl
retf
push
mov
fsub
push
ins
cwde
out
(bad)
mov
or
jnp
cdq
inc
jge
test
mov
pop
je
xchg
fwait
pop
jb
sbb
mov
mov
jae
pop
fisub
test
mov
mov
push
ja
jnp
test
pop
add
bound
sub
xor
minps
scas
inc
icebp
je
push
pop
(bad)
dec
lahf
jnp
sbb
sbb
cmp
and
adc
sub
dec
and
mov
test
shl
sbb
mov
and
mov
inc
dec
ret
ss
pusha
hlt
in
stos
mov
sti
cmp
fst
sbb
or
into
push
std
daa
sub
mov
in
inc
adc
adc
loope
movs
sti
xchg
push
aam
setg
lahf
xor
mov
mov
iret
dec
xchg
jle
fadd
inc
pop
mov
sti
push
cdq
stos
sahf
dec
dec
add
fs
js
mov
imul
mov
cmps
aaa
mov
adc
out
xchg
bound
cmp
outs
into
in
inc
inc
push
push
fs
es
bound
shl
and
imul
cmp
inc
js
jbe
dec
les
mov
fsub
mov
out
aaa
add
add
loopne
pop
ss
sbb
push
sub
leave
jl
push
sbb
rol
mov
ins
lock
mov
retf
les
xchg
clc
fld
mov
(bad)
lods
jae
adc
fistp
or
lock
add
xor
call
mov
cmc
stos
add
in
cmc
std
and
(bad)
lds
cmp
xchg
inc
pop
inc
sub
mov
mov
and
call
inc
dec
idiv
into
jno
sbb
lods
xchg
and
loope
adc
ins
and
dec
jno
xor
call
xchg
xor
sti
xor
shl
outs
mov
and
ret
ficom
aad
xor
mov
fbstp
pop
es
dec
punpckldq
pop
mov
xor
retf
shr
add
pop
pop
pop
ss
retf
xchg
into
(bad)
pop
xchg
into
xchg
push
repz
add
mov
xchg
sbb
pop
test
cld
jns
inc
mov
out
push
movs
out
js
popa
(bad)
pusha
stc
repnz
nop
pusha
mov
and
and
sbb
or
push
or
scas
dec
retf
aad
aas
cmps
mov
mov
lds
mov
and
pop
or
push
pop
pop
xor
mov
adc
hlt
adc
jg
inc
iret
movs
fidivr
cmps
in
push
inc
mov
inc
sub
sub
mov
lock
dec
ficom
pop
scas
xlat
cmp
jp
retf
bound
pop
push
pop
sar
and
cwde
scas
in
into
sub
outs
jp
or
jno
adc
cs
dec
sbb
ret
shr
add
jbe
aam
pop
adc
scas
cmp
(bad)
fldenv
cmps
loope
and
push
push
mov
xor
inc
mov
or
sbb
icebp
lea
popa
in
imul
out
adc
mov
push
add
lods
jl
ins
sub
mov
sbb
imul
in
cmp
inc
cmps
mov
fistp
test
rcr
outs
retf
cmp
cmp
pop
cmp
cmp
pop
mov
ficomp
addr16
sahf
in
rcl
pushf
xor
jbe
push
movs
fwait
cmps
push
popa
push
push
xlat
push
push
cmc
jmp
call
aas
mov
adc
stos
out
daa
cld
add
push
dec
dec
lds
or
dec
(bad)
stc
cmc
ret
int3
ret
jp
sahf
rol
ins
cmp
xor
fbld
jle
ss
add
ret
inc
pushf
(bad)
fxch
jns
mov
push
push
push
push
fmul
adc
pop
adc
mov
mov
btc
mov
fiadd
xor
xchg
xchg
pop
add
sbb
test
outs
pop
in
or
or
xchg
add
fnsave
jmp
push
in
shl
outs
cmc
bound
test
adc
repz
ja
pushf
xchg
(bad)
jbe
shl
jne
popa
fisub
mov
cmc
xlat
ins
frstor
adc
js
lods
xchg
(bad)
push
into
mov
cmp
popf
ret
setbe
and
mov
cmp
sahf
pop
lea
dec
inc
push
pop
je
out
inc
cmp
daa
push
sub
mov
push
stos
jmp
push
inc
cmp
scas
xchg
and
dec
push
push
das
cmp
call
icebp
jg
repz
cld
movs
mov
xchg
mov
es
cmp
mov
test
test
mov
jno
sub
push
call
shl
call
pop
mov
inc
std
call
jle
jl
add
fstp
jecxz
in
xchg
leave
jmp
pushf
(bad)
popf
pop
imul
cdq
or
fiadd
sub
popf
loop
lahf
imul
ret
test
mov
loope
inc
jge
and
scas
stos
test
cmc
mov
sub
jo
inc
cld
pop
rcl
ja
das
inc
aad
stos
or
and
pop
pop
jnp
pop
hlt
dec
ret
icebp
push
jnp
and
loop
add
fld
or
in
push
push
push
pop
mov
sub
lods
cwde
mov
sbb
cdq
pop
rol
arpl
mov
fwait
cmp
out
add
pushf
mov
cli
cdq
cmps
xchg
push
(bad)
fild
ret
inc
mov
shl
ins
sub
sub
ja
fbld
inc
xchg
imul
mov
and
push
pusha
es
scas
retf
stc
cmc
int3
cmp
cmps
and
sbb
stos
dec
pop
out
imul
xor
push
repz
repnz
pushf
mov
jnp
out
fsin
test
hlt
arpl
cmp
sub
fadd
cmp
mov
loope
fsub
cmp
push
or
and
cmp
cdq
jno
add
ficomp
ja
cs
push
xchg
mov
inc
mov
add
mov
cmp
and
rcr
stc
pop
ret
mov
int3
sbb
(bad)
lods
arpl
jnp
pop
mov
xor
(bad)
pusha
fist
or
fld
or
loope
je
sub
lods
(bad)
stos
add
loop
pop
push
bswap
push
pop
idiv
int
sub
imul
sti
shr
cs
cmps
xchg
mov
ja
in
or
mov
(bad)
fwait
xchg
lahf
push
mov
gs
stc
xor
mov
cmp
(bad)
pushf
xchg
sub
cdq
rol
cmp
ret
nop
mov
mov
push
push
mov
cmp
push
or
mov
imul
xchg
sbb
daa
fs
cld
push
clc
xchg
cld
xor
push
and
push
push
dec
fdivp
lods
(bad)
jbe
iret
jbe
enter
sbb
adc
and
and
movs
mov
mov
or
outs
mov
shl
sub
adc
lds
add
out
mov
and
or
inc
loop
and
test
xlat
pop
adc
js
inc
add
xor
fwait
pop
mov
(bad)
int
fwait
mov
mov
cmc
xchg
out
neg
out
rcr
idiv
xchg
bound
mov
jmp
cdq
jnp
sbb
call
pusha
ss
xchg
arpl
xchg
imul
popa
fldcw
push
cdq
mov
(bad)
scas
pusha
rol
jbe
mov
dec
call
loopne
sub
add
imul
and
sub
mov
daa
xor
rcr
dec
mov
sbb
cs
xor
je
fisttp
push
retf
mov
mov
fisubr
in
data16
nop
mov
jg
xor
cmp
push
jno
mov
cmps
xor
cmp
push
and
inc
loopne
(bad)
js
sbb
xchg
repnz
enter
mov
adc
mov
and
mov
xchg
out
stos
shl
shl
xor
ins
sbb
add
mov
xchg
jle
mov
jne
jmp
xor
push
sub
or
hlt
mov
xchg
lods
adc
and
repnz
adc
dec
xchg
sub
movs
(bad)
aaa
mov
add
enter
add
call
call
or
jnp
inc
xlat
add
es
(bad)
repz
das
xor
mov
mov
dec
pop
jno
xor
xor
sbb
or
lods
push
cli
mov
cmp
jp
inc
cmps
not
mov
pop
jno
lea
add
cs
and
cmp
lahf
mov
ja
mov
shl
(bad)
aad
jno
into
shl
cwde
mov
in
dec
in
(bad)
xlat
shl
push
test
imul
cwde
pusha
push
xor
out
repz
sub
test
jge
or
xor
pop
and
icebp
mov
cmp
ins
xchg
stos
add
adc
adc
or
mov
scas
push
dec
pop
fisubr
mov
mov
mov
int
xchg
dec
and
(bad)
jp
mov
cmp
outs
call
sbb
jmp
or
sbb
arpl
out
leave
mov
cmp
stos
stos
stos
pushf
jno
fs
jne
xor
mov
mov
mov
dec
adc
add
ret
aas
(bad)
sub
mov
sbb
inc
sub
or
sub
cmp
jbe
cmp
fs
push
(bad)
mov
mov
les
adc
sbb
pusha
test
dec
ins
(bad)
pushf
sub
pop
test
loopne
stos
pop
shl
(bad)
push
arpl
dec
bound
bound
dec
imul
cld
push
pop
push
les
out
pop
xor
pusha
push
inc
movs
and
jge
xchg
sbb
cmp
sbb
mov
arpl
dec
imul
loopne
mov
or
lds
sub
sbb
or
loope
adc
loope
xor
jnp
xchg
pop
mov
ins
scas
adc
ficomp
sar
dec
jne
aaa
dec
ins
mov
dec
(bad)
repz
mov
pusha
add
mov
mov
push
test
in
out
and
hlt
fsubr
hlt
out
cmp
jno
sahf
ja
xchg
pop
test
inc
push
pop
and
and
adc
add
sbb
jo
add
ret
adc
fiadd
sub
shl
mov
dec
cld
movs
pop
mov
neg
xor
ins
bnd
cmp
cwde
fnstenv
test
fwait
or
or
fmul
and
push
push
inc
jecxz
in
call
ins
jbe
or
xor
and
sbb
mov
mov
pop
jle
js
mov
(bad)
pop
mov
stos
aad
sbb
loopne
(bad)
and
mov
clc
(bad)
cmp
(bad)
(bad)
test
sbb
xchg
sbb
cmp
int
jae
test
cs
push
lea
jns
cld
push
pop
add
in
jne
inc
lahf
in
dec
or
sbb
cmp
stc
pop
jns
test
adc
mov
xor
ret
push
paddq
mov
inc
(bad)
gs
sti
push
jp
jb
add
scas
retf
out
outs
inc
mov
mov
mov
mov
cmps
stos
das
retf
fadd
lea
pop
pop
or
int
fs
ja
repnz
daa
dec
xchg
dec
cwde
shl
cmp
ds
mov
mov
xchg
shl
sub
push
jae
fs
data16
loope
sahf
mov
test
fdivp
out
push
into
mov
test
out
ins
popa
adc
ror
aam
inc
xchg
mov
icebp
inc
pop
mov
ffreep
push
xchg
and
scas
pop
pop
das
jmp
inc
mov
pop
scas
ss
xchg
mov
jg
mov
sbb
sbb
inc
xlat
jmp
je
xchg
push
cmps
sbb
loop
xor
dec
mov
fstp
pushf
data16
jns
mov
cwde
dec
fwait
jl
jns
retf
sub
outs
jae
into
mov
push
sar
push
loop
push
cmp
add
popa
mov
push
loop
cmc
push
inc
and
jae
inc
shr
pop
and
(bad)
sbb
or
test
mov
scas
push
adc
jg
movzx
cwde
in
mov
sti
int
sbb
jne
pop
div
mov
scas
and
hlt
outs
adc
or
dec
xchg
stos
adc
jbe
inc
sub
fidivr
scas
xchg
cmp
movs
jl
jmp
xchg
(bad)
jo
dec
xchg
push
stos
xor
shl
addr16
cmp
fwait
inc
jne
sub
jne
add
ins
pop
add
xor
xchg
ret
dec
les
ds
inc
lahf
xor
shl
push
lods
enter
scas
test
mov
iret
mov
mov
jmp
(bad)
jne
add
cs
inc
call
pop
pop
dec
lods
add
pop
icebp
sub
sbb
enter
inc
push
ins
push
or
cli
stc
mov
add
cwde
adc
push
es
add
xor
inc
lods
mov
add
addr16
jb
loop
les
lods
ret
(bad)
jo
stos
or
pop
shr
mov
fwait
leave
jmp
out
scas
add
inc
pop
cmps
jmp
jns
(bad)
in
push
cld
sti
lds
xchg
mov
clc
fucomip
sbb
xchg
stc
jmp
(bad)
rcr
out
add
mov
pop
pop
cmp
aad
adc
jo
es
or
adc
arpl
icebp
and
xchg
xchg
mov
jns
and
sub
and
popf
cld
cmp
in
into
std
xlat
cmp
xor
pop
call
inc
pop
mov
mov
scas
pop
adc
mov
mov
xchg
sti
inc
pop
out
cs
adc
rcl
jmp
sub
pop
addr16
retf
jns
punpckhbw
es
jmp
mov
fcmovnbe
xlat
retf
or
repz
adc
jecxz
pop
xor
mov
aas
xchg
nop
outs
inc
xchg
test
div
push
lock
xor
add
imul
mov
inc
arpl
sar
cmp
cmp
arpl
std
ror
mov
pusha
xchg
std
test
push
mov
test
xor
mov
cmc
pop
(bad)
mov
repnz
aaa
cli
add
push
shl
sub
imul
add
mov
hlt
gs
fild
mov
ja
into
add
pop
push
sbb
out
dec
or
mov
aam
jb
xor
cwde
test
cmp
rol
pop
mov
iret
cmp
ins
ds
push
sub
mov
out
pop
pop
(bad)
cld
les
fisubr
in
mov
push
retf
sbb
sub
test
fstp
jnp
retf
or
sub
data16
xor
xchg
(bad)
(bad)
movs
and
test
ret
das
xor
pop
cmp
xlat
push
push
jecxz
or
test
cs
xor
gs
inc
rcr
sbb
mov
add
and
cs
ins
mov
test
int3
aas
pop
call
arpl
adc
imul
out
fisttp
xchg
inc
lds
pop
cmp
outs
loopne
cmp
xor
mov
push
dec
int
aaa
les
scas
mov
outs
pop
or
pop
mov
scas
js
pop
dec
pop
dec
mov
inc
cmp
daa
xor
sbb
inc
push
sub
sub
jae
or
sahf
push
shl
out
fsubrp
popf
mov
push
add
jno
jnp
xor
pop
or
lds
or
sub
das
in
adc
shl
inc
adc
iret
cmp
enter
out
scas
data16
retf
fstp
jecxz
mov
mov
fsubr
aaa
clc
xchg
xlat
dec
int
dec
xchg
les
(bad)
xor
gs
xor
ror
ja
jns
out
mov
lods
xor
aam
cmc
jb
cdq
cmp
mov
loope
dec
loop
test
jl
pusha
int
les
fnstenv
cdq
je
cmps
jb
stos
scas
es
cmp
push
mov
add
inc
jno
ret
mov
not
scas
es
test
mov
popf
cmps
push
xor
cmp
mov
fld
xchg
je
test
pop
cmp
pop
aas
add
mov
xor
mov
in
xchg
(bad)
fld
and
arpl
xchg
sbb
pop
pop
sub
adc
out
lds
(bad)
out
stos
jae
(bad)
xor
sub
mov
sub
pop
mov
imul
stos
rcl
cdq
xor
repz
ror
adc
or
mov
inc
or
loop
xlat
mov
and
mov
addr16
dec
jnp
jle
shr
mov
fbld
js
(bad)
mul
fisttp
pop
out
mov
jmp
ret
imul
movs
mov
xchg
or
js
scas
pushf
hlt
stos
shl
xchg
xchg
sti
lock
in
pushf
mov
pop
and
jne
adc
push
fist
imul
cld
jmp
inc
das
sub
cwde
jbe
mov
test
jb
movs
and
add
mov
mov
mov
pop
xchg
int
outs
jmp
add
sub
(bad)
fcmovne
into
in
dec
scas
dec
cmps
xchg
out
icebp
and
cli
movs
scas
dec
out
or
xchg
cmp
xor
pop
jo
xchg
dec
jne
sar
popa
lods
push
es
into
push
pop
pop
cmp
lods
dec
call
adc
adc
jno
ja
mov
jnp
cld
test
leave
push
xor
idiv
adc
fld
dec
jge
xlat
mov
iret
xor
fwait
scas
push
push
and
inc
jecxz
add
cmps
jl
push
xor
in
sub
pop
test
cdq
cmc
xor
xlat
fnstenv
and
sbb
and
mov
int3
push
sbb
out
mov
cli
imul
mov
mov
jp
xchg
loope
sbb
xchg
sbb
pop
jge
jbe
cwde
outs
jb
js
sbb
pop
addr16
mov
jecxz
pop
stc
out
icebp
movs
mov
cld
xor
loope
addr16
inc
jmp
sbb
nop
xor
ror
icebp
mov
test
sub
jae
outs
imul
pop
add
xor
mov
lods
xor
mov
test
les
push
mov
dec
sub
lahf
or
fnstsw
pop
pop
in
mov
(bad)
and
or
jl
mov
aas
mov
fcomp
and
aaa
dec
test
sbb
loope
rcl
or
mov
xchg
add
pusha
sub
xor
div
movs
fst
sbb
dec
dec
inc
pop
mov
pop
sti
test
(bad)
and
fs
mov
push
loop
loope
jl
lods
rcr
in
jl
mov
jl
jbe
mov
jp
scas
xchg
sub
add
popf
test
lds
pop
ficomp
aam
ins
adc
inc
lods
push
imul
xor
in
(bad)
jle
and
mov
mov
cmps
(bad)
fs
shl
inc
sbb
repz
sub
cwde
gs
retf
add
mov
std
retf
push
jmp
mov
dec
lds
sbb
ret
and
fdiv
movs
cmp
sub
shl
and
ins
lahf
(bad)
loop
jge
retf
mov
xchg
or
mov
test
scas
je
movs
mov
mov
imul
das
jno
jae
jge
xor
push
cmp
sahf
stc
lahf
mov
inc
push
outs
ret
js
dec
pop
push
inc
pop
clc
push
cmp
loopne
jnp
add
and
cld
push
mov
ins
mov
mov
pusha
cmp
adc
xchg
jne
or
ins
(bad)
sar
rcr
sub
jne
jecxz
push
in
in
dec
pop
mov
xchg
movs
pop
sahf
data16
ss
pop
add
cmp
jne
push
adc
fwait
sub
imul
loope
call
and
movs
cmp
lods
leave
loope
mov
dec
(bad)
arpl
xchg
and
clc
nop
std
push
outs
shl
dec
sti
aad
call
mov
pop
inc
push
mov
mov
repnz
jecxz
cli
test
mov
xor
loopne
jmp
inc
rol
nop
xchg
push
jmp
nop
sahf
xchg
sbb
jl
enter
jns
push
xor
sub
sub
adc
pop
dec
inc
stc
xchg
or
sbb
stos
jecxz
mov
sub
inc
jae
dec
jmp
mov
icebp
jecxz
sub
stos
mov
jmp
add
pusha
psadbw
bound
test
test
jns
jp
push
xchg
push
and
inc
mov
mov
fst
ret
dec
xchg
clc
xchg
add
shr
jb
inc
mov
(bad)
and
mov
mov
dec
int3
inc
cmc
ret
and
leave
sbb
mov
(bad)
xor
pushf
and
inc
adc
sbb
mov
push
pushf
dec
and
mov
loopne
cmp
xor
dec
int
inc
sub
cmp
ds
leave
(bad)
nop
sub
push
(bad)
movsx
and
jp
dec
xor
mov
xchg
shr
inc
stos
nop
mov
fistp
inc
push
stos
sub
push
inc
int3
stos
retf
call
mov
and
cmp
sti
sub
and
push
xor
ss
and
jb
cmps
fnstenv
jnp
add
jmp
jns
pusha
loopne
xchg
retf
das
xchg
sbb
jno
inc
push
inc
es
stc
aaa
mov
dec
cmp
lahf
pop
pop
inc
ja
sub
pop
push
fst
dec
call
test
push
and
lea
fbstp
push
out
dec
jnp
fs
movs
int
cmp
je
cmp
xor
ins
add
cld
add
or
mov
push
pop
jb
add
jo
ret
inc
into
cmp
or
xchg
bound
adc
mov
dec
adc
pop
add
push
leave
loope
ins
jo
xor
shl
ins
(bad)
ret
mov
loope
push
add
cmp
in
sub
in
stos
popf
adc
xchg
adc
sbb
js
enter
xor
lea
sub
outs
cmp
mov
and
icebp
movs
inc
mov
inc
mov
xor
mov
iret
rcr
sbb
repnz
shrd
mov
call
fld
inc
fiadd
in
in
mov
mov
jmp
fmul
lods
sbb
jle
test
fsub
push
xchg
jg
fsubr
scas
mov
cmps
and
xchg
stos
neg
in
mov
scas
mov
cmc
cld
mov
test
push
cdq
fdiv
je
adc
fidivr
repnz
mov
dec
(bad)
pushf
mov
jecxz
sbb
or
fcomp
call
xchg
xchg
xchg
xchg
sbb
xlat
lea
cmp
(bad)
dec
adc
jae
sub
xchg
mov
xchg
sbb
jmp
shl
(bad)
and
dec
jbe
fbld
pop
mov
leave
mov
cmps
imul
jl
sahf
mov
push
cmp
mov
xor
xchg
lods
into
lds
add
sbb
jnp
scas
sub
jbe
test
in
stos
push
jmp
adc
cmp
xor
mov
push
and
daa
cmp
(bad)
jmp
jnp
cmps
adc
mov
fwait
mov
aam
fdiv
outs
inc
out
jne
shl
cmp
xor
push
jns
and
and
dec
mov
mov
and
stos
xchg
adc
imul
mov
and
ret
ds
and
mov
rcr
and
jg
dec
adc
fild
mov
loop
in
or
sbb
fcomp
repnz
or
or
bound
cmps
scas
inc
std
pop
repz
dec
jmp
loopne
add
lds
jbe
jne
mov
sub
lock
lods
or
jmp
mov
inc
jne
in
xlat
mov
xchg
add
push
pop
fdivr
mov
shl
out
xchg
xchg
xor
or
test
add
test
xchg
loope
dec
sub
pushf
push
sub
jmp
scas
out
mov
inc
add
push
pop
push
inc
les
mov
adc
mov
lds
jns
ror
pop
cli
aaa
lea
dec
push
inc
dec
and
repnz
mov
(bad)
mov
adc
xchg
ins
and
cdq
stc
sub
mov
adc
dec
cwde
popf
add
and
in
gs
dec
and
icebp
lock
test
int
mov
daa
push
repnz
xchg
mov
int3
cmp
xchg
xchg
and
push
cmp
pop
ja
mov
sub
arpl
xchg
js
cli
js
push
inc
and
fcmovnb
cmp
jl
addr16
sahf
mov
pop
mov
mov
sti
pop
jl
adc
sbb
inc
iret
int3
sub
icebp
data16
pop
xchg
es
call
outs
stos
data16
ret
repnz
mov
xlat
int3
out
inc
arpl
in
sub
xor
add
and
pop
mov
ja
or
push
out
popf
pop
mov
cwde
out
adc
in
rcr
pop
sbb
and
mov
mov
nop
jecxz
addr16
cmp
push
imul
ror
frstor
mov
not
push
dec
mov
mov
adc
and
inc
push
out
imul
(bad)
pop
ins
jo
cmp
push
lods
inc
xor
cmps
inc
dec
call
mov
rol
fimul
sub
dec
sbb
push
jmp
adc
sbb
fwait
data16
add
out
leave
out
xchg
push
(bad)
push
fiadd
outs
jge
in
movs
out
stos
sbb
xchg
les
jo
mov
pop
shl
ret
sar
js
sbb
jb
inc
popf
out
dec
or
cs
inc
mov
jnp
inc
shr
mov
aaa
push
sub
mul
push
int
inc
loope
xchg
out
add
test
je
or
std
and
rol
pop
cdq
xor
add
lds
sahf
lahf
test
call
fwait
repnz
out
push
sbb
mov
xor
je
movs
dec
aad
dec
lock
bound
cmp
sub
shr
retf
add
cli
inc
(bad)
cwde
sub
int
adc
call
sbb
inc
dec
jecxz
or
xchg
pop
mov
pop
dec
test
adc
fisub
mov
or
data16
jg
repz
jne
mov
dec
jle
sbb
imul
clc
dec
sub
pop
push
push
loop
sbb
addr16
mov
mov
retf
les
(bad)
mov
mov
push
and
cmc
adc
out
faddp
es
push
in
outs
test
or
retf
mov
setg
out
(bad)
or
aam
or
mov
mov
cmp
outs
mul
cs
sub
movs
mov
or
ss
mov
out
xor
cld
int3
es
pop
(bad)
pop
rol
push
ins
jmp
or
push
out
out
bound
sti
push
and
add
repz
and
push
push
cmps
aad
or
or
mov
push
sub
mov
loope
mov
in
fbld
xor
test
mov
nop
sbb
or
pushf
(bad)
push
push
mov
daa
add
repz
(bad)
push
(bad)
fld
push
das
push
mov
fnstsw
adc
sbb
mov
xor
push
pop
or
aam
cmp
stc
pop
bound
inc
push
sbb
sbb
clc
cld
add
adc
or
or
ret
enter
call
std
mov
movs
jae
je
sbb
jp
repz
scas
jbe
inc
aas
and
mov
mov
test
shl
movs
dec
in
pop
xchg
push
lock
loop
push
movs
test
iret
push
std
sub
fyl2xp1
into
mov
scas
into
xchg
(bad)
sub
jnp
add
add
adc
add
stos
push
mov
pop
jg
(bad)
mov
movq
sub
popa
and
xchg
sar
ins
lods
and
pop
call
sar
cmps
push
(bad)
cli
call
ret
call
stc
js
test
ret
jge
outs
sbb
(bad)
pushf
mov
in
push
aaa
(bad)
loope
cmps
cs
fcom
sub
sbb
in
or
mov
fst
xor
jmp
pop
nop
pop
pushf
stc
inc
fistp
jmp
jecxz
push
inc
sub
out
scas
cmp
cmp
inc
push
jmp
clc
pop
outs
sub
jb
ja
test
ffreep
imul
fwait
pop
enter
mov
in
imul
lock
jno
adc
push
jno
cmp
je
mov
or
cld
pop
scas
aam
cmp
ret
gs
push
scas
xchg
or
in
rol
pop
(bad)
push
push
inc
pop
das
mov
das
test
mov
sub
(bad)
fisubr
mov
stos
push
test
mov
sbb
ins
and
mov
daa
jmp
mov
dec
mov
push
iret
add
jae
mov
sub
jbe
cmp
xor
xchg
out
xor
mov
jb
jmp
push
loope
mul
jae
ret
in
clc
mov
movs
jmp
adc
cmp
out
out
push
mov
(bad)
outs
mov
and
test
outs
stos
fsubr
pushf
and
push
jmp
sar
fmul
enter
sbb
mov
mov
pop
lock
mov
in
cmp
test
adc
pop
call
inc
sub
dec
sbb
jo
xor
paddw
outs
push
push
lea
xchg
loopne
dec
xor
loopne
dec
jl
stc
scas
loop
cmps
clc
lds
jmp
fs
ins
movs
jmp
outs
js
xor
std
(bad)
test
xchg
xchg
int3
lock
pop
cmps
xchg
add
aas
mov
ret
jle
call
and
jns
(bad)
call
fcmovnu
cdq
movs
clc
aaa
sbb
mov
daa
dec
add
or
pop
stos
icebp
xor
pusha
ins
pop
in
fs
and
push
xor
pop
mov
out
inc
call
push
inc
mov
sub
jge
pop
xchg
mov
pop
lock
pop
mov
test
aam
scas
scas
mov
or
adc
fidiv
mov
mov
cs
pop
mov
dec
adc
pushf
pop
out
addr16
lahf
or
pop
and
sub
and
dec
mov
lods
mov
leave
js
sahf
shl
add
pop
xor
(bad)
push
in
pop
dec
repnz
fwait
inc
push
cmp
vmread
mov
call
icebp
in
cdq
jb
imul
les
xchg
sti
pushw
xor
xchg
fdivr
xchg
xchg
call
ins
mov
mov
push
sbb
addr16
in
scas
fiadd
dec
add
mov
xor
mov
es
inc
(bad)
sub
iret
mov
clc
sub
jmp
sub
daa
ret
pop
mov
jg
dec
lods
setg
stc
je
enter
mov
lods
xchg
popf
cmp
or
fisttp
fisttp
out
sbb
dec
jns
inc
xchg
adc
xchg
ret
dec
out
stc
cmp
push
cmp
fiadd
cmps
imul
lods
xchg
jae
pop
jns
or
dec
add
cmp
inc
(bad)
push
dec
aad
xchg
(bad)
sete
cmp
test
jb
sbb
pop
leave
mov
fimul
pusha
pop
pop
xchg
sbb
sub
add
fstp
fs
fcmovnu
add
loop
dec
mov
out
mov
cmp
inc
frstor
push
adc
push
adc
push
aad
dec
stos
fs
hlt
mov
in
adc
mov
ss
sar
cmp
xor
adc
test
adc
(bad)
inc
sbb
dec
xor
mov
xchg
adc
xor
mov
add
jne
fcom
mov
sar
or
sub
xchg
and
sahf
jle
fnstcw
mov
sbb
cmp
xor
mov
push
mov
pop
out
mov
movs
xchg
and
and
mov
dec
inc
and
je
cli
std
aad
out
inc
fldenv
and
adc
lea
pop
mov
lods
repnz
push
fcom
inc
inc
push
into
add
scas
call
push
shl
dec
pop
add
xor
stos
scas
xchg
xchg
fstp
add
sti
test
xor
jbe
(bad)
leave
mov
clc
xchg
imul
inc
pop
ja
scas
and
aaa
sub
inc
sub
icebp
mov
mov
push
call
push
push
push
pop
das
cmp
adc
daa
xor
mov
xchg
jle
gs
push
(bad)
(bad)
adc
cmc
loop
fld
fisubr
imul
arpl
mov
pop
std
icebp
sub
jb
push
add
dec
fadd
out
cwde
aad
inc
lea
(bad)
scas
clc
aas
add
mov
jge
sar
lock
add
push
dec
inc
jnp
xor
cmp
add
(bad)
fdiv
shl
nop
enter
retf
push
ss
and
das
jl
popf
cmps
fs
jnp
xchg
or
pop
pushf
enter
movs
inc
call
push
push
mov
add
lea
data16
inc
dec
dec
mov
test
dec
add
mov
ds
pop
xchg
jb
pusha
pop
inc
repz
inc
jnp
mov
add
xchg
jne
add
pop
(bad)
push
(bad)
je
xor
call
sbb
adc
push
and
cmps
adc
mov
jae
jbe
push
stc
std
ins
jae
neg
inc
outs
mov
dec
std
ins
ins
sbb
in
daa
pop
fnstsw
push
cmps
mov
mov
pushf
fiadd
or
lock
inc
push
ins
push
test
mov
mov
xchg
pop
int3
add
das
add
pop
and
pop
into
xor
jae
sbb
fist
jmp
cdq
enter
js
aaa
mov
cmc
adc
dec
hlt
cmps
xor
lods
jl
push
addr16
mov
leave
inc
jbe
aam
mov
push
sub
das
inc
xor
pushf
fisttp
sar
sbb
cmp
test
inc
fcmovnbe
mov
push
push
or
and
mov
stos
nop
jl
cld
fs
cmps
outs
icebp
adc
mov
xchg
ror
(bad)
out
test
jl
test
shr
xor
and
into
adc
mov
repnz
int
sbb
xor
jo
stc
pop
mov
frstor
and
add
(bad)
les
mov
popa
pushf
loop
bound
add
mov
scas
in
ds
call
dec
mov
movs
mov
xchg
xor
inc
scas
mov
cld
loop
push
fs
xlat
xchg
aaa
mov
sub
xor
scas
test
adc
(bad)
retf
cmp
retf
cli
call
jge
pop
mov
pop
adc
jae
js
xchg
jne
pop
retf
cwde
in
adc
daa
adc
iret
xchg
(bad)
xchg
ret
loop
cmps
pop
dec
inc
cmp
or
pop
mov
sti
data16
jmp
stos
bound
loopne
pop
lods
imul
jmp
pop
test
popa
hlt
aad
dec
out
xchg
dec
dec
imul
bound
ins
dec
lods
popa
jecxz
sub
dec
cli
fnsave
inc
ja
data16
outs
stos
adc
rcr
repz
cmp
sub
enter
lods
mov
pop
addr16
jecxz
adc
std
sbb
push
mov
imul
(bad)
sti
cmps
inc
imul
mov
int
(bad)
cdq
ins
ret
aaa
lock
pop
ret
out
fwait
push
in
sbb
and
lea
adc
sub
or
fsubr
pop
iret
pop
stos
jge
(bad)
and
sbb
sub
dec
jle
lock
jle
inc
or
cmp
add
div
sub
jl
inc
loope
ins
sbb
call
mov
push
call
das
icebp
or
cmc
add
ror
add
jae
dec
dec
xlat
inc
int3
aad
push
jae
sbb
xor
rol
push
call
pop
adc
(bad)
xor
inc
lahf
popa
popa
jns
and
mov
stos
stos
push
mov
fwait
int
neg
cmps
jmp
ins
jg
outs
or
mov
cld
or
and
retf
in
ret
xchg
pop
test
jp
and
imul
sbb
out
aam
inc
stc
mov
jle
pop
mov
mov
inc
push
mov
and
jae
cmp
inc
add
inc
scas
xor
test
mov
loope
inc
sub
repz
cmp
sbb
dec
pusha
das
adc
xchg
push
add
cmp
cmps
pop
fimul
sbb
sbb
test
jecxz
addr16
cmp
fwait
mov
dec
sub
xchg
clc
(bad)
jnp
repnz
inc
loop
or
test
imul
mov
sub
xor
ss
sahf
imul
jbe
cmp
adc
outs
adc
fild
add
stc
repnz
cdq
cdq
mov
out
fcmovnbe
arpl
test
test
dec
jg
sbb
dec
mov
mov
test
enter
pop
shl
sbb
stos
aas
pop
xor
xlat
inc
lahf
add
mov
aas
repnz
jmp
or
pop
ja
sahf
aad
pop
jmp
pop
jmp
mov
lea
inc
jmp
mov
addr16
cmps
xchg
ins
(bad)
or
out
inc
inc
retf
or
idiv
push
adc
jmp
clc
mov
lea
mov
sub
int
sbb
loop
mov
xchg
push
inc
push
xchg
mov
dec
and
pop
ins
mov
pop
shl
cmps
leave
out
mov
or
(bad)
mov
addr16
call
and
jnp
les
imul
test
cld
xor
cld
adc
add
add
mov
cmp
add
jp
loop
push
pop
push
fist
call
adc
not
retf
shr
adc
xchg
addr16
sub
pop
(bad)
xlat
enter
fadd
pop
mov
es
mov
mov
inc
add
mov
sbb
addr16
pop
push
out
lds
mov
add
and
add
pop
js
jecxz
gs
add
sub
mov
pop
ret
dec
push
loop
movs
aad
outs
imul
inc
pop
pop
sub
pop
ret
mov
lahf
(bad)
mov
xchg
(bad)
xchg
loop
or
cmp
adc
cmps
xchg
sbb
call
and
ffreep
jmp
shl
ret
xor
adc
imul
retf
sub
mov
loope
sub
lock
iret
xor
(bad)
push
inc
pop
xchg
add
pop
or
dec
pop
gs
popa
div
mov
(bad)
xor
lock
mov
sahf
xor
ds
fwait
mov
xor
outs
das
xchg
adc
movs
je
add
lds
xchg
cld
test
scas
aas
pop
mov
out
push
xor
stos
push
movs
xchg
cmp
or
add
mov
retf
(bad)
mov
add
add
inc
jmp
cmp
aas
(bad)
retf
pop
stc
(bad)
jge
leave
xor
mov
mov
push
aad
lds
mov
ds
or
mov
cmp
cmp
mov
sbb
xor
cli
cli
mov
mov
movs
lea
cmp
add
nop
jns
jno
test
pop
test
arpl
and
popf
aad
(bad)
int
outs
mov
cmp
mov
and
inc
addr16
or
je
daa
pushf
jb
mov
or
or
mov
adc
cmp
mov
loope
repz
pushw
(bad)
repz
xor
outs
jbe
inc
jmp
mov
mov
pop
pop
jecxz
stos
add
fdivr
xchg
icebp
ins
test
lahf
inc
mov
or
fist
adc
mov
mov
push
add
xchg
(bad)
int
xor
push
repz
cmp
pop
icebp
add
mov
hlt
popf
call
icebp
jge
icebp
or
lods
cs
and
test
xor
jl
imul
pushf
outs
cmp
mov
repz
dec
leave
clc
dec
outs
jg
leave
mov
xor
aad
es
add
aam
les
dec
sbb
mov
sbb
xchg
(bad)
(bad)
lock
clc
pop
mov
jbe
lahf
outs
dec
loop
sahf
mov
(bad)
movs
idiv
mov
ins
sahf
jmp
cmp
mov
add
in
fsub
arpl
imul
add
adc
inc
push
pop
add
dec
pushf
or
iret
sub
pop
repnz
std
add
xchg
cmp
pop
xor
adc
sbb
mov
imul
push
test
dec
sub
sbb
or
retf
adc
or
lods
and
pop
inc
jmp
call
and
shl
jae
out
push
adc
pop
jl
jbe
cmc
arpl
or
push
daa
test
aaa
test
mov
ja
enter
loope
loopne
cmps
mov
les
add
(bad)
(bad)
test
es
call
cmp
push
and
(bad)
bound
sub
xchg
push
gs
test
aas
aam
xor
cmp
hlt
xchg
(bad)
pop
sbb
mov
sbb
lds
in
pop
inc
cmps
std
cmp
gs
push
popa
jo
js
dec
lea
dec
cmp
or
pushf
movs
add
adc
outs
int3
clc
ja
mov
and
mov
push
into
(bad)
gs
jmp
shl
or
fdiv
pushf
sub
push
les
daa
rol
loopne
push
xlat
dec
jl
aad
in
pop
movs
out
push
xor
ss
icebp
fadd
mov
add
cwde
xchg
push
mov
inc
aam
(bad)
pop
mov
mov
std
dec
push
cdq
adc
xchg
xor
cdq
or
fs
gs
or
xchg
cmp
aad
test
xchg
call
(bad)
clc
push
mov
push
pop
pushf
retf
mov
je
shr
es
mov
fcmovnb
aas
pop
or
pusha
mov
or
add
jmp
lahf
or
nop
or
mov
lods
push
out
jmp
mov
push
call
mov
pcmpgtw
(bad)
pop
fcomp
cmp
movs
push
mov
(bad)
jns
sub
rcl
div
push
loope
(bad)
cs
retf
das
inc
sub
and
in
dec
pop
into
sub
inc
sub
in
mov
int
sub
jb
add
cmp
mov
adc
outs
mov
adc
pop
mov
dec
pop
es
test
fucomi
(bad)
cmc
and
or
cdq
push
inc
rol
retf
icebp
mov
sahf
aas
push
mov
mov
xlat
jne
mov
mov
dec
xchg
ret
loopne
adc
cmp
sub
xchg
mov
mov
jg
imul
sti
dec
mov
jg
enter
pushf
inc
mov
(bad)
scas
sub
es
loopne
ret
pop
inc
jp
cld
jb
aas
retf
inc
sub
pop
pop
sbb
mov
cmp
jns
push
and
jp
das
jle
ret
dec
xchg
mov
or
pop
hlt
sub
(bad)
dec
adc
mov
jns
nop
inc
xchg
fnsave
loope
mov
mov
fisubr
mov
mov
retf
and
icebp
mov
(bad)
add
pop
bound
mov
repnz
adc
movs
push
div
cmp
pop
arpl
dec
loope
les
ja
outs
inc
ds
inc
cmp
inc
mov
pop
ds
(bad)
std
in
jo
popa
sbb
xor
add
adc
mov
xor
sub
mov
mov
sbb
sbb
xchg
add
mov
mov
adc
push
bound
jle
pop
arpl
push
cdq
div
jmp
loop
lods
add
das
ja
imul
push
xchg
retf
push
popf
movs
retf
pushf
jb
std
xor
test
xor
dec
inc
mov
lahf
dec
js
xchg
sbb
mov
pop
int
out
je
xchg
stos
pop
shl
pop
loopne
ins
movs
cmp
jp
fs
aaa
fdivr
pop
push
mov
mov
pop
dec
(bad)
lds
push
hlt
fcom
dec
pop
dec
mov
or
xchg
shl
imul
retf
jle
rcr
sub
ret
pusha
add
rcl
adc
jo
jp
fbld
push
cmp
arpl
iret
loopne
les
pop
mov
aaa
sahf
mov
inc
sub
ss
cmp
test
or
jo
push
push
push
inc
aaa
aas
int
push
arpl
cmp
inc
sub
mov
inc
mov
cdq
add
hlt
jle
movs
cmp
pop
jnp
repz
fst
inc
cmp
xor
mov
adc
and
jecxz
or
inc
jge
xor
jmp
fs
push
sahf
pop
test
mov
sbb
mov
jecxz
push
add
jae
push
popa
mov
cmps
loopne
ja
mov
push
add
push
fs
push
loope
pop
std
mov
sub
call
jne
daa
sub
dec
sub
lea
lea
daa
popf
cld
sbb
pop
mov
lds
outs
and
adc
fs
cmp
inc
or
test
retf
lea
xor
fisubr
jg
mov
stos
add
jmp
add
cmp
mov
in
lods
pop
mov
aas
adc
lea
push
add
fwait
mov
dec
mov
mov
sub
inc
push
pop
aas
jbe
jnp
div
fstp
ror
inc
cmp
xchg
xchg
add
(bad)
sti
daa
xor
in
push
mov
repnz
jo
pop
test
inc
xor
fcomp
fxch
cmp
pop
jbe
jge
cdq
aam
mov
mov
sbb
rcr
iret
inc
cmc
jns
or
pop
xor
mov
ja
jmp
xchg
dec
and
(bad)
push
aad
in
add
fcompp
int
mov
add
and
sub
mov
jp
or
xchg
add
mov
mov
leave
xor
dec
push
push
or
xchg
jmp
xor
loop
lahf
mov
pop
test
lock
xor
ficom
add
int
pop
mov
push
js
cmp
loopne
dec
das
daa
pusha
(bad)
xchg
add
sbb
clc
sub
mov
sbb
imul
xchg
pop
mov
and
leave
sar
and
mov
retf
loope
pop
mov
push
push
mov
cmp
push
jmp
mov
mov
xor
sbb
mov
xchg
add
push
push
adc
jbe
add
js
or
pinsrw
test
std
push
lahf
dec
inc
sar
leave
add
jl
mov
fsubr
das
push
add
sbb
mov
sub
in
fldcw
and
ret
xor
bound
fs
mov
push
(bad)
nop
push
dec
std
pop
mov
add
mov
mov
jnp
jne
cdq
inc
mov
jge
aam
ja
sub
inc
ss
(bad)
pop
mov
or
(bad)
arpl
pop
adc
push
xchg
jmp
xor
add
xchg
adc
in
mov
mov
xchg
mov
popf
arpl
sbb
call
sbb
in
mov
mov
mov
std
retf
add
mov
mov
sar
cmp
mov
cmp
push
push
retf
call
enter
pop
jmp
jae
lea
jecxz
cmp
mov
jb
out
test
and
cmp
jno
fild
fst
cmc
js
fwait
and
mov
pop
adc
push
pop
sbb
nop
mov
lds
mov
cmp
les
sub
sub
sahf
sub
(bad)
(bad)
adc
pcmpgtd
pop
in
mov
pop
cld
and
dec
sbb
pusha
pushf
inc
and
cmps
int3
mov
cmp
mov
ror
int3
(bad)
mov
(bad)
sahf
aas
or
call
push
retf
mov
or
inc
call
out
mov
cmp
mov
imul
mov
cmp
mov
popf
call
rcr
adc
push
dec
cmp
xchg
jb
xchg
jmp
push
mov
(bad)
outs
test
jbe
push
rol
fwait
iret
xchg
cmp
imul
push
and
dec
loopne
add
outs
xor
cmp
mov
pop
div
iret
int3
js
into
pop
and
xchg
(bad)
loop
aad
dec
int3
adc
adc
fldln2
es
icebp
ds
and
sub
sbb
in
xchg
xchg
lods
pop
adc
cmps
inc
sbb
push
cmp
in
dec
mov
outs
or
pusha
jb
adc
adc
push
dec
dec
icebp
inc
out
lahf
xor
stos
out
pop
add
cmp
pop
aas
loop
inc
cs
mov
imul
in
mov
pop
mov
pusha
inc
push
pop
adc
add
les
inc
push
lahf
int
test
test
push
fwait
push
and
rcr
test
aam
add
fadd
mov
in
inc
and
mov
iret
in
sti
xchg
pushf
dec
movs
push
adc
xchg
mov
xchg
adc
call
or
out
arpl
cwde
push
fsubr
adc
ret
jo
sbb
outs
adc
mov
in
gs
data16
and
(bad)
int3
mov
lea
clc
inc
fmul
mov
icebp
scas
in
xchg
leave
cwde
daa
aam
inc
xchg
ds
sti
loop
(bad)
fdivp
mov
fldcw
add
pop
inc
leave
out
lods
mov
mov
mov
das
sbb
sub
xchg
enter
loope
std
(bad)
shl
jle
ins
(bad)
jne
test
shr
dec
addr16
cmp
add
and
test
cmc
std
mov
ja
mov
jb
push
js
cs
cmp
cmp
idiv
mov
repz
pop
mov
in
xchg
mov
cmps
ret
sbb
mov
sbb
push
outs
dec
adc
push
out
cmp
and
sbb
pop
cmp
sub
cmp
aad
cmp
pop
hlt
sbb
xor
(bad)
and
adc
lods
cmp
cmp
retf
out
push
popf
mov
stos
and
cmp
sub
and
fmul
jl
xchg
enter
popf
cli
clc
mov
xchg
les
push
lahf
adc
pop
call
xor
lods
out
dec
jno
mov
or
aad
mov
jmp
add
(bad)
clc
jne
(bad)
fsubr
sbb
jbe
scas
aas
outs
mov
sbb
sar
(bad)
hlt
data16
or
call
fwait
ds
or
and
jl
push
sub
jle
mov
scas
and
add
ja
mov
iret
jl
scas
neg
mov
or
sub
mov
lahf
cmps
sbb
mov
dec
nop
test
cs
out
adc
sub
sar
test
xor
or
(bad)
cmp
pushf
dec
jge
ficom
mov
push
cmps
push
sti
nop
cmp
cdq
push
xor
inc
xor
sbb
into
add
xchg
xchg
and
jno
dec
cdq
mov
(bad)
push
(bad)
pop
sub
or
mov
push
inc
arpl
rol
mov
cld
dec
mov
bnd
arpl
push
out
repz
or
inc
inc
lds
ins
add
mov
xlat
imul
hlt
movs
pop
xchg
sbb
icebp
test
or
inc
sbb
in
pop
add
mul
daa
(bad)
fiadd
sub
pmullw
in
mov
add
push
pop
repz
pop
adc
popa
inc
das
addr16
jg
pop
mov
push
jmp
mov
sub
sahf
push
jo
test
bound
jmp
es
enter
xor
push
mov
xchg
xchg
call
add
(bad)
imul
movs
cwde
pop
sub
sbb
dec
rcr
inc
das
cmp
and
push
adc
mov
push
std
sbb
aas
out
mov
adc
rcr
xor
ror
sbb
cmp
mov
mov
in
xchg
mov
sub
loope
mov
push
or
sub
iret
dec
adc
lahf
jle
mov
xor
rcr
mov
push
mov
add
int3
ror
addr16
xchg
out
xchg
out
popf
mov
mov
xlat
push
xchg
mov
stc
push
repnz
(bad)
lods
mov
in
push
mov
xor
mov
movs
fidivr
mov
mov
jle
cdq
sub
and
sti
add
push
inc
loop
out
das
repnz
push
loopne
jmp
retf
mov
mov
push
push
xor
std
or
sbb
ins
rep
pop
(bad)
dec
ds
sub
xchg
xchg
mov
icebp
pop
add
fwait
stos
lock
or
sbb
add
fimul
cmps
pop
(bad)
ss
cld
inc
leave
mov
mov
add
push
or
gs
pop
fiadd
and
sub
imul
cmps
or
int3
adc
daa
jg
aaa
lods
sar
sbb
and
jecxz
(bad)
cmp
ds
lods
int
and
je
cmps
je
jl
stos
in
popf
sbb
push
scas
mov
mov
or
jb
sub
push
push
push
xchg
xchg
scas
push
imul
sub
mov
fsub
dec
sar
and
cmp
xchg
sub
push
mov
mov
lock
ins
pop
sub
sub
loop
in
sbb
sbb
sbb
add
mov
add
arpl
retf
loopne
inc
gs
mov
cdq
xchg
shl
sub
ficom
in
adc
adc
pop
xchg
pop
sti
fistp
aad
and
add
mov
and
sysret
cmp
fsubr
rcl
jl
stos
imul
daa
scas
out
and
add
hlt
ins
aad
cmps
mov
pop
push
dec
test
jb
fnstsw
retf
pop
or
pushf
mov
mov
cmp
loope
mov
(bad)
jne
cmps
ret
or
shl
aam
and
adc
mov
xor
xor
fstp
pusha
fidivr
and
push
lods
cld
mov
cmp
sbb
xchg
cmp
rcl
loope
jnp
pop
dec
push
adc
and
imul
mov
and
jbe
int3
and
mov
pop
cmc
mov
mov
cmp
xor
daa
mov
push
pop
into
mov
std
fmul
imul
ds
mov
mov
dec
push
sub
ret
lods
fld
push
push
aaa
adc
add
push
fnsave
or
add
mov
pop
lds
je
cmp
sbb
(bad)
push
add
sub
jecxz
fcomp
or
in
leave
cwde
xchg
(bad)
fsubr
mov
mov
jo
into
adc
out
mov
sbb
sbb
cld
outs
add
daa
nop
cmp
ss
add
jb
in
mov
xor
pushf
into
repz
jne
lock
mov
das
cmc
xor
repz
sub
outs
push
xor
jl
jnp
test
mov
cdq
sbb
sub
sub
inc
arpl
adc
adc
stc
ins
scas
mov
sbb
push
in
mov
add
adc
pop
sub
call
clc
xor
jmp
mov
loop
clc
cmp
jae
loope
dec
pop
jg
ret
add
in
sub
movhps
push
scas
bound
call
cmp
popf
out
jns
retf
adc
mov
jl
imul
add
mov
push
dec
cmp
inc
mov
push
cmp
in
aam
and
inc
mov
hlt
jl
cdq
(bad)
jne
leave
push
jmp
scas
hlt
(bad)
leave
push
call
cli
std
loopne
inc
pop
mov
jecxz
call
dec
aas
push
or
fidiv
pop
xchg
sbb
jbe
jge
fcomp
btr
pop
and
mov
sub
mov
and
test
std
fsub
inc
fcomp
fnsave
sbb
(bad)
push
mov
out
icebp
xchg
jmp
mov
(bad)
cmc
cmp
xchg
xchg
pop
ss
loope
in
(bad)
dec
int3
xor
or
jmp
div
test
cmps
sub
es
dec
and
push
mov
xor
or
sub
push
jmp
xchg
call
ss
retf
dec
jmp
push
dec
rcl
mov
push
and
xor
add
sbb
jo
out
jnp
jge
ret
jo
pushf
test
xor
jne
test
jge
and
out
xchg
add
lods
xchg
out
inc
xchg
push
aad
ret
sub
fst
iret
ror
into
mov
sti
fwait
sti
adc
sub
xchg
xor
inc
loop
and
scas
xor
sbb
pop
jl
jns
mov
(bad)
dec
sbb
mov
iret
cmp
(bad)
pop
mov
pop
out
sti
pusha
mov
gs
fldenv
adc
shl
out
cmp
cmp
in
sub
fmul
not
sub
and
push
bswap
sbb
je
push
(bad)
inc
jbe
fisubr
cmp
pop
repz
mov
dec
gs
data16
xchg
xor
or
adc
pop
ret
ds
stos
gs
pop
sbb
scas
data16
test
mov
push
mov
dec
or
and
cmc
pop
inc
pop
and
in
jbe
sub
loopne
arpl
outs
sbb
mov
outs
cmp
inc
icebp
stos
xchg
jle
lods
push
add
xchg
sub
call
sbb
mov
aaa
aas
xchg
ret
lods
xor
push
and
mov
cmp
dec
loope
(bad)
fisttp
xor
push
fstp
push
nop
xchg
popa
jbe
ja
daa
dec
mov
inc
xchg
sbb
enter
ja
lahf
fnstcw
xchg
xor
int3
popf
push
and
loopne
inc
add
jmp
mov
test
cmp
xchg
jbe
push
popa
and
nop
inc
and
aaa
xchg
aas
push
(bad)
add
out
push
bound
fimul
or
mov
retf
shl
ret
test
pushf
jnp
mov
xor
and
test
add
dec
lds
mov
imul
mov
fild
jb
js
outs
add
jmp
jmp
pop
adc
cmps
mov
mov
mov
push
stos
xor
in
cmps
sub
fneni(8087
xlat
ret
mov
sub
ja
sub
mov
adc
hlt
jp
in
(bad)
pop
int3
push
jmp
xchg
ret
addr16
(bad)
jns
ss
imul
cmp
repnz
sti
sbb
sbb
adc
jns
mov
in
dec
outs
not
sub
in
pop
mov
les
add
and
test
sbb
scas
push
add
and
sub
test
xor
cli
sahf
into
and
mov
inc
adc
push
inc
scas
push
dec
scas
scas
jmp
inc
mov
xchg
aas
and
jge
fadd
ja
(bad)
mov
loopne
sub
cmp
outs
push
dec
into
mov
mov
pop
lods
es
xor
iret
in
and
push
adc
ds
jecxz
dec
add
clc
lds
ror
or
outs
movs
mov
shr
fiadd
ja
pop
and
test
ffreep
xor
sar
add
loop
jb
jne
or
pop
mov
popf
inc
rcl
jmp
popf
in
(bad)
loopne
cmp
and
cmp
inc
or
je
sbb
and
daa
int3
cmp
addr16
test
mov
ins
mov
dec
fld
jnp
add
sar
cmp
movs
jbe
arpl
sbb
or
xor
mov
cmp
jge
or
adc
sahf
or
out
addr16
xor
mov
rcl
inc
and
jnp
cmp
fst
mov
enter
in
mov
mov
into
sub
jns
fstsw
xor
sbb
xchg
sub
lea
push
fs
sahf
jle
mov
retf
inc
stc
push
or
pop
inc
xor
pop
(bad)
pop
icebp
mov
jecxz
and
iret
sbb
add
and
js
add
adc
scas
push
dec
into
cmp
xor
pop
aaa
jmp
loope
fsub
addr16
adc
xor
test
xor
jo
sahf
dec
adc
add
sub
pop
sub
je
xchg
stos
dec
xor
mov
pop
inc
xchg
dec
push
fimul
push
add
inc
xor
sti
stos
mov
push
ret
adc
adc
ds
xlat
push
inc
or
out
push
paddd
scas
push
test
icebp
and
lds
sub
lds
in
aad
xor
ss
call
fisttp
jp
fdiv
(bad)
in
cmp
mov
div
inc
or
dec
or
xchg
mov
mov
push
ins
repz
push
mov
cmps
mov
in
cdq
mov
fisubr
arpl
dec
loope
dec
popa
and
push
ins
movs
xchg
movs
cld
ror
pop
icebp
and
pop
xchg
inc
(bad)
and
call
lea
shl
push
inc
ret
dec
clc
mov
in
pop
movs
pop
jle
loope
adc
test
ins
(bad)
test
mov
cdq
(bad)
dec
out
jmp
imul
jl
imul
cmp
test
or
scas
iret
xor
add
pop
scas
ins
add
cs
stos
push
adc
int
xchg
(bad)
bound
in
lock
fcmovnbe
data16
jo
iret
outs
pop
cmc
(bad)
jmp
sub
jne
and
xchg
test
mov
inc
add
and
pop
outs
inc
ins
or
sub
int
mov
jae
fstp
pop
mov
out
push
adc
and
add
ins
mov
lods
push
xchg
mov
idiv
mov
je
dec
lds
(bad)
nop
fild
push
les
xchg
std
xchg
push
movs
or
pop
sub
xchg
test
and
jno
mov
scas
loope
pop
push
inc
ror
lods
bound
and
push
fisub
jb
jmp
retf
test
out
adc
cmp
enter
mov
xchg
mov
cmp
adc
(bad)
cmp
jae
xchg
sbb
cmp
jb
dec
sub
mov
xor
push
adc
lahf
out
cmps
addr16
sub
ret
dec
push
adc
inc
push
jae
dec
inc
fnsave
fild
pop
sti
sahf
push
ins
pop
addr16
mov
cmp
popa
inc
push
pop
out
mov
mov
adc
or
ja
inc
inc
pushf
je
and
jnp
int
adc
mov
adc
jmp
push
jg
dec
jmp
mov
mov
aad
mov
int
outs
push
and
inc
add
jl
sub
pop
cmp
and
aam
pop
sub
dec
or
sub
aaa
push
sub
cmps
xchg
mov
(bad)
retf
pop
fimul
(bad)
enter
adc
pop
test
mov
mov
out
outs
push
jl
jl
xchg
into
adc
mov
aas
scas
nop
cmp
jne
cmp
jb
dec
nop
fcomp
out
pop
cmp
rol
xor
xor
xor
neg
sahf
jmp
dec
jbe
mov
mov
popf
and
pop
add
fsubr
retf
cmps
mov
gs
add
std
movs
pop
aas
push
and
sbb
test
sahf
add
pop
cld
sbb
scas
push
push
nop
xchg
xchg
lods
sbb
lea
ret
and
jo
mov
xlat
(bad)
pusha
mov
in
loope
data16
inc
cmc
xchg
int3
jge
icebp
loopne
retf
mov
jbe
pop
test
pushf
xor
mov
shr
or
cmp
popa
add
into
dec
jg
push
xor
pop
ret
add
(bad)
mov
jns
les
pop
loop
sub
inc
mov
inc
dec
into
lock
adc
shl
mov
dec
dec
lock
mov
xchg
syscall
lds
jnp
pushf
sub
jae
(bad)
fwait
push
push
sub
enter
test
push
jae
mov
add
mov
mov
cmc
rol
fcmovnbe
mov
mov
js
jp
and
(bad)
mov
iret
mov
pop
jnp
jbe
cmc
or
or
test
lock
sbb
mov
popa
add
sub
outs
adc
jle
jge
(bad)
out
(bad)
aad
adc
adc
mov
lds
inc
jl
adc
popa
mov
sbb
and
cmp
and
push
sar
cmps
ins
jecxz
cmp
xor
mov
mov
dec
outs
fcmovnbe
dec
jmp
rcl
push
inc
mov
test
pop
adc
inc
dec
imul
mov
inc
icebp
xor
mov
or
outs
nop
jmp
(bad)
and
outs
mov
out
push
(bad)
in
jbe
jae
push
xchg
sbb
sahf
adc
add
pushf
or
iret
pop
add
sbb
fcomi
adc
cmp
das
xchg
or
jne
inc
fisttp
outs
sti
loopne
pop
test
jae
(bad)
scas
in
inc
jno
sub
fwait
imul
cmp
jb
scas
scas
add
pop
mov
fwait
lea
jge
ins
add
push
das
xchg
mov
push
jns
ror
mov
pop
(bad)
xor
adc
mov
ja
mov
mov
iret
lock
sub
shr
outs
pop
adc
xchg
lock
jl
repnz
cld
(bad)
mul
jle
out
arpl
push
(bad)
push
jle
repnz
cld
sbb
test
and
addr16
jo
sbb
cmc
inc
lea
loop
stos
push
and
or
mov
pop
loope
ret
push
inc
mov
mov
sub
dec
cmc
add
mov
inc
and
and
(bad)
xchg
push
pop
fsub
movs
or
mov
pop
jns
cmp
shr
inc
out
jcxz
mov
xchg
push
mov
push
or
scas
xchg
cmps
adc
sbb
jbe
sbb
sub
es
push
and
fistp
out
test
(bad)
adc
(bad)
cmp
enter
or
push
je
and
cdq
mov
xor
xchg
inc
fnsave
pause
lea
sub
inc
xor
(bad)
cmp
and
cmp
sbb
stos
int
mov
sbb
dec
xchg
inc
pop
in
js
xchg
push
(bad)
cmps
inc
sub
push
and
jmp
ror
mov
sti
mov
imul
or
push
addr16
lock
adc
sub
jb
or
jbe
loopne
mov
sub
mov
xchg
mov
jge
dec
mov
loopne
jle
adc
inc
push
jmp
xchg
push
jp
sar
sbb
fdivr
aas
dec
les
cmps
inc
or
idiv
add
push
test
lods
(bad)
adc
cs
fsub
mov
inc
mov
ins
push
push
les
push
loop
jne
int3
jg
add
push
in
clc
cmp
add
xchg
pop
pop
pop
jmp
and
fcom
cmps
lods
cld
fmul
rcr
xchg
push
adc
or
lods
inc
cli
stc
loope
sub
(bad)
and
adc
inc
push
mov
push
pop
scas
dec
add
pop
mov
sub
mov
cmp
nop
add
outs
push
loope
xor
outs
js
mov
sahf
or
shl
repz
or
dec
add
int3
pushf
call
xchg
xor
inc
dec
sub
or
test
pop
fisub
(bad)
sub
idiv
imul
mov
scas
sbb
xchg
adc
iret
adc
inc
test
add
xor
cld
enter
adc
dec
arpl
mov
ds
add
and
push
dec
cli
out
out
adc
cs
xor
iret
mov
lds
jecxz
xchg
inc
push
xchg
test
sahf
sbb
test
inc
push
pop
mov
out
in
mov
and
sbb
aaa
and
sub
fs
ror
jns
jbe
adc
jl
popf
jle
cmp
ret
(bad)
cli
sbb
daa
inc
jno
test
mov
xor
xchg
inc
std
(bad)
sbb
add
mov
mov
dec
xchg
fst
xor
mov
pusha
jne
cwde
out
repnz
lea
dec
sbb
inc
enter
repnz
jmp
mov
cdq
(bad)
adc
mov
mov
stos
and
lahf
stos
out
adc
stc
or
sub
dec
ud1
xchg
clc
rcl
and
sbb
repnz
fdiv
adc
inc
dec
mov
imul
loopne
sti
addr16
mov
sbb
add
inc
adc
jb
mov
ror
jne
inc
dec
outs
sub
mov
mov
aaa
jae
pop
xor
iret
ds
mov
push
js
fcomp
test
mov
dec
jg
rcr
(bad)
out
inc
xor
mov
call
inc
pop
ss
xor
pop
mov
test
add
xchg
dec
and
pop
sub
aad
mov
mov
pop
lahf
pop
jb
loope
pop
sbb
jg
push
mov
test
sbb
xor
xlat
aad
push
idiv
and
imul
loopne
xor
xchg
out
push
xor
sbb
push
idiv
outs
push
stos
rcr
std
stos
fcomi
jl
call
mov
es
fsub
shl
or
cmps
mov
sub
or
sbb
out
mov
add
jbe
sbb
aaa
mov
pop
sar
call
add
add
and
add
inc
les
imul
(bad)
cdq
xchg
add
(bad)
adc
mov
add
ja
push
icebp
pop
or
mov
mov
jecxz
ss
pop
xor
jmp
dec
add
sbb
das
mov
sbb
(bad)
lods
lahf
je
leave
movs
mov
enter
sub
fimul
adc
movs
iret
jp
lea
test
sbb
inc
or
pop
and
in
sbb
daa
pop
add
ins
sub
fisttp
arpl
xor
mov
inc
aaa
sub
push
sbb
or
pop
rcl
xchg
jg
pop
jmp
mov
ss
xchg
shl
dec
lds
jmp
xchg
cmc
fdiv
sub
mov
ins
jg
stos
dec
into
cmc
sbb
xchg
(bad)
and
or
push
fwait
cmps
adc
xchg
mov
adc
jg
mov
(bad)
jge
aas
popf
mov
dec
xor
jp
cmp
mov
xor
or
fadd
sub
push
or
xor
(bad)
sub
fld
imul
cs
mov
push
ja
adc
mov
xchg
mov
shr
les
push
sbb
popf
inc
lock
js
adc
jmp
and
adc
cmp
shl
fcom
pop
out
jle
adc
(bad)
fwait
cmp
push
lods
ins
into
aas
pop
aaa
inc
inc
out
lahf
repz
or
test
and
pop
sbb
fdiv
imul
(bad)
imul
cmp
fild
add
pop
xor
lahf
mov
xchg
mov
repnz
mov
cmp
mov
xchg
retf
jl
iret
cld
leave
mov
ja
cmps
es
bound
sbb
pop
mov
or
sbb
(bad)
mov
adc
std
push
ror
or
sbb
pop
leave
movs
js
seta
stos
mov
xchg
jbe
or
jmp
lds
mov
outs
pop
in
mov
aas
dec
sbb
sbb
xlat
jbe
push
mov
sbb
(bad)
ja
scas
call
scas
(bad)
imul
mov
mov
mov
in
dec
gs
icebp
jae
cli
inc
fst
mov
dec
cwde
and
pop
inc
outs
fbstp
lods
jmp
rcr
enter
xchg
cmp
pop
jae
sub
int
pop
arpl
jmp
inc
cs
mov
dec
adc
repz
sub
and
out
int3
jp
cwde
cmc
pushf
pop
mov
mov
imul
imul
mov
ins
leave
les
repz
cmp
loopne
outs
push
inc
cmc
push
div
add
mov
or
fstp
mov
dec
out
popf
je
mov
mov
sub
xchg
addr16
call
jne
mov
adc
sbb
adc
cmps
xor
pop
adc
sub
pop
mov
jno
movs
retf
pushf
and
lahf
sahf
stc
cmp
stc
inc
and
aam
add
mov
dec
inc
pop
push
add
xchg
mov
mov
(bad)
jno
out
(bad)
lods
retf
rol
js
in
int3
sar
aas
jno
mov
in
and
inc
dec
cmp
loopne
(bad)
dec
lods
out
sbb
pop
sub
cmp
push
push
fwait
bound
aam
loopne
aas
pop
out
sahf
in
stos
adc
shr
je
lds
xor
inc
ds
mov
add
jbe
push
jp
scas
xor
test
adc
sub
sub
xchg
adc
int3
inc
push
pop
enter
mov
pop
push
cs
push
mov
inc
(bad)
cmp
push
jnp
stos
dec
data16
xlat
sub
je
in
or
adc
and
inc
out
pop
fstp
push
sbb
(bad)
sbb
sub
xlat
push
mov
mov
lock
jne
mov
cmp
add
pop
je
adc
mov
(bad)
add
jnp
(bad)
imul
jno
and
addr16
sub
sar
aad
aaa
xor
mov
pusha
retf
cwde
xor
mov
inc
cmp
jmp
je
jmp
push
out
cmp
int3
jmp
pop
xchg
in
fcomp
fldl2e
add
mov
mov
mov
jb
xchg
in
dec
(bad)
xor
mov
inc
mov
das
push
xchg
adc
xchg
int3
cmp
push
in
cdq
rol
mov
dec
mov
sub
cdq
cmp
sahf
mov
jmp
dec
loope
push
jne
sub
aaa
lods
push
arpl
ins
(bad)
cmp
jmp
add
push
mov
dec
and
je
xor
adc
(bad)
or
cmp
mov
loop
sar
dec
out
ins
fdiv
sti
out
jb
jg
inc
outs
xlat
call
mov
xchg
mov
retf
mov
adc
mov
mov
lds
clc
mov
push
dec
inc
call
sub
sub
mov
mov
jl
enter
nop
not
std
cmp
jbe
leave
fsub
mov
test
sbb
or
popa
pop
mov
dec
sti
jno
sbb
test
xor
cli
outs
push
stc
mov
mov
outs
ror
mov
xchg
std
jae
mov
cmp
or
inc
pop
test
and
in
and
ins
jmp
movs
xchg
mov
psrld
mov
in
cmp
xchg
icebp
adc
dec
ret
pop
sbb
jmp
jmp
adc
hlt
jne
fsubr
pop
pop
pop
cmps
cmc
scas
and
popa
and
adc
or
dec
gs
daa
cdq
or
in
pop
mov
lock
cmps
jl
(bad)
mov
dec
ja
jne
mov
sub
dec
ror
mov
xchg
retf
stos
inc
int
dec
or
mov
push
jns
adc
ror
in
in
rol
ror
call
jle
adc
movs
ror
and
inc
lods
or
fbld
shl
push
sbb
cld
push
repz
xchg
ficomp
ds
xchg
(bad)
sti
sbb
loop
mov
ret
pop
sahf
loop
in
(bad)
xchg
adc
and
xlat
mov
cmovle
mov
cdq
je
sahf
xchg
push
cmp
imul
cmps
cmc
ins
dec
aam
mov
fwait
jg
mov
and
sub
pop
push
rol
add
data16
mov
fidiv
mov
movs
jo
sub
in
aam
(bad)
mov
cmp
add
js
jmp
add
mov
mov
mov
sbb
stc
and
xor
test
xchg
imul
mov
mov
les
lods
dec
add
mov
adc
xchg
fcmovb
movs
out
rcl
mov
dec
xchg
arpl
mov
inc
inc
lds
xor
cwde
mov
fld
and
add
aaa
cmp
arpl
js
pop
mov
xor
loope
sub
fidiv
je
sub
retf
test
xchg
scas
iret
add
xor
mov
inc
not
or
mov
(bad)
dec
pop
mov
aas
mov
ds
test
mov
mov
add
add
inc
and
cmc
jle
sub
sbb
fs
mov
xor
push
mov
stos
or
jnp
sti
jno
push
outs
push
lods
pop
and
jg
xor
fdivr
retf
stos
mov
mov
pop
pop
scas
aad
aam
fs
sbb
mov
xor
pop
loope
and
inc
jb
js
xor
sbb
mov
push
push
or
jo
add
jmp
fst
pop
push
dec
jns
imul
add
popa
jmp
imul
xchg
pop
inc
in
sub
movs
sbb
mov
sub
lahf
pop
cmp
int
jbe
sahf
or
cmp
jmp
imul
jmp
xchg
addr16
icebp
out
inc
pop
popf
adc
cmp
lock
pop
in
mov
sub
cwde
fcmovnbe
cmp
(bad)
mov
bound
jb
in
ja
sar
or
fmul
retf
mov
rcr
xor
adc
mov
call
scas
inc
clc
inc
pop
stos
fs
loop
inc
ret
aad
push
mov
stos
lds
shr
cmp
xor
push
inc
push
ret
dec
fwait
enter
ins
inc
add
je
imul
cmp
add
adc
cmp
mov
cli
mov
test
mov
cmp
sub
in
push
and
shr
adc
(bad)
cmp
sbb
outs
push
sahf
add
push
outs
push
aad
lahf
jp
out
aam
cmps
and
out
pop
aaa
xchg
sar
adc
dec
sbb
aad
adc
push
jns
push
xlat
inc
aad
ror
xchg
xchg
fiadd
cmp
cmp
mov
test
push
outs
cmp
sar
lods
retf
sti
sub
dec
inc
outs
and
cld
ins
dec
sub
cmp
inc
leave
jae
xchg
gs
(bad)
ins
imul
inc
push
int
add
mov
jmp
mov
lahf
loopne
movs
mov
add
aam
cmp
push
das
shl
pop
loope
call
jle
push
sub
aaa
iret
and
stos
aaa
ins
aas
aaa
(bad)
jge
sbb
sbb
xor
cwde
shr
fbstp
dec
addr16
fs
shr
or
shl
adc
push
xchg
mov
add
jle
xchg
sub
xor
daa
xor
dec
add
bound
mov
(bad)
sbb
mov
rcr
in
jo
ds
or
jbe
pop
loopne
mov
jmp
(bad)
mov
xchg
lods
push
xchg
loope
sub
xor
les
inc
iret
adc
mov
stos
lods
pusha
(bad)
cli
je
mov
(bad)
lock
xor
jno
push
cs
add
mov
loop
sub
adc
or
add
mov
fisttp
dec
adc
ds
stc
mov
dec
and
(bad)
mov
mov
fimul
xor
pop
icebp
pop
add
inc
lock
das
shr
lea
out
movs
inc
aam
in
repz
inc
int3
retf
jg
pusha
hlt
mov
test
js
int3
fcomp
mov
mov
inc
imul
xor
xchg
mov
and
pop
pop
(bad)
mov
call
cli
sbb
in
gs
mov
jl
in
push
xor
call
mov
ds
dec
dec
mov
mov
ja
out
cmps
mov
(bad)
je
mov
push
and
add
arpl
mov
mov
or
sbb
sbb
rcr
into
mov
add
and
pop
pushf
push
push
test
xchg
test
mov
lahf
inc
jl
mov
addr16
sub
retf
clc
add
mov
mov
sti
cmp
cwde
popf
adc
xchg
sub
pushf
imul
leave
scas
mov
push
rcr
loope
jo
fld
in
or
add
pop
adc
rcr
test
in
add
add
or
cmp
jo
adc
jbe
addr16
xchg
mov
in
ins
loope
cwde
sub
outs
inc
sub
lahf
and
add
call
cli
cmp
(bad)
mov
(bad)
lock
ret
(bad)
mov
adc
setge
inc
adc
jnp
jnp
jle
jl
sub
int3
xor
push
xlat
add
jg
xor
ror
rol
mov
xchg
sbb
fcom
push
scas
rcr
xor
inc
lods
ss
or
mov
fdiv
pop
cmp
pop
arpl
jl
dec
dec
mov
cli
dec
xchg
push
out
or
sub
add
xor
jns
or
imul
jo
ficomp
add
or
aas
call
(bad)
ja
dec
pushf
push
js
cmp
rcl
xchg
inc
in
gs
dec
sub
stos
jno
push
and
out
jg
test
retf
shl
out
retf
adc
int3
dec
jg
lea
inc
shl
loop
cmp
pop
lahf
mov
das
jmp
xchg
mov
sub
xchg
addr16
fxch
adc
data16
or
adc
push
xor
jno
adc
lea
inc
xchg
mov
out
out
xchg
jecxz
imul
call
mov
xlat
scas
arpl
mov
jg
pusha
imul
sar
retw
push
adc
fucomp
sbb
xchg
push
daa
push
or
xchg
jle
cld
or
movs
mov
cmps
or
cmp
jmp
sahf
mov
xchg
in
scas
jnp
in
adc
das
shr
in
inc
das
inc
lock
arpl
ja
inc
mov
hlt
mov
test
pop
sub
inc
pop
call
mov
adc
xor
add
add
imul
imul
dec
fwait
sub
pop
rcr
fwait
mov
scas
retf
popa
imul
fdivr
iret
loope
xlat
add
mov
mov
test
mov
inc
daa
es
ret
jmp
call
call
inc
push
test
test
xor
mov
inc
inc
add
cmp
aas
xchg
sbb
mov
pop
mov
push
aad
hlt
mov
inc
div
dec
imul
inc
jl
iret
and
mov
adc
jmp
add
xchg
xchg
shl
cs
cmps
fmul
in
and
push
cmp
or
rcr
hlt
and
clc
mov
inc
pop
jno
popf
pop
mov
and
fld
test
pop
mov
jmp
dec
or
xchg
xor
enter
lock
mov
mov
ficom
push
inc
movs
sub
xlat
mov
fs
mov
mov
pop
popa
sbb
sub
std
sbb
sbb
mov
mov
or
ret
popa
cwde
or
nop
jmp
inc
pusha
xor
jb
popf
test
into
xor
sub
dec
xchg
or
mov
pusha
loope
(bad)
fst
cli
cwde
xchg
jl
add
mov
adc
(bad)
js
or
mov
(bad)
fdiv
(bad)
ficom
arpl
ret
jmp
popa
int3
jmp
test
add
cmps
pop
jle
enter
dec
popf
inc
push
ins
xchg
jns
dec
push
ret
lahf
ins
movs
nop
dec
or
push
mov
push
add
cdq
sbb
imul
sub
xor
push
out
in
mov
push
sti
inc
aad
js
jne
push
(bad)
out
ret
inc
(bad)
inc
sti
and
mov
jle
adc
js
call
aaa
xor
pusha
jmp
test
popa
inc
cwde
std
pushf
push
push
jae
js
inc
inc
scas
fst
mov
loopne
ret
jnp
lock
dec
push
and
aas
dec
and
and
test
fsub
sti
jno
mov
fnsave
jae
ret
mov
mov
call
scas
outs
add
mov
inc
outs
xor
or
call
mov
ss
mov
dec
jle
test
in
mov
stos
sahf
adc
xchg
ret
fwait
imul
loop
mov
idiv
xchg
mov
push
nop
clc
pop
add
add
mov
pop
scas
inc
add
and
inc
adc
mov
pop
(bad)
and
jne
das
popa
(bad)
pop
push
stos
loopne
gs
add
daa
and
xor
mov
xchg
inc
pop
out
mov
or
dec
xor
rcl
add
mov
ins
sub
into
in
std
pusha
add
movs
adc
loope
dec
es
lock
mov
or
cwde
loop
inc
test
add
dec
jns
adc
push
out
ret
or
cmp
mov
in
cmp
cmp
mov
jp
sbb
xchg
mov
pop
inc
and
js
xor
pushf
popf
adc
adc
inc
push
aas
sti
mov
fnstenv
clc
clc
push
sbb
dec
mov
lahf
retf
into
pop
adc
ss
out
jno
jns
pop
or
nop
fcmove
lods
mov
lods
pushf
dec
pop
xchg
pop
mov
lahf
movs
adc
sbb
shr
or
pusha
cmp
cmp
scas
sbb
xlat
or
test
pop
or
or
(bad)
and
sahf
clc
mov
xchg
arpl
cmp
lods
or
std
and
xor
or
retf
daa
fnsave
neg
popa
std
scas
mov
retf
pfrsqrt
xchg
sti
jmp
loopne
cli
pop
dec
cmps
addr16
hlt
movs
pop
sub
xor
sub
jne
out
pop
stos
leave
mov
xor
(bad)
adc
pusha
(bad)
hlt
push
ins
adc
mov
xor
out
lods
sub
mov
jae
loope
clc
sti
popf
add
mov
push
ins
sbb
mov
and
out
aam
cmps
icebp
ficom
pushf
lahf
aas
aad
fcom
jnp
adc
mov
dec
cwde
add
stos
jmp
inc
mov
hlt
out
push
out
cmps
mov
leave
push
scas
xchg
out
cmp
mov
pop
sar
add
add
in
mov
loopne
(bad)
push
pop
push
jg
(bad)
jnp
pusha
hlt
jmp
xchg
adc
ror
add
stos
xor
fcmovnbe
mov
std
xlat
out
test
inc
sub
dec
loop
push
mov
int3
test
fadd
sbb
inc
out
pop
js
sbb
inc
sbb
sbb
dec
lds
aad
mov
ds
addr16
and
jmp
inc
mov
sbb
and
or
mov
sub
jmp
xlat
mov
and
imul
and
shr
hlt
sbb
mov
cmp
inc
fst
mov
stc
push
push
call
sub
xchg
aas
xor
mov
scas
inc
sbb
sub
push
ss
outs
lahf
xchg
pop
sbb
mov
jl
jp
cmp
mov
inc
xor
pusha
aaa
push
call
push
fs
xor
mov
aaa
mov
xchg
stos
adc
adc
f2xm1
mov
sub
scas
lock
out
cdq
push
(bad)
adc
dec
or
jnp
popa
cmps
retf
outs
test
out
int3
or
jne
dec
(bad)
push
dec
xor
sahf
imul
add
retf
pop
leave
jl
mov
arpl
rol
dec
in
dec
outs
ds
jmp
jne
dec
jg
push
push
div
mov
icebp
or
lds
dec
rcr
mov
(bad)
mov
retf
mov
ror
mov
test
vpmaxub
fild
cmp
mov
jno
jne
adc
add
ret
out
call
int
jo
sbb
gs
js
int
jmp
out
sbb
std
sub
xor
mov
inc
gs
out
mov
push
cmp
mov
cmp
adc
or
pusha
idiv
and
and
das
mov
pop
fs
jp
sbb
dec
std
hlt
mov
xor
jmp
dec
inc
push
and
into
mov
fcomp
and
inc
push
call
out
paddq
mov
aaa
push
xchg
cmp
adc
cmp
jg
adc
fcmovnu
xor
pop
into
mov
imul
inc
pop
(bad)
icebp
xchg
mov
mov
xor
adc
aaa
xchg
push
xchg
jbe
xor
jo
ja
push
scas
movs
push
mov
call
mov
shl
(bad)
call
es
sub
push
xor
inc
in
and
bound
add
nop
pop
pushf
es
rcr
repnz
jnp
and
or
xchg
ret
cmps
mov
ret
mov
dec
pop
inc
sbb
dec
sbb
mov
mov
cmp
fstp
inc
mov
mov
fwait
repnz
inc
and
lock
call
pushf
ficomp
std
not
das
push
ret
mov
sahf
and
aaa
fcomip
lods
and
test
and
push
stc
mov
xchg
fist
lahf
dec
test
mov
repz
mov
outs
int
je
loope
inc
sub
push
add
inc
dec
inc
call
adc
sub
nop
mov
add
out
cli
mov
outs
sti
jo
ss
in
xor
(bad)
call
(bad)
rcr
pop
mov
cmp
out
adc
dec
movs
inc
mov
xor
or
adc
mov
dec
pop
je
and
adc
aaa
mov
ss
cs
mov
sbb
jecxz
xchg
mov
adc
adc
lea
cmc
inc
push
sbb
cmps
xchg
shl
jo
pop
ret
jmp
mov
sub
dec
inc
imul
scas
fild
out
call
loop
pushf
lahf
ins
add
sbb
(bad)
xor
movs
xchg
dec
and
sub
push
mov
sbb
sbb
mov
or
xchg
add
adc
adc
jno
or
or
in
(bad)
jecxz
imul
add
(bad)
mov
lahf
and
xor
xor
shl
pop
lahf
xchg
xor
push
sub
adc
pop
cmps
pop
sti
enter
cli
xchg
das
sub
loopne
hlt
adc
or
inc
mov
fs
xor
xor
sub
lds
movs
call
fwait
dec
loope
xchg
mov
in
bound
or
in
lea
call
cdq
inc
fisubr
add
popf
sbb
repnz
sar
stos
jle
fiadd
pop
mov
cmp
push
js
pop
repz
stc
addr16
jecxz
popf
dec
and
cwde
outs
pop
jns
int
add
adc
enter
iret
sub
test
in
loop
cli
dec
inc
jmp
loopne
repnz
pusha
cmp
push
jmp
imul
sub
xchg
pop
mov
pop
or
jp
mov
jl
test
hlt
mov
aad
ja
adc
dec
enter
call
test
daa
out
mov
std
inc
jl
js
push
pop
fnsave
add
(bad)
jnp
shr
pop
call
push
lds
adc
push
and
imul
pushf
cmp
stc
and
rcr
jg
xor
gs
fisub
push
adc
xor
cld
pop
cdq
gs
sub
fild
fs
jg
or
sbb
xor
xor
mov
(bad)
xchg
mov
lahf
pushf
addr16
dec
and
and
pop
mov
lock
mov
xchg
loop
pop
mov
addr16
inc
inc
inc
inc
popf
add
retf
mov
pop
mov
div
shr
inc
cs
prefetch
or
ror
movs
pop
dec
iret
xor
xchg
and
or
out
popf
div
jle
xchg
sub
jl
jne
call
mov
mov
cmp
retf
fs
loopne
add
(bad)
push
xor
cmps
push
xor
cmc
pop
lock
test
lock
stc
mov
inc
mov
jne
es
mov
fimul
pop
push
out
jns
fldenv
test
les
sub
pop
fisttp
cmc
dec
leave
cmps
mov
out
test
push
loopne
jmp
outs
push
sub
add
rol
imul
imul
in
outs
bound
mov
ins
adc
xor
lods
dec
lods
add
ins
mov
xchg
xlat
lea
xor
aad
adc
std
sub
lock
inc
cmp
leave
and
mov
out
imul
cmp
scas
sbb
push
imul
hlt
imul
in
cmps
push
jp
pop
test
push
or
inc
jmp
sar
inc
ret
movs
mov
in
mov
mov
jle
iret
adc
xchg
sub
push
and
mov
sub
jae
arpl
cmp
sbb
outs
aad
lods
(bad)
imul
cmp
xor
jo
and
sub
in
cwde
rol
inc
icebp
aaa
pop
sub
pop
push
jbe
scas
and
aad
ja
into
add
rol
cmc
aas
push
cmc
jb
add
popf
loop
cmp
stos
add
enter
push
xor
popf
mov
daa
mov
dec
and
sub
nop
retf
jmp
out
gs
aad
adc
cmps
std
add
in
or
adc
add
lahf
imul
shr
pop
aaa
arpl
sbb
retf
pop
inc
dec
and
in
push
es
cmp
mov
(bad)
mov
call
add
lock
xchg
dec
mov
pusha
push
stc
scas
add
test
adc
enter
int3
leave
sti
cmps
adc
aaa
iret
sub
lods
cmps
add
imul
call
das
paddsw
push
jne
cmp
imul
les
pop
jbe
or
std
hlt
or
cmp
out
outs
adc
cmp
fisttp
push
xchg
test
adc
pushf
dec
je
cmp
sbb
enter
fisttp
and
jo
out
jne
movs
mov
xor
das
and
ins
inc
test
fisubr
mov
or
fwait
jp
and
fsubr
pop
push
aam
pop
xchg
in
cs
mov
dec
into
fisub
add
inc
shr
xor
xchg
push
loopne
and
outs
lea
ds
mov
mov
jg
xchg
scas
push
out
jnp
lahf
xchg
lss
ins
cmp
into
jmp
cmc
pop
imul
dec
cdq
icebp
pop
mov
push
cmp
ins
dec
sbb
jge
mov
jmp
cmp
jmp
and
push
(bad)
cmp
jg
push
lock
xchg
inc
mov
fild
xchg
mov
icebp
inc
sub
jns
xchg
cmp
fs
push
sbb
add
mov
mov
mov
xchg
rol
in
jecxz
mov
cmp
adc
cmp
fiadd
mov
in
sub
inc
cdq
rol
(bad)
clc
stos
mov
xor
icebp
xlat
or
mov
sbb
mov
lahf
test
xchg
cmp
addr16
(bad)
xor
daa
sub
dec
xlat
out
or
addr16
ret
adc
into
(bad)
retf
jno
xor
es
mov
ret
push
mov
adc
add
shr
dec
or
retf
ins
jl
bound
mov
inc
int3
arpl
xchg
lods
xchg
arpl
cdq
jmp
pop
adc
int
jmp
mov
jnp
and
loope
dec
(bad)
xchg
add
mov
and
loope
xor
ds
jns
pop
jmp
fdivrp
push
pop
icebp
pop
add
or
loope
loop
push
ins
pusha
fld
(bad)
shr
cmps
xchg
mov
fdivr
outs
scas
and
mov
arpl
rol
mov
enter
push
jne
nop
xchg
pop
mov
ins
adc
test
outs
movs
loop
inc
stc
pop
arpl
inc
sub
adc
das
xor
movntps
test
and
inc
add
push
ja
and
aas
call
sbb
jge
xchg
jo
mov
push
mov
neg
cdq
(bad)
aas
fs
loopne
es
cmp
dec
xor
xlat
pop
cld
fldenv
adc
imul
sbb
cmp
push
sub
cmc
stc
ins
int
(bad)
adc
jmp
out
je
inc
mov
push
pop
loopne
jle
retf
ds
jo
pop
ins
loope
hlt
jge
inc
test
cmp
les
repz
pop
jge
fdivr
out
retf
pop
icebp
in
cmps
cs
js
int
push
jg
stos
imul
addr16
ins
leave
pop
push
shl
mov
mov
clc
dec
or
pusha
add
inc
pop
add
mov
mov
fs
jl
mov
mov
add
jmp
add
pop
les
gs
popa
cli
jno
pop
pusha
and
adc
outs
xchg
sub
loope
sub
jae
mov
aam
xchg
movs
pop
sbb
mov
(bad)
retf
pop
xchg
mov
inc
push
cmp
mov
xchg
add
dec
shl
fdiv
loope
pop
mov
cmps
je
mov
scas
cmps
add
jle
lahf
pop
dec
ret
bnd
or
mov
pop
pop
lock
je
shr
lea
pop
sub
je
sbb
mov
cmp
ds
(bad)
cmps
mov
stos
inc
and
enter
dec
outs
jecxz
or
xchg
adc
and
hlt
shr
out
inc
cmp
test
pop
cmp
fld
aaa
mov
int3
stc
cmps
lock
aam
das
in
mov
pushf
push
ja
inc
nop
pusha
fld
jae
push
pop
sahf
jg
in
sbb
outs
stc
shl
cmp
sbb
dec
mov
inc
ficom
xchg
sub
pop
adc
sub
push
into
movs
shl
mov
cs
inc
mov
cmps
inc
jecxz
shl
adc
sbb
mov
and
outs
in
out
pop
mov
mov
call
(bad)
cmc
(bad)
cmp
xchg
lahf
or
adc
mov
stos
scas
stc
xchg
push
jge
cwde
mov
jmp
dec
into
aad
fwait
jae
ins
push
and
in
mov
mov
jmp
mov
(bad)
cwde
push
fidivr
adc
aaa
jg
add
xchg
cwde
cmp
jp
add
pop
or
push
sub
add
or
jb
inc
movs
sbb
mov
jge
xchg
jle
inc
pop
das
rol
jo
or
push
jb
xor
cwde
(bad)
mov
dec
fdivr
nop
outs
mov
test
movs
fidivr
cdq
inc
lods
das
call
push
add
cmps
xchg
jmp
sbb
pop
cld
lds
dec
push
mov
jo
and
test
fdivr
cmps
neg
pop
int
or
dec
lea
pusha
add
(bad)
jg
out
nop
cld
inc
call
(bad)
aas
push
xor
adc
dec
dec
dec
xor
rcl
jmp
inc
mov
lods
pop
inc
dec
pop
sbb
nop
stos
stos
and
jecxz
in
loop
sbb
aam
jge
rcl
aam
cli
mul
fsubr
bound
sub
adc
mov
jmp
add
pop
inc
ja
xlat
mov
push
gs
jmp
xchg
data16
ss
test
fisubr
jg
dec
div
xor
sub
fnsave
jg
shr
mov
mov
out
dec
ffreep
sbb
js
sbb
adc
mov
loop
push
xchg
dec
nop
lods
xchg
push
or
jo
and
add
repz
retf
cs
mov
rcr
aad
outs
push
cld
sbb
rol
out
outs
(bad)
(bad)
xchg
sub
bound
daa
out
or
sbb
aaa
jle
lods
out
ja
mov
div
sti
cmp
mov
jae
cli
inc
add
movs
fs
repnz
xchg
pop
add
pop
mov
push
js
daa
pop
adc
test
pop
mov
ret
lods
loope
adc
loope
into
pushf
push
rcr
jb
jo
lea
and
inc
jg
cmp
or
jbe
in
jo
shr
push
mov
xchg
or
mov
push
stos
adc
test
cs
dec
out
pop
xchg
popa
inc
fild
int
pand
inc
outs
dec
test
daa
ret
jmp
sub
add
out
clc
xchg
push
mov
pop
pop
jecxz
sub
sbb
out
add
adc
or
mov
push
jae
mov
sar
push
les
and
aaa
ja
das
cdq
xor
pop
and
les
sbb
and
into
leave
sti
addr16
repz
sar
enter
int
mov
inc
jb
mov
mov
loopne
inc
push
mov
mov
mov
ins
add
movs
jo
daa
push
lahf
aaa
cmps
cmc
in
xchg
cmp
lods
mov
push
or
clc
push
ins
xlat
xchg
jge
mov
mov
js
js
sbb
push
cli
jmp
pop
stc
out
sbb
imul
adc
cmp
in
mov
test
imul
sbb
repz
sub
cwde
dec
pop
fs
dec
inc
ins
inc
ficomp
mov
sbb
out
imul
mov
xor
pop
lahf
xchg
jns
ins
enter
sbb
cmps
sti
jne
xor
loope
pop
mov
sbb
add
les
push
jle
push
pop
jno
mov
mov
jae
push
inc
cwde
fsubr
(bad)
arpl
ja
lods
add
jmp
movs
in
jg
jbe
ja
mov
mov
mov
pop
mov
jae
int
cmp
mov
jmp
dec
dec
sbb
test
fwait
(bad)
in
jo
push
fnstcw
lods
sbb
jl
mov
xor
sub
shl
out
jbe
mov
jns
pop
test
repnz
or
cmp
add
dec
xchg
xchg
int
shl
and
jg
pop
push
pop
cmps
push
cmps
addr16
fisub
rcr
mov
in
sbb
fld
neg
and
lods
pop
out
out
stc
mov
pop
xor
cmp
adc
mov
jge
sub
lea
out
push
mov
out
xor
retf
rcl
outs
dec
inc
iret
das
and
cwde
cmp
jg
addr16
jae
cmp
loop
shr
jge
add
scas
je
imul
dec
movs
es
jle
xchg
(bad)
mov
jbe
fs
int
push
xchg
sbb
ja
mov
aaa
aad
dec
inc
sbb
shr
ret
cmp
popa
mov
add
std
pop
xchg
sti
popf
pop
popf
add
push
clc
xchg
cmp
aas
mov
sub
ror
jnp
inc
mov
hlt
cmp
(bad)
stos
aam
xchg
adc
ror
stc
xlat
push
mov
dec
outs
mov
sahf
or
je
push
mov
loopne
mov
pop
mov
cld
lods
lock
stos
mov
or
aam
dec
and
jb
xor
test
push
je
push
lahf
test
icebp
mov
and
jo
je
ins
clc
xor
mov
das
lods
ja
mov
and
dec
xlat
stc
stos
sub
cmps
pop
bound
sub
iret
fstp
sti
popa
push
or
neg
sub
rcl
outs
test
bound
mov
int3
sub
push
push
je
dec
out
fnstenv
add
lock
sbb
mov
iret
mov
mov
stos
(bad)
loope
lea
and
dec
repz
ss
sbb
add
xor
cs
push
or
sub
enter
cld
and
jl
jbe
push
shl
dec
add
inc
cmc
lsl
pop
sbb
iret
and
mov
mov
sbb
mov
pop
leave
je
adc
jo
scas
clc
sbb
gs
or
dec
cs
mov
outs
in
mov
xchg
jl
aad
fisttp
cdq
or
pop
push
and
ror
xchg
retf
lock
pop
sbb
push
call
mov
mov
test
and
arpl
leave
sub
mov
popf
pop
jne
jmp
mov
dec
mov
push
out
cld
pop
cld
mov
dec
cli
and
sbb
das
sub
cmp
mov
rcl
sub
jb
outs
cdq
pop
pop
mov
mov
pop
es
inc
int
inc
mov
dec
push
scas
fs
or
push
push
inc
jp
scas
mov
add
mov
imul
sub
aas
mov
mov
popa
jle
push
pop
sub
jno
scas
inc
cmp
xchg
jno
scas
mov
and
inc
xor
push
xchg
arpl
sub
jno
cmp
mov
mov
jge
sub
cmp
js
(bad)
xor
ret
xchg
data16
add
cmp
fld
sar
dec
sub
shl
add
push
mov
loopne
sahf
popa
das
jecxz
ins
sti
shl
dec
mov
jle
mov
(bad)
adc
mov
and
cld
push
into
aaa
(bad)
jae
add
jge
cmp
push
jg
jp
fnstsw
and
jmp
and
or
inc
stos
mov
adc
jl
fcom
das
cmps
push
fstp
pop
mov
push
int
pushf
xor
addr16
call
and
xor
push
mov
out
mov
mov
push
das
sub
test
push
jnp
push
popa
imul
jmp
pop
or
daa
shr
test
mov
stos
cdq
xor
and
inc
aas
xor
sar
mov
xchg
std
test
or
sbb
popf
add
xchg
leave
jmp
sbb
sbb
aam
push
push
inc
pop
adc
jge
sbb
arpl
(bad)
sbb
sub
jg
add
or
adc
or
out
js
sub
mov
xchg
inc
push
jo
mov
shl
daa
and
push
add
mov
push
mov
pop
and
cmp
mov
outs
xchg
fstp
out
push
mov
mov
out
xor
add
mov
lea
sbb
pusha
xchg
fdivr
mov
jmp
and
loope
push
adc
or
stos
popf
in
push
and
mov
popfw
(bad)
fs
sub
mov
add
in
jo
or
fdiv
sbb
lock
test
shl
arpl
loopne
int3
cmps
cmps
nop
add
pop
and
push
js
dec
inc
sub
int
sub
mov
dec
test
outs
dec
push
inc
inc
leave
aaa
pmulhw
mov
adc
xor
add
popf
cmc
cs
arpl
daa
nop
dec
mov
retf
jnp
aaa
sbb
mov
ss
enter
mov
loopne
jge
jmp
iret
sub
movs
and
outs
adc
or
imul
fwait
sbb
fsub
test
lods
int
sub
test
aam
and
jb
jl
push
push
and
pop
rol
stc
mov
mov
lods
add
ret
jbe
inc
or
cs
add
sbb
cli
(bad)
cmc
mov
fnsave
or
or
(bad)
and
aaa
jnp
jns
out
daa
mov
push
push
add
dec
scas
pop
in
repnz
adc
cmp
inc
jge
push
int3
xchg
cs
mov
inc
stc
fwait
stos
mov
jmp
pop
mov
or
jg
shl
or
xchg
(bad)
cmp
pop
lds
das
repz
cmc
jg
imul
jg
dec
popf
jno
lods
leave
mov
inc
cdq
ins
repz
sbb
and
adc
jp
imul
dec
inc
dec
mov
sub
in
shl
shl
stc
rcl
mov
mov
out
in
ja
jmp
pushf
cwde
push
call
sub
adc
and
aad
imul
mov
hlt
imul
push
in
xchg
outs
icebp
xchg
sar
mov
scas
or
xchg
test
lds
cmova
sub
pushf
test
shl
and
adc
push
inc
and
mov
sbb
jnp
ror
adc
lea
inc
or
ret
lea
and
inc
xor
push
out
lds
(bad)
adc
sbb
mov
and
inc
push
in
sbb
push
jp
call
jecxz
add
mov
retf
xchg
nop
pop
fistp
mov
sbb
outs
pop
mov
stos
jmp
mov
clc
clc
ret
sub
mov
cmp
(bad)
add
pusha
xor
jecxz
jns
or
xchg
leave
pop
imul
int
ins
push
test
push
jl
add
test
dec
mov
nop
adc
add
les
inc
jbe
adc
jp
dec
aas
fwait
xchg
cmps
outs
push
adc
jo
aam
jmp
add
int
hlt
fcomp
jo
and
mov
xor
dec
jg
cmp
pop
jge
pop
call
jl
pop
mov
fbstp
(bad)
fwait
clc
fisttp
lods
adc
cmp
adc
xchg
adc
inc
jno
nop
retf
clc
add
fcomp
aas
add
in
cmp
inc
and
pop
cdq
mov
pop
fdiv
loop
sbb
lds
push
ja
ficomp
out
xchg
jg
lods
loopne
in
repnz
popa
mov
out
stc
push
daa
dec
stc
rcr
test
mov
cmp
cmps
dec
push
movs
dec
push
inc
es
push
or
(bad)
dec
xor
in
ins
daa
xchg
cld
int3
fstp
retf
mov
add
add
adc
cmp
ret
ret
sub
jp
stc
div
sub
jg
out
and
xchg
push
sbb
clc
adc
popf
mov
sbb
out
retf
mov
pop
push
push
push
inc
into
pop
adc
mov
das
pop
mov
mov
scas
xchg
test
mov
mov
imul
fwait
sub
fld
sbb
icebp
cmc
jl
call
mov
jnp
sti
call
div
cmp
jecxz
sahf
(bad)
aam
fdivr
in
in
adc
cmps
in
stos
pop
mov
popa
xor
lahf
paddq
outs
arpl
mov
fs
pop
ja
mov
sub
ins
xlat
xor
add
out
mov
or
inc
and
clc
es
imul
jecxz
adc
mov
test
xor
enter
mov
movs
retf
retf
pusha
sbb
xor
cdq
leave
push
(bad)
mov
and
inc
cmp
call
lds
jo
adc
test
aad
add
or
fistp
ficomp
and
xchg
std
dec
xor
xlat
leave
jb
pop
ffree
inc
(bad)
xor
pop
cs
enter
fcmovnu
popf
retf
fcomp
(bad)
cmp
pusha
lock
push
push
movs
mov
pop
xchg
add
mov
loopne
add
xor
stos
add
cld
cld
or
test
fisubr
and
mov
fild
jae
push
fs
dec
jecxz
aam
sub
jl
shl
xor
adc
ins
call
cmp
mov
es
sbb
pop
or
fsubr
std
push
test
push
je
leave
outs
xchg
hlt
shr
pop
sbb
popf
cdq
in
cmp
or
icebp
dec
jp
dec
arpl
clc
inc
je
ret
pop
sbb
jae
sbb
std
pusha
mov
or
(bad)
out
or
mov
sti
adc
xchg
jne
loop
scas
imul
jl
and
sbb
test
xchg
mov
leave
es
loope
xchg
jl
mov
loope
pop
jp
in
aaa
lock
sub
(bad)
mov
xchg
clc
sub
push
inc
ins
aam
mov
cs
(bad)
popa
mov
rcl
loop
cdq
dec
scas
dec
push
into
es
sub
and
mov
lea
mov
push
movs
mov
call
dec
mov
mov
in
daa
fucomp
repz
stos
call
and
sbb
retf
call
jge
cmc
imul
cmp
xor
pop
xchg
pusha
inc
add
imul
jmp
loopne
sahf
pop
dec
and
call
adc
loop
out
mov
test
or
retf
sub
movs
call
les
movs
sbb
dec
mul
xchg
aas
add
shl
push
cmp
loop
scas
jle
mov
push
cmp
fldenv
(bad)
in
imul
sbb
cmp
sbb
xor
call
lds
imul
or
test
push
sahf
popa
mov
push
xor
mov
fwait
popa
fwait
cwde
cmps
fcom
push
test
xor
push
xlat
in
movs
add
adc
jo
das
in
sbb
pop
pusha
xor
push
punpckhbw
test
xor
push
mov
mov
xchg
and
sbb
sbb
lea
sub
dec
and
adc
out
mov
sbb
fld
add
ins
call
gs
xchg
pop
mov
fldenv
pop
adc
ss
inc
sbb
les
pop
jne
cwde
dec
adc
push
js
loop
retf
pop
stos
cmp
push
mov
add
inc
mov
xor
mov
dec
fmul
adc
dec
xchg
arpl
jne
push
mov
jnp
cli
fdiv
dec
repnz
jmp
scas
stos
clc
mov
fsubrp
push
call
sub
cmps
pop
clc
stos
enter
jp
inc
inc
mov
mov
outs
mov
outs
push
dec
jmp
(bad)
ja
inc
fidivr
and
call
dec
dec
das
sub
mov
push
cmp
sub
cmc
mov
repnz
mov
mov
scas
bound
pop
mov
(bad)
adc
imul
xlat
inc
push
inc
and
cmp
lods
adc
inc
lods
mov
mov
add
jns
jp
jnp
pop
jmp
popf
adc
fcom
into
repnz
xchg
or
dec
mov
dec
lods
ss
push
pop
jns
add
add
test
sbb
add
and
ret
push
add
or
cmc
jmp
fcmovnbe
xchg
dec
or
or
icebp
push
adc
int3
fcom
dec
(bad)
adc
in
adc
push
push
dec
mov
imul
push
dec
fs
sti
sub
xchg
movs
mov
call
fwait
mov
pop
mov
arpl
mov
in
div
call
push
popf
test
xor
cli
pop
sub
mov
mov
ficom
lea
push
mov
daa
sbb
inc
shr
les
bound
icebp
test
mov
inc
xchg
push
addr16
add
addr16
call
push
xor
(bad)
cld
sub
xchg
jmp
pop
mov
mov
shr
popf
lea
add
imul
sbb
fidivr
into
pop
dec
inc
stc
lods
inc
sbb
jge
adc
movs
repnz
stos
das
push
idiv
add
jo
cmp
mov
fisubr
movs
mov
xor
mul
adc
retf
inc
bound
mov
xchg
cmps
jb
push
fucomp
cmp
lds
ds
or
jbe
sub
cvtdq2ps
mov
sub
popa
inc
cmp
add
adc
add
aaa
mov
mov
std
cmp
pop
push
and
call
stos
xor
sub
lea
aas
call
mov
sub
fwait
ds
adc
outs
xchg
or
inc
push
push
sahf
dec
std
sbb
xchg
xchg
jmp
cmc
push
pop
dec
push
arpl
cld
lahf
xchg
cdq
and
push
int
pop
jmp
sbb
sahf
pop
(bad)
aad
aad
fnsave
inc
ds
mov
xchg
inc
mov
rcr
add
or
adc
mov
es
push
dec
test
rcl
fisttp
xchg
mov
add
in
bound
cmp
rcl
popa
or
cmp
mov
push
in
lock
pop
mov
mov
ins
ins
mov
pop
icebp
bnd
mov
push
nop
loopne
mov
pop
(bad)
addr16
dec
sbb
jmp
mov
scas
(bad)
das
or
popa
lahf
je
push
adc
inc
and
or
mov
leave
xchg
cmp
(bad)
ins
ins
and
pop
xchg
mov
sub
jns
push
xor
push
rol
repnz
sbb
idiv
adc
push
mov
jle
cmp
pop
inc
xor
ror
jp
in
fdiv
jg
mov
das
gs
add
aas
lds
ins
out
xchg
retf
inc
lahf
add
mov
mov
cmps
xor
mov
xchg
pop
cmp
mov
cmp
fwait
xchg
fsubr
mov
and
push
inc
jne
pop
jmp
sub
aad
inc
fbld
xchg
(bad)
jmp
retf
ror
fcom
nop
mov
add
fwait
pop
xchg
push
add
retf
mov
rcr
add
idiv
dec
cmp
(bad)
sbb
cmps
test
push
std
into
hlt
mov
dec
rcl
test
in
sub
into
js
xor
inc
je
div
sbb
clc
inc
loop
mov
fist
rcl
mov
sub
cmp
movs
or
sbb
xchg
int3
out
xchg
pop
imul
das
out
stos
fisubr
call
xchg
int
and
mov
sub
adc
dec
outs
retf
sub
mov
xlat
add
pop
cmp
in
dec
jbe
cld
pop
pop
add
es
push
xchg
add
ficomp
pop
je
rol
nop
mov
lock
jmp
pop
xor
neg
enter
out
and
aas
retf
mov
add
mov
out
sub
gs
ret
jmp
lods
in
and
pop
cmp
cmp
xchg
js
aam
retf
mov
or
test
bound
mov
xchg
sub
cwde
sub
cmc
cs
jp
mov
push
jne
(bad)
jmp
repz
das
(bad)
adc
retf
push
dec
push
sbb
int3
xor
stos
mov
push
or
xor
pop
adc
add
icebp
adc
pop
icebp
test
jb
fisttp
push
cmp
push
sahf
cld
sbb
sub
mov
movs
test
rcl
xor
leave
jbe
mov
stos
add
sub
(bad)
scas
in
shl
test
inc
or
inc
adc
mov
mov
push
arpl
mov
outs
fwait
loope
imul
sbb
and
outs
inc
push
jns
ret
mov
and
dec
imul
sub
popf
mov
mov
add
enter
dec
rol
xchg
push
jo
sub
mov
mov
adc
test
daa
(bad)
test
sbb
(bad)
loope
lea
fild
ja
ret
aas
arpl
int3
sub
xor
xchg
(bad)
call
fs
scas
jmp
dec
push
pop
jecxz
outs
cmp
dec
cmp
sub
sti
jno
dec
push
popf
popf
jge
and
mov
int
xor
mov
mov
arpl
imul
xchg
fsub
inc
xor
add
(bad)
sub
sbb
push
mov
xchg
ins
fadd
xor
je
jl
push
ficom
mov
sbb
inc
dec
xchg
push
xchg
adc
addr16
sbb
jmp
loopne
push
movs
test
inc
sbb
mov
sbb
mov
ret
add
stos
ins
(bad)
xchg
loopne
dec
jnp
xor
ror
jle
add
in
inc
scas
push
mov
mov
ins
stos
(bad)
add
xor
dec
cmps
icebp
pop
aaa
nop
stos
mov
pop
ss
cmps
cmp
ret
sbb
enter
cmp
mov
inc
jo
std
dec
dec
cmps
sub
cwde
sbb
push
rcl
jmp
and
push
jl
addr16
sbb
add
inc
push
nop
test
cmp
xor
daa
sub
add
cmp
mov
jns
adc
push
ds
popf
(bad)
xchg
test
inc
mov
push
dec
and
cmp
sbb
ins
push
push
push
shl
in
test
and
xchg
dec
pop
jge
push
mov
add
jmp
pop
inc
and
add
loopne
dec
and
fisttp
data16
pop
movs
sub
inc
cwde
inc
xor
dec
xor
mov
lock
mov
push
fiadd
jmp
shl
and
adc
sbb
dec
sub
(bad)
scas
mov
es
out
call
push
ror
pop
dec
sbb
xchg
pop
sub
popa
lds
std
repz
pop
xchg
(bad)
xchg
cdq
(bad)
data16
dec
sub
sub
cmp
mov
imul
(bad)
xchg
cmp
inc
imul
aas
jle
mov
pusha
dec
push
or
fld
and
pop
repz
call
jecxz
ja
test
or
sub
cs
test
pop
pop
mov
or
sub
xchg
pop
rcl
push
sbb
sub
xchg
retf
dec
out
aad
loopne
imul
sbb
sub
sbb
(bad)
push
pop
jae
and
push
dec
push
jmp
ror
jl
cdq
inc
jo
fistp
data16
add
fwait
mov
adc
push
adc
mov
cmc
addr16
push
xchg
test
in
sub
xchg
dec
daa
out
and
hlt
test
or
mov
arpl
fistp
fild
mov
dec
mov
(bad)
(bad)
fiadd
xchg
inc
lods
mov
pop
or
(bad)
lock
arpl
int
mov
popa
inc
add
data16
mov
mov
dec
repz
cmp
mov
mov
inc
xchg
in
dec
and
retf
mov
mov
cmps
ret
push
pop
fldcw
or
push
push
das
xchg
ins
push
pop
adc
cmp
arpl
mov
rcl
push
pop
cmps
jecxz
inc
push
or
ja
call
jmp
cmp
push
xchg
ins
cdq
dec
xor
inc
test
pop
add
jno
jb
loopne
fcom
mov
je
or
xor
div
or
push
jg
and
push
jecxz
lahf
neg
rcl
dec
test
add
inc
push
inc
inc
mov
mov
fs
sub
retf
add
imul
jl
push
fisub
dec
ds
stos
mov
out
xchg
ins
xor
push
in
bound
mov
mov
xor
loopne
fadd
stos
push
movs
jae
add
das
mov
xchg
dec
xchg
push
and
add
int3
fdiv
aam
adc
out
pop
mov
adc
add
push
and
xlat
test
adc
mov
rcl
daa
fisttp
es
pop
(bad)
jmp
test
aas
outs
into
inc
outs
jno
and
jl
or
aam
push
out
ds
(bad)
fsubrp
out
adc
int3
push
ficomp
movs
lods
sbb
xchg
movs
dec
add
mov
imul
ins
jbe
xchg
stos
cdq
push
pushf
dec
add
push
mov
dec
aam
adc
ds
mov
popf
jmp
add
mov
ror
aaa
pop
adc
dec
mov
jg
lahf
xor
mov
lea
jmp
xor
fistp
push
mov
pop
mov
rcr
push
fbstp
xor
xlat
xor
out
inc
lods
stc
cmp
pop
call
mov
add
xchg
fld
rcl
psllw
icebp
stos
xchg
inc
cmp
stos
xchg
outs
neg
pop
test
shr
push
test
jo
or
in
bound
ret
shr
enter
outs
loopne
arpl
fldcw
sub
mov
xchg
sub
push
in
push
pop
mov
mov
cmp
xchg
test
(bad)
mov
add
aad
or
arpl
loop
pop
sbb
or
pop
dec
sti
mov
ins
pminub
test
mov
dec
pop
hlt
mov
sbb
bound
add
inc
popf
ds
fmulp
cli
push
mov
mov
fs
sub
push
mov
outs
mov
cdq
fisubr
adc
lods
push
xor
xor
into
ret
cmp
loopne
push
sub
and
cmp
or
pop
adc
inc
dec
and
outs
jmp
inc
fst
cmp
lods
jg
dec
and
pop
push
add
repz
in
jp
jbe
xchg
pop
xchg
cwde
xchg
or
jg
lods
pop
xor
stos
pop
ss
enter
mov
mov
dec
nop
jl
leave
(bad)
out
pop
jp
cdq
jmp
and
inc
xchg
mov
pop
call
imul
outs
inc
mov
data16
add
ret
out
dec
adc
cmp
mov
and
(bad)
cmp
rcr
xlat
fiadd
imul
jns
xor
fld
pop
add
mov
lock
cmp
dec
jns
in
mov
hlt
retf
sbb
or
fisubr
aam
adc
aam
pop
mov
je
jecxz
fisubr
mov
addr16
test
out
mov
mul
clc
xor
test
sbb
stos
sar
mov
push
sub
div
js
retf
sbb
mov
add
cmp
or
lahf
xor
scas
jmp
stos
cdq
dec
dec
ja
xchg
xor
lds
leave
es
inc
cld
push
xchg
inc
push
scas
shr
movs
adc
enter
mov
push
call
and
enter
jp
(bad)
aas
test
pop
fsub
hlt
push
ror
test
or
push
sbb
push
icebp
jmp
inc
in
push
pop
mov
shl
movs
test
push
inc
sub
adc
xchg
outs
(bad)
lock
pop
dec
into
pop
push
out
(bad)
out
xor
and
pop
(bad)
das
mov
jge
mov
and
out
ss
xlat
jo
ds
cmp
or
or
or
add
add
leave
sahf
and
xchg
mov
mov
je
ins
fwait
jo
clc
adc
mov
lea
pop
push
cmp
fwait
dec
inc
add
jmp
cs
aaa
aad
jl
adc
(bad)
push
int3
xchg
add
cmps
dec
adc
cmp
dec
push
ins
pop
jb
and
pusha
out
out
gs
jnp
inc
mov
cmp
jg
sbb
leave
dec
and
cmp
enter
outs
es
xlat
jle
sub
aaa
int3
sti
sub
xchg
push
lock
jno
push
out
add
repnz
push
sbb
mov
popf
add
and
in
scas
cmp
stc
aad
pushf
inc
add
mov
push
sub
sub
push
aad
std
jle
pop
jp
fwait
inc
jecxz
adc
popa
in
hlt
mov
and
dec
movq
ins
xor
leave
movs
jae
call
xor
adc
sub
popa
inc
cs
call
js
cmp
daa
lods
mov
call
retf
stos
sbb
add
jns
sbb
aas
xor
sub
pop
or
add
sbb
adc
or
inc
pop
add
mov
(bad)
in
ffree
aad
movs
jb
outs
mov
int
dec
jmp
sbb
sub
mov
popa
jl
in
addr16
mov
repz
mov
in
sahf
xchg
test
xor
or
mov
loope
mov
out
adc
in
mov
loope
(bad)
and
repz
movs
jmp
nop
imul
cmp
or
and
jnp
loope
adc
mov
dec
out
and
inc
rcl
in
adc
into
ficomp
add
(bad)
movs
je
adc
imul
xor
inc
cmp
mov
test
out
and
inc
mov
mov
imul
and
fcomp
(bad)
sub
xchg
xchg
mov
fwait
clc
mov
adc
shr
pushf
lds
or
enter
lea
es
mov
fbld
push
lahf
sbb
jge
out
data16
jbe
lods
mul
jmp
sahf
ins
loopne
xor
jl
stos
pop
pop
sbb
cld
cmp
mov
mov
or
ja
jmp
or
mov
jge
lods
mov
popa
adc
idiv
clc
test
xlat
cmp
fs
in
inc
pop
dec
dec
cmp
inc
xor
mov
lahf
ror
mov
test
fld
sub
pop
sahf
enter
sub
add
shr
mov
jmp
push
jbe
ret
test
jne
adc
neg
sbb
in
or
call
inc
jne
pop
addr16
int3
test
or
sub
stc
inc
sbb
push
mov
enter
scas
inc
loopne
loop
jbe
xor
aas
enter
dec
mov
jge
dec
lods
adc
push
call
cs
push
lods
dec
jo
pusha
je
or
test
fst
hlt
retf
das
jmp
addr16
add
cmp
fidiv
xlat
arpl
(bad)
sub
shl
xor
call
test
outs
push
leave
(bad)
(bad)
xor
(bad)
mov
xchg
xor
mov
xlat
cli
inc
in
mov
mul
icebp
xor
(bad)
sub
add
mov
cmp
retf
fiadd
fimul
(bad)
mov
xor
fiadd
cld
push
out
jno
loope
lods
add
aas
into
xchg
test
push
cs
dec
shl
sub
sti
in
repnz
xor
pop
outs
inc
stos
adc
dec
jmp
cmp
test
mul
lods
push
mov
push
jge
sbb
fstp
pushf
push
je
jp
xlat
aad
ror
add
mov
fdiv
lea
mov
jle
push
fwait
mov
and
movs
in
push
mov
cmp
mov
jecxz
retf
repz
dec
mov
loope
xchg
cld
cmps
push
or
neg
pop
push
jnp
jecxz
fstp
aam
sti
push
imul
sbb
leave
shl
mov
push
ins
mov
mov
mov
lock
xchg
xlat
jecxz
enter
pop
sub
mov
push
xlat
in
pop
push
out
in
ja
pushf
dec
xchg
jmp
out
ret
fistp
add
cmp
fadd
leave
das
mov
pop
sbb
out
jle
or
mov
hlt
xchg
dec
push
movs
popa
jns
das
pop
mov
imul
loope
je
xchg
shl
sahf
pop
or
sar
pop
sub
push
in
call
mov
pop
mov
pop
ja
mov
retf
or
loopne
out
pop
std
jns
jbe
mov
movs
cwde
test
jo
es
int
ds
cmp
cli
xor
je
sti
mov
rcl
ja
stc
mov
pop
push
lds
xchg
mov
shr
dec
repnz
mov
mov
jg
inc
push
fnstenv
inc
ds
mov
inc
call
leave
(bad)
sub
and
dec
xchg
jmp
push
cmp
or
mov
jmp
mov
lea
mov
mov
(bad)
sahf
scas
mov
call
fcom
(bad)
mov
mov
xchg
adc
sbb
out
pop
or
or
mov
push
pop
mov
push
xchg
outs
fild
stos
pop
sbb
or
and
jmp
cwde
add
mov
dec
fistp
cmp
push
enter
cmc
ins
int
aaa
repz
leave
es
sbb
fisttp
popf
ret
adc
mov
movs
jae
pop
retf
hlt
add
repnz
icebp
fld
sbb
jmp
push
fcmovnu
pop
jmp
(bad)
stc
mov
fimul
retf
add
not
mov
test
xor
dec
movs
mov
in
stos
push
lock
arpl
mov
mov
ror
shl
sbb
imul
repz
adc
add
fxch
and
in
pop
fsubr
add
inc
leave
mov
inc
xchg
dec
hlt
imul
shl
xchg
(bad)
mov
push
out
aam
and
lea
shl
ror
fcmovne
es
call
jmp
push
push
in
aam
jo
xor
sbb
aas
lahf
cdq
add
lods
sub
loope
dec
ret
es
arpl
xor
xchg
sbb
inc
movs
sar
adc
cs
xor
out
mov
jo
jmp
jge
sbb
add
mov
data16
fld
ss
sbb
pop
inc
stos
push
dec
dec
mov
(bad)
pop
mov
imul
int
push
jmp
mov
sbb
imul
pop
mov
mov
stc
mov
loop
xchg
mov
test
out
sahf
icebp
repz
cmp
pop
pop
or
xchg
ja
icebp
enter
stos
xor
les
push
bound
dec
ret
jmp
mov
pusha
or
xchg
adc
push
cmps
dec
and
hlt
or
pop
shl
jmp
mov
mov
mov
or
gs
adc
xchg
sub
into
es
cwde
retf
mov
or
imul
lahf
cmp
test
aam
aaa
dec
call
popa
dec
xor
nop
data16
lods
sub
lds
leave
pop
xchg
cld
lahf
popa
(bad)
fistp
cli
pop
adc
push
loope
xchg
leave
in
ins
mov
cmp
loop
fst
adc
sub
dec
mov
scas
aaa
in
or
jmp
out
outs
or
bnd
je
sub
cmp
(bad)
repnz
inc
inc
test
fwait
scas
pushf
in
mov
mov
add
cdq
xchg
(bad)
fiadd
push
jnp
dec
xlat
sbb
into
and
(bad)
sahf
clc
fnsave
pop
cwde
jae
icebp
call
fadd
popf
cmps
xchg
cmps
push
es
inc
jge
int3
(bad)
fimul
ror
cli
lods
ret
into
pop
dec
cmp
into
ret
inc
lock
pop
shl
jb
sub
retf
fs
in
mov
and
mov
out
mov
pop
jp
test
sbb
fmul
sub
adc
cmp
inc
pop
out
call
cmp
(bad)
fs
cwde
cmps
sti
stc
cmp
sub
mov
(bad)
hlt
mov
cmp
push
(bad)
sbb
ins
inc
xchg
iret
or
add
mov
icebp
test
ret
dec
pop
outs
(bad)
icebp
int
repnz
mov
lds
inc
stos
sbb
je
ss
stos
dec
pop
stc
sbb
sub
rol
stos
jle
xchg
loope
pop
push
inc
enter
leave
dec
pop
mov
repnz
fist
and
sbb
and
stc
loop
push
sub
mov
aam
mov
inc
sub
imul
test
mov
rol
stos
and
out
or
push
inc
pop
mov
mov
jnp
es
push
xchg
mov
mov
sti
sbb
enter
or
xchg
frstor
mov
ins
(bad)
neg
or
add
aas
jne
mov
imul
cmps
shl
pop
dec
xchg
push
mov
cld
(bad)
aas
dec
outs
add
movs
cmp
push
cmp
jbe
xchg
jno
cmp
pop
dec
shl
and
jbe
pushf
imul
stos
stc
(bad)
push
fdivrp
mov
test
pop
dec
and
lods
inc
mov
cmp
xor
inc
xchg
and
aaa
(bad)
int
fcom
adc
out
or
push
ret
lods
fimul
sti
dec
fisttp
xchg
je
js
int3
xor
popf
lds
and
push
rcl
jae
adc
sbb
inc
xchg
or
mov
xor
or
inc
and
retf
sbb
(bad)
dec
out
mov
inc
mov
dec
cld
cdq
ja
fisubr
xor
xchg
or
mov
pop
jae
sbb
pop
sbb
or
or
sbb
or
push
and
popf
pop
adc
xlat
(bad)
repnz
inc
ret
inc
xor
sbb
pop
(bad)
int
add
jns
cwde
adc
and
mov
or
mov
shl
push
dec
aaa
out
leave
gs
push
adc
test
mov
fisubr
push
loop
mov
xor
les
mov
scas
addr16
jle
or
stos
or
out
repnz
xchg
jbe
sbb
(bad)
xlat
jns
mov
mov
int
call
cs
mov
mov
test
or
stc
mov
sub
inc
mov
cli
sub
fldcw
jecxz
cmp
add
xor
jmp
iret
xchg
xor
fdivr
and
iret
sub
or
sahf
jecxz
mov
(bad)
aas
inc
rol
int3
dec
mov
push
dec
out
fist
and
and
dec
movs
retf
and
lahf
popa
movs
xor
arpl
out
aas
gs
cmps
xchg
outs
add
pushf
jge
pop
(bad)
xchg
pop
and
cmp
lods
xor
retf
mov
push
add
mov
lahf
lds
jp
bound
clc
push
adc
jl
pop
jnp
(bad)
hlt
xor
retf
adc
std
jmp
jb
ret
aad
xchg
lods
(bad)
outs
push
aad
xchg
mov
xchg
or
jmp
fstp
push
shl
cs
repz
pushf
cmp
pop
or
sub
imul
jae
xchg
jnp
jns
retf
xor
mov
mov
mov
outs
test
push
mov
adc
pop
xchg
adc
jmp
adc
lahf
leave
cmp
xor
sar
xchg
cmp
es
movs
pop
push
es
cmc
pop
push
xchg
add
dec
mov
or
cmp
movs
fwait
cs
xor
sub
mov
mov
scas
ror
outs
or
fcomp
mov
mov
scas
and
xchg
sbb
ds
dec
rcl
sub
push
addr16
jno
fidivr
cmp
rcl
jle
lahf
popaw
dec
mov
ja
repz
push
test
push
(bad)
lods
inc
imul
out
mov
cmp
and
out
rol
sahf
pop
ss
xor
jp
ss
cdq
lds
add
or
les
sbb
in
imul
sbb
pop
cwde
daa
not
xchg
jae
sahf
lock
push
jp
or
cmp
mov
repnz
cmp
into
out
leave
fldcw
das
cs
and
mov
jge
xor
inc
and
jg
xchg
jb
mov
ins
scas
push
lds
imul
int3
dec
aas
cmp
dec
dec
cmp
push
mov
pop
xchg
(bad)
dec
clc
into
mov
scas
js
mov
cli
push
pop
cmp
les
cmp
imul
fnstsw
fsubr
dec
adc
popf
xchg
scas
fucom
xchg
imul
add
adc
add
div
cwde
cmps
adc
inc
aaa
xlat
mov
ror
int
push
sti
call
ss
mov
lods
(bad)
or
push
mov
sbb
(bad)
iret
jecxz
dec
lock
add
jbe
inc
jae
ins
jb
lock
xor
aas
mov
mov
mov
sbb
out
dec
lods
dec
es
sbb
popf
mov
lods
push
jmp
sbb
xchg
les
idiv
loope
sar
arpl
repnz
sbb
aad
push
push
out
ins
push
dec
jbe
test
xor
jbe
push
cmp
xchg
sub
mov
sbb
lods
mov
mov
jmp
dec
test
xchg
movs
jae
pop
enter
xchg
(bad)
cmp
add
mov
arpl
push
jp
in
mov
mov
cs
or
and
bound
es
leave
rcl
jno
pop
xor
push
cwde
inc
movs
jmp
adc
mov
push
loopne
loop
lea
cwde
push
dec
outs
ficomp
inc
repz
sub
sub
mov
and
jbe
push
sbb
mov
add
sub
movs
xor
xchg
ret
xchg
mov
xlat
cmp
bound
cmp
cwd
cld
mov
pushf
mov
es
stos
das
mov
lock
push
add
adc
xchg
shl
daa
mov
pop
sbb
loop
and
pop
cmc
mov
add
jbe
cmp
data16
lds
xchg
out
(bad)
rcr
cmp
dec
arpl
or
lods
or
aas
sbb
stos
push
out
lea
jl
dec
inc
(bad)
je
mov
ror
js
inc
ja
xor
push
sub
mul
arpl
jp
mov
mov
push
push
push
pop
inc
or
ss
ret
ds
in
mul
mov
movs
repnz
jmp
mov
dec
mov
push
pop
dec
pop
loope
inc
outs
pushf
push
aaa
scas
retf
sbb
fisubr
sbb
inc
inc
sbb
sbb
icebp
das
lahf
test
retf
rcr
xchg
xchg
movs
cmp
add
fwait
test
jbe
mov
inc
dec
push
and
in
fcmove
push
mov
push
mov
cmp
lods
cmp
or
call
sbb
mov
xchg
pop
imul
sbb
arpl
jbe
cmp
jmp
imul
sub
pop
push
adc
mov
mov
mov
push
xor
sub
jo
xchg
stos
xchg
clc
add
and
outs
mov
ss
std
popa
nop
add
kaddw
test
xor
movs
pop
gs
inc
jl
test
fucomp
inc
sbb
pop
mov
or
pop
xlat
retf
inc
xchg
test
push
pop
pop
xlat
inc
retf
retf
std
push
jae
jmp
mov
cmp
pop
into
dec
adc
ret
xchg
fucom
test
pop
cmp
jno
dec
mov
dec
adc
(bad)
jb
mov
dec
int3
adc
push
sti
pusha
jns
sub
mov
jmp
push
jbe
sbb
xor
in
repz
adc
cmps
pusha
rol
inc
(bad)
retf
arpl
ret
loopne
fucom
and
xchg
movs
inc
movs
ins
in
mov
rcl
adc
(bad)
jns
ins
sub
and
inc
movs
add
or
fsubr
les
adc
sub
rcr
sbb
or
pop
inc
jecxz
or
sti
ficom
es
aam
retf
xchg
ja
sub
(bad)
jp
repnz
sub
and
in
cs
xchg
mov
mov
call
push
sbb
sub
push
test
pop
call
and
push
fs
and
cmp
dec
cwde
mov
pop
xor
shl
ficom
add
xchg
mov
or
pushf
pop
hlt
xor
out
out
add
iret
push
pusha
jns
jge
push
mov
enter
or
push
xor
add
loop
dec
and
mov
rcl
pop
enter
(bad)
mov
sub
loopne
sub
mov
repz
xchg
mov
jae
arpl
sub
mov
sub
mov
mov
jmp
aaa
loope
das
int3
int
jbe
fisubr
movs
mov
mov
mov
movs
sub
sar
(bad)
outs
fstp
xor
mov
mov
pop
xor
out
retf
test
fucomip
(bad)
push
das
sbb
mov
mov
xor
sbb
mov
xchg
idiv
xchg
jge
mov
mov
cmps
jp
cli
movs
jmp
jns
iret
rcl
leave
stc
js
fadd
pop
push
or
aas
xchg
sbb
mov
xchg
xlat
push
push
pop
cmp
xor
les
and
pop
out
stos
enter
mov
mov
add
mov
sub
push
clc
xlat
xchg
jecxz
sub
fadd
clc
sbb
shl
xor
pop
inc
repnz
push
sub
adc
cmp
ret
xchg
loop
arpl
lea
inc
es
aam
test
sub
pop
icebp
std
inc
scas
test
(bad)
jge
popf
inc
sub
cmps
pop
test
scas
fcomp
sub
aaa
fwait
inc
mov
or
xor
aam
js
cli
adc
dec
add
dec
(bad)
hlt
or
shl
shl
mov
mov
xchg
je
push
jp
sub
retf
imul
xchg
fimul
loope
(bad)
pop
pop
mov
jl
or
push
ret
stc
mov
cmp
stc
pop
adc
mov
icebp
add
xor
lods
pop
pop
sub
gs
jge
pop
add
rol
or
les
leave
jle
cmp
xor
sbb
jnp
lock
out
mov
xchg
jno
sti
cdq
test
dec
xchg
fdivrp
or
ja
mov
test
aas
cli
(bad)
jle
push
loopne
inc
shr
sbb
popa
rol
enter
pop
cwde
mov
icebp
int3
xor
mov
es
jmp
and
and
retf
xchg
jge
mov
aad
fnstcw
push
inc
ret
popa
ins
ret
or
sub
ins
lods
scas
fwait
xchg
out
inc
sub
mov
fdivr
cmp
adc
ds
xchg
and
mov
je
shl
outs
xchg
lds
mov
fcom
adc
push
sahf
xor
add
icebp
jge
mov
mov
inc
mov
stos
cmp
aas
and
sbb
jb
sbb
leave
and
or
int3
sbb
(bad)
mov
das
and
push
ror
int3
mov
pop
clc
mov
mov
cld
mov
mov
jbe
imul
push
lods
sub
daa
in
inc
enter
or
cmp
mov
dec
xchg
nop
out
sbb
dec
mov
or
xor
mul
sub
xor
sbb
adc
pop
pop
lods
call
dec
cmc
out
pusha
mov
(bad)
push
mov
push
(bad)
(bad)
in
push
pop
aaa
out
aaa
push
or
lods
jo
xchg
inc
test
or
cwde
js
dec
pushf
popf
(bad)
ins
imul
inc
push
or
jmp
cmp
sub
test
push
pop
jae
pop
retf
movs
and
int
and
mov
cmps
xor
inc
mov
fsub
pop
fcmovb
outs
push
rol
je
or
mov
mov
sub
xchg
cmps
and
mov
pop
mov
popa
retf
ret
fdivr
push
leave
mov
pop
push
mov
xchg
adc
adc
add
xchg
imul
or
adc
pop
pop
cdq
das
xchg
xchg
xchg
sub
inc
outs
pop
sub
(bad)
lock
fsubp
sbb
push
sbb
jecxz
sbb
pop
cmp
test
xchg
test
xlat
adc
mov
mov
sbb
movs
and
mov
cmp
jns
inc
add
and
pop
mov
ds
add
jbe
cs
movs
inc
mov
lds
popf
sar
scas
daa
pop
mov
icebp
shl
adc
adc
or
sbb
add
retf
(bad)
out
lea
xor
or
sub
out
fcmovnbe
mov
push
lods
push
pop
add
in
(bad)
addr16
xor
mov
push
pop
retf
xchg
push
test
arpl
(bad)
arpl
xlat
out
and
cmp
aam
aad
(bad)
adc
std
hlt
xchg
lds
pop
or
fsub
pushf
mov
add
add
mov
jmp
mov
cmp
ins
cmps
sub
in
mov
pop
aam
scas
stc
xchg
imul
jne
mov
cld
dec
in
movs
scas
add
adc
cmp
scas
(bad)
jae
fld
cmp
ficom
adc
(bad)
cmc
adc
dec
loop
loope
ins
adc
mov
mov
sbb
xchg
dec
xchg
movs
lea
hlt
pop
inc
lea
mov
dec
mov
sbb
sbb
imul
in
sub
push
sbb
int3
mov
sti
add
jle
jbe
add
cmp
hlt
cmp
and
aaa
push
out
stos
jnp
ins
cmps
jbe
push
pop
imul
push
movs
stc
call
mov
push
jle
imul
xchg
int
mov
pop
jbe
mov
dec
pusha
aad
movs
jle
add
out
ret
xchg
fwait
push
(bad)
dec
imul
add
xchg
test
shl
sar
stos
jecxz
fs
mov
popf
or
dec
dec
mov
adc
retf
add
aaa
fnstcw
outs
adc
loope
jmp
push
dec
and
shl
pop
mov
adc
in
(bad)
push
sbb
fnstcw
push
lock
mov
or
adc
sub
push
(bad)
xchg
xchg
inc
cmc
inc
sub
outs
or
mov
js
in
push
(bad)
fist
clc
mov
xor
pop
int3
mov
dec
ja
jns
shl
inc
sar
sar
int
push
sub
xchg
mov
xor
sahf
mov
lea
aaa
es
jl
mov
mov
(bad)
imul
(bad)
jbe
xor
je
cli
xchg
dec
inc
mov
stc
sub
gs
shl
das
sti
mov
mov
push
enter
adc
lods
mov
mov
sub
test
and
mov
(bad)
push
(bad)
jmp
and
xor
and
test
xchg
mov
jo
jb
add
cmc
add
daa
out
push
hlt
int
jno
int3
test
movs
push
fld
daa
xchg
push
div
sahf
aam
outs
jbe
jne
push
lahf
mov
dec
movs
xchg
dec
stos
adc
cmps
cmps
pop
rcr
pop
in
mov
add
mov
fld
rcr
mov
sbb
pop
ror
sbb
(bad)
retf
pop
and
push
cmc
lods
jge
xor
mov
mov
loopne
(bad)
scas
loop
lahf
mov
push
jo
ret
in
jge
ss
stos
jno
into
cmp
movs
lock
xchg
xor
rcr
stos
shr
push
pop
cli
mov
imul
outs
outs
xor
xchg
xchg
sbb
cmps
pop
jo
or
hlt
shl
arpl
cmp
xchg
dec
jg
jnp
push
clc
sub
jo
fwait
test
stos
jmp
sbb
fs
iret
mov
add
jge
sub
sub
xchg
push
ins
(bad)
sti
outs
add
jmp
push
or
into
mov
and
mov
pop
hlt
inc
fisub
pop
inc
or
loopne
js
push
dec
mov
xor
dec
stos
mov
mov
loope
sbb
popa
data16
aad
jae
adc
add
stc
jmp
pop
jb
dec
push
adc
test
shl
jle
mov
fwait
sbb
cmc
inc
mov
xchg
shl
aaa
xor
adc
xor
mov
ja
ret
int
xchg
in
push
out
les
loope
cld
cmps
push
fidivr
push
arpl
mov
(bad)
adc
mov
ds
and
fdiv
test
dec
cmp
and
pop
adc
mov
pop
pusha
mov
jns
leave
repnz
mov
inc
push
xchg
xchg
xchg
jl
retf
rcr
popa
sbb
jle
gs
daa
jns
test
inc
or
fdiv
mov
cmp
scas
fwait
or
mov
scas
cli
push
jbe
dec
ret
sub
dec
in
fisub
inc
or
ja
rcl
retf
jg
addr16
xor
push
(bad)
cmp
daa
fisttp
jo
hlt
nop
mov
shl
pop
add
or
outs
and
test
sti
pop
or
pop
pop
or
ja
or
fldz
pop
movs
sub
cmps
pushf
xchg
in
push
les
push
cmp
sub
stc
or
add
cmp
push
sahf
pop
cmp
pop
or
pop
ins
jecxz
fcomp
cmc
dec
jp
pop
ja
push
lock
stc
sti
push
jmp
mov
jmp
(bad)
cmp
or
out
ds
mov
(bad)
out
js
xchg
cli
outs
mov
in
cmp
cmp
sub
outs
mov
sbb
mov
pop
outs
sbb
cmp
sahf
jmp
xor
or
mov
or
add
mov
push
adc
sub
call
jmp
adc
jo
xor
add
xlat
inc
jge
out
mov
mov
movs
test
stc
(bad)
lods
in
jbe
fcmovnb
or
or
pop
adc
push
mov
cmp
sub
jne
mov
dec
cmp
nop
loop
sbb
test
inc
adc
push
or
pop
pop
clc
sbb
(bad)
leave
pop
pop
or
mov
push
in
call
enter
mov
in
xor
lds
rol
test
retf
popf
jle
and
ret
ins
outs
cmp
inc
pop
rcl
mov
mov
mov
or
pop
jmp
loopne
shr
test
pop
rcr
mov
les
fsubr
cs
or
loopne
add
stos
jg
xchg
fild
or
inc
dec
jns
inc
dec
xchg
cmp
cwde
push
pop
pop
mov
add
cmps
sub
mov
aad
adc
mov
lods
aaa
mov
sub
push
or
ins
sub
test
sub
dec
std
or
fcomp
mov
adc
shl
xchg
xor
inc
xor
stos
mov
push
ins
outs
out
je
dec
adc
dec
imul
sbb
or
ja
les
mov
lods
sub
pop
push
push
inc
fcomip
pop
loopne
clc
pop
cs
jge
inc
mov
mov
scas
sar
add
sub
adc
imul
aas
dec
je
arpl
mov
adc
adc
push
dec
std
fcmovnb
out
xlat
sub
dec
mov
fimul
xor
xor
repz
(bad)
jmp
mov
jnp
jb
lea
push
lods
int3
sub
popf
cmp
mov
in
or
lds
mov
xlat
pop
cwde
out
jns
pusha
sar
fidiv
or
ss
imul
cmp
cli
mov
cli
and
outs
push
pop
adc
sahf
jmp
mov
or
shr
push
mov
jns
leave
imul
pop
pop
cmps
pop
cmp
jmpw
mov
xlat
scas
fsub
icebp
push
and
add
mov
jno
imul
sahf
aaa
push
lahf
sub
sbb
pushf
cmp
fdivr
(bad)
loop
pop
sub
push
loop
push
scas
adc
loopne
inc
ror
add
mov
aam
and
push
or
bound
inc
add
pop
jns
sbb
xchg
sti
jle
mov
pop
adc
inc
in
cmp
fidiv
(bad)
pop
imul
adc
ret
mov
gs
add
cmp
dec
xor
pop
in
iret
xlat
sbb
stos
repnz
pop
adc
lds
(bad)
es
fadd
jb
clc
lds
fsub
mov
dec
mov
loopne
mov
and
mov
add
std
add
int
xor
xchg
repnz
pop
ret
cmp
lahf
(bad)
xor
jle
xor
sub
fld
add
sub
or
fsub
(bad)
test
mov
in
test
mov
inc
mov
push
inc
out
adc
or
cmc
test
ret
aam
lods
mov
push
xor
sahf
rol
(bad)
xor
push
xchg
xor
pop
test
leave
and
push
inc
jmp
dec
fwait
out
or
fcomp
fs
and
xor
aaa
jnp
mov
xor
call
pop
(bad)
and
bound
test
mov
push
mov
sub
sbb
ds
test
pop
cmp
lods
test
or
cdq
stos
fcomp
fwait
xor
pusha
inc
sub
mov
enter
xchg
jge
cmps
pop
jnp
and
mov
inc
jg
jb
(bad)
sub
mov
xchg
popf
cmp
fcom
test
jns
push
push
mov
dec
and
xor
mov
mov
in
or
nop
add
nop
movs
cdq
xor
push
jne
in
call
push
inc
or
mov
fs
sub
mov
push
dec
cdq
out
pushf
ret
xor
or
fistp
jno
jno
ficom
lds
pop
ret
cmp
bound
nop
pop
adc
hlt
cmp
imul
push
and
in
add
cli
cmps
daa
mov
push
mov
scas
cmc
push
dec
sub
adc
jnp
jmp
xchg
mov
xchg
movs
ss
sahf
mov
das
es
out
inc
out
cmps
stos
push
add
mov
mov
in
cs
push
push
and
sbb
in
jecxz
cdq
xlat
jle
xchg
call
mov
in
aaa
ret
and
mov
lahf
mov
rol
pop
mov
dec
mov
ins
jmp
dec
gs
mov
fucomi
ins
loopne
int
mov
inc
dec
pop
test
(bad)
fsub
(bad)
int
jnp
ds
fimul
xchg
pusha
sbb
int3
pop
jmp
sar
xchg
adc
jmp
xlat
push
cld
dec
jnp
xor
stos
(bad)
inc
push
ds
mov
cmps
jnp
int
or
fwait
push
mov
cmp
push
pop
mov
ds
lahf
sbb
jmp
push
mov
aaa
test
nop
cmp
call
sub
mov
mov
mov
ins
mov
add
das
ret
inc
ins
dec
xor
cli
test
or
sbb
loopne
and
push
adc
lahf
lahf
xchg
das
das
mov
push
ins
jo
cld
mov
xchg
jl
xor
movs
das
scas
add
jmp
and
int3
push
xchg
cli
js
scas
cs
call
and
mov
cwde
fcmovb
cmps
mov
dec
fnstenv
xor
je
ja
mov
mov
sub
jecxz
ficomp
mov
popf
cdq
xchg
jmp
and
xchg
inc
call
stc
add
mov
stc
jle
jbe
pushf
(bad)
xchg
ins
cmp
(bad)
nop
sub
xlat
sub
repz
popf
sbb
pop
out
fst
add
dec
cli
inc
mov
fisubr
xchg
adc
outs
sbb
sar
ins
pop
inc
leave
popa
arpl
js
stc
push
imul
mov
fsubp
xor
fld
mov
movs
mov
mov
add
lds
cmps
mov
pop
rol
and
(bad)
xor
bnd
les
lds
cmps
or
dec
or
jmp
fdiv
(bad)
push
cmps
cmp
add
add
pop
sub
lds
mov
sti
movzx
xchg
icebp
xchg
mov
ret
iret
dec
push
out
dec
call
xchg
mov
push
mov
out
enter
outs
int3
ss
test
jno
add
(bad)
popf
push
cli
and
iret
xor
dec
dec
pop
add
pusha
ficom
cwde
mov
push
bound
and
(bad)
imul
push
(bad)
mov
test
(bad)
retf
and
mov
or
push
add
sub
lods
pop
scas
retf
loope
mov
xchg
pusha
push
jns
xchg
sbb
and
or
out
fst
div
xchg
scas
cmps
ds
stos
push
ret
sbb
scas
js
dec
data16
and
(bad)
pop
dec
and
jge
push
adc
xor
xor
push
std
xor
or
adc
ror
cmp
jnp
or
and
fidiv
jns
pusha
lock
cs
push
or
ret
popa
dec
and
lods
cmp
xchg
dec
loopne
arpl
adc
imul
js
dec
int3
and
xchg
inc
push
and
inc
popf
adc
les
ror
inc
bnd
leave
test
inc
push
call
add
rcr
add
repz
repz
push
cs
pop
nop
push
sub
add
sar
aad
push
mov
cdq
pop
jl
addr16
dec
shl
cmp
push
push
push
pushf
adc
jbe
cmp
sbb
adc
or
add
int3
cmp
push
or
iret
dec
ret
jg
sti
jle
bnd
fmul
cmp
ficomp
aaa
movs
je
pushw
jnp
das
or
xor
call
fndisi(8087
jmp
jb
xor
and
pushf
out
les
sbb
mov
arpl
inc
jb
jae
mov
pop
out
mov
push
sub
xlat
push
hlt
xchg
stos
sbb
jl
movs
jmp
data16
bound
and
loop
in
dec
mov
sbb
xchg
jge
sar
aas
lods
ret
jp
sar
stos
cli
adc
out
in
scas
xchg
fadd
sub
sar
xchg
test
repz
les
imul
xor
test
jge
adc
mov
mov
and
enter
icebp
cmc
pop
inc
stos
push
jno
hlt
out
(bad)
retf
inc
outs
mov
in
addr16
inc
xchg
sub
imul
jns
mov
test
mov
(bad)
fcom
mov
push
mov
repnz
cmp
mov
cmps
fwait
ds
lds
mov
push
pop
out
push
jg
cwde
into
leave
es
loop
adc
cmp
push
lock
ror
inc
enter
xchg
and
adc
dec
push
push
xlat
sbb
in
inc
sbb
and
scas
add
sbb
cmp
cld
inc
add
mov
pop
inc
xchg
and
imul
test
iret
jmp
lfs
xor
push
iret
xchg
adc
loope
fiadd
and
ins
pop
jg
test
ss
pop
xor
cmp
call
mov
in
push
lahf
enter
outs
or
(bad)
cmp
ret
cs
int3
bound
aaa
pop
loope
mov
in
mov
push
mov
xchg
mov
cld
mov
repnz
(bad)
mov
dec
stos
adc
add
dec
out
movs
into
ins
xchg
jg
sub
cli
movs
enter
mov
outs
mov
or
ins
push
xchg
fs
retf
(bad)
dec
dec
adc
jb
out
push
add
xchg
lahf
push
xchg
xor
inc
pusha
sbb
js
dec
out
movs
arpl
popa
lods
cmp
sub
dec
cmp
imul
mov
and
ins
cmp
nop
je
mov
or
aaa
sub
add
ins
call
sar
movs
jmp
sbb
cmps
test
jmp
pop
div
mov
ds
sti
dec
cmp
push
aas
fndisi(8087
pop
mov
arpl
daa
xchg
sbb
xor
in
mov
mov
dec
jle
sub
push
xor
xchg
aam
dec
ret
sbb
inc
or
int
mov
add
out
xor
out
test
(bad)
pop
shl
pop
ret
push
ret
push
jne
addr16
je
or
push
retf
xchg
mov
mov
sub
push
ds
hlt
cdq
jmp
sub
outs
inc
add
lods
cwde
rdtsc
inc
add
in
cmps
je
popf
lea
arpl
sbb
fsubr
jne
sub
in
mov
xlat
out
mov
add
mov
fist
mov
sbb
cmps
cmc
(bad)
mov
mov
std
clc
mov
mov
icebp
push
lods
arpl
(bad)
hlt
lods
nop
ds
pop
test
ds
bound
enter
push
test
add
push
arpl
inc
xor
stos
xor
clc
cmp
jns
xchg
dec
into
jl
mov
ds
pushf
sbb
mov
arpl
popa
inc
scas
repnz
mov
(bad)
fistp
ins
inc
in
cmc
into
adc
gs
mov
and
ret
push
inc
mov
lds
int
outs
cmc
add
xlat
sti
xchg
stc
xchg
movs
ins
ds
in
cli
or
dec
xor
cmps
bound
cmp
or
mov
add
leave
push
mov
aaa
(bad)
out
sbb
jns
inc
sysenter
xor
fisttp
pop
pop
push
in
jecxz
adc
xchg
xchg
jge
xchg
shl
cmove
xlat
or
mov
pusha
push
sbb
jecxz
sbb
ds
dec
rcl
mov
test
div
(bad)
pop
scas
add
or
push
cs
loop
push
or
outs
mov
push
pop
pop
(bad)
ins
out
(bad)
pop
sub
(bad)
mov
lahf
stc
retf
je
pop
inc
push
rcr
ins
gs
mov
and
loopne
retf
dec
imul
cmp
lahf
pop
cli
push
repnz
sub
xchg
cmova
sbb
std
call
cli
mul
jbe
(bad)
call
sbb
jl
arpl
push
or
inc
outs
mov
add
push
bound
mov
mov
xor
jl
inc
outs
aad
out
aad
cmc
je
xchg
dec
cmps
addr16
and
mov
sub
movs
jae
std
sub
aas
call
xchg
pop
adc
je
pop
icebp
pop
(bad)
(bad)
aas
daa
lods
jge
nop
mov
jb
cs
cmp
inc
push
pop
jne
sbb
sub
sub
pop
jae
ror
das
pop
mov
out
lods
jle
sbb
repz
mov
mov
xor
push
dec
add
jnp
fistp
jns
fcmovnb
push
pop
stc
and
dec
xor
xor
test
test
test
cmps
int3
popa
mov
outs
cmp
push
pop
scas
xor
sbb
ja
loope
loope
sqrtps
pusha
push
push
push
push
sahf
test
shr
sar
pop
mov
jns
xor
and
mov
aaa
mov
mov
dec
out
ror
call
and
(bad)
mov
test
jp
stos
and
test
dec
test
jle
ja
in
ret
int
inc
push
lea
je
mov
stc
jnp
cmp
sub
bound
mov
mov
test
add
fisubr
xchg
sahf
or
ficomp
mov
xchg
cwde
mov
xor
iret
mov
pusha
das
jae
ins
jno
call
dec
add
inc
jl
xchg
jmp
je
jg
into
pop
cs
sub
mov
fisttp
sbb
sahf
int
loope
adc
dec
sahf
les
push
std
jmp
sbb
inc
outs
aaa
mov
inc
xchg
xchg
push
ins
fs
sbb
pop
xchg
aaa
inc
fistp
xchg
xor
inc
das
dec
mov
fwait
in
lock
cmp
push
call
aas
add
ss
xchg
mov
ja
xchg
or
adc
xchg
xor
fwait
xchg
in
into
rol
mov
dec
xchg
mov
sub
movs
xlat
pop
bound
aad
pop
xchg
imul
sahf
mov
push
xchg
inc
and
or
mov
add
mov
lods
xchg
or
pop
or
xor
fcomp
lock
mov
adc
jo
out
sbb
cmp
fisub
sbb
aam
test
xor
inc
out
inc
fmul
xchg
pop
pop
mov
push
test
stc
ret
rcr
or
pushf
pop
(bad)
jmp
push
inc
retf
push
or
movs
xor
mov
sbb
mov
adc
pushf
lds
push
popf
iret
xor
(bad)
jmp
mov
fs
mov
mov
jo
std
sub
inc
stc
mov
inc
neg
dec
jl
inc
lds
adc
mov
or
push
popa
jno
sbb
mov
imul
fwait
jmp
or
in
neg
lahf
sub
loope
add
(bad)
pop
sub
pop
adc
cmp
inc
mov
gs
ja
loope
stos
jb
and
fdivr
jp
inc
(bad)
dec
mov
(bad)
pop
fdivr
and
adc
rcl
pop
xlat
jmp
pop
fwait
mov
movs
sbb
jbe
pop
call
and
lods
sbb
mov
pop
inc
cmp
fnsave
mov
lods
xchg
fistp
out
pop
lds
dec
mov
jp
xor
arpl
lods
mov
xor
mov
fsubr
sub
fucom
jnp
adc
sub
stc
dec
pop
ja
ret
lods
cmc
in
cmps
cmp
mov
jg
popa
cmps
in
shl
mov
(bad)
or
push
mov
lods
aad
add
add
sub
cli
loop
test
div
nop
pop
test
inc
mov
sub
sar
sbb
in
ja
mov
mov
and
mov
sub
add
inc
sbb
mov
retf
sub
mov
push
push
push
daa
loopne
add
jmp
lods
das
out
add
push
mov
push
mov
push
xor
sbb
repnz
scas
sbb
test
dec
xor
movs
mov
push
sbb
push
push
mov
data16
fwait
je
rol
xchg
mov
retf
cmp
scas
pop
sub
ins
mov
lds
ss
leave
dec
jae
fcomp
mov
dec
sub
arpl
jmp
cdq
sub
sbb
stos
out
and
fcomp
mov
and
mov
stc
pop
fld
ficom
ss
and
(bad)
pop
bound
adc
pushf
iret
push
dec
les
sbb
xchg
sbb
es
inc
jae
loop
lea
add
jl
xchg
std
push
cwde
add
sub
pop
stc
jl
mov
fnstcw
and
xchg
mov
push
adc
cmp
jns
arpl
jl
or
out
cmp
cli
imul
xlat
and
aaa
test
cmps
jge
adc
xor
popf
test
shr
sub
mov
in
or
cwde
sti
sub
mov
icebp
push
push
fwait
inc
xor
dec
mov
daa
shr
(bad)
or
pop
mov
leave
or
cmp
xor
(bad)
aas
hlt
bound
(bad)
(bad)
xchg
inc
mov
int
shl
pop
mov
hlt
je
icebp
mov
jo
ja
addr16
test
inc
push
push
clc
adc
add
outs
pop
enter
cld
in
mul
inc
je
sub
jbe
movs
or
arpl
cmps
call
mov
or
sub
add
int3
cmc
enter
(bad)
jecxz
add
inc
and
lds
xchg
cmc
mov
je
jl
sub
jo
arpl
push
(bad)
(bad)
xor
adc
or
mov
push
shl
and
mov
dec
test
dec
push
cdq
lock
ret
add
cmc
xchg
in
add
das
ret
jae
movs
push
cmp
xchg
mov
push
cmp
shr
rcr
push
je
call
getsec
out
retf
les
mov
add
xchg
aam
mov
or
out
sbb
sbb
std
(bad)
and
mov
dec
push
xchg
xchg
xor
jne
xchg
aas
popf
aas
pop
bound
rol
fiadd
dec
cmp
or
xor
dec
jo
cld
cmp
dec
inc
and
push
loopne
cmp
sbb
stos
push
jbe
ret
inc
scas
or
inc
sub
or
lahf
scas
rcr
jbe
mov
sar
(bad)
adc
mov
inc
jl
stos
cmp
sub
pop
mov
(bad)
pop
bound
mov
sub
std
sub
test
jl
into
into
imul
das
ja
sub
cmps
add
lods
scas
or
sahf
shl
adc
cmps
in
icebp
jg
(bad)
repz
pusha
adc
test
cmps
jp
dec
xor
pop
hlt
sar
sbb
add
pop
sub
ins
dec
loope
pop
ins
movs
sti
int3
sub
inc
pop
int3
inc
dec
lds
retf
adc
push
sub
inc
test
test
push
push
or
pushf
mov
push
imul
mov
or
std
cmps
dec
(bad)
sbb
or
int
cmp
imul
pop
cli
xchg
and
adc
inc
lods
lds
mov
pushf
repnz
fwait
inc
inc
shr
inc
push
sbb
mov
sbb
stos
push
cmps
test
scas
push
push
xchg
scas
pusha
cdq
mov
sbb
out
(bad)
xor
outs
jmp
std
push
leave
pop
and
mov
mov
(bad)
rcr
push
popa
push
xor
cmp
sub
call
mov
xchg
cwde
inc
sub
mov
enter
(bad)
adc
ds
push
iret
jl
scas
add
jp
pop
xchg
dec
cmp
dec
repnz
push
mov
sbb
adc
sub
jmp
cwde
mov
inc
in
xchg
pop
push
cs
push
pop
loopne
xchg
sub
test
mov
stos
test
les
and
add
pop
aas
mov
(bad)
inc
popa
jge
or
pop
add
scas
ret
fimul
shr
mov
es
imul
or
push
jnp
mov
add
rol
sub
and
xlat
inc
test
dec
cdq
pushf
mov
cwde
das
aam
mov
xchg
adc
je
xchg
mov
and
push
and
pop
jmp
imul
adc
jecxz
add
xchg
push
aaa
lods
jnp
mov
xchg
aad
push
push
jl
dec
pop
ror
iret
xor
push
and
pop
sbb
inc
imul
add
xor
std
inc
sub
xor
jmp
add
sub
std
add
mov
gs
mov
mov
push
xor
je
shl
cmps
std
out
ins
adc
mov
mov
jge
js
pop
xchg
xchg
cmps
dec
out
jg
pusha
push
out
xchg
cmps
movs
cmp
inc
fcmovu
or
in
and
sub
jmp
mov
push
ss
rcr
pop
jge
out
aaa
pop
out
iret
out
sub
les
loop
ins
daa
jns
lahf
jne
stos
adc
cmp
mov
add
push
dec
cmps
shl
mov
dec
ss
shl
or
pusha
or
add
outs
mov
jmp
dec
loope
(bad)
enter
pop
mov
ds
addr16
dec
rol
sub
call
je
cmp
push
test
pop
inc
fidivr
push
push
es
jo
cmps
push
scas
xchg
inc
movs
mov
sbb
mov
fdivr
xchg
mov
aad
aas
lods
mov
fstp
xchg
(bad)
jmp
mov
mov
out
daa
pushf
aaa
inc
clc
in
int3
sub
loopne
cmp
addr16
cmps
test
fmul
xchg
jno
data16
leave
pop
icebp
cmp
out
cmp
das
sub
pop
mov
pop
push
loop
or
mov
fadd
std
es
(bad)
loopne
ss
mov
aam
icebp
call
add
xchg
sub
(bad)
jne
cmps
fwait
sbb
mov
jno
mov
xchg
neg
mov
lahf
mov
xor
jg
scas
outs
(bad)
in
movs
add
xchg
scas
mov
enter
xor
jge
movs
stos
stc
out
sbb
sbb
mov
mov
icebp
add
mov
adc
mov
mov
cmp
pop
cs
xor
mov
adc
xor
outs
out
cld
int3
mov
std
(bad)
bound
push
cld
xlat
jns
adc
jle
adc
mov
out
sub
xor
cmp
push
ficomp
ret
stos
xchg
out
mov
pop
lea
xchg
mov
ds
repnz
iret
or
jo
js
jecxz
xor
nop
stc
fild
push
rol
lds
pop
outs
dec
(bad)
adc
lods
push
lods
out
jb
sub
ins
push
add
fsub
dec
xchg
not
loopne
sti
cmovb
mov
adc
outs
cmp
test
jl
and
test
arpl
dec
push
pop
mov
xor
(bad)
out
sbb
sub
das
push
ret
cli
scas
jno
and
loope
daa
mov
dec
jp
mov
sbb
outs
arpl
rcr
mov
push
mov
mov
sbb
pop
mov
jge
cmp
inc
dec
fild
pop
mov
cmp
sar
sbb
nop
mov
addr16
mov
scas
xchg
or
dec
and
jbe
cmc
sub
not
xor
inc
adc
cmp
mov
adc
cli
push
das
in
imul
iret
or
cmc
xchg
movs
push
jnp
mov
(bad)
in
pusha
stos
enter
and
inc
mov
cmps
xchg
sub
mov
fstp
sti
xchg
push
mov
or
xchg
sub
cs
jns
push
mov
stc
sbb
jno
popa
cwde
ret
movs
(bad)
inc
iret
neg
mov
push
out
add
aaa
pop
cwde
cmp
imul
sbb
push
gs
jmp
(bad)
ins
div
jge
sbb
imul
inc
mov
cmp
pop
cdq
in
aam
stos
aas
cmps
in
imul
push
jge
jb
ror
ficom
out
(bad)
dec
test
in
mov
xlat
ds
mov
and
xor
mov
repnz
mov
adc
push
repnz
bound
pop
pop
(bad)
jae
sub
mov
sub
les
stc
inc
mov
pusha
dec
jmp
jp
xor
pop
rcl
push
mov
dec
or
cmc
dec
jle
iret
jl
adc
xchg
or
popf
sbb
cmp
int
ss
xchg
or
ins
sub
dec
xor
or
icebp
popa
jle
mov
fisttp
in
mov
rcl
sub
mov
mov
test
jo
add
or
push
out
fwait
pop
scas
in
frstor
fs
mov
fild
adc
mov
pop
imul
stos
push
int3
push
cmps
xchg
idiv
lock
cs
loope
in
std
(bad)
popf
scas
scas
clc
pop
popf
mov
fwait
ins
jmp
pop
out
jns
push
fiadd
scas
mov
inc
fild
mov
lds
or
jno
call
cmp
mov
inc
cmp
fs
sar
in
jecxz
xor
or
mov
inc
sub
pop
shr
adc
xor
mov
xchg
xor
nop
loope
stc
xchg
std
call
into
sbb
push
xchg
pusha
pop
imul
ds
fldenv
cwde
ins
imul
mov
nop
pop
fadd
mov
shl
jmp
int3
push
int3
in
out
shl
inc
call
cwde
mov
push
push
lods
out
push
in
jo
xor
pop
hlt
fisubr
xor
dec
repz
xor
cmp
shl
mov
aad
cmc
neg
jl
aas
pop
push
std
dec
add
mov
push
in
test
repnz
data16
xchg
xchg
dec
arpl
lds
mov
xchg
pop
jecxz
inc
mov
fs
push
mov
mov
pop
retf
inc
or
jbe
push
out
jecxz
scas
push
mov
lds
je
fadd
repz
jae
sub
pop
imul
mov
fld
jge
es
mov
daa
inc
add
fisttp
push
in
ds
and
jg
(bad)
mov
iret
cmps
xor
cld
cmp
int
ja
inc
mov
jg
jle
push
mov
cmp
mov
int
add
in
xchg
test
xor
push
jle
cmp
les
es
mov
and
ins
sub
pusha
dec
push
cdq
sbb
fdivrp
(bad)
(bad)
mov
das
and
add
hlt
repnz
loope
(bad)
and
or
fld
sub
add
inc
sub
xchg
movs
pop
imul
push
fucomip
pop
and
fidiv
jge
nop
pop
sub
mov
cdq
xchg
scas
test
lods
shl
les
mov
enter
jg
in
adc
movs
or
cmp
ja
xor
imul
cmp
mov
mov
jb
call
adc
cmp
sahf
je
movs
ficom
push
das
xor
inc
adc
pop
push
scas
stc
shl
dec
out
es
lock
mov
mov
or
shl
popf
iret
xchg
out
xchg
cwde
ret
push
sub
or
cmp
or
js
cmps
and
pop
loopne
lds
lahf
aam
jnp
loop
lds
out
sbb
jmp
loopne
add
jo
jge
xor
loope
clc
loope
mov
in
pop
ja
mov
ret
ret
adc
mov
fwait
loop
test
shr
jns
dec
sbb
mov
mov
inc
xor
mov
cdq
scas
xchg
arpl
inc
gs
xchg
(bad)
fiadd
cmp
(bad)
sub
jne
cmp
xchg
mov
jp
stos
inc
call
imul
xchg
loopne
mov
lods
cwde
(bad)
pop
cmp
pop
dec
out
jmp
ret
or
(bad)
push
or
nop
cmp
shr
mov
repnz
or
cmp
sbb
pop
out
adc
outs
aas
mov
push
xor
cmp
movs
inc
cmp
std
test
add
gs
and
(bad)
ss
push
jo
xor
push
aas
movs
retf
mov
clc
pushf
imul
int
cmps
mov
sbb
push
mov
jl
aad
repnz
call
add
mov
call
pop
cmp
(bad)
call
or
(bad)
shl
and
les
mov
test
test
mov
sbb
les
inc
sbb
cmps
jmp
movs
xor
jb
jge
jnp
repnz
test
pop
xor
mov
(bad)
outs
iret
sbb
add
jl
es
out
pop
sbb
xor
push
fidivr
adc
add
cmp
fdiv
push
fadd
fwait
pop
stos
push
cdq
jb
sar
dec
neg
retf
imul
(bad)
loopne
pop
in
rcl
and
and
aam
cmp
scas
out
cmps
ins
imul
out
outs
adc
test
sub
lods
int3
dec
or
in
and
rol
jg
mov
add
mov
gs
(bad)
dec
pop
mov
rol
add
cmc
sbb
loope
adc
fs
cmp
jmp
mov
jb
jmp
xchg
pop
adc
dec
jns
cmc
loop
pop
frstor
or
int
mov
les
stos
xchg
mov
int
std
mov
inc
and
xchg
mov
xlat
enter
and
rcl
bound
mov
in
in
xor
pop
mov
shr
adc
daa
and
adc
es
xor
mov
mov
sti
push
ret
jbe
lods
lock
hlt
sbb
xor
adc
adc
sub
retf
push
sbb
outs
popa
add
cwde
aam
jns
ret
or
mov
jns
push
icebp
stc
xchg
inc
xlat
jmp
out
lods
aam
mov
inc
or
add
(bad)
popa
cld
cs
adc
fmul
retf
(bad)
icebp
pop
pop
std
pop
xchg
out
push
popf
dec
cmps
lods
mov
jno
jbe
nop
push
push
or
movs
push
mov
enter
(bad)
cmp
xchg
add
xchg
mov
mov
aam
aad
inc
out
nop
call
mov
je
fdivr
mov
sbb
es
jbe
sub
push
fsub
retf
cmp
stos
mov
inc
pop
stc
jecxz
mov
and
std
rcl
sub
mov
xchg
inc
fadd
jecxz
mov
push
outs
lds
nop
aam
mov
pop
jnp
ror
popa
cmp
pop
das
mov
adc
mov
call
ins
inc
pop
mov
jmp
push
iret
das
out
pop
sub
lock
retf
sbb
and
loope
sbb
pop
xchg
dec
sahf
or
jbe
xor
ficomp
mov
cld
xchg
cmp
dec
jb
lds
(bad)
mov
push
cmp
cmp
sub
je
jle
add
sub
pop
out
xchg
inc
xlat
fld
pop
xchg
(bad)
test
in
(bad)
retf
push
int
aas
and
retf
jge
aas
leave
test
call
test
imul
call
(bad)
cli
sbb
pushf
jnp
mov
jns
les
xor
cmps
push
push
and
pop
leave
sub
pop
popa
add
add
add
pop
and
and
and
dec
pop
mov
pop
pop
push
jb
imul
mov
sbb
out
xchg
mov
cmps
xor
hlt
arpl
shl
inc
cs
sbb
retf
mov
jmp
(bad)
and
mov
and
lds
push
movs
lock
push
out
cmp
enter
imul
ret
lea
int3
(bad)
pushf
inc
add
pop
mov
mov
fadd
pop
sub
or
dec
repnz
sub
xor
rep
and
iret
push
sub
jnp
pop
shl
jmp
iret
lahf
fbld
rol
out
in
xor
jmp
push
mov
sbb
push
cld
setne
xlat
and
jne
mov
hlt
repnz
imul
mov
xchg
movs
out
pop
sub
xchg
push
xchg
(bad)
mov
xor
xchg
dec
dec
sub
lods
pop
sub
ins
test
add
xchg
cli
jns
call
mov
push
rol
scas
mov
(bad)
or
movs
mov
enter
(bad)
jp
es
popa
xor
cli
cmps
retf
mov
stc
ss
shl
out
mov
imul
in
popf
jmp
cmp
xchg
pop
out
inc
push
loopne
sub
icebp
push
pushf
mov
dec
xchg
dec
es
push
movs
mov
js
sub
mov
xor
dec
pushf
mov
adc
pusha
mov
je
cmps
mov
inc
xchg
cld
push
or
or
and
push
xchg
jne
les
dec
rol
xchg
xchg
in
syscall
mov
adc
dec
adc
ds
mov
test
fstp
arpl
fstp
mov
or
jne
into
ss
sahf
xchg
lahf
jo
aas
jne
mov
fsubr
test
fisub
mov
jge
push
xchg
imul
lock
ds
add
lea
ja
outs
ss
retf
jl
xor
jl
jmp
mov
sbb
xchg
dec
enter
ss
xlat
mov
add
push
enter
lea
repnz
fwait
mov
add
dec
in
dec
xchg
mov
into
lds
sub
imul
inc
dec
pop
mov
fdivr
mov
pop
fsubr
dec
in
fcomp
test
loopne
mov
scas
fs
hlt
jg
loop
loopne
ret
je
jae
and
fwait
sar
and
inc
fmul
mov
xchg
mov
ins
into
cmp
mov
in
or
jne
xchg
xor
lock
inc
sbb
imul
clc
mul
push
xchg
rol
fld
(bad)
call
mov
jne
mov
ss
pusha
aad
add
out
mov
jle
lea
hlt
sbb
xchg
pushf
aas
mov
icebp
mov
sub
stos
mov
cmps
fwait
adc
fistp
push
fstp
mov
or
and
push
outs
cmp
test
in
cli
add
xchg
and
adc
test
mov
add
push
lods
push
mov
lock
jae
ret
jmp
sub
(bad)
int3
stos
sub
ja
movs
adc
test
inc
mov
sbb
ret
sub
mov
dec
or
cmp
xchg
inc
pop
jmp
or
fild
mov
js
and
sub
jae
or
and
mov
sbb
jns
inc
in
mov
push
(bad)
out
or
and
xor
or
jnp
sbb
dec
mov
cmp
aaa
mov
sbb
and
xor
mov
loope
mov
pushf
pop
mov
inc
cmp
xchg
ss
lds
pop
or
mov
fwait
mov
call
sahf
mov
movs
cmp
ins
sub
push
(bad)
movs
ja
push
pop
imul
(bad)
frstor
(bad)
shl
leave
movs
pushf
push
dec
mov
sbb
inc
(bad)
rcr
imul
push
dec
out
dec
repnz
jae
fs
mov
adc
imul
push
xchg
inc
and
std
retf
outs
adc
in
dec
stc
jne
enter
ret
jae
pop
adc
push
xor
push
cli
push
jnp
pop
add
cdq
mov
test
mov
iret
mov
jge
lock
js
adc
pop
mov
fwait
xor
out
fbstp
xchg
arpl
dec
daa
pop
shr
rsqrtps
iret
mov
and
or
fsub
cmp
(bad)
test
dec
cwde
enter
add
movs
(bad)
movs
and
sub
mov
jmp
les
sbb
jne
call
leave
push
mov
data16
or
cs
dec
mov
jge
cdq
mov
cmp
sar
lds
cmp
xchg
fsubr
jecxz
pop
(bad)
fild
fsubrp
popf
mov
test
in
jmp
add
inc
jmp
inc
cmp
test
pop
push
pop
pop
ins
int3
in
mov
jge
cdq
scas
div
ja
out
repnz
stos
mov
mov
aam
ret
or
mov
push
mov
nop
bound
sub
xchg
repnz
and
psadbw
sbb
push
and
mov
daa
cmps
lds
stc
idiv
xchg
fst
jle
stos
cld
sub
call
pop
clc
mov
push
std
sar
outs
stc
add
adc
fwait
pop
cmp
mov
aas
inc
ins
mov
add
dec
outs
pop
imul
test
mov
sbb
xor
shr
call
pop
jmp
in
in
jnp
xchg
add
xchg
sub
leave
out
(bad)
iret
pop
movs
hlt
and
add
aad
mov
jno
fwait
lea
mov
(bad)
jp
fsubr
div
jmp
push
or
add
addr16
(bad)
sbb
out
inc
(bad)
outs
test
sub
imul
add
adc
hlt
xchg
ret
dec
movs
cmp
loopne
(bad)
shr
dec
out
pushf
push
pop
jp
jle
xchg
lock
repz
inc
mov
cmp
int
sub
in
or
sbb
js
sub
mov
ror
fidivr
dec
pop
push
icebp
pop
jg
nop
out
out
lahf
fnstcw
les
push
inc
fs
xchg
add
fsub
cmp
cmps
xor
push
or
fcmovnu
jae
fistp
movs
jle
xor
xor
add
mov
movs
xor
xchg
loopne
dec
pop
pop
xor
icebp
or
xchg
lds
shl
sbb
pop
dec
popa
(bad)
out
jg
jnp
lock
xchg
push
xor
(bad)
pop
mov
(bad)
test
mov
icebp
push
das
mov
test
add
pusha
outs
mov
push
daa
mov
cli
pop
icebp
jg
push
mov
call
jge
mov
fidivr
jecxz
add
push
dec
test
sbb
retf
and
cmp
xchg
push
loope
inc
dec
into
mov
pop
je
je
xchg
in
ja
aaa
rcl
add
jmp
sbb
fiadd
test
movs
adc
xor
gs
fcom
xchg
cld
mov
cmp
cmp
cmp
add
or
pop
dec
mov
mov
out
lahf
js
popf
pop
xchg
les
sub
rcr
aad
bound
push
mov
inc
mov
or
xchg
mov
mov
inc
js
or
or
and
test
dec
fs
or
aad
jae
xchg
jmp
js
test
stos
popa
aas
jnp
push
pop
retf
adc
push
cdq
in
fsub
push
lea
test
scas
(bad)
sti
mov
xchg
int
push
xlat
inc
jecxz
iret
daa
test
out
cs
push
mov
mov
(bad)
jmp
rol
cdq
sub
or
int3
cmp
mov
inc
fs
std
(bad)
push
jge
lea
(bad)
mov
jnp
cwde
test
inc
ja
and
shl
xchg
pop
test
(bad)
cmp
pop
sbb
push
cmp
jmp
rcl
shl
inc
jno
add
stos
mov
lea
cmps
mul
and
dec
sbb
clc
inc
push
jecxz
shl
adc
aaa
mov
xchg
mov
xlat
mov
test
shl
dec
cmp
ds
(bad)
mov
add
call
mov
fwait
lea
aad
pop
movs
mov
jo
in
imul
les
pop
jmp
movs
pop
fbld
loopne
repz
pop
or
jg
sub
xchg
cdq
xchg
inc
test
lock
cmp
add
retf
test
sbb
jecxz
sub
ja
sbb
jnp
movs
add
cmp
mov
aaa
sub
dec
mov
(bad)
or
mov
xchg
imul
ret
mov
mul
inc
enter
pop
xchg
dec
mov
jle
data16
sbb
pop
push
les
repnz
sub
pop
jmp
cli
dec
xor
adc
fwait
sub
ret
xor
out
(bad)
jge
xchg
jno
cmps
sahf
pusha
xor
rcl
out
leave
(bad)
loope
lahf
in
(bad)
pop
inc
fsub
add
adc
jg
add
and
mov
data16
ret
aas
(bad)
jl
ficom
mov
or
enter
fild
test
dec
xchg
mov
sub
clc
lea
ret
sar
cwde
xor
dec
mov
xchg
(bad)
(bad)
mov
out
lahf
pop
movntps
jecxz
mov
jmp
loop
jns
or
jo
movs
call
mov
pop
and
jl
(bad)
mov
lahf
movs
movs
arpl
or
ss
xlat
xor
lods
pop
rcl
data16
mov
(bad)
sahf
call
jo
adc
push
sub
in
mov
sub
push
out
and
sub
or
pop
mov
push
inc
addr16
int3
test
popf
add
les
outs
popa
mov
js
adc
add
sbb
sub
mov
lea
stc
jp
(bad)
daa
and
mov
xor
cmp
inc
popa
std
fnstenv
sbb
rcr
mov
aad
jge
cld
xor
jge
mov
cs
test
adc
pusha
and
cmp
ds
ret
or
xchg
mov
jmp
pusha
in
popa
movs
mov
fisubr
test
xchg
test
push
dec
je
shl
(bad)
into
mov
sbb
std
and
adc
xor
repz
pusha
cvtps2pd
ffreep
inc
cmc
mov
push
mov
inc
add
adc
or
sub
(bad)
and
cwde
rol
cli
sbb
das
test
cmps
cli
loop
outs
add
repnz
lods
and
mov
jge
jbe
scas
in
jno
(bad)
push
dec
ret
and
mov
add
mov
push
icebp
inc
test
xchg
dec
xor
sub
push
mov
push
dec
aas
or
mov
ins
pushf
arpl
js
int3
mov
mov
js
ror
lods
shl
pop
pop
push
int3
dec
imul
btr
call
fwait
lds
test
jne
ds
enter
retf
pop
dec
ins
aas
jns
sub
push
ss
ins
push
mov
jp
cmp
pshufw
push
not
adc
pushf
dec
push
fcmovnbe
shl
inc
cmp
jo
aas
fs
int
add
cmc
retf
sub
mov
fbld
movs
mov
fst
inc
fst
push
lahf
test
inc
movs
xchg
arpl
cli
mov
ds
je
cmp
je
push
les
rol
sub
je
xchg
pop
je
loopne
cdq
stos
stc
hlt
push
gs
je
dec
jo
repz
das
loopne
fnsave
cmp
or
mov
je
adc
sbb
stos
jb
movs
mov
jae
cld
bound
stos
test
inc
inc
xchg
inc
call
fwait
pop
xor
push
sbb
jns
xor
cmp
dec
int3
pop
ds
popf
ins
and
out
pop
arpl
leave
dec
idiv
add
cmps
repnz
xor
push
es
mov
mov
and
inc
(bad)
push
cmp
je
xchg
lock
xchg
ins
pusha
ret
mov
and
(bad)
imul
mov
jo
cmc
mov
adc
fiadd
and
pusha
loope
jl
retf
mov
cmps
mov
push
adc
sub
xchg
test
mov
inc
lods
and
in
retf
rcr
shl
rcr
push
fucomip
mov
stc
sar
sub
jmp
cmc
aaa
cmp
jle
pushf
jb
mov
push
sbb
jb
loop
dec
retf
push
adc
repnz
inc
(bad)
lock
out
xchg
sbb
movs
xor
or
repnz
push
adc
adc
xchg
je
or
cmp
jb
or
lods
ss
sbb
push
std
push
mov
test
aad
cmp
add
push
mov
ins
fldcw
adc
lahf
cmp
es
or
adc
ins
cmp
or
cmp
fsubr
clc
jae
es
xchg
pop
aaa
jl
sbb
or
sub
dec
int3
imul
fwait
stc
mov
pop
jb
pop
leave
jns
or
and
sbb
pop
and
cmp
sar
inc
push
(bad)
outs
repnz
push
fst
stos
dec
mov
and
(bad)
xor
jne
cmc
adc
lds
nop
les
or
mov
out
jecxz
out
neg
xlat
inc
mov
call
addr16
sbb
ret
dec
add
sti
inc
mov
sbb
fimul
sbb
push
inc
inc
mov
sbb
xchg
pop
sub
inc
push
jbe
mov
pop
into
or
jb
mov
sub
cli
pop
mov
rep
sbb
jmp
cmps
out
xor
ss
mov
jg
dec
xor
xlat
push
in
lock
rcl
ficomp
fadd
dec
jb
sbb
inc
mov
xor
rol
jnp
push
push
mov
ins
mov
movs
add
fst
add
xor
(bad)
loop
jbe
jg
xor
repz
adc
int
movs
xor
ins
aad
lods
cmp
xchg
test
xchg
adc
or
stos
int3
iret
das
xchg
xchg
adc
cmp
jnp
push
push
adc
jmp
das
jmp
cmp
sub
or
mov
xchg
jno
dec
pop
fsubr
shl
rep
in
cli
popa
fsubr
xlat
lds
dec
inc
jne
or
into
jo
ins
lds
test
out
sbb
dec
out
ins
inc
fbstp
xor
enter
mov
les
int
mov
pop
popf
cmp
mov
push
and
ret
fsubr
pop
and
dec
cld
sub
push
clc
add
mov
aad
sbb
jle
stos
outs
cmp
add
jnp
ffreep
daa
adc
sub
inc
imul
cld
(bad)
jg
add
fdiv
pop
inc
daa
inc
test
dec
add
(bad)
lods
inc
mov
retf
retf
dec
les
aas
push
enter
ret
cmps
xor
outs
xchg
in
pop
movs
pop
pushf
mov
adc
enter
adc
sbb
xchg
js
dec
mov
ss
pop
addr16
mov
imul
add
inc
ficom
in
ret
int
cmp
dec
sub
sbb
sbb
pop
stc
clc
sar
push
stos
ins
daa
or
jp
xchg
or
imul
or
test
and
jae
test
sbb
jns
cli
lods
in
lods
xchg
inc
jge
cmp
jno
inc
inc
push
push
sub
xchg
and
popf
mov
lea
push
sbb
or
push
push
pop
push
cwde
pushf
leave
lods
repnz
dec
movs
call
aam
dec
mov
sbb
shr
fwait
pushf
not
ins
call
cs
jp
xor
popa
(bad)
cmps
mov
in
(bad)
mov
xor
jns
movs
dec
fiadd
mov
bound
xor
xchg
cmp
stos
push
jmp
cli
pusha
gs
nop
add
mov
fs
and
pushf
and
out
lods
pop
sub
dec
pcmpgtb
mov
sbb
outs
jnp
mov
pop
xor
arpl
add
imul
stos
mov
xchg
aam
jb
shl
(bad)
(bad)
sub
out
mov
or
fistp
mov
push
xor
nop
rcr
mov
add
stc
dec
push
or
and
push
pop
(bad)
mov
push
outs
fcmovu
retf
fnstenv
imul
add
in
in
lods
and
int3
icebp
(bad)
(bad)
cmps
sbb
rcr
into
or
outs
cli
dec
cld
pop
pop
(bad)
cmps
enter
jge
(bad)
pusha
sbb
pushf
push
mov
mov
push
outs
mov
jmp
or
cli
mov
add
xchg
jae
fadd
and
and
mov
add
outs
and
jo
dec
push
inc
(bad)
fcmovnbe
or
jne
or
in
inc
mov
js
iret
test
xchg
test
call
ds
stos
xor
ret
mov
jb
retf
push
inc
ins
push
fisttp
or
add
enter
pop
xchg
lea
dec
fsub
jb
int
add
cmp
mov
or
or
adc
hlt
int
jecxz
(bad)
aad
jge
sub
adc
cwde
mov
mov
sbb
adc
mov
loopne
xchg
pusha
outs
jecxz
jmp
cmp
pop
ret
scas
and
mov
fwait
dec
sub
add
js
add
in
and
out
cld
out
push
dec
sub
adc
jmp
addr16
inc
sbb
mov
paddb
cmc
push
xchg
clc
aad
fisubr
lods
cmp
nop
in
mov
icebp
test
(bad)
xlat
pop
inc
stc
mov
adc
and
sub
shl
mov
dec
rcr
pop
xor
or
sbb
imul
mov
xchg
cmp
or
mov
inc
inc
je
or
aad
mov
jge
sub
and
jne
in
(bad)
jae
sub
shr
stos
popa
xchg
cmp
adc
mov
lds
sub
lods
test
jo
call
movs
ds
and
and
jge
jbe
(bad)
cmp
inc
and
mov
add
pop
adc
hlt
push
or
add
inc
stos
cmp
sbb
repnz
in
xor
mov
mov
xchg
pop
sbb
scas
and
int
dec
cwde
push
sub
inc
or
add
in
repnz
aas
cmp
scas
in
mov
mov
or
mov
pushf
jmp
imul
sbb
sbb
addr16
push
enter
daa
xchg
sub
pop
clc
scas
inc
dec
pop
pop
mov
test
cmp
(bad)
cmp
sub
in
fdiv
loopne
int3
scas
scas
push
adc
dec
xchg
pop
push
cs
movs
or
mov
popa
dec
lods
xchg
ftst
mov
pop
dec
mov
(bad)
push
sub
repnz
cmp
lahf
add
sub
outs
mov
cmps
push
xchg
stos
(bad)
and
je
sub
mov
sub
inc
cs
sbb
int
push
popa
add
shl
lods
jb
jbe
ins
fcom
inc
or
push
push
jl
or
xchg
fmul
push
fld1
cmp
sub
fidiv
out
and
out
or
sub
das
popa
push
out
and
std
xchg
pop
mov
ins
retf
dec
dec
push
cmp
push
(bad)
sbb
jge
adc
xchg
mov
shl
and
outs
adc
xor
aam
mov
leave
sub
push
add
test
cs
push
lahf
pop
push
jmp
xchg
aad
retf
(bad)
sbb
into
jp
mov
mov
les
mov
inc
ins
fild
test
je
sub
imul
inc
cmp
sub
lea
fld
shr
clc
dec
mov
sub
xor
in
add
out
xchg
ds
loop
(bad)
mov
dec
je
shl
leave
(bad)
das
pop
push
sub
push
and
retf
test
mov
jb
push
test
xchg
fs
test
fidiv
(bad)
lahf
shl
mov
sbb
mov
retf
aam
fcomp
jmp
adc
mov
addr16
psubw
ret
adc
dec
int
cmp
cmps
(bad)
inc
gs
ds
lods
aam
sbb
xchg
ja
xor
sub
dec
mov
stos
loope
xchg
mov
(bad)
stc
imul
loopne
inc
or
mov
push
cmps
mov
pop
pop
or
mov
leave
(bad)
cmp
xor
dec
loopne
push
icebp
sbb
mov
ins
aaa
lahf
lods
fsubr
daa
das
jle
inc
sbb
scas
mov
jb
rcl
(bad)
xor
dec
add
xor
scas
ins
xchg
stos
cmp
fisttp
dec
and
out
or
rcl
or
int3
cwde
mov
test
add
mov
sub
sti
push
lods
addr16
xchg
and
call
scas
mov
add
sbb
test
fwait
xor
cli
int
dec
jp
(bad)
jecxz
mov
mov
scas
sub
mov
nop
jno
mov
daa
cmc
iret
jp
inc
xchg
test
push
cwde
add
adc
call
mov
cmp
call
adc
mov
cmp
add
aaa
lods
adc
(bad)
(bad)
into
add
mov
outs
cmp
popa
call
push
cmp
sti
xchg
leave
test
pop
cmps
adc
mov
test
pop
cmp
fcmovnu
ror
mov
imul
xchg
mov
inc
dec
bound
je
sub
ret
lds
nop
into
daa
cmp
loope
push
rol
sub
cmp
sbb
cld
fnstsw
shl
dec
dec
hlt
and
push
pop
jns
mov
mov
inc
mov
pop
mov
retf
inc
sub
jmp
add
xchg
cs
or
sub
sub
scas
dec
cwde
xchg
push
mov
push
pop
dec
addr16
fucom
enter
lea
aas
into
in
test
add
mov
fwait
les
retf
dec
out
int
mov
xchg
fistp
jnp
mov
lods
and
push
pop
ins
(bad)
repz
mov
push
mov
ret
add
xor
and
xchg
and
cld
xor
push
lods
sub
push
cmps
push
jno
mov
into
mov
les
outs
test
mov
rol
retf
pop
adc
rcl
push
outs
pop
fsubp
sub
je
test
cmps
outs
leave
cmp
cli
outs
test
or
mov
(bad)
rcr
xchg
outs
mov
mov
push
fdivp
pop
jmp
mov
jge
xchg
data16
mov
out
jae
dec
addr16
outs
repz
repnz
add
sbb
push
scas
mov
data16
xor
ja
lods
(bad)
push
movs
push
pop
icebp
push
dec
lds
xchg
sbb
imul
inc
ja
stos
jne
test
ret
push
fmul
cmp
jns
movs
inc
movs
jmp
xor
mov
test
or
jns
ins
mov
or
jg
mov
cmp
sbb
rcr
lods
lahf
jnp
pop
xor
jecxz
cmp
lods
xchg
pop
lock
inc
js
ds
inc
sub
jl
push
push
cmp
jmp
xchg
pushf
mov
cmp
loop
std
mov
ret
inc
mov
mov
lahf
aas
dec
dec
test
and
sbb
adc
push
inc
or
mov
and
pop
mov
or
sub
xchg
jmp
sbb
loopne
loop
mov
xor
and
push
mov
rcl
int3
out
sub
push
bound
sbb
test
push
dec
enter
push
adc
inc
mov
(bad)
cld
(bad)
mov
int3
or
jg
js
push
or
mov
push
push
push
jp
nop
xchg
fwait
stc
inc
adc
xchg
cmp
mov
(bad)
xor
add
out
mov
push
into
aas
inc
pop
lds
cli
jp
dec
lahf
sub
cmp
movs
popf
lods
movs
int3
pushf
lea
or
pop
iret
dec
dec
int3
jl
jns
cli
js
mov
test
push
fisub
outs
push
sub
dec
test
arpl
mov
adc
lea
mov
inc
ret
add
mov
and
xchg
or
mov
scas
stc
xlat
int3
das
iret
out
xor
adc
bound
push
xchg
xor
call
sbb
dec
(bad)
les
sub
push
pushf
out
xor
push
xor
push
lods
sbb
mov
ins
popa
(bad)
mov
clc
popf
add
push
clc
scas
cli
ret
retf
inc
stos
fdiv
pop
xchg
dec
rcl
push
sbb
xor
test
imul
iret
jg
fisubr
icebp
mov
mov
jg
mov
jmp
xor
mov
dec
out
je
cmp
cmp
je
push
mov
inc
sbb
clc
enter
(bad)
std
(bad)
aam
jnp
sub
ins
mov
(bad)
mov
stc
pusha
pop
xor
mov
mov
aaa
fxch
(bad)
cli
jno
nop
sbb
push
jne
cmp
shl
js
and
or
push
jo
push
jmp
ds
(bad)
jmp
cmp
adc
dec
cdq
es
mov
inc
ret
scas
pop
aam
pop
into
pop
cmp
fisttp
ror
dec
xchg
popa
sub
xchg
call
dec
fist
xchg
inc
inc
lahf
pop
push
out
enter
(bad)
push
sbb
popa
mov
jae
test
add
fsub
and
push
mov
pop
nop
pop
mov
xor
xor
add
xchg
pop
retf
cli
test
int3
iret
movs
dec
xchg
xchg
xchg
sar
pop
call
add
call
pop
cmps
shr
lock
inc
xor
enter
adc
scas
jg
scas
stos
add
pop
aas
pop
scas
call
lea
lods
lods
fstp
int
imul
scas
mov
fisttp
ja
scas
in
sub
sbb
mul
xchg
movs
pop
hlt
fld
xchg
les
mov
or
stc
ds
xchg
mov
dec
dec
adc
ss
pop
stos
push
pop
retf
adc
xchg
dec
pusha
sub
jae
into
(bad)
jg
mov
test
rep
rol
lods
in
dec
add
sub
push
js
(bad)
sub
bound
std
inc
imul
pop
and
fimul
ds
(bad)
adc
mov
pop
xlat
(bad)
and
inc
and
movs
add
pushf
(bad)
xor
xor
popf
rcr
mov
dec
xor
pop
mov
add
out
add
add
sbb
scas
mov
lahf
scas
ret
add
or
mov
rol
mov
pop
mov
sub
add
pop
retf
test
pop
movhps
pop
mov
or
dec
jnp
outs
out
push
sub
mov
pop
scas
aas
mov
bound
cmc
into
out
and
fld
sub
sub
dec
mov
cs
pop
mov
out
jle
cmc
je
ret
mov
xchg
jp
loop
mov
fadd
addr16
cli
jno
sar
or
jnp
mov
push
fdivr
loop
jmp
cld
adc
movs
icebp
mov
jno
inc
in
push
fcomi
leave
dec
sti
mov
into
enter
xchg
repz
test
adc
je
mov
mov
xchg
adc
rcl
fwait
ja
inc
in
repz
mov
adc
adc
popa
(bad)
std
pop
test
sbb
and
jl
inc
jecxz
test
ins
rcr
jns
mov
popa
aas
push
leave
sbb
push
xchg
xor
imul
lea
add
cwde
imul
sub
in
in
inc
(bad)
fucom
mov
push
retf
mov
out
adc
arpl
arpl
push
xor
ins
mov
mov
inc
jl
adc
pop
xor
lods
inc
mov
pop
push
xor
js
dec
(bad)
scas
pop
or
stc
mov
add
or
ror
hlt
in
loope
mov
iret
push
int3
sbb
push
or
xor
pop
inc
xchg
mov
push
cmp
cli
stos
dec
sub
xor
fcmovnbe
mov
pop
rcr
adc
and
jge
(bad)
aaa
mov
enter
retf
inc
into
in
mov
or
inc
ss
aaa
fld
and
mov
stc
mov
fs
sbb
or
push
sub
or
dec
adc
mov
sub
bound
test
push
out
xor
xchg
int3
mov
add
test
fnstsw
and
jo
fs
cmp
push
inc
add
out
mov
jge
popf
jge
xor
push
pop
call
inc
div
mov
(bad)
jbe
fsub
pusha
mov
clc
retf
pop
int
jne
mov
xor
xor
xchg
aad
stos
repnz
mov
loop
jmp
cmp
iret
mov
repz
repnz
pop
cmp
adc
lods
out
sbb
adc
cmps
mov
loope
cli
repnz
(bad)
inc
add
dec
out
iret
jbe
adc
xchg
mov
xchg
lds
dec
test
xlat
popf
xchg
add
leave
ins
popa
jb
cmps
imul
mov
inc
and
or
aam
push
fdiv
cmps
adc
xchg
mov
int
sbb
retf
ret
int3
lods
int
mov
mov
pop
rcl
call
mov
aaa
jbe
xor
xor
iret
dec
xchg
xchg
test
dec
inc
iret
pop
cld
aam
test
test
(bad)
aad
call
std
loopne
popa
not
js
retf
mov
pop
nop
repnz
fadd
sbb
pop
mov
sahf
inc
xor
mov
lea
(bad)
outs
add
pusha
mul
pop
iret
xchg
pop
imul
xor
ss
(bad)
pop
xor
movs
clc
add
retf
mov
jl
or
add
(bad)
div
inc
shl
jnp
repnz
sub
fcmovnu
rcr
fldcw
inc
push
xchg
mov
repz
popf
js
xor
lea
retf
jne
jae
in
inc
fdivr
inc
xor
int
and
(bad)
imul
or
sar
sbb
aaa
push
lea
in
mov
mov
or
call
neg
rcr
clc
mov
mov
sbb
and
pushf
dec
loopne
retf
retf
rol
popf
add
xchg
mov
imul
add
dec
jp
mov
mov
js
mov
xchg
pop
inc
lods
sar
je
dec
add
xor
add
aam
mov
fwait
adc
rcr
imul
ins
adc
repz
pop
pop
cmp
jno
(bad)
hlt
(bad)
(bad)
sbb
mov
cdq
jmp
dec
push
(bad)
pop
mov
outs
mov
outs
iret
inc
or
movs
sbb
rol
test
ror
jg
mov
(bad)
in
push
(bad)
and
out
xor
jns
mov
xchg
dec
les
pop
sar
aaa
xor
mov
hlt
cwde
arpl
add
repz
or
clc
mov
nop
or
pushf
ss
ins
xchg
dec
(bad)
add
pushf
mov
or
mov
in
jge
push
retf
adc
mov
sub
icebp
mov
sub
imul
daa
cmp
mov
out
adc
rcl
imul
sbb
jmp
enter
inc
xchg
pop
ret
or
push
je
push
fisttp
inc
dec
push
icebp
scas
ror
push
pushf
or
and
pusha
push
mov
pop
push
jno
mov
enter
fnstcw
jl
ins
add
xlat
enter
dec
paddw
xchg
das
jecxz
fild
lock
repz
popa
cmps
jo
xchg
enter
cmp
mov
sbb
and
inc
push
retf
ins
fs
mov
arpl
mov
add
fwait
push
jge
or
adc
jmp
push
push
adc
in
cmps
sbb
(bad)
hlt
push
pop
sbb
or
popf
jle
outs
xchg
sub
jae
in
jne
es
sti
cmp
les
leave
or
(bad)
jae
push
retf
cmps
popf
stos
bound
fwait
mov
mov
mov
jg
int
and
inc
int3
mov
pusha
stc
mov
jge
shr
push
add
ins
inc
jne
sbb
and
xchg
nop
push
scas
loop
mov
inc
mov
outs
outs
out
xchg
cmps
out
pop
inc
(bad)
(bad)
loope
sub
inc
aad
fadd
ss
mov
lods
add
cld
xchg
sub
mov
mov
dec
xor
ss
fst
cs
ins
cmp
xor
dec
fistp
sbb
into
mov
push
cmp
daa
add
mov
mov
or
es
jo
into
pop
or
sub
inc
inc
std
ficom
int
gs
arpl
inc
sub
movs
or
test
movs
js
xchg
xchg
cmp
sub
ret
jmp
(bad)
or
sbb
xor
mov
loopne
cwde
add
and
outs
sub
popa
add
movs
push
jg
cmp
push
cdq
aaa
mov
mov
xchg
cli
mov
push
pop
fiadd
pop
lods
sbb
movs
lods
lds
xchg
fild
sbb
adc
int3
mov
push
ret
add
psllw
push
add
jnp
lds
and
mov
xchg
cmps
cmp
aas
sahf
mov
jae
(bad)
leave
jae
cmps
imul
pop
xchg
(bad)
loop
pop
enter
enter
and
or
mul
push
sub
push
cmp
add
push
ret
int3
stc
inc
retf
icebp
clc
mov
push
inc
adc
jle
cmp
stos
sbb
xchg
sbb
bound
inc
xlat
into
dec
pop
dec
jnp
mov
sbb
add
pop
xor
push
call
not
inc
jmp
xlat
adc
and
stos
ins
repz
aam
cmp
push
mov
sbb
xlat
lahf
repnz
sbb
push
in
mov
sub
call
retf
je
(bad)
jp
leave
xor
inc
push
xor
mov
jae
xlat
cdq
jmp
cmp
cmp
mov
sub
cdq
and
xchg
mov
mov
pop
mov
in
std
sbb
outs
shl
or
mov
out
dec
(bad)
shl
daa
lods
les
and
push
call
test
fsubr
popf
imul
repnz
jmp
data16
cmp
cld
fwait
ins
addr16
pop
test
aam
xor
push
push
shr
rcl
and
scas
dec
and
pop
stos
add
jp
idiv
aas
push
or
push
add
sub
cwde
lea
xchg
addr16
mov
sbb
test
cmp
sbb
arpl
gs
shr
mov
jmp
inc
ja
push
mov
cmps
jp
push
shl
xchg
lahf
out
shl
or
mov
es
inc
je
movs
mov
jmp
dec
jne
xor
out
or
cmc
inc
mov
lds
add
fcmovu
std
mov
jmp
retf
sar
mov
sub
pusha
sbb
pop
cmp
fldcw
ss
jns
xchg
pop
jo
or
sub
jno
cli
mov
push
lds
imul
outs
mov
aas
mov
loopne
test
(bad)
sub
adc
repnz
lods
push
idiv
push
cmps
and
in
aas
pop
add
pop
jecxz
addr16
jb
adc
cmp
adc
lahf
adc
or
pop
xchg
or
xchg
cmps
and
sbb
mov
aaa
mov
push
sbb
in
mov
lds
mov
push
mov
retf
aam
mov
sub
loop
std
rol
outs
neg
cmp
xor
add
sub
rcr
movs
or
mov
jo
push
pop
mov
retf
jecxz
es
fidivr
and
and
xor
inc
pushf
sub
mov
inc
movs
cmps
mov
and
mov
popf
sub
pop
push
cmp
hlt
not
retf
push
fdiv
imul
std
int
fs
fisub
add
cmps
ds
movs
call
mov
movs
out
jmp
(bad)
xchg
dec
cmps
cmc
inc
cld
mov
test
mov
loope
add
cmps
cli
push
pop
test
scas
sbb
push
test
addr16
push
(bad)
cmc
xchg
or
mov
jecxz
xor
inc
and
scas
mov
sar
cmp
push
lods
repnz
inc
mov
mov
pop
mov
push
dec
aaa
fnsave
out
in
mov
mov
imul
ins
call
and
push
in
shr
xchg
aaa
out
xor
cmps
adc
and
mov
sbb
test
cmp
fidiv
(bad)
ss
(bad)
enter
stc
(bad)
push
dec
retf
ret
or
xor
jmp
test
cmp
or
shl
mov
dec
jb
xor
and
jecxz
lea
mov
or
sbb
inc
outs
xchg
mov
cld
fldenv
in
test
sbb
cmc
dec
movs
jns
fisttp
movs
push
fcomi
xchg
push
pushf
mov
jmp
push
movs
sub
into
adc
in
int
inc
xchg
repnz
add
cmps
dec
int
jae
dec
xchg
mov
(bad)
pusha
xor
mov
cmps
jbe
clc
or
jecxz
icebp
cmps
pop
adc
stos
cmp
(bad)
ror
mul
lea
cld
sub
mov
scas
bound
popf
inc
fs
dec
shl
into
lds
(bad)
mov
loope
xor
gs
adc
aad
frstor
in
mov
fst
add
fsub
retf
inc
mov
leave
adc
mov
movs
and
adc
hlt
xchg
test
push
inc
gs
sbb
cmp
mov
repz
sub
mov
pop
adc
push
sub
retf
jae
xchg
data16
push
inc
xor
ficomp
sub
gs
sub
sbb
xor
daa
ror
int3
mov
dec
push
loopne
and
stos
ss
sub
inc
fdivr
mov
pop
inc
jmp
aaa
div
mov
sbb
mov
add
cmps
adc
mov
cmp
je
(bad)
vphaddudq
mov
adc
test
daa
and
retf
inc
xor
sahf
popa
sbb
and
arpl
imul
sub
hlt
jp
movs
sti
(bad)
inc
xor
sbb
mov
dec
addr16
cdq
and
in
cmp
add
movs
xchg
cmp
push
fdivrp
test
sub
fs
mov
mov
mov
xchg
push
and
cmp
sbb
loopne
mov
cmc
mov
and
push
(bad)
jbe
jae
push
enter
hlt
fiadd
sahf
push
adc
data16
pop
out
test
jg
call
adc
cmp
into
xchg
fst
cmp
mov
les
imul
cmps
cwde
rcr
xchg
(bad)
stc
sti
sar
mov
dec
cmps
nop
aam
cli
jo
stos
push
aas
(bad)
call
push
test
lock
add
fisttp
cwde
inc
arpl
clc
mov
shr
push
mov
push
bound
out
cwde
das
jp
ja
ss
mov
out
aam
frstor
sbb
xchg
jle
push
xchg
cmp
cmp
mov
inc
ja
shl
scas
and
mov
cdq
pop
es
inc
std
and
addr16
(bad)
out
jge
test
das
fimul
adc
sub
sub
fcomp
(bad)
icebp
retf
xchg
mov
arpl
mov
sub
shl
ds
pusha
xchg
mov
sbb
xchg
push
jp
cli
loope
lock
jle
ins
push
cmc
neg
leave
and
sbb
sub
sbb
xor
stos
cmp
scas
call
xor
fs
fadd
int
popa
gs
fidivr
out
jne
fnstcw
pop
cdq
mov
xor
sub
inc
pop
and
cwde
in
inc
inc
dec
sbb
lods
mov
xor
call
pop
push
and
sub
add
push
dec
movs
cmp
es
cmp
xor
sub
xchg
dec
popf
test
push
cmp
(bad)
mov
stos
ficomp
push
push
mov
fidiv
xchg
push
add
mov
fisub
std
sub
gs
scas
aaa
icebp
lods
test
xchg
sbb
(bad)
fisub
pusha
shl
mov
movs
pop
dec
cld
fs
and
sub
mov
pop
sub
and
push
jp
std
or
xor
push
int
xchg
jnp
push
or
jecxz
pop
nop
sbb
es
mov
fwait
loopne
vcvtdq2pd
push
mov
mov
pop
ret
push
inc
inc
mov
stos
leave
mov
sub
xlat
push
adc
mov
in
sbb
add
inc
xor
inc
pop
bound
iret
seta
mov
sub
loopne
add
(bad)
mov
daa
div
or
arpl
outs
dec
cmp
mov
cmps
pop
cmp
scas
adc
popf
xchg
mov
mov
pushf
xor
push
mov
adc
mov
sub
fs
lock
mov
jo
imul
add
jl
fwait
dec
xchg
daa
xor
scas
push
pop
jnp
add
or
mov
data16
inc
das
pop
jg
call
pop
fs
jp
jecxz
pop
pop
inc
mov
mov
jnp
dec
push
push
sbb
mov
mov
or
add
dec
loop
cmp
cmp
mov
xlat
mov
or
sar
and
mov
fwait
xchg
pop
cmp
repz
int
retf
jmp
test
mov
test
aaa
sti
mov
inc
mov
lock
jnp
pop
addr16
enter
enter
idiv
int
push
xchg
fsub
push
loopne
in
pop
std
jge
sub
xor
test
mov
mov
cmp
dec
aad
push
fmul
stc
test
in
je
mov
and
lds
loop
cld
cmp
cmp
push
repz
jbe
dec
stos
jne
cmc
push
inc
push
mov
push
imul
imul
daa
stos
mov
mov
lock
mov
sti
adc
cdq
sub
repnz
xchg
int
test
aas
inc
and
or
ja
sbb
pop
std
mov
retf
mov
and
lahf
hlt
cwde
scas
gs
adc
push
mov
ror
scas
and
xor
pushf
jbe
xchg
not
push
xchg
dec
addr16
mov
sbb
adc
pop
dec
lds
jo
clc
call
into
inc
lods
pop
(bad)
iret
jb
add
or
mov
loop
ins
adc
adc
aad
test
and
add
bound
lds
xor
js
and
ja
or
pop
cmps
shl
in
mov
rcr
pop
or
clc
xor
xchg
add
inc
into
fbstp
(bad)
cmc
repz
cmps
fidiv
imul
icebp
arpl
ret
or
xor
jle
out
test
xor
fs
out
mov
(bad)
push
scas
pop
aas
mov
scas
call
fbstp
popa
lds
cmp
repz
or
rcl
add
mov
lock
bnd
xchg
mov
dec
or
xor
sub
div
add
into
mov
shl
xor
popa
stos
shr
stos
int
mov
fisttp
sbb
mov
inc
pop
popf
mov
shr
(bad)
dec
jbe
outs
pop
or
xor
and
cld
sbb
dec
mov
mov
popa
add
adc
mov
aam
cmp
out
ins
retf
cmc
xor
mov
nop
outs
je
push
xchg
mov
mov
int3
fiadd
aam
scas
sahf
cmp
push
xchg
clc
daa
lock
and
mov
test
and
or
and
shl
(bad)
mov
js
retf
test
cwde
xchg
pop
pop
xlat
push
mov
pop
aad
mov
fistp
(bad)
call
icebp
inc
jmp
jbe
dec
ja
mov
(bad)
sbb
mov
pop
imul
mov
jae
add
push
push
mov
push
sub
jne
cdq
jge
mov
ret
and
add
cdq
outs
xor
sub
int
lods
hlt
push
dec
scas
sub
adc
inc
push
add
rcr
dec
out
jmp
sub
out
outs
and
call
mov
repz
cmp
cmp
or
stos
mov
jle
push
sub
sbb
hlt
mov
lods
inc
movs
lea
xchg
mov
push
fistp
sbb
sbb
sar
mov
call
inc
pop
mov
add
jp
pop
add
pop
pop
sbb
cmp
hlt
dec
jmp
cdq
sub
adc
fwait
cmp
cmc
scas
dec
mov
jmp
mov
outs
inc
movs
enter
mov
xor
and
mov
sbb
jae
test
cwde
dec
add
mov
cmp
xor
mov
je
mov
in
in
neg
jg
mov
lods
and
les
(bad)
arpl
scas
loope
mov
daa
stc
mov
adc
inc
push
scas
shl
cs
movs
jg
push
push
fsubr
adc
inc
pop
pushf
movs
cmc
jmp
mov
add
cwde
dec
(bad)
in
cmp
fdivr
or
mov
xlat
out
jecxz
adc
scas
pusha
aam
inc
push
sbb
rol
(bad)
es
xchg
push
ret
(bad)
scas
in
outs
add
aad
dec
(bad)
xor
mov
dec
mov
add
iret
in
fidiv
push
cmp
and
sub
inc
(bad)
lock
and
clc
ins
pop
mov
add
dec
(bad)
in
jp
xchg
fcomp
sbb
sahf
sbb
int
mov
sbb
out
or
cli
add
daa
jmp
retf
jne
jnp
sbb
fisub
mov
push
add
and
inc
fiadd
cmp
sub
mov
(bad)
sbb
and
(bad)
rcl
lods
leave
push
pusha
call
sbb
inc
sub
sbb
stc
cmp
out
cmp
cmp
dec
xor
in
xlat
jns
pop
pop
sar
loop
jb
mov
sub
ins
mov
sti
pop
xlat
je
movs
out
aam
jecxz
dec
mov
fwait
in
addr16
mov
add
mov
sub
xchg
or
jmp
cmp
or
ss
es
and
adc
push
add
nop
xor
pop
enter
push
push
imul
test
adc
push
out
fisubr
stc
add
sar
hlt
lods
sub
int
mov
xor
pop
adc
add
pop
jle
jge
push
jg
inc
ds
mov
mov
cld
daa
mov
xor
inc
cmps
imul
clc
add
add
xor
xor
loop
movs
pop
dec
gs
cmps
mov
sub
xchg
push
retf
mov
push
add
fnstenv
mov
sbb
adc
xchg
pop
push
int
popa
loopne
movs
dec
aam
cmp
call
add
inc
and
mov
sbb
inc
mov
push
add
nop
mov
(bad)
iret
ret
xchg
fimul
jno
push
xor
retf
adc
jo
fsubr
mov
fisttp
fbld
dec
enter
jne
inc
inc
mov
ss
popa
clc
mov
mov
pop
retf
mov
loope
movs
hlt
and
in
daa
mov
jg
or
push
push
movs
popf
mov
push
fdiv
retf
sbb
js
pop
jl
outs
in
pop
adc
pop
outs
mov
ins
test
xchg
xchg
test
sbb
xchg
fsub
push
and
mov
add
xor
mov
push
sbb
pop
jp
leave
add
adc
js
xchg
mov
mov
fisttp
out
add
xchg
pop
pop
loop
sub
jns
sbb
sar
test
and
cmp
adc
in
cwde
(bad)
mov
std
add
adc
outs
cmps
inc
lahf
fwait
jle
mov
rcr
les
and
aam
sbb
shr
inc
jge
or
cs
xor
jl
inc
mov
xchg
inc
lahf
jnp
pop
jl
nop
nop
popf
inc
add
out
cld
add
pop
popf
stc
add
push
pop
sbb
dec
mov
jl
imul
push
pop
es
cmps
imul
jne
ins
aas
or
push
or
ins
in
push
xor
add
outs
lahf
rcr
push
cmp
in
sbb
sub
sar
xlat
pop
je
and
loop
int3
jge
push
pop
icebp
xlat
call
sub
frstor
push
retf
xor
push
add
mov
inc
and
pop
ins
sbb
(bad)
cs
inc
out
inc
push
(bad)
jmp
add
cmp
cmp
push
into
rcr
arpl
imul
inc
cmc
jns
pusha
bound
in
imul
xchg
jae
push
push
and
inc
dec
mov
sub
pop
movs
cmc
outs
cmp
imul
cmp
test
fidivr
mov
xor
sbb
jbe
pop
sar
and
std
je
and
sti
mov
xor
frstor
push
sbb
jnp
dec
mov
sub
inc
outs
dec
test
pop
and
(bad)
popa
(bad)
mov
dec
loop
xor
mov
sbb
dec
sbb
jmp
ret
lea
aaa
mov
jno
sub
aas
fcomp
fs
sbb
dec
inc
cmps
dec
aam
stos
fwait
and
or
jmp
inc
test
ds
dec
and
aad
mov
sbb
enter
test
adc
mov
stos
imul
test
scas
mov
movs
cdq
dec
cmps
adc
and
retf
imul
mov
mov
int3
leave
sbb
in
mov
pop
sbb
repnz
mov
out
jge
fistp
sbb
call
shl
xlat
mov
pop
(bad)
jmp
loope
sbb
out
ds
mov
(bad)
out
imul
pop
fisub
pop
mov
rcl
adc
xchg
rcr
fdiv
inc
ficomp
jl
loope
xchg
pop
mov
push
and
ja
fucomi
mov
dec
mov
stc
sub
imul
sbb
outs
in
sub
jno
dec
(bad)
leave
xchg
loope
repz
clc
sbb
jns
sbb
mov
sbb
pop
sahf
pop
push
pop
div
pop
jp
test
popa
sbb
add
pop
mov
cmc
push
and
dec
repz
jecxz
addr16
pop
mov
jge
pop
in
sbb
pop
cmp
adc
sbb
jl
dec
scas
pop
mov
pop
bound
pop
dec
imul
cmp
mov
jbe
stos
into
dec
sbb
lahf
xchg
test
iret
add
ins
xor
or
mov
add
sti
jmp
xchg
je
push
lea
or
es
mov
inc
mov
leave
stos
cmp
sbb
and
out
jnp
shl
dec
cmps
cmp
jecxz
aad
cmps
fnstcw
pop
xor
push
sbb
xchg
sahf
sar
or
inc
cmp
and
mov
int3
dec
idiv
push
jg
mov
cmp
xor
enter
mov
out
inc
and
dec
mov
aas
je
dec
ss
dec
cmp
retf
jbe
mov
rol
or
xor
mov
(bad)
and
xchg
inc
pop
bound
mov
aaa
inc
add
jp
cmp
cwde
sbb
push
push
add
popa
lea
out
(bad)
push
repz
mov
sub
mov
cs
xchg
xchg
adc
(bad)
jne
sub
rcr
or
imul
adc
or
clc
and
retf
fdiv
fmul
loop
addr16
inc
xor
setl
push
lds
add
inc
jnp
push
or
iret
test
dec
pop
push
pop
xor
int
fnsave
jae
mov
ja
add
pop
xchg
mov
xchg
cwde
gs
pop
xor
les
adc
sub
cmp
sbb
sti
cli
or
das
movs
cmp
xchg
mov
inc
and
adc
dec
sbb
mov
aam
xor
fisub
sub
mov
outs
loope
stc
pcmpgtb
iret
xchg
dec
(bad)
ins
add
call
test
popa
add
test
sar
push
sub
mov
adc
mov
mov
cmc
mov
clc
dec
std
bound
pop
test
jae
repnz
sbb
dec
div
dec
mov
movs
fmul
jg
adc
int3
add
jge
retf
sbb
inc
mov
mov
dec
add
sbb
xchg
movs
mov
mov
mov
cmc
in
pop
jl
jne
push
nop
jle
mov
and
and
not
adc
mov
cli
ficomp
xlat
scas
addr16
adc
or
les
cmc
push
jmp
mov
sbb
adc
mov
out
lea
xor
adc
jns
test
cmp
int3
repnz
xor
add
outs
test
repz
sbb
xor
pushf
es
jno
idiv
fisub
data16
cs
imul
pop
dec
and
je
sahf
sub
pop
xchg
mov
pcmpeqw
stos
xchg
in
repz
arpl
mov
cmc
data16
lods
jne
and
dec
aad
out
not
call
mov
jg
scas
sbb
or
lds
xor
cld
sub
les
mov
and
aas
adc
dec
sub
or
cdq
ins
mov
pop
mov
dec
add
jle
out
inc
loop
inc
add
pop
shr
(bad)
xchg
test
dec
sub
pop
sub
sbb
loop
aaa
push
xchg
or
pop
mov
ins
push
cli
mov
daa
push
ja
sbb
add
mov
(bad)
pop
ins
xchg
and
into
inc
outs
sbb
popa
or
stc
sbb
pop
mov
pushf
rcl
jbe
mov
cmp
fs
into
pop
in
dec
cmp
shl
xchg
dec
in
ficomp
fdiv
sub
push
mov
or
xchg
cmps
call
xchg
jae
or
stc
dec
fucom
rcl
shr
xor
jp
call
sbb
gs
sbb
out
iret
imul
mov
outs
jg
cmc
pop
pop
dec
adc
sahf
fs
sub
sbb
arpl
xchg
jl
call
int
xchg
scas
or
jg
dec
pop
movs
lods
pop
xor
lods
call
or
and
movs
or
jnp
aad
pop
scas
es
scas
mov
cmps
pop
mov
cmp
inc
add
xchg
or
jno
inc
cli
dec
out
push
sti
inc
cld
out
(bad)
xor
pop
out
dec
lds
mov
and
push
int3
mov
xchg
popa
in
nop
pminub
cld
fcom
add
add
xor
sbb
dec
sub
pushf
pusha
adc
jns
sub
sub
in
push
mov
outs
clc
pop
sub
sub
ins
outs
cwde
test
iret
in
data16
icebp
ja
inc
addr16
fisttp
mov
or
adc
or
jecxz
inc
outs
cli
add
pusha
rcr
mov
inc
and
push
imul
cwde
bnd
or
ret
rcl
fxch
popa
or
jle
cmp
sbb
mov
imul
jbe
jle
sbb
jecxz
lea
mov
and
push
jmp
xor
or
enter
cmp
push
bound
xlat
adc
into
stos
popf
(bad)
inc
mov
jp
push
(bad)
mov
test
fisttp
aaa
jl
fmul
pop
movs
call
movs
int3
adc
(bad)
jmp
fst
push
bound
repnz
imul
push
movs
pushf
jp
scas
ins
inc
sbb
and
lods
enter
popa
dec
adc
out
cmp
fcmovb
mov
hlt
mov
xchg
add
push
adc
in
jg
retf
and
out
repz
mov
fdivr
pusha
(bad)
popa
sbb
jnp
test
iret
mov
pusha
mov
mov
hlt
xchg
pushf
xor
(bad)
add
cmc
push
ror
daa
fscale
out
aas
mov
sbb
and
inc
cld
fiadd
lahf
stc
aad
loope
inc
jl
mov
dec
movs
mov
xor
xchg
call
out
add
addr16
mov
mov
push
aas
push
sub
add
jp
xchg
in
sub
aas
jnp
retf
and
cmp
sub
mov
xchg
mov
mov
mov
pop
sub
or
push
enter
aad
js
int3
loopne
xchg
retf
arpl
dec
ficom
ja
cmps
pop
in
scas
clc
mov
inc
ret
sub
inc
pop
add
clc
push
or
adc
test
or
inc
cmps
and
cmps
js
pushf
mov
sub
hlt
or
cmp
cmp
fmul
cmp
xchg
out
add
jnp
pop
sbb
push
dec
movs
mov
out
call
(bad)
ja
in
pop
fwait
mov
in
adc
pusha
or
xor
push
jnp
xchg
or
mov
call
jb
and
daa
push
dec
jmp
mov
xchg
pop
fcom
sub
outs
jl
cmp
jbe
jne
cmp
loop
push
scas
push
jo
test
dec
cmp
jne
jne
sub
mov
xchg
int
mov
inc
inc
aaa
clc
lahf
scas
push
sbb
sbb
sbb
xchg
dec
ja
mov
arpl
shl
pusha
aas
mov
ret
aad
xchg
add
mov
dec
add
outs
adc
int3
jne
mov
das
(bad)
fwait
dec
or
lock
mov
scas
out
push
sub
out
jge
arpl
leave
pop
outs
call
ret
gs
inc
xchg
pop
adc
out
(bad)
cmp
mov
mov
int
mov
cwde
sar
jg
rol
movs
loopne
shr
in
push
mov
mov
fidivr
dec
dec
rcr
jp
lods
outs
pop
jnp
inc
mov
jb
popf
cmp
mov
mov
scas
adc
jle
pop
dec
rol
cwde
retf
cmp
adc
jg
add
or
popa
and
jbe
fstp
mov
xor
fadd
inc
pop
mov
clc
cdq
xor
add
fsubp
cs
outs
xor
xor
(bad)
and
cdq
sub
movs
jg
pop
loop
in
in
xchg
add
jbe
cwde
rol
xchg
dec
lock
pop
rcr
sahf
jecxz
jne
adc
mov
add
fsubr
mov
push
pop
or
inc
daa
aam
(bad)
(bad)
sbb
xor
test
jp
xor
adc
daa
pop
(bad)
push
or
adc
pop
push
and
mov
ins
xor
cmps
fisubr
jl
pop
ss
inc
test
retf
mov
fisttp
push
and
mov
mov
xchg
lock
xor
jnp
enter
dec
fsubr
sbb
bound
and
data16
(bad)
and
mov
mov
jb
xor
xchg
push
scas
push
inc
mov
mov
test
mov
xchg
adc
scas
cmps
and
fbld
inc
outs
xlat
push
movs
fs
rol
out
mov
in
lods
retf
(bad)
movs
mov
mov
push
clc
(bad)
retf
lods
mov
push
push
aad
mov
jge
xchg
pop
aad
mov
sub
or
in
or
dec
cmp
jge
add
pop
dec
loopne
jae
add
dec
or
sbb
iret
rcl
popa
mov
xor
rcr
lods
lock
sbb
fs
xchg
movs
lahf
mov
arpl
in
inc
das
mov
sub
mov
test
shl
dec
(bad)
pop
test
dec
aam
loope
add
push
pop
push
or
jne
sbb
into
lock
xor
(bad)
lock
pop
jmp
mov
lahf
adc
or
xchg
loope
into
js
or
mov
xchg
jbe
fild
add
xchg
jecxz
pop
cmp
mov
imul
addr16
mov
in
scas
dec
out
fnstcw
xchg
rcl
mov
push
xor
enter
stos
imul
inc
call
and
sbb
mov
cmp
inc
in
mov
ja
mov
mov
mov
dec
jns
mov
(bad)
out
xchg
pop
dec
push
into
mov
(bad)
xchg
and
sub
push
inc
(bad)
in
(bad)
xchg
movs
and
jns
test
xchg
shl
jge
leave
in
adc
jecxz
in
ror
je
mov
mov
add
outs
mov
repz
loop
inc
shufps
mov
out
mov
repnz
hlt
outs
rcl
movs
cmp
cdq
mov
(bad)
call
pusha
dec
mov
push
and
pop
mov
jnp
add
in
push
mov
les
dec
add
les
push
push
or
aam
call
sbb
lods
jmp
std
pop
mov
cmps
sub
cmp
out
or
mov
stc
inc
aad
and
xor
cmp
cmc
ss
jne
pop
push
fcom
jmp
and
inc
sbb
scas
push
cmp
into
psubsb
call
inc
mov
inc
sub
inc
sar
loop
in
adc
mov
xchg
test
loopne
retf
cs
inc
loope
pop
pop
imul
push
in
mov
out
mov
xor
loope
adc
out
ror
arpl
add
scas
xchg
inc
jecxz
inc
int3
pop
fs
call
scas
adc
or
(bad)
push
cmp
imul
xor
popf
daa
inc
xchg
dec
pushf
pop
mov
sbb
scas
mov
loope
outs
xchg
mov
pop
add
call
cmp
daa
int3
aam
add
and
sbb
cmp
or
inc
lahf
dec
jmp
xor
push
xor
test
sbb
xchg
jne
jecxz
inc
movs
rcr
jo
cmp
rol
push
cld
(bad)
jae
and
and
stos
pop
inc
jnp
pop
test
pop
sbb
mov
add
outs
les
mov
pop
iret
add
push
call
(bad)
mov
je
push
outs
scas
sbb
std
fdiv
pop
mov
push
arpl
scas
out
inc
adc
cmp
sub
pop
rcl
in
fdivr
stc
push
sub
pop
cmps
adc
out
sbb
inc
mov
adc
(bad)
jge
loop
cmp
ds
and
in
addr16
mov
aad
(bad)
push
jle
mov
inc
ds
and
dec
cmp
mov
mov
test
ja
dec
cld
mov
add
jns
xchg
inc
or
or
dec
les
cdq
cwde
push
test
cmp
ins
out
fwait
or
add
jl
sbb
outs
fs
push
iret
ss
and
test
push
mov
into
hlt
movs
in
test
nop
xor
(bad)
mov
aad
jl
or
pop
add
inc
aas
scas
mov
jmp
movs
out
xor
mov
jb
pop
lea
and
loopne
xchg
mov
movs
in
call
mov
test
imul
scas
dec
xor
gs
fsubp
jle
jl
xchg
and
out
mov
jle
lock
aad
(bad)
imul
ret
dec
(bad)
mov
es
lea
mov
jmp
fcmovnb
pop
mov
mul
enter
mov
cmp
xor
xchg
stos
out
call
adc
pop
jle
mov
mov
jmp
pop
repnz
push
mov
repnz
adc
push
pop
or
pop
sub
(bad)
xlat
adc
jp
mov
fst
fwait
es
pop
mov
adc
inc
cmp
pop
shr
pop
dec
xchg
into
adc
mov
ret
dec
pop
stc
cmp
ins
gs
std
cmp
ins
popa
outs
cmps
push
mov
(bad)
cld
cmps
mov
adc
je
inc
test
mov
jle
das
leave
cmp
sbb
cld
shl
test
pop
cwde
or
sub
add
cs
daa
mov
dec
mov
jnp
call
lods
test
cmp
int
dec
cli
cwde
jp
inc
xor
mov
and
dec
mov
lea
aas
push
xchg
inc
jmp
add
sub
jno
jmp
movs
das
ins
(bad)
sar
out
mov
xchg
add
(bad)
mov
aam
push
cmps
add
push
push
js
lods
int3
shr
xchg
bound
xor
jnp
les
arpl
arpl
popa
mov
cmp
enter
sti
pop
and
and
(bad)
out
cmc
push
in
add
mov
ret
adc
cmp
enter
test
call
mov
stos
xchg
xor
mov
dec
lahf
fmul
movs
jecxz
frstor
xchg
mov
lods
(bad)
fcomi
and
aam
or
pushf
sub
xchg
inc
xchg
jmp
add
mov
sub
inc
scas
ss
add
inc
inc
cmps
mov
jnp
and
fld
mov
push
push
inc
jecxz
pop
jbe
pop
jno
pusha
add
fldenv
pop
jb
leave
adc
pop
inc
repz
les
cmp
in
or
ja
ds
pop
out
test
sbb
inc
push
inc
adc
ret
shl
popf
add
lds
leave
int3
and
mov
fiadd
xor
dec
(bad)
jmp
sbb
mov
inc
push
mov
jmp
and
sbb
pushfw
pop
mov
das
push
loopne
pcmpeqb
pop
and
mov
push
adc
sbb
dec
aad
data16
out
loope
jecxz
add
js
je
lahf
iret
pop
adc
dec
add
push
mov
jmp
mov
dec
in
les
mov
fcom
mov
call
retf
add
retf
xor
pop
add
push
cmp
inc
out
sahf
add
je
or
icebp
xchg
adc
psrld
loop
ror
mov
mov
cmp
(bad)
sbb
lods
sbb
dec
enter
rcl
adc
xor
lock
cmp
das
dec
popf
mov
shl
and
mov
push
push
fisttp
jmp
xlat
repnz
scas
pusha
inc
or
ins
adc
test
sahf
xchg
es
inc
in
pop
xor
push
mov
imul
loopne
sub
mov
call
mov
out
or
sar
ins
jne
enter
outs
add
lods
xor
das
push
adc
or
and
mov
xchg
mov
popa
je
inc
repz
out
pop
pusha
ret
into
enter
push
(bad)
into
pusha
adc
test
mov
ds
push
mul
call
and
cdq
ds
shl
(bad)
mov
mov
test
jg
jnp
dec
inc
push
pop
sub
pop
or
jnp
push
jle
xchg
fnstsw
ss
and
popa
mov
ja
mov
dec
popf
xlat
mov
mov
inc
push
lds
sbb
and
das
adc
int
es
xchg
sbb
dec
add
pop
cmps
xchg
sbb
inc
pop
xchg
ins
je
or
add
jne
stc
lock
cmp
div
out
xchg
clc
adc
mov
push
pop
mov
sub
mov
xor
outs
push
pop
(bad)
push
pop
cmps
xor
scas
dec
dec
sti
iret
dec
push
cmc
and
pop
inc
and
jmp
adc
addr16
(bad)
out
fmul
mov
pop
shl
sub
cs
bndstx
pop
test
iret
jne
ret
adc
pop
sub
mov
inc
scas
jmp
cdq
mov
and
dec
sahf
mov
or
in
push
mov
jmp
ins
mov
mov
sub
test
sub
jbe
mov
mov
lds
add
mov
call
jecxz
sar
fadd
mov
scas
and
dec
mov
sub
nop
push
jae
in
imul
mov
das
mov
aaa
jge
ret
cmc
xchg
sbb
cmps
call
in
daa
call
push
cdq
jae
jae
stos
add
xor
pop
sub
mov
jo
mov
in
mov
mov
fs
jno
add
cmc
mov
inc
loopne
test
mov
in
cmps
adc
imul
out
pop
cmps
or
pop
pushf
or
sbb
adc
cmp
pop
xchg
xchg
mov
fnstsw
pop
push
dec
push
jno
sub
lahf
jecxz
xchg
std
cmovl
xchg
icebp
(bad)
inc
push
jg
popa
(bad)
mov
pop
stos
mov
nop
mov
sti
mov
ds
mov
loopne
xchg
sub
int
push
gs
ror
mov
test
sbb
fisubr
adc
lods
dec
(bad)
aam
jnp
and
adc
cmp
rcr
push
in
sbb
mov
test
pop
fld
push
inc
and
adc
lods
sbb
int3
jecxz
clc
inc
in
cmp
dec
bound
mov
dec
mov
add
retf
cs
adc
mov
mov
or
adc
xlat
xchg
dec
push
(bad)
lock
ins
int3
enter
jae
in
int
dec
dec
ja
out
mov
iret
cli
aaa
add
xchg
mov
mov
add
mov
mov
pop
lods
mov
ret
pop
stos
ror
and
es
cmp
dec
xchg
out
push
cmp
jno
dec
and
inc
cmp
and
add
mov
(bad)
cwde
sbb
ja
out
pop
jmp
or
fcom
mov
out
jmp
lea
(bad)
sub
sbb
aas
scas
test
sbb
out
sti
sti
fbstp
repz
stc
mov
push
push
dec
test
fimul
and
int
adc
pop
sub
push
adc
lock
sub
jb
out
(bad)
mov
mov
push
icebp
lea
jo
mov
push
fimul
clc
mov
icebp
xlat
xchg
cmp
pop
loop
aam
hlt
mov
or
jl
push
push
rcr
(bad)
scas
cmp
call
dec
sbb
pop
and
jle
xchg
test
popf
popf
inc
cmps
retf
dec
test
mov
xchg
daa
add
mov
cmp
stos
pop
jns
scas
cmps
outs
(bad)
sub
xchg
not
cmp
inc
add
pop
test
fstp
sbb
inc
das
out
add
mov
sbb
rcl
and
pop
and
and
das
pop
ret
fmul
icebp
pop
ror
inc
into
adc
and
adc
adc
rcr
xchg
jo
loope
mov
mov
jmp
shr
sub
stos
fmul
inc
ret
jmp
popa
fdiv
addr16
cmp
enter
out
fcmovnu
and
cmp
cmp
repnz
dec
invd
int
out
inc
int3
adc
js
jmp
scas
inc
pushf
or
(bad)
mov
cmp
test
scas
xchg
mov
push
xor
push
ins
pushf
push
call
dec
cmp
xchg
leave
push
inc
fwait
sub
sbb
gs
dec
test
aaa
scas
clc
and
mov
jns
(bad)
jp
jno
add
shl
int3
dec
imul
and
cdq
sub
sbb
retf
test
and
fucom
loope
sbb
arpl
call
out
(bad)
or
out
jns
scas
fist
sbb
cmp
rol
pusha
inc
(bad)
xor
mov
pop
rol
or
jl
addr16
jmp
aaa
or
(bad)
jge
jp
mov
mov
push
aam
ins
or
(bad)
adc
dec
dec
in
and
mov
push
fs
popf
retf
xchg
fwait
xchg
cmp
test
mov
ins
xchg
mov
addr16
sbb
pop
call
sbb
mov
cdq
leave
sub
fidivr
hlt
and
(bad)
neg
jmp
inc
shl
rol
jno
icebp
enter
xchg
sub
and
add
jle
push
fcomp
test
ins
cld
outs
xchg
mov
nop
icebp
sub
iret
mov
xor
jle
call
ss
rcr
mov
fld
bnd
ins
inc
fs
mov
and
push
sbb
and
call
mov
jg
mov
xchg
and
ret
pop
in
push
cmps
xchg
(bad)
cmp
imul
sub
jo
pop
je
sahf
in
mov
jecxz
fcmovne
fiadd
ret
in
dec
in
int3
push
mov
push
cli
jmp
cmp
push
mov
dec
push
cdq
or
ins
sbb
adc
daa
clc
in
push
mov
repz
addr16
and
popa
popa
lahf
movs
adc
push
repz
sti
jl
loope
ror
mov
push
pop
sbb
jns
cmps
(bad)
iret
lds
ret
das
enter
sub
xor
mov
xor
inc
ret
xchg
jae
sbb
jnp
mov
sar
adc
and
inc
call
or
aam
jmp
icebp
bound
xor
and
add
fwait
cdq
nop
out
mov
test
addr16
in
cmp
pop
mov
shl
dec
lods
leave
sti
mov
pop
inc
call
movs
jno
pop
sbb
mov
xchg
cmp
out
ror
lahf
pushf
call
add
stos
xchg
or
pop
inc
cmp
sti
cmp
push
test
aaa
call
movs
mov
and
in
sbb
add
ss
lods
imul
mov
clc
sbb
jno
mov
fs
addr16
fsubr
fdivr
jne
xchg
mov
add
hlt
cmp
loope
xor
mov
sub
scas
sub
cmp
dec
or
repz
aam
mov
mov
out
xor
cmp
sahf
in
popa
jp
cli
adc
xor
(bad)
mov
xchg
lods
or
test
out
push
leave
sbb
retf
add
inc
dec
jo
or
mov
mov
loopne
fist
add
push
sub
jne
rcl
ret
aam
push
inc
(bad)
mov
cmp
sub
dec
jmp
mov
ins
xor
test
or
call
adc
cli
dec
sub
popf
push
push
jbe
(bad)
jecxz
sbb
sar
imul
cdq
fs
cmp
das
outs
retf
lahf
gs
cmp
dec
xor
leave
cmp
inc
push
fnop
pop
mov
add
push
mov
jmp
mov
dec
fucom
jmp
and
xchg
adc
push
out
jecxz
inc
hlt
cli
mov
fcomp
lods
sar
push
imul
ret
rol
or
in
loopne
add
test
stos
cdq
cmp
dec
pshufw
pop
xor
loopne
loopne
scas
cmc
mov
sub
push
push
ret
hlt
lock
inc
pop
mov
adc
stc
iret
jnp
cmp
daa
dec
or
sbb
xor
jb
in
add
(bad)
mov
mov
mov
mov
xor
fcom
je
cmc
and
inc
cwde
xchg
test
pop
ror
pop
test
mov
fwait
xchg
cmp
cmp
adc
rdmsr
mov
je
sbb
test
retf
and
ja
add
add
ins
mov
ret
mov
test
cmc
movs
jle
jle
sub
pop
(bad)
mov
pop
jl
push
cdq
mov
push
dec
xor
push
push
aad
aas
jbe
ret
ret
neg
push
ret
pop
cmp
std
xchg
push
sbb
xchg
sub
jecxz
push
ret
dec
aam
jne
jmpw
fcomi
sbb
push
cmc
in
test
js
fdiv
fsubr
test
sti
in
or
aas
xor
test
push
pop
int
div
push
ja
clc
repz
bound
jmp
fwait
int
xlat
fwait
pop
and
test
cmp
pop
fst
xor
cmp
sub
test
xchg
adc
push
push
sbb
pop
dec
and
(bad)
hlt
and
ret
dec
retf
push
sti
std
sbb
outs
mov
repz
arpl
bound
sbb
clc
add
test
inc
int3
clc
mov
add
sub
ret
sbb
push
ss
mov
neg
scas
mov
loope
sar
pop
lds
push
add
pop
add
adc
jnp
outs
aam
xchg
sbb
cmp
(bad)
popa
test
inc
daa
test
(bad)
jbe
cmp
pop
cmps
xor
add
and
test
push
ja
pop
mov
sub
xchg
jno
pushf
fisub
test
mov
inc
cmp
add
es
ss
pop
mov
cmc
xchg
movs
xchg
mov
push
fcomp
aaa
mov
lds
xchg
cmp
dec
retf
push
imul
lock
mov
pop
dec
icebp
std
adc
cmps
leave
adc
or
retf
push
into
and
mov
hlt
xor
dec
jmp
push
add
xor
popa
push
(bad)
es
mov
mov
(bad)
jg
cmp
lock
inc
mov
sbb
lea
jmp
jns
xchg
lea
bnd
sbb
bound
mov
push
int
sub
(bad)
ins
jo
pop
cmps
dec
cmp
adc
sbb
jae
or
rcl
je
jle
fiadd
stc
and
je
cdq
lds
sbb
jmp
dec
sub
sbb
and
lea
xor
mov
sbb
lods
retf
sub
cdq
mov
bsr
mov
mov
in
push
mov
addr16
adc
or
mov
sbb
into
inc
pop
or
iret
inc
in
daa
lahf
(bad)
mov
ffreep
aam
xchg
mov
or
add
xor
sti
loope
adc
clc
lea
hlt
pop
ja
mov
lea
movs
cs
pop
loopne
sub
or
rcl
mov
outs
push
dec
je
push
jle
or
cmp
repz
fs
(bad)
sbb
fwait
push
in
daa
jmp
mov
into
jle
fsub
and
daa
mov
arpl
pop
addr16
mov
mov
or
pop
sar
aas
scas
dec
(bad)
test
mov
inc
cld
mov
mov
xchg
cmp
mov
add
enter
pop
mov
arpl
sub
jg
mov
jbe
movs
imul
xchg
fst
xor
stos
aad
dec
daa
inc
cs
mov
fucomip
jmp
jno
outs
mov
test
cmp
aaa
or
pop
or
sub
js
out
sub
call
xor
lods
push
fnsave
or
(bad)
sbb
hlt
jle
aad
xor
pop
aaa
push
or
pop
cs
push
shl
mov
xor
test
jl
das
int3
fldenv
cmp
dec
loop
mov
loop
loopne
inc
mov
xor
adc
imul
xchg
into
xchg
push
sub
outs
(bad)
shl
mov
xchg
jnp
cmp
iret
xchg
add
xor
mul
mov
or
mov
jle
cmp
pop
test
mov
add
jecxz
fist
lds
pop
(bad)
les
pop
push
mov
jecxz
clc
adc
lds
jl
cdq
push
dec
es
adc
xchg
outs
mov
pop
inc
movd
ja
mov
sbb
in
sbb
or
pop
imul
fnstenv
xchg
fstp
loope
sub
pop
aaa
repz
push
xchg
push
ror
fstp
mov
out
xchg
pop
stc
push
int
push
mov
mov
ins
adc
sub
pop
ss
call
inc
push
mov
and
cmps
cmp
or
or
pop
inc
jmp
mov
(bad)
addr16
push
xor
adc
fstp
mov
into
call
xor
mov
fs
mov
cdq
adc
std
mov
test
mov
sub
dec
and
pop
cmc
fstp
in
imul
ins
int3
jb
(bad)
fucomp
aaa
aas
pusha
test
dec
dec
mov
jne
push
lock
ret
hlt
imul
and
xlat
jo
mov
ss
adc
sti
ret
cmp
xor
dec
add
cmc
pop
call
(bad)
(bad)
(bad)
xor
cmps
cli
icebp
pushf
inc
clc
mov
out
sbb
and
out
pop
shl
push
jmp
ins
int
(bad)
shl
xor
repnz
in
push
inc
inc
dec
vorps
fadd
add
inc
inc
fnstcw
pop
sti
adc
out
and
push
fimul
and
mov
pop
xchg
sub
adc
dec
test
jmp
nop
push
xlat
mov
jecxz
test
lea
mov
sbb
movs
sbb
pop
mov
imul
mov
pop
bound
xor
and
rcr
mov
push
loope
popf
xchg
arpl
add
mov
add
test
sbb
scas
inc
ds
fdiv
sti
sti
dec
mov
inc
mov
adc
lea
dec
cmp
mov
fs
add
add
mov
popf
pop
adc
(bad)
mov
mov
sub
jmp
fild
in
pop
jmp
jbe
pop
mov
popf
jl
adc
cdq
push
cs
std
xchg
and
and
mov
xlat
icebp
cmp
and
xor
(bad)
lods
pop
jns
jmp
out
inc
or
fwait
mov
or
(bad)
cmps
push
mov
scas
in
add
retf
mov
stc
sbb
sbb
les
data16
in
ins
(bad)
lds
dec
es
xchg
out
adc
mov
cmp
or
mov
and
in
push
push
xor
loopne
dec
in
adc
inc
mov
test
jecxz
adc
xchg
in
lods
in
shr
and
cmp
jmp
mov
adc
xor
not
push
mov
xchg
nop
pop
cmp
lea
add
or
movs
pop
adc
in
out
xchg
arpl
lahf
stc
pop
cmps
cld
retf
out
push
adc
xlat
and
imul
xchg
sbb
ja
jp
adc
pop
jae
fistp
pushf
jg
cdq
adc
repz
add
mov
rol
mov
push
pop
sahf
xor
dec
mov
pop
fbstp
dec
jbe
inc
out
ins
mov
(bad)
or
leave
fs
data16
and
ds
adc
or
in
test
gs
xor
jb
fsubr
dec
inc
cmp
jecxz
xchg
out
out
xchg
cmp
add
retf
out
aaa
inc
jl
stc
mov
retf
or
mov
jmp
addr16
jno
gs
imul
mov
stc
push
xor
xor
push
adc
dec
ror
outs
pushf
xchg
out
xor
cwde
sub
je
push
cdq
fcmovu
test
push
xor
add
jmp
add
sbb
push
scas
cmc
push
enter
jle
mov
into
imul
nop
out
ficom
add
xlat
daa
sti
jmp
dec
mov
mov
scas
mov
pop
or
xchg
out
adc
test
dec
popa
push
mov
jl
arpl
enter
arpl
test
jmp
out
sbb
pop
adc
xchg
icebp
and
rcr
jnp
repz
retf
xchg
loop
aad
mov
sub
imul
popa
inc
das
inc
sar
pop
idiv
rol
in
f2xm1
jmp
push
xchg
mov
sub
aas
jg
push
call
add
cs
pusha
inc
inc
mov
lea
(bad)
sbb
cwde
xchg
adc
sub
xchg
mov
retf
dec
rol
iret
(bad)
jae
scas
ds
sbb
test
push
shl
inc
or
or
mov
or
sub
push
imul
cdq
sub
test
cmc
add
fisub
dec
add
movs
mov
sub
popa
and
inc
in
adc
sub
and
jb
div
mov
loope
popf
xchg
stos
mov
fcomi
aas
xacquire
in
scas
or
pop
cmp
cld
sub
cld
sbb
pop
cdq
(bad)
call
xchg
lods
imul
add
jmp
popf
jg
scas
rcl
imul
jp
adc
pop
retf
and
mov
mov
or
xchg
push
sub
in
mov
pop
fcomp
mov
fs
fwait
shr
mov
push
xor
lds
xchg
push
lea
push
fwait
int3
xor
xchg
popf
addr16
jbe
aad
cmp
fdivrp
out
pop
jne
pop
sbb
outs
jo
and
jno
add
mov
lock
cmp
mov
daa
scas
push
enter
in
(bad)
outs
and
mov
sti
sbb
add
fisub
mov
jns
iret
out
xor
dec
jg
mov
sbb
popa
or
dec
xor
fistp
fimul
out
pop
aaa
mov
ss
adc
fbstp
cmps
sub
fistp
pop
pop
ret
pop
xor
jmp
push
call
xlat
(bad)
retf
int3
push
sub
repz
arpl
cmp
mov
or
jno
and
cs
daa
sbb
push
adc
mov
mov
sub
jo
loopne
xchg
icebp
mov
cmp
into
push
push
dec
mov
gs
pop
push
xchg
cmp
jne
push
push
or
lods
ud0
xor
pop
imul
clc
pop
xchg
call
fwait
mov
adc
xor
repnz
mov
int
in
test
sub
shl
mov
mov
shl
stos
loopne
mov
les
xor
pop
sbb
inc
cs
jne
lods
lods
or
jbe
or
lock
cmp
loope
pop
ss
je
(bad)
sub
loope
jns
push
ins
mov
cmps
xor
cdq
jg
fcmovbe
repz
jno
dec
jge
in
bound
mov
(bad)
xor
movs
mov
test
sbb
push
ret
xchg
xchg
jns
cmc
fstp
inc
jge
adc
in
lahf
pop
dec
icebp
fwait
je
and
or
out
xor
sti
mov
mov
inc
lea
or
ja
xor
(bad)
(bad)
inc
bound
jnp
(bad)
dec
pop
test
mov
jmp
cmc
cmps
xor
push
xchg
dec
ret
jmp
imul
pop
pop
and
and
scas
inc
mov
daa
jl
sub
rcr
loop
(bad)
int3
inc
std
pop
fsubr
sbb
pusha
jae
mov
stos
test
or
mov
dec
mov
mov
add
test
test
cmp
or
dec
lock
jl
ins
xor
mov
fidivr
or
fsubr
lods
or
lods
xchg
addr16
pop
xchg
xchg
jne
fwait
loop
xor
push
sub
addr16
cmc
cmps
fild
shl
idiv
jno
xor
and
add
cmps
xor
ja
mov
sbb
and
loope
dec
sbb
aad
dec
mov
pop
pop
and
js
dec
test
xchg
push
pop
xor
and
add
xchg
cmp
rol
mov
repnz
cmp
sahf
inc
pmaxub
xlat
pop
and
cmp
aad
in
cmps
loop
xor
jo
sbb
sub
stc
jno
es
xor
inc
inc
loope
adc
mov
pop
sbb
aaa
retf
sti
test
mov
xchg
mov
pop
xchg
mov
mov
retf
jno
push
xor
mov
adc
stc
repnz
stos
sub
sbb
ret
or
and
dec
lea
pop
pop
lods
retf
xchg
popa
push
lahf
(bad)
jmp
dec
fcmovu
popa
shr
dec
iret
out
add
jmp
jbe
popa
sub
retf
inc
jno
stos
dec
add
mov
pop
push
ficom
sub
aad
or
ss
dec
fist
js
div
xchg
addr16
inc
test
jns
(bad)
rcl
cmp
push
stos
mov
and
std
test
adc
gs
cli
sub
jb
push
jmp
and
data16
pop
rcl
je
(bad)
inc
sub
clc
pop
pop
outs
xchg
push
test
push
pop
clc
inc
repz
mov
retf
(bad)
leave
mov
dec
(bad)
shl
cmp
sbb
pop
or
clc
lock
(bad)
push
inc
movs
pop
enter
add
mov
lock
add
movs
lods
aam
or
dec
sbb
sbb
mov
stos
xor
out
loope
jmp
jbe
pop
cmp
mov
push
add
bound
or
and
jbe
(bad)
in
bound
dec
push
mov
nop
add
adc
jae
ja
push
push
std
sbb
outs
inc
mov
push
inc
shr
(bad)
xor
shl
out
jbe
add
mov
mov
mov
jecxz
add
lock
sbb
jmp
mov
pop
jne
dec
fsub
and
fstp
inc
scas
scas
retf
gs
popa
lods
out
fimul
in
pop
aad
in
xchg
mov
push
dec
jns
jge
neg
pusha
hlt
repnz
sub
into
xchg
frstor
xlat
cmp
jne
fistp
and
push
cmp
jge
or
jp
pop
xlat
iret
aas
jp
dec
js
add
(bad)
cdq
int
push
pop
in
dec
loopne
ret
movs
lahf
repz
dec
adc
jle
scas
and
mov
sbb
je
xor
int
fldenv
mov
dec
in
shl
jne
adc
inc
adc
lods
jmp
fisub
cmc
add
mov
repnz
mov
sbb
in
jne
jle
jne
fsubr
int
mov
adc
rsm
xchg
cli
xor
jnp
es
scas
inc
repnz
rcr
sub
xchg
stos
fst
loop
outs
add
mov
mov
adc
dec
fistp
cmp
xchg
out
mov
cs
data16
adc
cmp
inc
retf
jecxz
sti
jb
add
dec
clc
movs
les
retf
out
wrmsr
or
adc
sub
shl
sub
jecxz
dec
out
ds
in
(bad)
fwait
xchg
es
das
cmp
xchg
cmp
mov
idiv
ins
push
sub
xlat
sub
add
std
xchg
lock
sbb
mov
mov
add
outs
and
mov
sbb
or
shl
pop
dec
jp
jle
mov
cmc
jmp
add
leave
out
inc
xchg
mov
(bad)
push
stos
fs
ret
mov
cmp
(bad)
pop
fnstcw
xchg
jne
aam
cmp
jno
mov
(bad)
push
pop
outs
ror
cli
clc
pop
sub
stos
pop
cmp
jg
lods
mov
scas
cwde
cmps
test
mov
nop
stos
leave
shr
jbe
dec
retf
mov
jp
mov
xchg
mov
mov
(bad)
cmp
clc
xor
sbb
loope
loop
(bad)
jg
das
dec
rcl
stos
jg
xchg
call
adc
push
mov
cmp
push
lods
lods
jg
shrd
aas
imul
aas
lds
test
aam
fcomp
pop
in
inc
sub
loop
xor
add
xchg
xchg
ret
stos
mov
xor
sbb
mov
and
pop
cmp
xchg
dec
push
xchg
addr16
(bad)
sub
push
inc
pop
adc
push
cdq
aad
mov
ret
mov
mov
mov
mov
xlat
and
xor
(bad)
xchg
xchg
and
test
pop
add
mov
enter
xlat
push
push
push
inc
cwde
inc
jl
xor
pop
jae
test
adc
arpl
cs
dec
sub
ja
int
aas
leave
sbb
cs
rcl
xchg
jle
js
adc
push
call
into
jmp
pop
push
adc
dec
jp
in
adc
xor
pop
mov
adc
sbb
arpl
jo
fdivrp
cmps
jl
mov
test
push
mov
bound
aad
std
outs
jge
shl
add
xlat
ins
ficom
test
adc
mov
push
pusha
lds
out
cmp
sub
mov
and
call
addr16
popf
pop
jae
add
scas
adc
sbb
and
xlat
dec
(bad)
jae
xor
scas
and
mov
(bad)
mov
xchg
sub
out
aad
sbb
rcl
xchg
and
pop
jmp
out
inc
mov
xchg
popf
out
jecxz
mov
mov
push
mov
test
dec
mul
xor
jbe
ins
lods
nop
arpl
jl
out
outs
dec
dec
(bad)
imul
pusha
xchg
stc
cs
imul
push
out
enter
jbe
add
or
sub
repz
inc
sub
pop
and
add
enter
test
fist
adc
stos
mov
daa
add
out
xor
mov
lods
mov
dec
add
pop
lods
sbb
loope
xlat
cmp
jmp
mov
add
clc
xor
fild
add
(bad)
dec
xor
jnp
xchg
(bad)
fcmovnu
rol
pushf
arpl
out
test
dec
push
hlt
mov
mov
jmp
bound
ficom
repnz
xlat
pop
adc
mov
jb
pop
(bad)
lock
neg
shl
aas
xor
push
mov
cmp
inc
adc
frstor
out
xor
jl
xor
and
push
scas
push
lds
in
cmp
cmps
xchg
or
cli
sbb
mov
sub
in
in
adc
dec
fstp
test
dec
into
cwde
outs
xlat
add
pop
leave
in
mov
jns
ror
xor
mov
mov
sbb
dec
mov
mov
ret
pop
fs
jp
or
add
adc
lea
aaa
sti
mov
adc
inc
leave
ss
cwde
add
jbe
loopne
lds
jg
retf
push
mov
and
fwait
icebp
mov
mov
adc
jne
nop
mov
mov
xchg
dec
mov
sub
lds
pop
mov
xor
out
dec
xchg
inc
mov
push
call
and
mov
push
rcl
es
das
into
pusha
movs
push
xchg
xchg
aam
inc
test
stos
mov
cmp
js
and
inc
push
jl
jl
dec
dec
fs
shr
icebp
(bad)
test
test
inc
pop
jbe
cwde
test
int
es
dec
sbb
retf
jmp
es
shl
mov
mov
scas
movs
fimul
fadd
jne
pop
adc
jp
test
scas
ja
push
dec
test
lods
(bad)
fstp
mov
push
cli
std
inc
lock
retf
sub
mov
xor
jl
xor
fs
cmp
js
rcr
add
enter
ins
and
xchg
and
dec
pop
loop
call
pop
lock
add
loop
sbb
pop
imul
retf
ss
repnz
aam
in
ins
add
addr16
jecxz
(bad)
jb
out
call
sbb
imul
mov
xchg
push
xchg
lea
pop
ss
mov
pop
push
out
inc
cmc
imul
ja
test
lock
in
(bad)
pop
mov
shl
lea
push
xchg
xor
lods
js
xchg
dec
fmul
sbb
fimul
(bad)
inc
lea
inc
cmp
enter
cwde
iret
cmp
lods
enter
cmp
mov
adc
ret
adc
dec
xchg
cmc
nop
fs
inc
test
je
and
std
mov
jge
jne
cwde
(bad)
pop
jp
push
dec
ret
mov
fisubr
jno
les
add
mov
push
js
test
neg
mov
jnp
rcl
mov
fs
and
add
fimul
and
popf
arpl
and
sbb
mov
cmp
fdivr
mov
gs
cmp
cmc
xchg
test
mov
(bad)
push
mov
pop
add
rol
fs
clc
call
jns
pop
inc
fisubr
dec
xchg
push
clc
and
out
sbb
addr16
inc
mov
fidiv
leave
add
sub
ss
dec
jg
push
inc
ja
ins
movs
aas
xchg
mov
jge
test
add
sbb
sbb
gs
jl
fincstp
daa
cmp
mov
pop
cld
or
jmp
scas
adc
gs
fcmovnbe
cmp
stos
cmp
out
jl
cmps
scas
or
pop
fcomip
pop
lock
and
imul
icebp
js
and
and
test
xor
and
les
xor
sahf
xlat
mov
adc
jecxz
sub
pop
call
lahf
imul
pop
lods
(bad)
mov
jne
movs
mov
jb
popf
or
popf
add
sbb
dec
cmp
ja
mov
push
mov
outs
pop
xchg
shr
add
pusha
mov
out
cmps
cli
mov
pop
sub
mov
loopne
cmc
punpcklbw
aad
out
jmp
mov
cmc
mov
test
ins
call
jecxz
adc
dec
push
jno
(bad)
and
dec
push
pop
popa
inc
in
inc
fdiv
retf
pop
jae
jecxz
xor
into
mov
inc
lods
xor
cmp
push
inc
mov
adc
jns
out
rol
push
icebp
ja
jg
(bad)
cld
or
les
test
inc
out
pop
xor
sub
(bad)
lds
in
add
mov
mov
inc
or
(bad)
ss
xchg
pavgw
aam
push
ret
ss
in
and
push
ja
xor
(bad)
push
cmp
loope
(bad)
jp
jb
scas
mov
outs
pop
jmp
dec
jle
push
mov
push
scas
push
sbb
call
int3
shl
jns
cld
or
mov
ja
push
(bad)
xchg
das
pusha
jecxz
xchg
inc
sbb
inc
(bad)
shl
jae
xor
or
outs
pop
loop
cs
inc
xchg
je
in
mov
mov
(bad)
imul
add
inc
stos
xchg
mov
loopne
(bad)
sub
sbb
or
sti
mov
dec
push
jno
not
loop
sti
mov
jge
loopne
ins
mov
loop
pop
adc
sub
push
push
xchg
test
jo
ret
cmp
(bad)
iret
test
vpshufhw
cmps
jmp
int
xor
xchg
repnz
or
push
movs
mov
ins
call
sbb
mov
call
cmc
and
mov
dec
idiv
mov
dec
and
mov
mov
sub
and
jmp
fwait
mov
mov
cmp
ficomp
sub
popa
inc
rcr
lea
pop
mov
mov
je
sbb
mov
mov
dec
sar
loope
mov
fs
stos
add
stc
jae
mov
in
retf
outs
mov
cmp
in
retf
add
das
and
mov
mov
ds
sbb
adc
cmp
pop
fwait
push
ret
adc
adc
lods
scas
fldenv
and
xchg
scas
leave
nop
jle
or
sub
mov
int3
cmps
or
xchg
cmp
xchg
sbb
scas
test
mov
mov
jmp
(bad)
sub
sub
rol
mov
cdq
inc
mov
inc
mov
mov
sar
cs
add
pop
pop
test
mov
mov
xor
xor
pop
dec
adc
push
sbb
pop
push
and
repnz
jno
je
adc
sbb
ins
xor
frstor
add
jl
test
push
and
call
push
stos
dec
adc
push
movd
mov
jmp
popf
cmp
push
and
pusha
pushf
pop
or
ins
mov
xchg
push
lahf
arpl
sub
xor
fnstsw
sub
arpl
sub
loop
mov
(bad)
mov
lock
in
js
push
push
and
mov
sub
add
mov
lock
inc
call
cmp
aad
das
mov
pusha
xor
mov
ds
inc
cs
outs
stos
mov
icebp
push
repz
loope
imul
mov
inc
cmps
mov
mov
cmps
popf
int3
jmp
jae
and
mov
sub
ror
sar
(bad)
mov
jge
inc
sub
push
or
xchg
shl
xor
fimul
cmp
ret
mov
lods
div
mov
or
mov
dec
loope
sub
call
movs
ja
and
in
in
stos
repz
arpl
movs
mov
ror
out
ret
fnstsw
cmps
pop
adc
popa
in
dec
mov
cmp
stos
xor
dec
repz
dec
ins
jl
lods
adc
ss
pop
jns
jp
(bad)
cdq
repz
retf
std
add
int
repz
push
jmp
jns
xchg
in
inc
adc
jg
fs
xchg
ss
ins
xchg
adc
sahf
xor
mov
lock
bound
and
scas
push
fistp
cmc
aas
pop
jno
xchg
cmp
jmp
jmp
daa
call
movs
gs
pop
mov
or
sahf
sbb
aaa
xor
pusha
add
mov
icebp
stos
sbb
ror
mov
cmc
and
out
mov
sub
(bad)
jno
dec
daa
inc
dec
fistp
out
jmp
(bad)
sub
scas
inc
jne
cmp
dec
fmul
mov
ins
push
sbb
adc
ss
xchg
loopne
out
stc
xchg
arpl
adc
mov
jae
inc
dec
push
sub
jb
aad
pop
jne
call
xor
inc
in
fsub
push
sbb
jp
sub
in
cwde
pusha
lods
call
ret
adc
ja
int
jg
mov
addr16
sbb
clc
and
and
fadd
sbb
stos
inc
push
mov
xlat
sub
mov
cmps
mov
xchg
and
imul
retf
fnsave
mov
and
imul
sub
bound
js
inc
(bad)
mov
mov
aaa
(bad)
in
jp
fldenv
js
adc
imul
adc
mov
inc
outs
or
sti
in
sub
add
(bad)
or
mov
cmp
(bad)
push
nop
mov
inc
jae
cld
jle
(bad)
mov
adc
lahf
imul
jmp
std
mov
aam
(bad)
aaa
test
fist
mov
repnz
in
add
add
and
mov
inc
cmc
movs
je
or
inc
jp
pop
into
add
inc
sbb
xor
jmp
mov
enter
push
stc
add
mov
add
ins
push
jb
clc
inc
das
shl
fstp
retf
stc
scas
dec
mov
jmp
fs
push
inc
push
pop
add
dec
mov
add
push
inc
popf
jmp
jmp
xchg
cs
sub
mov
leave
cmp
or
stos
out
or
pop
mov
mov
xor
out
pop
out
sbb
push
(bad)
fnstcw
inc
fbld
mov
add
rcr
fadd
inc
pop
jmp
out
int3
fisttp
mov
dec
sub
sbb
daa
stos
pop
int3
and
ret
push
jecxz
fld
sbb
repnz
pop
pushf
xor
pop
sahf
inc
and
sbb
pop
cmp
push
xchg
jl
push
lea
push
cmp
aad
out
sub
pop
push
sub
push
bound
or
iret
jmp
push
push
add
adc
std
pop
cwde
mov
movs
pop
(bad)
mov
movs
mov
rol
fild
xor
lods
mov
je
(bad)
stc
inc
imul
imul
cmp
push
cmp
xchg
push
sub
jne
fsubr
sub
add
fcom
mov
push
mov
jns
cli
adc
push
ja
stos
daa
scas
test
mov
not
scas
mov
xor
inc
push
mov
xor
pop
nop
sub
mov
fs
jae
and
shl
mov
lock
fdivr
mov
je
sbb
retf
pushf
add
sub
cmp
mov
or
dec
push
int3
fs
fsub
inc
scas
sub
fild
into
je
(bad)
stos
and
mov
imul
les
cmp
ror
mov
xor
into
fisub
loope
cmc
add
aad
pop
add
cmp
arpl
in
je
jp
inc
xchg
ja
sub
jne
sub
mov
sub
and
cmp
push
mov
je
outs
jo
and
adc
push
nop
shl
jecxz
mov
jmp
mov
imul
lock
inc
sub
imul
pop
je
push
(bad)
movs
xchg
fiadd
sbb
mov
and
lock
and
rep
push
call
test
not
inc
cmc
push
pop
push
add
xchg
and
mov
jae
or
sub
aam
cwde
das
cli
adc
xchg
sbb
jae
add
ret
stos
pusha
outs
shl
loop
xchg
scas
loop
lods
xchg
cmp
mov
xor
in
dec
xor
push
bound
sahf
and
fstp
add
int3
stos
mov
push
sub
or
mov
sub
test
pop
in
in
fwait
out
mov
add
sbb
mov
sbb
jecxz
in
test
mov
cmc
mov
shl
jecxz
rep
xchg
sti
jg
inc
or
mov
or
xor
pop
dec
out
popf
push
sti
xchg
mov
xchg
fimul
loope
lods
sbb
loope
stos
xchg
jno
xchg
fwait
nop
retf
mov
or
(bad)
ds
jecxz
test
pop
sub
mov
ret
sub
mov
pop
aad
mov
xor
push
test
jb
lods
enter
mov
add
cmp
call
in
and
xchg
pop
movs
adc
cmp
out
dec
or
fadd
sub
mov
sbb
scas
sti
sbb
xchg
xchg
(bad)
int3
fisubr
sub
out
outs
punpckhdq
leave
or
inc
sbb
sub
mov
mov
mov
in
aam
sbb
aas
(bad)
mov
mov
push
xchg
js
cwde
popf
cs
inc
data16
addr16
jl
fnsave
imul
jmp
push
int3
outs
dec
inc
add
cmp
or
popa
stos
mov
retf
stos
adc
jne
(bad)
cmc
call
inc
sbb
cmps
add
mov
or
sbb
and
js
mov
inc
dec
or
shl
or
jno
adc
(bad)
(bad)
mov
adc
fucom
adc
out
jmp
pop
mov
sub
adc
push
shl
ja
add
push
getsec
(bad)
test
dec
mov
mov
lock
pop
stc
nop
retf
rol
or
add
scas
push
xchg
cs
xor
sbb
mov
outs
push
fst
add
pop
fisub
and
sub
mov
jno
xor
mov
sbb
movs
xor
(bad)
loopne
shr
adc
sub
mov
or
mov
jmp
cmp
mov
pop
mov
shr
icebp
scas
push
cmp
test
pop
mov
(bad)
or
loop
test
aad
repz
out
mov
cs
xchg
push
out
stos
push
pop
mov
cwde
fiadd
in
xchg
push
pushf
popa
xchg
cmp
pop
dec
(bad)
imul
push
imul
xor
fidivr
push
add
adc
add
lea
nop
dec
leave
mov
out
or
and
jne
mov
pop
hlt
jle
xchg
scas
dec
cmp
rol
mov
sub
sub
xor
lods
dec
fcomp
arpl
xchg
pop
dec
cwde
rcr
xchg
shl
je
and
cmps
ret
xchg
dec
bound
maskmovq
mul
and
mov
hlt
pop
mov
xchg
call
std
push
repz
or
aas
jne
xor
test
xchg
mov
std
pop
mov
mov
jb
popa
rcl
imul
pop
out
sahf
push
jge
data16
xchg
mov
dec
loop
or
push
or
gs
in
cmp
out
inc
cmc
xor
inc
jecxz
pop
call
mov
inc
inc
push
xchg
xlat
add
dec
adc
ins
inc
dec
jmp
jecxz
cmp
or
lea
mov
pop
mov
ror
fdivr
dec
in
call
xchg
call
cmp
scas
jb
mov
xchg
in
push
out
out
mov
dec
mov
test
push
or
idiv
add
(bad)
and
or
or
push
push
mov
ret
es
jnp
mov
add
or
cmps
call
stos
xor
sub
in
(bad)
lahf
xchg
jmp
call
rcr
pop
fistp
leave
jnp
sub
cld
test
mov
xor
sub
ins
in
dec
fild
retf
call
fimul
jne
clc
shl
dec
dec
cld
push
inc
push
jmp
or
cmp
xchg
sbb
test
add
(bad)
mov
mov
pop
(bad)
stos
stos
scas
data16
icebp
inc
inc
add
out
dec
xor
jno
int3
repz
cmps
cli
xor
cmp
inc
movs
sub
(bad)
xor
and
xchg
xchg
lea
xchg
jo
adc
(bad)
aad
and
scas
lock
mov
sbb
xor
sti
stos
in
lods
sbb
mov
push
dec
and
pop
mov
xchg
xor
inc
out
mov
shr
cwde
inc
jmp
mov
sbb
outs
repnz
call
stos
sbb
or
pushf
movs
pop
stos
scas
mov
jbe
(bad)
sub
aad
icebp
mul
jg
cmp
adc
ss
sbb
adc
sbb
cmps
jnp
or
retf
pushf
sar
dec
das
test
popa
test
adc
clc
outs
hlt
iret
inc
test
xchg
jnp
push
xor
jg
les
push
(bad)
in
ds
or
into
ins
fstp
mov
mov
sub
ret
retf
lods
out
retf
jo
mov
xor
or
mov
into
cmp
mov
jmp
stos
xchg
push
outs
shr
push
imul
push
cld
mov
adc
jmp
ins
sbb
hlt
mul
jl
mov
xor
add
aaa
cli
jmp
fistp
mov
sbb
lahf
and
dec
imul
mov
push
add
sbb
push
lock
push
test
inc
jne
test
xchg
adc
pop
fwait
push
jecxz
push
bnd
xlat
pop
jge
icebp
and
imul
(bad)
je
inc
aam
jge
popf
dec
mov
xlat
cmp
push
icebp
data16
(bad)
sub
test
test
jge
mov
mov
pop
(bad)
fld
jae
data16
lods
fs
and
push
rcl
add
rcl
dec
jmp
fstp
inc
sbb
pop
sub
movs
jl
arpl
out
int3
push
loop
ret
mov
(bad)
stc
push
test
and
xor
xchg
xchg
sbb
xor
push
pop
push
sar
jae
adc
sahf
clc
mov
dec
dec
xor
mov
das
xchg
mov
ror
xor
add
inc
add
sub
imul
icebp
rcr
cmps
or
and
movs
cmp
mov
cs
jno
pop
cwde
(bad)
scas
fldcw
push
cmp
pop
loopne
loope
stc
sub
retf
outs
jmp
push
jo
jmp
addr16
outs
add
loope
and
push
sbb
je
push
fisttp
push
jnp
jmp
push
cmp
or
imul
sbb
jno
mov
int
daa
xor
xor
push
(bad)
and
xor
sbb
dec
push
mov
adc
in
loop
fcom
pushf
dec
jne
sar
and
push
ins
mov
and
mov
xor
retw
pop
mov
push
mov
dec
ret
cmps
fs
out
shl
outs
ds
jbe
adc
ret
out
adc
mov
arpl
push
pop
sub
pop
ret
in
lds
xlat
fstp
sub
scas
dec
push
and
push
jae
mov
cmp
sub
test
add
add
icebp
jl
hlt
mov
xchg
adc
lods
and
aas
push
jo
or
cmps
lock
aam
jnp
xchg
into
fmul
jnp
dec
inc
sub
inc
or
aad
ss
dec
not
xor
dec
int
(bad)
fisttp
mov
add
mov
in
jb
fist
push
cmps
jmp
lods
fwait
add
dec
shr
add
jnp
rcl
jb
xchg
dec
mov
sti
push
int3
ins
add
mov
xor
push
jmp
jnp
out
pop
call
lds
out
xor
aaa
and
(bad)
jae
test
pop
loop
mov
sub
jmp
pop
call
hlt
xchg
fadd
clc
lea
fsub
or
bnd
mov
pop
ss
and
push
lea
mov
adc
lea
aam
cmps
cli
push
stos
jnp
test
jg
test
mov
push
and
fcom
test
sar
lahf
popf
(bad)
mov
xchg
and
mov
and
repz
mov
and
mov
addr16
and
retf
push
jae
jp
sub
inc
or
cmp
adc
and
outs
mov
push
mov
es
and
push
dec
sub
rcr
(bad)
(bad)
add
mov
outs
les
clc
mov
scas
jg
jecxz
and
retf
(bad)
fisttp
pextrw
or
addr16
lock
jp
ror
rcr
shl
sub
into
std
cs
adc
or
in
pop
push
call
popf
rcl
aad
sbb
pop
in
rcl
fbld
fwait
movs
cld
jbe
fstp
xchg
movs
fcom
sbb
sbb
imul
fnsave
in
or
sbb
sahf
jns
dec
out
mov
or
inc
push
push
icebp
push
inc
cmps
ror
jb
pop
jmp
sub
jmp
dec
add
or
movs
lock
mov
jmp
test
arpl
push
(bad)
(bad)
or
push
mov
mov
mov
inc
cmc
xchg
xchg
jl
cmp
xor
int3
inc
push
sub
and
in
inc
xchg
adc
cmps
movs
sub
cs
mov
or
dec
push
leave
sbb
inc
lea
retf
fwait
dec
ins
jmp
stos
out
call
(bad)
not
adc
(bad)
imul
cli
daa
jge
je
loope
bswap
push
pop
mov
inc
jle
push
shl
xchg
dec
dec
push
mov
call
cmp
jle
jp
scas
cs
sbb
ds
fdiv
mov
inc
mov
pop
cmps
out
sub
ret
dec
(bad)
push
mov
daa
mov
adc
gs
mov
jmp
popa
jno
push
xor
mov
(bad)
ror
cmp
cmp
cmp
mov
sbb
or
adc
fsubr
xor
sti
sub
into
adc
jg
sub
cmp
inc
cmps
imul
aas
div
neg
or
leave
mov
lods
mov
xchg
fldenv
fsub
xor
or
jmp
mov
or
pop
pop
outs
(bad)
lahf
fidiv
test
in
cmc
rcr
mov
ja
shr
lds
push
sti
dec
xchg
cmps
pop
mov
imul
push
cdq
lea
push
loop
test
(bad)
aad
jb
sbb
gs
lock
clc
retf
jb
setae
and
je
sub
adc
jmp
cwde
fxam
(bad)
out
pop
out
out
add
sbb
cmp
push
fbstp
gs
in
out
add
in
(bad)
outs
xchg
sub
cmps
mov
mov
daa
fcmovnu
les
sbb
add
in
jae
retf
into
cmp
adc
mov
(bad)
push
jae
push
push
inc
cmc
shr
setg
or
into
fninit
mov
lods
clc
ret
retf
int3
and
inc
enter
cdq
repz
ror
loope
jge
std
inc
addr16
xor
or
push
les
and
out
jle
pop
es
mov
rcr
jmp
mov
fcom
inc
cmp
js
dec
sbb
rol
or
pop
popf
js
inc
fidiv
jbe
mov
aam
aam
(bad)
cmp
shl
or
or
and
test
xchg
jmp
outs
mov
cmp
or
and
out
or
hlt
and
popa
stos
dec
mov
add
pop
inc
pop
mov
xchg
jp
mov
jl
shl
sbb
leave
xchg
xor
pop
lods
pop
mov
xchg
movs
pop
mov
pop
adc
outs
loopne
cmp
xchg
in
mov
inc
or
(bad)
int
pop
loope
mov
inc
shr
pop
es
xor
sbb
jb
jno
dec
scas
test
sub
or
sbb
or
fild
or
dec
into
push
int
jo
ins
mov
daa
and
jp
push
adc
and
movs
inc
inc
jmp
cmp
sbb
mov
mov
mov
xchg
mov
popf
sbb
cld
pop
add
jmp
(bad)
jnp
push
pop
repz
sbb
push
cdq
rcr
loopne
mov
pop
pop
lods
jb
xchg
in
inc
ds
jg
repnz
pop
mov
mov
pop
cmp
pop
sub
xchg
mov
add
fiadd
icebp
mov
(bad)
imul
in
rcr
mov
in
call
stos
jmp
inc
in
cdq
or
cwde
mov
xor
lds
std
cmp
or
inc
out
dec
popf
xchg
dec
movs
mov
mov
cmp
adc
aas
not
call
fdiv
test
int3
outs
aas
inc
mov
adc
xchg
dec
mov
leave
(bad)
push
ja
imul
and
inc
popf
mov
dec
daa
mov
jno
xor
gs
idiv
pop
or
xor
cmc
mov
ins
xor
pop
push
dec
int
sti
loope
mov
sbb
add
leave
mov
mov
pmulhuw
pop
mov
sbb
jno
jmp
or
adc
pop
sar
pusha
loopne
outs
xchg
jl
pop
push
push
inc
mov
sub
cmps
aaa
sahf
js
loop
ss
mov
imul
push
cld
in
rcr
lock
in
out
mul
or
inc
sbb
jle
adc
mov
(bad)
aaa
sub
and
sub
adc
mov
adc
pop
jne
sub
and
xor
xor
ds
fcom
jecxz
push
mov
cmp
xchg
out
fidivr
and
xor
mov
jge
cmp
fmul
pop
or
loope
fstp
pop
popf
inc
into
jecxz
retf
ins
jbe
fsub
popa
jbe
es
jg
cmp
add
(bad)
sbb
sub
cmps
dec
aas
ins
stos
test
(bad)
pop
add
sti
push
outs
xchg
ja
(bad)
fimul
hlt
and
inc
and
(bad)
dec
jmp
xchg
jmp
adc
mov
push
push
bound
es
and
xlat
inc
fldenv
push
ja
test
ss
xlat
(bad)
or
jmp
test
outs
(bad)
sub
pop
and
cmp
mov
fisub
out
mov
sbb
scas
xchg
rol
data16
fistp
jg
push
push
loopne
sbb
add
into
outs
sar
ror
mov
in
sbb
std
sub
pop
or
xchg
repz
add
call
mov
lods
lock
dec
cdq
dec
inc
std
push
adc
(bad)
or
fcomp
mov
cs
dec
sbb
test
and
mov
xor
js
or
mov
pop
inc
inc
es
xor
add
pop
or
jmp
retf
scas
stos
sahf
mov
out
xor
mov
out
inc
or
mov
ffreep
adc
add
inc
lea
(bad)
xor
cmp
mov
jmp
cmp
inc
pusha
pusha
xchg
imul
mov
mov
mov
icebp
push
dec
add
dec
add
test
pop
test
push
cmps
pop
ror
mov
bound
les
ds
and
fsub
in
in
or
cmc
xchg
shr
jle
hlt
repnz
push
xchg
std
sub
xchg
movs
daa
jecxz
cwde
add
xchg
pop
cmp
adc
or
test
jae
sti
mov
fcom
dec
mov
jno
lods
es
dec
daa
ret
inc
sub
sbb
add
retf
mov
jns
(bad)
shl
xor
add
shl
push
mov
cmp
out
inc
das
sub
lahf
or
cmc
movs
je
rcl
pushf
jmp
sub
jno
hlt
scas
dec
xor
mov
stos
fwait
xor
jmp
xor
movs
jbe
or
jecxz
leave
call
in
adc
rcr
adc
icebp
adc
mov
xchg
arpl
inc
lea
mov
popa
add
xor
int3
add
dec
add
test
rol
cmp
add
jge
(bad)
and
inc
cmp
idiv
addr16
jb
push
mov
imul
ds
xchg
jge
cli
(bad)
jno
sub
add
mov
(bad)
outs
mov
mov
push
xchg
xchg
test
int3
lds
mov
sbb
cmp
jmp
or
xor
sub
ds
push
je
mov
jae
cwde
add
(bad)
sub
sub
jge
adc
sbb
or
ss
out
cs
iret
cmc
inc
ficomp
shld
dec
lods
mov
dec
jg
mov
outs
data16
cmp
xchg
not
cmps
(bad)
cmp
cld
(bad)
xchg
aaa
xor
ds
xor
sub
push
dec
repz
outs
and
in
cdq
mov
pop
adc
mov
push
lods
std
jmp
jb
jp
rcl
test
pop
not
ret
add
leave
shl
ds
xor
daa
cmps
jnp
push
stc
xor
adc
lds
and
push
add
sbb
adc
pop
sti
es
stc
push
xchg
cdq
mov
pop
pop
xor
ss
lods
out
xchg
retf
mov
push
add
and
bound
pop
mov
rcr
stos
int
inc
mov
scas
mov
lock
mov
mov
xchg
fcmovnu
push
pop
push
and
hlt
ins
sbb
iret
into
ins
(bad)
cmp
call
xchg
jmp
mov
pop
jmp
je
xor
ja
mov
pop
repz
leave
sbb
lock
xchg
adc
shr
cmovns
lock
ror
jno
push
sbb
sahf
in
mov
adc
cmp
dec
or
stos
inc
mov
ret
loope
jne
dec
sub
cmps
mov
and
aad
(bad)
and
jo
lock
push
shr
cmp
mov
test
stos
cmp
pop
xchg
dec
ficomp
not
xor
rol
loop
pop
push
mov
jge
mov
sub
out
leave
repz
mov
sbb
(bad)
lahf
mov
rol
mov
add
or
mov
(bad)
lods
rol
aaa
aam
clc
push
jmp
xchg
xchg
out
hlt
pop
jge
push
popf
mov
popa
mov
adc
arpl
and
fsubr
jo
inc
mov
pop
push
cmps
pop
call
je
ja
lds
test
es
and
cwde
(bad)
out
mov
ret
data16
clc
mov
jbe
add
jae
pop
dec
xchg
sbb
outs
mov
mov
sub
dec
mov
inc
add
mov
mov
out
rcr
xlat
(bad)
jecxz
loopne
and
mov
sub
jle
xor
xor
dec
pop
scas
lods
sbb
into
sbb
rcr
cmp
push
cdq
push
pop
sbb
push
lock
daa
aad
fst
sub
pop
jns
dec
lds
out
sahf
push
les
mov
sub
inc
movs
movs
scas
dec
and
mov
mov
adc
jmp
pushf
jnp
test
popa
jno
push
mov
cmc
test
adc
ja
xor
xchg
rcl
push
aad
push
fcmovu
inc
out
jecxz
dec
sbb
arpl
jno
mov
pop
add
jns
push
repnz
out
out
(bad)
mov
enter
push
sbb
sub
push
fisubr
pusha
in
push
sub
and
jbe
push
cs
sbb
lds
or
xchg
mov
mov
cli
pop
push
cmp
neg
adc
loop
mov
imul
adc
sub
push
xor
sbb
out
dec
hlt
imul
loope
lock
cmps
mov
popf
xor
xchg
mov
mov
sub
movs
enter
pop
mov
shr
cmps
cmp
out
inc
in
jb
cmp
(bad)
sub
push
(bad)
cld
and
and
sbb
mov
outs
in
mov
fwait
cmp
pop
and
fnstcw
mov
outs
pop
sbb
xor
sbb
push
and
jbe
sbb
pop
mov
xchg
out
adc
out
xor
cwde
ja
out
push
in
dec
sub
fwait
xchg
sahf
jnp
sub
js
in
call
pop
or
sbb
arpl
aam
mov
jmp
imul
pop
add
lods
lods
clc
push
jle
fisubr
ror
cmp
in
adc
or
xchg
(bad)
mov
pop
ret
and
std
bound
push
jnp
xchg
movs
cmps
dec
push
shr
call
std
bound
pusha
mov
and
adc
(bad)
jae
pop
dec
add
push
jnp
cmps
jp
cmc
adc
mov
inc
mov
pop
xor
clc
into
adc
dec
mov
inc
test
sbb
and
(bad)
jno
mov
enter
fsubr
fist
in
fdiv
xor
sbb
cmp
test
cmps
jnp
jge
inc
xchg
shr
stos
push
rol
movs
mov
(bad)
jae
sub
and
aam
fimul
adc
nop
div
popf
inc
cs
push
ins
fld
movs
es
dec
and
ds
in
xor
jne
lock
rcr
out
and
inc
ja
push
dec
sbb
aas
xlat
call
push
add
test
cmp
and
mov
push
sub
pop
xor
cmp
lock
rcl
fcom
mov
cmc
and
add
push
nop
pop
in
call
lahf
adc
and
pop
inc
adc
cmps
popf
ret
pop
rcl
test
cmp
aad
repz
rol
adc
xor
arpl
pushf
idiv
xor
or
add
or
jne
pop
mov
mov
ret
addr16
push
mov
and
lods
les
aad
rcr
into
call
retf
sub
inc
add
inc
push
pop
scas
sbb
push
and
lea
dec
fimul
outs
sub
or
fldcw
cmps
sbb
push
das
repz
xchg
mov
jns
pop
bound
jle
mov
push
aad
int3
sbb
and
ja
mov
test
(bad)
or
push
cld
lahf
inc
and
int3
ds
aas
ins
dec
es
cmp
push
push
data16
adc
in
add
mov
xchg
xor
and
mov
sub
pop
fisttp
push
pop
mov
(bad)
imul
push
popf
in
jecxz
add
jns
mov
mov
xor
gs
push
dec
cmp
push
sbb
(bad)
cli
cvtdq2ps
jmp
fcmovnbe
mov
add
dec
jae
sbb
or
mov
mov
(bad)
shl
loop
call
iret
int3
stos
jns
sub
pop
rcr
and
dec
pop
push
mov
out
jae
xchg
lods
xchg
xlat
mov
into
xchg
ds
xor
das
jnp
fsubr
out
pop
jmp
rcr
pop
xchg
ja
test
mov
sbb
or
(bad)
sub
not
jp
(bad)
xchg
aam
call
inc
rcr
mov
icebp
ffreep
and
jl
push
lahf
pushaw
inc
mov
adc
xchg
ret
hlt
test
mov
xchg
dec
ins
add
jmp
xchg
test
xchg
das
mov
or
repnz
imul
and
mov
aas
mov
cli
retf
aaa
add
inc
loop
or
rcl
je
(bad)
pop
mov
shl
xor
std
pop
in
aaa
sub
add
call
push
inc
mov
and
xchg
push
test
arpl
repz
addr16
leavew
cld
push
mov
sbb
cld
das
xchg
out
cmp
or
mov
aam
daa
xor
div
push
in
mov
repnz
cld
mov
jg
fimul
xchg
ins
xchg
lods
(bad)
adc
push
aas
adc
xor
in
inc
mov
sbb
push
imul
nop
jbe
push
lods
jb
add
inc
dec
mov
aad
pusha
mov
cld
test
sub
xchg
pop
jns
fistp
ja
scas
pop
mov
or
call
imul
mov
mov
xchg
adc
mov
xlat
adc
pop
xchg
into
pop
push
(bad)
(bad)
repz
or
shr
mov
lods
mov
or
mov
mov
ret
jbe
jge
fadd
popa
sbb
test
outs
sbb
mov
repnz
(bad)
rol
pop
xchg
lods
scas
add
jno
mov
std
lea
das
scas
xlat
call
leave
cmp
adc
push
mov
stos
and
mov
push
(bad)
dec
xor
les
stc
xchg
movs
push
mov
push
jg
nop
sbb
sahf
fwait
mov
dec
add
pusha
pop
ss
mov
shl
xor
loope
add
in
in
arpl
(bad)
inc
push
ret
mov
out
pop
or
mov
mov
add
jnp
out
aaa
push
outs
push
cmps
stos
les
fdiv
xchg
sub
retf
retf
and
int3
inc
mov
mov
out
movs
adc
pop
(bad)
pop
pop
nop
pop
fwait
ret
daa
push
retf
(bad)
aam
or
sbb
jl
adc
cmp
test
pop
shl
and
cmp
sbb
pop
dec
dec
movs
iret
and
ror
sub
adc
(bad)
mov
xchg
mov
test
imul
repz
add
xchg
add
aaa
or
(bad)
in
mov
scas
(bad)
cmp
pop
and
fcmove
fdiv
dec
jl
jmp
add
push
cdq
push
jno
ja
(bad)
xor
iret
xchg
pushf
add
fimul
jle
dec
mov
ss
pop
out
lahf
sub
sub
sbb
sti
mov
test
scas
ja
bound
xchg
ins
sbb
xor
test
pop
push
mov
adc
dec
jbe
sub
jle
scas
jl
sub
rol
or
aam
dec
cmps
out
ficom
lods
pop
adc
pop
dec
push
xor
cld
jno
ret
ret
push
lods
mov
clc
adc
dec
lods
xchg
adc
sub
mov
lods
push
push
jno
or
cmps
into
or
lahf
sub
xor
push
push
lea
push
mov
retf
mov
and
inc
mov
(bad)
ss
test
inc
xchg
push
pop
movs
push
push
fimul
or
mov
dec
mov
les
jns
dec
jecxz
lods
call
and
and
jmp
push
js
push
pop
sub
xor
aas
aaa
push
mov
pushf
cmp
xor
scas
mov
mov
dec
pusha
mov
nop
mov
xchg
sti
lahf
scas
jo
popf
inc
aas
sbb
sbb
pushw
add
jnp
cli
adc
xor
stos
xchg
sti
mov
cmc
(bad)
and
(bad)
js
add
ja
mov
and
push
or
jae
adc
es
rcl
or
or
clc
pop
or
(bad)
mov
movs
pop
mov
sub
test
sub
push
clc
mov
push
jg
out
outs
jl
pop
je
dec
add
ss
xchg
arpl
jne
sbb
jmp
pop
cld
mov
test
in
jecxz
sbb
sub
push
scas
hlt
push
gs
mov
mov
add
dec
cld
jae
pop
pop
out
je
xchg
in
fisub
jo
adc
ficom
cmps
jns
aas
or
fnstcw
and
sbb
fs
in
(bad)
push
mov
dec
pop
imul
sub
sti
sub
mov
mov
cmps
cmp
les
rcl
pop
adc
cmp
jg
dec
sbb
les
stos
sar
push
ss
fisubr
sbb
adc
adc
xor
aaa
(bad)
push
outs
adc
add
mov
(bad)
stc
xor
icebp
xor
push
popf
cmp
push
std
mov
mov
mul
inc
sub
push
in
push
xor
inc
fist
cmp
enter
lods
int
cmovl
(bad)
repnz
xchg
or
sbb
scas
pop
cwde
inc
clc
fidiv
push
sti
iret
cli
out
outs
adc
retf
(bad)
xchg
scas
rcr
cmp
pop
mov
or
inc
and
add
in
mov
aad
popf
es
jle
(bad)
jns
push
js
in
adc
jmp
mov
mov
retf
test
pop
add
pop
dec
daa
jns
setge
pop
rep
cdq
js
retf
xchg
(bad)
cmp
xor
sub
out
sub
(bad)
jl
sub
test
movs
inc
bound
or
cmp
push
push
mov
outs
in
(bad)
inc
mov
xchg
fldenv
in
lahf
push
jle
jl
movs
jge
rcl
ins
frstor
xchg
dec
dec
ds
xchg
push
int3
popa
xchg
jl
mov
iret
sub
inc
sub
pop
rol
xlat
jg
sti
add
inc
loope
or
inc
mov
cmp
ds
sti
movs
out
nop
xor
xor
pop
ret
aaa
mov
lahf
cmp
xchg
scas
arpl
retf
mov
fsub
into
dec
shl
les
add
push
rcr
pop
jle
movs
icebp
jle
rol
shr
int3
inc
scas
fwait
mov
push
jo
and
xchg
addr16
(bad)
jae
sbb
xchg
jbe
and
lods
mov
lea
pop
leave
fild
mov
jmp
and
shr
aam
adc
cmp
inc
(bad)
imul
push
mov
lea
mov
sbb
not
icebp
xchg
movs
out
push
pop
repnz
jbe
sub
stc
jno
sub
sub
pop
and
ja
dec
mov
jecxz
sbb
dec
mov
cmp
call
aad
shl
adc
cmps
xor
mov
dec
das
stc
icebp
ins
aaa
fsubrp
adc
nop
js
cdq
hlt
stos
or
jo
mov
mul
lock
into
mov
dec
xchg
jmp
mov
ror
jo
loope
adc
cmps
xor
cli
js
dec
adc
dec
cmps
and
push
stos
sub
retf
cdq
movs
fldenv
mov
xchg
sbb
or
fisub
fidivr
cmps
mov
movs
pop
sti
clc
push
inc
pop
pop
xchg
pop
jge
cmc
and
mov
sub
sub
clc
adc
push
jns
cs
ss
out
arpl
mov
or
test
mov
std
jle
or
inc
xchg
cmp
mov
(bad)
outs
sbb
cmps
pushf
dec
popa
sbb
adc
xchg
mov
sub
xor
repnz
xor
xchg
xchg
int
stc
outs
mov
jns
xchg
test
stos
adc
sbb
add
mov
mov
push
(bad)
jae
mov
rol
mov
mov
adc
out
xor
jmp
add
sbb
jne
add
jmp
inc
or
inc
push
fstp
sub
(bad)
iret
inc
out
jg
psadbw
inc
int
jb
push
mov
pushf
das
neg
adc
fidivr
mov
cmc
popf
push
sar
sbb
mov
loope
pop
pusha
pusha
mov
cld
cmps
pushf
shl
adc
fnsave
hlt
xor
and
cmps
outs
push
div
xchg
push
shl
jmp
lods
fldenv
sahf
or
push
mov
mov
repnz
xchg
loopne
popf
ins
pop
std
(bad)
xor
repnz
dec
sti
dec
(bad)
sbb
xchg
loopne
jp
aas
push
xchg
clc
loopne
outs
pushf
pop
push
imul
call
push
push
jne
out
jp
sub
mov
(bad)
das
fnstsw
(bad)
sahf
shl
sbb
daa
repz
test
xchg
pusha
das
retf
ror
mov
call
cmps
jae
dec
stos
mov
pushf
movs
pop
bound
pop
mov
add
inc
jmp
sbb
fistp
call
aas
div
add
inc
popf
add
sbb
dec
pop
fsubr
jmp
ds
test
push
and
add
into
popa
jg
xor
adc
(bad)
push
mov
sti
clc
adc
test
enter
jnp
std
retf
jl
cmps
int
aam
mov
xchg
jne
adc
xchg
(bad)
stos
xchg
and
mov
adc
add
repnz
dec
fwait
mov
lahf
les
mov
sub
add
dec
sbb
fcmovu
std
cmp
cmp
retf
gs
data16
loopne
out
mov
ret
es
mov
or
push
mov
cmp
sti
retf
sub
xor
test
and
xchg
push
mov
sbb
test
xchg
(bad)
call
in
pushf
mov
fwait
push
add
inc
jl
adc
retf
push
lahf
outs
daa
jge
rcr
(bad)
cmps
das
outs
iret
stc
cmp
cld
cmps
jp
cli
sub
lods
fisttp
or
push
push
cs
fdiv
inc
aaa
push
sub
xlat
inc
cmp
jns
mov
lds
mov
out
sbb
daa
push
std
cs
jnp
mov
stos
ds
ja
fild
js
or
mov
inc
xchg
cmp
icebp
and
stc
mov
mov
div
cwde
xchg
(bad)
cmp
xchg
scas
movs
rol
adc
push
adc
dec
cwde
mov
fisttp
add
pop
ud0
push
sbb
adc
dec
pop
out
or
push
push
and
(bad)
clc
cmp
cmp
sar
into
lods
mov
or
daa
lea
dec
cld
arpl
cmp
cmp
mov
fnstcw
xchg
sbb
cmp
frstor
cmp
fistp
cmc
pop
add
jge
pop
cwde
(bad)
pop
cli
cmps
jmp
hlt
in
out
push
mov
lods
movs
cmc
push
stc
xor
out
pop
sbb
or
leave
sbb
sub
scas
aaa
jle
push
sbb
pop
cmp
je
aas
mov
sbb
inc
adc
push
clc
rcl
mov
fucom
add
inc
sub
push
and
jg
pop
and
push
dec
pop
(bad)
add
inc
mov
mov
jbe
push
or
push
adc
pop
jp
cld
cmp
sar
shl
in
sbb
cmc
fsub
xor
add
xor
push
or
dec
push
and
adc
sti
sbb
and
mov
inc
jb
jb
adc
rcl
retf
fbstp
scas
cld
in
sahf
sub
cmps
out
fist
jnp
hlt
push
ins
push
xchg
dec
or
mov
ins
jg
inc
aas
cmp
xlat
jno
cmp
push
adc
pop
out
lods
pop
stc
nop
push
sub
sti
dec
int3
or
or
arpl
push
xor
(bad)
outs
fsub
sbb
test
std
(bad)
ins
in
shl
out
imul
out
pop
les
xchg
adc
mov
sub
cmp
icebp
lahf
adc
and
jp
stc
push
or
cmp
test
nop
add
xor
cmps
sub
adc
jb
xor
xor
popa
inc
adc
mov
test
aad
jle
cwde
lea
inc
int
mov
(bad)
jl
or
stc
pop
or
adc
xor
std
loopne
aad
push
push
mov
retf
ja
inc
lock
jb
jo
cmp
sbb
fdiv
or
add
fld
add
ds
jo
imul
jp
inc
inc
fwait
ins
jbe
sti
xor
rcr
sub
es
and
loop
mov
cdq
in
mov
and
out
mov
punpcklwd
shl
movs
test
sub
sbb
jns
shl
lods
test
ja
adc
push
repnz
jno
xchg
sub
int
popf
(bad)
push
sti
dec
mov
scas
imul
or
ror
out
mov
jl
enter
aaa
sub
in
push
test
mov
jecxz
pusha
push
ins
jns
bound
out
push
mov
aam
or
cmp
imul
and
cmp
sub
fst
sub
jl
rcl
xor
xchg
dec
call
sahf
xchg
adc
jge
test
cs
mov
pop
frstor
pop
call
out
add
inc
adc
imul
rcr
(bad)
cmp
mov
sar
ja
ret
movs
inc
or
sbb
scas
sub
mov
jo
sub
out
mov
mov
jle
loop
xor
addr16
es
push
std
(bad)
push
push
ret
cmp
cmc
xchg
dec
rcl
mov
add
lods
inc
out
out
xchg
test
sub
or
call
xor
adc
xor
loopne
adc
rcl
and
jns
sbb
imul
cmp
outs
rcl
jo
adc
pushf
jecxz
shr
mov
bound
pop
xchg
jle
mov
fxch
loope
movs
pop
mov
test
stc
fdivr
push
ins
out
std
repnz
rol
call
xor
add
stos
jnp
aaa
inc
push
fdivr
xor
gs
fwait
stos
adc
fldpi
fisubr
popf
mov
fadd
(bad)
je
in
les
fwait
xor
add
lea
sub
scas
sbb
jne
jl
pop
jnp
cmp
aas
cmp
adc
jnp
mov
pusha
movs
mov
loop
xchg
movs
jmp
iret
loopne
into
lock
jns
lock
jle
dec
and
fs
and
sub
aaa
(bad)
stos
pop
mov
(bad)
and
ret
(bad)
sbb
fimul
pop
aaa
test
xchg
movs
movups
sbb
addr16
test
mov
push
adc
test
rcr
mov
in
fdiv
sbb
push
dec
or
add
inc
dec
jle
xor
pop
int3
mov
mov
js
cmc
lds
jl
pop
jo
les
retf
jecxz
inc
mov
test
mov
in
adc
not
rcr
loop
fwait
cmc
cmp
sar
enter
mov
push
push
and
pop
pop
sbb
test
add
ror
and
sar
dec
scas
enter
in
ins
(bad)
sahf
mov
lds
dec
adc
mov
call
jmp
pusha
pop
call
aas
and
test
xor
shl
jecxz
add
ficom
push
shrd
push
and
cdq
xor
retf
cmp
jecxz
xlat
scas
xor
scas
pop
mov
jnp
fwait
add
arpl
rol
retf
(bad)
mov
mov
jns
pop
out
stc
push
loope
scas
mov
es
fidiv
add
scas
pop
dec
out
(bad)
std
stc
fld
das
dec
in
jo
test
in
gs
sbb
les
pushaw
pop
imul
ds
or
icebp
fldcw
jno
hlt
fnstenv
test
lods
fld
ins
mov
mov
dec
loope
nop
mov
into
xchg
or
push
test
xor
call
push
mov
and
mov
data16
adc
shld
addr16
test
ins
inc
cwde
inc
test
outs
inc
mov
add
mov
push
sub
xchg
mov
fsub
inc
int
push
loopne
jecxz
mov
pop
dec
push
int3
aam
cwde
and
mov
out
push
hlt
and
xor
sbb
xchg
jne
inc
add
mov
scas
icebp
mov
xor
jle
mov
or
pop
movs
stos
retf
test
(bad)
cmp
test
and
pop
xchg
aaa
sbb
dec
dec
pop
push
fisub
or
sub
sub
mov
es
xor
mov
sub
mov
or
sar
xor
fwait
aam
repnz
clc
mov
cmps
xor
dec
loopne
cld
aaa
daa
call
sbb
sub
dec
cdq
into
stos
cmp
loop
mov
cdq
dec
jno
retf
push
adc
xchg
in
out
mov
jge
jbe
jg
push
add
adc
adc
or
popa
jge
fild
into
push
stos
and
mov
push
xor
movs
and
mov
in
push
dec
adc
cld
fsubr
out
rol
xor
stos
mov
xchg
push
out
stos
sbb
jmp
mov
in
fnstsw
lods
cld
jns
xlat
dec
pop
test
push
pop
mov
fnstcw
(bad)
cdq
nop
pop
inc
jmp
int
or
xchg
addr16
lods
(bad)
dec
jno
mov
test
pop
mov
data16
out
sub
test
mov
push
pop
sub
push
mov
lea
test
shr
and
xlat
aad
sbb
fbld
cdq
ins
hlt
mov
call
fld
jl
daa
mov
pop
and
cmp
jno
or
outs
ss
pop
inc
jne
xor
sahf
mov
mov
int
pop
or
jne
mov
scas
cmps
movs
sbb
add
sbb
jl
sub
jbe
out
push
xor
jo
mov
das
int
scas
(bad)
fisub
cdq
outs
push
dec
cmp
iret
aaa
popf
cwde
les
out
and
enter
xchg
stos
fld
cs
xchg
je
inc
xlat
loop
and
retf
(bad)
ss
outs
cmp
mov
inc
jnp
dec
sbb
popf
dec
xchg
push
aam
jae
mov
inc
lods
stos
shl
dec
fisttp
push
mov
xor
test
sub
cmp
xchg
out
add
sbb
cmc
mov
aas
pop
mov
repnz
icebp
call
cld
and
mov
mov
xlat
cmps
jo
cmp
push
lea
fstp
push
mov
pop
push
pop
push
pop
les
(bad)
popa
push
clc
dec
sbb
mov
mov
in
or
loop
in
adc
int3
mov
or
hlt
dec
fdivr
cmps
scas
cmps
retf
sbb
sti
fild
mov
leave
mov
test
mov
xchg
les
iret
sti
sub
pop
xchg
fidiv
mov
test
scas
aaa
int
int
pop
xchg
dec
or
movs
mov
dec
sub
push
pop
mov
inc
stos
jmp
sahf
aam
xchg
mov
xchg
outs
iret
sub
xchg
popf
call
and
lahf
inc
mov
std
ds
mov
(bad)
mov
nop
dec
dec
or
mov
xor
dec
jno
sbb
loopne
out
or
arpl
jl
fnclex
outs
ja
push
mov
data16
sbb
movs
andnps
sub
mov
(bad)
retf
jecxz
jae
push
jne
dec
std
mov
popa
mov
jns
push
fwait
das
xchg
hlt
xchg
test
push
push
retf
mov
mov
cmp
or
adc
mov
sahf
adc
adc
jo
es
xor
add
imul
fimul
jmp
mov
xor
xor
mov
jle
fiadd
mov
dec
lds
cld
pop
push
sbb
les
cmp
fs
dec
ja
stos
and
fstp
xchg
jno
outs
call
adc
fld
mov
cmp
mov
xchg
inc
call
add
cmp
or
aaa
out
or
movs
mov
sbb
dec
add
mov
xchg
sub
mov
(bad)
gs
push
sahf
pop
jnp
or
inc
imul
mov
ret
mov
inc
cli
push
xchg
inc
cmps
ins
jge
or
xchg
sub
cmp
popa
stos
adc
call
movs
xor
test
mov
fdiv
aad
sbb
aas
mov
xor
clc
mov
leave
(bad)
fs
retf
stos
scas
mov
loope
mov
stos
arpl
les
stos
dec
imul
pop
(bad)
mov
jnp
aaa
std
dec
xchg
fs
add
cmp
xor
aas
outs
pop
ins
(bad)
push
aas
test
into
outs
(bad)
pop
out
mov
xchg
popa
jns
mov
jae
sub
xor
sbb
scas
xlat
xlat
repnz
xchg
dec
xchg
ret
cmp
(bad)
mov
xlat
idiv
push
jae
call
cs
and
add
in
test
sub
adc
stos
xlat
xlat
daa
sar
ror
addr16
mov
test
test
mov
test
and
and
je
inc
push
mov
add
xor
push
cmps
push
pop
lock
adc
fbld
pop
xchg
or
push
jns
add
sbb
repnz
dec
stos
or
adc
ror
jno
bound
aas
loopne
(bad)
pop
adc
pop
jp
ret
out
stc
pusha
cmp
(bad)
retf
add
rol
retf
mov
mov
aam
cmps
xor
adc
push
and
repnz
loopne
push
mov
mov
frstor
pushf
xchg
adc
sub
ficom
mov
adc
push
call
daa
adc
loopne
xor
popf
cs
pop
fcom
add
inc
jno
ds
fs
(bad)
outs
mov
dec
pop
fst
clc
pop
push
add
rol
or
lock
push
xchg
pop
div
mov
je
push
push
inc
add
mov
loope
dec
sbb
pop
add
(bad)
push
es
stc
ret
aad
push
inc
mov
jle
xlat
aas
enter
pop
pusha
push
mov
sbb
dec
cdq
in
mov
inc
push
jg
jb
les
pop
cmps
pop
js
aaa
(bad)
or
aas
movs
out
out
(bad)
xchg
nop
fcomp
add
sbb
je
dec
fsub
cld
outs
jmp
sbb
leave
les
(bad)
mov
inc
test
adc
cld
pop
outs
mov
pop
fiadd
sar
mov
jmp
sbb
aam
aad
jnp
push
jnp
icebp
and
fisttp
dec
cmps
push
mov
out
psraw
je
pop
rcl
hlt
jb
add
dec
ins
adc
or
inc
jo
cmp
jmp
int
xchg
in
fbld
imul
sub
loopne
outs
lods
fidiv
adc
fcomp
mov
ss
ins
inc
lods
push
fst
push
mov
add
add
push
aaa
mov
loope
sbb
add
cmc
dec
ret
push
mov
cwde
jmp
and
(bad)
retf
aas
(bad)
or
push
xor
xchg
push
inc
mov
inc
rol
stc
mov
cmp
test
jmp
loop
pop
lds
mov
test
jg
int3
movs
out
addr16
imul
mov
mov
cmp
mov
mov
pop
out
out
stos
mov
jle
add
jmp
mov
adc
sahf
shl
add
adc
pushf
test
sub
or
mov
aas
call
in
push
pop
scas
cdq
les
push
adc
or
adc
mov
jmp
lahf
addr16
shl
push
sub
pop
stos
nop
shr
adc
in
loope
cmp
das
int
jmp
cmp
dec
xor
sahf
xor
cli
lea
or
cmp
push
out
ret
rcr
push
shl
jge
pop
push
aas
mov
dec
mov
shr
(bad)
jmp
rcr
loope
pop
push
push
scas
jle
sub
ret
in
cmps
std
pop
(bad)
and
cs
jae
(bad)
cdq
iret
aas
push
test
or
(bad)
cmps
and
shl
out
mov
pop
pushf
add
push
or
shl
cld
mov
xlat
sbb
out
sbb
mov
inc
lock
je
leave
inc
jo
inc
mov
pop
retf
mov
xchg
div
cmp
shl
ficom
cli
sub
cmp
mov
adc
xchg
ins
scas
imul
out
fstp
cmp
in
cmovge
xchg
jo
shl
out
sub
icebp
dec
fwait
jne
clc
jg
xlat
push
cmp
sbb
mov
sbb
jbe
mov
out
jo
mov
or
mov
push
test
jmp
xor
in
mov
fstp
icebp
dec
jne
ins
jg
sub
cmp
dec
loopne
aaa
or
and
jns
ja
jns
inc
sbb
push
push
push
xchg
movs
or
ja
add
test
loope
mov
or
push
fldenv
pop
xchg
pop
sbb
ds
jno
add
cmp
mov
loope
add
mov
test
aaa
sbb
pushf
or
cmp
xor
mov
push
xor
push
mov
out
adc
mov
aam
call
loop
push
scas
in
add
aam
out
xchg
sbb
and
mov
push
and
aad
lea
(bad)
inc
fimul
jbe
and
pop
and
ret
jns
test
js
test
sub
and
mov
dec
inc
js
mov
push
and
or
dec
push
out
or
repnz
inc
cmc
jb
and
xor
fwait
or
(bad)
adc
ret
and
push
jmp
pop
jno
push
ror
adc
mov
movs
sbb
std
mov
sbb
jmp
mov
inc
mul
shl
adc
or
out
push
pop
or
inc
pop
pusha
pop
pop
cmp
repnz
sbb
mov
push
mov
mov
mul
cs
add
neg
and
pop
retf
cli
mov
xor
add
dec
imul
jmp
(bad)
ret
test
add
mov
push
sbb
shl
sub
adc
push
xor
fnstsw
xor
das
jnp
cmc
adc
bound
loopne
lea
xchg
loope
jle
leave
sbb
repnz
jge
sub
ins
out
cmp
mov
fcom
push
ins
out
mov
xchg
jecxz
xchg
int3
jbe
outs
aam
ret
fst
(bad)
pop
bound
pop
adc
fist
cmc
int3
popa
jge
stos
sbb
aaa
frstor
aaa
jmp
outs
mov
jp
cmp
sbb
fcomp
jbe
test
cwde
in
out
aas
rcr
not
cdq
fisub
mov
popf
inc
jmp
lock
lea
ja
hlt
cdq
iret
adc
xchg
ins
adc
add
mov
cmp
add
or
sub
aam
rol
pop
push
pop
call
jae
scas
pop
hlt
mov
mov
mov
int3
jg
pop
jmp
sbb
pop
lahf
or
add
fsubr
in
xor
sti
adc
or
mov
push
inc
or
jmp
xchg
xor
add
scas
push
xor
push
in
icebp
xor
lds
sti
es
retf
push
pop
or
icebp
dec
es
mov
cwde
pop
sub
xchg
jl
loopne
movs
mov
jge
adc
mov
pop
leave
fnstsw
aad
(bad)
push
and
add
mov
dec
ss
jmp
mov
adc
push
xor
fist
lods
inc
aad
mov
lahf
mov
dec
(bad)
ja
scas
out
repnz
xor
and
test
(bad)
(bad)
mov
fadd
mov
dec
hlt
prefetchwt1
jns
lock
leave
leave
cmc
cs
dec
xchg
adc
mov
inc
mov
scas
and
inc
ss
loopne
sbb
in
add
cmp
cmps
dec
cs
fcmovnb
cmp
mov
int
pop
push
ss
xchg
mov
or
mov
xor
sbb
out
mov
xchg
into
cwde
(bad)
(bad)
(bad)
mov
dec
jg
cmp
mov
inc
cmp
loope
sub
mov
inc
icebp
push
jecxz
mov
sti
rcr
jb
and
shl
clc
cmp
js
xlat
jmp
call
fcom
leave
sti
xor
jecxz
test
xchg
inc
or
cmp
inc
cmps
pushf
sub
sar
pusha
pop
movs
inc
fstp
add
retf
inc
and
xlat
xor
clc
sbb
push
das
pop
adc
stc
aad
dec
xchg
imul
nop
dec
rcr
gs
(bad)
ret
cmp
adc
fs
cmp
ja
adc
(bad)
pop
inc
in
js
push
aad
ins
(bad)
movs
xor
ins
hlt
pop
push
retf
or
in
iret
sbb
pop
bound
movs
ss
ja
mov
das
xor
sbb
aad
lea
sar
pop
js
mov
pop
cmps
mov
arpl
jnp
inc
lods
test
inc
jmp
or
fbld
or
pop
push
sar
and
and
sub
movs
das
adc
mov
inc
out
(bad)
jbe
sub
bound
mov
nop
push
dec
pop
jno
retf
pop
ds
mov
test
inc
cwde
adc
mov
mov
aas
push
push
jo
jp
daa
and
mov
arpl
dec
sub
and
add
push
sahf
push
push
adc
push
add
sar
ror
ins
ret
loop
cli
inc
inc
mov
jl
lahf
push
sub
add
movs
add
in
stc
mov
dec
or
stos
push
rcl
xchg
push
ins
pop
xchg
and
sub
popa
pop
cmps
lds
int3
sti
fbstp
fsub
in
(bad)
lahf
push
dec
jg
lods
dec
popa
inc
cmp
add
sti
test
fbstp
repnz
or
dec
xchg
rcl
in
loope
sbb
sbb
test
fwait
(bad)
fstp
popa
push
and
test
jmp
ja
lods
cwde
mov
scas
test
mov
push
mov
fld
xor
je
shl
jmp
dec
xor
scas
mov
ror
jno
out
and
sbb
pop
loope
ins
cli
mov
jle
imul
or
or
sbb
jmp
icebp
hlt
sar
mov
nop
mov
mov
loope
(bad)
popa
cmp
and
inc
int3
lods
jmp
jge
inc
cmc
out
lds
dec
xchg
xor
push
push
les
outs
jp
and
jae
xchg
jl
repnz
test
inc
(bad)
pop
movs
(bad)
pop
cmps
or
cld
or
pop
mov
loopne
dec
pop
cmp
fld
add
mov
leave
pop
fucomip
dec
mov
sub
inc
cmp
xor
dec
xor
xchg
inc
int3
mov
push
movs
jo
lods
add
cmps
(bad)
aam
xchg
jnp
scas
call
sbb
xchg
xor
test
sar
mov
mov
inc
loopne
jg
popa
pop
(bad)
ror
or
fistp
shl
jecxz
pxor
inc
stos
jmp
xchg
sub
add
rcr
loopne
and
fmulp
in
ret
(bad)
ds
mov
inc
pop
and
dec
dec
cdq
xor
fidiv
cdq
add
xor
mov
fiadd
(bad)
mov
xor
bound
adc
mov
pushf
mov
arpl
xlat
mov
push
pop
arpl
stos
inc
imul
loopne
mov
mov
stos
push
sbb
cdq
xlat
lahf
adc
pop
cmc
movs
cmp
int
mul
fldcw
retf
push
xor
fisub
dec
mov
hlt
adc
out
push
xor
push
inc
jns
clc
addr16
sahf
push
(bad)
das
inc
int3
and
ret
mov
out
push
push
data16
pop
mov
ret
out
xor
xor
pop
lahf
loop
mov
sbb
iret
add
ret
mov
outs
mov
cmps
xor
or
hlt
movs
cmc
ds
pop
jb
add
lock
push
lods
popa
js
(bad)
iret
and
loope
pop
or
push
xchg
mov
inc
push
push
push
sti
push
pop
test
mov
test
sub
call
int
and
imul
jp
iret
jo
lods
je
gs
xor
adc
and
fdiv
mov
test
add
or
fisttp
mov
out
sahf
jp
out
outs
jns
jl
ror
in
sbb
(bad)
repz
inc
pop
int
test
or
mov
adc
lods
out
add
jns
outs
popa
retf
mov
in
add
inc
dec
test
sub
shr
mov
xchg
ss
fwait
inc
cdq
fist
jae
inc
mov
inc
push
mov
(bad)
aam
and
scas
cmp
mov
clc
jp
fisub
jle
(bad)
cmp
and
out
mov
cmc
push
xor
dec
mov
or
push
push
and
and
push
xor
shl
inc
ds
mov
and
push
adc
cmp
sub
push
repz
sub
push
gs
adc
hlt
xlat
in
mov
sub
and
push
movs
cmp
dec
sub
cmp
scas
dec
push
cs
mov
mov
js
and
adc
mov
in
inc
int3
mov
mov
push
add
or
and
sbb
and
fisttp
cmc
push
sbb
and
add
adc
xchg
inc
(bad)
ds
cwde
xor
scas
add
inc
mov
push
scas
and
xchg
ror
mov
xchg
mov
dec
mov
leave
jl
mov
add
out
and
repnz
add
pop
mov
mov
inc
into
adc
enter
push
into
pop
sbb
jb
enter
fistp
js
add
into
add
clc
and
das
mov
xchg
pop
fisttp
mov
idiv
out
or
shl
xor
dec
xor
inc
add
mov
rcr
adc
mul
rcr
mov
movs
push
jecxz
loopne
stos
out
pop
mov
cwde
pop
movs
adc
sbb
push
push
push
and
mov
push
iret
scas
push
aaa
ss
cs
jge
mov
pop
cmp
(bad)
aas
out
xor
rcl
ret
cwde
sub
pop
gs
sbb
shr
mov
sti
out
mov
mov
call
xchg
mov
xor
jne
test
jmp
retf
lahf
loope
ds
hlt
sbb
lds
push
in
sbb
mov
call
push
jb
(bad)
adc
shr
pop
cmps
fs
lods
xchg
out
out
fwait
sub
and
test
ins
mov
popf
add
jnp
imul
jmp
or
or
adc
adc
fistp
in
cmp
cs
cmps
repz
adc
mov
fwait
repnz
dec
push
jl
mov
scas
ja
xor
push
arpl
and
sar
mov
cwde
xchg
mov
loopne
sbb
pop
or
mov
cmc
dec
pop
sar
and
(bad)
in
or
sub
sbb
cli
xchg
repnz
cmp
add
jbe
ret
inc
pop
mov
jp
clc
dec
icebp
pop
xor
int
jl
xor
mov
loope
aam
cmc
add
and
daa
cli
leave
(bad)
cli
or
inc
lea
adc
test
pop
adc
and
add
xlat
add
or
sbb
mov
inc
jns
lds
add
cmp
cmp
push
das
add
js
add
adc
push
(bad)
call
retf
push
test
push
fcom
push
(bad)
dec
pushf
cmp
push
push
add
in
out
inc
nop
xchg
fistp
or
add
test
jg
cmp
shr
std
sbb
lods
mov
jle
push
sub
or
cld
xchg
fwait
sbb
cdq
int
pusha
push
mov
push
cmp
movs
into
fcomp
or
imul
sub
mov
mov
es
stos
add
lds
xor
cmp
jle
jmp
sar
out
add
mov
sahf
jle
addr16
cs
aam
es
and
jno
adc
or
aad
sar
dec
in
jae
std
sbb
xor
addr16
and
daa
loope
mov
(bad)
cmp
lahf
push
repnz
fdiv
stos
mov
mov
pop
xchg
adc
push
repz
jmp
(bad)
xchg
fiadd
cmp
lea
adc
and
pop
sub
(bad)
jno
outs
je
cld
xor
push
and
addr16
sbb
inc
icebp
in
fcom
mov
lods
mov
jb
cmps
adc
cli
daa
out
pop
(bad)
sub
xchg
pop
call
stc
and
adc
sbb
retf
sub
(bad)
cmps
in
xchg
dec
pop
dec
sub
cwde
fst
or
lods
test
pop
js
jecxz
cwde
dec
inc
cli
out
mov
fcomp
push
enter
push
inc
pop
lock
xchg
push
cmc
jle
popf
icebp
mov
mov
movs
outs
pop
test
adc
add
das
hlt
call
inc
sbb
adc
xchg
in
pusha
jmp
stos
inc
sub
xor
dec
mov
pop
push
pop
lea
not
jge
xchg
jae
cmp
mov
add
adc
into
jne
ficom
stos
dec
inc
test
dec
and
gs
mov
mov
test
dec
sub
xchg
pop
mov
xor
mov
cmp
jmp
jecxz
jge
jl
pop
or
cdq
retf
lea
test
les
in
shl
dec
adc
ret
mov
jns
dec
dec
aas
cmp
xchg
cs
sub
aas
out
mov
hlt
shl
pop
inc
jns
push
rcl
(bad)
test
imul
mov
adc
aas
sar
imul
stos
aas
xchg
lods
sbb
cmc
cmc
outs
dec
(bad)
mov
add
dec
leave
inc
popa
fcmovnu
and
sahf
sbb
mov
push
sub
and
adc
(bad)
gs
inc
call
pop
mov
adc
(bad)
mov
mov
ins
(bad)
fmul
nop
sahf
fdiv
xchg
mov
push
repnz
lods
push
cmp
dec
cs
inc
int
push
mov
push
outs
mov
add
lock
mov
mov
icebp
xchg
(bad)
push
retf
mov
add
fwait
repnz
mov
je
and
adc
vmread
cdq
mov
xchg
or
dec
int
mov
dec
and
mov
fisub
test
inc
iret
(bad)
xor
inc
cmp
inc
push
ror
or
cmp
inc
sub
sub
jns
mov
cmp
jmp
jecxz
push
es
and
fcom
jb
cmp
jo
inc
arpl
mov
mov
popa
xchg
jmp
(bad)
repnz
cmp
or
in
mov
mov
or
inc
loope
pop
pop
popa
adc
in
les
nop
xchg
mov
sbb
mov
jecxz
add
test
lods
outs
mov
cs
mov
ret
lods
mov
and
and
das
(bad)
or
aam
xchg
sub
or
cwde
outs
pusha
sub
es
pop
data16
ss
clc
mov
iret
or
jae
xchg
jns
cmc
popf
cmc
iret
pop
inc
nop
mov
jmp
or
sbb
sahf
mov
push
xchg
mov
jle
jmp
xchg
xchg
inc
and
inc
lock
sti
push
fmul
pop
push
push
sbb
fisub
mov
dec
or
cmp
js
aaa
sub
mov
clc
mov
sub
(bad)
jl
call
push
div
pop
or
pop
rcl
mov
ins
push
sar
jae
test
pop
push
jmp
sub
enter
ins
rcl
jg
fisttp
(bad)
out
xor
into
cmp
ds
xchg
outs
mov
and
xor
inc
mov
and
cmp
sbb
pop
xchg
fadd
std
jg
mov
je
cli
mov
cld
outs
ins
xlat
leave
mov
mov
xor
test
inc
(bad)
(bad)
xchg
leave
mov
jno
ss
push
test
(bad)
in
dec
nop
pop
leave
std
repnz
not
sbb
inc
jbe
add
aas
mov
mov
in
cmp
ins
aam
jne
clc
repz
js
jne
les
mov
jmp
jo
ins
int3
in
mov
mov
cdq
(bad)
test
sub
pop
jle
mov
test
sbb
adc
loop
jge
mov
iret
stos
stc
inc
sub
aas
int3
push
(bad)
cwde
cwde
jecxz
adc
mov
shr
imul
ja
and
movs
rcl
pop
call
call
retf
aaa
pop
add
sub
cmp
cmp
aas
stos
daa
test
fistp
dec
adc
add
mov
mov
dec
mov
cwde
push
jo
mov
sar
mov
je
daa
jmp
and
jnp
xchg
jnp
(bad)
ucomiss
mov
icebp
mov
shl
ds
inc
sub
call
jge
outs
test
shr
mov
ds
int
mov
iret
adc
call
inc
cmp
rol
dec
adc
inc
push
das
movs
movs
call
jno
sub
movs
fwait
(bad)
ror
sar
or
mov
dec
gs
ror
test
or
cmp
(bad)
add
or
iret
or
or
stos
shr
addr16
(bad)
and
adc
(bad)
xor
xchg
mov
jno
pop
xchg
dec
aam
cmp
ja
hlt
mov
adc
xor
pminsw
inc
sub
je
cmp
cmp
xor
xor
je
scas
mov
mov
jo
mov
leave
neg
rol
mov
push
add
or
movs
xchg
fldenv
pop
inc
movs
int3
inc
jbe
add
pop
lods
pop
sbb
cmp
(bad)
es
mov
sub
sub
pop
cmp
sbb
enter
xor
pop
sub
into
inc
test
addr16
dec
jmp
and
xchg
mov
retf
adc
mov
out
pop
ret
(bad)
xchg
sbb
test
push
mov
retf
push
(bad)
push
bound
fsub
je
ins
sbb
jne
dec
dec
ret
push
mov
and
fyl2x
xchg
sub
das
jmp
js
in
xchg
push
mov
dec
pop
clc
nop
cmp
xor
ror
call
call
jmp
xchg
inc
mov
dec
xchg
rcr
push
sbb
xor
cmp
jbe
fbld
jno
xchg
pop
push
mov
inc
add
cmp
retf
sar
dec
es
and
scas
mov
or
add
jmp
lea
jmp
ss
call
in
pop
mov
stc
pop
cmc
repnz
push
mov
inc
test
push
iret
dec
jg
jns
fld
pop
adc
push
xchg
(bad)
jne
sahf
(bad)
and
pop
or
jno
push
loop
pop
sysenter
(bad)
sub
loopne
push
mov
int3
arpl
or
jmp
xor
xchg
je
loope
repz
outs
inc
repnz
icebp
mov
inc
sub
outs
push
test
dec
or
repnz
xchg
cmp
sbb
jb
js
push
cli
mov
stos
inc
pop
or
aas
test
imul
cld
mov
or
addr16
mov
inc
mov
loope
mov
sets
scas
add
adc
pop
add
bound
ret
and
mov
and
inc
addr16
push
jne
shr
jne
push
outs
push
aas
mov
in
xchg
jecxz
cmps
xchg
xor
sub
sub
sub
ret
retf
push
lds
cwde
dec
out
jne
xor
xchg
push
or
push
adc
inc
cmp
cmp
ja
das
xchg
ins
std
shl
aad
movs
movs
pop
retf
fdivr
inc
aas
fld
lds
mov
(bad)
inc
mov
retf
(bad)
adc
or
mov
cmp
cli
out
sbb
add
aad
sbb
add
popf
add
pop
push
pop
rcr
push
xlat
xchg
dec
and
mov
cmp
pushf
mov
cmp
pop
(bad)
mov
mov
mov
enter
scas
mov
or
pop
mov
les
push
cmps
add
test
std
ss
lds
test
push
imul
add
data16
lock
sbb
dec
fmul
popf
sbb
ins
(bad)
ret
mov
push
dec
xor
sub
pop
popa
(bad)
add
pop
cli
repz
adc
fwait
push
imul
mov
stos
sub
mov
xchg
stos
(bad)
loop
push
out
ror
movs
in
(bad)
or
retf
jae
jne
add
std
cmc
jg
sbb
sub
xchg
je
pop
inc
xchg
lods
ror
and
pop
adc
rol
inc
jmp
sub
std
push
jecxz
mov
and
xchg
and
loop
xchg
mov
xor
cli
inc
outs
mov
sahf
mov
cwde
dec
outs
shl
imul
scas
mov
je
xchg
into
imul
pusha
push
call
ins
push
cmps
adc
retf
inc
inc
shr
and
and
jns
out
popf
xchg
cmp
das
xchg
fisub
sub
adc
and
xchg
mov
das
fsubr
inc
xor
push
(bad)
mov
inc
inc
fst
mov
bound
adc
xor
xchg
xchg
stos
add
mov
aaa
imul
test
inc
or
mov
jns
dec
lods
int3
rcl
sbb
test
adc
mov
mov
xor
add
push
cli
xchg
sub
call
pop
and
(bad)
sub
sbb
push
lock
xchg
in
push
and
enter
xor
mov
xor
imul
adc
dec
mov
adc
sti
mov
fs
mov
mov
sub
hlt
pop
cs
push
test
add
jge
and
push
shl
dec
jno
adc
lock
fbstp
hlt
fcomp
fwait
scas
and
push
mul
fld
ror
pusha
loopne
adc
inc
sbb
cmp
fnstsw
mov
sbb
mov
xor
mov
in
add
jnp
jecxz
push
nop
push
inc
jmp
jbe
and
mov
jg
addr16
fwait
pop
add
sbb
jo
lea
add
aaa
mov
mov
mov
pop
leave
adc
jecxz
clc
nop
out
dec
inc
inc
arpl
iret
jecxz
(bad)
in
pop
int3
lds
and
mov
push
and
mov
push
push
push
mov
fst
mov
push
xor
xchg
jmp
jmp
push
jge
das
lods
call
fnstenv
rol
inc
pop
cs
add
mov
dec
aam
imul
int3
test
or
add
jmp
cmp
cmp
movs
in
nop
js
pop
cmp
int
mov
push
clc
aam
daa
push
call
jb
int3
mov
mov
lock
mov
push
stos
data16
icebp
xor
les
inc
(bad)
mov
test
and
repnz
out
movs
gs
(bad)
lds
loopne
pop
nop
or
xchg
in
push
shl
ins
loope
mov
inc
xlat
aas
sub
in
push
or
mov
dec
jns
cdq
push
dec
in
les
pushf
sbb
push
rcl
and
out
dec
sub
sbb
push
aam
sbb
hlt
and
jnp
mov
pop
jmp
push
add
leave
inc
sub
imul
jmp
sub
mov
repnz
jnp
cmc
mov
es
cmp
push
mul
hlt
cmp
outs
(bad)
out
push
ds
test
add
mov
aas
arpl
out
js
xor
scas
(bad)
stos
sub
in
lahf
inc
mov
movs
inc
nop
nop
nop
dec
push
sti
popa
test
dec
into
into
ins
cmp
mov
sbb
out
lahf
jle
ret
cmp
pop
pop
jo
or
test
test
call
mov
mov
(bad)
stc
mov
imul
pop
scas
addr16
cmp
pop
mov
mov
iret
and
dec
shr
pop
cmp
push
rol
push
inc
jnp
fwait
xchg
jp
inc
xor
xchg
pop
xor
jns
(bad)
jbe
adc
das
aaa
js
push
hlt
data16
popf
mov
stc
jo
mov
call
mov
arpl
xchg
add
and
fdiv
(bad)
cli
xchg
or
sub
(bad)
je
es
mov
call
test
(bad)
jo
call
sbb
and
sbb
or
aam
test
adc
mov
test
movs
or
push
adc
in
pop
mov
fisubr
xchg
outs
jecxz
and
jno
xor
dec
std
lahf
jnp
clc
scas
mov
(bad)
xlat
fldcw
push
mov
push
add
cmp
xchg
(bad)
out
xor
mov
in
jp
ins
les
mov
mov
or
xchg
cdq
adc
stos
mov
cmps
mov
retf
sti
mov
stos
jle
inc
daa
xor
mov
pop
out
adc
lock
jl
call
inc
push
pop
sub
test
xchg
repz
dec
lahf
aad
sbb
adc
in
icebp
sub
in
cld
rcl
push
adc
int
dec
fs
aam
inc
int3
test
mov
or
or
inc
fld
scas
add
into
imul
inc
(bad)
ror
aad
cmp
dec
in
(bad)
ins
jno
mov
(bad)
dec
xor
cwde
adc
sub
jae
and
sub
mov
jg
push
push
ror
sbb
fnstenv
add
cld
xchg
fs
jno
xor
mov
mov
push
dec
data16
cwde
icebp
int3
in
outs
les
xor
pop
push
xchg
(bad)
sub
leave
ins
fidivr
dec
jg
jmp
ss
test
(bad)
out
fcmovne
pop
pop
pop
xor
jmp
ror
imul
pop
pop
std
push
jge
das
mov
xchg
sbb
mov
test
(bad)
pop
jmp
inc
jno
xor
pop
ss
adc
dec
or
sbb
inc
out
ins
and
and
hlt
add
outs
jo
dec
sbb
data16
or
aaa
mov
sub
lahf
mov
retf
and
inc
mov
shr
xor
aad
inc
test
(bad)
and
sub
(bad)
(bad)
fs
push
(bad)
cld
jmp
mov
hlt
pop
in
pop
mov
mov
cld
loope
rcl
loopne
cli
lods
sbb
mov
and
xchg
call
addr16
jl
and
pop
stc
inc
push
xor
sahf
leave
push
fisubr
pop
ficom
hlt
or
and
clc
sbb
enter
or
popa
pushf
add
add
pushf
sti
ins
push
cmp
sub
or
clc
out
adc
sbb
mov
popf
cmp
(bad)
fld
mov
sub
jp
fs
add
inc
dec
(bad)
outs
stc
popf
pushf
adc
cmp
daa
lods
aad
(bad)
adc
sbb
xor
lahf
pop
iret
movs
pop
and
lahf
stc
jp
xchg
retf
push
pop
inc
(bad)
out
jae
inc
inc
adc
sbb
(bad)
sbb
mov
into
sub
xchg
pop
mov
sbb
mov
sbb
add
shr
xor
mov
mov
adc
arpl
push
add
retf
jmp
ins
jmp
mov
dec
adc
xchg
sub
ins
ins
in
cmps
mov
push
test
jb
ficomp
mov
or
add
cmp
shl
push
or
or
iret
lds
mov
push
in
into
mov
jmp
test
out
repnz
pop
jecxz
push
call
loop
xchg
(bad)
xchg
cwde
in
mov
outs
jns
jge
sbb
or
xlat
js
cmp
cmps
jmp
xchg
add
popa
inc
dec
cmp
or
sub
inc
sbb
or
push
fstp
jb
and
(bad)
mov
push
mov
daa
pop
out
inc
mov
dec
or
mov
aas
and
inc
loopne
pusha
lds
punpcklwd
inc
addr16
popa
sbb
and
jg
jecxz
cli
pop
add
pop
repz
inc
cdq
stc
loop
ja
jg
mov
xor
sub
loopne
and
jle
inc
imul
(bad)
not
cdq
mov
mov
mov
and
jmp
mov
out
out
(bad)
in
mov
jmp
pop
cld
pop
jp
sub
loope
mov
xor
idiv
(bad)
inc
gs
and
add
cld
push
(bad)
push
push
dec
dec
push
imul
push
add
in
add
repnz
(bad)
imul
adc
movs
xchg
mov
and
ret
mov
jmp
push
ins
push
sbb
xor
imul
adc
(bad)
je
inc
int3
xchg
inc
xor
int3
rol
outs
push
or
lds
retf
xchg
mov
das
push
push
sbb
add
dec
or
inc
dec
test
cmp
pusha
pop
fcom
in
sti
mov
mov
cld
pusha
pop
cmp
xchg
inc
scas
mov
(bad)
jmp
mov
sub
mov
repz
or
cld
jg
adc
stc
out
ror
call
test
jbe
cmc
ja
daa
mov
xor
push
cmp
mov
or
inc
iret
fcomp
cmp
cmp
cld
out
and
and
fadd
add
and
fcomi
push
lock
icebp
fldcw
mov
idiv
push
ins
cmps
bound
inc
in
mov
shl
sub
jmp
sub
jne
add
mov
mov
add
lds
les
repnz
xchg
(bad)
(bad)
(bad)
xchg
ja
cdq
loop
add
or
sbb
out
push
neg
sbb
gs
je
ja
dec
cli
in
adc
ins
fadd
sbb
and
lock
daa
inc
or
cmp
icebp
mov
jp
xchg
in
dec
cmp
xchg
not
cli
movs
js
lahf
rcl
loope
ret
jb
pop
lahf
mov
cmp
dec
pop
in
xor
cs
fcomp
mov
cmp
call
jno
mov
dec
(bad)
cmps
es
test
fcmove
jmp
sub
fcmovu
(bad)
xlat
das
push
adc
mov
dec
and
mov
mov
dec
push
jmp
or
add
(bad)
and
(bad)
fcom
stc
into
add
test
out
mov
(bad)
push
mov
add
sar
xor
sub
fsubr
and
inc
sbb
in
lods
test
inc
jb
lahf
dec
(bad)
mov
ret
sti
push
adc
xchg
jne
imul
dec
cmp
movs
and
jne
nop
mov
fisttp
xlat
pop
lea
clc
jmp
mov
cdq
es
add
sub
clc
dec
push
push
inc
mov
and
das
mov
in
scas
mov
leave
(bad)
push
dec
(bad)
sahf
xchg
fwait
mov
inc
cmp
imul
pop
dec
mov
adc
mov
mov
inc
ins
test
retf
or
mov
nop
fs
inc
xchg
inc
sbb
jmp
(bad)
pop
mov
mov
xchg
jb
mov
jg
aad
shl
push
imul
and
ja
add
bound
ss
xchg
xchg
add
in
cmp
inc
test
js
dec
mov
imul
xchg
stos
test
cli
xor
sub
xchg
mov
mov
pop
push
nop
jmp
push
pusha
clc
mov
adc
mov
mov
lds
mov
mov
dec
mov
stos
dec
(bad)
jno
imul
adc
or
cs
sub
les
mov
push
pusha
xor
jecxz
cwde
clc
out
ins
into
add
data16
xor
adc
mov
jg
cmps
dec
jl
xchg
sar
adc
push
in
in
cmp
pop
out
pop
sbb
enter
xor
or
push
scas
cmp
in
lahf
mov
dec
or
mov
shl
xor
jg
outs
mov
or
add
fldcw
add
xor
cmp
js
mov
cmp
pop
out
xor
in
cmps
push
cmp
and
jo
fsub
pop
dec
sub
imul
pop
gs
mov
xor
fidiv
add
inc
test
inc
loop
test
adc
add
int3
pop
and
xor
jno
pop
ds
std
lds
rcl
sti
ret
xchg
fwait
dec
inc
std
iret
sahf
fisttp
dec
pop
xchg
or
mov
scas
pop
mov
xchg
pop
(bad)
int3
cdq
arpl
jns
bound
cld
or
(bad)
shl
aam
retf
movs
lds
add
aad
add
pop
test
push
or
jae
sbb
push
scas
out
sub
push
add
pop
mov
jne
sub
lock
scas
adc
in
mov
lods
aad
ins
rcr
mov
(bad)
sar
cmp
call
leave
ins
dec
retf
and
in
neg
js
sub
mov
push
std
cmp
jg
dec
bound
int3
pop
stc
ins
xchg
loop
les
cmp
cmp
loope
ret
and
ins
js
nop
push
ret
jmp
in
(bad)
pop
loopne
not
inc
(bad)
push
pop
sbb
jl
cld
sti
stos
cmp
jle
pushf
jbe
xor
retf
aad
adc
jnp
jecxz
pop
ret
push
cmp
loopne
rcl
mov
and
and
cmc
sbb
sbb
cmps
dec
xchg
mov
xor
(bad)
dec
stc
push
add
pop
pop
and
retf
ja
mov
leave
jo
shl
jo
pop
jns
pop
shl
int
outs
xor
popf
sbb
call
aad
push
dec
scas
cmps
push
jo
xor
or
push
sbb
fdivr
icebp
lea
das
xchg
mov
lds
adc
mov
(bad)
(bad)
add
adc
aam
pop
ss
hlt
adc
pop
pop
cmp
(bad)
in
mov
mov
ja
jno
and
sbb
neg
into
ins
pushf
push
loopne
sbb
mov
mov
and
xor
popf
xor
pushf
inc
out
fs
repz
lea
jae
fwait
das
movs
cmps
stos
xchg
pop
mov
mov
jmp
imul
movs
inc
mov
push
in
push
aaa
sar
dec
test
dec
rol
mov
push
mov
adc
add
mov
stos
jmp
cmps
push
pop
aaa
jecxz
aad
mov
and
push
shl
fst
pop
and
cmp
lds
sub
mov
and
push
push
adc
fidivr
inc
mov
adc
mov
call
dec
sbb
xchg
or
repz
mov
push
shr
mov
push
and
adc
dec
sub
cmp
stos
scas
cmp
sub
(bad)
scas
lds
sub
mov
hlt
pop
or
xchg
lds
and
dec
mov
push
sbb
dec
sbb
pop
(bad)
scas
pop
cmp
cdq
mov
and
repnz
ror
adc
xchg
sub
jne
in
fdivp
pop
pop
int3
fidiv
dec
fwait
push
sbb
mov
inc
dec
add
outs
and
sbb
int
test
sbb
lock
add
lock
jmp
mov
mov
sbb
lods
popa
xor
inc
pop
xchg
lock
sub
push
xchg
test
xchg
fimul
outs
scas
dec
out
dec
aaa
push
inc
lds
xor
popa
scas
cmp
mov
or
ror
hlt
sub
inc
int3
sbb
cmp
xor
fnsave
mov
mov
add
and
xlat
mov
dec
xchg
iret
ret
(bad)
adc
(bad)
pop
sub
mov
repz
xchg
and
sbb
test
jl
retf
mov
mov
sbb
mov
in
aas
test
dec
fcomp
jge
out
mov
das
sbb
push
adc
mov
fmul
inc
shr
out
add
outs
cld
jmp
and
lods
(bad)
inc
lahf
imul
repz
xchg
inc
fs
adc
xchg
int
js
cmp
or
cmp
ins
mov
inc
or
mov
push
scas
push
outs
adc
shl
je
mov
repz
call
xor
inc
pop
outs
mov
js
sti
fs
imul
(bad)
or
ja
sub
test
sbb
out
sbb
jl
xchg
rol
outs
jmp
sub
and
stos
mov
dec
mov
sub
imul
sub
hlt
jp
hlt
mov
xchg
or
into
and
ret
mov
or
retf
mov
test
sar
sub
pop
sbb
mov
aam
dec
je
or
pop
les
addr16
pop
les
sub
mov
and
movs
popa
lods
inc
sub
pop
ins
call
in
add
push
or
ss
fadd
sar
imul
pop
les
xor
cld
push
jecxz
shl
mov
dec
inc
cdq
fwait
mov
ja
sub
in
sbb
std
add
jecxz
ret
ja
xor
ds
sub
and
cdq
inc
adc
dec
aad
xor
dec
and
pushf
or
and
mov
call
fstp
(bad)
cmc
or
or
dec
mov
and
and
dec
xchg
test
das
cmps
data16
mov
pusha
rol
xor
cmp
imul
fdiv
mov
fcmovnbe
(bad)
ds
mov
fld
and
inc
loopne
pop
mov
out
cmp
xor
xchg
vcvtss2si
jmp
jo
test
sbb
fs
cmp
xchg
in
or
cmp
enter
ret
fcomp
mov
push
dec
or
loopne
or
xchg
scas
rol
sti
outs
lds
push
cdq
ins
in
jecxz
loopne
and
pop
loope
dec
jp
push
cmps
adc
push
icebp
mov
sahf
aad
shl
push
inc
push
test
and
mov
ss
addr16
lahf
fcom
fmul
hlt
in
sti
sbb
icebp
ret
arpl
xor
(bad)
aaa
or
(bad)
mov
(bad)
inc
dec
push
xor
jnp
and
imul
test
jg
jb
add
mov
mov
in
ret
or
xchg
inc
sbb
or
add
and
fcomp
xchg
lea
sti
loope
and
adc
mov
nop
xchg
sti
lods
pop
je
adc
or
scas
test
and
jbe
mov
cli
or
adc
sub
jo
scas
or
ins
sub
ds
pop
xchg
push
cmp
mov
or
enter
jle
xchg
js
call
cwde
mov
jmp
fldz
add
xchg
lods
imul
add
cmp
(bad)
shl
mov
sub
std
add
in
loope
pop
push
push
lods
dec
xchg
in
push
xor
ins
popa
ret
shl
and
push
sar
pusha
xchg
cmc
inc
popa
adc
sahf
movs
je
cwde
test
inc
jg
add
xchg
add
or
lds
xchg
repz
test
fmul
pusha
inc
xor
cmp
sahf
mov
(bad)
cdq
mov
xor
and
xor
sbb
cwde
hlt
inc
lods
dec
out
and
out
sbb
in
sbb
push
mov
push
mov
daa
xchg
sub
call
cmps
data16
jb
shr
add
pop
sub
xchg
push
add
scas
adc
stos
addr16
test
jmp
clc
mov
add
pop
add
and
mov
inc
lods
popa
into
cmp
mov
mov
adc
mov
fstp
mov
iret
add
addr16
(bad)
int3
xchg
aam
data16
add
pop
imul
ja
movs
dec
(bad)
jmp
push
out
in
dec
xchg
ret
ror
or
add
xor
inc
or
dec
js
push
lahf
jae
jmp
xor
cmps
jg
ins
es
das
fisttp
push
es
or
int
pop
add
adc
sub
das
hlt
cmp
jmp
jo
in
out
xchg
jo
jb
pop
enter
adc
stc
sbb
outs
enter
js
push
fistp
jne
mov
sub
sub
in
xchg
jmp
arpl
sbb
jle
cmps
aam
push
cmc
(bad)
xor
cli
xor
popf
dec
retf
aam
xor
and
jno
push
sti
or
(bad)
xchg
lea
add
(bad)
(bad)
mov
lahf
imul
or
(bad)
aad
rcr
test
xchg
fistp
and
mov
daa
imul
adc
jae
add
jecxz
push
leave
sbb
rol
and
mov
test
in
and
mov
and
xor
adc
add
int
adc
cmovle
pop
outs
cmc
pop
cmp
cwde
pop
(bad)
repz
(bad)
pop
mov
and
aaa
adc
jmp
pop
mov
adc
and
push
repz
xchg
in
fs
mov
mov
add
(bad)
je
jp
or
pop
xchg
mov
xchg
lock
aas
inc
or
jecxz
(bad)
cld
pop
daa
mov
stos
mov
inc
mov
je
test
cs
std
cld
jns
pop
fs
repz
nop
and
push
popf
adc
xor
inc
push
popa
jl
push
or
dec
adc
add
je
or
adc
arpl
sbb
sbb
arpl
pop
jns
mov
(bad)
fwait
jmp
mov
retf
leave
in
mov
adc
lods
or
mov
mov
mov
ja
cs
xchg
inc
cmc
xor
imul
pop
cli
mov
pop
dec
ja
aam
outs
hlt
xor
mov
cmp
aad
outs
adc
and
and
jne
push
or
gs
bound
ss
cmp
mov
sub
repz
or
adc
in
dec
ins
sbb
repz
push
stc
aam
aam
imul
jnp
vcvtsi2sd
sahf
sub
stos
jnp
cmc
and
xlat
sbb
loop
call
mov
gs
out
jae
jne
jae
ret
xor
aam
loopne
or
aas
addr16
adc
retf
aad
test
xor
mov
inc
rol
push
sbb
les
pop
mov
jge
pusha
inc
shl
ins
push
mov
pusha
inc
lea
std
sbb
cwde
clc
xor
leave
adc
outs
mov
push
rcr
sub
daa
dec
inc
jmp
inc
hlt
dec
jge
or
or
add
mov
test
pop
retf
rcr
dec
cmps
xchg
sar
mov
add
fist
sub
dec
xchg
call
pop
dec
ror
mov
in
add
or
push
clc
sbb
sub
xor
jb
repz
dec
div
xchg
push
out
adc
mov
xchg
mov
ret
fistp
ins
retf
fnstcw
dec
adc
jae
push
sti
cmp
fmul
xchg
mov
fwait
mov
iret
div
pop
mov
shr
mov
jg
cli
xchg
lds
lock
stos
rol
mov
shl
aas
push
jns
push
cmps
mov
ins
lods
dec
lods
(bad)
in
es
imul
iret
xchg
push
sar
(bad)
and
aad
cmp
or
inc
popa
out
lods
aam
mov
sub
and
fs
adc
rcr
push
xchg
fisubr
test
data16
mov
cmp
popa
in
ret
jnp
pop
push
(bad)
std
in
aad
inc
xlat
xchg
outs
imul
mov
inc
ror
ins
pushf
pusha
aam
pop
pop
xor
in
in
repz
xchg
cwde
je
cmps
xchg
push
jecxz
cmp
or
mov
mul
xor
dec
xor
sar
jnp
loopne
mov
add
or
mov
xor
shr
adc
or
lea
fidivr
enter
fistp
cmp
adc
lods
mov
test
mov
into
mov
pusha
fdiv
movs
jbe
inc
mov
fucomi
sbb
lea
cmps
mov
stos
mov
mov
mov
or
retf
in
sahf
push
test
and
xchg
or
pop
add
or
sbb
mov
sub
sar
fsub
mov
push
nop
fst
out
add
cs
jecxz
daa
(bad)
in
jg
pop
fwait
add
xchg
in
dec
and
adc
jae
sbb
pop
sbb
jmp
cmp
in
gs
mov
jl
pop
shr
gs
mov
std
cmp
dec
xchg
leave
shl
scas
retf
iret
xor
xchg
ins
rol
inc
xor
mov
pop
in
inc
pop
mov
bound
cmp
call
cmp
mov
mov
xchg
popa
mov
inc
ins
ins
icebp
enter
call
cmp
es
push
sbb
cmp
lea
call
ret
out
mov
lods
lahf
push
iret
xchg
int3
dec
jecxz
dec
(bad)
xchg
ret
cmp
test
daa
inc
int
(bad)
xor
xor
clc
mov
jmp
jge
repnz
push
cwde
lea
push
pop
and
push
addr16
js
inc
xlat
sub
xchg
test
outs
nop
pop
dec
daa
je
mov
push
xor
push
xor
adc
add
leave
scas
call
xchg
lods
jns
or
push
call
int
addr16
inc
les
add
call
jnp
in
icebp
and
adc
jecxz
mov
mov
and
cmp
cmp
test
jmp
(bad)
cld
and
int
sub
icebp
pop
add
in
std
adc
popf
mov
or
scas
pop
jp
push
xchg
repz
fldenv
push
pushf
lahf
pop
and
jle
push
cmp
mov
retf
fdiv
stos
addr16
call
ins
xor
ficomp
mov
out
ja
sbb
fwait
and
xor
(bad)
into
cmp
cld
addr16
cmp
mov
test
in
push
mov
js
cmp
jge
cmp
cmp
inc
(bad)
data16
and
mov
jbe
outs
cmp
xor
loope
sub
add
xchg
xchg
lahf
hlt
imul
and
fmul
cmp
mov
(bad)
retf
xor
and
comiss
shr
aas
loop
dec
mov
bnd
pop
inc
cmps
push
repz
push
xchg
imul
push
cs
inc
cmps
int3
pop
cmp
int3
pop
xchg
xchg
adc
(bad)
and
div
add
pop
mov
mov
dec
add
ficom
sbb
inc
add
and
mov
push
out
xor
std
push
ins
movs
mov
fadd
dec
mov
adc
cwde
inc
psadbw
test
jge
mov
xor
jb
pop
and
dec
mov
mov
mov
fcmovbe
jmp
sar
or
jecxz
mov
ds
mov
mov
popf
xchg
iret
shl
and
bound
and
imul
push
in
ret
inc
xlat
mov
out
or
movs
push
push
cmp
add
icebp
inc
mov
or
cmps
jmp
jno
fstp
pop
inc
xchg
push
cmp
lods
mov
push
mov
pop
outs
xchg
pop
in
fucom
xchg
adc
pop
arpl
push
dec
sbb
push
xor
dec
enter
nop
repnz
jb
cli
mov
in
add
pop
add
add
int
fist
(bad)
dec
int3
sti
xchg
jo
dec
(bad)
inc
(bad)
retf
sbb
aas
and
fwait
(bad)
clc
push
out
in
cdq
jle
test
les
mov
cmp
pop
mov
xchg
pop
jecxz
sti
aaa
test
cli
outs
imul
nop
cmps
cld
aad
icebp
or
push
jbe
es
neg
pusha
mov
hlt
outs
(bad)
not
shl
adc
int3
sbb
adc
mov
mov
and
push
or
movs
add
dec
sbb
je
xchg
fldcw
imul
sbb
jne
xor
fisttp
test
xor
test
dec
test
cmp
xchg
into
les
push
retf
aas
jmp
arpl
movs
xchg
sbb
xchg
int3
add
(bad)
movs
gs
daa
outs
inc
xor
std
push
addr16
xlat
mov
xlat
fcomp
cli
retf
lds
clc
fcom
popf
ins
mov
inc
mov
push
addr16
mov
adc
ins
mov
or
add
ror
in
mov
inc
pop
cmp
loope
or
xor
enter
movs
(bad)
push
rcr
dec
cmp
sbb
mov
mov
pop
js
(bad)
fidivr
out
retf
(bad)
ins
loopne
inc
or
inc
es
mov
pop
jo
daa
sub
iret
xchg
mov
shr
jno
js
mov
popf
pop
hlt
push
or
mov
loopne
mov
mov
jb
fs
daa
loopne
adc
int3
push
repz
or
mov
fild
and
rcl
mov
mov
enter
cmp
dec
ficomp
dec
repz
dec
mov
push
pop
xchg
mov
data16
popa
clc
icebp
daa
jnp
pop
inc
jnp
mov
ss
iret
cmp
sahf
xchg
fld
stos
xor
stos
int
cmps
jmp
neg
xor
cwde
sub
sub
or
aad
(bad)
(bad)
in
ins
and
retf
jnp
(bad)
pop
popa
lea
in
xor
sub
mov
add
or
sub
das
arpl
cmp
cmp
fisubr
dec
ss
arpl
shl
jp
or
push
jb
inc
xor
dec
cmp
jg
sub
das
mov
call
inc
pop
add
(bad)
mov
daa
pop
mov
fild
retf
mov
and
add
call
mov
pop
cmp
into
xor
xlat
cli
jmp
cwde
(bad)
xor
pop
scas
mov
lahf
iret
mov
nop
mov
dec
jecxz
xlat
jno
mov
in
cs
scas
inc
ror
sbb
imul
test
lods
dec
adc
xchg
adc
jmp
call
movs
jmp
stc
rcr
in
outs
mov
mov
mov
movs
icebp
movs
les
shl
or
sahf
les
mov
packuswb
jnp
jbe
mov
add
pop
sub
push
lods
mov
or
sbb
fwait
ss
push
xchg
test
inc
mov
cmp
fcmovb
xor
push
js
and
cdq
pop
shr
cmp
xchg
mov
or
dec
mov
mov
nop
add
jae
popf
mov
push
inc
jmp
cmc
ror
outs
add
and
cdq
and
psrlq
add
rcr
xchg
ror
mov
push
xchg
push
mov
mov
or
pcmpeqw
inc
or
inc
aas
iret
jmp
test
sub
push
sbb
mov
jne
mov
push
cmp
mov
add
fstp
mov
mov
jmp
je
cmp
sbb
sbb
or
push
cmp
dec
cwde
lods
ins
dec
add
pop
sbb
adc
mov
push
cld
mov
cld
into
add
ja
or
push
mov
dec
cs
es
into
pop
arpl
repnz
jb
nop
inc
jae
sbb
pop
leave
jne
pop
cld
in
jns
outs
mov
xchg
sub
jg
ficom
repz
mov
lahf
into
jg
and
and
stos
dec
fldcw
(bad)
mov
in
xchg
adc
pop
mov
mov
push
es
arpl
lahf
mov
sub
dec
scas
cwde
mov
xor
jge
mov
push
test
xchg
mov
dec
xchg
mov
cli
ins
pop
dec
test
push
jbe
imul
push
mov
cmp
jmp
xchg
adc
pushf
iret
or
shl
jp
jno
cmp
mov
mov
mov
retf
cmp
mov
and
cmp
mov
outs
jmp
pop
enter
movs
inc
mov
sbb
mov
mov
cdq
xor
cmp
push
leave
mov
xor
cmp
mov
jno
xor
std
mov
outs
adc
pushf
outs
cmp
jle
(bad)
mov
add
jae
pop
shr
jne
and
cmp
dec
cmp
xor
pop
jno
popa
jge
fdiv
pushf
push
rcl
or
pop
cmp
push
or
xchg
xchg
cmp
stos
jno
sub
(bad)
and
call
leave
jns
ror
cmp
cld
mov
aad
mov
ja
es
mov
cmp
pop
lods
add
hlt
pop
adc
movs
or
aam
jmp
sbb
jmp
add
inc
pop
sbb
fcomp
fidivr
rep
jl
retf
sbb
retf
xlat
dec
mov
loopne
cmc
mov
sub
(bad)
lahf
pop
adc
leave
inc
les
outs
sbb
jno
adc
mov
movs
cli
sbb
(bad)
aam
push
jl
mov
out
push
fsubr
pushf
aas
ret
push
aam
fadd
popf
pop
movs
pushf
out
(bad)
jle
nop
bound
fsub
xchg
add
dec
mov
jge
xchg
sbb
sar
mov
jnp
scas
pop
shr
repnz
cld
pusha
retf
push
data16
das
xor
mov
nop
test
loope
or
adc
test
xlat
in
int3
in
stos
shl
inc
enter
shl
xchg
sub
imul
jmp
or
dec
shr
mov
adc
xor
gs
std
mov
ret
push
inc
outs
adc
es
retf
jge
fcom
popf
ror
jmp
mov
mov
shr
daa
dec
xor
movs
adc
jecxz
lods
(bad)
das
sub
add
call
jmp
and
cmps
iret
cmp
or
in
daa
lahf
xchg
lods
mov
int
lods
fistp
add
rol
mov
daa
adc
test
xchg
movs
adc
jmp
push
cs
je
pop
fcomp
adc
gs
cmp
fwait
xor
shr
mov
mov
repnz
sub
dec
inc
jp
fstp
repnz
mov
mov
fcmovne
movs
xchg
in
mov
stc
out
mov
psrlw
clc
loop
(bad)
adc
sbb
div
push
mov
add
push
in
add
and
xchg
sub
clc
inc
cmps
jge
jp
outs
xor
adc
cmp
cmp
nop
test
aad
xor
std
push
adc
jo
movs
call
sahf
shl
push
adc
jo
jle
xlat
les
stos
cmp
into
pop
and
outs
xor
jne
ret
(bad)
mov
push
push
into
add
sar
sub
pop
mov
jne
inc
enter
movs
popa
lods
mov
pop
into
pushf
out
jecxz
fsub
out
les
(bad)
std
jnp
add
pop
loop
ret
or
icebp
call
cmp
addr16
int
xor
push
lods
arpl
(bad)
cmps
inc
jecxz
xchg
add
and
push
mov
cmps
fcom
mov
xor
sbb
lahf
sbb
add
mov
call
mov
pop
bound
ds
pusha
dec
push
fsub
loop
dec
mov
sbb
cmp
fcomi
push
mov
test
mov
out
out
scas
int3
jae
out
jmp
cld
js
mov
and
jb
aam
jbe
jmp
aam
(bad)
mov
and
xor
popf
jmp
das
ret
jnp
push
inc
add
(bad)
push
addr16
sti
jmp
loopne
aam
push
lods
jae
mov
mov
ds
sbb
es
(bad)
ins
mul
dec
clc
cmps
int
(bad)
mov
cs
shl
sub
xor
sbb
xchg
lock
jo
mov
xor
xor
cmp
jle
shl
mov
aam
dec
cmp
retf
(bad)
movs
jge
jmp
stos
cmc
jle
xlat
dec
ficom
inc
mov
sub
loopne
xchg
and
xchg
pop
clc
(bad)
loopne
xchg
add
aad
mov
jmp
mov
push
and
pusha
xor
fdiv
jge
jb
outs
ret
std
dec
and
cmp
pop
leave
cdq
outs
cmp
add
inc
dec
or
and
in
push
les
or
adc
mov
and
push
adc
inc
dec
or
ret
and
scas
or
outs
jl
rcl
(bad)
lock
mov
and
adc
retf
ja
or
pop
ds
ja
je
sub
mov
mov
sbb
and
lds
and
mov
xchg
ror
sbb
mov
popa
and
pop
out
mov
sub
outs
mov
jno
mov
dec
mov
xchg
ret
out
push
mov
adc
push
sbb
repz
inc
sub
scas
pop
inc
js
loope
je
jbe
pop
gs
clc
mov
fmul
call
fistp
add
add
xchg
mov
retf
pop
inc
ror
xor
(bad)
movs
dec
jo
adc
stos
dec
loop
jle
adc
inc
jnp
mov
xchg
dec
shl
sbb
inc
dec
outs
mov
call
(bad)
not
xor
push
jle
les
aas
call
xor
add
imul
lea
and
mov
js
nop
iret
xchg
das
repz
sbb
or
retf
pop
pextrw
and
or
inc
mov
(bad)
dec
inc
pop
inc
data16
cmp
mov
movs
rol
cld
jp
and
add
xor
arpl
pop
out
sbb
jmp
ror
out
push
fild
dec
adc
adc
add
xchg
movs
jp
mov
aad
out
jle
sbb
mov
jnp
into
imul
ficomp
cwde
add
xchg
pop
dec
mov
rol
adc
sar
sbb
dec
jns
and
or
lds
ds
fsub
in
xor
ret
imul
xor
aas
lods
cmps
and
loope
pushf
dec
out
mov
cmc
push
in
ror
inc
mov
dec
xor
subps
inc
scas
cmc
and
dec
cmp
pushf
xchg
mov
xchg
leave
or
ret
aaa
cwde
push
ficom
dec
lahf
cmp
jg
sub
sub
movs
call
cmps
sub
call
shl
sub
mov
xor
or
js
ds
sbb
in
sub
iret
mov
pop
iret
push
push
dec
sbb
stc
mov
pusha
push
pop
icebp
add
sub
into
mov
idiv
das
ins
icebp
mov
movs
sub
cld
in
out
(bad)
enter
xor
lock
mov
and
sbb
stos
sub
clc
fbld
push
inc
dec
xchg
ret
out
sar
sar
push
scas
push
lea
aaa
movs
sti
data16
xor
pop
imul
xchg
pop
retf
movs
xchg
shl
fsub
aaa
cwde
sub
jb
test
idiv
pop
shl
sub
cli
jne
(bad)
sbb
call
and
nop
push
and
push
mov
sbb
test
mov
call
push
arpl
(bad)
add
xor
mov
sub
scas
outs
or
cmc
movs
test
popw
fucomp
sbb
jg
out
pop
and
test
jmp
xchg
push
or
adc
sub
mov
cmp
loopne
imul
xchg
mov
push
cmp
jle
jno
jne
xor
stc
pusha
int3
shl
loop
jno
js
pop
dec
jmp
and
cmc
add
mov
sar
dec
add
cmp
bound
int
es
or
inc
fild
jge
mov
retf
jb
call
mov
in
pop
mov
les
and
mov
mov
gs
sub
xchg
sbb
pop
push
cdq
cmp
aaa
or
(bad)
fst
inc
rcr
fmul
sub
pop
adc
test
repz
add
xor
rcl
jbe
mov
data16
dec
or
sub
push
sub
ins
scas
pop
xchg
mov
jle
sar
xchg
add
retf
mov
pop
bound
clc
push
retf
lock
or
dec
mov
or
mov
sub
xor
dec
fild
in
frstor
(bad)
(bad)
outs
stos
pmaxsw
push
dec
bound
jle
dec
pusha
and
in
xchg
xchg
in
cmps
stos
lods
imul
test
fnstcw
push
(bad)
push
adc
mov
or
cmc
mov
mov
mov
mov
inc
mov
test
jecxz
pop
sub
sti
out
xchg
sub
ret
jmp
retf
test
inc
in
(bad)
ds
add
daa
icebp
test
into
cmc
cld
fadd
loopne
xor
jns
push
inc
cmps
out
loope
call
into
pusha
mov
fsub
into
ss
push
out
out
cmp
xor
addr16
call
xchg
jae
idiv
addr16
sbb
leave
cwde
fistp
fcmovnbe
fsub
retf
inc
xchg
adc
(bad)
mov
ret
(bad)
push
mov
and
mov
inc
in
and
sar
pop
iret
jnp
mov
in
out
in
adc
or
scas
in
retf
mov
loope
into
lock
or
push
xor
fist
adc
retf
cmps
ins
popa
retf
in
xchg
cwde
dec
jmp
lods
out
inc
lea
addr16
cmc
mov
xchg
mul
pop
mov
pushf
inc
jmp
out
fadd
xchg
add
std
adc
mov
movs
xor
dec
enter
clc
ja
push
loope
cdq
cmp
sahf
push
inc
in
mov
fild
cdq
or
(bad)
stos
xor
inc
and
popf
fisubr
xchg
rol
mov
mov
mov
lahf
mov
in
mov
mov
xor
scas
test
sar
inc
hlt
es
stos
dec
aad
jbe
(bad)
(bad)
iret
cdq
mov
movs
leave
stc
sbb
fmul
retf
mov
sub
fmul
ja
outs
mov
rcl
ja
cli
xchg
dec
sbb
sub
lahf
stc
push
imul
imul
add
hlt
in
shl
rol
push
or
ds
in
mov
pop
add
mov
dec
mov
mov
ror
lea
xchg
xchg
cmps
addr16
sbb
push
or
les
pop
dec
fdivr
(bad)
out
jge
js
pop
int3
dec
pop
hlt
or
ror
jge
fld
lea
pop
xchg
adc
movs
add
xlat
mov
leave
pop
dec
cmp
mov
jns
adc
cmp
imul
or
xor
lods
add
imul
fcom
push
jl
adc
pop
mov
inc
fcmovne
cmp
retf
cld
cmp
push
and
push
add
js
pop
or
mov
psubsb
dec
xchg
(bad)
ss
push
mov
jecxz
pop
test
(bad)
int3
in
push
mov
mov
jnp
mov
cmps
or
or
mov
jns
sub
mov
fwait
retf
mov
sbb
or
js
in
dec
mov
sub
ror
adc
fs
sub
mov
jo
and
ror
mov
dec
jl
push
in
jo
aad
mov
loopne
xchg
adc
popa
fwait
repz
sbb
cmp
out
or
xor
pop
mov
and
ret
ret
das
sub
icebp
mov
mov
bnd
dec
(bad)
stc
cmps
lahf
fs
movs
jl
dec
(bad)
das
xor
xor
mov
adc
jb
js
mov
pop
jp
dec
fdivr
jo
mov
pop
mov
fdiv
out
(bad)
arpl
test
ss
js
xchg
stos
sbb
in
adc
sbb
adc
or
ins
lods
cld
mov
inc
aam
jae
mov
pop
test
cdq
and
mov
stos
or
pop
jbe
inc
dec
adc
into
inc
les
xor
jnp
jnp
ret
sub
sbb
push
or
ins
cmp
data16
shr
xchg
fucompp
sub
jle
out
sbb
aas
loope
or
and
test
jle
ret
xchg
int
(bad)
retf
xlat
pop
or
cs
and
mov
xchg
fisubr
jg
push
mov
inc
sub
stc
mov
xor
enter
sub
dec
mov
ja
call
imul
fistp
push
add
jmp
leave
sti
arpl
pop
add
hlt
sbb
mov
pop
mov
push
popa
nop
jge
loopne
mov
and
fucomp
(bad)
cld
jmp
pop
dec
xchg
cld
jg
jb
push
or
cmp
imul
xchg
pop
jns
cmp
data16
inc
lds
dec
sub
inc
stc
aaa
mov
xor
or
je
and
xchg
enter
mov
push
mov
jno
jmp
xor
push
jle
jb
hlt
sub
push
xchg
xor
mov
inc
fld
leave
push
adc
and
or
or
fs
adc
xchg
retf
cmp
sbb
and
sbb
sbb
add
push
push
jl
xor
jo
xor
mov
sbb
sbb
enter
dec
fist
loopne
mov
das
scas
inc
in
mov
lock
(bad)
aaa
(bad)
push
cmp
mov
or
jmp
(bad)
add
cmovno
mov
cmp
mov
retf
adc
imul
maskmovq
test
mov
mov
cwde
mov
popf
mov
std
mov
test
loop
push
and
sub
std
sub
call
jmp
pop
outs
jno
shl
inc
sub
jbe
adc
sub
jge
lods
inc
call
cmp
ret
push
and
ja
popa
aam
pop
xor
aas
pusha
dec
jecxz
inc
or
movs
xchg
xor
push
repz
xchg
add
ss
dec
nop
(bad)
in
cld
xlat
nop
inc
fist
mov
jp
in
cmc
and
mov
ds
fiadd
retf
(bad)
fwait
and
xchg
lahf
cmp
xchg
cwde
mov
cwde
cld
gs
jbe
mov
sbb
daa
dec
(bad)
shl
(bad)
pop
dec
lock
in
jmp
imul
jl
cmp
adc
cli
clc
imul
dec
sub
mov
jae
jmp
cli
stos
(bad)
sbb
lods
test
fwait
or
xlat
ins
test
fwait
lods
inc
mov
xlat
xor
fisttp
outs
fadd
(bad)
sbb
sub
mov
jmp
mov
jge
mov
call
xor
and
jle
adc
aaa
push
cs
aas
into
mov
ja
into
aaa
pop
les
xlat
adc
fld
cmp
retf
sbb
adc
mov
jmp
sbb
xor
pop
sbb
outs
cmp
xor
jnp
call
fsubr
sbb
jecxz
retf
add
push
lock
into
cmp
jl
(bad)
out
loop
es
pop
dec
lods
jbe
fnstenv
pop
push
ret
pop
mul
xor
sbb
fistp
(bad)
repz
or
(bad)
and
add
dec
scas
nop
out
and
xchg
repnz
pushf
dec
data16
loop
cs
jo
pop
test
cmp
xchg
cmc
or
out
push
pop
aad
or
(bad)
sub
ja
inc
mov
fisubr
daa
lds
mov
sti
pop
dec
or
jp
push
xor
mov
jmp
jl
mov
sar
sub
icebp
mov
mov
int
cmp
stc
shl
lahf
sbb
inc
jl
mov
dec
pop
cmp
pop
jle
inc
std
les
push
daa
or
aam
nop
adc
(bad)
out
jge
in
stc
adc
call
inc
in
lds
or
outs
xchg
cmp
add
inc
js
inc
pop
inc
ror
out
cmps
xchg
jbe
cld
cmp
arpl
or
xchg
pop
stos
mov
add
ds
adc
jl
aad
add
movs
pop
push
int3
mov
sub
lahf
inc
dec
jmp
jmp
inc
addr16
gs
cmp
pop
fwait
mov
mov
push
xchg
cmps
outs
fsub
mov
pop
leave
pop
sub
mov
(bad)
(bad)
mov
rol
movs
or
adc
jmp
jmp
test
adc
in
xchg
jmp
pop
test
xchg
adc
jge
rcl
(bad)
dec
cmc
mov
jno
xchg
xchg
sbb
xor
jle
push
mov
scas
xor
sub
pop
pusha
mov
and
pushf
cwde
mov
mov
pop
fwait
js
cmp
je
das
mov
aas
push
lods
add
mov
pop
daa
nop
add
nop
(bad)
pop
aas
ins
sub
aad
aam
jl
and
fstp
daa
or
inc
sbb
cmp
shr
js
add
cmps
ds
sti
icebp
gs
mov
iret
call
ja
xchg
mov
inc
pushf
pop
push
or
leave
jl
loopne
xor
or
stos
mov
(bad)
test
inc
hlt
sbb
retf
in
xchg
pop
test
rdpmc
xchg
cmp
aam
or
xchg
xchg
and
pop
mov
imul
loopne
cmp
arpl
cs
addr16
jb
mov
aas
cmp
pusha
or
cmp
fmulp
push
push
loop
ds
stos
adc
xor
call
add
jl
in
sub
(bad)
sahf
outs
dec
mov
xor
xchg
jae
jp
or
cmp
dec
mov
ret
(bad)
push
mov
ror
sbb
fsub
div
jmp
daa
jl
push
push
and
adc
fcomip
mov
test
imul
frstor
lock
cmp
cmp
adc
mov
pop
jae
(bad)
out
cdq
dec
jb
push
mov
jbe
xchg
and
sbb
cmp
in
aam
mov
leave
loop
xchg
cmp
xor
mov
lahf
lds
adc
stc
mov
(bad)
(bad)
aas
xlat
cmc
repz
outs
jmp
cli
lods
jge
out
pushf
mov
add
retf
add
jne
nop
cs
pusha
clc
xchg
in
or
int3
out
jmp
sbb
and
in
nop
ds
sub
cli
mov
movs
cmp
or
shr
outs
sbb
hlt
mov
adc
scas
lds
pop
fbstp
out
and
mov
imul
lea
pop
fisttp
cli
sar
add
jmp
inc
and
inc
and
xor
imul
xchg
jp
xchg
dec
inc
lea
and
or
inc
call
mov
pop
mov
add
xchg
push
aaa
jmp
adc
dec
in
sub
jl
and
jmp
or
pop
adc
and
shl
xor
lahf
and
and
dec
jp
cmp
jecxz
or
(bad)
loope
cmp
pushf
sbb
cwde
lock
fcmovnb
push
retf
or
mov
adc
test
xor
stos
push
mov
jle
inc
push
and
neg
ja
popf
xchg
jp
push
dec
(bad)
pop
call
outs
pushf
xor
mov
stos
cmps
ins
jae
jge
je
out
mov
das
inc
ror
lea
xchg
add
push
cmp
mov
out
and
mov
xchg
mov
nop
mov
jp
adc
shl
or
xchg
frstor
mov
aas
xlat
in
std
or
mov
cmp
jl
push
sbb
aaa
jmp
retf
dec
cmp
sbb
cmp
cmp
cli
or
shl
lods
rol
call
sar
lahf
lock
out
or
call
inc
dec
mov
inc
lds
push
loope
(bad)
inc
adc
mov
stos
adc
sub
lods
test
(bad)
push
sub
std
add
fsubr
dec
outs
dec
pop
add
test
pop
(bad)
or
jb
inc
in
aam
cmp
iret
mov
icebp
hlt
fsub
lods
ss
jo
ss
jle
push
sbb
inc
push
repz
cmp
sbb
stc
cld
leave
hlt
mov
das
xor
xchg
pop
cld
fnstsw
jmp
imul
jmp
call
or
add
lods
rep
ins
inc
shl
xchg
lds
fs
mov
xor
in
jns
cmp
pop
fist
sub
mov
(bad)
lock
xchg
fimul
adc
lods
leave
test
pop
imul
out
sub
les
gs
aas
dec
and
add
mov
mov
cmc
scas
inc
pop
rcr
inc
mov
inc
dec
pop
ror
mov
retf
push
in
fiadd
sub
mov
or
or
fild
scas
fnstenv
inc
cmp
xor
xor
add
jno
(bad)
test
mov
xor
adc
add
ja
std
add
adc
dec
jg
dec
inc
push
outs
retf
fidiv
in
xchg
dec
fnstenv
and
fstp
adc
pop
(bad)
jo
in
xor
cmp
sti
in
repz
cwde
jbe
xchg
je
fcmovb
mov
data16
xor
scas
addr16
bound
jns
push
ror
and
stc
out
pop
pop
or
ficomp
sub
adc
pop
stos
cwde
xor
cmp
outs
push
xchg
dec
jecxz
cmc
jmp
pop
jl
lds
ror
pop
or
xor
loope
inc
in
cmc
jne
adc
mov
pop
inc
in
mov
sbb
sub
ins
cmp
mov
sbb
movs
repnz
or
mov
sub
push
rol
(bad)
jp
inc
mov
aaa
imul
xchg
lds
add
int
addr16
neg
(bad)
cmp
xchg
jo
rcl
in
mov
xchg
pop
jp
ins
dec
jno
mov
sub
sub
add
lahf
mov
mov
pop
push
mov
and
push
es
cdq
dec
jecxz
aas
mov
push
jg
adc
cmp
repnz
fidiv
dec
sub
jnp
sub
pop
pusha
mov
fld
int3
lock
push
test
rcr
sub
or
(bad)
xor
iret
and
push
sbb
adc
stos
mov
mov
in
push
dec
pusha
cli
jmp
push
jnp
xor
adc
pop
dec
repnz
(bad)
(bad)
and
pop
outs
fisttp
jne
pop
xchg
or
outs
lahf
enter
ror
idiv
add
or
daa
pop
or
sub
inc
scas
mov
adc
dec
mov
loopne
ss
test
cmp
icebp
sub
mov
pop
push
and
mov
popa
adc
jmp
scas
out
and
cmp
sub
sub
inc
fsub
push
pushf
xchg
or
loope
push
test
movs
retf
into
es
in
outs
cmp
loope
mov
fcomp
pop
lods
pop
lods
push
mov
push
stc
(bad)
mov
xor
cmp
jg
js
xor
scas
in
lods
push
movs
mov
mov
pop
ror
out
push
xor
enter
sahf
add
or
jecxz
sbb
mov
scas
push
and
lods
adc
sub
mov
mov
fistp
and
dec
inc
jae
es
mov
mov
jb
cmps
jl
mov
adc
mov
cs
fist
mov
ret
or
or
cmc
add
xor
mov
pop
lods
int
pop
cs
adc
jo
call
stos
cmp
scas
ret
xor
jmp
mov
cmovo
inc
or
sub
add
sub
fcomp
jl
aas
and
mov
push
imul
mov
mov
scas
jl
xor
sbb
retf
mov
fdiv
sub
jp
sub
and
mov
jmp
xor
jbe
pop
test
mov
add
jae
out
add
in
xlat
and
mov
inc
jp
faddp
push
sbb
pop
es
adc
test
push
test
lods
push
pop
das
push
aam
jle
dec
xchg
aam
retf
pop
cmp
movs
mov
mov
lds
shr
rol
jbe
cmp
cmp
or
in
fwait
test
test
rol
(bad)
mov
push
jb
mov
test
jb
pop
rcr
push
and
popf
cmp
retf
ds
inc
mov
mov
mov
fstp
es
xor
add
movs
mov
lahf
test
mov
(bad)
jmp
dec
leave
pop
out
std
repz
pop
push
repz
adc
dec
out
sub
lahf
mov
xchg
inc
dec
inc
call
pop
ins
xor
neg
shr
jno
lahf
addr16
mov
les
imul
dec
jmp
inc
inc
test
sar
jecxz
inc
int3
sbb
xor
fs
das
pop
xlat
sub
(bad)
aas
in
mov
or
mov
out
cwde
sbb
xlat
iret
inc
sbb
fwait
movs
out
push
es
pusha
and
test
aaa
fsub
inc
mov
inc
push
neg
ret
clc
pop
daa
xor
sbb
out
xchg
jecxz
xchg
loope
in
adc
pushf
movs
cmp
mov
out
lea
fsubr
pop
xor
fild
pop
xor
push
and
push
loop
imul
nop
repz
adc
mov
ds
pop
add
cwde
fiadd
cmp
and
pop
add
stos
inc
cmp
pop
aas
movs
push
data16
aam
js
lahf
imul
mov
(bad)
cwde
bound
ss
movs
cmp
lods
(bad)
sbb
inc
add
cmp
sar
mov
sbb
sar
lea
push
add
cmp
cbw
test
ins
data16
jb
je
mov
sti
mov
test
jnp
jmp
mov
repz
pop
jmp
aad
pop
jo
std
push
pop
out
ret
sti
adc
ret
cld
cmp
cdq
out
arpl
push
out
xchg
add
and
mov
sar
sub
xor
push
mov
pop
stc
cmp
imul
js
jp
xor
mov
or
or
sbb
jge
(bad)
call
jo
add
adc
data16
sub
sub
pop
dec
mov
xchg
lea
ret
sbb
movs
push
repnz
rcr
cmps
mov
ret
imul
js
sbb
mov
xchg
(bad)
movs
push
mul
jmp
cwde
mov
jmp
sar
xchg
mov
sub
lea
add
sbb
fiadd
or
in
sti
pop
sub
lock
jl
add
movs
add
sbb
sub
inc
cld
xor
ds
rcr
out
outs
(bad)
(bad)
cmp
imul
cmp
and
and
inc
and
cmps
pop
jmp
push
or
dec
and
jle
adc
test
lea
leave
stos
push
and
fnstenv
inc
repnz
lds
push
sub
inc
push
sti
jae
dec
push
enter
cmp
scas
ror
xlat
int3
push
daa
xchg
add
fstp
mov
jae
fsub
lahf
out
mov
add
repnz
mov
push
test
cwde
(bad)
out
mov
mov
pop
sahf
call
sub
(bad)
and
loopne
and
mov
fidiv
dec
or
dec
ja
jbe
jno
ror
bound
sbb
pushf
jl
xlat
lock
or
push
dec
in
movs
cmc
loop
test
dec
inc
adc
or
mov
pop
scas
add
and
mov
mov
dec
imul
rol
or
scas
or
retf
jl
test
das
mov
in
push
xchg
push
mov
jmp
inc
sbb
lds
(bad)
enter
jl
outs
push
fidivr
mov
cmps
sbb
dec
and
inc
hlt
pop
pop
test
mov
mov
inc
cli
jmp
cmc
jne
rol
mov
pop
or
ins
pushf
(bad)
sbb
or
add
lods
xchg
mov
xor
cmps
mov
test
in
cmp
mov
dec
es
aam
sbb
ret
(bad)
xchg
fmul
adc
test
cs
sbb
jle
out
mov
leave
adc
rcl
mov
stc
xlat
popf
xchg
pop
xchg
mov
fisub
jno
lock
and
loope
xor
das
mov
dec
popf
js
xchg
in
xchg
aas
je
sub
sbb
rol
adc
dec
pop
or
outs
fsubr
push
loopne
(bad)
fxch
int3
and
jb
push
es
sbb
xchg
jmp
rol
or
pop
out
mov
fnstsw
out
pusha
das
sub
ret
fwait
jmp
dec
xchg
aam
loop
xlat
es
imul
dec
and
shl
sbb
loopne
sub
test
or
hlt
or
not
imul
jecxz
lods
xchg
inc
inc
pop
xchg
mov
jmp
js
sbb
xor
loop
mov
cs
dec
inc
shr
pop
div
mov
add
push
clc
(bad)
cmp
jle
inc
sbb
mov
loope
inc
js
ret
scas
out
int
div
clc
mov
fsubr
jl
and
push
mov
shl
test
cmp
(bad)
movs
jne
or
cwde
in
jp
sahf
in
mov
push
div
fadd
jo
push
dec
jp
mov
in
fiadd
js
adc
xchg
or
dec
rol
fidiv
fst
xor
inc
pop
mov
xchg
(bad)
out
inc
jnp
popf
retf
ja
test
ret
push
popa
xor
test
sbb
bound
xchg
adc
push
or
(bad)
pushf
xor
push
sti
scas
inc
pop
mov
mov
xchg
jae
jl
pop
xor
mov
xor
pop
(bad)
jo
adc
and
loope
xchg
sub
adc
repz
xchg
and
nop
ins
movs
jae
cmp
xchg
lea
stc
fdivr
sub
sub
imul
pusha
mov
or
aad
(bad)
push
jo
jl
shr
fimul
push
add
out
loope
loop
aas
add
mov
mov
push
imul
jns
shr
xchg
ret
addr16
push
or
pusha
or
inc
mov
imul
cdq
jno
xor
(bad)
loop
cmp
pop
out
sbb
pop
jp
push
pop
imul
mov
adc
pop
adc
mov
xchg
jp
(bad)
retf
ss
ret
xor
mov
bnd
mov
stc
sar
cmp
stc
inc
(bad)
sahf
xchg
cmp
push
outs
or
xlat
(bad)
cli
in
mov
sub
lods
call
adc
push
jns
or
mov
sbb
and
and
out
shl
repnz
idiv
fwait
cmp
cli
jp
out
inc
outs
xchg
fbld
idiv
sub
not
and
sub
call
jno
mov
stos
add
xchg
neg
test
push
xor
or
sub
jns
jmp
jge
inc
enter
std
(bad)
in
and
xor
in
pop
inc
lds
in
xor
fadd
xchg
sub
lods
mov
mov
shl
jp
jg
repnz
or
jle
fmulp
adc
js
add
fsub
imul
js
(bad)
and
icebp
pop
push
shl
adc
or
pusha
and
sti
sub
and
neg
push
push
in
sbb
mov
jge
cmc
fcom
cmp
dec
in
mov
cdq
sbb
std
xchg
stos
mov
inc
sbb
xlat
or
push
imul
jl
frstor
rcl
div
dec
lea
out
or
inc
mov
mov
add
lahf
sbb
xchg
push
shr
push
and
shr
pop
inc
in
test
add
or
push
push
cld
sbb
xchg
cmp
mov
(bad)
imul
loop
ins
stos
and
jo
push
and
mov
cwde
jmp
es
movs
pop
in
lahf
lods
mov
int3
and
(bad)
imul
mov
rol
jmp
scas
push
sub
ins
sub
cmp
(bad)
push
or
inc
das
aam
mov
int
mov
aam
pop
idiv
scas
pop
js
add
mov
pushf
xor
bound
add
mov
stos
cmp
js
or
jne
(bad)
push
in
mov
dec
pop
cwde
sbb
adc
and
xchg
mov
rol
jno
test
xor
sahf
or
add
jne
mov
ss
jl
mov
mov
pop
mov
call
je
stos
ins
or
jns
add
xchg
dec
mov
pushf
inc
mov
ins
nop
pop
jb
sub
sbb
jbe
(bad)
fsubr
mov
xor
fsub
(bad)
sbb
mov
adc
mov
jmp
inc
ret
movs
push
mov
dec
jo
xor
dec
inc
jecxz
stos
or
mov
dec
pop
or
div
test
jmp
dec
or
lods
cmp
jmp
imul
mov
push
cwde
imul
movs
mov
dec
es
ficomp
ret
mov
push
mov
adc
call
fwait
xchg
je
adc
jmp
(bad)
and
jmp
mov
cmp
stc
cmp
xchg
mov
arpl
sbb
popa
xchg
test
push
ret
mov
mov
push
fist
data16
sub
test
jecxz
sahf
movs
popf
fwait
pop
pop
and
cmp
or
sbb
and
sbb
stos
and
xchg
dec
ins
and
(bad)
popf
mov
and
rcl
aas
mov
mov
xor
pushf
loope
sahf
xor
pop
gs
hlt
loopne
push
nop
mov
fsub
in
xor
sub
fstp
add
stc
ficom
(bad)
daa
cdq
add
add
in
and
ins
xchg
in
(bad)
cmp
sbb
mov
push
inc
loop
(bad)
(bad)
sbb
ins
popf
mov
scas
sub
(bad)
aas
cmp
add
shl
mov
inc
addr16
dec
xchg
imul
cmps
pop
icebp
add
cmp
in
out
test
xchg
std
icebp
jnp
pop
cmp
call
icebp
call
(bad)
popf
test
sbb
push
daa
je
dec
stos
cld
aaa
loopne
sbb
cmp
data16
xor
stos
sub
loop
pop
(bad)
hlt
into
or
mov
cmp
sub
add
test
or
(bad)
pop
and
clc
adc
and
push
sar
add
add
xchg
pop
mov
and
and
inc
cmp
fdivr
jae
and
or
jns
aas
lock
fcmovnbe
les
mov
sahf
stc
and
mov
fabs
jge
mov
inc
movs
clc
aaa
cwde
inc
fmul
add
jge
sbb
jo
cmps
and
or
dec
imul
cmps
stos
leave
ret
mov
(bad)
pop
add
dec
adc
imul
cmp
in
adc
mov
xchg
in
daa
movs
test
ins
inc
cld
xor
and
jmp
fsubr
jae
cmp
loope
mov
loop
push
adc
jp
ss
and
pop
pop
jecxz
mov
sbb
xor
sahf
cli
in
lds
pushf
dec
sub
iret
mov
dec
ret
pop
movs
or
jbe
leave
or
repz
clc
dec
rol
enter
imul
mov
ins
adc
gs
or
jp
ror
retf
mov
inc
push
mov
jbe
cld
out
mov
ret
sub
aad
leave
stos
repnz
ins
push
clc
pop
or
jl
(bad)
fidiv
pop
scas
jmp
ret
dec
(bad)
or
adc
xor
jmp
std
jl
(bad)
pop
push
fcom
inc
or
fyl2x
push
mov
pop
mov
jmp
or
push
inc
lock
and
push
xchg
lea
imul
push
clc
loope
call
in
ficomp
dec
mov
xchg
cmp
arpl
add
out
mov
cli
xchg
fistp
cli
rcl
retf
sqrtps
mov
aad
xor
aam
jo
add
leave
mov
pop
lahf
pusha
and
fsubr
fmulp
aas
sar
mov
mov
out
jo
push
sub
mov
std
adc
in
pop
retf
outs
sub
ins
ficomp
loope
push
shl
nop
scas
inc
call
movs
test
ins
push
cmc
jmp
cmp
dec
lahf
inc
iret
out
pop
cmp
push
fstp
mov
stc
div
sub
jg
retf
push
sub
sti
and
add
(bad)
cmps
adc
lahf
mov
jmp
call
pop
outs
sti
mov
add
cld
test
push
cmps
outs
clc
push
data16
add
inc
xchg
push
or
pop
cld
inc
repnz
xchg
xlat
sbb
mov
or
xor
pop
fistp
hlt
int3
aad
jmp
es
push
rcr
xchg
mov
xor
retf
movs
push
push
lahf
cmp
mov
xor
sti
into
pop
rcl
inc
or
sub
mov
mov
push
lahf
(bad)
aas
or
sbb
imul
pop
or
arpl
xchg
adc
lahf
cmp
mov
add
inc
sub
mov
repz
push
hlt
fisttp
xchg
mov
pop
es
loopne
jb
jb
add
das
idiv
sub
pop
in
push
stos
inc
push
daa
fld
(bad)
mov
add
xor
and
mov
in
inc
int
loopne
fild
arpl
dec
call
and
and
or
jmp
sar
pop
or
push
sbb
cmps
sub
dec
push
std
arpl
dec
cmp
push
pop
mov
fild
jmp
mov
sahf
xor
adc
mov
sub
je
push
(bad)
pop
bound
aas
sub
sub
rcl
inc
jb
(bad)
lock
mov
mov
jnp
dec
jecxz
fwait
int
scas
mov
jns
push
mov
xchg
fsub
pop
inc
test
push
in
dec
xor
aaa
pop
jl
dec
push
(bad)
lods
cmp
mov
ins
scas
out
inc
or
inc
jl
icebp
mov
jmp
jmp
and
cs
imul
stc
out
pop
mov
in
push
mov
int
mov
or
mov
lods
and
mov
(bad)
mov
in
xor
scas
mov
pop
aam
fisub
test
outs
leave
addr16
out
test
jb
pop
mov
and
call
lds
add
lahf
adc
jns
xchg
mov
pop
lahf
inc
aas
imul
(bad)
in
test
data16
xor
lds
xchg
pop
out
fcomp
mov
dec
lods
movs
in
add
sahf
inc
cmp
add
test
dec
jg
pop
cmp
fmul
add
lea
inc
or
leave
or
arpl
in
add
inc
nop
stc
iret
lods
jo
shr
mov
(bad)
mov
addr16
or
jo
xor
xchg
mov
push
pop
repz
sub
stos
xor
mov
xor
and
xchg
dec
aam
xchg
(bad)
stos
xchg
ds
js
mov
xor
cmps
leave
pop
jmp
jmp
push
dec
mov
mov
fcom
xor
test
mov
add
scas
js
pusha
jbe
imul
pop
inc
aad
inc
xor
(bad)
ret
lock
aaa
add
mov
cmps
std
pop
xchg
repz
inc
dec
add
test
mov
push
sbb
fwait
push
repnz
jecxz
jg
mov
repz
cmps
mov
jae
ins
js
int
aad
dec
mov
ins
popf
(bad)
(bad)
xor
out
add
mov
dec
push
and
jbe
outs
or
xor
dec
leave
shr
popf
add
ds
mov
cmp
xor
xchg
popf
cs
iret
repz
call
test
push
xor
retf
jns
dec
sbb
inc
pop
mov
fwait
sbb
sub
iret
cmp
mov
xchg
sahf
int3
bound
mov
and
pusha
ret
fidivr
xor
xor
xchg
cmp
int3
inc
or
lds
les
or
sub
xor
mov
jge
push
mov
mov
pushf
bound
scas
inc
push
mov
sbb
mov
cmc
test
retf
and
jmp
jg
arpl
jg
fild
les
icebp
fsub
imul
xor
push
std
fimul
adc
push
xor
pop
cwde
and
mov
mov
rol
gs
dec
cmp
xor
cmp
pusha
neg
ds
lods
jae
jb
pop
adc
pusha
stc
dec
adc
cmc
jle
icebp
or
xchg
xor
sti
mov
loope
and
mov
mov
lock
add
sbb
dec
jl
add
xchg
jo
sti
ja
out
xchg
add
outs
jmp
push
mov
ins
jbe
fs
loop
push
xor
sub
mov
fistp
(bad)
call
call
ret
into
rcl
jne
ficom
or
cmp
push
scas
es
xor
out
arpl
add
push
dec
push
xchg
pop
mov
inc
cmps
cdq
pop
cmp
cmps
mov
ss
and
or
(bad)
data16
xor
ficom
mov
sub
xchg
adc
push
fmul
xchg
loopne
rcr
icebp
cmp
shr
push
jne
xchg
xchg
nop
addr16
inc
push
pushf
pop
movlps
leave
jns
xor
cdq
push
jnp
adc
inc
inc
cmp
adc
test
movs
jmp
xchg
fnstsw
shl
rcl
ins
sbb
add
sub
test
jb
and
xchg
out
rep
mov
sbb
(bad)
lea
arpl
and
mov
push
popa
mov
lods
shl
inc
push
pop
in
pop
icebp
mov
jmp
adc
xchg
lock
cdq
xchg
adc
cmc
xchg
mov
popa
push
mov
test
dec
aaa
pop
and
xchg
sahf
mov
push
push
sahf
adc
nop
xor
stc
pushf
or
je
mov
mov
pop
jne
fild
gs
(bad)
bound
pop
leave
imul
xchg
adc
(bad)
and
out
ins
scas
pop
xor
clc
and
push
aam
pop
shl
(bad)
push
add
mov
fidivr
cli
inc
out
dec
adc
pop
fiadd
cli
mov
adc
xor
aam
mov
out
hlt
ret
ss
xor
sub
(bad)
icebp
int
xchg
neg
mov
cmc
cwde
cmc
inc
imul
retf
js
add
ins
leave
clc
adc
pop
popf
cwde
mov
dec
xlat
xor
push
sbb
cmp
jle
xor
mov
and
loope
push
add
dec
pop
cmp
leave
aaa
mov
and
cmp
loop
and
pop
rcl
iret
cdq
fsubr
inc
leave
push
mov
imul
jne
push
pop
lods
test
push
inc
and
dec
or
jl
ror
push
mov
(bad)
push
(bad)
sub
cmp
ja
imul
cmc
pop
pop
sbb
rol
cld
mov
xchg
ja
ja
sbb
call
shl
or
lods
outs
fdivr
ins
mov
push
mov
imul
mov
shl
push
add
std
jns
add
pushf
daa
clc
xor
popf
sbb
sub
mov
aas
out
adc
icebp
mov
in
xchg
outs
data16
push
ins
mov
xchg
hlt
mov
(bad)
pop
rcl
outs
and
scas
pop
xor
clc
xchg
rcr
ja
jp
lods
popa
push
jmp
add
push
mov
aam
cmc
xchg
pusha
adc
pop
mov
or
dec
xchg
jae
xchg
sbb
jbe
mov
push
mov
jnp
jno
adc
xor
cmps
ds
adc
movs
lahf
push
mov
jmp
scas
leave
pop
adc
ss
bound
test
pusha
imul
add
xor
mov
ds
mov
aam
test
jo
cmp
sbb
scas
xchg
cmp
and
lock
jmp
push
push
into
jle
cwde
icebp
nop
jle
in
(bad)
retf
mov
scas
mov
jno
dec
stos
or
inc
test
cmps
data16
cmp
jle
jo
mov
mov
cmp
sub
popf
add
sar
fidiv
adc
in
lods
dec
rcr
xlat
retf
test
inc
in
data16
push
pop
push
cs
jnp
ret
jo
ins
or
xor
mov
outs
fcom
adc
ja
aaa
or
pop
sbb
pop
test
mov
test
or
cmps
outs
xchg
popa
inc
sub
je
add
dec
cmp
mov
(bad)
(bad)
fmul
lods
ins
jmp
adc
sahf
jmp
je
sbb
inc
jmp
popa
inc
lds
sahf
push
lock
and
xor
shl
xor
mov
pop
repz
clc
and
imul
push
pop
xor
or
test
test
ins
or
in
xchg
into
retf
std
xor
jnp
push
addr16
mov
addr16
mov
or
mov
sbb
mov
in
pushaw
xlat
xchg
mov
pop
jmp
mov
add
hlt
mov
jl
or
call
lds
les
mov
lods
sahf
pop
or
sub
or
inc
idiv
lods
cmps
loop
lods
arpl
pop
add
lds
mov
inc
adc
or
data16
mov
rcl
movs
cmp
cmp
push
jno
hlt
cli
addr16
sub
jl
jg
xor
mov
sbb
and
push
mov
ret
scas
xchg
(bad)
sbb
rcr
out
call
jl
pop
jmp
adc
popf
mov
cmps
mov
sbb
mov
mov
into
fwait
mov
std
out
mov
loopne
sbb
sbb
inc
add
mov
mov
pop
mov
das
add
(bad)
(bad)
or
into
adc
mov
cmp
cmp
nop
icebp
into
mov
rcl
pop
dec
push
cmps
repz
jle
loop
jg
outs
xchg
sub
loopne
sbb
mov
out
outs
push
mov
div
or
add
shl
mov
and
jnp
cmp
pop
or
cs
mov
fdivr
adc
mov
mov
push
das
inc
pushf
loope
(bad)
(bad)
cld
mov
call
fwait
dec
push
jge
stos
clc
repz
inc
dec
test
push
bound
cmps
xchg
out
pop
xor
xor
cwde
dec
or
rol
jo
pusha
aas
into
shr
sub
rcl
inc
(bad)
outs
sbb
mov
or
lock
(bad)
ret
push
cmps
ss
or
iret
push
xor
pop
jne
mov
scas
sbb
inc
in
loop
shl
popf
mov
adc
sbb
jmp
dec
jmp
xor
imul
data16
scas
mov
push
adc
mov
and
dec
sbb
outs
arpl
pushf
xchg
lock
cmp
je
lock
xchg
test
stos
out
(bad)
jnp
sti
clc
movs
mov
adc
mov
mov
adc
iret
jecxz
adc
cmps
xchg
pusha
mov
jge
and
std
push
push
(bad)
xor
mov
or
xor
dec
adc
daa
mov
lock
(bad)
sbb
xchg
inc
jo
dec
sar
mov
out
inc
cwde
mov
xchg
adc
and
stos
dec
data16
or
cmps
mov
or
out
retf
div
dec
cld
mov
fwait
and
pop
and
ins
and
pop
mov
mov
mov
sbb
dec
out
cld
sub
mov
and
xlat
jle
fild
xor
xchg
jae
jge
ss
call
gs
pop
aam
ins
xlat
shl
pop
adc
fcom
cmp
scas
jbe
jne
test
dec
out
or
inc
imul
outs
les
pop
test
push
add
dec
fisttp
or
push
push
out
xlat
in
xchg
xchg
cmps
(bad)
rcr
xor
inc
mov
iret
loope
loopne
pop
dec
or
ret
mov
pop
enter
adc
dec
or
retf
xchg
and
daa
sbb
dec
jae
mov
ret
shl
and
pop
shl
test
push
pop
repz
mov
(bad)
mov
hlt
cmps
jmp
shl
lods
cmps
sub
dec
cmp
sub
leave
rcl
hlt
ret
ins
retf
mov
outs
loope
daa
pop
sbb
outs
out
dec
cli
xor
pop
fxch
cwde
xchg
inc
out
pop
mov
jne
and
adc
(bad)
inc
mov
loop
xor
into
or
aad
push
xor
cmps
jmp
mov
jnp
mov
mov
js
dec
jne
adc
cmp
pop
mov
lods
fnstsw
std
dec
inc
xchg
xor
and
mov
jge
cli
retf
push
push
enter
outs
cmp
fbld
mov
movs
pop
dec
push
outs
cmc
push
and
dec
gs
(bad)
nop
sbb
out
push
std
dec
add
mov
call
inc
fimul
mov
lock
test
int
movs
rol
mov
cmp
pop
test
fdiv
ret
xchg
data16
inc
pop
xchg
call
rcr
mov
add
ficom
xor
sub
and
add
xor
enter
add
or
inc
call
retf
inc
shr
stc
int3
dec
repnz
and
pop
jl
sub
mov
fstp
pop
aas
fstp
rol
sbb
inc
jle
inc
and
sub
js
jle
aam
dec
icebp
out
enter
ins
cmp
lods
adc
test
cmp
adc
outs
retf
fldenv
or
or
dec
test
sbb
and
cmp
mov
fnstsw
imul
dec
test
push
mov
mov
jno
in
mov
das
rcr
adc
dec
xchg
nop
xlat
loop
sbb
sbb
add
bound
std
xchg
ror
int3
popf
sti
loop
call
lea
imul
aam
fwait
pop
stos
fs
int3
mov
sub
or
adc
test
jb
je
fdivr
ins
(bad)
repnz
inc
dec
inc
mov
out
pop
xchg
popf
mov
mov
mov
lods
cmp
bound
cmp
xchg
xchg
mov
or
ret
pop
or
int
xchg
icebp
mov
ret
pop
fs
adc
(bad)
add
push
jp
mov
dec
inc
sbb
call
push
add
push
sub
inc
jecxz
mov
push
xor
push
cs
xor
push
adc
sbb
jge
imul
test
jb
pusha
inc
sbb
add
mov
loop
lods
mov
mov
shl
sti
cli
fcom
jp
mov
sub
hlt
mov
aad
xor
cmp
lock
inc
out
adc
xchg
lea
idiv
rcl
sub
shl
inc
in
add
push
sub
fst
adc
inc
stos
mov
lds
cld
fidivr
jmp
stos
daa
ret
cdq
je
out
ja
push
movs
pop
dec
or
cli
int
cmc
lods
outs
dec
fs
ja
(bad)
mov
mov
shl
rcr
cmp
mov
mov
xchg
daa
mov
pop
jo
mov
cmp
hlt
shl
mov
sbb
cmp
test
sbb
dec
mov
inc
add
mov
daa
push
sub
fisubr
fiadd
pushf
sbb
imul
or
cmc
jecxz
jl
cwde
loope
cmp
cdq
and
stos
cmc
xchg
or
retf
dec
int3
inc
jge
das
cmps
ror
imul
ds
sbb
ror
movs
xchg
inc
pop
in
sbb
iret
xchg
lock
xchg
push
mov
xor
stos
mov
sub
jb
jbe
repz
mov
mov
xchg
lock
es
and
push
push
out
push
jb
adc
xchg
or
outs
jbe
into
popa
ret
add
(bad)
xor
mov
in
jae
mov
in
push
xchg
js
mov
or
je
jns
loopne
stos
(bad)
jae
fisttp
push
call
(bad)
sbb
cdq
xbegin
sbb
lock
outs
into
mov
std
fcmovnbe
dec
nop
pop
shl
and
inc
stos
cs
mov
lods
add
in
imul
mov
aaa
xchg
jmp
inc
xor
xor
cmp
jg
popf
mul
sub
ror
sub
add
dec
push
jno
or
pusha
popf
shr
add
fimul
mov
push
movs
cmc
mov
jnp
into
xor
std
sti
cwde
es
stos
push
aaa
loope
jg
push
fwait
xor
aaa
mov
js
sbb
cs
je
lods
and
lods
nop
push
lds
mov
mov
mov
loop
sbb
call
mov
in
ror
loopne
scas
int3
dec
push
in
out
mov
push
xchg
push
push
pop
inc
or
mov
sub
mov
push
xor
sbb
dec
loopne
scas
loopne
popa
movs
ss
cld
sbb
push
jl
inc
gs
inc
daa
jo
test
ss
xor
ja
mov
cmp
data16
(bad)
fild
clc
lock
fidivr
add
das
std
ins
push
cmc
push
inc
(bad)
test
pop
les
aaa
gs
cmps
sub
sub
pop
jecxz
pop
xchg
adc
not
jae
mov
pop
pusha
xchg
addr16
inc
stc
and
loope
fst
test
mov
les
xor
mov
mov
jecxz
mov
mov
(bad)
aaa
mov
shl
rcl
scas
pop
dec
pusha
and
jno
cmp
fdiv
jge
(bad)
push
pop
mov
sbb
fst
fisubr
xchg
pop
sahf
jl
mov
icebp
mov
rcl
cmps
cld
inc
cmp
repnz
cmp
cmp
adc
ret
inc
mov
movs
xor
test
jecxz
xor
cmc
inc
cmp
xor
dec
ret
mov
nop
repnz
push
mov
pop
dec
cmc
cmp
add
fucomi
nop
jle
inc
aad
push
(bad)
sahf
test
shl
mov
shl
mov
mov
dec
dec
rcr
push
mov
xchg
stc
imul
lea
jns
les
sbb
out
gs
jb
lea
push
out
shl
dec
or
and
pop
add
mov
cmp
not
xchg
mov
xor
shl
clc
adc
or
mov
sbb
ficomp
jbe
lahf
sbb
xchg
js
cs
mov
cwde
sub
xor
jge
pusha
mov
inc
xchg
dec
js
or
(bad)
out
lds
jmp
mov
inc
add
and
cdq
rol
push
clc
imul
and
pop
pop
cmp
scas
movs
cmp
sbb
aam
or
cmc
pop
xor
mov
or
mov
dec
mov
in
xor
mov
scas
mov
pushw
push
repnz
popf
inc
pusha
out
arpl
and
sub
add
sbb
rcr
push
div
and
sbb
mov
pop
inc
cld
daa
int
pushf
mov
(bad)
mov
sub
hlt
iret
jo
mov
sbb
rcl
mov
fistp
sub
ror
hlt
cmp
xchg
push
int3
pop
leave
outs
jae
ja
pop
mov
repz
shr
lods
or
arpl
jae
xor
fistp
mov
les
mov
aaa
mov
mov
sub
xchg
mov
mov
jbe
pop
pop
nop
call
push
dec
xor
fs
cmp
cmp
and
nop
outs
pop
fwait
dec
pop
cmps
stos
fnsave
call
sub
dec
inc
sub
jbe
jmp
jge
jno
aad
jo
jne
jbe
hlt
mov
xchg
cmp
adc
lods
add
mov
movs
stc
xchg
or
or
(bad)
mov
ficomp
out
sar
int3
mov
sbb
jl
je
xchg
test
xchg
in
fmul
retf
jae
movs
mov
push
pop
xchg
hlt
scas
sub
ja
lods
dec
test
push
sahf
(bad)
test
or
repz
xchg
fdivr
dec
xchg
jmp
lods
pushf
aas
add
add
outs
or
lock
in
add
add
sub
jg
fnsave
xor
loop
scas
push
push
gs
mov
and
mov
dec
adc
fpatan
pop
(bad)
sti
js
dec
jae
hlt
mov
cmp
in
les
in
lahf
repnz
xchg
mov
cmp
mov
jl
aaa
jge
imul
cmp
mov
mov
and
pop
mov
mov
adc
and
popa
arpl
fstp
cmpxchg
popf
nop
lea
dec
adc
sub
cdq
sti
cmp
repz
sbb
nop
rcl
mov
mov
out
imul
int3
inc
call
mov
cmp
(bad)
repz
mov
mov
mov
mov
leave
mov
ins
add
cmps
inc
sahf
pop
mov
mov
cmp
mov
mul
sar
(bad)
in
mov
out
add
repnz
mov
cmp
cdq
mov
popf
mov
dec
jb
std
pop
cmp
pop
mov
repnz
cmp
inc
push
(bad)
mov
mov
sbb
add
mov
arpl
dec
cdq
jb
ds
nop
jns
mov
fst
call
test
ins
sub
jle
fsub
dec
mul
in
jmp
jbe
jge
lods
sbb
sbb
xchg
jmp
pushf
sahf
div
mov
adc
mov
ret
mov
add
cli
add
and
and
pop
enter
test
fs
imul
xor
int3
rcr
jecxz
das
pusha
xor
gs
and
or
std
nop
popf
mov
(bad)
test
out
ins
enter
jae
jecxz
test
sbb
test
into
push
jmp
call
lods
clc
sub
test
push
jmp
out
sub
ret
das
jl
lea
in
loopne
ror
adc
loope
in
cs
mov
pop
add
sahf
mov
pop
retf
test
xchg
sbb
fistp
and
jbe
mov
sbb
out
stos
mov
xor
jge
mov
sar
inc
retf
enter
mov
loop
(bad)
push
cmp
loope
pushf
pop
mov
xchg
outs
adc
xchg
adc
pop
aaa
push
(bad)
rcr
shl
mov
push
jns
sahf
and
aam
sbb
push
stos
jb
lds
xchg
mov
mov
retf
fiadd
out
les
(bad)
xor
cld
ficomp
ds
loop
jno
xor
cdq
mov
int3
sbb
sbb
rol
enter
retf
or
cmp
test
add
inc
inc
mov
je
(bad)
into
add
xchg
mov
retf
pop
pushf
push
pop
sti
std
or
pusha
ss
push
pop
mov
adc
xor
pop
xor
outs
or
pop
pop
xor
repnz
loope
and
test
movs
jb
sbb
or
(bad)
ds
rcl
xor
leave
cmps
pop
add
fstp
mov
ins
mov
mov
mov
shl
jnp
jg
sub
xor
or
inc
ins
sub
mov
ror
imul
sub
sbb
sub
outs
test
leave
and
pop
or
adc
fistp
in
mov
adc
xor
and
sahf
fcomp
and
daa
adc
cmp
pop
sub
xchg
adc
fidiv
mov
dec
mov
ret
fistp
mov
push
cmp
dec
xor
push
xchg
les
pop
test
(bad)
jnp
dec
(bad)
xor
int3
add
and
andps
mov
jb
stos
cmp
adc
sbb
push
fwait
std
ja
jmp
dec
mov
loop
and
jecxz
xchg
xchg
inc
pop
(bad)
mov
loop
cmps
stc
mov
cmps
and
mov
not
push
shl
adc
inc
(bad)
pop
jp
cmp
out
les
or
das
sbb
xor
jbe
xchg
or
and
mov
rcr
rcr
mov
sbb
es
or
cwde
mov
adc
jmp
adc
jnp
push
imul
loop
mov
inc
stos
call
xor
ins
imul
dec
arpl
push
fmul
movs
fprem
das
repz
cmc
jb
jp
jmp
jo
out
push
repnz
and
inc
adc
in
out
repnz
pop
cdq
jne
rol
push
pop
and
sbb
addr16
or
mov
jmp
aam
sub
inc
pshufw
sahf
xchg
call
lock
or
and
rcl
pop
or
adc
aad
repnz
in
test
out
inc
arpl
mov
icebp
call
inc
std
adc
outs
jbe
adc
adc
adc
jmp
(bad)
clc
add
sar
pushf
neg
mov
movs
les
xchg
nop
into
inc
cmp
mov
dec
nop
dec
inc
jb
pop
outs
xor
jecxz
adc
xor
xor
add
push
adc
out
daa
jecxz
pop
cmp
mov
loope
sbb
dec
fist
xchg
stos
sub
xchg
jnp
out
(bad)
xor
je
ss
sti
out
repz
ror
cwde
xchg
push
dec
dec
popf
in
popa
leave
enter
lds
shl
cdq
dec
mov
pop
xor
mov
pusha
jno
mov
repnz
jno
bnd
hlt
inc
int
outs
and
(bad)
lock
sub
push
lock
test
cmp
xchg
adc
div
(bad)
mov
retf
(bad)
icebp
and
jbe
in
jmp
ins
mov
div
mov
ror
sub
popa
sub
hlt
popa
std
adc
aas
je
xor
adc
mov
rcr
push
xor
enter
and
sub
adc
and
cld
jg
mov
dec
fnstenv
int3
jno
mov
pop
xor
enter
xor
mov
jge
xchg
jno
hlt
sbb
and
daa
int
dec
fcomp
je
hlt
bound
inc
pop
sub
push
jae
mov
mov
jmp
adc
mov
or
daa
es
popa
in
dec
je
mov
addr16
jmp
pop
inc
clc
call
ror
stos
xchg
imul
jl
push
dec
sub
sub
and
aad
jb
or
outs
div
sbb
not
fwait
jl
dec
fsubr
es
sti
aaa
jns
out
jecxz
fld
xor
sbb
pusha
std
sub
or
mov
sahf
cli
push
add
add
loopne
mov
outs
pop
sub
lea
add
jmp
dec
jmp
push
cmp
xchg
fidivr
xor
sub
lods
fimul
retf
xchg
inc
add
jl
add
not
add
mov
jge
xchg
out
popf
fmul
sbb
or
mov
mov
inc
ds
lock
mov
and
ja
aaa
das
clc
out
ins
adc
bound
xor
cmp
or
sar
add
nop
mov
lds
or
xor
push
stc
adc
or
jnp
pop
xchg
cmps
sub
test
sbb
jno
adc
cmps
mov
in
out
mov
repz
fisttp
xor
je
retf
test
out
pop
jne
data16
bound
and
xor
inc
sub
mov
in
into
pop
loope
mov
push
add
mov
mov
mov
mov
add
mov
or
pop
movs
and
test
pusha
adc
mov
pop
stos
cmps
ins
out
call
inc
aaa
or
jmp
aaa
sub
test
ds
fimul
dec
adc
mov
lods
mov
ds
test
pusha
fs
das
movs
mov
pusha
inc
push
sbb
jo
test
sbb
pop
(bad)
cmp
xlat
fnstcw
dec
add
enter
sub
jae
arpl
or
xor
das
pop
push
push
xor
mov
pop
loopne
mov
in
lea
cmc
mov
fmul
aaa
and
push
stos
xchg
mov
dec
sbb
stos
mov
enter
repnz
and
test
pusha
mov
test
(bad)
popf
add
out
xchg
lods
add
ds
mov
fst
mov
add
mov
xchg
imul
inc
jb
sbb
sub
mov
repz
jg
lds
ret
adc
cmc
inc
lods
mov
jne
mov
push
ret
imul
dec
push
sar
scas
jbe
and
or
adc
pop
jne
xchg
rcl
cli
cmps
scas
call
loope
cmp
sahf
pop
pop
cwde
js
pop
ficomp
pop
inc
xor
push
cwde
and
add
or
xchg
call
and
cmp
pop
dec
cmps
sahf
jecxz
jb
aaa
mov
cmp
xchg
gs
mov
mov
mov
xor
mov
cmc
into
xor
out
int
popa
rcl
sbb
pusha
je
push
cld
in
sbb
xchg
mov
pop
in
mov
jae
repnz
pushf
arpl
jecxz
rcl
je
mov
int
push
imul
xchg
pop
imul
mov
push
mov
cmps
mov
sbb
mov
mov
out
sub
call
push
mov
das
mov
cld
xor
cmp
push
cmp
xchg
inc
adc
lds
arpl
cmp
pop
dec
mov
add
adc
pushf
shl
pusha
ret
int3
pop
aam
shr
in
mov
dec
daa
imul
push
jnp
sahf
sub
adc
out
fs
jne
(bad)
mov
cmps
add
push
ret
add
nop
int3
xor
lahf
int3
pop
pusha
stos
ins
out
cmp
pop
outs
xchg
cmps
push
cmp
jno
mov
dec
jns
or
dec
push
loopne
hlt
call
mov
xor
inc
cmp
sub
and
aaa
pusha
not
cmps
add
mov
xchg
js
les
jno
pop
jae
mov
mov
mov
cmp
data16
xchg
ins
in
sub
clc
div
cwde
xor
pop
jle
in
movs
pop
mov
xchg
aaa
cld
repnz
fs
mov
dec
inc
push
(bad)
das
or
dec
pop
leave
imul
pushf
retf
push
inc
and
pop
inc
jnp
push
idiv
fwait
aas
cmps
sub
test
and
repz
aam
in
cmp
jno
jl
ja
mov
jp
dec
popf
add
dec
push
push
mov
mov
mov
push
fsub
in
or
xor
jecxz
dec
shr
and
xchg
inc
sbb
mov
out
stos
dec
int3
icebp
outs
sbb
xor
add
ja
push
add
addr16
pop
pop
mov
adc
ds
pop
movs
inc
xchg
in
test
jbe
(bad)
cmp
mov
adc
add
dec
and
and
(bad)
std
push
das
mov
xchg
cli
loopne
and
inc
scas
mov
mov
shl
stos
imul
add
dec
fisttp
sbb
or
nop
or
sub
adc
cmc
push
das
aaa
sub
push
bound
ror
fst
sbb
and
lods
push
rcr
and
imul
push
cmp
addr16
gs
jle
out
inc
push
jecxz
jo
je
fwait
outs
fisub
test
dec
xchg
push
jne
in
jmp
xchg
loope
lock
icebp
mov
repnz
push
mov
scas
stos
cmp
lock
adc
cmc
outs
cmp
push
xor
sub
js
cld
aas
(bad)
sti
push
(bad)
mul
pop
sbb
movs
cmps
sti
mov
and
fisttp
add
sbb
sbb
dec
cmps
jns
data16
imul
cmp
rcl
loopne
shl
jp
pop
inc
adc
(bad)
fimul
push
stos
in
mov
js
jl
test
aas
daa
cmps
sub
mov
test
push
ins
push
and
sbb
sar
jecxz
jns
add
lds
jmp
or
pop
dec
fisub
loopne
mov
jmp
leave
sbb
clc
pop
pop
(bad)
scas
aad
xor
scas
mov
je
mov
pop
xor
sbb
pop
dec
mov
(bad)
push
fmul
mov
dec
int3
cdq
out
xor
xchg
and
stos
inc
or
aas
xchg
stc
rcr
fist
sub
jo
inc
mov
pop
sbb
ins
push
sub
les
mov
and
lods
lds
mov
call
dec
jo
inc
and
mov
fnstsw
or
dec
aad
pop
not
repz
fild
inc
pop
das
pop
pop
fistp
loopne
add
lock
cld
jbe
push
and
pop
ins
jns
mov
das
push
cmp
es
shr
adc
cmp
mov
pushf
stos
sahf
push
loope
push
xchg
dec
pop
jno
xor
sub
das
dec
test
and
inc
call
cmps
into
mov
mov
pop
repnz
jnp
jbe
or
stos
adc
push
notrack
test
call
mov
out
xchg
inc
jnp
in
js
addr16
in
jle
jge
jmp
lods
(bad)
fld
push
push
stos
sbb
and
inc
sub
pop
dec
jecxz
and
scas
stos
repnz
shr
jns
dec
mov
bound
add
xchg
ja
ror
jo
mov
jmp
ret
sub
add
xlat
inc
pop
mov
push
dec
scas
aaa
nop
cmps
sbb
pop
push
sbb
test
lahf
std
adc
movs
add
in
addr16
push
ja
int3
or
shl
mov
fst
mov
jle
jb
push
in
daa
aad
xor
jmp
push
add
jae
mov
inc
idiv
out
popa
(bad)
add
add
mov
adc
mov
(bad)
pop
test
sbb
push
jge
mov
arpl
fistp
(bad)
sub
xor
inc
mov
lea
pushf
mov
dec
mov
outs
stos
sbb
rcr
xchg
pop
cmp
xchg
jmp
sub
push
push
pop
sbb
fs
lds
push
out
arpl
addr16
and
repz
jmp
cmp
sub
mov
int
xchg
mov
fcomp
and
stc
popf
ins
push
mov
dec
dec
aad
jno
repnz
jecxz
inc
call
pop
pop
stc
pop
call
mov
movs
adc
jae
push
into
adc
push
fs
push
push
sub
out
jne
scas
xchg
adc
lahf
out
test
sbb
pop
fidiv
inc
ds
div
stc
mov
stc
cmp
mov
es
xchg
shl
clc
shr
sub
aas
lods
mov
mov
or
jmp
data16
add
add
xchg
cwde
add
loop
hlt
and
xchg
and
xor
jbe
xchg
adc
xchg
cld
aas
icebp
cmp
aam
aad
loop
test
sbb
repz
leave
dec
pop
sbb
sbb
aam
jp
add
sar
jne
ds
push
pop
jl
mov
data16
scas
sar
ret
inc
add
movs
aaa
retf
xchg
lock
push
test
cmps
push
add
daa
fnstcw
add
iret
scas
xor
and
cmp
iret
jae
pusha
xor
add
cmp
cwde
xor
mov
add
movs
loop
adc
ja
iret
push
test
in
push
inc
aad
jae
shl
add
and
dec
aaa
neg
lods
xor
jne
ins
and
(bad)
jmp
jge
scas
shl
enter
push
sbb
repz
in
(bad)
push
pusha
or
mov
imul
rcl
mov
ins
dec
movs
xchg
or
xchg
sbb
fdivp
stc
ffree
xchg
xlat
jmp
jge
fxch
data16
xchg
and
inc
rcr
mov
adc
ficom
add
je
dec
je
sub
xlat
pop
mov
xor
push
outs
jmp
mov
mov
cmp
mov
rcr
aas
popf
fwait
out
out
rcl
(bad)
ficomp
cdq
or
retf
rcl
xchg
je
cmp
cld
xlat
jecxz
dec
jbe
xchg
dec
pop
fsubr
or
ins
xor
jl
push
pop
call
je
push
add
cmp
dec
pop
repz
lds
aam
in
mov
jne
jg
xchg
add
cdq
xor
imul
xchg
mov
xor
je
jb
(bad)
jnp
addr16
das
loopne
les
push
push
fstp
or
add
dec
hlt
and
sub
ret
xchg
popa
pop
loope
jge
test
jecxz
js
daa
pmovmskb
sub
je
fst
movs
push
fwait
sub
push
scas
call
daa
fst
scas
cmp
dec
mov
push
sar
jmp
sbb
sub
add
or
sbb
int3
popa
dec
cmp
lods
je
int
(bad)
lods
mov
fcom
inc
icebp
lods
push
popf
js
cmc
pop
mov
rol
push
test
(bad)
fsubr
inc
ja
test
jno
jb
sbb
ror
mov
adc
push
scas
jg
daa
pop
sbb
shr
xlat
(bad)
stc
lods
mov
adc
pop
jno
loopne
ss
movs
mov
clc
sbb
ret
out
rcl
adc
adc
in
push
test
test
mov
cdq
stos
shr
xchg
ss
add
push
cmps
and
shl
mov
xlat
fiadd
hlt
xchg
outs
dec
sub
jl
mov
inc
dec
xor
and
pop
xchg
mov
das
pop
or
pop
jecxz
lods
lsl
fst
mov
sbb
out
loopne
jo
mov
xor
dec
mov
xor
mov
mov
mov
movs
pop
mov
out
pop
movs
jg
mov
sbb
outs
or
xchg
mul
enter
ja
(bad)
out
sub
xor
aam
sbb
inc
or
dec
jle
outs
xor
cmp
lds
pop
in
and
test
push
sub
call
rcl
mov
enter
and
xchg
mov
(bad)
xchg
push
addr16
ins
jle
lahf
stc
xor
int3
jnp
rol
mov
inc
sbb
clc
or
push
mov
or
movs
cs
mov
xor
adc
fwait
push
dec
adc
mov
mov
fnstcw
xor
dec
retf
fisubr
jg
jae
xor
jmp
shr
or
push
repz
arpl
sub
sbb
out
cld
not
aam
out
call
inc
cmp
lea
test
inc
js
jmp
add
bound
outs
rep
mov
idiv
daa
or
pop
xchg
sbb
mov
dec
rcl
pop
nop
xor
fidiv
or
xlat
nop
mov
cwde
or
in
ds
lods
in
push
out
popa
test
cmp
inc
call
xchg
dec
repz
fwait
mov
mov
adc
in
pop
push
ja
addr16
nop
hlt
(bad)
stos
pushf
xchg
cmc
cmps
xchg
sbb
dec
fldenv
jp
(bad)
loope
rcl
test
mov
clc
pop
and
dec
push
nop
(bad)
imul
scas
jae
jae
enter
loop
dec
sbb
into
shl
or
lock
stos
and
jmp
pop
pushf
jb
fadd
xor
add
push
jecxz
mov
mov
dec
mov
pusha
add
popa
pop
adc
cld
sub
sbb
xchg
mov
iret
adc
mov
aad
or
sbb
mov
adc
adc
pop
mov
jle
aaa
lahf
test
outs
mov
xchg
sub
cmp
mov
jle
sub
or
add
loop
mov
xchg
cmp
inc
ins
mov
stos
addr16
ror
imul
sbb
mov
setbe
jne
pop
(bad)
sbb
adc
adc
(bad)
mov
dec
ror
adc
cmc
popf
sbb
enter
not
repz
sbb
pop
jmp
cmp
gs
mov
ret
fs
mov
jae
sar
addr16
inc
in
and
scas
enter
cs
pop
cmp
sub
ins
and
outs
ss
jbe
sub
clc
push
aas
cmp
out
push
mov
movs
outs
add
imul
fcmove
push
sub
xchg
dec
test
or
daa
in
gs
fnstsw
sub
fwait
rol
pop
inc
pop
xchg
mov
adc
mov
inc
test
daa
xchg
sahf
shl
aas
popf
out
ins
and
inc
ins
inc
lods
add
mov
mov
jo
retf
hlt
cmp
cmp
cmc
or
dec
xor
ret
xlat
push
cmc
cwde
adc
and
mov
pop
mov
int3
in
add
std
add
jnp
jo
adc
(bad)
shl
test
bound
imul
inc
cmp
pop
test
inc
movs
add
or
aas
inc
es
test
sbb
mov
jmp
les
jle
and
lods
mov
add
mov
fiadd
ror
xchg
jg
mov
loop
xor
mov
jae
or
add
movs
test
mov
or
pusha
js
adc
sub
fbld
cmps
retf
popa
inc
call
rol
out
cs
mov
adc
pop
xchg
and
enter
push
mov
mov
push
sub
push
cmp
xor
dec
lods
and
imul
sub
sub
mov
je
pop
pop
or
leave
dec
fdiv
or
xor
push
cmp
push
jmp
mov
mov
cmp
mov
dec
add
cmps
jg
(bad)
popa
xlat
sub
mov
daa
xor
jge
mov
rcl
lahf
xchg
fist
dec
cmps
das
mov
std
mov
sub
(bad)
push
fs
pop
into
cld
clc
add
fst
shl
add
mov
lods
add
pop
mov
add
imul
std
sahf
add
adc
jo
lods
mov
push
repnz
inc
jnp
lahf
mov
pop
xor
jg
jmp
out
retf
push
mov
mov
dec
sub
addr16
jle
mov
lods
hlt
and
shl
sub
add
out
fst
rcr
jne
jb
loopne
pop
ds
add
lods
xor
adc
in
pop
sbb
neg
icebp
std
aam
add
mov
mov
mov
xchg
std
pop
adc
ucomiss
ret
(bad)
or
adc
mov
mov
xor
sbb
outs
adc
jmp
mov
push
mov
lds
jecxz
in
retf
repnz
adc
inc
inc
call
mov
add
or
mov
sti
adc
aam
rep
adc
push
push
pop
iret
jle
jo
imul
test
xchg
and
aas
cld
lea
mov
pop
and
dec
push
sub
adc
test
(bad)
jnp
lods
aam
add
mov
fistp
fadd
test
leave
ss
dec
sbb
in
mov
add
sub
add
call
cdq
pusha
mov
sbb
imul
cmp
imul
test
lods
fcmovnb
and
and
inc
xor
outs
or
arpl
mov
data16
xor
fsub
dec
adc
jns
mov
jae
std
out
imul
inc
or
add
ins
push
lods
inc
jb
loopne
and
xchg
cmp
and
loop
mov
ins
mov
sbb
xchg
jmp
mov
xchg
(bad)
hlt
cmp
scas
out
jno
fldcw
adc
pop
fsub
xchg
mov
inc
mov
mov
fcmovnbe
sub
neg
lahf
lock
xor
jo
sbb
push
fld
or
sbb
cld
les
imul
shl
pop
cmc
aam
sbb
ret
fdivr
adc
rcr
and
cmp
enter
call
sti
or
push
arpl
or
sbb
xchg
sbb
(bad)
gs
add
scas
add
mov
cmp
mov
data16
dec
sbb
adc
popf
hlt
dec
add
loope
test
fnstenv
daa
xchg
xchg
lods
out
jmp
xchg
mov
ror
nop
push
rol
js
add
(bad)
out
adc
pop
pushf
xchg
mov
(bad)
cmp
push
sahf
(bad)
(bad)
icebp
mov
fcmovnbe
in
jge
stos
ret
sub
movs
sub
and
call
push
arpl
dec
outs
mov
and
dec
push
mov
mov
icebp
inc
imul
shl
std
inc
cmp
pusha
das
inc
nop
xor
ret
add
(bad)
hlt
jecxz
dec
mov
xlat
add
dec
jl
repnz
sbb
pop
inc
lds
jo
inc
add
ds
jl
(bad)
out
sub
or
int3
aaa
mov
push
dec
inc
cmp
cdq
inc
mov
call
sbb
je
pop
xor
xchg
cmp
idiv
or
gs
pop
fwait
leave
push
sbb
fadd
clc
add
push
imul
sub
and
or
mov
xchg
xor
mov
xchg
xchg
sub
mov
jo
dec
aam
(bad)
mov
add
mov
add
in
sub
lods
xor
mov
xor
pop
dec
int
mov
mov
popa
jb
push
aad
je
rol
jge
push
jecxz
or
gs
mov
sub
scas
sbb
adc
cmp
lea
iret
mov
sbb
xchg
sub
(bad)
out
xchg
cdq
inc
pop
shr
out
mov
and
xchg
outs
popa
sbb
lea
jp
fdivr
inc
push
lods
pusha
sub
jbe
mov
imul
(bad)
cmc
adc
shl
xchg
les
sbb
sbb
jle
jae
test
lods
add
or
iret
mov
loop
dec
mov
pop
inc
dec
mov
jmp
xor
mov
adc
sbb
jmp
rcr
jl
and
clc
retf
call
push
pop
ret
fild
cmp
scas
pop
mov
gs
rol
pop
cmp
inc
test
xchg
pop
pop
pop
jne
mov
mov
add
dec
hlt
xchg
sub
(bad)
mov
pop
sbb
jb
nop
out
or
leave
in
sbb
add
fidivr
mov
lock
push
pop
inc
push
or
jle
call
shr
aaa
lds
test
xchg
fucomip
ja
pop
jae
outs
cdq
pop
dec
ret
mov
fcomp
or
das
sub
lds
push
mov
mov
or
jge
cld
sbb
mov
xor
bound
fs
mov
pop
sbb
jg
xchg
call
add
mov
push
sbb
fsub
sub
fwait
hlt
sub
ret
and
sub
xor
movs
inc
xchg
mov
jo
outs
add
push
lock
lock
mov
cmps
(bad)
sub
add
jns
icebp
call
fiadd
add
cmp
add
xchg
xchg
xchg
dec
mov
daa
or
mov
aam
fs
test
or
jmp
inc
mov
test
pop
mov
enter
ins
or
shl
je
inc
data16
stc
sahf
shl
sub
dec
pop
frstor
movs
movs
je
sbb
adc
aaa
push
add
xchg
ss
adc
inc
cs
xor
mov
mov
jae
adc
out
int
mov
sbb
push
dec
test
sahf
mov
jmp
cmps
sbb
movs
ins
inc
inc
and
mov
cmp
mov
repz
std
rcl
leave
push
mov
popf
dec
add
push
loopne
pop
jmp
neg
movs
test
mov
jecxz
sub
pop
mov
sub
mov
inc
(bad)
jmp
imul
jp
cli
jmp
loope
and
add
in
loopne
xchg
xchg
add
arpl
fsubr
xchg
popf
cmps
dec
test
mov
lea
inc
add
(bad)
js
out
mov
mov
push
popf
fdivr
out
xchg
aaa
jge
and
dec
pop
pop
shl
sbb
into
fstp
pop
mov
nop
jno
dec
int
sub
xor
pop
imul
fistp
add
ror
ins
inc
adc
jge
dec
loope
out
ret
pop
mov
lea
pop
xor
(bad)
(bad)
xor
int
mov
icebp
jl
and
fwait
inc
dec
mov
jo
push
cdq
dec
mov
and
xchg
jb
out
clc
mov
not
retf
mov
mov
test
add
(bad)
cmp
mov
retf
and
rcr
and
lock
mul
adc
sbb
test
shl
inc
mov
jns
sub
rol
cld
cmp
call
cmp
aad
add
jmp
xchg
data16
mov
pop
xchg
sub
daa
jbe
ins
push
retf
xchg
cmp
in
mov
ja
cmp
aam
cli
xchg
fs
mov
pop
cmp
pop
(bad)
xchg
pushf
mov
push
loop
mov
add
pop
jmp
mov
lahf
cmp
es
adc
add
xchg
push
popf
bound
dec
mov
mov
push
inc
jne
icebp
mov
mov
or
in
xchg
push
jno
sbb
add
xor
mov
stos
and
push
nop
inc
mov
xchg
mov
movs
mov
retf
dec
push
out
cs
add
sbb
mov
xchg
inc
je
jb
in
int3
fwait
cmp
xor
cmps
retf
pop
or
mov
enter
xor
int
je
lods
push
ficom
sbb
push
in
mov
(bad)
aaa
lea
cmp
jmp
jp
aad
cdq
mov
dec
mov
cdq
and
sub
mov
aas
mov
loop
push
ret
sub
jns
das
fld
clc
adc
push
pop
lea
cmp
dec
adc
aas
fistp
or
scas
sti
jno
sbb
adc
ficom
inc
es
mov
inc
(bad)
cld
gs
push
mov
loop
ss
mov
je
test
out
icebp
and
(bad)
cmp
lods
jb
xor
call
mov
cmps
add
xchg
and
cs
cmp
push
xchg
lods
or
out
retf
mov
lock
dec
mov
daa
test
fidivr
cmc
jmp
lds
mov
jmp
out
(bad)
dec
xor
in
inc
pop
mov
pop
aad
lahf
pop
addr16
cmps
dec
fdiv
lar
xor
sahf
xlat
adc
push
mov
mov
test
xor
ins
nop
mov
out
and
lods
lods
popf
pop
fwait
xor
call
fwait
jecxz
adc
or
inc
and
mov
(bad)
fsub
daa
fwait
das
outs
scas
sbb
pop
mov
jmp
adc
imul
mov
pop
inc
mov
mov
inc
shl
mov
cwde
dec
adc
push
pop
in
mov
int
fs
inc
push
sbb
loop
mov
(bad)
sahf
jle
out
cs
nop
movs
addr16
(bad)
pop
xchg
inc
mov
or
and
test
jecxz
jno
lea
movs
lods
leave
add
hlt
dec
cmc
in
stos
cmp
pop
jl
cmps
xchg
aam
xchg
push
sar
adc
and
jo
in
imul
cmp
pusha
sbb
fwait
add
sahf
mov
push
inc
mov
je
push
or
add
fadd
arpl
sbb
pop
pop
sbb
out
jmp
xchg
ds
push
mov
and
fwait
imul
inc
jp
rcl
pop
dec
mov
dec
push
out
pop
dec
cmc
push
and
pop
jmp
mov
pop
push
inc
rol
mov
ficom
push
dec
add
test
in
sub
fidiv
aaa
sbb
cs
mov
(bad)
dec
repnz
mov
mov
push
ja
xchg
pusha
scas
pop
sub
ss
pop
call
in
jbe
push
sbb
es
push
push
xor
mov
and
or
and
into
out
mov
stc
jecxz
jbe
add
mov
xchg
repnz
mov
cmp
mov
(bad)
repnz
sbb
xchg
add
sbb
sar
rcr
xor
cmp
xor
mov
sbb
(bad)
push
mov
xchg
adc
xor
(bad)
xor
cwde
xchg
call
shl
xlat
mov
xchg
imul
sti
pusha
rol
dec
pop
mov
or
ret
xchg
mov
lea
sbb
mov
movs
out
push
outs
sbb
icebp
dec
add
imul
jmp
es
fisttp
jge
push
mov
sbb
xor
das
push
jne
scas
int
push
cld
iret
jle
xor
in
loopne
lds
retf
pushf
add
add
jecxz
mov
xor
pop
retf
pop
std
cdq
ds
lods
push
cld
xor
aaa
inc
int
pop
(bad)
and
(bad)
in
js
adc
int3
out
jmp
ja
xchg
mov
push
in
sub
lods
jg
adc
daa
jmp
cmps
cmps
push
pop
lods
lods
adc
adc
aam
xchg
mov
(bad)
push
push
mov
imul
out
ja
dec
add
push
cmp
xchg
or
scas
mov
imul
dec
cmp
mov
xchg
lahf
sahf
pop
ret
jle
add
inc
shl
mov
pusha
and
(bad)
lahf
aas
fucom
fild
mov
stc
add
pop
adc
sbb
jg
ja
fnsave
pop
fcom
loop
jp
dec
cwde
out
adc
mov
dec
lds
inc
cmps
and
ror
adc
int3
lea
test
push
aaa
dec
mov
jge
adc
sti
int3
mov
dec
cdq
je
imul
cmp
loopne
fisub
test
imul
shr
jle
hlt
shl
data16
mov
and
add
jp
cmc
push
ins
cmps
push
inc
gs
ficom
fwait
xor
(bad)
ja
dec
fnstsw
sbb
aaa
in
stc
sahf
pop
push
mov
mov
adc
ja
dec
push
sub
cwde
or
xchg
and
xchg
loop
or
pushf
cmp
lahf
cvtpi2ps
mov
jecxz
xchg
mov
xor
adc
mov
popf
pop
mov
jmp
call
mov
add
aas
xchg
push
or
adc
(bad)
repnz
sar
cmp
out
les
xchg
scas
mov
xor
cld
and
cmp
mov
cmp
inc
mov
leave
pop
(bad)
mov
jae
inc
push
mov
pop
movs
jge
dec
popf
stc
cwde
jmp
cmps
push
xchg
ins
cmp
xchg
and
in
in
jne
cmp
fist
mov
hlt
push
jmp
cdq
pop
inc
and
and
jbe
call
jbe
inc
dec
into
out
test
mov
inc
mov
pop
stc
mov
xchg
mov
inc
fldln2
out
cmp
adc
cdq
mov
add
sti
shl
outs
push
fsub
mov
mov
(bad)
cdq
push
sbb
dec
sbb
push
xlat
retf
cmps
pop
ds
retf
pop
mov
lods
and
psubw
sbb
xor
ss
jo
mov
jmp
or
xlat
mov
sahf
loop
movs
not
pop
push
gs
jbe
xor
call
loop
arpl
popf
cmps
mov
inc
xchg
aam
xor
aaa
sub
cmp
xor
in
jecxz
cmp
jbe
leave
loope
pop
cli
add
jae
mul
pop
push
mov
add
ret
or
jmp
leave
jmp
inc
dec
rol
pop
jl
jecxz
dec
out
icebp
adc
test
fadd
scas
mov
cwde
xchg
mov
mov
dec
loopne
sti
adc
cmp
jmp
shr
add
or
in
and
rcr
hlt
out
and
sub
and
and
jmp
cmps
pop
outs
int3
or
imul
(bad)
mov
fld
dec
in
and
fst
jnp
sub
mov
bound
jo
sbb
mov
mov
push
pop
ret
inc
addr16
xor
xchg
cwde
pop
cwde
popa
inc
pop
ficom
push
inc
xlat
push
js
mov
jnp
enter
test
addr16
lods
leave
pop
jmp
mov
adc
adc
hlt
dec
test
out
ds
xchg
push
stc
dec
fisub
call
adc
test
imul
cmp
cmp
inc
inc
lock
cmp
push
cmp
jge
lea
fld
int
js
mov
and
mov
push
in
push
bound
xlat
ficom
and
dec
dec
dec
fist
mov
icebp
enter
mov
fdiv
mov
jecxz
movs
sbb
add
sbb
rep
lock
test
stos
adc
xchg
sahf
jle
push
arpl
xor
das
or
int
inc
(bad)
dec
mov
and
in
rcl
push
dec
out
sub
xor
jp
ret
adc
dec
pop
jno
(bad)
fs
xchg
add
jl
add
push
jge
adc
aam
push
push
rol
or
inc
pop
xor
sbb
cmc
cld
fiadd
ss
sbb
mov
fisubr
sbb
mov
sbb
cwde
pop
mov
and
add
mov
cdq
dec
dec
jns
sub
push
adc
ret
sbb
jnp
rcr
sbb
dec
xchg
aad
xchg
icebp
mov
mov
pop
pop
neg
mov
adc
frstor
(bad)
mov
data16
cmc
xor
fdivr
add
mov
and
pop
(bad)
push
mov
jb
push
cmp
pminsw
shl
xchg
retf
pop
repnz
sub
adc
cmps
jp
retf
out
jp
aam
inc
sbb
mov
cmp
jle
shr
mov
sub
mov
xchg
dec
popf
mov
jb
out
fwait
ret
mov
sbb
push
dec
loope
jo
rol
out
mov
pop
inc
adc
addr16
xchg
enter
je
test
repnz
(bad)
std
sbb
ror
lahf
dec
push
add
inc
mov
adc
push
jmp
xor
and
cmc
iret
std
mov
and
dec
push
cmp
shr
pop
out
xchg
and
sub
dec
inc
addr16
cmps
mov
scas
mov
pop
adc
loop
gs
sti
(bad)
sbb
cmp
fdiv
mov
in
adc
in
xlat
push
push
shl
push
or
fdiv
or
lock
xor
mov
scas
push
aaa
fsubp
cmp
jbe
pop
jns
add
push
iret
xchg
hlt
int3
loope
cld
xor
sbb
mov
aam
cmps
fs
xchg
mov
in
and
jne
xchg
xchg
clc
dec
shr
fstp
push
jmp
daa
clc
sti
xchg
sub
cmps
shr
jge
xor
fisttp
xor
cmps
movs
popf
out
push
aam
(bad)
pop
ficom
inc
push
into
push
push
data16
lods
inc
pop
jae
cmps
sub
sbb
js
dec
push
mov
fs
jmp
es
cmp
jg
ret
pop
idiv
int
mov
jae
out
addr16
test
cmc
imul
das
or
jo
sub
cmps
cvtps2pi
or
sub
push
jle
mov
leave
mov
sub
outs
add
adc
arpl
enter
adc
jnp
(bad)
fwait
push
adc
inc
ret
xor
xor
rol
sub
mov
fist
sar
js
xchg
mov
cmp
jno
push
mov
sti
push
and
mov
shl
xchg
scas
inc
mov
mov
pop
xlat
jnp
pop
shl
sub
mov
adc
outs
jle
sub
movs
inc
xchg
push
jp
jo
test
in
lods
mov
sbb
pop
mov
sub
ins
fidiv
ret
adc
add
leave
push
out
xor
xor
ficom
jp
adc
lock
mov
rcr
stos
ja
cdq
xchg
scas
and
pop
shl
data16
test
je
fmul
leave
add
pop
cmp
dec
out
outs
sub
mov
mov
mov
push
jae
bound
repnz
sti
sub
cmp
adc
and
lea
sbb
xor
cmp
mov
xchg
lock
inc
xor
xchg
mov
ins
mov
lock
pop
or
mov
arpl
out
sahf
sub
jle
jp
aam
mov
xor
mov
test
mov
popa
outs
and
enter
inc
mov
jns
in
aas
enter
sub
les
sbb
popf
aas
cmp
sti
dec
aam
xor
inc
push
leave
mov
pushf
aam
(bad)
cmps
sub
imul
std
iret
adc
ins
push
cmp
push
xor
push
sbb
pop
lds
nop
sbb
sub
ja
cwde
repz
add
loopne
pop
jne
call
and
fs
scas
xchg
movs
sub
adc
scas
movs
sbb
pop
mov
add
mov
xchg
xchg
jp
or
outs
loop
add
dec
lock
pop
iret
es
add
stc
pop
imul
lods
addr16
lock
icebp
push
ins
add
add
inc
pusha
sbb
cld
cmp
hlt
ss
aaa
hlt
hlt
ss
mov
aad
sbb
sub
mov
pop
push
gs
and
in
dec
std
fdivr
mov
cld
outs
pop
adc
sub
stc
pop
jl
push
aaa
loopne
es
xchg
lahf
add
cmp
or
fcmovnbe
cmps
sbb
dec
outs
mov
cmps
pop
jns
adc
and
aaa
sbb
mov
out
not
out
jg
adc
rol
jmp
ins
aas
jl
jge
mov
loope
lods
shr
mov
pop
(bad)
scas
push
(bad)
in
mov
stc
loop
jae
and
sbb
dec
adc
push
sbb
aaa
inc
in
sbb
adc
jle
xor
pop
push
adc
in
aam
pop
push
push
mov
pop
pop
popf
sbb
inc
mov
push
mov
add
jg
call
inc
mov
mov
inc
sbb
jnp
adc
adc
jae
xor
and
or
mov
gs
adc
add
and
fst
push
mov
cmp
xchg
and
test
in
adc
fsubr
gs
add
mov
lahf
pop
fwait
mov
sbb
cmp
add
mov
pop
out
dec
dec
shr
fucomp
sub
imul
(bad)
retf
xor
dec
dec
inc
xchg
test
push
adc
jnp
les
push
ins
and
mov
xchg
(bad)
xchg
cmc
(bad)
jbe
retf
mov
push
or
test
inc
inc
out
in
sbb
mov
and
dec
pop
stc
rcr
aam
pop
mov
mov
ins
dec
xchg
or
dec
(bad)
or
cmps
push
mov
ins
cmp
push
xchg
int3
scas
repnz
mov
sub
aam
(bad)
into
pop
mov
jmp
cmp
(bad)
push
cmp
rol
cmp
xchg
lahf
xchg
push
outs
inc
add
xchg
sbb
push
mov
hlt
stc
shl
mov
or
cmc
pop
adc
cmp
jns
push
data16
and
jecxz
and
pushf
pop
or
add
mov
dec
stos
fcomp
fidivr
pop
pop
and
cmp
jo
pop
push
repz
and
pop
sub
gs
hlt
sub
cmp
pop
or
push
cdq
jnp
cdq
mov
pop
mov
cli
retf
ja
imul
aam
xor
or
(bad)
mov
in
sbb
inc
inc
cmp
inc
pushf
std
xchg
sub
sbb
sub
mov
xor
inc
hlt
xor
rcr
scas
inc
mov
sahf
test
mov
push
add
lahf
mov
or
mov
dec
adc
xchg
xchg
in
cmp
popf
jnp
xor
inc
in
adc
stos
adc
out
adc
push
xor
in
jle
aas
jmp
mov
call
push
lea
fwait
test
dec
not
mov
jbe
mov
ds
je
pop
div
cmp
movs
popf
xchg
clc
fdiv
push
cmp
cmp
pop
sbb
shl
jnp
loopne
stc
js
ficomp
imul
idiv
mov
xchg
xchg
mov
adc
lock
jbe
ret
iret
cmp
lods
pushf
dec
cmp
test
cmp
ret
out
xchg
call
sub
ficom
pop
arpl
push
push
xlat
adc
pop
bound
jnp
fst
mov
lds
rcr
xor
mov
xor
scas
and
xchg
cmc
repnz
arpl
jp
mov
inc
xchg
aad
mov
inc
push
pop
and
sub
sbb
cmc
xor
mov
jge
push
data16
fwait
daa
sbb
jg
(bad)
jp
xor
cmp
xchg
mov
rcr
cmp
lods
or
push
cdq
out
pop
sbb
sub
mov
je
cs
dec
into
mov
in
xor
sbb
out
cld
call
in
jl
push
bound
aas
iret
jae
jge
test
jmp
mov
sets
shr
test
add
movs
or
repz
xchg
mov
rcr
jnp
fwait
ins
push
ins
test
add
or
push
and
xchg
es
test
cmp
cmp
xchg
mov
add
ret
(bad)
stos
mov
mov
mov
mov
cmc
inc
xor
scas
mov
xchg
xor
fsub
outs
jecxz
xchg
sub
xor
mov
in
push
dec
leave
cmc
cdq
ja
shl
jle
mov
pusha
add
bound
add
sbb
js
pop
xor
inc
xlat
pop
sub
cdq
mov
mov
dec
fcmovnbe
fisttp
sub
repz
jmp
sbb
push
or
push
call
jbe
jns
adc
cmp
(bad)
pop
ins
add
loope
push
sar
mov
jmp
add
rcr
xor
mov
imul
add
dec
cmp
xor
std
jg
push
hlt
pop
mov
out
enter
jmp
call
sahf
cld
sub
scas
xlat
and
cmp
sbb
pop
shl
cdq
push
sbb
push
and
and
push
dec
inc
jb
int3
sub
sbb
popa
fld
scas
add
aas
ds
inc
ret
shl
loope
fbld
les
jbe
xchg
data16
dec
bound
or
xchg
(bad)
mov
mov
pop
pop
les
sbb
lods
imul
jp
cmp
adc
xchg
pop
xchg
inc
mov
(bad)
fcomip
xchg
sub
sub
mov
stos
jns
and
pop
mov
movs
inc
rcr
cdq
xor
mov
hlt
dec
inc
sbb
sbb
(bad)
(bad)
push
xchg
mov
xchg
jecxz
mov
mov
sbb
mov
cmps
fidivr
ss
sbb
imul
mov
pop
jl
push
adc
pop
dec
mov
mov
gs
and
sub
cmc
fisubr
jle
mov
ds
mov
dec
stos
outs
push
scas
adc
pop
cmp
push
add
repnz
ins
inc
dec
sub
xchg
xor
or
push
(bad)
fist
push
jl
cwde
scas
jne
xor
push
cmps
jl
sbb
out
cmp
add
fbld
add
cmp
xchg
add
mov
scas
cli
pop
dec
xchg
or
je
inc
ins
cmc
xchg
jg
adc
dec
outs
fidiv
pop
mov
and
pushf
push
(bad)
cdq
xor
push
adc
xor
sar
xor
dec
popf
(bad)
out
mov
inc
sahf
jl
fcomp
lods
out
dec
call
mov
shl
mov
adc
adc
movs
fmul
pop
out
sub
inc
fs
xchg
lods
enter
in
mov
mov
fwait
in
push
mov
mov
out
mov
inc
icebp
jnp
mov
pusha
inc
jbe
adc
ja
lock
and
jle
in
inc
pop
loopne
sbb
imul
js
mov
lea
int3
mov
xor
push
jb
arpl
ins
xor
adc
rcl
cmp
pmullw
or
sub
call
add
jecxz
in
mov
adc
inc
mov
fidivr
gs
std
mov
(bad)
pop
aad
(bad)
cli
lods
cdq
xchg
fst
mov
mov
add
mov
cs
xor
add
lock
sub
adc
jne
lods
sbb
sahf
xor
in
mov
inc
call
or
dec
out
int
out
scas
ror
xor
imul
inc
mov
jl
imul
retf
stc
push
xlat
jge
push
pop
ins
sub
shl
add
push
popf
sub
outs
dec
shl
stc
or
jge
shl
scas
bound
sbb
mov
ficom
cs
add
(bad)
xchg
push
jg
adc
dec
call
mov
into
dec
xchg
fwait
jb
push
push
loope
and
push
jne
dec
dec
add
jmp
pop
push
(bad)
rcr
jne
repz
or
pop
dec
mov
mov
ret
test
loope
stos
pause
mov
arpl
and
(bad)
idiv
shr
add
xchg
xlat
sub
mov
pop
adc
call
pop
jg
sub
push
clc
cmp
push
xchg
inc
and
in
sti
xchg
cmps
xchg
and
retf
jae
cmp
mov
mov
mov
add
mov
inc
jo
movs
or
call
out
pusha
adc
call
ja
(bad)
mov
cmp
pushf
inc
nop
xlat
pop
aas
out
mov
stos
xchg
hlt
add
mov
pop
push
xor
push
test
jge
cmps
fcom
inc
jae
sub
mov
(bad)
pop
cmp
xor
pushf
clc
adc
sar
dec
enter
into
neg
mov
xchg
out
fnstsw
push
fcomp
aam
popf
dec
int
inc
(bad)
dec
cmp
pop
cmp
pusha
add
int
jo
inc
test
pop
lock
int3
push
scas
je
sti
call
loope
scas
scas
(bad)
out
push
(bad)
mov
and
or
cmps
out
les
or
ins
pop
fwait
xor
ret
xchg
or
icebp
retf
jne
out
rol
and
icebp
fst
push
daa
jnp
jnp
mov
push
dec
scas
xchg
fdiv
cmps
lods
xchg
dec
pushw
push
add
test
shl
scas
and
sub
cmp
cmp
scas
add
jne
aad
mov
(bad)
inc
das
popf
sub
pop
push
adc
stos
mov
jmp
inc
cmp
jnp
sti
push
js
std
cmp
push
mov
push
mov
aaa
loop
cmps
pop
(bad)
jnp
mov
sbb
es
out
icebp
in
sbb
sbb
bound
sbb
add
aad
sbb
xchg
or
mov
ret
fsubrp
jp
xchg
adc
jp
mov
(bad)
add
and
mov
movs
popa
xchg
cmc
rcl
add
aas
push
cli
cs
cmp
(bad)
jl
imul
mov
push
adc
xor
dec
nop
inc
add
mov
popa
jb
enter
cmp
mov
mov
add
mov
call
int
jo
pop
lds
outs
add
ds
imul
stos
inc
pop
loopne
je
xlat
mov
push
stos
pop
imul
ret
dec
cmp
pop
mov
push
ror
sar
daa
inc
push
inc
jp
in
xlat
jno
hlt
push
mov
pop
pop
push
lea
add
aas
add
jb
aam
popf
cmp
call
xor
popf
fsubr
call
imul
imul
not
loop
ja
pop
inc
dec
rol
cmp
mov
scas
sub
mov
cli
xchg
not
xor
sar
sti
fist
retf
push
xor
pop
popf
jle
sub
mov
adc
repz
out
jmp
fsub
idiv
push
mov
pop
push
outs
into
inc
repz
jge
inc
dec
cld
adc
sar
mov
and
sbb
repnz
push
jg
popa
lock
mov
jl
push
jb
inc
sbb
fsub
pop
mov
pop
std
jnp
pop
xchg
mov
imul
sub
push
imul
inc
add
imul
pop
xlat
push
or
test
inc
cmp
cmp
int
sbb
and
xchg
push
push
out
and
out
inc
bound
jmp
mov
call
xchg
sub
jl
daa
dec
xor
jle
fldenv
and
sbb
push
fnstsw
in
in
jb
or
ins
add
and
sub
mov
sub
lods
xor
pop
jecxz
mov
cmps
jmp
in
jge
hlt
and
inc
cs
iret
rol
(bad)
lock
stos
leave
punpckhwd
gs
fldenv
arpl
in
adc
or
push
in
push
jo
cdq
cmp
sbb
leave
mov
add
dec
repnz
cmp
stc
sbb
rcr
jns
fwait
xlat
jmp
pop
sbb
or
out
ss
mov
cmp
sub
icebp
lods
mov
pop
xor
and
pop
pop
mov
cmps
outs
ret
retf
lods
stos
pop
mov
mov
in
jg
sbb
xor
sub
jle
bsf
sub
xor
outs
inc
cmp
push
fcom
dec
ja
xchg
cmp
jmp
push
mov
fisttp
push
sub
cwde
cmp
pop
push
jl
sbb
pop
sub
add
test
sbb
push
xchg
xchg
in
pop
xchg
call
pop
popf
stos
mov
pushf
std
ds
mov
loop
push
rcl
nop
not
cmp
out
lods
aam
cli
stc
imul
cmp
movs
loope
xchg
mov
cmp
repnz
dec
xchg
or
dec
ds
or
aas
or
sub
mov
out
cmp
mov
retf
jnp
scas
das
mov
and
imul
xchg
(bad)
sar
xchg
push
and
out
inc
add
xor
mov
arpl
les
cmps
xor
fs
jecxz
xchg
inc
jmp
movaps
and
stos
or
pusha
sbb
and
jge
sub
hlt
je
mov
aam
mov
dec
jp
dec
sub
iret
and
test
in
pop
aas
xchg
sub
xor
out
sbb
xor
fist
mov
and
in
xchg
cmp
fs
ret
xor
ds
sub
add
inc
or
adc
push
push
mov
inc
mov
mov
and
retf
push
das
stos
stc
imul
push
out
lahf
adc
mov
and
jb
sbb
jnp
inc
pop
pop
aas
out
adc
mov
cmp
cs
xor
and
jecxz
ds
mov
push
pushf
stc
(bad)
mov
(bad)
sbb
mov
inc
cmc
jnp
jbe
mov
cmp
xchg
mov
mov
cwde
sub
ins
shr
das
and
cmp
xchg
jae
mov
mov
test
add
xchg
sbb
mov
sub
jns
jbe
pop
mov
jo
cmp
push
addr16
out
imul
lods
cmp
push
call
pop
mov
lahf
shr
sahf
fstp
outs
mov
inc
call
ds
dec
mov
imul
pop
jmp
cmc
dec
inc
out
push
sub
ja
hlt
pop
js
or
push
jmp
cmp
cmp
std
fsub
sbb
nop
xlat
jmp
pop
adc
(bad)
std
mov
movs
(bad)
mov
push
loope
and
sbb
inc
clc
dec
sbb
jbe
push
(bad)
fmul
shl
xchg
dec
xlat
jbe
shl
add
in
ss
dec
pop
loope
jle
add
fdiv
ins
jo
js
mov
cli
cmp
into
jmp
dec
ret
sub
aam
jg
inc
in
pop
push
dec
push
dec
adc
outs
xchg
xchg
inc
mov
fwait
ss
aaa
xchg
addr16
jmp
int
arpl
cmp
stc
cmp
ja
cmp
mov
out
jns
xor
jp
jne
adc
or
inc
aaa
daa
nop
mov
loopne
pop
data16
les
xchg
xor
mov
sti
cmp
dec
mov
and
imul
cld
scas
mov
mov
pop
mov
cmp
call
adc
shl
pop
fbstp
mov
mov
inc
jmp
mov
cdq
xchg
out
mov
mov
pushf
mov
sbb
(bad)
jne
dec
iret
ret
sub
jb
mov
rcr
in
test
mov
sbb
ror
retf
xlat
mov
in
sbb
hlt
outs
mov
cdq
dec
jae
popf
aas
jne
(bad)
push
add
inc
mov
cwde
and
adc
xchg
popf
in
das
pop
jle
(bad)
jmp
push
push
and
pop
mov
mov
sub
ret
jns
cmps
xchg
shl
xor
sbb
sahf
(bad)
and
dec
cmps
rol
out
repnz
jae
mov
outs
leave
sub
ins
data16
or
mov
adc
cmp
inc
mov
(bad)
push
je
ret
pusha
int3
jnp
into
hlt
(bad)
leave
cmps
pop
sub
dec
test
jmp
aas
inc
popf
sbb
cli
and
lahf
adc
ja
das
cmc
in
sbb
jge
pop
ror
adc
sub
lds
mov
stos
mov
and
jecxz
mov
jl
jp
imul
les
jb
or
sub
test
mov
xor
pop
and
les
pop
mov
lahf
cld
call
mov
mov
fdivr
cmp
movs
(bad)
xchg
cmc
cmp
mov
jno
dec
call
outs
sub
pushf
addr16
jl
enter
in
mov
addr16
es
fcom
xchg
into
dec
push
(bad)
pop
cdq
into
mov
out
or
fild
ffree
and
loopne
xor
iret
pop
or
fistp
pop
int
sti
sub
sbb
cdq
rol
inc
dec
push
jmp
cmp
aad
cmp
ss
cmp
mov
or
add
mov
cdq
dec
xchg
jae
in
push
outs
adc
loopne
outs
push
mov
mov
fucomi
lds
xchg
cmp
pop
loope
pop
ret
adc
add
mov
sti
xchg
(bad)
xor
dec
(bad)
loopne
enter
push
push
jl
mov
xor
jg
(bad)
fldcw
pop
mov
les
mov
pop
shl
mov
and
(bad)
repnz
imul
stos
sub
xlat
call
dec
ss
mov
or
sbb
mov
jl
mov
or
sbb
in
xlat
mov
call
adc
ss
mov
jl
lea
rol
cwde
mov
xor
cmp
push
mov
rol
add
jg
es
xor
mov
ss
jno
hlt
cmp
and
xchg
push
pop
mov
mov
xor
cld
sbb
std
out
adc
pop
pop
sbb
stos
ins
daa
mov
mov
icebp
mov
out
push
xor
mov
popf
movs
jl
clc
adc
adc
jp
sub
outs
jo
push
mov
mov
cmp
int3
in
cmp
ret
popf
push
iret
lock
call
xchg
mov
inc
xchg
imul
das
dec
xlat
fnsave
or
fdiv
test
(bad)
loopne
pop
mov
ror
cmps
aaa
xchg
or
clc
gs
mov
sbb
dec
fsubr
add
xchg
pop
and
push
lods
cli
gs
and
popf
push
push
aad
or
fidiv
enter
or
cmp
test
pusha
sbb
or
or
jg
ds
call
mov
xor
fs
scas
mov
xor
sub
push
fbld
pop
ds
outs
jmp
repnz
sub
bound
jne
xchg
movs
(bad)
mov
lods
xor
push
test
in
inc
mov
jno
mov
cs
js
pop
ja
and
push
mov
add
cmp
sbb
push
inc
jg
xor
mov
cmp
mov
ror
xor
mov
mov
shl
mov
dec
das
cmp
push
mov
fnstsw
ja
adc
retf
xchg
scas
sub
popa
cmp
push
sbb
int
(bad)
sar
jmp
sysexit
fdivr
fdivr
test
add
dec
push
mov
xor
and
movs
and
and
sahf
mov
and
jle
aaa
xor
lods
push
dec
imul
js
mov
sahf
fimul
nop
out
cmps
daa
and
lods
cmp
aad
data16
outs
xor
mov
and
mov
cld
cmp
add
or
arpl
push
jne
clc
add
or
rcr
aas
ret
pop
jmp
jle
jl
hlt
imul
in
out
mov
pop
pop
sub
out
arpl
xchg
sub
pushf
fild
sub
mov
aas
sbb
sub
inc
push
dec
add
mov
xcrypt-ctr
cmps
pop
xlat
jge
pop
push
es
jb
mov
jmp
mov
jne
sar
ror
pop
pop
test
rcl
jbe
iret
cmp
sbb
scas
clc
popa
mov
adc
xchg
mov
pop
add
pop
icebp
sbb
leave
out
pusha
mov
push
bound
popf
mov
fimul
add
jbe
xchg
int3
or
dec
pop
sbb
dec
push
(bad)
cmp
add
add
ds
push
jne
pop
loope
ret
add
inc
pop
sbb
xor
(bad)
in
and
test
add
mov
and
jnp
jl
inc
cmps
pop
cmp
es
in
loopne
mov
test
and
add
mov
ins
inc
das
jmp
(bad)
fimul
lods
xor
push
retf
sbb
(bad)
ss
mov
and
ret
sub
and
adc
mov
inc
fcomip
loopne
scas
xchg
inc
cmp
adc
rol
loopne
mov
xchg
pop
add
and
mov
sbb
or
scas
inc
js
push
daa
jp
inc
fstp
clc
int
jmp
mov
or
retf
imul
mov
and
dec
inc
arpl
mov
jo
add
cmp
mov
xor
jbe
dec
add
sbb
ds
lock
pop
add
jno
jb
pop
test
pushw
ror
push
jecxz
fbstp
fcom
dec
add
clc
(bad)
sub
repz
call
in
retf
out
mov
repnz
loopne
mov
fs
mov
xchg
dec
adc
push
or
dec
dec
inc
lods
add
(bad)
dec
push
pop
ror
mov
sub
sbb
mov
pop
lods
push
(bad)
cmc
retf
in
mov
call
fstp
mov
shl
scas
in
push
cmp
movs
das
sub
out
gs
and
test
pop
stc
add
cmp
(bad)
fild
cmc
test
bound
pop
jbe
push
nop
imul
lea
rcr
lock
repz
cmp
mov
push
loopne
cli
test
push
sahf
xchg
shl
push
xor
push
popa
imul
aas
arpl
retf
dec
outs
push
sub
dec
pop
sbb
sbb
popa
push
aas
push
xchg
and
in
mov
xchg
shl
xor
sbb
jle
sbb
inc
mov
(bad)
add
or
call
(bad)
pusha
cmp
out
(bad)
out
sbb
xchg
test
adc
sub
mov
sub
inc
movs
sub
sbb
cld
stc
arpl
dec
icebp
jb
fnstsw
pop
push
imul
shr
into
or
push
add
xchg
repz
inc
mov
pop
jns
icebp
jge
in
add
adc
push
nop
pop
test
dec
jge
and
(bad)
ss
(bad)
jmp
movs
adc
xor
dec
sbb
cmp
test
stos
jb
and
repz
cmovo
pushf
and
fdiv
outs
mov
test
out
retf
gs
sbb
push
mov
mov
fild
bound
dec
mov
pop
sub
in
jp
rcl
cmp
int3
inc
inc
sti
adc
leave
outs
call
adc
loopne
pop
jmp
push
je
sub
jg
dec
push
(bad)
scas
test
stc
(bad)
jp
and
in
sbb
movs
sub
mov
xchg
push
sub
push
leave
aam
pop
and
rcl
jnp
mov
data16
fwait
jmp
hlt
dec
pop
and
xchg
jecxz
ss
lds
into
cmps
ror
push
dec
mov
into
mov
mov
in
sub
cmp
add
sub
sub
pop
sbb
mov
shl
xor
test
pop
call
jl
call
sub
or
mov
jmp
adc
pop
sub
or
add
(bad)
sbb
cmp
mov
jp
xor
loop
imul
gs
shl
jno
push
fild
dec
push
jmp
mov
clc
push
ror
test
out
call
mov
or
inc
sbb
int3
dec
jl
mov
dec
js
mov
fidivr
or
push
inc
pop
xor
or
sar
leave
sbb
pop
xlat
mov
mov
out
xchg
add
add
add
movs
add
and
dec
data16
jge
and
test
icebp
imul
loope
shl
ret
(bad)
ror
jmp
push
mov
bound
xchg
ss
sbb
(bad)
cmc
iret
adc
pop
xchg
xlat
mov
cmp
outs
stos
in
dec
sub
mov
cmp
ins
and
pop
out
sbb
jae
not
mov
(bad)
cmc
sbb
cs
xchg
movs
add
(bad)
mov
pop
out
test
loopne
mov
and
xor
mov
(bad)
pop
clc
iret
jl
jl
arpl
mov
js
addr16
fidiv
adc
or
or
int3
mov
jb
lahf
pusha
dec
cmp
inc
int
in
pop
xor
stc
jns
dec
loope
adc
or
dec
cmp
(bad)
cmp
push
bound
cmps
retf
sub
inc
push
add
mov
data16
js
jbe
cmp
add
ja
pop
push
leave
inc
push
adc
(bad)
cmp
cmp
add
hlt
inc
cs
loope
pop
loop
add
std
movs
inc
mov
push
mov
dec
pushf
sub
mov
mov
and
adc
xchg
out
popa
in
cmps
mov
mov
(bad)
mov
pushf
and
jne
inc
inc
dec
mov
adc
pushf
fld
mov
lea
or
pop
pop
mov
or
cmc
es
sbb
xchg
std
xor
cmp
clc
xor
sbb
scas
or
and
stc
ins
xchg
xchg
xor
add
(bad)
aad
enter
lods
jmp
mov
mov
mov
pop
jg
inc
hlt
adc
movs
cwde
sub
cmp
dec
pop
mov
cmp
add
fs
pop
xchg
mov
cmp
mov
fstp
cmps
xor
inc
jbe
sbb
xor
ret
pop
gs
adc
mov
retf
mov
add
push
mov
push
or
mov
fiadd
adc
imul
mov
out
icebp
adc
jns
(bad)
mov
mov
cmp
sbb
xor
cld
mov
xchg
scas
ja
cwde
cs
xor
fwait
xchg
pop
ret
mov
fdivr
aaa
aad
mov
ds
call
mov
push
fcmovu
test
lods
repnz
shl
push
test
and
mov
pop
pop
icebp
mov
cmp
sub
xlat
jb
not
xchg
jb
xchg
jmp
frstor
lahf
jnp
mov
(bad)
cmp
xor
jg
mov
icebp
inc
cmp
xor
jmp
adc
pusha
jge
sub
pop
icebp
jg
(bad)
adc
xchg
cmp
adc
or
jns
pop
(bad)
fcomp
fisttp
xchg
mov
(bad)
stc
out
push
push
movs
daa
add
jmp
xchg
jl
(bad)
inc
ficom
adc
mov
adc
hlt
jecxz
adc
adc
add
std
jge
push
mov
push
dec
cs
fidivr
retf
and
loope
push
dec
bnd
cmc
push
shl
mov
int
mov
in
in
xchg
(bad)
add
xor
sub
mov
and
add
sub
es
loope
jmp
movs
add
sub
xchg
and
cmp
retf
jecxz
(bad)
jg
shl
xor
pop
xchg
mov
out
mov
xor
es
push
and
xchg
mov
mov
addr16
mov
jge
jo
into
cmp
push
mov
xor
xor
dec
data16
push
xchg
pop
fimul
mov
jg
shl
les
xchg
loop
mov
nop
mov
(bad)
ins
loopne
inc
xor
cld
cmp
test
or
sub
mov
out
stos
mov
imul
out
sbb
mov
sti
cmp
mov
je
enter
inc
test
dec
in
enter
push
fwait
out
call
xchg
sub
das
jl
jecxz
jecxz
mov
adc
mov
pop
js
xchg
cmp
hlt
pushf
call
pop
jl
scas
push
xor
dec
inc
and
xchg
add
test
fisubr
imul
cmc
mov
sub
test
call
push
lea
mov
pop
push
cmp
and
sbb
cmps
pop
or
dec
sub
retf
sbb
mov
aam
xor
je
lahf
push
int3
cmps
in
sub
mov
sbb
and
(bad)
leave
mov
cdq
fmul
jbe
ret
pop
es
adc
xor
jmp
pop
test
mov
outs
mov
and
adc
sbb
cmp
jno
inc
push
cdq
inc
fisub
mov
or
xlat
mov
cli
adc
xchg
push
adc
xor
inc
fnstsw
xchg
std
out
jle
xchg
arpl
stc
pop
or
sub
jg
mov
inc
mov
sar
lea
popa
mov
mov
addr16
(bad)
sbb
jne
adc
call
dec
outs
xchg
push
fist
pop
or
(bad)
sbb
sar
sbb
sub
outs
jp
mov
daa
mov
or
in
adc
cmp
int3
dec
(bad)
repnz
mov
pop
nop
outs
mov
mov
(bad)
dec
addr16
lods
jae
rcl
sub
xchg
rol
inc
mov
sub
push
outs
bound
fcom
dec
shl
mov
and
cmp
pusha
fwait
call
and
push
cli
cmp
inc
hlt
repnz
aam
out
cmp
dec
inc
aam
dec
jg
(bad)
or
inc
movs
pop
in
add
xchg
pushf
fldenv
pusha
xchg
add
neg
cmp
push
push
outs
repnz
int3
imul
add
mov
cmps
inc
ds
cmp
add
es
inc
inc
cmp
cmp
hlt
(bad)
fwait
pop
add
aaa
pop
ret
daa
(bad)
bound
fisubr
call
inc
push
and
shl
sysret
and
ins
imul
mov
push
fs
outs
btr
rcl
or
push
out
call
popf
ja
aad
(bad)
jmp
mov
mov
in
je
xor
cmc
dec
dec
pop
ret
cmps
movs
test
in
into
dec
div
push
movs
push
loopne
(bad)
jmp
call
enter
xchg
jp
sbb
mov
push
cdq
test
mov
add
push
mov
rcr
mov
or
movs
or
sti
sti
pop
push
fcomp
fistp
aad
cmp
sbb
add
inc
cmp
xchg
mov
cmp
push
out
jle
pushf
adc
inc
lods
(bad)
in
idiv
int
aam
daa
mov
jns
cdq
loope
pop
push
stos
fwait
push
push
pop
out
pop
outs
xchg
pop
lods
and
sbb
inc
sbb
mov
add
pop
sti
mov
adc
inc
add
and
pop
xchg
(bad)
xor
pusha
inc
test
jmp
push
jge
cld
fs
lock
mov
aam
push
in
dec
movs
shl
push
inc
int
mov
popf
pushf
adc
mov
cmc
xchg
sub
lods
(bad)
test
jg
mov
jnp
bnd
sbb
out
jl
jb
movs
mov
sub
push
int
bnd
pop
clc
js
sub
imul
pop
inc
mov
and
inc
push
(bad)
jmp
adc
adc
and
test
daa
gs
loop
mov
repz
adc
xor
rol
stos
dec
push
push
das
jbe
fwait
jae
adc
mov
dec
xor
js
jne
mov
pop
(bad)
int3
jmp
rcr
test
(bad)
ss
mul
not
(bad)
int3
xor
mov
sbb
fld
add
idiv
inc
adc
and
std
mov
aas
js
leave
jns
mov
pop
cwde
xlat
sub
push
in
push
push
(bad)
cdq
and
mov
xor
mov
jnp
inc
into
mov
into
arpl
cs
clc
ins
test
cmps
mov
cli
mov
jns
xor
push
inc
es
enter
iret
mov
bound
xchg
sub
push
call
mov
push
sti
out
dec
lea
mov
sbb
dec
and
fcom
outs
mov
loop
loope
clc
(bad)
sti
xchg
les
xchg
(bad)
dec
sbb
adc
or
xor
sar
rcr
mov
fs
push
inc
(bad)
push
in
out
js
pop
push
and
loope
pop
leave
ret
or
push
ja
stos
pop
cmps
pop
xchg
mov
pop
pop
sti
sbb
call
rol
mov
imul
adc
mov
retf
xor
xchg
cs
push
xchg
and
js
test
xchg
std
cmp
xlat
(bad)
and
mov
pslld
ja
mov
dec
iret
mov
leave
jno
fcomp
adc
nop
enter
adc
push
add
dec
pop
add
pop
fs
daa
aam
dec
dec
addr16
outs
adc
popf
ret
or
shl
sub
mov
mov
or
lds
mov
add
mov
jmp
jns
movs
mov
mov
daa
jmp
dec
adc
inc
movs
push
cwde
cmc
fstp
pop
push
or
cmc
xchg
mov
mov
shl
inc
fild
or
adc
sbb
aaa
bnd
fiadd
mov
jl
inc
stc
int3
sub
es
in
ror
dec
mov
cmp
mov
and
pop
out
xchg
out
shr
inc
inc
pop
fnstsw
xchg
aas
sbb
dec
or
jmp
ins
cwde
jl
jg
xor
or
cvtdq2ps
out
test
pop
repnz
cmp
mov
xchg
ins
jns
mov
fst
aas
xlat
hlt
sbb
push
nop
dec
(bad)
aaa
and
test
jne
rol
repz
lods
jp
movs
iret
lea
jl
(bad)
enter
xchg
rcl
mov
inc
xchg
and
mov
push
xlat
stos
or
and
or
nop
pop
(bad)
retf
sub
jbe
fcom
cwde
jmp
int3
pop
mov
mov
and
push
or
aas
lock
js
and
push
adc
pop
aaa
aaa
xlat
mov
out
mov
xor
movs
mov
shr
or
clc
ret
aam
fidivr
(bad)
add
aad
dec
sub
inc
inc
inc
push
cli
jno
mov
mov
mov
ror
xor
std
lahf
cmp
pushf
rcr
scas
push
je
test
jg
das
dec
cli
dec
pop
jmp
cmp
in
mov
cs
mov
jae
jae
push
pushf
inc
je
xchg
add
(bad)
adc
je
pop
aam
cli
popf
cmp
movs
xchg
or
add
pop
pop
les
movs
sahf
je
rol
pop
pushf
jns
fist
fcmovnbe
out
adc
or
lea
pop
div
inc
loope
ss
or
jae
cmp
rcl
jg
int3
push
mov
dec
int3
cmp
inc
das
xor
mov
movs
sar
xchg
mov
push
test
ins
stc
adc
lock
jne
pop
jb
aam
stos
mov
rcl
pusha
into
sahf
retf
inc
popf
push
sbb
push
stos
stos
pop
xchg
mov
cmp
or
mov
repnz
pop
push
inc
xchg
fisttp
mov
add
pop
test
es
clc
fs
xchg
vcmpss
rol
pop
imul
cmps
fild
pop
inc
or
adc
xchg
out
not
or
outs
aam
xchg
in
push
out
daa
cmc
and
lods
ds
mov
iret
and
xor
loop
cdq
xchg
cmps
aas
cmp
jns
mov
sbb
out
(bad)
jnp
push
sub
xchg
xchg
jbe
in
lock
movs
cld
ja
call
std
inc
mov
pop
outs
and
add
movs
aam
pusha
pop
test
jns
inc
(bad)
adc
outs
sbb
inc
arpl
pop
imul
jg
icebp
repnz
stos
mov
shr
adc
fcmovnb
or
push
ret
std
xor
mov
push
dec
add
fild
shl
or
out
mov
and
stos
jmp
mov
fidiv
push
gs
sub
sub
call
pusha
adc
push
neg
mov
jmp
dec
or
xchg
(bad)
das
aam
mov
lea
pop
mov
es
imul
repnz
mov
inc
mov
xchg
or
cmp
or
pop
dec
xchg
(bad)
in
icebp
jbe
mov
and
int3
adc
icebp
hlt
retf
lock
jmp
dec
xor
jp
dec
inc
mov
popf
pop
call
inc
and
add
dec
mov
add
bound
mov
lods
test
in
xchg
push
shl
bound
mov
shr
xchg
and
loop
outs
and
lea
push
call
int
stos
cmps
cbw
and
popa
jo
dec
ja
(bad)
mov
sub
aas
mov
mov
cmp
add
pop
mov
retf
inc
and
or
dec
retf
jnp
loope
test
mov
mov
inc
jmp
cmp
in
sbb
outs
movs
push
mov
inc
in
add
loopne
jb
scas
jnp
or
sar
fwait
movs
arpl
movs
jne
sub
mov
mov
loop
std
ins
into
pop
clc
cmp
shl
aaa
(bad)
jle
gs
ja
int
pusha
int3
sub
ss
xchg
jae
ja
in
xor
mov
fist
call
mov
aas
mov
ja
push
frstor
push
lods
inc
in
ja
or
jno
cmps
cmp
jp
adc
mov
xor
or
adc
test
jne
inc
dec
push
jle
push
inc
int
pop
out
hlt
push
sbb
cmp
sub
xchg
mul
jo
into
xchg
loop
xchg
cwde
out
inc
pop
jns
mov
cli
sbb
xor
sub
mov
push
shr
sbb
pop
cmp
mov
add
jmp
(bad)
pop
stos
dec
bound
movs
imul
push
(bad)
sbb
rcr
and
jmp
loop
cmp
ja
mov
pop
pop
xchg
xor
in
pop
dec
std
and
or
sbb
xchg
jo
mov
dec
mov
loope
mov
rol
push
rol
dec
sub
out
pop
inc
scas
mov
jp
sbb
pop
add
loop
jmp
xchg
cmp
push
stos
cmc
push
sti
cmp
call
rol
inc
mov
mov
adc
xor
fsubr
sub
xor
shr
je
xchg
pop
ss
int
or
adc
adc
inc
adc
mov
mov
dec
in
pop
and
daa
fwait
idiv
out
aam
push
inc
cmp
cwde
add
xchg
fdivr
pop
mov
fld
add
jb
test
xor
std
and
rcr
jl
xchg
pop
fadd
aam
mov
cmc
mov
adc
repz
mov
in
inc
add
cmps
shl
pop
jecxz
jnp
sbb
xchg
leave
mov
fdiv
nop
imul
rol
or
es
ins
inc
add
jmp
xchg
dec
and
pop
mov
dec
call
cmp
(bad)
xor
mov
fwait
call
mov
sub
lock
jmp
push
popa
pop
sbb
std
add
ror
test
js
push
sar
shl
div
retf
mov
push
out
in
cmp
pop
and
jecxz
or
jp
cmp
or
mov
cmp
pusha
sti
xchg
jnp
sahf
test
cmp
mov
push
shr
loope
rol
or
dec
push
sub
mov
jge
ins
mov
das
push
xchg
js
leave
add
inc
fucomi
mov
cmp
retf
js
mov
std
lods
pusha
jmp
sbb
or
sbb
sbb
push
(bad)
call
cmp
dec
jp
cmps
dec
or
fucomp
scas
pusha
dec
inc
cmps
add
fdivr
adc
(bad)
adc
into
shl
cmp
push
or
sub
add
jno
lds
push
(bad)
adc
in
or
pop
dec
xor
cwde
aad
mov
adc
aaa
or
adc
(bad)
hlt
cwde
mov
loope
(bad)
adc
cmp
stos
push
mov
ins
inc
mov
sahf
lock
test
out
data16
loopne
fsub
fwait
in
cmc
sub
call
mov
imul
xor
test
mov
imul
mov
in
fstp
popf
pop
or
rcl
loopne
pop
fdiv
iret
dec
jae
mov
xor
xor
mov
push
rcr
ins
ds
in
loope
pop
jb
mov
in
adc
lea
add
scas
(bad)
dec
ds
push
lods
out
jns
bound
inc
sbb
mov
inc
ins
jge
imul
push
ret
leave
leave
push
xor
and
jle
jg
pop
sub
inc
xor
add
addr16
std
adc
inc
sbb
sub
cmp
and
mov
mov
adc
xchg
cmp
adc
adc
mov
adc
mov
xor
sbb
xor
stos
xor
out
cmp
movs
fild
cs
mov
mov
jl
jb
jo
jl
out
jo
cs
xor
mov
and
(bad)
cld
popf
scas
xor
fnstsw
lods
mov
hlt
daa
xor
dec
fsubp
mov
sub
fnsave
cs
add
xor
movs
adc
retf
dec
mov
retf
ffreep
daa
ins
cmp
push
pop
je
push
xchg
xchg
ret
mov
or
cdq
stos
(bad)
cmp
or
loope
test
mov
ret
lea
stos
ds
fsub
jns
mov
dec
out
(bad)
out
mov
mov
fisub
enter
shl
xchg
inc
sub
inc
pop
pop
test
jecxz
or
pop
sub
pop
pop
les
in
jl
and
add
add
in
in
pushf
xchg
jmp
ins
xor
sub
and
es
pop
cld
mov
xchg
sbb
pop
cmp
mov
pop
and
adc
int3
int
push
mov
stos
cmc
push
sub
mov
dec
(bad)
lods
add
or
xchg
sub
ins
adc
(bad)
ss
jns
push
dec
sbb
lods
cmp
sub
cmp
mov
mov
into
scas
leave
mov
inc
mov
std
aad
ja
shl
mov
xor
mov
cwde
js
push
pop
sahf
pop
jo
fwait
mov
mov
mov
jbe
xor
mov
sbb
rcl
inc
lock
mov
sub
test
ret
pop
mov
lods
(bad)
mov
movs
push
dec
mul
sub
cmps
mov
mov
jge
add
sbb
mov
rol
inc
mov
pop
xchg
mov
test
hlt
js
hlt
sbb
out
xchg
adc
sub
inc
xchg
clc
scas
out
dec
adc
jmp
cs
scas
or
xchg
or
cmp
or
fidiv
test
mov
test
mov
std
das
push
xchg
push
xchg
loop
into
jb
sbb
ins
cli
inc
ss
sbb
imul
sub
xor
arpl
jne
dec
fistp
mov
mov
aas
pop
cmp
lea
loope
pop
and
xchg
fisubr
mov
fucomi
xlat
xchg
sti
mov
xchg
ins
mov
add
mov
pusha
pop
xor
pop
mov
inc
inc
aad
mov
into
cdq
out
arpl
jae
ror
inc
jb
out
repnz
sub
dec
jnp
les
xlat
add
(bad)
push
dec
les
cmps
daa
and
pop
(bad)
gs
arpl
cmp
add
pop
jbe
out
stos
adc
add
jle
dec
shr
mov
xchg
pop
repz
adc
leavew
ins
jl
test
sub
test
movs
jb
push
add
mov
mov
imul
mov
and
or
sti
pusha
lock
test
push
test
nop
loopne
test
and
inc
fs
pop
sbb
icebp
mul
jp
mov
add
mov
(bad)
retf
rol
and
sub
add
dec
das
mov
loope
dec
inc
xchg
lahf
jo
add
fcos
pop
jmp
mov
adc
or
mov
leave
dec
iret
cli
clc
mov
sbb
jmp
mov
adc
nop
test
pop
ds
mov
fwait
pop
xchg
rcr
scas
dec
mov
xchg
jno
mov
(bad)
and
mov
and
lods
imul
inc
in
jmp
xor
mov
cmp
ins
pop
adc
inc
pusha
add
cmp
call
fst
dec
inc
repz
loope
mov
dec
add
ret
mov
sahf
jnp
add
test
ret
inc
pop
inc
test
inc
test
out
push
(bad)
aaa
out
mov
xchg
nop
stc
jb
dec
pop
sub
sbb
cmp
sbb
push
enter
bound
fwait
sub
sub
je
lahf
cli
xchg
xchg
lods
xlat
jno
pop
cmp
cdq
push
push
fwait
js
pop
xor
loop
or
ret
inc
xchg
call
or
lahf
loope
xor
jmp
clc
enter
add
stos
jg
(bad)
cmp
or
adc
pop
dec
mov
xchg
stos
cmp
cmp
mov
push
icebp
adc
add
inc
dec
das
out
imul
in
lahf
pop
dec
pop
loope
call
jb
or
icebp
mov
pop
jo
dec
mov
mov
aas
int
push
out
fs
(bad)
push
jl
pop
inc
popa
inc
pushf
add
sbb
jmp
pop
sub
push
and
test
mov
adc
or
aaa
out
movs
sub
push
push
js
rol
mov
mov
dec
or
fisub
(bad)
cld
stc
inc
adc
inc
js
jns
out
cli
push
cmp
push
mov
lea
push
cmp
jb
push
fdivr
dec
daa
stos
xchg
popa
sbb
jge
ds
dec
leave
gs
retf
sbb
mov
xor
hlt
test
sub
sbb
(bad)
sti
jbe
leave
sub
in
or
mov
add
mov
loope
inc
int
outs
or
xor
inc
adc
xchg
stc
mov
jb
out
es
sub
push
je
inc
push
ss
inc
or
std
dec
test
repnz
fiadd
jbe
jo
rcr
fwait
mov
jae
or
dec
cmp
add
js
dec
mov
inc
push
xchg
ja
or
lds
inc
es
inc
or
inc
ret
pop
xor
pop
mov
add
pop
imul
push
fcomi
sub
xlat
and
rol
cdq
clc
push
popa
dec
cmps
rcl
test
(bad)
mov
iret
mov
cmc
aam
iret
push
cmps
movs
call
mov
cs
mov
test
push
sub
adc
lods
mov
pop
xchg
ja
cmp
and
sbb
mov
out
out
push
add
imul
stos
fmul
pop
mov
push
xor
js
rol
sbb
sub
inc
cwde
lock
pop
cld
push
cmp
cmp
lods
mov
add
dec
push
inc
ds
pop
jg
in
out
je
in
das
dec
in
jl
sahf
repz
push
rcr
or
push
push
cs
mov
shl
out
test
imul
in
(bad)
popa
lds
mov
mov
cmp
jl
pop
pop
adc
cdq
add
sbb
inc
pop
mov
loop
cmps
pop
mov
std
ror
lods
(bad)
and
test
int3
mov
jecxz
test
inc
xor
mov
adc
test
aas
hlt
in
sti
fistp
pop
fdivr
mov
mov
retf
add
sub
(bad)
xor
xchg
push
int3
sti
rcr
inc
mov
mov
inc
mov
int
ja
and
jle
xor
jg
xchg
icebp
dec
sub
pop
bound
dec
push
out
ja
outs
inc
mov
inc
push
call
pop
xchg
pop
icebp
aaa
rcr
adc
cwde
xchg
xor
adc
push
inc
cwde
(bad)
cld
sub
cmp
retf
jle
xchg
fdiv
mov
je
repz
and
jecxz
imul
cmp
daa
inc
stos
dec
es
mov
(bad)
mov
fmul
scas
add
stc
xchg
int3
inc
and
push
push
fld
popa
mov
jmp
xchg
xor
and
jns
icebp
jecxz
sbb
or
hlt
(bad)
push
fidivr
je
or
das
push
adc
jb
loop
ins
test
mov
scas
test
xchg
retf
outs
call
or
push
dec
mov
sub
mov
dec
adc
sbb
leave
add
dec
mov
ja
mov
xlat
mov
jnp
clc
pop
push
mov
cmp
(bad)
push
xchg
or
push
imul
pop
stos
sti
xor
out
jnp
pushf
pop
or
hlt
jge
cmp
cmp
mov
sahf
pop
pop
mov
ret
mov
retf
lock
loop
rcr
cmps
jb
rol
dec
and
xor
sbb
and
(bad)
inc
(bad)
fstp
ds
cmp
push
sbb
xchg
jae
in
mov
push
not
add
inc
cmp
push
mov
xchg
sub
(bad)
repnz
out
push
lahf
fstp
or
ins
(bad)
arpl
cmp
daa
xchg
mov
lods
dec
dec
jmp
sub
aaa
(bad)
adc
sub
into
fsub
inc
das
sbb
hlt
cdq
hlt
hlt
and
and
stos
movs
pop
test
movs
xchg
sbb
loopne
outs
mov
aam
pop
popf
es
loopne
mov
mov
add
test
fisttp
popa
std
dec
repz
loope
test
jecxz
mov
jne
push
or
cmps
cmps
stc
or
push
lahf
movs
call
pushaw
outs
mov
mov
sahf
xchg
dec
push
or
das
mov
adc
adc
adc
stos
xor
inc
push
mov
xor
jecxz
ror
in
and
push
xchg
int
sub
js
pusha
adc
fld
jo
aaa
cmps
fnstcw
call
fisttp
jl
pop
add
push
dec
imul
xchg
pop
jge
jl
inc
adc
mov
cld
sbb
jl
in
jecxz
pop
cmp
add
test
xchg
(bad)
es
pop
xor
lods
jp
leave
cmp
lea
jle
retf
test
inc
add
sub
jns
add
push
sbb
inc
mov
push
push
scas
icebp
les
jno
jne
add
mov
pop
ins
mov
cmp
shr
adc
rcl
das
pushf
pusha
in
mov
sbb
and
dec
out
ror
push
cli
daa
outs
arpl
cwde
cmps
and
cwde
fwait
xsaves
inc
mov
xchg
push
add
mov
fs
aam
dec
and
ja
xchg
dec
mov
sti
xor
xor
sub
push
xchg
stos
sub
mov
in
idiv
cmovno
push
aas
lea
nop
pop
test
dec
push
jns
or
mov
push
cmp
sbb
sti
sbb
sub
push
push
push
call
push
cdq
cmc
sub
addr16
cld
inc
test
and
outs
out
shr
pop
pop
xor
out
ins
xchg
pusha
cmps
idiv
cmp
adc
aam
jne
les
fucompp
ds
mov
adc
push
jb
dec
rcl
mov
lock
into
stos
sbb
jg
mov
repnz
jbe
mov
sbb
int3
enter
ja
jnp
fucom
int
je
addr16
sub
imul
test
push
cdq
stos
xor
push
pusha
in
ja
test
cmc
call
out
fadd
inc
mov
sub
or
jno
das
sub
sbb
in
adc
ins
fdivr
inc
xchg
adc
xor
loope
push
in
and
xchg
and
ins
inc
(bad)
out
shl
stc
mov
mov
add
sbb
pop
into
push
cli
test
outs
jle
ins
imul
mov
std
xchg
push
or
mov
(bad)
mov
mov
loope
xor
repz
test
outs
pop
call
mov
addr16
sti
cmps
repnz
data16
xchg
adc
push
push
repnz
data16
loope
mov
test
adc
ret
jp
push
test
imul
hlt
dec
in
movs
rcl
jne
fisub
aas
inc
xor
push
lock
push
es
retf
cmps
or
std
adc
inc
dec
and
bound
pop
add
xor
mov
jp
jo
cmp
aam
mov
pop
mov
dec
aad
inc
faddp
dec
add
fist
jne
mov
adc
push
mov
xlat
and
pop
pop
sar
and
cli
cmps
mul
push
daa
pop
pop
sti
and
ret
and
movs
dec
cwde
mov
mov
leave
sub
push
call
cmp
pusha
cmp
xchg
dec
int
dec
addr16
ins
sar
jns
ds
jg
fistp
mov
outs
add
or
repnz
mov
shr
stc
push
fnstsw
or
xor
add
stos
mov
add
rol
pop
inc
les
and
pushf
outs
sub
stc
sub
mov
inc
(bad)
adc
or
cli
inc
ins
std
test
xchg
rol
lods
outs
xor
jo
cld
add
push
lods
xchg
push
sahf
dec
sbb
xchg
jne
out
dec
sub
pop
loopne
push
xchg
cdq
push
inc
stc
fdiv
push
fcmove
fwait
add
jle
ins
or
test
inc
mov
in
push
sub
push
lds
jb
sbb
pop
inc
xlat
pop
aaa
in
add
arpl
inc
out
add
dec
mov
cmc
loopne
push
fidivr
jae
mov
les
into
and
shr
jmp
aaa
xchg
hlt
push
or
mov
ret
je
mov
mov
jae
jnp
mov
dec
push
and
stc
inc
jmp
sub
jg
in
daa
fdivr
movs
in
rcl
into
pop
xchg
lss
ror
ins
jnp
pusha
in
rol
inc
aaa
lods
stos
push
cmp
in
(bad)
xor
ret
lock
sub
dec
and
xchg
mov
mov
hlt
xlat
sbb
pop
(bad)
outs
sahf
mov
xchg
push
test
sub
sbb
mov
pop
dec
or
test
out
xchg
mov
add
aas
jecxz
movs
data16
and
scas
add
iret
dec
in
fild
mov
enter
int3
loope
aad
mov
push
mov
and
jge
push
fmul
js
aaa
adc
scas
cmp
push
imul
imul
push
loope
jp
ret
es
loope
out
jg
and
cdq
imul
inc
imul
out
pop
das
jecxz
push
nop
mov
push
iret
cld
mov
push
test
and
bnd
(bad)
cmp
mov
aaa
clc
cmp
jne
mov
sub
jmp
retf
adc
fsubrp
jb
xor
fmul
sbb
pop
cmp
xor
mov
std
add
sti
mov
mov
sub
xchg
jge
and
pop
sbb
lods
xchg
fisubr
jo
add
das
mov
jmp
fstp
in
sbb
cmps
movzx
dec
icebp
pop
pushf
(bad)
pop
pop
cs
fdiv
out
sub
mov
jge
pop
(bad)
sti
and
sbb
dec
xor
and
dec
sbb
and
xlat
lds
jmp
enter
mov
push
stc
dec
and
(bad)
in
push
lods
cmp
in
stos
add
cli
jo
pop
mov
(bad)
inc
bswap
mov
xor
fwait
adc
fistp
mov
mov
test
mov
dec
enter
call
add
jno
retf
icebp
retf
adc
in
dec
cmp
test
(bad)
and
aam
jb
and
mul
outs
imul
fs
mov
repz
sub
aaa
cdq
mov
xlat
repz
jmp
cmp
fistp
cmp
xchg
in
les
xor
pop
in
xor
out
xor
cmp
xlat
push
xchg
push
arpl
inc
jg
mov
scas
(bad)
loop
add
dec
repnz
xlat
icebp
pusha
inc
icebp
sub
imul
sbb
push
test
xchg
leave
test
sbb
leave
fstp
mov
sub
lods
sahf
imul
test
sbb
xor
icebp
outs
push
push
rcr
(bad)
push
jne
repz
cmp
(bad)
pop
mov
test
push
ins
add
or
jmp
mov
or
cli
jno
dec
sub
(bad)
inc
je
add
out
xchg
or
jo
dec
ficom
out
stos
loop
lods
dec
mov
jnp
and
mov
sub
pop
xchg
xor
sbb
or
nop
js
lahf
xchg
out
or
repnz
xor
scas
cli
imul
loope
aas
ret
add
outs
(bad)
fwait
cmc
add
stos
ret
out
stc
cld
xchg
push
xchg
dec
into
and
dec
fs
in
fistp
inc
sub
(bad)
fist
aad
std
test
cmp
(bad)
push
and
push
icebp
pop
stos
mov
jnp
retf
adc
mov
bound
bound
mov
test
xchg
and
xchg
push
cli
add
stos
dec
mov
out
sub
out
es
fs
pop
and
(bad)
(bad)
or
sub
and
pop
jns
cmps
daa
clc
out
loop
fs
jnp
jnp
icebp
mov
xchg
xor
popf
mov
cmp
movs
xor
cli
(bad)
aad
cwde
test
push
cld
jp
loope
pop
loopne
push
jno
fcomp
sub
xor
inc
push
xchg
jno
mov
inc
out
out
sub
test
push
jo
sbb
retf
push
je
ins
push
lock
ret
jno
mov
mov
xor
test
gs
dec
jmp
and
clc
or
cli
cmp
loopne
mov
retf
cmp
not
push
add
in
lods
xor
and
lds
in
scas
repnz
test
out
mov
or
cmp
inc
aam
dec
cmps
dec
mov
or
in
push
push
ss
test
sub
push
cmp
xor
repz
stos
sahf
sar
loopne
retf
iret
cld
jl
jno
mov
push
sbb
(bad)
fcomp
and
sub
sub
adc
add
mov
scas
push
imul
ins
xchg
std
(bad)
push
inc
imul
mov
(bad)
jnp
loopne
xadd
pop
outs
mov
gs
lods
das
mov
adc
sbb
pop
push
sti
fistp
jo
mov
dec
inc
ins
aam
iret
xor
call
inc
inc
js
ss
shr
inc
sub
les
sub
fmul
xchg
jno
mov
xchg
je
js
jbe
scas
loop
mov
addr16
xchg
call
popf
xchg
std
fild
fdivrp
and
(bad)
fisttp
shl
dec
sbb
iret
rcl
dec
mov
mov
test
jne
inc
xchg
xor
mov
sbb
clc
js
push
and
sbb
mov
les
dec
dec
pushf
jp
bound
and
loopne
mov
cmp
mov
imul
mul
xor
sbb
nop
repz
jg
out
cmps
and
sbb
cmp
int3
test
shl
sub
out
xchg
dec
arpl
fnstsw
call
push
mov
test
lods
ret
call
xchg
scas
mov
pop
popf
ins
fdivr
out
leave
lods
mov
push
shr
das
sbb
in
push
and
dec
xor
(bad)
mov
sbb
jle
(bad)
add
inc
rcr
js
mov
push
inc
mov
movs
shr
inc
cmp
mov
lods
mov
test
cwde
jb
pop
lahf
push
push
fisttp
push
xor
jb
mov
sub
xor
fiadd
push
aaa
aas
jne
xor
or
pop
(bad)
es
lahf
frstor
(bad)
jmp
jg
rcr
and
sub
cli
retf
sete
shl
data16
fnstenv
call
xor
mov
shl
pop
push
push
xlat
pop
inc
xor
in
shl
daa
pop
or
addr16
jns
mov
pop
and
ret
in
aam
mov
xor
adc
fild
pushf
mov
mov
test
or
ficomp
rep
rcl
pop
arpl
add
repz
sub
pop
or
cmp
sbb
mov
dec
in
das
cwde
pop
sub
pop
icebp
pusha
mov
pop
push
inc
stc
dec
jp
mov
or
xor
vmovaps
gs
das
fistp
(bad)
dec
pop
sub
cmps
ss
shl
gs
stos
sub
xchg
pop
push
lock
fistp
and
pop
jo
mov
push
jg
shr
shl
in
gs
jne
repz
jmp
retf
pop
cdq
jmp
jp
cmp
ss
clc
or
pop
sbb
int
or
xchg
mov
clc
lds
les
fwait
retf
fstp
out
movs
add
jge
fcomp
cmps
mov
sbb
mov
lahf
cmp
push
sar
clc
enter
inc
popa
xor
fsubr
jo
enter
movs
mov
int3
ds
ficomp
ficom
dec
xor
push
ja
fs
mov
jge
sbb
data16
cmp
mov
push
in
(bad)
dec
cld
mov
lock
adc
dec
dec
add
cwde
push
int3
ror
sub
ins
cmps
mov
jae
fwait
mov
dec
arpl
cs
pop
xchg
pusha
or
mov
(bad)
cmp
int
ins
cmp
inc
iret
fisub
call
push
pop
outs
dec
in
dec
pop
mov
sbb
addr16
into
stos
in
clc
into
call
lods
(bad)
imul
cs
adc
(bad)
fdiv
xchg
enter
movs
mov
lods
leave
inc
in
popa
push
jp
add
xor
and
mov
jbe
rcr
sbb
dec
mov
mov
cmp
jae
xchg
pop
outs
inc
cmp
xchg
repnz
into
sbb
sub
xor
mov
ins
test
or
sti
jo
in
xor
mov
leave
mov
jbe
test
sub
aaa
or
sbb
jge
je
movs
cmps
push
gs
inc
mov
adc
aam
or
icebp
(bad)
imul
lods
js
add
mov
jmp
push
mov
xchg
mov
nop
dec
mov
gs
mov
adc
(bad)
retf
fwait
xor
sub
jmp
inc
jns
out
mov
jmp
jno
pop
jecxz
mov
jns
addr16
jb
hlt
sbb
xchg
mov
adc
call
adc
icebp
fwait
and
jae
push
push
cmp
gs
mov
mov
es
cli
pushf
push
mov
mov
inc
pop
push
je
retf
push
into
fld
out
lods
add
push
jb
mov
mov
push
xor
into
imul
inc
mov
pop
xchg
xchg
push
xchg
push
add
dec
mov
cmp
jge
leave
call
add
rol
dec
push
cmp
adc
retf
add
mov
push
jbe
iret
fist
mov
lahf
push
xor
adc
jmp
aaa
not
fs
sbb
mov
call
lods
outs
jle
push
xor
das
outs
and
jp
mov
or
out
ret
cmp
cmp
mov
in
dec
xlat
rcr
retf
adc
xchg
nop
pop
mov
popf
sbb
call
lods
xchg
fdivr
mov
popa
sbb
movs
test
push
or
data16
or
pop
cmc
stc
in
sub
icebp
outs
xor
scas
inc
jecxz
inc
(bad)
fst
add
mov
lea
mov
shr
aam
push
lahf
rcl
lds
or
cmp
int
jns
fisttp
jmp
xchg
aam
cmp
sbb
jbe
inc
cdq
(bad)
jmp
dec
(bad)
inc
pop
or
outs
sbb
(bad)
xlat
sbb
jne
out
fldenv
jl
ror
xchg
mov
gs
mov
pusha
ret
popa
sbb
sub
enter
mov
mov
repz
out
mov
popa
xor
in
jne
repnz
push
jg
push
repnz
sub
je
std
sbb
into
or
popf
or
jg
repz
jg
mov
mov
ins
in
out
add
xor
jb
gs
test
int3
lods
movs
mov
stc
jp
movs
popa
sub
mov
sub
in
add
mov
idiv
ss
or
mov
cmp
mov
sub
mov
mov
xchg
jge
sbb
jns
mov
push
add
jno
std
mov
ds
xor
gs
push
inc
dec
jne
ror
add
aaa
les
pop
retf
add
or
jp
iret
adc
pop
outs
aam
mov
leave
shr
aam
inc
cwde
or
adc
jle
add
cmp
sbb
retf
add
pop
jp
xor
ds
addr16
fcmovnb
cwde
add
call
xor
jns
sti
push
sub
sbb
sub
js
pop
movs
aas
cmp
mov
repnz
loop
push
add
outs
mov
push
out
inc
sub
mov
bound
in
rcr
mov
cli
ds
dec
push
jae
sar
pop
cmc
xor
test
in
dec
cmp
adc
lods
int3
das
push
xchg
and
mov
imul
std
add
adc
gs
cmp
mov
add
dec
jmp
xor
xchg
jns
cmc
jnp
pop
rol
clc
aam
sub
pop
mov
mov
adc
hlt
push
or
jne
inc
fadd
nop
dec
cmovbe
pop
test
setno
sub
rcl
cdq
add
pusha
xchg
cmps
push
movs
clc
pop
mov
pop
test
xchg
js
loop
int3
xor
in
xor
popa
jns
sbb
(bad)
sbb
aaa
xchg
(bad)
sub
loop
lea
inc
imul
clc
xor
xor
inc
sub
and
mov
mov
mov
out
in
lods
(bad)
dec
cmps
push
sub
mov
dec
stos
je
repnz
mov
xor
xor
loop
pop
ins
adc
leave
loop
and
out
fs
(bad)
adc
int
jle
movs
or
mov
iret
xor
add
je
mov
xchg
stos
xchg
pusha
out
inc
(bad)
not
aad
mov
out
popf
shl
pop
aas
test
push
xor
sbb
push
inc
(bad)
es
mov
xchg
retf
mov
lods
cdq
cmp
aas
loopne
cmp
int3
js
sbb
or
mov
jno
jbe
data16
add
and
push
adc
mov
jl
mov
pop
in
jnp
inc
push
add
add
mov
popf
xchg
sbb
nop
and
imul
jo
mov
jb
loopne
popf
or
xchg
cmp
and
(bad)
or
push
cwde
add
cmp
push
out
sbb
xchg
aaa
cmps
aaa
shrd
pop
shl
in
(bad)
aam
jp
lock
scas
das
dec
inc
push
sti
inc
or
dec
pop
mov
add
push
or
fdiv
sbb
dec
dec
scas
fmul
xor
jmp
pusha
dec
out
push
or
and
cs
and
or
mov
aad
retf
or
cld
and
pop
test
push
movs
push
mov
dec
jp
aam
fwait
mov
imul
test
(bad)
(bad)
sub
pop
aam
cmp
mov
sti
cdq
mov
pop
psrad
dec
mov
sbb
jmp
adc
sti
add
xor
ret
dec
pusha
push
lea
sbb
sub
repnz
mov
imul
movs
cs
pop
bound
lahf
mov
test
mul
cs
es
mov
add
mov
(bad)
push
fstp
push
mov
call
adc
test
pop
(bad)
sahf
ins
aaa
fadd
mov
dec
and
into
mov
(bad)
enter
dec
push
jle
lea
hlt
xor
lea
dec
ret
xor
mov
sbb
sar
(bad)
mov
ds
and
cmp
popf
mov
push
inc
sbb
in
aaa
xor
xor
xor
mov
xchg
xor
mov
mov
loopne
stos
mov
jmp
mov
dec
adc
push
fwait
and
sbb
xchg
loop
sbb
mov
add
mov
mov
mov
sti
sbb
ins
fdivr
js
shr
stc
mov
jmp
xchg
test
jb
(bad)
pop
mov
mov
jmp
popf
lods
shr
sub
sar
out
cmp
sub
fimul
dec
mov
das
stos
cld
mov
dec
mov
das
pop
sub
inc
mov
pop
arpl
(bad)
fild
fdivr
ja
dec
or
(bad)
sub
shr
jmp
xchg
sub
and
gs
(bad)
adc
outs
scas
shl
or
and
bnd
fcom
mov
mov
mov
movs
push
sbb
ins
sbb
es
les
or
mov
jns
jbe
cmp
dec
pushf
cld
jmp
jns
inc
ss
aad
aad
popa
pop
arpl
jns
mov
jae
fnstsw
pop
dec
pusha
sbb
nop
fsub
or
jo
pop
hlt
aas
cs
(bad)
outs
(bad)
push
(bad)
sahf
dec
xchg
mov
adc
stc
or
jecxz
sub
xor
mov
jg
cmc
stos
mov
in
jmp
in
push
xchg
push
dec
and
add
cmc
(bad)
adc
dec
bound
dec
xor
xchg
es
rcl
fwait
loopne
adc
test
push
cmp
std
aaa
lahf
xchg
in
or
mov
jno
xor
(bad)
jmp
loop
or
xchg
pop
rcl
pop
and
(bad)
fs
add
ud2
pop
xchg
jge
jmp
sbb
mov
inc
adc
js
sbb
repz
dec
pop
push
mov
cmp
sbb
push
inc
rol
ins
leave
lods
ret
and
pop
mov
cmp
test
mov
inc
sub
adc
(bad)
stc
adc
xchg
xchg
iret
jp
fdivr
mov
call
dec
mov
out
pop
dec
mov
(bad)
xlat
push
cmps
push
mov
fwait
sub
ss
das
sbb
adc
pop
cmp
cld
xchg
fist
mov
lock
adc
ss
and
ror
in
(bad)
out
(bad)
bound
scas
sti
xor
test
add
popf
out
ficomp
call
mov
xor
dec
push
adc
mov
mov
mov
pop
pop
xchg
arpl
pop
fldenv
xor
fimul
jecxz
in
hlt
dec
xor
mov
call
cwde
pop
les
cmp
loopne
scas
pusha
enter
cmp
in
or
scas
mov
out
les
jg
stos
shl
ins
std
sbb
xor
mov
jp
push
add
xor
pop
(bad)
(bad)
jle
jle
fld
or
rcl
es
or
pushf
loope
nop
or
pop
mov
mov
adc
jge
xchg
jecxz
mov
jmp
jmp
dec
pop
das
retf
cdq
movs
call
push
mov
add
cmp
fadd
push
mov
js
mov
and
push
mov
mov
std
sub
add
sbb
jno
ins
(bad)
into
sbb
and
and
mov
out
(bad)
mov
or
fnstsw
jp
jecxz
add
cmp
in
dec
test
lahf
mul
mov
mov
jmp
imul
jbe
xchg
push
mov
dec
pop
test
lahf
xchg
loop
btc
xchg
ret
push
or
gs
adc
dec
sar
dec
sub
or
pop
popa
add
ss
aam
popf
fwait
(bad)
fnsave
sbb
dec
out
push
xchg
in
ins
ret
add
xor
sub
mov
lds
dec
idiv
push
sub
mov
(bad)
out
sbb
lods
xchg
das
inc
out
jecxz
cwde
in
inc
dec
ja
xor
(bad)
adc
mov
mov
adc
scas
pop
shr
lds
pushf
cmp
scas
adc
(bad)
or
daa
jbe
mov
mov
mov
lods
(bad)
shl
(bad)
shl
les
sub
cmp
push
sub
ins
pushf
mov
aas
hlt
and
inc
cmp
enter
mov
mov
cmc
or
xchg
mov
stos
jmp
std
hlt
push
push
pop
mov
pop
pop
mov
inc
retf
(bad)
hlt
add
scas
(bad)
push
ror
push
and
inc
jecxz
xor
mov
dec
lods
mov
and
lea
leave
test
cmp
jl
popa
fild
icebp
jae
fisubr
leave
hlt
dec
adc
je
enter
(bad)
sbb
push
mov
call
jae
sub
icebp
call
jp
fucomi
xor
cmp
pushf
mov
xchg
jo
sahf
enter
popf
sbb
cld
mov
mov
stos
inc
rcr
push
push
jp
adc
test
adc
xchg
(bad)
pop
mov
stc
xor
xchg
xchg
imul
add
mov
pop
add
retf
cvttps2pi
xchg
mov
push
int3
push
ss
mov
inc
jno
stc
cs
add
mov
nop
push
cmp
xchg
xor
sub
xlat
fcom
jp
mov
dec
cmps
xor
pop
ret
jecxz
mov
push
mov
div
mov
cmp
xor
cli
or
ret
stos
jae
retf
dec
mov
xchg
rcr
adc
inc
inc
outs
pop
mov
rcr
push
(bad)
ror
push
movs
mov
clc
sbb
(bad)
aad
retf
addr16
ins
mov
shl
and
pop
cmps
enter
mov
and
and
dec
inc
and
adc
xchg
xchg
xor
inc
ret
in
push
out
inc
in
std
shl
fbld
add
test
cmp
dec
neg
pop
stos
jae
jo
cwde
mov
jp
sub
loopne
ins
sub
mov
xor
sbb
cmp
and
jecxz
push
jbe
pop
pop
ins
neg
bound
not
mov
outs
or
retf
inc
test
js
pop
jecxz
xor
jg
dec
ins
(bad)
pop
push
push
jg
or
mov
in
mov
adc
push
sbb
xor
push
(bad)
lods
add
movs
xchg
xchg
test
add
and
shl
or
imul
add
sar
xchg
rcr
sbb
call
dec
iret
lock
retf
into
movs
jecxz
sbb
out
scas
jp
mov
aam
jne
mov
and
retf
sbb
push
and
call
aaa
dec
xor
mov
cmc
jmp
ins
sbb
sub
or
push
sub
add
jb
aam
mov
retf
jbe
pop
outs
push
and
pop
and
ins
jb
inc
push
test
in
cmp
push
pusha
pop
sbb
addr16
xchg
push
inc
cmp
fisttp
cli
div
or
sbb
xchg
fld
fldenv
mov
xchg
fdiv
xor
pop
xor
sbb
cmps
mov
xor
in
or
fs
and
repz
iret
fdivr
xor
cld
rcl
mov
cmp
out
cmps
jmp
test
sub
je
pop
add
inc
adc
jl
xchg
fdiv
hlt
pop
test
sub
mov
fldl2e
push
add
into
test
push
jbe
sbb
lahf
std
mov
xchg
cmp
push
xchg
add
xchg
mov
lea
jo
xchg
mov
cmps
loop
test
shr
hlt
xchg
inc
mov
cmp
jno
pop
hlt
stos
xlat
add
cwde
xchg
cwde
int3
pmaxub
xchg
out
ret
sar
xchg
sub
fsub
inc
rcl
push
and
xchg
cdq
fisub
sbb
add
sub
push
push
ret
sahf
jae
or
sbb
pop
pushf
test
add
jmp
push
sub
mov
mov
cmp
sub
les
out
es
jmp
test
fist
lahf
add
arpl
(bad)
jo
and
std
inc
mov
call
mov
sbb
adc
add
inc
xchg
repz
xchg
movs
das
rcr
frstor
inc
sub
inc
stc
pop
pop
clc
mov
test
add
scas
pop
jg
pop
dec
(bad)
pop
mov
mov
lds
(bad)
mov
mov
or
mov
mov
arpl
mov
pop
cmp
ins
xchg
popa
das
pop
jle
inc
stos
push
xchg
mov
and
arpl
jmp
arpl
adc
dec
dec
dec
mov
xchg
into
inc
inc
adc
pop
sub
dec
out
popf
scas
push
sbb
sbb
jmp
dec
pop
inc
out
add
push
out
inc
mov
dec
xchg
mov
fnstsw
call
push
in
add
scas
scas
push
and
push
cwde
mov
loopne
mov
sub
gs
sub
ret
ins
inc
jecxz
arpl
and
sub
push
jne
xchg
jnp
push
sub
jo
xchg
movs
ror
hlt
jnp
adc
imul
retf
xchg
sbb
jmp
add
cmc
jae
cmps
nop
(bad)
fdivr
xchg
aaa
pop
xor
jmp
pop
xchg
fsub
mov
jmp
fmulp
or
ds
xor
mov
or
xor
mov
jo
lods
adc
outs
fild
aas
imul
das
dec
pop
nop
pop
out
ja
out
pop
bound
push
stos
scas
push
pop
sbb
pop
xor
dec
push
jnp
jo
clc
addr16
dec
xchg
pusha
js
xor
int
xchg
mov
dec
dec
int3
in
(bad)
fwait
add
adc
sar
rcr
aaa
dec
and
jne
dec
fwait
stos
mov
ror
pop
xchg
into
jmp
repnz
mov
ficom
sbb
cdq
rcl
mov
dec
push
outs
mov
jo
inc
push
(bad)
mov
or
push
dec
gs
out
rol
scas
inc
retf
adc
cmps
add
dec
arpl
pop
xchg
fst
les
in
mov
gs
outs
jge
stc
mov
push
rcr
adc
pop
ror
jecxz
lock
inc
pop
call
enter
pushf
call
jle
pop
push
cmp
add
cmp
mov
dec
push
mov
lock
(bad)
jmp
pop
mov
sub
mov
and
mov
sti
cli
test
ins
pop
(bad)
test
dec
and
pusha
jns
jmp
fsqrt
cmp
jae
sbb
(bad)
cmp
shl
out
pop
inc
inc
fidivr
loopne
dec
xor
les
ja
lods
adc
mov
jo
push
aas
cld
rcpps
cs
aad
outs
or
mov
(bad)
rol
pop
cmps
inc
inc
int
add
lea
iret
push
ja
leave
not
ss
(bad)
add
call
pop
inc
ficomp
push
jo
aad
xchg
and
mov
mov
pusha
mov
sbb
adc
in
jae
pop
fbld
cmps
cmp
dec
adc
das
lds
sub
sub
mov
es
sub
sub
push
inc
xchg
pop
push
mov
mov
lea
cmc
xchg
xchg
adc
and
ss
std
aas
loope
call
(bad)
(bad)
push
pushf
ja
mov
jp
or
jb
out
das
div
ret
and
mov
sbb
inc
not
add
movs
div
jno
mov
cmp
in
movs
mov
adc
push
xchg
movs
xchg
and
mov
mov
fsub
clc
stc
pop
dec
dec
bound
mov
jns
lods
mov
push
mov
cmc
inc
mov
push
mov
clc
dec
xor
scas
or
in
aas
add
or
mov
push
sbb
sbb
loopne
sub
ja
sbb
or
cmps
lds
mov
loopne
call
mov
mov
cs
imul
mov
sbb
arpl
enter
xor
add
sub
gs
adc
cmps
add
sub
cld
(bad)
mov
xor
loop
test
dec
pop
and
cmp
push
scas
jmp
fidiv
stos
shl
ret
xchg
cmp
and
pop
adc
jne
inc
xlat
inc
es
test
add
cdq
lock
nop
sahf
push
sub
push
sub
enter
test
je
sbb
inc
dec
(bad)
retf
imul
xor
jne
loop
add
or
lea
(bad)
add
aam
push
or
ret
je
jl
mov
sar
movs
sbb
adc
jmp
ret
push
or
mov
sbb
cmp
pop
test
mov
cdq
sbb
or
es
lods
cmc
add
fwait
retf
(bad)
aam
fmul
dec
push
and
mov
cmps
shl
sahf
mov
mov
sbb
mov
jp
fidivr
mov
and
mov
adc
lahf
and
call
fnstsw
dec
mov
ror
inc
mov
or
push
in
(bad)
xchg
bound
(bad)
scas
jg
lods
jge
js
outs
inc
mov
pop
stc
pop
add
xor
std
int3
xlat
repz
sub
iret
(bad)
or
in
jmp
jo
fwait
xchg
pop
jbe
dec
fimul
inc
sub
int
addr16
mov
pop
jmp
outs
adc
sub
xchg
push
or
push
retf
pop
adc
mov
dec
int3
loope
pushf
dec
(bad)
jle
dec
mov
(bad)
hlt
in
out
xchg
sahf
mov
pop
mov
xor
iret
clc
adc
fs
cld
(bad)
push
leave
push
into
cmps
in
fdivr
push
add
push
push
(bad)
cli
mov
pop
mov
or
xchg
int
ins
test
gs
sbb
adc
jmp
mov
dec
ins
cdq
sub
stos
jmp
les
dec
ins
dec
inc
stos
inc
lds
jo
xchg
fild
jae
mov
fwait
in
xchg
pop
popf
outs
inc
mov
push
or
push
imul
cld
pop
fdiv
push
ja
icebp
test
shr
sti
ja
lods
or
xor
jmp
js
sbb
scas
sar
mov
leave
pop
mov
sbb
test
sar
jbe
mov
out
inc
xchg
cdq
mov
mov
jb
into
pop
int
dec
lahf
xchg
(bad)
(bad)
imul
push
pusha
dec
dec
fmul
mov
pop
shr
mov
fcmovbe
push
std
xchg
mov
and
fild
mov
inc
jmp
sbb
int3
xchg
jbe
loope
or
cmps
push
pop
in
jge
jg
mov
outs
sbb
loope
aas
mov
mov
sub
adc
sub
xchg
sar
cmc
iret
rcr
cmp
leave
lea
inc
pop
sbb
test
ss
fsubr
call
sbb
or
enter
mov
dec
mov
(bad)
push
mov
and
pop
and
push
retf
push
lea
mov
dec
jbe
or
jle
lahf
lods
jae
fdiv
dec
pop
mov
mov
cmp
push
les
pop
xchg
push
(bad)
adc
stc
ins
cmps
jl
or
imul
retf
loope
addr16
mov
push
inc
lea
and
daa
cdq
add
(bad)
mov
unpckhps
test
int3
mov
xor
jmp
fwait
mov
fs
aaa
aas
out
mov
push
add
cli
ret
add
fistp
xor
mov
jmp
jae
mov
sbb
sahf
movs
push
push
lea
call
or
inc
pop
push
ret
add
nop
jno
nop
mov
and
shl
push
pop
mov
(bad)
jae
jp
jns
imul
or
sar
sub
sbb
push
call
adc
or
loopne
mov
fsub
lahf
(bad)
fldln2
add
bswap
loope
in
mov
push
outs
fist
lods
jmp
aam
cmp
push
loop
adc
pushf
jg
popa
cmp
pop
adc
mov
mov
popa
sahf
push
sub
test
dec
mov
sbb
fsub
cmc
popa
fucomi
inc
jmp
bound
or
jecxz
sbb
pusha
test
pop
(bad)
add
test
retf
xchg
repnz
sbb
add
je
loop
or
movs
inc
cwde
mov
pop
stc
loopne
test
popf
arpl
fcmovb
add
aam
in
add
dec
sub
in
adc
inc
cmp
add
sbb
int3
inc
mov
jbe
jnp
push
imul
lds
es
imul
and
scas
sub
jg
mov
aas
test
mov
adc
imul
pop
imul
cwde
cwde
sbb
add
dec
(bad)
mov
jg
in
cwde
xor
imul
jmp
jp
cmp
nop
jmp
sbb
xor
stc
xlat
jmp
push
cmp
mov
aam
(bad)
loopne
and
jbe
jne
add
sar
adc
test
int3
or
out
in
out
ror
sub
sahf
ins
xchg
and
mov
(bad)
retf
mov
jae
mov
or
xor
add
dec
hlt
add
push
mov
sub
sbb
add
or
das
dec
cmp
les
aad
(bad)
js
inc
or
xchg
dec
push
lock
push
mov
push
push
add
adc
sbb
push
call
imul
cdq
sbb
stos
out
imul
xchg
adc
fnsave
(bad)
out
in
inc
test
shl
lahf
xchg
loopne
int
scas
cmp
test
dec
pop
mov
cmp
cmp
shl
mov
inc
dec
aaa
pop
aas
das
fs
ficomp
fmul
jge
aam
xor
ins
xor
or
(bad)
mov
and
xchg
lea
data16
ret
ins
mov
shr
adc
scas
into
lock
mov
and
loopne
ret
xchg
arpl
add
mov
or
cmp
js
ret
or
push
in
ret
jecxz
sbb
sub
and
cmp
in
outs
xchg
int
out
mov
mov
inc
div
test
adc
or
hlt
sub
rcr
fisub
fcomp
leave
push
jmp
ja
xchg
xor
cwde
icebp
and
push
cmp
pusha
pop
dec
jmp
jbe
push
movs
jg
sahf
call
cmp
cmp
pop
out
pop
cmps
mov
adc
movs
test
or
(bad)
jmp
inc
inc
int3
test
mov
(bad)
jmp
mov
cli
into
sbb
jo
mov
lds
(bad)
cmps
fcom
push
lods
cmp
xor
icebp
sub
inc
out
mov
xor
aas
push
dec
push
in
fild
xlat
lods
clc
mov
or
and
sahf
mov
xor
add
jae
icebp
stos
mov
jmp
mov
or
fwait
cld
sbb
addr16
mov
or
or
(bad)
mov
idiv
and
jno
test
mov
in
les
xchg
xor
sbb
mov
pop
scas
jnp
mov
repz
adc
and
jae
mov
sbb
xchg
call
inc
push
add
sub
lods
mov
jns
add
jmp
in
jne
xor
dec
mov
push
ficom
in
gs
cwde
jmp
mov
lock
retf
mov
xor
rol
(bad)
dec
jmp
jo
in
add
leave
into
lods
push
out
xlat
xchg
pop
jb
adc
fiadd
out
int3
pop
cli
dec
or
sbb
pop
push
arpl
iret
ror
or
or
pcmpeqw
fidiv
ror
xor
sub
inc
mov
xchg
sbb
adc
mov
test
enter
adc
pop
xchg
dec
push
jle
retf
adc
pop
test
xor
mov
movs
in
in
retf
dec
inc
xchg
ror
sti
cli
adc
mov
jecxz
pop
or
in
jno
mov
jmp
iret
shr
mov
dec
fstp
mov
or
cs
fisub
aad
div
dec
popf
in
push
in
dec
inc
inc
repz
ins
mov
mov
fs
adc
cdq
je
sub
sbb
mov
shl
dec
mov
push
pop
mov
mov
xchg
or
pop
mov
add
pop
(bad)
clc
pop
in
fild
add
aas
aaa
hlt
inc
les
fnsave
xor
cmp
sub
call
inc
cmp
push
push
retf
jecxz
les
test
retf
xor
cmc
dec
jmp
mov
pop
adc
lods
js
rol
inc
dec
inc
fst
dec
aas
mov
and
mov
lahf
push
dec
mov
dec
popa
sbb
xchg
daa
mov
jns
(bad)
ss
jmp
neg
cdq
or
cli
or
in
mov
xchg
fdivr
lahf
nop
stos
shl
lods
or
or
les
sbb
cmps
mov
(bad)
xor
sub
push
in
push
mov
mov
inc
jge
adc
sbb
mov
lock
push
jb
fmul
inc
jmp
mov
mov
neg
pop
sub
lock
sub
mov
inc
std
aaa
mov
mov
jns
cmp
push
pop
jge
mov
std
(bad)
movs
shr
push
cmp
arpl
dec
jge
jp
cmps
mov
xchg
div
scas
or
jmp
xchg
retf
imul
sub
shr
push
adc
pushf
xchg
int3
jmp
or
mov
arpl
cmc
loopne
cmp
ja
mov
fcmove
call
mov
cmp
cld
mov
pop
lock
int3
add
test
jae
scas
cmp
cmp
push
popa
mov
sbb
push
loop
push
adc
test
aad
push
pop
adc
fisttp
addr16
inc
sbb
ror
test
adc
ds
outs
inc
sbb
(bad)
mov
icebp
test
mov
pop
push
repz
or
push
cld
cmp
(bad)
or
mov
fst
push
xchg
sti
dec
cmp
repz
inc
add
xor
call
sar
mov
xchg
sbb
dec
cmps
or
scas
push
cs
fistp
out
xor
dec
jae
pop
push
and
mov
leave
mov
scas
and
aas
mov
dec
add
fdivrp
push
pushf
fincstp
mov
add
or
pop
popa
and
xchg
cmp
cmps
icebp
arpl
adc
sub
jge
movs
mov
pop
dec
mov
xor
inc
push
rcr
icebp
out
inc
sar
xor
sbb
inc
out
dec
push
int
mov
repz
adc
sub
loop
rol
pop
cli
out
iret
mov
scas
mov
dec
xlat
in
ins
xchg
sub
mov
cmps
xchg
xchg
retf
adc
mov
xor
(bad)
popa
cmp
stc
pop
mov
mov
mov
aas
add
aad
add
adc
addr16
sbb
inc
rcl
fsubr
retf
fsubr
push
ret
(bad)
xor
ja
add
add
jmp
cmovge
sbb
fwait
push
xor
fisttp
fwait
pop
xor
mov
add
(bad)
or
out
add
enter
xchg
mov
in
inc
scas
mov
push
idiv
scas
dec
ja
adc
int
loop
jp
xchg
pushf
mov
aam
xchg
adc
cmp
arpl
xchg
cmp
test
mov
cmp
push
not
test
dec
dec
jb
xchg
fistp
lock
xchg
cdq
fwait
cmp
repnz
(bad)
aad
data16
or
xchg
outs
and
outs
(bad)
inc
and
fisubr
jmp
jo
dec
add
mov
iret
jo
addr16
jge
fwait
sbb
cmp
xchg
pusha
add
xor
jnp
cmp
or
nop
push
fsubr
inc
lock
cmp
jo
push
add
scas
mov
test
jl
pop
mov
das
shr
inc
mov
and
mov
sar
push
popa
call
xchg
xchg
retf
dec
or
retf
inc
mov
dec
int3
mov
inc
push
ret
push
cmp
sub
enter
cld
and
dec
aas
jnp
cmp
mov
mov
xor
adc
cs
es
ds
(bad)
data16
mov
xor
pop
test
test
inc
sbb
out
or
cmp
adc
and
lock
cmps
cli
pop
stos
and
(bad)
shl
jecxz
cmp
mov
dec
test
sbb
leave
sbb
stos
pop
mov
add
push
mov
and
xchg
mov
inc
or
ins
loop
mov
clc
add
or
mov
call
fild
inc
sbb
jbe
mov
stos
push
sbb
mov
aas
cmp
or
push
loop
daa
ins
inc
in
push
rol
outs
daa
icebp
aas
icebp
pusha
(bad)
xchg
mov
dec
cmp
gs
push
push
pop
pop
inc
std
sar
cmp
rol
or
mov
repz
adc
cmp
mov
stos
xor
sub
xchg
jle
lods
stc
mov
inc
and
push
stos
mov
add
or
cmp
xor
fdivr
shl
into
retf
mov
sub
cmps
leave
pushf
xor
jmp
daa
sub
inc
xor
cmp
inc
inc
clc
mov
(bad)
mov
outs
dec
sbb
pop
and
inc
ficom
mov
ins
imul
sbb
pop
div
cmp
cmps
test
lods
repnz
in
pop
(bad)
scas
sbb
(bad)
popa
and
js
loop
ja
and
xor
adc
mov
push
in
in
out
jge
ja
pop
cs
lock
aad
fwait
lods
dec
push
rcr
cli
shl
push
or
js
cwde
jbe
bound
adc
mov
adc
jg
inc
ins
test
jo
dec
xor
push
pop
push
lahf
mov
adc
cs
mov
and
sbb
sub
(bad)
inc
push
jbe
mov
pusha
popa
jmp
movs
(bad)
jns
sbb
mov
adc
in
xchg
xchg
mov
test
(bad)
xor
(bad)
mov
idiv
push
sub
ja
loopne
enter
add
cmp
sub
lods
mov
cmp
or
call
retf
mov
sbb
mov
pop
in
xlat
pop
add
mov
in
mov
imul
pop
and
arpl
test
mov
jmp
addr16
std
pop
xchg
dec
mov
(bad)
sbb
pop
add
mov
push
jnp
cmps
or
or
xchg
dec
shl
into
sub
xchg
adc
cmp
(bad)
jmp
jmp
pop
push
mov
xlat
inc
movs
mov
dec
add
fs
and
lods
hlt
repz
mov
sub
push
cmp
aaa
test
mov
mov
(bad)
enter
cmp
and
sub
sub
stc
fimul
test
mov
nop
inc
cdq
push
mov
mov
mov
jge
cvtpi2ps
mov
cmc
loop
mov
out
test
fld
jns
shl
(bad)
sbb
cmps
pop
mov
push
sub
fbstp
loopne
cmps
fst
xchg
mov
jmp
cdq
bsr
xchg
shr
pusha
(bad)
or
(bad)
xor
mov
jg
out
sub
repz
mov
dec
mov
(bad)
mov
push
cmp
ds
stos
ds
sub
fistp
or
cld
out
(bad)
pop
adc
push
inc
iret
pop
dec
ret
bound
dec
xchg
inc
xchg
repz
loope
jecxz
and
cmps
int
add
enter
sbb
sar
mov
sbb
adc
pop
pop
add
js
into
mov
jns
vmovaps
mov
pop
cmp
jno
inc
mov
or
xchg
das
test
out
arpl
sbb
pop
fs
inc
xchg
sbb
(bad)
mov
clc
or
xchg
jbe
xchg
pop
sub
mov
lock
xchg
push
pop
lods
pop
xchg
lds
sub
rol
fcomp
mov
movs
dec
in
fimul
mov
dec
sub
pop
aaa
cmc
test
leave
stos
dec
loopne
or
fdivr
xchg
fdiv
xor
mov
mov
sbb
jb
xchg
cdq
adc
inc
cmp
aaa
arpl
push
or
jmp
shl
mov
jl
jmp
jnp
dec
xchg
and
jns
dec
add
inc
mov
test
fcomp
into
dec
xchg
pop
adc
movs
pop
lea
mov
out
mov
fnstenv
jno
xchg
add
out
in
stos
call
fsub
xchg
scas
stos
sbb
inc
movs
mov
fst
sub
sbb
jle
or
sub
cmp
fxch
lock
pusha
push
(bad)
sbb
scas
repz
pop
lods
bound
cmp
sub
lea
sub
aaa
push
xchg
sahf
enter
jmp
jns
test
add
or
mov
out
mov
inc
addr16
shl
cli
push
push
imul
push
xchg
imul
ins
cmp
pop
xor
mov
stc
ret
mov
and
icebp
add
mov
arpl
push
loop
outs
sub
add
les
sub
adc
push
mov
aaa
adc
jmp
fnstenv
adc
pop
fadd
mov
ret
shl
cli
lock
mov
add
mov
cmp
ja
mov
mov
fwait
inc
leave
add
(bad)
inc
std
mov
pusha
fwait
adc
nop
movs
lods
bound
in
cs
gs
popa
data16
sbb
sub
mov
add
(bad)
push
pop
cmp
mov
and
pop
add
pop
sbb
or
lahf
xchg
adc
sahf
mov
adc
add
mov
lods
ds
lods
pop
fisttp
lock
pop
mov
add
stos
lds
loopne
scas
and
sbb
es
push
push
add
dec
stos
jl
xchg
mov
mov
cmp
dec
add
test
push
cld
lahf
jmp
and
or
pop
leave
in
cwde
push
cmp
or
push
hlt
(bad)
icebp
loopne
jge
sub
or
dec
or
lods
mov
cld
xor
(bad)
jge
jmp
cmp
jnp
es
pop
add
dec
cmp
xchg
or
stc
pop
enter
ror
aaa
jne
pop
test
pop
lahf
pop
fucomi
jmp
mov
dec
push
inc
cmp
mov
out
shl
pop
outs
jmp
xor
dec
repz
int3
leave
jmp
cmps
pop
addr16
and
jle
pop
push
pop
pusha
xor
pop
outs
iret
scas
fiadd
sbb
add
mov
jo
sbb
rcr
dec
ins
clc
mov
in
movs
mov
mov
fmul
lea
mov
arpl
out
fcomip
pop
jmp
adc
xor
add
or
xor
bound
mov
cmp
movs
in
fimul
push
jbe
and
outs
sbb
scas
out
jmp
outs
les
xchg
push
dec
into
(bad)
and
or
out
sbb
sub
add
test
shl
pop
nop
addr16
add
shl
adc
sbb
mov
xchg
out
jns
movs
adc
(bad)
fxtract
pop
aam
dec
daa
cli
mov
movs
jns
test
xchg
mov
fdiv
jmp
cld
jbe
push
adc
(bad)
pop
mov
push
add
shl
jnp
test
add
xchg
in
jl
fld
mov
neg
jmp
out
sub
ins
xor
add
ins
push
in
int
pushf
inc
inc
retf
repz
lds
dec
push
or
xchg
int3
jmp
mov
xchg
pop
dec
daa
(bad)
outs
and
sti
jp
cmp
movs
jb
adc
mov
push
aas
adc
loopne
adc
sbb
dec
add
(bad)
pusha
or
fadd
(bad)
mov
jmp
jo
stc
mov
(bad)
scas
popa
sbb
lea
fisttp
jl
mov
popf
push
ja
mov
dec
imul
dec
sbb
test
cmps
mov
cmc
cwde
int3
mov
rol
outs
jmp
ret
xor
inc
mov
mov
popa
cmps
fucomi
inc
dec
lea
or
or
scas
loopne
add
mov
iret
xchg
add
jg
sbb
jae
mov
and
dec
push
jmp
loop
into
lea
xchg
fild
std
add
ins
and
loop
cmp
sbb
retf
movs
(bad)
mov
pop
xor
mov
push
xchg
ror
jl
ret
das
int3
or
test
(bad)
push
pop
pop
ss
imul
mov
lea
repnz
std
xor
jp
jns
pop
xor
and
repz
bound
in
jb
in
sbb
push
shl
lea
cmp
mov
inc
and
ret
ins
sahf
pop
cmp
movs
out
mov
adc
retf
int3
mov
fdivrp
popf
mov
mov
pop
popf
jmp
test
daa
ins
addr16
add
mov
aam
jb
and
(bad)
push
or
dec
dec
int3
nop
out
mov
push
sbb
sub
pop
sub
pop
shl
fist
xor
movs
sub
mov
pop
in
jbe
popa
data16
add
fisttp
loope
jo
fistp
xor
sub
mov
movs
inc
mov
(bad)
mov
lock
cmp
cs
xor
sbb
mov
sub
scas
scas
inc
rcr
push
sub
lahf
mov
pop
mov
cmp
sub
ins
or
lock
jne
sbb
out
movs
data16
ficom
jbe
xor
(bad)
scas
mov
xchg
pushf
imul
xchg
(bad)
cmp
cmp
fwait
jne
data16
add
aad
ja
outs
test
fsub
fiadd
jb
popf
push
call
cmp
push
in
sbb
arpl
hlt
lods
bound
hlt
ja
cdq
inc
lds
or
dec
sbb
call
push
movs
es
aaa
movs
jae
call
sti
(bad)
imul
inc
xchg
test
in
add
add
sbb
inc
adc
and
scas
push
mov
mov
sbb
mov
out
scas
ss
jae
and
(bad)
repz
xchg
loop
jmp
div
dec
jmp
dec
in
aaa
ss
int
push
inc
xor
mov
pop
call
xor
sub
mov
mov
js
outs
test
add
shr
stos
popa
mov
cli
sub
ror
mov
inc
icebp
gs
fistp
outs
pop
aaa
aad
sbb
adc
ins
fs
aas
cmp
adc
sbb
cs
push
sbb
gs
and
push
fistp
(bad)
pop
aas
xor
adc
xchg
dec
loop
mov
push
xor
cld
js
loop
cmp
repz
mov
adc
xor
lods
aaa
mov
cmp
inc
xchg
aad
loop
sbb
mov
jge
or
mov
push
add
icebp
daa
imul
int3
movs
sub
imul
mov
enter
cwde
inc
fiadd
dec
shl
les
pop
div
cmp
or
aad
(bad)
es
push
leave
fsub
dec
cmps
test
pop
mov
ret
(bad)
loopne
and
test
sub
mov
fcom
jmp
sub
xchg
xor
and
xchg
dec
push
push
sbb
adc
out
jmp
push
sbb
lahf
fsubr
pop
push
int3
xor
loopne
shl
pop
mov
xor
fyl2xp1
stc
shl
add
sbb
addr16
gs
pop
cmc
sub
or
mov
push
and
pop
fcom
retf
push
loop
push
and
out
push
(bad)
cmp
sbb
lods
repnz
cdq
cmp
push
mov
imul
mov
sahf
jns
dec
add
leave
or
loope
mov
jg
stc
mov
push
sbb
clc
xor
mov
outs
cmp
call
aam
sub
mov
pop
xor
inc
pop
mov
and
jne
lock
jns
and
xor
lea
fs
mov
pop
retf
sub
cmovl
or
test
push
into
popa
xor
cmp
xchg
cmps
mov
imul
jmp
outs
repnz
mov
or
hlt
rcl
or
cmps
and
repz
in
test
jb
xor
push
sbb
pop
rol
retf
in
add
test
stos
pop
js
add
test
shl
mov
sub
xor
dec
push
neg
or
pop
and
adc
aas
es
rcr
call
das
sar
outs
jmp
fld
test
cmp
repz
dec
sti
in
mov
lods
xchg
sub
jg
int
sub
mov
mov
shl
jle
imul
push
test
dec
add
and
ret
jmp
and
sar
mov
mov
dec
push
mov
sub
outs
repnz
jl
imul
data16
mov
pop
repz
or
pop
xor
add
xor
test
mov
movs
pop
push
cwde
in
cmp
pop
mov
and
mov
inc
mov
out
stos
jne
out
xor
push
(bad)
out
or
jp
mov
imul
mov
sub
sub
pop
push
fisttp
mov
(bad)
mov
sbb
cmp
shr
push
nop
fidiv
push
push
jg
push
mov
shr
mov
mov
jle
sar
mov
cld
(bad)
fcom
inc
push
mov
pop
inc
ret
pop
inc
scas
xor
cmp
fisttp
jb
mov
cld
aaa
and
mov
pop
jge
clc
(bad)
aad
xor
retf
mov
je
and
pop
jmp
cwde
stc
add
jne
push
inc
xchg
or
pop
xor
int3
test
add
sub
jmp
or
or
sti
inc
mov
iret
aam
lods
push
sbb
sbb
jg
sub
dec
sbb
and
inc
aad
scas
loop
clc
cmp
test
stc
iret
mov
int
test
jmp
je
int3
sahf
sbb
xchg
cmp
and
xchg
cmp
push
cmp
sbb
cmp
nop
dec
lods
dec
mov
bound
jae
sar
repnz
add
pop
outs
mov
or
push
adc
push
in
mov
scas
les
les
and
jmp
je
imul
cmp
popf
movs
mov
and
or
sbb
push
test
fldcw
adc
or
out
scas
out
push
jo
mov
cmp
aam
das
call
inc
push
sti
add
fmul
adc
icebp
pop
std
fdivr
mov
sbb
adc
dec
jmp
push
jmp
adc
pop
(bad)
aaa
inc
in
leave
jnp
test
cmp
dec
outs
fs
idiv
test
pop
rcr
pop
popa
xor
xchg
mov
inc
loop
cmp
push
adc
mov
dec
test
sbb
bnd
mov
jbe
add
pop
ror
repz
std
adc
mov
mov
dec
adc
mov
push
mov
push
xchg
je
adc
ja
jbe
out
inc
ror
ins
dec
pushf
(bad)
pop
xor
loop
enter
jae
scas
jmp
dec
pop
adc
xchg
aad
add
add
outs
sub
dec
mov
jns
adc
sahf
daa
xchg
adc
shl
outs
in
xchg
dec
xchg
mov
cmc
inc
lea
inc
aad
bswap
jl
inc
sub
or
(bad)
mov
and
or
stos
mov
mov
retf
hlt
sub
or
xchg
inc
inc
xor
sbb
pop
pop
cmp
je
imul
imul
aad
femms
std
inc
inc
cmps
and
push
in
lods
test
cmp
dec
xor
(bad)
iret
jae
dec
mov
popf
mov
repnz
push
add
xor
or
jg
sbb
dec
mov
pop
nop
push
and
mov
loope
cmp
leave
mov
das
in
mov
popa
push
push
pop
xor
loop
outs
cmp
jg
and
aad
loope
sub
cld
pusha
xor
scas
mov
pop
test
idiv
aaa
je
xlat
ror
test
sbb
cwde
or
xor
jb
pop
sub
fcom
push
outs
push
aam
lods
adc
mov
cmp
mov
outs
xchg
jp
cli
pop
movs
mov
dec
mov
lds
sbb
add
dec
and
jo
mov
int3
retf
rcl
fld
mov
mov
fwait
dec
mov
dec
sahf
mov
pop
cli
xchg
mov
mov
jge
dec
jmp
push
sbb
mov
popa
adc
xchg
and
test
retf
and
xor
ins
xor
mov
mov
fidiv
xchg
pop
inc
jmp
pop
sub
and
mov
fisttp
jb
dec
dec
shr
push
fadd
retw
out
and
repnz
mov
inc
inc
psllq
jp
sbb
pop
aad
rcl
xor
jb
(bad)
and
mov
or
gs
mov
leave
pop
(bad)
movs
push
xor
push
cld
mov
into
pop
or
aaa
push
test
push
ja
mov
cmc
adc
mov
or
xchg
sbb
adc
ins
inc
xchg
and
or
leave
retf
repz
fnstcw
inc
push
sahf
mov
call
pusha
popa
ret
push
mov
loop
mov
dec
repnz
in
pop
into
sbb
xlat
in
fisttp
enter
mov
cwde
pusha
cld
push
enter
les
sub
xchg
in
and
stos
daa
popf
cmp
mov
push
and
cmp
sub
cwde
into
jmp
mov
int
clc
push
mov
(bad)
mul
sti
fs
cli
or
mov
lds
pop
sahf
inc
test
or
je
sub
xor
inc
rcl
std
popf
mov
bound
hlt
mov
or
sbb
sbb
cmp
test
push
and
pop
neg
push
pop
mov
aas
test
jl
aam
gs
outs
pusha
in
ret
lock
and
jle
mov
push
dec
jb
add
xor
adc
or
mov
mov
aam
arpl
adc
lds
retf
xor
ins
push
ins
mov
push
sub
ret
pop
sbb
xor
sbb
pop
les
outs
inc
hlt
mov
retf
lods
inc
or
push
jge
call
add
stos
mov
mov
cmps
mov
add
fld
push
aaa
int
in
dec
add
xchg
inc
jmp
pop
pop
adc
push
xchg
aam
nop
les
sbb
frstor
and
or
nop
cwde
jne
sbb
call
fcom
jae
test
jmp
ror
mov
cmp
or
dec
enter
inc
fwait
jo
or
jbe
enter
scas
sti
hlt
or
call
fcmove
outs
mov
in
push
dec
or
dec
mov
in
add
jmp
jmp
fcom
xchg
loopne
jo
xchg
mov
cmc
retf
stc
test
xor
repz
pop
push
inc
out
push
add
xor
cmc
add
adc
idiv
les
jge
xchg
dec
mov
je
lock
or
stc
adc
sbb
mov
jecxz
push
sub
rcl
xor
pop
iret
iret
jbe
mov
dec
sbb
xchg
ins
cmp
mov
je
inc
fist
and
retf
mov
in
or
adc
mov
aad
push
popa
add
stos
out
jg
inc
sar
mov
add
aam
sbb
(bad)
iret
imul
imul
jo
or
inc
iret
xor
and
jl
cmp
sbb
sub
sub
cmp
mov
les
jno
test
jl
(bad)
mov
leave
js
dec
mov
dec
int3
pop
out
outs
test
ins
push
xor
test
js
mov
xchg
add
mov
adc
stos
inc
pusha
fmul
jl
push
rcl
pop
shr
push
push
icebp
call
mov
bnd
cwde
mov
sub
xor
jns
aam
lods
push
scas
add
es
les
pop
push
or
stos
es
or
sub
cs
daa
push
jmp
and
sbb
or
pop
sbb
fstp
push
movs
retf
loope
fmul
retf
clc
lods
(bad)
int
jnp
stos
sbb
mov
stos
xchg
outs
(bad)
test
push
add
ins
je
sbb
lahf
dec
fwait
retf
push
lods
sub
sbb
(bad)
pop
sbb
pop
data16
cdq
push
mov
xor
mov
lahf
add
adc
mov
(bad)
pop
(bad)
outs
(bad)
pushf
scas
arpl
pushf
xchg
stos
fwait
xchg
and
push
adc
shl
dec
dec
and
rol
jmp
or
jno
imul
outs
lock
pop
xchg
push
push
adc
adc
jmp
aam
mov
aaa
mov
push
les
mov
push
jmp
icebp
mov
cli
test
fild
imul
fcmove
popa
repz
aaa
fsubr
pop
cs
ja
lahf
repnz
and
jnp
in
stos
sub
test
arpl
inc
cmp
fnstenv
int3
push
jecxz
jge
shl
sub
arpl
callw
mov
cli
sbb
mov
jno
or
dec
arpl
mov
sar
cmc
js
call
retf
push
mov
push
sub
loop
inc
jp
aas
cwde
pop
leave
add
or
push
test
and
mov
mov
adc
bound
stos
out
imul
sub
fxam
clc
mov
add
sub
push
into
ret
add
das
cmp
dec
leave
(bad)
cmp
mov
je
rol
shr
mov
test
push
ret
xchg
aam
stc
mov
push
popf
popf
ja
or
mov
cdq
ret
loopne
and
pop
leave
mov
sar
cmp
outs
xchg
icebp
ficom
retf
in
shl
mov
popa
imul
and
push
adc
inc
mov
fnstcw
pushf
popa
gs
gs
mov
xchg
xor
sbb
jl
jae
movs
rcr
sub
xchg
xchg
scas
cmp
loope
sbb
call
leave
xlat
mov
adc
leave
cmp
dec
mov
pop
retf
idiv
popa
repnz
and
push
aas
loope
cwde
stos
loopne
loop
ss
daa
jmp
test
or
dec
ret
jmp
mov
outs
xor
push
push
outs
inc
mov
mov
inc
pop
cdq
imul
push
leave
les
jns
inc
or
inc
mov
rep
jp
retf
je
xchg
call
push
push
movs
inc
outs
push
lahf
or
add
add
jle
inc
sahf
aas
sub
mov
jg
not
ror
jmp
shr
mov
into
aaa
mov
addr16
xor
cmp
sub
sahf
add
loopne
lods
inc
or
xchg
mov
dec
ret
shr
lods
mov
cmp
sbb
je
pushf
push
xchg
into
jle
retf
cli
push
xchg
xchg
pop
add
cmp
cdq
push
leave
movs
lea
cdq
or
pop
lods
and
push
inc
cmp
mov
cs
adc
or
sub
inc
icebp
fincstp
push
sub
mov
xlat
add
pop
jg
jbe
inc
adc
push
cmp
mov
loopne
int3
xchg
lods
hlt
mov
jbe
or
add
jg
cmp
cmp
and
dec
sbb
cmp
dec
clc
aad
aad
sbb
repz
mov
sbb
mov
daa
sub
loop
mov
add
aas
jmp
retf
movs
hlt
ret
jno
addr16
cwde
jecxz
leave
sbb
cmp
daa
(bad)
mov
mov
int3
pop
sbb
xor
ss
fld
sbb
push
sub
cmc
imul
xor
or
add
out
sbb
lahf
arpl
cli
adc
sti
mov
inc
loope
xchg
xchg
xchg
movs
nop
xor
sub
nop
mov
in
cmp
inc
ja
push
or
dec
inc
xchg
ror
jle
and
jns
cdq
sub
sti
jbe
cmp
push
jb
cmp
xor
pushf
fisttp
out
test
mov
mul
pop
test
jbe
ret
xor
arpl
loopne
jmp
pop
jnp
xchg
cmps
pop
rcl
dec
adc
retf
dec
sti
dec
mov
cmps
mov
(bad)
out
(bad)
mov
jns
sbb
cmp
push
mov
popa
xchg
sbb
jo
jb
jmp
inc
movs
jmp
leave
gs
push
mov
sub
mov
inc
popa
cmp
test
mov
jne
push
or
mov
mov
lods
call
jmp
in
sbb
loop
adc
retf
inc
mov
dec
ficom
adc
sahf
pop
mov
push
ins
imul
inc
xchg
mov
push
or
js
(bad)
(bad)
fisubr
sub
dec
xor
dec
outs
xor
fabs
hlt
mov
sbb
mov
mov
ret
sub
pop
sbb
sbb
or
xlat
mov
sub
cdq
push
jns
sub
pop
sub
pop
inc
and
outs
sbb
mov
aaa
cmp
mov
ret
cmp
pusha
aam
push
and
repz
or
and
xchg
cmp
dec
shl
outs
and
fsub
jmp
cwde
pop
push
pushf
(bad)
jmp
in
or
mov
mov
inc
sub
lock
mov
xchg
lods
addr16
pushf
mov
dec
dec
xor
out
xor
jecxz
inc
ficomp
out
(bad)
sub
dec
call
cwde
daa
and
push
cs
and
pop
inc
(bad)
cmp
cmp
aam
mov
mov
sbb
inc
mov
cld
push
sti
jmp
pop
xor
icebp
add
inc
or
outs
pushf
test
cmp
fdiv
xchg
pop
dec
xchg
inc
aaa
movs
ret
pop
xchg
xor
in
mov
mov
jo
mov
ja
jp
dec
fsub
cmc
outs
ret
dec
push
sbb
xlat
pop
jns
aas
xor
pop
rol
je
mov
mov
add
lods
add
test
xor
sbb
xchg
jp
push
popa
jae
int
outs
test
push
popf
je
jmp
jl
test
sub
or
inc
cmp
and
rol
outs
imul
mov
rcl
ins
bound
(bad)
outs
xchg
cwde
scas
adc
ss
into
inc
and
in
idiv
push
push
pop
fdiv
sbb
inc
mov
mov
pop
call
dec
jbe
mov
and
xor
cmp
repnz
and
repnz
retf
fmul
dec
sahf
repz
inc
cmps
mov
mov
and
mov
xor
outs
mov
out
push
adc
loop
sub
add
cs
std
ins
lea
ror
in
xor
lods
fstsw
inc
mov
bound
daa
mov
fbld
mov
sub
mov
jmp
mov
jnp
push
adc
repnz
fnstsw
aaa
stos
fisub
jecxz
sbb
movs
mov
(bad)
push
mov
sbb
cmp
mov
jae
add
mov
xor
xor
cwde
and
or
push
adc
mov
imul
stos
push
sbb
test
xor
pop
add
sub
sar
imul
les
or
push
fidivr
cdq
hlt
imul
and
popf
and
call
push
pop
mov
xlat
or
mov
mov
pop
mov
adc
leave
mov
gs
test
or
dec
push
mov
in
mov
sbb
push
cmp
inc
out
and
clc
mov
dec
jbe
push
movs
lock
jns
push
retf
mov
jbe
mov
pop
enter
das
add
scas
(bad)
sub
idiv
xor
xchg
mov
das
sbb
sub
test
xchg
pushf
or
adc
lds
push
mov
aas
shl
imul
stos
cmps
in
inc
pop
gs
sub
dec
(bad)
mov
add
adc
and
pop
ret
lock
(bad)
jo
push
jmp
pop
test
repnz
xchg
push
mov
call
adc
ins
mov
fwait
dec
movs
push
adc
mov
scas
sub
loop
aad
dec
aaa
sbb
inc
in
jp
push
xchg
adc
xor
jmp
call
mov
cmps
fisub
jnp
dec
out
test
sub
jbe
inc
scas
sub
or
scas
mov
inc
sub
add
lock
inc
rol
xor
mov
dec
neg
pop
pop
or
shr
jns
inc
cli
mov
adc
jmp
fcom
jl
mov
hlt
xor
cmp
mov
jmp
adc
in
loop
xchg
jbe
and
mov
int
sub
dec
data16
test
repnz
arpl
lahf
cmp
(bad)
sahf
xchg
arpl
rol
aam
pop
ret
pop
ror
daa
jb
repz
sbb
xor
and
push
iret
daa
test
jo
push
dec
sbb
jecxz
push
lea
jbe
pop
push
in
mov
idiv
test
out
shr
push
out
push
test
pop
outs
fisttp
mov
mov
std
and
ds
test
call
mov
imul
and
sub
fsubr
push
jae
xlat
pop
out
mov
sahf
sar
mov
dec
inc
cdq
popa
sar
push
shl
jg
sahf
ss
xor
or
in
and
mov
mov
sbb
aam
sbb
outs
in
aad
sbb
pop
(bad)
sbb
jmp
xchg
and
mov
sub
xor
dec
inc
mov
outs
mov
and
daa
repz
popf
jle
fstp
sub
adc
stos
adc
in
inc
cmp
stos
loope
fsubr
mov
push
sbb
imul
inc
jae
xchg
fs
mov
aad
push
(bad)
sbb
add
stos
dec
ins
add
cmp
dec
pop
nop
pop
adc
push
dec
and
xchg
jbe
push
jmp
add
imul
jb
sti
test
inc
mov
jmp
mov
ret
pop
xchg
(bad)
repz
out
gs
mov
xor
mov
mov
jecxz
or
and
lods
rcl
mov
shr
imul
lods
les
adc
mov
das
cmp
std
rcr
push
(bad)
mov
mov
mov
test
push
mov
pusha
pop
je
or
dec
(bad)
mov
loop
add
mov
je
popa
(bad)
lods
popa
imul
xor
into
imul
imul
push
ror
inc
and
lahf
or
out
test
adc
sub
mov
es
xor
inc
push
(bad)
jecxz
je
lds
jmp
pop
push
stos
test
ds
push
sub
mov
dec
ins
test
int
sbb
test
jecxz
push
loopne
add
test
int
cmp
jo
sub
jge
xor
pop
mov
ror
repnz
jmp
mov
lahf
push
dec
pop
cli
mov
jge
sub
retf
mov
mov
mov
push
jne
imul
mov
sbb
push
or
test
jae
mov
cdq
jns
shl
mov
push
push
ds
scas
pop
or
mov
push
pop
ret
imul
shl
pop
bound
add
pop
test
out
lods
jp
(bad)
rcr
mov
test
jg
clc
add
xchg
mov
lods
shr
aaa
fsubp
(bad)
pop
mov
jmp
rol
jno
(bad)
adc
rcl
mov
xchg
add
inc
jecxz
jne
push
bound
dec
outs
cli
xchg
jmp
enter
shr
sbb
or
add
fidivr
mov
test
(bad)
xlat
mov
ins
jne
outs
dec
imul
or
jmp
popa
mov
ds
add
test
mov
bound
cmp
mov
jp
add
aas
mov
dec
inc
and
lea
gs
lods
les
dec
repnz
pushf
mov
fisub
loopne
jbe
mov
adc
push
lds
jne
fstp
repz
mov
xor
test
sub
in
fnstcw
or
call
(bad)
loope
test
jo
pop
inc
dec
jno
out
mov
push
jmp
fsubr
sub
or
es
je
push
inc
pop
stc
cli
out
xlat
dec
push
jle
loop
fsubr
mov
dec
pop
lds
sub
mov
es
cdq
ret
in
in
push
into
test
push
push
mov
jge
(bad)
retf
ja
loopne
imul
jmp
cmps
and
cmp
(bad)
and
test
pop
jno
xchg
inc
(bad)
mov
inc
ja
sti
mov
add
xlat
mov
pop
jge
inc
mov
mov
xor
(bad)
loopne
adc
bound
sti
add
inc
daa
rcl
mov
jmp
mov
pop
mov
cld
cmps
xchg
shl
jmp
daa
addr16
inc
add
adc
mov
cmc
(bad)
test
adc
cmp
int
xor
pop
hlt
in
dec
test
jae
or
mov
cmp
fimul
mov
mov
adc
add
xchg
fadd
movs
mov
pop
call
mov
inc
pop
adc
add
daa
and
popf
inc
dec
jge
aad
cdq
mov
jecxz
add
rcr
dec
ret
adc
mov
and
push
mov
xor
adc
ds
inc
inc
leave
and
pop
xor
ins
in
mov
lds
and
xchg
jle
ins
mov
sub
xor
scas
inc
or
xor
dec
or
pop
jnp
xchg
mov
push
or
mov
shl
not
lds
ret
repz
mov
cld
test
dec
cmps
adc
popa
lahf
test
cmp
fdiv
aam
push
mov
bound
push
xor
and
popf
push
ins
pop
fbld
sti
imul
jmp
movs
test
mov
jne
fwait
pop
mov
jnp
push
or
mov
movs
mov
add
pop
pop
mov
xor
dec
stc
add
stc
shr
mov
out
cld
data16
int3
lahf
mov
cmp
inc
mov
jecxz
xor
xor
sbb
out
imul
iret
xchg
mov
mov
pop
fsubr
sub
cs
xchg
enter
(bad)
into
imul
mov
inc
jbe
out
jmp
add
cmp
jp
das
jecxz
add
lods
pop
fidivr
pop
push
(bad)
in
(bad)
(bad)
or
repnz
jmp
push
mov
sub
mov
xor
mov
mov
stc
jmp
mov
xchg
mov
xor
jge
adc
jmp
cmps
ret
sub
ret
push
aad
dec
test
and
cli
xchg
dec
enter
cmp
jp
inc
jle
lods
rol
scas
pop
pop
aad
mov
daa
jmp
mov
fisubr
scas
and
popa
inc
mov
sbb
in
pop
movs
hlt
(bad)
sub
or
sbb
test
in
aam
ret
loopne
sbb
ror
leave
and
push
nop
out
int3
call
retf
jns
mov
in
jg
repz
push
inc
xchg
(bad)
xchg
cld
clc
(bad)
into
jnp
(bad)
push
lock
sbb
mov
popa
jns
lea
adc
pop
(bad)
jmp
hlt
sub
es
adc
data16
and
pop
fild
mov
mov
push
pop
les
lods
fs
retf
mov
fnop
mov
aam
xchg
out
and
pop
push
mov
cmc
test
rol
(bad)
cmp
fwait
jecxz
add
or
fnstenv
pop
or
lods
add
jecxz
push
push
xor
cmp
jl
mov
and
sbb
xor
movs
or
mov
add
jge
push
xchg
dec
ror
test
movs
pop
in
rcr
ror
adc
pushf
aaa
ja
ins
fst
test
adc
pop
cli
mov
sbb
stc
fwait
stc
pop
retf
ja
mov
mov
or
cmp
mov
mov
fidivr
jecxz
xor
xchg
mov
test
dec
cmp
mov
rcr
sub
femms
ret
pop
dec
ret
xchg
mov
movs
rcl
ins
cmp
idiv
imul
call
xor
or
adc
pop
lods
lods
movs
in
es
int
enter
xor
ret
in
inc
push
push
out
mov
ficomp
inc
mov
icebp
pusha
mov
dec
fisttp
es
cwde
sub
(bad)
mov
call
sbb
cmp
lods
stc
popa
lock
leave
add
jnp
pop
push
pop
cmp
or
out
dec
mov
sbb
cmp
and
in
pop
sub
jne
push
mov
mov
pop
shl
iret
lods
mov
inc
shl
shr
sub
clc
fisub
mov
xor
sbb
adc
scas
sub
aam
sub
outs
xor
in
or
into
mov
or
push
addr16
jecxz
adc
sti
or
int
test
sub
clc
call
fistp
je
and
mov
or
pusha
int
mov
mov
xchg
adc
push
aaa
inc
xchg
test
mov
mov
cmc
push
pop
add
push
fcmovnu
fwait
adc
add
xchg
aam
inc
or
pop
adc
add
or
push
movs
pop
ins
(bad)
pop
mov
in
pop
jl
xlat
daa
or
inc
sub
jne
popf
jae
inc
xor
and
dec
push
pop
test
mov
data16
ins
mov
leave
imul
xor
sbb
jo
dec
scas
ins
cmp
enter
mov
in
push
jo
(bad)
fcmovu
push
scas
or
and
xor
pop
sbb
clc
dec
fidivr
out
stos
mov
jecxz
fmul
push
cmps
fs
ficomp
mov
xchg
out
repz
mov
and
lock
xchg
shl
(bad)
stos
leave
js
je
push
cmc
repz
fwait
inc
dec
test
and
mov
jo
iret
inc
xor
push
dec
out
dec
stos
pop
push
push
nop
imul
nop
lods
pop
das
fcmove
and
jmp
(bad)
shufps
outs
pop
sar
push
test
or
and
sub
or
mov
movs
cmp
imul
jmp
movs
adc
int
(bad)
inc
mov
push
js
js
retf
mov
fdiv
rcr
pop
add
icebp
lods
xor
(bad)
sub
xor
and
cmp
xchg
inc
jg
cmc
fwait
pop
pop
retf
ins
and
repz
rep
shl
ss
push
aaa
mov
lock
in
xor
or
sub
scas
mov
xchg
popf
push
loop
cmp
sub
pop
sti
mov
and
(bad)
(bad)
fs
cmp
or
push
pop
sub
push
rep
call
or
loope
cwde
mov
daa
mov
scas
push
(bad)
clc
pop
setbe
es
sbb
sub
lock
gs
ds
push
and
pop
cdq
retf
sahf
hlt
test
mov
sub
movs
mov
cs
cmp
ins
dec
mov
push
mov
adc
adc
outs
jnp
into
aam
int
adc
(bad)
sbb
jmp
aad
retw
xchg
sbb
scas
idiv
sub
adc
pop
mov
into
xor
push
fnstsw
in
js
adc
push
jb
dec
retf
cmp
movs
ja
mov
cmp
cmp
gs
scas
push
test
in
dec
cmc
je
jmp
or
push
fiadd
dec
sbb
into
(bad)
nop
shl
xchg
or
cmp
out
(bad)
das
iret
dec
mov
xor
inc
xlat
mov
push
jne
leave
in
jecxz
outs
stc
or
lds
cs
enter
sbb
mov
sub
je
jmp
xchg
jns
sub
nop
rol
inc
pop
lock
ins
or
icebp
js
push
sbb
sti
outs
sar
inc
nop
jmp
inc
(bad)
xor
adc
sub
adc
cmp
retf
into
xchg
and
sub
mov
push
mov
ins
lea
enter
and
or
shr
mov
leave
sub
or
int3
pop
cli
gs
inc
push
std
cmp
and
jmp
gs
push
inc
lock
call
push
je
mov
out
aam
ficomp
fadd
pop
xchg
and
cmp
in
xor
xchg
inc
jp
rcl
lods
mov
rcl
fmul
mov
and
pop
jae
movs
out
call
mov
adc
(bad)
jg
add
sti
xor
call
mov
jle
xchg
sbb
shr
mov
mov
inc
(bad)
sbb
or
ret
aad
das
xchg
cmc
clc
movs
mov
pusha
daa
mul
aaa
mov
dec
test
fwait
pop
test
(bad)
mov
(bad)
jno
push
pop
mov
movs
push
push
dec
dec
(bad)
loop
mov
sti
das
mov
test
call
jg
dec
movs
or
test
dec
dec
leave
ins
leave
cwde
xchg
mov
cwde
xchg
push
sbb
push
in
je
and
cmc
sbb
(bad)
in
rcr
adc
adc
xchg
scas
xor
xchg
dec
mov
fsubr
sbb
sbb
mov
and
push
neg
rcr
into
mov
(bad)
mov
xchg
sbb
popa
sub
clc
cli
xchg
loop
lods
push
inc
mov
ds
mov
fwait
sub
and
or
les
lods
or
and
push
iret
pop
xor
cs
mov
lods
inc
call
adc
adc
add
lods
push
std
add
imul
nop
movs
xchg
push
addr16
fmul
or
(bad)
ud2
mov
stos
mov
aas
inc
and
mov
fsub
mov
aaa
push
bound
adc
cs
mov
cwde
or
out
cmps
fsub
test
sbb
jb
jne
int3
loope
jne
pop
enter
adc
inc
inc
inc
add
mov
repz
jb
xor
ins
stos
fsubr
mov
cld
mov
call
mov
cld
shl
xlat
out
pushf
sub
mov
push
mov
add
rcl
or
pushf
and
sub
test
jp
std
sbb
mov
pop
xchg
inc
test
sub
cmp
adc
mov
jge
sub
xchg
or
faddp
out
arpl
ins
repnz
pushf
xor
pop
mov
push
fisttp
in
dec
retf
js
jnp
push
and
adc
lods
xlat
add
xchg
push
mov
(bad)
(bad)
jp
xchg
mov
lods
sub
push
jmp
popa
xchg
repnz
dec
push
ret
outs
pop
lods
xor
mov
into
clc
xchg
jno
xchg
add
lods
(bad)
mov
sti
inc
cli
jbe
xor
push
and
mov
cmp
xlat
and
je
in
scas
icebp
pushf
mov
or
out
adc
das
sbb
mov
in
add
ficom
xchg
call
fisub
ins
mov
xlat
movs
pop
fcom
in
mov
jb
scas
pop
iret
leave
mov
and
ds
mov
mov
test
std
mov
pushf
and
sub
jp
push
mov
out
cwde
loopne
iret
ja
loope
cmp
xor
icebp
mov
into
xor
add
inc
stos
pop
cmp
or
sbb
lods
sub
popa
scas
or
into
xchg
xchg
les
stc
movs
sub
pop
fcmovu
jbe
jno
das
test
and
jp
mov
push
cmps
imul
add
sbb
in
mov
inc
mov
ror
mov
push
jno
fucomp
dec
(bad)
scas
jb
aad
xchg
xor
jnp
jle
inc
sbb
test
fistp
out
vminss
mov
dec
or
out
jno
cmp
mov
and
sbb
(bad)
pop
(bad)
(bad)
sub
xchg
in
mov
(bad)
inc
neg
pop
xor
sbb
stos
lods
xlat
nop
mov
mov
rol
jmp
mov
mov
xor
fadd
test
loope
push
aad
sub
mov
loopne
sbb
mov
in
xor
mov
xchg
pusha
xchg
pop
push
mov
xlat
pop
jbe
cld
xchg
inc
bound
in
xor
pop
mov
mov
jmp
int3
mov
jne
xchg
scas
pop
xchg
or
dec
mov
ret
test
inc
xchg
and
es
lock
fidivr
mov
mov
int3
lock
les
push
inc
xchg
jo
addr16
jl
js
jmp
cmps
and
nop
das
mov
sub
out
loope
mov
retf
loope
xchg
dec
pop
add
mov
dec
ja
ret
clc
xchg
ret
dec
ret
xor
(bad)
xor
std
fld
mov
or
data16
ds
add
and
test
inc
loop
jecxz
push
daa
jnp
mov
cwde
in
mov
int
lahf
xor
sbb
imul
jnp
(bad)
jne
lahf
mov
fistp
inc
out
dec
aas
test
cld
xchg
xchg
push
data16
ss
addr16
jo
cmp
ficomp
pop
mov
or
inc
push
std
sahf
pusha
mov
ja
dec
jecxz
xchg
sbb
mov
inc
inc
push
mov
and
ficomp
cld
rcr
jmp
and
stc
std
sub
enter
xchg
jle
add
hlt
jp
test
loope
fs
movs
cwde
and
cmp
dec
cli
cmc
push
add
retf
or
dec
inc
enter
daa
and
sub
cdq
push
loope
xlat
movs
pusha
mov
pop
fwait
and
rcl
xor
sbb
in
out
xchg
adc
dec
sub
sub
repz
enter
iret
data16
jecxz
jge
and
cmp
pop
pop
pop
cmp
int3
out
arpl
js
jo
scas
mov
mov
lds
in
xlat
mov
(bad)
xor
js
pop
jns
popa
mov
call
xor
aad
push
loope
mov
mov
or
pop
(bad)
cmp
enter
jp
in
xor
scas
cs
out
repz
inc
lds
prefetchwt1
or
fld
xchg
and
repnz
js
outs
data16
mov
ins
in
dec
adc
daa
cmp
pop
mov
push
xor
imul
cmp
push
cmc
gs
fst
cdq
(bad)
dec
popa
push
push
mov
or
(bad)
(bad)
shl
lods
int3
add
ret
jns
or
cmp
test
fld
or
dec
(bad)
dec
cmp
jns
(bad)
mov
leave
sbb
mov
xchg
aad
xchg
out
popf
cmp
inc
add
in
loop
je
pop
cwde
outs
rol
(bad)
xchg
shl
cmp
or
sti
xchg
add
fcom
mov
inc
test
jbe
loopne
inc
lea
jmp
add
(bad)
cmp
movs
cdq
adc
es
sub
aas
inc
ror
stos
cmp
into
rcl
daa
daa
xlat
ror
div
rol
(bad)
imul
aad
fidivr
cld
dec
out
xor
mov
mov
pop
xor
push
mul
cmp
add
jmp
gs
jnp
fmul
cmps
cli
or
(bad)
and
(bad)
call
call
adc
mov
dec
adc
jb
mov
call
add
pushf
lods
mov
push
je
cdq
movs
stc
mov
xlat
cmp
mov
push
call
fnstenv
sub
adc
xchg
sub
rcl
push
dec
fstp
mov
sbb
jbe
mov
mov
cwde
pop
xchg
sub
jl
cmp
cmc
loopne
sub
and
addr16
clc
or
(bad)
xchg
jae
gs
shr
mov
mov
dec
(bad)
loope
and
and
xchg
in
test
push
mov
out
sub
dec
nop
mov
mov
push
call
and
inc
mov
cmp
add
clc
dec
push
(bad)
movs
xor
mov
cmp
and
cwde
in
inc
adc
imul
loope
das
jmp
xor
(bad)
and
dec
mov
ret
lea
neg
test
mov
dec
cmc
mov
leave
mov
ja
int3
mov
adc
cmp
pop
repnz
ror
jge
into
inc
retf
stc
mov
mov
pop
push
xor
and
xchg
cld
stos
dec
arpl
out
xchg
push
fidivr
mov
and
sbb
xchg
arpl
and
pop
cwde
add
or
(bad)
cs
aad
adc
adc
and
not
test
not
cmp
hlt
jns
jl
jbe
sbb
scas
jmp
loop
mov
add
mov
sbb
jb
fnsave
(bad)
(bad)
ja
mov
test
das
sahf
fistp
je
sbb
mov
jb
mov
jns
mov
and
xor
mov
aam
iret
push
sbb
or
mov
pop
mov
call
out
mov
mov
jnp
push
mov
fsub
shl
and
jle
pop
jl
fbld
imul
mov
inc
mov
aad
es
dec
sub
fcmovne
fild
jmp
jle
jp
pop
jo
in
lds
sub
jl
push
outs
mov
xchg
stc
out
jmp
mov
adc
jae
js
pop
dec
sub
xchg
add
mov
xor
je
xchg
(bad)
lock
jmp
cmps
push
(bad)
mov
jmp
xchg
mov
aas
iret
fldenv
test
rcr
or
ins
data16
xchg
and
or
xor
mov
add
stc
movs
adc
loope
xor
jnp
push
inc
cmp
pop
push
arpl
sti
mov
aam
pop
adc
aam
mov
mov
test
sub
mov
dec
stos
xlat
les
mov
mov
(bad)
sti
punpckhbw
push
mov
pop
push
mov
mov
repz
jp
xor
movs
int3
jmp
xor
mov
xchg
int3
sti
repnz
sbb
cdq
ds
fnstsw
ss
jno
ins
push
cmp
xchg
jle
fcmovb
in
xchg
adc
jmp
or
ins
ret
fsubr
out
addr16
nop
mov
adc
xchg
test
jo
xchg
es
inc
repnz
nop
dec
in
add
icebp
adc
mov
xor
xor
or
or
mov
ror
or
cmp
xor
daa
lahf
cld
mov
cs
or
and
dec
stos
xchg
jmp
fwait
inc
mov
cdq
cmp
repnz
test
mov
or
or
aad
cmp
push
adc
je
pop
push
sbb
ins
lahf
push
in
std
pop
add
jae
loopne
stos
stc
inc
cmps
xlat
in
(bad)
mov
push
xchg
push
xchg
lods
cmc
cmp
xor
(bad)
mov
aad
sub
jg
aaa
out
jl
jno
outs
shl
xor
scas
pop
sub
or
retf
fwait
leave
xchg
pop
cmps
jae
pop
xor
jle
mov
mov
repz
jo
add
sub
adc
fldenv
jno
fld
scas
cmc
mov
jns
lea
cmps
(bad)
es
cli
sub
cli
les
xchg
jnp
pop
adc
push
sbb
mov
mov
je
sub
ja
cwde
inc
mov
ret
jle
out
adc
jb
pushf
cmp
cmp
mov
cld
rol
repz
xor
into
pop
cmp
cmp
icebp
pop
adc
cli
mov
call
push
pusha
out
loopne
ret
jo
jp
test
sub
sbb
dec
les
push
arpl
mov
in
mov
dec
leave
lahf
cmc
ds
jecxz
movs
sahf
or
ins
push
in
inc
cmp
mov
mov
sbb
jmp
in
add
sub
xchg
and
test
ja
rcr
adc
loope
dec
and
xor
repz
sar
mov
xchg
mov
(bad)
mov
or
leave
sbb
in
jp
or
rcl
mov
dec
jmp
xor
add
mov
in
movs
hlt
imul
jns
push
cli
sub
sbb
fisubr
mov
push
jbe
add
sub
mov
sub
xchg
xchg
xor
add
push
mov
pop
or
cmp
(bad)
cld
test
xlat
xchg
or
push
sbb
gs
sbb
xor
xchg
arpl
or
ret
sar
inc
mov
pop
popf
fidiv
push
mov
xor
ret
(bad)
rcl
lock
jmp
jg
or
or
xlat
dec
fxch
sbb
cli
jnp
ret
sub
movs
outs
movs
cmp
xor
fild
xor
mov
ficomp
cmps
dec
pop
xchg
dec
fs
inc
xchg
cmps
jle
dec
inc
mov
ins
into
push
xchg
(bad)
pusha
and
in
cmp
mov
jp
xor
inc
out
mov
xchg
sub
and
or
mov
cmps
sbb
inc
pop
rol
mov
fs
mov
push
dec
dec
adc
leave
adc
mov
jne
cmp
mov
mov
(bad)
call
push
jo
inc
sbb
and
mov
xchg
mov
sub
cmp
xor
stos
sbb
mov
pushf
imul
jb
out
mov
in
aad
in
push
mov
(bad)
mov
call
add
sti
jno
outs
in
loopne
dec
push
jns
fcom
add
cwde
cli
xchg
sub
and
jge
stc
xor
sbb
jp
mov
aas
sbb
lds
in
jecxz
cli
rcr
repz
sub
xrstors
sub
fs
mov
mov
and
dec
sti
add
or
ss
sub
and
jl
dec
shl
popa
jne
xor
stos
mov
inc
inc
inc
loope
lods
jnp
sbb
mov
arpl
pop
cmp
push
jecxz
add
mov
cdq
loope
or
cld
xor
push
loopne
push
jno
unpckhps
inc
leave
cmp
cdq
xchg
mov
xor
pop
fisubr
test
mov
cdq
jmp
add
pop
and
and
jmp
sbb
push
mov
movs
push
push
mov
imul
inc
cmp
sbb
xchg
xchg
rcr
outs
add
stc
xor
mov
mov
std
adc
pop
mov
mov
jl
xchg
pop
stc
out
neg
sti
jl
push
jo
lahf
xlat
sti
pop
ja
pop
and
rcr
sbb
movs
and
mov
mov
mov
sbb
js
jno
call
inc
jg
push
or
mov
test
inc
and
fs
in
int
aad
xchg
test
mov
leave
sar
cmps
fidiv
rol
xchg
xlat
or
and
or
(bad)
xor
and
push
jl
inc
add
cmp
cmc
sbb
sar
pop
or
icebp
cdq
xchg
cmps
or
pop
(bad)
mov
mov
or
(bad)
jns
fmul
sti
push
enter
fsubr
in
mov
gs
fild
jl
xor
xor
cld
mov
js
movs
push
mov
aam
inc
cmp
jno
mov
adc
call
pop
call
mov
bnd
pusha
into
loope
aaa
(bad)
and
fcomip
xchg
sbb
mov
or
adc
and
out
jmp
cmp
loop
xchg
in
rol
(bad)
jbe
add
in
(bad)
push
sahf
sar
fwait
xor
mov
test
mov
pusha
fidiv
call
sbb
lods
dec
ficomp
jns
xor
add
inc
add
xchg
push
push
or
je
mov
ds
call
adc
gs
int
pop
sub
dec
xchg
mov
add
jp
dec
jo
sbb
std
shr
(bad)
pop
push
in
jo
sub
movs
xor
aaa
les
imul
xor
and
div
out
xlat
ror
mov
cwde
jbe
dec
in
retf
push
mov
xor
jnp
jl
into
ins
mov
retf
or
fwait
lahf
lea
jg
div
push
and
fst
std
jmp
or
xor
xchg
scas
pop
nop
shl
(bad)
out
push
in
in
cmp
mov
ins
sbb
sar
sti
test
and
stc
cld
loop
loope
and
adc
push
pop
sbb
cwde
retf
scas
mov
dec
dec
or
ins
cmp
jmp
add
adc
(bad)
bound
fistp
cmp
adc
scas
(bad)
gs
mov
loope
xchg
mov
jmp
in
push
inc
aaa
push
push
mov
sahf
shl
cmps
mov
sbb
pushf
sbb
xchg
push
in
das
in
xchg
daa
out
call
jne
inc
adc
jb
stc
(bad)
stos
cmp
xor
arpl
sbb
lock
pop
dec
fist
jmp
jecxz
xchg
mov
iret
repz
xor
xor
mov
in
fdiv
call
sub
in
clc
fcom
cmp
mov
or
push
adc
lods
loop
inc
test
push
test
sub
jne
adc
movs
mov
into
je
pop
hlt
les
lods
cmp
rcl
jp
sbb
xchg
inc
mov
clc
or
adc
js
cdq
cmp
pop
cli
fwait
mov
jp
sbb
jge
outs
loope
jbe
mov
retf
scas
mov
mov
ret
mov
ret
cmp
sub
(bad)
sar
xchg
shl
dec
scas
lock
pop
shl
imul
fdiv
movs
sbb
in
dec
add
clc
or
and
int3
xor
sar
mov
mov
xchg
or
imul
scas
imul
js
jno
push
stos
(bad)
xor
inc
std
fcmovb
xchg
xchg
mov
add
loopne
mov
push
outs
aad
push
outs
popa
sub
sbb
push
pop
cli
xchg
sbb
movs
add
jecxz
clc
jmp
jge
push
inc
sub
sub
mov
in
lods
mov
cs
cmp
cdq
pop
ret
and
lahf
pop
cmp
sub
pop
xchg
(bad)
cmc
pop
(bad)
ror
bnd
pop
jl
into
imul
pop
scas
inc
xor
movs
adc
mov
jg
das
mov
sub
in
xor
pop
popa
cwde
loope
cmc
push
mov
mov
dec
pop
cmc
pushf
mov
mov
xchg
ror
mov
int3
movs
stos
inc
movs
xchg
dec
in
and
xor
and
pop
xor
dec
outs
or
cmp
xchg
jmp
xor
pop
xor
add
xor
add
aad
imul
mov
rcl
pop
dec
outs
and
cmps
shr
or
sbb
into
jae
push
arpl
jns
jo
push
aam
imul
xor
out
addr16
in
movs
in
(bad)
icebp
adc
sbb
cdq
test
add
imul
pop
xchg
sub
cmps
rol
fs
mov
jnp
sub
jp
or
cmps
rcl
add
hlt
(bad)
clc
addr16
pop
(bad)
add
lea
fild
pop
addr16
jp
and
sti
dec
retf
push
test
out
outs
daa
adc
jae
movs
(bad)
and
stos
sbb
ror
out
sub
shl
movs
cs
fcom
sbb
std
push
dec
scas
inc
inc
ret
(bad)
jl
cmps
sar
fsubp
into
lds
cli
ja
test
cdq
in
mov
inc
outs
test
int3
xlat
imul
or
push
dec
and
aas
js
mov
retf
xchg
add
pop
push
jne
out
movs
ror
push
daa
fiadd
lahf
lea
and
xchg
lock
ret
call
aaa
adc
sub
mov
xchg
add
fadd
movs
(bad)
dec
repnz
xchg
or
xlat
repnz
(bad)
pop
push
addr16
(bad)
movs
outs
movs
sbb
ins
icebp
push
lock
test
xor
inc
push
or
je
sub
pushf
sbb
mov
scas
add
daa
sub
ins
test
jo
mov
test
sti
sub
mov
out
cmc
xor
mov
jle
xlat
in
(bad)
fnstsw
(bad)
mov
pop
xchg
mov
test
jno
mov
xor
fsub
sub
and
(bad)
popa
jne
fsubr
pop
or
xchg
ins
pop
push
sahf
sbb
push
jo
mov
lods
cmp
jns
movs
pop
loope
mov
sbb
outs
mov
and
cmp
ror
jb
adc
imul
xchg
and
fwait
mov
arpl
xchg
rcl
into
mov
lods
movs
cmc
into
jae
(bad)
adc
or
cs
fisttp
push
cwde
pop
mov
pop
fwait
int3
ins
imul
int3
dec
std
sub
bound
mov
test
xor
mov
(bad)
(bad)
jmp
xchg
cld
(bad)
push
(bad)
jle
dec
out
and
retf
leave
stos
or
xchg
push
push
pop
sub
sub
jg
mov
scas
adc
xchg
gs
fisttp
cmp
xlat
cs
xchg
pusha
clc
call
lods
pop
icebp
mov
or
push
cmp
dec
je
in
push
or
mov
push
mov
xor
lea
jle
fsub
and
test
inc
mov
push
daa
hlt
mov
or
push
rcl
xor
adc
mov
in
in
repz
xchg
cmc
aaa
(bad)
jmp
cld
inc
xor
mov
imul
movs
cmps
mov
imul
in
pop
je
mov
ret
fadd
pop
mov
pop
mov
(bad)
imul
test
mov
(bad)
in
arpl
mov
or
and
add
adc
dec
in
mov
clc
fst
xchg
push
adc
xor
or
or
jnp
pusha
cmp
icebp
cmp
add
dec
sub
pop
mov
push
adc
adc
ins
iret
jnp
fidivr
cld
push
push
inc
mov
gs
mov
cmp
inc
out
xchg
cmp
pop
inc
mul
push
and
xchg
jge
adc
stc
(bad)
push
popa
xor
push
jl
hlt
dec
mov
jmp
jle
mov
test
xchg
and
leave
scas
jp
push
push
int3
cwde
pop
cli
aam
ror
iret
mov
cmp
or
dec
int3
and
jg
add
jae
inc
test
movs
xor
dec
pushf
xor
iret
adc
pop
jecxz
loopne
int
outs
loop
mov
lea
mov
aaa
aad
and
adc
cmp
aaa
popf
lea
outs
pushf
in
mov
loopne
mov
and
fwait
adc
clc
and
mov
mov
in
nop
mov
sbb
inc
sbb
addr16
sub
push
push
lods
es
test
icebp
or
mov
jbe
or
ds
cmp
and
adc
mov
(bad)
lock
mov
aad
add
push
int
leave
gs
push
(bad)
mov
jg
push
jmp
xchg
loope
loopne
dec
inc
mov
inc
jg
xor
add
jmp
jmp
int
sub
popa
test
mov
jns
or
stc
and
pop
mov
xor
cmc
fisub
pop
out
mov
jle
pop
dec
(bad)
or
or
or
lahf
mov
pop
mov
push
ret
stos
adc
xlat
inc
push
ins
inc
leave
adc
in
mov
mov
(bad)
(bad)
stc
shl
fnstsw
movs
inc
fild
pop
aam
cmp
call
fimul
jg
ss
mov
and
stos
jno
push
jo
pop
fs
adc
lea
(bad)
xor
pop
repnz
add
push
mov
nop
outs
shr
dec
ror
dec
out
test
enter
sbb
mov
repz
es
out
pop
pushf
imul
pop
aad
test
mov
pop
add
mul
repnz
test
dec
rcl
mov
dec
push
xchg
test
out
in
out
leave
pop
fdiv
push
enter
mov
loope
and
out
pushf
aad
mov
and
xchg
push
xor
fsubr
mov
(bad)
mov
hlt
int3
mov
in
dec
mov
stos
imul
jp
cmp
pop
dec
push
shr
imul
loopne
out
jno
mov
nop
inc
mov
or
ja
popa
mov
test
pusha
mov
popa
push
pop
mov
ja
adc
test
mov
xor
jb
dec
mov
and
outs
xor
cmp
inc
pop
xor
push
test
cmp
icebp
test
ss
push
lahf
ret
addr16
jge
inc
lods
loopne
sbb
pop
jmp
jno
mov
dec
mov
push
out
mov
(bad)
jb
xor
fld
call
or
xchg
fnsave
test
cmp
sbb
clc
jae
sbb
loope
inc
sub
jae
ss
and
mov
jmp
ret
xchg
inc
aas
je
push
stos
xchg
out
push
sub
cmc
pop
dec
dec
sbb
cmp
cmp
inc
mov
mov
pushf
push
aas
outs
int3
jnp
mov
popa
ds
and
jnp
xchg
mov
dec
jmp
sbb
inc
add
xchg
cmp
out
mov
mov
dec
outs
jo
cs
dec
shl
es
sub
jp
jbe
mov
mov
cmp
pop
movs
pushf
xor
adc
push
pusha
xchg
retf
in
xchg
into
lods
lea
bsf
push
pop
rol
xchg
and
int
pushf
aaa
mov
xchg
xor
pop
call
int
enter
sub
or
test
jns
jno
call
imul
arpl
pop
inc
xlat
sub
xchg
xchg
je
stos
cld
cmp
add
jmp
jae
jmp
push
out
cmp
lods
adc
iret
xor
jo
push
xchg
cmp
popf
cdq
scas
inc
loope
inc
movs
enter
pop
sbb
ins
lahf
dec
test
add
stos
mov
and
sub
or
cwde
sbb
lods
call
hlt
loop
sbb
fistp
test
mov
scas
shufps
sub
mov
push
popf
or
pushf
adc
test
ds
add
nop
push
push
adc
retf
ds
in
xor
push
pushf
xchg
aam
lods
lock
add
xchg
cdq
mov
test
das
in
mov
push
cwde
fbld
add
hlt
mov
xor
je
imul
repnz
int
or
shl
mov
imul
(bad)
es
daa
pmaxub
in
pop
jl
and
jae
jne
mov
ret
add
jbe
and
xchg
add
ret
movs
ret
out
xor
fst
dec
push
push
inc
add
cmp
lods
out
mov
retf
add
mov
mov
ds
xor
hlt
js
jb
dec
repnz
jle
and
into
add
or
add
xor
fstp
mov
pop
rcl
adc
int
dec
aam
enter
mov
inc
dec
xor
cmp
cmp
pop
scas
jge
js
mov
xlat
push
jp
stc
test
xor
add
mov
imul
ret
adc
es
sbb
sub
dec
cmp
icebp
mov
and
rol
or
or
popf
dec
pop
or
pop
xor
or
int3
add
xlat
cs
jb
js
push
nop
aaa
retf
push
sub
jl
ja
stos
mov
add
ret
mov
call
sbb
lds
call
mov
mov
aaa
sub
ret
enter
cmp
das
jg
mov
ja
ret
mov
cld
dec
fwait
xlat
fisttp
jb
cdq
mov
jae
mov
aam
cmp
shr
mov
stos
out
jb
sbb
or
imul
(bad)
retf
test
movs
test
push
xchg
call
jecxz
mov
xor
sbb
lds
test
jp
fisub
hlt
into
and
pop
pop
inc
xchg
daa
xor
dec
icebp
out
pop
push
jae
push
or
cmp
outs
add
cmp
sbb
lods
movs
xchg
mov
xchg
ret
xchg
js
pop
mov
cwde
int
enter
sahf
jno
mov
add
pop
jle
stc
jmp
frstor
dec
iret
xor
inc
leave
xchg
pop
in
jmp
sbb
test
inc
rcl
xchg
mov
mov
xor
inc
daa
or
mov
pushf
push
leave
call
pop
jno
out
(bad)
lock
ja
xchg
stos
push
sar
cmp
sbb
cs
or
and
pop
out
(bad)
mov
and
es
inc
mov
or
cmps
stos
cdq
jae
test
stos
or
mov
or
sbb
adc
or
xchg
aad
mov
jno
test
std
inc
dec
movs
adc
aad
pusha
rcr
sub
cmc
push
mov
adc
jle
add
add
lahf
push
xchg
nop
mov
(bad)
imul
dec
shr
or
lods
dec
cmp
adc
retf
xlat
rcl
mov
inc
pushf
out
jg
stc
push
inc
cmps
inc
push
(bad)
inc
ror
mov
mov
sub
cmp
in
cmc
mov
pop
repnz
cmp
sbb
lahf
in
pop
outs
mov
jb
cmc
add
lahf
mov
movs
outs
fsub
pop
fdiv
or
pop
loopne
lods
leave
cli
ss
jp
dec
mul
or
or
daa
pusha
add
cmc
loopne
or
popf
in
lea
mov
test
out
ds
stc
mov
mov
mov
(bad)
cmc
enter
(bad)
adc
int
rol
mov
(bad)
sub
jmp
ffree
adc
iret
sub
retf
jg
and
outs
aam
fwait
ja
sar
sbb
jo
cmp
sahf
(bad)
jge
jbe
(bad)
mov
aaa
inc
dec
cmp
fwait
push
ins
jae
outs
(bad)
cmps
nop
scas
mov
xor
stc
sbb
mov
test
adc
dec
in
xchg
adc
iret
mov
and
lods
jl
sub
das
addr16
retf
push
adc
fimul
(bad)
xor
scas
outs
push
mov
cmp
ficom
call
xchg
xlat
(bad)
pushf
addr16
push
dec
cwde
popf
scas
into
int3
mov
test
daa
inc
retf
jecxz
(bad)
or
mov
mov
mov
pop
adc
push
sar
mov
inc
cwde
xlat
dec
icebp
into
sub
mov
test
sahf
movs
sbb
stc
es
sbb
push
or
push
lahf
or
adc
xchg
mov
xor
mov
pop
cmc
mov
rol
inc
jbe
test
scas
jbe
ror
sub
mov
iret
iret
aaa
mov
mov
add
test
mov
ficom
dec
imul
or
jg
mov
or
ror
mov
and
imul
xchg
loope
mov
xchg
test
add
or
mov
mov
dec
xchg
das
pop
iret
into
rol
mov
mov
sbb
dec
(bad)
fild
sub
dec
aas
loop
mov
push
dec
inc
es
jns
add
mov
retf
outs
and
adc
add
jp
retf
aaa
fs
les
movs
inc
mov
push
mov
fwait
daa
push
js
mul
loope
rcl
stos
call
enter
stc
xchg
add
js
xchg
fidivr
ret
sti
jae
jmp
sub
movs
push
push
jge
sub
fadd
retf
xor
push
out
sub
aam
outs
or
push
rcr
mov
mov
neg
jmp
add
aad
outs
cmps
movs
std
pop
retf
hlt
pop
xor
jns
movs
mov
or
inc
js
stc
pop
(bad)
mov
pop
popa
push
int
cmps
xchg
sbb
loop
cli
into
nop
pushf
adc
nop
sti
ins
push
clc
stos
ud0
push
sub
or
mov
inc
push
gs
ret
mov
inc
mov
mov
idiv
fld
xor
cmps
ret
neg
popf
int
cs
jg
gs
mov
dec
dec
mov
lock
add
inc
xor
sub
sub
inc
test
xchg
xchg
mov
mov
sub
fdivp
int
mov
or
repz
mov
in
xchg
stc
inc
xchg
sub
cmp
dec
js
icebp
bound
inc
movs
or
out
lods
dec
xor
xchg
je
lea
ins
in
adc
dec
gs
cs
test
cmp
loop
stos
mul
cs
enter
mov
xchg
and
xlat
mov
ficom
pop
nop
mov
call
(bad)
push
rcr
clc
idiv
add
jne
push
mov
in
repnz
jmp
lods
mul
test
adc
pop
and
jle
inc
or
jle
dec
cwde
inc
leave
cmp
adc
dec
lods
dec
xchg
jbe
sub
in
sbb
aas
xlat
cdq
ins
mov
call
mov
retf
jo
int
popa
jp
push
stos
sbb
push
pop
or
in
inc
sub
imul
mov
imul
out
inc
sub
je
mov
clc
pop
in
pop
jecxz
and
xchg
stc
add
das
pop
xor
(bad)
cdq
mov
dec
aaa
mov
mov
loopne
add
jp
cmp
loop
mov
add
mov
jnp
test
cli
and
in
push
cmps
jmp
inc
out
push
mov
fcom
(bad)
sub
mov
lods
sbb
cmp
add
add
cmp
inc
push
jp
movs
into
add
cmp
pop
cmp
daa
dec
lods
fcmovnbe
jmp
add
hlt
and
xchg
mov
mov
retf
mov
sbb
add
imul
pop
data16
cmp
or
sub
cmp
imul
add
pop
sub
xor
pop
sub
mov
mov
cmp
pop
inc
push
addr16
leave
jno
mov
mov
iret
dec
xor
pusha
jne
out
arpl
and
(bad)
nop
loopne
adc
mov
xchg
dec
xor
clc
and
lea
dec
fbld
xchg
adc
add
loopne
test
imul
cmp
(bad)
gs
jmp
data16
cmps
push
xor
xor
shr
test
pushf
cli
push
xchg
neg
inc
pop
xor
inc
add
jnp
sub
pop
fistp
xchg
not
xlat
add
aaa
ss
gs
jmp
mov
mov
xor
(bad)
(bad)
jp
pop
xchg
(bad)
fisttp
neg
outs
inc
cmp
sbb
adc
les
dec
mov
ret
push
push
pop
mov
mov
repz
mov
fs
repnz
mov
ror
sti
out
loop
iret
push
pop
ins
dec
push
mov
xor
std
stos
call
cmp
xadd
push
adc
(bad)
enter
adc
hlt
loop
outs
jp
xchg
pop
and
pop
not
mov
cmp
in
adc
and
mov
fcmovnu
jns
pop
dec
cmp
pop
jmp
das
xchg
jb
adc
or
jg
xchg
jmp
xchg
inc
cmp
lock
pop
xor
push
fdiv
ins
rcr
inc
push
push
mov
lods
aaa
push
(bad)
outs
mov
retf
mov
pop
mov
into
pop
mov
add
mov
test
out
out
xor
(bad)
pushf
pop
xor
lea
aam
xor
stos
cli
lods
sbb
or
call
(bad)
jge
push
mov
xchg
add
cmp
push
mov
mov
dec
js
xor
adc
fnstsw
adc
sbb
fdiv
sbb
leave
mov
pusha
sbb
icebp
loope
and
mov
fisub
jmp
(bad)
sbb
and
sub
jge
lods
pop
pop
mov
xor
sub
std
jmp
or
ja
cli
outs
sbb
push
xchg
and
add
outs
xor
inc
and
xchg
jb
push
mov
or
and
pop
ror
ins
sar
pop
sub
pushf
fsub
in
push
push
mov
jecxz
rcr
cmp
call
pop
ret
xchg
shr
int
pop
sar
test
(bad)
jmp
pop
sub
and
imul
xchg
mov
or
inc
dec
sbb
nop
ret
jmp
mov
lods
xchg
cmp
inc
add
or
jb
fsub
btc
gs
and
xchg
pop
addr16
xchg
sub
(bad)
dec
scas
les
lods
mov
repnz
cli
hlt
addr16
mov
pushf
sar
xor
bound
out
and
popa
add
arpl
cdq
das
dec
ret
adc
sbb
jge
rol
jns
(bad)
ins
add
or
ret
cmp
xor
xchg
mov
lock
xchg
cmp
push
(bad)
in
stc
addr16
jo
and
jnp
inc
sub
aam
and
mov
mov
push
push
jne
cmp
cmps
xchg
ret
scas
mov
ret
push
scas
cmc
mov
loopne
enter
js
int3
adc
stc
jne
mov
and
neg
inc
fcomp
in
and
lds
cld
mov
into
mov
iret
jbe
cmp
aam
sub
xchg
sbb
or
mul
pushf
cmc
xor
xchg
cmovle
adc
dec
out
or
enter
(bad)
stos
pop
pop
push
inc
fucomp
sub
(bad)
pop
stc
dec
leave
inc
scas
cmc
cmp
pop
jb
pop
movs
repz
jne
sbb
fst
add
mov
and
or
inc
daa
xor
iret
test
daa
jne
fwait
pop
add
mov
mov
test
sbb
sbb
dec
out
repnz
outs
jns
push
jne
mov
xor
cmp
movs
mov
ins
add
mov
add
rcr
(bad)
xor
fwait
inc
add
jne
or
stos
in
outs
cs
push
stc
sub
in
mov
(bad)
popa
or
shl
jg
outs
rcl
test
sbb
cmc
aam
mov
jo
mov
lods
mov
xor
mov
inc
aaa
cli
mov
(bad)
daa
(bad)
arpl
jne
sub
loope
sbb
and
retf
mov
adc
or
outs
mov
loop
add
jnp
jecxz
dec
sbb
jle
sub
add
sar
mov
cld
xor
lods
push
or
xor
call
or
xor
lods
fdivr
ins
cmp
pop
jp
repz
out
es
cmp
or
repnz
enter
fisub
mov
sbb
inc
iret
sbb
ins
mov
or
sahf
or
shl
add
adc
inc
and
inc
call
unpckhps
sub
xor
sub
pushf
and
(bad)
or
cmp
mov
adc
inc
loope
mov
xor
xchg
or
sbb
dec
jbe
fmul
into
jne
add
push
imul
pop
jp
cs
leave
xor
xlat
xchg
fidiv
test
sub
pop
or
shl
dec
repz
in
xbegin
cmp
inc
dec
push
lods
retf
pop
pop
xor
ficomp
sti
in
mov
cld
cmp
jb
cld
ja
rol
add
sub
push
mov
mov
cmp
addr16
mov
and
jge
outs
mov
xor
sub
inc
int
jb
mov
stos
xchg
fisubr
or
mov
mov
mov
adc
fwait
sti
test
ret
fwait
retf
mov
ret
sbb
jnp
cld
sbb
dec
and
shr
movs
pop
cli
fsubr
jmp
arpl
out
add
outs
xchg
std
and
add
repz
cdq
test
and
and
call
dec
jle
mov
repnz
mov
shl
or
inc
fadd
cmps
loop
inc
outs
inc
pop
fs
in
leave
sbb
scas
and
xor
mov
adc
inc
popf
jmp
ins
pop
icebp
lods
repz
xlat
pop
jle
test
pop
lea
push
imul
inc
in
(bad)
inc
jnp
hlt
or
xor
dec
jne
mov
shl
(bad)
pop
shr
jle
ds
cdq
shl
xor
shl
(bad)
xchg
into
fxch
mov
retf
clc
ja
out
aad
pop
cmp
pushf
hlt
test
cmp
cmp
or
shr
inc
pop
loop
inc
ins
push
push
loopne
cli
xchg
imul
cmc
sub
mov
push
cmp
sub
jg
lods
push
sbb
pop
push
mov
sbb
xor
repnz
aad
movs
sub
sub
pop
mov
cmp
sbb
xor
iret
jl
scas
sbb
outs
jb
adc
repz
cmps
sbb
cdq
loop
shl
xchg
cmps
into
sub
(bad)
outs
adc
cmp
sub
jge
pop
(bad)
clc
icebp
retf
imul
ret
ins
xor
fstp
popa
aas
aam
mov
fisttp
gs
mov
aas
and
scas
lods
xchg
bound
in
mov
cmc
cld
adc
imul
hlt
(bad)
daa
sbb
(bad)
add
imul
lds
adc
retf
lods
scas
pop
data16
mov
xchg
test
push
cld
push
pop
pop
rcr
(bad)
pop
jnp
cmpps
xchg
ss
repz
mov
push
mov
pop
lahf
cdq
test
mov
push
push
aam
lods
pop
shr
inc
adc
add
test
neg
dec
xchg
inc
sub
inc
enter
add
sbb
push
push
sub
mov
das
out
jmp
cdq
popa
mov
scas
mov
(bad)
out
xchg
lds
pop
cmp
lods
jo
push
or
dec
sub
push
cmps
clts
jp
loopne
mov
push
pop
inc
(bad)
pusha
daa
mov
adc
lods
xor
pop
retf
pop
ficomp
(bad)
aaa
or
daa
cmp
iret
aaa
inc
xchg
mov
or
or
mov
push
mov
sahf
nop
int
mov
addr16
sbb
das
mov
rcr
iret
es
std
(bad)
xchg
ins
imul
movs
je
fnsave
mov
and
in
push
stos
or
fs
mov
jne
xchg
fs
dec
ret
dec
mov
add
aad
dec
cmp
mov
pop
push
mov
cli
stos
cmp
mov
mov
or
xor
fdivr
jns
(bad)
shr
retf
adc
mov
sar
test
or
leave
jo
jns
dec
fcmovnu
sar
push
add
popf
pop
cmp
ret
ds
lds
adc
dec
or
pop
jno
pushf
rcl
jo
and
adc
xchg
push
mov
mov
push
les
mov
and
(bad)
das
sbb
xor
jl
scas
mov
aas
dec
inc
popa
xor
ins
fwait
add
mov
pop
int3
scas
jp
(bad)
cmp
movs
add
sub
pop
sti
sbb
add
cmps
adc
aaa
cmps
aas
out
xchg
and
sbb
in
push
mul
push
jmp
je
mov
cdq
sub
xchg
push
cli
xchg
imul
xor
inc
addr16
pop
scas
dec
xlat
nop
dec
movs
mov
stc
mov
pusha
xchg
add
sub
sbb
jmp
pop
xor
mov
cld
or
into
cmp
pop
sbb
push
idiv
hlt
test
(bad)
ss
fcmovu
call
add
addr16
sub
fs
lock
ja
outs
int3
and
gs
push
pop
jmp
cmc
in
ja
or
pop
retf
fcmovnb
iret
shr
pop
fild
fdiv
push
jmp
cmp
mov
out
xor
or
xchg
or
aam
loopne
mov
sbb
jecxz
mov
ins
push
jne
jmp
fdivr
ror
out
xor
cmc
ret
arpl
add
add
pop
mov
loop
push
(bad)
mov
popf
or
stos
(bad)
sbb
es
hlt
or
cmp
loopne
cmp
lock
nop
outs
mov
push
fldenv
mov
fstenv
repz
fnstenv
out
loopne
arpl
mov
adc
xchg
repz
es
pop
inc
dec
outs
inc
or
jo
adc
(bad)
ins
ss
fist
add
loopne
mov
ja
leave
push
dec
ret
int
sbb
or
push
cmp
xchg
clc
test
fadd
or
mov
push
jmp
outs
xlat
je
push
cmp
mov
stc
jecxz
ins
jae
aas
inc
cdq
arpl
inc
shr
and
in
das
movs
inc
dec
cmps
call
pop
fcmovnbe
(bad)
fcmovb
daa
inc
mov
add
inc
dec
xor
not
outs
repz
fild
mov
in
mov
test
sbb
jl
inc
sub
daa
jp
xor
lahf
xor
cdq
xor
mov
(bad)
rcl
outs
loop
inc
jns
into
sbb
mov
repz
sub
lea
and
enter
push
cmp
dec
imul
and
mov
clc
cmp
aaa
sub
lods
fwait
jp
xchg
pop
push
push
aad
cdq
lods
push
and
or
fs
test
fadd
add
addr16
mov
mov
jmp
xor
dec
pop
hlt
mov
sbb
js
xlat
fwait
daa
mov
sub
pop
iret
or
rcl
or
mov
icebp
loopne
mov
imul
add
push
test
dec
lock
loop
cmp
mov
pop
ficomp
fidivr
(bad)
or
jle
icebp
mov
jo
xor
gs
aam
push
pop
push
aaa
lahf
(bad)
mov
aam
xchg
pop
and
cs
or
stc
test
cmp
inc
mov
add
sbb
mov
and
out
fst
inc
mov
inc
add
in
retf
jbe
mov
enter
push
and
or
int
scas
push
stos
dec
daa
fst
and
les
sahf
imul
repnz
dec
cs
jno
repnz
fsub
aaa
out
pop
xor
div
in
cld
jecxz
aam
push
shr
cmps
sub
repz
in
sub
and
pop
fiadd
push
lahf
pop
ror
push
nop
js
xchg
sub
lock
fidivr
test
mov
fmul
out
(bad)
shl
mov
ss
push
pop
adc
dec
lock
sub
push
sbb
sub
and
or
popf
cmc
adc
scas
mov
loopne
popf
or
js
and
push
add
jecxz
(bad)
(bad)
rol
aam
jbe
cmps
xor
xchg
pop
sti
sahf
icebp
sub
in
xor
mov
sbb
(bad)
jo
stos
(bad)
retf
inc
es
adc
adc
outs
mov
(bad)
stos
je
shr
std
pop
xchg
dec
and
or
loopne
(bad)
leave
xor
mov
lods
int
push
add
in
rol
lahf
outs
in
sbb
out
xor
sub
div
mov
pop
ret
add
cmp
imul
(bad)
pop
pop
pushf
mov
xor
push
push
fsub
add
mov
or
xlat
jp
add
mov
sub
out
cmp
xor
sti
or
pop
int
inc
xlat
xchg
push
add
jmp
pop
mov
mov
fwait
(bad)
neg
sub
sub
ins
push
xchg
mov
popa
add
fwait
push
inc
jmp
stos
inc
xor
add
jb
pushf
push
add
mov
ins
bound
pop
xchg
sbb
fxch
adc
neg
das
imul
sahf
fiadd
jl
xor
mov
pop
or
bound
outs
fs
or
pop
add
int3
outs
cli
outs
pop
mov
nop
leave
mov
mov
add
pop
xor
into
pop
stos
(bad)
ins
jecxz
add
shl
or
mov
repz
pop
inc
stc
inc
pop
faddp
pop
push
movs
inc
imul
cmps
jle
shl
cld
jecxz
jo
pop
shl
sbb
cmp
ins
fsub
sahf
inc
mov
or
ins
(bad)
lahf
inc
push
int3
mov
pop
inc
enter
mov
rol
(bad)
push
and
pusha
call
xchg
scas
(bad)
adc
adc
pop
int
and
clc
test
mov
and
mov
sub
pushf
jno
fnsave
clc
jmp
test
adc
daa
cs
mov
jb
pop
daa
adc
pop
xchg
(bad)
push
mov
(bad)
cdq
xor
in
jecxz
hlt
xor
jle
xchg
fadd
(bad)
fiadd
push
sbb
inc
fild
or
rcr
sar
ja
mov
clc
adc
aam
push
push
(bad)
lods
mov
into
sbb
sub
and
fld
or
popa
mov
cmps
sar
or
fwait
inc
or
cmp
dec
cdq
jl
xor
inc
mov
cs
mov
mov
xchg
mov
dec
mov
pusha
repnz
aas
sbb
add
pop
pop
add
lds
fimul
dec
jle
mov
daa
vpsllw
(bad)
imul
imul
sbb
pushw
add
loope
jns
lea
(bad)
ins
outs
ret
outs
jmp
sub
jbe
jmp
loope
jb
out
(bad)
pusha
mov
jno
push
jb
adc
jmp
gs
in
mov
xchg
(bad)
push
xchg
mov
add
cmc
xchg
sub
outs
add
inc
xchg
mov
dec
aad
clc
shl
js
push
lock
in
xchg
sahf
mov
repnz
push
ja
ficomp
add
popf
jle
cwde
test
sub
(bad)
dec
stc
dec
inc
add
mov
cwde
push
or
or
clc
push
ins
sbb
xor
adc
pop
or
mov
mov
es
jg
das
xchg
mov
cld
lods
cmp
jb
inc
mov
cmp
jnp
xor
shl
add
fs
cmp
sbb
std
xchg
hlt
call
outs
push
push
sahf
(bad)
loop
cmp
xchg
xor
mov
inc
fwait
and
fadd
out
mov
cs
in
mov
aas
movs
popf
cmp
jno
push
outs
xlat
sbb
mov
jg
adc
jmp
pushf
iret
fmul
sti
and
push
adc
xor
add
stos
mov
loop
xor
add
push
mov
mov
or
adc
cwde
stc
daa
pop
xchg
sbb
pop
sbb
popf
loopne
sub
es
dec
mov
inc
xchg
and
xchg
pop
std
adc
mov
dec
dec
pushf
and
iret
inc
(bad)
sub
dec
fcomi
xchg
push
les
repnz
loopne
clc
enter
(bad)
fsubr
mov
cmps
shl
retf
pusha
fs
cdq
mov
jbe
mov
mov
sbb
pop
and
add
and
xchg
mov
mov
mov
and
or
pop
movs
or
mov
xchg
inc
xor
stos
sub
sbb
out
jle
(bad)
int
cmps
test
cli
jmp
fdiv
or
fs
push
adc
lods
add
pop
mov
neg
das
(bad)
outs
pop
or
push
je
aad
rcr
iret
jae
das
ja
leave
or
or
or
pop
cmp
sti
icebp
daa
adc
cs
xchg
imul
stc
mov
adc
or
push
imul
aad
cmps
sar
retf
dec
(bad)
push
push
cmp
pop
sub
mov
loope
popa
sbb
out
mov
idiv
dec
cmps
es
adc
fiadd
fiadd
sti
je
iret
inc
fisttp
mov
sbb
mov
mov
stos
daa
imul
xchg
xor
aam
pop
movs
sub
(bad)
popf
mov
push
dec
test
es
sub
popa
sbb
daa
sar
aam
mov
mov
pusha
sub
fisubr
pop
mov
lods
pop
push
aas
mov
mov
shr
xor
dec
ins
ffreep
cdq
retf
mov
aaa
fwait
daa
inc
inc
jae
sahf
aam
fwait
inc
in
ss
cmp
sub
fisubr
mov
daa
cmp
js
stos
je
jns
cld
or
xchg
inc
imul
cwde
std
xchg
dec
jbe
mov
(bad)
jne
stos
sbb
pop
fwait
popa
cli
outs
mov
das
retf
das
scas
mov
mov
les
jl
call
inc
(bad)
cdq
movs
mov
(bad)
pop
mov
xor
sub
rol
jle
leave
pop
or
mov
cmps
mov
cmp
xor
mov
sub
fnstcw
lea
mov
shl
out
sbb
test
add
mov
leave
clc
stos
test
jmp
xor
sbb
rcr
adc
lea
bound
or
enter
pop
adc
cmp
fdecstp
cmc
xchg
jmpw
imul
adc
mov
and
cmp
dec
xchg
mov
mul
adc
(bad)
int3
add
dec
mov
mov
(bad)
mov
xlat
arpl
mov
xchg
sbb
sti
and
mov
test
pop
cmps
xor
sbb
mov
cdq
inc
lods
les
push
adc
bound
adc
test
stos
(bad)
ror
inc
sub
mov
ss
jecxz
mov
rcl
jae
sub
scas
outs
push
lods
lahf
dec
aaa
aad
dec
mov
fsubr
or
in
xor
je
sbb
cmps
adc
pop
stc
fcomp
std
(bad)
out
and
cmc
add
xchg
push
xor
das
cmp
xor
popa
fdivr
mov
mov
mov
les
test
bound
sub
retf
sbb
fdivp
cmc
es
lahf
repz
push
jmp
fwait
lds
add
in
pop
mov
mov
ficom
pop
sbb
mov
iret
out
jl
clc
imul
in
jno
retf
or
dec
push
lods
sub
mov
mov
enter
sahf
pop
imul
push
js
rcr
mov
call
out
mov
xchg
xchg
daa
pop
repnz
pop
fild
xor
ins
mov
xchg
iret
fdiv
mul
in
lods
icebp
arpl
fst
test
lods
mov
pop
push
push
cmp
scas
outs
push
jmp
cmp
in
mov
retf
les
ret
push
xor
xlat
xchg
popa
add
mov
xor
or
les
jmp
gs
push
push
in
les
lods
or
push
jmp
jle
(bad)
inc
mov
mov
dec
sbb
ret
out
cld
adc
int3
mul
movs
adc
mov
test
and
inc
ins
addr16
pop
out
add
sar
pusha
pop
xchg
push
cmc
cmps
(bad)
jb
aaa
cmp
pop
das
mov
mov
or
or
pop
jle
hlt
enter
leave
sub
inc
dec
cmps
pop
cs
fdivr
mov
cmps
add
cmp
sub
aad
int3
cmp
jle
into
add
pop
stc
jbe
or
sbb
fcmovb
lods
mov
inc
sub
lods
and
push
sbb
xor
mov
pop
sub
push
outs
jmp
add
xor
outs
fdivrp
adc
adc
not
add
bnd
icebp
repz
mov
inc
test
xor
cmc
adc
in
push
dec
popa
push
xor
sub
cmp
lods
idiv
and
mov
outs
jb
pop
daa
cmp
sub
bound
and
mov
jbe
mov
adc
push
pop
dec
xchg
xor
repz
jmp
popf
sub
and
mov
inc
xchg
je
mov
sub
jne
je
aaa
and
loope
sar
pusha
mov
mov
or
cwde
sbb
and
lods
pusha
dec
out
std
mov
call
pop
jmp
mov
adc
js
enter
fimul
icebp
mov
xor
xlat
(bad)
jo
das
jbe
lock
sbb
fcom
mov
cdq
shl
outs
pop
loopne
shl
push
retf
mov
dec
frstor
mov
pusha
and
cmps
xchg
mov
xchg
add
fs
mov
adc
aaa
cmc
cmp
push
clc
out
fst
push
jle
popa
pop
push
xchg
jl
inc
adc
or
retf
hlt
es
sbb
in
adc
jle
retf
nop
pop
jmp
xchg
outs
or
sbb
adc
(bad)
jmp
fimul
jecxz
mov
jbe
mov
pop
out
jge
cmp
les
popf
and
inc
fcmove
leave
cmp
mov
cwde
adc
and
int
jb
mov
inc
int
dec
push
inc
fucomp
sub
(bad)
in
js
xlat
enter
fcomp
xchg
fbstp
inc
call
jmp
push
and
movs
idiv
gs
cmp
(bad)
clc
js
hlt
mov
dec
xlat
and
test
mov
lahf
in
hlt
xor
je
mov
push
in
cmc
or
jecxz
mov
pop
in
xchg
js
add
mov
push
jne
push
add
mov
mov
mov
push
pusha
dec
shr
ds
test
sub
xchg
add
mov
retf
(bad)
push
mov
push
xchg
xchg
jp
mov
clc
sbb
ss
shl
dec
add
sub
js
inc
pop
outs
repz
ror
sbb
sbb
sbb
inc
cli
mov
add
hlt
dec
call
sbb
lods
rcl
add
or
or
cmp
or
iret
push
mov
jl
inc
mov
push
neg
xor
xchg
adc
adc
out
or
pusha
ret
mov
shl
(bad)
nop
jb
jmp
xchg
push
lods
mov
adc
js
movs
sub
xor
(bad)
mov
sar
pushf
aaa
add
jecxz
in
mov
xor
mov
shl
or
(bad)
mov
push
push
push
and
outs
shl
adc
les
push
mov
sub
imul
pop
das
xchg
in
in
xor
(bad)
push
in
or
pop
movs
lods
xchg
les
xor
jb
xor
ss
jmp
movs
fstp
les
sar
dec
inc
sub
fwait
js
rol
cmp
push
enter
dec
push
inc
jb
out
inc
xor
dec
xchg
xchg
or
nop
jne
mov
lds
cmp
test
outs
lahf
adc
std
or
push
shl
push
test
mov
dec
ret
mov
and
jecxz
add
shl
inc
mov
lahf
sbb
add
jno
push
repz
or
push
dec
cmp
fidivr
les
mov
pop
mov
sub
inc
out
sti
push
cmp
retf
into
addr16
add
leave
xor
push
stos
clc
push
dec
dec
test
push
in
imul
xor
out
mov
pusha
pop
sub
mov
test
shl
add
push
out
out
cmps
xlat
rcl
and
jne
int3
retf
jmp
mov
jb
pop
out
mov
(bad)
aam
hlt
mov
inc
mov
xchg
mov
cmp
push
xlat
pop
dec
call
inc
add
into
mul
(bad)
retf
stos
sbb
jno
inc
dec
inc
pop
xor
xor
sbb
enter
ja
in
jbe
sbb
loope
dec
pop
leave
aam
lock
enter
mov
xor
cmp
mov
add
xchg
adc
nop
mov
cmc
jbe
mov
pushf
enter
jmp
retf
jmp
(bad)
xor
stos
mov
mov
(bad)
test
ja
push
ret
mov
fisub
ret
mov
movs
adc
sub
mov
test
(bad)
outs
pop
push
mov
mov
test
inc
mov
aad
(bad)
push
xor
mov
(bad)
data16
inc
cmp
and
aad
out
sub
(bad)
fs
ret
ror
or
stc
mov
out
xor
lock
jo
and
out
add
scas
inc
mov
mov
addps
jne
xchg
shl
mov
movs
mul
pop
jbe
jns
mov
out
add
mov
cmps
pop
sahf
adc
fsubp
loopne
into
and
int3
mov
fdiv
mov
add
jnp
into
inc
mov
or
call
jl
cs
in
sbb
adc
cmc
lahf
fs
or
into
lods
jns
fild
scas
jne
ds
jmp
pop
sbb
(bad)
daa
push
sbb
aad
lods
lods
fs
ss
enter
xchg
pop
arpl
bound
(bad)
stos
ins
cld
aad
into
sbb
dec
fcmovnu
rcr
jb
mov
push
mov
xchg
dec
stos
adc
mov
dec
mov
jmp
daa
jnp
loope
jne
mov
adc
inc
sti
daa
mov
pop
stos
test
(bad)
mov
dec
xchg
(bad)
aam
adc
push
iret
repnz
adc
sub
jno
adc
test
xchg
push
mov
ins
add
pop
aam
add
mov
fwait
lods
sbb
mov
mov
scas
icebp
sub
sbb
jl
call
jmp
push
adc
jns
pop
sub
mov
lea
movs
bound
dec
adc
mov
jbe
cmp
mov
sub
mov
cmps
ds
cmps
movs
repnz
and
sbb
mov
or
pushf
cld
bound
fist
pushf
inc
jae
loope
fs
out
mov
adc
inc
and
mov
out
cld
jg
and
pop
push
loopne
push
lods
adc
mov
hlt
cli
inc
mov
and
jmp
adc
mov
xlat
jmp
xor
lahf
daa
and
sbb
pop
mov
retf
outs
js
inc
jae
fabs
outs
mov
js
jmp
arpl
lock
rcr
pop
jne
inc
fistp
loope
test
ja
iret
call
mov
test
ds
js
adc
jnp
loopne
xchg
jl
push
sbb
push
add
test
mov
inc
loopne
lahf
dec
out
cmp
nop
mov
das
mov
hlt
shl
xor
icebp
cmp
lods
jb
cli
sbb
mov
enter
les
jecxz
jecxz
pop
push
repz
or
cmp
jae
jb
inc
mov
inc
add
in
lea
dec
jno
test
inc
add
xchg
lods
aaa
sbb
dec
adc
retf
imul
dec
push
sti
shl
fwait
aad
jbe
sbb
cdq
je
jmp
imul
add
pop
or
xor
pop
mov
jecxz
mov
push
(bad)
clc
and
shr
lods
add
popf
add
mov
pop
repz
push
xchg
add
fucomi
movs
fisub
add
mov
sub
sbb
jmp
repnz
iret
sbb
scas
popf
fisub
in
pop
xor
sbb
loopne
mov
push
xor
push
jmp
fst
sbb
push
and
ret
stos
or
mov
imul
out
movs
cmp
jne
sub
mov
test
jbe
pop
je
lahf
jno
stos
outs
inc
loopne
pop
jl
loope
adc
xor
std
mov
cmp
mov
clc
mov
and
into
lds
jmp
cmp
dec
jl
stos
jmp
sub
sbb
ror
ss
pop
add
in
jle
dec
sar
xchg
push
adc
push
mov
sub
imul
dec
pop
fld
push
in
mov
mov
popa
xor
mov
sbb
loope
out
rcr
arpl
repz
jp
add
stc
pop
stos
push
popf
ja
pusha
lods
repnz
add
sbb
push
dec
mul
adc
sub
xchg
push
pop
xchg
xor
in
add
pop
sbb
mov
loop
jge
fld
jo
jne
lods
nop
inc
push
(bad)
mul
mov
aad
sbb
repz
std
bound
div
das
push
and
fs
in
(bad)
lea
lods
into
cmps
leave
xchg
jae
in
lods
iret
sbb
cs
cmp
add
stc
ds
stos
in
adc
out
sbb
mov
push
sub
je
loop
iret
fisttp
push
push
add
int3
(bad)
sti
nop
retf
jbe
es
out
test
jmp
dec
inc
scas
out
push
push
jo
rol
jne
adc
data16
xor
ror
sub
(bad)
out
dec
fs
add
sub
cmp
add
pop
enter
iret
mov
jae
popf
xor
scas
ins
lahf
xchg
xchg
(bad)
mov
or
mov
inc
imul
push
mov
jg
packuswb
scas
sti
dec
dec
mov
ins
sbb
adc
call
mov
sub
or
mov
daa
mov
stc
add
cmp
push
xchg
mov
pop
jmp
jb
cmp
dec
add
mov
jmp
mov
dec
repnz
retf
push
mov
or
les
jb
mov
out
popa
outs
lods
add
dec
add
inc
jecxz
xor
lods
fistp
mov
and
inc
add
out
stc
test
mov
mov
jmp
div
mov
stos
out
enter
call
xor
in
imul
push
inc
jbe
jns
repz
xchg
cmps
bound
test
daa
dec
mov
fbld
xchg
mov
popf
xchg
or
loopne
jecxz
lods
pop
in
push
push
popf
cmp
fsubr
imul
sub
add
mov
cwde
ss
(bad)
pop
aaa
adc
push
sar
adc
mov
push
aaa
enter
add
into
xor
lock
rcl
out
push
fs
mov
mov
mov
xchg
inc
sub
jo
cmp
mov
xor
inc
iret
cwde
pop
pop
xchg
xchg
pop
test
ficom
sbb
fmul
pop
cmp
push
push
cli
add
outs
outs
sahf
lods
add
jmp
stc
or
dec
jne
sbb
xchg
lods
xchg
mov
push
xchg
pop
js
popa
cld
cmp
push
cmp
retf
std
cwde
loop
test
adc
js
mov
cld
or
sti
add
imul
out
inc
test
sbb
es
lods
fisub
lds
bound
hlt
int
inc
mov
mov
sub
cmp
push
jne
inc
nop
dec
aas
inc
jecxz
mov
push
pop
sub
not
cmps
mov
int3
or
dec
sbb
jp
push
dec
enter
out
cmps
leave
aad
movaps
push
fistp
repnz
jae
and
dec
jae
ins
std
or
mov
je
mov
js
dec
hlt
sub
mov
jp
pop
inc
lods
or
shl
lea
jmp
and
mov
and
pop
lock
dec
jle
add
fld
leave
push
ficomp
sbb
pop
push
nop
imul
mov
cmp
fld
fcomp
(bad)
jmp
or
mov
add
stos
loop
jne
jb
jge
xlat
mov
in
outs
mov
cmc
call
and
jle
imul
dec
(bad)
lahf
test
inc
std
sbb
test
inc
mov
push
jb
sub
jp
cmc
icebp
cld
jecxz
daa
rcr
xchg
xor
add
jle
pop
add
gs
es
mov
inc
inc
(bad)
cli
jne
jl
cmp
clc
mov
mov
jmp
xchg
push
cli
out
fsub
inc
ret
push
add
fs
or
outs
arpl
mov
lahf
iret
push
mov
xor
stos
cwde
ret
out
rcl
repnz
fdivr
mov
jp
repz
sbb
sub
add
ja
test
push
xchg
or
add
push
inc
dec
iret
int3
pop
repz
mov
cmp
fisub
sar
and
and
ret
mov
mov
inc
popf
cwde
jp
out
gs
out
(bad)
lds
aas
mov
dec
stos
jle
idiv
xor
rcr
fistp
inc
inc
imul
(bad)
or
push
push
cli
mov
pop
sub
sbb
sar
out
xor
cmps
rcr
jno
inc
jl
ins
out
inc
sbb
in
pushf
xchg
loope
cmp
xchg
xchg
loopne
adc
lea
push
mov
test
scas
cmp
ret
mov
jb
movs
cmps
mov
and
adc
test
in
xor
xor
in
pop
jle
sbb
xchg
(bad)
cmc
pop
mov
gs
aad
nop
(bad)
dec
and
fldenv
jno
addr16
mov
sub
jae
jnp
cwde
mov
sbb
sub
sti
pop
ins
adc
jl
or
movs
fistp
aas
mov
cmp
iret
and
adc
dec
xor
cmc
addr16
js
add
inc
fucomp
std
jge
pop
dec
sub
stos
pushf
movs
pusha
mov
lahf
cmp
mov
inc
inc
mov
out
pop
ret
cli
pop
call
call
popw
test
repz
hlt
imul
movs
pushf
test
or
shr
xchg
movntq
and
or
inc
mov
adc
jnp
into
fs
cli
jge
idiv
out
dec
sub
leave
out
(bad)
in
ins
adc
lds
outs
xor
(bad)
cs
js
mov
push
std
mov
(bad)
inc
ja
or
out
outs
test
cmp
mov
sbb
cmp
mul
cmp
pop
mov
and
jae
into
inc
push
adc
xor
add
adc
mov
pop
adc
test
pop
mov
pop
mov
sbb
jne
sub
lea
stos
clc
or
lock
ins
cmps
push
ins
mov
test
push
mov
xchg
jecxz
cmp
in
inc
push
push
dec
out
mov
(bad)
div
dec
adc
arpl
ror
lods
js
and
jle
cmp
faddp
mov
in
cmp
aad
aad
xor
aas
cli
les
fstp
mov
out
inc
dec
xchg
push
hlt
leave
sub
icebp
in
pop
xchg
bound
mov
popa
das
aaa
xchg
les
mov
fcom
test
fidiv
idiv
mov
add
xor
adc
lahf
maxps
daa
jp
ss
inc
add
push
aas
jecxz
aam
jnp
or
lods
inc
das
mov
jmp
push
cmp
outs
sahf
sahf
lds
cmp
inc
not
repnz
std
data16
inc
jmp
mov
pop
add
xor
loope
je
cmp
stc
sbb
mov
pop
fwait
movs
or
(bad)
jno
inc
sbb
push
fdivr
lods
add
sahf
push
adc
(bad)
int3
scas
push
xchg
lock
or
add
hlt
mov
ret
mov
add
jg
arpl
and
pandn
cmc
es
adc
ds
arpl
push
imul
mov
int3
xchg
mov
cmps
push
cs
cmp
into
mov
push
test
mov
pop
sub
jge
adc
xchg
aam
dec
jg
mov
stos
popf
call
popa
mov
lahf
and
jb
xor
cmc
xor
xor
hlt
inc
cmps
cmp
cwde
push
cwde
sub
test
cmp
jno
std
ins
adc
pop
movs
pop
jno
ds
out
outs
jmp
stc
pop
aas
dec
call
in
xchg
jl
fiadd
fisub
pushf
popf
fadd
add
cdq
lea
push
retf
adc
adc
aaa
push
inc
stc
(bad)
lods
(bad)
adc
test
movs
test
div
dec
jno
cwde
push
push
cmps
test
or
push
sub
(bad)
cmp
lods
mov
dec
xchg
les
xor
mov
xor
add
ds
mov
fsubr
fist
test
cmps
fidivr
mov
gs
pop
ror
jecxz
xchg
std
scas
sahf
inc
sbb
test
cld
jecxz
repz
lock
popa
push
stos
adc
xchg
jmp
push
jbe
push
cmp
ja
(bad)
push
loopne
nop
cmp
lea
push
dec
int3
or
xor
jmp
jne
cmp
mov
push
dec
inc
or
xchg
rcr
fisttp
dec
icebp
stos
push
(bad)
jg
push
imul
xor
inc
into
xchg
xchg
inc
fmul
cmp
sbb
mov
(bad)
cmp
push
sub
cdq
mov
and
(bad)
in
pusha
in
test
cs
jmp
ret
stos
mov
pop
out
jmp
or
pop
out
jbe
inc
cmp
and
aad
repnz
push
mov
xor
mov
xchg
mov
jns
jo
outs
pop
in
in
nop
jl
adc
xchg
retf
mov
hlt
loopne
icebp
scas
dec
mov
jnp
ins
add
inc
aad
popf
ja
call
push
cli
stc
mov
mov
ror
adc
sahf
sub
sub
movs
gs
loopne
xlat
aam
repz
cmp
fld
push
imul
clc
(bad)
repz
out
mov
mov
or
popa
or
add
inc
mov
xchg
push
sub
repnz
daa
jecxz
(bad)
mov
je
push
xchg
pop
mov
mov
rol
(bad)
ror
xchg
dec
adc
xchg
mov
mov
and
lods
inc
mov
nop
into
mov
dec
aam
or
and
pop
pop
add
in
mov
rcr
push
rcl
sar
push
clc
and
sub
xor
(bad)
je
adc
pop
xchg
mov
sahf
push
cmp
(bad)
jnp
sbb
enter
pop
pop
mov
nop
xor
mov
ror
pop
cwde
pop
xor
dec
xchg
into
loop
mov
dec
dec
sar
das
rol
push
ss
or
inc
cli
out
shr
(bad)
mov
lds
icebp
ret
test
popf
das
test
and
xor
outs
cs
and
xchg
xchg
cmp
inc
jp
dec
sub
dec
mov
jle
loope
sub
add
mov
or
imul
(bad)
mov
push
lea
or
mov
xchg
test
inc
cmp
shr
inc
movs
das
push
mov
out
push
fadd
xor
mov
int
inc
inc
addr16
ret
add
mov
push
sbb
cmp
pop
mov
adc
jno
and
cmps
ffreep
fsubr
pop
jl
outs
iret
jl
outs
out
lock
mov
mov
ficom
pop
mov
jo
cmps
and
dec
repz
pop
or
sbb
shr
arpl
neg
jo
push
fnstcw
mov
sub
cmp
sub
or
fucomp
adc
test
mov
cdq
lods
call
movs
mov
adc
xor
fxtract
mov
sbb
jg
stos
xlat
movs
xchg
mov
loopne
stos
sahf
xchg
jno
fs
dec
jbe
inc
mov
bound
sbb
pop
and
test
cdq
sbb
jmp
cmp
pop
add
dec
inc
jnp
sti
mov
cmp
lods
out
jb
ror
es
not
mov
inc
dec
das
popa
sub
movzx
sub
and
or
and
pushf
push
nop
icebp
test
or
(bad)
jecxz
sub
int
stos
jle
push
mov
shl
dec
jmp
jle
jo
dec
mov
jnp
(bad)
ret
mov
jbe
mov
js
jl
jo
fcom
pop
sub
hlt
ret
maxps
fdiv
call
cdq
stos
dec
(bad)
leave
inc
enter
mov
in
sbb
push
or
inc
xor
test
int3
mov
test
int
test
fimul
ja
dec
pop
aaa
ret
sub
xchg
movs
push
retf
or
in
(bad)
nop
mov
mov
int
lahf
mov
push
cmp
jg
mov
mov
mov
ins
push
test
jae
dec
mov
and
jo
into
retf
les
or
stos
fstp
or
fisubr
out
xlat
jl
adc
mov
addr16
push
xchg
dec
jmp
push
in
mov
mov
dec
in
ror
pop
add
xchg
cmp
mov
xchg
fucomip
mov
cmps
mov
out
jg
fld
je
movs
imul
adc
leave
and
or
into
mov
xor
pop
into
cmps
dec
sub
jecxz
fcom
call
or
rol
inc
inc
hlt
push
push
sub
fdiv
pop
sub
mov
mov
test
loop
push
outs
push
fmul
xchg
add
fwait
test
xlat
inc
mov
push
jle
xchg
inc
mov
inc
pop
shl
retf
jbe
pop
cmp
leave
data16
movs
mov
mov
sub
cmp
mov
push
jmp
js
ds
inc
(bad)
movs
clc
mov
xchg
imul
(bad)
lock
movs
or
fadd
inc
mov
call
or
mov
fnstenv
mov
mov
mov
mov
(bad)
push
rcl
dec
mov
xor
arpl
adc
out
pop
adc
leave
pop
mov
sbb
mov
cmc
xor
sahf
push
(bad)
jns
loopne
sbb
imul
mov
bound
push
or
lds
out
cmps
(bad)
jbe
imul
sbb
arpl
and
mov
sub
xor
cld
mov
call
and
enter
xchg
pop
into
jmp
jg
pop
mov
les
pop
xchg
cmp
jp
cmp
cli
enter
dec
sahf
jne
xor
xor
scas
jp
jns
test
fdivp
rcl
fdiv
mov
push
rcl
adc
xor
sbb
ja
sbb
movs
dec
aad
mov
mov
out
jge
and
movs
fxch
add
gs
fdivr
push
push
(bad)
sti
bound
pusha
mov
in
call
sub
xlat
pushf
adc
push
les
(bad)
fisubr
pusha
out
jae
dec
add
xchg
xor
out
push
or
inc
call
lea
sbb
fdivr
es
arpl
sbb
gs
jns
mov
aam
pop
es
and
scas
bound
hlt
test
bound
cmp
shl
ffreep
scas
lods
and
rcl
imul
dec
jg
push
or
movs
popf
popa
int
(bad)
pop
dec
int3
xor
out
add
sub
xchg
call
shl
jg
adc
adc
mov
aaa
popa
cmc
in
ror
cs
movs
xor
push
jae
mov
xor
xor
mov
ret
pop
cmp
and
xchg
or
call
dec
inc
sbb
xchg
pop
mov
outs
jl
adc
xchg
pop
jecxz
pop
pop
(bad)
mov
inc
jns
jle
aas
in
scas
add
je
and
mov
sbb
inc
xchg
dec
test
and
jae
jge
sbb
aas
adc
add
push
adc
fistp
push
jge
or
loope
pop
mov
lods
xor
mov
adc
sbb
les
test
ins
fbld
mov
icebp
jmp
sbb
sub
ja
loope
and
cmp
popa
push
inc
mov
add
inc
pusha
add
lock
or
or
cwde
daa
cmp
sub
mov
ins
cmp
ss
mov
add
arpl
sub
mov
dec
sub
mov
pop
push
mov
aas
lods
popa
mov
inc
mov
rcr
ins
movs
test
jo
les
pop
jecxz
push
cdq
sub
jmp
xchg
jmp
popf
dec
sub
mov
fstp
(bad)
sbb
sbb
jecxz
jmp
mov
or
dec
gs
push
pop
shl
aas
imul
add
xchg
push
inc
sbb
scas
and
jmp
adc
loopne
je
jp
clc
jbe
cmp
in
sub
inc
scas
test
jecxz
js
xchg
jbe
scas
sbb
push
call
xchg
mov
popa
loop
addr16
dec
sbb
movs
sbb
fisttp
loopne
push
add
cdq
fbld
sbb
iret
bound
sti
jno
and
pop
inc
mov
mov
(bad)
lods
jmp
mov
mov
or
xchg
cmps
xchg
out
adc
cmp
les
(bad)
jbe
cld
(bad)
stos
jo
fcomp
xor
retf
cmp
dec
and
jle
inc
lods
sbb
add
outs
cmc
jbe
or
shl
outs
out
aad
daa
not
dec
lods
sub
in
les
cli
clc
mov
mov
mov
and
jno
xchg
fwait
lods
pusha
sbb
retf
sub
inc
or
out
cmp
rcr
mov
jno
cmp
and
fsubr
sbb
mov
test
pop
shl
and
in
pop
xlat
(bad)
in
out
add
dec
sbb
not
rol
es
test
add
jecxz
fs
dec
inc
xor
rcr
fild
lea
push
imul
cmps
xchg
loop
mov
lea
lahf
inc
test
pop
xor
lods
call
and
ret
cmp
mov
add
dec
movs
movs
pusha
out
add
dec
hlt
cmp
jl
enter
int3
outs
xlat
arpl
in
sub
sub
and
mov
jbe
xchg
inc
inc
das
xchg
inc
push
int3
mov
dec
out
jns
jg
(bad)
out
fmul
sti
mov
dec
cmps
jg
push
push
cmc
sub
jbe
shr
std
out
and
mov
and
lock
cmp
sbb
loope
fadd
out
cmps
retf
inc
adc
sub
jno
dec
mov
dec
fisubr
sti
ffreep
inc
pop
xor
add
lea
js
mov
mov
repz
inc
clc
pop
std
aad
cwde
test
and
add
sar
and
push
(bad)
cmp
mov
mov
jb
sub
icebp
test
sar
mov
ins
sbb
sub
lock
push
bound
xchg
xor
out
mov
fwait
and
cli
fs
and
outs
dec
lods
xchg
stos
mov
(bad)
cmp
mov
dec
mov
push
adc
xchg
outs
jo
add
pop
data16
xchg
inc
xor
icebp
sti
jle
das
rol
pop
pop
and
push
dec
jg
sbb
ret
aaa
iret
ja
sti
inc
lahf
out
xchg
xchg
imul
(bad)
icebp
mov
mov
hlt
cmp
aaa
adc
add
sub
repz
cmp
fidiv
in
test
and
ret
outs
xor
les
nop
xor
dec
lahf
pop
pop
xchg
cdq
in
mov
xor
cmp
sbb
add
sbb
call
xchg
push
popf
add
std
sub
pop
retf
cmp
shr
dec
cs
daa
jb
inc
add
test
or
icebp
push
lea
test
jb
aad
push
ds
xchg
xor
pop
add
or
or
fldcw
cmp
push
mov
mov
(bad)
push
cli
jnp
jl
jae
jo
into
mov
jmp
mov
fiadd
out
pusha
clc
sti
test
xchg
js
inc
mov
sti
add
push
add
jae
push
call
outs
jbe
add
pop
add
cmps
push
mov
lods
retf
into
pop
mov
jne
imul
movs
xor
push
int3
cmp
mov
jecxz
std
inc
pop
iret
pop
popa
shr
stos
imul
sbb
push
(bad)
stc
daa
mov
xor
lods
add
cmps
mov
jae
dec
aas
(bad)
dec
dec
cmp
pushf
rol
dec
mov
loopne
adc
ss
into
scas
push
add
adc
xor
and
outs
mov
jo
xchg
loopne
jo
daa
sbb
mov
add
jmp
ins
mov
and
fldl2e
xchg
pop
in
dec
fwait
in
jg
cmps
lods
xor
add
inc
pop
test
lods
pop
ins
xor
movs
(bad)
cdq
sahf
scas
and
jbe
inc
or
scas
xor
(bad)
sbb
and
ins
retf
sti
ins
fisub
cmps
retf
retf
or
mov
fistp
mov
nop
fimul
adc
dec
dec
mov
lea
mov
scas
iret
neg
ror
imul
cs
or
lock
inc
dec
je
sub
shl
enter
inc
(bad)
cdq
xchg
mov
stos
adc
or
test
pop
or
lea
mov
mov
cld
hlt
neg
adc
and
lea
scas
push
inc
pop
jnp
mov
nop
in
adc
mov
mov
jne
test
fwait
mov
push
dec
cld
ret
cmps
pop
stc
dec
mov
cmp
ins
sbb
pop
test
fwait
sbb
(bad)
push
vmovlhps
jne
bound
js
xchg
repnz
cmps
pop
push
ins
pushf
cmp
xchg
fwait
lods
add
mov
jmp
enter
stos
es
pop
sub
rcr
xor
mov
shl
fucomip
xchg
mov
dec
xor
loopne
test
lahf
in
xor
sahf
add
js
loopne
pusha
push
addr16
test
and
and
mov
test
icebp
shl
inc
aam
add
inc
or
cmp
mov
dec
pop
or
mov
shl
test
shr
inc
test
bound
push
mov
cmp
add
ror
mov
std
fstp
adc
fcmovu
xchg
leave
cmps
loopne
imul
sub
aam
jmp
mov
xor
loope
sbb
adc
lods
jge
sbb
push
xchg
and
mov
pop
mov
mov
or
imul
fmul
test
mov
aam
mov
leave
xor
sub
jnp
jae
nop
arpl
sahf
jp
mov
ds
or
scas
inc
add
xchg
std
inc
or
mov
inc
push
lahf
and
fadd
in
and
(bad)
in
inc
jle
cmps
adc
out
push
icebp
inc
xchg
pop
mov
ffree
adc
jecxz
xor
mov
push
push
mov
fnstsw
add
addr16
xor
cmovnp
xchg
fadd
adc
stos
jl
hlt
cmp
inc
push
dec
mov
xor
xchg
push
pop
ret
inc
xchg
pop
mov
push
push
push
push
sub
sahf
cli
mov
fdiv
xchg
repz
int3
ins
hlt
xchg
cld
cmp
inc
and
into
out
xor
aaa
and
add
push
mov
and
adc
jae
daa
fs
mov
cdq
push
cmp
mov
dec
cdq
out
xor
stos
xchg
aam
or
cdq
jb
retf
dec
inc
push
out
or
jnp
jp
jecxz
outs
push
popa
adc
or
push
dec
fbstp
add
hlt
out
outs
in
mov
jmp
dec
dec
mov
in
in
jbe
clc
adc
in
aas
jp
adc
add
bound
ds
xchg
idiv
sub
inc
mov
out
sbb
hlt
fcmove
lea
fcmove
aaa
or
cmp
aaa
mov
std
imul
jnp
add
push
rol
add
mov
in
xor
pushf
mov
push
and
div
(bad)
lods
cdq
mov
mov
std
xor
out
enter
and
jae
inc
dec
cmp
cvtpi2ps
in
sub
in
jo
stos
call
stc
in
jo
inc
ins
adc
pop
les
jg
jp
cvtdq2ps
(bad)
and
dec
pop
add
jb
sbb
mov
arpl
popa
shr
xor
popa
xor
mov
aas
nop
and
lods
pop
repz
(bad)
mov
sbb
data16
ror
pop
push
xor
into
and
xor
das
arpl
in
mov
or
sbb
daa
imul
out
cmp
fcmovnu
xor
dec
sub
adc
xchg
cmp
sar
add
shl
popa
lock
or
push
mov
mov
sbb
sub
pop
std
pushf
call
leave
into
mov
inc
or
adc
mov
lea
nop
sub
ins
cmc
(bad)
add
and
sub
inc
int3
cwde
pop
movs
inc
neg
les
std
int3
dec
mov
xor
push
xchg
into
popa
push
jmp
adc
sahf
dec
add
push
jmp
dec
and
jne
rcr
adc
(bad)
pop
lahf
aam
jp
mov
shr
ja
sub
mov
and
out
xchg
jns
scas
xor
pop
loope
sbb
xchg
into
pop
sbb
scas
mov
xchg
inc
repnz
xor
gs
ret
and
push
out
ins
pop
jg
repz
(bad)
enter
pop
movs
ds
popa
cld
dec
out
pop
add
(bad)
stc
das
push
pop
sbb
iret
mov
push
add
xchg
cmp
test
lahf
(bad)
xchg
int3
and
fucomp
inc
mov
retf
xor
movs
xchg
mov
push
hlt
rol
lds
mov
jmp
out
push
add
xor
addr16
inc
push
mov
mov
inc
jo
mov
adc
adc
les
(bad)
push
add
std
jmp
pop
shr
dec
push
jo
pop
sub
push
dec
mov
imul
push
stos
jle
out
pop
js
int
into
mov
xlat
fisubr
sub
pop
scas
and
jb
inc
and
xchg
repnz
jg
aaa
cwde
retf
pop
cmp
sub
mov
call
outs
stos
sub
ret
pop
jmp
in
jno
pop
ins
xchg
add
xchg
mov
jae
nop
retf
push
outs
mov
xor
pop
adc
bound
sbb
xchg
inc
inc
cmps
mov
clc
fwait
cs
lock
pop
pop
lahf
int
add
int
dec
mov
das
add
mov
loop
mov
ret
xor
inc
stos
retf
retf
push
ss
fwait
test
js
cmp
test
out
adc
xor
and
out
movs
jbe
adc
inc
push
mov
pop
call
xchg
jle
shr
pop
jg
or
fmul
fcomp
(bad)
fist
mov
test
sti
add
jbe
pusha
sbb
leave
in
frstor
ss
cmp
ja
cld
jp
hlt
das
mul
cmp
pop
test
popf
or
inc
pop
cli
std
cdq
repnz
cmps
cmp
fsubr
xchg
fsubr
enter
fdiv
fisubr
mov
dec
mov
cwde
(bad)
std
jmp
cwde
clc
lock
and
ret
jbe
xor
xchg
inc
fst
jle
and
and
ret
jae
jbe
fcmovne
arpl
mov
enter
and
pop
push
scas
jno
and
mov
aad
enter
sti
xchg
repnz
hlt
and
retf
mov
push
xor
inc
inc
outs
xchg
pop
pop
xor
mov
and
dec
xor
icebp
inc
mov
pop
retf
add
gs
jl
mov
push
dec
add
loope
and
mov
out
xor
fmul
fistp
xor
push
out
je
out
add
mov
xor
jno
mov
fistp
les
or
mov
cmc
lock
and
sub
mov
(bad)
out
mov
sub
mov
cmp
sub
push
xchg
or
mov
ds
outs
mov
or
adc
or
xchg
ja
and
pop
mov
pop
(bad)
push
dec
(bad)
and
xchg
inc
dec
sar
mov
mov
movs
fistp
sub
jp
inc
mov
jns
jl
adc
dec
mov
inc
in
mov
push
das
dec
jnp
pop
xchg
sahf
scas
jge
mov
pop
ins
sub
push
jmp
jb
mov
inc
push
xchg
jp
lds
rol
add
xchg
and
push
fild
add
ins
aad
enter
sbb
cmp
xchg
mov
lahf
sbb
pop
in
std
add
ins
push
or
xor
sub
dec
sub
outs
ja
dec
xchg
mov
push
mov
jle
mov
(bad)
dec
mov
xor
pop
in
push
outs
inc
jl
aam
dec
aaa
lea
retf
jb
pop
int
push
test
sbb
scas
cmp
arpl
sub
(bad)
ror
call
mov
mov
cmps
cld
test
push
fstp
adc
sub
and
xor
jmp
ss
pop
mov
call
add
ret
stos
push
minps
shr
xchg
cdq
xor
xchg
dec
out
cmp
jne
icebp
dec
lods
fidiv
add
mov
in
cmp
fld
mov
inc
add
sbb
das
mov
mov
stos
(bad)
daa
inc
fcom
add
jp
push
pop
nop
je
(bad)
std
hlt
mov
mov
cmp
add
ins
adc
call
mov
jge
push
cmp
(bad)
or
nop
dec
in
stos
push
xchg
imul
mov
retf
dec
add
ins
pop
mov
jnp
add
inc
(bad)
out
xor
loopne
inc
cdq
adc
pushf
mov
cmp
ins
loopne
mov
push
pop
add
nop
inc
sahf
and
test
lds
aaa
and
inc
mov
in
sub
int
pop
adc
dec
aas
mov
rcr
imul
les
movs
cs
test
iret
loop
mov
ja
cmp
cs
dec
dec
jbe
push
cmp
push
push
inc
rol
add
lods
dec
fadd
dec
pop
jg
stos
mov
fs
shr
pusha
mov
scas
cmps
loopne
and
js
xchg
scas
pushf
mov
pop
and
add
jo
xabort
sti
outs
scas
jb
xor
xchg
pop
lea
adc
lock
imul
fs
mov
shl
pcmpgtd
sahf
push
sbb
mov
popf
fdiv
sbb
push
into
sahf
enter
outs
scas
bound
pushf
sbb
sub
dec
jne
and
fild
mov
mov
retf
cwde
adc
fist
mov
cmp
jge
rol
push
jo
ins
cmp
pushf
dec
or
js
jbe
mov
jo
mov
gs
sti
mov
aas
aad
ficomp
xchg
xchg
xchg
and
ins
jl
aas
(bad)
mov
fmul
shl
or
mov
sbb
retf
or
cmp
sbb
jae
stc
add
fcomp
sub
push
ss
mov
jne
rol
add
imul
or
ins
cmp
mov
sbb
(bad)
ins
(bad)
jg
xor
pop
int
out
dec
cdq
fcmovb
cmp
mov
aaa
sub
test
dec
sub
or
std
es
xchg
pop
pop
mov
pop
out
imul
call
aam
into
call
lods
dec
mov
(bad)
and
pop
and
imul
rcr
xor
mov
push
pop
shl
pop
sti
aad
and
in
xchg
(bad)
cmp
ret
xchg
mov
in
sub
ss
or
call
xor
cmp
jecxz
fisttp
xchg
aas
ficomp
jnp
add
fcmovu
(bad)
lock
pop
sbb
sar
jbe
fwait
xor
sbb
and
xchg
mov
jne
rcr
xchg
dec
mov
aam
mov
or
sub
jb
inc
mov
test
cmp
mov
jge
or
iret
call
(bad)
xchg
ins
icebp
push
dec
cdq
nop
xchg
outs
(bad)
ss
pop
iret
inc
and
ror
hlt
loop
out
nop
aam
ds
adc
mov
in
sub
ins
in
(bad)
pop
push
out
popa
mov
jb
scas
dec
pop
es
fsubr
ins
jle
mov
cmp
(bad)
out
sbb
and
outs
push
sub
or
inc
icebp
in
and
fcmove
hlt
movs
aaa
cs
mov
xchg
inc
add
iret
xchg
into
mov
fcomp
and
xor
push
mov
enter
(bad)
cmp
xchg
cmp
popa
pop
int
mov
sbb
shr
in
dec
out
(bad)
ins
mov
add
call
arpl
sub
or
dec
pop
(bad)
fisubr
sub
jns
aam
jnp
cmp
pop
jnp
cmp
xor
ja
xchg
ins
fcomp
push
out
pop
outs
push
and
jo
rcr
scas
leave
movs
mov
push
and
daa
iret
nop
inc
xor
mov
xor
ins
inc
call
es
cmps
sar
std
lods
stos
add
xor
add
jmp
stc
pop
dec
scas
mov
jecxz
pop
cmp
cmp
cmps
and
imul
in
std
sti
and
out
push
mov
push
and
xchg
jo
xor
in
fwait
idiv
movs
fisttp
es
sub
xor
cwde
sbb
ret
enter
inc
rcr
in
mov
xlat
bound
inc
mov
ret
push
mov
mov
jecxz
ins
fstp
in
out
daa
mov
imul
sub
pop
add
imul
adc
in
xor
add
fwait
(bad)
pop
jmp
xor
and
jae
push
dec
mov
xchg
jo
mov
mov
cwde
rcr
inc
scas
in
nop
outs
push
sbb
ret
jmp
ret
dec
inc
mov
jge
add
xor
into
pop
xor
xchg
jb
sbb
inc
cmp
jnp
jg
pop
ins
fldenv
xor
cmp
pop
pusha
xor
sub
pop
inc
inc
arpl
jmp
mul
xor
cmp
out
popa
clc
mov
and
in
adc
aam
add
mov
push
lahf
out
mov
icebp
idiv
and
xchg
lock
push
sbb
jp
xchg
js
loope
add
les
adc
or
push
inc
cmps
idiv
in
mov
in
cs
cmp
mov
mov
daa
jl
loopne
clc
out
pop
stc
dec
sbb
loopne
retf
sbb
hlt
cmp
mov
out
imul
in
jmp
std
js
test
lock
ins
movs
jmp
jg
inc
aad
sbb
push
outs
adc
outs
mov
push
fidiv
sbb
dec
and
jmp
and
cmp
retf
scas
and
(bad)
cmp
jecxz
cmp
mov
int3
push
or
or
and
movs
xor
jg
sbb
or
dec
ja
mov
loopne
sbb
inc
call
add
clc
ror
addr16
inc
xor
sub
(bad)
mov
and
sub
in
xchg
jne
dec
push
mov
cmp
out
dec
sub
je
and
and
mov
dec
aam
jg
mov
jns
std
jecxz
jo
and
lods
dec
inc
mov
xchg
retf
xor
ror
jge
push
arpl
dec
or
fwait
adc
fcmove
lea
or
and
xor
xchg
xchg
jae
xor
gs
mov
mov
push
mov
fcom
sub
cld
sbb
les
push
(bad)
cmps
mov
test
xor
jle
fcmovne
mov
cmp
loope
mov
pop
xchg
xlat
add
jb
inc
and
push
sahf
pop
bound
push
xor
je
xadd
xchg
in
dec
mov
mov
sub
or
arpl
xor
push
cmp
or
or
jg
push
cwde
sub
xor
test
pushf
dec
leave
in
fidiv
js
lahf
pop
mov
es
retf
xor
outs
repz
inc
popa
pop
mov
movs
pushf
inc
jbe
fsincos
loop
add
jge
sub
in
pop
sbb
or
retf
scas
add
es
mov
mov
sub
je
adc
loop
std
mov
xchg
ja
lods
stos
lds
and
mov
enter
dec
adc
xor
add
frstpm(287
mov
test
jp
dec
je
mov
pushf
sub
bound
cmp
adc
out
loope
mov
dec
sub
dec
xchg
mov
mov
xchg
pop
jl
mov
(bad)
and
sub
inc
cmp
pop
out
jb
inc
pop
lods
in
jb
out
adc
pop
mov
inc
adc
jmp
movs
pop
cs
fisubr
shl
and
out
outs
push
out
ja
inc
push
(bad)
mov
add
mov
add
pop
sti
xchg
call
pop
jns
jae
lahf
movs
or
adc
cmp
dec
xor
mov
test
xchg
js
shr
bnd
jmp
js
in
jmp
call
mov
test
pop
mov
scas
inc
or
adc
push
popf
ja
mov
data16
add
aas
movaps
leave
or
add
xchg
cmp
ins
or
add
lods
jb
cmp
lock
mov
lds
test
mov
out
jecxz
out
pop
push
mov
mov
cmps
xchg
sbb
xchg
ja
xchg
dec
jne
jns
add
lods
stos
repnz
mov
pop
js
push
inc
sub
xor
shl
shr
xor
fnstenv
jge
or
cmp
ret
dec
push
or
push
jnp
jno
xchg
sbb
add
and
push
mov
jne
sub
js
jb
or
mov
mov
adc
stc
or
mov
push
or
xor
out
inc
cmp
loopne
imul
jno
lea
and
test
pop
xchg
pushf
cli
test
fs
mov
dec
rcl
push
call
add
jl
shr
out
push
enter
mov
pop
xchg
add
push
add
rcr
fnstenv
(bad)
push
in
mov
jp
mov
ficom
sub
dec
dec
sbb
js
xor
sti
out
lods
push
adc
aad
stc
ret
mov
jp
jmp
pusha
mov
test
movs
das
mov
push
shl
lods
push
nop
stos
pop
pop
jne
out
in
dec
push
repnz
outs
(bad)
int
data16
ins
and
push
lock
ins
mov
popa
xchg
cmps
(bad)
mov
ins
mov
dec
pop
rcl
cmp
in
or
arpl
shl
mov
jl
inc
push
dec
or
push
ret
jecxz
push
and
stc
shr
jg
int
ret
pop
adc
mov
imul
push
add
cmp
adc
mov
(bad)
cmp
cmp
cld
stc
fadd
push
cs
loopne
adc
mov
fs
mov
xor
pop
scas
add
das
int
adc
push
popf
mov
out
not
clc
jae
popa
ror
add
fwait
scas
leave
ss
cld
into
adc
mov
xor
xchg
inc
jg
push
add
xchg
sub
je
repz
nop
scas
cmp
pop
jbe
nop
mov
mov
jmp
add
retf
ret
pop
and
std
mov
dec
cmps
cld
jne
dec
adc
jecxz
stos
out
inc
cs
mov
je
in
jb
cmps
and
clc
outs
dec
pop
mov
shr
xchg
mov
dec
outs
nop
stos
mov
xchg
retf
(bad)
xor
cdq
aam
add
js
add
cmc
mov
mov
rcr
stc
cmp
mov
inc
jbe
sub
iret
ds
retf
gs
push
test
fistp
imul
add
cmps
ja
cmp
sub
into
lahf
sbb
dec
mov
add
cmp
shl
movs
stos
cmps
jmp
imul
cld
xchg
aad
xor
dec
je
sbb
daa
lds
daa
fnclex
mov
xor
pop
mov
sti
adc
lahf
outs
jne
mov
cmp
mov
mov
xchg
fdivr
data16
std
sbb
mov
adc
adc
cwde
jmp
jmp
dec
pop
and
call
mov
cmc
push
test
mov
sub
popa
ins
leave
sub
popf
repnz
sbb
pop
call
call
and
frstor
iret
loop
jecxz
sub
mov
retf
ins
mov
sub
arpl
xchg
out
dec
jmp
lea
sbb
(bad)
pop
sahf
mov
mov
cmp
movs
in
retf
imul
sbb
repz
loope
add
xchg
xchg
ss
loopne
(bad)
mov
xchg
rol
in
sbb
mov
jmp
rcl
cmps
in
out
adc
adc
sub
mov
mov
in
add
loop
sbb
or
aaa
sub
cmp
add
retf
xor
cli
ss
loopne
cmp
fadd
jecxz
and
add
pop
cmps
int3
mov
add
mov
jg
xchg
pop
dec
push
aad
push
aam
shr
mov
pop
or
out
mov
lock
lods
jg
mov
mov
sbb
stc
xor
xchg
je
retf
cmps
movs
mov
mov
inc
sahf
adc
mov
add
jo
xchg
push
jmp
sti
adc
jbe
enter
fs
xlat
aas
sti
mov
mov
push
pop
push
pushf
bound
lods
mov
mov
adc
push
jg
test
dec
pop
inc
or
das
xlat
lods
and
inc
inc
xchg
int3
scas
dec
push
push
mov
scas
sbb
stos
ret
ret
add
icebp
aas
test
lahf
add
mov
pushf
ret
xchg
arpl
mov
outs
es
test
cli
pop
leave
popf
mov
push
clc
sbb
aas
xor
js
lahf
pop
xlat
fidiv
xchg
or
test
cwde
mov
inc
xchg
push
pop
loope
leave
add
jb
mov
sar
push
jns
sub
out
dec
and
sti
push
or
adc
sar
adc
shl
inc
aas
and
xor
sbb
cmp
push
cdq
inc
leave
pop
in
dec
ds
dec
push
test
loope
jp
mov
jg
pop
rcl
xchg
adc
pop
push
xchg
stos
cmp
xchg
inc
mov
jecxz
jbe
mov
(bad)
sbb
int3
cmp
(bad)
mov
js
jae
cmp
xchg
inc
in
xchg
ret
inc
xchg
fadd
pop
mov
faddp
movs
movs
inc
icebp
fwait
dec
mul
dec
jmp
jge
push
mov
je
adc
xchg
fmul
pop
lds
xor
mov
push
pushf
adc
loope
pop
sub
fdivr
loop
mov
dec
test
pop
mov
sub
test
fist
mov
and
push
call
out
loope
add
hlt
sub
retf
mov
(bad)
mov
mov
sti
dec
dec
ss
push
bnd
push
xchg
loopne
inc
fldcw
cmp
jmp
rcr
call
xchg
loopne
adc
add
(bad)
dec
xlat
int3
dec
and
idiv
inc
icebp
sub
dec
les
mov
jle
out
mov
jo
cmps
mov
jo
mov
sti
dec
cmps
ja
mov
push
ds
out
fs
cli
push
and
or
dec
push
sbb
inc
cmp
fnsave
test
cmp
sar
or
cld
sahf
ins
inc
jno
cmp
cmps
or
cmc
movs
mov
dec
(bad)
inc
call
adc
hlt
or
fisubr
and
mov
cmp
or
in
sub
sti
adc
idiv
xchg
rcl
aaa
addr16
cmp
mov
and
stos
xor
sti
js
rcr
movs
xchg
cmp
shl
mov
xchg
stos
out
iret
ficomp
push
mov
outs
shl
arpl
dec
movs
outs
ror
mov
or
pop
inc
lods
sahf
test
aaa
test
outs
sub
mov
frstor
sbb
outs
fwait
mov
sbb
test
xchg
call
sbb
addr16
sbb
outs
sbb
aad
jmp
pcmpgtw
adc
mov
sbb
mov
fistp
sub
sub
add
call
lahf
inc
inc
lea
xor
jns
mov
aad
stos
pop
lods
or
mov
das
or
test
xor
ins
sub
pop
sbb
addr16
push
daa
inc
test
cmp
aad
mov
dec
sbb
(bad)
or
pop
jns
lds
out
dec
and
cmp
fcomp
lods
out
xchg
mov
mov
movs
jbe
push
pusha
jp
mov
mov
mov
mov
in
push
and
cmp
cmp
shr
sub
adc
adc
jne
inc
mov
mov
and
lahf
inc
repz
add
jle
hlt
pop
push
mov
inc
add
cwde
fst
push
pop
xor
dec
cmp
loope
and
jle
mov
mov
inc
mov
adc
aad
aas
es
jb
aad
enter
xchg
ds
add
xor
mov
mov
add
popf
js
and
ret
xor
cs
fbld
in
test
pop
push
test
cmps
scas
push
aaa
dec
loope
jmp
mov
out
sub
pusha
xor
xlat
ins
push
xlat
fsubr
stos
xor
imul
jmp
int3
or
dec
adc
sbb
and
call
pop
mov
lock
pusha
sbb
push
mov
mov
outs
cmp
jns
or
enter
lahf
daa
adc
push
xchg
mov
dec
xchg
xchg
xchg
mov
fcomip
mov
inc
add
scas
das
imul
mov
mov
cwde
adc
or
cli
shl
mov
sub
push
xor
mov
push
cmp
mov
sbb
fimul
out
inc
push
push
rcl
inc
add
fmul
mov
aam
mov
cmc
mov
inc
jo
sbb
(bad)
fs
fld
or
jbe
inc
test
push
cs
xchg
int3
addr16
xchg
rcl
mov
mov
ficomp
mov
pushw
push
add
sub
cmp
or
popa
jmp
jmp
jns
xchg
xor
imul
ror
retf
aad
fwait
and
mov
jp
add
lods
mov
dec
shl
jno
test
dec
(bad)
mov
inc
ret
mov
int
push
adc
fstp
bound
and
dec
cmp
jae
das
movs
shr
adc
pminsw
mov
mov
push
lds
pop
adc
mov
movs
fistp
out
mov
push
dec
outs
(bad)
xor
stc
loope
adc
ins
sar
mov
aas
and
int
cmc
or
sahf
sub
in
outs
push
clc
jecxz
(bad)
gs
mov
or
mov
pop
jmp
cmp
pop
jo
sbb
imul
or
inc
fcmovbe
es
aas
clc
(bad)
cmp
ret
push
das
push
test
rol
inc
cmp
and
retf
xor
and
out
arpl
or
in
xor
cwde
adc
dec
push
sbb
bound
jp
inc
inc
xor
fldenv
fisubr
ds
(bad)
adc
xlat
cmp
push
out
mov
icebp
jle
neg
popa
addr16
dec
xor
in
add
adc
cdq
(bad)
(bad)
adc
aas
sbb
push
fcomp
lahf
cmp
out
dec
inc
or
or
ins
pop
(bad)
aam
sub
sbb
jae
retf
rcl
mov
adc
je
mov
mov
je
mov
xchg
sbb
std
arpl
pop
cmp
aad
enter
inc
cdq
rcr
cwde
sbb
fld
pop
cdq
ins
cmc
aad
jbe
jecxz
shr
arpl
push
loopne
xchg
ds
nop
jle
or
lock
cmp
ror
xchg
adc
enter
jle
jmp
xor
inc
inc
dec
jo
jnp
dec
sbb
xchg
or
add
aam
test
bound
adc
cmp
out
sbb
les
dec
mov
sbb
mov
and
add
or
mov
movs
fmul
mov
inc
int
xchg
std
add
out
and
fist
lahf
stos
cmc
pushf
loop
and
mov
sub
in
adc
imul
mov
xor
mov
cmp
retf
push
add
inc
fild
mov
jecxz
enter
and
test
xchg
movs
push
fld
call
xor
push
aaa
lock
mov
push
rol
inc
jae
ficomp
or
and
iret
pushf
adc
add
pop
inc
retf
jmp
clc
sub
in
jge
iret
sbb
lods
mov
fsubr
xchg
outs
xlat
cmp
iret
jp
cmp
call
pusha
out
xor
push
sti
lods
pop
push
imul
and
dec
pop
push
dec
mov
loop
jae
jns
xchg
adc
test
jbe
ss
dec
outs
mov
sti
mov
jnp
xchg
adc
pop
lea
nop
xchg
mov
rcr
adc
retf
jge
shl
mov
xchg
packsswb
jp
add
pop
jo
mov
popf
fs
popa
packssdw
and
movs
jnp
dec
rcl
mov
pop
into
lea
pop
jge
ss
out
data16
shl
mov
out
push
and
and
icebp
cmp
es
sbb
(bad)
call
shl
loope
sub
out
jo
push
push
in
cs
daa
(bad)
fwait
mov
mov
xor
icebp
call
dec
xor
and
test
xchg
xor
and
inc
sub
cld
imul
xchg
jbe
gs
lods
imul
stos
dec
movs
cmp
push
mov
cmp
mov
es
aam
sub
in
clc
ins
cdq
(bad)
jae
ss
cmp
stos
leave
ins
je
f2xm1
adc
add
pop
retf
jp
or
push
inc
jo
jbe
mov
push
shl
cwde
sbb
leave
mov
pop
imul
shr
outs
sbb
cmp
pop
inc
adc
ret
les
jecxz
inc
fadd
pop
aas
mov
(bad)
shr
mov
cmps
pop
out
loope
cmp
add
lea
xchg
mov
push
cmp
outs
fist
lods
jp
pop
aam
ficom
fidiv
mov
lods
add
cmp
or
aaa
inc
int
jb
push
adc
out
nop
movs
pusha
sar
push
push
out
(bad)
mov
push
ret
jecxz
push
jmp
js
push
or
sbb
popa
mov
pop
fcomip
lahf
lock
cmc
cmp
jns
add
and
xchg
pop
imul
pop
test
cmps
stos
sbb
jge
movs
mov
mov
lock
add
stc
ins
xchg
or
in
lock
or
sbb
pop
repz
or
repz
mov
es
ins
neg
jno
in
ins
sub
adc
cmp
cld
cmp
fs
dec
jns
lahf
repz
les
xor
adc
jbe
or
pop
adc
jb
movs
xchg
xchg
or
jno
mov
mov
mov
or
cld
gs
cli
mov
pop
test
fadd
mov
std
(bad)
cwde
jo
dec
mov
lea
(bad)
pop
pop
adc
(bad)
mov
retf
out
mov
cli
xor
and
popa
xor
xor
outs
in
cmc
std
test
cs
mov
push
into
scas
pop
aas
mov
mov
mov
mov
inc
sub
or
push
bound
imul
cmp
sbb
jmp
movs
imul
inc
or
jl
sub
cld
(bad)
jg
ds
add
mul
lds
push
push
dec
sub
cs
rcr
or
aaa
bound
ins
sbb
cli
lock
(bad)
fisttp
shl
sub
sub
jl
js
fcmovnbe
cwde
movs
inc
mov
test
pop
xor
(bad)
cmc
in
and
adc
xor
sbb
or
shl
sbb
cmp
and
lahf
into
dec
or
and
and
sbb
mov
adc
fisub
shl
scas
cmp
adc
sbb
pop
dec
mov
cld
pop
outs
and
hlt
lods
dec
mov
outs
jae
pop
loope
mov
data16
jo
xor
or
mov
jmp
cmp
dec
dec
push
into
inc
push
repnz
sbb
sub
lods
adc
adc
jecxz
hlt
or
jg
mov
test
inc
xor
jno
movs
mov
xchg
sub
and
sbb
(bad)
dec
inc
sar
(bad)
lods
dec
movs
pusha
dec
fidivr
mov
pop
call
xchg
outs
sub
fidivr
pop
cmp
sub
cmp
adc
sbb
mov
retf
fadd
mov
mov
jle
sbb
jl
jae
ins
ins
mov
push
sbb
dec
sub
clc
scas
inc
inc
repz
ret
rcr
call
or
add
cmp
push
mov
mov
inc
sahf
xchg
cmp
mov
pop
add
dec
cwde
(bad)
addr16
adc
call
push
sbb
push
cdq
sbb
dec
stc
repz
cwde
out
lahf
in
mov
adc
call
movs
xor
or
fistp
mov
and
pop
sub
sub
rol
cmp
test
mov
mov
in
aas
add
xchg
in
xchg
push
pop
mov
hlt
leave
sub
fld
xchg
push
xor
xor
mov
pop
repz
cmp
fist
jno
stos
shl
mov
and
mov
fistp
stos
jge
push
fcomp
scas
and
inc
push
or
scas
clc
mov
pop
xchg
push
outs
repnz
imul
jne
into
call
xchg
push
jmp
inc
mov
mov
add
ror
add
and
loope
cmp
cld
dec
(bad)
retf
sub
in
cmp
sahf
(bad)
outs
test
(bad)
fcomp
push
add
popf
les
jp
adc
fistp
cmp
push
mov
mul
xchg
adc
jnp
imul
int3
popf
push
push
jne
jnp
call
cmc
mov
fidivr
out
adc
jle
inc
jl
(bad)
fucomip
cmp
jge
xchg
imul
dec
adc
pop
lods
mov
fisttp
loope
push
pop
out
int3
sbb
sbb
or
sbb
xchg
push
push
adc
icebp
jp
sahf
mov
in
pop
test
rcr
dec
js
xchg
inc
stos
jmp
add
and
cld
stc
xchg
xor
cmc
ins
sub
or
sbb
inc
test
add
push
lahf
es
daa
test
or
mov
dec
mov
dec
xor
aaa
inc
ror
mov
dec
cmp
(bad)
jmp
popa
mov
cs
aad
push
inc
add
jnp
push
test
pop
sbb
add
inc
xchg
mov
mov
push
add
mov
xor
add
scas
je
movs
das
mov
out
mov
xor
ds
icebp
ins
bound
jne
inc
repz
iret
dec
pushf
in
pop
dec
and
and
push
sub
xor
scas
cmp
mov
clc
iret
or
sub
lea
pusha
push
aad
jge
lods
cmps
out
xchg
sbb
add
std
mov
xchg
jbe
adc
pushf
mov
mov
popf
mov
test
cmp
pop
popf
retf
retf
dec
adc
mov
push
cmc
and
in
xchg
popf
jne
sub
jmp
jnp
test
in
sub
scas
mov
sahf
cmp
mov
jbe
call
fwait
adc
fld
ror
mov
scas
pusha
in
test
and
(bad)
adc
cdq
jp
mov
dec
aad
jle
fisub
sub
dec
ret
lea
lds
jmp
mov
or
scas
add
add
sahf
mov
sub
jbe
fisttp
in
addr16
xchg
xor
push
inc
add
ins
sub
call
pop
fdivr
dec
xor
add
mov
(bad)
mov
mov
mov
sbb
xchg
cld
lea
enter
mov
das
fisubr
sub
xor
push
push
fsub
adc
cmps
and
mov
call
push
adc
sbb
sub
push
inc
test
pop
out
dec
push
jnp
ins
cmp
jle
out
stos
sbb
dec
scas
pop
mov
rcl
stos
(bad)
dec
(bad)
pushf
jno
cmp
cmp
sbb
pop
inc
mov
fwait
jle
push
movs
mov
call
fdivr
jae
add
xor
mov
popa
popa
sub
test
mov
push
cmps
mov
shl
push
lods
xor
scas
or
addr16
fnstsw
xor
inc
push
pop
lock
sbb
jge
imul
(bad)
xor
cmp
adc
rcl
das
sbb
pop
das
jmp
fldenv
(bad)
(bad)
push
push
mov
push
scas
push
and
std
neg
ret
cli
fstsw
js
cmp
sbb
fidiv
retf
cld
fidivr
out
pop
pop
inc
pop
imul
cwde
jae
cmp
adc
push
pop
js
push
xor
jnp
js
xchg
aaa
inc
pop
mov
adc
sbb
(bad)
es
imul
lods
std
jb
push
and
add
push
xchg
enter
jbe
or
cmp
mov
imul
dec
sar
xchg
inc
les
mov
adc
outs
ja
nop
inc
jmp
push
mov
ss
push
test
push
inc
and
mov
pop
mov
mov
mov
test
sbb
mov
sbb
push
std
sub
fcom
push
call
push
mov
bound
(bad)
dec
mov
sbb
mov
mov
ret
aaa
or
inc
mov
jl
fld
dec
mov
jno
dec
xor
jecxz
loope
and
pusha
lahf
arpl
mov
fidiv
jnp
jo
jo
inc
stc
fwait
xchg
mov
mov
cmp
dec
xchg
(bad)
pop
inc
cdq
loop
jp
sahf
bound
(bad)
cmp
or
xor
sub
jge
arpl
les
retf
repnz
iret
pop
mov
mov
xchg
jns
cwde
lods
xchg
add
pop
xor
int3
imul
push
push
fist
test
inc
inc
push
mov
add
push
dec
fnsave
ret
popa
cwde
jp
inc
jae
sti
aas
fnstsw
pop
sbb
or
or
mov
dec
pop
add
dec
xor
jne
pop
pop
int
fcomp
(bad)
in
xor
arpl
mov
sub
sbb
and
outs
adc
dec
ds
push
jne
jne
sub
pop
dec
add
int3
push
fs
mov
jo
push
push
addr16
and
stc
mov
xchg
mov
fs
pop
lock
and
nop
loop
ret
sbb
out
(bad)
jmp
aas
mov
cmc
ret
jl
jl
dec
inc
cmp
and
and
inc
jmp
(bad)
not
jle
xchg
jno
aas
sub
lods
add
call
test
dec
dec
lods
adc
sar
inc
mov
mov
xor
in
or
out
enter
(bad)
adc
or
jge
jmp
adc
sahf
lds
fisub
retf
jns
rcl
inc
repnz
mov
jmp
ror
jmp
dec
xchg
or
imul
sahf
std
fs
pusha
mov
mov
cmps
stc
inc
sar
xchg
push
add
adc
adc
enter
dec
(bad)
cmps
push
lods
xchg
sbb
mov
jle
mov
fwait
movs
jbe
or
mov
aam
or
call
add
push
mov
push
into
sub
outs
and
mov
imul
imul
add
aas
fmulp
adc
xchg
or
xchg
pop
retf
sub
fistp
sub
cmp
sbb
xor
lahf
mov
aas
add
mov
ja
push
mov
mov
movs
lahf
jmp
mov
mov
cmp
popa
pop
jns
and
pop
bound
push
cmp
rol
out
sbb
adc
mov
lahf
adc
push
dec
in
jecxz
inc
pop
into
ret
test
dec
shl
push
or
add
mov
movs
cmp
mov
mov
or
push
lock
xchg
mov
jge
mov
ss
aaa
dec
rcl
in
(bad)
jmp
pushf
aaa
or
xchg
jne
in
dec
in
or
ja
dec
dec
mov
pop
mov
push
jecxz
fstp
je
xchg
jae
fbld
sbb
(bad)
fsub
cmps
pop
sub
jmp
or
imul
sbb
outs
inc
dec
push
jb
sbb
sahf
cmps
in
dec
push
mov
fmul
mov
and
xchg
int3
jno
out
add
push
mov
call
xor
(bad)
fsub
popf
movs
cmps
leave
jmp
lock
xchg
shl
bnd
push
shl
cmp
mov
push
adc
mov
fnstsw
push
push
cmp
xchg
clc
loope
push
shl
rcr
mov
sbb
mov
mov
fidiv
mov
int3
popf
lahf
mov
inc
pop
adc
inc
inc
lock
xchg
je
sub
rcl
je
sbb
clc
lahf
sub
mov
push
push
xor
lods
cmpps
jg
ins
cmp
das
adc
call
lods
sbb
dec
xor
lahf
xchg
mov
xor
lahf
pop
jmp
imul
xchg
and
imul
lahf
mov
arpl
std
shr
xchg
fadd
aas
dec
mov
leave
push
imul
stos
in
ss
cli
cdq
or
scas
ins
nop
dec
sub
cdq
sbb
mov
out
or
or
lods
(bad)
pop
sti
sbb
adc
pop
push
in
icebp
or
and
btr
dec
fs
mov
cmps
(bad)
push
xor
leave
sub
dec
jno
ret
jno
jne
aaa
pop
lock
mov
push
xor
inc
int
imul
pop
sar
jmp
push
or
push
int3
add
pushf
add
adc
mov
das
test
das
inc
cmp
xor
je
leave
sub
xor
hlt
xchg
mov
(bad)
fimul
inc
mov
out
(bad)
mov
out
fs
and
jg
and
hlt
dec
pop
mov
ss
scas
inc
jno
adc
mov
add
(bad)
adc
pop
ret
nop
das
arpl
test
xchg
fstp
imul
outs
test
jle
loop
inc
push
inc
fs
mov
jb
sub
icebp
push
popf
imul
jmp
fsub
xchg
imul
mov
adc
out
aad
mov
mov
fist
test
push
add
inc
out
(bad)
dec
add
aam
and
sbb
xchg
(bad)
sar
sbb
sti
pop
fwait
inc
inc
(bad)
jae
rol
outs
xchg
sub
sub
add
dec
push
mov
fisttp
test
push
daa
cdq
or
mov
rcr
ss
adc
adc
pop
jp
add
repz
stc
sub
in
enter
cld
mov
ins
fld
inc
pop
dec
test
iret
cdq
es
adc
sub
fnstsw
xchg
fist
aaa
and
jo
hlt
mov
jge
out
sub
mov
xor
sub
fcmovnu
mov
pop
enter
xor
repnz
fwait
inc
int
fld
mov
and
fstp
mov
push
into
mov
in
jle
je
adc
iret
cpuid
inc
imul
in
bound
xchg
push
push
push
dec
dec
pop
pop
bound
push
and
fsub
fnsave
fs
fnstenv
les
ins
in
sbb
jmp
inc
imul
out
pop
mov
sbb
outs
nop
outs
aad
mov
or
leave
add
jne
jnp
sub
push
pop
call
xchg
cdq
(bad)
mov
ds
popf
enter
pop
pop
jae
push
jp
stos
fcmovu
xor
loop
cmp
sub
pop
sahf
bound
jle
fwait
adc
aaa
dec
inc
jne
dec
dec
xlat
xor
addr16
icebp
(bad)
movs
xor
add
in
cdq
out
xor
aad
xchg
adc
leave
mov
aad
adc
call
jb
and
sub
push
das
inc
and
scas
push
pusha
(bad)
adc
pop
imul
jbe
pop
adc
jp
aaa
inc
and
mov
mov
xchg
adc
mov
repnz
addr16
inc
push
mov
sub
push
ficom
movs
adc
test
ss
mov
adc
int
mov
aam
inc
sahf
test
lahf
adc
mov
cmp
mov
jle
mov
inc
cld
sub
xor
stos
lahf
mov
jge
mov
stos
(bad)
pop
adc
mov
sub
inc
mov
idiv
data16
mov
push
push
lahf
sahf
lods
push
enter
pop
in
fnstcw
inc
pop
leave
cmp
inc
mov
test
xchg
mov
add
sar
mov
cmp
mov
and
ds
xlat
call
mov
or
pop
rol
ror
cmp
add
jmp
loop
sbb
gs
cmp
or
in
je
bound
jns
bound
in
cdq
mov
js
add
(bad)
imul
test
cmps
add
pop
into
or
mov
xchg
in
fstp
test
dec
enter
mov
iret
xor
fwait
jg
cmp
lahf
mov
out
outs
inc
mov
pop
or
test
cwde
mov
sub
lds
inc
push
cmp
stos
sub
jnp
adc
xor
mov
aam
mov
(bad)
xchg
sub
mov
movs
call
loop
outs
ja
in
fs
scas
pandn
jmp
sbb
cli
mov
add
add
(bad)
lods
push
xchg
cmps
arpl
in
push
jbe
jecxz
fldenv
dec
cmp
daa
into
mov
push
sub
mov
pop
ficomp
push
jmp
xchg
mov
vsqrtpd
loopne
repnz
int
popf
cdq
and
test
push
xchg
mov
pop
and
aad
cmp
add
shl
stos
mov
imul
movs
lahf
shr
rep
inc
xor
outs
push
retf
and
cmp
cmp
dec
cmp
int
loope
stos
push
adc
sbb
aam
das
lds
bound
push
(bad)
dec
inc
push
out
mov
ins
xor
(bad)
pop
add
movs
jno
push
aad
mov
cmp
mov
xchg
mov
jge
cdq
lds
mov
jmp
popf
xor
xchg
lds
or
in
loope
ds
dec
mov
(bad)
sub
pop
jbe
sub
mov
xor
arpl
pop
mov
adc
test
jmp
mov
retf
es
mov
cmp
xor
shl
and
(bad)
pop
pop
js
mov
push
mov
std
fst
cmp
cdq
scas
mov
out
jp
xchg
scas
stos
jnp
shl
ret
pushf
xor
pop
out
mov
enter
cmps
mov
mov
outs
ss
jno
div
das
push
push
sbb
mov
inc
sbb
stos
js
or
and
cdq
dec
jnp
adc
out
add
sub
add
inc
xor
pop
push
jecxz
pop
pop
mov
inc
aam
mov
ror
daa
xor
mov
lods
add
and
loop
mov
scas
adc
mov
inc
fcmove
(bad)
inc
xchg
pop
(bad)
jnp
stc
pusha
movs
arpl
sbb
pop
shl
pop
stos
fild
xor
inc
lea
call
mov
dec
mov
jb
cmp
dec
cmp
cs
mov
cmps
(bad)
cmc
ja
sti
cmp
out
popf
test
sahf
in
jnp
(bad)
int
xor
mov
gs
xchg
and
movs
mov
(bad)
sbb
mov
inc
or
or
punpckldq
sub
jecxz
pop
and
sub
shr
aam
sbb
stos
jno
push
out
xchg
xchg
out
xchg
retf
sub
(bad)
push
dec
xchg
mul
mov
mov
adc
xchg
mov
mov
sub
mov
inc
dec
push
sti
mov
gs
xor
add
loope
jle
ror
xlat
pop
mov
jmp
das
xchg
popa
cmps
or
jp
mov
repz
sbb
fdiv
std
pop
sub
add
loop
std
scas
mov
add
dec
pop
inc
push
sbb
fs
cmps
popf
ins
je
dec
cmp
xchg
sub
pop
cmc
jp
in
fwait
inc
sbb
cmp
sti
push
xchg
fcom
adc
rcl
ins
call
xchg
fs
lea
call
and
pop
add
xchg
cmp
dec
outs
adc
or
movs
sbb
jecxz
movs
pop
adc
mov
cwde
push
in
push
pop
mov
push
push
out
pop
mov
loop
pop
sbb
(bad)
je
addr16
xor
pop
mov
and
jle
push
lds
movs
pop
push
in
push
mov
sub
imul
ja
jge
push
aam
daa
add
xchg
ret
lods
lods
(bad)
mov
xchg
pop
fdivr
out
jno
and
push
rcr
cmps
dec
mov
(bad)
out
inc
rcr
or
push
movs
xchg
mov
jmp
pop
ds
call
cdq
mov
es
cmp
push
jp
shl
mov
popf
stc
popa
push
sti
xor
dec
jne
cmps
and
int3
inc
mov
or
lods
test
call
cmp
int
(bad)
cmp
clc
or
xor
jmp
sbb
sbb
xchg
(bad)
ds
pop
pop
adc
add
mov
cmp
or
pop
mov
fidivr
popf
out
sub
call
pop
imul
sbb
aas
xlat
into
jmp
and
push
push
adc
jecxz
(bad)
push
scas
mov
les
repz
std
out
dec
mov
test
(bad)
jp
hlt
xchg
gs
jmp
jg
cmp
in
ss
adc
rcl
xor
test
jmp
sub
jmp
repz
push
aad
inc
shr
aad
mov
in
push
sahf
push
cs
rcl
inc
jecxz
dec
inc
(bad)
lds
jns
adc
sub
test
aam
mov
inc
pop
pop
xchg
push
xchg
mov
bound
add
mov
sti
push
je
sub
add
rcl
mov
xchg
or
cmc
comiss
sub
push
hlt
pop
push
or
cli
xchg
pop
(bad)
cmc
push
scas
cmp
inc
fisttp
popa
pusha
jb
mov
adc
and
jae
out
mov
lahf
outs
inc
and
movs
mov
or
jnp
mov
xor
mul
ret
sti
xchg
mov
lods
mov
lahf
fist
push
fldcw
mov
(bad)
out
outs
jae
call
xor
mov
daa
addr16
inc
(bad)
movs
fstp
(bad)
fwait
push
xchg
addr16
add
adc
sbb
sub
sbb
or
dec
clc
mov
movs
out
test
or
mov
mul
cmp
cmc
sub
mov
in
cmp
cld
mov
call
(bad)
lods
stc
sub
push
pop
mov
cs
pushf
dec
xor
clc
pusha
ss
mov
dec
adc
mov
xchg
mov
inc
iret
push
cmps
pop
xchg
xchg
test
mov
cmp
xor
cmps
pop
int
xor
mov
adc
add
ret
shl
ror
mov
sub
pop
test
sub
xchg
xlat
movs
pop
xor
aad
mov
repnz
(bad)
shr
test
loopne
jmp
sub
(bad)
jne
stos
push
mov
cld
push
or
daa
push
xor
lahf
ins
imul
mov
jne
fld
jle
or
add
sbb
mov
sbb
push
stos
inc
movs
lahf
fsubr
and
es
mov
cmp
(bad)
loope
mov
or
pushf
or
lea
xlat
lods
dec
test
and
add
sti
test
push
pop
sbb
leave
xor
pop
push
into
fdivrp
xchg
sub
rcr
or
mov
imul
mov
mul
dec
jno
or
fdivr
sub
sub
push
cmp
stos
rcl
mov
aaa
inc
movs
retf
or
mov
xor
jo
mov
test
or
add
cwde
add
jns
or
mov
xor
add
es
test
pop
fisubr
sbb
ja
jbe
add
test
xchg
stos
std
cmp
inc
cld
add
cmp
je
jmp
jno
inc
test
(bad)
pop
lea
test
ds
mov
(bad)
cmps
and
imul
js
leave
sbb
xlat
popf
call
jle
jnp
and
into
stos
jg
and
mov
cwde
fiadd
(bad)
sub
imul
and
xor
adc
stc
inc
inc
not
mov
cld
sti
xor
mov
adc
ret
cli
repnz
cmp
xchg
cdq
fs
adc
inc
jle
mov
das
aas
cmp
mov
or
add
movs
in
ret
(bad)
outs
xchg
lods
sub
mov
scas
mov
ins
and
fild
lea
sbb
jb
push
add
pop
shr
ror
cmp
enter
adc
cmps
stos
inc
cld
call
pop
pop
js
repz
sbb
out
add
addr16
sahf
push
pop
mov
or
stos
call
and
xor
and
sbb
repz
imul
pop
scas
fisub
ins
mov
adc
shl
ins
xchg
es
jnp
adc
mov
test
cwde
xchg
add
sub
inc
and
adc
inc
lods
cmc
cmc
inc
pop
ret
aam
jmp
scas
push
pop
das
or
inc
pushf
push
out
push
jne
add
cli
inc
or
mul
sbb
aaa
fisttp
push
xchg
jg
cmp
sub
xchg
xor
push
xchg
adc
invd
adc
inc
dec
jns
dec
fiadd
bound
mov
addr16
mov
inc
aad
dec
dec
shl
sub
js
fldenv
(bad)
scas
test
in
mov
loope
test
fadd
adc
cmp
and
pop
jle
cs
and
cmp
aad
xchg
sahf
push
xchg
shr
sub
cld
(bad)
clc
add
xlat
cdq
cdq
push
adc
mov
sbb
fdivp
pop
movs
inc
call
sbb
in
dec
xor
jbe
and
loopne
int3
fadd
mov
test
es
push
(bad)
dec
ret
cwde
jnp
xchg
add
test
add
int3
jne
into
inc
in
and
sbb
mov
jmp
pusha
cmp
stc
add
cwde
sbb
ficom
(bad)
hlt
inc
pop
clc
xchg
movs
dec
repnz
outs
repnz
data16
clc
lds
ins
repnz
rol
or
add
aam
sbb
stos
or
jno
iret
pop
pop
jmp
movs
mov
cmps
out
jo
add
int
adc
sbb
push
adc
and
out
(bad)
or
and
nop
inc
sub
pop
mov
stos
push
leave
lods
mov
sbb
cmp
cmps
xchg
int
cmp
cld
push
sbb
popf
sbb
lods
xchg
ret
cmps
jge
xchg
int
dec
mov
mov
xor
sub
nop
push
scas
cli
dec
sbb
or
add
popa
sub
dec
mov
mov
sub
jecxz
stc
(bad)
mov
push
fidiv
inc
ins
pop
jnp
push
jg
cs
jo
bound
add
xchg
ds
cmps
push
pop
pop
dec
mov
push
daa
mov
xor
push
inc
cmp
sbb
int3
pusha
dec
fwait
ds
pop
mov
xor
inc
push
stos
stos
rcl
cmp
cmp
imul
dec
icebp
out
pop
xchg
pop
rcr
dec
sub
popf
lock
dec
xchg
je
dec
imul
das
jmp
xor
inc
int3
pop
mov
addr16
(bad)
and
mov
cli
sub
fisubr
fiadd
adc
or
les
dec
out
mov
add
mov
pop
and
mov
cld
cmp
pop
out
jmp
jns
cs
push
adc
mov
dec
mov
hlt
mov
xor
loopne
xor
cdq
mov
lea
dec
outs
or
jno
sub
scas
or
repz
sub
sbb
sub
dec
pop
adc
inc
mov
sbb
into
xor
pop
mov
dec
enter
or
pop
mov
movs
popa
iret
sbb
or
mov
rcl
or
mov
xor
ja
xchg
fld
mov
cmp
add
(bad)
fidiv
mov
jae
and
fcomp
pop
jbe
dec
js
push
mov
dec
xor
cmps
nop
inc
das
xchg
mov
push
cmp
fist
and
add
loop
add
pop
cmp
jl
inc
dec
(bad)
scas
sti
retf
shr
adc
shl
call
push
mov
out
out
outs
into
stc
cs
test
call
mov
shl
hlt
push
shr
and
rcl
mov
nop
out
das
inc
sub
push
(bad)
sub
adc
jecxz
adc
or
std
push
push
movs
xor
jmp
(bad)
xor
pop
mov
mov
loope
aaa
mov
hlt
add
or
cmp
neg
std
movs
cdq
shl
adc
mov
sbb
or
sub
sub
arpl
pushf
adc
jmp
push
fild
lods
iret
adc
cmp
je
inc
dec
pop
push
(bad)
aaa
dec
mov
sub
sahf
sti
inc
fwait
adc
test
es
jge
mov
fnsave
aad
or
retf
gs
adc
(bad)
mov
and
in
in
clc
mov
push
repnz
aad
in
and
es
cmp
push
jne
fiadd
xchg
adc
nop
retf
ss
adc
xchg
xchg
mov
or
and
mov
scas
push
fwait
ins
pushf
jl
cmc
inc
mov
bound
mov
bound
sub
xlat
cmp
inc
inc
lods
pop
jbe
pop
sub
sub
push
or
push
push
sub
push
cmp
dec
xor
pop
and
sahf
adc
jmp
(bad)
retf
push
adc
jns
shl
sbb
loope
popa
stc
xchg
int
adc
sbb
cwde
add
rcr
fs
scas
jl
jmp
and
inc
jns
mov
(bad)
mov
int
jns
sbb
pop
call
sahf
pop
mov
and
and
dec
fcomp
mov
mov
add
push
mov
fbld
fist
xor
jne
cdq
(bad)
jae
add
pop
sub
int3
iret
sub
lock
leave
pop
jae
aam
fwait
mov
pop
add
aaa
idiv
inc
jmp
outs
sbb
cmps
fld
and
data16
data16
ins
cmp
and
xchg
or
mov
fst
xor
jae
mov
pop
in
das
push
es
mov
push
push
popa
(bad)
call
mov
(bad)
push
(bad)
push
xchg
push
jo
mov
bound
mov
add
push
mov
jecxz
cmp
add
es
stos
in
fadd
(bad)
enter
sar
and
pop
sbb
adc
fwait
je
arpl
daa
or
mov
outs
or
cmp
daa
jecxz
adc
fisttp
inc
out
pop
in
mov
jp
ss
popa
cmc
pop
jnp
enter
pushf
pop
fs
lds
add
mov
xchg
sub
scas
arpl
xor
sbb
xchg
(bad)
xlat
xchg
push
pop
jp
and
idiv
mov
xchg
inc
pop
mov
jecxz
lds
leave
mov
mov
inc
mov
jo
mov
repnz
add
daa
fsub
sub
call
adc
mov
dec
sti
dec
mov
xchg
out
shl
popf
fwait
mov
test
stc
pop
inc
jae
push
push
cld
inc
popa
add
loop
push
popa
test
cmp
in
jmp
inc
les
or
dec
stos
push
add
xor
cdq
xlat
adc
enter
mov
addr16
cmp
push
stos
lods
popf
pop
xchg
inc
dec
out
inc
inc
in
stos
add
test
inc
mov
std
stc
mov
jg
jae
sbb
mov
push
in
aad
in
retf
movs
pop
xchg
mov
or
stos
(bad)
xor
test
gs
mov
or
sbb
into
retf
or
ins
push
(bad)
xor
call
std
push
loopne
data16
add
add
jnp
cmp
into
dec
lods
sbb
fmul
dec
bound
fld
aad
sbb
adc
out
jg
xor
stos
dec
cmp
or
cmp
and
jl
mov
mov
out
stc
fwait
(bad)
pop
jecxz
cld
mov
(bad)
das
icebp
sub
or
aaa
mov
mov
fnstcw
sbb
xor
cmp
sub
mov
mov
adc
rol
pop
pop
push
out
iret
pusha
rcr
mov
daa
adc
jl
out
test
mov
sti
xor
cmps
pop
lods
and
xor
xor
fmul
jno
mov
cmp
cld
jae
adc
xor
push
push
movs
mov
aam
inc
daa
pop
mov
and
jae
into
mov
loop
sar
jl
lods
sbb
inc
mov
enter
mov
mov
enter
std
icebp
rcl
mov
cld
sbb
jno
jmp
xor
sbb
xor
and
inc
xor
xchg
dec
or
test
dec
push
or
aam
push
sub
pusha
fiadd
out
hlt
mov
mov
xchg
mov
shl
adc
mov
ret
(bad)
cwde
mov
fs
loope
pop
fst
(bad)
mov
idiv
scas
add
jle
fdivr
mov
or
mov
and
cmp
xchg
(bad)
adc
(bad)
repz
sub
jno
scas
sti
lods
mov
inc
sub
(bad)
mov
sbb
cmp
and
xor
(bad)
ja
sub
push
inc
shl
or
push
ins
jg
aam
cmp
ds
mov
test
xor
(bad)
dec
cmp
(bad)
fisubr
bound
cmc
dec
fs
mov
mov
idiv
sub
stc
jns
out
push
ficom
cmps
fwait
call
mov
push
jmp
retf
dec
arpl
cmp
fild
out
mov
and
mov
mov
out
fwait
test
leave
ret
mov
cmp
pop
call
or
ficom
fs
adc
push
push
push
mov
fisubr
or
jge
dec
aas
stos
jle
test
add
dec
add
mov
stc
xchg
add
call
jae
mov
xchg
aaa
outs
push
cmps
in
rol
jnp
xor
popf
jnp
ss
dec
fisubr
je
sti
ja
adc
sbb
mul
inc
cmps
pop
imul
fs
and
push
dec
pop
inc
fwait
cmp
and
scas
std
inc
dec
push
jnp
pop
leave
mov
cdq
xchg
js
push
movs
lods
sub
xchg
push
xchg
xchg
imul
xor
jp
(bad)
jg
data16
sbb
sub
xor
std
(bad)
imul
cli
sbb
loopne
inc
jecxz
ins
adc
(bad)
mov
cmc
adc
int3
add
mov
pop
rcr
aas
adc
adc
push
fcom
or
js
adc
out
pushf
fwait
mov
dec
je
loop
in
stc
stos
rol
ret
mov
xor
add
or
adc
add
dec
ins
mul
pop
add
cs
jno
sbb
jae
cmp
mov
xchg
jmp
je
in
xor
test
mov
or
or
pushf
sbb
retf
fidivr
mov
int3
or
loope
scas
or
xor
aad
outs
xchg
ror
adc
ror
cmp
xor
jnp
out
daa
rcr
loope
mov
sbb
jne
push
into
mov
sbb
sub
inc
outs
bound
cmp
dec
sbb
data16
mov
sti
std
(bad)
or
and
or
or
loope
scas
fisub
je
cmp
jb
in
scas
fwait
jg
inc
mov
mov
call
inc
out
cmp
cdq
into
movs
sbb
out
jp
outs
test
lock
adc
cmp
mov
mov
cmp
cmps
mov
mov
xor
push
and
jp
pop
mov
cs
(bad)
sub
jmp
repnz
inc
or
(bad)
retf
fcom
push
push
mov
daa
call
and
daa
shl
mov
or
fnstenv
jp
fs
xlat
push
jno
cs
js
loop
fwait
and
pop
(bad)
lods
not
jbe
xchg
cmp
xchg
enter
popf
add
push
loope
jmp
sti
mov
ret
xor
lock
test
ss
xchg
and
sbb
rcr
push
jp
ja
push
cmc
mov
cmps
cld
add
add
mul
in
pop
out
mov
adc
push
stos
xchg
jnp
mov
fnstcw
(bad)
and
nop
fstp
pop
ins
(bad)
push
cmp
out
pop
out
and
ror
add
movs
inc
lea
jg
inc
loopne
into
bound
out
push
lods
idiv
or
and
xor
and
dec
push
loop
(bad)
mov
cmp
fucomp
cdq
inc
xchg
mov
lods
loop
int3
jns
cmc
pop
pop
fs
lods
(bad)
call
imul
jp
xchg
mov
out
or
mov
dec
in
in
lds
xchg
(bad)
popf
fsubr
and
add
inc
fisub
movs
inc
mov
ror
jbe
jg
pop
clc
fwait
out
mov
mov
in
fdivr
push
lahf
paddw
addr16
rol
movs
loop
jbe
pop
adc
push
lods
cmps
add
in
sbb
mov
repnz
das
adc
jae
or
mov
movs
ja
aas
and
xchg
jge
sti
pusha
xchg
pushf
sbb
call
push
and
cld
call
xchg
lods
hlt
js
sub
jns
inc
adc
mov
pop
mov
scas
jle
cmp
jecxz
push
xor
imul
and
sbb
in
cmp
lds
xor
std
or
mov
imul
scas
cmp
cmp
outs
xchg
movs
inc
adc
xor
dec
cmps
add
repz
or
(bad)
in
test
lock
das
imul
sub
push
jmp
xchg
stc
cmp
push
scas
mov
loope
iret
cmp
xchg
int
js
jnp
mov
ins
test
sbb
scas
and
pusha
push
add
xchg
js
inc
or
sbb
mov
dec
and
gs
push
xor
jns
scas
inc
movs
out
jbe
xor
mov
les
push
retf
xor
idiv
pop
push
sar
fadd
jae
lea
mov
ds
stos
sbb
(bad)
in
xor
or
sti
adc
mov
in
cs
loope
mov
mov
in
jp
cmp
dec
pop
stos
clc
mov
cmp
fidiv
add
popa
sbb
adc
add
xor
data16
ficom
sbb
add
popa
pop
mov
push
(bad)
iret
adc
sar
adc
jmp
cwde
dec
and
cmp
push
mov
fwait
xlat
sbb
fdiv
jno
push
outs
mov
mov
xchg
mov
sahf
sar
or
sbb
inc
int3
std
popf
mov
test
je
cld
aam
shr
out
(bad)
jmp
add
cli
mov
imul
xor
and
mov
outs
push
jno
pop
stos
cmc
test
push
stc
(bad)
mov
retf
fs
(bad)
xchg
aad
jl
rol
jl
sar
push
shl
cmp
popa
fdivr
popa
mov
push
sti
lahf
js
cmp
stos
or
mov
push
mov
ins
sub
scas
pop
cwde
or
lods
push
sbb
mov
sub
adc
xor
stos
rcr
enter
fs
push
xchg
popf
sub
xor
aas
xor
mov
std
sbb
lahf
mov
hlt
pusha
push
xchg
sub
sbb
dec
imul
and
fcomp
push
data16
sub
cli
adc
push
push
lods
jmp
test
leave
gs
push
(bad)
mov
in
push
inc
cmps
repnz
sbb
aas
movs
cmp
xchg
into
bound
xor
inc
mov
call
(bad)
call
enter
jecxz
leave
(bad)
stc
mov
jge
inc
adc
in
and
call
stc
fmul
inc
in
push
fbld
jmp
xchg
lahf
in
or
test
push
cmps
movs
cmp
hlt
or
xchg
(bad)
call
clc
test
jbe
jo
or
pop
sub
movs
idiv
mov
sub
ficomp
and
xchg
adc
loope
call
stc
push
es
xlat
aad
imul
cwde
aas
loope
xor
test
xor
mov
pop
push
xchg
retf
mov
mov
adc
and
jb
aas
fsub
adc
push
cmp
xor
leave
aad
fcom
mov
xor
icebp
or
repnz
and
sar
(bad)
mov
cs
mov
mov
daa
inc
cmp
lods
not
lea
lahf
call
aas
add
in
pop
aad
cmp
pop
dec
mov
mov
pop
fld
dec
hlt
aad
daa
out
popf
ret
or
pop
stc
cmp
gs
ret
xchg
cmc
xor
adc
push
stc
call
push
sub
xchg
push
and
js
lahf
jno
gs
push
data16
ret
ins
jg
rcr
dec
pop
fld
popf
mov
mov
les
adc
cmps
and
pusha
mov
repz
inc
xchg
cmps
pusha
jne
inc
jle
push
mov
adc
push
mov
(bad)
adc
mov
adc
cmp
vpsubd
xlat
mov
push
shl
inc
cmp
(bad)
lea
fistp
loopne
cwde
rcl
or
mov
mov
shl
pusha
xchg
fwait
xchg
mov
cmp
mov
and
xchg
lock
mov
clc
cs
fwait
pop
pop
out
mov
js
repnz
push
gs
mov
xchg
adc
xchg
leave
pop
sub
mov
mov
cmp
xor
mov
add
clc
aaa
ins
retf
sbb
pop
imul
xor
mov
sub
imul
push
loopne
les
gs
fmul
push
cmps
aam
es
mov
retf
sahf
pop
add
lds
cmp
out
(bad)
pop
dec
dec
push
mov
add
cli
enter
push
dec
ins
es
dec
aam
push
movs
push
add
iret
push
stc
and
shl
aam
call
daa
cmp
xchg
icebp
pop
pop
dec
pop
in
push
jbe
jmp
loope
cs
mov
xor
mov
mov
mov
test
cwde
(bad)
adc
shr
div
aas
sub
push
ja
pop
ins
and
inc
pop
mov
xchg
movs
lds
mov
cmp
mov
sbb
test
mov
xor
inc
jp
aad
xchg
fdiv
fbstp
cmp
scas
(bad)
fsub
pop
cld
lahf
sbb
sti
sbb
cmp
xchg
ds
cld
sub
jmp
mov
mov
sub
mov
out
cwde
mov
adc
xchg
sbb
imul
cmp
test
mov
ror
sar
ja
imul
add
mov
jno
xor
sbb
xchg
xor
std
(bad)
syscall
fisubr
pop
sub
imul
shr
je
pop
mov
mov
pusha
push
outs
mov
mov
xor
jnp
mov
push
cmc
or
out
in
jo
jnp
jne
out
xlat
and
sahf
add
jns
add
push
push
imul
pop
pop
rol
push
aas
mov
sub
xchg
stc
aas
clc
and
cdq
add
loop
ficom
xchg
push
ror
dec
scas
mov
loop
push
gs
sar
cmp
fld
sti
pop
mov
push
and
ds
pop
push
adc
in
or
mov
cmp
and
xchg
scas
push
retf
push
xchg
push
sbb
aas
adc
jle
(bad)
shr
jae
dec
and
cli
adc
xor
dec
and
jmp
push
pop
push
push
fstp
stc
jno
dec
mov
and
(bad)
add
mov
pop
pop
scas
imul
cwde
ja
sbb
ja
rcl
jb
jle
or
xor
push
or
test
mov
and
lock
add
sbb
push
or
pop
mov
fsubr
stc
xchg
sub
lods
idiv
push
(bad)
sub
cli
aad
imul
fcom
xor
test
jns
mov
push
sbb
push
bound
xchg
mov
jmp
imul
pusha
adc
adc
pop
scas
adc
ret
in
mov
lahf
mov
and
das
sbb
pop
jg
addr16
nop
jbe
fld
jno
mov
repz
scas
jne
and
in
sahf
iret
xlat
(bad)
lods
sub
sti
jl
ror
cmp
push
bnd
add
push
inc
jns
and
sti
je
xchg
arpl
(bad)
mov
cmps
test
outs
lea
les
leave
mov
fisubr
mov
mov
(bad)
cld
lahf
xor
lahf
(bad)
not
xor
inc
sbb
inc
ds
(bad)
in
retf
aam
cmp
in
aam
inc
jg
sbb
pop
mov
cmc
dec
out
cmp
xor
cmp
pop
stos
sti
(bad)
sbb
(bad)
mov
enter
fidiv
cmc
test
sub
fild
cmovle
aas
icebp
xor
adc
jmp
dec
jg
ret
js
mov
dec
fs
lock
daa
fwait
pop
pop
dec
and
dec
push
aas
push
and
jns
jg
adc
dec
scas
icebp
neg
stos
fdivr
stos
jne
nop
ja
adc
lock
and
scas
and
mov
sub
data16
jne
adc
inc
mov
ins
add
in
jmp
test
xor
push
and
cmp
cmp
cmps
jmp
lods
rdtsc
xor
aas
push
ret
dec
les
shl
mov
(bad)
(bad)
js
xor
es
xchg
aaa
sar
mov
and
mov
ja
sub
mov
jo
arpl
ds
mov
jne
dec
cmc
lea
and
jns
rcr
jge
sar
rcl
push
neg
(bad)
xor
cmp
xor
inc
movs
jmp
neg
mov
stos
in
fistp
bnd
and
ds
int3
jmp
push
ds
sbb
mov
clc
add
retf
sti
and
sub
scas
cmp
repz
xor
push
push
loop
adc
mov
mov
icebp
stc
sbb
sub
cmp
xor
retf
xor
gs
div
push
(bad)
clc
sub
ins
es
test
(bad)
fcomip
(bad)
sahf
aas
mov
or
stos
adc
mov
lea
mov
add
lods
ret
cld
push
dec
push
sub
(bad)
mov
push
call
jb
movs
push
fnstenv
into
mov
sub
fldcw
xchg
pop
mov
fsubr
popa
ret
cmp
outs
xchg
popf
aad
aaa
icebp
outs
push
mov
gs
adc
pop
fs
inc
push
xchg
shr
repz
loop
rol
sahf
inc
adc
popa
mov
inc
shufps
ss
dec
or
cs
sbb
sbb
stos
in
retf
add
xor
xor
sbb
int3
ret
(bad)
sub
loopne
mov
stc
stos
jnp
hlt
scas
sbb
nop
jns
lea
xor
jle
ret
xor
xor
mov
aam
mov
js
mov
dec
loopne
mov
push
out
cmp
mov
nop
and
add
repnz
sub
jg
mov
adc
inc
adc
adc
pop
cmp
pop
in
jecxz
jo
xchg
out
sub
pop
aad
xchg
into
mov
retf
call
add
mov
test
(bad)
cmp
sahf
or
cdq
pushf
dec
adc
xchg
mov
call
fwait
add
inc
test
and
push
push
mov
dec
cdq
into
jae
shr
in
fnstenv
fwait
dec
in
fs
jl
push
jle
pop
inc
ds
mov
aam
mov
enter
and
mov
pop
cwde
(bad)
addr16
jp
xchg
sar
or
(bad)
pusha
sbb
sbb
into
jge
pushf
pop
fstp
adc
sbb
ffree
or
mov
inc
and
inc
jecxz
repz
cmps
std
dec
(bad)
jge
fadd
sub
(bad)
loop
call
sub
fdivr
jne
jmp
stc
pop
pop
lahf
test
cmps
jmp
inc
mov
call
xlat
mov
mov
dec
xor
adc
pop
lods
movs
or
push
(bad)
mov
imul
test
push
xlat
sti
into
ret
repz
dec
dec
adc
movs
or
dec
test
std
ja
(bad)
fs
(bad)
mov
nop
rcl
icebp
shr
sub
das
sbb
xchg
(bad)
clc
adc
test
inc
push
jmp
enter
push
cmp
lahf
add
sub
mov
pop
outs
xchg
cwde
xor
scas
jmp
push
pop
sbb
lock
fdiv
(bad)
push
or
sub
inc
push
cwde
jnp
imul
mov
push
or
leave
mov
cs
loopne
and
pop
repnz
movs
jo
pop
hlt
or
mov
cmp
push
mov
xlat
mov
iret
out
out
xlat
mov
aad
imul
aam
xor
adc
mov
xor
pop
shr
ds
dec
sub
cdq
gs
xchg
mov
jmp
add
or
loopne
shr
and
push
mov
dec
shr
in
popf
cmc
add
dec
mov
push
pop
(bad)
fs
aad
jo
scas
sub
add
scas
leave
loopne
mov
mov
out
jnp
sub
dec
loopne
xchg
adc
imul
test
scas
loop
cmp
add
fst
repz
dec
mov
into
pop
push
lock
cmp
dec
xchg
and
les
inc
lods
js
sub
jae
sbb
aaa
xor
xchg
pop
adc
xchg
in
sub
test
jl
sbb
mov
call
scas
pop
mov
mov
outs
dec
mov
ins
cmc
mov
gs
sbb
daa
and
mov
fldcw
jmp
out
je
ss
daa
push
mov
cmps
xchg
lods
cmp
test
xchg
pusha
xchg
jmp
ror
adc
dec
jp
in
bound
xchg
pop
mov
add
dec
sbb
xlat
mov
sub
(bad)
in
mov
pop
sub
scas
icebp
lock
mov
js
test
pop
div
arpl
lahf
xlat
in
fnsave
jmp
jmp
fnstcw
adc
xlat
or
ja
cs
and
cmps
movs
push
hlt
ds
and
dec
inc
ins
sub
mov
cmps
mov
ret
jno
mov
add
scas
xor
test
pusha
fcom
mov
test
repnz
mov
outs
push
outs
mov
mov
addr16
mov
or
cmp
sahf
sub
sbb
add
mov
cmp
and
cmp
and
pop
movs
xchg
je
push
cli
dec
shr
adc
in
mov
pop
jns
adc
addr16
in
xchg
jne
imul
js
aam
pushf
cmp
call
sti
in
inc
retf
or
mov
sahf
outs
pop
xor
cld
sti
cmps
fld
xor
out
or
cmps
mov
dec
in
adc
xor
mov
or
jl
bound
inc
fdivp
xchg
and
dec
out
mov
pop
leave
sti
jge
call
jnp
(bad)
sahf
sahf
xor
dec
xchg
xchg
mov
add
pop
iret
mov
sbb
popf
inc
test
cmps
addr16
add
iret
dec
mov
mov
icebp
in
sbb
pop
cs
js
out
iret
cmp
inc
mov
xchg
dec
pushf
iret
and
add
mov
push
movs
je
cdq
mov
les
xlat
call
out
out
ror
fwait
pop
test
mov
loopne
pop
nop
lods
adc
cmps
lods
mov
or
cld
fwait
out
leave
test
retf
jno
push
sbb
push
add
imul
pop
push
and
aaa
dec
mov
inc
mov
cmp
nop
cld
lods
cmc
sbb
cmps
imul
dec
jbe
xor
in
fmul
inc
test
push
xchg
daa
add
dec
retf
(bad)
rol
sar
in
add
xchg
fdivr
mov
or
(bad)
xacquire
fabs
(bad)
ret
rep
cld
mov
inc
cmps
addr16
mov
inc
mov
mov
aaa
inc
pop
push
mov
inc
mov
sbb
push
dec
in
out
sahf
push
std
mov
or
icebp
xor
and
call
jmp
dec
stos
xor
push
(bad)
fldcw
add
fistp
shr
push
rol
fist
cdq
mov
inc
call
pop
in
lahf
and
mov
ins
loop
pop
mov
jne
js
lea
mov
xchg
arpl
gs
std
add
ror
repz
mov
mov
jl
cmp
dec
pop
jne
enter
push
xor
mov
mov
mov
xor
mov
pop
mov
sbb
ficom
(bad)
jecxz
fld
pop
jae
ja
sub
sbb
arpl
add
jno
xchg
ins
fstp
jb
jne
fs
scas
shld
add
jbe
lods
jbe
lds
call
mov
(bad)
mov
leave
jo
mov
into
push
mov
bound
(bad)
push
jne
lds
not
dec
jae
add
mov
retf
mov
xchg
cmp
cmp
arpl
data16
aaa
cmps
lds
mov
das
bound
loopne
(bad)
mov
aad
test
nop
mov
inc
cmps
cmps
jb
sbb
sub
mov
adc
xchg
xchg
mov
mov
adc
mov
dec
pop
fmul
jp
test
push
and
xchg
mov
fisttp
out
dec
jnp
sub
mov
loope
jp
or
jge
push
xchg
push
(bad)
xor
adc
xchg
xor
sti
icebp
loopne
push
inc
sbb
nop
loopne
inc
pusha
sub
pop
iret
sub
cmp
mov
je
scas
jmp
push
rol
stos
adc
sbb
lods
cmps
hlt
popa
popa
xchg
das
or
andnps
test
clc
and
call
add
inc
std
stos
mov
adc
add
or
push
retf
rcr
mov
jge
rcl
or
push
push
push
vcvttsd2si
mov
add
out
mov
push
xchg
pop
pop
movs
jl
xor
rcl
pop
ins
mov
sbb
mov
movs
sysret
aas
fcom
jmp
imul
inc
pusha
inc
cmps
or
aad
inc
fst
dec
mov
xchg
hlt
mov
add
in
lock
enter
retf
xlat
(bad)
shl
hlt
rcr
das
jns
jle
and
outs
enter
mov
lea
fld
cmp
sub
or
sbb
jmp
les
xchg
adc
jne
stc
push
cmp
inc
enter
pop
test
retf
xlat
popa
pushf
sbb
(bad)
mov
mov
int3
mov
ds
test
scas
(bad)
cmp
fsubp
test
(bad)
loope
xor
fldenv
mov
push
jp
mov
mov
fcom
pop
int
je
pop
movs
pop
mov
cdq
add
ret
sub
in
lds
mov
xor
xchg
inc
mov
mov
into
cli
test
ffree
fsubr
sub
mov
sbb
jge
and
mov
jo
cli
mov
aas
mov
jo
pop
mov
movs
or
es
adc
std
cs
pop
cmp
xchg
mov
push
ins
repnz
out
stos
scas
pop
into
adc
call
adc
ins
lea
pop
(bad)
out
or
push
add
stos
add
xor
lods
inc
fbld
mov
pop
mov
leave
stos
and
xor
jmp
dec
cmp
or
add
push
jae
dec
cld
stos
pop
dec
in
(bad)
sub
cmp
sbb
cmps
pop
sub
ret
cmp
mov
push
mov
cld
mov
push
cmp
les
test
sbb
out
js
out
cs
push
aas
dec
mov
pop
(bad)
idiv
mov
rcl
jns
aaa
push
retf
sbb
xor
jne
ror
frstor
movs
cdq
mov
scas
jmp
or
jecxz
sub
add
fstp
xchg
sbb
lods
adc
enter
jns
data16
or
popf
push
xlat
push
mov
push
xlat
pop
dec
cwde
movs
sbb
inc
fidiv
mov
add
cmp
mov
out
xchg
test
adc
push
push
push
jne
sbb
retf
sub
std
mov
xchg
jle
push
and
(bad)
mov
jno
mov
cdq
pop
sbb
mov
fmul
fdivr
call
aam
cmp
(bad)
out
and
repz
sub
sbb
cmp
(bad)
lods
xor
cmp
push
daa
add
inc
(bad)
in
sub
inc
pop
mov
fist
out
mov
dec
jl
fsubr
pop
scas
icebp
(bad)
mov
xchg
lods
mov
icebp
add
cmp
sbb
test
xchg
add
push
ret
sub
fdivr
sub
lock
into
loope
cdq
sbb
xchg
push
js
mov
mov
fsub
xchg
out
xor
mov
adc
adc
lock
jb
jg
iret
sbb
aaa
push
push
cmp
and
test
sbb
inc
mov
or
(bad)
add
lahf
into
icebp
mov
jo
jnp
and
adc
and
pushf
(bad)
repz
jne
shl
loop
call
fs
(bad)
sti
sub
out
out
xchg
pop
sub
xchg
inc
sub
loop
div
in
div
push
xchg
imul
or
dec
mov
hlt
mov
adc
scas
push
dec
sub
xor
pop
(bad)
loop
xchg
sbb
lods
jo
or
test
les
aaa
lahf
inc
out
test
out
jg
jne
mov
mov
div
cmps
in
nop
(bad)
fs
sti
dec
test
xchg
fimul
sub
pop
xlat
stc
mov
cmp
mov
and
adc
xchg
jle
inc
enter
enter
movs
sbb
js
test
xchg
ret
fcom
adc
fisttp
cld
movs
or
lods
mov
in
stos
fsubrp
ins
js
imul
mov
retf
pop
lea
call
and
sub
dec
(bad)
mov
cmp
jb
daa
test
push
sub
xchg
xchg
outs
lods
push
push
add
out
and
dec
(bad)
jecxz
xor
sub
mov
fnstenv
adc
jne
inc
and
adc
retf
test
sbb
fiadd
add
push
and
pop
pop
mov
jl
loope
inc
in
shr
cmp
sbb
leave
add
sub
loope
push
xchg
(bad)
test
pop
mov
jle
imul
das
inc
inc
inc
scas
mov
xchg
mov
in
hlt
cmps
js
mov
push
sahf
xor
inc
mov
std
fs
pop
xchg
jmp
cmc
push
mov
mov
int3
push
jecxz
fnstenv
jmp
dec
pop
ror
cmp
bnd
xlat
in
pop
or
fcomp
mov
fidiv
cmc
or
add
mov
popa
popf
ret
pop
lock
mov
sbb
xlat
popa
lods
sbb
loope
push
arpl
cmc
out
jns
dec
shl
bound
cwde
pop
test
shr
test
arpl
dec
pop
pop
sbb
xor
cwde
mov
cmp
jle
add
sub
in
test
mov
pop
out
mov
dec
(bad)
cmp
(bad)
movs
popa
sar
aad
hlt
mov
mov
mov
xchg
add
cmp
jecxz
sub
xchg
ins
je
cld
mov
loop
jo
int3
pop
mov
cld
je
push
jge
fcmovb
xchg
addr16
leave
ss
hlt
jle
loope
or
outs
not
push
je
in
jle
fiadd
jl
add
call
ror
stos
dec
inc
pop
div
jecxz
jno
inc
stos
std
cmps
dec
dec
out
mov
nop
js
add
add
adc
cmp
mov
sub
outs
cli
loop
ret
sysexit
pop
cmc
cmc
adc
(bad)
jge
out
xor
xchg
inc
mov
or
ins
mov
in
xor
push
shl
push
jno
inc
stos
call
lds
sbb
xor
in
sbb
dec
xchg
mov
lea
popa
adc
cmc
int3
pop
outs
mov
and
ffreep
sbb
js
jmp
push
jmp
outs
or
push
cmp
and
bound
pop
mov
std
add
add
jb
test
ror
jbe
shr
mov
adc
or
xlat
rol
xchg
sbb
mov
add
mov
add
xor
retf
xor
loope
push
cld
inc
push
xor
sbb
cmps
xchg
jp
and
xor
inc
into
sti
ds
inc
adc
jmp
adc
and
sbb
stc
outs
dec
neg
pmuludq
mov
in
dec
shl
jno
sti
arpl
adc
pop
nop
lea
push
les
ret
sub
mov
arpl
jmp
pshufw
gs
stos
test
in
or
push
mov
push
xor
sub
jae
(bad)
cmp
push
cmp
nop
fld
lods
push
nop
dec
(bad)
xchg
sbb
inc
rcr
loopne
jmp
daa
push
js
or
mov
sbb
nop
xor
mov
push
sbb
ds
mov
push
(bad)
or
jo
inc
jg
popf
xchg
push
lods
dec
mov
cdq
pusha
adc
dec
in
add
cdq
aas
xor
das
jecxz
jbe
xchg
ja
dec
arpl
in
loope
jg
jp
leave
xchg
movs
inc
mov
and
mov
mov
jbe
dec
bound
inc
cmp
xchg
lock
idiv
out
push
xor
xor
dec
push
leave
repnz
inc
mov
fst
and
or
jmp
(bad)
fild
in
and
daa
and
adc
data16
xchg
xor
pop
or
cdq
sbb
sbb
inc
mov
dec
sub
lds
fidiv
mov
mov
in
fiadd
test
mov
test
sbb
test
lods
pop
ds
repnz
dec
scas
rcr
mov
in
das
add
movs
fcmovbe
push
mov
mov
add
mov
xchg
gs
les
mov
and
sub
sbb
push
ds
movs
dec
sbb
push
mov
and
pop
cmp
xor
js
jb
cmps
fwait
ja
mov
rcr
out
jl
mov
ins
jl
xor
sti
daa
ficomp
xor
and
sar
push
mov
pop
sub
shl
xchg
add
mov
dec
push
xchg
and
sbb
adc
sbb
cdq
lahf
movs
adc
pop
dec
push
into
out
leave
loopne
shl
(bad)
lahf
xlat
mov
push
fidivr
push
add
adc
jnp
push
pop
dec
mov
ins
add
test
loop
imul
sub
dec
fidiv
mov
jns
js
(bad)
aaa
fdivr
jnp
xor
data16
sub
call
xlat
mov
ins
mov
cmc
jns
cmp
retf
cli
inc
ss
sbb
shr
or
in
pop
push
cmp
loope
test
inc
inc
sar
add
data16
cmp
jmp
les
sbb
addr16
jno
sbb
adc
inc
scas
dec
cli
inc
fbld
pushf
and
mov
cdq
sahf
je
mov
(bad)
das
mov
sub
jo
xchg
dec
sub
in
jg
popf
push
or
das
in
xchg
out
mov
dec
out
pop
ds
cs
fbld
test
sub
daa
or
jp
(bad)
retf
rcr
nop
adc
mov
ins
mov
add
add
bound
inc
pop
mov
shl
xchg
push
and
dec
rol
sti
xor
and
xchg
mov
out
xchg
test
xor
fsubr
push
push
adc
inc
lods
xor
repz
inc
inc
sub
adc
xchg
into
add
cld
dec
push
dec
movs
jmp
jns
add
jnp
lahf
es
pop
sub
aaa
inc
lds
push
lods
sub
xlat
jno
ss
xchg
mov
not
jl
jb
retf
sub
mov
xchg
in
cmps
rcr
xchg
scas
xor
sbb
pop
shr
jp
test
adc
ret
push
mov
stos
mov
pop
clc
in
(bad)
jb
sub
pop
pop
push
test
mov
dec
mov
push
or
movs
popf
sbb
mov
sbb
sbb
(bad)
jmp
ds
or
pop
aas
jecxz
jmp
ins
into
ins
xchg
jne
hlt
aam
add
add
jo
pop
adc
das
push
add
push
mov
aas
dec
adc
sar
aaa
mov
stos
push
lea
adc
pop
xor
pop
adc
mov
loope
push
dec
mov
push
adc
nop
(bad)
push
cmp
jb
and
js
idiv
jmp
sbb
cmps
mov
xchg
or
cmp
mov
xor
test
arpl
(bad)
rcr
mov
or
movs
iret
cld
xor
pop
(bad)
cmp
movs
fimul
sbb
and
jl
mul
add
loope
lods
push
iret
imul
inc
inc
adc
loope
mov
hlt
sti
repz
retf
cmp
add
cmps
jmp
sbb
movs
sbb
adc
mov
stc
in
std
jo
lods
in
jns
outs
xchg
shl
sbb
lahf
ficomp
sub
mov
xchg
mov
and
jle
pop
dec
cmp
ret
sub
outs
sub
fisubr
mov
xchg
inc
inc
fwait
mov
fs
xor
cmc
movs
inc
inc
in
jmp
je
lahf
jae
hlt
add
jne
fist
jl
je
and
and
fcomp
loop
cmp
mov
stos
inc
pop
mov
cwde
in
lock
fisubr
sub
call
ins
adc
aad
push
xor
sbb
clc
jne
fs
pushf
sbb
push
sub
adc
mov
and
adc
cmp
add
gs
call
scas
ins
mov
rcl
int
int3
out
psubusw
inc
add
or
sub
push
jmp
stc
lods
int
inc
out
mov
mov
iret
xchg
cmp
and
mov
test
inc
inc
arpl
mov
sbb
adc
or
dec
inc
lods
aad
mov
stos
jb
scas
inc
inc
sbb
xor
call
shr
mov
adc
sbb
jo
js
adc
pop
cmp
out
xchg
jnp
daa
and
movs
in
sub
mov
mov
sub
(bad)
ficom
arpl
in
push
sub
mov
in
repz
dec
xchg
(bad)
adc
imul
inc
ret
ins
out
add
nop
sar
fbld
mov
ret
inc
(bad)
pop
aas
retf
sub
test
retf
mov
movsx
cmps
rol
push
arpl
cmp
or
mov
repz
repz
movs
ja
pop
push
cmps
std
stc
jbe
jae
mov
mov
xchg
and
aam
jmp
imul
dec
sbb
daa
mov
icebp
sbb
xchg
pushf
push
lea
jle
(bad)
int
das
mov
jmp
mov
gs
jne
je
popf
jecxz
stos
xor
pusha
stos
aas
(bad)
cmc
ss
fnsave
xor
and
neg
fs
adc
cld
test
ss
jb
retf
sub
ror
add
fist
sbb
push
mov
cmp
push
arpl
lock
movs
mov
mov
xlat
lds
fs
retf
out
xchg
rol
pop
push
arpl
pop
xchg
pop
ja
mov
imul
and
mov
fsubr
mov
inc
pop
sub
hlt
not
jbe
mov
mov
xchg
imul
push
aaa
cmps
jl
aad
loope
mov
mov
gs
movs
mov
mov
mov
ret
test
jmp
shr
xchg
inc
outs
sbb
loope
push
outs
mov
cmp
shl
out
cmps
(bad)
push
sahf
add
mov
mov
xchg
ja
pop
stos
sub
out
cmp
lods
xor
or
movs
push
retf
xor
or
iret
test
mov
xchg
xor
mov
xor
test
(bad)
enter
mov
nop
mov
pop
(bad)
xor
lods
inc
push
push
jmp
sbb
inc
mov
hlt
in
in
cmp
xor
arpl
dec
icebp
dec
sbb
xchg
dec
xchg
sbb
ret
call
push
xchg
sbb
js
pop
sar
repnz
mov
dec
push
inc
loop
xchg
(bad)
leave
das
mov
dec
lods
mov
cmp
jp
retf
test
mov
retf
fsubr
push
(bad)
xchg
jo
adc
or
sub
int3
inc
push
gs
fdivr
imul
mov
add
test
jb
(bad)
dec
fucomip
imul
bound
leave
adc
or
test
and
jmp
mov
ret
int3
xor
rcr
mov
mov
xchg
dec
and
jns
movs
inc
mov
jb
shl
loope
aas
fs
jbe
int3
add
aas
pop
add
loope
inc
xchg
ins
pop
shr
sbb
mov
das
or
mov
pop
enter
jno
adc
and
std
dec
fs
mov
std
sub
fnstsw
dec
xchg
xor
mov
(bad)
adc
fdivr
test
sub
push
sbb
test
les
(bad)
test
jmp
pop
ret
adc
aad
adc
lods
and
pop
(bad)
push
pop
push
xchg
fimul
jne
push
lea
not
pop
xchg
and
jo
lods
sub
inc
or
jns
jns
pop
jp
jnp
stos
dec
(bad)
jae
add
cmp
(bad)
sub
cmp
movs
cli
pop
jmp
or
cmp
addr16
push
fcom
add
repnz
into
cwde
adc
stc
or
or
pop
retf
imul
add
xor
imul
and
dec
dec
ja
xchg
sbb
mov
xchg
mov
pop
mov
dec
and
data16
cli
fld
clc
ss
pop
into
xlat
loope
pop
sti
leave
enter
or
push
inc
or
adc
mov
xchg
in
mov
ja
xlat
jnp
loop
or
int
popf
gs
adc
mov
jg
arpl
pop
pop
hlt
push
int
retf
push
xchg
push
inc
mov
push
inc
in
xchg
inc
inc
loop
and
je
or
xchg
cmp
test
add
repz
xor
jmp
jae
sbb
inc
push
and
sbb
adc
fsubr
and
or
mov
cmp
and
push
pop
and
std
mov
retf
adc
xor
lahf
out
cmps
rol
hlt
loope
mov
cmp
loop
xchg
fisubr
test
dec
and
pop
fwait
lods
push
add
push
or
push
xchg
outs
add
adc
or
fdivp
sbb
add
shr
add
ror
xor
sub
cmp
sub
stc
mov
test
sub
test
mov
dec
push
fld
pop
mov
daa
push
pop
dec
int
mov
cld
(bad)
push
das
int
cmp
mov
pushf
inc
push
inc
dec
add
jmp
jmp
push
xor
(bad)
sub
into
neg
xchg
inc
call
sti
repnz
xchg
sti
jmp
dec
(bad)
jmp
pop
int
imul
sub
sti
pop
test
add
aaa
pop
push
mov
jne
add
cs
inc
add
arpl
mov
icebp
popf
push
mov
mov
inc
dec
(bad)
dec
pop
(bad)
(bad)
inc
gs
cmps
adc
cmc
xchg
sub
mov
les
mov
xlat
and
pop
or
scas
mov
pop
add
or
xor
sub
xor
fdiv
push
bound
push
in
mov
pop
or
xor
das
sbb
rcr
cld
stc
sub
adc
jmp
loop
js
sbb
(bad)
mov
mov
add
jecxz
nop
ins
pop
or
mov
jne
stos
inc
and
cdq
push
retf
and
mov
jno
enter
imul
inc
pop
add
dec
mov
add
call
lahf
daa
and
ins
or
ins
cmp
aas
call
call
dec
jl
xchg
mov
dec
sub
jne
mov
adc
sub
in
leave
call
nop
rcr
sbb
or
push
mov
cld
aam
cmp
pop
and
jmp
stos
in
lods
out
xor
cdq
ret
push
xchg
(bad)
aas
inc
xor
mov
mov
lds
or
fstp
xchg
lea
mov
mov
gs
pop
fstp
fcmovu
jns
push
scas
inc
jl
fisub
add
add
ret
ret
sbb
xchg
jno
dec
and
aam
cmp
out
data16
(bad)
and
and
mov
hlt
adc
or
stos
push
or
mov
cmp
retf
gs
fiadd
pop
or
movs
loope
aas
dec
shr
mov
out
or
inc
mov
jecxz
lods
jp
or
mov
outs
pop
mov
repz
add
in
push
adc
mov
mov
jecxz
shl
sub
push
xchg
hlt
dec
inc
nop
mov
and
jnp
loop
pop
rcl
add
(bad)
icebp
pop
outs
hlt
mov
pop
and
popa
rcr
jae
hlt
gs
jbe
push
aaa
xor
or
ins
sub
pushf
ja
jno
or
and
xchg
add
cli
call
pop
imul
out
fcmove
movs
outs
xchg
mov
mov
fild
data16
hlt
loop
movs
ins
cmps
inc
std
rcr
jle
inc
pop
mov
mov
add
jmp
sbb
adc
stos
iret
push
jbe
dec
test
and
cmp
aaa
out
adc
ds
ds
add
je
sub
jb
imul
xchg
mov
jp
cmp
sub
daa
jnp
push
test
call
jnp
dec
stc
add
push
mov
adc
ins
sbb
push
(bad)
push
dec
or
iret
add
movs
pop
clc
idiv
sbb
dec
shr
enter
mov
arpl
dec
fcomp
push
jae
out
imul
fistp
lods
in
cmp
push
jmp
or
out
nop
imul
jbe
inc
pop
loope
jae
mov
sub
mov
popw
mov
adc
loopne
outs
ins
cmp
ss
retf
push
push
ds
rcl
aad
rol
lahf
sbb
loopne
cmp
inc
sub
jl
dec
enter
push
adc
mov
and
out
cdq
or
jmp
stos
inc
jle
mov
mov
jg
pushf
jno
add
adc
outs
pop
ins
mov
dec
(bad)
lods
cs
aad
aas
test
loope
mov
push
jmp
and
hlt
adc
mov
jno
adc
push
ds
or
push
pop
pusha
jg
repnz
nop
pop
imul
xor
ja
add
inc
shl
ret
or
jae
mov
mov
cmp
inc
adc
cmp
and
or
retf
cmp
retf
cmps
fist
mov
cld
xor
je
fcomi
adc
jae
cdq
cmps
sub
jmp
outs
sbb
pop
cmps
dec
stc
cwde
jno
lock
in
out
jg
jmp
loop
pop
push
inc
jns
in
not
aam
test
addr16
fsub
(bad)
ins
xchg
push
lds
jns
clc
rcl
jbe
(bad)
add
pushf
fs
stos
jmp
icebp
dec
bound
ins
mov
mov
cs
and
stos
push
call
jo
in
or
out
xor
sub
fstp
pop
sti
dec
cli
mov
jo
cmp
sbb
aam
scas
int
popf
movs
mov
retf
adc
add
es
mov
loopne
and
jge
fbld
movs
add
xor
pop
jo
xlat
in
push
adc
sub
sahf
push
push
rol
pusha
inc
daa
test
jmp
in
call
into
cld
int3
cmps
jp
push
repnz
push
cld
pushf
xor
xchg
neg
mov
inc
sti
out
sub
xchg
adc
aaa
scas
mov
and
scas
sbb
add
lods
xchg
fnstsw
popa
(bad)
(bad)
(bad)
rcl
mov
xlat
lods
mov
cdq
pop
and
adc
inc
and
enter
rol
ins
dec
xchg
xchg
pop
dec
leave
(bad)
loope
fmul
adc
or
aas
lods
lock
mov
xchg
cs
mov
jnp
sar
adc
(bad)
int3
cdq
es
mov
or
(bad)
jecxz
leave
and
mov
adc
call
out
jecxz
sbb
shl
das
push
cwde
rcr
sbb
pop
daa
pop
push
sub
fwait
pop
out
xchg
retf
xchg
xor
test
adc
pop
rcl
ds
(bad)
adc
movs
call
and
and
and
jle
adc
sbb
cs
or
rcl
cmp
popa
iret
dec
jne
mov
fs
clc
lds
in
dec
push
jge
jmp
cdq
aam
sbb
pop
iret
fldpi
(bad)
pop
lahf
sahf
dec
dec
push
in
xchg
sbb
(bad)
aas
mov
popf
push
lods
(bad)
cli
add
mov
setne
and
in
pusha
addr16
mov
add
xchg
shl
ret
jmp
xchg
jp
(bad)
fs
cs
mov
mov
mov
xor
or
int3
cmp
call
hlt
movs
mov
cmps
xor
lock
int
sub
outs
adc
div
or
cmp
fsub
pushf
inc
inc
pop
xchg
cmp
jg
test
repz
xchg
ss
inc
add
or
dec
xchg
fdivr
mov
data16
nop
inc
xchg
dec
inc
mov
out
aam
ins
jne
pop
push
dec
sub
xor
and
mov
push
push
ds
xor
retf
inc
jno
push
adc
lods
daa
dec
jnp
pop
and
add
push
and
and
dec
pop
pop
dec
ins
dec
fwait
icebp
xchg
das
inc
add
mov
jae
or
mov
or
lea
test
fldenv
mov
ficomp
mov
push
or
stc
(bad)
mov
iret
push
or
jge
mov
xchg
push
add
sbb
pusha
mov
lods
cmp
repnz
jecxz
xchg
pop
jg
loop
mov
and
sar
lock
pop
fsub
mov
push
dec
fldcw
and
fwait
xchg
xchg
add
mov
cwde
xlat
xor
jae
pop
cmp
xchg
cmp
mov
and
mov
sbb
imul
cmps
add
std
xor
push
addr16
in
sub
jmp
imul
leave
daa
push
cmp
outs
mov
out
xor
cmp
arpl
and
mov
sbb
retf
rol
(bad)
sbb
inc
ins
lods
jno
add
xor
or
inc
scas
cmp
adc
xchg
inc
add
jg
loopne
out
into
sbb
inc
inc
(bad)
mov
and
icebp
xor
xor
sub
test
mov
xchg
push
xor
nop
test
mov
sbb
fidivr
push
push
dec
aaa
js
inc
mov
mov
push
mov
mov
and
or
movs
xor
fbld
xchg
ja
int3
dec
jns
pop
cld
movs
ja
sub
push
xchg
dec
jmp
mov
cmps
das
inc
in
fnop
ret
stos
lods
cld
mov
fidivr
mov
repnz
dec
fwait
push
mov
xchg
push
stos
pop
fsubr
mov
push
mov
sub
jecxz
jno
leave
int3
fisubr
adc
push
mov
pop
lahf
mov
sub
test
adc
cmp
lods
push
neg
xor
jge
jp
movs
cs
repnz
jns
and
pop
cmps
shl
enter
cs
mov
(bad)
arpl
xchg
pop
xor
or
adc
dec
mov
push
ss
and
jge
fisub
sbb
cmp
frstorw
(bad)
addr16
push
repz
inc
repz
aam
mov
sub
mov
dec
pop
add
int
push
lods
dec
mov
fyl2xp1
mov
mov
or
xchg
sub
add
in
push
xchg
xchg
pop
jno
pop
pop
xchg
mov
dec
push
enter
fidiv
mov
mov
mov
xchg
pop
xor
adc
das
mov
cmc
jmp
fst
adc
cs
mov
push
das
rol
sbb
movzx
gs
test
and
sub
add
repz
sbb
or
(bad)
in
dec
and
add
enter
jmp
(bad)
xor
mov
ins
je
xchg
shl
adc
dec
or
retf
and
push
add
cdq
cmp
int3
mov
dec
mov
ret
in
sub
div
inc
mov
mov
mov
ins
clc
dec
jno
and
inc
pop
sbb
mov
add
jg
mov
cmps
stos
popf
cs
cld
mov
sti
faddp
loop
and
cmps
(bad)
mov
and
bound
mov
jg
fld
in
or
test
ja
adc
ror
jbe
ins
and
fistp
mov
ror
and
push
or
inc
jmp
push
push
call
add
mov
push
or
retf
inc
pop
push
mov
fcomp
sbb
push
or
mov
into
aaa
cmp
das
repnz
mov
or
jg
pusha
xchg
inc
ds
fdivr
mov
mov
lods
mov
inc
xor
je
cld
(bad)
push
into
outs
fs
pop
inc
fild
add
scas
hlt
jecxz
ret
mov
rol
dec
es
sbb
or
jecxz
xor
mov
fsub
ret
mov
popa
add
das
rcl
ds
pop
std
fwait
jmp
xor
sahf
and
rcr
jg
jecxz
mov
add
lods
push
pop
mov
stos
call
mov
mov
lods
adc
imul
fst
int
ret
cmp
pop
add
fsub
sbb
push
and
call
cmp
pop
popa
mov
add
out
push
icebp
sbb
and
jmp
cdq
push
outs
dec
out
loope
xchg
dec
fcomp
leave
inc
sbb
pop
ins
fwait
aad
ins
js
test
cmp
add
mov
sar
mov
addr16
push
cli
xchg
faddp
mov
jmp
cld
adc
mov
pop
stc
xor
cdq
push
test
ins
xchg
mov
mov
popa
and
sbb
sbb
dec
call
mov
and
jnp
jp
les
mov
add
xor
inc
sub
mov
mov
push
bound
(bad)
cmc
popa
fadd
mov
add
das
(bad)
dec
call
dec
or
mov
and
jae
ret
fisub
pop
jns
jmp
push
mov
ins
mov
(bad)
iret
push
dec
mov
addr16
push
pop
mov
stos
mov
data16
jo
mov
push
inc
mov
aas
mov
inc
int
mov
enter
(bad)
fs
mov
xlat
xchg
sar
popf
pop
gs
pop
jmp
push
test
mov
or
lds
rcr
leave
xchg
sti
mov
and
sub
in
loop
and
loopne
sub
fdivr
loop
jno
pop
lahf
pusha
mov
(bad)
movs
xchg
push
data16
and
adc
cmc
pop
sub
pop
mov
lea
pusha
(bad)
xor
xlat
iret
fisubr
cmc
dec
rcr
loope
jge
stc
mov
push
inc
sbb
add
enter
mov
pop
popf
dec
pop
addr16
leave
(bad)
fimul
add
push
xchg
mov
clc
pop
add
pop
hlt
push
cmp
ss
stos
push
inc
pop
mov
pop
sbb
mov
(bad)
adc
mov
push
xchg
mov
ror
icebp
(bad)
int
aaa
fistp
ficomp
inc
cmp
inc
sub
xlat
cmp
cmc
fadd
xchg
mov
pusha
or
add
and
outs
inc
jmp
scas
add
and
adc
sbb
js
fwait
repz
test
fs
pop
daa
xlat
xchg
sub
lods
outs
inc
adc
gs
adc
sbb
xor
jecxz
leave
or
movs
push
push
add
push
push
cmp
cmp
dec
sub
call
fbstp
jbe
ss
inc
gs
scas
fmul
add
sub
iret
sti
mov
and
aad
pop
mov
hlt
sub
pop
push
out
sbb
jg
xchg
mov
iret
inc
fisttp
push
mov
in
sbb
and
sbb
shl
mov
pop
retf
jbe
shr
mov
or
cmps
std
jle
xor
sbb
dec
mov
in
mov
imul
dec
js
pusha
in
xor
mov
mov
dec
stos
mov
cwde
or
icebp
dec
pushf
mov
mov
in
mov
sti
push
adc
(bad)
daa
mov
mov
mov
test
jns
inc
xor
nop
imul
push
dec
test
inc
jge
jns
fwait
sub
cmps
pop
mov
push
push
sbb
inc
mov
sbb
cmc
(bad)
loop
out
in
xchg
mov
(bad)
and
ins
or
fcomip
push
and
pop
add
addr16
adc
retf
add
xchg
pop
stos
retf
or
inc
jb
dec
out
inc
add
dec
adc
out
div
je
adc
adc
ins
mov
jbe
push
mov
test
xor
cmps
and
cmp
xlat
aam
xchg
call
pop
dec
div
cmp
ud1
outs
test
sti
outs
push
sbb
mov
jmp
cmps
adc
fst
(bad)
xchg
(bad)
cmp
pop
push
inc
add
lea
shl
es
ficom
imul
cmp
push
ins
or
lock
adc
mov
sti
test
xor
mov
outs
mov
(bad)
cmp
mov
(bad)
lds
hlt
add
fwait
das
addr16
inc
cmps
lock
aad
push
bound
int
push
js
jge
inc
jb
mov
in
movs
add
jns
jg
jmp
mov
je
push
adc
shl
pop
mov
fld
jne
rcr
jmp
fmul
mov
cmp
mov
test
iret
xchg
(bad)
addr16
pushf
pop
rcr
mov
push
gs
add
add
fild
dec
cmp
xlat
pop
mov
ss
fsubp
bound
jnp
adc
push
leave
dec
call
and
aad
popf
jl
jle
cmp
xchg
cs
out
pop
sub
dec
rcl
jge
adc
mov
xchg
(bad)
fidiv
ret
pop
sbb
mov
xchg
mov
jne
test
repz
in
aam
movs
push
mov
jnp
jecxz
dec
dec
iret
lock
dec
mov
add
jmp
test
cs
test
into
adc
pop
xchg
movs
outs
daa
outs
call
inc
jp
les
pop
xor
out
mov
mov
adc
cdq
or
add
gs
push
dec
movs
jnp
fwait
je
fistp
sub
scas
and
xchg
add
jp
das
or
jmp
push
outs
or
push
pop
scas
test
mov
movs
sbb
mov
sub
add
sbb
sub
scas
or
sahf
inc
call
dec
and
fmul
(bad)
out
inc
pop
jno
lds
mov
pop
in
sti
ret
fs
mov
xchg
lods
pop
mov
dec
sbb
stos
rcl
push
(bad)
push
jmp
mov
mov
or
xchg
ja
leave
retf
jo
push
call
and
out
adc
rol
out
inc
mov
xor
sbb
push
xor
cmp
fs
(bad)
fadd
aam
pusha
bound
je
pushf
lods
jle
movs
pop
jae
fmul
push
neg
out
gs
pop
shr
aam
sub
outs
cmps
movs
mov
or
loope
sub
add
mov
in
pop
cli
jp
aas
xchg
mov
sbb
jecxz
scas
cli
movs
or
mov
or
jl
xor
mov
in
mov
xchg
push
das
or
push
outs
iret
sbb
pop
mov
push
jnp
adc
sbb
int
(bad)
movs
call
adc
rcl
lahf
leave
cmc
and
mov
imul
add
shl
sti
ja
adc
ret
je
(bad)
mov
(bad)
mov
inc
lods
sbb
das
scas
add
jb
and
jnp
cwde
lods
inc
xchg
retf
sbb
inc
sbb
dec
dec
ins
cmps
xchg
out
sbb
or
aaa
add
fucomip
mov
adc
mov
cmp
pop
sub
(bad)
int3
adc
ja
inc
xchg
sub
push
leave
cmps
xor
adc
int3
pop
fwait
lock
aad
cmp
movs
push
jl
jge
and
mov
jnp
imul
(bad)
test
out
jge
movs
call
dec
retf
jo
ds
cld
push
daa
push
repnz
push
(bad)
clc
imul
mov
adc
push
sbb
jbe
pop
ret
in
add
inc
rol
inc
test
shl
popf
mov
or
xchg
int3
cmp
pop
dec
fisubr
dec
lods
push
cmp
jne
inc
or
cmps
(bad)
xlat
pop
push
popa
loop
and
jge
sub
cmp
pushf
sub
cs
(bad)
jbe
adc
jg
iret
mov
adc
mov
nop
fldcw
es
mov
mov
mov
iret
leave
test
jecxz
adc
movs
pop
sub
mov
popf
f2xm1
mov
push
jl
jb
cmp
push
sbb
sbb
rcr
call
cmp
xchg
lock
fcom
sub
movs
ret
cmps
aas
inc
ds
ret
jbe
and
repz
inc
mov
lea
adc
pop
or
and
or
xor
push
mov
sbb
mov
mov
scas
sar
jbe
inc
pop
pop
or
inc
xor
ret
in
cld
stos
scas
test
ret
cmp
jge
xchg
sbb
push
gs
imul
jae
pushf
into
xchg
and
cmc
push
xor
retf
into
or
std
adc
dec
fidiv
popa
test
adc
test
jp
popa
fstp
sub
das
ds
xchg
outs
mov
test
add
in
(bad)
mov
xchg
jo
push
out
push
add
retf
push
jmp
hlt
movs
in
push
add
jae
dec
cmp
sub
sub
jmp
mov
retf
ror
mov
push
inc
lea
cmc
sbb
pop
imul
jne
int3
nop
ins
mov
push
or
xchg
inc
(bad)
pause
bound
cmp
hlt
cdq
pop
loop
cmp
sbb
in
sbb
or
and
(bad)
adc
jnp
adc
inc
or
les
pop
xchg
les
hlt
sbb
imul
mov
inc
inc
jne
mov
or
(bad)
arpl
adc
mov
lahf
mov
movs
sar
add
enter
das
push
sub
arpl
and
(bad)
sub
pop
nop
test
rol
mov
pop
and
jge
repnz
push
retf
inc
nop
clc
sbb
mov
push
inc
(bad)
aas
cs
sbb
and
ja
pop
jl
xor
int3
div
pop
(bad)
out
js
adc
xchg
(bad)
int3
fwait
in
or
pop
mov
mov
addr16
push
in
hlt
stc
xor
int
mov
(bad)
xor
inc
adc
cwde
xchg
mov
sbb
pop
mov
rol
out
adc
stos
xchg
sbb
(bad)
push
cmp
(bad)
jmp
jbe
test
adc
xor
adc
jno
sub
pop
inc
in
leave
sbb
jl
fidivr
xor
cmp
jle
xor
data16
test
loope
data16
or
jbe
mov
pop
jge
mov
lods
shl
ror
les
cmps
xor
xchg
mov
add
and
imul
sbb
sub
pushf
pop
sti
xchg
lock
push
and
dec
repnz
mov
mov
sbb
jle
push
inc
popf
es
int3
push
loope
add
push
enter
mov
or
sub
jecxz
or
adc
adc
fwait
xchg
mov
xchg
js
dec
je
push
rcl
popa
mov
popf
out
retf
aad
sub
bound
jbe
and
enterw
xor
mov
(bad)
or
lods
jle
mov
loop
das
fld
sbb
and
push
loop
sbb
dec
pop
fiadd
cmp
add
jns
int
push
retf
lds
pop
cmp
mov
out
test
push
push
or
push
das
outs
lock
rcr
or
retf
loope
neg
xchg
enter
push
ja
ins
pop
sbb
cmp
mov
jns
(bad)
aam
call
adc
call
mov
xchg
inc
fmul
fbstp
adc
or
test
(bad)
push
js
cli
icebp
fidivr
daa
cld
fbstp
xchg
or
adc
sahf
test
cld
aam
cmp
lea
fwait
cwde
or
xchg
jb
push
mov
movs
xchg
daa
xchg
mov
and
and
stos
repnz
ds
lea
cmp
repz
fwait
sbb
pop
jmp
scas
and
pop
lods
stos
in
ins
fldlg2
aam
inc
inc
movs
jns
cmps
xchg
lahf
fisub
aam
iret
mul
shl
pop
popf
(bad)
gs
push
xchg
cs
loopne
xor
xchg
(bad)
push
dec
in
mov
popa
sub
xor
out
push
mov
push
mov
sbb
push
pop
loope
xchg
adc
sub
mov
retf
test
not
mov
repz
push
lock
and
ins
and
hlt
cmp
das
xchg
jmp
pop
jp
in
cmp
inc
add
push
outs
jae
or
xor
leave
repz
pop
push
arpl
inc
jae
mov
jle
xchg
outs
mov
adc
push
xor
jne
addr16
les
inc
pop
push
jmp
and
jp
pop
push
mov
outs
lds
enter
repnz
or
mov
aaa
dec
clc
imul
sub
into
ret
addr16
inc
or
jb
outs
aad
bound
adc
out
mov
loopne
dec
aas
call
or
mov
cmp
xchg
and
add
stc
sub
(bad)
aaa
repnz
cmp
xchg
sub
sti
fmul
inc
mov
int3
push
xor
pop
ss
je
push
rcl
aam
sti
loop
cmp
in
gs
sti
into
fcmovu
imul
mul
xor
popf
sbb
push
mov
int3
jae
xchg
test
mov
sbb
cmp
repnz
sbb
(bad)
popf
inc
jne
mov
add
jmp
mov
popf
push
inc
push
xchg
icebp
mov
mov
fst
xchg
out
adc
add
push
inc
ss
fmul
push
pop
call
or
out
dec
dec
pop
les
push
ret
lea
mov
xchg
arpl
adc
push
fimul
(bad)
enter
push
loop
cli
scas
in
jmp
pop
sbb
xor
and
add
or
push
je
(bad)
call
sub
pusha
sub
addr16
clc
in
icebp
popa
mov
push
(bad)
or
add
sub
cmp
repnz
push
out
or
icebp
fisubr
xchg
leave
add
push
sbb
pop
mov
inc
xchg
mul
and
(bad)
mov
(bad)
mov
or
push
out
sub
xor
sub
fdiv
push
fist
ret
shl
jmp
cmp
sub
loop
pop
xchg
dec
or
lock
or
ret
(bad)
or
pop
adc
xor
(bad)
scas
retf
xlat
mov
mov
rol
or
cmp
dec
fimul
fs
test
mov
xchg
jecxz
xor
pop
(bad)
and
sub
icebp
add
xor
(bad)
and
test
ins
jne
jnp
cmp
lds
push
inc
enter
jl
cmp
pop
cmp
lds
fmul
mov
sbb
or
cli
stos
pusha
(bad)
jge
cmp
inc
pop
das
jns
mov
fwait
jae
push
sbb
mov
clc
inc
test
xchg
mov
fnstenv
out
mov
in
retf
mov
int3
jecxz
push
or
xlat
adc
push
push
fwait
xor
loope
jecxz
pushf
jecxz
aad
cmps
je
and
and
pop
cmc
fisub
push
cwde
sahf
push
or
cld
not
mov
adc
push
add
cmp
pop
loop
dec
pop
js
adc
mov
out
jmp
cwde
sub
lods
gs
in
loop
mov
js
fwait
call
(bad)
(bad)
rol
mov
mov
fsubr
adc
test
dec
pop
shr
jns
adc
out
fs
mov
jle
sbb
mov
rcr
sbb
cmp
scas
fidiv
xor
cmp
and
jno
dec
or
sub
and
dec
fadd
cmp
lods
int3
out
out
jge
bound
inc
int3
cwde
sbb
lock
jle
jl
sub
xor
pop
xchg
dec
push
rcl
lahf
arpl
xchg
retf
sub
les
icebp
lods
xchg
add
out
dec
rcr
or
aas
cmp
loopne
mov
retf
push
mov
in
cs
dec
inc
and
fadd
push
shl
mov
xor
jge
xor
mov
adc
rol
(bad)
adc
dec
and
push
ds
popa
clc
sub
lea
loopne
cmp
or
(bad)
inc
dec
das
jge
stos
movs
pusha
pmullw
xor
cmps
xchg
fnstenv
pusha
push
rol
add
std
inc
mov
pop
xor
inc
adc
jne
inc
jecxz
stos
(bad)
mov
xor
fnstcw
mov
int3
mov
mov
out
jmp
mov
add
fdivr
xor
mov
scas
nop
loopne
div
jbe
dec
xchg
add
out
out
cmp
scas
and
fstp
idiv
sbb
fiadd
popa
add
dec
rcl
dec
mov
stos
ffreep
pop
aam
push
lds
cmps
xor
iret
retf
xor
mov
jo
mov
ficomp
fistp
pop
das
pop
jnp
xlat
sbb
inc
fsub
push
outs
movs
clc
rcl
out
(bad)
inc
clc
sub
out
push
xor
or
sub
add
dec
shr
jo
push
mov
pop
push
cmp
test
push
jb
popa
mov
xor
push
dec
icebp
inc
mov
retf
push
lds
lahf
popf
jnp
out
fstp
push
test
ret
scas
sbb
push
(bad)
bnd
xor
repnz
cmp
sbb
test
not
call
test
stos
hlt
and
push
add
sub
push
ins
movs
push
(bad)
cli
inc
xor
mov
mov
stos
idiv
(bad)
dec
out
xchg
inc
in
sbb
das
adc
fs
loopne
push
add
aas
sbb
(bad)
aaa
ret
ficomp
fs
pop
cli
pop
lds
sbb
xchg
imul
scas
pop
and
push
in
sbb
mov
loop
jle
mov
loopne
fwait
out
mov
pop
push
sahf
loop
add
xor
out
push
sub
push
shl
out
aas
js
ja
dec
adc
mov
add
jae
pop
add
popf
aad
xor
jp
push
mov
sub
ud0
ds
xor
xor
loope
out
out
or
push
mov
pop
xchg
sbb
xchg
add
cmc
or
div
rcl
add
adc
in
sbb
(bad)
sub
cwde
dec
mov
mov
enter
lock
and
(bad)
ins
pop
js
xor
inc
dec
mov
pop
cmps
inc
mov
add
mov
add
pop
push
jecxz
pop
(bad)
js
cmp
adc
outs
data16
pop
daa
jnp
mov
add
fst
inc
xchg
sub
mov
add
inc
loope
pusha
lods
dec
sbb
(bad)
call
lods
or
jg
cwde
push
mov
aas
je
adc
mov
mov
sub
inc
addr16
lds
or
pusha
je
sbb
push
mov
out
dec
dec
dec
aam
pop
dec
dec
push
enter
imul
cmp
inc
or
aad
cli
push
(bad)
sub
push
fidivr
sahf
dec
and
pop
faddp
sbb
pop
mov
js
inc
gs
xor
mov
mov
fwait
sbb
ins
or
shl
iret
mov
enter
test
push
jb
pop
and
add
cwde
sti
dec
xchg
std
xchg
repnz
pop
test
mov
test
mov
fxch
cmp
sbb
push
jl
lds
sbb
adc
or
clc
mov
or
mov
sahf
or
or
cmp
lock
inc
push
pop
sub
fcomi
cmc
pop
xlat
lods
(bad)
cwde
xor
inc
(bad)
je
call
fisttp
push
aas
inc
adc
inc
and
xor
in
out
inc
out
cmps
cmps
sahf
rcl
mov
xor
xchg
rcr
out
xlat
mov
pop
imul
sar
xchg
ss
or
or
push
pusha
xor
ins
cmps
inc
sbb
sub
movs
push
push
mov
cmp
inc
lds
add
pop
mov
loope
das
iret
outs
adc
and
and
jbe
dec
mov
inc
add
rol
imul
xor
adc
call
xor
shl
push
dec
pusha
ret
fadd
sub
inc
mov
adc
data16
aam
je
push
dec
retf
jae
add
sbb
shl
rol
out
mov
mov
or
dec
xchg
mov
push
pop
xor
jge
xor
test
inc
mov
aam
xor
shl
cli
(bad)
je
arpl
out
pusha
add
data16
jns
cld
(bad)
out
lock
xchg
aam
into
inc
xor
sbb
shl
dec
sub
and
in
fst
mov
dec
in
mov
or
rcl
xor
mov
push
addr16
dec
and
sub
clc
pop
cdq
call
pop
aam
loope
add
cmp
std
pop
scas
add
fsubr
inc
out
sub
jno
daa
inc
aaa
jne
jno
or
out
sbb
or
pop
cmp
inc
or
jae
add
pop
and
(bad)
bts
outs
dec
mov
repz
xlat
xchg
ins
das
hlt
sbb
pop
das
add
js
cdq
push
fidiv
icebp
push
push
xor
mov
and
and
scas
jns
(bad)
sti
push
adc
jno
push
dec
pushf
loope
(bad)
and
pop
test
lea
icebp
add
ds
pop
leave
mov
clc
popa
or
push
adc
jb
dec
sub
mov
fsubr
or
push
xchg
hlt
mov
dec
(bad)
jle
jle
std
cmp
dec
push
sbb
dec
cmc
dec
jp
sub
mov
imul
push
mov
pop
cli
add
cdq
inc
aas
sbb
or
add
bound
push
ror
in
adc
xlat
(bad)
dec
mov
mov
push
sub
mov
pop
dec
mov
cmp
jecxz
iret
jne
fwait
mov
inc
pusha
aas
push
mov
ret
xchg
js
inc
mov
jne
stc
mov
mov
enter
js
push
std
jecxz
dec
xchg
lea
add
cmp
in
jmp
jge
jmp
jmp
add
int3
test
ja
int
sbb
(bad)
and
xor
clc
mov
sar
or
mov
out
pop
mov
movs
add
pop
(bad)
fs
ror
call
dec
xchg
popa
out
fidiv
or
jge
xchg
lods
(bad)
aaa
xor
xor
pusha
push
repnz
pop
mov
or
cmps
and
add
push
pop
sub
jmp
fisttp
je
push
push
xchg
xchg
jnp
jle
mov
stc
xchg
dec
stos
scas
mov
sbb
arpl
push
mov
adc
dec
pop
or
(bad)
int3
jmp
in
sub
push
jns
leave
popa
loope
cmp
mov
cmc
and
loopne
int
and
push
mov
pusha
lods
in
cwde
stos
add
call
daa
leave
pusha
cmp
in
pushf
mov
ins
(bad)
xor
rcl
xlat
ins
xor
mov
sbb
pop
xor
add
fs
or
movs
(bad)
sbb
retf
mov
outs
add
jae
cld
loope
icebp
xor
or
adc
mov
add
(bad)
out
addr16
dec
fisubr
mov
jl
in
push
aas
ror
cmp
outs
cli
xor
jnp
cs
pop
push
popa
adc
in
scas
xchg
sub
mov
iret
adc
stos
push
mov
jno
pop
inc
out
dec
xchg
mov
imul
mov
retf
jmp
daa
mov
mov
cmp
mov
repz
in
ins
xchg
or
sub
mov
adc
push
push
aad
fidivr
dec
test
scas
or
repz
outs
adc
or
(bad)
std
cmp
popa
adc
int
adc
xchg
pop
cmp
adc
popa
inc
aam
add
sub
test
jg
ficom
sub
repz
ins
shl
pop
mov
cmp
sub
outs
fwait
pop
xchg
fs
fidivr
lea
ins
add
adc
(bad)
retf
cmp
aad
or
ss
mov
jg
mov
mov
cmp
sub
xchg
inc
cdq
or
inc
leave
sub
retf
add
push
jp
pop
mov
lods
xor
popa
or
cmp
push
or
push
push
jne
xor
rcl
xor
dec
test
or
gs
stos
inc
popf
mov
lock
popf
mov
jmp
std
ins
(bad)
out
sub
jg
xor
dec
aas
rcr
loopne
shl
and
jmp
cmps
pop
mov
pushf
mov
arpl
jnp
hlt
dec
aad
mov
push
pop
mov
push
cmps
adc
mov
pusha
imul
imul
hlt
mov
leave
add
pop
ret
jg
jb
jg
xchg
inc
adc
ret
test
addr16
inc
popf
gs
(bad)
leave
push
ret
pop
and
loopne
div
shl
out
stos
arpl
add
out
aas
ror
mov
cmp
les
fld
sub
mov
ficom
mov
dec
int
mov
hlt
mov
out
jp
cmc
leave
ja
ds
fsubr
dec
and
or
mov
push
scas
es
fild
inc
and
jle
inc
pusha
aad
xchg
cmp
pusha
shl
test
jge
or
xor
cli
dec
ficom
in
add
lods
fild
rol
shr
daa
pop
sbb
adc
jne
data16
jmp
mov
mov
in
test
mov
sub
inc
into
sbb
mov
push
arpl
push
sub
sti
retf
sbb
xor
push
xchg
pop
call
test
ret
cmc
mov
push
inc
or
or
add
jp
loopne
shl
repz
(bad)
out
xor
cld
xchg
leave
mov
jmp
leave
pop
mov
xchg
mov
test
mov
cmp
push
fcom
ins
mov
fdiv
mov
mov
jle
inc
mov
jg
sub
xchg
push
stos
out
int3
and
sahf
fs
xor
dec
xor
cwde
test
nop
fstp
mov
aas
div
(bad)
cmp
cs
adc
jl
icebp
push
(bad)
fs
rcl
shr
adc
sahf
sub
scas
jo
mov
pop
xchg
jg
add
in
mul
jo
jbe
sub
mov
test
pop
dec
jge
lahf
push
xchg
icebp
jge
ja
ret
aad
retf
lds
mov
popf
loope
movs
adc
mov
lock
xbegin
xchg
(bad)
int
adc
sub
mov
stos
daa
lahf
outs
pop
in
cmp
jns
jmp
ins
sub
nop
ins
(bad)
aas
rcl
mov
or
addr16
fstp
dec
push
cmc
sbb
sub
(bad)
fcom
mov
pop
dec
or
sbb
daa
cmp
fcomp
add
aas
jl
adc
push
push
pop
mov
nop
pop
mov
lods
sbb
add
(bad)
rol
or
ss
pop
adc
scas
das
loope
cmps
jge
and
cmps
mov
imul
inc
lahf
iret
or
popf
xchg
mov
retf
cli
mov
mov
dec
cld
mov
push
mov
lock
(bad)
and
shl
ds
addr16
arpl
shl
hlt
jae
push
jmp
(bad)
mov
xchg
shl
sbb
retw
(bad)
in
push
xchg
sbb
xor
hlt
sub
adc
jge
repnz
(bad)
aam
mov
cmps
mov
ret
dec
push
mov
movs
lock
and
(bad)
fisttp
sbb
pop
idiv
dec
iret
jae
mov
inc
sbb
aaa
les
sbb
jns
(bad)
in
rcl
movs
test
or
sub
pop
outs
xor
(bad)
jmp
jge
out
jle
jecxz
dec
test
int
push
sbb
jl
adc
push
call
jp
cli
jmp
sbb
mov
push
(bad)
cmc
mov
cmps
out
call
mov
push
jmp
mov
xlat
mov
adc
xchg
jb
pop
fxch
mov
test
or
pop
push
mov
std
push
and
xor
mov
sub
imul
sbb
(bad)
pop
cmp
jp
pop
xor
mov
ins
lds
clc
add
mov
mov
jg
out
cs
jl
inc
jnp
test
sub
mov
test
mov
xor
and
sti
pop
lea
jbe
div
and
jmp
loop
cli
mov
sbb
(bad)
lds
sub
stos
(bad)
cmp
and
xchg
out
scas
xchg
push
idiv
test
retf
jno
rcr
ret
mov
mov
add
sub
xchg
and
xchg
cmp
lods
xor
outs
sbb
add
pop
sbb
ja
stc
and
xchg
mov
jmp
sbb
cmps
mov
xchg
inc
call
mov
pop
or
jge
add
pop
cmp
mov
lahf
mov
fwait
and
jl
test
jle
jo
sbb
mov
or
shr
dec
cmp
sar
test
xor
inc
mov
adc
jl
cwde
mov
test
sbb
movs
sbb
sbb
sbb
add
or
push
out
push
rcr
ret
mov
push
or
in
pop
ds
mov
call
icebp
popa
jb
jmp
push
xor
sbb
mov
dec
mov
loop
mov
mov
jle
addr16
cmps
sbb
loope
scas
fwait
add
pop
mov
jmp
push
and
mov
je
(bad)
jmp
jb
test
pop
inc
and
mov
lahf
movs
cmps
mov
sbb
inc
adc
test
clc
mov
adc
cwde
or
enter
ret
call
inc
jno
xor
push
movs
jnp
and
jmp
retf
and
or
push
(bad)
in
adc
mov
hlt
or
mov
push
mov
lods
neg
mov
jo
dec
into
xchg
pop
jnp
cmp
cli
imul
mov
cmc
imul
sti
movs
jmp
sbb
fld
pop
fdivr
cld
xchg
or
repnz
pushf
pushf
test
mov
inc
add
xor
cmp
push
mov
out
push
sbb
js
sub
inc
pop
int
xor
ds
sbb
xchg
xchg
mov
fcom
and
adc
adc
in
mov
add
lods
push
xchg
lea
int3
cmc
cmp
mov
lods
leave
cmp
and
rcr
mov
push
jbe
loope
rcl
mov
mov
jne
mov
mov
jmp
sahf
adc
int
test
pop
pop
sbb
xor
cs
xchg
xchg
mov
pusha
call
shl
into
add
xchg
and
jnp
shl
push
lea
jle
into
pop
ss
js
jbe
jnp
or
dec
lahf
leave
pop
and
and
inc
idiv
pop
pop
into
xchg
xchg
mov
mov
std
inc
mov
push
sub
and
and
inc
jp
data16
jne
je
inc
mov
cli
xor
mov
push
pop
cld
jmp
into
adc
ror
mov
push
in
dec
rol
mov
sbb
mov
in
out
hlt
xor
dec
jmp
ja
repz
push
add
jno
ds
fbstp
loop
clc
xor
std
jnp
mov
push
mov
or
push
jnp
push
pop
daa
mov
dec
mov
fcomip
or
cmps
add
jo
pop
sub
data16
dec
sbb
(bad)
std
not
lods
test
xchg
out
pop
mov
inc
ds
lods
pop
push
mov
mov
lock
push
or
jecxz
jno
mov
sbb
or
pcmpeqb
xlat
fmul
xchg
shl
leave
out
sub
mov
push
jle
sbb
mov
retf
xchg
int
or
cmp
inc
mov
es
sbb
repnz
inc
ds
into
dec
aad
inc
out
jbe
dec
push
xor
lock
scas
pushf
les
cmp
(bad)
and
adc
bound
out
jb
ret
push
icebp
adc
clc
jns
mov
cli
movs
pop
std
mov
and
inc
sub
xor
(bad)
jle
pop
jne
add
cdq
out
ret
adc
and
scas
push
mov
add
xor
adc
outs
arpl
jnp
jmp
(bad)
lahf
(bad)
leave
fcomp
(bad)
pushf
add
lods
jb
mov
and
dec
pushf
out
pop
(bad)
ins
fbld
rcl
and
in
scas
stc
ret
xor
xor
sub
cmc
mov
dec
fisttp
rcl
and
(bad)
dec
das
ja
xchg
aas
iret
sub
sti
sti
xchg
xor
(bad)
jnp
inc
(bad)
push
cvtpi2ps
sbb
mov
add
and
loop
mov
pop
daa
fld
outs
test
stc
repnz
scas
loop
mov
sub
bound
(bad)
or
mov
jmp
or
icebp
(bad)
cdq
pop
cmc
imul
js
call
xlat
mov
sub
and
sbb
xchg
cmps
aad
sbb
and
push
jo
xchg
push
in
mov
out
call
in
sti
mov
hlt
sub
loopne
mov
xchg
daa
neg
pushf
mov
rcr
mov
imul
(bad)
mov
stos
imul
add
jmp
stos
mov
ficomp
mov
pop
scas
in
jmp
pusha
jns
and
xchg
fwait
pop
adc
push
xor
cmps
loopne
jmp
idiv
mov
jae
ins
add
jns
inc
into
mov
fprem1
inc
fiadd
adc
push
(bad)
das
xor
push
mov
movs
neg
rcr
inc
add
aam
fild
push
adc
in
mov
fwait
dec
(bad)
xor
inc
jnp
add
in
jnp
and
adc
sub
in
or
add
scas
dec
pop
jl
addr16
(bad)
sub
dec
jmp
arpl
add
mov
mov
cmps
xchg
cmp
aaa
cmc
out
and
jle
ror
loope
call
hlt
imul
outs
into
fbstp
xor
sub
imul
mov
jmp
ins
or
jg
out
mov
ret
enter
movs
jecxz
xor
ins
test
retf
retf
int3
push
cmp
jmp
ss
in
mov
jns
sti
movs
and
call
inc
imul
sbb
xor
xchg
jecxz
jae
mov
rol
sub
js
fwait
(bad)
jne
push
or
xor
(bad)
loopne
pop
ficomp
add
pop
mov
and
cli
push
jb
enter
out
push
fsub
retf
xchg
test
out
retf
out
pop
push
test
call
out
in
xor
xchg
aad
sbb
jmp
dec
jne
cld
outs
dec
dec
mov
cmps
jmp
dec
test
test
fisttp
mov
in
es
inc
dec
mov
(bad)
sbb
xor
mov
add
pop
les
mov
jmp
loop
outs
mov
xchg
aaa
jnp
jmp
jmp
mov
push
icebp
retf
or
and
mov
push
fsin
mov
cmp
call
cmp
xor
jmp
scas
ss
bound
mov
push
movs
std
inc
retf
fcomip
xchg
sbb
xchg
pop
ins
push
ss
out
lods
fmul
sub
xchg
jmp
dec
jge
int3
sub
idiv
loope
sub
mov
lea
dec
out
mov
(bad)
mov
jnp
ins
pop
mov
in
cmps
sahf
data16
icebp
arpl
(bad)
and
out
add
lods
inc
test
mov
ret
add
fwait
popa
lea
or
cmp
loopne
dec
out
dec
push
xor
in
adc
adc
mov
(bad)
loope
loop
outs
mov
retf
ret
push
lea
loopne
loopne
shl
imul
add
pop
jns
rcr
cmp
push
xchg
jl
mov
rcl
dec
push
aam
dec
popf
xchg
je
pop
loopne
std
leave
ror
jae
(bad)
cmp
mov
ja
jb
adc
mov
pop
push
pop
lock
push
iret
xor
or
xor
in
cdq
dec
mov
ss
rcl
fwait
jb
xor
lods
and
jg
fnstcw
mov
fadd
mov
inc
scas
in
xchg
daa
xor
aas
mov
je
push
popf
dec
mov
(bad)
push
(bad)
hlt
pop
mov
int3
hlt
jp
dec
push
stos
push
aaa
mov
mul
imul
in
or
out
cmps
ffree
pop
pop
clc
push
arpl
shr
das
lods
or
dec
dec
pop
(bad)
push
in
ret
fldl2e
mov
xchg
mov
sub
int
movs
xchg
test
lods
retf
lock
inc
or
sar
fist
retf
jno
jmp
or
xchg
int3
mov
sub
pushf
mov
or
aas
xchg
int
pop
(bad)
or
(bad)
shl
ja
shr
or
lahf
jmp
rcl
dec
popf
cmc
mov
ret
xor
jp
mov
sti
mov
dec
fcomp
pop
loop
ins
mov
dec
pop
jo
push
in
pushf
outs
pop
xor
gs
push
shl
pop
push
shl
test
lods
sub
jns
fstp
jmp
sbb
xchg
adc
loopne
pop
xor
dec
adc
mov
xchg
pop
dec
adc
mov
dec
cmovg
sub
or
stc
in
jl
xchg
cmps
mov
push
aad
ret
jno
push
data16
mov
jne
mov
test
xor
jmp
pop
push
sbb
in
xchg
out
rdmsr
in
sbb
cmp
test
jb
cmp
dec
add
movs
and
jns
nop
fwait
scas
adc
inc
(bad)
aam
into
in
mov
cmp
aas
and
cwde
inc
dec
aam
aaa
sbb
push
push
jo
cmp
cmp
(bad)
pop
out
mov
sbb
mov
dec
pop
ror
jae
lahf
dec
xchg
push
outs
das
jmp
lds
movs
(bad)
movs
add
enter
jae
xchg
dec
imul
js
adc
cmp
sub
dec
(bad)
cmp
push
mov
or
jae
pop
push
xchg
push
xchg
sub
scas
mov
xor
or
mov
and
mov
out
fwait
out
cwde
sub
add
cmp
lock
dec
mov
mov
sti
xor
fmul
ret
cmp
or
(bad)
mov
fs
cmp
push
mov
add
sub
jp
xchg
aas
inc
xchg
std
test
lods
or
test
loope
cmp
out
add
push
aam
xchg
mov
mov
mov
pop
lods
sbb
dec
call
cmp
rcl
sti
sub
push
dec
fs
inc
out
fimul
movs
xor
jp
jb
loop
push
int3
jmp
jg
cmp
out
pop
dec
bound
jecxz
xchg
xchg
mov
add
or
sbb
pop
inc
je
add
sbb
push
or
pop
sbb
jp
adc
in
jmp
xor
retf
iret
sub
(bad)
dec
fild
cs
cmp
mov
dec
(bad)
pop
out
mov
repz
pop
retf
mov
sub
fwait
div
iret
ins
jb
div
into
push
inc
push
pusha
or
pop
mov
mov
jns
mov
push
ins
dec
int
test
std
enter
adc
rcl
xchg
sti
dec
pop
jnp
mov
ins
daa
ret
jo
das
xlat
fimul
adc
jne
cmp
cmps
jge
retf
mov
shl
loope
mov
fbstp
call
jmp
daa
and
repz
fisub
dec
fstp
xchg
pop
pop
xor
scas
jecxz
and
fld
sub
test
sbb
imul
xchg
call
arpl
xor
cmp
div
int
in
daa
push
push
add
stos
inc
je
push
fwait
cmc
mov
mov
aam
xchg
mov
imul
pop
push
cli
push
jmp
and
mov
int
cdq
adc
push
sbb
mov
(bad)
push
push
xchg
jne
jecxz
int
xchg
mov
mov
xchg
jne
push
pop
inc
mov
xchg
imul
cmps
mov
mov
scas
ds
cmc
jmp
mov
fild
mov
aam
xor
mov
jge
xchg
xor
xor
jno
push
sub
cmp
sub
into
movs
out
xor
sbb
jb
adc
retf
adc
pop
push
jo
inc
sub
pop
mov
push
mov
mov
ds
pop
(bad)
adc
fsubr
or
add
ja
iret
ins
test
stos
xor
ds
(bad)
jns
sub
dec
xor
mov
xor
dec
loop
and
bound
call
mov
into
mov
into
xchg
add
inc
lods
add
cwde
into
mov
mov
pop
pop
pop
push
sub
in
mov
sub
pop
jnp
test
sub
add
lock
repnz
fsub
push
into
adc
xchg
mov
mov
scas
jge
mov
mov
je
adc
add
push
dec
jg
mov
mov
sbb
sti
sub
jecxz
sub
neg
inc
sbb
dec
test
push
rcl
xchg
adc
cmc
sbb
jb
push
xchg
ins
adc
addr16
or
into
repz
xchg
imul
out
jl
shl
call
fsubp
repz
ss
mov
pushf
test
pusha
loop
cmp
mov
fisubr
lods
in
jmp
cs
mov
push
pop
mov
dec
pop
fdivr
xchg
movs
repz
in
fistp
icebp
cmp
mov
aaa
add
cmp
mov
in
fs
inc
imul
dec
or
ret
and
push
mov
aas
pop
push
(bad)
loop
sti
leave
inc
lahf
add
mov
sbb
(bad)
stos
ss
add
je
xor
sub
push
(bad)
dec
jp
pusha
ror
xor
movs
out
rep
inc
jge
push
into
push
mov
cmc
mov
ins
les
outs
fisub
arpl
out
push
add
iret
jecxz
in
dec
push
mov
sbb
or
sbb
and
js
in
push
and
xchg
xchg
pop
mov
std
nop
sub
xchg
stos
js
es
nop
push
and
cs
fldenv
mov
lock
es
mov
outs
sub
repz
xor
sub
lea
jnp
repnz
rcl
cmps
sbb
data16
bound
mov
cwde
clc
xlat
int
mov
push
xor
cwde
fdiv
push
rcl
dec
and
scas
inc
cmp
jae
lahf
int
adc
fcomip
pop
inc
mov
test
in
dec
push
inc
ins
mov
scas
pushf
mov
push
dec
sub
xor
fwait
les
(bad)
mov
aaa
mov
lods
mov
les
bound
mov
test
or
inc
pop
outs
or
dec
aam
pop
mov
scas
rep
scas
pop
lods
fst
fucomi
ja
inc
cli
cli
pop
inc
mov
sub
sub
fstp
mov
loop
lds
cwde
cmc
sar
fcmovne
lock
pop
scas
dec
adc
test
push
push
enter
lds
mov
je
dec
inc
stos
jbe
jns
jmp
ds
pop
mov
lock
inc
pusha
pop
fs
adc
fwait
es
dec
aas
xor
xchg
nop
mov
lods
repnz
mov
adc
jbe
mov
fisttp
(bad)
(bad)
movs
adc
sbb
xchg
or
repz
sub
dec
(bad)
scas
retf
mov
movs
adc
inc
mov
mov
jo
mov
add
mov
xor
out
movs
adc
leave
in
inc
(bad)
and
cli
loope
data16
in
jmp
test
ins
adc
cdq
iret
pop
xchg
pop
mov
xor
xor
add
mov
and
sbb
repnz
or
xchg
movs
data16
test
dec
fwait
aaa
inc
lods
mov
jmp
cmp
sub
inc
mov
ds
xlat
cmps
ss
xlat
movs
(bad)
jo
(bad)
lock
aam
jnp
sub
daa
repz
out
xchg
or
shl
sti
sub
xor
out
push
inc
jbe
ret
arpl
cmp
inc
pusha
add
sub
pop
push
sbb
cmp
ss
inc
test
enter
sar
jbe
sbb
sub
push
add
call
ja
push
scas
fist
jmp
push
icebp
mov
sub
cmp
or
sub
sub
cmp
retf
aaa
aad
sti
jge
jne
and
fnstsw
xor
ret
outs
xchg
mov
aam
gs
pop
ja
xchg
xlat
and
push
ds
push
bound
and
test
out
mov
(bad)
push
movs
push
int
jo
inc
xchg
pop
xchg
adc
mov
mov
inc
addr16
hlt
pusha
sbb
cmc
push
cld
inc
repz
mov
sbb
das
pop
aas
scas
xchg
mov
call
test
cmp
mov
cmp
pop
out
jecxz
xchg
stos
jle
and
xchg
dec
or
int
push
call
cmp
push
data16
int
add
xchg
stos
(bad)
cmps
enter
dec
cmp
std
sbb
mov
sub
dec
jmp
mov
jns
jo
pop
repz
sbb
mov
cwde
push
mov
adc
sbb
adc
mov
jmp
dec
xchg
neg
cmps
push
sub
enter
inc
stos
mov
daa
mov
je
pop
and
out
in
in
icebp
jbe
jmp
lock
sbb
xchg
xchg
in
jne
push
mov
addr16
adc
loopne
das
or
jmp
gs
sub
xor
test
imul
or
sbb
sbb
ins
arpl
cdq
push
lods
xchg
sub
jo
sbb
push
jo
pop
aaa
loop
push
fcom
jmp
popa
int3
and
and
jg
nop
push
mov
arpl
sbb
mov
sub
enter
dec
repnz
fisttp
scas
push
jecxz
mov
mov
jecxz
or
push
xchg
stos
pop
sub
(bad)
dec
push
in
frstor
jge
shl
fld
sbb
mov
cmp
repz
xchg
cli
addr16
sbb
cmp
sub
xchg
xchg
xchg
jnp
test
jle
push
cmc
mov
ss
(bad)
pop
mov
into
cld
xor
add
or
mov
sub
or
retf
fwait
adc
cmp
adc
push
add
mov
ja
fcmovbe
jmp
cmps
cmps
dec
(bad)
in
mov
in
mov
call
fsub
repz
mov
sbb
out
call
std
nop
(bad)
push
sub
push
inc
mov
pop
inc
push
in
push
pop
mov
xor
add
sub
je
mov
repnz
iret
or
popa
push
mov
jb
pop
mov
call
sahf
loopne
mov
sbb
cli
xchg
les
loop
jle
in
shl
cmp
dec
cmp
dec
retf
push
jbe
push
inc
(bad)
fdivrp
sbb
mov
call
or
ror
pop
imul
xchg
mov
sub
ins
and
mov
cs
xchg
inc
mov
cmovae
mov
cs
fs
sbb
sbb
add
inc
mov
add
sbb
std
shl
cli
leave
call
or
fnstsw
inc
shl
sub
test
sti
or
ja
dec
or
mov
call
push
sbb
les
stos
test
pop
jl
jge
pop
test
out
mov
dec
lods
test
call
stos
pop
lahf
jl
or
cmp
test
mov
add
pop
pop
pusha
mov
mov
mov
and
shr
imul
xchg
xchg
inc
call
cld
dec
sbb
shr
(bad)
test
lea
xor
jecxz
cmps
in
xchg
sbb
call
xchg
lea
jp
pop
dec
xchg
lods
lods
mov
mov
jno
aaa
jmp
jmp
ror
fcom
dec
pop
xlat
aam
mov
mov
cmps
pop
mov
cmps
sub
xor
fidivr
mov
lea
and
sub
arpl
adc
inc
pop
add
rcl
sub
aas
dec
fstp
mov
ret
ja
mov
or
mov
add
les
sbb
(bad)
cli
stos
fld
popa
jmp
sub
pop
sbb
or
xor
shr
adc
jmp
inc
push
rcr
mov
lds
stos
clc
mov
jnp
ins
ins
fnstsw
dec
push
mov
fbld
xor
adc
jmp
adc
test
fdiv
pop
fisttp
pop
xor
daa
pusha
xchg
ret
dec
ja
pcmpeqd
les
nop
imul
outs
sbb
jmp
aas
sub
mov
cmp
dec
push
movs
dec
popf
xchg
lods
mov
or
mov
xchg
xor
xchg
mov
mov
push
fldenv
(bad)
xchg
sbb
(bad)
sbb
mov
call
cmps
popa
xor
call
lock
bound
xchg
(bad)
mov
aam
and
or
add
push
add
int3
lods
cs
mov
inc
stos
mov
cdq
stos
pop
lods
out
sbb
or
fwait
adc
jle
ret
(bad)
es
mov
sub
jmp
dec
mov
mov
xor
pushf
and
inc
cmps
out
inc
aad
fisubr
ds
mov
jo
adc
or
ret
in
(bad)
xor
pop
sbb
mov
pop
gs
and
dec
sbb
jbe
jno
shl
or
dec
xor
pop
dec
cmp
pusha
jl
mov
sbb
ret
jno
mov
jnp
les
daa
daa
lods
pop
fisttp
push
push
mov
ror
es
sahf
jmp
shr
inc
lahf
mov
jae
aam
ds
and
dec
scas
pop
adc
jle
rcr
dec
scas
adc
sbb
xchg
nop
inc
adc
movntps
in
outs
test
adc
std
ror
push
cpuid
imul
test
test
sbb
cmp
(bad)
push
leave
pop
cmp
jmp
mov
push
ja
push
xor
ins
mov
fcomip
(bad)
imul
sub
inc
jle
inc
dec
jae
pop
inc
mov
sar
stos
pushf
fwait
add
pop
jae
int3
(bad)
cmps
push
and
jecxz
fwait
add
inc
retf
mov
jne
movs
(bad)
adc
int
or
xor
or
fcom
repnz
mov
sbb
push
cdq
sbb
movs
mov
outs
daa
ret
dec
call
into
sbb
int
mov
movs
call
cmps
pushf
in
sti
adc
and
adc
mov
mov
add
fwait
sbb
in
cli
push
jns
test
mov
xor
rsqrtps
cmp
jbe
add
out
cdq
(bad)
cmp
cmps
add
cli
inc
loopne
sbb
aad
mov
sub
jne
dec
pop
push
test
ret
enter
cmp
scas
mov
pop
cli
sar
pop
pop
fsubr
stos
mov
mov
dec
in
loopne
repnz
push
xor
scas
and
push
mov
ret
lods
push
xchg
dec
jmp
or
enter
andps
nop
mov
pop
push
jge
mov
pop
stc
mov
jl
or
jno
push
inc
or
aam
bound
in
and
fstp
add
test
xchg
jnp
js
sbb
ret
sti
aad
inc
and
loope
ins
in
or
mov
cwde
ds
jmp
outs
bound
jno
in
jb
pop
stc
and
push
pop
inc
adc
or
adc
leave
sub
jbe
int3
loop
in
push
pop
stos
popf
out
stc
bound
ss
xor
jb
lods
pop
scas
jl
push
push
jo
or
(bad)
dec
xchg
daa
mov
adc
fsub
xchg
mov
mov
mov
ds
jmp
cld
(bad)
repz
sbb
jmp
dec
pop
mov
not
imul
sub
cmp
cs
lea
popa
mov
cmps
mov
inc
inc
out
xchg
jge
mov
push
mov
imul
outs
pop
dec
test
lahf
jns
pop
or
inc
aam
stc
push
sub
dec
mov
shr
stos
cmp
nop
fistp
mov
call
sti
sub
pop
dec
pop
mov
push
inc
xchg
pop
rcl
add
pushf
or
cwde
jne
pop
jecxz
or
lea
test
inc
mov
add
sbb
sbb
and
cmps
xchg
or
push
jns
(bad)
repnz
idiv
bound
mov
iret
xor
inc
xchg
(bad)
adc
lock
cmp
xchg
xchg
dec
push
adc
jno
int3
pop
imul
loopne
sub
mov
xchg
lock
and
jmp
mov
(bad)
jnp
dec
addr16
sar
add
repz
mov
add
jle
push
imul
dec
les
xor
call
shl
call
pop
xchg
inc
mov
fisub
data16
shr
daa
cmp
adc
js
jo
mov
jg
push
or
(bad)
fiadd
push
ret
push
imul
lods
jl
adc
jno
push
cmp
xchg
sub
mov
mov
jg
data16
sbb
test
call
cs
cmp
sub
ins
mov
xor
pop
mov
cmps
inc
pop
adc
jg
pop
jnp
push
xor
div
sub
mov
sub
or
sbb
xchg
adc
retf
push
sbb
or
xor
mov
out
push
push
lock
(bad)
call
ja
xchg
jne
fdiv
xchg
push
pop
and
add
mov
mov
lods
xchg
mov
adc
push
push
ins
int3
leave
or
or
and
jg
fsub
mov
cmp
mov
inc
fwait
movs
fcmovnu
aam
pop
pop
repz
jecxz
sub
xchg
add
out
call
pop
aam
popf
retf
xchg
xor
rol
mov
fisub
les
bound
sar
jbe
stc
gs
push
adc
neg
sbb
ss
fcmovnu
mov
stos
xchg
or
inc
(bad)
or
cmc
mov
jl
fst
in
pop
mov
lods
xor
lods
repnz
dec
dec
(bad)
movs
jp
xchg
je
dec
ins
push
jle
cmps
(bad)
mov
rcl
js
mov
add
sbb
mov
sbb
retf
inc
xchg
enter
call
out
rol
fsubp
mov
mov
aad
cld
xor
xchg
jo
pop
mov
(bad)
das
push
stc
in
pop
mov
cmp
mov
call
mov
fwait
sahf
ret
and
dec
xchg
mov
push
aad
cmp
pop
mov
pop
jg
pop
and
mov
pop
leave
shl
arpl
jns
mov
cwde
dec
scas
push
jne
(bad)
repz
imul
cmp
lds
mov
popa
stos
test
push
jno
xor
xchg
mov
jnp
imul
adc
xchg
jecxz
icebp
sbb
mov
es
mov
dec
movs
jbe
adc
cmp
aaa
xchg
jbe
xchg
sub
inc
xchg
movs
stos
inc
push
sbb
jp
push
push
dec
mov
or
and
or
mov
fld
das
sub
jg
loop
inc
xlat
aas
std
push
lock
cmp
jge
jle
es
push
fstp
in
test
or
imul
mov
pop
in
cli
or
xor
repnz
les
push
bnd
mov
int3
stos
mov
pop
(bad)
or
cwde
cs
out
jno
sahf
sbb
and
mov
neg
int
cdq
into
sbb
add
jge
leave
mov
inc
es
pop
mov
inc
jmp
scas
jbe
or
ins
out
mov
lods
mul
sbb
out
in
shl
in
and
fimul
clc
add
fldenv
jb
dec
jg
ins
pop
and
push
lahf
add
out
xchg
add
fucom
xchg
sbb
xor
sub
mov
mov
jmp
sub
mov
ret
lods
out
sbb
sub
fidiv
add
cs
xor
and
aas
stc
fsubp
nop
sub
je
enter
outs
mov
pop
icebp
mov
(bad)
dec
out
stc
sahf
pop
xor
mov
mov
inc
cmps
mov
call
pop
push
sti
cmp
outs
jne
hlt
pop
cmp
push
cli
shr
mov
jno
in
cld
shl
mov
ins
xor
mov
in
fsub
imul
push
sar
or
mov
repnz
fucom
xor
loope
and
loop
rcl
add
inc
ret
ss
dec
rol
out
outs
mov
xchg
push
sbb
sub
ds
inc
inc
rcr
adc
xchg
int3
call
mov
test
and
ins
push
dec
or
out
pop
daa
cmp
sbb
daa
mov
xchg
jb
ss
cmc
cli
pop
fld
jne
in
mov
sbb
shl
daa
push
hlt
and
mov
imul
sub
add
add
push
sub
iret
and
int
aad
jg
fmul
mov
retf
shl
jmp
shr
test
mov
jae
leave
mov
loop
mov
aam
in
loope
dec
in
(bad)
repz
cld
enter
in
mov
xchg
test
mov
bound
lahf
mov
push
xchg
mov
cmp
inc
xlat
lock
mov
push
sub
inc
rcr
fs
imul
popa
inc
jecxz
addr16
xchg
xchg
mov
push
push
rol
adc
mov
jae
fwait
xchg
and
mov
fld
fcmovnbe
or
pop
adc
cmps
into
call
int
das
cmp
cmp
test
fld
mov
test
mov
cmp
movs
test
pop
xchg
jmp
mov
(bad)
adc
call
or
sbb
jl
add
xor
jecxz
sbb
js
xor
pusha
push
or
adc
mov
adc
(bad)
call
mov
or
fs
or
xor
fdivr
fwait
mov
test
push
xor
shl
mov
mov
push
das
sbb
mov
hlt
fist
cdq
cmp
mov
dec
lods
shl
cmp
xor
mov
lock
leave
fadd
ss
std
push
jbe
sbb
cmp
lds
std
cmps
pop
and
or
push
js
cmp
stc
inc
leave
ja
ds
adc
xor
mov
push
popa
cmp
lods
mov
aam
mov
mov
fisub
addr16
rcl
pop
cs
hlt
cmp
xchg
add
cmp
mov
(bad)
cmp
jo
and
or
adc
pop
das
sub
inc
sub
mov
cmps
icebp
ins
and
add
clc
out
leave
and
sbb
retf
retf
ficomp
jg
outs
clc
les
xor
jmp
cdq
push
mov
(bad)
add
xor
xchg
mov
mov
and
pop
jbe
cld
imul
push
sbb
sbb
sbb
mov
stc
mov
mov
ret
shl
push
fld
xchg
cdq
fld
retf
lods
std
ror
pop
retf
loop
jle
and
and
jl
sub
stos
push
loop
inc
sar
fcmovbe
call
mov
loopne
xchg
cli
mov
stos
jb
mov
pop
xchg
mov
mov
sub
loop
mov
adc
int
and
sub
movs
jno
sahf
stos
clc
push
gs
xor
retf
add
and
idiv
add
inc
pop
jge
cs
mov
and
jns
outs
dec
xchg
fidivr
jo
mov
hlt
stos
sub
inc
push
sbb
add
js
jnp
mov
cmp
dec
xchg
sub
push
imul
pop
call
movs
pop
xor
jns
addr16
mov
and
jae
mov
sbb
icebp
addr16
jg
dec
adc
sbb
test
in
(bad)
jmp
inc
dec
in
in
lahf
jmp
cdq
sub
push
sbb
div
push
mov
lahf
sbb
xchg
dec
push
sbb
jbe
cli
adc
inc
cmp
retf
or
push
jle
ror
sbb
push
fcomp
bound
or
push
popa
jmp
xor
(bad)
xor
cwde
ins
dec
sbb
xor
cmp
sub
push
out
das
leave
push
hlt
jbe
test
xchg
or
das
dec
and
jo
addr16
pop
jno
das
cmps
mov
sub
xchg
pop
(bad)
lods
adc
add
jnp
jbe
or
fstp
nop
(bad)
pop
push
in
adc
ret
mov
jno
xor
arpl
pushf
sti
pop
ror
jno
jns
out
in
mov
sbb
xor
jae
inc
lock
ins
push
xor
lea
clc
dec
adc
cmp
push
push
retf
outs
add
in
loope
(bad)
mov
pop
mov
jle
outs
inc
div
cld
push
cmc
mov
daa
rcr
cmp
sbb
(bad)
out
cld
dec
sahf
retf
or
imul
popf
mov
add
jmp
ins
xor
mov
fcmovne
adc
sub
lahf
call
enter
and
imul
into
jmp
cs
ins
mov
and
aam
or
mov
pop
int3
shl
ror
mov
sbb
jno
and
shl
mov
mov
mov
leave
mov
add
mov
mov
cmp
adc
xor
fxch
jae
xchg
mov
scas
cmps
adc
cmp
inc
jg
jae
push
jl
xchg
sub
add
adc
fld
out
mov
fbld
jns
rcl
shl
dec
das
mov
or
xor
jne
in
xchg
retf
mov
sbb
aaa
mov
pusha
iret
call
jae
xor
aam
ror
cdq
add
sti
movs
in
push
imul
jg
in
adc
jmp
pusha
add
aas
mov
retf
pop
and
test
retf
ret
call
xchg
and
and
dec
adc
pop
lds
and
or
jno
jmp
dec
or
cmp
jns
sub
enter
add
cld
sub
adc
in
movs
int3
inc
dec
mov
jb
mov
fdiv
ret
outs
push
cmc
out
sub
shl
movs
(bad)
ror
dec
fdiv
pop
sub
and
(bad)
xchg
ror
cwde
add
lock
cmp
je
push
xchg
and
jecxz
mov
mov
(bad)
sub
xor
jge
and
inc
inc
ret
mov
jns
dec
loop
xchg
retf
vpsubq
ja
clc
mov
mov
pop
cld
dec
and
sub
adc
iret
shr
jle
out
scas
inc
(bad)
jl
sbb
sti
cmp
shl
shl
loopne
out
jp
xchg
mov
mov
inc
arpl
pushf
fwait
push
mov
test
cvttps2pi
in
gs
dec
mov
cmp
jo
adc
add
lods
in
std
pusha
push
loopne
jae
xchg
pusha
mov
scas
data16
xchg
ss
add
icebp
stc
sbb
and
data16
jge
push
inc
test
stos
inc
in
in
cmp
add
mov
jo
fisubr
inc
call
test
ror
shr
sub
aas
mov
in
and
cwde
enter
movs
push
sub
cmp
shr
movs
or
and
dec
retf
adc
bound
cmp
out
iret
loop
test
cld
mov
mov
loopne
mov
add
jmp
call
dec
rcl
rcr
(bad)
mov
xchg
jmp
aaa
dec
out
aaa
dec
pop
cmc
xlat
shl
sub
pop
fnstcw
inc
add
out
pop
and
jno
pop
jae
(bad)
pop
out
adc
inc
push
xor
or
out
in
movs
pop
lds
aaa
push
add
fyl2x
inc
pop
sub
or
push
jb
pop
xor
fmul
pop
mov
pop
(bad)
call
repnz
push
inc
in
je
fistp
add
cmp
ror
or
pop
pop
in
test
int
jecxz
jmp
shr
ficom
fst
(bad)
(bad)
mov
out
das
jno
mov
ds
scas
outs
or
les
pop
fsubr
stc
rol
mov
repnz
imul
sahf
and
xchg
pusha
inc
repz
cmp
inc
scas
jecxz
sub
jle
adc
aam
xsave
lods
sbb
sub
je
pop
sub
sbb
cmp
push
pop
mov
pushf
sub
mov
icebp
jb
stc
sub
mov
pop
add
call
stc
sbb
sub
stos
xor
(bad)
jge
mov
mov
rcr
or
lahf
ficomp
inc
retf
fcomp
push
jae
jmp
ins
scas
mov
sbb
inc
cmp
cmps
(bad)
(bad)
jo
dec
ret
(bad)
(bad)
push
imul
adc
ror
inc
add
pop
inc
mov
int3
pop
ds
aas
jae
mov
test
es
ficomp
gs
or
cmp
push
aad
dec
lock
fisttp
not
data16
add
mov
rcr
pop
in
int
xor
xchg
cmp
mov
inc
adc
loopne
arpl
or
in
or
push
shl
push
jg
xchg
js
js
arpl
mov
cmc
lods
inc
loopne
int
mov
xchg
cwde
mov
mov
dec
xchg
pop
xor
cmp
push
jp
cld
jbe
out
xor
jno
xchg
sbb
outs
sbb
retf
rcl
out
push
jno
test
fild
out
mov
call
rcl
daa
cmps
pop
and
outs
push
ins
lds
xor
cdq
or
jbe
xchg
mov
pop
or
xchg
add
iret
mov
outs
cmp
popf
outs
stos
push
cld
jne
or
stos
lahf
sub
icebp
int3
adc
adc
xor
sar
sbb
jbe
pop
js
and
nop
or
dec
sahf
cmp
pop
scas
dec
fmul
xor
dec
leave
ret
fnop
mov
mov
je
adc
out
add
ret
clc
mov
cmp
jle
jnp
mov
sbb
popf
fidiv
cmps
jb
popf
test
jne
xchg
or
mov
std
mov
pusha
popf
or
mov
stc
(bad)
cwde
mov
pop
in
mov
shl
mov
fnstsw
loop
push
xchg
jmp
out
jmp
enter
imul
je
mov
pop
adc
(bad)
xor
aam
(bad)
cli
xchg
shr
js
sub
gs
imul
pop
in
je
or
call
and
push
cmova
sbb
aam
imul
mul
dec
ret
push
ja
movs
sbb
xchg
mov
std
xchg
(bad)
mov
inc
(bad)
loopne
cli
and
int
sbb
sub
les
es
jbe
or
arpl
add
(bad)
jmp
stos
ret
ins
mov
cmp
sub
and
(bad)
push
mov
sub
jp
mov
loop
cmp
xchg
fxam
jmp
test
popf
adc
or
dec
outs
int
pop
jbe
xlat
pop
mov
xchg
stos
stos
clc
inc
jbe
pushf
dec
lock
addr16
sbb
pushf
sbb
jle
dec
fimul
jmp
mov
sbb
gs
mul
lea
arpl
pop
bound
out
cld
lea
(bad)
out
mov
into
mov
inc
xlat
(bad)
fsubr
sbb
dec
and
xchg
xchg
out
test
pop
loopne
pop
mov
in
xchg
retf
call
inc
mov
(bad)
(bad)
sub
inc
addr16
push
pop
pop
dec
jl
xchg
test
pop
inc
call
xchg
mov
mov
outs
mov
jge
jnp
in
sub
push
sbb
or
jno
pop
js
pop
jmp
fwait
xchg
ror
add
clc
add
or
hlt
cmp
inc
sub
push
cmps
(bad)
xor
movs
add
loope
mov
imul
hlt
cmps
jns
push
sbb
cmp
dec
shl
lea
bound
and
clc
sbb
and
(bad)
into
mov
dec
jns
push
(bad)
popa
or
in
scas
ret
fucom
or
jp
jmp
dec
push
sahf
mov
add
and
push
inc
pop
call
xlat
xchg
xchg
mov
dec
(bad)
ins
cmp
pushf
sub
popf
push
cmp
adc
inc
xchg
test
jecxz
pop
rcr
(bad)
dec
lds
ds
ret
xchg
enter
pop
jecxz
cmp
jecxz
imul
or
std
jbe
xor
push
inc
aas
ret
(bad)
and
inc
int
cmp
sbb
dec
mov
popf
fs
mov
or
jl
std
jnp
inc
shl
mov
cli
and
outs
or
jmp
xchg
or
jns
popa
xchg
add
aam
pop
test
and
imul
pop
add
in
call
sub
or
push
cmp
ja
xchg
pushf
pop
jle
ficomp
daa
test
fs
movs
and
pushw
mov
xor
leave
add
sub
ds
imul
push
push
adc
adc
fisttp
fiadd
shl
inc
aaa
pop
pop
xchg
jno
sub
mov
or
icebp
rol
shl
leave
and
inc
inc
mov
in
jmp
shl
sub
movs
lods
fs
pop
mov
lds
mov
push
aad
push
ss
test
adc
movs
lods
bound
popf
or
inc
out
test
ret
jg
inc
aad
xchg
popa
imul
xchg
jp
scas
test
pop
and
pushf
aas
stc
ffree
fiadd
add
mov
jo
fnsave
iret
mov
call
sub
fsubr
les
outs
cwde
lods
inc
cmps
stc
push
add
inc
sub
cmps
shr
pop
clc
push
pop
pop
push
xor
gs
jg
jmp
shl
dec
out
add
cmp
add
or
jb
mov
adc
fs
gs
mov
xor
xchg
out
(bad)
test
or
jmp
nop
shl
lods
daa
hlt
cmc
cmps
pushf
pop
dec
xchg
sub
jb
xor
and
inc
sbb
arpl
jmp
shl
pop
dec
pop
mov
fistp
jg
lock
outs
dec
sub
dec
jae
leave
sbb
and
push
test
adc
mov
inc
popa
scas
lea
pushf
add
out
lds
dec
sti
pop
nop
or
push
mov
stc
movs
lds
jns
jl
es
call
pop
ins
rcr
push
push
pop
(bad)
xchg
mov
xor
mov
arpl
push
mov
loop
ins
mov
hlt
sub
dec
in
and
mov
(bad)
pop
mov
and
int
push
idiv
sbb
mov
outs
cmp
push
(bad)
movs
shl
sub
shl
sub
mov
jae
mov
sbb
xor
and
push
mov
std
mov
xchg
fadd
add
lods
push
icebp
pop
mov
mov
loop
xor
scas
sbb
aaa
push
ret
or
jecxz
sbb
mov
pusha
adc
movs
mov
shl
sbb
outs
cs
mov
stos
adc
in
(bad)
sar
mov
push
popf
sub
aad
xchg
xchg
inc
(bad)
fstp
mov
jmp
push
call
mov
or
int
setnp
jmp
out
dec
cli
shl
push
mov
jb
jae
sub
dec
adc
repnz
push
ret
nop
mov
fist
mov
add
repnz
imul
pop
add
add
pop
rcl
jecxz
xchg
push
pop
test
dec
xor
(bad)
aas
mov
fcmovb
adc
imul
les
adc
add
jno
fdiv
pop
std
shl
fmul
leave
pop
add
cmp
out
and
pop
xor
icebp
loope
test
sbb
mov
fs
(bad)
in
push
push
xchg
ja
fisubr
pop
cmp
adc
clc
test
push
adc
sbb
pop
push
sub
mov
sbb
inc
xchg
xor
aad
mov
retf
or
imul
push
pop
inc
and
pop
pushf
add
lods
pop
(bad)
(bad)
fld
sub
mov
dec
fs
cmp
ins
rcr
dec
adc
pop
lea
lods
pop
repnz
mov
mov
push
ret
xor
ja
sbb
addr16
dec
les
jae
loope
xchg
cmp
push
add
xor
scas
lods
clc
dec
pop
scas
push
sub
hlt
cmp
and
cmc
adc
push
jnp
outs
mov
loope
mov
mov
push
fcom
cmp
add
push
fsub
stos
inc
mov
icebp
mov
mov
lods
idiv
(bad)
aam
mov
cmps
or
das
and
xor
xchg
add
add
xor
adc
adc
or
mov
push
and
jmp
test
pop
sub
imul
je
jmp
sbb
cli
pop
add
rcr
push
add
jl
jp
sti
xchg
(bad)
cld
mov
mov
test
and
loopne
mov
sub
in
imul
add
jo
adc
pushf
mov
icebp
(bad)
in
ins
sub
sbb
mov
xlat
xchg
je
movs
cmp
or
stc
jecxz
retf
pop
xchg
mov
mov
popa
dec
xlat
scas
(bad)
push
sub
aas
push
and
cli
loope
imul
xor
push
(bad)
in
test
ja
push
dec
or
(bad)
mov
shr
mov
mov
inc
inc
xor
arpl
bound
jge
(bad)
push
sub
cmpxchg
cs
lds
bound
jbe
jmp
into
add
push
out
and
dec
shl
out
push
sti
std
clc
aad
in
adc
loop
cdq
xor
inc
xor
movs
stos
ret
loopne
inc
xchg
jmp
sub
cmc
pop
inc
mov
or
cmps
scas
data16
inc
and
fist
std
mov
jno
(bad)
mov
xor
out
inc
jae
mov
test
aad
xor
mov
xchg
stc
pop
bound
fisub
test
out
pop
test
xchg
jg
push
and
cdq
inc
xchg
pop
mov
sbb
std
mov
xor
sbb
xchg
push
add
mov
test
add
fist
ds
aaa
rcr
call
ret
into
xchg
push
lahf
neg
sbb
shr
repz
arpl
and
int
mov
pop
mov
add
repnz
jne
xor
fld
jae
rol
call
iret
mov
sbb
hlt
loope
retf
(bad)
or
mov
dec
lock
adc
push
xlat
scas
jne
push
lods
xchg
xchg
mov
pop
shr
dec
cmp
add
ja
or
push
mov
inc
or
js
pop
test
sbb
aam
sbb
mov
retf
jmp
pop
loopne
push
pop
dec
jecxz
pusha
inc
loopne
stc
xchg
out
xor
outs
sub
and
retf
mov
test
sar
cmp
lods
scas
xchg
sar
(bad)
pop
out
inc
into
neg
and
cmp
or
outs
add
cdq
retf
mov
outs
pop
outs
dec
mov
lods
xchg
cmp
gs
stos
int
call
ss
int3
cmps
push
xchg
dec
in
fist
xchg
mov
aam
das
bound
fisttp
push
sbb
lahf
aas
fstp
sub
push
or
xchg
cmp
aam
test
ds
cmp
adc
fs
push
cli
addr16
(bad)
xchg
fs
push
cdq
cmps
pop
pop
jo
sti
inc
push
sbb
or
ds
fstp
add
dec
push
inc
xchg
mov
push
adc
out
mov
push
adc
div
add
mov
idiv
lds
dec
sbb
xchg
inc
cmp
mov
adc
inc
retf
jmp
xchg
stc
xchg
add
addr16
and
out
repnz
and
dec
sbb
jp
pop
jge
(bad)
outs
sbb
outs
lods
fwait
inc
aaa
pop
ja
or
scas
fimul
clc
xchg
out
ins
movs
push
fsub
jnp
stos
mov
add
dec
mov
mov
push
pop
mov
sbb
test
lods
lods
ficomp
cld
fucom
mov
repnz
push
jl
daa
jmp
xchg
push
(bad)
icebp
mov
icebp
add
xchg
mov
loop
cli
ds
sti
les
aas
sbb
pop
(bad)
push
sub
xchg
add
in
ret
mov
pop
arpl
add
sub
cmp
dec
sbb
pusha
rol
pop
cmp
pop
mov
retf
loopne
or
xor
data16
cmp
popa
repnz
mov
test
sbb
outs
daa
(bad)
mov
push
test
call
sbb
cmp
dec
jnp
dec
sbb
or
in
cmps
pop
fcom
sbb
pop
push
nop
call
mov
or
dec
cmc
stos
iret
jmp
cmps
repnz
and
bound
aam
test
cli
push
mov
pusha
ss
xor
repz
(bad)
mov
xor
sbb
ret
cmp
add
dec
jle
sbb
gs
xor
xchg
and
mov
and
pop
out
out
and
mov
adc
xlat
ins
daa
je
cmps
fadd
pop
sub
popf
loop
adc
ja
dec
imul
dec
mov
push
addr16
or
mov
aam
mov
out
sub
inc
ds
cmp
icebp
push
dec
ds
lods
jne
stos
inc
mov
jle
xlat
data16
mov
add
xchg
mov
scas
ret
stc
retf
mov
jp
out
cmp
push
fadd
mov
dec
jne
into
and
in
inc
push
pop
and
jno
js
fbstp
dec
sti
ins
icebp
cmc
lds
out
jns
loopne
cwde
lea
outs
jp
cmps
and
nop
popf
in
lea
in
xchg
pusha
data16
add
jns
pushw
(bad)
loope
mul
ins
mov
mov
add
push
jnp
xchg
lods
adc
cmp
test
ds
lods
jle
out
adc
icebp
ins
pop
aad
or
cs
xchg
mov
in
jne
ret
sub
jg
loopne
mov
add
fbld
mov
mov
inc
jo
loope
ins
xchg
xor
xor
adc
fstp
dec
mov
sbb
pop
and
jecxz
stos
jmp
cdq
push
add
iret
(bad)
xor
jmp
fidivr
dec
fisttp
sbb
pop
pop
outs
or
xor
(bad)
jo
push
mov
repnz
retf
stc
cmp
shl
add
ins
inc
popf
push
mul
sar
iret
in
xor
push
xchg
inc
loop
lods
push
inc
test
or
pop
cmp
jbe
sbb
call
sti
scas
jo
test
add
xchg
and
inc
lds
call
(bad)
in
cmc
cmp
rol
mov
gs
adc
xchg
xchg
call
cmp
retf
cmp
cmp
es
add
into
and
mov
test
jns
cwde
aad
ins
das
push
out
(bad)
and
adc
mov
f2xm1
mov
shl
int
les
nop
inc
call
cmp
sti
cwde
mov
add
fisubr
out
or
fucom
call
aaa
retf
push
dec
add
mov
push
movs
mov
or
jecxz
mov
call
mov
pusha
imul
rcl
cmp
pmaddwd
ins
(bad)
add
jle
and
mov
icebp
add
stc
ds
mov
rol
push
mov
and
sub
cmps
not
popf
les
das
pop
push
xor
dec
addr16
daa
xchg
cmps
es
pop
sbb
call
push
movs
pop
adc
(bad)
aad
mov
inc
add
retf
pop
arpl
xor
out
aam
rcl
inc
das
outs
xor
xchg
cmp
mov
hlt
push
stos
xchg
jnp
mov
sub
imul
jno
out
jb
dec
pop
adc
jg
movs
call
dec
dec
jno
outs
sbb
sub
xchg
fst
cli
aam
mov
sub
inc
mov
or
push
cmps
pop
jne
pop
adc
dec
repz
pop
inc
fisubr
out
xlat
fwait
pop
ss
nop
(bad)
aaa
fiadd
pop
movs
pop
pop
mov
js
pop
iret
pop
imul
inc
mov
mov
xor
add
fisubr
push
movzx
jno
das
shr
loope
int3
loopne
or
iret
arpl
outs
out
xchg
jge
sbb
scas
xchg
mov
rcr
popa
inc
mov
sahf
in
sbb
dec
shr
lahf
sbb
popf
push
push
popa
jmp
xor
test
xchg
mov
cld
sub
cmps
aam
push
repnz
xchg
test
push
(bad)
cmp
fdivr
inc
mov
daa
dec
adc
sbb
in
jmp
cs
mov
icebp
xchg
sub
inc
and
das
out
cmps
ins
cmc
imul
sub
aaa
cmc
mov
ret
mov
(bad)
div
pop
mov
mov
lock
mov
mov
jno
(bad)
mov
out
(bad)
fadd
fxch
push
push
jb
pushf
jmp
pop
jo
pop
dec
outs
aam
pop
or
xchg
sti
cmp
pop
inc
jecxz
pop
scas
jl
push
jg
xor
xchg
add
(bad)
gs
in
and
xchg
shl
ud2
dec
loopne
jno
push
push
ja
rcr
out
mov
aam
nop
or
loopne
adc
sar
add
daa
sbb
xchg
pop
shl
adc
push
repz
gs
push
ja
cmp
aas
not
mov
xchg
or
(bad)
jecxz
stos
add
iret
stos
outs
js
dec
adc
push
xor
xor
adc
not
sahf
in
loopne
rol
call
xor
xchg
and
push
xor
lea
cwde
mov
or
ins
out
mov
cld
inc
and
push
jbe
arpl
ud2
das
aam
mov
std
pop
mov
fsubr
je
je
adc
mov
(bad)
xchg
icebp
jg
mov
movs
lods
aas
loop
cwde
out
retf
add
pushf
mov
mul
test
es
sbb
jne
inc
push
lds
lods
int
or
xor
aas
rcl
sbb
cwde
xor
gs
xchg
mov
je
scas
mov
mov
pop
sub
fnsave
mov
pop
inc
das
loop
xor
push
in
inc
jmp
pop
and
or
movs
add
jo
in
cmps
dec
sbb
popf
call
or
(bad)
mov
add
popa
pop
adc
sub
stos
sub
dec
repnz
out
lock
(bad)
pop
pop
jmp
lods
jne
jae
sbb
(bad)
std
and
in
jae
lods
jecxz
and
outs
pop
sub
fst
dec
popf
cmp
repnz
cwde
cmc
aad
loopne
(bad)
mov
mov
pop
dec
push
cmp
jno
and
popa
xor
and
loop
stos
pop
cmp
repz
(bad)
out
push
js
fidiv
arpl
mul
push
sbb
jl
or
xor
mov
fild
test
xor
pushf
sub
mov
inc
fst
pop
add
sub
cmc
test
mov
rcl
loope
(bad)
jae
shl
clc
enter
loopne
jp
cli
push
fs
dec
fs
(bad)
lock
inc
stos
fistp
adc
sbb
mov
retf
in
jnp
push
les
setno
push
je
les
repnz
sub
add
mov
shl
inc
ficom
ins
test
fsubr
rcr
je
or
push
nop
ds
push
out
sbb
pop
cmp
xchg
inc
mov
push
ds
cmps
popa
and
aas
xchg
pop
not
xchg
sbb
inc
in
(bad)
sbb
cmp
sub
imul
sbb
add
ss
cs
movs
icebp
idiv
inc
(bad)
xchg
enter
int
sub
cmp
xlat
sub
mov
add
mov
cs
sub
rcl
push
mov
sahf
jno
popf
xor
mov
pusha
xor
add
neg
mov
or
imul
mov
fcomip
or
rcl
leave
iret
pop
cwde
mov
imul
cmp
and
jne
data16
push
pop
xor
sbb
or
lock
cmc
addr16
loope
imul
and
mov
iret
mov
test
mov
sbb
test
mov
cmc
cmp
mov
sbb
test
in
and
and
or
cmp
sbb
jge
cwde
cwde
jge
cmc
adc
loope
add
dec
imul
or
or
call
xchg
jo
(bad)
push
cmp
dec
xchg
pop
add
mov
sub
mov
jmp
out
in
add
adc
pop
jmp
imul
add
shr
dec
cld
(bad)
stc
(bad)
retf
and
imul
movs
add
xor
mov
call
adc
xchg
cmp
lock
fisttp
mov
and
bound
bnd
sbb
test
xrelease
cmps
cs
push
jge
adc
(bad)
je
dec
cmp
xor
scas
xor
hlt
sbb
nop
cmp
sub
or
les
mov
sti
xchg
pop
pop
jmp
scas
dec
ds
cwde
fistp
mov
rcl
dec
retf
push
arpl
aaa
rcl
ficom
add
or
xor
add
call
ret
dec
sub
cld
aam
leave
or
mov
call
aam
mov
inc
cmc
xor
push
sbb
xchg
arpl
adc
lea
mov
push
ja
xchg
inc
int
jns
mov
neg
and
aad
or
(bad)
(bad)
sti
jge
xchg
lods
mov
pop
fwait
xor
test
fsub
xchg
mov
(bad)
jge
add
dec
jbe
inc
cmps
ficomp
xor
popf
aam
pop
mov
pop
sbb
out
jae
jmp
sbb
sub
adc
xchg
in
(bad)
shl
stos
xor
cmps
adc
lods
sub
jp
shl
stos
data16
jge
aam
sahf
mov
iret
repz
inc
out
lods
sub
je
pop
sub
sub
pop
inc
cwde
jmp
dec
sbb
(bad)
adc
fsub
or
mov
adc
inc
mov
xor
fwait
rol
imul
nop
sub
lods
mov
stos
pusha
inc
push
push
mov
push
ret
and
enter
add
mov
push
push
les
jp
pop
xchg
enter
dec
stc
or
test
or
aas
sahf
pop
ins
or
pop
clc
add
pop
inc
test
pop
push
cli
xor
dec
xchg
xor
out
mov
or
cmc
inc
mov
and
(bad)
sub
push
push
daa
mov
sbb
push
ds
or
ror
pop
mov
jp
pop
daa
xchg
mov
imul
pop
jns
int
imul
xchg
fist
dec
cmp
fwait
sbb
sub
cmps
sub
inc
in
and
sbb
(bad)
sbb
fstp
ficom
call
lea
sbb
gs
add
push
lock
inc
xor
mov
leave
xlat
(bad)
ficom
sahf
int3
push
inc
jmp
std
out
in
cmc
cld
jns
sub
mov
dec
lods
cmp
das
pop
(bad)
xor
cmc
out
outs
cmp
test
lods
push
push
sub
ss
retf
xor
inc
mov
ror
push
bound
inc
xchg
int
fucomp
cmp
pop
and
push
cmps
fs
dec
mov
outs
sub
loopne
fwait
xor
inc
mov
pop
outs
xor
mov
retf
mov
mov
bound
mov
mov
ja
sti
mov
out
js
jo
adc
adc
cdq
push
mov
mov
jecxz
cmp
pop
inc
stos
into
repz
mov
xor
fwait
push
jno
pop
push
xchg
les
sbb
repnz
xor
mov
mov
push
mov
sbb
out
sub
outs
push
sahf
nop
sahf
(bad)
retf
pusha
in
adc
hlt
out
xchg
lods
test
xor
cld
push
das
sub
bound
cmp
stos
(bad)
cmp
dec
and
cli
ins
ret
add
cld
repz
test
shl
mov
push
test
add
add
aad
imul
sub
mov
fdivr
movs
imul
mov
jle
sub
or
loop
xchg
push
cdq
dec
push
pop
fwait
mov
je
rcl
jmp
adc
add
mov
xor
mov
jbe
add
xchg
mov
scas
fld
sbb
jg
push
pop
out
call
pop
fwait
js
dec
pop
popa
pop
sub
adc
test
call
aas
enter
rcr
stos
and
ja
mov
(bad)
lea
cmp
adc
mov
inc
jecxz
fbld
js
jno
stos
outs
and
xchg
fcomip
dec
hlt
or
aaa
pop
retf
mov
mov
ins
imul
repz
stos
mov
mov
pusha
outs
in
sub
div
sub
movs
push
adc
scas
rol
lea
dec
lods
pop
fimul
sub
jno
and
pop
ins
cmp
mov
xchg
push
jae
or
ss
dec
(bad)
dec
das
adc
mov
mov
mov
and
mov
loope
xor
mov
out
mov
ins
mov
test
out
pop
jecxz
or
push
mov
pop
inc
sahf
jo
and
inc
ins
scas
xchg
jno
xchg
adc
mov
dec
sbb
shr
cwde
jae
popa
and
jp
adc
or
jno
sbb
lods
adc
sbb
(bad)
jns
call
push
in
cli
sub
out
test
mov
xchg
pop
and
fild
cmps
mov
inc
fs
inc
or
cmp
dec
mov
aam
cmp
in
push
repnz
mov
movs
test
mov
xor
test
mov
xchg
pop
loop
xor
aad
sbb
(bad)
pop
pop
inc
jae
pop
mov
pslld
out
pop
inc
adc
jae
mov
mov
dec
mov
mov
into
xchg
addr16
sbb
loope
out
sub
dec
ret
jmp
cmp
mov
push
into
aad
bound
test
mov
(bad)
loopne
bound
dec
jg
fldenv
test
dec
sbb
aam
repz
ret
or
and
int3
nop
or
xchg
jbe
and
mov
pop
add
icebp
(bad)
cwde
lds
cmp
test
cld
jb
enter
mov
fwait
leave
push
addr16
jb
cmc
sub
inc
retf
into
pop
or
xchg
shl
inc
sub
loope
ss
mov
cli
xor
jne
xor
cmps
out
sbb
xchg
xchg
mov
xor
adc
pop
sub
inc
sti
bound
aaa
shl
jnp
or
das
and
xchg
mov
stos
and
pop
jbe
add
mov
dec
cs
sub
cmp
mov
sub
in
(bad)
mov
jb
arpl
jo
lahf
sbb
mov
xor
sbb
(bad)
and
push
(bad)
xchg
dec
push
push
sbb
outs
das
mov
xchg
addr16
and
xor
add
or
mov
add
xchg
sub
sbb
arpl
sub
and
pop
mov
inc
hlt
mov
add
(bad)
dec
and
popa
mov
cmps
jne
mov
ja
sub
int
jg
pop
popa
outs
jl
mov
push
xor
movs
xor
mov
mov
int
movs
pmaddwd
shld
lds
xor
push
fdiv
scas
in
pop
stos
dec
push
scas
clc
mov
xchg
fsub
and
ds
mov
and
jmp
or
iret
cli
addr16
xchg
dec
and
sub
inc
dec
inc
pop
push
pop
inc
cmc
and
and
xchg
add
mov
add
cdq
jne
test
movs
inc
popf
xchg
xchg
pop
fs
and
scas
inc
jno
leave
loope
shr
push
jp
mov
fsubr
or
lods
and
mov
jb
mov
mov
sti
mov
iret
xor
sub
push
mov
fisubr
sbb
ins
mov
push
and
mov
mov
out
scas
or
into
mov
inc
inc
fisttp
imul
(bad)
mov
pop
mul
imul
dec
pop
lods
in
packsswb
mov
fwait
mov
mov
mov
and
add
pop
call
(bad)
in
call
mov
dec
pop
jp
pop
(bad)
push
(bad)
cmp
je
das
dec
rcl
std
fistp
fisttp
push
int
pop
mov
inc
cmc
fild
inc
inc
int3
dec
sub
adc
mov
inc
pop
pop
mov
addr16
movs
retf
in
sbb
push
dec
or
scas
mov
(bad)
push
loopne
mov
iret
inc
xor
je
cwde
inc
mov
and
add
pusha
xor
pop
or
xchg
push
fistp
add
sub
jp
sub
sub
jmp
mov
or
jmp
xchg
sbb
sahf
push
cs
dec
loope
rcr
ins
test
inc
add
xor
or
out
shr
into
stos
mov
sti
mov
jp
dec
mov
icebp
mov
loope
inc
daa
jp
add
dec
in
or
fpatan
pop
jae
xor
je
push
fcmovb
das
jb
aaa
xor
xchg
jne
clc
outs
je
adc
sbb
push
pop
dec
enter
jo
add
xor
mov
(bad)
pop
imul
dec
lds
test
add
(bad)
popa
or
sbb
sbb
xor
dec
xchg
icebp
addr16
cmp
in
fwait
and
shl
dec
and
aad
push
mov
pop
push
outs
mov
pop
adc
inc
mov
dec
xchg
lods
pop
cmps
iret
test
push
adc
bound
inc
xchg
xor
jno
mov
mov
shr
loope
fidivr
adc
sub
pop
test
gs
xlat
iret
enter
jl
cwde
mov
cmp
jns
inc
xchg
fs
aad
adc
mov
ror
mov
fidiv
add
and
push
aaa
out
lods
sbb
adc
inc
and
lock
mov
popa
jns
shl
sar
ror
lds
mov
jo
(bad)
xor
shl
sbb
jecxz
repz
xchg
fdivrp
inc
mov
leave
loope
mov
jecxz
push
sbb
fsubr
(bad)
pusha
aaa
rcr
ret
jmp
ja
jns
call
xor
push
mov
xchg
cld
mov
gs
inc
loopne
adc
and
mov
pop
imul
lds
and
cmp
sbb
push
icebp
and
out
inc
adc
mov
pop
dec
adc
and
mov
cwde
adc
cmp
jmp
fwait
push
das
mov
xchg
rcl
les
aas
add
adc
dec
cmp
or
movs
mov
xchg
scas
adc
jecxz
push
(bad)
dec
in
mov
pop
popf
popa
call
mov
push
ds
jb
cmps
sub
and
out
jmp
sub
jne
mov
pushf
stc
adc
xor
fisttp
inc
pop
sbb
ins
cli
push
pop
retf
(bad)
hlt
mov
dec
(bad)
call
into
scas
inc
or
jle
ins
mov
pop
jmp
pop
jne
push
mov
test
ins
mov
dec
mov
mov
mov
dec
jo
(bad)
lock
jle
mov
scas
inc
push
ds
mov
pop
jmp
btr
dec
mov
cmp
pop
loopne
adc
jnp
sbb
sti
mov
test
xor
retf
(bad)
pop
lock
(bad)
ins
xlat
dec
outs
cmp
pop
retf
fiadd
fnstcw
mov
mov
aam
xor
cmps
xor
adc
xchg
dec
mov
loopne
adc
add
pushf
mov
adc
dec
scas
jne
aas
xchg
out
test
lea
mov
jmp
out
inc
fwait
in
retw
call
call
xor
pusha
fsubr
ja
inc
sbb
fucomi
sub
xchg
or
nop
leave
mov
icebp
ss
ss
jmp
and
shl
cmps
jno
xchg
cmp
std
jl
cmp
data16
inc
mov
mov
pop
pushf
scas
daa
mov
mov
dec
cmp
shl
or
cmp
push
icebp
add
push
in
jl
xor
lods
cmp
fild
aad
retfw
dec
cmp
retf
mov
test
aad
xchg
(bad)
sub
and
mov
mov
pop
mov
push
push
xchg
sbb
mov
dec
mov
xor
inc
daa
clc
sahf
aam
dec
dec
and
stc
jl
frstor
das
dec
pop
bound
mov
and
lods
mov
imul
loope
mov
nop
sar
test
(bad)
add
push
or
not
xchg
adc
int3
rol
out
inc
add
lock
mov
mov
retf
daa
sbb
jl
dec
fdiv
push
data16
xchg
jp
pop
je
pop
mov
ret
sbb
push
add
dec
movs
and
iret
out
outs
out
inc
leave
sbb
adc
test
add
test
lock
xor
pop
aaa
adc
repnz
frstor
movs
(bad)
(bad)
sbb
push
inc
jge
(bad)
sar
sbb
lods
test
jae
stos
fcom
push
pop
pop
mov
int3
mov
adc
dec
add
jle
mov
cdq
sbb
(bad)
jg
mov
add
push
out
jecxz
out
xor
cmps
(bad)
cmc
aam
cwde
pop
push
sub
icebp
jo
fld
pop
stos
mov
inc
and
sub
int3
sar
ja
lods
dec
sub
ds
xlat
ss
push
mov
xchg
imul
push
call
xchg
xchg
lahf
lds
sbb
popa
or
xor
(bad)
dec
cli
or
outs
leave
xchg
mov
repz
or
mov
push
cmp
cmp
test
js
xor
lods
pop
adc
or
cmp
inc
mov
cmp
scas
or
ss
lock
mov
sahf
fs
sub
movs
es
fs
movs
mov
mov
ins
jle
mov
and
sahf
push
and
in
fcomi
sub
shl
xor
dec
and
std
outs
gs
jmp
inc
rcr
test
sbb
fwait
xchg
aam
sbb
ror
push
jno
push
pop
sub
mov
das
pop
ror
add
lea
sub
sbb
mov
and
mov
test
push
inc
add
xor
mov
adc
je
rcr
adc
cmp
or
cmp
mov
jg
je
adc
mov
pushf
iret
pop
(bad)
push
popf
add
addr16
sti
push
mov
stos
pop
xor
cmp
clc
jns
call
loopne
(bad)
or
mov
jmp
popa
out
cmp
into
lods
popa
sub
fmul
out
xor
add
mov
int
jmp
pop
jbe
aam
adc
sub
jne
fsub
out
rcl
enter
dec
xor
push
xchg
dec
cwde
int3
loop
cmp
ins
loopne
fwait
arpl
test
fcomip
sbb
stos
outs
sub
js
adc
sahf
je
inc
int3
jl
adc
imul
or
or
ds
mov
and
or
(bad)
push
or
and
sbb
mov
xor
fwait
cwde
cmp
cwde
mov
and
call
sbb
mov
push
xchg
imul
fxch
mov
cmp
test
loopne
(bad)
nop
xor
rcl
mov
adc
sbb
push
ds
jmp
xor
mov
cs
add
mov
pusha
cmp
cmp
xor
scas
stc
jno
push
or
push
xor
add
dec
jb
(bad)
fild
and
push
arpl
add
mov
inc
pop
adc
pop
pop
adc
addr16
xchg
mov
mov
mov
div
hlt
fld
je
cld
add
dec
rcr
sub
out
ficom
mul
sub
shr
sub
fist
mov
loope
imul
jg
add
pop
in
pop
scas
xor
loop
in
je
jle
jmp
add
and
xchg
mov
(bad)
jl
ror
pop
jmp
push
cmp
mov
cmps
(bad)
jnp
push
and
ins
(bad)
out
and
push
ja
in
pop
popa
leave
fs
test
pop
iret
pop
inc
mov
aaa
ret
sbb
movs
aam
les
or
jmp
je
push
dec
jecxz
loopne
aaa
gs
(bad)
add
imul
mov
(bad)
add
sbb
cmp
inc
and
jmp
fild
out
sub
not
out
cmc
or
ins
jae
ror
dec
mov
jle
ins
ins
xor
adc
rol
cs
ret
cmp
lea
hlt
lahf
push
or
xchg
mov
inc
xchg
push
mov
sbb
inc
jbe
imul
inc
mov
pop
fwait
das
sub
add
loope
ret
pop
loopne
or
aaa
das
pop
lea
(bad)
mov
std
sbb
dec
jbe
test
or
test
repz
sub
lahf
xchg
sub
pop
push
into
mov
push
adc
aam
add
stos
pop
xor
jbe
ja
loopne
inc
std
adc
loop
fisttp
xchg
pop
dec
xor
push
ror
arpl
sbb
retf
fucomip
adc
inc
stc
fucom
push
dec
mov
cmp
inc
inc
sub
(bad)
int
and
lea
sub
mov
cmps
fs
outs
dec
and
adc
adc
and
mov
pop
scas
out
div
out
inc
cmp
xchg
fwait
adc
mov
nop
jne
pop
enter
mov
adc
jmp
iret
jmp
xor
dec
test
push
sbb
push
mov
mov
fnstenv
xor
sub
or
jno
imul
adc
shl
lods
fiadd
fs
lods
mov
mov
mov
rol
leave
loop
into
mov
jmp
jg
sbb
mov
ins
sub
push
mov
pop
clc
sahf
xchg
xor
popa
scas
stos
addr16
dec
popa
adc
test
sti
sti
mov
add
mov
sar
xor
xchg
ret
jae
ins
dec
pushf
stos
dec
retf
push
aad
push
inc
stos
jmp
xchg
nop
psrlw
popa
fmul
shl
mov
or
dec
data16
pop
ins
mov
mov
mov
ret
lahf
push
cmp
jno
jns
push
jmp
mov
adc
jmp
mov
dec
jne
mov
pop
test
and
call
adc
(bad)
call
in
mov
mov
sub
pop
mov
cmp
and
gs
xor
mov
push
popa
sbb
cmp
add
add
adc
ror
cli
mov
mov
add
aas
push
pop
(bad)
mov
(bad)
hlt
outs
xchg
in
cmp
pop
aas
imul
fdivp
std
rol
(bad)
push
inc
sbb
add
adc
aam
or
imul
outs
out
add
shl
push
adc
cmc
jne
adc
jns
sbb
enter
pop
ins
mov
dec
call
mov
int3
mov
das
sti
repz
add
xor
dec
inc
jmp
jb
sbb
nop
int
icebp
dec
cmps
(bad)
mov
popf
mov
cmp
pop
mov
out
xchg
jno
add
xchg
into
mov
mov
push
pop
dec
mov
mov
dec
ds
out
ds
mov
lods
pusha
out
into
mov
sub
retf
lods
sub
cdq
sbb
rol
xor
sar
out
fcomp
into
sub
dec
sub
and
(bad)
das
mov
stc
jmp
int
xor
or
test
jne
inc
add
fcomp
cmp
test
adc
loopne
mov
mov
ret
sbb
ja
pop
pusha
loopne
jl
mov
dec
test
aam
xor
rcr
mov
icebp
out
sub
dec
std
fsub
jo
outs
sbb
cld
ins
sar
sbb
fs
int
(bad)
rcl
bound
into
pop
cmc
scas
jmp
jmp
or
ins
call
and
dec
and
lock
repnz
adc
cdq
adc
(bad)
sahf
jno
xchg
popf
dec
test
add
pop
sbb
cs
pop
xor
addr16
sub
mov
imul
call
jo
mov
push
xlat
loop
fst
(bad)
xchg
out
add
add
daa
aam
inc
xchg
dec
in
das
fild
sbb
xor
push
arpl
inc
or
lods
pop
mov
fdivr
adc
pushf
aaa
jmp
clc
daa
gs
xchg
cdq
mov
and
add
imul
loopne
cwde
in
mov
fnstenv
in
cmp
out
out
jmp
loope
mov
or
sbb
scas
aam
cmp
add
or
fld
xor
mov
ds
rcr
mov
loope
aaa
mov
xor
sbb
add
or
mov
adc
int
mov
inc
mov
sub
xor
jmp
dec
bound
ret
cmp
mov
fldenv
lods
add
mov
jns
out
or
repz
(bad)
push
lods
loope
dec
sahf
stos
jmp
and
out
mov
adc
xchg
mov
fsub
jge
mov
jb
mov
fwait
pusha
in
jb
cli
fstp
and
sbb
pop
fdivr
mov
inc
es
cwde
movs
test
pop
sbb
(bad)
lock
mov
sbb
mov
or
ja
lods
into
outs
popf
(bad)
fld
sub
std
cli
inc
xor
cmp
jp
aas
shr
aas
ds
xor
repz
in
push
jbe
fadd
stos
jns
test
jno
xchg
gs
ret
pop
jmp
mov
jne
stc
xlat
outs
cmp
in
adc
inc
jmp
cmp
addr16
(bad)
jmp
fisub
pop
xor
xor
cmp
or
call
enter
cmp
nop
inc
popf
gs
pop
mov
xlat
sub
inc
in
or
(bad)
movs
sbb
and
pop
out
lea
mov
retf
stos
cli
push
pop
mov
cwde
adc
add
ja
jne
mov
leave
pop
pushf
aaa
test
mov
div
or
sub
mov
dec
mov
push
mov
mov
inc
pop
test
mov
pop
in
sbb
shr
(bad)
sub
add
test
cwde
daa
pop
test
out
popf
sbb
xchg
inc
push
mov
cmp
push
sbb
mov
xchg
stos
mov
je
inc
adc
push
ficomp
pop
in
popa
adc
dec
xchg
call
cmp
xor
push
push
inc
jmp
in
retf
ins
mov
das
xor
dec
xchg
pop
mov
push
jbe
hlt
dec
mov
aad
dec
fwait
outs
out
xor
cmp
das
push
push
mov
cmp
xchg
inc
sar
mov
fcom
dec
pop
repz
and
es
mov
mov
fld
arpl
cs
sub
imul
push
inc
xor
in
sub
xchg
sar
cmp
in
jmp
cmp
retf
push
push
call
movs
dec
aad
sbb
inc
sti
xor
cs
out
scas
inc
jnp
pop
inc
cmp
add
xchg
retf
push
stos
dec
jmp
nop
int
xchg
pop
jmp
lahf
xchg
lds
xor
mov
out
sti
mov
dec
push
sub
pop
(bad)
dec
out
fdivr
and
stos
ins
shl
fild
mov
sbb
mov
mov
aad
cmp
jb
sbb
test
mov
lods
pop
lods
jmp
shl
adc
call
out
cld
xchg
or
out
sub
js
int3
jno
cmp
pop
(bad)
sub
mov
call
hlt
fst
shl
repnz
iret
out
fucomp
jle
dec
push
cmps
in
xor
call
and
arpl
xchg
sub
mov
sbb
fsub
mul
je
popf
fs
xchg
adc
mov
or
fisub
adc
or
test
retf
mov
scas
inc
mov
jp
rcl
aaa
jmp
push
aaa
test
scas
push
sar
stos
hlt
jmp
or
js
mov
inc
jecxz
or
(bad)
fidiv
mov
dec
retf
dec
adc
mov
int3
xchg
retf
hlt
or
or
dec
xchg
fneni(8087
hlt
std
and
dec
dec
mov
leave
test
xchg
xor
push
xchg
pop
mov
das
call
and
fisubr
jmp
mov
cmp
xchg
ret
xor
inc
xor
ins
xor
int
cld
test
mov
jmp
in
mov
jns
adc
clc
ja
scas
ficom
or
outs
xchg
inc
fmul
scas
add
push
int
loopne
jmp
(bad)
and
imul
aad
ds
outs
xor
js
pop
push
cmc
scas
inc
fdivr
jp
clc
mov
and
repnz
dec
in
xlat
fisttp
nop
and
adc
cmps
ficom
push
std
in
cmp
aam
retf
sub
int3
iret
mov
scas
push
cmp
in
push
pop
add
mov
or
out
push
or
mov
jmp
xchg
and
mov
mov
jns
retw
or
push
mov
fnstcw
sub
clc
loope
movs
sbb
stos
and
leave
in
add
neg
mov
or
add
ror
stos
push
mov
in
stos
inc
popf
jecxz
cmc
rcl
and
inc
shl
aaa
dec
xor
in
push
xchg
inc
cs
pushf
jae
mov
ret
push
into
or
ficom
adc
sbb
pushf
stos
fild
xlat
fmul
aaa
mov
out
mov
fdiv
sbb
mov
lods
push
and
enter
pop
inc
sti
xor
inc
scas
inc
xor
cmc
sbb
push
out
and
push
fidivr
cmps
jmp
cmp
mov
xor
mov
ret
cdq
sbb
jb
ins
scas
rcl
inc
or
jp
sbb
(bad)
cmps
inc
fs
mov
call
inc
sub
in
inc
mov
jb
sub
xor
test
std
test
and
pop
fnstenv
adc
mov
and
dec
fsubr
sbb
movs
scas
stc
cdq
stos
ss
jge
push
sub
and
leave
ret
div
aam
mov
push
xor
xlat
stc
loope
repnz
sbb
pop
pop
aas
jl
jecxz
push
repnz
add
fisttp
por
adc
outs
test
pushf
outs
mov
ins
inc
push
retf
fcom
imul
pop
mov
int3
shl
(bad)
std
pop
adc
mov
aas
aam
hlt
xor
mov
add
dec
mov
push
xor
ret
fsub
into
div
inc
and
inc
and
sub
push
clc
sbb
jp
test
ror
mul
test
mov
sar
xchg
call
pop
jmp
xchg
lahf
repnz
sub
push
jp
test
test
mov
aas
jmp
or
sbb
test
adc
jp
jo
pop
xchg
jbe
cmp
and
(bad)
sbb
test
sbb
cmp
jnp
inc
ffree
or
mov
add
hlt
add
clc
sub
mov
or
repz
xor
xchg
or
sahf
adc
and
mov
mov
adc
scas
data16
dec
inc
inc
(bad)
push
sub
leave
loope
aas
fnstenv
jnp
mov
imul
(bad)
arpl
dec
movs
ds
loope
das
addr16
stos
adc
push
stc
or
(bad)
adc
and
sbb
test
push
sti
sbb
mov
sbb
mov
loopne
int3
out
push
pop
fimul
imul
iret
lods
push
push
lock
movs
xlat
in
shl
dec
aas
mov
cli
js
les
cmp
lock
or
sti
mov
sti
cmp
das
mov
xchg
pop
cmc
jne
leave
cs
jbe
push
push
je
pop
adc
xchg
or
cmp
push
sbb
sbb
add
push
pushf
leave
dec
pop
sbb
aad
and
ror
jnp
imul
or
sti
push
mov
push
sub
push
mov
pop
cmp
mov
inc
out
fadd
sahf
push
fistp
lods
popf
dec
xor
jl
cmp
jbe
xchg
dec
inc
sub
push
aas
int
lea
test
pop
pop
xor
sub
push
pop
imul
lods
stos
xchg
mov
mov
out
scas
push
and
sub
outs
lock
push
mov
aas
je
mov
ins
and
inc
mov
pop
test
mov
aas
data16
dec
(bad)
push
movs
pop
movs
aad
cmp
ret
mov
(bad)
xor
in
cmp
push
imul
push
push
or
imul
pop
and
xor
mov
pop
retf
sub
dec
cwde
sbb
cmp
add
or
aam
and
pop
std
cmp
jne
dec
fwait
cmp
and
retf
shl
bound
sub
mov
jno
iret
(bad)
loope
mov
adc
ret
retf
pop
icebp
inc
ins
xchg
push
or
aam
pop
call
push
sbb
(bad)
add
fiadd
adc
call
inc
push
scas
aad
xchg
dec
scas
mov
or
pushf
imul
pop
gs
jae
nop
mov
jg
out
aad
sub
jmp
jmp
cmp
je
(bad)
mov
push
push
xchg
xor
inc
(bad)
xchg
mov
sub
cmc
sbb
xor
aam
ja
daa
push
hlt
inc
xchg
movs
cmps
ins
test
cmc
mov
jecxz
out
js
repz
mov
mov
sbb
fisttp
jne
stc
fld
dec
mov
std
jnp
mov
jl
mov
das
mov
idiv
xchg
mov
hlt
imul
push
fist
dec
in
in
mov
jmp
mov
cmps
aad
or
mov
push
das
sahf
scas
cmp
shr
mov
cmps
pop
stos
mov
xor
xchg
sbb
(bad)
push
mov
shl
xchg
add
(bad)
pop
ins
xor
jmp
das
sub
mov
push
pusha
push
sub
push
mov
push
call
icebp
mov
and
pop
fst
ins
jmp
popa
lock
in
or
mov
popa
pop
leave
je
inc
jns
push
cli
jno
push
jmp
inc
imul
mov
bound
(bad)
js
gs
mov
(bad)
sbb
stos
push
or
mov
je
xchg
xor
sbb
dec
fcmovnbe
jl
test
jecxz
das
jo
pop
shr
jns
sub
mov
or
fxch
inc
mov
in
sub
or
xor
push
jmp
call
je
dec
pop
or
sbb
push
xchg
pop
add
fmul
dec
dec
dec
call
add
cmc
and
ins
push
inc
jne
mov
hlt
or
adc
mov
inc
or
imul
loopne
fdivr
fstp
adc
pop
inc
outs
pop
mov
or
std
pop
clc
loop
fsub
xor
scas
jmp
out
mov
aas
hlt
mov
sbb
div
sar
repz
mov
and
ja
outs
xchg
cmps
mov
cmp
jp
addr16
fcomi
push
inc
loop
pop
mov
(bad)
mov
test
cmp
(bad)
out
push
stc
mov
ret
mov
gs
inc
push
addr16
fidivr
aaa
adc
and
push
loop
lds
push
repnz
sub
jns
mov
call
lahf
(bad)
jle
push
movs
emms
cmps
clc
lea
ins
add
dec
aad
mov
cdq
sub
call
adc
mov
icebp
xchg
sub
aad
fcom
sbb
pop
xor
(bad)
sub
std
adc
clc
cmp
push
ja
pop
imul
hlt
je
stc
or
je
pop
test
mov
cmp
mov
arpl
or
xchg
mov
imul
xor
ss
add
mov
lds
push
jo
or
int
movs
or
int3
sbb
xchg
xchg
pushf
push
mov
call
jnp
shl
neg
into
jno
fistp
mov
push
mov
push
jl
sub
sub
sub
sbb
std
fstp
push
sbb
out
leave
lock
retf
cvtps2pd
les
rcr
test
out
mov
and
and
mov
xchg
xor
sub
mov
retf
lea
sbb
mov
out
jl
(bad)
out
jge
imul
jle
mov
adc
pop
or
jmp
pop
xchg
fwait
je
aam
loop
enter
out
not
je
scas
push
or
les
mov
jmp
xchg
sub
jb
movs
jecxz
shl
test
jne
(bad)
neg
repnz
sub
jmp
(bad)
test
out
xchg
jg
jb
les
sub
inc
pop
std
cli
arpl
movs
fs
dec
jmp
and
ins
fst
and
out
adc
push
int
out
gs
mov
(bad)
lahf
jno
push
mov
jne
pop
and
push
mov
stos
imul
popa
and
(bad)
push
loopne
sbb
xchg
mov
sbb
adc
push
aad
inc
ficom
push
or
fisubr
dec
cmp
pop
xchg
sub
fwait
jecxz
or
fmul
gs
xchg
test
addr16
cmp
xor
adc
lods
fadd
and
int
(bad)
mov
adc
dec
scas
out
mov
repz
idiv
jns
outs
lods
pop
inc
fs
fistp
jno
cmp
xor
add
das
test
je
sbb
idiv
(bad)
cmp
xchg
sahf
nop
jne
sbb
inc
pop
mov
test
cdq
dec
movs
cmp
out
in
dec
ja
nop
sub
pusha
(bad)
push
sub
rol
mov
outs
jne
jg
stos
xchg
dec
sbb
popf
mov
mov
pusha
nop
stos
lahf
fld
and
in
outs
fst
add
in
pop
xchg
stos
sbb
cmps
(bad)
lea
(bad)
mov
sbb
mov
call
outs
fisub
popa
or
je
pop
scas
mov
mov
aam
push
mov
not
ss
in
hlt
repz
and
jp
xor
scas
enter
cmp
aaa
xor
dec
cmp
push
fs
push
mov
or
in
inc
dec
or
add
sbb
mov
loope
mov
jo
(bad)
pop
push
test
pop
xchg
sbb
retf
cmp
test
arpl
push
ret
mov
daa
in
sbb
dec
push
sbb
(bad)
fcom
mov
dec
pushaw
shl
cmp
pop
jge
sub
jbe
retf
jo
inc
stc
jae
outs
jmp
inc
dec
cmp
in
mov
push
push
cmp
cmp
xchg
popf
popa
dec
ins
(bad)
ret
test
pop
pop
add
or
xor
xchg
xchg
aad
outs
inc
pushf
sahf
adc
(bad)
pop
cs
mov
(bad)
sbb
mov
xor
and
pop
add
push
xor
icebp
sub
and
into
loopne
ss
xor
or
sbb
sbb
je
xchg
mov
sbb
xor
mov
dec
adc
in
pop
sub
push
and
and
pop
in
(bad)
xor
imul
jp
or
mov
inc
in
jle
jno
sbb
ins
mov
pop
or
scas
movs
test
inc
dec
xor
test
scas
ret
leave
jmp
jl
int
xchg
imul
iret
adc
mov
cmp
out
pushf
out
retf
dec
jbe
sub
dec
xchg
add
int
shr
pop
in
add
call
iret
inc
sbb
and
sub
mov
pop
cmp
or
int3
or
into
enter
pop
pop
xor
(bad)
mov
fwait
scas
ds
pop
add
ret
int3
ins
arpl
pop
or
and
mov
jnp
ret
sub
fsubr
or
(bad)
mul
pop
sub
cmc
inc
div
in
fldcw
fdiv
ror
xchg
ds
jmp
shl
adc
in
mov
test
mov
mov
push
mov
div
js
dec
sbb
cmp
dec
mov
aaa
or
inc
pop
jg
mov
rcr
pushf
push
push
and
pop
or
fst
dec
retf
xlat
push
push
xor
or
dec
in
int
mov
pushf
mov
inc
loope
fstp
sbb
and
aas
mov
leave
mov
rcl
mov
repnz
out
ins
adc
xor
loopne
inc
int3
out
ins
not
aaa
clc
addr16
ficomp
xchg
addr16
(bad)
sbb
out
cli
je
fstp
dec
jmp
push
(bad)
rcr
iret
pop
sub
cs
add
in
pop
out
pop
xor
int
or
xchg
xchg
jns
sbb
sbb
xchg
cmp
cmp
nop
push
jb
jge
int3
hlt
dec
movs
mov
inc
pop
fidiv
cld
fsubp
push
push
dec
jg
push
add
ret
or
add
(bad)
or
adc
and
push
loop
pop
pop
punpckldq
mov
loopne
sbb
jae
fiadd
movs
es
fldenv
ret
jp
sbb
test
daa
iret
push
addr16
sub
push
inc
jb
mov
out
js
jno
push
popf
push
xchg
shr
mov
ja
push
add
scas
xchg
pop
xchg
fiadd
mov
mov
mov
add
add
adc
addr16
mov
mov
cmps
cdq
pop
jmp
lock
stos
imul
dec
mov
ja
int
push
clc
ret
pop
ins
or
dec
fs
retf
outs
int3
jo
xor
bound
xchg
sbb
xor
jg
clc
movs
out
sbb
xchg
popf
fyl2xp1
cld
test
rcl
int
cmp
pusha
mov
pop
jmp
inc
in
imul
aaa
mov
(bad)
dec
repnz
jo
adc
jmp
bound
fst
push
sbb
sbb
loopne
(bad)
cmp
aad
add
cmp
fisub
cmps
jbe
sbb
sub
xor
inc
sub
push
sti
mov
xchg
fwait
xlat
aad
in
dec
cmp
cmp
idiv
mov
cli
xor
mov
retf
push
add
(bad)
push
add
mov
sbb
jecxz
inc
pop
imul
mov
test
out
(bad)
std
jg
lea
out
lods
mov
pop
(bad)
addr16
xlat
jecxz
gs
add
fstp
rcl
push
mov
(bad)
mov
enter
jne
ja
out
call
ss
push
mov
or
jo
pop
imul
pop
in
imul
sti
sar
enter
mov
aas
fwait
push
mov
fwait
daa
popa
mov
ret
pop
sub
sub
mov
pop
popf
fistp
xchg
sahf
js
fld
daa
adc
cmp
lods
xchg
stc
sbb
xchg
add
push
jnp
jmp
or
sub
arpl
sub
jb
ficom
pop
sbb
in
sbb
mov
sub
aaa
arpl
mov
daa
loope
imul
sahf
or
(bad)
fdivr
inc
(bad)
sbb
loope
mov
ret
pop
and
and
xor
xchg
shr
push
pop
loope
pop
ds
js
xchg
fst
sbb
cmp
sar
lods
les
and
mov
loope
call
inc
sbb
cwde
pop
out
shl
jle
mov
popf
pop
jmp
pop
inc
lahf
rcr
ss
mov
icebp
push
test
mov
lds
xor
cmps
dec
mov
sahf
mov
mov
xchg
jmp
sbb
sub
push
xchg
lea
aas
(bad)
and
fild
(bad)
out
mov
mov
mov
int
icebp
jb
mov
mov
movs
fnstsw
scas
lea
in
pop
out
jne
out
test
in
inc
mov
add
dec
mov
dec
js
pushf
push
rcr
mov
arpl
xchg
in
retf
arpl
test
aam
lods
mov
mov
in
jecxz
add
outs
pop
jbe
pop
mov
bound
push
adc
iret
bound
arpl
adc
push
mov
outs
hlt
or
(bad)
lock
cld
cdq
std
jmp
mov
dec
push
es
or
jl
sahf
mov
mov
outs
jg
adc
pop
jecxz
pop
ds
mov
mov
push
out
add
in
js
sub
gs
js
add
(bad)
repz
mul
add
stc
fstp
adc
das
outs
not
aaa
aaa
and
fwait
sub
mov
push
mov
stc
pop
pop
shl
mov
xchg
ds
mov
mov
xor
dec
je
lods
leave
mov
fidiv
add
adc
je
push
pop
stc
fmul
imul
imul
dec
adc
mov
sub
je
mov
clc
call
(bad)
gs
sbb
push
push
out
xchg
adc
aam
inc
repnz
push
pop
pop
dec
push
mov
xchg
and
std
jns
mov
pop
lea
repnz
stc
add
lock
sub
and
mov
or
ret
movs
xchg
or
push
fsub
iret
add
mov
sub
mov
pop
pop
push
mov
push
dec
test
repz
(bad)
dec
dec
cmps
jbe
fdivr
popa
push
pop
loope
inc
fmulp
push
sub
and
leave
call
push
bound
int
shl
sti
inc
cmp
mov
fcomip
imul
je
jne
sbb
xchg
mov
sbb
sub
cmp
retf
cdq
pusha
mov
and
mov
adc
in
daa
adc
bound
or
das
lock
shl
mov
adc
ja
push
les
outs
addr16
in
push
mov
xchg
inc
sar
gs
test
mov
push
frstor
push
adc
scas
je
mov
mov
ins
mov
xor
jns
pop
mov
inc
and
imul
cmp
push
imul
je
dec
push
fnsave
dec
sar
(bad)
out
xchg
dec
pushf
adc
lods
das
mov
or
sar
shl
movs
xchg
add
sbb
popa
xchg
loopne
lods
lods
xchg
mov
fsubrp
xchg
movs
test
std
xor
cmp
jno
enter
ins
and
into
int3
push
lods
and
sub
inc
adc
lea
add
dec
xor
lods
in
sub
inc
xor
(bad)
jg
mov
xchg
test
rcr
gs
or
outs
fld
and
mov
iret
test
xchg
mov
(bad)
cmp
push
imul
jg
out
or
xor
jge
mov
xor
icebp
adc
pop
loope
and
es
repnz
bound
jae
in
pushf
push
les
fidivr
inc
imul
scas
or
push
sbb
pop
mov
gs
cmp
cmp
push
ret
js
or
mov
push
inc
add
cmp
and
push
adc
xor
sub
aas
(bad)
sbb
ins
mov
mov
or
sbb
ja
(bad)
cmps
add
sub
dec
add
dec
xor
xchg
push
sub
xchg
cmps
inc
and
jno
(bad)
mov
add
pushf
sub
mov
pushf
mov
(bad)
mov
imul
xchg
jnp
cdq
iret
adc
imul
adc
imul
xor
stos
ror
mov
lahf
cwde
aas
call
and
(bad)
fild
nop
jns
fdiv
mov
ret
(bad)
jbe
xor
jge
push
ds
dec
mov
cmps
pop
xor
loopne
add
fidivr
mov
push
xchg
push
pop
xchg
in
out
in
mov
sub
pop
mov
add
jmp
xchg
repz
mov
call
sub
xchg
push
stos
ins
dec
aad
push
stos
mov
fs
nop
add
inc
icebp
xchg
push
or
pop
cmp
inc
popf
pusha
mov
push
add
pop
or
sar
push
das
xchg
test
mov
out
mov
xor
cdq
cmp
xlat
and
push
je
push
xor
pop
adc
and
dec
(bad)
(bad)
rcr
adc
imul
out
stc
or
cmps
adc
in
mov
aaa
jo
fadd
aam
jno
stos
sbb
mov
popa
fsub
mov
lods
sub
cdq
adc
or
mov
lea
test
push
adc
stos
pop
retf
jns
xchg
xchg
rcr
push
push
sahf
mov
daa
xchg
fnsave
or
jg
push
movs
scas
and
imul
fisub
lods
lods
sbb
arpl
test
ret
mov
je
mov
daa
sub
into
sub
(bad)
mov
cmp
(bad)
addr16
ror
jle
rcr
mov
and
and
addr16
push
loopne
dec
mov
les
pushf
inc
sbb
xor
inc
retf
cmp
mov
test
jmp
movs
cmp
jg
lods
jb
ds
outs
add
rol
push
jae
mov
pop
scas
pop
mov
jle
adc
or
movs
aas
or
outs
mov
push
cmps
cmp
and
push
add
mov
pop
mov
adc
add
lods
inc
js
(bad)
fimul
repz
dec
push
mov
test
inc
add
cdq
mov
mov
mov
pop
and
cmp
jbe
push
test
std
mov
inc
out
pop
sbb
mov
sbb
or
les
popa
sub
repz
out
addr16
jmp
or
xchg
out
stos
sbb
in
jae
popa
js
mov
out
dec
or
in
mov
sbb
das
enter
inc
scas
ins
js
mov
test
loope
or
repnz
fsubrp
test
xor
cmc
imul
push
or
into
arpl
fisubr
(bad)
jb
cmp
test
add
retf
or
sub
aam
add
fdiv
mov
jl
pop
in
or
jbe
mov
lods
movs
jge
sbb
cmps
add
inc
xchg
cmps
sub
push
shl
mov
xchg
jno
cdq
mov
push
popf
xchg
cmps
or
sti
mov
nop
inc
sbb
or
mov
dec
adc
xor
and
mov
cmc
sub
popa
adc
call
fwait
add
das
push
xor
in
pop
stc
pop
or
lock
cmp
mov
adc
nop
lahf
adc
cmc
xchg
dec
mov
sub
sbb
mov
bound
test
push
test
xor
push
or
aas
push
and
or
add
sbb
dec
push
lods
fisub
push
stc
adc
test
sbb
fcmove
fst
xor
cmc
lock
loopne
(bad)
push
and
xchg
add
imul
inc
outs
rcl
ror
shr
inc
stc
bound
icebp
sti
scas
sbb
jb
mov
push
or
cmp
test
std
out
xor
or
sbb
jno
inc
push
push
inc
mov
test
push
cmp
cmp
add
xchg
movs
add
inc
push
mov
call
int3
fcmovb
add
mov
dec
pop
mov
ds
popf
dec
icebp
pop
js
adc
out
ins
and
mov
rcr
adc
ret
jnp
sub
mov
popa
push
ret
jbe
cmp
pop
mov
adc
ins
test
jmp
mul
cmps
rcl
cmp
jb
iret
cwde
stos
test
mov
jg
fst
inc
cld
dec
stos
or
outs
shl
mov
aaa
push
dec
dec
loop
stos
and
repz
xchg
and
xchg
stc
adc
(bad)
loopne
retf
dec
sub
cli
fidivr
and
or
cmp
cmps
lock
dec
(bad)
jmp
xchg
mov
and
std
cli
test
shl
push
and
mov
je
pop
cmp
outs
sub
mov
mov
jl
mov
cmp
fistp
adc
and
les
imul
and
ds
jb
dec
outs
addr16
(bad)
aas
jge
lds
mov
out
jmp
je
retf
push
dec
cld
scas
lods
sub
jno
lahf
push
je
pop
mov
cli
push
inc
call
cs
and
push
cmp
loop
scas
pop
cmpxchg
lds
jle
das
int3
pop
mov
daa
das
or
lods
data16
sbb
cs
fdiv
pop
cmp
and
mov
stos
inc
clc
pop
sti
aad
push
push
ins
nop
xor
bound
in
adc
movs
jnp
fsubr
add
sbb
cmp
adc
push
push
mov
loope
addr16
mov
inc
les
rcr
cmp
or
je
inc
inc
rol
adc
xchg
pop
mov
shr
dec
push
in
imul
dec
pop
retf
adc
push
fstp
push
or
xchg
lds
xor
scas
dec
inc
xor
jbe
inc
mov
out
jmp
dec
jmp
push
in
jns
xchg
mov
sbb
sub
hlt
(bad)
pop
mov
mov
xor
push
inc
jno
pop
or
pop
loope
lea
xor
je
or
xor
mov
inc
ins
mov
imul
gs
stc
iret
dec
mov
mov
movs
mov
pop
inc
inc
xchg
in
(bad)
dec
pop
jl
or
xchg
pop
(bad)
fsub
pop
adc
fndisi(8087
jle
test
cs
(bad)
in
push
jno
mov
lahf
in
or
in
mov
mov
aam
cmps
jns
popf
ficom
mov
xor
fs
mov
mov
mov
ins
jmp
xor
xor
jnp
xadd
mov
pop
call
test
xor
xor
(bad)
ins
dec
mov
lds
fnsave
xchg
push
jg
sahf
add
stos
retf
fnstsw
cmp
mov
mov
int3
cmp
xchg
in
dec
(bad)
mov
sbb
outs
pop
(bad)
jg
fcomp
jmp
mov
(bad)
or
scas
cmps
jnp
gs
pop
pop
cmc
mov
lahf
in
movs
popa
jmp
inc
out
mov
(bad)
adc
mov
jmp
sub
retf
jle
cmp
sub
repz
les
aas
int
scas
add
pop
or
jg
pop
dec
shr
sbb
scas
mov
sbb
or
out
inc
cmp
retf
neg
in
inc
cmp
bound
retf
data16
ds
shr
cmps
(bad)
fnstenv
add
mov
stc
sub
les
inc
xor
test
lahf
dec
add
cli
fcom
cmp
pop
cmp
loope
adc
arpl
and
inc
popf
stc
out
daa
fstp
mov
pop
inc
cld
cdq
mov
xlat
dec
sub
push
pop
scas
cmp
icebp
mov
in
sbb
sbb
cmp
and
loope
popa
cmps
pushf
test
fstp
dec
aam
lods
out
dec
sbb
adc
sub
pop
or
cmps
data16
not
inc
sti
lahf
fiadd
inc
jecxz
push
or
cld
popf
cmp
in
inc
adc
pop
dec
add
cmp
jl
jmp
and
sub
lock
int
push
sub
pop
mov
mov
ja
sbb
les
and
fiadd
dec
adc
retf
mov
and
adc
or
fisub
add
jbe
xchg
push
scas
imul
push
inc
cli
xor
jecxz
outs
out
shr
cmp
push
in
jmp
jb
je
mov
cmps
push
jecxz
sar
xor
and
mov
stc
mov
out
in
add
pop
mov
jp
imul
fsub
push
jecxz
cmps
into
pop
fsubr
cmc
xchg
fmul
fs
push
push
sub
cmp
jmp
call
ret
test
out
or
dec
jae
ds
enter
push
mov
jns
js
mov
dec
lea
pop
pop
(bad)
add
sub
fild
adc
mov
fnstsw
sub
daa
stos
pushf
std
and
cmp
imul
or
out
jns
and
mov
jl
mov
(bad)
(bad)
loope
adc
inc
mov
lods
movs
sti
jo
push
mov
pop
cmp
jge
gs
stos
lea
jecxz
sbb
ror
mov
xchg
and
cdq
fst
inc
outs
les
sar
pop
dec
mov
adc
popf
pop
pop
enter
mov
and
call
pop
enter
ret
mov
arpl
pop
sub
push
jmp
pop
adc
jg
inc
jp
(bad)
pusha
jle
pushf
mov
call
scas
lods
jle
cmp
icebp
loopne
add
dec
int3
out
cmps
jg
es
icebp
shr
xchg
iret
out
loop
mov
and
enter
(bad)
sub
xchg
cmp
adc
and
call
push
sub
sub
ja
pop
jmp
int
lods
inc
lahf
xlat
mov
add
imul
jne
std
sub
jecxz
cmp
adc
leave
(bad)
(bad)
(bad)
loopne
pop
imul
je
movs
cwde
jl
inc
cld
std
addr16
jbe
ficom
mov
dec
sub
cmovge
aaa
test
ins
adc
(bad)
jg
jno
or
mov
fcmovbe
int3
dec
pop
test
cwde
add
pop
sahf
jg
inc
pop
dec
adc
jg
jecxz
(bad)
or
xlat
dec
call
in
movs
push
int
ret
mov
ret
sbb
test
in
cmps
ret
pop
mov
or
lds
cmovo
mov
repnz
pop
xor
std
ds
dec
pop
(bad)
pop
inc
pop
mov
inc
clc
cdq
pop
mov
jmp
out
inc
xor
in
std
add
mov
fmul
jbe
push
cmp
xchg
mov
mov
and
mov
stc
push
jge
push
outs
das
aad
xchg
dec
jmp
mov
lods
test
xchg
mov
(bad)
aaa
or
dec
jg
fs
hlt
retf
ret
stos
jo
jg
enterw
xchg
push
lods
xchg
in
xchg
lock
jle
cmc
stos
and
ret
and
jbe
(bad)
(bad)
call
test
rcl
mov
adc
ja
push
push
retf
jp
xchg
inc
bound
add
dec
cmp
xchg
hlt
pop
mov
pop
xchg
mov
les
sub
movs
js
mov
pop
and
pushf
mov
movs
fisttp
ds
jg
xor
or
(bad)
xchg
dec
icebp
or
sahf
fwait
adc
add
shl
jecxz
push
sar
das
call
in
js
cmc
ficom
mov
cmps
xchg
arpl
push
aad
push
not
lods
dec
jg
iret
cmp
or
aas
ret
mov
cs
jmp
dec
sub
dec
movs
cwde
adc
scas
push
ret
sbb
pop
push
and
adc
xchg
shl
ret
and
(bad)
stos
fs
(bad)
out
pop
rcl
adc
je
mov
sub
mov
out
cdq
mov
fdiv
mov
sbb
loop
add
das
hlt
shr
cmps
ja
ror
leave
ret
dec
xor
ins
imul
xchg
or
aam
mov
push
cmp
data16
fistp
cld
adc
push
mov
movs
jp
mov
sahf
mov
inc
loopne
jmp
hlt
call
xor
retf
scas
sti
leave
bound
add
mov
jns
int
and
or
jge
mov
cmp
xor
ret
mov
sar
call
in
ss
or
imul
out
jo
sbb
xor
and
cs
jge
ret
xchg
mov
out
xlat
cmp
fiadd
pop
pop
std
aaa
pop
mov
in
call
mov
std
aad
aas
push
inc
pop
xchg
jb
jecxz
sub
test
std
jecxz
shl
push
enter
push
or
sti
mov
xchg
mov
fwait
popf
retf
cs
cwde
int
pop
cld
pop
cmp
das
ins
mov
push
xor
shl
add
inc
das
mov
sahf
fst
xchg
icebp
sbb
cdq
cdq
int
(bad)
push
mov
cmps
and
retf
jno
(bad)
cmp
jae
in
ret
cld
lock
sub
mov
dec
xchg
mov
sbb
cs
scas
(bad)
push
add
pop
adc
js
jno
int3
(bad)
bnd
imul
adc
add
ss
jmp
loop
in
(bad)
in
sbb
ss
cmp
jmp
dec
mov
fwait
sbb
ins
stc
adc
cmp
and
ret
inc
dec
xor
bound
mov
movs
sbb
(bad)
inc
retf
adc
or
cmp
sbb
icebp
cld
neg
ins
add
pop
lods
(bad)
dec
inc
aas
mov
jno
popa
popf
out
popa
inc
mov
aaa
ror
rcl
(bad)
mul
test
mov
sbb
adc
xchg
jg
mov
aam
pop
sar
fldl2t
int3
int3
dec
xlat
dec
repnz
jle
aas
adc
jmp
jmp
mov
mov
test
fild
cmp
push
(bad)
dec
dec
xor
outs
inc
jmp
gs
or
add
scas
cs
and
ror
call
shl
cmovnp
inc
add
mov
mov
movs
fbld
aaa
mov
mov
dec
cmps
out
dec
push
mov
mov
mov
adc
inc
scas
mov
sbb
xchg
xchg
sub
fidivr
jle
std
pop
fisub
xchg
out
nop
push
push
jmp
loopne
daa
sbb
je
cmp
sub
mov
adc
push
mov
dec
mov
lea
pop
jp
out
and
and
arpl
call
mov
es
(bad)
std
mov
push
test
data16
ret
inc
and
fidiv
mov
aam
jecxz
dec
arpl
imul
xchg
sbb
dec
sub
out
je
xor
(bad)
lock
and
push
shl
rcl
lock
dec
aas
loop
and
gs
mov
je
test
push
aam
arpl
sbb
jne
inc
dec
icebp
arpl
jns
mov
sbb
dec
mov
push
jmp
xor
jl
mov
mov
or
repz
xor
clc
cli
(bad)
mov
sbb
jle
pop
pop
and
ret
icebp
stos
inc
loopne
je
adc
push
(bad)
je
push
cmp
inc
cmp
jae
das
pop
sub
clc
cmp
xor
adc
in
outs
imul
inc
push
pop
cmps
inc
sub
not
mov
mov
mov
push
idiv
xor
inc
jmp
or
xchg
push
nop
fs
daa
mov
scas
lods
gs
push
popa
movs
push
add
je
out
dec
stos
and
sbb
into
in
iret
mov
test
push
movs
jns
cmps
mov
jecxz
cmp
cmp
mov
or
scas
xchg
or
push
push
xchg
and
pop
sahf
jecxz
(bad)
out
jo
in
les
div
cmp
int3
sub
jnp
xor
test
xor
pop
pop
dec
and
aad
jle
in
addr16
cmp
or
pop
dec
push
dec
icebp
lods
adc
push
add
fwait
movs
mov
dec
ss
pushf
push
xchg
fstp
mov
or
pop
in
popf
sbb
iret
aaa
or
xlat
cwde
gs
scas
push
das
lds
test
sti
js
jl
pop
fcomip
jb
loopne
(bad)
jb
int3
mov
jle
cmp
std
jg
xchg
cmp
fs
mov
xlat
xor
pop
ds
lods
ins
scas
ins
ret
sbb
mov
xchg
psubusw
xchg
jl
sub
shl
sbb
mov
push
inc
and
pop
loop
nop
mov
jg
push
inc
data16
inc
retf
cmp
jp
mov
sbb
pop
into
adc
ins
push
inc
adc
pushf
mov
rol
push
ret
or
xor
inc
mov
stos
jge
jecxz
iret
and
daa
sti
xor
sahf
pop
xor
mov
mov
sub
jns
push
(bad)
xor
rcr
test
das
jno
pop
je
retf
call
xchg
sbb
inc
xchg
jmp
cmps
dec
repnz
mov
cmp
ret
push
popf
xor
jg
push
in
mov
mov
sub
push
sbb
mov
sbb
jne
sub
stc
outs
and
jl
jecxz
push
mov
xchg
ds
adc
jmp
sti
cdq
inc
jbe
mov
cmp
xchg
movs
stc
mov
and
daa
out
int
out
call
(bad)
and
lds
fsub
or
lods
jnp
out
pop
retf
fidiv
fdivr
push
xor
xchg
mov
out
pop
fstp
sti
cmp
fst
mov
add
xor
xor
adc
push
(bad)
in
movs
cmc
dec
xor
inc
sub
cmps
cli
(bad)
int3
sar
fld
scas
nop
loopne
js
and
or
xor
or
cmp
inc
enter
stc
pop
repnz
mov
sub
cwde
jae
pop
cmp
(bad)
xchg
mov
inc
jl
adc
or
fs
loopne
cmps
dec
xlat
mov
dec
mov
jne
mov
lods
sbb
fs
cmc
inc
adc
cwde
lahf
jb
inc
cdq
dec
ss
dec
mov
pop
bound
sbb
fistp
test
retf
xchg
popa
adc
(bad)
outs
mov
pop
mov
pushf
dec
cmp
cmp
jp
packsswb
sbb
test
xchg
add
in
les
sahf
cmp
xchg
movs
fs
adc
mov
cdq
adc
pop
call
jb
ins
push
neg
ret
out
pop
loopne
jb
shl
leave
inc
push
mov
add
neg
ret
mov
mov
dec
sbb
icebp
pop
mov
(bad)
push
xor
pushf
stc
ja
gs
mov
push
ins
mov
inc
adc
cmp
in
repz
fsubp
or
leave
call
mov
and
pop
pop
cwde
sbb
ret
test
leave
imul
mov
sub
popa
mov
mov
mov
ret
jge
test
or
in
xlat
fidivr
xor
lahf
add
cwde
cmc
xchg
mov
outs
mov
je
mov
gs
and
and
test
fcomp
mov
es
and
in
retf
call
call
add
ja
call
add
dec
and
stc
xchg
dec
pop
jle
add
push
into
cmps
in
mov
fadd
pop
xor
mov
ds
sub
jmp
pop
inc
iret
jmp
ins
add
rol
xor
nop
push
test
sbb
add
clc
mov
scas
fwait
jmp
xchg
cmp
jnp
jb
sar
dec
out
movs
sub
fucomp
fstp
cmc
sbb
aad
mov
jp
push
push
sbb
ja
(bad)
lea
mov
mov
inc
dec
sbb
mov
jge
sbb
xchg
daa
fst
sbb
cmps
in
pop
jne
jb
sbb
mov
inc
lds
movs
test
xchg
ins
sub
inc
dec
inc
sbb
and
sbb
xchg
inc
push
out
dec
data16
mov
jmp
jno
and
jmp
mov
rcl
inc
sbb
cs
lahf
popf
xchg
jmp
nop
push
in
mov
cld
xchg
ret
mov
sbb
out
xlat
out
into
(bad)
sti
je
enter
and
inc
pop
imul
mov
ds
push
and
jge
sub
inc
mov
xor
dec
inc
(bad)
mov
setle
fdiv
aaa
xor
gs
jbe
cli
sub
div
jg
into
xchg
movs
dec
stc
stos
lods
and
add
xor
jne
test
les
jae
cwde
fidivr
push
sub
cmc
test
or
(bad)
cmp
cmp
sbb
call
in
push
adc
jl
fmul
xchg
and
stos
(bad)
jmp
dec
scas
mov
mov
gs
sbb
sbb
pop
mov
scas
mov
and
cmp
in
repz
jo
mov
jge
adc
mov
pop
sub
in
aam
in
fist
cmp
push
je
in
shl
cmp
mov
sbb
xor
dec
inc
xchg
sbb
or
stos
push
loopne
push
jnp
push
clc
or
add
(bad)
mov
pop
pushf
and
mov
xrelease
ja
jecxz
add
pop
inc
mov
adc
xchg
or
call
adc
test
ret
js
push
push
inc
jb
push
and
and
sub
xchg
jmp
mov
push
(bad)
mov
lds
add
les
jg
dec
inc
fdiv
pop
fadd
dec
repz
and
into
adc
ins
in
nop
or
ret
jno
test
outs
rcl
mov
arpl
push
xlat
mov
leave
lods
mov
aaa
or
lods
mov
jb
pop
jnp
or
lea
call
adc
xchg
repz
sub
inc
xchg
inc
data16
movs
xchg
clc
add
(bad)
xchg
or
mov
(bad)
pop
or
gs
xor
and
in
aaa
in
add
cmp
cmp
sbb
arpl
ss
loope
retf
sahf
xor
into
adc
icebp
js
mov
out
je
jne
xchg
fidivr
fsubr
sbb
iretw
imul
jnp
fcomp
lock
and
test
in
call
sbb
and
dec
pusha
shl
sbb
push
push
inc
adc
xchg
inc
xchg
sub
push
cli
mov
sub
adc
jae
sahf
mov
pop
mov
int3
outs
sar
pop
push
imul
mov
inc
and
fdiv
sub
xchg
ss
call
xchg
stos
mov
std
mov
sub
ss
mov
nop
mov
mov
inc
xor
int
cmovs
add
or
enter
xor
fcmovb
mov
or
ins
(bad)
aad
js
(bad)
ror
dec
repz
xchg
rol
cmp
imul
jb
mov
mov
xor
dec
xor
jle
scas
test
add
mov
test
idiv
pop
push
sahf
add
retf
loop
jne
dec
mov
sub
mov
test
popf
cmp
add
lods
cmp
test
adc
repnz
mov
mov
repnz
mov
and
lahf
fld
leave
outs
pop
and
outs
ins
cmp
mov
xor
leave
mov
ret
jge
imul
fcom
cmp
sub
and
ins
nop
out
les
popa
and
sar
cs
sbb
pop
(bad)
xchg
stos
shr
aas
ret
scas
dec
inc
rdpmc
pop
fidiv
adc
lahf
xchg
loope
into
jle
jle
adc
(bad)
fadd
retf
lds
lods
cmp
mov
mov
in
add
mov
inc
leavew
inc
loop
ret
jnp
icebp
dec
gs
stos
jmp
and
pop
jle
mov
push
jle
into
es
sub
fdivrp
rol
mov
mov
sbb
inc
mov
in
das
add
imul
out
sub
sbb
add
push
ins
call
push
mov
mov
xchg
sub
xchg
int
fld
sub
mov
movs
mov
mov
ret
adc
xchg
in
xor
add
mov
cmp
scas
sub
mov
lds
ja
in
in
push
dec
jmp
add
pop
leave
inc
mov
retf
sub
ror
jo
sub
loop
loope
add
push
mov
sbb
sub
out
add
es
mov
inc
sub
mov
pop
imul
lds
int3
fs
sbb
pop
sar
mov
cmp
add
leave
test
sub
mov
imul
adc
jno
sbb
sub
ret
cli
mov
mov
scas
pop
idiv
jle
lods
xchg
push
jle
popf
xchg
daa
lds
in
jne
cmp
or
int3
sub
add
mov
inc
cmps
fmul
sahf
out
cwde
arpl
(bad)
(bad)
cli
fild
pushf
xor
dec
retf
push
jg
call
adc
lods
push
in
(bad)
jmp
in
adc
mov
sar
mov
sti
adc
push
push
sbb
dec
in
(bad)
push
lods
jge
das
add
cmp
mov
fwait
cwde
and
mov
stc
xchg
leave
mov
test
mov
mov
sbb
aas
and
inc
sub
xchg
or
pop
repnz
js
dec
rcr
leave
movs
xor
out
mov
jmp
and
setp
and
pop
pusha
push
daa
inc
ins
dec
loopne
daa
and
shl
popa
and
and
or
ja
and
out
sbb
js
cld
aaa
out
xchg
div
adc
daa
dec
xor
push
call
fadd
mov
out
sar
push
push
cmc
in
retf
call
push
cwde
rcr
mov
adc
push
push
cmc
iret
pop
js
test
in
hlt
mov
pop
jl
push
lds
ins
dec
test
mov
dec
clc
or
push
ins
dec
nop
mov
xchg
xchg
xor
retf
ret
adc
aaa
xor
dec
xchg
adc
retf
jge
fcomp
mov
mov
rcl
js
shl
mov
sbb
movs
stc
sub
sbb
div
and
addr16
and
cli
setb
ins
pop
add
adc
inc
jl
mov
pop
and
mov
and
les
(bad)
mov
fdiv
mov
fldcw
lods
(bad)
mov
(bad)
push
push
js
fcomp
pop
add
add
popf
cld
test
cmp
das
fs
and
test
inc
scas
icebp
fisttp
sbb
push
(bad)
add
add
and
rol
mov
inc
ror
xchg
xchg
inc
cmps
cmc
mov
cmp
inc
dec
push
outs
lahf
lods
into
jne
and
cld
sub
mov
pop
push
repz
loopne
cmps
xchg
mov
xor
push
jb
or
int
inc
jb
(bad)
cs
imul
add
sbb
jecxz
rcr
mov
mov
add
aas
test
fmul
jne
aam
xchg
pop
xor
xchg
ins
or
(bad)
(bad)
adc
xor
scas
adc
and
jo
cmp
mov
mov
clc
sbb
pusha
push
inc
ficom
ins
dec
mov
mov
jg
xchg
arpl
call
cmps
or
pop
fmul
cli
inc
idiv
shr
and
adc
(bad)
or
cmp
jecxz
sbb
xchg
js
mov
das
shr
fs
mov
jno
push
or
xor
pop
push
shr
pop
mov
dec
(bad)
lahf
xor
xor
jbe
cmp
cmp
test
pop
out
(bad)
fldl2e
das
add
inc
retf
and
outs
test
pop
les
push
or
inc
or
iret
test
push
cmp
jge
and
cmc
sub
(bad)
out
test
pop
call
add
je
jp
scas
jo
xchg
pop
inc
jg
jmp
add
(bad)
mov
jecxz
cld
and
mov
pop
mov
push
cwde
in
sbb
dec
mov
add
xlat
(bad)
cmc
jmp
stc
jecxz
xchg
ja
ins
ret
cmp
push
mov
inc
enter
mov
addr16
retf
mov
scas
(bad)
call
inc
mov
cld
inc
sbb
or
sti
and
mov
sbb
add
add
mov
push
sahf
jns
(bad)
outs
push
sahf
pop
faddp
sahf
pop
sub
ins
jge
inc
(bad)
mov
add
sub
jl
inc
jnp
jnp
test
mov
out
outs
outs
dec
cmp
clc
adc
(bad)
int3
jmp
xor
inc
inc
leave
sub
add
or
xor
stos
ret
xor
ret
fst
out
mov
outs
xor
es
mov
scas
inc
pushf
enter
jg
dec
mov
pusha
xor
inc
cld
xchg
xor
xchg
or
sub
mov
(bad)
(bad)
data16
xchg
mov
mov
mov
(bad)
int3
retf
(bad)
sbb
int
adc
ds
dec
imul
into
cmps
sbb
mov
pop
mov
sub
sbb
add
retf
add
ss
into
mov
fdivr
dec
push
test
ins
add
data16
clc
arpl
mov
push
mov
std
push
xor
fst
pop
xor
or
int3
test
or
scas
movs
mov
pop
rcr
sub
xor
pop
repz
neg
sub
shl
imul
cdq
sti
xor
popa
hlt
out
fisubr
in
jp
loop
jle
icebp
rcl
sbb
scas
mov
(bad)
jns
pop
icebp
bound
mov
cdq
or
sbb
add
add
data16
xchg
push
cmp
cmp
inc
add
sub
out
nop
out
fs
inc
pop
sub
inc
enter
ret
daa
mov
les
xchg
jp
jl
sub
push
pop
mov
and
adc
adc
es
adc
or
inc
es
pop
lods
inc
pop
jg
push
mov
loopne
call
jno
push
adc
pop
cmc
test
jno
adc
in
imul
fst
aam
not
xchg
(bad)
test
sbb
retf
inc
ss
or
inc
inc
sub
push
addr16
dec
and
inc
nop
mov
cdq
or
pop
loop
xor
ins
cmps
inc
mov
pop
in
je
stos
xlat
fcomp
ss
retf
and
jno
adc
cwde
pushf
mov
and
inc
mov
cmps
retf
adc
iret
push
lahf
arpl
add
repnz
fbld
imul
or
mov
sbb
dec
popa
jmp
pcmpeqw
add
push
bound
adc
loop
jne
int
inc
ret
js
mov
cmp
lds
mov
popa
das
sbb
or
adc
pop
jne
mov
lods
pop
lods
push
dec
add
leavew
sbb
fisttp
adc
mov
mov
sbb
test
adc
inc
jge
jb
dec
stos
dec
sbb
paddd
(bad)
sub
outs
sub
imul
adc
or
pop
retf
loope
adc
cli
bound
xor
fisttp
and
inc
fcom
cmp
xchg
xchg
mov
shl
inc
imul
sbb
outs
loope
out
mov
fsub
cli
into
sbb
mov
fadd
xchg
test
fsub
enter
mov
cmp
or
jne
mov
xlat
jno
and
sub
loopne
fldenv
pusha
dec
or
fs
xlat
imul
in
sbb
mov
add
jecxz
fcomp
and
ins
cmp
outs
addr16
jmp
inc
retf
mov
daa
lods
mov
xchg
std
shl
xchg
adc
nop
jmp
adc
pop
xor
mov
cmc
mov
lds
ret
push
fs
inc
movs
scas
add
stc
(bad)
fsubrp
mov
les
cmp
mov
mov
jg
leave
(bad)
loope
xchg
and
add
xchg
fs
or
cmps
mov
hlt
xchg
ss
jmp
mov
mov
jecxz
or
xchg
ja
test
or
sbb
xor
imul
dec
ficomp
aad
mov
push
sub
cmp
je
imul
in
dec
repz
add
sbb
movs
dec
add
pop
sti
outs
adc
xchg
pop
mov
out
jns
jmp
and
sub
ror
call
fisttp
sbb
into
jnp
ret
je
rol
fstp
loop
ja
pusha
dec
into
rcl
ror
repnz
adc
inc
adc
mov
fs
dec
std
adc
fsubr
mov
mov
sahf
rol
in
pop
pop
inc
enter
imul
mov
push
outs
inc
cmp
dec
pop
dec
dec
xor
mov
inc
sar
test
cmp
jl
dec
ss
push
add
mov
mov
icebp
push
(bad)
jp
mov
in
add
ds
das
in
mov
(bad)
jno
lods
les
sub
sbb
mov
fisttp
xchg
stos
jbe
and
std
mov
mov
mov
outs
cmps
dec
aas
call
sbb
cmp
sub
pop
jmp
dec
(bad)
test
loop
nop
cwde
lods
scas
(bad)
add
retf
data16
sbb
test
mov
cmp
popf
cmp
fimul
pop
push
and
sbb
les
movs
(bad)
dec
js
sub
mov
sub
inc
xchg
lahf
pop
pop
inc
shl
fwait
push
jecxz
and
enter
and
les
mov
dec
push
loop
push
stos
mov
and
mov
push
jp
sbb
sbb
push
mov
out
mov
or
sbb
or
jmp
js
add
loop
mov
movs
cmp
jno
pop
pop
leave
nop
mov
ins
xor
xor
xor
jmp
jl
lock
outs
mov
int3
jae
push
adc
jno
out
scas
call
inc
repz
enter
stos
or
stc
test
cmp
aaa
das
out
stc
int3
nop
fistp
in
lds
int3
xchg
shr
aam
daa
dec
imul
sti
push
jp
sbb
xor
shl
adc
push
sbb
jle
adc
mov
cmc
mov
and
ins
xor
into
dec
sub
out
dec
repz
test
mov
cmps
js
icebp
out
mov
lods
pop
ror
xchg
popa
sub
pop
ins
dec
nop
dec
fwait
imul
fdivr
shl
arpl
mov
jne
inc
inc
lods
xlat
or
dec
leave
sbb
dec
xor
inc
push
jmp
fisttp
enter
mov
movs
sbb
adc
test
daa
jge
cmc
xor
pop
mov
xor
mul
imul
ins
mov
call
fcom
sub
push
add
mov
sbb
cmp
adc
enter
sbb
je
lock
in
lea
sub
inc
push
sub
idiv
(bad)
ins
fisub
mov
jb
lahf
cmp
jg
dec
mov
and
in
cmc
aam
or
or
mov
fs
fsubr
imul
pop
cmp
js
mov
lahf
jl
inc
mov
out
jne
stos
sub
xor
ret
push
xchg
mov
leave
jno
inc
xchg
lods
mov
and
fbld
(bad)
dec
mov
aad
ins
jge
(bad)
mov
inc
jnp
cmps
retf
and
pusha
xor
imul
leave
pop
xchg
pop
sub
(bad)
push
mov
loopne
cmp
pop
dec
mov
pop
dec
das
mul
sub
fwait
popa
cmp
(bad)
enter
dec
in
movs
das
lahf
movs
sbb
add
sub
in
xchg
cmp
xchg
adc
fmul
add
aas
lods
cdq
pop
pop
int
xchg
dec
and
adc
push
icebp
je
fmul
sub
cli
fdivr
out
add
xor
and
adc
in
sbb
sbb
mov
sbb
int3
sub
sar
jg
sbb
mov
int
mov
stc
aad
aam
stos
jno
push
fadd
imul
pop
retf
lock
(bad)
push
xchg
retf
test
xchg
test
lahf
int
sub
cmp
js
add
inc
jns
dec
sbb
rcr
adc
jge
push
adc
mov
fldenv
cmp
ins
dec
xchg
mov
inc
pop
enter
loope
add
push
push
mov
outs
mov
dec
repnz
push
mov
aaa
xor
sub
sar
fwait
mov
cmp
xchg
or
xchg
mov
add
mov
test
rcl
pop
stc
and
ja
imul
mov
jge
sbb
ins
inc
cmps
das
jbe
and
push
xor
dec
inc
dec
sbb
popf
mov
mov
push
call
std
cmps
jge
dec
loope
xchg
repz
adc
jno
scas
xlat
inc
pop
and
xchg
out
xchg
adc
pop
out
mov
popf
loop
mov
rcl
stos
cdq
mov
mov
lods
cmp
dec
lock
xchg
pushf
imul
clc
dec
in
pop
shl
dec
push
js
add
mov
or
push
add
adc
pop
das
addr16
(bad)
cmp
adc
push
int
adc
sub
arpl
xchg
xor
jl
pop
mov
push
sub
mov
add
ja
xchg
stos
fsub
test
iret
add
mov
loope
aaa
loope
aas
xchg
xor
ds
popa
aad
jb
cli
adc
pusha
lods
ret
pop
sar
cmc
dec
lods
dec
imul
mov
lahf
push
or
out
sub
(bad)
mov
cmp
and
imul
ins
ret
out
pop
mov
jp
aaa
icebp
sub
call
inc
lock
and
and
jbe
lahf
es
addr16
mov
bnd
jl
cli
aaa
mov
test
(bad)
test
ror
enter
sbb
rol
xor
pop
push
mov
or
sbb
sar
shl
rol
push
pop
inc
lahf
js
scas
cmps
shr
pop
xchg
imul
sbb
pop
adc
das
dec
dec
push
outs
pop
xchg
fwait
xchg
mov
cmp
repnz
cmp
icebp
call
bswap
jb
mov
xchg
adc
pop
jmp
mov
jle
in
lods
pusha
stos
out
fsubr
xor
and
and
pop
(bad)
xchg
out
retf
jge
add
jle
inc
cmp
stos
shl
sahf
daa
cmps
jmp
dec
sti
add
mov
mov
jbe
fmul
movs
or
sbb
inc
cli
mov
pop
and
out
rol
outs
pusha
adc
in
dec
les
hlt
xor
adc
add
addr16
jmp
pop
pop
mov
xchg
cmp
xchg
out
and
dec
hlt
fs
xchg
stc
test
jb
sbb
cld
sub
inc
(bad)
(bad)
jge
mov
clc
rcl
stc
sub
rcr
(bad)
retf
push
jo
mov
push
mov
in
bound
stos
cdq
dec
ja
jbe
ja
mov
cwde
mov
sub
adc
movs
mov
sbb
dec
xor
shl
outs
daa
mov
xchg
sbb
js
jmp
gs
jo
bound
aam
(bad)
test
xchg
gs
adc
std
fdivr
imul
mov
ins
je
lods
jecxz
mov
add
jnp
int3
gs
rol
xchg
push
in
ins
or
jb
test
push
xchg
xchg
lods
or
sti
mov
in
and
and
inc
pusha
addr16
ret
jl
nop
sbb
sub
imul
ins
mov
out
fwait
add
stos
xchg
popa
lock
addr16
pop
push
ffree
cmp
fld
aam
push
pushf
call
les
hlt
and
leave
xor
or
or
aam
icebp
mov
call
push
fsubrp
inc
idiv
rcr
es
and
int
xchg
movs
mov
jl
les
pusha
mov
jno
cli
outs
mov
pop
ret
xor
iret
dec
mov
mov
rol
rcl
jmp
push
inc
dec
pop
push
xor
int3
inc
aad
xchg
fsub
shl
outs
icebp
and
mov
retf
mov
push
xchg
fldlg2
xlat
adc
mov
fcmovnb
sub
xor
pop
adc
fsub
(bad)
mov
xor
sbb
gs
inc
and
fnstsw
hlt
arpl
inc
add
and
cmp
push
lods
jbe
push
xchg
outs
shl
retf
sub
stos
popa
inc
jge
sbb
inc
or
and
fs
fidiv
pop
push
movs
scas
push
sti
push
sub
mov
sub
aam
mov
push
sub
mov
mov
or
inc
fs
or
aam
inc
xchg
fisttp
(bad)
cld
mov
div
cmps
push
jp
les
scas
sbb
sub
and
mov
imul
xchg
ins
aam
out
dec
jle
iret
test
mov
sbb
mov
mov
rdtsc
mov
lods
mov
adc
xchg
or
aaa
xchg
jmp
adc
lods
xor
fcom
mov
aaa
xchg
ins
sbb
shr
cmps
leave
dec
or
mov
mov
pop
cld
(bad)
mul
xchg
fs
push
xchg
jnp
std
sahf
fidivr
pmulhw
mov
mov
inc
pop
fcom
jle
dec
add
xor
fadd
xor
or
and
icebp
cmp
mov
push
xor
lods
(bad)
loope
mov
fmul
mov
pop
ds
adc
in
ins
gs
jmp
retf
pop
out
dec
int
add
cmp
add
push
retf
inc
xor
ret
lods
pushf
mov
neg
stos
je
mov
add
mov
pop
pop
aam
ds
xchg
push
clc
mov
(bad)
sub
xchg
xor
ds
clc
sub
or
hlt
call
jmp
and
stos
mov
lock
pop
faddp
scas
push
inc
push
push
mov
adc
enter
movs
xchg
in
(bad)
xchg
out
movs
add
imul
add
inc
idiv
popf
pop
jp
push
adc
mov
je
mov
sub
jns
jno
mov
dec
jl
psllw
mov
mov
stc
xchg
fmul
mov
sbb
gs
inc
mov
inc
rol
les
inc
cmp
ror
loop
xchg
sbb
push
(bad)
test
hlt
int
es
inc
sar
(bad)
je
push
jmp
push
push
xor
mov
jnp
or
rcl
fisubr
mov
and
sbb
and
addr16
mov
jne
jge
push
lock
es
imul
fmul
les
sbb
push
outs
clc
loopne
fsub
loope
push
pusha
jmp
xchg
pop
sub
inc
outs
out
popf
xor
xor
mov
or
call
hlt
pop
mov
push
add
push
jnp
mov
and
data16
xadd
ins
je
pop
(bad)
jp
jo
push
fdiv
rol
loope
xor
push
mov
je
inc
push
or
lock
xchg
and
iret
test
xor
pop
stc
aam
xchg
repnz
adc
data16
aaa
push
lahf
and
retf
mov
out
dec
sbb
pop
jmp
das
jle
or
adc
or
mov
jbe
cmp
test
mov
xchg
xchg
(bad)
in
lea
xchg
dec
jl
jbe
jno
xor
int
addr16
push
ja
in
lea
lock
cwde
or
push
and
push
mov
push
push
sbb
xor
push
jl
retf
movs
push
mov
mov
imul
adc
test
and
in
push
js
sub
jecxz
or
xor
mov
nop
std
adc
hlt
add
inc
adc
xlat
or
jmp
xor
pop
and
imul
mov
cmc
cld
mov
leave
test
cmp
pushf
mov
call
jns
cmp
xchg
ins
xchg
imul
pushf
sbb
dec
fs
bound
xchg
(bad)
pop
sub
inc
sbb
mov
add
scas
in
mov
rcr
neg
fadd
fld
mov
pushf
into
push
jmp
js
cmps
mov
pop
sbb
fstp
jmp
fsubrp
and
inc
sbb
xchg
mul
test
loop
sbb
lea
dec
mov
inc
pusha
pushf
adc
loop
aaa
pop
cmp
ja
jnp
jl
sahf
xchg
es
mov
sub
pop
sbb
out
leave
cmp
cmp
push
inc
into
mov
xchg
mov
stos
movs
push
dec
dec
xchg
adc
jge
jl
cmp
xor
xor
xchg
movs
test
je
clc
sti
xor
xor
aaa
std
jecxz
sub
(bad)
fnstenvw
fadd
sub
push
stos
sbb
mov
mov
or
xor
out
adc
aas
sub
add
out
sbb
daa
icebp
out
dec
mov
add
fcom
fcomp
adc
inc
sbb
mov
mov
dec
or
popa
and
lock
jne
and
dec
mov
call
mov
cmp
cld
cmp
ss
retf
cmp
mov
mov
ins
lds
dec
rcl
and
jns
repnz
adc
xchg
jp
cmc
or
jae
stos
push
pop
out
je
inc
repz
repz
jle
in
pop
sar
add
jg
jne
inc
or
adc
inc
inc
mov
jbe
ss
xlat
aaa
hlt
add
inc
lods
pop
mov
movs
jno
clc
dec
jl
xlat
fisttp
xor
das
ds
xor
or
stc
mov
mov
or
lea
inc
bound
push
loopne
add
push
cmps
and
or
icebp
mov
rcr
clc
or
inc
xchg
jo
cmps
inc
pop
loope
mov
scas
mov
daa
mov
mov
xchg
mul
clc
popf
daa
xrelease
push
xchg
dec
xchg
dec
sahf
call
sub
jmp
pop
stc
push
mov
cdq
ror
(bad)
cmp
lock
aad
lock
and
nop
mov
sub
mov
dec
and
(bad)
dec
inc
push
dec
pop
or
sahf
fld
sti
sbb
div
test
mov
sub
out
or
repz
jne
mov
and
pop
add
jb
push
mov
sbb
adc
sti
inc
shl
cmp
mov
sub
neg
xchg
jecxz
in
add
dec
sbb
lock
inc
jl
and
lahf
xchg
jmp
dec
xor
sbb
fiadd
adc
xchg
int3
lahf
cmp
popf
leave
push
pop
pop
sub
mov
js
mov
movs
mov
and
dec
dec
cmp
mov
or
and
test
adc
lods
sub
call
jmp
pop
hlt
ds
cmp
inc
push
mov
cmc
jecxz
(bad)
and
cld
xchg
dec
or
push
std
ss
mov
or
es
pop
mov
sub
mov
dec
(bad)
sbb
sbb
cli
(bad)
dec
mov
movs
lods
and
xchg
stos
xor
in
(bad)
in
cli
loop
mov
cmc
out
push
cmp
mov
inc
mov
fdiv
rol
out
sbb
loop
or
jecxz
rcr
mov
push
pop
add
push
imul
mov
mov
call
or
daa
pop
or
pop
ud2
sti
imul
push
loop
(bad)
jg
arpl
push
sub
mov
aas
(bad)
jno
sti
cwde
fild
jnp
jmp
sbb
push
pop
jnp
shr
aam
dec
fst
ss
push
jno
lods
(bad)
sti
or
push
arpl
nop
out
in
dec
xchg
dec
xchg
es
and
lods
in
mov
fiadd
sti
or
xor
jmp
mov
loope
outs
add
pop
(bad)
out
mov
pop
in
popf
adc
jne
xchg
sub
dec
and
add
test
mov
push
pop
xlat
rol
jne
mov
mov
stc
loop
sar
fs
movs
popf
pop
pop
shl
add
imul
mov
pushf
mov
imul
mov
or
cdq
js
jp
sbb
inc
movs
add
dec
jno
jmp
adc
lea
(bad)
enter
mov
lahf
lods
outs
push
jl
js
jnp
mov
int3
cmp
mov
(bad)
ss
and
mov
jmp
add
cwde
jb
push
mov
repnz
xchg
pop
cld
(bad)
rcl
and
xchg
mov
call
call
xchg
xchg
call
je
sar
mov
pop
and
fwait
or
jmp
fs
xlat
and
enter
es
pop
sbb
add
daa
test
stc
add
retf
loope
inc
and
cmps
cli
jne
mov
sti
mov
mov
test
hlt
mov
arpl
ds
shl
inc
pop
or
jne
(bad)
push
out
push
enter
sbb
mov
pusha
cmp
lods
inc
xor
outs
mov
ins
imul
cmps
enter
mov
jae
stos
js
pop
jne
adc
dec
pop
jecxz
shl
hlt
sub
inc
sub
jge
cmp
push
xor
sti
pusha
lds
pop
outs
push
into
iret
push
(bad)
cmps
es
xor
pop
sub
xchg
mov
xchg
out
in
sar
cmp
cmp
inc
cmc
repnz
hlt
mov
in
shl
hlt
cwde
adc
rol
pop
test
cmp
lea
das
frstor
out
aad
and
movs
mov
ds
stos
cs
sub
mov
mov
lods
test
or
popa
add
mov
fdiv
scas
int3
jge
pop
hlt
(bad)
and
scas
push
mov
add
jbe
pop
pop
ret
lods
pop
fsubr
(bad)
sub
repz
pop
mov
call
test
xchg
jae
shr
jns
stos
aam
repz
pop
mov
call
mov
ficom
loopne
in
int3
or
push
icebp
xor
repnz
and
sti
imul
mov
xor
movs
push
sbb
aad
in
mov
adc
mov
inc
pop
jmp
xchg
push
ror
inc
lahf
rol
sub
(bad)
mov
inc
ret
or
ror
cmp
push
in
jp
les
lods
(bad)
pop
in
pop
das
xchg
lock
sahf
mov
add
add
leave
push
pop
fstp
test
cmp
mov
fcmovne
test
inc
pop
jb
rol
out
mov
adc
xchg
sahf
ret
sbb
adc
jno
inc
mov
fidivr
push
inc
cmp
pop
mov
xor
jo
sub
jnp
mov
rol
out
pop
mov
and
add
pop
mov
lahf
xchg
int3
adc
xchg
pusha
out
call
out
inc
pushf
cli
mov
or
ret
add
mov
fsubr
xchg
pusha
push
out
rol
dec
mov
pop
(bad)
or
lods
jo
mov
clc
dec
test
loopne
mov
pushf
(bad)
les
fistp
dec
shr
or
mov
xchg
push
pop
pop
(bad)
jg
movs
jmp
add
mov
and
add
sub
shl
pop
cli
sti
mov
loop
mov
shr
sub
or
mov
xor
mov
(bad)
inc
xor
mov
inc
lods
xchg
inc
push
lea
dec
inc
out
std
mov
in
sub
push
pusha
mov
les
fdivr
mov
push
cmp
add
mov
pop
sub
push
adc
or
jmp
or
cmp
imul
and
pop
aam
mov
je
cmp
xor
and
jno
cmp
and
call
mov
push
bound
mov
xor
or
retf
mov
cdq
xor
nop
ret
stc
cmp
mov
adc
test
pop
test
ret
pop
xchg
mov
scas
adc
es
and
jecxz
fiadd
and
movs
mov
add
lock
inc
dec
mov
mov
push
push
fist
mov
enter
fstp
adc
div
bound
shr
jp
into
or
stc
cmc
cmps
aaa
xchg
push
pop
sub
mov
cdq
inc
jge
stc
and
jmp
push
mov
retf
rol
push
nop
jl
test
std
out
dec
stos
mov
mov
mov
jg
or
aas
mov
loope
jnp
stc
xchg
push
pop
ins
jp
aam
sbb
ins
repnz
push
ret
sbb
mov
cmc
jo
arpl
test
push
popf
pop
pop
pop
lods
sbb
or
mov
pop
pop
sub
repnz
push
jns
ficomp
adc
push
fsubr
xor
mov
sbb
dec
xor
sar
xlat
xor
addr16
xlat
cmp
ret
outs
scas
scas
inc
sbb
sub
xchg
jg
xchg
leave
bound
xbegin
loop
rcl
pop
int
xor
sbb
sar
pusha
(bad)
pop
sub
lock
jnp
xor
leave
mov
inc
mov
cld
outs
daa
in
icebp
and
xchg
pop
and
rcr
(bad)
mov
dec
mov
lods
add
add
aad
mov
ror
inc
xchg
xor
add
vfrczps
push
pushw
imul
xor
sar
sbb
or
cmps
jmp
ret
push
fmul
add
mov
ins
fwait
imul
adc
gs
rcl
sbb
mov
xor
xchg
js
fsubr
repz
(bad)
mov
add
jecxz
scas
xchg
das
daa
pop
inc
in
inc
rcl
adc
ins
cld
mov
inc
sub
mov
xchg
and
inc
jle
jb
shr
dec
sub
popf
(bad)
mov
adc
outs
stos
ret
push
ins
(bad)
clc
pop
(bad)
ja
(bad)
push
hlt
loope
mov
mov
fsincos
arpl
jmp
enter
pop
mov
mov
jl
mov
nop
xchg
adc
add
or
jge
mov
fild
test
jno
ds
icebp
gs
cvtps2pi
and
sar
(bad)
adc
cmp
xchg
push
das
cmp
sbb
in
jnp
outs
imul
lods
and
lods
fld
mov
push
mov
mov
pop
test
sub
inc
cmp
add
add
sub
cwde
out
cmp
and
in
rol
loopne
arpl
adc
mov
dec
sbb
mov
lds
or
xchg
adc
mov
sub
test
(bad)
in
lea
lea
mov
push
push
(bad)
mov
(bad)
retf
push
jbe
shr
fs
sub
cmps
mov
inc
(bad)
pusha
daa
out
(bad)
jns
cmp
(bad)
adc
shr
sar
inc
sub
or
or
push
retf
rcr
aad
dec
push
sbb
mov
mov
ret
pminsw
sub
pop
sub
sahf
push
fdivr
ins
in
mov
sbb
lods
mov
mov
int3
retf
or
jge
daa
fld
cmp
or
je
js
pop
nop
dec
dec
icebp
aam
aad
cld
cdq
mov
es
fmul
test
xor
push
lods
fcmovu
icebp
sbb
push
adc
cmp
jae
shl
dec
mov
fimul
imul
inc
callw
sub
jbe
or
push
add
retf
mov
xor
mov
mov
test
xor
or
dec
mov
pop
stos
(bad)
(bad)
out
scas
inc
jmp
or
and
xor
mov
jno
pop
sbb
mov
test
adc
jmp
test
push
push
sar
je
jmp
push
push
xchg
sub
cmp
push
pop
mov
pop
loopne
sar
(bad)
repz
imul
scas
sub
cld
lahf
sbb
hlt
imul
add
add
fadd
js
loopne
push
retf
jl
mov
aad
inc
inc
mov
shl
test
cmps
adc
jnp
std
or
and
adc
jp
xchg
jae
mov
and
add
fwait
stc
cmp
mov
dec
cld
sbb
ins
pushf
shl
jne
cmp
leave
xor
outs
adc
xchg
push
jl
cmp
push
mov
push
hlt
cmp
fisub
int3
pop
out
je
sbb
and
mov
pop
jnp
inc
sbb
aas
out
addr16
inc
mov
push
add
add
push
dec
mov
push
mov
cs
das
dec
(bad)
pop
push
inc
or
fiadd
fsubr
or
(bad)
cmp
dec
in
mov
mov
adc
loope
cmp
lods
in
inc
jns
sbb
aaa
fidiv
loope
mov
push
push
cmps
sbb
add
pop
sbb
fisttp
adc
sub
call
ss
add
push
(bad)
jle
mov
loop
out
and
adc
add
pop
shl
dec
(bad)
sub
jne
push
jl
pushf
xchg
jae
setge
cmp
pop
fcmovne
enter
sub
mov
movs
cli
in
xchg
mov
lock
test
inc
jbe
daa
das
push
dec
lock
bound
(bad)
cmps
cmps
and
push
loope
add
mov
and
ret
add
and
test
xor
into
add
add
dec
cmp
dec
scas
js
jg
out
ss
cmps
or
push
in
scas
arpl
sbb
call
xchg
(bad)
cmp
daa
xchg
push
mov
das
icebp
lods
xchg
push
mov
push
push
push
xchg
sub
call
(bad)
xchg
push
mov
das
cmp
push
cdq
push
add
imul
pmaxsw
jl
out
xchg
pop
lea
jg
lock
xor
sbb
jmp
and
jnp
inc
push
out
pop
in
pop
jl
mov
and
clc
push
mov
hlt
push
and
jmp
out
fdiv
stc
fucomip
idiv
std
repnz
cmp
and
sar
mov
cmp
ds
ret
xor
add
or
int3
add
adc
adc
into
xchg
cmp
adc
cmps
bound
(bad)
adc
inc
cmp
ja
imul
outs
xor
test
gs
adc
pusha
mov
mov
and
pusha
push
pop
add
cli
sbb
js
xchg
lds
outs
push
cmp
(bad)
adc
fwait
jnp
xor
mov
jl
adc
and
lock
push
push
push
or
pop
push
lahf
push
and
into
cmps
leave
pop
repz
jle
mov
dec
dec
(bad)
leave
lock
sub
cli
pushf
sbb
cmp
pop
or
test
addr16
pop
pop
dec
cmc
adc
imul
mov
hlt
push
push
pop
pop
dec
push
loopne
stos
dec
ror
sbb
sti
ret
pop
mov
push
pop
data16
dec
dec
sbb
stos
repnz
push
add
push
shl
cmp
in
dec
dec
call
adc
xchg
addr16
xchg
sbb
dec
add
loope
mov
call
std
mov
xor
pop
mov
mov
or
mov
not
stos
xchg
xchg
or
dec
(bad)
out
shl
cmp
mov
push
and
inc
push
movs
push
pop
lahf
data16
xchg
cmp
test
inc
pop
xchg
and
retf
repnz
stc
sbb
popa
sbb
adc
sub
rcl
or
retf
and
or
add
and
add
fimul
sbb
dec
mov
imul
mov
out
jle
cmp
cmps
loope
cld
imul
adc
dec
(bad)
movs
dec
cmc
das
stc
std
xchg
jge
cs
shr
xor
imul
xor
popa
jmp
shl
(bad)
adc
lods
ret
enter
push
(bad)
jno
outs
add
not
and
je
mov
mov
je
dec
xor
into
stc
sbb
in
clc
repnz
pop
pop
aam
lods
mov
xor
call
inc
mov
push
fucomip
sbb
push
ror
cmc
adc
imul
leave
in
mov
sub
push
movs
xchg
inc
scas
test
loope
mov
out
lea
imul
fldcw
mov
sar
test
or
mov
add
icebp
pop
dec
jns
pop
cmps
stos
into
cli
adc
dec
mov
lock
not
cs
arpl
gs
bound
mov
mov
xchg
xor
js
mov
fbld
pop
cmps
cmps
push
ret
dec
dec
and
adc
mov
mov
inc
outs
sbb
sub
jo
xchg
pop
jo
sub
lock
mov
or
outs
lods
test
(bad)
or
jmp
pop
setae
inc
cs
push
mov
and
mov
popf
xor
mov
iret
mov
imul
mov
pop
push
pop
and
pop
xchg
jae
jg
push
adc
xchg
adc
test
inc
sti
push
repz
in
popf
lods
pop
aad
iret
bound
jb
jo
fistp
xchg
test
rcr
jnp
push
fcom
jnp
mov
push
pop
fist
ja
jae
into
mov
loop
shld
outs
add
in
icebp
add
mov
push
sbb
push
pop
shr
mov
dec
clc
and
cmps
(bad)
in
mov
jno
ret
mov
(bad)
cmps
aas
icebp
inc
and
mov
jmp
dec
cwde
xor
enter
outs
and
ja
dec
fisttp
or
std
mov
aam
aam
idiv
inc
je
and
call
and
sub
xor
mov
ss
jmp
xlat
fst
mov
in
jno
jl
out
pop
dec
call
lods
daa
jle
dec
icebp
loope
(bad)
pushf
xchg
lods
sbb
cmp
sub
cmps
inc
fist
push
out
call
sti
es
ret
fmul
xor
dec
jae
inc
push
je
jno
pop
js
ds
loopne
mov
mov
xor
push
cmps
enter
das
out
(bad)
push
mov
and
cwde
test
leave
adc
cmp
mov
jg
pop
mov
in
mov
scas
xor
loope
inc
push
mov
and
cli
pop
shl
jnp
adc
cmp
xor
jo
pop
xchg
pop
sub
out
mov
stos
aad
and
sbb
and
cmp
pop
mov
pop
mov
xchg
jecxz
outs
jns
add
lahf
imul
jne
mov
shl
mov
ret
adc
rol
or
mov
sar
outs
es
pop
pop
or
xor
sbb
sbb
ins
push
push
sub
dec
repz
inc
inc
sub
push
(bad)
jne
ret
sbb
pushf
int3
inc
test
cs
loope
cmp
fwait
stos
jl
and
lea
inc
mov
or
sub
call
out
test
out
pusha
leave
xor
and
mov
fidivr
mov
and
iret
sub
cwde
sbb
js
hlt
mov
xor
or
dec
or
stos
pop
jmp
cmp
mov
mov
mov
adc
mov
push
mov
fisub
sar
ins
addr16
fsubr
jb
or
and
cmp
sti
push
push
jecxz
popa
aam
std
adc
mov
xor
adc
stos
sub
shl
mov
(bad)
leave
dec
push
cld
call
adc
xchg
mov
pop
mov
(bad)
mov
dec
or
ins
sub
jnp
and
pop
out
mov
jno
sar
(bad)
xchg
enter
sbb
pop
mov
repnz
mov
in
(bad)
mov
mov
ins
iret
addr16
sub
shl
mov
les
jmp
mov
popf
sub
cld
adc
and
lods
sbb
jl
das
pusha
fst
and
cs
mov
mov
jns
outs
loopne
jns
jg
xchg
pop
(bad)
das
pop
cmps
fidivr
push
imul
or
out
ins
sbb
imul
sahf
mov
fld
cmp
cmp
movs
fs
and
fs
pop
xchg
adc
lock
inc
push
xchg
jb
jmp
cmc
pop
mov
das
cmp
xor
inc
cmp
mov
add
leave
clc
(bad)
aad
scas
xlat
jp
sbb
lods
movs
lock
sub
out
inc
push
add
mov
pop
xchg
loope
imul
sti
cli
xchg
ja
pop
mov
xchg
jmp
push
cmc
or
sub
fsub
das
add
xor
cmp
aas
imul
add
fcom
fwait
(bad)
adc
xor
mov
push
neg
hlt
inc
ds
adc
jge
cmp
sti
dec
iret
fist
jmp
(bad)
rcl
push
pop
fistp
out
sahf
mov
mov
sub
(bad)
out
stos
fmul
hlt
cmc
imul
sub
ss
test
aam
jmp
bound
retf
jae
ret
lods
mov
into
lods
dec
out
cmp
pop
adc
adc
mov
push
adc
mov
sub
push
push
aam
scas
ret
inc
mov
pop
dec
(bad)
clc
mov
leave
xchg
mov
aad
call
imul
sub
scas
push
add
mov
dec
inc
push
xchg
and
xchg
add
in
xlat
int3
mov
sar
cld
pop
push
cmp
loopne
dec
pop
add
dec
rcl
add
test
fwait
aam
(bad)
loop
adc
test
ficomp
clc
test
mov
sbb
inc
or
mov
mov
fisubr
aaa
xchg
push
mov
mov
add
mov
sub
adc
add
mov
outs
or
and
sbb
adc
es
ss
push
stos
push
(bad)
mov
pop
mov
pop
pop
xor
push
lds
cmps
cmp
test
mov
loope
pop
mov
rcr
leave
test
push
cmp
test
and
fs
js
sahf
scas
push
pop
or
dec
jne
jg
add
sbb
out
js
mov
mov
pop
hlt
cmp
xchg
mul
dec
cli
inc
test
ins
div
mov
pop
sub
xor
add
out
or
sub
test
cs
fdivr
pop
mov
push
fisubr
movs
mov
add
xor
xor
frstor
test
pop
call
enter
adc
jbe
and
push
mov
out
mov
mov
ds
dec
fcomp
mov
fs
pop
or
sbb
lea
push
sub
and
fs
mov
not
call
scas
xchg
xor
pop
add
xor
add
xor
push
sub
dec
and
inc
and
push
dec
push
pop
push
xchg
mov
leave
mov
test
mov
into
push
mov
mov
sub
jmp
mov
lods
repnz
jle
dec
add
rcr
dec
mov
or
popf
(bad)
fsubp
mov
or
dec
push
popf
and
andps
repnz
sub
rol
sbb
rcr
(bad)
push
jp
cld
mov
in
outs
mov
mov
das
sti
sti
push
imul
jecxz
adc
inc
fwait
mov
dec
fmulp
ret
retf
and
jae
jne
pop
push
shl
mov
mov
mov
arpl
sar
push
xor
xor
loopne
mov
jmp
or
sbb
mov
fsubr
mov
scas
push
popf
mov
push
push
arpl
retf
shl
sbb
cmp
xchg
stos
loope
int3
mov
ret
mov
jg
mov
pop
jp
inc
jmp
scas
mov
scas
sahf
je
jne
stos
sbb
lods
enter
mov
and
fwait
cli
rcr
sbb
mov
pop
ins
lods
lock
(bad)
cmps
cmp
cmovge
stc
sub
mov
inc
mov
or
les
add
xor
jns
or
mov
mov
jg
sbb
jbe
imul
cmp
push
mov
mov
sbb
sar
push
sub
inc
jmp
xchg
out
or
icebp
or
jne
xor
and
sub
pop
test
add
ds
and
test
push
fld
xor
(bad)
das
(bad)
out
sbb
nop
mov
scas
dec
mov
(bad)
fiadd
sub
dec
pop
jno
(bad)
adc
pusha
fcmovnb
adc
gs
out
adc
gs
add
scas
jp
sbb
mov
fldcw
sti
stc
sbb
popa
sub
ds
jo
and
inc
adc
cmp
arpl
scas
mov
mov
(bad)
(bad)
or
sub
xlat
or
fild
cld
cdq
jns
clc
cld
inc
dec
test
and
sub
push
cmp
push
retf
jnp
scas
and
std
xchg
jo
xchg
push
retf
out
fist
or
arpl
pop
sub
sbb
shr
cmps
and
mov
adc
and
sub
mov
push
sbb
in
dec
lock
dec
cli
ins
lods
pushf
pop
adc
jae
add
sbb
pushf
jo
call
mov
mov
sbb
push
dec
xchg
pop
out
jae
idiv
neg
xor
enter
mov
mov
jns
mov
shl
adc
jno
pop
jge
xchg
in
sbb
sbb
push
cmp
jmp
ins
add
xor
jne
and
and
mov
push
fild
aas
call
push
test
mov
sub
cmp
outs
dec
dec
(bad)
cmp
sbb
ds
popf
and
mov
xchg
aad
jl
outs
ja
bound
popf
call
mov
mov
ret
jp
ja
push
ret
mov
xchg
jp
pop
int
mov
fdiv
pop
shl
xor
js
stos
dec
pop
into
retf
neg
jno
sbb
push
or
in
cmp
sbb
and
jle
sti
xor
repz
sbb
js
mov
add
test
sbb
jecxz
sahf
out
in
test
mov
in
mov
push
iret
sahf
xor
xor
fist
imul
in
iret
test
mov
fwait
loope
adc
fyl2xp1
jg
call
hlt
ins
and
movs
sub
addr16
jb
in
(bad)
imul
sbb
adc
test
and
sti
ficom
in
xchg
sbb
test
shr
cmp
cmps
adc
sbb
test
dec
in
repnz
cmp
cmps
ret
clc
cmp
dec
fiadd
shr
fxam
fxch
jecxz
aas
jno
loop
sbb
aas
ret
pop
sbb
das
jns
push
popa
push
mov
pop
xchg
je
loope
push
dec
or
test
mov
jne
sbb
out
inc
iret
and
(bad)
push
ret
add
scas
mov
repnz
jmp
sbb
ins
inc
cmc
daa
lahf
or
clc
and
mov
jmp
stos
sar
ja
mov
or
push
push
fidiv
repnz
sbb
ret
push
adc
clc
mov
fiadd
jmp
(bad)
out
dec
jp
ficom
aaa
lock
jle
add
push
test
push
or
mov
mov
push
mov
call
enter
lock
mov
inc
stos
mov
inc
(bad)
or
in
ins
cmps
push
sti
out
jne
pop
ins
in
cmps
jns
xchg
outs
fld
jbe
(bad)
in
inc
ins
pop
mov
neg
xor
inc
cmc
jne
into
jbe
ret
sbb
push
adc
lods
adc
loopne
mov
sub
gs
mov
xchg
dec
hlt
out
aad
aaa
ror
jmp
rol
cmp
sbb
push
xchg
jmp
or
ss
(bad)
imul
push
vhaddps
lds
cmp
push
fistp
repz
xchg
xchg
jle
xchg
mov
xchg
mov
cmps
push
loopne
sahf
(bad)
mov
pop
ror
call
sbb
stos
sub
dec
cdq
or
cmp
dec
ret
iret
shl
(bad)
imul
popf
ins
idiv
bound
sar
pop
(bad)
xor
dec
call
ja
xchg
fnstsw
sub
xchg
jb
push
xchg
xor
xchg
cmc
repnz
test
mov
mov
xor
push
cmp
xchg
xchg
(bad)
or
iret
sub
push
dec
jg
call
aas
pop
jmp
cmp
cmp
adc
out
jmp
nop
sbb
cmp
enter
cmps
jno
and
enter
bound
jl
cmp
dec
push
call
retf
sub
mov
ins
adc
ins
pop
in
ret
popa
arpl
leave
sbb
(bad)
mov
icebp
ds
cmp
jns
(bad)
and
adc
mov
retf
mov
rcl
das
inc
dec
retf
add
mov
shl
or
dec
loope
xchg
fdivr
and
fwait
dec
push
or
jge
and
dec
in
xchg
je
xor
mov
push
xchg
dec
dec
loop
shr
inc
pop
cld
mov
in
mov
scas
aaa
add
dec
sahf
in
fsubr
dec
adc
loope
cmps
xchg
and
cld
and
mov
pop
xchg
xchg
test
push
sbb
les
mov
mov
jp
dec
lea
sub
call
stc
outs
push
add
jbe
dec
add
mov
push
add
mov
(bad)
add
cmp
pop
sar
das
fldenv
mov
out
loope
mov
mov
popa
mov
hlt
mov
inc
push
lods
out
scas
add
push
xor
inc
dec
test
fdivp
mov
jne
in
or
movs
out
push
lods
mov
inc
dec
gs
imul
test
dec
in
scas
jge
push
jno
lea
add
dec
mov
rcr
jno
adc
dec
sbb
mov
adc
pop
loop
out
out
mov
cwde
scas
dec
pusha
rcl
daa
sets
out
loope
stc
push
ja
in
arpl
jecxz
fs
cmp
repnz
add
aad
sbb
clc
mov
adc
mov
aas
lods
into
sub
aam
popf
dec
rcl
jle
push
test
dec
stos
enter
or
test
stc
add
dec
cwde
mov
(bad)
ror
call
adc
(bad)
test
pop
xchg
es
aam
add
addr16
sub
mov
lahf
stc
adc
push
outs
(bad)
mov
(bad)
lods
dec
mov
or
xchg
ss
cmps
xchg
sbb
cs
mov
sbb
cmp
add
je
jmp
out
dec
jp
inc
fld
xchg
adc
(bad)
jns
jns
shr
sub
adc
scas
push
mov
popa
cli
data16
and
rol
mov
repnz
pop
push
mov
pop
popf
retf
xor
xchg
cmp
and
pusha
sar
lds
add
dec
loop
(bad)
in
xchg
sub
jns
fnstcw
aaa
push
retf
mov
inc
and
xor
ins
cs
jge
dec
cmp
(bad)
aad
stos
mov
aam
mov
addr16
movs
mov
les
jl
(bad)
jae
sbb
sbb
cmc
add
sbb
pop
sbb
dec
add
xlat
jmp
cmc
add
add
inc
push
jp
adc
push
inc
lods
cmc
mov
loopne
cdq
fadd
mov
mov
or
jg
in
pop
dec
ds
cmps
sub
gs
inc
push
test
dec
jnp
rol
std
jle
dec
sub
xor
inc
lods
sbb
push
fdiv
or
ret
add
call
inc
mov
jmp
push
push
jbe
pop
sti
adc
aaa
jne
sub
cmp
adc
add
push
inc
clc
ds
ss
push
inc
js
xchg
push
dec
stc
div
sbb
pop
rcl
push
ins
xchg
cmps
shl
in
sbb
adc
jo
cmp
push
rol
iret
inc
bsf
nop
inc
mov
mov
mov
into
push
pop
nop
xor
out
jnp
sub
adc
inc
retf
cmp
sar
or
cmp
mov
in
lock
push
ins
jns
xchg
push
ss
outs
pushf
repz
movs
mov
dec
mov
sub
or
and
inc
(bad)
fistp
retf
jbe
fidiv
pusha
lahf
push
int
in
mov
mov
imul
push
pop
push
jmp
int
sbb
dec
dec
loopne
lods
pop
sub
shr
(bad)
fld
xor
jecxz
pop
(bad)
pop
adc
aad
xlat
fidiv
add
fstp
mov
mov
into
fxch
fsubrp
test
pusha
rcr
push
dec
hlt
and
stc
cmc
adc
jmp
sub
or
pusha
sub
push
outs
js
xchg
repnz
mov
mov
jp
mov
test
rol
jo
hlt
aad
test
out
int3
loope
mov
add
ja
pop
or
fistp
dec
or
push
cmps
int
out
pop
je
aas
push
add
es
hlt
out
inc
cmp
add
fcomi
(bad)
stc
in
ret
mov
(bad)
(bad)
repz
mov
sub
push
gs
nop
dec
dec
sar
movs
int3
sbb
fadd
cli
in
fs
loop
sub
sub
dec
add
add
sub
(bad)
je
repnz
and
xor
cdq
hlt
mov
adc
jp
mov
xchg
sub
fcmovu
hlt
push
ds
pop
xchg
pop
or
aaa
cmc
and
dec
in
xchg
push
jno
(bad)
fst
xchg
mov
adc
js
dec
out
xchg
inc
iret
loopne
push
inc
mov
shl
dec
stos
sub
lock
mov
push
leave
dec
dec
xchg
sahf
dec
dec
mov
adc
push
adc
cmp
retf
or
push
mov
and
jno
add
in
in
imul
push
dec
mov
xor
sti
adc
push
fidiv
arpl
mov
stos
daa
ret
shl
pop
scas
dec
xchg
ds
pop
fld
sbb
mov
xchg
sbb
mov
int
mov
mov
test
out
imul
lods
jecxz
pop
push
fidiv
mov
jl
imul
ret
fdivp
dec
and
(bad)
add
clc
mov
jnp
movs
add
outs
fidiv
mov
add
fdivr
pop
imul
adc
mov
rcl
nop
fstp
popf
adc
adc
xchg
push
mov
sbb
mov
push
mov
inc
jae
sub
shl
sbb
sar
push
add
sub
push
inc
fstp
jnp
xchg
dec
pop
ret
test
lahf
mov
pop
sub
mov
mov
mov
jg
ds
adc
inc
mov
iret
adc
push
sti
mov
iret
dec
sub
hlt
mov
mov
pop
sub
jmp
in
mov
adc
ret
cmp
xchg
add
nop
adc
rol
cmp
cmp
dec
outs
int3
mov
imul
ret
push
shl
fsubrp
add
xchg
nop
scas
cwde
pop
push
pop
sbb
sub
je
loop
inc
mov
mov
mov
sti
cdq
sar
inc
mov
mov
leave
xor
retf
add
fld
jb
or
sbb
mov
adc
xor
and
jns
out
mov
dec
je
hlt
sbb
mov
hlt
inc
inc
inc
xor
ins
push
push
int3
mov
mov
cmp
addr16
or
sahf
stos
in
xor
aam
outs
push
in
sbb
mov
gs
mov
sbb
(bad)
pushf
data16
push
aam
js
push
push
xor
mov
cmc
js
ret
arpl
aad
push
or
push
retf
pop
ja
leave
xchg
hlt
(bad)
popa
mov
mov
pop
add
test
push
adc
add
adc
add
pop
das
or
and
daa
push
adc
sbb
out
lea
pop
xor
adc
pusha
or
not
inc
js
and
cmp
stc
mov
imul
jmp
stos
rcl
cmp
dec
mov
cmps
xchg
jo
ins
jbe
jl
int3
cdq
push
int
add
xchg
mov
inc
fld
int3
adc
dec
dec
lea
pop
sbb
mov
into
adc
hlt
xchg
xor
sub
xor
xchg
pop
push
sbb
hlt
mov
test
lods
mov
movs
cmp
ds
scas
xchg
inc
pop
xchg
adc
xchg
outs
push
cmp
popa
stos
sbb
dec
ret
sub
dec
and
jno
dec
cmps
cmp
lahf
in
lock
repz
add
sahf
xor
push
repnz
int
retf
mov
mov
inc
fdiv
(bad)
push
add
xchg
loopne
repnz
mov
pusha
jno
repnz
jo
in
imul
movs
sti
or
out
fisttp
pop
adc
imul
clc
mov
xchg
mov
mov
mov
test
idiv
sbb
jno
enter
rcl
lock
sub
dec
int
cmc
push
mov
cmp
pop
pop
cmp
inc
mov
fcomi
adc
sbb
mov
js
out
(bad)
cmp
mov
push
in
ja
pop
sahf
cwde
test
sbb
push
es
retf
or
(bad)
mov
loopne
retf
enter
and
test
scas
jg
xchg
add
cmps
mov
inc
cli
les
xchg
in
jge
sbb
inc
xor
data16
fdivr
jle
lods
(bad)
push
fwait
jae
or
lods
mov
mov
retf
inc
nop
retf
mov
sbb
jbe
je
and
dec
arpl
test
dec
lock
fidivr
fdiv
(bad)
mov
rol
mov
out
sbb
jno
mov
inc
xchg
push
inc
loop
iret
and
fsub
(bad)
dec
xchg
cmps
enter
popf
xchg
mov
out
sbb
ficomp
and
xchg
sbb
push
enter
fwait
inc
mov
dec
lods
je
(bad)
mov
aas
add
out
and
lds
inc
ret
int
or
add
stos
mov
je
or
inc
pop
sti
cmp
mov
jmp
adc
lock
mov
movs
sar
imul
inc
out
xor
pop
call
mov
fmul
mov
fmul
clc
aas
pop
in
pop
cwde
xor
outs
aam
leave
mov
js
cs
add
mov
dec
jbe
and
pop
xchg
das
adc
ficom
inc
jg
pop
cmp
lds
inc
outs
pushf
out
xchg
adc
mov
addr16
dec
cmp
repz
(bad)
in
in
and
cdq
jae
pushf
hlt
mov
mov
or
mov
daa
lods
xor
sub
jae
sub
int3
jg
lds
aas
or
xor
push
lds
ds
jne
fsub
dec
pop
fisub
dec
in
cmps
test
push
pop
dec
or
adc
inc
sar
and
(bad)
pop
cld
sbb
jno
pop
xchg
jb
add
(bad)
jbe
mov
clc
adc
shl
and
jo
je
xchg
(bad)
sbb
sub
rcl
dec
and
and
pop
jo
jle
sub
mov
xor
or
inc
inc
lahf
dec
in
outs
push
sbb
push
pop
aas
mov
aam
pushf
cmc
xchg
jbe
aas
stos
outs
mov
jecxz
cdq
sti
outs
in
dec
out
push
out
les
jmp
or
dec
push
nop
mov
sub
bound
rol
cmp
test
push
pop
hlt
push
stos
das
sbb
sbb
pop
dec
sub
xchg
add
xchg
imul
push
(bad)
cli
call
nop
pop
nop
inc
dec
dec
pop
inc
stos
ror
imul
sbb
pusha
pop
cmp
(bad)
retf
daa
sbb
test
test
cld
movs
mov
popf
jo
fsqrt
mov
push
mov
mov
fsubr
mov
inc
cmp
xor
lds
rol
push
fcmovu
cmps
mov
outs
aam
adc
adc
cdq
out
pop
das
push
mov
mov
(bad)
jne
or
xor
call
repnz
outs
out
pop
cdq
inc
scas
hlt
pop
lods
sub
scas
mov
loop
icebp
add
ret
into
aas
pop
jo
arpl
dec
xchg
mov
adc
fisubr
fsub
js
lods
fcomp
xor
xchg
jae
movs
les
sub
mov
jmp
mov
mov
xor
fsub
out
inc
sahf
cmps
mov
jle
(bad)
stos
into
push
popa
addr16
xor
adc
add
xchg
outs
push
jle
jmp
mov
aad
push
mov
push
cmc
fldcw
xor
int
mov
movs
ins
(bad)
sub
(bad)
jnp
fwait
jns
xor
test
push
inc
jecxz
cwde
in
and
je
pop
fsub
jbe
xor
in
add
out
mov
xchg
arpl
or
loopne
xchg
inc
mov
ffreep
jb
popa
in
xor
inc
lods
arpl
inc
mov
iret
sbb
push
in
sbb
nop
stos
jle
adc
jno
jne
push
in
call
xchg
pop
mov
dec
int
mov
hlt
cmp
leave
cld
stos
out
mov
enter
rol
mov
mov
or
push
push
jno
sbb
pop
sbb
cdq
adc
lds
bound
repnz
pop
add
inc
jp
mov
ins
scas
ins
sbb
jmp
shr
dec
outs
push
int
sti
bound
cmp
mov
push
fcom
loop
jno
jo
daa
mov
repz
sbb
clc
or
out
daa
mov
pop
and
loop
enter
mov
test
push
retf
in
das
xchg
mov
xor
(bad)
sub
repnz
xchg
dec
adc
gs
sub
jo
adc
daa
cmps
push
inc
pop
dec
pop
movups
aas
stc
mov
adc
xchg
push
dec
cld
cdq
mov
push
js
cmp
stc
mov
adc
loope
fmul
jp
xchg
pop
pop
xchg
xor
ins
fcomip
add
and
idiv
scas
les
jb
xor
ds
or
adc
fsub
daa
mov
mov
je
add
or
inc
xor
lea
cmp
jecxz
call
out
add
xor
mov
or
icebp
jbe
loopne
inc
xor
ds
aas
test
aad
inc
push
add
mov
fcom
psubq
xchg
lahf
xchg
xchg
push
loopne
sar
pop
mov
in
int
mov
xchg
xor
mov
fstp
imul
loop
into
cwde
int3
jecxz
adc
repz
xor
in
pop
sub
mov
fcom
retf
out
jae
or
and
rcr
into
inc
sub
lods
(bad)
cmp
call
sub
lahf
sbb
xor
scas
and
icebp
popa
and
mov
cmp
pop
inc
ja
sbb
jnp
lods
out
pop
sets
jbe
cdq
sub
fidiv
mul
push
or
(bad)
imul
aad
push
pop
shl
jp
xchg
clc
sti
loopne
inc
or
mov
and
dec
aas
xchg
xchg
xor
mov
pop
cli
int3
in
pop
add
cmc
shl
mov
jb
xor
out
or
retf
leave
push
mov
(bad)
and
ins
xor
and
test
xor
and
or
shr
enter
push
dec
rol
ds
stc
mov
sti
xchg
jp
ret
or
ds
adc
push
dec
mov
ja
pop
push
std
repz
mov
sub
cwde
jns
mov
gs
dec
mov
int3
xchg
xor
in
jne
in
mov
dec
test
cld
dec
fidivr
cmp
mov
ret
xchg
fisub
pop
jae
lock
js
sbb
sub
sbb
mov
mov
xchg
lahf
add
mov
jb
int3
pop
scas
push
retf
and
or
std
push
xor
ins
jno
adc
repnz
mov
ss
lahf
jnp
sbb
mov
ss
and
sub
es
jbe
shr
enter
retf
dec
sub
scas
jecxz
in
dec
inc
fild
mov
out
xchg
adc
push
dec
pop
xchg
call
xor
or
mov
jae
sbb
(bad)
cld
std
pusha
cli
jmp
imul
pusha
shl
fistp
push
push
ins
test
hlt
(bad)
dec
not
jp
lods
gs
cmp
mov
jecxz
add
inc
fwait
and
ret
xor
dec
repz
cmps
fmul
mov
call
loopne
sub
je
or
push
int3
retf
dec
jge
pop
pop
popa
loope
adc
loope
and
xor
fcomp
pop
addr16
test
cdq
in
fcomp
xchg
inc
xchg
dec
into
out
lock
mov
adc
dec
inc
push
add
jecxz
scas
movs
loopne
sub
mov
cmp
in
sbb
jp
lahf
shl
movs
bound
scas
out
fnstcw
mov
cmp
mov
xchg
bound
sub
fidiv
jl
pop
xlat
ins
retf
mov
sbb
mov
and
xchg
push
xchg
hlt
xor
data16
shl
adc
cld
pop
(bad)
mov
inc
int3
loop
data16
(bad)
jmp
(bad)
jmp
push
xlat
mov
loopne
lods
xchg
xor
xor
sbb
cwde
cmps
(bad)
rol
push
pop
dec
in
jle
pop
sub
and
into
cmp
dec
loop
push
(bad)
mov
test
in
add
xor
loop
sub
and
inc
xor
xor
outs
sub
jp
jo
std
dec
sahf
adc
mov
and
fst
mov
test
leave
out
rol
inc
aas
(bad)
push
mov
lds
retf
aad
pop
call
xchg
test
mov
inc
cdq
jg
xor
sbb
clc
add
mov
and
jecxz
enter
(bad)
pop
add
inc
jnp
ret
sub
pop
ins
xchg
sub
pop
or
mov
xchg
sbb
push
cdq
jecxz
mov
ins
pop
in
cdq
xor
jle
jmp
cmc
enter
scas
cwde
in
loope
fisttp
(bad)
hlt
(bad)
into
dec
out
pusha
rol
das
cmps
dec
lahf
mov
test
hlt
push
imul
or
lea
push
or
lahf
cld
jmp
hlt
jge
test
jno
int3
pop
jno
arpl
dec
outs
iret
push
push
fnstcw
test
adc
cmps
and
cmp
sbb
mov
push
adc
out
fmul
xor
jno
outs
call
ror
xchg
adc
outs
cs
xor
cli
add
mov
dec
xchg
adc
imul
dec
pop
shl
(bad)
fnstcw
fcmovbe
aad
bound
cmps
icebp
mov
data16
loop
gs
sub
jnp
cld
rol
in
and
inc
xor
dec
xor
mov
sub
arpl
cmp
stos
pop
push
adc
lods
and
in
pop
cdq
lods
rol
jne
xor
lea
in
rol
pop
int
call
test
pop
lods
jns
add
add
xchg
scas
(bad)
and
pause
or
or
shl
jle
push
or
retf
adc
scas
data16
fs
fldcw
bound
movs
pop
pop
fidiv
sbb
push
daa
jl
and
push
jmp
jmp
adc
dec
pusha
rcl
add
inc
mov
and
add
fdiv
inc
xor
(bad)
not
mov
movs
jl
mov
das
repnz
aam
push
ret
jnp
rcr
dec
(bad)
cwde
inc
xchg
aaa
sbb
shr
icebp
ficomp
in
xchg
movs
add
loopne
add
ret
dec
repz
add
push
std
ss
dec
xor
and
add
fxam
fscale
mov
or
dec
jmp
and
xchg
sub
out
loopne
and
lds
or
sub
cmps
xchg
(bad)
in
int3
cmps
imul
xor
retf
jecxz
mov
fcmove
call
inc
ds
js
cwde
and
mov
xchg
add
adc
and
ss
ret
xchg
out
push
or
(bad)
iret
loop
into
test
add
retf
inc
push
and
adc
test
lods
jbe
jnp
lds
jnp
jbe
pop
mov
(bad)
(bad)
std
xchg
out
and
xchg
in
mul
jno
add
sub
call
cmps
cmp
test
leave
cmp
inc
ins
fs
imul
in
add
sahf
shl
mov
(bad)
mov
cmp
cmps
xchg
push
push
jns
shr
pop
test
loope
mov
test
repz
fst
ins
push
cwde
das
and
into
push
sbb
cmp
ins
movs
gs
les
and
sbb
jge
mov
fsub
shl
adc
ins
mov
mov
imul
int
inc
jp
adc
push
int3
cld
fwait
mov
inc
pop
ret
mov
scas
sub
or
ret
sbb
fwait
dec
leave
(bad)
movs
fmul
pop
sbb
sbb
lahf
xchg
fmul
retf
mov
xor
fwait
dec
das
lods
outs
(bad)
test
mov
dec
repz
retf
cmp
repz
jb
fist
test
mov
jecxz
or
test
push
clc
dec
sbb
ins
int3
rol
adc
fist
cdq
jb
add
sbb
adc
and
loope
jne
fwait
or
pop
sub
xor
fadd
xlat
out
cli
shl
xlat
iret
cmps
mov
mov
sub
cmp
sub
mov
mov
xlat
movs
xor
mov
das
ins
mov
data16
cmp
scas
mov
repz
xchg
add
into
inc
dec
(bad)
adc
pusha
int
sbb
ret
sub
mov
and
mov
xor
lock
outs
or
mov
pop
dec
je
add
js
fild
xchg
mov
test
or
mov
mov
arpl
nop
inc
mov
jae
icebp
dec
mov
pop
or
lea
inc
xchg
adc
neg
dec
aas
std
pop
dec
push
movs
xchg
sub
xchg
lods
xor
xor
xor
out
cmp
and
sbb
ret
stos
lods
push
and
pusha
loop
push
neg
das
and
retf
push
stos
test
fdivr
cwde
(bad)
fst
fwait
addr16
sub
fld
outs
push
retf
jne
push
cmp
sbb
fnsave
sbb
cmp
pop
nop
rol
out
mov
pop
fwait
iret
mov
gs
mov
(bad)
aam
pop
inc
mov
sub
add
(bad)
add
(bad)
push
push
and
pop
fild
add
push
scas
dec
ins
test
push
pop
jp
pop
data16
cmp
mov
ins
js
sbb
mov
pop
adc
rcl
inc
aam
(bad)
in
push
inc
clc
xlat
cmp
xor
les
hlt
mov
cmps
sbb
pop
push
sahf
jecxz
xchg
repnz
mov
out
popa
cs
into
(bad)
in
and
pop
xor
test
fcmovnb
adc
test
ins
pop
das
add
lock
or
nop
xchg
out
xchg
dec
iret
lods
pop
inc
inc
int3
cmc
mov
sahf
ret
int
inc
leave
fidivr
xchg
ja
dec
jae
mov
cmp
ror
pusha
mov
sub
xchg
arpl
movs
fadd
loope
fbld
aaa
int
xlat
fbstp
xchg
sbb
cmps
add
data16
inc
outs
mov
adc
outs
aaa
pop
lahf
ds
movhps
mov
arpl
es
es
stos
dec
cmp
cmp
push
sbb
(bad)
jmp
popa
int3
and
mov
push
es
dec
hlt
xor
imul
idiv
sbb
repz
rcr
movs
movs
(bad)
mov
xchg
jmp
push
jge
mov
xor
movs
add
repz
loopne
xchg
pop
(bad)
mov
xchg
sbb
xchg
fimul
jecxz
push
sbb
std
xor
cmp
pop
jne
fbld
pop
xlat
js
movs
mov
(bad)
call
jmp
scas
mov
dec
or
add
fnstenv
cmp
cmc
(bad)
pop
add
or
fld
jne
xchg
aaa
loop
icebp
push
mov
mov
xchg
and
jecxz
and
xchg
fidiv
in
rol
cmp
lock
shr
retf
xor
mov
jp
cmps
lods
pop
in
inc
loopne
lea
inc
dec
scas
sbb
in
(bad)
sub
push
lahf
xor
pop
jbe
aad
stos
dec
jecxz
stos
xor
je
xchg
daa
mov
inc
cmp
push
sub
adc
in
movs
xchg
repnz
xor
loope
test
and
mov
pop
inc
call
xchg
pop
popa
or
and
call
sar
iret
sub
out
fidiv
dec
in
jb
cmp
cld
push
fld
stos
jmp
add
pop
fninit
aaa
rol
mov
fsubr
mov
icebp
mov
mov
dec
cwde
xor
adc
jle
in
pop
mov
js
iret
ss
mov
adc
jmp
retf
ins
test
pop
add
mov
mov
out
jge
jmp
jno
pushf
ins
test
test
mov
add
sub
push
loope
adc
xor
stc
push
or
sbb
mov
popf
pop
inc
push
lahf
scas
adc
cmc
jge
stos
imul
xchg
inc
cmp
call
pop
or
push
xchg
mov
fcmovb
dec
call
and
jp
push
sbb
dec
(bad)
fadd
cli
sbb
lock
call
jge
inc
mov
push
mov
push
cmp
pop
mov
(bad)
es
mov
xor
popf
rcl
add
cmp
outs
(bad)
jae
mov
sub
dec
mov
mov
inc
mov
jne
and
and
jb
ins
outs
rcl
cs
mov
mov
or
jmp
sbb
and
pushf
cmp
and
mov
add
fs
lahf
mov
sub
fwait
jge
loop
(bad)
(bad)
icebp
cmp
pop
nop
pop
mov
xchg
aas
xchg
sbb
dec
mov
mov
rol
iret
add
xchg
mov
jae
and
inc
mov
sbb
xchg
mov
cmp
adc
push
(bad)
jmp
mov
cdq
imul
pop
mov
outs
fisubr
sub
in
sub
push
stc
mov
pop
scas
cmp
jns
pop
inc
push
xor
or
std
sub
es
hlt
ja
call
lock
in
(bad)
(bad)
int3
jo
push
pop
dec
or
adc
ret
or
clc
mov
cmps
bound
adc
aas
mov
xor
sub
sbb
xor
pop
push
cmps
imul
fldcw
xchg
xchg
mov
jno
xlat
ins
xchg
and
fstp
test
mov
xor
mov
or
nop
mov
mov
jnp
sub
jl
adc
cmc
or
iret
ja
ds
and
jae
retf
aam
jno
cmp
mov
push
and
shl
ins
mov
cmc
imul
pop
mov
imul
and
sub
imul
cmp
add
cmps
std
sbb
sub
aaa
shl
(bad)
aad
mov
ds
pop
js
add
daa
xor
fst
or
loop
inc
push
dec
mov
mov
sub
and
add
and
sbb
mov
xchg
ds
cdq
jge
add
(bad)
and
push
pusha
jge
jecxz
inc
push
and
mov
sub
fistp
pop
mov
retf
scas
iret
pop
imul
out
es
ja
push
mov
xor
mov
test
pop
mov
cwde
int3
call
mov
xchg
jbe
fs
sbb
arpl
xor
or
fimul
pop
aad
cmp
test
int
jnp
dec
mov
pop
out
adc
sbb
pop
xchg
sar
fs
mov
rcl
out
xor
mov
jb
mov
cwde
cmp
ret
mov
ror
out
inc
fsub
mov
shr
add
dec
xchg
imul
(bad)
fiadd
arpl
and
(bad)
sbb
bound
repz
mov
push
lods
repnz
xchg
in
dec
loop
sub
mov
bound
push
dec
dec
or
dec
dec
or
inc
push
scas
std
adc
in
lods
(bad)
adc
out
cwde
inc
pop
pop
icebp
push
pop
pop
(bad)
mov
fcomp
cmp
cwde
sbb
ret
push
in
retf
xchg
fist
out
and
jp
imul
out
and
mov
and
mov
push
pop
mov
mov
push
dec
sbb
xor
sbb
in
into
jge
push
dec
(bad)
(bad)
test
push
aas
add
jmp
fwait
fwait
xor
pop
lock
popf
sbb
dec
push
clc
xchg
fnstenv
int
inc
iret
neg
cmps
adc
pop
ins
popa
xor
int
lods
retf
pop
push
div
lahf
loop
adc
enter
call
mov
arpl
lea
mov
jmp
push
mov
dec
xor
add
sti
adc
jge
ret
dec
cli
rcr
sahf
shl
mov
loopne
(bad)
mov
inc
not
cmp
push
cmc
cmp
aaa
out
mov
and
test
or
cmp
xor
(bad)
xor
lahf
movs
fidiv
imul
ins
pop
sub
push
mov
icebp
and
aas
or
mov
stos
push
xchg
sbb
push
cli
cld
add
or
fsubp
cld
push
xchg
jne
imul
mov
push
test
out
not
jnp
add
jge
inc
mov
imul
scas
or
les
(bad)
sbb
lea
mov
sar
jnp
push
lahf
xchg
or
or
push
stos
pop
inc
aaa
pop
xchg
xor
xlat
jbe
loopne
mov
jl
cmp
jge
lds
adc
mov
scas
leave
outs
sub
adc
sbb
shl
test
xor
loope
test
enter
fimul
(bad)
out
arpl
xlat
enter
xchg
inc
inc
cmp
jg
repnz
movs
dec
cwde
xor
gs
mov
jnp
scas
push
fisttp
int
xabort
sbb
jae
jbe
mov
stos
fisubr
dec
pusha
sbb
sbb
inc
mov
test
push
in
(bad)
cmp
call
add
jp
ret
rcl
mov
(bad)
cmp
stc
stos
int3
jg
push
dec
xor
je
ret
push
(bad)
hlt
push
push
ret
das
cmp
fsubr
daa
sbb
shl
xchg
push
ret
hlt
test
xor
mov
outs
test
cmps
test
scas
dec
cs
mov
or
add
movs
pop
mov
dec
ror
stos
fdiv
cmp
jmp
das
inc
pop
dec
mov
mov
jns
out
out
or
dec
xor
xchg
push
cmp
cs
inc
aaa
inc
cs
das
push
pop
ret
enter
fucomi
jp
jg
sub
adc
es
and
and
ror
fcmovbe
jbe
xchg
and
ds
lds
mov
push
mul
pop
dec
xor
adc
iret
cld
rcl
aaa
hlt
mov
hlt
mov
adc
sbb
repnz
call
and
sbb
imul
lahf
cmp
mov
inc
push
inc
clc
mov
es
jp
push
push
(bad)
(bad)
clc
pop
aam
add
add
push
adc
pop
imul
cmp
add
pop
pop
fst
cmp
ins
pcmpeqw
js
nop
mov
rcl
inc
mov
shl
mul
xchg
sub
movs
add
or
and
ror
int
fisub
shl
sbb
cmps
hlt
cmp
adc
ret
out
aaa
popf
sub
shl
pop
lods
xchg
cmp
scas
push
call
or
mov
(bad)
scas
adc
nop
or
aaa
pusha
sar
cdq
iret
les
xchg
mov
rol
mov
daa
icebp
in
ror
add
xchg
out
sahf
cli
and
inc
mov
(bad)
pop
and
jge
icebp
xchg
push
mov
je
ss
sahf
not
js
sub
mov
aam
add
cmp
test
jp
loope
mov
and
sub
and
mov
aam
sub
outs
fidivr
rol
inc
pop
in
xchg
pop
lock
xchg
cmp
retf
push
cmps
stos
jno
xor
jb
cmp
mov
mov
add
dec
movs
cmps
leave
jge
add
cmc
dec
loop
ret
cmp
mov
inc
je
retf
icebp
fbld
add
test
retf
mov
add
stos
ret
mov
aaa
add
push
mov
shl
and
mov
pop
frstor
punpcklwd
stos
scas
push
dec
(bad)
mov
inc
dec
xor
outs
inc
inc
and
add
fld
cmp
or
call
or
into
imul
sbb
fstp
outs
and
outs
xor
mov
or
cmp
pop
cmp
jl
je
js
loop
sbb
out
stos
les
mov
rcr
sub
popa
(bad)
enter
push
and
inc
jne
shl
aas
loopne
fimul
mov
stos
das
nop
out
push
mov
or
sbb
(bad)
pop
(bad)
sti
xchg
push
sbb
mov
popf
adc
xchg
fimul
ret
ins
sub
jl
fucomi
dec
arpl
add
mov
mov
jmp
add
mov
sbb
sub
lods
push
(bad)
daa
rcl
pop
or
mov
sbb
sbb
inc
cmp
pop
sar
fimul
std
cmp
cs
icebp
arpl
push
das
fcmovnbe
mov
mov
das
add
mov
dec
ror
jl
mov
xchg
cmp
cld
call
pop
xor
cmp
test
cmp
add
fidivr
popf
or
sbb
cli
push
xchg
ds
mov
call
ins
fidivr
lock
jle
mov
adc
shr
imul
inc
(bad)
movs
mov
fld
mov
pop
pop
dec
adc
int3
mov
outs
out
or
xchg
mov
cwde
and
test
cmp
jmp
cmp
jl
push
mov
ret
pusha
js
repnz
add
mov
lods
inc
jmp
test
cmp
inc
ret
pop
jnp
jg
mov
add
push
fld
out
jg
jo
pop
pusha
cmp
je
sti
dec
cld
adc
aam
jl
xor
push
push
cmps
repnz
mov
jle
into
xor
cmp
loope
sbb
pop
adc
mov
jae
stos
sub
mov
add
pop
jne
test
mov
js
lea
adc
sub
outs
cmp
sti
adc
inc
jb
scas
fcom
add
sub
xor
loopne
scas
dec
mov
test
inc
mov
mov
sbb
mov
test
cmp
and
ja
cmp
sti
cs
pushf
aam
scas
xor
add
sbb
scas
mov
aam
xor
je
out
sar
jmp
pop
(bad)
and
adc
lock
lahf
push
hlt
stc
push
sbb
aaa
fs
pusha
in
cmps
(bad)
jg
cli
call
(bad)
pop
jge
xchg
fwait
retf
jecxz
outs
neg
call
lea
jb
dec
iret
or
adc
movs
jo
fnstenv
jmp
mov
inc
mov
aad
cmp
(bad)
iret
addr16
and
aad
dec
push
mov
mov
xchg
cmp
adc
cli
xchg
mov
pop
not
pop
add
loope
xor
fisttp
les
or
xchg
push
les
push
mov
aam
fbld
jae
mov
aaa
add
push
or
push
mov
into
data16
cmp
add
scas
lea
test
icebp
pop
out
mov
retf
dec
enter
xor
or
call
adc
es
adc
add
gs
mov
dec
sbb
lds
cmp
lea
repz
loope
and
test
xchg
push
jg
sbb
ret
sbb
call
mov
and
(bad)
pop
jecxz
test
imul
gs
sub
pop
push
cli
mov
gs
or
mov
inc
sti
addr16
push
mov
xlat
sbb
xchg
test
int3
fwait
cmc
mov
dec
in
pop
dec
dec
dec
jae
or
mov
mov
leave
or
xchg
loope
or
pusha
inc
mov
jl
xchg
test
(bad)
daa
adc
and
movs
sbb
xor
xor
imul
jns
push
push
stos
sbb
ss
xor
sub
loop
push
jp
stos
call
ficomp
and
sti
in
ds
jle
or
repz
or
adc
shl
mov
popa
stos
test
test
popf
out
fwait
mov
in
cmp
test
mov
inc
xor
punpcklbw
addr16
and
and
sub
push
adc
mov
nop
sub
es
jmp
jno
xor
adc
mov
cli
sbb
mov
jp
add
repz
mov
pushf
mov
mov
pop
shl
repz
inc
aam
mov
dec
in
retf
adc
out
add
dec
pop
dec
xchg
stos
xchg
jae
cmp
pop
rcr
jle
adc
mov
sahf
sahf
and
in
pop
imul
xor
xor
add
add
nop
inc
iret
jno
adc
test
imul
xchg
jge
sub
imul
lahf
push
js
mov
pop
jae
enter
pop
aad
cmp
push
sbb
icebp
repz
mov
or
xchg
repnz
dec
xchg
fs
daa
xchg
pop
ja
or
sbb
pop
mov
push
jns
cmp
jb
pop
xor
loopne
mov
mov
lahf
and
xchg
mov
add
aad
sti
popf
mov
and
ins
dec
retf
in
or
jo
repnz
xchg
inc
jae
adc
jl
pop
scas
jecxz
sets
adc
cmp
xchg
adc
or
cdq
outs
xor
je
mov
mov
push
cmp
pop
add
dec
jmp
mov
stos
add
cmp
jp
imul
stc
lods
pushf
mov
das
loop
mov
repnz
xchg
and
push
add
cmp
inc
pusha
dec
pop
cmp
out
lods
dec
hlt
jne
inc
and
push
iret
jmp
pop
jns
add
loope
iret
xchg
sbb
push
(bad)
dec
and
xor
cmp
out
xchg
leave
js
lds
cmp
ds
sub
loope
cwde
daa
xlat
xor
jo
push
int
jl
push
mov
inc
mov
pop
push
cli
inc
xchg
test
push
mov
dec
in
ret
ret
rcl
mov
jae
test
jmp
repz
xlat
cmc
xor
and
sbb
push
mov
cld
sbb
or
cmp
add
jg
aaa
jl
icebp
adc
sub
jp
push
or
lahf
xchg
jnp
mov
(bad)
pop
loopne
cmp
cmc
jmp
jle
nop
lds
xchg
dec
cmc
mov
adc
add
and
xchg
mov
in
dec
mov
push
(bad)
and
call
cmc
push
xlat
sar
fisttp
inc
arpl
ins
push
mov
push
sub
mov
popa
push
fnstsw
or
mov
iret
bound
(bad)
xchg
addr16
jnp
jle
jl
imul
popa
or
jl
enter
aad
add
stos
out
test
xor
dec
hlt
test
movaps
xchg
inc
(bad)
xor
jbe
shl
or
xchg
loopne
pushf
pop
mov
cld
addr16
inc
mov
out
or
jns
push
out
sbb
mov
in
into
addr16
fidiv
(bad)
mov
je
pusha
arpl
cli
std
add
add
mov
rcl
hlt
add
push
out
add
lea
lahf
iret
bound
adc
fisub
shl
sahf
imul
jl
pop
mov
add
and
adc
leave
add
jo
cmps
xchg
movs
mov
and
pop
pop
pusha
pop
call
sub
es
add
retf
rcl
fs
das
test
div
inc
xchg
data16
idiv
fsubr
imul
sar
cli
xor
inc
mov
stc
jecxz
ins
gs
call
add
jmp
ins
popa
imul
or
fld
jno
xor
daa
adc
and
rcl
out
test
push
xchg
mov
mov
sti
sar
sar
(bad)
bound
not
or
stos
fcmovb
stos
mov
jb
pop
jne
mov
xor
mov
mov
ins
xchg
and
adc
xchg
loop
imul
pop
push
fs
jo
xchg
mov
lock
cli
cmps
pop
ror
bound
mov
out
dec
mov
cmps
mov
sub
dec
sbb
dec
jae
stos
push
lds
in
dec
xchg
cdq
lods
and
jecxz
dec
adc
sbb
inc
xlat
dec
gs
sar
mov
cmp
push
push
aad
out
fdiv
sti
(bad)
test
inc
push
mov
ins
and
add
lea
cmp
inc
ret
inc
jae
repz
into
pusha
icebp
aad
arpl
lahf
xlat
or
sub
bound
out
aam
inc
iret
lods
ds
(bad)
leave
aam
or
push
adc
cmc
fwait
ss
es
mov
test
xor
inc
icebp
inc
and
iret
call
xor
inc
dec
js
sbb
fisubr
mov
fucomp
pop
xchg
data16
arpl
outs
inc
add
ret
jno
pop
scas
(bad)
shl
add
enter
pushf
leave
and
arpl
inc
in
push
add
outs
ins
ficomp
test
mov
add
enter
push
pop
jmp
repz
in
mov
lea
movs
push
mov
aad
arpl
push
scas
outs
int3
cmps
fidivr
(bad)
daa
jae
sar
jne
xor
ins
pop
into
mov
mov
jmp
and
dec
scas
sbb
push
sbb
fild
mov
rcl
arpl
prefetcht1
ret
or
(bad)
neg
popa
jg
pushf
add
iret
cs
cmps
fsubr
mov
inc
xchg
cmp
(bad)
(bad)
jg
iret
fnstenv
mov
cmps
push
adc
pop
leave
(bad)
cli
xchg
lea
dec
push
inc
or
and
push
dec
out
cmp
and
mov
ss
pop
xchg
sub
dec
jns
loopne
mov
and
jnp
outs
jns
or
aaa
cdq
mov
mov
jmp
sub
in
clc
cmp
mov
xchg
imul
jnp
push
push
rcl
mov
jle
push
test
lods
xor
jne
xor
scas
adc
sbb
pop
xchg
xchg
loope
in
xchg
cs
mov
pop
adc
add
and
mov
je
dec
stc
jecxz
xchg
and
mov
popa
adc
adc
cdq
cmp
(bad)
lahf
adc
or
lea
mov
jl
push
ins
mov
(bad)
pop
inc
test
lea
adc
outs
jge
add
mov
movs
lahf
sete
xchg
jp
or
inc
js
sbb
scas
pop
pop
push
(bad)
es
cmp
and
jno
cli
stc
(bad)
repz
push
and
push
stc
mov
push
movs
bsf
cs
cmp
imul
jge
or
imul
fadd
inc
loop
movs
std
into
inc
add
mov
push
jno
gs
pop
inc
xchg
add
lock
fistp
call
add
fnsave
add
dec
fidiv
rcr
imul
mov
push
mov
mov
fidivr
inc
push
ss
out
in
add
xchg
mov
jmp
std
inc
push
fmul
retf
loopne
mov
fistp
clc
jge
stos
jge
cmp
jecxz
stc
inc
int
sahf
cwde
in
or
mov
xchg
loop
cmp
xlat
or
pop
push
inc
adc
push
mov
enter
sbb
mov
stos
fadd
movs
stos
xor
jle
inc
add
sub
mov
(bad)
sub
js
aad
sbb
push
jg
aad
jbe
fild
pop
(bad)
sbb
xor
mov
stos
cmc
and
sub
adc
dec
cmp
sbb
and
pusha
sbb
push
(bad)
and
and
or
dec
retf
xlat
lods
mov
scas
movs
cmp
cmp
push
sub
mov
les
push
cmp
fdiv
les
pop
loopne
mov
mov
(bad)
es
aas
test
xchg
push
xor
in
enter
scas
or
xor
pushf
and
test
mov
inc
xor
dec
push
(bad)
dec
pop
out
mov
imul
and
inc
pop
dec
mov
in
cld
fnstsw
cs
dec
xchg
test
stos
and
stc
xor
lods
cs
mov
adc
ret
stos
out
sbb
enter
and
and
shl
pop
jle
jmp
mov
int
rcl
jo
movs
cli
dec
scas
mov
and
sub
sbb
pop
pushf
cmp
ret
sar
jecxz
retf
imul
scas
mov
adc
scas
(bad)
and
push
xchg
leave
sbb
and
dec
mov
push
mov
test
pop
jno
js
mov
add
xor
loopne
movs
inc
dec
rcr
or
cwde
loop
and
pop
mul
adc
or
arpl
int
pop
and
out
xchg
test
inc
pop
arpl
mov
mov
xchg
dec
jb
lods
inc
jmp
jbe
xchg
mov
arpl
xchg
jg
loopne
jecxz
in
pop
inc
ja
xor
movs
mov
inc
shl
pop
mov
in
add
jg
movs
jb
mov
(bad)
mov
mov
adc
lahf
fld
add
repz
xchg
in
cmp
lock
jg
hlt
scas
fdivrp
dec
mov
push
enter
push
movs
dec
cmps
in
fisttp
arpl
fsub
dec
dec
test
xchg
xor
gs
jnp
out
test
std
lea
das
mov
push
arpl
daa
push
movs
pop
arpl
lea
jge
cdq
jmp
push
xchg
movs
adc
xor
adc
int
repnz
test
fcmovb
(bad)
adc
test
or
out
cld
cmp
adc
jnp
sub
inc
loop
scas
test
ins
mov
add
icebp
lods
inc
cmp
into
jb
pop
add
retf
jle
xchg
mov
lea
cwde
add
fst
fisubr
jp
ins
cmp
sub
dec
test
imul
pop
iret
xor
cmp
xchg
(bad)
loopne
fs
dec
lods
psubsw
icebp
xchg
ds
or
ret
dec
les
dec
pop
std
loope
jbe
fidiv
lods
pop
cmps
in
not
div
hlt
call
shl
das
sbb
xor
rol
rcr
sti
aaa
inc
fimul
pop
outs
lahf
pop
inc
mov
shr
jle
sbb
ret
mov
pop
call
pop
scas
stos
xor
jle
repnz
popf
mov
pop
mov
(bad)
mov
inc
mov
rcl
call
add
in
jp
(bad)
cmp
das
imul
mov
aad
sbb
pop
push
xor
mov
and
out
cmp
push
add
sbb
test
xchg
shl
sbb
jl
xchg
inc
call
push
rol
mov
cmp
std
dec
addr16
neg
mov
arpl
in
in
sbb
mov
sub
cmps
sbb
call
scas
sub
out
lea
cld
xchg
push
sbb
repz
out
mov
sti
or
fs
fs
leave
mov
in
int
pop
sub
push
sar
xchg
cmp
shl
and
inc
stos
add
rcl
jp
mov
push
push
sbb
js
jno
cmp
fs
or
cs
pop
pop
aam
xor
test
lahf
int
sub
jnp
in
aas
out
nop
(bad)
jns
loope
popa
jns
add
pop
inc
out
pop
add
pop
(bad)
push
jbe
pop
stos
int3
outs
mov
xor
inc
jne
jnp
adc
sub
sub
push
jp
stos
sbb
loop
in
cmc
add
pop
pop
inc
repz
inc
sub
gs
xchg
popf
loope
leave
xchg
or
pop
fxtract
mov
pop
scas
mov
daa
or
or
xor
rcl
sar
mov
clc
gs
rcl
fnstsw
sahf
iret
add
fist
jg
shl
retf
or
call
lods
pusha
pop
lods
clc
bound
fwait
add
out
pop
push
and
inc
jecxz
xor
and
(bad)
cwde
inc
nop
cmp
xor
inc
add
push
bound
mov
aas
hlt
lock
push
jb
adc
mov
xchg
inc
or
pop
mov
and
fsub
push
scas
jae
fcmovnbe
and
imul
sub
(bad)
sti
jnp
(bad)
out
ins
xor
cmp
add
sbb
test
jle
leave
push
icebp
jns
inc
mov
cmp
nop
mov
fbstp
mov
shr
and
jmp
dec
cmps
jp
mov
(bad)
lock
not
ins
lds
sbb
and
pop
xor
out
or
xchg
cwde
mov
jl
cld
adc
cmp
jo
and
pop
ss
icebp
dec
fdivr
dec
cmp
stc
cwde
jp
sbb
movs
pop
dec
add
adc
inc
push
test
sbb
sbb
pop
sar
fisubr
gs
movs
mov
(bad)
mov
mov
dec
lock
mov
fnstcw
push
pop
test
fdivr
mov
inc
lods
push
sub
hlt
sar
stos
call
sbb
push
push
xor
ins
xor
dec
imul
add
in
stc
adc
je
(bad)
xor
or
mov
push
out
stos
data16
mov
loope
outs
rcl
imul
repz
out
gs
xlat
or
push
nop
dec
pop
inc
jge
test
sbb
xlat
mov
push
jmp
in
mov
test
lea
movs
not
mov
aam
mov
imul
mov
add
xchg
adc
add
mov
int3
fmul
in
sahf
jo
das
push
jae
aaa
xchg
mov
cmp
daa
ja
test
shl
cwde
xchg
popa
inc
imul
mov
add
or
xchg
jo
lods
adc
pop
and
jb
inc
in
sub
inc
lea
mov
repnz
in
mov
test
out
das
out
cmc
aas
push
stos
push
push
cdq
push
mov
pop
call
sub
push
adc
push
clc
in
in
mov
jbe
inc
lods
push
mov
neg
jbe
and
rcr
das
ret
repnz
gs
es
pop
inc
loopne
pop
mov
retf
pop
xor
xor
inc
test
and
cwde
lock
lds
pop
and
pop
jl
call
ins
icebp
mov
aad
jne
sub
outs
or
(bad)
xchg
mov
sub
out
lock
jge
scas
lahf
xor
add
dec
out
js
sbb
scas
je
or
xchg
mov
ror
shl
mov
mov
retf
jb
into
repz
mov
shl
call
sbb
bound
jno
mov
cdq
mov
push
pop
push
in
pop
pop
add
cmps
xchg
stos
adc
daa
mov
in
ss
and
mov
outs
jmp
sti
dec
xor
inc
es
dec
and
push
push
sub
dec
mov
js
fistp
cmc
ret
cmc
into
jo
test
rcl
ins
dec
repz
sbb
jno
push
mov
cmp
xchg
es
sub
mov
xchg
sahf
ja
outs
jp
(bad)
ror
jne
sbb
mov
xchg
push
arpl
std
vhsubps
jge
int3
mov
pop
add
add
pop
or
js
iret
outs
push
inc
(bad)
add
cmp
and
adc
mov
scas
dec
(bad)
jmp
stos
cmp
movs
xchg
cwde
adc
pop
test
inc
push
push
pop
cmp
mov
push
pusha
xchg
jp
mov
test
ja
inc
sub
mov
cmps
mov
gs
jl
rcl
mov
push
add
lods
aam
dec
pop
mov
push
psraw
loope
push
test
or
shr
xor
xor
or
jecxz
mov
mov
std
pop
xchg
add
push
push
pushf
lods
jns
jne
lock
and
pop
inc
shl
cmp
icebp
repz
ds
aam
mov
push
in
aad
cwde
and
ds
push
adc
ds
adc
call
add
add
xchg
or
int3
jno
or
add
ret
mov
int3
(bad)
into
cmp
es
jle
fdivr
cdq
in
mov
sub
pop
imul
test
jmp
pop
lahf
out
push
push
in
push
fdivr
shl
mov
jge
lock
sub
and
dec
imul
dec
mov
and
retf
mov
mov
movs
push
cs
call
pusha
frstor
sbb
cli
jo
test
sti
push
push
ds
gs
jmp
iret
loope
add
adc
ins
aad
mov
pushf
sub
pop
(bad)
retf
dec
and
dec
test
sti
mov
dec
mov
jge
dec
pop
xor
mov
nop
push
aas
fild
dec
(bad)
adc
and
retf
xor
ror
lock
sub
jmp
icebp
fiadd
xchg
out
je
or
xor
in
cld
mov
loope
popa
retf
and
adc
bound
cmp
mov
adc
enter
sbb
sbb
jo
stc
cmps
inc
stos
bound
popf
adc
test
xchg
rol
push
push
int
fistp
loope
imul
into
jle
cmc
pushf
dec
ror
out
test
cmp
pop
push
jne
xchg
xor
call
movs
(bad)
sbb
(bad)
out
jne
shl
lods
mov
inc
mov
pop
dec
popa
rol
pop
mov
data16
sti
iret
add
cmp
jmp
pop
enter
push
lahf
movs
xchg
pop
int3
dec
leave
cmp
mov
sahf
inc
or
js
arpl
push
add
enter
in
sar
int
add
aad
fistp
inc
rcr
push
jb
adc
out
out
enter
jne
pushw
and
xchg
scas
cmps
ss
inc
xchg
(bad)
jg
call
mov
or
pop
sbb
fsub
fsub
test
cmp
mov
ret
cmp
sbb
or
sub
fstp
lods
lods
xchg
jg
inc
clc
add
sar
test
(bad)
xchg
add
scas
ficomp
sub
gs
mov
stos
mov
inc
xchg
mov
scas
add
and
int
xor
les
sub
aam
add
push
arpl
test
fisttp
adc
ror
das
les
in
dec
mov
fst
faddp
pop
or
fst
fst
popa
mov
enter
push
mov
add
ds
sbb
lods
in
sbb
jae
loope
aaa
and
pop
add
xchg
jecxz
adc
mov
outs
retf
mov
push
shr
add
jns
xor
xchg
sub
push
sub
xlat
mov
lea
add
inc
adc
cmp
xchg
out
mov
stos
cwde
cmps
inc
cli
les
adc
sbb
cmp
jl
mov
pop
lea
cld
cmp
enter
adc
aad
jo
jmp
iret
(bad)
pop
mov
fs
jmp
xchg
stos
and
sub
aad
fdivr
xor
sar
cmp
sti
jo
lock
dec
mov
mov
sbb
nop
push
add
leave
inc
int3
scas
clc
js
sub
push
xlat
sbb
stos
mov
mov
and
cmps
and
into
int
pusha
sbb
pop
adc
inc
shl
idiv
pop
mov
inc
andnps
pusha
das
pop
adc
mov
and
mov
rol
push
mov
and
lods
(bad)
dec
test
jnp
jle
bound
pop
lods
sbb
or
sbb
cwde
add
mov
push
(bad)
in
sbb
out
in
and
mov
lea
iret
and
adc
inc
sub
jnp
out
inc
mov
call
sbb
or
inc
(bad)
jmp
pushf
add
(bad)
jmp
dec
mov
test
in
jl
loope
mov
jmp
js
inc
cdq
mov
jmp
adc
ds
enter
aad
daa
int3
outs
out
dec
xchg
mov
vmwrite
or
sub
les
shr
data16
out
shl
xchg
pop
out
bound
pop
jo
cmc
retf
cmp
icebp
in
jb
sbb
popa
jbe
jnp
add
inc
and
mov
inc
ror
push
dec
inc
(bad)
lock
and
mov
cmp
cwde
inc
int
bound
sub
cli
popf
inc
dec
dec
jecxz
loope
mov
pop
adc
call
out
cwde
lods
mov
pusha
push
ss
push
jae
les
xchg
sbb
sbb
popf
and
mov
xchg
jb
std
jmp
push
cmps
jo
scas
mov
in
cmps
mov
mov
push
std
hlt
or
adc
(bad)
mov
pop
ds
rol
mov
sbb
fsubrp
push
xchg
lea
mov
fisubr
dec
out
nop
push
icebp
xor
push
test
cmp
int
cmps
jo
push
mov
sub
xchg
pusha
pushf
leave
jmp
es
xor
jae
mov
mov
mov
push
jnp
ja
dec
dec
add
push
stc
jne
sbb
dec
stc
or
pop
jo
call
xor
adc
xor
xchg
fdivr
add
arpl
idiv
ss
xchg
clc
push
mov
mov
jmp
adc
test
sub
inc
xor
lods
push
shl
les
sub
das
mov
add
inc
adc
pop
or
add
bound
pop
(bad)
out
inc
pop
jl
inc
jle
adc
fwait
push
mov
fucomip
repnz
cli
popa
out
sub
popa
mov
arpl
(bad)
leave
mov
jl
add
pop
xor
stc
aaa
stos
es
fidivr
(bad)
lds
shld
fiadd
lock
add
jne
sub
aad
fisttp
div
push
std
(bad)
je
sub
cmps
adc
mov
shl
push
dec
push
das
lds
lds
xchg
stos
imul
or
adc
xchg
ds
in
arpl
push
sbb
mov
lea
jecxz
cld
ret
imul
iret
lds
push
xor
adc
cmps
pop
adc
js
dec
and
call
sti
push
dec
xchg
retf
sub
cli
inc
jge
push
les
dec
jl
adc
or
aam
push
add
outs
stos
adc
mov
outs
fmul
mov
stc
enter
lock
fs
fisttp
dec
mov
push
jg
(bad)
mov
repz
nop
cmp
fbstp
mov
mul
mov
mov
adc
lock
xor
cmps
fxch
jne
arpl
sbb
mov
pop
cmp
test
in
xor
mov
and
ja
adc
popa
mov
xor
xchg
(bad)
push
fisubr
inc
cmovns
out
mov
(bad)
(bad)
jecxz
out
jp
dec
push
xchg
popa
aam
inc
lea
inc
mov
mov
fsubr
xchg
ss
sbb
inc
mov
pop
inc
push
or
jbe
icebp
jbe
cmp
daa
cmp
lods
mov
stos
dec
clc
add
cmp
aad
inc
call
mov
inc
fs
arpl
mov
mov
shl
sbb
ins
push
(bad)
stc
and
lock
fldpi
xor
push
add
sub
pop
test
sbb
inc
jb
or
int
add
push
cmc
ins
jne
imul
idiv
and
enter
sub
jno
pop
add
xor
and
sub
cmc
shl
(bad)
(bad)
dec
add
(bad)
call
das
es
cmps
je
pop
fisubr
push
inc
pop
dec
jno
dec
and
adc
shl
push
and
std
push
mov
and
pop
push
sbb
jmp
fs
lods
pop
pop
ja
pop
push
sub
cmp
push
and
les
aas
mov
mov
loop
cmp
mov
mov
enter
xchg
imul
mov
jle
xor
ret
test
lahf
jge
jge
push
std
mov
imul
rcr
ins
stos
lods
cs
xchg
(bad)
mov
mov
movs
adc
mov
and
mov
pusha
mov
add
mov
mov
imul
mov
(bad)
push
(bad)
scas
leave
adc
xchg
rcl
add
xlat
test
pop
xchg
cmp
iret
mov
clc
leave
fistp
mov
dec
xchg
add
in
sbb
clc
sub
fs
inc
xchg
lods
push
mov
add
test
sti
test
jl
fld
mov
shl
add
(bad)
or
stc
lds
ja
out
ret
fldcw
mov
stos
mov
sub
xor
xor
movs
cmps
sbb
imul
push
mov
je
xor
call
sti
push
mov
sbb
cmp
xor
xchg
sahf
jle
xor
dec
leave
xor
retf
cmp
aad
dec
dec
sub
xor
fstp
stos
jae
jecxz
cmp
or
fidivr
popa
jmp
xchg
mov
mov
jmp
jecxz
arpl
popf
pop
repnz
inc
jae
mov
jbe
and
dec
xlat
cmp
fidiv
scas
sub
pop
pusha
xchg
movs
pop
jle
stos
mov
leave
mov
call
out
xchg
addr16
iret
xchg
adc
mov
add
xor
cwde
and
adc
popa
sbb
and
jmp
push
push
xor
lds
popa
pop
out
and
dec
jg
and
ins
call
aad
call
xchg
jae
pushf
jb
and
pop
mov
xor
cmp
pop
popa
inc
imul
or
pop
call
mov
mov
aam
int
add
mov
mov
fiadd
fwait
stc
rcl
daa
call
xchg
jae
int3
push
js
in
or
add
cdq
loop
cmp
aad
push
push
dec
into
adc
push
mov
and
jo
or
ffreep
push
cmp
aam
jns
adc
neg
les
mov
cwde
jb
out
pushf
pop
movs
or
adc
lds
popa
(bad)
retf
sbb
ret
out
fbstp
jno
add
fwait
sbb
mov
std
shr
cdq
ret
aaa
mov
imul
ret
push
and
pop
mov
jns
jae
sbb
mov
xchg
and
jecxz
push
xor
pusha
mov
data16
sbb
and
add
adc
pushf
fisttp
or
out
repnz
out
dec
popa
mov
popa
mov
sub
cmp
sub
inc
daa
sbb
shl
(bad)
cmp
push
pop
fist
push
push
pusha
adc
js
outs
(bad)
cmp
push
push
test
add
icebp
inc
(bad)
stc
dec
je
add
jle
adc
jmp
sub
loop
or
add
out
ret
mov
push
ret
movs
les
xor
or
enter
xchg
int3
pop
sub
loope
add
xchg
lock
jg
ja
jnp
xor
mov
dec
xchg
in
inc
sahf
dec
mov
jns
mov
mov
stos
push
pop
je
mov
scas
jge
sub
popf
xchg
xor
scas
stos
jne
mov
das
mov
iret
mov
jle
xor
ret
mov
mov
sbb
mov
fsub
js
enter
inc
or
xor
aas
and
std
or
jo
xchg
inc
mov
loopne
clc
aaa
je
add
or
xor
cs
mov
in
dec
les
pop
outs
xor
enter
inc
icebp
and
shl
fdivr
xor
sub
hlt
scas
xchg
leave
rcl
xchg
xlat
in
inc
(bad)
rcl
repz
or
jne
je
js
aaa
mov
dec
aam
das
je
pshufw
sahf
jae
(bad)
std
mov
cmp
adc
fs
sub
jle
adc
jne
add
sar
mov
loop
xchg
loop
inc
pop
mov
hlt
mov
mov
pop
jge
psrlq
add
fsubr
mov
inc
and
inc
arpl
jp
int3
retf
inc
int3
rcr
dec
pop
repz
les
int3
and
adc
xchg
pop
xor
test
arpl
lods
mov
xor
or
in
loop
enter
cmps
and
jns
jb
fucomi
inc
out
test
pop
pop
sub
push
lahf
pusha
loope
lods
cmps
xchg
(bad)
out
push
jge
push
ret
mov
fidiv
mul
cmp
or
fist
sub
push
mov
js
out
add
stos
xlat
fs
int3
iret
push
inc
xor
imul
iret
lods
ret
movs
cmc
test
mov
push
sbb
mov
out
adc
outs
ja
jae
cwde
xor
pusha
das
loop
lea
out
int
fwait
repnz
in
and
fidivr
xchg
jl
fadd
mov
jb
out
mov
pop
add
test
adc
mov
add
jl
cmp
mov
add
or
jmp
out
push
movs
test
out
scas
mov
xchg
push
ja
fild
xor
xor
ins
nop
loop
(bad)
or
jle
repnz
test
mov
push
ds
dec
push
pop
sbb
jne
rcl
jno
repnz
jmp
shl
add
or
lods
mov
inc
call
mov
pop
sbb
cmp
pop
cmps
test
dec
nop
jae
pop
dec
arpl
ja
jecxz
lds
sub
mov
shl
push
mov
sub
add
cmc
bsr
icebp
pop
sbb
fdivr
add
xchg
shl
sbb
adc
ret
repz
ins
xor
inc
lea
adc
pop
pop
das
sub
mov
pop
lahf
xchg
cmc
pop
rcr
and
cs
(bad)
jno
jo
fadd
stos
cmp
pop
push
jge
pop
ffree
and
adc
push
xor
cmp
mov
add
scas
ficom
fndisi(8087
cmp
aad
(bad)
(bad)
pop
lahf
sbb
xor
xchg
mov
jl
sahf
aas
pusha
retf
jae
mov
inc
push
push
mov
push
mov
jae
in
sbb
(bad)
clc
call
jmp
pop
sbb
shl
inc
pop
jg
scas
mov
shl
popf
mov
xchg
fwait
and
das
fild
mov
push
into
sbb
adc
nop
sar
adc
jge
into
not
fst
lock
jo
push
lahf
fwait
cmps
out
sub
xchg
and
xchg
(bad)
loopne
movs
jbe
xchg
adc
mov
cmp
mov
int
std
mov
jo
push
int3
ret
scas
xor
in
inc
sub
aaa
outs
xor
and
mov
(bad)
loopne
push
gs
xchg
in
mov
test
sub
arpl
or
adc
(bad)
out
xchg
jo
xchg
xor
les
or
pop
and
popf
popa
cmp
retf
es
fsubr
mov
mov
adc
cmp
jne
sbb
retf
pop
dec
mov
or
ret
imul
nop
out
push
jb
mov
test
mov
lock
push
test
dec
fstp
addr16
jns
push
rdpmc
push
mov
fmul
push
stos
dec
sbb
outs
fwait
mov
dec
movs
jne
mov
fisub
movs
mov
in
mov
jl
mov
rcr
js
ds
scas
in
lds
enter
ror
xchg
sbb
dec
mov
cli
jbe
jp
adc
add
inc
mov
inc
jae
in
jae
in
sub
js
mov
fbstp
adc
jns
movs
jg
push
pop
mov
(bad)
adc
cli
or
pop
lds
jnp
out
pop
pushf
ja
iret
in
test
dec
mov
out
sub
icebp
and
push
and
mov
xor
sbb
xchg
inc
popf
mov
es
xchg
test
stos
sbb
ja
jmp
es
in
or
push
inc
dec
dec
jle
cmps
cmp
adc
daa
jp
or
mov
mov
aas
pop
or
lock
or
pop
mov
pusha
(bad)
fldcw
adc
add
jo
or
xchg
cmp
xchg
sub
rcr
nop
inc
xchg
and
sub
push
sub
js
push
mov
jmp
cmp
imul
jno
and
jne
popa
ftst
dec
mov
mov
jns
jg
bound
cmp
repz
push
mov
sbb
sub
sub
lds
mov
mov
es
fcomp
movs
add
pushf
push
loop
lea
loope
std
mov
ror
inc
pop
dec
pop
dec
mov
mov
inc
sub
mov
loop
mov
call
sbb
mov
cmps
call
imul
and
fiadd
icebp
pop
sbb
inc
sub
fstp
retf
mov
adc
fucomp
mov
pushf
aas
push
shr
test
sbb
jb
jno
gs
sub
cmps
loopne
sub
imul
fs
js
cmp
inc
(bad)
sbb
imul
fwait
adc
fldcw
mov
sub
xor
nop
cmp
mov
jmp
sub
sub
loope
pop
stos
sar
push
std
push
sub
mov
xchg
sbb
loop
xor
aam
cwde
mov
push
dec
sbb
jge
data16
repnz
into
sar
pop
add
fdiv
xchg
sbb
adc
dec
fwait
call
je
inc
(bad)
fimul
sbb
mov
imul
xchg
mov
inc
add
movs
mov
loope
xchg
sub
or
pop
sti
xchg
jmp
add
in
sub
mov
imul
sbb
gs
pop
fucom
outs
mov
add
add
mov
sbb
pop
jbe
in
adc
jnp
fld
sub
enter
fild
movs
fs
lahf
sub
mov
mov
push
mov
out
adc
aaa
xlat
push
xchg
aas
cmps
xchg
pop
shl
xchg
push
cmp
ds
xchg
mov
mov
inc
cld
cmp
ror
mov
popa
jbe
(bad)
cli
adc
shr
scas
retf
push
pop
push
ins
test
fist
imul
pop
shr
sub
push
and
and
push
and
mov
and
imul
scas
mov
cwde
pop
jae
push
xor
sbb
jo
mov
imul
pop
push
adc
push
inc
sahf
movs
lahf
gs
test
add
iret
fcom
cmp
add
fistp
mov
mov
mov
aas
into
dec
jmp
pop
lahf
mov
outs
bound
jns
mov
dec
ss
stos
in
test
vmresume
es
adc
mov
mov
test
enter
enter
jo
pop
adc
into
sbb
inc
hlt
xchg
jle
adc
xchg
popf
inc
or
cli
inc
call
pop
mov
xchg
dec
xchg
sub
push
dec
stc
call
mov
and
dec
sahf
and
aas
shrd
sub
pop
ss
jge
fsubr
jno
mov
shr
mov
jmp
cld
sti
xor
or
pop
pop
inc
and
das
push
pop
cmp
push
sbb
cs
fsubp
inc
mov
enter
xchg
adc
pop
int
pusha
dec
push
jge
cmc
pushf
fild
mov
sbb
dec
adc
push
inc
lahf
xchg
inc
ret
in
jp
faddp
pop
shl
jmp
lahf
inc
cdq
pop
out
cmp
(bad)
add
rol
dec
icebp
lods
add
(bad)
pop
cdq
sbb
mov
stos
mov
cwde
test
jp
xchg
call
hlt
add
pop
cwde
ins
mov
mov
sub
scas
jnp
fsub
cmp
mov
mov
loope
sar
xchg
sbb
add
addr16
add
aas
dec
ror
fwait
jmp
retf
pop
rcr
inc
lods
pop
(bad)
ja
jns
mov
pop
and
sbb
(bad)
adc
imul
dec
out
fcmovne
jl
repz
push
push
js
ror
jnp
repnz
mov
loop
pop
icebp
sbb
mov
jle
add
xchg
shl
out
retf
call
push
call
sbb
rol
xor
fwait
sub
mov
cmp
adc
fisttp
sub
add
xchg
imul
mov
or
ins
cmp
retf
jmp
add
aam
mov
rcl
mov
jmp
fdiv
push
and
push
or
jb
add
jne
mov
sub
xchg
inc
dec
imul
sbb
mov
fild
xchg
mov
lods
out
pop
mov
ss
cmp
adc
out
pop
les
jg
xchg
sub
(bad)
lods
dec
fbstp
push
movs
pop
popa
inc
xor
adc
inc
jne
push
sub
inc
enter
sub
cmp
(bad)
ret
cmp
scas
xor
popa
push
inc
xor
loop
mov
inc
sub
push
and
out
push
shl
imul
lods
in
fucomp
dec
jmp
movs
push
jge
inc
and
adc
repz
inc
stos
push
push
jnp
rol
pushf
jle
pop
xchg
and
mov
dec
test
inc
(bad)
mov
repz
sbb
retf
les
xor
cmp
pushf
ds
push
mov
aas
dec
mov
addr16
sbb
mov
or
inc
cmp
sbb
lock
js
cmp
cmp
ja
xchg
push
test
inc
scas
mov
loop
cmp
sar
cs
ret
std
xlat
and
sub
dec
(bad)
cmp
test
lds
sub
addr16
clc
xchg
dec
dec
out
rcr
and
xchg
div
xor
push
xchg
xor
or
leave
ins
test
pop
pop
jne
pop
sub
cmp
sbb
inc
sbb
jnp
cwde
sub
xor
sti
sub
inc
xor
jo
dec
jp
jo
pop
cmps
and
dec
test
mov
or
and
test
sub
cmp
(bad)
ins
fisttp
pop
ds
cwde
cli
stc
push
xchg
sahf
ja
mov
or
cmps
out
sbb
dec
call
inc
pop
inc
sbb
imul
sbb
xchg
push
inc
rcl
mov
and
retf
in
mov
xchg
cmpxchg
retf
test
jecxz
leave
push
mov
repnz
mov
lods
sbb
lea
xor
dec
sub
sbb
sub
and
call
out
mov
fistp
dec
(bad)
out
mov
outs
sbb
fwait
jne
mov
outs
into
call
scas
ret
dec
cmp
cmp
out
hlt
loope
push
adc
xchg
xchg
cmp
das
fistp
mov
add
scas
mov
ins
imul
mov
add
mov
push
loopne
inc
sar
dec
cld
movs
lahf
into
mov
fwait
outs
sbb
sbb
jo
popf
xchg
pop
jbe
ds
int
jbe
pop
xor
arpl
call
push
lods
or
mov
add
sub
lods
mov
loop
aam
std
xchg
aas
pop
das
dec
mov
mov
popa
les
push
iret
mov
cwde
aam
xor
(bad)
cmp
jecxz
test
shr
retf
sbb
clc
ds
leave
(bad)
into
add
push
pop
mov
mov
retf
sub
xor
es
outs
js
mov
sub
pop
std
xchg
bound
mov
call
icebp
std
adc
jnp
xchg
mov
js
ror
or
mov
push
mov
in
push
pop
arpl
dec
adc
cld
xor
jmp
scas
push
not
clc
cdq
icebp
vmread
(bad)
mov
mov
sub
lahf
xchg
jmpw
xor
in
cmps
inc
xor
loop
ret
jns
test
mov
xchg
cmps
adc
adc
lock
ss
mov
(bad)
mov
cmp
sbb
jns
or
iret
sbb
shl
pop
(bad)
dec
sbb
jne
or
js
(bad)
cmc
pop
and
mov
mov
sub
aad
inc
pop
xor
lods
sub
fmul
(bad)
scas
inc
pushf
jmp
cmps
inc
mov
popa
retf
not
dec
imul
popa
iret
nop
or
push
(bad)
sbb
sub
mov
mov
fwait
mov
xor
xchg
in
(bad)
out
ins
pop
push
in
add
sar
jns
mov
leave
int
popa
rcr
push
or
repnz
mov
push
mov
in
scas
daa
or
sbb
in
xor
add
cmp
push
in
(bad)
sbb
cwde
mov
out
lea
retf
or
cdq
movs
push
mov
outs
sbb
pop
cmp
inc
std
adc
jns
shl
sti
jbe
push
fidiv
lds
push
ss
add
mov
shr
jle
clc
es
dec
sysret
mov
icebp
mov
enter
retf
mov
js
push
jbe
jge
call
das
xchg
mov
repz
push
enter
pop
jmp
int3
or
mov
xor
or
pop
sub
es
std
rcr
faddp
repz
stos
add
enter
sahf
push
pop
hlt
cli
pop
sbb
or
jae
cwde
xor
and
sbb
mov
inc
mov
out
ret
sbb
(bad)
and
or
mov
jecxz
push
jge
lock
div
es
imul
fldcw
in
sbb
add
mov
inc
das
jge
nop
shl
ins
add
push
or
dec
fwait
mov
or
stos
push
ds
je
imul
cmp
sub
add
xor
bound
test
xor
add
(bad)
mov
js
jno
in
sub
mov
jg
jmp
push
lea
mov
loopne
push
mov
sti
cmp
loope
das
xchg
or
lods
data16
push
inc
inc
cmp
jmp
add
test
dec
mov
xor
push
sbb
out
std
inc
mov
in
mov
push
cmp
in
mov
pop
sub
xchg
xchg
retf
jne
add
int
mov
cmp
fnstsw
fldpi
xchg
add
(bad)
and
or
loop
test
sbb
aad
mov
and
mov
or
jns
fwait
pop
(bad)
push
mov
(bad)
xor
enter
sub
or
mov
int
rcl
xchg
call
popa
stc
sar
jnp
push
or
aam
cmp
or
sbb
shl
cmp
cmc
enter
sub
ss
pop
or
imul
loope
jmp
lods
dec
clc
int
loop
out
gs
jmp
adc
xchg
ins
retf
mov
lock
cmp
sub
repnz
addr16
sub
ins
cdq
adc
add
adc
sub
mov
pushf
push
movs
pop
pop
cwde
push
daa
mov
fcmovu
cmc
gs
inc
lds
in
mov
jmp
(bad)
mov
fisub
and
dec
and
xor
adc
shl
fwait
push
dec
pushf
xchg
pop
lods
clc
mov
sub
cs
rcl
aaa
sbb
mov
and
fwait
iret
repnz
jno
xor
and
mov
pop
jnp
ret
icebp
shr
in
xor
add
test
mov
pop
cmp
in
or
or
push
inc
inc
push
cs
addr16
dec
pusha
pop
push
test
push
pop
xor
sbb
and
movs
sub
mov
fcom
test
or
xor
cmp
and
pop
jecxz
or
jne
sbb
fcmovnb
aam
stos
and
push
in
pop
pushf
cli
(bad)
in
leave
adc
xchg
js
sub
sbb
xor
mov
bnd
and
xor
dec
scas
mov
ror
nop
retf
outs
pop
dec
aaa
adc
mov
xor
int
cmc
jge
jle
cld
sbb
sub
add
lods
inc
scas
dec
rcr
sub
(bad)
or
sub
mov
ins
nop
pop
cwde
ret
fldenv
fwait
loope
std
mov
call
and
outs
cmp
fild
sub
pusha
sbb
icebp
aad
mov
sbb
inc
pop
dec
fs
mov
stos
push
stos
pop
and
inc
fisub
(bad)
aam
nop
rol
sbb
fwait
add
nop
cmps
mov
push
pop
xor
out
out
xor
jl
xchg
addr16
pop
add
adc
mov
sar
ins
pop
outs
mov
dec
in
jb
jae
and
cmps
sub
daa
xrelease
test
ss
pusha
test
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
mov
mov
xchg
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
