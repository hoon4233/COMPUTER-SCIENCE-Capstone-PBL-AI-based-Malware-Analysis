pusha
or
add
add
add
add
add
add
add
add
add
add
adc
add
mov
ret
push
sub
add
add
add
popa
add
jo
push
lea
add
add
adc
add
sub
sub
add
xor
add
add
add
add
adc
sub
add
push
or
add
pop
add
push
or
add
jo
mov
sbb
or
push
add
or
adc
add
sub
add
push
sub
add
sub
add
xor
add
add
add
add
adc
add
jo
repz
jo
sbb
or
push
add
sbb
add
mov
push
sub
add
push
sub
add
sub
add
xor
add
add
add
add
adc
add
add
add
pop
lea
add
add
pop
push
adc
sub
add
or
add
push
sub
add
sub
add
sub
add
xor
add
add
add
add
jb
add
jo
ins
add
jo
sbb
or
push
add
push
add
add
xchg
add
jo
adc
add
movs
push
add
add
push
sub
add
push
je
add
sbb
add
xor
cmp
add
add
add
add
pop
lea
add
add
push
or
or
pop
add
xchg
pushf
pop
pop
pop
or
add
or
push
push
add
or
or
add
sub
push
sub
add
xor
add
add
add
sub
add
push
or
add
pop
add
push
or
add
sbb
add
sub
xor
add
add
add
adc
sub
add
push
or
sub
add
push
or
adc
adc
adc
mov
adc
add
je
add
add
sub
add
push
sub
or
push
or
add
add
adc
xor
adc
or
add
add
add
xor
or
add
add
add
sbb
or
test
add
push
lea
add
add
jb
add
jo
fld
add
pop
lea
add
add
or
or
sbb
adc
adc
add
es
add
jo
lea
add
add
or
sub
add
adc
add
mov
push
lea
add
add
adc
add
mov
add
push
or
add
jo
int
add
pop
lea
add
add
push
adc
push
jb
add
jo
adc
sub
add
push
je
add
sbb
jmp
int
add
pop
lea
add
add
movups
push
jb
add
jo
adc
sub
add
push
je
add
sbb
jo
int
add
pop
lea
add
add
adc
adc
jb
add
jo
adc
sub
add
push
je
add
sbb
add
adc
add
jo
int
add
pop
lea
add
add
adc
adc
jb
add
jo
mov
pop
lea
add
add
adc
adc
adc
add
add
push
mov
add
push
je
add
sbb
push
push
adc
sub
add
push
or
add
adc
mov
jo
lea
add
add
pop
add
push
adc
adc
jb
add
jo
sub
add
adc
jb
add
jo
add
add
add
adc
sub
add
push
adc
adc
push
sub
add
push
or
add
jo
xor
pop
lea
add
add
adc
adc
push
mov
add
push
je
add
add
or
or
add
jo
adc
add
je
add
add
or
add
jo
pop
jo
or
lea
add
add
adc
adc
add
or
add
mov
add
push
ficom
adc
adc
sub
push
add
push
fiadd
sub
inc
sbb
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
sub
add
add
or
and
add
add
or
add
add
add
pop
add
or
add
add
or
add
sub
add
add
add
or
and
add
or
add
sub
add
add
add
or
add
sub
add
add
add
or
push
add
or
push
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
sub
ret
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jae
gs
cs
je
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
pushf
cmps
and
push
sbb
sbb
mov
scas
in
retf
mov
xor
add
bound
bound
sub
loop
inc
sar
retf
out
out
pop
sub
cwde
js
inc
loope
sub
sub
lods
xor
fild
dec
cs
push
sti
add
fsubr
mov
jnp
inc
add
add
add
push
add
add
add
add
add
add
fadd
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
or
add
dec
ss
inc
dec
jbe
pusha
dec
popa
dec
jae
sub
dec
or
dec
inc
dec
adc
dec
and
dec
and
dec
outs
dec
adc
dec
pusha
dec
adc
dec
push
dec
dec
aaa
dec
cmovle
imul
add
xor
dec
jo
push
dec
or
dec
dec
dec
fs
dec
dec
inc
dec
pop
dec
sbb
dec
pop
dec
aaa
dec
xor
dec
jo
dec
dec
sub
add
dec
or
inc
dec
push
dec
(bad)
add
cmp
dec
adc
dec
arpl
dec
dec
dec
arpl
dec
push
dec
push
dec
dec
dec
push
dec
ss
dec
dec
pop
dec
sbb
dec
or
dec
ss
and
jg
jge
adc
dec
cs
int3
js
add
dec
push
dec
pop
dec
jl
sub
dec
dec
dec
cmp
dec
bound
dec
inc
dec
sbb
dec
add
dec
and
dec
sbb
dec
aas
dec
inc
dec
or
dec
push
dec
jb
jo
inc
dec
jge
inc
dec
push
dec
jge
add
sub
dec
push
dec
and
dec
ins
dec
ins
dec
push
dec
push
dec
or
dec
push
dec
inc
dec
cmp
dec
pop
dec
outs
dec
sbb
dec
pop
dec
jae
add
dec
sbb
dec
das
dec
push
imul
dec
add
dec
inc
dec
push
dec
sbb
dec
push
dec
adc
dec
jb
pop
dec
fs
dec
dec
jno
daa
dec
das
dec
imul
xor
pop
dec
and
dec
sub
dec
and
dec
jle
jnp
jo
cmp
adc
add
push
dec
add
dec
ins
dec
sub
dec
pop
dec
jbe
xor
dec
ins
dec
bound
dec
push
dec
or
dec
ja
push
adc
dec
or
dec
adc
add
and
dec
sbb
dec
sbb
dec
or
dec
xor
dec
xor
sub
dec
sbb
outs
dec
or
dec
push
dec
xor
dec
push
cmp
dec
or
dec
pop
dec
pop
dec
arpl
dec
or
dec
jb
sub
dec
xor
dec
sbb
dec
imul
dec
sbb
dec
add
dec
dec
jns
imul
dec
and
dec
add
inc
dec
jo
bound
aam
add
and
outs
dec
cmp
dec
inc
dec
outs
dec
inc
dec
inc
dec
js
das
dec
push
dec
and
es
pop
dec
pop
dec
pop
dec
cmp
dec
and
push
dec
ins
dec
or
dec
cs
inc
dec
sub
dec
jbe
hlt
fadd
add
dec
xor
dec
pop
dec
pop
dec
adc
pop
dec
aas
dec
sbb
dec
sbb
dec
inc
dec
jno
xor
cs
dec
dec
pop
dec
gs
dec
dec
or
dec
cmp
dec
jno
push
dec
dec
dec
dec
dec
fs
inc
dec
adc
add
sub
dec
push
dec
and
adc
dec
push
dec
cmp
dec
xor
and
dec
dec
dec
push
dec
adc
dec
cmovle
dec
xor
dec
sahf
pop
add
xor
dec
ins
dec
push
dec
push
dec
sbb
jnp
bound
dec
xor
dec
dec
dec
pop
dec
gs
push
dec
sbb
dec
das
dec
jle
push
dec
adc
dec
bound
dec
add
dec
gs
mov
add
xor
dec
das
dec
push
dec
push
dec
jg
outs
dec
or
dec
adc
dec
inc
dec
jge
pop
dec
jno
push
dec
arpl
dec
pop
dec
sub
dec
and
dec
xor
dec
fcomp
dec
jb
imul
dec
imul
push
sub
dec
push
dec
add
dec
sbb
dec
jl
pop
dec
es
sub
dec
sbb
dec
das
dec
sbb
dec
sbb
dec
xor
dec
jae
dec
dec
psubsw
add
cmp
dec
pop
dec
cs
add
dec
pop
dec
cmovle
dec
inc
dec
pop
dec
push
dec
sbb
dec
inc
dec
pop
dec
push
dec
push
dec
push
dec
jg
es
jns
pop
dec
int
add
inc
inc
dec
outs
dec
cmp
inc
dec
bound
dec
sbb
dec
sub
dec
dec
dec
adc
dec
es
cmp
dec
jle
fs
inc
dec
dec
dec
inc
dec
cmp
dec
or
dec
cmovle
dec
pop
dec
pop
dec
inc
dec
ja
jle
das
dec
jmp
aaa
dec
dec
or
dec
pop
dec
jne
pop
dec
push
dec
inc
dec
pop
dec
inc
dec
ins
dec
jae
jne
cs
sub
dec
add
dec
stos
mov
dec
cs
ins
dec
sub
dec
add
dec
pop
dec
aaa
dec
jp
outs
dec
sub
dec
cs
adc
and
dec
ds
cmp
add
dec
pop
dec
popa
dec
push
dec
or
dec
push
dec
sub
mov
add
cs
dec
xor
dec
sub
dec
jp
inc
dec
sub
dec
and
dec
jp
imul
or
dec
aas
dec
dec
dec
dec
adc
dec
or
dec
stc
cs
dec
push
dec
xor
dec
cmp
dec
jns
sbb
dec
and
dec
inc
dec
add
or
dec
jns
dec
dec
dec
dec
pop
dec
cmp
dec
aas
dec
add
sbb
dec
dec
ss
jle
gs
inc
dec
dec
dec
add
or
dec
adc
dec
sbb
dec
xchg
ja
add
dec
imul
dec
pusha
dec
add
pusha
dec
outs
dec
ja
inc
dec
jns
pop
dec
add
dec
jge
cs
cmp
dec
addr16
add
dec
push
dec
pop
dec
push
dec
inc
dec
inc
dec
xor
dec
jge
sub
dec
sbb
rol
gs
popa
dec
cmp
dec
jnp
push
push
dec
and
dec
jl
push
dec
pop
dec
push
dec
add
arpl
dec
add
pop
dec
pop
dec
sub
dec
dec
dec
pop
dec
jbe
dec
dec
sbb
dec
inc
dec
ds
dec
dec
sub
dec
or
add
imul
dec
dec
dec
dec
add
and
sub
dec
sbb
dec
sbb
dec
cmovle
dec
jns
push
dec
jne
or
pop
dec
push
dec
inc
dec
jno
ds
sub
cs
pop
dec
shr
add
outs
dec
adc
dec
jnp
imul
adc
dec
inc
dec
push
dec
inc
dec
and
dec
sub
ss
pop
dec
js
sub
dec
pop
dec
cmp
dec
jle
pop
dec
(bad)
pop
add
addr16
cmp
dec
imul
push
dec
je
je
adc
dec
add
dec
dec
dec
bound
dec
and
dec
jge
add
add
sbb
dec
pop
dec
jns
aaa
dec
cs
inc
dec
adc
jo
xor
pop
add
daa
dec
je
push
dec
pop
dec
pop
dec
jae
adc
dec
cmp
dec
add
dec
aas
dec
cmp
dec
push
or
dec
sbb
push
dec
dec
dec
pop
dec
adc
dec
pop
dec
inc
dec
dec
dec
jge
push
dec
jb
aaa
dec
push
dec
ins
dec
bound
pop
add
nop
jp
add
jo
fimul
add
xor
pop
aam
fstp
daa
shr
aas
cmps
mov
xchg
jns
add
std
push
inc
jns
cmps
pop
mov
mov
xor
ss
mov
sti
popf
movs
pop
mov
movs
arpl
(bad)
arpl
stos
(bad)
fimul
ds
jle
xchg
inc
mov
mov
cmc
enter
test
test
pop
(bad)
cwde
jmp
mov
adc
mov
idiv
lods
sahf
bound
sbb
inc
(bad)
icebp
out
push
adc
adc
cli
sub
cli
adc
fdiv
push
inc
int3
pop
fcmovnb
cmp
or
gs
and
dec
mov
pop
iret
cmc
mov
fnsave
aaa
xchg
push
mov
pop
jecxz
dec
push
mov
xchg
and
push
jge
shr
pop
mov
pop
cmp
sbb
dec
pushw
jecxz
mov
jge
in
adc
mov
dec
xor
cmc
scas
dec
out
mov
jg
ja
loopne
(bad)
arpl
add
mov
mov
aas
mov
mov
mov
out
dec
enter
pop
cmp
(bad)
cli
mov
imul
ror
inc
push
dec
jmp
jo
lods
dec
adc
hlt
adc
pop
push
imul
sub
ds
jmp
pop
push
sub
hlt
push
adc
cmps
mov
imul
enter
test
mov
sub
aaa
test
(bad)
data16
mov
fist
mov
jno
sub
ret
adc
jbe
fist
mov
push
dec
add
mov
lds
and
pop
jecxz
mov
pop
xor
sar
mov
sub
mov
aam
test
test
mov
cmp
or
or
sbb
pop
xor
jl
out
inc
jle
cmps
retf
pushf
es
sbb
inc
int3
cld
bound
or
or
push
pop
sahf
stos
sbb
mov
xchg
icebp
mov
aas
adc
addr16
inc
pop
dec
and
push
cmps
mov
int3
(bad)
mul
jl
idiv
push
push
mov
xacquire
sti
call
jle
out
pop
cmps
sbb
mov
outs
in
mov
stos
loope
cwde
xlat
jge
in
cli
lods
xchg
pop
dec
sbb
jmp
push
ficomp
into
into
call
sar
dec
push
out
mov
push
out
stc
dec
jae
nop
dec
push
neg
bound
std
or
leave
mov
outs
jg
push
or
stos
adc
mov
mov
mov
pop
mov
mov
test
add
ins
mov
ins
jmp
ss
jne
fnstcw
inc
psrlq
(bad)
sub
pop
lods
push
xchg
jecxz
pop
fistp
pushf
xchg
adc
xor
movs
xor
call
ror
movs
push
and
(bad)
xor
add
xor
and
shr
adc
enter
das
in
or
mov
jbe
xchg
xchg
bound
outs
cmps
or
mov
ret
into
mov
cli
loop
inc
pop
and
push
jae
dec
pop
fadd
cmp
ret
in
jmp
outs
jno
fs
mov
sub
push
xchg
mov
and
fstp
or
sub
add
sub
adc
mov
xchg
pusha
(bad)
jg
dec
xchg
rcl
sti
add
outs
popf
loopne
mov
xlat
mov
addr16
mov
hlt
call
xchg
sub
mov
push
aad
jmp
sar
test
mov
jmp
out
jmp
jb
jmp
adc
iret
mov
loop
pop
fistp
xchg
test
xor
out
aas
ficom
(bad)
or
jno
jp
xor
push
jns
lods
movs
push
sbb
ret
js
mov
mov
lahf
jle
les
(bad)
jp
nop
pop
add
push
mov
and
sbb
mov
shl
mov
ins
adc
ins
and
pop
xchg
push
test
jl
lock
push
fimul
mov
jg
xor
and
jecxz
inc
bound
push
or
fild
fidivr
adc
jbe
rol
popa
imul
fnstcw
daa
mov
mov
pop
add
inc
pop
arpl
hlt
sub
aam
dec
push
pop
int
mov
dec
sub
or
xchg
mov
pop
mov
dec
jbe
dec
mov
sub
call
jmp
or
mov
fist
jmp
dec
inc
inc
es
into
mov
fsubr
cmps
inc
inc
pop
bound
push
je
adc
out
mov
es
cmp
lahf
adc
and
pushf
add
jmp
test
cmps
shr
stc
and
mov
sbb
mov
jb
(bad)
pop
xor
pop
scas
inc
mov
jae
sahf
xlat
xchg
psubusb
iret
add
jp
add
fisttp
sub
adc
push
mul
imul
pop
push
inc
push
clc
jno
jnp
mov
mov
xor
into
push
jp
gs
(bad)
retf
sbb
mov
movs
jmp
sub
fcmovb
add
jmp
aas
sub
outs
imul
adc
push
ja
inc
push
ficomp
and
call
idiv
lea
dec
push
sub
and
idiv
lock
jb
push
out
add
sub
add
stos
mov
jg
das
popf
stos
setns
not
push
mov
xlat
sub
fwait
js
lds
pop
movs
or
xor
and
adc
pop
push
icebp
fisttp
mov
xchg
or
inc
jg
out
sub
cmp
hlt
dec
inc
jmp
test
adc
loopne
inc
std
out
push
and
es
mov
cmp
loope
bound
iret
mov
xchg
adc
in
(bad)
fidivr
popf
add
push
jmp
loope
daa
jmp
sahf
in
sub
js
imul
jmp
cdq
and
addr16
adc
sbb
fiadd
dec
arpl
jmp
jp
jle
js
dec
fwait
mov
fiadd
mov
push
stc
add
shr
sub
push
ss
add
outs
mov
add
ja
mov
xor
cmp
jp
lahf
rol
fbstp
jae
push
xchg
pop
pop
mov
outs
push
inc
xchg
jnp
push
or
ja
or
(bad)
es
xchg
(bad)
push
pop
xor
sub
mov
call
addr16
mov
inc
jbe
lock
push
enter
jp
mov
movs
dec
sub
js
push
push
push
data16
imul
add
fnsave
xchg
jb
(bad)
leave
out
adc
pop
push
(bad)
inc
fucom
ds
jb
sbb
icebp
and
cmp
xchg
arpl
sbb
hlt
lods
loopne
and
jae
mov
nop
mov
xor
xchg
fisub
das
xchg
push
xlat
xchg
inc
mov
aad
xchg
xor
sti
mov
push
retf
(bad)
inc
jmp
xchg
add
mov
mov
not
scas
push
dec
into
xor
jle
inc
scas
mov
lods
test
add
lahf
jg
repnz
push
sub
xlat
retf
scas
inc
fdivr
comiss
dec
pop
fs
push
mov
(bad)
stos
leave
fdivr
stc
stos
sub
push
mov
das
xchg
push
loop
xchg
inc
ins
addr16
retf
inc
loope
pop
jno
leave
in
mov
sahf
xchg
xchg
fistp
sub
cmp
daa
lds
push
dec
ins
popf
arpl
popf
xor
pop
loop
lea
xor
retf
outs
in
popa
stc
out
lods
loop
mov
in
or
pop
adc
or
sbb
mov
jmp
push
(bad)
or
fidivr
inc
jo
inc
pop
mov
xchg
add
ficomp
inc
nop
into
loopne
pop
fwait
pop
pusha
loope
pop
jmp
sub
lock
call
jbe
sub
adc
push
movs
dec
jbe
cs
add
cmp
arpl
stos
aaa
inc
fnstcw
daa
inc
inc
cmp
xor
sbb
cmp
or
mov
jg
jg
and
das
shl
jge
fadd
std
sbb
iret
add
test
jno
dec
dec
xchg
dec
adc
xchg
mov
jno
inc
cmp
push
fadd
(bad)
jmp
and
fldl2t
add
cmp
dec
mov
and
push
xor
cmps
(bad)
push
xchg
retf
movs
pusha
cld
je
rcl
push
hlt
mov
lods
cmc
mov
xchg
xchg
push
push
(bad)
shl
fbstp
loop
pop
mov
fwait
inc
pop
mov
pop
addr16
mov
popf
and
in
mov
cld
aam
jne
les
jb
test
test
rcr
mov
pop
iret
mov
inc
leave
addr16
mov
and
stc
sti
xchg
inc
mov
adc
cmp
cmps
jge
jmp
push
jmp
icebp
pop
out
dec
and
push
idiv
pop
sbb
mov
xor
lahf
test
test
sub
scas
sti
mov
xchg
in
les
cmp
rcr
add
lea
mul
ss
or
sbb
(bad)
push
fs
repnz
repz
repz
(bad)
add
or
xor
repz
shl
xchg
mov
add
push
xlat
sbb
bound
mov
out
inc
push
mov
imul
jle
jae
cmp
pop
add
mov
stc
loope
dec
dec
xor
jmp
test
xchg
shl
leave
int
dec
and
lock
pop
jns
mov
outs
retf
test
adc
and
inc
scas
xchg
fs
push
push
mov
cmps
pop
lods
outs
pusha
repz
mov
xor
jns
mov
mov
push
cmps
xor
rol
aaa
call
leave
cmp
pop
xchg
xchg
mov
jo
fs
jnp
lock
cmp
fwait
cmp
sub
outs
out
jnp
inc
xchg
cmp
fisttp
mov
mov
push
sub
add
mov
pop
sbb
leave
lahf
jge
mov
adc
lods
xor
popa
push
ret
cmc
push
xor
mov
add
leave
add
imul
push
out
aam
mov
sbb
jbe
mov
sbb
sbb
sub
mul
popf
xchg
mov
shl
adc
pushf
jo
mov
push
sub
cmp
mov
pop
sbb
xlat
and
and
mov
cs
gs
and
pop
mov
mov
pop
jbe
leave
adc
ficomp
inc
push
add
adc
cmps
dec
in
pop
push
test
mov
push
xchg
scas
scas
mov
and
test
and
ins
iret
cvtps2pi
inc
push
push
push
(bad)
xor
sti
sub
ret
stc
xor
and
fs
data16
jb
icebp
(bad)
xchg
dec
pop
jecxz
aam
xchg
out
shl
adc
xchg
cmp
mov
cmp
jb
sub
es
in
(bad)
cld
or
mov
or
nop
mov
mov
xchg
fiadd
shl
call
in
xchg
mov
inc
je
jp
fistp
cmc
in
or
pop
ja
mov
bsf
int
mov
mov
inc
xchg
shl
cld
pop
jmp
dec
add
xor
push
jbe
dec
and
mov
or
fwait
mov
popf
lds
cmp
cmp
push
sti
cmp
or
xchg
jp
mov
test
sub
mov
jns
lods
and
arpl
or
push
or
cmps
aaa
imul
push
popf
mov
in
adc
sbb
pop
cmps
cmp
addps
int
sub
mov
scas
cs
aaa
imul
xchg
mov
or
add
lds
jmp
pop
popa
movs
mov
pop
test
mov
test
mov
cmp
sbb
(bad)
fyl2xp1
lods
ins
outs
test
mov
mov
mov
mov
jecxz
out
les
hlt
sbb
rcr
xor
das
rol
inc
aad
xor
outs
mov
inc
mov
ror
ins
loop
inc
mov
cmp
and
cmc
push
and
inc
mov
cmp
and
(bad)
mov
scas
lea
push
popf
push
dec
jb
or
lea
xchg
sbb
inc
out
adc
les
inc
aam
cmp
test
call
dec
(bad)
push
pop
clc
jge
push
lds
or
fwait
or
loope
pop
adc
push
outs
and
pop
adc
clc
dec
dec
add
push
jl
adc
call
jb
mov
xor
aad
dec
mov
test
pop
pop
aad
xchg
imul
fst
xor
repnz
mov
movd
bound
in
jnp
mov
cli
and
xchg
xor
movs
cmc
jne
push
mov
call
xor
pusha
cmp
sub
imul
je
adc
clc
xor
jmp
pop
cmp
int
push
mov
and
dec
mov
retf
shl
dec
enter
ja
out
pushf
pop
pushf
push
cmp
adc
or
sub
or
mov
ds
hlt
mov
xchg
mov
mov
or
sti
loop
gs
push
rcr
ja
loope
sub
scas
dec
nop
push
mov
jg
sub
leave
ret
adc
shr
xor
mov
cmp
sti
stc
(bad)
in
in
dec
(bad)
mov
movs
push
or
lahf
dec
inc
dec
arpl
int3
pop
mov
push
sbb
ret
(bad)
icebp
dec
(bad)
mov
inc
adc
sub
data16
cmp
sub
cmp
inc
stc
sbb
shl
inc
cmp
shr
xor
in
sub
or
(bad)
push
push
enter
mov
mov
jg
cmp
jo
push
js
dec
aas
mov
hlt
adc
add
mov
bound
inc
push
call
fsub
mov
jne
mov
lock
js
ja
and
(bad)
adc
sbb
fldenv
jmp
and
push
test
inc
popf
mov
adc
aad
in
mov
scas
test
jb
pop
and
push
ret
ins
xchg
jbe
lods
and
pop
inc
dec
sbb
imul
cdq
xchg
fwait
dec
call
add
xchg
push
jo
cmc
mov
xor
push
std
loopne
stos
dec
imul
sub
fstp
push
ror
(bad)
repz
out
in
js
cmp
(bad)
sub
test
pop
int
jmp
jnp
pusha
test
shl
inc
push
or
push
inc
fmulp
pop
movs
mov
push
test
popf
mov
fwait
push
retf
push
sti
xchg
xchg
cmp
inc
neg
fidivr
xor
sti
adc
(bad)
test
sar
in
stos
test
and
adc
xor
das
jo
xchg
mov
dec
push
add
daa
sub
cmp
jns
add
lahf
cdq
data16
pop
ror
stc
inc
xor
js
mov
imul
cmp
xchg
pop
xchg
pusha
inc
cwde
lock
push
pop
(bad)
push
push
lahf
stos
mov
push
xchg
ret
cli
mov
idiv
mov
xchg
ror
inc
sub
lea
pop
retf
jmp
aaa
mov
jb
pushf
shl
dec
scas
adc
es
or
add
sub
push
jmp
mov
xchg
gs
cwde
dec
jl
jae
mov
push
xchg
aad
xor
xchg
data16
mov
sub
push
es
push
inc
xchg
mov
mov
jl
test
cmps
loope
jmp
int3
mov
mov
ror
icebp
mov
push
pop
xchg
pop
inc
push
aas
jl
(bad)
adc
xor
ins
loop
fwait
retf
inc
inc
mov
fimul
iret
push
inc
repnz
mov
pop
popf
xor
push
scas
cmps
sbb
mov
lock
fucomi
pop
inc
mov
test
pop
pop
or
push
loopne
inc
mov
mov
mov
ret
pop
inc
dec
mov
mov
retf
mov
loop
xchg
(bad)
fmul
rcr
rcl
les
jae
sar
mov
jmp
int3
jmp
xchg
jnp
jecxz
push
jp
fadd
test
push
test
(bad)
dec
rcl
pop
and
inc
jl
aad
leave
cwde
xchg
cmp
mov
cwde
loop
dec
mov
mov
(bad)
mov
sahf
fcom
loop
adc
int3
adc
pusha
xor
cmp
cdq
les
test
add
ins
mov
mov
icebp
stos
pop
sbb
mov
add
cmp
sbb
push
stc
sub
mov
and
mov
enter
xor
jmp
jle
loop
xchg
jg
movs
mov
jns
cmp
xor
cld
sub
mov
(bad)
mov
dec
(bad)
push
adc
inc
clc
dec
or
sbb
fwait
loop
test
pop
push
int3
mov
mov
push
push
xchg
jecxz
inc
push
outs
in
mov
(bad)
aam
in
nop
(bad)
cdq
fs
es
outs
(bad)
loope
sbb
cmps
mov
ficomp
(bad)
(bad)
jecxz
outs
js
dec
fdiv
rcr
aam
mov
jo
jb
mul
ins
or
dec
pop
mov
dec
adc
fwait
scas
push
cwde
xor
jb
push
frstor
ins
fwait
cdq
mov
add
add
addr16
xchg
sar
or
ds
pop
pop
sub
sti
mov
xor
jbe
pop
adc
fs
sub
add
adc
fsin
xchg
idiv
xchg
sub
fsub
mov
or
scas
cmp
lock
cdq
in
stc
xchg
mov
cdq
xor
mul
fsub
jbe
sbb
or
dec
xor
jmp
ret
fdivp
nop
scas
jge
fdivrp
aas
test
rcr
retf
imul
rcr
outs
(bad)
mov
cmp
out
and
inc
xor
cwde
stos
mov
push
fucomp
outs
push
xchg
mov
daa
sti
jo
sbb
jae
jae
repnz
shl
pop
int3
in
or
fsub
sbb
dec
out
cmc
and
cmp
mov
lea
add
jb
mov
movs
outs
dec
push
inc
xchg
lea
dec
shl
data16
mov
jl
sbb
pusha
sub
inc
retf
aam
clc
add
inc
aas
js
xlat
out
mov
and
loope
sbb
add
cmp
scas
jp
mov
imul
adc
mov
sahf
(bad)
push
popf
inc
retf
pop
sti
cmp
mov
ja
add
xor
in
mov
(bad)
xlat
xor
sbb
ss
test
popf
push
arpl
mov
sbb
inc
in
fiadd
sub
scas
loop
scas
cmc
jmp
push
lahf
adc
or
dec
sub
sbb
cmp
inc
scas
idiv
dec
mov
ins
dec
xor
push
ret
es
mov
stos
lds
and
aam
cmp
dec
jnp
shl
test
push
rcl
(bad)
lahf
call
jl
sub
mov
jge
(bad)
cmc
push
test
mov
(bad)
aam
xchg
cmps
daa
mov
cmp
adc
dec
cmp
pop
rcl
clc
in
ds
in
sbb
xor
stc
adc
test
test
mov
pop
popa
cmp
andnps
push
inc
cmp
icebp
cmp
cdq
sbb
in
clc
mov
jb
xor
push
mov
xchg
mov
or
lahf
inc
sub
daa
stos
ja
mov
sub
sbb
mov
popa
jns
jo
mov
pop
repz
xchg
popa
sub
in
jbe
mov
ret
adc
(bad)
(bad)
or
(bad)
dec
mov
push
movs
loope
ficom
popa
or
mov
mov
popf
fadd
push
je
fimul
sub
pop
push
or
or
push
push
push
test
mov
push
pop
sub
xor
ds
iret
xor
pop
pushf
and
xchg
and
pop
and
fstp
repz
enter
test
sbb
dec
push
xchg
js
dec
xor
mov
fdiv
cli
mov
ins
inc
and
sbb
and
mov
add
lea
push
xor
retf
inc
add
push
mov
mov
sub
sahf
jb
sub
imul
xchg
stc
ficom
test
or
cmp
jnp
aaa
sahf
mov
(bad)
sub
and
test
xchg
mov
mov
imul
imul
jmp
sub
adc
outs
mov
ficom
mov
pop
mov
aam
std
sbb
out
jp
in
xchg
sti
push
sbb
es
xchg
push
mov
add
out
pop
jb
cmp
adc
xor
ins
ds
(bad)
in
loope
arpl
xor
mov
and
out
aas
mov
jmp
pusha
leave
hlt
add
adc
pop
cmp
pop
lahf
outs
jge
add
dec
dec
shl
push
jns
xchg
fisttp
sub
sbb
movs
jmp
xchg
fwait
or
jmp
iret
jo
es
inc
xchg
mov
dec
push
push
mov
sbb
jo
clc
lea
and
adc
aaa
lods
fdivr
lods
int
scas
gs
retf
jo
sti
mov
jle
jmp
and
ret
push
push
mov
and
adc
push
add
mov
pop
fdivr
push
xchg
jp
data16
mov
je
xor
test
add
scas
jb
sbb
mov
popf
(bad)
dec
xchg
lahf
xor
xor
fwait
dec
mov
movs
fiadd
retf
cmp
(bad)
mov
icebp
sbb
mov
push
dec
aam
cmp
xchg
ret
adc
push
xchg
jg
inc
(bad)
jne
jmp
lea
rcl
push
sahf
adc
push
ja
cmps
mov
(bad)
fld
enter
cmp
ficom
mov
dec
mov
pop
mov
mov
out
jle
xlat
and
(bad)
out
cs
inc
fisubr
lods
popa
push
mov
adc
xchg
cmps
jns
out
dec
pop
mov
test
in
retf
jno
inc
rol
outs
(bad)
mov
mov
mov
mov
push
xchg
inc
sbb
inc
cmp
xchg
retf
lods
call
xor
popf
gs
push
sub
movs
out
dec
repnz
jo
(bad)
out
iret
shr
pop
mov
jb
pop
fwait
pusha
stos
fwait
sub
lahf
js
(bad)
sub
dec
frstor
ficom
adc
movs
rcr
xchg
retf
or
fsubr
mov
jmp
test
lahf
cmps
sub
xchg
mov
xchg
pop
mov
sub
or
adc
outs
movs
jo
push
stos
popa
daa
clc
inc
and
lahf
test
lods
shl
lahf
and
pop
add
xchg
popf
and
push
test
clc
mov
dec
stos
xchg
test
loopne
scas
dec
jecxz
not
cli
pop
sti
loop
std
cld
in
xchg
push
cmp
out
sar
loop
inc
cmp
inc
nop
push
mov
sbb
shl
sub
iret
xchg
int3
retf
inc
retf
jecxz
pop
xor
hlt
cmps
mov
jnp
xchg
lods
ins
fimul
fisttp
cdq
lock
popa
add
fwait
pop
into
adc
cmp
mov
bound
(bad)
add
xchg
mov
lods
adc
iret
sub
xchg
inc
imul
cmps
adc
dec
div
sub
mov
dec
sbb
xchg
or
lock
inc
loop
or
jp
push
jae
bound
stos
mov
std
mov
and
bound
mov
iret
clc
xor
adc
inc
shr
add
lds
add
test
or
or
ret
push
mov
pop
aam
ins
add
popa
cmp
pusha
xor
lock
scas
outs
jns
(bad)
pusha
inc
int3
in
jg
idiv
mov
mov
mov
mov
dec
mov
rcl
ret
imul
jmp
mov
sbb
lods
ficomp
add
cs
jp
ins
in
dec
adc
xchg
movs
and
gs
movaps
adc
jecxz
hlt
pop
add
push
addr16
dec
in
dec
cli
in
dec
pop
xchg
dec
out
ficom
mov
inc
stos
popf
push
pop
inc
nop
lahf
jmp
mov
aam
out
pop
(bad)
sbb
pop
adc
mov
cli
loopne
call
call
(bad)
stos
test
inc
hlt
clc
and
sti
dec
inc
xor
add
jbe
mov
or
ret
pop
sub
jae
jne
jmp
cmps
and
sub
les
and
pop
inc
add
fldenv
std
retf
mov
cmps
adc
dec
inc
cmc
pop
or
sar
xchg
push
out
add
jbe
daa
sbb
std
and
daa
jmp
inc
cmp
jae
and
mov
nop
mov
mov
xor
imul
adc
xchg
mov
lds
sub
mov
and
add
xchg
push
fwait
je
jmp
pop
xchg
inc
mov
mov
sbb
imul
stos
push
cmps
mov
and
xchg
in
inc
xchg
mov
bound
fdiv
dec
jmp
leave
ror
pop
mov
mov
push
mov
mov
jge
xchg
add
lahf
pop
xchg
hlt
int
mov
mov
sbb
adc
pop
ret
adc
cmp
icebp
mov
jne
and
test
xchg
je
pop
mov
pop
adc
cmps
int3
mov
ror
inc
mov
jns
push
data16
cld
shr
push
sub
out
rcl
fsubr
(bad)
xchg
sti
dec
adc
pop
or
mov
cmp
fiadd
mov
(bad)
or
test
xor
push
gs
xchg
ror
push
in
movs
pushf
imul
fwait
mov
ret
(bad)
icebp
xor
int3
sbb
bound
pushf
adc
loop
mov
jo
dec
mov
cdq
dec
cmp
xor
cmc
pop
mov
je
les
push
inc
adc
into
or
cld
cmp
es
test
jmp
loope
dec
and
cmp
fistp
fadd
cmp
xchg
xchg
push
dec
add
add
cmp
inc
retf
cmps
jecxz
pop
pusha
cmc
popf
dec
jp
dec
jnp
mov
cld
ins
fldcw
cmp
cmps
mov
aaa
push
inc
cmps
push
aas
inc
adc
push
push
pop
movs
lods
push
(bad)
push
test
in
cli
inc
lea
rcr
imul
int3
sti
std
or
inc
popa
daa
xor
lahf
out
shr
add
ret
pop
push
push
lock
adc
or
sbb
push
add
inc
adc
mov
push
(bad)
imul
cmc
retf
push
mov
add
call
test
lock
mov
pushf
rcr
repz
mov
nop
popf
das
adc
sub
icebp
push
jo
fdiv
dec
loope
popa
jno
rcr
(bad)
dec
sbb
out
mov
sub
loope
lea
es
xlat
sbb
push
sar
in
cmp
icebp
or
into
idiv
xor
adc
xor
sbb
sub
call
dec
pop
in
dec
aas
outs
mov
mov
js
test
test
lods
and
sub
sub
cmp
xchg
lock
xor
add
mov
in
sti
pusha
in
and
push
popf
dec
dec
sahf
cmp
xchg
in
in
push
shr
adc
mov
push
push
pop
and
retf
fnsave
aad
stos
sbb
adc
cdq
sbb
cmp
int
movs
dec
call
jp
cs
cmps
pop
popa
cmp
adc
loopne
xor
(bad)
sub
jae
loope
ficomp
fcomi
imul
dec
jae
jmp
cmps
cmp
icebp
(bad)
sub
mov
into
aaa
or
and
ins
out
sbb
mov
push
cmp
sbb
call
jae
inc
lock
retf
inc
jae
imul
mov
pop
mov
std
xchg
ins
and
mov
jno
push
cmps
out
pop
sub
sti
rcl
outs
movs
mov
xchg
in
dec
jae
(bad)
pop
and
sbb
add
jbe
mov
sbb
movs
jle
leave
js
xchg
xchg
in
in
xor
xchg
clc
fsubr
outs
push
pop
pushf
adc
in
lds
test
or
jb
inc
mov
mov
scas
dec
inc
hlt
shl
dec
stc
or
cmp
popf
or
mov
iret
sub
sub
out
jae
cld
ss
(bad)
pop
lahf
push
xor
push
lahf
call
adc
loop
aad
fs
call
mov
xchg
ret
push
add
imul
mov
(bad)
enter
mov
jl
adc
jne
out
inc
inc
xchg
cmp
loope
push
and
or
mov
ficomp
jp
inc
push
push
jne
dec
dec
fist
out
gs
lock
je
ins
sub
fcom
aad
rcr
push
pop
enter
dec
push
iret
push
sbb
dec
arpl
push
pop
sbb
outs
push
inc
pushf
repz
cmps
ret
(bad)
mov
mov
lea
int3
adc
retf
test
or
push
xor
sub
cdq
mov
das
fnstsw
jle
pop
shl
mov
clc
and
retf
push
jnp
push
inc
movs
xchg
sub
dec
xor
jae
or
jbe
dec
movs
and
add
mov
push
sbb
xchg
jecxz
xor
inc
bound
xchg
add
(bad)
cli
scas
sbb
and
pushf
sub
mov
(bad)
mov
or
sub
dec
dec
ins
dec
or
push
pushf
int3
fldenv
add
mov
stos
mov
dec
adc
jg
imul
aas
mov
ret
push
push
cmp
cmp
or
add
xor
pop
xchg
jae
add
(bad)
fild
mov
dec
xor
sub
rcr
push
out
call
jg
mov
mov
inc
ja
ds
inc
pop
jo
adc
and
or
adc
popa
je
addr16
rol
out
push
jns
js
pop
out
hlt
sbb
xor
sbb
ret
ds
xor
bnd
push
sahf
(bad)
fnop
xchg
ret
jne
push
imul
(bad)
hlt
add
mov
xor
mov
jbe
scas
xchg
test
clc
test
or
cmps
xor
sub
pop
(bad)
and
xlat
(bad)
xchg
hlt
and
(bad)
int3
repnz
jmp
push
fadd
repnz
xchg
call
in
cmps
imul
arpl
add
cld
push
inc
xor
or
clc
sti
mov
gs
fs
dec
js
jge
mov
jecxz
fld
pop
out
add
popf
inc
xlat
push
pop
xchg
or
jae
rcr
or
push
cmp
fwait
in
mov
or
aas
inc
cmps
aas
push
add
adc
dec
imul
fxtract
cmp
fsub
pop
(bad)
fidiv
pop
add
fcom
dec
push
dec
pusha
sub
mov
stos
stos
xchg
sbb
push
pusha
stos
xor
fisttp
mov
imul
gs
cs
fimul
mov
jnp
fstp
adc
push
gs
push
cmp
mov
cmps
sbb
or
xchg
movs
fisttp
or
or
inc
mov
cmp
xor
in
inc
xlat
sahf
xor
xor
pop
test
cmc
dec
fcomi
fld
jmp
nop
pop
push
mov
sub
mov
mov
xchg
add
rol
ret
dec
in
test
movs
repz
jmp
inc
jg
cmp
pop
fld
mov
cmp
jnp
xchg
cli
fmulp
jp
or
pop
dec
int3
jns
jae
push
jno
inc
or
xchg
add
sub
and
in
aad
mov
mov
add
adc
dec
in
pop
pop
xchg
sub
jg
in
and
sbb
sub
dec
std
ins
cld
jg
aaa
out
lea
aas
jg
xor
adc
and
outs
out
push
test
call
xor
je
ret
pushf
xchg
mov
jae
push
mov
adc
std
into
dec
or
push
(bad)
(bad)
xchg
jbe
inc
jmp
aad
mov
enter
inc
mov
iret
and
mov
shl
xchg
xchg
clc
push
stos
add
sar
enter
nop
inc
les
scas
int
jp
sbb
pop
arpl
cmps
push
ds
lods
sub
cdq
inc
or
mov
cs
adc
ror
xchg
ror
sub
arpl
inc
push
push
stc
lahf
lods
mov
test
cs
data16
jp
and
out
jb
(bad)
push
adc
das
mov
movs
aam
cli
outs
mov
and
adc
push
ins
int3
popf
push
push
sar
cmp
pop
mov
stos
mov
outs
jns
ins
push
sti
mov
xor
cs
pusha
std
inc
lahf
movups
dec
mov
adc
or
bound
dec
in
pop
ds
ret
dec
xor
add
jae
push
fld
nop
sub
push
xchg
movs
mov
xchg
add
mov
in
fsubr
inc
lock
cmp
cmp
mov
pop
sub
mov
jne
repnz
lea
mov
pop
push
xor
pop
cmps
(bad)
sbb
sub
hlt
inc
test
or
iret
xchg
fnsave
or
or
push
mov
or
inc
push
in
fdivr
and
movs
and
pop
sub
mov
cmps
push
push
loope
icebp
dec
mov
or
push
shr
inc
or
add
dec
add
loope
scas
sub
into
inc
and
cdq
mov
fnstcw
xor
dec
loop
xlat
sti
mov
dec
pop
test
neg
dec
lods
inc
push
jg
mov
nop
and
mov
inc
ds
call
push
jg
xor
mov
lods
cmp
xchg
xor
inc
rol
adc
mov
inc
sti
push
add
in
outs
sbb
pop
(bad)
mov
scas
movs
dec
cmps
outs
mov
dec
aam
inc
les
and
aad
ja
fnstenv
mov
add
(bad)
imul
mov
add
stos
push
xor
or
xor
sbb
lods
fild
cmp
cmp
mul
add
ins
pop
lock
push
pop
mov
(bad)
mov
xchg
jo
jle
fwait
test
cld
or
ret
mov
push
cmp
test
popa
bound
stos
sbb
mov
lahf
add
add
cmp
es
sub
(bad)
fmul
sbb
movs
add
sbb
iret
scas
push
(bad)
xchg
inc
int
test
mov
push
inc
aaa
mov
(bad)
mov
mov
fbstp
xchg
imul
popf
ds
pop
ret
test
pop
jmp
xor
push
fcom
mov
mov
sti
gs
mov
clc
pop
fiadd
push
mov
mov
fld
xor
jne
xor
cs
push
fxch
dec
adc
jmp
sub
in
xchg
lods
or
fwait
cmp
out
ins
sti
js
add
je
shr
fist
add
xor
xchg
lock
fld
xor
sbb
dec
fisttp
(bad)
daa
sub
aam
aas
xchg
out
mov
sar
pusha
ror
add
shl
pushf
cmp
fistp
shl
fwait
lods
arpl
icebp
inc
das
adc
mov
shl
push
add
xor
or
cmps
in
pop
movs
popf
aad
lea
es
das
mov
pop
xor
cmp
popa
xchg
inc
ret
lds
xchg
pop
jle
xor
dec
xchg
ficom
mov
cmp
in
ins
push
(bad)
shr
mov
adc
sbb
inc
sub
add
inc
scas
or
(bad)
xchg
lahf
pop
add
daa
push
cs
test
daa
pop
push
lock
add
and
cdq
sub
or
popa
xchg
fistp
adc
scas
(bad)
xlat
ja
dec
mov
aaa
ret
fistp
aaa
mov
pop
outs
(bad)
lods
sub
pop
out
scas
xor
loope
sub
cwde
jecxz
jbe
dec
scas
stc
popf
pushf
mov
sub
mov
ins
mov
push
and
(bad)
aad
cmp
sub
push
mov
lods
movups
or
cmps
xchg
mov
cdq
ins
popa
out
mov
pushf
nop
ss
xor
retf
stos
aam
and
cmps
and
pop
(bad)
gs
push
mov
int3
mov
icebp
ret
shl
mov
mov
inc
jmp
jns
push
inc
push
inc
stos
arpl
and
pop
js
push
xchg
adc
jecxz
push
call
add
je
les
xor
pop
adc
mov
push
xchg
sub
aad
jns
shl
cmp
xor
test
ds
je
push
jg
rol
mov
ss
fbstp
mov
int3
pushf
xlat
pop
cs
mov
call
in
sbb
fsub
mov
neg
mov
mov
clc
ret
cmp
ret
aaa
jle
mov
xlat
test
sbb
hlt
test
in
xor
loope
jmp
ds
cld
mov
(bad)
out
dec
sbb
adc
in
(bad)
(bad)
repz
jmp
add
lods
and
mov
jmp
xor
cmp
ja
fs
dec
popa
cvtdq2ps
push
inc
popf
cmp
jl
lods
and
mov
imul
pop
jae
sub
add
cmps
jae
or
outs
mov
jo
mov
add
jmp
or
push
or
pop
adc
xchg
pop
imul
in
sar
retf
push
mov
mov
pop
inc
mov
xchg
or
(bad)
lds
inc
adc
add
sbb
and
loop
pop
test
fld
pop
push
cmps
jge
jp
add
push
sub
adc
push
cli
sbb
jo
stos
jnp
repz
jle
sbb
test
cmp
mov
daa
scas
inc
aam
sub
lahf
or
jmp
xlat
inc
jbe
push
fwait
(bad)
in
ss
rsm
xchg
push
xlat
and
cmps
leave
clc
arpl
mov
ins
rcr
xor
(bad)
rol
in
jno
fsubr
pop
sbb
mov
xchg
xor
cmp
sub
dec
mov
(bad)
imul
aam
or
and
pop
and
pop
push
push
aas
retf
arpl
mov
cmps
sub
jb
xor
mov
popf
es
jmp
or
test
mov
cmps
dec
rcl
sbb
xchg
icebp
cdq
cmc
sbb
xchg
or
js
xchg
push
lods
in
sar
(bad)
xlat
dec
test
jmp
scas
stc
sbb
and
mov
pop
(bad)
div
imul
push
adc
cmp
dec
jnp
stos
pop
adc
jecxz
xchg
pop
mov
and
xchg
daa
pop
inc
jle
addr16
fsubr
fild
pushf
lods
test
add
cmp
cmp
sbb
mov
fisttp
inc
in
jmp
or
mov
sub
add
rol
test
and
fdiv
in
push
push
cmp
push
mov
icebp
in
adc
mov
aas
fist
mov
jg
daa
add
push
frstor
in
adc
xchg
fsubr
outs
jp
adc
je
ds
movs
cmp
and
mov
lds
out
call
push
and
ja
dec
xor
push
outs
xchg
outs
retf
mov
pop
pushaw
iret
pop
dec
pop
inc
xchg
sub
mov
jmp
in
cld
adc
test
xchg
jecxz
mov
cdq
test
cwde
cdq
lds
push
pop
mov
ins
fcom
xchg
add
cld
call
push
ins
sbb
adc
fsubr
daa
inc
and
jmp
add
cli
cwde
cld
popa
add
xor
jo
aam
int3
or
mov
sub
xchg
aam
popa
test
xchg
inc
sub
pop
sub
add
mov
xor
leave
mov
jnp
mov
dec
cmp
adc
retf
push
xchg
jbe
mov
lahf
or
or
push
cli
imul
mov
aaa
push
and
shl
sub
fistp
jae
sub
sub
or
sbb
or
daa
or
jge
sbb
sbb
add
mov
jo
outs
cld
lods
mov
xchg
jmp
lods
sub
daa
pop
pusha
out
ins
je
(bad)
sbb
jae
ja
adc
xor
imul
push
lods
and
cdq
pop
mov
aam
shr
and
out
dec
fdiv
cmps
data16
ins
jae
sbb
xchg
pop
rcr
push
retf
out
mov
jns
movs
cs
retf
fist
cs
test
sar
iret
scas
jmp
nop
xchg
aas
ret
jl
out
add
out
jnp
add
stos
add
cmp
push
scas
ins
jg
enter
add
pop
adc
push
js
rcl
rcl
ror
adc
lock
jno
(bad)
sub
rcr
loop
stos
lahf
or
rol
test
shr
arpl
dec
sbb
fcom
movs
enter
outs
lods
jnp
jmp
loopne
pusha
or
jp
jl
dec
outs
pop
push
loop
mov
fnstsw
nop
and
mov
mov
push
shl
std
adc
or
aam
jae
lds
iret
dec
mov
movs
push
xchg
out
sbb
jmp
cmp
in
mov
add
test
stos
xchg
(bad)
fmul
fld
sbb
jge
int
call
mov
jmp
pusha
in
push
dec
clc
fisttp
out
ds
push
cdq
pop
sub
mov
mov
mov
mov
loope
je
xchg
loop
rcl
jb
shl
or
sub
xchg
pop
les
fisub
dec
arpl
push
or
ja
and
push
and
aam
scas
out
jg
movs
ins
cli
retf
pop
and
ins
and
push
jae
adc
jle
imul
adc
fild
out
cs
lahf
outs
test
pusha
push
je
push
mov
sub
add
(bad)
pop
or
pop
inc
mov
mov
mov
xor
enter
cmp
sti
add
xor
jmp
shl
je
movs
ret
xor
and
mul
adc
jb
aam
xchg
or
mov
mov
jno
stos
xchg
fwait
push
jae
sub
or
test
pusha
mov
adc
pusha
daa
call
movs
fcmovu
and
stos
lods
int3
xchg
mov
and
mov
stc
jl
ffreep
ss
push
lods
rcl
sbb
mul
icebp
fst
add
xlat
cli
popa
mov
cmp
sti
dec
data16
std
xor
sar
push
jp
ficomp
sub
cs
add
in
pop
push
or
stc
mov
fdiv
jge
sbb
sbb
stos
add
cmp
fiadd
or
js
in
and
jg
rcl
adc
mov
cld
test
mov
mov
in
inc
scas
and
les
xor
pop
loop
add
gs
jle
adc
xchg
dec
test
or
pop
bound
mov
or
outs
test
jae
inc
repnz
stos
xchg
fdiv
jg
mov
(bad)
mov
dec
xchg
cmp
sub
stc
enter
dec
ror
push
pop
out
loope
aad
daa
aad
lods
jle
or
std
cmp
loope
add
push
sub
push
cmps
adc
lds
add
jle
(bad)
rcl
div
xor
add
popa
ret
arpl
retf
cmp
cmp
or
xchg
sub
ja
fdivr
test
int3
enter
adc
or
stc
and
dec
ficomp
add
xchg
mov
fcmovnu
sub
out
lea
or
dec
ficom
jns
test
pop
mov
ds
mov
xchg
inc
inc
xor
push
sub
data16
pushf
dec
stc
dec
mov
fdiv
mov
add
rol
or
repz
jbe
(bad)
movs
jle
mov
push
mov
cmp
inc
stos
in
dec
cs
rcr
cmc
jnp
pusha
mov
push
jle
jae
sub
pop
test
mov
or
xchg
int3
addr16
mov
pop
push
rol
stos
jbe
xchg
pop
jge
mov
faddp
lods
and
push
(bad)
xor
std
clc
cdq
sub
xchg
and
jecxz
pop
or
dec
jnp
(bad)
in
lods
aad
dec
push
loop
mov
test
inc
out
lods
push
adc
push
ja
repnz
rol
adc
pop
xor
outs
movs
add
mov
or
xchg
cdq
icebp
mov
or
push
ins
icebp
adc
sub
loope
pushf
int3
sbb
mov
sub
cmc
inc
pop
jge
pop
push
mov
push
dec
xchg
sub
jne
inc
hlt
ret
gs
neg
and
repnz
je
lahf
fwait
mov
(bad)
jnp
sub
add
mov
xchg
movs
loop
call
and
push
mov
rcr
xchg
jle
pop
mov
cld
les
fnstsw
mov
(bad)
jmp
jg
movs
add
push
out
imul
fwait
loope
sahf
dec
adc
xchg
and
sub
inc
arpl
pop
movs
enter
stos
lea
out
xor
mov
xchg
xchg
les
(bad)
cld
sub
or
or
vmwrite
xchg
add
mov
lods
fbstp
sbb
pop
cmp
jno
sbb
or
(bad)
movsx
inc
movs
or
inc
mov
mov
(bad)
xchg
(bad)
mov
add
fdivrp
mov
and
retf
inc
push
hlt
cmc
test
dec
(bad)
stos
mov
faddp
aam
icebp
aam
ds
pop
mov
push
xchg
daa
xor
fs
jmp
or
(bad)
xchg
mov
addr16
or
ins
ins
pop
out
(bad)
out
or
hlt
pop
add
push
leave
mov
lods
pop
shl
clc
(bad)
leave
and
scas
cmp
sbb
sub
inc
lock
sbb
add
int
repnz
pop
mov
or
dec
xchg
cld
repnz
fdivr
mov
inc
lods
popa
inc
pop
adc
cmp
ret
jmp
pushf
pop
jae
mov
fnstcw
mov
hlt
iret
int
pop
push
mov
pop
loope
add
data16
fs
jbe
fyl2xp1
dec
push
mov
push
xor
adc
inc
loope
mov
test
fisub
jmp
adc
in
clc
push
in
dec
test
mov
mov
mov
test
sbb
adc
and
cdq
stos
clc
pop
(bad)
shl
mov
xchg
jmp
lds
mov
(bad)
in
sbb
and
cmp
and
inc
inc
mov
out
jb
mov
mov
and
(bad)
mov
pusha
out
je
or
(bad)
xor
xor
neg
cmp
cmps
cwde
jp
data16
scas
out
and
hlt
inc
fimul
pop
mov
cmp
bound
cdq
fimul
pushf
(bad)
pop
mov
or
mov
mov
adc
pop
mov
add
cmps
retf
and
lea
adc
dec
pop
pop
dec
jle
adc
dec
and
(bad)
stos
fsub
cwde
sti
inc
pop
pushf
cdq
mov
push
xchg
mov
jge
mov
cmp
ret
push
int3
add
push
mov
pop
inc
cs
ror
pop
or
push
push
iret
adc
jl
gs
or
fnstcw
pop
cmp
jp
lea
in
das
into
add
or
jge
js
mov
into
int
dec
dec
addr16
mov
ss
shr
ds
stos
test
adc
rep
mov
lahf
push
int
xor
jecxz
jo
push
adc
out
into
xchg
stos
push
mov
dec
dec
pop
rcr
pop
movs
int
mov
and
add
hlt
jl
jl
imul
inc
lea
push
mov
(bad)
movs
push
xchg
repz
leave
lock
scas
push
or
mov
test
mov
jne
cmp
sti
mov
mov
mov
cmp
mov
mov
push
sbb
scas
arpl
in
push
and
mov
test
lahf
mov
sti
xor
pop
sbb
inc
aaa
jae
les
lock
lea
repz
push
push
ins
push
std
gs
pop
mov
cmp
cmp
push
fimul
or
inc
mov
out
push
or
and
inc
add
xor
pop
jmp
adc
xor
sub
adc
pop
jo
test
add
rcr
add
ffree
fiadd
out
out
pop
cmp
mov
cld
push
jo
popf
cmp
in
or
(bad)
xor
jno
inc
test
mov
ja
jp
pushf
pop
std
pop
in
movs
ret
mov
mov
mov
sbb
ja
push
sbb
scas
inc
pop
cmps
icebp
push
not
(bad)
sbb
cmp
psubd
lock
pop
pop
loopne
mov
imul
cmp
dec
mov
ret
neg
mov
in
int3
or
push
dec
fwait
mov
add
es
icebp
repz
inc
fadd
mov
and
or
jecxz
int3
add
push
add
sbb
outs
and
mov
adc
icebp
ss
(bad)
shr
dec
retf
shl
mov
mov
xor
lods
push
xor
mov
or
xor
fbstp
loop
mov
cmp
mov
and
xor
xchg
pop
sti
push
test
jae
fimul
xlat
in
sub
push
jp
shl
test
ds
cmp
adc
popa
shl
mov
in
sub
pop
shl
inc
jmp
cmp
fidiv
(bad)
push
js
add
ds
imul
je
cmps
into
adc
mov
jg
push
push
or
sbb
jg
xchg
jae
push
jnp
hlt
push
retf
outs
pop
fsubr
push
mov
fst
in
and
add
leave
es
inc
xor
mov
sbb
repz
int
test
fcomp
jb
dec
shl
scas
pop
sbb
pop
sub
push
xchg
ins
fisubr
pusha
sbb
std
test
call
xor
test
push
cmps
and
iret
(bad)
test
dec
add
and
cwde
stos
pop
aad
fistp
sahf
xchg
les
shl
hlt
out
cmps
inc
and
inc
jmp
inc
dec
les
jmp
pop
hlt
cli
push
fisubr
sub
test
mov
in
call
scas
push
dec
enter
dec
fistp
xchg
ins
xor
add
jmp
pop
adc
daa
aas
sbb
(bad)
xchg
repz
sub
addr16
and
push
mov
mov
out
push
mov
ja
(bad)
cld
jge
stos
leave
jne
xor
arpl
jo
or
stc
fild
and
or
push
arpl
mov
mov
xlat
xor
mov
pop
mov
cmp
pop
or
mov
sbb
inc
outs
out
scas
adc
sbb
jmp
and
aas
mov
clc
fs
push
inc
pop
dec
(bad)
neg
lods
clc
push
lds
push
add
inc
gs
retf
lahf
cwde
sar
lock
daa
mov
sbb
jnp
sar
pushf
push
clc
jecxz
jp
fmul
outs
sub
jmp
pop
jnp
mov
test
out
in
cmps
jle
mov
xor
dec
sahf
rol
ja
imul
popf
pop
fmul
fs
xchg
ins
adc
aad
sbb
mul
fnstsw
push
cmps
dec
mov
in
sbb
nop
pop
fisttp
push
mov
test
bound
inc
outs
das
fisttp
sbb
mov
jmp
call
call
data16
mov
xchg
push
push
ins
add
or
pop
jecxz
fcmovu
inc
push
cs
sub
cdq
or
mov
sti
pop
retf
shl
xor
lahf
loope
and
in
mov
cmp
fstp
and
push
inc
sub
mov
sub
lock
adc
mov
imul
(bad)
stos
cli
popf
lahf
mov
call
xchg
jle
jmp
jp
adc
mov
popf
shl
xchg
mov
in
sub
dec
retf
sub
imul
add
stos
sti
in
int3
adc
mov
popa
mov
sar
out
test
out
fisub
test
mov
repz
clc
mov
sub
sbb
xchg
fcomp
ja
ds
lahf
test
fdiv
xchg
mov
mov
xor
movs
je
ss
dec
in
call
and
loope
inc
xchg
mov
mov
inc
and
xor
mov
add
mov
jle
pop
(bad)
shl
loopne
js
imul
xchg
ret
pop
inc
mov
push
dec
in
js
add
clc
push
add
sub
stc
mov
inc
mov
sti
mov
sub
shl
(bad)
adc
mov
inc
std
jmp
out
repnz
shr
dec
es
call
add
test
arpl
scas
adc
pop
xor
push
inc
xchg
out
data16
cdq
add
shl
jge
outs
jg
inc
aas
jno
inc
fistp
add
mov
pop
test
ds
xor
and
push
cmp
sbb
in
imul
adc
push
js
ficomp
mov
mov
mov
das
push
fisttp
sub
pop
jle
xor
aas
rol
pusha
aaa
dec
cmps
and
jnp
and
ret
push
sbb
push
xchg
mov
call
leave
sbb
mov
or
lea
stc
jecxz
fsubrp
fidivr
je
sbb
lahf
sbb
add
int
fadd
jmp
mov
scas
add
std
adc
push
push
in
and
popf
dec
dec
xchg
add
fidiv
gs
ret
clc
pusha
out
sub
repz
icebp
sbb
push
outs
shl
and
cmp
rcl
mov
inc
xchg
mov
mov
cmp
hlt
outs
lahf
bound
rcr
push
cmps
lods
sbb
ss
mov
pop
sbb
cmp
push
into
dec
adc
cs
loopne
cmc
dec
ins
cli
scas
jo
and
cmp
icebp
cdq
movs
scas
loope
mov
push
int
out
(bad)
in
arpl
xor
jns
ja
mov
inc
test
clc
mov
cmp
out
mov
mov
pop
outs
imul
xchg
movs
in
pushf
stos
cmp
fwait
or
jnp
push
sbb
data16
sub
mov
push
mov
mov
mov
cmp
or
retf
push
mov
call
xor
sub
adc
sbb
or
call
inc
mov
idiv
pusha
ins
fwait
ret
iret
xchg
mov
mov
add
xchg
jl
in
fisttp
pop
xor
es
fcomip
push
push
mov
pusha
ds
or
in
jge
and
out
call
jmp
add
pop
pop
ficom
std
or
jb
cmp
je
cmps
adc
scas
call
and
lods
test
dec
enter
xor
pop
enter
ret
and
(bad)
outs
inc
dec
sbb
loope
cmps
xor
dec
xor
jo
adc
cmp
dec
and
sahf
mov
imul
repnz
and
out
sbb
ss
push
cmp
loop
imul
dec
or
pop
fmul
les
rol
sar
ja
test
or
(bad)
(bad)
sar
addr16
int3
jae
(bad)
and
rol
pusha
add
jnp
jae
dec
cmp
aam
push
cvtpi2ps
and
dec
jb
in
pop
(bad)
movs
mov
icebp
in
or
fadd
xchg
rcr
jbe
(bad)
jae
les
mov
enter
push
dec
inc
out
repz
sbb
inc
frstor
cmc
inc
(bad)
xchg
int3
push
out
jns
cdq
dec
repz
shl
sbb
not
inc
hlt
retf
cmp
lds
xchg
sub
sti
icebp
sub
dec
pop
jno
adc
call
sbb
xor
sub
sahf
add
cmp
jae
or
add
loope
jae
push
mov
lahf
xchg
ja
push
lods
mov
test
cmp
lods
repnz
and
je
mov
inc
inc
cs
outs
sub
or
out
jl
addr16
mov
sbb
xchg
jle
daa
mov
movs
push
stc
adc
inc
clc
jecxz
ds
sub
imul
mov
xchg
pop
dec
cmp
popa
mov
and
mov
cwde
scas
jnp
and
add
seta
daa
xchg
add
dec
(bad)
xor
push
add
push
jg
or
inc
push
push
lock
jnp
cmc
sub
pop
lods
pop
outs
xchg
add
popa
mov
inc
jmp
scas
fmul
add
dec
lock
jg
movs
std
lods
or
in
mov
xor
add
dec
scas
cmp
add
push
jmp
jmp
(bad)
loope
cmp
adc
lea
or
adc
mov
jp
mov
pushf
or
rcr
xchg
sti
add
nop
cld
call
push
repnz
cmp
repz
adc
not
dec
dec
sub
add
adc
aaa
cmp
sahf
out
ds
pop
xchg
cli
inc
lods
cmp
cs
jae
iret
fcomp
mov
stos
leave
xchg
and
inc
dec
sub
pop
(bad)
ficomp
lea
or
sub
loop
loopne
fisubr
cs
add
fiadd
cmp
out
push
add
or
mov
push
retf
jae
push
mov
mov
jae
jmp
xor
lock
enter
cmp
call
mov
jle
push
ret
push
je
clc
pusha
pop
cmp
stos
retf
mov
push
bound
pop
or
ss
stos
lods
leave
ffree
add
fs
test
or
fcmovbe
icebp
and
add
and
inc
push
pop
mov
(bad)
lds
into
jmp
jecxz
aaa
int3
sbb
retf
cmp
dec
icebp
xchg
mov
jl
(bad)
sahf
js
jae
call
dec
in
dec
push
fs
movs
mov
je
jae
sub
nop
dec
movs
jge
xchg
jl
repz
and
test
jge
arpl
adc
(bad)
fst
pop
ins
add
mov
icebp
pop
push
in
daa
mov
cmp
add
adc
jmp
fwait
xchg
ror
jmp
adc
movs
jg
shr
mov
pop
out
stos
sbb
adc
popf
cmp
cmc
fnsave
lods
arpl
retf
mov
call
inc
jnp
outs
push
popa
repnz
lods
pusha
inc
lds
mov
xor
push
cld
cmp
dec
and
mov
pop
xor
test
inc
dec
inc
lods
mov
arpl
sub
xor
push
stos
sub
imul
sbb
leave
enter
push
mov
cld
push
cmp
inc
pop
add
jge
push
aas
xchg
bound
lods
mov
pop
sbb
dec
fistp
imul
mov
fisub
sub
leave
dec
sub
mov
daa
xlat
arpl
sbb
cmp
cmp
(bad)
cld
movs
lods
and
aam
retf
ds
push
aam
loopne
mov
(bad)
add
fsubr
adc
xchg
dec
fimul
pop
xchg
jl
lds
sti
fisttp
jno
sub
es
sar
sahf
gs
pop
jmp
ror
loope
sub
xor
not
into
inc
sub
sub
data16
mov
mov
stos
mov
push
jo
and
dec
ins
test
inc
pop
movs
adc
dec
pushf
inc
inc
jno
hlt
cmc
rol
mov
add
jno
xchg
into
mov
push
jno
pusha
push
inc
push
ds
sbb
pop
inc
jo
jnp
and
jns
pop
inc
sub
retf
or
out
popa
and
pop
test
or
or
in
(bad)
outs
js
fimul
and
add
xchg
vmptrst
in
jns
pop
inc
xlat
xchg
mov
retf
out
sahf
xor
cmovnp
div
stos
dec
mov
cs
mov
dec
fcomp
jge
out
pop
data16
iret
pushf
push
call
mov
popa
ret
sbb
cs
jno
or
push
outs
loopne
add
ins
sub
jae
out
outs
stos
jp
stc
pop
les
jecxz
sub
push
mov
aam
adc
inc
test
xchg
push
ret
shl
add
cmp
push
in
popa
xlat
(bad)
out
pop
mov
sbb
loopne
jmp
push
out
ds
inc
(bad)
retf
push
(bad)
pop
xchg
mov
xor
fdivr
mov
ins
and
cmp
adc
jecxz
dec
sbb
sbb
push
fadd
les
sbb
xchg
cmp
nop
pop
mov
mov
aam
add
xor
(bad)
int
push
dec
cmp
mov
pop
daa
ins
clc
push
sub
inc
mov
jns
retf
ret
stc
dec
and
lods
out
inc
jmp
call
mov
jnp
xor
jle
jae
or
nop
mov
adc
(bad)
cs
dec
xor
dec
nop
xor
std
xchg
mov
es
cwde
repz
jmp
les
add
sbb
and
sub
dec
sub
sub
push
and
push
push
rol
xor
pop
dec
inc
test
(bad)
mov
shl
ret
jle
adc
pushf
dec
loopne
cwde
inc
in
in
mov
shr
std
jmp
xor
gs
jno
pop
add
mov
inc
fwait
add
les
pop
(bad)
cmp
mov
sbb
mov
xor
fld
mov
jbe
dec
(bad)
adc
imul
scas
jmp
cmp
out
sub
nop
push
push
or
xor
inc
idiv
rcl
mov
xor
scas
cmp
xchg
xchg
inc
pop
inc
mov
xchg
std
jne
and
test
or
test
out
mov
push
ret
call
mov
sub
jmp
cmp
ja
test
or
pop
mov
mov
je
sti
cld
xchg
scas
add
imul
daa
test
add
mov
popf
in
sbb
fldenv
mov
and
sub
test
xchg
mov
inc
xor
inc
xchg
sub
mov
sub
cli
aaa
mov
push
lods
add
add
mov
popf
xchg
leave
data16
xor
add
popf
js
les
mov
loop
mov
inc
mov
(bad)
jb
fcmovne
pusha
or
xchg
imul
hlt
push
pop
sub
sbb
push
pop
cmps
pop
adc
inc
test
por
cmp
daa
lods
push
nop
lock
jp
int3
in
movs
sub
pop
add
jecxz
pop
jmp
jmp
push
js
mov
stc
adc
mov
jmp
push
jno
inc
repnz
les
inc
inc
xchg
repnz
ror
fild
cmps
nop
push
cmc
loope
sbb
push
mov
clc
aaa
dec
sub
inc
fild
mov
lahf
jp
push
push
add
cmps
lea
xor
mov
(bad)
fsubr
or
loopne
or
enter
or
cld
sub
sub
lar
leave
xchg
xchg
xchg
push
mov
enter
xor
add
cld
(bad)
cmc
adc
pop
sub
aad
dec
adc
pusha
fdivp
sub
and
adc
movs
xor
adc
sahf
and
mov
pop
adc
sti
inc
cmps
sbb
(bad)
out
int
loop
mov
sti
lods
sbb
sbb
and
mov
xchg
lods
or
in
test
ds
addr16
mov
stos
and
dec
inc
aam
scas
int
inc
pop
xor
xchg
jmp
in
shr
psrlw
in
cmps
(bad)
push
jno
aaa
bound
add
xor
in
ret
daa
xor
leave
lahf
mov
cmps
stos
imul
xor
lea
(bad)
cmc
push
shr
outs
and
add
jle
fwait
jge
mov
push
retf
mov
sbb
mov
fsubr
ins
jno
iret
je
jnp
and
mov
bound
inc
popf
(bad)
fcmovnb
(bad)
push
xchg
sbb
enter
push
mov
pop
mov
cmps
jmp
pop
jmp
mov
pushf
xchg
test
repz
fbstp
mov
pop
push
sbb
stos
outs
shr
in
das
xchg
(bad)
out
ds
ja
adc
jmp
sub
ffree
mov
mov
mov
scas
call
mov
aad
pop
icebp
arpl
outs
ss
repz
dec
ins
mov
lahf
rcr
sbb
mov
out
adc
add
push
xor
aas
in
mov
dec
cmp
dec
(bad)
out
inc
lea
dec
inc
loop
mov
js
(bad)
xor
cmp
stos
mov
test
data16
and
js
push
(bad)
or
xor
clc
lds
pushf
jb
mov
push
mov
push
lahf
pop
int
xchg
xor
cwde
xchg
xrelease
fmul
sti
xchg
xlat
xchg
mov
ficom
(bad)
retf
mov
jle
ja
out
or
xor
cmps
push
sbb
adc
push
dec
jmp
popf
clc
adc
xchg
jns
stos
mov
pop
mov
adc
pop
xor
add
repz
add
in
out
out
outs
rcr
rol
sti
clc
rol
pop
movs
adc
dec
adc
repz
add
pop
sar
sub
ins
push
dec
lea
push
iret
ja
pop
(bad)
pop
lahf
neg
xor
movs
push
fbstp
ret
xor
xchg
cmp
inc
adc
lea
lea
jecxz
repz
dec
fidivr
pop
push
adc
pop
and
mov
adc
mov
dec
mov
add
adc
push
pop
call
lods
shl
add
mov
call
cmp
and
aaa
scas
ds
int
adc
fdivr
leave
mov
add
cmp
xchg
mov
inc
loopne
adc
pop
push
sbb
and
pop
lea
mov
or
jg
or
add
js
xlat
push
pop
inc
aas
jne
jmp
lahf
adc
add
fsubr
loop
jb
and
scas
add
popf
pop
cmc
sbb
adc
dec
jbe
mov
inc
mov
inc
leave
sbb
mov
out
or
nop
add
pop
pop
dec
xchg
xchg
lock
rol
push
sbb
test
lods
pop
xchg
test
adc
jb
pop
cld
fs
mov
icebp
mov
aad
pop
rol
xor
retf
imul
jge
lods
popf
cdq
pop
sti
sub
jb
fsub
sahf
loop
imul
push
jle
xchg
test
int3
rcl
inc
iret
popf
mov
and
daa
cmp
sub
push
pop
mov
sub
jne
jecxz
pop
jg
rol
xor
push
sbb
dec
rol
jp
test
adc
push
fcomp
pop
mov
mov
mov
inc
in
cdq
scas
mov
adc
outs
xor
sub
scas
jle
fst
jp
push
(bad)
and
and
mov
test
adc
jg
sub
int3
inc
aaa
mov
mov
xchg
dec
int
int
and
ret
sbb
call
mov
not
test
lds
cld
inc
add
dec
retf
xlat
dec
retf
(bad)
outs
or
xor
test
xchg
bound
rol
lock
sub
dec
jp
(bad)
gs
cmp
(bad)
gs
jge
add
xor
xlat
in
inc
or
push
mov
outs
call
push
cmp
fisttp
push
push
and
jae
loop
ja
call
push
in
and
jmp
daa
ret
fistp
or
(bad)
fst
lods
sbb
xchg
retf
cli
enter
aam
xchg
(bad)
dec
cli
sbb
sub
repnz
or
sub
push
inc
sti
icebp
and
mov
lea
rol
test
sbb
cli
sbb
mov
fadd
ds
outs
aam
xchg
mov
cld
in
hlt
mov
dec
jl
test
and
ins
cmp
sbb
data16
adc
jnp
mov
sub
push
and
cmp
push
enter
push
mov
sbb
push
outs
push
or
xor
(bad)
jmp
movs
outs
inc
test
(bad)
mov
lods
cli
call
inc
mov
mov
sbb
and
icebp
pop
ins
ins
jge
adc
ret
or
sar
adc
pop
cs
jns
lods
loopne
outs
pusha
dec
scas
pushf
je
cld
push
pop
pop
cmp
sbb
je
mov
xchg
cmps
loopne
paddusw
into
push
int
sbb
es
mov
push
mov
(bad)
or
outs
inc
and
clc
xor
or
cmp
cs
fld
scas
cmps
test
pop
jno
jmp
inc
or
cs
mov
lea
push
(bad)
mov
fsubr
out
sar
call
push
push
int
sbb
xchg
(bad)
mov
inc
push
mov
lods
popf
loopne
lahf
scas
loope
xchg
mov
repnz
xchg
pop
in
test
es
cmp
movs
mov
xor
pop
pusha
int
and
daa
rol
mov
sbb
jle
repnz
cmp
cmc
cmp
add
ret
lea
add
rcr
push
lds
jne
test
xchg
jnp
sbb
sub
or
pop
or
mov
add
std
(bad)
lock
call
iret
jg
icebp
or
(bad)
mov
addr16
stos
je
arpl
cli
mov
jne
sbb
mov
push
in
sbb
clc
mov
jnp
push
in
test
sub
xchg
adc
xchg
pop
jg
rol
cwde
mov
adc
in
leave
and
pop
repnz
jge
aaa
or
jno
icebp
sub
cmps
mov
pop
sbb
or
shl
cmp
loopne
daa
xor
push
inc
xchg
sbb
push
fcomp
fdivr
fnstenv
jnp
or
cli
mov
fsubr
mov
cmp
inc
sub
mov
cmps
rcl
stos
(bad)
sbb
outs
push
push
push
sub
fwait
pop
add
xor
or
es
xor
xchg
in
xor
inc
push
mov
push
stos
sbb
xor
enter
iret
ja
jae
adc
daa
imul
pop
loope
xor
fcomp
dec
pop
(bad)
jecxz
enter
push
add
shl
mov
cdq
outs
retf
rol
xchg
out
push
mov
jge
and
or
jne
dec
mov
cmps
mov
stos
cmovo
(bad)
cld
jmp
mov
sub
hlt
(bad)
pop
xlat
loop
shr
sbb
scas
jmp
add
sub
sub
stc
movs
add
cmc
fsubrp
jne
js
lods
inc
cwde
and
pushf
clc
rcr
dec
(bad)
out
mov
ds
and
arpl
xor
ret
and
jne
push
ror
mov
cmp
and
cs
repnz
xchg
rol
retf
or
ins
lock
repz
jnp
int
xchg
dec
clc
cmp
sar
jbe
psllq
xchg
aas
stos
and
mov
jae
cli
pop
fisubr
sbb
xchg
hlt
xor
mov
leave
push
inc
mov
(bad)
adc
pusha
sub
add
lds
das
leave
fwait
lahf
push
jmp
mov
mov
dec
mov
imul
and
adc
lock
or
in
mov
push
bnd
pop
add
pop
in
cmp
mov
fwait
jg
rol
fld
push
mov
or
adc
aam
mov
pop
into
(bad)
mov
cmp
mov
adc
not
sub
and
mov
ret
les
push
pop
add
fidivr
jl
inc
jg
dec
pushf
ds
dec
mov
es
xor
add
fs
inc
sbb
(bad)
and
inc
inc
cmp
mov
cmp
mov
inc
xchg
fsubr
int
(bad)
jbe
pop
test
jge
in
retf
mov
push
in
cmp
or
hlt
and
outs
jns
and
mov
arpl
imul
xchg
push
imul
push
mov
sbb
sub
and
(bad)
mov
push
inc
clc
jne
rcl
repz
lahf
mov
mov
cmc
cld
outs
(bad)
dec
mov
pushf
and
outs
jae
push
out
pop
aad
fcmovnu
mov
in
sbb
addr16
or
aaa
(bad)
fisttp
pop
popa
icebp
rcl
cmp
loopne
ds
sub
fdiv
pop
jb
lea
scas
add
int
inc
or
or
mov
js
stos
rep
push
call
and
mov
sahf
mov
out
call
mov
stc
xchg
cli
sub
push
ficomp
or
shl
call
dec
test
adc
mov
inc
adc
mov
xchg
rol
cmps
fdivr
(bad)
xchg
cmp
mov
mov
cld
and
or
nop
adc
pop
jnp
pop
mov
test
inc
adc
in
pop
or
inc
into
pusha
xchg
sub
cmp
jae
cli
dec
sub
rcr
jne
jl
imul
movs
int3
sbb
and
shl
lods
push
test
or
in
std
jb
in
loop
push
adc
push
pop
clc
or
and
sar
push
in
and
popf
daa
jno
fnstenv
mov
das
test
jecxz
sti
std
dec
mov
xchg
push
mov
sub
imul
scas
sbb
and
lock
test
pop
pop
mov
xchg
sub
mov
xchg
pop
aam
add
dec
xor
dec
and
sbb
cmp
mov
bound
fisttp
sub
clc
sbb
inc
inc
cmp
jns
ins
xchg
ja
inc
or
loope
dec
push
inc
mov
aam
das
mov
paddusb
mov
imul
fisttp
jno
push
addr16
mov
xor
out
movs
pushf
mov
push
pushf
sbb
pop
(bad)
xchg
xchg
outs
imul
and
lods
dec
imul
fadd
imul
movs
adc
xor
in
imul
or
fimul
dec
(bad)
xor
stc
ret
mul
xchg
and
fnstcw
pop
std
xor
sbb
stos
cmp
jns
aaa
inc
sub
xlat
arpl
fisubr
mov
inc
jp
aaa
mov
in
ss
fdecstp
and
in
(bad)
mov
(bad)
mul
sub
ret
cmps
es
into
scas
inc
imul
mov
add
inc
xchg
clc
xlat
mov
nop
pop
add
mov
push
jae
or
mov
xchg
xor
aad
jmp
addr16
push
int
push
imul
pusha
xor
inc
pop
mov
stos
sbb
into
std
xchg
test
sar
jmp
(bad)
in
xchg
add
pop
sbb
xor
cs
(bad)
push
imul
sub
leave
lea
out
aas
fmul
jno
arpl
xchg
add
ret
jp
shr
out
nop
or
outs
push
addr16
xor
mov
push
xor
push
test
adc
ret
repz
pop
mov
or
sbb
lods
xchg
adc
and
xor
sbb
jae
clc
mov
push
xchg
adc
jns
push
mov
mov
push
test
lds
mov
cmp
xor
push
cmps
jp
cmp
in
pop
cmp
in
jne
inc
popa
jecxz
xchg
xor
mov
inc
pop
xchg
into
xchg
sar
jge
in
jg
shr
retf
pop
mov
mov
pushaw
retf
inc
(bad)
fnsave
hlt
xor
(bad)
repnz
arpl
int3
jl
dec
loop
rol
loope
or
xor
adc
test
cmp
not
js
adc
scas
stos
sub
or
sbb
call
dec
call
push
int
or
cdq
mov
inc
inc
push
cwde
xlat
out
mov
mov
adc
retf
inc
mov
xchg
sbb
sbb
add
shr
mov
add
int3
adc
movs
popa
sbb
(bad)
retf
mov
jmp
push
push
lahf
test
mov
clc
xchg
jae
clc
sub
jnp
push
test
cmp
xor
mov
mov
cmps
push
shl
je
jns
out
cli
fild
and
sub
mov
popf
or
sub
cmps
cld
mov
ret
inc
pushf
jb
dec
nop
dec
xor
mov
mov
mov
cmp
lods
inc
movs
pop
dec
push
clc
jecxz
inc
ds
jae
mov
mov
fidivr
(bad)
xchg
retf
popa
ins
std
or
inc
shr
xchg
jno
or
mov
shl
(bad)
rcr
inc
std
mov
arpl
ins
loopne
ins
cmp
call
fbld
pop
pop
pop
fisubr
dec
inc
lock
in
xor
mov
stc
pop
xor
jg
icebp
and
stc
(bad)
or
cmp
adc
or
lock
cdq
mov
pop
or
push
cmp
stos
fcomip
xchg
lods
mov
dec
jno
jecxz
imul
inc
add
sub
mov
icebp
int3
jl
pop
cmp
mov
stos
push
and
push
and
jg
shl
stc
mov
push
pop
mov
stos
mov
sbb
push
rcl
fisttp
out
int
shr
mov
mov
cmps
aad
push
inc
sub
mov
sbb
or
and
loop
lods
dec
mov
cmp
and
xchg
(bad)
jmp
inc
cmps
aad
(bad)
mov
add
cli
not
jne
sub
mov
fcmovnu
repnz
lock
add
movs
push
js
cld
add
pop
les
mov
pop
call
mul
mov
nop
imul
call
and
js
or
mov
or
data16
mov
mov
leave
test
push
out
clc
add
(bad)
retf
test
rcpps
inc
jecxz
aad
xchg
and
ror
shl
or
mov
xor
mov
jmp
mov
sbb
adc
add
mov
xchg
mov
inc
in
ret
(bad)
in
jae
pop
inc
imul
mov
dec
inc
mov
lods
mov
lods
nop
push
test
sahf
mov
or
ds
and
cwde
(bad)
pop
mov
cmp
sub
mov
sub
pop
mov
arpl
jns
rol
dec
das
push
jno
mov
push
xchg
cmp
pop
push
sbb
movs
sahf
arpl
pushf
fstp
push
outs
jno
pop
mov
(bad)
add
loop
inc
loopne
cmp
push
xchg
fistp
lds
lahf
idiv
xchg
pop
inc
pop
icebp
or
into
sbb
inc
call
clc
stos
jge
mov
fwait
popf
sub
jecxz
idiv
and
aad
aam
int
and
push
mov
adc
repz
xor
adc
fwait
xchg
sub
inc
mov
pop
cld
xchg
inc
loop
mov
or
out
sub
mov
std
stos
sbb
and
jmp
sub
sar
and
adc
fist
xor
push
mov
es
aaa
rcr
and
mov
push
xchg
sub
in
and
xchg
in
mov
sub
aad
psraw
dec
cmp
ficomp
js
sub
mov
fs
xchg
ficom
jecxz
fcom
icebp
dec
(bad)
icebp
fstp
cmp
aas
adc
xchg
(bad)
ja
dec
xor
lock
(bad)
pop
and
pop
mov
jnp
lea
mov
mov
test
push
inc
clc
dec
jno
add
cmc
adc
mov
(bad)
sub
les
pop
call
test
in
addr16
aaa
jae
mov
adc
stos
imul
stc
js
add
sahf
push
(bad)
test
scas
(bad)
push
pop
jp
scas
imul
jo
fs
aam
ja
jle
push
out
jg
pop
les
jecxz
jnp
or
pop
xchg
adc
movs
daa
sbb
inc
add
aam
add
movs
mov
push
not
push
hlt
mov
fdiv
mov
pop
mov
cmc
in
fadd
cmps
push
shl
js
mov
add
fistp
stc
cmps
inc
adc
out
ins
push
(bad)
adc
mov
jmp
int3
aad
push
push
or
and
jae
adc
(bad)
nop
xchg
cli
ss
cli
int3
mov
jnp
cmp
xchg
add
mov
mov
outs
push
call
jo
xor
fld
test
int3
mov
jbe
ds
rol
in
xor
sti
mov
jmp
dec
cli
aas
loope
xchg
cmp
stc
jb
mov
mov
(bad)
pop
js
cmp
xor
outs
jmp
into
mov
bound
pusha
das
jo
cld
movs
popa
movs
cmp
jl
mov
ins
shr
shr
scas
int3
mov
lea
mov
xor
adc
pushf
(bad)
sar
jbe
out
mov
mov
pusha
mov
ret
cmp
jo
test
test
or
push
out
(bad)
xchg
mov
sbb
ja
add
jb
pop
iret
into
sahf
fsub
jp
push
das
ja
sbb
xchg
add
mov
add
inc
imul
dec
inc
ss
test
outs
and
mov
fld
fcomp
jnp
fcmovbe
or
in
loop
in
mov
cwde
lods
xchg
cs
movs
ffree
stos
mov
in
nop
popa
test
mov
cmps
ds
std
jbe
push
xchg
rol
mov
cli
xchg
int
es
cwde
cmps
and
aad
sbb
dec
mov
jmp
xor
sub
scas
sub
sbb
repnz
sbb
sub
js
pop
jo
jmp
ins
fmul
pop
movs
or
dec
stc
mov
sbb
popf
in
fstp
sub
xchg
inc
push
test
call
jmp
jnp
sbb
push
dec
fimul
mov
jae
adc
out
loopne
hlt
pop
add
adc
bound
push
es
in
fsub
clc
jb
xchg
scas
aas
pop
and
imul
push
adc
sbb
and
mov
cs
adc
(bad)
fnstcw
repz
and
xchg
xchg
stc
mov
scas
retf
fidiv
rcr
cmp
pusha
or
or
inc
shl
std
ja
ficom
loopne
lods
lahf
loopne
in
mov
mov
dec
iret
into
ins
test
jp
adc
icebp
add
mov
push
push
dec
lahf
mov
mov
icebp
(bad)
jp
mov
mov
push
pop
xor
and
sub
add
stc
and
arpl
pop
lds
adc
imul
jbe
sub
xchg
push
xchg
aam
call
gs
sbb
test
xor
jae
ins
fst
and
iret
(bad)
xchg
js
inc
sub
cmp
sub
mov
dec
or
into
in
(bad)
aad
mov
sub
repz
enter
cmp
mov
jns
dec
mov
fsubr
frstor
adc
sbb
sub
sbb
xor
bound
push
mov
fnsave
std
sub
js
sti
adc
call
in
push
xchg
sbb
retf
ret
mov
outs
ja
call
bound
cmp
(bad)
mov
ja
ins
and
mov
xchg
or
scas
icebp
inc
sbb
in
retf
mov
mov
retf
cmc
adc
mov
pushf
es
lds
cdq
cmps
adc
xchg
inc
mov
inc
xchg
sbb
sub
push
sbb
nop
pop
imul
mov
fadd
xor
mov
out
push
jnp
jg
test
je
push
mov
fldenv
lods
int3
jmp
cmp
scas
jne
xchg
arpl
ds
mov
push
mov
shr
arpl
mov
int3
in
aaa
cmps
and
mov
pushf
test
iret
ret
xchg
xlat
add
jg
arpl
pop
jmp
sti
ret
jo
mov
icebp
and
adc
ret
adc
cmovl
mov
mov
jns
mov
lahf
cmps
aas
push
loopne
test
pop
mov
loopne
cmp
mov
jo
xchg
scas
add
scas
jl
addr16
out
inc
aam
mov
retf
dec
jle
mov
lock
dec
cwde
jl
sub
add
lock
cmc
hlt
pop
adc
jb
out
mov
in
idiv
leave
sbb
push
sbb
pop
or
fcomp
sub
cmp
lds
ins
jge
fbld
inc
pushf
cmps
fdiv
jns
sub
sub
jmp
call
push
outs
retf
das
ret
xchg
cmp
repz
imul
aaa
xor
ffreep
outs
fistp
push
imul
das
test
add
pop
sti
cdq
pop
cmp
sbb
mov
repnz
nop
mov
and
jbe
mov
push
aaa
mov
pop
adc
xor
jle
dec
fisttp
dec
test
jecxz
push
fs
iret
inc
inc
xor
jle
loop
fst
fcomp
jge
call
or
ret
jmp
in
aam
scas
imul
arpl
neg
popf
fistp
or
nop
sub
cmp
(bad)
or
scas
jg
pop
dec
adc
(bad)
sar
dec
and
loope
cmp
loop
mov
inc
dec
lea
stos
cmp
ficom
test
scas
bound
repnz
sbb
scas
out
sub
fldcw
sar
push
inc
scas
in
jmp
pop
lock
mov
and
xchg
jno
sbb
mov
sahf
int
fs
(bad)
test
push
sub
popf
in
xchg
mov
imul
sahf
test
xchg
daa
test
push
pushf
xchg
sub
cs
xchg
ret
mov
cmc
push
sar
jns
fs
pop
das
movs
pop
cmps
xlat
xchg
mov
mov
adc
shl
mov
aaa
mov
jl
icebp
in
mov
outs
pop
out
inc
cmp
dec
pop
dec
pop
into
dec
push
mov
cmp
loop
dec
gs
sub
(bad)
(bad)
dec
(bad)
mov
cmp
enter
cwde
jns
mov
or
push
jmp
arpl
jge
adc
dec
retf
leave
cmp
push
out
sub
fdivr
repz
push
ins
rcr
cmp
jmp
inc
dec
popa
fnstcw
rcr
jb
xor
lock
inc
movs
nop
cdq
or
jo
inc
jns
call
int3
mov
cld
xlat
pop
mov
bound
stc
fdiv
loope
loop
dec
pusha
into
push
push
sbb
or
or
ss
xchg
push
mov
std
js
cld
pop
loopne
mov
sub
pop
outs
rcr
aad
sbb
lahf
inc
mov
mov
cmp
call
int
push
rcl
pop
pushf
sbb
movs
xchg
adc
mov
and
out
jp
das
mov
loope
mov
and
mov
push
or
ret
ins
push
gs
bound
fstp
in
xchg
mov
xchg
lahf
je
xchg
jecxz
arpl
dec
xlat
push
clc
mov
jle
push
neg
fild
mov
cld
fcomip
pop
pop
add
call
ficom
pop
arpl
mov
jle
pop
sahf
mov
test
js
cmp
push
push
cmp
lea
sub
push
mov
pusha
and
std
test
sbb
movs
(bad)
mov
ins
sub
test
mov
jmp
pop
(bad)
addr16
jmp
or
(bad)
enter
hlt
daa
pusha
push
outs
clc
neg
adc
(bad)
out
xlat
ror
pop
mov
scas
inc
dec
(bad)
mov
lds
xchg
sbb
out
dec
and
push
out
jmp
retf
push
cmps
inc
dec
leave
jns
push
ret
mov
sbb
ja
dec
je
shr
inc
jmp
aaa
xlat
mov
ds
mov
dec
stos
ins
jne
adc
cmps
aas
cmps
push
fadd
xor
es
sbb
outs
push
(bad)
dec
scas
mov
aaa
pop
add
add
inc
mov
dec
add
inc
jbe
rcr
push
jmp
daa
sbb
push
fld
addr16
add
jae
xchg
mov
fdiv
mov
add
call
sbb
jmp
mov
cs
(bad)
(bad)
loopne
xor
lahf
mov
scas
cli
inc
into
scas
pop
test
outs
je
mov
push
pop
pop
cmp
push
pop
std
xor
dec
mov
mov
jle
sub
sahf
les
int3
push
adc
aad
aam
inc
cli
jnp
jge
jl
cmp
scas
xor
mov
imul
js
jl
(bad)
aas
lds
push
pop
xchg
mov
or
sub
sub
sbb
in
cmp
mov
fild
adc
(bad)
sahf
test
add
mov
mov
push
mov
rol
mov
and
ficom
jo
call
dec
jle
adc
mov
inc
mov
mov
inc
fistp
mov
mov
push
dec
sub
pop
shl
xlat
jl
sub
cmps
mov
pop
mov
cwde
pop
cld
pop
aas
push
scas
call
push
ds
mov
push
jb
enter
outs
xchg
daa
out
stos
neg
sar
add
push
jl
popa
aaa
fistp
mov
xchg
cmp
sbb
inc
xchg
jne
fsubp
imul
sub
fist
mov
cdq
(bad)
lock
out
in
sub
and
cmps
dec
mov
mov
(bad)
movs
add
imul
les
push
push
clc
sub
jb
aas
jbe
pop
test
cmp
or
iret
push
retf
push
or
dec
lahf
js
jae
adc
ins
sub
ret
mov
in
mov
lods
pop
ja
sub
arpl
test
cld
in
(bad)
mov
xor
mov
cwde
bound
aaa
rcr
mov
add
adc
out
ficom
jo
sbb
xchg
pop
or
icebp
sbb
js
adc
mov
scas
push
or
xchg
loope
or
cmp
bound
adc
cmp
(bad)
pop
(bad)
(bad)
fdiv
aad
and
cmp
cli
xor
or
std
sbb
addr16
call
and
xchg
fimul
sbb
lods
icebp
lods
cs
pop
sub
ss
xchg
lock
retf
xor
add
push
or
xchg
arpl
out
call
outs
mov
mov
sub
aaa
(bad)
icebp
mov
inc
mov
das
xchg
cmp
add
sub
dec
mov
cmps
in
mov
hlt
fidiv
jecxz
leave
cmps
outs
shl
cmps
lahf
sub
pop
push
ret
push
and
stos
clc
sub
pusha
outs
out
std
das
push
ret
cmp
pop
push
lahf
xor
jmp
add
shl
sub
stc
mul
mov
or
das
adc
stos
aam
inc
jno
pushf
mov
ins
pop
sbb
and
mov
xchg
or
push
loopne
lods
fist
imul
mov
jae
repnz
push
adc
clc
out
test
and
ficomp
sar
cli
pop
bound
neg
xchg
sub
inc
aas
icebp
cmps
imul
shr
jo
add
add
dec
ror
out
fiadd
test
xor
jecxz
(bad)
cmpps
adc
fs
xor
gs
lea
mov
mov
outs
jl
into
hlt
repnz
push
cmc
xchg
push
xchg
mov
add
sub
out
dec
mov
dec
call
mov
jg
cmp
sub
mov
mov
cmp
add
dec
(bad)
jecxz
mov
inc
mov
cdq
mov
cwde
jle
mov
rcl
addr16
out
pop
sti
cmps
(bad)
dec
mov
repz
scas
imul
jmp
push
sub
sub
jl
clc
xchg
or
(bad)
gs
inc
pop
scas
nop
dec
test
pop
cmp
adc
jle
adc
xchg
stos
(bad)
mov
jle
jecxz
sbb
xchg
inc
fidiv
pop
or
and
pushf
int3
daa
fstp
dec
xor
out
pop
inc
int
sub
push
inc
sbb
pop
mov
pop
cs
cmps
cmps
fidiv
mov
jmp
push
push
aaa
and
or
mov
aas
push
jbe
movs
push
(bad)
(bad)
adc
fild
sbb
mov
cmp
(bad)
xchg
repz
int
(bad)
ficom
leave
test
sbb
adc
pusha
ja
jo
mov
push
loop
aas
std
add
pusha
and
jo
inc
(bad)
in
outs
lods
xor
jb
das
in
sbb
add
mov
test
cmc
ins
and
imul
xchg
mov
jl
dec
test
pushf
enter
pop
das
enter
out
dec
int3
(bad)
mov
xor
pop
xor
je
cmp
in
jmp
or
aad
pusha
jmp
adc
jmp
lahf
push
inc
xor
dec
mov
inc
ins
adc
xchg
lds
mov
mov
mov
pop
cmps
cdq
div
jmp
sahf
adc
pop
jecxz
jmp
adc
and
in
inc
mov
adc
fnsave
inc
loopne
inc
xchg
mov
ret
aas
aas
cdq
sbb
dec
loope
pop
inc
jo
ja
cmp
add
add
fisttp
out
inc
add
and
adc
lds
jnp
xchg
rcr
fidivr
(bad)
scas
rol
lea
jnp
mov
cwde
xor
mov
mov
cmps
pop
lods
(bad)
push
clc
inc
repnz
adc
sub
not
pushf
push
jo
int3
fisubr
mov
adc
int
js
sub
push
in
jge
xchg
dec
xchg
mov
loope
sub
repz
adc
or
inc
dec
inc
sbb
movs
mov
sbb
stc
into
and
icebp
int3
pop
jns
dec
mov
dec
add
div
ds
out
cmp
fldenv
sub
mov
fwait
pop
aas
fidiv
ins
jo
inc
stc
call
mov
sahf
jb
xchg
aas
nop
xor
fwait
and
lds
popf
test
clc
sub
int
test
adc
cli
adc
mov
bound
cmc
cmp
ror
add
fdiv
push
xor
sbb
jg
push
sub
imul
enter
mov
icebp
mov
mov
add
add
imul
jne
and
xchg
outs
ret
nop
jge
and
repnz
xor
(bad)
enter
or
std
inc
sub
movs
add
loopne
sbb
test
imul
daa
shl
aaa
xchg
push
popa
js
mov
popa
inc
int
imul
sbb
repnz
push
xlat
and
push
pop
pop
adc
into
into
dec
adc
lock
gs
xchg
xor
inc
mov
out
and
clc
cmp
das
dec
dec
mov
dec
inc
mov
mov
xor
das
call
in
cmp
pop
mov
sbb
push
fcomp
mov
dec
or
cmps
loopne
shl
repnz
gs
mov
or
xlat
mov
xchg
stc
nop
aas
inc
pusha
cwde
loopne
pop
inc
test
lea
mov
rol
out
shl
jb
push
aas
div
jae
push
mov
adc
cmp
mov
das
ret
cmp
mov
xor
aam
loopne
icebp
and
pop
sbb
dec
sub
cmp
div
jg
es
mov
lahf
into
ret
and
push
inc
subps
jle
jg
(bad)
xor
popf
aad
lahf
xchg
mov
dec
shl
cli
push
pop
push
pop
sub
xchg
or
enter
jl
push
pop
lock
sar
jle
pop
sub
mov
or
fistp
inc
movs
fmul
fisub
push
inc
xor
cmp
mov
xor
mov
aaa
push
loopne
mov
or
(bad)
xlat
aaa
push
mov
sbb
popa
cmp
loope
mov
int3
mov
adc
push
fsubr
dec
or
fild
or
fcmovne
sahf
push
out
fmulp
add
mul
mov
stc
mov
jb
push
rcl
xchg
mov
add
cdq
mov
sahf
add
cmp
sub
test
sbb
jnp
ror
sub
nop
sti
jmp
or
rcl
xor
xor
out
xor
cdq
out
test
ins
and
mov
sahf
loopne
xchg
cmc
cwde
in
mov
retf
movs
sub
repnz
fisubr
out
imul
xchg
mov
sub
jbe
retf
xor
out
daa
shr
outs
ret
mov
xchg
out
jp
out
adc
hlt
sbb
jmp
push
outs
aam
or
mov
aaa
jno
repnz
call
pop
jmp
mov
call
xor
mov
out
mov
xchg
cmp
loopne
iret
out
stos
pcmpeqb
jns
and
sub
scas
mov
pop
leave
xchg
inc
mov
out
and
jp
bound
test
fimul
jge
nop
and
dec
cli
mov
xor
or
xor
dec
clc
popa
aad
movs
pop
sbb
sub
add
inc
pop
pusha
test
jp
outs
cmp
icebp
scas
cwde
inc
lahf
fbstp
movs
push
stos
adc
adc
aaa
out
push
test
push
xchg
aaa
(bad)
ds
pop
adc
add
sti
mov
mov
out
jae
inc
pop
stos
dec
adc
ins
xchg
jno
lahf
fcomp
xchg
call
loopne
cmps
jl
push
jns
dec
xor
dec
mov
mov
(bad)
sbb
mov
fld
and
dec
movs
xor
daa
ins
ret
ins
add
in
test
dec
mov
add
inc
mov
daa
sbb
mov
arpl
popa
add
mov
mov
rol
adc
pusha
fcomp
cmc
les
inc
mov
mov
cdq
popw
cli
pushfw
fnstcw
ret
or
imul
sbb
xchg
cs
pop
test
imul
mov
scas
ret
sub
mov
mov
fmul
dec
(bad)
fimul
pop
bound
adc
ins
xor
fs
popa
push
test
adc
and
int
jbe
sub
inc
(bad)
sub
adc
sub
mov
lods
dec
or
notrack
pop
inc
loop
inc
aas
fidiv
inc
enter
xchg
dec
add
adc
movs
jo
hlt
test
push
int
pop
jmp
lods
mov
mov
push
xchg
dec
es
jo
add
loope
ret
mov
dec
or
das
pop
or
jp
ror
cmc
loop
cli
lods
jge
sub
movs
xor
aam
or
addr16
mov
int3
adc
jmp
ror
dec
test
movs
retf
cmp
aad
cmps
nop
int3
test
mov
addr16
les
shl
repz
sub
xchg
add
xor
or
xor
shl
cmp
hlt
push
mov
cld
fwait
test
stos
shl
sbb
retf
pop
adc
dec
or
mov
xor
(bad)
lock
mov
mov
or
mov
cld
push
mov
pusha
(bad)
mov
mov
sahf
leave
jecxz
jecxz
jns
push
mov
cmc
xor
jmp
cmps
and
dec
rcl
(bad)
push
sbb
movs
in
lods
jg
retf
mov
add
pop
adc
call
cld
test
sbb
js
int
out
xor
aad
jge
add
mov
push
fist
pusha
and
dec
push
inc
in
xor
cs
and
je
jle
(bad)
popf
sub
gs
mov
test
repz
faddp
repnz
bound
and
lds
(bad)
dec
data16
repnz
or
(bad)
es
in
jne
mov
stos
push
jo
pop
pusha
inc
ror
or
mov
ucomiss
icebp
xchg
inc
push
in
das
adc
sub
imul
cmps
add
push
jb
pusha
cdq
xchg
iret
out
jbe
inc
stc
or
mov
adc
rcl
lock
push
adc
sub
jge
mov
out
retf
mov
pop
hlt
xor
pop
xor
nop
xor
ins
cli
scas
imul
repnz
popf
dec
or
pop
pushf
pop
fbld
ins
push
out
sub
int
test
imul
push
inc
mov
repnz
stos
jae
or
ror
test
cmps
pusha
pop
aad
xchg
fisub
jae
js
mov
mov
dec
repnz
pop
sar
pop
out
daa
or
(bad)
test
jl
sbb
adc
ins
rcr
xchg
pop
int
imul
jne
mov
imul
and
xor
mov
loop
mov
xchg
push
loope
outs
ret
sti
mov
test
shl
in
mov
ins
outs
sbb
fist
xor
push
ds
aad
out
push
xor
mov
sti
int
sti
and
cld
push
rol
jecxz
mov
mov
cli
sbb
cmp
pop
idiv
xchg
push
add
or
xchg
jge
mov
dec
push
mov
jg
pop
pop
pop
hlt
ja
push
cld
pop
mov
dec
(bad)
xchg
out
out
outs
aad
pusha
loope
inc
push
mov
jp
pop
je
mov
rol
mov
or
int3
pusha
jne
or
mov
dec
mov
das
aas
(bad)
mov
pusha
fcomp
pop
sbb
jge
xchg
mov
in
or
sub
ins
fdiv
idiv
add
repz
jnp
aas
fwait
and
adc
ins
shr
xor
es
pop
cmp
ret
cmps
dec
mov
aaa
inc
in
ins
mov
mov
mov
or
cmps
(bad)
in
mov
xchg
jae
xor
cmp
outs
cmp
cwde
inc
fdivp
neg
and
gs
(bad)
sub
loop
shl
push
mov
ins
xor
cmps
sbb
jns
out
sbb
fdivr
or
push
mov
daa
mov
pop
pusha
int3
mov
jle
lods
or
mov
je
arpl
pop
push
jmp
adc
pop
js
mov
rcl
stos
add
ins
int3
push
div
hlt
shl
fmul
fisttp
lds
pop
pop
push
add
xchg
mov
xor
scas
cmps
xor
jg
lea
push
fwait
int3
ror
adc
imul
cdq
push
daa
fwait
scas
mov
outs
xor
mov
fild
das
les
fisubr
stc
mov
jb
popa
mov
sub
fnstenv
inc
mov
mov
inc
lds
out
fcomp
pop
das
int3
sub
and
or
pop
fimul
jb
mov
xchg
fstp
xchg
xchg
out
add
mov
jp
add
pop
sub
sti
pop
cmps
int3
xchg
std
mov
div
jmp
dec
push
add
ins
pop
and
mov
fwait
inc
fst
add
dec
test
and
and
and
ja
inc
(bad)
sbb
js
out
mov
cli
jl
mov
loopne
push
mov
pusha
push
ss
sub
dec
(bad)
call
mov
push
mov
xchg
mov
(bad)
cmps
mov
movs
or
inc
out
enter
mov
out
imul
rcr
mov
xchg
popf
mov
jmp
ret
test
(bad)
in
push
or
lahf
jmp
(bad)
sti
mov
or
xchg
mov
addr16
and
lods
leave
dec
mov
ins
aaa
xor
xchg
test
cmps
dec
xchg
push
mov
inc
sbb
retf
jge
xor
mov
addr16
imul
mov
sub
addr16
loop
and
cs
clc
rcl
dec
mov
(bad)
sbb
data16
cmp
stos
popf
loop
and
loopne
mov
sub
mov
in
xchg
pop
fstp
jmp
xchg
dec
iret
or
push
test
lahf
(bad)
in
mov
pop
inc
rcr
int
sub
ret
adc
lods
push
imul
packssdw
mov
jnp
ret
or
sub
(bad)
(bad)
mov
jne
fstp
adc
enter
bound
popa
test
mov
fs
sub
mov
jle
xchg
mov
(bad)
aaa
adc
xchg
test
add
xor
(bad)
sub
pop
lock
out
jmp
fst
lds
adc
ins
ja
mov
fst
(bad)
outs
jmp
lds
adc
cld
cmp
inc
(bad)
xor
mov
xchg
xchg
push
test
jae
into
(bad)
or
scas
push
(bad)
stos
outs
fcom
ja
or
add
mov
fwait
jae
ret
imul
jbe
call
pop
cwde
in
sub
dec
loop
or
lahf
xor
and
dec
add
add
call
xor
gs
shl
jge
sub
or
shl
add
fcom
dec
in
xlat
scas
fld
mov
pop
add
add
and
shr
lods
pushf
fadd
pop
pop
dec
stc
xlat
shl
mov
inc
pop
inc
jb
aas
je
ss
pop
pop
jg
jge
mov
data16
dec
inc
mov
cmp
add
mov
xchg
cmp
hlt
fwait
outs
jecxz
sti
sbb
icebp
dec
fld
stos
cmp
int
inc
cmc
aas
add
ds
bound
xchg
jns
xchg
out
inc
out
pextrw
xchg
stos
add
(bad)
fsubp
dec
xlat
xor
sahf
cwde
inc
xor
jne
mov
jl
sub
cmp
inc
lea
test
jae
les
sub
jae
lea
sbb
mov
inc
and
repz
mov
cld
sbb
cmp
xchg
out
aam
scas
(bad)
ds
nop
pop
pop
pop
fdivr
outs
mov
push
sti
in
dec
popf
cmp
shr
ret
mov
sbb
leave
leave
out
sbb
jp
ins
push
mov
fdivr
aad
aad
xchg
and
lahf
mov
xor
es
out
fistp
dec
jns
cli
hlt
pusha
rol
push
ficom
sbb
mov
jo
xor
shl
jne
or
jbe
aad
inc
mov
sbb
mov
cmp
(bad)
mov
mov
stc
xor
inc
xchg
test
and
jmp
sub
mov
xor
popf
std
xchg
stos
or
adc
cmps
jl
pop
(bad)
jge
inc
jle
push
inc
adc
out
lahf
mov
shl
pop
dec
rol
fbld
idiv
mov
call
(bad)
je
cmc
lea
cs
ret
inc
sub
cwde
dec
nop
jmp
addr16
or
adc
push
jmp
and
imul
mov
add
fldcw
mov
call
out
cmps
pop
(bad)
aas
das
ins
mov
mov
xchg
jnp
and
and
sub
cmp
mov
movs
jbe
inc
push
out
adc
iret
push
dec
cmp
in
inc
mov
and
mov
retf
push
inc
jle
ror
lea
cdq
or
cmp
cs
mov
stos
and
push
fstp
add
fcomp
bound
jo
cdq
les
(bad)
xor
in
fnsave
test
pop
aas
arpl
xor
jne
and
push
mov
xlat
rcr
fdiv
jnp
sbb
mov
nop
outs
mov
aaa
cmp
pop
loope
or
pop
push
xor
mov
clc
(bad)
mov
dec
fistp
push
fist
cmp
push
inc
sub
xchg
xchg
and
mov
shufps
sub
cld
cmp
test
mov
call
xor
aas
push
nop
(bad)
imul
cmp
inc
repz
js
or
stos
inc
push
lahf
aaa
rol
jo
and
sub
cwde
push
xor
repnz
std
test
adc
aam
imul
dec
out
jge
mov
stc
inc
repnz
pop
enter
and
dec
div
jle
cmp
mov
je
sub
jmp
enter
xor
fcom
jmp
ret
mov
cmps
int
mov
mov
loopne
(bad)
rcl
and
test
mov
or
pop
popa
leave
loope
jbe
jmp
and
push
call
lock
pop
cmp
aam
inc
sub
dec
mov
mov
repz
(bad)
cmp
mov
mov
sahf
inc
icebp
lea
push
dec
lea
sbb
push
mov
mov
nop
push
adc
push
ja
test
nop
and
les
test
lock
cli
ret
add
in
mov
jg
jb
sub
cmp
xor
movs
and
xor
dec
repz
data16
and
shr
dec
ds
inc
jmp
jno
in
test
add
adc
xor
test
aad
push
loop
stc
jmp
xchg
cmc
and
fs
pop
retf
(bad)
cwde
es
ds
cmp
or
add
jle
jecxz
(bad)
push
ss
mov
jecxz
add
int3
sub
sub
jle
fdivp
mov
push
pop
jmp
mov
adc
int
xchg
mov
jno
repz
sub
pop
jecxz
adc
out
(bad)
xchg
jecxz
(bad)
add
imul
js
jle
fcomp
cmp
pushf
dec
data16
xchg
out
mov
add
add
je
mov
cmps
mov
jl
or
ja
dec
add
(bad)
and
push
aam
mov
mov
pop
gs
mov
stos
aaa
lea
cdq
fwait
sub
test
retf
cmp
or
jl
in
aas
adc
pop
xor
int
jle
inc
or
fbstp
push
add
aaa
push
xor
push
inc
mov
sar
inc
test
xor
icebp
mov
inc
gs
add
mov
mov
call
mov
ss
and
daa
mov
dec
mov
push
mov
or
or
(bad)
icebp
add
shl
jp
loop
jecxz
pop
mov
loopne
aad
inc
scas
sub
out
cmp
leave
xchg
inc
fistp
lahf
dec
push
xchg
movs
cdq
pop
xchg
mov
adc
xchg
mov
mov
retf
outs
jno
add
cmp
in
scas
push
ds
sidtd
int
xlat
leave
mov
xchg
mov
adc
xlat
inc
adc
jl
push
xchg
rcr
jne
jecxz
and
xlat
data16
jo
mov
sbb
test
and
pop
sbb
sar
xchg
sub
pop
fld
gs
(bad)
(bad)
fnop
ja
fadd
shl
add
cmps
fcmovb
or
data16
mov
and
outs
(bad)
fidiv
sbb
rol
mov
sub
fcmovbe
mov
rol
lahf
xchg
fild
popa
fnstenv
pop
jl
jg
and
xchg
test
sti
hlt
shl
sbb
aad
cld
adc
(bad)
sub
iret
int
icebp
push
je
ss
and
push
clc
and
adc
dec
int
int
(bad)
sahf
(bad)
xchg
stos
inc
sbb
push
aad
xor
fcmovne
push
ret
inc
jecxz
sub
push
popf
add
imul
mov
adc
sub
inc
ins
dec
imul
(bad)
rcl
or
out
int
loope
or
in
jbe
out
add
xor
mov
xchg
int3
test
and
pop
ins
dec
popa
mov
push
add
pop
dec
lea
or
xlat
into
frstor
or
mov
out
pop
mov
(bad)
push
les
xchg
scas
stos
(bad)
outs
mov
(bad)
jg
sub
(bad)
push
pop
sar
movs
arpl
and
add
jle
xchg
mov
cld
div
ins
retf
sub
fstp
sub
add
repnz
jnp
ret
dec
and
das
jmp
fild
sbb
les
aad
and
loope
add
xchg
adc
lea
pushf
and
repnz
xchg
cwde
popa
pop
add
push
dec
xchg
cdq
ret
nop
retf
clc
pop
adc
loopne
shr
push
imul
mov
xchg
fldenv
mov
xor
push
loope
xchg
jmp
dec
stc
sub
mov
loope
and
repz
inc
push
mov
push
pop
loop
pop
sub
nop
add
xchg
push
sub
cmps
ins
mov
add
add
fcmove
cmp
cmps
add
sti
cwde
or
pop
imul
sub
pop
mov
sub
sub
add
cmp
imul
pop
and
mov
js
fdivr
loopne
in
jne
(bad)
daa
xlat
movs
fbld
sar
stos
jns
cmc
sub
retf
getsec
pop
push
in
add
mov
ins
dec
sbb
pop
cmp
sub
loope
cmc
push
dec
pop
test
out
(bad)
xchg
not
xchg
cs
ret
jnp
push
and
sub
call
inc
in
sbb
dec
fistp
cld
sub
in
or
push
and
popf
stos
stos
push
jmp
sbb
mov
and
sbb
leave
or
cs
and
shl
push
adc
cmp
sub
(bad)
popf
sti
jg
adc
push
sbb
js
sbb
dec
xor
add
inc
aam
mov
jns
iret
and
xor
cld
xor
add
lea
mov
jmp
cs
jmp
cld
sub
pushf
sub
xchg
movs
cmc
and
int
push
dec
pavgw
xor
adc
xchg
jno
popa
ud1
jmp
popf
jnp
out
fwait
inc
(bad)
jmp
retf
dec
stos
mov
sbb
das
call
push
cmp
out
aad
lods
mov
dec
pop
nop
int3
and
xchg
stc
aam
sub
ins
je
mov
ds
out
mov
sbb
lods
sti
cmp
bound
add
xchg
jp
sub
jns
icebp
pop
cdq
call
clc
and
rcr
daa
pop
xor
xchg
add
(bad)
cmp
mov
cmp
lahf
xor
scas
mov
and
dec
mov
inc
test
loop
aas
adc
arpl
push
adc
jnp
xchg
xor
adc
(bad)
cmc
call
stos
cmc
fistp
cmp
mov
cwde
xchg
in
ins
jne
movs
adc
jne
mov
data16
mov
test
int3
out
dec
inc
cmp
mov
loopne
leave
xor
fnstsw
cmp
jb
mov
jbe
aad
rcl
mov
sbb
pop
pushf
mov
retf
sbb
mov
sub
sbb
enter
add
and
xor
(bad)
jp
push
imul
adc
mov
dec
inc
aad
jae
jae
repnz
in
aam
outs
mov
push
xor
xchg
sahf
rol
cld
mov
jge
shl
clc
sub
xor
ja
iret
cmp
pop
push
or
out
cmp
xchg
lods
(bad)
es
inc
ss
xchg
dec
xchg
jbe
xor
stc
out
dec
(bad)
fninit
cld
sub
add
ins
dec
pop
pop
mov
or
mov
outs
jae
add
mov
out
jp
mov
push
pushf
or
xor
(bad)
cmc
or
out
push
dec
xor
mov
xchg
push
pop
sbb
enter
jle
(bad)
push
cmps
pop
repz
movs
sbb
and
mov
pushf
cmp
js
jle
ret
and
mov
das
push
aad
lock
jge
cld
dec
fs
ins
xchg
fld
dec
in
push
xchg
dec
add
inc
popa
js
push
mov
push
rcr
(bad)
ror
inc
dec
adc
maskmovq
neg
ins
sbb
dec
(bad)
out
loop
in
xchg
sbb
fdiv
sub
pop
and
repz
in
add
xor
xor
and
xchg
mov
jne
sub
ss
sbb
(bad)
sbb
iret
sub
clc
adc
std
inc
jne
rol
jecxz
mov
sub
jp
add
xchg
sub
inc
jo
ret
mov
pusha
cmp
int
jbe
jl
jo
or
inc
imul
inc
mov
mov
jmp
int
ficom
adc
jp
aad
sar
inc
mov
in
mov
pop
fcomp
pop
sbb
les
loop
cwde
mov
push
sub
inc
xchg
and
mov
neg
mov
pop
fistp
mov
std
mov
push
jo
add
dec
cs
addr16
in
lods
inc
xchg
mov
jmp
sbb
pop
pop
xor
xchg
mov
sbb
sub
or
or
retf
(bad)
les
aad
dec
addr16
aaa
mov
jle
sub
jbe
sti
push
loope
add
mov
out
sub
out
push
push
sbb
ins
ja
aam
in
mov
xor
jnp
scas
adc
sbb
xchg
call
fadd
fwait
sub
fld
fwait
neg
loop
call
stos
int
js
int3
scas
pop
push
jge
pop
cdq
clc
pusha
push
xor
loope
dec
sbb
aaa
sub
je
sbb
sub
or
enter
push
xor
push
dec
aam
xchg
fisttp
out
push
ret
pop
inc
cmp
aaa
cmps
dec
push
mov
mov
movs
xchg
sbb
sbb
movs
cmp
push
cmp
mov
push
cdq
lahf
push
mov
add
out
test
mov
mov
adc
xchg
out
fmul
aad
cmp
inc
adc
adc
mov
aas
enter
dec
mov
je
sub
jmp
cld
sub
popf
repnz
jns
out
in
(bad)
push
or
add
pop
push
inc
dec
cmp
into
ror
repz
cs
mov
mov
or
inc
stos
mov
in
jecxz
cs
call
jg
cdq
les
sahf
mov
mov
cmc
cdq
call
fdiv
sub
stos
add
call
repnz
jae
jo
por
xchg
sahf
mov
pop
dec
mov
add
xchg
mov
lods
pop
pop
add
std
mov
push
jmp
leave
adc
sahf
push
les
loope
pop
ret
push
xor
neg
cmp
pop
jne
mov
scas
pop
stos
ss
shl
out
and
push
jge
mov
jnp
imul
xor
xor
push
add
jae
loope
test
(bad)
adc
out
mov
xchg
and
or
ds
mov
sbb
or
out
test
pop
jo
outs
push
sub
cmp
test
or
cmp
in
aad
adc
cli
mov
(bad)
or
inc
mov
(bad)
mov
(bad)
sar
ret
mov
sub
fist
inc
mov
jbe
inc
paddsb
cmp
push
xor
mov
or
loopne
(bad)
ds
lds
mov
mov
test
iret
jecxz
mov
mov
add
sbb
outs
call
mov
sub
lock
pushf
lds
pop
pop
rol
sti
cmp
adc
shl
(bad)
iret
loopne
loope
stos
lock
shl
das
idiv
aam
imul
call
jae
dec
imul
mov
add
test
das
jo
cli
and
mov
out
cmp
shl
test
sub
dec
cli
add
js
jmp
fist
xchg
aaa
jbe
mov
cmps
add
xchg
loop
into
push
scas
pop
add
aas
inc
pop
cmovae
call
push
aad
pop
leave
call
inc
enter
pusha
jecxz
iret
stos
sbb
int3
cmps
or
fisttp
out
gs
in
push
sub
rcl
cmp
cmc
cmp
inc
arpl
sbb
and
stos
das
mov
aad
adc
and
fistp
sbb
push
adc
sbb
sbb
dec
repz
add
mov
cmp
in
jb
dec
test
sbb
retf
movs
cmp
or
push
inc
sub
mov
gs
outs
push
test
push
xchg
test
imul
pushf
jno
pushf
out
dec
xchg
ds
and
jb
rol
xor
mov
js
retf
test
les
dec
aaa
adc
scas
sub
or
es
scas
ret
popf
and
lahf
loop
jl
test
sahf
xchg
jns
jmp
test
pop
popa
jo
(bad)
jmp
jns
sub
loop
cmp
fsubr
mov
jg
xchg
jae
cmc
and
loopne
jmp
or
pop
jo
dec
sub
jne
sub
pop
lock
xor
mov
jp
addr16
push
mov
(bad)
mov
ss
sub
adc
adc
call
in
dec
jecxz
pop
imul
imul
lahf
cli
pop
aam
out
pop
das
mov
fistp
je
mov
lahf
mov
sub
cmp
pop
sbb
cmp
es
jmp
mov
das
mov
jo
mov
mov
rcr
or
pop
out
mov
mov
cld
push
fdiv
je
cdq
movs
adc
rol
stos
pop
call
mov
cdq
sub
adc
jne
xchg
repnz
pop
(bad)
lahf
cmps
(bad)
pop
shr
jns
lds
enter
fxam
idiv
push
xchg
push
cmc
in
adc
outs
add
add
pop
mov
mov
stc
and
dec
dec
inc
lods
bound
jmp
mov
xchg
and
addr16
jmp
movs
add
lock
pop
pop
push
leave
jge
mov
sbb
xor
dec
mov
(bad)
fwait
ins
mov
sub
mov
push
dec
mov
or
imul
loope
test
ja
(bad)
out
mov
pusha
xchg
push
pop
cmp
fsub
nop
or
(bad)
push
mov
xchg
cli
mov
push
push
add
mov
dec
mov
xchg
dec
addr16
call
js
ins
dec
sar
sub
or
xor
or
xor
pop
mov
ds
loop
shr
and
repnz
xor
add
es
xor
jo
jg
(bad)
xchg
pusha
ds
sub
sub
sub
repz
cmp
mov
mov
cld
mov
(bad)
dec
push
js
or
push
das
lock
shl
and
xor
pop
sbb
lds
ins
cmp
add
add
outs
arpl
jne
sahf
push
xchg
lock
mov
sar
inc
out
adc
xchg
xlat
and
stos
dec
or
xor
stc
scas
and
mov
daa
pop
gs
stos
sub
and
shl
sub
or
adc
add
cmps
out
push
sbb
jecxz
mov
add
dec
les
pop
out
jnp
xor
inc
xor
in
or
inc
cmp
lea
imul
mov
lahf
xor
int3
xchg
mov
add
aaa
jmp
or
mov
lods
(bad)
rcl
test
sbb
in
pand
push
addr16
stos
inc
mov
mov
dec
les
das
and
xchg
mov
pop
fs
adc
jb
add
addr16
out
push
shl
adc
inc
fisttp
mov
daa
sti
les
or
xchg
mov
test
xchg
loope
(bad)
pusha
int3
sbb
js
ss
retf
jb
mov
scas
out
lods
inc
add
xchg
jmp
sub
rol
rcr
xor
push
sub
hlt
or
sti
ss
pushf
aad
mov
inc
add
icebp
or
mov
add
cmps
add
push
dec
in
xor
jmp
retf
gs
mov
iret
cmp
dec
and
test
pop
mov
jo
mov
adc
mov
jnp
mov
mov
push
lea
out
scas
leave
pop
in
cmp
and
jg
adc
retf
xchg
popf
xchg
scas
jle
jmp
(bad)
outs
neg
rol
loop
popa
push
shr
dec
pop
inc
loopne
retf
dec
sub
shl
push
mov
dec
scas
retf
outs
cmc
push
mov
add
arpl
icebp
(bad)
jle
mov
cmps
pop
jns
mov
test
xor
push
jmp
ret
dec
lods
pusha
sub
add
test
cmp
adc
jbe
ins
add
mov
push
sbb
cs
push
pop
inc
cmp
call
sbb
xlat
or
xchg
dec
test
lock
pop
clc
xchg
sbb
cmp
and
pop
cmp
mov
loop
pusha
cmp
test
clc
or
and
mov
adc
in
inc
je
scas
mov
repz
pushf
bound
cmps
mov
mov
pusha
lahf
ja
sbb
push
mov
pop
dec
xor
mov
push
cmp
dec
out
and
xchg
sub
xchg
jmp
push
rcr
or
xchg
cmc
bound
inc
inc
test
(bad)
sti
xchg
inc
leave
mov
lahf
sub
ficomp
xor
dec
sti
pop
jb
out
loopne
sub
lock
jle
and
retf
mov
mov
(bad)
in
test
xchg
outs
mov
js
sub
push
and
jmp
neg
jnp
nop
cmp
dec
pop
lahf
adc
pop
jge
jmp
scas
xor
jnp
mov
inc
lds
sbb
xlat
add
push
cmp
or
mov
fistp
test
mov
popa
ja
jno
out
inc
xchg
push
cmp
add
loop
mov
iret
imul
in
call
sar
(bad)
sbb
xor
mov
lods
or
adc
xchg
mov
and
jne
call
or
pop
icebp
lock
imul
cld
stc
jg
fistp
jb
out
imul
ss
mov
jae
cwde
sub
cmp
mov
call
xchg
or
jns
daa
or
jbe
pop
mov
pop
ins
loope
sub
rcr
popa
xor
ja
(bad)
fistp
push
add
scas
push
fcomi
mov
push
aas
mov
lahf
inc
pusha
inc
jecxz
rcr
pushf
ins
push
sub
nop
les
jbe
mov
or
je
xchg
idiv
ds
in
mov
ret
jmp
jecxz
fcmovb
sahf
nop
jmp
shl
popf
push
xchg
or
mov
loope
stos
fisubr
repz
jne
adc
out
pusha
or
xchg
mov
shr
int
add
in
addr16
dec
pushf
ret
into
push
dec
scas
sub
cmc
ds
xor
inc
leave
ret
cmps
fisubr
ret
addr16
shl
arpl
mov
mov
fisttp
popa
or
gs
test
adc
mov
out
outs
shr
adc
jp
clc
out
adc
mov
add
push
adc
stos
enter
test
sbb
rcr
inc
outs
nop
ror
pushf
or
inc
imul
repnz
aas
aas
ins
outs
or
adc
dec
add
jne
jg
fsqrt
adc
or
movs
jg
mov
repz
out
das
push
xchg
bound
sbb
cmps
cmp
pop
pop
mov
out
ja
push
xchg
ss
ficomp
sub
adc
aam
(bad)
nop
pcmpeqb
dec
stc
aaa
into
in
dec
arpl
popa
lea
enter
(bad)
fs
enter
call
jbe
jmp
arpl
fisubr
aas
gs
jns
icebp
dec
xchg
stos
pop
mov
test
jecxz
xor
sub
xchg
xor
gs
outs
mov
fstp
jl
xchg
pop
jg
into
imul
xchg
pop
xor
jg
sbb
shr
pushf
mov
cmps
pusha
push
cmp
icebp
xor
inc
rcr
inc
adc
rol
sub
rol
ror
bound
in
jae
and
adc
push
fstp
ret
pop
push
(bad)
cwde
inc
sub
js
ins
jae
xchg
in
(bad)
push
fsubrp
cmps
add
sub
clc
rcr
add
(bad)
pop
mov
aas
cmps
(bad)
jne
loopne
(bad)
loopne
sbb
ds
push
sbb
cmps
or
test
(bad)
push
icebp
xor
dec
sbb
cwde
add
popa
mov
sub
jmp
sbb
clc
xchg
xchg
daa
sbb
mov
loopne
xchg
test
out
push
ds
lods
sub
inc
inc
lods
mov
shr
dec
or
mov
pop
jae
fcomp
hlt
mov
sti
clc
pop
das
aaa
and
mov
xchg
mov
and
sbb
xchg
call
add
int3
mov
in
fstp
fs
or
mov
xchg
call
mov
pop
movs
mov
mov
pop
mov
inc
adc
loopne
jmp
dec
mov
js
xlat
sbb
inc
ins
push
inc
jl
icebp
retf
test
into
adc
lods
sahf
cmp
aam
scas
cwde
(bad)
repnz
jae
out
icebp
xor
xchg
cdq
mov
adc
rcl
pop
mov
ret
lods
xor
loopne
pop
cmps
jmp
fwait
lods
dec
inc
push
jp
in
jl
ja
xchg
mov
mov
cli
aam
loop
xor
es
aaa
repnz
jo
retf
jg
sbb
cmps
sub
shl
das
sub
ss
outs
mov
sub
movs
cmps
cld
ja
mov
and
nop
inc
or
das
fsin
cs
mov
in
cmp
sbb
or
mov
cwde
cmc
inc
ss
rsm
stos
or
fdivr
inc
imul
out
add
or
mov
call
jmp
in
jmp
pushf
cwde
mov
leave
dec
cmps
or
rcl
out
sub
mov
jb
sti
les
jne
retf
add
imul
jne
mov
push
(bad)
retf
scas
dec
inc
xor
cli
scas
shl
inc
jns
mov
dec
xchg
jns
ret
jno
mov
nop
push
daa
scas
(bad)
cli
and
mov
fcom
inc
push
cld
shl
sahf
sar
xor
jb
jb
mov
in
(bad)
mov
in
icebp
pop
int3
arpl
sub
or
sub
push
loopne
xor
sbb
(bad)
mov
aam
aaa
cmps
icebp
xchg
mov
stos
xchg
lods
pop
mov
idiv
je
in
add
push
dec
jg
or
(bad)
push
pop
ja
je
out
pop
dec
xor
mov
push
iret
push
pushf
imul
adc
xchg
lock
lds
xchg
lock
fsubrp
sbb
dec
dec
xchg
xor
fist
mov
das
fcomp
in
sbb
add
cmp
mov
sar
stos
adc
jb
mov
and
sub
mov
xchg
aas
data16
mov
lds
inc
dec
sbb
sar
fucomip
es
xlat
imul
ret
jnp
xchg
xor
icebp
jp
dec
mov
xchg
add
(bad)
in
push
les
ds
out
ins
pop
inc
adc
mov
sbb
or
inc
add
lds
and
dec
(bad)
cdq
scas
or
mov
outs
jns
dec
repz
and
lods
test
add
mov
jns
fucomi
loope
xchg
ficomp
pop
retf
xchg
fs
mov
loopne
daa
ins
(bad)
popf
add
pop
jg
add
cmc
push
fsubr
out
pop
jle
xchg
add
add
in
jnp
lea
jl
pushf
jl
jg
test
shr
popa
paddsb
push
(bad)
xor
xchg
cmp
out
and
fdivr
movs
sti
gs
dec
inc
sub
mov
loopne
xchg
xchg
les
xor
daa
cmp
and
or
sti
stc
stos
aam
and
int3
cmp
inc
cmc
jne
fwait
fs
ss
aam
ss
xchg
mov
mov
add
mov
sbb
mov
mov
enter
scas
aaa
add
sbb
mov
pusha
mov
jae
or
inc
cmps
mov
xchg
jbe
outs
xor
fcmovbe
imul
outs
cmp
lea
leave
xor
hlt
(bad)
sub
in
jbe
aad
(bad)
cmp
jg
outs
loopne
shr
inc
hlt
sbb
cld
ins
icebp
es
jae
jl
scas
jle
test
add
rcl
and
hlt
cmp
test
ins
pop
stos
or
pop
xor
cmp
pop
push
repnz
std
xor
inc
mov
dec
test
sbb
jp
push
jb
pop
daa
rcl
outs
dec
loop
or
cwde
retf
inc
fwait
jnp
push
add
int3
jno
movs
cmp
dec
mov
jl
test
adc
scas
cmps
mov
pop
inc
cmp
data16
retf
jge
bound
add
push
vmovntps
add
pop
iret
jae
cld
(bad)
mov
sub
mov
outs
pop
aad
or
stc
pop
std
stos
rcr
inc
jmp
and
clc
iret
mov
or
fbld
inc
sub
mov
into
(bad)
call
dec
sub
ins
adc
cmp
inc
add
xor
clc
cmp
mov
loopne
cdq
data16
jae
jae
sub
aas
sub
outs
inc
pop
dec
into
in
jge
jg
mov
std
mov
jno
add
sub
mov
(bad)
scas
call
jp
dec
add
pop
xchg
call
mov
jbe
stos
push
(bad)
and
das
enter
mov
sub
nop
cmp
jecxz
mov
ja
(bad)
sbb
push
sbb
das
or
xchg
cwde
push
pusha
xor
xlat
(bad)
lods
mov
push
and
shl
cmp
aas
adc
xchg
scas
inc
add
mov
call
ins
lods
mov
pop
sar
sbb
ret
or
ins
cmc
jne
sahf
jp
jle
icebp
add
mov
dec
dec
inc
inc
dec
cmp
cmp
xor
lock
scas
mov
ins
or
fwait
xor
or
xlat
dec
out
shl
and
xchg
adc
xchg
dec
xchg
stos
iret
jno
outs
push
and
add
sahf
imul
jmp
add
xchg
adc
test
sti
mov
(bad)
jno
lea
fidiv
inc
cmp
dec
push
cmp
cli
push
loopne
dec
psubb
(bad)
push
gs
enter
lahf
jno
mov
xor
loopne
mov
push
pop
add
pushf
mov
mov
cvtdq2ps
mov
sahf
push
loopne
clc
movs
lods
ja
test
sti
scas
das
or
nop
test
mov
rcr
dec
nop
push
cmps
es
pop
arpl
popa
cmp
es
push
dec
in
pop
push
inc
dec
imul
xchg
cli
lahf
jmp
mov
sub
push
pop
add
mov
mov
mov
bound
xchg
scas
cmp
mov
or
xor
retf
loop
mov
bound
jmp
pop
add
sub
push
out
test
push
std
fs
sub
idiv
jo
loop
rep
xor
imul
into
and
dec
(bad)
int3
mov
outs
add
jne
fisubr
leave
or
jl
xchg
rcl
mov
rcr
adc
(bad)
daa
aaa
mov
sbb
hlt
in
fcmove
jl
sti
stos
call
ds
in
push
mov
mov
adc
inc
add
out
stc
jnp
dec
mov
xchg
lea
ror
sbb
pop
je
imul
xchg
cmp
imul
fst
xor
lods
push
mov
or
movs
arpl
daa
xor
leave
pushf
mov
nop
lods
push
mov
jmp
sbb
mov
not
adc
push
mov
jecxz
inc
or
dec
mov
mov
das
in
cmp
mov
out
adc
leave
push
or
out
or
rcr
scas
out
cmc
cmp
xor
rol
inc
sahf
movs
xor
xor
inc
imul
mov
mov
test
mov
dec
inc
int
push
shr
sbb
sbb
dec
dec
test
arpl
ss
push
mov
mov
pop
movs
int
dec
inc
jo
mov
xchg
sub
lds
jmp
adc
lahf
shl
(bad)
push
std
sbb
les
push
cwde
int3
mov
sbb
mov
jnp
sub
popa
mov
inc
in
in
js
test
xchg
jp
cmp
jb
lea
jbe
jle
cli
(bad)
xchg
dec
cs
arpl
push
pop
test
out
mov
popa
xor
sub
(bad)
leave
mov
outs
sub
jne
cmp
(bad)
xlat
xchg
fwait
icebp
les
and
jmp
push
mov
push
lea
adc
jo
adc
pop
dec
cmps
iret
shl
fidivr
popf
scas
pop
fcom
push
out
push
shl
retf
loopne
sub
mov
mov
jo
xor
sub
inc
mov
rcr
(bad)
cmps
and
jl
and
int
shr
dec
mov
das
lock
mov
ja
ret
mov
call
xchg
ret
(bad)
cmc
addr16
jp
or
adc
pop
jp
ss
jmp
pop
mov
test
js
sti
stos
adc
clc
loopne
fdivr
add
es
pusha
mov
pop
into
inc
adc
imul
jmp
retf
dec
imul
cs
jmp
stc
fild
mov
in
arpl
mov
aad
cli
pop
lds
xor
mov
inc
out
push
and
push
popf
jle
mov
inc
popf
cmp
jmp
pop
data16
and
mov
and
xor
add
mov
add
ficomp
xor
xor
ror
pop
pshufw
sub
add
or
movs
cmp
fiadd
push
fstp
inc
in
push
cmp
nop
cmp
scas
push
hlt
mov
fisttp
fdivp
pop
imul
xchg
rcr
outs
dec
xchg
add
push
mov
jnp
loop
sar
or
xchg
imul
fdivr
hlt
fidiv
adc
inc
mov
js
inc
arpl
pusha
inc
(bad)
adc
pop
add
cmps
dec
jb
push
push
ja
neg
cmp
xchg
adc
mov
jno
(bad)
(bad)
aaa
(bad)
and
fs
mov
popa
loope
adc
push
add
in
call
(bad)
jae
sbb
stc
and
mov
js
jae
mov
lea
scas
dec
cwde
mov
push
cmp
push
xor
(bad)
fcomp
sub
and
call
mov
cmp
adc
mov
pop
and
inc
fmul
das
outs
(bad)
or
mov
je
sbb
xor
imul
out
mov
pop
add
adc
bnd
mov
mov
ror
or
icebp
sahf
add
test
adc
ja
gs
sbb
cmp
dec
adc
cmp
cli
shl
sub
jp
mov
inc
adc
in
xor
xor
aam
ds
sar
fdivr
inc
call
xchg
mov
scas
lock
out
outs
aaa
ins
mov
xor
ins
enter
inc
xor
mov
loopne
pop
dec
mov
mov
adc
addr16
jecxz
add
mov
and
int3
push
and
add
cwde
xchg
pushf
mov
(bad)
fisttp
in
inc
fisub
out
mov
push
fnstsw
push
pop
and
out
(bad)
or
push
pop
iret
mov
scas
aad
inc
and
or
(bad)
xchg
mov
fidivr
jge
lods
mov
mov
(bad)
jge
sub
test
ins
xchg
push
je
push
inc
push
inc
pop
sub
out
add
scas
daa
enter
sbb
dec
pop
or
sbb
jmp
mov
and
nop
jns
mov
leave
adc
aaa
std
hlt
mov
pushf
bound
aaa
pop
(bad)
rol
cmp
jle
xor
das
arpl
out
icebp
test
dec
jg
xor
dec
lock
and
ds
jne
fwait
jbe
dec
push
or
jmp
fisub
ins
inc
jae
cmps
adc
cmps
fimul
fdivr
loop
jle
cld
push
leave
jecxz
je
cmp
shl
jns
push
loopne
loopne
loope
enter
(bad)
daa
or
ss
or
push
sub
out
call
add
dec
sbb
jo
jo
out
jnp
std
enter
sbb
movs
mov
movs
es
ss
dec
cs
aas
or
push
mov
dec
ror
cmps
idiv
pop
out
and
stos
(bad)
(bad)
jnp
mov
jne
pop
ret
xor
outs
and
fcompp
shl
push
pop
pop
pop
pop
(bad)
push
in
loop
fcomp
jg
jnp
(bad)
mul
int3
add
pop
rcr
adc
mov
inc
bound
xchg
enter
movs
inc
adc
outs
scas
sti
push
movs
jmp
fwait
jecxz
jns
sbb
(bad)
nop
jnp
cld
retf
jnp
add
lock
lock
inc
pop
xor
xor
outs
pop
ret
shr
out
push
or
jmp
pop
(bad)
jl
adc
(bad)
add
sub
shl
push
mov
ins
pop
inc
ret
cwde
adc
loope
sbb
leave
dec
sbb
xchg
int
xchg
jmp
ror
push
push
sahf
inc
mov
sub
cmps
jmp
jnp
cmp
lahf
jbe
pop
jl
dec
adc
(bad)
mov
popf
push
mov
rol
mov
fiadd
adc
adc
lahf
xor
add
gs
(bad)
or
jmp
ja
and
jmp
ds
xor
jne
mov
cmp
fmul
fistp
jbe
rcr
aaa
inc
adc
cmps
inc
out
push
push
jo
mov
ss
mov
ficom
push
retf
mov
rol
pop
iret
es
stos
and
leave
clc
xchg
sbb
xchg
call
push
fdiv
sar
push
xor
add
retf
jl
cmp
jl
inc
(bad)
ficom
cmp
out
imul
or
and
xchg
dec
jmp
inc
jecxz
mov
pop
cld
cmp
adc
xor
ds
std
movlhps
aam
cmp
int3
mov
cmp
mov
cwde
clc
adc
xchg
push
fist
ds
inc
xor
xchg
movs
mov
bnd
sahf
icebp
outs
jo
mov
or
repnz
and
or
dec
sub
mov
inc
aaa
mov
ret
scas
pop
push
int
jl
lods
adc
sbb
adc
xchg
lods
push
imul
call
stos
push
dec
scas
inc
mov
fisub
movs
repz
test
mov
adc
mov
(bad)
jb
retf
push
inc
and
jge
retf
leave
es
cmp
cmp
in
repnz
mov
cmp
push
ret
adc
fs
and
ja
ins
aad
mov
dec
jmp
xor
jb
sub
scas
daa
or
xor
es
dec
add
shl
pop
loop
stos
out
loopne
pop
je
jg
push
into
icebp
jge
mov
push
loopne
dec
int3
cmp
bound
add
jmp
test
push
stos
adc
mov
loope
xchg
jg
popa
sahf
int3
mov
(bad)
pop
push
out
rol
enter
icebp
pusha
int3
mov
leave
push
dec
hlt
and
jns
adc
div
leave
jl
cmp
mov
mov
enter
pop
jl
mov
adc
pusha
sbb
or
and
aam
scas
jno
shr
out
xchg
and
push
mov
stc
data16
sbb
push
movs
jo
dec
ror
movs
lods
addr16
aad
mov
inc
dec
test
ja
lahf
dec
mov
jb
out
into
mov
pop
mov
test
jbe
mov
xchg
ficomp
and
retw
(bad)
mov
call
sub
pop
push
sub
loop
jno
call
call
sub
stc
xchg
push
xchg
push
rol
in
mov
sub
xchg
(bad)
repnz
ret
ficomp
inc
fs
stos
repnz
push
and
scas
ins
in
mov
pusha
frstor
fdivr
out
inc
(bad)
push
pop
jp
jg
scas
mov
sbb
test
mov
or
scas
enter
stos
jmp
add
push
inc
cmp
popa
cld
push
dec
add
js
cdq
mov
sub
xchg
das
pop
xor
(bad)
fidiv
out
pop
add
pop
mov
mov
and
or
jnp
mov
int3
sbb
push
xor
cli
int
fisubr
push
cmp
xchg
repz
dec
pcmpgtd
push
inc
cli
sahf
xchg
(bad)
bound
jg
jo
mov
in
js
mov
mov
daa
jmp
das
sub
retf
pushf
jb
mov
jns
outs
jle
push
cmc
icebp
pop
fistp
push
hlt
cmps
dec
ds
mov
xor
dec
jle
dec
mov
push
call
and
cwde
mov
scas
aam
mov
sub
cmc
pop
fwait
loope
lods
jnp
dec
imul
scas
(bad)
or
and
jl
loope
nop
xlat
sahf
and
pushf
es
popa
popf
(bad)
and
xor
adc
(bad)
jnp
mov
cdq
push
(bad)
fwait
mov
loop
add
mov
xlat
or
ja
ror
adc
(bad)
retf
jmp
sti
into
outs
sub
repnz
pop
(bad)
pushf
jo
sub
xor
adc
movs
cld
add
stc
mov
and
dec
sysexit
jmp
xchg
push
(bad)
dec
cdq
aaa
sbb
scas
rcr
xchg
push
xchg
xchg
pop
repnz
and
outs
cmp
add
ds
jo
jle
push
mov
cwde
sub
(bad)
(bad)
leave
add
in
repz
push
cdq
push
mov
bound
ss
(bad)
pop
jmp
fbstp
fwait
pop
sub
das
inc
jle
test
stc
aad
dec
or
add
cdq
pop
cdq
sub
out
ins
rol
jns
mov
sbb
cmp
not
jmp
sub
mov
cmps
enter
mov
cld
shl
mov
adc
and
jne
shl
ins
cdq
mov
addr16
or
add
jnp
not
or
ret
ins
shl
aaa
ja
popa
jge
nop
jp
ficomp
xchg
rcr
pushf
sub
jo
loop
cmp
out
ficomp
push
dec
xor
fmul
jns
hlt
jbe
jno
je
shl
sahf
fstp
movs
pop
and
neg
test
out
in
mov
ror
mov
lea
out
sbb
mov
mov
das
in
or
jmp
out
sbb
inc
or
es
ins
bound
test
in
adc
add
pop
mov
jno
iret
pop
sahf
dec
out
call
xor
mov
es
cmp
xchg
sbb
ret
gs
push
in
lahf
enter
inc
clc
push
retf
pop
and
inc
cmp
retf
jecxz
fsubp
xchg
call
mov
sub
enter
mov
arpl
out
test
sub
xor
imul
call
or
aas
xor
cmp
mov
mov
stos
fsubr
movs
or
out
or
in
ror
xor
mov
rol
push
mov
je
sub
pop
sbb
in
push
adc
mov
pop
inc
or
imul
aas
rol
sub
pushf
add
cmp
mov
mov
icebp
mov
push
push
outs
pop
(bad)
push
inc
inc
fdiv
cdq
fwait
mov
add
movs
mov
mov
call
mov
and
xor
aam
xor
sub
and
repz
xor
dec
cmp
in
lahf
sar
stos
jp
mov
mov
test
pop
inc
pop
mov
jmp
scas
ds
fstp
jb
mov
mov
dec
adc
and
aaa
in
aas
(bad)
outs
les
outs
fmul
test
int3
outs
(bad)
test
and
jno
inc
cs
cmps
aaa
and
in
cs
xor
sbb
cmp
xchg
dec
jp
xchg
add
pop
jae
pusha
gs
pushf
inc
mov
cmp
sbb
leave
movs
fisttp
test
(bad)
push
ds
sub
mov
pop
and
add
in
mov
cmps
mov
icebp
sub
add
cmc
jmp
les
addr16
pop
sbb
ds
scas
repz
cmp
daa
jmp
jne
fs
aad
out
sbb
cmp
pop
pop
popa
or
fucomp
mov
in
mov
inc
ficomp
jno
cmp
pop
sti
mov
dec
ror
sahf
sbb
cld
shl
mov
push
retf
and
loopne
inc
fiadd
cmp
iret
mov
add
std
jbe
loope
mov
repz
cmps
pop
popf
inc
jge
gs
cwde
call
inc
inc
sti
push
or
or
sbb
dec
test
(bad)
out
fistp
mov
sbb
mov
scas
(bad)
stc
adc
shr
sahf
outs
jbe
js
div
jl
dec
out
mov
or
or
mov
or
mov
stc
int
stos
mov
retf
adc
jno
push
loop
iret
xor
push
in
out
xor
or
int
stc
loope
lahf
pop
mov
add
dec
scas
loopne
mov
add
mov
int
push
sbb
in
ja
outs
mov
pop
std
xchg
push
adc
ja
or
cmps
jp
into
add
mov
jno
or
dec
mov
out
mov
retf
or
push
retf
js
ret
and
xchg
pop
lds
dec
mov
pusha
inc
scas
movs
xchg
pop
jmp
pusha
fild
nop
mov
ret
adc
mov
in
(bad)
jle
stos
adc
jbe
xlat
movs
jbe
jnp
cmp
imul
cdq
jl
scas
adc
stc
int3
in
dec
pop
jbe
xchg
fbld
mov
shl
(bad)
mov
push
mov
inc
jg
inc
loopne
sub
or
shl
stos
sbb
shr
lea
int3
xchg
inc
mov
outs
sbb
sbb
lock
jmp
and
scas
inc
mov
add
push
jp
xor
pop
rcr
push
push
mov
adc
or
cdq
mov
push
mov
add
pop
add
mov
jae
ror
cmp
adc
cmp
fsubr
int
retf
lods
nop
cmp
out
ins
ror
jns
sub
clc
pop
sbb
mov
or
push
jge
cmp
pop
push
push
cld
stos
lock
cmp
stos
add
jae
and
jo
mov
fldenv
gs
push
dec
outs
es
int3
arpl
mov
nop
jmp
cld
jne
xor
scas
inc
shl
pushf
add
jp
ins
pop
(bad)
jmp
ja
add
inc
adc
out
shr
and
sbb
inc
ins
fld
inc
fsub
inc
gs
add
les
add
push
shl
loope
clc
imul
hlt
xchg
scas
je
movs
xchg
lahf
push
lods
adc
clc
inc
wbinvd
and
pop
mov
sub
inc
cli
and
psubb
mov
fnsave
push
xor
dec
sbb
out
sub
daa
and
jb
push
add
or
pop
cmc
mov
call
mov
(bad)
sbb
cli
mov
and
dec
aad
mov
es
div
xchg
add
ret
inc
mov
pop
rcl
dec
push
adc
sti
mov
ret
movs
sbb
add
dec
test
repnz
fsub
mov
jmp
mov
loope
mov
sub
daa
pop
xor
pop
adc
sub
fld
div
sub
xor
lock
rcl
jl
mov
ror
mov
cli
and
cs
aam
daa
mov
jae
xchg
mov
pop
out
call
aaa
ins
inc
fcmovbe
xchg
test
mov
in
sahf
mov
xchg
push
mov
fs
outs
dec
test
in
cmp
repz
movs
jmp
scas
lock
dec
aas
(bad)
fld
call
mov
jp
std
lds
add
and
ds
cmp
mov
bound
imul
add
push
inc
xor
in
sub
pop
lods
repnz
mov
dec
fistp
(bad)
and
mov
adc
and
(bad)
xlat
(bad)
or
jb
push
dec
and
push
sub
int3
xor
and
(bad)
fsubr
xchg
scas
push
push
mov
push
loopne
mov
sub
iret
jne
add
dec
popf
scas
pop
pop
dec
fwait
mov
mov
push
push
loop
push
sbb
sahf
adc
(bad)
push
or
aaa
cmc
pop
movs
push
and
imul
mov
mov
and
xor
cmp
jmp
movs
scas
fcom
add
sub
test
fldcw
shl
in
shr
mov
adc
clc
xchg
pop
inc
add
gs
cmp
xchg
pop
mov
jno
and
or
cmps
les
mov
dec
xor
xor
cwde
xchg
jl
or
lahf
iret
xor
retf
dec
in
mov
and
fbld
push
cdq
pop
in
lea
cmp
imul
sub
or
cmps
enter
mov
cmp
aad
xor
test
cli
movs
repz
out
mov
sar
add
gs
xor
mov
das
jnp
push
ficom
push
mov
lods
xchg
(bad)
cli
fbld
mov
(bad)
push
(bad)
div
fstp
sahf
add
mov
js
jbe
mov
in
mov
push
(bad)
adc
add
mov
and
sub
pop
sbb
mov
pop
push
pop
cmp
lahf
movs
lds
and
adc
inc
stc
clc
push
add
loope
cld
cmps
outs
into
xor
mov
pop
loope
lahf
fmul
jb
and
sbb
mov
mov
ret
push
(bad)
fld
fs
mov
(bad)
(bad)
std
cmp
cmp
jns
jns
sbb
push
xchg
xor
adc
lahf
ss
xor
loope
fldenv
mov
xchg
mov
cmp
ja
dec
push
mov
pusha
xchg
xlat
cmc
jo
int
shl
cs
ins
cs
mov
shl
add
das
push
sti
cli
push
mov
lea
fmul
mov
pop
fdivr
daa
sar
mov
dec
mov
mov
ret
dec
jle
int
push
aad
loopne
les
xchg
in
mov
mov
cmps
or
jno
(bad)
loopne
gs
xor
adc
dec
int3
rol
jg
jnp
lock
int
mov
std
fnsave
out
jge
inc
push
push
xor
inc
inc
retf
dec
movs
ja
add
shl
in
cwde
mov
ja
xor
sub
inc
aaa
lods
and
rcr
xchg
push
mov
jl
pop
mov
addr16
scas
push
out
test
fcmovne
push
lods
stc
add
inc
ins
xchg
pop
fnstenv
and
jae
mov
out
icebp
mov
jo
scas
jle
int
mov
addr16
xchg
es
in
push
mov
(bad)
xchg
(bad)
mov
sbb
dec
jge
mov
jge
dec
xor
test
xchg
inc
or
iret
cmp
xchg
aas
add
push
test
in
dec
and
cmps
(bad)
mov
xor
push
xor
xchg
fsubrp
(bad)
ins
nop
jnp
dec
mov
sbb
inc
push
or
dec
loopne
rcl
xor
cmp
push
rcl
call
cmc
jnp
js
repnz
jo
fidiv
push
imul
xor
out
xchg
or
cmp
jo
sti
loop
rcl
push
rol
sets
inc
sub
pop
push
and
int3
cli
jmp
cld
and
out
(bad)
arpl
cmp
mov
mov
mov
hlt
jecxz
imul
and
cdq
sub
inc
in
dec
sti
jl
sub
out
icebp
mulps
sahf
ror
mov
push
fisttp
fistp
test
dec
xor
ds
jecxz
nop
ja
sub
jb
add
test
pop
adc
pop
retf
inc
push
pusha
fstp
mov
jle
xchg
mov
pop
dec
jmp
xchg
and
data16
mov
or
dec
xbegin
(bad)
jecxz
imul
inc
push
(bad)
repz
mov
cmp
fstp
(bad)
mov
xchg
xor
(bad)
xchg
(bad)
sbb
lods
sbb
pop
sbb
test
mov
push
loope
and
data16
xor
div
js
data16
or
mov
push
mov
ss
push
mov
mov
adc
or
dec
popa
or
rcl
or
xchg
jnp
mov
mov
hlt
push
hlt
push
arpl
xor
cmp
mov
or
pop
cmp
int3
xor
cmps
in
(bad)
hlt
sbb
dec
adc
xchg
(bad)
hlt
inc
pushf
push
sub
test
pop
test
bound
int3
pop
pop
mov
push
and
xchg
jecxz
fst
in
inc
and
stc
shl
popf
data16
lods
imul
aas
mov
inc
xlat
mov
idiv
and
xchg
ror
mov
(bad)
(bad)
pop
ret
das
mov
push
mov
test
jne
xchg
xchg
ret
aad
scas
xchg
fistp
in
aas
in
pop
mov
xchg
cmp
enter
int
imul
jecxz
xchg
ss
lahf
jno
aam
mov
mov
dec
imul
sar
stos
int
mov
ins
fidivr
adc
dec
mov
xchg
das
adc
mov
add
sbb
jge
cwde
sldt
addr16
test
in
rcr
mov
cs
aas
inc
jp
mov
fisubr
jbe
mov
mov
xor
repz
ds
out
jmp
test
in
xor
push
les
adc
inc
sbb
movs
push
sahf
mov
outs
inc
jnp
cmp
and
push
mov
arpl
pushf
mul
into
mov
(bad)
adc
inc
xchg
cmp
repnz
inc
(bad)
xchg
pop
test
mov
aad
sbb
mov
ins
push
retf
push
retf
dec
enter
dec
mov
mov
aaa
std
cmp
lahf
call
xlat
inc
jp
cld
aas
sub
adc
add
or
adc
nop
push
mov
adc
fnstsw
aam
cmp
push
loop
clc
cmps
xchg
cmc
mov
imul
mov
retf
add
mov
mov
push
or
mov
aaa
outs
pop
punpckhwd
inc
iret
xchg
repnz
jmp
cwde
int
(bad)
sub
sar
jmp
sbb
imul
add
vpcmpeqd
int
imul
jmp
sbb
inc
dec
arpl
dec
imul
sbb
or
call
add
aad
jbe
fs
jno
retf
and
or
sub
sub
ins
xor
xchg
sahf
test
out
sub
jnp
xor
lea
pop
cmp
dec
pop
jecxz
fdiv
popf
dec
imul
retf
icebp
outs
repz
cli
xlat
push
stos
sbb
loop
inc
and
cld
adc
add
fcom
dec
cld
fild
jmp
call
push
dec
push
mov
mov
and
stos
mov
(bad)
aas
mov
sbb
mov
dec
outs
test
dec
xchg
and
push
sub
mov
jno
pop
push
mov
mov
cmp
jmp
push
popf
and
dec
inc
repz
jo
adc
mov
mov
inc
js
loop
sbb
lea
mov
inc
stos
push
mov
addr16
push
ret
out
pop
or
dec
int
jmp
out
retf
sbb
rcr
add
push
jmp
pop
retf
dec
xchg
jmp
fdiv
popf
jl
push
lods
jmp
mov
push
mov
jbe
ret
ins
lock
lock
push
xchg
sub
mov
adc
dec
inc
movs
int
inc
sahf
es
dec
cmp
mov
cmp
daa
mov
push
pop
mov
jns
fdiv
popa
mov
push
xor
es
sub
jge
mul
add
xchg
jns
(bad)
mov
mov
(bad)
ins
adc
outs
push
lods
movs
sub
xor
jp
sub
(bad)
addr16
rcl
aad
push
es
cmp
sbb
stos
adc
into
adc
jge
cli
imul
adc
bound
movs
push
aad
and
retf
pop
xchg
mov
and
push
push
cmp
jmp
cmp
scas
test
fmul
push
jecxz
cmp
imul
xor
jae
nop
iret
adc
or
dec
out
lds
pop
pushf
das
mov
std
mov
in
fcmovne
shl
cmp
or
jecxz
movs
call
pop
test
js
inc
jo
cmp
mov
hlt
jb
mov
std
out
or
pop
xchg
add
retf
dec
cmp
sbb
xor
cdq
mov
xor
bound
stos
add
das
fld
jnp
xchg
xor
(bad)
fild
mov
cmps
lahf
ja
ret
mov
inc
push
ret
lea
pop
cmps
mov
mov
clc
fadd
stc
sub
adc
imul
xchg
jecxz
rcl
inc
mov
movs
or
sar
fadd
cmp
mov
jnp
xor
and
xor
jb
test
mov
call
push
loope
xor
or
mov
imul
ror
xor
cmp
mov
cmp
cmps
hlt
inc
div
pop
dec
retfw
mov
das
jp
mov
out
data16
pop
adc
(bad)
push
retf
adc
sti
enter
sub
sbb
or
mov
scas
add
stc
fst
nop
dec
pop
inc
sbb
add
mov
rcl
dec
movs
ins
(bad)
xchg
out
in
aad
xchg
push
fs
(bad)
sbb
stos
in
cdq
push
dec
nop
fucomi
clc
or
jp
das
fld
bswap
pop
xchg
jo
or
outs
mov
and
xchg
fmul
rcr
lds
mul
xor
cmps
js
nop
jl
ret
cmp
xchg
push
cmps
xor
aas
cmp
daa
mov
int3
sub
add
sub
mov
mov
sbb
mov
popf
bound
mov
mov
pop
and
(bad)
es
scas
ds
xchg
test
dec
jecxz
inc
sub
dec
cmc
sbb
jne
mov
xchg
retf
in
ja
es
clc
pushf
addr16
mov
(bad)
jo
or
push
jp
(bad)
aaa
add
dec
in
dec
pop
adc
and
cli
jmp
cld
in
imul
xchg
movzx
pop
loopne
repnz
iret
std
out
mov
xor
mov
lds
pop
sub
jno
and
lods
mov
sub
sub
dec
lock
aas
inc
(bad)
ds
sbb
lods
push
icebp
cmp
test
xchg
icebp
daa
mov
lods
repnz
xor
and
fild
in
mov
push
sub
ja
sub
sub
loopne
outs
mov
cmp
mov
mov
pop
fcomip
adc
fdivr
push
enter
adc
xchg
popf
dec
xor
mov
loopne
xchg
push
push
mov
ret
inc
sub
sbb
sar
mov
jbe
call
(bad)
aam
or
lahf
sbb
clc
in
imul
out
hlt
lods
xor
fwait
mov
(bad)
fldenv
in
nop
sbb
pop
adc
js
lahf
sbb
push
scas
std
popf
pop
loop
mov
sbb
sbb
jmp
sub
and
push
fdivrp
movs
push
adc
out
pop
pop
hlt
jae
cmc
jbe
mov
int3
lods
idiv
iret
adc
out
pop
cdq
dec
out
in
fbstp
or
lock
jo
int3
sti
(bad)
arpl
mov
sar
aas
pushf
test
cld
retf
sbb
fwait
lods
pop
fucomi
out
pop
xchg
imul
and
fwait
dec
bsr
call
mov
and
xchg
jl
or
cwde
mov
sub
cs
ja
pusha
add
xchg
cli
xor
test
jle
je
into
mov
cmp
scas
scas
cwde
mov
and
ror
or
push
jl
std
cmc
and
imul
inc
(bad)
cmp
cmp
loop
les
mov
fstp
mov
test
enter
iret
inc
cmps
scas
xor
out
retf
pop
cs
outs
pop
and
int
inc
adc
mov
push
and
inc
into
lea
lods
(bad)
je
(bad)
mov
push
xor
mov
ds
in
sbb
inc
pusha
popf
jo
pop
mov
push
cmp
fimul
mov
test
sbb
cmc
test
jne
jp
(bad)
shl
jae
xchg
sub
mov
data16
adc
jae
mov
pop
add
or
mov
imul
(bad)
jmp
adc
icebp
std
sbb
call
ins
sub
pop
(bad)
loope
add
daa
fcmovnb
in
jnp
add
gs
cwde
mov
xchg
inc
mov
xchg
add
and
push
loop
jno
adc
pop
or
mov
mov
popa
scas
or
test
push
rcr
loope
ds
fnstenv
mov
push
add
pusha
xor
xor
stc
xchg
jge
sahf
or
test
or
sti
jmp
cld
add
push
cmp
sbb
xchg
jns
pop
sbb
or
mov
sbb
gs
or
not
xchg
mov
ja
fnstsw
retf
sbb
lods
push
dec
xor
call
fs
popa
bnd
fld
cdq
(bad)
pop
push
xor
push
xor
mov
pusha
pop
enter
repnz
mov
aaa
and
jl
div
xchg
ret
out
inc
mov
movs
ficom
scas
and
ret
daa
loop
dec
adc
pop
jnp
cmp
ss
je
stos
adc
cmps
jmp
lea
jecxz
xor
pop
sub
push
and
sub
mov
lea
repz
and
jno
xor
inc
scas
sbb
lock
push
xlat
rcr
mov
mov
call
loop
jae
stc
das
push
mov
movs
mov
pop
hlt
fadd
inc
ret
data16
pop
call
mov
push
and
inc
(bad)
pop
push
adc
push
lds
ins
clc
movs
push
retf
pushf
pop
popa
das
mov
retf
cmp
fmul
push
sar
mov
scas
adc
inc
iret
test
mov
push
clc
push
sub
shl
xchg
xor
(bad)
cmc
ss
retf
out
in
sub
jb
fsubp
and
fcom
sbb
das
mov
fdiv
lods
pop
xchg
jge
xchg
jb
adc
ficomp
jo
sub
pop
rcr
adc
shl
ins
ret
xchg
pop
xchg
jle
js
jmp
lea
xchg
lods
xor
pop
push
adc
mov
mov
aam
push
std
in
cwde
stc
mov
xchg
dec
inc
sti
sub
adc
pop
pop
fiadd
mov
or
xchg
sub
dec
pop
ret
xchg
in
add
xchg
stos
pop
(bad)
cmps
icebp
les
fdiv
dec
popf
rcr
push
and
leave
mov
sub
sub
push
ins
or
adc
or
pop
inc
jnp
ins
adc
or
nop
inc
inc
scas
jg
or
inc
add
cmp
(bad)
int3
pusha
and
xor
enter
scas
jae
xor
pop
and
sahf
iret
cmps
fisttp
and
pop
cli
in
cmp
push
lea
mov
mov
imul
xchg
mov
ss
shl
out
and
mov
mov
xchg
inc
sahf
lea
stos
ds
jo
lds
fsub
inc
mov
push
dec
or
sbb
push
vpunpckhdq
inc
xchg
loop
mov
pop
mov
jp
cdq
ret
icebp
jo
adc
scas
pusha
std
pop
mov
adc
cmp
adc
mov
push
inc
push
xchg
aam
lds
sahf
(bad)
mov
or
int
or
(bad)
retf
sti
jae
jg
dec
hlt
aad
add
(bad)
neg
test
and
push
dec
xor
xlat
repz
fcom
mov
jmp
ja
mov
sbb
shl
lds
jnp
xchg
in
inc
inc
and
xchg
push
lods
in
xchg
jno
rcr
sbb
add
push
repz
jle
or
inc
mov
mov
adc
sub
dec
js
xor
push
loopne
cwde
shr
and
mov
xor
dec
loopne
test
lds
(bad)
scas
retf
mov
xor
pop
mov
xchg
cmc
lea
jno
sub
mov
jb
je
mov
inc
sahf
dec
or
jp
adc
leave
jae
mov
dec
scas
outs
pop
jp
mov
xor
popf
adc
retf
adc
xor
cmp
sbb
add
pop
sub
ins
xchg
iret
sub
sub
ss
xor
inc
fild
dec
or
stos
scas
xchg
xor
add
ds
pop
push
fucomi
rep
imul
out
or
push
pusha
retf
and
jle
or
pushf
cmp
test
std
sbb
mov
sub
dec
mov
out
pop
fimul
cmp
jno
fsub
pop
in
or
stos
or
jge
scas
or
dec
sahf
push
sbb
outs
adc
cs
fwait
jns
ss
cmp
sub
mov
icebp
sbb
cmp
cdq
ja
jbe
frstor
inc
xor
dec
lods
scas
push
sahf
xchg
jo
push
xor
clc
out
add
dec
add
dec
(bad)
nop
pop
jmp
int3
into
(bad)
mov
mov
or
int3
loopne
ins
ins
bnd
sub
js
out
xor
retf
rcl
call
jae
push
(bad)
push
pop
bound
sbb
inc
mov
outs
adc
jne
movs
call
pushf
rol
mov
aad
and
jae
mov
popa
cmp
sbb
pop
mov
les
jg
rol
mov
das
fist
cld
cmp
(bad)
stos
imul
aad
jmp
fist
sti
fldenv
cld
ret
ret
test
pop
sbb
rol
mov
xchg
stos
jnp
fwait
sub
or
lods
in
aam
push
fcmove
xchg
mov
sbb
sub
loop
add
in
sub
adc
jbe
inc
cmp
jp
aaa
int3
rcr
cli
lods
mov
(bad)
xchg
int
adc
cmp
test
cmp
loop
loop
minps
neg
sti
ds
daa
push
repz
xchg
push
dec
jb
dec
psrld
push
aaa
push
pop
adc
jecxz
mov
fsubr
pop
ins
jns
mov
mov
xchg
inc
jns
fbld
sub
ret
dec
imul
mov
push
dec
push
jmp
shl
cmp
cmp
pop
pop
cmp
popa
xchg
inc
cmc
call
jnp
iret
imul
lods
div
mov
das
dec
repnz
cmp
cld
mov
not
mov
mov
out
mov
mul
mov
sahf
mov
pop
and
daa
push
neg
mov
mov
inc
mov
inc
fnsave
dec
and
cld
mov
pop
cmp
add
sbb
mov
fcmovnu
jl
ret
jmp
sbb
xor
stc
xchg
sahf
jb
adc
ret
repz
sbb
push
cwde
or
arpl
fs
dec
lods
mov
cmp
adc
enter
(bad)
cdq
jmp
mov
or
ins
scas
scas
sahf
and
inc
scas
xlat
sub
in
icebp
mov
inc
bound
fld
jo
push
jo
(bad)
cs
repnz
xor
cld
inc
stos
xchg
pop
mov
daa
aam
inc
imul
push
cmp
sti
enter
retf
inc
dec
jg
push
lods
pop
int3
mov
adc
imul
loop
or
les
add
(bad)
cdq
mov
jle
inc
adc
mov
adc
cdq
out
mov
data16
das
push
mov
or
cdq
inc
test
add
cmp
mov
icebp
rcl
xchg
inc
sub
lock
jecxz
fcom
ror
mov
dec
int3
ja
lods
das
rep
mov
inc
fsubp
loope
and
adc
(bad)
pushf
std
aam
out
outs
pop
jg
push
(bad)
lock
add
retf
add
sbb
xor
xor
(bad)
aaa
push
lods
ret
ja
mov
sub
inc
jb
sub
bound
dec
aas
nop
cmp
push
cmps
mov
imul
dec
pop
push
shl
inc
ret
jne
popf
pusha
xchg
and
pop
sub
adc
sti
xchg
jmp
jb
sub
sub
and
dec
and
mov
mov
jbe
ins
fidivr
scas
test
(bad)
xchg
xchg
push
inc
movs
sar
ret
sub
mov
cmps
or
jl
test
xor
jp
cs
inc
inc
bound
aas
lds
sar
adc
xchg
pop
aaa
sub
dec
(bad)
out
pusha
pushf
aad
in
xor
lods
pop
icebp
dec
sbb
rcr
test
jo
stos
test
retfw
sbb
cmp
dec
stc
jmp
ficom
lds
mov
cmps
fstp
xor
cmp
inc
hlt
inc
fnsave
sbb
jae
cmp
out
int3
xchg
mov
ror
mov
out
leave
jge
mov
jnp
adc
bound
mov
xchg
dec
cmp
mov
ret
adc
cmp
enter
inc
je
dec
add
jo
retf
retf
push
mov
out
ret
add
pop
in
cwde
xor
and
in
adc
les
xor
into
mov
xchg
and
pop
int3
(bad)
ja
shl
js
mov
popa
jne
dec
inc
and
es
daa
dec
xchg
push
rcl
enter
mov
movs
rcl
and
cmp
sbb
adc
pop
js
sar
xor
mov
add
pop
cli
and
cli
mov
adc
xor
jne
mov
mov
test
popf
xor
inc
cmps
fcomi
lea
adc
xor
enter
xor
int3
xchg
pop
mov
sbb
push
push
les
cmp
mov
xchg
fsub
mov
xchg
push
faddp
mov
sub
pop
jge
dec
int3
jbe
(bad)
leave
mov
stos
jg
in
out
movs
mov
in
jmp
out
cmp
imul
sub
mov
aad
call
sbb
xor
and
jp
jge
pop
xchg
imul
ret
push
and
ffree
mov
mov
mov
push
pop
mov
sub
dec
aam
shl
retf
sahf
xor
sbb
xchg
jb
add
pop
mov
inc
or
nop
jno
retw
sub
add
pop
das
mov
and
push
loop
loopne
bnd
cwde
dec
mov
icebp
xor
mov
repnz
and
xchg
stos
push
add
loope
loop
sbb
mov
mov
cli
inc
cmp
jno
sbb
inc
in
cmp
ficom
out
mov
jns
in
inc
int
mov
mov
gs
xor
xor
ins
dec
sub
or
cmp
push
call
xchg
push
stc
fldcw
sbb
dec
add
cwde
mov
cmp
or
(bad)
cmp
mov
fist
daa
fisub
sar
je
push
aas
sbb
xlat
cmp
adc
xchg
les
sub
pop
cdq
inc
adc
ja
mov
aam
lods
xor
dec
and
push
jbe
fxch
outs
aam
imul
lock
dec
mov
(bad)
jecxz
push
popf
mov
dec
(bad)
retf
inc
cli
bound
xor
rcl
pushf
jmp
jle
inc
mov
cmp
cmp
rol
sub
ins
push
mov
clc
pop
js
mov
mov
add
aam
xchg
push
xchg
test
xor
xchg
add
adc
lea
(bad)
dec
leave
pop
xor
jle
jbe
or
and
loop
scas
pop
sbb
(bad)
and
sbb
lahf
arpl
fild
adc
out
ins
movs
repnz
sti
enter
adc
or
jl
arpl
push
sub
lods
xor
mov
es
jle
mov
mov
out
aam
ret
and
cmp
sbb
into
arpl
pop
rol
mov
cmp
push
nop
cmc
int3
fdivr
mov
adc
dec
(bad)
das
and
mov
loop
imul
mov
dec
fisubr
sub
jbe
pop
call
add
jno
push
add
ret
pop
(bad)
jmp
dec
inc
mov
or
pop
mov
out
and
(bad)
cmp
je
lahf
out
stc
mov
test
mov
icebp
mov
shl
sbb
js
or
push
popf
inc
movs
jg
xchg
out
ds
jge
repnz
cs
fiadd
xor
fbld
mov
rol
imul
jl
adc
into
xchg
arpl
sub
push
push
cmp
hlt
xchg
mov
retf
hlt
stc
dec
mov
in
cmp
and
mov
pop
mov
ins
sub
sbb
sbb
daa
into
inc
test
loopne
sbb
lock
and
test
pop
cmp
retf
or
daa
cmp
mov
fwait
shl
pop
aaa
add
jno
imul
test
and
push
and
mov
add
out
leave
xor
ins
jmp
pop
arpl
push
fisubr
loopne
test
mov
pop
pop
retf
not
jmp
retf
cmp
sbb
out
mov
xor
cmp
pushf
aam
imul
cdq
stos
(bad)
sub
dec
test
out
push
inc
shl
aas
(bad)
mov
enter
add
scas
jno
pop
pusha
dec
jb
adc
repz
mov
sbb
das
(bad)
sbb
cmp
cmps
outs
test
jp
push
jmp
add
aaa
jo
mov
or
sub
std
in
sbb
out
cmp
cmp
ins
sub
out
pop
js
sub
cmpps
std
jle
xor
xchg
mov
add
in
push
lock
and
and
in
or
retf
std
or
cmp
hlt
jae
jl
aas
sbb
pop
push
stc
mov
mov
int3
cmc
xor
mov
add
mov
sbb
ret
lea
jne
imul
arpl
dec
ss
sub
add
mov
or
test
arpl
clc
(bad)
pop
mov
mov
or
popa
jb
mov
sti
pop
or
push
cmp
stos
in
add
jnp
call
xchg
mov
iret
aaa
jns
cmp
jmp
mov
jae
jecxz
mov
push
cmp
fwait
popf
out
inc
push
or
cwde
adc
fwait
pop
mov
and
std
pop
ficomp
jnp
dec
test
repz
push
adc
pop
and
sub
or
and
retf
push
mov
div
std
pusha
aas
push
and
test
call
in
mov
rcr
stc
call
in
test
push
adc
cdq
xor
es
or
mov
jmp
dec
out
and
out
cmc
aas
popa
adc
stc
call
and
sub
jo
add
mov
enter
pop
in
jno
in
mov
fimul
sub
xor
add
jg
push
pop
inc
push
mov
addr16
push
sar
mov
retf
jb
ds
xchg
ins
mov
push
mov
lahf
out
add
call
pop
or
cmp
aaa
xchg
xchg
push
sub
leave
neg
xor
jecxz
jecxz
inc
pop
jne
(bad)
mov
mov
or
sub
push
test
dec
stos
loopne
mov
or
retf
sub
xor
push
cli
loop
mov
inc
push
jbe
stc
loope
adc
jbe
in
ins
push
pop
ror
jo
retf
or
xchg
add
lods
jmp
imul
out
call
mov
fnsavew
mov
pop
push
loop
es
add
cwde
lock
aad
push
adc
xchg
dec
mov
xor
(bad)
rcl
inc
test
cld
cmp
ja
pop
dec
push
loope
gs
dec
(bad)
pop
icebp
dec
sbb
and
pop
pop
inc
imul
add
shl
xchg
retf
xchg
fidiv
jecxz
icebp
fs
dec
arpl
mov
or
js
dec
jae
mov
jp
int3
mov
mov
aad
aas
mov
in
out
fwait
jmp
xor
pop
cmp
cdq
or
mov
mov
dec
xor
xchg
push
fldcw
call
fidivr
retf
mov
push
mov
jb
iret
or
mov
ins
ins
icebp
imul
addr16
lods
dec
adc
(bad)
cld
test
add
loope
nop
and
bound
pushf
(bad)
mov
add
int3
pop
stos
jb
push
xor
pop
cld
mov
xchg
jmp
std
shl
add
out
stos
jo
sbb
mov
mov
jecxz
mov
ds
retf
push
inc
mov
outs
shr
leave
push
inc
nop
inc
mov
jmp
pop
sahf
cmps
jns
(bad)
cdq
outs
xor
jmp
loope
xchg
adc
fsub
sub
inc
in
ins
add
push
lahf
lds
mov
les
dec
outs
fwait
int3
movs
(bad)
stos
ja
push
pushf
xor
iret
adc
loop
xchg
jg
xchg
cmp
push
push
and
shr
sbb
sti
inc
sbb
jb
int
mov
fs
(bad)
mov
pop
sbb
jns
sti
jmp
fidiv
repz
push
dec
arpl
adc
mov
ds
dec
out
push
aaa
xchg
scas
jne
cmc
mov
pusha
pusha
push
xchg
mov
jb
js
sbb
dec
imul
push
dec
mov
xchg
jmp
cmp
retf
and
xor
dec
cs
jbe
es
jmp
fldenv
pop
mov
stos
pop
pop
icebp
dec
out
das
fs
pop
xchg
jecxz
fwait
sub
mov
ror
popa
fcom
and
and
add
or
xlat
push
push
jbe
inc
stos
int
loope
js
inc
in
fistp
rcr
cmp
push
popa
ror
pop
ss
sub
pop
sub
aas
imul
push
cs
jmp
je
inc
adc
popa
mov
pusha
aad
pop
xlat
adc
or
xchg
and
lods
in
xchg
or
pusha
fmulp
les
or
add
push
mov
mov
jp
add
jmp
loope
adc
sbb
into
out
aaa
push
(bad)
mov
clc
inc
imul
sti
cmp
push
mov
xor
sar
add
mov
push
cdq
adc
in
or
loop
shl
les
stos
mov
mov
cmovs
pop
inc
adc
movs
push
push
imul
jle
mov
add
mov
or
jae
loopne
pop
jge
(bad)
pop
into
(bad)
adc
rcl
xchg
cdq
cmp
pop
xor
push
cli
retf
adc
out
in
mov
in
cmc
pop
mov
pop
jns
xor
pop
es
jne
adc
add
mov
mov
pop
mov
aaa
cmps
and
(bad)
adc
(bad)
call
xchg
mov
mov
xor
sub
sub
add
scas
sbb
aaa
loopne
xchg
push
into
hlt
push
test
inc
sub
add
and
stos
push
arpl
mov
in
fidiv
and
mov
sbb
es
dec
mov
ret
xor
ins
repz
sti
cmp
out
in
es
and
push
cmp
and
(bad)
pop
push
rcl
(bad)
xchg
xchg
adc
cmp
movs
sbb
cmps
call
xchg
jmp
lea
int
dec
sub
nop
clc
(bad)
push
jp
outs
dec
cmp
popf
dec
push
jg
sbb
cmp
inc
jns
mov
inc
xchg
sub
xchg
leave
repnz
dec
pop
pop
mov
jl
mov
push
push
dec
lods
hlt
xor
fwait
xchg
add
ret
aaa
pop
lahf
cmp
cwde
add
and
fcomp
call
lods
jb
jp
mov
xchg
ss
dec
daa
mov
ror
mov
sbb
dec
(bad)
xor
pop
xchg
and
mov
xor
iret
pusha
inc
pop
jmp
push
leave
mov
js
scas
add
mov
or
mov
fwait
sbb
add
sub
mov
aaa
xor
imul
loopne
adc
scas
ins
mov
repz
imul
xor
dec
mov
stc
pop
sbb
aam
xor
push
xchg
in
pop
cmps
mov
fist
idiv
mov
dec
fmul
(bad)
ficom
call
fcom
xchg
or
call
adc
fucomp
addr16
mov
mov
test
and
sbb
cmp
cs
scas
bound
dec
fwait
pop
mov
xor
add
mov
mov
or
mov
(bad)
mov
mov
mov
adc
add
mov
repnz
cld
xchg
add
pop
int
or
sub
dec
call
rol
xchg
fild
xchg
iret
out
pop
imul
pop
lods
ds
addr16
hlt
int
add
jb
sub
stos
cmp
call
mov
cmp
sub
xchg
or
pusha
clc
jno
xor
mov
jns
jbe
sti
lahf
ds
add
stc
inc
and
repz
fincstp
mov
fisub
push
push
je
loopne
mov
jmp
inc
iret
shr
mov
fidivr
jg
mov
xchg
mov
in
xor
and
xchg
and
pop
(bad)
sbb
push
loop
xlat
xchg
aas
and
or
jecxz
in
les
xchg
and
jnp
hlt
mov
xchg
sbb
stos
data16
add
sbb
and
mov
iret
inc
mov
sub
xchg
jl
imul
sub
aam
pop
test
bound
inc
xor
jg
jmp
dec
sub
das
cmp
call
adc
add
mov
ror
out
out
jle
and
div
xchg
pop
lahf
xchg
sbb
test
inc
cmp
xor
add
cmp
es
sbb
and
inc
cs
hlt
std
add
test
fnstenv
(bad)
sar
or
cmc
xlat
fstp
or
jae
shl
cmp
ins
cwde
pop
leave
sbb
repnz
imul
add
mov
or
xchg
stc
enter
and
aam
and
fsub
(bad)
jbe
xor
jg
inc
xor
and
push
inc
outs
add
xchg
fcmovnbe
movs
sti
ins
sbb
sub
ja
dec
mov
xchg
jae
stos
xchg
ror
xchg
xchg
pushf
or
or
repnz
dec
test
test
mov
mov
leave
sub
adc
sub
push
push
pop
mov
in
mov
pop
aas
sbb
jg
aam
fwait
cmps
and
mov
inc
sbb
sub
jmp
push
pushf
jnp
outs
fcmovbe
cwde
sub
xchg
jb
sub
xor
jne
test
call
repz
inc
xlat
xchg
stos
push
mov
mov
cmp
xchg
icebp
sbb
or
ds
out
mov
sar
xor
pusha
rcl
test
(bad)
test
cmp
xchg
adc
dec
push
aaa
inc
fsub
mov
xchg
pop
fsub
mov
(bad)
ins
cmc
cmps
ins
test
or
(bad)
sub
in
pushf
and
push
movs
mov
div
mov
fs
pusha
out
xchg
dec
outs
cmps
lods
adc
fisttp
jg
fwait
mov
in
add
sar
mov
frstor
sbb
retf
in
(bad)
(bad)
out
rcr
xlat
cmp
cmp
das
je
pop
std
js
add
call
mov
test
xchg
pop
cmp
inc
push
dec
and
(bad)
pop
les
jns
push
xchg
pop
in
mov
pop
dec
and
gs
(bad)
pop
sub
jno
pop
(bad)
xor
mov
(bad)
(bad)
jb
sbb
mov
ret
pop
mov
inc
dec
xchg
mov
pop
mov
aaa
enter
xor
test
push
mov
sbb
lods
push
xchg
sbb
push
dec
sbb
mov
retf
push
scas
rcl
pop
jmp
fist
mov
mov
int3
in
nop
jae
stc
jmp
lods
pop
in
xchg
repz
pop
ss
add
cmp
add
mov
sbb
es
pop
jmp
pop
adc
in
sub
std
sub
xor
xor
std
push
int3
mov
mov
iret
les
lea
adc
fabs
jmp
add
xchg
inc
and
mov
dec
push
sar
shl
stos
dec
nop
loopne
sub
inc
sar
add
hlt
dec
popa
icebp
push
xchg
pop
leave
xchg
dec
fst
fwait
add
je
push
loop
or
fimul
xchg
mov
sbb
xor
test
hlt
rcr
out
add
cmp
xor
repz
nop
pop
sub
shr
cs
mov
and
sti
mov
pop
shl
mov
test
popa
sbb
push
leave
(bad)
in
xchg
int3
jne
repnz
inc
outs
sub
nop
dec
into
jae
xor
movzx
repnz
jbe
retf
mov
push
and
dec
pop
div
movs
jg
xor
sti
jp
mov
xor
ret
inc
pop
rcr
and
sub
mov
hlt
push
dec
test
std
add
dec
js
pop
jmp
cmp
cli
adc
jnp
xchg
cmp
sub
sbb
cli
cmp
lds
adc
xor
lahf
nop
sbb
movs
and
(bad)
inc
mov
out
icebp
mov
xchg
add
xor
sub
push
call
cmp
push
cdq
pop
cmp
dec
and
adc
mov
inc
call
push
fstp
mov
inc
pop
lahf
or
add
jmp
pop
xchg
dec
ret
in
mov
mov
push
inc
gs
aam
jno
gs
daa
xchg
outs
inc
sub
jp
dec
add
in
inc
std
lea
push
mov
ja
xchg
adc
or
mov
or
test
mov
repz
daa
cmps
push
test
dec
fwait
leave
dec
pusha
or
aam
inc
inc
sub
jne
push
mov
out
gs
repz
dec
pop
add
xchg
jle
js
mov
xchg
xor
in
sti
fcmovne
ins
enter
sbb
or
and
jne
mov
push
fwait
das
out
fisub
mov
mov
and
dec
jl
mov
popa
shl
int
mov
push
cdq
aas
ror
mov
mov
add
mov
outs
ja
lds
sub
and
ss
out
inc
je
mov
test
data16
sbb
xchg
and
sub
xchg
ins
repnz
stos
push
jmp
cmp
jecxz
mov
and
push
shl
pop
cmp
dec
outs
mov
std
leave
mov
das
ja
push
jge
jp
int
cmp
sar
jp
pop
lds
in
popf
mov
push
add
es
cmp
sub
cmps
outs
adc
adc
xor
popf
imul
test
hlt
jno
(bad)
cmp
add
ret
pop
out
jb
clc
xor
(bad)
enter
clc
mov
and
rcr
xchg
xchg
mov
arpl
cmp
lods
jae
add
vmulsd
je
pop
call
pop
not
stos
lock
aas
fwait
sub
mov
pop
aaa
(bad)
scas
mov
or
das
mov
(bad)
in
xchg
add
pusha
and
out
mov
pushf
fbld
scas
cmp
aaa
push
or
adc
mov
mov
test
push
cdq
repnz
pop
pop
jo
sub
adc
aad
push
mov
sub
mov
outs
mov
and
push
dec
or
sub
add
popa
mov
pop
movs
ror
test
bound
fucom
mov
(bad)
or
fcom
inc
repz
test
sbb
js
or
add
jno
and
lods
sar
sub
cdq
in
ins
push
cmc
nop
outs
jae
adc
ret
and
in
push
push
popa
out
push
cmp
xor
jne
popa
out
add
addr16
std
outs
stc
scas
pop
sub
pusha
aad
fwait
or
stc
fbld
aaa
mov
xchg
mov
mov
test
nop
cli
sbb
loop
or
jmp
xchg
fdivr
scas
mov
xor
dec
mov
xchg
dec
mov
enter
adc
inc
push
jle
imul
cmp
xchg
ja
ds
iret
add
push
rcr
out
fsubr
mov
cmp
dec
mov
test
pop
inc
push
sub
gs
xchg
rcl
mov
lahf
dec
mov
xchg
ret
lahf
sbb
sbb
jo
xchg
jmp
sar
ret
imul
jl
dec
sbb
dec
mov
js
cld
inc
and
mov
fidiv
ror
test
repz
xchg
popf
retf
aaa
in
add
les
pop
js
data16
fild
inc
inc
adc
mov
retf
in
mov
lods
outs
mov
int
xor
xchg
add
xor
int3
add
int3
ret
pop
or
cmps
adc
scas
or
pushf
cli
(bad)
xor
inc
ds
inc
sbb
adc
lea
lahf
test
into
sbb
and
ss
(bad)
xor
pop
push
adc
sub
sbb
sahf
push
lods
add
imul
fimul
and
iret
rol
xchg
jge
or
sahf
jp
rol
test
add
(bad)
jmp
jae
and
xor
(bad)
xchg
adc
jne
jne
add
retf
stos
in
scas
loop
mov
cdq
dec
bound
or
int3
pop
pop
adc
adc
mov
mov
stc
inc
and
jle
mov
mov
adc
test
xor
sub
cmps
pop
in
inc
inc
mov
inc
ret
shl
adc
jbe
inc
adc
or
pop
(bad)
lock
xchg
sbb
cmc
mov
add
arpl
iret
mov
iret
sbb
movs
ret
aad
add
dec
scas
push
mov
leave
(bad)
lods
popf
jecxz
push
inc
sub
mov
je
idiv
jmp
pop
stos
mov
push
(bad)
jmp
mov
lods
fwait
and
sti
icebp
dec
aaa
add
cdq
push
and
(bad)
jmp
inc
push
or
add
gs
dec
out
adc
jb
jge
sahf
sub
sub
mov
aad
in
pushf
mov
(bad)
xchg
rcl
lea
xchg
xlat
jno
enter
dec
or
pushf
push
pop
mov
push
xchg
popa
fldenv
mov
sbb
scas
stc
mov
or
mov
cwde
into
adc
sahf
(bad)
in
jmp
mov
frndint
pop
or
adc
loop
out
outs
sub
adc
mov
cmp
dec
add
push
xlat
or
call
shr
sbb
jne
ja
stc
(bad)
fdivr
and
shr
and
mov
nop
fdivp
mul
sub
push
mov
shl
(bad)
retf
sti
popa
dec
xchg
dec
mov
lock
pop
addr16
cli
mov
test
test
shl
pop
fld
jp
xchg
sub
ror
aaa
js
loop
aas
pop
cmp
mov
hlt
leave
push
jno
cld
adc
pop
ud1
mov
nop
sub
cwde
cmc
and
lods
mov
or
push
gs
and
adc
cld
mov
cmp
jle
jge
mov
test
mov
add
ss
add
inc
shl
(bad)
repnz
and
cld
sti
mov
pop
dec
cmp
adc
jno
mov
inc
iret
cmovo
imul
repnz
add
mov
ins
jbe
and
dec
mov
dec
jae
nop
mov
rol
adc
test
inc
add
jne
(bad)
jne
shl
pop
mov
pusha
sub
mov
inc
inc
mov
jp
pusha
pop
xor
out
add
imul
adc
mov
enter
cli
add
movs
jnp
or
in
mov
ins
test
lea
dec
cmp
and
sbb
or
cmp
mov
loop
(bad)
sbb
jmp
(bad)
fs
xchg
cdq
test
ds
sub
test
cmp
aad
add
into
(bad)
out
pop
xor
fwait
xlat
(bad)
mov
mov
mov
push
jne
sbb
sub
cli
add
push
shl
dec
cmps
in
jae
dec
rol
sub
out
addr16
mov
sub
mov
and
dec
adc
fild
inc
and
out
push
enter
fwait
or
push
fadd
movs
imul
leave
cmp
jle
push
idiv
mov
xchg
movs
adc
dec
out
add
cmp
outs
and
push
ds
cmp
out
test
mov
imul
sbb
rol
jnp
sub
in
adc
jo
clc
push
out
cli
inc
jl
pusha
aad
mov
stc
inc
cmc
mov
ret
jge
jmp
pop
cmp
inc
clc
paddb
mov
sbb
clc
ret
cmp
cli
inc
jns
mov
or
cmp
push
add
adc
mov
or
outs
outs
jmp
cmc
stos
and
pop
cwde
sahf
adc
inc
out
jo
dec
sub
push
and
cmp
jo
add
ja
sbb
dec
inc
pop
cmp
jne
cmps
dec
test
(bad)
mov
(bad)
jl
and
add
imul
mov
and
xchg
imul
inc
mov
pop
sbb
jno
stc
mov
scas
mov
ja
push
sbb
lods
pop
repz
xchg
xchg
sbb
xchg
mov
pop
les
adc
adc
sub
hlt
out
retf
jno
and
popf
sbb
cs
dec
outs
inc
sbb
movs
push
push
das
jmp
ret
xchg
dec
mov
jmp
fisttp
popa
rcl
cs
retf
and
enter
xlat
lds
int3
mov
xchg
adc
adc
adc
xor
out
push
cdq
push
cmp
mov
aam
js
aad
cld
cmp
pop
add
sbb
nop
les
mul
gs
push
je
mov
mov
and
inc
mov
push
test
(bad)
push
popf
adc
mov
xchg
jp
mov
out
push
ret
jecxz
ja
inc
retf
dec
in
scas
shl
(bad)
repz
push
pop
inc
mov
cli
mov
data16
jo
div
add
jne
fwait
xor
push
cmp
mov
lods
or
rep
xchg
aad
shl
fistp
pop
dec
sbb
rol
popa
add
pop
aam
dec
(bad)
int3
movs
repz
jmp
nop
hlt
arpl
pop
int
inc
scas
fsub
push
push
mov
mov
xchg
sbb
adc
xor
sti
ds
movs
cmp
add
xlat
loop
test
xchg
out
cwde
in
loope
out
and
fisubr
mov
jp
or
jbe
adc
add
bound
in
mov
ja
aas
mov
mov
mov
addr16
popa
inc
adc
jne
cwde
jecxz
mov
stos
out
push
popa
or
fidivr
in
pop
inc
scas
ins
mov
scas
lods
(bad)
mov
loope
popa
sub
and
inc
mov
add
mov
cmps
hlt
mov
fldcw
movs
cli
outs
imul
imul
call
lods
icebp
es
pop
and
mov
test
xor
repnz
gs
add
shr
mov
(bad)
imul
xor
push
xchg
dec
push
(bad)
sub
pop
or
mov
jmp
jg
mov
xchg
mov
test
gs
mov
idiv
mov
mov
stc
sub
xchg
fist
aaa
cwde
cwde
push
push
adc
fnstsw
sub
xor
push
(bad)
clc
into
xor
les
push
sbb
std
push
in
nop
xchg
pcmpeqb
xor
in
xchg
mov
ss
mov
push
pop
fucomi
pop
aam
sub
lods
rol
cmp
lds
inc
test
call
adc
scas
sub
(bad)
jmp
push
les
and
mov
dec
in
fndisi(8087
sub
mov
mov
das
push
dec
xchg
inc
jge
mov
or
pop
adc
mov
mov
add
ds
mov
fwait
jle
daa
mov
scas
mov
mov
xor
cmp
jb
mov
call
inc
mov
daa
inc
lea
cmps
jns
lds
pop
mov
mov
mov
scas
xchg
jb
xlat
jbe
fist
in
push
sbb
and
shr
push
loop
lsl
xor
add
sbb
enter
mov
or
icebp
ins
fs
adc
push
fs
add
leave
cmps
out
sub
popa
jae
or
push
sbb
sbb
inc
or
add
push
aad
stos
inc
mov
bswap
repz
int
shl
adc
xor
pop
adc
dec
popf
push
scas
mov
jp
loope
mov
jae
pop
mov
(bad)
inc
fimul
mov
clc
mov
dec
div
scas
aad
mov
test
jno
inc
fnstsw
ret
pop
pop
add
test
pop
pop
pop
gs
mov
jecxz
mov
ret
es
ja
jno
cmp
ficomp
xor
call
add
dec
xchg
push
sbb
xchg
or
adc
in
inc
vcmpsd
jae
aas
add
hlt
jnp
jl
dec
pop
pop
sbb
in
(bad)
pop
jmp
(bad)
in
shl
call
aam
stos
cmp
mov
pushf
mov
pop
inc
sbb
enter
sbb
add
gs
(bad)
cmp
mov
or
out
jp
jecxz
lods
xor
mov
retf
push
shl
bnd
(bad)
dec
popa
rcr
in
add
inc
xchg
cmp
or
leave
inc
enter
xchg
cld
push
cs
sub
cli
je
push
stc
xor
ja
sahf
cwde
mov
shl
mov
xchg
fbstp
cmp
add
mov
in
ins
inc
stc
retf
movs
dec
pop
push
ds
and
es
xchg
push
mov
pushf
dec
out
xor
or
sub
pop
jo
mov
inc
(bad)
mov
push
neg
jnp
dec
or
xchg
vmovdqa
aam
inc
jp
popf
retf
cmp
jmp
faddp
int
ret
ficom
and
pop
arpl
outs
retf
pop
dec
lock
inc
call
loop
mov
leave
inc
rcl
in
jb
mov
mov
inc
mov
push
cmps
test
(bad)
cmp
dec
lahf
inc
inc
adc
aas
cld
jne
lods
out
add
jmp
lea
xor
imul
adc
cmp
lea
add
adc
dec
es
out
push
daa
xchg
mov
rol
sub
cld
xchg
xchg
and
shl
dec
adc
adc
mov
add
jmp
aad
pop
mov
cmps
arpl
shr
xchg
in
movs
or
mov
sbb
fwait
outs
mov
mov
add
je
push
pop
vmread
jae
enter
dec
inc
jp
sbb
leave
and
sahf
fs
inc
dec
in
popf
sub
mov
push
test
gs
int
aaa
xor
call
push
jg
mov
repz
stos
popf
sbb
or
and
inc
add
out
jo
jmp
ret
fist
push
jg
inc
out
aas
aam
addr16
mov
(bad)
test
pop
(bad)
sbb
xchg
ror
cmp
push
or
int3
fld
dec
push
jp
jp
test
xlat
fmul
jbe
(bad)
cmp
sub
inc
or
popa
xor
dec
das
and
adc
cdq
popf
imul
cmp
jae
xor
cmp
pop
mov
ror
jle
ret
ins
mov
and
imul
scas
and
mov
les
dec
ds
add
push
xor
adc
not
adc
adc
fwait
cdq
std
xor
sar
cmp
and
(bad)
into
cmp
retf
mov
out
or
push
lahf
dec
mov
jno
xchg
lods
jns
pop
xchg
mov
pop
pop
popw
scas
inc
xchg
pop
cmp
push
xor
mov
(bad)
mov
jmpw
(bad)
jmp
inc
iret
test
in
dec
jmp
adc
pop
stos
mov
cmp
scas
xchg
(bad)
(bad)
lahf
outs
pop
pushf
mov
hlt
push
fs
imul
out
les
adc
je
aad
lea
ins
sti
mov
jb
cmp
mov
inc
mov
js
inc
js
inc
jmp
getsec
test
(bad)
jmp
sub
cmp
in
into
shl
mov
sbb
dec
inc
ss
jne
cmp
ins
mov
pop
call
fs
in
jo
xchg
pop
fldcw
jo
das
into
ror
mov
lds
faddp
loop
(bad)
nop
(bad)
mov
push
das
fnstenv
aad
jmp
dec
cmp
pushf
mov
xchg
aad
xchg
popf
push
cmp
or
jnp
ror
mov
sub
in
xor
push
shl
mov
dec
loopne
das
cwde
cmps
add
out
jae
xchg
xchg
sbb
add
in
dec
cs
jge
bound
mov
inc
dec
sbb
ret
or
lods
pop
int
push
sub
sbb
imul
out
and
xor
xor
rcl
loopne
out
mov
ja
mov
mov
add
loope
lods
les
cdq
cmp
jmp
fldcw
daa
sub
push
inc
shr
mov
leave
sahf
int3
into
dec
in
aas
adc
dec
cmp
imul
inc
and
pop
cmp
sar
push
call
test
push
xlat
fld
jns
push
sbb
add
xchg
jo
lahf
mov
fwait
cmc
push
adc
pop
sbb
aam
sbb
jbe
ficom
add
fadd
cmps
and
ror
lea
xchg
rol
sahf
inc
ror
out
sub
and
mov
or
mov
push
retf
(bad)
lock
stos
jecxz
mov
sub
add
mov
cld
dec
jmp
test
pop
pop
sbb
dec
lods
(bad)
dec
mov
sahf
push
xor
mov
jae
and
js
push
movs
mov
jl
das
mov
(bad)
add
retf
cmp
cmp
rcl
aas
shr
addr16
xor
hlt
sbb
xchg
jl
mov
jno
sahf
outs
jae
jno
xchg
fnstenv
js
push
sbb
xchg
jnp
(bad)
cmp
push
mov
sub
cmp
xor
cmp
jge
in
(bad)
or
add
pop
mov
push
movs
cmps
rol
retf
ret
outs
sahf
inc
jo
loop
ins
pop
fidivr
fiadd
in
loop
sbb
jmp
pushf
add
(bad)
fwait
leave
(bad)
mov
jmp
cmp
add
xchg
fistp
adc
arpl
clc
push
test
imul
loop
test
imul
xor
xchg
xor
popa
lods
mov
mov
cmp
push
mov
rol
(bad)
lahf
push
cmp
ds
sbb
int3
jmp
call
dec
js
cld
mov
mov
in
fimul
inc
pop
sbb
outs
out
stos
cmp
and
mov
jno
dec
aam
js
pop
or
pop
scas
inc
ficom
out
aad
enter
fwait
inc
sar
dec
je
pop
lea
mov
test
pop
ss
div
xor
sti
imul
dec
cdq
mov
mov
cdq
jg
in
sub
dec
cmps
dec
mov
repz
add
pop
mov
xor
pop
shr
cmps
xchg
call
into
xchg
xor
sbb
cmp
aam
aam
mov
repz
jb
push
xchg
pop
jmp
into
cmp
push
sahf
scas
cli
stc
push
or
fst
inc
pop
inc
(bad)
and
aas
icebp
ror
test
xor
pusha
adc
mov
xchg
pop
(bad)
scas
push
and
aam
inc
sub
xlat
dec
imul
xchg
jb
jne
dec
fidivr
dec
into
loop
int3
inc
pop
inc
push
or
leave
inc
repz
cmp
push
pop
jl
add
hlt
cli
jp
mov
and
xor
fnsave
in
lds
call
repnz
shr
and
stos
pmullw
ror
fld
cmp
nop
pop
and
xor
ret
aad
arpl
faddp
xor
adc
and
mov
mov
lds
test
out
inc
aaa
int3
pusha
mov
repnz
xchg
and
fmul
fsubr
test
sub
and
mov
call
iret
sub
shl
pop
or
and
push
int
mov
cmp
lock
js
in
push
lods
pop
sub
retf
dec
and
cmps
in
pop
inc
push
inc
push
aas
ds
fwait
add
retf
div
cs
xor
pop
cmp
push
fstp
daa
mov
fsub
fsub
sti
and
lods
dec
(bad)
in
call
sbb
sar
cld
ja
imul
ror
push
xlat
push
outs
aas
cmp
not
in
gs
jne
sub
je
fcomp
jmp
jg
in
cs
pop
adc
gs
cdq
add
je
push
in
mov
popa
inc
xor
ja
xor
in
adc
loope
add
div
push
loope
xchg
(bad)
xchg
inc
dec
cmc
in
inc
vmovupd
daa
jl
push
fidivr
and
aam
imul
dec
or
sub
mov
and
adc
xchg
in
or
push
dec
in
sbb
into
fisttp
inc
test
std
push
pop
repz
loopne
fnstsw
add
xchg
pop
adc
add
sub
pop
pop
fnstcw
mov
mov
mov
inc
(bad)
push
sar
(bad)
adc
movs
outs
pushf
mov
popa
mov
cwde
lahf
jle
out
mov
dec
or
ins
mov
call
xchg
mov
mov
loopne
dec
mov
cmp
jne
pop
or
inc
fs
jle
pop
mov
sub
dec
mov
std
xor
push
rcr
repz
fsub
sub
mov
mov
xor
xchg
cmps
idiv
ficom
cmps
in
or
sbb
push
sub
and
imul
aas
dec
pushf
jo
hlt
in
out
xchg
xchg
cmps
dec
add
push
jb
aaa
jb
mov
cmp
cmc
dec
(bad)
aad
pop
mov
lods
fld
clc
jmp
push
mov
in
je
mov
jnp
pop
js
xor
fisubr
aam
push
push
push
popf
pop
sahf
xchg
push
das
out
ss
inc
loope
cmp
mov
or
(bad)
mov
mov
xor
inc
repz
inc
cdq
xor
inc
mov
mov
cmp
ss
stos
mov
cmp
ret
sbb
inc
lods
movhps
inc
push
jnp
or
jge
cmps
cmp
mov
out
mov
dec
iret
sub
icebp
and
cmp
push
adc
scas
push
cmp
je
jo
cli
inc
mov
mov
and
lock
pop
jle
or
push
mov
repz
xor
xchg
push
les
bound
sub
pop
inc
push
ror
ja
bnd
inc
in
jmp
inc
ds
test
(bad)
fimul
jecxz
cmp
popa
pop
jl
out
push
mov
fimul
fisttp
pop
cwde
pop
inc
(bad)
push
add
xchg
hlt
fsubr
xchg
inc
push
pusha
enter
addr16
sbb
fsubr
in
icebp
jle
mov
push
inc
push
leave
and
aas
dec
push
xlat
push
mov
pop
push
mov
sbb
test
jl
push
stc
outs
push
xchg
sub
mov
jmp
fs
fdivr
xor
outs
hlt
ds
loop
cmc
add
push
dec
lahf
sahf
scas
sbb
mul
adc
dec
mov
outs
cs
cmp
lods
leave
sub
sbb
loopne
clc
icebp
jge
xor
(bad)
sar
push
imul
mov
(bad)
(bad)
xchg
push
jbe
sbb
repz
dec
scas
out
out
scas
push
mov
xchg
add
and
test
jmp
shl
dec
das
imul
sbb
je
mov
cs
lods
popf
fisub
in
cdq
xchg
aad
aam
out
cwde
(bad)
sbb
dec
fild
add
shl
fimul
lea
ret
sbb
mov
push
mov
ret
lods
jb
shr
add
test
ins
in
cmp
scas
mov
(bad)
lods
repz
sub
mov
lods
sbb
ds
add
xor
shr
push
xchg
mov
js
jecxz
or
inc
shl
dec
pushf
add
inc
stos
aad
cmp
dec
cmc
push
popa
aad
jmp
out
pop
add
add
fdiv
ficom
xor
sahf
jo
xchg
and
test
xlat
xchg
dec
neg
sub
and
fs
add
cli
mov
ins
fidivr
sbb
pop
xchg
repnz
aas
cmp
ins
pop
mov
mov
arpl
(bad)
push
or
mov
or
movs
repnz
fdivr
xchg
stos
xor
sub
imul
and
es
dec
pop
(bad)
xor
neg
mov
movs
or
cmp
cdq
sub
mov
arpl
add
sub
out
mov
jmp
out
test
jne
mov
loopne
mov
mov
retf
loop
sbb
fistp
loop
xchg
sub
and
push
mov
stos
xor
xlat
imul
and
sbb
fcom
mov
or
and
inc
imul
out
in
in
lock
loope
fst
and
pop
popa
lods
aas
push
sub
jp
push
push
or
mov
cmp
push
xor
jl
popa
je
(bad)
jno
sahf
adc
int3
ins
mov
cli
push
shl
shr
data16
add
pushf
push
ins
addr16
cmps
scas
dec
sub
clc
xchg
fsubr
or
add
add
cmc
inc
dec
xchg
jno
add
loope
sub
aam
je
adc
and
fs
xchg
jge
mov
(bad)
pop
mov
in
lods
mov
cmp
test
cmp
rcr
sar
fdivr
in
outs
je
adc
mov
cmp
mov
sub
(bad)
data16
pop
rcl
push
mov
inc
sub
out
je
and
xchg
hlt
cld
mov
out
int
pop
jb
ins
adc
mov
in
cmc
adc
adc
xchg
loope
jns
test
lods
or
in
inc
shr
xchg
mov
push
iret
into
jl
push
iret
retf
loope
xchg
xchg
call
push
test
mov
hlt
in
push
inc
inc
sti
dec
xchg
jg
inc
dec
test
mov
push
sbb
test
aad
and
in
xchg
pushf
stos
test
mov
dec
(bad)
fbstp
nop
pop
add
and
add
lea
jp
into
push
cld
mov
cli
sub
(bad)
inc
pop
jl
fbld
ror
push
ins
mov
dec
mov
pop
or
inc
push
mov
je
mov
and
stos
ror
lock
sbb
push
inc
imul
(bad)
in
neg
imul
push
xor
xor
bound
cs
mov
jle
pcmpgtw
sahf
mov
mov
mov
dec
shl
stos
loop
shl
push
fdivr
dec
pop
in
in
(bad)
imul
adc
mov
ret
ss
mov
hlt
mov
(bad)
stos
(bad)
pop
lods
leave
movs
or
std
popa
loop
adc
xchg
psllq
movs
out
pop
push
or
mov
call
ins
aad
dec
cmp
popf
dec
shl
ja
sub
aad
fs
in
push
(bad)
lea
lea
sub
jno
shr
test
dec
imul
repnz
add
lods
or
mov
lock
cmp
sbb
and
mov
out
and
sar
sbb
push
adc
popa
xchg
cli
push
in
xchg
cmp
inc
inc
and
out
add
enter
mov
mov
xor
or
inc
sbb
mov
scas
cmp
out
cmc
or
sbb
clc
inc
aad
aam
mov
lahf
mov
jnp
dec
in
mov
outs
push
cmps
movs
out
jne
xchg
cmp
xchg
push
jmp
dec
and
cmp
push
mov
push
inc
int3
and
out
pusha
cmp
mov
jle
pop
push
mov
jno
add
or
fdivr
push
cli
nop
inc
jo
cmpxchg
jae
cmps
(bad)
cmp
in
mov
test
and
popa
cmc
cmp
aas
inc
or
dec
popf
and
lock
js
scas
mov
xchg
not
(bad)
int
fistp
loope
xor
fbld
push
out
ja
enter
test
data16
ins
shl
cmp
movs
imul
push
xor
push
mov
int
cmp
jne
fist
imul
es
xchg
repz
cvtps2pi
sub
or
xchg
push
sub
cmp
sbb
mov
outs
xchg
mov
mov
aam
mov
call
sub
stc
mov
fdiv
and
test
jmp
mov
mov
loopne
out
clc
retf
ds
test
out
pop
cdq
repnz
jo
push
mov
fcmovu
cwde
leave
xchg
or
pop
cmp
mov
sub
add
test
jge
int
xor
out
(bad)
or
jecxz
cwde
ret
scas
rol
inc
mov
(bad)
cmp
jae
movs
cmc
mov
fnstenv
mov
jp
fwait
int
test
retf
push
in
adc
pop
push
enter
int
movs
fdivr
fwait
das
nop
mov
push
mov
fdivr
and
test
ss
fisubr
mov
jae
push
or
pop
loop
bound
cmp
mov
mov
add
aas
fldcw
repz
inc
or
adc
cmp
call
ja
test
pop
int3
xor
dec
add
lock
xor
dec
js
sub
mov
pop
push
mov
mov
add
or
jecxz
or
inc
nop
sbb
aaa
int
mov
jne
dec
dec
in
(bad)
and
aam
push
xor
retf
cmp
shl
outs
scas
rol
xchg
sub
rcl
mov
add
cs
pushf
pop
push
nop
mov
fstp
ja
push
js
push
push
gs
mov
jmp
add
jne
(bad)
xor
rcl
test
mov
pop
sub
ret
fistp
popf
pop
test
sub
(bad)
sbb
lods
inc
xor
push
data16
fisttp
or
ja
pop
jge
jbe
mov
pop
jmp
jle
xlat
push
jl
fldenv
or
jne
mov
sub
(bad)
mov
(bad)
js
pop
inc
push
mov
push
mov
rcl
(bad)
jmp
(bad)
dec
jmp
jmp
push
cmp
imul
xor
fist
jae
sbb
pushf
dec
dec
daa
push
sub
out
das
js
outs
test
inc
cmp
pop
mov
jne
adc
cmp
call
cli
sub
sbb
or
mov
mov
pop
jp
push
fwait
mov
push
lods
push
mov
out
arpl
and
push
adc
cmp
lea
mov
dec
ret
outs
gs
pop
les
fld
ds
(bad)
jae
jl
pop
pop
fs
mov
mov
lahf
xor
clc
loop
push
sbb
loop
cmp
imul
jg
cwde
add
daa
mov
gs
pop
addr16
stos
fiadd
push
cmovp
aad
sbb
movs
pusha
jecxz
xor
mov
xlat
in
cdq
ins
mov
cwde
dec
shr
jp
stc
addr16
icebp
xchg
inc
xor
fist
pusha
(bad)
ret
add
cmp
cmp
call
stos
ret
cmp
(bad)
enter
mov
push
test
bound
add
loope
mov
inc
lods
pop
mov
pop
mov
jbe
sti
sub
push
call
jae
pushf
pop
sub
push
mov
clc
adc
repnz
outs
(bad)
xchg
repz
repz
fs
test
test
or
dec
stos
nop
pop
add
adc
gs
add
fnsave
xor
mov
mov
or
pop
jnp
loop
setbe
jb
dec
fcom
or
cmp
ja
push
pop
out
sub
cld
pusha
inc
inc
test
mov
pop
xchg
fs
mov
pusha
int3
push
icebp
cmps
in
jne
inc
hlt
call
dec
adc
pop
mov
add
int3
xchg
mov
push
popf
ds
popa
cmp
leave
dec
xchg
test
loope
pop
lock
imul
push
push
jae
mov
cmp
cmps
outs
jb
mov
test
hlt
push
cmps
retf
daa
mov
(bad)
pop
sbb
ror
cmp
mov
ror
add
daa
aad
xchg
push
adc
add
clc
dec
fcmove
inc
xchg
shr
das
in
outs
xor
xor
mov
push
fmul
jae
or
aam
sar
adc
aas
gs
nop
mov
mov
inc
lds
jo
int3
mov
daa
jp
ds
ret
aad
retf
sbb
jg
xlat
dec
xchg
sbb
stc
test
lahf
jmp
cwde
rcr
jl
fnstsw
inc
enter
jle
test
sub
or
test
sub
lahf
aam
sub
sbb
sub
aad
pusha
pmaddubsw
adc
or
add
pop
mov
inc
jb
mov
rcr
cdq
mov
jnp
loope
scas
xchg
(bad)
imul
lea
les
data16
cdq
sbb
pop
adc
add
fmul
or
jo
cmp
mov
(bad)
dec
jns
mov
mov
and
jne
push
mov
and
test
or
ins
jecxz
sbb
outs
adc
inc
add
add
jp
lock
cdq
sub
test
fsubp
hlt
sti
jg
(bad)
cmp
cmp
sbb
and
dec
cli
jbe
(bad)
loop
scas
xchg
sub
dec
jmp
xchg
pop
sahf
fsubrp
add
bound
loopne
out
mov
hlt
retf
mov
adc
ret
dec
and
mov
mov
or
push
pop
cmp
icebp
jl
cmp
div
lahf
pushf
mov
cmps
out
cwde
das
adc
dec
in
test
call
data16
jl
call
mov
sbb
mov
nop
xchg
cmp
adc
jo
cwde
lea
mov
mov
xchg
and
lahf
mov
and
lds
adc
(bad)
pop
scas
sub
fcomp
pop
or
test
mov
hlt
pop
(bad)
dec
sub
cmp
pop
xor
xchg
mov
push
adc
pushf
in
in
mov
call
dec
es
mov
mov
repz
add
out
loopne
bound
fld
xchg
pushf
shr
ins
jg
cwde
imul
adc
cmps
sub
(bad)
stos
add
scas
scas
out
hlt
pop
pop
test
inc
std
jge
push
jle
rcr
sub
mov
lock
ins
ds
push
stc
stc
int
aad
fnstcw
push
shl
ja
push
shl
scas
outs
xchg
mov
dec
iret
cmps
xchg
xor
movs
add
pusha
(bad)
test
dec
push
lea
mov
dec
inc
sahf
pop
adc
repz
cmps
mov
rcr
and
shr
push
ja
adc
cwde
ss
push
loop
call
iret
or
xchg
xor
or
loop
jno
aaa
mov
aam
cdq
popf
xchg
movs
and
cmp
(bad)
xchg
arpl
pop
pop
dec
push
fstp
cmps
daa
ins
push
ret
(bad)
cmp
lea
pop
(bad)
out
repnz
jmp
dec
call
push
repnz
cwde
inc
into
repz
ss
std
aad
ins
aas
jb
cmps
xlat
sub
imul
adc
inc
mov
pop
cmps
inc
loopne
(bad)
nop
hlt
mov
cwde
push
in
lds
lods
outs
jo
cwde
lods
mov
sbb
and
stos
xor
jp
ret
iret
popa
fdivr
sub
ins
pop
inc
and
sbb
jmp
cdq
and
addr16
and
gs
adc
(bad)
pop
pop
ja
test
stos
push
cld
and
add
leave
call
jg
dec
(bad)
mov
fldcw
test
xor
mov
int3
and
lahf
inc
sbb
jmp
push
xor
shl
dec
lahf
push
ret
xchg
bound
mov
cmp
int
inc
jns
push
imul
cmp
hlt
ja
call
mov
mov
in
in
pop
mov
dec
add
addr16
sbb
in
sub
inc
in
es
in
mov
sbb
test
sbb
xchg
stc
(bad)
nop
cwde
cmp
inc
cmp
imul
sar
cmp
stc
jae
(bad)
jno
cmp
cdq
or
jecxz
xor
xor
test
xor
loope
ret
pop
xchg
xchg
fmul
jno
dec
bound
push
mov
add
or
pop
fwait
cmps
push
test
test
sub
lods
nop
ds
mov
(bad)
adc
outs
push
rcr
lahf
mov
push
pop
ja
inc
jb
and
push
dec
(bad)
les
or
fdiv
xor
ja
in
xor
xchg
retf
mov
mov
sub
retf
mov
push
and
jl
pop
int3
xchg
nop
mov
jl
pop
aaa
test
sti
sbb
and
push
pushf
adc
xlat
sbb
fbstp
pop
mov
inc
(bad)
or
scas
aam
jmp
imul
add
aad
jmp
sbb
dec
out
outs
cld
or
(bad)
jmp
or
test
ins
xchg
cmps
addr16
stc
mov
(bad)
aam
lahf
ins
scas
std
out
mov
jnp
adc
dec
xor
(bad)
sub
ret
test
fwait
pusha
pop
and
scas
cmp
push
adc
scas
mov
mov
mov
cdq
xchg
push
cli
adc
sahf
mov
aad
pop
ins
rol
xor
sub
push
xor
dec
jo
rol
jnp
test
dec
loop
mov
push
aad
mov
sahf
int
data16
mov
loopne
arpl
cmp
out
jne
aas
fsubrp
ret
or
cmps
jl
xchg
jbe
pop
(bad)
(bad)
sbb
ror
(bad)
xlat
push
or
fmulp
cdq
popa
fcom
(bad)
mov
xor
jecxz
or
aas
aad
xchg
mov
mov
test
pop
xlat
xchg
out
push
fist
mov
fmul
jae
adc
fdiv
mov
mov
aas
sbb
cld
out
outs
xor
imul
sub
cwde
ficom
sub
xchg
lock
sar
dec
push
loope
sub
aas
and
mov
push
fcmovnb
fisub
daa
adc
adc
pop
retf
outs
mov
ins
mov
fistp
sbb
outs
mov
jno
push
sbb
jb
jmp
cmp
call
add
outs
sbb
xchg
sub
out
jp
cmp
daa
mov
popf
cld
aas
movs
jge
xchg
sbb
stc
sbb
outs
fcmove
gs
sub
fist
mov
xchg
outs
xor
add
xchg
and
add
jmp
and
add
jb
or
es
movs
and
and
fidiv
adc
int
push
fwait
je
xchg
push
adc
inc
movs
jo
jns
into
(bad)
into
sbb
(bad)
add
jp
mov
cwde
push
sti
cmps
mov
ins
pop
into
dec
and
and
lods
(bad)
mov
lea
jge
shl
xor
jle
cmp
lods
pop
add
sbb
pop
fisubr
cmc
aad
nop
fstp
fdivr
das
and
pop
jmp
je
loopne
imul
fistp
or
dec
data16
push
inc
push
shl
shl
pop
push
loop
fidiv
sub
mov
ins
or
mov
imul
es
xchg
adc
fadd
mov
dec
clc
jle
push
outs
xor
mov
or
stos
push
call
xchg
jns
enter
push
retf
fist
mov
jg
adc
mov
jmp
inc
call
ins
cmp
movs
cmp
in
pop
lods
lahf
dec
xlat
(bad)
adc
fnsave
std
ficomp
scas
inc
pop
into
popf
xchg
sbb
and
or
aas
cmc
adc
out
std
lahf
sub
and
fadd
mov
jmp
test
fwait
mov
fwait
cmc
push
js
xchg
in
retf
mov
add
cmp
dec
repnz
cmp
lods
(bad)
leave
cmps
into
rcl
mov
lods
nop
add
imul
pop
push
arpl
mov
lea
stos
dec
jns
outs
jno
and
mov
push
mov
bound
lds
inc
bound
mov
sub
dec
adc
push
xor
out
cmps
loop
pop
or
sti
sbb
in
repz
lods
test
ds
movs
stc
mov
or
or
(bad)
adc
or
out
pop
pop
(bad)
sub
mov
xchg
push
lds
mov
mov
mov
rcl
cdq
push
loopne
fwait
push
mov
repz
cmp
stc
cmp
aad
jecxz
lods
popa
sub
test
aaa
in
jae
cmps
xchg
jl
popf
sbb
jmp
test
mov
mov
mov
mov
pop
mov
mov
pop
cld
sub
fild
rcl
push
ja
push
push
jle
push
or
push
dec
clc
scas
push
mov
or
inc
sub
inc
popf
enter
loopne
notrack
out
ja
loope
ds
add
jnp
es
xchg
pop
inc
movs
shr
push
shr
stos
aaa
call
dec
rcl
jg
xor
mov
les
jbe
and
xchg
pop
pop
cdq
not
jge
movntq
out
lds
enter
stos
outs
sub
loopne
push
jne
and
sbb
push
adc
mov
test
in
je
stos
rcr
jnp
inc
mov
mov
inc
mov
div
xchg
mov
pop
jo
test
xor
xchg
sar
sbb
adc
pop
mov
jp
fcmovne
enter
mov
test
sbb
(bad)
pop
adc
pushf
test
push
ret
ret
lds
dec
sub
cmp
sub
dec
sbb
aam
mov
mov
cmps
push
cmc
pop
dec
pop
mov
shr
outs
or
es
mov
jno
sbb
ret
xchg
or
mov
daa
je
xchg
adc
adc
test
les
gs
jbe
xor
push
stos
imul
sub
iret
and
popf
inc
call
jle
out
popa
mov
imul
pop
clc
sbb
test
ret
xor
push
pop
clc
std
fs
movs
daa
lock
int3
inc
cwde
jo
xchg
push
mov
int
fld
adc
mov
mov
push
xchg
jmp
xchg
mov
inc
sub
and
push
in
xor
dec
out
jmp
mov
aaa
dec
leave
xor
inc
pop
add
sub
xlat
in
push
daa
inc
push
jns
retf
cli
fwait
std
mov
mov
and
mov
cmps
push
jbe
or
adc
cmc
cmp
add
movq
(bad)
sbb
and
pushf
mov
dec
sub
or
pushf
repz
fcomp
in
repnz
inc
jle
mov
rcr
jae
and
cmc
out
aaa
arpl
ret
inc
clc
push
int3
int3
lea
aaa
call
mov
dec
dec
jle
je
mov
(bad)
(bad)
jae
jmp
mov
fcomp
xchg
int3
xchg
cli
mov
push
or
pop
or
stos
pop
xchg
std
jmp
jl
push
cmp
ins
jne
cmps
data16
lahf
pushf
cmp
aam
aas
lods
nop
xor
sub
jae
xchg
cmp
dec
out
leave
add
or
xor
loop
xor
shl
or
adc
xchg
pushf
rcl
scas
jmp
popf
jnp
movs
pop
xchg
stos
mov
retf
test
xchg
mov
pop
outs
mov
pop
movs
xor
dec
cmps
sub
push
in
shl
jg
cmp
xchg
mov
xchg
ins
jl
out
and
or
push
mov
scas
clc
sahf
ret
mov
pop
iret
pop
push
clc
and
loope
sbb
cmp
pushf
loop
add
jns
fstp
mov
mov
push
pushf
push
adc
in
xor
mov
aaa
mov
mov
cld
pusha
cld
cmp
add
sub
jns
stc
mul
mov
jnp
mov
xor
adc
js
out
sbb
and
je
and
(bad)
or
pop
pop
pop
movs
(bad)
inc
aas
icebp
mov
cwde
enter
mov
pop
les
mov
jge
rcr
iret
pusha
push
scas
daa
daa
pushf
mov
enter
out
push
xor
jno
mov
inc
adc
fs
push
mov
add
loopne
loopne
sti
gs
scas
mov
inc
outs
(bad)
int3
adc
imul
dec
repz
cmp
(bad)
retf
pusha
jnp
repz
push
dec
not
push
adc
mov
repnz
cmp
pop
sub
cld
add
pop
(bad)
mov
mov
retf
mov
and
nop
or
repnz
loopne
clc
mov
cli
adc
pop
pop
dec
mov
push
jg
call
rcr
sub
dec
mov
in
daa
paddusb
jo
jo
pop
xchg
xchg
ret
or
scas
adc
pusha
and
fisub
xchg
and
lods
in
call
gs
ja
ins
mov
adc
xor
pop
xchg
cs
addr16
jmp
xor
dec
leave
iret
retf
mov
jg
scas
xchg
test
ja
push
shl
jl
mov
jecxz
adc
add
mov
mov
jno
add
add
sub
leave
shr
stos
jmp
fidiv
inc
mov
repnz
inc
hlt
cmps
or
xor
mov
pusha
inc
sahf
xchg
leave
ds
not
xor
mov
sub
cld
test
repz
mov
xchg
cmc
jge
jmp
aad
inc
inc
into
mov
sbb
add
clc
or
mov
out
xchg
xor
stc
loopne
int
loop
int3
cmps
adc
xchg
outs
dec
fld
mov
adc
dec
call
sti
int
dec
cli
push
inc
jg
mov
call
adc
(bad)
mov
(bad)
(bad)
push
jmp
mov
jmp
sub
ss
rol
sar
sti
(bad)
bound
shl
(bad)
scas
adc
mov
sub
cli
in
mov
xor
call
test
leave
cmp
xor
dec
push
xchg
test
jp
sub
test
ds
mov
lds
dec
push
cmp
sbb
pop
mov
inc
in
xor
popa
int3
test
sub
gs
cmp
out
rcl
jge
movs
iret
add
mov
jmp
js
jecxz
fadd
ja
mov
scas
dec
fwait
cmps
adc
push
add
(bad)
jne
loopne
xlat
out
leave
jne
aad
out
mov
sbb
icebp
hlt
ss
out
into
mov
jb
sbb
and
imul
inc
dec
movs
xchg
rcl
aam
les
mov
loop
cmp
sub
xchg
xor
(bad)
add
shrd
dec
shl
push
dec
test
push
push
pop
dec
(bad)
adc
jo
data16
nop
or
or
and
sub
pop
push
adc
movs
loopne
dec
out
sub
adc
add
mov
jge
fstp
add
fs
(bad)
mov
retf
cmp
xchg
xor
stc
scas
or
movs
pop
imul
pop
adc
cmp
mov
cmps
int3
dec
outs
jle
out
aaa
cmp
xchg
pop
push
das
and
fs
mov
sub
xchg
call
pop
xlat
sbb
inc
adc
xchg
adc
shl
mov
mov
jns
fwait
push
nop
loope
daa
or
xchg
mov
xchg
mov
push
mov
inc
fimul
inc
sbb
test
jns
push
mov
add
sbb
push
xor
test
sar
add
mov
mov
ins
push
(bad)
hlt
push
sbb
dec
retf
cmp
dec
add
repnz
cld
rol
sbb
push
lods
popa
es
dec
jae
ficomp
je
test
test
jo
jo
mov
add
or
adc
js
mul
lods
in
jno
jg
mov
sbb
jbe
xchg
rcl
and
inc
push
out
aas
dec
ja
adc
pop
dec
outs
cdq
outs
mov
aas
xor
out
ds
ret
dec
leave
mov
push
clc
out
(bad)
aam
inc
xor
test
clc
mov
(bad)
sti
push
leave
cdq
jae
xlat
pop
push
test
lods
rol
inc
imul
hlt
push
mov
outs
adc
imul
je
jle
adc
loop
ret
lock
daa
jmp
xor
gs
(bad)
shl
xchg
jp
jge
int3
imul
cmp
fisub
sub
enter
add
stos
retf
mov
iret
call
in
ret
xchg
jb
add
enter
mov
mov
movntq
lock
xchg
cmp
mov
or
push
retf
scas
mov
aas
xchg
push
adc
adc
adc
stos
or
hlt
push
xor
pop
test
lods
and
and
cmc
stc
push
jno
inc
cmp
xlat
add
xor
inc
push
xlat
addr16
fisubr
mov
scas
lea
and
add
nop
sbb
imul
inc
mov
cmp
mov
and
sahf
mov
sti
push
push
dec
xchg
popf
test
xor
fstp
inc
fs
pusha
or
cmp
test
or
clc
xor
addr16
sub
cmps
mov
fldenv
faddp
add
js
and
push
sub
rol
out
ss
cmp
mov
adc
(bad)
sbb
adc
retf
jns
stc
sbb
aas
mov
push
ds
sbb
dec
iret
pushf
retf
(bad)
adc
mov
scas
inc
or
mov
add
retf
cmp
fdiv
(bad)
ret
fwait
ins
dec
sahf
xlat
or
xchg
dec
ss
adc
inc
out
mov
cld
cmp
enter
jo
js
jno
pop
dec
xchg
sbb
shl
jmp
inc
or
ss
sbb
sub
push
cmp
mov
dec
jl
imul
inc
inc
xchg
inc
cdq
je
mov
icebp
(bad)
mov
jne
dec
xlat
sbb
outs
sbb
movups
pop
stos
in
stos
es
mov
push
inc
jge
retf
push
jmp
inc
push
mov
pop
in
arpl
sar
cli
nop
jl
test
pop
pop
std
fdiv
adc
add
in
and
aad
adc
popf
leave
outs
adc
repnz
xchg
out
pusha
adc
movs
das
popa
xor
retf
cdq
add
cmp
(bad)
mov
inc
div
xchg
mov
adc
fisttp
jle
movs
mov
sahf
mov
loope
call
push
mov
test
mul
test
in
inc
sbb
mov
scas
int
(bad)
push
je
cmp
cs
push
test
mov
js
adc
imul
sbb
jo
mov
dec
(bad)
jae
js
fild
sahf
arpl
inc
stos
mov
jns
ins
sub
mov
fst
out
ds
dec
pusha
out
xor
and
adc
push
in
fild
out
nop
jbe
dec
test
mov
pop
xchg
push
or
sbb
dec
ret
adc
inc
cld
pop
mov
cmc
xchg
lea
inc
push
push
ja
dec
xchg
ror
outs
ror
int
icebp
push
mov
inc
pusha
xchg
xchg
(bad)
imul
rep
test
add
jns
hlt
lods
jmp
dec
mov
cmps
fucomip
pop
vpsllw
bnd
add
mov
gs
pop
inc
jle
dec
xchg
jb
jle
fild
adc
out
jb
inc
daa
xor
mov
jg
rol
xchg
or
cmp
shl
jnp
jno
(bad)
push
add
add
cmc
cmc
mov
dec
jne
(bad)
call
jge
adc
add
and
clc
sbb
jl
sbb
inc
mov
je
stos
jns
mov
adc
pop
jl
add
sub
icebp
pop
es
movs
aaa
adc
and
sahf
scas
and
inc
je
xor
stc
(bad)
mov
cmps
or
repz
pop
push
pop
leave
movs
aad
ins
gs
in
lods
sahf
dec
jl
fild
xlat
test
push
xor
stos
enter
gs
add
cmc
jmp
adc
(bad)
or
push
bound
cmp
mov
mov
inc
fbld
cmp
pop
scas
pop
push
mov
in
shr
cld
jb
shl
nop
add
mov
push
lods
out
lsl
mov
sahf
ds
sti
pop
or
mov
cs
jo
(bad)
in
std
xchg
add
mov
rcr
mov
jmp
adc
cs
fbld
jb
cmp
dec
xchg
jne
sti
push
leave
mov
mov
cmc
push
cld
dec
pushf
retf
clc
imul
enter
cld
jmpw
cwde
mov
xor
xchg
mov
mov
iret
push
iret
or
lods
sbb
xor
cwde
outs
jbe
pop
push
(bad)
hlt
push
rol
leave
retf
cld
mov
mov
sub
ins
pop
hlt
leave
fcomp
loopne
scas
popf
jge
mov
push
pop
xlat
icebp
jbe
outs
(bad)
(bad)
sbb
inc
xchg
mov
pop
outs
jnp
adc
inc
pushf
das
cmp
mov
(bad)
not
sub
pop
icebp
cmps
ins
jp
lods
inc
mov
mov
movs
loope
enter
std
(bad)
mov
mov
mov
repnz
mov
jno
add
push
or
xchg
jle
xchg
inc
cmps
sub
or
ins
and
scas
mov
add
push
mov
xor
int3
nop
jg
dec
clc
mov
push
aam
in
push
sahf
pop
jno
jo
xor
adc
retf
popa
push
inc
pop
popf
retf
pop
or
dec
adc
dec
fs
push
sar
pop
mov
push
cmc
pop
shl
xchg
or
dec
int3
mov
jo
lods
lea
fsubr
mov
neg
cmps
call
in
pop
cwde
iret
jb
lock
sbb
jne
rcr
sbb
retf
out
mov
stc
test
jae
iret
dec
rcl
add
jle
xchg
pop
pop
jae
mov
stos
shrd
fstp
ret
add
pop
or
fsubrp
in
or
jge
add
dec
pop
xchg
push
inc
pushf
and
and
outs
or
dec
arpl
in
fisttp
cmc
fs
xor
xchg
jb
ret
xor
out
(bad)
jnp
(bad)
mov
jecxz
div
dec
les
fistp
jmp
cmp
gs
pop
cmp
icebp
and
retf
sub
aad
adc
rol
mov
sahf
lods
sub
aaa
cmc
in
mov
pop
or
test
xchg
xor
inc
sahf
pop
icebp
and
mov
dec
iret
sub
xor
inc
pop
(bad)
push
pop
mov
mov
mov
test
out
jge
push
cli
mov
out
cmp
add
push
fdiv
dec
fiadd
test
in
xchg
repnz
sar
inc
call
test
cmps
or
sub
xchg
push
cmp
add
dec
pop
mov
sub
jbe
idiv
jl
jp
mov
jno
punpcklbw
retf
adc
dec
je
sahf
push
adc
mov
loop
aam
xor
lock
pop
mov
xchg
clc
sub
movs
mov
dec
jp
data16
aas
xchg
outs
mov
imul
cwde
mov
cmp
fidiv
enter
sar
jl
repz
add
dec
ss
je
sar
mov
ror
mov
or
pop
js
loopne
je
mov
pop
or
test
je
aad
out
add
push
ret
ret
push
stc
je
and
pop
lds
pop
sbb
adc
xchg
movs
mov
push
rcr
sbb
dec
call
leave
adc
sbb
bound
pop
ss
(bad)
sti
fs
dec
scas
call
out
xor
mov
icebp
mov
xor
add
imul
cs
push
imul
clc
ds
(bad)
pop
mov
pop
lahf
mov
xlat
(bad)
imul
adc
aad
rol
cmp
ds
scas
ret
fcmove
clc
cli
sub
pop
fbld
fiadd
aam
or
pushf
mov
dec
out
dec
data16
sub
cmps
stc
jae
mov
lea
mov
or
gs
inc
mov
xchg
dec
xchg
pusha
cwde
loopne
aad
xchg
sbb
dec
into
add
dec
dec
loop
fild
enter
xchg
fwait
push
dec
rcl
adc
out
sbb
xchg
sub
mov
or
xor
pop
(bad)
dec
xchg
and
dec
adc
xchg
push
into
fisubr
and
push
aaa
pop
rcr
mov
jbe
cmp
je
or
fcmovnu
xlat
dec
mov
popf
test
(bad)
and
fwait
sub
xlat
jg
push
stos
je
rol
inc
mov
push
pop
aaa
in
jmp
test
mov
and
pushf
(bad)
inc
aam
adc
or
mov
mov
pop
je
xor
clc
dec
sub
push
std
add
test
retf
mov
or
cmc
mov
dec
xor
jne
add
adc
xchg
xchg
dec
lods
lock
in
imul
scas
shl
movs
aas
add
arpl
test
xor
jne
pop
stos
popa
sub
push
jo
mov
or
pop
dec
mov
mov
fcmovu
and
adc
int
jne
stos
dec
jb
mov
das
retf
rol
or
sbb
imul
jne
inc
push
sub
push
push
dec
cld
mov
into
dec
push
test
xlat
mov
pop
cmp
cmps
nop
pushf
and
test
push
inc
bound
adc
mov
out
jae
inc
rcr
push
inc
out
xchg
cwde
jmp
jl
fdivr
or
jbe
into
pop
fimul
cmps
pop
dec
xchg
(bad)
retf
scas
push
test
repnz
push
sbb
or
mov
in
psrld
test
sub
fst
mov
pusha
cmps
stos
cmps
pop
sub
jle
mov
mov
mov
aam
cmc
scas
pop
call
stos
loop
push
es
ror
pop
jecxz
data16
inc
push
or
les
repz
sbb
jb
sar
cmps
jbe
jmp
test
add
adc
outs
add
test
mov
pop
repnz
das
sub
imul
and
mov
mov
stc
pop
add
mov
xchg
adc
push
loopne
xor
js
sar
lods
mov
inc
xor
xchg
adc
mov
xor
cmp
aam
cmc
or
sub
push
fmul
xchg
push
xor
mov
popa
sbb
int3
lock
jno
stos
push
adc
gs
pop
aaa
jle
jns
push
(bad)
add
inc
cwde
jbe
sbb
xchg
(bad)
sbb
pop
sub
xchg
push
jo
retf
inc
rcr
movs
inc
es
pop
push
mov
xor
pop
cdq
fstp
inc
dec
cdq
sub
mov
jns
jnp
jne
jbe
push
icebp
push
pop
and
jae
jne
xchg
sub
loope
js
ret
and
outs
and
cmp
fmul
lds
push
enter
push
out
repnz
inc
stc
add
xchg
lods
mov
lods
jmp
cmp
repnz
mov
push
add
(bad)
cmc
adc
and
cmc
inc
xchg
ins
icebp
push
pop
sbb
xchg
jb
sub
or
jp
mov
xchg
test
fsubr
scas
xchg
les
ss
retf
or
and
sar
aas
sub
(bad)
test
xchg
mov
iret
xlat
test
jae
dec
cwde
in
and
mov
adc
and
pop
imul
dec
jns
mov
add
(bad)
adc
jb
in
xor
fstp
pop
xor
ret
lahf
test
arpl
jb
xlat
push
mov
sbb
rcr
aam
ins
mov
popf
arpl
jge
ret
fistp
xchg
inc
dec
mov
popa
in
in
adc
add
add
pop
and
adc
push
xor
das
pop
js
dec
retf
stos
mov
imul
loope
pop
aaa
mov
add
out
cmc
movlps
add
daa
push
xlat
inc
dec
movs
cld
jno
(bad)
stos
retf
cwde
mov
sbb
pop
sti
dec
jmp
xor
sbb
outs
pushf
push
and
out
inc
les
and
dec
mov
leave
sbb
in
xchg
gs
loopne
icebp
mov
and
iret
lahf
imul
in
mov
jecxz
(bad)
data16
cmp
cmp
xchg
add
int3
lods
outs
push
sbb
jecxz
test
cdq
cmps
cld
int3
cli
mov
fidivr
test
adc
jae
mov
lds
jg
mov
outs
lock
sub
int3
clc
(bad)
int
jne
or
jp
push
jno
mov
dec
(bad)
lods
in
xchg
imul
pop
clc
mov
test
and
pop
xchg
call
xor
test
pop
call
ds
cmp
pusha
xchg
pop
jg
in
aaa
mov
aas
aam
mov
aam
inc
xchg
sahf
jmp
and
call
inc
test
jno
mov
push
mov
repz
pop
mov
pop
es
lea
outs
dec
in
xor
inc
mov
out
push
cmp
daa
fwait
inc
push
inc
sbb
nop
xor
xor
push
cwde
or
in
pop
xchg
leave
push
and
cmc
add
imul
sbb
stos
nop
call
adc
ja
leave
mov
push
fsubr
sbb
fild
mov
pop
xor
jo
int
daa
cmp
add
sti
mov
cmp
retf
xchg
mov
shl
cmp
pushf
xor
xchg
retf
push
mov
pop
push
cdq
test
fild
jae
mov
data16
frstor
xchg
bound
sahf
fcomp
ds
ret
fwait
add
iret
mov
xchg
ja
xchg
sub
push
adc
xor
loope
lahf
mov
xor
push
mov
inc
pop
or
jne
xor
or
mov
(bad)
and
icebp
mov
js
mov
dec
mov
push
xchg
pushf
cmp
es
shl
sub
ins
jecxz
hlt
mov
sbb
retf
lahf
lds
sub
call
and
jle
sub
sbb
out
fwait
adc
fcomp
inc
fild
or
inc
aas
push
or
pop
sahf
pop
retf
mov
add
inc
mov
pop
mov
add
xchg
xor
fbld
out
in
sbb
fisttp
jle
sbb
mov
int3
xor
mov
sbb
jmp
fisub
jne
xor
out
xor
in
out
cmp
push
ret
neg
shl
sub
fst
stos
mov
xlat
mov
pop
popf
or
mov
sub
push
int3
leave
mov
adc
inc
inc
push
mov
sbb
imul
(bad)
dec
ds
int3
push
mov
push
data16
fwait
add
(bad)
mov
adc
pop
sar
outs
out
out
mov
mov
inc
iret
inc
test
hlt
test
add
jmp
ret
jb
dec
mov
push
or
fsubr
addr16
cmp
adc
sbb
push
pop
out
xchg
in
pushf
mov
(bad)
push
fstp
push
jbe
(bad)
mov
stc
in
mov
or
sub
out
scas
icebp
adc
(bad)
imul
mov
and
clc
jge
loopne
and
or
inc
das
add
cld
fbstp
sbb
and
cld
sbb
cwde
(bad)
pop
mov
jl
cwde
mov
hlt
add
mov
sbb
sar
cmps
dec
fcmovnu
dec
retf
rol
adc
jae
jbe
test
mov
add
fst
sbb
xor
cld
aad
(bad)
rcl
adc
imul
xchg
pusha
xor
das
jg
ret
add
mov
dec
cld
add
mov
mov
scas
call
xor
push
push
mov
inc
add
cdq
ds
retf
dec
out
cs
xchg
mov
sub
ds
push
sub
sbb
cli
or
mov
adc
loopne
or
sti
aad
inc
(bad)
pop
hlt
add
test
pop
inc
jbe
js
in
loopne
cmp
and
mov
enter
mov
sub
in
cmp
aaa
test
ror
mov
bswap
std
fsub
cmps
retf
sbb
fisub
das
xor
popa
pop
in
jg
call
xchg
aas
lock
push
(bad)
mov
push
cmp
sgdtd
inc
or
add
push
repz
(bad)
jb
pop
sub
mov
adc
xchg
pop
push
int3
xor
and
mov
push
out
mov
xchg
adc
ins
pop
int3
cmc
jmp
xchg
xchg
xchg
rol
push
adc
lods
test
xchg
imul
inc
or
mov
push
pop
rep
fisubr
add
test
stos
fld
ficomp
pop
scas
xchg
cwde
pop
sahf
loope
jns
loop
xor
scas
and
(bad)
loope
jle
jbe
fnsave
sub
dec
mov
and
add
pop
adc
dec
mov
ss
adc
mov
ds
sub
push
ret
push
aam
fcmovnu
xor
jmp
hlt
xchg
sbb
adc
arpl
mov
pop
or
mov
xor
mov
inc
test
inc
mov
ret
and
cli
shl
pop
into
push
fist
push
pop
cmp
xlat
scas
scas
out
or
and
dec
lahf
pop
mov
mov
jns
repz
dec
sub
addr16
push
dec
dec
pop
jmp
fdivr
jae
retf
dec
xchg
adc
jmp
mov
sbb
rcr
sbb
das
cmps
jb
or
ret
mov
mov
sub
push
aaa
add
imul
(bad)
xchg
xor
xchg
dec
xchg
jb
mov
or
mov
add
sbb
shr
pop
jmp
(bad)
repz
std
cdq
ins
xor
cld
ins
sbb
(bad)
xchg
(bad)
push
or
inc
mov
ror
out
fbld
ret
outs
adc
shl
xchg
mov
cld
ins
mov
(bad)
mov
daa
int
sub
xchg
mov
mov
call
xor
adc
pop
loop
sub
js
jmp
inc
or
and
retf
jg
add
shl
jmp
xor
ficom
js
mov
mov
mov
imul
clc
cdq
dec
jbe
sahf
dec
jne
(bad)
mov
or
mov
in
mov
call
daa
xlat
mov
adc
push
out
jno
inc
call
test
mov
cmp
ins
pusha
mov
(bad)
sub
jecxz
fisttp
jge
mov
popa
stos
movs
out
sub
rol
pushf
cwde
fmul
repnz
dec
mov
push
sub
cmp
iret
arpl
(bad)
pop
(bad)
lahf
mov
popf
pop
xor
out
loop
or
fcomp
shr
dec
in
and
jo
fcomi
mov
imul
mov
push
dec
test
xor
ins
mov
cmp
pop
retf
repz
pop
mov
lods
pop
inc
rol
mov
imul
mov
ret
push
sbb
mov
pusha
xchg
mov
fsub
rcr
or
jnp
inc
popa
jecxz
lods
(bad)
xor
jne
mov
mov
cmp
mov
in
add
shl
dec
jmp
xchg
xchg
pop
push
aas
mov
adc
(bad)
stc
xchg
call
cmp
sbb
sbb
or
ja
pop
jne
inc
jg
xlat
je
lods
cmp
xchg
xchg
(bad)
fsubr
push
mov
in
fidivr
mov
(bad)
fcom
stos
dec
and
sahf
das
out
push
add
mov
fs
shl
xchg
pushf
and
shl
adc
std
fnstcw
adc
rcr
cmp
(bad)
iret
xchg
inc
or
int
add
lahf
jle
out
test
mov
xchg
shl
and
iret
neg
or
ins
and
add
dec
xor
loope
push
daa
xchg
xlat
or
pop
dec
in
js
xor
mov
xor
in
pop
icebp
push
jle
nop
mov
and
and
enter
out
movs
add
int3
add
sub
sbb
push
idiv
add
je
lock
xor
scas
cmp
cmp
sbb
test
hlt
scas
push
out
add
mov
xor
loopne
in
daa
(bad)
mov
add
xchg
or
fidiv
scas
dec
or
out
in
or
or
jecxz
rcl
push
pusha
mov
push
pop
fist
bound
retf
fwait
or
push
add
xor
jecxz
mov
fisttp
clc
stos
mov
(bad)
jmp
call
(bad)
js
loopne
cmp
inc
mov
mov
xor
dec
pop
or
iret
xor
mov
dec
ret
sbb
xor
fadd
(bad)
out
fcom
mov
inc
test
in
pusha
push
sbb
pop
xchg
mov
cmc
stos
dec
push
dec
jmp
jns
cli
sub
(bad)
and
xchg
xchg
sbb
call
add
sub
jo
sbb
frstor
jp
lock
or
jo
cmc
rol
adc
lock
xor
pop
jmp
ss
pop
xchg
shr
and
scas
outs
add
xchg
push
mov
or
and
mov
aad
pop
xor
leave
stc
in
xor
xlat
loop
sbb
lods
adc
out
shl
addr16
mov
jbe
pushf
outs
sbb
je
int
popf
setne
shl
mov
jne
pop
add
mov
mov
mov
rol
in
hlt
sbb
sub
jmp
push
cmp
loop
cmc
add
xor
fild
out
stos
push
xor
jmp
pop
add
outs
ret
mov
fistp
scas
(bad)
xchg
pop
bound
push
pop
(bad)
ja
and
aas
aas
test
mov
xlat
icebp
mov
ret
xchg
(bad)
movs
inc
adc
mov
mov
daa
(bad)
fbstp
loop
push
inc
jne
xchg
push
and
das
retf
and
cmp
ins
jb
loopne
push
and
stc
push
test
jbe
and
daa
imul
add
frstor
imul
pop
adc
mov
mov
lock
sbb
in
in
push
pop
xor
sub
ret
mov
nop
mov
jnp
cmp
mov
mov
fisttp
hlt
into
fidivr
pushf
mov
or
add
pop
test
dec
sub
fnsave
inc
xor
outs
loop
clc
add
aaa
or
xchg
dec
pop
xchg
lea
and
cld
mov
out
jle
(bad)
shl
sbb
std
fnsave
jns
or
fimul
sahf
sub
test
ret
sar
arpl
dec
rcr
add
test
and
pop
repnz
mov
cwde
push
sub
je
ficom
push
inc
js
add
lahf
ins
js
pop
jge
repz
inc
leave
mov
push
add
sub
sbb
(bad)
push
jno
mov
mov
mov
pop
and
fsub
inc
out
ss
mov
push
jb
mov
pop
fdivr
inc
int
mov
dec
add
(bad)
adc
out
sbb
std
nop
nop
mov
fnstcw
mov
aas
pop
stos
adc
cmp
fldcw
mov
pusha
fld
add
ret
aas
pop
ins
inc
ds
jmp
clc
adc
mov
je
mov
add
mov
scas
mov
dec
xor
or
inc
pop
adc
call
adc
lock
mov
sbb
mov
psubsw
mov
popa
xor
push
add
xor
dec
test
xor
cs
fadd
xchg
ret
inc
or
(bad)
ins
test
inc
pushf
xor
adc
push
imul
mov
ror
sbb
(bad)
jnp
scas
out
repnz
mov
push
or
adc
adc
mov
or
mov
shl
pop
stos
add
lds
xchg
into
mov
es
push
fadd
lods
and
ja
inc
dec
push
dec
out
movs
jg
sahf
mov
enter
out
xor
inc
sbb
movs
or
movs
jns
mov
adc
sti
sar
or
aaa
inc
push
mov
xor
inc
mov
mov
sub
xchg
or
cli
aad
cmp
aaa
xchg
in
lods
jmp
sbb
outs
dec
xor
inc
stos
dec
push
shl
jmp
repz
xchg
cpuid
imul
pop
xor
lds
add
adc
and
dec
pop
rcl
fsubr
ss
(bad)
sub
mov
sub
jg
getsec
cmp
and
hlt
outs
mov
add
lea
push
mov
es
(bad)
and
xchg
xchg
stos
mov
pop
and
xchg
retf
xchg
jecxz
sub
fldln2
cmp
jg
cmc
stc
mov
mov
mov
dec
or
and
iret
pop
and
push
movs
es
sbb
push
push
cmp
and
mov
test
jp
mov
enter
cli
push
pop
leave
or
data16
stc
stc
cld
mov
inc
push
inc
loop
fwait
outs
test
into
enter
lods
btr
inc
clc
pop
les
and
jno
mov
dec
out
dec
std
inc
add
dec
push
mov
cmp
test
lock
jg
xchg
and
jl
sub
js
fucom
(bad)
fdivrp
imul
inc
cs
xchg
clc
sbb
ja
aaa
adc
ins
jecxz
xchg
and
cmp
cmp
jecxz
movs
fistp
jns
dec
sub
inc
shl
xchg
adc
mov
fadd
ins
cmc
sub
and
retf
or
jb
xlat
imul
sub
inc
jg
pusha
sbb
pop
dec
cmps
ins
aam
jae
inc
outs
dec
scas
(bad)
add
push
ins
int3
push
test
popf
add
add
xchg
push
out
jmp
mov
cmp
mov
sbb
pusha
add
dec
inc
mov
sar
xor
not
iret
dec
xchg
sbb
mov
dec
xchg
icebp
sub
sub
fld
pushf
ds
sbb
sbb
cmp
sub
stos
dec
jge
aad
jecxz
xchg
scas
fiadd
mov
stos
data16
or
and
push
jno
sbb
inc
jns
or
push
push
mov
mov
dec
cmp
out
es
dec
data16
(bad)
out
cwde
mov
fcom
aas
ficomp
retf
inc
add
movs
cmp
pop
push
jl
(bad)
dec
add
jbe
adc
gs
movs
and
or
mov
movs
test
jecxz
mov
or
sbb
cmp
ror
dec
cmp
cld
jno
ss
scas
mov
cmp
cmps
mov
or
jg
push
rol
ds
mov
int
mov
sub
mov
mov
(bad)
(bad)
jo
call
xchg
jmp
mov
imul
daa
ret
movs
or
(bad)
jecxz
iret
aaa
pop
cmp
jmp
push
push
add
test
cmp
and
pushf
jnp
imul
rol
into
sub
fadd
scas
jb
jns
fcmove
sbb
(bad)
rol
push
jnp
push
sbb
mov
std
sti
sub
mov
dec
popa
push
mov
pusha
push
adc
shr
mov
sbb
push
mov
shr
push
add
ss
sub
xor
sub
bound
sbb
cmp
adc
sub
pop
xchg
inc
loopne
pop
ins
jg
pop
push
ror
out
mov
add
mov
jp
test
adc
add
mov
in
stos
inc
jnp
push
mov
or
adc
mov
rol
xor
sbb
push
out
push
dec
mov
shl
(bad)
call
lea
pop
repz
fsubr
imul
add
shl
mov
inc
cmp
and
sti
cmps
mov
and
push
gs
mov
cmps
jo
lods
shl
jmp
and
test
mov
movs
pushf
jle
jle
pushf
and
sqrtps
lods
or
or
outs
scas
aam
jbe
inc
jae
sub
push
jbe
lea
or
rcl
rol
ret
out
test
inc
push
xchg
call
push
(bad)
shl
xor
xor
pop
cmc
push
push
bound
dec
sub
aas
ins
mov
dec
(bad)
jp
or
icebp
jecxz
adc
into
lods
xor
xchg
test
sets
pop
mov
push
cmp
pop
repnz
mov
adc
jmp
ds
sub
leave
sub
dec
retf
fwait
dec
xchg
js
sub
test
push
pop
xor
mov
xchg
adc
cmp
das
adc
sbb
mov
sar
mov
fbstp
mov
inc
xchg
push
or
lea
add
dec
dec
and
adc
jbe
cmps
out
pop
cmp
mov
shr
jg
pop
out
outs
stos
dec
std
loopne
aaa
leave
cmp
and
imul
sbb
and
ins
add
pop
mov
mov
ds
mov
shr
and
(bad)
or
cmp
xchg
test
dec
in
pop
jge
add
ret
pop
sub
mov
add
jp
pop
clc
int
or
jnp
jp
fbld
rcr
dec
bound
aaa
xor
mov
repnz
cli
call
cmps
sahf
call
and
int3
call
xor
fcmovnb
jns
ror
xor
pop
rcr
mov
das
dec
rcr
and
xor
mov
push
aas
mov
jb
cmp
cld
push
mov
aaa
pushf
outs
sub
test
cmp
mov
xor
add
js
sbb
mov
dec
xchg
gs
dec
pop
mov
adc
stos
push
lock
retf
lods
(bad)
into
xor
out
out
xor
nop
aad
repz
cmp
xchg
int
int3
cmp
outs
cld
mov
fdivp
add
dec
ins
fs
push
dec
jo
add
ret
shr
jnp
aam
rol
dec
int
mov
inc
mov
mov
mov
jp
and
sbb
mov
pop
push
fisubr
fwait
lods
jle
adc
gs
scas
dec
and
stos
int
outs
ins
test
jg
int3
add
push
rol
xor
dec
dec
fadd
cwde
push
les
or
add
xlat
shl
pop
pop
(bad)
mov
inc
jle
lahf
mov
pop
sub
mov
(bad)
cmp
in
pop
xor
ficom
pop
and
push
xor
and
lea
xor
mov
pop
fsubr
inc
aas
std
or
inc
jmp
xlat
inc
or
jmp
pop
jmp
int
imul
ret
pop
lea
mov
jmp
adc
ja
outs
mov
add
jne
xchg
push
add
repnz
out
out
cdq
and
inc
xchg
out
mov
neg
cmp
hlt
lods
mov
cmp
push
jl
jb
and
mov
int3
aas
mov
ins
test
cmp
rol
sub
xchg
sbb
mov
test
scas
retf
inc
ret
inc
xchg
test
pop
repz
mov
test
sbb
jle
int3
adc
das
nop
ins
jbe
(bad)
mov
inc
out
jae
data16
dec
jmp
stos
outs
in
dec
or
mov
cld
ds
cmp
inc
pop
(bad)
and
ret
mov
mov
sbb
rcl
jg
pusha
mov
xlat
push
push
push
test
dec
(bad)
adc
and
data16
lods
aad
mov
call
sahf
or
jp
push
pusha
add
imul
inc
es
aaa
or
and
push
push
jne
or
cdq
out
adc
mov
out
rol
(bad)
cmps
mov
xchg
mov
daa
sub
shl
inc
push
(bad)
daa
int3
xchg
shr
mul
dec
pusha
mov
cmp
xor
test
jp
push
and
mov
mov
add
mov
cmp
mov
fwait
mov
mov
aad
aam
jns
pop
mov
sbb
sub
daa
shl
inc
sar
pop
pop
push
mov
inc
cmp
mov
fstp
mov
out
and
nop
jne
pop
sbb
sahf
xchg
pop
xor
push
push
sahf
or
sbb
lock
mov
mov
rol
push
xor
retf
ror
inc
push
mov
(bad)
enter
cmp
sbb
adc
push
push
and
sti
pop
inc
xchg
jb
cmp
cmp
dec
push
push
xchg
fild
sbb
jb
or
stc
loop
inc
dec
popa
inc
lahf
inc
cmp
test
fild
mov
fs
es
add
stos
inc
or
push
arpl
bound
inc
inc
stos
dec
xchg
repnz
pop
push
dec
mov
jg
jle
xchg
aam
ficom
mov
adc
ds
cmp
dec
fstp
mov
xchg
cmp
mov
push
or
test
push
inc
mov
jmp
sbb
cdq
xlat
outs
push
dec
dec
or
mul
lds
and
mov
mov
or
in
inc
push
ja
movs
dec
adc
mov
inc
pushf
xor
daa
push
push
cmp
push
hlt
enter
dec
rcl
mov
int3
fbld
dec
idiv
and
cmps
test
cli
push
jp
xchg
sub
stc
les
adc
cmps
stc
mov
adc
data16
cmps
loopne
xor
jnp
jo
or
push
call
outs
out
push
leave
pop
xor
cmp
jmp
push
cmp
hlt
sub
jl
aas
and
data16
sahf
inc
push
inc
lahf
or
pop
cmp
push
jae
call
repz
das
stos
mov
mov
addr16
push
and
jns
sbb
das
cmp
arpl
jg
mov
and
jg
pop
mov
ror
ja
xor
iret
push
movs
push
repz
ds
mov
mov
retf
or
mov
mov
in
pushf
ja
es
inc
pop
jp
and
mov
js
and
retf
and
cmps
bound
lea
mov
mov
int
xor
push
pop
push
lods
pop
inc
sub
fbstp
ja
push
iret
sub
fdivr
dec
in
inc
retf
jle
data16
int
dec
mov
retf
mov
shl
xchg
push
ficomp
shl
(bad)
pusha
mov
loop
hlt
cwde
xchg
enter
dec
xor
xchg
sub
movs
xor
daa
xlat
les
inc
xchg
jne
iret
jmp
adc
cmp
or
cmp
pop
shr
es
mov
xchg
xchg
pop
les
lock
ret
mov
push
lods
mov
cld
mov
push
xor
mov
cwde
imul
fstp
inc
cmp
imul
movlps
cmp
cmp
sbb
jnp
pusha
ins
mov
xor
int
aaa
xor
ss
shl
mov
push
sub
rol
dec
adc
ds
fld
aas
ins
xor
push
in
xchg
(bad)
cld
pop
(bad)
sbb
scas
fidiv
adc
test
or
add
in
mov
gs
mov
pop
ret
pop
inc
mov
out
add
add
enter
pop
dec
xchg
pop
in
stos
mov
cmp
mov
retf
dec
inc
push
xor
aaa
xlat
push
push
push
inc
stos
fldenv
fsubr
loopne
lods
retf
shl
(bad)
cmc
dec
test
and
or
xchg
(bad)
ins
mov
sahf
jmp
or
dec
adc
and
retf
(bad)
(bad)
rcr
pop
fistp
or
iret
mov
repz
xor
adc
cmp
retf
loopne
leave
das
syscall
cmp
cmp
sbb
mov
inc
dec
fisttp
pop
xor
or
mov
fmulp
movs
(bad)
mov
or
dec
shl
jg
xchg
adc
aaa
dec
or
mov
jge
repz
fst
push
jmp
test
ret
fdiv
shr
out
mov
cli
jb
shl
jbe
test
add
fdivr
out
test
sub
add
pop
or
(bad)
fild
clc
ret
pop
fstp
lahf
mov
jl
mov
push
add
neg
adc
cmp
xor
pop
shl
lea
jecxz
pushf
das
add
lahf
jbe
cmp
aaa
loope
jae
ss
or
mov
xchg
iret
xlat
mov
test
arpl
cmp
out
jns
mov
pop
out
sub
xor
xchg
jbe
imul
pop
or
adc
push
outs
adc
ret
push
rcl
movs
adc
mov
shr
sub
mov
push
mov
or
dec
sbb
and
pop
push
neg
lea
dec
(bad)
fxch
les
int3
xor
mov
retf
cs
mov
bound
push
push
inc
mov
xchg
xor
mov
ret
retf
adc
pop
nop
iret
adc
repnz
stos
(bad)
es
mov
(bad)
cmps
xchg
mov
fidiv
jmp
dec
sub
into
test
outs
inc
push
(bad)
cmp
imul
xor
and
jo
inc
push
(bad)
mov
adc
fcmovnu
dec
mov
inc
movs
test
dec
call
test
call
repnz
(bad)
out
mov
mov
or
sub
jmp
ret
cs
xor
rol
xor
sti
jl
lods
stos
ins
pop
and
jb
cmps
xor
xlat
mov
mov
mov
popf
xchg
sub
mov
adc
movs
or
in
pop
std
push
add
pop
sub
sbb
or
das
sbb
repz
lahf
pushf
into
or
xor
dec
mov
dec
sub
push
mov
out
add
inc
push
mov
xor
mov
in
add
pop
pop
cmp
aam
inc
jg
cdq
xor
xchg
jl
sahf
fmul
adc
in
pop
or
mov
ds
sbb
sub
mov
jl
test
scas
aad
ror
popa
adc
imul
imul
call
jg
popa
ins
cmps
iret
cmps
push
lods
jecxz
pop
(bad)
fild
int
rcr
add
inc
cwde
add
sbb
mov
mov
inc
shl
lock
mov
jae
hlt
mov
push
jge
rcr
in
inc
sbb
xor
ret
mov
icebp
cmp
lea
call
scas
push
cmp
mov
and
movs
ins
ja
int3
ficom
js
pusha
cld
mov
sbb
push
in
sbb
sbb
jns
std
das
xor
push
sbb
push
es
cmc
loope
sbb
popf
mov
(bad)
popf
lods
imul
popa
pop
push
sbb
scas
lds
loop
ss
outs
out
aam
mov
aad
dec
sbb
inc
out
add
ins
pop
rcr
mov
shl
int3
shl
pop
jp
dec
out
fiadd
and
mov
in
and
jb
les
movs
add
mov
xor
cmp
cmp
shl
call
adc
neg
and
fcmovne
pushf
cmps
aad
xlat
loope
inc
sar
xor
xchg
push
lea
loope
mov
dec
add
xor
icebp
pop
in
mov
lds
push
jp
sub
das
lahf
or
addr16
sbb
xchg
pop
nop
sbb
adc
xchg
inc
mov
add
cmp
movs
rcl
fild
pop
mov
push
inc
retf
push
outs
inc
lea
gs
push
dec
add
leave
dec
add
add
unpckhps
rcr
sbb
out
cdq
mov
out
jne
aad
neg
push
push
mov
lea
sbb
stos
cmp
inc
and
in
dec
push
sub
shl
sbb
pop
xchg
or
(bad)
pop
addr16
icebp
pop
ret
ins
pop
add
imul
shr
gs
xor
xor
mov
outs
addr16
xchg
push
push
dec
add
into
das
mov
jp
fldcw
je
into
pop
int
shl
in
ss
sub
sub
outs
jmp
loope
sahf
loopne
addr16
push
adc
cmc
sti
mov
shl
push
mov
gs
jg
outs
mov
mov
arpl
sub
xchg
test
stc
mov
and
bound
push
pop
xlat
imul
std
popa
cmp
dec
xor
pop
leave
jno
jmp
mov
inc
jmp
inc
aas
mov
rol
dec
cmp
imul
fldenv
jo
ret
xchg
mov
xchg
call
inc
(bad)
sbb
test
mov
and
mov
mov
ss
dec
mov
stos
cmps
(bad)
sub
pop
inc
into
inc
dec
daa
jmp
repnz
lahf
shl
or
nop
fist
enter
sub
in
or
inc
outs
sahf
push
or
clc
add
cmp
cld
hlt
fwait
sbb
scas
lahf
xchg
aaa
mov
ja
ds
fstp
sub
dec
in
xor
adc
mov
scas
mov
lock
mov
rol
loopne
aad
sbb
(bad)
jo
cmp
cld
sbb
pop
mov
mov
dec
inc
sbb
movs
dec
out
mov
sub
pop
loopne
pushf
mov
(bad)
xor
push
inc
mov
push
or
retf
and
mov
xchg
push
fwait
push
call
scas
jge
popf
inc
and
lods
mov
rcl
movs
rcr
imul
sahf
out
sbb
or
mov
es
cld
push
hlt
ror
push
push
nop
pop
ss
push
mov
movs
xchg
in
jp
into
push
fisttp
cs
lahf
repnz
je
xor
xchg
pusha
inc
mov
cmps
jg
test
movs
fisub
dec
xchg
movs
out
mov
or
stos
jae
pop
rcl
ss
jne
lds
cmp
out
repz
add
sub
push
(bad)
cmp
inc
std
xlat
sbb
sub
mov
ror
jle
sub
mov
inc
lds
(bad)
loope
hlt
lods
cli
lods
sub
into
dec
xor
push
adc
push
or
mov
xor
js
jnp
je
ficomp
je
shl
ret
xchg
sub
or
pop
test
ss
test
pushf
push
inc
movs
jl
mov
push
push
add
inc
adc
or
push
add
gs
popa
add
cmovp
lea
lahf
pop
jge
pop
cwde
mov
xor
test
pop
out
pop
push
inc
cli
cld
lds
(bad)
arpl
mov
stc
inc
mov
jl
sbb
inc
(bad)
push
cs
ret
aam
movs
mov
(bad)
or
fbstp
in
pop
inc
and
nop
test
pop
mov
retf
pop
cmps
push
test
sahf
xor
xchg
stc
stos
add
xor
mov
adc
add
jbe
mov
mov
push
or
xor
sub
and
jbe
test
int3
test
jp
rcr
or
mov
(bad)
sub
jle
mov
loop
int
fwait
sbb
push
xchg
js
pop
icebp
push
add
(bad)
or
sahf
in
dec
mov
pop
in
dec
mov
mul
inc
aam
fdiv
mov
fistp
xchg
and
mov
outs
sahf
bound
sahf
mov
jmp
mov
mov
mov
jno
mov
sbb
in
xchg
popf
(bad)
pop
adc
mov
ins
dec
jge
xchg
out
(bad)
cli
mov
enter
mov
inc
dec
xchg
sbb
push
mov
popa
fsub
enter
push
int3
jg
mov
lods
arpl
pop
aad
jecxz
or
push
lea
lock
scas
hlt
outs
mov
add
movs
in
cdq
jno
lds
test
push
retf
push
dec
mov
int
(bad)
movs
mov
xchg
jb
pop
xchg
push
mov
in
into
pop
loopne
sar
hlt
push
cmp
test
ss
cld
jmp
into
and
mov
mov
call
cdq
xor
into
or
ds
ss
bound
sbb
fsubrp
sub
das
inc
inc
jle
loop
push
mov
pop
xchg
arpl
xor
es
xlat
(bad)
jmp
add
int3
dec
inc
pop
pop
not
cmp
add
xlat
ficom
mov
ja
fld
movs
test
and
and
xchg
dec
lods
dec
ja
fwait
dec
imul
outs
mov
iret
lock
sub
xor
jmp
mov
jnp
mov
jns
inc
daa
and
pop
pop
stos
push
or
dec
inc
jg
dec
adc
dec
push
fisub
cs
or
and
hlt
mov
stos
clc
and
int3
cmp
push
in
movs
sub
inc
fidivr
cmp
js
jnp
ffreep
mov
add
inc
jne
mov
sub
retf
sub
stc
or
cmps
jno
xchg
sbb
push
loopne
les
stos
enter
fist
mov
adc
arpl
xchg
icebp
xor
movs
outs
mov
dec
aad
inc
das
xchg
push
pop
pop
xchg
jne
movs
cmp
sbb
cmp
sub
xchg
cmp
popa
cmps
xlat
dec
mov
xor
cmp
imul
ins
scas
outs
mov
sub
jle
push
mov
data16
movs
js
or
mov
out
dec
push
mov
pop
jo
adc
dec
clc
mov
cmp
jno
(bad)
cmp
stos
cmp
inc
mov
sub
jmp
fidiv
jmp
and
ret
dec
test
inc
fidiv
sub
cmp
(bad)
sub
repz
mov
add
lahf
stos
popf
add
jae
bswap
std
(bad)
shl
pop
lock
int
pop
xchg
into
popa
data16
xor
pop
movs
xchg
dec
inc
xor
and
aas
xor
fld
rcl
imul
jns
push
push
pushf
ja
jp
mov
movs
daa
imul
scas
(bad)
dec
adc
jmp
int
sahf
xor
xor
sbb
jp
xchg
pop
test
adc
pop
pushf
dec
gs
and
dec
hlt
movs
mov
sub
mov
xchg
inc
or
inc
mov
pop
cdq
imul
sbb
pushf
std
stc
(bad)
xlat
cmp
or
pushf
jmp
ins
loopne
lahf
leave
ja
fidiv
pop
fdivp
lods
pop
fiadd
in
popf
cmc
loope
xchg
sbb
lea
add
sbb
adc
int3
iret
fld
cpuid
xchg
dec
rol
test
in
cs
mov
retf
add
xchg
add
jb
add
ins
jmp
pop
and
mov
mov
(bad)
push
mov
and
mov
pop
xchg
jo
xor
sbb
add
cmc
stos
dec
outs
cmp
aas
pop
daa
sti
xchg
xor
and
sbb
pop
into
adc
popf
aam
jmp
shl
jecxz
into
js
mov
movs
jno
mov
inc
clc
loopne
xchg
cdq
jae
inc
loop
lds
(bad)
push
cmp
out
in
js
sahf
pop
pop
cmp
push
cmp
dec
pop
cmp
pop
js
xor
jb
fistp
fisubr
das
cmovl
cmc
loope
lods
xchg
xor
imul
(bad)
and
movs
dec
lahf
pushf
jp
adc
test
mov
clc
outs
jp
adc
(bad)
rcr
cs
or
(bad)
xor
mov
pop
(bad)
ror
dec
mov
xor
aam
loope
sbb
mov
pop
push
imul
out
pop
push
push
call
xchg
pop
mov
mov
push
lahf
mov
adc
jl
fidivr
cdq
push
or
cmp
or
sub
idiv
loope
cs
pusha
xor
test
loope
ja
mov
pusha
push
std
pop
mov
inc
cdq
pop
and
jb
(bad)
xchg
xor
pop
(bad)
and
stos
sbb
inc
jnp
cli
and
inc
jge
sbb
adc
dec
add
aad
loopne
push
popf
neg
mov
neg
push
xchg
inc
ror
add
cli
xor
pop
cmp
mov
pop
sbb
dec
or
add
jae
rcl
mov
aad
fwait
push
pop
int3
outs
pop
adc
cwde
cmp
fwait
mov
stos
mov
jmp
hlt
xchg
ds
scas
add
loopne
push
add
icebp
aad
imul
dec
inc
jp
push
pop
movs
and
pop
sub
(bad)
loop
sbb
mov
jo
js
dec
push
add
gs
cmps
repnz
push
fs
ins
(bad)
in
pop
in
xchg
scas
pop
into
fidivr
sbb
push
out
sbb
ja
jecxz
and
int
pop
mov
xor
sbb
sbb
jp
das
bound
cmp
sahf
push
add
adc
stos
test
mul
movs
jnp
sar
inc
xor
cs
jmp
sar
movs
and
nop
jle
test
sbb
sahf
leave
mov
fcmovnbe
sbb
jne
xchg
idiv
and
bound
jbe
repz
adc
add
(bad)
cld
inc
fisttp
or
pop
pop
mov
pop
mov
jg
dec
or
dec
push
xor
cdq
iret
bound
dec
push
and
pop
pop
sar
call
ss
cld
fstp
mov
add
aas
sub
and
and
push
sbb
in
adc
int
test
push
cmp
maskmovq
and
test
dec
dec
aad
xor
push
xor
ret
push
jp
(bad)
adc
adc
lock
imul
daa
add
fisttp
sbb
dec
inc
sahf
ss
xor
and
pop
rol
adc
cdq
mov
scas
out
push
popf
popf
pop
push
jmp
fmul
into
mov
daa
movs
ins
mov
pop
leave
shr
sbb
imul
inc
jg
inc
pop
fwait
iret
test
push
addr16
nop
cwde
adc
movs
sbb
shl
lock
rcr
dec
in
push
xchg
sbb
paddd
sbb
sub
mov
sub
idiv
push
mov
stos
push
and
rcl
shl
fwait
cmp
adc
and
mov
jle
jg
(bad)
or
sti
add
pop
addr16
and
xchg
mov
movs
les
rcr
jo
lock
adc
rcr
aam
push
mov
fs
and
dec
dec
mov
popa
sbb
sahf
jmp
js
cmp
cmc
int3
jae
cs
sti
and
jmp
add
push
and
pop
jns
pop
arpl
stc
test
icebp
xor
sub
mov
mov
sub
daa
mov
jecxz
jecxz
sub
stos
inc
sbb
fisttp
pusha
mov
inc
pop
xchg
pop
lock
shl
inc
pop
cmps
jmp
sar
add
pop
adc
sbb
pop
sub
icebp
pop
inc
test
push
mov
sahf
shl
and
ja
ror
and
sar
push
add
dec
jns
ja
sub
jo
and
out
aas
aaa
push
pop
ins
stos
cmp
sbb
push
enter
ins
inc
outs
sbb
xchg
cdq
and
fsubrp
ficom
mov
repz
(bad)
fidiv
ret
or
aam
mov
in
mov
and
sahf
sti
mov
mov
mov
xor
sbb
test
mov
inc
dec
(bad)
sbb
and
dec
jg
mov
sub
loopne
cmc
jno
fdiv
rol
aas
adc
pop
outs
retf
push
xchg
sub
jne
adc
mov
nop
or
adc
xchg
ds
popf
inc
push
dec
aam
and
ins
fsub
icebp
lods
mov
xor
jo
pop
add
test
sahf
mov
clc
inc
cmova
lds
push
hlt
lods
inc
sub
lahf
push
nop
sub
dec
push
rol
hlt
retf
push
add
push
mov
and
scas
ins
int3
ficom
and
pop
test
mov
rep
fsubr
or
push
cmp
shl
sbb
jle
pushf
inc
clc
dec
mov
push
push
stos
rcr
addr16
add
mov
fnstenv
call
mov
or
jns
sbb
dec
cs
xor
and
mov
movs
cs
jae
bound
repnz
outs
aad
adc
inc
arpl
test
xor
movd
sbb
adc
es
sbb
dec
dec
imul
pop
add
in
(bad)
push
and
push
mov
and
xchg
in
jp
jle
dec
adc
lock
dec
push
data16
cmc
mov
test
jge
adc
gs
stos
call
sahf
adc
or
movs
xchg
daa
xor
popa
loopne
scas
pop
clc
xor
mov
imul
ss
into
out
into
(bad)
mov
ffreep
movs
pop
mov
pusha
xor
in
mov
lea
je
adc
jo
clc
push
push
sub
xor
xor
adc
(bad)
mov
sar
sub
inc
aam
cmps
test
seto
and
add
pop
loop
sbb
xor
sbb
xchg
jns
ds
pop
das
xchg
das
inc
xor
sbb
sbb
sub
pop
and
jecxz
cmps
jp
cmp
int3
add
xchg
jne
push
add
lds
in
mov
dec
jl
dec
les
sub
push
loopne
cmp
clc
dec
sbb
loope
jmp
or
lods
icebp
pop
rol
arpl
inc
repz
mov
cmp
mov
cmp
ror
mov
ds
leave
xor
xor
or
and
lods
sbb
xchg
mov
jg
into
xlat
fistp
movs
sbb
sbb
stc
stos
sub
cmps
push
mov
pop
cld
ins
push
(bad)
imul
test
dec
or
add
xor
loop
and
jle
mov
xor
push
pop
fiadd
push
out
enter
dec
out
jb
sahf
pushf
mov
jg
mov
cwde
stc
in
push
icebp
icebp
jp
jl
inc
dec
dec
and
bnd
pop
push
icebp
in
add
add
bound
rcl
dec
imul
repnz
mov
push
sti
cmp
sbb
push
out
arpl
dec
jmp
dec
xor
mov
xor
or
fucomi
test
pop
pop
and
clts
imul
aam
and
or
loope
fdivr
xchg
or
shl
cmp
push
fisttp
mov
jecxz
dec
xor
ss
rcr
dec
hlt
jg
ror
mov
cmp
adc
add
lods
jae
mov
mov
scas
inc
imul
push
imul
adc
mov
cld
(bad)
call
(bad)
add
cli
sub
xchg
out
ret
lahf
fadd
jl
lods
(bad)
in
sub
mov
hlt
in
dec
in
or
push
in
inc
sbb
idiv
cmps
in
push
aad
sbb
cmp
mov
fcom
mov
mov
xchg
or
push
push
sbb
loopne
inc
pop
xchg
pop
sbb
jne
dec
cmps
leave
inc
push
mov
jno
int
push
mov
lock
(bad)
cmc
xchg
bound
movs
pop
dec
sub
xchg
jnp
dec
repnz
test
xchg
inc
nop
int
js
loopne
ss
aam
inc
in
push
fcom
pop
or
jb
xchg
imul
mov
shl
stos
jle
je
inc
xor
gs
pop
fldenv
pushf
shr
iret
repnz
ss
jp
jge
mov
pop
xchg
jmp
xor
ins
xchg
in
or
psrld
push
adc
aam
mov
sbb
sub
jle
daa
push
(bad)
jmp
mov
pop
in
adc
adc
in
mov
dec
push
jg
lea
mov
pop
adc
shl
adc
jmp
call
jg
jmp
pop
out
jbe
xchg
xchg
jbe
jmp
pop
enter
test
mov
in
(bad)
in
mov
rcr
mov
jp
jmp
mov
xchg
stos
sahf
fiadd
xor
fiadd
ret
cli
retf
adc
iret
fmul
push
xchg
or
stos
pop
cdq
sbb
bound
loope
add
lds
and
pop
cli
test
inc
or
ss
xor
and
(bad)
mov
js
ins
push
jmp
sbb
outs
ins
aas
xchg
add
jl
loope
inc
jmp
or
mov
mov
sub
dec
sub
dec
daa
sti
cmp
sbb
shl
add
jae
pusha
sub
lea
pusha
pop
and
ret
(bad)
mov
imul
(bad)
mov
dec
ins
sbb
mov
in
push
xchg
pop
dec
adc
int3
dec
jno
ret
inc
xchg
pop
jb
lds
leave
inc
dec
and
sbb
outs
sub
stos
or
stos
lahf
arpl
fnstenv
cli
cmps
or
es
mov
push
xor
leave
push
inc
mov
mov
and
add
push
or
les
or
fidiv
push
je
xchg
push
call
mov
loop
dec
pop
dec
sub
adc
sahf
(bad)
jb
push
idiv
lods
lea
xlat
xchg
inc
shl
scas
mov
scas
and
nop
ror
jnp
or
mov
loop
das
pop
(bad)
clc
sub
and
sbb
lahf
mov
out
cli
stc
jo
fld
mov
lods
fwait
sub
cdq
xchg
xlat
enter
adc
cmps
cmp
out
int3
cmovnp
cmp
dec
pop
out
stos
enter
fcom
inc
inc
mov
push
retf
loope
inc
cmp
lahf
jl
mov
cmp
cmps
sub
out
(bad)
in
xor
sbb
add
lods
pop
data16
cmp
push
fucom
push
pop
das
push
push
(bad)
das
sbb
mov
pop
dec
add
mov
shr
not
jae
sahf
xchg
cmp
dec
sbb
xor
sbb
shl
imul
mov
fstp
dec
mov
cmps
pop
sar
adc
push
popf
xor
lahf
out
cld
outs
in
test
das
in
lea
rol
cdq
dec
(bad)
mov
xlat
jmp
adc
inc
(bad)
fld
inc
bound
mov
mov
mov
mov
test
push
mov
cli
xchg
xchg
pushf
ja
mov
daa
mov
sub
(bad)
and
mov
xchg
movs
add
lods
hlt
push
push
mov
add
dec
hlt
scas
daa
(bad)
mov
mov
push
imul
or
pop
sub
jns
aad
adc
push
mov
div
mov
inc
push
call
js
or
out
mov
mov
call
mov
jne
jg
xchg
push
add
mov
fidiv
rcl
xor
shl
xor
stos
or
jmp
rol
push
or
xor
mov
push
shr
and
mov
jns
push
enter
push
jmp
jns
jmp
jge
xor
xor
mov
inc
push
test
push
and
fwait
dec
shl
fist
jns
fsubrp
mov
dec
and
or
push
rcl
jmp
xor
loopne
adc
xlat
iret
inc
outs
shr
jecxz
loope
add
inc
add
xlat
jg
add
test
cli
lods
and
scas
mov
add
outs
mov
leave
sub
inc
adc
ror
add
pop
add
jb
sbb
shr
and
inc
push
stos
ret
cmp
lea
xchg
push
xor
inc
test
xchg
movs
xlat
icebp
mov
mov
movs
aam
ret
call
xlat
in
pop
cmp
jne
shr
mov
pop
mov
jo
dec
fidiv
dec
sub
sub
add
xchg
xchg
gs
call
mov
fwait
jb
retf
jbe
jbe
add
or
inc
jl
mov
imul
adc
or
mov
adc
lds
mov
or
xor
dec
cmp
out
sbb
adc
xlat
inc
mov
ja
pop
lods
pop
adc
jae
outs
outs
cld
outs
iret
mov
std
lds
mov
dec
aam
pop
imul
mov
push
and
jo
push
pushf
jmp
enter
push
ds
fwait
cmp
mov
test
(bad)
pusha
lods
mov
mov
imul
popa
push
sbb
(bad)
mov
lods
scas
les
pop
popa
fdiv
stos
push
pop
dec
or
test
bnd
sahf
outs
pop
pusha
sbb
repz
push
sahf
call
jb
dec
inc
aad
jg
daa
ins
sub
lods
in
repnz
bound
into
loope
jne
dec
stos
add
adc
adc
pop
jg
adc
hlt
jge
popf
ss
arpl
or
sbb
xor
sbb
xor
retf
sbb
fs
loop
push
mov
push
xor
(bad)
shl
push
jecxz
pop
mov
push
dec
test
mov
jo
lods
push
popa
test
mov
addr16
in
aaa
add
das
inc
xor
sbb
stos
dec
test
push
outs
xor
mov
mov
aaa
loop
icebp
dec
xor
push
movs
icebp
adc
call
popa
adc
push
fstp
stos
sbb
stos
fs
mov
sahf
mov
(bad)
adc
rcl
cmc
cmps
imul
loopne
movs
fcomp
(bad)
mov
add
out
xchg
mov
das
xchg
(bad)
sbb
dec
lds
cmps
jge
pop
jp
stos
fiadd
les
mov
shl
imul
loope
inc
je
pop
int
adc
jle
ins
ds
pop
push
ret
push
add
(bad)
adc
aad
and
add
mov
xor
(bad)
rol
xor
cmc
ins
aam
test
stos
mov
fist
daa
add
and
or
push
shr
mov
(bad)
xor
mov
adc
test
xlat
jge
sub
movs
inc
cmps
ja
dec
sub
int
movs
js
adc
nop
fmul
jnp
cmp
dec
cmp
push
(bad)
dec
push
xchg
shr
push
retf
mov
das
mov
xor
in
jecxz
movs
(bad)
push
aad
jl
mov
outs
icebp
push
or
sub
cmc
inc
push
sub
movs
lods
pop
jg
mov
sub
add
xchg
popa
mov
ja
jb
cmp
adc
xor
cmp
dec
or
adc
cld
xchg
cmps
out
test
leave
xchg
add
mov
fldl2e
dec
and
stc
xchg
popf
int3
jnp
fcomp
fstp
out
pop
imul
push
mov
mov
addr16
mov
or
mov
test
shr
ret
pop
repnz
push
(bad)
rol
inc
jl
pop
retf
jb
xchg
adc
mul
push
push
pusha
outs
cs
cwde
or
cmp
sbb
inc
dec
inc
push
div
jg
loop
push
pushf
aaa
call
stc
cdq
call
retf
bound
int3
sub
inc
aas
out
pop
in
push
ss
jae
or
fmul
sbb
inc
sub
(bad)
aad
(bad)
push
mov
and
dec
jle
dec
pop
jmp
jne
mov
jmp
xchg
or
in
pop
xor
dec
mov
cmp
int
pop
cmp
push
cli
pop
ds
dec
mov
ds
enter
pop
jl
and
and
jmp
lea
in
sbb
aaa
pop
fmulp
lods
les
add
jmp
adc
push
inc
jmp
div
cmp
jno
pop
xchg
retf
sub
cdq
(bad)
rcl
cwde
leave
add
js
cmp
inc
pushf
int3
inc
mov
jne
popa
outs
hlt
cwde
icebp
cmp
(bad)
aaa
repz
sar
daa
in
out
mov
and
pop
jecxz
imul
cld
pop
and
repnz
cwde
xchg
sti
jecxz
scas
lahf
aam
out
dec
scas
(bad)
cmp
jae
dec
hlt
test
mov
adc
test
add
dec
dec
ror
jmp
cmp
mov
or
into
call
ja
out
xchg
push
lods
mov
in
pop
inc
stos
pop
add
rol
rol
and
cmp
cli
scas
sub
ss
sub
shr
fisttp
sbb
lods
mov
pusha
adc
xchg
rcr
dec
cmp
dec
out
push
xor
jo
out
jmp
inc
and
adc
jns
inc
outs
mov
xlat
ds
imul
leave
fwait
movs
xchg
mov
mov
mov
popa
push
ret
push
fild
addr16
pop
sub
and
jno
mov
jp
xchg
call
and
xor
nop
adc
fst
popf
hlt
dec
imul
fsqrt
stc
aad
or
push
out
push
jg
sbb
dec
scas
cmp
sbb
test
mov
mov
mov
arpl
ds
fistp
ret
(bad)
mov
outs
loope
pop
and
sub
jno
stos
and
fistp
add
clc
iret
mov
or
fsubr
aaa
fidiv
movs
cmps
rcl
fwait
lods
inc
(bad)
mov
push
and
repz
cmp
pop
sub
xor
inc
repz
cs
xor
clc
mov
mov
(bad)
push
aaa
xor
icebp
mov
aad
fldenv
addr16
adc
pop
and
dec
xor
lods
ret
dec
push
jle
inc
mov
adc
push
shr
(bad)
fadd
jecxz
mov
js
jle
push
out
fbld
outs
fisubr
push
sub
push
out
test
in
nop
rcl
ins
loopne
xchg
cmp
(bad)
int3
stos
test
xchg
push
(bad)
mov
add
pop
mov
mov
imul
shl
push
in
mov
push
sub
mov
and
xor
lods
adc
sub
imul
fwait
pushf
mov
bound
in
xchg
mov
scas
scas
add
adc
iret
pop
in
sbb
mov
ins
fidiv
retf
ret
xlat
sbb
xchg
sub
mov
add
inc
cdq
repz
cdq
aad
push
dec
xchg
dec
jb
fcmovnu
xchg
fcmove
int
stc
ja
ret
pushf
push
loope
(bad)
pop
lods
std
stc
push
sub
imul
xor
hlt
outs
lds
fmul
cmps
repz
fwait
lahf
out
jb
add
ins
mov
push
imul
out
dec
mov
dec
ja
scas
or
rcl
push
xor
lock
xor
xor
(bad)
push
add
cdq
les
dec
sbb
xor
daa
iret
inc
pop
inc
jno
inc
dec
je
test
xchg
dec
dec
xchg
sub
adc
sub
jne
mov
add
mov
ret
stos
pop
ins
fwait
idiv
out
xchg
stos
imul
mov
push
jnp
cmc
mov
mov
hlt
loope
mov
add
mov
mov
xor
int3
mov
pop
push
or
popa
push
xlat
ret
out
inc
aad
pop
add
cmps
and
cmp
sub
dec
cwde
jmp
out
popf
xor
jmp
push
test
mov
mov
jne
cdq
(bad)
mov
and
shl
inc
dec
sbb
push
test
mov
mov
gs
sbb
push
dec
and
daa
mov
ror
jnp
sti
sub
fucomp
aam
sbb
pop
retf
jns
and
cmps
scas
adc
dec
fld
(bad)
lods
add
js
pusha
cmp
call
jnp
xchg
adc
and
inc
(bad)
push
cs
outs
imul
rcr
mov
aaa
nop
icebp
lahf
pop
mov
jge
(bad)
mov
out
fdivr
cmp
sbb
ficom
ds
jl
jb
or
(bad)
ret
xor
ror
into
in
jbe
mov
add
aam
movhps
mov
(bad)
sub
fwait
imul
imul
enter
inc
mov
in
scas
shl
mov
movs
ficom
in
mov
xor
test
stc
(bad)
or
fisubr
js
cmp
stc
and
js
push
lock
sub
and
sbb
jno
inc
jl
ja
adc
sbb
imul
or
jnp
or
sbb
js
cmps
sub
mov
pop
test
dec
loope
clc
ja
pusha
push
pop
mov
sub
fwait
movs
dec
cli
test
cmp
cmp
in
mul
pop
rcr
stc
mov
xchg
cdq
push
mov
fidivr
stos
or
dec
sub
xchg
pop
test
out
dec
dec
dec
out
pushf
mov
fiadd
ficomp
inc
cmp
ss
fscale
js
jae
out
ret
push
inc
adc
popa
dec
loopne
pushf
mov
test
dec
push
xchg
jmp
add
dec
mov
cmps
out
pop
push
mov
mov
or
mov
mov
pushf
inc
or
pop
push
loope
imul
xor
stos
lock
add
jmp
jmp
aad
inc
in
adc
xlat
into
pop
lahf
ds
mov
pop
sbb
movs
push
jns
fnstenv
sahf
hlt
sub
dec
aaa
test
stos
jb
cmps
ret
xchg
adc
cmp
inc
mov
and
cdq
pop
jbe
jbe
fs
sub
sbb
mov
dec
cmp
(bad)
jecxz
cli
pusha
mov
shr
fcmovbe
cmps
ret
ficom
sbb
add
add
ss
aad
xlat
bound
mov
in
and
fs
arpl
cwde
clc
idiv
and
sbb
into
fsub
adc
mov
ret
inc
lock
and
add
fst
jmp
xor
ret
mov
mov
idiv
jecxz
jnp
mov
mov
mov
enter
out
pop
dec
mov
xchg
cmp
or
vxorps
ja
in
mov
xchg
push
je
fmul
ret
leave
pop
lds
push
or
in
imul
mov
mov
sbb
loope
sub
mov
mov
(bad)
(bad)
pop
mov
jne
and
sahf
das
add
(bad)
adc
mov
add
stos
pop
das
in
xor
sbb
fisub
inc
cli
leave
cmp
mov
jp
push
ret
repnz
pushf
test
out
dec
mov
pop
sti
out
cmps
ror
ins
and
hlt
xchg
add
rcl
rcl
or
sub
mov
jle
pop
adc
retf
sub
push
bound
out
call
cmps
mov
les
add
cmp
rcr
add
std
or
fldcw
or
jns
movs
lock
(bad)
xchg
cmp
sar
and
push
retf
or
shl
ja
das
jg
and
or
mov
les
retf
cmps
jg
xor
sbb
fist
mov
inc
imul
xor
push
test
dec
jo
cmps
sbb
adc
fdivr
mov
pop
add
xchg
cmc
bswap
aaa
stos
push
imul
fdivr
mov
mov
sbb
shr
push
and
clc
in
sahf
mov
lea
inc
cld
sub
inc
push
rcl
leave
mov
push
(bad)
stos
jb
sub
fnstenv
inc
ror
push
sub
cmp
or
mov
(bad)
dec
or
mov
push
adc
pop
out
push
mov
loopne
xchg
outs
imul
repnz
pop
xor
jmp
or
jg
call
pop
repz
clc
sbb
daa
jmp
push
outs
jmp
cmp
sub
dec
daa
mov
stc
call
add
jne
mov
imul
in
pop
push
jmp
fiadd
xor
mul
adc
das
sti
mov
ds
ds
dec
jecxz
mov
in
std
(bad)
xchg
loope
mov
xlat
sub
sbb
je
rcr
(bad)
lods
add
fst
mov
inc
movs
jns
stos
and
mov
leave
jp
cld
jnp
and
and
xor
retf
sub
in
push
sub
or
test
test
mov
add
jmp
mov
outs
pusha
iret
add
mov
stos
cmp
ins
out
or
lds
mov
pop
lea
push
push
int3
add
das
xchg
test
stos
xchg
daa
repnz
pop
rcr
sub
adc
adc
adc
pop
shl
in
jno
and
mov
aas
test
adc
int3
ss
aad
arpl
es
dec
mov
xor
xchg
or
(bad)
test
scas
and
pop
and
add
nop
(bad)
and
rol
mov
(bad)
aam
outs
push
ficomp
mov
adc
push
and
push
xor
adc
shl
pop
xor
icebp
jo
cmp
test
ret
cwde
inc
mov
mov
add
pop
fstp
xchg
sar
out
inc
ret
mov
call
out
ds
push
push
repz
sbb
pop
jbe
test
mov
sbb
sbb
mov
outs
loope
pop
push
mov
push
and
push
cmps
(bad)
cmps
mov
add
not
daa
jo
out
into
adc
test
adc
popa
pop
jl
jae
ss
int
ins
pop
out
dec
imul
(bad)
test
shl
shl
push
pusha
sub
ja
imul
jb
push
ja
fwait
cmp
int3
lds
xor
test
mov
mov
jecxz
mov
xor
pusha
cmp
stos
xlat
jae
mov
imul
push
je
cmps
inc
dec
les
cmp
adc
daa
adc
fnsave
mov
gs
ret
cdq
xor
fbld
ds
das
(bad)
jp
jg
sub
jns
and
stc
dec
cs
loope
ret
repz
dec
jge
in
sub
mov
cmp
adc
js
mov
popf
(bad)
(bad)
mov
mov
xchg
and
mov
outs
jecxz
mov
adc
cwde
mov
sub
push
xchg
outs
inc
data16
not
imul
cmps
jae
xor
in
pop
dec
add
push
retf
push
inc
lods
gs
cmc
add
lods
mov
je
and
jb
pop
push
push
mov
outs
pushf
and
and
cmp
fcomi
mov
rol
std
push
mov
fstp
cmp
ds
aaa
xchg
scas
cmp
in
sub
inc
jb
or
out
jecxz
inc
fiadd
std
or
sbb
push
mov
fisubr
rol
pop
arpl
mov
loopne
popa
pop
mov
es
mov
movs
add
cmp
sub
or
mov
pop
es
into
dec
xor
out
sbb
ja
(bad)
in
mov
js
into
rol
sbb
ss
sub
mov
loop
sub
inc
add
ins
add
and
retf
outs
pop
xchg
mov
pushf
retf
jp
imul
aaa
sbb
in
jmp
mov
inc
gs
pop
xchg
jg
xchg
jb
or
push
add
nop
mov
mov
icebp
shl
std
add
mov
or
pop
leave
cmp
pop
pop
pop
nop
push
add
sar
call
pop
clc
dec
imul
cmps
push
cs
imul
dec
fstp
ret
arpl
imul
mov
pop
test
pop
mov
jb
icebp
sbb
lods
stos
cmp
jle
dec
pop
iret
pop
mov
(bad)
pop
jae
cmp
inc
sbb
stos
icebp
cmps
leave
repz
fisub
pop
push
fild
inc
clc
arpl
aam
cmp
cmps
push
xchg
mov
and
fistp
xchg
mov
sub
aaa
push
mov
icebp
in
mov
bound
in
mov
push
fnstsw
lea
xchg
add
xchg
inc
jae
out
daa
jmp
jle
mov
sar
ret
or
test
repnz
call
xlat
hlt
ds
jns
jo
inc
cmp
pop
out
lock
cdq
hlt
and
aam
or
(bad)
dec
dec
int3
mov
or
jg
inc
mov
div
push
xor
hlt
lds
inc
pop
inc
bnd
adc
pushw
mov
sbb
push
test
inc
cld
jge
out
imul
out
pusha
retf
push
fnstsw
push
clc
(bad)
sub
xor
cmp
push
jne
out
rol
les
les
lods
push
popa
test
cmps
jle
or
mov
push
pop
push
repnz
jo
ja
cmc
mov
cs
push
iret
movs
fdivr
and
mov
or
adc
add
ins
jp
push
and
aad
jp
cdq
push
test
imul
mov
hlt
pop
xchg
xchg
dec
in
xchg
enter
sbb
push
or
loop
mov
mov
std
mov
add
hlt
movs
nop
push
sub
mov
mov
int3
xchg
cwde
ins
call
xchg
mov
lds
fimul
add
stos
cmp
push
cmp
xchg
add
pop
movs
(bad)
adc
xchg
imul
loop
enter
ror
cmp
std
test
mov
scas
add
(bad)
outs
mov
loopne
xor
inc
inc
mov
call
inc
push
dec
in
addr16
xchg
pop
(bad)
cmp
jle
icebp
lods
(bad)
(bad)
das
sbb
les
rcr
pop
mov
sbb
pop
ds
adc
mov
mov
mov
ret
adc
cmp
cmps
xor
push
enter
add
popa
pop
or
sub
push
jo
dec
mov
jg
sti
nop
mov
or
mov
pop
pop
sbb
sbb
call
xchg
push
sub
xor
std
push
adc
popf
je
jo
imul
xchg
movzx
mov
loop
iret
mov
loope
repnz
push
call
leave
inc
stos
imul
mov
pop
sar
shr
jb
cmp
arpl
xchg
pop
rcl
sbb
cld
and
pop
mov
mov
xchg
adc
nop
jmp
enter
and
sub
sub
int3
cmp
stos
fldenv
ins
cld
ret
in
jmp
xchg
mov
cmp
repnz
pop
xchg
lock
data16
hlt
ss
call
sbb
dec
bound
jno
dec
jmp
add
cmp
cmc
ins
pop
sbb
dec
ins
fnstenv
movs
or
psadbw
push
add
xor
in
stos
xchg
test
test
mov
(bad)
mov
out
adc
or
pop
mov
sub
aam
xor
ja
push
jecxz
aad
dec
out
xor
pop
or
aaa
loope
not
vmovdqa
imul
repz
xchg
loop
jb
cmp
or
xchg
mov
aaa
je
jo
push
int
and
sbb
sbb
leave
out
ss
or
(bad)
mov
adc
sbb
ins
sbb
xor
push
scas
sub
jne
fwait
or
sub
iret
jae
(bad)
cmc
add
sbb
cld
adc
scas
lea
out
lock
in
push
sub
push
xchg
rol
ja
iret
ja
add
repz
or
(bad)
and
pusha
sub
push
and
mov
inc
outs
mov
mov
inc
jl
mov
jmp
adc
test
or
stos
lods
add
mov
mov
sbb
adc
mov
cmp
dec
leave
ds
and
imul
push
je
fcomp
inc
mov
repz
jnp
lahf
icebp
fwait
pop
push
pop
fistp
push
lea
bts
inc
and
add
xchg
pop
push
arpl
mov
mov
cmp
mov
jecxz
fadd
in
jmp
mov
int
mov
inc
cli
xchg
mov
pop
xchg
(bad)
fsubr
jp
sub
(bad)
je
ficomp
and
fmul
pop
clc
dec
cmc
daa
outs
cmps
loop
or
add
mov
(bad)
dec
mov
aas
fsub
add
push
lea
shl
mov
xchg
hlt
xchg
(bad)
lds
dec
jmp
popf
inc
adc
ja
jecxz
xchg
jmp
cmp
adc
cmps
push
add
pop
add
arpl
mov
pop
fnstsw
aas
dec
pop
lds
or
aaa
scas
mov
mov
sub
jne
int
cmp
out
pop
lods
cdq
retf
push
or
adc
mov
jne
fstp
lods
popa
sub
(bad)
call
lods
pushf
popa
xadd
dec
out
dec
enter
pop
jbe
sti
xchg
cmp
ss
fild
xchg
rcr
cmp
lock
xor
adc
aas
pop
adc
das
pop
enter
imul
cdq
dec
push
cmps
pop
pop
inc
js
rol
push
mov
push
mov
stos
sub
loopne
fwait
inc
adc
ds
sysret
mov
push
sbb
jp
int3
shl
movs
sbb
pushf
inc
or
or
pop
and
mov
scas
cmovg
movs
imul
inc
adc
out
lahf
sbb
push
dec
fistp
jne
inc
mov
add
or
inc
inc
in
ja
mov
xor
inc
push
iret
dec
call
je
cmp
mov
rcr
dec
scas
ror
cdq
fdiv
popa
push
out
push
dec
mov
pop
lahf
test
cmps
add
aad
sbb
push
mov
sar
int
cmp
or
xor
add
jne
repz
lock
lahf
xchg
and
test
in
mov
out
popa
dec
es
test
aaa
adc
mov
stos
aad
je
cli
fcomp
mov
cmp
scas
or
pop
push
push
jno
xchg
cld
test
mov
sbb
js
cmps
ss
jno
add
sbb
adc
aam
call
loop
adc
or
xchg
adc
scas
imul
and
in
(bad)
sar
rcr
sbb
into
pop
cdq
mov
lock
or
jmp
push
cmc
in
xor
mov
in
xchg
mov
mov
fdiv
retf
jl
xchg
fld
push
fistp
fs
scas
adc
ffreep
push
sbb
push
xlat
sbb
cmp
loop
fcom
xor
outs
dec
adc
xor
sub
push
test
lds
adc
push
adc
out
ja
ins
fsubr
dec
mov
aaa
rcl
outs
xchg
inc
addr16
adc
fnstenv
je
sbb
out
pop
loopne
jo
call
mov
xchg
les
or
call
sbb
add
into
xor
out
fcom
mov
mov
sbb
fild
mov
push
div
xor
mov
ins
and
rcl
and
mov
outs
sar
movs
or
cs
sahf
xor
ins
test
ins
enter
inc
push
jmp
stos
jecxz
ficom
jae
and
inc
repnz
inc
call
or
pusha
shl
(bad)
sahf
mov
mov
pop
jle
jbe
gs
add
sbb
push
ss
xchg
lock
ret
dec
hlt
jnp
repz
scas
mov
xchg
or
(bad)
std
repnz
out
add
mov
add
adc
mov
mov
mov
cmp
mov
adc
push
push
xchg
lock
daa
cmp
push
pop
jmp
inc
mov
jg
setns
cld
add
mov
arpl
sbb
retf
adc
and
pop
loope
xchg
bound
fmul
adc
(bad)
clc
mov
dec
je
ins
sub
mov
movs
jnp
outs
push
sti
call
or
push
dec
fwait
cmp
sbb
mov
xchg
std
fld
xchg
or
dec
push
adc
call
jo
cmp
push
adc
cmc
fbld
xor
jae
into
arpl
mov
ds
sub
pop
push
or
xchg
in
adc
pop
mov
and
rcl
pop
sub
in
xor
ja
sbb
xchg
push
nop
jmp
js
out
jmp
out
gs
sbb
hlt
hlt
jg
sbb
inc
xchg
xor
push
sbb
jbe
dec
mov
outs
loopne
mov
cld
ret
xchg
addr16
and
test
pop
sub
outs
cld
(bad)
mov
push
push
and
int
pusha
mov
int3
jmp
add
adc
xor
stc
jns
arpl
inc
xchg
push
addr16
push
rcl
fcomp
push
sub
aas
sub
cmps
mov
mov
sbb
xlat
xchg
or
js
push
add
pop
(bad)
out
dec
shr
je
loop
jg
xchg
pop
das
push
lahf
fcomp
sub
pop
lea
outs
je
pop
sbb
ss
and
mov
mov
or
sub
js
or
inc
xchg
sub
icebp
or
in
iret
cmp
jmp
and
(bad)
arpl
and
push
repnz
les
clc
jle
lds
dec
pop
sbb
loop
pop
mov
or
pop
xchg
dec
sar
jo
inc
sbb
loop
push
mov
fisubr
inc
inc
sbb
cmps
mov
jns
xchg
adc
data16
sbb
mov
mov
xor
push
pop
adc
ret
cmp
push
push
ret
hlt
enter
stc
outs
cmp
add
outs
fsub
mov
inc
add
fst
mov
movs
adc
jb
enter
imul
jbe
dec
pop
or
push
and
stc
test
jl
nop
or
sbb
mov
pop
and
(bad)
aam
xor
sub
(bad)
sub
ret
mov
push
and
mov
pop
adc
enter
cmp
icebp
mov
sub
(bad)
push
cli
stc
cld
(bad)
sti
dec
popf
pop
jbe
fdiv
push
cmps
and
adc
and
or
xchg
or
sub
jge
in
sbb
enter
scas
add
dec
in
test
push
pop
call
cmc
in
fstp
fwait
add
mov
stc
jbe
lahf
aaa
imul
jle
loope
or
inc
jnp
sbb
lock
call
(bad)
inc
nop
and
outs
cs
loope
or
das
jnp
call
repz
cmps
(bad)
(bad)
mov
fs
cmp
mov
adc
ss
ret
popa
dec
sub
clc
push
(bad)
shl
mov
(bad)
addr16
xchg
dec
nop
ins
mov
pop
fwait
pop
mov
push
jg
mov
popa
jbe
xor
push
inc
xchg
jbe
mov
enter
les
sbb
jns
adc
dec
sbb
add
leave
gs
gs
movs
das
adc
mov
test
and
das
sbb
xlat
pushf
xchg
cmp
sub
scas
xchg
cmp
repz
jl
or
xchg
cmp
mov
in
inc
adc
inc
inc
adc
dec
lea
jo
test
clc
shl
pop
dec
jne
and
push
xchg
test
sub
ja
xor
cmps
(bad)
cmp
into
fwait
test
addr16
fcomi
(bad)
pusha
dec
(bad)
push
inc
jnp
stc
or
push
adc
(bad)
cs
out
leave
xor
fisubr
shl
das
dec
mov
mov
adc
xchg
xlat
pop
inc
popa
sub
das
pop
dec
mov
xor
ret
or
repnz
pusha
pop
mov
mov
adc
dec
movs
adc
fdivr
stc
mov
jns
mov
push
add
shl
push
mov
or
pop
mov
jne
cwde
push
cmp
test
rol
dec
imul
add
pop
jo
int
in
and
sbb
inc
inc
add
pop
sahf
push
and
sub
scas
cmp
aas
xlat
ds
sbb
dec
mov
mov
sbb
clc
(bad)
pop
leave
jmp
shl
hlt
add
adc
ins
push
sub
std
data16
xchg
in
ret
mov
xlat
call
cld
lahf
lock
jg
adc
xor
pop
add
out
fadd
(bad)
cld
test
push
add
xor
mov
sub
xchg
ins
or
push
push
lods
aaa
jmp
push
repz
loope
xor
mov
lock
call
add
dec
and
xor
out
jmp
popf
xor
adc
or
addr16
mov
cmp
cmp
mov
xchg
data16
mov
push
inc
repnz
hlt
das
dec
aad
bnd
mov
dec
call
and
fistp
out
jbe
inc
outs
push
dec
adc
outs
ins
shl
shl
sub
jmp
(bad)
in
lods
and
retf
(bad)
icebp
xlat
mov
push
xchg
mov
iret
jne
bound
jo
dec
leave
dec
(bad)
in
test
sbb
inc
dec
test
xchg
dec
add
sub
mov
push
pushf
inc
jbe
rcl
movs
ret
xor
clc
iretw
pop
mov
fisubr
mov
or
xor
xchg
jl
dec
adc
inc
in
xchg
mov
std
cmps
jp
xor
test
sbb
mov
xchg
adc
retf
xlat
pop
adc
mov
add
js
in
pop
scas
sub
dec
add
sbb
add
fnstenv
icebp
or
jp
shl
cmps
aas
cmps
adc
push
jmp
das
and
es
outs
and
mov
jo
fwait
ror
mov
mov
lock
in
in
add
fwait
jo
cs
add
cmp
cmp
aad
outs
mov
test
pop
mov
xchg
fldenv
mov
out
icebp
and
(bad)
mov
test
mov
fimul
or
xor
ret
xor
push
neg
ja
popa
or
cli
sbb
movs
sub
xchg
and
inc
(bad)
ficom
into
bound
pop
das
in
jb
(bad)
adc
popf
out
retf
xor
mov
inc
lds
call
lods
pop
imul
push
clc
and
dec
gs
cmp
pop
mov
jnp
or
jo
popf
sbb
push
js
fild
shl
pop
jo
cmp
pop
jb
and
sbb
rcl
pop
out
add
cdq
dec
cmps
fwait
daa
mov
bound
sub
mov
outs
xor
cdq
popf
sbb
pop
cmp
dec
sub
dec
xchg
loop
hlt
(bad)
mov
mov
mov
xbegin
neg
out
inc
push
push
mov
jae
retf
bound
sub
stos
not
hlt
pop
in
mov
in
push
mov
test
inc
mov
push
xor
je
adc
push
test
mov
sbb
out
mov
mov
pop
aaa
int
jae
mov
js
scas
scas
es
mov
sbb
jp
popa
ins
test
xlat
adc
rol
and
dec
push
je
dec
mov
ficomp
xchg
ds
das
jae
js
sbb
gs
sbb
cmp
jle
popa
xchg
movs
mov
cmp
imul
es
add
dec
inc
jp
jmp
jnp
(bad)
jne
test
pop
in
pushf
in
pop
retf
movs
mov
mov
dec
aas
push
sub
dec
(bad)
inc
sbb
xor
sub
fnsavew
push
repnz
cmp
or
mov
movs
or
test
in
outs
ins
xor
test
repnz
test
adc
call
mov
ja
addr16
add
jge
add
out
jnp
mov
bound
pop
mov
ret
push
xchg
movs
dec
repnz
fmulp
imul
retf
fisubr
jnp
lods
mov
mov
jl
pop
es
sub
inc
outs
movs
movs
fiadd
inc
inc
dec
imul
mov
enter
cmp
sahf
stc
add
dec
mov
dec
or
jns
enter
shr
test
lods
loopne
in
mov
dec
jbe
out
mov
retf
xor
jp
add
pusha
repnz
jo
mov
scas
add
push
jmp
jge
mov
or
es
movs
daa
adc
std
jnp
pushf
mov
scas
test
sub
call
out
retf
fld
arpl
daa
stc
add
jl
sbb
push
std
or
cmp
outs
jge
lods
lods
daa
xchg
cmps
pop
icebp
xchg
sbb
or
or
add
js
mov
adc
lods
push
mov
sbb
dec
loopne
dec
cmps
out
cmp
sar
inc
jae
jbe
xlat
iret
inc
mov
leave
cmp
nop
lock
mov
pusha
sub
mov
cmp
or
push
dec
mov
jecxz
mov
pop
aam
clc
add
cmps
std
aad
(bad)
in
call
jge
sbb
jmp
or
enter
jecxz
push
push
push
in
pop
xchg
(bad)
in
scas
in
call
sub
cmps
mov
cdq
stos
aad
pop
add
call
jg
gs
ins
cmp
aam
clc
push
jne
add
lods
jnp
sbb
jl
push
jp
pop
dec
or
push
fistp
mov
mov
loop
call
sti
dec
sbb
dec
ret
push
inc
outs
popa
mov
pop
ss
xchg
or
push
clc
or
xchg
mov
out
push
in
fild
inc
cmp
push
mov
outs
dec
dec
sub
pop
or
sub
xlat
sbb
ds
(bad)
outs
add
jo
pop
push
cmp
jl
arpl
call
mov
sti
test
dec
mov
inc
(bad)
popf
retf
js
cmps
and
dec
pop
in
in
pop
movs
push
not
adc
and
vmwrite
das
add
inc
loopne
mov
jb
mov
aas
inc
cmp
retf
jl
push
int
xor
or
ror
adc
lock
(bad)
xlat
int
pop
mov
add
pushf
push
repz
jge
shr
add
sbb
sub
mov
inc
int3
cmp
jp
retf
push
popf
cs
ror
movs
dec
div
push
int3
(bad)
cmp
mov
out
xor
push
pop
pop
mov
lahf
cmp
inc
jl
es
xor
push
xchg
jecxz
inc
ret
xor
pop
push
adc
fmul
int3
xchg
imul
lods
lea
lock
(bad)
push
push
adc
imul
int
imul
nop
shl
push
sub
cmp
push
mov
mov
std
call
test
mov
(bad)
mov
loop
mov
ret
dec
jbe
cli
xchg
inc
daa
enter
add
sbb
mov
loope
cmp
adc
mov
mov
mov
dec
enter
or
data16
adc
add
fldenv
(bad)
vsqrtss
xor
mov
xchg
test
into
adc
xchg
and
frndint
shr
enter
js
jno
jno
jmp
cmp
fcomp
call
and
bnd
fsub
mov
cmp
mov
sahf
adc
add
pop
add
pop
and
inc
es
test
es
dec
push
movs
mov
daa
xchg
mov
data16
dec
scas
out
inc
adc
mov
add
aad
xchg
adc
xor
mov
stos
mul
pop
out
inc
push
adc
sti
lds
dec
and
and
fist
inc
call
in
and
xchg
out
call
lods
mov
lds
test
mov
mov
test
xor
push
cld
add
push
xor
outs
gs
xchg
xor
sbb
pusha
and
inc
mov
push
fcom
and
xor
push
jecxz
mov
pop
xor
mov
mov
xor
addr16
inc
fcmovne
push
pop
inc
pop
push
inc
mov
xor
ins
mov
(bad)
adc
jmp
movs
cli
stc
lds
and
out
test
inc
mov
push
jge
inc
dec
cwde
out
mov
cmps
add
sbb
das
inc
es
ficom
sub
xchg
int3
push
jb
xlat
imul
es
outs
dec
retf
in
cmp
cmps
pop
imul
arpl
pusha
jmp
test
jle
inc
mov
xchg
push
ficom
loop
or
cmps
mov
lds
xor
mov
push
imul
enter
(bad)
dec
cmp
pop
rol
add
or
cld
lahf
in
push
hlt
and
out
rdtsc
(bad)
leave
push
mov
int
sbb
cmps
push
stc
pushf
test
lahf
mov
mov
xor
push
add
sub
into
inc
cmp
mov
in
je
jb
ja
dec
repz
hlt
(bad)
pop
scas
je
not
popf
jg
add
stc
in
mov
std
fs
or
mov
aas
jnp
outs
and
adc
fisttp
xlat
dec
xchg
addr16
mov
callw
hlt
test
xchg
adc
jnp
xor
sub
jle
(bad)
bound
test
fnsave
(bad)
into
jno
or
repnz
(bad)
shr
imul
mov
aas
ss
cmp
xlat
jo
bound
outs
push
push
ins
mov
js
add
call
inc
clc
add
(bad)
adc
add
jo
jecxz
enter
mov
in
mov
mov
sub
and
js
aam
outs
adc
icebp
dec
cmps
ret
mov
push
xor
push
icebp
fadd
mov
inc
xor
outs
xor
cmp
cs
stos
cs
push
sub
pop
add
fs
(bad)
into
sti
retf
out
sbb
ret
movs
mov
fidivr
retf
or
shl
jb
mov
iret
icebp
test
adc
out
mov
in
xor
pop
ret
in
stos
daa
setns
adc
aad
pop
popa
or
mov
push
xchg
sub
mov
mov
sub
cmps
or
jmp
xchg
test
mov
xchg
add
xchg
iret
sub
cli
and
fistp
push
cmps
push
mov
(bad)
(bad)
jmp
mov
pop
sbb
mov
xor
imul
and
sub
repnz
or
arpl
jbe
int
pop
mov
lea
popa
or
mov
daa
jno
xor
and
pusha
loope
hlt
push
shr
in
enter
mov
ss
or
jne
lock
sahf
sar
aas
repnz
(bad)
std
mov
jg
adc
clc
aad
outs
lea
mov
and
mov
push
lods
cwde
fnstcw
ror
ins
sbb
and
dec
in
push
call
cli
test
nop
dec
fistp
sub
push
jmp
pop
and
xlat
lods
outs
cmp
mov
fnstenv
icebp
mov
lods
int3
loopne
cmp
shl
push
pushf
je
lea
cmp
int
bound
push
adc
pop
outs
(bad)
retf
jno
aam
pop
popa
mov
sub
icebp
mov
inc
jle
inc
out
ss
mov
mov
(bad)
push
or
cmp
ins
add
xchg
adc
jb
in
arpl
in
sub
imul
fmul
aam
daa
inc
(bad)
into
call
xchg
scas
ret
pop
mov
ja
inc
test
pop
ins
in
push
dec
arpl
aam
push
mov
push
popa
xchg
shr
push
aaa
fisubr
adc
sub
sbb
push
inc
fst
rcr
sti
fist
mov
push
sub
test
in
mov
sbb
xor
dec
mov
jns
call
leave
jmp
pusha
jmp
loopne
popf
scas
push
mov
mov
(bad)
call
ja
clc
sub
arpl
ins
mov
dec
fimul
call
std
jge
jmp
sbb
outs
adc
xchg
and
inc
repz
dec
adc
addr16
cmp
xchg
xchg
fs
lock
xlat
mov
sbb
and
jp
retf
inc
or
sbb
pop
and
movs
imul
mov
sub
mov
mov
fs
ficomp
jmp
into
adc
pop
popf
jo
imul
retf
fcomp
popw
pop
lds
arpl
ret
sbb
xchg
sbb
and
xchg
stos
adc
mov
rcl
cmp
inc
sub
sub
adc
inc
sbb
add
out
movlps
dec
test
mov
xchg
test
dec
jecxz
shld
xchg
ds
cmp
in
ins
(bad)
pop
in
mov
rcl
xchg
shr
or
cmp
jae
dec
lods
inc
aad
fmulp
dec
mov
xchg
clc
push
stos
jge
aaa
inc
out
rol
ss
xlat
fld
push
fild
push
add
clc
sahf
dec
(bad)
sub
pop
(bad)
or
mov
stos
sbb
cmp
adc
aad
pop
cmp
jge
out
xor
sub
pop
jnp
inc
jnp
push
cmp
or
dec
pop
outs
shl
mov
and
xchg
xchg
push
adc
pop
mov
jle
xor
and
out
sbb
dec
stos
repnz
cmps
loope
sub
xchg
jbe
aaa
out
xor
mov
mov
lods
enter
push
and
fisubr
gs
xor
xchg
inc
enter
cwde
inc
fistp
jo
sub
(bad)
out
sub
lods
mov
(bad)
pop
outs
mov
repz
xlat
retf
lods
jo
inc
rol
or
push
pop
add
outs
dec
das
mov
clc
dec
cmp
sbb
xchg
retf
leave
push
jg
mov
jmp
sbb
cmp
icebp
and
cwde
push
out
mov
xor
jnp
pop
cs
push
push
cmp
inc
sub
dec
xchg
gs
xor
pushf
add
ja
push
ret
out
adc
cmp
cld
inc
jmp
imul
add
js
xor
mov
inc
and
mov
into
adc
fcomp
push
test
into
das
out
mov
xchg
cmp
mov
sbb
imul
imul
cli
das
mov
retf
ds
add
mov
in
sahf
jmp
push
or
retf
push
out
or
jmp
sbb
hlt
fsubr
das
dec
or
test
and
(bad)
adc
mov
mov
test
dec
xchg
mov
ss
outs
sbb
movs
cmp
ror
push
mov
push
movs
cwde
inc
mov
jns
mov
fwait
shr
add
adc
jmp
xchg
cli
ins
pop
inc
(bad)
mov
cmp
xchg
fcomp
lods
sahf
push
mov
cs
repz
daa
push
ja
shl
add
(bad)
inc
pop
sbb
xchg
cmp
addr16
gs
mov
lock
jecxz
aam
inc
pop
retf
mov
jae
fwait
xchg
bound
xchg
inc
pop
ds
cmp
mov
loope
call
xchg
cmc
and
push
popf
pop
xchg
jge
inc
pop
cmp
fst
mov
mov
adc
lods
lahf
jle
fwait
mov
push
and
jo
push
hlt
lds
mov
inc
xchg
mov
add
popa
dec
(bad)
mov
repnz
call
pop
xor
xchg
inc
aad
xchg
or
jmp
aam
cmc
fnsave
not
xchg
jo
xchg
mov
pusha
jp
fistp
sbb
aam
adc
(bad)
cli
mov
cmps
retf
cmp
fwait
pop
hlt
cmp
inc
mov
gs
stos
jbe
sbb
mov
cmp
pop
popa
cmp
pop
mov
cmc
xlat
ret
cmp
stos
pop
push
(bad)
outs
gs
push
jae
ins
(bad)
push
mov
xchg
cmp
inc
iret
push
mov
movs
frstor
imul
stc
lock
sahf
dec
stos
and
imul
retf
sahf
mov
xlat
push
jb
test
ja
std
stos
and
fdivr
ss
mov
retf
or
xchg
bound
ficomp
sti
fist
ja
fcomp
data16
sbb
jge
or
neg
std
loope
sti
pop
dec
pop
(bad)
sbb
mov
inc
sub
int
std
stc
ret
stc
mov
xor
dec
or
cdq
int
push
cmps
mov
dec
mov
adc
js
xchg
dec
ficomp
jmp
sahf
cli
pusha
adc
or
push
xor
popf
mov
not
and
mov
aas
sbb
add
retf
les
or
xchg
rol
jp
scas
sub
(bad)
outs
mov
pusha
js
xor
scas
jmp
aad
pop
mov
test
jge
(bad)
pop
retf
inc
call
push
xchg
test
in
jb
pop
cmps
mov
inc
pop
test
fadd
push
cmp
and
pop
pusha
jmp
(bad)
mov
arpl
mov
(bad)
cmp
mov
push
arpl
cmp
dec
push
inc
cmps
stos
test
aaa
(bad)
outs
repz
test
clc
jbe
fsub
out
push
mov
mov
mov
int3
ltr
fstp
adc
pop
push
and
pushf
ds
(bad)
(bad)
mov
dec
xchg
dec
movs
bswap
pop
push
stc
inc
jo
rcl
xchg
inc
les
and
mov
jo
jbe
(bad)
out
mov
or
or
xor
mov
add
jmp
cld
repnz
das
cs
cli
das
mov
stos
jp
xchg
les
mov
adc
enter
or
jb
mov
test
call
pop
or
imul
(bad)
xchg
sbb
adc
xchg
sbb
test
je
inc
mov
and
jbe
and
(bad)
mov
mov
xchg
in
and
pop
xor
xor
add
cmp
movs
pop
lods
sbb
mov
pop
leave
and
in
leave
cmp
sbb
inc
adc
and
into
movs
lock
(bad)
lds
ins
loop
jg
jae
ja
ja
xchg
sub
lods
inc
adc
stos
add
stos
xchg
jp
push
fwait
lock
xchg
loopne
lds
jmp
jb
xchg
fnstsw
push
pusha
ins
bound
fs
mov
in
inc
sub
(bad)
mov
xchg
mov
loop
inc
pop
call
cmc
pop
xor
clc
cld
inc
ror
mov
scas
cld
imul
mov
repz
aam
mov
ss
lods
les
sti
(bad)
pop
push
cld
fxsave
loope
lods
(bad)
cmp
ja
mov
add
mov
call
cmp
cmp
inc
and
adc
mov
cmps
cmc
dec
xchg
sbb
mov
sbb
mov
sub
and
and
xchg
xor
or
mov
push
mov
dec
mov
xchg
cmp
ret
lds
loop
lock
dec
mov
aad
sti
jae
pop
push
or
add
and
pavgb
jp
je
stc
cdq
test
inc
(bad)
inc
and
jbe
adc
rol
and
imul
neg
or
rol
fist
cs
icebp
adc
xchg
les
repz
stc
into
movs
fcomp
inc
loope
and
mov
jle
and
jle
xchg
mov
ror
stc
inc
mov
rcl
and
scas
int
sub
mov
and
fcomip
xchg
xchg
sbb
ret
nop
push
dec
popa
and
shl
fwait
sub
jp
mov
ret
pop
jmp
outs
dec
lods
int3
addr16
jbe
xchg
push
ds
leave
imul
imul
and
cli
jns
sub
mov
mov
push
mov
test
jb
pusha
call
sbb
das
add
xlat
mov
jmp
inc
sbb
lahf
push
push
cmp
jb
mov
mov
loop
fimul
int
aam
sbb
dec
ja
jmp
scas
inc
push
jge
clc
jo
jmp
(bad)
aas
fsub
mov
ror
test
lds
fs
dec
imul
out
mov
ds
in
sti
hlt
sub
in
sub
add
sub
mov
jle
mov
sbb
scas
dec
pusha
inc
ja
sar
call
cmp
clc
inc
sbb
sahf
xchg
mov
and
sub
jo
adc
or
call
push
mov
push
jle
mov
inc
imul
les
loope
das
fidivr
or
in
pop
inc
int
push
out
shr
sbb
pop
mov
jb
call
(bad)
rcl
lahf
push
sub
xchg
inc
and
cmp
jl
inc
iret
xor
xor
xchg
add
outs
loop
ja
pop
neg
imul
sbb
sbb
jne
push
sub
mov
test
dec
(bad)
xchg
and
addr16
in
cmp
and
test
jb
jnp
retf
xor
test
cmp
sbb
test
mov
jge
inc
test
es
sbb
mov
and
dec
movs
pop
sahf
mov
jnp
inc
xor
dec
lea
cs
fiadd
pop
es
scas
ror
cld
leave
pop
pop
jbe
icebp
mov
out
mov
in
mov
cmps
ja
push
fmul
sub
int
cmps
and
pop
and
scas
lahf
dec
mov
or
inc
push
outs
in
or
adc
inc
jae
loop
in
inc
lods
inc
imul
ror
cmp
mov
push
je
mov
mov
inc
adc
mov
shl
mov
aas
pusha
fisubr
adc
sbb
jno
sub
pop
xchg
adc
sbb
iret
pusha
lods
mov
mov
inc
scas
cmps
mov
das
sbb
popa
rol
mov
aad
push
in
in
mov
pusha
sub
fisubr
lods
mov
test
enter
shr
ror
rol
enter
xchg
call
int3
daa
sbb
jg
out
mul
lea
and
sbb
stos
neg
xor
call
xor
mov
imul
cmc
or
push
inc
push
mov
push
mov
lds
adc
dec
xor
mov
xor
inc
sti
inc
not
xor
xchg
sahf
aam
pusha
mov
add
cmp
add
div
fadd
jg
(bad)
sub
inc
xor
sbb
fisubr
scas
mov
in
push
mov
mov
scas
out
shl
(bad)
xlat
or
add
test
int3
mov
xchg
and
dec
cmc
arpl
jge
cmps
loope
xor
or
pop
inc
call
popa
sbb
pushf
cmp
mov
daa
je
or
neg
icebp
mov
arpl
dec
bnd
(bad)
test
loope
mov
in
jle
psubb
mov
loop
jg
mov
xor
mov
mov
xchg
arpl
jno
cmp
into
sti
fisttp
retf
jbe
sti
leave
les
mov
push
aaa
or
(bad)
pop
inc
fimul
aad
jmp
cmp
add
loopne
cmc
mov
mov
mov
jnp
ds
addr16
loope
dec
in
jmp
or
out
add
pop
sub
ins
mov
cs
jno
div
mov
sub
mov
std
iret
les
jnp
sahf
cmps
mov
pop
cld
cmps
jno
mov
add
int3
retf
pop
adc
mov
outs
xor
mov
aaa
aas
jl
or
(bad)
cmc
rcl
mov
push
cdq
push
dec
xor
mov
dec
es
movs
dec
push
xchg
test
sub
xchg
mov
xchg
leave
xchg
aad
jns
(bad)
xchg
mov
mov
test
inc
out
mov
dec
jl
lods
fimul
ror
mov
retf
jecxz
xor
into
xor
jle
cmp
pop
clc
jne
cmp
jl
dec
repz
adc
scas
dec
sub
sbb
jge
scas
test
pop
lahf
outs
xor
ud0
jg
shr
cmc
aas
jge
das
push
dec
xor
icebp
jne
dec
cdq
sar
pop
test
cmp
jmp
test
sub
cmp
add
mov
jnp
and
sbb
adc
call
or
sbb
jbe
mov
sbb
cmp
jmp
(bad)
jecxz
or
cmp
and
rol
mov
jmp
jle
and
scas
adc
into
pop
cmp
dec
aam
xchg
pop
ds
mov
popf
xchg
push
and
sub
js
sar
sub
shr
mov
clc
das
rol
aad
sti
xchg
sahf
push
daa
leave
lods
inc
ret
fcmovnu
icebp
mov
xor
and
mov
xor
and
jne
out
xchg
and
in
mov
pushf
and
jb
into
nop
fimul
dec
iret
outs
add
repnz
sbb
ins
push
cld
daa
inc
inc
add
sbb
xchg
xchg
ds
adc
sbb
jne
and
sbb
sti
imul
pop
jmp
idiv
fwait
rcl
xchg
call
adc
sti
in
mov
ret
lds
ret
mov
dec
int
adc
lahf
add
xor
and
ins
fs
ins
ja
mov
cmps
cdq
retf
lock
popa
add
xlat
nop
sar
imul
xchg
repz
push
mov
js
jmp
fisttp
xor
movs
ret
mov
lods
ret
inc
int
lea
ret
adc
xchg
out
call
xor
test
arpl
test
clc
fbstp
xchg
dec
test
call
enter
mov
mov
sub
or
hlt
aam
and
dec
retf
and
jb
cli
stos
adc
push
rcr
inc
cli
mov
inc
dec
xlat
(bad)
jl
clc
mov
xchg
mov
jg
shl
js
mov
xchg
inc
fdivr
push
cmp
mov
scas
cmp
sar
(bad)
xor
fld
jbe
adc
sub
popa
pop
push
sub
mov
mov
test
fldcw
xor
dec
add
add
movs
pusha
in
push
call
fnstsw
fild
popw
sahf
cmp
div
sbb
ds
ds
dec
dec
or
pop
inc
adc
push
cmps
push
mov
sub
sub
add
out
push
jae
jb
mov
jnp
aam
ins
cmp
lods
nop
(bad)
mov
dec
and
mov
jns
or
cli
aad
and
adc
inc
mov
push
push
cmps
mov
mov
int
aas
scas
and
add
inc
pop
pop
cmps
sahf
mov
nop
sbb
inc
push
rol
sub
fmul
sbb
add
sub
test
or
les
js
iret
scas
loop
jl
pop
jnp
jmp
mov
mov
dec
xchg
mov
pop
mov
adc
pushf
aaa
lea
retf
sub
ss
mov
movs
stos
pop
into
pushf
jmp
adc
ret
push
out
lock
mov
mov
shr
dec
dec
inc
sahf
mov
mov
scas
(bad)
adc
fdivr
(bad)
pop
xor
fs
pushf
movs
loope
xchg
retf
pop
cmp
mov
xchg
imul
xor
pop
add
jp
pop
pop
jnp
inc
xchg
sahf
mov
call
mov
add
adc
or
and
jo
lds
nop
inc
jne
cmc
push
dec
pop
cmp
jne
and
scas
add
mov
lds
mov
jp
pop
add
cmc
cmp
test
fs
mov
(bad)
fcomp
push
cwde
inc
ret
jmp
push
or
add
rol
push
je
(bad)
xor
sahf
or
retf
aas
xchg
mov
sbb
mov
push
and
sbb
lock
push
inc
pushf
ins
addr16
xchg
scas
or
leave
pop
add
cwde
mov
bound
inc
daa
or
ins
add
mov
push
imul
ret
ret
xchg
ins
xchg
cmps
xchg
inc
mov
or
push
jae
pushf
out
mov
jp
addr16
push
js
xchg
call
inc
adc
retf
adc
or
xor
shl
jmp
mov
mov
mov
jns
cmc
(bad)
std
and
shr
das
xchg
pop
xor
jno
jbe
aaa
jle
mov
movs
mov
sub
pop
mov
(bad)
and
stos
bound
mov
pop
les
mov
in
imul
sbb
cmps
mov
dec
mov
outs
add
or
xor
stos
jno
lods
enter
test
das
in
popa
int
das
in
retf
cli
dec
jecxz
cwde
xor
outs
inc
and
and
dec
movs
add
mov
test
hlt
cmp
xchg
lods
cli
pop
(bad)
aas
sbb
or
inc
mov
enter
cmovl
hlt
cmp
mov
adc
jae
or
loope
cld
inc
or
jecxz
das
jmp
fs
loop
dec
ror
inc
pop
sahf
ror
sbb
loop
aas
adc
mov
sbb
xchg
cmc
retf
std
and
shl
shr
addr16
pop
loop
add
add
or
loope
sub
(bad)
cmp
sub
cld
push
call
bound
mov
mov
dec
mov
xchg
sar
mov
mov
inc
mov
jmp
lea
and
enter
out
dec
in
cmp
loop
jnp
outs
in
call
je
(bad)
xchg
test
into
push
pop
push
cdq
aad
and
(bad)
push
inc
das
les
or
sar
sub
xor
jp
jno
(bad)
mov
mov
pop
aaa
sub
daa
int
xor
nop
mov
pop
cmc
movs
xor
jmp
adc
lods
push
jo
popf
mov
movs
fs
xchg
lods
je
jmp
(bad)
sbb
ss
or
mov
loope
push
cmps
clc
(bad)
push
pop
mov
jo
pop
add
mov
aaa
aas
jnp
(bad)
sub
popa
adc
xchg
xor
ins
popf
jp
push
test
xchg
pop
mov
cs
mov
and
mov
push
xlat
inc
outs
addr16
mov
clc
fmul
and
call
test
cld
into
cmps
inc
and
mov
cmp
fisubr
cmp
jge
out
xor
(bad)
pop
sbb
lds
rcl
dec
stos
pop
les
and
inc
les
or
loopne
and
test
ret
out
mov
pop
fadd
mov
and
adc
mov
ret
xchg
es
fwait
inc
call
mov
rcr
inc
jns
jns
sahf
call
push
mov
adc
cli
ins
jb
js
les
adc
call
sti
mov
mov
das
mov
add
mov
xor
jmp
mov
sti
shr
retf
xchg
repz
rol
movs
test
mov
ins
in
and
and
sbb
test
dec
xor
inc
pop
sub
adc
sbb
mov
xor
inc
in
xor
mov
dec
lea
ja
jl
icebp
xchg
and
push
xchg
in
das
push
leave
sub
and
repnz
or
fld
inc
xchg
pop
xchg
sbb
rol
mov
div
ja
shl
pop
repnz
add
jb
inc
jecxz
xchg
fild
cmp
inc
shl
fcomi
repz
js
xlat
pop
pop
xchg
xor
inc
jmp
leave
repnz
pop
daa
(bad)
pop
shl
sub
clc
dec
test
jb
xchg
push
out
xor
retf
addr16
out
xlat
xchg
sub
stos
or
es
mov
dec
pop
enter
inc
arpl
xlat
push
dec
ins
and
pop
leave
pop
bound
mov
shl
pop
cmc
mov
(bad)
push
sub
jp
mov
push
add
xor
pop
sar
xlat
push
and
push
mov
pop
or
jb
dec
jl
ins
mov
fwait
sub
add
dec
fcom
and
adc
sub
(bad)
pop
or
sbb
dec
sti
nop
fucomp
(bad)
sub
(bad)
idiv
and
push
mov
pushf
mov
(bad)
mov
push
das
inc
mov
pop
push
dec
and
in
adc
push
cmp
imul
or
scas
lds
mov
test
mov
lods
(bad)
retf
mov
fs
jns
dec
popf
cmc
(bad)
adc
push
xchg
push
or
clc
ins
inc
fmul
out
rcr
adc
push
leave
mov
cs
adc
movs
xor
or
dec
sub
outs
or
push
cmps
movs
or
and
lock
(bad)
(bad)
js
bound
sbb
xchg
xchg
test
retf
pop
mov
add
shr
das
adc
sub
add
push
shl
push
js
sahf
sub
xchg
add
push
pop
rcl
aas
xchg
xor
push
mov
fdiv
xor
push
ins
and
and
inc
mov
aad
(bad)
jno
(bad)
lahf
in
jmp
sbb
mov
pop
pop
pop
and
mov
lahf
arpl
inc
je
pop
jns
add
mov
fcom
mov
cs
and
mov
stc
push
jecxz
sbb
pop
xor
and
xchg
sub
out
div
cmp
popf
aaa
ror
jecxz
aad
inc
sbb
xor
dec
jp
ins
xlat
cmp
or
out
sub
cmp
lea
mov
movs
sar
cmps
jae
je
xchg
hlt
dec
mov
jae
inc
mov
das
mov
std
xchg
ret
pop
lahf
jmp
cmp
pop
iret
repz
fucomip
xchg
test
pop
sub
fstp
(bad)
lahf
repnz
add
xor
pop
adc
jecxz
cmc
cmc
mov
fwait
rcr
in
xor
pop
mov
outs
shr
sub
outs
xchg
pop
test
cmps
das
out
and
mov
push
sbb
push
enter
inc
(bad)
push
xchg
and
push
push
nop
ja
pop
jns
sub
cmp
jne
ret
and
in
mov
adc
(bad)
and
cmps
add
pop
lea
sti
cmc
add
sar
test
mov
fisttp
sub
loop
imul
xchg
xor
xor
aas
jns
and
dec
(bad)
mov
fisub
aaa
push
or
dec
fs
pop
and
pop
pop
cmp
jle
mov
push
inc
lahf
arpl
push
(bad)
mov
mov
push
ins
sub
xor
xchg
iret
jae
mov
or
je
pusha
pop
cmps
out
int3
scas
jnp
gs
enter
lar
dec
fdivp
or
xor
inc
xchg
jb
mov
outs
mov
mov
test
pop
mov
push
xor
adc
fcom
fist
repnz
add
stos
jl
inc
leave
gs
or
aam
inc
mov
retf
xchg
mov
push
mov
imul
imul
add
(bad)
mov
jl
frstor
xor
adc
mov
iret
leave
pop
cmps
add
(bad)
and
mov
sub
mov
popa
sub
or
xchg
xchg
data16
mov
aaa
sbb
mov
nop
and
push
mov
out
pop
xchg
retf
inc
dec
xor
dec
mov
mov
pop
adc
push
cmp
hlt
popf
jns
pop
loope
sbb
pop
dec
sbb
cmp
add
stos
mov
cmp
popf
arpl
pop
or
test
mul
add
jecxz
inc
addr16
lock
push
add
test
mov
popf
mov
into
inc
idiv
lods
lods
add
dec
pop
sub
mov
adc
add
inc
pop
mov
test
pop
call
push
mov
pusha
mov
dec
dec
xchg
fisub
sahf
imul
jl
jne
sqrtps
jno
cs
mov
mov
adc
les
test
pop
mov
stc
or
mov
inc
in
sub
and
jmp
dec
pop
pusha
imul
pop
inc
shl
icebp
rcl
jmp
das
add
(bad)
stc
push
shl
mov
outs
sub
or
call
mov
jne
sub
addr16
cmp
mov
cmp
sub
scas
aaa
cmps
cmp
xchg
adc
cwde
test
pop
movs
add
mov
imul
mov
xchg
sub
les
mov
inc
lock
fimul
loope
push
add
mov
add
xor
out
xor
ror
mov
imul
inc
stos
add
and
xchg
jnp
pop
jmp
jae
out
dec
or
sub
movs
in
xchg
scas
cmp
mov
sbb
jbe
int3
xchg
adc
shl
sar
rep
add
and
dec
cld
ffree
adc
outs
push
daa
mov
fstp
xor
inc
outs
ins
lods
mov
test
inc
out
fisttp
punpckhwd
sbb
xchg
xchg
loop
mov
xor
or
pushf
jno
push
and
push
les
mov
out
jmp
popfw
es
and
push
jb
call
mov
add
pop
inc
mov
sbb
xchg
mov
hlt
and
push
ror
pushf
mov
adc
mov
ret
fcos
xor
mov
mov
loopne
retf
or
xchg
adc
call
cli
sub
out
add
(bad)
pop
mov
adc
mov
cmp
repz
xchg
pop
rol
sub
imul
and
xchg
outs
or
lds
fcomi
outs
jge
retf
xchg
pop
gs
addr16
test
xchg
mov
pop
jno
lds
in
dec
jns
xor
fcomip
cmp
push
ret
clc
or
outs
sbb
repz
push
test
loop
das
popf
sahf
or
dec
xchg
pushf
xor
pusha
das
xor
or
or
addr16
xchg
ror
outs
mov
mov
bound
loope
scas
cmc
mov
pop
loope
add
xchg
pop
xor
js
sub
ins
pop
mov
call
in
pop
jmp
hlt
popf
arpl
mov
movs
dec
mov
imul
mov
iret
stc
inc
jp
sbb
nop
cmps
ja
and
mov
xchg
je
test
cmp
(bad)
movs
mov
mov
sahf
test
shl
rol
push
xchg
push
xchg
std
add
pop
push
lahf
enter
shr
xchg
dec
jb
and
cmp
shr
cmps
pop
adc
(bad)
lock
push
out
adc
inc
dec
mov
add
cli
xlat
or
call
ins
cwde
inc
inc
cmc
lea
out
push
xor
and
xor
sbb
and
fdivp
pop
add
call
jmp
jmp
dec
add
lds
mov
or
cwde
ret
ret
jecxz
cmp
loop
aaa
pop
icebp
push
jl
cmc
retf
cmps
fwait
sahf
std
push
out
movs
jl
inc
pop
sar
cwde
rcr
xchg
mov
cmp
push
movs
lods
ret
ss
push
jmp
in
mov
cmps
stc
neg
pop
inc
push
test
add
push
push
dec
out
sub
repnz
in
jns
dec
push
push
push
cmps
mov
outs
xor
jecxz
push
sar
and
mov
popa
std
test
dec
rol
inc
jns
mov
ss
stos
int3
enter
pop
int
mov
sahf
sti
pop
sbb
push
(bad)
leave
dec
cs
imul
cmp
cmp
or
mov
(bad)
sbb
inc
adc
jle
std
and
and
xlat
adc
aas
movs
fcomp
jbe
push
mov
ins
cdq
cmp
xor
sub
rcr
mov
dec
mov
push
jmp
and
out
cmc
jle
inc
out
add
pusha
xchg
xchg
aaa
add
out
test
mov
lods
push
jg
and
in
pop
aad
out
mov
call
xchg
adc
push
pop
and
adc
and
cmc
sub
aaa
shl
std
(bad)
jns
inc
mov
xor
std
and
call
cmp
and
mov
ficom
push
cmp
(bad)
dec
dec
out
lea
scas
sbb
mov
adc
sahf
aas
fld
mov
fidiv
fmulp
sbb
rcr
push
and
addr16
dec
push
icebp
retf
adc
sub
retf
adc
pop
push
mov
imul
dec
mov
add
add
out
ins
jecxz
push
or
add
push
and
inc
jo
int
cdq
jecxz
xchg
xor
out
cmp
mov
mov
push
icebp
sub
add
(bad)
mov
mov
sub
mov
rcr
jl
in
dec
addr16
and
iret
adc
dec
ds
cwde
sbb
fisub
in
mov
movs
test
inc
dec
and
ret
iret
pop
sbb
sbb
fs
adc
bound
rcl
imul
pop
call
sub
adc
or
dec
cmp
pop
adc
out
and
sbb
jno
jns
dec
mov
je
adc
in
xor
push
jle
jno
pop
les
mov
lock
or
mov
call
mov
ror
in
clc
loopne
into
fwait
cmp
ror
pop
ins
(bad)
and
fdivr
mov
and
pop
ret
and
clc
lods
into
js
pop
rol
mov
adc
cmova
mov
gs
dec
push
clc
mov
sub
stos
(bad)
movs
cmp
adc
mov
out
xor
ror
pop
imul
push
mov
aam
sub
and
dec
mov
or
call
jg
daa
sbb
test
mov
jge
push
sub
outs
pusha
xchg
and
hlt
or
rcl
push
iret
mov
(bad)
jg
fsubr
sub
mov
shl
mov
mov
mov
sbb
mov
lock
in
cmc
and
xor
je
test
retf
les
cmps
add
push
xchg
shl
mov
fistp
mov
sbb
mov
js
ds
shl
xchg
mov
xchg
fistp
movs
lds
imul
sbb
in
sbb
dec
lahf
inc
sub
in
mov
out
jge
push
out
es
test
ins
icebp
inc
cmp
add
mov
xor
cmp
shr
xchg
fild
mov
push
push
inc
push
xchg
in
inc
push
ror
add
in
mov
mov
rcr
dec
rol
push
mov
out
loopne
mul
lea
add
push
xor
mov
fsubr
neg
imul
lahf
sbb
test
xchg
xchg
sar
xchg
sub
and
nop
push
push
lea
or
or
push
ficom
dec
jae
cmps
mov
sub
gs
adc
dec
jp
mov
pop
mov
jae
(bad)
fild
and
jmp
or
cmp
jb
cli
jno
mov
jb
fwait
xor
imul
(bad)
les
lds
imul
mov
fld
dec
loopne
jle
retf
hlt
jp
in
or
fsubr
cmp
movs
mov
loope
xchg
push
(bad)
cwde
loop
jne
pop
xchg
jbe
(bad)
cmc
iret
mov
cmp
sahf
icebp
rol
xchg
mov
test
pop
inc
scas
into
mov
mov
movs
shl
cli
ins
xchg
inc
rol
or
mov
mov
mov
lock
add
cmp
jge
jae
fisttp
cmp
call
sub
addr16
in
adc
icebp
fld
enter
test
adc
dec
dec
lock
stc
dec
jecxz
xlat
inc
pop
xchg
arpl
push
(bad)
jmp
in
inc
jmp
dec
cmc
vxorpd
hlt
cmp
(bad)
retf
and
cld
xlat
mov
sbb
xor
fiadd
mov
xchg
add
sbb
retf
test
arpl
ror
addr16
pop
pop
movs
jmp
clc
aam
dec
into
mov
push
push
mov
xor
call
jbe
call
rol
inc
mov
(bad)
ss
xor
jb
or
cmp
ss
mov
dec
mov
out
mov
data16
test
fstp
push
shl
inc
imul
fldenv
sbb
addr16
or
mov
enter
mov
adc
lea
or
add
retf
aad
mov
mov
clc
fwait
inc
jg
push
sbb
mov
shl
inc
mov
pusha
test
xor
mov
stos
mov
push
xchg
icebp
sbb
sbb
and
dec
movs
lea
sbb
in
in
scas
loopne
pop
pop
xor
into
jmp
push
pop
push
jge
lods
sub
pop
inc
push
cmp
mov
ss
(bad)
sub
sbb
inc
in
mov
jno
or
push
sbb
in
dec
push
(bad)
sar
and
ret
fcmovb
mov
mov
xchg
push
ret
mov
cli
pop
std
dec
push
arpl
pop
or
jmp
fs
mov
(bad)
push
imul
pop
lods
cdq
adc
movs
es
push
mov
xchg
repz
inc
clc
or
retf
test
gs
jge
adc
int
push
or
rcr
xor
je
jmp
inc
add
dec
xchg
mov
int
add
stos
popf
popf
sbb
xchg
jecxz
or
mov
arpl
aas
add
mov
pop
jo
gs
and
and
aad
cmps
inc
cs
inc
cmp
call
dec
ret
lds
popa
add
aam
aaa
sub
loopne
repnz
cdq
sub
nop
scas
div
push
jl
jbe
iret
in
dec
adc
add
out
inc
aas
sbb
nop
mov
not
pusha
jg
sahf
mov
es
pop
retf
cdq
push
mov
shr
cdq
or
jecxz
cmp
imul
repnz
cmp
jns
push
cmp
ins
cmp
aad
pop
inc
clc
inc
sub
pop
dec
dec
push
bnd
or
jg
sbb
xor
aaa
cli
push
push
pop
push
cmp
inc
add
jl
mov
in
or
clc
push
mov
lods
cwde
jmp
test
jae
push
sub
data16
lea
jmp
mov
or
out
or
cmps
pandn
add
jg
leave
loopne
cli
adc
rcr
nop
pop
pushf
jne
add
out
mov
jg
jb
(bad)
sub
shl
in
pop
sbb
imul
loop
outs
inc
pop
clc
imul
fs
mov
imul
loopne
cdq
loope
scas
cmp
les
ins
loopne
and
lea
or
out
and
ret
out
add
fdiv
inc
push
cs
sahf
les
daa
adc
jne
lods
popf
jno
out
imul
cmp
pop
sbb
out
sub
pop
push
and
push
or
pop
arpl
outs
adc
cs
leave
les
adc
iret
add
mov
adc
pop
sbb
add
retf
cmp
pop
int3
push
lahf
loopne
mov
out
cmps
inc
sbb
jp
sti
push
sub
mov
retf
mov
jnp
pop
loope
mov
xchg
addr16
hlt
sbb
in
fmul
dec
push
jnp
push
int3
add
sub
mov
(bad)
mov
mov
shl
sub
or
fcomp
inc
nop
ret
pop
out
xchg
dec
mov
movs
ror
jp
loope
cs
or
xchg
add
inc
xor
pusha
pop
rcl
sub
fdivr
jmp
adc
leave
(bad)
mov
fisubr
mov
sahf
jmp
dec
xchg
mov
add
dec
and
mov
(bad)
cld
call
add
popa
stos
popf
adc
scas
jb
dec
or
xor
mov
xor
push
push
pop
mov
ins
lock
je
adc
ins
mov
pusha
mul
mov
cmc
push
(bad)
sub
ret
mov
je
dec
adc
mov
push
jns
adc
dec
mov
cdq
imul
stos
add
dec
out
popf
xor
sub
add
xchg
pushf
push
rol
ret
into
push
add
or
jo
mov
icebp
push
pop
mov
xchg
adc
push
inc
into
pop
outs
xor
push
and
cmps
mov
push
cld
jmp
xor
in
pop
ins
out
dec
lods
outs
mov
sbb
xchg
ror
cmps
dec
ret
cmps
adc
shl
pop
out
idiv
je
out
mov
shl
(bad)
call
and
xchg
scas
jge
xor
hlt
xor
das
add
shl
xchg
in
xchg
mov
js
jb
nop
pop
ss
push
ds
or
jb
int3
inc
(bad)
mov
retf
jae
int
in
(bad)
jle
pop
cwde
mov
mov
adc
xchg
dec
add
mov
jl
int3
ja
jns
movs
or
sahf
dec
mov
sbb
push
add
push
(bad)
fwait
push
pop
popa
js
les
mov
in
dec
outs
adc
push
xor
xchg
jmp
dec
and
out
sbb
pop
cmp
ficom
xor
ins
and
and
mov
les
stc
sbb
lods
jecxz
xchg
imul
or
sbb
cmp
xlat
jg
gs
dec
cmp
jecxz
fdivr
mov
cmp
fist
inc
push
pop
push
push
(bad)
(bad)
rol
ss
(bad)
in
pop
adc
pop
mov
dec
sar
test
rol
inc
and
imul
lahf
hlt
ret
pop
xor
aas
mov
jmp
ja
stc
mov
cwde
ficomp
cmp
call
icebp
cmp
lahf
inc
xchg
mov
jg
mov
loop
fdiv
inc
jae
sbb
xchg
jne
jp
mov
shr
(bad)
loopne
lahf
pop
xchg
mov
scas
dec
and
test
sub
jnp
pusha
mov
xchg
dec
rcl
arpl
pop
push
jbe
inc
add
or
cmp
mov
jp
fwait
imul
dec
fdiv
ja
mov
(bad)
fistp
jo
push
or
ds
lea
xchg
mov
mov
rcl
sbb
ja
dec
jg
les
jae
adc
cmp
and
add
sub
les
out
in
dec
xor
push
nop
fs
xchg
call
inc
js
daa
dec
jnp
shr
not
int
aam
mov
and
cmp
ins
xchg
mov
sbb
jae
outs
mov
cdq
fnsave
jle
mov
fisub
inc
xor
inc
dec
fmul
les
or
sbb
adc
(bad)
cdq
pop
pop
lahf
cmps
inc
in
add
push
inc
lods
test
and
mov
fcos
ja
push
aas
xlat
pushf
mov
inc
out
repnz
call
retf
add
dec
mov
fidivr
pop
sub
push
inc
add
sub
sbb
mov
(bad)
xchg
loope
mov
ror
stos
mov
push
aas
addr16
xchg
jae
or
push
mov
inc
mov
adc
pop
push
inc
ror
jae
xor
add
or
lahf
inc
and
pop
jmp
call
rol
inc
ins
clc
fcomp
xor
push
mov
cld
icebp
mov
sbb
jp
adc
adc
cld
aam
mov
inc
fsub
test
cmp
sub
push
sbb
pop
movs
sub
enter
and
or
push
mov
jle
mov
fsubr
and
inc
movs
pop
ficom
push
pop
xchg
push
ror
or
pop
lds
xchg
sub
jb
shr
mov
stos
mov
(bad)
leave
loop
push
imul
call
mov
mov
jmp
data16
jge
sub
call
push
cmp
jo
jle
mov
sub
das
repz
sub
jns
jae
(bad)
xchg
aam
aam
inc
fdivr
fcom
jecxz
jo
mov
push
cmp
int
add
inc
xor
stos
in
es
push
and
push
mov
mov
push
sahf
cmp
adc
sahf
mov
repz
jge
sub
inc
sbb
mov
dec
adc
and
clts
les
dec
lods
xor
jno
es
mov
inc
fist
rcl
xchg
lahf
jo
lock
cwde
mov
xchg
dec
test
dec
repz
cmp
cs
xor
pop
je
sbb
retf
xchg
imul
(bad)
mov
jge
iret
test
push
mov
inc
xchg
je
sub
mov
mov
outs
inc
push
jnp
out
sbb
lahf
jmp
xor
xlat
mov
fld
pusha
aam
jb
push
js
test
out
lds
mov
cld
sbb
sub
dec
mov
sbb
mov
sbb
xor
mov
rcl
enter
pop
js
push
stc
xchg
in
ins
jne
pop
inc
jne
ins
adc
xchg
pop
pushf
sbb
jne
in
popa
xor
aaa
mov
leave
scas
jne
pop
call
add
stc
mov
xchg
or
xchg
into
ja
mov
push
lock
xchg
lods
enter
inc
cwde
ins
and
adc
fstp
std
jg
jno
and
scas
sub
jmp
iret
adc
movs
mov
dec
gs
cmps
cmps
jbe
jbe
jo
dec
cwde
sahf
push
ret
mov
gs
ins
sar
sub
mov
inc
mov
cld
scas
stos
enter
lahf
jl
mov
push
test
dec
inc
mov
shr
stos
sub
shr
jp
xchg
sar
push
scas
daa
rol
pop
dec
cmp
adc
(bad)
add
repnz
int
pop
in
adc
daa
fwait
(bad)
(bad)
inc
adc
daa
mov
out
push
adc
rcl
dec
clc
add
cmp
std
test
inc
jae
ins
or
cmp
mov
push
xchg
mov
push
ins
xor
out
push
and
(bad)
pop
cmp
jno
pop
je
out
mov
cdq
sub
ret
sti
lock
cmp
jae
test
dec
scas
test
mov
outs
out
cdq
mov
add
dec
dec
jns
xchg
dec
xchg
jmp
push
stos
dec
nop
outs
or
pop
sbb
mov
jl
xor
xor
inc
and
xor
or
inc
sbb
into
sar
sub
out
out
retf
jae
mov
neg
lds
in
mov
pop
add
mov
aas
mov
pop
lea
jmp
dec
sti
and
scas
pop
out
sub
xchg
cmc
push
dec
aas
dec
fucomp
cmp
mov
clc
shr
test
push
add
xor
retf
je
aad
dec
sub
int
mov
mov
xchg
sub
jno
popf
mov
imul
shl
sbb
xchg
movs
cs
mov
jb
jno
test
movs
jp
xor
adc
out
nop
or
sub
aad
fcom
push
push
pop
imul
pop
addr16
and
rcl
cli
movs
(bad)
mov
into
into
loopne
fcomi
imul
dec
ficom
lods
call
inc
repnz
in
repz
push
cmp
neg
mov
hlt
jmp
cvttps2pi
out
popf
ja
pop
mov
loope
test
cwde
hlt
add
leave
sub
(bad)
adc
repz
out
lods
rcl
ror
in
inc
adc
xchg
push
out
dec
jns
adc
(bad)
cmps
daa
jns
and
daa
mov
in
and
mov
shr
push
test
(bad)
das
neg
dec
ret
mov
sub
scas
sub
push
pop
cmp
sti
pop
jns
inc
xchg
mov
jg
mov
leave
dec
cmp
fcmove
enter
scas
pop
ja
xor
call
(bad)
cmp
add
xor
add
dec
mov
jecxz
cmps
mov
in
out
rcr
fnclex
retf
mov
jnp
jp
fs
adc
fstp
pop
xchg
inc
mov
mov
mov
mov
les
inc
in
imul
xor
fdivr
xor
iret
in
out
pop
popa
add
and
in
cdq
outs
rcr
jmp
hlt
sub
dec
xor
push
in
call
dec
jne
(bad)
loop
ror
mov
xchg
aam
mov
rol
push
loopne
in
ja
jecxz
mov
adc
cmp
out
test
test
mov
dec
mov
sbb
cmp
outs
(bad)
and
jbe
rcl
cwde
adc
sbb
fnstenv
repz
dec
mov
xor
pop
mov
std
push
mov
add
inc
push
sub
jo
cwde
jb
call
mov
xor
rcl
test
sub
les
xor
outs
stc
mov
stc
pop
and
ret
adc
in
and
add
sub
lahf
push
adc
ss
rol
sahf
and
rcr
(bad)
cmp
out
mov
mov
pop
aas
scas
enter
push
cmp
aas
xor
fcom
mov
rcl
xor
ins
add
push
rol
xor
mov
les
scas
out
leave
jp
add
ins
scas
data16
xchg
sbb
(bad)
pop
pusha
jmp
jne
mov
mov
push
dec
mov
(bad)
hlt
push
jmp
inc
call
xchg
outs
icebp
cwde
sti
daa
bound
or
(bad)
lods
mov
mov
mov
xchg
imul
jmp
adc
repz
adc
jp
icebp
add
and
xchg
xchg
add
sub
pop
cmp
mov
cdq
pop
es
mov
ror
or
inc
xchg
lahf
mov
dec
dec
cmps
pop
(bad)
enter
or
ret
mov
ins
out
outs
loopne
enter
shl
dec
inc
mov
outs
or
lock
jae
jmp
cmp
cld
mov
xchg
scas
in
push
jp
or
arpl
out
sbb
sub
mov
jbe
shr
sub
lds
cld
shl
inc
sar
movs
jl
rol
jae
jle
shr
shl
bound
mov
(bad)
ficom
scas
inc
mov
shl
rol
and
mov
lahf
in
iret
mov
sti
fmul
cmps
inc
xchg
int
pop
fcom
lods
sub
sbb
push
clc
push
paddq
xchg
jmp
fisubr
cmp
stos
ret
xlat
pop
mov
shl
aas
mov
in
scas
(bad)
jl
fcom
fisttp
ret
and
add
shr
cmp
pop
fild
and
sub
fldcw
stos
fcomp
push
rol
sbb
fnstcw
dec
bound
js
out
iret
out
fdivr
stos
lds
dec
jmp
jle
push
pop
sub
ins
hlt
dec
sub
cwde
jb
inc
fnsave
loopne
call
aaa
mov
rol
push
cdq
mov
inc
cs
movs
enter
out
nop
xchg
and
mov
push
ja
cmp
sub
mov
jl
popf
push
pop
rol
imul
cmc
sar
pushf
pop
push
pop
jmp
push
cmc
jb
fst
in
scas
pop
inc
dec
inc
or
or
fild
dec
imul
xor
out
inc
mov
mov
inc
int3
popa
add
cld
mov
enter
xchg
pushf
cmp
pop
cdq
in
jae
mov
test
shr
and
pop
or
test
bound
adc
call
mov
jmp
mov
(bad)
sbb
push
in
ss
jae
or
add
cwde
das
std
sbb
cmp
inc
or
sar
outs
fs
movs
push
sar
test
xchg
dec
xchg
jno
push
sahf
xchg
test
sahf
rcr
xchg
loopne
clc
into
xchg
enter
xchg
lods
or
stos
cs
jmp
ins
sbb
in
dec
push
test
or
pop
cmp
push
bound
sub
jo
daa
test
fcmovbe
jmp
sbb
int
cs
push
mov
int
xchg
test
inc
jo
dec
out
sub
dec
sub
in
sub
or
sbb
outs
dec
mul
ss
test
jg
shr
xchg
jb
cmps
sub
inc
add
(bad)
jmp
sbb
wrmsr
mov
pop
aaa
(bad)
mov
or
cmp
add
dec
pop
push
test
dec
inc
ret
idiv
fs
test
dec
push
int3
(bad)
dec
push
push
and
shl
sub
xchg
cmp
nop
xchg
jbe
call
adc
sbb
daa
fisub
ror
cdq
adc
xchg
lock
retf
imul
retf
loopne
and
inc
clc
fucomp
cmps
mov
enter
sbb
bound
and
pop
leave
jnp
cmp
stc
hlt
in
enter
inc
sub
sub
stc
mov
leave
in
fld
mov
nop
inc
xchg
mov
or
gs
xchg
test
ds
sub
sahf
ja
popf
stc
jmp
loopne
outs
into
xlat
cmp
sbb
scas
inc
cmp
je
cmp
pushf
jmp
ds
xchg
push
pop
sbb
imul
fild
jnp
push
jg
cdq
jmp
or
mov
xlat
enter
sub
push
call
push
xor
movs
adc
adc
cld
stc
mov
jno
aam
push
push
inc
or
xchg
fcomp
or
pop
push
mov
sbb
or
jns
out
sbb
adc
in
cmps
jnp
sbb
mov
nop
cmp
push
imul
ins
fild
jp
jge
jp
popf
xor
sbb
aas
nop
and
add
push
ficom
jl
push
adc
mov
push
mov
out
sahf
xlat
dec
rcl
sbb
push
sub
fs
sbb
xchg
jp
xchg
sbb
xlat
out
mov
rcr
pop
inc
test
int3
and
test
div
mov
mov
mov
outs
xchg
cmps
dec
repnz
cmps
push
jo
nop
and
and
mov
sbb
sahf
push
rcl
inc
pusha
imul
push
test
retf
das
sbb
push
xor
sub
lock
aas
sar
xor
scas
fimul
dec
inc
clc
mov
not
pop
sub
lods
mov
and
jl
lods
pop
pop
psubsw
pop
mov
mov
inc
shr
sbb
jnp
call
pop
fs
mov
add
fdiv
mov
jb
jle
mov
ins
mov
add
cmp
out
out
(bad)
dec
jne
adc
inc
stos
imul
xchg
jnp
shl
push
test
add
dec
(bad)
mov
mov
dec
cmps
ror
mov
lock
add
nop
lods
or
or
xchg
push
cld
xchg
dec
or
pop
rol
push
fucomp
mov
std
cmc
popf
out
mov
adc
jmp
fld
test
mov
or
mov
loop
xor
mul
xchg
pop
pop
ja
mov
jmp
sar
sar
pop
push
sbb
js
lahf
mov
addr16
cld
cdq
jnp
pop
dec
ds
inc
nop
cmp
jnp
repnz
shl
imul
xchg
pop
retf
outs
(bad)
jmp
cmp
mov
(bad)
and
push
clc
nop
mov
loopne
gs
js
adc
nop
jno
pop
mov
xor
into
jnp
inc
push
sbb
aam
loop
fcom
std
jb
ret
outs
mov
imul
(bad)
enter
ss
mov
xchg
dec
pop
jge
and
pop
outs
xchg
ficom
shl
out
mov
in
cs
jae
loope
(bad)
push
mov
mov
pop
test
out
cwde
imul
jmp
xchg
xchg
sbb
jae
stos
cwde
inc
daa
xchg
push
jp
dec
jae
call
mov
arpl
jae
jmp
mov
dec
lods
les
imul
xchg
sbb
or
mov
xchg
fist
loop
adc
xchg
fisttp
add
mov
pusha
pop
mov
push
push
xchg
sbb
cdq
fcom
je
bound
adc
int3
fmul
lock
sbb
test
cmc
int3
scas
aaa
add
stc
and
nop
dec
arpl
or
in
ja
jne
jbe
or
xchg
sar
in
mov
aad
sub
out
xchg
mov
enter
xchg
pop
je
test
adc
pop
or
in
sub
xchg
loope
aam
cld
push
lods
data16
repz
xor
push
dec
dec
dec
ins
inc
int
mov
pop
mov
inc
pop
cli
div
repnz
aam
add
push
lock
(bad)
rol
arpl
fisub
fyl2x
jg
push
cmp
cmp
push
(bad)
dec
arpl
pop
jecxz
mov
push
scas
mov
ffree
pop
pusha
je
push
jle
test
test
sub
mov
in
scas
fcomp
lods
scas
clc
jo
push
and
inc
fidivr
adc
push
div
inc
mul
sub
pop
cmc
pushf
in
or
lock
and
and
mov
icebp
hlt
shl
jge
out
ins
scas
ss
icebp
add
leave
xor
mov
aam
mov
test
ins
push
mov
cmp
mov
add
aam
scas
dec
add
fidiv
jmp
mov
inc
and
mov
aad
xor
aaa
sbb
movs
or
mov
fisubr
add
mov
(bad)
mov
leave
cmp
dec
or
mov
mov
jmp
pop
or
sub
mov
xor
push
repnz
push
mov
out
rcr
mov
push
mov
shr
std
adc
xlat
pop
pop
shr
popf
daa
imul
mov
or
fmul
jg
mov
xchg
mov
inc
jbe
lea
not
push
jecxz
(bad)
cli
in
test
mul
sub
cli
nop
cs
and
in
cmp
dec
adc
pop
sbb
pushf
jmp
sub
lods
inc
jle
ins
out
mov
sbb
and
cmps
stos
into
fldenv
retf
sbb
xchg
jb
hlt
cmc
mov
scas
js
push
dec
ror
sub
pusha
out
test
xchg
mov
popa
mov
xor
mov
retf
xor
fucomip
mov
cmp
movzx
xchg
fs
sbb
jg
in
pop
push
test
xor
dec
cmp
mov
(bad)
test
dec
pop
mov
dec
in
stc
inc
mov
mov
movs
loop
in
inc
inc
fstp
int3
pop
push
jbe
sub
or
ror
movs
add
inc
add
popf
mov
inc
push
and
or
aaa
or
mov
adc
mov
jmp
push
int3
pop
add
mov
xchg
push
jg
movs
call
push
mov
movs
cmp
aad
push
pop
adc
(bad)
xor
shl
add
inc
jecxz
cwde
movaps
mov
mov
pop
iret
adc
sub
ret
enter
push
(bad)
and
mov
jnp
sbb
inc
push
fisttp
gs
gs
mov
aas
jns
xchg
add
sete
call
sub
sub
sbb
es
push
inc
push
movs
cmp
int3
dec
lock
mov
repz
xor
cmp
aaa
jecxz
inc
sbb
pop
mov
mov
iret
ins
pop
pop
(bad)
icebp
fsubr
mov
ins
xlat
imul
jae
jle
mov
jle
stos
cmp
dec
mov
mov
pop
int3
mov
cmps
push
cmps
dec
jge
(bad)
or
sub
pushf
clc
adc
es
cli
lods
sub
pop
mov
dec
sub
mov
int
les
pop
in
shl
xor
mov
test
or
lock
dec
(bad)
and
sub
outs
call
call
jecxz
jns
mov
push
sbb
repz
ja
mov
int3
pop
sbb
push
lods
sub
sub
in
jae
sub
out
out
pop
xchg
nop
xor
jno
int
out
aas
mov
and
in
adc
mov
cdq
push
es
pop
ja
(bad)
xor
jbe
dec
adc
lds
pop
mov
rcr
inc
in
pusha
leave
cwde
jl
(bad)
and
fisubr
xchg
xchg
mov
mov
aaa
cld
cmp
arpl
movzx
add
add
or
pop
ins
fs
xchg
mov
xchg
jns
dec
push
fs
mov
into
inc
cmp
sar
inc
cmp
xchg
jbe
xchg
fsub
popa
and
out
xlat
mov
movs
push
popf
push
push
sub
mov
mov
add
std
add
mov
pop
loopne
test
ret
dec
xchg
jmp
fsub
mov
or
repz
in
icebp
xchg
or
lods
xor
rcr
addr16
mov
pop
ins
fadd
mov
out
pop
push
inc
push
jecxz
mov
push
xor
mov
sub
aas
fidiv
in
fst
out
stc
inc
popf
call
mov
dec
ret
out
ja
mov
retf
dec
ret
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
sbb
add
push
add
add
cmp
mov
in
mov
mov
in
xchg
in
xchg
in
mov
mov
in
xchg
mov
in
cwde
in
scas
in
popf
in
lahf
in
nop
in
cdq
push
add
add
jb
mov
in
scas
in
stos
in
test
mov
in
and
test
mov
in
movs
in
xchg
in
xchg
in
xchg
in
mov
mov
in
mov
mov
in
scas
in
stos
in
lods
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
add
cmp
mov
in
cmps
in
mov
mov
in
mov
mov
in
and
xchg
mov
in
mov
mov
in
mov
mov
push
add
in
stos
in
test
mov
in
test
mov
in
mov
mov
in
mov
mov
in
lods
in
mov
mov
in
mov
mov
in
xchg
in
and
mov
mov
in
scas
in
popf
push
push
add
add
mov
in
mov
mov
in
fwait
in
mov
mov
in
xchg
in
mov
mov
in
stos
in
mov
mov
in
and
mov
mov
in
(bad)
in
scas
in
xchg
mov
in
mov
mov
push
pop
add
add
mov
in
sahf
in
test
mov
in
test
mov
in
mov
mov
in
scas
in
mov
mov
in
mov
mov
in
nop
in
mov
mov
add
push
in
xchg
in
xchg
in
test
mov
in
mov
mov
in
popf
in
nop
in
xchg
mov
in
mov
mov
in
cdq
in
stos
in
mov
mov
in
movs
in
mov
mov
in
scas
push
or
add
inc
in
sahf
in
and
mov
mov
in
xchg
in
call
in
and
lods
in
mov
mov
in
sahf
in
and
mov
mov
in
cdq
in
mov
mov
add
dec
in
mov
mov
in
test
mov
in
sahf
in
(bad)
in
mov
mov
in
xchg
mov
in
and
xchg
in
xchg
in
xchg
in
mov
mov
push
or
add
inc
in
mov
mov
in
popf
in
mov
mov
in
mov
mov
in
stos
in
mov
mov
in
(bad)
in
xchg
in
scas
in
xchg
in
mov
mov
push
or
add
arpl
mov
in
and
mov
mov
in
xchg
in
sahf
in
mov
mov
in
mov
mov
in
mov
mov
in
call
in
(bad)
in
mov
mov
in
test
mov
in
mov
mov
in
xchg
mov
add
pop
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
test
mov
in
pushf
in
mov
mov
in
xchg
in
mov
mov
add
dec
in
mov
mov
in
mov
mov
in
movs
in
(bad)
in
xchg
mov
in
popf
in
call
in
cmps
in
mov
mov
in
and
mov
mov
in
xchg
push
sldt
add
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
cwde
in
and
mov
mov
in
and
cmps
in
and
and
xchg
mov
in
xchg
mov
in
xchg
in
mov
mov
in
call
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
fwait
in
(bad)
in
cdq
in
xchg
in
mov
mov
in
xchg
in
(bad)
in
cdq
in
mov
mov
in
cwde
in
and
cmps
in
mov
mov
add
push
in
xchg
in
scas
in
lods
in
test
mov
in
cdq
in
mov
mov
in
stos
in
mov
mov
in
mov
mov
in
and
pushf
in
pushf
in
mov
mov
in
test
mov
push
adc
add
ins
in
movs
in
mov
mov
in
stos
in
test
mov
in
mov
mov
in
lahf
in
nop
in
test
mov
in
test
mov
in
test
mov
in
lahf
in
mov
mov
in
pushf
in
xchg
mov
in
lods
in
nop
in
xchg
in
lea
adc
add
outs
in
xchg
in
mov
mov
in
xchg
in
mov
mov
in
xchg
mov
in
mov
mov
in
(bad)
in
mov
mov
in
test
mov
in
pushf
in
(bad)
in
mov
mov
in
xchg
mov
in
mov
mov
in
mov
mov
push
adc
add
dec
in
mov
mov
in
xchg
in
mov
mov
in
xchg
in
fwait
in
test
mov
in
mov
mov
in
and
lods
in
(bad)
in
stos
in
mov
mov
push
adc
in
and
mov
mov
in
mov
mov
in
scas
in
(bad)
in
mov
mov
in
xchg
in
nop
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
mov
mov
in
stos
push
push
add
add
mov
in
xchg
in
xchg
in
pushf
in
mov
mov
in
and
mov
mov
in
xchg
in
cwde
in
mov
mov
in
xchg
in
mov
mov
in
mov
pop
add
add
mov
mov
in
sahf
in
cdq
in
lahf
in
mov
mov
in
mov
mov
in
mov
mov
in
stos
in
mov
mov
in
xchg
in
(bad)
in
xchg
mov
in
cwde
in
test
mov
in
xchg
in
mov
mov
in
lods
in
mov
add
mov
in
mov
mov
in
and
xchg
mov
in
xchg
in
movs
in
cmps
in
lahf
in
xchg
in
cwde
in
mov
mov
in
lods
in
(bad)
in
mov
mov
in
stos
in
test
sbb
add
pusha
in
cwde
in
xchg
in
pushf
in
mov
mov
in
mov
mov
in
and
cwde
in
lods
in
and
mov
mov
in
cdq
in
mov
mov
in
xchg
in
xchg
in
mov
mov
in
mov
mov
dec
add
fs
jns
sub
cmps
sub
(bad)
call
outs
js
mov
jno
xchg
push
jo
and
nop
dec
das
jecxz
ror
mov
mov
out
jnp
mov
popf
cmc
call
dec
mov
lds
neg
popa
pop
mov
ins
and
and
sbb
or
data16
xor
jnp
xchg
add
adc
pushf
push
inc
jbe
daa
out
dec
pop
rcr
nop
mov
dec
add
push
sar
xchg
out
inc
jno
inc
movs
lock
(bad)
and
and
mov
jb
test
out
and
jmp
mov
mov
push
dec
jnp
iret
xor
aas
or
mov
ds
rol
fcom
dec
ss
or
inc
jge
xchg
ret
sbb
cdq
xchg
(bad)
sbb
loop
lahf
aam
movs
lods
push
push
mov
inc
cmp
cmps
push
fcmovne
cmp
jle
pushf
xor
in
sub
cmc
call
xor
ds
sar
(bad)
daa
sub
mov
add
mov
add
mov
cli
mov
leave
xchg
mov
sub
shl
mov
add
pusha
jg
test
and
add
mov
jo
popf
pop
inc
push
out
aaa
push
push
or
push
fwait
and
js
push
(bad)
sub
or
add
mov
jnp
dec
cmp
outs
repnz
cdq
(bad)
pop
jmp
xchg
fild
cmp
add
sub
hlt
loope
pop
lods
mov
out
mov
inc
adc
mov
jbe
shl
xchg
gs
fsubr
and
mov
scas
mov
mov
dec
pusha
mov
xor
das
daa
or
mov
out
jecxz
and
aam
iret
add
fwait
shl
loope
jle
hlt
fisubr
cli
or
jmp
fst
xor
jne
or
sub
ror
jno
xchg
popa
mov
xchg
pop
push
bound
cmps
xchg
xchg
adc
jno
mov
mov
loope
in
into
call
das
inc
(bad)
retf
shr
mov
test
ds
int
call
inc
retf
or
call
push
sahf
and
scas
add
ss
leave
scas
(bad)
jge
push
inc
mov
cmp
jne
jmp
int
(bad)
stos
jns
test
aad
mov
adc
inc
and
xor
clc
je
or
fcmovne
mov
sti
xor
pop
inc
cmp
je
mov
clc
xor
dec
into
lods
sahf
int3
mov
in
mov
(bad)
jmp
iret
das
call
dec
add
mov
iret
ins
out
aas
ja
in
fstp
retf
aas
je
xchg
push
shr
enter
(bad)
hlt
retf
and
lods
fsub
(bad)
cmp
jbe
mov
xor
mov
sbb
shl
xchg
shr
mov
push
icebp
dec
fisttp
retf
mov
fdivr
cmp
lods
mov
xor
jg
sbb
or
loopne
ror
add
and
jecxz
iret
cmp
mov
sub
and
fs
fiadd
movd
(bad)
daa
pop
int3
cmp
(bad)
gs
mov
ins
mov
cmp
mov
cld
aam
pop
push
in
push
sbb
scas
loopne
rcl
pop
push
pop
outs
push
fdiv
ds
popa
push
popa
jmp
push
pop
in
out
div
adc
mov
jp
mov
rcr
push
ret
(bad)
mov
mul
sbb
(bad)
enter
ss
push
inc
in
mov
test
in
ds
addr16
add
es
add
mov
inc
sahf
pop
jecxz
and
cmp
cmp
bnd
pop
out
pop
cmp
xor
xchg
mov
ins
xchg
or
mov
cmp
cwde
sbb
add
in
sub
mov
adc
mov
inc
push
or
stos
push
or
jmp
add
out
cmps
ror
ret
add
das
retf
jmp
pop
stc
repnz
mov
or
ins
(bad)
inc
jbe
sbb
test
xlat
push
xchg
repnz
loop
ins
or
(bad)
push
push
inc
mov
aas
mov
test
add
sub
ins
pop
mov
mov
jb
(bad)
and
mov
ins
hlt
xor
repnz
add
jmp
pop
mov
dec
pop
push
sbb
xlat
pop
xchg
fdivr
mov
pop
aad
pop
cmp
xchg
nop
sub
or
cdq
icebp
dec
fiadd
mov
outs
das
mov
add
xchg
push
call
mov
outs
jnp
test
outs
inc
cwde
leave
cli
cmc
jge
inc
adc
dec
jge
out
(bad)
fmul
xchg
mov
test
mov
stos
add
xor
jmp
lods
ret
out
cs
fisub
fstp
(bad)
xchg
out
mov
into
sbb
outs
add
mov
(bad)
loop
cdq
js
out
ss
je
(bad)
or
add
and
fs
in
cdq
push
and
sbb
mov
add
aad
xchg
in
sti
aaa
xchg
xchg
stos
dec
push
cmp
test
cdq
popa
mov
mov
mov
xchg
mov
iret
out
mov
mov
or
mov
cli
icebp
retf
loopne
cli
das
fdivr
mov
mov
dec
mov
mov
scas
sahf
xchg
sbb
fwait
inc
data16
and
sbb
fst
frstor
lahf
pop
data16
data16
mov
arpl
inc
xchg
dec
sbb
mov
stos
push
enter
enter
mov
aad
push
movs
push
ja
mov
cwde
mul
push
xchg
adc
mov
xchg
sub
mov
jae
mov
and
and
movs
mov
call
outs
js
cdq
stos
push
aad
pop
pushf
mov
shr
xor
inc
call
pop
xchg
push
dec
int3
push
dec
shl
in
mov
aas
imul
fxch
ror
sub
push
outs
dec
mov
out
std
call
out
push
add
sahf
xchg
bound
xor
lock
outs
jmp
mov
or
dec
mov
cmp
imul
mov
push
aas
push
or
or
sbb
cmp
fsubr
outs
jecxz
nop
mov
or
ins
jb
mov
cwde
iret
sar
mov
in
fldz
dec
(bad)
or
dec
push
pop
add
movs
loop
pop
push
or
in
loopne
jno
mov
js
mov
xor
adc
xor
outs
fcom
div
mov
sbb
std
mov
in
out
jg
add
stc
push
leave
icebp
or
xlat
cmp
mov
leave
cmp
dec
in
pop
or
aaa
dec
cvtps2pd
mov
loop
ret
(bad)
xchg
or
stos
sbb
jecxz
xchg
bound
push
xor
ret
inc
mov
loope
mov
or
or
das
mov
dec
cli
loop
xchg
cmp
ficom
mov
sti
cmc
ror
daa
jl
ret
xchg
ss
jl
add
xchg
mov
fmul
idiv
stc
out
adc
push
push
cs
leave
ss
cmp
mov
enter
push
fwait
(bad)
adc
mov
inc
aaa
pop
pop
lods
out
mov
cmp
dec
test
rol
or
stc
out
xchg
int
sti
add
std
mov
mov
das
enter
jp
sbb
inc
popf
fcom
or
cwde
cmps
bound
out
rcl
dec
pop
loop
push
mov
dec
sbb
jmp
cli
neg
xchg
inc
or
push
lods
out
out
mov
or
fdivr
dec
cmp
cmp
jnp
add
imul
push
jg
add
inc
jne
mov
fstp
dec
stos
jmp
(bad)
mov
and
inc
xchg
inc
cmp
jae
retf
cs
mov
outs
mov
add
mov
xchg
test
mov
loopne
push
out
add
test
cmp
pop
sbb
mov
ds
jl
mov
or
cmp
sbb
mov
adc
mov
xor
pop
scas
xchg
dec
int
adc
(bad)
lds
aas
mov
pop
inc
sbb
arpl
and
das
loop
jae
xor
in
xchg
pop
jnp
cld
sbb
cwde
inc
out
retf
ins
js
xor
xchg
mov
retf
int
cdq
inc
mov
daa
xchg
shl
or
pop
push
mov
imul
xchg
jbe
cld
shr
xor
pushf
in
cld
ret
mov
sub
test
sbb
push
pop
or
in
mov
ret
inc
push
xchg
push
add
push
jle
aam
push
fist
out
push
fdivr
cmp
cmp
cdq
movs
inc
aad
adc
imul
adc
jmp
repnz
xchg
adc
cwde
ds
adc
cmps
xchg
stos
call
mov
dec
fldenv
jno
xchg
fdivr
sbb
cs
push
shr
jge
pop
ret
fisttp
stc
ret
push
in
or
push
cmc
dec
add
mov
cmp
push
jno
leave
sar
sbb
jl
jge
inc
out
sub
retf
cdq
pop
push
cmp
and
xchg
jno
test
test
fwait
rep
mov
jno
xchg
(bad)
lds
fwait
sub
and
pop
mov
aad
call
mov
inc
jg
and
(bad)
mov
jne
clc
js
jmp
in
mov
cld
sahf
fcomp
push
mov
(bad)
outs
push
out
(bad)
sbb
or
jg
sbb
xchg
dec
and
cmp
rol
fstp
inc
inc
ins
push
adc
and
nop
mov
xor
bound
sbb
movs
pop
ret
cmps
pop
imul
jl
loopne
aad
ret
cld
lds
xchg
mov
sti
jmp
(bad)
ins
sbb
dec
enter
or
jecxz
inc
adc
fsub
inc
movs
cmc
test
cmp
mov
add
inc
shl
mov
gs
pop
in
sbb
out
cwde
jmp
sub
cmp
push
aaa
xor
inc
pop
dec
ret
sub
imul
dec
out
imul
inc
sub
out
idiv
xchg
jle
pop
add
icebp
mov
sub
and
aas
and
loopne
pusha
xchg
inc
or
adc
mov
cli
jl
push
lahf
inc
mov
call
push
out
and
in
ins
jb
dec
push
pop
lea
sub
sub
xor
call
loop
pop
loop
push
test
adc
cmp
inc
sbb
lods
imul
inc
or
mov
sbb
fnsave
aaa
push
or
scas
mov
shl
es
into
add
mul
mov
dec
sub
push
jl
mov
pop
or
and
sbb
pop
cmc
push
mov
or
add
or
stc
add
neg
bound
jle
pop
or
push
shr
fcomp
popa
retf
dec
pusha
out
cmps
cmps
mov
ret
or
xor
pop
sbb
push
(bad)
mov
ins
scas
in
jbe
repnz
movs
sub
dec
in
arpl
stos
imul
xchg
lods
bound
je
or
rcl
imul
ss
mov
cmps
in
push
movs
cmp
cdq
icebp
or
jo
nop
mov
in
xchg
cwde
scas
jle
clc
test
mov
mov
int3
retf
cld
in
xlat
push
(bad)
and
mov
lods
inc
jo
movs
jmp
mov
add
call
iret
popa
lahf
pop
and
xor
and
push
lahf
ja
xchg
hlt
out
movs
xchg
ret
(bad)
jle
jne
div
pop
and
cmp
in
lahf
cmc
test
push
adc
adc
push
call
arpl
xchg
push
or
fnstcw
scas
or
mov
sub
push
(bad)
pusha
loop
sbb
pop
push
xchg
mov
in
outs
les
sbb
sbb
mov
mov
mov
scas
ja
loop
mov
shl
cmp
inc
jno
and
mov
(bad)
cmc
and
push
inc
into
sbb
nop
mov
xchg
push
mov
mov
ror
push
dec
push
sahf
mov
mov
sub
mov
std
cwde
push
jb
pushf
out
jo
jecxz
call
mov
outs
(bad)
cmp
mov
sub
movs
jle
xor
inc
pop
sub
and
mov
push
or
loope
int3
icebp
sar
fst
sahf
or
test
cmc
je
mov
fdiv
leave
retf
add
dec
pop
es
lods
out
inc
(bad)
mov
add
add
inc
mov
loope
(bad)
sub
dec
pop
out
and
push
rol
repz
pop
hlt
jns
repnz
loopne
repnz
cs
shl
pop
push
cmp
xchg
mov
pop
or
xchg
jnp
mov
jo
ds
fimul
sub
jnp
stc
aad
lock
dec
les
loope
inc
fwait
clc
jecxz
xor
fld
pop
nop
inc
xor
aad
fist
xor
or
cmp
mov
(bad)
sbb
pushf
dec
jmp
add
test
push
ja
add
js
in
xchg
ja
leave
test
add
xchg
and
outs
nop
adc
pop
jmp
aas
fdiv
fnstsw
sbb
xlat
dec
fwait
inc
in
and
and
push
not
push
leave
jnp
scas
and
cld
xlat
test
adc
sar
ret
mov
mov
pop
mov
nop
fsub
sbb
mov
and
and
jne
jnp
jl
cmp
adc
dec
cmc
xor
sbb
mov
mov
sub
aaa
stos
adc
xor
add
sbb
scas
clc
inc
sub
pop
rcr
sar
rcr
jnp
js
mul
shl
lods
sub
jge
dec
jl
(bad)
add
or
movs
and
cmp
xchg
(bad)
shl
push
pusha
jmp
repz
ss
test
cmp
clc
cmp
push
mov
pop
lods
or
jle
add
daa
pop
adc
push
adc
mov
int3
stos
lods
mov
xchg
addr16
pop
in
es
mov
dec
in
ss
cmp
jne
xor
sbb
ficom
and
mov
jb
add
push
sbb
add
ins
or
sub
xchg
shl
pop
fmul
mov
xchg
ror
fmul
mov
(bad)
ret
retf
mov
sar
jl
(bad)
iret
popa
enter
scas
shl
xchg
imul
das
sbb
push
sbb
mov
int3
popa
and
ds
pop
stos
test
and
pop
cld
add
inc
(bad)
fcmovnb
dec
mov
int3
fdivr
jmp
add
cs
in
(bad)
fdiv
fcom
dec
jge
xchg
mov
cmp
jg
ja
ret
xor
shr
dec
sar
fndisi(8087
xchg
pop
mov
test
mov
and
mov
jno
bound
ret
iret
pop
dec
loopne
fnstsw
(bad)
je
je
js
dec
nop
xor
sti
ror
cmc
and
jle
enter
addr16
jmp
xor
sbb
arpl
push
test
jbe
xor
sub
xor
ins
push
fsub
retf
jge
add
jne
loope
stc
ret
push
aam
nop
mov
mov
loopne
and
mov
sub
fadd
js
retf
cmp
mov
dec
jecxz
(bad)
out
sub
aas
or
in
dec
jg
push
pop
cmp
jbe
add
test
xchg
push
je
movs
scas
push
scas
scas
add
in
int
push
dec
in
popf
aam
pop
push
bound
(bad)
pop
or
jb
rcl
jno
jmp
or
mov
dec
sbb
fisubr
int
ss
pushf
push
dec
je
stos
dec
jne
jecxz
inc
ss
mov
cld
jne
aam
loop
pushf
inc
jbe
xchg
sub
adc
add
inc
imul
fistp
mov
ins
sub
add
sbb
shl
sbb
lea
xlat
inc
xchg
mov
push
out
mov
push
mov
test
std
mov
push
shr
jecxz
popf
or
ret
iret
or
lods
movs
idiv
imul
jge
jns
clc
stos
push
sub
rcl
cmp
movs
sub
pusha
in
sar
lods
inc
lods
or
ss
not
mov
jge
or
adc
dec
popa
out
fwait
jmp
fiadd
push
xchg
add
xchg
dec
loop
iret
or
shl
and
aam
push
jmp
pop
retf
and
jg
sbb
xchg
rcl
xchg
or
pop
pop
sub
das
cmp
add
enter
fidivr
movlps
scas
mov
in
push
cdq
jmp
jmp
mov
push
sbb
mov
sbb
mov
jnp
dec
stc
sbb
inc
ret
dec
shr
jge
inc
xchg
adc
es
loop
movs
push
add
sbb
mov
jb
repz
dec
fsubr
aad
cs
ret
or
mov
(bad)
jmp
mov
pushf
dec
ret
cmp
mov
mov
enter
sub
mov
pop
and
neg
jnp
sbb
fs
and
movs
pop
mov
das
ffree
aam
push
dec
shl
mov
xchg
outs
mov
mov
into
lods
or
or
cmp
mov
mov
aad
fnsave
push
jg
lods
(bad)
into
adc
and
push
cmp
adc
mov
fstp
dec
stos
mov
in
jno
outs
xchg
cli
mov
pop
xbegin
mov
sub
xchg
push
lods
sub
pop
mov
jmp
inc
push
cmp
sub
add
xor
movs
lods
cmp
jne
jge
iret
push
mov
xchg
iret
stc
dec
dec
pop
mov
pop
(bad)
sub
push
pop
bound
clc
clc
fdivr
push
in
ds
out
jb
call
in
inc
shr
pop
and
leave
movhps
imul
dec
add
push
inc
cwde
fadd
inc
push
jp
mov
jnp
lea
call
inc
dec
sbb
xor
cmp
mov
je
lds
aad
cmp
(bad)
sbb
hlt
repz
or
imul
cmp
aaa
mov
outs
pop
retf
shl
xor
scas
repnz
or
retf
out
fsub
cmps
pcmpeqd
mov
cmps
jmp
add
push
cs
loopne
rol
movs
loope
repz
outs
or
push
mov
ins
jnp
fwait
scas
and
xor
pop
outs
stc
jb
mov
push
outs
in
mov
sbb
pop
dec
(bad)
dec
stc
and
(bad)
push
imul
cmps
mov
xchg
out
movs
loopne
rcr
add
das
inc
jp
adc
xchg
mov
sbb
sub
and
inc
fs
jo
imul
mov
in
mov
xlat
leave
jg
icebp
or
jns
fidivr
jo
mov
leave
mov
push
dec
and
fs
dec
dec
ins
lods
cmp
add
push
mov
ret
jno
test
dec
into
push
pop
or
pop
dec
call
repz
je
xchg
dec
lods
fdivr
sub
ins
push
push
in
sbb
leave
and
mov
xchg
loopne
inc
fmul
inc
push
mov
mov
int3
add
loopne
jnp
sti
sbb
out
dec
test
xchg
push
rcl
cmps
push
movs
les
pop
cmps
popf
cmc
gs
scas
sub
aaa
mov
inc
jbe
pushf
pushf
stos
mov
or
or
push
shl
fisttp
ss
dec
sub
dec
adc
ss
int
mov
inc
push
pop
je
adc
pop
pop
ficom
enter
fwait
push
stos
movaps
cmp
dec
retf
sar
mov
sub
pop
jg
fidivr
pop
inc
ret
pop
(bad)
mov
mov
pushf
inc
out
fbstp
movs
jmp
or
ja
jle
cdq
add
retf
in
mov
mov
movs
jb
xchg
aam
repnz
or
gs
inc
ins
xchg
pusha
xchg
sbb
jo
pop
xchg
mov
ficom
cmc
push
push
xchg
rcr
out
xchg
sbb
icebp
push
out
test
pop
sbb
push
lahf
push
or
xor
loope
outs
pop
cmps
nop
enter
cmp
dec
inc
sub
or
cld
gs
hlt
jbe
sbb
aam
dec
add
(bad)
mov
fwait
sbb
jae
fsub
pop
jnp
ins
lahf
in
mov
push
fwait
mov
ins
lea
dec
xchg
jle
sbb
pop
cmp
inc
sub
mov
mov
pop
retf
mov
pushf
cmp
xor
inc
in
push
pop
mov
int3
scas
jb
mov
jmp
or
stos
add
pop
cmp
(bad)
jo
in
add
xor
pop
adc
xchg
ss
pop
inc
fisub
and
mov
addr16
bound
movs
clc
inc
adc
push
in
jecxz
fld
push
dec
xchg
pop
add
sbb
ja
jb
jnp
fadd
test
and
test
push
mov
push
add
jge
and
nop
aaa
loope
mov
call
xchg
js
jo
mov
push
or
mov
leave
and
xchg
in
ins
cmp
out
pusha
xchg
das
repz
inc
fcom
in
out
in
adc
fadd
push
(bad)
jne
and
dec
dec
xor
test
pop
sbb
add
sbb
mov
lods
rol
and
and
ds
hlt
sub
cmc
pop
dec
xchg
inc
jg
mov
xlat
es
xor
adc
outs
ret
ins
add
lods
aaa
push
pop
fs
cmp
cmps
push
mov
gs
leave
fsub
inc
mov
idiv
or
fld
pop
add
ror
fsub
jo
(bad)
sub
mov
jecxz
mov
xchg
jne
aas
push
pop
popf
ss
stc
mov
xor
add
inc
jl
xchg
imul
loop
and
je
cmps
out
dec
mov
repnz
outs
sub
(bad)
sbb
push
(bad)
fwait
lea
ret
js
sbb
aad
fs
out
iret
and
je
cmp
(bad)
fcmovnu
mov
inc
or
(bad)
inc
prefetchnta
arpl
lahf
data16
jno
out
jns
cmp
popa
add
inc
inc
and
or
shl
ds
int3
rcr
mov
inc
jne
and
call
pop
jbe
fidiv
sub
(bad)
bound
data16
jmp
add
and
xor
xor
cmp
aaa
call
cmp
adc
cmp
dec
(bad)
mov
mov
int3
repz
xchg
fbld
repz
pop
inc
dec
cmp
jnp
cmps
sbb
sub
jmp
jbe
fdivr
dec
fnstcw
fisub
mov
mov
ret
mov
mov
jmp
cmp
sbb
xchg
ss
repz
lods
stos
(bad)
cld
repnz
fwait
mov
pushf
mov
jno
and
aaa
arpl
iret
ficomp
int3
jns
xchg
or
sub
jb
pop
jno
cmp
dec
mov
xor
mov
mov
(bad)
repz
leave
xchg
(bad)
stc
adc
(bad)
adc
popf
push
out
call
xchg
sub
dec
mov
iret
pop
movs
pop
dec
jmp
ja
or
lahf
scas
jmp
pop
mov
xchg
lahf
xchg
dec
aam
xor
and
and
rol
add
pop
ins
je
test
inc
xchg
pop
retf
cmps
pop
push
out
stos
test
inc
fistp
push
(bad)
jmp
(bad)
int3
cmc
add
push
fidivr
retf
stos
sub
inc
jnp
fld
pop
xor
push
xor
push
retf
(bad)
stos
dec
adc
add
jle
call
mov
xchg
cli
push
sbb
mov
sbb
fnstsw
cdq
mov
jmp
(bad)
mov
js
sub
and
jnp
or
sub
adc
fisttp
std
out
push
xchg
fabs
mov
dec
ins
retf
or
push
fwait
xor
mov
stos
fnstsw
cmp
cdq
popa
outs
cmp
movs
cmp
aad
cdq
adc
in
cmp
mov
push
cmp
sbb
test
or
shl
inc
mov
sti
xlat
repnz
pop
movs
mov
adc
dec
push
and
dec
(bad)
icebp
jecxz
pop
xchg
push
div
sub
mov
cmp
ret
cmp
inc
test
add
les
and
fst
fld
xchg
pop
in
and
icebp
imul
aad
sbb
push
add
cli
cmp
mov
cmps
dec
shl
inc
lods
fs
mov
dec
push
mov
cmp
pop
mov
aaa
pop
mov
mov
out
mov
ret
and
or
lea
repnz
adc
out
out
mov
in
pop
je
mov
mov
test
jne
xor
ret
add
sbb
mov
mov
lahf
test
mov
cmps
cs
jge
test
ins
push
stc
cmps
push
mov
lods
mov
xor
push
retf
inc
cmc
or
mov
loop
jg
xchg
out
mov
test
loope
adc
inc
popf
pop
pop
sbb
add
add
enter
(bad)
popf
loope
ret
dec
and
clc
sub
and
mov
jno
out
mov
les
and
mov
pop
cmc
jmp
test
mov
fmul
jae
inc
cmps
or
ins
jae
mov
aam
xchg
or
ss
cli
add
cmc
(bad)
aad
adc
dec
inc
ror
inc
pop
push
shr
dec
cld
jno
push
daa
adc
mov
cmp
test
inc
cs
inc
jmp
jp
add
mov
fisttp
add
adc
or
movs
out
retf
mov
jmp
stos
bound
cmp
xchg
sub
dec
pop
adc
data16
es
test
jl
pop
int3
das
push
mov
pop
xchg
sahf
xor
mov
or
call
dec
aaa
ins
inc
push
mov
leave
into
mov
in
or
add
sbb
xor
mov
jge
dec
mov
xchg
sbb
push
scas
(bad)
mov
and
or
test
je
outs
jns
push
dec
mov
scas
mov
sub
xor
push
scas
loopne
xor
bound
xchg
add
lods
stc
cld
add
call
add
mov
sar
cmp
aam
(bad)
rsqrtps
mul
add
aad
data16
retf
jge
and
push
stc
outs
sub
inc
ret
(bad)
shl
cmp
and
mov
aam
fs
mov
xor
mov
repnz
arpl
adc
hlt
pushf
sbb
and
sar
ffree
ins
in
mov
push
daa
loop
push
and
nop
cmp
fsubr
mov
imul
hlt
cli
lods
scas
push
adc
sub
es
mov
jge
loope
or
paddd
mov
sub
int
and
jl
cmps
mov
lods
(bad)
sub
sub
mov
pop
aam
js
adc
inc
and
pop
adc
jl
mov
lods
js
mov
adc
in
call
and
movs
cwde
(bad)
jle
mov
fistp
mov
sti
dec
xchg
in
movs
fs
push
pop
jno
xor
push
push
add
cli
stos
test
stos
sub
pop
or
mov
loopne
add
push
ror
out
mov
mov
dec
cwde
add
movs
jp
cmp
ds
mov
fwait
mov
cld
mov
enter
mov
mov
mov
cmp
inc
inc
cli
adc
sahf
pop
fild
mov
outs
lea
sbb
mov
xchg
sti
lods
movs
add
xchg
aas
arpl
pop
dec
cmps
jle
pop
outs
shl
inc
shl
test
rcr
ret
fst
lods
cmp
bound
fs
push
fwait
cmps
cmp
dec
adc
imul
sub
adc
scas
xadd
out
das
or
jmp
in
pop
lods
repz
jns
clc
lods
ret
(bad)
repz
lds
xchg
shr
(bad)
fsubrp
cmp
call
fsub
jecxz
dec
push
popf
push
adc
cmps
xor
add
imul
inc
fsubr
enter
add
div
xchg
dec
mov
pop
cld
jge
ins
and
xchg
sub
dec
xchg
cmp
in
lods
hlt
jns
push
or
das
imul
enter
add
pop
repnz
dec
pop
or
stos
pop
popf
fcom
out
cmps
xor
addr16
movs
jmp
jnp
imul
mov
dec
mov
out
das
cs
lahf
fadd
stos
inc
std
cmp
fcomp
adc
xor
sub
pop
in
pop
popa
jns
jae
inc
mov
loope
xchg
jnp
jo
cmp
iret
loope
pop
pop
movs
sbb
pop
add
data16
int3
and
mov
gs
sub
add
or
xchg
mov
sbb
pushf
iret
(bad)
mov
push
call
cmp
xchg
sub
push
scas
sub
sub
mov
pop
mov
lea
add
pusha
mov
xchg
jg
scas
mov
ss
adc
xlat
sbb
and
icebp
loopne
fistp
push
sub
jnp
xchg
invd
mov
ret
sbb
mov
mov
retf
mul
mov
push
jbe
cli
mov
xor
cmp
int
(bad)
mov
xchg
mov
lods
xchg
lock
imul
cmp
ds
mov
lock
xchg
inc
ds
mov
add
jg
fisub
and
mov
fisttp
xchg
push
loop
add
je
adc
aaa
xor
sub
cli
cmps
cmp
jb
(bad)
ss
scas
aad
add
cmp
pusha
and
jbe
sub
test
and
and
je
push
or
repz
xor
dec
cmp
adc
bound
add
retf
or
xchg
(bad)
fcomp
(bad)
mov
cmp
fs
aas
mov
in
test
or
cs
ror
inc
loopne
push
sub
xchg
jnp
dec
call
lahf
fdivp
les
jmp
fidiv
sti
mov
cmp
push
fadd
movs
inc
imul
daa
stos
jl
and
jp
lock
clc
mov
or
or
std
adc
cmp
dec
adc
loopne
xchg
cdq
std
and
xchg
push
xchg
retf
ins
fwait
mov
cmps
lahf
rcl
mul
jmp
das
popf
push
in
mov
hlt
adc
in
cmps
ins
ret
sub
or
sub
push
adc
add
out
fsub
pop
mov
popa
je
push
shr
dec
mov
push
mov
scas
push
xchg
and
mov
pusha
push
xchg
pushf
bound
xchg
xor
movs
push
inc
imul
adc
cmp
or
pop
jbe
push
fwait
sub
jl
or
lods
cmp
mov
je
int
stos
xchg
push
imul
lods
xlat
cld
dec
cwde
fisttp
mov
pop
sbb
adc
push
mov
test
popa
cmp
dec
cdq
les
bound
das
mul
in
cmc
nop
jge
fadd
setns
das
jmp
pusha
dec
fidivr
arpl
mov
int
test
jb
pop
xor
data16
inc
pop
int
jp
lea
pop
inc
retf
push
(bad)
xchg
push
iret
test
inc
dec
pop
loop
popf
mov
xchg
mov
jb
mov
mov
mov
in
les
movs
test
pop
in
pop
and
add
in
xor
mov
mov
aas
cmp
inc
cmps
cmp
cs
repz
ja
lds
(bad)
stc
adc
inc
and
dec
out
push
or
push
mov
mov
lock
inc
sar
and
js
nop
stos
inc
stos
add
addr16
in
mov
addr16
cmp
out
push
call
loopne
cld
add
int
rsm
sub
mov
add
adc
xchg
test
xchg
out
ins
pop
cmp
pop
cmp
stos
jp
rcl
cwde
jno
or
data16
das
mov
cdq
je
jno
not
es
add
mov
leave
push
push
stos
mov
add
dec
out
test
mov
or
(bad)
inc
daa
jg
mov
and
fdivr
dec
leave
neg
push
scas
test
retf
dec
xchg
repnz
std
jecxz
test
fs
xchg
sub
out
sbb
xor
add
inc
push
cdq
add
hlt
scas
mov
rcl
and
dec
(bad)
cld
nop
mov
popf
call
movs
push
mov
sbb
mov
jecxz
xchg
imul
(bad)
mov
in
cmps
bound
stos
test
ds
push
mov
sub
(bad)
sub
popa
sbb
mov
jbe
cmp
(bad)
loopne
div
xchg
enter
nop
mov
outs
pop
je
sar
(bad)
lods
xlat
mov
mov
pop
inc
jl
cmp
cmp
push
hlt
sbb
xor
mov
mov
xor
in
dec
xor
popf
sbb
jge
or
jno
scas
ins
jnp
pop
sbb
fisubr
jp
dec
pop
leave
ficomp
jmp
out
pop
scas
addr16
movd
fidivr
data16
dec
push
inc
jmp
sbb
jge
retf
sub
jle
mov
cmp
pop
push
mov
shl
and
ins
sub
inc
xor
add
fwait
jecxz
in
sar
fld
xor
cmc
mov
xor
mov
cmps
mov
movs
xor
pop
fiadd
imul
daa
sti
das
lahf
pop
(bad)
mov
repnz
xor
sub
mov
xchg
adc
mov
dec
in
add
lds
out
and
pop
inc
dec
mov
test
shr
xlat
fadd
xor
adc
sub
in
push
pop
sub
(bad)
(bad)
out
ja
jb
xor
cmps
std
lea
xor
fcom
mov
pop
mov
push
test
mov
jnp
fld
sub
stc
cmp
aad
cwde
add
sub
push
cmp
jne
and
inc
lahf
ja
out
stc
jbe
test
lahf
mov
cmp
(bad)
(bad)
je
mov
fnstenv
cmc
in
test
out
nop
push
push
cmp
inc
movups
cmps
std
push
and
out
(bad)
popf
mov
mov
push
ins
outs
dec
fmul
out
jo
jne
pop
ins
daa
jge
sub
dec
ret
xor
adc
or
cli
fistp
xchg
adc
push
leave
(bad)
neg
add
dec
dec
sbb
lods
ret
sub
mov
jmp
ss
adc
pop
pop
movs
cld
and
lods
loope
adc
cmp
fistp
int3
mov
or
jmp
add
cmc
(bad)
and
adc
dec
popf
int3
and
jae
loope
nop
stos
out
retf
mov
sub
mov
mov
push
aam
cmp
pushf
jge
enter
inc
adc
sahf
add
clc
rcl
jg
outs
(bad)
and
addr16
jns
inc
or
pop
mov
or
les
inc
ror
pop
xchg
inc
call
pop
push
cwde
push
pop
icebp
int3
pushf
dec
fistp
(bad)
sbb
cmp
xchg
into
test
push
cdq
jg
dec
in
xor
cld
(bad)
sub
dec
add
test
mov
cld
push
(bad)
mov
test
xor
mov
sbb
in
adc
lahf
je
push
pop
or
icebp
mov
mov
adc
xchg
sbb
out
out
(bad)
push
add
inc
jns
xchg
xchg
popa
cs
(bad)
mov
fldcw
mov
loopne
cmps
ficom
xor
hlt
push
sbb
call
js
jecxz
out
add
addr16
sub
jbe
adc
arpl
add
inc
aaa
das
ficom
call
neg
cmp
je
pushf
jmp
sti
test
and
rcl
and
adc
daa
push
or
test
pop
adc
ret
add
(bad)
cdq
add
ins
mov
or
jl
mov
popf
loopne
lahf
pop
xchg
pop
out
sub
jbe
cdq
adc
mov
adc
rcr
xchg
jle
add
imul
pop
sahf
mov
xor
inc
sti
cmc
call
cmc
stos
dec
mov
imul
js
jno
pusha
inc
imul
imul
inc
cwde
xlat
out
or
leave
ins
push
shl
jp
dec
cld
or
pop
mov
out
out
mov
test
mov
and
lds
mov
hlt
test
rcr
in
jmp
and
push
push
repz
or
in
push
pop
lods
out
cmp
in
pop
push
into
or
leave
and
sub
mov
ds
xor
xor
std
sub
fwait
out
arpl
gs
mov
fimul
sub
out
or
add
clc
fsubp
push
or
mov
out
test
out
cmp
dec
jbe
jns
xchg
pop
push
cmp
imul
mov
stc
lds
pop
int
in
push
ja
sub
fldcw
or
jle
das
bound
pushf
push
pusha
das
mov
sbb
les
jl
jb
cdq
jbe
call
ds
into
icebp
xor
mov
outs
adc
push
aaa
push
lea
dec
mov
lds
dec
xchg
fdiv
cli
fcomp
and
hlt
or
pop
xor
pop
ret
xor
inc
jp
imul
jmp
dec
sahf
ret
push
or
lahf
push
or
lahf
test
je
scas
je
out
or
hlt
jp
jl
int
push
sbb
(bad)
gs
mov
out
fs
(bad)
sbb
std
add
mov
cdq
rcr
ds
pop
leave
mov
fisubr
idiv
test
stos
push
call
and
add
inc
int3
jmp
xchg
push
pop
push
(bad)
mov
jno
push
and
pusha
and
enter
imul
inc
and
lods
pop
inc
sbb
xchg
mov
mov
fadd
repz
outs
data16
rcl
xchg
fcmovne
bnd
les
inc
mov
and
add
arpl
lods
adc
scas
std
in
fs
sbb
lahf
stos
dec
xor
addr16
lahf
into
mov
retf
jbe
in
aas
sbb
add
or
fmul
mov
or
(bad)
imul
xor
mov
mov
(bad)
and
sbb
std
mov
ins
sar
push
xchg
les
ds
push
push
push
mov
ds
jne
add
jmp
or
arpl
cmp
cdq
loopne
mov
int
sti
cs
adc
mov
cmp
add
jae
out
mov
dec
call
adc
out
mov
fidiv
bound
bound
mov
xor
frstor
(bad)
imul
inc
and
mov
arpl
sbb
pop
sti
and
push
dec
adc
ror
jecxz
mov
push
mov
pop
loope
mov
inc
sahf
out
ffreep
pop
cdq
scas
mov
stos
cmp
mov
icebp
test
pop
and
and
cmp
sbb
aad
test
imul
js
jg
xlat
or
push
push
fsubr
inc
mov
fs
pop
aam
fisttp
call
enter
adc
inc
sub
mov
int3
push
loopne
cmps
cdq
ja
push
push
adc
mov
not
jmp
jb
imul
mov
jecxz
or
mov
(bad)
xchg
(bad)
clc
gs
add
push
(bad)
mov
in
add
sub
movs
cdq
lods
jo
jp
gs
nop
mov
aam
pop
ds
add
mov
jmp
js
xor
leave
xlat
jo
cmps
mov
pop
pop
jle
daa
xchg
push
sub
cmp
data16
movs
pop
repz
es
(bad)
sub
add
mov
and
add
dec
lods
jae
stos
pop
scas
pop
pop
in
out
xchg
retf
out
out
sbb
sbb
(bad)
sti
ja
and
fwait
pop
pop
loopne
iret
lods
pop
cmp
out
push
mov
push
das
nop
cwde
mov
mov
pop
push
in
inc
or
call
and
inc
sti
cmp
pop
(bad)
iret
and
div
icebp
add
in
jne
call
push
fistp
xchg
push
shr
and
mov
dec
out
add
dec
fdiv
daa
ret
dec
xchg
stos
push
out
cmps
mov
lds
aaa
dec
mov
sbb
xchg
inc
cld
push
push
stc
leave
xchg
sar
jl
dec
push
xchg
aad
aam
push
xchg
cmp
fwait
or
fwait
mov
xchg
mov
xchg
adc
adc
ret
sub
hlt
nop
inc
xor
adc
das
sbb
fs
pushf
shr
cmps
jae
dec
dec
mov
xor
xchg
(bad)
into
iret
stos
sbb
dec
sub
mov
xchg
bound
add
retf
retf
xor
repz
ret
sub
and
or
push
push
addr16
dec
inc
mov
aad
addr16
inc
test
outs
add
scas
repnz
mov
mov
mov
das
imul
pop
cli
lock
bound
ror
fsubr
ds
cli
push
push
(bad)
stos
outs
cld
(bad)
leave
xchg
lea
cmp
lea
and
cs
add
dec
shr
stos
cwde
mov
push
jnp
adc
stos
xchg
ret
mov
sti
pop
xchg
fist
cmps
jle
pop
out
pop
or
push
test
call
outs
cmp
adc
icebp
aam
je
xchg
lods
stos
cmp
(bad)
xor
xchg
sub
cwde
mov
enter
push
xchg
xchg
pop
or
retf
bound
mov
cld
fidiv
xchg
daa
cmc
sbb
xchg
cmps
aaa
jl
les
mov
inc
inc
retf
sub
cmp
ret
fstp
retf
or
or
jbe
sub
lods
sbb
retf
test
(bad)
jo
ret
test
fnstenv
test
popf
aas
outs
pop
add
or
ss
mov
jns
lds
call
or
or
pop
or
ins
lds
lea
push
aam
push
pop
scas
jecxz
dec
in
movs
into
fild
cmp
ret
cmps
imul
stc
mov
(bad)
popf
inc
imul
mov
mov
push
repz
cli
or
sub
repnz
xchg
and
in
es
icebp
pop
(bad)
aaa
mov
xor
dec
movs
jnp
jno
ss
ins
mov
or
add
inc
ja
ficom
cmp
and
ss
fcom
xor
(bad)
pop
pop
cmp
imul
xlat
cmp
lock
cmp
lock
fs
xchg
aad
shr
iret
retf
jmp
mov
hlt
loop
or
rcr
push
and
fistp
lock
ror
out
call
test
sbb
and
xchg
inc
je
fst
mov
pusha
sub
or
in
scas
mov
sub
stos
mov
xchg
std
push
dec
ret
stc
clc
jp
mov
xor
repnz
jmp
or
cmps
enter
mov
xchg
xchg
mov
adc
sub
push
and
cmp
retf
adc
or
mov
xor
dec
mov
mov
test
test
lods
xor
jne
stos
daa
add
mov
jp
push
push
into
or
adc
dec
pusha
fwait
ds
cmp
and
inc
jg
xchg
imul
dec
cmp
jecxz
test
or
fwait
test
mov
inc
adc
(bad)
rol
mov
xor
pop
loop
jecxz
sub
mov
movs
fisub
in
lahf
inc
pop
in
pop
xchg
sbb
jnp
in
popf
mov
mov
fcom
cmp
sub
sub
jnp
(bad)
pop
test
js
inc
hlt
or
jl
ret
add
imul
xchg
ror
jp
mov
sub
in
inc
mov
mov
or
xchg
outs
xchg
repz
iret
adc
jge
jle
sbb
pop
das
mov
loope
les
(bad)
mov
xlat
cmp
add
push
mov
popf
cld
jle
mov
push
cmps
call
fst
push
outs
ror
outs
mov
pop
push
xchg
stos
mov
jmp
aaa
jbe
pop
fwait
loop
cli
xchg
xchg
mov
and
cmp
popa
xchg
(bad)
je
call
iret
sub
inc
jno
push
test
scas
sbb
add
inc
adc
adc
mov
out
stc
aam
cmc
popf
ret
(bad)
cmp
adc
adc
imul
mov
rcr
ffreep
push
out
jmp
das
push
dec
daa
or
jp
iret
pop
xlat
in
jne
shr
jmp
sahf
data16
dec
shl
repnz
jg
and
cmp
pop
addr16
mov
sub
xor
(bad)
mov
mov
push
and
push
lods
fs
test
enter
test
and
repnz
mov
call
test
jno
test
sbb
sbb
push
cmp
xor
inc
es
retf
fwait
in
mov
push
cmp
add
gs
loop
ja
rcr
xchg
int3
shl
sub
jge
mov
xor
lods
fld
pop
(bad)
adc
jecxz
int3
nop
loope
xchg
std
push
mov
sbb
cmp
mov
push
ror
inc
outs
xor
fild
icebp
push
and
ins
and
pop
mov
cmp
inc
sub
mov
call
(bad)
push
test
outs
cmps
or
inc
outs
data16
enter
int
call
mov
sub
jl
pop
pusha
ror
xor
mov
test
addr16
or
nop
in
dec
cmps
test
sbb
dec
jnp
jp
movs
cmp
cmps
jae
and
outs
out
cmps
mov
out
pop
push
sar
xor
sub
inc
mov
pop
fld
jns
test
adc
dec
popa
out
xchg
sbb
shl
inc
and
inc
mov
cwde
mov
imul
mov
in
add
sbb
xchg
sbb
leave
int
xlat
lods
imul
sbb
jb
jecxz
mov
pop
mov
mov
repnz
les
jne
cmps
xchg
je
push
sahf
push
xchg
popf
mov
es
cmp
mov
(bad)
sub
out
out
sahf
dec
mov
sub
sub
cmps
das
sub
repz
dec
xchg
xchg
cs
(bad)
iret
loope
push
pop
aad
sahf
test
add
or
jo
(bad)
les
xchg
push
test
xor
test
inc
sti
mov
push
js
shl
inc
jnp
xchg
data16
push
pop
loop
retf
call
mov
cld
pop
aaa
mov
dec
sti
push
or
fadd
aas
fistp
push
inc
jno
or
fisttp
dec
mov
sub
mov
sbb
mov
mov
mov
sar
fdiv
sti
xchg
ja
mov
rcl
push
das
es
inc
aas
fstp
adc
aaa
in
add
lods
or
sbb
loope
stos
adc
mov
dec
cmp
(bad)
addr16
pop
add
cdq
xor
jb
pop
xchg
(bad)
js
test
dec
sub
push
sar
fstp
jp
pop
or
cmp
rol
(bad)
cmp
xor
loopne
pop
and
cmps
cmp
pushf
xor
mov
add
dec
cmp
arpl
out
in
imul
adc
mov
xor
div
out
int
(bad)
(bad)
jnp
ss
adc
or
sbb
imul
xchg
dec
outs
add
adc
rcl
cdq
cli
xlat
push
retf
mov
push
iret
sbb
pop
jmp
int3
sub
popf
movs
push
or
ficomp
sbb
mov
dec
inc
cli
jle
cmp
loop
mov
or
fs
enter
cld
mov
mov
xchg
leave
test
sbb
rcr
fwait
imul
sbb
sbb
jecxz
jne
cld
(bad)
jmp
adc
xchg
mov
jp
pop
mov
pushf
adc
mov
loope
pop
bswap
sbb
dec
ret
jns
mov
ja
mov
push
push
enter
or
xor
jp
ds
mov
push
sbb
in
lahf
or
test
xor
(bad)
adc
push
xchg
pop
rcl
and
jp
xor
add
imul
jne
jno
and
js
mov
(bad)
xor
xchg
cs
or
push
shr
jb
lods
cmps
rol
std
into
nop
(bad)
test
jmp
imul
push
aad
add
push
mov
pusha
in
(bad)
pop
cld
cmps
call
push
lds
pushf
mov
push
cwde
dec
into
in
rol
movs
test
inc
inc
jnp
add
adc
repz
and
cdq
dec
cmc
mov
mov
ins
sub
icebp
fwait
jo
cmps
fsubp
push
ins
push
ficomp
xchg
xchg
imul
xchg
cld
push
lea
xchg
ror
fadd
les
cli
mov
mov
shl
add
inc
mov
loopne
xor
gs
sbb
xor
xor
jb
mov
jmp
sub
push
arpl
sbb
in
dec
aaa
sti
push
js
int3
sbb
inc
xor
enter
and
cmp
ss
xchg
int3
lock
fimul
xor
js
mov
pop
mov
pop
pop
xchg
(bad)
jmp
out
lods
inc
xor
and
pusha
or
push
dec
mov
loop
sti
dec
hlt
data16
and
xchg
mov
push
jmp
ins
dec
popa
ror
pop
add
sub
int
dec
xlat
dec
pop
sub
jb
imul
arpl
push
sbb
sbb
mov
popa
cdq
in
fs
xchg
cmp
jns
aaa
loop
pop
mov
jg
adc
(bad)
dec
inc
pop
adc
je
pop
scas
clc
or
mov
push
fistp
dec
mov
test
fild
pop
sbb
dec
pop
iret
mov
inc
jns
mov
out
ret
clc
dec
jl
repz
sub
clc
addr16
rcl
rcl
dec
fcom
dec
add
iret
push
push
mov
xor
mov
fistp
mov
push
jnp
repz
lods
mov
sbb
push
add
fs
inc
popa
bound
sbb
std
hlt
iret
call
xchg
sub
loopne
fstp
pop
(bad)
fimul
aas
clc
mov
(bad)
pop
xor
sti
arpl
scas
mov
test
xor
mov
mov
xor
jbe
cmp
mov
mov
adc
mov
mov
popa
jg
cmc
js
gs
loop
fdiv
pushf
in
je
pop
mov
mov
inc
inc
mov
push
loope
push
sbb
xchg
mov
mov
retf
rcr
int
mov
mov
pop
mov
mov
xchg
push
and
mov
pop
add
mov
sub
int
ret
daa
data16
sub
scas
adc
or
inc
sub
xchg
mov
aad
cmc
push
mov
icebp
and
jb
mov
shl
daa
xlat
adc
pop
cli
push
pop
(bad)
adc
rcl
out
jecxz
cmp
or
cmp
pop
xchg
add
xchg
jmp
stc
mov
jmp
pop
into
out
in
adc
mov
jo
sub
mov
pop
push
into
pop
aam
dec
mov
bound
jl
lods
and
bound
scas
xor
ffreep
out
jbe
retf
xchg
mov
inc
rcl
mov
mov
sbb
jae
add
cmp
cmova
mov
repnz
mov
mov
and
outs
std
sbb
stc
add
or
outs
pop
out
xlat
push
push
clc
ss
div
ficom
cld
je
retf
fwait
sub
aad
push
or
lods
lds
jb
sbb
xor
lods
sub
jb
pop
fs
loopne
adc
ror
push
and
or
gs
outs
call
push
test
mov
sub
push
int3
and
push
or
aam
ficomp
shr
and
adc
jnp
mov
xor
sbb
pop
jge
sti
jmp
push
lds
jmp
gs
pop
repnz
mov
sahf
mov
mov
sub
mov
dec
(bad)
dec
outs
or
loopne
in
or
xor
out
lods
adc
cmc
xor
movs
xlat
jmp
retf
xor
jo
xchg
sbb
xchg
fs
sbb
(bad)
sub
je
and
hlt
outs
or
addr16
adc
loope
and
fimul
shl
pop
int
push
lahf
popa
fiadd
cmp
test
mov
lds
jb
popa
mov
mov
add
jl
xor
dec
cmps
scas
inc
cwde
push
push
dec
jb
adc
cdq
xchg
das
adc
mov
lock
cmp
out
out
or
push
mov
jmp
cmp
push
in
(bad)
dec
(bad)
sbb
push
cmp
sub
dec
mov
aad
inc
adc
dec
dec
sar
jge
daa
pushf
mov
pop
aad
mov
xor
xor
xor
cmp
int3
push
ins
and
in
xor
cmp
pop
mov
test
push
std
(bad)
sti
ror
lock
(bad)
push
inc
icebp
xchg
popa
jo
mov
lahf
dec
adc
adc
leave
inc
popa
loope
out
cli
xchg
test
sahf
das
pop
loope
mov
popa
(bad)
mov
jecxz
cmp
jno
add
push
push
dec
mov
and
xchg
bound
outs
sbb
sub
cli
jl
and
sbb
mov
push
mov
sbb
pop
xor
mov
xchg
pop
xchg
pop
fs
hlt
or
cmps
inc
in
xchg
pop
ror
lahf
sbb
xchg
(bad)
and
sti
sub
or
sti
jg
sbb
push
push
mov
daa
sahf
jle
int
sub
dec
or
jo
out
out
xchg
cmps
nop
nop
loope
inc
jp
test
push
call
xlat
data16
lock
enter
dec
out
test
enter
je
and
jmp
jae
sbb
pop
xor
int3
mov
cmp
dec
test
and
inc
xor
shr
xchg
aaa
jle
into
repz
lods
sbb
jl
cmp
mov
pop
pop
in
mov
mov
push
cmp
jbe
xlat
ja
mov
(bad)
sar
je
pop
clc
sub
push
pop
mov
cmps
fwait
test
xchg
add
movs
les
xchg
and
push
repz
int
sub
in
push
mov
inc
ds
dec
fwait
inc
mov
pop
cmps
push
in
mov
sub
call
pusha
xor
into
pop
adc
test
rcr
gs
inc
pushf
addr16
mov
out
mov
inc
mov
test
int
xchg
cmp
sub
je
neg
jmp
enter
mov
jmp
mov
sub
nop
or
sub
or
fisttp
xor
in
movs
xchg
nop
mov
(bad)
dec
push
leave
mov
jbe
into
data16
xor
mov
loope
test
fbld
jl
sub
pusha
mov
mov
repnz
xchg
sbb
or
and
mov
aad
into
jno
pop
jg
in
cmp
jecxz
es
icebp
stos
mov
jp
bound
daa
fdiv
mul
mov
clc
imul
rcr
mov
pop
add
mov
sub
push
pop
dec
xchg
cwde
(bad)
bound
sub
stc
pop
inc
jbe
stos
inc
int3
and
dec
jle
push
lods
ja
(bad)
ja
pushf
(bad)
std
or
pop
and
push
push
and
nop
lods
loop
add
jmp
push
sbb
ja
push
push
ret
sub
les
loop
mov
push
das
popf
dec
iret
fdivr
sbb
js
fs
clc
sbb
mov
or
loope
inc
xchg
enter
push
jo
leave
out
mov
int
idiv
mov
cmp
push
lds
and
movs
push
jbe
enter
jecxz
enter
in
jle
xor
dec
xchg
bound
mov
ins
std
dec
cmp
xor
sbb
mov
hlt
nop
xchg
sar
xor
and
pop
mov
scas
in
je
pop
dec
add
mov
inc
sub
ins
inc
es
rcl
jecxz
add
les
sahf
bound
xchg
outs
jne
cmp
adc
loope
cmp
xor
lods
sbb
fist
(bad)
jmp
fcmovne
mov
inc
dec
imul
sub
inc
jae
and
cmps
mov
cmps
fist
int3
loope
push
out
add
pop
jae
out
cmp
add
xchg
jl
sub
imul
iret
jne
imul
pop
inc
imul
clc
jne
xchg
push
std
inc
push
add
es
xor
jae
ja
jge
dec
lea
sti
(bad)
in
adc
cdq
add
outs
dec
push
cmps
mov
or
scas
xchg
into
mov
push
sub
cmps
cmp
inc
fnsave
cmp
fs
add
xchg
push
and
push
outs
pop
loop
jne
push
adc
(bad)
sub
mov
sub
jle
mov
dec
and
sub
lods
mov
cs
dec
scas
jnp
and
push
cmps
xor
sbb
cs
mov
in
xor
nop
aad
sbb
ss
enter
sbb
into
fild
jg
xor
dec
and
push
repnz
and
imul
in
adc
cmp
les
test
(bad)
jbe
inc
or
adc
xchg
in
loopne
out
cwde
stos
ds
pop
int
adc
cmp
push
dec
add
loop
and
clc
std
and
outs
sub
push
cli
mov
enter
sbb
sahf
xchg
xchg
jg
xchg
lahf
(bad)
enter
jb
jbe
cmp
repnz
mov
enter
aad
sbb
add
inc
jmp
xchg
cli
ins
scas
pop
ins
jns
sub
jecxz
mov
jle
aaa
jo
cmp
sbb
mov
fsubr
pop
pop
imul
hlt
arpl
fstp
cmps
xchg
mov
lea
cmp
ficomp
js
pop
in
repnz
stc
pop
das
popa
pop
inc
in
adc
loope
out
jno
inc
or
adc
mov
push
pop
pop
fild
aam
int
pop
xor
jo
lahf
lea
add
addr16
mov
cmps
and
pop
test
sbb
push
jmp
or
in
nop
clc
jnp
mov
gs
(bad)
push
jecxz
nop
jo
add
in
cmp
mov
cmc
fiadd
fisubr
cli
(bad)
fst
(bad)
push
fnstsw
popf
ja
add
cmps
test
cmps
inc
in
sub
ds
xchg
sbb
dec
and
jne
aad
jne
adc
outs
outs
xchg
jb
retf
xor
pop
push
test
pop
push
push
std
cmp
add
mov
adc
popa
push
mov
rep
push
mov
and
mov
push
mov
fidivr
outs
push
fdivr
movs
lds
scas
cwde
inc
add
bound
jns
inc
stos
adc
xchg
aas
and
hlt
pop
clc
fwait
popa
dec
out
ret
in
in
in
mov
(bad)
aad
inc
or
lods
out
imul
mov
jge
js
mov
mov
sbb
pusha
jae
push
daa
out
rol
ret
jne
out
out
es
loope
mov
call
push
lds
inc
pusha
xor
mov
pop
les
jns
scas
cmp
dec
jae
inc
add
daa
jae
scas
mov
sub
xchg
mov
scas
xor
cdq
(bad)
mov
pop
movs
jmp
dec
aam
fld
mov
mov
jne
sahf
out
pop
lds
call
or
ror
fwait
lock
loopne
mov
cmp
cli
repz
or
jbe
retf
xchg
arpl
ja
and
mov
cmp
sub
std
daa
cmps
enter
sub
pop
xchg
jle
cld
mov
jo
lock
movss
mov
test
mov
xchg
and
jp
and
scas
mov
loopne
push
pop
lahf
cwde
clc
push
ret
xor
cmp
jae
retf
std
jno
sbb
jae
outs
cli
jle
push
(bad)
(bad)
mov
addr16
rcl
push
call
or
mov
div
or
sbb
and
adc
jge
pusha
les
push
sub
jne
sbb
ret
cmp
xor
scas
js
inc
scas
sub
sar
sbb
rcl
ret
pop
sbb
ins
xchg
sbb
mov
fnstsw
lods
mov
out
adc
dec
mul
int3
adc
ins
sub
adc
mov
mov
mov
pop
std
movs
xor
xchg
mov
in
arpl
inc
fadd
call
xchg
sub
jnp
int3
scas
inc
push
or
cmp
adc
jp
lock
jmp
stos
xchg
xchg
imul
cmps
fadd
bound
(bad)
jmp
push
dec
mov
sbb
jmp
dec
sar
icebp
jmp
loop
(bad)
call
cmp
mov
fmul
or
fcmovnbe
push
push
and
jg
mov
adc
pop
inc
and
test
int3
mov
movs
mov
ss
sbb
dec
cdq
mov
push
adc
addr16
test
and
jno
pop
mov
adc
xlat
mov
push
and
cmp
add
xchg
dec
popa
jbe
push
add
clc
mov
ret
jle
xchg
mov
adc
lods
jmp
sbb
pop
push
cmp
sbb
in
push
xchg
mov
jb
aam
mov
out
mov
in
loop
pop
push
adc
and
lods
pop
sbb
pushf
test
dec
push
ins
imul
bound
mov
mov
(bad)
mov
sub
call
loopne
(bad)
stc
call
repnz
push
stc
aaa
push
jle
xchg
jmp
cs
nop
push
outs
pop
pop
sbb
fs
xchg
mov
sub
adc
sbb
pushf
sub
sub
xor
dec
dec
sub
xlat
leave
aad
xchg
outs
xor
sub
sbb
pop
scas
or
dec
mov
mov
(bad)
out
inc
sub
pop
(bad)
and
(bad)
mov
scas
dec
pop
std
push
sbb
jge
pop
xor
mov
ror
jb
xor
pop
mov
push
shl
adc
jecxz
xchg
(bad)
cwde
cmp
mov
fild
mov
or
sub
sar
mov
sub
sub
sbb
push
dec
clc
lock
pop
push
inc
daa
jnp
int3
dec
cmp
adc
ror
cmps
mov
dec
clc
popa
sbb
jbe
stc
mov
lea
fisubr
rcl
dec
mov
mov
sbb
push
ss
inc
movs
call
loop
mov
pusha
dec
shr
sub
popf
scas
pushf
fwait
mov
sub
stos
rcr
or
jo
stos
dec
inc
lods
aam
push
retf
(bad)
inc
or
in
in
mov
mov
add
xchg
lods
(bad)
repnz
dec
or
push
jns
into
out
movs
pop
cwde
jmp
dec
xlat
dec
ins
cld
xlat
and
inc
mov
sqrtps
mov
ds
and
mov
in
adc
or
xchg
inc
(bad)
fcom
mov
or
dec
test
pop
dec
dec
pop
iret
fs
add
aas
xor
inc
push
or
fild
sbb
pop
pushf
call
daa
jbe
jg
cmp
mov
adc
aam
mov
jnp
sbb
jno
stc
jns
idiv
enter
adc
unpckhps
jg
xchg
cdq
lods
dec
ins
mov
mov
ficomp
iret
xor
jae
push
inc
hlt
gs
push
push
push
cmc
jns
loope
outs
push
sar
xor
in
sti
or
xchg
mov
mul
pop
push
xor
mov
dec
xor
in
repnz
je
inc
int
(bad)
add
mov
or
sahf
sahf
(bad)
stos
fxch
jg
imul
pop
cwde
push
(bad)
mov
jbe
xchg
into
jmp
aad
fld
mov
and
neg
dec
mov
pop
imul
fstp
fs
inc
and
inc
mov
inc
into
(bad)
out
xlat
pushf
sahf
in
adc
xor
dec
ret
push
cdq
push
rcl
inc
sub
push
adc
stc
or
inc
jge
daa
dec
scas
sbb
mov
out
in
ror
mov
mov
pop
inc
jns
stos
push
jl
int3
cdq
(bad)
dec
push
pop
lock
rcl
repnz
ins
adc
mov
xchg
push
jmp
sbb
xchg
(bad)
sahf
pop
jge
pop
nop
mov
inc
cld
ins
sbb
sbb
sbb
xchg
test
lods
xor
ins
int
jecxz
clc
dec
dec
push
sub
mov
stc
cmp
and
jecxz
pop
pop
adc
fstp
lea
pop
test
aaa
push
sbb
ds
jle
ficom
das
scas
nop
in
inc
and
je
and
adc
mov
dec
enter
mov
cmp
sub
sbb
jo
jnp
dec
hlt
fwait
inc
shl
in
mov
jae
cmp
(bad)
mov
xchg
test
lods
add
push
ret
cmp
pop
inc
inc
(bad)
movs
mov
fist
mov
mov
cmps
pushf
sub
movs
int3
mov
jns
(bad)
fistp
fcom
nop
idiv
(bad)
pop
xchg
lods
mov
mov
stc
xchg
xor
or
xchg
call
sub
outs
add
test
(bad)
int
mov
push
(bad)
ja
xchg
mov
les
fisub
gs
scas
call
hlt
(bad)
jbe
and
movs
xchg
lods
add
pop
mov
aad
out
pusha
enter
jne
pop
jecxz
sub
sub
cld
jb
mov
cld
cmp
mov
and
inc
and
pop
inc
push
or
adc
mov
loope
ret
cmp
mov
mov
in
dec
push
out
aas
or
inc
xchg
sbb
or
cmp
stc
mov
cs
jl
push
push
jb
stos
xchg
xchg
mov
inc
sbb
pop
sub
jp
aaa
enter
imul
hlt
jge
test
pusha
cs
movs
or
cmps
add
out
cmp
jge
push
fadd
loop
mov
popf
fdivp
cmp
cwde
mov
xchg
sub
inc
mov
xlat
and
mov
dec
mov
sub
jecxz
or
and
inc
push
push
fild
into
inc
retf
jecxz
push
ja
(bad)
int3
out
mov
dec
sbb
xor
ret
sub
movs
pop
call
xor
ret
and
cmps
outs
(bad)
mul
(bad)
pusha
test
add
retf
inc
jl
je
adc
std
shl
mov
retf
adc
in
aad
loopne
(bad)
repnz
lock
ins
xchg
or
and
pop
addr16
add
add
and
les
ret
int3
push
lds
jb
push
jne
mov
xor
push
rol
xor
pop
int
out
mov
loope
xchg
dec
aas
push
out
or
jmp
add
das
and
mov
xor
dec
ins
mov
ret
dec
das
jle
sar
xor
outs
jge
cs
cmp
cmp
idiv
xchg
push
jmp
iret
push
push
das
loop
mov
test
push
cmp
xchg
pop
mov
or
fdivrp
lahf
retf
sbb
pop
inc
xchg
cdq
test
sbb
les
inc
inc
adc
push
mov
fiadd
pop
pop
push
add
dec
in
sbb
dec
cld
or
mov
js
inc
lock
lods
movs
mov
pop
retw
rcl
dec
push
faddp
pop
outs
test
inc
xor
enter
repz
or
enter
cmp
adc
pop
mov
push
iret
xchg
and
mov
xchg
aam
icebp
mov
sbb
test
or
imul
cmc
mov
movs
mov
mov
sub
fucomp
movs
bound
scas
add
aam
push
test
sti
js
das
cmp
sbb
hlt
inc
bound
add
(bad)
rcl
jecxz
jmp
mov
shl
data16
and
and
cld
and
xor
cdq
or
xchg
dec
jmp
xor
sub
pop
push
push
inc
cli
jmp
das
xchg
xchg
and
stc
dec
popf
inc
xor
call
js
adc
sbb
pushf
shl
aaa
data16
js
cli
loope
xchg
mov
push
cdq
jbe
jle
push
jno
sub
retf
mov
lock
add
jmp
das
fiadd
push
fucomp
adc
stos
jns
ds
cmp
fnstcw
stos
fnstenv
mov
and
dec
aam
jge
xchg
ja
adc
in
or
imul
xor
xchg
clc
or
movs
xchg
cli
js
mov
xchg
cmp
mov
pop
jne
movs
sbb
rcl
inc
inc
inc
mov
fisttp
and
adc
jle
outs
repz
dec
sahf
add
out
jg
jns
(bad)
je
pop
lea
scas
jno
fild
jne
xchg
popf
mov
data16
cmp
sbb
outs
inc
sub
push
mov
cmp
xor
dec
mov
loop
sti
push
loop
jbe
pop
(bad)
push
loope
add
loope
pusha
xchg
idiv
fimul
sub
sbb
mov
adc
inc
sub
mov
fs
das
xchg
jmp
lds
jle
in
rcr
adc
adc
aam
sub
inc
test
cld
fs
mov
fdivr
outs
cmp
stos
pop
and
addr16
sahf
fadd
fwait
es
xchg
test
rcl
jmp
mov
ret
inc
push
mov
scas
xchg
loope
call
and
ja
xor
loop
adc
iret
aas
pop
push
int3
addr16
in
mov
jmp
mov
loopne
(bad)
mov
imul
lods
xchg
push
adc
mov
mov
pusha
push
scas
retf
mov
push
push
pop
mov
jb
or
call
pop
cmp
and
mov
jnp
cmps
out
mov
fidiv
push
inc
mov
mov
mov
std
pop
int
pop
dec
xor
stos
xchg
inc
loopne
push
in
movs
mov
movs
ret
bound
ins
add
fwait
pop
nop
cmp
mov
mov
sti
dec
or
jb
push
ins
dec
movs
addr16
inc
pop
jge
scas
les
hlt
test
mov
and
pop
xor
retf
mov
add
cmps
daa
cli
adc
cmp
sar
cmc
add
pop
aaa
popf
mov
dec
loopne
scas
ds
in
out
fnstsw
jnp
mov
hlt
dec
inc
ror
and
push
xor
sub
das
dec
ins
or
or
mov
and
call
adc
pop
pusha
repz
adc
mov
push
scas
and
or
push
imul
test
int
test
xchg
jmp
ror
and
pop
and
adc
xlat
and
mov
push
sti
out
pop
jbe
loopne
xlat
cdq
lods
mov
or
or
int3
xchg
push
out
push
inc
gs
outs
cmc
loope
pop
hlt
adc
in
jns
add
fsub
add
add
fist
cmp
mov
mov
std
in
in
sbb
shl
jbe
pop
sbb
outs
ficom
sub
sub
aad
jbe
push
xchg
mov
fiadd
jg
adc
pop
inc
cmp
popf
push
dec
mov
aad
out
clc
pop
ja
ret
movs
and
ja
xchg
pushf
cmp
add
pop
jecxz
stc
popa
sbb
repz
test
int3
add
in
xchg
cdq
gs
cmp
aam
cmp
xchg
inc
pushf
cs
mov
lods
xchg
loope
mov
into
shl
adc
dec
sub
sub
hlt
imul
mov
mov
out
mul
push
jbe
adc
pushf
jecxz
sub
jnp
imul
and
sbb
sbb
cmc
call
inc
scas
dec
ja
aad
sbb
xchg
mov
inc
xchg
mov
jge
and
push
sub
cdq
inc
call
push
mov
push
jl
mov
add
pop
stos
cmps
cmp
bswap
inc
popf
jl
clc
imul
sub
mov
call
sub
xchg
jno
xchg
sbb
pushf
into
push
cmps
dec
(bad)
clc
xchg
mov
(bad)
ins
mov
lods
loop
inc
inc
lock
out
test
xchg
sub
das
jae
xchg
sbb
jae
js
bound
xor
int3
cs
jae
imul
in
sbb
mov
pop
(bad)
jecxz
(bad)
fdivr
lods
fucom
push
imul
jo
push
adc
and
inc
aaa
sbb
jnp
dec
jno
adc
jmp
sub
or
xchg
pop
pop
aaa
in
pop
retfw
and
sub
fbstp
bnd
jae
mov
pushf
inc
adc
add
(bad)
pop
push
lea
push
mov
or
mov
test
ja
jecxz
mov
(bad)
fs
leave
push
dec
addr16
out
adc
outs
mov
cmp
mov
sti
scas
and
fucomi
js
shl
adc
jbe
pop
push
nop
out
jle
out
mov
dec
dec
test
dec
sub
xchg
add
sbb
pushf
add
fucompp
jo
je
mov
mov
cmp
aaa
sbb
mov
push
mov
cmp
sub
push
inc
or
stos
(bad)
mov
xchg
(bad)
shl
in
cmp
and
xor
fs
jb
mov
in
fcom
test
pop
fadd
jne
jl
mov
cmp
inc
stos
mov
xchg
ins
sbb
sbb
dec
add
movzx
inc
jo
lock
hlt
not
xor
xchg
ror
push
bound
pop
adc
pop
fcomp
push
std
xchg
fist
dec
pop
fld
fld
dec
sti
adc
dec
int
ds
nop
stos
sbb
lds
loopne
add
xchg
mov
movs
mov
sbb
xchg
sub
dec
or
mov
push
push
pushf
div
rcl
out
dec
pop
sar
add
int3
dec
iret
ret
and
std
and
retf
sub
sbb
dec
mov
push
mov
or
cmp
iret
add
xchg
arpl
in
imul
fs
push
sbb
movs
pusha
adc
cmps
jns
mov
sbb
sub
test
push
data16
push
adc
dec
mov
out
mov
lock
pop
cmp
mov
mov
push
push
int
sti
not
shl
push
mov
jmp
sbb
jle
mov
sbb
stos
or
cmp
into
or
jmp
cmp
dec
hlt
enter
inc
rcl
or
test
pop
add
jbe
adc
xchg
test
pop
fs
cmp
cmp
ins
mov
jge
push
repnz
scas
sar
(bad)
jbe
dec
add
or
hlt
add
faddp
in
adc
add
jmp
cmps
call
in
adc
daa
add
sbb
add
fist
sub
mov
jge
inc
or
and
sbb
js
adc
sbb
or
sar
ret
jbe
test
movlps
xchg
shl
mov
lea
(bad)
out
push
jl
ins
aad
xchg
push
int
ror
xor
sbb
push
cmc
(bad)
retf
jbe
scas
push
pop
(bad)
aad
in
xchg
jb
shr
shl
lods
pop
xor
mov
jne
mov
lock
mov
daa
nop
fldcw
xchg
jns
data16
gs
fidiv
lea
push
outs
pop
outs
ins
pop
jecxz
aas
pinsrw
xchg
and
pop
inc
mov
inc
xor
xchg
shl
enter
and
aaa
cmp
dec
out
xchg
xor
and
push
in
add
addr16
jecxz
jle
sub
adc
das
xchg
mov
adc
lods
fidivr
xchg
lods
sub
xchg
(bad)
out
push
(bad)
stc
cdq
xor
sbb
(bad)
and
adc
or
xor
fwait
inc
pop
adc
fwait
mov
lds
es
nop
data16
mov
repz
ret
and
ins
call
call
add
ror
push
sbb
stos
mov
adc
call
push
add
sbb
test
xchg
test
jge
scas
jae
aam
ret
loopne
out
fs
xchg
adc
sbb
cmp
nop
sub
(bad)
add
add
cmp
cmp
cli
cli
xchg
fcmovu
iret
push
pusha
pop
dec
scas
mov
lods
push
jecxz
loopne
push
lods
sub
int
xchg
jp
(bad)
scas
mov
(bad)
jno
fst
dec
push
cmp
jo
out
jle
shr
mov
ins
outs
sub
pop
into
xchg
cwde
adc
outs
in
or
mov
nop
jge
adc
and
enter
es
ficomp
sub
dec
dec
call
pop
xchg
cmc
pushf
push
jl
or
call
jmp
xchg
jp
and
sub
inc
in
dec
(bad)
jbe
add
repz
sub
mov
xor
xor
(bad)
shl
lods
jg
xchg
addr16
dec
jmp
daa
mov
lahf
mov
es
scas
push
add
popa
xor
push
push
jmp
aad
mov
es
inc
call
loopne
jb
push
imul
mov
xor
jno
les
xchg
jae
inc
aas
xor
pop
nop
adc
and
mov
bound
ret
es
ins
sahf
nop
aad
fnstcw
pop
cwde
test
jg
test
shl
js
jns
fst
idiv
fmul
or
fwait
jp
pop
cmc
mov
jmp
mov
fstp
mov
je
ret
sbb
sbb
or
shl
xor
shl
sub
test
stos
stos
test
jno
or
(bad)
rol
cli
xor
push
call
mov
mov
mov
sbb
aas
jnp
out
push
push
jg
xor
cmp
int3
inc
pop
mov
adc
retf
std
sbb
lock
adc
add
dec
mov
(bad)
daa
mov
leave
xor
ins
xchg
push
out
sub
(bad)
call
aas
(bad)
loope
lods
jae
pop
pop
fwait
inc
xor
cmps
pop
inc
das
sub
imul
adc
int3
push
push
jecxz
jb
pop
stc
mov
std
cmp
xchg
and
call
mov
jecxz
movs
icebp
out
mov
dec
repnz
mov
pop
pop
in
shr
movd
adc
xchg
outs
aas
in
loop
mov
adc
les
pop
adc
icebp
dec
scas
test
push
not
nop
add
mov
push
es
mov
sar
shl
(bad)
sti
jecxz
loopne
sbb
cmp
test
iret
(bad)
fnstenv
lock
sub
or
(bad)
fdiv
je
repz
xor
push
mov
cs
adc
out
add
jl
movnti
(bad)
in
pop
adc
fwait
aaa
movs
dec
aad
pushf
and
xchg
dec
cmp
push
mov
pop
or
jl
inc
mov
xor
(bad)
test
into
popa
aad
dec
mov
clc
push
not
or
mov
xor
cmps
sbb
push
mov
cdq
cmp
inc
mov
icebp
pop
test
jp
cmp
in
jg
cdq
mov
jmp
sub
xchg
push
jmp
(bad)
pop
xchg
call
xchg
jge
sub
push
arpl
push
sbb
adc
loopne
in
mov
pop
mov
or
cmps
sub
das
jle
sub
cmc
or
mov
pusha
cmp
add
loop
movs
add
enter
push
mov
xor
push
(bad)
push
mov
int3
sar
sub
xchg
ins
retf
jmp
xchg
cs
aam
mov
cwde
mov
lahf
sbb
pop
(bad)
ret
mov
pushf
and
rol
out
movs
xchg
xor
jmp
dec
repnz
xor
and
lock
leave
sub
scas
mov
xor
add
test
stos
shr
fistp
ret
aas
jb
adc
dec
adc
sub
and
xor
push
xchg
adc
mov
jl
aas
sub
dec
pop
or
add
scas
or
fist
cmp
sbb
call
cld
stc
mov
mov
mov
mov
rcr
sbb
and
ins
mov
mov
ins
xchg
pop
mov
mov
test
ja
stos
mov
xchg
add
clc
loop
xchg
sbb
jp
shr
stos
mov
outs
jb
cmp
inc
sub
rcr
inc
xchg
fwait
dec
mov
adc
(bad)
popf
sub
aaa
lea
fmul
ficom
fwait
cmp
outs
int
int3
test
daa
add
mov
inc
xor
pop
sbb
cmp
(bad)
shl
aas
rcr
add
rcpps
pop
jo
inc
out
push
jecxz
rcr
daa
add
mov
sub
stos
jae
inc
jno
imul
adc
rol
mov
aam
fisub
mov
push
add
mul
xor
mov
test
inc
and
imul
repnz
adc
int
sbb
add
pop
cmp
push
xchg
sbb
imul
jmp
add
pop
and
mov
je
add
test
ja
retf
dec
iret
cmp
fsub
out
dec
mov
pop
dec
and
sbb
movs
xlat
sbb
pop
mov
mov
mov
ds
sti
mov
mov
into
or
div
test
jbe
push
mov
sub
ret
cmp
arpl
addr16
das
inc
movnti
enter
daa
jns
iret
outs
rcl
dec
or
rol
jge
jecxz
sbb
stos
xor
lods
call
cdq
test
pop
push
fs
clc
(bad)
and
add
fistp
sub
icebp
es
sbb
and
lea
jge
inc
push
ret
mov
push
cld
lods
sbb
cmp
push
mov
call
int3
mov
cdq
and
pop
mov
fwait
or
inc
(bad)
dec
mov
or
(bad)
mov
js
mov
sbb
xchg
or
test
ja
aas
jbe
jg
mov
sub
mov
xchg
mov
mov
jl
jle
push
jbe
jecxz
sub
jnp
sbb
pop
add
sbb
call
sbb
retw
in
jmp
mov
out
leave
fimul
push
add
out
retf
cwde
jnp
mov
mov
jnp
cdq
popf
rcr
cmps
xor
out
jecxz
push
mov
cmp
lock
test
loop
icebp
sar
pop
aas
or
js
or
jl
iret
aaa
sub
mov
mov
mov
mov
pusha
sub
mov
imul
mov
jne
xchg
inc
(bad)
test
test
inc
out
jb
sub
jno
xchg
push
sbb
ins
out
mul
jbe
xchg
adc
pop
mov
pop
xor
sbb
cli
fwait
sub
ret
cmc
aad
push
mov
inc
test
les
test
mov
repz
xchg
fnsave
fcomp
pop
inc
cmp
mov
pop
xchg
push
int
lds
sahf
push
into
aaa
cdq
ds
push
hlt
add
jo
imul
test
cli
rcr
shr
int
jns
jb
scas
dec
fwait
add
mov
test
mov
mov
loope
pop
test
add
call
jno
cmp
or
and
aaa
mov
loopne
ficom
mov
lds
les
retf
mov
hlt
imul
jnp
stos
push
orps
pop
(bad)
ins
push
sub
push
das
cdq
xor
cmp
xchg
pop
xchg
jnp
xor
lahf
jmp
pop
imul
dec
icebp
jno
stc
pusha
jnp
sub
mov
jmp
gs
int
adc
adc
popf
cs
es
and
and
stos
sbb
shl
sti
retf
shl
loop
sti
push
outs
mov
fadd
test
cmps
sti
xor
pop
ins
scas
push
mov
cmc
and
ja
or
dec
cmp
out
mov
and
and
dec
(bad)
jmp
mov
xchg
dec
jno
aad
test
call
xchg
add
cmps
pusha
inc
mov
push
xchg
not
test
sbb
dec
mov
cmp
mov
add
aad
jg
ja
std
pop
xor
add
dec
mov
sbb
add
mov
lock
add
(bad)
into
mov
sar
mov
int3
inc
xlat
xchg
hlt
sub
sahf
mov
cmp
cwde
fisub
mov
nop
(bad)
(bad)
in
pop
pop
iret
mov
adc
push
add
push
out
loop
dec
out
dec
fild
jmp
sti
adc
mov
pop
mov
call
movs
mov
cmp
adc
cmp
retf
movs
outs
sbb
mov
inc
mov
jecxz
out
mov
ins
clc
js
clc
pop
repz
xor
and
cmp
sti
inc
mov
fldenv
push
fstp
push
add
push
pop
mov
(bad)
sbb
xchg
inc
xchg
and
sub
push
repz
xchg
das
(bad)
jno
leave
or
sub
sahf
in
or
dec
or
or
test
xchg
sbb
js
je
aaa
jno
dec
aaa
loope
cli
mov
mov
and
push
dec
mov
call
call
(bad)
dec
clc
stos
loopne
lods
xchg
push
push
adc
xor
inc
xchg
cmp
or
push
gs
in
test
or
mov
adc
xor
jnp
inc
in
dec
shr
push
push
out
or
push
jns
(bad)
in
fistp
mov
(bad)
and
lahf
ret
lods
push
outs
xor
retf
scas
mov
in
xor
jne
pop
sub
inc
mov
fist
dec
mov
jg
pop
call
into
sub
in
out
sbb
jne
xchg
cmp
cwde
mov
adc
and
add
and
mov
sar
icebp
pop
loope
clc
stos
push
nop
jle
or
lods
aas
ret
xor
adc
aam
inc
sti
jl
or
(bad)
xor
mov
shl
sbb
add
or
retf
test
shl
and
pop
(bad)
push
xor
and
enter
adc
lods
inc
push
adc
fld
gs
cmps
jae
les
mov
xor
popf
daa
call
inc
jnp
mov
and
xor
(bad)
jbe
sbb
cmps
sub
xchg
add
shr
das
in
push
pop
in
pushf
call
dec
iret
scas
cmp
ror
mov
push
jp
into
into
xchg
cdq
test
nop
xchg
jmp
(bad)
(bad)
dec
jbe
fcomp
cmp
pop
iret
push
outs
sub
leave
mov
push
push
pop
cmps
call
mov
sahf
push
pop
xchg
inc
cmp
mov
out
mov
add
in
hlt
adc
inc
and
or
mov
inc
push
repnz
sbb
sub
loope
xor
mov
cmp
data16
and
adc
pop
aad
inc
mov
into
jns
inc
cmp
dec
add
and
push
cmp
push
fdivr
or
jnp
mov
add
mov
ins
push
ins
loope
scas
or
xor
xchg
leave
call
dec
add
inc
inc
in
scas
inc
pop
in
push
mov
and
test
aam
test
mov
push
sub
mov
xor
sbb
xchg
(bad)
xchg
pop
adc
dec
xlat
aam
scas
mov
jb
fistp
jp
std
loopne
icebp
jnp
jmp
jb
dec
stos
push
or
lds
cmc
push
ins
or
mov
sub
(bad)
pusha
mov
scas
inc
mov
or
scas
int
(bad)
fistp
sub
aas
mov
shl
shl
ins
jg
leave
push
sbb
jle
or
push
add
enter
mov
sbb
aaa
in
mov
push
in
xchg
or
cmp
xor
push
popf
daa
je
jecxz
ins
push
push
popf
stos
add
mov
out
pop
dec
adc
ret
addr16
fs
(bad)
sub
bound
fld
mov
dec
stc
xor
push
jae
mov
ret
nop
mov
mov
mul
xor
adc
mov
push
ds
push
lods
das
call
jl
mov
call
and
or
push
mov
popf
arpl
test
mov
mov
or
pushf
pop
add
push
mov
jmp
xor
fmul
jo
stos
loopne
cmp
inc
cli
xor
mov
inc
dec
cdq
dec
out
xchg
pusha
popa
inc
shr
add
adc
xor
fcomp
mov
lods
outs
add
cmp
lds
fild
sbb
loop
pop
retf
push
fstp
lds
push
xor
add
mov
fiadd
lock
ficomp
xor
sbb
sub
and
xor
push
inc
out
sbb
clc
cs
sbb
xor
mov
add
jg
cdq
and
sub
adc
mov
pop
sbb
sub
scas
das
arpl
sar
jns
aas
mov
mov
jl
inc
jno
and
push
call
(bad)
out
jecxz
pop
popa
(bad)
cli
adc
push
clc
out
push
inc
xor
mov
call
ds
xchg
jae
sbb
loope
jmp
cmp
dec
push
daa
mov
iret
dec
retf
ret
and
repz
adc
cld
pop
dec
dec
dec
icebp
loop
out
out
test
arpl
repnz
cmc
xor
dec
imul
btc
xlat
xor
pushf
dec
das
push
fwait
inc
add
fidiv
jle
pop
jecxz
adc
sub
test
xchg
out
jnp
mov
out
pop
mov
jecxz
inc
push
sbb
xchg
adc
(bad)
(bad)
test
cli
fstp
inc
add
fs
xor
cmps
movs
fadd
sti
xchg
mov
lahf
out
fisttp
daa
and
fwait
clc
popf
mov
dec
fld
loopne
call
icebp
mov
push
loope
jo
pop
cmps
js
push
inc
aas
push
test
retf
or
jbe
ins
sub
add
xchg
and
xchg
bound
(bad)
retf
jae
cdq
xor
pushf
repnz
stos
cmps
aam
ja
das
jo
push
push
sub
setp
pop
ror
cmps
lock
in
sub
test
jns
pop
mov
(bad)
mov
clc
sbb
sbb
ja
in
pusha
push
mov
rol
fucom
xchg
dec
mov
dec
adc
imul
ds
movs
cmp
push
stos
mov
std
test
or
ds
into
test
lods
jp
xchg
push
and
int3
(bad)
mov
cmp
xchg
cwde
ss
popf
lahf
jo
daa
mov
dec
in
add
push
sahf
sti
ret
sbb
mov
jecxz
cmp
xchg
cwde
stc
mov
das
cmps
jb
adc
sub
add
push
adc
cmp
aad
fcomp
movs
jle
ret
arpl
mov
push
xor
jb
aam
pushf
(bad)
fcomp
retf
xor
or
loopne
cmp
sar
scas
sbb
sbb
push
in
cmp
or
cs
fstp
jmp
adc
aas
(bad)
mov
lea
mov
mov
push
fmulp
add
ret
in
push
shl
push
and
out
mov
sub
pop
movs
int
cs
imul
add
add
push
cmp
xor
int3
(bad)
ss
add
push
add
mov
int3
icebp
push
add
push
pop
mov
es
fcmovbe
xor
push
dec
test
sar
aas
pop
ret
sub
adc
test
jg
xor
das
scas
(bad)
mov
sbb
repz
add
rcl
lods
jnp
loope
inc
test
add
adc
xor
bound
mov
add
arpl
cdq
add
cmps
mov
push
or
sar
das
shl
cmp
lds
fisttp
dec
je
ror
pop
dec
cld
fucomi
or
loopne
dec
popf
push
xor
xchg
aad
fist
aas
sbb
mov
pusha
daa
push
jp
sbb
push
sub
mov
push
push
cmp
inc
mov
mov
xchg
loop
ds
bound
cwde
xor
(bad)
out
xchg
sbb
mov
ds
sar
and
clc
out
call
call
lea
pop
in
lds
cmp
outs
int
push
(bad)
push
adc
movs
pop
mov
dec
xchg
xor
push
jl
sti
(bad)
repnz
fadd
xchg
aad
add
or
ds
mov
mov
mov
int
aas
push
fsubr
sbb
sbb
sbb
sbb
addr16
pop
cmps
das
rol
fadd
push
(bad)
xchg
mov
mov
cmp
std
sub
dec
or
and
dec
je
les
jnp
jns
push
push
xchg
sub
sub
dec
add
adc
sub
add
dec
pop
addr16
(bad)
mov
imul
(bad)
sbb
mov
inc
idiv
fcom
jae
daa
ffree
aas
jge
daa
dec
inc
aam
sub
push
mov
stc
pop
gs
repz
and
call
lock
div
ss
push
xchg
daa
rcr
push
je
daa
jmp
popa
ds
outs
or
fistp
xor
aad
cmps
add
es
cmp
mov
mov
shr
test
adc
cmc
cli
in
movs
dec
popa
nop
add
fdivr
in
or
rcl
rcl
out
leave
call
(bad)
enter
jmp
xor
xor
call
test
cmp
add
ja
psraw
or
nop
sub
in
test
pusha
xor
push
lds
(bad)
jb
dec
(bad)
xlat
loopne
cmp
xchg
jg
mov
clc
imul
mov
fdivr
test
(bad)
jmp
mul
test
ja
fwait
lahf
mov
add
int
cld
inc
icebp
sub
or
shl
imul
mov
aad
jb
jae
imul
out
(bad)
mov
fsub
mov
sub
inc
aad
xchg
icebp
fldcw
mov
stos
cmp
ret
imul
outs
push
xlat
out
(bad)
(bad)
inc
lods
nop
adc
adc
add
inc
push
fdivr
sub
mov
not
jmp
les
add
bound
dec
arpl
add
pop
dec
imul
sahf
inc
and
pop
and
xchg
xchg
mov
imul
xor
stc
loop
fstp
es
ds
bnd
push
fistp
mov
aam
ficomp
add
mov
push
jp
xor
dec
arpl
mov
push
pop
sbb
popa
cld
clc
dec
cmp
arpl
mov
nop
mov
pop
out
and
mov
xor
addr16
inc
xchg
dec
or
aaa
mov
mov
mov
push
cli
js
or
push
in
mov
retf
addr16
sub
sar
mov
in
nop
push
adc
loop
xchg
retf
mov
or
lods
rcr
mov
popa
aam
mov
test
enter
std
test
(bad)
dec
leave
mov
js
fs
jb
js
in
outs
fiadd
add
in
mov
pop
test
into
pop
adc
data16
rol
push
(bad)
adc
jno
std
fistp
adc
lahf
pop
lea
sbb
es
add
mov
jmp
add
lods
inc
ret
addr16
call
mov
retf
test
lea
xor
popf
retf
out
mov
icebp
xchg
in
rcl
push
out
je
and
adc
jle
stos
inc
add
xchg
lea
mov
dec
rcr
or
outs
mov
sub
addr16
scas
js
sti
cmp
stos
pop
sbb
fld
ss
out
stc
fimul
push
(bad)
ror
inc
loop
jnp
movs
pop
add
repnz
xchg
jecxz
iret
push
cwde
cmps
jmp
sbb
ja
sub
push
cmp
pop
ins
loopne
sbb
std
call
jns
div
popa
xlat
xchg
xor
mov
mov
cmc
retf
cmps
daa
lods
int
adc
sub
popf
aam
into
push
and
in
dec
in
ins
les
fdivr
inc
ja
scas
fs
jmp
shl
xchg
rcr
jbe
xchg
sub
or
dec
(bad)
lea
push
pop
shr
nop
push
loop
fstp
cmps
inc
sbb
cmp
in
(bad)
cmp
popf
inc
mov
inc
mov
cld
ficom
sub
shr
push
mov
cli
push
rcr
call
add
cmp
test
pop
adc
cli
push
scas
mov
movs
ins
loop
fcom
aaa
pop
fwait
lods
jmp
jmp
test
scas
push
loopne
fxch
cmps
xor
cmp
jle
cmp
or
inc
fisttp
aaa
jle
lods
ds
out
in
fwait
ret
mov
or
cmp
jmp
sbb
inc
mov
mov
dec
push
shl
mul
sbb
push
loop
lahf
inc
push
nop
sahf
rcl
out
cmp
mov
test
das
xchg
inc
ror
(bad)
cdq
jle
and
(bad)
das
cmp
jg
lods
jo
cmp
cmp
fwait
mov
out
fld
lahf
adc
sbb
fs
dec
int
pop
(bad)
inc
in
mov
xchg
adc
movs
(bad)
jae
inc
mov
dec
cdq
inc
sub
ja
pusha
ficom
dec
and
dec
in
xchg
inc
test
or
dec
pop
add
aaa
bound
pop
mov
cmps
push
addr16
mov
add
fimul
push
icebp
pop
mov
dec
push
xchg
mov
test
adc
pop
in
aam
sbb
sub
mov
push
(bad)
popf
add
sub
pop
enter
scas
sahf
mov
pop
test
and
hlt
sub
xor
retf
cmp
mov
push
pop
std
popa
sbb
mov
mov
pop
xor
sub
xchg
jns
sbb
retf
loopne
push
pop
lods
lahf
cs
cmp
and
xchg
data16
mov
pop
jnp
out
into
fwait
pop
outs
jmp
push
movs
inc
rcr
pop
bound
and
test
inc
pop
cmps
clc
dec
dec
dec
jmp
push
icebp
shl
adc
retf
jmp
sub
xlat
inc
jbe
psubusb
lods
or
push
mov
ins
imul
cmp
aas
push
jae
push
xchg
jg
enter
gs
popa
mov
push
mov
in
mov
pop
xor
ret
inc
cmp
mov
adc
inc
call
xor
xchg
daa
je
and
test
jno
mov
cld
retf
jle
xor
lea
jns
rcr
ror
fisttp
push
and
jge
imul
pop
rcr
inc
and
dec
pop
stc
push
pop
ficom
scas
fisubr
cmps
dec
jbe
adc
ins
test
cmps
xor
or
repz
sbb
ss
and
mov
fwait
mov
repnz
outs
neg
shr
call
int
rcr
or
adc
dec
aad
dec
jmp
mov
adc
add
arpl
inc
xchg
in
and
aas
sbb
jae
ins
jno
mov
jne
mov
xchg
add
or
cdq
sbb
inc
push
pushf
mov
movs
(bad)
shr
fs
fcom
daa
es
and
scas
cwde
push
or
in
aas
jp
lods
dec
stc
in
shrd
push
xor
pop
inc
mov
shl
mov
or
test
fcom
pop
stos
dec
inc
repz
retf
jp
rcl
clc
cmp
js
adc
mov
lods
jmp
icebp
xor
bound
test
test
fld
scas
jecxz
rol
jmp
out
mov
xchg
jno
js
out
mov
mov
sub
jmp
add
rcr
dec
and
or
test
ror
xor
out
jmp
mov
sar
in
push
mov
hlt
div
hlt
push
dec
pop
aas
je
xchg
call
mov
mov
add
sar
add
jb
arpl
mov
pop
push
push
xor
test
sbb
dec
ss
jnp
hlt
ret
sub
(bad)
rcl
add
movs
sar
fdiv
push
and
jmp
pop
daa
fs
pop
fst
xor
icebp
and
mov
sti
icebp
shr
jp
scas
adc
sub
ror
and
xor
and
scas
sar
sbb
mov
addr16
imul
pop
bound
jge
xlat
neg
jle
iret
mov
dec
pop
adc
div
bound
mov
arpl
pop
jns
cs
and
pmulhuw
fldenv
mov
pop
pop
pop
ins
jecxz
xchg
daa
and
adc
nop
cmp
jnp
into
jl
adc
xchg
out
sahf
fidivr
sbb
repnz
push
mov
repz
sbb
xchg
and
adc
sti
dec
stc
scas
test
loop
jbe
in
int3
xchg
pop
pop
call
loopne
pushf
test
lea
or
in
dec
(bad)
in
push
push
leave
xchg
repnz
or
out
or
loopne
lods
dec
xchg
or
loop
and
mov
rcr
adc
int3
fild
dec
cmp
adc
and
push
ds
in
and
lods
fdiv
fwait
push
add
int3
into
pop
dec
jo
mov
lods
and
mov
or
(bad)
xchg
adc
aam
les
push
mov
ins
dec
cmp
out
push
cmp
aaa
push
in
(bad)
inc
cmc
xchg
hlt
or
fidiv
pop
dec
fcom
pop
jmp
pushw
push
dec
pushf
cdq
daa
std
cmp
daa
ins
rol
into
mov
mov
lea
(bad)
aad
and
mov
movs
cmp
pop
pop
daa
aad
repnz
clc
xchg
xor
mov
jns
out
jg
out
cmp
daa
inc
sbb
cmps
test
sahf
aam
push
stos
sbb
je
ins
leave
pusha
jb
mov
sbb
mov
imul
sub
mov
xor
push
cmpxchg
test
adc
aad
test
adc
push
xchg
mov
scas
aaa
rol
(bad)
or
xchg
xor
inc
lds
push
clc
jo
in
arpl
scas
mov
inc
mov
push
sbb
mov
mov
out
push
out
mov
or
sub
int
sub
into
sar
jb
jae
mov
inc
test
and
pop
jmp
mov
push
cmp
xchg
sbb
push
mov
xchg
xchg
xor
hlt
pop
fisub
jp
div
push
mov
cmp
and
inc
scas
(bad)
jge
mov
sar
push
loop
icebp
jge
ins
or
aad
leave
popf
out
data16
sbb
rcr
add
ret
or
jmp
mov
rol
dec
aam
hlt
test
jne
lock
or
ffree
sti
push
pop
dec
lds
cmp
jns
pop
(bad)
sub
push
(bad)
rcl
sub
cmp
ror
sbb
call
ret
ja
test
mov
out
ss
jno
xor
adc
dec
xor
mov
mov
pop
mov
inc
jge
lds
ins
add
ret
out
test
cs
imul
leave
fnsave
cmps
and
jg
ret
(bad)
mov
sub
test
sbb
xchg
push
push
xor
leave
adc
lods
cmps
adc
ins
add
jno
mov
shl
mov
jmp
enter
out
inc
or
or
inc
pop
fs
cli
ja
dec
das
push
pop
dec
add
test
xchg
mov
mov
add
or
push
sub
sti
fnstenv
dec
add
scas
inc
addr16
pop
jp
push
lods
or
(bad)
outs
lock
ins
push
inc
push
daa
ret
mov
jb
xor
retf
pop
xchg
mov
cld
(bad)
cmp
mov
cmps
data16
or
inc
inc
inc
nop
push
jae
inc
and
mov
lds
xor
fcomp
xor
add
lds
jmp
(bad)
jmp
mov
and
xor
fwait
jne
cmp
lea
cdq
xchg
xor
out
or
int3
inc
das
pop
adc
sbb
xor
dec
adc
not
pop
fnsave
push
enter
xor
cdq
xchg
adc
jae
sub
xor
out
jle
(bad)
and
mov
cmp
sub
sbb
push
outs
xchg
xchg
in
sub
iret
rol
xchg
mov
push
out
and
ret
dec
scas
mov
loopne
mov
jmp
mov
pminub
add
(bad)
and
lock
ror
lods
add
dec
in
lahf
xchg
add
or
std
test
hlt
lods
(bad)
jp
in
cmc
sbb
aam
or
scas
cmp
(bad)
(bad)
sub
xor
(bad)
sub
mov
mov
into
(bad)
loope
mov
xor
xor
lea
jmp
pop
test
cmp
fcomp
mov
cmp
out
add
dec
test
cmp
fsubr
out
call
xor
clc
scas
add
pop
(bad)
xor
inc
sub
outs
fst
xor
jo
(bad)
out
test
dec
cdq
test
add
leave
or
test
xchg
dec
jno
mov
adc
mov
adc
mov
enter
stos
cmp
xchg
xchg
ficom
and
not
fistp
popf
(bad)
pusha
call
jmp
push
xchg
jmp
dec
bound
dec
pop
add
mov
xor
cwde
mov
pop
sbb
scas
mov
xchg
add
ja
cmp
mov
xor
fstp
inc
(bad)
into
repz
leave
lahf
mov
ds
jb
xlat
mov
inc
jg
lods
cmc
movs
push
sub
pop
adc
and
xor
pusha
imul
scas
sub
sbb
icebp
sub
into
dec
mov
xor
lods
fs
sar
and
gs
cmps
push
gs
inc
sub
nop
mov
mov
fs
mov
xlat
nop
mov
out
inc
scas
lahf
syscall
mov
(bad)
pop
mov
dec
pop
data16
retf
adc
fs
cli
xor
mov
mov
push
jbe
pop
jmp
nop
adc
aaa
outs
push
iret
adc
ins
dec
icebp
mov
pushf
and
fucomip
add
add
xor
lock
push
pop
shl
pop
add
mov
pusha
aaa
out
(bad)
sub
lods
add
mov
xchg
push
setne
fcmovne
es
push
out
scas
shl
ret
xchg
jbe
bound
inc
jp
icebp
cmps
ins
or
lahf
and
lds
jecxz
loop
push
xchg
dec
mov
aaa
pop
mov
adc
push
and
sbb
mov
push
lock
pushf
js
xchg
xor
jle
dec
gs
inc
pop
or
in
cmp
mov
popf
je
sbb
mov
mov
jl
outs
out
inc
enter
push
dec
in
scas
es
pop
test
or
mov
dec
and
mov
icebp
cmc
push
sbb
pop
inc
sbb
jne
jns
push
xchg
movs
cmps
mov
lods
test
out
mov
bound
je
dec
dec
xchg
mov
sbb
cmps
test
pop
cmp
shr
loop
and
pop
mov
das
mov
dec
(bad)
loopne
out
jecxz
mov
mov
sbb
rol
or
cmp
jo
daa
lea
loope
push
test
test
jnp
dec
xchg
cld
lahf
push
jg
movs
sbb
(bad)
dec
and
cmp
lods
scas
or
push
or
call
js
mov
inc
mov
xor
sub
loop
scas
scas
add
in
pop
cmps
inc
mov
aad
stc
mov
std
jns
sbb
out
aad
ins
push
loop
jecxz
addr16
mov
mov
mov
fsubr
sbb
hlt
loopne
jo
mov
nop
cmp
out
stos
call
mov
xor
retf
cmp
pop
push
adc
and
add
add
aam
pop
sub
inc
js
pop
je
popf
dec
add
and
add
pop
outs
lea
mov
sub
nop
mov
inc
je
test
mov
int3
jecxz
int3
fs
mov
fmul
or
out
sar
ret
push
mov
cmps
dec
outs
fs
dec
jns
call
jmp
pop
icebp
push
hlt
inc
add
cli
sub
ins
pop
inc
fimul
cmp
sub
xchg
std
aas
or
outs
or
jnp
dec
(bad)
arpl
std
pusha
stos
imul
shr
jb
pop
push
sub
inc
iret
inc
dec
(bad)
dec
dec
sub
adc
test
or
jnp
aaa
lea
dec
sbb
xchg
clc
and
fwait
mov
mov
jle
push
sub
mov
in
outs
les
es
or
xchg
loopne
in
popf
mov
and
mov
ja
inc
dec
outs
shl
push
ret
cmp
movhps
call
push
inc
inc
fdivr
inc
sbb
xchg
push
dec
and
lods
jle
dec
ss
les
test
add
ds
and
mov
or
stos
sbb
pop
sbb
inc
add
jbe
xor
fwait
cmps
popf
fsub
xor
fnstenv
cmp
pop
mov
or
movs
mov
test
fwait
cmp
ficom
cmps
add
scas
xlat
and
fs
lock
mov
scas
cmc
fs
dec
jno
aas
call
pop
jge
adc
pop
mov
jmp
push
cmc
test
push
xlat
add
or
mov
gs
xchg
mov
or
add
xchg
gs
call
ss
pushf
out
pusha
das
int
in
push
sub
adc
mov
or
or
sub
jle
mov
push
dec
outs
mov
es
cmps
cmp
or
pop
data16
jbe
mov
gs
pop
sahf
into
ins
sbb
jp
dec
adc
sub
jge
pop
cld
arpl
shl
jae
or
mov
mov
sub
xchg
shr
sub
sar
xor
xchg
xor
ins
jmp
jmp
daa
pop
ds
lods
(bad)
pop
movs
push
ins
xor
fs
daa
jnp
dec
xlat
ds
rcl
cwde
popf
mov
ss
cdq
fdiv
leave
jmp
test
push
xchg
les
xor
and
pop
push
pop
icebp
loope
sbb
or
adc
out
xchg
push
push
aam
add
push
lahf
adc
aas
xchg
cmp
adc
loop
gs
test
sbb
in
jp
(bad)
not
ins
inc
inc
mov
sbb
aaa
(bad)
stc
add
xchg
bound
shr
push
sub
or
test
xor
inc
mov
mov
jae
mov
fcmovne
mov
push
dec
xor
and
pop
ja
inc
add
sub
lods
or
and
pop
and
pop
push
xor
nop
adc
xchg
or
pop
inc
sub
(bad)
mov
iret
popa
in
pop
add
and
cmps
dec
(bad)
push
cs
mov
rcr
test
test
leave
(bad)
or
jmp
cmps
mov
mov
shl
out
stos
bound
pop
fs
ins
and
xor
xchg
push
imul
adc
mov
mov
sub
mov
pop
in
jp
dec
sub
outs
inc
ret
movs
cs
int3
sahf
push
cdq
add
xchg
out
jp
push
dec
scas
xor
icebp
mov
sete
mov
jp
(bad)
xor
and
(bad)
cs
fdivr
and
sub
aad
pop
loope
add
mov
add
data16
out
loope
sbb
pushf
push
pusha
outs
(bad)
div
je
or
mov
xor
jp
jnp
xlat
loop
bound
cmps
push
jb
ja
and
(bad)
sar
cmc
fs
xor
gs
icebp
popa
in
jae
pop
pop
mov
mov
in
sar
dec
lock
jo
cmps
(bad)
sti
pop
ins
xor
fmul
mov
mov
out
mov
xchg
test
fild
ror
fcomp
xchg
in
cmps
loop
fs
pop
pop
int
outs
(bad)
neg
mov
out
in
dec
push
inc
xchg
fild
mov
push
aaa
push
mov
inc
jne
mov
in
mov
jge
aam
rol
call
aam
ret
mov
mov
xchg
das
and
sub
jno
rcl
mov
mov
nop
pusha
and
imul
hlt
mov
fnsave
daa
cmps
mov
fist
inc
out
mov
inc
outs
mov
dec
aad
inc
lea
jno
das
je
jne
shr
pop
leave
pop
stos
data16
pop
lahf
lock
mov
jo
sub
inc
ret
pop
adc
jne
int
mov
xchg
sahf
imul
xchg
and
stos
mov
mov
pushf
and
sub
push
aas
pop
cld
mov
and
icebp
outs
sbb
call
pop
cmc
ja
inc
cdq
mov
adc
xor
pop
movs
push
int
pusha
aaa
dec
fs
sub
xlat
iret
fcmovu
stc
push
fs
mov
adc
cmp
jo
iret
mov
xchg
jo
and
adc
push
mov
lock
jge
push
inc
out
mov
pusha
mov
or
in
sar
pop
cmp
push
mov
sbb
pop
xchg
lods
push
loope
ss
push
mov
in
push
sti
pop
jl
mov
aam
cwde
fsubr
mov
outs
xor
dec
inc
call
ret
push
add
push
and
out
in
fsubr
dec
mov
mov
(bad)
pop
jno
pop
out
and
loop
push
pop
loope
mov
shl
or
mul
in
cmp
xchg
(bad)
shr
loop
mov
sbb
mov
or
cmp
add
mov
cmp
and
mov
dec
pop
ins
mov
(bad)
add
pushf
imul
test
cmp
into
sub
pop
jp
sbb
addr16
loope
add
add
and
cmps
and
inc
xchg
dec
mov
lock
cli
stc
stos
mov
into
cwde
pop
xchg
adc
cmp
inc
or
cdq
mov
lods
es
mov
or
xor
pop
inc
icebp
xchg
push
cmp
sub
pop
xchg
call
adc
sub
mov
push
push
cmp
in
mov
cwde
inc
push
xchg
fadd
xor
call
stos
std
or
sbb
cmc
loopne
sbb
push
icebp
icebp
test
sti
imul
je
shr
cmp
loop
(bad)
dec
push
stos
in
push
lods
icebp
or
sub
out
push
pop
pusha
push
(bad)
push
mov
loopne
outs
movs
xor
ret
push
sbb
jbe
pop
outs
fimul
or
rol
adc
(bad)
test
pop
mov
mov
mov
sbb
cmps
retf
jmp
add
sub
into
retf
inc
es
std
cmp
cmp
pop
dec
mov
add
mov
repz
mov
or
cmp
push
mov
shr
gs
ds
push
outs
push
call
push
push
push
add
mov
push
inc
sub
lods
add
add
pop
add
dec
jnp
lea
cli
mov
call
cli
jnp
out
push
fmul
std
fisttp
or
xchg
lea
inc
adc
popa
mov
fsubp
std
loope
inc
sub
mov
mov
int3
sbb
or
stos
(bad)
add
and
mov
es
repz
es
sub
sub
push
push
retf
(bad)
cld
and
loope
ret
stos
out
in
add
sbb
xchg
div
out
sbb
push
retf
mov
(bad)
in
retf
in
stc
mov
outs
jnp
add
pop
aas
imul
xchg
pop
sbb
fstp
out
xlat
pop
les
xchg
sub
in
add
sbb
mul
cmp
mov
stc
and
ror
jmp
jnp
jae
inc
in
pop
add
inc
adc
(bad)
xchg
hlt
inc
ds
and
pusha
fadd
data16
lahf
xchg
jecxz
sbb
dec
pop
shr
stc
cmp
sub
cmovle
pop
xchg
stc
xchg
adc
(bad)
cwde
jmp
popf
adc
xchg
idiv
fld
mov
(bad)
sbb
cmp
inc
fs
mov
popf
retf
xor
inc
pop
inc
mov
mov
inc
sbb
nop
xchg
lods
pop
cmp
and
cwde
or
push
push
pop
out
mov
aad
shr
shl
pop
lea
ror
or
inc
inc
push
das
(bad)
inc
call
imul
and
in
lods
adc
and
xor
fwait
fwait
cmp
les
loope
sub
mov
rcr
fwait
inc
jge
sbb
and
js
mov
lea
push
mov
or
les
aaa
neg
mov
std
lahf
sbb
leave
dec
xor
hlt
sbb
sbb
retf
cs
call
mov
pop
aaa
pop
mov
popf
mov
stos
jne
out
add
movs
dec
or
mov
mov
test
and
mov
xchg
xchg
and
sbb
inc
pop
icebp
daa
dec
mov
push
test
cmp
xor
imul
jns
loope
dec
gs
das
imul
mov
shl
(bad)
dec
add
stos
fwait
lds
pop
(bad)
movs
mov
test
cmp
outs
dec
in
sti
fmul
pop
add
xor
pop
clc
fldenv
jge
ss
ss
sbb
test
mov
push
mov
xor
jns
lock
fstp
adc
imul
aaa
iret
ja
(bad)
xchg
jg
push
imul
xchg
sbb
pop
jl
int3
xchg
and
and
cmps
ins
das
sbb
xor
ja
mov
gs
or
sti
jle
mov
jecxz
dec
ret
push
push
fwait
sbb
fwait
leave
mov
lds
mov
mov
adc
mov
mov
jns
mov
mov
sar
and
pop
lods
(bad)
in
enter
push
in
dec
or
pop
sub
lods
pop
sbb
push
arpl
mov
mov
aam
in
dec
nop
daa
xchg
cld
iret
sub
push
or
lock
mov
dec
jno
jl
add
mov
cwde
sbb
popf
xlat
and
and
jp
cld
mov
stc
fild
jne
xor
dec
jecxz
mov
aam
mov
repz
cmp
sub
les
sbb
xchg
clc
jne
or
add
or
out
pusha
xchg
push
inc
sbb
in
cld
xchg
lods
call
mov
outs
arpl
pop
repz
xchg
mov
retf
enter
in
(bad)
mov
xchg
push
(bad)
mov
sub
push
mov
and
push
pop
loop
and
cs
out
imul
(bad)
call
push
lahf
add
sub
sub
and
cld
inc
out
add
push
pop
mov
ins
pop
xchg
imul
movs
mov
shrd
outs
mov
push
aaa
ret
outs
xlat
cmp
stc
call
in
mov
jnp
cmp
add
(bad)
mov
jo
ss
mov
ja
std
inc
lea
jl
and
and
pop
mov
popw
outs
push
imul
push
cmp
mov
xchg
ss
cmp
pop
lds
xchg
jbe
movs
add
fdivr
retf
xor
ficom
jnp
inc
rcr
jbe
adc
push
adc
dec
dec
out
out
xor
mov
repz
repnz
sbb
add
fdivr
ins
ffree
pop
sbb
pusha
mov
jno
stos
jmp
pop
xchg
or
cld
xchg
hlt
test
cmc
mov
in
sub
pop
adc
outs
in
xchg
jbe
cmp
lea
jl
movs
sub
fadd
loopne
push
push
mov
push
fnstsw
addr16
dec
adc
cmp
xor
jmp
cmc
or
outs
cmp
repnz
aas
into
out
xchg
sbb
ds
jo
and
ss
mov
mov
daa
mov
jae
test
or
or
aas
pushf
call
adc
scas
jmp
jne
pop
repz
pop
std
jns
fnstenv
mov
push
std
dec
loope
xbegin
(bad)
lock
mov
add
cld
cdq
int
xchg
mov
stos
xor
lds
adc
cmps
cmc
leave
mov
dec
mov
jbe
jns
jo
pop
outs
adc
movs
and
ins
sti
mov
sbb
adc
arpl
popa
add
inc
dec
scas
adc
shl
fisubr
stos
addr16
call
loop
stos
mov
and
mov
pop
sbb
push
or
and
js
sub
push
(bad)
mov
inc
mov
pop
stos
inc
sub
mov
shr
push
cld
mov
hlt
add
push
pop
data16
adc
scas
retf
(bad)
enter
shr
or
fxch
dec
xchg
jae
inc
cdq
add
test
addr16
mov
inc
fist
shr
mov
pop
sub
lds
and
mov
test
jns
dec
or
or
sahf
jmp
cwde
loop
mov
sbb
out
and
arpl
push
mov
jmp
lods
clc
ins
pop
enter
imul
ins
jl
sbb
adc
xchg
jmp
lds
icebp
pop
mov
xlat
daa
int
call
inc
mov
pop
out
aad
fwait
pop
and
or
dec
retf
sbb
test
sahf
adc
in
and
jae
out
cmp
jl
not
daa
js
inc
clc
pop
jo
lahf
repnz
and
cmp
mov
cmp
or
in
xchg
std
sub
aad
and
arpl
dec
scas
scas
mov
mov
mov
add
pop
shl
fwait
lea
test
jl
ffree
cmps
fdivp
mov
or
jge
mov
inc
cmps
je
das
jns
mov
fwait
xor
pop
stos
lods
jbe
sbb
dec
adc
gs
xchg
addr16
stos
cmp
jo
std
xlat
pop
jg
xor
out
mov
movs
cdq
cmp
xchg
add
ds
sahf
mov
dec
jecxz
test
mov
lds
xchg
les
daa
jecxz
js
sub
add
jns
adc
(bad)
popf
clc
inc
and
mov
in
mov
jmp
cmp
add
pop
mov
mov
xchg
pusha
es
scas
and
mov
sbb
pop
arpl
fucomip
push
lahf
(bad)
lea
aam
sbb
cmp
stc
or
ss
mov
or
and
std
xchg
jae
sub
push
(bad)
ins
jge
inc
and
sbb
push
fstp
adc
fcom
sbb
fisub
mov
bound
repz
push
inc
ins
mov
fcomp
jl
iret
lods
sub
mov
dec
dec
rcl
jae
inc
cdq
aas
sub
aam
out
popa
ret
retf
mov
jp
and
in
cmp
xchg
pushf
push
add
push
cmp
popf
xchg
xchg
(bad)
xchg
dec
idiv
push
jbe
test
in
mov
mov
shl
les
cmp
dec
and
mov
adc
retf
inc
dec
daa
or
mov
xor
popa
cs
or
sti
push
sub
mov
ja
xchg
and
pop
or
mov
stc
stos
aam
jno
outs
call
xor
jl
sub
add
outs
xchg
or
jbe
mov
add
xor
inc
fnstsw
sub
mov
pushf
inc
pop
ins
loop
lea
outs
fbstp
jnp
repnz
and
nop
test
in
sar
lds
ficomp
aas
fsub
test
or
aam
shl
imul
repz
mov
cs
push
pop
lock
add
xor
mov
stc
aaa
scas
and
sti
or
shl
push
out
push
in
push
aam
push
loope
int
test
in
pop
lock
imul
mov
nop
loopne
mov
mov
mov
addr16
imul
jae
cmp
mov
ja
out
xlat
ret
mov
xchg
mov
cmp
addr16
xor
mov
scas
mov
out
ds
cdq
ror
and
add
mov
adc
lods
leave
mov
or
fidiv
fadd
in
pop
cmc
mov
test
lods
nop
das
dec
nop
cmp
js
pop
xor
and
mov
outs
add
jecxz
sbb
(bad)
adc
push
loope
jb
scas
mov
sub
mov
push
mov
pop
cwde
push
mov
and
mov
push
daa
popf
in
jmp
inc
outs
(bad)
out
pop
jp
cmp
scas
retf
lods
lods
stos
imul
(bad)
jmp
out
lahf
fwait
pop
push
(bad)
retf
call
push
ror
jl
fmul
xchg
add
sti
fadd
sub
xlat
dec
and
retf
scas
inc
inc
jne
pop
in
sti
test
or
cmp
sti
sbb
pop
out
jo
or
fldln2
nop
adc
jb
imul
in
popf
je
js
pusha
stc
mov
cmp
or
mov
arpl
cmps
call
jle
mov
dec
mov
stos
aas
into
pop
jno
arpl
(bad)
pop
shl
pop
les
jne
movs
test
cmc
jns
add
jge
push
sar
adc
lods
cmp
imul
nop
push
jae
dec
(bad)
out
adc
xlat
movs
pop
in
lds
retf
fimul
jle
jmp
clc
rcl
or
jle
jne
ss
inc
mov
pop
mov
lds
ins
clc
in
out
pop
sti
jae
add
cmp
mov
jb
and
mov
mov
xchg
sbb
mov
cmps
cdq
mov
mov
cmp
jmp
xor
sbb
fld
sbb
cmps
cli
bnd
mov
hlt
inc
(bad)
js
sub
inc
dec
xchg
cmps
scas
xchg
pop
add
mov
leave
xchg
pop
jl
je
sub
inc
imul
mov
add
aad
mov
jno
inc
or
add
test
mov
movs
dec
out
dec
or
out
lods
cmp
jo
pop
cmps
iret
mov
mov
inc
xchg
(bad)
aas
inc
sub
adc
fwait
imul
dec
test
mov
icebp
add
dec
scas
adc
xchg
or
ds
push
pusha
adc
jl
xor
stos
adc
sub
lods
(bad)
call
fadd
ficomp
sbb
icebp
fcmovnbe
sbb
lods
xchg
fisttp
lock
sahf
push
dec
outs
mov
push
fist
xchg
mov
xchg
jecxz
jl
jecxz
cmp
loope
out
call
adc
test
mov
mov
jecxz
cwde
cmp
cmp
jge
pop
mov
mov
push
jge
je
(bad)
imul
cs
les
movs
and
pop
xchg
loope
fsub
adc
mov
mov
jecxz
stos
cmp
nop
lea
mov
cmps
ja
pushf
mov
sbb
lahf
aas
ss
push
retf
int3
jge
in
iret
jbe
psubd
sti
mov
dec
ror
push
ds
push
sar
movs
pop
stos
test
out
inc
mov
cmp
and
or
or
fsubr
xlat
scas
(bad)
shl
in
lods
in
sub
sahf
or
and
push
adc
xor
xor
mov
or
in
jp
pop
and
pop
jp
cli
fidivr
or
ficom
retf
(bad)
jle
fisttp
sbb
sub
pop
enter
ins
fbld
daa
pop
mov
pop
xchg
cmp
js
adc
xor
(bad)
sub
dec
stc
ret
sub
rcr
les
xor
add
ret
ret
(bad)
nop
leave
cmp
adc
js
lahf
inc
mov
ds
inc
inc
sbb
xor
mov
hlt
mov
or
sbb
mov
xchg
movs
and
fdiv
xor
ror
push
sahf
ss
mov
jecxz
xchg
in
pop
xor
and
adc
ss
cdq
test
das
inc
pop
clc
mov
inc
mov
mov
sbb
int3
cmp
scas
mov
mov
addr16
stos
cmp
add
out
and
cmps
scas
push
nop
js
int3
out
test
test
jmp
in
sbb
jg
jmp
mul
fmul
inc
retf
xor
adc
out
mov
(bad)
aas
int
inc
mov
xchg
add
adc
mov
fwait
cmps
daa
js
xchg
cmp
data16
retf
(bad)
jecxz
mov
push
pop
imul
jle
test
cmc
inc
test
fs
mov
(bad)
push
rcr
mov
out
cmp
mov
pop
repz
shl
call
lods
mov
fnstenv
cmp
push
fwait
mov
loop
dec
jb
or
stos
pop
inc
into
inc
and
fist
and
shl
and
ss
outs
xor
mov
cld
inc
xchg
clc
into
je
rol
add
into
push
fld
mov
clc
cmps
iret
aaa
cmp
jbe
sub
cdq
cmp
and
xchg
ret
hlt
sbb
or
ror
std
mov
sub
test
nop
sub
mov
sahf
iret
pop
pop
mov
pop
ret
add
mov
sbb
or
push
or
sub
outs
(bad)
movs
out
xor
call
mov
pop
mov
fcmovnbe
das
xchg
xlat
sbb
lods
sub
inc
inc
xor
sub
shl
shl
popa
gs
sahf
inc
mov
aam
dec
sub
inc
mov
imul
addr16
bound
pop
inc
popf
daa
in
iret
cwde
dec
std
pop
test
xor
mov
push
push
movs
scas
pushf
hlt
add
push
retf
icebp
out
ret
call
out
(bad)
dec
aad
mov
pop
popa
xchg
ret
lahf
xlat
push
adc
adc
(bad)
out
push
mov
sub
out
sub
fldcw
test
aad
xor
in
mov
mov
jmp
jp
mov
mov
fidivr
out
ja
clc
xor
dec
jo
out
push
test
and
daa
enter
jno
cmp
loope
retf
pop
push
push
dec
mov
xor
mov
aad
rol
fdiv
lds
jmp
pusha
(bad)
es
into
retf
stos
in
stos
stc
pop
adc
push
or
loop
dec
add
mov
mov
xor
les
jne
lea
jb
dec
dec
cmp
or
dec
call
or
pop
fidiv
push
stos
or
sar
or
mov
je
(bad)
ficom
bnd
(bad)
cmp
pop
mov
sbb
xchg
retf
scas
shl
(bad)
or
inc
adc
lock
and
out
push
adc
(bad)
mov
adc
or
jae
outs
loop
retf
mov
mov
dec
adc
ror
xor
jns
mov
ja
xchg
jmp
xchg
rcl
adc
scas
dec
sbb
push
ror
mov
ins
cmp
inc
push
adc
daa
sbb
mov
jb
ss
mov
dec
pop
adc
mov
leave
cmps
adc
loopne
daa
mov
div
out
pop
out
les
jns
movs
dec
leave
adc
icebp
xor
jo
fmul
sbb
sbb
jbe
add
fs
and
pop
mov
sub
xor
or
ins
lock
xchg
inc
mov
std
sbb
mov
and
out
sbb
outs
(bad)
mov
dec
in
xchg
inc
loopne
cmp
jecxz
add
push
inc
xchg
fcom
ins
(bad)
cmc
adc
call
push
mov
cmovbe
pusha
push
push
xchg
push
lods
shr
sbb
xor
adc
movs
mov
ins
retf
je
fld
dec
les
mov
mov
push
or
push
cld
mov
cmp
xchg
mov
add
xchg
shl
pop
cwde
movs
jne
(bad)
adc
dec
sbb
test
and
in
adc
pop
test
lods
mov
and
retf
xor
and
pop
mov
push
loopne
xor
mov
outs
mov
fmul
test
fwait
int
cmp
adc
and
pop
xor
inc
fimul
retf
ins
xor
hlt
push
adc
jae
inc
loop
fadd
push
cvtdq2ps
fimul
mov
cwde
jge
lahf
call
outs
bound
sbb
scas
sti
(bad)
xlat
or
shl
dec
mov
retf
mov
xor
mov
jb
mov
repnz
adc
repz
pop
rol
and
xchg
jmp
bound
adc
mov
std
mov
push
enter
mov
xor
(bad)
pop
or
mov
mov
mov
enter
and
out
lea
or
xor
scas
pop
ror
push
stos
repz
push
shr
xor
push
nop
xlat
neg
in
test
cmp
or
push
call
jo
out
pushf
inc
ret
sbb
mov
(bad)
push
mov
out
pop
imul
sahf
mov
and
sbb
dec
loopne
sub
fsubr
mov
fadd
add
mov
sub
out
stos
sbb
mov
cld
mov
stos
into
push
pop
(bad)
movs
repnz
or
adc
jl
cmc
rcr
or
outs
or
pop
or
test
or
pop
jns
test
cmps
and
not
add
rcr
(bad)
out
stos
lods
jge
stos
cmc
in
frstor
add
neg
cmc
in
idiv
xor
mov
push
push
leave
jmp
popf
dec
push
retf
fmul
jg
cmp
mov
out
cmps
jne
enter
xor
loopne
pushf
cmp
jne
mov
cmp
lahf
sub
div
inc
or
push
stos
(bad)
mov
and
loope
pop
ret
dec
pop
lds
jle
pop
sub
ins
aaa
xor
mov
fld
int3
sub
mov
and
dec
adc
xor
mov
lods
cmp
push
iret
mov
jg
mov
mov
push
fisttp
out
adc
add
xchg
gs
xchg
hlt
out
out
pop
inc
sub
xor
mov
cmps
sbb
jne
dec
bound
retf
mov
push
out
or
inc
mov
das
sti
mov
fldl2t
jecxz
xchg
xchg
enter
inc
cdq
fnstsw
mov
jmp
mov
mov
(bad)
fsubr
pop
in
sbb
push
test
std
loopne
ins
cmp
cdq
mov
and
out
int3
lods
sub
cli
test
mov
sub
je
add
push
or
mov
clc
push
cmps
cmp
imul
lahf
retf
imul
mov
xor
neg
sbb
push
ret
jne
imul
and
push
mov
mov
repz
fdivp
scas
xchg
xor
cmp
or
mov
not
push
pop
dec
aas
fwait
out
sar
cli
jnp
jbe
in
inc
iret
pop
shl
adc
add
(bad)
(bad)
(bad)
in
imul
stc
cld
jno
jmp
(bad)
aad
int3
add
pop
out
adc
mov
lods
aas
mov
lds
shr
mov
ja
pop
jno
xchg
mov
mov
and
sub
ficomp
push
outs
ret
stos
add
and
fwait
jg
inc
sub
jns
and
pop
pop
icebp
fisub
inc
jg
jb
xchg
xchg
jle
push
out
jo
(bad)
adc
shl
pop
mov
test
imul
rol
or
jecxz
and
mov
ror
pop
xor
push
cmp
push
adc
mov
mov
sbb
loopne
xchg
sub
fimul
mov
je
movs
fprem1
or
outs
add
lods
mov
jbe
or
ja
mov
je
adc
inc
out
jo
pushf
(bad)
cs
cdq
pop
xchg
lods
sbb
or
jno
xor
push
ss
in
add
fldcw
fnstenv
mov
inc
repnz
mov
into
jg
fistp
jbe
sub
push
call
pusha
xor
jecxz
int3
add
or
add
rcr
jl
imul
sbb
mov
xchg
leave
mov
popa
mov
and
sbb
ret
idiv
ss
mov
add
mov
cld
mov
or
fmul
aam
aam
xor
dec
cwde
cmp
pushf
into
push
pop
xchg
sti
pushw
push
xchg
(bad)
add
cmp
imul
and
mov
push
and
fisub
out
jle
iret
mov
in
cmp
and
inc
cld
cs
imul
xchg
push
lahf
cld
jae
rcl
jmp
or
adc
retf
sbb
(bad)
sahf
mov
pop
sbb
mov
jo
call
shr
push
scas
add
push
mov
imul
scas
push
cwde
jl
xchg
lahf
pushf
std
popa
push
shl
popf
cld
jnp
fld
xlat
push
icebp
call
pop
mov
adc
call
add
div
lahf
hlt
ret
push
js
mov
cmc
(bad)
hlt
lock
jp
out
or
in
js
or
fisub
in
xor
cmc
adc
xor
mov
es
pusha
cmp
sbb
sub
push
push
xchg
sub
pop
cmp
push
and
pop
or
sbb
(bad)
repnz
mov
jle
or
in
(bad)
xor
arpl
and
pop
mov
in
jmp
or
pop
mov
adc
lds
add
pop
jnp
cmp
push
pop
sub
test
ins
lods
test
bound
retf
int
pop
out
jns
xchg
add
out
push
in
sbb
pop
pop
out
add
or
fs
call
daa
sub
cmp
mov
or
scas
std
cmp
inc
mov
popa
mov
mov
push
sub
jmp
xchg
xchg
or
movs
pop
push
sbb
mov
ret
addr16
jmp
inc
shr
ret
adc
xchg
xor
mov
pop
push
adc
(bad)
ror
jecxz
fimul
add
add
sbb
mov
xor
jl
adc
push
xchg
push
dec
in
mov
push
daa
sbb
xor
adc
fisttp
lods
lea
sub
in
sar
retf
pop
jbe
xchg
aad
scas
or
push
mov
mov
shl
mov
lods
dec
out
jae
fst
icebp
sub
sbb
aas
pop
add
push
add
xor
stc
adc
cli
pop
dec
inc
add
(bad)
mov
cmp
jne
popf
jnp
mov
xchg
ins
jle
std
cmp
mov
bound
retf
dec
cmps
es
jge
mov
jb
inc
ja
lds
and
ss
(bad)
rol
mov
inc
outs
jmp
mov
fs
mov
fwait
sub
scas
test
test
adc
jo
fwait
cmps
push
iret
hlt
or
add
sub
lods
fcmovb
sbb
xor
setp
add
pop
lea
adc
shl
dec
add
adc
sub
sahf
xor
and
mov
div
lea
and
sbb
aad
(bad)
mov
pop
mov
jge
mov
xor
adc
stos
test
dec
(bad)
dec
int3
and
loop
stc
and
mov
inc
out
ins
movs
add
jge
in
dec
ficom
xor
into
test
jb
sub
shr
clc
int
lods
mov
test
lds
gs
push
shr
xor
(bad)
loop
jl
mov
fiadd
(bad)
sub
adc
pop
retf
adc
hlt
iret
pop
and
cmp
sub
ret
xchg
push
cmp
fsubr
sbb
mov
stos
ds
or
hlt
or
push
jb
jl
mov
dec
jecxz
fcmovne
sbb
call
mov
pop
add
sub
add
jg
ret
scas
ss
ss
xor
daa
pop
(bad)
sbb
dec
ss
test
icebp
fadd
adc
call
jl
iret
das
enter
jno
dec
pushf
enter
push
inc
fiadd
mov
mov
out
xor
push
fidiv
(bad)
jmp
mov
xchg
push
sub
fsubr
inc
sbb
mov
fwait
out
out
adc
push
mov
int3
or
or
outs
fnsave
or
ret
inc
ficomp
mov
inc
cmps
out
jmp
nop
mov
hlt
repz
push
jl
pop
mov
call
sahf
sbb
adc
adc
or
xchg
es
jno
dec
scas
mov
or
fcmovnbe
pusha
mov
into
cmp
cwde
sahf
lods
jbe
xchg
(bad)
cld
cmp
xor
js
xor
popa
mov
fmul
ror
rol
cmp
cmp
cmp
xor
lock
push
mov
shl
mov
adc
cs
out
(bad)
loopne
fimul
aam
add
aaa
jl
add
ins
inc
xchg
inc
push
aad
pop
push
int3
mov
bound
cmp
dec
ja
xchg
cwde
sbb
pop
xchg
sbb
scas
mov
loopne
ins
sbb
retf
rcl
ret
xor
or
in
stos
iret
mov
lea
push
mov
lahf
movs
jp
dec
aam
repz
adc
je
fcom
icebp
or
je
jo
cli
and
int
jb
xchg
shr
xor
mov
test
(bad)
dec
xchg
(bad)
fnstsw
add
pop
addr16
sbb
jl
retf
(bad)
pop
jmp
inc
xor
(bad)
out
inc
push
sbb
mov
data16
sbb
retf
clc
mov
mov
cmp
imul
ss
push
or
mov
fisub
and
sar
daa
push
push
and
pop
ss
inc
mov
sub
rcl
pop
push
xchg
iret
xor
pop
push
mov
jne
popf
inc
ds
imul
mov
xlat
repz
leave
mov
jge
adc
sbb
jecxz
jb
lods
add
jb
lahf
in
sbb
xchg
fistp
lods
push
cmc
and
mov
mov
sahf
sahf
add
out
push
mov
xchg
aam
out
int3
add
push
mov
add
push
(bad)
cmp
std
dec
jb
dec
fsub
and
sbb
cwde
dec
mov
stos
cdq
shl
loope
and
adc
fbstp
mov
inc
sbb
(bad)
rep
leave
sar
push
test
imul
aad
xchg
xchg
sub
xchg
sbb
clc
lahf
mov
adc
cmps
add
neg
(bad)
push
and
cmp
inc
push
push
retf
or
movs
xchg
jp
jns
pop
xchg
retf
adc
sub
mov
or
jge
mov
mov
cmps
(bad)
ja
imul
pop
mov
add
daa
fs
mov
(bad)
hlt
repnz
push
sbb
test
cmp
jp
stc
bound
aad
test
cmc
dec
and
iret
ins
adc
das
cs
pusha
retf
sbb
push
(bad)
(bad)
or
aaa
adc
js
fist
jecxz
icebp
add
shr
in
mov
shr
or
jno
ret
cmp
inc
in
add
(bad)
stos
test
ret
sub
push
add
sub
sbb
arpl
add
inc
out
stc
lods
(bad)
mov
push
movsx
dec
ffreep
aad
popa
sbb
jecxz
adc
pushf
scas
inc
dec
inc
sub
sub
fdiv
push
inc
and
popa
ins
or
xor
cli
hlt
add
fwait
dec
cs
jno
cmp
dec
inc
xchg
inc
sti
sub
(bad)
sub
push
add
(bad)
popf
or
bound
xchg
test
popa
xchg
das
push
lods
add
test
ins
pop
sub
dec
xor
xchg
loopne
jnp
jae
mov
frstor
clc
mov
(bad)
sar
xor
repz
dec
dec
leave
rol
and
push
hlt
xchg
or
sbb
mov
pushf
bound
aaa
sub
push
loope
xor
jae
sbb
lea
or
lds
cmps
adc
ss
jo
xchg
imul
cmps
pop
mov
lock
cwde
movs
test
pop
mov
jmp
aaa
lods
xor
xor
lgs
loopne
leave
out
int3
and
xor
loope
cmps
ret
test
mov
iret
push
retf
cmp
or
mov
push
stos
scas
jl
loop
jno
dec
adc
jg
add
neg
push
xchg
and
pop
adc
push
cmps
std
sub
mov
sub
test
retf
cmc
add
in
imul
pop
dec
mov
int
repz
retf
lock
add
lea
enter
lods
mov
outs
addr16
push
into
jo
push
and
push
mov
in
mov
setp
adc
mov
adc
int3
jbe
xchg
jl
jle
das
pushf
lahf
and
fs
cmp
add
pop
xchg
aaa
push
adc
push
lds
mov
cmc
fld
dec
imul
push
js
pop
jmp
lods
push
adc
push
inc
pop
cmp
stos
cmp
cmp
nop
scas
cvtps2pi
dec
cli
iret
pusha
mov
test
popa
mov
cs
jne
cs
sub
add
mov
daa
in
push
adc
retf
push
mov
dec
or
sar
mov
je
add
jns
(bad)
xchg
mov
mov
add
cld
(bad)
push
mov
arpl
jo
push
ins
push
movs
data16
call
ss
mov
aas
mov
(bad)
jecxz
xchg
adc
mov
jecxz
pop
loopne
int
in
inc
jl
mov
xchg
xor
inc
xchg
ret
jmp
mov
push
bound
cld
lods
cwde
fidivr
(bad)
(bad)
dec
rcr
retf
retf
and
loope
enter
dec
idiv
lock
xchg
fadd
aaa
cdq
shl
and
dec
popf
jg
dec
loopne
lods
xchg
fdivr
and
jae
push
pop
loop
xchg
mov
outs
(bad)
loopne
jne
jecxz
xor
sbb
sub
out
xchg
cmp
add
fcom
repnz
icebp
add
lock
es
mov
cmps
movs
and
out
sti
test
sub
mov
cmp
pusha
imul
jae
stos
mov
ss
fsubr
hlt
adc
fld
in
std
jle
fsubr
mov
mov
push
lahf
(bad)
push
stos
ja
jmp
cmp
dec
repnz
adc
(bad)
addr16
int
jp
es
jno
fs
lods
pop
out
mov
jge
dec
je
or
in
mov
mov
cmp
mov
xlat
xchg
ja
(bad)
pushf
sbb
sahf
inc
mov
leave
xchg
inc
aaa
cmps
cmp
push
enter
xor
jnp
pop
dec
popa
pop
aas
test
xor
pop
jne
and
add
mov
sbb
outs
xchg
stos
pop
cmc
in
xor
and
sub
(bad)
or
adc
jmp
lds
pop
xor
sti
fnstsw
adc
xchg
ds
or
test
out
mov
jno
cmp
test
stos
imul
das
pop
and
(bad)
aad
fstp
mov
dec
fst
das
call
mov
outs
lods
pop
out
sti
or
mov
push
das
cmps
repz
outs
pop
popa
push
and
mov
sbb
(bad)
popf
dec
stc
cmp
add
fstp
inc
sahf
push
push
jp
sbb
je
or
push
and
and
test
jle
fmul
std
jp
das
cmp
ss
and
loop
nop
cld
mov
pop
test
push
inc
stc
bnd
sbb
cmp
inc
icebp
(bad)
xor
pop
leave
ret
mov
not
adc
or
mov
mov
repnz
jmp
jnp
rcl
jmp
jo
and
fucom
clc
sete
sub
mov
ret
outs
sar
xor
adc
cmp
sbb
mov
pop
sbb
loopne
push
(bad)
addr16
inc
and
sbb
push
jmp
cmp
mov
jg
adc
into
test
test
xchg
fcomp
cmp
fwait
sub
sub
rol
pusha
call
mov
jle
xlat
xchg
and
push
mov
sub
dec
mov
fucomp
sbb
arpl
dec
pop
das
into
dec
mov
xor
cwde
add
imul
stc
hlt
gs
add
and
and
mov
mov
add
jge
jns
adc
adc
or
xchg
push
cld
push
cli
lods
cmp
dec
dec
aaa
and
sahf
cwde
push
dec
je
cmc
lds
imul
icebp
push
gs
adc
rcl
imul
mov
ja
xchg
mov
pop
mov
les
lods
pop
xor
les
in
loopne
mov
out
movs
repz
mov
or
arpl
inc
pop
call
mov
xor
xor
dec
and
fdiv
aam
shl
mov
xchg
mov
xchg
sub
hlt
dec
lods
scas
mov
or
xor
(bad)
std
addr16
call
out
mov
lods
mov
mov
std
push
push
retf
sbb
push
xchg
or
pop
frstor
cmp
jle
jns
imul
pop
mov
cmp
push
sbb
jg
or
arpl
push
dec
jno
or
sti
cmp
cmp
pop
es
sub
push
imul
cmps
fst
inc
in
scas
mov
xor
mov
jle
std
ja
sbb
pop
sub
outs
int3
jmp
imul
(bad)
call
in
push
cmps
sub
ds
mov
sbb
rcl
mov
inc
dec
mov
cmp
jecxz
xchg
xchg
enter
enter
icebp
test
sti
ja
(bad)
(bad)
mov
outs
in
xchg
inc
cmp
test
add
cmp
pop
test
fstp
jae
(bad)
lods
lock
lea
fidiv
rcr
popa
(bad)
aad
add
cmp
inc
cmps
dec
push
ja
inc
cmp
lea
xchg
mov
add
sbb
lods
inc
push
(bad)
lea
call
push
xor
mov
xchg
xor
push
jge
xor
cmps
mov
iret
cmp
mov
mov
push
jle
rcl
dec
movs
fldcw
xor
xchg
and
mov
cmp
inc
inc
je
inc
das
sub
cmp
pop
aam
cmp
inc
lds
pop
in
jecxz
push
imul
dec
push
mov
mov
pop
sbb
call
add
or
jo
pusha
mov
out
cdq
fs
leave
clc
add
add
cmp
or
dec
pop
inc
(bad)
pop
out
ffree
lods
pop
inc
int
stos
pop
mov
mov
pop
mov
push
pop
dec
arpl
cmc
sub
xor
ins
mov
les
mov
mov
sbb
aas
fisttp
pusha
jbe
xchg
sbb
pop
push
push
pop
mov
retf
arpl
pop
push
call
call
or
inc
xor
sub
sub
ficom
arpl
dec
lds
inc
stos
ds
or
clc
fnsave
push
fcmovu
das
cmp
jns
not
jmp
repnz
loopne
xor
outs
mov
push
(bad)
out
and
imul
fincstp
jb
ja
jnp
outs
xchg
or
icebp
ss
add
ss
call
test
ffreep
pop
aas
(bad)
iret
dec
mov
loopne
stos
fcomip
scas
xchg
add
shl
cmp
mov
add
cli
xor
mov
ins
xor
push
sbb
cmp
mov
int3
and
mov
xor
outs
jg
cmp
push
fisub
fsub
and
out
dec
sbb
movs
inc
test
xchg
mov
lahf
mov
test
inc
mov
in
call
adc
add
jge
push
ss
in
int3
pop
(bad)
scas
cwde
out
mov
cmps
xchg
js
je
push
dec
mov
and
test
mov
sbb
dec
fsubr
js
cmp
call
ds
xchg
and
jge
xlat
cmp
ficom
test
retf
inc
aad
daa
mov
mov
mov
jno
jo
shr
sbb
rcr
mov
mov
rcr
adc
in
push
xchg
xor
in
in
jl
push
push
sbb
aas
sub
fs
ret
xchg
push
xor
inc
ss
dec
in
int3
pop
out
and
push
push
ins
cmp
push
int
and
shr
mov
sahf
cmp
mov
xor
sub
ficomp
sub
and
prefetchwt1
rcl
xchg
lds
rcr
lahf
push
mov
push
and
and
shl
mov
lods
xor
mov
out
adc
sbb
mov
sub
or
(bad)
cdq
sub
ficomp
jl
mov
sti
test
js
add
sbb
mov
push
jle
sbb
fldcw
mov
or
mov
jno
push
shl
mov
add
mov
xor
inc
inc
fnsave
mov
xor
mov
loop
mov
or
cld
mov
or
mov
mov
add
sub
js
add
inc
dec
out
fwait
jg
iret
ins
pop
adc
nop
stos
pushf
inc
div
hlt
sub
or
in
out
adc
stos
push
fstp
pop
pop
mov
mov
push
dec
aam
jmp
xlat
out
mul
push
add
or
inc
cli
add
sbb
pop
xchg
pop
hlt
adc
int3
sbb
xchg
movs
(bad)
jmp
rcr
adc
mov
jmp
lods
jb
jmp
xchg
cld
jp
mov
jmp
leave
gs
mov
jle
cmc
inc
cs
pop
or
lock
xchg
fwait
push
leave
sbb
stos
fistp
push
ret
and
mov
push
adc
imul
sti
and
rcr
stc
push
adc
out
jl
add
(bad)
or
es
sub
lods
dec
imul
repnz
adc
repnz
in
mov
(bad)
mov
imul
pop
cmc
stc
in
leave
jle
xchg
outs
sahf
or
or
xchg
add
test
pop
push
mov
dec
sbb
mov
test
and
or
adc
dec
test
enter
lock
mov
call
arpl
jmp
pop
jo
jmp
(bad)
rcl
add
xchg
rol
data16
add
test
leave
mov
cli
std
gs
retf
in
(bad)
xchg
outs
mov
(bad)
push
add
pop
bound
cmc
(bad)
clc
jnp
rcr
dec
out
jp
mov
mov
(bad)
push
mov
lock
inc
and
lahf
ins
jmp
sahf
fist
je
jmp
neg
ficom
and
xor
nop
dec
sub
xchg
dec
fld
or
out
les
or
sbb
jg
push
sbb
repz
mov
nop
pop
retf
mov
les
push
fnsave
addr16
ja
xlat
xor
imul
mov
mov
rcl
and
ins
mov
out
cwde
inc
cmp
push
pop
aaa
mov
dec
dec
shl
pop
outs
int3
loop
sub
cld
sti
std
push
test
stc
clc
es
call
ret
dec
and
dec
inc
push
cmp
stos
aad
add
mov
adc
and
jb
sbb
popf
jge
pop
in
(bad)
movs
pop
jns
pop
pop
je
mov
push
imul
repnz
cmc
movs
retf
rcl
add
xor
jo
fld
enter
push
movs
inc
mov
pop
pop
mov
xlat
shr
iret
jnp
ret
scas
test
and
arpl
(bad)
dec
and
outs
or
mov
jp
adc
enter
fld
addr16
push
or
inc
push
push
sub
sbb
push
out
xchg
jbe
jo
add
and
fmul
and
out
pop
mov
aam
popf
loop
xchg
fnstenv
cmp
repnz
arpl
and
add
jne
pusha
loop
adc
jb
sub
popa
jg
pop
mov
lods
mov
adc
lock
jne
pop
xchg
dec
test
adc
xchg
lahf
inc
mov
(bad)
ja
outs
je
mov
icebp
int
ror
adc
call
jle
xchg
cmps
scas
jae
add
sahf
(bad)
and
(bad)
jle
pusha
push
stos
push
add
mov
iret
ins
pop
addr16
mov
cli
xor
jecxz
mov
xchg
jb
adc
mov
push
xchg
jle
test
or
out
movs
repnz
pop
clc
sbb
test
repnz
inc
(bad)
hlt
adc
call
out
retf
dec
rcr
and
mov
fisub
add
idiv
push
in
cs
mov
aad
or
imul
inc
fdiv
scas
push
sbb
xchg
stos
mov
inc
gs
xchg
sub
ret
inc
out
xchg
(bad)
aaa
push
push
cmps
scas
inc
test
jmp
(bad)
fisubr
fcmovu
dec
scas
pusha
(bad)
test
cmps
adc
test
cmp
inc
xor
into
mov
cmp
(bad)
xchg
ret
(bad)
cld
jne
aas
pop
adc
icebp
sar
xchg
inc
imul
stos
mov
push
movs
push
(bad)
arpl
sbb
push
mov
ins
or
xor
sbb
mul
jp
mov
arpl
jge
cmps
adc
sbb
xor
or
push
test
jl
rol
loope
sub
mov
dec
out
mov
cld
or
or
call
add
aas
cmps
cmp
stos
pushf
mov
out
jge
icebp
(bad)
mov
aaa
in
xchg
scas
or
pop
xchg
jecxz
aaa
cmc
ins
hlt
pop
pop
call
mov
rcl
sbb
loop
jle
or
aaa
(bad)
xchg
bnd
xchg
out
fistp
out
push
es
or
xor
test
aad
mov
jmp
mov
dec
sub
pop
xor
lods
out
xlat
jl
jnp
outs
adc
test
and
mov
xor
jns
addr16
sbb
std
stc
mov
ficomp
out
aas
cmp
pop
lock
xor
sbb
fcomip
push
jle
xlat
dec
dec
mov
repnz
xchg
add
mov
jmp
ds
inc
aad
outs
xchg
stos
out
xchg
mov
mov
test
jnp
mov
xor
fwait
(bad)
adc
out
lock
or
sbb
push
popf
fld
test
fcom
xlat
add
sub
push
stos
or
cmp
sbb
outs
sbb
or
leavew
out
inc
sbb
loop
sbb
call
add
inc
xor
adc
jp
mov
(bad)
and
in
sub
xor
add
retf
loop
xchg
mov
push
das
int3
mov
adc
push
sub
xor
test
mov
or
dec
(bad)
xor
xchg
cmp
xchg
fsub
inc
rcl
jo
cwde
xchg
jno
inc
(bad)
cmp
xchg
jp
pop
(bad)
cli
mov
fild
jns
mul
jecxz
mov
xchg
dec
(bad)
add
dec
js
push
push
dec
pop
cmc
jl
cdq
xor
xor
cmps
and
mov
mov
or
cmp
sbb
xchg
rcl
addr16
vmovd
scas
sbb
cmp
adc
in
out
aas
jg
dec
xchg
loop
out
or
add
out
out
ss
leave
mov
mov
cmps
lahf
pop
dec
dec
psubusb
mov
test
mov
add
pop
sbb
add
cs
fadd
xor
or
jmp
test
jmp
xchg
cld
pop
ror
scas
repnz
cmps
sbb
dec
in
push
inc
push
movs
sub
loope
jae
lock
mov
popf
push
test
jg
or
dec
sbb
test
cmp
shl
inc
call
ficom
aaa
(bad)
dec
and
stc
fwait
out
adc
jns
xchg
xchg
adc
lds
xchg
push
shl
add
gs
aas
rol
vmread
mov
stos
imul
hlt
jbe
es
mov
fadd
push
test
cs
dec
xchg
sbb
shl
push
mov
mov
fs
mov
ja
or
mov
icebp
mov
pop
jnp
or
adc
ins
pop
aam
inc
in
mov
add
mov
mov
retf
stos
shl
fistp
jbe
push
sar
shl
adc
push
fnsave
xor
aad
xchg
nop
movs
pop
out
cmp
repnz
jae
ds
jle
push
adc
jmp
pushf
adc
or
push
test
inc
and
cmc
or
sar
and
push
pop
leave
std
cmps
pop
ret
ja
adc
hlt
cli
jmp
mov
jl
(bad)
(bad)
mov
dec
push
dec
add
inc
jmp
in
hlt
mov
and
jg
cld
sti
adc
mov
cdq
or
push
sbb
jno
minps
add
popa
mov
imul
out
lds
arpl
xor
popf
call
je
mov
cmp
jmp
mov
test
aad
mov
mov
in
cmp
int
pop
inc
stos
mov
popf
pop
inc
ins
(bad)
or
xchg
add
loopne
cmp
push
and
cwde
xchg
jle
sbb
jae
xchg
jmp
cmp
mov
jns
cdq
inc
sbb
bound
and
jns
cmp
in
mov
sub
adc
pop
(bad)
hlt
mov
cmp
sbb
sbb
js
mov
les
out
inc
adc
aas
aad
daa
cdq
scas
test
mov
aad
out
imul
xchg
xchg
sbb
ja
movs
stc
movs
xchg
std
add
pop
mov
aad
fstp
fwait
mov
movs
inc
dec
mov
xor
aaa
pop
mov
cmps
retf
xchg
jecxz
dec
in
out
sub
int3
test
cmp
pusha
mov
cld
lock
cmp
xor
inc
xchg
cld
loop
jl
in
retf
jns
popa
push
mov
jmp
mov
fcomip
sbb
push
mov
outs
mov
xor
std
repnz
(bad)
lods
add
in
or
jecxz
pop
jge
imul
cmps
inc
fs
xchg
ins
ror
repnz
mov
mov
dec
xor
mov
in
ja
sar
loop
test
pop
sub
pop
movs
xor
jne
cld
mov
and
cs
add
out
lods
pop
hlt
pop
push
sar
jnp
sub
nop
xor
fdivr
ja
push
inc
cmp
cmp
and
pop
movs
sbb
fidivr
out
inc
retf
ins
pop
fwait
shr
repz
ret
pop
and
out
es
jo
in
mov
jns
in
xor
retf
xor
adc
cld
xor
push
xor
retf
push
push
mov
and
rcr
stos
inc
or
dec
loop
mov
dec
or
dec
adc
mov
jmp
adc
push
ins
ja
inc
xchg
inc
sbb
test
movs
jne
push
xor
xchg
mov
clc
mov
lods
fwait
xchg
dec
sti
and
(bad)
fistp
mov
inc
fstp
push
mov
inc
cmp
bound
jns
mov
pusha
mov
loop
call
xor
sub
push
mov
arpl
push
pop
dec
xchg
gs
add
sbb
push
dec
call
cdq
(bad)
(bad)
xor
sbb
add
popf
add
pusha
or
ret
inc
adc
mov
mov
imul
out
cwde
xor
retf
inc
out
sub
mov
xor
pop
dec
arpl
add
pop
loopne
(bad)
lea
or
or
in
loop
ds
cli
shr
fwait
mov
ins
(bad)
mov
int
data16
mov
add
sub
jp
push
test
cmps
cmp
jmp
fsubr
jl
mov
or
inc
outs
rcl
(bad)
fsub
addr16
pop
cmps
jle
ins
fimul
xlat
leave
xchg
cmp
jns
inc
loop
test
push
sbb
pop
sbb
inc
das
nop
stc
in
retf
(bad)
jecxz
add
xchg
sti
ret
loopne
mov
dec
inc
retf
inc
and
pop
enter
fs
xchg
mov
sub
xor
xchg
push
stos
in
mov
jns
ins
sbb
xor
cmp
fmul
out
scas
(bad)
mul
rol
adc
cld
add
movs
(bad)
sub
adc
xchg
jl
add
loope
dec
outs
xor
inc
aad
pop
or
pop
mov
movs
mov
gs
xor
call
aaa
shl
daa
xor
ret
jbe
out
mov
icebp
scas
leave
xchg
pop
xchg
sub
scas
pushf
jo
mov
ins
in
cdq
sub
xchg
push
cld
stos
sub
cmps
mov
arpl
push
es
pushf
out
adc
int
and
xor
aam
sbb
cwde
pop
rcl
iret
and
add
imul
sti
div
not
rcl
xor
(bad)
cmp
jb
aas
pop
es
inc
mov
int
xor
inc
mov
retf
sbb
popf
js
test
xchg
xor
int
xor
pop
pop
jp
loope
pop
sbb
dec
gs
mul
cmp
mov
loop
xor
stc
shl
neg
jo
(bad)
jle
xchg
push
xchg
xchg
loopne
sbb
dec
sbb
pop
sub
mov
push
pop
retf
ins
push
js
pop
inc
jo
jmp
pop
add
adc
push
(bad)
repnz
stos
and
push
mov
mov
aaa
and
ins
pop
adc
push
and
push
pop
xchg
ins
stos
out
inc
fsubp
jmp
jo
loope
jg
pop
or
xor
xor
js
dec
loop
imul
add
leave
(bad)
ja
pop
jg
mov
inc
jne
cmp
jl
aam
ret
data16
and
lea
sbb
mov
pop
lea
enter
clc
fwait
mov
test
aad
pusha
xchg
aam
cdq
stos
daa
outs
adc
cmc
frstor
retf
add
mov
bound
cmp
cli
ss
cmc
stc
(bad)
sub
test
xor
fnstsw
fwait
jnp
stos
and
stos
sbb
jp
(bad)
xor
pop
mov
scas
jmp
push
nop
outs
jae
mov
sub
sub
outs
in
fild
sub
les
jle
push
int3
repz
sub
stos
dec
jge
xchg
and
ror
mov
rcl
mov
sub
in
aas
jo
sub
loopne
js
sub
jp
pop
and
adc
add
in
int
pop
inc
popa
push
pop
lods
inc
sbb
scas
push
xor
jb
jge
and
or
xlat
mov
xor
mov
(bad)
pop
push
lahf
sti
call
push
mov
sub
fsub
mov
sbb
fyl2xp1
aad
lods
push
fistp
and
cli
xchg
jl
les
mov
idiv
(bad)
add
cmc
or
push
ja
xchg
sbb
sub
mov
and
fld
sar
push
and
push
(bad)
out
push
mov
pop
out
aas
daa
test
lock
pop
jmp
xor
sbb
out
fsubp
pop
adc
shr
sbb
inc
stc
repnz
adc
in
dec
test
es
data16
call
test
es
les
xor
jb
cmp
xchg
dec
enter
aam
sbb
lea
mov
ret
ret
mul
popa
fcom
ret
push
inc
cld
add
retf
aaa
scas
std
pop
adc
jmp
dec
and
ins
mov
inc
stos
neg
xlat
popa
xlat
push
push
sub
xlat
mov
cli
dec
loopne
lods
cwde
or
mov
cmc
jg
fild
mov
inc
bound
popf
cmps
inc
sbb
sub
stos
pop
data16
xchg
inc
adc
mov
xchg
pop
jle
dec
(bad)
ds
dec
(bad)
ss
cmps
ret
adc
push
xor
sub
ja
xchg
repnz
gs
push
sub
add
std
xchg
lods
inc
push
retf
xor
gs
cmp
inc
loop
out
add
push
leave
jae
(bad)
sub
cmps
fistp
push
dec
cmp
fsubp
pushf
push
imul
shl
cmp
movs
test
mov
jbe
cwde
cli
fisubr
(bad)
jge
push
in
in
push
cld
fwait
into
add
int
mov
lods
stos
mov
mov
out
or
dec
movs
(bad)
fstp
adc
adc
mov
data16
cld
cmps
push
(bad)
mov
add
dec
push
arpl
adc
or
or
jle
frstor
cmps
xor
cld
sbb
sub
retf
push
xchg
mov
popa
inc
push
pop
int3
inc
sahf
or
bound
inc
pop
sti
fdivr
sub
and
imul
and
scas
ror
inc
push
in
push
out
mov
sti
inc
lds
les
mov
nop
imul
arpl
sbb
sub
gs
dec
ins
scas
xor
xchg
sub
sbb
mov
mov
mov
jl
icebp
mov
mov
dec
and
jle
jae
xchg
scas
pop
pop
mov
mov
sti
sbb
dec
and
xchg
(bad)
cdq
cmps
inc
lods
sahf
je
popf
(bad)
aaa
shr
rcr
mov
fldcw
push
test
std
aas
shl
out
cmp
ror
ins
add
repz
les
loope
pop
inc
scas
arpl
cmc
xchg
and
rcl
in
loope
mov
xchg
adc
mov
icebp
and
fidivr
call
cmp
mov
fs
nop
sbb
fnstcw
int
(bad)
js
push
sahf
jne
ja
sar
jo
jle
mov
push
fmul
sar
test
aam
xor
add
repnz
mov
and
mov
out
cmovp
loopne
push
adc
outs
out
das
cli
(bad)
or
pushf
dec
cmps
cdq
fld
adc
mov
and
sbb
aad
je
sub
adc
iret
pop
mov
cmp
movs
stc
popf
mov
mov
leave
sbb
test
out
loop
xor
loopne
cmc
std
clc
clc
(bad)
pop
and
retf
xor
jbe
retf
cmp
cmp
rcr
mov
pop
sti
jo
(bad)
ja
xchg
out
or
push
xor
adc
js
jo
es
xor
push
mov
push
stos
cmp
retf
mov
test
jge
dec
sbb
idiv
cld
push
cs
(bad)
daa
inc
or
fwait
adc
retf
dec
sub
dec
pop
jno
lods
mov
mov
push
mov
jb
fidiv
push
dec
and
lock
mov
xchg
xchg
scas
xor
stos
lods
add
push
repnz
xchg
cmps
sub
test
out
mov
jo
rcl
cwde
xlat
pop
inc
push
addr16
outs
jno
or
daa
loope
sub
mov
pop
push
les
in
add
mov
dec
inc
movs
data16
into
stos
fst
int
pop
push
std
sahf
jl
inc
xchg
jmp
out
outs
(bad)
dec
or
mov
test
sahf
lock
das
xchg
pop
fs
jg
rcr
sub
cdq
jb
ss
cmps
int3
sbb
or
nop
icebp
mov
neg
push
mov
fiadd
ret
cld
scas
fst
sbb
inc
cmps
mov
xor
stos
shl
xchg
jecxz
(bad)
rcr
into
xor
int
or
in
loopne
icebp
mov
adc
and
push
push
rcl
mov
movs
clc
int3
pusha
jno
stos
popa
pop
jmp
imul
lock
pop
mov
lahf
cmp
scas
mov
mul
lds
shl
pushf
jle
ffreep
out
sti
scas
and
mov
(bad)
jae
pop
out
xchg
mov
shl
push
out
js
int3
hlt
push
lock
lods
jp
in
cmc
adc
std
xor
push
retf
and
jae
inc
or
xor
pop
add
mov
int3
sar
adc
(bad)
sti
xchg
in
adc
(bad)
fmul
add
mov
dec
das
frstor
pusha
xor
xchg
cmps
dec
(bad)
push
out
mov
loope
jecxz
fstp
retf
cmps
out
jmp
adc
sbb
sbb
jp
in
xchg
jnp
sub
shr
iret
neg
sub
fisub
push
loop
ret
jmp
aaa
aad
pop
rol
aad
in
xchg
(bad)
add
mov
lea
(bad)
sbb
stc
xor
push
out
movs
inc
pushf
xor
popa
cmp
stos
rcr
retf
dec
add
push
sahf
scas
dec
xor
out
dec
push
xchg
inc
pslld
je
imul
stos
xor
lods
adc
xchg
test
hlt
or
clc
shr
repz
out
arpl
test
or
jge
adc
xchg
in
jmp
dec
fincstp
jecxz
adc
or
mov
pop
ja
dec
sub
cmp
nop
dec
aas
(bad)
cdq
arpl
jg
push
test
ror
rol
sub
outs
dec
mov
out
in
push
push
fadd
in
frstor
pop
xor
(bad)
(bad)
movs
fisttp
xchg
mov
les
imul
mov
push
test
xor
pop
enter
cmp
je
aaa
jne
inc
xchg
cmp
adc
repz
in
pop
sahf
jnp
mov
mov
lods
movs
xor
vcmppd
test
ror
aam
mov
push
cli
lods
adc
in
adc
sbb
mov
push
inc
stos
sub
jnp
push
nop
stos
sbb
cmp
cmps
mov
leave
and
mov
outs
call
push
ss
pop
outs
xchg
mov
push
imul
int
push
and
es
push
mov
scas
es
imul
sub
inc
mov
dec
add
ins
mov
rcpps
in
imul
and
aaa
xor
or
mov
push
or
pop
or
fsub
xchg
(bad)
jecxz
mov
cmp
add
jmp
push
dec
lahf
(bad)
fist
or
out
mov
dec
mov
jmp
fist
(bad)
repz
imul
sub
adc
cmp
sbb
cdq
mov
ror
outs
cmp
into
push
nop
shl
sub
mov
jp
outs
push
push
jno
mov
xchg
jns
cli
adc
mov
int3
sbb
cmp
daa
add
mov
in
or
mov
aam
(bad)
xchg
xchg
pop
adc
adc
xchg
push
xchg
mov
mov
div
push
lods
(bad)
retf
sbb
(bad)
mov
xor
adc
imul
lahf
(bad)
sti
dec
les
loope
shl
cmp
mov
mov
iret
fsubr
arpl
leave
mov
rcl
outs
jge
or
add
ret
sbb
cmp
cli
fbstp
sub
ffreep
add
push
inc
(bad)
loop
(bad)
inc
xchg
cmp
test
in
pop
cmp
test
stos
bound
clc
jns
into
cmp
out
xchg
aas
jb
jmp
adc
test
sbb
jmp
fadd
aas
mov
inc
lds
ret
aaa
push
pusha
pop
add
sub
test
fxch
xchg
push
dec
xchg
or
fwait
leave
ins
mov
dec
or
movs
bound
in
jg
movs
test
ja
les
iret
nop
lds
arpl
push
xor
adc
adc
dec
rol
inc
cmc
inc
sub
hlt
adc
rcl
mov
dec
pop
xchg
xchg
push
add
js
dec
lea
cmps
aaa
jmp
push
mov
fimul
inc
jecxz
mov
cmc
loop
arpl
inc
sub
repz
cmc
and
xor
div
jbe
loopne
push
adc
mov
pop
push
mov
rol
pop
xchg
sub
jmp
scas
or
jmp
mov
in
mov
sbb
inc
aam
mov
mov
or
or
sub
adc
sbb
adc
movs
push
std
cmp
pop
dec
mov
cld
mov
dec
mov
jl
fsubp
cs
cmp
in
iret
sub
cmp
push
aam
jmp
xchg
pop
jl
inc
rcr
sbb
ror
mov
inc
mov
data16
ds
repnz
dec
rcl
repnz
test
(bad)
rol
aaa
cwde
push
lds
xor
call
sti
out
xor
xor
push
sbb
dec
fwait
adc
pop
lahf
fisubr
and
mov
push
test
cmp
ss
jmp
call
or
push
mov
dec
add
mov
xchg
add
push
push
xor
sub
popa
test
movaps
rcr
stos
add
sti
adc
push
into
push
leave
aaa
push
and
rcl
hlt
cmp
adc
push
loope
fadd
mov
inc
dec
mov
push
mov
out
push
aaa
fs
dec
mov
cdq
cmc
sub
or
xchg
pop
int3
cmp
mov
push
cmp
jl
jle
sahf
(bad)
fmul
rcr
adc
mov
add
xlat
fdivr
jbe
pop
xchg
cmps
in
mov
iret
xchg
ss
and
fidivr
clc
imul
test
rol
mov
jne
enter
mov
mov
mov
daa
out
cs
fsubp
repnz
cdq
loopne
jge
jnp
push
and
push
aaa
rcl
frstor
pop
dec
add
arpl
push
xor
cdq
mov
lock
ja
imul
inc
test
jo
pop
and
shr
mul
or
sahf
sub
inc
icebp
sbb
xchg
add
das
aad
fst
mov
push
mov
adc
sub
mov
cmps
fstp
ins
(bad)
push
or
xor
pop
jge
xchg
dec
in
pop
mov
mov
mov
jecxz
cs
jae
jecxz
push
xor
and
mov
out
xchg
fisttp
cmp
test
out
or
out
cmp
fsubr
fild
dec
xor
cmps
xor
cmp
xchg
jmp
cmps
out
mov
in
mov
mov
popa
sahf
push
mov
push
test
dec
lahf
cmp
xlat
and
sub
sbb
sbb
mov
aam
into
xor
sar
neg
(bad)
(bad)
fmul
int3
add
inc
call
ins
(bad)
pushf
dec
push
jge
inc
mov
aam
add
pusha
sub
adc
cmp
(bad)
mov
mov
movs
sbb
push
sub
xor
xchg
and
add
push
jecxz
(bad)
in
dec
ds
inc
mov
dec
mov
les
xchg
xor
adc
sar
jle
in
cmp
push
inc
gs
dec
sub
fidivr
into
lds
test
and
sub
inc
fldcw
icebp
cdq
fld
sbb
cmp
xor
loop
gs
gs
jmp
imul
and
push
add
leave
push
push
stos
jge
mov
push
pop
and
jo
add
or
fstp
sbb
inc
mov
xchg
push
mov
pop
mov
ins
cmovnp
ret
stos
test
pop
cmp
lods
sub
js
fnsave
xor
xchg
push
out
add
repnz
xchg
fdiv
mov
scas
pop
outs
mov
outs
nop
and
mov
jl
xchg
xchg
or
pop
lea
movs
fadd
retf
call
rcl
push
sub
pop
in
dec
stos
jbe
rcl
sub
or
popf
jg
add
push
(bad)
pop
in
iret
mov
xlat
retf
shr
(bad)
sub
sub
sub
mov
and
dec
mov
lock
dec
out
mov
popa
ins
jae
mov
test
cmps
jae
in
imul
scas
inc
jae
adc
adc
sahf
sahf
or
xchg
sar
fisttp
inc
sbb
out
dec
shl
into
xchg
fsubr
retf
xchg
repnz
in
ret
mov
jp
mov
mov
test
sahf
mov
mov
inc
mov
add
and
aam
jb
or
enter
(bad)
sub
push
xor
jl
test
sar
xlat
mov
sbb
into
jne
inc
sbb
dec
(bad)
push
pop
add
(bad)
mov
pop
int3
das
push
loop
(bad)
push
rcr
jne
dec
sbb
or
aaa
loopne
repz
xor
inc
cmp
pop
call
jl
pop
fsubr
push
fsubr
int3
ror
aad
adc
cmp
add
push
adc
fsubr
out
fisub
pop
retf
pop
xchg
push
pop
and
mov
fimul
xlat
das
and
add
fimul
mov
sar
movs
scas
ret
jbe
jge
stc
in
and
ret
jbe
add
inc
mov
sbb
add
imul
pop
jo
and
push
ds
xchg
dec
xchg
cmp
sub
iret
jb
les
js
(bad)
or
push
pop
fwait
and
aas
leave
adc
adc
jecxz
or
and
mov
jecxz
push
sub
xor
cwde
pop
shr
mov
jp
aaa
jmp
pop
clc
(bad)
icebp
in
mov
hlt
fidiv
push
iret
or
cmp
cmc
test
cmp
jmp
dec
cmp
xchg
addr16
leave
ja
aas
push
ror
std
sub
jl
enter
mov
xor
and
and
mov
arpl
jp
cmp
(bad)
(bad)
cmp
fs
sbb
cmp
sub
out
jno
cmp
dec
(bad)
ficom
std
pop
cmp
sub
jns
sahf
inc
mov
loopne
fcomp
retf
push
jnp
jns
cmc
pop
fwait
cmp
sbb
popf
not
daa
inc
sbb
loopne
push
ins
and
cli
pop
push
scas
or
outs
add
into
sub
jl
xchg
ret
fxch
cmc
or
cdq
dec
leave
push
cmps
mov
push
out
loop
sub
inc
jg
nop
dec
xchg
sar
inc
xchg
in
mov
xor
call
sbb
clc
das
adc
(bad)
mov
paddq
into
or
or
test
int
outs
xstore-rng
cmps
add
cmp
xchg
(bad)
sub
xchg
xchg
add
mov
test
out
jmp
leave
sbb
mov
arpl
(bad)
pop
shl
test
push
es
push
ror
xor
pop
mov
mov
or
xchg
mov
xor
pop
(bad)
mov
ja
xchg
cmp
dec
arpl
repnz
pop
popf
mov
icebp
lods
adc
movs
jecxz
adc
popa
mov
popf
push
retf
ins
or
hlt
jns
dec
sub
adc
jnp
stos
and
sub
jo
dec
(bad)
stc
test
stc
or
add
iret
xchg
mov
int3
xchg
(bad)
pop
jnp
jo
xor
arpl
jp
(bad)
cmps
xor
pop
lahf
scas
push
call
xchg
push
push
jo
xchg
inc
xor
mov
lods
sub
ret
(bad)
ins
mov
pop
jg
jns
add
mov
scas
repz
lods
xchg
inc
or
push
add
iret
movs
xchg
add
retf
cmp
add
jg
(bad)
rcl
jmp
rcr
sbb
pop
outs
cmp
xchg
pop
mov
ss
mov
in
jl
cmp
int
fwait
xchg
div
fcmovu
das
imul
or
cmp
sub
sbb
je
pop
cmps
push
cmps
mov
jle
xchg
in
push
adc
scas
xchg
inc
and
test
data16
mov
mov
add
jbe
mov
mov
jge
shl
mov
mov
jnp
add
fs
push
(bad)
jl
push
(bad)
push
pushf
retf
sub
test
out
ss
mov
sti
inc
mov
cwde
jle
xlat
es
(bad)
scas
jmp
xor
sbb
lea
inc
ret
pop
mov
jecxz
mov
mov
ss
inc
test
sbb
xor
cmp
inc
or
fimul
and
lock
ja
dec
dec
cmps
push
ret
mov
pop
sbb
pop
aad
in
movs
sbb
pushf
adc
cmp
sub
les
shr
daa
mov
jmp
push
ret
cmp
jbe
inc
dec
dec
enter
push
aas
mov
dec
(bad)
punpckldq
mov
test
repnz
rcl
das
in
mov
xchg
fstp
add
loope
push
xchg
push
jecxz
loop
xchg
inc
aam
mov
mov
jne
ret
pushf
(bad)
daa
dec
xor
push
inc
lds
in
test
arpl
adc
lahf
sbb
jnp
fcom
pusha
es
sbb
sar
addr16
icebp
ror
mov
cmp
cmp
sub
jg
lods
sti
jmp
adc
dec
daa
inc
lods
fcomp
sti
inc
sub
in
daa
rol
imul
mul
dec
cmp
call
or
sahf
mov
mov
jns
outs
jl
or
shl
imul
rcr
into
pop
dec
sbb
push
and
aas
jge
adc
mov
out
jb
xchg
xor
inc
jne
in
sbb
mov
jge
xchg
jge
lock
xor
iret
push
push
not
pop
jns
mov
test
loop
cmp
sub
jp
std
pop
sbb
inc
(bad)
int3
ss
cs
into
sub
add
add
mov
jne
(bad)
jle
out
les
and
sbb
adc
(bad)
mov
test
dec
jae
xor
cmp
mov
wbinvd
enter
mov
mov
aam
(bad)
je
sub
mov
lods
popf
scas
mov
(bad)
and
pop
and
cmp
in
loop
fs
sub
mov
lahf
and
into
push
in
lds
leave
mov
push
out
push
dec
jp
jg
jg
cld
sub
push
push
mov
idiv
call
inc
test
cmp
mov
sub
push
sub
stos
das
dec
sub
dec
lods
or
add
test
sub
imul
and
loope
pop
popa
and
shr
movs
inc
movs
mov
ja
pop
mov
inc
jbe
bound
mov
or
xchg
push
imul
cli
mov
call
jmp
cmp
add
jae
xchg
pop
fsubr
push
lock
(bad)
jg
out
int
dec
das
mov
cld
pop
pop
mov
jge
xor
cmc
xor
sub
push
add
jae
addr16
into
dec
in
jge
lock
gs
inc
outs
adc
xor
jnp
xor
push
data16
imul
adc
pop
scas
div
movs
dec
pop
or
mov
mov
push
enter
jbe
push
xchg
inc
in
jmp
sbb
cmc
jno
jmp
jle
jne
inc
jmp
cmp
add
jl
jnp
pop
pushf
icebp
jl
mov
or
sub
retf
jmp
xchg
sbb
jo
fadd
(bad)
jp
add
das
mov
xor
mov
movs
loopne
dec
fwait
mov
imul
lea
iret
jbe
mov
jmp
out
fadd
stc
iret
bound
sub
jp
and
stos
add
jne
xchg
cmp
cs
xor
lea
fwait
pushf
es
mov
movs
push
xchg
addr16
sbb
mov
mul
scas
outs
lods
out
sbb
dec
xor
add
movs
movs
ins
pop
bnd
call
add
push
jmp
lds
inc
(bad)
cld
arpl
xor
lock
pop
sub
add
(bad)
mov
lea
adc
popa
mov
movs
enter
and
test
je
adc
ret
imul
pop
cli
sub
aaa
std
inc
xrelease
adc
or
ja
push
fnstcw
icebp
ret
bound
imul
push
out
add
mov
iret
jbe
fild
mov
jne
stos
xchg
fldcw
gs
jge
lock
push
push
in
lods
push
stos
retf
retf
retf
shl
sahf
dec
ja
shr
dec
jp
imul
push
jmp
ds
sub
(bad)
fcmovnbe
sub
xchg
popf
and
mov
in
sub
dec
xor
mov
call
and
dec
adc
cdq
cli
retf
xchg
mov
out
inc
jns
imul
sub
ins
xchg
pop
sbb
mov
outs
xchg
out
(bad)
stos
xchg
call
lea
xchg
call
jle
and
jo
test
mov
pop
mov
xchg
ja
es
repz
pop
shl
cmp
jb
jecxz
retf
jb
push
adc
lock
dec
pusha
je
add
in
sub
ret
pop
sub
fisttp
mov
jl
dec
cmc
xlat
xchg
ins
or
int
pop
cld
and
fdivr
pop
mov
and
rcl
pop
(bad)
fst
sub
std
jnp
cmp
sar
pop
lods
pop
(bad)
stos
addr16
dec
aad
repnz
sub
retf
popf
xor
and
mov
jne
sar
pop
or
fdiv
rcl
ret
cmps
and
scas
cs
pop
push
dec
mov
out
dec
int3
add
out
dec
out
ins
mov
data16
test
popa
sub
xchg
mov
inc
(bad)
dec
retf
fs
inc
rcr
sbb
push
pop
pop
pop
cmp
cmps
add
bound
dec
mov
or
and
sar
and
fbstp
sbb
mov
push
loop
cmp
loop
xor
pop
sub
out
push
jne
out
leave
mov
sbb
cs
xchg
dec
cmp
pushf
dec
cmp
or
arpl
inc
push
mov
and
stos
mov
xchg
clc
pop
in
in
imul
in
dec
call
dec
cwde
jl
lahf
ds
jmp
out
stos
fadd
xor
mov
(bad)
mov
popa
out
in
dec
daa
sub
mov
push
xor
out
adc
stos
jbe
push
mov
mov
icebp
out
inc
imul
mov
loopne
or
push
mov
out
test
jbe
xor
rcl
cmp
scas
fiadd
cmp
adc
rol
jecxz
xchg
xchg
push
jb
int
dec
mov
out
loope
inc
adc
cs
clc
jbe
sbb
sub
ret
push
mov
xor
mov
clc
add
outs
out
inc
push
mov
xor
repz
xor
cwde
scas
mov
sub
sub
jns
mov
into
inc
gs
dec
push
jp
mov
outs
fcomp
addr16
mov
mov
xor
aad
cmp
in
cmps
fisub
xchg
leave
inc
and
jo
lea
sub
mov
sub
jae
sub
movs
xlat
and
fs
jns
out
sbb
mov
mov
mov
test
loope
jg
xor
cmc
or
mov
push
xchg
xor
(bad)
and
push
pop
stos
inc
sub
xchg
dec
scas
sub
mov
mov
(bad)
jle
and
retf
xor
mov
cwde
in
mul
mov
lahf
mov
(bad)
movs
hlt
int3
(bad)
fsubr
xor
(bad)
into
aas
mov
mov
push
fild
xor
and
sbb
xchg
das
push
dec
pop
cli
mov
xor
cmp
shr
push
pop
pop
and
push
into
cmps
jecxz
test
aam
inc
movs
sar
jle
dec
retf
test
cmp
outs
call
out
xchg
jge
adc
adc
add
add
std
push
mov
cmp
inc
mov
and
ds
aaa
mov
xchg
std
sbb
aaa
hlt
jl
in
ins
loopne
in
xor
xlat
fst
cdq
mov
cmp
retf
mov
int3
imul
or
lock
push
mov
scas
dec
addr16
push
xor
cmp
and
and
pop
ror
xor
ret
pop
add
jle
retf
pop
mov
test
mov
lahf
cld
call
movs
mov
movs
js
(bad)
push
sub
es
lods
nop
pop
pop
push
aam
xor
repz
loop
les
add
push
sub
call
ins
addr16
and
mov
push
sbb
sti
ja
mov
sbb
retf
call
push
nop
lds
jecxz
xlat
xor
fistp
mov
imul
mov
mov
cmc
out
cmp
sub
addr16
mov
sub
jecxz
jecxz
mov
sti
fnstcw
iret
sub
xchg
and
mov
mov
xor
mov
mov
adc
cld
push
or
hlt
and
mov
mov
pop
push
addr16
sub
adc
outs
mov
xor
add
xchg
inc
ins
das
and
out
pop
sbb
jno
js
mov
or
mov
cwde
sub
out
xchg
xchg
dec
neg
jecxz
mov
(bad)
mov
loope
gs
out
das
sub
inc
fstp
jg
and
pop
dec
out
adc
jmp
movs
cmp
out
inc
and
popa
adc
ins
aam
jmp
clc
scas
inc
daa
sbb
fwait
aaa
mov
pusha
sub
out
mov
jmp
je
mov
std
mov
aaa
sub
cs
mov
inc
xchg
jg
(bad)
xor
int
inc
push
movs
dec
fadd
(bad)
std
inc
jmp
mov
push
int
mov
adc
test
add
mov
nop
jge
enter
(bad)
fldcw
fld
bound
xchg
and
xor
push
mov
jmp
inc
cli
add
xchg
fstp
neg
push
sar
test
inc
(bad)
mov
mov
sub
(bad)
mov
(bad)
jg
sar
loope
pop
clc
adc
shl
fnstsw
ins
(bad)
mov
fst
js
repz
cmp
dec
jmp
cmp
mov
mov
and
movs
leave
mov
adc
mov
in
outs
mov
stc
push
popf
ret
(bad)
test
addr16
xchg
clc
adc
enter
outs
push
fwait
mov
dec
jb
clc
dec
rol
push
or
fimul
mov
and
or
push
push
stos
aas
add
inc
repz
push
adc
push
icebp
or
dec
loope
push
(bad)
jne
push
mov
cmp
fidiv
mov
pop
movs
cmps
ror
jns
inc
std
jno
add
add
and
adc
sahf
cmp
scas
jae
or
cs
cmps
scas
pop
mov
sub
shl
fmul
fistp
mov
into
dec
test
data16
hlt
dec
ror
loopne
aad
pop
add
shr
dec
int
popf
out
sub
add
xor
je
xchg
or
mov
ins
inc
xor
jo
mul
mov
sub
mov
stos
xlat
mov
daa
pop
or
xchg
stos
dec
cmc
fstp
ins
add
jle
pop
pop
or
jmp
sub
adc
clc
(bad)
jmp
jbe
cmp
lods
lods
int
or
dec
aam
loopne
ret
movs
div
xor
jbe
ret
adc
ins
sti
push
outs
arpl
test
(bad)
add
stc
sbb
xor
retf
dec
iret
jno
movs
js
push
xor
dec
stos
hlt
inc
loopne
mov
aaa
jno
sub
pop
pop
(bad)
iret
arpl
sbb
mov
call
mov
or
xchg
cmc
das
repz
add
test
push
xchg
repz
cwde
ror
xchg
add
int3
pushf
push
pop
fild
imul
pop
cmp
cs
je
(bad)
adc
add
push
xchg
xchg
push
leave
test
add
dec
cmps
scas
hlt
outs
inc
mov
sahf
dec
loope
dec
jmp
adc
push
test
(bad)
mov
jno
mov
jmp
fwait
inc
inc
cwde
and
cmp
lea
add
mov
sti
not
jne
push
in
inc
iret
xchg
and
push
mov
mov
jp
hlt
std
mov
fmul
inc
xchg
mov
and
jmp
jbe
jl
pop
xchg
pop
xchg
cmp
jge
cmps
lock
pusha
psrlq
int
mov
aam
retf
xlat
and
lahf
and
and
(bad)
dec
test
inc
ror
dec
test
das
adc
sbb
adc
mov
call
xchg
sbb
xchg
xchg
jmp
jnp
fmul
add
sub
pop
sbb
mov
sbb
sub
jnp
mov
in
push
jo
add
in
retf
sbb
mov
pop
loopne
mov
sbb
jg
inc
sbb
mov
lods
or
xor
repnz
jp
neg
sar
fidiv
not
in
adc
and
add
int3
cdq
xchg
aas
scas
add
aad
cld
int3
dec
iret
push
push
cmp
pop
mov
ret
add
mov
push
je
pusha
push
out
js
les
sub
aam
sbb
push
jmp
jnp
sub
add
scas
pushf
push
lds
arpl
mov
jo
cmps
xchg
lock
sub
mov
mov
inc
cmp
jo
and
repz
mov
push
adc
sbb
cmp
jle
in
mov
jb
in
test
dec
aad
mov
sbb
in
xchg
dec
pop
add
or
cmp
(bad)
push
loopne
sbb
ja
mov
fwait
stos
int3
pusha
inc
sbb
push
adc
aaa
sub
cmps
cld
mov
inc
(bad)
jp
adc
cmc
ds
push
paddsb
push
fstp
enter
shr
mov
mov
push
cmp
and
add
inc
add
sub
mov
add
mov
clc
sub
out
outs
jle
sub
sub
inc
adc
sbb
cmp
sbb
xor
(bad)
clc
lahf
mov
scas
push
inc
cmc
into
movs
int3
xchg
fwait
rcl
mov
cli
(bad)
xor
xchg
xchg
xlat
arpl
cmp
mov
mov
retf
ss
popa
fild
push
into
mov
jge
movs
sub
nop
mov
mov
mov
in
sbb
out
push
mov
fsin
push
and
sub
or
inc
out
adc
lock
rcl
sbb
sub
das
inc
not
dec
or
cwde
pop
lahf
xchg
bound
sbb
inc
(bad)
int3
ss
dec
pop
pop
es
cmp
aam
mov
(bad)
outs
cli
pop
into
movs
pop
sahf
mov
adc
push
adc
push
aam
xchg
mov
inc
pop
jnp
or
lock
xchg
adc
or
shr
stos
in
retf
loope
push
pop
mov
dec
jmp
xchg
and
push
cmp
scas
mov
push
fwait
mov
(bad)
jl
and
jp
xchg
fisttp
call
push
pusha
adc
int3
mov
jbe
jne
hlt
dec
inc
fwait
hlt
sbb
sahf
push
jns
leave
leave
sbb
xchg
cmps
xor
mov
push
test
sub
ins
bound
xchg
jb
add
dec
les
sbb
(bad)
pop
sub
or
outs
sbb
jae
lock
mov
imul
jo
or
test
cwde
sbb
ror
shl
sbb
loopne
pop
je
jle
push
add
(bad)
cmp
add
sbb
mov
aam
retf
repnz
jb
push
or
add
jmp
mov
jmp
sbb
jns
mov
fwait
or
inc
jle
lock
dec
push
mov
loopne
dec
mov
in
adc
xchg
inc
cmps
or
dec
ja
push
sub
jno
mov
test
sub
or
scas
repz
out
js
(bad)
icebp
xchg
push
(bad)
loop
and
cmp
dec
sbb
inc
mov
pop
mov
clc
inc
mov
or
fadd
ins
push
mov
aam
pop
lods
jmp
xor
out
sbb
rcr
push
(bad)
sub
jp
repz
mov
hlt
mov
mov
cdq
popf
adc
adc
in
sbb
mov
imul
(bad)
mov
push
dec
test
mov
mov
and
jmp
cmp
fwait
push
jle
lods
pop
push
scas
ficomp
test
ficomp
jbe
sub
retf
(bad)
pop
jmp
inc
or
dec
movs
movs
or
cmps
pop
dec
cmc
or
inc
mov
jecxz
in
xchg
mov
mov
xlat
repnz
(bad)
lods
cmps
iret
jne
clc
shl
hlt
mov
(bad)
adc
out
nop
(bad)
mov
mov
das
ja
dec
ret
(bad)
lock
ret
add
xlat
push
cld
pop
lds
int
sub
xor
mov
loop
xor
or
xlat
push
sahf
add
ret
pushf
pop
cmps
inc
and
aaa
imul
xor
inc
inc
add
fidiv
mov
cmp
mov
jecxz
jnp
pop
push
adc
lods
fst
mov
popf
dec
lods
pop
jp
mov
mov
adc
push
test
xchg
retf
mov
adc
cdq
jl
les
cli
sti
push
repnz
mov
rcr
test
mov
inc
xchg
sub
cmps
arpl
mov
movs
ret
sub
mov
jno
cmp
mov
outs
cs
adc
mov
xchg
out
or
push
out
(bad)
gs
push
ins
add
retf
inc
ja
fdiv
rol
test
out
jge
(bad)
adc
and
out
nop
jg
(bad)
bound
inc
in
sti
outs
ficomp
movs
call
cmp
mov
inc
loopne
jmp
ins
sub
test
add
or
xchg
lods
fsub
xchg
xchg
adc
mov
je
cmp
pop
sbb
pop
pop
cmp
push
enter
into
sub
and
xrelease
jb
cmp
ja
ret
xor
fwait
inc
adc
enter
mov
imul
scas
mov
sub
jle
call
in
sti
int3
inc
adc
in
les
(bad)
(bad)
ret
and
sti
fsubrp
fadd
ret
fisttp
fild
jmp
mov
xor
shl
xchg
sbb
mov
repnz
js
mov
icebp
test
jmp
or
mov
fnsave
jbe
and
int3
loop
xchg
mov
cmc
and
cmp
(bad)
shr
out
xchg
in
out
out
or
daa
call
stc
sti
and
fs
mov
out
inc
or
push
es
loopne
jns
cwde
iret
in
pop
xor
fs
shl
sbb
sti
mov
mov
jmp
xor
in
or
and
mov
lods
rol
sbb
(bad)
xchg
or
xchg
imul
push
bsr
dec
clc
or
or
mov
mov
pop
push
daa
(bad)
gs
fisttp
popf
mov
xchg
cmp
loope
mov
hlt
dec
paddq
push
mov
and
inc
fimul
xor
mov
inc
mov
dec
pop
int3
cli
mov
add
mov
sti
mov
sub
jmp
mov
into
ins
adc
lods
and
(bad)
push
xchg
cmp
sub
repz
adc
rol
jl
push
icebp
ins
cmc
inc
push
enter
sbb
inc
test
int3
mov
pop
add
jmp
out
cwde
je
cs
xchg
int3
inc
mov
pop
adc
jbe
ins
mov
rcl
ret
jmp
push
fcmovnb
gs
ror
pop
and
(bad)
xchg
cli
jge
xchg
repnz
jge
cdq
repz
pop
daa
xchg
mov
loop
add
enter
fyl2xp1
mov
or
(bad)
sbb
add
xor
leave
sub
sbb
pop
mov
xchg
dec
ds
push
lds
adc
or
jb
outs
inc
ret
aas
scas
arpl
fiadd
mov
jmp
es
xchg
inc
imul
adc
sar
outs
loopne
loop
and
jecxz
mov
sbb
rol
rcl
jae
jnp
(bad)
scas
adc
cwde
xor
mov
cld
add
mov
stos
cmps
ins
repz
stos
nop
fwait
xor
mov
jecxz
inc
and
or
xchg
(bad)
mov
dec
data16
push
sbb
dec
push
mov
out
sar
or
fcmove
mov
and
sar
movs
push
jnp
jne
add
mov
fwait
push
mov
mov
jmp
loope
shl
lods
mov
repnz
xor
fwait
in
call
iret
dec
aam
leave
jns
fdivr
data16
pusha
inc
fidiv
mov
sub
jnp
adc
mov
jo
loopne
lods
ss
push
xchg
adc
jmp
shr
xor
lods
aam
sbb
pop
pop
jno
mov
push
push
repnz
lahf
ret
or
ins
sbb
pop
push
sahf
sar
scas
dec
iret
clc
mov
(bad)
ror
push
ror
cmp
test
sbb
xchg
daa
adc
mov
adc
inc
pushf
stc
sub
hlt
test
cmp
outs
and
sub
cmc
xchg
inc
jb
aad
sbb
in
test
cmc
cmp
push
in
xlat
sub
movs
dec
jno
sahf
sbb
mov
stos
dec
ja
pop
cs
jb
dec
jle
inc
out
lds
jecxz
shr
je
or
sub
test
(bad)
adc
mov
lds
jp
cdq
stos
add
sub
mov
hlt
add
es
ror
call
iret
mov
and
mov
push
and
lods
scas
lahf
jecxz
sub
pop
clc
ins
mov
xchg
mov
push
ret
cmps
(bad)
xor
push
shl
jb
cs
mov
jmp
mov
fcom
mov
add
xchg
or
popf
pushf
adc
jb
int3
pusha
jne
adc
mov
imul
cdq
xchg
xchg
push
push
inc
lds
adc
arpl
repz
pop
push
jbe
nop
call
test
xchg
mov
das
out
stos
loop
repz
mov
in
sbb
sub
arpl
loop
sbb
jnp
aas
je
frstor
rol
pop
mov
mov
cmps
aaa
sbb
stos
dec
dec
(bad)
inc
pop
push
adc
sub
test
outs
push
mov
(bad)
pop
cdq
xchg
call
ret
and
fwait
(bad)
lods
test
scas
cli
dec
(bad)
(bad)
mov
mov
shl
add
cmp
jge
in
arpl
adc
jne
and
pop
into
push
mov
xchg
stos
retf
pop
iret
enter
xor
into
aad
retf
test
outs
mov
pop
xor
cmp
sub
iret
inc
pop
fisttp
not
mov
sub
ror
dec
pop
mov
or
xchg
jecxz
clc
cmp
aam
es
shl
mov
dec
int3
scas
in
ret
or
mov
jecxz
dec
fwait
and
pop
lahf
push
sbb
mov
(bad)
test
imul
ror
mov
test
push
dec
fst
(bad)
jns
mov
push
test
pop
popfw
xlat
xor
pop
jmp
dec
pop
jno
lahf
xchg
mov
ret
movs
shl
data16
repz
add
cwde
pop
sti
in
retf
(bad)
jmp
fwait
cli
add
pop
and
rcl
add
popa
(bad)
pop
imul
outs
inc
imul
aad
(bad)
leave
mov
loope
jle
mov
dec
pusha
adc
retf
scas
cmp
pmaddwd
ret
cmc
es
xlat
sbb
pushf
dec
data16
jmp
xchg
ret
in
mov
gs
out
or
pop
xchg
sar
sub
mov
jns
xchg
cwde
fs
iret
or
in
add
xor
shl
cmp
out
push
addr16
loop
dec
sub
adc
mov
adc
fstp
xchg
push
(bad)
cmp
out
test
push
sub
push
icebp
rcr
cmp
imul
pop
loope
xor
pusha
jl
imul
push
cmp
cmps
pop
daa
ins
(bad)
jnp
(bad)
xchg
push
jl
iret
dec
stc
push
add
cmc
ja
push
shr
arpl
cmp
js
(bad)
mov
les
inc
adc
ss
not
dec
int
ror
ret
push
mov
cmc
stos
cli
mov
mov
or
sbb
pop
add
sub
or
arpl
je
jg
inc
mov
add
ins
daa
repz
fwait
repnz
push
mov
ja
es
push
pusha
outs
inc
ret
sar
ja
sbb
mov
lea
dec
imul
add
cmc
mov
jp
lock
cmp
xor
in
call
out
pop
retf
test
repnz
outs
mov
retf
ret
pop
js
xchg
push
rcr
sub
stc
pop
dec
or
jb
push
pusha
xchg
push
jge
mov
ret
xchg
shl
adc
popa
dec
dec
add
movzx
shl
push
lods
(bad)
sahf
push
push
ss
loop
jbe
pop
in
dec
inc
and
mov
xchg
dec
rol
mov
jne
add
lds
mov
lods
test
mov
(bad)
mov
ins
imul
mov
cmp
xchg
ja
bound
pop
mov
sub
lods
push
test
mov
jae
or
sub
orps
jno
adc
je
les
mov
(bad)
dec
mov
xchg
xor
sub
jne
pop
jns
popa
adc
cmp
xlat
cmp
fptan
lods
push
sbb
fldenv
dec
rcl
in
jge
jp
push
rcl
dec
add
out
repnz
hlt
out
xor
jg
cmp
lea
ja
mov
and
scas
out
xor
dec
sti
in
pop
int
jecxz
cwde
ins
xor
jb
xchg
ds
ficom
outs
push
sbb
out
or
std
outs
jmp
dec
push
test
inc
sar
inc
fild
adc
dec
je
mov
xor
test
test
popa
std
xchg
or
aam
sub
jg
mov
jmp
dec
sbb
jnp
pusha
jecxz
popa
xor
and
mov
push
bswap
call
cmps
lea
pusha
xor
jmp
and
push
push
push
mov
xchg
xor
movs
sti
cmps
jmp
mov
mov
clc
push
xchg
sub
mov
outs
add
xchg
push
lods
pop
loop
cmp
mov
xor
mov
mov
aad
bswap
mov
(bad)
int3
xor
fnstenv
ficom
pop
mov
mov
test
or
xor
add
fistp
mov
lods
ins
xor
push
push
shl
aad
xlat
inc
ret
fdivr
fst
adc
daa
pop
jle
sbb
nop
rep
test
pop
pusha
scas
rcr
cld
clc
arpl
out
inc
movs
jne
pop
enter
cld
adc
std
nop
mov
fiadd
cmp
das
(bad)
jmp
pop
inc
adc
in
lock
in
cmp
push
(bad)
mov
mov
sbb
sub
push
pop
mov
ror
sub
out
aam
add
call
inc
shrd
shl
mov
xchg
mov
add
push
cmp
push
jmp
and
jns
xor
lds
mov
movs
test
mov
adc
jge
sub
pop
stc
in
out
not
fldenv
jl
xor
jno
sub
imul
loop
xchg
xchg
out
add
and
jne
jp
je
push
scas
adc
clc
in
fnstsw
imul
cmc
(bad)
test
xchg
sbb
test
pusha
add
sub
pop
out
shr
cmp
leave
and
pop
loop
or
daa
push
mov
not
or
xchg
enter
inc
add
out
test
cmp
inc
add
sbb
(bad)
(bad)
and
out
add
xor
pop
dec
sbb
(bad)
ins
shl
cmp
xchg
jnp
and
test
(bad)
pop
repz
xor
and
movs
sub
xor
fsubr
dec
push
pop
aad
dec
aaa
sti
fistp
inc
mov
xchg
mov
pop
inc
sbb
aad
cmp
mov
out
mov
add
inc
cmp
clc
arpl
jl
sbb
inc
push
dec
pop
xchg
inc
mov
mov
jae
fistp
shl
jl
(bad)
xchg
mov
ret
adc
hlt
scas
imul
gs
mov
stos
mov
and
and
mov
test
lock
imul
enter
(bad)
add
adc
outs
lods
out
mov
or
push
hlt
jb
jmp
mov
or
dec
pushf
std
lock
test
push
sbb
add
cmp
jno
sbb
push
pusha
movs
sub
iret
dec
push
push
push
sahf
cwde
sub
jo
jecxz
dec
and
imul
stc
push
add
out
in
inc
popf
cdq
xchg
in
imul
jp
xor
push
xchg
add
les
js
jno
daa
mov
cs
xor
ds
fdivr
sub
jae
sbb
cmp
adc
test
dec
sbb
adc
leave
out
jae
push
push
adc
jg
fcmovb
add
add
loopne
mov
call
jno
xchg
dec
push
icebp
xchg
fadd
aas
mov
inc
dec
mov
sbb
sahf
push
dec
mov
mov
fisttp
add
ins
jg
call
xlat
sub
in
mov
in
xor
clc
pop
mov
jnp
or
outs
aam
mov
daa
xor
ds
push
inc
adc
mov
psubw
(bad)
enter
mov
mov
push
push
pop
call
adc
mov
add
mov
adc
rol
mov
xchg
rcl
ror
pop
mov
lods
scas
mov
or
ins
cmp
jbe
je
ss
ficomp
sub
daa
mov
and
adc
mov
push
sub
push
cmp
cmp
ficomp
push
ror
jnp
arpl
or
xchg
mov
jge
push
xor
sahf
cmc
add
inc
outs
aas
pop
ja
cmps
test
inc
pop
lock
imul
scas
gs
mov
xor
or
jnp
aaa
imul
cmp
(bad)
cmp
in
ret
cli
hlt
shl
shr
push
mov
push
dec
(bad)
mov
cmp
mov
rcr
jl
jp
cmp
(bad)
aas
mov
cmp
or
out
cmp
mov
jg
scas
(bad)
js
sub
jmp
dec
idiv
mov
inc
hlt
call
fucomp
mov
mov
xor
cld
push
sub
js
sub
(bad)
(bad)
fidiv
(bad)
hlt
stos
xor
fst
out
adc
sbb
push
lahf
and
push
push
mov
shl
fild
add
jg
inc
mov
test
sub
out
xchg
fisttp
gs
fld
(bad)
sbb
shl
dec
icebp
sbb
push
inc
jl
shl
fs
mov
pop
jp
and
cmp
push
rcl
inc
push
and
(bad)
cwde
mov
lds
popf
mov
dec
(bad)
imul
std
or
push
scas
sub
jno
call
sbb
retf
hlt
pop
add
rol
adc
in
jmp
adc
popa
daa
xchg
jl
dec
sub
mov
or
pop
mov
fstp
adc
loop
add
xor
repz
pop
jno
pop
ficom
out
jge
lds
push
xor
mov
cmp
push
xchg
push
retf
jb
jge
mov
(bad)
mov
jmp
push
out
je
outs
(bad)
(bad)
in
and
pop
call
mov
mov
fucomip
daa
out
cmc
je
hlt
hlt
das
das
push
jmp
push
inc
dec
mov
and
add
pop
push
sub
mov
ins
mov
dec
popf
(bad)
cmc
(bad)
(bad)
cmp
inc
adc
pop
(bad)
xlat
(bad)
mov
push
jbe
pop
lods
adc
push
in
xchg
test
js
dec
mov
cmp
ror
sbb
jecxz
iret
xchg
nop
(bad)
sub
or
repz
push
int
push
mov
xchg
inc
cmp
push
inc
dec
jae
or
dec
les
fucom
push
jno
adc
lods
fwait
inc
lods
jl
lods
add
cmps
xor
cwde
sub
les
jne
mov
dec
out
mov
clc
shl
dec
loop
push
fistp
ds
cmps
xor
sti
clc
mov
inc
jno
push
xlat
enter
int
inc
dec
push
push
dec
test
jl
scas
mov
adc
retf
je
mov
pop
add
mov
ffree
imul
out
lds
inc
iret
shl
imul
push
out
mov
jnp
sbb
push
adc
sbb
xor
out
mov
repnz
push
xchg
iret
(bad)
jle
xor
cmps
sar
jecxz
pop
add
sub
inc
dec
ins
int3
loope
outs
outs
dec
aam
call
dec
add
pop
adc
out
adc
mov
ret
inc
daa
pushf
add
(bad)
lahf
jns
mov
mov
stos
in
cdq
ret
mov
push
ror
mov
dec
fcomp
shl
cdq
inc
lahf
test
pop
cwde
in
sbb
pop
mul
mov
cld
bound
shl
or
mov
retf
ret
lea
nop
pusha
xor
sahf
push
inc
out
sahf
xlat
push
push
movs
cdq
add
je
fistp
and
out
fsubr
jb
outs
dec
xchg
sbb
push
lods
call
fidivr
xchg
sub
or
popa
mov
hlt
shr
pop
dec
clc
or
mov
push
inc
js
dec
aad
cs
fwait
nop
or
in
cmp
cld
in
lods
ds
inc
(bad)
imul
inc
enter
pop
hlt
xor
add
pushf
data16
adc
imul
inc
ret
push
jns
push
test
mov
ss
inc
fwait
or
push
jle
stos
sub
jo
mov
add
xor
and
mov
cmp
adc
jnp
bound
leave
loopne
or
pushf
xor
out
or
ss
inc
arpl
push
test
in
add
pop
xor
out
xor
dec
mov
(bad)
push
out
ret
aaa
sub
adc
inc
cmp
dec
pop
pop
pop
das
mov
out
cmps
xchg
pop
data16
sub
add
mov
cld
push
imul
ins
ja
or
das
int
xchg
retf
(bad)
js
mov
pop
mov
mov
imul
bound
imul
mov
(bad)
rcl
xor
out
push
or
jb
xor
jg
aad
dec
lds
mov
ins
fdivrp
inc
int3
inc
nop
pop
adc
jecxz
(bad)
sbb
sub
or
sub
(bad)
push
sbb
mov
loope
push
jo
sbb
push
cmp
xlat
mul
adc
repz
add
jmp
push
or
mov
aas
mov
aas
xchg
and
int
retf
ja
cmps
(bad)
out
shl
js
stos
ds
loopne
jne
xor
dec
stos
mov
out
inc
inc
pop
(bad)
jge
lahf
mov
lds
sbb
mov
or
jl
movs
jo
mov
fild
outs
cmps
jno
inc
pusha
inc
or
into
cmc
test
sar
je
movs
outs
mov
pop
cmp
pop
(bad)
test
cmp
sbb
std
mov
arpl
or
aam
push
test
push
mov
(bad)
sbb
xchg
fst
ss
out
mov
in
repz
aas
sbb
and
in
add
lds
mov
jb
add
ret
stos
dec
jg
sub
pushf
push
sbb
test
sti
(bad)
icebp
(bad)
xchg
adc
cmp
xor
add
mov
call
mov
imul
inc
push
(bad)
mov
daa
jo
cs
push
cmp
adc
nop
pop
or
clc
inc
pop
rcr
cmp
test
adc
stos
adc
jb
or
cmc
sub
out
jne
imul
bts
adc
(bad)
fisub
xchg
sbb
xchg
aad
push
inc
mov
mov
mov
add
fidiv
add
add
ret
les
mov
ret
jmp
pop
push
cmp
dec
adc
mov
je
repnz
rol
retf
sbb
mov
dec
mov
xor
and
push
mov
sub
outs
out
test
fst
mov
(bad)
dec
sahf
add
aaa
xor
(bad)
std
push
sar
add
sub
in
cmp
push
arpl
adc
in
popf
aas
je
add
mov
inc
mov
mov
sub
mov
xor
jb
push
inc
push
jns
(bad)
mov
jns
push
mov
mov
jle
sahf
mov
inc
pusha
xchg
(bad)
xor
loopne
push
jno
lods
test
pushf
and
fisttp
push
cmp
mov
ins
fisub
push
mov
ins
xor
push
aas
pushf
loope
retf
mov
test
adc
jl
in
arpl
lds
inc
pop
ds
lock
out
inc
js
sub
fst
adc
outs
fwait
push
daa
and
rol
sar
mov
sahf
hlt
fstp
enter
ins
add
or
mov
jno
leave
cmp
cmp
mov
cmp
shl
jns
ins
ror
std
cmp
dec
ds
mov
pmullw
mov
scas
inc
dec
rcr
bound
iret
mov
cld
stos
pushf
push
jne
or
add
test
repnz
pop
jo
(bad)
push
push
nop
inc
dec
lock
jle
sbb
ins
xlat
arpl
and
cmp
cdq
ins
test
pop
xor
jg
mov
pop
fsub
dec
sbb
push
xchg
daa
hlt
xor
ret
adc
pop
retf
(bad)
aam
inc
ret
lods
sub
pop
iret
mov
in
je
out
push
popa
mov
jecxz
mov
jmp
and
std
or
and
and
hlt
enter
aaa
cld
ins
and
shl
xor
adc
inc
ja
popa
retf
in
adc
fdiv
add
push
iret
lods
fwait
push
(bad)
js
jnp
push
sbb
mul
popf
jb
ja
mov
inc
lock
mov
add
adc
in
stc
adc
xor
fcmovbe
mov
jmp
mov
arpl
adc
jl
mov
(bad)
mov
arpl
retf
fucom
dec
jg
lds
loop
pop
push
ret
mov
jmp
mov
push
xlat
or
ds
repz
dec
xor
sub
sub
dec
jmp
push
stc
mov
cwde
dec
xchg
mov
arpl
bound
dec
fwait
je
fdivr
(bad)
data16
cdq
pop
aaa
pop
push
cmp
shl
or
xor
test
or
push
repz
fdiv
scas
in
add
mov
neg
and
push
push
dec
xchg
xchg
out
int3
outs
pop
push
pop
jns
inc
in
sbb
and
test
mov
adc
mov
jae
mov
dec
jno
mov
shr
pop
inc
outs
lock
mov
clc
xor
cs
add
inc
ret
mov
fcmovnu
in
cmp
xchg
ficom
sar
push
xor
fnstcw
jl
pusha
inc
mov
add
pop
pop
stos
das
pusha
cld
arpl
push
xchg
div
(bad)
ror
pop
mul
daa
aam
mul
jl
xor
(bad)
xlat
test
cwde
in
addr16
test
inc
in
scas
lods
push
jbe
mov
cmp
scas
aas
movs
imul
adc
add
adc
dec
in
adc
inc
jmp
mov
pop
imul
hlt
cdq
repz
sub
mov
mov
icebp
jae
addr16
sar
adc
sbb
pop
in
retf
push
movs
add
or
movs
inc
push
gs
dec
dec
xor
daa
stos
sbb
and
loope
(bad)
xchg
fmul
data16
jmp
and
xchg
mov
jge
inc
addr16
mov
sbb
lea
mov
in
xchg
sbb
mov
sub
xlat
push
int
retf
or
mov
jb
ins
push
sub
sbb
stos
femms
and
sbb
sbb
enter
not
push
pop
mov
pop
mov
dec
jno
mov
shr
jmp
js
in
xchg
xor
arpl
and
xchg
adc
cli
fbstp
mov
or
xchg
jns
add
add
addr16
ret
cmp
jmp
arpl
dec
xchg
xor
repz
cld
out
aaa
lahf
imul
dec
cmp
push
stos
jns
loope
pop
mov
or
ror
sbb
enter
jnp
jnp
add
cmc
int
adc
(bad)
pop
fwait
mov
jbe
inc
add
bound
and
dec
fwait
scas
dec
movs
test
pop
jmp
dec
out
test
jecxz
leave
jp
fisubr
cmp
xchg
push
sub
test
gs
xlat
jmp
scas
imul
sub
cdq
push
sti
sbb
xchg
nop
inc
adc
mov
jne
repz
xchg
inc
(bad)
mov
dec
jle
retf
popa
call
sub
xchg
rcl
pop
mov
mov
cs
loop
pop
popa
and
(bad)
call
mov
inc
imul
push
not
pushf
mov
mov
dec
add
sub
cld
push
mov
lahf
mov
nop
jge
or
pop
in
adc
cmps
movs
jnp
adc
imul
fmul
outs
push
cmp
movs
in
ss
aad
jg
sar
fdiv
jle
call
mov
jae
push
adc
and
adc
adc
int
ficomp
jns
sub
fwait
mov
add
(bad)
ficom
mov
add
sub
sub
mov
into
dec
arpl
cmps
xchg
push
push
mov
in
pop
cmps
xchg
dec
push
mov
xchg
mov
hlt
push
pushf
repnz
loop
aaa
push
inc
je
push
push
adc
(bad)
xor
sahf
je
in
cdq
mov
out
sub
shr
jmp
cmp
fstp
mov
mov
aaa
jle
jbe
inc
neg
xor
inc
pop
retf
(bad)
repz
xchg
hlt
rol
mov
jnp
aas
xor
adc
add
jbe
fimul
mov
fwait
mov
mov
adc
fwait
ins
jno
xlat
sub
jecxz
ins
lods
dec
pop
xchg
test
(bad)
push
loope
(bad)
jmp
int3
js
pop
inc
test
nop
mov
in
movs
cmp
jg
pusha
jne
push
movs
jae
dec
xor
adc
mov
and
mov
xchg
lea
cdq
test
cli
pop
mov
out
hlt
xor
inc
loopne
sub
push
cld
jae
sub
add
mov
ret
jmp
xchg
lods
or
mov
adc
add
dec
rol
in
arpl
inc
sub
stos
mov
ret
ret
jno
xchg
stos
sbb
dec
mov
sbb
ds
mov
mov
mov
mov
sbb
out
or
mov
jmp
dec
lds
fadd
scas
and
jecxz
mov
adc
dec
push
and
dec
cmps
movs
mov
xchg
jae
imul
fnstsw
das
xlat
mov
xchg
xor
xchg
cmc
jecxz
mov
xor
add
sbb
test
push
pop
test
arpl
xor
clc
sar
lds
jnp
je
dec
sub
dec
call
or
ja
mov
and
jae
cmps
jecxz
pop
cld
ds
call
push
mov
movs
adc
test
xchg
out
aaa
fwait
xor
aas
lea
mov
pop
mov
xchg
cmp
in
(bad)
cmp
adc
inc
jmp
aas
push
mov
or
cld
out
cmp
sti
pop
es
dec
add
in
fisubr
repz
loopne
inc
jl
es
icebp
mov
mov
inc
sbb
cmp
push
pop
cmp
cmp
push
mov
test
hlt
fst
ja
pop
fimul
mov
in
fcomp
and
pop
fsubr
pop
into
fmul
cmps
jbe
fcom
cmps
or
adc
sti
sub
sub
(bad)
jecxz
out
punpckhdq
and
outs
out
sub
fst
scas
jecxz
add
mov
outs
test
jne
out
ret
aam
cmp
call
xchg
(bad)
push
cmp
js
pop
loop
loopne
mov
es
mov
and
push
sub
out
or
cmp
scas
sbb
repnz
push
popa
ffreep
nop
fdiv
adc
dec
xor
cmp
sub
(bad)
push
dec
push
jg
mov
cmp
fild
(bad)
xor
mov
in
sub
stos
sbb
mov
adc
jbe
jmp
mov
out
(bad)
ret
js
cmps
inc
dec
pop
pop
outs
lock
mov
rcr
aaa
mov
sbb
xlat
xchg
xchg
push
jbe
sub
add
sbb
adc
cmp
adc
retf
push
cdq
cmps
or
ins
aad
loop
out
(bad)
push
ds
call
mov
loope
xchg
pop
xchg
fldcw
cmp
inc
addr16
ds
iret
push
add
pop
lods
inc
inc
pop
jg
cmps
call
or
(bad)
das
enter
retf
lock
outs
jl
jecxz
pop
and
dec
sub
xor
pop
xchg
in
adc
lea
add
pop
push
popa
in
jge
mov
inc
sbb
mov
ss
iret
rcr
adc
push
(bad)
and
int
int
inc
or
and
popa
daa
or
jae
outs
add
cmp
or
adc
and
scas
sbb
ficom
retf
out
rcl
or
xchg
in
pusha
xchg
pop
cmp
push
push
icebp
(bad)
lahf
ror
xchg
movs
jp
xchg
adc
hlt
nop
cdq
adc
dec
imul
add
mov
dec
fcmovnb
xor
jmp
push
mov
(bad)
sub
xor
aas
sub
mov
fdivr
xchg
sar
rol
and
jl
mov
hlt
fnstcw
or
sub
push
ja
sub
cli
les
movs
dec
out
mov
sbb
enter
mov
inc
fwait
aam
cmps
out
sahf
ss
mov
repnz
push
pop
pop
xchg
and
lods
je
retf
test
add
leave
(bad)
mov
xor
rcl
sbb
ret
jno
xchg
shl
loope
jb
cmp
fsubr
dec
test
push
sub
cmp
inc
in
add
mov
iret
sub
add
repnz
add
fs
mov
sbb
dec
test
pop
call
std
cdq
mov
jg
push
out
call
test
ret
jb
pop
xor
fwait
in
xor
icebp
scas
push
mov
sar
fdivr
(bad)
popa
add
(bad)
lods
sub
jns
push
add
mov
or
fsub
xchg
div
sbb
ss
dec
cmp
sub
rcr
pusha
xchg
dec
push
xor
gs
or
jns
ret
stos
loope
stos
mov
scas
popf
adc
cmp
fldl2e
mov
jmp
pop
enter
movs
lahf
push
push
jecxz
test
outs
sub
sub
and
jge
bound
call
lds
push
fs
jge
mov
pop
scas
aam
sti
pop
test
ror
nop
fldcw
or
add
pop
cmps
push
ret
or
push
fidiv
xchg
dec
push
out
addr16
inc
pop
(bad)
js
stos
cwde
je
stos
sbb
call
add
cmps
jle
xchg
sub
mov
sub
iret
jb
call
cmp
ret
push
jl
(bad)
arpl
mov
js
cwde
das
sub
jae
xchg
lods
xchg
dec
fbld
es
add
loop
jae
push
(bad)
sbb
pop
mov
jns
jmp
push
xchg
mov
fsubr
inc
sub
std
jne
cli
inc
enter
std
repnz
test
xchg
sub
jnp
stos
outs
lahf
adc
inc
push
inc
xchg
neg
sub
test
cmp
dec
inc
hlt
fs
shr
mov
sub
jnp
add
fdiv
jae
lods
ret
mov
scas
scas
pop
sub
jp
push
sbb
out
cld
ret
test
adc
addr16
js
cmp
call
add
adc
inc
outs
jae
cmc
test
(bad)
adc
js
out
test
lahf
movs
imul
pop
inc
jbe
jg
jno
sub
mov
xor
jne
sub
fmul
adc
jg
dec
es
(bad)
mov
retf
xor
fwait
mov
ins
ret
or
lea
in
sub
dec
mov
push
pop
aam
and
add
mov
push
jl
vmovaps
xor
call
mov
add
adc
ins
int
cdq
mov
push
jnp
xchg
push
xchg
shl
dec
ret
cld
cld
dec
dec
mov
clc
jbe
(bad)
fisubr
leave
cmp
mov
dec
loope
outs
(bad)
mov
outs
jecxz
pop
pushf
adc
pop
pop
mov
stos
lahf
imul
jecxz
xchg
enter
mul
or
dec
mov
std
daa
pop
adc
(bad)
int
shl
(bad)
adc
mov
xlat
mov
mov
sub
dec
or
add
dec
sbb
mov
bound
repz
(bad)
sub
movq
inc
fisub
pop
iret
lahf
call
xchg
fdiv
inc
jecxz
(bad)
lods
aam
or
aam
fild
shr
mov
jns
or
add
or
xor
adc
in
icebp
retf
cmp
sbb
pop
outs
(bad)
sbb
sbb
sbb
inc
mov
retf
mov
shr
xlat
in
mov
pop
adc
mov
and
in
test
xor
and
mov
shr
les
xchg
(bad)
loope
xor
mov
and
cmps
inc
and
jns
pushf
shl
xlat
lods
lods
loop
arpl
in
in
push
xor
lock
and
and
(bad)
scas
movs
cdq
jle
pushf
into
xor
test
shl
sbb
mov
mov
sub
push
ja
fst
(bad)
popa
ror
or
xor
out
stos
and
cmps
stos
rol
or
cmp
stos
mov
pop
scas
retf
adc
jbe
push
push
jecxz
mov
into
xchg
or
and
movhps
call
inc
push
jge
mov
loopne
and
stos
es
dec
stos
outs
repnz
push
pop
mov
popa
cld
fs
daa
pushf
stos
jno
cmp
push
cs
inc
sub
mov
xor
lods
push
mov
jnp
pop
and
pop
inc
pop
ja
fcmove
gs
push
pop
ds
movs
(bad)
xchg
inc
sar
rcl
arpl
jle
(bad)
sahf
inc
mov
retf
xor
nop
loopne
jmp
rcl
movs
jmp
and
pop
ds
push
in
mov
fwait
test
out
inc
out
pop
dec
mov
mov
jg
lods
cmp
adc
cmp
push
adc
popf
shr
pop
aas
ins
cdq
cmp
xor
inc
retf
inc
jns
dec
or
bound
rcr
cmp
test
fs
cmp
stc
mov
add
ret
add
and
pop
adc
jmp
in
push
pop
test
sbb
mov
pop
out
add
stos
xor
hlt
push
movs
push
pop
std
cmp
adc
sbb
jae
ins
cmp
stc
outs
cmp
adc
mov
mov
ss
jne
add
inc
and
inc
mov
sub
out
add
scas
push
jg
in
cdq
jecxz
call
repz
call
mov
lds
inc
shl
rcl
call
add
jle
dec
pop
and
mov
sahf
lock
push
fnstenv
outs
jae
cmc
ret
xor
cmp
add
(bad)
je
sbb
sbb
pop
mov
and
pusha
mov
or
fs
inc
enter
xchg
clc
xor
outs
cld
cmp
push
and
add
jge
push
mov
sbb
(bad)
aam
add
shl
cmps
push
fs
ds
int
int3
mov
mov
push
cmp
adc
mov
call
sbb
cwde
sub
or
cmp
pop
or
xchg
sbb
lods
shl
push
mov
inc
and
lods
jb
sbb
jmp
inc
leave
imul
shr
int3
cmp
jne
xchg
mov
popf
dec
or
sahf
sbb
outs
scas
sub
jecxz
cmp
popf
and
xor
cli
cs
mov
fucomi
fidivr
lods
mov
and
sub
rcl
aaa
(bad)
jecxz
repnz
data16
mov
ins
add
mov
in
imul
lahf
sbb
in
(bad)
lds
mov
inc
jno
rcl
push
clc
mov
sbb
mov
push
xchg
mov
add
mov
leave
fcmovbe
arpl
gs
into
xchg
cs
xchg
push
into
adc
add
(bad)
jecxz
lahf
mov
and
dec
mov
test
jmp
les
xchg
mov
das
imul
movs
fwait
adc
dec
repz
add
call
js
aam
ins
ret
push
push
mov
or
pop
inc
jg
aad
jl
pop
add
imul
cmps
sub
outs
mov
mov
push
xchg
jmp
jb
or
and
or
mov
mov
mov
fs
cmp
fidiv
sub
movs
clc
cdq
mov
les
cdq
and
leave
cmp
push
sbb
jge
inc
jnp
hlt
xchg
pop
iret
shl
mov
pusha
nop
adc
xchg
xchg
mov
xchg
sub
mov
xchg
push
int
and
pop
or
mov
psubb
in
sahf
pop
loope
xor
xor
fdivr
mov
sub
test
push
push
sahf
cmp
mov
adc
shl
and
ins
popa
pop
int
ss
imul
jbe
jl
or
adc
jle
(bad)
mov
outs
std
pop
lods
inc
jo
ins
dec
sub
or
outs
sub
mov
fstp
outs
test
xor
pop
xlat
ror
and
mov
in
dec
cdq
icebp
(bad)
cmps
enter
aas
or
xchg
and
and
call
gs
dec
mov
xchg
inc
add
imul
cld
push
cmp
jmp
or
xchg
sub
ss
popa
jns
(bad)
rcr
or
in
cli
push
test
mov
push
sub
xor
sub
pop
fisttp
inc
push
inc
fisttp
cmp
xchg
aam
xor
adc
and
xor
sub
ins
mov
arpl
sub
movs
adc
xlat
cmp
je
inc
int
adc
pop
aam
add
pop
bound
push
or
leave
push
mov
pop
mov
clc
mov
xor
dec
je
push
shl
out
mov
aaa
icebp
fadd
mov
repz
dec
movs
aaa
imul
outs
mov
fcomip
pushf
imul
mov
cld
jno
or
popa
icebp
mov
adc
dec
push
hlt
xchg
cdq
push
xor
pop
(bad)
hlt
pop
add
jae
inc
pop
mov
xor
popa
add
shl
stos
(bad)
pop
push
mov
stos
test
cdq
addr16
pop
fwait
lds
dec
int
out
inc
int3
fs
out
jg
inc
rol
pop
fadd
fmul
pop
mov
jo
xadd
push
(bad)
fisubr
fld
dec
add
cmp
mov
fs
icebp
dec
xchg
jecxz
xchg
mov
psrld
mov
es
xchg
mov
(bad)
and
and
call
dec
daa
stos
ret
rol
mov
mov
push
and
mov
leave
inc
xchg
enter
aam
rcr
aad
jnp
js
jb
xchg
inc
fild
jne
mov
retf
leave
push
mov
xchg
scas
inc
dec
hlt
js
aad
(bad)
imul
or
adc
or
loop
mov
jp
or
mov
bound
and
xchg
or
mov
sub
(bad)
jbe
outs
movs
pop
loop
xchg
test
jns
xor
cmp
or
xor
jl
jmp
sbb
pop
cmps
dec
add
xchg
xchg
lahf
iret
(bad)
cdq
mov
xor
aas
dec
dec
mov
jae
adc
fcmove
jmp
movs
cld
mov
or
fcmovu
stos
bound
imul
push
sbb
cmp
(bad)
repnz
imul
jecxz
pop
mov
fbstp
dec
jbe
inc
inc
inc
jbe
pop
jb
scas
mov
shl
fild
inc
test
add
loopne
stos
cld
sub
ret
and
sub
fld
push
adc
adc
(bad)
cli
add
sbb
pop
mov
push
lock
mov
fnstenv
xchg
int3
jb
xchg
add
xchg
je
mov
into
fcmovnu
push
adc
cld
cmp
xor
das
inc
adc
or
leave
push
rcl
cmpps
sub
dec
mov
mov
in
lock
sbb
xor
shr
test
push
arpl
rcr
pop
push
int3
xor
scas
jb
sub
dec
and
xchg
ror
pushf
shl
cmp
sub
jns
mov
inc
xchg
(bad)
repnz
arpl
pusha
sbb
rcr
jne
stos
xchg
add
pop
pop
xchg
push
in
(bad)
xor
sbb
das
push
xchg
rol
sbb
mov
fidivr
adc
xor
add
test
js
outs
scas
add
(bad)
mov
and
or
inc
test
mov
push
lahf
icebp
lods
push
and
fild
jne
mov
imul
sub
scas
fisttp
pop
dec
(bad)
push
bound
pop
pop
leave
or
iret
xchg
jmp
mov
rcr
(bad)
out
xor
push
sbb
iret
xor
push
data16
push
out
push
jae
add
lods
fs
aad
adc
arpl
jb
cld
int3
xchg
jecxz
cwde
ror
into
or
daa
pop
jo
xor
xor
icebp
mov
sahf
xor
neg
mov
(bad)
sti
push
fld
push
xchg
retf
aaa
mov
or
push
xchg
cmps
test
sub
xor
inc
push
mov
adc
call
adc
cmp
(bad)
stos
dec
popa
or
dec
hlt
test
push
out
inc
pop
mov
and
imul
mov
cdq
sbb
adc
inc
xor
add
sbb
push
and
or
int
icebp
outs
mov
ret
jge
loop
int3
dec
ror
push
push
jl
pop
icebp
std
mov
inc
js
mov
(bad)
loop
ficomp
add
cmp
or
add
(bad)
push
cdq
adc
jmp
cli
in
nop
js
or
jno
push
outs
mov
call
sar
dec
lds
mov
add
retf
push
fdiv
sub
push
cwde
out
data16
out
xchg
sub
or
push
dec
call
in
ins
inc
or
sbb
inc
nop
fcom
or
scas
cmp
movs
ins
jo
sbb
xchg
addr16
cld
fsubp
scas
(bad)
mov
pop
daa
push
je
xchg
adc
das
and
ja
movs
pop
sub
retf
aad
jae
test
lea
stc
push
or
pop
arpl
call
outs
or
movs
iret
cmp
cmp
das
sub
jne
dec
cmp
adc
enter
repnz
ds
jmp
pop
(bad)
test
test
adc
xor
pop
pop
retf
mov
int3
cwde
aas
jmp
rcl
sub
dec
adc
xor
sbb
push
cmp
inc
sbb
test
mov
sub
leave
and
and
in
dec
mov
fcomp
and
out
rcr
jae
sub
push
cli
and
and
fisub
mov
or
fadd
jmp
mov
or
outs
add
cmps
mov
sbb
sub
xor
push
xor
jne
cmp
pop
jp
in
xchg
daa
add
pop
fld
xor
jns
dec
mov
push
dec
mov
dec
jo
jp
lds
and
mov
nop
mov
stc
out
inc
bnd
outs
int
fdivr
clc
dec
push
add
push
mul
mov
push
cmp
push
je
in
cmp
sub
sub
dec
xchg
shl
sbb
pop
xchg
out
ret
xchg
mov
cdq
das
xchg
or
mov
xor
loop
(bad)
and
mov
mov
push
jnp
sub
mov
(bad)
pusha
push
stc
mov
lds
fsub
fisttp
pop
push
xor
sar
scas
add
enter
add
or
lods
adc
bound
xchg
mov
dec
sar
jmp
mov
test
enter
scas
fcmovbe
pop
ret
mov
outs
popf
pop
jmp
into
(bad)
movs
in
and
ins
sub
arpl
mov
fdiv
aam
retf
popa
test
fs
push
sbb
fisub
push
jns
out
inc
or
lock
stos
aam
pop
jl
scas
push
call
into
mov
pop
pop
cmp
xchg
std
or
xor
mov
jo
inc
(bad)
jmp
icebp
dec
aaa
fs
mov
shl
das
cmp
stos
mov
pop
scas
jge
sub
xor
das
xor
inc
in
clc
fist
sti
push
aaa
(bad)
mov
mov
sub
jmp
mov
pop
mov
daa
rcr
(bad)
mov
cwde
xor
jg
js
and
test
adc
(bad)
pop
mov
mov
cmp
dec
pop
ja
(bad)
push
push
stc
xchg
sub
pop
data16
xor
dec
mov
test
xchg
mov
ret
xor
mov
cmc
wrmsr
cmp
cli
stc
mov
pop
imul
and
arpl
mov
and
mov
out
or
vpminsw
sbb
icebp
fmul
outs
out
test
stc
mov
push
hlt
fucomip
mov
jne
js
xchg
std
test
xchg
mov
into
iret
arpl
dec
call
mov
jne
ins
mov
xor
add
mov
sbb
in
scas
push
stos
int3
mov
repnz
test
xor
and
imul
inc
pushf
jecxz
mov
fwait
outs
dec
jge
loope
jnp
push
push
fistp
pop
mov
mov
push
push
call
mov
arpl
fnstcw
in
jle
shl
sub
ficomp
test
out
ins
fmulp
mov
lea
ret
and
push
popa
cwd
push
sbb
inc
sbb
sub
push
lods
in
scas
xor
or
sbb
and
push
rol
sysexit
jp
pushf
xchg
outs
adc
dec
iret
dec
test
add
pop
xchg
xchg
jmp
jg
in
cmp
push
adc
add
pop
mov
les
and
mov
cs
push
xlat
sbb
scas
add
call
pusha
or
loop
xor
xchg
(bad)
repnz
icebp
in
or
pop
stos
sbb
gs
xchg
pop
cmp
fwait
pop
daa
push
(bad)
and
dec
aad
xor
mov
aam
and
inc
mov
mov
stos
jmp
and
pop
mov
sub
scas
shl
adc
sub
push
cmp
lds
dec
inc
rcr
pop
adc
or
mov
mov
push
jmp
fiadd
cmp
lahf
pop
xchg
adc
pop
mov
or
xor
idiv
stc
sub
push
out
call
xchg
scas
sbb
test
or
mov
or
push
nop
je
jns
fist
sub
iret
aam
ins
push
add
stos
pop
pop
or
in
out
adc
xor
aad
fisub
cmp
aam
iret
fisttp
inc
xor
dec
dec
sbb
fiadd
cmp
daa
(bad)
int3
fld
inc
push
cmp
fucom
mov
dec
push
sbb
jl
mov
inc
imul
adc
adc
sub
out
sub
jno
stc
mov
gs
inc
cmp
pop
popf
stos
push
xor
pop
rol
repnz
mov
xchg
imul
ficomp
int
int
push
dec
inc
lods
mov
arpl
push
push
fmul
pusha
lods
cdq
add
movs
in
adc
and
aam
adc
sbb
xchg
xchg
add
jae
xchg
out
out
xor
stos
pop
das
ret
cwde
aas
repz
mov
dec
ror
mov
fnsave
hlt
mov
xor
dec
jp
mov
xor
sahf
into
inc
ror
aaa
adc
jae
mov
int
sub
aam
repz
nop
test
mov
xchg
imul
(bad)
jg
adc
aas
mov
dec
sar
popa
pop
mov
enter
or
loopne
imul
mov
lock
cmps
fwait
pop
jge
or
cmp
movs
sub
and
ret
or
dec
rcr
adc
pop
pop
pusha
sub
sub
ins
stc
pop
mov
push
shl
mov
xor
test
ror
pop
mov
lods
xor
sbb
iret
ret
cmp
jecxz
ret
sbb
pop
jo
mov
(bad)
mov
or
xchg
push
inc
iret
mov
jae
push
mov
dec
xchg
retf
mov
xlat
mov
jecxz
in
or
cmps
xchg
xchg
add
sbb
out
shl
lock
xor
inc
nop
mov
inc
call
jae
mov
aas
xchg
pop
cmp
arpl
lock
xchg
xchg
mov
lock
bnd
mov
imul
in
push
lock
mov
test
lock
std
gs
push
and
pop
sbb
adc
call
scas
push
push
push
(bad)
pop
sub
jp
mov
mov
mov
scas
fs
pop
aad
(bad)
mov
jo
leave
and
clc
adc
add
sub
push
mov
and
mov
xchg
ret
cli
jg
(bad)
rol
aaa
test
cwde
repnz
lods
scas
xchg
push
mov
xchg
add
mov
sub
jno
mov
in
jge
mov
hlt
xor
mov
sbb
test
leave
ror
ja
in
les
movs
aaa
xor
pop
sahf
sub
push
jle
pushf
jmp
or
mov
ins
popa
mov
cld
cmp
sub
cs
fcmove
mov
mov
neg
mov
dec
int3
pop
std
mov
lahf
gs
mov
fcom
mov
or
test
jno
dec
mov
cmp
aad
xchg
call
test
sbb
stos
shl
dec
push
sub
lock
cmp
jle
jb
push
cmps
push
and
aad
in
or
js
dec
adc
cmp
mov
adc
mov
pop
sub
xor
jmp
and
sbb
inc
jmp
push
push
push
dec
adc
adc
cmps
sahf
ds
pop
test
retf
mov
ja
sub
mov
mov
popa
mov
mov
fisttp
sub
cmp
mov
sar
retf
int3
data16
loop
xchg
mov
test
push
rcl
imul
dec
jne
jne
xor
sbb
xchg
sbb
jecxz
mov
xchg
and
jle
int
scas
jle
mov
inc
test
sbb
and
xchg
jle
popa
in
mov
xchg
pop
jb
push
lds
cli
sbb
shl
pop
mov
push
xchg
or
jge
repz
ins
mov
loopne
sar
jns
bound
pop
lods
(bad)
fwait
pop
scas
add
mov
loope
movs
sub
rcr
dec
xor
inc
add
fbld
(bad)
and
adc
pop
mov
aad
push
fnstcw
imul
cmp
cmp
adc
xor
sti
mov
lods
das
stos
in
pop
lods
pop
loop
or
xchg
push
or
lea
adc
mov
and
fstp
loop
mov
rcl
fucomip
sar
mov
aad
push
pop
fiadd
or
or
sbb
adc
xchg
mov
sub
into
sti
push
fwait
xor
loop
mov
sub
sub
mov
dec
mov
(bad)
ja
fwait
popa
mov
sbb
into
ret
lahf
add
cmp
xor
sub
out
jno
sbb
xchg
xchg
nop
dec
adc
push
imul
fstp
pop
pop
(bad)
xchg
xor
rcr
ror
add
daa
or
cmps
push
adc
pusha
cmp
sbb
aaa
pushf
cmc
ss
xchg
fs
cmp
fincstp
outs
cmp
ins
mov
push
ja
outs
sbb
push
push
xchg
je
cld
sbb
call
mov
hlt
pop
fidiv
dec
leave
repnz
ds
push
mov
rol
jle
lea
cmp
fcomip
xor
pop
mov
fwait
dec
cs
cmp
clc
fimul
mov
ss
out
cmp
aaa
lock
iret
or
push
xchg
and
dec
jmp
add
ds
mov
jno
(bad)
cvtps2pi
enter
repz
into
fnstcw
jecxz
pop
mov
out
adc
cmp
inc
mov
bound
js
repz
sbb
movs
jmp
cmp
clc
jecxz
adc
dec
inc
popa
test
sub
mov
loope
(bad)
or
jnp
mov
add
pop
sub
jp
iret
sar
xchg
xlat
sbb
mov
jg
cmps
dec
es
adc
pop
cli
sub
add
jecxz
sub
aam
mov
or
pop
into
mov
sti
adc
pusha
retf
and
push
inc
dec
jns
sbb
cmps
and
mov
inc
nop
icebp
add
xor
adc
leave
popf
jg
mov
test
(bad)
adc
jecxz
fwait
adc
pushf
stc
pushaw
mov
int3
mov
or
std
test
fcmovbe
add
xor
cmp
sub
inc
cwde
add
and
pop
pop
cmc
dec
lods
mov
repnz
adc
mov
mov
push
and
test
addr16
push
std
jle
dec
add
pop
sbb
sahf
cmps
dec
shr
xor
inc
xchg
pop
call
loop
mov
add
inc
adc
and
sbb
mov
mov
call
shl
or
jge
not
cmp
mov
cmps
jg
(bad)
ret
jge
cmps
imul
push
(bad)
fmul
in
adc
adc
(bad)
test
xchg
inc
dec
xor
and
dec
hlt
(bad)
loop
in
lods
hlt
mov
push
popa
sub
xchg
push
push
sub
ja
shr
fadd
in
xchg
xchg
into
dec
cld
dec
add
mov
rcr
inc
icebp
add
cld
sti
mov
jge
and
imul
or
jb
es
outs
jmp
test
into
dec
nop
dec
ins
shr
mov
and
int
pop
mov
loopne
push
cmp
sbb
fsub
out
push
popf
in
cli
adc
mov
jne
jno
xor
cmp
mov
sbb
sbb
repnz
lahf
pop
xchg
repnz
and
xor
push
aad
add
xor
sbb
dec
loope
ret
adc
lahf
ins
mov
shl
movs
inc
and
out
xchg
xlat
sahf
lock
inc
ins
stos
shl
cmps
das
inc
sti
mov
and
push
add
in
ds
jnp
imul
dec
pop
jne
sub
fisub
push
pop
xor
mov
mov
and
sub
push
lahf
or
push
cmps
cs
xchg
enter
jne
jno
push
inc
adc
sub
add
leave
adc
inc
cmps
or
push
fcomp
mov
je
jmp
push
mov
mov
jecxz
shr
jbe
stos
xchg
lahf
inc
add
add
pop
mov
clc
pop
xchg
imul
jle
pop
mov
sar
adc
push
xchg
fwait
xor
ins
(bad)
adc
adc
ss
mov
push
in
or
fisttp
push
loope
mov
sub
and
cmp
mov
mov
xor
in
mov
fst
lods
and
pop
scas
lods
(bad)
out
add
cmp
add
and
xor
inc
mov
sbb
xlat
xchg
dec
mov
popa
add
dec
in
mov
mov
add
add
inc
out
xlat
pop
cmp
or
jbe
stos
fsub
mov
sbb
inc
push
(bad)
(bad)
in
nop
cmp
mov
pop
lock
xlat
fs
xor
add
pop
add
pusha
mov
mov
mov
sub
call
jno
sbb
rcl
or
cld
mov
hlt
inc
dec
sbb
pop
lods
pop
(bad)
mov
fmul
mov
(bad)
cli
jnp
and
cmc
adc
ret
mov
shl
or
jns
sbb
fiadd
inc
mov
adc
and
fstp
xchg
ror
repnz
(bad)
sbb
rcr
repz
cmp
adc
ja
pop
jmp
or
jnp
add
nop
xor
mov
or
push
mov
jo
loop
in
(bad)
aaa
mov
sahf
or
mov
imul
or
rcr
scas
aam
movs
les
jmp
or
xor
cmps
jo
mov
fmul
movs
(bad)
push
add
xor
lock
arpl
imul
or
jne
jns
sti
xchg
push
sub
mov
mov
cli
cmp
xchg
fld
call
in
cmp
hlt
icebp
fcomp
push
out
jge
dec
mov
sbb
fs
push
std
push
hlt
jne
aam
dec
(bad)
mov
mov
xor
je
sbb
mul
scas
add
movs
movs
fbld
(bad)
adc
stos
sub
add
pop
pop
mov
push
cmp
aaa
sti
into
pop
ret
pop
sub
ficom
jmp
movs
mov
cli
xor
push
xchg
xchg
test
lock
aas
jne
sbb
retf
sbb
mov
popa
cli
cmc
add
retf
xor
clc
xor
repnz
fstp
sub
nop
push
lock
xchg
sti
sar
adc
adc
sbb
sysenter
mov
in
out
not
dec
pop
and
enter
ss
int3
in
xor
ret
sahf
inc
add
add
and
ret
jbe
adc
sub
les
call
cdq
mov
in
test
lea
jne
xchg
js
test
movs
add
adc
lds
sar
inc
stos
sbb
hlt
pop
xchg
pop
and
pop
sbb
jl
int3
mov
fsubr
out
(bad)
fnstsw
dec
dec
ds
pop
adc
popa
arpl
and
or
jl
mov
arpl
mov
jne
je
push
mov
xchg
mov
ud0
mov
and
inc
pop
imul
je
jmp
cmps
les
imul
push
das
shl
cmp
jmp
cwde
and
pop
sbb
mov
jnp
cmps
nop
hlt
popf
out
aas
and
dec
dec
mov
cmp
mov
jns
ins
jne
fist
xchg
or
ror
sub
enter
mov
mov
js
retf
outs
xchg
mov
shr
pop
sub
pop
leave
pop
pop
sar
push
out
push
dec
fdivr
fwait
hlt
bound
push
lea
out
pop
outs
push
jg
xchg
push
mov
sysexit
cmp
cmc
push
jns
xchg
int
dec
(bad)
adc
mov
add
push
hlt
push
clc
and
fcomp
es
mov
cs
jne
pop
adc
fcom
cs
mov
mov
sbb
movs
icebp
out
add
pushf
jae
push
push
in
rcr
into
adc
in
shr
mov
aas
jl
cmp
mov
stos
(bad)
int3
repz
push
and
gs
mov
ss
push
sbb
jne
ror
xor
jmp
pushf
repz
push
sbb
cmp
push
loope
les
fidivr
fwait
(bad)
ins
pop
and
je
arpl
js
bound
xchg
js
mov
jne
jo
adc
adc
sub
or
aas
call
xor
test
mov
hlt
test
scas
in
call
pop
aam
cmp
cmp
xchg
and
(bad)
scas
stos
movs
pop
mov
jg
push
into
movs
test
dec
jb
xor
push
mov
out
or
iret
stos
jp
ror
lea
inc
call
mov
(bad)
and
adc
fcom
(bad)
pop
jnp
enter
mov
add
cmc
ficomp
test
fdivp
sbb
cmps
sub
xor
add
add
out
jmp
clc
retf
sbb
sub
call
mov
retf
repnz
icebp
aaa
xchg
push
outs
into
fsubr
sub
sahf
dec
inc
or
lods
jmp
jo
mov
loopne
inc
call
dec
push
cld
jnp
ins
shl
inc
push
(bad)
scas
xchg
mov
or
dec
mov
ret
sbb
xchg
sahf
popfw
test
and
mov
repz
daa
(bad)
adc
(bad)
jae
test
mov
sub
mov
pop
(bad)
pop
or
movs
adc
mov
mov
pop
fcom
mov
cmp
inc
icebp
int
mov
jns
push
scas
outs
mov
push
push
repz
outs
daa
dec
popf
xchg
jl
add
stos
sub
xchg
test
add
ret
and
sti
out
sbb
mov
dec
adc
scas
add
mov
stos
sbb
les
retf
arpl
jg
jae
cmps
sub
pushf
sbb
mov
(bad)
stos
add
dec
xchg
loopne
push
sub
push
sbb
cmps
movzx
adc
inc
ja
pop
sbb
add
push
cs
cdq
(bad)
pushf
stos
(bad)
jmp
xchg
cdq
daa
cmps
sub
fnstenv
lods
movs
pop
push
inc
sahf
jne
mov
lea
pop
scas
ss
add
add
xchg
jmp
mov
(bad)
xor
out
out
sub
out
adc
idiv
(bad)
int3
mov
je
dec
lahf
mov
retf
adc
ja
paddq
push
jno
sbb
xor
sub
dec
jecxz
jmp
mov
dec
sub
sub
popf
pop
dec
inc
mov
or
push
jb
mov
out
xchg
pop
jo
mov
into
cmp
jns
adc
jmp
dec
movs
inc
jge
shl
mov
repnz
xor
jge
cmp
shl
push
aad
cmps
popf
jp
pop
jnp
ins
pushf
add
push
push
inc
cmc
push
adc
pop
add
pop
dec
leave
and
mov
xor
mov
mov
jge
fcom
xchg
push
(bad)
or
sahf
neg
outs
inc
mov
pop
xchg
inc
pusha
enter
enter
pminsw
xchg
stc
xor
cli
xchg
mov
mov
sbb
sahf
jae
dec
in
pushf
push
jo
xor
sar
jl
add
lahf
mov
int3
xchg
ret
mov
icebp
mov
mov
js
movs
adc
imul
cli
and
pop
push
push
mov
inc
(bad)
mov
add
(bad)
sti
enter
add
and
int
xchg
push
test
nop
out
sbb
lahf
fldenv
leave
cli
cli
xor
adc
or
enter
shl
or
jnp
int3
jle
jl
fistp
addr16
mov
cmp
mov
iret
push
xchg
push
mov
lds
inc
aam
inc
data16
jl
inc
jb
cmp
jle
and
push
ins
arpl
xor
and
mov
xor
or
sub
dec
xor
aad
call
inc
fwait
sbb
out
test
dec
fimul
jge
or
int
push
jmp
mov
dec
add
mov
mov
dec
jnp
jo
rcl
ss
sbb
icebp
sub
sub
sbb
add
mov
inc
lock
push
scas
sbb
adc
ret
adc
bound
dec
cmp
cmp
pop
outs
imul
ficomp
xor
icebp
ins
icebp
(bad)
ror
daa
or
loop
in
cmp
ja
mov
or
cwde
adc
cmp
fs
adc
xchg
mov
jecxz
fmul
jge
leave
imul
sbb
test
adc
or
adc
out
or
lahf
dec
mov
retf
inc
xchg
mov
retf
ds
or
mov
fmul
inc
sub
cmp
imul
mov
xchg
jns
std
cmp
dec
xchg
xchg
mov
and
sbb
inc
cmp
popf
dec
or
rol
adc
cdq
sahf
pop
lds
pop
arpl
pop
mov
mov
adc
stos
push
(bad)
test
leave
jae
and
inc
inc
pop
fs
int3
xchg
push
and
adc
dec
adc
sbb
nop
and
push
cli
jmp
cld
(bad)
fs
xchg
div
cdq
jle
mov
fisttp
add
call
or
repz
cdq
and
ret
sub
or
sbb
(bad)
(bad)
sbb
pusha
dec
inc
fadd
ins
add
fild
and
repz
cmp
inc
mov
mul
dec
popf
adc
pop
pop
xor
push
pop
cmp
mov
jo
movs
push
shr
push
jae
sub
lds
scas
sbb
inc
jl
add
mov
daa
fbstp
test
addr16
inc
xor
not
add
mov
pop
test
xchg
ja
sub
fst
ret
adc
(bad)
push
mov
(bad)
cmp
retf
and
mov
ins
or
ret
icebp
pop
outs
fwait
xchg
ret
cmc
add
add
ss
pop
lods
sar
sbb
sub
aad
adc
jmp
or
and
retf
cmp
mov
jp
call
push
jg
mov
scas
sub
ja
add
(bad)
and
mov
repz
dec
push
sbb
jns
outs
dec
movs
jno
jno
xor
mov
or
cld
stc
cli
ret
leave
ja
in
xor
adc
dec
daa
sti
or
mov
xor
push
cmp
test
xor
or
ds
lock
add
cmp
mov
enter
(bad)
mov
shr
cmp
mov
xor
jno
push
mov
inc
(bad)
cmp
xor
pop
movhps
pushf
mov
push
mov
out
mov
push
aam
push
call
push
nop
xor
dec
inc
mov
mov
and
popa
adc
dec
jle
mov
mov
sbb
sbb
in
mov
or
out
inc
test
popf
adc
mov
pop
push
sub
sbb
and
jns
mov
push
inc
jae
mov
inc
inc
jp
call
fisub
nop
inc
adc
fs
push
imul
cld
pop
xchg
jae
mov
stos
jge
shl
mov
(bad)
aad
adc
es
jnp
fisttp
movs
cmp
pusha
mov
push
xchg
mov
mov
push
data16
add
std
jecxz
lods
push
jle
push
xchg
jg
sbb
dec
icebp
pop
in
clc
stc
stos
cmc
ins
sar
adc
out
xor
in
jle
out
push
push
or
pop
test
es
dec
in
add
es
add
mov
ins
out
shl
(bad)
push
adc
cs
xor
mov
ins
daa
lock
scas
push
dec
dec
call
mov
adc
call
out
or
rol
(bad)
fs
mov
adc
popa
enter
aas
jp
xor
and
outs
scas
lods
repnz
scas
sub
pop
cmp
es
hlt
repnz
xchg
push
push
add
fld
js
(bad)
cld
scas
ds
xchg
pop
test
xchg
sti
in
aad
mov
inc
xchg
rcr
xchg
test
mov
aaa
cmp
call
ret
or
mov
cmp
pop
mov
or
sbb
outs
gs
clc
push
dec
imul
(bad)
push
pop
rcr
out
pop
cmps
xchg
sahf
pop
cmps
jp
das
push
(bad)
imul
mov
cmc
aam
dec
push
mov
push
mov
or
loop
ror
lds
or
cdq
sub
int
add
xchg
test
jae
cmp
pop
or
das
push
dec
in
dec
add
xchg
aas
mov
call
in
and
adc
fadd
dec
mov
cli
mov
pusha
into
jl
cmp
mov
mov
cmp
xchg
jp
int
in
adc
rcr
push
cs
je
lea
retf
sub
sbb
das
pop
fstp
scas
test
adc
nop
lods
cwde
cmp
mov
jge
push
loop
lods
mov
or
lock
aam
mov
jnp
mov
in
push
dec
outs
dec
les
xor
sub
in
sti
dec
das
xor
es
and
sbb
(bad)
popw
int
repz
xchg
mov
int3
(bad)
jmp
js
jo
and
clc
mov
scas
sub
mov
sahf
jecxz
sub
popa
movs
test
je
pop
repz
test
jmp
mov
div
jmp
scas
ins
sahf
mov
jle
(bad)
out
sbb
inc
imul
cmps
fistp
lock
sub
and
inc
movs
ror
push
xchg
sub
cmp
lahf
stc
call
rcr
mov
das
dec
mov
mov
test
push
mov
sub
enter
xor
push
xchg
inc
movs
and
fnstcw
das
inc
aad
mov
push
mov
fnsave
mov
xor
adc
xchg
retf
cwde
aad
push
or
xchg
xchg
imul
test
iret
cmps
ret
inc
jns
fwait
cmps
dec
jns
call
mov
mov
test
mov
cmp
sub
cs
icebp
jg
inc
outs
js
in
fldcw
enter
sub
cmp
dec
das
shl
or
add
cmc
outs
and
scas
cmp
lock
jo
mov
popa
in
push
add
push
cmp
xchg
mov
fs
lds
push
sar
mov
ficomp
bound
bound
add
xor
fimul
test
ret
inc
push
test
loopne
dec
test
xor
test
test
fs
cmp
bound
xchg
ss
inc
sbb
fisub
mov
repnz
xor
(bad)
daa
mov
xchg
addr16
mov
mov
shl
inc
push
(bad)
mov
adc
jl
cwde
sti
inc
in
mov
sar
arpl
mov
enter
inc
jnp
pop
call
test
nop
sub
bound
push
ret
add
ficom
inc
imul
push
dec
loopne
xchg
dec
data16
out
test
and
xor
mov
and
cdq
cs
push
sub
fidivr
(bad)
mov
int3
lea
fmulp
xchg
inc
mov
(bad)
cdq
jecxz
icebp
out
jmp
fcomp
jae
sbb
dec
imul
sbb
les
dec
(bad)
sbb
mov
ins
out
mov
sti
adc
es
in
and
js
cmp
test
sbb
(bad)
fsub
mov
sbb
lds
jae
xor
adc
xor
cdq
aaa
push
or
adc
mov
cmp
icebp
fcomi
sar
dec
xor
fwait
jle
xor
inc
jg
adc
cwde
inc
or
into
mov
jl
sub
jns
gs
out
fs
bound
dec
jbe
jns
movs
shl
int
cdq
cmps
push
ins
jl
std
leave
mov
fcmovbe
outs
mov
daa
in
dec
fidivr
jp
stos
clc
and
dec
or
sbb
pushf
imul
repnz
(bad)
les
fcmovb
dec
xchg
xchg
or
leave
into
or
scas
push
inc
push
retf
outs
mov
push
(bad)
scas
xor
je
cmp
mov
sbb
(bad)
jl
add
leave
std
fdiv
aad
ins
inc
or
xor
and
inc
call
jge
mov
jns
ins
jg
push
sub
mov
lods
or
popf
sar
fwait
out
ins
mov
fnstsw
div
clc
ret
(bad)
push
es
cmp
mov
stos
jp
push
cli
cmps
fldenv
dec
and
mov
mov
add
mov
out
ins
and
pop
sbb
or
movs
add
jle
(bad)
jp
jmp
loop
xchg
sub
pop
mov
xchg
mov
stos
clc
jbe
jle
dec
mov
mov
fstp
imul
lods
dec
push
mov
adc
in
push
mov
les
push
fcmovbe
retf
imul
inc
iret
push
out
ja
push
inc
leave
sub
jbe
ds
xlat
push
jmp
push
lds
cdq
mov
push
and
(bad)
out
sub
sbb
inc
sahf
das
outs
push
jno
mov
out
ja
icebp
mov
icebp
cmp
loopne
adc
mov
fisttp
ins
xor
push
shl
mov
retf
in
cmp
retf
cmps
push
add
jno
ins
shl
sbb
in
lea
add
sbb
push
ficom
dec
in
aad
fisubr
test
cmp
das
pop
loope
mov
in
mov
out
mov
dec
ret
inc
pop
int3
pop
adc
(bad)
int3
adc
mov
xor
call
dec
add
out
inc
call
add
cdq
int
xor
cdq
into
cmp
dec
push
push
(bad)
pop
cmp
lods
inc
int
not
pop
mov
data16
jbe
or
int
adc
jb
adc
test
mov
daa
lods
push
adc
sbb
sbb
and
aas
dec
push
adc
jmp
cmp
inc
jge
and
mov
fsub
mov
xchg
mov
ss
xor
fcmovnbe
inc
add
mov
test
cmp
popa
repnz
jne
jmp
xor
push
sbb
cwde
loop
mov
jno
sbb
rol
pop
jmp
pop
dec
mov
add
xchg
pushf
and
popf
mov
xor
mov
adc
mov
bound
add
cmp
call
lock
or
mov
ins
aad
xlat
sub
xlat
jo
adc
cmc
pop
sub
or
push
vunpckhpd
retf
add
enter
adc
mov
mov
jge
cmp
push
jl
pop
or
ffreep
pusha
mov
cli
cmps
adc
xchg
out
scas
shl
or
or
je
jne
and
(bad)
pop
mov
retf
adc
sbb
loope
sbb
(bad)
inc
dec
imul
jle
jb
mov
or
popa
gs
and
mov
ds
mov
sti
sub
fmul
mov
pop
mov
sub
mov
cmp
mov
popa
jne
adc
and
adc
(bad)
fiadd
mov
or
adc
fidiv
jle
daa
retf
pop
in
iret
push
mov
es
cmps
pushf
sahf
lods
jnp
add
dec
jmp
push
test
jbe
mov
add
xchg
mov
ss
shl
pusha
lds
out
jbe
add
dec
adc
nop
pop
inc
jno
xchg
imul
xor
lds
repz
mov
sub
std
cdq
or
fwait
mov
cmovns
mov
popf
inc
stos
push
addr16
sbb
jbe
or
out
out
pop
fisttp
icebp
in
lock
mov
mov
clc
gs
ficom
cmp
and
jmp
sub
xchg
sbb
add
inc
mov
ja
xor
mov
cld
cmp
mov
stc
popa
xlat
push
lea
xchg
inc
ins
cmp
and
pusha
imul
sub
mov
cld
movs
mov
push
sbb
cmp
mov
(bad)
pop
gs
pop
js
bound
scas
popa
adc
sbb
push
(bad)
out
cmp
push
test
cld
fisub
inc
pop
lods
inc
shl
and
inc
add
inc
add
jmp
aad
daa
shr
or
sbb
and
inc
lds
imul
pop
dec
xchg
cli
adc
add
shl
and
(bad)
rcl
adc
call
mov
(bad)
leave
das
fldenv
xchg
mov
sub
jmp
lock
movs
shr
ret
in
mov
add
adc
pop
(bad)
imul
jbe
inc
test
out
mov
jno
jle
add
mov
out
loopne
sub
sub
mov
jge
test
dec
ins
fs
xor
push
jmp
in
fwait
sar
inc
xchg
adc
iret
ror
inc
int3
jnp
add
test
sti
stos
add
sub
mov
jnp
push
cmp
push
jle
rol
pop
sub
scas
mov
xor
jbe
jnp
dec
cmp
fisttp
or
movs
xor
loop
cli
add
hlt
pop
xor
and
loope
test
mov
jno
lods
cmp
xor
mov
shl
out
mov
mov
xor
push
not
fimul
jmp
mov
jne
popa
out
sub
pop
xchg
sahf
daa
xchg
inc
icebp
push
cmp
jb
jae
test
fidiv
jmp
or
push
mov
mov
cld
ror
add
in
push
in
outs
test
mov
or
scas
int3
loop
movs
and
xor
ins
pusha
jp
or
ficom
out
repnz
stos
mov
fcomp
imul
adc
mov
test
(bad)
data16
cmps
xor
shl
movntq
out
(bad)
cmp
xchg
push
mov
mov
sub
xor
gs
test
dec
clc
mov
cmp
sub
sbb
in
test
xchg
(bad)
movs
sbb
sub
fadd
idiv
dec
stos
mov
out
or
cld
jne
pushf
pop
dec
(bad)
mov
sub
imul
arpl
outs
mov
test
mov
xchg
adc
jns
xchg
adc
push
fsincos
adc
addr16
jge
mov
retf
jmp
inc
jmp
inc
movs
xchg
sar
cmp
sti
dec
cmp
cli
imul
ss
or
into
mov
dec
(bad)
popa
data16
adc
sti
ret
cmp
test
mov
int
jno
sub
fldenv
mov
xor
call
mov
xor
and
inc
pusha
xchg
sbb
jae
aad
std
push
pop
ret
sahf
lods
jne
add
inc
pushw
jnp
fldln2
movs
(bad)
mov
sbb
idiv
inc
js
push
push
mov
push
push
jmp
add
icebp
lahf
leave
scas
xchg
dec
bound
repnz
dec
gs
gs
and
sbb
push
pop
xor
iret
retf
(bad)
mov
mov
dec
inc
adc
in
ja
cmp
sbb
mov
loopne
cwde
loop
mov
(bad)
push
dec
ret
test
les
sbb
mov
cmps
in
lods
xchg
xor
push
sub
jns
js
sbb
xchg
dec
mov
dec
push
test
inc
inc
inc
div
scas
(bad)
mov
mov
jmp
pop
mov
and
dec
or
sub
dec
or
data16
push
popf
call
sub
in
lods
loop
cld
push
ficom
addr16
rcl
aas
jecxz
ror
fwait
sbb
dec
push
push
into
repz
arpl
xor
jae
leave
loopne
out
add
sbb
mov
sbb
sbb
pop
pop
adc
mov
mov
lea
pop
jl
dec
mov
test
cmp
cmps
stos
xor
sub
aas
call
fwait
test
sbb
add
mov
outs
cmps
pop
cmp
loop
call
lock
rcl
ret
sub
mov
lahf
cli
sub
lahf
ja
aam
rcr
scas
es
lock
xor
movs
adc
dec
and
mov
jp
inc
icebp
out
fstp
dec
mov
push
adc
pop
xchg
adc
inc
jge
mov
jmp
stc
push
mov
or
fist
push
mov
aas
and
add
aam
mov
mov
retf
xchg
push
imul
lods
cmps
xchg
mov
in
and
sbb
stc
iret
js
pop
(bad)
cmp
js
or
jl
sbb
imul
pop
ins
je
ja
cmp
pop
sub
in
jg
scas
mov
cli
scas
pop
push
mov
jp
movs
in
push
nop
fmul
xchg
fld
jae
dec
aad
xor
push
out
ins
xchg
scas
xchg
scas
or
jbe
call
pop
pop
adc
jg
jbe
mov
pop
ffree
and
mov
mov
popf
pop
mov
lahf
loopne
mov
pop
cmc
cmp
dec
lods
hlt
lods
imul
xchg
loopne
or
sbb
pop
push
mov
dec
je
jp
jp
and
mov
shl
pusha
inc
ror
stc
mov
xchg
loope
mov
into
mov
and
arpl
cmps
or
mov
ins
(bad)
pop
lahf
xchg
xor
test
dec
ret
jge
and
sub
movups
jnp
(bad)
push
jmp
dec
sbb
push
lea
das
mov
push
and
scas
jo
repnz
call
sbb
stos
fcmovbe
cmp
int3
es
sbb
out
in
add
sub
out
push
sbb
mov
fwait
scas
or
push
(bad)
fbstp
push
adc
cmp
outs
pop
cli
mov
cwde
lea
and
fist
xor
sbb
aas
arpl
sbb
cwde
scas
cmp
xchg
push
and
cmp
mov
xchg
fucom
je
movs
xchg
(bad)
push
adc
jge
ss
pop
shl
movs
(bad)
ret
mov
hlt
pop
(bad)
xor
jge
jne
rcl
test
mov
push
out
dec
test
mov
outs
dec
cmc
cmp
mov
out
jbe
and
or
push
jge
sbb
jp
repnz
add
shl
mov
xchg
aad
xchg
dec
pop
push
push
call
xor
push
push
ja
cdq
mov
fwait
xchg
mov
push
mov
mov
cmp
cmp
js
arpl
scas
pop
xor
xor
not
fadd
cs
push
pop
int
jo
and
mov
test
add
mov
fcmovnu
mov
gs
cmp
daa
and
xchg
and
add
adc
xor
icebp
pop
mov
ret
cmps
lock
jmp
lods
mov
push
jle
fldenv
xor
ds
fistp
mov
int3
xor
retf
push
dec
xchg
fnsave
pop
jbe
mov
pop
mov
addr16
xchg
(bad)
cli
add
imul
sbb
ss
sbb
inc
pop
fist
mov
mov
in
iret
outs
push
rol
out
mov
push
lods
in
jg
fnstenv
xchg
dec
pop
lds
inc
repnz
retf
pop
in
data16
mov
gs
push
cmp
cld
push
cmp
xchg
xor
jae
mov
pop
test
pop
int3
cmp
jle
push
sub
sbb
(bad)
ds
mov
ret
add
outs
dec
pop
dec
daa
push
es
push
adc
jnp
dec
outs
sbb
jnp
push
push
mov
sar
or
daa
push
sbb
shl
repz
or
loope
cmp
outs
call
fistp
lock
cmp
cmp
xor
cs
ins
jge
mov
loope
bound
sbb
sbb
jl
pop
mov
retf
and
sub
loope
aas
(bad)
lock
jmp
and
add
pop
or
mov
cld
jne
sub
and
aad
inc
mov
pop
sbb
std
cmp
add
inc
sbb
(bad)
dec
jmp
adc
dec
push
mov
mov
scas
mov
push
push
mov
cmp
scas
mov
mov
dec
pop
mov
(bad)
xchg
and
scas
sub
inc
std
mov
dec
scas
int3
jbe
xor
daa
(bad)
stc
std
fwait
pushf
and
mov
cmp
xchg
add
add
add
jbe
bound
xchg
cmps
jp
(bad)
fistp
into
bound
loopne
inc
lods
pop
inc
int3
popa
inc
test
xchg
rcl
daa
(bad)
fldenv
inc
mov
test
enter
pop
lock
fstp
(bad)
outs
(bad)
lods
rol
mov
jb
std
jo
jg
shr
jb
dec
out
aam
clc
pushf
inc
pop
fld
iret
jmp
sbb
sbb
popf
sti
aad
or
push
sbb
mov
pop
aaa
jecxz
call
shl
or
ins
test
mov
mov
(bad)
mov
push
pop
xchg
ins
sub
sbb
sbb
mov
(bad)
iret
dec
cmps
imul
and
push
mov
add
push
mov
neg
lds
dec
mov
call
mov
js
sbb
xchg
sti
fcmovbe
fimul
mov
lea
(bad)
sbb
add
pop
mov
fidiv
aaa
add
adc
stos
cli
std
and
iret
enter
mov
imul
and
dec
and
and
mov
ins
mov
cmp
movs
jb
sbb
sbb
push
xchg
pop
(bad)
jno
cmc
xor
xor
loope
add
sub
loopne
nop
iret
movs
pop
outs
movs
bound
and
cmp
push
and
or
fist
stos
fwait
add
dec
and
inc
mov
add
sbb
popa
or
cdq
rol
inc
push
sbb
push
push
adc
jge
or
mov
ins
retf
cmp
pop
int3
sub
imul
pop
cld
cwde
jle
cmp
push
xchg
sub
aaa
add
test
fist
bound
in
fmulp
cmp
push
loop
mov
xchg
and
xor
jp
addr16
fs
xor
push
lahf
out
dec
mov
inc
jo
sar
outs
xchg
es
sub
in
push
out
sbb
dec
pop
jp
les
mov
inc
fwait
es
int
mov
repz
xor
mov
xlat
pop
or
dec
stos
jmp
loopne
add
xchg
dec
mov
hlt
call
adc
out
int3
add
aas
sbb
mov
sub
cmps
into
jge
jg
mov
inc
sbb
in
xor
mov
rcr
sbb
call
popf
jge
(bad)
push
xchg
sahf
or
int
or
cmps
jnp
adc
dec
mov
xchg
cdq
inc
repnz
imul
or
xor
loop
test
fcmovb
int3
sbb
mov
mov
sbb
dec
in
jp
stos
fnstcw
addr16
and
popf
fcmovu
jecxz
in
fnsave
xchg
mov
mov
and
pop
in
pop
mov
movs
int
std
or
popf
cmp
mov
jns
mov
in
push
movs
in
ret
or
rol
outs
sub
mov
mov
push
jmp
or
retf
fcmovu
ret
pop
dec
pushf
pop
add
loope
ds
pop
mov
in
push
sbb
iret
mov
dec
cdq
inc
ds
mov
cmp
nop
aaa
inc
out
and
inc
scas
nop
or
mov
mov
cmp
mov
pop
xor
loopne
dec
or
mov
scas
int3
arpl
imul
fdivr
iret
pusha
test
mov
je
je
int3
push
push
xor
inc
mov
test
sub
cmp
mov
clc
sbb
jp
mov
push
cs
dec
pop
repnz
outs
pop
sahf
frstor
dec
sub
inc
sbb
sahf
push
xchg
mov
sbb
shl
aad
ins
xchg
mov
daa
test
mov
dec
(bad)
jo
and
lods
pop
leave
mov
sahf
movs
scas
imul
neg
test
sbb
sub
shl
jae
sub
data16
(bad)
lods
sbb
fcmovnu
mov
(bad)
mov
jle
or
(bad)
lahf
xchg
add
pop
cli
jbe
bound
mov
test
and
fstp
std
cmp
mov
mov
or
daa
xor
dec
mov
leave
xor
(bad)
scas
je
adc
fdivr
popf
or
ficom
pop
in
cmp
sbb
mov
and
jo
aad
fld
cdq
dec
push
fld
pop
in
fld
sbb
aaa
gs
mov
xor
adc
loope
jb
ins
mov
push
aaa
mov
xor
mov
fld
lods
js
ss
dec
sahf
movs
test
jne
or
dec
(bad)
loopne
mov
sub
fist
clc
add
out
bts
loop
aad
jo
pop
mov
xchg
dec
inc
fisttp
push
loopne
add
sbb
dec
jno
pop
cmp
pop
jbe
mov
xchg
sub
xchg
adc
js
cmp
sti
(bad)
jmp
mov
push
dec
inc
mov
push
mov
ins
push
loop
mov
mov
mov
and
shl
mov
movs
cmps
cmp
push
add
sbb
and
(bad)
add
int
shl
jmp
mov
pop
mov
adc
jmp
cmp
mul
retf
and
push
gs
shr
scas
and
(bad)
gs
cdq
test
sbb
jl
pop
lock
pop
movs
or
je
(bad)
xor
mov
lock
or
call
lahf
scas
shr
dec
fucomi
push
fnstenv
lea
fnstcw
popa
xchg
lahf
inc
cmp
pusha
cmp
push
pop
iret
leave
pushf
(bad)
(bad)
arpl
jb
loopne
push
ja
jnp
repz
add
daa
xor
in
int3
mov
hlt
pop
mov
(bad)
sahf
xor
cdq
inc
and
mov
test
stos
imul
lock
jns
(bad)
and
ins
movs
das
adc
pop
dec
sbb
sub
adc
xchg
mov
xchg
scas
(bad)
pop
jmp
aam
test
jne
imul
jmp
adc
mov
fiadd
and
fst
test
mov
sbb
lahf
jno
in
jmp
bound
pmulhuw
std
pop
xchg
in
sbb
cmp
call
test
in
cmps
and
pop
xchg
push
pop
rcr
pusha
adc
ss
call
je
ret
out
mov
sbb
shl
xchg
pop
leave
mov
test
loop
dec
js
lds
aas
in
sbb
push
jmp
mov
and
div
xchg
dec
jge
xor
cli
jne
call
scas
xor
jbe
push
les
repz
idiv
fidivr
addr16
(bad)
push
das
push
dec
imul
pop
mov
bound
pop
xchg
icebp
es
aad
push
lea
lods
outs
test
lahf
jg
fcomp
pop
movs
loop
cmp
xor
add
mov
ret
dec
imul
xchg
jae
ror
retf
and
or
and
inc
pop
call
int
inc
push
mov
sti
adc
and
leave
dec
jmp
sbb
pop
sub
sahf
mov
pusha
mov
jmp
push
xchg
adc
cmps
mov
push
and
or
pop
call
fdivr
jae
sbb
push
jecxz
push
sti
pop
rol
pop
popa
(bad)
daa
cmps
dec
sbb
std
or
adc
mov
pop
add
pop
mov
pop
outs
mov
lock
push
movs
outs
xor
dec
pop
in
pop
sub
sar
xchg
std
jp
mov
xchg
inc
shl
jp
js
xchg
adc
xchg
inc
and
or
adc
js
jnp
sbb
sub
add
movs
xchg
jg
das
(bad)
dec
hlt
dec
aas
add
pop
ins
sar
cmc
and
or
pop
popf
call
dec
sbb
clc
jmp
push
jl
into
sub
movs
sbb
jnp
push
or
ja
fisub
push
jecxz
or
xchg
les
(bad)
cmp
neg
(bad)
(bad)
xor
std
mov
pop
stc
mov
cwde
mov
mov
sbb
sub
adc
dec
mov
(bad)
jns
retf
and
in
mov
add
xchg
aad
jnp
jl
inc
xor
fld
aam
test
ins
add
cmc
(bad)
in
or
inc
arpl
addr16
dec
ins
(bad)
push
loopne
das
add
pop
test
pop
pop
cmps
out
cld
jnp
cmp
and
sar
add
pop
stos
arpl
aaa
dec
and
cdq
(bad)
cli
ret
ror
push
mov
dec
popa
pushf
xchg
jb
(bad)
pop
adc
call
mov
jno
cdq
jp
mov
cmc
in
inc
dec
xchg
adc
ficom
arpl
cmp
mov
xchg
mov
lahf
dec
gs
xchg
mov
sub
or
or
xchg
jno
and
and
popa
ds
mov
cmp
lea
adc
xchg
(bad)
jmp
cmp
in
sbb
in
dec
push
jns
fcmove
jmp
mov
pop
sbb
push
xchg
push
sbb
mov
push
cld
push
stos
adc
aaa
fst
call
je
push
rcl
xchg
xchg
adc
add
inc
dec
(bad)
les
inc
add
xchg
dec
call
mov
xchg
out
in
mov
das
sbb
inc
rcr
jae
enter
push
push
cmp
mov
and
ins
pushf
inc
retf
and
mov
or
or
rol
or
int
or
clc
test
push
in
and
inc
xor
ja
mov
movs
jge
scas
mov
jge
xchg
xchg
inc
popf
adc
lods
pop
fisttp
sub
push
out
add
cld
aad
stos
sbb
or
(bad)
out
sbb
mov
adc
xor
jmp
addr16
fidivr
mov
xlat
or
mov
mov
xor
mov
mov
inc
jmp
scas
test
movs
mov
mov
dec
cwde
mov
xlat
call
outs
mov
push
mov
xchg
movs
cmp
je
ja
lea
retf
pop
(bad)
cmc
jge
mov
(bad)
test
gs
in
and
jg
xchg
sub
aad
cld
int
imul
jmp
fild
mov
std
mov
cli
pop
jnp
jl
out
aad
sbb
mov
jecxz
xor
enter
cdq
pop
pslld
push
jle
fstp
jne
pusha
lahf
retf
jge
or
or
repz
xchg
cmps
push
mov
mov
cmp
jle
loop
out
sub
jmp
in
and
pop
mov
and
ror
or
push
leave
jb
pop
and
sub
mov
ins
dec
popf
push
loope
retf
cmp
pushf
jl
pop
add
cmp
mov
into
push
and
shr
fnstsw
fstp
cmp
out
add
lahf
push
mov
call
test
cmp
dec
mov
mov
popa
and
inc
mov
xchg
sbb
loope
mov
imul
arpl
add
icebp
fidiv
in
rcr
ficom
cmp
stc
and
dec
(bad)
jmp
push
cmps
cmps
clc
xchg
xchg
fwait
push
fcmovnbe
cmps
xor
dec
in
adc
jecxz
mov
mov
push
inc
mov
push
lahf
imul
xchg
ins
fbstp
push
add
mov
in
mov
lock
ja
test
adc
jmp
out
mov
in
iret
jb
adc
push
icebp
ret
pop
lods
inc
or
scas
inc
repz
jo
adc
push
mov
add
ret
jbe
mov
mov
loope
jl
popf
enter
xchg
jbe
xchg
lods
in
push
lahf
add
lea
adc
stc
lahf
xchg
outs
jae
pop
loop
in
rcl
std
neg
cmps
lock
mov
mov
add
retf
aad
lds
std
retf
xor
adc
cmp
out
cmp
in
jl
jo
imul
aas
push
adc
out
and
ins
fnstsw
cmp
cmps
imul
(bad)
sub
out
inc
push
test
pop
int3
add
lea
out
neg
rol
push
fcmovb
push
xor
inc
adc
pop
mov
icebp
xchg
mov
adc
test
loopne
xchg
xchg
aas
mov
pop
dec
aad
ja
mov
jbe
pop
push
mov
pop
cmp
(bad)
in
out
jmp
int
adc
dec
mov
idiv
jb
jno
stc
mov
mov
cld
mov
mov
lods
mov
call
ins
inc
lock
aad
lods
mov
mov
mov
in
mov
jmp
cld
mov
jl
jb
add
mov
neg
punpcklbw
ret
xor
stos
js
jb
dec
imul
fld
or
test
inc
mov
into
daa
in
add
mov
add
mov
and
cmp
and
mov
sar
popf
leave
xor
aam
xchg
dec
test
cwde
cmp
cmc
sub
push
or
nop
sub
lock
sti
xor
and
push
jle
aas
sti
jp
nop
push
fisttp
sub
cdq
lahf
aad
retf
in
mov
pusha
lea
sbb
cmps
lock
inc
dec
call
pop
dec
sub
xor
dec
push
shl
retf
in
in
push
lods
test
mov
lock
daa
cmp
sti
cwde
mov
(bad)
enter
pop
in
sbb
sub
enter
xchg
mov
mov
movs
jne
int
into
out
scas
test
clc
std
cli
jnp
into
and
lock
cmp
js
dec
inc
and
and
aam
push
mov
cmp
inc
fs
jp
fst
sahf
int3
mov
sbb
adc
push
add
popa
fild
mov
mov
xchg
jg
add
pop
retf
mov
repz
push
push
fist
mul
and
xchg
mov
(bad)
or
sub
pop
call
lock
cld
movs
test
pushf
mov
mov
cwde
jns
and
out
ss
pop
std
stos
mov
outs
fidiv
fs
jnp
xor
add
inc
sbb
push
or
call
mov
repz
mov
push
pop
lahf
dec
xchg
cli
sbb
mov
retf
(bad)
jmp
es
or
ins
retf
dec
or
lahf
fmul
out
jp
cmp
scas
sub
push
sub
mov
dec
movs
iret
lahf
push
pop
stos
call
mov
ret
push
jne
jo
add
xchg
inc
mov
add
sbb
cmp
sub
fstp
jnp
cli
shl
lods
inc
fisub
adc
mov
inc
les
out
inc
daa
mov
sbb
(bad)
xlat
jno
sub
and
out
push
cmp
jo
mov
addr16
mov
es
push
sub
stos
scas
imul
cmp
popf
aad
jo
or
mov
rcl
mov
adc
pop
push
ins
movs
mov
fdiv
sub
ins
mov
leave
adc
push
mov
pusha
pop
(bad)
sub
cmps
stos
aad
cmps
cli
mov
xchg
pop
call
jne
fwait
sar
xor
addr16
jo
mov
test
bound
iret
xlat
push
jb
loope
lahf
or
sar
push
enter
and
call
inc
sbb
mov
or
pop
sbb
clc
adc
pop
mov
adc
sbb
sar
scas
sub
mov
add
ss
cmp
js
fcmovne
push
push
or
inc
pop
imul
test
cmp
add
aad
ficom
sub
loope
adc
dec
xor
nop
xor
cmp
stos
(bad)
lock
jne
inc
pop
xor
push
inc
out
dec
jmp
js
loope
push
inc
ins
xchg
(bad)
ss
fidivr
pop
in
bound
pushf
sahf
cmp
jge
adc
or
call
das
inc
jp
out
pushf
sub
sbb
int3
cmp
retf
popa
lods
inc
outs
mov
xchg
push
idiv
pop
push
jnp
cld
ss
inc
pop
add
push
xchg
mov
das
sub
popa
les
test
cmps
xchg
cmps
in
outs
cmps
in
imul
cmp
les
adc
dec
adc
mov
sbb
out
sub
mov
fs
(bad)
and
or
test
imul
shr
inc
rcr
pop
out
pop
lahf
push
sbb
repnz
xchg
in
add
mov
jno
mov
dec
cmps
ja
arpl
inc
mov
mov
sub
repz
daa
mov
shr
mov
pop
cmp
push
aaa
mov
push
aaa
mov
loope
mov
cmps
inc
lods
stos
rcl
scas
and
hlt
adc
iret
cdq
cmp
lahf
or
pop
pusha
das
or
push
dec
sub
jno
retf
add
sti
cmp
test
sub
rcl
pop
sahf
arpl
dec
push
and
jge
cmps
pop
jp
mov
sahf
mov
xchg
xor
pusha
pop
xchg
dec
repnz
pop
mov
dec
cdq
jo
scas
add
(bad)
sbb
pushf
fld
(bad)
addr16
mov
mov
xchg
cmp
aaa
dec
ja
xlat
mov
adc
lahf
add
xchg
and
jle
aaa
adc
jno
int
movs
rol
push
out
movs
push
push
(bad)
and
mov
ins
bound
mov
mov
fs
ins
mov
dec
in
ja
jne
popa
or
sbb
into
sbb
ficom
pop
xchg
mov
and
jl
ja
ss
loopne
bound
jge
jg
aad
sub
sbb
test
sbb
push
inc
(bad)
ror
xchg
sub
inc
in
add
mov
es
add
add
ins
pop
sti
rcr
mov
jo
jg
out
hlt
inc
push
and
lea
inc
lock
mov
rol
jg
pop
and
sub
repz
fwait
mov
popa
jbe
inc
add
in
aas
mov
add
out
aaa
sub
inc
lds
lods
pop
mov
inc
repnz
les
pop
ret
call
add
jg
sbb
mov
xor
not
pop
mov
rcl
jg
fsubr
mov
vpsubsb
cmp
fidivr
std
push
xchg
push
add
data16
add
inc
lea
or
retf
ins
mov
xor
and
dec
sub
cmp
nop
(bad)
or
leave
into
cmp
sti
cmc
popf
pause
push
sti
push
or
outs
stc
push
scas
loope
sbb
pop
mov
sub
rol
inc
sbb
jnp
push
pop
mov
add
inc
mov
pop
push
mov
adc
dec
jmp
dec
rol
adc
xor
shl
sbb
icebp
pusha
xor
mov
movs
adc
dec
pusha
pop
and
fwait
xor
cmps
scas
mul
int3
call
in
int3
arpl
fwait
data16
jle
dec
aam
push
ror
or
daa
out
rol
and
inc
aam
add
setg
or
push
(bad)
imul
jmp
icebp
(bad)
aam
lds
inc
xchg
xchg
rcl
stos
and
inc
and
add
or
cmp
nop
add
jnp
lods
add
out
adc
inc
cmp
mov
(bad)
cld
cmp
xor
or
sub
outs
jmp
mov
test
out
xchg
xchg
aas
ret
leave
imul
sbb
bound
xor
xor
sub
cmp
aam
stc
sbb
(bad)
mov
in
sub
pushf
nop
cmps
jbe
xchg
ja
lods
(bad)
movs
mov
xor
aad
loop
fstp
pop
add
pop
sti
jle
push
jmp
out
add
in
mov
in
loopne
adc
ret
mov
push
lahf
test
stos
int3
sbb
xlat
and
int
leave
mov
dec
push
cmp
pusha
sub
or
mov
fnstsw
sbb
repz
dec
sub
adc
in
lahf
and
cmovb
push
imul
push
(bad)
dec
mov
inc
test
inc
loopne
mov
loopne
sub
xchg
xor
or
cwde
test
sub
(bad)
popf
dec
pop
inc
push
imul
div
adc
add
pop
mov
mov
sub
daa
cmp
jns
fldcw
ja
xchg
push
aaa
jle
and
test
mov
xchg
jle
sahf
or
inc
sahf
mov
jmp
cwde
sbb
popf
je
push
mov
aaa
cmps
mov
mov
mov
in
or
mov
cmc
xor
xlat
popf
jge
sahf
test
or
in
xchg
jecxz
mov
lea
cld
cmc
sahf
mov
loopne
or
add
dec
sbb
(bad)
movs
push
mov
add
rcr
or
aam
(bad)
adc
gs
test
pop
mov
repnz
movs
adc
mov
mov
(bad)
adc
jne
xor
repnz
and
xchg
add
mov
jle
sub
push
xor
inc
or
inc
repz
fcom
add
loop
mov
mov
aas
sahf
jp
ficom
inc
stc
or
dec
pushf
and
popa
jecxz
je
fsubr
xchg
stos
hlt
movs
sbb
sbb
(bad)
or
jbe
and
daa
xor
or
cmc
leave
mov
in
xor
sub
sub
fs
lods
mov
loop
push
jge
adc
(bad)
aad
mov
movs
outs
cmps
out
popf
pop
lahf
xchg
mov
(bad)
lahf
addr16
jg
mov
push
push
or
and
retf
inc
std
out
xlat
xor
dec
enter
rol
xchg
dec
mov
mov
mov
imul
jge
in
(bad)
push
push
je
repz
cmp
fistp
ins
and
leave
stos
push
sbb
pop
cmp
mov
inc
inc
push
mov
or
sub
jne
mov
es
push
or
add
retf
pop
std
jp
cmp
aas
fcom
push
jmp
mov
out
add
std
inc
push
js
cmp
shl
enter
push
add
xlat
inc
xchg
fsub
add
stc
ret
mov
pop
dec
sbb
popf
sti
jecxz
int
add
jle
fcom
inc
dec
out
add
xchg
jae
cld
add
in
xor
std
retf
lds
adc
out
push
dec
es
jl
arpl
in
mov
outs
xor
mov
push
loope
and
inc
sahf
lods
inc
lods
(bad)
cmps
cmps
xchg
call
retf
jb
repnz
sub
xchg
sub
je
dec
dec
aas
(bad)
mov
sbb
jne
rol
mov
fiadd
push
dec
retf
add
push
mov
jmp
xchg
arpl
add
sub
push
cli
test
shr
or
jp
add
add
clc
sub
(bad)
mov
cmc
mov
int3
sub
(bad)
sub
jbe
gs
imul
das
mov
lods
pop
unpckhps
mov
jo
lahf
sbb
cmp
ret
add
adc
dec
out
push
popf
or
mov
or
lods
mov
jge
hlt
jg
inc
cli
jl
aaa
cli
push
xchg
ret
push
mov
cdq
call
mov
xchg
ins
scas
in
ja
push
js
arpl
ret
movs
outs
mov
movs
jmp
sub
scas
repnz
pop
ror
in
inc
push
mov
retf
and
mov
ss
jp
pop
jnp
inc
imul
and
mov
cs
sub
inc
arpl
shl
inc
rcl
retf
or
dec
jb
shl
sbb
cdq
out
sbb
popf
sub
jae
aam
ror
bound
pushf
xchg
idiv
pop
jp
into
mov
ds
rcr
and
popf
mov
dec
ret
mov
cli
cmps
cmp
adc
adc
call
inc
stos
mov
xor
inc
jmp
add
cmp
xchg
cmp
add
sub
jmp
xchg
jmp
jbe
retf
mov
outs
test
popf
sbb
mov
sbb
lods
cwde
inc
(bad)
shl
shl
push
or
ins
fsubrp
xor
pop
pop
sbb
mov
dec
lods
mov
push
nop
inc
xlat
cmp
jecxz
fdivr
adc
mov
test
add
retf
shl
mov
out
push
add
add
cmp
pop
test
cs
mov
adc
fdivr
xor
(bad)
je
adc
outs
sub
xor
mov
(bad)
fisttp
inc
stos
int3
jp
mov
adc
aaa
and
xor
daa
cmp
les
fsubr
nop
std
pop
loop
push
cdq
outs
aad
into
rol
inc
or
ss
xchg
mov
sti
scas
jl
mov
jns
inc
mov
lods
push
cmp
and
mov
push
mov
sub
xchg
cmp
or
loope
and
gs
sbb
retf
mov
mov
loop
mov
sbb
and
add
sbb
lods
lsl
inc
pop
xchg
adc
ss
add
jp
dec
rol
pop
jae
push
sub
jge
push
cmp
pop
mov
int
ror
mov
fst
cdq
push
add
sub
push
call
push
and
sbb
or
imul
sub
aam
sub
inc
and
mov
pop
aad
push
outs
mov
fucom
rcl
out
enter
jne
dec
cmp
jnp
mov
push
lods
mov
iret
dec
jg
test
mov
push
mov
daa
dec
imul
loopne
les
and
icebp
call
cwde
mov
or
add
sub
arpl
idiv
fdivp
cmp
sar
cdq
outs
sahf
pop
push
inc
jmp
sub
jbe
test
jno
mov
add
mov
fimul
push
pop
push
pop
sub
les
cmp
aam
sub
push
cmp
add
push
sahf
enter
or
imul
fisub
push
xor
inc
xchg
mov
push
jg
fs
push
jg
stos
inc
jg
mov
xchg
cli
movs
jge
add
das
and
int
fwait
pop
loopne
in
lds
xchg
ja
es
dec
call
fs
rcr
ror
test
(bad)
or
cmp
and
ja
dec
mov
or
add
jp
(bad)
xor
dec
add
inc
scas
adc
jmp
push
pushf
fcomip
ss
rol
mov
test
push
mov
xchg
or
xchg
adc
aad
stc
adc
test
sbb
cli
push
jmp
retf
lods
mov
sbb
inc
mov
in
scas
sahf
cli
loopne
mov
out
and
popf
jnp
out
mov
jecxz
mov
pushf
inc
bound
cld
pop
mov
stos
pop
adc
adc
repz
ss
cmps
out
sub
aas
pop
add
in
xor
mov
call
jmp
js
imul
mov
dec
rol
mov
add
(bad)
sbb
jae
jecxz
push
xchg
sub
push
scas
ins
loopne
outs
test
std
xchg
jmp
shl
inc
dec
ja
repnz
push
adc
pop
ret
xchg
or
cwde
ss
mov
jg
ror
in
inc
push
aas
stc
jb
frstor
push
bound
sbb
repnz
std
dec
(bad)
les
and
add
pop
and
push
int3
xchg
es
mov
push
add
push
sbb
and
jmp
sahf
ja
push
pop
push
cmp
mov
fstp
pop
push
outs
adc
sub
out
fdiv
inc
je
jmp
jecxz
xor
fnstsw
ins
jge
cmps
jo
xchg
imul
inc
test
(bad)
call
retf
aad
pop
inc
pusha
inc
in
jp
ds
repnz
shl
loop
cmp
es
out
pop
xchg
xor
js
adc
lea
pusha
pop
jb
ficom
cmp
outs
xor
lds
cmp
mov
loopne
jnp
push
daa
and
repz
pop
adc
inc
sar
mov
xchg
adc
fidiv
sbb
mov
cmp
lock
out
stos
add
(bad)
aaa
pop
outs
gs
pop
bnd
inc
out
ja
jnp
push
shr
inc
mov
cli
cmp
pop
mov
or
or
rcr
in
and
rcl
mov
daa
dec
mov
mov
mov
mov
fild
scas
fwait
jp
jb
cmps
cdq
movs
ds
jb
loop
ficomp
(bad)
movs
enter
push
cs
and
mov
in
out
sbb
jbe
sbb
es
jge
xchg
test
ja
psrld
jl
popa
push
leave
xor
dec
cld
pop
jns
mov
jae
sahf
fwait
add
lds
dec
das
pop
push
ret
ja
stos
sub
add
sbb
outs
cmp
cmps
xchg
mov
loope
neg
and
ds
mov
mov
js
test
cmp
div
aad
int3
push
or
push
sbb
daa
sub
mov
(bad)
icebp
mov
inc
sub
fsubrp
sbb
cmp
scas
xor
mov
shl
mov
xchg
mov
and
xor
dec
jmp
mov
mov
sbb
fimul
stc
stos
mov
jae
add
push
test
add
adc
pop
mov
mov
ds
sbb
shrd
sar
mov
imul
mov
lahf
jne
xchg
mov
pop
adc
call
mov
fld
inc
(bad)
stc
into
mov
in
sub
xchg
in
add
jmp
push
movs
xchg
cdq
test
imul
inc
mov
aas
dec
mov
jb
ins
sbb
stc
clc
sar
ret
pop
jo
aam
or
fwait
pop
sub
sub
cmpps
out
nop
adc
(bad)
les
into
jne
mov
pop
lods
jo
inc
mov
xlat
je
loop
lahf
push
xor
inc
mov
das
sub
add
mov
push
sub
xchg
xlat
add
shl
jmp
and
or
inc
mov
out
test
retf
dec
pop
dec
loope
xor
out
and
cmps
cld
pop
(bad)
cmp
inc
add
mov
cld
lock
in
add
sub
push
lods
add
inc
out
lea
enter
push
cmp
jmp
and
mov
not
dec
push
ret
fld
cdq
inc
sbb
cmps
cmp
push
les
loop
jnp
xchg
pop
push
xchg
lods
or
into
rol
add
xchg
or
jp
mov
fnsave
popf
lea
aam
das
daa
mov
add
pop
inc
aas
jl
jmp
sbb
dec
mov
jl
out
outs
add
ret
jbe
and
mov
or
xor
rol
push
adc
jno
cmps
mov
cmp
xor
mov
(bad)
jmp
sbb
mov
int3
aaa
test
sub
cmps
and
dec
ret
add
mov
adc
icebp
and
cmps
push
aad
lods
cs
imul
jbe
je
mov
mov
dec
test
xor
cmc
fsubr
ds
jl
fisttp
outs
adc
xchg
xor
add
xchg
pop
(bad)
jns
lds
mov
hlt
mov
sub
cmc
hlt
scas
call
sbb
(bad)
pop
or
inc
and
sbb
lea
add
fcmovnb
sbb
inc
repnz
cmps
nop
add
imul
jnp
adc
cmp
adc
sbb
movs
mov
jp
xchg
std
mov
loope
stc
inc
push
mov
fldenv
adc
adc
sbb
mov
xchg
push
ss
in
jp
(bad)
and
leave
mov
dec
pop
xor
sahf
loop
pushf
mov
mov
fimul
cli
in
inc
dec
sub
or
mov
jmp
xor
sub
xor
mov
das
inc
mov
mov
jp
jo
stos
mov
mov
mov
fild
inc
mov
sub
pusha
cmp
loopne
push
sbb
aam
out
ret
out
ds
rcr
sbb
push
ficomp
mov
fxch
and
out
pop
xchg
ret
mov
sbb
xlat
(bad)
jne
push
loope
inc
gs
mov
imul
cli
ror
cmp
or
popf
test
sti
aam
jb
aas
jne
jno
mov
pushf
into
fild
loop
jbe
jle
sbb
in
mov
(bad)
sti
sbb
inc
(bad)
lds
inc
xchg
cmps
dec
cmp
jmp
pop
les
ret
sti
int
ror
dec
push
ins
pusha
add
ins
loope
arpl
sbb
int3
movs
rcl
push
sub
scas
cmc
cmp
fbstp
xchg
lds
rol
dec
movs
and
(bad)
pop
rcr
dec
inc
out
push
ss
fdiv
ret
call
rol
inc
pop
iret
mov
push
(bad)
or
and
push
push
in
pop
js
jo
iret
loope
adc
dec
popf
clc
xchg
loope
mov
dec
call
or
or
out
sbb
sub
push
fcomp
push
inc
(bad)
fimul
push
cmp
mov
add
xchg
call
out
stos
xchg
add
in
mov
cmp
and
rol
(bad)
mov
and
outs
loop
xor
xchg
jl
ds
inc
(bad)
fnstenv
dec
sbb
pop
add
(bad)
pop
in
cmp
in
or
push
xchg
xchg
movs
mov
sub
pop
cld
adc
xchg
popf
pushf
dec
ss
add
dec
push
leave
sbb
cli
leave
stos
and
jbe
test
fist
push
mov
sbb
cmps
popf
inc
test
jl
ins
popa
cli
inc
cmp
cmp
icebp
cmps
mov
xchg
add
pop
push
cmp
mov
cmp
add
inc
inc
test
shl
pop
cmps
aad
mov
in
push
mov
std
xchg
aam
mov
pop
cmp
ja
push
mov
out
and
mov
movs
pop
ror
mov
add
xor
xlat
dec
add
rol
popf
push
jg
mov
mov
xor
or
pop
push
push
ret
pop
add
xor
in
jge
adc
add
sub
push
(bad)
jle
or
mov
out
popa
mov
and
cmp
mov
and
xchg
sahf
mov
xor
mov
push
xchg
popa
jns
ja
sub
leave
sbb
xor
jno
aad
ja
push
outs
push
or
(bad)
xor
mov
xor
scas
or
js
loopne
shr
mov
(bad)
in
pop
dec
pop
adc
ss
out
das
cmps
in
ds
pop
lahf
dec
por
mov
out
mov
test
lods
mov
aad
repnz
(bad)
inc
mov
ins
pop
and
sub
pop
jo
mov
int3
scas
adc
out
push
aad
cmp
cmp
cld
push
pushf
push
mov
mov
lods
enter
xchg
hlt
popa
xchg
je
repnz
jne
adc
inc
mov
adc
jg
pop
aaa
xor
dec
jbe
sti
ja
jle
js
fstp
push
jns
sar
adc
add
jno
jmp
jl
out
mov
cld
call
adc
lock
jge
sub
fnsave
xchg
scas
inc
fwait
popa
cmp
arpl
dec
repz
(bad)
cs
sbb
hlt
repnz
cli
lahf
xchg
ficom
rcl
xor
cmps
adc
in
and
mov
mov
or
mov
lods
test
push
cmp
mov
cmp
lahf
cmc
push
mov
jp
ins
shl
data16
cs
inc
cmp
xor
inc
adc
or
call
mov
retf
repnz
(bad)
call
test
mov
shl
or
outs
fidiv
retf
cmp
ror
popf
in
shl
cmp
addr16
movs
mov
imul
test
xchg
out
loope
sahf
and
sbb
mov
repz
lods
dec
sbb
dec
pop
mov
into
jns
mov
sub
push
mov
iret
out
jbe
adc
(bad)
ins
sub
daa
add
inc
push
rcr
xor
xchg
out
jmp
xchg
(bad)
mov
test
outs
repnz
scas
pop
xchg
and
iret
fcomp
lods
mov
push
xchg
test
jb
fsubr
or
jg
and
gs
inc
mov
pop
les
(bad)
xchg
enter
in
adc
cmps
xor
scas
imul
xor
scas
mov
mov
mov
(bad)
and
xor
repnz
test
in
adc
jne
movs
sar
jo
add
imul
xchg
loopne
mov
add
mov
xor
mov
out
sbb
les
call
cdq
in
adc
push
adc
int
jae
or
inc
dec
pusha
sar
out
scas
lds
add
aam
outs
and
xor
jmp
jne
je
mov
xor
call
leave
movs
stc
xchg
cmp
or
xchg
jne
addr16
out
add
push
push
add
imul
mov
mov
(bad)
loopne
xchg
cmp
sti
outs
mov
push
ja
cmp
dec
mov
cmp
inc
push
and
sbb
xlat
mov
mov
jp
ja
add
xor
sbb
sbb
fist
push
stc
sub
out
out
add
sub
loope
inc
jg
xchg
xchg
movs
out
push
xchg
cwde
push
mov
cli
and
push
or
or
(bad)
sbb
pop
add
push
mov
dec
scas
hlt
enter
mov
loopne
mov
sbb
adc
mov
sub
aad
in
adc
xor
imul
jbe
cmc
js
jmp
sbb
pop
add
jo
xchg
mov
sub
stc
daa
pop
push
aam
mov
inc
cmp
in
lods
in
pop
xor
std
icebp
call
in
push
lahf
in
ds
xchg
sbb
sbb
loope
mov
mov
int
cld
mov
cli
(bad)
pop
or
xchg
in
cmp
jno
in
push
adc
fdivp
in
in
enter
aaa
arpl
adc
mov
cs
pop
call
mov
jo
add
xor
out
inc
ret
ret
clc
sub
push
in
mov
je
ins
sub
scas
sub
jle
fistp
shr
xchg
retf
push
xor
jge
mov
popa
pop
in
iret
retf
cmp
inc
xchg
cmp
xor
or
sti
mov
test
mov
add
ror
xchg
lahf
mov
mov
out
mov
repz
adc
out
xor
push
loope
fiadd
(bad)
push
in
(bad)
out
cmp
jae
xor
outs
outs
cmp
sti
das
adc
sbb
imul
int
dec
xchg
movs
cmp
pop
clc
mov
retf
out
les
fisubr
das
les
inc
out
cmp
inc
fstp
mov
xchg
out
pop
cmp
xor
cld
push
ret
xor
xor
xchg
xchg
jp
inc
dec
jl
fadd
push
jecxz
xor
pop
js
pop
shl
sub
pop
mov
or
xchg
icebp
movs
lods
mov
mov
ret
daa
arpl
shr
and
hlt
pop
icebp
inc
mov
and
push
fstp
mov
test
std
jns
add
xchg
push
adc
popa
mov
shl
aas
jae
mov
popa
jae
repz
cld
cmp
rol
add
aaa
test
inc
and
mov
push
mov
cmp
stos
fcos
aam
mov
(bad)
fimul
pop
imul
dec
(bad)
mov
clc
mov
jne
outs
xor
push
in
rol
or
(bad)
adc
push
(bad)
mov
mov
je
mov
inc
sub
cs
fld
mov
sahf
sbb
outs
push
(bad)
frstor
popa
mov
out
inc
fsub
call
in
sbb
int3
add
stos
jbe
(bad)
inc
jp
mov
cmps
daa
xchg
sbb
dec
fld
pop
sbb
out
jmp
sub
in
xchg
dec
dec
cld
retf
test
outs
hlt
xchg
add
out
xchg
idiv
push
xchg
mov
add
add
inc
or
and
sti
jmp
jg
push
or
in
sbb
mov
rol
out
mov
dec
sub
xor
sub
pop
aad
xlat
je
mov
mov
dec
mov
(bad)
jno
movs
cmp
out
xlat
leave
pop
iret
movs
cli
cmps
lods
dec
jg
addr16
push
sbb
fmul
loope
sar
mov
dec
lahf
jae
sti
and
jmp
pop
cmovno
test
pop
outs
(bad)
les
adc
in
fsubp
push
inc
jge
push
jge
fidiv
repz
mov
aaa
sub
cmp
dec
pop
push
es
push
(bad)
mov
arpl
leave
mov
add
mov
std
adc
mov
mov
push
push
cmp
test
adc
pushf
dec
lods
adc
adc
push
inc
dec
adc
in
in
sbb
or
clc
sti
jecxz
adc
int
mov
gs
xchg
(bad)
cmp
sbb
and
sbb
(bad)
mov
ins
data16
sbb
sub
repz
cmp
leave
cmp
cmp
es
je
xchg
cmp
mov
xchg
ja
push
pop
imul
cld
(bad)
sahf
add
sbb
(bad)
out
adc
cwde
test
cwde
xchg
inc
inc
mov
jbe
add
cmp
pop
push
dec
stc
mov
push
into
jns
arpl
lahf
mov
into
das
in
out
dec
std
mov
or
hlt
lea
add
test
in
or
(bad)
shl
xor
push
cdq
dec
out
xchg
outs
das
xchg
xlat
fdiv
das
ds
pop
je
pop
out
test
inc
enter
inc
(bad)
ds
ss
cmp
mov
push
ret
pop
xor
nop
mov
out
add
(bad)
pop
sub
or
add
(bad)
(bad)
and
push
push
cmovle
sub
aas
xchg
mov
dec
push
inc
push
jp
mov
adc
mov
adc
cmp
retf
lahf
add
adc
pop
test
push
test
fdivr
push
jb
jp
push
xchg
cmc
aas
cmps
call
or
xchg
mov
pop
sub
int
retf
sub
sub
scas
dec
out
sub
cmp
out
repnz
cmp
pop
mov
pop
(bad)
int3
sbb
mov
sub
and
mov
push
stos
cmp
jns
shr
and
push
sbb
cmp
dec
pop
mov
or
(bad)
clc
ror
icebp
cmp
fsubr
mov
sbb
fimul
sbb
push
ficom
test
xor
and
pop
xchg
xor
mov
or
jne
data16
push
xor
int
xchg
cmp
jecxz
mov
jns
mov
jbe
and
out
adc
mov
test
aaa
add
inc
js
mov
xlat
data16
or
icebp
pop
jo
mov
loopne
dec
(bad)
mov
loopne
pop
sub
out
outs
retf
call
dec
cld
jge
stos
imul
idiv
jnp
repz
lods
pop
jle
add
adc
ins
mul
and
in
inc
inc
and
into
out
sbb
add
mov
xchg
push
leave
js
mov
mov
adc
dec
sub
ret
pop
jecxz
fisubr
popf
shl
aas
add
hlt
out
jmp
mov
rcr
dec
call
or
(bad)
jp
test
jae
(bad)
push
iret
mov
mov
icebp
inc
push
jmp
inc
popf
xchg
gs
lods
add
sub
lock
mov
sbb
jae
mov
rol
cmp
stos
xor
into
pop
inc
push
mov
dec
mov
push
repz
cld
ins
aad
jnp
adc
in
(bad)
iret
lds
mov
sbb
mov
mov
(bad)
scas
(bad)
push
xchg
jl
xchg
mov
sbb
sahf
xchg
mov
adc
push
fwait
clc
sbb
rol
call
daa
rcl
adc
sbb
mov
sbb
(bad)
inc
aaa
inc
or
jmp
repz
cmp
movs
mov
or
idiv
nop
adc
scas
scas
int
es
hlt
mov
sub
out
add
loope
ret
mov
ss
lods
pushf
retf
push
cmp
pop
fild
test
stos
ins
jo
(bad)
cli
neg
or
mov
cmp
or
push
mov
inc
mov
ficomp
cmp
lods
cli
sti
movups
xor
rcl
add
add
hlt
ins
adc
scas
outs
inc
std
call
in
push
ficomp
aas
mov
adc
jbe
pushf
mov
in
mov
hlt
sub
jno
jl
imul
ret
or
push
cmps
sub
mov
mov
xchg
sub
jns
jmp
inc
fs
loopne
popf
je
mov
mov
sbb
jmp
movs
sar
sub
xchg
rol
loopne
push
xchg
cmps
mov
(bad)
sbb
push
push
mov
lea
ss
dec
xor
inc
jb
faddp
stos
clc
mov
gs
add
loop
and
int3
leave
adc
jo
adc
or
dec
sbb
mov
jno
push
leave
dec
fisubr
mov
mov
push
mov
xor
cli
sub
arpl
stos
dec
popa
imul
push
bound
xchg
outs
sbb
fst
push
cwde
pop
cmp
adc
or
jbe
push
xchg
clc
pushf
idiv
cmps
fstp
inc
clc
cmps
stc
mov
(bad)
out
push
mov
mov
xor
and
popf
das
not
fimul
sbb
dec
xor
sets
jmp
loop
ret
leave
and
mov
test
mov
shl
xor
(bad)
mov
mov
retf
ins
xor
pop
push
(bad)
mov
inc
js
dec
daa
or
push
pop
dec
pushf
or
mov
ja
fbld
sbb
push
jno
outs
inc
in
pop
out
cwde
pop
sub
inc
adc
cwde
and
out
dec
shr
ror
inc
stos
inc
jmp
inc
retf
arpl
popa
mov
leave
call
dec
bsf
xchg
or
mov
retf
and
fnstsw
push
or
leave
jbe
mov
jp
add
repnz
popf
shl
call
std
add
test
inc
ret
into
jge
jp
inc
es
fcom
push
xchg
sub
pop
adc
movs
mov
pushf
sti
sub
pusha
xchg
and
dec
out
add
add
imul
sbb
and
push
ret
addr16
jae
push
mov
retf
mov
ss
(bad)
into
addr16
jo
ins
cld
xchg
fidivr
lds
leave
mov
ffreep
fdivr
int3
rcl
jmp
addr16
loopne
lods
(bad)
in
ss
cwde
xchg
ja
push
cmp
push
cmp
pop
in
out
out
mov
add
(bad)
pop
push
aaa
shl
adc
cld
mov
shr
shl
aad
xor
mov
mov
xchg
scas
mov
pop
mov
test
call
les
arpl
sbb
nop
and
inc
and
pop
add
push
shr
fld
sbb
ja
jbe
movs
das
and
sub
xchg
sub
sub
sub
lods
push
fsubr
xchg
jbe
(bad)
pop
and
push
call
popf
push
(bad)
mov
adc
cmps
enter
add
lea
inc
jmp
(bad)
call
mov
pop
ret
out
ja
xlat
cmps
mov
mov
loope
dec
sti
dec
inc
and
sbb
jecxz
mov
xchg
push
xor
or
out
call
pop
inc
out
in
inc
mov
mov
adc
jns
mov
jns
ror
mov
pop
shl
jge
test
add
cdq
inc
dec
push
or
mov
cmp
mov
add
(bad)
bound
jb
loop
std
xor
outs
test
test
jo
inc
add
xchg
rcr
mov
cmp
(bad)
jns
pop
add
push
sbb
and
fwait
call
mov
int
inc
xchg
les
push
mov
pusha
sbb
xor
adc
aaa
mov
sbb
or
jl
jmp
jbe
jbe
dec
xor
xor
push
mov
rol
mov
cmps
je
sbb
aaa
jge
lahf
mov
cmps
je
mov
sub
or
and
das
jg
mov
retf
xchg
mov
xor
push
fst
xor
mov
fucomp
inc
xchg
in
pand
les
sub
sub
fwait
cmp
cmp
ins
ss
pusha
jecxz
ins
(bad)
cdq
mov
xchg
and
jmp
test
aad
fdiv
add
and
push
aam
dec
std
push
inc
int
jnp
addr16
dec
push
jae
add
das
jmp
fdiv
sti
stos
cmp
ja
xor
out
fiadd
hlt
add
and
or
popf
jb
sbb
inc
push
mov
sub
add
lods
xor
xchg
jge
repnz
ret
jno
cmp
xchg
sub
jg
jmp
sub
jle
das
test
xlat
inc
xchg
inc
mov
or
push
inc
push
in
mov
int
cmp
dec
jecxz
lea
jecxz
aam
or
pop
aad
lea
mov
cmp
repz
mov
xor
lods
in
pop
mov
dec
xchg
sbb
xchg
cmp
arpl
fld
sub
mov
cmp
jae
xchg
dec
add
aaa
rcl
xchg
inc
or
loopne
daa
mov
(bad)
enter
xchg
ins
xchg
mov
hlt
mov
test
mov
dec
mov
and
pusha
fadd
popf
fwait
ins
lahf
addr16
leave
xor
call
pusha
mov
mov
movs
add
mov
cmc
shl
pop
dec
js
pusha
in
or
popf
call
or
sub
xchg
repnz
push
icebp
fsub
jnp
push
jne
(bad)
push
cmc
push
adc
mov
test
call
dec
pop
and
and
mov
std
(bad)
pop
jno
popa
or
sahf
add
xchg
in
add
imul
pop
push
in
sub
cmp
and
pop
push
loop
not
fbld
mul
adc
pop
fcmove
int3
popf
jae
sbb
xchg
lds
mov
and
cmp
out
lds
dec
mov
mov
sub
or
test
ins
or
fistp
or
sbb
(bad)
fimul
cmp
lods
sub
mov
and
add
lahf
fidivr
shl
rol
fisubr
push
lahf
or
inc
xor
dec
push
aad
and
dec
gs
(bad)
jbe
popf
hlt
xchg
pop
clc
test
add
push
jae
lods
ja
add
adc
mov
enter
or
and
sub
pop
cmps
je
stc
add
cli
lds
cmps
push
xchg
mov
fcomp
out
jle
xor
cmp
sti
clc
adc
dec
(bad)
mov
xchg
rcr
lea
ficom
retf
ins
push
mov
gs
cmp
out
pop
push
mov
cmp
cwde
mov
add
and
mov
aas
pop
inc
sbb
push
call
aas
stos
pop
ret
push
xchg
std
sub
or
in
xor
dec
les
jbe
push
push
int
mov
sub
inc
jno
lds
cmp
aas
lds
dec
jecxz
lea
pop
jnp
in
rol
add
mov
jae
pop
(bad)
loope
div
je
mov
jge
or
es
lods
push
xchg
fsub
test
mov
mov
push
sbb
fstp
mov
sahf
inc
or
cmp
pop
popf
ss
adc
ds
and
pusha
in
inc
leave
cmps
ins
mov
adc
add
pop
xor
pop
sub
jg
mov
xchg
nop
lahf
push
lods
mov
sub
xchg
stc
(bad)
pop
outs
stos
pop
dec
aaa
aaa
jp
mov
aad
jmp
retf
xor
add
xchg
pop
scas
rcl
xchg
xor
xchg
fld
and
xchg
mov
fdiv
into
movs
mov
jo
adc
dec
add
loopne
xchg
mov
add
rol
fld
xchg
or
cmp
pop
mov
jmp
mov
push
add
sub
push
sbb
mov
mov
dec
add
adc
mov
jo
movs
call
shl
icebp
dec
sub
es
jns
xor
stc
mov
(bad)
xor
int3
push
dec
dec
out
test
xchg
cmp
imul
ret
mov
ret
pusha
lods
fimul
fmul
and
(bad)
jp
add
cmp
xchg
dec
pop
mov
(bad)
push
add
cld
(bad)
jmp
js
push
push
(bad)
push
or
push
aam
aaa
xchg
retf
xchg
dec
fdiv
push
xor
sub
dec
add
cs
loopne
cs
dec
nop
dec
add
(bad)
daa
dec
push
scas
jecxz
in
jmp
and
(bad)
jmp
inc
data16
gs
test
and
in
bound
jbe
cs
push
fcmovbe
mov
mov
sbb
shr
fsubr
lods
mov
out
jo
xchg
scas
lods
cld
inc
sbb
adc
mov
iret
dec
xor
pop
leave
or
in
pop
xchg
lahf
in
ret
or
icebp
jmp
dec
xor
shl
call
int
xor
xor
addr16
and
add
push
popa
pop
pop
int3
adc
data16
jne
jb
add
ss
xor
jne
jae
mov
fwait
mov
jb
mov
clc
lds
dec
test
xchg
mov
hlt
or
not
lods
xchg
int
adc
es
ret
out
mov
movs
cmovs
ins
jno
xor
cli
pop
mov
arpl
mov
push
in
lahf
pop
dec
jmp
aad
scas
add
mov
faddp
fwait
dec
cmp
and
lea
push
ja
scas
xchg
cmp
mov
cwde
test
test
and
push
mov
xchg
sub
add
pop
je
test
mov
inc
test
add
mov
(bad)
sub
jb
pop
nop
not
jg
in
sbb
pushf
fwait
into
push
int3
int3
jecxz
inc
mov
push
adc
repz
ja
or
inc
jns
int3
dec
call
(bad)
jg
shr
sbb
push
das
sub
sbb
jmp
sub
push
fimul
sbb
mov
aad
gs
cmp
std
fwait
push
repnz
adc
mov
xchg
xchg
repz
inc
cmp
and
xchg
adc
sub
out
leave
and
and
pop
stc
and
push
sub
adc
pop
push
sbb
daa
test
stc
mov
outs
jno
repz
lods
ins
jmp
xor
test
stos
and
icebp
lds
fisub
lds
mov
pusha
dec
cs
pop
in
and
pushf
nop
sbb
jl
clc
xchg
mov
stc
lods
sar
lods
pop
movs
lock
or
jl
(bad)
leave
into
mov
sbb
sub
scas
inc
fimul
lock
mov
jo
mov
daa
scas
sbb
scas
das
sar
in
les
jg
shl
jnp
xor
jmp
pusha
mov
fistp
repnz
jle
div
jo
push
test
mov
test
pop
and
jp
sub
arpl
sub
iret
fwait
jle
xchg
jecxz
clc
sub
fldlg2
mov
int
pop
xor
outs
sbb
and
or
sar
pusha
cmp
lea
cmps
add
repz
and
sahf
mov
add
dec
ja
lea
push
pushf
outs
xchg
mov
outs
xor
pop
jbe
popf
test
xor
pop
or
je
ins
push
push
sar
enter
sbb
xor
inc
icebp
test
mov
jmp
enter
sub
retf
adc
mov
cmc
cmc
pop
and
pushf
adc
or
push
scas
popa
fmul
sub
pop
ror
jp
in
into
dec
bound
push
dec
popf
push
sub
sub
push
inc
or
xchg
mov
dec
xchg
xlat
mov
(bad)
push
sbb
cmp
jle
cmp
inc
or
jecxz
hlt
jae
cmp
outs
(bad)
(bad)
mov
xor
pop
hlt
call
popfw
jnp
outs
xchg
loopne
aam
dec
push
mov
inc
push
stos
popf
not
or
(bad)
jmp
xchg
mov
xor
add
std
nop
mov
jnp
je
xchg
sub
xchg
or
sub
xor
aam
shl
jb
sti
mov
inc
pop
push
pop
sbb
jge
pop
icebp
lods
and
rol
pop
adc
mov
popa
das
mov
ins
mov
pop
dec
mov
xor
data16
dec
cli
jl
fcom
sar
js
pop
scas
mov
xor
xor
add
aaa
pop
(bad)
mov
inc
jne
pusha
jecxz
jne
jg
into
aam
call
mov
xor
enter
xchg
fisub
js
adc
xchg
xchg
or
retf
imul
ror
xor
ds
dec
inc
fsubr
mov
xchg
push
adc
add
arpl
push
ret
pop
pushf
repz
jmp
inc
xor
xor
ret
push
pushf
jo
cmps
or
jne
xchg
div
and
mov
sub
pusha
in
js
imul
into
add
mov
mov
add
xor
sahf
add
ins
imul
stos
xor
lock
mov
lahf
sti
adc
inc
mov
inc
std
add
bound
fucomip
and
out
dec
jae
pop
repz
outs
clc
shr
cli
movs
scas
ss
push
inc
xor
cs
cmc
mov
ret
in
jg
addr16
test
add
or
adc
add
enter
iret
addr16
out
pop
pop
cmp
lds
adc
sbb
bound
out
cs
dec
mov
mov
cwde
(bad)
push
into
in
xchg
jecxz
dec
loop
dec
hlt
fistp
bound
push
cmp
dec
fisub
int3
mov
lds
push
lea
std
xlat
dec
mov
mov
bound
xchg
xor
outs
jbe
das
cdq
add
movs
rol
(bad)
in
nop
push
jg
jns
inc
out
mov
out
pop
mov
cwde
xor
outs
mov
mov
push
std
mov
xchg
daa
sub
faddp
mov
ret
jge
push
sub
sbb
(bad)
and
push
and
jle
into
call
mov
sub
mov
push
mov
push
movs
lods
outs
pop
je
mov
aad
dec
into
int
xor
mov
pop
es
sub
movs
(bad)
lods
sbb
ds
loope
stos
clc
ins
mov
mov
pop
sbb
add
add
mov
sub
imul
push
(bad)
addr16
xlat
pop
ins
imul
push
jbe
int
mov
or
test
outs
pop
mov
cld
cmp
stos
dec
xchg
js
(bad)
in
cmc
jne
adc
cmps
cmps
mov
and
sahf
into
daa
lahf
lea
imul
(bad)
pop
test
rol
xlat
int
lods
push
cmp
add
daa
shl
sbb
lods
or
fstp
mov
mov
daa
daa
adc
stos
arpl
mov
xchg
push
jo
and
fiadd
mov
xor
push
jb
jmp
imul
inc
or
fld
jne
(bad)
out
loop
cmp
test
adc
les
cdq
dec
rol
je
mov
sbb
sar
adc
popf
mov
mov
sub
jae
repz
pop
mov
mov
icebp
cs
sub
fist
adc
outs
adc
or
or
adc
dec
fidivr
add
mov
mov
mov
popf
mov
adc
sbb
xchg
inc
mov
cli
in
mov
into
cmp
pop
inc
inc
push
ret
mov
retf
cmp
pop
push
push
mov
push
xchg
test
dec
add
mov
inc
jae
pop
pushf
call
repz
pusha
ss
push
ins
ins
movs
in
add
inc
pusha
out
imul
je
sub
pop
jns
hlt
popa
ja
(bad)
and
cmp
and
outs
movs
mov
inc
pop
pop
adc
sbb
out
cmp
test
(bad)
mov
inc
ret
sub
and
or
jne
push
in
mov
xor
and
lods
mov
xchg
mov
sar
ret
mov
push
adc
out
inc
mov
je
mov
inc
leave
stos
stc
data16
inc
repnz
call
clc
dec
shl
jp
mov
sbb
mov
mov
(bad)
cli
inc
sub
int3
loop
or
push
test
mov
mov
pop
into
xchg
retf
pop
ss
add
jbe
mov
dec
jno
aad
outs
sub
(bad)
and
dec
loop
lock
dec
jl
ret
mov
fistp
add
in
dec
sbb
sbb
hlt
xor
sbb
test
addr16
out
cmc
cdq
fmul
jecxz
inc
xor
sbb
scas
sub
sti
or
pusha
into
or
mov
jmp
imul
dec
sbb
jmp
xchg
repz
lods
mov
das
ss
cmp
mov
lods
loope
imul
jns
dec
mov
sahf
mov
fsub
shl
loopne
sbb
mov
mov
shr
pop
das
stos
call
mov
(bad)
mov
in
out
repz
stos
jo
and
xchg
xchg
mov
fiadd
mov
or
lods
(bad)
mov
lea
mov
mov
mov
int
mov
loope
xchg
cmp
adc
pop
lock
cs
rcr
ins
jo
int3
bt
stc
in
aaa
xor
into
outs
pushf
xor
nop
xchg
xor
xchg
sbb
dec
int3
repz
out
xchg
ins
fdiv
add
shr
push
xor
mov
(bad)
sbb
mov
test
iret
dec
mov
cmps
and
call
test
dec
into
add
sbb
shl
and
sar
and
adc
push
xchg
sbb
mov
test
sub
pop
jmp
cmp
adc
sub
leave
pop
repnz
fisub
jmp
dec
daa
outs
aad
mov
dec
(bad)
push
pop
sbb
jae
xchg
ins
add
loopne
or
mov
loope
xchg
inc
adc
inc
adc
aas
repz
stos
pop
pop
pop
jecxz
and
lahf
xor
ds
das
scas
sub
adc
push
jge
sub
mov
xor
or
dec
jns
cmp
xor
xchg
repnz
pop
shr
xchg
cmps
or
xlat
pop
adc
push
xor
lahf
daa
adc
xor
les
or
es
xor
in
ins
in
into
out
inc
or
lds
(bad)
mov
xor
sbb
pusha
ret
loope
xchg
(bad)
int
xchg
test
pusha
pushaw
fstp
lods
outs
jae
or
dec
pop
outs
mov
add
xchg
dec
dec
ror
outs
iret
pop
cmc
test
mov
sub
jle
mov
ins
les
xor
add
fsubr
sbb
data16
je
pop
fldlg2
or
mov
and
push
nop
dec
stos
ins
xchg
adc
ja
mov
sub
(bad)
cmp
jecxz
arpl
ret
jle
int
out
imul
dec
sub
add
xor
shl
lahf
fisub
lds
push
add
pop
xlat
pop
ret
or
imul
(bad)
scas
inc
hlt
mov
xchg
mov
or
sbb
lock
pop
cmp
ror
ret
pop
loop
je
push
(bad)
dec
pushf
cmp
shr
fcomp
repnz
std
xchg
mov
(bad)
sbb
mov
xor
push
cmp
mov
sbb
mov
mov
aas
push
loope
xor
and
vmovdqa
cmp
add
ret
jp
mov
retf
mov
xor
or
adc
dec
push
stc
or
dec
scas
mov
add
into
pop
fprem1
in
je
mov
mov
adc
ja
or
or
jno
xor
add
cmc
bound
fs
fld
xchg
fist
scas
mov
int
pop
or
xchg
mov
push
mov
adc
pop
cmp
(bad)
lea
out
pop
test
rol
xchg
mov
cmps
cmp
sbb
dec
adc
cdq
inc
cmp
dec
or
jb
dec
pusha
mov
xchg
sbb
(bad)
int3
push
xor
je
push
repnz
test
repnz
pop
rol
mov
call
inc
popf
sbb
dec
xor
jnp
mov
out
dec
dec
xchg
leave
cs
scas
and
fucom
hlt
xor
and
out
and
pop
(bad)
btr
aas
stos
leave
retf
mov
inc
ins
jmp
inc
fisttp
dec
in
and
sbb
xchg
adc
xor
imul
push
pusha
mov
retf
je
mov
adc
ret
repnz
dec
fstp
ret
fnsave
test
pop
xor
nop
mov
xor
adc
dec
adc
int3
leave
xchg
xor
mov
jecxz
(bad)
xchg
or
sbb
sbb
mov
or
stos
mov
sub
dec
or
xchg
es
test
retf
call
scas
loop
loop
movs
push
mov
dec
cwde
js
push
bound
and
xor
ds
add
pushf
mov
dec
and
add
mov
call
and
(bad)
fdivr
ins
sti
bound
shl
jmp
jecxz
jg
not
(bad)
push
mov
fst
and
pop
sbb
push
loope
or
mov
adc
mov
std
ss
pop
pop
push
fcmove
add
or
sub
pop
outs
jg
xchg
adc
sbb
mov
dec
cmp
pop
cmc
mov
inc
sub
cmps
pop
popa
push
addr16
je
inc
aaa
dec
add
je
bound
test
stos
xor
dec
mov
push
repz
cmps
mov
hlt
xor
or
movs
jo
cmp
leave
clc
ret
call
(bad)
shr
push
das
loop
es
jne
sbb
(bad)
jmp
dec
xchg
pop
jmp
jnp
mov
les
in
sar
xchg
adc
adc
fild
(bad)
cmps
dec
push
movs
mov
adc
push
mov
inc
ins
jb
gs
inc
jno
sbb
dec
adc
sub
arpl
leave
xor
lock
push
inc
fiadd
bound
test
aad
inc
popf
jnp
sub
inc
or
inc
pusha
adc
mov
sub
jecxz
aaa
xchg
fcomp
push
pop
ins
or
fwait
pop
pop
push
fnsave
shr
addr16
iret
ds
inc
mov
popf
fistp
xchg
pop
test
iret
out
lods
jb
xchg
or
mov
inc
push
aad
xchg
aad
sahf
clc
sbb
repnz
jmp
fnsave
xor
iret
push
adc
dec
imul
pop
pop
dec
xchg
sub
leave
xchg
mov
push
fsubr
(bad)
enter
ins
outs
in
xchg
ret
lds
cld
ins
repz
add
cmps
mov
push
push
fdiv
mov
cmp
sub
aad
lahf
sub
xlat
mov
mov
lea
dec
call
gs
icebp
mov
and
and
xor
pop
inc
cmp
(bad)
jbe
(bad)
add
or
xchg
sub
xor
and
les
jmp
jmp
cmp
pop
sar
jecxz
and
aaa
mov
shr
into
ret
(bad)
loop
outs
test
int
test
cld
push
stc
pop
xchg
clc
mov
out
jmp
shl
pusha
dec
xchg
frstor
adc
sub
scas
add
xchg
inc
xchg
scas
xchg
or
jno
aas
mov
or
fs
dec
test
push
shl
sbb
xchg
xchg
push
ret
ja
adc
fistp
mov
push
ret
cmp
leave
sub
mov
mov
jno
and
lods
jp
lahf
mov
repz
inc
push
cld
cmp
pop
push
mov
mov
popf
fcmovu
or
cmc
sbb
push
inc
and
mov
and
hlt
pop
test
test
and
mov
adc
daa
adc
shl
stos
pop
ins
es
or
mov
jmp
adc
test
in
loop
mov
and
xchg
and
sbb
jns
mov
sub
xor
sub
cs
jno
sbb
out
stc
inc
sbb
or
pop
pop
mov
dec
imul
aam
clc
jp
or
xchg
vhsubps
fst
dec
dec
mov
mov
out
jbe
int3
pop
and
das
cld
xor
mov
dec
push
outs
push
pop
out
add
inc
dec
push
mov
in
stos
lds
(bad)
xor
dec
pop
ss
cmp
pop
pop
fcomp
push
add
jo
inc
out
ins
xlat
(bad)
js
ins
out
or
jo
sub
les
(bad)
or
adc
ds
stc
nop
dec
mov
adc
cmp
fimul
call
or
lods
fisttp
dec
rcr
lods
mov
stos
mov
sti
xor
rol
jne
sbb
cmp
cs
test
xchg
dec
pusha
mov
dec
cmps
jge
out
fxch
inc
push
cmp
and
xor
repnz
mov
jno
xor
sub
lds
push
mov
mov
or
in
cld
adc
gs
movs
test
sub
(bad)
cmp
cmp
into
cmp
push
aas
push
in
xor
fwait
xor
repnz
or
movsx
mov
jecxz
fsubr
push
mov
movs
fld
dec
sti
jmp
ds
dec
repnz
daa
test
cmp
cmps
(bad)
nop
fisttp
fiadd
dec
pop
fld
jle
int
lahf
mov
and
cmps
inc
add
(bad)
loope
mov
push
sub
pop
outs
out
in
addr16
fist
xlat
sti
ficomp
int3
mov
sbb
ds
mov
icebp
inc
pop
iret
sub
adc
iret
pop
jmp
xchg
dec
outs
lds
jle
xchg
gs
mov
or
enter
push
push
sbb
and
push
push
cmovne
addr16
mov
add
cmp
je
inc
iret
ins
fwait
mov
adc
bound
dec
(bad)
cs
sbb
pop
push
add
mov
mul
sub
popa
loopne
xchg
test
retf
ins
pop
pop
add
je
neg
ret
mov
mov
adc
push
fwait
xor
dec
sbb
cmps
sub
jnp
mov
cld
push
and
test
(bad)
push
mov
inc
icebp
movs
retf
push
mov
jb
stc
xlat
mov
(bad)
xor
mov
jmp
mov
xor
cmp
loop
xchg
(bad)
idiv
jg
jecxz
outs
call
jne
mov
(bad)
nop
and
test
cmp
xchg
add
out
and
sbb
dec
popa
(bad)
jne
jl
int3
mov
or
cmp
ds
or
inc
inc
jle
ins
retf
in
nop
mov
inc
mov
pop
mov
mov
sbb
daa
mov
adc
jecxz
add
push
mov
out
adc
rol
adc
xchg
arpl
cmp
rcr
push
push
out
xchg
or
mov
dec
adc
sub
cmp
cld
(bad)
ds
mov
inc
add
cmp
rol
imul
repnz
sbb
imul
sub
pop
and
aam
and
mov
jne
ret
xor
inc
and
mov
xor
sbb
ficom
in
aad
mov
int
call
sbb
xchg
in
jp
cmp
sub
or
jae
stos
fisttp
retf
ret
int3
jns
adc
mov
cld
or
fwait
test
adc
loopne
mov
cmp
adc
loope
and
and
and
jmp
push
mov
sbb
int
enter
sbb
xchg
movs
out
(bad)
push
mov
ins
adc
sbb
clc
into
dec
cli
pop
fist
or
push
cmp
into
inc
sbb
jge
add
popa
je
ds
js
inc
arpl
mov
pusha
(bad)
(bad)
pop
jo
inc
lods
add
stos
sbb
push
mov
pop
in
lods
pop
fldcw
mov
inc
fdivr
mov
js
and
repz
(bad)
xor
inc
sbb
(bad)
out
test
xchg
sub
cmps
inc
push
out
dec
mov
adc
lods
leave
fld
pop
adc
inc
mov
mov
add
push
jp
loop
fisttp
jno
shr
dec
std
ins
sub
jb
retf
mov
cmp
sbb
lea
mov
push
ja
jmp
xchg
pop
cmp
outs
mov
fucomi
pop
cmps
fnstenv
push
fbstp
xor
xchg
sub
mov
ja
sbb
adc
dec
clc
or
cs
in
push
(bad)
push
ror
aaa
cmp
xor
pop
sub
movs
ja
mov
adc
add
aad
cmps
fiadd
in
add
lahf
push
pushf
pusha
out
jg
adc
fcom
pop
add
inc
(bad)
or
test
xor
adc
outs
sbb
add
adc
es
add
xchg
mov
stos
mov
and
pop
aad
arpl
popf
pop
sahf
jecxz
cmp
jo
mov
icebp
and
sti
xchg
adc
int3
and
pop
nop
or
dec
dec
dec
icebp
inc
dec
push
mov
jp
movs
add
stos
dec
(bad)
sub
push
sub
(bad)
and
das
dec
loop
jb
int3
std
loop
pushf
inc
lahf
sub
jno
sub
lea
stos
mov
popf
lods
ret
in
addr16
mov
addr16
fstp
pavgb
imul
pop
loope
mov
sub
cwde
pushf
cli
or
je
fist
rcl
daa
adc
mov
mov
std
sub
push
mov
ins
push
push
popa
pop
xchg
jl
xchg
leave
xor
fs
out
adc
add
les
aas
ror
xchg
mov
pop
dec
sub
mov
sub
iret
fwait
jmp
pop
dec
xchg
cmp
xchg
gs
xchg
pop
and
sub
ins
aaa
(bad)
cmc
mov
xor
and
fidiv
imul
jmp
push
mov
add
mov
push
addr16
jge
mov
icebp
out
fcmovnb
xchg
cld
xor
pop
es
inc
jg
adc
psubsw
icebp
cli
pop
add
gs
lahf
mov
xor
or
and
mov
stc
mov
inc
push
xor
adc
and
iret
mov
cmp
mov
jno
push
xor
cdq
cwde
lods
mov
pop
jo
jb
push
adc
sub
loope
shl
mov
add
mov
leave
ror
in
(bad)
sbb
repz
jmp
xor
and
cmps
jae
nop
loope
jl
and
mov
mov
dec
ret
xchg
mov
dec
add
xor
cmp
imul
and
sbb
push
rcl
loop
cs
call
mov
aaa
es
jnp
sbb
cmp
mov
xchg
out
stc
div
fmul
xchg
sub
dec
xlat
repnz
cwde
push
mov
das
inc
push
xchg
dec
mov
mov
jbe
jns
scas
and
jmp
fisub
pop
add
xchg
aam
mov
stos
cwde
or
sti
mov
lock
xor
push
pop
inc
xchg
push
mov
ja
mov
xor
daa
push
push
cmc
scas
sbb
xchg
sub
adc
xchg
adc
mov
cmps
ins
js
add
or
mul
sub
cmp
push
pushw
ret
push
repnz
cli
cmp
jp
scas
in
les
mov
(bad)
lods
mov
in
cmp
fwait
add
fwait
es
jnp
enter
je
sar
daa
and
out
adc
cld
mov
(bad)
sbb
xchg
call
ja
mov
or
leave
in
push
loopne
in
repz
rep
shr
xor
or
or
inc
or
call
jno
ror
adc
popf
daa
adc
xchg
fisub
out
rcl
lock
(bad)
and
pop
shl
mov
sub
mov
push
mov
or
ret
ror
outs
cmp
arpl
fidiv
iret
push
lods
sbb
cwde
sbb
jmp
int
scas
jmp
or
and
jb
scas
add
jg
loope
loopne
xor
out
mov
pop
cmc
xchg
js
cwde
je
push
test
popf
inc
jg
repnz
inc
xor
adc
cli
jge
and
and
mov
adc
icebp
and
dec
std
mov
stc
xlat
mov
stos
add
daa
inc
push
lahf
cmp
dec
xchg
push
sar
jl
push
into
xchg
push
sbb
(bad)
add
pop
dec
gs
in
test
or
jno
push
adc
mov
push
mov
mov
push
inc
mov
pop
movs
clc
lods
sahf
and
out
sub
loope
mov
loopne
cmp
adc
adc
mov
(bad)
ins
and
jae
or
add
fsub
add
cmps
les
loop
cmp
dec
test
pavgw
sbb
xorps
xor
mov
mov
movs
adc
(bad)
fstp
dec
jp
jns
pop
lock
add
jle
arpl
jo
sbb
pop
outs
inc
add
push
pop
adc
hlt
pop
jmp
inc
adc
mov
mov
sub
sbb
jmp
mov
leave
or
mov
clc
adc
jle
cmp
and
(bad)
jno
mov
push
bound
and
fcomp
jo
jae
mov
add
mov
(bad)
cmp
ror
pop
inc
dec
add
(bad)
addr16
call
out
jb
pushf
addr16
dec
aam
cmps
pop
stc
push
pop
mov
les
clc
add
add
fcomp
mov
or
adc
jne
dec
cmp
inc
push
out
shr
cmps
(bad)
cmovs
sar
out
pop
and
es
bound
cmp
push
xchg
fs
je
fst
std
xchg
dec
jp
dec
fadd
adc
fld
dec
sbb
cmc
dec
movs
adc
ja
rcl
jae
rol
pushf
lock
xchg
(bad)
push
mov
mov
xchg
adc
(bad)
js
fsubrp
push
int3
repnz
xor
and
mov
adc
or
and
dec
dec
adc
mov
xchg
push
imul
addr16
cmp
mov
stos
lahf
mov
push
das
add
jo
inc
cmp
test
outs
xchg
dec
aam
pop
dec
push
icebp
inc
xchg
adc
push
xor
into
cmps
and
imul
fdivp
stos
lods
xor
stc
test
ret
fcomp
fiadd
sbb
ins
pushf
div
jmp
jne
and
enter
and
cs
cmp
inc
shr
iret
push
es
mov
mov
hlt
cwde
mov
sbb
sahf
xchg
inc
aaa
out
xchg
(bad)
es
jo
mov
les
imul
jmp
xchg
fcomp
stos
rcl
and
and
cmp
imul
xchg
xor
lods
outs
aaa
xchg
shr
test
stc
mov
mov
push
lods
sub
mov
lea
mov
lods
loopne
leave
in
inc
rol
adc
iret
out
(bad)
(bad)
cdq
adc
xchg
sub
mov
std
rcr
mov
test
shl
inc
hlt
int3
cdq
jle
test
push
xchg
ret
popf
add
push
xor
cmp
ficomp
(bad)
loopne
add
or
mov
push
lds
gs
lea
out
sbb
setg
sub
inc
push
call
cwde
and
adc
retf
leave
inc
and
pop
call
inc
jnp
mov
scas
xchg
and
jp
sbb
gs
sub
mov
and
pushf
push
inc
lods
jecxz
pop
and
xor
pop
push
mov
not
jae
or
or
out
push
adc
or
div
adc
add
cdq
sub
fs
push
xor
cmp
and
scas
push
adc
out
fisttp
jl
jge
imul
cs
stc
ret
xor
dec
inc
xor
retf
in
xchg
mov
jg
mov
inc
xchg
out
add
loope
in
retf
mov
push
and
stc
pusha
jns
outs
xchg
inc
ret
call
jmp
dec
push
mov
push
and
xor
mov
mov
pusha
ror
or
jno
xchg
int
jnp
arpl
inc
(bad)
int3
jne
mov
mov
pop
dec
mov
not
or
add
js
cmp
xchg
push
cli
loop
into
cld
pop
or
xchg
sbb
sbb
mov
test
push
xor
adc
lods
scas
inc
retf
pop
fsub
lahf
out
inc
gs
mov
iret
xchg
fisub
inc
dec
fnsave
fwait
adc
sbb
xchg
sub
fucomi
in
and
mov
mov
call
inc
mov
ss
stc
fld
xchg
jl
cmp
cmps
movs
sbb
rol
mov
icebp
mov
sub
push
je
ins
pop
sbb
cmp
iret
ds
xor
loop
cwde
(bad)
push
repz
and
mov
in
test
add
mov
jbe
pop
dec
dec
mov
shl
push
sub
pushf
enter
jae
in
(bad)
js
retf
jg
aaa
movaps
movs
sti
dec
pop
mov
lods
popa
retf
xchg
(bad)
sahf
(bad)
sbb
(bad)
jmp
outs
repnz
xchg
mov
retf
xchg
pop
arpl
sbb
hlt
pop
pop
jnp
nop
jo
scas
mov
push
mov
scas
lahf
repz
in
adc
in
xor
push
mov
adc
adc
add
cmp
test
(bad)
and
mov
adc
sahf
jno
aam
mov
jp
xlat
push
cmp
mov
sbb
cmc
jo
cld
cmp
lods
test
test
jne
mov
data16
hlt
push
mov
(bad)
cdq
and
in
imul
pop
cmps
leave
mov
ror
mov
jge
add
test
cmc
out
stos
enter
pop
push
pop
inc
in
push
sub
inc
jbe
jne
push
ror
gs
mov
aaa
xchg
stos
rcr
rcr
aas
push
add
cmp
fucomi
sub
jmp
lods
xchg
xor
cld
mov
dec
ja
sub
test
or
mov
sbb
sbb
popa
call
fnstenv
cmc
pop
js
test
lds
ret
adc
and
sti
jmp
xchg
call
inc
nop
adc
inc
mov
out
loope
pusha
call
jbe
pop
test
test
dec
int3
xor
sub
sbb
cld
fwait
mov
neg
xchg
jbe
xor
jo
push
xchg
ins
mov
inc
ror
and
into
cdq
xchg
mov
aam
push
mov
sbb
mov
cmp
jb
mov
gs
push
jno
fadd
test
ja
ds
aaa
adc
cdq
adc
icebp
inc
pop
push
jmp
pop
stos
mov
mov
int
or
ds
jmp
(bad)
cmp
push
xchg
addr16
push
dec
adc
fild
scas
sub
inc
pop
jle
xchg
and
movs
pop
mov
mov
mov
add
lods
pop
adc
int
arpl
xor
mov
loope
mov
mov
gs
int3
bound
dec
pop
xor
mov
mov
and
ret
ins
loope
call
xor
cmps
cmp
jne
fdiv
rcr
push
or
inc
dec
test
add
pushf
xchg
mov
xor
retf
std
push
pop
bnd
dec
and
xchg
inc
sbb
mov
sub
jg
loop
int3
pusha
xchg
mov
(bad)
(bad)
mov
hlt
xchg
aas
mov
lea
push
repnz
cld
jge
mov
fst
cmp
and
pop
mov
mov
nop
push
mov
in
mov
cli
call
push
bound
rcl
dec
mov
pop
mov
pushf
mov
stos
clc
and
repnz
jg
pop
sub
pop
cmc
jmp
ss
retf
stos
lds
cmps
inc
not
addr16
aas
pushf
jno
hlt
mov
jmp
inc
cmps
adc
push
mov
outs
ins
pop
pop
sti
push
mov
jae
jo
dec
cmp
dec
leave
jp
and
imul
outs
mov
xor
sub
jp
sub
xlat
cmp
push
add
mov
pop
sbb
jmp
test
fnstenv
imul
jg
xchg
inc
pop
lods
xchg
fstp
je
mov
movs
xchg
inc
sub
daa
je
bound
jmp
ror
loope
les
clc
and
clts
out
repz
jp
cmps
shl
scas
lahf
iret
push
mov
dec
in
jne
jge
cmp
cdq
test
and
pop
sbb
outs
rcr
jp
mov
sub
mov
adc
dec
push
test
mov
adc
ret
fucomi
push
pop
clc
seto
leave
pop
mov
out
xchg
stc
(bad)
leave
push
and
mov
jnp
ds
fistp
pop
stos
push
and
dec
repz
ror
repnz
jae
jge
std
clc
inc
xor
push
rcr
fcomp
push
repnz
or
jmp
test
mov
popa
enter
or
mov
(bad)
cmp
out
popa
data16
fst
xchg
dec
rol
sub
lods
ret
or
xchg
pop
push
arpl
xchg
xlat
mov
lds
(bad)
idiv
inc
sar
fst
loopne
stos
pop
icebp
iret
jbe
stos
(bad)
cld
add
pop
stos
fldcw
mov
sbb
add
ins
mov
push
adc
jle
inc
adc
loope
sub
or
leave
test
ja
scas
and
in
inc
arpl
xor
mov
push
shl
aam
adc
jbe
je
cmp
test
dec
cmp
sahf
and
in
push
stc
out
pop
mov
add
add
ss
shr
jnp
push
es
jmp
dec
and
lahf
adc
into
movs
cmc
mov
pop
or
jg
add
cmp
int
ins
addr16
inc
pop
pushw
gs
jns
mov
lahf
jb
leave
cwde
xor
push
add
loopne
hlt
js
aad
xchg
cmps
test
sub
and
cli
fs
pop
sub
mov
mov
adc
neg
in
clc
dec
push
mov
cmps
xchg
outs
cmp
fdivr
call
shr
sar
mov
mov
(bad)
fistp
popa
xor
imul
and
adc
mov
sub
(bad)
jne
fisub
sbb
jecxz
movs
sti
add
inc
push
hlt
add
and
outs
popa
jecxz
mov
fild
add
jno
ds
pop
pop
mov
scas
mov
mov
mov
xchg
inc
mov
sub
stos
push
pop
fcom
daa
sbb
mov
sbb
xchg
pop
test
jb
sbb
cmp
inc
fnsave
cwde
mov
addr16
test
fstp
mov
aas
jbe
aam
aas
mov
adc
mov
lock
mov
fbstp
cmp
cmp
and
fbld
sar
lea
daa
fstp
mul
sub
cmp
and
xchg
(bad)
add
popf
sub
sub
add
js
aad
xor
jg
xlat
aad
adc
mov
aam
jmp
mov
xchg
cwde
pinsrw
jg
push
xchg
inc
lock
mov
es
fwait
mov
pop
pop
test
out
push
cdq
push
inc
jne
xor
push
daa
movs
xor
fistp
ret
scas
ret
imul
cs
pop
mov
cwde
mov
movs
inc
hlt
out
mov
cmps
sbb
mov
scas
or
arpl
stc
std
pop
fcomp
and
add
test
sti
mov
push
pop
adc
rol
popa
clc
and
ficomp
hlt
and
jle
out
mov
xor
in
and
out
inc
aas
repnz
or
push
xchg
mov
and
int
cli
ins
sub
pop
add
mov
rol
lds
mov
mov
jmp
in
inc
rcl
dec
push
icebp
jno
dec
cld
cwde
jo
(bad)
sub
hlt
test
sub
sbb
push
pushf
xchg
(bad)
sub
pushf
daa
div
cdq
jns
out
idiv
xchg
cmps
les
add
mov
ins
jl
retf
sub
in
jb
push
xor
or
dec
aas
dec
aas
test
pop
repnz
(bad)
movs
in
and
adc
adc
outs
sub
div
push
pop
mov
scas
aad
sbb
jge
push
retf
idiv
les
jp
xchg
test
ret
mov
fstp
movs
cmp
in
push
jne
pusha
mov
or
jbe
and
sub
sbb
pop
enter
aas
mov
enter
jecxz
icebp
pusha
inc
dec
rcr
push
outs
imul
pop
shr
add
std
(bad)
addr16
add
inc
adc
or
cmp
xor
add
test
cmps
add
push
mov
pop
or
stos
pop
jge
push
inc
lds
jmp
mov
clc
ret
cdq
ret
sub
push
mov
cmp
mov
or
mov
aas
xchg
dec
into
mov
dec
scas
into
test
xchg
or
inc
xor
into
dec
and
imul
push
imul
xchg
(bad)
mov
subps
push
inc
jl
pusha
push
inc
ret
repnz
dec
test
push
loope
jmp
sub
jle
mov
xchg
pop
shl
pop
rcl
mov
js
imul
cmp
test
mov
test
bound
loope
jg
cli
sbb
xlat
push
test
test
test
cmp
ja
push
imul
ror
push
ret
imul
test
iret
aas
(bad)
idiv
int3
aad
cmp
jmp
out
cdq
xchg
fucom
push
adc
repnz
add
xchg
and
ins
dec
ins
in
or
fstp
test
iret
ret
stc
ins
neg
adc
or
or
ret
mov
sbb
lea
fild
pop
pushf
and
das
jg
mov
add
popf
and
pop
out
imul
cmps
lods
cmp
or
ds
pop
aam
loop
fs
add
fcomp
mov
or
dec
cmp
fsubr
mov
int3
mov
dec
int
add
jg
loope
repz
aam
sti
cmp
add
mov
push
ins
pushf
lods
(bad)
(bad)
or
jle
pushf
xchg
not
pop
aad
mov
inc
xchg
repz
movs
ror
sbb
jg
enter
sub
outs
arpl
mov
xchg
inc
gs
dec
(bad)
dec
or
ins
and
xchg
mov
test
aaa
loop
stos
add
or
and
or
and
jne
jbe
cmp
dec
iret
es
inc
outs
jle
push
bound
test
test
sti
inc
mov
out
js
clc
dec
es
mov
xchg
les
es
mov
cmp
xchg
push
push
push
mov
scas
push
xchg
stos
xchg
scas
(bad)
or
push
xor
mov
inc
test
data16
ins
and
add
push
aam
fld
fsubr
popa
lds
retf
daa
sti
mov
(bad)
jbe
mov
shr
add
sub
jbe
leave
ins
cmp
cs
cmp
addr16
inc
push
xlat
xchg
inc
test
sbb
adc
mov
mov
mov
jl
es
pop
rcr
pusha
pop
xor
das
jle
addr16
dec
xor
daa
imul
cdq
int3
sbb
jg
aad
sub
push
iret
aad
mov
mov
and
and
jmp
pop
mov
(bad)
mov
add
int
aam
outs
jmp
or
sbb
arpl
je
scas
shr
jns
dec
jne
and
enter
hlt
mov
lods
div
inc
or
inc
inc
mov
sub
rcl
ja
pop
in
pop
jge
xor
arpl
cdq
out
xor
test
sub
dec
mov
dec
or
push
adc
cmps
stc
ret
jns
mov
add
mov
cmp
aas
push
and
mov
inc
sub
fistp
or
and
popf
outs
sub
add
push
xchg
movs
aad
jb
dec
outs
mov
ret
push
pop
ss
inc
stc
rol
dec
test
shl
jae
scas
and
push
or
jns
inc
(bad)
jmp
test
into
push
fs
popf
or
cmp
add
sbb
mov
xor
clc
dec
pusha
mov
dec
cwde
ss
addr16
xchg
or
retf
pop
xor
hlt
jg
mov
adc
mov
(bad)
std
or
fisttp
sbb
push
and
rcr
movs
loope
fsub
add
sahf
clc
pop
pop
leave
jp
repz
push
jnp
and
xchg
out
or
aad
(bad)
jecxz
dec
jmp
ds
push
cwde
mov
lea
fsubr
loop
jns
mov
jo
mov
dec
mov
inc
xchg
sbb
sbb
pop
mov
bound
mov
lea
mov
hlt
jno
fmul
in
or
test
inc
pop
pop
das
adc
jb
jmp
loopne
xchg
cdq
push
jmp
xlat
aas
fild
fstp
das
addr16
cmp
cmps
or
call
jmp
cmp
add
mov
pop
movs
arpl
das
call
mov
mov
jle
dec
aam
repz
dec
jnp
out
or
sbb
movs
push
jns
rol
pop
stc
pop
push
loope
dec
dec
imul
mov
inc
lds
xor
mov
in
pop
or
(bad)
mov
push
retf
test
pop
test
out
(bad)
(bad)
rcr
pop
imul
mul
pusha
ins
nop
packuswb
cmp
pop
stos
not
movs
and
xchg
xor
jg
jo
mov
fsubr
mov
or
(bad)
jne
xchg
sub
leave
stos
popa
jl
and
add
pop
aad
cmp
sti
aam
retf
fadd
cwde
push
shl
inc
out
lods
and
xlat
aam
push
ja
jecxz
cmp
inc
add
lds
sub
out
call
and
push
js
or
mov
mov
into
sbb
in
adc
or
dec
enter
inc
int
add
test
xchg
dec
xor
or
arpl
out
jnp
cmp
xchg
es
bsf
sub
jecxz
xchg
pop
ss
pop
rcl
cmp
xlat
ins
iret
mov
jmp
int
jae
push
push
call
in
push
jmp
das
rcl
repz
aam
movs
ja
enter
xlat
outs
popf
lahf
push
lds
lods
sub
fisttp
cmp
or
mov
movs
xchg
aam
push
stc
int
push
xchg
iret
push
test
jmp
scas
fistp
inc
inc
xor
dec
icebp
mov
jg
dec
cld
adc
scas
pop
rcl
inc
adc
xor
and
mov
mov
call
enter
cmp
dec
rol
jno
mov
inc
pushf
adc
ret
dec
mov
stos
mov
pop
pop
dec
dec
mov
je
cmps
mov
movs
add
mov
jne
cs
mov
(bad)
test
mov
inc
adc
cdq
ror
cmp
sbb
or
xor
imul
or
outs
xchg
push
cli
add
mov
ins
das
fcomp
std
imul
mov
inc
fmul
iret
ror
pop
stos
inc
adc
jp
pop
ss
ret
mov
lock
push
mov
add
in
xor
fcom
mov
in
xchg
and
push
push
sub
rcr
cld
push
mov
or
push
test
lahf
sub
jg
xlat
call
sti
jno
int3
mul
in
push
frstor
mov
test
xchg
loopne
push
ret
iret
sbb
mov
xor
xchg
sbb
out
push
dec
test
mov
(bad)
addr16
pop
xchg
sub
js
rol
stos
adc
sub
dec
push
ret
aaa
jns
fwait
xor
sub
adc
cmc
arpl
cwde
pusha
dec
mov
dec
jae
push
movs
add
xor
inc
mov
ss
lock
stc
mov
jae
xlat
mov
sti
inc
or
mov
mov
outs
mov
or
test
mov
retf
mov
test
mov
fist
pop
cmp
add
dec
shl
sahf
mov
shr
mov
icebp
mov
add
lods
out
fmul
cmp
mov
hlt
or
(bad)
lahf
xchg
pop
mov
cmp
mov
call
dec
movaps
nop
in
add
scas
mov
mov
repnz
jo
xchg
push
xor
stos
lods
adc
and
adc
cdq
mov
stos
add
jl
enter
jmp
in
pusha
xor
mov
shl
xchg
and
aam
mov
or
xchg
fdiv
call
or
repz
dec
(bad)
lock
in
in
xlat
gs
out
mov
call
lods
dec
and
stos
in
fsub
(bad)
rcr
xchg
loope
mov
and
div
push
icebp
int
cmps
xchg
mov
add
fimul
mov
shl
inc
scas
push
lods
ret
es
adc
cld
pop
cmp
inc
sub
inc
ds
adc
pop
jge
inc
xor
jns
adc
stos
lahf
push
fsubr
and
xor
xchg
mov
mov
sub
xor
dec
out
loop
popf
imul
lock
mov
mov
aam
ror
lods
and
inc
sub
stos
stos
ret
sbb
je
add
cmp
cmp
xchg
xchg
sub
xor
(bad)
mov
pop
cmp
fbstp
dec
retf
jl
retf
bound
dec
push
(bad)
push
jl
das
cmp
jae
jmp
shl
mov
in
fwait
pop
test
jns
es
inc
icebp
in
test
lahf
std
(bad)
stc
jno
jns
aad
repnz
or
sbb
inc
sahf
jg
rcr
iret
pop
mov
iret
fadd
inc
sbb
dec
mov
mov
jg
out
arpl
xchg
mov
or
loope
das
push
jns
push
add
cmp
mov
lods
(bad)
jge
dec
icebp
mov
fprem
cmp
scas
adc
xchg
push
push
sub
or
xlat
jns
lahf
in
jb
inc
push
and
or
in
cwde
aas
and
dec
movs
scas
mov
cmps
mov
std
xchg
mov
mov
(bad)
neg
out
(bad)
sar
jg
(bad)
in
std
enter
cmp
jno
lock
and
rcr
cwde
pop
dec
dec
in
cmp
cmp
ficomp
pop
lds
mov
mov
rol
push
lods
push
inc
push
ret
call
mov
(bad)
out
dec
or
sbb
push
loope
cli
push
jno
jl
pop
cmp
jne
movs
add
add
addr16
sub
mov
sub
xor
fs
aad
std
or
scas
xor
push
xchg
push
not
xchg
rol
inc
xor
sbb
or
and
jecxz
dec
xor
inc
push
lock
pop
(bad)
movs
fyl2xp1
retf
fs
pusha
push
rcl
ret
stos
int3
pop
(bad)
aad
iret
data16
out
or
sub
cmp
inc
xchg
push
push
out
enter
xchg
fidivr
outs
ror
pusha
repz
add
sub
fs
idiv
inc
or
lahf
shl
push
rcr
push
or
ss
mov
les
outs
in
push
add
jmp
retf
pop
fstp
imul
add
and
xchg
pop
(bad)
loopne
xchg
popa
jge
(bad)
lea
imul
icebp
shr
dec
ds
add
cdq
xor
cmps
ror
mov
shl
imul
mov
sbb
push
stos
loopne
fs
popf
sub
inc
adc
pop
or
(bad)
scas
sub
das
xchg
imul
adc
mov
mov
adc
add
push
les
sbb
xlat
add
mov
fnstenv
and
push
xlat
and
fist
in
js
das
or
or
cmps
clc
test
scas
cld
cmc
xor
push
push
and
mov
or
pop
shl
sub
push
fstp
fsubr
mov
jmp
mul
daa
aad
das
mov
movs
mov
ret
sbb
(bad)
dec
jb
std
add
mov
sbb
rol
mov
mov
dec
add
adc
in
jne
lahf
pop
sub
xchg
xor
sbb
sbb
cmp
ror
dec
mov
mov
js
ret
or
pop
cs
mov
mov
mov
and
or
pop
jne
sub
mov
or
fucom
pop
cs
bound
movs
sahf
dec
cli
adc
pop
bound
sbb
push
cmps
leave
hlt
push
adc
pop
lahf
nop
out
popf
add
stos
push
jmp
nop
dec
mov
or
xor
xor
xchg
cli
jle
std
sbb
add
jbe
mov
out
jnp
mov
ss
xchg
and
add
inc
arpl
fnstcw
sub
out
pusha
sbb
out
mov
xlat
icebp
add
lea
sub
mov
jne
(bad)
aas
dec
push
imul
shl
inc
hlt
mov
pop
clc
aas
(bad)
std
mov
scas
cmp
dec
outs
inc
rol
ficomp
mov
test
cli
jno
sahf
(bad)
out
sub
sbb
jns
repz
xchg
lahf
(bad)
rol
lds
cli
push
movs
or
ss
push
das
jbe
fs
mov
push
xchg
fidiv
ret
mov
sbb
rcl
retf
pop
jmp
add
or
jae
fdivr
xchg
xor
imul
mov
out
adc
mov
out
ss
cli
je
cmp
jecxz
adc
aad
cmp
xchg
sub
or
retf
leave
test
xchg
mov
mov
mov
les
loop
ret
jmp
cwde
adc
data16
and
js
and
pop
repnz
xchg
mov
push
xchg
bound
sbb
mov
mov
test
sub
ffreep
jge
hlt
or
push
(bad)
in
inc
ins
in
outs
dec
xor
loope
stos
nop
xor
fstp
push
clc
fadd
mov
mov
call
pop
push
push
cmp
jle
sar
jmp
push
jl
and
mov
pop
popf
std
pop
inc
enter
pop
fistp
retf
mov
and
sub
stos
ss
jmp
bsr
pop
and
in
(bad)
iret
sbb
mov
sbb
jg
dec
inc
fwait
sbb
enter
mov
int
cmp
jp
fldenv
sbb
(bad)
dec
aad
sbb
or
push
fmul
and
jmp
(bad)
push
(bad)
test
aaa
jmp
adc
xor
(bad)
sbb
xchg
aas
or
xchg
mov
jb
push
adc
out
aaa
loop
mov
sbb
pop
jnp
push
jne
sar
jbe
jne
xchg
jae
rcr
mov
aam
or
cmc
aam
out
fsubrp
stc
enter
jmp
inc
repnz
cmps
imul
retf
movs
aam
push
dec
in
loop
cmps
add
les
dec
scas
push
lea
lods
cwde
mov
dec
jnp
xchg
punpckldq
out
cmps
ins
data16
push
fbstp
mov
xor
inc
dec
ins
dec
stc
stos
retf
stos
push
adc
pop
aad
mov
push
hlt
pop
fild
sti
sbb
int
xchg
push
push
rcl
push
loop
in
sub
test
pop
xchg
sbb
xor
push
nop
fld
push
dec
mov
pop
lahf
push
inc
aas
sbb
jmp
push
inc
jne
mov
fcompp
int3
xchg
fdiv
inc
cmp
imul
inc
add
lahf
pop
daa
mov
clc
sub
pop
pop
fist
jae
in
popf
aam
call
pop
mov
xor
in
out
and
or
and
(bad)
stos
nop
scas
xor
popa
add
adc
retf
mov
popa
and
mov
loopne
gs
sbb
outs
mov
(bad)
(bad)
in
mov
mov
inc
inc
sbb
popa
xchg
rcr
popf
mov
mov
les
scas
inc
and
es
mov
xor
cmp
mov
(bad)
out
push
or
scas
sub
dec
push
fadd
mov
std
test
inc
(bad)
aam
in
icebp
retf
rcr
rcl
cld
add
pop
rcl
adc
cmps
test
call
das
push
out
pop
add
push
mov
es
cmp
push
ret
push
jg
(bad)
fadd
imul
(bad)
icebp
xchg
test
loopne
dec
test
sahf
sub
jge
nop
sbb
push
dec
push
test
(bad)
xchg
cmps
ja
ja
aam
cmp
(bad)
cmp
jmp
adc
(bad)
fimul
test
mov
inc
retf
mov
adc
leave
xchg
stos
shl
add
cmc
sub
jmp
out
push
scas
arpl
xchg
test
sub
shl
inc
outs
loop
push
or
fisub
add
out
loope
and
adc
ret
ror
xchg
imul
cld
out
mov
(bad)
mov
mov
outs
adc
cmp
test
loop
rol
inc
bound
inc
imul
push
mov
fnstcw
xchg
sahf
int
xor
sbb
jmp
mov
adc
mov
stos
mov
sub
ss
loope
mov
push
out
pop
mov
retf
pop
repnz
or
aas
test
pop
add
mov
fstp
mov
test
pop
rcr
aas
outs
pop
out
xor
pop
fxch
cwde
test
push
cld
clc
push
outs
test
sbb
pushf
std
mov
aas
imul
jmp
cmp
popa
fisttp
cmp
(bad)
or
in
loopne
mov
dec
nop
rcr
ret
dec
jmp
into
fidivr
pop
stos
iret
sbb
dec
pop
jns
(bad)
mov
mov
fs
jbe
(bad)
jge
pop
in
js
pop
gs
das
xor
clc
cmp
push
inc
xor
xor
sahf
clc
lods
mov
jae
test
and
imul
xor
ja
cmp
aaa
adc
loope
hlt
outs
sub
mov
push
loope
and
adc
fwait
idiv
cmps
fld
fisttp
mov
repnz
(bad)
inc
dec
mov
aam
movs
daa
xchg
adc
mov
or
xor
pop
inc
fucomi
push
mov
test
rol
loopne
call
and
in
push
xchg
arpl
(bad)
add
cwde
xlat
xor
call
in
push
push
cmp
mov
repnz
cmp
das
cmp
jb
mov
or
ficomp
push
sar
les
cmc
inc
jmp
cmp
ins
add
fadd
movs
retf
loope
leave
aaa
cmps
push
mov
push
(bad)
idiv
(bad)
es
scas
and
and
inc
in
xor
leave
enter
retf
push
xchg
sbb
aas
jo
rcl
add
mov
out
ss
mov
fisttp
test
neg
nop
lds
imul
loop
in
mov
fucomi
jns
fiadd
retf
mov
inc
add
lods
dec
sahf
mov
stc
push
jnp
pop
push
push
ret
and
push
jnp
push
sbb
and
loope
cdq
push
jp
loop
hlt
in
and
stc
pop
int3
xchg
fidiv
daa
retf
xor
and
xchg
in
push
mov
out
add
mov
or
fwait
mov
loopne
fstp
mov
ret
push
fsubrp
cmp
jle
mov
xor
retf
sar
sbb
scas
lods
stc
jmp
xchg
ret
test
push
sbb
inc
lea
mov
retf
add
xchg
out
cmc
xchg
ins
cmp
xchg
add
imul
sub
pop
js
mov
not
retf
ja
pop
sbb
adc
pop
jns
or
xor
in
adc
inc
fild
push
loope
jbe
jle
push
push
cmp
(bad)
cmc
fistp
xchg
mov
call
ja
aad
adc
mov
dec
retf
mov
dec
cmp
mov
adc
mov
xchg
mov
dec
inc
sbb
mov
in
or
adc
arpl
shl
push
and
test
and
stos
pop
xor
mov
(bad)
mov
mov
scas
ins
cmps
cmp
out
popa
call
and
dec
sub
mov
call
jae
xchg
adc
cs
iret
repz
arpl
dec
sub
mov
lods
cmp
rcl
fcom
or
cwde
jnp
jmp
cdq
cmp
mov
or
fdiv
push
add
bound
jo
aas
and
pop
scas
sbb
sub
mov
or
mov
rol
sub
mov
mov
jns
shl
addr16
in
test
inc
adc
xchg
pop
lods
cmp
cmp
jae
cmp
sub
(bad)
sub
out
outs
lock
cmc
lds
inc
push
jbe
aam
mov
scas
test
mov
xor
test
add
and
xchg
cmps
icebp
mov
cmp
mov
sub
cmp
rcl
scas
sub
cmp
stc
xchg
push
push
(bad)
test
xor
push
add
dec
mov
add
xchg
jae
pop
std
jno
mov
pop
mov
inc
jns
push
pop
sbb
lea
fs
fimul
add
xor
pushf
pop
pop
ret
mov
daa
pop
fldpi
sub
push
or
fwait
xor
and
fst
cmp
cmp
mov
(bad)
jg
sub
leave
retf
dec
into
dec
and
fist
and
push
(bad)
xchg
pop
fldcw
and
jne
aam
fs
stos
es
test
mov
sbb
jb
push
mov
adc
nop
out
fmul
(bad)
mov
lock
push
pop
push
repnz
stos
xor
sub
jne
push
and
adc
jmp
repz
aad
outs
pop
idiv
out
fs
add
and
sbb
or
push
ins
movs
pop
cmp
fmul
adc
(bad)
lods
ins
adc
imul
stos
ins
mov
sbb
cmp
xchg
mov
das
js
xchg
mov
aad
cld
gs
in
inc
(bad)
call
cmp
icebp
dec
retf
lea
cmp
mov
outs
(bad)
mov
loop
cdq
or
mov
jmp
dec
push
pop
inc
pop
mov
test
sub
mov
lods
xor
and
cli
jge
dec
mov
mov
dec
pop
loope
xor
jp
movs
cmp
cmp
iret
jo
add
aas
xchg
enter
pop
mov
adc
mov
push
lahf
push
call
in
popa
cs
fisttp
xchg
adc
test
push
or
pop
fwait
outs
sbb
cmp
cmps
mov
cli
xor
sub
fstp
loop
pushf
out
sar
inc
push
out
sar
adc
mov
cmps
push
adc
sbb
outs
aam
in
and
mov
cmps
sub
xchg
sub
or
inc
pop
add
out
pop
pop
inc
sar
mov
jne
das
or
jp
bound
push
fimul
inc
pushf
repnz
push
xor
inc
pop
test
inc
pop
outs
xchg
pop
out
add
fild
mov
je
int3
scas
pop
jns
sub
fs
(bad)
inc
inc
pop
test
sub
add
fcomp
sti
xor
jecxz
into
in
test
data16
mov
sub
lahf
mov
gs
jno
nop
in
sub
fwait
pop
arpl
scas
jns
xor
popf
popf
bound
dec
xchg
aas
inc
cli
popf
sub
daa
xchg
xor
push
xor
rol
out
test
jp
(bad)
ins
sub
fs
xchg
mov
jmp
adc
xor
cli
data16
push
push
mov
rcl
xchg
dec
iret
cmp
lods
mov
adc
xchg
xor
xor
lock
pop
mov
push
sar
shl
test
mov
sbb
push
mov
inc
test
aaa
jne
push
in
mov
xchg
pop
ss
dec
pop
in
dec
out
js
retf
fnstenv
cld
dec
sbb
sub
arpl
cdq
dec
nop
cld
pop
and
push
loop
mov
iret
xor
lods
or
sub
int3
es
(bad)
sbb
mov
clc
fcomip
add
jae
jle
in
pop
push
or
add
ss
mov
mov
jb
push
test
in
aaa
sbb
gs
add
and
mov
(bad)
aam
and
(bad)
adc
mov
xchg
repnz
mov
mov
mov
sub
fbld
scas
stos
inc
into
cmps
stc
cmp
ins
jbe
stos
mov
jno
or
dec
out
aas
into
(bad)
xchg
test
mov
cs
push
and
add
fndisi(8087
dec
xchg
add
cdq
mov
fmul
xchg
or
and
call
sub
mov
cmps
scas
sbb
and
out
mov
inc
(bad)
jmp
std
pop
loopne
xchg
and
test
mov
xchg
push
or
daa
rep
arpl
in
out
std
sbb
retf
add
sub
xlat
mov
sbb
jmp
lock
xchg
sub
adc
mov
pop
test
bnd
clc
add
fdiv
push
pop
xchg
mov
and
pop
imul
xchg
das
adc
fwait
mov
sahf
fstp
xchg
xchg
ficomp
push
jnp
pop
mov
lods
sub
outs
cli
stos
mov
pop
jns
sub
out
mov
jbe
pop
not
ja
sahf
loopne
sub
jg
fst
aam
call
sub
fisub
pop
test
mov
int3
neg
cmps
into
pusha
lahf
sub
dec
jbe
mov
jnp
push
push
xchg
sub
mov
sbb
sar
repz
mov
jae
ins
and
xlat
add
mov
sub
lahf
mov
lods
adc
push
jno
out
pop
cmc
sbb
sti
repz
pop
call
dec
push
mov
dec
xor
mov
test
out
in
or
shr
add
mov
hlt
sbb
push
sbb
pop
cld
js
jae
shl
xor
ss
clc
inc
shr
sbb
inc
cmp
push
inc
sbb
popf
mov
stc
je
cmp
fld
push
gs
xor
and
rol
sbb
jl
pop
loope
xor
jg
fldenv
ret
imul
mov
push
or
cwde
xor
pop
retf
sar
xor
fldln2
stos
inc
mov
push
neg
mov
jmp
push
in
sub
dec
or
or
lock
scas
call
stos
sbb
cmp
fs
mov
or
jecxz
add
repnz
popa
pop
push
int3
dec
ja
pushf
jl
fmulp
or
lds
stc
adc
jnp
out
dec
fmul
cmp
jb
lds
ror
mov
xor
cmps
movs
nop
jae
imul
pop
xor
xor
ret
and
jge
or
sub
or
and
xchg
dec
shl
dec
add
in
push
xlat
push
mov
movs
(bad)
sub
stc
dec
cld
call
push
inc
bound
push
ss
je
and
(bad)
mov
mov
loope
or
xlat
ja
scas
in
adc
xor
test
mov
(bad)
mov
out
add
and
call
aaa
pushf
sbb
(bad)
xchg
clc
ja
(bad)
les
mov
xor
icebp
hlt
popa
imul
call
stos
cmp
fs
add
sub
aam
inc
fwait
inc
fdivr
xchg
(bad)
mov
stos
bound
and
stc
leave
cld
push
stos
add
leave
mov
jb
cmp
stos
pop
out
lea
mov
or
es
repz
(bad)
cmp
xor
mov
inc
repz
jle
fist
arpl
push
ret
es
mov
stos
dec
jnp
pop
push
int3
gs
shl
push
push
pop
test
popa
jnp
imul
push
inc
or
stc
inc
cli
xchg
sub
mov
dec
or
loope
hlt
dec
and
repz
push
sets
mov
or
and
xchg
repnz
test
add
mov
jns
call
cmp
aad
jns
or
push
outs
icebp
mov
aad
test
or
push
mov
ins
pop
aaa
enter
stc
nop
ret
fist
mov
ins
in
fild
je
js
mov
dec
jg
push
test
in
outs
cld
mov
xor
fist
stc
xor
sub
dec
or
adc
shr
and
mov
jmp
cmps
jle
int3
scas
push
aas
clc
sahf
out
pop
sahf
sbb
sbb
jp
add
fadd
add
sahf
addr16
fnstenv
xlat
push
xchg
mov
mov
mov
ds
retf
jnp
in
adc
dec
cmps
ins
adc
inc
jmp
in
sahf
push
pop
and
mov
(bad)
arpl
call
aad
push
jl
imul
mov
test
(bad)
xchg
pop
cmp
scas
pop
lock
std
shl
dec
adc
jb
jmp
test
adc
jecxz
mov
(bad)
push
sar
dec
push
or
cld
jl
aam
fnsave
jo
mov
and
mov
xchg
bound
stc
popa
mov
popa
mov
nop
mov
sub
add
fist
outs
cwde
inc
jns
ret
or
pop
fs
shl
fisub
call
(bad)
lds
push
add
lahf
xchg
push
add
mov
dec
fs
out
and
test
adc
add
repnz
repz
in
outs
or
in
jge
scas
push
and
(bad)
or
fsubr
mov
imul
or
jp
sub
pop
les
dec
push
xchg
push
jmp
push
aas
sahf
stos
cmp
and
dec
cmp
ins
fbstp
push
mov
mov
adc
mov
sub
sbb
lods
fsubr
test
shl
lahf
xchg
ds
fs
loope
out
dec
mov
mov
call
jmp
xchg
dec
mov
xor
fmul
clc
ins
lea
in
cmp
movs
div
in
pop
shl
(bad)
fmul
or
cld
or
ss
les
cdq
mov
pop
sub
lods
jns
rcl
jno
movs
test
xlat
push
lods
jns
lock
pop
addr16
outs
unpckhps
outs
shr
dec
xchg
cmp
xor
mov
lock
imul
jmp
(bad)
pop
push
push
rcr
nop
sar
inc
ins
mov
retf
cmps
mov
mov
push
arpl
cmp
and
cmp
test
add
and
loopne
mov
fldcw
daa
enter
je
sbb
iret
cmp
jmp
or
rcl
push
aaa
push
jecxz
sti
xor
iret
jle
dec
xchg
fdivr
inc
or
ror
jnp
je
and
sbb
lods
jmp
and
mov
mov
popa
sub
ficom
movs
adc
or
mov
mov
cmp
movs
add
mov
(bad)
jae
out
hlt
adc
call
sbb
mov
les
enter
mov
xchg
push
dec
pop
mov
retf
jecxz
in
ins
xlat
retf
adc
lods
jo
jle
sub
ror
sub
adc
inc
sub
sti
aad
js
push
outs
ret
fistp
popa
mov
lods
jmp
inc
shl
lods
(bad)
scas
sar
cld
clc
hlt
mov
dec
jl
jl
ins
push
jne
adc
(bad)
popa
inc
fsubr
jnp
ins
mov
adc
adc
sbb
jne
call
jbe
pop
stos
xor
dec
shl
(bad)
push
or
jmp
fs
(bad)
shl
stc
fbld
add
jl
xchg
out
adc
hlt
dec
sahf
cs
mov
inc
iret
pop
mov
(bad)
lock
xchg
inc
push
dec
and
and
inc
out
popa
fcom
mov
fwait
pop
stos
scas
pushf
jecxz
sti
daa
dec
xchg
out
sbb
dec
mov
test
(bad)
cmp
mov
test
pop
xchg
mov
adc
sbb
cmc
push
(bad)
loop
test
inc
mov
int3
out
xchg
in
xor
mov
arpl
pop
(bad)
or
pop
mov
xor
and
mov
shl
push
nop
add
sbb
call
lea
push
cmc
push
push
xchg
pusha
and
cmp
ror
out
(bad)
adc
dec
rol
int3
jp
xor
add
call
rol
lock
(bad)
call
test
mov
mov
or
sbb
call
pop
or
pop
sub
jns
sbb
add
pop
push
out
mov
and
bound
jg
movs
mov
pop
mov
adc
not
jae
scas
pusha
pop
and
mov
mov
cmc
sub
sbb
add
mov
std
repz
call
xchg
je
cmps
int
pushf
ret
(bad)
add
jns
pop
cmp
and
bound
sub
xchg
jmp
pop
das
aam
mov
add
lahf
xchg
ss
test
and
(bad)
push
mov
icebp
inc
pop
dec
jl
sub
dec
aad
stos
or
jle
ja
and
test
or
lock
cmc
loopne
add
cmp
jle
movs
faddp
mov
mov
dec
adc
xchg
in
xchg
lods
data16
movs
xchg
mov
xor
mov
sub
dec
aaa
xchg
call
mov
pop
xor
retf
ds
sbb
std
cmps
test
inc
pop
push
cwde
ins
(bad)
js
cdq
fild
add
xchg
fs
cwde
add
pushf
repnz
xor
in
xor
rcl
adc
dec
add
mov
cld
mov
mul
mov
adc
hlt
cmc
push
or
(bad)
mov
or
pop
push
jp
lds
mov
mov
pop
or
pushf
jle
mov
fldcw
pop
and
sub
sbb
mov
sbb
rcr
sub
(bad)
xchg
es
rcr
dec
mov
(bad)
inc
test
retf
scas
mov
mov
push
add
icebp
xor
or
fild
mov
mov
sbb
adc
xchg
aam
fidiv
xchg
in
adc
das
pop
mov
fwait
jo
fs
xor
(bad)
sbb
addr16
int3
inc
ss
scas
adc
add
das
xchg
adc
sar
popf
xchg
in
sub
das
das
repz
not
mov
retf
pop
test
mov
mov
ins
xchg
mov
mov
cmp
mov
and
hlt
scas
push
sahf
mov
mov
pop
(bad)
fild
xor
and
mov
(bad)
popf
pop
cwde
sbb
imul
lods
js
add
std
imul
gs
ret
xchg
mov
or
jl
test
pushf
push
pop
mov
pop
arpl
icebp
sar
inc
mov
mov
xchg
jge
mov
retf
pop
cmp
add
imul
jl
jl
lds
jmp
mov
cmp
mov
inc
dec
scas
hlt
or
adc
ss
mov
cdq
jg
scas
test
rsqrtps
or
push
fidivr
(bad)
jecxz
push
xlat
sbb
fdivr
or
jnp
push
jmp
pop
inc
popf
call
mov
ins
xor
or
in
call
add
aam
sbb
add
sub
mov
sbb
fsubr
mov
mov
or
ja
out
hlt
pusha
adc
jmp
iret
pop
cwde
pop
add
aam
iret
(bad)
or
gs
xchg
inc
(bad)
xchg
enter
movs
inc
repz
sahf
in
les
test
push
cmp
inc
(bad)
jmp
xor
jnp
outs
stos
mov
pop
push
mov
scas
jnp
(bad)
dec
push
mov
adc
xchg
scas
jb
add
fcmovb
sub
push
jae
pop
mov
gs
(bad)
lods
cmp
or
sub
pop
leave
pop
sub
cli
movs
xchg
sti
push
adc
mov
stc
pop
repz
not
das
push
nop
mov
sub
stos
rcr
jl
in
pop
sub
out
pop
dec
mov
aaa
xor
inc
jmp
jne
mov
das
sbb
mov
jge
fwait
dec
stos
das
dec
inc
in
ds
pushf
xchg
outs
push
or
es
(bad)
jmp
sub
xor
or
adc
xlat
es
jge
cmp
push
ja
stos
or
aad
outs
ret
ret
les
dec
cmp
push
(bad)
imul
(bad)
js
addr16
jle
sub
out
pop
loope
shl
ins
xor
jno
retf
movs
int3
jne
add
and
mov
cmps
ins
fyl2x
mov
sbb
pushf
jp
mov
mov
dec
in
test
sub
jl
retf
push
scas
and
jmp
or
les
sbb
xor
jl
clc
(bad)
leave
jl
cmps
inc
ret
mov
pop
iret
mov
imul
out
js
repz
xor
ret
popf
mov
rcl
push
jecxz
pusha
(bad)
out
shl
dec
fimul
ins
lds
or
and
add
or
push
dec
or
shr
(bad)
fidivr
jmp
push
push
out
mov
nop
test
sub
test
mov
les
cmps
mov
mov
dec
inc
xchg
out
sub
sub
cld
test
or
imul
(bad)
adc
mov
fcomp
inc
sar
mov
mov
in
or
or
push
and
in
les
test
xor
sbb
fstp
jecxz
jle
jb
xchg
mov
xor
aas
mov
dec
mov
mov
mov
out
jne
(bad)
pop
xchg
dec
mov
mov
jb
jmp
jecxz
fcmovnu
int
mov
add
sbb
push
sub
inc
int
aam
cli
test
pop
or
push
stos
push
xchg
pop
icebp
xchg
pop
inc
mov
and
push
das
ds
mul
(bad)
pop
outs
pop
pop
jno
push
pop
das
push
call
(bad)
jg
xor
adc
ds
adc
mov
jns
and
cs
push
inc
cmp
pop
not
out
ficom
loopne
jp
fmul
in
inc
push
enter
out
movs
scas
into
loop
push
ins
or
mov
add
popa
cmp
inc
mov
fnstenv
repz
dec
inc
mov
sbb
lds
mov
mov
fistp
daa
mov
push
and
enter
in
out
out
fwait
pop
fnsave
sub
idiv
xlat
neg
dec
and
dec
push
pop
sub
inc
stos
das
add
xor
jae
cmps
cmp
xchg
dec
stc
pop
jmp
mov
or
jge
cmp
(bad)
shl
shr
ffreep
dec
cmp
fs
xchg
clc
jl
inc
push
cld
daa
cs
mov
mov
xchg
add
mov
fdiv
in
xor
pop
mov
xlat
sbb
out
popf
and
int3
(bad)
test
iret
int
imul
push
inc
fdivr
cmp
fistp
sti
loop
pop
pop
stc
jne
pop
pop
mov
dec
mov
ja
cwde
and
jnp
pop
outs
xchg
in
sub
cmc
add
into
aaa
movs
pop
inc
call
jb
push
jge
stc
aaa
fcomp
add
push
cld
push
sbb
xchg
or
adc
aas
xchg
xor
enter
jae
fs
scas
mov
xor
pushf
cmp
or
fisubr
ss
stos
cmp
into
add
cwde
and
inc
lock
sub
xor
sub
cmp
jnp
out
loope
dec
xor
add
hlt
das
push
aam
stos
in
push
mov
xor
adc
rcl
dec
sbb
test
ficomp
or
mov
mov
pop
out
jnp
std
int
int
mov
adc
pop
lea
popa
data16
aam
mov
mov
jmp
in
cmp
mov
xor
add
jmp
mov
jne
cmp
sub
xor
ret
icebp
popf
imul
inc
jp
test
xchg
push
repz
xor
cmp
cmp
push
or
jbe
in
pop
aaa
out
cmps
mov
pop
pop
mov
mov
les
iret
mov
loop
rdmsr
into
int
or
dec
cmp
mov
out
jae
pusha
fcomp
pop
into
mov
adc
in
sar
push
mov
ins
ja
cmp
stos
xchg
inc
mov
push
push
out
xor
addr16
push
repnz
ret
pusha
pop
xchg
out
mov
imul
sbb
ins
outs
mov
fbld
pop
cmp
mov
test
les
aaa
aam
rcl
dec
jmp
jl
dec
lahf
bswap
sub
xor
and
cwde
jge
aad
sbb
sahf
mov
and
inc
clc
cmp
out
outs
loop
sbb
and
mov
and
shl
cmp
sub
jno
mov
(bad)
out
inc
mov
push
shr
push
int
outs
xor
mov
push
cmps
popa
repnz
mov
in
mov
loopne
jne
jl
pop
shl
xchg
push
push
sub
(bad)
mul
cmp
dec
and
cmp
ficomp
mov
adc
scas
xchg
add
fdiv
cmps
inc
and
adc
ja
(bad)
popf
adc
or
aad
push
imul
ins
std
inc
leave
inc
jno
mov
cs
inc
jnp
mov
imul
jl
dec
adc
(bad)
xlat
add
pop
ss
xchg
shl
sub
mov
retf
jns
idiv
out
jbe
xor
fist
mov
call
cld
sbb
lods
mov
into
jge
and
loop
push
les
adc
dec
fwait
xor
data16
sbb
xchg
dec
cmps
xchg
sbb
jp
jl
jl
scas
dec
jo
push
ror
push
jg
jl
and
cmp
in
popf
dec
jecxz
mov
jp
and
inc
not
es
ja
dec
xchg
ins
rol
mov
mov
cmp
or
dec
xchg
mov
pop
pop
leave
mov
jg
jl
mov
imul
retf
push
add
mov
scas
stos
jnp
cmp
outs
or
cmp
ror
int3
ins
(bad)
sti
into
cmp
ja
jae
stos
idiv
outs
xchg
add
jle
cmc
cmp
inc
mov
fldenv
xor
jle
sub
out
dec
cmps
popf
push
pop
loopne
inc
in
lock
ret
jl
sahf
hlt
mov
movs
or
mov
mov
mov
shl
es
enter
sbb
xchg
sub
retf
iret
int
fwait
and
jno
jecxz
jg
fnstcw
and
xchg
es
pop
sbb
loopne
inc
ror
dec
(bad)
in
out
cli
adc
in
stc
loope
movs
stc
aas
mov
jp
sub
jns
retf
out
xchg
imul
arpl
cmp
je
xor
push
add
push
fdiv
xchg
inc
xor
dec
add
pop
cdq
fs
xor
rcr
mov
pop
out
sbb
ins
mov
pop
and
sub
outs
pop
adc
push
je
and
and
pushf
and
jne
dec
push
pop
outs
ins
call
leave
xlat
mov
mov
jg
mov
push
rcr
shr
clc
mov
sub
(bad)
cmp
in
xor
xchg
in
add
mov
xor
imul
sbb
ja
test
sbb
mov
stc
adc
mov
jnp
mov
xor
jo
pusha
lods
jmp
sub
(bad)
stos
or
inc
jp
int
adc
push
scas
sbb
idiv
sbb
xor
mov
cmps
dec
sbb
(bad)
jle
mov
add
sbb
jmp
xor
xchg
cmp
dec
cli
push
dec
out
fld
fcomp
sahf
adc
popa
repnz
movlps
mov
repnz
push
arpl
cmp
mov
ret
test
sub
dec
shr
mov
cmp
cmp
jae
mov
sub
dec
int
jmp
push
into
les
das
jnp
xor
jp
dec
and
leave
xor
aam
cmp
fsubr
mov
xor
fldcw
add
xor
gs
sbb
push
mov
fistp
shl
bound
imul
pop
ja
rol
mov
mov
push
add
icebp
add
rcr
aad
cmps
mov
add
inc
mov
fist
test
call
(bad)
add
jmp
outs
es
cmps
or
add
mov
sub
aam
cmp
adc
test
sbb
push
push
push
cli
seta
aam
stc
mov
and
jb
cdq
(bad)
popf
jle
sbb
push
jle
xchg
add
stos
lea
mov
jl
scas
xchg
sar
clc
out
push
mov
sub
fbld
fstp
in
and
add
popa
sub
jp
push
call
(bad)
into
call
xchg
addr16
psignw
adc
jp
mov
js
adc
mov
and
mov
std
mov
pop
inc
cli
gs
pusha
stc
mov
cmp
js
sub
fldenv
out
fwait
arpl
pop
les
dec
test
int3
cs
test
stos
sbb
push
icebp
sbb
push
clc
xchg
shr
sbb
sub
fmul
popf
dec
stc
sbb
or
mov
scas
adc
repz
shl
(bad)
movs
xor
push
test
mov
cmp
cmp
add
jge
movs
popa
mov
and
div
sbb
and
or
hlt
mov
shl
and
push
out
mov
or
push
cdq
rcr
lods
test
push
ror
jbe
data16
lahf
jmp
leave
cmc
push
leave
js
ret
cdq
pop
out
mov
pop
ds
inc
push
push
in
add
sbb
ja
mov
inc
ja
inc
xlat
jnp
loopne
fild
mov
(bad)
sub
outs
xor
int3
pop
sbb
pop
xchg
sbb
jecxz
iret
ror
jae
inc
adc
mov
adc
ficomp
call
jne
test
fdiv
or
loope
dec
lea
cmps
repz
push
xor
cmp
mov
sbb
inc
jnp
jle
xchg
or
xor
imul
and
and
cmc
or
xor
cs
outs
add
sub
imul
ja
retf
imul
and
push
stos
push
clc
mov
int3
jmp
mov
or
aas
add
mov
jg
shl
loop
aas
js
(bad)
jmp
sbb
xchg
sbb
movs
cmp
lods
test
daa
jecxz
fsubr
scas
pusha
stos
mov
mov
mov
or
dec
or
fsub
cwde
pusha
mov
sahf
in
ins
imul
pop
jbe
xchg
mov
mov
(bad)
retf
sti
(bad)
mov
retf
scas
imul
neg
sbb
lock
ret
lock
das
adc
adc
iret
idiv
cmp
jmp
mov
adc
test
push
mov
xor
(bad)
dec
inc
sbb
sbb
jbe
popa
or
push
or
push
rol
gs
scas
call
xchg
inc
pushf
sub
xchg
and
dec
stos
call
ret
leave
js
push
cmp
adc
sar
scas
fsubr
clc
sahf
popa
int3
sbb
popf
bound
sar
dec
mov
inc
inc
cs
and
adc
jmp
out
dec
das
and
sub
fistp
leave
mov
popf
xor
push
icebp
pop
mov
pop
add
push
cwde
fsubr
lock
in
lahf
lea
xor
dec
jp
imul
mov
data16
sahf
jl
mov
pusha
test
rcr
sbb
cld
inc
into
fwait
inc
push
or
aad
mov
sbb
(bad)
push
or
mov
jns
mov
push
idiv
push
into
cmp
ins
fsub
sub
call
adc
dec
pop
fs
push
pop
into
in
jl
movs
sub
mov
and
out
(bad)
bnd
jle
inc
cs
lea
pop
scas
cdq
push
outs
cmp
imul
inc
push
nop
fcmovbe
mov
and
inc
cmp
push
ficom
je
and
xchg
sbb
(bad)
pop
pop
test
je
inc
push
fcomp
ficom
(bad)
gs
push
inc
sub
mov
xchg
pop
inc
jb
stos
lds
pop
int3
inc
mov
ins
test
aad
or
(bad)
dec
cli
or
add
movs
(bad)
aas
inc
jb
mov
sbb
pushf
push
ss
push
cmp
popa
idiv
pop
push
adc
adc
pop
cmp
mov
xchg
mov
jbe
sub
ja
cmp
stc
dec
mov
cmp
adc
jmp
pop
jbe
add
aas
or
mov
out
push
cs
cmps
jo
adc
sub
ds
mov
push
icebp
cmp
and
jmp
push
mov
mov
stos
test
xchg
xchg
xchg
mov
cmps
mov
xor
sub
adc
std
add
jb
sub
adc
pop
outs
xchg
cmps
or
and
sub
dec
mov
mov
lods
out
pop
mov
or
and
and
(bad)
enter
or
movs
push
out
mov
push
mov
addr16
sbb
dec
scas
mov
pop
mov
ffreep
outs
fdivr
mov
or
sub
mov
sbb
out
pop
sbb
cli
in
dec
xor
push
aas
xor
jno
mov
jno
xchg
nop
xchg
inc
gs
or
stc
das
call
movs
loop
je
scas
ins
xchg
call
dec
xor
sbb
lds
pop
sbb
cmp
jecxz
mov
mov
mov
mov
hlt
jne
sub
lahf
aam
mov
dec
out
leave
(bad)
into
jmp
bnd
and
push
mov
stc
adc
jae
mov
cwde
adc
mov
mov
inc
pop
adc
cli
pushf
test
(bad)
push
sub
cmp
push
adc
add
mov
repnz
lods
push
inc
xor
stos
test
stos
mov
movs
xlat
test
push
loope
call
(bad)
mov
neg
outs
sbb
sbb
aad
jmp
stos
xchg
add
sahf
jno
cmc
shl
ins
call
or
jle
test
inc
ror
push
pop
mov
les
push
jbe
mov
mov
xchg
sub
pop
mov
in
les
imul
sbb
sbb
cs
xchg
movs
sahf
es
push
pop
inc
fisub
and
enter
cmp
stos
or
add
(bad)
icebp
pop
ins
xchg
stos
dec
vprotq
pop
pushf
pop
mov
cwde
jae
pop
pop
std
js
xchg
pop
(bad)
(bad)
mov
scas
pop
mov
mov
fstp
and
inc
(bad)
int3
not
mov
inc
mov
outs
push
adc
out
(bad)
xlat
sub
imul
add
cmps
movs
rcl
das
jmp
loope
movs
loope
cdq
int3
pop
shl
push
xchg
movs
ficomp
in
dec
mov
mov
jl
mov
cdq
xchg
pop
jno
cmp
stos
jmp
adc
mov
push
pop
arpl
xlat
(bad)
gs
inc
sub
retf
jge
jb
arpl
(bad)
mov
psllw
les
mov
mov
sti
jmp
scas
imul
mov
mov
pop
lods
gs
cmp
imul
sub
outs
pop
cld
les
jmp
fild
sbb
and
and
inc
fdivr
sub
xchg
and
dec
dec
sbb
rcl
xor
or
imul
push
jp
push
xor
and
mov
mov
sti
repz
add
add
sbb
stos
or
mov
jl
and
scas
scas
sub
sub
arpl
lahf
inc
cmp
push
inc
dec
bound
(bad)
cli
push
push
jle
push
sar
mov
push
dec
aaa
or
mov
xor
dec
imul
mov
and
mov
test
arpl
fist
retf
cmp
sub
mov
call
mov
adc
cs
loope
pop
call
aas
idiv
push
xor
mov
scas
cs
mov
sar
mov
test
fisubr
push
add
lods
adc
shl
mov
pop
stos
jmp
call
mov
dec
outs
ror
mov
jns
int
push
cmps
scas
jb
cwde
mov
mov
xlat
or
inc
cmp
leave
leave
add
cs
call
jnp
xchg
fsubr
addr16
test
xchg
fisttp
int3
cmp
outs
jmp
adc
je
inc
adc
mov
jp
push
stc
outs
and
push
call
sysexit
add
adc
dec
mov
aas
push
jl
shr
sub
jge
sahf
mov
dec
cld
(bad)
jmp
cdq
sbb
push
mov
fild
pop
mul
xchg
sub
repz
mov
loop
popf
call
popa
addr16
sub
jb
pop
fs
sbb
inc
in
cmp
les
xchg
stos
in
mov
sub
jno
sbb
inc
out
fsubr
lods
rol
(bad)
scas
data16
sbb
lds
retf
out
xchg
aad
imul
inc
adc
dec
popa
xchg
sbb
pop
aas
xor
scas
mov
dec
pusha
fsubp
das
jmp
aam
cmp
fs
jnp
cdq
gs
das
mov
adc
jo
lea
lea
(bad)
pop
push
(bad)
cvtdq2ps
xchg
mov
mov
xor
cwde
sahf
pop
and
push
cmp
mov
cmp
jle
mov
inc
inc
xor
dec
fmul
fild
pop
and
test
dec
loopne
into
not
jno
outs
out
add
mov
movs
jp
mov
pop
leave
ja
lds
test
popa
in
int
xchg
sahf
js
out
lea
ficom
cs
enter
mul
cmp
and
pop
cs
(bad)
shr
dec
push
fisttp
ss
push
mov
pop
sbb
loop
add
xchg
mov
or
cdq
ja
inc
call
popa
stos
xor
jp
add
cmps
es
daa
and
cmps
add
xor
dec
mov
jmp
and
out
ss
int
adc
cmp
neg
test
dec
ins
shl
rcr
xlat
int3
mov
mov
pop
fs
fwait
cmps
mov
jmp
mov
retf
or
or
mov
mov
mov
movs
fisubr
cmp
cmp
mov
rcr
addr16
jne
adc
ins
push
aam
sub
and
dec
push
xchg
push
mov
jl
sub
mov
into
repnz
jg
cmp
add
xor
or
mov
mov
xchg
adc
mov
add
rol
inc
stos
out
and
push
jbe
imul
je
and
inc
movs
dec
mov
dec
outs
push
sub
mov
pop
iret
fsubr
ret
mul
clc
lea
mov
push
mov
les
loop
mov
imul
int
lea
loopne
inc
sbb
lahf
movs
jmp
add
outs
xchg
lea
scas
retf
mov
fs
xor
dec
push
jne
push
pop
and
out
inc
in
dec
mov
cmp
xor
call
jbe
and
push
ja
add
lock
sub
cmp
pop
repnz
dec
jge
pushf
aam
arpl
fdivr
push
xchg
jmp
test
mov
dec
(bad)
movs
jl
arpl
jmp
inc
outs
ja
sbb
shr
mov
sti
aad
enter
pop
pop
xor
packuswb
adc
xor
imul
(bad)
clc
pop
xor
dec
xor
movs
loop
fcomp
enter
adc
pop
aam
not
in
add
cmp
sub
int3
push
push
repz
ror
stos
cmp
inc
fst
dec
xor
add
pop
mov
addr16
jb
ins
pusha
aad
rcr
xor
arpl
stos
sub
hlt
sub
pop
dec
into
jmp
jle
sahf
cs
scas
inc
add
test
das
mov
sbb
mov
(bad)
xchg
rcl
sub
push
xrelease
pop
jg
fsub
mov
xchg
mov
in
inc
or
pop
rol
jnp
lahf
(bad)
stos
mov
inc
mov
mov
mov
jno
mov
mov
pop
pop
les
in
jne
jnp
lods
push
aad
push
xchg
inc
mov
jmp
jno
movs
cmp
push
jle
xchg
xor
or
jmp
js
xchg
popa
sbb
xchg
movs
xchg
xchg
cld
rol
inc
xor
lahf
mov
int3
xor
or
and
pop
sbb
mov
sub
hlt
daa
mov
mov
pop
sti
push
mov
jp
push
(bad)
test
jmp
arpl
mov
cmc
cmp
repz
mov
push
gs
pop
test
add
pop
jecxz
test
jns
enter
out
out
xchg
aad
push
div
mov
adc
dec
xchg
mov
(bad)
call
cmp
fldcw
mov
xchg
pusha
cmp
aam
retf
int
xor
dec
jne
sub
(bad)
adc
push
or
fwait
inc
stos
sti
xchg
popa
xor
pop
(bad)
arpl
adc
sub
pushf
push
cmps
jmp
or
cdq
mov
cvtsi2sd
xchg
mov
inc
loope
scas
xor
stc
push
sbb
sahf
inc
or
and
push
dec
pop
inc
jo
retf
sti
arpl
(bad)
xor
ja
les
jo
lods
adc
xor
sbb
fxch
or
or
in
(bad)
pop
in
xchg
mov
in
sub
jnp
jbe
jecxz
or
cmp
inc
int
clc
add
jmp
ret
(bad)
pop
leave
dec
xor
test
(bad)
or
into
push
inc
pop
into
cwde
xlat
shl
sub
sub
dec
clc
jns
mov
inc
(bad)
into
xor
imul
adc
mov
les
mov
xchg
je
jecxz
scas
push
xchg
loop
sbb
dec
out
and
daa
jne
cmps
xchg
fidivr
xor
add
or
cmp
cmp
mov
in
push
push
dec
cld
xchg
dec
push
xlat
cmp
adc
cli
or
stc
adc
dec
pop
mov
sbb
(bad)
mov
cmp
loope
pop
adc
daa
test
push
retf
mov
pop
js
sar
lock
cs
je
mov
jns
sub
rol
lods
ror
cdq
mov
cmps
dec
sbb
shr
mov
jmp
cs
loope
dec
es
cld
jae
stos
sbb
mov
jl
push
and
pop
push
mov
mov
ins
in
push
cmp
pop
cmps
cmp
jle
rol
add
adc
stos
inc
outs
mov
cmp
mov
dec
mov
scas
movs
or
scas
xor
movs
xor
icebp
and
add
mov
stos
and
sbb
fist
cmc
pop
mov
sub
shr
test
shr
xchg
inc
enter
mov
fwait
(bad)
cld
xor
std
popa
ret
addr16
pop
or
mov
sbb
fcomp
adc
ds
add
arpl
and
push
push
ins
dec
sub
popf
sahf
and
jno
call
ins
or
sub
sub
mov
movs
push
loop
scas
pop
retf
popa
jo
int3
out
mov
inc
not
cmp
test
xchg
and
jae
cmp
dec
imul
imul
or
jmp
cld
add
add
div
mov
cmp
or
das
xchg
pop
mov
ja
cmps
not
mov
fcmovbe
mov
sub
cld
cmp
ret
inc
push
pop
cmc
sub
fcom
push
fwait
inc
add
shl
sar
stc
cmp
test
out
fidivr
xlat
fadd
rol
push
add
lock
jno
test
ds
enter
jae
jmp
mov
retf
stos
popa
xor
stc
in
mov
add
out
dec
sti
push
dec
push
sbb
ss
mov
xchg
sbb
test
cwde
sub
mov
retf
shl
out
xlat
out
mov
aam
popf
int3
adc
add
sahf
xchg
imul
cmp
in
lods
jp
inc
jecxz
lock
les
jmp
mov
iret
out
mov
push
aad
leave
mov
les
aam
(bad)
pop
dec
aam
repz
sbb
pop
pop
mov
jns
(bad)
fwait
call
in
outs
jno
in
and
xchg
test
cdq
pop
ret
dec
pop
or
nop
ins
mov
into
into
pop
les
pop
sar
and
ret
cs
not
stos
sub
mov
pop
cmp
pop
pop
and
inc
nop
xlat
mov
stc
and
sbb
cmp
jne
out
push
xchg
call
or
icebp
cmp
add
dec
jno
imul
sub
out
mov
pop
lock
pop
add
sbb
mov
stos
cs
and
adc
add
outs
mov
add
or
fiadd
data16
in
fs
fdiv
dec
cmps
mov
not
xor
in
xchg
addr16
scas
retf
push
mov
ds
dec
cmp
cmps
mov
jb
xor
jbe
mov
repnz
adc
cmps
mov
or
jb
jg
bound
fidiv
in
stc
push
jge
xchg
leave
push
cmc
sbb
and
pop
push
popa
pop
loop
call
jmp
ins
ret
iret
push
ficomp
lds
sbb
jg
hlt
pop
scas
popa
sbb
cdq
sub
mov
int
inc
xchg
pop
lds
outs
ret
bound
cdq
in
mov
sub
push
push
pusha
pop
outs
xchg
sub
xchg
outs
loope
ret
hlt
cmp
inc
push
or
stc
js
inc
cmps
xchg
adc
icebp
mov
je
in
cli
sbb
stc
sub
dec
xor
mov
leave
or
inc
test
inc
cmp
sti
mov
sti
aad
push
pop
ror
push
push
out
xchg
icebp
pop
mov
mov
inc
push
push
add
fisubr
invlpg
sbb
jp
sub
cli
cmp
and
mov
mov
pop
div
adc
fsubr
data16
mov
sbb
aad
test
test
mov
mov
stos
inc
not
das
mov
fidiv
out
arpl
jbe
and
sti
jo
dec
call
mov
scas
xchg
push
add
sub
adc
sub
sub
mov
out
mov
jl
fcmovbe
adc
test
jae
xchg
stos
test
loope
ja
(bad)
test
int3
cwde
mov
jecxz
icebp
mov
movs
mov
scas
daa
jecxz
pop
sub
push
aad
jle
jb
rcr
mov
sbb
push
(bad)
sub
sub
stos
and
dec
cmp
shl
adc
mov
in
outs
push
mov
sbb
int3
cmps
stc
loope
cwde
cwde
jp
int
fucomp
bound
sub
iret
and
ja
je
xor
lds
clc
fsubr
add
(bad)
jb
xor
popa
and
icebp
(bad)
in
cmc
sti
xchg
xor
xor
push
push
lods
adc
adc
sub
sti
jnp
sbb
pop
push
popf
dec
jne
adc
adc
jmp
inc
fs
shl
(bad)
out
push
xor
test
cmp
adc
das
es
and
jnp
fsubr
call
nop
fild
icebp
cdq
sbb
lea
dec
mov
shr
xchg
cmp
mov
sbb
jg
xor
xchg
daa
js
nop
cwde
mov
mov
rcl
mov
adc
fcom
and
dec
je
jne
and
pop
ja
inc
retf
sbb
fdivr
loope
push
adc
pop
mov
mov
fwait
dec
lea
out
add
adc
nop
rcr
dec
lea
(bad)
scas
ror
pop
sar
cmps
icebp
fldenv
cmp
repz
xor
push
or
ss
jecxz
xor
(bad)
dec
loope
cmps
pop
xchg
aas
clc
aam
clc
sbb
jmp
cmp
pop
push
(bad)
mov
shl
xchg
xchg
data16
sbb
add
cs
ss
xchg
int3
fisttp
inc
jecxz
shl
idiv
mov
jl
sbb
aad
mov
ror
scas
pop
sub
pop
mov
push
psubq
ret
mov
xchg
loopne
xchg
push
std
lea
call
call
shr
xlat
popa
lahf
cwde
push
dec
fistp
or
int3
loopne
sub
push
push
in
sahf
rol
push
out
sbb
call
in
jnp
cmp
mov
sub
and
mov
repz
push
leave
shl
cmp
sub
xchg
mov
cmp
sub
adc
aad
cmp
stos
mov
jae
mov
cld
jo
shl
pop
cmps
pop
leave
cmp
loopne
jbe
(bad)
in
std
sbb
(bad)
mov
jbe
pop
std
jno
(bad)
xchg
je
dec
adc
(bad)
aad
push
jp
dec
mov
ins
or
fidivr
pop
push
sub
adc
fimul
ins
(bad)
mov
sbb
pop
sub
push
lea
clc
loop
or
sbb
jb
(bad)
ins
dec
repz
add
cwde
sbb
std
jp
mov
push
addr16
jb
int3
call
std
popf
nop
rcl
adc
(bad)
hlt
cmp
inc
enter
sub
ret
daa
rol
jmp
adc
mov
sbb
fcomp
in
jnp
jnp
and
clc
lods
out
add
xor
movs
mov
xor
inc
pop
daa
xchg
test
inc
xchg
xchg
out
and
vhsubps
repz
ss
rcl
xchg
scas
neg
out
push
inc
test
push
pop
fwait
dec
in
add
retf
mov
es
test
stc
out
bound
xor
add
loope
or
into
push
mov
mov
adc
and
(bad)
push
aaa
inc
pop
lods
or
jle
inc
frstor
adc
movs
mov
jl
movs
cld
fdivr
retf
loopne
sar
dec
sar
pop
cli
jno
(bad)
ins
inc
call
xchg
inc
je
push
or
stc
retf
and
inc
call
idiv
fisttp
mov
pushf
pop
pushf
mov
sbb
push
or
xchg
adc
(bad)
pop
inc
jle
in
je
imul
outs
push
rcl
loop
or
push
(bad)
leave
jae
xchg
jmp
add
repnz
into
out
sbb
push
dec
pop
mov
ja
call
and
mov
rcl
sub
into
mov
inc
iret
loope
aam
in
adc
cmp
bound
icebp
ss
pop
xchg
sub
sbb
fimul
movs
aaa
push
dec
daa
inc
dec
jo
(bad)
pop
cwde
mov
cmp
or
inc
mov
adc
mul
mov
dec
aas
mov
mov
cld
xor
scas
sbb
call
jp
arpl
push
push
dec
shl
popf
dec
neg
lods
imul
jbe
js
inc
(bad)
mov
ds
ss
sti
(bad)
(bad)
pop
ins
xchg
mov
movs
push
xlat
retf
jmp
movs
repz
push
(bad)
mov
sti
jae
scas
jo
addr16
pop
rol
pushf
adc
mov
pop
or
gs
jl
pop
inc
ret
in
retf
mov
cmp
dec
jns
mov
and
adc
aam
adc
or
jge
or
add
sub
inc
adc
das
jg
lods
adc
call
mov
inc
cmp
push
sbb
rcr
call
pop
jbe
pusha
cli
not
imul
(bad)
cmps
add
cmp
inc
mov
and
aaa
popf
je
xor
imul
jecxz
enter
stos
xchg
push
retf
jle
sub
cmp
mov
sbb
jle
cmp
push
push
rcl
sub
enter
jno
jns
pop
xchg
enter
xchg
gs
inc
and
arpl
dec
adc
add
paddsw
lea
xchg
enter
add
aad
lahf
into
scas
gs
mov
xor
je
adc
or
cmps
mov
jne
push
add
add
call
sti
and
mov
sti
fdivr
cmc
pop
jmp
jbe
arpl
ins
repnz
or
jmp
inc
sbb
outs
pop
outs
aad
sar
cli
repnz
mov
sub
and
arpl
mov
add
dec
or
cli
cdq
cdq
sbb
mov
(bad)
into
pop
mov
sub
icebp
leave
or
lock
ins
test
adc
adc
xchg
stos
out
xchg
pushf
mov
shl
mov
add
(bad)
les
dec
or
arpl
or
(bad)
mov
ds
push
jge
inc
lods
out
fld
cwde
je
ret
mov
xchg
sbb
mov
adc
out
jg
push
jns
fwait
mov
sbb
fcom
lock
cmp
jo
aaa
repz
xchg
sub
cli
dec
imul
add
lahf
nop
xor
push
pop
gs
imul
cmp
mov
inc
pop
or
jecxz
fcom
test
and
mov
mov
ins
inc
pop
lock
sbb
xor
jl
xchg
or
daa
pop
dec
ss
outs
std
mov
xor
jl
popf
pop
scas
sahf
fist
imul
test
fisub
mov
call
pop
jmp
rcr
cmp
ret
ins
(bad)
push
jae
(bad)
inc
mov
and
push
fs
pop
mov
mov
fcomp
ins
inc
cdq
dec
sar
mov
in
or
jmp
fwait
loopne
mov
and
push
jo
add
imul
cmp
ret
imul
mov
test
fsin
add
test
ret
std
cs
mov
test
adc
mov
movs
dec
icebp
mov
in
ja
dec
mov
loopne
sbb
pop
jb
jb
sbb
push
fild
mov
not
scas
push
jmp
fmul
imul
ret
addr16
inc
movs
mov
inc
mov
push
mov
lahf
(bad)
repz
outs
aam
add
daa
and
std
xor
sbb
(bad)
dec
or
(bad)
cmp
xchg
sbb
cmp
xor
sbb
mov
cli
clc
cli
mov
out
or
call
ret
pop
(bad)
mov
out
push
cs
(bad)
mov
mov
(bad)
mov
pushf
clc
in
adc
movs
loopne
ficom
push
retf
lahf
add
xor
movs
push
pop
push
adc
fst
mov
pusha
ja
mov
lock
call
xor
push
sub
xchg
mov
dec
or
cmp
imul
push
cmp
repz
mov
clc
push
shl
cwde
push
scas
outs
mov
popa
adc
jo
mov
add
xor
fwait
adc
cmps
mov
pop
xor
jmp
add
popa
or
jecxz
mov
fs
imul
dec
je
(bad)
mov
sbb
mov
pop
add
mov
pop
pop
retf
sbb
dec
mov
test
popa
mov
sbb
dec
sub
xchg
aas
cmp
pop
jp
mov
push
addr16
(bad)
sahf
cdq
imul
mov
sub
pop
mov
mov
out
cwde
js
fstp
or
xchg
mov
shl
je
ret
push
(bad)
pop
xor
lock
mov
adc
gs
cmp
std
dec
stc
mov
dec
pop
jp
add
sbb
push
inc
les
pop
mov
or
and
push
sub
daa
sbb
mov
test
jmp
dec
loopne
xor
out
xchg
outs
push
and
mov
in
test
push
mov
push
ins
in
and
dec
pop
rcl
jns
fwait
rcr
xchg
adc
push
mov
leave
jl
lods
sar
inc
test
cmps
les
jg
shl
cmp
lahf
sti
push
jg
inc
dec
or
xor
jmp
icebp
std
inc
js
cmps
dec
out
mov
xchg
jmp
fld
and
jecxz
retf
inc
sar
adc
mov
bound
jae
jg
xor
push
in
ror
xchg
mov
adc
std
gs
or
mov
fucomi
test
imul
cmps
inc
(bad)
leave
into
sbb
pop
pop
rol
mov
mov
jns
xor
mov
jmp
xor
push
jg
cmp
outs
pop
loopne
inc
cmp
mov
sbb
cmc
cmp
inc
fs
cmp
leave
mov
cdq
dec
ja
adc
lds
adc
test
cmps
pop
fimul
shl
inc
jno
fwait
je
adc
push
ds
mov
test
in
int3
stc
add
cmps
adc
dec
mov
sbb
cmp
stos
cmp
fmul
adc
mov
or
test
sbb
test
ret
inc
and
ins
pop
not
mov
aaa
dec
jno
shr
sbb
ins
jno
int3
xchg
xchg
outs
pop
je
je
lods
jmp
aas
pop
adc
repnz
iret
into
aam
jp
xchg
cdq
test
jne
push
pop
inc
mov
pop
mov
push
test
xchg
add
std
arpl
addr16
sub
push
jnp
and
lds
and
hlt
xchg
jge
retf
mov
ins
mov
push
pusha
bound
mov
rcl
xor
jbe
js
xchg
push
mov
(bad)
shl
cmps
dec
or
movs
push
ins
rol
aad
std
mov
cmc
ja
xchg
std
jg
pop
cs
adc
mov
mov
cmc
push
test
sbb
pop
arpl
or
loope
pop
mov
outs
mov
xchg
cmp
xor
mov
outs
dec
gs
jg
add
mov
push
imul
(bad)
jns
dec
pop
(bad)
ret
aas
imul
stc
leave
xor
cs
sti
add
loope
sahf
pushf
push
and
mov
and
imul
push
arpl
in
dec
push
mov
fucomp
xchg
add
cmp
js
add
nop
imul
sub
adc
fdivr
inc
push
inc
pop
mov
loop
call
mov
iret
ret
inc
push
add
(bad)
js
push
sub
scas
mov
add
dec
or
mov
in
mov
xchg
mov
xor
mov
or
pop
lahf
in
mov
call
cdq
and
or
add
je
loop
in
aad
pop
out
xchg
push
and
jbe
shl
iret
hlt
aaa
mov
mov
out
adc
xchg
adc
stos
int
je
sbb
in
ror
jmp
sbb
mov
jno
lds
mov
jae
leave
bound
fist
mov
dec
mov
mov
inc
jmp
sbb
fmul
jg
add
in
xchg
inc
int3
stos
ins
movs
cmp
sbb
sbb
jl
jno
mov
jg
push
mov
idiv
pop
fisub
mov
cmp
retf
pushf
fcom
idiv
push
aad
aaa
and
cmp
outs
sbb
or
call
or
std
xchg
clc
xor
sub
popf
daa
pop
xchg
cmps
pop
movs
mov
out
fild
mov
lods
inc
iret
sbb
sub
add
loopne
aas
or
cmps
in
call
jns
aas
mov
repz
push
mov
xor
arpl
xlat
dec
cmps
(bad)
adc
mov
dec
dec
lahf
xchg
and
loope
inc
sbb
cmps
mov
loopne
in
mov
mov
jnp
jo
int
or
or
inc
dec
imul
adc
lock
inc
and
into
jle
sub
sbb
jge
(bad)
das
xchg
in
movs
out
or
call
inc
xchg
ret
rcr
dec
sub
jno
push
cmp
ins
bnd
int3
clc
bnd
sbb
mov
or
loopne
dec
pusha
pop
mov
xchg
lods
xchg
mov
mov
shl
enter
and
scas
jo
dec
add
mov
inc
push
popf
int
es
(bad)
mov
loope
xchg
xchg
or
sbb
sbb
pop
cmp
out
sub
pop
fsubr
push
(bad)
cmp
inc
stos
inc
pop
lds
and
iret
stos
cmp
popa
xchg
pop
adc
sub
or
and
xchg
lea
push
pushf
inc
aaa
mov
jge
and
add
mov
mov
add
or
dec
jle
cmps
jmp
dec
xchg
pop
arpl
inc
nop
lods
iret
popf
fs
es
pop
cmp
xlat
pusha
into
adc
lsl
movs
pop
or
push
fs
arpl
inc
fimul
and
push
leave
iret
push
jl
add
lods
js
push
out
adc
ds
mov
mov
fdiv
pop
pushf
pop
movs
outs
(bad)
xor
or
es
push
or
mov
jge
add
xor
xor
hlt
nop
inc
xlat
sub
mov
push
imul
frstor
test
xor
sub
adc
fwait
sbb
or
xchg
outs
lea
stc
ffreep
mov
pop
cmp
mov
cmp
in
cmp
nop
aas
out
scas
repnz
rcl
pop
pop
aam
cld
mov
ficom
mov
mov
out
inc
repnz
neg
outs
retf
mov
adc
push
in
repnz
push
or
mov
test
push
fldenv
in
cmps
cmp
adc
and
mov
mov
out
fisttp
outs
or
sub
iret
loop
and
cmp
jo
inc
jbe
lea
aas
mov
push
imul
mov
sbb
test
rcr
add
in
jmp
mov
jg
mov
lea
fwait
mov
lock
mov
(bad)
lahf
jns
(bad)
and
test
ret
mov
inc
inc
lds
push
fcomip
jg
leave
pop
mov
int
xchg
data16
fldenv
mov
retf
out
cmp
dec
mov
out
addr16
mov
cmps
mov
dec
les
xchg
mov
sub
rcl
psrlw
into
adc
xor
aas
lock
mov
xchg
aaa
repnz
bound
push
and
jl
pop
push
xor
mov
pop
mov
addr16
mov
int3
inc
mov
mov
mov
imul
call
inc
add
sti
sub
pop
mov
add
dec
xor
mov
pop
jns
retf
scas
mov
pop
mov
aam
mov
psubusw
dec
mov
fldenv
icebp
aam
pusha
iret
sbb
add
mov
fisubr
mov
daa
dec
and
dec
loope
sub
push
xchg
pop
aad
jge
inc
xchg
clc
(bad)
lea
sti
dec
cmp
imul
stos
mov
mov
clc
dec
pop
pop
add
sahf
pop
sbb
loope
jne
rol
inc
and
cmp
jg
dec
sub
inc
mov
add
aad
xor
sbb
and
push
jp
jnp
mov
lds
aaa
outs
pop
jmp
cli
dec
aam
add
aas
popf
adc
jns
test
loop
sub
rol
es
adc
cmc
xor
add
dec
ret
xchg
sar
fidivr
stos
repz
xchg
call
call
push
jae
add
push
push
stos
shl
cmps
cmps
in
or
adc
ficomp
shr
mov
fisubr
push
push
pop
ret
cdq
std
push
sub
add
inc
inc
test
fdiv
and
outs
push
mov
imul
cmp
cmp
loop
gs
je
push
ficomp
mov
adc
push
cmp
(bad)
jecxz
cmp
repnz
scas
or
and
test
xchg
xor
fistp
xchg
aad
or
ret
xor
fwait
mov
push
sbb
data16
xor
arpl
mov
retf
push
loope
pop
ret
adc
scas
sbb
mov
mov
mov
sub
mov
push
call
test
cmp
in
sub
sbb
ret
sub
js
jnp
and
test
xor
xchg
jbe
add
mov
or
push
cli
pop
ror
call
inc
mov
fidivr
in
stc
mov
imul
pushf
jno
out
int
enter
add
xchg
cmp
cmp
jmp
or
sbb
jp
int
out
ins
sub
dec
dec
nop
mov
shl
popa
mov
xor
and
ins
and
ss
repz
aam
cmp
sub
rcr
pushf
ins
loop
out
add
fcom
push
xchg
sbb
sbb
ins
movs
xchg
out
in
jmp
ins
cwde
(bad)
(bad)
stos
popa
lahf
push
test
mov
ja
iret
jp
push
adc
ret
sbb
mov
jp
rcl
ja
mov
test
(bad)
push
(bad)
adc
lock
lods
fild
loope
outs
ds
mov
jge
push
out
movs
push
jno
in
jae
jb
sub
mov
push
ins
mov
loop
pop
cmps
gs
adc
pop
inc
push
cs
(bad)
int3
int
push
icebp
mov
ja
ss
pusha
mov
icebp
and
test
mov
xor
fs
or
mov
dec
mov
(bad)
jle
inc
shl
xchg
mov
ss
lods
add
lea
xor
lds
push
gs
adc
in
sbb
ret
pop
sbb
inc
repz
popf
sahf
inc
dec
pusha
or
lds
lock
jl
jp
(bad)
jg
mov
imul
sub
stos
into
mov
adc
push
cmc
lock
mov
icebp
add
cmp
popa
loop
or
mov
jns
aam
jmp
stos
jae
in
ja
adc
mov
and
jns
mov
add
jne
(bad)
xchg
or
xchg
je
gs
xor
stos
ins
popf
mov
fisttp
sub
sub
jge
je
in
(bad)
je
mov
lahf
mov
outs
dec
inc
out
push
or
lea
jge
nop
js
fisubr
jl
outs
inc
test
js
push
inc
test
pop
(bad)
sbb
cmp
cli
and
ficomp
aas
xor
loope
dec
inc
ds
fsubr
cmp
lods
jge
retf
add
ret
sbb
lahf
enter
xchg
mov
in
(bad)
mov
lods
iret
add
sti
mov
sbb
mov
and
(bad)
leave
cpuid
cld
lods
adc
or
cmp
add
push
xor
nop
inc
shl
mov
and
xchg
pop
sub
add
imul
mov
mov
mov
cmc
push
loop
add
mov
add
mov
add
fnstsw
add
sbb
mov
not
push
dec
xor
test
or
pop
push
jmp
int
(bad)
fcom
(bad)
call
adc
push
mov
add
add
inc
pop
lock
ds
pop
(bad)
mov
jae
sbb
cmp
add
cmps
jecxz
or
test
ins
fisub
cmp
stc
fwait
cmps
movsx
sbb
jo
xor
pop
fsub
cwde
stos
es
xchg
ffreep
push
push
cdq
neg
mov
pop
mov
adc
sti
in
inc
movs
(bad)
scas
sub
mov
pop
lea
or
xor
call
test
test
(bad)
cmps
cvtdq2ps
mov
inc
cdq
push
loopne
test
test
(bad)
std
add
or
sbb
in
jmp
cmp
mov
test
inc
fcomp
mul
cmps
idiv
out
pushf
outs
movs
jbe
movs
icebp
into
mov
and
mov
loopne
into
scas
sti
and
xor
xor
jns
mov
push
or
jne
jge
movs
cmp
pop
call
in
pop
clc
add
ret
mov
sbb
jmp
retf
pop
call
pop
pop
cwde
cmp
out
popf
scas
add
inc
pop
aaa
push
repnz
xchg
adc
pop
ret
(bad)
test
mov
pop
das
fiadd
adc
dec
jecxz
xchg
jle
repnz
pop
xor
mov
pop
test
mov
mov
mov
push
in
sub
inc
inc
push
or
add
popa
pop
(bad)
xor
adc
mov
or
push
sbb
cmc
inc
popf
mov
arpl
icebp
push
fidivr
test
jno
sub
icebp
or
xor
sbb
mov
shl
xchg
xchg
test
stc
jnp
loopne
in
aad
add
aam
mov
dec
mov
mov
xor
cs
and
mov
(bad)
div
mov
fwait
ins
jns
test
dec
push
dec
mov
retf
jecxz
mov
add
dec
inc
int3
movs
mov
add
adc
arpl
pop
or
adc
ins
cmp
pop
pop
es
xchg
fdiv
mov
jmp
mov
jmp
xlat
into
cwde
call
pop
cdq
popa
cli
dec
mov
retf
repz
mov
jnp
inc
mov
repz
shl
or
lahf
gs
scas
jmp
inc
cmp
add
mov
mov
pop
icebp
or
je
jnp
std
ja
pop
(bad)
ins
ins
push
inc
push
gs
js
and
jbe
cmc
push
fidiv
stos
mov
or
mov
and
data16
aas
(bad)
js
xor
mov
in
or
cmp
xchg
xor
ds
pop
mov
mov
cmp
gs
stos
repnz
aas
test
push
xor
xchg
xor
outs
pop
adc
xor
xchg
hlt
rol
xor
ret
call
dec
ds
loopne
fldln2
jb
clc
jns
aaa
retf
sub
cmps
iret
add
fdiv
pop
push
cmp
mov
test
cmp
(bad)
(bad)
aam
dec
and
ret
rol
xor
jne
pop
jb
inc
pop
jns
jle
mov
leave
mov
(bad)
jl
inc
scas
xchg
int
mov
(bad)
pop
cmp
or
scas
shl
inc
sbb
js
mov
push
xchg
fldenv
lods
cmp
mov
out
cmp
std
adc
aam
addr16
sbb
arpl
fwait
adc
xchg
sbb
fwait
jnp
pop
xlat
gs
clc
cmp
or
outs
sbb
mov
sub
or
inc
cmp
or
clc
(bad)
fdiv
ds
outs
pop
imul
xlat
retf
ret
and
pop
inc
test
dec
dec
sbb
push
fistp
lods
loope
std
pop
pop
mov
out
lods
into
xchg
xchg
gs
xor
ins
mov
xchg
push
mov
jnp
pop
push
xor
psubb
movs
inc
test
sar
sub
pop
xchg
xchg
stos
stos
ins
jl
aaa
ja
cmps
mov
daa
mov
and
push
or
pop
inc
shl
xchg
out
xchg
cdq
scas
dec
cli
push
popa
test
dec
lock
and
je
in
cmp
aad
push
sbb
xor
movs
jne
inc
mov
es
jo
dec
adc
test
mov
aas
xor
mov
test
imul
sbb
xor
and
ss
mov
adc
push
push
cmp
push
rcr
push
data16
movs
or
lea
inc
lods
or
dec
adc
sahf
popf
mov
sub
inc
push
xchg
scas
and
js
hlt
mov
scas
push
jp
jb
shl
mov
test
xchg
push
dec
scas
adc
lock
mov
icebp
xor
sbb
leave
jmp
xor
cmc
jnp
pop
int3
cld
(bad)
outs
lds
mov
int
mov
xchg
pop
movs
push
and
popa
aas
enter
mov
xchg
sar
jnp
clc
or
jmp
ins
pop
ror
sub
gs
dec
cmps
cdq
push
pop
sbb
or
or
imul
sbb
mov
and
repz
mov
(bad)
sbb
imul
push
adc
imul
cwde
imul
into
push
lea
sub
add
adc
dec
dec
fidiv
out
or
outs
mov
jbe
cmp
pop
inc
aaa
adc
jno
ret
mov
imul
mov
fiadd
(bad)
cmp
out
cli
xchg
sub
pushf
add
aam
jbe
jle
mov
inc
test
faddp
sub
mov
or
sub
fwait
pop
leave
test
test
cmp
test
jle
dec
lds
add
sbb
(bad)
push
xchg
inc
out
jp
xchg
dec
repz
shl
add
ss
retf
cmp
cmp
jle
jno
or
addr16
lods
add
lods
adc
mov
jbe
ror
and
sbb
aaa
test
cmp
sub
jge
or
test
adc
pop
cmp
sbb
push
rcr
(bad)
jmp
out
mov
mul
or
jmp
outs
sar
sbb
in
xor
xor
lods
cmp
inc
cs
movs
lock
(bad)
cmc
fcom
(bad)
dec
imul
adc
xor
scas
adc
pop
test
mov
pop
mov
xchg
lea
cwde
sbb
lahf
sbb
mov
xor
inc
inc
repnz
int
add
pop
je
lock
sbb
ret
test
fucompp
jae
add
pop
mov
xchg
mov
mov
xchg
and
add
fistp
shl
cwde
cld
xchg
xor
inc
nop
dec
int3
inc
cdq
or
and
fidiv
push
sub
push
out
cmp
(bad)
mov
cmp
push
pop
push
mov
out
int3
ins
sti
retf
and
not
(bad)
int3
xchg
sbb
mov
jg
std
pop
cmp
outs
xor
cmp
add
sbb
jnp
mov
es
cwde
cld
mov
jbe
repz
adc
jmp
push
inc
jno
pop
(bad)
loopne
dec
mov
jmp
stos
mov
and
out
mov
and
mov
movs
(bad)
fisttp
aaa
mov
xor
sbb
in
sub
adc
loope
in
fcmovb
jo
and
and
aaa
inc
outs
xchg
loope
mul
arpl
pushf
or
jne
mov
xchg
shl
mov
aad
or
fstp
and
movs
in
ret
inc
inc
addr16
jmp
out
sub
jbe
popa
jmp
push
popa
or
dec
mov
inc
out
les
sub
ds
cmp
pop
mov
sbb
(bad)
mov
daa
adc
inc
xor
inc
pop
add
or
iret
sbb
xor
mov
mov
lods
jnp
sar
in
stc
sub
inc
xchg
cli
pop
repnz
test
mov
cs
mov
mov
(bad)
adc
into
sub
mov
test
pop
test
mov
push
bound
cmps
imul
jnp
xor
test
pop
mov
jb
retf
mov
xchg
rdpmc
in
push
or
mov
push
sti
data16
mov
inc
jmp
sbb
je
or
enter
nop
ficom
mov
(bad)
fld
mov
mov
mov
add
sub
jne
nop
mov
test
arpl
jo
jns
push
clc
xchg
sbb
and
push
repz
or
xor
lds
add
outs
out
sti
mov
pop
sahf
jb
xor
xchg
imul
into
add
push
call
ds
push
das
inc
ret
enter
mov
push
movs
lea
pop
movs
xor
jbe
sbb
fist
ds
pushf
std
cmp
loope
pop
nop
and
bound
pushf
fistp
or
cmp
frstor
fnop
push
lods
test
sbb
and
pop
inc
sub
lock
jg
or
fimul
call
jle
sub
push
sbb
cmps
sbb
sbb
dec
mov
xchg
inc
mov
mov
jg
push
or
(bad)
lea
xchg
sbb
jns
(bad)
ss
xchg
lock
sub
shr
test
jle
lods
xor
dec
mov
das
(bad)
ins
pop
sub
cld
and
lods
push
lods
scas
mov
imul
dec
sti
es
mov
cdq
and
and
dec
mov
call
mov
je
fimul
push
inc
shl
jge
xlat
jg
or
sbb
adc
or
mov
(bad)
imul
cmp
mov
push
jle
cmc
clc
cmp
mov
call
es
cmps
leave
push
int3
jne
jg
push
inc
aas
mov
cmps
jnp
aaa
arpl
sub
div
sub
(bad)
or
inc
or
jmp
sub
mov
ret
inc
mov
add
aaa
adc
pop
les
mov
push
adc
je
imul
mov
dec
sbb
stos
call
mov
fwait
cmp
pusha
fsub
adc
cmp
jmp
push
(bad)
or
adc
and
mov
jge
adc
xchg
pop
dec
jo
cmps
popf
inc
mov
xchg
aas
(bad)
hlt
mov
jge
rol
addr16
mov
out
jnp
and
sbb
das
or
sub
movs
dec
mov
stos
(bad)
mov
cdq
aaa
loope
pop
mov
ret
cmp
fadd
lea
arpl
mov
scas
mov
popa
add
cmp
fwait
(bad)
push
cmp
adc
dec
and
outs
xchg
dec
mov
mov
lock
outs
inc
adc
sbb
and
cmp
movs
popa
dec
jp
mov
inc
mov
push
pop
pop
es
sub
shl
pop
sub
mov
mov
jns
inc
lods
xor
ss
enter
dec
dec
ret
stos
xor
cdq
int3
push
mov
test
add
sub
lods
cmc
loope
(bad)
pop
push
repnz
aaa
aad
mov
fadd
add
push
inc
repz
or
ret
je
lds
and
ss
xor
inc
(bad)
xor
jbe
and
add
push
mov
test
inc
divps
pop
idiv
mov
or
cwde
sub
ins
xor
lods
mov
(bad)
sbb
popw
dec
fs
xchg
mov
test
stos
cmp
push
inc
xor
and
gs
jp
ins
mov
xor
jle
xchg
push
cmp
mov
pusha
mov
inc
popa
xlat
stc
jl
aaa
aas
cmps
xchg
push
icebp
lahf
ror
call
dec
pop
jl
and
(bad)
arpl
dec
cmp
stos
fwait
dec
sub
out
inc
pop
stos
sub
jmp
push
in
test
jge
dec
push
(bad)
icebp
jnp
mov
fdiv
xchg
imul
outs
ret
ss
mov
pushf
dec
push
cmp
mov
cmp
jbe
std
pop
mov
inc
out
imul
xchg
add
mov
retf
xor
mov
movs
in
cmp
test
xchg
pop
add
adc
jmp
les
mov
xor
pop
scas
mov
mov
cmp
xor
xchg
fdivrp
cmp
push
adc
inc
jno
ja
outs
arpl
pop
aas
pop
inc
add
mov
dec
sbb
not
sbb
adc
div
retf
(bad)
adc
sub
cmp
shr
pusha
xchg
mov
mov
sub
aam
inc
fcomp
(bad)
std
imul
jnp
add
xlat
mov
push
jbe
mov
xchg
pop
jp
test
mov
fidivr
push
mov
add
je
sbb
and
pop
mov
cmp
in
shr
cmc
sbb
xchg
dec
mov
mov
(bad)
push
jle
scas
shr
and
gs
dec
hlt
xchg
jecxz
inc
jge
push
pop
jbe
or
xchg
stos
push
std
push
and
cmp
fimul
fstp
pop
movs
and
mov
dec
jbe
jecxz
mov
pusha
xchg
sub
fisttp
push
gs
sbb
sbb
dec
and
xchg
sub
in
mov
enter
es
or
sar
adc
inc
mov
lock
pop
out
js
std
sbb
and
sbb
and
mov
adc
idiv
inc
xchg
(bad)
xchg
retf
push
push
out
stc
and
dec
and
aaa
retf
nop
xor
mov
cmp
or
xchg
inc
outs
jle
(bad)
ins
xor
jmp
cld
ror
sahf
pop
rcl
sub
sti
stos
xor
ret
jbe
imul
and
xor
xchg
sub
mov
cmps
sbb
jbe
jg
xchg
mov
xchg
imul
ins
sbb
ss
adc
loop
jns
fdiv
pop
jbe
jmp
dec
pusha
xor
add
push
jno
ja
cmc
and
fst
ror
cwde
call
pusha
pop
lds
out
sub
dec
mov
imul
xchg
push
cmp
lock
imul
loope
and
arpl
and
sbb
fs
inc
sub
ins
xchg
js
inc
sub
test
sbb
hlt
xor
mov
cld
adc
push
fidivr
mov
and
iret
sub
mov
arpl
das
aad
mov
repnz
add
jb
xchg
(bad)
xchg
xor
adc
aas
repz
mov
sbb
(bad)
push
inc
daa
inc
and
shr
lea
cmps
dec
cld
iret
cmp
icebp
and
mov
cs
fdiv
push
adc
pop
in
stos
pop
sbb
mov
inc
jecxz
icebp
cmps
pop
adc
cs
les
jp
xchg
ret
jecxz
xchg
xor
xchg
push
gs
shl
and
pushf
sub
cmp
dec
es
inc
mov
aas
push
sbb
cmc
fcom
iret
movs
push
inc
or
inc
data16
daa
fwait
rcr
lods
mov
mov
xlat
and
cmp
les
mov
jmp
je
sbb
clc
scas
in
xchg
jae
jge
inc
jmp
icebp
dec
(bad)
xchg
xor
dec
in
inc
dec
ficomp
inc
push
adc
out
mov
dec
fstp
sub
stc
mov
stc
cld
stos
fcom
xor
imul
rcl
lods
adc
ret
push
stos
in
ret
jl
push
(bad)
mov
xor
xlat
and
std
stos
add
push
enter
adc
mov
jo
mov
pop
movs
nop
cmc
aaa
push
shr
daa
fstp
cld
scas
clc
dec
rol
pop
xchg
push
imul
cmp
sbb
test
mov
mov
shr
adc
in
fwait
sbb
not
pusha
and
pop
ret
mov
loopne
cmps
inc
mov
xor
pop
inc
out
hlt
mov
outs
ret
cmc
push
mov
add
clc
jge
outs
sub
push
cmp
jnp
loop
jge
mov
pop
jne
mov
sahf
jns
xchg
cmp
jge
dec
sti
js
pop
(bad)
test
cmp
add
(bad)
aaa
pop
sub
pusha
mov
pusha
sub
popa
and
lahf
mov
scas
jle
sbb
sub
or
or
stc
test
stos
adc
ja
inc
ins
jae
das
fidivr
and
(bad)
sbb
rol
pop
repnz
sub
xchg
dec
xchg
jl
and
int
sbb
stc
call
xchg
clc
xor
int3
cmps
xchg
enter
jle
push
test
cmp
(bad)
cmp
pop
or
xchg
cmp
mov
mov
mov
push
xor
fld
pop
fistp
ret
xchg
add
push
les
fldcw
add
push
mov
retf
xchg
ret
or
mov
sahf
cmps
int3
sub
mov
test
and
xchg
xchg
test
enter
jge
scas
inc
and
(bad)
or
les
and
mov
push
add
or
retf
cld
push
mov
mov
mov
inc
popa
mov
out
int3
(bad)
rol
cmc
jge
aas
cdq
jnp
cmp
push
rcr
dec
xor
push
pop
jg
lods
sub
dec
pop
pop
(bad)
jmp
clc
add
dec
adc
cmc
and
pushf
mov
jns
pop
jecxz
cwde
mov
jns
pushaw
mov
mov
lahf
sbb
fldenv
outs
out
les
jecxz
movs
cmps
sub
push
movs
loop
aaa
dec
loope
sub
dec
add
cmp
aam
sub
arpl
cmp
ret
in
mov
xor
lods
inc
sbb
jae
cmovb
xchg
scas
std
xor
xchg
retf
jnp
fnsave
mov
int3
outs
stos
enter
xchg
xor
cmp
jbe
cmps
sub
push
test
ins
clc
pop
push
sbb
rcl
(bad)
mov
mov
add
jg
leave
and
and
ror
call
jmp
add
dec
dec
jmp
and
test
xor
jb
fistp
add
push
test
push
fld
aaa
push
int
movs
test
inc
xchg
bound
mov
mov
repz
in
adc
xchg
push
popa
in
push
xchg
ss
mov
aad
test
sub
pop
jno
test
data16
mov
ret
xchg
pop
dec
loope
dec
rcl
cmp
fnstsw
or
inc
jp
aad
xlat
inc
shr
mov
stos
mov
aam
out
call
cs
rcr
popf
hlt
sahf
mov
icebp
mov
enter
mov
aad
mov
sti
push
cmp
and
fmul
cmc
mov
mov
cmp
ret
mov
jbe
test
mov
dec
mov
das
dec
mov
cli
mov
xchg
aaa
push
cmps
and
out
jmp
imul
adc
xor
add
inc
call
sahf
xlat
dec
ja
lock
out
push
inc
stos
(bad)
push
mov
mov
lock
or
into
je
xchg
in
lods
push
push
or
cmp
in
push
mov
fnstenv
mov
int3
mov
cmps
dec
imul
outs
adc
fs
pop
and
lods
aam
pusha
mov
mov
sahf
jge
push
or
sti
sub
hlt
mov
lea
bound
aam
in
sub
lods
lds
or
mov
inc
push
fnsave
jno
call
movs
out
jbe
pushf
rcl
dec
ds
cli
and
and
retf
std
cmps
repz
sub
pop
aaa
movs
fild
mov
inc
loopne
add
mov
mov
movs
(bad)
(bad)
mov
mov
push
(bad)
and
sub
inc
es
aaa
pop
inc
popa
std
inc
mov
add
xchg
pushf
mov
fst
test
cld
ds
pop
lock
leave
ds
cmps
cdq
gs
mov
jl
mov
mov
xchg
js
shl
jmp
(bad)
cmp
test
mov
sbb
idiv
dec
pop
mov
jecxz
sbb
jo
and
jecxz
imul
ret
in
and
dec
fld
mov
pop
fadd
ins
loopne
xchg
inc
and
iret
je
out
xor
inc
jae
idiv
(bad)
(bad)
xor
add
fwait
add
lds
mov
dec
std
lea
pop
test
mov
je
aaa
mov
outs
je
loope
pop
sbb
sbb
jg
add
push
pop
sub
jl
adc
push
scas
mov
neg
cmp
or
shl
dec
pop
in
push
in
xor
xchg
jp
test
shl
stos
xchg
xor
add
mov
rcl
dec
or
sbb
and
hlt
lods
popf
add
and
rol
cwde
or
and
pop
cmp
enter
sbb
pop
mov
mov
dec
popa
add
dec
mov
add
clc
ret
inc
push
dec
sub
loop
inc
popf
in
jmp
call
scas
pop
fcomp
aad
xchg
mul
in
mov
dec
repnz
jecxz
std
adc
std
jmp
nop
xor
adc
in
add
cli
repz
leave
mov
cmp
fcomp
sub
js
jno
cmp
ins
mov
gs
dec
xchg
out
data16
add
cdq
in
xlat
dec
ror
cmp
(bad)
push
loope
mov
mov
push
xlat
mov
mov
mov
adc
push
mov
sbb
mov
les
jb
adc
(bad)
loop
add
int3
xchg
xor
jns
iret
jmp
jecxz
push
inc
jne
call
rol
and
dec
js
mov
iret
and
xor
and
mov
jnp
out
sub
sub
fwait
pop
aam
adc
or
pop
ret
outs
inc
or
leave
mov
call
mov
cmc
fbstp
mov
loope
ins
fstp
dec
mov
mov
ds
jns
dec
xor
js
sub
sub
out
in
xor
pop
xor
xchg
mov
fidiv
test
leave
push
popa
in
rcl
sub
shl
ins
mov
mov
lock
(bad)
data16
and
jmp
les
cmp
sbb
pop
sbb
inc
mov
out
rcr
test
pusha
mov
mov
or
sti
pop
sub
fmul
repnz
outs
jl
aad
(bad)
out
jle
add
jo
scas
test
clc
push
inc
xchg
push
mov
xchg
jp
(bad)
loopne
sbb
add
enter
push
mov
or
mov
out
push
ret
or
adc
aad
mov
movs
push
mov
xor
push
sti
inc
xor
cmovb
ins
fs
scas
addr16
xor
adc
push
inc
or
dec
repnz
cmc
add
mov
pop
mov
and
imul
iret
stos
fcmovne
cdq
cmp
mov
scas
sbb
ret
push
les
sub
mov
fisub
test
xchg
or
and
mov
pop
loopne
or
adc
push
mov
lds
mov
lods
loop
mov
les
mov
cmp
test
aas
pop
test
pop
ds
pop
or
push
pushf
push
in
sub
xor
pop
popf
or
mov
add
sbb
push
pop
ins
and
xor
stos
pop
out
add
mov
pop
int3
sbb
std
aam
add
pop
push
jnp
bound
add
xchg
stos
fst
fwait
inc
push
pop
mov
retf
sbb
data16
fdiv
xchg
cdq
test
dec
push
out
jnp
and
inc
into
pushf
or
jmp
loope
std
popf
mov
scas
and
scas
stc
shl
iret
xchg
clc
xor
inc
mov
das
addr16
xchg
xor
adc
mov
rol
add
outs
lea
sub
js
push
push
mov
xchg
push
add
xor
adc
mov
idiv
and
mov
dec
inc
sbb
enter
aaa
and
stos
stc
repz
retw
mov
sbb
inc
nop
sub
xchg
jne
add
scas
dec
enter
aam
xor
stos
sar
adc
out
leave
inc
int3
sbb
dec
add
in
sahf
cmp
lea
xchg
sub
clc
adc
xor
dec
mov
pop
inc
test
mov
sub
xor
das
out
mov
(bad)
xchg
cli
bound
mov
adc
mov
stos
pop
loop
in
push
push
jo
fidiv
and
test
stos
fild
adc
inc
popa
ins
(bad)
aam
push
retf
cwde
lea
cmps
cmp
xor
mov
mov
inc
xor
test
dec
jmp
loop
in
push
inc
out
cwde
test
dec
pop
cmp
js
imul
or
push
(bad)
stc
(bad)
(bad)
cmp
or
pop
das
add
and
das
fld
daa
adc
ins
loopne
or
jmp
adc
repnz
and
scas
pop
or
dec
lahf
xchg
movs
jp
mov
leave
jecxz
jg
and
mov
mov
imul
pusha
push
imul
jo
xor
xchg
vfrczps
call
inc
mov
jecxz
xor
mov
ja
lea
cmps
in
cmp
ins
push
or
lahf
or
xor
ror
nop
add
cmp
jb
ss
or
cld
jmp
jmp
int
in
sub
call
cmp
ja
test
pop
inc
sub
push
(bad)
iret
leave
xor
xlat
outs
ja
loopne
and
imul
hlt
add
or
fist
push
outs
aam
push
sub
push
jp
mov
(bad)
ss
pop
in
xchg
dec
(bad)
jmp
hlt
add
pop
aaa
dec
sbb
mov
inc
in
imul
(bad)
dec
add
or
adc
shr
clc
inc
add
xchg
pop
cmc
inc
pop
test
lahf
in
retf
pop
mov
aas
das
dec
xor
adc
sbb
xlat
mov
ja
adc
cmc
mov
data16
iret
retf
push
das
or
dec
push
pop
pop
sub
ror
sbb
cmps
dec
push
jp
cmp
imul
dec
cmp
add
imul
ja
pop
mov
out
sbb
scas
out
sub
jo
or
test
cmc
pop
pop
mov
out
add
enter
push
jmp
mov
movs
fs
dec
jle
cmc
mov
add
or
ja
sahf
in
(bad)
xor
dec
mov
stos
or
inc
dec
aam
sub
(bad)
cmps
les
xor
ja
hlt
ins
xchg
xor
loopne
mov
fwait
pop
stos
adc
mov
loopne
fimul
jp
pop
leave
or
and
mov
dec
pop
mov
div
js
mov
dec
xor
push
dec
test
dec
xchg
xchg
jne
jmp
repz
push
in
inc
inc
inc
inc
lods
dec
fsubr
dec
lock
pusha
es
movs
mov
sub
js
push
test
jmp
xchg
push
ds
je
mov
ins
xor
jo
pop
jns
(bad)
push
out
bound
pop
xor
shl
add
inc
inc
lods
stc
ins
mov
xchg
jmp
aaa
jg
icebp
or
int3
cmp
ret
or
xchg
jo
adc
and
sbb
dec
mov
push
cmp
add
pop
test
sbb
adc
and
popa
push
cmp
jg
lods
push
pusha
retf
pop
or
scas
sbb
das
retf
or
pop
mov
dec
jle
pop
push
lea
pushf
sbb
or
xlat
cmp
and
sbb
inc
mov
sub
dec
pop
pop
and
iret
lds
ret
stc
xor
hlt
pop
or
add
cmc
xchg
mov
sub
and
push
inc
jmp
mov
jne
test
cmp
cmps
fcom
push
outs
clc
(bad)
cmc
add
inc
movs
lds
test
sbb
(bad)
adc
push
inc
ins
jb
push
jo
icebp
dec
xor
or
fcom
sbb
or
jno
or
in
out
add
sub
ja
xchg
icebp
sub
push
cmp
push
xchg
jb
sbb
sti
mov
(bad)
cmc
mov
out
ret
dec
push
xchg
loop
stc
cmp
cwde
test
arpl
mov
lock
xor
pusha
dec
(bad)
nop
ror
pcmpgtd
pop
retf
repnz
cmp
mov
mov
es
aaa
repz
nop
pop
outs
xchg
or
enter
mov
xchg
in
sub
outs
add
mov
jne
int
xor
mov
test
(bad)
fimul
add
jns
iret
pushf
mov
cmp
ja
cmps
ror
dec
xor
int
inc
or
cmp
call
stos
add
jae
lds
fadd
imul
ds
mov
fldenv
pop
nop
push
push
xchg
outs
enter
retf
push
jl
inc
adc
dec
test
(bad)
fwait
cmp
mov
loope
(bad)
push
cmp
cmp
pop
mov
enter
mov
aad
add
in
pop
jmp
jno
xchg
es
in
popf
push
scas
mov
mov
es
pop
xchg
pop
loopne
ja
in
mov
and
(bad)
into
dec
mov
cmp
shr
inc
cmc
loopne
sti
jmp
(bad)
fscale
ins
push
arpl
cli
jmp
mov
jmp
dec
add
imul
pop
sahf
(bad)
(bad)
xchg
jg
ret
mov
(bad)
(bad)
sahf
in
pop
jne
push
(bad)
aam
popa
popf
sbb
push
iret
imul
daa
fcomip
xor
jns
js
leave
stos
dec
dec
imul
pop
sbb
pop
neg
outs
add
add
push
mov
push
and
xor
dec
sub
rcr
jne
push
xor
cmp
ja
add
int
(bad)
jmp
jbe
fsubr
jg
pop
fcomp
jg
xchg
rol
hlt
aas
neg
or
call
xchg
dec
add
or
in
aam
adc
push
push
repnz
pop
icebp
enter
mov
jecxz
stc
in
mov
mov
mov
(bad)
mov
pop
and
pop
movs
arpl
popa
shr
test
jp
fdiv
gs
and
out
add
call
sahf
jno
add
daa
aas
mov
and
adc
mov
(bad)
mov
adc
in
lods
aam
cs
jmp
xchg
fs
and
xchg
add
cmc
mov
pop
or
int3
lock
pop
pushf
call
jge
xchg
test
sbb
rcl
mov
inc
mov
cmp
jnp
xchg
loope
or
jp
fwait
cmp
add
push
or
adc
cmp
std
jno
xor
mov
imul
mov
jecxz
adc
add
sub
jmp
fistp
das
add
mov
inc
mov
aam
adc
inc
shr
loop
add
or
inc
pop
xchg
icebp
xor
mov
call
xor
push
dec
pop
and
pop
sbb
xor
mov
cmc
daa
imul
icebp
(bad)
push
mov
or
ins
jno
sbb
xlat
stos
push
cmp
cmp
jmp
daa
inc
xor
add
inc
dec
inc
scas
jno
fs
sbb
ins
xchg
push
sbb
or
(bad)
stc
mov
cwde
cs
das
inc
cmp
enter
test
out
dec
gs
or
into
loope
xchg
jmp
mov
jge
retf
jg
jmp
mov
inc
dec
call
cmc
cwde
add
mov
test
popa
add
push
sbb
std
inc
cmp
clc
mov
(bad)
cmps
mov
(bad)
ja
or
inc
aad
or
imul
fwait
xchg
into
ins
pop
cmps
pushf
jo
in
movs
adc
cmp
(bad)
cs
(bad)
mov
cmp
test
out
and
retf
xchg
xchg
cmps
movs
lahf
aaa
in
sahf
sbb
enter
adc
jl
ins
mov
dec
sub
mov
inc
cli
popf
mov
sti
jb
cwde
push
test
mov
int
push
cwde
jge
add
pusha
and
outs
test
movs
pop
data16
inc
mov
mov
cmp
jge
ftst
outs
out
mov
mov
or
test
call
jmp
sub
pushf
into
lahf
mov
jge
sub
sahf
jo
adc
push
aaa
fisub
mov
pop
inc
push
push
jle
pop
mov
cmp
outs
icebp
in
imul
int3
pop
je
dec
xor
jg
out
sbb
sub
pop
and
jo
mov
cmps
add
xor
dec
popf
xor
rcr
xlat
adc
leave
aaa
data16
sbb
xor
push
daa
add
stos
test
fnsave
addr16
rcl
and
sbb
aas
imul
and
dec
and
clc
data16
pop
adc
adc
inc
in
rcl
or
fmul
fabs
nop
inc
sbb
ins
movs
xchg
popa
enter
out
(bad)
adc
lods
mov
sub
sub
lahf
pop
pop
jmp
stos
mov
xchg
mov
hlt
inc
add
cmp
shr
(bad)
movs
sbb
xor
adc
dec
pusha
cmp
loope
dec
sub
loope
jne
or
push
push
mov
xchg
sub
daa
mov
add
pop
mov
inc
cmp
push
fld
mov
fs
pop
jle
sub
adc
jmp
cmp
xchg
mov
mov
mov
aad
in
das
adc
xor
mov
mov
lds
lock
in
mov
test
pop
test
cdq
xor
jl
fwait
div
sbb
retf
dec
call
mov
and
lahf
pop
mov
xor
mov
add
(bad)
in
(bad)
jmp
test
jbe
mov
test
or
and
add
push
(bad)
jnp
lea
cmp
clc
retf
jle
(bad)
or
mov
loop
cli
(bad)
mov
mov
loope
repnz
loop
cld
ds
ret
in
int
(bad)
mov
cdq
push
in
push
pop
mov
mov
je
push
or
sub
xor
inc
imul
mov
loopne
cld
test
(bad)
and
push
out
stos
icebp
test
jmp
ret
cdq
mov
ficom
push
mov
sub
fmul
pop
ins
lahf
xchg
mov
xchg
movs
sbb
lds
jo
in
retf
lods
das
xchg
or
pop
xor
or
jp
stos
cmp
xchg
jmp
scas
pop
lds
sub
into
sbb
imul
add
jnp
xchg
rcr
mov
push
pop
sbb
fisttp
fdivr
cmp
mov
dec
cmp
xor
sbb
sub
pop
jne
mov
loop
lock
stos
add
or
ret
jp
adc
mov
test
fidiv
leave
pop
mov
test
ja
xchg
jl
pop
inc
mov
cwde
mul
jg
lods
dec
dec
out
retf
inc
xor
jecxz
mov
or
test
xor
lea
dec
stos
sbb
add
dec
adc
sub
dec
cmp
xor
scas
cdq
adc
jl
daa
popa
and
push
out
mov
jmp
gs
jne
add
pop
or
into
je
cmp
fcomp
lea
xchg
in
rcr
popf
mov
cwde
pusha
les
push
jge
jno
in
cmp
bound
and
or
out
cdq
adc
stc
daa
dec
scas
xchg
lock
cmc
push
push
jae
lds
xchg
cmps
mov
shl
adc
add
xchg
push
pop
lahf
scas
je
in
mov
mov
jg
movs
cmp
shl
adc
push
xor
jg
pop
add
mov
cmp
js
mov
adc
retf
std
jns
mov
inc
inc
dec
xchg
mov
lods
cmp
ss
sbb
mov
pop
or
push
mov
pop
pop
retf
int
push
ficom
retf
push
int
and
dec
xchg
push
cli
aad
xchg
ret
pmaxub
mov
aas
data16
addr16
xlat
mov
mov
sub
inc
sbb
sbb
mov
rcl
call
pop
sahf
jno
xor
jbe
mov
mov
sar
ror
call
sbb
sub
cmp
nop
ss
mov
sub
das
xor
and
popf
add
shl
mov
or
movs
hlt
ins
push
movs
mov
scas
sbb
adc
dec
pop
mov
test
lock
xlat
inc
ins
test
aas
xchg
and
pop
pop
call
rcl
inc
adc
repnz
pop
and
add
mov
ds
pushf
sub
and
sbb
in
dec
and
mov
cld
ins
mov
mov
adc
xchg
pop
xor
mov
push
or
ss
pushf
test
ret
lahf
sar
dec
pop
addr16
sbb
xchg
call
pop
mov
rcl
enter
fst
pushf
push
push
scas
sbb
mov
lock
loopne
or
sti
mov
push
je
add
cmp
stos
js
out
js
fld
mov
ret
inc
inc
and
(bad)
fsubr
jmp
mov
and
xchg
xor
xor
dec
push
add
or
xchg
call
push
cmp
xchg
jmp
loopne
pop
cmp
or
pop
add
add
inc
add
fdiv
or
in
jo
mov
sbb
add
mov
jo
inc
or
fidiv
cmp
and
out
pushf
mov
retf
dec
pop
adc
push
sbb
out
div
imul
in
js
ret
jmp
push
push
or
hlt
out
push
loopne
pop
adc
js
mov
lds
dec
xchg
sub
cwde
clc
addr16
aaa
lds
xchg
and
shl
cmps
push
jecxz
sbb
out
xchg
inc
jbe
mov
pop
xchg
lods
mov
dec
ror
cwde
ins
xor
inc
enter
aas
inc
pop
inc
jge
sbb
adc
and
and
mov
push
cwde
sbb
icebp
cld
das
ins
ror
out
cmp
push
add
je
jge
adc
pop
clc
and
push
xor
clc
dec
icebp
cli
adc
mov
ss
iret
mov
mov
data16
sti
pop
enter
stc
jne
xor
mov
stc
inc
add
retf
outs
cdq
or
repz
mov
aam
sub
dec
xlat
inc
dec
jae
and
push
outs
ja
or
adc
sub
sti
dec
xchg
jp
(bad)
fcomi
sub
fwait
or
fwait
outs
(bad)
add
add
aad
ins
xlat
mov
sbb
mov
or
loop
xor
mov
call
sahf
or
jg
clc
push
or
imul
sbb
mov
jo
repnz
push
ins
sbb
jle
inc
rol
push
aam
outs
add
mov
pop
add
dec
rcl
lods
xor
jl
popa
loop
sbb
loopne
scas
add
adc
push
or
je
mov
imul
fnstcw
adc
cdq
xchg
repnz
jmp
in
cdq
mov
ss
fidivr
xor
int
lods
call
iret
sbb
jmp
xchg
test
fldcw
sub
and
(bad)
xchg
and
jae
inc
ja
xchg
push
xchg
xor
data16
(bad)
cld
pop
(bad)
ror
enter
pop
loopne
dec
pop
add
xchg
(bad)
mov
dec
or
inc
mov
add
inc
mov
push
and
jb
inc
jg
gs
dec
add
data16
cmp
leave
mov
out
mov
sbb
cmps
je
cmp
jns
repnz
movs
nop
popa
test
jmp
xchg
xchg
or
adc
lods
call
fisub
cmp
dec
dec
ss
or
cs
ins
aas
inc
add
push
loope
push
xlat
data16
mov
lds
int
lds
in
sbb
mov
adc
xchg
push
sti
retf
and
loopne
ds
aas
mov
outs
retf
loopne
add
and
icebp
cmp
push
or
retf
stos
(bad)
mov
sbb
pop
pop
int3
ins
into
ret
jecxz
dec
int3
les
jmp
or
xchg
outs
fstp
mov
outs
cmp
stc
cmps
cs
loope
mov
ror
in
shl
ins
mov
jmp
xchg
addr16
pop
or
xchg
ret
sbb
mov
sub
mov
push
pop
test
adc
ficom
pop
test
and
sbb
outs
out
cmp
jg
jns
xor
xchg
mov
lds
mov
sti
or
out
lock
push
rcr
lea
mov
sub
out
jle
mov
sbb
pop
(bad)
and
dec
and
aaa
out
adc
xor
cmp
xlat
in
sub
mov
sub
pushf
mov
or
loop
es
hlt
jns
mov
rol
inc
in
xor
dec
and
out
push
test
jne
movs
gs
mov
pop
jmp
xor
outs
rcl
xor
out
add
mov
sahf
push
fdivr
neg
jp
and
lock
sub
jnp
mov
jbe
xchg
xor
sub
(bad)
fwait
push
repnz
jns
or
rcr
mov
sbb
test
mov
aaa
mov
mov
call
cwde
mov
cwde
push
outs
jge
cdq
adc
sbb
test
out
sub
test
idiv
cs
ror
adc
jle
cld
inc
pop
fs
loop
dec
mov
ss
nop
jno
fnstcw
push
(bad)
adc
out
outs
cmp
fst
in
pusha
cli
mov
inc
aaa
rcr
dec
iret
aad
xor
inc
cmp
fbstp
cwde
sub
push
pop
sahf
pop
icebp
push
test
add
lahf
xor
jl
add
push
xchg
pushf
rcr
popf
scas
popf
pushf
pop
out
adc
(bad)
mov
sbb
cli
cmp
leave
mov
and
xor
hlt
mov
xor
push
xor
mov
fs
add
jns
and
out
repnz
retf
je
pop
dec
xor
lock
ins
lods
ror
push
cmps
xor
scas
popf
jae
das
sub
js
xor
xor
(bad)
pop
repnz
adc
mov
fadd
pop
icebp
(bad)
mov
cmp
cmp
shrd
movaps
ficom
rcl
xchg
shl
dec
xchg
add
shr
add
pop
fcomp
sahf
je
dec
mov
imul
imul
icebp
cld
call
js
pop
es
out
mov
jmp
fldenv
or
outs
xor
or
stc
mov
test
or
cwde
fucomp
push
clc
pop
mov
mov
daa
mov
in
or
pusha
jnp
xchg
js
data16
ret
dec
hlt
std
jmp
aas
adc
jecxz
gs
sbb
push
sbb
fist
mov
cmp
leave
mov
vpacksswb
es
cmp
or
add
jmp
test
out
fwait
xor
into
rcr
dec
fst
pop
xlat
out
push
in
mov
out
fbld
clc
sbb
cmp
mov
fsub
add
and
jl
ror
xchg
daa
test
addr16
mov
lea
cld
mov
rcl
sbb
jbe
stos
iret
mov
mov
shl
mov
dec
push
xchg
pushf
dec
movs
mov
ficomp
sbb
in
in
mov
inc
add
push
mov
or
popf
xor
addr16
sti
dec
inc
ret
in
sbb
inc
lods
and
ja
out
arpl
loop
and
shl
pop
xchg
xchg
lock
call
sbb
lahf
sbb
push
shl
dec
dec
(bad)
or
xor
push
push
les
clc
adc
push
sbb
aaa
pop
push
pop
(bad)
cli
mov
mov
and
stc
aaa
jb
adc
pop
adc
popa
push
adc
inc
adc
mov
push
jno
or
lds
in
inc
and
(bad)
jnp
mov
sahf
pop
jae
call
int3
pop
cmp
rol
ret
jle
sbb
sbb
aas
in
scas
sub
and
(bad)
pop
hlt
outs
adc
sub
mov
or
or
add
nop
leave
cs
or
xor
jnp
mov
dec
(bad)
pushf
push
int3
(bad)
xor
push
jae
iret
ss
or
jbe
into
ret
adc
mov
sub
xchg
pushf
add
mov
add
(bad)
cld
jb
lds
pop
aaa
sbb
xchg
mov
cmp
dec
mov
ins
mov
xchg
xchg
add
retf
sbb
pop
adc
in
(bad)
lea
push
or
retf
add
jnp
imul
mov
mov
fcmovnb
movs
or
js
push
lds
cmp
into
fwait
adc
xor
xor
lea
and
push
neg
dec
mov
jg
sub
out
ins
xchg
nop
push
xchg
push
add
das
repnz
rcl
cli
mov
xchg
xor
cwde
stc
stos
xchg
xlat
sar
adc
xchg
pop
fld
dec
call
(bad)
loope
mov
fist
cmc
push
sub
and
sbb
test
pusha
loopne
pop
dec
loope
ds
stos
cs
loop
loop
dec
or
out
pop
pop
inc
sbb
jmp
push
xchg
jb
test
in
repz
imul
push
ja
out
xchg
xchg
div
push
xor
lods
lds
or
in
mov
add
inc
ficomp
push
outs
neg
push
cdq
mov
fiadd
jbe
dec
pop
mov
pop
inc
(bad)
jmp
mov
or
scas
pop
test
cmp
scas
nop
mov
jp
and
push
adc
push
push
cmps
push
xchg
das
call
les
pusha
cmp
dec
stos
sub
or
pop
jle
lahf
clc
dec
push
shl
jl
retf
in
popa
xchg
or
xchg
inc
mov
xchg
mov
mov
test
lods
stc
aaa
xchg
pop
push
sub
pop
push
add
jns
xor
and
xor
fsub
ror
sub
inc
ret
and
jae
les
ss
mov
sbb
pshufw
sti
xchg
xchg
cld
xchg
mov
sub
cli
call
loope
int
sbb
xor
pop
mov
mov
bound
push
pop
jno
pop
mov
dec
inc
mov
xchg
aam
fild
loope
inc
or
daa
add
mov
jo
imul
jbe
or
popa
loopne
mov
pop
and
push
mov
mov
jg
cdq
ins
xchg
mov
dec
cdq
rol
imul
(bad)
scas
sti
ror
adc
or
mov
jmp
out
xchg
cwde
stc
mov
mov
cdq
aam
mov
sub
jmp
adc
xchg
push
xchg
pop
push
and
pop
push
iret
push
movs
jo
pop
outs
sub
data16
ja
pop
adc
add
inc
dec
inc
pop
hlt
add
jbe
shl
inc
or
js
icebp
and
add
mov
cmp
test
out
mov
std
(bad)
xchg
adc
pop
pop
out
sbb
inc
in
loop
or
cs
mov
jle
push
cs
lahf
xchg
in
sub
and
cwde
push
xor
jl
mov
xor
jmp
in
in
and
xor
adc
xor
xchg
std
outs
out
psraw
movlps
mov
loopne
mov
les
test
sbb
cmps
out
inc
imul
cld
dec
inc
mov
sbb
xchg
and
cmp
xchg
inc
cmps
xlat
sub
daa
push
test
dec
ins
je
mov
cmp
out
rcr
out
aad
jb
scas
out
jecxz
push
mov
push
js
jp
jge
fist
add
push
into
popa
xchg
jle
sbb
adc
loope
popf
test
mulps
cmp
rcl
cmp
mov
add
stc
mov
lea
out
rol
repz
xor
mov
adc
shr
xchg
xchg
adc
bound
push
sbb
mov
lea
fstp
push
icebp
outs
shl
dec
xchg
fsubr
sub
in
add
and
inc
into
lds
cmc
dec
push
(bad)
or
mov
lahf
adc
mov
mov
in
xor
lods
retf
nop
sbb
test
or
loop
(bad)
mov
or
and
push
inc
mov
daa
in
call
mov
adc
and
mov
arpl
xor
fdivr
inc
pop
cmp
or
rcl
mov
xor
scas
pop
cmp
or
call
pop
aad
sahf
setb
or
stos
xchg
idiv
pop
lods
out
mov
pop
jl
inc
lods
push
sub
jle
(bad)
sti
mov
push
arpl
mov
pop
aaa
xor
dec
sar
xor
pusha
sub
gs
pop
and
pop
outs
add
popa
push
fsubp
sub
pop
sbb
hlt
mov
in
dec
sub
daa
dec
mov
(bad)
add
out
out
inc
sub
xor
fnstenv
mov
sar
std
push
out
(bad)
hlt
mov
(bad)
mov
outs
pop
(bad)
cs
in
mov
lods
pop
retf
pop
pushf
(bad)
xor
call
das
aad
aad
popf
lds
ins
inc
addr16
dec
in
mov
outs
icebp
pop
outs
push
clc
bound
cvtdq2ps
sbb
loopne
outs
add
pop
jo
dec
gs
push
pushf
ins
in
js
pop
and
cwde
pop
outs
icebp
pusha
clc
lods
sbb
cli
sub
pop
and
(bad)
cmp
pushf
cmp
push
push
fstp
mov
sub
cld
mov
fcmove
(bad)
arpl
pop
push
nop
lock
and
rcr
mov
int3
loop
cmp
inc
pushf
mov
fmul
add
repnz
xor
push
inc
or
in
push
dec
jmp
clc
push
js
movs
add
sub
sbb
cli
cmp
arpl
jmp
(bad)
das
loopne
arpl
xchg
xor
sbb
mov
lahf
stos
and
or
jno
xchg
test
add
(bad)
cld
mov
dec
mov
and
idiv
mov
ficomp
int3
mov
mov
pop
loopne
inc
push
jnp
call
push
ins
popa
xor
leave
mov
push
cmp
repz
retf
call
(bad)
lahf
fs
mov
xor
mov
adc
rcl
fisub
test
in
sub
sbb
cld
add
(bad)
leave
loop
test
shr
pop
inc
xor
popf
dec
in
and
cmp
and
jns
aaa
(bad)
mov
shl
stos
bound
cmp
scas
mov
(bad)
fsubr
jnp
adc
idiv
cmp
cmp
ins
add
(bad)
pop
cs
dec
adc
outs
je
mov
sbb
stos
jg
test
(bad)
cmp
ja
out
jecxz
je
cmp
or
fcmove
stos
xchg
jae
out
int
push
and
fdivr
sub
hlt
das
mov
test
in
mov
pop
(bad)
mov
xor
mov
add
and
repnz
cld
enter
scas
mov
pop
test
hlt
addr16
xchg
stc
cli
dec
xor
add
sti
push
or
ja
lods
mov
mov
and
lods
shr
pop
pop
cmp
je
add
inc
ficom
adc
push
call
xchg
push
call
hlt
test
mov
sbb
ds
pop
ret
aaa
mov
loope
call
sbb
fwait
aad
mov
in
push
pop
fsubr
repnz
adc
xchg
pop
ja
scas
(bad)
in
push
xor
scas
sbb
push
fadd
es
fst
hlt
movs
outs
xor
push
scas
les
adc
jecxz
scas
cld
push
xchg
ja
cmps
outs
and
pop
sbb
jns
mov
inc
mov
lahf
add
movs
cmp
in
inc
mov
pop
push
mov
mov
pop
ins
cmps
shr
push
imul
cmps
push
xchg
or
xor
cmp
ffree
cli
jg
retf
jne
retf
and
hlt
xchg
cmp
lahf
(bad)
loope
adc
cmp
scas
in
addr16
and
pop
and
push
les
sbb
jecxz
jns
sub
pop
xchg
ret
mov
inc
test
xor
xchg
add
or
cmp
fadd
iret
xchg
shr
cmc
lahf
or
(bad)
cmp
inc
mov
xchg
in
ds
dec
cdq
xor
xchg
stos
(bad)
loop
fcom
xor
fstp
fst
adc
and
mov
je
or
mov
jbe
sub
cmp
lods
sub
ja
cmp
xor
xor
loope
fs
xor
xchg
inc
ror
out
dec
inc
ret
rol
sub
or
sub
add
dec
mov
cmp
xchg
push
mov
jp
xor
daa
cmp
dec
loopne
add
fistp
retf
jae
sbb
adc
xchg
cmp
adc
xor
into
in
add
push
jp
push
mov
gs
add
pop
(bad)
loopne
sti
out
ins
xchg
int
xchg
out
rcr
adc
dec
mov
push
push
and
adc
cmp
icebp
retf
jmp
xchg
ror
jne
mov
mov
fild
inc
push
movsx
test
cmp
mov
sbb
jno
movs
sub
cli
xchg
mov
jmp
or
pop
aaa
pop
push
push
jecxz
sbb
push
aad
inc
xchg
sbb
pop
mov
xor
cmp
fwait
aaa
das
jns
ret
cmps
iret
cmp
outs
adc
(bad)
sub
inc
cs
mov
repnz
arpl
or
or
mov
out
jae
fwait
dec
repz
mov
(bad)
ins
pop
fwait
xchg
and
cmp
(bad)
test
cmc
mov
mov
jbe
fcmovnu
iret
das
pop
cli
arpl
fild
sahf
mov
imul
call
shl
sub
sbb
push
repz
xchg
add
movups
lods
sar
push
pushf
or
push
jns
in
mov
push
sbb
ja
out
sbb
movs
fstp
daa
mov
adc
call
xor
pop
(bad)
popf
cmp
mul
mov
cmps
(bad)
in
xchg
iret
mov
loope
scas
inc
sub
push
sub
jg
lock
out
out
xor
pop
cmp
test
xor
push
ds
push
lahf
dec
pop
fcomip
out
fdivr
or
mov
mov
fsub
push
jmp
adc
xor
xor
pop
mov
jo
retf
mov
jmp
adc
xchg
out
jmp
xchg
xchg
push
fs
inc
mov
cmp
in
fstp
sbb
int3
fist
pop
cmps
out
mov
les
cmp
lea
jno
mov
sbb
enter
dec
ja
test
push
das
test
add
hlt
adc
mov
cmovl
clc
test
inc
add
mov
lahf
loop
pusha
pop
popa
xchg
retf
xchg
xchg
jbe
adc
mov
dec
hlt
or
sbb
lods
cli
das
pop
scas
inc
outs
push
push
push
in
out
sbb
lods
iret
sbb
gs
mov
jmp
in
movs
xor
jmp
xchg
daa
pop
and
push
ret
das
lds
mov
and
stos
xchg
sar
rcl
add
jg
mov
mov
stc
push
retf
das
mov
rcr
fldcw
cmps
xor
mov
inc
aaa
enter
sbb
fcom
movs
test
(bad)
push
mov
daa
stos
mov
xor
scas
hlt
scas
retf
mov
sbb
aam
and
inc
xchg
mov
adc
xor
(bad)
lock
pop
push
ss
lahf
and
movs
cs
dec
sub
scas
shr
sar
jno
jle
inc
push
jle
push
or
pop
jnp
mov
pop
dec
(bad)
repz
dec
and
jno
and
xor
and
inc
imul
test
in
jns
xor
shr
add
mov
jmp
or
adc
and
test
inc
and
imul
out
fld
and
fisub
mov
out
les
jmp
xor
cmps
sahf
popf
arpl
ins
in
or
repnz
inc
dec
xor
retf
push
(bad)
push
xor
pop
dec
and
mov
shl
xor
fadd
sub
sbb
loope
stos
push
js
sti
fist
cmps
pop
mov
mov
outs
push
xor
jg
stc
cmp
xchg
pop
xchg
pop
pop
fmul
stos
inc
fdivp
cmp
mov
sbb
pop
mov
xlat
mov
cmc
mov
jbe
cmp
mov
bound
adc
and
jo
xchg
push
xor
cs
loop
lahf
js
xchg
fcom
and
sbb
sahf
addr16
xchg
in
lods
mov
sub
xor
in
aad
sub
rol
cmp
jne
sbb
inc
sbb
jnp
mov
outs
xor
fld
sti
sbb
fs
xchg
push
pop
jne
push
push
jle
(bad)
in
retf
scas
call
ror
movs
cmp
xlat
mov
mov
sbb
lods
cmc
push
xlat
cdq
and
mov
call
mov
jne
sub
jne
inc
and
mov
jbe
jle
jb
lock
add
mov
sbb
aaa
or
(bad)
(bad)
fdiv
fcomp
mov
push
push
sti
jb
popf
(bad)
jns
lods
mov
lds
cmp
mov
cmp
sti
loop
and
inc
jno
inc
test
aad
mov
sti
inc
add
(bad)
out
dec
mov
mov
lods
mov
addr16
adc
jb
mov
dec
xchg
out
or
sti
or
retf
repnz
stos
inc
push
cmc
cs
jge
addr16
xchg
(bad)
stc
xor
cmp
xchg
mov
and
and
pop
pop
(bad)
mov
lds
icebp
jl
test
xlat
mov
fidivr
push
push
pop
mov
mov
lods
push
bound
out
nop
sub
lds
inc
fwait
dec
mov
std
jle
les
(bad)
jg
aam
adc
shl
xchg
dec
mov
push
nop
arpl
movs
xchg
and
xchg
lock
(bad)
icebp
mov
inc
out
push
inc
sar
and
dec
arpl
jle
pop
push
pushf
xchg
and
retf
ss
test
data16
mov
lahf
and
fcomi
out
ds
aad
sub
mov
sbb
sbb
shl
jmp
les
inc
ss
stos
jmp
xor
jmp
mov
add
shr
int
fld
sbb
data16
xor
dec
add
ins
shr
xchg
fisubr
cmp
popa
adc
pop
pop
ins
in
bound
(bad)
mov
push
ja
loopne
push
mov
out
sbb
leave
ret
imul
(bad)
lods
push
cmps
shr
das
pop
dec
inc
cmp
dec
pop
and
in
nop
and
xchg
nop
sbb
repnz
dec
out
pop
popf
fwait
out
and
stos
das
std
aaa
jmp
in
pop
repz
je
clc
rol
stc
out
push
ds
sbb
xor
stc
xchg
or
shr
test
leave
xor
add
or
in
lea
dec
popf
jp
or
in
cmps
mov
inc
push
ins
cmp
ds
int3
pop
inc
sbb
xchg
jp
shr
or
leave
adc
rol
inc
popa
jo
inc
lds
jmp
out
fdivr
int3
lock
xchg
cmp
gs
jmp
addr16
imul
arpl
push
sub
sub
cdq
xchg
pop
sti
in
rcr
std
mov
popf
or
mov
call
out
push
dec
xlat
push
aas
fdivrp
cs
je
fild
add
mov
repz
lahf
sub
inc
(bad)
inc
sbb
ja
xor
xchg
mov
(bad)
leave
sbb
mov
pop
jmp
sub
xor
add
data16
jb
and
inc
sbb
inc
sbb
pop
adc
hlt
stos
cmc
dec
int3
adc
jmp
mov
inc
jo
dec
mov
and
or
(bad)
push
jnp
dec
xor
leave
repz
mov
test
pop
stos
xor
jp
inc
scas
sub
add
int
lds
cmp
sub
xchg
jp
or
outs
lock
add
outs
lock
ret
imul
enter
adc
retf
add
lahf
push
dec
jmp
movs
and
lods
int3
les
in
and
dec
div
mov
cwde
pusha
mov
cmp
cmps
loope
data16
fisttp
or
sub
cmp
daa
adc
jo
out
loope
retf
mov
dec
gs
or
mov
mov
xchg
xor
and
xchg
or
cli
imul
into
jmp
cmps
inc
ret
jb
mov
lea
lods
push
outs
mov
fsub
repz
popf
sub
mov
cmp
add
cmps
mov
repnz
iret
mov
adc
xchg
in
add
movzx
stos
cld
xor
gs
jmp
lahf
xor
call
repnz
call
inc
inc
cld
imul
jbe
ret
(bad)
ja
dec
adc
mov
icebp
cmp
clc
cdq
es
fmul
(bad)
push
ss
out
cmp
xchg
sub
int3
mov
push
cmp
cmp
in
push
or
push
xchg
fisub
jnp
mov
aas
mov
cld
loop
push
cli
push
outs
mov
pop
xor
jecxz
xor
sbb
fbstp
mov
xchg
cmp
push
pusha
pop
aaa
cmp
add
bound
inc
pusha
repz
inc
(bad)
cli
and
mov
pop
es
(bad)
popf
test
sbb
mov
mov
mov
jmp
in
shl
pop
enter
bound
or
sar
std
mov
inc
dec
jl
out
and
cwde
or
cmp
or
lods
pop
mov
add
add
and
dec
imul
enter
push
out
lods
retf
jmp
addps
mov
xor
mov
aas
rcl
daa
dec
test
pop
pop
neg
popa
ss
aad
scas
rcr
xor
push
mov
mov
out
test
jmp
push
repnz
and
xchg
movs
inc
xlat
or
jne
bound
outs
imul
(bad)
cmp
es
fucomp
(bad)
push
sar
push
or
cmp
jg
out
hlt
stos
mov
mov
iret
and
jp
int3
fild
mov
adc
add
and
retf
in
mov
rol
std
(bad)
rcl
pop
xchg
imul
fdiv
pop
jge
in
test
test
das
dec
push
adc
in
pusha
mov
push
int
test
fistp
aas
jle
mov
js
push
xchg
add
stos
ja
dec
rcr
or
lahf
in
sbb
mov
cmc
push
xchg
adc
pop
mov
pop
lea
adc
fsubr
pop
sbb
stc
add
xchg
arpl
sahf
cmps
sbb
lock
push
xchg
push
out
add
test
ins
cmc
outs
adc
rcr
cmp
cmp
ja
push
ja
fdiv
push
aas
jbe
pop
push
stos
nop
fsubr
jae
arpl
sub
xor
leave
retf
dec
mov
adc
add
cmp
add
and
dec
icebp
xor
lea
jb
xor
or
movs
lods
or
jo
jae
fisttp
adc
xor
int
pushf
sbb
jae
dec
lds
pop
mov
add
cmp
cmps
sbb
mov
es
adc
test
xchg
dec
mov
ins
loop
lock
pop
iret
dec
in
fistp
fcom
test
ror
sahf
sub
leave
mov
sbb
sbb
jp
outs
cdq
inc
js
xor
(bad)
in
inc
sahf
test
inc
xor
and
ret
sbb
in
(bad)
out
popa
jnp
stos
jo
in
jae
mov
mov
cmp
push
pop
mov
inc
ret
sub
sbb
jbe
les
aam
xor
mov
aam
mov
hlt
sar
scas
mov
call
xchg
retf
sub
std
pop
(bad)
int
mov
sub
dec
pop
sbb
ret
movs
sar
mov
and
inc
inc
mov
in
dec
repz
rcr
sbb
cmp
adc
test
out
mov
xchg
mov
push
push
in
popa
repz
sahf
sbb
test
mov
(bad)
mov
enter
xchg
mov
aaa
jo
push
or
rol
popa
pop
sub
xor
push
(bad)
jnp
push
scas
mov
add
push
push
ffree
inc
psadbw
add
xor
in
jg
sbb
add
fcmovne
in
dec
ds
pop
push
test
xlat
stc
call
jbe
sti
sub
cmps
mov
xor
lahf
or
(bad)
inc
scas
mov
jp
inc
jle
sbb
add
push
inc
pop
enter
(bad)
pop
push
sahf
gs
rol
dec
popa
pop
mov
imul
test
push
call
mov
pop
test
out
adc
fnstenv
inc
adc
cmp
pop
bound
loopne
loope
xlat
scas
repnz
adc
fs
fmul
dec
in
mov
push
das
out
xchg
xor
retf
dec
sbb
popa
jp
pop
(bad)
and
xchg
ss
and
and
dec
mov
lods
(bad)
int
mov
mov
mov
mov
adc
push
xor
mov
xor
adc
sub
jmp
movs
mov
push
and
mov
sti
or
(bad)
pop
jg
fwait
dec
xchg
cmps
rol
popf
adc
cdq
ficomp
cwde
(bad)
aaa
jns
rol
das
sbb
xchg
cld
fiadd
scas
ror
add
or
lahf
adc
mov
or
add
or
in
repnz
je
add
fist
mov
ffree
(bad)
sahf
(bad)
pop
push
out
push
pop
push
pop
xchg
out
loope
sbb
jl
scas
cwde
push
movs
repnz
in
cdq
lods
aas
add
inc
add
jge
mov
dec
xor
and
mov
push
push
(bad)
push
(bad)
not
sbb
icebp
mov
jns
pop
nop
xor
lea
lods
push
sbb
clc
cmp
(bad)
push
cmps
mov
aam
inc
nop
jmp
or
retf
ret
xchg
push
(bad)
jl
add
sbb
push
and
imul
cmps
or
lods
dec
mov
sahf
lds
movs
xor
ja
or
xchg
sub
adc
in
jno
push
xchg
inc
mov
js
mov
aam
pop
iret
rol
or
mov
xchg
dec
ins
ins
mov
popa
jmp
pop
push
cmps
and
div
adc
fcom
daa
mov
sbb
xchg
test
std
add
or
dec
add
adc
mov
sub
icebp
or
cld
pop
inc
aam
jb
jle
rcl
test
pop
ins
push
ds
(bad)
mov
jl
or
mov
mov
mov
pop
ret
and
pop
icebp
push
adc
cmp
(bad)
jo
cmp
fs
cmp
sub
pop
sar
mov
fadd
jle
les
cdq
pop
or
(bad)
or
test
adc
cli
dec
add
jnp
(bad)
pop
movs
scas
xchg
fiadd
pop
scas
lea
push
push
(bad)
arpl
out
cmc
aad
xchg
outs
cwde
loop
mov
cmp
repnz
pusha
retf
les
imul
repnz
test
mov
mov
inc
and
mov
jmp
out
cmp
call
sti
jmp
pop
shl
jl
jl
push
cmp
inc
pushf
sbb
mov
adc
sbb
adc
cmp
pop
vmovaps
jmp
cmp
retf
cmps
sub
or
jmp
and
jb
outs
pop
sub
dec
sti
xchg
pop
out
mov
cmps
ins
inc
mov
mov
push
sahf
pushf
call
or
cdq
cmps
cmp
xor
cmp
std
pop
shl
inc
push
test
(bad)
mov
pop
add
in
cmp
addr16
xor
xor
xchg
and
test
xor
stc
or
pop
mov
jb
loop
or
cmp
jg
jle
mov
test
push
jae
lods
test
xchg
pop
pop
mov
mov
jae
lock
adc
gs
adc
and
mov
mov
in
inc
or
push
sbb
pop
imul
xchg
clc
lds
mov
inc
add
sbb
ja
xchg
mov
cmp
cmps
aam
add
jecxz
scas
aaa
sbb
rcr
(bad)
cmp
call
mov
adc
cmp
popf
arpl
ret
ins
pop
add
cli
jns
inc
lds
fild
in
ins
mov
mov
sbb
push
popa
inc
cwde
jne
popa
(bad)
jae
dec
mov
nop
call
dec
mov
add
adc
in
xchg
sub
dec
push
lea
out
mov
sub
inc
and
jo
mov
mov
dec
inc
inc
adc
test
sub
fldpi
mov
jns
(bad)
xchg
push
test
pushf
adc
xchg
dec
or
and
push
es
xchg
ret
inc
les
push
lahf
mov
jae
ficom
adc
add
jo
movs
sbb
push
adc
into
stos
mov
jbe
push
sbb
retf
(bad)
test
add
xrelease
mov
(bad)
pushf
pop
pop
cmp
rol
sahf
cmps
xchg
sbb
shr
mov
xchg
loope
ins
add
scas
push
loope
and
fdiv
gs
daa
sbb
ret
stos
jo
movs
cmp
or
pop
mov
(bad)
push
add
push
in
mov
rcl
jl
push
arpl
(bad)
xor
or
cmp
cmp
mov
push
loopne
sbb
pop
nop
cmps
mov
out
loop
or
out
dec
mov
pop
fstp
adc
adc
dec
data16
and
in
lock
bound
push
or
adc
sahf
test
pop
retf
push
mov
mov
add
es
push
ret
aam
arpl
lods
jns
repz
rcl
jp
inc
mov
test
dec
fsubr
stc
js
into
stc
adc
inc
lea
movs
dec
test
mov
adc
xor
jl
idiv
jo
enter
inc
pop
push
jb
imul
adc
retf
cdq
in
mov
ror
in
mov
(bad)
adc
sub
cmp
fimul
in
aam
mov
fs
pusha
das
adc
ret
sub
mov
cmc
adc
jecxz
ds
xor
inc
sbb
ins
adc
inc
call
xor
stos
adc
pop
dec
jbe
xor
push
ss
ss
and
jo
ss
mov
cmp
add
imul
int3
adc
xchg
jae
pop
retf
fs
aad
inc
push
scas
jecxz
pcmpeqb
call
enter
pop
hlt
call
mov
adc
inc
imul
and
add
cdq
clc
push
test
jmp
jo
pop
add
push
sub
jmp
cmp
(bad)
int
and
es
sub
scas
ja
mov
inc
(bad)
aas
ja
int3
mov
push
gs
ret
xor
movs
outs
inc
sub
data16
fldcw
pop
mov
adc
inc
mov
sub
add
pop
rcl
dec
mov
popa
jmp
mov
jg
fwait
das
dec
cwde
fs
push
dec
shl
push
jb
sahf
jo
lods
loop
and
daa
stos
stos
and
inc
xor
ret
sub
neg
repz
fdiv
pop
jnp
jecxz
fisubr
test
jg
add
test
add
xor
dec
mov
cmp
imul
mov
jns
mov
sbb
or
fcmovnbe
pop
and
jecxz
mov
xor
pop
lods
xor
ret
cmp
sub
cmp
out
lods
jmp
push
pop
mov
outs
arpl
jnp
shl
(bad)
ror
ret
jl
stos
nop
jnp
mov
stc
cmp
sbb
ds
adc
jg
sbb
rcr
inc
mov
dec
pop
(bad)
mov
sahf
in
sub
pop
test
sahf
mov
(bad)
std
push
call
(bad)
out
or
and
inc
mov
cmps
cmp
or
outs
nop
jns
clc
fwait
dec
dec
jecxz
mov
lahf
push
sub
bound
ret
pop
out
in
push
movs
loopne
fadd
jmp
cmps
mov
pusha
rcr
dec
mov
shl
push
cwde
(bad)
rcl
add
(bad)
ds
loop
movs
popf
popf
and
jbe
inc
retf
cdq
in
lea
cmp
mov
xor
jmp
jo
inc
fs
sti
xchg
adc
mov
add
fld
mov
add
stos
inc
sub
or
pop
dec
fwait
sub
xchg
cmc
pusha
add
jne
push
(bad)
aas
lods
ret
add
fldenv
ja
adc
sub
rcr
repnz
ficom
cmp
scas
jo
push
aaa
jmp
std
inc
cmp
out
cmp
jg
and
out
imul
je
rcr
jl
retf
dec
jecxz
(bad)
sti
mov
iret
xlat
sub
xchg
outs
sub
jb
fwait
ss
shl
or
retf
and
inc
movs
arpl
mov
cmp
fdiv
ret
scas
test
mov
cmps
sbb
pop
and
sbb
sub
je
repnz
adc
cmp
xor
inc
jle
adc
mov
ja
loopne
scas
sub
jmp
xor
cmps
ror
ret
ss
test
add
movs
pop
out
fimul
jg
jmp
push
jae
adc
inc
lods
ins
cmp
jb
ret
push
dec
sub
push
cmc
ds
lea
lahf
js
xor
pop
mov
jmp
push
or
mov
je
imul
inc
pop
pusha
jg
repnz
adc
arpl
pop
or
adc
mov
fwait
add
rcl
mov
iret
lods
jae
imul
pop
inc
push
jle
pop
mov
pop
fld
push
and
test
xor
(bad)
cmp
dec
addr16
mov
mov
push
add
sahf
mov
cmp
(bad)
cwde
dec
push
sub
imul
pop
jmp
or
jno
sub
pop
test
daa
loope
mov
out
sti
clc
mov
js
out
jb
mov
xchg
or
cmp
setno
dec
cmc
inc
(bad)
arpl
mov
mov
cli
sar
div
and
pop
mov
pop
cmp
lock
xor
icebp
pop
xor
ins
sub
and
test
mov
gs
push
shl
mov
add
movs
xchg
push
pop
xchg
test
call
push
fsubr
inc
in
cli
dec
xchg
dec
or
cmps
adc
mov
cld
mov
add
mov
ret
push
mov
call
cmp
mov
inc
cmovge
add
jnp
sti
inc
cld
and
xor
je
mov
enter
scas
movs
cwde
sub
mov
sbb
inc
sti
xor
(bad)
sub
es
and
cmps
and
ins
lds
adc
outs
mov
ret
jp
int
cmp
and
mov
pop
test
nop
cmp
pop
add
test
xchg
push
dec
cmp
int
dec
je
(bad)
ret
sub
adc
outs
loop
in
push
jmp
cs
inc
jns
ror
jg
test
jl
icebp
stc
sub
sub
mov
lods
inc
or
mov
dec
adc
and
inc
fmulp
dec
sti
mov
sbb
push
xchg
stc
sbb
das
adc
push
test
ret
inc
jle
pusha
out
dec
adc
push
mov
bound
dec
scas
enter
sub
xor
mov
leave
dec
mov
adc
sub
xor
mov
stos
pop
push
(bad)
xor
mov
movs
and
scas
popa
dec
push
push
in
rol
mov
pop
mov
mov
cmp
add
xlat
(bad)
js
add
mov
sbb
pop
out
(bad)
fs
shl
adc
adc
mov
sub
xchg
mov
fs
mov
inc
fldenv
or
ins
adc
adc
pop
int
push
inc
and
mov
cmps
test
cmps
push
push
ds
sub
jae
mov
push
div
jne
leave
push
push
das
imul
retf
lahf
cmp
mov
add
pop
ins
jl
aad
lahf
out
sbb
test
adc
out
pop
xchg
sbb
dec
and
mov
xchg
in
xor
js
ret
out
or
mov
sub
fs
call
nop
xor
loop
outs
stos
out
push
dec
fmul
arpl
rcl
xor
add
jae
out
jns
aad
mov
mov
xor
pop
nop
push
push
mov
sbb
adc
mov
adc
das
inc
adc
push
cmp
inc
inc
call
mov
xchg
stc
xor
xor
loope
rcr
iret
stc
and
push
call
inc
cmp
ret
ds
jp
out
mov
loop
pop
movs
jge
cmps
jae
gs
dec
and
xchg
clc
fcomp
push
sti
mov
sub
pop
mul
cld
cmc
mov
mov
or
mov
inc
cmps
push
mov
xchg
mov
loope
cdq
jge
xor
adc
mov
pop
push
add
and
in
cmp
aam
rcl
mov
push
inc
stos
add
push
fsubr
js
add
dec
into
xchg
sahf
hlt
fdiv
mov
cld
push
push
and
xor
xchg
je
loop
mov
(bad)
aam
xchg
mov
daa
pop
fs
or
sbb
xchg
xchg
out
inc
mov
aad
ror
jmp
test
shl
lea
jb
ret
rcr
sbb
pusha
enter
sub
jno
std
cmp
cmps
push
push
fcomp
into
loopne
int
outs
mov
mov
xor
mov
call
stos
mul
inc
or
inc
pop
fs
mov
inc
sub
mov
sub
ins
adc
pop
cmc
je
jmp
pop
dec
dec
mov
in
shl
push
cmps
mov
inc
mov
stos
fldenv
jne
ror
mov
lds
sub
add
call
cs
xor
ss
popa
jg
or
int3
imul
pop
or
idiv
or
in
or
test
pop
dec
inc
jge
jl
xchg
push
sub
aad
mov
cmps
mov
cmp
loope
pop
and
enter
inc
xor
mov
inc
loop
dec
inc
xor
add
std
aad
out
repz
sbb
daa
xchg
rol
js
and
adc
popa
call
das
dec
xor
mov
stos
(bad)
out
mov
add
stc
js
fcom
aad
nop
sub
inc
jle
enter
enter
shl
imul
cmp
xchg
cmp
aad
(bad)
fdivr
movs
xchg
sub
retf
test
pop
inc
dec
jb
dec
ret
push
adc
fs
addr16
mov
cdq
retf
ret
cmp
xchg
dec
fsub
xor
fdivr
in
idiv
jns
out
sbb
mov
xchg
test
ret
push
fwait
les
or
cmp
xchg
outs
push
daa
repz
outs
and
xchg
lock
xchg
inc
adc
(bad)
gs
imul
cmp
mov
loopne
addr16
lock
mov
xor
aad
data16
stos
repz
ret
inc
mov
or
retf
mov
arpl
cmps
push
into
retf
outs
ja
loop
jg
repnz
test
dec
adc
cs
adc
outs
fcmovb
jge
pop
out
mov
and
mov
enter
fimul
cli
scas
jmp
stos
mov
mov
or
pop
popa
fdiv
xchg
and
mov
sbb
icebp
inc
pop
sub
sbb
les
pop
cmp
push
adc
mov
mov
pushf
push
pop
stc
loop
sti
ror
push
jg
adc
clc
dec
pop
mov
out
lods
push
sbb
xchg
sar
xor
add
jbe
enter
mov
mov
mov
dec
test
shl
(bad)
sub
in
pop
div
rcr
enter
cmc
repz
test
clc
xchg
loope
fs
inc
lahf
dec
dec
in
dec
jg
out
les
cmp
xor
push
popf
jne
movs
inc
js
xchg
mov
mov
xor
cmp
std
sbb
loopne
(bad)
mov
(bad)
push
mov
stos
bound
dec
fisubr
xchg
pop
mov
cdq
pop
aam
push
(bad)
cmc
dec
mov
push
push
addr16
cld
mov
sub
add
or
sbb
pop
jmp
jno
or
xor
mov
cmps
and
and
xor
mov
xor
push
jns
int3
and
pop
or
in
mov
out
and
inc
retf
out
and
and
fst
cmp
clc
nop
jmp
fmul
or
xor
pop
(bad)
ror
cli
scas
jne
(bad)
lock
add
jp
cmps
int
imul
and
cmp
int3
jle
pusha
(bad)
mov
(bad)
pushf
xor
retf
xor
popf
push
test
enter
ds
cmp
xchg
scas
mov
jmp
movs
inc
inc
xor
mov
or
xchg
adc
out
aad
stc
pop
gs
xchg
inc
loopne
mov
call
lahf
test
fild
mov
(bad)
push
enter
aas
je
fist
fdivr
ss
push
mov
int
pop
nop
mov
mov
and
adc
xchg
movs
out
fstp
mov
outs
add
(bad)
enter
add
mov
(bad)
rcr
dec
dec
ds
xor
pusha
inc
sub
(bad)
loope
gs
pushf
pusha
sbb
les
xor
jne
retf
lods
jmp
jb
fld
loop
loope
(bad)
mov
jecxz
push
mov
mov
fisttp
pushf
fst
xchg
inc
cmp
pop
push
test
xchg
out
test
dec
retf
or
mov
xchg
retf
dec
lods
(bad)
mov
jbe
xchg
adc
adc
dec
mov
rcl
and
mov
std
jl
cwde
mul
or
push
mov
sub
pop
pop
sbb
mov
shl
jmp
xchg
jle
movs
xor
adc
nop
scas
mov
aam
inc
test
inc
mul
ins
sahf
fwait
pop
add
and
xchg
jle
xchg
and
xchg
jge
cmp
push
mov
out
(bad)
cmp
pop
cli
and
add
inc
in
adc
xlat
xchg
stos
sahf
imul
std
jl
loop
xor
aas
jno
mov
pop
in
adc
pop
div
push
mov
out
popa
jo
and
(bad)
rcr
in
mov
scas
aam
nop
push
(bad)
mov
cmps
pop
mov
jnp
xchg
shr
sti
jb
push
dec
daa
leave
stos
fild
mov
pop
nop
dec
and
clc
xor
inc
adc
repz
inc
daa
sbb
and
and
repz
push
stos
sahf
jbe
xor
mov
rol
enter
in
adc
cmp
lea
movs
sbb
leave
ds
rol
inc
xchg
dec
fdivr
imul
dec
popa
(bad)
cld
jle
aas
fldenv
(bad)
cld
and
push
push
cmp
mov
push
mov
xchg
shl
mov
cmp
std
retf
stos
js
inc
ror
jno
stos
jle
xor
cmp
cdq
push
mov
xor
adc
lds
mov
in
out
mov
add
test
or
pop
std
div
push
aaa
xchg
int3
out
retf
out
mov
sub
popa
xor
out
std
jae
sbb
cmpxchg
xchg
or
test
sahf
mov
test
sbb
mov
mov
test
shl
(bad)
shr
mov
mov
frstor
mov
or
lock
and
push
jg
shl
mov
or
add
cmc
and
addr16
push
ins
sub
mov
sub
scas
es
add
mov
push
and
inc
push
aaa
pop
add
mov
jecxz
pop
mov
fsubr
xchg
or
sub
test
scas
ret
fs
les
xchg
lds
es
neg
sub
fld
cmp
xchg
(bad)
jecxz
jo
imul
in
ret
ror
pop
push
out
ss
sub
add
int3
and
shl
cmp
pop
stos
fdivrp
mov
inc
mov
ins
inc
std
xchg
test
push
mov
ins
sub
xchg
xor
ins
iret
mov
cmps
cdq
ds
mov
fwait
mov
das
jb
(bad)
sub
cmp
inc
in
scas
enter
enter
imul
(bad)
cli
loopne
lods
lea
movs
jmp
xchg
scas
ss
mov
hlt
cs
pop
retf
and
push
pop
rol
adc
loop
cmps
xor
sbb
mov
jl
push
fwait
mov
adc
movs
sar
add
jle
in
scas
xor
xchg
sbb
and
inc
pop
xor
inc
xchg
(bad)
fwait
mov
mov
sbb
xchg
or
call
push
out
in
mov
ins
je
xchg
and
ret
mov
lock
xor
cmp
mov
cmp
or
in
inc
fiadd
cmp
addr16
shl
mov
sub
or
ror
into
sub
mov
push
ins
mov
xchg
adc
dec
cli
xor
aaa
sub
lods
push
bound
leave
stc
add
fst
xor
push
call
in
cmps
out
mov
idiv
jge
xchg
fxch
stos
xchg
jno
sbb
imul
mov
mov
and
push
mov
dec
mov
fcom
loop
nop
sahf
in
push
sti
cwde
or
jmp
jo
push
push
mov
adc
fild
arpl
jnp
cmps
inc
fadd
leave
dec
sub
(bad)
loop
addr16
ret
mov
(bad)
xlat
push
inc
or
jle
test
pusha
call
mov
adc
mov
rol
adc
fs
dec
jle
mov
fcmovne
pop
push
mov
and
(bad)
lods
popf
sub
adc
cld
repz
adc
jmp
adc
not
pop
push
xor
fsubr
daa
sub
lea
shr
jge
stos
xchg
mov
and
xchg
clc
jecxz
ficom
sahf
and
outs
test
arpl
fisttp
mov
and
dec
retf
mov
cmp
pop
iret
test
daa
vmovaps
cmp
loop
loopne
sub
mov
stc
test
loop
and
jo
or
dec
push
(bad)
mov
retf
jo
aam
inc
je
mov
push
(bad)
adc
mov
lods
scas
pop
sub
mov
aas
or
aam
int3
and
arpl
pop
mov
add
aas
jl
nop
xor
pop
lods
enter
mov
mov
in
cdq
out
les
xchg
jnp
(bad)
ins
xor
leave
(bad)
ins
mov
dec
or
sbb
jl
adc
jge
mov
stos
imul
mov
adc
inc
add
or
retf
inc
(bad)
arpl
retf
jns
out
mov
pusha
aad
and
jnp
pop
jl
cmps
(bad)
in
pop
(bad)
cld
push
outs
mov
jae
inc
daa
hlt
out
sub
stos
fstp
pop
adc
popf
dec
outs
iret
not
adc
or
movs
mov
ss
jne
nop
(bad)
inc
mov
and
nop
test
pop
sub
jne
daa
add
pop
cli
xchg
jecxz
cmp
sbb
jae
call
clc
outs
in
add
cdq
jo
push
in
in
aaa
dec
jmp
outs
es
mov
add
dec
fucomp
and
dec
add
fisttp
and
fcomp
repnz
popa
arpl
cli
cmp
sbb
mov
pop
lds
fiadd
mov
pop
mov
xchg
lds
cmp
push
add
not
ret
mov
xor
xchg
data16
sub
les
xor
movs
cmc
fild
ret
sbb
fldenv
inc
js
xchg
out
mov
(bad)
lods
xor
adc
lahf
ret
jg
or
mov
nop
jo
jae
pop
adc
ret
fistp
dec
cdq
std
mov
fst
lahf
jne
inc
add
jo
mov
mov
inc
and
(bad)
repnz
test
xchg
in
pusha
ins
mov
jo
pop
or
stos
sbb
into
stos
shr
es
mov
and
pop
mov
push
xor
push
add
pop
adc
or
(bad)
cli
pop
xchg
(bad)
jl
rcl
mov
cmp
in
push
sbb
iret
arpl
repz
cmp
jecxz
jo
sbb
dec
inc
jne
cmp
out
cmp
fld
sub
cmps
add
add
movs
aaa
daa
outs
cmp
cli
or
retf
mov
cmp
push
loopne
cmp
ret
push
pop
out
sbb
jno
adc
scas
xor
and
repz
xlat
retf
sbb
push
jle
dec
outs
pop
rol
pushf
mov
inc
and
lds
mov
ret
fstp
fild
popa
inc
nop
ret
sub
push
lahf
popf
or
rcr
arpl
test
fdiv
sbb
push
pop
lods
fs
pop
loope
(bad)
jle
scas
dec
shl
aam
(bad)
jmp
ins
mov
inc
pop
test
cdq
outs
jg
xlat
rol
sbb
fs
mov
fwait
cmp
ret
jl
sub
push
cmp
std
cmp
das
mov
loop
int3
aam
ret
cmp
push
mov
nop
ss
shl
rcr
es
rcl
fistp
loopne
(bad)
fwait
xor
test
add
sbb
ins
mov
xor
int3
dec
mov
rcr
(bad)
cld
imul
aaa
mov
adc
add
js
inc
jp
mov
stos
fstp
dec
dec
ds
fnstcw
test
lar
imul
ds
jbe
jmp
add
jg
repnz
shl
aas
ds
jne
push
cmp
sti
pusha
jno
movs
pop
cli
pop
mov
and
cmc
jb
or
xor
aaa
stc
sbb
cmp
push
pop
and
xor
pop
sbb
test
adc
ds
xor
pop
sub
ror
push
dec
cmp
lds
sub
in
retf
or
ret
sbb
pop
jge
aaa
inc
dec
nop
xor
inc
mov
mov
dec
add
cld
xchg
(bad)
fnstenv
retf
call
addr16
shr
(bad)
out
mov
test
into
and
iret
pop
jg
inc
loope
mov
dec
sbb
inc
ret
(bad)
jae
mov
adc
dec
lea
jg
or
fldenv
mov
or
cli
(bad)
pop
fdiv
dec
lock
xchg
push
xor
jle
loopne
pop
sub
aas
lahf
adc
cmp
lods
or
fldcw
pop
dec
psllq
gs
test
mov
xor
inc
fwait
mov
es
add
xchg
add
lahf
inc
lock
leave
mov
iret
jae
data16
sub
call
into
jb
mov
cli
push
pusha
in
(bad)
inc
cmp
loopne
out
fstp
jbe
fadd
xchg
imul
ins
clc
mov
cmp
pop
sti
add
repz
imul
cmp
xchg
sub
movs
push
imul
xchg
bound
add
imul
sub
or
data16
cli
test
push
enter
or
(bad)
mov
xchg
pop
mov
mul
pop
pop
pop
sar
and
sbb
mov
pop
push
inc
loop
xchg
sti
(bad)
and
fwait
mov
mov
loopne
ret
ja
xchg
scas
int3
sbb
pusha
push
cmc
in
jb
pop
rcr
adc
mov
or
outs
mov
xchg
pop
mov
pusha
push
mov
fdivr
inc
fs
mov
xchg
push
repnz
stos
aam
push
fadd
loopne
jns
or
and
inc
imul
scas
adc
bound
pop
ror
lahf
out
adc
xchg
jmp
ja
(bad)
movs
adc
and
rcr
sub
mov
(bad)
mov
movs
leave
xchg
in
or
xchg
or
test
js
test
xor
add
xor
and
jmp
sub
ins
cwde
sub
fwait
mov
sub
adc
je
repz
pop
adc
mov
mov
mov
ret
add
ins
jmp
dec
sbb
ins
jno
call
mov
popa
xchg
fadd
or
ja
js
add
retf
push
scas
sub
jbe
sbb
popa
daa
sub
xchg
scas
imul
lods
daa
retf
data16
sahf
xor
out
iret
stc
or
jns
cdq
iret
sbb
push
and
outs
mov
cld
dec
sub
int
mov
mov
lods
shr
push
push
push
inc
repnz
push
ins
loopne
ins
dec
or
pop
fisub
ins
or
sbb
scas
xchg
scas
aaa
xchg
outs
mov
mov
jle
mov
mov
sub
repnz
stos
dec
jbe
retf
cmps
rcr
fadd
pop
cli
fimul
fidivr
or
(bad)
jns
cwde
mov
jb
jae
popf
cmc
in
in
lahf
xlat
shl
inc
hlt
ror
xlat
xor
out
xchg
out
rcl
push
cmp
fistp
dec
and
push
mov
jmp
out
int3
jge
xchg
add
add
jne
daa
sbb
mov
push
pop
pop
mov
mov
xchg
movs
cmps
push
add
ds
sub
fidiv
push
mov
out
cli
int
pop
push
(bad)
push
inc
mov
div
in
imul
and
dec
sti
adc
sub
jle
fnstenv
jle
sbb
and
mov
cmps
arpl
push
call
inc
mov
hlt
and
mov
xchg
cmp
mov
ror
mov
sub
push
sub
cli
lea
adc
push
jp
and
stc
cmp
mov
pusha
mov
pop
xor
outs
xor
imul
pop
sbb
mov
xor
or
div
push
lock
movs
add
mov
std
fsub
mov
mov
add
mov
dec
jmp
data16
out
xchg
push
sub
jbe
in
xchg
imul
xchg
nop
xor
and
mov
mov
int3
jns
or
outs
push
push
jae
push
cwde
pop
(bad)
push
popf
mov
jbe
lahf
dec
(bad)
enter
aad
push
push
in
xchg
ja
ja
fwait
shl
lds
dec
cwde
jmp
scas
inc
cmp
sub
mov
dec
movs
and
sub
jnp
scas
jg
adc
mov
pusha
xor
mov
cmp
sbb
idiv
mov
popa
lods
fcomi
mov
loopne
loopne
push
push
xor
pusha
std
or
retf
inc
sub
xchg
cmp
dec
in
lods
out
rcr
sub
stos
sub
lods
in
(bad)
(bad)
add
call
rcr
add
ins
inc
jmp
adc
cli
into
sub
push
dec
test
pop
push
or
sub
rol
push
imul
rcl
mov
cdq
test
cs
adc
ret
sbb
ret
xor
cmp
int
mov
scas
stos
(bad)
jmp
leave
cdq
stc
(bad)
and
push
cmp
xchg
shr
clc
daa
mov
test
xor
and
ds
and
push
not
cmps
push
sti
movs
aad
mov
sbb
mov
(bad)
cmc
sub
xchg
cmovo
rcl
pop
adc
sub
dec
mov
cli
push
cmp
aaa
mov
xor
cmps
sbb
sbb
cmp
mov
or
sub
pop
jne
into
(bad)
fldcw
ins
shr
xchg
outs
loop
movs
std
xchg
adc
cmp
daa
pop
into
push
sub
iret
push
sar
movs
xchg
repnz
(bad)
dec
cmps
mov
pop
pop
inc
stos
call
or
mov
or
retf
adc
sbb
push
or
xchg
dec
rcl
mov
mov
mov
sub
xor
cmps
ret
test
js
call
jmp
xlat
out
mov
pop
fisttp
enter
movs
xchg
jae
xchg
jbe
jmp
or
push
call
out
mov
jo
ins
cmps
rcr
loopne
xchg
scas
add
scas
add
ins
add
push
jne
cmp
pop
das
int3
dec
push
jo
(bad)
jecxz
fs
pushf
(bad)
jo
sbb
dec
or
data16
push
jno
je
mov
adc
jnp
int3
xchg
lea
inc
aam
cli
je
jmp
sti
jno
xor
sbb
test
mov
push
push
fdiv
mov
xor
call
sub
in
sub
inc
mov
test
push
push
loopne
adc
mov
mov
push
rol
cdq
ins
xor
ja
mov
shl
sub
cdq
dec
adc
mov
mov
sbb
jmp
xchg
or
std
pop
lock
adc
out
das
mov
outs
or
out
test
sbb
mov
imul
jns
out
scas
jno
je
(bad)
mov
pop
mov
nop
cmp
stc
fbstp
movs
fst
jge
jns
xchg
outs
rcr
xor
outs
movs
retf
lea
stos
cmp
push
xor
fnop
enter
push
sbb
gs
and
mov
mov
or
es
mov
(bad)
fldln2
cwde
pop
sub
cdq
sub
rol
jg
add
sahf
hlt
sbb
and
cld
call
xchg
aaa
xchg
xor
adc
xchg
loopne
and
in
and
xor
es
imul
mov
and
inc
inc
sahf
fnstenv
outs
xchg
jmp
mov
ins
xchg
or
int3
cld
push
call
test
test
add
cmp
inc
inc
cmps
gs
stc
jge
movs
mov
or
daa
jmp
xchg
dec
sub
xor
pop
sahf
jmp
fs
sub
outs
call
inc
dec
enter
xor
addr16
mov
std
fdivr
div
mov
jo
sbb
add
in
xor
daa
xchg
popf
jle
dec
sbb
test
and
push
ret
dec
adc
test
mov
bound
mov
xchg
gs
es
lds
mov
imul
sub
xor
cmc
(bad)
fsubr
daa
pop
les
sbb
and
sub
lahf
mov
scas
xchg
imul
cmp
push
jle
mov
call
inc
call
rcl
add
sub
lea
shl
(bad)
dec
push
add
repz
mov
xchg
in
pop
aam
xchg
jne
push
data16
jg
push
sbb
or
mov
sti
or
cmp
fsub
fcom
ficomp
adc
pusha
inc
paddsw
mov
(bad)
inc
and
and
jp
sub
jl
daa
cs
jno
xor
sub
(bad)
sub
cmps
xchg
cmp
rcl
sub
cmps
les
jno
pop
test
pop
retf
mov
xor
out
bound
shl
xchg
retf
inc
mov
stos
test
std
hlt
xchg
cld
repz
imul
jbe
gs
ret
int3
movlps
pusha
sbb
xor
mov
ss
or
and
sti
ds
(bad)
test
push
sub
cmp
dec
or
(bad)
dec
add
retf
and
mov
daa
sahf
daa
add
call
lods
jmp
sti
xchg
iret
sbb
je
call
jmp
in
ss
retf
sub
neg
(bad)
mov
pop
mov
add
jnp
arpl
push
imul
adc
cmp
push
xchg
and
lea
add
xor
mov
cwde
xchg
push
(bad)
fcom
pushf
mov
sbb
retf
fbld
push
inc
sbb
cmc
int
out
cmp
and
adc
je
daa
mov
xor
daa
bound
jle
jle
add
lahf
(bad)
popa
dec
xor
out
dec
imul
retf
leave
mov
push
(bad)
into
cli
mov
pop
int3
out
cmp
cmps
shl
loopne
xor
sub
mov
mov
pop
jb
or
arpl
add
mov
push
dec
div
mov
in
and
jae
call
and
inc
shl
sbb
lock
or
(bad)
mov
stc
dec
pop
lock
ins
mov
pop
imul
(bad)
jno
daa
fs
stos
sub
or
dec
fimul
int
push
xchg
cmp
xchg
pop
push
push
mov
add
les
out
repz
int
mov
xchg
jb
inc
sar
iret
outs
inc
xchg
or
hlt
mov
mov
outs
hlt
pusha
and
mov
mov
mov
je
and
nop
mov
shr
pop
leavew
mov
ds
jns
sbb
je
jae
xor
enter
xchg
(bad)
outs
sub
lea
in
cmp
add
mov
jge
inc
enter
inc
push
ret
mov
ss
push
cs
jae
mov
ins
dec
add
mov
push
mov
aam
pusha
(bad)
adc
xor
dec
cmp
mov
mov
or
scas
sbb
imul
ret
ret
fwait
cdq
cs
fcom
sbb
in
xchg
retf
lahf
or
adc
xor
mov
pop
ror
and
int
cmp
(bad)
xlat
imul
push
adc
lods
lahf
mov
sub
loope
fnstcw
repnz
jg
test
or
or
sbb
push
sub
cmps
xor
ror
mov
mov
mov
repnz
push
(bad)
rcr
bound
jl
adc
add
test
fidiv
jno
lods
xor
je
mov
int3
xor
push
cmps
inc
adc
rcr
add
mov
jnp
repz
sbb
jbe
ss
xor
adc
shl
dec
out
pop
les
dec
dec
xchg
mov
pop
push
jecxz
shl
add
dec
retf
out
fldcw
outs
jle
aam
int
inc
dec
fadd
in
ss
cli
std
cs
(bad)
dec
push
cmc
dec
push
ret
std
sub
out
add
mov
(bad)
xchg
push
mov
sbb
stc
or
adc
inc
adc
fmul
(bad)
or
movs
imul
movs
data16
retf
mov
ja
repnz
outs
js
jno
das
pop
push
mov
popa
mov
jge
sub
mov
cmc
jae
aam
jne
push
mov
and
or
aas
jl
into
(bad)
pop
shr
shl
in
and
sbb
cmps
mov
aas
xchg
popa
jns
clc
sbb
or
push
sub
cmp
jle
push
ret
in
popf
(bad)
scas
div
mov
and
mov
pop
repz
xor
sbb
add
jae
sahf
fld
sub
arpl
ja
mov
cmps
fcmovnb
fmul
dec
es
inc
inc
fbld
addr16
shl
jns
in
imul
(bad)
fs
sub
ds
and
inc
adc
lods
xchg
add
cs
lods
sbb
gs
cmp
lods
jns
out
(bad)
adc
sub
cld
adc
ret
pop
push
(bad)
push
adc
jne
push
cli
pop
ficom
ret
pop
repnz
pop
outs
je
mov
pop
lds
lods
mov
mov
cmc
std
cmps
xor
cmp
pop
ds
in
data16
(bad)
aad
dec
mov
hlt
(bad)
aas
int3
sub
clc
mov
das
mov
jmp
jmp
sbb
cmc
mov
push
and
and
gs
fs
dec
inc
xchg
in
test
jne
out
push
dec
loopne
push
data16
hlt
iret
enter
rcr
(bad)
bnd
sbb
loop
jmp
inc
neg
cld
stos
inc
das
(bad)
push
add
jo
xchg
bound
jmp
jbe
mov
cmp
inc
mov
leave
push
dec
mov
es
cmp
jl
or
outs
ja
ss
ret
jne
out
bound
shl
push
push
leave
movs
cld
mov
inc
xchg
mov
cld
adc
cld
in
adc
xlat
(bad)
cmp
jo
dec
inc
mov
scas
inc
fnstcw
ror
cmps
outs
lds
(bad)
xor
jae
cmps
rcl
test
pop
mov
loop
fldcw
cld
xor
movs
fdiv
add
imul
popf
les
push
movs
out
ret
mov
ja
ss
xchg
(bad)
in
mov
cdq
stc
outs
in
rcl
jnp
pop
imul
cmps
fisttp
inc
mov
pop
(bad)
sub
xchg
xlat
cdq
push
mov
cmp
fidivr
jl
bound
mov
out
popf
ja
retf
out
ins
push
mov
imul
(bad)
scas
sbb
leave
sbb
call
repz
(bad)
iret
mov
out
adc
and
adc
dec
push
lock
out
mov
cmp
sahf
jge
xchg
imul
clc
clc
pop
in
lods
xchg
and
ror
xor
sahf
dec
out
jnp
pop
enter
loopne
and
jmp
xor
bnd
pushf
mov
push
rcl
les
jp
xlat
dec
loopne
adc
mov
(bad)
call
xor
add
loope
pop
mov
mov
push
or
outs
ja
pop
mov
jle
or
js
cmc
inc
loope
or
(bad)
mov
cmps
jl
xchg
mov
cmp
ja
inc
xchg
mov
cld
jecxz
(bad)
mov
mov
loope
test
addr16
fwait
(bad)
sbb
dec
fmul
call
aaa
mov
mov
mov
call
movs
inc
aas
cmp
out
(bad)
dec
add
jecxz
jmp
mov
in
jbe
push
jbe
cs
mov
dec
daa
cmp
ret
test
xor
imul
pop
mov
xor
add
xchg
out
nop
adc
and
sbb
pop
dec
inc
sbb
xor
add
or
dec
fiadd
mov
hlt
inc
mov
retf
xlat
pop
sub
ja
mov
mov
and
xor
out
add
icebp
lahf
push
loopne
(bad)
lds
gs
adc
dec
mov
addr16
push
ins
xchg
jo
sub
push
push
icebp
lahf
pop
stc
not
popf
imul
out
push
xchg
scas
call
pop
push
(bad)
(bad)
pop
and
cmc
or
xor
bound
int
mov
scas
fdiv
retf
cmp
push
sar
bound
popa
ret
push
mov
outs
adc
lock
mov
nop
es
test
sub
call
cmc
adc
retf
ins
ins
and
cmps
pop
dec
mov
jo
pop
idiv
or
popa
(bad)
cli
cmp
in
std
sub
xchg
mov
mov
pop
jmp
lahf
(bad)
repnz
loop
or
aaa
add
inc
loope
or
jne
push
cdq
and
push
mov
(bad)
mov
movs
shr
scas
xchg
into
fiadd
push
movs
inc
int
pushf
mov
outs
mov
push
jb
inc
xlat
cli
xchg
rcl
lahf
test
imul
xor
jmp
or
jecxz
cmp
jmp
mov
aam
gs
inc
hlt
inc
pop
nop
mov
call
inc
mov
xor
push
scas
fmulp
(bad)
in
into
inc
pushf
xchg
sbb
or
jae
jg
mov
div
sub
call
cmps
inc
push
xor
dec
xchg
arpl
mov
adc
lods
or
(bad)
jp
fwait
push
dec
jns
cld
bound
pop
dec
in
pusha
ins
sbb
jl
arpl
int
cmp
out
adc
xor
scas
cmp
mov
call
mov
add
outs
and
test
add
jge
call
sub
cs
adc
adc
int
(bad)
mov
and
sub
in
inc
pop
mov
lea
lss
pop
mov
inc
mov
and
cmp
mov
pop
jae
jp
cmps
sbb
push
cmp
sbb
shr
sbb
fiadd
jo
jb
in
jnp
xor
mov
ins
(bad)
dec
sbb
(bad)
or
add
lds
and
add
inc
pop
mov
push
or
outs
push
ins
aas
fisubr
fdivr
ins
int
xchg
push
jecxz
scas
hlt
aad
daa
sahf
(bad)
repnz
pushf
pop
cmp
movs
fisttp
int3
push
or
xchg
push
loop
bound
xchg
mov
dec
ret
out
dec
jecxz
mov
(bad)
mov
dec
nop
ss
inc
adc
test
xor
pop
push
mov
fs
test
out
jecxz
idiv
push
mov
adc
mov
fimul
jmp
push
lods
jns
cs
mov
inc
int3
aaa
lods
sub
jle
nop
jle
dec
dec
add
scas
adc
btc
shl
cwde
arpl
mov
lahf
sub
or
jcxz
xchg
adc
sub
repz
test
lock
cmc
(bad)
ss
cmp
jge
inc
(bad)
stc
xor
into
adc
sub
(bad)
(bad)
push
enter
fs
in
sbb
fwait
xor
sbb
or
out
cmp
dec
popf
push
jge
fwait
pop
jecxz
std
rol
sub
push
mov
repz
ror
pusha
dec
xchg
adc
mov
mov
fstp
aad
xchg
test
xchg
not
mov
nop
or
jb
lea
das
dec
xchg
mov
popf
add
cmp
(bad)
xchg
outs
dec
xchg
ds
pop
push
arpl
jae
mov
mov
fdivr
ret
inc
mov
iret
lahf
mov
movs
aad
cmp
jecxz
jmp
push
cmp
dec
ss
sbb
add
leave
clc
rcr
repz
mov
stos
add
add
xchg
mov
imul
(bad)
sbb
and
sub
jbe
mov
xchg
jne
jp
add
cmp
in
pop
inc
sub
dec
jp
push
movs
(bad)
idiv
sahf
mov
fcom
jg
fcom
in
sbb
sub
sbb
call
repz
sub
dec
ins
iret
loop
cli
or
cmps
push
iret
push
xor
fisttp
inc
pushf
cs
fistp
iret
mov
out
lahf
int
popa
mov
pop
and
aas
ins
loop
cmp
into
dec
jbe
sahf
jns
pop
(bad)
in
adc
nop
inc
ins
mov
int3
mov
mov
adc
sbb
lods
jp
and
xor
inc
in
inc
sub
retf
mov
outs
scas
fdiv
mov
add
push
xchg
sbb
inc
dec
clc
xchg
push
sbb
movs
retf
and
clc
adc
aaa
mov
mov
aad
sahf
push
and
(bad)
cmp
ins
and
adc
and
mov
inc
lods
in
js
movs
adc
pop
mov
in
repz
jmp
sbb
adc
mov
mov
out
jno
adc
daa
add
sbb
jb
cmp
push
mov
or
sahf
adc
jne
push
sub
movs
aaa
xchg
in
cmp
pop
or
xchg
or
imul
sub
scas
pop
clc
fistp
(bad)
daa
dec
sbb
cli
jns
shl
jne
jmp
addr16
mov
xlat
mov
bound
cli
inc
mov
cmp
rcr
jmp
add
neg
sub
cmp
fcomp
popa
and
repnz
push
bound
jb
add
inc
pop
jge
jmp
xchg
pop
cmp
jg
je
mov
add
out
pop
jp
push
lds
sbb
and
cmps
xlat
xlat
jb
les
mov
cmp
(bad)
movs
mov
dec
lods
jne
and
ss
or
dec
cmp
mov
adc
mov
dec
and
call
retf
push
and
mov
dec
stos
jno
xchg
bound
retf
enter
fcomp
and
test
or
jb
add
into
lahf
xchg
cmp
adc
fsub
hlt
lea
sub
sbb
mov
pop
mov
pop
or
adc
dec
adc
mov
repz
js
sbb
push
ds
xlat
adc
(bad)
xor
cmp
or
or
and
js
outs
inc
daa
mov
inc
ret
std
sahf
pop
or
das
sub
mov
adc
xor
pop
push
xchg
test
jle
adc
(bad)
cmp
movs
push
aad
and
rol
aas
jae
mov
xchg
add
sub
out
and
pop
sbb
dec
jmp
sbb
mov
pop
add
jge
and
std
dec
and
push
lock
cwde
or
fld
loopne
or
fcomp
add
adc
cwde
int3
push
(bad)
jb
pop
jle
dec
icebp
pop
or
push
xchg
cdq
add
inc
cmps
and
adc
dec
xor
int3
stos
cwde
xchg
pop
in
out
mov
aam
mov
add
repnz
xlat
or
sub
imul
sbb
sub
mov
adc
mov
and
jae
jp
inc
mov
pop
fstp
push
shl
iret
mov
xchg
iret
cmp
in
xor
and
push
mov
mov
mov
xchg
adc
adc
fild
jae
sub
stos
outs
lods
scas
(bad)
xchg
jne
sar
repz
dec
xchg
and
lahf
push
add
jb
mov
sbb
cmp
sub
mov
jp
pop
call
addr16
cmps
push
inc
pop
xchg
aaa
fdivr
mov
sbb
fcmovnbe
pusha
push
xlat
inc
bound
xor
pop
jb
xchg
inc
das
rcl
dec
cmp
pop
(bad)
(bad)
addr16
mov
add
call
push
xchg
test
pop
not
jbe
xchg
imul
adc
mov
in
inc
(bad)
outs
or
and
lods
aaa
aas
rcr
aad
retf
cmp
loopne
jmp
jmp
imul
add
and
in
mov
and
mov
xor
mov
mov
and
sbb
nop
imul
xchg
(bad)
xchg
test
leave
push
mov
cmps
inc
loope
std
mov
push
repnz
shr
add
fs
xor
es
mov
xor
jnp
int
cdq
pop
lock
sbb
sbb
sub
je
fsubr
xchg
xchg
cli
sbb
mov
cmps
fdivr
xor
hlt
or
test
fnstsw
inc
pushf
cli
inc
gs
or
or
xchg
and
xchg
test
scas
in
fstp
mov
icebp
push
rcl
push
imul
cdq
push
stos
mov
out
dec
dec
out
push
xor
lahf
pop
jg
adc
jmp
sub
sbb
jg
sub
test
hlt
sar
mov
pop
cmps
sbb
(bad)
in
jbe
push
fsub
add
inc
lds
and
sbb
js
mov
in
fcomp
jno
push
add
into
mov
hlt
xor
jno
stc
dec
adc
repz
pop
jae
push
fmul
fbstp
in
scas
pusha
scas
or
push
xlat
bound
lahf
and
sbb
pop
dec
push
jnp
(bad)
ja
cli
cs
xchg
ins
and
popa
pop
dec
sar
stc
outs
gs
jb
fisub
adc
xlat
sbb
dec
xor
ja
call
sbb
and
add
ret
daa
jbe
scas
jmp
das
xchg
mov
adc
pop
mov
and
mov
popf
jle
movs
mov
mov
sbb
fstp
in
pop
add
push
dec
clc
mov
mov
test
push
and
jo
movs
(bad)
mov
push
cwde
or
in
dec
ret
cdq
mov
js
das
inc
mov
mov
jo
mov
repnz
pop
add
shr
jle
(bad)
aaa
and
dec
cmp
add
call
movs
imul
mov
pop
dec
or
iret
push
add
mov
lds
pop
adc
popf
outs
scas
(bad)
inc
pushf
in
and
sbb
sub
into
fs
or
dec
xchg
shl
and
inc
xor
stc
xchg
test
int3
mov
test
imul
rcr
jmp
call
scas
mov
xor
adc
push
mov
sub
mov
inc
sti
mov
adc
stc
mov
mov
add
stc
inc
das
addr16
mov
pop
fwait
pop
inc
push
inc
add
loopne
inc
inc
dec
xor
mov
sahf
fst
inc
sar
mov
aam
pop
or
mov
dec
out
xlat
repnz
lahf
imul
push
cpuid
pop
dec
xlat
int
movs
enter
dec
add
or
shl
mov
mov
in
cld
fadd
repz
jb
(bad)
mov
jg
popa
or
aas
xchg
dec
sbb
jo
ds
pop
ror
in
das
inc
retf
fsubp
pop
aad
stc
jo
mov
popa
loopne
cmp
shl
pushf
lods
lods
scas
sti
lahf
sar
adc
cmc
push
cli
xchg
xchg
dec
shr
lds
clc
jbe
inc
push
out
jmp
retf
scas
movs
adc
ror
and
in
jno
mov
lods
ds
fisttp
(bad)
jge
jp
xor
or
mov
add
cli
ins
push
call
test
icebp
repz
mov
add
dec
jae
add
jmp
pop
or
icebp
shr
daa
add
or
add
mov
xchg
sub
push
fcomi
sar
cwde
or
push
mov
pop
cld
xchg
sub
or
or
push
ins
mov
jo
dec
or
imul
dec
aaa
jmp
int3
mov
shr
loop
inc
iret
mov
or
in
stos
sbb
out
stos
clc
mov
xchg
inc
clc
or
loope
cmp
in
icebp
adc
(bad)
xor
xchg
jl
mov
sub
std
jg
xchg
fwait
push
inc
nop
and
xchg
repnz
sub
jb
test
in
push
jns
lea
dec
jnp
xor
sahf
nop
out
icebp
addr16
fistp
cwde
adc
xchg
push
mov
rol
bound
jb
inc
cmc
out
fcomip
das
jb
jmp
push
push
shr
cmp
push
stos
das
mov
lea
sbb
ss
cmps
jl
dec
cmps
imul
sbb
and
add
mov
dec
sbb
sub
mov
and
pop
add
mov
mov
into
pusha
ss
jns
std
aaa
xor
aas
cmp
mov
add
jns
sbb
in
xor
cld
mov
outs
jecxz
xchg
jne
out
xchg
mov
movs
outs
iret
(bad)
imul
movs
das
ror
and
add
cmp
and
jp
cdq
scas
xlat
jae
dec
mov
mov
lods
xor
mov
(bad)
and
fxch
xchg
add
mov
leave
retf
aas
test
pusha
xor
mov
or
mov
inc
(bad)
xor
out
or
sub
pushf
push
inc
xor
into
in
in
push
sub
inc
(bad)
xor
loop
mov
js
fnsave
push
pusha
mov
pop
aas
arpl
mov
cmp
dec
js
xchg
call
mov
push
jb
cmp
mov
fisttp
inc
int
rcr
in
int
pop
enter
frstor
adc
fcomp
mov
stos
out
lods
push
inc
or
pop
stos
aas
rep
shl
adc
sti
test
xchg
imul
mov
sub
add
shr
and
cmp
jmp
sub
inc
ins
and
pop
adc
sbb
(bad)
gs
(bad)
aad
mov
jge
xor
pop
xor
fidiv
cmp
repnz
lods
call
std
pop
int
stc
sti
mov
pop
sub
ss
loop
enter
pop
inc
aaa
shl
push
clc
pop
cmps
out
inc
xor
sahf
or
mov
cld
stos
cld
xchg
mov
jo
jae
inc
(bad)
pop
cmp
rcr
pop
(bad)
jnp
je
xor
in
fisub
push
jne
mov
jo
jg
data16
lods
dec
pop
cwde
in
test
jnp
xor
ret
add
push
pop
cmp
loopne
popa
ds
rcr
outs
xchg
ror
lds
adc
ds
shr
mov
xchg
mov
pop
fstp
clc
sbb
outs
cmp
out
mov
orps
dec
inc
adc
cmps
ins
dec
enter
sub
inc
cmp
push
sbb
add
mov
je
test
lahf
dec
adc
cs
jnp
dec
outs
dec
mov
imul
dec
pusha
out
push
xchg
ja
arpl
inc
pop
je
sub
rcr
sub
push
adc
outs
fcmove
enter
push
push
and
shl
scas
jecxz
pop
dec
xchg
sbb
inc
outs
jno
push
ja
sub
dec
out
inc
inc
mov
fisttp
adc
push
out
push
add
fisubr
sbb
jno
mov
retf
rol
movs
or
or
mov
jle
inc
aam
add
push
aas
out
pop
test
push
inc
cmp
(bad)
pop
push
retf
shl
(bad)
(bad)
sbb
dec
xchg
cmp
int
cli
out
rol
test
ds
xchg
mov
sub
dec
loop
or
or
jnp
sti
sbb
add
jecxz
aas
jb
out
and
aad
pop
inc
loop
xchg
add
sbb
push
out
mov
jne
pop
mov
inc
xlat
xor
dec
mov
xlat
(bad)
xor
leave
neg
icebp
into
rol
jnp
adc
mov
jmp
ret
fisttp
jl
inc
pop
mov
fcmovnb
xchg
xchg
mov
mov
sbb
dec
das
xor
push
dec
dec
fs
push
cmp
data16
inc
leave
(bad)
or
sar
movs
je
sub
pop
scas
mov
imul
dec
adc
imul
cwde
stos
mul
dec
adc
neg
mov
and
dec
int3
outs
push
pop
std
xor
adc
mov
icebp
scas
and
fs
pop
jo
jnp
fisubr
mov
gs
les
pop
enter
mov
in
fstp
je
or
test
lea
adc
add
add
nop
add
out
dec
test
mov
hlt
inc
fxtract
adc
ja
imul
jo
call
adc
imul
xor
mov
and
push
rcr
push
sub
les
out
rol
(bad)
cmp
vxorpd
imul
jmp
sahf
aad
jmp
fidiv
call
dec
dec
sbb
mov
cmp
pop
or
je
out
mov
xchg
sub
pop
or
adc
and
xchg
push
and
pop
or
jg
or
call
pop
dec
sub
repz
mov
xchg
mov
xor
cmp
pop
pop
pop
gs
pop
loop
or
pop
jno
dec
xor
int
fcomp
sbb
adc
cmp
mov
mov
add
and
dec
loope
xor
bound
adc
adc
adc
(bad)
xor
mov
pop
pop
shl
clc
movs
aas
cmps
jnp
dec
push
outs
stc
(bad)
sbb
mov
ins
add
jmp
push
ins
lods
jl
cmp
jne
jge
(bad)
pop
mov
push
retf
loopne
push
idiv
pop
xchg
test
xchg
por
test
test
arpl
xor
jl
sbb
shl
mov
leave
dec
mov
outs
dec
cmp
addr16
or
stos
fnstsw
inc
xchg
cmp
test
cmc
fucomip
and
cwde
popf
sub
push
fsub
daa
mov
loope
inc
scas
(bad)
idiv
arpl
push
pop
pop
mov
arpl
pop
(bad)
adc
in
adc
adc
es
ret
sbb
hlt
ror
cmp
lock
xor
enter
int3
pop
cmp
xlat
mov
add
outs
xchg
xchg
and
jge
sbb
and
cmps
adc
movs
imul
or
call
rcr
jnp
das
jbe
arpl
jecxz
pop
cli
mov
inc
mov
int
movs
push
xchg
cdq
arpl
nop
ret
mov
mov
inc
cmp
xchg
xchg
fisub
xchg
daa
(bad)
dec
and
retf
adc
add
loopne
dec
add
test
lods
adc
jmp
adc
mov
shl
and
leave
push
xchg
mov
cmps
adc
inc
pop
and
inc
sub
xlat
mov
fwait
test
je
(bad)
outs
jo
test
add
lahf
inc
cmp
sub
lods
xchg
retf
lock
popa
jg
clc
lods
out
adc
cmp
(bad)
shl
mov
in
add
mov
ins
loopne
pop
jbe
lods
imul
jg
pushf
pushf
pop
shr
pop
jno
sbb
gs
xchg
push
stc
cli
push
icebp
ja
jb
aad
pop
repnz
and
sub
cwde
loop
dec
or
push
stc
xchg
dec
mov
or
pop
push
sub
cdq
mov
dec
fiadd
ret
dec
test
std
gs
and
mov
push
and
cs
call
mov
xor
pushf
rcl
cwde
mov
or
in
pop
ficom
xlat
lods
cmp
and
or
push
lea
push
xchg
fild
es
sub
ins
add
push
jle
out
mov
daa
mov
stc
dec
or
leave
test
int3
(bad)
mov
mov
ds
push
xor
jg
cs
(bad)
movs
adc
pop
adc
and
sbb
popa
push
sbb
add
dec
jo
lahf
mov
sub
retf
leave
mov
inc
aas
cmp
mov
sub
repnz
mov
or
fwait
xor
test
retf
cmp
fsub
retf
mov
or
ss
in
jl
inc
sub
and
das
aaa
cmps
push
dec
aas
mov
jno
clc
test
dec
mov
aas
cmps
jmp
rcr
ret
sbb
or
pop
jo
mov
dec
and
add
lods
(bad)
daa
pop
stos
je
sbb
and
pop
loopne
jns
call
mov
lahf
test
gs
mov
lds
sbb
loop
fucomi
mov
xchg
pop
xchg
add
inc
popa
repz
jo
dec
jne
pushf
pop
pop
sub
ret
inc
xchg
cwde
gs
cmp
jne
repnz
mov
and
add
(bad)
sub
and
mov
in
pop
mov
out
jmp
fdiv
nop
dec
cmp
js
stc
cmp
sbb
(bad)
out
sbb
out
xlat
cwde
test
movs
mov
pusha
imul
mov
jnp
retf
ret
pop
mov
lds
movs
push
mov
jno
fld
sbb
xchg
lahf
mov
jb
add
sbb
mov
push
das
mov
out
(bad)
(bad)
push
add
es
sbb
jl
sti
inc
add
hlt
or
pop
push
retf
jmp
inc
es
ins
popa
or
xor
mov
popa
fistp
push
jge
lahf
push
pop
retf
mov
test
mov
mov
outs
xchg
scas
or
enter
pushf
loop
and
retf
push
dec
lahf
pop
cdq
cmp
pop
retf
call
mov
cmp
imul
outs
arpl
bound
jnp
cmp
mov
fldcw
pop
pop
xchg
mov
pop
stc
in
or
and
pushf
and
popa
cmps
repz
cli
cmp
xchg
or
in
(bad)
cli
addr16
adc
lods
(bad)
and
sbb
cmp
jmp
or
adc
push
push
mov
ja
inc
pop
adc
dec
pusha
xor
xlat
push
dec
xchg
pop
outs
call
out
dec
sti
cwde
clc
xor
mov
adc
sar
pop
jl
dec
test
mov
cmp
push
jmp
test
movs
dec
push
adc
dec
cwde
cld
xor
sti
mov
mov
jp
and
pop
enter
fadd
out
or
lds
mov
push
jns
jnp
movs
mov
mov
push
imul
enter
push
mov
loope
imul
retf
pop
adc
into
xor
clc
shr
push
dec
aad
les
cdq
neg
jne
out
jecxz
ss
push
js
clc
out
sub
dec
jge
bound
inc
(bad)
cmp
dec
clc
dec
aad
cdq
sub
inc
scas
push
sub
popa
sbb
retf
jmp
idiv
mov
jns
imul
and
cmp
(bad)
pop
sub
(bad)
mov
shl
pop
xor
dec
push
std
mov
hlt
test
fwait
dec
outs
mov
push
sub
sub
add
popa
xchg
in
cli
in
cmc
in
pop
jnp
xor
sbb
fdiv
mov
pop
mov
sub
ror
xor
adc
adc
mov
or
sbb
cmc
xor
jne
(bad)
pop
adc
sahf
xacquire
sbb
inc
arpl
and
or
add
cmp
popa
ins
into
or
cmp
aas
mov
xchg
xor
or
pop
test
ss
jge
call
push
mov
fnsave
or
mov
loop
sub
shl
xor
add
xchg
or
aad
das
xchg
out
call
xor
xchg
cli
xchg
mov
aam
or
aad
imul
and
mov
mov
mov
(bad)
jle
leave
lahf
jb
xchg
in
retf
outs
push
or
pop
xor
fwait
aam
test
jl
sub
push
or
or
mov
jo
in
lods
mov
push
imul
fnsave
cwde
cmc
add
xor
cmp
and
inc
in
stos
sti
mov
and
(bad)
in
sub
pop
(bad)
mov
pop
int3
push
mov
psubsw
inc
and
jbe
paddusw
push
sbb
cmp
es
cmps
sti
aam
push
loopne
lea
dec
aam
add
mov
xchg
cmp
mov
in
in
adc
gs
xchg
fadd
int
jbe
mov
out
in
push
push
daa
iret
push
arpl
shr
(bad)
test
lahf
mov
mov
dec
dec
mov
or
sbb
int3
cmps
add
cmp
mov
mov
(bad)
repnz
(bad)
mov
sbb
sub
mov
mov
xor
xchg
nop
rcl
pop
jg
fidivr
jl
jecxz
cdq
push
mov
nop
or
dec
or
xchg
pop
(bad)
leave
cmp
neg
adc
sub
jbe
push
cmps
pushf
mov
call
and
fcmovbe
fisubr
gs
push
jle
cmp
add
push
and
jno
sub
sub
into
aaa
icebp
pop
cli
bnd
fiadd
mov
xchg
cmps
stc
inc
push
inc
mov
mov
or
push
jp
repnz
shr
dec
int3
jg
cmp
xchg
adc
and
sbb
faddp
add
push
aam
and
test
ror
in
arpl
ja
xchg
jl
and
jg
shr
add
aam
aaa
fbld
leave
stc
cmp
adc
or
shr
imul
inc
cmp
xor
mov
cmp
xchg
sbb
push
fwait
or
out
or
pushf
sbb
loope
dec
dec
pop
inc
leave
aam
jmp
sub
stos
inc
popf
lock
or
(bad)
repnz
and
push
adc
cmc
add
repz
out
movs
les
mov
inc
mov
and
stos
push
movs
cmp
adc
jle
sub
test
sub
inc
rcl
fiadd
aam
gs
sub
es
inc
icebp
sbb
mov
push
inc
in
inc
jo
dec
sti
test
loopne
cmp
popf
movs
jb
jne
into
push
or
lds
adc
shl
shl
push
dec
movs
add
das
mov
stos
push
sub
mov
push
ror
pop
mov
sbb
icebp
or
and
add
pop
pop
mov
mov
aaa
xchg
add
inc
out
fneni(8087
pop
call
les
stos
jae
cmp
xchg
dec
push
mov
stos
test
adc
sbb
nop
push
(bad)
sahf
stos
pop
lea
cdq
jae
add
inc
and
ret
frstor
adc
add
pop
bound
outs
dec
bound
sub
push
xchg
add
mov
imul
(bad)
clc
inc
dec
pop
push
jge
test
sbb
iret
and
mov
mov
jae
(bad)
cmp
pop
popa
fmul
loopne
xor
mov
ficom
loopne
adc
mov
mov
push
lods
mov
pusha
inc
and
ins
mov
test
retf
push
xlat
lock
or
mov
push
pushf
xor
fdivp
jmp
xchg
outs
(bad)
xor
scas
and
cwde
push
cdq
cwde
pop
lds
lock
mov
xlat
fiadd
jecxz
mov
repz
adc
add
stos
dec
push
xor
adc
sbb
aad
xchg
jle
scas
jge
dec
loope
(bad)
sti
sub
or
cmp
cmp
inc
ds
ins
pop
sub
out
dec
dec
xor
test
cwde
cmc
enter
or
fmul
adc
cmp
popf
dec
and
dec
jnp
add
out
or
jmp
adc
les
pop
out
add
cmp
scas
mov
arpl
pop
out
and
ins
push
pop
ret
xchg
sub
inc
fldenv
sahf
xor
enter
sahf
aaa
push
mov
mov
add
clc
or
cdq
scas
enter
pop
mov
sub
cmp
movs
(bad)
or
or
(bad)
nop
mov
xor
or
mov
sub
call
mov
mov
mov
pop
pop
jo
adc
mov
popf
shr
push
sbb
shr
pop
jo
data16
sub
cmp
mov
frstpm(287
and
ret
mov
fiadd
out
mov
push
jmp
sub
scas
inc
push
push
jmp
addr16
shl
cld
je
cwde
pop
imul
fld
scas
mul
xchg
lods
call
cmp
fmul
inc
xchg
arpl
pop
jb
pop
pop
cdq
jg
mov
sub
sbb
mov
jp
inc
sub
fwait
popf
cli
xchg
dec
sbb
push
cmp
push
fsubr
fild
fdivr
sbb
mov
sbb
push
(bad)
out
stos
(bad)
sbb
and
jno
dec
js
nop
xor
add
aam
les
xor
sub
inc
xchg
pusha
jl
jb
cmp
mov
jne
cmp
cmp
mov
cdq
pop
pop
iret
sub
cwde
xchg
scas
add
push
inc
daa
add
jae
jle
pop
mov
push
push
rol
mov
adc
xlat
scas
sahf
push
and
mov
pop
imul
add
dec
arpl
push
adc
shl
dec
mov
xlat
inc
ret
jne
mov
outs
xchg
loope
xor
(bad)
ss
cmp
xchg
mov
pop
in
pop
test
mov
inc
test
pusha
xchg
sbb
(bad)
(bad)
xchg
push
(bad)
fld
das
jge
daa
push
xor
nop
(bad)
rol
leave
data16
lock
inc
(bad)
dec
repz
dec
hlt
pop
fcom
jmp
jmp
xor
call
bound
adc
push
add
push
shl
xchg
enter
das
push
call
rcl
test
(bad)
push
mov
push
out
fidiv
dec
dec
sbb
jge
rcl
int3
cs
cwde
or
test
mov
or
jp
xor
cmp
(bad)
xor
popf
jp
jno
shl
sub
and
xchg
pop
push
cld
inc
mov
mov
ins
and
dec
lea
stos
and
jmp
inc
repz
sbb
xchg
mov
dec
mov
shl
fstp
mov
cmp
cwde
adc
test
mov
cs
jno
je
sar
cdq
fsub
inc
(bad)
stc
sti
pop
sub
push
lods
dec
fisub
std
push
enter
(bad)
mov
xchg
stos
add
or
call
jnp
inc
inc
or
movs
pop
lods
sub
ja
lock
cmp
dec
(bad)
jno
(bad)
data16
(bad)
call
push
cmp
loope
ret
or
je
dec
push
shr
fisubr
cli
aaa
or
inc
cmp
(bad)
fldln2
mov
cpuid
frstor
pushf
and
mov
mov
jns
sbb
repnz
push
inc
nop
inc
xor
je
or
out
adc
out
add
int3
inc
imul
xor
daa
jne
(bad)
cmc
inc
pushf
(bad)
retf
push
out
mov
into
add
aam
mov
imul
mov
mov
jmp
and
stc
jbe
outs
mov
out
push
data16
xchg
sub
inc
jmp
into
cld
mov
mov
outs
xchg
(bad)
mov
lock
cmp
pop
retf
mov
jns
mov
add
iret
push
jo
mov
gs
ja
popf
aaa
sub
push
push
cmc
and
xlat
mov
pushf
hlt
mov
and
pop
stos
(bad)
(bad)
scas
fcom
ret
repz
mov
stc
sbb
in
std
scas
push
dec
sub
pop
push
int
js
out
je
jmp
mov
xor
mov
dec
xor
shl
xchg
rcr
xchg
mov
(bad)
and
enter
or
sbb
stc
inc
fidivr
(bad)
sti
push
jl
scas
inc
sbb
dec
arpl
(bad)
popa
pop
enter
gs
aaa
jne
into
dec
in
adc
push
pop
xor
imul
mov
jl
push
mov
xchg
dec
(bad)
iret
pop
adc
mov
mov
push
lahf
movs
fst
inc
pop
cmp
movs
pop
sar
push
pop
es
push
in
inc
sbb
push
dec
mov
xchg
inc
aaa
xchg
dec
cwde
imul
cmps
xchg
inc
ins
popa
fs
dec
mov
mov
sub
fdiv
out
adc
popf
dec
icebp
pusha
jbe
test
pop
pop
jb
mov
dec
cmps
stc
pop
jbe
aas
ficomp
or
mov
dec
jg
test
push
push
cmp
outs
xor
test
lods
jle
mov
or
call
call
dec
ret
leave
dec
lea
cmps
mov
(bad)
(bad)
fdivr
sub
shl
mov
cmp
add
adc
outs
mov
and
cmp
gs
mov
push
mov
push
ins
rcl
jno
mov
outs
js
add
jmp
jne
test
call
and
adc
test
shl
pop
sbb
sahf
xchg
in
inc
retf
add
mov
xor
out
adc
sbb
push
mov
popf
fs
mov
adc
ins
pop
and
mov
fwait
adc
mov
jmp
test
sbb
add
push
aas
push
sti
xchg
sti
in
fsub
ds
dec
icebp
xchg
cwde
scas
and
ds
mov
jae
jge
jl
inc
loopne
scas
lea
sub
test
or
push
pop
imul
pop
ret
std
aaa
push
outs
add
jno
lock
cwde
sub
fisttp
daa
sub
dec
jns
aaa
or
ins
mov
sub
adc
and
jbe
mov
popa
lods
xlat
or
cmp
cwde
cmp
sub
pop
leave
fiadd
xchg
push
mov
and
mov
cmp
cmc
fwait
jmp
mov
nop
das
dec
daa
mov
gs
push
repz
or
mov
movs
push
mov
push
test
lds
retf
cmp
cmp
add
pusha
xor
push
leave
cmp
xchg
fstp
add
jo
dec
(bad)
div
pop
in
cmp
cdq
cmp
xchg
paddq
fs
mov
pop
push
js
cmp
jl
mov
shl
dec
and
push
neg
push
mov
out
test
stos
cmps
mov
sbb
jo
clc
das
ins
and
and
or
inc
sbb
test
cmp
sub
xlat
test
add
xor
popa
jl
inc
sub
jns
cdq
xor
or
(bad)
std
and
sbb
xor
clc
sbb
jbe
mov
or
int3
js
xchg
pop
pop
fadd
cmp
sub
lock
push
repnz
rcr
aam
cs
jne
hlt
xchg
fdiv
lods
popf
lods
adc
pop
retf
adc
repnz
push
pusha
xor
outs
mov
stc
sbb
lds
shl
cmps
cmp
inc
test
pop
xchg
cmp
rcr
std
mov
pop
test
imul
enter
or
adc
aam
stos
xchg
popa
clc
or
(bad)
jnp
mov
cmps
jg
xor
dec
adc
add
xchg
adc
sbb
leave
dec
jl
mov
sbb
ins
and
xchg
lds
mov
cdq
add
mov
xchg
mov
and
popa
jo
push
mov
mov
bound
and
dec
mov
stc
(bad)
enter
xlat
retf
adc
popf
mov
leave
jns
mov
sbb
lods
mov
popa
sbb
scas
adc
dec
es
lods
or
leave
dec
mov
ror
and
fist
pop
test
cli
dec
jg
xor
adc
sbb
scas
pop
push
dec
stos
jbe
mov
jne
dec
mov
gs
xor
cmps
jno
pushf
addr16
ficomp
xchg
in
lea
and
and
sub
clc
cmc
in
jbe
mov
jmp
test
dec
pop
pop
push
ss
int3
rcr
inc
mov
dec
fwait
adc
aam
jbe
cmps
push
test
pop
mov
xchg
push
and
test
lea
cmp
jno
sbb
jl
int3
or
pop
jg
jo
push
mov
add
adc
and
xchg
or
sbb
clc
sbb
mov
cs
fistp
scas
push
sbb
push
jg
xlat
dec
mov
cdq
aaa
push
pushf
mov
push
ja
sub
hlt
sub
fiadd
std
cmc
mov
jmp
or
clc
jb
js
ret
push
inc
and
cs
jno
xchg
call
sbb
out
add
push
pop
mov
xlat
cs
or
xor
je
push
xor
push
jge
jmp
in
pop
pop
push
pusha
cmp
adc
dec
pop
outs
pop
(bad)
stos
pop
das
cmp
jnp
push
jg
sub
cmps
add
sbb
mov
lods
pop
aam
cmp
pop
sub
mov
cs
mov
dec
mov
add
or
popf
xchg
(bad)
and
and
adc
retf
mov
sar
fwait
lds
jo
popf
inc
mov
sub
sub
ret
dec
xchg
fisub
es
mov
popf
mov
inc
or
ret
movs
push
out
repz
cmps
cwde
xor
sub
(bad)
lods
(bad)
and
xor
stos
sbb
fnsave
xor
stc
ficom
je
in
mov
xchg
lods
vunpckhps
popa
out
inc
(bad)
xchg
dec
sub
jp
mov
lea
stc
jl
leave
cdq
repz
inc
fmul
add
and
out
xor
mov
in
xchg
jge
jmp
or
mov
xor
adc
mul
adc
repnz
int
adc
mov
rol
scas
test
out
fdivrp
or
retf
movs
jp
jno
xor
sbb
pop
mov
xor
in
fsub
xchg
lds
mov
ror
mov
pop
movs
cdq
cmp
mov
sub
mov
inc
(bad)
mov
mov
cmp
adc
test
or
out
cmp
or
and
add
fld
ret
xchg
or
mov
out
stc
mov
xchg
sub
outs
imul
loopne
aas
mov
ds
das
mov
push
mov
popf
popa
push
faddp
cmp
push
jecxz
aad
mov
pop
xchg
(bad)
(bad)
retf
rcr
test
fsubr
add
or
add
mov
aad
(bad)
div
lods
push
inc
aad
repz
mov
mov
mov
popf
adc
aas
dec
sub
xchg
mov
push
dec
je
jns
repnz
and
setnp
lea
or
outs
or
cmc
mov
add
out
aam
add
push
xchg
push
cmp
cmp
(bad)
in
fldenv
jle
fcmovnu
aaa
lea
cmp
out
rcl
pop
hlt
sbb
jns
ror
outs
adc
out
std
cwde
ja
int3
push
push
xor
mov
xor
sub
mov
or
(bad)
dec
icebp
es
jle
out
(bad)
dec
loop
xor
imul
test
into
data16
pop
inc
add
sub
rcr
inc
and
mov
dec
rcl
jo
xor
jl
pop
mov
fisubr
xor
sub
jae
mov
cmp
imul
enter
ins
hlt
push
ja
aad
push
mov
sub
xor
test
push
(bad)
ficom
sub
sbb
enter
call
dec
addr16
and
fwait
call
loop
dec
arpl
lds
iret
adc
(bad)
out
cmp
inc
data16
scas
inc
sbb
xchg
iret
add
push
inc
and
lods
stc
fidivr
ficomp
cmp
shl
call
xor
jg
push
lahf
xor
cmp
fs
dec
sub
enter
or
mov
(bad)
(bad)
sbb
lods
inc
pop
cwde
mov
div
sbb
aas
cwde
xor
inc
jmp
sbb
cmps
fstp
rol
test
movq
xchg
fsubp
pop
pop
lea
mov
leave
mov
rcr
mov
xchg
in
inc
rcr
call
push
jl
mov
mov
es
cli
mov
daa
mov
loop
mov
sub
adc
cmps
ins
sbb
nop
xor
push
cmp
cs
movs
mov
mov
jae
xor
hlt
pop
jle
jb
ins
and
mov
inc
lea
xor
loope
test
stc
out
and
mov
das
rcl
push
jmp
imul
shl
push
in
arpl
out
je
or
mov
xor
dec
call
in
xor
push
cmp
xlat
das
inc
mov
cs
ss
gs
rcl
push
push
call
ins
dec
jno
shl
ficomp
jno
xchg
jmp
jb
jbe
movs
xchg
mov
ja
fisttp
outs
out
mov
push
sbb
ror
scas
repz
push
ds
jmp
jge
scas
ds
cmp
sbb
lahf
fmul
jnp
ss
push
stc
xor
pop
nop
mov
sbb
stc
push
xchg
inc
cmp
lahf
pop
jns
icebp
repnz
hlt
fadd
aam
push
mov
aas
fstp
movs
imul
leave
mov
cmc
xchg
movs
bound
fisttp
(bad)
xchg
hlt
(bad)
pop
inc
xor
xchg
clc
pop
ror
push
clc
pusha
xor
fiadd
(bad)
loop
and
sahf
add
inc
pop
and
cmps
in
in
or
pop
mov
push
push
sbb
mov
mov
sub
push
cs
lahf
(bad)
test
sbb
adc
mov
sub
pop
arpl
push
or
cmp
mov
push
cmp
pop
ins
out
test
in
inc
push
cli
lds
dec
xchg
cmp
adc
loope
or
xor
xor
pusha
cmp
inc
outs
ja
nop
cdq
les
push
ret
bound
(bad)
std
jns
bound
dec
or
sar
jmp
or
cld
push
push
mov
pop
mov
sub
and
shl
xor
mov
ret
mov
mov
ret
inc
lock
and
test
daa
cli
daa
xchg
and
stc
js
push
inc
cmp
enter
popa
out
xchg
outs
push
ins
xlat
cmp
nop
xchg
sub
sub
sbb
outs
mov
int3
or
in
mul
and
pop
addr16
iret
into
xchg
adc
cmp
adc
loop
loop
fadd
xchg
pop
jmp
jb
sub
aad
sub
inc
and
push
mov
xor
inc
cmps
push
inc
out
aad
clc
add
ret
out
aas
inc
and
sbb
pop
mov
inc
mov
mov
sti
push
mov
shl
adc
mov
adc
mov
test
adc
das
add
shl
mov
sbb
cwde
cli
push
sub
xchg
inc
sti
cli
(bad)
xor
mov
dec
and
xchg
cmp
in
jae
add
(bad)
retf
jle
and
jge
pop
dec
mov
xchg
sbb
cmc
jmp
lahf
xor
xor
jp
sar
xor
test
ins
jo
cli
push
jecxz
dec
cdq
imul
cwde
sbb
out
xor
fwait
dec
test
xchg
inc
outs
(bad)
adc
xor
jnp
jb
in
xor
lds
or
push
add
mov
jp
jle
test
pusha
jbe
inc
sbb
bound
push
xchg
loope
repz
fnstenv
or
jae
lods
(bad)
ja
imul
(bad)
mov
fild
pop
push
js
aam
in
imul
dec
sti
xor
mov
pop
aad
xor
mov
dec
imul
sub
inc
imul
push
add
xor
mov
pop
jmp
jle
and
or
mov
mov
into
data16
jle
pop
scas
add
jg
aas
arpl
clc
test
dec
(bad)
and
scas
cmps
sahf
cmp
dec
(bad)
adc
test
adc
xor
mov
add
cmp
xor
test
sbb
mov
mov
stc
(bad)
pop
pop
and
repz
jmp
or
frstor
push
sbb
xchg
aad
rcr
and
inc
ss
xchg
ret
sbb
mov
sbb
xchg
mov
push
out
(bad)
loopne
cmp
mov
addr16
loopne
mov
jle
fild
in
mov
adc
fadd
outs
test
scas
stos
ret
movs
(bad)
jnp
jge
ds
lea
aad
call
or
jg
inc
sbb
int
(bad)
aam
ficom
mov
mov
out
fs
mov
mov
and
mov
cmp
pop
mov
and
sbb
mov
cmp
fnstenv
(bad)
jo
test
std
adc
shl
mov
add
sbb
jmp
into
call
sahf
pop
fcomp
shl
out
test
retf
call
ins
xor
mov
jl
(bad)
call
sbb
push
push
enter
and
mov
call
and
ret
mov
dec
shr
(bad)
hlt
leave
sahf
jo
aas
inc
inc
push
fs
and
in
add
sbb
xor
and
adc
adc
mov
mov
push
dec
iret
ret
pop
fsub
add
lock
jo
mov
iret
sti
sbb
mov
inc
sbb
cli
and
add
data16
add
adc
jecxz
mov
mov
jns
sub
or
sbb
xor
clc
cld
pop
lds
inc
(bad)
sub
and
rcr
mov
jp
sub
dec
or
mov
dec
mov
or
mov
or
cmp
fnstsw
xchg
push
jns
add
push
adc
mov
retf
push
add
bswap
xlat
or
mov
fidivr
pop
jle
and
mov
loop
sbb
jb
cdq
xchg
movs
inc
ficomp
es
adc
cmp
in
popf
xor
sbb
pop
dec
loope
jne
in
and
jg
(bad)
dec
push
out
pop
fidiv
mov
ds
sbb
rcr
pop
ins
sahf
adc
fcmovb
in
and
int3
pop
push
stc
jg
and
int3
je
cli
jp
add
lea
pop
push
imul
imul
add
repnz
test
jbe
je
neg
jbe
in
push
xlat
cmp
ficomp
cmps
jmp
(bad)
xchg
or
mov
in
push
outs
pop
(bad)
inc
mov
inc
inc
(bad)
jle
adc
adc
or
test
pop
ins
and
mov
sub
sub
outs
ss
mov
push
cmp
cmps
fs
pushf
cmp
mov
cmps
(bad)
iret
inc
inc
xchg
iret
ja
bound
jae
fdivr
fst
jl
in
and
clc
in
in
xchg
or
dec
sbb
sub
sub
fisub
mov
imul
dec
push
and
xchg
pop
jle
or
and
pop
call
xchg
inc
jne
add
mov
xchg
test
sbb
jl
xor
scas
stos
das
jecxz
inc
adc
pop
stos
std
fsubr
test
xchg
retf
pop
mov
in
or
or
in
pop
loop
mov
cmp
sbb
(bad)
xlat
cmp
(bad)
pop
in
ins
dec
aad
je
dec
mov
or
mov
shl
cmp
xlat
aad
push
adc
aad
xor
push
cli
add
inc
enter
sti
dec
lods
sbb
addr16
es
or
jl
mov
mov
cs
lds
repz
dec
daa
pop
sbb
push
fcomp
fadd
xchg
(bad)
lods
sub
(bad)
cmps
stos
fsubr
inc
dec
ret
fcom
data16
(bad)
clc
adc
mov
adc
test
pop
fsub
and
mov
outs
int
xor
pop
or
cwde
or
lea
mov
sub
imul
xchg
shl
or
sahf
test
xor
push
or
gs
jb
jmp
jne
aam
xlat
inc
xor
into
inc
loope
fild
jecxz
dec
test
(bad)
rol
adc
inc
mov
and
mov
(bad)
fstp
jno
mov
xchg
stc
idiv
mov
inc
leave
into
inc
imul
mov
outs
cmp
jb
in
rcr
in
outs
test
mov
or
aaa
add
and
std
out
cmp
jo
xor
sahf
push
or
inc
dec
movs
aaa
test
addr16
add
mov
scas
lds
xchg
sbb
ja
ins
push
pop
in
aaa
mov
mov
into
mov
into
inc
shl
jecxz
aad
xor
shl
mov
pop
adc
fisttp
add
call
outs
in
xor
add
mov
loopne
or
fwait
das
das
lock
push
int3
mov
mov
jns
ret
push
mov
or
xlat
cwde
jmp
adc
imul
test
ins
push
icebp
repz
(bad)
push
ds
sub
mov
leave
add
sbb
(bad)
arpl
sbb
rcr
xor
ja
arpl
(bad)
aas
ins
jp
inc
xchg
daa
xor
retf
cmp
test
and
dec
loope
test
sbb
push
div
(bad)
xchg
fst
mov
hlt
dec
jbe
cmp
out
jge
mov
and
inc
mov
hlt
and
pop
mov
xchg
fst
test
jle
daa
sbb
push
sbb
xlat
add
repz
imul
(bad)
loopne
mov
sub
add
push
pop
dec
mov
add
dec
(bad)
data16
pop
fisub
xor
leave
xchg
adc
jmp
ins
sbb
iret
pop
add
xchg
mov
mov
out
cmp
push
mov
mov
inc
ss
ret
pop
push
leavew
pop
dec
cmc
push
cmps
adc
jne
dec
jge
movs
mov
movs
mov
inc
popf
push
fs
push
jp
lods
mov
jns
data16
mov
out
mov
jle
mov
jmp
cmps
fcmovbe
in
pop
sbb
aam
out
mov
outs
xor
mov
fidivr
xchg
jbe
adc
jae
cmp
test
mov
pusha
xlat
pop
aad
mov
mov
fcomp
mov
lock
pushf
hlt
fs
psrlw
dec
pop
mov
dec
test
add
sub
push
shl
dec
(bad)
xchg
jb
das
or
mov
push
rol
popf
ja
jmp
jmp
dec
inc
dec
(bad)
and
dec
jecxz
pop
cmp
push
cmp
shl
sbb
jae
add
or
ror
test
fwait
or
mov
scas
call
mov
test
cwde
or
dec
mov
jle
sbb
jl
mov
jo
and
jecxz
inc
aad
in
push
push
and
es
js
pop
sub
fnstenv
cmp
adc
inc
and
lock
mov
sbb
into
fadd
dec
push
inc
test
adc
xchg
jne
push
(bad)
rol
(bad)
mov
jno
aaa
and
mov
test
sub
lods
sub
pushf
repnz
mov
mov
adc
sti
shr
ds
retf
mov
imul
cld
and
stos
inc
cld
outs
sub
cmp
in
outs
pop
shl
inc
and
push
xchg
jg
inc
movs
cmp
loopne
mov
jb
mov
test
(bad)
jns
cmp
arpl
dec
retf
leave
pop
in
sbb
or
mov
or
fwait
adc
xor
or
or
xchg
add
mov
pop
leave
scas
pop
sub
icebp
or
pop
sti
jg
mov
push
hlt
shl
push
fs
and
adc
ret
push
hlt
cmp
movs
fstp
out
mov
sub
cmps
dec
cs
mov
pop
enter
pop
repnz
inc
add
fistp
pop
sbb
adc
aam
je
and
and
xor
inc
vandps
adc
or
loopne
push
mov
mov
ffreep
adc
cdq
adc
xor
test
push
das
sbb
sar
sub
dec
mov
jl
mov
push
ror
dec
arpl
jmp
scas
jo
adc
out
mov
lea
sub
aam
lods
inc
clc
jp
cmc
out
push
mov
aas
movs
sahf
loope
popf
out
push
mov
lods
iret
out
fwait
inc
(bad)
mov
push
sbb
fs
daa
mov
loope
add
push
sbb
sub
leave
jle
pop
cmp
mov
mov
pop
jg
call
out
add
push
fiadd
xor
sbb
aad
mov
jo
enter
cld
add
jne
popa
mov
and
cdq
inc
mov
adc
imul
rcl
sti
xor
sbb
call
and
push
arpl
fdiv
sbb
dec
sub
inc
lahf
std
(bad)
repnz
test
js
sbb
pop
imul
push
sbb
cdq
dec
and
sbb
sub
mov
shl
aas
popf
jno
ss
fsub
data16
fwait
test
ins
jno
xor
pushf
popf
mov
xlat
jmp
jmp
arpl
lods
mov
sub
adc
jmp
icebp
ss
loope
loop
ss
mov
cmp
mov
jb
fs
(bad)
int
js
iret
jp
int3
sub
xchg
fcmovb
push
jp
popf
xor
jns
add
push
pop
das
jnp
in
in
(bad)
sub
xor
xchg
push
xor
jle
stc
cmps
push
or
in
ss
hlt
xchg
mov
jo
inc
rcl
inc
mov
popa
xor
scas
out
retf
push
xor
js
add
es
mov
mov
jno
in
pop
sub
dec
stos
xlat
ins
xchg
outs
or
(bad)
push
sub
sbb
lds
inc
jo
test
adc
xchg
jp
dec
jae
xchg
xchg
enter
push
(bad)
js
mov
xor
mov
rcr
mov
xchg
cmp
mov
pop
lock
jae
loopne
mov
lahf
push
or
mov
je
mov
lods
jge
dec
outs
or
inc
in
sub
pop
inc
pop
scas
(bad)
lods
retf
inc
(bad)
mov
adc
lock
repz
aaa
jmp
mov
imul
out
mov
jg
jl
xor
push
mov
add
push
inc
jp
sub
scas
inc
push
push
dec
push
mov
pop
mov
repnz
push
cdq
pop
fistp
(bad)
adc
xlat
leave
add
sahf
ds
jmp
xchg
loop
dec
(bad)
xchg
and
out
enter
and
aaa
cs
pop
dec
out
pop
(bad)
pop
mov
scas
adc
hlt
ja
or
(bad)
sub
cld
mov
int3
inc
daa
add
xchg
scas
pop
inc
xor
fdivr
or
jae
ret
cdq
retf
inc
jb
and
and
test
pop
push
mov
idiv
and
aad
inc
mov
rcl
imul
das
ins
cmps
call
push
add
or
adc
fwait
add
jne
jmp
cld
push
sub
scas
lahf
inc
syscall
and
lock
enter
cmp
clc
and
push
fs
dec
jle
data16
fdivr
(bad)
shl
ret
mul
xlat
mov
cmps
xchg
int3
loope
pop
jp
adc
mov
dec
add
inc
dec
test
sub
das
or
push
or
clc
std
add
xlat
jecxz
(bad)
popf
pop
in
add
xor
add
inc
les
imul
outs
pop
adc
imul
and
mov
loopne
xchg
xchg
sbb
dec
push
push
outs
test
push
sbb
push
cdq
push
inc
sahf
fs
loopne
push
dec
cmp
and
adc
dec
push
sbb
xor
xor
outs
jb
xor
mov
mov
mov
adc
xor
mov
xor
mov
adc
nop
leave
or
out
iret
mov
push
les
call
xor
sti
push
movs
cli
sub
cmc
push
repz
push
jbe
test
pop
mov
lock
or
and
xchg
mov
mov
push
fcomp
xchg
sbb
or
out
push
xchg
repz
jmp
cmp
dec
fs
and
fdiv
scas
and
add
out
jns
sbb
inc
aas
(bad)
ror
mov
jle
cmp
push
test
push
rcl
rol
movs
adc
mov
std
div
aas
mov
jl
fsubr
movs
js
mov
sub
xchg
test
mov
retf
jne
gs
jp
mov
sub
or
shl
in
mov
daa
loop
sub
call
sbb
adc
mov
xor
(bad)
lahf
aam
push
mov
mov
jle
fistp
lahf
mov
mov
shl
xchg
into
adc
mov
sub
leave
fld
call
mov
jbe
in
sahf
(bad)
popf
aas
shl
and
ret
daa
mov
add
mov
lock
pushf
push
mov
xchg
lahf
rcr
cdq
fcmovnbe
sub
pop
in
bound
or
out
jb
jge
inc
push
dec
adc
xchg
push
xor
cmp
add
pushw
dec
inc
das
outs
jns
fnstsw
jmp
data16
push
push
repz
mov
outs
idiv
or
js
fidiv
push
and
aam
hlt
addr16
sub
test
scas
es
daa
adc
mov
mov
fstp
dec
jmp
jb
ds
sub
mov
popa
clc
dec
pop
in
jns
sub
and
outs
lahf
xor
xchg
std
xor
add
mov
xor
ret
pop
les
inc
dec
xchg
mov
movs
fld
scas
in
inc
mov
pop
sbb
adc
lods
arpl
xchg
pop
sub
ror
push
sbb
in
js
cmp
int
pop
mov
cmp
leave
ret
sbb
cmp
jbe
jne
adc
fdivr
loop
sahf
cwde
push
jbe
ins
fisubr
jg
loope
aam
inc
sahf
popa
sbb
jmp
cs
mov
add
fisttp
mov
sbb
sub
pop
inc
out
ret
add
inc
rcl
pop
hlt
pop
pop
fcom
mov
les
ja
cmp
addr16
(bad)
jo
push
mov
inc
mov
int
lods
leave
stc
(bad)
xchg
and
push
push
aad
fbld
sti
leave
lds
xchg
add
inc
xchg
sbb
jne
ror
mov
push
out
adc
pop
push
sti
sti
and
lahf
add
jb
and
adc
inc
js
jnp
das
mov
fwait
shr
retf
cmp
xchg
xchg
shr
shr
mov
adc
fnstcw
dec
add
xchg
mov
or
adc
adc
lods
adc
sub
in
loopne
in
add
jg
ja
inc
addr16
(bad)
enter
xchg
and
sub
call
sub
mov
lahf
dec
mov
popw
mov
push
jge
daa
xor
push
test
xchg
mov
dec
popa
adc
shr
arpl
mov
sahf
js
in
cld
int3
nop
sub
add
dec
sub
xlat
push
test
test
and
(bad)
push
mov
ja
fistp
xchg
call
in
inc
pop
not
add
out
cli
int3
hlt
xor
jecxz
mov
popf
enter
cs
sar
inc
mul
or
xchg
mov
pop
mov
enter
dec
repz
jmp
jecxz
dec
bound
or
jge
and
adc
mov
xlat
and
sti
loope
out
cs
dec
cmc
sbb
sar
jecxz
xor
pop
pop
daa
push
mov
push
push
push
(bad)
push
and
dec
movhps
xchg
addr16
mov
stos
pusha
dec
xchg
(bad)
sub
arpl
jmp
inc
ins
cmp
ret
pop
xchg
out
popf
shl
add
pop
xchg
(bad)
fdivp
aas
popa
(bad)
or
xor
push
or
or
mov
mov
dec
test
jge
mov
dec
iret
fild
repnz
div
xchg
sub
xchg
fstp
cmp
in
rcl
icebp
jecxz
rcr
jecxz
xchg
dec
xchg
fwait
cmp
js
cmps
pop
cs
inc
mov
lea
dec
push
mov
or
and
add
add
outs
push
sti
int3
sbb
das
stos
inc
adc
mov
je
loopne
dec
sbb
daa
xchg
or
aam
sahf
and
mov
les
out
dec
mov
pushf
xchg
mov
fsubr
adc
xchg
add
inc
push
mov
xor
dec
daa
dec
fistp
adc
shl
fild
jno
xchg
mov
fstp
scas
jp
(bad)
in
rcr
inc
sti
scas
retf
loopne
adc
mov
or
scas
or
outs
je
movs
push
sub
pushf
fs
inc
add
sub
cmps
ins
sbb
dec
adc
inc
cs
pop
ins
mov
xchg
jbe
test
mov
fstp
hlt
and
dec
push
mov
jnp
retf
pop
(bad)
pop
sub
(bad)
xchg
int3
retf
jmp
cmp
hlt
mov
mov
push
scas
push
movs
xchg
mov
lea
ja
xchg
aad
rcl
hlt
out
mov
stos
xor
adc
pop
adc
arpl
pslld
popa
clc
jl
mov
inc
loopne
pop
in
shl
mov
push
pop
fstp
dec
push
std
mov
and
call
pop
pop
xor
sub
or
test
fwait
jl
add
push
aaa
or
das
push
inc
mov
jmp
pusha
adc
jae
mov
xchg
test
sub
inc
std
jp
sub
test
adc
ret
jae
jbe
popa
dec
sub
mov
adc
popa
adc
jmp
je
scas
fimul
add
or
rcl
and
inc
shl
fisub
(bad)
test
(bad)
jmp
xor
mov
xor
adc
stos
xchg
sbb
xor
pop
call
icebp
jnp
xchg
test
scas
or
leave
push
xor
ror
lahf
mov
cmp
gs
loop
out
lea
jo
loop
push
cmp
adc
mov
push
pop
(bad)
ins
add
and
jmp
out
cwde
test
test
in
jp
out
pop
sub
sub
mov
mov
std
mov
ror
mov
jg
add
shr
repnz
mov
or
aad
test
lock
xlat
cwde
xchg
and
sti
push
repz
cmps
call
mov
lahf
and
inc
inc
add
mov
sub
ins
aas
sbb
inc
aad
jecxz
cwde
ds
out
je
sub
push
mov
cmc
mov
ins
fist
sti
mov
cmp
nop
or
cmp
ins
shr
fcomip
in
mov
ins
retf
test
adc
movs
mov
jmp
ret
les
xchg
push
aad
xor
shl
or
retf
mov
add
or
mov
pop
sbb
xchg
cdq
je
sub
jo
fist
arpl
imul
scas
popf
stos
jne
aad
gs
sahf
pop
sub
jp
push
in
imul
add
pop
push
or
sbb
fs
or
ret
and
push
add
inc
sbb
sub
xchg
mov
enter
xor
add
push
sub
push
movs
sbb
and
push
leave
movs
jmp
daa
sub
cmp
sahf
push
into
push
or
sbb
inc
lock
mov
add
jmp
inc
and
jmp
cwde
jb
adc
mov
stos
stos
cdq
clc
inc
fcmovbe
mov
jae
dec
pop
push
outs
jno
into
rcr
and
sbb
jmp
js
ret
js
mov
pop
cmp
xchg
mov
mov
lods
adc
sub
lea
sub
dec
cmp
sar
(bad)
daa
or
sbb
mov
ja
iret
and
mov
jmp
cli
pop
jmp
inc
fdivr
mov
mov
(bad)
and
dec
aaa
outs
mov
and
sahf
mov
movzx
mov
and
repz
mov
pop
dec
pop
rcl
push
(bad)
xor
xchg
imul
sub
cmp
mov
stos
xchg
xchg
mov
or
mov
(bad)
rcl
loopne
mov
dec
inc
sbb
lea
jmp
mov
ja
pusha
cmps
dec
stos
outs
pushf
push
xchg
inc
int3
add
loopne
or
movs
mov
push
push
ss
add
loopne
push
mov
xchg
data16
pop
add
xchg
jmp
movs
clc
call
fwait
xchg
lods
jmp
idiv
jge
or
sahf
in
push
adc
add
push
popa
in
adc
shl
xchg
daa
push
fisub
pop
pop
rep
sbb
mov
mov
lock
xchg
out
xchg
and
jae
inc
add
aaa
cmc
nop
sub
in
ss
add
es
loopne
test
call
jno
mov
sub
je
rcr
shr
cmp
ss
pop
cmp
mov
lods
enter
sbb
in
dec
xor
pop
(bad)
dec
push
loopne
jb
mov
xchg
fld
loope
xchg
and
sbb
add
cmps
int
sti
xor
jecxz
lds
pop
test
adc
add
inc
ror
stos
xor
fmul
scas
mov
cmc
out
enter
jecxz
sub
ret
int3
jo
mov
mov
cmp
jecxz
pop
jp
and
xor
xor
pop
jmp
or
cld
cmps
fstp
push
js
test
or
(bad)
fild
cmp
xchg
push
outs
mov
pusha
jne
add
cmp
mov
mov
mov
aam
stc
rcl
stc
inc
call
xor
test
ja
jge
inc
leave
dec
inc
xor
mov
jmp
daa
push
adc
xor
push
jbe
or
lahf
mov
daa
fdiv
pop
and
dec
arpl
sar
jmp
and
test
cwde
mov
dec
pop
out
dec
push
or
mov
xor
shl
or
adc
les
test
test
dec
adc
or
cmp
popa
push
mov
test
jns
in
lea
xor
xchg
push
in
jo
div
mov
inc
jmp
daa
adc
loopne
(bad)
into
or
inc
cs
xor
mov
shl
ins
scas
mov
fcmovbe
fmul
(bad)
in
pop
daa
dec
fwait
xchg
lock
cwde
sub
xor
xor
pop
pop
push
cmp
jnp
mov
lds
inc
and
sbb
cmp
int3
in
xchg
dec
(bad)
xchg
scas
push
fwait
push
pop
push
and
dec
outs
push
std
dec
pop
ror
inc
cmp
gs
clc
test
mov
cmp
int3
test
stos
sub
mov
dec
(bad)
jo
pop
mov
jmp
cmps
jno
stos
ds
mov
cmp
or
push
add
add
sbb
ds
dec
ret
mov
rcl
and
popa
call
xchg
mov
adc
lock
imul
test
mov
daa
xchg
fild
in
inc
jns
jge
adc
fstp
xor
add
shr
loop
sahf
inc
cmps
das
sbb
out
cld
push
and
and
dec
aam
scas
pop
test
xor
jns
jb
xor
jmp
fistp
sub
int3
aad
jo
mov
mov
xchg
rol
call
adc
sbb
add
xchg
pop
inc
mov
stc
lahf
sbb
imul
imul
pop
sbb
adc
lods
xchg
jno
and
xor
pcmpgtd
push
aam
and
pop
repnz
and
or
push
mov
push
mov
fstp
cld
dec
lods
sbb
(bad)
jmp
imul
xlat
mov
add
sub
cmp
mov
mov
add
inc
cmp
jmp
mov
and
cwde
shl
mov
loopne
sub
(bad)
and
enter
out
add
and
jo
idiv
stc
popf
js
jmp
cmp
jne
or
iret
mov
daa
stc
dec
in
ins
and
shl
into
xchg
dec
xlat
and
push
jecxz
cwde
leave
psubsw
mov
mov
xchg
or
movs
or
push
loope
mov
adc
mov
sbb
push
out
add
test
xchg
dec
not
inc
and
repnz
(bad)
mov
out
sbb
or
sub
cmp
pusha
(bad)
mov
cmp
lahf
retf
push
and
fcomp
xchg
test
shl
jmp
push
inc
fs
xor
cmp
std
cs
ins
xchg
popa
jge
lock
ror
mov
mov
imul
fwait
pop
ficom
mov
pop
sar
movs
fwait
sahf
das
xchg
in
fisub
mov
mov
in
jge
xchg
push
sbb
clc
arpl
daa
and
add
adc
dec
xchg
xor
call
inc
loope
scas
cmp
mov
ja
pop
push
pushf
aaa
push
call
push
sub
sbb
loopne
jge
sar
(bad)
test
cmp
ss
pushf
adc
daa
sbb
popa
imul
aas
outs
out
jp
dec
adc
shl
in
adc
or
in
cmps
nop/reserved
into
inc
and
add
and
pop
mov
cmp
inc
int
or
inc
xor
pop
test
xchg
bound
lods
out
add
fcomp
jnp
mov
xchg
sub
push
fsub
pushf
sub
retf
cwde
popf
shl
lds
shr
jmp
add
push
dec
or
mov
inc
jp
xlat
jp
loopne
mov
sbb
cdq
pop
xor
cmp
(bad)
mov
clc
in
ja
mov
retf
jns
sbb
mov
stos
mov
call
and
and
push
ror
mov
fwait
pop
add
cmps
shl
ret
frstor
mov
sbb
into
mov
jns
outs
cmc
mov
jbe
hlt
add
ror
or
sub
mov
add
mov
push
mov
imul
push
aaa
sysenter
(bad)
inc
add
(bad)
and
hlt
dec
int3
mov
push
sbb
add
dec
rcl
mov
int
cmps
sar
retf
je
pop
fnstenv
add
cmc
xor
cmps
push
(bad)
(bad)
pop
mov
sbb
cli
scas
lea
shl
adc
popf
cmps
sbb
loope
and
dec
sbb
(bad)
out
ret
daa
in
mov
lods
in
fwait
dec
cmp
jmp
(bad)
and
je
ror
push
stos
jb
xchg
push
sub
xlat
pop
movs
cmp
pushf
dec
and
das
jno
inc
cmovge
rcl
psadbw
pushf
pop
into
pushf
mov
push
das
ins
repz
out
cmp
mov
ja
sbb
push
fs
pop
xchg
loop
or
into
pop
stc
push
mov
rcl
mov
and
stos
shr
in
jl
pop
shl
mov
adc
pushf
sbb
push
call
fcmovbe
or
and
cmp
push
sub
mov
(bad)
mov
sub
mov
retf
ss
adc
pushf
pusha
pop
push
cmp
ret
shr
add
pop
jge
das
push
jl
cld
cmps
sbb
mov
aas
ficom
inc
aaa
ret
inc
mov
mov
add
cmc
cwde
inc
arpl
jbe
stc
hlt
(bad)
jmp
adc
pusha
add
(bad)
or
lods
mov
add
fbstp
push
sub
sbb
push
mov
sub
xor
in
mov
repnz
mov
sub
jne
mov
jo
iret
push
addr16
scas
pop
mov
xchg
and
and
cmps
inc
jmp
(bad)
popa
cmp
in
push
sar
retf
push
repnz
sbb
jb
push
mov
xchg
loope
lds
fxch
stos
inc
add
sbb
ss
pop
pusha
xchg
lods
jmp
mov
xchg
cld
push
stos
sti
rol
fmul
mov
cmp
repz
xor
outs
xor
and
mov
sub
loope
pop
jo
jg
adc
inc
xchg
jb
sbb
popf
dec
inc
imul
icebp
nop
mov
adc
cs
pop
(bad)
ja
adc
cmp
dec
add
pop
ror
outs
adc
or
(bad)
push
loope
test
mov
int3
sbb
mov
pop
xchg
push
mov
fld
dec
xchg
shr
(bad)
mov
push
sbb
sar
in
mov
cs
test
xchg
xchg
sbb
test
add
jo
es
or
fsubr
pop
das
or
ret
jno
repnz
xchg
cmp
fwait
sub
mov
sahf
int3
dec
out
ret
add
xor
aas
add
add
sub
adc
lock
sbb
call
push
mov
stc
lea
jmp
imul
out
iret
(bad)
jnp
ret
data16
cmc
into
fcmove
mov
imul
cmp
rol
dec
sub
inc
and
xor
test
hlt
dec
add
xor
lods
bound
pop
fiadd
cmp
push
adc
pusha
mov
push
mov
add
not
or
fcmovnb
loopne
push
sub
jecxz
retf
(bad)
in
mov
and
mov
or
push
(bad)
fcom
pop
jle
std
pop
inc
ss
add
xor
arpl
sbb
mov
and
lods
jns
popf
and
inc
lahf
lods
sub
mov
jmp
addr16
sub
mov
sahf
les
dec
aad
push
(bad)
mov
xchg
inc
jae
mov
(bad)
sbb
ins
mov
cld
dec
rcl
pop
fs
push
int3
push
dec
test
adc
popa
(bad)
inc
shl
sub
or
retf
sub
and
loopne
sub
rcr
xor
xor
xchg
mov
adc
inc
(bad)
xor
sbb
mov
or
vshufps
xchg
fdiv
jmp
pop
push
bound
add
(bad)
loop
fs
xchg
pop
repnz
pop
pop
inc
cmp
call
inc
pop
mov
outs
pop
mov
lock
loope
push
jp
cmp
mov
inc
push
enter
dec
inc
cmp
sahf
mov
mov
mov
daa
ja
push
add
sbb
mov
sub
out
cdq
dec
rcr
loopne
sbb
and
test
jns
pop
(bad)
data16
in
xor
out
(bad)
movs
jmp
out
pop
pop
and
push
dec
retf
sahf
stc
xor
out
jmp
cmp
and
sub
jmp
mov
addr16
push
pop
xchg
aad
popf
les
jg
jle
jg
push
sub
mov
jne
adc
cmp
nop
pop
test
mov
stc
rcl
xor
cmp
rcr
adc
dec
jb
aaa
(bad)
xchg
int
in
push
fsub
lahf
push
jnp
fs
add
inc
mov
lods
in
cmc
out
rol
jmp
adc
push
push
sub
and
add
stos
cmp
popa
mov
lods
(bad)
leave
sbb
es
movs
rol
loopne
in
dec
test
sbb
scas
lahf
shl
jns
xor
push
add
jp
ss
loop
or
ss
mov
sbb
jae
push
xor
adc
dec
cmp
push
packssdw
and
pop
cmp
fsub
out
mov
int3
rcl
mov
add
mov
aam
jl
idiv
jecxz
fwait
and
mov
loopne
clc
and
std
push
push
neg
push
xchg
xchg
add
lods
adc
iret
sub
add
push
data16
(bad)
adc
push
call
loope
(bad)
in
fcom
lea
enter
push
ret
lods
dec
retf
call
dec
ds
pop
xor
inc
in
lods
push
pusha
mov
mov
ins
inc
jge
fnstcw
sar
shl
and
sbb
aas
scas
jle
sub
dec
xchg
mov
jne
mov
mov
(bad)
cli
leave
retf
stos
outs
idiv
xchg
(bad)
test
xlat
push
sbb
cmp
inc
xor
rcl
push
mov
adc
lock
sar
in
outs
(bad)
push
and
sub
fadd
and
fcom
or
aaa
fistp
call
shr
ins
and
inc
pause
ds
repz
fs
mov
repnz
pop
js
xor
scas
xchg
xor
repz
stc
stos
mov
xor
dec
cmps
call
sub
stos
int
je
ss
add
sub
inc
test
aaa
hlt
lods
iret
pop
pop
lea
rol
sbb
(bad)
cld
lds
ins
mov
push
push
push
shl
sub
cmp
mov
mov
aas
cmp
addr16
dec
in
in
gs
test
(bad)
sbb
pop
arpl
mov
enter
das
xchg
xchg
adc
clc
push
stc
push
loope
pop
add
push
mov
mov
aam
ss
push
test
daa
cld
ins
mov
push
(bad)
ins
xchg
fwait
icebp
xchg
stos
jp
repnz
shl
jg
(bad)
push
mov
aam
stc
sub
movs
punpckldq
push
add
jecxz
xchg
jmp
or
cmp
pop
pop
in
add
fwait
push
mov
fnstsw
lods
dec
enter
scas
pop
fstp
or
add
gs
sbb
call
fnstcw
(bad)
cwde
aas
cmps
jae
inc
fisubr
js
dec
shr
sbb
jmp
pushaw
xor
jge
add
hlt
dec
daa
es
xchg
jbe
lea
mov
lahf
stos
in
jecxz
fsub
sub
rcl
test
mov
cmp
sub
mov
cli
das
inc
fdivr
dec
add
addr16
dec
mov
rcl
jb
sub
pop
enter
fild
jns
adc
jg
neg
test
mov
daa
movs
loope
jg
bound
mov
push
inc
fucom
hlt
test
mov
jle
pop
adc
pop
inc
in
jns
sbb
jp
xchg
jbe
inc
jmp
mov
sub
mov
push
adc
mov
dec
mov
(bad)
sahf
call
fucomi
(bad)
(bad)
cmp
xchg
jmp
sahf
call
out
rol
mov
jg
into
test
jbe
je
enter
push
call
daa
mov
out
ins
jbe
mov
stc
push
ins
cmp
sub
dec
add
jbe
mov
jae
hlt
stc
xchg
call
dec
push
or
push
push
add
jbe
retf
sbb
xchg
xchg
clc
xchg
jmp
mov
push
ret
icebp
push
add
xchg
int3
(bad)
cli
(bad)
out
enter
retf
cmps
mov
neg
mov
es
and
cmps
add
fs
jo
xchg
push
adc
add
add
idiv
call
and
ret
imul
cmp
popf
xchg
adc
cs
jns
sub
icebp
fisubr
inc
mov
bound
pop
dec
fwait
clc
mov
pop
cld
loope
or
out
push
in
mov
push
add
adc
xchg
sbb
ja
and
test
mov
loope
dec
add
add
movs
or
add
mov
std
cld
test
jbe
sbb
rcr
call
and
mov
(bad)
fisubr
xor
push
stos
cdq
pop
cmps
(bad)
ret
fwait
inc
cs
mov
mov
jle
cli
ret
dec
lahf
inc
std
cld
mov
cmp
test
stos
data16
push
iret
imul
sbb
and
aam
xchg
je
sbb
fld
(bad)
mov
clc
xor
sar
aad
push
call
(bad)
xor
popa
retf
iret
mov
je
iret
and
sbb
imul
xchg
mov
cmps
(bad)
(bad)
push
jno
inc
add
sbb
mov
push
fmul
cmps
mov
in
pop
inc
gs
jne
adc
test
sub
mov
sub
push
pushf
ss
cmp
xchg
xor
test
leave
dec
xchg
(bad)
in
ror
pop
leave
or
out
pop
movs
ss
cmp
inc
push
fcom
ins
js
jmp
imul
jge
adc
leave
and
sbb
outs
rcr
iret
je
mov
leave
cdq
je
pop
aaa
and
sbb
test
push
cwde
cmp
mov
pop
out
cmp
cmps
jge
ror
enter
jge
mov
pop
push
mov
pop
scas
lea
pusha
sbb
jecxz
stos
(bad)
xor
and
sub
(bad)
mov
dec
push
data16
xchg
adc
dec
pop
inc
in
mov
xlat
(bad)
hlt
arpl
push
(bad)
inc
mov
jns
stos
cmp
iret
ret
pop
aaa
jmp
add
es
push
push
mov
push
ins
rcl
test
movs
or
jns
push
inc
sbb
(bad)
clc
cdq
push
sbb
gs
push
mov
mov
out
hlt
jbe
xchg
mov
ins
push
dec
add
int3
push
arpl
ror
pop
(bad)
pop
mov
mov
(bad)
lea
cmp
or
xor
aad
pop
mov
rcl
pop
mov
xor
push
adc
sub
xchg
mov
mov
lods
dec
outs
popa
mov
iret
jl
xor
sbb
inc
dec
adc
dec
lds
push
or
loopne
adc
out
cmp
(bad)
cmps
inc
pop
inc
add
imul
add
aam
pusha
push
sbb
lahf
xor
fwait
loop
mov
adc
iret
popf
mov
inc
dec
mov
xchg
sub
xchg
push
fwait
bound
inc
or
retf
ret
pop
cld
bound
pusha
addr16
div
mov
xor
cmps
dec
clc
pop
sahf
or
inc
dec
pop
loope
or
xlat
xchg
mov
scas
add
popf
loopne
push
adc
sub
js
cmovne
and
or
lock
mov
sbb
fsubr
jmp
add
pop
inc
and
push
les
mov
jmp
ja
dec
js
(bad)
push
sti
leave
inc
js
sbb
pusha
adc
dec
out
mov
dec
sti
lea
mov
ror
dec
xchg
lods
push
mov
(bad)
lock
test
or
ret
mov
xchg
push
icebp
jae
aad
scas
and
ss
stos
cmp
xchg
mov
sbb
sub
pop
cli
scas
out
adc
stos
add
mov
xchg
movs
jg
loope
ret
retf
ret
cmp
and
xor
pusha
cmp
iret
int3
adc
aam
movq
in
dec
call
and
pop
ins
pop
sub
xor
int3
(bad)
cmp
and
xor
push
pcmpgtb
jno
ins
data16
mov
cli
ret
jns
aas
in
repnz
std
inc
xchg
mov
stos
sbb
fld
popf
jge
pop
and
sub
push
pop
jmp
add
mov
mov
out
xchg
(bad)
outs
xchg
sbb
aam
mov
idiv
das
or
cmp
add
(bad)
or
(bad)
xor
sar
inc
fistp
mov
push
cmps
mov
(bad)
adc
das
xlat
xor
mov
cmp
lahf
push
inc
mov
inc
xchg
jp
addr16
enter
xor
hlt
mov
or
xchg
push
aam
outs
inc
sbb
(bad)
adc
rcl
and
test
add
inc
and
push
cmp
stos
lock
nop
(bad)
and
cmps
xlat
mov
fld
push
leave
inc
dec
mov
cmp
out
hlt
sub
jmp
mov
lea
add
push
adc
dec
mov
fcom
xchg
cmp
pusha
adc
imul
push
les
and
or
mov
sub
and
and
xchg
and
inc
and
fistp
mov
jmp
movs
pop
xor
dec
mov
out
push
imul
cmp
dec
jmp
push
mov
(bad)
test
xchg
push
ins
mov
loopne
psubq
xchg
push
mov
push
xchg
retf
pop
xor
inc
push
mov
jmp
cmps
lods
mov
in
movs
xor
pop
lahf
xor
xchg
fcomp
arpl
nop
sar
dec
cmp
and
cmps
sbb
push
sub
lods
ins
ins
ret
mov
pop
sbb
jecxz
clc
and
hlt
sub
pop
cmc
or
call
fld
fcmove
jns
push
push
retf
fcom
sbb
pop
push
dec
inc
xchg
repnz
jecxz
mov
pop
std
xor
cmp
or
and
lods
dec
jno
aad
movs
jmp
not
push
cld
sbb
repnz
test
(bad)
mov
leave
push
xchg
aam
push
lea
popa
add
xor
inc
cmp
stos
out
rcl
gs
mov
lods
mov
in
stc
je
dec
cmp
dec
iret
je
dec
loop
shr
aaa
int3
adc
jg
lahf
adc
ja
cs
xor
jge
push
jnp
(bad)
cli
loop
jp
outs
stos
test
and
mov
xor
xchg
adc
xor
(bad)
jnp
mov
mov
jecxz
fst
popa
fcmovnb
ret
pop
les
aam
std
push
push
xor
ret
inc
neg
sub
sub
mov
mov
outs
push
dec
bnd
mov
int
je
mov
mov
dec
movs
pop
jp
sahf
adc
cwde
and
xchg
dec
pop
shl
les
(bad)
int
or
dec
test
push
outs
inc
scas
nop
ins
fld
cmp
sub
jmp
outs
mov
out
rcl
movs
and
pop
fisub
(bad)
fcmovne
js
fisubr
adc
cli
arpl
shr
mov
scas
add
and
pop
in
sbb
adc
adc
das
add
push
scas
push
pop
test
js
dec
pop
lods
loopne
dec
(bad)
add
pcmpgtw
mov
sbb
mov
test
jmp
outs
test
mov
or
lods
mov
loopne
out
aas
in
ss
inc
mov
test
xor
aad
xchg
xor
adc
jecxz
dec
into
fcom
push
and
pusha
fucomp
mov
jbe
sar
cmps
loope
outs
sbb
aam
aad
arpl
div
jecxz
(bad)
xlat
mov
clc
clc
test
jecxz
push
mov
icebp
imul
arpl
pop
push
cmps
jmp
addr16
stos
fimul
cmp
and
pop
(bad)
xchg
stos
outs
jmp
frstor
dec
pop
inc
gs
into
mov
outs
pushf
inc
in
adc
loope
jne
cld
and
fdivr
sbb
aas
pop
fld
cld
xor
or
push
lock
lea
jmp
adc
aad
lea
(bad)
fadd
adc
rcl
push
mov
mov
inc
push
(bad)
jp
pmuludq
mov
sar
loop
(bad)
es
stos
sub
pop
inc
shr
mov
sub
cmp
test
bound
enter
icebp
stos
push
pop
jge
es
jno
je
es
cmp
jae
in
add
iret
enter
lea
dec
mov
bound
fst
mov
push
sub
mov
xchg
push
inc
bound
jmp
xchg
cmp
xchg
fcmovu
mov
and
add
pop
aam
sbb
cmps
fild
xor
(bad)
leave
dec
mov
jno
out
ja
shl
int
retf
es
mov
lock
in
adc
(bad)
arpl
(bad)
out
xor
push
push
adc
stos
mov
add
or
push
outs
ss
mov
aad
mov
stos
cmc
xor
fild
mov
lahf
sahf
sahf
dec
push
sub
push
stos
xchg
inc
mov
popa
fld
mov
sar
mov
mov
faddp
dec
out
push
retf
lods
in
push
mov
cmps
xor
mov
xchg
mov
jb
(bad)
call
mov
dec
adc
fcom
in
push
xchg
cmp
jge
or
outs
out
dec
add
std
dec
data16
jne
xchg
push
ss
lock
mov
xchg
(bad)
std
sti
lahf
into
int3
cmc
push
fs
jle
dec
pop
loope
jge
scas
or
xor
add
pop
js
cmp
xor
pop
loop
dec
ins
adc
lods
loop
(bad)
cli
mov
fwait
les
dec
jns
rcr
scas
push
xchg
pushf
sub
je
les
cmp
push
lahf
pop
je
push
neg
popa
shl
push
jmp
push
cmp
(bad)
scas
lods
fisubr
retf
inc
bnd
cmp
mul
imul
(bad)
cmc
in
fucomi
dec
jmp
pop
mov
fld
loopne
outs
adc
aad
add
shl
pmaxsw
sbb
xchg
mov
ret
xor
mov
dec
lods
clc
sub
pop
ret
or
xor
push
nop
icebp
in
inc
lock
enter
aad
dec
shr
push
mov
out
dec
shl
idiv
ficomp
jne
jb
pusha
popa
xchg
xchg
push
sub
mov
(bad)
add
adc
pop
jecxz
mov
cmp
push
cld
xor
mov
inc
dec
push
cmc
fsub
dec
stos
rcl
mov
mov
rol
adc
dec
jp
mov
inc
stos
jp
sbb
or
mov
mov
push
pop
pop
ror
and
sbb
push
pop
outs
movs
fild
xor
mov
mov
mov
push
data16
sti
ins
les
jns
mov
xchg
xchg
ficom
addr16
loopne
cmp
nop
mov
int3
test
mov
cmp
push
mov
cmp
repz
push
das
xor
cmp
pop
int3
or
cli
sub
adc
sti
dec
scas
xchg
call
add
fisttp
test
fcomi
mov
sbb
cli
bound
or
rol
outs
test
nop
xchg
sbb
sbb
idiv
(bad)
xchg
mov
xor
sbb
pop
fdivr
sbb
icebp
adc
push
scas
inc
inc
movs
das
call
dec
in
mov
(bad)
cmp
lahf
test
ret
and
sbb
xchg
js
sbb
push
std
pusha
repnz
fistp
push
lock
repnz
mov
lock
sub
add
xor
lods
cmp
or
test
icebp
mov
cwde
mov
jae
ret
jmp
ret
lods
mov
loop
ins
mov
add
fs
jno
mov
out
fimul
add
inc
push
mov
mov
xor
loop
mov
jo
mov
outs
movs
push
push
js
sub
mov
sbb
fadd
data16
xchg
xor
shl
out
push
xchg
mov
test
jb
pop
xchg
call
and
xor
lds
test
ja
inc
and
ins
sub
xor
mov
push
inc
icebp
xor
fwait
add
inc
clc
rcr
mov
cmp
fcom
xchg
sbb
lea
aaa
jne
add
inc
aaa
popf
cmps
addr16
and
retf
mov
icebp
push
xor
jo
xor
fdivr
fistp
adc
xor
int3
mov
xchg
das
lahf
inc
fisttp
loope
mov
jo
adc
in
push
mov
xor
and
sbb
cmp
dec
retf
into
dec
mov
mov
inc
sub
dec
(bad)
pop
jmp
call
(bad)
(bad)
sbb
mov
push
imul
or
adc
jmp
popf
dec
pop
(bad)
push
aaa
arpl
leave
mov
mov
mov
xchg
loopne
test
jno
lahf
leave
jmp
cmps
cmc
xor
mov
rol
dec
test
push
mov
and
pop
xchg
mov
cwde
add
cmp
mov
sbb
(bad)
xor
mov
mov
cmps
fwait
sti
sbb
mov
add
js
sub
in
dec
mov
and
push
ja
push
popf
adc
inc
mov
xor
inc
push
xor
ret
iret
loopne
ret
nop
jecxz
fst
in
sub
push
mov
sub
das
outs
ret
pop
movs
stc
inc
loope
mov
sub
lods
jle
add
push
cli
push
test
cdq
push
outs
or
imul
imul
not
inc
and
rcl
loopne
and
lods
pop
inc
shl
lahf
test
leave
(bad)
mov
jb
adc
cli
or
aad
(bad)
imul
(bad)
stos
dec
pop
fcomp
imul
outs
cmc
adc
ret
or
in
dec
je
mov
xchg
jns
pop
and
bound
(bad)
mov
lock
pop
pop
cmp
pop
xchg
int
mov
mov
inc
(bad)
mov
push
ins
shl
mov
movs
adc
inc
dec
test
push
xchg
jno
aad
int3
mov
cmp
or
paddsw
test
fdiv
push
inc
cmp
or
xchg
mov
loope
fistp
sbb
movs
rol
outs
stc
inc
dec
add
mov
call
fisttp
xchg
add
jns
xor
data16
and
sub
inc
xlat
dec
push
jmp
mov
sbb
movs
in
in
inc
stos
or
or
adc
into
test
push
adc
xor
and
cmp
or
pop
cmp
test
jmp
fdivp
lods
shl
mov
repz
cld
loope
not
bound
mov
out
aaa
cli
jle
inc
push
ror
addr16
xor
or
addr16
iret
test
mov
enter
sub
cmps
xchg
gs
iret
pusha
lds
dec
lods
sahf
sbb
fidivr
fimul
push
daa
lods
mov
dec
outs
repz
pop
sbb
jno
(bad)
xor
cmp
jo
lods
not
dec
rcr
ret
(bad)
mov
adc
sbb
mov
lahf
repz
mov
cwde
cmp
popf
xchg
sbb
inc
(bad)
jne
mov
fbstp
fs
pusha
pop
icebp
mov
xchg
push
jmp
or
cmp
dec
xor
(bad)
fistp
leave
mov
push
xor
mov
mov
push
repz
push
sub
imul
add
mov
pop
loope
sub
or
or
push
and
mov
push
(bad)
fdiv
push
dec
push
sub
ins
mov
jb
cmp
xchg
mov
push
mov
fcomp
inc
mov
das
mov
xor
popf
or
cwde
cmp
mov
inc
movs
idiv
in
cmp
ror
cmp
sar
ds
outs
(bad)
retf
or
call
ins
jle
gs
loope
pop
enter
jle
inc
pop
out
pop
xlat
and
adc
pop
mov
stos
add
xchg
std
stc
das
pop
and
add
dec
dec
into
loopne
add
outs
in
xlat
lock
das
mov
fs
cmp
cmp
loopne
mov
xchg
aaa
xchg
sti
mov
test
adc
pop
mov
mov
div
add
addr16
aam
pop
sar
loop
les
mov
push
xor
adc
sbb
not
add
int
vpmacsww
jle
daa
stos
mov
fwait
inc
pop
(bad)
shl
cmps
or
test
mov
outs
jnp
add
add
add
clc
add
loop
xor
push
fdivr
call
xor
fadd
adc
aaa
inc
pop
push
jle
mov
shr
cmp
sub
fcmovnu
lds
and
cmp
(bad)
adc
cmp
and
xchg
pop
clc
enter
out
jns
inc
mov
out
lods
sbb
push
aad
jnp
sbb
xchg
mov
fwait
outs
cmp
daa
aad
xchg
fstp
push
ss
inc
and
jmp
cmp
in
call
jb
out
adc
pop
sbb
and
leave
dec
je
or
cdq
aaa
and
or
adc
sbb
daa
mov
pop
cmp
sub
arpl
push
sub
ds
(bad)
adc
add
rol
mov
das
sub
mov
nop
out
adc
sbb
inc
push
ror
call
test
aaa
div
pop
sbb
or
inc
dec
jmp
fild
cmp
inc
ficomp
mov
push
mov
mov
dec
aad
mov
cmps
mov
lods
jl
xchg
mov
xor
aam
inc
push
cld
push
popa
sbb
cmp
lods
sub
adc
mov
rcl
push
bound
fidivr
cmp
addr16
mov
mov
mov
clc
int
mov
mov
fistp
out
cli
out
scas
js
mov
pop
ss
cld
bound
cmp
mov
mov
mov
xor
push
xor
xor
jae
inc
gs
jg
in
out
dec
xlat
pop
dec
arpl
fist
out
add
in
inc
jmp
aam
mov
nop
mov
cmp
or
or
inc
mov
inc
repz
push
in
fisub
add
(bad)
lea
lahf
sbb
into
fsub
xchg
icebp
cmp
mov
push
ss
cmp
into
add
jl
jp
mov
jnp
jle
pushf
sub
pop
scas
or
inc
fwait
aad
pop
cmp
push
mov
pop
sar
xor
xlat
lock
arpl
jo
dec
int
or
add
and
sub
ss
add
fstp
mov
mov
repnz
out
jbe
sti
add
xchg
std
adc
or
lods
dec
leave
adc
push
enter
xchg
jae
push
and
sbb
push
mov
popa
cld
stc
push
jge
fisubr
jle
add
pop
sub
imul
aad
mov
outs
pop
adc
call
inc
rcl
icebp
sub
inc
jmp
mov
jmp
pop
leave
cs
out
in
xor
sahf
jns
add
pusha
push
pop
pop
xor
mov
xor
leave
scas
popa
add
pop
pop
dec
push
fld
sbb
push
pop
call
scas
stos
add
dec
lahf
movs
(bad)
xchg
lods
cmp
gs
into
inc
and
popf
lds
bound
fnstcw
lock
shr
test
addr16
rcr
in
dec
out
mov
retf
mov
or
pop
push
push
pop
lods
inc
fadd
aaa
out
xchg
inc
cmp
test
in
pusha
cli
ss
lock
mov
and
sub
mov
enter
repz
js
test
push
fs
ins
xor
mov
cmp
jle
mov
xchg
int
mov
or
clc
in
stc
rol
sub
retf
mov
jmp
inc
add
adc
pop
jo
(bad)
xlat
and
in
imul
mov
in
xor
es
loope
inc
mov
nop
mov
leave
pop
mov
and
fdivr
inc
jb
mov
test
xchg
sbb
in
mov
in
shl
addr16
ror
jle
sbb
mov
add
push
sbb
lds
mov
rcl
lods
ds
mov
or
cmps
mov
and
xor
aas
lds
inc
push
add
fnstcw
xchg
in
daa
xor
adc
sub
je
add
sbb
pushf
jmp
aaa
jo
jne
gs
lock
bound
pop
xlat
and
dec
lods
fiadd
dec
and
test
inc
pop
ins
sti
popf
jecxz
idiv
dec
ins
pop
mov
xchg
or
xor
pop
mov
sbb
jl
inc
mov
push
xchg
in
xchg
lods
adc
stos
adc
in
call
xchg
movs
mov
and
retf
test
xchg
call
jg
mov
sub
ins
pop
jbe
add
or
jmp
out
es
jmp
push
mov
xchg
xchg
cmps
ror
sbb
enter
jns
sbb
cmp
or
imul
xor
lock
xor
jge
cmp
aam
test
dec
fld
push
add
in
cwde
jle
aam
daa
hlt
cli
pop
arpl
ror
pop
mov
or
in
push
mov
ja
fstp
sub
into
popf
cmp
mov
ss
cmp
lahf
call
movs
adc
pop
cmc
adc
mov
ds
cmp
retf
mov
fistp
xchg
mov
xor
mov
lods
cmc
cmp
sub
aad
test
out
aad
scas
sub
js
mov
call
push
imul
loope
ins
icebp
mov
mov
js
xchg
repz
pop
mov
mov
dec
fiadd
push
int3
push
nop
in
fstp
push
js
sahf
xchg
pop
fnclex
test
test
cmps
not
nop
repnz
mov
cs
test
(bad)
mov
xor
cmps
sahf
xor
inc
ss
int
dec
sub
or
sub
ret
fs
sub
ins
mov
xchg
sbb
mov
bound
adc
mov
mov
into
rol
addr16
dec
xor
loop
(bad)
jne
fnsave
and
inc
or
pop
(bad)
aaa
(bad)
add
lock
imul
test
dec
int
mov
mov
mov
repz
cmp
mov
add
test
xchg
cmps
shr
es
add
arpl
sub
xchg
in
dec
repnz
mov
cwde
push
(bad)
movs
daa
xchg
ss
add
pop
jb
xchg
movs
int3
xlat
mov
push
shl
jl
mov
stos
scas
sbb
call
lods
dec
lods
mov
and
add
xchg
xchg
and
xchg
(bad)
out
fsub
sbb
jecxz
mov
(bad)
shl
dec
mov
je
jbe
scas
push
iret
add
sti
jne
cmp
jg
outs
scas
jl
and
dec
cmc
xchg
aas
inc
int3
sbb
mov
hlt
por
nop
mov
and
inc
rcr
mov
ror
(bad)
rol
sbb
out
js
mov
or
sub
adc
adc
cdq
mov
mov
es
push
mov
mov
add
pop
lea
xor
xchg
and
xlat
out
dec
jns
rep
das
or
inc
cwde
adc
rcl
mov
in
fisubr
ins
and
mov
icebp
push
mov
sub
adc
mov
fwait
test
iret
or
sub
jb
aas
pop
or
call
mov
pushf
mov
cmp
and
and
and
jns
outs
pop
inc
xor
fld
sub
dec
xchg
add
jb
jmp
aas
and
xchg
rol
nop
push
adc
test
bound
pop
sti
jge
lds
fdiv
call
outs
(bad)
cmps
sbb
sbb
inc
push
xchg
stc
jl
sahf
fwait
in
dec
test
cwde
pop
pop
adc
add
and
repz
or
inc
ret
mov
popf
enter
call
shl
adc
mov
add
sbb
call
sub
call
popf
cdq
ret
lock
jb
or
rcr
mov
mov
test
cmps
sbb
call
push
mov
and
pop
outs
xchg
test
repz
jmp
sbb
cwde
or
xchg
outs
or
cwde
cld
lock
pop
dec
pop
dec
fisub
dec
pop
retf
addr16
push
xchg
xchg
jp
(bad)
in
data16
bound
jl
add
cmp
pop
jb
daa
outs
sub
imul
out
mov
jle
ds
test
ror
adc
cmp
push
and
scas
test
jp
sub
sbb
mov
and
pushf
inc
cmp
outs
xor
sub
ret
jno
jo
or
mov
shr
in
fmul
sahf
xor
xchg
cmp
sbb
(bad)
leave
jno
adc
stos
dec
mov
push
repnz
add
pushf
ret
or
gs
xor
dec
push
xor
loop
push
inc
popf
mov
lahf
prefetchwt1
shl
out
pushf
sbb
test
mov
mov
mov
in
je
sbb
push
int
or
lock
aas
push
fsubrp
dec
pusha
push
and
jmp
stos
bnd
pusha
add
inc
sbb
cmc
mov
fild
leave
push
pop
mov
dec
(bad)
stc
test
(bad)
pop
lods
jmp
in
enter
xor
data16
in
and
mov
cli
add
dec
loopne
xchg
int3
icebp
imul
mov
add
xor
sbb
jno
in
push
clc
outs
mov
jnp
xor
cmp
push
mov
bound
cmp
clc
mov
loope
ss
mov
cdq
lock
lahf
jae
sub
pop
mov
ret
or
iret
ds
and
mov
inc
sub
add
out
(bad)
shl
cld
xchg
dec
push
jnp
dec
sub
hlt
imul
dec
jl
loope
cmps
pop
sbb
loope
xchg
daa
push
(bad)
mov
xor
daa
inc
add
call
inc
call
or
aaa
hlt
aam
dec
mov
in
pop
jecxz
enter
xlat
jne
sbb
mov
inc
rcr
fs
fsubr
cmp
push
sub
in
lods
mov
repnz
test
mov
test
dec
call
mov
fidivr
cwde
adc
scas
cmp
jp
mov
sub
push
add
loop
stc
(bad)
xor
arpl
hlt
inc
movs
fidiv
jns
test
jmp
xchg
pop
out
mov
outs
test
es
retf
fcom
popa
jns
ins
mov
ins
sub
cld
ret
lods
aaa
(bad)
and
cmps
imul
data16
iret
jecxz
mov
jb
jp
mov
inc
jp
out
push
sbb
cmp
cmp
mov
(bad)
mov
loopne
pushf
jmp
mov
rcl
ins
mov
xor
jae
xchg
leave
dec
aad
(bad)
cmp
xlat
dec
int
and
mov
inc
shl
fs
movs
and
xchg
in
dec
sbb
inc
mov
adc
sub
adc
out
cs
ret
sahf
dec
push
jmp
jl
xchg
add
inc
or
xor
iret
push
data16
cmps
ror
in
fsubr
push
sbb
mov
mov
das
nop
jbe
jne
pop
push
cli
push
lahf
retf
ffreep
in
cld
mov
cmp
hlt
sahf
mov
ret
popf
sbb
stc
rcr
and
ja
in
fnstenv
into
mov
out
mov
cmp
push
or
call
dec
xor
lea
pop
nop
imul
fxch
sub
mov
push
mov
jo
xchg
push
dec
xchg
and
mov
stc
data16
retf
fimul
push
dec
add
call
aas
pop
addr16
xchg
push
or
xor
jl
push
ins
add
xchg
popa
(bad)
sbb
mov
jg
xor
int
cmp
retf
sub
or
mov
(bad)
dec
xchg
in
arpl
inc
fisubr
arpl
push
leave
inc
sub
pop
add
movs
cmp
jmp
rcl
dec
cmp
jg
cmps
push
mov
xor
pop
(bad)
pop
mov
mov
shr
aas
mov
sub
test
ret
pop
mov
cld
pusha
repnz
outs
mov
jg
data16
bound
or
jne
inc
adc
mov
retf
mov
xor
jnp
in
aaa
test
pop
push
(bad)
pop
or
stos
scas
mul
pop
cmp
cmp
inc
push
fstp
dec
outs
jb
cli
loope
pop
and
sar
movs
(bad)
sbb
aas
cwde
test
push
dec
pop
in
data16
(bad)
add
mov
mov
xchg
cmp
sub
addr16
dec
aam
xor
repz
or
pop
sahf
jecxz
add
xchg
push
mov
ins
jnp
dec
dec
pusha
int
scas
lods
popa
ja
push
sbb
sub
stc
mov
and
pop
mov
(bad)
call
call
(bad)
jecxz
pop
cmp
xor
pushf
sbb
ficomp
jae
inc
inc
lods
punpcklwd
xchg
mov
add
mov
inc
out
retf
adc
inc
cmp
mov
sti
add
(bad)
das
adc
or
add
dec
mov
test
ds
ror
rol
jg
imul
sbb
popa
push
call
call
add
pop
popf
cmp
pop
push
icebp
fild
ret
(bad)
(bad)
test
test
out
cli
(bad)
mov
retf
jns
ins
jae
and
inc
js
in
aad
cli
jae
cmp
rcr
mov
ret
push
cmp
jecxz
inc
je
jns
inc
cmp
add
pop
out
cli
rcl
data16
rol
push
fs
pop
rol
outs
xor
xchg
jnp
xchg
mov
cli
dec
sbb
test
lds
mov
fnstsw
inc
lahf
or
cmp
pop
push
popf
bound
lods
cmps
mov
push
pop
std
inc
(bad)
dec
jnp
ins
or
jle
in
(bad)
ds
mov
inc
(bad)
lods
and
sbb
jmp
mov
mov
ins
or
add
xor
int
loope
jg
mov
fadd
and
and
icebp
(bad)
loope
cmp
push
fdivr
sahf
adc
sti
inc
movs
jbe
adc
or
sbb
or
mov
rcl
pop
inc
pop
mov
lods
ja
mov
ins
mov
shr
jae
adc
add
(bad)
clc
lahf
mov
fsubr
cmc
xor
sbb
je
adc
rcl
sti
push
enter
retf
xlat
sub
hlt
jne
test
dec
outs
iret
repz
addr16
inc
ret
cmp
ins
xchg
xchg
sub
pop
pop
jb
stos
pop
test
in
adc
call
mov
ror
aam
(bad)
dec
jmp
dec
xor
shl
sbb
das
loope
add
or
test
outs
and
inc
pop
mov
mov
push
sbb
jmp
gs
mov
xor
pop
sti
or
ret
add
jne
mov
in
pushf
push
aad
jno
lea
add
repz
rol
pop
icebp
mov
or
aaa
inc
jae
or
cld
fiadd
loopne
inc
adc
push
pop
scas
jmp
nop
mov
mov
sub
push
addr16
sbb
jne
pop
out
clc
ja
sub
sahf
and
dec
sub
cld
in
(bad)
cmp
pextrw
aaa
sbb
div
pop
dec
mov
leave
lock
xchg
in
mov
cmp
mov
inc
stos
fsub
jmp
jbe
push
out
xchg
loopne
in
or
dec
inc
jb
pop
pop
mov
addr16
pop
mov
loopne
dec
sti
out
xor
xor
leave
bound
pop
(bad)
add
fnstcw
mov
or
cmps
mov
dec
dec
jl
aaa
sub
sbb
add
pop
cmc
xchg
cmp
dec
lods
mov
lahf
xor
and
xadd
mov
aam
push
cmp
mov
out
fsubr
push
sbb
lahf
mov
outs
jno
adc
xor
dec
adc
sti
add
jb
adc
test
mov
push
pushf
sbb
mov
sbb
aaa
es
pop
ficomp
or
std
push
mov
adc
cld
stos
dec
mov
aam
daa
nop
mov
cmps
cli
cli
lock
cmp
inc
mov
icebp
adc
(bad)
ret
pop
push
es
fs
xor
sti
sbb
cmps
or
jge
dec
ficomp
cs
frstor
and
sahf
lods
push
xor
aad
mov
(bad)
std
mov
pop
mov
out
lds
inc
pop
xor
fnsave
inc
arpl
dec
add
mov
outs
test
scas
cmc
test
push
and
mov
in
or
jge
sti
rol
retf
jo
out
ror
shr
push
xor
inc
stos
shl
rcr
cdq
adc
shl
ret
cwde
mov
pusha
int
movlps
(bad)
enter
rcr
xor
ret
test
adc
xchg
pop
(bad)
mov
sbb
int
lahf
aas
cmp
aam
sti
cmp
adc
sub
dec
adc
sbb
pop
rol
out
je
push
cmps
mov
shl
sbb
pop
pop
or
inc
sub
xchg
imul
inc
push
sub
mov
xor
pop
mov
data16
dec
pop
rol
aaa
add
jp
aaa
cli
mov
mov
xchg
mov
sub
mov
xchg
gs
leave
mov
mov
sbb
(bad)
xor
out
sbb
(bad)
cmc
out
cmp
bound
mov
in
jp
test
aas
xchg
(bad)
fsubr
lea
jae
xchg
push
push
shl
jg
sbb
mov
ficom
mov
ja
jne
adc
js
stos
push
add
ins
add
aam
mov
mul
loop
mov
dec
pop
aad
sub
repnz
push
jae
pop
fisub
fdiv
loope
and
push
shr
jmp
xor
aaa
outs
pop
fs
pusha
xchg
into
sahf
mov
jg
inc
aad
es
iret
adc
ins
fwait
mov
dec
xchg
les
ret
pusha
jno
push
sub
int3
daa
or
cmc
icebp
mov
mov
adc
iret
leave
aaa
int
push
push
fwait
dec
jecxz
jbe
jmp
das
lods
jno
imul
pop
pop
out
dec
ss
push
cmp
ss
sar
or
push
(bad)
ds
cmps
sbb
sbb
fnsave
cmp
sbb
add
dec
inc
inc
adc
neg
mov
jbe
cwde
jp
xchg
inc
and
mov
lahf
pop
aas
ret
(bad)
(bad)
jle
imul
xor
add
ret
add
cmp
inc
add
push
ins
icebp
cmps
push
sub
ret
and
leave
xor
mov
xchg
das
sbb
mov
inc
movs
xor
ins
iret
(bad)
call
inc
push
aas
pop
sub
push
cmp
fadd
cmp
loope
add
inc
dec
dec
movs
sbb
mov
dec
into
ret
xor
or
aam
js
push
mov
xchg
imul
push
sub
jle
movs
(bad)
fwait
mov
neg
pop
xor
mov
ror
mov
aad
movs
call
xor
add
jo
(bad)
jmp
cdq
fs
adc
and
push
xor
arpl
stc
jle
mov
ret
clc
jmp
or
jecxz
lea
dec
test
push
cmps
mov
sub
adc
or
jmp
push
inc
push
and
dec
je
cmp
jns
jbe
outs
mov
xchg
mov
fwait
loopne
mov
mov
mov
retf
iret
xchg
sub
adc
inc
mov
fcom
xor
iret
mov
sub
pop
das
imul
cmp
rcr
lock
mov
in
sub
mov
outs
movs
fild
retf
fsubr
bndstx
adc
int3
fisttp
pop
sar
sbb
jecxz
loopne
(bad)
(bad)
je
adc
push
add
loope
lahf
test
jbe
imul
inc
iret
jle
add
cmp
jb
pop
sub
xchg
adc
call
or
arpl
jns
int
cmp
jae
adc
lods
(bad)
(bad)
pop
lea
or
imul
gs
imul
mov
imul
push
adc
inc
mov
dec
sbb
xchg
sti
push
mov
pop
sbb
fidivr
pusha
(bad)
adc
mov
push
sub
lods
push
and
ds
mov
gs
cs
xor
xchg
dec
loop
cmc
mov
xlat
sbb
add
adc
adc
mov
xor
stos
leave
sub
sub
gs
nop
mov
stos
mov
push
add
xor
cld
xchg
mov
cmc
xlat
popf
pop
or
jnp
out
pop
imul
jnp
pop
nop
mov
cmp
out
ret
lahf
add
call
lods
dec
outs
cdq
ds
pop
les
loope
or
clc
punpckldq
sub
cs
pop
jl
pop
adc
rcr
cmp
xor
imul
sahf
mov
test
pop
mov
adc
inc
dec
jae
dec
mov
call
or
cmps
jns
je
mov
xchg
fwait
loope
mov
push
lahf
out
dec
xchg
pop
or
lock
xlat
xchg
pop
xchg
je
fs
sbb
and
add
sub
sbb
or
pushf
loopne
scas
xor
mov
clc
stos
or
mov
leave
div
adc
adc
loope
inc
scas
push
adc
jmp
cmp
sbb
int3
loope
in
sub
stos
xchg
das
ret
ficomp
ret
xchg
cmp
fstp
inc
sar
push
call
addr16
icebp
cwde
leave
mul
pop
mov
test
rol
sbb
mov
rcl
sub
mov
jbe
sbb
outs
jbe
push
in
stos
lods
loopne
(bad)
fadd
cs
lahf
xchg
cmps
movs
jg
mov
(bad)
mov
mov
cmc
and
sbb
iret
jne
add
fisttp
inc
and
add
in
xor
cmps
dec
add
xchg
and
popf
add
mov
add
jge
lds
xchg
aaa
in
add
adc
xor
add
cmp
or
mov
stos
mov
sub
aad
fistp
xchg
outs
(bad)
dec
mov
add
cmp
xchg
das
or
dec
dec
sub
fdivr
xchg
inc
adc
fld
lds
scas
sbb
scas
mov
mov
pop
enter
loop
aam
and
cwde
jno
ret
cmp
and
sbb
enter
je
shl
ins
lahf
mov
shr
inc
aaa
pop
stos
pop
sbb
scas
call
(bad)
jmp
retf
mov
or
and
xchg
adc
push
push
add
add
and
std
fisttp
adc
jmp
inc
movs
std
in
inc
mov
xchg
icebp
jp
mov
bound
mov
loopne
pushf
dec
adc
inc
ffree
rcl
test
mov
or
jns
sar
inc
arpl
loopne
add
retf
daa
fcom
add
test
or
add
adc
and
sbb
jmp
rcl
(bad)
retf
inc
jbe
or
cs
inc
push
xor
es
pop
sti
cmps
dec
jnp
ins
rol
jmp
fadd
dec
jl
push
push
and
call
sahf
push
xchg
movs
mov
rol
inc
in
add
lock
ins
cmc
call
sbb
leave
or
pop
pop
xchg
xor
pop
ficomp
and
dec
std
mov
inc
nop
retf
div
inc
repz
mov
mov
repz
adc
push
scas
add
add
mov
add
(bad)
ins
sbb
pop
je
enter
inc
bound
addr16
sbb
(bad)
retf
inc
aas
loope
add
sti
bound
dec
in
mov
add
jmp
add
sub
xchg
fimul
and
dec
xor
inc
enter
or
xlat
lock
dec
pusha
sti
push
jbe
mov
stc
out
cmp
out
pop
lods
add
(bad)
sbb
imul
retf
add
sbb
push
jbe
(bad)
jbe
in
fld
xor
fdiv
mov
cmp
xor
ss
or
stc
lds
mov
mov
sbb
jo
cmp
scas
xchg
inc
(bad)
loopne
das
push
cmps
test
mov
pop
repz
jmp
jle
mov
push
cwde
fimul
jmp
sbb
jle
retf
adc
dec
call
mov
lods
xchg
mov
sbb
mov
xchg
inc
inc
add
or
inc
mov
sub
cmp
cmp
enter
mov
mov
add
inc
fwait
mov
mov
xchg
cwde
jle
adc
cmp
sub
push
sub
inc
loop
push
jae
out
test
hlt
push
and
jmp
jmp
mov
inc
dec
jbe
into
jbe
dec
mov
lods
cld
fcomp
mov
pop
add
out
xchg
dec
clc
gs
sahf
mov
push
lea
pusha
add
sub
(bad)
xchg
arpl
sbb
jl
movs
or
push
sahf
je
and
nop
into
loop
fnsave
or
mov
xchg
mov
daa
and
fcomp
inc
mov
ret
scas
mov
(bad)
push
mov
pop
pop
test
jle
je
das
lahf
popf
mov
fs
call
les
inc
mov
mov
xor
xchg
inc
shl
pop
and
in
jb
adc
pusha
cwde
dec
mov
or
xchg
ret
push
inc
mov
add
enter
imul
fadd
lods
cmp
xor
repz
push
(bad)
xlat
cdq
ret
daa
mov
lahf
or
sbb
gs
or
mov
xchg
retf
push
(bad)
ret
push
daa
nop
mov
(bad)
bound
sahf
enter
ja
xchg
or
xchg
add
mov
pusha
xchg
sti
shl
imul
clc
int
clc
test
sub
pop
mov
out
call
scas
mov
aas
repnz
sub
fs
ror
ret
leave
jnp
aas
fisttp
xor
aaa
mov
adc
daa
test
xchg
rcl
out
call
mov
mov
repz
mov
ds
add
fst
inc
out
adc
aad
loop
std
mov
iret
nop
pushf
loop
int
or
push
(bad)
cs
jmp
xor
xchg
shl
cdq
mov
xor
retf
in
xchg
test
xor
add
xor
push
mov
jae
jg
adc
mov
stos
add
lds
add
xchg
mov
add
js
pop
stc
mov
aam
inc
ret
aam
fbld
loop
mov
mov
dec
cs
mov
dec
cdq
popa
xor
pop
fisttp
gs
mov
lds
mov
cmp
fcom
aas
loop
pop
xor
into
xlat
lds
jb
xlat
cmp
aaa
imul
cmp
mov
dec
sub
mov
mul
es
stos
(bad)
addr16
pushf
cs
xchg
jle
pop
mov
cmp
(bad)
cmp
popf
and
xor
loop
leave
repz
jp
jno
shr
outs
cmps
sub
imul
leave
pop
repz
add
(bad)
mov
add
jb
inc
add
out
and
sub
ror
and
repnz
ret
clc
popa
mov
lahf
inc
pop
pushf
int3
nop
dec
pop
cmps
xchg
push
sub
or
ja
lods
ins
xor
xor
pop
mov
inc
repnz
out
or
jb
adc
adc
xchg
pusha
cmp
mov
pop
pop
xchg
ins
pushf
push
cdq
shl
call
fnstcw
je
call
ins
dec
enter
add
or
sub
es
mov
cli
sub
lock
stos
retf
jmp
sahf
jnp
sti
mov
jp
jl
and
je
es
push
pop
jne
xor
xlat
adc
jge
ins
cmp
cdq
test
in
jle
sub
sahf
jo
std
aaa
mov
imul
dec
imul
sti
push
and
jmp
jo
stos
in
jbe
adc
mov
push
out
mov
outs
push
ror
loopne
or
push
jle
out
repz
out
(bad)
fwait
push
pop
les
sub
xor
add
fcmovnb
leave
pop
inc
mov
fisub
call
cs
iret
add
repnz
dec
rol
cwde
in
rol
into
sbb
inc
mov
jmp
movs
push
push
inc
sbb
adc
pop
and
stos
sub
or
ss
jbe
arpl
adc
es
sbb
cmc
add
cmp
xchg
add
mov
xor
das
xor
mov
xchg
mov
mov
inc
popf
add
cli
call
sub
and
jp
inc
cmp
mov
fs
lds
adc
nop
jns
cmp
jp
lods
sbb
(bad)
cs
and
mov
xrelease
imul
mov
dec
stos
inc
or
aam
xchg
ss
aad
pop
jmp
jbe
pusha
movs
cmp
fild
outs
mov
and
outs
xchg
dec
inc
mov
dec
fst
push
adc
daa
pop
clc
and
dec
and
mov
jb
lahf
sbb
lea
jle
mov
cmp
jno
inc
cld
stos
mov
scas
mov
frstor
add
and
test
int3
iret
imul
arpl
iret
aas
lahf
push
adc
xchg
and
adc
mov
shl
push
push
dec
jo
leave
xor
retf
ret
fld
push
cli
(bad)
bound
mov
adc
xor
pop
mov
aam
ins
cwde
pop
icebp
test
int3
mov
dec
test
leave
dec
adc
fimul
sbb
shr
jmp
cmps
les
inc
mov
into
(bad)
xchg
jnp
push
xchg
pop
lds
jp
pop
xchg
jmp
dec
lahf
inc
push
add
jmp
psubusb
mov
jno
add
in
inc
jb
jmp
fsub
and
js
fs
cmp
in
popa
stos
hlt
ja
add
jmp
push
adc
pop
inc
(bad)
lahf
repz
mov
jg
fimul
push
pop
fsubr
dec
and
mov
mov
pusha
sbb
sub
aam
jmp
fstp
stc
xchg
mov
push
mov
cs
jno
jae
or
fst
mov
ins
mov
repz
push
inc
(bad)
cmp
jecxz
lods
mov
arpl
pcmpgtd
rcl
pop
pop
inc
es
sub
push
xor
xchg
push
cmps
sub
mov
icebp
adc
aad
arpl
pop
adc
mov
or
fucomi
mov
mov
leave
mov
push
pop
jbe
or
mov
or
sbb
pushf
mov
cwde
jge
push
add
fcom
and
or
push
aam
dec
imul
sbb
xchg
stc
add
loope
adc
imul
fsubr
mov
ret
test
push
mov
(bad)
and
jbe
popf
xor
aad
mov
sbb
js
push
es
jmp
mov
fild
xor
and
mov
hlt
pop
and
lods
ficomp
nop
push
fwait
mov
dec
xchg
jg
outs
jmp
mov
mov
and
scas
cmps
jno
pop
inc
and
sub
jecxz
or
inc
push
mov
lods
icebp
sub
mov
pop
repz
and
dec
loop
std
cmp
mov
mov
fiadd
adc
mov
lds
mov
popf
jmp
adc
adc
mul
sub
xchg
sub
pop
cmps
jns
push
fcos
ins
movs
and
cli
call
cwde
push
aas
cmp
add
sahf
fimul
mov
sbb
mov
test
fist
jecxz
(bad)
loope
mov
mov
xchg
out
sbb
sahf
pop
ins
fwait
cmp
bound
in
and
pop
jle
pushaw
mov
pop
push
aas
movs
push
arpl
dec
cmp
rcl
push
(bad)
xchg
test
inc
add
push
pop
test
call
mov
pushf
les
ins
inc
shr
out
fst
pop
dec
ds
push
lods
mov
push
in
dec
push
push
call
xlat
in
mov
cs
inc
cmp
mov
jecxz
mov
push
mov
(bad)
inc
or
lahf
dec
ja
cmps
iret
shl
push
push
cmp
ret
inc
sahf
sbb
arpl
mov
fsubr
xor
mov
daa
das
mov
pusha
leave
cmp
mov
xchg
sbb
bound
mov
pop
jmp
pop
icebp
ins
(bad)
ret
neg
jl
jmp
ret
add
(bad)
shl
jno
repnz
dec
movs
push
dec
inc
sti
(bad)
call
(bad)
xchg
sbb
adc
adc
in
push
jmp
js
mov
cmp
mov
pop
xchg
jnp
mov
or
push
push
pop
retf
daa
aad
mov
test
push
lods
cmps
xor
dec
das
and
cmp
push
add
mov
in
jl
cmc
std
rol
iret
mov
cwde
fistp
inc
push
outs
add
into
xchg
ja
loopne
mov
add
out
jmp
dec
lea
scas
in
(bad)
sar
or
(bad)
fwait
mov
inc
sbb
in
push
sub
mov
movs
ds
xlat
test
js
daa
push
jle
jae
inc
nop
into
das
(bad)
sbb
sbb
add
in
int3
mov
fmul
mov
into
stc
div
sub
test
jp
sub
shl
lock
call
or
das
dec
jmp
ds
out
hlt
add
das
fldenv
mov
cmp
fld
push
mov
add
xor
cmp
pop
pop
icebp
pop
ja
cmp
dec
addr16
jbe
mov
lea
or
pop
daa
jae
iret
or
shl
adc
xchg
or
outs
std
int
jg
mov
imul
mov
das
xor
mov
rol
ins
or
fist
cmp
xchg
and
les
mov
xor
jg
mov
pop
sbb
cli
inc
mov
xor
and
(bad)
inc
and
div
out
pop
ror
mov
fist
pop
and
rcr
push
pop
shl
xchg
aaa
mov
or
xchg
imul
es
xchg
repz
popf
xor
jnp
dec
xor
pop
mov
mov
dec
push
ds
fcom
xchg
cmps
out
dec
push
mov
inc
or
repz
inc
xchg
adc
icebp
rol
loopne
mov
adc
sti
rcl
inc
adc
hlt
xchg
xchg
pushf
mov
push
out
nop
add
xchg
mov
(bad)
bound
jno
ins
aad
loope
mov
cmp
mov
std
sub
mov
in
lea
cmps
(bad)
fwait
mov
add
or
or
push
nop
mov
iret
mov
std
mov
cmp
jmp
retf
jnp
out
bound
dec
dec
repz
add
nop
mov
bnd
out
and
lds
xor
cmp
jnp
xchg
sti
inc
cmps
outs
mov
bound
or
popa
pop
ja
stc
mov
mov
cmp
jae
addr16
into
outs
aam
and
xchg
clc
lods
pop
inc
cmp
mov
inc
xchg
aad
das
jmp
or
and
cmp
nop
in
leave
adc
adc
(bad)
pop
popa
mov
push
jb
(bad)
and
sub
nop
int3
jne
rcl
pop
shr
pop
lods
cmp
ret
out
jbe
shl
jo
jl
push
jo
jno
in
test
inc
add
rol
lods
aas
aaa
in
xor
iret
pop
call
pop
adc
adc
push
mov
(bad)
mov
out
stos
hlt
cdq
and
(bad)
push
cmp
das
xchg
inc
scas
dec
mov
aas
pushf
rcr
arpl
push
cmps
cmp
out
pop
mov
xor
inc
mov
nop
xchg
pop
jbe
add
(bad)
mov
sub
mov
xor
aaa
push
inc
mov
xchg
sbb
pop
inc
mov
stc
aas
fisttp
mov
sbb
imul
sbb
jno
int
add
(bad)
push
pop
test
push
add
dec
cmp
cmc
int3
jne
(bad)
add
fisubr
add
fisttp
lods
sbb
movs
cmp
xor
repnz
jg
cmp
adc
dec
mov
sbb
sub
mov
and
or
out
jno
(bad)
pop
sbb
mov
sahf
ret
ret
sbb
pop
xlat
(bad)
xor
std
aas
movs
fist
or
and
pop
std
aam
mov
in
adc
leave
sbb
xchg
mov
(bad)
out
xor
aaa
pop
xor
je
xor
sbb
movs
or
jge
mov
ins
add
xchg
cmp
(bad)
xor
leave
bound
imul
mov
pushf
mov
ficom
inc
mov
sbb
inc
adc
sub
inc
movs
xchg
jns
rcl
(bad)
cwde
jbe
daa
sbb
int3
push
jl
movs
sahf
xor
jge
shl
jp
fmul
xor
sbb
mov
cdq
in
nop
pop
retf
dec
or
jle
cmp
mov
add
repnz
call
jae
xor
aaa
and
mov
push
mov
adc
mov
push
(bad)
sbb
push
push
mov
call
add
push
sub
test
mov
mov
cmp
xor
movs
push
mov
imul
out
or
pop
mov
push
adc
and
sbb
lahf
adc
dec
sbb
jnp
add
sahf
lods
cmp
push
mov
das
and
jp
(bad)
push
xlat
cmp
mov
(bad)
stc
sbb
hlt
ret
imul
push
retf
xchg
mov
test
je
cmp
fs
dec
cmps
mov
test
cs
sbb
add
cdq
lds
pusha
or
cld
scas
add
popf
cld
mov
xchg
add
cmp
push
idiv
sar
mov
cmp
nop
sbb
cld
xchg
dec
addr16
mov
mov
and
pushf
aas
sbb
mov
jb
push
daa
mov
mov
push
push
cmp
or
hlt
mov
jmp
sub
mov
outs
cmp
mov
outs
inc
push
push
movs
cmp
lds
aad
add
cmc
or
xor
dec
inc
mov
sbb
cwde
stos
popa
add
(bad)
mov
mov
pop
imul
cs
ins
lea
stos
popa
fnsave
mov
sbb
xor
adc
jp
sbb
or
int
test
inc
mov
inc
div
adc
pushf
cmp
cmps
mov
dec
mov
repz
loope
fstp
mov
or
inc
push
out
sbb
pop
jmp
sbb
pop
mov
jns
mov
or
adc
fwait
mov
(bad)
popa
inc
ja
mov
mov
adc
mov
cmp
or
arpl
leave
movs
ror
jecxz
mov
(bad)
adc
dec
cdq
jns
add
push
rcr
jecxz
cmc
mov
test
push
cs
xchg
test
cmp
fwait
and
jecxz
shl
sbb
es
mov
out
jae
inc
mov
push
sar
xor
xchg
mov
movs
lods
mov
ret
pop
mov
movs
jo
icebp
mov
fs
(bad)
jmp
in
ds
jp
sub
imul
sbb
dec
aam
bound
dec
and
mov
out
(bad)
leave
mov
xor
sbb
add
mov
cmp
mov
les
push
hlt
and
mov
mov
(bad)
fcom
outs
pop
sub
fstp
jl
es
cs
adc
sub
jbe
cmp
lods
in
int3
xor
retf
dec
or
push
and
jmp
js
push
jecxz
mov
mov
scas
clc
mov
adc
mov
mov
pushf
mov
out
loopne
or
jmp
xchg
jb
pop
daa
outs
pop
jle
mov
lahf
and
dec
mov
test
loop
cmp
pop
sahf
jmp
in
lods
jp
fdecstp
fucomi
inc
add
push
mov
jg
loopne
and
jb
jnp
mov
inc
cmp
(bad)
in
imul
movs
out
cs
pop
pop
fdiv
int
stos
add
addr16
daa
xchg
xchg
popa
mov
mov
out
xor
inc
loopne
mov
pop
into
int
cmp
aad
mov
hlt
jmp
jg
(bad)
inc
ss
(bad)
(bad)
sbb
jmp
ror
mov
inc
iret
das
loopne
ins
pavgw
push
fstp
rol
call
dec
mov
or
add
xlat
sub
cdq
pop
mov
cmp
sti
test
arpl
aaa
out
imul
inc
ret
aaa
add
scas
(bad)
das
fsubr
xor
xchg
jmp
sub
out
ja
ins
sub
jge
sub
jae
xchg
mov
inc
xchg
push
cmp
xor
dec
push
jb
and
ss
push
pop
int
jecxz
loopne
test
jmp
mov
test
adc
pop
or
dec
push
(bad)
jl
sub
lods
pop
test
push
icebp
shr
into
jg
cmps
xchg
sbb
jle
xchg
sub
mov
in
imul
ja
cwde
add
sti
xor
popa
(bad)
cli
jl
ja
pop
fstp
pop
int3
jle
jl
js
inc
in
repz
sub
fcom
jp
push
add
push
and
mov
jl
and
or
push
aas
cwde
pop
push
mov
fld
cmp
loop
das
mov
cli
hlt
dec
(bad)
in
add
movs
clc
dec
mov
or
sub
scas
scas
imul
sbb
retf
sbb
movs
mov
stos
movs
pop
rol
adc
pop
push
ins
call
daa
fucom
pop
(bad)
int
ss
adc
xor
jmp
mov
(bad)
pop
ficomp
mov
jns
xchg
ins
mov
cmps
pop
ds
cs
push
movs
adc
dec
cmp
sti
call
cli
in
add
es
lods
mov
mov
xor
cmps
lea
sbb
icebp
jno
adc
pop
add
data16
call
loopne
iret
sbb
fsub
mov
lock
or
mov
jle
or
repnz
in
fild
sbb
push
fsubr
mov
ins
pushf
push
inc
dec
cmp
mov
icebp
dec
scas
jl
jae
pop
and
sbb
mov
add
lods
std
cli
add
mov
(bad)
sbb
and
(bad)
sbb
xor
mov
in
cmp
rol
stos
mov
adc
xor
retf
(bad)
push
ja
sub
in
in
retf
jge
add
fld
add
enter
leave
mov
gs
retf
mov
leave
mov
ret
repz
and
ss
loopne
jl
jae
push
mov
outs
cmovo
ins
ins
cmps
leave
cld
jnp
add
cmp
push
xlat
popf
push
les
jno
mov
inc
mov
je
stos
nop
sbb
adc
cmp
push
sub
outs
out
inc
cmp
fnstsw
fdiv
hlt
out
outs
enter
test
jge
or
push
lea
ins
ret
pop
lock
cmp
adc
out
xor
inc
sub
aam
push
xor
dec
mov
sbb
xor
mov
aaa
arpl
enter
mov
adc
test
(bad)
or
mov
mov
daa
cmp
sbb
icebp
xchg
ds
sub
add
sahf
sub
mov
xlat
inc
add
imul
adc
sub
sbb
js
jecxz
aam
daa
jg
cmp
repz
js
in
pop
cli
loope
jg
ds
push
cmp
cmp
out
dec
fidivr
ss
leave
pop
or
(bad)
sbb
sahf
imul
or
call
jb
ins
mov
fdiv
aam
mov
imul
imul
or
gs
sbb
test
pop
rcr
(bad)
outs
(bad)
bound
repnz
ror
sub
pop
add
fwait
loope
dec
outs
jbe
xchg
dec
lea
rcl
xchg
xor
outs
loop
lea
jg
sar
lods
or
sbb
mov
or
je
sub
gs
mov
jmp
in
fstp
mul
sbb
lahf
out
pop
lock
inc
adc
cmp
cwde
sbb
call
push
xor
outs
xchg
mov
(bad)
pop
dec
jnp
mov
int
das
bound
shl
fwait
jg
cmovo
pop
scas
pusha
ror
mov
js
enter
mov
(bad)
call
or
icebp
ret
mov
mov
imul
lock
jmp
xchg
cmps
fs
hlt
(bad)
les
inc
repz
pop
shr
test
cmp
add
inc
push
(bad)
mov
sbb
push
aaa
pushf
jbe
cmps
es
cmp
sub
out
ja
mov
aad
add
xchg
fwait
jmp
mov
inc
addr16
fldz
stos
mov
jbe
mov
cmp
or
lds
fbld
xor
add
and
sbb
push
push
and
adc
sub
test
push
add
inc
inc
ja
popa
add
dec
dec
pusha
ret
addr16
push
or
push
js
mov
ins
cmps
sbb
addr16
mov
icebp
add
adc
add
mov
push
jl
add
xchg
stc
jnp
or
pop
xchg
push
sub
jmp
imul
cli
xor
pop
mov
dec
mov
inc
mov
ins
fs
add
sbb
(bad)
xor
xor
jge
pop
dec
inc
push
or
data16
inc
add
and
inc
jmp
ds
pop
out
push
sub
mov
clc
lahf
cmp
fistp
mov
mov
or
outs
sub
jl
jmp
test
and
xchg
std
out
jl
ret
iret
cmps
out
dec
pop
fimul
fwait
iret
(bad)
fadd
push
shl
(bad)
cmc
jge
punpcklwd
cli
mov
mov
dec
fisttp
fstp
push
xchg
gs
sar
ficomp
jb
cmp
and
sub
out
sbb
push
xor
std
lds
lods
rol
fs
sbb
je
add
fist
mov
and
mov
sti
jecxz
std
pop
ins
iret
pushf
loope
lock
lahf
test
mov
std
ds
mov
out
and
xchg
push
push
push
neg
into
mov
dec
sbb
mov
xchg
mov
movs
enter
jb
les
pop
xor
test
mov
lahf
iret
dec
push
aad
dec
dec
xchg
mov
add
pop
fldln2
movs
sbb
xchg
mov
xchg
mov
mov
dec
out
mov
fld
cmp
sbb
maxps
xor
cwde
lds
jl
xchg
fwait
xor
jo
mov
pop
ds
dec
imul
sub
in
lods
xchg
ja
sub
xor
sub
add
cmp
mov
nop
leave
xchg
cmc
and
maskmovq
outs
jmp
cmp
fsubr
icebp
inc
dec
retfw
push
js
xchg
inc
adc
push
data16
call
push
add
outs
jbe
adc
imul
jb
leave
fcomp
lahf
ins
cmp
mov
std
mov
(bad)
int3
lea
mov
pop
ss
div
iret
scas
and
fnsave
pushf
adc
call
ins
pop
retf
ja
sub
scas
sbb
xor
and
aad
mov
sub
data16
xchg
cs
data16
adc
sbb
inc
cmc
pop
scas
enter
cdq
mov
jge
push
adc
xchg
imul
in
int
inc
cwde
clc
pop
sub
pop
mov
adc
push
(bad)
mov
push
push
add
out
daa
ds
jle
and
outs
das
iret
rcl
das
rcr
aad
(bad)
add
fisttp
xor
rol
xor
lods
sub
ss
add
sbb
fdivr
sub
xchg
gs
add
sti
cs
aad
je
xchg
push
adc
sub
cli
ss
je
sub
inc
or
std
sub
sub
sub
push
push
int3
out
out
in
push
and
mov
push
mov
xor
ja
addr16
mov
and
xchg
and
mov
data16
imul
aam
and
cwde
ja
ror
add
ins
jge
(bad)
test
out
cmp
jmp
and
aaa
bnd
xchg
jno
lds
jnp
lds
fisub
pop
add
or
bound
out
cs
stc
sub
clc
das
(bad)
stos
mov
push
xchg
jg
movs
mov
fiadd
sub
xchg
mov
loopne
dec
xor
mov
popf
stos
mov
pop
push
mov
pop
jno
int
mov
dec
xchg
or
push
int
or
fsubr
pop
out
push
popf
in
out
out
gs
or
aaa
imul
retf
loopne
push
or
pusha
arpl
mov
cmp
or
sbb
sbb
push
popa
fnstsw
dec
lea
fisttp
inc
pop
push
or
in
xchg
scas
gs
fild
and
push
pop
sub
fsubp
cs
mov
in
push
aam
int3
jae
js
push
push
sbb
adc
imul
fnstsw
in
pusha
test
jns
dec
je
pop
fidivr
adc
jecxz
imul
and
jp
in
and
imul
ja
mov
mov
fndisi(8087
popa
add
popf
and
mov
mov
xchg
out
ins
(bad)
jns
mov
popf
xchg
movs
xor
and
pop
pop
in
(bad)
push
clc
push
into
pusha
scas
das
jo
adc
(bad)
lea
push
add
retf
adc
cmc
ss
sbb
add
pushf
outs
xor
mov
mov
lods
test
imul
mov
jle
dec
mul
mov
test
inc
cmp
addr16
(bad)
int
loopne
inc
outs
fwait
pusha
int
ins
test
lea
and
ds
sub
mov
push
push
rcl
mov
fs
enter
shl
out
call
stos
adc
fidiv
sahf
in
icebp
mov
pop
jg
cmp
movs
dec
xor
jae
in
outs
sub
cmp
loopne
sbb
adc
mov
and
ins
ins
cmp
xchg
(bad)
out
xchg
cli
or
push
pop
in
cmp
jmp
mov
adc
adc
add
push
mov
pop
iret
sub
jmp
cmp
jae
adc
sar
aas
sub
push
in
xor
add
pop
addr16
imul
(bad)
cmp
push
fmul
div
add
push
add
jne
dec
rol
shr
jne
addr16
add
cdq
inc
test
nop
pushf
sbb
std
and
arpl
hlt
push
fmul
test
xchg
xchg
add
in
add
inc
jb
movs
sbb
ror
push
sti
jo
or
dec
adc
sbb
cwde
mov
daa
cmps
fs
ss
addr16
js
movs
not
xchg
in
xchg
push
xchg
aas
out
pop
(bad)
mov
adc
cmc
movs
and
jp
hlt
or
adc
pushf
popaw
fisubr
mov
jae
div
sbb
test
ret
out
cmp
out
outs
jno
stos
and
mov
add
enter
cmps
mov
adc
or
retf
push
andnps
call
int
sub
stc
xchg
push
outs
sbb
cmc
and
aad
fadd
in
sub
xchg
inc
imul
mov
xchg
ins
adc
xchg
mov
std
lock
test
enter
fcmovbe
aas
out
in
push
add
push
retf
xor
imul
mov
add
dec
cs
ins
sti
jne
adc
adc
add
ins
sbb
sub
(bad)
xor
sub
stc
cs
xchg
push
xor
jl
out
push
mov
bound
stc
jg
mov
jl
mov
mov
int
es
sbb
leave
xlat
cmp
ss
cld
push
addr16
and
ins
xor
pushf
(bad)
pop
ja
arpl
inc
fnstcw
gs
(bad)
cmps
stos
and
pusha
hlt
sbb
add
outs
inc
sbb
or
jg
cmps
push
and
push
jl
mov
cmp
sti
jne
push
std
daa
adc
adc
fstp
loop
xchg
or
and
sub
js
pop
dec
cmp
and
call
mov
pop
shl
fld
imul
add
arpl
fdivr
test
out
aam
pop
cmps
clc
inc
add
jmp
fsubr
inc
inc
loopne
sbb
and
shl
fisttp
popf
loop
xchg
test
cwde
dec
and
les
out
jecxz
mov
movs
aam
fisub
rcr
sbb
add
pop
bound
inc
cmp
add
loop
mov
mov
test
stos
sub
je
and
cmp
adc
add
pop
dec
imul
cmc
(bad)
and
xor
(bad)
xor
dec
shr
scas
sub
sti
loopne
std
nop
sahf
pop
aas
jmp
ins
mov
lods
sub
mov
int
sbb
mov
(bad)
jmp
jnp
cwde
pop
inc
push
dec
stos
clc
dec
and
dec
iret
mov
imul
cdq
jo
repz
sar
push
js
xchg
push
push
bound
cmp
cmp
mov
xor
adc
pop
ins
mov
ja
pusha
ficom
xor
shl
inc
fadd
mov
mov
xchg
push
jne
pop
dec
push
(bad)
loope
ret
inc
push
pop
sub
ins
out
fsubr
jge
in
arpl
push
xchg
mov
dec
cmp
in
jecxz
and
(bad)
jge
sti
cs
sub
push
push
lods
lock
pop
jae
xchg
mov
mov
xchg
xor
pusha
xor
adc
mov
fiadd
and
xor
add
xchg
sbb
sub
dec
movs
cmovnp
aad
xor
popf
fimul
test
pop
ins
out
jb
inc
mov
mov
push
push
retf
out
push
pop
icebp
mov
adc
movs
inc
and
inc
mov
inc
call
imul
cmp
shr
pop
inc
or
pop
mov
mov
fcomp
jg
aam
pop
scas
push
data16
mov
(bad)
out
xlat
cmps
jl
inc
adc
jno
outs
sbb
xchg
(bad)
fist
pop
(bad)
xchg
xlat
sub
or
pop
loope
sub
mov
dec
pop
pop
push
push
jle
sub
out
icebp
add
lods
xor
jg
icebp
pusha
jno
repz
rol
sub
add
test
clc
rcl
gs
aas
inc
xor
xor
popa
(bad)
or
dec
jo
xchg
gs
pop
bound
sbb
pop
mov
cmp
jae
icebp
fnstcw
repnz
sar
and
and
xchg
inc
mov
imul
icebp
mov
adc
fcomp
out
xor
lods
fwait
(bad)
sub
imul
into
(bad)
lods
mov
or
jge
cmp
sbb
dec
lods
jbe
outs
in
loopne
repnz
adc
mov
int3
fst
mov
leave
cwde
add
cmp
pop
dec
test
sbb
shl
scas
xor
xchg
mov
mov
bound
mov
sbb
dec
in
dec
pop
daa
inc
xchg
adc
iret
xchg
push
inc
inc
ror
out
push
loop
push
(bad)
cmp
into
loope
fadd
ficom
inc
fisttp
sbb
out
mov
lods
mov
add
lea
ins
inc
jmp
add
leave
call
mov
cmp
jecxz
add
jl
or
in
fld
inc
clc
dec
lods
sbb
scas
xor
stc
nop
xchg
mov
(bad)
cmp
fild
lea
inc
jg
xor
gs
mov
data16
adc
sub
adc
std
loope
retf
sbb
and
and
and
addr16
mov
push
push
mul
xchg
mov
rcr
clc
mov
fmul
rol
xor
push
jge
cld
push
sub
outs
push
(bad)
test
adc
(bad)
or
cmp
das
jbe
imul
leave
xchg
and
lds
sub
pop
leave
mov
cwde
add
rcl
inc
pop
and
or
ret
push
jecxz
pop
mov
pop
aad
stos
loop
mov
pusha
cmp
push
fisttp
inc
test
mov
div
retf
dec
xor
das
push
icebp
push
outs
nop
jmp
repnz
push
cmp
mov
cmp
ds
sahf
ins
pop
call
push
push
sub
xlat
mov
sbb
mov
cmp
std
or
jge
fstp
aam
jmp
xor
movs
push
in
arpl
xchg
popf
mov
xor
pop
and
fwait
xchg
push
test
ret
and
movs
lods
jmp
js
mov
mov
push
sub
cmc
test
push
cmc
mov
dec
arpl
mov
sub
jb
jl
xchg
sub
fwait
cmp
imul
pop
inc
xchg
inc
xchg
sub
(bad)
cdq
data16
fmul
shl
push
jae
mov
scas
pop
sti
call
ret
xchg
and
pop
movs
inc
adc
movs
jmp
cmps
push
in
xor
pop
push
and
sub
cmp
pop
mov
push
cld
dec
xor
mov
(bad)
hlt
cmp
rol
(bad)
fisubr
(bad)
sbb
mov
cmp
push
aaa
lods
ja
push
cmp
sbb
cmp
mov
pop
jp
int3
fadd
jmp
out
jg
and
pop
ins
bound
pop
js
fs
jl
(bad)
cmps
clc
pop
dec
out
scas
adc
sar
repnz
rcl
jns
aad
pushf
inc
retf
and
outs
push
retf
mov
xor
stc
mov
scas
stos
ins
push
push
repnz
fstp
sbb
jnp
sbb
sbb
push
mov
imul
dec
xchg
outs
scas
jge
or
aaa
push
push
pop
addr16
cmps
enter
outs
icebp
dec
loop
xor
pop
in
fwait
or
jge
pusha
aas
(bad)
stc
fsub
push
fwait
push
daa
hlt
mov
stc
fs
data16
mov
sahf
jnp
or
push
cwde
inc
pusha
mov
push
mov
mov
pop
pop
add
inc
gs
xchg
out
push
sbb
fild
in
in
mov
inc
push
idiv
loop
test
test
fwait
add
mov
cmp
mov
daa
iret
(bad)
and
pusha
lods
jl
sbb
mov
mov
jg
and
(bad)
mov
pop
or
xor
icebp
addr16
mov
and
dec
movs
popa
sub
mov
fbld
bound
sbb
ins
or
inc
inc
arpl
add
fcom
sub
mov
movs
call
scas
arpl
hlt
movs
std
ds
rcl
mov
sbb
inc
cdq
jae
dec
dec
xor
push
dec
dec
popf
aas
sub
repz
shl
mov
test
cmp
cs
jno
dec
adc
pop
rol
mul
test
sbb
adc
mov
sub
fwait
mov
pop
test
adc
jnp
cmc
fcmovnu
adc
xor
int3
popa
pop
fldenv
ror
clc
or
rcl
mov
std
popa
out
jno
mov
test
inc
clc
add
(bad)
jo
lock
pop
cmp
test
and
mov
sahf
pusha
adc
xchg
add
imul
dec
jbe
fsub
or
sub
popf
aam
(bad)
fldcw
sub
xchg
pop
mov
xchg
jnp
aam
cmps
push
mov
lods
cmps
mov
adc
test
inc
dec
xchg
jmp
je
jecxz
je
es
push
mov
movs
fnstenv
dec
ds
add
jmp
div
or
sti
call
pop
dec
stos
retf
and
push
bound
and
out
mov
jecxz
push
pop
or
sbb
cwde
inc
in
pop
mov
int
les
xchg
adc
(bad)
dec
push
pop
sbb
je
and
stc
cli
adc
nop
pop
cmp
push
xchg
or
mov
inc
push
test
das
jo
sbb
ds
and
cmc
inc
cmps
mov
xor
push
adc
jne
dec
cmp
and
sti
(bad)
fstp
xchg
and
add
pop
push
jae
jmp
outs
lods
(bad)
mov
xchg
out
les
mov
lods
cwde
call
add
mov
ja
and
mov
mov
es
js
push
xchg
push
cli
test
add
or
push
(bad)
and
sub
fild
and
movs
pop
xchg
cmp
repnz
jl
mov
sub
pop
xor
push
fimul
xor
jbe
shl
xor
outs
jmp
les
adc
loop
pop
out
or
in
ins
sub
mov
rcl
fmul
(bad)
lods
lods
add
sti
or
(bad)
ja
int
aad
mov
adc
adc
or
xor
(bad)
scas
push
adc
jge
mov
sub
adc
sub
es
push
jno
movs
mov
sub
scas
in
arpl
not
or
fidiv
inc
xlat
retf
stos
repnz
test
push
sbb
sar
iret
jo
cvtdq2ps
icebp
mov
pop
xchg
int
(bad)
addr16
adc
and
fs
je
and
mov
in
pusha
in
add
mov
ret
push
push
xchg
cmp
adc
call
mov
mov
pop
mov
xlat
xor
stos
cmp
fsubr
or
clc
inc
and
jo
sbb
adc
in
xor
mov
ins
mov
sbb
xchg
retf
outs
cld
adc
or
test
stos
mov
movs
dec
dec
shr
sbb
jmp
in
adc
in
mov
in
sub
pop
push
push
dec
push
sub
movs
jg
mov
scas
pop
clc
pop
add
repz
mov
js
rcr
jns
pop
add
movs
outs
jbe
lahf
mov
lea
fdiv
idiv
dec
dec
out
bswap
pop
cmc
mov
adc
mov
aad
sbb
mov
cmps
mov
and
pop
fwait
sbb
push
out
cmc
out
mov
test
or
lahf
sub
mov
mov
inc
xchg
pop
jle
cmp
ja
cmp
jmp
cld
jb
mov
mov
rcl
add
loopne
pusha
out
inc
and
rcl
loopne
leave
adc
scas
jmp
inc
jb
inc
nop
pop
mov
int3
and
out
xchg
dec
aad
mov
sub
(bad)
aas
sub
mov
jnp
int
mov
sbb
cmps
pop
sub
push
mov
jmp
shl
icebp
test
mov
sahf
mov
test
cmps
push
fmulp
pop
das
cmp
sub
ret
mov
aas
and
in
mov
lock
pushf
cdq
loopne
lea
hlt
dec
mov
stos
or
cmp
mov
dec
iret
rcr
inc
sahf
xor
addr16
or
test
int
leave
sbb
dec
push
sar
mov
push
add
les
or
cmps
sbb
and
rol
pop
rcr
(bad)
(bad)
retf
aad
aad
xchg
inc
pushfw
add
mov
cli
or
call
loope
retf
bound
pop
sbb
cmc
arpl
cmps
jae
xchg
push
icebp
mov
pop
sahf
mov
mov
cmps
xchg
sahf
dec
into
dec
ins
cmp
xchg
scas
push
sub
arpl
and
sbb
cmp
lods
dec
xchg
add
out
xchg
loope
cmp
jb
cwde
test
dec
push
fwait
xchg
imul
push
(bad)
jp
or
mov
lds
mov
(bad)
data16
pop
out
movs
das
ins
ins
push
mov
dec
mov
jmp
shl
cwde
mov
ret
cmp
cmp
scas
leave
ins
mov
scas
mov
ret
lea
push
mov
jmp
bound
stc
loopne
jmp
push
clc
pop
test
enter
(bad)
leave
mov
fmul
add
jnp
jb
popf
ss
pop
cmps
(bad)
xor
or
(bad)
mov
jg
idiv
into
xor
fimul
repnz
inc
je
sbb
or
jbe
into
(bad)
cmp
icebp
jae
mov
aas
sbb
dec
in
(bad)
jmp
dec
push
loope
sti
out
rol
lods
mov
mov
pop
pop
xor
jno
pop
fs
or
(bad)
fcomp
(bad)
clc
xor
xchg
sti
ins
stc
jle
jle
lahf
xchg
sbb
jns
movs
pop
push
or
and
aas
cdq
xchg
mov
jo
fwait
call
jb
int3
add
sub
xor
ss
mov
pop
imul
dec
(bad)
jb
fcomp
pop
std
sub
fild
ds
add
scas
lds
or
inc
fild
cmc
sub
dec
aam
pop
sbb
mov
jmp
imul
iret
jbe
and
push
mov
mov
pop
mov
aas
clc
push
cdq
xchg
push
adc
cmp
dec
cld
imul
or
jbe
les
sbb
movs
inc
mov
jae
mov
xor
imul
icebp
dec
leave
xchg
inc
pop
imul
sub
xor
aaa
pop
push
jae
or
push
and
push
jae
push
mov
sahf
mov
add
add
cmps
test
mov
pusha
pop
add
lods
jbe
pusha
jg
(bad)
call
mov
pop
aam
imul
pushf
push
xchg
or
mov
inc
push
add
push
xchg
mov
out
scas
stos
shl
add
ret
lahf
ins
imul
push
push
fstp
test
xor
or
or
adc
adc
cmp
mov
jl
mov
mov
xchg
(bad)
into
icebp
jle
add
retf
(bad)
xlat
fnstsw
sbb
retf
add
lea
push
popa
adc
pop
jg
push
xor
in
jge
pusha
aad
pop
mov
cmp
pop
retf
mov
outs
fimul
loopne
rcr
pop
(bad)
(bad)
mov
push
sub
es
cdq
(bad)
mov
(bad)
adc
mov
(bad)
or
mov
xchg
lods
lods
sbb
out
jo
mov
push
scas
push
call
fwait
mov
sbb
add
cmp
cmp
stc
sbb
adc
cmp
dec
or
imul
sub
hlt
jl
aaa
cmc
(bad)
jg
icebp
fs
xor
cld
mov
ret
fstp
push
fld
fcomp
cmp
jecxz
add
popf
das
pop
out
(bad)
imul
adc
addr16
mov
inc
pop
and
mov
inc
cli
add
sub
mov
sub
inc
icebp
xor
push
cli
inc
test
inc
adc
pop
lea
fldcw
sbb
mov
inc
imul
mov
jle
push
stc
inc
rcr
sbb
jmp
(bad)
(bad)
xchg
add
sbb
mov
push
pop
popa
(bad)
out
mov
lock
xchg
ficomp
movs
pop
lahf
jge
pop
adc
(bad)
adc
loopne
icebp
out
call
into
fidiv
mov
push
adc
rcr
sbb
cmp
jo
xor
and
cwde
in
ds
inc
jnp
out
dec
jns
lods
idiv
fisub
hlt
scas
(bad)
xor
shl
(bad)
repnz
out
mov
js
scas
cmp
and
(bad)
jmp
jbe
jg
test
sub
cld
lea
mov
popa
add
in
rcl
test
jge
(bad)
aad
bnd
pop
sub
jmp
test
adc
les
or
or
or
mov
jp
test
repnz
push
shl
pop
(bad)
pop
leave
ret
fst
ficomp
xchg
mov
xchg
fisubr
add
idiv
mov
pop
jae
sub
jmp
movs
leave
and
mov
shl
xchg
test
ret
ins
ret
shl
cmp
push
sti
je
cmp
rol
nop
aam
clc
inc
(bad)
jns
cmp
iret
sbb
fdivrp
test
mov
pop
ret
outs
pop
aas
mov
xor
xchg
fdiv
xchg
mov
test
add
jg
pop
(bad)
popf
sub
in
stos
sbb
mov
arpl
add
sahf
arpl
xchg
addr16
je
in
push
out
loope
jmp
push
in
xor
pop
jmp
sbb
cld
out
xchg
jmp
mov
mov
push
test
imul
adc
retf
adc
mov
(bad)
pop
or
inc
(bad)
or
dec
mov
lock
inc
cli
aaa
xor
xchg
cmp
adc
aad
ins
cmp
cmp
fdiv
(bad)
or
jg
sub
sbb
inc
test
xor
mov
jp
add
mov
push
add
(bad)
out
sbb
leave
add
ss
sahf
sbb
add
inc
inc
icebp
mov
lea
adc
jns
(bad)
in
xchg
imul
push
stos
jns
sbb
jmp
pop
lods
mov
adc
aas
shl
inc
das
scas
push
test
jmp
clc
pop
mov
jge
inc
ja
xor
mov
test
pop
or
mov
test
jno
loop
mov
mov
int
sub
push
or
es
mov
jmp
adc
mov
es
dec
(bad)
pop
outs
aas
imul
js
out
int
jg
jmp
fimul
mov
pop
push
cdq
popa
dec
sub
mov
mov
test
cld
mov
mov
mov
add
hlt
lods
fsub
es
retf
aas
jnp
cmp
jg
push
and
mov
ds
call
add
fisub
stos
out
and
jae
pop
fs
or
imul
mov
cmps
xor
stos
add
inc
xchg
repz
xchg
sbb
mov
call
sub
pop
sub
dec
sbb
inc
cmp
xor
movs
inc
cmp
pushf
jmp
(bad)
ss
mov
or
jmp
int
mov
ss
and
xchg
fld
aaa
stc
push
sub
loopne
and
jge
or
fxch
fld
int
lahf
movs
pop
hlt
clc
popf
jmp
or
mov
(bad)
clc
das
ret
div
aam
(bad)
rol
or
mov
jmp
gs
add
or
pop
(bad)
cmp
adc
stos
ds
hlt
into
icebp
sub
mov
and
and
mov
pop
jle
cdq
sbb
in
ret
ins
mov
pop
enter
mov
mov
retf
int3
mov
add
int
retf
xchg
js
xchg
(bad)
jmp
not
lahf
jle
ss
data16
hlt
inc
cmp
and
aas
pop
jg
pop
in
xchg
fidivr
xor
jne
ins
cli
into
aas
fsub
out
aaa
push
and
jne
cmp
cmp
(bad)
push
sbb
pushf
mov
js
push
and
int
push
aam
xchg
out
pusha
and
push
cs
mov
movs
pop
mov
sub
pop
sub
dec
push
sub
stc
lods
sub
lods
pop
js
push
(bad)
add
repz
dec
dec
and
fcom
cmp
cdq
push
pop
push
push
and
aas
mov
jae
js
push
jecxz
das
stc
add
cmp
fsub
cmp
repz
sbb
pop
dec
into
mov
leave
add
shr
ss
pop
int
inc
or
fmul
movs
dec
and
jne
js
jns
ins
sub
lods
call
or
dec
xchg
fisub
into
push
test
mov
sbb
int
sub
inc
dec
sub
test
pushf
fcmovbe
enter
pop
aam
in
jecxz
mov
jae
xor
pop
call
mov
mov
pop
mov
cmp
ins
jae
jbe
inc
xchg
sbb
mov
fimul
push
dec
cmp
cmp
daa
adc
or
out
xchg
mov
xchg
push
cmps
out
push
cmp
jno
imul
call
mov
sar
jb
and
jae
jns
jo
jmp
and
pop
(bad)
xchg
shl
stos
pop
dec
push
mov
sti
push
mov
xchg
push
sub
bound
inc
inc
mov
adc
sbb
sbb
and
xor
je
cs
ret
and
sbb
adc
push
pop
loop
sti
les
pop
arpl
fldenv
add
pop
outs
retf
inc
aas
sub
cwde
jne
pop
test
or
cli
fs
adc
js
pushf
sar
out
cwde
sub
imul
or
sahf
cmp
jmp
popa
sbb
sub
(bad)
mov
retf
mov
js
daa
(bad)
(bad)
ins
leave
or
push
stos
clc
sbb
xchg
mov
lock
mov
retf
cmps
popa
shr
sub
sub
sbb
out
pusha
mov
jo
jo
clc
pushf
xor
sub
loopne
retf
cmp
push
mov
dec
fdivr
jg
mov
data16
cld
scas
lea
in
sbb
pop
mov
and
xchg
pop
adc
xchg
jbe
mov
cld
cmp
cli
cmps
shl
cmp
call
or
mov
add
test
mov
or
fistp
or
cwde
xor
mov
cld
outs
mov
and
enter
nop
clc
popa
cwde
sub
mov
ja
cmp
dec
or
sub
cmp
cmp
and
adc
dec
shr
sbb
or
jl
inc
cmovbe
pop
adc
jg
scas
mov
fwait
xchg
lahf
pushf
pop
pop
div
lods
inc
jne
dec
jb
cmp
sbb
xor
sub
add
cmps
stos
lods
out
cwde
fwait
jae
or
repnz
xchg
jne
adc
cmps
adc
push
inc
jb
daa
ret
inc
pop
mov
gs
test
stos
test
cmp
mov
adc
mov
std
outs
fs
mov
stos
sub
add
test
push
jb
icebp
lods
stc
push
aam
xchg
xor
fisttp
pop
sbb
sbb
sub
dec
je
pop
stc
mov
push
inc
std
popa
mov
iret
jne
shr
and
fisubr
sub
inc
loope
fcomp
xchg
ret
dec
sahf
call
xchg
jne
cmp
push
lods
das
(bad)
add
xor
loopne
mov
cmp
imul
xchg
pop
in
verw
out
sar
das
push
movs
xor
pop
bound
jnp
clc
push
sti
fcom
push
inc
repz
(bad)
imul
push
or
lods
fmulp
out
addr16
sti
push
dec
or
jmp
movs
push
out
xor
ss
jmp
fwait
mov
in
test
fwait
mov
into
movs
in
mov
push
rol
pop
and
es
adc
cwde
pop
jp
xchg
dec
cmp
ja
pop
mov
fisub
dec
jbe
retf
pop
retf
retf
mov
jg
jmp
pusha
test
out
pop
mov
retf
retf
movs
retf
xlat
out
jmp
mov
scas
and
cli
or
cwde
shr
mov
sbb
and
sbb
std
lock
dec
and
popa
ja
jmp
sub
cmp
xchg
inc
mov
shr
and
or
jecxz
jg
push
shl
ss
jne
outs
sbb
mov
cmp
adc
sahf
pop
js
sti
cmp
adc
cmp
pop
out
sub
or
jae
dec
fistp
inc
sbb
or
sbb
dec
mov
popf
push
lea
adc
frstor
xchg
jmp
jne
adc
mov
xchg
gs
sahf
test
test
jo
pop
cmp
dec
lds
inc
popa
mov
test
fsub
lods
sbb
icebp
sub
shl
in
ret
test
mov
cld
adc
shl
mov
jbe
outs
sar
mov
mov
mov
and
test
lea
or
nop
fidivr
mov
clc
sub
push
and
movs
or
mov
fldz
hlt
dec
(bad)
stc
popa
jbe
pop
push
adc
xchg
movs
xlat
sub
mov
icebp
das
push
dec
push
xor
les
shl
mov
xchg
xchg
dec
(bad)
test
pop
mov
ins
add
aad
inc
xchg
adc
jo
repnz
and
xchg
lods
cmps
out
and
lods
dec
add
inc
pop
sbb
dec
mov
(bad)
xchg
out
scas
xchg
not
fst
or
aam
pop
das
ror
sbb
push
test
mov
mov
push
ins
pop
adc
les
addr16
inc
mov
xchg
dec
adc
dec
adc
xchg
xchg
dec
mov
jecxz
inc
jl
inc
aam
mov
xor
jecxz
xlat
jnp
adc
movs
fwait
ins
sbb
ins
jmp
pop
loope
and
pusha
aad
mov
mov
retf
xor
dec
test
sbb
or
push
xchg
mov
popa
push
test
dec
out
jl
bound
jp
sbb
jno
jbe
cmp
mov
div
pop
mov
lds
ins
xchg
loope
mov
test
push
pop
xor
pop
jno
and
or
and
lock
mov
push
arpl
idiv
test
arpl
xchg
test
cli
fidivr
add
nop
stc
mov
js
or
sub
iret
stos
retf
jmp
shr
mov
jle
sub
sti
ins
mov
dec
jg
pusha
pop
pop
inc
loopne
shr
xor
jg
sti
test
sub
mov
pop
or
dec
outs
push
push
adc
out
aam
ja
and
mov
add
adc
mov
dec
mov
jne
in
pop
mov
(bad)
push
mov
rcl
aaa
jae
cmp
dec
lock
imul
xchg
stos
ins
mov
pushf
test
cli
mov
ror
in
dec
jnp
cmps
mov
leave
push
push
mov
cld
cwde
mov
adc
sub
or
call
lea
mov
pop
mov
dec
cld
out
push
(bad)
arpl
adc
sar
test
stos
inc
fldcw
and
sti
popf
ds
jmp
movs
inc
ja
push
popf
bnd
jl
and
mov
repnz
sub
add
cmp
shl
or
lock
add
fsubr
(bad)
mov
repnz
ror
into
lods
add
and
xchg
mov
loope
(bad)
mov
cdq
cmp
sbb
ja
or
jmp
and
add
xlat
retf
mov
ds
cwde
ss
sub
cmp
jecxz
adc
ins
add
sahf
xor
aam
arpl
xor
inc
loop
add
or
mov
or
pusha
cs
cmp
mov
dec
and
mov
jge
push
fmulp
(bad)
adc
mov
pop
push
sbb
fdiv
mov
ds
pushf
in
push
cmp
(bad)
std
push
add
(bad)
and
add
lahf
ins
daa
dec
mov
cmp
dec
out
jmp
push
mov
inc
jmp
push
mov
jae
call
mov
xchg
or
stos
je
(bad)
movs
out
pop
cmps
out
ret
cmp
shl
push
cmp
jmp
pop
out
fsubrp
mov
pop
jp
pop
push
fcom
fwait
div
sub
iret
jecxz
(bad)
into
enter
cmps
cmps
ror
stc
cmp
and
mov
cmp
xlat
sbb
add
stc
hlt
mov
test
xor
jle
out
test
pop
cmp
sub
div
fbld
inc
and
sub
call
xchg
jnp
repz
sub
mov
jmp
mov
xchg
sbb
xor
cmp
call
push
out
lock
test
xlat
push
pop
(bad)
hlt
sub
or
pop
mov
loopne
outs
or
lock
push
sbb
inc
mov
sub
out
adc
push
stc
push
test
fsub
and
push
cmc
push
hlt
les
inc
mov
xchg
sbb
xor
jno
mov
mov
sbb
data16
cwde
inc
sbb
repz
inc
pop
jmp
mov
cwde
call
add
jb
pop
add
bnd
shl
mov
cmp
test
jmp
mov
xor
mov
cmp
sti
sbb
push
(bad)
inc
iret
stos
je
cld
and
cs
enter
aad
dec
js
movs
jno
adc
mov
mov
int3
(bad)
sub
push
or
fld
jne
mov
bound
rcr
out
push
mov
cmp
call
out
jmp
jp
retf
cmps
mov
pop
jle
xor
(bad)
enter
xor
shr
pop
mov
cdq
shr
xlat
cmps
jle
in
push
fiadd
xor
adc
jnp
inc
scas
test
fldcw
pop
cmp
mov
cld
adc
push
mov
mov
mov
adc
call
shr
sub
(bad)
jno
mov
and
or
push
and
jmp
sub
cmp
cmp
rcr
fist
adc
hlt
ds
das
pushf
mov
clc
jb
push
dec
ja
pop
jo
xchg
(bad)
jbe
daa
xchg
mov
jle
mov
stos
gs
fstp
sub
dec
add
fcomp
sbb
cmp
int
jmp
das
jmp
mov
ss
sbb
or
sub
mov
test
add
inc
ds
dec
pusha
retf
and
mov
add
sub
dec
xchg
stos
pop
sbb
call
cmp
ins
dec
(bad)
icebp
neg
xlat
iret
shl
mov
push
cdq
jl
pushf
pop
xchg
das
data16
pop
jns
cmp
movs
int3
lea
dec
repnz
fidivr
xchg
inc
pop
out
mov
push
(bad)
push
jle
cmp
inc
jo
(bad)
mov
stc
and
div
inc
and
cmp
in
cli
jo
jnp
sbb
clc
test
daa
xchg
int3
out
and
mov
pop
movs
cmp
mov
pop
arpl
into
mul
dec
mov
pop
lds
xor
leave
leavew
stos
loope
movs
xchg
pop
add
ret
jo
pop
rol
fist
dec
jb
ins
rcr
jmp
mov
jg
fst
jp
pop
mov
(bad)
into
jle
(bad)
bound
mov
pushf
cmc
call
xchg
jo
ja
pop
push
inc
mov
sub
fdivr
iret
cli
mov
sbb
jg
imul
jb
ds
ins
ret
shr
mov
fbstp
in
xlat
push
inc
or
xor
test
push
in
pop
push
cmc
mov
mov
(bad)
out
mov
ret
retf
jmp
popf
mov
pop
test
lock
cmp
sbb
pop
add
sbb
xchg
pop
xchg
push
sub
inc
lods
into
pop
enter
adc
dec
in
cmps
in
cmp
xor
out
ror
add
dec
mov
and
xchg
push
ss
push
cmp
adc
push
jle
or
fisubr
inc
fidivr
pop
adc
icebp
mov
mov
dec
sbb
daa
out
mov
shl
ss
push
add
sub
test
pusha
pusha
ret
in
sub
lods
inc
dec
loopne
popa
inc
jo
jae
mov
cdq
mov
call
in
inc
inc
in
or
out
jmp
or
das
xor
and
(bad)
les
jl
mov
add
or
in
std
mov
loop
(bad)
sub
popf
mov
xchg
std
out
fsubp
inc
mov
xchg
lahf
jbe
ins
sub
jmp
out
sar
imul
add
imul
stos
push
bound
sub
push
mov
pop
ins
fstp
int3
es
mov
push
jne
sbb
and
and
sub
push
ins
out
xchg
(bad)
hlt
jbe
xchg
push
lock
(bad)
arpl
dec
fld
jecxz
les
inc
mov
jno
out
xchg
xchg
adc
dec
test
and
shr
stos
mov
int3
bound
daa
retf
add
sub
fdivr
inc
push
addr16
adc
js
pop
adc
xor
aad
mov
and
lea
cmp
push
or
sub
stc
dec
jmp
out
ror
xor
(bad)
cmp
shl
dec
sar
sbb
jge
mov
movs
lods
aad
lahf
mov
and
cmp
mov
dec
movs
jg
jmp
sahf
and
nop
and
mov
dec
or
xor
sbb
mov
jge
ret
ja
xor
sti
jl
inc
icebp
(bad)
test
sahf
jo
movs
addr16
xchg
mov
out
sbb
cmps
and
sbb
or
xchg
shr
xchg
cmps
xor
fadd
mov
inc
(bad)
stos
loope
aam
loop
cli
retf
loope
sbb
popa
stc
fs
out
pop
sbb
leave
dec
dec
clc
xchg
jns
retf
mov
lock
jb
dec
jno
jb
(bad)
std
sbb
jle
shl
mov
pop
adc
loope
jmp
sbb
not
inc
adc
mov
mov
sti
sbb
(bad)
mov
daa
cli
pushf
xlat
mov
mov
dec
cmp
pop
jecxz
nop
sub
adc
pop
jp
inc
sub
xor
dec
push
sbb
std
and
sub
xchg
icebp
scas
(bad)
inc
lock
daa
rcr
mov
pop
aam
mov
into
xor
hlt
xor
shr
(bad)
js
jmp
sbb
mov
addr16
retf
aad
loopne
push
add
pop
cmp
sbb
stos
mov
inc
lods
dec
leave
lods
sbb
pop
movs
inc
jb
aad
mov
call
jne
add
movs
out
mov
div
retf
sbb
dec
jg
sbb
xchg
ins
fcomp
xor
rol
or
push
mov
nop
jle
push
add
mov
in
mov
stc
neg
mov
jg
jmp
ret
enter
not
shr
mov
movs
sbb
arpl
adc
(bad)
adc
nop
cmps
push
or
dec
scas
push
sbb
cmc
mov
adc
stos
mov
mov
sbb
out
loop
sbb
out
test
xchg
push
push
loopne
jb
and
xchg
popa
(bad)
popa
imul
or
sub
xchg
xchg
inc
aad
xchg
pop
push
mov
adc
mov
out
inc
inc
test
add
xlat
scas
les
sub
lea
pop
add
cmp
xchg
(bad)
jb
push
adc
popf
retf
add
popa
test
push
loop
(bad)
xchg
push
pop
fild
mov
(bad)
xchg
rcr
dec
dec
bound
mov
xchg
mov
cli
push
aam
xor
lea
adc
mov
fmul
cli
mov
dec
dec
push
inc
sbb
pop
xchg
cmp
lods
rol
jl
ret
call
test
dec
jno
dec
sbb
loopne
cmpps
loop
out
cli
cmp
(bad)
push
mov
fbld
arpl
sub
loop
jb
mov
(bad)
xor
stos
shl
sub
mov
or
mov
stc
sub
sub
clc
mov
cs
inc
fbstp
stos
lock
jbe
in
cmps
mov
dec
pusha
scas
shl
jmp
mov
jbe
xchg
in
and
test
mov
enter
dec
push
test
cmp
lods
outs
xchg
mov
addr16
lea
(bad)
repz
mov
push
adc
xor
mov
ins
jb
int3
movs
out
cmps
pop
(bad)
fnstcw
rcr
dec
das
cmp
jecxz
out
pop
adc
inc
out
int3
sub
aaa
mov
xchg
outs
in
mov
or
lods
push
lahf
push
cmps
sbb
aaa
mov
jb
lods
and
fincstp
mov
jle
push
jle
inc
adc
mov
xor
pusha
inc
ins
jae
cmps
pop
(bad)
pop
jmp
push
inc
les
add
cmp
add
fwait
gs
dec
or
xlat
leave
jb
inc
jmp
mov
cmps
loope
push
data16
fwait
hlt
mov
sub
mov
leave
pop
xchg
push
repz
lods
xchg
sbb
dec
loop
add
daa
push
or
sti
dec
int3
xor
ret
dec
ror
pop
or
imul
or
cwde
outs
mov
mov
in
cmc
adc
rol
jbe
push
fucomip
out
xchg
pushf
(bad)
cmp
iret
sbb
pop
rcl
cmc
and
jl
sbb
jle
jle
pop
in
inc
std
sub
fimul
push
pop
sbb
call
pop
stos
adc
mov
mov
(bad)
and
pop
mov
sahf
xchg
mov
sbb
sar
rcl
cmp
lods
or
arpl
push
sbb
shl
pop
cmp
adc
push
cdq
add
cmp
neg
mov
cmp
retf
imul
leave
test
and
sub
and
inc
loope
mov
sbb
popa
pop
inc
fadd
data16
pusha
fadd
xchg
push
xor
pop
mov
(bad)
enter
jle
pop
(bad)
in
and
inc
hlt
inc
inc
xlat
and
or
xchg
mov
mov
inc
xor
pushf
and
mov
ss
cdq
fwait
hlt
mov
dec
out
push
js
sub
ss
sbb
aaa
cwde
repnz
and
pop
mov
mov
push
and
mov
shl
jmp
movs
loop
dec
mov
mov
repz
lds
push
inc
mov
jle
xchg
adc
lahf
inc
ins
mov
pop
jg
icebp
mov
pusha
mov
sub
ins
call
dec
dec
mov
sub
pop
add
not
enter
fxch
aam
movs
cld
fs
ins
inc
jno
scas
aam
mov
pop
mov
and
aam
pop
fdivr
std
cmps
out
loope
push
and
lahf
xor
mul
in
push
dec
mov
dec
sub
cmp
sbb
sar
jp
in
cmp
and
push
add
daa
jmp
inc
jo
xchg
or
add
stc
or
in
dec
cmp
stos
cld
mov
xchg
jecxz
push
lds
fild
mov
sub
ds
jmp
(bad)
fisttp
cmp
jmp
daa
mov
sub
je
push
int
sbb
sar
jne
xchg
cdq
pop
jg
fcom
jb
outs
or
and
stos
das
out
stos
or
pop
outs
and
xchg
ins
add
xor
in
pop
cs
sub
into
(bad)
cdq
or
(bad)
jle
(bad)
mov
jbe
daa
jne
pop
icebp
mov
inc
call
pop
mov
jne
jbe
xchg
jge
mov
shl
movs
jnp
or
out
les
fcom
outs
dec
les
mov
inc
in
mov
adc
mov
ret
std
into
xchg
call
ja
lock
repnz
pushf
push
addr16
(bad)
ins
sub
fbld
and
add
mov
jp
cmp
in
jnp
and
mov
cmp
xor
dec
fst
xchg
mov
adc
mov
and
scas
mov
fmul
jge
jb
adc
daa
cmc
jbe
bound
jbe
jecxz
pop
mov
fcmovne
lahf
add
clc
pop
dec
repz
mov
(bad)
cmp
jae
lods
aaa
ret
jle
sbb
push
and
mov
and
rcr
cmovle
dec
das
cdq
or
or
push
out
jge
les
mov
sbb
pop
jmp
mov
mov
int3
adc
fstp
or
int3
lods
dec
cld
cmp
imul
mov
xor
xchg
or
cmp
(bad)
aam
mov
xor
push
(bad)
jmp
pop
dec
loop
rcl
push
movs
mov
jle
test
test
cmp
cmp
push
outs
lahf
or
ins
cs
(bad)
lods
dec
stos
fs
mov
push
loop
mov
cdq
loop
or
stos
ss
pop
dec
ins
xstore-rng
cmps
adc
xchg
enter
movs
jp
aaa
cld
cdq
into
dec
add
jl
ret
addr16
int3
mov
mov
imul
stos
sub
addr16
dec
imul
fsubr
or
pop
(bad)
xor
mov
mov
adc
mov
cdq
test
jbe
adc
mov
clc
mov
je
imul
ret
mov
inc
and
mov
pop
ins
sti
and
xchg
push
cmp
mov
jne
sbb
sub
xchg
cdq
cwde
jl
test
push
imul
push
mov
in
ja
sbb
push
or
(bad)
xchg
and
lock
mov
and
mov
enter
(bad)
push
pop
xor
fwait
pushf
retf
xor
shr
imul
mov
jp
jl
pxor
ror
(bad)
xchg
cld
jp
fimul
ficomp
daa
or
mov
push
add
adc
fnstsw
lds
inc
call
and
imul
(bad)
retf
xchg
or
dec
jp
jne
out
push
jle
jl
sub
scas
mov
rol
sbb
(bad)
ficom
or
mov
shr
scas
mov
sbb
add
pop
cmp
pop
not
cld
push
jp
cmc
dec
mov
mov
fdiv
test
leave
fimul
scas
fnstcw
mov
fisub
mov
out
mov
sub
or
mov
out
jbe
adc
push
sbb
jg
loope
in
mov
jle
mov
inc
fisubr
sahf
jmp
cmp
jo
leave
stos
pop
mov
xchg
mov
jg
loop
push
fistp
cmp
aas
mov
ins
xchg
mov
lods
mov
cld
js
and
add
and
xor
test
jl
and
rcl
pop
arpl
sbb
inc
jmp
das
add
aam
daa
and
mov
aas
repnz
fwait
test
adc
pop
and
cmp
jae
popa
stos
std
shr
fs
movs
inc
repz
dec
pusha
mov
loop
fbstp
dec
sbb
xor
in
push
repnz
xchg
pop
(bad)
stc
lahf
lock
test
pop
and
push
hlt
adc
cmps
pcmpeqw
adc
dec
stc
push
(bad)
out
mul
popa
dec
cmc
mov
add
sbb
aam
scas
ss
dec
in
nop
dec
loopne
xor
xor
and
and
loope
and
bound
data16
xor
inc
mov
adc
call
test
fcomp
mov
dec
xor
mov
iret
int
cmp
sub
gs
movs
mov
aaa
out
push
lea
cmps
mov
int3
cmp
pop
pop
xchg
ret
cmp
fld
jno
stos
mov
xchg
pop
pop
std
scas
in
out
xchg
clc
push
push
enter
mov
std
or
mov
mov
xchg
inc
inc
sahf
sti
cwde
ins
test
jge
pop
inc
sbb
out
or
adc
ror
loopne
xor
ror
ret
mov
mov
inc
pop
adc
cmps
les
jge
cmps
sbb
mov
xor
sub
mov
xchg
xor
jmp
ins
jmp
in
pop
and
(bad)
shl
xchg
or
inc
sbb
jecxz
retf
imul
loopne
jl
or
xchg
pushf
(bad)
fld
or
mov
pop
fwait
mov
je
pop
sahf
lods
jb
retf
fldenv
mov
cmps
push
and
movs
dec
retf
pop
sub
aam
dec
jge
aaa
jae
ret
jns
call
(bad)
retf
pusha
cmps
push
pop
stos
inc
shr
ret
xchg
push
fwait
inc
mov
dec
mov
and
or
daa
inc
jecxz
bound
rol
jl
adc
frndint
push
in
sahf
xor
out
sub
adc
loopne
sub
popa
(bad)
int
stc
xor
cmps
nop
dec
outs
(bad)
ror
push
fs
and
jge
adc
das
test
ret
add
xor
imul
out
(bad)
aam
adc
ja
push
mov
mov
inc
push
cmp
xchg
(bad)
xchg
enter
(bad)
ins
xchg
fst
sbb
xor
or
push
inc
out
rcr
out
inc
fwait
es
pop
mov
ror
jmp
mov
clc
ja
ds
pusha
out
push
ss
icebp
jo
cmp
pop
es
sbb
xor
test
mov
mov
inc
test
add
cld
mov
ins
sbb
clc
shl
shl
js
push
call
push
and
jmp
repz
push
mov
lods
or
sub
adc
pop
cwde
push
jo
sbb
add
xor
je
out
xor
sti
add
jnp
(bad)
call
jmp
fbld
in
shl
movs
fxam
addr16
pusha
(bad)
mov
jle
shl
push
xor
(bad)
jmp
inc
test
daa
mov
fsub
call
lods
ror
xor
fild
fistp
fxch
pop
inc
xchg
rol
pushf
in
cmps
sbb
mov
push
jo
mov
pusha
mov
retf
ss
pusha
daa
shr
fcomip
sbb
mov
xchg
dec
icebp
adc
call
popa
call
das
cmps
fiadd
and
or
loopne
sub
jl
sub
sahf
sub
mov
mov
push
inc
cmp
xchg
addr16
movs
inc
outs
imul
cmps
mul
test
cmp
aas
aad
sub
test
jns
pop
mov
pop
xchg
std
sub
das
pop
sar
loop
test
adc
aas
fdivr
sbb
stos
ret
push
pop
call
dec
pop
sub
es
outs
mov
addr16
jge
cld
mov
push
into
cwde
sbb
hlt
mul
mov
push
test
xor
mov
xchg
jge
shl
(bad)
data16
lock
cmp
(bad)
dec
dec
in
sbb
outs
sbb
add
rol
movs
das
push
in
push
and
mov
add
aam
cdq
addr16
lods
fs
lds
add
jmp
jne
inc
mov
rcl
icebp
ja
bound
out
lahf
sbb
pop
jecxz
nop
mov
push
and
imul
cmc
mov
(bad)
mov
dec
mov
icebp
xor
ja
jle
pop
dec
shl
push
sbb
movs
movlhps
inc
bound
out
neg
repz
(bad)
mov
jmp
stos
in
sbb
in
out
jmp
arpl
je
daa
and
in
xor
inc
push
adc
sar
mov
mov
(bad)
cmc
(bad)
lahf
mov
pop
ins
and
les
push
pushf
jg
or
mov
jne
xchg
cmp
or
push
cmp
cmp
dec
mov
add
mov
or
(bad)
dec
fstp
cdq
call
in
out
cwde
sub
push
outs
xor
les
sub
mov
mov
inc
and
cld
fsubr
xor
es
mov
retf
shl
push
jnp
mov
push
jecxz
ror
ins
mov
xchg
mov
cmp
out
lds
call
aas
fnstsw
push
das
mov
loopne
pop
ins
and
enter
hlt
imul
jmp
fnstcw
cdq
aaa
fcom
cmps
add
xchg
cwde
and
aas
ins
jae
dec
cs
mov
inc
mov
add
loopne
test
je
in
jmp
shl
movs
adc
add
lahf
sti
jns
test
xchg
rcr
add
aaa
cmps
mov
jno
pop
xchg
test
rol
mov
xchg
leave
call
(bad)
mov
sub
cmps
sub
adc
mov
mov
push
pop
xchg
in
cli
xchg
shl
push
(bad)
add
loope
cwde
lds
(bad)
and
jno
pop
shr
mov
pusha
pop
scas
pop
or
jmp
jbe
xor
jae
sahf
add
and
(bad)
(bad)
inc
xor
loop
sbb
mov
xchg
in
dec
sbb
cmp
mov
dec
cli
cmp
(bad)
mov
add
(bad)
mov
jl
stc
xchg
fiadd
sbb
or
jle
mov
fidivr
lods
mov
jbe
mov
mov
inc
pop
or
push
stos
xlat
test
push
jb
sub
xor
out
xor
mov
sar
sub
scas
add
xor
icebp
xchg
adc
out
cmp
mov
and
push
xchg
push
xor
and
inc
(bad)
xchg
dec
cdq
clc
pop
aad
test
jmp
fld
add
fisttp
add
jecxz
mov
sbb
loopne
movs
icebp
mov
push
mov
or
dec
outs
mov
call
cdq
cmp
adc
push
xor
adc
inc
push
lahf
aas
or
cli
call
jne
rcl
mov
sbb
xchg
xor
xchg
ja
jno
in
push
mov
jo
cmp
rol
ja
ret
call
loop
loop
mov
inc
or
aas
mov
out
and
out
in
jne
adc
xchg
test
add
push
das
cld
cs
cld
xchg
clc
cmp
retf
push
mov
mov
jne
mov
cmp
mov
ins
shr
shr
cmp
lea
cdq
stos
mov
xor
repnz
dec
das
pop
aaa
cmp
outs
jae
hlt
je
sub
adc
sbb
inc
dec
mov
dec
or
xor
and
sub
mov
and
imul
push
xor
(bad)
aas
and
cmp
(bad)
xchg
and
cmp
adc
dec
pop
push
clc
stc
cmp
sar
(bad)
xor
mov
pop
sub
ror
sbb
sub
cmps
inc
cmp
xchg
ficom
dec
test
jecxz
in
int3
mov
dec
retf
imul
jp
xor
out
ins
pop
shl
cmp
and
adc
mov
cmc
pop
fs
shl
mov
xor
xchg
push
xchg
cmps
sti
lea
add
push
mov
test
(bad)
lock
sbb
inc
jmp
xchg
je
ins
dec
movs
mov
aad
ret
xor
push
xor
pop
retf
adc
push
lock
dec
retf
sahf
push
cmp
jmp
inc
seto
add
fst
pushf
jecxz
add
inc
push
retf
push
xchg
xchg
or
(bad)
sub
ja
sbb
mov
inc
fs
cli
inc
aad
pop
std
push
dec
lds
stos
dec
push
dec
out
call
lahf
and
inc
adc
add
xchg
push
mov
jns
ja
or
jo
icebp
mov
popf
dec
jge
jle
sbb
outs
cli
sub
repz
sti
jl
(bad)
and
xor
dec
mov
push
(bad)
das
popf
repnz
addr16
or
lods
push
cs
loopne
cli
add
mov
out
mov
or
push
inc
cmps
push
(bad)
jne
xchg
outs
pop
xor
fs
or
cmc
and
jle
sti
ror
int3
mov
and
dec
pop
outs
jmp
push
cmp
mov
pop
pop
lods
arpl
xor
push
popf
fiadd
xor
lods
sub
ja
nop
adc
xchg
ds
test
adc
jno
and
xchg
dec
shl
shl
push
mov
test
dec
imul
test
pop
inc
fsubr
sub
stos
(bad)
addr16
xor
popa
rcl
sbb
rcr
inc
xchg
loopne
int3
gs
call
call
cmp
jbe
push
jnp
fmul
jae
push
dec
mov
add
cdq
push
mov
movs
pcmpgtb
movs
mov
daa
push
sub
cld
xor
outs
(bad)
lock
adc
xor
mov
movs
fwait
jo
mov
aaa
sub
dec
mov
sbb
inc
ins
lea
ja
jns
mov
paddw
adc
in
inc
sub
imul
mov
and
cmp
outs
inc
pop
mov
jmp
adc
pop
pop
jo
xor
xor
data16
cmp
jmp
mov
sahf
jb
sbb
leave
cmp
xor
mov
nop
or
lea
xor
int3
xchg
jnp
jmp
leave
add
rcr
push
adc
mov
mov
mov
and
in
xchg
stc
lahf
sub
mov
sbb
stos
loop
test
rol
sub
imul
fimul
sub
sbb
fwait
ja
pop
jbe
daa
xchg
mov
sub
cmp
jno
cmp
push
pop
fld
or
clc
shl
ja
mov
cwde
(bad)
or
stos
inc
dec
dec
push
cmp
or
adc
sahf
mov
dec
push
mov
bound
jle
adc
test
test
pop
cld
popf
dec
mov
pop
fwait
dec
repz
stos
and
int3
and
cmps
pushf
aad
jno
cmps
cmp
jl
fisub
(bad)
out
nop
cmp
dec
aad
cdq
das
lods
xchg
fsubr
jnp
mov
call
fild
mov
xor
inc
(bad)
pop
aaa
ja
repnz
mov
mul
inc
inc
add
sar
mov
ror
push
push
fcom
jo
dec
ins
mov
cmp
cmp
imul
loopne
(bad)
mov
push
add
push
xor
icebp
pop
mov
out
add
xchg
(bad)
mov
add
(bad)
fidivr
mov
enter
adc
aas
pushf
pop
add
mov
es
stos
cli
push
movs
mov
cmps
pop
ins
das
in
imul
mov
push
adc
cdq
mov
jmp
mov
or
xor
nop
mov
dec
push
popa
jg
out
and
hlt
int
(bad)
dec
and
xchg
ds
mov
call
mov
movs
fcomp
ins
hlt
test
sbb
and
lea
adc
jnp
clc
sub
mov
int3
dec
(bad)
push
in
and
out
dec
jne
mov
ror
xchg
mov
rcr
out
jge
jge
jns
mov
and
les
cli
xchg
xchg
test
cmps
in
xchg
inc
push
jno
outs
cdq
pop
or
pop
push
or
xor
mov
stos
cmp
jp
mov
adc
jle
push
(bad)
sub
sub
icebp
sahf
call
ret
ins
(bad)
idiv
das
ins
mov
inc
icebp
(bad)
or
pushw
jb
loop
(bad)
add
pop
ret
mov
xor
jno
add
dec
mov
adc
js
(bad)
inc
cmc
sub
shl
add
mov
dec
add
mov
dec
fdivr
sub
test
retf
cmp
push
(bad)
jne
outs
jno
and
or
xor
in
push
and
popf
sbb
fstp
add
dec
jmp
arpl
sbb
pop
mov
jnp
add
mov
fisubr
ins
dec
(bad)
xchg
aam
aas
push
dec
mov
adc
enter
jp
js
inc
shl
or
mov
dec
lds
fcomp
lds
shr
push
cmps
add
shl
shr
xor
xchg
pop
inc
xlat
test
mov
and
clc
stos
xor
dec
lahf
jle
sub
shr
adc
out
push
fldcw
xchg
(bad)
sbb
idiv
xor
push
(bad)
in
loope
je
loop
jecxz
mov
inc
aaa
cmp
retf
dec
sahf
dec
stc
push
div
test
push
mov
jo
xor
(bad)
jg
loop
sub
jmp
xor
jno
cmps
xor
test
stos
hlt
test
sti
mov
or
add
xchg
push
out
inc
and
sub
hlt
xchg
push
sub
les
lahf
sbb
add
adc
push
test
mov
aaa
mov
pop
cld
and
jo
cmp
mov
icebp
in
xchg
jne
jno
bound
das
ret
and
clc
scas
lock
out
dec
mov
cmp
mov
adc
call
(bad)
fist
(bad)
je
stos
pop
nop
leave
call
retf
lea
add
xor
xchg
push
into
jmp
dec
pop
cmp
dec
mov
pop
mov
xor
xor
push
pop
ss
hlt
cmp
cld
sub
cmps
stos
jb
xchg
leave
inc
mov
pop
ret
xor
(bad)
xchg
dec
sub
shl
inc
mov
jle
arpl
repz
inc
or
mov
cmp
push
jle
xchg
mov
pop
push
fadd
mul
add
xchg
sbb
sub
cmp
jo
push
jo
or
mov
pop
gs
cmp
pop
push
dec
pmaxsw
mov
or
mov
or
pusha
and
jnp
(bad)
jecxz
push
jecxz
icebp
shufps
fmul
jl
test
out
sbb
lods
loope
(bad)
lds
sub
push
xchg
xchg
adc
inc
xchg
movs
sub
movs
fwait
out
shl
mov
sahf
pop
pusha
fdivr
ror
fwait
xchg
enter
test
mov
(bad)
inc
xor
rcr
jnp
ja
call
mov
outs
inc
pop
xchg
dec
push
xchg
add
pop
or
push
out
or
lods
cs
mov
pusha
pop
lea
or
test
push
jno
inc
xor
adc
(bad)
sbb
xor
movs
and
dec
lods
jno
xchg
in
rcr
pop
cwde
jmp
neg
mov
nop
sub
gs
test
or
adc
pop
xchg
fs
aad
rcl
into
es
div
push
pop
add
sbb
sahf
scas
test
mov
xchg
xor
adc
cdq
dec
daa
push
das
fsubr
fwait
outs
lods
jmp
in
jne
jg
cmp
das
iret
(bad)
push
jae
mov
int3
in
rcl
push
or
jg
dec
call
(bad)
int
loope
out
cmp
fimul
xor
push
push
sbb
sbb
push
mov
cmp
sub
nop
popf
sub
xor
dec
les
pushf
sub
jl
iret
adc
ins
xchg
mov
adc
pop
or
fcomp
push
adc
idiv
jbe
movs
sar
sahf
cs
inc
add
clc
arpl
lods
daa
mov
cmp
pop
xchg
mov
repnz
cld
push
jecxz
mov
fdivr
sbb
call
aam
mov
xchg
lods
inc
in
adc
sub
sub
xchg
pop
in
lahf
xchg
cdq
scas
cmp
ins
pop
ret
imul
mov
xchg
rcr
xchg
aaa
imul
sbb
fisubr
push
es
pop
push
inc
fwait
int3
mov
pushf
add
mov
xor
inc
(bad)
lock
imul
xchg
cmps
int3
mov
(bad)
(bad)
in
stc
dec
shl
pop
sbb
pop
mov
mov
xchg
call
cmp
jbe
jo
cwde
jb
stos
or
repz
jmp
dec
or
fbld
add
enter
push
mov
and
lock
(bad)
mov
not
in
mov
(bad)
pop
stc
int3
ds
mov
cld
push
and
mov
push
pop
pop
inc
(bad)
pop
fimul
adc
cwde
movs
dec
pusha
mov
mov
or
push
jge
inc
push
out
fdiv
(bad)
sbb
cmp
out
push
(bad)
int
pop
imul
or
xor
cmp
jge
repnz
mov
btr
in
retf
jl
pusha
stc
pop
loopne
lea
add
mov
ins
clc
lock
xchg
jns
(bad)
pushf
pusha
js
(bad)
cmp
pop
and
cmps
and
clc
mov
popa
pop
jae
aas
call
repnz
outs
cmp
mov
data16
retf
fdivr
push
sbb
mov
lock
dec
in
push
push
popf
pop
push
repz
jbe
mov
jne
gs
jbe
sbb
icebp
(bad)
dec
repz
push
retf
call
inc
cmp
iret
(bad)
sub
xor
xchg
jns
dec
imul
imul
dec
loopne
adc
jecxz
outs
loope
fbstp
or
jmp
hlt
cdq
mov
fcomp
xchg
aad
(bad)
aaa
cdq
pop
dec
cmp
cdq
mov
(bad)
lahf
jecxz
add
ss
xor
adc
dec
inc
pop
stc
jne
pusha
loopne
mov
or
xor
push
clc
mov
cli
fadd
mov
(bad)
iret
addr16
xchg
fild
enter
add
repnz
pop
shr
aas
adc
push
fdiv
cmp
movups
in
pop
mov
pop
dec
ja
push
aaa
adc
jmp
or
pop
fs
adc
jne
mov
aad
and
push
pop
cmp
cmc
xor
pop
lds
clc
sbb
data16
push
mov
cmp
xor
ror
into
pop
test
pop
add
fistp
sahf
rol
(bad)
in
dec
gs
repnz
jge
neg
add
js
mov
inc
int
lahf
int3
dec
jge
pop
imul
shl
das
sahf
les
and
stos
faddp
inc
or
loope
in
cli
nop
dec
pop
je
jb
mov
xlat
fdivr
mov
cmp
xor
das
sbb
bound
inc
or
in
imul
xchg
pusha
cwde
cmp
pop
jae
add
inc
sbb
dec
push
inc
ror
push
nop
jmp
(bad)
jp
ror
inc
mov
int
sub
push
mov
jns
push
nop
aaa
sub
xor
inc
daa
pop
in
add
jnp
ret
push
push
mov
sbb
inc
mov
les
out
jmp
cld
inc
jnp
jbe
jl
cmp
out
xchg
test
mov
cli
sbb
lock
mov
xor
je
mov
or
pop
retf
sub
pop
xor
daa
shl
mov
fcmovne
jle
mov
mov
jmp
and
dec
cmp
add
nop
inc
leave
xchg
fninit
retf
sbb
adc
hlt
jge
in
adc
js
data16
sbb
inc
fisubr
movs
push
retf
lods
bnd
push
sbb
push
dec
mov
mov
xchg
mov
sub
ret
adc
sub
and
jns
mov
xchg
es
aam
xor
xor
lfs
and
outs
mov
jge
test
das
lods
outs
cli
cmc
cld
cmp
lds
pusha
into
dec
(bad)
jb
lods
xchg
je
lds
xchg
mov
retf
and
push
retf
mov
sbb
and
push
ret
mov
pop
sbb
push
popf
xchg
mov
aam
sub
dec
sub
sbb
in
adc
daa
sbb
mov
(bad)
aas
cli
sub
rcl
cmp
adc
cmp
dec
in
fsubr
fistp
add
fs
out
or
sbb
or
out
(bad)
aas
lds
loop
lods
test
cmp
xor
dec
cmp
clc
sbb
xchg
add
mov
and
out
retf
test
lods
jmp
mov
adc
push
test
add
mov
leave
dec
loop
or
mov
es
ins
cdq
retf
int3
out
jo
lahf
xchg
xchg
mov
int
cmc
icebp
inc
mov
sar
xchg
mov
mov
sbb
(bad)
mov
push
mov
iret
int
xchg
stos
inc
aaa
mov
rcl
shr
dec
pop
jne
xchg
leave
pop
jge
(bad)
lods
hlt
mov
push
fisttp
push
std
jecxz
movs
ret
mov
sbb
movs
jmp
pop
in
aad
mov
pop
pusha
test
out
push
iret
dec
lock
aas
enter
and
sahf
mov
fs
or
push
arpl
add
(bad)
mov
xchg
out
jmp
inc
pop
les
nop
mov
pop
jns
lods
mov
aad
shl
mov
mov
aad
mov
icebp
xchg
mov
pop
sub
out
or
mov
pop
pop
cmps
loope
sbb
dec
jo
adc
cmp
pusha
cli
in
jge
cmp
int
adc
mov
cmps
inc
xchg
or
pusha
int3
aas
jmp
popa
xor
clc
add
dec
pop
or
pop
repnz
sub
clc
jg
mov
mov
xor
jecxz
fdiv
imul
lahf
test
cmp
mov
mov
mov
or
das
cmp
adc
mov
push
retf
dec
cli
mov
je
movs
mov
jno
mov
and
jl
cmp
push
int3
adc
add
cmp
push
dec
push
dec
inc
and
js
ret
cmp
rcr
mov
and
cs
xchg
sub
call
aas
sub
lock
xchg
outs
ror
idiv
adc
rcl
inc
xchg
mov
sub
jns
mov
cmp
pusha
popa
cmc
mov
mov
loop
push
rcr
hlt
scas
dec
mov
sub
add
push
bound
xchg
dec
popf
hlt
aam
mov
mov
test
es
shl
(bad)
cmc
int
pop
cli
jne
lahf
mov
jge
cld
jmp
jmp
pop
sub
bound
mov
pop
add
xchg
add
repnz
int3
or
into
shr
jle
lahf
mov
mov
mov
dec
retf
mov
ret
shr
jo
stc
dec
add
dec
xor
jl
outs
test
cdq
bound
outs
movs
sbb
test
jno
cdq
das
mov
push
out
adc
or
cmc
clc
sbb
inc
xchg
popa
leave
js
cmp
in
outs
mov
mov
mov
push
jge
push
repnz
shl
mov
push
cmc
add
push
push
jns
lods
rcr
push
(bad)
sbb
dec
imul
bound
jno
mov
nop
in
scas
nop
adc
sbb
repz
inc
and
pop
xor
movs
xor
pushf
and
stos
xchg
push
movnti
add
mov
jecxz
shl
cmc
clc
shl
(bad)
outs
add
pop
test
mov
test
leave
js
popa
scas
pop
or
out
cmp
aam
mov
xchg
fldenv
mov
movs
retf
in
dec
jns
sub
fcmovnu
ret
mov
adc
pop
cmp
(bad)
jle
sbb
fwait
mov
xor
jle
adc
or
les
cmps
push
lods
or
add
fnstenv
fbstp
out
sbb
repnz
adc
test
xor
add
jge
stos
imul
repnz
pop
scas
int
xchg
mov
call
outs
addr16
jne
pop
xor
cmp
dec
mov
repnz
popf
ret
mov
out
jg
fwait
push
sbb
sub
cwde
mov
cli
sahf
add
mov
sub
sub
mov
push
in
dec
xor
sub
rol
cdq
out
or
xor
pop
clc
inc
push
loope
dec
ds
and
repnz
adc
popf
push
inc
mov
shr
push
retfw
dec
adc
cmp
mul
pop
sub
xchg
test
xchg
jp
and
dec
outs
fmul
sbb
int3
cs
dec
mov
fcomp
mov
or
and
cld
add
sub
fistp
ds
adc
and
cdq
mov
mov
call
popa
xor
test
outs
push
lods
lds
sub
cmp
xchg
mov
add
pushf
push
or
(bad)
in
adc
mov
ins
stc
sti
mov
xor
inc
push
call
stc
add
aas
sub
inc
or
and
mov
inc
rcr
(bad)
xlat
cmps
and
cdq
mov
fist
mov
jno
xchg
stos
xor
adc
in
mov
jge
jnp
cmp
sahf
add
test
icebp
jge
mov
clc
and
ret
mov
in
ins
movsx
inc
arpl
cmp
arpl
pushf
outs
outs
repnz
sbb
jb
aaa
mov
cmps
nop
adc
test
dec
mov
and
sub
(bad)
fldln2
mov
xchg
pop
test
push
stos
jbe
ror
jae
stc
cdq
inc
and
mov
mov
fwait
inc
fild
popf
popa
add
imul
sbb
cmp
and
and
ins
push
fdivrp
pop
stos
inc
push
sub
pop
fiadd
mov
or
and
jg
jno
jmp
stc
inc
push
push
popa
jmp
mov
enter
jb
retf
in
das
inc
into
xchg
ret
mov
sbb
mov
pusha
ds
ffreep
and
fsub
test
das
gs
cmp
(bad)
fldenv
scas
retf
addr16
cmps
add
dec
(bad)
(bad)
out
nop
aas
xchg
cmps
mov
mov
adc
lahf
mov
mov
stos
int
(bad)
or
xchg
mov
rol
pop
inc
retf
bound
out
push
or
sbb
xor
movs
adc
push
sbb
mov
(bad)
mov
mov
outs
(bad)
push
pop
das
ins
aam
call
cmp
dec
mov
xor
bound
repz
jp
xchg
pop
xchg
dec
ins
mov
int
(bad)
call
sbb
repnz
in
cmp
cwde
int
retf
fsubr
jmp
in
jg
push
cmp
jae
push
loope
push
(bad)
and
sub
inc
sub
pop
xchg
inc
push
sub
je
aam
dec
push
sbb
loop
(bad)
aam
pop
push
sbb
push
push
aad
push
sbb
xor
mov
pop
test
imul
ja
jg
adc
mov
nop
dec
js
cli
xchg
stos
pop
gs
nop
and
ds
nop
(bad)
div
in
or
push
push
shl
and
cmp
sub
cwd
cdq
ins
(bad)
cmps
movs
cmc
ins
mov
div
jp
jl
cmp
mov
pop
dec
xchg
add
fdivr
dec
adc
sbb
ins
dec
loopne
sbb
(bad)
xlat
ror
call
retf
dec
jge
and
(bad)
and
das
cmps
ret
pop
push
aaa
cmps
mov
into
loop
xchg
repz
mov
sahf
addr16
cmp
cmp
rol
xor
cs
pop
cmp
cld
(bad)
dec
icebp
or
xchg
xor
stc
xchg
add
pop
stos
jns
jecxz
cmp
pop
in
inc
xor
fld
push
or
scas
xlat
jg
loope
adc
and
out
cmps
aaa
or
repnz
and
popa
sbb
jl
jl
loop
pop
call
cld
jo
sbb
adc
call
popa
or
push
lahf
(bad)
cld
lds
das
cdq
sub
mov
mov
sbb
inc
jns
and
xor
jg
clc
ror
iret
ror
ja
jns
stc
dec
gs
rcl
jbe
or
js
or
or
into
xchg
outs
or
xlat
ret
dec
lahf
cmp
jae
add
cmp
(bad)
xor
inc
inc
out
sbb
ds
imul
inc
fisttp
popa
int
xchg
int
test
lock
in
add
sar
mov
sbb
hlt
outs
ins
push
mov
jmp
inc
(bad)
fadd
in
mov
dec
fmul
jmp
ins
shr
movs
stos
jg
(bad)
cmp
sahf
leave
mov
popf
sub
sub
mov
mov
sti
jmp
xchg
cmp
mov
xor
pusha
hlt
jge
std
dec
call
or
aas
mov
daa
mov
or
push
or
mov
ret
adc
movs
jns
das
xlat
lods
js
gs
push
popf
jmp
jae
xchg
push
rol
in
shr
mov
jnp
es
ins
sbb
mov
pop
jmp
adc
push
fldenv
and
push
ins
add
adc
ret
jne
xlat
fdiv
mov
push
push
xchg
jge
or
dec
push
lahf
call
or
sahf
jle
imul
inc
or
popf
and
jge
sbb
retf
loopne
mov
int
adc
and
loopne
adc
cmp
outs
dec
cmp
ds
sub
cs
icebp
mov
and
stc
and
outs
(bad)
das
scas
mov
leave
push
je
jge
test
mov
test
gs
xchg
add
dec
push
aam
jae
ret
shl
loop
mov
inc
js
dec
add
xchg
ins
sbb
lea
sbb
cld
ins
imul
fmul
jge
scas
js
ins
lock
ins
dec
dec
mov
and
inc
xchg
iret
inc
dec
cmp
inc
lods
add
pop
jp
mov
aam
dec
(bad)
aam
mov
imul
loop
mov
inc
push
mov
inc
and
loope
dec
pop
rep
pop
in
and
int
leave
jmp
xchg
jge
jecxz
dec
imul
mov
add
ins
out
jg
xchg
shl
inc
push
pusha
sbb
rcr
mov
loope
add
push
cmp
and
sbb
ins
xchg
or
sub
test
or
sahf
popa
xchg
fwait
cdq
lods
sub
ds
sti
sub
pushf
adc
xchg
mov
sbb
inc
xchg
push
in
retf
pop
xor
pop
sub
popa
call
clc
lahf
outs
xchg
je
xchg
sbb
inc
inc
inc
jmp
movs
movs
loop
pop
(bad)
(bad)
sub
int3
pop
daa
pop
out
into
lahf
(bad)
sti
imul
sub
sbb
bound
out
into
xchg
retfw
jo
loopne
and
jmp
out
sti
nop
dec
cld
test
cmp
push
mov
mov
xor
or
and
fst
mov
xlat
gs
jnp
aas
push
icebp
mov
test
sub
mov
sti
into
mov
mov
inc
sbb
add
pop
inc
and
stc
lds
xchg
xchg
rol
ins
adc
fldcw
adc
(bad)
xchg
loopne
das
daa
mov
or
popf
icebp
jne
pop
int
xchg
mov
aas
test
or
mov
(bad)
or
cmp
fwait
xor
jae
adc
js
add
mov
iret
and
dec
mov
ins
mov
(bad)
lods
inc
(bad)
and
movs
(bad)
push
xor
mov
int3
xor
cmps
shr
in
jmp
ficom
push
addr16
mov
cld
cmps
sub
xchg
dec
xor
dec
in
cdq
movs
xor
call
test
cmp
das
int
mov
adc
test
jne
adc
iret
inc
call
daa
fadd
iret
xor
xor
or
add
push
mov
aad
cld
sub
push
shl
loope
inc
aas
rep
lea
mov
bound
fs
xchg
mov
xor
mov
lahf
scas
xor
out
out
jecxz
std
jge
pop
ficomp
ins
fld
cmc
push
fucom
mov
leave
xlat
leave
test
pop
cld
(bad)
ffreep
jmp
ret
lock
push
mov
(bad)
fucom
dec
popf
rol
(bad)
aad
and
icebp
in
out
mov
xchg
sbb
loop
out
data16
or
daa
xor
(bad)
fisub
aad
jg
dec
push
add
xchg
(bad)
cbw
and
inc
mov
mov
mov
shr
mov
pushf
mov
jmp
sbb
xchg
jbe
lods
xlat
pusha
sub
bound
iret
fwait
addr16
es
push
imul
(bad)
dec
sbb
imul
test
pop
push
enter
and
jg
(bad)
imul
adc
push
mov
repnz
test
jb
aam
pop
add
outs
test
mov
gs
jo
dec
movs
push
inc
jno
repnz
icebp
mov
imul
push
sbb
sub
adc
pusha
sbb
jle
sub
int
sub
(bad)
xchg
imul
(bad)
xor
cmp
jbe
out
jmp
or
sti
ret
enter
mov
ja
(bad)
jmp
ins
jecxz
arpl
test
les
pusha
cld
sub
mov
aam
in
lahf
cld
mov
mov
arpl
inc
xor
ins
pusha
push
cmp
mov
fs
and
pop
cmp
fdivr
xchg
pop
sub
in
mov
cmp
loop
test
aaa
int3
dec
adc
cmps
lahf
push
xor
arpl
mov
pop
lea
out
(bad)
xchg
shl
movs
lahf
daa
add
in
stc
(bad)
sar
jmp
sub
mov
fcom
fist
jns
dec
ins
push
mov
in
mov
jp
jne
sahf
scas
add
jmp
add
sbb
jae
dec
inc
(bad)
adc
sbb
cmp
cmp
mov
push
adc
or
daa
test
jo
loope
or
fcomp
popa
mov
xor
repz
loope
mov
in
jb
je
rcr
inc
sahf
in
pop
shr
cs
sbb
pop
cmp
jecxz
scas
cmps
ret
jmp
(bad)
push
sub
sub
and
ss
inc
xor
int3
sub
fnstsw
push
sbb
icebp
dec
daa
xchg
test
fdiv
iret
pop
mov
pushf
scas
retf
cmp
hlt
loope
push
or
jmp
mov
cmps
int3
jbe
aaa
jge
or
bound
jmp
repz
mov
or
jp
cmp
add
jg
in
ja
xor
jb
jmp
mov
sub
js
lea
icebp
cmp
and
xor
pop
cmp
mov
cmp
cmp
in
cmp
cmp
call
push
das
pop
std
xchg
arpl
pop
xor
xor
cmp
sub
sub
in
fiadd
mov
jl
rcl
addr16
dec
lods
xor
mov
sub
xor
pop
pop
adc
int
je
dec
sahf
xor
pop
xchg
(bad)
std
cmp
add
adc
imul
shr
outs
adc
and
pop
repnz
cmp
fist
push
rcr
sub
mov
ins
repz
sbb
repz
add
adc
adc
out
sub
jb
das
ins
adc
cmps
jo
repnz
xchg
mov
fnstsw
enter
jne
pop
mov
daa
aam
js
dec
add
ds
fld
arpl
gs
lods
aam
pusha
les
jp
(bad)
dec
dec
idiv
in
mov
int3
jnp
add
push
ds
sbb
push
pushf
loopne
(bad)
ror
imul
adc
pop
fadd
jge
in
adc
rcr
push
xor
or
pop
push
and
shr
inc
cs
test
stos
push
xchg
xor
int3
call
test
es
fild
or
cmc
dec
jmp
xor
adc
(bad)
and
xchg
test
sub
repnz
out
push
mov
jae
repz
adc
pop
jle
es
jnp
sub
push
xor
sub
iret
mov
adc
dec
outs
adc
jns
push
fst
sub
push
push
adc
jl
pop
sar
xchg
pop
mov
sbb
cmp
iret
adc
rcr
ret
mov
bnd
icebp
rcr
and
pusha
shr
inc
inc
shl
and
iret
pusha
movs
gs
or
lahf
pop
ss
pop
fxch
sub
in
outs
jno
or
leave
and
js
or
imul
adc
test
push
sbb
pop
es
jge
loop
outs
dec
dec
es
shl
mov
inc
adc
inc
repz
mov
xlat
sub
ror
adc
das
dec
pop
fxch
and
mov
aam
xchg
aad
push
xchg
fs
mov
cmps
nop
xchg
or
fldcw
sub
inc
out
fisttp
adc
xchg
mov
or
mov
ins
jmp
sub
sub
push
xor
xor
mov
cmps
mov
or
in
dec
or
dec
push
push
jle
test
fidiv
add
pop
push
xor
jbe
or
dec
inc
inc
push
mov
push
lds
lock
aaa
mov
sbb
sbb
nop
dec
jo
pop
fistp
ja
ror
jmp
and
rol
adc
cmp
cmps
repnz
sahf
js
ins
loopne
rol
sti
xchg
out
ret
cmp
dec
ss
xor
test
dec
or
scas
mov
lods
mov
or
mov
sahf
jb
(bad)
test
pop
mov
sbb
ret
test
scas
inc
aaa
ror
xlat
movs
fisttp
inc
retf
inc
push
js
or
inc
sbb
inc
xlat
pop
inc
lds
cmp
jbe
stc
sub
test
adc
ins
push
adc
mov
dec
xchg
dec
push
push
pop
dec
mov
rcl
jae
(bad)
nop
xor
mov
dec
and
div
stos
cdq
scas
and
mov
imul
cmp
aam
test
and
pop
mov
frstor
addr16
cmp
mov
iret
xchg
scas
xchg
loop
ss
(bad)
ins
xor
pop
dec
enter
lds
adc
ss
pop
out
call
(bad)
pop
push
lock
push
ffreep
outs
aas
inc
hlt
cmp
adc
xlat
fst
inc
test
(bad)
add
popf
enter
sbb
jne
movs
xchg
imul
scas
adc
bound
jp
jle
stos
cmp
mov
xchg
xchg
(bad)
adc
xchg
(bad)
js
inc
(bad)
das
shr
call
int3
push
cmps
outs
jnp
cwde
mov
jp
pop
repz
gs
repz
dec
inc
and
shl
jmp
add
sbb
cmc
mov
repnz
ret
not
mov
mov
stos
lods
retf
idiv
std
lods
or
fwait
xchg
or
outs
mov
pop
(bad)
imul
dec
mov
stos
into
lods
enter
sub
add
push
int
inc
(bad)
sbb
jno
add
pusha
push
fwait
sub
in
test
cli
jmp
inc
icebp
sbb
sub
xchg
sbb
les
pop
fs
or
or
push
xchg
add
shr
push
or
ins
mov
adc
or
and
dec
into
cdq
mov
pop
push
int3
bound
js
sub
repz
push
or
mov
(bad)
es
push
test
in
aaa
xor
dec
dec
fdiv
or
jmp
dec
cmps
adc
dec
les
mov
mov
pop
data16
psubd
test
jl
mov
push
sbb
int
and
clc
adc
mov
fwait
lds
dec
mov
stos
jno
xchg
and
daa
loop
pushf
jg
cmp
dec
movs
test
adc
jae
mov
sahf
pop
cmp
scas
add
push
pop
mov
add
dec
pusha
lahf
adc
fsub
cmps
xor
pop
or
inc
sub
retf
sbb
retf
pop
or
fsub
add
sub
xchg
sbb
mov
ret
fs
cmps
dec
test
cmp
bound
sbb
std
lds
ds
imul
xor
(bad)
cmps
daa
pop
inc
sub
stos
rcr
xlat
push
push
mov
jnp
jmp
cmp
dec
dec
bound
xchg
sub
call
jo
pop
cmp
inc
mov
movs
push
or
jo
stc
pop
movs
pop
pop
ja
cli
loopne
fisubr
pop
rcr
sbb
jg
xchg
mov
inc
xchg
sub
add
mov
cmps
stos
popa
pop
jbe
pop
pop
std
rol
mov
cmp
cmp
jmp
mov
xchg
jl
aas
xchg
adc
jp
cmp
stos
adc
and
ins
adc
mov
inc
shl
jg
pop
xor
(bad)
out
jecxz
inc
or
and
mov
adc
mov
mov
inc
cmp
aas
jo
add
shl
add
fnsave
ret
in
adc
call
lods
jmp
pop
in
xchg
adc
jnp
mov
leave
dec
dec
add
dec
ret
xor
(bad)
repnz
je
inc
rcl
movs
cmc
xor
aad
gs
ins
inc
push
push
das
cwde
(bad)
pop
mov
repz
or
jle
add
or
mov
and
rcl
push
enter
out
adc
mov
pop
neg
fsubr
hlt
fst
mov
add
(bad)
pop
iret
inc
sahf
cmp
fnstsw
fwait
add
test
push
sbb
cs
mov
fdiv
pop
in
adc
sub
dec
popa
and
outs
pop
out
xchg
cmp
mov
sub
(bad)
ins
sbb
mul
add
mov
dec
sub
and
out
mov
jp
js
xchg
loope
aas
sahf
cmp
jge
or
in
mov
(bad)
jge
js
cli
push
daa
stos
les
int
jge
sbb
repnz
dec
dec
jmp
xchg
ss
adc
jp
sub
dec
movs
mov
xchg
jbe
pop
rol
jne
sub
jmp
fs
xchg
or
sub
fsubr
(bad)
in
adc
mov
(bad)
jmp
jecxz
in
cmp
pushf
daa
int3
mov
xchg
fcmove
call
scas
addr16
jmp
aaa
pop
cld
repz
ins
add
fs
add
sar
ins
inc
jp
(bad)
sbb
jmp
mov
mov
(bad)
push
and
(bad)
fldenv
or
inc
xbegin
in
jmp
popf
or
push
cmp
sbb
mov
inc
jo
and
(bad)
fsub
fwait
sub
add
and
mov
cmps
jge
adc
mov
push
mov
jbe
xchg
xchg
add
repnz
js
sti
cmps
(bad)
ds
cli
out
add
xchg
push
cmps
test
imul
nop
cmp
retf
outs
nop
in
or
aas
scas
sbb
pop
ficom
jne
cmp
and
cmp
dec
(bad)
inc
cmc
gs
fdivr
jbe
adc
pop
shl
pop
cmp
(bad)
mov
aaa
add
dec
cs
pusha
jle
pop
or
pop
sbb
push
or
or
fldenv
dec
cwde
push
das
pop
adc
mov
adc
fadd
fcomi
pop
mov
mov
cmp
iret
jmp
push
test
neg
mov
sbb
cwde
and
jne
mov
dec
jae
xor
ins
rcr
test
gs
rcl
inc
stc
clc
and
icebp
les
dec
sub
call
adc
lods
pop
out
lahf
and
inc
rol
sub
pop
jp
ins
test
mov
mov
idiv
int3
inc
aad
dec
lahf
out
nop
stos
mov
dec
xchg
dec
unpckhps
or
dec
arpl
mov
js
sub
ficom
xor
in
hlt
ins
data16
pop
push
test
dec
pop
push
mov
sub
dec
and
outs
or
cs
sti
or
pop
inc
jmp
fcmovnbe
sbb
stos
push
push
pop
dec
dec
fs
jne
js
push
lock
imul
aam
call
push
dec
ficomp
scas
jo
jg
and
mov
aam
(bad)
mov
mov
cwde
shr
sar
xor
xchg
mov
xor
mov
pop
lahf
push
enter
and
jmp
adc
cld
leave
push
mov
je
mov
das
adc
or
ins
sbb
inc
jbe
nop
mov
cs
pop
shr
popa
in
(bad)
mov
imul
jo
push
xchg
fdiv
and
std
adc
sar
in
outs
sbb
mov
mov
sub
cmps
add
mov
dec
stos
pop
call
mov
inc
out
loop
(bad)
shl
mov
sub
push
(bad)
push
adc
test
dec
pusha
shr
xchg
shl
cmp
test
mov
in
sar
add
pusha
fstp
es
add
lock
add
jle
ds
retf
push
mov
inc
ja
xor
mov
or
push
inc
js
stos
push
xchg
fstp
outs
push
mov
xchg
dec
dec
sub
fdiv
add
test
adc
sub
int3
pop
sar
cmp
and
out
gs
mov
jae
lds
sahf
cmc
jno
ror
jmp
sbb
idiv
mov
dec
xchg
lea
dec
dec
inc
shl
sbb
dec
or
(bad)
cmps
push
xchg
rol
int
add
push
cmp
mov
cmps
mov
inc
dec
inc
xor
cli
dec
xchg
push
inc
push
mov
push
xor
add
fdivrp
push
js
sub
out
test
mov
or
(bad)
jle
fwait
and
jmp
loope
mov
addr16
push
inc
adc
sbb
leave
sahf
xchg
add
addr16
xor
call
addr16
sub
jle
test
inc
pushw
jle
dec
push
xchg
(bad)
lods
jbe
and
cmp
xor
pop
gs
icebp
(bad)
push
or
(bad)
lock
popf
(bad)
cmc
fsub
call
adc
jl
cmp
rcl
or
cmc
xlat
push
movs
loopne
or
push
lock
mov
or
daa
cmp
ds
call
mov
sahf
pop
push
lds
out
xchg
add
xlat
test
arpl
stos
jbe
push
dec
fbld
add
sahf
mov
jg
xchg
in
test
fwait
dec
arpl
adc
sbb
push
cmp
mov
mov
sti
stc
inc
jo
dec
lock
out
pop
rcl
mov
adc
aaa
mov
pop
call
jecxz
in
icebp
mov
add
jmp
add
loopne
cld
jne
int
mov
aas
cmps
ficomp
sbb
out
inc
call
xchg
jb
dec
sub
(bad)
xlat
pushf
adc
pop
out
and
push
aas
pop
inc
xor
inc
adc
xor
pop
sbb
and
pushf
jns
(bad)
(bad)
mov
stos
jecxz
addr16
test
rol
jmp
adc
xor
adc
pop
arpl
mov
inc
(bad)
pop
inc
loop
jns
or
ja
ins
std
inc
push
pop
cmp
push
or
outs
push
cdq
leave
xchg
add
sub
lock
jmp
mov
mov
xor
lods
bound
movs
ret
sbb
pop
inc
out
push
add
and
inc
cmp
mov
adc
jb
scas
add
mov
cmp
mov
pop
test
(bad)
xor
cmp
add
pop
push
add
cwde
(bad)
jns
inc
dec
mov
cld
div
out
arpl
ror
mov
adc
pusha
mov
push
and
mov
rol
dec
and
add
jmp
in
shl
pop
dec
inc
xlat
jne
jge
mov
sub
pop
cmp
in
fst
or
ins
aas
mov
mov
or
mov
(bad)
stos
inc
in
rcl
mov
mov
pop
mov
mov
sub
jb
xor
fidiv
push
pop
pop
loope
push
in
out
inc
xor
inc
and
add
clc
aaa
fcmovnbe
and
js
mov
in
lods
fsub
dec
jl
cmp
jmp
ror
dec
sbb
aaa
stc
and
les
adc
mov
sbb
in
fldenv
rol
test
push
gs
dec
push
cmp
fs
cs
ins
mov
mov
leave
out
rcl
fmul
cmp
scas
add
pop
test
stos
shr
aam
retf
repz
cmc
dec
jne
dec
pop
xchg
inc
adc
sub
jbe
sbb
add
lods
retf
das
(bad)
cmp
jo
out
dec
call
shl
sar
xor
ret
sbb
test
sahf
rcr
jno
iret
shr
test
mov
mov
sbb
push
pop
mov
or
mov
mov
pop
test
imul
mov
imul
jo
jmp
ins
cs
(bad)
mov
pop
cmc
xor
pop
pop
(bad)
mov
idiv
mov
pxor
xchg
jbe
adc
outs
mov
adc
sbb
dec
ficomp
cmp
pop
jg
xchg
addr16
jmp
data16
fcomp
cwde
jne
fdiv
ret
add
cwde
ss
out
jnp
sub
jp
je
sbb
xor
shl
rol
dec
cmp
loopne
(bad)
ins
adc
adc
lods
jnp
daa
jo
adc
fbld
outs
push
xchg
mov
add
mov
sub
imul
mov
mov
lods
mov
adc
xor
mov
mov
and
lds
add
cdq
adc
aam
adc
adc
jae
mov
loop
xchg
test
mov
or
bound
ror
lahf
fiadd
pop
jbe
in
cmp
xor
push
mov
xchg
or
mov
sbb
mov
add
fwait
dec
and
ret
xchg
jmp
sahf
mov
gs
fmul
(bad)
iret
rcl
adc
rol
cwde
into
inc
cli
(bad)
pop
sti
fisub
test
mov
cli
imul
inc
inc
push
imul
cmp
inc
dec
sub
out
sar
jle
aaa
xchg
mov
mov
jns
inc
and
stos
nop
or
mul
js
cmps
ss
ror
outs
dec
push
mov
push
test
push
shl
push
iret
jp
mov
xlat
sub
div
sar
push
inc
dec
push
jecxz
and
nop
xor
push
call
push
inc
xor
shl
outs
mov
aaa
push
mov
jns
mov
repnz
lds
movs
cmp
add
cli
arpl
sbb
out
daa
and
jae
aas
sbb
setp
(bad)
sbb
mov
xor
push
arpl
adc
inc
(bad)
add
or
fwait
xor
xchg
inc
adc
(bad)
jge
push
test
cdq
rol
sub
(bad)
mov
dec
jecxz
mov
lods
hlt
and
sub
sbb
into
mov
dec
test
xchg
mov
fldcw
pop
cmp
add
call
clc
aam
mov
pop
stos
and
mov
(bad)
pushf
mov
inc
cmp
adc
addr16
retf
mov
pop
leave
pop
mov
mov
pop
pop
and
adc
mov
jne
les
iret
sbb
std
cmc
pop
add
jne
fs
and
ds
loopne
imul
pop
sbb
jg
popf
cmp
cdq
xchg
add
fstp
ins
push
cmp
and
sub
outs
aas
or
sbb
(bad)
ja
leave
pop
mov
fsubr
test
xor
jmp
aas
in
out
cmc
dec
(bad)
fsubr
push
gs
dec
push
cmp
sub
aaa
call
cmps
xchg
fadd
fsubr
jge
movs
stos
mov
jmp
cmp
scas
in
inc
sub
xchg
test
mov
mov
nop
mov
dec
icebp
and
in
jb
leave
aam
push
sbb
js
sbb
add
aas
cmps
cmps
pop
icebp
pop
mov
xchg
out
inc
repnz
fnstcw
stos
xchg
xchg
imul
and
shr
xor
addr16
sbb
rcr
test
cmp
dec
push
jge
push
sub
push
shl
in
jle
adc
jge
shl
jl
test
cdq
or
sub
cmps
inc
jne
cmp
and
cmps
mov
cwde
dec
bnd
dec
scas
in
test
jbe
outs
call
sub
mul
std
fnsave
pop
test
xchg
retf
aad
outs
adc
rcl
cdq
inc
popf
jnp
xchg
movs
pop
mov
cs
imul
pop
push
aas
lahf
xchg
or
adc
int3
jb
push
jge
not
xor
sbb
in
mov
ss
es
leave
cmp
retf
in
or
test
repnz
jno
mov
add
xchg
je
stc
adc
add
jg
mov
js
inc
push
pop
enter
jecxz
sub
xlat
mov
or
out
lods
and
int3
jb
and
sub
imul
cmp
call
pop
shr
ds
pushf
jmp
sub
sub
pop
sar
add
jmp
leave
jbe
push
cmps
jmp
jns
inc
js
cmp
lods
fcomp
cmp
popa
adc
les
fwait
out
je
adc
fwait
mov
retf
cwde
inc
sub
xchg
pushf
div
sbb
(bad)
xchg
mov
jp
cmp
pop
or
mov
in
in
add
scas
push
inc
cmp
dec
mov
push
ficom
or
pop
movs
cli
xor
ins
stos
bound
cdq
add
cld
ss
in
sbb
inc
scas
mov
out
pop
adc
cli
shr
add
push
jl
push
sub
sub
push
cld
cs
xchg
aas
loopne
call
xchg
xchg
test
cmps
inc
jmp
pop
jmp
std
std
fdiv
call
jp
and
sub
pmulhw
js
pusha
ror
loopne
jo
out
(bad)
cmp
adc
cdq
lock
inc
test
mov
int
(bad)
or
mov
repnz
sub
pop
cmp
xor
pop
jnp
xchg
inc
jg
or
pusha
add
in
fwait
call
in
dec
in
cmp
adc
jecxz
jmp
xchg
xchg
adc
cmps
or
mov
ror
jle
rcl
lods
xor
mov
dec
call
cmps
sbb
ins
push
xchg
push
out
cwde
lods
jb
test
dec
icebp
or
inc
daa
aad
test
jmp
or
rcr
hlt
dec
(bad)
mov
out
nop
sbb
sub
out
xchg
lahf
or
mov
jecxz
sbb
pop
mov
sub
imul
int3
dec
xchg
mov
jge
push
cmp
ins
test
jns
jge
mov
enter
xchg
leave
popa
adc
mov
loopne
and
xlat
shl
dec
pop
pop
scas
pop
movs
adc
mov
popf
sbb
mov
jnp
cli
push
pop
xchg
or
or
inc
jle
(bad)
mov
dec
les
pop
mov
xchg
cs
test
mov
je
mov
pop
jge
adc
rcr
repz
add
xchg
xchg
jns
or
inc
xchg
std
pop
int3
cwde
pop
lea
and
fsub
mov
mov
outs
pop
sbb
data16
std
pusha
aad
push
mov
test
or
out
std
push
dec
(bad)
sti
jnp
ret
push
xor
sub
xchg
pop
cmp
pop
aaa
arpl
mov
add
sahf
xchg
test
lds
adc
dec
mov
mov
popa
push
or
mov
lods
mov
push
ss
nop
lds
outs
dec
(bad)
popa
push
shld
mov
stos
mov
ja
sub
sahf
xor
movs
in
je
sbb
or
pop
pop
xchg
je
add
jp
mov
les
sar
push
adc
fnstenv
sub
xor
push
(bad)
into
test
out
leave
jge
pop
push
sub
icebp
xchg
int3
fild
aad
cmc
outs
ja
or
mov
ret
lods
mov
outs
in
push
addr16
hlt
mov
js
out
dec
fcomp
into
clc
cmp
or
bound
aas
mov
inc
pop
mov
push
fisttp
popa
push
xchg
cmp
xchg
jne
cmp
pop
shr
hlt
adc
test
call
lds
push
jbe
retf
or
lods
or
mov
inc
cli
ins
scas
add
aam
cmp
out
xor
and
gs
ins
outs
lods
add
jl
cmp
add
add
shr
mov
rol
cli
pop
push
je
scas
in
pop
add
push
inc
xchg
jne
xchg
xchg
and
es
test
and
sub
retf
xor
mov
jno
outs
jge
(bad)
(bad)
iret
(bad)
pop
aas
(bad)
pop
adc
(bad)
addr16
inc
lock
pop
ret
jns
sbb
or
pop
xchg
xor
jno
popf
jns
popa
fisubr
hlt
pop
nop
adc
das
lods
jo
jle
out
adc
test
add
sti
imul
or
push
cmps
retf
cwde
push
ins
cmps
push
int3
loope
shl
repnz
inc
mov
sti
pop
add
push
int3
in
sahf
mov
loop
movs
add
stos
jo
sub
jmp
mov
leave
in
cmps
outs
sar
and
xor
xor
sub
xor
int3
mov
xchg
cmp
jno
push
fstp
and
and
mov
and
xchg
adc
fwait
and
jb
mov
inc
inc
test
or
in
push
mov
fwait
scas
loop
jmp
mov
sub
or
push
ja
mov
dec
dec
jmp
jmp
fisttp
pop
idiv
gs
cdq
xchg
mov
fsub
xchg
add
mov
push
(bad)
mov
sbb
add
push
mul
mov
js
jbe
fdivr
inc
lods
and
pop
retf
ds
mov
cmc
pop
dec
rcr
cmps
dec
jbe
cdq
and
or
pop
xor
test
fist
pop
fst
pop
dec
movs
rcl
adc
rcr
cmp
shl
sbb
add
or
xlat
xchg
sahf
stos
push
xchg
mov
jl
inc
add
fnsave
lea
dec
add
(bad)
hlt
mov
test
lock
push
and
popf
xchg
add
movs
sbb
dec
es
jne
and
clc
push
mov
repnz
imul
stos
test
into
pop
add
push
push
xchg
addr16
mov
add
mov
jle
xchg
fcom
shl
outs
pop
push
push
or
outs
ret
and
cwde
ror
xchg
pop
loopne
mov
fiadd
mul
retf
mov
or
cmp
sar
ja
mov
cwde
and
add
out
ror
sbb
out
sub
jbe
or
cmps
dec
cmp
jmp
and
mov
and
popf
mov
fsub
mov
adc
not
call
fimul
fidivr
fstp
int
sbb
rol
jae
inc
add
lods
mov
daa
add
(bad)
ja
fadd
les
aam
sbb
frstor
hlt
xor
adc
sbb
add
movntq
push
add
cmp
and
icebp
out
enter
xor
fild
jae
mov
and
(bad)
std
mov
(bad)
and
or
or
les
mov
daa
retf
jbe
jge
fsubr
jmp
mov
inc
loope
(bad)
popf
out
mov
pop
inc
push
in
xchg
(bad)
sti
cli
lahf
and
add
mov
jne
or
and
ins
and
in
outs
aam
ret
mov
aas
cmp
test
into
jae
rcr
lods
ret
mov
fidivr
xchg
retf
stc
ins
or
cmp
sbb
ror
xchg
out
xchg
add
mov
out
fs
xor
pop
fdivp
test
(bad)
hlt
fisubr
outs
ret
int
mov
add
sbb
(bad)
out
in
aam
retf
arpl
or
in
or
pusha
mul
sub
xor
mov
stc
add
jg
out
pop
and
and
push
repnz
and
rol
(bad)
int3
scas
movs
mov
sub
sub
xchg
das
and
in
mov
mov
xchg
push
in
sub
push
sub
rol
mov
scas
mov
mov
mov
pop
inc
xchg
cmc
add
cmps
jmp
push
daa
(bad)
pop
lods
enter
jle
ficom
test
push
ss
lgs
fisttp
ficomp
add
js
ins
iret
inc
dec
sub
div
jmp
jecxz
icebp
aas
rol
pop
je
repnz
inc
pop
es
clc
(bad)
das
retf
xor
ficom
daa
jge
pop
add
mov
pop
push
ins
not
data16
mov
addr16
or
xor
jno
sub
or
adc
inc
or
in
jnp
jp
sahf
mov
cmp
sbb
xchg
inc
push
stos
mov
ds
loopne
add
retf
and
(bad)
push
mov
daa
into
addr16
mov
push
bound
fisubr
ja
retf
mov
fild
fwait
mov
outs
cmp
mov
xchg
jns
mov
es
sar
rol
dec
add
inc
daa
out
stos
xchg
ret
ins
lahf
test
add
push
mov
or
lods
aas
into
mov
dec
jecxz
cmp
push
xchg
adc
jae
push
imul
lahf
add
cmc
dec
sbb
pop
ss
sar
imul
rol
and
retf
lods
fmul
lahf
sbb
stc
scas
push
aas
out
popa
adc
adc
in
add
mov
mov
push
mov
add
mov
in
mov
loope
vpmuludq
mov
adc
pop
aad
and
or
cli
call
int3
sub
or
rcl
stos
push
les
adc
mov
cmp
int
in
jo
les
sub
cdq
test
lods
retf
inc
shr
test
daa
aam
fiadd
pop
lds
add
sub
xor
xor
stos
mov
xchg
test
mov
inc
inc
push
mov
loope
mov
and
outs
test
jno
jns
push
pusha
xor
dec
jp
push
xor
push
nop
enter
push
jmp
js
cmps
sbb
mov
and
(bad)
aaa
(bad)
push
sub
popa
jmp
leave
adc
ja
mov
add
xor
imul
and
mov
out
xchg
dec
cmp
adc
outs
sub
pop
loopne
(bad)
add
inc
fcomp
arpl
repz
adc
cld
sub
lds
pop
xchg
push
jo
inc
xor
test
dec
jp
inc
dec
cld
idiv
mov
mov
dec
or
lods
imul
or
xor
fcmovnb
push
add
es
popf
lock
mov
dec
adc
pop
and
mov
xchg
fsub
cmc
stos
in
popa
inc
cmp
cdq
cmp
mov
and
test
and
inc
push
sahf
in
outs
and
adc
xchg
cs
out
into
fwait
or
pop
ficom
bound
adc
inc
shr
push
test
push
mov
inc
imul
(bad)
adc
hlt
dec
rcr
and
xchg
jnp
arpl
in
inc
xchg
sahf
jo
push
outs
add
xor
add
jns
jge
sub
mov
loope
arpl
push
(bad)
test
xor
movs
cwde
or
rol
es
mov
sub
adc
add
std
inc
mov
mov
enter
std
dec
out
push
push
in
pop
and
scas
call
dec
push
ret
sbb
mov
jle
cwde
dec
or
sbb
enter
int3
stos
pop
push
and
sub
adc
pop
fdiv
lea
add
pop
lahf
push
cmps
mov
push
cwde
push
mov
in
(bad)
push
adc
mov
pop
inc
je
sub
pop
cli
cmp
icebp
into
sub
adc
into
inc
add
in
cmp
mov
repnz
dec
xchg
pop
inc
xlat
repz
xchg
shr
imul
push
inc
xor
rcr
fbstp
or
imul
xlat
jge
or
mov
xchg
addr16
das
std
pop
cli
stos
cmp
mov
lods
xor
add
adc
icebp
dec
inc
xor
test
mov
cmp
ins
int3
aam
ror
dec
loope
or
mov
mov
dec
xchg
aas
jb
lahf
jmp
lock
jne
sar
test
add
push
mov
sbb
fcom
mov
xchg
push
inc
xchg
mov
neg
jne
lods
ret
shl
(bad)
cmp
mov
or
movs
dec
sub
cli
sti
addr16
das
adc
sbb
pop
cmp
mov
movs
xchg
mov
outs
sub
aas
and
repnz
xor
add
in
mov
dec
daa
loope
clc
call
dec
loopne
add
retf
xor
mov
data16
pop
(bad)
jns
outs
imul
sbb
jle
push
test
or
bound
(bad)
jecxz
mov
fstp
aam
pop
dec
mov
out
jecxz
adc
loop
arpl
ins
pop
(bad)
lock
hlt
push
shr
sbb
push
xchg
sar
inc
adc
fstp
inc
in
mov
(bad)
imul
movs
aaa
mov
fwait
mov
cmp
add
scas
cli
push
push
mov
jno
mov
cmps
call
in
mov
jge
(bad)
cmp
mov
int
sbb
das
xor
(bad)
mov
int
jg
adc
inc
sub
mov
aaa
ja
xlat
lods
int
out
lahf
sti
ficom
cmc
xor
mov
loope
int3
dec
mov
inc
dec
inc
dec
ret
add
cs
fnstenv
js
push
cmp
aad
js
cmp
mov
or
cmp
clc
(bad)
jecxz
mov
mov
pusha
fdiv
push
rcl
xchg
loopne
retf
xor
(bad)
xor
fidiv
mov
mov
jge
les
in
adc
int3
(bad)
or
push
pop
sahf
jecxz
in
lods
lods
xlat
ins
mov
xchg
into
icebp
jae
bound
jp
push
out
add
xchg
stos
mov
sbb
cmps
mov
mov
xchg
lds
cmps
push
fsubrp
scas
add
(bad)
jo
push
stos
sbb
xor
cmp
inc
call
jge
xchg
xor
ret
loop
call
fxch
cmp
stos
pusha
xchg
fdivr
and
push
out
adc
mov
mov
pop
mov
and
jle
aas
aad
sbb
aaa
sbb
(bad)
adc
imul
push
mov
shl
xor
sbb
cmp
sti
sub
test
loop
test
inc
mov
xor
outs
hlt
inc
jp
add
mov
or
pop
sbb
fbstp
cmc
dec
jns
shl
jae
call
daa
shr
add
test
dec
dec
and
mov
mov
or
and
pop
mov
mov
inc
in
lea
mul
cmp
js
jecxz
jo
cmp
loop
dec
mov
dec
popa
stc
push
or
loop
sbb
xchg
popa
mov
xchg
call
lods
cli
repz
iret
sub
mov
out
js
fst
sar
and
loop
xchg
js
fistp
xchg
cmp
xor
dec
(bad)
dec
jle
mov
out
(bad)
mov
push
cwde
cmp
mov
jne
jge
adc
icebp
out
add
xchg
or
jmp
aad
xor
sbb
inc
int
cmps
cmps
retf
call
push
mov
push
rol
retf
mov
das
imul
cwde
cmps
add
shl
arpl
cmp
mov
pop
scas
call
xor
rcr
in
jno
mov
(bad)
or
cmc
in
ins
jno
test
mov
in
call
sbb
jg
(bad)
jmp
sub
push
mov
(bad)
sbb
xlat
xor
inc
cmp
jns
mov
mov
sub
pop
xlat
xor
cdq
std
ror
pop
adc
gs
int3
les
pop
mov
call
ret
add
fwait
stos
loop
dec
ret
shl
sub
xchg
jnp
mov
into
mov
ja
sbb
xor
xchg
or
test
mov
or
cmp
sar
rol
mov
cmps
mov
movs
int
mov
pop
nop
ss
adc
(bad)
pop
pop
xor
sbb
sub
cmp
cmp
adc
and
cwde
add
nop
jge
cmc
es
lahf
sbb
adc
int3
mov
ins
add
inc
mov
mov
ret
les
cs
dec
ss
mov
adc
aas
xchg
addr16
in
mov
mov
xchg
or
retf
fucomi
mov
sbb
scas
(bad)
aad
mov
sub
in
call
mov
inc
int
sar
fs
mov
cmp
pushf
pop
mov
movs
scas
(bad)
clc
daa
add
out
aad
lea
add
add
sbb
gs
and
jge
nop
repz
cwde
enter
xor
add
jne
ds
xchg
cmc
ficom
lea
sub
mov
out
push
sti
cwde
movs
adc
movs
rcl
arpl
pop
mov
cmp
inc
aam
data16
std
push
and
sub
pop
inc
sar
and
fcom
pop
rcr
xor
addr16
xchg
pusha
fsub
pop
shr
fdiv
or
jl
loopne
xor
inc
cmp
shl
cmps
lods
jl
lahf
imul
mov
xchg
mov
or
gs
inc
les
ins
xor
loopne
jmp
leave
bound
imul
movs
pop
hlt
or
push
mov
sbb
mov
or
adc
out
ja
test
xor
sbb
mov
or
fs
jmp
ror
repz
ret
pop
jmp
mov
or
pmaxsw
mov
xor
pop
dec
jbe
or
fsubr
ret
xchg
lods
popf
in
and
int
sahf
mov
pop
shl
xlat
xchg
mov
ror
rcr
outs
cmps
ret
call
cwde
repz
mov
sub
cmps
jns
fs
out
xor
into
popa
popa
mov
into
ja
mov
mov
jne
enter
in
dec
test
in
jge
and
lahf
scas
shr
pop
add
ret
(bad)
pop
je
shl
aam
js
cmps
test
cli
hlt
jbe
lods
lock
add
mov
sti
jo
or
inc
or
sub
rol
jno
inc
div
es
pop
push
sbb
das
dec
call
inc
sub
xor
ror
cli
push
jle
sti
xchg
push
jle
cmp
div
lea
inc
pop
in
inc
mov
and
popf
inc
pop
mov
(bad)
sub
js
enter
setg
stos
movs
call
cmp
jb
nop
cmc
mov
mov
push
fwait
leave
(bad)
and
sub
in
cmp
dec
sbb
push
ror
psubb
into
pop
jmp
pop
ret
push
(bad)
xor
xchg
je
adc
push
mov
ins
jle
jg
(bad)
sbb
xchg
lods
and
sub
scas
mov
bound
dec
hlt
aaa
add
(bad)
or
cmp
jl
sbb
or
nop
ds
mov
add
or
mov
jg
outs
loope
adc
ret
aas
sbb
dec
mov
stos
mov
pop
shl
icebp
test
and
shl
push
ficomp
xor
fisttp
outs
mov
rcr
(bad)
adc
test
inc
mov
fisubr
jno
mov
push
jnp
jecxz
or
jl
adc
fsubp
xchg
js
(bad)
jmp
loop
(bad)
sbb
scas
jae
adc
add
inc
popa
out
mov
jae
cld
daa
xchg
pop
fimul
pusha
mov
or
pmaxsw
mov
aas
retf
jo
xor
dec
(bad)
ror
and
mov
dec
jg
push
int
xor
ret
icebp
jecxz
jmp
out
sti
xchg
push
ins
test
jp
mov
dec
test
shl
xor
inc
mov
les
retf
or
test
mov
pusha
xlat
mov
push
movs
push
hlt
jnp
dec
in
mov
in
mov
popf
jbe
cmps
push
jb
fcom
mov
scas
repz
xor
fsub
xor
lds
push
inc
sbb
push
loopne
test
or
jmp
std
add
or
dec
test
rcr
es
xchg
push
shr
xlat
das
fistp
or
dec
imul
sub
jge
cs
test
int
xor
fpatan
inc
cmp
ins
sub
frstor
mov
adc
fild
movs
lods
cdq
xchg
jge
(bad)
jmp
sub
(bad)
cs
stos
xor
mov
or
xchg
cli
xchg
retf
or
ret
imul
clc
lods
sub
cmp
jl
mov
adc
aas
xchg
push
loop
pop
cli
jp
repz
daa
cmp
and
push
jmp
dec
inc
sar
xor
outs
cld
dec
sub
jbe
jle
pop
fs
out
inc
dec
stos
jmp
fidivr
or
mov
mov
aaa
xor
movs
jbe
and
imul
xor
cmp
inc
and
(bad)
pop
or
sbb
dec
neg
cmp
xor
dec
vdivsd
in
daa
mov
ins
xchg
xor
jmp
cwde
addr16
stos
pop
int3
jbe
xchg
mov
shl
xor
loopne
push
rcl
shl
and
lods
sbb
fist
dec
adc
arpl
inc
cmp
pushf
mov
add
or
std
stos
mov
fwait
bound
mov
imul
jbe
xor
mov
inc
sub
aas
mov
push
adc
add
ja
sbb
movs
outs
ins
mov
(bad)
lahf
jbe
mov
or
lds
outs
and
mov
sti
mov
sub
add
std
mov
xchg
cmp
aad
inc
pop
shl
mov
adc
aas
push
mov
mov
ss
xor
pop
mov
fdivr
dec
inc
dec
sub
xchg
cld
es
xchg
je
and
or
sub
jl
(bad)
loop
xor
add
add
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
jle
add
or
add
push
je
imul
add
add
add
push
push
add
pop
add
adc
add
and
dec
inc
add
add
pop
add
hlt
add
add
inc
ins
outs
bound
add
add
add
inc
push
add
or
add
add
add
add
add
add
add
adc
add
or
add
mov
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
das
add
add
or
or
sbb
and
push
add
add
inc
clts
add
add
add
add
add
add
adc
leave
add
add
add
add
add
add
add
add
add
add
aad
add
add
add
add
or
add
add
add
add
add
add
add
adc
pop
or
add
add
add
add
or
add
add
add
add
add
add
add
adc
inc
or
add
ins
add
add
add
or
add
ja
add
adc
mov
aad
add
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
sbb
add
mov
add
add
xchg
add
or
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
or
or
and
add
add
xchg
add
or
or
and
add
add
xchg
add
or
or
sub
add
add
xchg
add
add
add
add
xchg
add
add
or
shl
add
add
add
les
add
add
xchg
add
add
or
call
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
adc
fiadd
into
add
add
adc
data16
add
add
add
add
add
add
add
add
add
out
add
add
adc
out
add
mov
add
add
adc
jbe
push
add
add
and
add
add
add
or
adc
int3
and
add
add
add
aam
add
add
adc
and
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
xchg
add
or
adc
add
add
add
xchg
fiadd
das
add
add
xchg
add
or
adc
adc
xchg
add
or
adc
adc
add
add
xchg
add
or
adc
sbb
xchg
add
add
xchg
add
add
and
xchg
add
and
add
add
xchg
add
add
and
xchg
add
or
add
add
xchg
add
or
add
add
and
xchg
add
or
add
add
xchg
fiadd
das
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
adc
push
and
xchg
add
or
adc
pop
and
xchg
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
add
or
add
add
add
add
add
xchg
fiadd
das
add
add
xchg
add
or
adc
mov
add
add
add
xchg
add
test
add
add
xchg
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
fiadd
das
add
add
and
xchg
add
add
and
xchg
add
or
adc
aam
add
add
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
or
add
add
and
xchg
add
add
add
and
xchg
add
or
adc
call
add
add
add
and
xchg
add
or
adc
lock
xchg
add
add
and
xchg
fiadd
das
add
add
and
xchg
add
add
add
add
xchg
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
or
add
add
add
add
xchg
add
add
add
add
xchg
add
or
sbb
add
add
xchg
add
and
add
add
xchg
add
or
and
add
add
xchg
fiadd
das
add
add
add
add
xchg
add
or
adc
xor
add
add
xchg
add
add
add
add
add
xchg
add
or
adc
cmp
add
add
xchg
add
or
adc
cmp
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
or
push
add
add
xchg
fiadd
das
add
add
add
add
add
add
add
add
xchg
add
or
adc
fs
add
xchg
add
push
or
adc
push
add
add
add
add
add
add
add
add
add
xchg
add
or
adc
je
add
add
xchg
add
or
adc
js
add
add
xchg
add
or
adc
jl
add
add
xchg
add
or
adc
and
add
add
add
add
xchg
fiadd
das
add
add
xchg
add
nop
add
add
xchg
add
add
xchg
add
add
add
add
add
xchg
add
push
or
adc
mov
add
add
add
xchg
add
push
or
adc
test
add
add
xchg
add
push
or
adc
lods
add
add
xchg
add
(bad)
add
add
add
add
add
xchg
fiadd
das
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
fiadd
dec
add
sbb
push
add
add
add
add
add
add
add
add
aam
adc
(bad)
add
add
add
call
add
push
push
add
std
push
call
pop
adc
or
add
fiadd
das
add
add
add
add
add
dec
add
add
and
add
add
or
xor
or
push
add
adc
and
cmp
bound
jb
jg
xchg
add
push
add
add
adc
add
add
add
add
sbb
add
add
add
add
add
and
add
add
cmp
add
add
add
outs
jns
xor
push
imul
add
inc
push
inc
push
inc
push
add
arpl
ins
imul
gs
cs
imul
inc
outs
jb
jae
in
test
mov
in
test
mov
in
and
mov
mov
in
mov
mov
in
(bad)
in
mov
mov
in
nop
in
cdq
in
mov
mov
in
xchg
in
mov
mov
in
cdq
in
popf
cs
jae
jne
arpl
add
push
xor
jbe
jae
dec
dec
push
pop
pop
add
push
inc
push
imul
arpl
outs
jb
js
jns
xor
je
xor
arpl
jae
dec
jns
imul
jns
ins
add
push
arpl
jns
je
ins
add
pop
jo
inc
inc
xor
jne
add
jno
xor
xor
data16
push
ins
push
jae
xor
push
jns
add
outs
jo
jb
jns
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
inc
jo
bound
ja
fs
jo
xor
popa
dec
imul
push
add
dec
jns
jne
jns
jb
je
je
outs
add
jns
push
xor
xor
outs
jno
bound
imul
ins
push
arpl
jo
fs
dec
jne
outs
gs
cmp
jae
add
inc
ja
push
outs
je
cmp
add
inc
dec
outs
dec
dec
ins
jbe
ins
dec
inc
arpl
add
cmp
dec
arpl
push
cmp
cmp
popa
jb
ins
inc
jb
popa
jns
je
jb
bound
add
arpl
add
dec
inc
dec
ss
inc
jae
xor
dec
gs
popa
ins
jne
push
popa
imul
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
addr16
dec
gs
data16
gs
outs
jno
xor
bound
outs
xor
dec
dec
popa
ss
outs
pop
popa
ins
push
fs
dec
inc
inc
xor
inc
add
outs
pop
inc
ss
jno
ja
push
inc
push
jb
dec
dec
inc
push
cmp
jp
outs
push
inc
aaa
cmp
data16
add
gs
inc
dec
dec
jb
aaa
cmp
ins
cmp
dec
outs
je
xor
jns
xor
aaa
inc
push
cmp
jns
ins
xor
add
xor
imul
inc
cmp
ss
push
xor
inc
push
pop
cmp
dec
jne
inc
jns
add
js
xor
je
jp
outs
inc
add
inc
cmp
js
jbe
jno
add
imul
outs
dec
ja
dec
inc
inc
inc
inc
add
xor
popa
ja
push
popa
ja
push
aaa
dec
dec
push
add
push
inc
jns
outs
ins
jp
ja
popa
cmp
ja
outs
pop
add
jbe
inc
imul
data16
je
outs
fs
outs
outs
add
jb
outs
add
inc
pop
push
imul
xor
bound
push
jno
add
pop
jns
dec
ins
jb
gs
dec
jno
cmp
add
arpl
inc
push
jbe
jns
outs
push
jp
dec
jno
gs
push
bound
imul
add
bound
cmp
aaa
pop
gs
pop
xor
jno
imul
jae
gs
bound
inc
js
gs
imul
xor
aaa
inc
xor
outs
push
push
push
pop
jb
dec
push
dec
dec
add
jns
push
cmp
inc
ins
ins
add
je
jns
gs
sub
stos
loop
mov
or
lods
loop
lods
loop
lods
loop
mov
or
stos
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
(bad)
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
scas
loop
mov
sub
stos
loop
lods
loop
lods
loop
stos
loop
stos
loop
lods
loop
lods
loop
stos
loop
mov
sub
mov
or
gs
jb
jo
jb
jns
loop
scas
loop
lods
loop
scas
loop
(bad)
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
scas
loop
lods
loop
stos
loop
stos
loop
stos
loop
stos
loop
scas
loop
mov
or
loop
(bad)
loop
lods
loop
stos
loop
lods
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
mov
sub
sub
lods
loop
scas
loop
mov
sub
stos
loop
(bad)
loop
mov
sub
(bad)
loop
stos
loop
stos
loop
(bad)
loop
lods
loop
(bad)
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
(bad)
loop
mov
sub
lods
loop
mov
sub
(bad)
loop
lods
loop
lods
loop
mov
sub
lods
loop
scas
add
je
popa
ins
jne
add
sub
mov
sub
lods
loop
mov
sub
loop
mov
or
scas
loop
lods
loop
scas
loop
lods
loop
scas
loop
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
stos
loop
mov
or
loop
stos
loop
stos
loop
lods
loop
(bad)
loop
stos
loop
stos
loop
scas
loop
mov
sub
scas
loop
stos
loop
scas
add
je
gs
outs
fs
loop
stos
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
lods
loop
lods
loop
stos
loop
lods
loop
mov
or
(bad)
loop
stos
loop
(bad)
loop
scas
loop
stos
loop
stos
loop
(bad)
loop
mov
or
scas
loop
stos
loop
lods
loop
stos
loop
lods
loop
scas
loop
scas
loop
stos
loop
lods
loop
lods
loop
scas
loop
mov
or
loop
(bad)
loop
lods
loop
scas
add
pop
inc
jno
popa
ins
imul
or
mov
sub
loop
lods
loop
stos
loop
(bad)
loop
lods
loop
mov
sub
lods
loop
lods
loop
stos
loop
mov
or
scas
loop
stos
loop
scas
loop
(bad)
loop
lods
loop
lods
loop
scas
loop
(bad)
loop
(bad)
loop
lods
loop
lods
loop
lods
loop
lods
loop
stos
loop
lods
loop
mov
or
mov
sub
outs
fs
popa
jae
add
jbe
imul
sub
(bad)
loop
mov
or
loop
lods
loop
stos
loop
stos
loop
(bad)
loop
stos
loop
scas
loop
stos
loop
stos
loop
scas
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
loop
mov
or
lods
loop
scas
loop
stos
loop
mov
sub
mov
sub
(bad)
loop
stos
loop
(bad)
loop
scas
add
je
dec
gs
popa
addr16
sub
lods
loop
mov
or
lods
loop
lods
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
stos
loop
lods
loop
scas
loop
stos
loop
stos
loop
mov
sub
mov
or
lods
loop
lods
loop
scas
loop
stos
loop
mov
or
scas
loop
stos
loop
lods
loop
(bad)
loop
mov
sub
add
jae
popa
addr16
outs
js
push
push
imul
jae
ins
je
loop
scas
loop
lods
loop
stos
loop
scas
loop
lods
loop
mov
sub
scas
loop
stos
loop
(bad)
loop
mov
or
loop
mov
sub
scas
loop
scas
loop
lods
loop
lods
loop
stos
loop
mov
sub
loop
stos
loop
stos
loop
stos
loop
lods
loop
lods
loop
lods
loop
scas
loop
lods
loop
lods
loop
scas
loop
lods
loop
scas
add
cmp
popa
inc
jb
js
jno
dec
ins
ss
add
jae
pop
push
push
bound
dec
add
xor
jne
jno
dec
inc
add
jb
cmp
pop
dec
dec
arpl
inc
inc
data16
addr16
push
xor
jno
dec
inc
xor
inc
inc
push
add
outs
imul
imul
ins
fs
push
add
outs
jp
pop
push
push
outs
imul
jb
outs
data16
pop
ins
xor
dec
jno
ss
push
push
arpl
gs
inc
push
add
arpl
push
ins
jno
inc
xor
xor
arpl
je
inc
push
dec
push
xor
inc
dec
push
outs
push
add
push
pop
jp
dec
popa
pop
bound
jb
add
dec
xor
dec
dec
inc
jno
outs
cmp
outs
jae
add
imul
je
push
push
inc
pop
xor
add
imul
je
ins
fs
push
je
jae
jne
xor
push
inc
push
pop
inc
add
inc
dec
inc
pop
pop
xor
add
jo
push
cmp
inc
add
push
outs
push
ins
dec
push
dec
gs
aaa
push
aaa
bound
je
xor
cmp
inc
outs
push
add
dec
ja
ja
push
push
inc
jo
jne
add
dec
dec
je
jbe
xor
push
addr16
ja
inc
inc
add
fs
push
imul
dec
je
dec
arpl
aaa
inc
cmp
fs
push
push
push
aaa
dec
bound
inc
push
pop
outs
add
jo
imul
inc
popa
imul
add
ss
jbe
ss
pop
jae
add
jp
jae
pop
aaa
push
jo
jns
fs
add
cmp
dec
imul
arpl
push
push
popa
pop
add
xor
bound
push
add
outs
outs
inc
inc
dec
inc
push
add
imul
pop
arpl
outs
add
ins
gs
push
dec
pop
inc
push
cmp
xor
inc
cmp
inc
imul
inc
jno
inc
xor
dec
pop
dec
add
ins
pop
arpl
addr16
ins
pop
add
xor
inc
inc
xor
outs
inc
push
inc
je
jb
push
cmp
inc
xor
xor
outs
inc
dec
jno
inc
dec
outs
dec
inc
jp
js
dec
inc
push
add
jbe
dec
bound
inc
push
push
outs
addr16
push
add
arpl
ins
popa
jp
ja
jns
cmp
cmp
ss
push
pop
push
ins
inc
aaa
add
jns
dec
imul
imul
xor
jae
add
jb
imul
imul
dec
data16
push
push
outs
push
jb
push
arpl
xor
dec
jno
add
jb
pop
dec
ja
jns
add
jo
jns
push
jbe
inc
xor
add
imul
dec
bound
xor
jno
data16
dec
inc
push
jbe
addr16
push
xor
push
xor
push
inc
jbe
imul
je
bound
inc
outs
inc
arpl
pop
dec
inc
dec
inc
inc
push
add
push
outs
push
push
xor
add
jp
inc
je
inc
xor
dec
inc
push
jp
imul
jp
popa
add
push
xor
inc
push
push
add
pop
jb
ins
dec
bound
xor
push
js
xor
fs
push
dec
add
push
outs
gs
imul
inc
outs
outs
outs
imul
xor
je
imul
jp
add
push
dec
inc
js
inc
imul
add
aaa
ja
jne
pop
dec
xor
xor
jb
arpl
arpl
add
popa
xor
xor
push
ins
cmp
pop
add
jp
outs
push
pop
cmp
dec
add
pop
jae
pop
cmp
push
push
cmp
push
jb
push
outs
push
dec
aaa
bound
add
ja
push
inc
inc
xor
push
xor
add
jne
dec
pop
xor
inc
jbe
jb
fs
add
push
dec
jne
push
arpl
dec
pop
push
popa
push
push
jp
imul
dec
js
jns
add
inc
dec
bound
dec
ins
push
dec
inc
jo
add
jae
dec
imul
inc
ss
add
jp
gs
jne
dec
push
jae
jns
dec
cmp
ja
xor
pop
xor
js
cmp
dec
pop
jb
xor
inc
add
arpl
inc
jno
dec
push
dec
xor
addr16
outs
jb
dec
dec
dec
add
imul
xor
dec
add
push
xor
xor
add
push
inc
pop
xor
pop
dec
xor
inc
jns
inc
push
jbe
ins
inc
jae
jns
add
inc
push
jo
je
ja
bound
xor
dec
xor
pop
pop
dec
imul
outs
imul
push
dec
gs
outs
add
jbe
pop
arpl
inc
jo
xor
xor
jne
push
aaa
push
push
dec
inc
imul
dec
add
xor
outs
fs
add
outs
xor
jo
je
dec
outs
gs
push
dec
dec
jno
outs
push
push
push
pop
inc
dec
push
jne
push
pop
bound
outs
outs
dec
push
popa
cmp
fs
inc
add
ss
push
bound
inc
ins
push
push
dec
inc
pop
dec
add
xor
imul
dec
dec
add
addr16
addr16
push
xor
imul
jns
arpl
je
jb
inc
je
add
xor
js
pop
add
jns
jbe
popa
ja
jno
add
xor
imul
xor
inc
jns
jns
add
fs
jbe
jne
dec
inc
gs
add
push
jb
ss
xor
add
cmp
xor
push
xor
outs
push
dec
add
jp
ins
outs
xor
pop
cmp
push
jb
add
imul
dec
pop
outs
xor
jb
imul
inc
inc
push
popa
jae
jne
inc
dec
push
add
push
inc
push
arpl
inc
xor
popa
pop
ins
inc
push
pop
inc
dec
popa
outs
jno
add
outs
dec
imul
popa
add
data16
inc
dec
dec
jb
ins
inc
dec
xor
add
push
inc
jo
pop
jb
dec
push
jp
imul
dec
dec
arpl
inc
inc
dec
push
add
ss
inc
push
pop
pop
inc
xor
push
cmp
push
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jbe
jb
imul
inc
outs
fs
je
jb
bound
add
jae
gs
cs
arpl
imul
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
jns
ins
add
add
add
arpl
inc
add
add
jb
imul
ins
add
pop
inc
add
add
je
add
add
jb
jns
jo
je
outs
add
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jb
outs
add
add
je
jns
dec
add
data16
add
push
add
je
push
add
ins
add
add
and
jns
jae
je
add
add
arpl
je
imul
je
outs
add
add
add
je
add
outs
add
je
popa
add
arpl
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
inc
add
jns
jo
je
outs
add
add
outs
add
data16
jb
ins
add
daa
push
add
popa
add
jae
data16
jb
ins
add
imul
ins
add
ins
add
arpl
imul
or
outs
add
je
push
add
ins
add
add
push
add
jae
je
add
add
add
add
add
outs
add
add
add
add
add
or
ins
add
add
add
add
jae
je
add
add
add
outs
add
jb
arpl
add
add
add
outs
add
jb
arpl
add
popa
add
popa
add
add
add
dec
pop
dec
add
dec
sub
dec
sbb
or
dec
js
inc
dec
dec
dec
sub
jne
push
dec
inc
dec
or
dec
cs
pop
dec
push
dec
pop
dec
or
dec
sub
dec
or
dec
jne
pop
dec
sbb
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
jae
jae
add
bound
ins
add
add
inc
add
je
inc
add
add
jne
je
imul
inc
add
jae
add
bound
ins
add
add
inc
add
je
dec
add
push
add
je
add
dec
or
dec
pop
dec
pop
dec
arpl
dec
or
dec
jb
sub
dec
xor
dec
sbb
dec
imul
dec
sbb
dec
add
dec
dec
jns
imul
dec
and
dec
add
inc
dec
jo
bound
cmp
outs
dec
adc
dec
jnp
imul
adc
dec
inc
dec
push
dec
inc
dec
and
dec
sub
ss
pop
dec
js
sub
dec
pop
dec
cmp
dec
jle
pop
dec
add
sub
dec
push
dec
and
adc
dec
push
dec
cmp
dec
xor
and
dec
dec
dec
push
dec
adc
dec
cmovle
dec
xor
dec
add
push
add
jae
je
add
add
je
jb
imul
pop
add
add
inc
add
je
push
add
ins
add
add
pop
push
add
jae
je
add
add
add
jne
jb
imul
add
jb
jns
jo
je
outs
add
jb
popa
add
push
add
imul
add
add
add
outs
add
add
add
pop
dec
add
jns
add
add
dec
add
popa
add
adc
je
jb
jns
push
add
imul
add
push
add
jae
je
add
add
add
ins
add
arpl
je
imul
add
add
add
add
outs
add
outs
add
or
jbe
outs
add
add
add
add
xor
jbe
addr16
sahf
fwait
aas
mov
and
add
mov
pop
push
sbb
mov
add
add
add
or
add
or
or
add
sbb
sbb
pop
add
sbb
sbb
add
add
add
pop
add
sbb
sbb
adc
sbb
and
add
add
add
add
add
sbb
sbb
push
pop
add
add
sbb
add
or
or
sbb
push
pop
push
adc
sbb
sbb
adc
or
add
push
push
sbb
sbb
pop
adc
push
sbb
sbb
sub
and
sub
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
adc
add
sbb
and
adc
adc
add
adc
push
push
and
sbb
sbb
sbb
or
and
sbb
add
add
push
or
add
xor
push
add
sub
cmp
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
sbb
jns
je
ins
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
imul
gs
imul
outs
outs
add
add
push
add
push
add
and
add
push
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
